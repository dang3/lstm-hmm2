mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
test
sub
xorb
je
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
and
or
mov
sub
push
fbld
xchg
mov
or
mov
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
pop
pop
pop
out
mov
jle
sbb
mov
or
cmp
add
sbb
fdivr
vandnps
cmp
ja
mov
mov
hlt
iret
pop
inc
sbb
aas
and
adc
add
push
push
push
xor
pop
fld
ret
xorb
rclb
call
mov
jp
mov
mov
sub
sbb
ret
sub
inc
sub
lcall
fdivrl
sarl
mov
inc
repz
sahf
ss
leave
jmp
mov
jmp
mov
mov
inc
outsl
add
adc
stos
nop
sbb
mov
mov
cmp
ja
je
dec
js
rep
xchg
jbe
xor
lea
xor
std
xor
push
xlat
add
add
addb
fucomi
ret
pop
jmp
roll
dec
adc
mov
cmp
jbe
cmpb
xchg
cmpb
add
out
in
mov
jmp
dec
fcmovnu
inc
cmp
xor
push
shrb
roll
ljmp
jne
in
sbb
scas
or
ja
push
mov
mov
xor
jmp
inc
mov
adc
mov
mov
inc
aam
mov
adc
cmc
shl
pop
pop
movsl
or
into
test
clc
lahf
push
addb
in
xchg
mov
divb
push
push
jno
iret
add
ss
jmp
and
mov
scas
mov
ja
sub
data16
aas
mov
dec
jmp
mov
popa
jb
cmp
sti
jp
add
ret
nop
mov
fldcw
adc
pop
push
sub
fists
fwait
pop
pop
pop
fidivrs
sub
inc
add
add
fldcw
test
pop
fldcw
pop
inc
test
in
inc
xchg
sub
jl
mov
and
xor
out
fucomip
cmp
mov
jbe
mov
add
pusha
je
mov
insb
pop
clc
in
and
jnp
or
movl
cli
in
sub
and
loope
jg
mov
sbb
call
mov
or
lea
push
and
hlt
add
add
decb
xor
addb
addb
push
mov
xor
into
pop
fwait
loope
push
es
push
addl
mov
cs
cwtl
imull
dec
pusha
push
in
mov
jo
fisttpl
sbb
jecxz
push
push
imul
adc
cs
adc
sub
in
pshufw
je
add
pushw
andb
xlat
mov
push
or
fucomp
daa
das
inc
add
push
sarb
adcl
cli
cmpb
mov
push
jge
push
push
push
lea
push
sbb
lock
jp
cmp
mov
cmpl
out
jne
dec
add
pushl
outsl
out
in
adc
sub
jbe
xchg
push
aaa
ret
iret
xor
mov
loop
rorl
ds
inc
sbb
mov
jae
fs
mov
cmp
sub
out
push
xchg
sub
sar
mov
out
dec
jne
jmp
lea
push
fmull
xor
dec
popa
push
hlt
mov
call
pop
push
push
hlt
jmp
cmc
jne
movsb
sbbl
mov
pop
mov
mov
cs
dec
push
stos
xor
rclb
imul
inc
fdivl
leave
mov
lea
adc
mov
sahf
jbe
and
push
push
insl
ret
ret
push
lea
pop
call
das
movb
insb
lcall
pusha
cmovns
jmp
loopne
jmp
shll
fucomi
pop
cmp
sbb
ret
xlat
and
push
rcl
and
push
sbb
sbb
jmp
or
and
fdivs
negb
pop
imul
and
cwtl
adc
sub
sbb
fcmovnb
lret
adc
mov
adc
push
fadds
mov
aaa
push
loopne
scas
xchg
mov
mov
xor
mov
inc
add
mov
adc
enter
rorl
add
mov
jbe
sbb
lock
jmp
mov
mov
sbb
lret
mov
mov
inc
inc
and
xor
arpl
push
xchg
inc
inc
dec
pusha
add
push
rcr
ljmp
pop
cmp
jne
dec
je
mov
add
aaa
cmpl
mov
lock
or
loop
push
adc
add
and
je
imul
dec
je
mov
cmp
jne
or
jg
push
adc
add
adc
cmp
jne
shr
or
adc
add
push
mov
shr
repz
loope
mov
inc
dec
dec
pop
repz
out
add
or
ret
and
imul
dec
dec
dec
and
int
dec
sbb
fistpl
std
xchg
adc
xchg
mov
mov
shl
or
jae
or
mov
cmova
jl
pop
daa
push
mov
outsb
mov
fstpt
push
inc
cmp
je
mov
or
je
or
je
fstp
pop
imul
push
xor
ficomps
dec
inc
test
jmp
or
ret
or
cmp
ja
lea
push
add
shll
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fidivrl
je
andb
and
sar
adc
or
push
filds
aad
cwtl
pop
xor
mov
rclb
mov
inc
imul
mov
add
sbb
fidivrs
pop
mov
imul
push
jmp
and
cmp
xor
js
push
sub
cmp
jg
add
rcll
shrl
jnp
add
push
mov
ficoml
and
dec
or
nop
inc
mov
stos
pop
mov
sbb
mov
mov
pop
and
and
ret
pop
test
jg
movsl
sub
push
idiv
add
lock
dec
and
or
jmp
add
sub
cmp
pusha
ss
lahf
mov
pushl
and
cmp
ss
das
lcall
sbb
repz
mov
add
in
repz
sub
xchg
lods
loopne
fwait
cli
jge
dec
je
adc
lea
decl
pop
lea
fldt
fsubr
add
addr16
pcmpeqb
cltd
xor
std
sbb
mov
inc
das
ss
adc
xchg
mov
inc
idivl
push
fstp
fldt
pusha
and
adc
out
mov
add
adc
mov
jl
leave
inc
cli
or
or
ret
in
lahf
and
adc
mov
xchg
vpcomgtud
xchg
and
inc
mov
pop
adc
es
test
std
xor
out
sub
pop
jecxz
add
leave
sbb
pop
lds
mov
jbe
imul
cmp
mov
mov
mov
lods
lods
inc
cmpb
xlat
fadds
rep
lods
outsb
xor
xchg
push
or
push
push
int3
into
sbb
sar
cmp
decl
mov
push
pop
test
enter
movsl
outsl
movsl
push
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
call
mov
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
pushl
lcall
clc
repz
mov
subb
and
and
clc
lcall
outsb
bound
xor
jmp
fcmovnbe
fidivrs
shll
cmp
jne
push
pop
cmp
pop
add
insb
repz
push
add
addr16
mov
test
cld
push
or
push
add
fcompl
repz
scas
hlt
push
push
mov
movl
xor
hlt
push
data16
add
cwtl
aam
lock
inc
sub
cmpsb
out
cltd
mov
mov
jmp
push
clc
pop
fwait
or
icebp
aas
or
mov
dec
incl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
aaa
scas
cld
imul
jne
fninit
fwait
add
call
mov
push
in
xlat
mov
xor
mov
inc
rep
push
or
jmp
jg
push
mov
or
dec
cld
jne
dec
mov
xor
and
jne
sub
mov
fdivs
inc
fsubl
xchg
adc
lock
inc
sub
pop
pop
rcrb
fs
aaa
inc
sti
jle
mov
add
outsl
test
or
pop
xor
jl
movups
fs
shll
ret
xor
pop
icebp
pop
gs
int3
outsb
loopne
mov
or
push
cld
std
mov
ret
jl
mov
xor
push
shr
dec
rep
testb
mov
sub
movsb
add
pop
fcoml
cmp
je
pop
mov
add
incb
sbb
push
push
mov
mov
push
sbb
fildl
jecxz
lods
mov
mov
mov
sub
inc
cmp
mov
cmp
jb
jb
add
jmp
rolb
popf
inc
add
add
adc
push
lahf
fcomip
in
icebp
push
mov
mov
pop
xchg
cmp
mov
sub
sbb
add
lock
push
ret
stc
push
push
mov
push
add
pop
call
push
fildll
dec
setne
scas
jbe
cmp
lods
push
sub
pop
mov
das
test
imul
mov
cmp
fdivl
add
jo
fmull
or
jne
js
inc
rorl
push
inc
inc
fcompl
vmovdqa
mov
and
add
sub
mov
sarb
idiv
push
mov
mov
cmp
je
mov
leave
jne
mov
add
es
jmp
lret
adc
les
push
add
repnz
je
pop
in
negb
loop
inc
pop
add
sub
mov
pop
cs
xchg
add
ret
dec
sub
jmp
pop
mov
int3
mov
mov
xor
das
mov
rorb
out
sbb
lds
push
inc
rorb
xor
sub
data16
sbb
push
stos
pop
lcall
mov
push
ds
sbb
js
xchg
adc
je
movb
dec
push
cmp
sbb
add
dec
jne
icebp
dec
sar
jnp
jmp
push
jmp
add
sbb
jecxz
mov
cmp
fistps
xor
sbb
rcrb
sbb
jmp
lahf
fdivs
in
push
pop
add
mov
jl
ljmp
out
push
hlt
xor
adc
mov
mov
movl
test
cmp
or
inc
cmp
sub
mov
or
dec
mov
adcl
movsl
sbb
xor
call
mov
dec
je
in
enter
mov
pop
scas
cmpb
jecxz
addb
cli
in
push
call
jae
aaa
mov
push
pusha
push
mov
dec
jae
cmp
cmp
pop
iret
mov
repnz
add
add
rcrl
sub
or
jae
addr16
pop
idivb
fsts
and
sbb
jmp
sub
movsbl
inc
inc
jmp
add
sbb
sbb
jecxz
shlb
xor
adc
loop
fdivrl
rorb
adc
les
pop
test
inc
add
jne
scas
jl
cmp
inc
mov
dec
adc
outsb
pop
ja
jg
daa
mov
je
jae
pop
adc
sahf
cld
mov
cmp
cli
out
push
je
sbb
sbb
jb
jbe
test
cwtl
mov
and
push
pop
fwait
mov
sti
cmp
stos
pop
cmc
enter
enter
adc
adc
test
or
push
jns
sub
orl
out
ja
loopne
push
sbb
push
sub
push
add
sbb
add
decl
jbe
outsl
or
inc
add
xchg
sbb
mov
pusha
jmp
xlat
xor
mov
nop
cmovno
xor
pop
mov
xchg
je
dec
jne
sahf
or
push
add
mov
fsubrp
pusha
adc
push
or
hlt
pop
adc
add
lds
pusha
mov
mov
sub
repnz
addb
filds
fdivrs
dec
fdivs
xchg
mov
mov
or
mov
jg
pushw
lock
mov
rolb
inc
jno
adc
inc
jmp
sbb
sbbl
push
adc
lahf
adc
adc
insl
or
inc
push
subps
pop
adc
dec
aam
adc
sbb
jmp
paddw
mov
popf
pop
cmpsb
movl
ret
pushf
ret
push
subb
xor
inc
outsl
or
mov
shr
aas
pop
push
push
push
push
push
mov
add
jns
and
loopne
add
mov
inc
sahf
sbb
lds
pusha
add
testl
jle
fdivs
pop
mov
mov
cmc
lea
jae
mov
push
cmp
push
pop
lods
pop
insl
mov
shlb
test
ret
mov
addl
add
stos
fidivrl
pop
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
ja
adc
xchg
cs
adc
jmp
sub
jmp
das
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
jg
lock
sbb
into
jmp
mov
mov
jmp
mov
jmp
or
lret
call
push
or
pop
xor
xor
or
leave
cmp
je
push
dec
mov
mov
jp
xchg
inc
pop
rorb
push
push
inc
sbb
mov
mov
loopne
mov
or
push
inc
sti
sub
mov
jo
cmpsb
push
sub
outsb
pusha
push
adc
stc
xor
adcl
scas
ret
ret
mov
enter
push
ret
in
aas
mov
or
sbb
cmp
cmpsb
add
or
stc
pushl
add
adc
es
test
mov
dec
dec
push
add
mov
mov
call
fdivrs
idivl
dec
mov
inc
fiadds
call
and
and
loope
jecxz
adc
js
jl
lret
or
pop
ds
mov
insb
mov
inc
mov
repz
add
add
das
fildl
cmp
jg
jns
insl
je
add
adc
and
fldl
fwait
mov
outsb
xchg
stos
mov
call
ss
bnd
cmp
or
adc
push
add
add
fadds
jbe
adc
dec
jne
pop
pop
pop
gs
add
dec
jmp
pop
pusha
pop
out
add
mov
xchg
or
xor
dec
sbb
push
add
push
adc
mov
xor
rorl
lock
mov
cmpsb
mov
js
xchg
nop
adc
mov
mov
push
test
sbb
sub
xchg
rolb
outsl
das
rcrb
adc
ja
add
mov
mov
jbe
movsl
pop
leave
pop
push
cmpsb
dec
add
das
rcll
cmp
mov
push
les
mov
orb
loopne
push
push
popa
push
jg
add
inc
inc
sub
or
pop
ret
mov
ss
aaa
mov
cmp
push
repnz
or
shlb
mov
sub
or
push
cmpl
adc
shlb
clc
mov
call
out
dec
outsb
icebp
jge
and
xchg
xor
daa
adc
xor
add
mov
mov
imul
jbe
fwait
inc
adc
or
shl
lock
or
cmp
je
es
insl
jo
jbe
pusha
movsl
or
data16
sbb
add
pop
cmp
lods
pop
or
adc
or
pusha
rclb
push
popf
jb
sub
aas
mov
jmp
mov
aam
pop
mov
dec
clc
dec
jl
lock
push
lea
push
int
ret
or
push
les
popa
xchg
inc
jle
sbb
add
or
mov
fidivl
dec
and
jge
je
inc
jg
cmp
ss
mov
pop
jne
jle
push
dec
sbb
pop
pop
jmp
jbe
xchg
adc
sub
xchg
xchg
jle
mov
jle
push
add
loopne
push
or
push
sti
pop
movw
loopne
mov
push
cld
sub
insl
faddp
sbb
ja,pn
mov
mov
push
xor
or
stc
mov
loopne
ds
test
fsubs
mov
push
xchg
push
mov
dec
bound
loopne
mov
jns
jo
clc
cmp
aaa
addb
les
xchg
mov
xchg
jo
or
mov
pop
lea
cmp
push
lock
sbb
mov
jle
enter
test
rcrb
sub
xor
shrl
dec
jnp
pop
pop
sbb
add
cmp
mov
call
loop
loope
fistpl
leave
mov
je
out
adc
nop
jle
add
pop
add
call
pop
sub
sbb
shr
pop
pop
sub
and
in
out
stc
cmp
je
push
addr16
in
add
stc
in
gs
add
or
xor
hlt
xchg
out
lret
jle
lock
pop
rcrl
rcrl
mov
add
and
pop
mov
fisubs
fnstcw
or
inc
jo
mov
xchg
aas
lock
lock
pop
add
aas
xchg
test
sbb
mov
ljmp
mov
loop
pop
and
mov
adc
mov
sahf
ret
das
sub
pop
daa
out
popa
cmpl
je
cmp
push
mov
cld
sub
jo
out
push
out
scas
rorl
inc
mov
cmp
mov
mov
cli
lds
push
sbb
pop
push
mov
dec
clc
mov
in
out
loope
lret
mov
push
fwait
mov
jae
cmpsb
xor
mov
jl
dec
in
cmp
outsb
xchg
dec
sbb
or
push
cmp
fs
dec
jne
or
sbb
mov
cld
jge
aam
cmp
pushl
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
adc
mov
mov
or
and
loope
mov
pop
lea
jmp
xchg
shll
rolb
push
sub
rolb
rorb
and
xor
cmp
cmp
adc
faddl
or
daa
push
and
jmp
aam
sub
or
cmpsl
notl
das
lods
pop
add
add
push
jmp
mov
je
push
jmp
mov
adc
cltd
lret
xchg
pop
adc
mov
shlb
cmp
and
movd
clc
filds
es
jl
cmp
jge
sub
jbe
scas
xor
mov
jg
push
fnsave
adc
inc
aad
call
jmp
and
mov
cmp
lret
jl
sub
mov
clc
fisttpl
inc
sub
add
lea
inc
dec
lret
shld
cmp
mov
pop
or
lahf
cltd
mov
push
mov
jle
ds
dec
jge
cmp
adc
imul
mov
fsubs
push
mov
lea
lock
sub
sbb
add
mov
adc
add
pop
inc
pushf
xor
mov
push
insb
dec
js
mov
add
jb
adc
adc
call
lret
fcoml
push
faddl
mov
cmpsl
and
push
int3
or
aas
inc
dec
out
and
sbb
push
aam
or
loopne
xor
sbb
jecxz
mov
jo
lods
jmp
out
aad
divb
arpl
cli
pop
cmp
fisubl
pop
jg
rcrl
enter
ljmp
in
jne
clc
sbb
push
lretw
hlt
sahf
shrb
pop
mov
jo
or
fisubl
dec
xchg
ret
std
add
clc
push
std
add
sbb
pop
mov
push
addr16
push
push
das
sbb
push
fldenv
sub
dec
dec
lea
cltd
aad
out
push
cmp
call
mov
scas
mov
test
in
jno
nop
pop
je
cmp
jmp
pop
add
pop
call
and
rorb
add
xchg
adc
and
cmp
push
lock
or
dec
push
das
int3
call
pushl
mov
and
or
scas
add
and
add
add
pop
xor
cmp
cmpl
push
add
nop
and
mov
and
pop
sbb
push
or
sbb
je
shrb
or
adc
fwait
ret
mov
jge
ds
pusha
clc
xchg
lock
jge
pop
dec
cmp
nop
pop
out
dec
negl
cmp
push
lods
add
pop
out
loop
add
cmp
je
daa
test
cli
cltd
cmp
les
stos
test
jmp
pop
adc
enter
sub
xor
mov
pop
movsb
cli
ja
lea
mov
mov
mov
adc
aas
cwtl
cmp
arpl
mov
scas
push
add
or
lcall
cmp
je
cmp
je
cmp
je
cmp
mov
je
mov
pop
adc
push
or
mov
in
jp
clc
jmp
adc
or
push
pop
sbbb
aad
push
or
scas
pusha
rcrl
cs
adc
cmp
pop
jmp
push
push
jbe
xor
lock
in
push
jmp
enter
cwtl
xchg
mov
or
call
loope
adc
cmp
loopne
repz
add
and
iret
push
pop
jbe
test
push
mov
inc
pop
test
int3
jg
dec
out
mov
pop
int3
fdivrs
daa
ja
cmp
jmp
and
xor
push
dec
insb
sub
jmp
in
pop
dec
inc
test
cmp
lods
subb
test
test
pop
loope
xor
and
icebp
jmp
push
daa
xchg
xchg
sub
dec
cmpl
test
adc
dec
popa
pop
add
in
cs
clc
inc
add
cld
les
push
push
add
push
mov
mov
into
or
pop
push
mov
cmp
xor
outsb
outsb
or
je
or
dec
or
jo
mov
pusha
pusha
adcb
mov
push
mov
adc
fs
add
ret
xchg
jmp
and
in
sbb
jl
adc
scas
mov
call
lock
mov
mov
jmp
aas
cs
fidivl
xchg
ret
xor
mov
pop
push
mov
dec
adc
and
xchg
roll
dec
jne
lods
ss
rclb
sbb
fistpll
dec
pop
or
insb
and
mov
dec
movsl
jb
in
inc
push
popa
dec
enter
xchg
pushf
jg
push
dec
mov
jne
lds
jl
inc
fwait
cmp
push
imul
adc
test
les
cmp
cmp
or
ja
loopne
mov
sti
add
add
inc
ljmp
icebp
loop
mov
jo
add
je
cmp
aaa
leave
cltd
or
daa
cmp
xor
adc
jecxz
lock
pop
movsb
call
inc
sub
inc
jo
lods
call
lods
pop
pop
add
and
push
add
inc
xor
push
inc
mov
pop
aaa
jo
test
mov
out
enter
mov
ds
sbb
clc
mov
adc
popf
cmc
lea
and
shrl
and
add
dec
adc
pop
pop
ret
xorl
mov
or
outsl
test
push
or
fbstp
aam
or
sub
jl
fstp
scas
pop
lret
add
jne
sbb
or
std
inc
jmp
cmp
jne
mov
inc
and
sub
test
cmp
je
daa
xor
pop
loopne
cs
imul
add
ljmp
inc
movsl
mov
sbb
mov
and
loopne
out
xor
sbb
aaa
jmp
pop
jo
mov
mov
jmp
jl
insb
sub
inc
sub
jbe
jmp
jg
mov
cltd
aas
cld
adc
movsb
shrb
push
or
add
adc
rcrb
xor
mov
pop
lods
inc
xor
ljmp
movsl
mov
mov
inc
xchg
neg
push
cmp
add
sub
testl
shlb
das
jg
jp
or
pop
inc
sub
push
orb
adc
jmp
sub
pop
or
add
jmp
setb
jmp
setl
cmp
je
dec
add
mov
or
mov
mov
mov
in
push
mov
test
jmp
jmp
scas
pop
pop
xchg
inc
jo
xchg
loopne
lods
xor
pop
add
lods
push
loope
add
sbb
pop
mov
mov
lods
rolb
xor
aaa
jmp
and
push
push
into
inc
add
inc
pop
push
test
les
push
call
test
adc
notb
mov
dec
imull
dec
in
in
cmp
pushl
fidivl
or
xor
inc
cld
loopne
jge
jge
and
in
add
fildl
imul
sub
add
sbb
enter
mov
stc
mov
pop
decl
stos
xor
fcoml
lret
testb
jge
or
sbb
jecxz
test
insb
inc
push
inc
je
and
mov
mov
fldl
sti
in
add
mov
or
js
lock
lock
test
sarl
cmpl
jle
cwtl
or
shrl
xchg
dec
jo
and
add
or
pusha
mov
fdivr
push
dec
jne
enter
sub
cmp
add
jne
pop
sub
sbb
clc
jae
lds
pop
jo
xor
pusha
push
out
adc
push
loopne
pop
outsl
push
loop
cld
xlat
dec
mov
sub
je
mull
sarl
into
pop
cmp
add
xor
ja
xlat
cmp
jle
repnz
lds
jle
inc
orb
mov
or
mov
adc
mov
push
mov
hlt
jo
cmp
mov
inc
xor
jge
add
push
xor
sbb
xchg
dec
push
sub
je
xchg
test
xchg
cmp
roll
test
rcll
sub
pusha
xor
lock
jne
mov
push
mov
adc
push
aam
pop
and
in
into
mov
stc
adc
ret
mov
push
push
mov
incl
movsl
pop
pop
mov
in
sbb
shrb
jge
add
ss
mov
cwtl
inc
sbb
pop
inc
xor
es
fs
dec
jne
out
pop
clc
enter
repz
sub
xor
ret
add
or
bound
jno
and
outsl
mov
add
sbb
add
cli
inc
aam
sbb
aas
add
inc
shl
ret
jmp
dec
mov
test
out
pop
nop
mov
fmuls
js
xor
cmp
jnp
mov
cwtl
inc
inc
push
inc
push
push
and
pop
test
je
call
rcrb
imull
sub
in
sbb
out
fiaddl
js
pop
jne
add
fdivrs
mov
xor
xlat
dec
push
and
mov
ljmp
rcr
mov
mov
dec
ret
imul
mov
add
inc
cmp
dec
flds
add
push
gs
imul
out
and
je
std
fs
pusha
xor
rorb
cmp
fwait
jg
movb
ret
dec
push
push
nop
scas
insl
ret
mov
xchg
lahf
test
dec
jmp
pop
lods
lret
imul
gs
xor
cs
fucomip
fs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
sub
lret
loopne
sbb
mov
movb
int3
push
data16
pop
sbb
xor
fs
xchg
and
in
icebp
or
pop
pop
or
push
mov
sub
out
and
int
pusha
pusha
cmpsl
fstpt
iret
les
add
test
int
push
repnz
pusha
sbb
mov
pushf
and
push
lods
repz
movzwl
pop
mov
mov
mov
js
jecxz
jge
data16
fs
imul
negb
add
cmp
stos
pop
cmp
jne
adc
sahf
push
push
inc
and
cmp
jecxz
sub
sbb
add
lods
mov
fs
fbstp
ljmp
mov
xchg
adc
add
mov
outsl
data16
popa
jb
inc
push
mov
or
jae
aaa
mov
inc
cltd
dec
aam
pop
cmp
ja
hlt
mov
xchg
lea
cmp
jo
test
hlt
xchg
fldt
and
fucomip
sbb
mov
aaa
sbb
out
jp
mov
sub
mov
fmuls
in
add
fsts
ret
dec
adc
outsl
cli
mov
mov
lea
scas
cmp
shlb
inc
dec
add
ret
ds
or
xor
mov
movsl
loopne
mov
sbb
test
mov
je
cmovo
pusha
stos
cmp
and
or
push
das
pusha
sti
repz
add
mov
pop
mov
test
mov
cmp
jne
addl
inc
mov
pop
mov
ret
mov
call
and
sahf
sub
bound
push
lock
xchg
lock
mov
and
insl
pop
shlb
sahf
je
xchg
popa
sahf
mov
mov
or
push
mov
outsb
pop
daa
pop
sbb
mov
pop
pop
ret
sbb
adc
sub
inc
inc
test
lods
pop
inc
pushl
lock
mov
or
xchg
jp
pop
das
sub
call
mov
add
or
loope
and
fcomps
js
inc
xor
mov
movsb
ret
test
jnp
insb
jns
and
scas
sbbb
cld
call
mov
sub
cmp
outsl
mov
arpl
pop
pushf
je
push
fidivl
leave
inc
xchg
jmp
jg
sub
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
dec
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
aaa
in
outsl
out
adc
sbb
and
lret
add
jmp
pusha
add
dec
outsl
out
imul
or
sub
sti
cmp
jb
or
dec
movb
and
ror
mov
jbe
pop
mov
inc
add
jb
lea
ret
mov
mov
mov
hlt
add
lock
push
and
rcl
sbb
push
cmc
fdiv
adc
clc
pop
add
inc
test
je
or
jae
test
aas
and
je
cmp
adc
mov
and
cmp
jne
cmp
cwtl
and
mov
rorl
data16
jg
dec
cld
mov
mov
inc
lcall
cmp
xor
ficoml
or
sub
and
jmp
adc
inc
mov
ret
xor
mov
inc
adc
in
xorb
mov
daa
or
jb
inc
mov
int
out
daa
out
mov
adc
sbb
jns
rclb
mov
jge
push
je
adc
lea
push
fdivrs
add
mov
or
and
jnp
add
pop
pop
sub
or
test
lret
push
jmp
adc
repz
fs
std
pop
nop
dec
dec
enter
cmp
mov
hlt
enter
test
dec
pop
mov
inc
ds
cmp
cmp
enter
cmp
and
push
cmp
cmp
cmp
pop
leave
cmp
pop
gs
mov
push
rcll
jmp
gs
add
xor
push
cli
arpl
ljmp
sbb
add
pop
sub
jle
in
rcr
clc
aaa
mov
shlb
pop
mov
lock
shlb
adc
lea
push
push
lock
jp
ljmp
and
neg
cmp
pop
rclb
andb
bound
push
xchg
out
sub
add
movsb
and
dec
fldcw
call
lcall
jne
outsb
scas
clc
subl
test
cld
movb
mov
and
and
inc
je
xchg
loopne
cwtl
adc
dec
mov
cmp
adc
and
and
in
or
xchg
mov
pop
loop
inc
mov
mov
pop
lods
lods
sub
clc
add
les
test
jmp
dec
mov
cld
mov
cwtl
mov
xor
jmp
insb
xlat
cmp
cmp
rorb
push
push
pop
fisttpll
push
or
and
inc
dec
adc
lock
cmpsl
xor
and
or
jmp
dec
ja
fstl
push
push
aaa
sbb
mov
jnp
and
mov
clc
xchg
mov
ret
adcb
ret
mov
xor
lret
sub
into
mov
mov
lods
sub
out
fldlg2
cmp
mov
out
mov
xor
jg
xor
fsubrl
cmp
cmp
loopne
sub
sbb
or
ss
pop
pusha
mov
pop
mov
in
insb
push
pop
es
inc
mov
sti
push
add
add
push
or
lods
xchg
or
and
mov
add
xor
add
fbstp
outsl
fs
gs
out
shr
push
gs
inc
adc
outsb
add
and
insb
adc
dec
jg
inc
push
outsl
arpl
inc
gs
jne
je
fcmovnu
call
outsl
je
imul
mov
gs
outsl
inc
int3
fsubp
fisubl
lods
or
or
or
neg
jle
inc
xor
xor
outsl
insl
bound
outsl
js
and
idiv
imul
ja
nop
xchg
cmp
jo
sti
andps
outsb
dec
inc
xor
je
stc
xor
cmp
push
jns
jb
push
dec
dec
xchg
xor
cmp
sbb
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
mov
add
xor
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
pushf
pushf
sarb
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
nop
mov
pushf
cmpb
pushf
pushf
pushf
jo
push
pushf
pusha
movsb
xor
dec
les
mov
daa
mov
lods
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
insb
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
xchg
daa
daa
daa
add
cld
xor
hlt
lock
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
leave
leave
enter
xor
leave
leave
leave
leave
and
xor
leave
leave
leave
cmp
sbb
leave
leave
leave
leave
adc
or
fs
leave
add
cld
ss
in
in
hlt
lock
call
in
leave
in
in
aam
int3
mov
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
insb
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
sbb
pop
enter
adc
mov
mov
xor
pushf
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
xor
in
fs
hlt
lock
in
in
call
in
in
aam
movzwl
aam
iret
clc
shl
or
repnz
xchg
clc
mov
inc
imulb
je
fxch
and
or
mov
popf
nop
xor
mov
loope
sar
scas
push
dec
movswl
add
sahf
add
inc
and
xchg
pop
jae
mov
adc
and
xor
jg
dec
cmp
push
arpl
test
sahf
or
add
pop
add
pop
xchg
mov
rorl
adc
repz
adc
sbb
and
ss
jnp
push
push
push
push
fs
inc
sbb
sbb
cmpsl
mov
stos
and
daa
stc
mov
push
addr16
push
or
pop
push
ds
orl
push
push
pop
pop
rcrb
push
sbb
loopne
aam
push
lds
dec
shll
or
inc
cmp
or
inc
pop
or
xchg
repz
add
gs
jne
sti
das
push
dec
inc
inc
dec
add
outsl
loop
jle
sti
and
dec
push
inc
push
dec
pop
and
mov
dec
push
push
pop
sub
push
inc
dec
pop
dec
and
inc
push
das
push
loope
xchg
or
js
jne
sbb
dec
jbe
sbb
and
inc
lret
nop
jl
lock
movsb
xor
psllw
repz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
xlat
in
in
fcomp
fcmovu
in
in
in
in
rol
ret
in
in
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movsl
cmpsb
cmpsl
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
out
nop
xchg
popa
jns
leave
add
ds
mov
push
inc
imul
hlt
lcall
push
or
popa
jb
push
repz
mov
lock
bound
lock
lahf
add
je
pop
out
pop
ss
adc
inc
js
xorl
imul
adc
in
repnz
movsb
jns
movb
mov
mov
mov
mov
call
jp
inc
dec
jne
dec
dec
gs
outsl
jb
lea
mov
outsb
jnp
outsl
jle
push
or
outsb
mov
push
mov
or
or
push
mov
mov
shrb
sbb
adc
and
jl
cmp
sbb
stos
in
mov
and
decl
inc
inc
imul
outsl
nop
rcl
mov
push
popa
outsb
sub
add
jge
cmp
outsb
jbe
jb
insb
outsl
ja
mov
and
test
dec
mov
adcl
push
push
leave
xchg
fdivrl
jge
jbe
inc
sti
cmp
imul
xor
or
inc
or
insl
jle
in
insl
mov
mov
rcl
scas
pop
shll
andnps
cmp
addr16
cmp
jg
popa
cwtl
add
mov
mov
dec
cwtl
mov
or
popa
pop
jo
or
inc
popa
jae
lea
pop
sbbl
call
shrb
jb
xchg
push
adcb
addb
push
adc
mov
popa
sbb
mov
cmpsb
push
push
jb
insb
cmp
out
xor
sbbl
adc
inc
fisubl
add
or
je
insb
inc
or
ds
pop
xchg
rol
sub
cmp
mov
add
xchg
mov
popa
faddl
fcmovb
mov
js
sub
push
bound
cmpb
push
pusha
adc
jo
nop
pop
push
js
orl
and
inc
push
stos
push
or
ds
in
inc
mov
data16
mov
adc
cs
xor
pop
dec
invd
pop
lds
mov
out
inc
jo
add
cmp
add
push
push
mov
fisttps
mov
push
adc
jb
and
loop
popa
pinsrw
xor
push
int3
add
in
inc
shrd
loopne
int
lock
aam
orl
jno
jnp
pushf
out
sahf
test
popa
imul
push
mov
jnp
sbb
push
loopne
sbb
lods
or
inc
mov
in
xor
aas
xor
push
adc
outsl
js
fdivrl
dec
jne
push
mov
and
push
push
fcomps
fsubs
ret
arpl
cmp
aas
test
ret
adc
in
add
div
mov
adc
push
lret
mov
mov
std
in
leave
mov
or
in
ret
push
cmp
repnz
aas
mov
dec
les
lods
adc
lock
xor
ret
stos
mov
movsl
pop
mov
loope
jg
unpckhps
adc
dec
add
or
cltd
mov
pop
pop
or
jg
phaddw
mov
mov
sub
or
orl
test
adc
mov
add
mov
inc
inc
dec
lock
ja
xor
push
inc
pop
add
sbb
or
mov
cmp
jbe
cmp
repz
je
movzbl
push
push
lcall
insb
shr
add
mov
repz
jne
mov
out
add
inc
inc
ds
mov
sub
or
xchg
push
scas
out
and
sti
je
loopne
out
sub
pop
pop
jne
adc
push
cld
lock
jbe
mov
jg
ss
ret
pop
add
xchg
inc
testb
fcomp
push
cmp
xchg
sub
aam
in
push
adc
xchg
ret
jle
sbbb
jo,pn
sub
mov
add
add
int3
ss
jnp
push
adc
or
mov
cli
jg
add
ret
dec
mov
repz
addb
std
jl
jmp
jbe
adc
test
in
mov
sub
clc
push
sub
inc
mov
enter
push
cmp
mov
outsb
insl
sub
xchg
mov
pop
test
mov
and
pusha
filds
repz
fistps
je
je
ljmp
xor
sub
cmp
push
jmp
sub
cld
or
inc
jmp
daa
and
aaa
push
pop
rcll
add
adc
jae
jne
pop
mov
test
inc
in
aas
aaa
mov
stc
loope
jne
add
sbb
iret
nop
in
das
xor
lcall
adc
outsb
add
jmp
add
pop
or
sbb
push
lock
cmpb
xor
and
push
cmp
outsl
clc
or
int3
out
jge
pop
lock
push
mov
cmpb
in
push
mov
xchg
cmp
scas
test
aaa
mov
sbb
sub
std
arpl
mov
adc
jae
cmp
jl
inc
mov
stos
mov
add
push
pop
or
jae
inc
dec
rorl
or
jne
pop
decl
jp
jns
idivl
mov
inc
dec
xchg
ret
dec
aam
sarb
div
dec
ds
ljmp
pop
mov
add
pop
pop
sub
sub
jbe
das
clc
add
sub
jmp
add
dec
jne
push
mov
loopne
popf
std
sub
xor
push
outsb
cltd
mov
cmp
iret
xor
dec
ljmp
xor
jo
pop
mov
negl
andl
mov
sub
data16
add
push
or
push
xchg
fs
xchg
pop
sub
mov
sbb
dec
ja
mov
fs
push
or
fildll
fistps
ret
add
add
sub
in
fcmovnu
add
rorl
fdivr
mov
cmpb
add
push
sub
rcrl
loope
gs
ret
ffree
fstl
ffree
pop
aad
add
stos
jns
add
frstor
push
cmp
orl
loop
and
pop
xor
pop
outsl
cmp
add
push
gs
mov
lret
push
dec
movhlps
and
push
pop
adc
inc
dec
sbb
cmpb
or
mov
or
jo
fnstenv
outsb
pop
cmpsl
fidivl
out
insl
imul
sub
push
shlb
movzbl
pop
aas
inc
js
pop
xor
inc
mov
test
pop
push
and
sbb
pop
lock
pushf
cmpl
fs
dec
mov
lds
mov
push
inc
sub
nop
pusha
testl
loope
pop
add
das
add
movb
xor
xor
and
push
mov
xor
cmp
add
jecxz
push
sbb
inc
js
outsl
push
std
dec
pop
or
xchg
mov
mov
adc
insl
lock
lahf
ljmp
ss
push
push
divl
cmp
pop
addr16
and
nop
add
scas
mov
dec
ret
xchg
aam
cmp
sbb
sub
sub
push
dec
sub
loop
testl
das
les
cmp
adc
cmp
cs
repnz
or
mov
sbb
add
mov
and
add
push
inc
ja
jno
add
xchg
sbb
sbb
insb
out
add
push
mov
mov
dec
push
ds
rolb
fstps
movb
movb
mov
adc
cwtl
scas
push
cmp
repnz
mov
push
pop
pop
jae
rol
imull
popa
lods
in
pop
adc
pop
hlt
mov
bound
sahf
push
add
mov
jns
lret
shrb
add
push
pop
adc
aas
mov
cmp
or
lock
pop
and
jne
negl
enter
repnz
push
hlt
and
dec
inc
cld
rcr
pop
fmuls
mov
lods
pop
jnp
sub
iret
nop
add
push
add
xorb
push
push
inc
jmp
lea
inc
cmpsl
jl
shlb
insl
fwait
adc
and
loopne
inc
sub
mov
adc
add
mov
cmp
fbld
lea
mov
test
test
push
rolb
adc
js,pt
ds
adc
push
pop
addb
cmc
subb
adc
push
fnstsw
fdecstp
and
or
pop
pusha
and
or
test
cs
bound
mov
cmp
je
mov
dec
add
scas
outsl
addr16
stos
mov
scas
sub
loopne
sahf
je
add
push
ret
xlat
popf
jne
dec
ljmp
mulb
xor
mov
loopne
in
xchg
mov
andps
sub
add
aas
inc
jle
lret
dec
imul
cmovle
inc
mov
ss
sahf
xchg
clc
adc
mov
pop
cmp
mov
sarl
into
mov
pop
jg
addr16
int3
jne
test
outsl
lock
in
sbb
cld
jle
hlt
jne,pn
xchg
lcall
adc
addr16
and
js
ss
and
out
xor
cwtl
mov
xorb
pop
jbe
mov
jne
rorl
add
call
push
or
ljmp
push
hlt
clc
cld
push
jne
adc
jmp
dec
cld
imull
out
inc
call
adc
cmp
outsb
and
cmp
jae
mov
lock
mov
ret
nop
pop
dec
in
push
fadd
and
adc
mov
sub
mov
ret
das
lea
daa
mov
mov
push
add
cli
mov
add
jl
not
mov
push
add
clc
mov
scas
je
js
pop
pop
ret
cld
popf
or
dec
adc
pop
dec
adc
inc
sub
pop
cli
mov
push
add
pop
pusha
das
pop
aaa
xchg
dec
out
or
pop
adc
hlt
pop
sbb
push
and
xlat
mov
xor
cwtl
fldl
xor
repz
mov
mov
inc
fisttps
dec
mov
cli
add
out
in
cli
ljmp
cmp
rorb
andl
xorl
jmp
les
rolb
fildl
mov
jne
scas
xchg
inc
jb,pt
incb
pop
inc
inc
dec
je
mov
mov
pop
sub
ret
mov
icebp
jbe
sbb
pop
inc
lods
mov
mov
push
mov
and
shll
icebp
nop
xchg
inc
add
mov
sbb
imul
or
mov
ret
dec
and
mov
jecxz
adc
xchg
test
adcb
lahf
test
sbb
fcompp
inc
cmp
mov
xlat
pop
jbe
pop
loope
dec
jg
mov
add
ficompl
adc
inc
sti
movb
les
and
pop
add
add
add
mov
inc
or
cmp
sub
push
je
mov
push
sub
inc
addr16
xchg
push
mov
or
dec
into
jle
dec
shr
push
add
jge
adc
ja
pminub
and
jne
mov
sub
jmp
push
jp
test
sar
mov
mov
jg
mov
fsubrl
jne
cs
and
lods
jmp
sub
push
dec
mov
fisubs
iret
sub
sub
mov
loopne
dec
mov
xchg
pop
mov
outsl
scas
and
fildl
sub
jae
shll
movsb
xchg
pop
mov
rep
sbb
das
lea
movsl
xchg
pop
pop
mov
sub
loopne
sarb
jb
cmp
ja
imul
mov
add
pop
lods
out
add
testb
movsb
pop
mov
or
jl
inc
loopne
je
ret
je
xchg
ret
and
mov
lcall
pop
pop
sbb
notb
or
xor
mov
lcall
cwtl
mov
repz
popa
out
cltd
push
pop
jns
fisubrs
das
pop
sub
fsubrp
mulb
das
push
js
sub
pop
mov
mov
cmpsl
inc
lea
and
ret
fidivs
cld
dec
stos
sub
je
push
imul
or
imul
cmp
aas
movsl
outsb
adc
icebp
call
add
sbb
mov
stc
push
jne
pusha
xchg
ret
sbb
sbb
cmpl
jbe
mov
aad
or
jmp
xor
inc
cld
xchg
and
jmp
mov
or
mov
mov
jge
and
incl
pop
js
mov
add
inc
mov
cmp
ja
jb
inc
adc
scas
jmp
js
fisubl
jecxz
dec
mov
dec
call
ds
leave
mov
dec
addl
out
mov
stos
lods
les
inc
je
mov
or
fistpll
cmp
mov
dec
je
dec
jl
aas
fcompl
adc
cmp
jbe
mov
push
jne
xchg
adc
ret
inc
fdivrl
pop
mov
inc
lret
xchg
mov
inc
iret
fcom
inc
movsl
dec
sbb
clc
xchg
ret
xor
rcl
sbb
and
rolb
stos
ds
adc
addl
stos
lock
test
mov
nop
mov
int3
int3
xchg
lock
fcoml
sub
mov
cmp
sti
and
lret
or
rolb
push
arpl
push
and
jne
in
mov
sbb
gs
cld
lea
out
jg
scas
mov
dec
fbstp
rorb
aam
add
cmpsb
cmp
cltd
adc
push
cmpsl
test
lea
push
xchg
or
lea
lahf
cs
xor
stos
or
or
pop
test
ljmp
push
or
enter
xchg
push
mov
jp
or
mov
mov
inc
dec
cs
incl
jg
dec
mov
stos
cmp
jne
pop
pop
iret
pop
sub
popa
aam
sub
filds
psubd
mov
sub
repz
faddl
adc
add
push
test
loop
cmp
add
loopne
push
daa
dec
adc
jb
rorb
fidivrl
mov
movzwl
sub
bnd
sbb
dec
int3
pushf
add
add
inc
inc
mov
sub
adc
sti
mov
add
ja
movswl
mov
add
lea
popf
mov
or
rorl
out
sub
cld
jmp
inc
popf
push
js
loopne
pushf
loop
dec
inc
dec
inc
dec
lods
or
shrl
xor
jge
out
sbb
std
mov
aam
adc
jg
test
clc
cmp
jl
pop
sbb
je
cmc
jbe
cmp
sbb
stos
jmp
inc
inc
mov
je
stos
loop
movlps
pop
pop
inc
clc
imul
push
mov
and
mov
es
sbb
ss
jbe
sub
add
leave
mov
mov
lods
roll
add
aam
mov
insl
cmp
add
jb
mov
ret
add
scas
je
mov
dec
adc
div
mov
inc
test
jne
sbb
or
fldt
pop
in
stos
xor
call
imul
or
je
inc
jne
pop
ret
inc
mov
mov
ret
xchg
repnz
sbb
aam
or
repnz
loope
push
in
lret
adc
pushf
fwait
inc
sahf
iret
mov
pusha
push
inc
je
push
push
cmp
sub
fmuls
sbb
xor
lock
add
or
jns
pop
inc
loop
push
mov
cmpsl
add
cmp
ret
and
inc
add
and
and
adc
and
popf
outsl
mov
sub
inc
sub
sub
fucomp
int3
push
sbb
and
sub
lahf
addr16
sub
xor
sub
cmp
in
xor
fldenv
fwait
add
dec
je
fstpt
iret
adc
subl
sub
testl
jge
fimull
cmpl
iret
mov
movb
je,pn
cmp
hlt
imul
mov
out
fabs
push
scas
ds
movlps
movsb
pop
frndint
rcr
scas
insb
or
fstps
push
negb
je
fidivl
out
fistps
call
or
mov
nop
shr
and
pop
loope
pcmpgtd
jmp
shrb
add
jns
lcall
out
outsl
or
cmpb
jb
movb
js
decb
outsb
mov
ja
jmp
call
loopne
adc
cmp
inc
xor
out
push
pusha
push
or
shr
mov
add
mov
adc
mov
pusha
cmc
push
adc
adc
out
pop
into
rorl
je
test
in
xchg
ficompl
add
jmp
in
lock
pop
mov
cmpsl
sbb
jae
dec
add
in
inc
loopne
push
in
insl
or
call
or
mov
jmp
loope
sbb
setnp
movsb
rcrl
sub
pushf
and
mov
dec
sub
cmp
jg
cmp
inc
or
ljmp
enter
roll
divl
add
jmp
mov
sbb
or
scas
inc
test
pop
sub
shl
sbb
mov
f2xm1
fwait
hlt
pop
mov
fldz
cmpsb
xchg
ljmp
inc
stos
sti
dec
lods
or
icebp
daa
lcall
pusha
jne
inc
sbb
dec
and
fistpll
jne
inc
push
sub
cwtl
jne
mov
ret
or
push
sahf
add
jg
frstor
loopne
adc
aas
jmp
fstpt
ss
push
add
or
mov
sbb
push
push
test
insl
dec
adc
and
push
int3
sahf
incl
add
mov
cmp
jae
fcmovu
in
add
add
jmp
aaa
add
add
mov
negb
es
loopne
call
inc
imul
push
cmp
iret
fsubs
call
inc
lds
sbb
adc
insb
push
cmp
xor
stc
mov
mov
mov
sbb
popl
mov
pop
add
and
push
in
adc
sbb
mov
fcomps
sbb
or
inc
dec
cmp
sub
aam
bound
pop
insb
jg
cmp
je
subb
fwait
cmpsl
push
fstps
bound
mov
push
in
cmpsb
xchg
xor
cmp
inc
or
cli
in
push
adc
dec
adc
mov
divl
push
adc
sbb
xchg
test
rcrb
clc
and
hlt
inc
sarl
or
cmp
inc
stc
inc
arpl
cmp
sub
add
imul
pop
mov
call
cmp
fdivs
add
mov
fstpl
fwait
pop
dec
mov
lock
pop
push
mov
movsb
dec
fisttps
xor
xor
xchg
pop
mov
add
push
mov
pop
fnstsw
nop
out
or
mov
pushl
add
push
jnp
fmuls
mov
lret
cmpsl
inc
inc
cmp
lret
fcomps
cmp
fdivl
and
call
imul
and
out
dec
adc
mov
adc
and
or
adc
mov
dec
shrb
subb
shl
std
add
movsb
jg
cmc
das
or
add
lea
incb
jb
ljmp
and
xor
js
or
jb
sti
insb
cli
cmp
adc
bound
orb
orl
mov
incb
jne
sub
dec
mov
aas
add
cltd
idiv
imul
sbb
repnz
ds
ds
add
pusha
or
sub
daa
loope
std
std
lds
inc
xor
mov
or
jle
pop
add
pop
pop
pop
push
ret
pop
mov
and
dec
in
test
jg
fmul
in
rcll
cmp
hlt
sbbl
mov
fistpl
pop
inc
inc
dec
data16
fs
jl
addl
push
jl
mov
and
je
mov
pop
xchg
mov
add
or
dec
lock
mov
cmp
fcoms
pop
lods
insb
jae
repnz
pop
sub
loopne
sub
or
cmp
fmuls
lock
xor
ret
js
or
push
pusha
loop
dec
mov
jb
adc
sub
fildll
mov
ds
hlt
and
hlt
mov
stc
pop
mov
sbb
jbe
or
insb
adc
dec
mov
xchg
pushf
pop
jge
fwait
loope
ret
cmp
addr16
xchg
lods
dec
and
rcrl
push
scas
das
or
test
push
adc
push
sub
fidivrl
inc
outsl
sub
rcrl
fidivrl
ja
mov
and
xchg
add
xchg
jnp
cwtl
xor
fldt
popl
sti
xchg
inc
pop
aas
lahf
jbe
cmp
jle
push
shl
shl
or
mov
call
mov
and
rcrb
arpl
sbb
cs
faddl
mov
push
dec
fnstcw
mov
dec
sti
je
insb
inc
lds
in
mov
inc
hlt
out
push
cmpb
mov
movb
add
add
jg
mov
push
lea
or
xchg
repnz
movb
sub
outsl
jecxz
cs
mov
push
mov
out
ljmp
jecxz
xchg
add
add
test
add
inc
js
sahf
cltd
rclb
and
pop
cwtl
mov
inc
push
add
ret
dec
shrb
lods
test
inc
mov
jnp
xchg
push
mov
pop
decl
mov
je
or
mov
cmpsb
add
aas
add
sarl
mov
cmp
dec
pop
add
sub
adc
cmp
and
add
dec
and
xor
jge
cs
cmp
mov
sbb
xor
enter
ljmp
imul
cmp
addr16
iret
test
stos
jmp
jg
int
inc
enter
or
ret
stos
loope
xor
jne
inc
cmpb
jne
push
or
jo
or
and
stos
out
xchg
out
sub
jns
pop
add
add
fmuls
inc
fadds
in
pusha
inc
or
cmp
pop
mov
outsb
add
sub
incl
mov
adc
jecxz
push
enter
mov
mov
pop
inc
cmp
insl
cmc
push
or
cmp
pop
repnz
sahf
nop
jns
mov
andb
jae
mov
cmp
jne
cmp
jne
mov
xor
data16
rcll
xchg
xchg
mov
std
ret
sub
jmp
or
dec
dec
pop
push
or
iret
decl
add
add
or
jnp
jnp
or
push
adc
jbe
scas
sbb
jns
jg
in
mov
insl
lock
push
shl
or
mov
and
mov
mov
cltd
xor
loopne
test
std
inc
subb
mov
sub
dec
push
lea
mov
cwtl
fcompl
adc
lcall
hlt
dec
mov
push
insl
sub
rcrl
test
mov
into
fmul
mov
ret
dec
add
jmp
out
aad
fldl
cs
shll
lahf
adc
or
dec
xchg
fists
and
nop
es
fwait
or
lds
pop
and
aaa
mov
loope
bound
sahf
into
stos
lock
addb
mov
jg
je
mov
add
out
sbb
pop
sub
je
pop
je
jmp
cmpb
dec
mov
cmp
in
jmp
movsb
sub
adc
arpl
mov
add
adc
loope
add
lods
cmp
popa
mov
ljmp
outsb
dec
push
data16
or
adc
in
or
or
adc
or
or
fcoml
fcomip
fcoms
lea
call
mov
xchg
mov
and
lret
in
test
push
rcl
jb
adc
ljmp
pop
cmp
jae
push
and
inc
xlat
push
jns
add
push
xchg
add
jns
stc
push
roll
jmp
and
nop
add
xor
xchg
jb
push
cltd
lea
sub
out
xor
xchg
pusha
mov
adc
sbb
or
or
lods
into
adc
popf
add
cmp
insl
int
imul
push
std
cmp
jmp
sbb
push
test
jnp
jo
fucomi
add
or
mov
sub
add
mov
repnz
cld
sub
imul
adc
jns
pop
sbb
clc
inc
mov
pop
iret
mov
outsb
imul
int3
jmp
inc
dec
das
push
dec
popf
mov
push
adc
push
mov
lcall
insl
mov
add
into
in
iret
jne
or
mov
lea
mov
decl
mov
inc
mov
fists
ja
outsb
mov
and
push
push
jo
cmp
jg
imul
mov
je
dec
pusha
inc
mov
adc
and
mov
mov
bound
and
vandps
push
ljmp
jnp
mov
adc
sub
jae
pop
jb
mov
pop
pop
xchg
jle
scas
or
add
mov
cmp
mov
fsubrp
testl
sbb
and
push
adc
mov
dec
cmp
sbb
inc
insb
inc
mov
inc
test
icebp
js
cmp
mov
arpl
test
adc
in
sbb
cltd
pop
push
mov
out
xchg
push
lret
fcompl
pop
push
cli
pop
in
cmp
jne
incl
int3
dec
cmp
fcoml
cmpsl
mov
shrl
inc
notrack
sub
je
dec
je
sub
ljmp
je
jmp
mov
jmp
push
push
push
faddp
outsb
and
jbe
push
inc
mov
jle
fadd
or
xor
pop
ret
mov
cmp
pushf
mov
xor
jg
jl
bound
push
mov
bound
or
sub
mov
rcrl
jmp
sub
rclb
pop
cmp
xchg
cmp
cmp
mov
std
mov
sub
add
fs
idivl
hlt
imul
add
cmpl
jle
adc
pop
and
je
push
push
out
cld
gs
xchg
psubusb
loopne
jecxz
sbb
or
pop
sbb
inc
out
mov
add
test
stos
ror
inc
mul
push
nop
data16
test
jne
icebp
jo
je
hlt
mov
int
and
insl
and
ret
js
fsubr
lret
in
cmp
mov
into
popa
movsl
cmp
fsubrs
or
mov
hlt
lods
mov
pushw
fcomps
and
add
jmp
bnd
daa
nop
add
add
lock
addl
bound
adc
jmp
jmp
mov
and
in
call
mov
hlt
push
sbb
mov
ss
repnz
sbb
jmp
push
bound
mov
adc
push
jmp
cmpb
ja
mov
sub
push
push
mov
data16
div
ja
lock
add
cmpb
jle
and
fs
jne
jo
mov
mov
add
or
xor
pop
jle
push
or
cmp
enter
aaa
xor
lods
dec
sbb
cmp
fwait
pop
mov
and
xor
test
jne
fmul
or
sarl
push
mov
fstpt
fsubrl
fiadds
movsb
imul
xor
mov
das
xor
inc
repnz
out
dec
xchg
adc
sti
adc
add
mov
gs
add
add
push
stos
hlt
aad
inc
repnz
fildl
stos
push
push
dec
frstor
ja
dec
jnp
sbb
jmp
push
enter
mov
cmp
ljmp
sub
add
xorl
mov
push
xor
or
or
lret
cwtl
testb
iret
je
orl
add
fs
add
add
and
mov
push
lock
out
xchg
mov
and
dec
inc
pmaxsw
jo
or
jne,pt
add
pop
sbb
sub
and
pushf
or
and
push
add
and
and
mov
mov
mov
int3
test
pop
push
pop
push
adc
fildll
mov
icebp
movsl
in
sub
xchg
cmp
sbbb
addr16
inc
ds
in
mov
jno
aaa
dec
sti
js
adc
lock
sbb
mov
push
cmp
ret
jne
aas
jle
xor
cmp
sbb
sbb
stos
fstpl
fwait
jmp
je
mov
sbb
mov
fucom
add
jp
pop
outsl
push
dec
push
push
xchg
xor
popf
adcb
jmp
jns
push
add
sub
jb
adc
movd
or
xchg
jmp
jno
fwait
lret
jp
shlb
out
inc
int
mov
adc
das
popf
or
movb
xor
or
fldt
cmp
arpl
push
addl
mov
add
adc
leave
movsl
pop
arpl
out
add
push
push
pop
or
adc
mov
push
add
xchg
mov
aam
jecxz
lods
cmp
or
or
jge
mov
mov
rorl
inc
inc
lahf
addb
lret
fcomps
dec
inc
push
imul
in
mov
inc
loop
cmp
or
daa
sub
pop
add
pop
push
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
xor
sbb
xchg
add
jl
je
xchg
adc
popf
insl
or
rolb
adc
adc
jne
add
ret
js
pusha
inc
cmp
cmp
sub
incl
jnp
lds
jl
add
mov
leave
mov
jmp
mov
in
xchg
dec
add
mov
dec
sarb
or
push
fcmovu
jbe
pop
shrb
add
pop
adc
fcoml
or
jmp
outsl
cli
dec
jne
push
push
and
orb
rol
leave
mov
ja
xor
push
subb
push
pop
sahf
adc
xor
add
es
clc
test
cmpsb
or
jb
sub
clc
xlat
add
and
subb
sbb
je
scas
ret
push
sbb
nop
lcall
add
mov
cwtl
jno
xchg
cs
sbb
ds
pusha
mov
getsec
jg
lods
add
stc
push
jg
mov
mov
scas
inc
cmovp
jle
xchg
inc
sahf
dec
xchg
adc
ret
add
push
mov
push
jns
pop
jmp
push
xor
jmp
xchg
dec
push
add
in
jle
into
mov
inc
repnz
mov
ja
push
add
mov
push
add
aas
gs
pop
sub
and
mov
aas
imulb
mov
or
fcmovbe
push
sbb
add
dec
clc
cmpl
cwtl
aaa
out
flds
idivb
mov
enter
cmp
inc
and
or
popf
cmpsb
dec
imul
rolb
repz
ss
ret
pop
xchg
test
push
ret
and
or
xchg
hlt
push
es
sub
rol
and
es
mov
add
shrb
push
pop
mov
movsl
loopne
push
cld
dec
adc
test
popa
mov
adcl
sbb
or
movb
iret
in
mov
push
xor
mov
mov
cmp
mov
out
xchg
int3
sahf
stc
push
lea
sar
or
pcmpgtd
add
push
or
or
ret
shlb
cmp
clc
pop
mov
sbb
xchg
sbb
inc
and
xchg
fldt
mov
mov
mov
cld
hlt
mov
enter
pop
adc
les
fisttpll
jmp
push
cmp
aam
push
sbb
sub
lahf
and
rcl
into
mov
pop
in
das
in
add
or
inc
add
sub
fildl
test
sub
push
mov
xlat
add
mov
ror
gs
addl
adc
sbb
pop
sbb
adc
xchg
inc
xchg
test
dec
xchg
xchg
fwait
lds
inc
xor
mov
inc
sbb
rolb
xchg
pop
cmpb
mov
or
adc
gs
mov
or
nop
dec
fcoml
pop
scas
inc
aas
xor
gs
lods
out
jbe
mov
jg
cmp
sbb
pop
sub
sub
sbb
mov
pop
fcoms
or
and
jo
pop
addr16
or
fxsave
dec
cmp
and
jg
adc
ljmp
inc
movsl
insl
inc
jmp
push
pushf
and
lea
inc
or
in
jp
jbe
jb
mov
mov
xor
daa
loopne
push
js
sbb
cmp
lods
mov
add
lahf
lods
xchg
rol
aad
sbb
lret
fnstenv
or
jge
nop
fucomi
mov
push
loopne
xchg
or
stc
lock
loopne
int3
and
adc
push
sbb
outsl
cmp
insb
loopne
int3
pop
insl
add
and
and
rol
add
nop
loop
dec
mov
scas
into
les
addb
add
pop
push
push
dec
jle
jg
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
xor
ret
mov
add
push
pop
or
xor
or
push
push
repnz
js
iret
mov
push
mov
seto
adc
mov
leave
pop
xorb
inc
lret
jg
mov
adc
movaps
jb
leave
mov
inc
fcoml
jae
daa
jl
adc
sbb
or
or
sbb
loope
xor
aad
xor
rcrb
fs
inc
push
jmp
adc
in
in
inc
add
pop
pusha
scas
sbb
jnp
jae
pop
mov
push
enter
rcr
add
repnz
aam
sub
mov
roll
lea
mov
add
jmp
sub
push
mov
mov
xchg
test
add
and
nop
cltd
mov
lret
cs
push
dec
dec
int3
aad
and
dec
xlat
sub
jns
gs
cld
std
jne
lods
call
add
sub
into
sbb
and
addl
pop
or
sub
aam
mov
jl
lock
nop
pop
mov
cmp
out
mov
push
in
adc
jp
sbb
adc
dec
and
mov
dec
adc
add
fwait
xlat
leave
xchg
mov
sub
push
data16
lock
sbb
add
push
stos
mov
adc
adc
and
mov
fbld
inc
inc
pop
lret
movl
test
add
pop
loope
dec
iret
cwtl
daa
sbb
adcl
fwait
pushf
mov
pop
inc
pushf
pushf
adc
into
cltd
ret
aaa
faddp
or
mov
adc
push
stc
or
and
inc
adc
cltd
push
push
xchg
push
daa
push
insb
cmp
out
pop
sbb
inc
adc
push
lahf
std
inc
aaa
mov
rolb
sbb
das
add
repnz
mov
aam
ret
mov
je
enter
out
mov
loopne
int3
mov
jl
pavgw
aam
jne
cmp
add
or
call
rolb
loope
jnp
lds
sbb
pop
push
sbbb
jae
and
orl
js
popf
lret
mov
dec
xor
add
jns
stos
sub
push
jbe
and
mov
sbbl
movsl
int
addb
rcrb
daa
jle
data16
adc
mov
aad
or
rclb
or
dec
jmp
dec
fcoms
pusha
mov
xor
jmp
and
loopne
xor
jns
dec
or
inc
pop
push
add
add
add
and
mov
xlat
loop
rolb
je
jmp
adc
test
mov
js
push
jle
leave
cmp
daa
lcall
jmp
sbb
adc
sbb
jl
xlat
leave
inc
inc
jbe
in
pop
jg
mov
scas
das
adc
mov
and
push
add
and
dec
inc
rcrb
inc
jge
push
mov
shlb
xchg
xchg
inc
inc
scas
andl
and
sbb
lret
mov
pop
pop
hlt
fucom
addl
and
push
push
stos
xor
xor
dec
and
ret
arpl
inc
andl
xor
inc
jle
fildll
push
cli
inc
enter
in
cmp
test
pop
lods
jg
cmc
jg
xchg
xor
decl
add
fwait
movl
jns
mov
mov
mov
jns
scas
pop
test
ret
sub
pop
loopnew
aaa
push
daa
push
xor
lods
scas
das
pop
and
cmpl
dec
or
xchg
sub
popa
push
movsb
jae
push
dec
push
sbb
adc
fsubrs
shlb
or
mov
adc
fidivl
dec
incl
inc
mov
sub
mov
in
push
aas
adc
cmp
jl
or
sub
bound
inc
jmp
mov
push
sbb
and
inc
sahf
jge
sbb
popa
jl
insl
ja
iret
adc
inc
sbb
repnz
and
jl
rol
lds
cmpb
push
jo
add
cmp
adc
mov
push
andl
aam
adc
je
scas
push
push
daa
push
inc
scas
or
pop
inc
inc
in
add
imul
dec
shrb
cmp
jbe
mov
bound
push
aaa
dec
xchg
outsb
ret
lods
dec
fildl
mov
hlt
rcrb
mov
mov
fsubrs
inc
loopne
xor
adc
jo
inc
inc
jne
addl
or
xchg
sar
pop
mov
dec
imul
and
mov
push
fstpl
pop
xchg
fdivs
adc
hlt
add
and
fisttps
in
push
mov
fwait
pusha
xor
push
icebp
incl
aaa
push
mov
sub
jb
inc
mov
inc
pop
js
pop
sti
stos
sbb
lret
jne
int
ret
test
or
inc
jne
mov
test
mov
clc
pop
ja
push
pop
or
or
inc
xor
mov
push
or
test
dec
add
pop
lret
hlt
mov
mov
cmp
mov
jo
jo
call
call
dec
add
mov
shl
add
test
imul
push
in
or
je
mov
push
cmp
inc
ja
mov
or
nop
test
loope
repnz
popa
mov
call
inc
cmp
jnp
cmc
lea
and
adc
scas
mov
loopne
cmp
xchg
rorl
cmpsl
insb
ss
lret
jg
jne
jmp
push
cmp
arpl
push
and
fimull
xor
arpl
add
cmp
leave
sub
jne
push
loop
xlat
in
movsb
pop
lahf
aam
lods
adc
pop
scas
in
les
jo
lcall
xor
out
lock
push
orb
mov
and
sub
cmp
call
mulb
mov
mov
mov
dec
mov
sbb
mov
insl
das
mov
rcrb
pop
fmul
int
xchg
js
scas
pushf
loopne
nop
xor
iret
ss
add
and
mov
repnz
fcomp
mov
push
fldenv
mov
cwtl
sarb
sub
shlb
jns
mov
sub
xchg
pop
int3
mov
add
and
enter
add
xor
inc
sbb
sbbb
leave
xchg
rolb
bswap
mov
fsubr
cs
xchg
mov
push
mov
jb
cmp
cmp
test
or
dec
lea
push
add
xlat
test
mov
sbb
outsl
push
insl
das
fs
push
loopne
fistl
fs
out
aaa
cltd
mov
add
pop
jo
sbb
cmc
pop
push
and
jbe
dec
pop
sbb
dec
ja
int3
pop
push
cmp
sbb
dec
dec
out
in
enter
pop
push
fldcw
jmp
aas
testb
je
scas
jmp
pop
lea
adc
adc
nop
mov
pop
sub
adc
daa
xor
movsb
inc
sub
jp
hlt
test
cmc
sub
mov
jge
add
es
daa
adcb
in
dec
jmp
sbb
xchg
pop
and
add
inc
mov
mov
data16
flds
inc
out
mov
outsl
xchg
je
inc
dec
mov
mov
cmp
leave
cld
ds
icebp
sbb
adc
adc
pop
and
sbb
addb
lcall
in
or
call
test
dec
push
xchg
add
movsl
popf
pushf
xor
mov
cmpsl
mov
sbb
push
ret
fmuls
lods
icebp
inc
repz
xor
orl
repz
testl
push
xchg
push
cmpsl
shr
push
and
fstps
add
xchg
xor
or
loope
orb
or
jb
gs
jo
adc
mov
xchg
lock
mov
inc
inc
call
dec
ret
xchg
mov
sti
mov
sbb
out
or
testb
push
lret
insl
inc
or
and
mov
sbb
inc
cmp
jne
cli
and
mov
push
xlat
sub
fstpt
sub
inc
or
cmpl
mov
inc
jmp
es
mov
lahf
les
je
mov
mov
jmp
jnp
add
fsubr
or
loopne
push
imulb
call
jne
push
mov
push
mov
inc
movl
lea
insl
or
lret
adc
add
mov
hlt
mov
mov
gs
je
xorl
lea
xchg
test
adc
jle
popa
pop
sbb
outsb
das
repnz
add
hlt
xor
cmp
or
sub
movl
jp
add
enter
pop
mov
sbb
pusha
int
inc
sahf
xorl
xchg
ja
pushf
lcall
mov
lret
cs
cltd
adc
cmp
idiv
mov
pop
mov
enter
outsl
dec
push
sbb
pop
add
adc
loop
les
clc
mov
jnp
ja
je
popa
rorl
outsl
sub
js
mov
test
push
ds
mov
lea
lret
sbb
mov
dec
dec
sbb
loop
call
data16
push
jns
roll
in
aam
orb
or
ficoms
sete
incl
xor
xchg
adc
testb
sbb
jnp
mov
inc
shr
int
or
sbb
lret
add
xchg
movsl
pop
lock
xor
inc
or
add
cmp
rorl
cmp
jmp
and
rcl
inc
aad
add
test
dec
mov
inc
lcall
aas
ja
and
aad
or
dec
sti
lods
cltd
pop
out
test
mov
cmp
loopne
stos
jmp
insb
adc
test
incl
pop
ret
fidivl
xchg
jecxz
inc
inc
pop
jo
outsl
bound
add
pop
shlb
xor
add
jns
jge
fistpll
xchg
jo
jle
push
xor
aam
std
cmp
and
adc
cmp
and
insl
fdivs
jne
movsb
dec
sahf
ja
pop
lret
inc
test
inc
sub
jnp
inc
cmp
push
loopne
jge
and
insl
rclb
and
mov
pop
out
aas
inc
dec
pop
popf
arpl
pop
roll
mov
ret
int3
stos
add
lret
data16
add
rclb
cmp
adc
xchg
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
push
jo
cmp
negl
movsb
mov
jnp
repz
jl
cs
jle
idivl
mov
pusha
push
call
stc
fisubrs
jle
repz
jns
adc
scas
adc
xor
repz
sub
mov
jns
mov
add
jl
sbb
push
xchg
iret
enter
mov
adc
or
or
add
push
daa
out
popf
mov
iret
enter
inc
clc
push
jo
hlt
pop
repnz
sahf
xchg
pop
lock
in
inc
mov
call
add
jae
mov
adc
inc
fdiv
dec
sahf
aam
shrb
add
sahf
xchg
ja
push
mov
sbb
fmulp
jae
mov
cs
out
out
mov
cwtl
mov
fwait
cmp
insb
lods
ja
test
mov
movsb
pop
test
daa
iret
pushf
adc
out
mov
jbe
leave
xor
popf
push
mov
pop
in
jg
loopne
fiaddl
push
iret
adc
das
jl
lret
mov
pop
bound
aas
xchg
movb
and
xchg
out
xchg
pop
adc
add
rclb
nop
adc
int
add
add
sbb
cmp
pop
pushf
push
daa
cmpsl
jge
orb
or
jb
iret
fsubl
or
jb
addb
enter
pushf
xchg
nop
xchg
inc
push
jb
fadds
les
fdivrl
fidivs
nop
in
and
xor
sub
push
loope
sbb
lahf
adc
gs
jl
outsb
xor
xor
xchg
push
mov
add
jbe
adc
in
xor
outsb
xchg
add
jge
dec
dec
js
inc
cmpl
enter
mov
inc
dec
mov
mov
out
aad
pop
ret
dec
rclb
jl
xchg
dec
or
iret
mov
enter
xchg
add
sbb
push
adc
mov
test
jg
out
fwait
cmp
push
ret
pop
adc
sub
xor
rorb
out
add
out
dec
push
test
adc
mov
xchg
sub
es
clc
jecxz
call
movsb
clc
clc
lea
jge
sti
loopne
add
sbb
adc
mov
std
adcb
xlat
push
mov
and
imul
sbb
inc
imul
aam
sbb
jb
jns
pop
popa
xor
jecxz
call
pusha
nop
fbld
jmp
mov
loope
pop
adc
jmp
call
mov
dec
or
divl
imul
adc
adc
test
out
add
mov
aaa
punpckhbw
cmp
push
xor
sbb
cld
sbb
and
jmp
sub
add
ret
push
jecxz
fnstsw
ror
push
mov
pop
mov
leave
and
nop
sub
xor
push
mov
mov
leave
and
inc
mov
leave
and
dec
mov
dec
xor
xchg
dec
xor
les
dec
xor
and
jl
mov
test
mov
mov
and
pushf
dec
push
mov
loopne
dec
push
mov
out
mov
rcr
dec
repnz
in
lock
cld
hlt
xor
mov
in
clc
push
push
scas
add
jne
push
leave
sarb
mov
push
lcall
add
outsl
je
mov
fs
jne
das
dec
jne
inc
fs
lret
imul
fs
outsb
inc
mov
add
jb
insl
jo
inc
fs
mov
push
je
pop
push
cmp
and
jns
adc
add
adc
inc
jns
ss
jae
pop
outsl
pushf
in
scas
mov
dec
in
xor
test
add
sbb
or
scas
cmp
add
and
pop
add
adc
subb
in
mov
mov
mov
add
outsb
add
xor
sti
loopne
inc
push
pop
push
jo
movsb
test
imul
pop
dec
fmul
repz
shrb
inc
or
mov
push
and
inc
jne
dec
inc
cmp
pusha
mov
nop
dec
testb
test
jmp
call
inc
jl
lods
add
adc
adc
fsubs
and
add
mov
add
in
mov
sbb
ret
xor
dec
div
subl
or
hlt
int3
int3
flds
ds
repz
mov
int3
out
lcall
lret
mov
jg
push
mov
sub
push
sbb
in
pushf
inc
aam
adc
nop
pusha
jl
mov
arpl
pusha
cmp
push
sbb
andl
imul
xor
inc
cmp
pop
jnp
mov
adcl
imul
xlat
pushf
pushf
ret
pop
adc
test
add
lods
xor
and
inc
mov
pop
push
fisubl
enter
mov
adc
or
sub
push
sub
jo
nop
repnz
xchg
fs
mov
nop
or
mov
in
add
iret
rolb
clc
inc
jb
cmp
pusha
repz
repz
add
fsubl
sbb
dec
insl
jo
mov
adc
sub
sub
sub
adc
pop
test
divb
mov
into
mov
push
sub
mov
out
nop
imul
repnz
mov
jno
cld
ficoms
inc
xor
les
hlt
mov
pop
pop
in
in
in
adc
in
mov
lret
xorb
jno
aaa
mov
dec
outsb
iret
cwtl
or
call
jns
pusha
cltd
es
mov
nop
dec
push
cmpb
add
loop
nop
adc
and
in
out
xchg
inc
and
jmp
sbb
sub
push
mov
pushf
add
xor
negb
and
in
adc
add
inc
rorb
and
int
or
add
jg
fwait
add
enter
es
sub
mov
call
fildll
dec
je
sbb
xchg
push
fs
leave
jbe
push
nop
es
jbe
add
push
fldl
cmc
mov
pop
stc
pop
inc
push
jl
dec
pop
in
fidivl
aas
clc
mov
pop
in
in
stos
hlt
mov
icebp
in
enter
fs
inc
repnz
enter
test
in
adc
leave
jae
scas
call
js
cmp
sbb
rcrl
lea
jmp
inc
xor
cmp
jmp
mov
movl
or
cmpsb
push
les
fdivs
xor
fmul
out
pop
adc
xor
jo
sub
mov
dec
loopne
mov
mov
sbb
mov
fcomp
push
push
mov
xchg
add
cmpsb
push
and
mov
rcl
clc
jmp
adc
adc
enter
and
aas
push
orb
dec
sbb
fs
mov
cli
jmp
xor
daa
jmp
inc
test
add
push
rorb
shll
adc
seto
inc
hlt
inc
cli
and
fsubl
xor
fs
daa
add
pop
xor
adc
or
xchg
add
cld
sbb
setg
dec
inc
and
ss
negl
nop
sti
cltd
cmp
incl
popf
inc
insb
jnp
and
pushf
xchg
jne
sub
insb
test
jmp
push
or
les
mov
insl
xchg
adc
mov
pop
mov
call
cld
test
test
sti
jo
mov
add
outsb
push
add
pop
sub
shlb
xor
maskmovq
imull
mov
test
dec
xchg
pop
data16
sti
les
adc
dec
xchg
cmpsl
arpl
and
inc
jo
out
mov
lock
or
lock
les
xor
lea
inc
jg
jo
repnz
into
jle
test
lea
shlb
mov
adcl
inc
pop
dec
inc
inc
dec
push
jbe
sahf
jmp
inc
mov
mov
pop
insb
lahf
mov
push
dec
jnp
pop
cwtl
mov
sub
in
test
aaa
sbb
cmp
cmp
lahf
mov
push
cld
aad
loopne
and
sti
pop
imul
adc
or
sbb
clc
push
jp
jne
dec
jnp
shlb
imul
add
push
adc
push
jbe
popf
xor
div
and
sbb
xchg
iret
add
xchg
xlat
and
roll
and
pop
ret
or
add
jne
adc
inc
or
pop
ret
aas
in
push
push
in
sub
test
clc
fimull
nop
mov
mov
mov
in
or
adc
adc
loopne
dec
scas
nop
add
in
inc
inc
cs
xchg
inc
je
lret
std
stc
push
push
jno
xchg
mov
test
in
inc
jbe
adc
jb
and
or
nop
cmpsb
dec
call
imul
mov
sub
pop
aad
sub
jmp
push
fildl
or
out
lock
cwtl
and
rcll
decl
cmp
enter
inc
jns
pop
xchg
add
movsl
xchg
adc
push
and
dec
incl
cmpsl
sbb
js
mov
movsb
xor
xor
sbb
adc
jg
add
inc
in
test
sub
aam
push
arpl
je
sbb
sub
or
pop
loopne
aas
or
ss
jne
inc
adc
movsl
push
insl
or
mov
add
or
das
mov
or
int3
lahf
out
or
and
cmp
lret
insb
fmul
dec
inc
xchg
and
xchg
test
repnz
dec
rorl
push
movsb
push
add
push
lds
ret
dec
mov
cwtl
pop
jns
inc
sub
mov
outsl
xor
cmp
adc
xchg
push
adc
mov
add
add
jns
cmpsl
cmp
add
jno
repnz
inc
mov
jns
insl
daa
out
clc
or
clc
xlat
and
ret
mov
mov
shl
pop
daa
mov
inc
mov
push
and
faddl
stc
sbb
inc
xor
mov
mov
js
xchg
fbld
push
ficompl
rclb
pop
addr16
arpl
xchg
xchg
data16
jl
mov
imul
mov
pop
ja
pop
pushl
stos
xlat
dec
fwait
push
js
push
jecxz
loopne
aaa
inc
icebp
ret
rcrb
jl
sub
jmp
xchg
push
cld
add
orl
jecxz
bound
scas
testb
lret
hlt
add
push
jae
lods
xor
or
inc
xor
jp
mov
or
sbb
cwtl
xlat
icebp
ljmp
fidivrs
sub
and
test
rorl
dec
mov
mov
dec
jmp
adc
fisubrl
setae
or
imul
aas
adcb
enter
xchg
mov
sbb
sbb
xor
scas
push
add
cmp
or
enter
push
xor
and
in
das
insb
int3
dec
mov
pop
sub
insl
adc
sub
lret
push
mov
clc
les
push
push
mov
sub
mov
xor
nop
popa
jae
pop
push
push
pop
push
pop
popf
popa
sti
pop
aas
nop
add
addb
mov
mov
cmpb
pop
repnz
push
lds
push
clc
xlat
sbb
es
pop
js
rorl
aaa
aam
sbb
or
xor
pop
pop
lock
or
lret
add
cmp
sbb
sub
imull
xlat
sbb
adc
mov
iret
repz
adc
sbb
inc
pusha
jp
out
cmp
scas
cs
inc
mov
data16
pop
daa
shl
push
clc
aas
dec
mov
push
data16
sbb
cmp
rcl
add
daa
movsb
dec
or
xlat
loopne
jb
pop
ljmp
in
jmp
add
sub
or
fimuls
jecxz
add
js
fstps
fwait
and
or
loopne
fstpl
idivb
leave
xor
mov
ret
jb
daa
push
push
mov
repz
or
aas
xor
pop
mov
cld
push
inc
jmp
and
lods
pusha
jmp
fwait
add
lock
and
add
jmp
adc
cmpb
je
dec
andnps
out
dec
js
adc
mov
pop
and
push
das
out
lret
fbstp
sbb
inc
push
push
cmp
xchg
xlat
add
ds
mov
jecxz
jp
fsubp
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
adc
adc
push
sbb
shll
push
data16
xchg
or
pop
or
and
inc
stc
cmp
lods
or
fiaddl
dec
and
add
jle
push
adc
hlt
ror
pusha
scas
fists
add
pop
cmp
mov
or
in
and
add
scas
sbb
pusha
das
xchg
inc
add
mov
push
cmp
push
je
push
outsl
push
test
call
or
pop
out
adc
and
mov
mov
aad
inc
mov
arpl
iret
repz
rcl
out
cmp
jmp
or
dec
sahf
idivb
or
sahf
out
jbe
xchg
xchg
movsl
mov
ljmp
and
xchg
pop
xchg
data16
aas
imul
mov
jae
mov
fldenv
pushf
push
sar
cmp
pop
push
jb
inc
jnp
cwtl
inc
fnsave
push
push
push
test
sbb
and
enter
jo
int
ljmp
outsb
inc
add
mov
pushf
clc
sub
add
pop
dec
je
jmp
outsl
gs
sbb
rcrl
inc
adc
and
mov
addr16
pop
repz
out
or
fdivr
and
fidivs
jle
lock
out
jbe
or
scas
mov
jo
mov
ret
pop
push
pop
insb
mov
fldcw
mov
push
leave
fstp
sub
xchg
push
adc
push
fwait
test
lret
and
lods
and
mov
fists
push
xor
movsb
sub
or
addl
or
daa
add
jmp
mov
dec
push
or
scas
dec
sbb
push
movhps
lret
sub
sbb
or
add
mov
pop
in
addr16
jb
add
std
sbb
push
or
add
pop
jb
test
rcll
xor
mov
mov
jmp
rcpps
leave
pop
jb
or
es
fadds
rcrb
mov
sbb
loopne
inc
adc
outsl
in
loopne
jns
pop
push
xchg
add
mov
xchg
xchg
push
dec
xchg
push
xchg
or
or
mov
adc
mov
loop
in
lock
add
iret
repz
add
or
adc
cmp
dec
enter
add
inc
scas
mov
jp
jns
ret
push
mov
mov
push
mov
push
mov
lds
in
cmp
aas
orps
add
in
shll
rorb
in
add
add
jo
sahf
testl
cmpsb
jg
jb
push
fistl
gs
in
fistl
mov
and
xchg
add
adc
int
xor
ret
pop
mov
adc
and
dec
repz
dec
push
or
adc
nop
sub
adc
adc
enter
movswl
adc
xlat
inc
dec
adc
mov
xchg
sub
or
lret
sbb
xchg
fs
push
sbb
cltd
sub
add
push
cmp
cmp
push
adc
in
and
aaa
cltd
jne
stc
rclb
ret
push
xor
aaa
sbb
or
adc
sbb
mov
in
cmp
repnz
in
push
or
in
adc
pop
hlt
loope
ret
orb
mov
mov
push
jl
test
cmp
jno
movsb
mov
and
popa
dec
call
adcb
fnsave
mov
push
xor
xchg
pop
rcrl
inc
clc
cmp
sbb
in
mov
mov
addr16
push
jae
call
pop
and
jp
sub
rorl
mov
dec
ja
mov
cmp
movsb
xor
lock
cmp
pop
lret
pop
adc
cmp
repz
stos
mov
repz
lret
jns
and
pop
inc
push
shlb
out
jnp
clc
lock
adc
rclb
adc
ss
icebp
ss
fsubs
sub
adc
pushf
sbb
or
mov
add
sbb
insb
cmpsb
movsb
and
mov
daa
mov
mov
ret
dec
fs
dec
xchg
cmp
mov
adcl
xchg
cmpl
sub
test
push
jns
out
test
xchg
test
cmpsl
fwait
mov
push
pop
and
jns
mov
pop
pop
ss
pop
push
movsb
sbb
rcrl
lods
mov
xchg
das
xor
add
xchg
loop
pop
pop
dec
pop
adc
mov
push
movsl
jmp
and
cwtl
gs
push
je
in
add
inc
out
sub
loope
sbb
nop
inc
nop
push
cmp
and
and
fildll
insb
xchg
stos
pop
outsb
fwait
test
pop
in
aam
sbb
sub
xchg
xor
and
mov
cmp
cltd
lret
sti
lock
pop
push
mov
nop
out
cmp
or
sbb
or
decl
sbb
add
mov
jno
dec
push
rolb
pop
out
je
pusha
test
sub
outsl
jnp
out
adc
inc
jmp
testl
push
or
sub
push
jns
dec
or
add
jp
iret
sarl
push
inc
data16
stc
cmp
repz
stos
rcl
sbb
in
sbb
hlt
movsb
repz
sbb
es
xorl
inc
cmp
mov
lock
sbb
sbb
inc
addl
pop
nop
fldt
fstp
imul
das
test
sti
lods
mov
push
push
incl
adc
aas
add
add
add
icebp
fcompl
pop
adc
push
das
sbb
push
or
arpl
int3
ds
push
inc
lods
sbb
add
cmp
repz
ss
fstl
inc
mov
fiadds
cltd
cmp
repz
mov
lret
xchg
xor
pop
in
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
sbb
sbb
and
mov
add
and
lds
inc
call
imul
imul
fisubrs
neg
ret
xchg
sbb
psubusw
sub
add
inc
clc
adc
xchg
mov
insl
call
pshufw
add
or
sbb
jecxz
add
mov
shll
or
mov
inc
repnz
das
mov
jb
popa
lock
mov
nop
push
push
or
pop
cmpb
mov
cwtl
xchg
imul
or
cmp
jbe
bound
iret
repz
into
loopne
and
push
imul
add
jns
inc
pop
and
in
frstor
adc
sbb
filds
and
fcmovnu
into
daa
popa
lock
imul
pop
add
and
inc
jge
arpl
mov
and
mov
lods
fiaddl
sub
pop
push
mov
flds
add
hlt
push
fildll
add
mov
inc
dec
dec
jnp
out
and
in
pop
add
add
ja
nop
push
sbb
push
xor
cmp
mov
and
xor
out
sahf
cmpsl
aas
dec
pop
outsl
andl
inc
cmpsl
push
push
daa
mov
rolb
out
adc
sbb
pusha
xor
loope
sbb
loop
mov
shrl
push
mov
inc
imul
inc
add
add
icebp
sub
jmp
daa
mov
movsb
xor
imul
pop
insl
jmp
mov
lds
adc
pop
and
mov
aam
loopne
mov
or
dec
adc
rolb
add
jbe
or
cmp
fldt
sub
jmp
es
lcall
sbb
in
add
sub
mov
out
pop
push
je
lcall
mov
adc
add
lea
aas
out
adc
insb
add
mov
adc
push
lahf
hlt
fildl
xorb
mov
add
mov
xchg
lret
mov
lock
shl
fildll
dec
xchg
pop
inc
jo
dec
push
xor
and
aaa
cs
add
adc
rorb
into
xchg
push
test
loopne
call
mov
test
push
cmp
cwtl
pusha
es
loopne
sbb
popa
movsb
ror
dec
push
pop
mov
test
out
push
es
scas
jl
sbb
dec
xchg
adc
aaa
lock
push
dec
dec
cmp
stc
fcmove
movsl
pusha
push
lock
mov
jbe
pop
leave
stos
nop
sub
stc
and
mov
add
mov
xorl
les
shl
add
push
out
sahf
ja
push
xor
ljmp
pop
push
push
in
test
xchg
scas
daa
fistps
xchg
outsb
repnz
sarb
rclb
movsb
fstl
adc
in
es
sub
lahf
push
mov
int3
or
lahf
sbb
sub
movsb
or
xchg
mov
adc
mov
mov
cmp
xor
fwait
sub
pop
lret
mov
inc
fists
addr16
jnp
imul
xor
test
mov
mov
sub
jb
dec
dec
outsl
sub
push
jne
adc
dec
inc
pushf
in
dec
xchg
push
push
adc
adcb
adc
add
in
sub
pop
das
xchg
sub
xchg
sbb
outsl
cwtl
cld
in
push
push
pop
nop
out
push
sub
fildll
mov
or
fs
fildll
in
xor
pop
leave
andl
jge
repnz
dec
push
xor
push
mov
iret
repz
push
cmp
adcb
mov
sub
ss
push
imul
sub
xor
iret
pop
jne
outsb
and
in
ret
or
fildl
imul
pop
and
lods
out
pop
sbb
pop
mov
rorb
insl
test
mov
add
jae
adcl
adcb
iret
pop
and
lcall
pusha
push
das
pop
xor
sti
cmp
dec
inc
pop
imul
in
popf
push
inc
daa
mov
jns
hlt
push
push
sub
jno
daa
fildl
lods
inc
stos
and
mov
pop
fisubl
and
dec
push
mov
lods
movsl
movsb
add
mov
mov
pusha
lds
pushf
or
or
ljmp
ret
mov
pop
mov
push
inc
lea
xchg
mov
cmp
mov
scas
pop
in
xor
jne
pusha
mov
xchg
or
popa
ds
je
and
clc
mov
add
adc
jmp
inc
lock
cmpsb
rcrb
hlt
sbb
ret
add
add
dec
add
mov
mov
xor
xchg
cltd
xor
js
loopne
pop
sub
dec
sbb
inc
inc
add
and
inc
rol
pop
clc
cmp
jecxz
add
or
xchg
sbb
loope
jno
xor
mov
mov
orb
lods
adc
and
in
sbb
jl
or
pop
test
or
lds
xor
adcl
inc
popa
movsl
add
or
adc
lods
or
cmpsb
add
jnp
lret
mov
cmp
adc
push
scas
and
es
jns
sti
cmpsl
aaa
mov
inc
add
xor
repz
repz
xchg
iret
loop
xor
adc
sahf
fildl
sub
cmp
pushf
popf
xor
pushf
daa
push
add
mov
sub
dec
cld
scas
xchg
xchg
movb
sbb
add
jb
xor
lret
mov
cld
in
rorl
inc
fucomp
add
mov
or
or
cmp
clc
add
test
or
cmp
mov
mov
into
push
or
or
xchg
in
and
lea
pushf
xor
mov
pushf
xor
mov
xor
shlb
andb
or
cmp
call
inc
das
jbe
jne
sar
int
jbe
xchg
dec
mov
and
lret
mov
aad
outsl
shlb
shlb
and
mov
lock
cmp
out
cmp
xchg
xor
ss
imul
repz
cltd
jl
push
mov
lock
sbbb
in
xchg
mov
mov
push
outsl
add
and
cmp
pop
enter
xchg
pushf
je
lods
lods
cmp
sbb
push
out
shll
movsb
push
adc
negb
es
mov
dec
gs
push
pushf
cwtl
mov
shlb
cwtl
xor
stos
xchg
insl
or
push
shlb
nop
dec
mov
cmp
gs
imul
stos
and
adc
mov
adc
mov
cmp
mov
dec
jb
or
mov
or
mov
test
mov
in
dec
test
out
jmp
leave
add
or
push
jno
adc
jecxz
dec
sub
adc
dec
cmp
dec
pop
mov
cmp
xchg
push
adc
ret
xchg
ret
and
leave
cmp
push
xor
loopne
aad
cmp
xor
mov
nop
xchg
jne
es
sbb
lret
mov
sbb
cmp
vphaddubd
dec
cmp
dec
push
push
push
ljmp
shlb
out
sahf
pop
jne
mov
out
dec
mov
jl
cmp
ljmp
imul
dec
push
fs
sbbb
cmp
fsubrl
jo
fisubrs
cmp
add
sub
dec
dec
fcoms
push
xor
xor
inc
xor
xor
push
pop
dec
fcomps
cmp
enter
cli
in
in
adc
dec
jno
aaa
loopne
and
lods
jnp
fmull
mov
dec
fdivs
fdivs
aam
shlb
add
ror
push
pusha
dec
dec
jno
xchg
loopne
fcompl
daa
mov
es
insb
enter
es
xchg
cmpsl
sub
outsl
std
sbb
aaa
pop
mov
ds
lret
cmp
jns
push
inc
jnp
sub
repz
imul
out
or
add
test
ss
add
mov
adc
mov
xor
fnstsw
sub
sbb
mov
mov
pop
cmp
es
mov
aaa
mov
arpl
test
movsb
or
rol
movsb
aad
lcall
pushf
aaa
cwtl
lods
fstpl
cmp
cwtl
mov
dec
out
jno
aaa
dec
adc
lcall
xchg
jecxz
nop
popf
nop
mov
pushf
aaa
cmp
sub
mov
cld
sbb
dec
add
mov
and
xchg
add
es
repnz
test
sbb
nop
int3
loopne
mov
nop
pop
mov
hlt
bound
popa
test
or
ret
ret
gs
dec
aas
and
inc
enter
pop
aaa
push
cmp
pusha
or
mov
or
je
jmp
sub
outsl
mov
sub
ss
sbb
cmovp
jmp
cmc
mov
mov
or
jge
outsb
adc
sbb
shlb
xor
jecxz
add
sbb
sub
inc
out
add
cli
out
dec
insb
popf
movsb
out
ret
repnz
adcb
jb
or
lea
sub
outsb
inc
xor
dec
and
lock
push
nop
fmuls
add
std
pop
ret
push
testw
imul
addr16
aam
rol
mov
jg
mov
jmp
movw
ja
shrb
lods
xchg
inc
or
out
sub
ds
adc
mov
mov
cmpb
mov
adc
aad
or
inc
aas
adcb
adc
scas
lods
mov
xchg
pop
das
push
xchg
dec
bound
cmpsb
mov
lahf
push
inc
scas
inc
scas
push
pop
dec
adc
or
or
sub
inc
fwait
adcb
xlat
and
fstpl
roll
or
xor
add
js
and
dec
inc
mov
lods
ds
nop
xchg
pop
mov
dec
cmp
adc
call
and
aas
addl
cmpsl
leave
or
jns
sub
or
enter
xchg
jecxz
nop
inc
push
jb
call
and
add
inc
push
sarb
push
xor
fsubrl
cmp
cmp
mov
sub
sub
test
pushf
pushf
add
or
fsubs
shl
xor
scas
inc
das
push
xor
mov
xor
xchg
mov
or
push
repnz
cmp
push
ja
jmp
in
inc
xor
call
jb
pushf
fmuls
jno
jne
jmp
addl
adc
adc
je
dec
aas
faddl
add
aaa
and
inc
sub
lmsw
dec
jmp
adcb
and
test
aaa
in
pop
or
and
or
cmp
outsl
inc
lret
mov
xchg
pop
inc
insl
jo
add
test
dec
jne
jmp
lahf
mov
or
jnp
pop
mov
in
jae
push
ds
add
push
fiaddl
lods
add
add
iret
add
add
insb
rcrb
lods
mov
mov
push
aad
xor
pop
sub
repnz
and
outsb
imul
cld
jl
dec
inc
arpl
pop
add
inc
adc
adc
push
or
cmp
pop
into
test
ret
jb
test
cmp
shlb
aaa
ss
xchg
mov
shrl
cmp
add
cmp
pop
adc
sti
out
int3
or
push
enter
dec
add
out
lahf
cmp
pop
mov
hlt
insb
das
add
jno
cmp
jno
mov
mov
test
stos
xchg
cld
inc
popa
xchg
and
hlt
pop
cmp
mov
adc
sub
popa
into
inc
jl
mov
lret
adc
test
leave
mov
sbb
or
and
enter
xchg
daa
or
sub
xchg
in
push
shll
pop
mov
jns
mov
inc
push
and
pushw
dec
ret
jmp
lret
push
cmp
scas
aaa
cmc
mov
into
pusha
nop
pusha
nop
jmp
xchg
push
add
daa
xor
cmp
add
mov
sahf
fs
hlt
cmp
cmpsb
add
mov
jo
pop
test
sbb
adc
and
pop
std
dec
ljmp
popf
cmp
pusha
test
pop
add
pop
arpl
mov
sub
daa
daa
or
mov
and
push
sbb
jo
adc
mov
push
or
inc
fisubl
setne
push
and
mov
lock
je
jo
add
or
or
insb
sub
dec
cld
rsqrtps
mov
adc
jne
sub
push
cmp
push
nop
clc
aaa
xchg
inc
sar
inc
roll
outsl
lret
movb
pop
cmp
and
jg
lret
mov
or
push
dec
push
sub
inc
mov
pop
xchg
outsl
dec
jne
arpl
js
and
xchg
inc
test
sbb
jnp
push
push
pop
jg
int
or
jle
inc
xor
and
pop
or
pop
lret
push
jge
xchg
test
push
jp
xor
and
mov
test
decl
jmp
ljmp
fcomps
xchg
xchg
movb
shr
push
inc
aas
mov
jg
shl
cmp
cs
jae
sub
dec
test
adc
movaps
mov
jne
xchg
outsb
dec
push
ss
test
jbe
xor
sti
jl
add
lea
cmc
les
iret
jge
sub
sahf
out
mov
inc
call
sbb
inc
adc
add
arpl
orl
int3
cmp
push
jecxz
pop
add
adc
mov
or
jmp
js
push
movsb
dec
clc
enter
xor
pop
mov
adcb
adc
ljmp
pop
push
mov
inc
jle
pushl
dec
jns
push
jo
pop
pop
lahf
es
fs
or
and
cltd
xchg
fmull
out
lcall
xchg
jmp
xchg
xor
adc
stos
nop
xchg
out
sbb
ss
sbb
cmp
mov
cltd
sbb
push
lock
in
lock
lahf
fstpl
inc
adc
repnz
and
sbb
mov
sbb
jb
or
jge
xchg
mov
inc
push
lea
mov
and
fwait
mov
inc
xchg
clc
cltd
andnps
js
cltd
dec
sbb
push
add
inc
jbe
cmp
sub
push
mov
or
jge
ljmp
hlt
sahf
mull
gs
or
add
inc
cmp
jle
dec
enter
call
or
mov
mov
enter
hlt
hlt
rcll
adc
loopne
outsl
push
inc
loop
adc
cmpb
je
push
or
or
aaa
pop
fst
lret
push
push
mov
push
sub
ljmp
stos
push
jle
sti
xor
aas
inc
incb
adc
inc
jle
mov
mov
mov
push
cmpb
add
inc
dec
pusha
sbb
pop
jne
mov
adc
sbbl
xchg
xor
cmpsb
les
pop
mov
xor
inc
jl
inc
xor
cld
adc
lods
addr16
into
add
call
dec
mov
fisttps
dec
sub
lret
cmpl
andl
inc
dec
jne
fisubrs
and
cmp
clc
add
mov
xorl
decl
xchg
fildl
pop
int3
adc
bound
orl
pop
cs
sbb
pop
cmp
dec
enter
or
dec
adc
add
lods
jge
adc
mov
sbb
sub
jo
call
push
test
sbbb
fdivrs
scas
mov
fdivrl
adc
mov
add
pop
or
in
push
andb
je
int
je
pcmpeqb
and
leave
lahf
lock
add
push
mov
cld
jo
or
imul
hlt
push
pop
inc
sub
lods
ficoms
mov
repz
int3
mov
and
push
inc
mov
test
call
cmp
sarl
jg
fists
sarb
hlt
add
mov
fnstcw
or
jo
loop
out
lods
jg
ficomps
mov
pushf
add
mov
and
pop
imul
or
fwait
ljmp
shrl
jg
sbb
ffree
lret
stos
push
or
xchg
iret
repz
pop
les
out
add
push
adc
xor
insl
movsl
mov
push
call
mov
add
add
mov
jnp
shrl
adc
push
push
fistl
ds
mov
idivb
and
mov
xor
xchg
cld
flds
and
xchg
mov
repnz
fildll
cmp
add
xor
cltd
scas
sbb
pusha
aad
cmpsb
pcmpeqb
dec
shl
or
jecxz
insl
jg
xor
pop
imul
lea
sbb
fs
imul
sahf
push
xchg
sub
push
cmp
sbb
or
in
sbb
insb
sub
pop
cmp
sub
or
mov
loopne
and
addr16
cmp
adc
inc
pop
sahf
mov
lock
xor
dec
add
rorb
add
cmp
ret
mov
xchg
movsb
cmp
lods
or
xor
cmp
cmp
inc
xor
imul
in
inc
jb
aas
in
int
arpl
sub
inc
xor
pop
add
cmp
dec
inc
fcoms
add
in
sbb
roll
call
in
fsubs
mov
sub
push
sub
scas
push
popf
adc
push
cmp
pop
add
and
repz
repz
push
bound
xchg
inc
mov
lea
or
jb
fs
aam
faddl
test
add
aas
xor
mov
stc
or
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jmp
push
out
jmp
lods
shl
sahf
pop
or
dec
jg
popa
imul
das
insb
jmp
xor
jbe
mov
xor
shlb
les
call
imul
inc
jo
jmp
cwtl
fdivrs
jl
outsb
xor
add
cmp
add
dec
out
inc
mov
mov
or
pop
clc
out
std
push
jmp
cmp
push
mov
cmp
xor
lahf
pop
push
jnp
cli
pushl
sti
pop
inc
xchg
pop
js
push
orb
out
and
scas
dec
ds
mov
xor
incb
adc
fldcw
jmp
inc
adc
insb
mov
daa
loope
dec
cmc
jge
cmp
scas
test
adc
rorl
ds
xchg
or
sbb
xor
inc
xchg
inc
xchg
imul
lock
lea
add
add
pop
mov
out
addb
leave
adc
mov
call
mov
sbb
ret
pushl
ja
or
ret
add
incl
dec
pop
aas
adc
lret
sar
mov
push
push
mov
into
cmp
mov
imul
leave
inc
mov
or
xor
pop
sub
jge
adc
aad
inc
dec
loope
sti
xor
or
push
mulb
sub
das
in
lock
mov
pusha
cld
sbb
ja
nop
inc
mov
shl
sub
fstpt
cmp
dec
add
jo
jns
mov
mov
cmpsl
push
add
push
int
pop
sub
jl
mov
or
xor
inc
dec
jne
aas
lcall
stos
jne
and
jl
mov
jae
sbb
jmp
add
int3
sub
in
add
xor
and
aam
cmpsb
mov
add
mov
xchg
daa
enter
enter
inc
daa
push
adc
pop
cmp
adc
rolb
loopne
add
test
in
push
sub
inc
in
lods
mov
jno
inc
pop
xor
cs
push
jle
or
add
dec
dec
mov
sbbb
mov
es
imul
push
inc
inc
stos
int3
scas
movl
movsl
out
and
movw
cmpsb
addr16
cmp
dec
or
jmp
cmp
ss
ds
sub
inc
pop
ret
in
int3
add
repnz
cmp
push
rcll
dec
fdivrl
filds
daa
xor
outsl
sbb
pop
xchg
ja
ljmp
add
nop
inc
cmpsl
enter
bound
inc
cmpsl
jmp
sbb
or
daa
insb
jle
arpl
inc
daa
adc
xchg
pop
jle
insb
xor
or
gs
xor
mov
xchg
mov
aaa
nop
les
push
ja
or
test
leave
andl
pusha
or
mov
lock
or
mov
cmp
in
ret
add
and
lea
pop
cmp
cmpsb
insb
push
pop
mov
push
shl
dec
clc
lea
cld
push
cmp
ss
mov
mov
jge
enter
and
leave
arpl
or
mov
mov
dec
dec
scas
imul
sti
add
push
clc
mov
jne
cmp
cmp
inc
hlt
xorl
sbb
mov
inc
sub
or
jmp
ja
jno
sbb
shrl
inc
or
sbb
mov
or
or
out
jnp
cmpsl
jp
lock
arpl
add
hlt
inc
or
hlt
inc
aaa
pop
notl
daa
testl
js
loope
imul
mov
out
in
bound
add
pop
push
add
cmpsl
subb
inc
mov
cmp
adc
cmp
and
fsts
fsubs
cwtl
daa
sbb
repz
mov
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
sub
or
or
loopne
sbb
push
int
push
or
push
push
enter
mov
into
cmp
pop
xor
js
daa
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
aam
js
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
fsubrs
push
stc
add
inc
popl
insb
add
mov
mov
xor
push
dec
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
fbld
inc
push
loop
push
xchg
fadds
push
push
clc
dec
les
les
mov
xor
test
dec
pop
push
pop
inc
cld
inc
and
outsb
jo
mov
les
fimull
ja
lock
ror
sub
std
dec
sub
or
pop
jbe
lcall
jle
cld
dec
adc
sbb
pop
and
mov
mov
loope
fdivr
sti
cmp
setg
testl
sub
test
inc
add
push
mov
and
xchg
lock
mov
addr16
fs
add
mov
lock
push
cli
and
add
sbb
mov
out
push
arpl
add
sbb
mov
xchg
add
xor
ret
mov
push
add
add
and
and
inc
add
and
nop
sbb
mov
jecxz
or
pop
out
and
inc
lock
leave
call
push
mov
dec
add
dec
dec
mov
add
adc
hlt
jno
and
sub
data16
fisubrl
jae
jne
mov
neg
mov
adc
cwtl
cmc
adc
test
mov
xor
cld
xchg
out
lret
daa
jo
xor
inc
sbb
adc
das
sub
add
xor
cmp
cwtl
cmp
test
or
xchg
cmp
inc
inc
inc
inc
ds
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
cwtl
cltd
inc
inc
inc
inc
lcall
inc
sahf
lahf
addb
addl
xchg
inc
mov
inc
inc
mov
inc
inc
jb
addr16
inc
sub
enter
inc
inc
sub
rclb
adcb
push
and
lock
cmp
jnp
xchg
push
popf
jns
loopne
call
aas
lea
push
lahf
push
cmc
or
xchg
test
sub
movaps
adc
adc
and
jl
adc
or
mov
jo
lock
push
push
nop
imul
push
loopne
add
pop
mov
repnz
push
jb
jo
jb
jns
imul
mov
pop
fldl
or
dec
inc
pop
mov
dec
adc
or
popa
faddl
bound
ja
push
out
xlat
sti
xchg
out
daa
mov
pop
and
add
aas
sub
bound
iret
call
add
lock
mov
inc
nop
lea
jge
xchg
inc
insb
or
or
mov
jae
add
jne
jl
pop
sbb
pop
add
and
push
or
mov
data16
imul
push
in
cmp
mov
daa
das
jl
out
out
daa
movsb
push
mov
into
mov
bound
sbb
insl
add
repz
icebp
jbe
and
sub
push
cmp
pushf
inc
dec
pusha
or
add
mov
jne
lahf
inc
push
pop
cmpb
imul
xor
fstp
sub
and
jge
mov
movsb
cmp
jmp
xor
and
cmp
xor
das
insl
je
push
pop
outsb
sub
shll
mov
xor
cs
inc
mov
xor
add
bnd
pop
insl
out
cmp
or
dec
insb
call
in
and
jge
adc
out
negb
or
adc
push
sbb
sub
jne
sub
push
or
sbb
scas
or
or
jle
and
pop
insb
leave
push
and
test
shll
test
push
nop
test
hlt
sub
pop
dec
es
cmc
mov
rolb
das
insl
dec
lahf
out
sti
xorb
mov
dec
outsb
dec
fidivs
lds
ficoms
loopne
pop
in
push
or
inc
add
xchg
or
sbb
repnz
or
pop
push
pop
mov
int3
add
inc
xor
inc
or
inc
and
leave
cmp
cmp
adc
push
pop
nop
nop
dec
cli
jne
ljmp
jge
lods
or
lea
scas
mov
les
ss
shll
lock
in
sbb
ss
leave
pop
jno
push
cmp
in
call
movsb
std
imul
jmp
push
pushf
mov
or
or
cmpsl
lahf
outsb
push
jmp
cmp
and
jne
sub
inc
popa
jnp
xor
adc
adcl
lods
mov
xor
jmp
add
jno
mov
cmp
ljmp
aas
insb
fnsave
add
iret
loope
fldcw
stos
pushf
xlat
mov
mov
mov
daa
orb
leave
inc
rclb
jo
add
mov
add
adc
xor
idiv
pop
sbb
scas
lods
xchg
dec
or
mov
xor
xlat
loope
mov
xchg
adc
les
adc
add
ljmp
js
ljmp
icebp
jo
aad
push
movsl
xchg
and
and
sub
jo
dec
lods
inc
or
mov
or
push
lods
mov
pop
adc
xor
test
jne
out
push
push
cs
dec
xor
clc
jle
mov
cmp
add
int
fimuls
sub
jb
add
loopne
cld
cmc
xor
adc
push
movsb
pop
push
sub
mov
addl
jp
or
fcmovb
dec
mov
pop
inc
gs
push
mov
testb
mov
mov
adc
add
pop
or
mov
push
or
sbb
pop
sbb
jmp
lret
je
mov
dec
and
sbb
xor
mov
insl
shll
jmp
jle
in
je
jmp
cmp
lock
test
out
jne
pop
call
std
mov
or
sbb
pop
mov
and
aam
je
sub
inc
addb
and
int3
add
xchg
lds
ja
cmp
aas
pop
je
pop
lods
in
or
dec
and
decb
ja
and
adc
sbb
and
mov
mov
cmp
insb
push
add
adc
pop
es
or
movsbl
or
sbb
jp
lcall
aas
dec
aaa
mov
in
fisttpl
sarl
cmp
lret
or
xchg
out
orb
testb
call
out
mov
mov
or
pusha
test
fcomip
popa
or
imul
inc
out
loope
mov
popa
dec
mov
mov
ljmp
cmpsl
or
imul
mov
cmpsb
mov
and
lock
jno
adc
xchg
xorb
or
pop
cmp
movsl
sub
inc
and
lcall
icebp
jb
rcrb
in
inc
dec
dec
loope
ret
test
sub
and
and
out
mov
push
push
imul
fwait
xor
mov
mov
pop
pop
pop
pop
test
pop
sbb
mov
add
xor
pusha
inc
or
add
cmc
fcmovbe
sub
push
mov
outsl
sahf
mov
add
div
je
add
lgs
dec
pop
mov
add
jne
pop
xor
sbb
sbb
add
je
jge
roll
mov
dec
push
mov
pusha
sub
mov
mov
dec
jae
nop
add
pop
imull
pop
push
jne
mov
or
movb
pop
jl
test
or
dec
and
movsb
cltd
add
adc
ds
mov
in
add
out
xlat
andb
movsl
jle
xor
adc
incl
cmp
pop
push
ret
call
rolb
or
ret
fcomip
ja
mov
lods
cmp
mov
enter
mov
push
mov
addl
popa
sbb
cltd
push
jge
ret
or
lds
inc
fstps
data16
pop
pop
cmp
das
cltd
es
sbb
or
xor
or
enter
mov
pop
clc
inc
jge
test
bound
fcmovnb
ja
add
xorb
inc
sbb
lret
mov
sub
js
scas
sbb
inc
xlat
cmp
add
ret
push
scas
push
mov
push
or
std
adc
sub
je
or
dec
je
jl
adc
sbb
stos
mov
je
addr16
fdivr
jg
mov
mov
sub
or
jmp
gs
aam
xor
or
mov
xchg
daa
out
pop
and
jns
imull
jecxz
adc
push
jmp
pop
sub
call
mov
rorb
fsts
and
sbbl
adc
sbb
xor
push
mov
aam
hlt
hlt
or
movsl
bound
decb
ficomps
fiaddl
adc
and
fbstp
rol
and
hlt
or
and
jp
sub
out
or
sbb
jp
scas
loope
iret
and
dec
shr
or
js
les
clc
clc
add
xor
ret
or
int3
lcall
pop
inc
dec
sahf
inc
mov
hlt
add
xchg
out
in
push
add
push
push
mov
test
fsubl
jnp
or
ja
enter
push
cmc
repz
mov
fsub
flds
frstpm(287
dec
sti
xor
adc
xchg
fcomps
lods
test
cs
push
and
push
cmp
jmp
das
push
jnp
add
jle
je
add
add
mov
adc
adc
rcrb
and
cmp
mov
cmp
aas
jbe
add
xor
push
jno
mov
imul
rorl
ja
lods
mov
enter
idivb
cld
jge
jl
insl
or
sbb
insl
push
adc
shlb
xor
add
mov
fimull
cmp
adc
or
cmp
mov
sti
fmuls
aaa
pop
add
xchg
mov
adc
fisttpl
test
or
push
push
fs
jns
movsb
cmp
and
mov
insl
pop
xchg
dec
sub
xor
push
sub
cmp
outsl
xor
sub
testl
or
cs
jge
sub
adc
jmp
pop
jmp
sbb
sub
jmp
or
pop
ret
nop
sbb
div
add
loopne
dec
mov
jge
rcrl
pop
pop
jp
adc
jno
incl
fildl
sbb
adc
push
mov
xchg
sub
xor
je
lods
inc
pop
or
or
pop
loope
mov
cs
std
into
xlat
mov
ret
vaddss
sbb
pop
adc
push
hlt
in
dec
or
dec
add
push
pop
shlb
cwtl
flds
cwtl
pushf
fstps
dec
cmp
and
pusha
or
mov
or
in
wbinvd
test
into
in
adc
ja
sbb
lahf
inc
dec
or
dec
jg
pop
mov
sarb
aam
push
das
js
nop
xchg
jg
jge
ret
fs
cld
call
je
addr16
push
dec
push
dec
pop
push
dec
or
cmp
rolb
inc
invd
dec
push
gs
imul
pop
or
add
inc
xchg
and
orl
or
mov
popa
insl
cmp
dec
mov
es
add
or
cmpsl
shl
or
pop
inc
inc
push
orb
pop
dec
and
fisttpll
or
and
or
or
or
mov
cmp
iret
adc
pop
addr16
enter
adc
mov
loop
pop
dec
outsb
push
insb
cmp
jmp
add
dec
int3
jg
jae
testl
adcl
mov
sbb
mov
pushf
add
arpl
cmp
ljmp
je
pop
andb
lds
sub
push
sub
adc
shlb
adc
fcmovnu
pop
ja
push
ja
outsb
addr16
stos
shrl
inc
cmp
xchg
insb
jp
in
icebp
nop
mov
dec
fwait
inc
fisubrl
jne
push
orb
jnp
mov
popa
aas
xor
pop
push
pushf
fsubl
pop
jle
cmpxchg
movsb
mov
pushf
cwtl
xchg
nop
mov
shrb
xchg
shrb
arpl
dec
mov
sub
insb
imul
test
cwtl
xor
dec
gs
fsubrs
jns
sbb
scas
sbb
dec
push
mov
inc
fldl
jae
call
cmp
imul
fmulp
lret
fs
outsl
test
nopl
addr16
adc
dec
outsl
sbb
mov
jbe
pop
adc
dec
outsb
insb
jns
xchg
inc
fisubs
xchg
inc
fldt
bound
or
jp
into
pop
insb
or
cmpsl
or
dec
imul
adc
xchg
test
or
pop
cmpsl
mov
pop
push
dec
add
and
add
nop
loopne
add
mov
sbb
fsubrl
or
dec
gs
fstpt
jae
add
xchg
cmp
insl
xor
cs
adc
inc
jbe
dec
or
push
fsubs
xor
xorl
xor
adc
test
cmpsl
add
in
into
pop
test
mov
xchg
or
pusha
sub
mov
dec
or
or
xchg
mov
cld
sub
outsb
mov
xchg
adc
or
inc
repnz
jb
insb
insb
adc
in
test
inc
pop
sbbl
mov
and
pop
xor
sbb
scas
sbb
or
inc
and
inc
inc
mov
mov
cmpsl
pop
arpl
aam
add
push
imul
mov
imul
test
jnp
loopne
in
rclb
xor
mov
insl
jo
push
mov
inc
mov
mov
push
lds
pushf
mov
lcall
push
push
lea
cltd
jno
adc
jle
ja
mov
popf
ljmp
mov
test
insb
push
push
shrb
push
add
pusha
mov
xor
jbe
jp
or
mov
mov
push
sbb
push
pop
push
or
stos
mov
sbb
es
add
jnp
mov
nop
mov
mov
test
push
xor
jle
sub
lcall
lods
mov
pop
addr16
xchg
flds
adc
or
adc
dec
test
jmp
in
movsb
lods
cmp
mov
adc
add
imul
xchg
scas
inc
or
jns
out
cld
sbb
push
xlat
mov
push
ret
sbb
aas
jo
fbld
inc
lock
jnp
push
cmpl
cs
out
xor
mov
xor
filds
cmovns
jae
fs
jo
lcall
jecxz
jge
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
cmp
sub
sbbb
xlat
mov
jp
adc
mov
mov
divb
mov
pop
mov
mov
sarb
fldcw
cmp
sbb
je
inc
jo
inc
mov
testl
mov
sub
xchg
or
fs
or
cmp
loopne
scas
pop
sbb
xchg
mov
push
lods
lea
dec
lcall
pop
insb
bound
mov
rcrb
jb
stc
lock
mov
loope
mov
lods
lds
loopne
call
popf
pop
pop
movl
enter
data16
leave
pusha
ret
insb
ret
or
push
dec
aaa
leave
sbb
mov
pop
inc
movb
nop
pop
rolb
test
mov
add
xchg
sbb
mov
sbb
inc
xor
dec
dec
popl
mov
loopne
mov
fadds
lock
pop
nop
lret
rolb
push
push
mov
fistpll
sahf
testb
int
in
xchg
mov
push
or
popa
imul
mov
enter
push
xor
in
iret
inc
in
and
sbb
xlat
mov
loopne
inc
sbb
adc
inc
mov
mov
xchg
mov
mov
lret
adc
idivl
adc
inc
nop
lods
rolb
xchg
push
rorl
rolb
rcl
pop
mov
xor
mov
sbb
cmp
shl
andps
pop
cmpsl
in
or
or
sbb
adcl
enter
or
sbbl
sub
add
mov
orl
dec
xchg
jl
out
or
pop
das
cmp
xchg
repz
sarl
repnz
and
jnp
push
adc
push
adc
mov
lahf
loop
or
push
or
lcall
adc
fs
jl
add
push
mov
adc
mov
pop
adc
mov
push
inc
push
adc
das
fidivrl
add
sub
aam
dec
aam
xor
mov
pop
xchg
add
jl
sbb
in
inc
fldt
push
push
les
ds
enter
push
inc
or
loop
call
inc
xor
inc
and
inc
pmuludq
ret
or
adc
add
xchg
aas
fcmovb
mov
mov
aas
pop
call
rcll
stos
mov
rorb
mov
xchg
xor
outsb
and
hlt
adc
pop
push
imul
ror
int3
inc
or
pop
cmp
addr16
add
pop
sbb
incl
int
dec
addb
mov
lcall
cmpsb
popa
imull
push
add
xor
mov
xor
data16
in
pop
inc
addr16
inc
mov
mov
push
inc
or
orb
mov
push
nop
push
mov
bound
sti
adc
jmp
adc
sti
inc
cli
stc
clc
push
push
push
push
push
dec
jnp
mov
loop
push
ljmp
xor
cmp
iret
repz
push
pop
pusha
insb
jns
mov
push
dec
into
pop
push
cmp
sub
adc
mov
cmp
pop
push
mov
test
std
cmp
xor
pop
add
push
xor
aad
sarb
add
ss
xchg
mov
adc
out
sbb
push
mov
cld
mov
rclb
and
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
adc
leave
mov
push
pusha
push
push
mov
or
and
xchg
sahf
cmpsl
stc
mov
push
cmp
adc
rcrb
ja
cmc
push
add
or
or
sbb
push
je
sub
loopne
and
adc
ljmp
dec
roll
loopne
ss
adc
mov
js
pop
pop
pusha
ficoml
or
test
push
push
rcr
or
cltd
mov
gs
clc
and
in
cmpsl
dec
push
arpl
call
add
inc
repnz
xchg
cltd
xchg
cltd
filds
add
add
jb
jne
out
mov
in
scas
in
and
xchg
js
or
pop
lret
sub
in
fwait
mov
pop
sub
mov
in
push
mov
dec
lahf
les
pop
cmp
xor
add
xchg
xchg
and
out
xchg
or
pop
and
jmp
push
push
inc
sub
mov
pop
lcall
and
add
sub
lock
push
sub
fldt
or
cli
jne
and
jmp
mov
outsb
jmp
jecxz
sub
add
neg
pop
sbb
movsl
mov
icebp
orl
out
nop
stos
mov
inc
inc
add
int3
lea
cmp
jmp
or
pop
jl
lcall
sbb
jmp
addps
movsl
aam
jecxz
cmc
cld
inc
add
mov
and
sbb
mov
clc
mov
daa
mov
inc
and
add
pop
adc
mov
pop
sbb
pop
pop
pop
jp
pop
mov
rolb
pop
or
dec
icebp
dec
push
inc
or
jmp
dec
sbb
push
cld
xchg
hlt
push
insl
dec
into
lret
iret
pushf
fildl
mov
inc
daa
jno
or
mov
pop
xchg
popf
mov
lock
enter
xchg
test
pop
adc
pushf
cld
jmp
gs
jo
push
orb
pop
std
rol
cmp
inc
dec
call
mov
push
xchg
inc
cmp
jbe
sbb
adc
fmuls
sub
enter
add
cmp
movsb
imul
imul
xchg
imul
xor
jo
sub
and
pop
test
xchg
sbb
imul
mov
lret
gs
xchg
dec
adc
mov
clc
push
call
inc
or
or
das
xor
pop
cmp
mov
cmp
pusha
fcmovbe
cmp
add
movb
popf
ret
out
xor
stos
pop
call
mov
in
jl
inc
xor
out
mov
xor
inc
dec
jne
mov
rorl
test
cmpsb
inc
cmpsl
outsb
lds
inc
loopne
cmp
sbb
push
sub
jg
inc
rcr
nop
sub
xchg
mov
dec
cmpb
dec
popf
xchg
outsb
add
pop
add
xchg
sub
leave
xchg
je
lahf
clc
rorl
rcll
test
inc
clc
mov
xchg
sbb
add
cld
pop
sub
cltd
out
xor
add
add
adc
mov
pop
mov
xchg
movsl
roll
mov
int3
pop
shl
jne
push
sbb
pop
imul
mov
push
inc
add
or
jl
or
dec
fsubrs
rcrb
in
xor
xorb
outsb
repnz
inc
pop
imul
push
loopne
es
mov
insl
sub
cmp
push
xor
cmpsb
jecxz
dec
call
jne
movl
jno
push
sbb
inc
adc
push
sbb
jb
jle
mov
lret
out
dec
jae
inc
test
call
aad
jge
sbbb
and
mov
xchg
mov
mov
sbb
xchg
aad
or
test
pop
mov
repz
stos
sub
pop
xchg
mov
hlt
xchg
inc
mov
aad
lret
lahf
sbb
inc
sub
xor
cli
mov
mov
mov
repz
shlb
cld
cwtl
cltd
or
adc
in
pop
in
ret
leave
or
fstpl
or
mov
mov
sbb
xchg
pop
mov
nop
sub
aam
fcom
into
mov
jae
push
test
sbb
adc
notl
add
jo
adc
mov
push
sub
ja
cli
dec
or
and
clc
and
cmpsl
sbb
mov
xchg
xchg
daa
lods
roll
jmp
mov
or
add
es
rolb
add
movsb
mov
ja
enter
ret
fsubrs
jbe
adc
mov
push
jno
inc
call
jg
xchg
lret
xchg
and
xchg
mov
xchg
jmp
inc
clc
mov
jmp
push
je
cmp
insb
cmp
push
shll
enter
movsl
and
lds
sub
sbb
xchg
je
push
xchg
xchg
add
or
popf
xchg
add
and
sub
mov
lea
jbe
pushf
cmp
aas
adc
dec
rolb
rol
loope
ss
addr16
icebp
and
or
or
push
push
sub
sub
mov
push
outsb
xchg
movsb
hlt
fsubrs
bound
cmp
outsl
mov
and
pop
adc
bsf
js
pop
add
lret
mov
jbe
rolb
cmp
addr16
mov
in
lahf
add
sub
clc
pop
push
mov
sub
lea
add
add
daa
addb
cld
mov
jmp
ret
pop
and
and
mov
add
inc
adc
add
sbb
jge
adc
sbb
jns
ret
idivl
sub
mov
in
pusha
push
sub
data16
push
cmp
push
mov
push
fs
mov
add
mov
in
je
rcrb
ja
cmp
dec
lahf
pop
mov
mov
aam
and
and
mov
jbe
daa
inc
popf
or
test
test
pop
icebp
sahf
push
mov
aam
or
jge
jbe
pop
xor
fldcw
mov
xchg
ret
mov
test
push
sbb
jb
cmp
add
pop
add
add
sub
test
jae
testl
rcl
cmp
push
xchg
sub
fdivrl
xlat
arpl
pop
mov
aaa
push
insb
mov
out
sbb
mov
lcall
push
dec
xchg
mov
adc
lock
int
mov
push
or
pushf
test
shll
mov
xchg
cld
pop
mov
outsb
stos
sbb
cmc
and
cmp
mov
jo
je
mov
in
jno
and
cmp
push
pop
dec
adc
pusha
jno
mov
pop
fld
or
xor
gs
in
mov
mov
cmp
rol
xchg
in
and
mov
sbb
shlb
fstpl
dec
imul
push
mov
movsb
push
mov
mov
shrl
rorb
aas
movl
bound
push
jge
inc
je
enter
xor
ja
rcl
and
shll
loop
inc
adc
pop
pop
aas
ljmp
leave
int
push
fisubl
or
jne
mov
das
and
js
inc
stos
add
insb
push
into
cld
loopne
iret
cli
sub
or
dec
or
mov
sbb
inc
idivl
shl
loop
adc
or
in
push
jmp
cmc
mov
icebp
xchg
adc
sbb
xor
jp
push
mov
clc
push
xchg
pop
mov
shr
jmp
or
inc
mov
sub
ficoms
pop
xchg
mov
into
test
xor
push
lods
dec
lcall
sbb
cmpsb
add
int
cmp
push
sbb
adc
push
lret
cmp
and
push
sbb
fcomp
jnp
add
imul
jmp
inc
cmp
jge
add
push
push
jnp
cmpsb
jne
sbb
leave
rorl
popf
iret
std
jle
inc
lds
jae
push
push
mov
inc
loopne
inc
sbb
jecxz
xchg
pusha
pop
jg
jecxz
sub
in
push
ret
cmc
mov
test
mov
test
add
jb
and
leave
xchg
out
lea
pop
sarb
adc
pop
pusha
xchg
je
scas
dec
jmp
or
shl
lcall
xor
call
push
fildl
lock
sbbl
jle
test
inc
loopne
jo
mov
push
bound
ja
call
std
jg
dec
hlt
dec
nop
rolb
fstpt
jo
cs
xchg
cmpsl
xorl
inc
mov
loop
dec
cmpsb
jb
sub
call
shl
scas
adc
je
sbb
push
push
mov
in
dec
jo
mov
mov
insl
jmp
cmpb
das
push
dec
xor
xchg
inc
jne
test
jmp
dec
add
add
sahf
or
bnd
dec
push
dec
popa
andb
movsl
dec
adc
pop
das
aaa
fcmovnu
or
xchg
add
or
loop
testl
fadds
sbbb
mov
push
movsl
movsb
hlt
enter
mov
adc
inc
mov
add
mov
mov
dec
or
adc
clc
add
pop
xor
sub
shl
cmp
je
addb
pop
nop
dec
push
andl
fisubl
icebp
add
sbb
adc
test
mov
fstps
push
fcmovnbe
adc
adc
adc
sub
cmp
jae
cmpb
dec
or
je
stos
adc
btr
loope
adc
push
add
mov
cld
push
push
inc
push
mov
fisubl
fmuls
mov
dec
test
adcb
into
dec
xorb
call
cli
pop
ja
test
push
dec
mov
mov
add
push
mov
mov
adc
push
inc
cmp
jne
inc
decl
jne
adc
pop
mov
bound
leave
hlt
lock
adc
xchg
mov
sbb
subl
in
sub
dec
xchg
test
incl
sub
mov
imul
mov
mov
pop
lods
loopne
movb
inc
dec
jmp
adc
jl
imul
das
lahf
adcb
inc
mov
sbb
add
sub
inc
inc
mov
sub
pop
cmp
push
dec
and
push
test
pop
cmpsb
pushl
js
sub
jne
push
adc
bound
test
ss
dec
push
mov
mov
mov
add
xchg
and
mov
or
int3
adc
add
pushf
mov
inc
add
mov
adc
cmp
sbb
aam
sub
inc
sub
jb
cmp
inc
jle
dec
and
arpl
or
test
pop
pop
jnp
lcall
jns
xor
and
push
mov
dec
enter
mov
fimull
inc
call
adc
mov
push
data16
xor
dec
and
test
fcoms
rorl
fdivrl
mov
clc
icebp
lock
or
xchg
cmp
call
notl
js
sub
lret
enter
push
mov
and
out
shrl
push
mov
cmp
mov
pusha
loopne
mov
inc
ret
xor
leave
and
cld
fiaddl
adc
inc
push
mov
adc
xchg
out
pop
pop
push
push
add
pop
or
adc
popa
mov
mov
dec
mov
push
add
and
movsb
adc
aaa
adc
je
shlb
mov
sbb
pop
aaa
daa
daa
dec
clc
shll
repz
adc
jecxz
lahf
add
addr16
movsb
adc
inc
movsl
push
push
ret
sbb
jbe
jl
ficomps
testl
lret
lcall
mov
les
push
dec
shll
push
add
jae
in
outsb
jmp
pop
and
daa
xor
xchg
cmp
mov
or
xor
xchg
fdivrs
and
pop
in
push
in
inc
ljmp
or
mov
cmp
into
mov
outsb
sbb
sub
inc
push
and
test
cmp
fs
pop
iret
lds
popa
inc
imul
dec
in
or
mov
sub
cld
adc
movsb
ret
loop
enter
ss
stos
and
mov
aad
sbb
clc
and
or
rdtsc
mov
sub
std
lock
and
fucomi
xchg
imul
aad
sbb
xchg
lret
inc
int
mov
ret
loopne
aad
pop
or
pop
and
push
loope
push
loopne
mov
clc
dec
xor
xchg
adc
inc
push
sbb
adc
xchg
pop
push
add
push
push
inc
add
test
outsb
scas
dec
in
fwait
pop
call
stos
lcall
push
and
inc
jnp
in
in
mov
cmp
add
sub
jg
inc
sub
or
dec
ficomps
adc
cwtl
sub
clc
inc
mov
mull
xor
dec
inc
adc
fcoml
xchg
inc
add
arpl
aas
addr16
js
call
add
sub
addr16
insb
and
or
xlat
nop
pop
cmpsb
mov
sub
add
js
jo
loopne
fmul
call
rcrb
add
call
cmp
movsb
test
cmp
movsb
scas
dec
lods
mov
inc
popf
jecxz
xlat
pop
addb
ds
push
sahf
and
mov
pop
cmp
or
pop
lods
ret
aaa
or
test
sbb
js
adc
mov
dec
repnz
xlat
je
dec
ret
lock
out
cmp
mov
pop
call
clc
clc
movsl
or
mov
ret
das
jmp
sub
lea
mov
push
xchg
or
adc
sub
cmpl
mov
lods
cwtl
sarb
adc
cwtl
pushf
dec
mov
mov
clc
sbb
bound
dec
push
add
loopne
pop
xor
aam
xor
xor
add
adc
lret
inc
rcr
inc
cmp
bound
js
adc
xadd
add
push
pop
push
call
loopne
aad
int3
out
fstl
or
push
ror
sbb
shl
jp
pop
das
push
xchg
cmp
sarb
mov
pop
add
dec
or
pushf
in
gs
aad
das
or
xchg
in
rol
xor
mov
push
cwtl
insl
adc
jge
das
repnz
daa
pop
movsb
mov
aaa
mov
in
rcll
inc
jb
or
xor
sub
ret
sub
add
cmp
mov
testb
add
scas
add
mov
sub
jle
and
cmpb
jne
or
scas
nop
inc
hlt
add
int
ret
jno
sub
mov
ret
adc
loop
and
insb
pop
rcll
test
fcoml
or
mov
and
ja
iret
loope
sar
testb
cmp
pop
sti
std
ret
sub
push
testb
orb
inc
dec
pop
mov
dec
xlat
lcall
sub
inc
popl
movsl
pushf
outsb
insb
pop
outsl
add
faddl
adc
inc
pop
inc
test
adc
sub
xor
pusha
cs
adc
and
rol
loop
adc
cmp
dec
inc
xchg
inc
xor
sbb
sbb
pop
dec
fiaddl
jmp
rorb
jl
sub
test
pushf
jl
mov
mov
sub
inc
mov
xor
data16
sub
inc
mov
and
sub
je
lcall
or
lods
inc
int3
dec
adc
shrb
ret
push
andb
inc
pop
adc
pop
dec
nop
gs
add
jge
jo
les
in
jbe
adc
or
roll
and
push
xor
roll
imul
fisttpll
out
cld
lock
dec
sbb
mov
sbb
adc
pop
add
add
jecxz
roll
clc
cmpb
cltd
ficoml
rcr
jle
cmp
aas
mov
jmp
sbb
andb
add
pop
sbb
jge
lea
add
dec
in
xor
dec
into
adc
add
add
repz
imul
mov
inc
add
push
xchg
outsb
sahf
inc
ljmp
aaa
aas
add
dec
push
sbb
add
mov
mov
sub
iret
cmpsl
push
push
stos
loopne
sbb
mov
xor
adc
test
or
das
int
je
xchg
pop
mov
mov
dec
sub
or
sbbb
mov
or
cmp
sbb
or
nop
and
ret
jns
push
test
and
or
mov
shrl
sbb
test
adc
mov
and
lock
pop
shr
add
shr
out
rorl
cmp
and
jg
arpl
and
idivb
cmp
jne
mov
or
or
test
dec
inc
jge
sbb
jle
lea
pop
mov
in
hlt
jl
adc
xorb
add
add
jg
aad
cmp
je
lcall
lods
nop
enter
and
xchg
imul
sahf
clc
lret
or
enter
loopne
add
jnp
xchg
xchg
inc
push
jge
inc
add
mov
push
add
ja
cmp
out
xchg
cmpb
out
add
add
pop
dec
test
xor
push
push
xchg
mov
cmp
push
pop
push
insl
insl
xorb
popf
mov
add
js
flds
shl
adc
push
test
movsb
cmpl
in
xchg
jge
adc
and
add
jb
push
sahf
or
shl
cmpsl
scas
cwtl
pop
add
ret
adc
mov
sbb
in
sbb
scas
or
xchg
lea
jecxz
xor
shlb
insl
pusha
pushf
or
insl
scas
dec
loopne
cltd
or
cmp
into
jne
sbb
mov
inc
pop
xor
int3
inc
movsb
bound
xor
mov
mov
pop
cmp
xchg
andl
push
mov
adc
rolb
lods
ret
fidivs
inc
add
es
andl
mov
fcom
xchg
aas
mull
xchg
outsl
dec
cs
adc
js
and
inc
nopl
pusha
xchg
popf
sbb
rorb
or
lods
push
inc
push
pusha
or
fwait
js
adc
add
add
jbe
or
sbb
or
push
inc
mov
adc
add
inc
ds
int3
cmp
fldt
jge
in
in
jmp
sti
jge
push
and
lret
stc
mov
jecxz
dec
mov
sbb
repnz
mov
xchg
movsb
inc
fst
mov
pusha
pop
in
lahf
inc
rolb
jl
sbb
xor
repnz
pop
ret
fsubrs
inc
cmp
mov
lahf
sbb
in
pop
jb
add
int
clc
xor
lea
xor
ja
lock
or
xor
cmp
fcompl
cmp
push
inc
sub
sbb
jecxz
mov
fs
xchg
xchg
push
out
orb
dec
mov
lea
movsb
sub
jg
cwtl
aam
subl
mov
cmc
inc
or
adc
adc
es
fwait
xlat
xchg
fsubl
add
jecxz
inc
cmpsb
xchg
imul
imul
cmc
mov
shll
inc
enter
cmpl
add
mov
lods
pop
add
cld
fcomi
pop
sub
frstor
mov
xor
fsubr
cmp
inc
lcall
pop
mov
push
sbb
jle
jge
and
loopne
and
adc
inc
and
xchg
or
push
fadd
dec
mov
pop
or
leave
add
pushf
xchg
or
aam
lock
jnp
test
pop
jae
dec
mov
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
lahf
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
aam
adc
inc
cmp
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
or
inc
and
cmp
je
or
mov
jne
arpl
inc
rclb
je
mov
mov
mov
sub
daa
or
sbb
pusha
cwtl
inc
push
cs
pusha
inc
add
inc
rorl
sub
sbb
orb
out
les
scas
xor
pop
lret
add
cmp
cmp
jle
or
mov
xor
pushf
xlat
test
dec
sahf
add
lds
mov
lret
and
pusha
rolb
add
add
or
nop
pop
sub
dec
add
pop
adc
test
shll
mov
add
push
clc
adc
adc
sbb
mov
pop
jmp
daa
jno
inc
push
cltd
lcall
ds
ret
adcb
xor
adc
repnz
sub
adc
sub
jg
out
pop
sbb
iret
adc
test
pop
mov
vcvtss2sd
and
mov
or
lods
pop
or
in
mov
inc
sbb
mov
inc
nop
insb
xchg
sbb
or
and
cs
pushf
insb
in
sub
add
xor
cs
adc
negl
push
addb
jne
lea
in
xorl
push
aam
mov
xchg
mov
ret
ret
nop
aaa
mov
mov
add
or
mov
lea
pop
shlb
adc
popa
test
inc
nop
pushf
ja
lods
push
mov
ficoms
loopne
jne
bound
mov
sub
mov
lea
int
inc
movsb
pop
insb
mov
or
and
or
dec
or
rcrl
ss
dec
and
fmuls
or
aaa
add
loop
dec
mov
sub
fidivs
sbbb
inc
add
jns
xor
cwtl
mov
xlat
shlb
leave
int
addr16
jmp
dec
dec
imul
scas
push
add
popl
out
add
adc
xchg
mov
cmp
scas
add
jo
sbb
cs
sbbb
je
fs
or
inc
push
ja
add
xchg
xlat
dec
cwtl
inc
cmp
jg
sarl
push
and
jl
push
pop
sbb
outsl
daa
or
mov
or
bound
jge
add
add
je
push
clc
xor
arpl
pop
mov
pop
xor
fdivrs
clc
lods
inc
add
je
sbb
adc
scas
xchg
loopne
cmp
sub
pop
ss
and
mov
pop
shll
cmp
and
cli
jecxz
in
jmp
aaa
pop
pop
inc
cmp
jl
inc
add
xor
mov
cmpl
mov
add
sub
andw
xchg
sbb
je
fnstcw
sub
and
inc
fldcw
pop
ret
cmpl
sbb
rcrl
pop
mov
lock
xor
and
scas
push
pop
or
mov
in
adc
adc
dec
je
inc
rcll
cmp
adc
add
xlat
pop
sbb
in
fiaddl
lret
adc
jbe
mov
or
push
pop
lret
aas
and
xchg
inc
and
fldl
add
and
andl
data16
movlps
add
and
ret
das
fnstsw
test
jmp
dec
adc
jmp
pushf
pop
cltd
hlt
ret
lahf
jne
jo
les
or
sbb
add
adc
push
mov
mov
xchg
mulb
mov
ret
ja
mov
cmpsl
ds
iret
push
adcb
testb
pop
adc
add
add
xchg
mov
nop
cmp
xchg
fdivrl
loopne
icebp
or
fisttpll
push
enter
dec
hlt
aaa
test
push
jno
inc
fsub
mov
mov
lea
mov
daa
subl
pushf
mov
incl
pop
push
inc
lret
call
arpl
daa
out
mov
imul
les
or
stos
inc
enter
sub
lock
and
xchg
fld
jnp
jno
mov
add
movsb
cmp
sbbb
pop
mov
pop
clc
fsts
mov
mov
pusha
cmp
push
add
push
push
or
popl
jne
add
out
loope
inc
or
and
fiadds
arpl
push
rolb
adc
pop
movsb
jnp
inc
in
xchg
sbbl
ljmp
movsb
cmp
pop
mov
fcomps
loop
lea
sub
inc
sbb
add
pop
adc
push
in
inc
xor
pusha
bound
movsl
rorb
fidivs
leave
xor
pop
pop
mov
scas
jns
test
ja
fmulp
lods
dec
and
and
aam
outsl
iret
jl
and
imul
sub
add
mov
push
xlat
fnstsw
movsb
push
dec
jne
and
xor
shlb
xchg
movups
mov
pop
jecxz
jmp
xchg
test
sub
sbb
movswl
jg
imul
xchg
pop
fbld
push
mov
dec
jne
mov
nop
in
sub
push
cmp
je
popa
mov
and
or
add
test
pop
pop
xor
rcll
push
cmp
roll
iret
xchg
xor
jp
jecxz
lret
pushf
pusha
loopne
pop
es
mov
dec
pop
sarb
or
rolb
cmp
outsb
fsts
movsl
je
or
imul
dec
mov
or
pop
cli
mov
jne
pop
inc
addl
dec
dec
mov
mov
sti
mov
rolb
xor
sub
loopne
xchg
jo
sub
jns
mov
cmp
dec
push
mov
jmp
mov
push
stos
loopne
scas
cltd
lock
fstl
or
cmpb
shll
or
lods
xchg
jge
in
add
add
fildl
lock
mov
int
mov
mov
fs
push
loope
fmuls
and
dec
pop
ss
enter
dec
inc
lods
movsb
mov
xchg
out
lahf
pop
sbb
inc
xor
or
adc
push
sbb
out
adc
sbb
jp
testb
inc
mov
and
loope
mov
sub
push
pop
push
pop
add
mov
cmp
cmpsl
lea
mov
cld
dec
mov
js
add
jge
pop
mov
cwtl
mov
or
add
push
jb
jmp
lea
shlb
sub
int3
ret
sbb
add
mov
mov
test
lsl
add
call
or
and
rcrb
jo
fistl
push
popf
lods
insb
das
arpl
call
add
int
xchg
pop
ficoml
add
scas
lea
adc
mov
push
xor
push
push
sti
loope
sbb
in
xchg
jo
imul
adc
mov
xchg
in
dec
jno
popa
sub
iret
fnstsw
iret
push
pop
mov
dec
sbb
xchg
insb
mov
adc
jecxz
aam
or
or
test
add
pop
das
imul
cmp
arpl
xor
cmpsb
sbb
movb
sbb
adc
jecxz
push
sub
mov
add
imul
das
enter
dec
aam
adc
xorl
in
or
jne
adc
or
inc
rcll
pop
inc
in
sub
lods
cwtl
in
adc
xor
fdivs
inc
aad
adc
sbb
fs
daa
mov
popa
in
mov
out
mov
or
testl
call
imul
fcoml
addr16
sub
sbb
fsubs
scas
fisubl
push
divb
or
aam
pop
jmp
rcrl
pop
ss
pop
popf
cmp
enter
xor
pop
scas
fneni(8087
push
mov
mov
pop
popf
jne
inc
sbb
aam
cmp
test
push
lret
xlat
sbb
rcrb
add
inc
in
adc
and
test
xchg
cld
out
cmp
adc
pusha
sbb
push
xor
imul
fisttps
popa
mov
push
stc
adc
jmp
inc
mov
pop
cmp
jo
xor
in
inc
scas
and
dec
or
lods
pop
adcl
jmp
rcrl
setp
sub
fsubs
cmp
pop
out
cwtl
out
sub
adc
fst
cltd
add
daa
or
push
roll
jns,pn
xchg
pop
call
sbb
pushf
bswap
push
enter
xlat
pop
ret
jle
jmp
cmp
push
xchg
popf
lock
sbb
sbb
add
les
shlb
fs
lcall
movsb
fidivrs
imul
pusha
sub
sbbb
xor
aad
mov
in
clc
cld
imul
hlt
sub
aaa
push
add
jbe
push
cmp
aam
jo
ret
mov
sub
push
xchg
gs
hlt
add
frndint
cmp
add
sbb
add
pop
jb
lock
and
cmp
orl
jbe
shr
ja
inc
arpl
lahf
adc
or
leave
xchg
xchg
cmp
fmuls
sahf
mov
adc
das
ljmp
je
scas
add
and
jns
jns
mov
lea
fimull
mov
or
pop
add
fldcw
loop
into
aam
das
sbb
jae
in
hlt
adc
adc
add
jns
mov
add
fwait
mov
cmp
xchg
sub
xor
and
ss
push
or
testb
mov
aas
orl
mov
sbb
xor
fs
daa
cmp
ret
cmp
cltd
jnp
or
mov
mov
loopne
stos
nopl
jbe
mov
mov
jne
mov
or
push
push
mov
pop
or
add
leave
mov
stc
in
pop
xchg
pop
lea
outsl
push
mov
dec
add
pop
hlt
pop
inc
add
std
sub
lahf
lret
mov
loopne
push
lret
inc
jp
es
pop
and
push
mov
inc
fsubrl
sub
mov
and
sbb
xchg
inc
das
aad
lret
mov
xchg
pop
add
adc
or
xlat
out
push
lcall
out
jmp
hlt
inc
xor
mov
or
out
add
je
sti
adc
ds
add
jl
xchg
xor
test
or
mov
gs
imul
push
jo
jle
pop
gs
mov
xchg
std
iret
movsb
test
mov
pop
cmpb
roll
cmpsl
and
popa
enter
mov
mov
push
jo
fwait
push
loop
inc
jmp
sbb
adc
lock
loopne
jmp
mov
cld
pusha
rcl
lock
mov
add
popa
adc
lds
dec
iret
jl
push
pop
adc
fdivrl
dec
xor
cmpb
jo
push
push
fstpt
xchg
out
sti
out
popa
movsl
lret
or
sub
push
nop
mov
sub
call
adc
gs
cmovns
add
je
pushf
fmuls
pop
and
xor
add
xchg
mov
mov
mov
sub
out
lock
cmp
add
pop
icebp
or
cmpsb
hlt
sbb
or
insl
mov
loop
sbb
pusha
and
add
lcall
or
sub
adc
gs
pop
mov
adc
clc
jge
shr
fisubl
enter
inc
cmp
adc
rcrb
jg
enter
jl
mov
jno
roll
add
fisubl
imull
mov
or
pop
pop
test
imul
mov
adc
mov
xchg
sbb
jae
jl
sarb
jns
faddl
repnz
in
jns
sti
call
push
dec
jae
roll
iret
insb
push
mov
pop
inc
push
test
add
xchg
test
daa
fisttps
in
push
enterw
rclb
lcall
jnp
ficoms
cmp
loope
call
xor
repnz
and
adc
repnz
fsubrl
arpl
cmp
adc
cli
sub
es
stos
sbb
cmp
cli
push
addb
cmc
fs
xchg
lods
inc
push
sbb
ret
push
lods
popf
dec
pop
or
fwait
mov
add
jo
lcall
faddl
cld
inc
pcmpeqb
loop
aaa
xchg
in
sbb
daa
push
mov
sub
pop
jo
push
aas
outsb
push
jmp
in
fdivrl
pop
adc
jae
mov
and
iret
dec
dec
or
ret
cmp
wbinvd
dec
push
jge
mov
daa
adc
push
cmc
ret
xchg
or
int3
sti
add
mov
inc
addr16
xlat
shlb
add
fcomp
nop
xlat
or
push
xchg
ret
and
rorl
dec
mov
notb
mov
out
test
mov
sbb
add
out
js,pn
push
sub
add
jle
aad
jmp
mov
fdivl
mov
hlt
mov
sbb
jmp
mov
mov
nop
out
dec
shl
mov
lods
aam
jo
inc
sbbl
das
loop
bound
les
sbb
je
outsl
imul
push
sbb
jmp
xchg
je
test
dec
sbb
pop
cmp
jecxz
adc
mov
sub
fs
lds
das
xchg
scas
xor
das
xchg
arpl
and
and
sub
jbe
xchg
je
pushl
adcl
fstl
push
mov
stos
into
mov
ds
push
fistps
or
je
in
jecxz
adc
mov
or
test
mov
mov
or
add
lods
pop
hlt
and
lock
xchg
or
iret
mov
mov
ret
mov
aaa
out
mov
rolb
xor
dec
ja
and
les
clc
loope
out
adc
push
enter
imul
bts
jmp
lds
sub
popa
ljmp
push
xchg
adc
mov
aad
xlat
push
out
mov
add
rclb
stc
pop
daa
push
sbb
rorb
add
xchg
adc
push
mov
add
mov
jge
mov
cmp
push
push
push
and
adc
mov
inc
xchg
cld
fld
xchg
adc
adc
jb
sahf
sbb
push
fdivl
lret
inc
jae
push
push
mov
iret
inc
jo
pop
ja
adc
sbb
inc
lock
jmp
push
inc
aas
and
pop
or
ds
dec
cmpl
rorl
roll
mov
out
inc
imul
lcall
sub
or
out
push
dec
cli
sbb
inc
nop
pop
lods
lock
js
ljmp
jp
xor
mov
insl
add
out
adc
pop
hlt
mov
pop
scas
shrb
dec
fcoml
and
scas
shll
xchg
mov
lret
inc
mov
das
pusha
repz
and
pop
mov
pop
xor
push
jno
out
mov
aas
sti
inc
orl
mov
ds
iret
mov
or
and
sub
cmp
repz
pop
data16
and
lods
push
insb
jge
scas
push
pop
pop
and
and
pop
and
xchg
add
ret
adc
insb
mov
sarw
insl
das
pop
push
adc
push
mov
dec
shlb
sub
adc
mov
shll
repnz
loope
or
test
dec
and
nop
mov
gs
mov
dec
sbb
decl
stos
pop
aas
and
sbb
lock
xchg
mov
ret
ret
sbb
push
aam
mov
sbb
je
sub
je,pt
lahf
loop
jae
ljmp
jns
mov
xor
scas
dec
es
inc
inc
push
dec
mov
rcll
adc
inc
push
call
cmp
and
jg
sbb
sub
add
testb
inc
test
test
test
clc
inc
popa
subb
mov
mov
inc
inc
call
jmp
in
adc
push
sub
dec
rcr
mov
cmpsl
xchg
or
sbb
push
inc
push
lret
push
sub
hlt
push
add
loope
sbb
pushf
add
or
and
mov
leave
mov
pushf
add
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
icebp
add
mov
or
nop
out
mov
int3
lock
aam
xchg
cli
inc
inc
adc
inc
bound
test
into
inc
cld
mov
mov
ja
sbb
dec
cld
shl
rol
jp
dec
cmpsl
in
push
daa
xlat
fidivrs
ret
clc
clc
iret
mov
mov
jmp
lret
sbb
and
adc
lds
mov
movsl
add
cmpsl
mov
sarb
dec
scas
add
push
mov
cmp
stc
dec
call
clc
das
inc
add
lret
cli
fisttps
mov
sub
aas
sbb
xor
push
out
xlat
xchg
je
arpl
or
jecxz
mov
adcb
fidivl
cmpsb
push
int
push
ret
clc
adc
push
int
movsb
pop
repz
and
cmp
dec
ja
ret
mov
mov
cs
fldenv
ss
dec
mov
add
push
add
cs
fadds
and
jo
xor
pop
inc
push
shl
or
cs
insl
mov
cmpl
clc
lods
cmpsl
pop
lea
out
inc
jge
jecxz
pop
dec
jmp
sbb
cwtl
es
ret
fxch
jecxz
jno
and
add
aas
ret
cmp
or
loopne
mov
fsub
jns
dec
or
dec
clc
repz
sbb
ljmp
sub
push
mov
add
add
mov
pushw
xchg
dec
pop
mov
jb
mov
jne
jmp
mov
int3
sbbb
bswap
ficoms
cli
jge
cmpb
jg
out
cmp
add
adc
adc
cmpl
aam
and
dec
cmpsb
std
cmpb
add
enter
mov
mov
mov
or
nop
inc
add
mov
pop
add
mov
xchg
jne
dec
ss
enter
push
jecxz
gs
add
cmpb
mov
pop
out
loope
dec
cmp
push
rclb
adc
push
sbb
jo
pop
push
mov
sbb
enter
mov
and
mov
inc
add
cmp
mov
or
sub
jg
jge
push
mov
call
out
xchg
sbb
push
pop
or
sbbl
cmc
pop
pop
filds
aad
adc
je
sbb
pop
fmull
push
inc
test
mov
testb
push
jns
and
clc
and
pop
hlt
push
out
addr16
push
xor
push
add
mov
xchg
jg
dec
jp
xor
not
loopne
push
adc
dec
pop
dec
sbb
test
rcrl
xor
test
mov
or
cmp
addr16
adc
mov
cmpsl
xchg
cmp
mov
adc
cmp
xor
lahf
sbb
lcall
dec
mov
inc
and
mov
xchg
sub
clc
fcompl
dec
push
inc
rcll
into
loope
hlt
test
shll
stc
dec
loop
test
jle
or
imul
dec
and
mov
jb
out
ljmp
mov
xchg
icebp
stc
xor
in
mov
mov
lret
push
or
jge
xor
in
pop
xor
and
mov
into
or
or
es
ficompl
or
sbb
or
orw
stos
lock
divl
fldt
mov
daa
sbb
sbb
sub
mov
inc
push
push
push
adc
push
or
shl
adc
jo
mov
pop
push
jmp
or
sbb
xlat
push
das
inc
sbb
or
pop
mov
jnp
cld
testb
inc
mov
or
and
ds
scas
inc
pop
push
je
addr16
pushf
sub
bound
xchg
push
clc
mov
dec
sbb
xchg
and
cmp
aam
mulb
les
std
inc
add
xchg
and
or
pop
data16
and
mov
pop
adc
rclb
adc
fsubrs
inc
aam
repnz
orl
movsb
cltd
cmp
inc
push
adc
cltd
clc
push
add
lock
or
adc
xchg
adc
sbb
test
stos
cli
add
into
adc
jecxz
call
sbb
adc
xorb
je
jp
lahf
xlat
adc
and
ficompl
sub
lods
andb
push
push
cmp
push
or
ficoml
fwait
push
setne
mov
add
pusha
push
fnstcw
sbb
jo
and
mov
dec
gs
outsl
jo
push
push
adc
aas
add
jb
ffreep
and
fwait
pop
and
push
ss
inc
inc
pop
inc
idivl
in
mov
decb
add
pop
xlat
test
lret
push
mov
es
mov
inc
dec
ja
pop
call
pop
add
xor
call
cs
jne
hlt
dec
call
cwtl
mov
jmp
test
push
push
repz
scas
or
in
mov
inc
cmp
mov
or
data16
pop
dec
in
sbb
xor
frstor
and
in
sbb
mov
xor
inc
dec
jne
les
ret
or
push
imul
fsubrs
dec
push
push
addb
sbb
lcall
sbb
jmp
sbb
dec
aad
adc
ffreep
scas
inc
adc
ljmp
daa
adc
add
xor
mov
push
sub
jl
adc
inc
add
leave
push
enter
movsb
push
sub
jp
push
or
aas
orb
jg
push
dec
cmp
mov
xlat
xor
gs
ret
sub
nop
pop
xlat
call
into
mov
pop
mov
or
sbb
andb
jmp
sbb
es
mov
inc
add
clc
scas
icebp
and
fs
xchg
ljmp
or
add
adc
les
mov
aam
rorl
jo
hlt
add
cmp
lahf
pop
sbb
inc
pop
jecxz
cmpsl
or
inc
sarb
cmp
push
andb
movsb
xor
dec
loop
and
or
pop
xlat
xchg
push
loope
xchg
jne
es
and
push
push
sbb
cmpsl
add
mov
mov
and
lahf
mov
imul
insb
hlt
or
cmp
or
cltd
pop
mov
mov
mov
cmpsl
xor
xor
inc
mov
mov
add
mov
push
test
inc
jl
jle
fbld
cmp
je
int
add
xchg
shll
ds
or
add
rol
dec
or
push
pop
add
and
adc
adc
push
in
pusha
dec
add
loope
sbb
jo
lods
add
add
sbb
jmp
ret
xor
ds
in
pop
out
inc
push
pop
ss
andl
push
xlat
jns
cli
inc
imul
cmp
lcall
push
sub
or
arpl
lcall
aaa
dec
dec
das
test
inc
mov
rorb
inc
je
dec
push
fwait
mov
xor
sbb
xlat
sub
adc
out
cmpb
mov
push
loopne
and
adc
rorl
or
jecxz
jo
gs
lods
mov
es
ficompl
adc
and
inc
pusha
scas
frstor
wrmsr
push
push
pop
mov
add
or
dec
addl
add
insb
andb
adc
iret
enter
pop
cld
out
adc
jge
test
add
jp
loopne
shll
dec
adc
sahf
lea
adc
int3
sbbb
push
test
rorb
iret
push
adc
and
add
add
add
xlat
pop
adc
es
movsb
cmpsb
push
ficoml
jle
and
cs
add
add
inc
lret
mov
negl
pop
sbb
sbb
or
nop
push
and
jle
sbb
cmp
inc
lods
out
insb
pop
jmp
loope
adc
push
adc
add
dec
mov
add
pop
fs
xor
iret
stc
inc
cli
push
push
movsb
hlt
inc
push
inc
orl
sub
in
cwtl
insb
and
pop
stc
pop
call
hlt
add
adc
mov
add
arpl
and
clc
jne
jmp
lret
push
or
mov
cs
call
inc
stos
mov
add
xlat
cmpb
clc
mov
push
fwait
inc
adc
test
enter
push
sub
inc
adc
add
fsub
dec
xchg
fcompl
push
cmp
rolb
or
inc
cld
mov
fcompl
inc
dec
pop
daa
decl
and
sub
add
out
sub
add
sbb
push
nop
push
push
outsb
sbb
lahf
orl
and
or
sbb
push
push
xlat
adc
incb
lcall
in
mov
sub
pusha
cmp
adc
sbb
lds
adc
mov
arpl
sbb
mov
add
pop
add
sbb
or
es
cmpsl
negb
ja
push
test
ret
inc
loopne
inc
sub
sub
mov
sub
and
sub
pop
lret
stos
dec
cs
sbb
or
or
push
mov
push
mov
or
cmpsl
push
push
push
push
adc
jecxz
xchg
cmp
pop
inc
and
pop
mov
add
xor
and
inc
or
add
adc
cmp
cmp
push
mov
insb
push
mov
mov
pop
dec
mov
cmpb
add
ja
mov
dec
clc
mulb
mov
pop
or
add
jmp
mov
add
pop
add
fisubrs
idivl
fisttpl
jbe
mov
pop
jo
inc
push
or
add
sub
mov
add
add
add
pop
iret
dec
addl
sbb
add
mov
and
les
cld
outsb
and
jbe
pop
paddq
push
pop
inc
pop
inc
dec
ret
push
pop
cmpsb
dec
pop
add
mov
cmpsl
sbb
adc
inc
pop
call
xchg
outsb
imul
mov
cld
push
xchg
mov
mov
stc
ss
cld
push
jo
clc
maxps
cmp
xor
adc
jns
xor
mov
lret
mov
in
sahf
mov
mov
and
cld
in
std
pop
mov
jmp
cld
pop
test
dec
int3
mov
popa
add
fstpl
sbb
mov
mov
inc
pop
popa
cltd
adc
daa
or
lret
les
int3
dec
add
inc
mov
adc
out
mov
mov
or
mov
movzwl
dec
dec
dec
cmp
je
jbe
dec
dec
dec
dec
js
jp
dec
dec
dec
dec
jl
jle
dec
dec
dec
dec
pusha
popa
bound
dec
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
insb
insl
outsb
outsl
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
dec
dec
xor
ss
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
ds
dec
dec
dec
dec
and
and
daa
push
jno
and
dec
sbb
inc
mov
inc
push
or
mov
add
mulb
outsl
or
mov
push
es
jo
getsec
leave
addb
arpl
dec
sbbl
or
xchg
ds
outsl
outsb
je
imul
cmp
or
mov
popa
sbb
sbb
stc
mov
jae
addb
pusha
seto
add
pop
xchg
mov
jae
je
fidivl
dec
lods
fists
jns
loope
test
mov
inc
add
cltd
enter
je
arpl
adc
mov
jecxz
outsb
gs
xor
gs
cmc
sarl
add
jae
add
cs
into
es
outsb
int
sarb
pop
jo
outsl
sbb
push
inc
pop
idiv
inc
popa
jae
add
sbb
or
sub
jl
or
add
testl
iret
or
bswap
js
inc
idivb
push
push
push
dec
outsl
jo
je
push
andb
sbb
or
out
frstor
nop
and
add
sbb
adc
xor
pop
idivb
aas
mov
loopne
pop
mov
cmp
pop
adc
fdivl
ja
and
inc
jb
fimull
pop
xor
bound
jno
fiaddl
jl
jp
fistps
sbb
je
adc
cs
inc
imul
pop
inc
outsl
jb
jae
es
cmpsb
loope
and
add
jnp
push
and
pop
or
adc
sbb
filds
incl
jbe
push
aad
jmp
inc
lahf
mov
push
or
inc
xor
ja
popa
push
push
test
pop
outsb
mov
add
and
mov
xchg
out
cmpsl
inc
xchg
insl
mov
rolb
out
cmpsb
cmpsl
out
mulb
and
cmp
adcl
pop
cmp
js
lcall
cmp
loopne
fst
add
rolb
aam
pusha
aad
adc
and
dec
les
das
pop
adc
ret
stos
aas
pop
sbb
inc
iret
adc
rclb
add
scas
les
aas
push
push
dec
test
movsb
inc
mov
add
cmp
mov
xor
xchg
cmp
jnp
sbb
xor
add
push
imul
cmp
pusha
addb
movl
and
bound
pop
sbb
ja
outsl
leave
xor
push
add
mov
pop
pop
sbb
lds
repnz
jle
cmpl
add
dec
bnd
imul
inc
inc
add
add
push
xor
nop
loopne
imul
jmp
test
mov
add
push
push
inc
je
dec
and
dec
jae
pop
and
sbb
jo
push
clc
inc
and
movzwl
cmp
add
out
xchg
add
pop
inc
pusha
inc
add
movsl
rorb
enter
inc
add
sahf
mov
adc
cmp
je
inc
add
imul
mov
lock
push
and
push
inc
popa
sbb
sub
lods
pop
sbb
push
movsl
push
and
adc
dec
imul
popa
add
pop
aas
mov
push
or
insl
cld
and
hlt
imul
fmuls
stos
mov
das
fmul
insb
jmp
pop
sbb
fcompl
sbb
push
fsubr
test
lret
es
in
rorl
aad
and
mov
sbb
lock
pusha
mov
adc
and
fdivrs
es
add
daa
pop
lds
sahf
fwait
clc
das
push
sub
mov
in
nop
mov
pop
inc
pop
push
jle
mov
dec
adc
sysret
pop
popa
fstpt
loopne
inc
bound
pop
fidivs
pop
and
ss
aas
pop
push
loopne
rclb
or
popl
and
enter
push
mov
out
pop
push
mov
cmp
fadds
inc
mov
or
xor
daa
cmpsl
xchg
ret
xchg
cmpsl
call
fwait
xchg
clc
xor
cmpsl
or
sbb
sub
insb
scas
sbb
addr16
insb
sub
imul
dec
arpl
addl
push
push
arpl
jmp
and
sbb
mov
jl
pop
int3
xchg
lods
pop
push
les
bound
jns
call
pop
add
push
cmp
movl
cvtpi2ps
add
xor
add
out
mov
das
dec
mov
push
push
add
out
jne
fs
insl
popa
addr16
xchg
mov
andl
sub
insb
cld
mov
inc
lock
push
lods
ret
nop
hlt
mov
push
mov
psubw
jl
inc
lods
jo
cmpsb
dec
jnp
inc
jno
mov
jae
in
in
outsl
lock
shlb
js
call
ds
jnp
xor
inc
mov
dec
mov
repz
cwtl
jge
sbb
or
lods
andl
push
jno
xchg
or
inc
aam
jg
and
je
and
sub
addb
ds
fwait
nop
inc
popa
mov
pop
pop
xor
jg
enter
jo
inc
pop
mov
xchg
sub
insb
xchg
enter
fimull
mov
push
mov
test
lods
in
popf
add
aas
nop
xchg
xchg
cmp
fmull
pop
push
popa
or
mov
mov
sbb
out
rcrb
push
fwait
call
push
dec
arpl
pop
js
xor
push
pop
fsubrl
and
jns
or
outsl
in
cmpsb
fmuls
add
inc
jns
jb
sbb
mov
mov
rcll
xchg
cs
push
cmp
stos
jbe
es
nop
sbb
cmp
ffree
pop
mov
pop
xor
enter
loop
adc
addl
rorl
add
inc
rolb
imul
or
nop
lock
mov
ret
push
push
sub
add
sbb
rorb
ffree
mov
add
sub
call
mov
inc
ss
dec
je
sbb
push
inc
ret
jne
cmp
jbe
mov
das
inc
aam
lock
inc
and
imul
dec
arpl
cmp
adc
and
stos
mov
dec
or
xchg
xchg
add
xchg
decl
xchg
push
xchg
das
pandn
inc
add
pop
stos
jno
add
push
push
xor
out
outsl
das
test
dec
lock
loope
cwtl
sete
mull
dec
push
shrb
cmp
mov
cmc
pusha
mov
and
dec
ss
imull
and
jbe
xchg
jo
nop
mov
pop
push
sub
cs
mov
add
xor
sub
out
aaa
push
add
outsb
and
je
fdivr
xlat
cmp
push
push
repnz
or
imul
cwtl
fs
jmp
adc
inc
push
jle
aad
enter
jae
sub
xchg
addb
pop
sbb
mov
out
adc
or
mov
xor
xchg
sbb
insl
jecxz
fucom
adc
xor
xchg
mov
lock
insl
mov
nop
xor
push
daa
iret
in
lods
or
adc
insl
inc
fdivrl
les
push
jg
mov
or
add
js
in
adc
cmp
cmp
or
sbbl
shlb
and
jmp
nopl
stc
packsswb
jb
outsl
outsb
inc
out
repnz
mov
outsb
pop
dec
insb
imul
das
stc
dec
popa
jbe
add
jb
insb
gs
xor
add
push
gs
insb
pop
andb
push
imul
push
push
cmpsb
xchg
pop
cwtl
iret
pop
gs
insb
outsl
ja
jmp
negb
jne
push
adc
jne
mov
pop
pop
or
jns
push
fadds
add
ja
cmp
inc
dec
stc
adc
data16
push
fdivl
lock
xor
popa
test
dec
pop
pop
jo
push
pop
lock
and
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
mov
aam
cld
insb
add
or
dec
shll
jg
gs
or
insl
das
push
jmp
jno
outsb
daa
pop
xchg
imul
lahf
sbb
sbb
xor
inc
pop
pusha
add
push
notb
shlb
jg
int
nop
mov
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
xorl
punpcklbw
insb
daa
or
aaa
das
or
add
aas
push
cmp
scas
jmp
ret
push
mov
out
pop
dec
out
pop
test
fisttps
dec
or
inc
xchg
mov
or
fcoms
aas
int3
testl
dec
inc
push
push
inc
push
add
inc
xor
inc
inc
inc
loop
or
jg
notl
dec
inc
dec
dec
arpl
xchg
cmpl
dec
dec
inc
push
dec
dec
push
pop
mov
cmpb
addr16
dec
dec
and
out
inc
inc
xor
dec
enter
movb
and
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
int
in
mov
push
push
dec
dec
push
dec
dec
mov
push
insl
imul
sbb
mov
nop
jl
inc
dec
push
mov
dec
inc
dec
mov
out
push
dec
pop
test
inc
inc
push
push
push
dec
push
inc
scas
mov
aas
in
inc
dec
push
mov
daa
xchg
test
js
push
mov
mov
jl
shl
add
orl
dec
jl
add
adc
add
mov
lock
orb
sbbb
add
add
repnz
mov
mov
lea
outsl
add
and
fyl2xp1
lea
mov
sub
prefetch
pusha
imul
insl
or
add
and
dec
pusha
xchg
in
sbb
mov
add
sub
push
fs
adc
mov
and
dec
aas
or
pop
xchg
mov
jno
test
es
into
rclb
test
or
jmp
lods
xchg
movsl
ret
and
jl
lcall
es
adc
inc
and
jns
ret
das
idivb
dec
popf
mov
and
xor
clc
subl
cmc
xor
ss
adc
lret
loope
ficoms
xor
or
and
cld
or
mov
arpl
scas
rcll
fcoms
add
push
cli
das
fcoms
inc
lea
adc
das
movsl
mov
pop
leave
mov
jae
xchg
jmp
mov
xchg
pop
push
cmp
jb
mov
pop
mov
sub
xor
adc
int3
sbb
and
mov
fwait
orl
test
pop
in
mov
xchg
enter
inc
cli
je
fldt
jmp
adc
lcall
add
jae
mov
inc
sbb
dec
fs
xlat
lea
incb
mov
push
adc
cmp
subb
inc
push
cmp
test
jo
xor
push
jl
pop
movb
push
fcomp
add
mov
jge
dec
push
mov
jmp
inc
fildl
mov
jae
or
jmp
mov
push
ljmp
xchg
or
or
int
xlat
pop
out
jmp
xchg
add
mov
inc
inc
add
jp
mov
repz
aam
outsl
loop
imul
mov
inc
sub
sub
mov
nop
push
inc
sub
imul
pop
add
jo
iret
adc
pusha
inc
xchg
xor
mov
sbb
insb
xchg
fwait
nop
sub
inc
imul
popf
hlt
mov
xor
neg
cmpsb
imull
jg
inc
push
das
fiadds
ficoml
jp
mov
add
test
andb
dec
imul
mov
or
aaa
adc
inc
sbb
shl
div
sti
xchg
pop
and
leave
add
or
pop
or
pop
sub
lahf
movsb
dec
loopne
inc
sbb
or
loopne
dec
add
cmp
fidivrl
sbb
nop
or
mov
cmp
test
loope
or
je
fwait
or
xorb
push
leave
test
je
jns
rclb
add
das
cmp
in
push
jne
pop
repnz
cs
jne
pushl
test
rcrl
mov
inc
test
inc
jp
mov
adc
and
call
pop
enter
loopne
mov
cmp
mov
sbb
leave
repz
lock
or
mov
sub
xchg
xchg
andl
lret
mov
jb
in
sbbl
mov
push
nop
or
xchg
inc
in
xchg
mov
ret
mov
push
nop
pop
push
lock
push
aas
sub
and
nop
inc
in
inc
fisttpll
movlps
mov
mov
inc
ds
pop
push
xchg
inc
inc
mov
adc
add
mov
lock
lock
xchg
in
push
popa
inc
fistpll
imul
mov
and
adc
fs
mov
clc
dec
jb
push
add
mov
lock
inc
jecxz
jns
add
adc
xor
hlt
dec
lret
call
lock
or
and
movsb
dec
push
aas
push
ret
inc
xorl
mov
xor
jmp
mov
movb
cs
push
inc
nop
add
ss
sub
mov
xchg
lret
daa
xchg
jo
pop
inc
add
or
xchg
lret
adc
dec
and
sbb
xor
inc
sbb
popl
add
lahf
clc
or
sbb
scas
mov
or
sar
aad
and
push
adc
inc
rclb
movsl
andl
sbb
mov
fidivrl
sarl
inc
mov
out
idiv
sbb
push
or
push
add
or
pop
or
or
dec
xor
sbb
xchg
lds
push
push
pushl
pusha
mov
dec
call
jg
pop
xor
sub
cmp
inc
mov
xor
shrl
or
sub
inc
xchg
and
mov
sbbb
sbb
add
jp
js
xor
push
rorl
pop
cmp
push
push
mov
push
in
cwtl
test
andl
iret
jge
push
insl
push
pop
or
pop
mov
or
imul
sbb
lea
clc
dec
imul
inc
push
mov
push
or
cmp
inc
push
pop
xor
insl
and
aam
test
imul
negl
sbb
pusha
lods
pusha
push
mov
ja
adc
ror
dec
movsb
xchg
jp
lea
mov
or
cmpsl
pop
xchg
ret
and
xor
xorl
add
stos
or
fidivrs
cmp
daa
rolb
mov
addb
mov
pop
out
dec
cltd
mov
mov
xchg
les
stos
mov
test
loop
rclb
pop
sub
fmuls
lcall
cmova
pop
adc
push
adc
lds
pushf
push
dec
and
and
std
dec
adc
das
mov
aam
fmuls
dec
pop
sub
popa
inc
xlat
stos
sbbb
movsb
dec
cmpsl
scas
xchg
pushf
mov
sub
adc
popf
add
or
pop
inc
jae
fildll
jl
dec
mov
and
mov
cmp
je
mov
pushf
out
nop
mov
movsl
pop
pop
aad
movsb
lods
add
mov
out
push
mov
push
and
cmpl
clc
sbbl
or
and
orb
jl
adc
adc
ja
jbe
sti
lock
not
and
mov
jg
cmp
je
ret
inc
sub
add
mov
gs
mov
imul
inc
and
jo
mov
pusha
xor
sbb
push
xor
and
sub
or
sub
push
adc
repz
inc
adc
sbb
testl
fcmovu
push
jo
daa
cmp
dec
and
push
movsl
xor
testl
pop
testb
pop
xor
sti
out
mov
add
mov
xchg
jl
mov
add
rcrb
mov
adc
nop
mov
imul
pop
pop
out
in
cmp
dec
inc
cmp
hlt
mov
mov
scas
cmc
dec
inc
fmuls
add
gs
add
inc
push
mov
rolb
sti
or
cli
dec
lods
daa
adc
fstpt
cmp
lea
sub
clc
add
mov
arpl
popa
lock
mov
lcall
popl
mov
in
popa
hlt
push
shlb
int3
jge,pt
mov
int3
js
dec
loope
push
adc
in
decb
push
sbbb
push
xor
adc
cmp
call
bound
jbe
cmc
fwait
insl
imul
in
pusha
jns
outsb
xchg
rcrb
bound
roll
cmp
mov
sbb
in
mov
sahf
lock
jle
fdivl
add
pop
in
in
xlat
fmuls
fimull
push
sti
sub
inc
pop
mov
mov
aas
imulb
mov
add
cs
hlt
adc
add
fcmovu
fisubl
push
mov
pop
shl
mov
testb
divl
shl
and
jle
sarb
pop
sar
mov
mov
pop
xchg
mov
aas
mov
aam
add
mov
loop
sub
pop
sub
test
sub
add
cmp
jo
test
push
stc
push
out
xor
pop
push
mov
stos
test
arpl
push
ret
push
insb
cwtl
stos
and
push
ror
inc
cmp
nop
lret
push
rcll
sbb
add
cmp
sbb
or
mov
push
push
push
jge
ja
sbb
mov
jnp
and
cmpsl
sbb
and
arpl
push
sub
dec
xor
jmp
jns
pop
mov
dec
add
sbb
lock
cmp
ficompl
das
inc
sbb
stos
daa
or
pop
clc
stos
popa
mov
loopne
movb
mov
ja
inc
add
stos
dec
in
gs
out
leave
movsb
mov
pop
call
add
fiadds
cmp
mov
sub
jecxz
add
loope
scas
and
mov
adc
push
mov
mov
or
outsb
and
aaa
add
add
dec
das
xchg
mov
imul
dec
fcomps
adc
aas
dec
push
es
mov
mov
subl
push
mov
pop
pop
push
ss
and
dec
jne
fidivrl
add
cmp
notl
adc
adc
sbb
push
inc
inc
push
dec
and
cmp
sbb
call
in
mov
push
loope
sbb
and
cmp
push
and
mov
enter
xor
jmp
jp
mulb
mov
sub
shl
mov
mov
jmp
fwait
addr16
sti
data16
insb
loop
mov
adc
adc
cld
push
mov
rcrb
out
push
push
incb
mov
jo
or
push
jnp
or
movsb
rdpmc
cmp
push
rorb
fldl
add
ds
ds
mov
inc
movzwl
lea
lock
pop
push
cmp
xor
daa
jmp
add
ss
data16
test
push
cld
icebp
arpl
das
scas
hlt
rolb
sahf
sub
cmp
mov
cwtl
pushf
mov
add
push
and
or
jl
pop
stc
ljmp
cmp
mov
add
rcrl
mov
lea
adc
cld
mov
or
add
pop
pop
mov
xor
push
push
dec
clc
jns
jae
push
xor
cmp
sti
fisttpl
jmp
es
pushf
orb
ret
popa
pop
cwtl
ss
jo
dec
loope
mov
movups
inc
mov
mov
dec
add
sub
and
es
sbb
loope
inc
add
add
inc
inc
ljmp
or
add
in
sbb
mov
call
lods
fnsave
mov
inc
jl
sub
or
push
push
jmp
cmp
test
das
cmpsb
or
mov
pop
xor
jge
orl
shrb
xlat
or
push
push
add
inc
in
pop
movsb
js
movsl
inc
mov
pop
push
push
inc
xor
sub
cmp
add
popa
push
test
es
jl
add
sbb
sub
and
stos
rcr
pop
pop
adc
movl
and
and
xorl
jns
adc
mov
repnz
sbb
cs
push
cmp
lock
adc
nop
mov
mov
add
push
dec
dec
fadd
xchg
jl
sub
fcompl
add
sub
testb
call
lock
mov
dec
cmp
fadd
das
lods
movsl
or
mov
cmp
xor
lods
jg
test
jle
cmp
jl
aaa
pop
iret
sahf
xchg
sarb
enter
test
clc
jle
test
push
dec
out
sbb
or
add
repz
push
pop
jne
inc
in
xor
loop
inc
cmp
mov
sbb
fsubl
adc
arpl
push
pop
cli
in
xchg
sbb
adc
mov
pop
fcomp
rcrb
leave
pop
mov
insl
movsl
xchg
sbb
scas
into
xor
jbe
in
xchg
push
and
push
sbb
popf
les
sub
inc
mov
jp
inc
data16
dec
or
inc
test
in
cmp
ds
ret
sbb
fisubrs
in
sub
loopne
es
cmp
gs
mov
xchg
hlt
movsl
cld
push
mov
inc
dec
jne
enter
cmp
pop
out
inc
and
xor
push
xor
cli
lock
pop
ss
repnz
add
sub
add
adc
mov
adc
test
shlb
mov
adc
jp
inc
xor
mov
enter
jbe
inc
xchg
movsb
or
mov
mov
mov
push
mov
cs
ret
sbb
xor
hlt
mov
sarb
add
push
int3
mov
repnz
push
mov
adc
sarb
mov
push
push
dec
outsl
xor
or
popf
pop
shl
push
and
rorb
add
rolb
aas
mov
and
test
in
pop
pop
push
stos
gs
loop
cmp
adc
push
xor
adc
xor
test
lods
ficomps
xchg
push
call
test
dec
jl
aas
data16
mov
pop
sbb
jb
xor
or
ret
outsb
or
jmp
adc
ds
add
or
jns
jl
cmovs
or
jle
lock
jmp
jge
pop
push
jl
in
and
test
sbb
cmp
insb
and
clc
icebp
dec
data16
or
inc
and
jae
mov
jbe
mov
add
sub
scas
xor
ljmp
mov
loopne
les
mov
orl
in
cld
arpl
adc
pop
or
mov
or
pop
pusha
bound
adc
xor
rclb
sbb
adc
pop
fucomp
push
jl
push
add
loopne
adc
lcall
mov
xor
fucomip
cmpl
pop
ljmp
push
int
mov
or
pop
mov
in
push
ficoml
add
sbb
mov
hlt
pop
clc
pop
enter
hlt
hlt
decl
dec
sbb
cmpsl
add
cli
loopne
jg
dec
jecxz
jl
sub
cmpsl
cmpb
lods
loop
ljmp
cs
pop
out
sbb
lcall
jg
add
flds
out
adc
fimull
pop
xchg
mov
pop
push
push
in
pop
xchg
call
imull
sbb
lcall
adc
in
outsl
sbb
dec
loopne
fsubr
js
mov
loope
imul
adcl
or
mov
add
sbb
rclb
jns
xchg
adc
fidivl
push
xchg
fwait
xor
mov
mov
add
lods
or
lods
data16
ss
cs
mov
mov
lods
cmpsl
mov
add
mov
jle
mov
jbe
js
add
lcall
in
in
cmp
xor
in
pop
fldt
sti
fcoml
clc
call
sarb
sbbl
add
addr16
sbb
sub
pop
or
lods
pop
movb
scas
adc
lahf
icebp
lods
mov
pop
mov
mov
dec
es
sbb
shll
sbb
adc
sub
mov
mov
nop
ret
pop
inc
mov
adc
adc
dec
insb
or
inc
cmpsb
adc
push
push
jne
mov
sahf
adc
and
push
adc
pop
mov
pop
insl
xchg
arpl
je
sub
adc
inc
sub
push
add
dec
dec
add
popa
outsl
clc
dec
pop
push
cltd
fadds
cs
mov
scas
mov
push
add
xchg
in
data16
cmp
or
or
and
cmp
xchg
mov
test
icebp
mov
ret
ja
popa
inc
mov
inc
push
shll
insb
sbb
push
pop
adc
push
adc
xchg
jae
cmp
xchg
pusha
loope
cmpsl
cmp
pop
ret
push
aaa
bound
pop
bound
sub
cmp
rorb
inc
rolb
lcall
outsl
jb
test
movsl
add
in
fidivrs
push
add
dec
ds
ds
pusha
dec
push
xor
inc
adc
ss
out
dec
stos
push
or
inc
sbb
in
ljmp
push
sbb
xchg
fcompl
add
repnz
ds
push
adc
mov
nop
daa
stc
hlt
mov
call
repz
lock
lock
fwait
pop
in
inc
inc
bound
xchg
arpl
rcll
ja
popw
gs
arpl
insl
jo
pop
sar
pop
and
pop
sbb
xorb
xchg
bound
cmpb
inc
dec
jne
adc
add
add
sbbl
icebp
or
movsb
mov
jl
sbb
add
sbb
adc
push
filds
lea
pop
mov
das
loope
pushf
and
mov
xor
mov
or
xchg
xchg
mov
and
test
xor
aad
rorb
push
clc
mov
mov
pop
sbb
cltd
movsl
shrb
add
cld
push
cmpsl
lea
test
add
xchg
add
fisubrs
bound
adc
push
arpl
mov
and
mov
push
call
push
add
cwtl
imul
pop
dec
orl
into
jno
data16
or
and
cmp
js
ds
test
daa
cmpl
seto
daa
mov
popf
and
push
add
dec
or
push
adc
dec
xor
sub
fwait
test
sbb
jmp
cs
sub
xchg
pop
pusha
gs
ds
mov
outsb
fnsave
jg
xlat
pop
jne
das
add
inc
mov
or
pusha
jecxz
fdivr
push
dec
or
adc
int
mov
inc
pop
dec
scas
icebp
out
int3
les
adc
push
push
in
pop
das
sbb
or
sub
test
adc
jno
cvttps2pi
sbb
push
fildl
and
cld
or
mov
push
pop
xchg
lret
testl
popa
enter
nop
cmp
inc
pusha
mov
pop
adc
adc
std
sbb
adc
mov
and
xor
add
gs
xlat
inc
push
aas
aas
jno
arpl
dec
cmp
ffreep
and
cmp
and
arpl
lcall
mov
inc
add
push
jge
rcrl
sbb
xor
sbb
pop
xchg
xor
cmpsl
sbb
push
and
enter
jo
push
mov
jns
jns
cmpl
push
adc
fwait
dec
dec
mov
loopne
xchg
jno
sbb
movsl
test
sub
xchg
push
or
inc
fistpll
push
push
jno
sti
xor
pop
add
add
dec
leave
mov
bound
cmpl
xchg
add
je
xor
pop
or
jecxz
arpl
insb
inc
add
jbe
cmpsl
adcb
aaa
add
cmp
and
int
inc
add
xor
push
mov
je
orl
push
or
mov
sbb
adc
pusha
aaa
icebp
add
add
pop
rcrl
in
shll
fucom
mov
mov
insb
imul
sbb
pop
les
das
div
cli
dec
or
loop
or
jge
fimull
mov
cmp
xchg
mov
sbbb
outsl
jg
dec
push
xchg
scas
pop
sub
push
pshufw
out
imul
cmp
clc
pop
aad
das
bound
inc
jle
and
mov
and
mov
xchg
daa
aaa
jecxz
push
sbb
or
sbb
dec
push
dec
movsb
outsl
test
pop
or
loopne
push
jne
cmpb
outsl
xchg
dec
call
mov
push
fs
test
jmp
push
xor
push
dec
sub
icebp
cmp
inc
sbb
or
and
pop
repnz
and
and
insb
pop
adcl
add
and
mov
adc
test
jle
push
push
in
das
popf
cs
mov
sub
subb
cmp
stos
push
dec
popa
mov
push
cmp
xchg
adc
mull
or
out
sbb
xchg
xor
or
add
loop
xor
and
push
cmp
mov
push
mov
pop
pop
outsb
sti
cmpsl
add
movb
push
and
and
les
push
mov
sub
and
xor
push
mov
sub
inc
sub
int3
inc
sub
mov
sub
sub
inc
sub
pop
mov
mov
inc
pop
es
iret
inc
cmp
and
cmp
loopne
imul
or
fdivl
sbb
add
cmpl
fsubrs
in
or
push
push
mov
orb
loope
and
push
in
fs
mov
push
push
ret
adc
adc
ds
mov
mov
bound
int
push
js
inc
sub
adc
xor
dec
cmp
js
loope
xchg
pop
sbb
or
in
insl
aas
xor
add
std
adc
jnp
test
insl
into
inc
cmpl
ret
add
leave
and
enter
and
pop
mov
or
inc
pusha
icebp
xor
rolb
out
pushf
pminub
rcrl
sub
sbb
addb
sub
add
fs
and
push
out
sbb
fcoms
jns
adc
test
push
or
test
addr16
or
push
dec
imul
arpl
add
sub
divb
incb
jo
ja
xor
xchg
and
dec
add
ss
adc
in
xor
shll
ja
and
xor
sbb
inc
push
nop
out
or
mov
push
aad
cli
insl
xor
gs
sbb
cwtl
fdivrp
mov
aaa
data16
and
lcall
in
les
aad
add
xor
xchg
dec
pop
and
add
push
jo
xor
add
or
ret
push
or
daa
cmp
orl
and
fs
movsl
cltd
test
cmp
cmpl
je
xchg
loopne
pop
add
frstor
push
dec
jl
loop
jne
inc
ja
dec
enter
sub
cltd
out
mov
add
sbb
mov
mov
sbb
mov
adc
adc
dec
sbb
stc
jae
jbe
mov
and
les
or
cmp
and
loopne
pop
or
scas
int
lcall
data16
jle
repnz
subl
sar
hlt
mov
add
ja
mov
out
adc
mov
push
pushf
fsub
and
mov
mov
lret
sbb
popf
andb
push
push
in
ret
out
cmpl
aad
insb
into
or
push
mov
lea
dec
loop
mov
lea
dec
mov
lods
pop
fistl
mov
adc
cmpsl
cld
add
push
xchg
xchg
test
std
out
enter
xchg
dec
lock
push
and
sub
sti
fwait
dec
or
jge
mov
xorb
lcall
je
add
push
aaa
sbb
lock
push
sti
mov
stc
cmp
and
imul
add
je
cmpb
jl
arpl
imul
insb
dec
xchg
adcl
push
add
jp
cmp
mov
xchg
stc
or
lahf
aam
ss
add
or
fmull
mov
jp
inc
iret
imul
and
jbe
jb
addb
push
pop
sbb
xor
xor
or
fisubl
jmp
pop
push
adc
push
add
pop
divl
push
push
mov
pop
das
rcrb
lds
in
loope
sbb
and
or
push
push
sbb
inc
movsb
or
jg
nop
and
fistps
pop
and
push
test
mov
jmp
sbbl
push
dec
fs
clc
sub
push
mov
gs
inc
pop
orb
mov
loop
jmp
or
cmp
xor
aad
jmp
bound
jle
dec
cmp
jo
sbb
jecxz
dec
xchg
push
int
pop
jae
adc
sbb
pop
or
sbb
shlb
xchg
sbb
and
popf
clc
les
mov
lods
mov
and
addb
std
push
ret
pop
jo
jmp
aam
cmpb
imul
or
inc
lock
pop
mov
insl
adc
pop
cltd
jmp
xchg
inc
adc
or
mov
in
sub
sub
push
mov
shrl
or
xchg
stc
scas
test
xchg
rol
pop
addl
push
cmp
push
je
shlb
push
loop
inc
ret
pop
subl
or
jmp
pop
pop
loopne
push
mov
and
call
fisubs
add
repnz
mov
or
pop
or
in
push
or
cmp
ss
scas
sbb
or
jb
cmp
je
aas
xchg
pop
in
icebp
shll
pushf
mov
cmp
in
call
jge
sub
sbb
or
lods
adc
mov
ror
inc
push
repnz
les
movl
fiaddl
push
call
call
js
add
popl
and
and
xchg
or
out
pop
in
shlb
push
pop
inc
insb
addb
mov
cmp
mov
pop
sub
add
or
pop
xchg
arpl
mov
push
das
lods
enter
dec
je
and
pop
pusha
dec
in
les
cmp
outsb
dec
xlat
xor
xor
jmp
xor
pushf
mov
mov
movsl
test
mov
or
lods
sbb
or
in
in
or
jne
imul
test
sub
pop
pop
add
pop
les
rcrb
shr
loopne
add
sub
mov
movsl
cmp
ljmp
pop
sti
cld
shlb
cltd
stos
mov
adc
lods
mov
add
sub
jne
xor
pop
insl
subb
test
testb
pushl
lock
xchg
fwait
pop
sub
shll
push
xor
xchg
inc
pop
ror
test
and
jge
pop
dec
stc
add
and
mov
sbb
dec
xorl
push
out
movsl
and
pop
shl
mov
adc
mov
lock
pop
mov
mov
aad
clc
push
lods
xchg
cmp
xorb
fs
paddb
add
jne
loopne
inc
sub
bound
inc
imul
adc
adc
inc
cmc
es
adc
xor
adcb
cmp
int
enter
mov
or
orb
xor
es
std
adc
cmp
and
sti
mov
sub
or
or
adc
mov
lcall
add
jp
leave
or
mov
and
cs
add
outsb
test
adc
cmp
test
xchg
adc
dec
inc
xlat
je
icebp
add
not
add
inc
pop
mov
and
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
imul
int
je
adc
repz
sbb
sbb
jne
sub
or
addr16
dec
adc
add
movsl
dec
nop
sbb
js
push
push
adc
or
sbb
jl
lret
xor
push
jno
mov
jne
jecxz
mov
sub
outsb
inc
sub
push
or
inc
adc
add
scas
mov
cmp
mov
push
divb
push
insb
pop
bound
fbld
mov
and
inc
faddl
push
xchg
out
movl
xchg
inc
add
sub
and
dec
faddp
fcomps
call
dec
mov
out
push
fmull
fwait
sbb
adc
cmp
cs
insl
push
and
lods
ss
fldt
or
int3
sub
xchg
mov
fsubrl
push
pop
daa
ret
lcall
jbe
scas
xchg
test
repnz
pop
cmpsl
hlt
cmp
pusha
stos
add
in
nop
add
xor
xchg
and
mov
clc
inc
cmp
and
loopne
xor
insl
lcall
mov
fisttpll
adc
adc
loopne
pop
daa
sub
push
adc
push
sbb
inc
mov
ret
shrb
jne
ret
or
out
xor
pop
inc
push
mov
test
daa
clc
mov
xorb
jbe
mov
test
or
nop
sub
pop
je
dec
incl
mov
test
push
push
xchg
stos
and
test
sbb
mov
pop
mov
sbb
or
xor
mov
stos
xchg
pop
out
mov
inc
xor
fimull
and
in
sbb
add
add
mov
cwtl
jno
pop
fwait
mov
inc
in
push
xor
mov
pusha
pop
adc
mov
shlb
add
in
and
cmp
mov
mov
popf
repnz
mov
and
inc
dec
mov
fadds
push
ret
adc
std
loopne
xor
and
stc
push
adc
orl
andb
or
call
push
inc
mov
mov
or
lret
cmp
xchg
xor
sub
push
jecxz
imul
in
loope
or
mov
xor
lock
cmpsl
test
pop
jge
in
fwait
add
jg
call
add
into
and
inc
dec
lock
iret
daa
push
lcall
jb
nop
xchg
xor
push
scas
insb
mov
pop
inc
dec
xor
cs
gs
scas
add
aam
or
lret
dec
mov
sbb
test
nop
dec
fildl
dec
mov
cmpsl
ret
arpl
adc
iret
loopne
push
test
dec
jle
jge
loopne
ds
dec
ljmp
sub
mov
xchg
lods
xchg
nop
jl
leave
hlt
mov
mov
or
cmp
inc
out
add
loope
inc
cmp
hlt
or
sub
add
push
sysenter
sbb
push
or
push
and
dec
lock
sub
push
fwait
mov
lock
cmpsb
lock
insb
inc
lods
imul
xchg
sub
xchg
imul
js
cmp
shlb
popa
popa
ret
or
rorl
lret
lea
xchg
test
inc
mov
addb
cli
in
pop
je
sub
cmp
rolb
mov
insb
popl
jge
sub
dec
xchg
dec
add
test
adc
mov
xor
mov
mov
xchg
or
or
data16
scas
icebp
or
jg
xchg
sub
xchg
push
and
xor
cmp
test
dec
or
or
mov
sbb
das
mov
imul
or
cmp
sbb
mov
enter
xchg
push
mov
xchg
pop
rcll
imul
out
pop
lea
hlt
cmp
mov
clc
mov
pop
jp
sbb
dec
sbb
or
sub
jo
ss
pop
pop
lock
test
jecxz
clc
xor
cld
cld
lods
fwait
shlb
push
mov
adcb
push
or
insl
mov
movb
leave
push
lahf
xor
int3
orl
add
loop
mov
pop
push
or
mov
xor
jo
das
repz
lret
loopne
adcb
test
mov
popa
fwait
cld
pop
push
xchg
ret
ret
lods
add
inc
in
adc
movsb
adc
and
sbb
mov
pusha
sbb
mov
lea
jg
shlb
push
dec
sub
scas
rol
jno
add
cmp
lds
add
pop
cmp
test
dec
pop
or
sbb
push
or
xchg
adc
xor
arpl
add
fisubrs
pop
gs
nop
sbb
pop
nop
add
inc
shll
ret
imul
dec
add
xor
pop
popa
aam
pop
dec
inc
or
inc
leave
push
mov
xlat
nop
icebp
xchg
out
pop
and
inc
ds
test
inc
pusha
or
fcmovu
out
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
loope
xchg
pop
adc
sub
clc
out
mov
pop
stos
movsb
push
out
lock
add
ljmp
jno
mov
popa
xorb
add
jle
adc
push
sbb
and
pop
bsf
push
sbb
push
sub
mov
ds
sub
mov
insb
add
jnp
add
lods
adc
lret
lock
jle
mov
sub
mov
add
sub
movl
sbb
xlat
inc
cmp
lock
mov
xor
or
adc
pop
sbb
mov
movsb
xchg
sub
cmp
and
cmp
in
cmp
das
jmp
mov
dec
imul
pop
jbe
stos
rcrl
adc
inc
cmp
jne
in
mov
rcrl
ja
stos
or
and
cli
pop
pop
xor
adc
sbb
ret
adc
insb
xchg
or
loop
jb
gs
xor
adc
call
sbb
or
sbb
inc
es
add
int3
pop
test
or
fisubs
adc
data16
add
test
ja
jae
repnz
lret
loope
out
sub
inc
pop
stos
add
cmpsl
inc
pop
xchg
pop
aaa
iret
jne
xchg
icebp
adc
dec
sarb
push
notl
xchg
hlt
mov
popa
cltd
fnstcw
xchg
dec
sahf
mov
ficomps
into
addb
mov
mov
icebp
dec
fidivl
dec
lret
or
xor
fimull
or
adcl
js
push
dec
jl
xor
divb
mov
add
xor
jp
mov
mov
sub
mov
jge
adc
adc
mov
cmp
push
lea
sub
out
ss
inc
sub
adc
xor
pushf
pop
mov
daa
push
push
leave
adc
inc
push
shlb
push
js
sub
ljmp
cmp
ljmp
aam
cs
cltd
adc
movb
test
cmp
je
jl
xor
fistl
lods
or
fnstenv
cmpsb
or
sbb
pop
jbe
inc
into
xchg
sub
mov
inc
jo
dec
push
pop
jmp
and
sub
xchg
test
psrlw
stc
inc
ret
rcr
mov
sub
lea
lods
adc
push
dec
dec
or
es
lea
frstor
push
jl
adc
push
sub
dec
or
adc
lea
daa
insb
mov
clc
ja
xchg
cwtl
in
fs
xchg
pop
sbb
cmp
in
xchg
mov
sub
add
je
sub
mov
jp
aad
push
push
lds
dec
ja
or
mov
nop
xchg
insl
loopne
dec
fcoms
push
ffreep
filds
jne
arpl
dec
or
add
loop
fwait
sbb
shll
or
xor
adc
subl
jmp
sbb
cmpsl
mov
outsb
or
inc
sbb
cmp
shlb
ret
out
or
pop
or
mov
push
call
mov
xchg
add
rcrb
movsl
enter
or
jl
push
push
jle
add
and
lret
scas
sbb
pop
sbb
push
fsubl
sub
mov
fs
fstl
shll
adc
add
div
fisubl
adc
sti
and
popa
dec
or
mov
add
iret
ret
inc
in
or
subl
jne
ss
mov
into
ljmp
add
push
in
icebp
dec
loope
mov
inc
add
sub
or
loop
inc
jno
add
and
mov
xchg
or
js
hlt
fsubs
sub
sbb
je
dec
xchg
xor
lock
in
insb
and
inc
jbe
jmp
mov
aam
jmp
cmova
insl
loop
fildll
or
fsubr
loope
push
enter
scas
fwait
mov
into
pop
lods
adc
movsb
fisttpl
sub
aam
fwait
iret
pop
sub
jbe
mov
xchg
inc
push
xor
fwait
hlt
mov
jb
aam
fwait
int3
std
shll
movsb
and
pop
sbb
cmc
push
push
and
leave
ret
mov
xchg
cli
add
pop
push
cwtl
xchg
in
mov
movsl
pusha
aam
loope
leave
and
sar
cs
add
lcall
add
adc
loopne
pusha
inc
in
xchg
mov
pushf
leave
inc
xchg
cmp
sbb
pushf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
add
push
call
mov
in
mov
push
fcomps
fcmovnb
ret
dec
movl
frstor
mov
push
or
inc
scas
test
lds
and
and
mov
and
push
xchg
out
cmpsl
xorb
sub
jle
test
push
inc
dec
stc
int
pop
mov
out
and
mov
jle
call
inc
add
sbb
dec
test
or
dec
xchg
pop
test
dec
sahf
dec
cli
mov
imul
pop
cld
add
mov
inc
lods
xchg
mov
add
push
test
sbb
rol
or
fs
pusha
push
jo
mov
push
stc
sub
fadd
or
add
int3
xchg
loop
push
cwtl
mov
outsl
adc
push
push
sbb
push
jo
push
mov
xchg
ds
fstp
mov
lea
je
adc
nop
fmul
ror
or
dec
and
nop
lea
or
xchg
add
test
jmp
sbb
add
mov
fsubrp
push
jecxz
and
inc
mov
adc
fidivrl
insb
icebp
and
js
and
or
mov
push
and
das
call
or
movsl
jg
orl
xor
or
add
cmp
xorb
shl
add
dec
ja
and
adc
call
sub
mov
lahf
mov
js
jmp
in
pop
mov
cli
test
and
or
jge
and
inc
maxps
iret
lret
xchg
sbb
mov
iret
push
mov
sbb
add
dec
sbb
adc
in
movb
rcll
sbb
sbb
insl
loope
mov
xor
popf
adc
leave
pop
aaa
or
mov
cmpsl
and
es
lds
rorb
loopne
push
jp
out
mov
movsb
add
imul
push
jne
inc
jl
outsb
sub
mov
push
push
inc
sbb
dec
xchg
jno
jge
mov
and
mov
ja
scas
lret
test
add
int3
rcll
add
shrb
imul
push
ss
sub
or
or
sub
inc
pop
clc
out
pop
push
mov
or
ss
inc
arpl
cmp
cmpl
or
adc
sub
gs
loope
sub
pop
test
pop
pusha
ss
adc
cmp
cwtl
add
rcll
sbb
movl
inc
sbb
je
sub
rolb
sarb
or
dec
jbe
xor
push
push
dec
inc
and
dec
out
or
pop
inc
dec
pop
pop
cmpsl
push
loope
jle
test
stc
push
push
mov
push
xor
movsb
sbb
inc
add
pop
jns
cmp
sbb
pop
cs
test
sub
cmp
adcb
mov
movsl
rcrl
adc
mov
clc
or
je
mov
sub
psrad
mov
adc
or
cmp
jo
ja
out
cltd
and
inc
fcomps
shl
sub
inc
mov
jecxz
or
or
add
push
cmp
inc
mov
cs
movsl
imul
push
pusha
nop
loope
sbb
xchg
je
inc
and
cmp
ljmp
xor
pop
adc
pop
dec
push
add
inc
and
enter
push
test
nop
xor
call
xchg
lea
or
xor
sti
sub
inc
mov
xchg
jmp
sti
mov
inc
or
pop
cmp
or
aam
cmp
pop
add
xchg
in
icebp
inc
jns
pop
add
dec
jge
xor
mov
cmp
cmc
mov
inc
adc
adc
push
stos
daa
adc
es
or
sub
xor
xor
cmc
pop
sbb
jne
cmp
test
icebp
push
dec
add
rorb
mov
and
mov
clc
jnp
ds
inc
fsub
cmpsb
jle
aaa
mov
lods
pop
pop
ds
testl
xchg
or
call
test
imul
pop
push
cmp
aam
idivb
imulb
mov
gs
cmp
pop
sbb
and
xchg
xchg
adc
cmp
pop
inc
data16
xor
push
push
cld
loope
and
pop
lret
pmullw
enter
mov
ret
imul
testl
outsl
push
test
aaa
push
iret
in
lods
lcall
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
cmp
aaa
sub
cmpsb
shrl
out
lds
mov
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
sub
mov
push
pop
enter
test
daa
mov
stc
cs
adc
and
xchg
add
sub
cmp
das
jecxz
scas
push
push
xchg
push
into
pusha
jmp
clc
pop
mov
or
push
loope
xorb
and
sub
inc
jnp
mov
sbb
mov
ja
insb
andb
adcl
cli
addb
stos
iret
dec
xor
iret
mov
dec
mov
cmpsb
xor
nop
xor
test
nop
jo
or
test
pop
test
enter
test
cmp
jne
push
mov
sub
and
mov
ror
and
pop
mov
pushf
xchg
mov
mov
pop
rcrl
test
dec
jmp
lock
adc
push
cwtl
sub
add
and
add
ja
add
fdivrs
mov
sub
clc
dec
ja
pop
testl
repz
cmp
and
rclb
adc
dec
push
fcmovnbe
and
pop
dec
or
inc
ds
dec
or
inc
cmp
sub
sub
or
jne
push
cmp
movq
sbb
push
jp
push
pop
femms
jecxz
push
outsb
hlt
jecxz
ret
xor
nop
or
ljmp
fimuls
mov
call
adc
push
in
mov
sbb
xor
and
mov
jmp
out
adc
cmpsb
or
imul
nop
inc
call
pop
fisubl
adc
cmp
push
divb
add
call
or
xchg
sub
cwtl
inc
rolb
fisubrs
sub
pusha
and
lret
sbb
into
in
rcrl
out
fwait
sbb
jo
push
and
mov
fldcw
pop
mov
push
subl
jns
fisttpll
fwait
cwtl
mov
mov
sub
movsb
sbb
sub
loopne
das
fistps
in
or
fwait
mov
add
sahf
and
jbe
lods
mov
hlt
or
out
xor
es
aaa
mov
cltd
add
xor
cmp
jg
pushf
fld
rorb
jl
dec
mov
in
xchg
push
mov
cmc
push
ficoml
add
test
jl
mov
or
adc
adc
mov
and
cmpb
or
mov
xchg
cmp
fs
jl
in
in
mov
mov
aam
inc
adcb
pop
pop
xor
outsl
lods
adc
out
sub
push
das
adc
rclb
or
cli
lret
movsl
push
mov
subb
inc
lahf
and
inc
insb
mov
adc
add
xchg
mov
cmpsb
push
popa
mov
adcb
mov
lock
or
add
mov
iret
jmp
or
inc
xchg
jbe
mov
enter
add
xchg
test
hlt
in
push
jmp
sbb
in
in
adc
dec
mov
mov
add
inc
sahf
fmull
add
aaa
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
dec
cs
dec
shl
stc
lret
nop
sbb
clc
add
daa
fcoms
pop
ds
mov
lods
pop
imul
cmpb
add
sbb
and
je
push
xor
pop
lahf
fstps
loopew
or
mov
push
or
adc
add
sbbb
cld
mov
jmp
mov
pop
movb
adc
jno
mov
and
pxor
push
ret
je
jb
push
add
roll
and
mov
pop
add
push
jmp
js
or
adc
add
push
pop
dec
adc
adc
jmp
cmp
mov
or
sbb
pushw
push
arpl
xchg
pop
daa
and
adc
push
jnp
sub
jb
cmp
faddl
jge
sbb
and
mov
mov
aaa
call
cmp
mov
in
xchg
and
or
incb
push
push
popa
cmp
jle
push
pop
lcall
mov
or
das
sub
test
ficoms
aam
pop
and
mov
and
pop
cmp
lcall
sbb
popf
pop
push
popa
ficomps
or
sbb
push
xchg
fcoml
nop
movsl
js
and
adc
adc
daa
xor
lock
movsl
loope
test
cmpl
xor
es
and
lock
mov
jl
inc
or
test
das
adc
repnz
stos
pop
test
sub
mov
dec
xor
in
and
call
jne
xor
cmpl
jb
or
xor
dec
jge
sub
insl
adc
push
inc
sbb
aas
adc
jle
lea
fcomps
decb
and
jb
push
push
push
call
pop
in
inc
shll
push
cmpsb
sbb
decb
push
dec
inc
pop
cmpsl
sub
adc
pushf
adc
push
enter
inc
sub
xchg
daa
mov
enter
adc
mov
push
aam
jne
lret
cmpsb
sub
mov
adcl
sub
push
push
js
mov
push
inc
pusha
and
mov
inc
jne
inc
inc
andb
push
and
loopne
sbb
lock
out
mov
fmuls
and
loopne
sbb
loop
and
push
ss
sub
pop
jne
add
ss
jmp
ds
add
adc
loop
mov
push
push
shrb
adc
inc
outsb
jne
mov
insb
popa
jns
jae
push
aas
lock
movl
add
or
add
mov
mov
movsb
or
cmp
adc
mov
fwait
insb
loopne
mov
push
push
inc
push
jp
dec
cmp
dec
mov
jns
sbb
push
mov
xchg
cmpb
push
mov
in
mov
enter
test
prefetchw
aas
inc
cmp
std
outsl
sti
pop
jnp
test
xchg
cld
mov
pop
rcll
mov
cmp
inc
mov
mov
popf
or
fidivrl
cmp
adc
fistps
sub
push
imul
jb
inc
or
dec
adc
dec
mov
mov
mov
adc
popa
and
je
movsl
repnz
add
hlt
or
xorl
add
xor
push
cmpl
mov
fsub
sbb
xchg
push
ljmp
mov
pop
and
in
or
enter
orb
lcall
ds
fwait
sbb
jmp
mov
and
inc
into
movzwl
cmpb
fsub
repz
ds
push
sub
std
mov
add
ja
jns
out
cmp
push
pop
sbb
inc
aam
ja
jae,pn
inc
sub
aaa
fdivrl
dec
mov
loope
out
add
xor
lret
inc
dec
or
dec
int3
or
adc
sbb
fsts
mov
es
sub
pop
xchg
jg
shrb
das
add
cmp
mov
and
mov
jmp
dec
push
les
jecxz
nop
fiaddl
je
mov
loope
frstor
xchg
inc
lock
pop
ja
sbb
mov
insb
or
test
andb
pop
cmp
sbb
pusha
adc
loope
mov
mov
test
and
lea
pop
mov
push
pop
inc
cmp
popa
nop
iret
pop
hlt
sbb
xor
mov
ja
hlt
test
fsubl
add
or
add
rorb
and
imul
jp
xchg
or
or
sbb
lds
rcll
ret
sbb
jno
jno
sub
rorl
add
jne
mov
adc
popa
cmp
dec
jle
int3
push
into
popa
jg
pop
and
adc
xchg
test
arpl
adc
test
sub
add
dec
lock
lock
ficoml
out
add
or
mov
add
rclb
push
xor
rolb
mov
or
pop
or
mov
int3
mov
pop
movsb
and
sub
mov
or
mov
cmp
hlt
jne
fcompp
aaa
dec
sbb
cs
orb
pop
mov
or
ss
in
daa
sbb
sub
les
add
je
and
out
xorb
sub
inc
xchg
add
jo
fwait
nop
xchg
xor
pop
inc
sbb
jge
inc
cmc
and
out
inc
inc
sbb
jle
dec
jne
mov
sbb
dec
data16
loope
cwtl
sub
inc
lds
rcrb
cmp
jge
lock
cmp
mov
adc
ret
dec
xor
push
rorb
shrb
shlb
loopne
fyl2xp1
inc
shlb
or
or
mov
and
fldcw
data16
mov
into
daa
xor
jmp
in
inc
inc
inc
add
pop
fsubl
cwtl
add
aas
outsl
push
sub
dec
lods
or
js
lcall
sbb
push
mov
dec
add
add
in
pop
insl
jle
push
adc
das
adc
and
xchg
xchg
ds
ja
cltd
push
fsubrl
cmp
outsl
dec
sub
dec
in
jno
out
js
fadd
cmp
loope
xor
test
lds
fwait
pop
inc
dec
lea
cmp
and
icebp
fisubl
loopne
jmp
inc
jmp
ja
jns
mov
sti
xor
orl
nop
sbb
nop
movl
and
ret
rorl
and
mov
sbb
mov
push
xor
inc
test
xor
popa
jle
adc
call
in
lock
xlat
inc
inc
dec
mov
sbb
inc
call
call
sub
cld
loopne
push
enter
sub
je
nop
lcall
xlat
adc
mov
jbe
fldenv
pop
leave
icebp
or
shll
mov
pop
in
repnz
in
pop
clc
xchg
jo
mov
addps
xor
sbb
leave
test
xor
punpckhwd
push
stos
leavew
lock
fs
clc
adcb
xor
popa
push
iret
icebp
push
adc
inc
xor
and
add
stc
test
add
fdivs
pusha
clc
movsl
jno
loope
sub
into
cld
mov
or
dec
je
or
sbb
xchg
loopne
ds
jmp
adc
jmp
push
movb
mov
mov
and
test
sbb
and
test
aas
cld
sbb
add
std
inc
jns,pn
cmp
jne
sbb
or
push
adc
and
xor
adc
movsb
and
xchg
pop
mov
cmpl
test
js
push
sub
adc
xchg
jne
sbb
xor
je
xchg
movsl
das
jns
repz
pop
mov
jmp
or
lret
cmp
sub
scas
dec
inc
or
sbb
inc
test
sbb
arpl
loopne
in
adc
sub
rclb
push
dec
cli
leave
pop
leave
jo
push
adcb
fldt
es
and
dec
fisubrl
and
cmp
xchg
lret
insb
push
cmp
mov
insb
outsl
pushf
inc
inc
adcb
jae
cwtl
jns
jb
dec
mov
dec
lret
push
mov
movsb
or
and
and
push
test
and
lock
add
or
pop
or
and
int3
sbb
xchg
lahf
and
insl
arpl
or
mov
data16
insb
xor
lods
jle
inc
daa
push
sub
xchg
xchg
pop
lods
iret
jb
inc
dec
pop
push
das
push
loop
loop
inc
outsb
adc
mov
outsl
ja
xchg
mov
fidivrl
push
jnp
or
pop
outsl
jae
push
jg
push
push
inc
iret
or
and
lcall
lods
jl
and
iret
inc
mov
push
push
push
push
xchg
nop
cwtl
push
or
pusha
loop
sti
nop
adc
sbb
mov
pusha
iret
je
movsb
push
mov
sub
call
push
inc
jb
dec
push
les
push
arpl
push
dec
shlb
sbb
xchg
sub
pop
call
lods
mov
cltd
add
jns
and
pop
pop
push
icebp
rolb
inc
es
sarb
in
inc
sub
inc
sub
mov
enter
xor
decl
stc
fisubrs
adc
sbb
or
addl
or
enter
sub
enter
xchg
cwtl
enter
pushf
mov
enter
mov
enter
mov
enter
rcl
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
add
enter
or
adc
enter
sbb
and
push
lret
enter
xor
push
sub
sub
xor
mov
mov
out
ja
adc
cmp
add
adc
loopne
and
xchg
lds
je
jl
and
addb
fmuls
clc
xchg
or
movsb
xor
xchg
cwtl
and
mov
sbb
dec
gs
sub
test
aam
movsb
xor
mov
adcb
fcoms
jb
adc
and
nop
lret
cmp
inc
sub
push
dec
fcomps
or
fsubrl
js
and
adcb
in
mov
sbb
loopne
inc
sub
clc
lock
add
mov
sub
add
gs
sub
xor
add
push
push
movsb
xor
adc
sbb
sbb
sub
push
sbb
mov
enter
inc
sub
sub
xchg
add
repnz
jmp
pushl
mov
les
push
dec
rcrb
fcmove
sub
outsl
jae
and
sbb
mov
or
mov
cwtl
adc
add
scas
or
popa
jb
add
fistl
test
test
sbb
je
jne
adc
mov
addr16
xchg
mov
jae
addr16
fs
das
scas
pop
dec
arpl
jae
test
xor
fs
lea
or
jbe
or
jns
jp
jae
sbb
int
les
mov
pop
lahf
pop
xor
pop
and
push
inc
loop
sub
testb
imul
pop
mov
pop
dec
xor
dec
pop
adc
pop
iret
popf
loopne
add
dec
xor
in
pop
or
iret
mov
add
outsb
popa
and
and
nop
cwtl
mov
aad
mov
mov
fstpl
in
pop
push
xchg
mov
jl
mov
ja
and
jo
jg
jae
mov
addr16
jne
insl
outsb
sub
das
pop
fs
ss
sbb
inc
imul
popf
pusha
fs
mov
jno
arpl
inc
popa
loope
push
xchg
cmp
and
pop
outsl
pop
cmp
sbb
adc
adc
sbb
or
mov
inc
hlt
cwtl
fidivrl
inc
imul
ds
mov
jg
daa
daa
inc
sbb
subl
cmpsb
add
sbb
jnp
xchg
in
push
movsb
xchg
dec
sub
in
fcmove
mov
mov
outsl
dec
push
fs
push
and
dec
push
and
nop
dec
push
pop
inc
sbb
inc
mov
lds
xchg
add
in
add
pop
add
adc
xor
leave
fisttpl
popl
jbe
add
pusha
dec
pusha
pushl
and
push
jge
test
inc
fs
mov
push
push
push
pop
mov
push
push
je
jp
adc
inc
and
adc
jl
outsl
loop
out
xor
pop
fildll
push
test
ja
cmpsb
mov
inc
xchg
add
add
jmp
push
xchg
pavgb
mov
push
or
sbb
push
icebp
xchg
sub
aaa
and
popf
push
push
xor
clc
cmpsb
xchg
xor
incl
fxch
push
movsl
lret
add
inc
push
pop
cmp
cmp
mov
or
cmp
adc
repnz
cmpb
test
add
lds
and
sarl
inc
xor
push
push
adc
mov
mov
cli
push
xor
out
or
dec
push
divl
adc
xchg
fsubrp
cmp
js
rclb
aam
arpl
xchg
push
add
sub
enter
cmp
add
push
push
add
ret
sbb
mov
mov
andl
pop
pop
pop
cmp
xor
mov
scas
mov
mov
pop
popa
in
inc
insb
pop
sbb
or
add
test
out
out
add
add
gs
push
aas
mov
mov
outsw
test
mov
mov
out
and
cmpsb
in
push
and
test
pop
and
test
mov
fnstcw
cmp
mov
adcb
loopne
insb
adc
lea
jae
mov
pop
mov
bound
fbstp
inc
cmp
pop
or
and
daa
push
push
push
popf
or
pop
pop
rclb
add
and
dec
outsl
add
inc
xchg
add
les
bound
inc
bound
je
push
loope
inc
xor
negb
outsb
outsl
pop
cvtdq2ps
movl
add
and
inc
dec
jmp
push
call
mov
push
clc
sbb
push
sbb
test
sub
movb
jns
stos
js
sub
jg
mov
shlb
add
inc
lret
and
pop
in
std
test
insl
fs
addr16
push
cmp
add
lret
sub
push
adc
arpl
and
adc
mov
adc
es
dec
aas
or
nop
cs
iret
enter
mov
iret
leave
cmp
cmp
repnz
sahf
xchg
adc
xchg
xchg
lret
test
inc
sbb
repnz
sahf
jo
insb
push
loopne
jbe
pushf
add
insb
cmpsb
adc
push
icebp
sub
or
rcll
xor
pop
add
or
loop
insb
cmpsl
xor
cmpsl
dec
xor
inc
mov
xor
push
adc
sbb
sub
pop
pushf
repnz
xor
gs
insb
icebp
pop
push
fbstp
or
dec
outsl
ja
cmpsl
insb
or
push
popa
imul
add
jae
mov
push
pop
mov
je
add
or
xchg
cld
dec
xor
pop
aaa
and
je
sbb
test
adc
xchg
cmp
shrb
jb
sub
das
jle
lds
enter
dec
xchg
inc
aas
enter
sbb
inc
test
inc
add
in
jnp
mov
push
lock
ret
ret
aas
in
lret
inc
das
enter
pop
imul
test
push
fimuls
mov
sti
xor
in
jle
push
sbb
nop
rclb
fdivp
xchg
lret
or
int
fmul
iret
jnp
push
into
jle
icebp
rorb
dec
rcrl
sub
hlt
sbb
test
sahf
sub
xchg
adc
add
outsb
popa
stos
pop
sarb
add
pop
push
add
insl
and
hlt
push
aas
test
push
inc
rorb
in
popf
jle
inc
je
fdiv
orb
inc
push
in
inc
xchg
jae
lcall
xchg
femms
add
jb
push
idivl
push
iret
imul
cmpsl
sti
xor
mov
cltd
dec
xor
sahf
push
sbb
fstl
stos
test
iret
xor
push
jnp
das
test
and
mov
add
push
push
imul
nop
dec
out
mov
jne
jp
js
addb
outsl
cmc
and
mull
mull
sub
mov
in
xchg
pop
neg
xor
nop
testl
loop
clc
add
test
sti
pop
xchg
cmp
push
addr16
inc
xor
mov
ret
sbb
mov
cmp
aaa
xchg
sbb
pop
out
loopne
jge
in
xlat
fs
sub
ss
push
and
pop
call
dec
adc
cmp
inc
es
pop
repnz
inc
loopne
clc
std
hlt
insl
mov
cmp
dec
lcall
inc
inc
pop
int3
ss
shrl
xor
adc
mov
pop
xor
adc
push
fsubrs
outsb
push
mov
fisubrl
push
stc
push
pop
lcall
push
and
sub
or
cmp
xor
inc
js
jl
xchg
incl
movsb
sti
xor
mov
mov
mov
mov
mov
lret
cli
push
push
sub
add
iret
insb
adc
push
into
or
push
push
sub
outsb
and
sbbl
lret
push
ret
nop
fwait
or
lahf
fcomp
rolb
push
stc
imul
imulb
adc
inc
pop
dec
subl
imul
xchg
sub
xor
push
inc
iret
aaa
and
inc
cwtl
cmp
add
std
adc
cmp
add
or
and
or
pop
or
adc
lret
push
in
mov
jne
lods
mov
jo
add
sub
mov
dec
xchg
push
outsb
dec
adc
dec
lcall
jne
pushf
xchg
adc
jns
jns
add
sbb
xor
in
pop
and
pusha
sbb
sub
and
push
adc
cwtl
and
adcb
ret
test
cmp
mov
cmp
adc
bound
add
enter
into
or
mov
xor
fstl
adc
mov
or
push
push
in
add
push
pop
xchg
push
dec
cld
je
xor
loope
cmpsl
mov
jno
aaa
sbb
jmp
test
and
pushf
mov
dec
bound
loopne
jp
jp
xor
hlt
sbb
dec
addr16
mov
push
mov
insb
jl
dec
fwait
sbb
or
pop
sbb
dec
mov
hlt
addb
sbb
and
push
and
adc
and
push
xchg
inc
popa
and
sbb
adc
test
sarl
jo
dec
push
jno
or
and
add
mov
pop
jmp
int3
into
push
dec
lret
pusha
push
insb
pop
mov
adc
ss
fisubrs
dec
jbe
pop
lcall
pop
jae
pop
mov
iret
pop
fs
add
pop
jno
xchg
aaa
and
lds
cmp
add
lret
in
jnp
adc
cmp
mov
es
int
notb
jo
jo
push
mov
sub
add
insb
inc
out
and
jnp
sub
push
lds
cmp
mov
inc
sbb
sub
sbb
int3
dec
sarb
out
sub
stos
out
sbb
rolb
mov
mov
and
or
das
add
aad
stc
cltd
and
lahf
lods
mov
xor
loope
in
pop
xor
push
jle
and
pop
je
push
mov
xor
or
lcall
dec
mov
mov
psubusw
pop
xchg
xor
mov
inc
add
popf
xchg
sbb
dec
xor
jb
dec
fcmovnu
call
xor
fstpl
es
or
mov
or
fs
sahf
sbb
aaa
xchg
out
jns
insl
rolb
add
test
enter
repz
push
js
and
rolb
xchg
cmp
cmp
or
add
cmp
repnz
cmp
push
fcomp
add
in
cmp
daa
pop
enter
dec
loopne
add
push
loope
pop
xorl
inc
clc
ds
js
mov
xchg
insb
push
add
in
fnstcw
rclb
rolb
cmp
insb
xchg
lock
lock
and
push
dec
jge
xchg
add
pop
cld
out
ret
dec
and
add
xchg
into
add
jmp
dec
das
jl
mov
dec
dec
das
add
imul
cmpsl
cmp
cld
push
dec
mov
add
add
lods
test
inc
in
pop
ds
pop
lcall
hlt
rolb
sub
adc
mov
xor
mov
or
jle
dec
push
sub
mov
jp
or
out
movsl
adc
dec
inc
inc
or
add
xchg
outsl
add
mov
push
or
movb
movsl
or
mov
mov
pop
loopne
adc
out
pop
lret
cmp
nopl
adc
jb
aaa
imul
cmp
lcall
outsb
bound
add
mov
mov
in
fadds
movsb
push
xchg
repnz
mov
imul
add
pop
xchg
push
mov
sbb
cwtl
add
hlt
shll
rorl
aad
scas
mov
cmp
out
int
or
mov
or
aam
aas
pop
mov
add
add
es
or
js
push
adc
mul
adc
adc
sub
ds
out
or
push
jne
mov
stos
xor
push
les
fists
cmp
into
fadds
add
add
adc
dec
push
and
cmp
add
sbb
cltd
add
shll
daa
xchg
adc
popl
adc
fisubs
inc
push
or
adc
push
push
adc
and
inc
sub
call
add
mov
out
ds
push
sarl
divb
lock
pushf
loop
dec
dec
inc
ljmp
dec
pop
mov
xor
mov
outsl
adc
sbb
addr16
push
cmp
popa
insl
jae
or
dec
mov
pop
xor
les
inc
shlb
fstp
cmp
add
pop
movsb
hlt
imul
push
xlat
mov
insb
in
mov
jnp
dec
cmp
jmp
push
fdivs
push
out
or
gs
adcb
push
mov
mov
jnp
add
adc
filds
or
xchg
fsubr
int3
push
push
jne
xorb
in
cltd
add
call
test
cld
or
aam
aaa
xchg
cmp
js
jne
dec
out
inc
or
lods
push
and
sbb
add
lods
adcl
clc
mov
mov
mov
lahf
clc
adc
out
dec
lods
push
popa
nop
mov
push
cmpsl
xchg
inc
cmpb
adc
mov
and
fs
inc
bound
and
sbb
enter
stos
clc
cmp
or
or
leave
lods
adc
xor
cmp
mov
lahf
sbbl
test
push
out
sbb
call
es
mov
mov
not
and
push
push
mov
je
sub
xchg
push
add
add
mov
xchg
sbb
and
pop
mov
jne
cmp
add
or
add
push
push
addr16
add
movsb
add
xorl
aam
or
mov
incl
fldenv
cmpb
movsl
or
inc
mov
data16
fisubrs
jg
orl
cld
dec
aam
sub
jnp
or
aaa
fildll
adc
adc
push
or
cmpb
fwait
add
inc
or
addr16
mov
pop
sti
sahf
hlt
sub
in
movsl
mov
mov
xchg
jbe
popa
loop
sbb
adc
enter
mov
sbb
adc
mov
dec
dec
inc
fcoml
cmp
and
clc
sub
cmp
push
mov
imul
popf
dec
push
adc
movsl
sbb
lock
hlt
shll
jle
xlat
sbb
nop
xchg
add
cld
push
inc
jle
push
enter
das
clc
adc
dec
inc
clc
pop
mov
lock
std
sahf
inc
lods
sbb
sub
adc
sbb
push
pop
insl
andl
dec
in
loope
jbe
sbb
cmp
jo,pt
xchg
movsb
lods
push
sahf
sbb
xor
in
or
fwait
jge
cmp
xchg
cmc
movsl
or
clc
ja
or
inc
push
push
sbb
addl
pop
inc
add
sub
sar
rclb
shr
mov
dec
icebp
sbb
iret
inc
add
loopne
cmp
jmp
clc
push
mov
in
or
cwtl
loop
add
jmp
inc
sub
sti
adc
xchg
nop
jecxz
loope
roll
mov
sbb
out
test
inc
aaa
adc
push
enter
adc
hlt
sbb
mov
push
test
mov
and
and
cli
cltd
neg
aad
pop
movsb
dec
outsb
xor
gs
push
pop
xchg
mov
cltd
add
data16
ljmp
in
add
pushl
jge
sub
call
mov
push
jne
sub
and
pop
sbb
inc
dec
or
dec
lock
addb
in
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
testl
dec
arpl
movsb
imul
in
loopne
xor
int
cmpsb
or
test
cwtl
xchg
sub
outsl
xchg
inc
add
jl
or
mov
adcl
mov
fbld
mov
jne
ret
add
push
mov
inc
lret
shl
and
out
pop
mov
or
pop
pop
fnstenv
rcll
testb
decl
sub
in
in
sub
cs
in
in
adc
adc
in
in
adc
push
pop
in
in
sbb
sbb
in
in
sbb
push
pop
in
in
add
add
in
in
add
push
pop
in
in
or
or
in
in
or
push
jb
repnz
icebp
bnd
jb
hlt
cmc
div
add
out
das
negb
add
push
sbb
adc
or
stc
cmp
cmp
xor
add
out
sahf
hlt
and
sbb
adc
sahf
out
fmull
add
repz
repz
or
hlt
mov
iret
mov
lods
fsubl
pushf
int3
xchg
les
test
iret
je
insb
pushf
fs
cmp
repz
mov
repz
repz
je
insb
iret
repz
xor
sub
and
cmp
repz
dec
adc
or
cmp
xor
xchg
sub
jns
out
hlt
and
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
hlt
mov
repz
in
inc
push
insl
std
sbb
mov
les
add
pop
xchg
push
stc
push
ret
and
sub
inc
xor
xchg
rcll
in
imul
xchg
or
mov
jp
mov
sub
mov
nop
xchg
mov
loope
bound
mov
push
jo
movb
les
and
aam
pop
or
sub
xchg
dec
add
and
mov
mov
into
xchg
outsb
sub
insl
and
mov
or
mov
add
add
call
cmpsl
cltd
add
mov
add
sahf
mov
mov
xchg
mov
and
repnz
xchg
ja
push
inc
adc
rclb
cmp
add
inc
dec
pop
js
enter
je
cmp
jo
repnz
sahf
xchg
push
insb
mov
adc
hlt
xlat
jo
shll
inc
cltd
nop
pushf
hlt
test
stc
in
push
ja
nop
sbb
sbb
mov
leave
int
dec
mov
in
pop
rolb
push
notl
xchg
xor
les
mov
ret
fnsave
pushf
aaa
push
jg
iret
nop
xor
ds
in
add
jae
jb
lock
lock
add
scas
dec
fstl
mov
aas
lahf
add
push
jecxz
in
dec
xlat
jl
inc
push
inc
mov
push
inc
or
arpl
sub
add
jmp
cmp
shrl
inc
inc
xchg
roll
dec
clc
dec
aas
add
les
push
movb
ja
es
mov
psubsw
pop
and
and
ljmp
xchg
fisttps
imul
sbb
sbb
or
inc
push
push
mov
addr16
loope
xchg
or
fldt
cmp
pop
sbbb
dec
push
clc
ret
and
in
push
sbb
lods
add
out
into
scas
lret
hlt
mov
sub
pop
jge
hlt
shr
xchg
adcl
xor
dec
pop
por
cs
inc
sbb
dec
scas
inc
push
lea
push
and
xor
ret
fdivrl
mov
pusha
xchg
mov
hlt
inc
jmp
movsb
pop
push
pop
add
nop
into
aaa
and
mov
sbb
jbe
push
add
inc
sub
inc
mov
cmpl
mov
jns
or
stos
test
sbb
and
movl
xor
or
sub
dec
adc
data16
xchg
test
ret
packsswb
dec
mov
lods
xchg
mov
xchg
sub
sub
add
cwtl
nop
test
dec
ljmp
xchg
sub
jmp
push
cmp
sub
pop
rcr
add
or
sub
jmp
cmp
xor
inc
daa
pop
xchg
xchg
test
pushf
jbe
rol
inc
dec
inc
xchg
es
sbb
mov
pop
jecxz
aam
inc
cmp
push
daa
sbb
ja
inc
push
or
xchg
pop
or
xor
pop
or
gs
add
push
dec
dec
mov
rol
push
and
jae
enter
xor
pushf
or
cmpsb
pop
adc
enter
scas
xchg
scas
dec
repnz
sbb
adc
mov
insb
rcl
push
roll
or
scas
push
or
mov
ja
in
sbb
ds
xor
cmp
push
push
or
push
out
mov
fcmovbe
inc
enter
and
mov
mov
ja
nop
pop
xchg
mov
je
adc
sbb
pop
mov
sub
outsl
mov
or
or
stos
adc
pusha
dec
shll
add
inc
fisubs
es
bound
pop
rorl
push
dec
or
in
das
push
ret
inc
mov
xchg
cmp
mov
les
cmp
inc
xchg
add
or
loopne
push
cmp
inc
pop
scas
xchg
jo
adc
inc
cmp
lahf
cmpsb
push
push
push
and
lods
imul
lock
and
and
push
inc
neg
xor
xor
dec
imul
dec
and
push
add
out
add
outsb
pop
imul
call
imul
insl
inc
mov
pop
js
bound
pop
and
jo
jb
jb
popa
or
mov
popa
dec
es
jae
out
data16
es
imulb
cmp
adc
pop
addr16
jb
fdivp
out
mov
add
mov
arpl
mov
testb
daa
push
jg
jnp
out
into
sub
insb
das
je
insl
sti
fsubp
cmpsl
sbb
and
pop
lock
mov
jge
push
je
jo
jb
sbb
jns
outsl
dec
data16
sbb
das
add
or
imul
pop
push
hlt
sub
mov
pop
ret
pop
xlat
sbb
mov
ret
jl
cmp
add
test
or
jb
loop
add
push
daa
and
daa
xor
jl
or
orb
sti
and
add
shlb
pop
fs
pop
rorl
mov
rorl
cmpb
or
sub
andl
push
insb
push
push
jg
mov
xchg
mov
mov
inc
sbb
jne
pop
or
add
call
fstpl
imul
pushl
push
mov
xor
hlt
addl
into
push
push
pop
mov
mov
xchg
xchg
and
and
je
inc
lcall
pushf
shrb
iret
xchg
rorb
ret
pop
dec
lcall
int3
lods
bound
mov
cmp
add
jge
and
imul
pop
es
jl
jns
sbb
in
xor
cmp
push
orb
add
mov
xor
and
add
mov
or
daa
sbbl
jb
sub
add
outsb
inc
adc
out
push
jmp
sbb
pop
xor
push
sub
mov
sbb
add
or
adc
js
lcall
xor
pop
jb
stos
or
adc
sbb
adc
or
pop
dec
push
adc
push
sahf
pop
lret
inc
decb
add
fbstp
push
pop
pop
or
or
repz
or
or
or
or
cmp
repz
adc
repz
sbb
sbb
imul
push
pop
and
and
and
lock
fcoms
jns
out
leave
cld
iret
repz
or
push
bound
repz
test
iret
repz
or
out
sahf
cmpsl
sbb
sahf
out
sahf
jb
mov
jns
aam
xchg
mov
fdivs
jmp
add
lret
add
push
mov
push
adc
pop
pop
adc
push
xchg
dec
sub
in
lret
sbb
mov
or
pop
push
and
sub
dec
sub
xchg
lret
adc
cmp
adc
mov
sub
sbb
and
sbb
xchg
pop
sbb
sbb
xor
sbb
popa
imul
adcl
mov
and
xchg
inc
sub
push
sbb
push
pop
mov
cmc
push
cmp
clc
test
pop
adc
jnp
ljmp
xchg
jmp
cmp
loopne
cltd
sbb
inc
push
lea
push
mov
js
lock
add
popa
or
pop
push
or
mov
sar
push
adc
push
add
or
andl
pop
cmpl
loopne
je
jns
mov
loope
or
push
imul
rcr
pusha
loopne
dec
pop
or
add
cmp
inc
mov
outsb
xor
stos
push
sub
sbb
ss
nop
out
jnp
bts
adc
movl
sbb
shlb
hlt
mov
adc
into
sbb
lock
not
test
or
js
sub
inc
add
inc
cmp
cmp
dec
inc
xchg
dec
inc
or
inc
dec
jecxz
xchg
push
int
or
mov
hlt
adc
dec
add
inc
sbb
add
addr16
sub
jne
sbb
push
je
push
xchg
mov
lahf
sbb
pusha
sbb
fcomps
dec
ret
mov
or
sbb
jmp
jbe
gs
xor
dec
sub
in
rcrl
or
orl
add
add
das
xchg
sbb
push
adc
inc
leave
push
jb
adc
and
pop
lods
lret
pop
dec
sbb
push
pop
sbb
xchg
stos
lret
negl
xorb
mov
orb
push
jb
jb
push
sbb
inc
leave
pop
and
arpl
xchg
and
inc
nop
and
stc
sub
pop
and
dec
scas
xchg
or
sbb
jb
stc
cmpsb
xchg
stos
in
sub
sub
or
add
pop
push
inc
mov
and
and
xor
in
mov
mov
inc
and
ljmp
test
xorb
insb
and
push
and
or
push
jl
ja
adc
push
nop
or
iret
loopne
sub
jmp
push
mov
cmp
inc
add
and
inc
fldl
inc
push
outsb
sub
add
hlt
mov
mov
mov
mov
inc
xchg
es
mov
push
rolb
dec
popa
bound
inc
in
xor
pop
sub
xchg
jns
xchg
nop
push
and
bswap
in
xchg
and
pushf
push
push
stc
nop
scas
pop
sbb
and
sbb
fsubl
adc
daa
xor
insb
repz
push
rorb
lods
aas
jg
add
in
add
movups
mov
test
enter
dec
pop
or
push
and
pop
daa
outsl
or
add
pusha
and
dec
sbb
xchg
stos
or
inc
scas
sbb
daa
mov
popa
jo
addb
lea
mov
daa
je
cmp
mov
or
push
jbe
dec
fisubrs
loopne
aaa
sub
icebp
inc
pop
outsl
test
and
or
inc
arpl
jo
cs
xchg
mov
xchg
pop
jne
sub
xor
xlat
add
sub
and
fs
or
js
js
pop
jb
das
dec
gs
loop
inc
cs
mov
cs
and
jg
and
add
dec
mov
push
or
insb
or
mov
inc
add
in
pop
lods
test
or
sub
pop
sub
sbb
dec
push
and
pop
leave
sub
in
xchg
dec
pop
inc
or
adc
cmp
inc
insb
push
inc
push
test
push
pop
imulb
pop
stos
pop
push
xorb
add
and
inc
rclb
adc
push
pop
jns
mov
pop
outsb
push
xor
in
cld
pop
fsubr
or
sahf
mov
notb
mov
mov
in
jnp
inc
adc
push
cmp
push
hlt
sbb
lock
push
and
shll
or
gs
pop
and
or
data16
bound
jno
or
sub
mov
aam
ja
sub
pushf
loop
add
sbb
pop
xchg
add
lea
xchg
adc
and
bound
cltd
or
mov
add
xor
inc
mov
into
jl
inc
cld
and
sub
cmovne
jae
push
xchg
mull
cmp
adc
pop
xchg
lods
pop
js
test
or
xchg
xchg
adc
adcb
mov
adc
int
xor
or
push
inc
scas
add
add
adc
add
mov
sub
mov
xchg
stos
sbb
cmp
sub
sbb
adc
xchg
dec
imul
mov
pop
test
dec
insl
gs
inc
insb
adc
popf
pop
or
outsl
and
or
mov
push
jns
dec
popa
js
outsb
addr16
inc
sahf
daa
push
inc
adc
and
dec
mov
imul
or
push
or
jns
xor
add
jae
lods
inc
mov
or
imul
xchg
rclb
dec
pusha
and
adcb
sub
dec
adcl
rclb
aad
xor
movsl
add
cmp
xchg
jae
xchg
cmp
push
sub
lahf
inc
leave
add
pop
and
scas
mov
xor
xor
ss
jns
xchg
mov
fcomp
lret
or
int
cmp
loopne
loopne
shll
and
inc
push
sahf
push
lret
je
call
or
dec
push
jo
cmp
add
push
mov
daa
inc
pusha
xor
pushf
xor
or
out
mov
cwtl
xor
inc
imul
sbbb
mov
pushf
data16
cmp
push
cmp
adcl
sub
in
and
and
and
bound
arpl
shlb
icebp
aaa
lock
sub
xchg
sub
fists
sbb
pushw
adc
or
push
inc
add
or
and
lock
mov
xor
call
and
enter
sbb
inc
enter
or
in
and
add
mov
mov
inc
nop
push
scas
and
mov
push
pop
cmp
xchg
sbb
sbb
sbb
es
push
sbb
sbb
test
loopne
xchg
lods
add
shlb
cmpsb
xchg
or
sub
push
jecxz
inc
scas
and
popa
loopne
or
sbb
mov
movsb
ss
mov
icebp
mov
outsb
pop
sub
inc
mov
xor
jl
inc
shlb
push
xor
add
xchg
sbb
xor
leave
push
jb
xor
xchg
pop
and
leave
push
xor
cmp
xor
and
push
cmp
add
inc
test
dec
inc
inc
pusha
orl
inc
cmpsl
divb
or
inc
pop
mov
inc
push
inc
fists
loop
push
mov
xor
out
mov
bound
repz
inc
mov
out
mov
rorb
nop
push
mov
mov
adc
adc
mov
push
fs
jne
inc
adc
mov
add
and
fidivrs
mov
lret
pop
adc
inc
hlt
data16
add
mov
je
xchg
pop
pushf
aas
cwtl
cmpsb
pushf
push
add
mov
add
adc
fs
dec
or
nop
push
xchg
out
enter
sub
mov
xchg
add
dec
out
inc
sub
stc
xor
inc
pop
inc
sbb
enter
ja
add
push
push
outsb
mov
add
jge
add
jmp
incl
push
cmp
stc
sahf
cmpsl
push
xor
push
pop
pop
roll
pop
sbb
rcr
inc
add
add
inc
adc
jo
add
les
mov
push
bound
push
in
jg
mov
push
add
cmpsl
or
and
pxor
test
cltd
inc
cs
pop
pop
dec
in
mov
dec
mov
jo
sbb
les
insb
adc
daa
add
cmp
or
mov
xchg
sbb
sbb
and
xor
sub
dec
push
pop
shll
or
leave
and
or
and
dec
scas
xchg
and
es
sub
xchg
sub
inc
push
inc
sub
dec
das
xor
and
add
lahf
mov
pop
movsb
adc
pushf
jb
adcl
pop
inc
xchg
jg
mov
sbbb
bound
mov
fcompl
nop
add
ja
add
push
hlt
pop
inc
or
sub
sbb
fisttpl
scas
into
push
test
xor
inc
add
and
rolb
stos
cld
sub
loop
call
daa
xchg
nop
mov
push
xchg
inc
add
mov
lods
outsl
leave
adc
dec
mov
mov
out
movsl
andl
ss
dec
push
adc
leave
pop
sbb
fsts
pop
pop
or
stos
insb
and
rolb
lret
cmpsl
mov
addb
lods
popa
rcrb
and
add
and
lea
je
sub
sbb
mov
mov
sbb
rorb
push
insb
cld
insl
fmull
inc
pop
jmp
imul
cmp
inc
fistl
je
fcomps
in
mov
ret
xchg
fistps
sar
mov
xchg
leave
add
mov
push
push
push
fisttpl
shl
shll
pop
aas
bound
push
test
idiv
pxor
jmp
or
push
repz
mov
jno
cmp
pop
ret
rcrl
push
jo
js
movsb
movsb
add
pushf
jae
int
sub
xchg
mov
popw
lahf
jle
add
vunpckhps
add
mov
dec
push
ss
imul
dec
mov
add
cmp
out
icebp
mov
inc
and
ss
in
pop
out
test
or
pusha
shlb
cwtl
dec
dec
adc
or
rol
cmp
stos
and
and
aas
das
mov
test
push
je
mov
insb
or
call
jne
lea
mov
adc
xchg
fmull
sbb
clc
addb
dec
sub
inc
jmp
pop
lods
inc
push
nop
push
xor
nop
js
popf
je
sub
or
sbb
dec
dec
push
or
xlat
cmpsl
cwtl
inc
mov
movsb
shll
or
arpl
pop
cli
rolb
cld
cld
pop
and
xor
sub
dec
inc
nop
push
sub
gs
add
xchg
jae
mov
insb
imul
pusha
add
xor
jl
xor
add
pop
daa
push
xor
decl
aam
test
inc
mov
dec
cltd
push
add
xchg
inc
pop
adc
jo
or
enter
xor
mov
enter
mov
sub
adc
or
pop
addb
push
insb
mov
mov
or
dec
sub
jo
mov
es
jne
andl
xor
lods
movl
inc
jle
push
test
test
aad
push
inc
cmp
and
scas
jnp
inc
movl
xor
adc
addl
adc
adc
and
arpl
xchg
mov
xchg
loopne
movsb
stc
lock
sub
cwtl
dec
add
aad
xorb
adc
inc
aam
aam
cmpsl
and
cmp
xor
lock
xor
out
iret
inc
daa
insb
or
mov
xchg
in
push
insb
outsb
pop
fdivr
ljmp
mov
addl
adc
cwtl
pop
add
test
sbb
sbb
sub
cmp
add
push
xchg
out
stos
push
mov
rcrb
and
sbb
mov
adc
sarl
push
mov
faddl
sbb
and
xchg
adc
inc
inc
leave
jno
rorb
and
mov
sub
testb
insb
push
push
ret
inc
pop
fwait
dec
ljmp
shrl
inc
dec
loopne
add
or
lret
adc
lcall
outsb
sub
and
insb
js
push
daa
cmp
add
jle
adc
testb
add
neg
xor
push
mov
sub
imul
cmp
pop
int
testl
fcoml
push
stc
xchg
inc
fcoml
jae
stc
mov
inc
mov
cmp
and
outsl
cmp
mov
pop
pop
arpl
adc
sbbl
rclb
cmp
push
jne
xchg
push
rcl
jb
jge
push
mov
fxch
or
nop
dec
les
cmpl
andb
dec
pop
inc
loopne
jnp
mov
mov
sub
adc
test
sbb
fstpl
mov
sub
sbb
push
dec
je
dec
fsubrs
les
inc
inc
add
gs
jp
js
add
orb
mov
xchg
pop
js
mov
mov
out
push
xor
push
testb
fimuls
add
adc
mov
jmp
test
in
and
test
push
dec
or
lds
pop
or
btc
lods
cmp
cmp
add
mov
xor
lahf
adc
insb
enter
adc
call
pop
outsl
idivl
mov
xor
and
rol
pop
mov
sti
sbb
pop
adc
adc
movsb
sbb
cmpsl
arpl
arpl
mov
in
pop
xchg
cltd
addr16
push
push
mov
out
push
or
push
and
xchg
jge
repnz
mov
sub
or
cli
popf
dec
mov
and
mov
jg
sahf
push
out
sub
setnp
iret
and
lods
into
push
xchg
and
mov
mov
push
adc
mov
loopne
fcomps
xchg
sub
sbb
scas
shlb
insl
gs
mov
sti
pop
push
sub
push
idivb
pop
inc
xor
mov
push
pop
mov
and
rclb
pop
push
sub
daa
add
test
popf
add
pop
and
clc
push
inc
add
clc
jg
dec
lock
mov
or
sbb
lods
test
inc
loopne
xor
pop
cli
xor
imul
dec
int3
pop
add
adc
xchg
lods
pop
cld
inc
pop
cld
les
adc
pop
lret
pop
sub
cld
sub
jno
mov
loope
das
mov
mov
dec
or
scas
mov
add
and
inc
cs
daa
es
mov
out
inc
push
inc
sbb
and
adc
pusha
or
cli
clc
dec
dec
inc
inc
dec
push
pop
xor
adc
jg
movsl
jecxz
inc
lea
inc
add
or
cld
mov
xchg
dec
jns
pop
aam
jmp
bound
andl
jmp
rcr
mov
pop
inc
rorb
adc
pop
mov
inc
adc
daa
mov
xchg
pop
add
jecxz
sub
fmull
mov
jl
inc
or
lret
sbb
adc
and
mov
aaa
add
dec
dec
sbb
ret
incl
mov
mov
xor
push
fnstcw
pop
pop
iret
cld
in
inc
sub
mov
dec
js
xor
clc
add
jo
xor
dec
add
roll
mov
mov
mov
sbb
bound
and
mov
push
fildll
addr16
push
popa
ss
or
add
nop
clc
add
mov
sbb
xchg
test
jae
pop
faddp
add
sti
add
cmp
fs
ret
cmp
sbb
repz
sbb
mov
add
call
push
pop
adc
inc
sbb
mov
popa
jo
notl
add
shll
or
test
rcrb
hlt
xchg
add
imul
test
xor
lcall
inc
testb
cmp
push
or
rorl
jp
add
insb
mov
add
arpl
cmp
cmpsl
adcb
in
or
pop
sbb
cmp
pusha
cmovns
fldt
adc
orl
mov
pop
sub
and
cmp
mov
mov
dec
push
mov
cmp
rorl
fists
test
jnp
test
adc
lcall
inc
movl
adc
faddl
je
dec
and
aaa
shll
out
xchg
add
into
mov
cmp
add
loopne
and
fwait
js
ja
inc
or
fbld
clc
inc
inc
or
mov
loope
les
sahf
dec
clc
bound
mov
dec
pusha
les
imul
pop
cmp
sti
test
mov
fcoms
fwait
xchg
push
push
mov
adc
or
mov
xchg
cmp
ss
out
inc
jo
dec
and
add
cmovg
inc
add
inc
cmp
mov
add
jge
xor
jo
cmp
push
adc
push
xlat
sbb
mov
outsb
and
cmp
mov
xor
sub
adc
jge
das
mov
sbb
ficoms
cmp
aaa
testl
nop
filds
dec
popf
int
imul
roll
js
jg
jl
lret
xchg
pushf
sbb
mov
and
add
and
sub
dec
xchg
mov
andl
aam
inc
in
test
sub
adc
test
mov
bound
les
movsl
mov
lods
cmp
xor
or
inc
push
stc
ret
pop
pop
loopne
call
movb
aas
enter
dec
inc
dec
shlb
pop
xchg
mov
add
in
out
jnp
lock
add
push
mov
rorb
add
loop
loope
test
xchg
dec
icebp
nop
je
ja
dec
mov
sbb
cld
add
or
or
inc
and
aas
inc
add
push
xlat
xorl
jb
pop
testb
inc
sbb
and
out
push
adc
addb
dec
dec
lds
mov
mov
mov
nop
cmp
cmp
mov
add
sbb
test
sbb
lea
movzwl
inc
push
leave
cmp
outsb
ljmp
sub
ficompl
inc
mov
mov
dec
inc
or
pushf
add
mov
mov
inc
gs
and
xor
inc
xchg
dec
pushf
mov
mov
sbb
xchg
es
cmpb
in
dec
or
andl
cmp
mov
and
mov
repz
sbb
and
push
idivb
or
movb
mov
loop
push
xor
faddl
stos
popl
add
xchg
fwait
lds
movsb
enter
mov
pop
pop
cmp
adcl
mov
ja
orb
repnz
add
out
inc
shll
xchg
ljmp
adc
jmp
mov
inc
test
nop
clc
inc
jne
movb
or
xor
iret
adc
adc
mov
push
lcall
roll
imul
aas
inc
scas
insl
mov
pop
scas
pop
jg
push
pop
sub
or
mov
dec
jb
inc
mov
xor
mov
pop
or
fsubrs
andb
push
adc
mov
and
leave
cld
dec
sub
add
pop
adc
push
pop
pop
or
xchg
call
imull
sub
mov
inc
or
or
inc
decl
jge
jecxz
xlat
or
ja
mov
pop
orl
fiadds
or
push
loopne
bound
pop
mov
mov
dec
arpl
mov
mov
xor
movsl
mov
or
outsl
xchg
movsb
add
or
loop
sbb
sbb
add
cmp
je
mov
xlat
inc
dec
push
or
mov
push
mov
sbb
mov
cmp
push
gs
mov
mov
das
add
pushf
or
sub
push
push
push
dec
dec
xlat
cmc
aaa
lsl
dec
mov
add
xchg
es
rcr
test
xor
or
loope
adc
sbb
or
fucom
xor
pop
cmp
cmp
jne
sbb
xor
fs
sub
jne
cmpsl
sub
add
or
in
imul
or
or
xor
and
pop
jmp
inc
add
insl
jp
cli
pop
shlb
je
cli
js
xor
add
xchg
sbb
sub
insb
add
fnstcw
add
jae
in
pop
fsubl
sub
and
xchg
xchg
xchg
inc
add
inc
add
inc
sub
pop
lea
roll
and
push
mov
xor
pop
and
pop
push
dec
add
outsb
daa
ret
jae
push
lcall
sbb
add
sub
jns
mov
cld
sub
jb
cwtl
insl
cld
stos
dec
fadds
clc
xchg
pop
loopne
pushf
insl
adc
data16
arpl
daa
inc
gs
pusha
inc
fxch
xchg
xchg
pop
shlb
js
mov
dec
cmovl
xor
xchg
jb
loopne
int
adc
daa
push
xor
insl
fnstsw
iret
repz
in
cmc
std
add
imul
repz
add
mov
lock
cmp
and
aaa
inc
outsb
scas
nop
fs
push
subb
adc
add
es
mov
test
pop
mov
push
push
dec
or
add
test
add
dec
cmc
fcmovbe
add
inc
adc
or
sbb
and
jae
test
push
cmpl
dec
jbe
xor
mov
clc
push
mov
sbb
or
sbbb
sub
pop
daa
outsl
lock
push
or
outsb
sbb
movq
add
adc
cmp
or
mov
test
mov
or
jo
nop
mov
xor
mov
mov
nop
inc
push
cmc
mov
addl
cmp
or
lds
loope
cmp
jl
pop
add
or
xor
rcrl
mov
cmp
adc
divl
ret
push
inc
and
add
pop
xchg
jbe
pop
inc
mov
or
push
mov
cmp
arpl
mov
push
or
mov
fstl
das
popf
dec
or
pop
arpl
jb
sub
and
xor
fisttpl
sub
cmp
adc
in
in
and
sbb
call
orb
ret
pop
fs
adc
clc
outsb
mov
or
test
mov
adc
dec
shl
sub
clc
lods
xorb
call
xor
jecxz
mov
dec
inc
sub
sub
and
sub
push
pop
dec
gs
sbb
cmp
sub
sub
and
xor
sub
retw
pop
rol
movb
cmp
sbbl
push
call
mov
jmp
jae
add
inc
xlat
adc
or
xor
inc
addb
and
add
adc
mov
loop
or
cld
jmp
mov
enter
imul
push
cld
incb
add
pop
push
pop
fldl
stc
add
lock
dec
jne
adc
test
jo
inc
call
sbb
add
jne
sbb
push
or
add
and
xchg
stos
cmc
call
test
and
aaa
and
jo
aaa
imul
push
sbb
cmp
bound
and
jge
adc
cmp
ja
rcrl
cmp
or
repz
and
add
jge
decl
je
or
je
xor
fcompl
loopne
stos
test
fdivrp
dec
es
jnp
sbb
popf
mov
push
xor
inc
lock
fs
mov
loope
sub
sub
repz
inc
and
fcmovnu
repz
jp
fildl
push
ja
adc
jg
sub
sub
cmovb
xlat
xchg
pop
enter
and
jecxz
in
cwtl
inc
mov
add
mov
xchg
mov
dec
pop
jb
sti
dec
inc
dec
push
add
mov
mov
add
lret
dec
cld
and
xor
aaa
loopne
or
or
add
jmp
rcrl
enter
mov
js
push
nop
inc
jp
mov
nop
inc
fsubrl
cmp
jne
sub
ret
jne,pt
mov
insl
jbe
insb
loope
nop
rclb
pop
cmp
pop
or
imul
mov
inc
sub
cmp
lock
inc
pop
mov
mov
fdivl
aaa
mov
lods
int3
pop
mov
les
fmull
imul
push
sbb
in
test
in
dec
mov
fdivl
leave
dec
xor
outsb
sub
adc
movsl
test
cmp
ret
test
movsl
in
xor
jns
sbb
mov
adc
pop
loopne
mov
add
mov
jb
inc
and
pop
pop
jp
in
xchg
pusha
jne
mov
mov
clc
sbb
inc
add
and
and
ud1
gs
out
mov
subb
jae
lods
push
cwtl
loopne
jno
insb
jns
shlb
dec
aaa
loop
add
mov
add
outsb
sbb
push
addl
nop
in
pop
push
add
sti
add
or
mov
mov
mov
clc
jp
insb
add
add
popa
loope
or
sub
insb
push
out
test
outsb
adc
test
fisttpll
mov
mov
inc
add
aas
leave
add
mov
inc
sub
ss
push
mov
jnp
push
mov
nop
or
dec
sbb
mov
and
ret
aaa
mov
incl
adc
ds
jl
push
jb
push
jl
and
push
pop
or
jnp
add
push
hlt
gs
push
sbb
rcr
fiadds
cmp
add
test
or
add
adc
fnstcw
movsb
xor
adc
daa
jns
push
pop
sarb
and
cmp
pusha
jle
leave
push
subl
out
mov
or
sbb
push
push
int3
rcl
sbb
push
loopne
cmpsl
pop
mov
je
pop
sub
sbb
inc
enter
rcrb
xchg
push
sbbl
and
mov
addr16
scas
or
mov
inc
add
mov
sbb
movl
sub
cltd
fwait
dec
pop
dec
aaa
and
mov
rcrb
les
xchg
mov
xchg
inc
and
jns
enter
mov
adc
inc
das
enter
mov
add
add
test
mov
insl
bound
pop
pop
insl
bound
jg
push
dec
add
inc
scas
gs
fwait
add
andb
outsb
jne
insl
outsb
ljmp
or
jmp
popl
jbe
or
fs
insb
xchg
nop
xchg
pop
loopne
gs
xorl
sbb
push
imul
imul
jmp
mov
jle
or
push
dec
dec
fdivrl
mulb
lods
or
add
popa
in
popa
imul
mov
adc
fldz
in
sbb
pop
or
and
add
add
and
mov
add
popl
addb
inc
xor
outsl
nop
out
and
adc
dec
movl
adc
mov
sub
sub
add
mov
pop
je
inc
loop
mov
or
push
or
dec
out
push
lea
add
cltd
in
add
adc
xchg
mov
dec
add
or
or
mov
add
push
push
jmp
lods
dec
adc
test
pop
icebp
adc
sbb
or
xor
adcl
gs
dec
sub
mov
testl
enter
pop
sahf
sub
int3
mov
negb
fildl
iret
mov
add
inc
xchg
and
mov
insl
mov
paddsb
sub
add
pop
xlat
roll
xchg
mov
or
repz
hlt
mov
pop
adc
clc
loopne
pop
lock
je
psubq
lret
popa
nop
cs
into
aam
cmpsl
shufps
inc
jp
pop
daa
pop
popf
sbb
xchg
hlt
dec
loop
push
outsl
pop
and
mov
popa
jb
gs
ret
xchg
enter
pop
pop
jo
inc
pop
push
movsb
or
sbb
stos
jae
divl
sbbb
orb
jmp
dec
mov
gs
shlb
add
add
in
cs
faddl
mov
lgdtl
sub
add
addb
or
jnp
mov
bound
arpl
add
jmp
mov
jo
test
sub
stc
add
addr16
das
sbb
or
test
push
push
jno
fnstenv
and
inc
imul
add
inc
jl
push
push
imul
roll
scas
out
push
out
xchg
or
jb
js
clc
dec
repz
mov
push
push
scas
xchg
pop
imul
sbb
wrmsr
sbb
cmpsl
sub
cmp
mov
push
sbb
dec
das
push
jo
test
push
mov
repz
push
dec
lahf
jo
and
push
mov
pop
test
fidivl
out
notb
int3
lea
cli
mov
adc
xchg
inc
fdivrl
adc
inc
out
and
ja
andps
jg
adc
dec
mov
add
push
add
add
add
pop
add
mov
imulb
mov
mov
mov
mov
mov
mov
pop
sbb
incb
cmp
mov
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
ljmp
cmpsb
fdivr
ficompl
call
call
call
call
call
mov
call
call
dec
cli
into
dec
dec
inc
inc
ljmp
leave
scas
mov
lret
and
jbe
push
lock
mov
push
mov
out
adc
push
push
jns
iret
rep
in
pushf
jmp
pop
in
ljmp
out
in
push
icebp
push
sub
push
dec
pusha
ss
cmp
imul
es
lock
mov
cmpsl
ja
rcr
xlat
push
movsb
repnz
cmp
fs
sub
je
or
push
call
fldcw
in
loopne
cwtl
shl
int3
mov
out
sub
xor
cs
lcall
push
hlt
rorb
sti
fidivrs
aam
cs
push
call
sbb
pop
sbb
fwait
orb
add
inc
out
lea
inc
sbb
inc
cwtl
add
cmp
add
mov
dec
in
orb
rcrl
enter
js
adc
add
mov
aas
incl
inc
pop
test
fcoml
in
dec
or
std
or
fiaddl
subb
adcl
repnz
ffreep
nop
pop
dec
insb
jmp
or
jmp
ds
fdivrs
or
repnz
xchg
xchg
cs
addr16
add
pop
cld
jle
cld
sahf
sbb
dec
insl
or
or
adc
adc
pop
adc
popa
pop
dec
and
push
or
xchg
inc
add
adc
inc
lds
inc
cmove
cmp
pop
jb
push
dec
popa
je
xchg
inc
push
push
addr16
lcall
mov
jg
push
pushf
nop
push
nop
mov
cmpsl
aaa
jno
ret
mov
outsb
add
mov
popa
iret
sarw
mov
bound
or
xchg
mov
adc
jb
aaa
xchg
add
xchg
push
xchg
iret
dec
mov
inc
bound
in
nop
xchg
bound
xchg
or
rcrb
xor
xor
pop
xchg
dec
imul
in
or
imul
or
rorb
ja
mov
add
popa
mov
push
nop
leave
mov
out
popa
jns
sbb
jo
fwait
divb
fisttps
outsb
cmp
pop
stos
lods
out
sbb
add
repz
and
js
inc
aas
add
xchg
adc
aaa
lldt
add
add
int
add
rolb
push
ss
push
popa
pop
stos
xor
addb
add
sub
adc
das
loopne
mov
adcl
test
adc
sbb
sbb
cmp
push
add
aaa
mov
ret
lods
mov
mov
outsb
mov
adc
dec
call
and
pop
les
mov
mov
mov
mov
clc
incl
xor
cmp
sbb
lcall
or
push
inc
inc
inc
decl
mov
into
std
mov
and
mov
jmp
dec
sub
mov
mov
mov
mov
jl
cmpsl
stc
mov
or
push
cld
and
jo
out
sahf
nop
mov
clc
sbb
inc
frstor
sbb
or
pop
fwait
out
mov
dec
and
and
daa
loop
repz
in
and
jbe
imul
je
push
pop
inc
jle
push
xor
dec
repz
push
pusha
and
out
pop
add
jbe
cmpsb
push
push
jo
sbb
sub
out
mov
sub
mov
iret
mov
mov
test
adc
lahf
idivl
pushf
movsb
les
imul
das
add
out
and
and
push
push
clc
xor
pop
jns
data16
push
int3
pop
cwtl
or
lahf
mov
jp
or
shlb
cmp
mov
imul
and
cmp
sbb
push
add
inc
out
loop
decl
in
cmp
into
inc
pop
and
mov
push
mov
or
adc
pop
rcrb
xor
fisubs
or
dec
dec
inc
pop
aad
cmp
into
sub
add
xchg
sbb
pop
sub
aas
pop
cmp
scas
xor
sbb
pop
push
dec
fadds
loopne
cwtl
cmpsl
add
inc
adc
mov
cmp
xchg
xor
loopne
movsb
adc
data16
push
push
insl
popa
xor
dec
lahf
sbb
sub
loopne
rolb
daa
nop
cwtl
mov
cltd
shll
jo
mov
sbb
pushf
addb
dec
mov
dec
test
pop
call
fs
adc
dec
xchg
cmp
mov
add
mov
mov
in
push
dec
pop
lret
stos
das
sbb
pushf
cltd
inc
rorl
imul
mov
test
fistps
mov
add
add
cmp
mov
mov
or
or
and
xor
adc
outsl
xor
add
sbb
arpl
enter
pusha
mov
xchg
cmpsb
sahf
push
test
out
sahf
sbb
sub
ds
jl
out
pop
gs
mov
in
inc
mov
je
cmp
lahf
push
ffree
mov
in
imul
andb
pop
cmp
lods
insb
jno
inc
js
ss
pop
subb
push
or
loopne
movsb
sahf
fcompl
fcompl
das
aad
push
cmp
sbb
pop
lds
jmp
pushf
push
add
daa
push
jg
pop
sbbl
fcmovb
or
nop
lcall
mov
jo
sbb
adc
cmp
push
push
and
rcrb
sbb
pop
lea
add
jb
mov
test
scas
test
inc
ret
fadd
add
int3
es
dec
rcll
sub
cs
nop
sbb
div
sbb
cmp
jp
pop
mov
xchg
pop
lea
inc
xor
nop
imul
sti
xor
sub
sub
cmp
adc
in
mov
jmp
aad
lods
jno
je
js
pop
sbb
scas
sbb
adc
push
push
inc
push
or
nop
or
inc
xchg
pop
daa
rcrb
in
sbb
pop
dec
inc
gs
insl
add
add
or
mov
push
xchg
daa
push
cmp
in
dec
dec
push
push
inc
push
inc
fmull
pop
push
or
add
or
mov
inc
insb
popa
clts
sbb
add
xchg
dec
pop
mov
daa
dec
push
jo
inc
es
imul
mov
pop
xchg
mov
movl
repnz
push
rorb
stos
add
jo
pop
sub
sbb
imul
mov
daa
enter
or
add
pop
test
add
lahf
cli
mov
mov
jecxz
adc
jmp
push
adc
cwtl
sbb
ror
jl
test
push
push
in
shlb
xchg
jmp
jle
inc
inc
add
push
add
mov
adc
jp
and
mov
out
pop
out
sub
inc
mov
psubsb
int
and
sbb
ss
mov
inc
je
maxps
sub
add
cmp
mov
xor
mov
das
inc
aam
or
or
movsl
orb
sub
add
push
or
add
imul
add
adc
push
scas
popf
mov
dec
imul
add
xchg
cli
sub
bound
lock
and
push
clc
adc
jno
mov
movsb
add
sbb
inc
movsb
jle
cmp
sub
xor
dec
jne
xor
mov
cmp
cmp
in
aad
es
es
dec
and
or
push
push
dec
sub
add
sub
push
push
out
imul
or
lcall
sbb
and
cmpsb
imul
dec
cld
andl
xchg
mov
mov
xchg
mov
out
iret
ret
arpl
js
jb
shl
push
inc
sbb
sub
cmpsl
mov
mov
sar
mov
sbb
add
sbb
mov
mov
push
xchg
sub
mov
mov
add
aam
mov
fisttps
pop
enter
imul
mov
add
adc
sahf
adc
mov
inc
cmp
dec
sub
adc
inc
sbb
or
sbb
lcall
data16
scas
add
pop
sub
pop
pop
mov
loopne
in
add
jmp
or
incl
and
ss
sub
mov
add
sub
or
pop
lods
rol
and
test
adc
setno
insb
pop
xor
cltd
inc
ret
push
jl
jg
mov
mov
mov
pop
adc
add
fdivrs
aam
cs
dec
fcomip
mov
shlb
xchg
and
pop
add
sub
aad
es
lea
mov
dec
jp
dec
outsl
sbb
dec
jae
lock
xor
or
shrb
in
das
ja
cld
cmpsl
daa
inc
add
inc
mov
inc
jge
or
loopne
dec
jge
xor
nop
dec
mov
sub
and
jge
std
mov
aaa
push
push
mov
xchg
fdivs
push
insb
insb
push
xchg
out
pop
jnp,pn
movsl
pop
push
pop
pop
mov
inc
inc
mov
mov
addr16
and
in
jl
lods
push
pop
enter
ret
cmp
movsb
xchg
add
ror
test
add
add
clc
pop
xchg
sub
or
mov
dec
push
sub
pop
shlb
ffreep
ljmp
popf
dec
inc
sub
add
neg
xchg
inc
push
movb
inc
cmp
pop
aaa
push
ja
jae
xor
aaa
daa
fisubrl
arpl
mov
xchg
dec
xchg
clc
push
and
mov
inc
and
test
mov
add
push
cmc
divb
mov
sarl
jb
and
pushl
add
adc
xor
test
test
dec
repnz
lret
cmp
mov
les
ficoml
xlat
push
ljmp
adc
in
ret
pusha
call
mov
clc
in
sti
sub
xor
pop
sub
or
jecxz
pop
dec
add
sub
push
jnp
repz
fdivrl
cmp
inc
imul
shrb
pop
movsl
ret
cmp
mov
dec
shrb
mov
inc
subb
test
xor
fsubrl
cmpsl
jae
js
addb
add
xorl
push
arpl
mov
xchg
repz
aaa
testl
js
sarb
aaa
adc
in
sub
add
mov
addb
insb
cmp
je
dec
mov
sarb
test
cmp
adc
in
add
lods
loopne
in
lea
orl
ret
je
jge
div
lea
or
push
push
ja
scas
cmpl
push
inc
xchg
fs
sub
add
into
mov
iret
xor
addl
addr16
scas
adc
outsl
fldl
pminsw
mov
scas
movsl
sub
xchg
jg
inc
rol
sti
push
cmpb
jge
xchg
jae
and
cmpsb
loopne
jno
push
negb
pop
lock
pusha
hlt
lahf
sbb
push
adc
dec
jle
inc
push
stos
vpshuflw
sub
ret
dec
push
jmp
jl
add
fdivrs
xorl
in
mov
test
or
addb
add
push
jmp
or
sbbl
jl
jl
and
call
and
cmp
je
popf
push
jno
pop
inc
push
cmp
fildl
mov
and
cmp
rcr
cmp
and
and
push
inc
xor
sbb
sti
pusha
or
pop
in
sbb
hlt
testl
jbe
push
sbb
mov
mov
call
das
mov
push
sbb
dec
aaa
and
sti
dec
push
push
sbb
cmp
ss
xchg
xchg
inc
add
in
or
jae
push
inc
ret
andb
popa
cmove
mov
or
nop
fucomp
out
lock
leave
sub
inc
push
sahf
test
sub
xchg
test
add
sbb
xchg
cmp
inc
push
lods
or
rolb
push
pop
fisubrl
and
cmpsl
rcr
xor
sbb
pop
push
xchg
push
pop
or
mov
popa
lcall
data16
jl
mov
pop
jae
mov
adc
pop
adc
xchg
popa
aaa
call
cmp
push
aam
pusha
test
push
push
jo
or
or
sub
fwait
sub
rcl
repz
pop
std
jno
or
mov
lock
sub
dec
jge
mov
jbe
inc
add
insb
mov
sub
or
lcall
icebp
mov
adcl
mov
xor
cmpb
movb
fnstcw
mov
xchg
add
xor
sti
movsb
imul
pop
add
dec
jmp
inc
in
or
jl
out
cmp
xchg
sub
adc
add
add
les
inc
pop
sub
and
es
sub
sub
add
mov
push
repz
adc
add
push
rorl
and
push
pusha
mov
and
std
enter
sbb
cmp
mov
xor
push
cmpsl
inc
jmp
fldenv
ss
sti
inc
enter
inc
cmp
mov
imul
inc
pop
xchg
pusha
das
js
or
push
cltd
test
ja
xadd
sbb
push
push
push
cmp
out
pop
nop
pushf
jl
xor
mov
pop
ficoms
push
fdivs
mov
and
push
fstpt
popf
ret
dec
out
xor
jle
push
pop
lret
mov
fadds
aad
xor
les
in
fdivrl
ret
dec
sbb
out
shlb
inc
adc
flds
pop
inc
push
ja
or
pop
aam
inc
adc
ljmp
imul
orl
out
jne
rcll
lea
js
or
stc
adc
jp
push
or
xchg
cmp
fistpl
dec
es
cs
add
push
stc
fstpl
fwait
jmp
sub
add
out
and
lcall
lods
fnstenv
sub
imul
push
push
insl
push
sbb
jns
sub
pusha
push
add
adc
sbb
jl
fistpl
or
ljmp
cltd
xchg
inc
pop
incl
loopne
cmpsl
insb
push
arpl
xor
xchg
loopne
arpl
inc
inc
loopne
insb
andl
addr16
inc
stos
dec
cmp
sbb
mov
dec
sbb
lret
mov
cs
dec
negb
popf
add
xchg
xchg
fbld
lea
xchg
adc
jo
and
adc
xchg
enter
inc
push
aaa
imul
xor
iret
xor
mov
jmp
dec
pop
add
lret
negl
loopne
mov
sbb
call
push
dec
sub
fdivrs
mov
add
pop
jno
dec
ja
xor
push
sbb
add
and
es
lahf
loopne
push
inc
popa
leave
xor
xor
lods
adc
mov
xor
xchg
add
push
push
jne
ss
sahf
test
sbb
dec
mov
pop
sub
dec
js
adc
stos
pushf
jecxz
add
xor
mov
fistpll
sub
lahf
mov
fcmovnb
inc
incb
or
add
sbb
cmpsl
sub
mov
cmpsb
std
inc
jle
out
movb
adc
or
stos
sbbb
cltd
push
lahf
xchg
xorl
movsb
xchg
cmpsb
mov
or
inc
insb
cmc
sub
in
nop
inc
sub
mov
sub
xchg
testb
cli
jmp
inc
mov
loop
adc
xchg
test
xor
xchg
sbb
movsl
adc
mov
insl
xor
arpl
fidivl
je
test
pop
outsb
cmpsb
adc
mov
rolb
pop
loope
xor
mov
jecxz
push
std
inc
jmp
icebp
or
rolb
add
jl
cmp
outsb
lock
pusha
or
add
sbb
sbb
adc
imul
cwtl
cmp
cld
push
adc
and
adc
das
cmp
xor
lret
and
mov
adc
cli
jl
push
and
mov
addl
xor
adc
mov
in
mov
mov
xor
dec
mov
insb
dec
jge
daa
movsb
add
nop
mov
adc
pushf
jle
or
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
or
sti
lock
jmp
enter
lcall
add
cmp
xor
movsb
xchg
into
cmp
jge
add
pop
sub
cli
pusha
add
add
push
push
adcb
xchg
je
jge
arpl
pop
ret
or
leave
les
sub
push
add
iret
and
leave
clc
iret
insb
loopne
jne
cld
frstor
mov
aas
jnp
mov
lcall
out
inc
sub
enter
cs
cmc
mov
push
lahf
dec
daa
cmp
push
pop
lods
repz
cmp
fwait
mov
insl
hlt
imul
add
rcll
lods
sbb
cltd
xor
pop
dec
mov
and
outsb
mov
dec
sbb
mov
jnp
add
cmpsw
insb
pop
lea
pop
iret
mov
sub
sub
shll
inc
push
inc
jge
mov
push
pop
push
clts
mov
xchg
test
xchg
andb
or
roll
xchg
lcall
xor
sbb
or
mov
sub
mul
je
mov
ja
daa
add
les
les
or
andl
xchg
push
aas
aam
add
fnstenv
andb
rcrl
or
or
je
xor
pop
or
and
inc
dec
add
inc
sub
push
dec
in
in
mov
jmp
cmp
je
mov
test
jbe
push
adc
insl
int3
jae
pushf
jge
cmp
push
or
dec
sub
adc
pop
je
je
mov
pusha
jbe
cmp
cmp
xchg
pop
je
cmp
daa
mov
nop
or
pop
jp
orb
fadds
dec
cmp
cmpsb
mov
in
mov
mov
add
dec
jbe
sbb
test
loopne
xlat
push
jl
cli
ljmp
sbb
icebp
pop
xchg
xchg
push
and
push
aas
jmp
adc
mov
adc
mov
mov
pusha
push
cmp
sub
mov
xchg
cmpsb
pushf
sub
sub
ja
jl
and
hlt
sub
mov
mov
jno
and
fs
add
clc
add
out
mov
lcall
sbb
add
mov
iret
mov
mov
insb
and
aam
add
sbb
sbb
sbb
ja
jmp
and
cmp
out
stc
mov
scas
add
adc
mov
or
xchg
inc
mov
lcall
sbb
mov
push
xor
sbb
cltd
mov
ja
sbb
cmp
push
out
add
push
cmpsl
xchg
and
xchg
data16
out
inc
and
mov
and
dec
mov
or
push
je
sbb
xchg
jne
cmp
ret
mov
push
add
stc
pop
mov
cmp
xor
cmpsb
fdivs
jl
push
aaa
aas
or
mov
test
xlat
add
movsb
scas
enter
lret
mov
adc
pop
push
push
out
xor
jae
mov
movb
inc
daa
addb
stos
mov
dec
je
sbb
movl
xchg
movb
push
pop
pop
idivb
int
sbbl
add
mov
lret
hlt
jmp
shlb
ds
add
lods
add
aad
pop
sbb
or
add
xchg
aas
dec
cmp
in
sub
mov
cmpsl
push
ret
nop
mov
push
push
xchg
dec
sti
sub
xor
add
fcmovbe
sbb
fs
pop
push
push
mov
testl
jbe
out
daa
addr16
ret
jae
and
cmp
xor
dec
inc
xor
push
sbb
fstpt
mov
push
jae
dec
push
insl
and
test
xlat
jo
inc
lea
fwait
dec
sub
sbb
jne
sarb
ss
dec
pop
loop
rorb
js
dec
lds
dec
dec
insb
imul
movups
fdivrs
xor
or
push
pop
push
add
add
fcomps
ret
push
sbb
andl
outsl
bnd
orl
adc
aam
push
fldcw
mov
repz
and
mov
inc
or
in
in
inc
xchg
loop
push
cmp
add
cwtl
loope
in
notl
or
pop
push
mov
pop
fsub
xor
enter
lret
cmp
xorl
rorl
xchg
push
ret
fldl
sbb
xchg
clc
or
xchg
pop
mov
dec
push
mov
sub
aaa
xlat
fisttpl
sub
push
arpl
cmp
int
out
loope
or
nop
or
adc
and
cmpsl
lcall
cli
push
jmp
jle
jne
mov
aas
pop
and
clc
jne
sub
add
mov
test
and
inc
loopne
clc
xor
or
jo
fadds
push
je
adc
mov
les
push
out
dec
fnstsw
shr
std
sub
ret
jne
sub
popa
pop
mov
and
ss
cs
inc
dec
push
push
dec
pop
push
inc
and
push
or
ret
or
cmp
icebp
leave
xchg
xor
sbb
add
scas
jb
inc
jbe
rol
lock
jne
cmp
aam
mov
xchg
lock
push
push
ret
mov
xchg
jns
inc
mov
mov
jle
gs
inc
add
add
pusha
or
addr16
and
iret
dec
or
jle
pusha
out
push
and
test
inc
test
mov
pop
popa
mov
cmp
jg
call
sete
data16
add
sahf
push
mov
dec
mov
push
adc
es
adc
dec
add
rol
sub
dec
mov
in
daa
inc
adc
rcll
test
xor
sbb
adc
cmp
add
xchg
jg
lahf
and
int3
jmp
inc
xor
or
pop
mov
dec
and
push
sbb
inc
dec
das
subl
decl
rolb
sub
mov
roll
mov
lret
inc
dec
stos
insl
outsl
roll
dec
dec
push
xchg
dec
pushf
or
mov
xchg
push
inc
or
mov
lods
mov
cmp
imul
imul
cmp
fs
in
mov
test
push
call
dec
add
adc
bound
je
mov
cmp
cli
clc
dec
and
mov
mov
mov
lds
push
cmpsl
push
popa
nop
inc
lcall
add
mov
dec
or
adc
mov
pusha
xor
cmpsb
mov
insl
test
or
rcrb
or
add
imull
rolb
test
xchg
loop
jnp
scas
xor
cmp
dec
lret
mov
dec
add
add
mov
sbb
dec
fsubs
out
cli
push
mov
ljmp
inc
xor
int
mov
lahf
cmp
or
xchg
push
xchg
lea
ret
xchg
add
push
mov
lods
dec
idivl
fldt
add
or
jge
aam
mov
cltd
fiaddl
jns
pusha
and
and
hlt
pop
lret
cmp
aam
mov
incl
add
sub
pop
sbb
push
gs
fiadds
push
and
inc
sbb
xor
pop
fiadds
mov
inc
xchg
flds
lcall
nop
xchg
or
push
sub
jno
and
sbb
inc
or
xor
xchg
cmp
sub
add
sbb
jne
push
jno
xchg
movsb
xchg
mov
decl
mov
shll
lret
aam
mov
testl
and
adc
mov
das
or
push
ret
mov
lea
adc
test
f2xm1
ljmp
cs
cmp
les
mov
or
in
add
adc
inc
loopne
adc
adc
aam
loopne
movsb
push
push
xor
xor
push
pop
jno
xchg
adc
add
adc
mov
nop
add
pop
ret
fimuls
inc
lcall
lret
or
adc
xor
cmp
rcll
push
xchg
xor
fmull
or
mov
lea
rclb
jecxz
dec
divl
xchg
pop
push
rclb
cmpb
loopne
addb
adc
or
rcrb
xor
popf
movsl
popf
push
cmp
jle
or
inc
cwtl
decl
push
cmp
je
mov
lret
jo
pop
dec
and
add
or
idivb
xchg
inc
push
and
xor
add
inc
or
lock
addr16
push
pop
pop
pop
or
fldl
jl
shlb
inc
enter
mov
and
and
mov
test
xlat
adcl
pop
inc
js
pop
adc
push
push
sbb
or
mov
inc
dec
xor
inc
cmp
xor
sbb
cmp
cmpsb
in
add
sub
mov
add
pusha
mov
and
test
mov
pop
jle
fs
cmp
je
pushf
dec
mov
int
push
xor
mov
mov
fldcw
pushf
xlat
adc
je
mov
push
mov
in
dec
or
pop
push
add
or
sbb
jle
dec
or
mov
or
nop
test
pop
out
jo
mov
jo
scas
stc
add
inc
inc
add
outsl
push
mov
mov
imul
daa
sub
push
lret
mov
mov
push
jo
movsb
pop
mov
xchg
add
std
in
and
push
cltd
sub
nop
into
aaa
jl
jnp
outsb
pop
je
mov
movb
ja
mov
or
push
push
lds
push
lret
mov
fwait
bound
mov
push
cs
xor
pop
push
xor
or
mov
mov
xor
pusha
and
subl
or
push
adc
or
insl
lock
nop
cltd
sbb
mov
mov
dec
and
and
setnp
push
cmp
inc
lcall
or
cs
pop
pop
and
xchg
in
inc
pusha
pusha
lods
mov
fdivrs
data16
adc
push
adc
fcoms
aas
shrb
icebp
mov
jle
rcl
adc
mov
out
sub
lahf
sub
insb
mov
adc
xor
pop
pushf
xor
in
cmp
xor
les
aaa
inc
shll
xor
dec
add
sub
mov
daa
mov
leave
je
idivl
sti
jp
xchg
xchg
dec
push
jo
adc
les
scas
rcrl
sub
out
add
popa
pop
or
inc
divl
dec
dec
mov
and
adc
roll
iret
inc
enter
mov
adc
inc
mov
mov
add
dec
test
or
xchg
cmpb
adc
cmp
testb
enter
push
fmull
dec
out
pop
and
sbb
pop
xor
mov
mov
rclb
jno
popf
inc
pop
je
adc
jne
mov
push
adc
dec
lock
add
jge
lock
inc
mov
or
dec
out
pop
push
nop
in
dec
mov
ja
add
outsb
xchg
or
mov
pusha
jg
lds
roll
out
movl
je
and
add
inc
pop
or
pop
jo
sub
stc
cmp
loope
in
pop
aad
xor
ret
mov
add
inc
fbld
adc
pop
jne
js
pandn
insl
xor
pop
cmpsb
xchg
mov
fcmovbe
inc
pop
aam
aam
sbb
inc
push
pop
inc
pop
add
push
popa
outsb
enter
sub
adc
jg
xchg
mov
mov
push
xor
xchg
fcoml
mov
xor
xchg
adc
mov
or
push
mov
push
movsb
mov
pop
das
add
xor
cmp
pop
jb
xchg
adc
inc
cld
add
adc
popl
mov
mov
iret
ret
jae
mov
dec
stos
pusha
mov
imul
int
adc
insb
push
js
push
mov
ret
jge
mov
ret
les
cmp
test
dec
add
in
dec
or
imul
lock
add
sbb
adc
roll
add
sbb
dec
iret
fdivs
repnz
sbb
xor
adc
dec
or
dec
lret
push
jns
hlt
lock
ja
fnstenv
ljmp
repz
gs
call
add
jmp
adc
adc
adc
outsl
and
add
push
dec
sbb
sbb
daa
js
inc
aad
fiaddl
pusha
cmpb
jne
adc
movsb
add
flds
xor
mov
lock
les
dec
and
inc
or
loope
int
fucomip
mov
adc
ret
aaa
enter
inc
fst
sbb
in
adc
xorl
jle
add
mov
mov
lcall
sub
inc
add
or
or
adc
or
push
push
push
insb
push
mov
cmp
inc
js
test
testb
test
inc
mov
or
add
and
sub
add
add
arpl
and
hlt
and
or
xor
pop
pop
je
cmp
push
lods
sub
notb
roll
jo
jne
add
push
fcoms
pushf
shrb
mov
pop
sbb
testl
or
jle
neg
pop
lea
ljmp
imul
ret
cmp
pop
mov
cmp
jge
mov
aas
mov
hlt
cmp
addb
sub
jl
cs
or
push
sarb
addb
jl
adc
add
cs
dec
dec
add
aaa
loopne
sbb
insb
aas
push
lea
loopne
fucomip
mov
cmpb
les
xor
push
adc
clc
jns
fnstcw
and
mov
dec
mov
add
push
xor
sub
sub
cmp
push
jle
leave
js
dec
mov
cmp
test
imul
sub
sub
lods
cmp
push
addl
cmp
and
pusha
test
add
push
shrb
dec
sbb
call
sbb
push
pop
out
cli
in
outsl
or
and
push
mov
cmp
jne
aaa
mov
adc
cmp
cld
ja
cltd
pop
je
mov
sub
jb
je
ret
add
inc
loope
inc
and
lock
dec
or
or
adc
add
or
push
mov
inc
adc
fidivs
loopne
fwait
mov
jb
xchg
sbb
es
fiaddl
pop
inc
data16
int3
pusha
mov
cld
test
movntq
sbb
fsubrl
add
add
sbb
push
das
enter
mov
inc
inc
pop
fdivrl
cmpsl
and
outsl
sbb
adc
loope
pusha
testl
imul
popa
mov
test
movsb
pop
outsl
inc
push
mov
int3
leave
jle
int3
loopne
jo
push
sahf
sti
jmp
add
lea
ret
sub
sahf
inc
bound
or
and
and
mov
dec
pop
add
pop
rol
xor
or
mov
dec
insb
incl
and
xor
es
pop
mov
xlat
or
test
scas
and
lea
cmp
sbbl
imul
ja
mov
and
inc
mov
inc
or
add
ret
loopne
sbb
pop
clc
mov
stos
popa
add
loop
push
das
jp
xor
mov
sbb
lret
aam
popa
and
dec
add
and
adc
add
addr16
xor
aam
inc
dec
add
ret
loop
test
push
adc
popf
les
push
pop
cmpsl
loopne
inc
or
int3
pop
add
pushf
sub
push
iret
xchg
pop
xchg
adc
sbb
loop
mov
movsb
inc
or
sar
mov
out
mov
pop
mov
jae
mov
cmp
or
xor
add
cltd
icebp
popa
sti
xor
inc
or
push
into
loopne
test
add
js
repz
cltd
int3
lcall
mov
push
inc
int3
test
adc
mov
add
outsl
test
stos
sub
xor
push
movsl
test
add
rorb
mov
or
lock
cmp
inc
or
jbe
insb
loop
scas
or
or
adc
mov
push
sub
add
or
pop
dec
dec
or
or
inc
js
rcrl
fldl
cmp
push
inc
dec
pop
test
or
mov
adc
sub
jge
roll
or
mov
test
jmp
sub
push
pop
mov
push
or
lcall
mov
cmpsb
adc
inc
sub
or
inc
sub
dec
add
aaa
aaa
jge
push
mov
push
dec
mov
rclb
dec
mov
pop
push
inc
cmpb
dec
mov
pushf
cmp
jge
inc
jae
addr16
jmp
add
repnz
or
mov
dec
inc
and
movsb
xlat
sub
dec
and
and
sbb
mov
cmp
mov
sbb
add
test
push
add
sub
add
int
adc
add
and
or
aaa
cmp
mov
fs
add
xchg
pushf
jne
bound
add
jb
adc
mov
add
or
add
ss
mov
imulb
sbb
cmp
stos
mov
push
shrl
test
in
clc
testb
or
push
add
jle
push
jmp
sti
xchg
sbb
xorb
adc
and
enter
adc
inc
sbb
push
ret
xor
inc
xchg
imul
inc
hlt
mov
adc
cmp
inc
pop
add
and
mov
cmpsl
aad
add
iret
mov
imul
xchg
mov
das
mov
test
add
jmp
cmpsb
jbe
add
clc
jbe
neg
aam
pushf
inc
xchg
add
xchg
xor
outsb
jp
inc
cs
mov
fisttpll
call
xchg
and
outsl
xchg
and
adc
and
mov
rolb
inc
pop
xor
pop
or
sub
jmp
out
hlt
add
adc
cmp
add
inc
pop
and
jo
and
pop
int
push
jle
test
add
mov
pop
dec
dec
dec
jecxz
rolb
cmpsl
mov
stos
push
test
sub
fcmove
mov
or
subl
sbb
mov
and
inc
imul
and
das
test
xchg
mov
push
or
fsubr
sbb
dec
repnz
sub
sub
sub
ret
mov
add
add
push
xchg
std
fmuls
cmp
rolb
and
out
xor
push
js
inc
push
xor
jg
jg
adc
mov
das
and
orb
sar
push
sbb
mov
push
dec
lahf
je
aad
movswl
xchg
lea
or
dec
pop
mov
roll
mov
add
or
sub
shr
sub
or
fiaddl
mov
sbb
dec
aaa
test
cmp
imul
sbb
sub
lods
mov
inc
lea
ret
addr16
stos
pop
pop
sbb
or
add
test
and
dec
mov
cs
cmp
cmp
lock
or
pop
and
mov
sahf
icebp
or
fwait
jne
test
cmpb
ret
pop
jge
mov
ret
shl
push
bnd
or
mov
xchg
pop
leave
rorb
inc
aad
xchg
fistpl
add
mov
rcll
cli
fiaddl
daa
xchg
mov
xor
addr16
fs
orl
jnp
shrl
push
bound
call
daa
ret
pop
aam
pop
mov
push
rcrb
dec
or
xor
in
les
push
cmpsb
add
shll
mov
pop
dec
xor
js
fisubl
push
sbb
mov
cmp
inc
and
addr16
pop
fcoms
rorl
leave
test
sub
xor
lahf
xlat
pusha
sbb
out
outsl
add
mov
mov
or
xchg
jne
insl
cmp
andb
sbb
sub
js
inc
adc
add
and
into
and
dec
or
packssdw
out
push
adc
ret
xor
xor
pop
ret
adc
je
pop
outsl
mov
lret
popa
addr16
jmp
push
push
xor
pop
lock
xor
in
mov
notb
es
jle
rclb
adc
or
ret
cmp
adc
lds
mov
bound
jne
testb
add
push
inc
add
jle
jae
cmp
cmp
push
jne
cld
add
add
fs
int3
aad
add
inc
rclb
mov
fisubrl
pop
pop
jl
mov
insb
and
aas
xor
mov
xor
jecxz
insb
sbb
xor
popa
pusha
mov
or
les
jo
xchg
mov
enter
dec
push
mov
mov
cltd
test
xor
adcl
movsl
push
aad
lret
rol
inc
inc
loope
das
push
prefetch
adc
add
pop
add
mov
xlat
lcall
mov
xchg
fcmovne
and
pop
mov
cmc
sub
push
in
fistl
nop
int
or
rorb
aas
insb
ret
xchg
sbb
int3
outsl
das
adc
cmc
sub
dec
mov
pop
xor
inc
lcall
rol
adc
dec
dec
daa
or
dec
nop
pop
add
dec
stos
mov
outsl
xchg
sbb
mulb
jge
jo
sub
mov
sub
dec
mov
lea
outsl
ret
sbb
xchg
mov
cltd
jb
push
sub
ficoms
push
xor
or
lea
test
adc
xor
outsl
mov
mov
cwtl
hlt
or
dec
dec
push
movsl
jo
aad
push
inc
add
push
cld
js
xor
movb
inc
add
and
fwait
xor
add
sub
or
scas
cld
sub
fdivrl
or
call
pusha
xchg
add
lret
jbe
sub
pushf
and
push
rcr
mov
les
mov
xor
jns
stos
in
lcall
cmp
xchg
je
idiv
dec
cld
int3
push
clc
fstl
stos
lock
and
sub
hlt
push
mov
and
inc
fs
cmpl
jno
xchg
push
adc
push
cmpb
or
dec
ret
and
inc
mov
add
inc
mov
imul
and
and
inc
or
leave
pop
cmp
jg
sbb
push
dec
inc
mov
and
fisubrl
mov
aas
xchg
pop
and
sub
pop
leave
inc
jb
inc
or
bound
xchg
arpl
push
shlb
pop
sub
xor
out
sbb
cmp
cwtl
push
push
ficomps
mov
xor
mov
fsub
daa
lea
loope
cmp
adc
push
xchg
movl
jmp
or
fwait
out
in
xchg
xlat
scas
ja
in
xchg
and
or
ror
fldl
fcompl
add
leave
outsb
fiadds
push
xlat
arpl
inc
mov
xorb
dec
add
and
add
addl
fidivrs
add
insl
cmp
push
add
test
push
dec
loopne
inc
mov
fisttpl
dec
cmp
or
or
adc
sbb
outsb
sahf
ja
nop
xor
xor
and
test
fwait
outsb
pop
inc
aas
and
add
mov
dec
je
out
insl
mov
add
jmp
bnd
in
aam
int3
pop
fs
jecxz
aaa
xchg
outsb
rorb
add
lds
stos
les
rolb
ficoml
dec
push
push
dec
push
and
mov
mov
push
iret
ficoml
sbb
loopne
push
add
or
pop
je
add
add
and
es
adc
insl
cltd
out
pop
out
lods
sbb
imull
sbb
jnp
jne
mov
repnz
cmp
sub
and
pop
push
add
or
and
cwtl
push
dec
or
hlt
aad
inc
loop
lea
mov
les
rorb
mov
adc
mov
mov
sbb
ret
mov
mov
push
push
out
sbb
inc
movsb
fcmovnu
jne
xor
jnp
add
sbb
fwait
sbbb
mov
inc
sbb
push
mov
sbb
lret
lods
xchg
cmp
mov
or
aad
dec
cmp
es
dec
pop
and
xchg
jbe
xor
sarb
and
cmpsb
xor
xchg
sbb
out
jno
sub
inc
jg
rorb
dec
dec
out
ja
xor
inc
scas
shlb
and
std
xor
bound
hlt
or
dec
sbb
or
adc
push
popf
mov
in
test
gs
mov
cmpsl
popf
cmpl
jmp
sbb
mov
sub
in
jae
mov
imul
ds
andl
arpl
lret
jno
outsb
push
jb
sbb
hlt
add
test
sub
out
stos
cmpb
xor
loope
cld
lcall
and
shlb
sar
pop
pop
call
aad
repnz
sbb
repz
rorb
repnz
push
sti
je
mov
shlb
dec
or
mov
adc
dec
push
scas
fsubrs
dec
adc
mov
es
push
jnp
into
enter
shl
push
pop
cwtl
rcl
adc
insl
hlt
pop
push
out
inc
popa
in
jl
xor
mov
jl
cmp
add
add
out
sbb
hlt
sti
push
inc
push
xor
loopne
and
mov
out
xlat
cmc
mov
adc
outsl
xor
ds
sbb
sarl
mov
add
pop
sub
jbe
lahf
pop
in
cmp
xor
xor
jo
aam
cld
fsubr
cmpsb
jno
lods
pop
push
mov
sti
pop
ss
jmp
xchg
sahf
cld
ja
out
mov
inc
cmp
setg
jmp
push
faddl
insb
inc
add
sbb
push
dec
cmp
setle
dec
imul
inc
inc
es
adc
cmpsb
dec
inc
dec
adc
add
push
imul
add
arpl
loopne
add
rorb
mov
inc
lds
lods
cmp
ljmp
or
out
popa
inc
fs
je
adc
dec
pop
lcall
or
dec
jnp
aam
mov
sbb
shlb
ret
fcmove
inc
loopne
jl
shll
aaa
pop
notl
sbb
out
imul
popa
mov
adc
adcb
out
sub
rorb
push
aaa
sbb
notb
hlt
jmp
xorl
xchg
sbb
dec
pop
outsb
aad
daa
and
std
or
xor
leave
add
dec
call
sbb
cmp
push
dec
popf
movb
and
in
pop
xchg
ret
cmp
call
mov
adc
add
lret
cmp
mov
sub
aaa
loop
loopne
jl
push
xchg
sub
movsl
loop
cmp
fs
or
loope
xor
pop
add
pop
add
jg
in
jnp
lock
scas
int
mov
jle
es
push
lcall
ret
jmp
xor
add
jle
psubq
sub
lods
or
fs
add
rorl
fsubr
push
sbb
adc
test
testl
pop
int3
ja
int3
mov
mov
adc
stos
cmp
imul
jo
lods
or
cli
mov
or
xchg
and
cli
data16
pop
lcall
sti
push
mov
xchg
jns
lret
fucomip
stos
push
pop
in
popa
in
push
dec
sub
xchg
push
xlat
sbb
add
push
dec
lods
pop
and
sbbl
fidivrl
and
sbb
mov
je
jbe
sub
out
sbb
subl
pop
cli
sbb
cmp
jne
push
mov
cmp
mov
fs
xlat
pushf
add
xor
add
es
jo
cmpb
mov
lds
inc
xchg
cmp
push
sahf
cmc
les
dec
or
dec
push
cmp
insb
je
xchg
add
sub
idiv
cmp
jge
push
sbb
inc
lods
fsub
lret
sahf
pop
sarl
iret
leave
sbb
aam
pop
clc
add
and
pop
inc
loope
xor
push
hlt
and
pusha
in
mov
int
into
ret
shlb
jne
push
rclb
filds
shlb
push
push
mov
lock
pushf
xor
or
or
pop
sbb
sti
sub
cmp
jne
push
jp
mov
or
test
xor
push
bound
lock
mov
jae
pop
cmpsl
sbb
and
adcb
push
cmp
rolb
xchg
pop
xchg
pop
mov
xchg
mov
and
push
enter
cmpsl
jmp
pop
adc
add
orl
add
inc
xchg
shlb
cmovbe
not
std
xchg
cmpsb
bound
iret
and
push
in
and
push
das
jbe
cmpsb
fbld
sbb
jb
xchg
xlat
test
ja
scas
mov
jge
aaa
and
pusha
push
out
mov
call
imul
push
mov
jne
push
ficoml
es
jb
test
xorl
in
ljmp
movsl
and
in
pop
fnstenv
xchg
lret
or
mov
jmp
sub
mov
dec
sub
cmpl
pushf
push
sub
dec
adc
mov
xor
add
pop
xor
pushl
jo
andl
mov
sbb
in
popa
sub
inc
push
cs
pop
and
cltd
aas
adc
jecxz
shll
dec
jne
mov
pop
jbe
push
dec
mov
sub
sub
mov
mov
jmp
mov
out
pop
mov
adc
push
push
xchg
test
out
dec
add
jno
jmp
pop
xor
lea
dec
lcall
into
jg
push
mov
add
add
dec
insb
aas
loop
outsl
xor
js
and
dec
xlat
xchg
dec
xchg
rolb
rorl
rcrb
inc
cmpsb
hlt
sbb
or
in
fsubrs
das
jne
test
sbb
and
xchg
pop
or
adc
repz
push
shll
dec
mov
adc
push
repnz
adc
movsb
mov
adc
imul
stos
add
push
mov
or
iret
fwait
cmp
mov
aas
jmp
adc
jmp
lds
jbe
lea
filds
xlat
and
lods
test
arpl
daa
shlb
and
adc
pushf
pop
cmp
jle
clc
call
jmp
lock
inc
inc
adc
sub
mov
je
add
sbb
out
xlat
jne
inc
mov
dec
in
daa
xchg
call
stos
pop
lods
push
arpl
ret
jle
insl
sbb
mov
outsl
popa
inc
add
or
fcomps
les
cmp
pop
mov
push
push
push
and
sub
dec
loop
add
and
sbb
dec
push
dec
insb
fidivrl
mov
adc
xchg
outsb
or
fbstp
sbb
js
orl
bound
inc
nop
cmpsl
cmp
ret
add
sub
popf
es
xchg
xchg
add
inc
dec
mov
xchg
or
dec
fmuls
push
lea
hlt
or
jmp
pop
sub
je
orl
mov
adc
and
call
movsb
stos
mov
sarb
or
inc
pop
inc
dec
rcll
dec
adc
dec
add
mov
jle
fs
and
or
adc
fldl
ficompl
push
mov
xor
inc
mov
push
pop
test
and
dec
cmpl
popf
add
out
incl
xor
pop
pop
pop
xchg
or
adc
cwtl
add
xchg
nop
aam
testb
sub
pop
add
and
jmp
sahf
test
inc
jmp
dec
lcall
fwait
add
or
pop
ret
nop
movl
adc
xor
jae
bound
clc
fwait
dec
xchg
push
inc
je
and
pushf
stc
mov
aas
push
sbb
sub
adc
cwtl
add
xchg
inc
push
out
mov
push
mov
sti
mov
jl
insl
and
sub
fdecstp
add
fdivs
bound
sub
cwtl
les
test
sub
iret
test
dec
pusha
outsb
clc
ret
ss
or
insb
pop
inc
inc
pushl
inc
inc
fwait
push
lods
inc
int3
and
inc
mov
and
stc
lcall
arpl
insb
mov
add
jne
cwtl
jge
into
pop
and
mov
mov
notl
inc
int
push
dec
jnp
mov
xchg
repz
fidivrl
mov
or
inc
mov
movsl
push
mov
and
pop
leave
cmp
fmuls
stos
mov
cmp
test
das
mov
aaa
loop
xchg
clc
sub
cmp
loopne
jl
cmpb
mov
pop
or
inc
popa
jne
loopne
lea
or
jle
pop
pop
icebp
jg
mov
and
jnp
adc
cld
and
in
mov
push
jl
inc
or
addl
cltd
clc
shlb
jo
adc
mov
es
lcall
andb
sub
xlat
imul
int3
rorb
adc
xlat
add
or
and
rcrl
or
sub
das
inc
or
and
mov
fldl
repnz
lock
jmp
push
and
in
idiv
adc
lahf
sbb
xor
push
lahf
mov
repz
and
xchg
jnp
push
in
pop
pop
add
cli
inc
dec
js
leave
or
dec
inc
adc
shlb
lea
ja
mov
inc
test
push
mov
lea
jbe
outsl
je
out
and
sbb
mov
mov
scas
mov
imul
nop
cmpl
arpl
jg
mov
and
and
or
test
dec
sub
clc
cmp
adc
adc
or
dec
xor
jmp
xchg
daa
mov
mov
pusha
nop
push
popa
mov
mov
dec
mov
push
sti
nop
and
xchg
push
inc
nop
or
sbb
push
nop
inc
mov
xor
mov
nop
mov
loope
dec
fsubrp
or
aaa
hlt
sub
out
mov
inc
nop
cwtl
idiv
adcb
pop
data16
bound
sub
js
mov
je
mov
push
arpl
inc
mov
push
aas
dec
cld
cmp
mov
add
mov
cltd
sub
scas
iret
imul
add
adc
popa
daa
add
inc
ret
adc
out
pop
mov
sub
ja
add
inc
sbb
fldcw
lahf
out
or
push
pop
out
xor
xchg
add
push
daa
adcl
clc
movsl
sub
fcompl
inc
lods
or
mov
sub
aas
push
lods
push
pushl
lods
adc
add
cmp
add
jno
add
push
inc
add
xor
add
jp
mov
inc
mov
and
gs
cltd
lock
or
xchg
adc
lahf
mov
popf
mov
std
cmpl
pop
pop
push
jne
outsb
or
shll
dec
decb
into
adc
rolb
sub
mov
mov
enter
push
cmpsb
adc
gs
push
push
mov
fdivs
pop
xor
fbstp
mov
sub
ret
or
outsl
roll
mov
pop
lods
sbb
adc
or
sbb
pop
jmp
push
mov
cwtl
or
daa
push
mov
cmpb
pop
adc
dec
add
dec
je
push
pop
lcall
add
jo
or
adc
out
xchg
loopne
sbb
popl
pop
sbb
xchg
cs
and
imulb
jmp
outsb
cli
inc
sbb
jne
addb
adc
into
cmp
test
and
mov
stos
cmpl
jo
jae
mov
push
adc
jmp
dec
imul
push
cld
add
dec
es
sub
or
and
movsb
or
clc
xchg
xchg
jecxz
cmp
jne
xor
les
xlat
imul
aaa
pusha
xchg
mov
test
push
rcll
arpl
mov
or
pop
pop
dec
adc
imul
fcomp
rorb
add
fldenv
pop
imul
sbb
addl
add
imul
cmp
push
repz
pop
xor
popf
xchg
sbb
je
cwtl
pop
mov
clc
or
sbb
insl
inc
adc
sub
mov
add
adc
or
mov
or
inc
pusha
dec
add
mov
dec
adc
push
pop
xchg
test
fstps
adc
xchg
int
rclb
rdtsc
add
dec
mov
inc
add
and
adc
inc
rorb
inc
es
cwtl
jae
and
xor
and
ret
je
inc
push
adc
pop
aaa
je
inc
xor
pop
enter
pop
dec
ss
daa
or
scas
adc
sbb
sbb
xor
or
ret
adc
jno
cmp
pop
js
mov
cwtl
movl
pop
movsl
stos
adc
xor
add
sub
cmpb
add
push
cmpl
push
xchg
lods
push
mov
sbb
iret
es
mov
or
call
dec
pop
lea
add
sub
pop
pop
add
adcb
roll
nop
inc
dec
mov
dec
inc
je
test
xorl
mov
push
fiadds
cwtl
gs
mov
loope
in
movsl
lahf
jbe
cmp
push
push
mov
push
xchg
cmpsl
shlb
add
push
dec
mov
adc
clc
add
and
popa
movsb
pusha
stos
leave
out
js
jge
push
mov
xchg
fldenv
mov
aad
test
or
xor
jb
dec
or
out
fmulp
adc
test
jns
mov
push
jbe
fwait
inc
test
cmp
dec
sbb
les
pop
cmpsl
rorl
lods
xor
push
xchg
addr16
xchg
call
test
stos
je
xor
adcl
pinsrw
les
dec
pop
ja
jp
pop
sub
repnz
add
xorb
add
mov
daa
mov
pop
negb
in
xor
xorl
mov
pop
aad
sbb
mov
xchg
pop
setae
or
cmp
cmc
xchg
aas
xor
repz
inc
dec
push
and
js
sbb
mov
rol
xor
xchg
sub
jecxz
push
mov
dec
jmp
dec
pop
cs
add
sbb
sti
fmull
rcrl
enter
lods
push
add
mov
jl
jnp
sbb
cmp
xchg
push
adc
lods
lahf
popf
call
xor
and
dec
mov
add
jns
add
das
pop
mov
sbb
pop
aaa
inc
aas
add
in
cmp
ret
sub
aad
hlt
push
adc
roll
or
popa
inc
inc
sbb
iret
shl
push
adcb
add
pop
fldt
daa
sbb
mov
dec
cmp
push
xchg
or
mov
xor
iret
es
inc
nop
ss
pop
daa
aas
pop
int3
test
call
mov
jg
daa
aas
xor
or
dec
xchg
push
and
cld
and
sub
xchg
movsb
adc
adc
or
scas
sbb
push
sub
mov
and
fisttpll
xorb
nop
pop
pop
pop
les
je
sbb
jl
ror
pop
fs
add
xor
es
popa
adcb
inc
add
loopne
sbb
daa
pusha
pop
or
add
sub
mov
pop
push
stos
sbb
iret
nop
inc
cs
sbb
push
rol
fadd
gs
fdivr
lea
xchg
xchg
jne
daa
aam
inc
call
lahf
inc
adc
push
adc
or
dec
sub
xchg
or
inc
test
outsl
ret
adc
inc
rorl
pop
inc
xor
mov
pop
mov
cmp
inc
ret
call
adc
adc
cs
inc
cmp
inc
pushw
dec
or
push
mov
jecxz
test
test
xchg
stos
ss
in
js
sub
mov
pop
movswl
cmpl
jmp
fimull
add
jmp
adc
push
xor
fldt
sbb
mov
push
pusha
adc
push
xor
xchg
mov
fs
push
daa
or
dec
cmp
push
pop
movb
xor
add
push
xchg
add
add
xchg
popa
cwtl
pop
clc
cmpl
dec
ret
cld
mov
cmp
inc
pop
je
pop
mov
cmp
test
dec
xchg
fcoms
xor
sub
jne
add
xlat
pop
push
iret
mov
jno
xchg
xchg
adc
add
mov
push
push
inc
sub
out
inc
in
jle
xor
push
push
add
adc
popf
inc
cmp
and
orl
mov
bound
in
cwtl
mov
shlb
dec
scas
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
ret
cmp
stos
mov
mov
sub
aaa
rcrl
mov
imul
loop
sarl
dec
pop
rolb
test
mov
loop
fimull
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
rcll
into
xlat
push
hlt
jmp
fcomp
adc
cmp
fwait
mov
adc
cld
sub
pop
cmp
outsl
mov
xor
divl
loope
je
dec
test
out
mov
jge
addr16
add
dec
or
add
xchg
cmp
shrl
sbbb
or
mov
stos
lds
test
mov
pop
cs
sbb
sub
dec
fistps
or
push
mov
out
loop
push
xor
fiaddl
lret
daa
adc
ror
shrb
push
cmpsl
mov
mov
lret
inc
xchg
jne
mov
dec
xorl
rcll
fcomip
out
push
mov
and
lahf
in
je
mov
pop
loopne
sub
jle
push
popa
push
push
andb
push
popa
cmp
push
pop
sahf
mov
add
mov
sub
or
imul
lea
ja
inc
push
xor
test
fists
add
or
outsb
scas
mov
sahf
add
push
inc
and
cmp
sub
adc
add
adc
iret
xor
push
pop
push
mov
cmp
test
sti
xchg
xchg
lock
and
cmpsl
mov
bound
or
shlb
inc
sub
int3
ret
sarb
pop
cmc
or
adc
push
ds
inc
ret
and
addr16
aaa
or
dec
adc
adc
push
and
dec
nop
adcb
add
and
or
or
daa
ja
pusha
ljmp
je
out
dec
bswap
and
lret
fcoml
mov
dec
nop
pop
cmp
xor
sbb
cmc
push
mov
inc
loope
iret
add
cmp
in
test
or
add
sbb
xorl
mov
dec
sbb
push
or
push
shrb
or
aam
aaa
pop
or
dec
scas
push
iret
ljmp
add
and
aam
mov
adc
nop
and
loop
jae
rcll
in
sbb
shrl
and
or
jge
aaa
and
adc
orb
in
inc
adc
inc
sub
arpl
push
inc
sub
or
add
das
insl
pop
movsl
mov
rolb
and
jle
mov
dec
add
adc
test
jne
push
and
push
rcrb
push
fsts
jo
rol
sbb
jle
popl
sub
or
icebp
sub
sbb
mov
or
je
adc
bound
adc
add
pop
inc
outsb
or
or
adc
cmp
pop
mov
in
pop
sub
or
loope
jl
stos
push
xchg
pop
push
sbb
add
ret
and
out
add
xor
aam
out
pop
sbb
cmp
lods
or
faddp
xor
jle
movb
jle
jle
test
mov
ret
lds
out
jns
cs
jge
sbb
movsl
subl
test
jne
popf
push
pop
cmpb
adc
xor
fdivp
xchg
inc
sub
lret
cli
in
or
inc
fcmovbe
xor
test
aas
les
inc
inc
loope
ficoml
and
les
cwtl
dec
sub
test
movb
imul
rcrl
das
es
int3
call
loope,pt
jo
lds
mov
mov
and
cmp
cmp
inc
sbb
push
sbb
xchg
add
push
sbb
pop
pop
cltd
jae
inc
shl
fyl2x
jg
aad
mov
popf
cmovp
push
mov
pop
mov
fdiv
icebp
ss
mov
psraw
pop
mov
add
loop
inc
mov
call
push
cmpsb
shlb
cmpsl
lret
jns
jo
add
shrb
dec
lds
xor
pop
cwtl
jbe
das
dec
enter
sbb
ret
ret
js
lea
or
andl
dec
ljmp
test
push
pop
jo
mov
outsl
push
jmp
idivl
insb
lods
loope
push
xor
mov
jle
scas
or
cmp
pop
je
dec
and
pop
pop
std
push
ret
jle
cmp
add
das
in
pop
sbb
ret
or
push
xchg
sarb
popa
daa
pusha
jmp
pop
push
adc
xor
idivl
loope
cmp
syscall
xor
push
out
jnp
add
prefetch
or
fcoms
cmp
jb
dec
cmp
cli
pop
lret
jb
shlb
loopne
subb
push
jne
mov
add
push
dec
xlat
cmp
pop
ljmp
int3
and
xor
adc
hlt
mov
cltd
mov
pop
inc
inc
adc
adc
pop
mov
jl
nop
cmpsb
cmp
dec
ret
stos
pop
das
push
call
add
push
pop
fstpl
orl
add
clc
xchg
add
cmpl
fildl
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
xchg
mov
scas
inc
jecxz
sub
push
adc
pop
jmp
adcl
out
rcr
or
push
mov
loop
subl
push
or
xor
mov
adc
xor
sahf
lock
add
gs
push
pop
aad
adc
pop
xorb
pop
dec
push
iret
leave
xchg
dec
sbb
jmp
add
adcl
adc
mov
cmp
dec
leave
test
push
pop
iret
mov
add
add
jne
sti
aaa
aas
dec
xor
and
ret
daa
addr16
movsb
pop
mov
jl
sbb
je
sub
rorb
loope
push
subl
imul
inc
loope
add
sub
fmuls
mov
inc
rcl
les
inc
loopne
dec
push
mov
lea
pushf
push
movsb
sub
lds
adc
in
out
jecxz
call
icebp
rorb
xor
and
or
pop
and
dec
arpl
je
mov
mov
push
push
fwait
sti
nop
or
mov
xchg
nop
sbb
addb
cmpsl
popf
xor
out
push
add
add
mov
or
in
out
jmp
or
push
xor
push
enter
dec
ss
inc
or
cmpsb
loopne
cltd
push
and
fucomip
in
ljmp
sub
out
add
sub
insb
or
inc
and
inc
or
xchg
int
add
mov
test
and
or
xchg
rcl
push
rol
inc
hlt
dec
lods
adc
mov
sub
inc
cwtl
pop
shrl
loopne
cmp
push
inc
sub
test
fbld
jg
les
dec
ret
add
xchg
je
mov
pop
testl
dec
dec
bound
dec
test
mov
lods
sbb
daa
mov
jbe
xchg
xor
pop
popf
jmp
push
mov
fldt
jle
and
add
aad
add
addps
add
dec
jecxz
test
jl
inc
xchg
mov
sbb
jns
mov
std
andl
add
nop
xchg
mov
pusha
mov
aam
jo
ret
add
xchg
push
xlat
or
adc
clc
dec
shl
sahf
sbb
mov
push
mov
hlt
mov
cmp
or
jl
xchg
mov
dec
pop
ret
divl
nop
or
or
cmpb
out
xor
inc
ljmp
pushf
xor
fwait
push
pop
mov
jecxz
mov
repz
dec
icebp
and
dec
inc
fs
dec
mov
and
popf
subb
lea
push
dec
rcll
sbb
jo
fucomip
pop
or
push
sarb
push
aaa
pop
or
roll
sub
inc
sub
inc
sub
dec
lds
add
adc
in
test
hlt
movsb
sbb
and
jne,pn
imul
sarb
inc
mov
cwtl
sbb
pop
push
jl
andl
fimuls
jno
mov
bound
and
cld
repz
call
push
sbb
sub
call
cmp
fs
add
mov
sarb
data16
and
xchg
leave
lcall
iret
sbbb
adc
fildll
or
mov
arpl
roll
enter
test
push
outsl
xchg
mov
add
and
sahf
push
iret
cltd
hlt
movsl
or
xor
lock
xor
xadd
xchg
je
cmp
lock
fisttps
push
dec
mov
sub
pop
sub
inc
rclb
test
xchg
adc
xor
xchg
sub
adc
or
cmc
or
mov
jnp
int3
ds
arpl
wrmsr
lock
cmp
cmp
and
add
mov
fwait
loopne
movsl
xchg
jno
push
ret
jp
arpl
pop
push
adc
icebp
cltd
mov
call
add
cmp
xchg
sub
and
or
cs
cmp
out
push
add
push
xor
pop
jns
or
fcomps
xchg
cmpsl
jg
lock
mov
adc
test
xor
inc
shlb
add
jno
and
add
cmovbe
or
hlt
push
je
sbb
add
les
jmp
adc
or
or
ss
andl
clc
sub
adc
leave
adc
mov
inc
sub
dec
inc
cwtl
push
xchg
or
push
mov
jl
and
outsl
test
push
fistpll
inc
sahf
push
mov
pop
xor
and
mov
bnd
adc
jmp
sub
loop
jne
test
pop
mov
adc
hlt
jne
inc
loop,pt
movb
sub
push
pop
cmpl
xlat
sbb
add
sbb
fwait
pushl
pop
or
or
sub
sti
popf
dec
inc
addr16
lock
mov
push
pinsrw
push
add
adcb
adc
jle
ja
add
cmpb
es
into
inc
xor
mov
mov
mov
cmp
add
cmp
in
dec
cmp
js
push
mov
add
sub
pop
orl
aas
push
dec
rolb
das
xchg
mov
insb
add
mov
ret
lds
rorb
and
ret
add
mov
add
ret
or
push
aam
adc
add
mov
and
or
and
jo
int
pop
fcomps
dec
add
clc
and
push
clc
mov
inc
pop
rcpps
adc
mov
adc
hlt
pop
or
adc
je
push
add
xor
xchg
outsl
or
rcl
and
sqrtps
push
mov
or
shlb
and
cltd
lds
mov
dec
fidivrl
stos
inc
mov
hlt
stos
jmp
sbb
pop
push
dec
call
sub
mov
pop
inc
push
loopne
sub
sub
pusha
mov
adc
cmp
int
fldt
sub
push
clc
clc
lock
imul
mov
mov
xchg
and
xchg
dec
movsl
rorb
fmul
fmul
aam
adc
sub
popf
adc
mov
xchg
or
sahf
dec
in
push
lahf
add
pusha
stc
mov
sub
mov
test
cmp
rcr
push
dec
subb
or
push
pop
rolb
push
movb
jno
push
or
mov
pop
insl
arpl
inc
inc
xor
rcrb
rolb
insb
movsb
imul
cs
sub
sub
clc
or
rcr
arpl
notl
add
push
dec
mov
dec
mov
in
imul
mov
or
push
push
dec
or
shlb
mov
add
sub
push
aaa
mov
mov
jmp
inc
inc
ja
sub
adc
sarb
dec
dec
shlb
and
push
adc
outsl
das
cs
ficoms
pusha
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
jo
push
adc
fmul
adc
ja
or
pop
mov
and
into
adc
into
inc
dec
add
add
mov
sbb
sbb
mov
dec
xchg
xor
xor
add
sbb
fsubl
dec
jnp
jb
fmull
or
scas
sbb
xchg
cmp
pop
mov
xchg
or
popf
aam
les
sbb
and
movsl
movsl
push
inc
cs
add
data16
push
add
mov
add
push
push
and
pop
repnz
or
pop
add
add
xchg
adc
in
lds
hlt
test
xchg
imul
xchg
jge
dec
or
enter
add
add
mov
or
inc
pop
add
add
aam
pop
mov
jb
xchg
add
mov
mov
sbb
unpckhps
pop
jns
mov
xor
sarl
sub
lret
push
dec
mov
pop
jnp
pusha
sub
lock
imul
int3
sub
and
cs
xlat
inc
jmp
movzwl
inc
mov
or
push
lock
ret
movsl
xor
loopne
outsl
or
cmp
shrb
dec
or
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
mov
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
sti
mov
push
mov
gs
fcmove
mov
dec
arpl
dec
sbb
mov
js
mov
imulb
or
fldenv
cmp
push
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
je
insb
mov
subl
pop
lcall
inc
outsl
repnz
adc
add
sub
sub
jnp
rcl
mov
lea
pop
imul
or
dec
cmp
cmp
aam
or
imul
xor
and
or
add
pop
adc
fldl
cmp
sbb
push
fmul
add
test
out
inc
adc
inc
adc
sub
xchg
dec
or
or
test
fsubrp
cs
rclb
xchg
xorb
ds
movsl
xor
cmp
mulb
into
enter
test
test
or
pop
xor
orl
or
je
and
fucomi
ret
popa
pop
dec
cmpsl
cwtl
add
lods
push
push
xchg
inc
lds
xor
aas
mov
test
cvtps2pi
cltd
xor
pop
add
adc
in
push
imull
mov
ret
js
push
add
pop
pop
movsl
pusha
mov
loope
inc
or
push
testl
xor
sub
lcall
add
arpl
and
test
lahf
cwtl
cmpl
mov
adc
aad
popa
adc
xor
adc
adc
jle
jecxz
filds
add
inc
xchg
jmp
sbb
outsb
stc
test
xor
aas
add
inc
xor
cmp
test
adc
loope
jp
pop
cmp
fiadds
mov
scas
fsubrs
add
add
fwait
test
scas
mov
xchg
movsb
repnz
ljmp
pop
js
mov
call
inc
daa
mov
sbb
ljmp
outsl
inc
cs
fwait
rolb
test
push
xchg
dec
sti
adc
hlt
fisubrs
outsl
mov
dec
hlt
je
addb
scas
sub
jno
mov
sbb
push
lahf
lcall
jo
mov
or
movsl
mov
call
insb
ljmp
xchg
push
stos
push
lods
decl
mov
pop
and
aam
push
pop
in
cmp
inc
and
insb
add
mov
sub
add
inc
sub
test
movsb
sbb
scas
insl
cmp
loope
or
dec
cvtdq2ps
out
test
xor
jns
loopne
addr16
add
pop
fiaddl
movsl
popf
or
mov
push
add
cmpl
sub
orb
aaa
into
mov
jbe
push
or
imul
sub
xlat
nop
sbb
cmpb
dec
xchg
and
add
int3
subb
push
jno
mov
xchg
and
inc
and
xchg
adcb
inc
or
and
mov
bnd
jne
pop
hlt
cmp
adc
mov
xor
pop
jmp
cli
mov
add
dec
enter
adc
pop
ss
call
pop
dec
call
or
and
mov
je
je
add
shll
adc
cs
lods
test
mov
or
ret
andb
out
inc
adc
xchg
int3
push
je
lahf
in
cmp
jge
cmpl
clc
jo
rcll
in
daa
pop
das
sbb
cs
dec
sbb
or
outsb
mov
ret
cwtl
inc
frstor
add
stos
dec
cmp
call
ds
push
xor
inc
rcrl
repz
cmc
mov
dec
imul
stos
mov
loopne
iret
lock
adc
rolb
xor
dec
mov
jp
pop
jne
xchg
or
mov
add
orl
push
or
mov
adc
out
in
imul
mov
dec
mov
add
pop
arpl
push
mov
loopne
add
popa
in
inc
loopne
out
je
lods
popa
dec
and
sub
push
and
pop
inc
inc
rol
cld
dec
adc
push
js
sub
iret
test
or
xor
call
mov
popa
inc
dec
fistpl
push
push
cld
in
test
hlt
leave
add
and
incl
add
out
movsb
push
rorb
data16
out
js
movswl
fwait
in
sbb
dec
xor
push
inc
push
push
cmpsl
cwtl
xchg
sarb
xor
xchg
inc
add
arpl
sbbl
out
sbb
sbb
inc
inc
adc
mov
orb
jo
test
cmc
mov
or
cmp
lock
push
or
jb
jg
dec
adc
mov
mov
test
mov
scas
popa
iret
mov
pop
cmp
jb
loopne
or
push
js
sbb
jle
inc
orb
mov
pop
stos
add
inc
stos
lret
fimuls
adc
mov
cmp
je
pop
inc
movsb
mov
mov
pop
sbb
ret
lret
je
call
mov
xchg
xorb
pop
xor
xor
xor
lock
adc
mov
pop
in
mov
pop
and
or
lods
outsl
and
insb
xchg
mov
aas
mov
pusha
mov
aam
dec
mov
xor
stos
lahf
xor
pop
movsb
roll
movb
push
out
ret
cmpb
lods
xchg
pop
ja
inc
pop
enter
add
test
jp
lds
add
jbe
pop
inc
xchg
out
les
andb
cmp
aaa
rolb
orb
daa
mov
fs
popf
call
dec
popf
dec
and
inc
scas
movl
pop
or
stc
or
push
inc
je
push
mov
jle
cmpb
or
adcb
xchg
sub
inc
mov
cltd
push
lods
add
movsl
inc
loopne
inc
pusha
clc
fstpt
fmuls
sub
adc
rcll
mulb
repnz
or
incl
and
sbb
inc
jl
pop
mov
mov
out
dec
cmp
push
pushf
outsb
mov
cmp
lahf
xor
ret
push
add
sbb
ds
adc
leave
mov
pop
mov
movsb
jns
rolb
mov
cmp
insl
jae
sbb
sbb
cmp
jnp
and
cmp
add
push
mov
push
loope
xor
xor
sbb
adc
push
imul
or
inc
stos
and
fildl
fs
push
mov
lods
mov
fs
jne
enter
cmovo
dec
jne
into
inc
and
fadd
mov
ja
sub
mov
repz
lcall
fwait
jbe
jg
jl
stos
test
xchg
sub
jmp
aam
ljmp
adc
and
push
add
inc
loopne
sbb
sub
jecxz
adc
mov
jae
pusha
or
fidivrs
outsb
add
in
adc
adc
pop
imul
mov
test
lret
pushf
je
jp
aad
pop
pop
push
adc
mov
cmp
add
daa
or
adc
add
movsb
pop
pop
lret
pop
lea
stos
xor
ret
add
sub
push
ss
imul
mov
je
gs
jle
dec
cmp
hlt
out
mov
add
mov
test
inc
cmp
and
mov
bswap
fidivl
ret
dec
or
mov
pop
mov
adc
pushf
dec
mov
mov
scas
movsb
pop
cwtl
adc
pop
add
test
dec
push
add
mov
adc
adc
sbb
jp
fwait
subb
pop
push
adc
mov
cmp
push
lock
lods
inc
decb
out
and
sbb
pop
lock
push
xchg
adc
push
xchg
jge
jne
push
repz
cmpsb
ret
mov
and
in
and
jnp
adc
push
push
inc
push
je
clc
loope
fs
inc
mov
adc
pusha
xor
push
dec
fiaddl
ds
sbb
xchg
jo
loopne
lret
pop
ret
adc
inc
data16
push
scas
mov
jae
adc
inc
cld
mov
shlb
lods
js
int3
and
mov
int
idivl
fs
cmpsb
pop
or
and
jle
fiaddl
popf
int
cwtl
inc
or
fs
stos
push
iret
pop
pop
arpl
cltd
mov
cmp
out
jl
daa
rol
outsl
push
lock
adc
push
jg
push
dec
loope
in
movsl
add
xlat
popw
clc
add
xchg
loopne
pop
sbb
sbb
or
and
add
hlt
pop
shll
mov
push
jo
lret
pusha
and
clc
sub
sub
add
and
add
mov
sub
or
pop
adc
ret
mov
hlt
lds
jmp
pop
mov
or
loope
add
test
jle
shl
fs
movsl
shlb
mov
mov
lock
ret
cwtl
lcall
cmp
cmp
and
call
lea
aad
push
fisubrl
pushf
stos
mov
mov
xchg
or
fistpl
sbb
push
pop
dec
sbb
sub
rolb
fucomi
ljmp
add
add
addl
incl
push
dec
insb
push
xor
jg
or
icebp
adc
fs
addps
adc
and
fdivr
lea
or
test
mov
inc
scas
fstl
or
xchg
push
inc
adc
sbb
enter
sbb
fs
fsts
shrb
mov
xlat
pop
leave
les
icebp
lea
ud0
outsb
sub
aam
dec
pop
dec
adc
and
lods
jne
adc
ret
push
loope
stos
daa
icebp
and
mov
adc
insl
mov
jg
in
jbe
cmp
call
hlt
mov
adcl
push
lods
and
andb
aaa
rolb
adc
in
cwtl
cmp
sub
es
dec
out
fwait
mov
mov
inc
adc
jge
aaa
add
imul
shrb
pop
ljmp
pop
das
dec
mov
pop
rclb
nop
daa
and
xchg
mov
mov
push
rclb
orl
and
lcall
xor
inc
sbb
pop
es
pop
jecxz
or
ret
add
add
pop
cld
mov
pop
sub
xchg
data16
fisubl
add
call
fs
cs
rclb
or
mov
jmp
dec
int
pusha
vmread
inc
mov
inc
push
and
sub
add
xchg
jne
or
jmp
into
push
mov
mov
cmp
roll
xchg
shrb
or
nop
mov
pusha
fucomi
sbb
notl
dec
int3
imul
inc
dec
cs
ret
arpl
jg
into
mov
fadds
cmp
push
scas
daa
faddl
or
inc
inc
dec
and
sub
and
or
add
mov
xor
idivb
and
jo
fsubr
rolb
adcb
cltd
sbb
in
inc
dec
inc
les
add
orb
xchg
adcl
adc
stc
ja
push
lds
dec
xor
inc
loop
or
sbb
or
or
sbb
adc
xchg
clc
adc
or
pop
das
aas
pop
adc
push
mov
mov
shll
js
jmp
xchg
sbb
out
sahf
lock
inc
sub
mov
pop
adc
push
dec
adc
test
and
or
or
notl
sbb
pop
xchg
cmp
dec
rcll
adc
jmp
sub
sbb
xchg
xor
decb
faddp
mov
movhps
lods
pop
adc
cmp
inc
icebp
pop
negb
mov
clc
sub
or
ljmp
xorl
adc
in
xor
push
leave
cltd
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
in
pop
dec
insb
adc
pop
xchg
insb
cmpsb
test
xchg
loope
in
stos
or
push
jp
cmp
or
mov
xor
add
push
in
shlb
jae
andb
bound
dec
xor
dec
add
fwait
popl
ljmp
sbb
sbb
push
mov
mov
push
sub
xchg
add
lods
mov
push
daa
jne
jno
lock
dec
adc
insb
stc
mov
test
gs
mov
push
jle
jne,pt
adc
xor
jmp
aaa
xchg
adc
add
jno
sbb
repnz
and
test
xchg
pop
addr16
or
in
push
in
inc
mov
pop
mov
loopne
push
inc
lahf
add
push
xor
or
lock
mov
mov
xchg
or
enter
and
clc
lock
mov
lea
filds
sub
add
adc
cmp
and
xchg
leave
add
cmp
adc
jae
subb
and
insl
pop
icebp
aam
or
or
sbb
dec
daa
rolb
fs
jmp
sbb
inc
in
sbbb
es
or
inc
lea
pushf
sub
or
xor
inc
pushf
and
in
loopne
push
sub
adc
sub
movsl
imul
inc
inc
sbb
cld
push
pop
mov
cmp
movsl
bound
cmp
andl
in
cmpsb
mov
mov
faddp
popf
xor
sub
test
add
es
sarb
subb
add
outsl
test
add
pushf
or
stc
das
enter
jl
sbb
fsubs
js
or
jbe
sub
lret
dec
and
pop
cmp
add
loope
js
test
inc
mov
inc
aas
out
cmpsb
sti
jo
test
jp
add
inc
add
and
roll
inc
fsubl
push
jmp
push
adc
inc
sbb
mov
popf
ret
scas
xor
cmp
cltd
and
add
popa
leave
push
jae
dec
adc
ja
arpl
dec
aad
push
xchg
cld
lcall
retw
test
push
dec
dec
add
fildll
popa
inc
xchg
insb
xor
pop
inc
adc
ret
add
ret
popa
cmp
jne
sub
cmp
clc
in
add
sub
adc
xchg
cmpsb
adc
inc
call
sbb
rorb
rorb
in
push
pusha
inc
int3
scas
inc
pop
lock
pop
movsb
push
rcll
jmp
jnp
jo
shll
popa
test
dec
out
cmp
pop
lret
cmp
inc
fldcw
jecxz
and
push
test
push
or
inc
sbb
movsb
popa
and
xchg
sbb
push
bound
sub
cmp
ss
cmpb
mov
mov
sub
push
push
cmp
aad
or
adc
arpl
xchg
dec
das
push
fiaddl
pop
or
add
jo
das
add
mov
imul
add
jae
push
stos
dec
dec
push
das
adc
or
add
clc
sbb
adc
fcoms
popf
push
inc
pop
or
pusha
testl
or
jge
mov
add
inc
popa
iret
popf
lahf
xchg
lea
push
outsl
rol
sbbl
xchg
or
outsl
pusha
pop
repnz
dec
pop
sbb
cltd
shlb
icebp
push
cmp
into
xchg
outsl
sbb
or
sbb
push
pop
mov
sbb
imul
fs
jecxz
or
or
inc
xchg
add
add
ds
movb
enter
or
add
and
cmp
mov
cmc
mov
mov
loop
sahf
xchg
adc
push
jb
and
hlt
rorb
push
dec
sbb
pop
sbb
in
daa
pushf
nop
xchg
mov
and
add
lea
ret
in
sbb
or
stos
pop
aad
clc
jnp
push
sub
lods
gs
cmp
push
xchg
outsb
das
sbb
jmp
mov
mov
shrl
inc
push
xor
lret
adc
dec
pusha
out
divl
pop
push
dec
repnz
sub
xor
testl
fisubs
add
inc
or
push
dec
jae
call
daa
push
lods
sub
in
pop
or
scas
out
mov
repz
imul
in
pop
push
int3
sbb
loope
fwait
jmp
pop
sub
xorl
sbb
sub
mov
stos
sahf
and
outsb
roll
xor
test
outsl
inc
lock
mov
ja
in
add
fs
mov
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
jl
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
mov
sub
add
dec
inc
inc
and
add
mov
jo
push
test
inc
inc
clc
cmc
rcrb
cbtw
push
stos
jle
icebp
push
pushf
xchg
jo
aas
out
jo
ljmp
out
lods
out
mov
and
data16
add
dec
fs
jmp
imul
inc
ss
xchg
pusha
pusha
js
fwait
cmp
ja
inc
sub
or
daa
jns
dec
and
stos
jno
mov
inc
add
in
test
jb
jo
lcall
inc
mov
jmp
add
sub
lods
dec
jne
jp
lds
sub
mov
mov
insl
mov
pop
pusha
sub
hlt
in
cmpsl
push
pop
push
lahf
push
pop
jecxz
adcl
pop
imul
lahf
call
lock
mov
adc
fcomps
sahf
inc
mov
sarb
xor
inc
inc
dec
dec
jbe
rolb
mov
test
sub
adc
out
push
add
jne
pop
loope,pn
dec
jmp
adc
andl
sbb
aas
or
dec
addb
push
inc
mov
and
outsl
jmp
adc
out
and
pusha
stos
ss
push
pop
adc
add
xor
sahf
mov
icebp
mov
xchg
push
mov
rcr
jae
push
xor
clc
lock
push
imul
sti
push
fldenv
pop
and
pop
js
pop
pop
outsb
xchg
cmp
mov
in
xchg
imul
jb
jp
pop
or
push
push
pop
scas
lods
adc
mov
push
and
and
fld
xchg
out
subb
xchg
minps
sbb
das
insb
push
push
dec
jne
pop
pusha
and
ret
nop
ss
xchg
pusha
call
rorl
cmpsb
dec
or
loop
test
push
or
push
dec
mov
addr16
lods
and
sbb
and
test
pop
nop
pop
enter
jo
xor
aaa
mov
inc
inc
mov
inc
les
leave
lret
xor
fmul
inc
enter
mov
mov
jecxz
ja
cld
je
popa
xor
in
mov
fs
in
arpl
aaa
sub
adc
or
jecxz
mov
leave
jno
inc
mov
clc
cmc
xchg
cmp
jne
lock
clc
ret
or
add
rolb
fistpl
insb
sbb
stos
add
clc
push
std
mov
xlat
scas
push
mov
push
pusha
adc
add
rcll
mov
mov
jge
jle
jl
dec
jnp
push
xor
lock
ret
fnsave
inc
ss
es
push
mov
mov
and
fdivs
icebp
push
inc
mov
loope
hlt
add
push
and
rclb
xor
int
addr16
pop
push
push
mov
ficoml
js
test
pop
xor
out
cmp
aad
and
test
aas
aad
int3
pop
roll
mov
adc
jl
sub
cs
repz
jmp
adc
mov
xor
or
cmp
pop
and
popa
sub
sub
mov
mov
mov
fcomi
sbb
pop
xchg
and
sbb
pop
jmp
lret
inc
aaa
adc
popa
stos
lods
inc
pop
das
dec
das
push
mov
xchg
stos
loope
pop
xchg
or
bound
xchg
push
push
pop
ret
pushl
pop
je
jbe
lret
and
push
loopne
ret
push
pop
jmp
adc
iret
jp
mov
inc
push
mov
or
scas
popa
add
and
push
push
xor
rcrl
or
nop
mov
pop
out
mov
and
adc
pusha
pop
inc
lea
out
testb
pop
cmp
jl
or
dec
push
jns
addr16
xor
jmp
push
ss
xchg
or
xor
adc
lret
mov
in
jno
jge
add
xorb
and
insl
mov
add
sub
inc
add
adc
decl
jnp
sub
test
or
xchg
stc
adc
test
xor
insl
ss
dec
in
sar
jle
imul
mov
aas
xor
mov
dec
xchg
mov
cmpsb
jge
push
or
push
push
jae
pop
push
or
adc
cmp
mov
imul
lock
cmpsb
pusha
push
dec
inc
outsb
push
rolb
popf
hlt
icebp
insb
bound
sbb
adc
test
iret
je
jne
ret
mov
dec
cmp
push
popa
cmp
mov
mov
sbb
mov
push
sti
jmp
incl
push
adc
xor
popa
js
pop
adc
lods
out
or
bound
xlat
subb
xor
and
xchg
fs
inc
push
xchg
ss
mov
mov
mov
push
test
xchg
cmp
inc
add
int
and
aas
sbb
imul
test
ja
adc
pushf
clc
movswl
cmc
mov
jne
out
pop
inc
clc
inc
xor
push
xor
add
push
inc
sti
cld
push
cltd
cmp
enter
cmpb
loopne
sbb
mov
mov
loopne
cs
push
stc
loopne
inc
loopne
inc
inc
inc
mov
call
inc
dec
ret
push
jmp
or
add
sbb
cmp
jmp
add
insb
or
mov
pop
jo
jge
je
rolb
adc
xor
add
mov
and
mov
or
cmp
sub
add
pop
sub
jg
adc
pop
or
inc
mov
mov
sub
adc
dec
and
mov
out
jnp
les
xor
fs
push
push
or
ret
fisttpll
pop
in
push
cmp
inc
mov
sub
test
inc
adc
push
rcll
push
dec
adc
push
and
mov
pop
jge
hlt
cmp
lcall
movsb
inc
add
or
xchg
mov
sbb
push
jns
inc
popa
inc
push
mov
je
jmp
popa
faddl
cmp
pusha
cmp
clc
pusha
cs
int3
push
inc
in
sub
mov
movsb
dec
jmp
sbb
jb
mov
sub
adc
mov
inc
enter
inc
fs
repnz
add
mov
mov
fcompl
mov
cmp
aam
int3
out
in
sahf
sbb
push
pop
andb
jns
sarb
and
insb
push
mov
jo
in
sub
je
js
test
loopne
jb
xchg
cmp
adc
mov
inc
jecxz
dec
cmp
sbb
sbb
xchg
and
push
fdiv
incl
leave
dec
dec
inc
add
insl
faddl
jns
push
inc
gs
into
ss
icebp
pop
push
gs
subb
cld
daa
inc
lahf
and
jae
sub
cmp
insl
jo
mov
jns
das
imul
das
ss
add
jae
pop
mov
sbb
dec
pop
js
fidivl
adc
sbb
push
inc
push
popf
xchg
add
adc
inc
add
mov
adcb
push
int
inc
lods
jae
mov
rcrl
mov
insb
dec
push
popf
mov
test
push
sub
ret
mov
rcrl
orb
sub
ret
jmp
push
adc
and
jbe
imul
ret
mov
js
add
jo
cmp
je
loopne
popf
mov
lea
pop
sbb
mov
test
mov
sub
mov
sub
xor
and
test
inc
push
cmp
arpl
adc
rolb
movsl
lea
lea
leave
sarb
push
mov
inc
mov
and
or
dec
js
sbb
push
icebp
inc
idiv
loopne
enter
mov
adc
inc
and
or
loope
outsl
sub
xchg
cmpsl
fsubrl
lods
mov
jno
lock
jg
xor
cmp
adc
enter
xchg
xor
nop
fdivp
iret
xor
mov
nop
mov
add
inc
inc
ljmp
jl
and
insb
loope
test
or
dec
cmp
addr16
cwtl
pusha
add
sub
pop
pop
daa
adc
mov
das
aaa
ja
outsb
mov
or
pop
dec
pop
cs
imul
xchg
adc
cld
cmp
jae
mov
or
in
push
mov
fistl
pop
push
xchg
dec
xchg
imul
pop
mov
pop
adc
xchg
add
loop
fsubs
daa
fists
cltd
inc
pop
pushf
mov
pushf
les
fdivrs
xor
js
pop
and
jo
inc
pusha
pop
mov
enter
xchg
xchg
mov
test
enter
jmp
pop
xor
clc
out
adc
sarb
sahf
add
fdivp
push
adc
jno
fiaddl
xor
hlt
xchg
rorl
cmpsb
ret
sahf
or
sar
adc
mov
or
add
pop
cmp
and
mov
mov
adc
dec
push
bound
and
push
push
bswap
mov
inc
mov
sbb
sbb
push
add
push
imul
insb
mov
imul
cmp
mov
lods
aas
pop
xchg
popa
pushf
test
inc
sbb
add
xor
inc
test
int3
lea
inc
or
xor
aad
lock
sub
movl
adc
jae
dec
repnz
jle
cpuid
into
mov
mov
and
xchg
inc
dec
mov
vmread
loopne
out
stc
add
out
lods
aam
or
ret
push
mov
and
movups
add
je
mov
clc
cmpl
and
out
push
jo
cwtl
lods
shl
sahf
out
enter
sahf
out
sahf
fcomp
loopne
call
jge
push
cmp
pop
in
jb
ss
jg
test
pop
sub
mov
xor
cli
ds
aaa
popa
cwtl
out
and
sti
push
movb
ja
add
sbb
xchg
xor
pop
addl
jl
and
inc
pop
sub
aas
dec
decb
pop
mov
pop
mov
add
mov
lret
jmp
or
add
pop
jno
nop
mov
pop
lcall
pop
cmpl
fdivl
sbb
movsl
pusha
movsb
jnp
addb
inc
add
repz
cs
sti
xor
add
lret
sub
cmp
adc
fs
das
dec
popa
enter
scas
lock
adc
jns
sbb
adc
sub
or
xor
cltd
inc
sub
mov
xor
bound
pop
bound
inc
test
inc
roll
ja
and
insb
sub
jmp
xor
aas
inc
lahf
adc
sbb
sar
and
inc
mov
xor
push
add
push
ja
outsl
adc
push
adc
leave
xor
mov
adc
rorl
lock
or
cmpsl
cmp
es
and
sbb
fisubs
and
dec
jecxz
jge
push
cmp
jle
pop
ds
cmp
adc
mov
add
pop
movsl
mov
int3
pop
xchg
aas
cmp
adcl
pop
loopne
pop
add
jp
xchg
mov
inc
mov
outsb
or
adc
loope
mov
call
imul
mov
jae
cmp
mov
mov
addl
inc
push
or
dec
je
xchg
pop
sti
out
addr16
stc
push
and
sbb
aas
cwtl
lods
ret
inc
sub
cmp
jae
cmpl
fimull
inc
push
je
sbb
cmp
add
xchg
or
pop
inc
sbb
xor
push
push
fadd
pusha
lds
daa
mov
adc
movb
add
add
stos
movsb
sub
add
push
or
aas
add
push
sub
cwtl
add
mov
nop
add
and
and
sbb
dec
xorl
ss
and
imul
mov
push
push
push
icebp
mov
and
dec
mov
test
xchg
sbb
mov
es
mov
inc
dec
dec
shll
dec
dec
cmp
test
cmp
sub
shrl
xchg
nop
mov
pop
xchg
add
fucom
jle
jo
push
dec
scas
fmull
xchg
push
sbb
cmpsl
mov
adc
xor
inc
xor
push
repnz
ret
in
xchg
cmp
sbb
popf
push
sbb
add
popa
leave
add
mov
pushf
jns
sbb
pop
dec
jne
test
and
jle
out
dec
testl
clc
movsl
inc
xchg
sub
jle
cld
je
lds
roll
test
mov
js
popa
rol
sarl
lahf
xchg
inc
push
pop
inc
shrl
je
cmp
mov
movsl
fldt
sub
dec
cmp
mov
push
inc
mov
push
add
xchg
mov
ljmp
cmp
lods
xor
mov
out
adc
aad
pusha
add
stos
cmp
ror
js
int
sbb
cmp
je
jns
inc
sbb
pop
jb
in
push
cmpl
subb
cmp
je
jne
das
enter
mov
dec
or
mov
push
enter
inc
sub
mov
mov
mov
push
cmp
add
lds
mov
frstor
mov
andl
or
jecxz
inc
jge
icebp
test
and
dec
mov
out
js
dec
add
mov
dec
jp
aaa
mov
sbb
pop
movsl
mov
jmp
dec
imul
xchg
jg
sbb
or
add
mov
pop
inc
pop
or
push
mov
pop
loop
invd
push
js
pop
daa
lock
jb
mov
or
inc
out
out
movsb
jae
scas
mov
shll
push
cmpsb
xlat
sti
xor
and
movl
enter
scas
mov
test
call
inc
sbb
mov
jmp
and
cwtl
inc
xchg
sub
xor
xlat
sub
and
jnp
pop
jno
xorb
xor
jo
hlt
stos
xchg
scas
sbb
push
pop
mov
in
pop
call
add
pushf
dec
enter
lds
mull
lcall
fsubrl
adc
xor
movsb
inc
fists
or
scas
cwtl
mov
push
outsb
mov
movsb
shrb
push
adc
and
sbb
push
aaa
xchg
xor
in
pop
xor
mov
subl
dec
mov
inc
inc
cli
fsts
mov
push
out
adc
test
push
fidivrs
int
push
movsl
and
inc
xor
or
adc
and
mov
inc
dec
or
ja
adc
repnz
out
mov
das
lea
push
push
dec
std
dec
sbb
daa
xchg
inc
sub
test
movb
push
enter
push
xor
jge
cld
mov
inc
xor
movl
pop
into
inc
add
sbb
jne
dec
sub
xor
add
mov
pushf
jmp
pusha
andb
data16
sub
pop
mov
dec
ljmp
push
xchg
xchg
pusha
loope
mov
inc
dec
or
xor
lret
pop
and
ret
dec
cmp
cli
pop
sub
lahf
mov
into
adc
dec
mov
test
mov
pop
adc
inc
mov
sahf
jno
int3
xor
das
cltd
adc
out
fdivrs
push
lcall
adc
xor
xor
adc
movsl
iret
call
xor
xchg
popf
movsb
loope
cmp
scas
jl
test
dec
adc
movsl
cld
pop
add
loopne
add
icebp
or
push
push
sub
push
fs
add
mov
cmp
jg
addl
aas
mov
mov
push
push
jp
lods
outsl
push
gs
pop
rcll
xchg
call
and
fnstcw
push
sbb
xor
stos
sahf
stos
adc
or
jae
inc
mov
mov
cmp
sbb
dec
ss
jbe
add
xor
sbbl
sub
push
dec
lahf
inc
pushf
arpl
cmp
nop
sub
iret
xor
push
outsl
inc
shufps
inc
cmp
and
or
pop
mov
jbe
js
adc
push
or
sbb
adc
or
mov
call
cmp
jecxz
jae
test
cmp
pusha
je
sbb
inc
mov
out
inc
jg
dec
sub
dec
cmp
nop
dec
pop
xchg
imul
xor
fidivs
xchg
daa
or
inc
ret
pusha
sub
rcrl
hlt
pop
inc
jle
pop
cmpl
cs
lods
rclb
call
movsl
cmp
add
xchg
push
pop
mov
fwait
xchg
addb
add
dec
or
and
mov
xor
adc
aaa
push
add
andb
aaa
inc
xorb
adc
mov
push
mov
test
cmp
lods
loopne
push
sbb
ret
push
cmp
inc
loope
outsb
inc
pop
loop
loope
lret
rolb
push
sarb
and
adc
xchg
addb
pusha
sarl
inc
add
loop
mov
pop
cs
into
repz
data16
loopne
or
and
lock
xchg
clc
xchg
sbb
in
cmp
pop
adc
push
in
insb
movsb
fwait
inc
testb
push
xchg
and
cmp
ds
int
imul
stos
ja
test
mov
enter
inc
xor
jno
mov
pop
mov
lea
jo
in
mov
ss
dec
cmpsb
in
fwait
push
sbbl
inc
fistps
call
les
and
scas
stos
lods
mov
icebp
cmpl
hlt
dec
jecxz
xor
pop
imul
dec
mov
cli
ror
sti
dec
cmp
cmc
xchg
fsubrs
or
cmp
jne
add
testb
inc
or
mov
cmc
dec
test
ret
cmp
test
daa
jmp
lea
mov
sbb
enter
and
dec
loope
call
subb
inc
aas
and
sarl
or
mov
adc
shll
cmp
out
cmpsb
insb
sbb
orb
jl
pop
inc
stos
sbb
sub
sbb
roll
push
push
je
mov
fsubl
push
ja
lret
mov
fcom
andl
mov
and
out
gs
inc
loopne
aas
test
lcall
inc
jmp
ljmp
mov
mov
dec
dec
insb
add
cmpsl
add
ss
mov
cmpsl
inc
dec
xor
dec
adc
roll
mov
adc
dec
mov
mov
pushf
aam
fistl
popa
mov
daa
mov
or
scas
adc
incb
fdivs
cwtl
popa
pop
insl
cwtl
jg
test
je
add
imul
cmp
in
sub
hlt
pop
hlt
mov
pop
js
scas
dec
clc
es
ds
mov
inc
subl
fiadds
repnz
inc
sbb
add
pushf
adc
jecxz
lahf
rclb
add
pushf
mov
mov
adc
push
inc
jle
push
test
xchg
jg
fstl
rorb
sahf
insl
mov
xlat
push
add
jno
nop
test
les
cmpsl
adc
popf
or
pusha
adc
xchg
ss
stos
jge
lock
adc
adc
ret
adc
in
sbb
aaa
cmp
in
imul
mov
rorb
nop
orb
xchg
dec
xor
or
fsubrl
push
sub
xor
mov
cs
mov
add
dec
inc
imul
scas
adc
xchg
push
ret
xor
movups
lea
pop
xor
and
in
xchg
ds
js
in
arpl
dec
in
push
mov
inc
push
loopne
push
das
dec
scas
push
aas
xchg
stos
cmp
jo
xor
pop
mov
pushf
pusha
mov
leave
or
cmpsb
xchg
xlat
in
fsubr
or
push
les
push
sub
rolb
jg
sub
push
mov
enter
or
lods
adc
add
test
sub
adc
outsb
lods
rclb
add
xchg
fdivrl
xchg
adc
sub
int
xor
mov
dec
jne
cmpsb
add
dec
pop
pop
xor
cmp
es
clc
test
or
xchg
cs
fcmovnb
or
or
mov
push
lods
fists
jecxz
cmp
shll
imul
das
aas
xor
and
sub
out
loopne
int3
mov
mov
and
repz
or
xor
jmp
xor
pop
cmpsl
cmp
jne
sahf
dec
int3
jl
dec
in
fwait
aam
ss
or
cltd
inc
ja
rolb
mov
mov
subl
stos
jb
push
and
push
push
jns
dec
and
dec
fdiv
sbb
scas
dec
dec
test
inc
push
cld
js
test
push
mov
dec
push
mov
insb
test
xlat
mov
push
push
pop
sub
xchg
dec
add
sbb
adc
pop
aas
pop
or
repnz
ret
push
add
incl
mov
cli
dec
pop
cmpb
movb
mov
gs
add
xchg
jmp
add
lcall
mov
xchg
sbb
or
cmp
outsb
push
orb
ljmp
je
stos
nop
mov
and
imul
mov
fcomip
fsts
or
popa
jb
add
popa
jae
jle
adc
xchg
jp
stos
add
mov
mov
pop
push
jl
nop
cli
bound
insb
add
test
lods
or
scas
adc
popa
inc
adc
push
adc
inc
mov
cs
mov
repz
mov
xor
js
lcall
fs
arpl
mov
adc
fsub
stos
icebp
jo
lock
shrl
xchg
inc
add
aam
pop
fcmovb
lds
and
pusha
mov
adc
mov
lcall
ret
pop
or
fstps
dec
int
push
or
push
notl
lret
pop
pop
mov
or
lret
es
ficomps
mov
add
ds
mov
inc
mov
inc
insb
enter
fiadds
push
dec
push
call
pop
xchg
sbb
ds
repz
insb
mov
bswap
call
push
dec
loop,pn
cmp
pop
rcr
sub
lock
cmp
xor
mov
adc
icebp
inc
add
inc
insb
int
add
repnz
mov
inc
cwtl
push
call
cwtl
in
bound
ljmp
in
xor
pop
icebp
dec
js
das
sbb
cmp
cmp
jb
jmp
je
push
lods
out
lcall
sbb
xor
push
xor
loopne
enter
inc
cmpsl
leave
add
adc
test
imul
pop
shl
pop
cmp
int3
stc
mov
push
inc
jl
pop
dec
dec
imul
dec
cmp
sti
test
add
and
ret
outsl
adcl
fbstp
adc
cmp
scas
dec
cwtl
pushf
out
dec
out
sbb
add
sbb
out
dec
lcall
call
into
add
lea
cmp
repnz
ret
or
jne
cmpsl
add
xchg
cmp
and
das
or
cmp
shl
jo
fidivrs
cmp
or
inc
aas
xor
cmpsb
jg
xorb
pop
or
popa
push
dec
pop
mov
loop
push
call
pop
loopne
adc
jecxz
cltd
or
test
jb
ljmp
sbb
jl
popa
cmp
movnti
popa
fs
adc
cwtl
cmp
insl
mov
dec
adc
movl
mov
adc
subb
inc
add
or
xchg
nop
adc
shll
push
add
jns
in
andb
in
mov
mov
mov
mov
daa
push
push
subb
jns
pop
bound
pop
repnz
enter
je
inc
add
add
adc
inc
mov
jmp
call
jl
lret
pop
test
dec
xchg
add
roll
adc
loope
add
xor
or
push
mov
filds
lock
or
add
pop
cmp
out
mov
shlb
shr
or
nop
or
dec
imul
pop
pop
and
jl
or
idivl
push
dec
bnd
add
stos
add
add
addr16
lds
andb
jge
xor
or
xor
push
mov
adc
aam
xchg
pop
es
jnp,pn
into
cwtl
add
jns
mov
into
int3
enter
or
or
sub
dec
rcl
or
nop
mov
shr
call
cmp
jno
adc
jo
aad
popa
jo
xchg
fchs
inc
dec
repnz
mov
push
jb
arpl
popf
int
scas
fdivl
or
xchg
add
and
divl
fdivs
add
mov
sub
popa
test
outsb
outsl
jnp
frstor
popa
sbb
and
push
sbb
int
mov
push
push
daa
in
fwait
add
mov
pop
xor
and
inc
jne
inc
scas
fcoms
inc
push
sub
ja
jle
adc
or
adcl
push
loope
leave
adc
les
xchg
mov
xor
popa
ljmp
cwtl
push
pop
and
push
hlt
loopne
mov
cwtl
push
test
ret
inc
test
mov
mov
or
nop
xlat
sub
pushf
xor
sbb
test
lods
jo
jo
xchg
paddsb
mov
xchg
jo
sbb
and
jl
imul
andl
cmp
cmc
mov
and
xor
xor
xor
pop
push
les
test
dec
dec
dec
dec
dec
dec
dec
dec
sub
inc
enter
push
push
imul
and
xor
adc
nop
xor
xor
push
cmp
cltd
test
js
inc
jne
dec
push
sbb
into
jmp
sbb
xor
adc
xor
lret
jae
inc
cli
and
add
add
mov
or
xor
dec
push
outsl
leave
lods
lcall
mov
fsts
pop
rolb
xchg
pop
push
xor
pop
add
idiv
pop
cmp
sbb
add
stc
and
pop
cwtl
rcr
sub
sub
clc
dec
mov
or
je
push
test
sub
jg
cmp
in
addr16
mov
push
inc
jge
shrl
dec
jae
and
xor
and
mov
imul
mov
xor
xchg
pop
mov
adc
xchg
mov
mov
push
xchg
sbb
ret
add
xchg
or
imul
jmp
loope
mov
ret
aaa
nop
jmp
enter
inc
inc
inc
dec
pusha
lret
and
jo
dec
call
pop
dec
jecxz
mov
or
call
jns
dec
mov
add
les
add
sbb
mov
pop
insl
aas
mov
jmp
xchg
xor
xchg
and
hlt
pop
sub
test
inc
mov
push
xchg
lock
test
adc
lods
iret
fiadds
bswap
or
dec
ljmp
mov
sub
jl
xchg
jl
aas
clc
xchg
jmp
addr16
in
loopne
faddl
mov
pop
or
pop
push
fdivrs
xor
jmp
xor
or
push
pop
iret
popa
push
xor
pop
sub
lahf
loopne
xchg
jmp
mov
mov
sub
dec
xchg
jmp
inc
sti
push
add
push
enter
outsb
ret
inc
cli
pop
int3
mov
pop
mov
push
mov
std
test
mov
and
imul
pop
arpl
xor
mov
mov
push
push
mov
lock
inc
pushl
sbb
xor
fiadds
mov
pusha
je
mov
add
test
sti
mov
popa
inc
cmp
jg
mov
ret
add
mov
test
dec
sbb
cltd
insl
xorb
clc
icebp
mov
pop
cwtl
ljmp
out
mov
add
xchg
push
jle
arpl
mov
push
es
sub
push
push
or
sub
lock
iret
leave
shll
jo
imul
mov
jmp
jmp
xor
inc
cmp
push
xor
pop
xchg
je
out
jbe
aaa
in
xlat
adc
fsts
out
cmovle
dec
adc
dec
jecxz
testl
cmp
imul
sub
and
mov
add
add
adc
pop
insb
sbb
inc
imul
mov
push
dec
push
nop
cmp
je
xchg
pusha
aaa
mov
add
clc
pop
fisubl
cmpb
xor
nop
fnstenv
sbb
mov
or
movzbl
cmp
filds
addb
push
addr16
inc
sub
imul
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
xlat
test
and
fwait
aas
fcomps
sub
movsb
je
wrmsr
add
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
mov
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
andb
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
ret
push
or
fdivrs
jmp
jb
pop
imul
mov
dec
jg
cmpl
adc
and
in
sbb
cltd
inc
shrd
nop
push
add
sbb
fimuls
mov
and
cmpsl
add
xchg
add
add
dec
add
rolb
leave
push
ficomps
ret
and
inc
ror
dec
jnp
outsl
ret
call
dec
xor
imul
mov
cmp
pusha
dec
jae
xor
fs
push
fmul
adc
testl
test
subb
push
dec
sarb
addb
or
add
or
pusha
aam
cmpb
sbb
xlat
and
call
int
lcall
jo
sti
shlb
dec
cld
adc
flds
inc
adc
lods
or
push
cmp
mov
or
icebp
or
je
mov
push
shrb
dec
idivl
out
ret
mov
xor
pop
cmp
adc
xchg
roll
xlat
sub
dec
cmpsb
loope
jmp
xchg
push
and
test
push
test
in
cmp
dec
insb
sti
cmp
jo
sub
push
inc
fdivl
adc
pop
mov
mov
push
or
push
in
jmp
inc
lret
adcl
xor
inc
lcall
pop
xlat
xchg
inc
or
sub
inc
cld
dec
sti
psrld
add
adc
enter
pop
jo
push
iret
sub
leave
mov
push
mov
adc
pop
adc
adc
mov
mov
mov
popa
mov
and
and
sub
mov
lock
sbb
pop
nop
inc
inc
or
inc
sub
pop
and
and
lods
testb
sub
shlb
push
aas
in
xchg
and
or
sbb
xchg
xorb
push
jecxz
inc
and
jnp
push
adc
stos
push
je
jp
mov
testb
icebp
sahf
or
adc
lock
xchg
out
add
xchg
negb
pop
add
adc
scas
clc
or
cmp
decb
inc
jo
hlt
rcrb
cmp
jp
int3
push
or
rcrb
and
pop
aaa
cmp
xor
jns
pop
cmp
mov
pop
dec
pop
flds
icebp
mov
lahf
mov
pop
inc
cmp
push
aad
mov
and
jae
mov
fldl
jl
xor
sbb
push
pop
inc
loope
rorb
inc
movsb
dec
xor
mov
mov
or
mov
adc
push
push
dec
or
ret
data16
inc
rcll
xchg
inc
sub
push
cltd
clc
xor
sbb
xchg
and
xor
mov
in
test
pop
xor
dec
rcll
clc
and
loope,pn
rorb
xor
mov
cmp
adc
add
mov
and
add
mov
movl
xor
mov
lahf
hlt
shlb
mov
jo
xor
xchg
lretw
outsb
call
ret
stos
addl
add
sub
pop
test
xor
xor
shll
sbb
pop
aad
jle
jg
insl
outsl
jmp
js
add
je
mov
pop
inc
cmp
test
orb
jecxz
jo
or
xor
jns
cmp
mov
subl
mov
sbb
shrb
xchg
adc
cwtl
out
sub
or
cmpsl
xor
add
or
pop
orb
andps
inc
mov
icebp
scas
xchg
mov
mov
dec
js
movsl
rcll
xor
inc
idivb
fisubl
jl
imulb
je
inc
or
bound
insb
and
pop
xor
push
ss
popa
dec
xlat
or
adc
loopne
stos
inc
cmpl
jmp
iret
dec
cmp
int3
xchg
mov
pop
adc
test
cmc
mov
and
dec
pop
notl
stc
lock
mov
enter
fiaddl
add
std
xchg
jo
lock
out
and
movl
movsl
mov
data16
sbb
shlb
xchg
push
les
push
sbb
ss
shll
mov
loope
and
and
dec
pusha
inc
xchg
outsb
add
addr16
hlt
mov
mov
add
sub
jnp
lock
imul
inc
xor
sub
sbb
hlt
xor
xchg
sub
jo
shll
testb
push
sti
popa
test
sub
or
jo
mov
jns
imul
addr16
insl
test
dec
xor
xchg
jmp
and
nopl
dec
adc
push
insb
clc
push
inc
lock
inc
cwtl
pop
add
leave
inc
popa
imul
jl
mov
pop
push
push
inc
adc
idivb
imul
imul
xlat
mov
inc
mov
fs
pop
mov
jge
xchg
push
pop
cwtl
push
mov
sbb
jb
sbb
repnz
ss
or
push
jno
sub
xchg
dec
incb
push
add
inc
push
sub
int3
push
enter
sub
roll
pop
add
movsb
xor
and
pop
adc
test
pop
and
lea
xor
xor
mov
cmc
sub
add
andl
cmp
or
sbb
mov
xchg
iret
hlt
cltd
fmuls
rcl
sbb
pop
into
hlt
sub
inc
add
test
lcall
dec
outsl
mov
or
pop
jns
stos
sbb
xor
cs
sbb
xor
leave
lock
rorl
add
movsb
loopne
add
jp
xchg
pop
fildll
push
and
nop
push
in
or
mov
movsl
or
fsubrs
dec
ja
addb
clc
loopne
push
xor
or
xchg
or
loopne
ret
xchg
ja
outsb
aaa
fistps
leave
addl
add
loopne
ja
dec
jmp
push
sbb
add
add
test
pushf
pop
lock
or
ret
xchg
call
dec
iret
push
inc
les
enter
sub
notl
lcall
sbb
loop
or
adc
adc
inc
js
push
sbb
mov
andb
addl
cwtl
jbe
or
add
sub
add
sub
enter
jge
fs
test
in
push
sbbb
push
lock
push
xor
xor
add
pop
in
add
add
je
push
shll
ret
cmp
adc
dec
call
outsb
pop
lods
inc
sbb
push
and
test
push
movl
ficompl
mov
mov
setge
enter
pop
les
xor
clc
loopne
mov
pushf
push
or
and
insb
stos
inc
clc
mov
rclb
mov
enter
clc
sub
inc
movsb
nop
lock
dec
lock
and
repnz
fbld
loopne
es
cmp
movsl
cmp
add
clc
arpl
push
movsl
sub
pop
xor
insl
adc
push
inc
pop
in
and
sbb
dec
sub
add
call
adc
in
add
leave
test
sbb
mov
or
out
loopne
sbb
add
cmp
inc
mov
add
inc
pusha
add
data16
pop
cmp
popf
ficomps
inc
movb
jecxz
dec
dec
int
rcl
sbb
add
xlat
and
sub
cmpsl
dec
shlb
mov
jae
jl
push
push
cmp
jge
sub
shl
je,pt
fs
push
shrl
adc
lcall
aaa
aas
mov
pop
xchg
inc
push
dec
fsubrs
mov
je
loope
sub
in
dec
insl
fisubl
push
sbbl
mov
sbb
mov
mov
add
lret
pop
pusha
mov
jp
loope
inc
stos
repz
pop
jl
or
adc
call
aam
movsb
dec
out
scas
movsl
mov
test
push
dec
lea
je
dec
or
sbb
and
push
nop
fcmovbe
sarb
dec
add
mov
ret
sub
or
mov
push
add
repnz
mov
das
nop
xor
mov
dec
pop
mov
cltd
add
mov
out
push
rcrl
sbb
mov
mov
incl
xchg
mov
sbb
call
xor
push
sub
shl
dec
movsl
sbb
aad
mov
aaa
dec
dec
ficomps
sbb
ljmp
mov
es
mov
mov
lcall
loope
lret
cwtl
popa
xor
mov
push
cmp
cld
ja
sbb
jae
add
jge
jle
push
xor
xchg
push
pop
adc
add
data16
add
dec
arpl
xchg
shlb
or
adc
cmc
mov
ds
incb
add
mov
jp
scas
clc
xchg
push
out
lods
and
and
ret
les
dec
inc
inc
cmp
cmpsb
dec
fstl
aam
or
pop
or
pop
xor
cmp
pop
insl
and
pop
outsl
cmp
jle
sub
mov
or
add
jb
addr16
jg
pop
jp
aas
pop
shrb
test
fnstenv
cmp
mov
inc
fadds
daa
inc
dec
adc
addb
and
and
test
push
mov
pop
pop
sarb
mov
mov
push
lods
add
cmpsl
cmp
lea
adc
pop
xor
inc
jbe
sbb
jo
pop
cmpsb
fsubrl
mov
add
addr16
cmpsl
out
aas
je
inc
adc
fmull
in
in
pop
and
jne
mov
push
jne
jno
pop
movl
cmp
mov
pop
xor
add
pop
test
adc
pop
into
pusha
lds
mov
mov
nop
dec
ds
inc
push
inc
inc
rcll
and
sbb
leave
outsb
xor
or
imul
sub
mov
lock
jbe
mov
push
pop
test
dec
pop
mov
arpl
ret
jge
imul
or
mov
inc
outsl
bound
rol
rorl
dec
cwtl
cmp
add
lret
and
cltd
lret
fs
pop
shll
out
inc
fcmovu
mov
xchg
es
lea
xchg
or
je
mov
scas
add
out
js
xchg
outsl
jmp
jge
outsb
pop
dec
imul
push
aas
jbe
and
into
aaa
mov
fsub
mov
popa
test
shll
outsl
popa
xor
sbb
inc
mov
aad
test
mov
or
mov
sbb
out
pop
sbb
push
push
mov
pop
xchg
push
pusha
pop
pushf
add
addr16
jge
or
or
imul
sahf
gs
jns
add
add
mov
xchg
xchg
outsb
jmp
jne
xor
fbld
movsl
fcoms
sub
lahf
and
scas
add
mov
add
xor
inc
dec
repz
inc
and
arpl
lock
cmpsl
and
add
movsl
mov
and
pop
sub
mov
lret
shrl
mov
insb
xor
dec
repnz
sbbb
popa
mov
ret
push
fsubs
es
enter
in
in
pop
push
ss
js
test
xchg
xorb
inc
pop
xorl
xchg
push
insb
cmp
pop
pop
and
inc
jmp
inc
mov
cli
sbb
mov
dec
ret
xchg
dec
inc
dec
or
fsubl
mov
cs
nop
inc
dec
mov
cltd
nop
fiadds
push
repnz
pop
lock
cmpsl
mov
xor
in
add
lods
dec
add
mov
loop
mov
jg
stos
das
lods
out
scas
out
cmpl
pop
clc
addb
jo
iret
lcall
fdivs
sbb
or
js
and
cmp
cmp
ja
push
fdivrl
fs
lret
push
cmp
fstps
mov
cmp
jnp
es
push
push
loop
popf
mov
xchg
sti
mov
imul
aas
pop
mov
push
les
jns
cmp
mov
fcomps
xor
test
insb
ja
lods
shll
push
pop
push
rcl
les
lea
pop
lea
aas
insb
mov
in
inc
xchg
jne
sar
jmp
mov
jle
push
push
data16
push
ds
mov
add
adc
inc
lods
pop
cmp
and
arpl
cmpsb
push
shlb
mov
incb
and
cs
mov
xor
in
mov
lcall
or
inc
or
xor
push
pop
push
inc
xchg
xor
adc
insb
xchg
iret
inc
sub
mov
mov
and
pusha
mov
scas
or
or
ffree
jmp
mov
loop
jmp
enter
push
in
mov
xlat
jl
inc
or
sbb
and
loop
ja
sbb
scas
rolb
adc
and
into
xor
gs
add
and
push
outsl
mov
mov
inc
ret
shlb
nop
test
or
push
ret
mov
sub
out
xorb
jecxz
pop
adc
in
fwait
cltd
bound
dec
xor
push
jnp
inc
adc
add
xor
les
mov
sar
call
js
mov
dec
or
jno
push
sub
outsl
adc
cwtl
lahf
inc
leave
mov
push
mov
mov
rcrb
and
inc
nop
loope
fisttpl
ret
dec
jne
jnp
pop
mov
or
inc
fdiv
mov
rorb
push
lock
inc
mov
inc
add
pushl
push
imull
or
cld
push
aas
stc
xchg
push
push
jmp
pushl
dec
push
lea
inc
add
and
xor
sub
push
mov
mov
add
sarl
lcall
les
in
inc
leave
dec
add
call
adc
inc
out
mov
cmp
jl
mov
sbb
push
call
or
fcmovnu
mov
sub
test
mov
fs
cltd
nop
mov
cltd
fimull
sub
enter
movsb
into
mov
cmp
stc
or
cmp
inc
mov
or
mov
ss
add
les
jns
in
pop
or
jne
dec
push
pop
outsb
je
pushf
dec
xor
push
outsl
push
sbb
aam
je
push
sbb
push
fldenv
shlb
or
out
or
push
pop
adc
int
xlat
xor
sarl
lea
movsl
cmp
data16
shlb
mov
mov
push
les
xor
mov
dec
xchg
adc
jne
and
js
push
inc
sbb
mov
jns
jbe
orb
dec
inc
aas
in
fisttpll
dec
add
mov
enter
lea
scas
in
jnp
inc
aaa
xor
cmp
or
adc
xchg
mov
pushf
cmp
adc
push
or
jle
jecxz
pop
xlat
orb
cmp
je
fsub
adc
lods
xorb
or
loopne
pop
push
call
sahf
insb
movsb
jns
pop
leave
adc
sbb
sbb
ret
clc
arpl
pusha
sbb
addr16
add
jp
cli
jge
push
insl
push
sub
aas
lea
mov
cmc
sbb
nop
mov
and
mov
inc
es
and
aad
mov
mov
popa
or
sbb
fsubrs
shl
sbb
ds
int3
cmpsl
ret
stos
fcmovnb
call
movsb
add
mov
test
pop
cmp
stos
dec
fdivs
sbb
lods
and
lods
adc
cli
xchg
inc
and
mov
adcb
adc
es
sbb
dec
ja
sti
jl
inc
test
mov
jmp
cmp
inc
rorb
push
pusha
into
mov
dec
ret
inc
sbbl
testl
or
inc
test
test
add
popa
adc
pop
jne
loope
in
mov
fistl
movsb
aad
mov
dec
enter
aaa
dec
and
mov
inc
jne
and
nop
idivb
mov
inc
cmp
pop
cmpl
insl
jl
adc
jmp
mov
or
adc
pop
push
cmp
add
xchg
sbb
mov
subl
add
xchg
fprem1
inc
xchg
mov
pop
int3
or
xor
add
mov
add
cld
fdivrs
add
adc
inc
cmp
clc
fmuls
add
test
mov
inc
inc
jae
sbb
push
sbb
into
dec
push
inc
xor
out
mov
dec
ret
inc
stc
xchg
jae
dec
daa
pop
sar
fdivrs
push
mov
or
xchg
cmp
push
dec
cmpl
push
cwtl
ret
add
mov
inc
fcoml
push
add
pusha
xchg
sub
mov
or
lock
and
or
sbb
add
in
cld
fildll
pop
push
push
out
sbb
inc
popf
jp
scas
push
push
dec
pop
std
add
and
rorb
push
pushl
sbb
sub
gs
add
push
or
call
out
add
and
aad
test
punpckhwd
xchg
call
fdivrl
add
js
int3
js
nop
insb
or
push
mov
mov
pop
pop
ret
or
mov
mov
cltd
push
hlt
rolb
or
sti
pop
sbb
addr16
cmp
in
fcoms
cld
or
sbb
or
into
aas
clc
mov
or
sub
pop
adc
test
or
or
out
push
xor
test
insb
inc
sbb
sub
jo
or
ret
movl
and
aaa
push
mov
xor
xor
test
sbb
loopne
add
jecxz
xchg
int
ja
in
into
xchg
cmp
rolb
fbld
ret
add
add
xchg
jbe
dec
xchg
fsubrs
jp
adc
movb
adc
push
cli
in
mov
loopne
adc
lods
popa
imul
add
jge
ljmp
xor
or
divl
cmp
add
xlat
cwtl
adc
inc
sbbb
call
mov
adc
pop
add
dec
loopne
or
push
add
push
and
mov
popa
lds
inc
or
add
add
or
pop
loop
xchg
data16
cli
add
add
push
fsubrs
inc
sub
push
and
push
mov
pop
push
add
pop
jecxz
mov
sbb
rcr
repz
jbe
inc
cmp
ret
dec
push
push
cltd
nop
cld
addr16
dec
xchg
add
repz
inc
addr16
mov
push
jno
xor
arpl
mov
push
cltd
push
push
loope
test
popa
pop
rcl
add
decb
pop
sbbb
or
mov
mov
cmovae
sub
inc
sub
ss
sahf
dec
cmp
and
sub
mov
push
ja
pop
fldcw
sbb
mov
test
jmp
inc
cmp
je
xor
dec
mov
lcall
dec
ret
ret
mov
lods
inc
dec
inc
cmp
addl
ss
jne
jp
aas
pop
lea
cld
mov
pusha
jno,pn
sbb
outsl
test
fxch
das
insb
jecxz
addr16
test
mov
inc
push
lahf
jo
ret
add
mov
add
and
push
lcall
loope
jle
pop
clc
jb
bswap
insl
ja,pt
mov
loopne
test
sbb
jecxz
push
sbb
adc
jo
add
ret
cmp
pop
push
mov
jl
jmp
sbb
sarb
dec
xchg
data16
add
xlat
add
push
sbb
in
mov
mov
sbb
xor
jecxz
or
inc
mov
xor
jbe
sbb
bound
push
mov
pop
adc
hlt
mov
mov
inc
or
xchg
iret
push
lock
and
adc
adc
cmpb
in
hlt
or
addr16
mov
std
or
ret
loopne
and
bound
dec
outsb
and
or
add
les
aaa
mov
pop
xchg
test
dec
aas
in
in
jae,pn
iret
dec
inc
jns
and
in
mov
ja
and
mov
nop
or
cs
push
outsl
and
xor
adc
je
ret
sbb
adc
sbb
mov
xchg
jno
jmp
xor
in
adc
cmp
leave
xchg
dec
fs
sbb
mov
das
sbb
mov
jns
cs
jnp
sub
inc
out
push
mov
sub
cmp
and
daa
mov
test
jge
or
dec
xchg
movsb
sub
and
clc
push
sbb
mov
jmp
adc
hlt
pop
pop
pop
cli
fs
lret
xor
jo
ret
fs
fwait
sti
mov
inc
lock
call
xlat
aam
mov
lock
fimuls
orl
cs
adc
and
dec
shrb
dec
push
mov
mov
cli
cmc
push
xor
gs
idivl
add
jmp
sbb
or
ss
out
int3
lods
mov
fidivrs
add
insl
addl
jl
adc
loopew
mov
decw
nop
or
mov
jno
and
fwait
jmp
sbb
add
xchg
test
xchg
mov
into
or
scas
sbb
adc
xchg
in
push
nop
push
in
aaa
movsl
fiaddl
xchg
mov
bound
push
push
ss
icebp
add
lcall
loope
clc
pushf
lods
addr16
push
xor
mov
cmpb
sti
mov
and
movb
pop
fmull
decl
sbb
mov
pop
inc
loopne
jb
or
int
push
movsl
js
cli
mov
insb
cmp
xor
inc
lock
hlt
add
mov
inc
inc
pop
mov
aaa
sbb
inc
test
push
insl
pusha
mov
push
pop
push
mov
ret
and
push
sbb
push
bound
mov
push
mov
add
push
adc
pop
and
cmp
ret
adc
mov
sbb
pop
js
jb
pop
imul
fcoms
adcl
cmc
push
mov
ja
out
push
add
in
add
mov
mov
rcrb
add
inc
loopne
adc
cwtl
push
mov
or
jmp
mov
jbe
inc
adc
dec
dec
push
or
mov
aaa
js
mov
arpl
cmp
adc
inc
push
jno
and
inc
push
pop
adc
or
xchg
xchg
insl
sbb
jns
cld
iret
call
pop
dec
inc
aas
cmp
sbb
or
add
test
ds
loop
repz
jae
les
popa
je
or
les
push
jmp
stos
nop
hlt
jl
inc
pop
xor
nop
int3
adc
nop
shr
cmp
push
fbstp
adc
addb
jl
fildll
or
pusha
add
fwait
arpl
scas
test
push
andl
shrb
or
add
daa
sub
int3
add
adc
out
cltd
xchg
das
jns
add
adc
cmpsb
adc
dec
xchg
addb
add
imul
xchg
pop
imul
loop
testb
add
mov
test
mov
jne
adc
sbb
mov
xor
push
in
add
fld
adc
and
repz
dec
dec
sbb
cmpl
idivb
push
mov
sahf
add
or
imul
sbb
cli
add
inc
repnz
lahf
es
loopne
adc
sbb
jmp
and
int
addl
push
and
cmp
sbb
push
sti
inc
sti
mov
push
out
xor
pop
or
scas
aaa
daa
or
clc
mov
sbb
sbb
lock
test
and
xor
xor
fdivrl
mov
add
adc
push
sbb
mov
fmull
imul
xor
sarb
cltd
mov
in
mov
mov
cmp
inc
xchg
cli
pop
push
xor
lea
sbb
add
xor
push
push
dec
xlat
out
push
adc
adc
xchg
add
adc
push
jo
inc
fdivr
roll
in
repnz
mov
cmovg
setl
dec
in
mov
push
in
dec
pop
xor
shrb
lcall
sbb
xchg
xchg
cmp
fisttpl
sub
lret
jne
jb
bound
test
push
dec
fstps
or
mov
adc
cmp
mov
cmp
and
ss
xchg
lods
dec
rcl
jmp
push
lds
jecxz
clc
xor
imul
rolb
dec
inc
or
or
dec
es
push
icebp
or
add
out
sahf
pop
push
loope
add
add
lods
movl
addl
je
jne
pop
cmp
cmc
add
cmp
inc
popa
add
les
or
add
mov
mov
cmpsl
add
push
and
sbb
cmpsb
pop
je
mov
add
mov
push
mov
mov
aaa
dec
xor
lods
add
mov
rclb
cmp
dec
jmp
jge
xor
ret
sbbl
shlb
aas
aas
cmpb
rorb
xor
or
push
add
pop
ret
adc
and
xchg
mov
int3
pop
movups
sub
pop
adc
pop
or
push
push
daa
pop
cmpsb
add
inc
xor
jmp
dec
inc
xor
lret
mov
insl
gs
mov
std
mov
lcall
sub
sub
and
movzwl
pop
imul
xor
fnstcw
push
stos
adc
fs
dec
outsl
add
cmp
ficomps
xchg
mov
nop
ds
sbb
loopne
jg
sbb
xor
movsl
ret
add
imul
sbb
xor
outsb
testb
aaa
add
jg
or
sbb
or
jg
push
sbb
jmp
jbe
sbb
dec
add
addr16
xor
cmpsb
jmp
repnz
pusha
cmp
dec
ja
and
push
pop
vpshuflw
loope
mov
clc
out
push
cmp
jne
inc
ss
xchg
sub
sub
sbb
and
adc
sub
fwait
mov
movsl
std
jmp
sbb
stos
pusha
pusha
sti
pop
inc
jg
test
lock
ret
sub
pop
daa
cmp
mov
lock
jl
mov
imul
and
push
jmp
les
add
jl
inc
sbb
insl
dec
popl
jge
mov
scas
arpl
and
popa
adc
push
and
ret
sbb
ds
stos
imul
adc
inc
jae
cmp
nop
push
jns
iret
repz
sub
rclb
cld
out
jns
out
dec
js,pt
inc
or
pop
fcompl
cmp
cmp
sbb
cmp
dec
fsubrs
les
idivl
pusha
and
out
out
in
sbb
push
adc
dec
and
gs
push
add
lods
cmp
dec
mov
nop
nop
inc
adc
adc
mov
mov
mov
push
jnp
jo
inc
dec
cmp
test
adc
mov
xchg
xchg
out
aaa
add
insb
mov
and
movsb
mov
mov
test
add
cli
add
add
mov
filds
or
lcall
in
aad
hlt
cmp
push
ss
pop
adc
inc
insb
popa
je
je
adc
add
testl
int3
pop
mov
inc
nop
icebp
dec
push
pop
dec
add
nop
cmp
int
jmp
and
outsb
mov
xor
add
add
pop
add
add
jo
add
adc
sub
mov
sub
jno
fs
scas
cld
mov
or
pop
mov
aas
or
clc
lock
or
inc
push
or
sbb
fdivrp
and
sub
rolb
add
test
sub
add
cmp
out
inc
adc
inc
dec
inc
inc
push
dec
cmp
pop
sub
in
pop
push
insl
outsl
fs
add
inc
scas
test
inc
roll
lock
lret
mov
or
inc
push
push
enter
pop
sbb
ret
arpl
mov
pop
push
je
and
or
sbb
jl
js
or
das
adc
and
mov
or
divl
dec
inc
imul
inc
fs
js
pop
inc
sbb
sbb
sbb
ds
sbb
push
mov
pop
cld
inc
inc
repnz
pop
adc
test
mov
dec
inc
add
inc
testl
dec
jbe
push
add
inc
ja
cmp
fisubrs
sub
nop
and
in
jp
stc
push
and
push
inc
cmp
or
inc
nop
add
jne
pop
xor
xchg
sbbb
loope
mov
stos
push
push
jge
inc
dec
inc
jp
jae
dec
aaa
dec
or
or
and
dec
aam
sub
add
add
push
mov
pop
inc
add
xlat
push
pop
mov
cmp
or
ret
push
jp
or
jle
fisttpll
gs
in
mov
leave
rorb
add
cli
mov
prefetch
sbb
mov
xchg
xchg
inc
dec
movsl
sbb
out
and
int3
inc
std
das
mov
popa
pop
adcl
cwtl
or
jnp
nop
push
shl
int
jns
xchg
pop
add
enter
dec
aaa
jb
les
sarl
and
inc
jnp
add
cmp
or
lods
or
mov
xchg
addr16
cwtl
sbb
sbb
arpl
mov
es
sub
sbb
add
es
adc
outsl
cwtl
pop
inc
xlat
push
pop
outsb
divl
xchg
nop
or
lea
pop
jl
jo
addr16
adc
adc
ret
adc
rcrl
and
push
push
fbld
andb
jge
xorb
adc
shll
orb
dec
repz
fs
mov
mov
and
add
fs
mov
roll
insl
popa
jb
or
push
push
push
out
mov
pusha
popa
sub
iret
insb
push
jo
addb
out
sbbl
or
pop
ds
add
iret
add
lea
or
xor
setne
dec
imul
popa
or
iret
add
mov
add
enter
sbb
sub
push
rcr
push
ficomps
aam
xchg
jne
adc
jo
xchg
pop
sarb
mov
inc
test
or
mov
add
addr16
push
push
dec
push
add
inc
outsb
jge
inc
out
mov
neg
dec
pop
push
pop
nop
loopne
and
test
shrl
fisttpll
dec
xlat
lea
xchg
lcall
and
mov
cmp
pop
and
and
jle
mov
clc
inc
clc
sbb
dec
inc
add
push
jl
enter
jne
pop
push
int3
push
inc
pop
jle
lods
sbb
into
push
fs
inc
inc
add
sub
fcompl
cwtl
inc
add
mov
inc
movsb
and
push
clc
mov
inc
inc
sbb
inc
mov
arpl
jb
pslld
sbb
inc
adc
testl
add
mov
incb
into
data16
mov
nop
call
clc
dec
mov
repz
pop
push
pusha
sbb
push
xchg
fs
cli
inc
call
add
jmp
or
and
pop
ljmp
add
add
inc
imul
inc
loop
sbb
mov
push
add
fsubl
xchg
or
adc
jp
mov
scas
add
or
jg
mov
mov
pushl
push
push
ljmp
pop
adc
stos
iret
cmp
shrb
dec
jle
test
push
enter
in
add
jns
divl
in
addb
enter
notl
push
inc
test
test
cwtl
imul
xchg
xchg
lock
mov
jo
sub
ss
push
xor
lahf
repnz
aam
dec
mov
sahf
out
sub
je
pop
int3
cmp
flds
push
movsb
jnp
pop
fistpll
inc
pop
into
cwtl
mov
int3
jl
mov
jnp
xchg
es
gs
cmp
mov
loope
sarl
mov
cmp
mov
lahf
pop
and
loope
jp
pop
shll
out
insb
and
add
dec
daa
pusha
and
sbb
fnstcw
ret
or
sbb
dec
ret
push
movsl
cld
and
pop
push
cwtl
or
or
or
data16
rclb
sub
push
or
leave
mov
jmp
lret
loopne
sbb
clc
mov
cltd
push
pusha
add
jo
mov
out
out
push
decl
mov
in
add
aaa
jb
add
cmp
add
inc
add
pop
inc
adc
test
mov
adc
xchg
maskmovq
notl
inc
dec
gs
push
ljmp
sub
add
pop
add
ja
pop
insb
add
incl
sbb
add
inc
add
xchg
jne
mov
insl
xor
cmp
sbb
pop
inc
clc
adc
sbb
sbb
lock
add
sbb
call
adc
sbb
dec
xchg
push
xchg
in
push
add
inc
repnz
add
adc
pop
xor
and
and
adc
and
xor
mov
or
and
jb
dec
andl
mov
cmp
and
and
adc
in
pop
das
int3
je
aam
insl
sub
or
roll
pop
inc
test
pop
push
lock
add
push
pop
sbbl
jmp
mov
and
movsb
stc
dec
cmp
sub
icebp
jmp
fwait
sub
shlb
rolb
push
mov
push
or
xor
jno
pop
pop
xor
aam
insb
fs
mov
jne
jecxz
mov
adc
dec
pusha
jo
push
inc
pop
dec
rol
mov
or
adc
sbb
mov
xchg
nop
imul
mov
ds
jae
mov
xlat
sub
inc
pop
pop
dec
xor
xor
arpl
pop
xchg
cmp
xor
xor
fnstsw
and
hlt
pop
sub
out
xor
mov
aas
int
addb
push
hlt
inc
ss
push
sbb
and
add
loope
jns
jns
push
mov
in
cmp
jmp
data16
inc
or
and
clc
jle
out
fbstp
scas
inc
add
jge
pop
pop
cs
jle
insb
push
lret
cmp
aad
and
pop
pop
xchg
cmp
add
dec
push
dec
enter
or
test
aas
pop
xchg
xor
xlat
and
xorb
adc
test
nop
fcoms
aas
fwait
inc
pop
inc
cwtl
dec
lods
test
stos
inc
adc
loopne
insl
push
or
and
inc
inc
inc
fs
sar
rolb
mov
xchg
inc
mov
inc
inc
movsb
test
jmp
outsb
clc
jns
mov
shlb
pop
push
pop
ret
inc
pop
jb
dec
nop
inc
mov
inc
dec
stos
fs
das
inc
push
inc
xchg
dec
gs
xchg
pop
leave
jl
dec
add
and
mov
test
test
inc
inc
test
and
dec
inc
push
and
push
xor
push
cmp
inc
push
and
inc
push
cmp
in
mov
cmp
imul
nop
das
in
push
add
pop
enter
push
dec
adc
push
cmp
insb
in
push
hlt
das
mov
test
mov
repz
push
inc
pop
test
test
nop
rcrb
test
jns
ror
enter
in
mov
rorl
enter
xchg
or
jg
or
hlt
lods
cmp
pop
push
cmp
pop
leave
add
aas
rcrb
lcall
repnz
inc
mov
mov
imul
xchg
push
iret
mov
iret
clc
push
popf
out
data16
lcall
cs
or
out
pop
sub
mov
push
test
mov
or
nop
in
add
mov
inc
pop
or
vminss
mov
iret
pop
imul
push
mov
out
mov
cmovo
adc
cmp
movups
and
adc
inc
shrd
enter
loopne
xchg
nop
adc
scas
inc
xor
xor
leave
out
xor
add
xor
mov
mov
inc
pop
testl
jb
pop
push
andps
or
mov
add
loop
xor
imul
not
mov
cmp
push
add
cmc
jnp
fdivs
jmp
push
je
and
or
push
inc
fdivs
ret
mov
call
mov
insb
xor
add
mov
add
loopne
and
jge
xchg
hlt
es
sub
js
add
dec
sub
bound
repnz
adc
dec
pop
jo
or
fsubrs
in
add
into
jl
divb
hlt
mov
and
sarb
ss
xchg
inc
inc
xor
add
mov
mov
xor
imul
adc
ds
fisttpl
mull
cld
leave
call
cbtw
dec
and
sub
or
xor
nop
lods
xchg
aam
scas
and
cmp
inc
mov
xor
sub
sub
push
test
xchg
add
pop
pushf
mov
adc
mov
push
adc
pop
dec
or
push
repnz
xorb
je
mov
movnti
test
rclb
push
sbb
cmp
out
test
xor
xchg
xor
adc
sbb
xchg
push
inc
and
cs
mov
mov
add
aaa
repz
aaa
dec
mov
mov
cmp
xchg
mov
aam
sbb
insb
push
or
jbe
or
jae
pop
pusha
out
mov
xchg
inc
movsl
mov
out
loopne
int
dec
cmpsl
div
mov
lret
jnp
mov
int3
add
out
pop
sahf
add
or
adc
cmp
fcmovnb
sbb
add
fisubl
cwtl
addr16
cltd
dec
adc
iret
aad
lahf
ja
testb
jae
cs
sbb
add
pop
lcall
push
sub
add
inc
cmp
fadds
cmpsl
pop
pop
aam
dec
cmp
adc
add
lods
test
xlat
mull
ret
pop
pop
shl
add
icebp
jl
cmp
sub
add
inc
push
je
sbbb
mov
dec
push
out
js
stos
mov
push
mov
movsl
mov
fwait
or
mov
fwait
mov
pop
cs
fwait
jae
and
or
sbb
notb
ds
push
inc
add
jge
inc
aas
mov
and
and
fistps
xor
add
sub
push
xor
dec
xor
push
adc
xor
xor
add
push
or
outsb
or
shlb
pop
dec
shrb
add
or
sub
or
push
inc
sbb
pop
or
mov
pop
xchg
out
pop
cld
add
jl
inc
and
mov
inc
add
add
test
mov
add
sub
es
in
or
add
imul
xlat
mov
jbe
add
call
sbb
inc
loope
jp
push
xlat
and
mov
test
les
add
mov
or
lret
dec
aas
cmpb
push
cmp
add
adc
jmp
sub
sub
imul
pop
testb
mov
faddl
rclb
lea
and
fsubs
arpl
inc
cmpl
adc
sbb
loop
fwait
and
add
lock
add
mov
xor
stos
cmp
push
and
fadd
sbb
lods
dec
jl
adcl
sbb
jg
int3
pop
or
or
sti
cmp
fucomi
arpl
test
xor
test
iret
cli
lds
jo
push
push
test
mov
es
bnd
adc
hlt
push
mov
int3
sub
leave
rcr
in
push
dec
leave
cmp
and
lret
add
mov
mov
mov
mov
push
and
cmpsl
push
push
lahf
mov
sbb
ds
or
movsl
add
movl
mov
popa
inc
push
shr
push
pop
push
fs
adc
mov
lods
jmp
nop
lea
cmpsb
adc
push
pop
repnz
xor
or
and
inc
fs
jmp
push
inc
pop
inc
scas
cmpl
icebp
jmp
out
and
inc
or
dec
cmp
hlt
out
insl
cmp
cs
or
sbb
and
lret
sbb
lods
arpl
jo
mov
ret
sub
push
push
cmp
push
mov
sub
fnstsw
sub
fstps
xor
push
jmp
dec
in
xchg
add
adc
add
jle
or
or
stos
or
je
inc
xchg
jl
fcoms
sub
ljmp
xchg
icebp
xor
inc
mov
sahf
test
dec
inc
mov
cmp
cltd
daa
xchg
dec
enter
aaa
add
and
dec
inc
xor
loop
mov
jle
push
lea
sbb
cs
out
inc
push
mov
and
and
dec
mov
dec
sub
test
push
adc
pop
mov
and
fdivrs
push
and
mov
sbb
sbbb
or
mov
daa
fiaddl
inc
or
push
push
xchg
std
or
jge
jmp
pop
sub
or
push
dec
inc
sbb
add
adcl
mov
imul
fcmovnb
xchg
js
xor
jae
adc
pop
add
rolb
inc
xchg
aam
add
add
mov
or
dec
pop
das
addr16
adc
ss
ds
add
and
sbb
jp
pop
mov
inc
dec
ds
xchg
mov
adc
loop
sbb
xor
sbb
or
cmp
sbb
adc
push
nop
and
xor
inc
push
aaa
mov
shrb
mov
inc
adc
and
lret
shrl
addb
xor
popa
movb
ret
pop
adc
jge
mov
pop
ss
daa
mov
cld
aas
cmp
test
cmp
inc
out
test
sbb
or
add
add
adc
sub
xor
and
pusha
popa
and
sbb
in
and
add
inc
push
xor
mov
cmpsb
push
sub
enter
mov
cmpsl
fisttpl
and
mov
js
ja
cmp
lock
mov
and
push
mov
mov
xchg
stos
adc
sub
jae
mov
loop
inc
loop
mov
dec
and
adc
or
sub
ljmp
rcrb
out
aas
or
test
dec
dec
notb
hlt
sub
pusha
pop
adc
subb
dec
lea
xor
mov
rclb
in
aaa
or
xor
add
cmp
mov
or
mov
adc
adc
cmp
and
mov
inc
inc
pop
sbb
sub
push
or
sub
add
mull
ds
addb
ret
inc
je
mov
and
ret
xchg
add
sub
aaa
lods
jno
jno
call
mov
push
adc
push
push
popa
mov
jle
movsb
pop
daa
lock
outsb
sbb
mov
pop
xor
inc
add
aaa
out
pop
jmp
sub
pop
sarl
push
xorl
adc
ss
jne
lock
or
nopl
and
push
in
push
jo
js
roll
push
dec
repz
inc
inc
lock
mov
mov
xorb
or
cmp
pop
je
mov
sbb
emms
shlb
ret
loopne
add
outsl
dec
mov
pop
or
xor
pop
jmp
sub
jmp
lret
push
inc
dec
dec
movb
add
loope
pushf
cmp
ret
or
sub
iret
push
xor
inc
mov
pop
dec
inc
mov
or
adc
in
and
dec
and
push
dec
inc
sbb
xchg
decl
jge
dec
stos
add
insb
icebp
push
sar
jns
cli
cmpsb
jbe
xchg
rcrl
push
dec
jmp
nop
or
sub
aad
sbb
mov
push
push
iret
sbb
mov
clc
adc
fisubrs
lea
push
mov
mov
icebp
or
dec
fcmovbe
addl
outsl
or
lds
sbb
out
sbb
mov
cmp
jno
push
jle
enter
mov
mov
fcmovnbe
mov
or
sbb
or
or
lods
and
inc
push
nop
push
add
adc
mov
scas
call
sbb
pop
popa
cmp
lcall
js
adc
vmovddup
in
or
add
ret
add
push
pusha
xor
cmp
test
and
and
pop
in
gs
xorb
dec
dec
mov
aam
fidivs
movb
dec
pusha
or
je
mov
or
dec
cmp
mov
pop
add
cmpsb
push
lret
xlat
cli
pop
mov
pop
cmp
add
and
inc
dec
cmp
pusha
jne
sbb
inc
rol
adc
adc
sub
out
stos
push
mov
ds
je,pn
or
jne
or
or
xor
ret
mov
arpl
adc
jo
or
and
xchg
xor
sbb
neg
sub
fcoms
dec
push
decb
add
or
xchg
xchg
mov
mov
ret
pusha
pop
test
out
dec
dec
or
add
mov
sbb
ss
jb
cwtl
add
push
push
stos
adc
popa
push
xlat
cmpsb
nop
push
or
movl
adc
pop
fchs
adc
push
loopne
rcrb
aad
xor
pop
dec
clc
dec
add
popf
movsb
mov
cwtl
aam
xor
add
test
cmp
jo
rorb
rorb
rcrb
lcall
mov
pop
pop
pop
lods
adc
scas
and
fs
clc
adc
xchg
dec
or
dec
sahf
hlt
incb
xchg
iret
nop
cltd
aam
push
shr
sbb
dec
repz
dec
inc
in
les
xor
mov
imul
xchg
jo
ret
icebp
testb
mov
mov
aas
push
popl
dec
test
push
pushf
and
inc
pusha
or
xchg
mov
jae
movsb
and
sub
sbb
mov
xchg
mov
cmp
das
sbbl
mov
adc
lock
adc
jecxz
mov
addb
add
cmp
mov
adc
sbb
add
pop
adc
testl
sbbl
xlat
push
or
mov
das
mov
in
adc
dec
hlt
xchg
pusha
nop
adc
mov
inc
nop
pop
jne
movsl
or
pop
movl
push
stos
adc
sbb
add
add
inc
cmpsl
out
es
rorb
mov
add
pop
mov
add
fsubrs
push
movsl
or
leave
or
es
inc
out
xchg
pop
inc
xchg
fwait
mov
jl
xor
lods
scas
arpl
sbb
into
pop
repnz
mov
inc
add
jne
push
test
in
pop
sub
sub
ds
add
adcl
dec
jmp
inc
enter
xchg
daa
imul
sbbl
ret
pop
test
add
iret
dec
popf
mov
cmp
jb
xchg
lret
fiaddl
fdivrl
push
in
pop
jb
add
cmpsl
lods
xor
and
mov
mov
mov
inc
push
lcall
jne
push
ds
ja
inc
inc
mov
and
xor
lea
iret
sub
setne
das
in
mov
test
cmp
jne
cmc
in
loop
popf
fs
add
jmp
pop
scas
xchg
roll
out
adc
lahf
push
movsb
frstor
xlat
jo
pop
nop
push
addb
pusha
insb
add
mov
xlat
xchg
inc
sub
movb
pop
mov
mov
mov
pop
dec
jb
jo
adc
sub
xor
xchg
in
hlt
pop
mov
pop
jo
inc
inc
pop
mov
cmp
je
adc
cs
das
daa
push
subb
pop
insl
jo
push
loop
xor
ret
sbb
test
pop
fidivrl
xchg
repz
push
jg
test
mov
and
lods
aaa
add
and
sahf
repnz
not
sbb
pop
or
bswap
insb
and
mov
inc
popa
inc
adc
outsl
es
sbb
mov
adc
enter
das
lret
cwtl
pop
and
ret
sub
and
out
add
xchg
inc
adc
or
inc
aas
stc
sub
push
lods
push
les
xor
mov
loope
das
pushf
sbb
mov
cmp
xor
or
lds
stos
les
inc
arpl
push
fmuls
add
scas
mov
repnz
iret
adc
enter
mov
add
push
lock
test
xchg
lcall
xchg
paddsw
in
sub
pop
mov
mov
int3
lcall
adcl
mov
pop
lods
and
call
add
popa
dec
iret
xor
loope
push
cmpsb
mov
and
add
lock
push
imul
sbb
test
and
cmpb
mov
imul
subb
adc
add
sub
loopne
xor
pop
dec
cld
cwtl
pmuludq
in
xchg
cmpb
cmpl
outsl
pushf
adc
xorl
ja
sbb
mov
mov
add
adcl
push
xchg
add
or
xchg
or
dec
pop
out
add
mov
aas
int3
enter
dec
xlat
frstor
lods
addl
cmpl
test
aam
push
mov
js
inc
or
dec
jnp
xchg
mov
dec
or
push
push
mov
pop
imul
sbbl
jmp
cmp
sub
mov
mov
xorb
cli
xchg
xor
xor
icebp
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
mov
inc
push
outsl
sbb
jae
add
cmp
inc
mov
xchg
jp
or
pop
fwait
push
lret
fcmovne
push
and
inc
pusha
xor
sbb
cmp
int
fistpll
je
inc
aad
and
dec
pop
pop
int3
dec
and
mov
push
test
shr
add
pop
mov
imul
push
pop
ja
loopne,pt
push
mov
mov
pop
in
and
or
push
pop
sbb
testb
pop
insb
hlt
pusha
rorb
jns
outsl
testb
fildl
fmulp
jmp
andb
ds
pop
sub
and
or
ret
xor
push
cmp
pop
cmp
jne
and
movsb
pop
sub
test
test
mov
insb
lahf
pop
mov
int3
xor
addl
popf
cmpsb
push
xchg
push
pop
outsb
push
mov
inc
cmp
arpl
das
adc
pop
loop
imul
sub
mov
jmp
inc
jg
lea
ret
ret
jb
adc
mov
or
push
dec
or
icebp
xchg
mov
movb
pop
fnstsw
dec
je
daa
cmpb
fdivl
pop
aam
pop
jne
sbb
sbb
mov
or
xor
pop
cmp
inc
or
sbb
and
or
inc
xor
cmpsb
pop
xchg
push
xor
ds
xchg
push
jbe
mov
mov
sbb
mov
fwait
push
inc
push
dec
sub
inc
push
popa
inc
test
xchg
adc
push
pop
test
arpl
lcall
add
add
insl
or
shrb
lea
test
popa
add
inc
imul
mov
mov
jnp
cmp
or
push
pop
add
cs
jmp
fstpl
ret
hlt
frstor
jl
pop
in
clc
cmp
inc
imul
hlt
xchg
or
push
add
in
pop
mov
push
mov
inc
mov
ret
jae
ds
nop
add
pop
push
out
arpl
repnz
lcall
leave
sbb
pushf
pusha
lock
shll
xor
and
lea
adc
xchg
or
mov
bound
lock
cmp
shrb
mov
and
dec
xchg
or
dec
xchg
adc
inc
sbb
sbb
or
add
fs
jae
push
sbb
outsb
or
movsl
mov
add
inc
add
fwait
movsl
andb
inc
ss
imul
mov
xchg
mov
movq
sbb
push
fnstenv
inc
shlb
push
push
pop
adc
into
xbegin
lahf
lods
call
push
mov
pop
push
xchg
stc
cmp
inc
pop
add
or
dec
movsb
test
insl
cmp
xchg
xchg
fadds
fwait
adc
sbb
dec
mov
sbb
gs
cmovne
testl
sub
sub
pop
rol
or
jmp
popf
adc
sbb
sub
movsb
xor
je
out
inc
gs
xor
nop
test
dec
test
fsts
out
add
insb
das
xor
pop
ja
cmp
lret
mov
xchg
adc
mov
in
jl
mov
test
add
cmp
scas
xchg
cmp
jle
sub
push
adc
add
sbb
push
js
and
andl
ret
insb
xchg
daa
mov
dec
sbb
into
or
lds
and
and
xor
push
mov
icebp
pusha
iret
add
push
pop
fdivrs
mov
sub
sub
mov
rcrb
mov
mov
gs
jne
xchg
pop
ljmp
gs
nop
fnstcw
js
jle
imul
push
inc
nop
testb
jmp
sbb
in
add
gs
add
fs
nop
in
add
mov
xchg
and
leave
pop
scas
ret
das
cli
mov
mov
popf
pop
loop
ja
mov
jo
pop
movb
stc
and
icebp
jnp
cltd
cli
std
or
mov
jge
adc
adc
cmp
je
and
icebp
xchg
sub
xor
je
jo
xor
shlb
mov
sub
xor
adc
sub
movb
ret
jno
mov
cmpsl
movsl
and
rcrl
sub
addb
push
ret
aaa
or
xchg
add
sbb
dec
sbb
mov
add
nop
filds
lods
loope
mov
nop
and
cmp
and
add
add
push
mov
xor
repnz
adc
or
popf
sbb
into
and
cmp
add
adc
lock
cmp
mov
sarb
test
les
push
inc
pop
and
fldt
popa
dec
fnstenv
or
sub
adc
adc
sub
mov
mov
and
and
xchg
cmp
inc
imull
pop
jno
es
jl
xlat
movsb
inc
setg
int3
ja
pop
cmpsl
out
das
ljmp
adc
pop
hlt
jno
icebp
pop
aam
mov
scas
mov
add
sbb
push
fldenv
add
arpl
dec
aam
xor
fdivrl
dec
xchg
inc
sahf
jecxz
iret
cmpb
xor
sahf
popf
xchg
jbe
jo
xchg
and
or
verr
and
dec
add
add
push
pause
test
adc
mov
adc
xor
jnp
inc
cmp
test
mov
add
pop
xchg
pop
sbb
lock
imul
add
popa
shrl
popf
cmp
or
cmp
je
and
gs
or
jecxz,pn
int3
adc
lock
sbb
cld
jne
fimull
sub
and
or
fnstenv
add
mov
imul
or
inc
jbe
std
or
push
and
cmpsb
pop
push
dec
je
add
nop
mov
ret
push
test
clc
je
cmp
nop
insl
insb
sbb
jmp
int
mov
dec
iret
popa
add
nop
imul
jl
jo
cs
popf
xchg
rorb
adcb
inc
xchg
hlt
shll
movsl
and
cmpsl
push
or
push
sbbl
lock
ret
inc
pop
loope
mov
adc
es
test
or
lfs
int3
add
pop
inc
pop
pop
add
loopne
and
rcll
cmp
or
add
sbb
or
push
jo
or
fnstcw
pop
pop
xchg
scas
add
mov
add
and
ljmp
jne
mov
ret
mov
sbb
pop
inc
test
nop
inc
fisubrs
lods
rorb
mov
jo
sbb
imull
mov
and
pushf
inc
dec
int3
sub
mov
push
or
lret
push
push
shl
xor
xchg
mov
and
mov
adc
cmpsl
mov
inc
sti
lods
add
movsb
inc
ja
add
outsb
nop
dec
mov
mov
push
push
cmp
cwtl
xor
fs
mov
add
add
fisttps
cmp
cmp
and
outsb
sbb
stc
ss
sbbb
pushf
pop
bound
push
mov
sub
scas
adc
xor
testb
imul
mov
add
xor
cmpsb
rorb
je
and
shrb
arpl
call
ds
punpckhdq
bound
sti
adcl
xor
add
mov
or
jnp
je
xlat
mov
add
stos
sub
adc
dec
jmp
add
sbb
lds
pop
pusha
aad
push
or
or
cmp
dec
adc
push
sbb
inc
fcoml
pop
test
and
add
lea
fdivr
ja
loopne
add
ss
mov
sbb
das
jl
sbb
add
push
sub
inc
outsl
add
dec
sub
imul
adc
lods
adc
iret
aas
cmp
xchg
nop
pop
sub
or
sbb
pop
mov
jecxz
sbb
fiadds
mov
xor
sub
mov
xor
add
imul
xchg
pop
adc
mov
cli
push
psrld
sbb
rclb
mulb
add
mov
cmp
adc
jmp
sahf
movsb
adc
dec
das
insl
loop
mulb
sbb
or
lods
lea
add
adc
inc
data16
lods
push
push
mov
fadds
sub
add
add
xchg
pushf
push
inc
shlb
cltd
sub
add
or
mov
movsb
flds
add
add
data16
jo
dec
ret
cli
rclb
mov
aas
mov
add
push
or
add
fcoms
xlat
push
sbb
jecxz
mov
adc
or
sbb
scas
add
jo
cmpsl
rcrb
popf
sarb
xchg
inc
xchg
add
add
push
xchg
xchg
hlt
repz
in
or
arpl
adc
rcrl
mov
jae
sarl
dec
pop
es
nop
sbb
jmp
pop
or
fisttpl
jp
or
sbb
adc
and
js
dec
sbb
dec
mov
je
imul
test
push
push
dec
xorl
hlt
inc
add
dec
dec
inc
dec
push
or
in
push
dec
call
push
or
pushf
mov
or
rcl
rclb
or
lea
mov
lea
adc
fdivl
cmp
mov
xor
shll
in
adc
sbb
dec
shl
add
and
xchg
and
xorb
ret
xor
push
or
pop
and
mov
daa
fdivrs
pop
incl
idiv
dec
sub
jecxz
out
xchg
cld
pop
adc
adc
and
push
loop
pop
or
and
add
xorb
out
inc
dec
popa
and
mov
push
pop
inc
cmpl
jne
inc
mov
cmp
pushf
call
loop
mov
jbe
popa
xchg
jo
ss
pop
faddl
fbstp
test
jne
pushf
or
mov
mov
ja
iret
add
pop
bound
imul
mov
adc
mov
les
mov
ja
sbb
adc
xor
test
and
outsb
jnp
shlb
outsl
sahf
cs
imul
bound
add
subb
cmp
or
aam
sahf
pop
mov
and
out
or
adc
jae
xchg
adc
or
mov
mov
insb
push
xor
daa
dec
dec
jmp
adc
cmc
and
shrb
leave
aam
mov
or
push
or
sbb
call
jns
js
pop
dec
loopne
out
sub
ljmp
push
or
jnp
or
cmp
addr16
jnp
pop
insl
add
mov
sbb
loop
sub
add
sbb
fimuls
dec
adc
sbb
pop
lock
inc
pop
jno
mov
inc
outsl
inc
sbb
cmp
or
dec
sbb
and
adc
and
repnz
sbb
jne
mov
dec
mov
stc
pop
mov
xchg
sahf
les
sbb
pop
add
adc
or
and
pop
mov
adc
test
arpl
and
xchg
or
and
sub
sub
outsb
mov
xchg
sub
lock
fs
loope
popa
sub
stos
cmpsb
daa
mov
xchg
adc
cmpl
fistpl
cmc
pop
ret
and
xchg
mov
ret
add
stos
push
pop
cmc
sbb
mov
lock
dec
push
and
mov
sbb
aas
arpl
test
les
mov
or
mov
jns
pop
mov
cmpl
jmp
and
inc
inc
je
ja
hlt
out
xor
mov
mul
and
or
mov
dec
movsl
xchg
mov
mov
sub
hlt
xchg
dec
cmc
sub
sbb
je
in
inc
and
and
movsl
adc
jo
inc
lock
push
cmp
sub
cs
ss
in
jne
and
push
xchg
push
mov
loopne
and
popa
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
scas
test
enter
cmp
inc
sbbl
sti
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
push
and
fistl
imul
dec
mov
mov
ja
dec
js
push
cmp
int
dec
loope
pop
xchg
xchg
inc
push
pushf
mov
fmuls
insl
jmp
xchg
mov
dec
jne
arpl
cmp
sbb
mov
rolb
mov
scas
fwait
mov
push
adc
out
cmp
and
push
adc
sti
cmp
inc
pop
js
inc
hlt
fwait
movsl
je
in
push
xor
mov
adc
stos
push
addb
sbb
add
popf
sbb
pop
daa
movsb
rcll
push
push
std
and
push
inc
xchg
shrl
pop
cld
sub
shlb
fbld
push
repz
test
sahf
mov
loop
inc
in
fwait
add
les
icebp
adc
das
rolb
imulb
sbb
nop
outsb
sbb
add
sbb
cmp
or
push
outsl
pusha
aaa
add
push
sbb
daa
push
pop
or
popf
pusha
sub
imul
and
xchg
inc
sub
adc
xchg
adc
stos
fwait
add
and
cmp
push
shlb
dec
add
add
push
push
loopne
and
lock
sub
stos
sub
mov
sub
bound
or
test
adc
adcb
sbb
add
xchg
dec
jns
add
sbb
orl
mov
test
adc
pop
jmp
sbb
out
cmp
fadds
jmp
add
dec
roll
cmpsb
insl
orl
pusha
add
xor
sahf
pusha
nop
pop
xlat
cmpl
cmp
push
data16
push
add
sub
or
fiaddl
inc
movsb
and
daa
test
inc
or
and
jno
sbb
inc
je
mov
daa
inc
mov
mov
rcrb
aad
add
enter
push
loopne
roll
pusha
movsb
enter
fwait
scas
push
push
mov
fwait
cmp
push
test
mov
cmovp
pop
mov
jns
loopne
inc
jo
lea
add
push
mov
push
js
add
push
xchg
push
or
nop
jp
pop
or
aaa
xchg
jae
push
hlt
mov
mov
insb
subb
scas
cltd
dec
inc
mov
inc
jecxz
sbb
pop
faddl
cwtl
fwait
push
scas
fwait
inc
sbb
or
jp
test
push
dec
adc
sub
fcoml
or
jno
cmpw
icebp
popw
add
popa
mov
inc
leave
push
or
es
jmp
dec
les
pop
into
movb
mov
xor
jo
adc
jmp
inc
leave
in
cmp
ret
jno
push
pop
sub
adc
dec
cmp
arpl
inc
or
inc
aaa
insb
add
jo
and
xchg
adc
movsl
cmp
or
push
dec
and
add
mov
leave
neg
lds
leave
cmpsl
sub
pusha
add
add
add
xor
sub
dec
xor
adc
stc
or
leave
outsl
out
xchg
add
add
jns
add
jne
dec
nop
int3
movsl
push
add
outsl
movb
rcrb
jne
outsb
adc
xchg
xchg
xor
push
inc
iret
cmc
test
inc
imul
inc
out
mov
or
test
pop
fsub
cltd
xchg
sbb
fidivrl
xor
je
sbb
scas
and
cmp
and
inc
fcompl
xlat
mov
in
push
and
dec
jge
sub
pusha
sub
mov
sbb
pop
jae
sub
xchg
push
and
mov
inc
or
ss
lcall
sbb
adc
mov
or
sub
insl
jo
es
inc
jmp
add
lock
loopne
mov
sbb
mov
jp
lods
lock
les
out
dec
pop
or
inc
je
dec
stos
and
push
jl
bound
adc
add
or
int
enter
push
and
sbb
dec
pop
int
insb
rclb
lahf
sub
jne
add
sub
cmc
fs
cs
andb
or
xchg
mov
fmuls
add
and
dec
mov
shlb
inc
or
mov
push
shr
push
or
xchg
xchg
imul
scas
mulb
cmp
loopne
pop
pop
les
mulb
and
cmp
aaa
push
test
xchg
jle
mov
adc
sbb
mov
addl
jl
test
adc
sub
jp
das
jbe
xor
addr16
jl
inc
pop
xchg
in
add
adc
in
mov
add
imul
mov
sub
adc
les
sbb
or
iret
sbb
stc
sbb
inc
cmp
xor
mov
clc
mov
xor
rorb
or
mov
mov
cmpsl
and
push
cmp
or
dec
and
push
int3
movl
jae
pop
jp
push
loopne
cmp
es
cli
lcall
enter
dec
cmp
int3
xor
ret
inc
sbb
xor
subl
inc
cmp
sarb
mov
lcall
lcall
push
push
movsl
jbe
or
rorl
inc
test
jl
cmp
ds
jo
jmp
jne
dec
sbb
push
loope
ds
and
dec
or
add
sbb
js
rolb
sub
add
popf
xchg
andb
and
mov
adc
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
or
das
cmp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
add
lea
jb
scas
or
insb
in
or
out
sub
lds
adc
push
dec
push
add
mov
andl
cmpsl
mov
pop
mov
dec
loope
or
mov
es
mov
mov
or
xchg
adc
xor
mov
push
push
outsb
test
inc
cmp
inc
fadds
or
nop
mov
jmp
push
les
cmp
adc
xchg
push
ss
ja
sub
jle
pop
js
rcll
inc
dec
shr
inc
inc
into
adcl
cmpsb
mov
push
push
cld
in
mov
inc
cmp
sub
cmc
dec
pop
and
out
push
xchg
add
or
orl
inc
jg
jg
insl
jb
repnz
pop
and
add
orps
sub
cmpsb
scas
aam
mov
lret
cmp
int
cmp
add
add
or
test
cmp
mov
xor
sbb
rclb
xchg
pop
inc
sbb
cltd
ret
rorl
add
stc
fcoms
or
push
rdpmc
or
sbb
jle
rclb
add
por
xchg
pop
call
sub
adc
xchg
inc
insb
adcl
or
in
ret
inc
inc
push
xchg
xchg
inc
and
add
add
cwtl
adcl
popa
push
cltd
xchg
cmc
shrl
and
and
push
nop
aaa
pop
loopne
test
fstl
pop
cwtl
and
je
or
add
bound
loopne
cld
adc
loopne
imul
inc
inc
je
mov
sbb
pop
or
shll
call
addb
push
jmp
dec
test
jl
out
push
lods
aad
xor
ficompl
add
adc
pop
shlb
sti
mov
sbb
out
inc
sub
sub
jle
mov
xchg
popf
add
jecxz
movsb
or
xchg
cmc
add
aam
cmpb
sub
add
pop
daa
dec
pusha
and
add
push
mov
fdivs
cmc
ja
stos
xchg
jbe
pusha
push
std
pusha
sbb
cmp
xor
mov
sub
pop
aam
adc
sub
cli
add
adc
pop
or
sbb
push
clc
xor
in
jno
and
lock
inc
inc
lock
negl
rolb
mov
imul
movsl
or
xor
mov
dec
enter
push
bound
and
xchg
pop
js
add
test
loop
rcl
in
inc
push
xor
push
push
dec
int
bound
pop
and
bound
push
adc
dec
test
ja
jnp
insl
inc
shl
fistpl
jnp
mov
push
sarb
pushf
fmul
mov
add
cmp
das
jne
push
adc
lds
adc
or
push
cmp
dec
add
xchg
adc
test
mov
xchg
adc
fdivs
ss
ret
in
loop
mov
or
xor
in
mov
sbb
push
test
or
insl
or
lock
dec
cmpsb
xchg
xchg
and
add
and
add
xor
mov
popf
and
adc
sbb
fldl
test
ret
in
dec
push
lcall
mov
mov
jnp
pop
test
xorb
push
push
inc
or
out
or
mov
out
xchg
pop
or
sbb
sub
fisubrl
fistl
xchg
or
mov
call
ret
add
cs
push
ret
ret
xchg
adc
pushf
cli
or
xor
mov
jg
cmpl
and
inc
out
lret
aas
cmp
into
mov
mov
mov
testl
nop
or
data16
pusha
sarl
push
call
jl
cmp
fsubp
and
adc
out
xchg
and
pop
xchg
adc
or
test
setl
loope
jb
filds
mov
sbb
arpl
aas
jno
shl
sbb
sub
mov
or
mov
outsb
mov
lret
aam
inc
insb
mov
adc
shll
mov
jge
cmpsl
cmpsb
xchg
mov
inc
pusha
movsl
or
inc
popa
stc
shlb
hlt
xor
inc
test
jns
push
test
cltd
cmp
push
cmpsb
daa
rol
or
sub
iret
or
orb
dec
loopne
push
mov
fiadds
insb
adc
sub
fnstsw
push
lock
clc
sbb
enter
lcall
xlat
pextrw
xchg
lods
aaa
and
push
pop
out
dec
xlat
inc
add
pop
push
leave
push
stos
adc
adc
or
fisttpll
mov
inc
xchg
push
inc
mov
and
jo
mov
ret
inc
lods
add
and
jge
cmp
and
jle
jge
push
and
mov
enter
cwtl
ds
add
test
insb
call
sbb
mov
push
inc
sbb
pop
adc
lahf
jnp
cmp
or
fistpl
sbb
mov
or
inc
hlt
or
push
sahf
add
add
adc
aas
ret
xorb
adc
sarb
and
out
and
cld
inc
push
xor
cld
cld
inc
add
sub
xchg
cld
cld
cld
and
add
in
sahf
inc
xlat
inc
movb
add
push
mov
int
aas
mov
andl
sbb
pop
outsb
shlb
push
dec
hlt
sbb
xchg
add
or
das
pop
push
enter
das
lcall
iret
fadd
push
lods
adc
imul
sti
test
jle
pop
sub
xor
adc
adc
movl
mov
and
lock
xchg
dec
cli
sbbb
mov
xor
dec
enter
push
pop
xor
test
ds
push
xor
or
roll
test
cmp
push
and
lahf
add
int3
cmc
imul
xorb
dec
sti
aam
call
mov
push
dec
popf
pushf
pushf
pushf
xor
pop
jle
cmpsl
or
push
inc
pop
mov
scas
cwtl
pop
inc
and
lds
jp
pop
sub
adc
test
pop
mov
mov
enter
sbb
aas
push
fcmovnb
dec
cs
jbe
pop
dec
dec
push
nop
in
dec
dec
cwtl
in
sbb
pop
dec
jnp
sbb
jne
push
push
fcom
push
fsubrs
jns
es
push
or
push
sbb
and
inc
sbb
dec
jo
xchg
movsl
inc
cmp
pop
iret
fwait
mov
aad
dec
insl
movsl
xor
mov
dec
mov
adc
inc
js
add
out
or
sbb
xor
push
call
pop
xchg
iret
cmp
xchg
mov
mov
sti
out
jl
or
jle
mov
cmp
pop
or
add
mov
cmp
pop
cmp
int3
sub
aas
pop
cmp
xabort
clc
mov
dec
mov
or
cmpsb
adc
xor
or
add
inc
mov
fs
sub
and
pop
stos
nop
in
cmc
pop
jg
mov
pop
sbb
mov
push
das
cmp
cs
cmpsb
mov
add
les
adc
lret
dec
cltd
mov
xor
push
inc
rol
inc
add
jg
in
mov
insl
add
in
adc
jbe
pusha
add
xor
xchg
cmp
sub
push
mov
sbb
adc
jne
adc
mov
mov
dec
xchg
mov
loopne
mov
div
sub
loopne
sub
into
ror
or
out
loopne
jne
jbe
ret
call
les
adc
xchg
leave
sbb
js
cmp
jne
adc
adcb
jno
jno
mov
rorl
lahf
and
mov
negb
mov
inc
sbb
ret
mov
cmpl
sbb
mov
frstor
xchg
and
cmpsl
or
lods
loop
inc
adc
pop
jl
adc
dec
mov
add
aam
pop
jle
outsb
insb
sbb
xlat
inc
sbb
add
push
lds
jne
aam
inc
shll
or
mov
jo
int3
jne
cmpl
es
mov
adc
push
pop
lahf
cmpsl
mov
jb
push
push
xor
cmp
xchg
aad
in
call
shrb
mov
add
pusha
dec
or
ror
or
xor
jae
cmpsb
out
movsb
add
jle
divb
aam
sbb
movsl
mov
inc
ljmp
call
loopne
jne
in
test
sub
loope
mov
aas
mov
lds
jp
and
loop
movswl
xor
insl
loope
inc
dec
pop
int
popa
outsb
iret
insb
dec
pop
in
xchg
push
mov
cmp
or
and
or
push
jecxz
sti
cmp
pop
pop
sbb
scas
or
and
jmp
mov
clc
pusha
mov
outsl
mov
enter
xor
dec
jmp
sub
xor
dec
and
jbe
iret
and
mov
pushf
sub
out
dec
jnp
imul
push
inc
insb
and
in
inc
rclb
or
icebp
or
mov
and
mov
mov
addr16
add
inc
sub
mov
ds
pushf
es
xchg
or
dec
cmp
testb
jno
ror
sub
cmp
nop
dec
enter
jmp
adc
xor
mov
sub
xchg
cli
xchg
push
mov
sub
adc
fldenv
lar
dec
jae
das
jmp
add
cld
pop
sar
sub
rolb
xchg
push
jecxz
cmc
cpuid
and
add
or
hlt
push
pop
fcmovu
lods
lcall
in
adc
mov
pushf
fmul
push
sbb
icebp
mov
adc
push
lock
out
xor
push
loop
jmp
sbb
xor
pop
sub
test
into
push
mov
ret
enter
in
or
jne
lods
imul
mov
cld
push
dec
cmp
rclb
xchg
add
sub
cmp
loop
push
push
gs
mov
mov
mov
inc
sub
inc
and
inc
or
xor
lock
sub
pop
pop
insb
insl
roll
jmp
sbb
sub
jo
sub
adc
hlt
je
sahf
pop
dec
es
roll
insb
mov
cmp
fsqrt
and
jge
cmp
lods
or
ss
imul
xor
test
clc
ror
jbe
jecxz
lock
fbstp
push
popa
mov
pop
js
mov
dec
mov
sub
push
pop
hlt
je
clc
or
adc
add
ret
sbb
xlat
cmp
unpckhps
subl
fmuls
pusha
and
xor
pop
insl
filds
lahf
mov
rorl
mov
mov
adc
cltd
sbb
pop
pop
lea
gs
xchg
mov
dec
shlb
dec
mov
lock
add
fwait
clc
addr16
sarb
iret
clc
into
lods
inc
add
add
and
and
mov
inc
inc
es
xlat
xlat
jge
in
dec
xlat
inc
sbb
fucomip
pop
sbb
insb
sbb
jb
sbb
in
shlb
sbb
sub
pop
pop
xchg
mov
outsb
xchg
je
in
add
test
add
xor
sub
inc
cmp
or
repz
adc
test
stos
jo
inc
or
push
leave
dec
dec
push
dec
add
je
movsb
pop
jmp
mov
xorb
subl
pop
cmp
add
cltd
stc
sbb
and
inc
mov
loope
hlt
add
xlat
mov
ds
sub
push
sub
lods
and
nop
sbb
test
or
adc
inc
add
xor
mov
mov
inc
sbb
movl
lock
enter
push
xchg
or
mov
mov
jns
adc
mov
fldl
push
aas
movsl
bound
dec
pop
sbb
adc
push
jbe
js
xchg
out
loope
add
enter
imul
jmp
xchg
rcrb
push
xchg
sbb
push
lock
loopne
cmp
sbb
fwait
into
leave
je
pop
arpl
mov
pop
enter
adc
add
adc
xchg
rcrb
pop
mov
ret
fcom
test
in
or
or
leave
or
test
or
xor
es
cmp
in
sub
mov
test
dec
xor
in
dec
add
push
ret
adc
and
push
dec
add
push
roll
rclb
mov
insb
test
pop
jne
pop
jmp
outsl
adc
mov
jge
pop
xlat
xor
and
mov
test
mov
cmp
or
movl
and
inc
js
test
xorb
fadd
or
or
add
cmp
push
xor
dec
popa
test
add
orb
ja
ror
inc
add
pop
mov
scas
arpl
daa
or
mov
mov
call
lea
daa
cmp
and
lea
mov
sti
orb
and
stc
pop
rclb
sti
loopne
sbb
mov
pop
test
adc
sub
or
mov
inc
dec
dec
dec
inc
ljmp
adc
fiadds
lock
cltd
xor
inc
mov
or
insl
jno
jb
inc
hlt
add
and
sbb
hlt
mov
imul
inc
movb
add
into
cmp
push
push
mov
xor
sub
adc
test
lret
sub
add
push
sarb
and
movsl
xchg
sub
sbb
dec
push
scas
int
test
fs
mov
adc
cwtl
sbb
sub
jecxz
inc
and
fs
rcll
mov
sbb
dec
push
ret
push
leave
sbb
adc
int3
lods
mov
les
je
fmull
jmp
push
cmpsl
mov
sbb
or
push
enter
aam
pusha
adc
fimull
inc
ret
and
cmp
dec
int3
cmp
mov
enter
lret
shlb
sbb
xchg
outsb
pop
adc
mov
mov
sub
scas
lods
inc
pop
das
push
shlb
repnz
insb
xorb
xor
or
repz
aam
inc
aam
dec
cmp
stos
ljmp
dec
cmc
mov
ret
push
fs
sbb
xor
sbb
push
push
js
pusha
lods
mov
lahf
and
rcrb
into
ljmp
sub
sbb
pop
xor
js
and
js
out
fisubl
adc
sti
or
leave
dec
lods
dec
cli
adc
nop
nop
mov
dec
mov
dec
mov
sbbb
ljmp
xchg
or
out
xchg
mov
xchg
mov
pop
lock
inc
mov
mov
loop
pop
cs
pop
adcb
adc
dec
push
fs
nop
cmp
pop
mov
add
sub
add
mov
adc
inc
loop
lock
mov
jnp
aad
add
out
or
mov
push
push
sbb
xchg
loop
in
dec
fwait
ret
push
mov
ljmp
adc
jle
movsl
fdivr
xadd
pop
subl
je
and
mov
adc
sub
jmp
xorl
test
adc
inc
iret
xor
add
test
mov
sbb
xchg
pop
aam
dec
pmullw
pop
fsubrs
pop
in
or
repz
fdivs
popf
cld
ret
and
pop
adc
or
add
xor
push
push
xor
xchg
and
adc
sbb
inc
or
rorb
rolb
clc
sub
inc
xchg
mov
dec
adc
inc
adc
xor
inc
push
pop
js
adc
and
repnz
mov
push
mov
add
sub
daa
mov
inc
or
pop
test
jmp
jecxz
xor
cmp
hlt
inc
ficomps
xchg
jg
je
in
add
adc
rcl
mov
or
inc
js
dec
mov
fdivrl
pop
fstps
cmpsb
daa
into
mov
popf
or
sbb
sbb
adc
jle
imul
lods
push
sub
cmp
adc
cmp
imul
sbb
cmc
sub
pop
mov
jb
insb
out
jbe
sbb
out
add
or
add
xchg
pop
mov
mov
dec
icebp
add
lock
or
shl
andb
pop
adc
je
sub
mov
icebp
scas
enter
mov
push
fcomps
pop
mov
shrb
sub
mov
or
ss
mov
clc
movl
sbb
pop
cld
js
mov
ret
mov
sub
fadds
pop
inc
adc
into
push
test
repnz
lods
cmpsb
rclb
enter
cltd
xor
adc
adc
jg
inc
inc
bound
mov
jbe
push
add
sub
push
ljmp
sub
test
or
scas
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lea
js
mov
adc
iret
loopne
cmp
push
lods
ja
xchg
repz
cli
orb
inc
mov
push
mov
outsl
push
jg
mov
das
test
sbb
or
shrb
loope
mov
lock
sbb
mov
sti
dec
pop
es
inc
mov
sub
or
push
in
shlb
arpl
and
call
lret
loopne
iret
movb
mov
xor
rcrb
ret
adc
enter
aaa
or
pop
dec
out
fcmovnb
cmp
pop
pop
add
sti
xor
xor
ja
cmpsl
or
push
xchg
sbb
dec
push
add
mov
addl
sbb
dec
insl
cmp
movl
sbb
lods
jno
inc
mov
lret
jae
je
fildll
jmp
xor
mov
xchg
movb
sub
rolb
out
or
inc
jmp
test
push
jecxz
ret
imul
and
addr16
cmp
je
xor
test
jb
movsl
or
sarl
nop
stos
aas
rorl
dec
aaa
dec
stmxcsr
cwtl
pop
mov
fstpt
pop
popl
xor
inc
xlat
pop
xchg
dec
adc
je
push
xchg
add
testb
push
dec
xchg
call
pop
push
leave
pop
sbb
pop
mov
inc
add
add
and
clc
pop
cltd
or
cmp
xchg
or
pop
pop
icebp
into
pusha
leave
xchg
or
adcl
mov
fmuls
ror
mov
sti
pop
cwtl
rol
in
cmp
hlt
sarl
or
push
popf
js
pop
inc
sub
aas
pop
mov
push
std
adc
jle
lcall
outsl
popf
cmp
daa
pop
and
addl
sub
outsl
pop
or
and
test
test
je
mov
mov
jb
sbb
pusha
cltd
mov
es
in
xor
push
fnsave
gs
fists
pop
and
ret
jmp
pop
stos
mov
movsl
push
or
popf
jno
jg
inc
jg
sbb
add
je
xorb
insb
stos
lea
cmpb
adc
ja
xor
dec
inc
movsl
fwait
mov
ja
xor
subb
ds
cmp
pushf
or
std
leave
ja,pn
sbb
inc
aaa
sbb
test
faddp
adc
loope
jmp
push
into
or
jecxz
add
imul
inc
jecxz
push
addl
icebp
push
jnp
lds
clc
cmp
sbb
cmpsl
cli
sbbl
mov
insb
pushf
mov
add
inc
inc
push
jo
daa
ds
mov
mov
test
pushf
jnp
cmpsb
and
adc
adc
cmpsb
add
sub
imul
xchg
cld
out
test
popa
call
add
test
je
or
leave
fiaddl
jle
ja
xchg
fdivrs
and
pop
cmc
movb
ficomps
daa
cmp
mov
das
aas
add
out
sbb
and
nop
adc
pop
mov
movsl
sub
outsb
pop
jmp
mov
fidivs
das
or
mov
faddl
movsb
popa
insb
lcall
push
jo
inc
lcall
add
hlt
leave
push
mov
insl
iret
pop
in
rolb
mov
cmpsl
mov
pop
add
sub
sti
cmp
popf
iret
adc
repz
jne
cmp
sbb
dec
xchg
push
mov
in
movsl
xchg
sbb
dec
frstor
es
jle
das
cmp
cwtl
xor
mov
and
sbb
call
sbb
push
scas
cmpl
ret
std
clc
loopne
and
sti
shll
mov
dec
or
movsl
clc
xor
test
xor
in
jecxz
jmp
inc
push
adc
jbe
adc
mov
pop
arpl
lea
and
add
add
dec
push
outsb
dec
test
mov
inc
lds
ja
xchg
sbb
dec
mov
orl
outsl
jno
scas
mov
test
sbb
add
inc
daa
scas
repnz
pop
cmp
push
push
mov
sbb
jge
xchg
movsb
mov
sub
or
lods
dec
pop
cmp
je
mov
fs
loop
adc
jecxz
in
push
add
xchg
push
adc
cmp
jmp
mov
or
repz
movsl
sub
les
lret
push
rcll
fldt
push
fwait
rcr
xchg
outsl
ret
dec
sbb
cmp
and
ret
sub
fwait
inc
add
aas
push
xor
leave
inc
dec
push
leave
shl
rclb
pop
jo
jmp
dec
jno
and
and
mov
and
push
test
leave
leave
mov
hlt
in
inc
sub
dec
sbb
clc
clc
inc
dec
inc
ds
lret
add
les
jno
insb
outsb
or
das
xchg
xorl
fs
push
and
inc
das
mov
mov
lret
adc
iret
test
sub
mov
lods
or
cmp
inc
cmp
add
push
push
adc
insl
push
cmp
or
dec
add
dec
push
ss
sbb
in
sbb
xchg
jns
cmp
xchg
outsb
or
repnz
cmp
xchg
dec
in
add
sub
add
sbb
mov
jo
adc
push
faddl
in
shll
inc
push
push
shlb
mov
add
push
test
or
repz
ret
aam
pop
loope
div
rcll
je
les
dec
mov
inc
dec
iret
mov
inc
shll
jge
or
outsb
sbb
mov
jns
enter
adc
pop
fidivrl
push
lret
popa
loop
or
lds
fcmovnb
mov
pusha
daa
push
push
xchg
push
dec
cmpsl
jno
add
rcll
jg
sbb
inc
enter
inc
jns
nop
inc
or
xor
aas
ffree
and
fstps
sub
cmovp
add
pushf
pop
sub
adc
aaa
sbb
enter
jmp
loop
sbb
push
movsl
ret
pop
and
js
jae
cmp
fwait
nop
mov
add
inc
pusha
fdivrs
adc
inc
jge
test
aam
dec
adcb
add
fistps
push
push
cmp
jne
cmpb
iret
adc
dec
test
xor
sub
dec
subl
cmp
stos
or
and
arpl
xchg
mov
ret
adc
inc
stos
pop
mov
es
add
add
xor
das
hlt
punpckhbw
bound
ror
add
sti
pop
and
cmp
push
and
test
xor
xor
mov
inc
dec
inc
jmp
rclb
test
mov
pop
fwait
das
aam
adc
sbb
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
cld
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
insb
pop
sub
push
dec
mov
test
dec
and
or
cmc
add
cmc
inc
cmpsl
push
inc
push
cltd
cmp
test
sbb
es
xchg
mov
sbb
aam
or
ja
mov
dec
and
lahf
xchg
mov
inc
insb
and
mov
cmp
push
addb
push
inc
push
pop
std
outsl
popa
push
xlat
shlb
jmp
inc
mov
outsb
ljmp
in
xor
or
mov
cwtl
mov
smsw
subb
xor
dec
jl
mov
mov
cmpsb
push
fsts
pop
cmpsb
dec
dec
xor
inc
daa
mov
push
ja
mov
in
and
loopne
test
sub
sub
lods
jbe
imul
clc
dec
dec
adc
cltd
stc
or
fwait
xchg
dec
frstor
scas
cmp
jne
xchg
loopne
mov
adc
rolb
sub
inc
pop
xchg
mov
mov
sbb
xor
dec
fistps
mov
push
pusha
adc
adc
or
daa
cmpl
imul
mov
mov
jg
mov
sbb
mov
xor
repnz
dec
adc
lock
shrl
ds
and
inc
faddl
data16
daa
out
mov
xor
mov
add
sub
adcb
into
jbe
jp
sub
ret
xlat
inc
loopne
pop
pop
movsb
loopne
xchg
insb
jge
daa
inc
push
mov
les
fsqrt
pop
repz
mov
aad
xor
dec
jge
and
jmp
add
dec
adc
test
add
lret
insb
mov
pop
mov
hlt
and
dec
inc
push
arpl
inc
jge
push
mov
out
fcoms
lock
arpl
or
or
js
or
scas
jne
rcl
std
cmpsb
pop
ss
add
and
add
pop
sar
xor
js
jge,pn
mov
sub
jmp
stc
ret
pop
shlb
adcb
cmpsb
lock
shrb
insl
imul
mov
pop
jns
idivl
sub
add
cmp
scas
mov
mov
and
xchg
imul
fnstsw
add
mov
sbb
ret
or
xlat
or
mov
pop
inc
rcrb
jae
je
ljmp
dec
push
das
cmp
xorl
sti
add
imul
cli
test
and
mov
mov
adc
jmp
mov
cld
cwtl
add
or
add
sub
sub
mov
or
sbb
in
mov
popa
mov
pushl
sbb
movsb
movsl
addb
cltd
cmp
and
mov
jp
inc
aas
push
flds
and
adc
and
pop
fcoml
daa
pop
cmp
add
adc
xor
loopne
jne
jp
and
cltd
cmpsb
or
add
aam
insl
int3
std
sub
and
cmp
ror
jge
sub
inc
ret
jnp
daa
nop
lock
jle
jae
jmp
jo,pn
or
add
or
lret
dec
add
fld
stos
dec
or
push
inc
or
lea
scas
or
lahf
test
repnz
lea
mov
xor
cmc
or
ds
adc
sub
rcrb
push
aam
mov
and
push
adc
mov
push
mov
mov
cmpb
adcb
fucomi
sbb
adc
xchg
xor
xchg
xchg
xchg
xor
loop
aad
push
sbb
inc
pop
ljmp
dec
pop
out
scas
je
adc
inc
movl
call
mov
repnz
mov
fdivs
sub
insl
and
loope
pop
dec
add
mov
lock
xchg
loopne
add
scas
std
lock
sbb
push
add
adc
shlb
insb
nop
insb
jo
in
jl
push
imul
mov
sahf
mov
ss
or
adc
push
xchg
jmp
xchg
aam
mov
xchg
sbb
lds
add
shrl
movsl
inc
cmp
test
pop
sbb
xor
add
mov
jge
mov
imul
xor
loopne
rcr
test
cmp
call
rcl
dec
cwtl
dec
sti
pop
cld
outsb
inc
cmp
je
test
aaa
lds
sub
sbb
sub
lret
dec
sbb
adc
or
xchg
add
loop
inc
insl
test
nop
pop
nop
test
fs
sub
dec
lret
clc
sbbb
fiaddl
xchg
pop
push
aad
fiaddl
ljmp
gs
nop
add
stos
add
enter
mov
inc
add
jecxz
je
bound
lods
push
int3
outsb
cltd
add
push
ret
sbb
ja
jl
add
test
mov
pop
adc
add
cmp
mov
sub
mov
adc
lcall
mov
pop
lret
les
inc
add
repnz
out
and
sub
jl
pushf
dec
cwtl
jns
add
rorb
cs
addb
or
jb
fs
outsl
decb
cli
sbb
xchg
xchg
sti
cld
std
decb
xchg
aam
add
inc
mov
pop
add
add
fists
add
and
out
jbe
mov
scas
aas
adc
or
adcb
mov
rcr
lea
fnsave
stos
in
sbb
inc
xlat
or
add
xor
pusha
fmull
inc
dec
je
add
xchg
nop
gs
mov
ret
pop
pop
dec
gs
jb
insb
pop
pop
sbb
daa
addr16
add
fldenv
or
sub
cmp
rorl
xor
and
jbe
xchg
adc
add
jle
pop
clc
inc
jne
cmpl
mov
outsl
fdivrp
mov
sbb
loope
push
icebp
mov
pop
and
xchg
dec
dec
pop
adc
movsb
cmpxchg
pop
mov
cltd
sub
repz
xor
std
fs
out
jbe
hlt
dec
rcrb
jmp
movsb
and
orl
jns
sbb
xchg
adc
mov
sti
add
pop
les
dec
and
inc
or
enter
adc
inc
xchg
mov
fdivs
movsl
lret
cmc
push
sub
scas
jb
test
or
hlt
iret
sub
push
push
aaa
cli
movsb
mov
pop
fstpl
xchg
dec
aam
adc
push
insl
push
cmpsl
push
or
cs
push
push
cmpsb
push
iret
sub
in
dec
movsb
xchg
movl
mov
dec
and
sub
stos
cmp
or
xchg
sbb
or
test
cmpsb
inc
add
mov
and
lea
pushf
or
adc
add
sub
xor
ret
sbb
pop
adc
pop
mov
jae
jno
dec
fs
jmp
mov
ljmp
cli
or
pop
out
sbb
dec
push
xor
sub
je
xchg
add
vmptrld
aas
loope
mov
cmp
fstpl
arpl
adc
ja
in
rol
sbb
lock
out
hlt
mov
je
fwait
xchg
ret
dec
push
push
mov
push
xor
aaa
push
sti
cmp
imul
subl
lea
mov
mov
push
xchg
loop
daa
add
dec
cld
movsb
repnz
mov
dec
cld
inc
and
adc
pop
add
add
arpl
cmp
cld
loope
roll
push
push
stc
jne
pusha
push
dec
lret
imul
dec
gs
jo
mov
mov
cltd
movsb
mov
sub
dec
add
adc
xchg
pop
inc
js
adc
fs
cmpl
into
add
dec
xlat
sub
int
movsb
movsb
mov
jae
dec
sbb
fs
mov
jae
loopne
sub
mov
dec
das
fldenv
mov
mov
xchg
andl
mov
push
add
jmp
nop
mov
and
adc
outsb
and
lock
es
sbb
push
xor
in
call
mov
pop
mov
std
sbbb
xchg
scas
in
nop
aam
inc
in
lock
cmp
je
inc
mov
add
jo
lcall
xchg
xlat
shl
enter
jle
cmp
jle
add
add
pop
or
cmpsl
lcall
mov
dec
out
xchg
inc
outsb
test
in
xor
call
mov
test
and
and
js
cli
push
inc
cmp
call
or
fnstcw
cmp
loope
jne
push
lea
hlt
or
xor
testl
add
adc
jle
js
or
call
push
ss
adc
jnp
push
push
pop
repz
inc
cli
cmp
jne
jns
push
push
or
fwait
iret
rorb
scas
scas
or
xchg
push
mov
mov
ds
inc
movsl
orl
pop
pop
xor
sbb
dec
sti
outsb
jae
push
adc
adc
movsl
out
or
pop
push
or
sbb
xchg
pop
sub
add
and
add
jg
mov
movsl
paddd
pop
imul
test
ret
or
aam
jge
mov
jnp
jo
pop
dec
jge
jne
lea
sub
les
repnz
or
cmp
mov
movl
in
aam
call
mov
ss
loopne
test
add
mov
sbb
inc
push
rclb
or
mov
adc
xchg
pop
pop
sbbb
dec
iret
push
mov
pop
xchg
mov
inc
add
or
enter
jo
adc
xor
shr
sbb
dec
out
icebp
adc
aaa
repnz
pop
imul
xchg
sbb
and
insb
cmp
mov
mov
add
inc
cvtdq2ps
loopne
arpl
jle
gs
les
les
xor
jo
adc
sahf
and
inc
dec
add
or
xor
xor
loopne
pop
call
or
pusha
jae
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
pop
js
loope
call
dec
stos
and
pop
mov
pop
jmp
jb
pusha
dec
and
hlt
mov
pop
ret
pop
leave
xor
and
adc
fsubrp
jnp
inc
jbe
arpl
movups
cmp
dec
push
int
cmpsl
sub
inc
int3
loope
inc
mov
cld
std
lahf
subb
pusha
dec
add
or
adc
add
fsubrs
sub
push
pop
rolb
pop
xor
pop
or
cmp
dec
mov
cmp
dec
aam
mov
subb
xchg
or
sub
mov
and
or
fld
xchg
lock
or
or
mov
sbb
jge
insl
loopne
xchg
add
call
pop
leave
roll
dec
call
push
lret
ret
xchg
sbb
scas
xor
add
adc
dec
nop
xor
aam
pop
insb
and
test
sub
je
cmp
jb
cmp
ja
pusha
pop
pop
inc
cmc
push
push
mov
jmp
add
pshufw
fistl
scas
push
je
push
jne
mov
lock
aaa
add
push
xchg
dec
test
fnstenv
sub
stc
and
fisubs
add
add
je
or
push
mov
pop
andl
fmull
sbb
lock
add
push
int3
pop
fbstp
mov
jmp
xor
xchg
push
sbb
clc
fcoml
add
pushl
xchg
inc
cmp
or
mov
add
daa
mov
cmp
leave
jmp
outsb
in
pop
push
mov
in
push
adc
pop
xor
ret
inc
pop
outsl
flds
jle
mov
fildll
add
js
repz
pop
hlt
lods
shll
cmp
xchg
daa
daa
mov
outsl
adc
xor
inc
inc
or
pop
cld
addb
int
and
pop
adc
sub
adc
mov
inc
mov
and
mov
push
xchg
adc
push
xchg
sbb
inc
mov
mov
inc
mov
ret
xchg
jp
insl
loope
loopne
mov
in
fmuls
add
add
mov
pop
inc
ljmp
add
cmpb
mov
add
daa
nop
dec
lret
imul
inc
fsubrs
dec
jl
mov
sub
jge
mov
inc
push
mov
iret
movl
jecxz
push
shrb
fs
cmp
out
arpl
pop
push
mov
fsubrp
in
pop
repnz
inc
in
lock
in
and
push
sub
ja
out
sub
sbb
test
popf
test
dec
aam
shrb
xchg
xchg
outsb
or
adc
test
add
pop
aas
push
es
sbb
adc
push
cltd
lock
xchg
sahf
out
pop
sub
add
sbb
out
out
sti
fwait
icebp
out
sbb
mov
adc
xor
fadd
add
adc
mov
add
xchg
xchg
shl
jmp
push
rcl
xchg
xor
add
cmp
fmul
repz
dec
pop
xor
push
insl
dec
push
cmp
repz
lea
ja
mov
push
rclb
mov
mov
mov
daa
out
and
mov
and
push
lock
sub
pop
sub
cld
in
inc
nop
fstps
and
testb
aas
cmpsl
add
jb
pop
out
nop
int3
jns
out
pop
addl
imul
lods
mov
add
xor
loope
repz
jns
inc
xchg
lock
lock
fdiv
jo
mov
daa
sbb
js
aam
insb
movsb
mov
push
sbb
aaa
inc
aam
add
repnz
pop
repnz
inc
outsl
inc
dec
push
sub
int3
xor
mov
xor
scas
repnz
inc
fmull
loopne
out
mov
mov
add
push
in
sbb
inc
mov
push
nop
push
inc
jle
mov
aas
in
repz
dec
add
rcrb
inc
setle
sbb
or
inc
pop
or
and
shl
inc
js
jno
es
push
out
enter
adc
movsb
mov
add
std
incl
or
movb
sub
sbb
push
push
and
dec
lret
fisubl
mov
popa
stos
imul
bnd
icebp
jmp
sbb
aam
in
cmp
lahf
rcrl
repz
mov
mov
aas
dec
jmp
aas
push
daa
imul
clc
clc
xchg
dec
jge
std
repz
sbb
addr16
mov
inc
outsl
inc
hlt
clc
add
mov
into
int3
call
and
cmp
ja
mov
xchg
js
adc
lods
pusha
sbb
lea
ret
add
pusha
mov
xor
pop
push
pop
outsl
adc
mov
add
subl
test
add
inc
adc
dec
adc
jge
repz
rolb
outsl
pop
xor
or
fisttps
mov
adc
rorb
filds
cmc
xchg
scas
push
nop
inc
addb
push
mov
mov
aam
jg
xchg
in
sbb
sbb
mov
nop
call
sub
clc
arpl
test
add
lret
mov
push
insb
fldcw
fsubl
sub
push
fdivl
adc
sbb
sbb
jbe
popl
fs
subl
sbb
pop
add
imul
je
cmp
xor
xlat
not
lret
and
jl
daa
jmp
popa
pop
adc
ret
push
mov
xor
mov
cmp
sub
mov
adc
jmp
sub
icebp
loop
adc
inc
or
fcomps
pop
sub
xlat
sbb
repz
idivb
add
lods
adc
aas
fisttps
cmpsb
stc
xor
mov
and
jns
ret
stc
loope
dec
dec
mov
dec
pop
pushf
aad
mov
loope
and
xchg
testl
loopne
add
or
ss
icebp
dec
sbb
mov
les
add
xchg
add
sub
xor
xchg
xchg
sbb
mov
arpl
dec
push
cmp
into
mov
jmp
add
and
xor
aad
push
inc
adc
aas
xchg
lods
add
in
stc
cli
fstps
rcrb
int
rolb
cs
fst
cld
movl
sbb
dec
aaa
fwait
out
loope
rorb
sti
fistpll
fwait
jb
mov
das
ret
push
imull
mov
seto
pop
dec
rcrb
pop
and
movsb
movsl
popa
frstor
in
add
nop
inc
push
lock
pop
je
popa
addr16
addl
push
jno
in
push
push
arpl
lcall
sbb
sti
add
jmp
ss
add
js
adc
mov
and
mov
dec
js
addr16
or
and
popf
movsl
inc
pushl
mov
jp
and
dec
clc
inc
cld
and
and
aad
xchg
cmpsl
add
push
inc
inc
lea
mov
aam
test
fnsave
push
fmuls
sbb
cmpsb
xor
jo
or
cmp
xor
je
and
leave
push
mov
dec
test
and
or
add
inc
fucomip
push
xchg
push
dec
outsl
push
jns
shll
sub
popa
mov
and
xchg
sbb
adc
fwait
aas
or
mov
daa
xor
fs
mov
mov
pop
test
adc
lock
icebp
ss
cmp
enter
sub
aaa
dec
sub
pop
cld
call
jmp
aam
sbb
jmp
lock
call
ds
outsb
dec
fdiv
mov
js
out
mov
xor
leave
mov
stos
and
rol
test
test
flds
xor
sbbl
lods
inc
imull
xchg
icebp
jle
je
sub
lds
dec
lods
cltd
push
out
ja
sbbb
mov
daa
jmp
fdivrp
push
or
nop
inc
fprem
rclb
sbbb
call
ret
mov
pop
adc
cltd
test
pcmpgtd
mov
or
add
roll
daa
or
jo
test
inc
push
mov
lock
adc
js
dec
sbb
test
push
imul
roll
sbb
adc
nop
cmp
incl
dec
and
push
pushl
push
scas
mov
and
push
and
movsl
aaa
add
pop
dec
popf
add
pop
and
mov
pop
negl
push
inc
pop
addb
lea
sti
dec
pop
mov
addr16
pop
or
sub
das
adc
sub
push
jae
rcrb
dec
dec
or
cmp
add
aaa
sbb
repnz
nop
das
sti
pop
cmpsl
imul
push
add
ret
test
rorb
rcrb
mov
mov
mov
xchg
inc
les
icebp
sub
xchg
xchg
sub
push
jmp
xchg
adc
cmc
scas
xchg
ljmp
mov
mov
adc
jg
rcrb
adc
xor
push
lods
cmp
push
sub
movsl
fsubr
stos
int
xchg
test
repnz
shll
pop
inc
lsl
add
fisubl
pop
and
bound
jno
in
add
sub
cmp
jae,pn
imul
adc
sub
sub
xorb
add
or
outsl
insb
gs
outsl
es
add
mov
add
mov
dec
test
imul
arpl
xor
aaa
dec
outsl
popa
xor
xchg
rcll
xchg
jnp
pop
lea
inc
xchg
mov
ds
xchg
lock
jp
pop
jmp
dec
inc
mov
insb
movl
sti
int3
das
mov
rclb
lea
push
and
ss
sub
imul
out
out
pop
sarb
cs
and
adc
sbb
mov
jmp
fldt
add
fdivs
std
fmuls
dec
and
fs
in
jo
xchg
decl
or
leave
leave
loopne
loop
in
loopne
fisttpll
mul
rorl
fmuls
clc
xchg
fcoml
in
push
add
or
enter
dec
adc
out
mov
add
xor
imul
or
or
imull
mov
fcoml
push
push
add
dec
sbb
ds
cmpsb
pushf
or
mov
cmpl
outsb
shrb
sbb
cmp
pop
sbb
mov
sub
ficoml
lret
push
fs
movsw
mov
lods
push
fs
into
sbb
cwtl
test
xor
jb
and
lods
test
and
pop
es
je
push
fs
orb
sbb
lods
mov
inc
rorl
add
nop
add
sub
add
xchg
add
and
xor
xor
nop
dec
mov
mov
enter
sbb
orb
mov
mov
adc
or
mov
fs
push
xchg
lods
les
fs
fsub
icebp
rdmsr
and
pushf
int3
pop
pop
dec
repz
sbbb
and
sahf
out
lcall
jns
out
lret
xchg
lahf
repz
out
orb
sahf
iretw
repz
jae
aas
dec
pop
in
out
jns
pop
icebp
decb
push
sbb
and
inc
or
sub
out
or
sarl
stc
push
or
and
cmp
repz
jmp
jg
stc
cmp
repz
cmpsb
mov
inc
or
repz
cmpsl
push
fs
push
add
mov
jns
cmp
addb
sub
or
adc
adc
lret
fwait
cmp
sub
mov
push
push
add
enter
mov
sbb
jno
pop
repnz
mov
test
pusha
sbb
addb
push
ss
pop
outsb
or
jp
mov
rcrb
push
and
pop
add
sahf
out
adc
pop
jns
out
mov
inc
les
inc
inc
aas
and
leave
sbb
and
xor
inc
add
repnz
adc
and
cmp
and
sbb
jns
or
and
jo
sub
and
xor
push
mov
cmp
scas
mov
and
mov
xor
sbb
and
mov
and
jo
push
enter
out
sub
xor
es
dec
test
fisubrs
fmuls
jmp
sub
push
sub
sub
xor
aam
cs
pushf
xor
push
rcrb
fwait
push
pop
and
add
mov
xlat
orb
jmp
mov
push
daa
testb
sub
lock
mov
mov
xchg
add
cmp
fstps
inc
lods
dec
out
mov
daa
xchg
lcallw
sbb
push
shl
and
orl
test
or
sbb
add
mov
push
mov
outsb
out
mov
xor
push
mov
sub
les
sbb
fninit
daa
xor
pusha
nop
les
jbe
daa
daa
jo
add
ret
popf
pop
or
jmp
and
jne
fimull
cld
cmp
push
test
dec
adc
sub
cmpl
jmp
and
inc
add
sbb
or
or
and
mov
sbb
mov
inc
and
or
pop
lret
mov
cmp
mov
sub
and
enter
push
outsl
aam
mov
imul
cmp
daa
push
push
shrb
inc
sbb
dec
ja
and
out
addr16
push
inc
stos
add
dec
xchg
push
push
test
dec
sub
adc
cmpl
test
pusha
pushf
xor
pop
mov
inc
es
dec
cmpl
add
mov
sub
test
daa
js
or
imul
ficompl
inc
adc
cmp
leave
or
and
or
sbb
or
nop
sub
lea
dec
add
pusha
je
jp
adc
dec
add
ficoms
push
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
push
mov
sub
dec
roll
sbb
mov
inc
cmp
mov
or
and
cltd
add
sbb
xchg
stos
test
in
and
jnp
adc
adc
sbb
pop
rorl
ss
or
mov
add
inc
lahf
imul
pop
fs
cmp
adc
bound
xchg
stc
outsl
sbb
fcoms
pop
xchg
jne
lret
dec
les
jecxz
sbb
sbb
ja
jge
mov
adc
push
inc
sbb
imul
pop
jb
leave
pop
inc
push
cltd
mov
out
jge
add
call
dec
and
aaa
xchg
dec
cmpsb
sub
push
add
fmulp
add
push
inc
pusha
pop
jb
mov
into
mov
push
cmp
adc
jmp
xor
lea
or
sbb
push
inc
add
aas
or
std
cmp
enter
add
lcall
repnz
push
int
cmp
cmp
or
pop
je
xchg
adc
add
mov
nop
nop
mov
les
and
pop
scas
fs
mov
add
jne
jae
xor
in
mov
or
out
inc
aaa
cmc
add
ret
mov
push
add
mul
inc
push
mov
sub
cmp
mov
lea
add
mov
xor
xchg
xor
test
sbb
sti
add
pop
in
jo
jmp
jl
inc
push
stc
in
mov
aam
adc
repnz
adc
pop
inc
inc
cltd
loopne
jg
adc
popf
mov
jecxz
leave
push
xchg
sbb
mov
sub
sub
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
mov
fcomp
ret
sub
mov
sub
jg
inc
adc
and
rcrl
call
sub
divl
loope
push
popf
add
push
mov
jno
sbb
sbb
pop
inc
sbb
xchg
push
movsl
mov
sbb
dec
jb
push
mov
jb
cmp
loop
jo
mov
jne
or
adc
inc
push
inc
pop
add
ljmp
add
mov
push
adc
jl
add
aas
push
cltd
sbb
mov
test
stos
xchg
mov
xor
loopne
xorl
hlt
sbb
sub
test
orb
sbb
popa
outsb
mov
ret
mov
xor
add
fisubs
mov
mov
jno
cwtl
inc
lahf
adc
xor
cmp
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
xchg
push
out
je
fs
and
jnp
mov
lcall
cmp
in
jmp
sub
adc
sub
mov
pop
jno
xor
ljmp
sbb
adc
je
inc
cmp
jne
hlt
decb
mov
jns
xchg
jb
fcmovbe
xor
inc
outsb
adc
pop
or
adc
cs
mov
inc
add
ret
pop
in
aam
mov
in
and
lret
xor
add
xor
fmull
or
test
sbb
inc
mov
adc
fwait
out
leavew
mov
repnz
xchg
and
cmp
xor
xor
sub
add
add
adc
mov
jp
shl
dec
adc
test
sub
inc
adc
enter
mov
push
add
pop
into
adc
xlat
xchg
loopne
jmp
in
ret
inc
mov
push
inc
cmp
cltd
dec
sbb
movl
lds
or
xchg
mov
lock
cmp
mov
movsb
int3
das
xchg
xor
dec
test
xor
rolb
bound
jns
xchg
pushw
xchg
sbb
inc
adc
jne
lahf
scas
mov
fs
sbb
mov
and
pop
loopne
xor
push
mov
push
lahf
mov
jae
mov
cmp
ja
or
fwait
enter
dec
add
sarb
mov
dec
daa
inc
or
ret
ss
test
adc
fs
add
or
sbb
shll
hlt
cmpl
mov
inc
loopne
lret
insb
mov
or
int
rcll
add
add
mov
sub
adcl
test
adc
cli
or
stos
add
sbb
xorb
add
das
or
sar
xchg
mov
idivl
adc
sub
pop
scas
dec
add
gs
mov
adc
in
mov
and
add
jmp
adc
add
dec
mov
sarl
mov
adc
jp
mov
push
inc
push
call
bndldx
or
inc
cmp
push
icebp
sbb
nopl
incl
lret
push
dec
lea
add
add
ljmp
add
loop
dec
push
xorb
adc
pop
or
xor
adc
decb
js
xorl
push
adc
cmp
inc
pop
push
adc
cmp
icebp
js
lock
add
mov
popa
cmpsb
cld
pop
decb
mov
add
rorb
push
cmp
push
daa
push
inc
inc
sbb
adc
add
add
aam
or
pop
rclb
or
pop
fsubrl
clc
adc
jne
test
call
jmp
sub
push
mov
cmc
es
lret
xor
mov
xor
xlat
and
js
imul
xor
js
or
call
nop
xchg
pop
jge
rol
sahf
test
mov
push
pop
pop
or
inc
enter
push
dec
cmp
sbb
xor
stc
dec
loopne
add
xchg
pop
pop
inc
xor
lahf
push
in
fwait
inc
mov
xchg
rclb
dec
push
push
add
mov
mov
aad
and
in
push
pop
lock
daa
and
jne
jmp
incb
in
mov
es
jns
mov
inc
rcrb
xor
test
pop
jg
sbb
sbb
pushf
movsl
and
lods
sub
or
popa
lods
push
lret
inc
aas
sbbl
lods
and
cwtl
push
or
push
pop
orl
jmp
add
adc
or
xor
ja
inc
jmp
aam
pop
sub
jb
and
adc
mov
mov
mov
lock
adc
xchg
dec
outsl
and
hlt
test
les
push
movsl
dec
or
push
frstor
sub
xor
pop
pop
pop
and
mov
or
push
cwtl
inc
adc
in
cwtl
jo
shll
cmp
mov
pop
test
jmp
and
les
adc
fdivrs
clc
rolb
adc
je
mov
das
in
and
hlt
and
test
pop
test
mov
dec
cmpb
sub
add
push
pop
and
sti
and
dec
mov
jp
es
jmp
adcb
dec
leave
dec
mov
add
inc
cmpsb
mov
leave
stos
jg
sub
enter
xor
dec
inc
mov
lods
dec
pushf
or
or
add
loop
in
cmp
xor
add
es
sbb
sub
dec
dec
in
es
inc
sahf
push
xor
rorb
cmp
xchg
rcrb
push
mov
nop
add
add
addb
sub
or
jge
pop
xchg
push
icebp
pusha
and
ljmpw
inc
cmpsb
sub
mov
lret
xor
sbb
and
xchg
lcall
daa
lea
add
clc
cmc
mov
out
out
mov
je
fwait
dec
sbb
bound
mov
out
mov
add
dec
pushf
fwait
adc
shrl
jo
adc
adc
sbb
test
sub
mov
cmpsl
mov
adc
movsb
and
outsb
imul
push
nop
push
lcall
mov
lds
sbb
xlat
sub
add
push
nop
iret
mov
subl
sub
imul
ja
push
sbb
and
mov
jns
jl
cmp
cld
dec
clc
scas
clc
sub
out
sbb
and
mov
insl
xchg
sub
xor
inc
sbb
and
inc
adc
test
mov
fsts
mov
jbe
mov
add
jae
jbe
sub
pusha
lahf
add
dec
cld
sbb
push
ret
and
pop
xchg
imul
cwtl
or
dec
push
repz
lret
imul
ss
je
test
push
push
mov
imul
dec
jmp
iret
sub
aam
pop
dec
jne
xor
pop
jecxz
test
cmpsb
push
stos
mov
ja
cmpl
cltd
dec
inc
cmp
lock
repz
mov
mov
pusha
adcb
jp
icebp
loope
adc
daa
nop
repnz
sbb
mov
cwtl
lds
cmp
push
scas
or
xor
jbe
mov
inc
push
imul
sbb
push
inc
push
cld
jns
and
sbb
clc
sub
cs
cs
add
sbb
test
add
xor
or
sbb
jl
dec
dec
insb
cmp
jns
xchg
adc
pop
inc
cmpsb
out
pushf
popf
pop
pop
add
sub
shrl
lea
inc
clc
leave
or
or
fbstp
icebp
out
call
fwait
or
sub
jne
in
imul
or
add
orl
sbb
xor
cmp
iret
rcr
or
fstps
pop
mov
pop
add
stos
mov
sub
inc
cmp
sbbb
rorb
mov
insl
loop
pop
cmpsl
adcl
aam
push
xchg
push
imul
xchg
cmp
cs
jo
fwait
sub
test
jmp
movsb
mov
dec
outsl
pop
or
aam
cs
dec
pop
push
popa
and
lock
std
adc
adc
into
and
jnp
and
fldcw
or
xchg
inc
push
inc
push
es
fs
cltd
mov
and
mov
sbb
inc
push
std
mov
aam
mov
fs
incb
loop
insb
mov
pop
in
add
das
dec
loopne
adc
sub
in
sbb
jns
rorb
add
rorl
mov
push
push
insl
insw
cmp
pop
push
gs
sbb
sub
push
lock
mov
inc
and
popf
shlb
and
gs
iret
mov
aad
add
outsl
shl
sbb
je
mov
mov
iret
imul
fwait
dec
rcrl
adc
jp
add
stos
mov
inc
cmpsl
pop
das
inc
pop
lcall
sub
insl
lods
ret
cmpsb
push
mov
dec
pop
leave
push
xchg
or
mov
inc
loopne
add
xchg
mov
jo
push
push
mov
outsb
mov
daa
movsb
inc
aad
cmp
xor
ret
sbb
test
je
out
jno
sti
add
mov
add
jbe
or
pop
roll
test
dec
mov
aas
outsl
or
movsl
xchg
or
incb
add
mov
push
fwait
inc
add
jmp
add
jmp
flds
fmuls
add
xor
fdivrp
adc
in
flds
aaa
inc
sub
add
dec
inc
push
inc
lahf
sub
xchg
or
inc
lods
int
notl
push
jge
insb
adc
imul
sub
pop
lea
add
movsl
rorl
xor
es
lds
cltd
dec
adc
mov
pop
pop
mov
or
sti
jg
sbb
imul
xor
sub
xchg
aad
sbb
cltd
fisubrs
nop
cmp
push
out
or
add
add
pop
pop
xor
or
mov
lret
add
dec
push
dec
push
push
mov
xor
fcom
mov
xor
loopne
jne
xchg
outsl
and
adc
lock
lret
pop
xchg
int
mov
filds
add
mov
mov
out
or
or
sbb
jmp
fbld
aas
xchg
push
inc
sub
ficoml
xor
mov
cli
insl
xor
sbb
mov
daa
pop
fisttpl
adc
dec
hlt
and
insl
mov
outsl
sbb
daa
cmp
push
sarb
in
cmp
insb
inc
imul
jmp
sbb
sbb
in
pop
lods
fstps
inc
ja
insl
sub
shlb
sbb
mov
push
xor
dec
lea
aad
ja
cmp
or
or
fcomip
fbstp
daa
pop
aam
ret
into
repz
imul
jo
add
sub
iret
pop
cld
mov
mov
das
or
sub
push
push
add
mov
jbe
jnp
loope
out
sbb
pop
mov
push
js
cmpsb
sbb
fnstenv
inc
pop
and
inc
dec
fadds
sub
pop
adc
enter
xchg
ret
and
sbb
cmp
jmp
roll
add
sub
out
sub
daa
xor
arpl
push
pop
xor
leave
aas
mov
cmp
es
push
jl
sub
dec
ss
xchg
jns
inc
dec
or
test
mov
xchg
push
jge
cmp
add
xchg
push
dec
adc
cmp
sbb
inc
inc
mov
dec
xchg
jno
pop
outsl
in
sbb
leave
aam
cmp
dec
aam
dec
mov
pop
loope
test
add
orl
cmp
adc
jne
shll
popa
mov
insl
mov
mov
pop
dec
popf
arpl
aaa
fildl
xor
pop
add
out
and
sub
mov
lods
sub
enter
cmp
cmp
cmp
fdivp
pusha
or
cltd
sub
lock
push
inc
push
aaa
cmp
fidivrl
pop
xchg
inc
xchg
mov
lock
or
das
adc
jo
inc
pop
mov
outsb
outsb
push
sbb
sub
xor
cmc
subb
arpl
jne
xorb
sbb
sbb
jbe
adc
and
insl
ja
movb
adc
inc
je
xor
outsl
rcrl
and
lcall
push
enter
mov
or
push
adc
rorb
sahf
out
push
and
cmp
stc
stos
cmp
pop
push
inc
jmp
cmp
add
cs
adc
aam
dec
push
add
bound
ds
or
shrl
cmc
xchg
push
sti
lfs
sbb
in
or
push
add
push
lret
pushf
outsl
mov
sbb
inc
int3
push
lock
push
jl
dec
jmp
inc
inc
jecxz
repnz
inc
xchg
inc
insb
jg
inc
push
ja
inc
push
add
inc
dec
xchg
mov
add
xor
inc
inc
ltr
lods
cmp
add
sarb
push
shll
add
and
scas
pusha
dec
je
mov
psubusb
xor
adc
insb
dec
movsb
xor
out
and
leave
mov
fs
sbb
sub
es
pusha
push
jl
and
and
or
jnp
xchg
insl
les
fimuls
or
inc
sub
push
enter
sub
sub
dec
push
sbb
xchg
pusha
sbb
je
dec
cmp
inc
cld
push
push
cmp
inc
xchg
lods
push
xchg
jo
xor
add
add
movsl
xchg
dec
or
pop
mov
cltd
jo
and
int3
aas
enter
inc
fsubr
das
imul
arpl
push
and
dec
push
cmp
and
enter
je
push
and
stc
add
push
and
add
mov
push
mov
sarl
xor
cmpsb
sbb
inc
sarl
push
jo
pop
xor
and
dec
aas
dec
jge
mov
xchg
add
inc
jb
movsb
lea
mov
mov
call
jmp
cmp
mov
inc
mov
xchg
lock
sub
les
push
loop
add
sub
or
jbe
dec
cmp
xlat
leave
ret
jmp
inc
aam
jns
push
inc
mov
add
inc
ja
sub
jb
lods
stc
add
leave
insb
outsb
dec
bound
movsl
jno
mov
sbb
jb
mov
in
xchg
add
cmpsb
xlat
push
call
aam
test
inc
popf
pusha
movsl
xor
xchg
dec
test
int3
dec
jmp
cli
mov
sbb
add
inc
pop
sub
and
outsl
ljmp
inc
lock
shl
mov
dec
or
in
dec
sbb
aaa
insb
sbb
add
mov
cs
cmp
mov
sbb
cmp
ss
ret
rcll
mov
pop
xor
pop
dec
pop
jb
cmovbe
inc
and
inc
inc
cmp
inc
and
adc
ss
xchg
mov
fldl
bound
push
movsb
les
sub
adc
mov
push
dec
mov
jne
notb
sbb
shlb
scas
sub
add
xchg
je
dec
lahf
cwtl
outsl
or
cmp
mov
or
scas
int
adc
leave
loop
adc
xchg
cld
ds
int3
data16
push
pusha
popa
call
movsb
mov
xchg
and
add
loopne
dec
movsl
mull
push
rclb
sahf
sbb
dec
outsb
cmpsb
fwait
add
inc
and
mov
or
cli
movsl
pop
aad
lods
iret
test
push
sbb
sbb
pop
dec
loopne
aam
stos
push
or
add
int
cmpl
call
je
sub
xor
ret
sahf
outsl
xchg
or
inc
das
jmp
cmpsl
sbb
jnp
or
imul
cmp
test
add
or
adc
push
push
dec
sub
adc
inc
jae
bsr
cmp
add
aaa
inc
je
aam
mov
xchg
mov
xchg
aaa
xor
aam
and
pusha
inc
mov
loop
add
mov
test
scas
loope
jmp
sarb
imul
outsb
jnp
add
nop
add
xchg
scas
test
cmp
rcrb
dec
outsb
mov
movsl
cmp
rorb
push
inc
inc
ljmp
sbb
sub
xor
scas
pusha
push
fcmovu
add
sub
push
push
mov
aam
adc
cltd
pop
movsl
pop
or
fwait
out
push
xor
je
sbb
out
jbe
xchg
sub
or
aas
xchg
dec
testl
dec
cmpsb
push
add
push
cld
into
pusha
or
ss
inc
je
inc
add
rorb
sbb
xorl
sarl
cmp
out
sub
jge
arpl
insl
or
prefetch
nop
or
push
sbbb
sqrtps
xchg
pop
adc
sub
arpl
adc
or
leave
push
inc
sbb
push
push
pop
nop
or
lret
xchg
cs
adc
mov
mov
sbbb
inc
lahf
mov
xchg
xchg
sbb
cli
fs
adc
xchg
sbb
dec
sahf
ja
jno
nop
pop
and
inc
or
dec
sbb
aad
stos
cmp
sub
xchg
xchg
push
inc
dec
sub
cmp
add
js
data16
mov
mov
and
in
push
imul
daa
and
lea
inc
xchg
push
sub
jge
and
add
imul
xchg
mov
inc
jo
mov
sub
push
ret
or
xchg
sub
in
sub
and
mov
push
add
rcrl
stos
sbb
jo
sbb
add
andb
out
js
sub
adc
imul
pop
sbbb
xor
add
lock
push
cmc
push
dec
faddl
outsb
in
or
jmp
popa
sub
push
ja
pop
in
pop
cmpsl
test
popa
mov
cmpsl
loopne
jecxz
sub
mov
cmp
mov
repz
adcb
add
gs
les
popf
pop
fs
ljmp
loope
mov
mov
insl
jo
xor
lret
and
inc
sub
repnz
jge
push
subl
push
jne
lcall
xor
repnz
shlb
repnz
sub
adc
inc
fcomp
jns
sub
xor
pop
inc
loopne
mov
in
in
push
fisubrs
ss
mov
dec
lock
shll
lods
and
inc
iret
xchg
nop
pop
mov
xor
cld
es
sbbl
dec
adc
enter
dec
int3
sbb
and
and
add
xchg
xchg
push
adc
mov
out
adc
ja
mov
or
push
inc
mov
inc
loop
mov
inc
jno
add
dec
jnp
xchg
mov
mov
xor
push
push
popf
xor
dec
imul
add
inc
and
cmpsl
in
sub
push
and
popf
or
outsl
sbb
enter
sub
nop
dec
push
push
xor
xchg
and
xchg
sti
aad
add
sub
pusha
pop
add
add
fadd
pop
mov
lds
xor
ss
jecxz
pmulhw
and
out
scas
sbb
dec
push
and
cmp
mov
mov
pop
and
cmpsb
fsubl
in
inc
add
pop
inc
sbb
imul
mov
aaa
cmpsl
mov
sbb
adc
xchg
imul
mov
push
ja
andb
movsb
shll
push
loope
pop
mov
xor
push
or
in
xor
adc
adc
das
adc
or
insb
and
or
xchg
loopne
adc
jle
jl
add
scas
addb
and
mov
repz
mov
cmp
test
sahf
cmpsb
pop
adc
cs
pop
repnz
lods
add
add
cmpsl
cmp
sbb
or
add
xor
jns
orl
push
and
add
push
les
imul
arpl
test
fs
add
or
pop
gs
sub
repz
js
jne
fwait
and
dec
repz
sbb
adc
or
inc
out
shrb
ljmp
loop
sbb
sbb
adc
jns
pop
inc
xor
pop
add
or
sbb
push
jle
insl
pushf
push
jp
fimull
or
aam
mov
das
push
dec
mov
mov
cmpsb
jle
xchg
push
push
adc
sub
out
test
fistpl
xor
or
enter
jle
pop
rcrl
and
dec
cwtl
test
mov
or
xchg
adc
fwait
or
pop
ja
inc
sub
in
jle
xchg
sub
add
inc
js
cmp
push
cltd
or
push
mov
push
or
push
dec
xor
lcall
inc
js
cmp
or
dec
mov
pop
add
cmpsl
inc
adc
mov
pop
and
sub
push
push
ja
cmp
or
or
or
adc
jo
or
cmpsb
push
adc
push
jmp
hlt
pop
push
mov
scas
push
lahf
push
push
sbb
iret
jnp
sub
or
or
popf
out
cmp
or
or
dec
push
adc
cmc
movsb
outsl
cmpb
push
pop
add
lret
cs
push
fidivrs
sbb
sbb
push
pop
push
sbb
or
add
or
mov
iret
and
push
push
pop
adc
rcrl
adc
push
jle
and
mov
adc
sbb
stos
push
into
lea
sub
dec
pop
dec
aas
clc
and
lcall
mov
push
mov
add
mov
out
nop
push
push
xchg
or
push
mov
pop
or
mov
popf
push
add
or
mov
cld
stos
push
lock
scas
les
pop
jns
lcall
and
push
dec
outsl
pop
sbb
mov
dec
lea
mov
dec
pop
push
mov
sub
cwtl
or
xchg
xchg
xchg
cmpsl
push
or
push
xor
adc
or
or
xchg
add
dec
push
jecxz
add
mov
sti
dec
mov
sub
mov
xor
xchg
les
fs
sbb
sbb
dec
mov
popa
mov
movsb
mov
or
push
jle
cmp
jl
in
test
and
lods
push
inc
mov
outsl
pop
mov
out
call
insl
or
cs
sbb
out
ret
or
sbb
fs
mov
mov
daa
pop
out
add
and
and
insl
mov
sub
pop
dec
in
cmp
clc
xchg
inc
pop
lods
jns
orl
dec
fsub
fsubr
outsl
sub
inc
out
sub
imul
add
dec
loopne
loopne
inc
sbb
add
data16
lock
cmpsl
and
imul
xor
hlt
fstpl
fwait
push
push
lcall
pop
in
jae
popa
pop
sub
pop
dec
dec
cs
lods
jge
inc
mov
inc
lock
sbb
repz
adc
and
xor
sub
sub
add
dec
pusha
js
xor
out
pop
adc
int3
add
jne
jl
mov
mov
sbb
or
fucomp
add
inc
aaa
cwtl
adc
add
lods
nop
xchg
inc
cwtl
xchg
lcall
inc
sbb
shr
inc
pushf
lcall
pop
pop
pop
enter
lock
or
and
jge
mov
sub
pop
ja
or
cmp
push
mov
std
or
jbe
jl
add
divl
mov
movsl
pop
mov
mov
xor
adc
adc
add
sub
mov
add
es
or
pushf
add
aam
test
and
xlat
rcll
push
push
scas
dec
pop
mov
hlt
insb
push
add
call
jecxz
add
or
ret
adc
pushf
cmp
outsb
add
or
xchg
sbb
enter
xorl
xchg
jmp
nop
scas
push
mov
add
loope
xchg
insb
add
sbb
pop
and
pop
bound
dec
or
sti
xor
fcmovb
xchg
int3
faddl
jmp
adc
sub
xchg
repnz
sub
ja
bound
add
movswl
bound
add
or
dec
push
add
or
dec
in
xchg
int3
or
mov
jle
jl
lds
xchg
xor
mov
pop
or
sbb
pop
ja
pop
loope
cltd
xchg
jae
sahf
rclb
sbb
push
int
or
jbe
test
sbb
xchg
clc
clc
add
je
stos
jecxz
repz
cmp
in
arpl
loop
push
xchg
loopne
aaa
and
test
test
add
mov
and
nop
push
add
adc
xor
push
inc
arpl
mov
dec
ds
adc
iret
xchg
pop
inc
jp
cmpsl
movsb
fs
cld
mov
mov
insl
adc
and
xor
mov
xchg
push
ljmp
adc
push
je
nop
add
sahf
mov
and
adc
shlb
adc
and
pop
aaa
pop
cmpsl
pop
and
pop
sub
sub
mov
jle
sub
imul
lods
jbe
sub
stc
addr16
add
jl
iret
jnp
push
inc
fsub
add
or
sub
lret
cmp
sub
pop
lret
pop
repnz
nop
insb
dec
add
dec
mov
mov
pop
sub
jne
inc
outsl
push
mov
push
cltd
test
mov
and
movsl
pop
insw
stos
sub
lret
ja
and
push
pop
ret
das
mov
jbe
fwait
or
inc
add
imul
nop
mov
nop
addr16
ror
jb
xor
lcall
in
inc
popa
popf
push
add
and
mov
sub
xchg
hlt
push
insb
jge
and
xchg
dec
cmpsb
jno
movsl
lahf
rclb
lret
imul
mov
orl
jl
add
inc
sahf
and
pop
mov
sbb
aam
call
push
fildll
nop
outsl
fsubrl
cmp
add
mov
rclb
xchg
pusha
jp
jae
fs
fmuls
add
testb
pop
aad
hlt
pop
cltd
fisttps
fdivrs
imul
and
and
inc
imul
shlb
out
or
and
add
and
xchg
aaa
repnz
subl
lea
mov
es
mov
mov
or
adcb
data16
or
fimuls
fldcw
push
mov
call
xchg
jns
sahf
pop
sidtl
loopne
pop
jo
arpl
dec
pop
xorl
aaa
pop
inc
sub
adc
push
roll
adc
or
sbb
and
adc
adc
xor
push
lahf
xchg
add
sbbl
jb
cmp
stos
insb
lea
jmp
sub
and
scas
and
mov
dec
push
cmp
pusha
insb
add
stos
mov
pop
mov
dec
insb
xchg
insb
rorb
in
mov
mov
enter
dec
shrb
and
pop
stos
jb
push
in
push
aas
loopne
add
add
insl
fldcw
jmp
rclb
pop
xor
sub
je
dec
je
add
jmp
inc
xor
sarl
push
mov
jmp
clc
inc
pop
jb
push
and
ret
xchg
xchg
push
push
push
add
sub
sub
pop
xor
mov
push
popa
cmpl
outsl
enter
test
outsl
nop
rcrb
outsl
or
mov
sbb
ja
sbb
dec
dec
imul
fildl
ret
sbb
add
mull
dec
jnp
lods
in
mov
sbbb
dec
add
testb
xor
inc
mov
sbb
hlt
ficomps
fidivs
dec
dec
adc
xor
cmpb
ja
and
adc
inc
push
fldenv
mov
ja
xchg
or
enter
jae
jb
jo
and
leave
mov
push
adc
ret
notl
orb
fists
sub
pop
lods
pop
add
cs
xchg
dec
sbb
pop
pop
mov
rorb
clc
mov
cli
push
int
nop
cmp
ss
cmp
mov
sub
cmp
add
es
jbe
sahf
sub
or
xor
pop
rorl
xor
pushf
jge
cmpsb
lea
jae
sbb
mov
sub
int3
cmp
fucomip
loope
popf
xor
adc
or
xor
roll
cmp
xor
and
and
xor
in
sbb
sbb
sar
jo
addb
jmp
fadds
mov
lcall
cmc
or
imul
sub
shr
sbb
adc
or
xchg
fcompl
jns
out
sbb
or
add
push
push
test
and
mov
movsl
jg
scas
and
pop
add
fadds
pop
push
mov
sub
push
rclb
add
add
add
in
adc
jle
adc
sbb
pop
add
mov
cmp
daa
and
lods
or
xchg
jne
aad
aad
inc
jns
xlat
mov
stos
xor
jge
ljmp
pop
push
out
fcmovu
mov
push
or
sub
mov
or
dec
dec
addr16
add
dec
jne
dec
inc
mov
popa
lock
jne
andb
sub
sub
add
mov
inc
out
inc
sbb
pusha
cmc
adc
and
pop
pop
xlat
mov
bound
andb
cmpsb
fisttpl
inc
shll
call
rorb
push
add
mov
push
clc
mov
cmp
jg
lea
adc
in
add
mov
xor
pusha
in
dec
inc
jo
mov
mov
xchg
xor
jne
loopne
sarb
jne
push
xor
jne
or
sub
push
nop
cmp
adc
add
sbb
fldl
call
sbb
jns
cs
cwtl
sbb
and
clc
outsb
inc
ja
sbb
sub
pop
adc
aad
pusha
jae
inc
inc
or
popf
sub
dec
ja
xchg
mov
jne
in
clc
jnp
mov
or
sbb
or
hlt
mov
icebp
mov
int
sbb
hlt
call
and
call
inc
lock
call
in
in
loope
sbb
loop
cld
sub
push
fcoml
cltd
dec
and
mov
or
pop
xor
xor
cmp
rol
rcl
sub
outsb
loope
jmp
push
jecxz
movsb
insl
jp
push
push
pusha
mov
mov
or
jo
out
popa
xorb
sbb
xchg
pop
lock
mov
mov
jp
mov
sbb
out
add
loope
outsb
sbb
mov
jne
pop
sbb
xchg
mov
and
nop
add
sub
and
call
inc
mov
or
add
pop
aam
jecxz
push
add
sahf
adc
ds
add
stos
addl
fmull
jecxz
mov
ror
push
mov
lret
pop
cmp
mov
ja
inc
stos
imul
gs
dec
enter
dec
fistpl
xor
les
dec
shrb
mov
bound
sarb
or
insl
shll
jns
add
sarb
push
in
or
mov
add
cmpsl
inc
and
mov
pop
inc
fwait
adc
adc
stos
inc
mov
or
inc
mov
xor
push
mov
mov
xchg
and
lods
mov
stc
clc
lds
test
xor
gs
ljmp
div
mov
add
mov
sub
pop
adcl
pop
pop
push
dec
sbbb
rorb
xchg
push
sbbl
lcall
loopne
dec
mov
cmp
clc
sub
mov
icebp
and
lods
fcoml
fdivrs
in
mov
fdiv
lock
mov
jne,pn
inc
mov
mov
adc
popa
decl
xor
push
ret
dec
fidivs
cmp
sti
pushf
inc
xor
imul
stos
pusha
sub
xor
and
pop
rorb
insb
int3
dec
jo
movsl
iret
adc
jnp
adc
popa
movsb
jmp
fstl
rorl
icebp
lock
ljmp
cwtl
outsb
nop
out
xlat
mov
xchg
out
les
and
mov
inc
or
cwtl
mov
xor
mov
ret
mov
mov
lcall
mov
sub
mov
xor
lods
jb
or
imul
test
xor
popa
outsl
pop
adc
cmp
sbb
xor
jl
les
loopne
push
add
aaa
push
sarl
icebp
and
jmp
test
sar
add
pop
add
mov
or
add
add
add
lcall
sti
push
adc
in
or
push
xor
imul
add
in
js
add
stos
pop
insb
pop
pop
mov
adc
addb
add
jnp
addb
fisttpl
add
lahf
fldl2e
je,pn
or
adc
pop
fldt
dec
test
fildll
sbb
insb
loopne
rclb
mov
mov
add
addr16
mov
loop
jo
dec
add
pusha
or
xor
imul
das
push
xchg
push
test
sub
pop
test
jle
ljmp
jno
daa
insl
lods
hlt
std
mov
verw
dec
sahf
sbb
xchg
inc
inc
test
mov
inc
sahf
jle
push
sbb
sub
xchg
xorl
nop
dec
lcall
pop
add
pop
out
sarb
call
cmpsb
dec
cmp
dec
jbe
mov
dec
aaa
dec
add
lock
adc
repz
fs
push
cmp
in
mov
mov
mov
pusha
cmp
jg
pop
and
rolb
jnp
pop
loope
jle
jmp
addr16
xchg
inc
mov
fnstenv
xchg
and
pop
imul
xor
mov
std
arpl
add
jg
fdiv
sub
push
jecxz
add
movsb
movsl
mov
pop
inc
add
std
repz
sbb
xor
lock
gs
movsb
mov
stos
jno
adc
out
add
xchg
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
dec
imul
dec
pop
jl
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
outsb
inc
fmuls
mov
imul
mov
sahf
sbb
call
mov
lret
or
sub
aaa
jmp
lock
mov
push
insl
test
cmp
mov
jmp
insb
rcll
push
adc
ret
leave
add
adc
int3
jle
daa
add
or
inc
push
dec
lcall
xor
dec
add
pop
or
push
pop
pop
fldl
adc
shlb
inc
mov
dec
pop
push
or
push
xchg
mov
lds
push
cmp
adc
lds
push
push
xlat
push
xchg
rcll
imul
dec
add
es
push
outsl
js
adc
jb
jecxz
mov
add
pop
enter
andl
inc
test
xor
sub
aam
shll
inc
aaa
ds
int
in
dec
cmc
or
test
xor
pop
push
push
incb
push
pusha
jmp
push
clc
or
pop
inc
xor
adc
rclb
test
push
sbb
jns
int
clc
inc
adc
mov
pop
test
dec
push
fildl
mov
sub
aas
xor
add
cmp
jb
mov
mov
mov
sub
out
add
sub
jbe
hlt
lcall
lods
add
cmp
adc
jae
mov
add
adc
and
or
lods
mov
sti
mov
or
mov
stos
ss
outsb
add
ds
test
adc
jb
xrelease
fildll
and
dec
adc
std
or
dec
sbb
or
sbb
gs
cmp
mov
add
mov
in
add
outsl
cmp
jae
cwtl
fstp
cmp
add
add
insl
scas
xorb
sub
fucomip
popf
or
push
xor
pop
mov
jle
mov
jecxz
jmp
sub
fsubs
nop
add
inc
pop
jmp
mov
sbb
scas
sub
inc
mov
inc
fsubr
add
adcl
xchg
xlat
cli
cli
ret
add
fs
xchg
call
mov
xor
fistl
lods
cmp
je
sub
fcompl
fidivrl
add
les
loop
and
xor
add
xchg
ja
pusha
adc
mov
jmp
adc
clc
xor
mov
fwait
add
sub
mov
insl
and
out
jecxz
mov
test
push
and
add
mov
mov
jg
stos
cltd
cmpsb
push
adc
jns
lock
mov
test
loope
adc
test
or
js
out
mov
dec
testl
adc
mov
or
inc
add
mov
add
cmpl
push
add
mov
add
xchg
xchg
mov
push
xchg
cmpb
les
roll
inc
adc
add
xchg
outsb
push
sbb
add
lcall
and
xor
cmp
lea
or
add
dec
pusha
mov
xchg
mov
jne
mov
clc
mov
push
mov
mov
sub
sbb
mov
mov
inc
push
das
loopne
add
push
data16
inc
or
adcl
int3
cmc
push
fadds
cmp
mov
sub
mov
sbb
sti
ret
push
mov
or
int3
and
out
add
test
mov
or
pop
cmpsl
stos
xchg
sbb
imul
and
push
pusha
cld
sbb
lods
adc
push
sub
cmp
pop
jno
pop
pop
stos
pop
xchg
insl
sbb
roll
hlt
xchg
cmp
push
mov
add
nop
stc
add
test
add
mov
and
lcall
imul
outsb
cs
mov
jmp
in
push
mov
and
fmull
adc
sar
and
cmp
xorb
cmp
loop
loop
pop
aam
dec
test
cli
mov
mov
xchg
and
inc
arpl
outsl
mov
nop
lret
add
cmp
insl
insb
push
or
ljmp
ljmp
xchg
mov
inc
cmp
jne
fucomip
out
add
loopne
sbb
fimull
sbb
xchg
ret
shr
cmp
clc
repz
mov
pop
and
es
mov
adc
mov
mov
mov
add
mov
adc
pop
inc
pop
dec
fcom
adc
jo
dec
and
ret
add
add
mov
cmpsl
test
ljmp
fwait
add
dec
cmpsb
call
mov
jmp
push
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
inc
or
ret
push
adc
out
lock
pop
cmp
ret
insl
cmp
int3
iret
push
or
push
imul
lds
popa
pop
test
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
outsl
sub
push
inc
fidivrs
mov
push
movsb
mov
push
adc
jb
or
push
push
pop
cmpsl
stos
push
sarl
pushf
mov
jne
mov
sahf
js
push
cld
popf
mov
ret
and
cli
inc
adc
jo
dec
mov
cwtl
pop
jg
sbb
or
dec
std
scas
fistpll
add
lret
mov
data16
dec
repnz
loope
pop
jg
dec
sarb
cli
jl
sti
pop
dec
inc
sti
jle
pop
mov
cld
mov
imul
push
sbb
push
lea
lock
xchg
mov
addl
cld
jge
ds
sti
test
mov
ret
xor
mov
dec
xchg
mov
aas
mov
out
call
or
ret
sub
add
add
sub
add
adc
add
mov
or
fiaddl
adc
mov
xchg
xorl
ret
cmp
push
cmp
movsl
mov
ds
fidivrl
jo
xchg
lret
adc
adc
fiaddl
jle
in
and
or
insb
and
shlb
push
pop
dec
aaa
lock
in
mov
fdivs
pop
mov
xor
rorl
repz
pop
lock
or
xchg
cmp
fdecstp
add
mov
dec
scas
mov
mov
out
test
inc
jae
cmp
lea
sti
add
sub
cmp
jg
sbb
sub
ret
in
sahf
mov
outsb
mov
jae
or
sbb
inc
test
fst
popf
pushf
xchg
mov
push
inc
xor
sub
loop
es
add
test
jg
or
sub
outsl
add
sarl
mov
cmp
push
lret
cmp
mov
or
jge
leave
clc
and
jmp
insb
and
add
add
jl
jno
push
in
lea
and
push
push
outsl
add
cmp
dec
add
xor
jp
sarb
loop
loopne
neg
jbe
out
jg
xchg
icebp
or
add
outsb
shll
popa
and
add
xor
or
cmpsl
cmp
push
adc
inc
in
sbb
inc
mov
pop
rolb
fisttpl
xor
inc
jl
ja
jmp
jne
cmpsl
and
inc
dec
or
inc
pop
pop
sbb
loopne
movsb
pop
leave
mov
nop
pusha
inc
addr16
leave
add
add
push
xchg
insb
das
sbb
iret
pop
xor
and
mov
add
xchg
mov
fcoms
adc
xor
mov
jno
push
jp
aas
testb
or
adc
adc
inc
inc
in
mov
ljmp
int
daa
pop
pop
pop
pop
enter
lds
enter
add
pop
dec
or
inc
test
leave
xchg
add
sarb
in
das
nop
push
lds
sub
and
push
push
inc
lods
pop
mov
push
das
add
add
dec
mov
or
push
adc
fsubs
add
inc
jnp
lcall
push
cmp
push
add
aad
lock
into
aas
daa
mov
cli
movl
test
rorb
push
add
repz
xor
lea
cmp
cmpsl
inc
in
xchg
jne
add
add
test
xlat
push
aad
mov
sbb
sarb
jge
mov
jns
jmp
jge
push
xchg
push
test
or
lret
xor
push
sarb
xchg
sbb
leave
cmp
add
dec
pop
add
add
loope
pop
xabort
cmpb
or
inc
add
or
push
notl
mov
pop
push
mov
xchg
and
and
add
fmuls
xchg
pop
pop
push
mov
cmp
ja
push
jle
mov
inc
inc
cli
insl
push
div
pop
das
hlt
push
movb
dec
mull
mov
sbb
dec
add
inc
dec
arpl
mov
cmpsl
sub
and
test
shr
int
pop
mov
loop
data16
push
and
in
imul
sub
jmp
jle
cmpb
and
pop
movb
data16
inc
test
stc
pusha
pop
jae
add
pop
mov
jne
popa
or
xchg
ret
popa
push
add
dec
jno
push
les
dec
fwait
push
ret
aaa
pop
add
jmp
push
push
adc
repnz
fmull
sbb
pop
or
je
jge
and
lcall
subl
test
push
jae
jbe
adc
js
xchg
push
add
ret
mov
ljmp
adc
adc
push
shlb
inc
mov
cmp
inc
mov
adc
push
mov
mov
fwait
pop
js
shrb
jnp
sub
loope
add
gs
sbb
sbb
mov
adc
jecxz
mov
mov
sub
pop
xor
outsl
xor
add
inc
and
lahf
jb
loope
ret
mov
xchg
mov
sbb
movsl
mov
ja
filds
xchg
jo
push
add
fistpll
dec
movb
or
or
jns
not
rcl
test
inc
fisttpl
cld
xchg
mov
or
je
sar
ja
add
push
sub
fdivs
es
jmp
ds
mov
inc
push
add
cltd
ret
out
mov
lahf
or
xorb
push
out
jns
dec
add
and
xchg
jb
sidtl
mov
sub
adc
inc
cmp
jne
fldz
jmp
mov
add
mov
cltd
out
sub
sbb
add
in
fistps
add
loopne
loopne
adcl
leave
fstcw
fldcw
fnstsw
fimuls
adc
not
and
cmpsl
mov
scas
sbbb
lcall
inc
cmp
inc
sub
fs
ljmp
iret
xlat
imul
mov
pop
pop
inc
ljmp
ficompl
addr16
inc
jmp
pop
fwait
movsl
mov
xchg
add
lea
das
add
lods
inc
out
and
nop
adc
out
iret
push
insb
outsl
bound
or
or
jmp
insl
je
or
aad
push
sub
dec
jnp
xor
sbb
add
mov
lods
pop
jns
push
xor
dec
aas
movsb
mov
pop
arpl
ss
sti
sub
aam
mov
jnp
pop
inc
push
add
add
orb
gs
sub
xor
jne
in
sbb
daa
inc
add
fistl
sub
inc
aas
inc
jne
popa
or
ss
orl
xor
fwait
inc
push
inc
inc
push
gs
imul
outsb
sti
dec
and
jb
mov
in
test
incb
add
and
cmp
jp
in
sub
in
mov
pop
pshufw
or
pop
pmulhw
call
push
lock
sub
sbb
jns
out
push
popa
imul
test
fbld
dec
xchg
push
sub
cld
filds
add
lds
inc
mov
dec
push
mov
pop
cmp
xchg
mov
sbb
rcr
jb
pushf
inc
pop
add
es
add
es
and
call
cmpsb
push
fwait
inc
mov
inc
mov
sbb
mov
insl
sub
scas
adc
movsl
sub
mov
adc
pop
cltd
in
popf
pusha
sub
mov
js
aam
and
es
or
dec
xlat
dec
sahf
addl
adc
and
pushf
inc
sub
jbe
cltd
cli
mov
into
nop
movl
push
adc
and
jb
push
out
psubsw
in
in
jmp
in
fs
ljmp
cmp
shl
sahf
cmp
in
sahf
fs
lahf
aaa
jp
int
sub
in
mov
add
and
sarl
add
add
and
ficompl
add
inc
inc
xchg
popa
jnp
punpckhbw
push
sbb
pop
bound
adc
mov
dec
jmp
cmp
add
sbb
add
push
xor
addl
jle
adc
mov
xor
add
mov
or
and
and
push
lods
aaa
add
movsl
inc
and
xchg
or
dec
outsl
addr16
add
jecxz
add
inc
add
inc
mov
daa
mov
sub
pop
push
add
fsubs
push
jl
or
cs
insb
lods
mov
lea
adc
push
mov
lods
jnp
or
xchg
mull
dec
adcl
or
popf
out
pushf
adc
and
push
ficomps
sub
adc
push
inc
mov
in
cmp
jno
out
xor
or
dec
cs
popa
dec
or
shll
xor
push
mov
cmpsl
das
and
pop
mov
ret
adc
shl
adc
push
pop
and
mov
add
xlat
pop
push
shr
inc
movsl
push
cwtl
in
movsb
adc
sbb
pop
shrb
adc
cmp
sub
mov
andl
mov
das
mov
push
inc
cmp
push
enter
or
mov
out
mov
cmpsl
ror
push
xor
jae
dec
leave
inc
jb
in
mov
pop
movsl
sbb
inc
dec
movsl
pop
dec
add
or
iret
orl
mov
push
in
lcall
xchg
xor
std
loope
add
ljmp
xor
pop
sub
fisttpll
sbb
push
shll
push
mov
dec
mov
dec
lret
adc
add
insl
pop
mov
adc
mov
push
inc
xchg
mov
mov
xor
cmpsb
dec
jo
push
nop
test
andb
sahf
insl
test
dec
adc
dec
xchg
cmp
pop
add
mov
or
xor
xchg
or
add
add
lock
add
xorb
cs
and
dec
sbb
cmpsb
addl
orl
add
sub
cli
or
fwait
adc
adc
push
fcmovnbe
aam
std
sbb
push
in
mov
pushf
adc
xor
jo
cmp
push
xor
and
lret
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
add
outsl
dec
repnz
dec
xor
in
sub
xlat
jno
dec
jne
or
rcrb
and
xor
nop
cmpsb
test
xchg
lret
pop
shll
adc
add
icebp
dec
and
push
lret
xor
xlat
cmp
popf
and
adc
cwtl
aas
pop
pop
mov
or
mov
jne
stos
or
sbb
aas
xchg
lea
movsl
in
icebp
es
out
pop
mov
nop
nop
adc
xchg
add
pop
and
in
or
pop
push
add
stos
out
stos
nop
xor
incl
xchg
and
out
or
jae
xchg
fdivl
scas
insb
sub
push
pusha
int3
mov
pushf
rorb
dec
cmp
popf
and
hlt
pop
aaa
xor
hlt
hlt
lock
xchg
xadd
in
jge
sahf
out
fiadds
jne
dec
lahf
out
mov
fwait
mov
andb
or
outsb
loop
xchg
subb
and
ds
cli
and
xchg
adc
ja
cmp
out
das
repz
je
or
je
or
shll
add
fnsave
lods
push
jle
hlt
push
inc
add
sub
je
jmp
mov
daa
mov
mov
push
push
sbb
mov
pop
ficompl
adc
pop
add
push
dec
push
repnz
and
adc
mov
enter
adc
iret
leave
cmp
sbb
adc
das
mov
push
cwtl
adc
lods
mov
adc
loopne
xor
sub
pop
mov
pop
jo
inc
mov
xchg
xchg
inc
or
nop
mov
scas
xor
movsl
mov
ret
add
xchg
sub
jle
push
add
pop
rorb
enter
aam
int
or
test
add
xchg
add
push
movsb
sub
lret
cwtl
fs
sub
pushf
je
add
xchg
movsb
xor
xchg
test
lods
mov
adcb
mov
sbb
add
add
iret
iret
adc
bound
push
ss
or
cs
jae
outsl
iret
dec
std
push
xchg
inc
imul
pop
dec
fs
mov
das
fwait
and
insl
mov
xchg
push
enter
pop
jne
push
pop
adcl
add
cld
xchg
lea
dec
outsl
fs
gs
pop
aas
push
pop
sbb
dec
jp
adc
insl
sbb
xchg
and
xchg
cwtl
xchg
inc
pop
lea
imul
idivb
inc
outsl
bound
nop
push
inc
push
push
imul
pop
aas
mov
imul
and
xor
hlt
sub
jmp
imul
jp
sub
scas
mov
inc
adc
push
sub
dec
and
pop
inc
cltd
aaa
sub
jbe
jne
outsl
and
xchg
and
sub
adc
adc
add
or
inc
jmp
push
inc
inc
sub
cmp
bound
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
and
addr16
cs
data16
jno
jo
cwtl
orb
setl
mov
dec
pop
xor
xor
lret
adc
popa
imul
xor
out
push
push
pop
aaa
sbb
and
cs
pop
js
mov
enter
adc
sbb
movsb
cld
jae
lret
fidivs
sbb
jge
add
push
jle
inc
mov
sbb
fildl
popa
pushw
push
sbb
dec
inc
shll
jo
popa
cmp
test
insb
xlat
push
adc
insb
push
imul
orb
jp
sub
rcrb
mov
imul
inc
dec
dec
inc
push
jg
sub
and
aas
ja
sbb
xchg
rclb
push
jno
outsb
pop
pop
dec
push
mov
filds
lods
cmp
pop
xor
andl
jne
test
push
dec
jne
popa
push
mov
xor
add
gs
loope
pop
cli
inc
inc
and
jae
mov
lods
ret
push
ret
push
mov
adc
push
aam
rcll
sbb
or
pop
push
push
iret
iret
adc
inc
inc
inc
inc
pop
lret
les
aas
sbb
iret
mov
pop
and
loopne
inc
or
orps
or
inc
insl
ja
repnz
push
jbe
xor
pop
xor
mov
push
icebp
lret
push
inc
push
pop
push
cs
je
push
sub
and
sahf
rolb
fists
sub
add
cmp
or
call
pop
or
jp
imul
jns
push
push
jb
dec
rcr
aaa
adc
add
pop
pop
push
push
dec
jne
pop
pop
sbbl
stos
scas
in
aaa
push
cli
insb
je
imul
inc
inc
scas
push
outsl
outsl
jne
inc
xchg
notb
cwtl
loop
xlat
sub
jne
and
pop
add
cmp
or
mov
pop
xchg
push
iret
jo
mov
push
sub
mov
push
inc
push
stc
les
jp
outsl
push
shlb
inc
pop
outsl
shll
mov
pusha
andb
or
imul
push
inc
push
inc
push
pop
push
mov
pusha
cmc
push
sub
push
xor
pop
ja
add
mov
push
push
and
mov
and
inc
adc
mov
insb
and
shrb
and
xchg
xchg
jne
push
sub
cwtl
ss
adc
push
mov
mov
or
sbb
jbe
mov
xlat
sub
sbb
cmp
pop
pop
and
cmp
xor
xor
cmp
and
insl
aas
xor
xor
add
xor
xor
cmp
imul
aaa
aas
or
ja
cmp
xor
repnz
cmp
or
aas
and
inc
xor
aas
cmp
sub
rolb
in
jbe
xor
mov
aas
cmp
jg
imul
mov
aas
mov
dec
push
pushf
bound
ss
adc
cmp
xor
das
sub
or
aaa
aas
cmp
mov
adc
aas
mov
mov
cmp
push
int3
push
incb
ds
ss
mov
cmp
mov
aaa
pushl
in
sbb
mov
pushl
mov
sti
mov
jle
lds
mov
pop
jg
out
or
xor
ss
xor
sub
xor
cmp
shlb
inc
xor
aas
or
and
jle
jg
push
lock
aas
jg
ja
in
clc
xorl
outsl
mov
das
xor
cmp
xor
xor
cmp
shrb
and
mov
cmp
cmp
xor
jbe
push
cmp
out
xor
inc
dec
and
aaa
cmp
xor
jb
mov
mov
repnz
lds
or
pop
insb
sbb
das
cmp
nop
pop
nop
xor
xor
or
rcrl
cmp
add
enter
jg
stos
loopne
or
pop
jg
or
ja
xor
xor
or
dec
xor
xor
sysexit
xor
shlb
mov
xor
xor
ret
add
mov
das
aaa
aas
roll
pop
and
push
lds
jb
xor
xor
add
add
ss
jp
cmp
pop
cmp
xor
add
add
inc
das
xor
pop
enter
xor
enter
add
sbb
cs
push
subb
aaa
clc
xchg
ret
inc
add
lret
movsb
push
divl
jecxz
push
fidivs
fiaddl
cltd
clc
cld
mov
and
int3
push
mov
mov
add
negl
jl
mov
cltd
cmp
adc
or
or
fistpl
orb
je
rclb
sbb
mov
pop
push
stc
pop
adcb
dec
pop
ja
xchg
rclb
or
int3
mov
adc
les
pop
ja
gs
popf
push
mov
pop
xchg
xchg
test
imul
sbb
mov
xor
inc
fisttpll
incb
sahf
fildl
adc
push
lea
icebp
sub
pop
and
inc
inc
push
jbe
pop
leave
and
popf
push
sbb
xchg
sub
xor
dec
xchg
xchg
sarb
mov
cmp
add
mov
inc
mov
adc
mov
add
add
push
ret
lret
lock
xor
nop
sub
cmpb
cmpsb
xchg
test
inc
scas
mov
mov
cmp
jb
mov
sbb
insl
fnstcw
pop
and
pop
xchg
push
or
out
orb
dec
int3
adc
mov
add
or
or
or
push
jns
jno
mov
scas
cld
insl
add
data16
js
lcall
test
gs
aaa
inc
adc
loopne
mov
mov
flds
pop
push
orb
push
js
imul
add
jnp
imul
fiadds
cmp
adc
psubusb
lret
and
xchg
out
fs
lock
movsb
test
or
pop
je
enter
dec
xchg
push
das
dec
xor
adc
movsb
cld
pop
xchg
dec
rcrl
andb
jno
pop
inc
test
mov
mov
cs
cld
sub
xor
adc
outsb
dec
ficoml
dec
movsb
ret
gs
sbb
push
jns
nop
sbb
pushl
fs
out
push
pop
sub
mov
popf
dec
sti
pop
xchg
dec
cmp
dec
cmpl
dec
js
arpl
je
add
pop
lea
test
js
add
hlt
test
and
adc
daa
jne
inc
es
inc
sub
notb
sar
or
inc
int
test
sarl
adc
push
sbb
dec
and
push
adc
xor
sbb
mov
adc
xchg
mov
fdivrs
or
add
xchg
int3
imul
leave
cmp
flds
int3
cmp
pop
push
xor
xor
clc
lock
popa
push
sub
call
lret
aaa
sub
or
xor
and
incl
xor
and
jo
mov
xorl
gs
inc
mov
test
add
ja
stos
std
lahf
fmull
inc
dec
inc
pop
push
dec
dec
push
inc
cs
inc
test
pushl
and
jb
jno
bound
jle
iret
add
sub
aas
fidivrl
ret
pop
and
hlt
mov
and
inc
imull
xor
push
sbb
pop
push
fs
gs
and
pop
sub
insb
fs
mov
and
sbb
and
jo
ret
pop
push
and
push
jae
or
add
mov
sbb
movsb
sarl
dec
sub
arpl
dec
pop
and
xor
add
and
and
pop
in
and
test
fstpl
inc
sub
or
imul
add
push
pop
clc
mov
dec
cmpsb
cltd
stos
fcoml
fs
stos
fadd
test
aam
in
ud1
mov
add
leave
in
hlt
pop
cmp
mov
enter
outsl
or
je
cmpsl
rorb
push
hlt
inc
call
inc
stos
or
xbegin
hlt
push
xor
call
das
shrb
adc
mov
xchg
jmp
mov
fistpll
int3
aaa
pop
test
int3
fcomip
in
inc
jb
or
aad
add
in
xchg
bnd
movsb
dec
outsb
iret
enter
mov
outsb
jb
jb
test
je
repnz
sub
jg
mov
mov
sbb
sub
jns
adc
das
daa
xchg
test
mov
jb
cmpsb
je
dec
or
and
xlat
rol
pop
pop
pop
imul
dec
js
outsl
sub
add
out
sbb
cmp
das
cmpsb
add
inc
flds
fdivrs
xchg
test
xchg
filds
sub
daa
inc
test
ret
js
lds
sbb
cld
rolb
jb
test
jbe
fwait
dec
mov
jo
push
cld
jmp
pop
dec
mov
lret
enter
sti
add
pushf
jne
lea
and
repnz
hlt
mov
hlt
mov
in
jmp
dec
insb
insb
pushf
loopne
sbb
in
lret
pop
sbb
jmp
pop
repnz
mov
cmp
gs
frstor
sub
dec
mov
cs
aaa
lret
and
sarb
mov
hlt
or
testl
pop
pop
lods
or
xchg
pop
pop
add
fs
cs
and
gs
scas
push
push
sbb
nop
push
push
aam
dec
dec
nop
lret
dec
dec
sub
inc
jb
xchg
sub
inc
inc
cmp
or
cmp
add
dec
sub
xchg
lret
xor
add
xchg
xor
pop
pushf
xchg
sub
and
sub
insb
pop
xor
and
mov
mov
icebp
add
xchg
ficoml
inc
ds
repz
shrb
jb
shlb
xchg
pop
ret
test
lea
lock
mov
rcll
sbb
pop
leave
in
pop
push
orb
or
fimuls
dec
scas
or
pop
aas
pop
leave
mov
push
incb
xor
xor
add
add
or
lcall
cmp
repnz
bnd
mov
adc
cli
test
sub
jg
out
int3
sub
enter
inc
es
js
cmp
loopne
inc
mov
push
xchg
push
xor
repnz
repnz
repnz
in
loope
je
push
pop
sbb
ficoml
sub
add
jg
add
pop
es
jbe
pushf
movsb
cli
jb
and
mov
shll
add
adc
movsb
jb
add
mov
and
sub
ret
clc
int3
aad
adc
int3
add
inc
dec
xorl
pop
push
repnz
sub
inc
cld
cld
sti
and
cld
mov
cli
fadds
push
and
jns
mov
inc
dec
fldcw
inc
push
movsb
cli
call
cmp
pop
xor
gs
daa
test
add
or
das
mov
add
cs
inc
dec
push
push
aas
jb
push
test
pop
add
dec
cs
dec
dec
push
jecxz
lea
lahf
daa
mov
and
out
scas
mov
push
dec
inc
and
push
dec
sbb
hlt
arpl
xchg
pop
lahf
testb
int3
fcmovbe
mov
push
aas
inc
dec
push
inc
and
pop
lahf
or
fadds
nop
inc
push
pop
inc
dec
es
insl
mov
lods
inc
pop
pop
rcrb
inc
sbb
adc
adc
pop
shrb
insb
jae
xor
xor
fildl
sub
cld
adc
inc
lea
pop
je
dec
xchg
js
inc
and
inc
push
clc
jns
cmp
sub
cmp
jo
loopne
xor
call
in
inc
fcomp
or
ficompl
ret
arpl
sti
jmp
jl
imul
xchg
icebp
add
lcall
repz
enter
dec
popf
add
add
stc
ja
les
inc
or
sub
loope
inc
push
clc
filds
add
jbe
sbb
sbb
inc
cs
dec
push
call
add
dec
dec
inc
int
jle
dec
ret
data16
jnp
in
and
inc
mov
xchg
push
adc
inc
adc
or
inc
in
dec
add
fstpt
mov
and
cmc
cs
mov
das
movsb
xorl
pusha
adc
sbb
jg
pop
and
adc
out
aaa
nop
pop
adc
sub
int
sbb
and
jne
xchg
cmp
lcall
and
dec
leave
leave
xchg
enter
inc
jb
pop
leave
adc
and
pushf
sbb
ror
jb
inc
or
fmull
mov
cmp
add
add
mov
jb
mov
sbb
xchg
and
inc
adc
sub
xor
fildll
fdivrl
scas
mov
mov
dec
pop
insb
adc
bound
gs
imul
outsb
outsl
jo
mov
jns
dec
jge
push
addl
jae
cltd
xor
push
aas
aas
mov
add
jns
inc
flds
daa
dec
inc
or
or
sub
imul
pop
ja
pop
jg
inc
dec
rol
jmp
dec
pusha
pusha
cltd
divb
or
mov
clc
gs
fidivrl
ljmp
adc
pop
insl
std
inc
fadds
mov
mov
mov
les
out
js
cmp
std
mov
cmp
dec
and
les
mov
push
fs
jmp
inc
add
xor
cmpl
pushl
mov
loop
xor
jb
lods
frstor
lock
bound
call
test
sahf
xchg
add
dec
shrb
mov
sub
shl
inc
in
sub
jne
dec
jp
mov
or
cmp
repz
ret
rorb
test
insl
mov
rclb
jo
sahf
inc
dec
xchg
das
mov
mov
bound
fnstenv
daa
push
dec
inc
push
push
push
push
inc
pop
mov
sbbb
xchg
aaa
dec
lahf
addb
xchg
in
mov
sbb
lods
push
and
and
pop
mov
sub
out
xor
adc
clc
rcl
xor
enter
movsb
mov
adc
dec
test
pop
sbb
orl
add
popf
jge
xchg
cmp
inc
popf
pop
pop
scas
sbb
pop
jb
sahf
push
push
sub
dec
xorb
insl
jae
fisubl
and
adc
or
sub
inc
sbb
pop
adc
adc
cmp
cmp
and
mov
add
ja
mov
shrl
mov
pop
stos
mov
out
or
sub
jmp
fiadds
inc
sub
and
pop
add
xlat
sbb
add
addb
pushl
rol
inc
pusha
dec
pop
mov
push
rolb
sub
inc
cwtl
insb
cmp
dec
in
adc
mov
test
mov
cld
lret
in
ss
roll
cld
push
ret
stos
stos
adc
ret
adc
xor
insb
vpmaxsw
ret
fsub
adc
cmp
mov
jne
nop
and
adc
pop
mov
sbb
popa
mov
mov
and
bound
xor
cmpsl
mov
push
pop
inc
stos
mov
rcpps
mov
gs
cmpsb
scas
jo
sbb
sbb
mov
test
or
in
jne
cmp
pop
lea
cltd
out
lds
movsb
mov
insb
daa
fwait
sarb
mov
in
out
mov
xchg
pop
clc
add
sub
push
cld
push
xchg
stos
pop
push
sub
inc
and
movb
or
and
sub
lea
sub
add
daa
test
hlt
push
cmp
adc
rclb
inc
push
call
xor
mov
sbbb
in
mov
and
and
stc
inc
lds
ljmp
sbb
aam
add
or
repz
push
xor
push
cmp
inc
out
sahf
dec
jno
out
add
icebp
pop
xor
add
daa
jb
ja
inc
jmp
and
daa
nop
movsb
push
nop
je
stos
jmp
push
shl
rolb
add
push
and
sbb
arpl
lods
mov
sbb
loopne
lea
mov
jl
bound
push
push
popf
cmp
int
ja
lahf
fadds
mov
lock
imul
pop
adc
adc
adc
jno
aam
shrb
orb
jne
call
popf
in
loop
aam
xor
add
test
mov
andb
cld
push
outsb
fs
outsl
arpl
add
loopne
les
pop
dec
aas
xchg
dec
mov
jne
sarl
sub
cmp
dec
push
adc
in
inc
and
sub
cltd
imul
in
out
push
sahf
in
roll
clc
or
xchg
cmp
pop
and
in
test
xchg
mov
inc
dec
aas
cmp
arpl
mov
sbb
sub
add
and
shl
and
pop
adc
jbe
xor
dec
lods
movl
xlat
adc
cmp
cmc
add
push
push
test
pop
or
xor
push
sbb
addr16
nop
ljmp
mov
add
xchg
push
or
push
nop
pop
sbb
and
pop
xor
stos
popa
or
fisubrl
cmp
and
inc
push
lea
mov
jp
jmp
and
cld
cmpb
mov
pop
movsb
cmp
call
int3
push
sbb
aam
js
cmpl
push
call
xor
loopne
mov
inc
jae
daa
subb
pop
test
pop
fsubrl
mov
pushl
push
nop
add
and
lock
or
adc
mov
sbb
jecxz
fdivrs
test
add
push
rclb
cwtl
add
lock
push
cld
mov
rorb
push
inc
adc
pushf
xor
rcl
sub
iret
mull
or
loop
inc
loop
xor
in
mov
ds
in
inc
das
cwtl
je
mov
sub
leave
mov
subl
push
leave
or
icebp
xchg
add
cltd
enter
insb
jo
lea
add
sbb
les
cltd
inc
push
or
rol
push
xchg
add
lea
push
add
pop
push
out
fnstenv
dec
xor
add
xor
ja
xor
cs
jbe
fnstsw
imul
sub
xor
xor
sbb
add
add
sbb
and
fldcw
push
or
jo
and
out
push
es
sbb
scas
nop
xchg
add
cwtl
and
jae
fildl
out
cmpsb
pop
cmpb
out
imul
jg
sbb
ret
notl
jbe
inc
daa
in
mov
push
imul
daa
pushl
popa
jo
fildll
ja
bound
pop
js
add
das
ds
inc
sub
and
popf
xor
out
cli
mov
add
call
inc
push
fdivr
in
adc
push
fdivr
and
out
int3
ret
push
movsb
or
jecxz
push
loope
filds
cmp
jg
sbb
mov
fsub
das
test
std
rcrl
sbb
enter
jl
push
int3
or
clc
fnsave
and
cwtl
mov
or
rcl
cli
mov
mov
adc
mov
xchg
push
les
xchg
and
mov
pop
test
lods
std
xchg
lods
xchg
inc
adc
mov
and
movsb
movsb
cmp
mov
pushf
pop
enter
js
mov
xchg
xchg
nop
pop
and
jb
cwtl
mov
test
mov
inc
enter
xchg
mov
ja
mov
jno
pop
in
stc
and
fmull
decb
fdivr
aad
dec
xor
in
subl
pusha
sub
adc
adc
jno
pop
bnd
jae
cmp
add
test
xor
imul
xor
mov
cmpb
xor
shlb
sub
dec
inc
pop
pop
inc
push
push
subl
adcb
dec
lds
sub
enter
push
and
out
shrb
ja
mov
unpcklps
xor
adc
pop
les
or
iret
and
lods
dec
fcoms
das
aas
leave
and
dec
xchg
jmp
or
stc
enter
add
arpl
cli
push
repz
or
dec
push
xor
dec
repz
mov
mov
mov
push
hlt
nop
addb
insb
jns
add
in
jecxz
in
ds
lahf
sbb
gs
add
addr16
pop
jg
ljmp
add
inc
add
pop
mov
ds
repz
jl
mov
push
add
ss
sbb
iret
negb
pop
dec
scas
mov
scas
push
les
cld
xor
inc
push
cld
rolb
int3
movsb
fidivrl
push
or
fcomp
shlb
cmp
pusha
xor
and
xor
jg
or
add
insb
add
fidivrs
ja
les
cmp
push
cld
mov
push
shl
repz
clc
loop
lock
test
lahf
neg
sub
sarb
add
pushaw
or
jl
inc
aam
jl
lret
je
add
jmp
insb
int3
push
or
jl
out
mov
push
fmull
insb
rorl
test
cltd
fcomps
push
iret
and
imulb
xchg
inc
push
hlt
in
les
push
push
jmp
in
in
push
add
push
fsubrp
push
mov
inc
fmull
xor
inc
lock
shrb
push
clc
pusha
fnstcw
push
push
setns
in
cwtl
int
mov
arpl
popf
nop
ds
add
stos
adc
movsl
sarl
mov
je
inc
mov
in
into
jmp
hlt
stc
les
cld
and
or
push
mov
arpl
mov
enter
adc
adc
inc
test
and
push
andb
add
adc
adc
insb
sub
pop
add
and
jmp
es
xor
lret
int3
enter
enter
fcomp
fxch
jne
add
loopne
jecxz
pop
aad
mov
pop
mov
je
fidivs
and
and
popa
je
xor
test
sbb
xor
add
or
add
divl
mov
push
cmpsb
addb
jo
and
imul
rorb
xchg
xor
aas
mov
das
add
data16
and
js
jns
pop
incb
sbb
sub
out
sahf
xor
inc
dec
push
pop
jns
out
fs
je
test
jns
out
xchg
pushf
movsb
lods
sahf
out
sahf
mov
int3
aam
jl
out
in
hlt
cld
add
repz
rorl
sbb
sub
adc
add
adc
xchg
xchg
add
fs
enter
push
in
enter
jge
xor
cmp
in
mov
cwtl
jg
sbbb
or
sbbb
jnp
mov
and
add
pop
and
jb
xor
push
leave
add
fst
xchg
pop
add
adc
pop
inc
mov
cmp
inc
inc
mov
push
lods
add
jg
adc
fimull
jg
out
lods
jp
call
jp
out
daa
testl
add
adc
jns
jl
pusha
inc
cmpsb
push
adcb
fsubr
clc
cmp
sarl
sbb
cmp
repz
repz
push
sarl
add
shl
fnstenv
insb
imul
pop
push
push
inc
xor
jmp
inc
pop
and
sbb
or
jbe
pop
outsb
jae
jb
mov
shlb
xor
lods
cmpsl
xor
ja
adc
pop
adc
fcompp
xchg
mov
lock
add
push
adc
lahf
es
and
dec
xlat
frstor
dec
pop
lcall
in
sub
insb
aas
incl
jl
add
push
mov
cmpsb
lret
enter
lods
sti
push
fsubl
or
cmpsl
push
add
or
xor
dec
cmp
repz
pusha
adc
adc
cmp
repz
mov
sahf
int
and
sbb
sbb
cmp
repz
push
adc
iret
repz
sbb
iret
repz
add
iret
repz
in
clc
push
jns
cmpsl
stc
or
out
jns
shrb
push
add
adc
insb
push
test
repz
lods
or
pop
jns
cmpsl
push
cmp
push
add
jo
jns
out
mov
jns
mov
mov
cmp
jmp
aaa
push
mov
repz
mov
mov
mov
cmp
xchg
fisubrs
jmp
std
sahf
and
pop
adc
cmp
lds
popf
cmp
or
inc
push
inc
or
int
loopne
ret
add
jle
frstor
cmp
jno
adcb
mov
out
out
or
or
faddp
mov
or
push
comiss
aam
add
sbb
loopne
sahf
testb
cld
add
loopne
out
pop
mov
lock
ds
repz
sbb
inc
add
jns
out
or
sbb
xor
jns
out
inc
dec
push
and
and
xchg
sub
jbe
mov
andb
xor
movhps
mov
xor
out
imul
pmulhuw
popf
incb
in
in
add
adc
lods
test
in
jmp
pop
adc
in
in
adc
pop
adc
scas
rorl
outsb
add
out
loop
dec
or
fidivs
cmp
repz
test
repz
mov
push
lock
or
adc
decl
fs
mov
hlt
or
or
add
iret
repz
xchg
test
int3
imul
cld
or
sbb
jns
out
cmp
pusha
jo
out
sahf
js
pushf
lods
mov
jns
cld
and
fcoms
adc
fldcw
mov
imul
cmp
inc
add
adc
std
pop
sbb
add
or
nop
pop
jo
repz
mov
std
xchg
cld
iret
repz
movsb
cli
mov
enter
repz
div
testb
sahf
out
cmc
sbb
sub
out
sahf
out
repnz
icebp
fs
out
sahf
lock
mov
mov
in
mov
jmp
dec
sahf
out
ljmp
mov
xchg
decl
inc
out
inc
insb
imul
nop
scas
and
or
mov
lcall
push
pop
outsb
ds
or
or
add
fcomp
sbb
cmpsl
lods
pop
popf
inc
mov
adc
nop
mov
jb
stos
fisubl
insb
jne
inc
addr16
or
outsl
inc
add
cs
shll
add
pop
inc
outsb
inc
xchg
pop
add
das
or
pop
add
xlat
push
fcoml
adc
add
repnz
mov
and
mov
jb
push
xchg
pop
mov
ficoms
jg
stc
repz
repz
repz
cld
std
incb
add
iret
repz
addb
repz
add
adc
inc
aaa
cs
sub
scas
add
push
pusha
jo
fstsw
xchg
pushl
add
add
push
pop
adc
sti
les
and
xor
adc
es
push
iret
repz
imul
into
out
mov
cld
add
out
jno
jmp
add
stc
push
mov
xor
adc
mov
test
xor
gs
xchg
dec
inc
lods
dec
adc
ds
cmova
roll
hlt
push
or
sbb
in
les
fs
fwait
setp
inc
sbb
jp
push
enter
dec
fldenv
inc
out
dec
push
cmp
repz
nop
mov
repz
lock
adc
cmp
sahf
out
sahf
push
les
out
aam
cld
adc
repz
push
fs
xchg
out
sahf
mov
sahf
ja
push
sahf
ss
nop
cwtl
mov
test
mov
sti
cmp
mov
scas
push
test
iret
repz
call
jns
out
jo
shl
repz
or
sahf
cmpsl
stc
cmp
add
sub
insb
jns
out
nop
test
loopne
repz
repz
cmpsl
stc
cmp
mov
adc
out
sahf
xor
xchg
test
cmp
out
fdivr
sbb
cmp
repz
repz
mov
iret
repz
mov
mov
mov
repz
repz
iret
repz
mov
mov
mov
repz
repz
iret
repz
mov
mov
mov
iret
repz
insb
test
stc
cmp
adc
sub
pop
jns
out
je
movsb
mov
out
add
cmpsb
push
xor
fs
out
jl
lods
fdiv
cmp
out
or
and
push
iret
repz
insb
test
sti
cmp
adc
incb
inc
pop
into
repz
je
movsb
mov
movsl
out
and
seto
push
test
jbe
arpl
and
int
jp
aam
in
push
push
sub
fildl
cltd
icebp
jne
sub
mov
scas
jbe
scas
movsl
jle
adc
inc
xchg
dec
or
loopne
ja
push
push
sub
out
mov
cmp
ds
jle
inc
scas
add
negl
fdivrl
jno
xchg
dec
jle,pt
daa
ds
shrl
aam
push
test
add
shll
adc
mov
jge,pn
addr16
out
js
jnp
cs
xlat
in
dec
push
push
dec
or
pop
xor
dec
push
aam
testb
fcompl
cmpsb
in
mov
jnp
lret
movsb
jbe
data16
daa
out
imul
push
lods
test
cmpsb
fstps
insb
sbb
fisubs
loopne
sti
mov
sub
es
or
repz
push
pushf
es
add
jle
fidivrs
testl
es
cld
push
je
push
cmpsb
adc
ficomps
sarl
sbb
rolb
jle
cs
mov
sbb
in
es
cmp
mov
enter
cld
ss
movsb
inc
dec
loop
into
fidivrs
call
outsb
jo
cmp
fs
cmp
push
dec
out
and
sbb
loopne
cs
outsb
mov
xlat
ja
call
mov
push
out
sbb
mov
add
dec
imul
sub
add
xchg
es
shll
xchg
inc
cmpsb
test
cmp
in
push
andb
in
sbb
mov
div
push
cmp
sbb
mov
adc
imul
loopne
or
mov
jmp
xlat
push
roll
ja
loopne
add
idivb
int3
jbe
js
cmp
les
sbb
fdivp
cmp
negl
aaa
pop
ficomps
fnstsw
xchg
push
pop
ss
fsubrp
xor
sub
jnp
imul
ds
add
jnp
pushf
sbb
adc
cmpsb
iret
enter
ss
mov
je
ret
fwait
add
cs
adc
fs
ja
sbb
xchg
sub
xchg
hlt
or
loopne
push
mov
dec
daa
outsb
xchg
xchg
push
clc
into
loopne
daa
pop
xor
outsb
les
es
js
sub
btrl
pop
push
ja
mov
dec
data16
ss
je
sarb
mov
pusha
inc
negl
push
fs
cmp
push
lock
pushf
in
pop
add
or
fistl
outsb
xchg
imulb
lock
xchg
call
xchg
xlat
add
dec
mov
dec
jmp
sub
je
push
lock
fists
fsubrs
outsb
inc
sbb
out
jae
add
sub
lock
lods
hlt
sahf
negl
jle
ss
jnp
sbb
adc
and
cmp
enter
jns
divb
inc
sub
xlat
push
aad
out
or
cwtl
add
test
dec
add
test
pop
push
movsb
out
repz
inc
add
mov
add
mov
xor
add
adc
adc
mov
pop
pop
add
out
test
dec
add
add
inc
add
dec
add
negb
add
sub
or
and
mov
pop
dec
es
fisubrs
cmpsb
push
addb
push
dec
aaa
mov
pop
dec
add
pop
inc
sbb
out
sti
fisubl
push
pop
dec
aaa
pop
out
into
mov
pop
dec
add
inc
add
repnz
testb
aaa
js
push
inc
mov
jmp
fcompl
jae
xchg
adc
or
pop
sarl
push
sahf
push
ja
push
push
lret
fidivs
and
pop
or
fstpt
loopne
dec
or
mov
out
loope
and
repz
loopne
jbe
rcrb
dec
arpl
fisttpll
push
inc
push
cs
mov
fidivrs
sti
or
inc
sbb
inc
js
jnp
jp
dec
dec
push
rsqrtps
lret
loope
pop
inc
aas
or
rdmsr
out
pusha
fucomip
adcl
pop
inc
aas
or
dec
div
js
xor
dec
pop
pop
aam
shlb
paddsw
loope
add
negb
or
pop
mov
int
mov
or
call
jae
jo
and
sbb
push
mov
mov
and
mov
and
xchg
pop
in
push
push
inc
es
add
add
pop
inc
sub
add
loopne
add
pusha
sbb
daa
xor
mov
sbb
dec
cli
pop
add
idivl
sbb
xlat
sahf
jnp
adc
sar
or
mov
or
insb
sbb
dec
inc
inc
rclb
xchg
inc
add
push
pusha
inc
inc
push
inc
fmul
pop
dec
add
xchg
dec
inc
mov
out
testl
test
add
shrb
shl
gs
dec
or
outsb
lret
test
cmp
or
dec
jb
dec
lock
fwait
dec
inc
push
gs
outsl
arpl
pop
add
mov
sub
push
daa
dec
and
push
mov
add
xchg
test
and
fisttpl
stc
cmp
inc
insl
cwtl
sub
subb
mov
in
adc
push
add
fsts
sub
adc
or
and
iret
jno
andb
or
xchg
adc
gs
sbb
nop
inc
mov
dec
jnp
adc
and
push
sub
clc
int3
sub
push
mov
add
inc
outsl
insl
ltr
xor
inc
xchg
add
or
ror
movsb
adc
or
loopne
pop
cli
mov
cmp
sbb
inc
adc
sbbl
add
sbb
dec
adc
aaa
and
and
rcrl
sbb
pushf
pushf
pushf
pushf
or
sub
inc
sahf
pushf
add
sar
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
daa
daa
and
sarl
xor
xchg
daa
daa
xor
ror
xchg
xchg
xchg
xchg
enter
dec
adc
jle
push
dec
cmp
inc
test
jle
jb
xor
inc
xor
inc
popf
incl
add
mov
xchg
and
rorb
dec
ret
and
into
inc
imul
adc
repnz
or
add
dec
loope
sub
sub
sub
add
inc
mov
loopne
or
push
mov
movsb
add
dec
add
cmp
popa
repnz
dec
push
jae
jmp
and
movsl
and
mov
pop
dec
adc
pop
in
pop
xchg
or
incl
mulb
cmp
call
dec
dec
pop
cmc
std
call
add
sar
call
in
adc
pop
and
lock
fsubr
dec
inc
iret
mov
xor
xchg
mov
dec
or
ja
and
inc
ds
aaa
call
xchg
add
adc
in
les
sub
mov
cwtl
movsl
jne
or
mov
into
adc
std
sub
jmp
out
mov
and
add
cmp
inc
push
cld
jmp
pop
xchg
jl
les
les
push
xchg
fsincos
ja
shrl
pop
add
inc
ds
jl
les
decl
and
sbb
incl
std
ljmp
in
repnz
inc
std
call
les
cld
jle
sub
jge
pushl
add
add
mov
movsb
lea
push
mov
push
repnz
std
incl
cli
lcall
shlb
test
jl
xchg
divl
cld
call
sbb
gs
jmp
push
mov
push
je
and
fwait
mov
js
dec
cmp
or
mov
push
mov
jl
dec
mov
pop
les
jns
adc
add
or
ret
jmp
pop
nop
sbb
adc
or
mov
rcr
pop
adcl
push
call
iret
pushf
sbb
and
add
add
sbb
stos
clc
mov
push
xchg
divl
add
jne
jg
push
push
add
std
testl
fisttpl
lea
inc
xorl
repnz
shr
mov
icebp
sbb
adc
adc
mov
js
inc
sbb
inc
cmp
cld
sub
ret
inc
and
fstl
jl
xchg
jmp
les
les
enter
les
incl
add
push
and
cmpsl
mov
sub
cmpsb
int3
arpl
and
outsb
xchg
and
into
and
push
xchg
rclb
cmp
out
inc
sub
incl
xor
int3
scas
aam
mov
xor
scas
and
faddl
test
shr
add
arpl
scas
stos
jl
ljmp
sbb
cli
inc
das
adc
stc
jb
dec
lahf
insb
les
les
rcrb
les
xchg
and
dec
cld
push
and
mov
pusha
dec
mov
pop
cmc
add
test
pushl
incl
xor
out
or
jo
and
lret
insb
les
clc
inc
cs
xorps
dec
popa
xlat
rcrl
es
push
mov
cmp
jb
xor
sbbb
insb
xchg
pusha
addb
xchg
jl
cmpl
lcall
decl
fdivrl
jo
inc
jo
inc
dec
jle
repnz
ret
inc
add
inc
ss
lcall
insb
xchg
cld
pusha
std
lcall
xchg
stc
aaa
and
mov
jg
add
push
add
notb
sbb
ss
xchg
add
and
mov
mov
lcall
inc
xchg
repz
mov
mov
mov
mov
decb
ja
add
or
lcall
ret
inc
bound
mov
xchg
cmp
sarl
setg
push
insb
dec
and
lea
mov
xor
inc
fwait
repz
and
and
es
or
xor
xchg
repnz
call
push
xchg
nop
xlat
xchg
repz
and
jmp
pop
mov
inc
dec
xor
cs
or
or
sub
test
jge
mov
jae
lea
mov
pushl
bswap
les
in
addl
lods
xchg
jo
aas
fucomip
jmp
in
push
xchg
les
lret
sbb
inc
add
cmp
or
mov
and
out
or
xchg
jns
sbb
jo
inc
jo
inc
and
adc
sub
xor
add
xor
call
pop
and
ss
adc
or
repnz
les
les
imulb
sbb
dec
daa
dec
adc
je
xor
aas
jno
les
loop
xor
pop
jp
add
test
data16
call
clc
jmp
stc
incl
arpl
imul
imull
hlt
xchg
rorl
int3
adc
mov
jp
adc
aad
clc
fisttps
pop
aaa
outsl
aaa
mov
outsl
adc
in
and
inc
iret
sti
jge
pop
and
daa
in
jne
sbb
ljmp
add
dec
push
push
push
iret
gs
das
or
jmp
or
mov
mov
inc
cld
xor
mov
sbb
inc
sub
add
inc
adc
fnstsw
or
pop
call
dec
mov
or
push
das
add
sub
inc
dec
push
pop
bswap
xchg
in
xor
in
add
movsb
mov
test
int
jb
push
jg
sysret
adc
and
mov
mov
jle
addl
sarb
inc
repnz
shlb
cld
xchg
nop
shrb
call
ror
mov
and
jno
push
add
cld
jle
pop
imul
mul
adc
jae
inc
xchg
push
inc
or
je
push
inc
adc
xor
mov
adc
test
inc
jmp
adc
pop
lret
inc
es
loope
xchg
sbb
dec
out
mov
pop
xchg
sbb
ja
in
or
cmp
in
ret
push
push
or
call
add
xor
sbb
xchg
xor
in
xchg
or
add
call
mov
mov
outsl
pusha
push
or
push
add
or
cmp
mov
test
adc
in
adc
xor
sbb
in
cmc
or
push
xchg
mov
daa
mov
repnz
in
test
jne
pop
xchg
mov
fcoms
or
and
cld
in
sti
movsb
fstps
loope
mov
mov
int
int
in
fisttpll
or
js
mov
jle
xchg
adc
fcmovu
out
jl
cmp
adc
repz
fisttps
or
repz
leave
inc
insb
mov
movsb
mov
sub
and
mov
in
repnz
add
add
or
add
int
ret
sub
mov
dec
sub
jbe
push
iret
adc
lods
jecxz
in
push
dec
out
aaa
je
adc
push
push
aam
movsl
lcall
insb
out
jns
xchg
add
add
ss
movb
shrb
jmp
cmp
fnstcw
iret
push
pop
xchg
fldcw
les
push
aas
rolb
outsb
or
jge
cmp
adc
iret
out
pop
push
or
fdivrs
into
iret
cli
or
mov
or
inc
dec
ret
xor
sbbl
xchg
sub
push
call
jo
jns
add
add
sub
pop
jecxz
out
mov
jmp
ja
adc
imul
or
xchg
add
imul
jnp
cld
add
loope
jne
add
add
rcll
imul
stc
and
in
push
in
stc
in
ret
lahf
dec
aam
jmp
xchg
xacquire
bound
test
jae
leave
or
pop
jl
pop
push
in
in
or
add
and
add
sbb
int3
add
sti
jl
dec
push
movl
call
std
adcl
outsl
and
fwait
mov
mov
js
dec
mov
mov
push
jns
jmp
fldt
call
adc
inc
arpl
in
jo
repz
fnstenv
leave
movzwl
insb
jecxz
or
mov
ficoms
or
in
int3
push
xor
aaa
cmp
dec
jo
push
jmp
and
scas
out
cs
dec
and
sbbl
call
pop
add
jle
aas
xchg
add
stc
jnp
pushl
jmp
jo
adc
jl
mov
ljmp
cli
test
call
cmp
pop
pop
adc
mov
imul
sbb
adc
mov
or
adc
or
mov
sahf
pop
pushf
xchg
pop
push
mov
or
jns
dec
shlb
push
movsb
jae
js
out
adc
sbb
call
mov
pop
pop
rclb
xchg
inc
mov
push
dec
outsb
sbb
xor
pusha
or
iret
ret
push
mov
mov
cli
loopne
mov
sub
mov
rclb
into
jnp
push
xor
lods
jmp
leave
nop
loopne
iret
sbb
sbb
dec
or
fs
mov
shlb
scas
in
jmp
dec
mov
arpl
pop
xchg
pop
shlb
pop
add
add
mov
cwtl
hlt
rcrb
sub
rorl
xchg
jle
mov
push
jle
adc
fnstenv
call
xor
cmpsl
push
scas
test
cmpb
incl
and
in
test
and
inc
pop
ret
jmp
push
xchg
call
xor
mov
pop
enter
fdivrp
into
add
add
pushl
incb
lcall
leave
psubw
lcall
repz
jl
repnz
inc
cmp
or
push
xor
testl
inc
or
std
cld
dec
jne
call
pop
jle
adc
repnz
jmp
dec
popa
icebp
std
ss
lods
xor
inc
or
push
jbe
push
and
xor
and
or
xchg
into
sbb
cvtps2pi
jmp
enter
decl
and
or
inc
ret
inc
jle
cld
sub
icebp
decl
or
mov
pop
repnz
je
lock
jp
mov
lcall
or
dec
ds
dec
cld
dec
mov
or
or
dec
add
mov
sbb
push
lods
call
clc
sbbb
or
ret
je
or
dec
test
sbb
loop
dec
push
call
stc
adc
jnp
add
or
push
mov
call
in
and
mov
add
hlt
shll
popa
ljmp
inc
lea
je
fildll
popa
jl
jge
andb
xor
mov
inc
das
push
push
pop
call
js
adc
pop
fcomi
imul
sub
sub
aas
neg
call
mov
sahf
aas
push
mov
push
inc
jmp
stos
or
push
jae,pt
sbb
pop
dec
iret
repz
sub
adc
and
dec
sub
mov
jg
rcll
das
add
call
dec
push
push
jnp
mov
dec
cmp
push
movl
out
loope
call
push
add
inc
shlb
cmp
out
popl
xchg
sbb
adc
add
les
push
loope
imul
fidivrs
ds
jg
cmp
jae
xor
or
ret
pop
cmp
hlt
or
and
outsl
push
rcll
movsb
adc
cmp
jle
fcomp
je
testb
inc
mov
int
bound
out
roll
and
pop
rolb
shll
mulb
sbb
pop
sbb
dec
arpl
push
jo
stos
inc
push
mov
sbb
xor
lahf
xor
xchg
loop
or
or
fmuls
sub
mov
test
fists
scas
add
inc
fsts
repz
lcall
xchg
ss
pop
pop
sbb
or
stos
ljmp
insb
xor
and
loopne
cld
dec
aad
inc
push
jne
push
sbb
mov
xor
cmp
push
cld
div
lcall
mov
testb
pop
push
mov
ja
inc
xor
sub
fmuls
call
xchg
and
pop
or
mov
mov
mov
faddl
sarb
pop
jmp
mov
push
mov
jmp
mov
loope
push
movsl
adc
and
and
pusha
and
and
sub
mov
push
popf
adc
mov
inc
sahf
nop
add
in
push
rorb
xor
or
adc
and
call
outsl
inc
jp
call
push
aaa
pop
add
leave
ss
push
and
pop
pop
loopne
add
iret
jmp
add
out
addb
jne
mov
test
inc
dec
jb
dec
add
add
sarb
daa
sub
daa
cli
cmp
cmp
cmp
rcl
jmp
push
inc
push
dec
stc
add
inc
inc
inc
sti
sbbl
mov
xor
aas
xchg
xchg
out
ljmp
call
insb
repnz
orl
sbb
ja
push
mov
adc
inc
pop
jmp
cmp
add
aas
xor
and
sbb
mov
adc
cmp
pop
insb
push
lods
rclb
and
bndldx
aad
or
data16
clc
push
insl
xadd
sbb
push
lods
mov
adc
or
jge
mov
hlt
adc
sbb
cmp
cmp
and
dec
mov
xchg
jno
mov
sbb
adc
jl
jbe
pop
dec
jne
mov
or
cli
pusha
dec
adc
jae
dec
jmp
std
iret
push
ret
push
pop
testl
fs
dec
and
repz
jecxz
cwtl
std
out
movsl
push
ljmp
sbb
dec
push
adc
pop
fcomps
push
cmp
loopne
mov
and
int3
xor
or
push
adc
rcll
rorl
jl
mov
cwtl
sbb
in
jle
push
pusha
jbe
cmp
test
inc
pop
std
sbb
repnz
out
mov
inc
xor
pushf
mov
inc
ret
jbe
jne
out
jne
add
pop
or
jg
cmp
cld
jb
adc
add
and
cmp
xor
sub
iret
push
sbb
cld
mov
aas
fmull
adc
xchg
out
roll
xor
push
mov
fcomps
cmp
sbb
repnz
pop
aad
imull
mov
icebp
sub
int3
and
stc
sbb
fwait
cmpsb
jb
add
or
call
add
call
sub
sbbl
icebp
pop
jo
sbb
sub
addr16
mov
mov
sub
pop
mov
jne
xchg
stos
inc
cmp
jg
sub
push
push
mov
scas
mov
pushf
xor
cmp
and
ficoml
pop
jle
rcr
pop
pop
xchg
je
mov
call
out
or
int
or
pop
pop
adc
ret
jp
cwtl
pop
repnz
adc
or
pusha
sbb
or
jmp
add
jle
mov
int3
add
shrl
cmp
mov
jmp
push
inc
mov
mov
or
mov
ret
andb
add
daa
pop
loop
adc
fdivrp
xchg
leave
jmp
pop
cmove
out
push
lea
xor
out
pop
cs
mov
cmp
dec
xchg
lock
cli
or
or
orb
pop
sub
inc
and
adc
pop
pop
hlt
xlat
insb
dec
clc
xor
jl
je
pop
jg
shrb
enter
shrb
inc
in
and
inc
ret
test
inc
xchg
loopne
and
stc
ret
fldt
clc
fldz
imul
inc
add
ds
add
adc
dec
inc
adc
jge
in
and
aam
xor
aaa
inc
scas
call
pop
and
sub
add
std
xor
or
xor
fmull
out
in
add
inc
mov
xor
dec
mov
sub
sub
aam
clc
xor
daa
sub
sbb
push
dec
cmp
jns
dec
or
add
pushf
pushf
mov
sar
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
inc
sahf
cmp
cmp
xor
dec
dec
sub
and
dec
dec
dec
dec
sbb
adc
dec
jle
pop
push
dec
inc
add
or
dec
ss
pop
aas
mov
jb
sub
adc
inc
add
push
inc
add
xchg
xor
sub
inc
xchg
or
movsb
cmp
adc
rorl
sub
pop
inc
dec
xchg
sub
jg
pop
inc
test
enter
fdivl
jg
nop
inc
push
sbb
inc
or
ret
pusha
mov
movsb
nop
inc
cmp
bound
inc
adc
pop
and
jg
pusha
inc
fistpll
inc
or
and
and
imul
inc
or
mov
and
xchg
bound
dec
orl
insb
pop
add
adc
adc
jg
orl
cmp
add
inc
das
jg
lods
nop
and
fsub
cmpsb
incl
jns
pop
and
outsb
xor
cwtl
mov
mov
pushf
lret
fwait
addb
ljmp
sbb
in
call
andb
or
call
ja
ret
dec
testb
mov
fs
int
jmp
and
and
add
mov
inc
push
call
rorb
adc
enter
mov
outsb
mov
mov
mov
adc
push
ret
adc
in
xor
push
std
and
add
or
inc
cmp
jbe
orl
maskmovq
pop
mov
sbb
pusha
ss
dec
inc
push
cmp
xor
add
in
popa
or
popa
mov
cmp
adc
mov
ljmp
int3
add
hlt
adc
sub
and
in
scas
push
push
in
and
mov
fcoms
xchg
pusha
into
popa
cld
xor
pop
add
mov
dec
add
dec
push
and
adc
repnz
add
cs
call
or
test
lods
call
ret
clc
enter
addb
mov
cmpsb
sub
dec
mov
or
or
fisubs
add
call
nop
lret
lret
hlt
hlt
call
out
jmp
jmp
nop
mov
xor
cmp
ja
imul
sub
lcall
mov
ja
xchg
mov
pop
push
cmc
lea
addr16
and
lea
lahf
xchg
push
lds
dec
into
cmpl
dec
das
pop
test
cmp
je
lret
call
sub
call
inc
je
and
or
push
pop
jne
pop
inc
inc
js
fildl
add
popa
xchg
call
xor
div
dec
add
adc
shll
sub
scas
in
jb
cmp
add
or
xor
xor
jp
js
add
dec
shlb
xchg
lcall
adc
movsb
and
dec
lcall
in
add
or
mov
pop
mov
dec
xchg
xchg
push
push
cwtl
les
mov
call
mov
das
or
sbb
xchg
lret
das
sar
jmp
stc
and
add
add
adcl
sti
loope
xor
test
out
jbe
outsl
flds
pop
sub
cmpsl
test
lea
je
mov
sbb
test
cmpsl
int
lcall
and
stc
add
ljmp
bnd
nop
xchg
incl
or
and
js
insb
jmp
mov
shl
mov
mov
flds
imul
jle
in
jge
rcr
adc
jmp
in
or
call
and
loope
and
xor
push
push
movsb
jb
cld
cmpsl
fists
jg
add
push
out
push
or
or
and
orl
sub
jmp
mov
popa
pop
arpl
sbb
clc
push
jge
mov
sahf
hlt
adc
jo
nop
nop
pushf
mov
data16
inc
push
lahf
repz
mov
test
cmpsb
mov
xorb
jge
pop
jns
push
lahf
std
and
cs
mov
xchg
xchg
sbb
xor
and
xor
lahf
mov
cltd
xor
lret
lea
pushf
leave
dec
ja
jmp
sub
and
mov
movsb
inc
sub
xchg
xchg
and
cld
test
sub
and
push
inc
sub
lods
jo
and
dec
mov
adc
popa
notl
jmp
pop
test
or
nop
inc
inc
push
and
mov
stc
clc
mov
outsb
cmpsl
cmp
sub
clc
mov
mov
iret
test
cltd
xor
add
call
jns
stos
sub
fs
add
inc
push
xlat
and
call
and
jno
incl
pop
xchg
cmpb
cmpsl
pop
std
pop
call
test
ja
dec
mov
push
push
and
movsb
xchg
xchg
pop
push
xchg
rolb
out
jmp
sbb
inc
push
cli
ret
mov
mov
fwait
inc
or
and
mov
mov
cmc
incl
fiadds
test
push
push
lcall
lea
divl
jb
sar
sbb
add
mov
and
mov
push
cs
mov
inc
ficomps
sub
pushf
dec
mov
mov
mov
addb
cmpb
adc
ret
loopne
fwait
je
inc
and
inc
jb
lock
iret
xor
pusha
mov
lret
jle
xchg
xor
mov
mov
fcom
test
xchg
loop
mov
pop
mov
mov
repz
jbe
pushf
inc
lds
xlat
add
fisubrs
and
sbb
cmpsl
adc
incl
push
push
or
xor
pop
cmp
pop
adc
fcom
decl
pop
or
adcb
out
out
stos
adc
call
jbe
shrb
out
xchg
sbb
shl
pop
jg
in
iret
aam
push
aaa
xchg
fmuls
imul
jecxz
rorl
pop
jle
adcl
decl
roll
pop
mov
jl
stc
rorb
lret
adc
aam
addl
jmp
callw
ja
cld
ficoms
sahf
or
call
sub
mov
add
xorb
xor
mov
rcll
cmp
out
jmp
call
adc
mov
fcmove
xchg
jecxz
mov
call
popf
push
dec
push
loope
fisubrl
rolb
dec
cmp
aaa
enter
or
sbb
jmp
fidivrl
mov
sahf
mov
rcl
inc
jmp
inc
fsubrp
xchg
inc
or
rcrb
xchg
adc
andb
dec
pop
add
inc
js
pop
jae
pop
adc
mov
push
testl
pop
mov
inc
dec
and
jmp
xchg
mov
and
mov
sub
sbb
outsb
in
lock
and
dec
cmpsb
sbb
mov
jl
sbb
mov
lcall
mov
push
fsub
pushf
pop
sbb
je
inc
mov
repnz
ss
icebp
lret
jp
in
aad
rcrb
popa
shr
xor
adc
cmp
cmp
es
out
mov
inc
fistl
mov
pop
adc
or
push
mov
cmc
or
or
dec
int
test
sub
add
jl
aas
dec
xchg
jo
push
loope
add
sbb
mov
aaa
gs
outsl
and
sbb
cld
add
add
inc
lock
adc
adc
mov
and
add
jge
adc
les
sbb
popf
cmc
jmp
dec
pop
push
ror
ss
es
lods
or
out
jmp
xor
stc
cmpsl
pop
sbb
leave
jg
inc
mov
or
mov
stos
loop
unpckhps
test
xor
test
sub
mov
ret
ret
orl
daa
stc
imul
add
xor
cmp
lret
dec
stos
or
xorl
les
xor
divl
or
test
jle
fdivl
pop
in
and
fcoml
in
sub
mov
push
xchg
rorl
stos
dec
je
dec
jne
mov
data16
jmp
mov
std
xchg
pop
mov
movzwl
ljmp
into
push
inc
imul
unpcklps
fnstenv
test
pushl
mov
add
lea
inc
fcoml
mov
xor
xor
movsl
enter
inc
loopne
adc
xchg
loope
xchg
or
adc
push
pop
mov
jmp
inc
or
and
pop
adc
or
psubsb
lahf
sub
in
mov
and
push
lcall
rorb
mov
mov
dec
ror
mov
and
sub
jne
adc
xchg
insl
push
jle
jno
dec
jl
loop
scas
gs
cmp
and
ret
push
and
shl
ficoml
pop
dec
and
cmc
clc
mov
or
sbb
and
and
adc
out
loop
mov
push
repz
push
add
inc
sbb
ret
jle
add
jge
cmp
je
xor
jmp
cld
cmpsb
mov
or
divb
add
sahf
and
negl
fisubs
cmp
je
mov
inc
je
cmp
je
xchg
je
mov
jmp
inc
jmp
imul
mov
jmp
cmpl
roll
inc
mov
add
mov
scas
adc
sti
insl
rcr
mov
sti
jmp
push
pop
mov
pop
in
imul
stos
ror
loopne
ret
jge
je
aad
pop
xchg
pop
es
adc
outsb
sti
sbb
cmp
add
add
jb
aaa
and
adc
sahf
shrb
pop
ret
imul
fwait
daa
and
out
push
sbb
push
jp,pn
push
inc
dec
inc
aam
dec
int
mov
sub
hlt
mov
cmp
cld
or
fiaddl
clc
sub
or
pusha
mov
stc
cltd
inc
loopne
pop
fcoms
in
sbb
sub
rolb
push
inc
ret
cmpsl
sbb
xchg
inc
clc
and
dec
fdivs
jmp
jmp
faddl
inc
push
or
filds
and
jle
cli
jge
xor
xlat
jmp
stos
js
orl
stos
outsb
test
lss
sub
push
jge
nop
inc
push
jecxz
movsl
sbb
stc
pop
ret
hlt
call
pop
or
xchg
lret
and
cmpsb
mov
adc
pop
rcll
push
and
xor
mov
ret
add
jl
push
call
fldt
push
repnz
cs
xor
adc
mov
and
adc
rcll
xchg
cld
inc
clc
mov
cmp
or
je
or
mov
fildll
mov
xchg
fidivl
jae
inc
out
or
sti
inc
push
mov
mov
add
stos
aas
sahf
jl
inc
inc
mov
mov
dec
repnz
jl
shll
xor
push
test
flds
lock
push
mov
cli
and
add
repz
nop
add
add
xor
sbbb
test
pop
add
call
or
mov
mov
add
gs
xor
in
xchg
ret
dec
repnz
sahf
sbb
pop
inc
cld
fiaddl
push
repnz
rorb
sti
ljmp
mov
lcall
and
out
xchg
fs
pushf
test
add
dec
push
or
in
push
xchg
ja
push
jmp
dec
pop
sbb
adcb
outsb
and
push
pop
and
mov
ret
pop
add
add
pusha
jg
pop
insb
or
cmp
xchg
test
int
jp
dec
or
mov
xchg
push
cld
out
movsl
sbb
jo
pushf
and
add
movsl
push
sbb
and
cmp
xchg
das
lods
inc
sub
xchg
add
ljmp
sar
jl
ret
insl
iret
sub
xlat
sbb
shr
mov
enter
ficomps
repz
jns
data16
call
test
or
mov
mov
xchg
add
mov
sub
incl
add
pop
inc
mov
mov
iret
push
sbb
sub
sbb
std
add
inc
rclb
sbb
adc
and
incb
fdivrs
insb
cmp
ds
jmp
ret
sbb
incb
sarb
push
loope
lcall
cmp
int
mov
cmpb
adc
jg
adc
mov
sub
pop
sub
call
mov
mov
pushf
sbb
inc
lock
loopne
pop
add
jmp
xor
pop
sbb
inc
sti
jmp
push
inc
jmp
xchg
stos
pop
dec
cmpl
jge
fmull
fistpll
nop
lds
imul
push
push
ret
jle
gs
add
or
push
mov
scas
adc
ds
sub
mov
dec
test
or
sbb
sub
leave
sbb
xlat
data16
in
lds
pusha
or
cvtpi2ps
call
or
lret
jg
add
xchg
fbld
lea
adc
js
push
adc
mov
mov
fmulp
xchg
and
adc
jle
jp
pushl
and
leave
jge
test
fsubrs
jmp
dec
jmp
mov
pusha
aaa
jp
fsts
and
daa
jno
aaa
ret
ja
adc
in
lock
inc
fld1
in
imul
and
je
mov
adc
dec
out
mov
and
test
movnti
xstore-rng
cmpsl
inc
push
add
ds
push
push
lret
jnp
aas
divb
add
mov
movsl
or
stos
add
loop
push
cmp
push
adc
adc
mov
push
inc
pop
incl
inc
mov
cmpl
repnz
and
xchg
ret
or
jne
jne
sub
xchg
inc
cwtl
icebp
mov
sbb
call
leave
push
inc
inc
imul
xor
or
scas
mov
outsl
push
xchg
sbb
arpl
sbb
or
mov
mov
imull
push
repnz
rcr
jae
jb
shlb
dec
inc
nop
xorl
pop
imul
std
je
cmp
dec
or
lock
inc
ss
imul
add
or
jge
mov
add
and
sub
out
test
mov
mov
lahf
mov
sub
fnstenv
fdiv
or
lret
lds
pushf
pop
test
dec
jmp
mov
inc
xchg
daa
inc
jo
cmp
pusha
mov
sub
add
sub
pusha
jne
jne
jle
rol
sar
fcmovbe
out
and
and
imul
test
and
insb
ds
jmp
push
push
repz
ss
repnz
lret
repnz
ficomps
add
add
dec
fmull
cld
int
mov
mov
push
incl
call
add
out
xor
and
aas
scas
insb
leave
les
rcrl
add
jnp
or
pop
add
sbb
nop
cs
push
gs
dec
add
pop
call
jo
call
mov
addb
int
outsb
inc
push
xor
add
and
or
inc
fcmovbe
js
or
test
pop
je
invd
lds
or
inc
dec
sbb
clc
loopne,pn
mov
andl
pop
out
xlat
inc
pusha
adc
lods
in
ds
call
rcrl
call
ds
push
fistps
sbb
sub
test
in
test
jbe
or
lahf
js
leave
pop
xchg
push
mov
arpl
jp
mov
inc
mov
sahf
mov
pop
mov
movb
sub
lcall
sub
sub
aaa
xchg
daa
pop
add
roll
scas
xchg
mov
add
and
sbb
lret
aam
cwtl
sub
outsl
popf
push
test
mov
inc
ds
outsl
lock
adc
add
clc
les
jne
div
outsb
fstpt
repz
outsl
inc
fs
cmp
divl
lock
loop
jo
jle
inc
push
or
stos
aam
lods
or
adc
outsb
mov
sub
inc
cmp
add
fs
ficoms
scas
js
or
dec
add
cs
in
out
sub
es
lcall
xchg
xchg
lret
cmpsl
sbb
outsb
mov
movl
ret
nop
lock
xchg
mov
adc
mov
xchg
fldt
xor
sub
shll
call
jl
mov
or
iret
pop
fdivl
mov
cs
cmpsb
nop
add
addl
ja
popa
dec
and
pop
mov
xor
add
mov
cmovnp
inc
scas
xchg
test
and
lahf
or
or
pop
sbb
sub
jbe,pn
and
fmull
lret
mov
cmp
ja
movsb
fsubs
and
in
fdivs
popa
mov
cmp
jl,pn
or
push
and
push
ret
lock
pop
rcll
push
add
das
add
pop
dec
pop
jl
and
cmp
dec
cld
das
stc
xchg
pushf
add
sar
cli
and
cmp
jbe
cmp
insl
rcrb
imul
sbb
inc
jb
iret
repz
sub
xor
cmp
dec
adc
cmp
mov
je
fsubr
mov
addps
in
xchg
mov
xchg
sahf
out
mov
push
sar
jne
les
out
jnp
push
add
cmp
or
scas
ret
notl
in
sub
mov
inc
cmp
lcall
aaa
lds
push
jbe
rorb
js
jmp
cmp
dec
sub
inc
mov
dec
fs
mov
stc
xchg
movups
les
and
push
dec
and
data16
adc
in
out
icebp
xchg
cwtl
or
addb
or
xor
mov
push
aam
add
adc
push
xor
push
scas
jno
add
cmp
xchg
shlb
lods
push
or
nop
adc
adc
adc
add
rcll
inc
outsb
lret
and
mov
cmp
mov
xor
negl
or
inc
add
pop
iret
jnp
stc
mov
mov
xchg
mov
iret
xor
dec
pop
popf
rorl
inc
out
sbb
sub
mov
pop
imul
enter
testb
addb
jl
clc
loopne
add
outsb
addl
clc
pop
push
push
aas
lret
insl
call
xchg
lahf
lret
outsl
popa
pop
dec
cmp
data16
dec
pop
dec
jo
iret
enter
or
jle
fsubr
into
cmp
add
sub
add
insb
mov
in
das
in
inc
clc
dec
jle
std
mov
dec
xor
dec
push
jo
fildll
or
push
push
sarb
repnz
xor
sbb
inc
cwtl
mov
cmp
sub
add
fimuls
jl
cmp
roll
xor
les
imul
jnp
xchg
js
xor
adc
arpl
loopne
lahf
scas
xlat
xchg
scas
je
shrl
sbb
dec
jp
push
or
add
push
or
imul
and
idivb
sub
add
shr
xor
xchg
sub
fucomi
add
dec
jne
mov
inc
add
jp
push
movsl
dec
dec
inc
push
loope
push
je
ljmp
inc
out
xchg
or
movsl
fs
or
or
je
xchg
mov
fld
arpl
gs
dec
inc
test
adc
popa
add
into
cli
call
inc
loopne
or
dec
aam
pop
clc
fmuls
adc
add
cmp
test
cli
mov
cmp
mov
jne
mov
push
add
nop
rolb
lods
or
rclb
bound
mov
push
mov
push
add
jecxz
or
adc
add
xlat
jne
sub
test
fidivrl
mov
je
add
shr
sub
loopne
loopne
adc
add
add
es
lock
jne
jle
sub
incl
jno
inc
into
scas
push
inc
and
std
jno
aam
leave
dec
out
inc
fiadds
mov
and
in
insl
add
test
push
jne
es
mov
leave
dec
and
inc
pushf
mov
jo
add
jge
inc
clc
dec
iret
or
push
call
add
and
loopne
loope
jnp
add
cs
and
adc
mov
jnp
add
sub
cmpsl
xor
pusha
inc
or
mov
sbb
aad
outsl
and
jne
sarl
rcl
lret
lock
into
mov
sti
sub
add
sbb
pop
push
rcrb
or
push
or
mov
fs
scas
adcl
in
add
or
jge
sub
pmaxsw
fmul
mov
xlat
rolb
imul
or
imul
cmpsl
adc
or
inc
mov
cmp
adc
sbb
pop
je
clc
inc
push
and
dec
int3
fs
mov
push
adc
pop
iret
lock
ret
int
xor
dec
jg
cmpl
or
pusha
outsl
xchg
xor
fcomp
jmp
jnp
sbb
fdivs
sahf
aad
sbb
push
sbb
jg
push
fisubrs
pop
sbb
jmp
sti
add
jl
cwtl
inc
arpl
push
cmpsl
popa
test
ud2
std
add
and
flds
je
lods
fildl
mov
outsl
inc
xchg
add
jl
push
or
push
adc
pop
jge
jle
rolb
dec
jg
add
inc
clc
dec
pop
dec
inc
xor
das
lcall
jl
xor
push
sbb
push
and
insb
jp
xchg
cmp
add
andb
and
and
je
sub
fs
or
dec
sub
mov
and
pop
nop
adc
push
xchg
ja
adc
outsb
mov
jge,pt
dec
and
mov
mov
push
xor
add
ljmp
xchg
pop
aam
jp
add
add
add
jmp
push
call
ret
loope
add
mov
push
sbb
push
or
test
xor
cmp
adc
xchg
mov
add
push
mov
pop
dec
add
fldcw
mov
dec
shlb
adcb
outsb
add
xor
fldcw
cmp
dec
mov
cmp
push
rcrb
movsb
aaa
adc
add
mov
jp
add
jae
je
or
and
xor
push
pop
pop
sbb
push
enter
push
dec
pusha
add
or
into
orb
in
sbb
mov
push
movsl
push
push
ja
loop
cs
addr16
jbe
jg
pusha
mov
jb
je
cmpsb
jle
jmp
mov
pop
aam
jo
mov
inc
mov
inc
xchg
dec
movsl
jb
inc
cmp
mov
in
jo
jecxz
dec
xchg
pop
dec
mov
fdivrl
mov
dec
sbb
dec
pushw
sbb
push
cmp
add
add
call
mov
add
mov
jo
mov
inc
sbb
jbe
add
add
dec
sarb
pop
or
xor
imul
pop
dec
jmp
div
fwait
stos
and
shl
mov
sbb
std
or
inc
cmp
dec
or
in
das
sbb
push
rclb
push
jo
je
shr
add
cmp
ja
ret
add
or
mov
dec
jns
cltd
hlt
ds
cmpsb
cmp
hlt
repnz
inc
rorb
fists
sub
movsb
movzwl
push
or
ljmp
bnd
cld
clc
fisttps
xor
sub
sar
add
xorl
inc
cmp
insl
pop
shl
or
lret
or
fnstcw
je
or
sar
sub
sub
clts
sbb
mov
lret
jbe
imul
dec
inc
or
mov
mov
roll
add
dec
add
and
jne
nop
add
loopne
adc
ret
jo
mov
push
iret
mov
jge
test
and
or
pop
into
jle
clc
inc
inc
jl
ja
fistpl
bound
pop
mov
call
mov
push
jl
sub
push
outsl
fmul
cmc
inc
jg
popa
movzbl
sar
roll
mov
shlb
loopne
rolb
add
xchg
in
fists
mov
and
jge
shll
or
cmpsb
and
inc
xor
aam
mov
cmpsb
imul
shlb
add
or
dec
pop
inc
stos
inc
inc
jle
adc
xchg
fnstenv
dec
pop
add
and
imul
inc
pop
sub
adc
jo
xlat
adcl
sub
xchg
mov
loope
sbb
fnsave
or
dec
rcl
jae
sub
enter
add
negl
sub
pop
aas
or
mov
cmp
inc
cwtl
xor
mov
shl
add
sti
add
in
adc
inc
sub
pop
pop
mov
loopne
stos
incl
or
jl
mov
rcll
arpl
in
sbb
and
daa
jno
or
loop
ficompl
out
mov
add
pop
pop
fmull
or
dec
push
inc
cmpb
sbb
jnp
and
stos
aam
cmpsb
popf
testb
sub
movsl
mov
sbb
mov
imul
sub
and
and
subl
push
test
sbb
addb
push
js
decl
or
fdivr
mov
mov
xorl
dec
mov
push
decb
test
fnsave
dec
fcoml
xor
insb
mov
popa
mov
mov
adc
mov
push
mov
pop
push
cwtl
data16
nop
cltd
mov
add
mov
sub
out
push
lods
gs
mov
call
adc
xor
adc
xchg
test
push
je
adc
call
xor
lcall
jo
push
insb
push
xchg
add
jmp
push
nop
jo
iret
adc
push
cwtl
jmp
push
cmpsb
test
mov
add
mov
sbb
push
inc
rcrb
cmp
cwtl
mov
and
incl
call
sub
dec
int3
ror
push
and
mov
outsb
clc
mov
add
jmp
mov
dec
jmp
movsb
or
ficoms
in
in
push
cmp
sbb
sub
enter
mov
or
xor
ds
inc
lock
lea
out
cli
or
int
xlat
ds
mov
inc
loopne
push
div
dec
dec
mov
sub
cli
rolb
stos
mov
add
pop
jl
subl
or
movsb
movsb
or
lods
add
mov
add
sub
call
mov
push
cmc
jae
ljmp
stc
xchg
jae
incl
xor
icebp
adc
cmp
jge
fucomi
rolb
xor
sub
das
push
in
xchg
fwait
cmpsb
int3
push
adc
repz
stc
adcb
cmp
jnp
jo
add
loopne
mov
subl
add
mov
js
pop
sub
jmp
aam
mov
fldcw
xor
add
push
push
test
mov
push
and
jmp
movsl
roll
cs
cwtl
push
mov
inc
push
inc
sbb
enter
stos
add
dec
rorl
and
add
lock
ljmp
rep
pusha
insl
adc
mov
lea
fmuls
pop
or
lea
cltd
fs
shll
lea
loop
and
xor
xchg
pusha
add
push
mov
dec
punpcklbw
clc
pop
mov
ja
fdivp
mov
pushf
mov
into
add
out
push
fstp
adcb
xorb
xchg
mov
jp
je
add
call
inc
adc
sbb
into
out
sub
sahf
mov
cmp
cmp
xor
arpl
aam
dec
fistpll
or
adc
cmp
jbe
cmc
ret
adc
sub
inc
mov
loop
jbe
int3
add
sub
mov
fisttpll
stos
pop
test
adc
stc
push
push
insl
add
cli
lahf
jb
and
pop
loopne
inc
dec
test
mov
lahf
out
dec
jns
jns
mov
in
mov
and
inc
int
jl
xor
mov
sbb
cmp
inc
imul
pop
in
cmpsb
int3
dec
push
mov
mov
and
pop
adc
sbbb
add
data16
jo
add
inc
lds
adc
xor
scas
lods
ret
sar
mov
mov
add
mov
push
fs
mov
adc
fidivs
cld
sahf
inc
jg
popf
or
dec
sbb
inc
dec
fldl
lock
or
or
lret
push
test
xchg
xchg
cmp
daa
lock
rolb
sar
xlat
adc
test
sbb
test
push
jle
mov
mov
pop
cmpsl
movb
mov
or
lock
xor
mov
pop
or
cmp
in
call
or
xlat
xor
sub
in
sbb
rorb
call
mov
jo
adc
nop
add
sub
pushf
pushf
pushf
pushf
or
adc
pushf
pushf
pushf
sbb
and
cwtl
inc
call
inc
int3
cmc
mov
shll
cmp
mov
dec
shr
test
popa
push
rolb
fisubs
mov
jno
dec
cwtl
test
sbb
out
cmp
out
adc
inc
mov
call
and
lea
mov
mov
in
push
aas
jo
xchg
cmp
mov
xchg
mov
jo
subb
repnz
or
inc
jmp
mov
jb
lock
stc
jnp
add
add
imul
lcall
shlb
pop
adc
cmpsl
imul
scas
imul
notl
cmc
adc
push
xorl
mov
mov
mov
add
movb
lret
js
das
or
mov
mov
jg
adc
dec
mov
icebp
enter
rorb
mov
rol
mov
mov
mov
add
js
call
xchg
enter
or
sbb
stos
xor
mov
aam
insl
inc
sbb
fwait
dec
arpl
iret
jo
cmp
inc
outsb
leave
push
mov
add
xor
sub
add
test
scas
add
add
inc
mov
dec
sub
push
inc
mov
insl
push
fsubl
test
loopne,pt
add
out
pop
dec
insb
adc
call
dec
ficomps
mov
xchg
iret
imul
add
mov
cmpb
cmp
test
int3
ret
pop
dec
push
fimull
ret
std
outsl
dec
sub
push
call
add
push
add
sub
iret
sbb
je
test
xor
fildl
inc
sbb
dec
cmp
push
aam
movsl
fmul
ds
sarb
xor
int3
rclb
push
inc
mov
mov
adc
es
xchg
fisttpll
je
jmp
in
ss
das
les
mov
loope
pop
cmp
and
push
sbb
je
jmp
sbb
dec
xorl
nop
xor
imul
setns
sbb
sub
out
xchg
adc
stos
dec
mov
push
sti
cmp
call
adc
loop
push
cli
adc
ss
inc
and
pop
inc
and
cmpsb
scas
sub
pop
push
testb
inc
inc
arpl
push
cmp
pop
out
mov
push
pop
insb
add
push
rclb
mov
inc
loop
xor
out
decb
pop
sub
shll
dec
test
shr
xchg
inc
lock
nop
xchg
mov
or
scas
add
pusha
int3
mov
fists
aad
mov
ljmp
add
or
xor
ficoml
divl
fs
cmp
and
bound
lock
call
ret
gs
and
sub
xor
fmul
loop
and
jl
inc
and
ljmp
push
std
xchg
push
cmp
add
xchg
pusha
add
xchg
lahf
inc
and
pop
push
or
test
das
mov
cmpsl
xchg
cmp
mov
into
lret
xchg
insl
dec
mov
cmc
mov
ret
mov
mov
pop
xor
xchg
out
outsb
call
xchg
ret
xchg
lahf
mov
hlt
insb
or
std
lahf
ss
adc
loopne
fbstp
cmp
jle
mov
call
mov
iret
inc
in
hlt
mov
in
sbb
mov
lahf
psrld
loopne
add
stc
and
cmpsb
sahf
fiaddl
fidivrs
dec
shrb
movsb
and
cld
push
or
pop
push
push
call
mov
sbb
sub
mov
je
aad
xor
cltd
and
out
jno
push
pop
lret
xor
xor
mov
mov
outsb
push
cmpsb
in
adc
dec
bound
inc
dec
xor
rol
pusha
jle
adc
movsl
iret
ja
adc
data16
ds
or
int3
ljmp
pushf
cmpsb
or
or
call
call
imull
mov
ja
arpl
push
push
call
imul
or
pusha
mov
pop
lods
dec
scas
in
mov
call
lds
fisttpll
clc
into
lock
push
cmp
cld
add
jb
adc
mov
and
cmp
sbb
inc
setne
js
mov
dec
fldt
xchg
and
and
lret
push
push
rcrb
mov
dec
push
cmp
mov
xchg
inc
pushf
jb
and
fcomi
inc
ret
xchg
aad
out
and
out
xor
or
sbb
mov
daa
fldt
bswap
push
aad
jle
popf
lahf
and
sbb
inc
dec
jne
int
test
xor
inc
ds
push
xchg
lret
arpl
jbe
sbb
pop
push
jae
insl
pop
dec
cmp
xchg
rorl
ret
xchg
outsb
xchg
jae
fwait
xlat
xchg
add
push
push
jnp
es
pop
or
dec
add
sbb
insb
inc
cmp
insl
incl
dec
imul
jge
pop
lret
push
cmp
repz
mov
repz
or
mov
push
mov
sub
mov
add
test
mov
mov
mov
dec
inc
mov
int3
adc
dec
jns
jo
add
mov
loop
xor
leave
lock
rolb
enter
xlat
iret
mov
or
adc
hlt
negl
call
xor
in
xorb
enter
push
inc
xor
lea
mov
cmp
jne
cmpl
jle
fsts
and
mov
fmul
test
jle
and
xchg
popa
dec
insb
movsl
adc
repz
or
ret
jmp
aas
xchg
push
push
adc
jmp
rolb
cmpl
push
pop
dec
sub
and
mov
jle
fs
mov
push
ss
loopne
lret
xchg
inc
loope
aas
add
sbb
jmp
cmp
or
cmp
mov
fwait
sbb
lods
shl
sbb
cwtl
adc
ret
push
repnz
adc
adc
xor
push
xchg
mov
or
adc
cltd
mul
mov
pop
sub
pop
fldl
aas
cmp
mov
jno
call
aaa
push
lods
jl
es
jo
push
lcall
dec
je
call
test
pushf
or
ja
jg
xor
cwtl
or
cwtl
aam
enter
mov
pop
and
mov
lret
nop
or
jo
inc
mov
aaa
xchg
lret
sub
or
xor
lock
ja
mov
je
sub
outsb
lock
imul
sbb
stc
jmp
cmpl
pusha
testb
jne
aas
pusha
loop
cld
mov
lgs
add
or
mov
ret
adc
scas
cmc
add
push
xchg
lods
sbbl
xor
test
bound
cmovp
or
out
adcb
mov
ret
arpl
sbb
cmpsl
sub
mov
jg
jle
adc
les
or
ficoml
sub
sub
xchg
add
cld
xchg
imul
and
int3
push
shlb
xchg
fsubr
cli
mov
call
leave
cmp
sbb
ret
cmp
hlt
mov
repnz
and
pop
inc
fwait
and
sub
and
cmc
mov
xchg
cmpsl
cmp
dec
or
and
mov
sub
mov
mov
lock
jnp
or
push
push
add
adc
fldl
in
adc
cs
sub
xlat
inc
mov
or
and
addr16
ds
adc
cmp
iret
sarl
mov
add
out
fcom
mov
mov
inc
addb
nop
lods
dec
lods
pushf
and
mov
fists
and
mov
jg
fwait
push
push
mov
add
idivl
mov
cmp
fmull
mov
sahf
jmp
call
push
cmp
inc
sbb
xchg
mov
add
mov
lahf
push
popf
frstor
nop
xchg
xor
cmp
inc
xor
imul
dec
dec
fnstsw
ljmp
add
cmpb
mov
test
mov
push
sub
cmpsl
mov
aaa
cmc
mov
call
push
push
mov
push
ds
sahf
inc
inc
je
scas
mov
jecxz
push
lea
xchg
std
mov
mov
fdivrl
std
fdiv
push
enterw
pop
int
jne
mov
pop
call
cld
adc
ret
pushf
loop
int
movsl
sub
cmp
or
sub
xor
mov
jle
int
lahf
ja
addr16
mov
js,pt
adc
push
xor
loopne
and
fdivrs
dec
mov
sahf
in
mov
pop
fisubl
mov
movl
gs
nop
xchg
insb
pop
mov
nop
sahf
xchg
mov
and
mov
nop
pop
invd
dec
push
sbb
imul
push
cli
sub
mov
mov
xor
adc
lahf
sub
jae
orb
daa
xlat
pop
fldz
loope
test
rorb
xchg
popa
lea
aaa
adc
dec
insb
push
fwait
scas
add
rol
pop
pop
aas
pop
call
and
mov
inc
cmp
xchg
or
or
mov
lcall
mov
add
imul
lret
and
mov
push
imul
ljmp
push
mov
adc
imul
push
mov
fs
call
popf
push
loope
sbb
imull
das
cmp
rcl
xchg
lods
mov
cmc
loop
push
call
lahf
mov
push
push
push
jle
hlt
adc
mov
inc
mov
pop
das
fisttpll
ljmp
movsb
pop
fsubs
mov
xchg
or
outsb
sub
mov
subps
loop
insb
std
test
insl
pop
cmp
sub
push
repnz
jns
dec
cmp
xchg
cmp
adc
add
mov
mov
cmp
ficomps
pushf
pop
cmp
add
cld
je
pop
mov
pop
enter
loopne
dec
outsb
outsb
outsl
inc
fs
cld
stos
inc
pop
push
push
inc
push
dec
inc
pop
adc
dec
adc
and
add
mov
add
daa
xchg
pop
push
xor
movsb
and
adc
jecxz
in
xor
cmpsl
cltd
int3
sub
sahf
out
sahf
mov
add
out
lea
push
jl
popf
data16
call
out
xor
lcall
out
push
xchg
loopne
pop
and
sahf
pusha
xchg
in
insb
dec
cltd
cmp
idivl
pushf
push
cmp
hlt
dec
outsb
iret
repz
dec
dec
dec
test
inc
add
lods
scas
jne
and
mov
add
cmp
xor
xor
and
movsl
sub
add
js
and
xor
pop
faddl
adc
outsl
fs
add
xchg
push
rorb
rcr
inc
ss
cmp
sub
xor
es
fwait
pop
shlb
fcoms
sarb
cmp
flds
rcrb
bound
xchg
stos
jns
out
aam
lock
repz
repz
and
inc
pop
iret
repz
push
mov
repz
aam
repnz
mov
out
adc
sub
out
punpckldq
sahf
out
js
xchg
ds
repz
cli
push
aad
out
sahf
testl
jo
sahf
out
sahf
mov
cmp
out
lock
or
sbb
repz
repz
data16
iret
repz
cmpsb
mov
sahf
out
lcall
jns
out
adcb
sahf
out
loop
add
push
fdiv
mov
inc
push
push
iretw
repz
adcb
mul
cmp
xor
jo
inc
incl
add
jmp
insl
dec
pop
xchg
cs
pop
add
das
insl
mov
dec
cmp
add
imul
popf
ficompl
int3
lret
mov
shlb
aaa
pop
xor
cs
cmc
rcr
push
outsl
cmpsl
loopne
or
lods
push
insb
jae
or
xor
data16
fs
inc
ret
jne
cmpl
adc
pop
sbb
adcl
inc
mov
out
outsb
add
push
loopne
fdivs
inc
push
dec
inc
xor
test
outsb
ja
push
push
mov
inc
pop
outsb
fldl
rcl
fcoml
pop
pop
inc
add
test
jns
adcl
pushf
pusha
rorl
out
shrb
add
inc
inc
fwait
xchg
data16
mov
sbb
nop
add
cld
push
cmpsl
or
dec
pop
add
divb
je
mov
or
cs
pop
addr16
jbe
xchg
mov
lret
and
pop
mov
inc
daa
dec
fadd
sub
pop
and
test
sbb
shl
iret
cmp
jne
das
push
mov
outsl
pop
fidivl
pop
mov
ret
mov
add
push
mov
inc
das
pushf
jo
cmp
lret
or
inc
xor
clc
jo
hlt
arpl
inc
dec
outsl
cmpsl
jne
or
jae
sub
fisubrl
push
popa
fs
push
bound
ja
jae
inc
inc
push
dec
adcb
add
addr16
mov
push
fisubrs
ja
test
repnz
mov
pop
ss
xor
dec
cmpsb
push
popa
xor
add
daa
aaa
adc
or
sub
test
add
jo
imul
gs
pop
inc
out
shlb
sub
and
add
mov
je
dec
addb
imul
inc
inc
push
fildll
inc
gs
jg
inc
push
fcomp
cmpsb
jecxz
and
stos
push
insl
rolb
xchg
ljmp
push
push
stos
jg
mov
pusha
add
daa
add
or
adc
mov
inc
fidivl
call
jg
arpl
imul
ja
out
xchg
mov
xlat
imul
add
inc
sbbb
sub
cmp
rolb
insb
lret
sub
add
and
sub
sub
pop
xlat
or
mov
xlat
xchg
xor
dec
add
add
inc
loopne
push
or
ds
adc
mov
fcomps
cmp
repz
addb
jo
iret
repz
mov
enter
and
cmp
jg
scas
repz
adc
addb
sub
ror
pop
bswap
cs
push
sahf
out
sahf
mov
mov
mov
jns
call
dec
in
lea
subb
out
or
movsl
jbe
add
xor
xor
mov
pusha
cltd
das
sbbl
push
jb
das
das
and
enter
add
loopne
xchg
pop
enter
or
lcall
xchg
clc
mov
push
pop
insb
dec
mov
adc
push
add
fwait
xchg
int3
sbb
or
and
push
push
xlat
ficoms
add
push
dec
lcall
and
enter
leave
out
sub
inc
push
xchg
push
cwtl
and
adc
sbb
stc
rolb
xchg
add
add
adc
into
push
pop
jo
repnz
out
push
decl
mov
repz
jg
mov
mov
jnp
filds
xorb
fadds
ja
mov
cmpb
js
jo
cmp
mov
and
movsb
pop
decl
add
jb
push
jle
dec
stos
stos
scas
jg
jo
pop
pop
cmovp
pop
repnz
pop
add
sub
fmulp
adc
push
lock
in
xchg
and
dec
jmp
adc
loopne
add
inc
ds
push
dec
ss
add
add
fwait
int
add
add
add
and
sub
fldcw
add
inc
add
call
jl
push
push
add
add
fldt
out
movb
out
lods
test
iret
jnp
cmp
cltd
in
xor
cwtd
repz
dec
data16
cmp
data16
cltd
cltd
cmp
popf
out
cltd
cltd
cs
int3
out
mov
js
idivl
push
cltd
int3
jmp
jns
sub
xor
sahf
out
pop
sub
data16
ja
push
cs
cltd
cltd
out
pop
out
jns
int3
int3
cmp
ja
int3
int3
daa
jmp
fldl
add
push
cwtl
cmpsl
push
data16
xor
xchg
cmp
xor
or
ss
out
data16
data16
out
data16
jns
es
int3
jns
fnstsw
jns
jmp
int3
jo
in
loop
into
push
add
sub
xor
jns
cmpsl
push
jmp
data16
data16
jns
xor
cltd
cltd
cltd
jnp
sub
cltd
and
ljmp
dec
addr16
int3
dec
das
cltd
ljmp
loop
pushl
add
mov
and
cltd
cmpsb
pusha
mov
repz
data16
push
fcomi
cmp
cwtd
int3
decl
insb
cmp
repz
int3
int3
int3
xor
int3
ljmp
incl
addr16
daa
or
jo
cmp
repz
push
cmp
repz
dec
iret
repz
cmp
repz
dec
repz
xchg
pushl
sub
cmpsl
ds
mov
add
ss
int
xchg
xchg
add
add
mov
add
add
add
add
add
popl
push
sbb
xchg
cmp
test
push
pop
in
pop
mov
pop
cli
pop
in
pop
pop
cli
pop
pop
popa
mov
das
pop
add
sti
sti
push
aas
popf
daa
fnstenv
pop
in
sti
dec
addr16
push
pop
mov
add
in
in
fbstp
outsb
add
cmc
pushf
add
in
dec
in
imul
outsl
push
outsl
jp
xor
cmp
in
outsb
jae
cltd
pop
inc
push
and
and
and
dec
add
lock
aad
lret
add
iret
and
jb
and
inc
addb
pop
mov
mov
fstl
jns
clc
lock
mov
cltd
adc
jo
xchg
std
fnstcw
enter
mov
xchg
js
mov
cwtl
mov
xchg
repnz
js
or
in
inc
cmp
mov
inc
aas
repnz
aas
js
mov
jnp
fwait
mov
outsb
push
jle
mov
aas
xchg
mov
fcomi
js
mov
mov
jo
popw
jns
pop
jge
pop
ja
maskmovq
notl
adc
or
clc
jo
ja
js
adc
mov
mov
or
lock
add
out
mull
jbe
pop
repnz
das
pop
sbbl
outsl
pop
stc
mov
pop
push
sti
mov
xor
mov
int
jae
pop
mov
pop
imul
ja
inc
pop
inc
pop
outsl
add
pop
add
outsb
sbb
ss
push
jo
pushf
mov
add
add
pusha
add
cmp
add
add
dec
push
clc
cld
incl
push
clc
push
add
add
pop
dec
lahf
addb
inc
inc
inc
add
in
mov
mov
xor
mov
sub
aas
xor
in
lds
pop
cmp
fnstsw
out
out
aas
cmp
rcr
mov
shlb
add
inc
jnp
out
ljmp
jg
inc
mov
jg,pt
push
mov
lock
jg
repnz
lods
xor
mov
nop
mov
out
add
cmp
jae
ds
push
lock
js
ds
cmp
jg
ds
loope
inc
mov
lahf
aas
add
jge
xchg
psadbw
cmpl
jmp
pop
in
and
aas
push
out
nop
pop
in
add
jmp
aas
add
gs
pop
insb
in
add
mov
or
outsl
jnp
add
xchg
adcl
flds
add
imull
pop
aas
inc
aas
sti
jp
xor
cltd
dec
aas
mov
ret
pop
inc
dec
sub
mov
inc
aas
add
insl
orb
arpl
mov
jp
aas
inc
aad
pop
bound
inc
sti
aas
xor
aas
add
add
add
push
popf
ss
bound
and
mov
ljmp
dec
or
test
gs
cmp
cmp
mov
rorb
aaa
inc
testl
push
inc
or
rcpps
cs
push
jg
js
push
sbb
jnp
sbb
dec
daa
cmpsb
pop
decl
push
pop
pop
mov
out
add
in
or
mov
mov
std
jbe
idivb
push
push
jnp
or
mov
pop
xchg
pop
sbb
pop
push
mov
mov
cmp
fst
fnstsw
mov
push
test
ja
fstpt
pop
rol
js
jbe
pop
loope
pop
xchg
aas
xchg
gs
or
notb
rcrl
hlt
push
shrb
pop
bound
aaa
arpl
fs
dec
cmp
out
addr16
dec
adc
dec
push
xchg
xor
arpl
aaa
call
jb
pop
add
mov
lcall
ret
nop
jl
add
xor
sbb
stos
sub
pop
or
push
shr
or
ds
add
fcmovnu
mov
adc
jns
mov
sub
outsb
pop
loopne
sub
xchg
pop
cmp
lahf
cwtl
fdivs
sbb
jecxz
stc
pop
mov
xchg
pop
sub
jp
pop
lds
push
js
or
dec
jae
in
int3
scas
bnd
add
dec
pop
jl
adc
xlat
fcoms
xchg
ljmp
testb
or
adc
insl
stc
or
das
add
or
push
xor
sarl
addr16
or
add
xor
mov
loop
pop
incb
aas
adc
adc
or
aas
ljmp
les
test
adc
lret
dec
js
jg
das
and
jge
pop
mov
pop
call
popa
arpl
das
dec
add
cld
sahf
mov
add
dec
jb
inc
add
sub
dec
jne
insb
aas
iret
mov
outsb
push
jo
dec
add
je
xchg
arpl
repz
jbe
arpl
pop
in
fsubrs
or
jb
add
mov
push
add
lock
daa
adc
or
out
mov
or
je
insl
mov
addb
sbb
das
outsl
pop
or
inc
rcll
and
push
sahf
xlat
fldl
push
push
gs
sbb
fdiv
or
and
pop
insl
movd
popa
push
outsl
outsl
push
jnp
in
jbe
sbb
xchg
or
fsubr
or
aas
dec
mov
iret
inc
and
jb
insb
push
je
int
xlat
jnp
sub
subb
lcall
jg
jg
or
mov
sar
lret
fldenv
out
or
mov
add
loop
sbb
pop
rolb
and
bound
fiaddl
sbb
clc
inc
das
and
inc
mov
xor
rcll
pop
or
lods
sbbb
lret
or
add
or
aas
pop
loopne
push
xor
add
icebp
out
mov
sbb
lret
sub
outsl
inc
ret
push
xor
idiv
fiadds
sahf
inc
add
inc
inc
lcall
mov
imul
jl
out
xor
outsb
and
out
jo
test
pop
xchg
inc
xchg
jns
popa
lahf
mov
fiaddl
adc
insb
push
clc
push
bound
or
inc
xchg
add
lea
jle
arpl
imul
inc
fcmovnb
pop
repnz
dec
add
cmpsl
jae
xchg
pop
pop
mov
dec
or
insb
sub
sahf
push
adc
jns
addr16
je
add
and
cmp
jo
mov
notl
jo
scas
aaa
dec
pop
test
leave
add
adc
jmp
and
cmp
mov
popa
movsl
and
aas
js
insb
and
add
and
xor
and
out
dec
test
cmp
lcall
jns
mov
cld
gs
aas
ds
insl
idivb
inc
cli
jl
jae
jne
outsb
cmp
push
xor
adc
insl
jbe,pn
mov
movsb
xchg
push
mov
mov
xlat
xchg
sbb
je
outsb
popa
insl
int3
dec
push
cs
js,pn
cltd
outsl
adc
add
or
loopne
js
and
xlat
int3
add
mov
ja
push
movsb
shr
and
les
enter
outsl
cmp
das
pop
arpl
jo
jb
jns
pusha
shrl
inc
cmp
jo
pusha
addr16
out
cs
or
subl
sub
mov
ss
addl
pushl
push
ss
out
mov
xor
arpl
xor
insb
aad
sub
scas
addb
das
jae
mov
outsb
inc
adc
sub
outsl
xor
orl
jne
sbb
icebp
andb
sub
dec
mov
loope
cltd
dec
mov
ror
xor
rorb
pop
add
xor
cmpsb
xor
pusha
fiaddl
cmp
das
sti
das
push
pop
mov
call
inc
xor
mov
rcl
xchg
xchg
xchg
fidivs
jo
das
das
lea
cs
push
dec
push
sub
decl
xor
xor
gs
mov
into
cltd
push
shrl
adc
mov
popa
sbb
push
rorl
add
xchg
incl
loope
adc
jo
push
and
shll
xchg
jnp
dec
xor
aaa
sub
sbb
dec
ljmp
sub
js
push
jg
xchg
add
xor
jge
jae
xor
ss
std
cld
cmp
xor
fs
lcall
cmp
xor
xor
mov
das
inc
cmp
or
or
jp
bound
pop
xchg
jg
mov
hlt
add
cmp
icebp
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
incl
jg
mov
xchg
mov
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
adc
xchg
xchg
call
push
pop
mov
outsl
fucomp
in
clc
incl
inc
adc
inc
dec
dec
xchg
lret
xor
scas
jno
or
stos
jnp
jae
mov
add
dec
xor
dec
dec
call
or
lods
lods
dec
les
or
je
outsl
out
daa
xchg
jo
divl
int
rcrb
cmp
lods
lret
push
es
fistps
dec
aad
jl
rolb
push
loop
add
jl
rolb
pushl
cmp
mov
andl
dec
call
mov
add
out
pop
lcall
sbb
repnz
jmp
out
cmp
ljmp
mov
and
movl
clc
mov
aaa
and
mov
xor
push
adc
leave
xchg
xchg
inc
jge
sbb
aas
push
mov
out
jbe
insb
pop
lret
pop
scas
clc
pushl
lds
cmp
lcall
rclb
mov
out
movsb
ret
inc
imul
sub
push
sub
sub
mov
in
pop
adc
add
clc
dec
roll
loope
xor
mov
rorl
xor
mov
lahf
in
fs
call
or
outsb
fwait
mov
pop
fsubs
xchg
or
xchg
or
repz
cmovbe
les
cmc
adc
lret
inc
xor
pushf
dec
mov
sbb
mov
push
call
jge
clc
xor
sbb
mov
pop
ja
adc
cmp
mov
decl
xor
subb
data16
es
insl
into
mov
dec
fmul
out
cwtl
sarl
cwtl
test
hlt
imul
ja
int
adc
mov
mov
push
xchg
pop
sqrtps
fstps
clc
push
pushl
mov
push
mov
push
lds
mov
mov
inc
cmpsl
mov
incl
lds
inc
pop
xchg
xlat
push
andl
sahf
test
test
ds
aam
popa
adcl
sbb
incl
adc
cld
loope
pop
xchg
sub
cmp
jle
imull
loopne
push
push
cmp
jecxz
out
dec
xor
or
popa
mov
adc
mov
rol
dec
int
ret
call
rorl
or
das
sub
stc
outsl
nop
pushf
and
stc
adc
out
loop
cwtl
mov
out
mov
mov
icebp
fwait
mov
xchg
pushl
xlat
into
int
jge
rorl
push
inc
jmp
lds
lret
mov
hlt
sbb
in
sub
in
mov
das
push
fisubl
ljmp
jge
mov
mov
ljmp
movsb
dec
xchg
xor
push
dec
enter
data16
pop
pop
jg
clc
mov
sbb
in
jmp
mov
jno
add
and
icebp
adc
aaa
cld
jmp
inc
pop
jne
ret
in
clc
cs
pop
push
les
pushl
std
xchg
mov
mov
sub
int3
mov
cmp
lock
iret
xor
push
or
int3
xor
sbb
ljmp
push
pushl
xor
jns
xor
jge
and
testb
test
xor
fwait
pushl
cmp
enter
ret
test
js
lcall
dec
lahf
dec
jecxz
incl
lret
inc
aaa
mov
xchg
leave
mov
mov
cmp
mov
push
and
ljmp
dec
mov
out
mov
xchg
lret
and
sub
jmp
dec
lds
call
addr16
bound
jmp
negl
add
dec
push
outsl
push
add
enter
mov
or
outsl
scas
popa
ljmp
pop
outsl
lahf
sbb
clc
xchg
mov
incl
mov
leave
cmpsl
dec
mov
pop
pop
out
add
aam
jg
jmp
lods
jmp
lret
mov
xor
sbb
dec
jecxz
imul
pushl
daa
or
out
shrb
cli
out
insb
jmp
arpl
jmp
clc
mov
sarl
repnz
xor
cmp
rclb
jmp
pop
repz
addl
pop
jno
and
outsb
ret
sub
inc
les
int
and
cmp
insb
sub
pop
xor
push
inc
gs
in
imul
pop
jecxz
jg,pn
call
fsubs
shlb
or
sbb
inc
vcvttps2dq
xchg
jb
add
push
sbb
pop
jbe
jno
lret
sub
and
jl
sbb
add
add
pusha
or
incl
rcr
pop
inc
and
mov
pop
cli
pop
scas
test
xor
dec
bound
cmp
call
push
movsl
fiadds
or
sub
cmp
into
mov
test
sbb
iret
pop
mov
mov
sti
adc
fldenv
fwait
or
les
adc
mov
mov
xor
std
idiv
ljmp
mov
xorl
std
daa
xor
mov
test
jb
sbb
hlt
push
lcall
aaa
fisubrs
inc
pop
fs
cmp
push
ljmp
es
push
or
push
daa
mov
mov
int
cltd
push
xchg
xor
adc
ret
mov
fwait
xchg
xchg
jnp
out
and
cmp
jp
lret
adc
fcomip
or
int
aaa
sbb
les
jmp
pusha
mov
testl
daa
jae
pop
mov
iret
or
fucompp
cmp
sub
js
pushf
jae
jg
and
jl
cmp
pop
xorb
or
push
jns
jno
arpl
outsl
dec
lea
xlat
ss
sbb
sbb
mov
mov
call
push
cmp
cmc
popa
push
out
les
xor
mov
mov
jmp
lcall
mov
loop
out
push
jg
fs
addb
mulb
stos
out
into
dec
fbstp
dec
outsl
orl
pushf
xlat
jns
sub
test
cmp
decl
add
cltd
out
aas
push
fcmovb
stos
xor
fldl
negb
jae
pushl
out
mov
lods
adc
pop
xorl
dec
push
jl
pop
cld
lds
cld
test
pop
clc
add
jmp
push
pop
shlb
mov
imul
cmp
scas
jo
fldcw
lret
movl
cmp
lock
and
out
faddl
xchg
inc
or
cltd
mov
call
ljmp
mov
das
xchg
and
jg
or
notb
mov
and
lret
push
xchg
divb
jp,pn
or
in
out
nop
add
pushl
adc
jbe
fnstcw
mov
mov
cld
ffreep
enter
mov
inc
lahf
scas
jo
or
jno
dec
add
call
and
movsl
mov
loop
shll
jbe
in
add
arpl
sar
jmp
sub
shlb
sbb
push
mov
bound
inc
and
incl
add
ds
dec
loopne
jae
test
aam
jmp
mov
nop
push
dec
jmp
loopne
sub
sbb
jo
push
addr16
test
decl
pop
jl
sarb
mov
mov
es
pusha
fld
cmpsl
mov
xor
xor
sub
addb
xor
inc
add
jl
sub
mov
decl
jne
sbb
stos
mov
std
imul
mov
sub
sbb
cltd
adc
sbb
out
in
test
fistl
pop
jnp
mov
jmp
data16
hlt
decl
push
ret
xor
out
or
insl
xor
insl
lea
mov
lcall
pop
push
sar
and
or
pop
mov
cmpsl
shll
sbb
sub
ljmp
call
mov
stos
push
popf
in
xor
sbbl
pop
imul
inc
push
mov
jp
sti
jmp
sub
ret
sahf
std
jbe
lods
push
mov
lock
aas
aaa
push
repz
enter
sbb
leave
dec
loopne
incl
insb
fdivrs
xchg
inc
int
mov
scas
mov
fildll
insl
les
enter
call
pusha
gs
mov
divb
aaa
xor
cli
stos
fnstsw
rcl
ljmp
call
mov
out
mov
mov
add
push
adc
incl
jae
and
outsb
jnp
popa
js
lahf
aas
movsb
adc
inc
lret
bswap
lock
scas
add
pop
inc
popa
sbbb
aad
test
pop
shl
call
mov
push
bound
cli
das
push
mov
and
negb
aas
lcall
lods
add
adcb
aam
push
adc
pop
push
pop
mov
scas
inc
inc
sarb
dec
add
pop
cmpsb
cmc
into
cmp
mov
xchg
movsl
fists
test
or
pushl
jmp
lods
push
sbb
addr16
aas
popa
jle
jbe
adc
mov
dec
sar
call
add
ret
xlat
fstpl
popa
adc
jmp
and
les
pop
std
cmp
ljmp
clc
xor
sbb
adc
jno
sti
fdivl
ds
and
bound
stos
out
fwait
inc
xor
pop
std
insb
dec
pusha
andl
xor
mov
sbb
loopne
mov
inc
ljmp
and
fwait
pop
adc
ds
mov
js
add
ljmp
pop
dec
xchg
out
rcll
cmpsb
cli
pushf
jle
test
cmp
fs
fwait
xchg
es
lcall
incl
in
inc
ljmp
std
loope
pop
dec
ss
call
xlat
std
mov
lds
mov
xchg
popa
mov
push
test
imul
out
lods
pop
xchg
ja
and
xor
xchg
xchg
out
mov
jo
jb
jg
push
nop
mov
sub
push
jno
lds
std
sbb
scas
sub
sar
ljmp
decl
xchg
mov
aam
sub
sub
cmp
popa
push
xchg
incl
into
lret
stc
data16
push
mov
imul
dec
pushf
mov
and
sub
add
roll
and
adc
loopne
mov
decl
mov
call
sbb
daa
push
mov
daa
sub
test
stos
into
mov
std
call
mov
jge
insl
fs
pop
xor
fists
xor
jg
inc
mov
out
loopne
scas
add
inc
mov
jmp
fs
inc
dec
jno
jns
sub
ss
aam
jmp
outsl
sub
sbb
inc
iret
repz
andl
loope
xlat
sbb
incl
ja
jno
pusha
ja
adc
or
add
add
loop
mov
inc
and
mov
dec
xor
imul
dec
jo
inc
xchg
add
push
xor
decl
mov
fdivl
inc
adc
insb
inc
sub
sbb
call
pop
lock
push
std
mov
shrl
or
cs
decl
outsb
xchg
out
sbb
mov
mov
fcompl
fwait
out
xchg
xchg
xchg
add
pop
sbb
xor
popf
add
xchg
test
cmc
dec
add
jmp
mov
add
call
rolb
lea
fcmovnbe
outsl
mov
aam
mov
aam
out
shll
jmp
or
es
cli
ja
cmp
repz
lahf
es
shll
call
sub
gs
pop
out
inc
pop
icebp
mov
adc
mov
adc
test
ljmp
popf
out
aaa
andl
sbb
push
mov
cltd
stos
pop
das
push
stos
les
or
outsb
mov
xor
mov
test
sbb
add
imul
stos
dec
push
lock
inc
decl
xchg
mov
lcall
pop
pusha
clc
or
hlt
add
push
in
test
mov
ret
pop
sti
lcall
fiaddl
dec
cmp
mov
ljmp
jecxz
xorl
stos
loop
mov
inc
mov
shrl
cwtl
mov
xchg
call
mov
into
push
loopne
and
loopne
aaa
mov
xor
jb
ljmp
push
jg
ljmp
add
mov
int3
sub
je
push
push
divl
sbb
dec
jne
or
adc
mov
xchg
fs
dec
inc
ljmp
mov
dec
stos
lret
test
mov
cmp
popf
lds
ljmp
lods
mov
pop
mov
push
jb
add
inc
outsb
movsb
inc
mov
cmp
pushl
xchg
or
subb
xor
pop
sub
mov
dec
aas
mov
push
cmpsb
mov
inc
pop
xchg
adc
lds
fcoms
fistpll
push
mov
arpl
outsl
mov
inc
lahf
decl
and
out
push
push
sbb
push
mov
cmc
aas
in
push
adcb
cltd
mov
dec
shlb
clc
cmpb
cmp
nop
int3
or
xchg
in
call
xlat
subb
push
mov
mov
pushf
dec
sbb
pcmpgtw
sahf
call
aad
stos
add
es
fmull
hlt
jnp
aaa
push
cmpsl
test
mov
decl
scas
test
inc
cmp
pop
fcompl
and
adc
ret
xor
loop
cmc
jne
cli
das
cli
ljmp
inc
cltd
xor
sar
psrld
sbb
adc
mov
aaa
lods
pop
lods
mov
insb
or
and
movsl
lods
dec
push
pop
hlt
jmp
inc
mov
stc
jbe
add
xlat
sarl
mov
decl
in
cs
xchg
push
xor
adc
rcrl
mov
call
mov
sbb
mov
dec
sbb
sbb
icebp
jl
decl
ret
shrl
inc
jae
mov
loope
mov
mov
cwtl
test
js
loope
dec
jmp
and
xor
cli
outsl
ljmp
jmp
push
dec
push
ljmp
pop
fbld
rcl
sbb
ret
mov
sbb
fstpt
jmp
add
pop
insl
nop
aam
mov
rorb
movsl
or
decl
rcrl
xchg
jns
xlat
lods
cwtl
divb
cld
sub
sbb
call
sbb
jmp
fmull
test
jae
add
xchg
sub
inc
xchg
fdivs
pusha
les
stos
rolb
ljmp
jp
mov
pop
push
dec
or
or
bound
dec
mov
xor
fdivrp
pushl
repnz
popa
mov
mov
adc
in
adcb
xor
mov
push
popf
das
fwait
in
imul
movhps
push
inc
incl
jbe
push
and
js
jb
cmpsb
call
sub
in
sbb
call
rclb
mov
cmc
andl
jo
cmp
mov
test
lea
adc
incl
or
insl
jbe
sbb
and
in
popa
ja
xor
rcll
cld
jecxz
daa
mov
pop
mov
mov
clc
add
lahf
outsl
inc
jmp
dec
cmp
fldt
pop
pop
test
movsb
repnz
rcr
sub
sbb
adc
stc
jl
mov
fadd
lock
mov
cmp
xchg
jmp
add
pushl
cmp
aaa
xor
cmpsl
inc
xchg
push
out
ret
jl
adc
mov
bound
dec
sahf
ljmp
les
mov
insl
mov
sbb
mov
lods
sub
incl
cs
add
pushf
in
add
xor
push
fnstcw
es
push
pop
xchg
icebp
ret
outsb
popa
scas
jg
add
push
push
inc
mov
fsubrs
lcall
movsl
adc
push
cmp
outsl
jo
iret
pop
sti
mov
mov
mov
add
ljmp
xchg
sub
jecxz
jecxz
jbe
jne
or
out
mov
push
scas
push
ja
sbb
ret
cmc
fwait
popa
jne
pop
scas
out
in
jne
adc
xor
jl
arpl
pop
gs
pop
ja
fsubl
cmpsl
jp
repz
nop
dec
arpl
je
out
add
mov
jae
fists
xor
and
aaa
mov
xchg
mov
pop
leave
inc
mov
out
dec
jmp
add
or
popa
and
ja
sbb
dec
inc
movsb
push
rol
pop
pushl
or
pop
push
and
in
inc
jp
cmc
inc
add
fdivl
rorb
jmp
rcrl
mov
fs
add
imul
sahf
mov
cmp
popf
cmc
test
jmp
fimull
movsb
mov
incl
in
test
inc
ror
or
push
cs
incl
dec
insb
lcall
pushf
mov
or
ret
sub
lret
mov
sbb
adc
call
jmp
mov
dec
jae
lret
aaa
adc
and
and
inc
insb
stc
andb
pop
cmpsl
jge
decl
xlat
inc
hlt
out
sarb
jae
inc
xchg
ret
adc
aaa
in
cmpsb
inc
testb
jmp
hlt
bound
sti
and
imul
xchg
sbb
lods
sbb
dec
pushl
inc
mov
test
xor
mov
andl
jnp
pushl
nop
pop
dec
in
test
sbb
xchg
int
jp
or
shl
pop
push
mov
or
adc
mov
pushf
hlt
adc
call
pop
std
inc
jne
mov
mov
sti
xchg
loopne
and
es
out
flds
ret
and
pushl
add
push
fimuls
lcall
mov
xlat
jge
add
push
pop
add
stc
addl
ret
sub
mov
imul
ja
clc
pcmpeqd
xchg
sbb
shlb
push
xchg
mov
insl
loope
inc
xchg
shrl
cmpsb
jmp
ja,pt
mov
ja
repz
push
inc
jle
dec
jb
popf
adc
jmp
dec
jl
fstpl
inc
lods
dec
mov
fidivrs
sbb
hlt
shlb
cmc
jbe
push
or
pushl
cli
push
pop
jnp
rcrl
mov
movsl
xlat
std
push
pop
inc
sub
pop
nop
ss
test
jp
sahf
mov
jl
loopne
fmul
push
shlb
fidivl
push
iret
jbe
fdivr
call
cld
push
xchg
aad
sub
xor
pop
rcrb
push
rcrb
cltd
dec
aam
sub
call
sti
lea
xor
cwtl
dec
mov
imul
ja
call
jge
xor
push
cwtl
pop
mov
icebp
pusha
outsl
js
lods
cmp
xchg
xchg
sbb
out
lods
lods
or
dec
adc
dec
mov
enter
add
outsb
or
adc
call
cli
test
call
cltd
jne
and
int
es
ljmp
sub
std
rcl
sbb
movsl
sarb
je
pushl
jle
mov
xor
jnp
insb
push
adc
insl
out
and
cmp
imul
les
sbb
ret
fwait
loopne
dec
nop
repnz
or
jo
scas
insb
cmp
xor
jmp
xchg
mulb
inc
aaa
adc
jp
push
mov
test
pop
xchg
bound
out
pushl
dec
jb
push
cmp
xchg
cmp
mov
mulb
jmp
mov
cmp
insb
dec
dec
sub
mull
mov
shrl
mov
jmp
mov
sub
xchg
jb
or
rorb
leave
gs
inc
cli
ljmp
xor
push
int3
nop
repz
out
scas
xor
jns
ljmp
in
loope
inc
xchg
gs
lds
mov
dec
xchg
sarb
inc
push
inc
nop
and
lea
cs
out
sub
push
mov
pop
loope
lahf
sub
call
push
roll
jnp
inc
data16
mov
dec
mov
icebp
cltd
rclb
and
stos
je
lds
jns
divl
dec
jmp
roll
test
jmp
imul
xor
pop
cld
mov
push
xchg
aas
add
sub
push
data16
rorb
clc
lcall
push
push
mov
ss
or
movsl
data16
mov
sbb
shl
inc
cmpsb
scas
jmp
adc
mov
pop
sub
lods
inc
mov
cmpsl
pop
lods
cmpl
xchg
mov
outsl
mov
iret
stos
es
xchg
add
cmpsl
fcomip
call
pop
rcll
ret
cmpsb
cmp
push
inc
mov
mov
outsl
and
push
rcrb
push
loope
jl
dec
jne
cmpsl
pop
sbb
jmp
lds
jo
mov
outsl
push
mov
lcall
mov
adc
stc
popa
push
and
pop
lods
iret
fmulp
inc
add
sbb
iret
call
frstor
mov
mov
xchg
fsubrl
scas
jae
dec
xchg
inc
fsubrl
lcall
sub
dec
cmp
pop
sbb
ljmp
and
dec
adc
cli
or
push
sub
inc
mov
fidivs
or
ja
jle
fisubl
lahf
pop
push
xor
cmp
in
rol
adc
push
dec
mov
je
in
cmc
out
lds
scas
imul
call
movsl
jae
scas
mov
and
jns
leave
sti
adc
cmp
arpl
sub
aam
repz
decl
sub
imulb
mov
adcl
jmp
jno
push
add
pop
jno
out
call
mov
xchg
je
and
nop
xor
mov
xorl
jmp
test
out
aad
inc
xlat
test
loope
mov
jne
arpl
pop
jns
push
or
pop
pusha
sub
pop
cmpl
jg
ror
ljmp
xor
cwtl
adc
dec
or
mov
adc
jmp
dec
in
out
jge
push
into
in
jns
jmp
popf
fs
xchg
cs
inc
stos
inc
xchg
sub
inc
and
add
aaa
leave
inc
push
dec
mov
or
dec
cmpsb
pop
movq
mov
aas
loop
mov
stc
mov
adc
jmp
pop
and
dec
and
inc
add
lcall
repnz
call
inc
lds
adc
mov
js
mov
lea
movsl
iret
or
test
mov
mov
xchg
mov
mov
incl
repnz
dec
test
and
jmp
cltd
into
mov
xchg
jge
cmp
std
das
addr16
cmp
jecxz
movsl
loope
fcomi
insb
add
pushf
std
ret
test
aas
adc
mov
nop
xchg
rcrb
add
inc
repnz
in
pop
mov
out
subl
pop
fsub
jmp
push
and
movsbl
dec
xchg
xor
mov
pop
icebp
pushl
jge
pop
cmp
or
or
loop
push
out
lret
pop
popf
pop
decl
test
adc
mov
push
jmp
inc
sub
aaa
jns
cmc
inc
jne
data16
sahf
jecxz
std
jne
xchg
cld
in
les
jl
cld
sahf
mov
or
or
ss
xor
push
sub
jge
xchg
jg
xor
test
sbb
dec
or
data16
imul
call
adc
mov
leave
pop
loop
cmp
adc
dec
hlt
add
incl
cld
jecxz
fnstcw
mov
push
sub
add
push
lock
push
sti
call
call
cmc
rcll
push
lahf
popa
imul
std
dec
push
fsubrl
testb
ljmp
fildl
inc
les
and
mov
outsl
xchg
mov
pop
scas
push
enter
insl
fsts
jno
jno
sbb
cmpl
out
push
add
lret
cmp
jmp
jmp
out
cs
rcrb
int
or
sub
lock
stc
jmp
lock
sub
test
mov
call
out
add
cld
pop
xor
push
and
pop
add
sahf
sub
and
push
xor
mov
fimuls
call
mov
lock
nop
insl
out
add
sub
ljmp
into
mov
sub
inc
jmp
inc
adc
push
or
jg
pop
mov
or
decl
jns
lods
neg
decb
sahf
out
and
dec
scas
test
bound
fidivl
sub
mov
pushf
mov
lock
jmp
stos
pushl
cld
pinsrw
push
clc
subb
jecxz
add
mov
sbb
xor
in
cmpsl
sub
mov
sbb
mov
call
outsl
ret
ja
ljmp
and
jle
in
rcrb
std
notb
arpl
lcall
mov
fs
adc
sub
mov
inc
mov
mov
loopne
and
push
lock
mov
or
mov
jge
movsl
jg,pn
sub
mov
mov
stos
data16
xor
add
and
cmpsl
dec
mov
call
and
cmc
inc
ret
dec
inc
das
jecxz
mov
jbe
push
loopne
jmp
repz
jg
ljmp
int
test
or
inc
lret
out
negb
fistps
ljmp
push
mov
push
lahf
add
ja
arpl
pop
jno
outsb
inc
lret
adc
lcall
mov
inc
add
push
and
lret
sub
repnz
fs
insl
push
decl
lods
in
scas
sub
lds
inc
pop
popa
jl
hlt
sub
ret
lods
or
pop
mov
ljmp
cmp
sub
xor
sbb
dec
mov
lods
daa
mov
cmp
nop
jbe
push
adc
xchg
movsb
jbe
lods
jb
ja
pop
loopne
cmpsl
addb
xor
cmpsl
mov
adc
jp
xchg
and
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
incl
or
js
pop
notl
add
and
sbb
push
mov
std
incl
enter
scas
mov
sbb
mov
rorb
loop
les
push
std
aaa
data16
je
inc
sub
sub
test
ss
mov
decl
pusha
add
jp
mov
pop
mov
ffreep
pop
call
shlb
call
push
ficoms
mov
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
std
jp
dec
push
hlt
rcl
in
jno
fldenv
lahf
mov
jno
push
roll
div
mov
lods
mov
sub
ficoms
push
dec
outsl
cmp
xorl
lock
mov
jnp
push
gs
pop
inc
xchg
fcomip
push
ret
mov
in
popa
incl
push
jbe
imul
sub
cld
fdivrs
xor
mov
hlt
mov
push
out
ja
pushl
out
jo
adc
cltd
jp
aad
mov
cltd
scas
out
ja
mov
jmp
cmp
adc
mov
sub
cmp
in
lcall
jg
jo
pusha
adc
sbb
mov
rcll
test
fildl
jmp
lcall
mov
jp
cltd
sbbb
add
jl
rol
sysexit
sbb
cmp
pop
dec
test
xor
mov
cltd
inc
mov
push
std
pushl
dec
sar
notl
dec
mov
hlt
fimull
cmp
sbb
decl
mov
inc
test
pop
fsubs
inc
jns
sbb
xor
call
sahf
adc
outsb
push
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
decl
add
pushf
jecxz
push
or
cmp
xchg
mov
sub
xor
cmp
xchg
ljmp
insl
inc
sbb
stc
fldcw
pop
popa
mov
cmp
lods
rolb
pushl
mov
hlt
repnz
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
ljmp
gs
and
push
call
lock
dec
mov
stos
fldcw
bnd
push
cmp
cmpsl
repnz
lea
adc
xchg
shr
clc
lcall
or
xor
push
xchg
imul
imul
repnz
mov
outsl
mov
xchg
push
in
popf
scas
sbb
add
dec
and
mov
addl
pop
decl
clc
jb
mov
xor
pushf
push
ret
sbbl
mov
incl
cmp
and
out
les
nop
inc
mov
xchg
pop
not
pop
cmc
decl
fiaddl
mov
rcll
inc
imul
cs
repnz
pushl
lods
inc
cmp
push
imul
inc
jl
hlt
pushf
push
inc
mov
jmp
mov
fidivs
es
aad
dec
pop
pop
scas
rolb
outsb
enter
sub
jmp
inc
pop
mov
pop
cmp
sub
jno
js
call
push
shll
sub
jo
stc
rorb
mov
test
cmp
sub
cmp
clc
jp
cmp
and
int3
lcall
pop
or
not
lock
add
lock
das
or
into
xchg
int3
iret
arpl
shrl
push
pop
adc
dec
dec
fsubl
xor
andl
push
lock
incl
dec
iret
sub
ds
cli
xchg
dec
jmp
inc
ds
fstpl
cmp
insl
or
aas
daa
lcall
push
fsubrp
rorb
push
clc
in
jmp
mov
mov
cmp
sub
data16
mov
js
stos
ljmp
pop
dec
repnz
ljmp
pushf
inc
add
xor
outsb
rorl
incl
arpl
xchg
add
and
stos
pushf
rorb
lods
mov
decl
lock
jp
nop
jo
dec
in
arpl
dec
mov
stos
inc
or
jmp
lcall
pop
in
sub
out
aad
jg
in
mov
push
add
xor
inc
pop
out
xchg
mov
fdivrl
add
out
sub
sub
fisubs
adc
lcall
ret
in
add
aaa
sub
stos
loop
inc
movsl
inc
push
cwtl
arpl
in
int3
repnz
decl
movsb
lods
sbb
fdivl
ret
icebp
cld
lock
jb
xchg
or
dec
bound
aam
incl
mov
pusha
and
outsb
imul
aas
add
cld
mov
loopne
loope
jae
inc
mov
les
hlt
call
fwait
js
in
or
inc
jne
iret
in
lods
decl
lret
dec
sbb
sti
pusha
test
stc
lock
sbb
test
mov
cltd
jmp
ljmp
inc
push
mov
add
iret
jge
rorb
or
xchg
decl
jg
sti
dec
push
movsb
testb
pop
sbb
jo
jmp
jnp
out
repz
adc
or
data16
imul
pop
add
out
cmp
dec
mov
push
or
ljmp
and
sahf
xchg
pop
fcmovu
outsb
ds
into
in
paddb
cs
and
push
ss
ljmp
cli
mov
or
xor
jae
mulb
push
mov
xchg
mov
push
call
cmc
inc
fdivrl
and
shll
push
js
incl
scas
mov
mov
pusha
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
ja
in
je
imul
orl
cld
loop
iret
jb
jne
mov
ljmp
pop
clc
aam
xor
jge
mov
ds
jle
int3
adc
js
ljmp
mov
call
sub
sbb
in
fiadds
pop
adc
jg
lret
hlt
sub
lock
lock
repnz
mov
std
sbbb
das
sar
mov
scas
andb
mov
test
mov
pop
xchg
push
js
push
xor
ljmp
xchg
mov
test
dec
pop
mov
int3
lcall
push
push
pop
cmp
sbb
nop
fdivr
cmpl
pmuludq
iret
out
cli
cli
lcall
pop
fcmove
ret
popa
lds
shll
fld
push
pop
leave
call
aad
sbb
outsb
cs
xor
inc
inc
das
insb
mov
std
mov
cli
xor
mov
mov
stos
mov
add
cs
adc
pop
into
jge
je
fildl
shrb
or
cmpsb
adc
dec
clc
cmpsb
sub
mov
incl
jmp
jne
sub
adc
sub
lds
cs
add
xchg
dec
pushl
add
imul
cmp
leave
fldz
pop
inc
ljmp
iret
out
test
lcall
repz
xor
xchg
imul
mov
mov
cmp
add
call
push
adc
idivl
sub
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
mov
inc
jbe
repz
jbe
xchg
xchg
mov
sbb
push
aam
or
dec
lock
cmp
lds
sub
in
pop
lds
enter
ret
sbb
jo
pop
ud0
inc
dec
int3
jno
and
test
mov
push
add
arpl
jmp
mov
mov
lock
scas
sub
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
and
repnz
xor
sarl
xchg
outsl
adc
lcall
bound
loope
mov
cwtl
add
fsubs
and
jp
mov
adc
in
test
dec
lock
jmp
gs
repnz
or
ja
in
mov
inc
mov
adc
pop
sbb
aam
xchg
cld
xor
ljmp
daa
mov
addl
ja
sub
sbb
lods
enter
testb
call
inc
call
mov
movsl
sbb
int3
fldenv
adc
fiaddl
jecxz
fidivl
xor
fdivrp
jno
jno
stos
xor
pop
adc
xchg
das
in
fwait
xchg
imul
orb
and
mov
sub
jg
out
jmp
or
aaa
fcompl
sbbb
sub
in
icebp
ljmp
sarb
pop
xor
jmp
lcall
add
addl
mov
inc
in
inc
sar
xchg
and
clc
xchg
aam
mov
out
xor
lcall
jge
mov
push
or
shrb
add
in
dec
cltd
das
mov
mov
cmpsl
inc
jbe
movsb
jl
orb
add
cmc
scas
cmp
jmp
addb
inc
pop
and
pushl
rorl
mov
mov
out
adc
mov
mov
or
jp
push
into
icebp
mov
mov
pushl
adc
mov
pop
aam
mov
js,pt
lods
add
in
or
mov
mov
out
mov
xchg
sub
mov
xchg
adc
stos
popf
pop
mov
dec
lock
ljmp
jmp
aad
bound
aad
mov
push
in
nop
add
dec
das
sub
mov
mov
sub
lret
mov
fwait
adc
enter
jmp
xchg
into
pop
cli
cmp
lods
adc
sbb
jg
iret
lds
push
add
ljmp
mov
adc
mov
sbb
dec
fdivrl
mov
push
outsb
add
incl
dec
sbb
sbb
sbb
hlt
adc
mov
mov
adc
xor
call
lret
out
cmp
js
das
mov
pop
fadds
pop
inc
push
sbb
or
mov
dec
xchg
dec
adcb
popl
add
xlat
pushl
sahf
sti
push
loope
cmp
push
out
cmpsl
out
fwait
cwtl
gs
cmpl
lcall
sub
add
dec
dec
or
test
orps
cld
decl
ss
and
mov
inc
mov
add
mov
jmp
nop
mov
call
addr16
xor
xor
pop
movl
into
or
inc
lea
outsl
add
fwait
and
add
ljmp
mov
shll
movsl
scas
arpl
xchg
pusha
scas
mov
mov
ljmp
ror
and
xchg
or
bound
std
inc
stc
adc
dec
jmp
xor
ud0
ljmp
cmp
in
les
mov
lods
out
popf
adc
icebp
scas
jg
pushf
mov
mov
jmp
stos
push
mov
mov
shll
xchg
das
test
mov
test
mov
sbb
lea
ljmp
pop
push
hlt
loop
or
fcos
pushl
lcall
sub
or
dec
fistl
push
nop
leave
call
mov
xor
jmp
push
add
cli
into
dec
mov
adcl
cmp
stos
enter
call
mov
lcall
add
inc
dec
xchg
orl
pop
dec
stos
lea
decl
jge
shlb
ljmp
std
test
lcall
sbb
movl
lret
lret
push
cmp
stos
push
sahf
sahf
add
mov
cmc
and
cwtl
adc
inc
pop
dec
jg
or
xor
jg
and
sbb
adc
push
addr16
cmc
mov
lock
enter
sbb
inc
aas
mov
fwait
and
enter
mov
lahf
push
xchg
leave
dec
or
ds
lock
jnp
mov
sahf
mov
daa
mov
or
mov
ja
add
xchg
pop
xchg
iret
daa
dec
mov
push
test
cmp
popf
sbb
add
lahf
jbe
lods
insl
dec
mov
lcall
fst
sub
fdivl
nop
bound
inc
or
mov
xchg
cwtl
cmp
push
and
mov
lcall
pop
xlat
xor
lods
in
and
leave
cmp
mov
push
adc
push
sub
sub
call
adc
shlb
cli
cld
cs
cltd
xchg
movsl
es
dec
clc
sub
sbb
into
scas
outsl
vsqrtpd
xchg
adc
lock
stos
daa
mov
lds
flds
stos
pop
xor
inc
das
jne
mov
movsl
cwtl
xor
das
dec
idiv
int
icebp
fistpll
ss
movsb
push
push
dec
inc
pushf
nop
out
jg
mov
push
and
push
in
test
adc
repz
out
shlb
ds
jge
decl
mov
cli
in
insb
pop
xchg
and
and
aaa
test
fmuls
call
cmpsl
sub
fdiv
dec
lcall
push
shr
fisttpl
ret
and
cld
mov
loopne
incl
lds
in
arpl
hlt
sbb
lcall
sub
cmpsb
lahf
jecxz
sbb
dec
test
jae
insb
jmp
decl
add
ja
cltd
pop
dec
xchg
outsl
mov
add
fnstsw
imul
or
loop
leave
loopne
xchg
in
es
inc
push
lods
sub
imul
mov
test
jge
inc
dec
mov
mov
fistpl
or
out
enter
popa
mov
push
fs
mov
jl
xchg
mov
cmp
cmp
jnp
in
test
jl
inc
lret
xchg
sti
out
push
xchg
in
adc
mov
sar
cli
jnp
cmpsl
dec
jl
mov
pushf
lds
cmp
shl
nop
push
add
and
mov
cld
lcall
aad
mov
js
cmp
lea
mov
ljmp
push
jge
or
jl
pushl
nop
cmp
in
mov
arpl
out
nop
cmpsb
pop
mov
jmp
shrb
pushf
push
push
jl
pop
scas
jle
jl
push
int3
pushf
pop
js
or
aam
or
cld
push
out
cmp
inc
sbb
jbe
sbb
mov
xor
ret
aad
sahf
movsl
cmp
repnz
pushl
sbb
cmp
ss
fmull
daa
mov
adc
lods
mov
into
inc
and
ror
loop
inc
scas
adc
push
mov
xchg
mov
jg
mov
jecxz
sti
push
out
sub
subb
pop
aam
or
outsl
mull
jecxz
cmp
movsb
in
enter
jmp
in
loope
sub
or
xchg
movsb
test
and
dec
decl
arpl
aaa
popa
inc
push
or
mov
cmp
mov
cmc
outsb
dec
icebp
dec
lret
daa
dec
lret
leave
jmp
repz
inc
es
or
fmul
add
adc
push
xor
or
das
imul
mov
add
scas
push
ljmp
hlt
aaa
and
repz
dec
pop
fcompl
sbb
popf
dec
xor
dec
push
mov
aaa
add
orb
lock
adc
scas
sbb
loop
dec
push
ds
dec
cmp
xor
xchg
cld
dec
mov
xchg
xor
xchg
jmp
icebp
push
push
mov
push
lret
cmp
negb
mul
fidivrs
inc
das
repnz
aaa
test
pop
xor
sub
or
pusha
adc
pop
repnz
pop
jno
push
mov
decl
sbb
dec
jno
push
push
ss
call
inc
movsb
xchg
mov
inc
cwtl
orl
xchg
dec
jg
jg
jg
inc
xchg
mov
push
push
mov
jno
push
out
xor
cli
adc
roll
push
jne
movsl
add
cmp
mov
mov
ljmp
bound
push
xchg
pop
and
xor
or
fdivrl
pop
pop
jmp
out
push
mov
sub
xchg
pusha
insb
pop
das
fcmovnu
ljmp
popf
mov
fnstcw
in
jb
faddp
sub
lods
movsb
mov
mov
arpl
iret
popf
push
pop
cmc
push
movl
push
dec
or
inc
xlat
jmp
pop
dec
push
fdiv
xchg
jno
adcb
pop
fiaddl
cwtl
jae
sub
jp
arpl
jg
add
and
xchg
and
mov
adc
enter
jmp
jmp
jmp
jb
pusha
enter
xchg
adc
mov
aaa
sbb
lds
popf
or
dec
xorb
in
cmp
xchg
mov
pop
pop
sbb
addr16
imul
outsl
dec
xchg
jno
mov
pop
loopne
enter
push
jecxz
or
and
leave
mov
stc
scas
decl
pop
cmp
test
outsb
xor
cmp
test
repz
cmpsb
xor
sub
decl
push
xor
out
xor
mov
sbb
imul
dec
mov
inc
mov
call
rclb
xchg
clc
js
call
test
int
bound
jg
call
loopne
in
xor
push
or
or
gs
in
stc
mov
xor
pop
decl
loop
dec
test
pusha
jecxz
dec
aam
sub
or
push
jmp
cmc
int
decl
xchg
jecxz
jns
adc
xor
mov
mov
cmpsb
sbb
mov
xor
or
mov
cmc
and
add
aad
popa
mov
incl
movsl
je
fidivrl
mov
mov
mov
ret
fldcw
lds
inc
dec
movsl
inc
xor
jmp
or
lret
pop
mov
xchg
jmp
loope
fs
dec
xchg
call
inc
pop
push
add
pop
scas
adc
mov
sub
std
pextrw
adc
fdivrp
pop
insl
mov
xchg
mov
mov
xchg
imull
pusha
idiv
pushl
mov
stos
push
aas
xor
push
mov
insl
and
dec
loope
movsb
add
pop
ret
cmp
pop
pushf
xor
dec
movsb
add
insb
rorl
movsl
sbb
mov
out
in
push
std
and
mov
dec
fcmovne
cli
jl
inc
mov
lcall
jp,pn
mov
and
push
mov
cmp
lock
dec
mov
jmp
cmpsl
push
cmp
adc
bound
pop
sti
cld
and
lret
addr16
jp
outsl
adc
pop
fdiv
roll
ja
int
sbb
ja
popf
push
jnp
mov
lret
push
psrad
in
mov
mov
div
mov
fistpl
js
in
sbb
loopne
insb
xor
cmp
mov
decl
je
dec
jle
xchg
xchg
fwait
test
push
fcmovnbe
outsl
iret
inc
out
cmp
sar
add
lock
movsb
jle
jne
mov
loop
es
fstps
decl
push
dec
and
sbb
rcll
dec
push
jg
jmp
inc
lock
stos
test
sbb
jmp
jno
popf
jge
shll
sahf
ds
incl
add
outsb
jnp
popa
lret
adc
lds
loop
xchg
shlb
sub
or
push
std
lret
xchg
movsb
psubw
clc
shlb
xchg
or
aas
dec
jae
ljmp
mov
fs
pop
jns
xchg
test
gs
popa
inc
jmp
cmpl
aaa
xlat
call
int3
sub
xchg
inc
xchg
andl
ljmp
js
xchg
mov
sub
fstl
sbb
ficoml
aad
out
dec
cwtl
cmp
push
or
jo
lods
js
mov
in
inc
pop
jmp
push
adc
pop
icebp
arpl
push
rorb
in
sbb
dec
jno
push
cmp
test
xchg
push
ljmp
pushl
pop
ficoms
push
add
xor
mov
out
cmpsb
test
addb
lret
xor
fnstsw
jno
jle
pop
adc
cwtl
mov
dec
push
out
sbb
mov
mov
incl
inc
fiaddl
jg
sub
insb
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
call
jmp
rcrl
jge
data16
pop
cmp
std
pusha
pop
adc
fs
jmp
cs
into
int
mov
vpinsrw
push
jmp
add
mov
lds
ja
test
add
pop
mov
or
inc
mov
inc
inc
mov
imul
loope
add
hlt
and
mov
add
sbb
enter
leave
test
icebp
arpl
or
pushl
inc
sub
mov
and
sub
mov
lahf
add
adc
sub
cmp
call
mov
push
mov
rorb
adc
mov
pop
xchg
pushl
scas
addr16
int
lahf
aad
ret
fidivl
xchg
dec
cmp
jno
cs
mov
ficomps
stos
add
xchg
roll
push
ja
dec
scas
mov
call
imul
lods
shll
in
les
adc
push
out
mov
in
and
sub
iret
movl
rolb
mov
fdiv
fwait
or
pushl
fiadds
es
pop
test
push
fs
push
jg
add
adc
cmp
dec
imul
jl
adc
jg
push
addr16
sbb
mov
xchg
cmc
call
cmp
jb
mov
popf
aam
loope
dec
mov
push
sub
inc
icebp
add
dec
cmp
filds
cmp
inc
in
pop
cmpsb
push
sete
xor
xchg
ljmp
mov
dec
fildll
decl
pop
jns
enter
inc
inc
ljmp
sbbb
inc
fsubl
push
fisubs
loopne
pop
popa
ftst
adcb
loop
fnstcw
into
mov
rcr
les
fstps
jmp
cmp
stos
getsec
jb
sub
movsl
mov
aad
pop
idivb
ljmp
ljmp
jnp
test
cwtl
push
pop
jnp
shlb
fildl
adc
cltd
arpl
popa
stos
jmp
lcall
mov
sbb
dec
mov
dec
mov
test
mov
pop
mov
cld
fwait
les
mov
mov
push
sti
cs
incl
mov
repnz
repz
pop
pop
ljmp
push
and
mov
mov
lahf
sub
inc
xchg
or
cli
adc
xor
mov
xchg
outsb
scas
hlt
faddl
xor
cwtl
cmp
cmc
mov
incl
xchg
not
push
or
rorl
in
mov
gs
inc
pop
pop
adc
sar
mov
outsl
loop
sti
cmpsl
inc
inc
mov
ret
cs
sbb
jmp
or
ljmp
pushl
push
sub
xor
lods
cwtl
push
in
inc
jbe
sbb
push
imul
mull
push
cmp
lcall
cmp
cld
lahf
xchg
xchg
lcall
test
mov
push
scas
push
mov
jl
mov
xchg
imul
sub
pop
in
loop
adc
test
ret
jmp
adc
addr16
stos
sbbl
cli
jg
das
add
pop
pushf
iret
addr16
fcompl
inc
push
and
sub
dec
fs
outsl
call
jmp
test
push
sub
pop
push
pushl
sub
stos
repnz
mov
push
jge
sub
mov
push
push
fwait
leave
cmp
dec
cmp
ss
repnz
lret
jmp
mov
mov
pop
imul
das
cmp
addb
sub
cli
inc
jae
decl
xchg
jge
add
cwtl
or
sub
push
push
sbb
into
lcall
mov
adc
inc
or
out
sub
push
jecxz
sub
cmc
xchg
jle
je
inc
pop
ljmp
dec
std
sbb
add
mov
mov
decl
xor
pop
inc
push
add
cmc
mov
loopne
jecxz
sub
sbb
pop
inc
out
push
decl
lock
les
dec
sub
add
xchg
mov
test
mov
bswap
ljmp
mov
popa
adc
pop
dec
mov
push
adc
jo
aas
jg
cmp
pushl
imul
sub
call
lods
sub
out
xor
jmp
mov
push
imull
push
movsb
in
adc
outsl
test
outsl
pushl
gs
in
pusha
cmp
into
mov
cwtl
popf
fildll
xor
jle
dec
mov
loop
or
clc
push
sahf
andl
xchg
std
je
mov
lret
inc
pushl
sbb
lea
lock
arpl
xchg
push
mov
inc
adc
imul
in
aad
mov
enter
cmp
in
ljmp
mov
dec
cmp
das
lret
popf
pop
or
add
xchg
decl
push
add
inc
xchg
lods
loopne
inc
mov
test
stos
cmpsl
xlat
jg
jbe
testl
outsl
shlb
mov
xor
sti
dec
sbb
sahf
sar
jge
xor
pop
mov
int3
daa
pop
push
into
in
cmp
xchg
sbb
or
std
xor
lcall
sub
mov
mov
sarl
cmp
fldcw
pop
add
incl
pop
xor
xor
dec
inc
push
xchg
insb
scas
icebp
or
mov
add
pushl
adc
cmc
xchg
pusha
dec
dec
dec
stos
add
mov
mov
lds
arpl
jno
lretw
clc
insl
xor
stos
jne
mov
lcall
jle
xchg
push
sbb
cmp
xlat
ds
jb
push
mov
mov
cmp
decl
jbe
jno
lahf
jg
adc
xor
testb
sbb
cmp
xor
mov
jp
jbe
test
pushf
and
push
mov
lret
sahf
fadds
outsb
push
filds
mov
push
pop
and
sub
and
decl
stos
push
sbb
int
dec
push
mov
mov
call
addr16
pop
cmp
lds
cmp
sub
push
into
cmc
push
jg
add
out
cmp
fdivrs
dec
jle
sub
arpl
add
paddsb
arpl
mov
adc
cltd
sahf
mov
dec
pop
inc
push
sbb
gs
dec
sub
xchg
in
xor
pop
inc
pinsrw
pop
sbb
dec
push
mov
ljmp
sbb
int3
repz
jbe
xor
inc
mov
sahf
roll
call
gs
out
jns
mov
loopne
sbb
cmp
mov
push
pop
push
adc
ljmp
jg
push
fbld
push
and
shl
dec
int3
cmp
ljmp
adc
stos
mov
shrl
adc
mov
sub
mov
leave
or
cs
in
add
ljmp
decl
mov
call
jecxz
cld
ds
divb
out
mov
ljmp
loopne
and
mov
cld
loope
in
in
lcall
jb
mov
inc
clc
adc
outsl
movb
ds
adc
popa
mov
je
nop
push
push
push
ljmp
adc
inc
loope
mov
and
push
and
lret
lcall
sbb
sub
pop
inc
push
call
pop
aad
dec
icebp
or
out
push
jg
shlb
inc
vpshuflw
xor
jmp
push
sbb
test
pop
shlb
gs
into
enter
xchg
sbb
dec
cmpsb
dec
das
xchg
cmp
loop
sub
incl
call
pop
mov
mov
int3
or
mov
call
xchg
mov
lret
call
and
pop
sbb
jmp
mov
test
cmp
cli
in
and
mov
lahf
xor
pusha
mov
mov
test
sar
incl
ljmp
or
push
test
test
cmp
call
scas
mov
cmp
add
sbbb
pop
mov
and
divb
cli
in
jne
dec
mov
jae
fwait
mov
pop
or
ljmp
and
testl
ds
leave
cltd
cld
dec
push
roll
jle
outsl
fnstcw
jge
push
xlat
out
mov
xor
cmp
or
sub
pushl
jnp
cmp
mov
push
mov
cmp
inc
mov
adc
mov
idiv
decl
gs
mov
jbe
mov
inc
movsl
iret
mov
clc
sbb
jmp
mov
sar
decl
dec
sarb
push
mov
dec
das
lds
insb
mov
js
shlb
cmp
ds
and
scas
lods
rcrb
and
test
jmp
jo
cltd
adc
jmp
push
test
or
jmp
jbe
popf
data16
stos
adc
in
jbe
jns
pop
incl
aam
das
stos
fwait
add
loop
cmp
push
in
mov
das
gs
jle
loop
xchg
in
add
ret
xchg
add
xchg
push
inc
add
fisubrl
cs
inc
pop
clc
push
cmpsb
scas
sub
mov
cwtl
pop
xor
mov
popa
pop
and
leave
mov
dec
xchg
shlb
mov
incl
shrb
insb
cmp
add
pop
push
lods
ss
popf
push
mov
lcall
out
fists
push
movsb
jmp
mov
xchg
pop
jo
inc
testb
dec
mov
adc
lods
scas
popl
inc
out
lret
in
lock
iret
xor
xorl
lods
inc
call
cmpsb
mov
in
enter
sub
addr16
xor
jo
xchg
xchg
pop
insb
cmp
stos
or
dec
fcomps
pusha
scas
mov
push
mov
popf
cmp
mov
loope
mov
and
xchg
pop
stc
ja
cmp
jmp
shll
sti
mov
es
flds
mov
lret
int
inc
adc
pop
dec
adc
mov
mov
test
xchg
pop
cs
cwtl
mov
lock
dec
push
out
mov
aaa
adc
mov
pop
push
out
adc
cmc
add
cmp
pop
gs
daa
push
enter
lcall
inc
jle
push
mov
in
adc
loop
scas
shl
fwait
loopne
mov
jg
jbe
lea
loop
sbb
mov
or
repz
outsb
imul
jmp
push
rcrl
dec
lods
xchg
fiaddl
ljmp
scas
aaa
jno
cld
pop
jl
xchg
ret
incl
push
cmp
sbb
out
enter
icebp
in
sbb
cmpsb
js
pop
inc
std
cmp
or
inc
aam
and
pop
dec
insb
sub
cmp
scas
shll
dec
test
test
jmp
and
test
sub
mov
mov
jg
pop
or
fnstcw
es
fsub
sahf
lret
cld
mov
int
scas
or
xchg
std
test
cmp
jge
ds
jbe
pushl
dec
jae
xchg
out
nop
bound
lret
jecxz
inc
mov
fadds
sub
xchg
jno
int
ljmp
cli
cmp
popa
mov
add
sub
aam
and
jge
add
push
scas
mov
decl
ja,pn
push
add
ds
push
imulb
jae
pop
xchg
inc
ljmp
adc
cmp
mov
xlat
rcr
sbb
notl
arpl
ficompl
ret
dec
icebp
ror
lock
jle
xor
shl
pop
mov
repz
fucomip
insl
pop
fldcw
pop
sarl
dec
mov
bound
fists
sbb
pushl
mov
push
mov
dec
mov
mov
inc
jecxz
inc
cmp
or
bound
add
mov
rcrb
dec
cs
rcrl
bound
fld
incl
incb
aaa
imul
bnd
iret
sub
pop
or
mov
cmp
jmp
xchg
js
dec
adc
stc
push
mulb
jl
push
pop
lods
adc
daa
add
mov
sbb
adc
ret
sub
push
add
or
mov
mov
adc
outsb
jle
mov
or
jle
sub
outsb
xlat
adc
es
sub
inc
testb
pushl
rcrl
inc
rorb
jns
aam
add
arpl
push
sbb
mov
and
decl
bound
pop
sbb
sub
std
stc
mov
fstps
add
pop
ja
or
lcall
push
pop
xlat
addl
inc
and
popa
mov
xchg
push
or
call
lock
mov
aad
cmp
loop
inc
xchg
sbb
and
movsb
fstpl
lods
add
adcl
les
dec
push
xor
xchg
jo
mov
and
stc
clc
cltd
inc
cmp
incl
sub
jns
jno
push
xchg
push
loope,pt
mov
jle
js
mov
xchg
pushf
inc
pushl
pop
movsl
jecxz
rorb
mov
addr16
lahf
mov
js
lods
pop
jl
scas
mov
lcall
test
xchg
or
repnz
das
or
enter
test
stos
leave
insb
and
outsl
clc
ljmp
cmp
pop
push
lock
jp
adc
xor
sbb
mov
outsb
cmp
inc
jmp
sbb
stos
in
int3
inc
xlat
aad
sub
jnp
aaa
iret
jmp
and
bound
and
lcall
adc
out
inc
push
ljmp
gs
fucom
inc
fistl
fldl
imul
popf
add
adc
push
dec
pop
push
sub
orl
dec
stos
arpl
aaa
cld
icebp
stos
repnz
xor
cmp
cmp
out
cmc
out
dec
pop
jg
aaa
lcall
loopne
fbld
sbb
testl
inc
cmp
mov
dec
fidivl
adcl
subb
pop
jns
xor
pop
mov
out
mov
dec
adc
xor
sub
mov
ljmp
insb
loopne
repnz
test
popf
pushf
cs
add
jno
in
xor
mov
stc
pop
pop
scas
mov
lea
lcall
sbb
cs
das
dec
mov
xchg
pop
or
xchg
lds
adc
cmp
in
loopne
pushf
mov
sbb
lea
xchg
jns
or
out
jg
shlb
add
imul
int3
adc
mov
mov
shr
lds
push
movsl
inc
fdivrl
jno
or
fwait
push
mov
jle
add
lret
pushl
insb
push
mov
test
rcll
mov
adc
clc
xorb
xlat
cld
inc
sub
es
mov
dec
add
jns
fcmovnb
mov
aaa
mov
incl
mov
cmp
mov
xchg
cmc
dec
inc
mov
add
in
out
adc
scas
loop
mov
cs
pop
shufps
int
push
jne
sbb
aad
inc
das
arpl
fidivl
popa
inc
rolb
les
or
mov
sub
daa
pop
data16
shll
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
or
imul
push
insl
fimull
add
pushf
movsl
sbbl
cmp
fnsave
push
pop
push
in
sub
mov
push
jo
cwtl
add
push
ds
mov
sub
push
jnp
add
in
jg
mov
ljmp
pushf
mov
inc
fnsetpm(287
push
cld
xlat
out
adc
xor
xor
test
pop
add
mov
pop
jle
decl
adc
adc
stos
dec
xchg
nop
adc
mov
roll
movsl
mov
das
jo
outsl
cli
call
cmc
aad
fmul
lea
incb
daa
lods
add
adc
jmp
xlat
push
adc
push
sbb
push
in
adc
mov
pop
pop
mov
dec
cmc
mov
lcall
mov
daa
insb
pop
es
into
call
adc
ljmp
xchg
in
iret
pop
incl
mov
jge
push
pop
addr16
inc
inc
movsb
dec
mov
push
ljmp
inc
mov
dec
adc
pop
cmp
and
fistps
in
inc
push
cld
scas
or
test
es
jnp
ljmp
sub
fsubl
jo
pop
loop
mov
xor
pop
subl
push
jae
cmpsb
fsub
outsl
cmc
lret
scas
xchg
push
xchg
adc
jg
mov
mov
xor
xor
xor
lret
dec
sbb
cmp
pop
mov
mov
shlb
xchg
push
ss
mov
int
inc
dec
in
lahf
call
mov
loopne
mov
mov
pop
fsts
popa
lea
mov
cmp
nop
mov
ds
jg
incl
mov
jp
stos
in
outsl
dec
jnp
inc
xchg
mov
fwait
cld
fcmovnb
or
insb
fnstsw
je
adc
popa
insl
cld
inc
dec
adcb
mov
jg
sub
js
mov
lretw
pop
jmp
push
cli
mov
add
and
gs
into
mov
add
ljmp
lret
jmp
cmp
pop
sbb
or
ja
dec
clc
scas
sbb
mov
test
inc
pop
inc
inc
pop
cmp
add
xchg
jae
rorb
mov
sub
cld
and
stc
adc
sbb
lds
test
inc
cltd
rcrb
adc
xchg
pop
mov
aaa
aad
inc
add
jge
sbb
popf
sub
push
jae
decl
cmpsb
dec
std
movsl
mov
dec
sub
push
mov
xchg
lret
fistpll
ds
or
cld
call
pop
rcr
mov
test
mov
xor
xchg
sbb
wrmsr
mov
lcall
dec
and
push
xor
das
adc
pushf
aas
pop
into
loopne
fisttps
cli
push
push
hlt
jo
mov
add
xchg
roll
push
pusha
addr16
dec
mov
test
ja
repnz
call
imul
imul
add
pushl
pop
lea
jge
call
or
push
cmp
out
repnz
div
xor
in
mov
mov
cs
pop
xor
ljmp
add
fs
ljmp
rcrb
push
sbb
movsb
cvttps2pi
mov
mov
jmp
iret
fstpl
stos
dec
pop
cltd
fisttpl
pop
sbb
sahf
call
add
fidivs
sahf
loope
ljmp
stos
stos
lcall
sar
incl
add
outsb
dec
xlat
gs
jnp
jmp
outsl
scas
pop
sar
aas
cld
jg
daa
inc
test
aad
ss
pusha
push
mov
movsl
faddl
mov
rolb
sbb
pop
cmp
test
jne
in
outsb
ret
icebp
movsl
xorl
cs
push
out
sub
imull
dec
notl
pop
nop
loope
nop
addl
xor
int
cli
jbe
into
mov
adc
call
in
push
clc
repnz
rcl
pop
add
pop
cs
xor
mov
decl
push
hlt
lea
imul
mov
mov
mov
cmp
sub
inc
inc
jl
ja
xor
sbb
mov
nop
add
stc
mov
or
scas
cmp
int
clc
outsl
and
sub
adc
lods
xchg
rcrl
dec
cli
ds
jle
data16
mov
xor
fld1
js
jnp
mov
imull
in
repz
dec
in
leave
clc
das
mov
bound
call
test
jbe
shrl
jle
test
xor
leave
divb
push
int3
das
and
out
cli
mov
loopne
mov
movsb
jle
pop
notl
mov
cld
int3
insb
fstps
cmp
dec
add
jg
xchg
imul
hlt
mov
and
mov
das
shrl
push
aas
push
gs
lods
insl
ja
add
xor
loopne
pop
cld
int
add
xor
loopne
jmp
inc
test
adc
mov
call
sar
jb
dec
in
in
inc
ret
mov
push
sub
add
ljmp
in
pushf
sub
cmc
mov
mov
mov
mov
stos
jno
nop
cwtl
mov
pop
call
gs
sub
push
mov
adc
mov
add
pop
pop
mov
jmp
and
ret
inc
jp
sub
and
loopne
inc
decl
push
cmp
pop
add
sub
adc
jmp
push
inc
mov
stos
enter
sub
sub
movsl
and
aam
ljmp
in
mov
pushf
dec
pop
dec
arpl
fisubrs
xchg
test
push
dec
adc
insb
cmp
ljmp
or
mov
inc
out
push
aaa
xor
add
mov
out
incl
xchg
ret
mov
inc
inc
pop
inc
jns
fidivrl
rcrl
pop
mov
mov
leave
push
xor
jbe
and
bound
pop
mov
adc
rorb
mov
bound
adc
pop
scas
mov
call
clc
cmp
stos
adc
or
push
inc
mov
pop
loop
movsb
cli
jge
sbb
into
mov
push
xor
mov
add
fimull
arpl
jge
sub
sbb
dec
push
lret
mov
cmp
mov
subl
addr16
push
ret
sti
xchg
icebp
lcall
push
or
xor
fwait
mov
inc
aas
incl
aad
mov
andb
ds
out
sub
pop
dec
or
lcall
push
stc
in
dec
xor
inc
cmp
sbb
sub
mov
stc
pop
jl
sub
in
mov
shl
jp
xor
sti
jne
push
xor
pop
push
sub
aam
add
addr16
mov
pop
leave
pop
lods
loopne
ljmp
push
cltd
dec
outsl
jecxz
mov
inc
cmp
sbb
lcall
mov
pushl
mov
outsb
test
fnstcw
cwtl
adc
lea
fs
pop
cmc
fwait
jp
aam
inc
sbb
sub
mov
jp
adc
dec
decl
decl
xchg
cmp
movsb
lcall
in
call
scas
sarb
mov
bound
out
fdivrp
mov
imul
xchg
jbe
and
js
incl
aam
inc
inc
xchg
mov
test
cmp
addr16
cli
jl
mov
rclb
sub
mov
cs
mov
jmp
xor
movsl
clc
out
push
xchg
mov
imul
mov
outsl
jmp
decl
sub
clc
xor
inc
fs
mov
decl
mov
mov
leave
es
scas
sbb
std
out
jbe
and
mov
ljmp
sarb
sarb
add
push
aas
inc
incl
fdivl
test
xchg
push
in
imul
xor
movsl
adc
sbb
repz
cltd
mov
lahf
rcr
pop
hlt
lea
dec
ret
cld
in
cli
xchg
jp
mov
ud0
decl
mov
fists
or
or
roll
cli
and
mov
stc
fdivrl
ja
or
adc
in
or
mov
dec
inc
sub
xchg
add
pop
jo
sbb
pop
popa
ljmp
sti
inc
push
jae
fwait
xchg
mov
test
les
call
push
decl
mov
loopne
mov
or
pop
or
push
loope
inc
lahf
cld
lcall
sub
js
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
pop
fucomi
addr16
cmp
shll
enter
inc
jb
dec
mov
sub
jmp
push
gs
and
loop
inc
cli
adc
sub
outsl
cmpl
cli
call
add
cmp
mov
ret
sbbl
push
sbb
sub
mov
testl
out
clc
ljmp
jg
pop
xchg
jge
aam
out
add
or
movb
call
fisubl
data16
rol
ljmp
sub
and
ljmp
incl
loopne
cld
movsl
pop
adc
pushf
jge
je
mov
mov
rclb
into
and
sahf
push
rorb
dec
je
dec
divb
and
leave
mov
lcall
mov
cmc
daa
lcall
mov
mov
lods
cld
adcl
popa
ljmp
aaa
icebp
gs
test
les
sub
fnstsw
movsb
scas
jb
test
push
xchg
ret
scas
nop
xor
mov
push
sbb
mov
fcomip
inc
xchg
fs
or
shrl
xchg
stc
mov
xor
roll
test
pop
call
xor
in
fsubrl
roll
adc
add
pop
xchg
mov
xor
fistps
sbb
ja
adc
in
dec
in
repnz
sub
cmp
and
jg
add
pop
in
adc
ret
in
lods
repnz
sub
push
mov
dec
sub
gs
sub
mov
es
adc
dec
jle
mov
in
aaa
popf
ljmp
cli
mov
nop
and
xchg
daa
in
mov
imul
cwtl
sub
std
lcall
stos
or
cmp
push
jo
lcall
lahf
push
scas
cmp
decl
ljmp
mov
repz
out
jb
decl
inc
mov
mov
dec
cmc
xor
sbb
adc
or
test
ja
pushl
mov
lods
adc
in
pusha
xor
fstpl
in
mov
rcrb
sbb
xchg
lret
call
mov
mov
pop
or
fldl
mov
les
shrl
decl
jns
scas
and
inc
dec
jb
lock
pop
je
and
sbb
adc
sti
cmc
sbb
call
fidivrl
mov
stc
pop
stc
pop
out
pop
mov
sbbb
dec
lock
cld
mov
xchg
push
lods
xor
jo
jbe
les
mov
stos
push
fucomip
movsb
push
sbb
test
int
cmpsb
cmp
push
lods
sti
in
jo
add
mov
cli
shll
fsubrl
loop
inc
pop
jae
aad
les
lods
sub
mov
xor
or
cmp
loop
rdmsr
fistps
orl
mov
adc
push
dec
inc
ja
push
nop/reserved
decl
sub
mov
sbb
xor
sub
ljmp
nop
negl
call
and
xor
pop
cltd
call
push
jp
gs
xor
jmp
xor
mov
out
xchg
ljmp
or
pusha
cli
rorb
nop
notb
and
pop
jmp
arpl
adc
mov
call
sub
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
add
idiv
in
cltd
cmovl
jbe
outsl
into
loopne
arpl
test
cmp
mov
and
das
xchg
or
in
and
pop
popf
rcr
dec
jb
inc
inc
mov
incl
mov
cwtl
jnp
fwait
adc
inc
popa
lret
sti
sub
in
pushl
test
stc
out
and
add
cwtl
add
jg
ss
mov
sbb
dec
and
in
lret
jno
cmp
xchg
aad
lcall
mov
insb
in
scas
test
adc
mov
jle
cmp
or
xor
pushf
lds
push
cmp
dec
fs
fsubs
jmp
ds
loopne
pop
insl
xchg
pop
sub
add
xchg
mov
cmc
pop
and
or
decl
shlb
nop
das
pop
pop
scas
xchg
mov
sbb
in
jmp
push
inc
sbb
sub
rolb
aad
cmp
addb
sub
push
aam
xchg
adc
call
or
repnz
incl
mov
jno
cwtl
dec
inc
enter
js
mov
scas
mov
call
push
out
cmp
loop
push
push
add
sbb
cmp
and
sbb
push
dec
sahf
test
data16
mov
daa
cmp
aas
lock
fdiv
fsubrs
mov
or
incl
or
and
divb
ja
cwtl
xlat
sbb
lock
or
mov
inc
loop
fmul
inc
outsl
dec
adc
cmpsl
lcall
push
push
push
ljmp
pop
stc
adc
pop
inc
jno
into
push
scas
das
lret
das
mov
mov
loopne
ljmp
mov
mov
mov
and
inc
nop
stos
push
out
hlt
mov
ljmp
cli
push
jge
arpl
loopne
inc
sub
sub
daa
pop
pop
jle
jmp
jmp
test
xchg
mov
cmpsb
ja
cli
or
push
pop
cwtl
or
push
or
pushl
test
inc
xchg
cmc
icebp
in
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
pop
jl
xchg
or
xchg
mov
insb
dec
fisubs
mov
inc
jecxz
sbb
adc
mov
lds
jb
cmpsl
stos
lret
adc
je
push
jmp
aad
fsubs
push
inc
inc
cli
xor
add
rolb
fadd
ljmp
mov
movsl
adc
pop
repnz
stos
aad
and
push
bound
mov
fsubl
mov
mov
mov
mov
shr
adc
outsl
pop
ljmp
add
shll
movsb
imul
cmp
outsl
in
inc
test
addr16
jnp
dec
insb
fidivrs
mov
lock
dec
js
pushl
jns
out
imul
mov
mov
dec
xchg
loope
in
in
push
sbb
cmp
call
jg
ret
push
movb
inc
cwtl
xor
pop
jge
mov
sub
roll
into
cmp
xchg
sub
mov
das
adc
jno
cmpsl
out
mov
in
and
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
scas
add
dec
and
out
xchg
aad
mov
sbb
fiaddl
out
daa
sbb
or
mov
fidivs
push
dec
aad
insb
out
xor
xor
das
cli
mov
push
xchg
mov
inc
call
add
or
and
jge
je
dec
decl
scas
jns
dec
call
jg
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
pushl
xchg
outsb
mov
clc
outsb
inc
rcr
lea
int
test
sub
call
fidivrs
and
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
stc
pop
inc
mov
mov
inc
and
cmpsl
mov
xor
lahf
mov
cwtl
movsb
std
decl
and
sahf
dec
ficomps
pop
push
push
sbbl
bound
adc
xor
and
jg
add
test
scas
push
inc
sub
ljmp
hlt
pop
sbb
aas
test
push
cmp
jge
into
sub
pop
shll
mov
sbb
fdivr
mov
mov
push
out
jae
add
popf
aas
and
test
es
ljmp
stos
add
or
adc
xor
sbb
cmp
add
subps
je
adc
popa
add
pop
mov
sub
sub
call
negb
push
push
jmp
cli
cs
sub
pop
mov
decl
cmp
adc
jno
nop
decb
insl
les
lcall
jmp
mov
iret
or
lret
out
mov
push
testl
call
aas
imul
adc
sahf
inc
into
mov
in
mov
cmpl
shlb
mov
leave
add
daa
insl
mov
aad
push
xlat
mov
and
std
and
jne
call
aad
push
xchg
in
popa
fs
jb
lret
pop
pop
sub
popa
insl
and
das
stc
into
in
jae
call
jb
addr16
or
popf
push
imul
push
sub
out
mov
pushf
pushl
cli
ljmp
rorb
mov
je
or
mov
jb
mov
das
ret
rol
push
aad
xor
aam
ljmp
dec
scas
push
or
mov
fbstp
insl
sbb
nop
in
stc
lods
dec
and
ja
pushf
mov
call
xchg
gs
frstor
and
mov
icebp
adc
faddl
incl
pop
dec
inc
shrb
jg
add
outsb
adc
into
mull
mov
sub
ds
adc
xor
mov
cltd
inc
adc
push
mov
xchg
lods
sub
pop
cld
jmp
ljmp
dec
dec
pop
stos
or
inc
dec
add
test
jmp
movsl
sub
in
xchg
aam
xchg
adc
sbb
ud1
xchg
lds
ljmp
sub
add
xor
pop
mov
xchg
xor
sub
pop
insl
pushl
mov
lahf
push
fs
popf
test
hlt
sub
insl
mov
dec
xor
arpl
js
jmp
stos
cli
loopne
daa
aam
and
inc
sub
cmp
decb
inc
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
popf
mov
js
sub
hlt
pop
std
call
push
pop
arpl
test
les
sbb
and
aam
int
pop
rclb
jns
jmp
arpl
adc
push
outsb
rcll
nop
push
loopne
xorl
loope
xchg
push
add
movsl
ljmp
cltd
out
xchg
dec
or
or
stc
pop
rolb
popa
addb
lds
sbb
ja
ljmp
mov
stc
and
les
fisubrs
fcmovne
pushf
adc
sbb
in
sub
sub
push
lret
stc
sbb
mov
push
js
sbb
lods
rclb
clc
push
stos
fists
xchg
xor
mov
mov
test
shll
xchg
gs
pop
inc
scas
cli
add
mov
adc
jns
jae
popa
das
testb
xor
and
jg
push
int
xor
aad
lods
ret
sahf
fistpl
ret
es
xor
lcall
adc
sbb
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
call
cld
pop
inc
sbb
repz
cmpsl
lds
inc
lea
adc
leave
andb
call
iret
ja
push
inc
leave
jle
xor
loope
in
pop
cmp
mov
lcall
xor
xchg
mov
mov
jo
jg
push
lret
bound
fistps
insl
dec
pop
hlt
cld
jg
out
shl
sbb
cmp
sub
orb
ss
mov
jmp
popf
mov
hlt
pop
dec
mov
cmp
cmpsl
mov
sar
loop
hlt
mov
orl
lcall
sbb
fcomps
and
outsb
aaa
fbld
mov
test
ja
jp
pop
mov
ljmp
lds
mov
mov
sub
test
or
pop
ret
fildl
loop
inc
inc
xchg
jno
jns
shl
adc
call
mov
ret
sub
mov
cmpsb
inc
nop
negb
dec
loop
add
push
pop
adc
ficompl
aam
xchg
pushl
xchg
or
jo
sub
fs
fcmovb
and
xor
xchg
loope
and
outsb
dec
lea
dec
popa
daa
jns
jae
pushf
xor
push
cmp
adc
pushl
inc
dec
loop
push
or
daa
dec
test
cmpsb
mov
mov
adc
xor
ljmp
or
sub
inc
adc
sub
sahf
and
sbb
roll
lcall
mov
push
enter
aad
test
mov
adc
lcall
xchg
lods
les
jmp
or
daa
mov
fucomp
fs
je
push
push
mov
push
ret
inc
jecxz
jecxz
pop
inc
mov
jecxz
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
inc
fsubp
lds
movsl
mov
xor
repz
mov
notl
lcall
popf
nop
mov
rcl
cmp
imul
cs
xchg
ss
mov
out
mov
das
fcoms
inc
sub
fistl
inc
in
cmp
sahf
add
cli
aad
imull
xchg
add
test
ret
cmp
je
sub
lcall
pushl
sti
popa
mov
mov
rcrb
repnz
sti
xchg
call
pop
out
out
or
aas
je
push
mov
cmc
inc
into
mov
decl
sub
pop
iret
imul
add
rorb
loopne
jmp
sbb
imul
call
and
mov
sbb
mov
mov
or
int
mov
rolb
jno
out
mov
lock
and
xor
cmpsb
mov
call
inc
cmpsb
movsl
jecxz
stos
and
sbb
sub
mov
jp
decl
jns
mov
icebp
push
scas
test
dec
push
sahf
inc
test
pushf
cmpsb
repnz
inc
nop
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
ljmp
adc
mov
xlat
inc
loop
lds
dec
ds
loope
add
mov
bound
lcall
aaa
jno
push
adc
xor
or
mov
in
inc
and
loope
bnd
ljmp
hlt
fbstp
lret
mov
fsubr
jbe
jecxz
mov
incl
enter
push
xor
push
pop
push
cmpsb
adc
imul
add
negl
cs
dec
arpl
andl
sub
xchg
jp
popf
mov
xor
mov
dec
cmp
adc
popf
xchg
test
or
ds
lcall
iret
jmp
test
xchg
lock
ljmp
sbb
movsl
jl
mov
sbbb
push
arpl
ret
jg
sbb
sbb
lock
pop
outsb
push
jb
lret
mov
xor
stos
int3
les
pop
mov
sbb
pop
xor
dec
mov
jnp
mov
sub
cmp
in
xchg
sbb
dec
in
fildll
xchg
mov
xchg
lret
js
movzwl
xlat
repnz
maskmovq
testl
xchg
arpl
test
mov
ljmp
pop
loope
mov
jmp
movsb
or
fmull
cmp
lock
cmp
jbe
lods
xor
das
ja
jmp
mov
loope
inc
lahf
movsb
sub
adc
in
loop
lcall
pop
popf
jnp
into
ja
shll
cmp
mov
fistpl
lcall
dec
inc
cmp
pop
cmp
icebp
cs
pop
cmp
pop
pop
shlw
inc
xchg
pop
andb
dec
jb
jb
test
test
pop
aaa
stos
add
xor
sub
lock
mov
dec
mov
pusha
data16
aaa
rcrl
dec
jno
mov
incl
pop
lds
addr16
into
pop
fwait
inc
aas
lea
xchg
cwtl
stc
push
sub
test
xor
pushl
int
les
lcall
lods
jnp
and
cs
ror
popfw
add
inc
add
frstor
test
jno
dec
cld
push
xchg
lods
add
mov
decl
fidivs
xchg
cltd
sub
test
iret
xchg
xchg
imul
inc
lock
decl
adc
aas
or
pop
and
faddp
xchg
jmp
notb
xor
fbstp
push
sub
test
sbb
inc
addr16
js
pusha
imul
repnz
jno
das
pop
or
sub
idivl
mov
pushl
lea
pop
repz
jne
push
outsl
fs
stos
pop
jle
jg
test
decb
call
lret
insb
and
orb
cmp
rcll
jmp
adc
hlt
int3
mov
push
mov
pop
ljmp
enter
fcom
cmpsb
lcall
cmc
fwait
stc
stc
aaa
cmp
xor
jb
cltd
lods
in
repz
jmp
mov
add
js
xor
add
xchg
pop
push
pop
cmp
mov
lods
call
movsb
clc
dec
imul
xor
outsb
sbb
scas
mov
sub
movsl
jmp
sti
shll
cmc
push
mov
inc
loopne
mov
push
insb
xchg
repnz
lds
out
inc
add
dec
mov
cwtl
xor
icebp
rcrl
sbb
xchg
sub
mov
decl
or
pop
cmp
not
adc
xchg
imul
insl
pop
cmp
sbb
sub
int3
out
inc
push
inc
mov
mov
xor
test
sbb
ljmp
sub
int3
push
sbb
adcl
lods
add
mov
add
call
cmp
xor
jp
adc
ret
into
iret
notb
jnp
std
sahf
inc
sbb
and
jl
add
test
lcall
mov
lods
fldenv
lahf
outsl
push
les
insl
mov
icebp
or
fwait
xcrypt-cbc
cmpsl
aam
mov
bnd
and
aad
scas
jle
mov
ret
sub
mov
stos
lods
aas
in
faddp
adc
mov
es
ja
das
mov
jmp
icebp
cmp
mov
ljmp
lcall
fnstenv
cwtl
xor
aas
xor
add
adc
cld
aaa
fiaddl
or
in
std
pop
pop
aas
push
jb
dec
pop
lea
inc
or
faddl
fildl
mov
out
cmc
dec
mov
xchg
sbb
sub
out
mov
xchg
bound
jmp
lret
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
mov
shll
adc
jl
xchg
outsb
and
ret
adc
testb
cmp
sbb
pop
leave
xor
lcall
aaa
mov
dec
jecxz
adc
push
idivl
into
andb
lods
lahf
or
and
shrl
dec
cmp
lcall
jb
xor
sbb
fwait
and
lods
je
sbb
test
xor
imul
mov
push
aam
inc
outsl
push
stc
add
push
and
mov
lcall
loop
jo
cmc
lret
sbb
jo
push
dec
sahf
dec
push
push
or
xchg
cmp
jmp
push
mov
fstps
daa
stos
shll
xor
pop
lock
xchg
insl
sub
mov
pop
out
pop
add
aam
or
fsts
fcompl
and
shlb
fwait
mov
inc
mov
test
sbb
mov
mov
incl
test
push
push
mov
into
in
or
ret
std
adc
rclb
mov
xchg
pusha
jg
iret
pop
jb
adc
jp
mov
pop
mov
fnstcw
arpl
pushl
mov
mov
outsb
xlat
cmp
jnp
jg
std
and
lcall
movsb
shlb
or
xchg
enter
inc
ret
sub
aaa
jge
mov
mov
aam
out
and
test
xchg
inc
ja
add
add
xchg
ljmp
fidivrl
sbb
cmp
rcrl
sbb
dec
mov
insb
cmp
fmulp
sub
scas
sub
jno
xor
test
sbb
ds
mov
pop
out
inc
test
jmp
in
addr16
jmp
pop
fiadds
loop
adc
jg
xlat
stos
pop
ljmp
mov
jae
js
lea
repnz
daa
call
shll
lcall
jge
inc
mov
loop
adcb
gs
xor
arpl
mov
test
into
push
add
jbe
mov
shrl
stc
xor
stos
cltd
mov
insb
leave
push
and
ljmp
cmp
insb
andb
bound
stc
xchg
pop
mov
dec
in
pop
subb
pushl
in
jp
scas
push
in
ljmp
dec
stos
xchg
icebp
std
enter
jecxz
mov
ljmp
js
inc
test
xor
cmp
cld
and
mov
or
ja
rorb
dec
bswap
test
inc
push
or
cmp
inc
outsb
ret
test
jg
test
push
or
dec
jnp
mov
pushf
sub
pop
inc
pop
fcomps
jg
mov
call
add
test
mov
mov
cmp
cmp
out
sbb
inc
imul
mov
call
cmpsb
mov
fdivrl
pop
cwtl
sahf
adcb
push
ja
push
jl
imul
decl
xchg
ja
mov
out
mov
roll
pop
icebp
pop
or
divl
push
jge
mov
testb
cmp
mov
ror
and
test
add
repnz
cli
jg
pop
mov
inc
cmc
cli
int3
cwtl
mov
xor
mov
pushl
and
pop
or
add
jg
les
inc
cli
add
pop
and
aad
popa
mov
mov
dec
js
loope
xor
mov
stc
in
ficoms
pop
test
pop
mov
mov
lcall
xchg
call
push
push
push
rcrl
or
mov
and
xchg
rcll
or
test
sub
std
pop
inc
mov
daa
stos
fadd
and
dec
out
or
fbld
popl
enter
xchg
xor
sarb
cli
cmp
adc
adc
push
mov
shrl
jae
xor
aaa
aas
xchg
xor
jmp
mov
int
sti
aam
jb,pt
shll
jge
ds
bound
or
fisubs
aaa
or
sahf
cmc
pop
jbe
sbb
jmp
xchg
out
in
int
cmp
fmuls
test
xor
outsb
inc
push
sub
aad
mov
xchg
mov
push
cmp
decl
in
scas
and
adc
adc
imull
jmp
push
sbb
inc
pop
jmp
incl
jns
loope
lea
mov
xchg
add
inc
lea
icebp
ret
ds
xchg
lcall
pop
mov
gs
sub
mov
inc
pop
dec
push
stos
add
sub
cmpsl
xchg
push
decl
in
rclb
adc
cld
in
inc
insb
xor
ljmp
and
cmp
shrl
enter
aad
mov
inc
hlt
ljmp
clc
sbb
adc
xchg
cmc
js
fiaddl
outsb
out
stos
jno
add
dec
pop
repz
mov
lcall
xchg
jo
incl
and
jle
sbb
mov
shlb
fnstenv
icebp
mov
pushf
call
xchg
sbb
cmp
gs
xchg
jb
cmp
mov
ss
mov
stos
int3
fdivs
shlb
out
adc
inc
scas
and
push
mov
incl
ret
aam
jns
shlb
cmp
mov
inc
fcoms
enter
rcr
xor
ljmp
mov
sbb
push
mov
mov
lds
faddp
icebp
cltd
mov
sub
or
out
out
setbe
in
mov
das
sar
jae
stos
sub
xor
fs
in
pushl
jmp
mov
daa
inc
das
and
add
ret
loopne
mov
out
ja
cmp
decl
fstps
out
incl
adc
dec
mov
mov
adc
mov
or
and
decl
lcall
fldl
sbb
ds
inc
xor
cld
add
jmp
imul
hlt
sbbb
insl
decb
into
jmp
pop
add
mov
jmp
mov
popa
fdiv
and
or
sbb
sbb
jle
pushl
dec
rcrl
pop
pop
aas
out
mov
and
test
lret
sahf
inc
clc
mov
pop
clc
dec
dec
and
cmp
iret
cmp
into
xchg
subb
push
adc
ljmp
stos
push
testb
pop
pop
dec
inc
cmpsb
cmp
data16
mov
in
in
daa
add
xor
popa
push
jp
push
inc
jns
xchg
daa
xchg
gs
and
xor
sbb
ljmp
nop
sbbl
in
insb
push
jne
ljmp
pop
xchg
pop
sub
sub
mov
xlat
call
jmp
mov
lret
std
notl
mov
jecxz
js
push
mov
pushf
inc
in
mov
orb
outsb
imul
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
outsl
mov
cmp
xor
adc
pop
jl
jae
clc
push
scas
clc
ljmp
fidivrs
loope
pop
shlb
mov
cmp
aas
ja
cmp
pusha
outsb
mov
nop
aas
adc
jmp
aam
add
jmp
push
loop
cmp
mov
aam
loopne
int
add
call
or
sub
leave
push
ljmp
pop
sahf
testl
aam
dec
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
sti
jmp
mov
aaa
dec
insb
adc
fmull
cmp
inc
cmp
mov
jmp
mov
add
call
or
sbb
push
jl
jno
shlb
push
gs
hlt
lcall
push
mov
cmp
mov
jno
mov
sbb
ljmp
fimull
xchg
or
arpl
mov
lret
pop
shlb
ja
lret
outsl
call
push
lcall
mov
inc
decb
sbb
jno
jno
pop
xor
mov
call
xor
sbb
jns
inc
dec
adc
popa
mov
sti
fstpt
add
incl
popa
push
adc
xchg
call
fidivl
je
or
push
cmp
incl
mov
cmp
out
rcl
mov
mov
jno
xchg
sbb
ljmp
adc
push
clc
daa
mov
cs
nop
jo
rcll
adc
cmp
add
lret
out
pop
cli
inc
pop
imul
lcall
test
jne
and
incl
dec
mov
mov
or
pushf
fwait
stos
shlb
or
cmp
ss
call
cmp
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
add
outsb
js
sub
jns
pop
mov
xor
fmulp
jmp
jbe
testl
cli
push
das
xchg
cld
or
lahf
adc
mov
fldt
dec
xlat
stc
ja
arpl
and
mov
shlb
jmp
mov
repnz
dec
pop
push
inc
sub
mov
bound
fbld
mov
adc
pop
xor
mov
and
bound
jmp
in
xchg
mov
cmc
or
dec
sbb
daa
mov
adc
jge
and
lcall
lcall
add
mov
and
jb
into
out
push
adc
fcomi
push
jmp
fstpt
or
xchg
add
pop
outsb
adcb
add
aam
lods
adc
mov
fstpt
and
hlt
add
in
add
inc
pop
cs
je
inc
sbb
adc
sbb
dec
sbb
outsb
lcall
jb
leave
rcll
xor
arpl
decl
xlat
inc
lock
mov
movsl
sahf
arpl
inc
adc
in
sub
subb
scas
push
lea
imul
imul
pop
add
stc
add
or
sub
outsl
cli
push
or
mov
pop
inc
ficomps
fwait
sahf
dec
sub
in
sahf
fidivs
dec
push
mov
sbb
fwait
mov
lahf
xor
scas
out
shrb
fists
pop
fsubrs
imul
movsl
or
pop
jp
adc
or
sub
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
add
ljmp
and
popf
sbbl
pop
pop
arpl
pop
mov
pushl
mov
xchg
mov
fwait
sub
pusha
insb
and
mov
jbe
xchg
push
ret
jmp
fsub
call
cs
xchg
cmc
aas
sub
jo
movl
jmp
fstpl
fcmovne
lret
xor
mov
xlat
sti
movaps
insl
mov
arpl
mov
fisubs
cmp
cmp
adc
jns
cmp
xlat
adc
mov
mov
rcrb
lods
adc
aaa
lret
in
xchg
dec
xchg
jno
call
jl
shlb
mov
xor
popa
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
sub
insb
add
incl
lods
out
andl
cs
mov
incl
arpl
push
and
or
icebp
mov
xor
xchg
subb
lret
aaa
enter
daa
mov
xor
inc
mov
mov
popa
pop
stos
sub
jl
lcall
jb
lcall
out
dec
jmp
imul
mov
arpl
aad
jno
lcall
addb
mov
pusha
push
pop
push
stos
or
cmpl
ret
repz
dec
lock
cmpsl
mov
jle
insl
xchg
cmpb
fwait
icebp
je
aad
std
fidivrl
call
cmc
or
jecxz
xchg
inc
xchg
cmp
incl
jno
lahf
aam
out
sbb
jo
aas
outsl
cmp
sub
addr16
mov
xchg
cmpsb
jbe
dec
mov
jae
xor
xchg
fistpll
mov
scas
in
push
fdiv
jmp
dec
std
jns
mov
sbb
pusha
cmp
fcomip
jbe
out
in
cmp
ja
xchg
out
inc
xor
xor
push
xchg
adc
mov
xchg
test
scas
movb
dec
aam
je
jnp
push
sub
or
in
cmpsl
cli
gs
dec
dec
xchg
pop
idivl
sbb
mov
cmp
pushl
dec
enter
iret
sbb
cmc
cs
loopne
mov
je
mov
loopne
mov
incl
cmpsb
push
out
add
daa
dec
pop
sti
das
pop
scas
je
push
mov
pop
out
inc
cmp
in
xchg
sub
add
adcl
mov
mov
sarb
out
jg
fucom
fwait
or
std
add
add
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
es
cld
mov
enter
pushl
adc
mov
ss
inc
ds
mov
cltd
pushf
popa
jnp
xor
sti
ljmp
and
cli
sub
imul
cmpsl
push
into
fists
pop
lret
jae
xchg
loope
ljmp
pop
mov
xor
imul
and
shrb
sti
fnstcw
pop
mov
pop
movsl
lcall
fistpl
test
add
lcall
or
test
mov
sub
call
es
or
sbb
inc
lods
fiadds
dec
leave
cmpl
jmp
sahf
lret
test
icebp
push
fistl
and
cmpsb
sbb
inc
xchg
adc
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
loopne
vpperm
pushl
cmp
inc
lods
sub
arpl
mov
lods
repnz
callw
jle
cmc
test
addb
jl
push
xchg
adc
and
out
add
ljmp
push
xor
loopne
insl
dec
lcall
pop
sub
fisttpll
dec
lret
mov
insl
popf
xlat
incl
imul
inc
ja
xor
loopne
ljmp
adc
daa
das
xchg
mull
jns
sub
into
leave
imul
sub
mov
mov
adc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
dec
inc
clc
or
cmp
lods
mov
into
sahf
loope
lds
sub
lea
jmp
fisttpll
int
mov
push
jle
pop
inc
mov
lret
adc
mov
idivl
jmp
cmp
jnp
jnp
mov
xchg
mov
xchg
into
xchg
push
in
cmpsl
in
cmp
mov
in
lret
pop
sbb
out
idiv
dec
rol
in
fiadds
call
mov
insb
ja
mov
nop
add
or
inc
adc
inc
push
std
stc
mov
inc
push
incl
push
mov
out
inc
mov
ljmp
sub
push
inc
sbb
pop
add
int3
ficoms
mov
repnz
pushl
mov
cmp
stc
sub
adc
pop
jl
jle
or
mov
jl
push
das
std
mov
pop
outsb
xor
push
sub
popa
fdivp
pop
fnsave
incl
lods
mov
daa
and
shll
add
xchg
mov
decl
test
imul
es
push
fstpt
mov
dec
xchg
jle
jg
adc
ret
jmp
inc
cmp
jl
dec
testb
or
lds
xor
insl
imul
mov
push
pop
aam
add
lret
ret
test
shlb
fmull
or
stc
mov
outsl
incl
sbb
push
into
pop
xor
adc
cmpsb
out
sub
dec
aaa
clc
dec
popf
decl
ds
mov
rol
pop
jo
es
pusha
stos
mov
xor
out
mov
sbbb
and
xor
mov
lcall
sbb
sbb
ja
push
sub
and
sub
popf
push
pop
inc
ss
cld
adc
jg
mov
mov
and
stos
dec
xchg
repz
xorb
mov
xor
add
mov
test
jo
mov
rcr
lea
xor
pop
ss
shlb
add
lods
bound
outsl
decw
hlt
lods
inc
mov
sub
pop
ret
sub
dec
dec
lea
not
mov
mov
dec
lock
out
pop
xchg
jmp
cmp
pushf
xchg
xchg
xor
adc
sbb
cmc
cmpb
sbb
push
and
fisttpll
notl
fsubrs
stos
add
or
stos
mov
adc
ljmp
pop
push
shrl
push
or
sbbb
pop
sub
and
bound
xchg
jp
sbb
xor
lea
fs
sarl
fstpt
call
decl
loope
and
jnp
dec
js
insl
lods
lret
and
mov
call
shlb
and
or
pop
daa
lahf
int
and
cmpsb
or
lcall
outsb
iret
stc
push
cmp
idiv
aam
cmp
jb
mov
adc
filds
dec
mov
mov
push
adc
int
push
fnstcw
repnz
push
pop
decl
in
cs
or
shl
push
cmp
repz
outsl
pushf
push
cmpsb
insl
adc
pop
jle
ljmp
and
lcall
fdivs
fwait
inc
shrl
xchg
int3
loop
mov
out
cmp
jg
xchg
pop
cmp
cmp
push
jle
loope
aad
dec
add
pop
dec
sbb
rolb
ljmp
rcll
pushf
ja
loopne
jecxz
rorb
insb
xchg
mov
test
sub
xchg
aas
sub
fstpt
adcl
xor
std
imul
xchg
call
mov
shlb
leave
popa
test
mov
ficomps
in
movsl
push
jg
incb
adc
fldenv
les
mov
fwait
or
call
call
jno
dec
fwait
ss
push
add
aam
mov
sbb
pop
cs
mov
xlat
das
sbb
mov
cli
inc
push
aad
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
inc
dec
insb
xchg
jno
lcall
sti
add
lcall
mov
and
or
xor
sarl
jmp
mov
xor
in
inc
or
push
call
aad
popa
fwait
xchg
sbbb
mov
lcall
cmpl
xchg
mov
stos
popa
mov
dec
lods
sbb
mov
fbstp
jecxz
mov
dec
loop
aam
push
mov
inc
cmc
pop
es
cmp
aam
decl
lock
mov
imul
int
std
lods
out
mov
mov
xchg
mov
push
in
inc
inc
mov
pop
rcl
decl
jbe
mov
and
aam
dec
sbb
popf
jno
popf
xchg
jb
and
leave
xor
pushl
sbb
mov
out
inc
outsl
adc
adc
inc
in
sbb
out
or
cmpsl
adc
push
rorb
inc
testl
inc
xor
dec
inc
fsubs
add
test
cmovbe
mov
jmp
add
jne
ss
stos
sub
ljmp
jl
xchg
pop
inc
gs
call
aaa
scas
add
sahf
adc
movsl
xchg
in
icebp
adc
jg
push
fwait
inc
scas
adc
add
lahf
clc
cld
cmc
test
adc
adc
fbld
test
mov
dec
je
ret
inc
das
add
sti
rclb
push
enter
xor
jp
pushl
std
popa
mov
es
stc
mov
mov
push
fildl
hlt
inc
pushl
lods
xor
jecxz
sahf
add
dec
jno
lret
push
jp
sahf
aas
repnz
out
sahf
in
sbb
pop
ljmp
sbb
dec
jp
inc
ficomps
add
sub
and
sbb
stos
movsl
add
ljmp
in
lret
lea
inc
mov
inc
xor
pop
ret
in
push
mov
scas
or
mov
ret
mov
scas
xor
sti
mov
inc
jo
lcall
fsubs
sbb
xorl
and
das
out
jle
adc
jle
sub
movsl
and
pushl
jg
adc
pop
popa
cmp
mov
jmp
sub
adc
decl
bound
xor
in
enter
cmpl
push
sbb
adc
adc
sbb
xchg
ds
jnp
adcb
decl
lock
dec
data16
sub
lret
idiv
test
mov
fsub
repnz
incl
bound
or
xchg
sbb
lret
out
cmp
in
shll
jne
clc
repz
push
xchg
jg
jmp
jg
sbb
push
adc
mov
mov
out
ljmp
sub
sbb
repz
pop
int3
ss
or
push
push
shrb
push
mov
lret
and
jne
push
stos
leave
cld
inc
in
push
add
clc
stos
or
sbb
xchg
mov
loop
in
fcomps
negl
xlat
lahf
leave
inc
insb
out
xorb
ljmp
lahf
xor
rcl
test
xor
sub
dec
call
fldcw
inc
ds
jl
mov
mov
insl
push
aaa
les
ret
push
sub
or
jmp
jge
adc
lock
pushl
xchg
fildll
push
lcall
jmp
ret
jmp
movsl
mov
xor
in
mov
mov
adc
shl
pop
test
mov
sar
mov
frstor
xchg
jo
or
call
or
fstps
mov
pop
mov
test
mov
clc
cmp
jns
lea
ljmp
aas
popf
xor
scas
pop
fldenv
bswap
hlt
sbb
loop
jl
sub
push
cli
sbb
test
pop
adcl
std
lcall
mov
shrl
fsubrl
out
ja
sbbb
and
daa
jne
leave
ss
sar
pushl
ljmp
into
pop
jecxz
or
sub
add
in
filds
mov
mov
insl
pop
push
js
mov
arpl
ljmp
fs
mov
cltd
in
add
jns
sub
and
pushl
insb
int3
mov
lcall
int3
cmp
jl
out
jbe
sbb
clc
frstor
rclb
or
sbb
jb
push
jne
jo
popf
test
pxor
in
mov
dec
sti
insl
sbb
push
imul
ljmp
cmp
repnz
jno
cmp
testl
mov
clc
call
jmp
or
test
test
pushl
incb
pop
mov
add
jp
out
dec
loopne
xchg
mov
cmp
or
outsb
stc
stc
imull
aas
ss
mov
shrl
adc
pushl
repz
mov
out
jb
jle
jg
push
mov
lahf
xor
lods
test
inc
rclb
push
lret
daa
mov
mov
decl
idiv
inc
mov
push
push
dec
incl
xor
pop
cmp
and
push
stos
or
mov
decl
fmuls
sti
sub
push
dec
cmp
ja
fstp
cmp
mov
jne
inc
cli
jl
cmp
adc
push
add
push
cwtl
sti
pop
cmp
andl
push
adc
incl
cmp
clc
dec
cmp
mov
aaa
push
push
jp
call
stos
cli
aad
shlb
repnz
push
movsb
cmpb
out
sbb
jmp
hlt
movsb
sbb
imul
stc
cmp
cmp
lret
cmp
cmc
lcall
mov
stc
add
stc
sub
xor
lods
push
cmpsb
dec
xchg
int3
sbb
sub
pop
subl
and
decl
pop
cmpsb
jg
push
add
inc
sub
sub
cmp
out
adc
add
jmp
sub
mov
mov
jp
or
mov
jno
adc
bound
dec
adc
inc
lea
in
push
sbb
xchg
test
jle
cmp
sub
dec
pusha
stc
test
loope
leave
jg
das
push
pop
outsl
cltd
dec
add
mov
fimuls
gs
dec
pop
mov
loopne
mov
cli
dec
mov
out
idivb
or
cmp
repnz
mov
test
ljmp
jno
and
mov
enter
clc
call
mov
arpl
push
sbb
mov
add
jae
in
lret
jecxz
decl
dec
popf
mov
inc
lock
jns
nop
dec
mov
test
xchg
ss
outsl
data16
cmpsl
fcos
incl
imul
sub
push
daa
fsts
jl
mov
cmpl
scas
adc
or
fcmovb
incl
leave
fwait
sub
ljmpw
filds
lods
shll
cmp
shr
pop
dec
daa
mov
push
mov
push
cmp
call
lea
es
inc
adc
outsl
std
enter
cs
jmp
cs
dec
insb
dec
mov
jmp
xchg
or
mov
call
mov
lods
rcrl
inc
cmp
enter
clc
mov
dec
pop
adc
incl
mov
and
sub
call
dec
arpl
pop
push
or
mov
push
or
dec
addr16
mov
xchg
ljmp
mov
mov
ljmp
xlat
adc
fsubrl
out
pop
mov
cmp
adc
out
and
incl
jle
arpl
ja
inc
negl
add
xor
push
mov
aad
xchg
and
or
or
mov
pop
jns
jp
jg
incl
clc
xor
dec
loopne
sbb
and
push
inc
mov
jecxz
inc
ss
mov
pop
inc
pop
xchg
loope
sti
daa
jge
cli
icebp
aad
das
jnp
dec
pop
pop
loopne
mov
mov
int3
or
pusha
jno
iret
push
mov
adc
outsl
cli
decl
in
out
mov
pop
mov
std
jbe
sbb
movsl
mov
sbb
inc
repnz
imul
test
cmp
mov
lahf
mov
mov
ja
rol
aas
dec
push
std
call
lock
push
pop
je
add
push
out
inc
sbbb
add
cmpsb
lahf
loope
jns
ljmp
sbb
fmull
fisubs
clc
mov
push
push
adc
pushf
sbb
inc
sbb
pop
lcall
dec
xor
or
jle
mov
jmp
lock
or
bound
sub
or
roll
sub
mov
arpl
addr16
out
sbb
jo
loop
xchg
stos
subl
cmp
leave
add
mov
enter
adcl
add
ja
js
rcrb
pop
cmp
addb
xor
scas
xlat
xorl
mov
pushl
aas
add
cmp
ja
mov
pop
inc
fidivrl
push
mov
xor
orb
clc
cmp
out
and
xchg
inc
dec
iret
mov
push
xchg
cmpsl
pop
jg
jle
jecxz
mov
outsl
adc
gs
push
jb
inc
clc
mov
lahf
ds
add
fisubrs
cli
in
or
fiadds
imul
jbe
int3
daa
mov
mov
add
lea
pop
decl
cmp
xor
or
insl
xrelease
add
into
rcrb
pop
lcall
aam
pop
cs
dec
and
mov
push
testb
invd
push
pop
aam
aaa
std
incl
pop
adc
add
lahf
inc
nop
xchg
sub
js
jmp
xor
mov
pop
orb
mov
int
arpl
movsb
sub
fimuls
call
out
daa
aaa
and
push
les
or
jl
cmpsl
mov
push
jae
or
sahf
test
push
or
sub
loop
pop
mov
inc
lret
dec
xchg
ss
adc
incl
fcomps
push
jecxz
xor
popf
xlat
or
sahf
push
jne
lds
addr16
pop
loopne
pushl
jo
insb
divl
xor
or
dec
mov
cmpsl
ljmp
orb
cmpsb
mov
add
jnp
hlt
inc
xor
scas
inc
pop
mov
mov
mov
mov
xchg
stos
cmp
sub
mov
adc
into
mov
pusha
daa
inc
div
inc
sbb
mov
mov
imull
cs
dec
shll
incl
stos
sub
jp
rorb
lea
movsb
les
add
test
sbb
rolb
movsl
push
addb
jnp
das
mov
push
fstps
out
xchg
adc
mov
mov
jg
pushf
and
clc
jmp
jae
movsb
sub
loopne
fwait
sbb
mov
jb
test
cmc
out
test
pop
inc
imul
mov
loope
jns
hlt
jg
aad
inc
xor
test
add
xor
jmp
mov
dec
dec
ljmp
in
lock
in
filds
int3
push
jg
add
mov
call
dec
dec
mov
in
adc
insb
popa
insb
test
addr16
stos
jmp
pusha
push
pop
pop
xlat
std
call
fs
lods
loope
and
mov
getsec
pushw
mov
jmp
inc
lods
dec
push
dec
pushl
rcrb
jge
push
movsb
jmp
aad
stos
and
mov
lock
sbb
or
mov
es
mov
jo
aam
jae
data16
call
push
imul
popa
add
sbb
mov
lcall
push
xchg
negb
in
enter
push
mov
test
push
dec
dec
mov
clc
decl
mov
push
faddl
out
push
add
mov
divl
lcall
mov
jo
inc
in
mov
stc
cli
push
adc
fsubrs
out
add
lea
stc
notb
lods
dec
loop
les
cmp
sub
sbb
jno
jl
lcall
push
push
cmp
cld
addl
add
inc
inc
sbb
adc
sti
cld
pop
movsb
sub
xor
ds
ja
sarl
aaa
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
jp
sbb
in
cmp
insb
loopne
push
incl
xlat
jne
stc
fldcw
les
fdivs
push
inc
xor
dec
aad
jmp
lea
adc
ret
lds
mov
pop
pop
push
ret
or
pop
dec
add
aas
sbb
cs
into
xchg
sahf
and
adc
or
xchg
mov
xor
mov
std
push
push
scas
inc
popa
and
imul
xor
jge
cmc
sub
inc
mov
inc
sbb
lods
ds
adc
jb
in
cmp
push
mov
fs
jbe
jmp
nop
xor
adc
mov
jae
lds
mov
xor
push
sbb
mov
xor
repnz
leave
dec
movsl
xchg
call
cs
cmp
scas
push
xchg
xchg
pushf
stc
mov
ljmp
clc
es
sub
xchg
cmp
sbb
imul
roll
jnp
imul
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
pushl
lods
adc
cmc
sub
sbb
mov
addl
inc
rolb
pop
fisttps
pop
mov
cmp
cs
insl
mov
pop
inc
mov
inc
rorb
ljmp
stos
mov
aas
lret
push
test
mov
stos
push
mov
dec
add
mov
cli
dec
push
push
xor
mov
mov
or
sub
jmp
roll
pop
sbb
popa
fwait
xchg
mov
dec
inc
leave
fxch
jle
bnd
ss
lcall
sbb
and
dec
sbb
mov
adc
ret
cmp
in
dec
aaa
aaa
in
iret
mov
incl
clc
sti
inc
inc
rep
sub
cltd
xchg
lahf
jmp
push
cld
lcall
push
fmull
mov
pop
mov
lods
ja
jne
and
outsl
out
cmp
adc
inc
cmp
fstl
cmpsl
fmull
rclb
data16
daa
into
dec
sbb
cs
ret
mov
xlat
jle
nop
fisubrl
xor
lahf
mov
aaa
cmpb
sbb
fcomip
add
icebp
dec
push
ja
insl
inc
lret
lret
sbb
ret
sarl
and
call
in
cmc
jmp
cwtl
inc
xchg
out
mov
je
loop
xchg
cmp
fisubrl
bound
lock
ljmp
and
test
mov
push
gs
jge
mov
and
jmp
add
jg
lcall
decl
and
arpl
testl
or
xchg
andb
sub
rcrb
xchg
jnp
sbb
fisubl
jle
adc
fsts
mov
out
add
pushl
test
lea
je
lods
adc
xor
push
mov
cld
subb
decl
xchg
outsl
jae
cmc
leave
test
int3
add
push
outsb
ret
sbb
popa
inc
data16
sbb
or
bound
add
dec
cmp
clc
and
pushf
popa
in
ljmp
imul
addr16
mov
mov
pop
xchg
shlb
jmp
stos
cs
dec
cs
jp
in
test
clc
and
cmc
cmovl
sub
ret
pop
push
sbb
jl
mov
jb
repnz
movl
pushf
pop
adc
fwait
test
sbb
test
or
lcall
hlt
add
mov
add
sub
pushl
cmpsb
leave
and
mov
fs
clc
dec
js
jge
adc
incl
xchg
dec
cltd
out
cmp
xchg
and
add
scas
add
jns
mov
mov
and
cmp
fs
outsl
mov
hlt
inc
ljmp
add
ljmp
bound
sbb
or
lea
iretw
adc
mov
mov
imul
and
mov
in
jbe
pop
xor
aam
xchg
mov
xchg
loope
rcl
sub
es
pop
fidivrl
push
pop
push
pusha
inc
push
xchg
icebp
pop
loopne
pushl
adc
lret
add
xor
adc
push
lcall
mov
outsb
jne
in
jge
jo
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
inc
mov
dec
cwtl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
jnp
jmp
pop
mov
rclb
mov
push
pop
push
sub
jecxz
loop
mov
stos
push
adc
jecxz
stc
fs
lcall
add
jmp
out
push
ss
adc
movsl
data16
push
jns
jae
daa
imul
and
lcall
stos
ret
push
mov
or
add
push
rclb
pushl
shrl
movhps
jne
add
cld
insb
add
sbb
ret
ds
aaa
incl
sarb
jns
xlat
aam
add
pop
movsl
cmpsb
into
jg
sar
jb
ja
or
push
lret
xlat
std
mov
sbb
outsb
inc
sbb
jmp
decl
and
int
rcll
pop
fsubr
pop
cmp
cmpb
call
inc
cmp
fildl
dec
adc
sub
or
mov
lods
insb
xchg
sbb
decl
xchg
mov
mov
lea
jg
repnz
xor
stos
jns
pop
mov
xor
test
loope
fucom
and
mov
pop
jmp
dec
rorl
sbb
adc
dec
jae
push
mov
jb
jo
in
or
les
dec
ds
cmp
stos
pop
rcrl
inc
xor
ljmp
outsb
sub
scas
ret
mov
mov
das
cli
inc
or
ljmp
and
pop
dec
in
inc
shll
add
data16
mov
pop
lcall
adc
adc
xor
out
adc
lahf
xlat
or
pop
subl
ljmp
cli
pop
int
cmp
mov
push
sub
icebp
sbb
cmp
push
jmp
into
xchg
push
inc
adc
mov
xor
data16
test
js
mov
sub
push
mov
lcall
sbb
adc
cmc
fnstsw
fs
fidivrs
jns
bsf
cmp
xor
ljmp
adc
call
mov
mov
cmp
adc
aam
pushf
aam
xchg
cmp
mov
inc
or
mov
pop
dec
mov
jge
fists
lahf
mov
cmp
and
jmp
out
imul
sbb
xchg
xor
mov
push
out
mov
aad
mov
aad
icebp
inc
call
bound
stos
sub
mov
in
pop
andl
daa
mov
int
fists
hlt
mov
ljmp
mov
cs
fxch
pop
push
mov
xchg
sub
inc
rcrb
jae
mov
pop
add
icebp
hlt
or
je
mov
mov
mov
out
dec
decl
mov
or
mov
mov
jae
jge
pop
sti
out
sub
mov
jo
aas
clc
cmp
test
adc
and
mov
jg
adc
mov
cmp
fsubs
test
xchg
dec
and
mov
dec
loopne
push
pop
add
mov
jmp
mov
ja
in
jb
add
outsl
gs
jp
or
es
and
ja
jmp
test
into
xor
cmp
mov
jl
jg
jp
lods
or
in
insb
lcall
push
fs
jle
mov
sub
fbld
rcl
push
push
lods
xor
sub
cld
adc
loop
test
ret
stc
sbb
rcl
cmp
and
movsb
incl
add
jg
call
xchg
fdivs
sbb
fdivrp
dec
mov
pop
dec
push
bound
jmp
xchg
jecxz
add
leave
orb
xchg
sbb
inc
inc
stos
lods
xor
mov
in
in
es
pop
jb
sbb
test
ljmp
jbe
and
sbb
das
sub
movq
js
nop
sbb
das
add
pop
addr16
mov
pop
cli
jp
sbb
imul
call
sbb
ffreep
ja
insb
das
mov
xchg
xor
mov
fisubs
imull
je
test
lcall
sub
iret
fmul
hlt
pop
add
pop
xor
int3
fs
lcall
push
pop
mov
in
mov
xchg
jns
lds
mov
mov
jbe
subb
push
ds
lods
push
insb
push
pop
out
daa
lock
sub
lea
call
push
or
dec
aad
data16
hlt
in
negb
cmp
shlb
sahf
cs
and
call
or
enter
lods
dec
test
mov
or
scas
pop
ret
mov
cmp
adc
lock
xor
dec
shll
ret
stc
es
mov
jg
sarb
jmp
scas
pop
dec
mov
cmc
ret
xchg
push
lret
bound
pop
sub
sbb
rcr
into
jg
fstps
fdivrs
call
jne
dec
pusha
sar
outsb
cld
push
imul
test
mov
sub
cli
fbld
mov
inc
popf
push
jmp
mov
jle
adc
mov
ljmp
cmp
lret
pusha
mov
mov
inc
lds
fstpt
ljmp
mov
fstpt
jg
cmp
xor
pop
inc
and
fisubl
push
inc
call
call
xchg
insb
mov
incl
cmc
pop
and
cmpsb
xchg
mov
cld
fcoms
and
nop
scas
sub
dec
or
lods
int
mov
idivb
inc
or
nop
insb
lcall
xchg
mov
jae
jb
jne
push
push
cmc
mov
xchg
decl
mov
rolb
addr16
scas
jo
xchg
fstp
or
lods
stc
push
push
incl
xor
pop
mov
lds
cmp
jmp
fwait
sub
in
jmp
imul
sub
sub
iret
mov
mov
decb
pop
movsb
dec
mov
decl
cmp
mov
xchg
inc
lret
push
call
fsub
pop
pop
dec
jno
push
pop
test
lods
mov
ret
lds
fimuls
aas
outsl
cli
incl
orl
push
out
add
or
and
xchg
cmc
aam
sar
push
mov
dec
cmc
sub
pop
mov
insb
and
adc
pop
cmp
jmp
and
mov
or
ret
aad
jbe
and
xchg
scas
sahf
adc
call
call
cli
and
dec
cmp
in
mov
dec
cld
ds
std
incl
rcrl
aam
ret
xchg
dec
pop
cmp
ljmp
inc
sbb
sbb
loope
adc
push
inc
insl
imul
dec
lret
adc
or
insl
mov
xor
fcompl
je
scas
in
xchg
xor
out
decl
xchg
xchg
arpl
mov
sbb
insl
repz
or
push
arpl
jmp
cmpsb
fimull
insb
push
ja
arpl
sub
push
mov
xchg
xor
adc
mov
xchg
stos
add
setle
mull
stos
mov
daa
or
decl
stos
mov
nop
cmp
in
enter
mov
hlt
push
test
and
pop
jge
dec
pop
rcrb
sbb
scas
imul
subl
lahf
int
fdivl
lods
jmp
lcall
enter
popa
std
jle
cmp
xchg
pusha
dec
decl
add
sbb
mov
insb
jne
out
rorl
jmp
cmp
cmp
cmp
sub
clc
sub
mov
in
lret
call
andb
push
sub
push
cmpsl
lods
xchg
in
bound
adc
pop
pop
push
insl
inc
jmp
das
jbe
pop
lahf
mov
sub
inc
aam
daa
jl
popf
adc
sub
mov
pop
int3
inc
jnp
mov
mov
pop
pop
pop
xchg
jo
test
sub
sbb
pop
bound
jnp
jp
or
rcr
arpl
rcll
push
movsl
enter
cmc
pop
loopne
xchg
popf
or
lret
mov
ljmp
mov
roll
xchg
aad
sub
aam
sbb
lcall
out
mov
cmp
mov
bound
sub
cmpsl
mov
add
sbb
mov
xchg
mov
or
mov
daa
dec
jp
mov
decl
in
hlt
add
jg
sub
cmp
dec
dec
mov
push
pop
mov
and
ljmp
xor
adc
ret
adc
sbb
inc
cmp
out
xor
inc
out
mov
mov
pushf
add
inc
mov
testl
pushl
pushl
adc
mov
add
gs
test
cmp
mov
sub
pop
loope
inc
adc
js
ret
incl
scas
xchg
divb
cmpsl
sub
sub
dec
add
xchg
iret
mov
and
mov
push
mov
sub
fs
loop
xorl
loope
mov
lock
pushl
xchg
adc
imul
sub
into
mov
pop
cmp
aas
ljmp
mov
xchg
cmp
adc
pop
int3
mov
int
add
incl
outsl
add
sub
ret
mov
cmpsb
jp
dec
aam
andb
xor
int
pop
pop
andl
les
mov
popf
sub
hlt
xor
cmp
loop
movsb
insl
sub
jmp
popa
xor
cmp
mov
add
mov
cld
enter
sahf
loope
pshufw
push
adc
jmp
cmpsb
jae
xlat
push
clc
ds
sub
ljmp
push
shlb
dec
loope
adc
dec
std
xor
sub
mov
lods
mov
push
pop
push
lods
adc
adc
cmp
mov
insl
xchg
lahf
sbb
or
xor
jns
int
js
sbb
pushl
decl
insl
test
mov
xor
fstps
xor
mov
cmp
mov
addr16
push
vmovhpd
jl
xchg
jmp
mov
sahf
sahf
xor
sbb
dec
lret
or
inc
push
adc
shrl
jb
mov
pop
out
mov
std
pushf
bound
or
adc
movsl
adc
ljmp
xor
hlt
mov
cmpsb
xlat
les
call
call
jecxz
jnp
jp
ja
sub
sbb
imul
mov
enter
jnp
loopne
xlat
int3
shlb
push
pop
dec
imul
adc
dec
out
mov
clc
push
lahf
arpl
gs
sbb
sbb
mov
jae
cmpsl
mov
xor
call
loopne
mov
fadd
pop
or
cmpsb
out
mov
xlat
inc
cmp
jg
repnz
push
cs
mov
jbe
jnp
data16
or
mov
mov
dec
push
cmp
loopne
push
test
cmp
mov
pushf
mov
jl
stos
call
insb
scas
int
mov
pushf
sbbb
adc
xchg
es
pop
ljmp
sbb
mov
or
mov
add
mov
ljmp
jmp
out
in
xchg
push
stc
enter
movsl
cmc
pop
jg
pop
jb
test
add
pop
lret
lods
inc
popf
aam
ret
adc
push
jl
dec
fmull
push
pop
adc
adc
or
sub
mov
xchg
jp
stos
inc
jmp
mov
push
fst
sub
push
movsb
aam
inc
cmp
in
repz
sub
jo
xchg
int3
mov
mov
arpl
push
in
xchg
xor
dec
ret
xchg
jns
call
fcmovu
repz
popa
xchg
and
imul
test
add
mov
insb
xor
or
lods
cmpsl
adc
xchg
insl
faddl
mov
ljmp
and
loope
jb
flds
and
xor
inc
sbb
stos
repz
mov
pop
dec
call
outsl
adc
into
in
sub
mov
sub
mov
pusha
and
mov
stos
cmp
out
mov
test
jae
pushl
sbb
push
cwtl
and
jl
mov
sar
loopne
shlb
mov
filds
sti
xlat
sub
pop
std
jg
rclb
mov
sbb
js
inc
popa
sti
mov
repnz
mov
cld
lcall
push
mov
xor
leave
nop
shrl
cmp
hlt
fwait
mov
pop
loopne
push
mov
daa
sbb
mov
cld
call
cmpsl
pushf
lock
or
xchg
in
xchg
adc
test
jg
pop
cmp
push
jne
xchg
mov
subl
fwait
push
insl
nop
fcom
pop
ljmp
pop
sub
push
cmp
jnp
mov
dec
outsb
popa
das
mov
pop
sbb
xlat
sarb
adc
mov
nop
mov
test
jno
dec
push
sub
cmp
push
enter
mov
sub
divb
adc
out
xor
or
sub
movsb
in
outsb
incl
xchg
and
lods
xchg
jmp
cs
test
sti
mov
jg
scas
dec
mov
jp
daa
xlat
add
orl
xchg
pushf
inc
sbb
dec
add
repnz
push
sub
push
mov
sub
ja
xchg
xor
inc
push
xchg
push
test
mov
incl
xor
stc
loope
inc
repnz
pop
mov
es
mov
stc
sub
inc
lret
shll
aam
xchg
fistpl
popf
les
outsl
lods
xor
sbb
enter
push
or
xlat
lcall
mov
jg
dec
sub
sub
shrb
or
ljmp
jbe
inc
out
ret
and
xor
pop
clc
xor
int3
xchg
mov
loop
call
loop
aas
inc
repz
pop
jmp
mov
insb
add
push
jg
jle
push
je
xchg
pusha
test
js
add
aad
cmp
inc
mov
add
jno
imul
ret
push
mov
mov
insb
inc
jmp
inc
adc
cmp
scas
or
inc
mov
decl
jae
push
fisubs
mov
jae
jle
add
mov
xlat
or
ljmp
pop
sub
mov
out
imul
sti
mov
cli
inc
pop
repz
cmp
cmp
push
icebp
es
cmp
xchg
daa
push
cmp
push
jge
adc
ljmp
mov
xchg
pusha
push
shl
inc
ffree
imul
out
sub
add
cmp
pop
scas
push
mov
mov
sbb
clc
push
or
in
daa
jle
push
leave
mov
popf
aas
mov
mov
jo
jbe
xchg
data16
fwait
jb
mov
mov
jae
negl
mov
cwtl
jmp
out
ret
dec
adc
ficoms
decl
lock
push
ret
fbstp
push
mov
ljmp
push
adc
add
aaa
cld
ljmp
ficomps
push
mov
sbb
fs
xor
clc
loopne
fmulp
or
out
jecxz,pn
dec
lock
sub
jl
xorl
xlat
mov
or
add
das
das
ret
out
jle
or
in
cmpsl
jg
fwait
mov
jecxz
dec
mov
subl
inc
xor
je
dec
decl
data16
imul
xor
mov
jle
push
jae
popf
es
fildll
fiaddl
aam
adc
push
decl
ljmp
je
inc
out
push
push
xlat
sti
jl
or
shll
push
fs
push
dec
pop
sahf
in
xchg
mov
jbe
or
pop
outsl
xchg
ljmp
call
call
clc
clc
xchg
sbb
push
jmp
cmp
out
xchg
push
jecxz
std
call
xchg
push
ror
and
sub
leave
and
jno
sarl
dec
xchg
or
call
jbe
xor
lods
inc
mov
arpl
mov
jno
push
jmp
sbb
and
mov
jbe
shlb
mov
ljmp
sub
mov
mov
sbb
je
stc
mov
daa
faddl
aad
sar
out
fwait
sti
jg
mov
dec
cmp
sti
pop
pop
xchg
in
add
ljmp
mov
push
insb
fcmovu
adc
gs
std
stos
ss
out
pushl
push
jmp
sub
pop
arpl
xchg
out
or
movsb
popf
in
mov
loopne
addr16
or
imul
jg
movsl
out
pop
or
push
add
arpl
dec
inc
call
loope
movsl
movntps
push
or
mov
push
in
and
and
mov
call
and
mov
orl
push
fwait
iret
dec
ljmp
dec
push
add
iret
adc
mov
popa
ja,pn
in
xor
or
mov
cmp
cltd
decl
mov
push
cmp
inc
adc
shll
mov
mov
mov
data16
and
fnstcw
push
fldenv
dec
fcomps
pushf
test
decl
xchg
inc
jne
pushf
enter
mulb
jne
popf
fidivrs
sti
push
add
jp
xor
sub
mov
sub
xlat
cmc
sbb
movsb
xchg
xor
cli
fidivl
jbe
pop
jnp
xor
mov
sbb
test
fnsave
inc
push
hlt
mov
in
outsb
fcompl
xor
pop
cmp
ret
ljmp
jne
jo
sbb
adc
add
insl
dec
outsb
mov
jg
pusha
cld
rol
push
dec
lea
push
cmpsb
aas
sti
lcall
test
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
sar
jg
add
inc
arpl
ficompl
xchg
ja
aad
outsb
inc
pop
std
cli
mov
test
or
mov
adc
hlt
ljmp
mov
fwait
dec
loop
shl
cwtl
and
push
loope
cmp
icebp
pop
cmpb
xor
and
xchg
xchg
fcomip
pushl
pop
popf
inc
arpl
inc
cmp
mov
mov
xor
mov
call
inc
xlat
or
int
mov
sahf
fst
jle
js
jo
dec
or
dec
inc
sub
ljmp
jb
nop
dec
mov
cli
sbb
or
call
cmp
popa
push
sbbb
popf
push
loopne
shr
add
xchg
out
xor
sbb
nop
jnp
and
inc
mov
les
and
xchg
test
in
mov
jl
jg
fcoms
pop
insl
push
jecxz
mov
fisubl
std
lea
mov
pushl
std
fldenv
fistl
push
push
lret
imul
out
js
fiadds
sarb
cmp
mov
pop
stc
mov
fistl
repz
sahf
mov
jo
mov
imul
ljmp
push
mov
xor
xchg
inc
mov
jae
jae
xchg
cs
push
jbe
xor
mov
jl
mov
xor
loop
sub
mov
sbb
je
sbb
cmp
jle
mov
lock
cwtl
cmp
push
cltd
dec
addr16
pusha
jp
rclb
outsl
adc
xchg
jbe
ljmp
xor
ret
sbb
mov
cmpsb
inc
loope
lcall
decl
lods
mov
cmpsb
outsb
fidivrs
mov
push
xchg
and
xchg
sub
cmp
shrl
in
add
bnd
add
jne
push
lcall
insb
in
jle
jno
xchg
repnz
add
dec
mov
push
push
jno
xor
adc
cmpsl
out
mov
pushl
pop
jle
mov
incb
test
icebp
sbb
test
daa
rcrb
mov
fcomip
ljmp
pop
pop
gs
adc
mov
pusha
or
gs
pop
inc
add
in
addr16
push
cmpsb
mov
rolb
lcall
sbbb
cmp
dec
mov
int
fisttpll
cbtw
cmp
xor
decl
nop
sbb
pop
and
int3
popf
lock
sub
sbb
inc
fcompl
xchg
jmp
idivl
lret
int3
jb
and
add
out
addb
nop
call
mov
movsl
roll
inc
jmp
cmpsl
jl
aad
or
sub
and
add
cmp
fs
pusha
sub
cmp
stos
push
or
in
xchg
sub
loope
sti
mov
lea
das
jne
mov
rcll
jno
fwait
pop
add
dec
or
loopne
call
push
fwait
mov
push
jp
addl
pop
sar
inc
cmpsl
xor
xor
pop
mov
adc
negb
cli
or
sub
sbb
js
repz
jmp
mov
incl
sbb
pop
pusha
shl
push
inc
int3
sbb
and
mov
in
call
lcall
and
mov
testl
fs
enter
lret
and
and
aad
mov
decl
dec
push
pop
popf
inc
add
mov
mov
dec
ds
lock
nop
sub
adc
mov
loop
xor
scas
push
adc
dec
call
lcall
mov
out
mov
pusha
out
mov
popf
and
leave
clc
push
xor
insb
jnp
cwtl
ret
stos
mov
pop
nop
int3
mov
shr
incl
pop
cltd
ret
rcr
gs
inc
dec
sbb
jmp
mov
decl
test
add
mov
loop
test
in
movsb
pop
fmull
hlt
or
mov
pushl
xchg
in
inc
int
jns
loope
cmp
call
xchg
add
jp
fwait
pop
jmp
in
in
cwtl
subb
movsl
pushf
mov
xlat
cmp
rclb
xor
jae
ljmp
idiv
mov
and
xchg
sbb
cmpsb
adc
mov
sbb
jg
and
clc
incl
sbb
or
fsubrs
jmp
ljmp
dec
data16
gs
mov
out
lods
add
push
orl
mov
inc
mov
or
and
push
test
aad
push
and
sarb
cmc
decl
lock
rolb
pop
mov
sub
push
pop
cwtl
add
dec
cmp
sbb
fnsave
iret
xchg
in
jle
loop
movsb
ds
mov
pop
mov
pop
stos
pop
out
les
insb
or
fisubl
out
sbbb
lcall
jns
lock
test
pop
sub
mov
xchg
cld
lcall
and
dec
cmp
cmp
test
lcall
roll
push
mov
dec
js
stc
inc
out
test
mov
rcll
pop
or
incl
mov
sbb
in
sarl
in
mov
cmp
inc
push
stos
lcall
decl
push
jnp
cmc
mov
sahf
stos
mov
hlt
mov
lcall
inc
cmpsb
call
loope
sbb
mov
mov
stos
in
and
jmp
pushl
cwtl
ficoms
fnstsw
push
dec
mov
add
loope
mov
divl
jo
ror
les
lcall
inc
xor
jne
mov
popf
test
mov
push
sbb
out
cmp
or
clc
idivl
pop
leave
push
and
sbb
icebp
dec
push
fdivl
mov
lcall
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
insl
test
cmpsl
mov
mov
call
add
rorb
xchg
cltd
call
or
inc
clc
and
add
sbb
jnp
popa
sub
xchg
sbbb
movsl
jl
pushl
cwtl
adc
or
std
bndstx
jmp
rorl
push
cld
add
or
in
cltd
and
jbe
push
push
cmp
sbb
insb
inc
das
daa
icebp
adc
push
pop
insb
sub
incl
lret
ljmp
mov
dec
cs
pop
sbb
filds
sti
cltd
aaa
leave
xchg
cmpsb
mov
arpl
insl
xor
dec
mov
test
jmp
outsb
repnz
lds
push
jmp
jnp
mov
or
xor
cmp
aad
pop
addr16
mov
call
fwait
outsb
adc
or
xor
push
sub
xor
jle
out
outsb
lods
and
jo
hlt
movsl
aad
incl
fildl
add
pusha
cli
jecxz
add
pop
pusha
sub
mov
scas
insl
out
lret
push
in
fcomp
out
lock
cli
call
add
nop
mov
add
pop
pop
xchg
fstpt
movsb
sbb
call
xor
lds
gs
mov
pop
inc
addb
xor
sub
mov
xchg
fistl
xor
aam
push
mov
or
adc
lret
jp
inc
loope
rorb
pop
stos
pop
pop
ret
sub
call
ret
popa
and
mov
and
pop
jnp
pushf
jge
or
dec
adc
jmp
fadds
ss
movlhps
into
ljmp
shlb
cmp
mov
mov
sar
sub
jecxz
leave
sbb
sub
insl
xchg
pop
mov
incl
cwtl
pusha
stos
imul
mov
imul
and
pop
xor
lahf
jo
jns
pop
lock
dec
ljmp
inc
int
mov
sub
sub
popf
dec
adcl
mov
lcall
rorl
leave
lea
jbe
sbb
fs
shl
cs
mov
addr16
xor
out
rolb
push
popf
lock
jnp
dec
pop
inc
loopne
call
jg
lds
test
or
mov
push
in
test
push
rcrl
jecxz
dec
inc
addl
cmp
xor
and
fsubrl
rcr
notb
cmp
ljmp
gs
mov
rcrl
or
inc
jmp
add
icebp
loope
jns
out
test
int
addr16
push
incb
lahf
push
pop
imul
outsb
push
xchg
ja
les
std
ret
mov
xor
outsb
pop
xchg
inc
data16
jmp
std
dec
stos
pop
into
das
fisubl
push
nop
push
pop
ret
or
xor
sbb
push
cld
xchg
stos
dec
int
inc
adc
leave
cmpsb
cmc
fnsave
icebp
jl
scas
lds
shll
call
or
sub
decl
mov
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
mov
or
repnz
cmp
aas
scas
clc
jg
std
adc
loop
mov
jl
cmp
pop
sbb
cmp
in
ljmp
dec
xchg
cmp
mov
jne
adc
jmp
repz
js
fs
inc
je
in
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
mov
shl
cmp
divb
addr16
filds
cwtl
bound
mov
shrl
sbb
jmp
dec
nop
xchg
adc
jg
jg
push
cmp
loope
int3
bound
cmp
cmp
call
daa
lock
aad
or
sbb
xchg
jo
push
ja
decl
pop
mov
xchg
jge
call
or
and
dec
dec
push
sub
lcall
mov
xchg
notl
es
scas
xlat
test
mov
cmp
push
push
std
decl
ljmp
pop
pop
lods
call
push
xchg
xor
push
inc
mov
jg
lcall
sub
sbb
dec
scas
sub
into
test
lock
decl
push
loop
pop
divb
push
dec
and
xchg
popl
mov
lock
jmp
add
aas
shrd
out
into
outsb
pop
inc
push
int
stos
cwtl
cmp
mov
out
test
int
nop
pop
ljmp
js
inc
inc
xchg
out
adc
cwtl
repnz
jmp
mov
sub
pop
out
mov
xchg
out
lret
js
cmp
sub
fwait
enter
mull
mov
fcmove
mov
pop
mov
out
daa
ljmp
cli
into
add
xlat
loop
dec
push
inc
inc
mov
jns
mov
ja
ljmp
fldcw
shlb
ljmp
jmp
mov
ret
adc
in
cwtl
pop
test
mov
aaa
ret
decl
push
mov
ljmp
xchg
jb
sub
sub
jge
lea
lds
mov
pusha
cs
pop
mov
dec
lods
xchg
aas
pop
sub
fwait
cmp
pop
xchg
xor
pushf
or
or
xlat
mov
inc
jns
jnp
lahf
pop
or
sub
loop
decl
les
dec
lret
mov
popa
cld
mov
sahf
pop
insb
jno
movsb
lods
sbb
ror
sbb
ljmp
dec
lahf
jmp
mov
nop
mov
add
push
push
xor
fcmove
lcall
dec
ljmp
imul
mov
or
add
ljmp
movsb
in
pop
cmc
mov
push
and
add
jmp
scas
adc
push
inc
adc
popa
push
int3
nop
push
add
sbbl
jg
outsl
cli
outsl
jp
push
mov
push
subb
xchg
imul
or
lods
pop
std
idiv
pop
bound
rol
xchg
cmc
push
in
test
cld
stc
jp
stos
icebp
jmp
das
xor
test
movnti
lods
jnp
jbe
fldcw
iret
loopne
jo
push
popf
sub
decl
decl
pop
inc
aaa
clc
cmpsl
aaa
xor
xor
out
clc
subl
repnz
dec
rcl
nop
loop
sti
push
pushf
mov
ljmp
add
adc
or
and
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jmp
loopew
cmpsl
push
push
jmp
cmp
jecxz
imul
jmp
xchg
scas
ss
push
int3
and
pop
jge
xor
adcb
jns
repnz
cltd
sub
dec
sub
lcall
and
addr16
push
dec
lcall
or
daa
fnstcw
xchg
mov
lret
add
jmp
stos
bound
test
int
adcl
push
jne
int3
outsb
jp
xchg
pop
mov
jmp
pushf
enter
cmpsl
xor
sbb
popa
xlat
outsb
pop
push
dec
sbb
add
push
je
jmp
fwait
mov
imul
mov
out
jae
adc
dec
or
sbb
pop
push
icebp
pop
jno
sub
lcall
pusha
or
mov
mov
jmp
push
jecxz
jl
push
mov
and
cmpsl
sub
jns
mov
scas
clc
jmp
movsb
push
and
sahf
mov
inc
aam
and
sahf
push
inc
insl
fstl
jnp
dec
je
lret
mov
in
lcall
pop
out
mov
loope
test
leave
cltd
aaa
std
and
movsb
add
pusha
andb
cmc
decl
lods
add
loopne
mov
pop
enter
jg
push
or
mov
outsb
cld
jo
xor
jns
shll
bound
xor
pop
das
jae
cli
adc
mov
sbb
sub
pop
xor
jae
jg
or
je
dec
pusha
dec
jmp
out
inc
jle
sub
add
cmpsl
lock
lcall
jns
cmp
or
aas
push
xchg
mov
jge
lretw
mov
mov
sbb
inc
xchg
movsl
mov
loopne
shll
jg
dec
jnp
shr
push
sub
pop
dec
daa
ja
mov
mov
add
mov
push
sub
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
ljmp
fs
es
call
jo
dec
int
js
sub
incl
sti
cmc
fwait
adc
push
cmp
lcall
fwait
sbb
adc
mov
pop
pop
add
in
and
pop
inc
push
unpckhps
cmc
roll
inc
xchg
cwtl
cmp
stos
decb
mov
xor
daa
call
cmpxchg
pop
rol
xor
and
decl
sub
pop
test
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
ljmp
push
loop
mov
out
push
aaa
aaa
mov
stos
pop
and
shrb
sarb
call
xlat
movl
call
nop
adc
sbb
std
in
iret
xchg
adc
xchg
cmp
cmp
pop
jne
das
cwtl
imul
xor
add
push
adc
fistps
js
xor
pushf
roll
push
sub
xorb
xlat
mov
mov
decl
in
add
rorb
jg
add
jge
mov
rorl
mov
cltd
mov
mov
cmp
pop
mov
repnz
js
sbb
xchg
cmp
arpl
mov
lods
scas
pop
jb
pop
lcall
call
xchg
inc
test
mov
jbe
out
mov
jno
dec
sbb
es
call
add
xchg
add
push
hlt
pushf
inc
hlt
inc
adc
lret
cmp
push
jl
mov
or
dec
enter
mov
jns
test
or
std
ret
inc
andl
clc
dec
ret
adc
sar
ljmp
inc
adc
mov
in
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
inc
fstpl
sbb
push
arpl
pop
push
ljmp
sub
sbb
xchg
test
incl
push
bound
iret
mov
fs
sub
test
incl
mov
gs
pop
mov
push
popa
test
cltd
insl
pop
push
mov
xchg
push
test
fcomip
push
mov
mov
push
inc
sbbl
gs
call
jns
or
xchg
pop
pop
mov
push
or
dec
mov
icebp
ds
mov
sub
pop
imul
ficoml
pop
hlt
push
pushf
push
sbb
sbb
mov
ljmp
push
pushf
ja
nop
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
int3
xchg
aaa
mov
std
jl
or
std
jne
pop
inc
loopne
incl
hlt
ss
mull
sub
add
jle
movnti
pop
mov
jle
sti
lcall
push
cmp
lret
sub
imul
or
jge
sbb
in
mov
mov
dec
arpl
push
push
adc
ds
sub
incl
cmp
out
push
pop
gs
xor
into
mov
cld
xor
mov
adc
mov
dec
pop
decl
jbe
pop
xlat
jnp
imul
cli
imul
jnp
adc
pop
dec
in
ret
inc
xlat
orb
cltd
jae
push
sbb
mov
jne
div
or
es
enter
mov
loopne
xlat
adc
pushl
mov
ror
cmp
shll
jg
int3
pop
insb
push
inc
negb
dec
std
les
je
lcall
out
sub
add
ljmp
fucomip
pop
push
outsl
xor
je
mov
dec
testl
jae
call
arpl
pop
scas
mov
clc
mov
dec
sahf
cmp
repnz
ljmp
push
lock
shl
mov
cmpsb
lods
aam
lahf
sub
mov
mov
jmp
push
imul
call
rol
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
jge
popa
mov
xor
xchg
push
lods
aaa
je
clc
js
mov
jmp
and
inc
rcll
xor
xchg
xchg
lock
jbe
xchg
lods
test
or
decl
pop
popa
mov
scas
rorl
cwtl
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
jmp
daa
je
lds
out
xchg
dec
jg
push
es
cs
push
pop
mov
cmp
int
dec
hlt
jbe
fldl
mov
push
outsl
dec
movsb
in
imul
xchg
incl
gs
imul
xor
mov
sbb
or
push
sbbb
dec
dec
xchg
xchg
sbb
fwait
mov
sub
add
cli
sbb
enter
jg
xchg
pop
js
inc
xor
aam
and
cli
imul
jae
push
mov
in
fistpl
jmp
push
push
testl
sbb
pushl
xchg
fmulp
shr
shlb
addr16
fldenv
jecxz
push
jle
fnstcw
mov
jge
incl
add
jae
ljmp
pushl
sub
incl
adcl
inc
jne
mov
in
mov
xor
dec
push
loopne
addl
push
sub
lcall
pop
add
sbb
popf
push
je
popa
or
pushl
enter
lock
into
dec
and
leave
pop
xchg
push
sbb
mov
mov
das
aad
into
sarb
daa
daa
lcall
scas
push
sub
adc
mul
ljmp
xor
jns
mov
sbb
scas
xchg
mov
fcomps
movsb
insb
lds
sub
in
adc
cmc
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
out
mov
popa
lret
rcrl
sub
adc
push
cmp
repnz
lcall
inc
insl
mov
jmp
push
jge
fwait
dec
dec
insb
xor
loop
lcall
inc
hlt
loopne
lret
mov
mov
xchg
pop
mov
test
shll
inc
adc
pop
std
decl
nop
xchg
add
cwtl
add
fwait
inc
outsl
movsb
pusha
cmp
or
call
or
icebp
shr
insb
aas
cwtl
leave
movsb
fcoms
fidivrs
sbb
decl
imul
icebp
fadd
js
and
movsb
and
jle
dec
imul
mov
sar
jmp
in
sub
repz
cld
dec
push
xchg
jne
lret
jo
pop
inc
or
movsl
adc
mov
ljmp
or
sahf
inc
push
daa
in
repnz
clc
inc
cmp
cmp
dec
aaa
jl
roll
push
jg
cmp
pop
data16
mov
rolb
cwtl
daa
xor
lret
cmp
jmp
lcall
jmp
xchg
add
jge
xchg
dec
xchg
outsl
sub
push
cmp
int
cmpl
decl
test
popa
data16
xor
fldt
dec
fwait
pop
sub
incl
lcall
and
sarb
mov
pop
xchg
xor
nop
and
enter
cs
repnz
iret
lcall
pushl
jns
push
jmp
les
imul
push
insb
dec
iret
aaa
push
orl
and
cltd
cltd
push
ss
cmp
sub
leave
popf
icebp
mov
xchg
filds
or
push
or
pop
xchg
sbb
pushl
pop
bound
ja
lahf
movb
mov
clc
cmp
movsb
es
lret
sti
pop
aam
decl
adc
iret
mov
pop
stos
add
inc
adc
enter
jns
fcmove
sahf
jae
leave
ljmp
adc
popa
fwait
mov
jne
or
xchg
cmpsl
lea
cmc
imul
fbstp
jb
in
cmp
xchg
insl
mov
lret
dec
cmpsb
push
inc
call
pushl
fcompl
jge
pushf
xorl
pop
dec
inc
mov
rorb
and
jmp
mov
popa
iret
adc
add
cmp
in
jp
test
cltd
or
out
imul
push
pop
xchg
sbb
jg
stos
fiaddl
jg
sti
jmp
and
sti
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
call
call
imul
mov
xchg
fs
mov
std
cmp
jg
lcall
jns
inc
push
jo
add
cmp
pop
div
mov
and
addr16
push
cmp
cmp
mov
aas
imul
push
cmp
clc
je
loop
push
stc
das
and
cmp
mov
sbb
mov
mov
decl
lcall
and
pop
sbb
pushl
adc
je
je
imul
je
dec
cmpsb
mov
aam
push
jno
inc
jge
adc
sub
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
decl
sub
push
sbb
movsb
outsb
xchg
sbb
subb
fstpl
incl
ja
outsl
lcall
sub
push
inc
or
adc
dec
pextrw
push
mov
sbb
jmp
in
ljmp
aas
movsl
or
sbbl
sbb
ljmp
call
leave
imul
repnz
jbe
jne
movsb
push
fcompl
les
clc
aam
inc
sub
dec
or
xchg
divl
adc
push
sahf
aas
mov
xchg
in
mov
mov
mov
jae
test
lock
cmp
mov
cli
lds
ljmp
mov
adc
sub
cmp
fiaddl
ss
jbe,pt
stc
cmpsl
inc
cld
mov
incl
out
aaa
stc
pop
cmp
jae
cmp
jp
lods
aaa
cs
fisttps
ret
or
test
jb
jecxz
lcall
jmp
fldcw
notb
dec
jp
jecxz
call
or
call
sarl
cmpb
xchg
scas
repz
or
cmp
outsb
mov
mov
sbb
dec
sub
or
mov
pop
and
adc
pop
sub
cld
out
pop
aas
incl
in
mov
push
cwtl
and
rolb
imull
imul
pushl
loop
aad
push
inc
xchg
lcall
push
inc
pop
rep
mov
mov
fstpt
incl
pusha
sub
dec
mov
test
bound
aad
mov
and
in
mov
inc
xchg
sti
sti
call
cmp
ljmp
inc
adc
mov
jecxz
in
mov
fwait
pop
ja
clc
jg
mov
mov
adc
and
clc
daa
xor
aaa
and
popa
cmpsb
in
insb
pop
adc
incl
adc
sbb
ret
mov
aad
xchg
movsl
add
mov
and
sbb
jl
and
jg
lcall
or
movsl
cwtl
fcomp
aaa
call
push
xchg
or
outsb
in
xlat
ds
mov
cs
adc
cmp
xchg
clc
jle
cld
je
dec
mulb
mov
out
cli
bound
dec
inc
movsb
lahf
pusha
in
out
inc
push
andnps
insl
mov
push
ss
aad
mov
popa
rcrb
inc
cli
ret
pop
stos
pop
je
cmp
inc
mov
push
out
clc
ljmp
stos
dec
pop
pop
in
pop
jl
je
jmp
pop
push
addr16
lods
andb
sbb
clc
add
jae
leave
in
and
sarl
mov
leave
pop
cli
loopne
dec
stos
sbb
fisttps
mov
xchg
dec
xlat
sub
in
repnz
push
faddl
pop
push
jbe
xlat
nop
and
lcall
or
jp
js
or
int3
or
adcb
cmpsl
mov
data16
fcomip
pushl
cmc
dec
push
sub
xor
and
jmp
jmp
in
not
fadds
fs
sub
jnp
and
xor
cmpsb
and
movsb
cld
push
lret
fs
xor
push
call
and
push
loope
pop
lret
je
pusha
push
fmulp
stc
je
loop
icebp
repnz
lods
int
orb
stc
sbb
jmp
aas
rorb
jle
pop
andb
push
lret
push
and
fsubrs
sbb
cmpsb
pop
mov
xchg
leave
push
hlt
sbb
mov
call
out
mov
js
xor
add
scas
popf
mov
lods
stos
sub
cmp
adc
repz
pushl
das
inc
xor
xor
icebp
cmp
mov
fsubrl
dec
cli
ss
pushl
enter
jae
aam
bound
mov
insb
sti
mov
xorl
pop
loopne
dec
fisubrs
lcall
ljmp
sub
push
pop
shrb
scas
xor
sbb
sbb
adc
pushl
jnp
sti
mov
inc
nop
or
lea
pop
adc
test
insl
aam
incl
xchg
test
dec
pushf
imul
daa
fcmovnu
mov
and
mov
dec
add
arpl
mov
fisttpl
xchg
test
jle
hlt
push
ret
inc
lods
lods
jge
shll
enter
jmp
aad
inc
popa
out
ret
pusha
xlat
sbb
das
test
and
jg
incl
dec
cmp
or
frndint
mov
lcall
sahf
cltd
loopne
and
lods
fdivrp
es
pop
or
dec
mov
add
push
adc
mov
fwait
add
fcompl
lahf
ja
leave
pop
pop
mov
cmp
cmp
inc
xlat
dec
mov
xchg
js
shlb
decb
std
fildll
rorb
push
ljmp
cmpsl
sbb
add
in
push
inc
pop
out
xlat
outsl
pop
push
inc
fnsave
push
and
in
incl
push
cmpl
add
mov
mov
aaa
test
dec
decl
push
addr16
lcall
gs
adc
addr16
popa
test
lret
mov
icebp
sbb
insb
xchg
mov
or
lcall
sub
setnp
in
jge
jl
adc
mov
xchg
add
dec
mov
scas
inc
dec
cmp
rorb
inc
iret
fisubl
imul
aas
jecxz
fdivr
arpl
sbb
and
sti
dec
filds
xor
jg
inc
repz
mov
xchg
mov
in
call
pushf
shrb
pop
cli
jge
cmpsl
nop
jno
popa
stc
dec
call
negl
les
xor
add
mov
push
ret
push
mov
hlt
jmp
lea
sbb
mov
jnp
insb
xor
mov
push
cld
jp
insb
jg
lcall
lds
cmp
adc
in
cmp
ds
adc
fwait
inc
out
arpl
insb
mov
mov
das
clc
cmp
adc
lret
arpl
fs
lcall
inc
fdivl
lahf
ljmp
jae
xor
lods
jnp
jge
cli
ja
mov
repz
mov
push
mov
decl
lcall
mov
mov
cmp
lret
mov
xor
lcall
fimuls
lret
mov
inc
jle
mov
call
sbb
xchg
stos
or
lret
fcomip
scas
xchg
mov
xchg
cwtl
or
pop
dec
in
scas
mov
rcll
inc
inc
adc
dec
imul
into
repnz
dec
push
test
lock
mov
movsl
pop
mov
jp
lret
pop
lods
sub
fisttpll
inc
jmp
lcall
nop
pop
scas
cmp
mov
or
stc
out
jecxz
xchg
fwait
adc
into
mov
pushl
push
mov
cmp
in
pop
test
das
xor
stc
adc
sbb
ljmp
dec
jno
in
xor
out
sub
cmpsb
sbb
dec
pop
dec
pop
sub
push
sbb
pop
jmp
cmp
ja
cmp
push
fdivl
into
sub
js
out
sub
incl
inc
cmpsl
inc
and
frstor
jle
or
movl
lods
inc
mov
mov
sub
rcrb
fisubl
iret
dec
std
jmp
cld
hlt
jns
add
push
lods
mov
push
das
roll
mov
or
jae
stc
pop
jmp
cmp
dec
shl
gs
decl
sbb
cmpsl
sarb
mov
cmp
rorl
lahf
xlat
xchg
mov
cmc
call
dec
out
nop
out
xchg
mov
mov
out
fwait
dec
mov
es
loop
or
fiaddl
andb
cvttps2pi
lret
mov
xlat
xor
call
push
in
xor
pop
xor
cltd
es
jecxz
ret
test
adc
sbb
jmp
sahf
jle
or
push
sbb
ljmp
fcomps
mov
sbb
ror
inc
cmp
cmp
ror
cli
jmp
pop
adc
pushf
pop
or
jbe
cmp
xchg
fbstp
dec
test
jbe
mov
aaa
sub
insl
sub
call
mov
cli
mov
push
cld
loop
scas
jnp
push
dec
inc
dec
ss
xchg
lcall
js
movsb
test
out
in
test
repnz
repnz
jbe
jae
fwait
adcl
mov
insl
xchg
int
decl
add
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
test
call
enter
dec
loope
jb
sbb
add
rcr
jg
rclb
push
cli
xchg
stos
idiv
lcall
lret
daa
cwtl
stc
mov
loop
daa
imul
push
jbe
jbe
stos
mov
test
fisttpll
add
sbb
ja
decl
in
inc
cmc
lcall
lods
pop
call
sub
sahf
lds
jmp
cmp
outsl
rcr
or
pop
jnp
cltd
jp
fwait
in
cmp
sub
fistpll
jp
push
jbe
sub
cmpsl
cs
mov
push
xchg
adc
and
das
cs
sub
jno
incb
add
adc
jmp
incl
out
xchg
enter
jmp
jno
dec
xor
or
int3
cltd
iret
add
xchg
pop
ja
pushl
cs
popf
fimull
int
xor
sbb
repz
sub
loopne
vandnps
lcall
adc
or
inc
movsb
sti
add
inc
mov
pop
call
sarl
jae
mov
mov
xor
inc
xchg
loope
push
sbb
cwtl
mov
pop
lret
lock
test
outsb
sub
cmp
mov
fimuls
decl
or
les
pop
rclb
pop
nop
and
sar
push
bswap
push
loop
divb
loop
ret
cli
loopne
dec
cmc
sub
add
fisttpll
xor
xor
fisttpl
pinsrw
lods
fdivr
imul
sub
call
inc
xor
fisttpll
jae
adc
shr
inc
adc
add
xor
push
or
incl
inc
and
adc
popf
mov
mov
mov
xor
mov
lea
inc
ja
lcall
dec
insb
mov
push
cmpl
out
icebp
ror
adc
pop
cld
out
pop
cmp
gs
in
pop
lret
push
mov
test
mov
test
stos
add
in
add
pop
sahf
push
iret
push
push
cmovl
add
ljmpw
pop
sbb
sub
mov
leave
inc
fsts
mov
xor
call
xchg
adc
mov
inc
repnz
shll
push
or
lds
in
sub
push
arpl
je
gs
enter
rclb
jb
cmp
push
push
jb
ljmp
cmp
push
repnz
mov
xor
push
insl
adc
push
rcr
mov
jmp
xlat
sub
test
cmp
cmp
add
mov
rcr
sub
and
push
mov
incl
ret
mov
push
repz
ss
sub
jnp
mov
jge
xor
incl
xor
jae
repz
inc
jne
adc
fwait
dec
adc
add
mov
call
xchg
cmp
adc
cmpsl
pop
lods
inc
call
pop
xor
stos
je
shl
mov
xchg
insb
rcll
sbb
repz
jmp
mov
pop
les
out
mov
setp
or
out
jne
mov
fdivrl
pop
mov
inc
bound
cmc
frstor
pop
insl
cmp
mov
lcall
sub
add
push
cmp
mov
dec
leave
or
sub
movsl
inc
or
jmp
mov
pusha
mov
iret
mov
xchg
lret
rolb
mov
movsl
push
mov
jmp
jl
or
es
loopne
add
mov
pop
ret
push
test
out
add
cmpsb
decl
and
xchg
xor
dec
sbbb
mov
add
add
data16
pop
stos
outsl
clc
cmp
out
push
sbb
mov
jmp
ja
inc
adc
fistpll
cs
jecxz,pt
pusha
test
subl
stc
stos
lahf
test
dec
jmp
lods
mov
addr16
lods
ljmp
cmp
std
lcall
mov
mov
daa
inc
lods
xchg
clc
cwtl
dec
lds
fwait
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
pop
movsb
jmp
lcall
adc
push
cmp
lcall
add
ljmp
cs
push
adc
jb
testb
mov
jmp
adc
and
ficoms
sahf
push
and
adc
mov
add
or
mov
fs
mov
mov
ret
inc
jb
clc
rcrb
pusha
jns
pop
ret
adc
and
pushl
rcll
push
mov
xor
loop
cmp
call
push
xchg
dec
mov
ret
or
test
pusha
scas
xor
ds
in
test
jo
fwait
int3
scas
dec
sbb
dec
ja
mov
aas
in
jecxz
shlb
ficomps
inc
and
nop
rol
and
dec
add
mov
das
pop
enter
push
pop
das
imul
ja
psllq
xchg
rcll
inc
stos
push
call
and
dec
mov
mov
test
data16
call
es
pop
inc
sbb
jne
jp
shrl
inc
jns
lahf
push
xchg
popa
inc
sbb
aaa
rolb
js
popw
std
incb
rolb
fwait
js
ljmp
inc
test
mov
arpl
xchg
stos
popf
push
test
test
incl
test
dec
stos
dec
sbb
icebp
sbb
push
int
inc
xor
mov
outsl
out
fsubl
incl
mov
mov
mov
icebp
xlat
adc
jns
aas
or
mov
sbb
xor
repz
and
pop
mov
bound
or
clc
call
repnz
aam
push
hlt
add
jg
jg
shlb
add
lods
mov
mov
fcomip
pop
mov
in
and
leave
mov
mov
mov
fidivs
xor
dec
pushl
cld
xchg
jbe
out
sbb
xor
lock
mov
jl
jmp
sub
ljmp
cli
jecxz
mov
dec
inc
cld
pop
int3
ljmp
jp
adc
decl
mov
sbbl
call
dec
and
loopne
int
jp
fstpl
sarl
stc
push
gs
adc
sbb
sbb
xlat
loop
aas
ud0
cmc
mov
ret
in
jle
es
daa
jecxz
leave
dec
cmp
jl
fmuls
inc
push
mov
cmp
lock
inc
sub
mov
lcall
pop
push
xchg
sti
sub
ja
xchg
aas
xorb
xlat
decl
cmp
dec
cmc
in
jmp
test
in
in
fstl
ds
data16
dec
addr16
lock
xrelease
sub
decl
inc
mov
cli
pusha
popf
sbb
inc
ret
leave
aas
jae
aam
sbb
call
lahf
aam
xor
js
xor
hlt
xchg
xchg
jae
xadd
mov
dec
arpl
push
ret
dec
je
hlt
xchg
movl
in
lods
and
icebp
push
mov
fidivrs
movsb
mov
std
push
out
or
mov
ss
lcall
push
mov
xor
je
jl
loopne
push
xchg
pop
movsl
aaa
adc
mov
or
ljmp
ljmp
lods
and
xchg
or
jb
xchg
je
shlb
fs
enter
mov
arpl
cmp
jnp
sub
aad
cmp
scas
inc
ljmp
shr
cld
jo
fs
sarl
int3
pop
xrelease
sbb
mov
pop
inc
pop
mov
mov
xchg
push
adc
jle
jb
pop
loopne
je
subb
and
mov
incl
cmp
lock
notl
cmpsl
jp
sbb
ror
dec
paddsb
jb
inc
movsb
add
call
cs
fstpt
and
andl
pop
xor
ja
hlt
repnz
setae
js
or
adc
jbe
lret
lret
test
pop
ljmpw
incl
mov
xor
rcll
or
xchg
mov
sub
and
aad
xchg
jmp
ljmp
call
mov
xor
loopne
daa
cmp
test
sbb
shrl
jl
decl
pusha
addb
xor
sarb
jg
mov
out
pop
andl
aad
test
out
test
mov
or
mov
test
dec
arpl
push
std
push
cmpsl
scas
dec
je
or
push
jo
push
rorb
xchg
ljmp
shrb
jo
into
inc
inc
ret
lcall
shlb
decl
mov
sub
fs
mov
xor
push
sub
dec
dec
push
leave
xor
icebp
mov
jbe
mov
mov
loopne
call
xchg
add
aam
incl
mov
lods
xchg
sbb
fcmovnbe
xor
mov
add
adc
leave
fcomip
pop
std
inc
xchg
jecxz
dec
pusha
cmpsl
in
cmp
loope
cmp
data16
fcomip
call
insl
adc
cmp
push
sahf
sub
imul
mov
cld
jns
xlat
dec
call
push
mov
shl
daa
mov
cmp
negb
sub
repz
incl
sbb
dec
cmp
aad
jne
jecxz
mov
and
xor
mov
or
inc
ljmp
lods
xor
xchg
pop
ss
jne
lret
push
call
push
aas
add
jmp
lods
mov
xchg
sbb
mov
divb
mov
call
add
addr16
and
add
pop
push
cwtl
jp
in
push
xor
ja
xor
jmp
shlb
cmp
fists
jg
jbe
fmuls
test
inc
out
lcall
jle
inc
push
out
sub
and
loopne
push
popa
or
test
out
out
out
cs
cmp
push
cmpsl
cwtl
sbb
imul
cwtl
or
lret
cs
xor
and
push
mov
sub
arpl
push
cmp
push
inc
iret
pop
xchg
or
and
imul
mov
mov
push
mov
stc
loop
ss
or
jmp
xlat
lods
es
arpl
and
ljmp
decl
cmp
jno
xlat
inc
lret
inc
xchg
pop
movsl
sbb
icebp
lods
movsb
outsb
push
ret
lcall
mov
sub
inc
inc
adc
jle
leave
clc
and
call
lcall
inc
xor
fs
bound
sti
xchg
pusha
cwtl
jle
inc
or
xchg
add
inc
adc
mov
imul
movsb
mov
xchg
push
fwait
ret
sbb
pushf
lds
and
dec
test
mov
push
arpl
in
add
icebp
push
cld
add
add
mov
inc
je
dec
fcomip
outsl
aam
mov
insl
jge
xchg
cli
int
jnp
add
mov
and
cltd
out
mov
sub
inc
sub
aas
mov
xor
fcomip
pop
aaa
mov
inc
push
data16
lock
mov
test
xor
cmp
mov
pop
sbb
adc
cld
jecxz
dec
iret
pop
in
pushl
jge
mov
fs
lahf
dec
cmpsl
outsl
inc
xchg
pusha
mov
or
call
push
jmp
stc
into
adc
insl
lret
loop
push
mov
cwtl
sub
lcall
and
das
cli
sub
repz
aam
popf
mov
mov
lods
stos
xchg
mov
ficomps
ss
clc
jl
jmp
mov
xor
das
xchg
ljmp
jle
lea
imul
sahf
out
loope
dec
mov
xor
pop
sub
cmp
movsb
repnz
insl
iret
insb
xchg
dec
and
jl
sub
mov
mov
aam
jge
cmc
loope
inc
decl
adc
lahf
movsl
data16
out
aad
add
ljmp
cwtl
decl
jge
mov
xchg
mov
sbb
aaa
stos
lret
lret
sub
lcall
push
fldcw
in
in
pop
mov
es
and
jns
repz
xchg
pushl
shlb
xchg
push
xchg
mov
addr16
daa
data16
inc
out
jl
inc
xor
fwait
daa
xchg
jns
lods
out
in
dec
or
xor
ljmp
cmp
push
outsb
roll
add
pop
and
fisubl
jmp
shrb
sti
add
fdivr
jmp
inc
jg
sbb
cmpl
mov
inc
ds
ljmp
pusha
es
popf
xchg
cmpsb
ljmp
insb
xchg
int3
imul
test
das
and
sahf
push
push
mov
push
sbbb
xor
lcall
mov
ljmp
sbb
inc
jge
mov
pusha
inc
mov
arpl
incl
or
xlat
into
daa
or
jl
lods
mov
or
mov
fwait
cmp
call
jo
pop
adc
push
fcoms
xorl
fwait
insb
push
cmp
lcall
sub
call
jle
push
jbe
inc
gs
outsb
lret
inc
pop
iret
jle
mov
xchg
lcall
adc
cmp
add
in
es
xor
lods
ss
scas
mov
xchg
mov
add
inc
pusha
push
push
cmp
jmp
and
pop
insl
imul
pop
mov
or
in
jecxz
xor
dec
mov
subb
cmpsb
adc
ja
jno
pop
cmp
and
xchg
jmp
clc
xchg
rcrl
mov
push
fldt
leave
test
push
test
das
out
test
cmpsb
adc
pop
out
std
stos
pusha
jno
fwait
sbb
mov
negb
lods
js
rolb
adc
aaa
mov
jmp
mov
sbb
adc
stos
js
sub
lds
adc
xor
push
icebp
ror
popf
mov
mov
jmp
pop
adc
xchg
orl
movsb
sahf
movsl
add
js
jo
sarb
decl
mov
movsb
mov
push
in
rcrb
fwait
sub
mov
in
pop
call
pop
mov
je
push
pop
and
out
sbb
xchg
sub
lods
in
addr16
das
pusha
pop
mov
lcall
nop
pop
push
pop
dec
mov
pop
and
movsb
sbb
xor
dec
ss
int
cmp
jle
incl
fldl
leave
clc
adc
adc
ss
xchg
gs
and
imulb
in
rcrl
mov
push
pop
sbb
lret
dec
popa
push
pop
or
enter
xchg
in
sub
lcall
popa
sub
sbb
jno
out
push
shll
fcos
lahf
shl
lret
sbb
cli
mov
push
sub
lahf
cwtl
fldt
sub
vmwrite
xchg
leave
cmp
jg
jmp
jmp
sub
push
in
gs
add
dec
call
dec
stos
fisttpl
test
push
sub
mov
inc
repnz
xchg
popf
cltd
mov
cvtps2pd
push
mov
mov
gs
pop
outsl
push
test
nop
out
lahf
jnp
fiaddl
cmp
and
lock
jmp
dec
pop
nop
lahf
rolb
jl
lcall
orb
push
icebp
push
std
das
adc
xchg
mov
pop
das
sbb
jl
andps
out
fidivl
push
mov
icebp
inc
pushl
adc
pop
aad
mov
jnp
decl
jg
mov
pop
lret
je
mov
test
pushfw
jno
cltd
ljmp
in
pop
dec
sub
or
mov
cmp
repnz
push
in
sbb
push
xchg
leave
or
and
shlb
mov
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
shrl
imul
lahf
outsb
clc
roll
mov
add
xchg
je
faddp
aam
ds
xchg
pop
pop
loope
rorl
cmp
sbb
dec
mov
inc
loopne
push
or
mov
test
sbb
add
jle
fwait
inc
jnp
xchg
mov
mov
scas
incl
adcl
repnz
stos
test
mov
rcl
lcall
xor
jbe
sbb
adc
call
push
cmp
jg
inc
sub
inc
repz
xchg
fcmovb
jge
jmp
rcrb
inc
push
rclb
ret
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
mov
repz
lea
ja
fadds
stos
sbb
and
inc
sahf
nop
mov
call
dec
clc
fdivl
sbb
movsb
test
xchg
popf
sahf
push
cwtl
dec
call
add
and
mov
pushl
xor
cmpsl
inc
fwait
inc
cld
es
push
sbb
test
pusha
cmp
sbb
sub
decl
cli
adc
dec
les
repnz
mov
cmp
adc
cmc
out
pushl
push
sbb
jge
leave
popf
xlat
js
push
fs
cmp
sub
sarb
xchg
xor
mov
xchg
xchg
mov
popl
pop
fnstenv
outsb
cli
xor
out
pop
arpl
mov
xor
pop
jno
lods
shl
inc
dec
repz
arpl
aam
stos
decb
lahf
adc
imul
sbb
pop
loopne
notl
call
adc
sbb
imul
out
out
dec
dec
scas
loopne
sbb
jmp
insb
stos
insl
int
push
jne
pushf
rorb
stos
out
pop
mov
in
xchg
or
lcall
add
xchg
sub
shll
popf
adc
push
jg
mov
test
aas
jmp
addr16
cmpsl
sahf
xor
push
jge
xchg
xor
lahf
aaa
cli
add
std
out
out
jb
xchg
jmp
mov
pushf
out
xchg
int3
push
popa
add
dec
stos
inc
call
std
das
mov
cli
inc
mov
inc
add
mov
lods
shl
iret
pop
xchg
inc
mov
enter
inc
fdivr
iret
sbb
in
test
test
dec
jmp
sub
or
add
xchg
aas
mov
fsubrl
js
inc
into
popf
cmp
jp
ljmp
shl
xchg
sbb
in
pop
adc
pop
xchg
add
dec
mov
fcomip
decl
repnz
pop
sub
loopne
retw
xor
dec
pop
in
imul
inc
fbld
pusha
nop
adc
bound
add
ljmp
jnp
js
push
in
je
xlat
cmp
imul
decl
imulb
xlat
filds
mov
xor
mov
bound
ljmp
test
stos
add
lock
cmp
push
mov
ja
mov
test
jg
mov
jns
in
clc
adc
pusha
scas
test
pop
and
lods
push
std
pushl
lahf
cmc
ror
lahf
push
ror
cmp
inc
add
jbe
jo
clc
jmp
dec
pop
jmp
jbe
push
dec
pushf
or
lods
jmp
add
icebp
loope
pop
sub
mov
xor
bound
mov
push
fcomps
popa
add
lret
pop
arpl
in
sub
sub
outsl
sarl
nop
mov
sub
push
push
cld
scas
xchg
hlt
or
rclb
sbb
inc
add
cbtw
mov
jp
xchg
push
movsb
xchg
push
push
mov
stc
jecxz
mov
adc
data16
mov
fwait
andl
pushl
lods
loopne
xchg
xor
stos
test
jmp
xlat
xorb
mov
call
std
jns
stos
push
push
pop
call
jmp
xor
lcall
js
in
outsl
xor
xor
in
inc
aaa
addb
incl
or
mov
loopne
in
shl
inc
js
mov
out
cli
decl
mov
inc
push
sub
sub
addr16
dec
dec
jle
mov
call
mov
dec
pop
sub
add
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
call
clc
enter
cli
xor
enter
dec
add
inc
push
fs
add
jo
dec
sar
ljmp
mov
jmp
dec
push
js
cli
sub
mov
test
test
in
movsb
push
and
inc
add
incl
mov
ja
mov
jle
xor
test
mov
incl
xchg
out
iret
cmp
inc
mov
xchg
ret
jmp
std
ret
push
mov
adc
push
mov
lods
sub
mov
lock
out
xchg
sar
lcall
dec
fwait
mov
shlb
mov
sbb
xchg
add
push
incl
loope
shlb
inc
lods
sub
ret
sub
jbe
cli
cwtl
jo
scas
clc
incl
scas
gs
pushf
sbb
rolb
fldcw
stos
jmp
inc
ja
scas
and
out
sub
xor
arpl
mov
push
pop
scas
aaa
mov
ljmp
mov
in
mov
jp
push
andl
adc
pop
pushf
sbb
lcall
mov
jns
mov
out
rolb
movsb
dec
rolb
mov
je
cld
mov
pop
lcall
mov
shll
into
ret
filds
sbb
xchg
add
pop
mov
mov
sti
dec
add
push
in
and
icebp
ja
cmc
lock
out
xchg
bound
or
push
int3
xchg
jge
lock
or
mov
lds
fcmovnbe
mov
jg
inc
inc
mov
les
js
cmp
imul
sub
cld
pushl
mov
scas
scas
test
cli
xchg
inc
aad
js
push
cwtl
movsl
dec
jno
decl
xchg
push
lods
loope
cld
outsb
stos
mov
and
shll
movsl
ud0
ljmp
mov
in
sub
jae
rcrb
push
insb
ds
push
pop
mov
pop
lret
lods
pop
stos
fwait
push
dec
mov
mov
in
mov
js
cli
decl
cmp
pop
cs
addb
jns
stos
add
sub
fdivr
scas
movsb
push
cwtl
jle
dec
jmp
pushf
dec
es
sarb
repz
ljmp
sbbl
jbe
fdivr
insb
sbb
inc
out
mov
jp
pop
loope
xlat
popa
pop
sbb
push
rcrb
cmp
mov
push
add
jae
xchg
pop
je
jmp
push
repnz
push
test
dec
dec
shll
adc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
fldl2t
ficomps
cmp
mov
pop
xor
adc
repnz
lods
je
divb
sub
popa
lret
pushl
mov
dec
xchg
fimull
mov
sub
cwtl
mov
ljmp
xor
rcrb
or
lock
pop
pushf
cmc
addr16
aaa
std
enter
mov
mov
call
jbe
jae
mov
jmp
outsl
andb
xchg
pop
mov
mov
pop
in
out
in
sub
clc
aas
mov
mov
loop
cmp
outsl
daa
sbb
ret
mov
rorl
pop
aam
sbb
jmp
std
xlat
rcl
negl
mov
mov
pop
ljmp
les
mov
dec
mov
xor
sbb
iret
lahf
dec
inc
mov
call
minps
imul
fnstcw
repnz
mov
sub
ljmp
inc
pop
hlt
out
fmull
mov
add
ljmp
mov
lcall
sar
ljmp
sub
loopne
sub
jl
shlb
inc
and
cmp
pushl
bound
fdiv
dec
push
int3
fpatan
lods
in
mov
ljmp
push
test
adc
xchg
out
lcall
mov
call
rcl
aas
inc
clc
cmp
push
aaa
mov
dec
sahf
ffreep
enter
test
ret
pushl
sub
or
addb
stos
subb
aas
and
out
roll
daa
or
pop
das
dec
cmp
push
mov
mov
jl
rcl
mov
call
dec
sbb
addr16
xchg
mov
popa
inc
rcrl
je
push
jecxz
in
push
ret
insb
clc
std
add
jmp
jp
pop
mov
aaa
xor
clc
mov
nop
ret
sbb
inc
shr
loope
ljmp
into
les
and
shrb
repz
ljmp
jl
xchg
push
mov
roll
or
xchg
lret
insl
test
arpl
lret
sub
sar
xor
inc
imul
xor
les
xchg
pusha
clc
inc
jb
push
cmp
movsb
fldcw
push
sti
and
movsl
gs
imul
jp
xor
jne
sub
cmp
pushl
or
fistpl
adc
rcll
mov
or
or
popa
sbb
decl
sub
lods
lea
or
icebp
jb
mov
pop
inc
lcall
jg
fwait
out
mov
sub
int
jmp
mov
and
incl
test
cmp
cwtl
jge
repnz
and
mov
imul
into
leave
dec
cld
fcomip
out
xchg
insb
mov
push
arpl
inc
shll
xor
pop
icebp
mov
xchg
pushf
es
test
cmpsl
outsl
sub
push
shlb
cmp
decl
fnstcw
mov
fdivl
fisubrl
fsubp
inc
in
mov
ljmp
mov
scas
cmpl
xor
jnp
sbb
xor
dec
mov
push
or
repz
aas
xor
fnstenv
sub
jne
adc
jae
pop
scas
cli
decl
shlb
jbe
enter
or
decl
lea
daa
push
sbb
sub
push
xor
mov
xchg
jmp
shrb
sar
push
stc
and
push
mov
inc
int
fnsave
jae
and
shlb
in
div
les
pop
lods
mov
cmp
xchg
push
js
outsb
sub
inc
hlt
lret
and
sbb
scas
mov
xor
repz
or
mov
sub
neg
pop
add
sti
adc
lcall
filds
jecxz
push
scas
popf
das
divl
fsubrp
movsl
push
ss
mov
call
cmp
movsb
push
push
mov
pusha
jecxz
test
add
out
jno
jge
incl
aas
adc
out
dec
inc
es
cmpsb
call
in
in
out
or
call
shll
mov
movsb
fdivr
push
dec
sub
lods
xchg
xchg
mov
cmp
loope
movsl
or
sub
jnp
mov
aaa
test
inc
ljmp
in
xchg
fcoml
sarl
repz
movsl
mul
or
cli
daa
pop
out
add
jmp
dec
mov
adc
or
cld
bnd
sbb
mov
decl
test
clc
cmp
and
inc
outsb
cmp
aas
lcall
pop
shll
pop
sbbb
popa
bound
pop
cmp
leave
jg
cmp
call
cli
inc
adc
mov
dec
xor
inc
in
lea
cmpl
inc
icebp
movsb
xchg
popa
mov
test
cmp
out
pop
aaa
shl
scas
pop
dec
shll
jmp
movsb
push
ds
cmp
nop
das
ret
xchg
add
mov
push
enter
push
bound
in
out
pop
ret
add
mov
in
xchg
clc
mov
mov
add
int3
pop
jp
push
imul
out
lcall
pop
ss
mov
and
dec
loop
push
sub
pop
mov
fisttps
fs
movsl
cld
cltd
outsb
lock
mov
push
and
mov
and
jmp
or
repnz
jecxz
and
sbb
or
jo
lret
repz
pop
mov
push
popa
cmp
pop
insb
dec
adc
fsubrl
xchg
inc
insb
xchg
or
decl
add
ja
mov
ljmp
or
test
call
in
dec
push
pop
xchg
jbe
cmp
data16
les
mov
adc
push
int3
ljmp
pushf
jecxz
clc
jno
cmpsb
int
mov
mov
movsl
cmc
outsb
push
push
pop
movl
mov
test
push
pop
pusha
inc
fildll
neg
stc
cmp
adc
sti
into
cmp
push
imul
or
jge
mov
and
movsb
stos
mov
std
in
lock
ljmp
lahf
sub
mov
xchg
xchg
ja
sub
fbstp
sub
mov
add
nop
and
sbb
mov
push
icebp
nop
pusha
cmp
push
std
dec
xchg
mov
mov
push
ret
lods
or
aas
dec
std
in
and
push
push
add
and
addl
push
jg
xor
cmp
loop
fdivrs
call
fiaddl
lret
call
and
imul
mov
adc
decl
cwtl
out
movl
cli
dec
fdivr
cltd
push
orb
mov
fisttpl
xchg
ja
cli
mov
cs
sub
jns
pushf
jae
shrb
sbb
sbb
jmp
mov
sahf
sbb
xchg
xlat
leave
test
add
jb
mov
arpl
mov
add
adc
stos
iret
ret
fistpl
test
inc
cltd
shl
and
mov
decl
push
xchg
pop
or
pop
loopne
sub
inc
mov
and
pop
inc
repnz
lock
jg
iret
ds
aaa
popa
je
in
push
dec
xchg
dec
and
jl
adc
inc
or
aaa
cmp
enter
mov
jle
loopne
ja
mov
cli
les
cld
incl
add
jne
lock
sar
cmpb
sbb
loope
cmp
mov
mov
fdiv
in
inc
jb
xchg
pop
inc
xlat
rcrl
push
adc
mov
jb
jle
xlat
mov
jmp
and
add
out
adc
in
sarl
sub
mov
loopne
shrl
sbb
pusha
jo
mov
mov
notl
dec
cmpsl
push
mov
in
mov
int3
cmc
dec
pop
mov
add
in
js
loope
mov
and
mov
mov
fildll
push
sbb
fsts
inc
fistpl
sub
out
cltd
lock
negb
mov
addl
dec
lret
sbbb
nop
mov
inc
adc
push
ljmp
xchg
cmpsl
lods
sub
out
cmp
shlb
pop
das
pop
xor
hlt
xchg
inc
fisubrl
jmp
mov
rolb
xor
mov
mov
inc
pavgb
pop
cmp
addr16
ret
push
lahf
cmp
sbb
in
xor
sbb
call
mov
ja
jnp
fidivs
xor
dec
sub
sbb
pushf
pop
jmp
xchg
mov
scas
lcall
movsb
bound
push
pushf
sbbb
pushl
dec
lcall
lcall
add
jmp
lcall
or
int
pop
inc
xchg
in
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
cmp
mov
jp
jo
inc
jbe
jno
jecxz
fwait
push
xor
push
add
lock
lcall
or
inc
and
jnp
ds
dec
add
push
not
push
mov
test
push
sub
jp
je
or
ljmp
rol
cmp
xchg
mov
pushl
cmp
shl
aam
mov
sub
loope
push
xchg
fsubl
out
cmp
out
push
sub
insb
fisubl
cmpsl
popa
fldenv
ds
repz
jge
arpl
movsl
jmp
roll
sarb
inc
int
lea
cmp
ss
test
incl
sub
or
mov
jbe
insb
xchg
leave
in
in
add
mov
jo
in
imul
push
xor
xchg
xchg
jp
mov
test
mov
adc
out
into
shrl
inc
stos
xor
add
pop
fwait
mov
daa
fwait
xor
incl
imul
mov
sub
or
cmpsb
push
insl
push
into
dec
push
lcallw
jmp
push
test
mov
xchg
jae
and
les
stc
enter
cmp
adc
incl
cmpsb
sub
xchg
sub
or
jno
lods
xchg
mov
into
xchg
jae
fisubrs
pop
ljmp
push
in
sti
push
or
mov
xor
ljmp
cmc
dec
fmull
call
pop
adc
jle
sub
test
or
in
sub
test
cmpsb
cwtl
cmc
push
addr16
jns
in
hlt
mov
movsb
mov
push
in
cld
fmuls
adc
mov
icebp
mov
cmp
out
inc
out
pop
mov
jg
std
fs
xor
dec
out
push
mov
mov
add
shlb
movsb
icebp
call
mov
fwait
outsb
jae
mov
in
dec
in
xchg
dec
loope
xor
jecxz
xchg
add
mov
aaa
std
ljmp
dec
lcall
xor
adc
pushf
mov
mov
jmp
out
jae
mov
dec
mov
icebp
cmp
xchg
cmp
inc
mov
sar
pushl
add
and
mov
push
sbb
vunpckhpd
stos
mov
jg
ljmp
xchg
push
ret
xchg
shr
mov
pop
or
ljmp
gs
outsl
dec
jp
pushf
stos
fdivrl
push
mov
fcomip
mov
push
push
loop
or
xchg
pusha
bound
jo
int3
lcall
adc
idiv
mov
cmp
dec
scas
xchg
lahf
and
insb
mov
mov
sub
jmp
push
mov
test
enter
mov
movsb
xorl
mov
sbb
sbb
out
stos
test
jne
mov
mov
and
push
pop
fisubrs
or
mov
repnz
inc
jp
xor
aam
or
or
jmp
mulb
xor
sarb
cmp
pushl
std
fbstp
decl
cmp
sbb
cmpb
daa
jo
movsb
jb
lods
gs
push
loope
jmp
cmpsb
test
int3
stos
sarb
loopne
aam
int3
out
push
xchg
jl
negl
fs
push
jnp
sbb
lret
lds
decl
test
inc
cmp
imul
decl
add
call
outsl
popa
incl
mov
fdivl
ds
insb
add
jmp
cmp
mov
add
or
pop
or
cmp
fwait
testb
ss
dec
scas
sbbb
dec
mov
mov
out
or
ljmp
lcall
addr16
pushf
jmp
push
test
fsubrs
sub
sbb
es
mov
popa
ret
mov
mov
pop
jnp
adcb
nop
adc
xchg
rol
lcall
jmp
cltd
pop
out
dec
scas
xchg
sbb
pushl
mov
adc
dec
xchg
sbb
inc
in
test
dec
pusha
xlat
js
test
call
aaa
mov
or
pop
jge
pop
dec
mov
dec
test
push
and
stos
pop
lock
jecxz
adc
test
xor
mov
jmp
and
cmpsl
push
and
push
or
xchg
outsl
sbb
subb
pushf
cld
dec
int3
out
adc
or
in
dec
dec
imul
inc
xchg
scas
cmpsb
dec
pop
mov
jbe
pop
lret
rclb
push
xor
aam
lock
push
and
jne
and
push
jge
addr16
out
loope
sbbb
mov
mov
push
pop
sbb
aam
popa
or
xchg
ds
jge
popf
or
mov
test
lcall
jb
add
std
bound
jge
out
add
imul
daa
sbb
mov
cmpsl
in
adc
or
or
or
iret
adc
inc
push
jle
int
xchg
inc
hlt
clc
out
dec
mov
daa
mov
add
cmp
fs
in
cmpsl
scas
or
mov
orb
gs
jg
dec
push
out
sbb
shlb
iret
in
imul
leave
mov
out
jb
dec
decl
pop
and
cwtl
stos
mov
bound
call
enter
mov
rcrl
push
mov
das
and
outsl
inc
dec
sar
mov
shll
rcl
jno
dec
inc
xorl
into
xor
cmpsl
inc
jo
stc
xor
jg
ds
gs
insl
stc
pusha
xor
fdivs
rclb
or
in
mov
mov
lcall
in
mov
test
testl
xor
adc
lock
or
ljmp
sbb
pusha
push
jbe
push
divb
aaa
adc
std
adc
arpl
cmp
decl
mov
repz
daa
jb
js
jae
movsb
pop
inc
push
testl
jmp
mov
pop
daa
sub
or
ror
das
fildl
or
push
daa
movsb
add
ljmp
js
lahf
add
xchg
adc
incb
movsl
ja
dec
add
push
loop
leave
push
jg
shll
xchg
sar
das
push
push
inc
outsl
xor
orl
push
inc
sti
cmc
pop
bound
sar
fcomip
nop
jle
dec
mov
popa
jb
sti
cmpsb
cmp
mov
push
inc
sub
jmp
mov
shll
shll
cs
fsubp
sbb
adc
lea
pushl
nop
mov
mov
mov
jns
mov
pop
shlb
outsl
sbb
shrl
jecxz
ret
xchg
mov
pop
push
cmp
movsl
data16
jg
and
std
or
push
lds
out
rorl
push
dec
aaa
push
xchg
rcrl
mov
test
push
leave
decl
sub
mov
dec
lea
or
iret
dec
push
js
nop
mulb
stos
ljmp
outsb
and
or
push
pop
or
pop
jno
out
mov
adc
sub
outsl
clc
call
fdiv
pop
cmp
pop
push
push
ja
lods
adc
cmp
jp
aas
cmp
daa
cmp
jg
lods
or
adc
les
out
into
in
pop
gs
adc
incl
cld
repnz
lods
int
xchg
fwait
popf
sub
sbb
mov
push
test
scas
mov
idiv
pop
cld
roll
jb
sub
lcall
movsb
imul
unpcklps
push
nop
icebp
mov
outsb
mov
fisubl
and
push
scas
mov
mov
pop
call
and
or
in
dec
call
in
jg
or
mov
enter
inc
andl
sti
jg
pop
xchg
out
orl
add
mov
les
lds
add
inc
sahf
dec
pop
clc
lcall
stos
push
into
fimull
cmpsb
enter
mov
dec
jmp
out
jge
jmp
sub
ljmp
mov
rcrb
aaa
into
inc
mov
dec
nop
aas
incl
inc
pushl
cmpsb
movsl
mov
fdiv
push
bound
jnp
int
or
incl
lock
repnz
xlat
shll
pcmpeqb
push
hlt
inc
cmc
mov
and
lods
xchg
push
lods
mov
sbb
adc
push
je
lret
pop
lahf
pop
popf
in
jnp
ret
lret
push
xchg
mov
jmp
mov
ljmp
mov
inc
inc
ja
mov
xchg
lea
jg
shlb
mov
call
pop
pop
scas
jb
popa
fistl
sbb
or
cmove
fildll
lahf
loop
mov
or
push
daa
in
into
sbb
xlat
rcll
dec
xchg
mov
icebp
jg
mov
daa
or
lret
sub
xor
out
inc
cltd
push
jmp
add
test
mov
push
add
inc
add
in
nop
clc
decl
dec
lock
fsubs
out
fs
pop
cltd
adc
in
cmpsl
sub
sar
ljmp
sbb
jg
jle
hlt
loop
sahf
dec
rorl
sub
loope
jbe
jle
fwait
ljmp
sbb
push
sarl
nop
ja
fiadds
sbb
pop
jp
push
dec
shlb
pusha
sbb
sbb
jmp
imul
xor
cltd
out
push
adc
and
dec
cmpsl
or
and
clc
decl
fcmove
mov
std
mov
mov
adc
cmovs
ljmp
out
std
lahf
lock
jg
adc
cld
mov
mov
test
out
xor
insb
mov
push
push
sbb
pop
in
jge
pop
arpl
xor
sub
decl
testb
out
push
mov
mov
int3
sbb
sbb
and
add
les
clc
lcall
pop
test
ljmp
xchg
call
loopne
popf
or
sub
js
lret
imul
jmp
push
xor
pop
lcall
lcall
and
push
popa
in
sbb
pop
loope
out
mov
cmp
incl
mov
cmp
fisubrl
test
lds
dec
cli
xchg
aam
xor
xchg
jmp
movsb
fidivs
push
adc
adc
dec
xor
xchg
push
js
and
xchg
incl
fs
add
and
pop
add
pop
mov
aas
add
test
mov
call
cmp
pop
je
pop
ds
xor
sbb
notl
add
sub
hlt
ljmp
sar
fbld
mov
xchg
mov
in
xchg
cmp
jmp
mov
test
inc
jae
mov
sbb
pop
pop
adc
je
icebp
jbe
mov
mov
sub
incl
inc
mov
lds
mov
cwtl
push
xchg
out
inc
iret
push
cmp
xlat
stc
lcall
iret
syscall
lods
iret
push
arpl
mov
leave
in
mov
xor
out
push
in
xchg
addr16
fadds
cli
jg
lcall
or
push
pop
and
stos
sbb
dec
xchg
cmp
ljmp
in
pushf
fisttpl
daa
iret
jns
cmp
sub
enter
notl
cmp
xor
pushl
ds
pop
mov
cwtl
dec
xor
fcompl
lods
jp
ret
push
stc
in
lret
incl
daa
in
test
out
dec
sub
adc
lret
and
cs
and
or
into
jmp
jle
hlt
sarl
mov
sarl
js
add
clc
jge
popf
ljmp
int3
int3
jg
and
cmp
push
decl
add
lret
mov
cmp
jmp
ss
ljmp
mov
push
or
xchg
xchg
sbb
mov
out
or
pop
dec
stc
push
cmp
inc
cmp
push
aaa
and
in
cs
push
jl
cmpsl
pop
sub
decl
mov
cmp
jge
enter
xchg
bound
iret
lock
mov
push
mov
jmp
sbb
orb
mov
out
lcall
pop
push
rcl
mov
push
cmp
jno
int3
xchg
lahf
scas
and
push
dec
or
mov
mov
xchg
repz
ss
int
xchg
jmp
xchg
aas
adc
jno
inc
ret
mulb
fs
adc
push
jle
sti
shl
inc
xlat
ljmp
add
mov
sbb
insl
cs
jne
sub
sbb
mov
pop
sbbb
hlt
dec
jecxz
sbb
hlt
lcall
xlat
in
bound
xor
shr
inc
sub
inc
pop
popa
mov
insl
mov
lret
ret
or
push
loopne
push
negl
ret
xchg
imul
ljmp
adc
adc
daa
push
rcll
add
xor
les
dec
test
pushl
cmc
mov
sahf
insb
pop
insb
mov
pusha
pop
dec
scas
add
jbe
insb
repnz
cmp
call
in
aad
mov
repnz
mov
jmp
lahf
inc
faddp
sbb
in
shll
xchg
adc
adc
sub
das
daa
js
sub
push
xor
int
sub
sbb
push
add
aas
repnz
push
rorb
push
fs
rcrb
sahf
xlat
dec
fstl
in
pop
cmp
push
cmp
lret
mov
inc
out
jbe
push
xor
nop
inc
stos
call
pop
sbb
sub
or
jne
mov
ss
and
pop
jg
std
jg
pop
and
pop
std
xchg
jo
test
bnd
jmp
popa
out
call
jmp
dec
in
loope
pop
ja
call
out
push
aas
jnp
cmpsb
push
ficompl
shll
std
jmp
adc
js
push
pop
sub
jb
sub
pushl
test
xor
xchg
popa
xchg
movsb
int
stos
in
pop
and
cld
cmp
cmc
icebp
jg
push
imul
mov
stos
cmc
mov
add
adc
pop
jne
movsl
lods
mov
aad
in
or
popf
mov
sub
xor
jmp
scas
mov
lcall
xchg
test
mov
mov
imul
jle
test
ljmp
or
imul
xorl
xor
jl
sbb
lcall
incl
dec
sub
ret
jp
mov
lret
shlb
inc
xor
sbb
dec
inc
test
mov
push
xor
sar
call
ds
dec
sti
dec
sarb
int3
mov
sbb
lcall
ret
inc
adc
fwait
sub
gs
mov
or
pop
xor
in
movb
lock
sti
xchg
inc
add
jge
sarb
xchg
pop
inc
sti
test
pusha
jp
mov
lcall
test
inc
out
jp
aam
adc
fists
jmp
subl
call
push
add
loope
mov
sbb
lock
loopne
and
jnp
add
push
es
pushl
std
decl
mov
call
xchg
dec
xchg
dec
pop
dec
je
sbb
cmp
iret
enter
mov
push
pop
into
push
ret
scas
hlt
push
cmp
repnz
decl
scas
pop
and
loope
out
xchg
jne
xlat
adc
push
jmp
push
push
cmp
add
push
mov
xchg
or
rcrl
lods
inc
into
sbb
sub
ljmp
daa
xchg
adc
sbb
clc
inc
inc
mov
enter
mov
xor
test
jo
sbb
cli
incl
pop
add
pop
dec
lods
and
shlb
in
mov
inc
fwait
and
out
pop
arpl
cs
inc
inc
ficompl
push
insl
je
pop
pop
int
decl
les
or
int
shrb
push
pop
push
fisttpll
pop
pop
mov
jle
mov
cs
push
outsl
push
aam
cmpsb
sub
jge
shrb
add
cli
jno
or
icebp
pop
or
pop
std
sbb
sbb
decl
add
movsb
sub
movsl
fadd
and
scas
shll
pop
push
mov
and
ljmp
dec
cmp
push
and
inc
inc
movsb
or
decl
jle
mov
jb
jb
push
cltd
jg
icebp
cmpsl
test
pop
loopne
jl
mov
mov
sub
push
pushl
mov
xor
mov
lret
cld
jg
icebp
cmp
into
mov
rcrl
fcoml
ret
into
arpl
lret
iret
lcall
xchg
dec
mov
sub
mov
loop
cs
jg
dec
cmpl
imulb
adc
int3
hlt
xchg
push
xlat
inc
cmp
dec
in
pop
lcall
push
clc
dec
inc
push
into
sub
jo
hlt
stc
pop
ljmp
add
fcomip
fwait
int
mov
sub
not
pop
sbb
rcrb
push
push
sar
ficoms
jecxz
pop
push
push
scas
jbe
cmp
inc
mov
mov
cmpsl
mov
rclb
pop
sbb
movl
xchg
sub
cmc
mov
outsl
call
imul
ljmp
push
cld
testb
in
popa
sbbb
outsl
jmp
hlt
mov
loop
sbb
lret
in
jae
sub
sub
pop
cmp
inc
fcomi
in
lds
enter
lcall
jmp
mov
dec
pop
aaa
inc
enter
in
add
dec
pop
pop
out
adc
mov
loope
and
xor
fsubrs
jmp
lds
xor
xchg
or
sub
bound
stc
lcall
rcl
mov
jle
fcoml
mov
sub
gs
mov
notb
fists
adc
scas
not
add
jb
mov
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
movsl
inc
dec
outsl
pushl
jg
sbbl
push
mov
sahf
loopne
fnstsw
xor
mov
call
pop
fstpl
hlt
jp
mov
div
jmp
pop
lock
aaa
pop
dec
ss
mov
scas
mov
stc
clc
add
adc
call
fwait
inc
jge
cmc
or
das
gs
push
sub
cs
bound
call
out
movb
mov
sub
mov
jne
sbb
xchg
cld
push
inc
pop
mov
decl
jae
imul
mov
push
jae
push
mov
notl
int3
stos
mov
loope
call
fs
ss
pop
xor
leave
loope,pt
pop
loopne
lret
jo
std
mov
xchg
outsb
lods
push
cmp
pop
xor
add
in
cmp
mov
ljmp
xor
mov
cwtl
loope
stos
cltd
mov
jecxz
in
push
xor
fisubrl
dec
cli
xchg
mov
icebp
push
jmp
and
ljmp
decl
and
adc
scas
mov
xchg
or
cmp
jmp
pop
sti
lods
je
in
daa
cli
in
push
mov
les
push
mov
scas
inc
sbbb
mov
in
dec
push
adc
mov
jno
mov
xchg
mov
or
jge
leave
push
add
pop
stc
push
insb
xchg
push
stos
xor
xchg
jae
push
push
jle
js
test
scas
add
jb
aas
dec
pop
jg
pushl
and
fsub
inc
xor
jns
les
test
push
push
mov
mov
fnsave
xor
stos
mov
mov
addr16
xchg
xor
sbb
jmp
add
push
xchg
add
ret
push
jbe
and
imul
jae
aaa
aam
add
jle
das
sub
inc
add
adc
mov
push
das
jge
add
ret
push
loopne
sbbb
xchg
and
push
jmp
ljmp
orb
fisubrl
cmpsb
jg
popl
mov
cmp
and
add
je
mov
hlt
lods
into
out
or
xor
lahf
pop
insl
mov
adc
inc
jle
add
and
inc
daa
push
adc
sbb
or
pushf
mov
xor
lods
call
and
aam
mov
mov
cwtl
fstp
lahf
fistpl
xor
ljmp
pop
mov
pop
sbb
arpl
das
mov
jne
jg
jle
inc
bound
repz
je
test
pop
clc
stos
or
test
ud0
jmp
push
sarb
inc
sbb
subl
xchg
lods
push
pop
pusha
pusha
fdivr
incl
push
fwait
jbe
push
lds
pop
push
adc
lods
and
dec
pop
inc
ljmp
lcall
mov
sub
pop
mov
adc
mov
stos
repnz
insl
cli
sbbb
scas
clc
hlt
lods
lods
scas
gs
or
loope
xlat
push
jno
xchg
int
js
dec
or
sar
into
mov
arpl
adc
cmp
xchg
sbb
hlt
cmp
pop
testb
sbb
add
cmp
mov
mov
and
dec
jecxz
ret
pop
in
jnp
sbb
xor
sub
dec
lds
adc
rol
call
pusha
leave
inc
xchg
xor
arpl
lcall
sub
fdiv
inc
xchg
push
dec
stc
or
out
pop
jae
xchg
pushf
rolb
fs
call
and
dec
stc
mov
jae
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
xchg
das
ret
call
mov
mov
data16
cmp
inc
sbb
ret
sbb
xchg
stos
jae
hlt
ljmp
sbb
iret
jp
enter
xchg
and
cmp
fistpll
or
jg
jnp
cld
cwtl
add
dec
push
dec
out
push
je
sbb
decl
xchg
sub
lea
clc
mov
call
pop
out
test
mov
xor
mov
shll
push
add
xchg
adc
xchg
push
mov
call
or
cmp
push
iret
pop
mov
cmp
out
xor
out
les
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
jmp
movsb
imul
lret
xchg
testl
lcall
xlat
mov
outsb
cmpsb
jo
cmp
incl
in
mov
rol
jmp
movsb
mov
push
in
push
mov
sub
dec
mov
jnp
enter
pop
inc
add
pop
push
jecxz
lods
xchg
std
call
bound
repz
addb
pusha
mov
stos
cmp
insl
movsl
mov
jnp
jg
sub
fnstenv
mov
pushl
and
loopne
lret
sub
sbb
andb
mov
mov
data16
fnstcw
adc
sbb
test
shl
in
pop
shl
adc
clc
inc
and
adc
add
call
sahf
imul
imul
mov
fldcw
outsl
outsl
jecxz
inc
ds
jnp
in
mov
aas
aad
adc
subl
jle
jecxz
sahf
call
push
insl
pop
jno
inc
jmp
das
es
mov
and
fistps
incl
sbb
jno
inc
dec
xor
mov
popf
out
pop
xchg
push
pop
jnp
push
fstps
and
pop
orps
repnz
shl
daa
outsb
or
xor
mov
rcrl
xchg
push
mov
jg
sub
cmpl
popa
mov
ljmp
push
dec
adc
xor
repnz
mov
int3
je
mov
mov
jmp
jp
add
enter
sbb
out
movsb
jg
dec
psubsw
or
shl
jmp
mov
mov
call
into
cmpsb
adc
push
cmc
jle
sbb
jecxz
jmp
xor
mov
test
inc
dec
dec
cwtl
mov
in
dec
sbb
dec
lcall
xchg
mov
fucom
mov
sar
nop
jg
mov
or
inc
xchg
add
out
in
paddusw
enter
sti
mov
and
mov
loopne
pop
mov
loop
mov
lret
mov
add
shl
sbb
sbb
jae
ljmp
xor
loop
mov
mov
cwtl
sub
and
rcrb
mov
sbb
or
decl
cld
iret
and
cmpl
das
or
cltd
loope
cmpsl
pop
in
iret
loopne
cmpsl
lea
cmp
pop
test
lcall
and
jecxz
out
and
dec
or
pusha
cwtl
daa
xor
xor
jg
xor
lcall
popf
jp
clc
stc
nop
inc
int3
push
jg
sbb
jmp
fdivs
adc
rclb
xchg
push
push
loope
icebp
sub
mov
cmc
add
decl
lock
sub
inc
movsb
mov
insb
test
inc
loope
icebp
lcall
mov
or
mov
cmp
adc
jns
call
cld
fbstp
add
add
push
movl
aas
xchg
fstpl
ljmp
add
mov
jecxz
cmp
and
push
jnp
mov
xor
ljmp
jmp
js
or
mov
jmp
outsl
push
pop
int
xlat
dec
decl
imul
sbb
cmp
or
jp
outsb
lock
jp
and
adc
mov
ljmp
repz
adc
enter
pushl
cld
mov
sti
cmc
sub
mov
jmp
xor
outsl
mov
call
fsubl
xor
xchg
xor
mov
add
out
aad
fstps
add
lcall
cmp
mov
lods
fsub
fdivrs
cmp
gs
rcll
add
xchg
and
lock
ljmp
adc
and
push
pop
fsubs
fcoms
cmp
testl
xor
lods
shrb
loop
or
pushl
adc
mov
sub
fnstcw
push
std
jp
push
sbb
push
in
fdiv
cmp
mov
into
out
inc
sub
ljmp
cmp
lcall
movsb
hlt
sbb
nop
push
sbb
jecxz
gs
xchg
decl
jl
or
jnp
lret
mov
xchg
mov
scas
jecxz
xchg
xchg
push
cmp
jmp
int3
out
fnstsw
xor
xchg
xor
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
or
dec
out
mov
dec
push
push
insl
fadds
and
xor
xchg
movsb
in
and
jmp
int3
rcr
mov
xchg
sbb
adc
ja
hlt
dec
mov
movsl
dec
pop
loop
inc
out
pop
insl
add
sub
inc
repnz
dec
xor
stc
dec
out
rorl
sbb
movsl
decl
xchg
in
out
push
stc
addb
sbb
jecxz
shll
mov
push
rclb
mov
call
xchg
shrb
cmpsb
fiaddl
mov
fwait
lea
out
decl
fdiv
adc
xchg
xchg
aad
mov
push
pop
jmp
mov
inc
push
jmp
mov
es
shll
hlt
out
clc
jg
jae
ljmp
fdivrl
sub
out
insb
dec
or
cs
sbb
sarl
mov
test
jmp
test
imul
mov
call
add
xor
movsb
lea
das
nop
inc
popa
loope
hlt
int3
insb
popf
sahf
stos
lcall
dec
push
sub
repz
add
lret
or
imul
stc
std
in
lcall
cmp
push
js
or
mov
int
lcall
mov
mov
fdivrp
call
adc
lret
mov
fdivr
in
push
fwait
aas
dec
call
lahf
pop
lock
lcall
adc
xor
xlat
jbe
loop
add
lcall
lcall
lock
shl
lret
jne
stos
cltd
add
iret
repnz
ljmp
dec
mov
jb
dec
mov
dec
mov
cld
lcall
ss
out
sbb
sbb
lret
jo
outsl
mov
in
arpl
and
mov
jb
repz
imul
push
dec
cmc
rcrb
adc
adc
inc
movsl
jno
cmc
stos
add
adc
mov
sub
ljmp
cwtl
test
cltd
lret
jne
mov
and
push
or
push
out
mov
push
xchg
push
loop
pushl
cld
popa
int
loopne
out
pushf
adc
xor
push
xchg
add
mov
adc
pushl
fwait
mov
and
repz
popf
mov
or
clc
decl
mov
sahf
xor
xor
aas
adc
addl
incl
je
mov
push
or
negl
sub
sub
cmp
decl
pop
jns
jg
movsl
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
ljmp
test
ficomps
pop
das
push
push
lds
and
cmp
mov
jo
iret
in
mov
negl
out
mov
mov
or
jp
mov
sub
cmp
inc
repnz
in
sub
dec
testl
lahf
push
jae
jb
out
sub
xor
push
popa
add
fbstp
cli
outsb
jb
mov
leave
xor
add
daa
test
push
addl
fnstenv
loop
pushl
ljmp
adc
add
fdiv
sti
idivl
pusha
rorb
mov
mov
inc
jg
fadds
sub
mov
ret
lock
fs
jmp
fnstenv
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
fcomip
decl
cmp
push
and
shll
test
cmp
inc
push
push
mov
jmp
inc
scas
imul
arpl
and
lret
out
add
movsl
push
mov
lcall
push
jl
cmpb
add
pop
xchg
mov
cmp
jo
mov
add
fwait
mov
inc
jg
jnp
jmp
sbb
daa
dec
lahf
add
nop
xor
and
jmp
jl
ret
aam
in
fisttpll
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
pop
dec
dec
dec
pop
fildl
adc
dec
dec
inc
ret
pushl
add
xor
sub
divb
rorb
jbe
pop
cmp
enter
jp
cmp
stos
jp
out
xchg
adc
mov
lret
cmp
push
ljmp
xchg
mov
dec
jo
fidivrl
xor
in
mov
dec
out
xor
lcall
xchg
mov
stos
push
ficomps
mov
test
nop
or
adc
test
lcall
andb
cmp
insb
add
dec
or
fwait
sbb
inc
pop
ret
adc
jmp
les
dec
add
jbe
or
into
inc
test
mov
repnz
leave
mov
movsb
or
jle
sub
inc
pop
pop
lock
test
jle
ret
das
into
pop
sbb
push
es
mov
incl
inc
ss
popf
dec
leave
jne
cld
ror
inc
mov
out
ljmp
mov
scas
or
lret
orb
cmp
or
incl
lcall
push
sub
lods
push
sbb
lret
pop
sub
xchg
repz
std
aam
sub
filds
test
shlb
push
jl
xor
aaa
sti
pushl
pop
push
loop
push
lods
add
daa
push
dec
nop
call
xchg
xchg
mov
and
fstpt
pop
outsl
js
jo
sub
movsb
jns
pop
inc
sub
add
scas
cltd
fs
frstor
push
adcb
mov
and
or
les
popa
arpl
movsb
iret
lahf
sub
adc
mov
push
mov
in
push
jno
inc
mov
test
xor
mov
xor
pop
inc
cmp
dec
ss
dec
je
mov
push
mov
sub
push
cld
lods
cmp
ljmp
jo
loop
dec
mov
mov
pushf
push
decl
dec
adc
mov
lret
adc
mov
jo
sbb
mov
pushl
cld
les
ret
shlb
or
lds
pop
mov
inc
jmp
sbb
inc
sbb
push
mov
or
lcall
int
or
sbb
mov
pop
dec
fsubrl
inc
out
mov
je
mov
lods
lock
das
add
jmp
or
and
insb
jg
push
pop
xor
filds
jmp
in
movsb
or
mov
sarb
jmp
xchg
bnd
rol
push
js
lret
lcall
adc
cmc
pop
out
xor
enter
insb
cld
ret
and
fidivrl
mov
push
hlt
ret
mov
mov
pop
xchg
jns
lcall
test
pushf
cmpb
std
xchg
sbb
data16
push
inc
or
dec
jmp
inc
stc
xor
xor
and
mov
pushl
loop
dec
repz
dec
dec
jae
outsl
sub
nop
decl
mov
loop
bound
cmp
mov
add
mov
ljmp
cld
repz
in
lret
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
rcrb
out
into
lods
std
or
fildll
xor
int
xchg
ljmp
cmp
cld
push
out
out
push
jae
imul
sti
add
mov
sbb
pop
pop
lcall
fs
cmp
insb
pop
lea
movsb
insl
mov
pop
sti
add
out
xchg
adc
xor
ljmp
lods
aad
lret
clc
cmp
xor
out
pop
dec
or
std
mov
stos
cli
fwait
push
jg
mov
or
dec
fsubrl
test
sub
testb
ja
jmp
icebp
push
mov
pop
ficoms
xchg
jb
pusha
movsb
push
cmpsl
inc
lods
das
decl
mov
mov
and
jo
repnz
add
rcll
arpl
ljmp
jns
ljmp
lret
jb
mov
test
loopne
decl
mov
cmp
imulb
fadd
pop
mov
or
inc
dec
test
cmpsl
or
shlb
mov
pusha
xor
rolb
ljmp
int
pop
sbb
push
dec
dec
mov
xchg
arpl
test
xor
jle
mov
in
in
lcall
or
pusha
xorb
ss
xor
mov
mov
or
jbe
push
sbb
subl
cmp
add
stos
loop
ja
in
add
push
adc
xchg
add
aad
xor
pushl
test
sbb
sbb
mov
dec
xor
popf
xor
ret
inc
mov
out
push
mov
cmp
xor
jg
out
xor
mov
rcll
sub
test
fildll
sbb
sub
jecxz
int
push
repz
out
or
call
movb
xchg
mov
mov
mov
inc
xlat
sbb
call
dec
mov
jae
cmp
adc
popf
leave
adc
inc
aad
pushl
jo
fldenv
mov
fldt
outsb
push
sbb
mov
mov
leavew
imul
das
shrb
cwtl
hlt
jp
sbb
insb
pop
in
negb
lods
pop
xchg
xor
mov
outsl
call
in
jne
daa
movsl
je
jmp
lcall
call
jmp
adc
mov
fnstcw
lcall
in
sbb
fimuls
adc
jmp
push
mov
fsubrs
test
jge
xorb
adc
out
xlat
mov
pushl
cs
mov
addb
push
int3
jae
inc
out
pop
rorb
jge
test
cmp
mov
data16
fcomps
cmp
scas
xor
adc
fidivrl
mov
mov
incl
sub
push
jp
jo
je
pop
pop
pusha
dec
dec
push
inc
inc
add
out
and
rorb
or
call
test
sub
imul
xorb
xchg
ljmp
sub
jne
xchg
fisttpll
mov
test
add
add
stos
push
stos
ds
push
lods
xchg
fsubs
dec
jg
sbb
jle
cmp
dec
lcall
test
pop
push
fdivrl
fnstcw
jmp
jmp
inc
mov
rorl
jecxz
mov
inc
stos
sub
jg
int
fs
push
mov
and
rcrl
jg
push
repnz
pop
aaa
inc
ljmp
cli
incl
push
xchg
cmp
popf
cld
orb
inc
lahf
dec
dec
add
sar
cmp
add
bound
mov
sbb
add
mov
ds
adc
mov
mov
cmp
dec
jae
mov
cmp
incl
mov
xchg
nop
orl
lahf
mov
jg
jle
cwtl
inc
in
mov
inc
or
push
shl
mov
clc
int3
jl
test
dec
sahf
push
imul
mov
insb
xlat
xchg
cld
test
stc
in
lds
icebp
inc
mov
inc
or
push
aam
cltd
decl
dec
dec
jecxz
inc
and
scas
data16
jne
mov
popa
mov
mov
aas
adc
in
pushf
mov
pusha
roll
enter
lock
mov
test
pushl
jge
sbb
jecxz
xor
pop
mov
ljmp
into
add
ret
subl
pop
push
fwait
cltd
pop
mov
fbld
pop
mov
and
test
imul
sbb
lods
jae
stos
rorl
or
sbb
nop
scas
jge
outsb
push
mov
pop
and
fucomi
push
push
pop
in
popf
or
ljmp
fidivrs
jle
and
mov
mov
int3
cmp
xor
pusha
xchg
and
jg
popf
jl
in
dec
or
push
push
clc
lcall
add
mov
xchg
outsl
adc
xor
xlat
jns
inc
stc
lcall
decl
lret
inc
scas
and
push
pop
mov
lcall
imul
dec
xor
cli
lods
jg
movl
add
imul
fucom
rorb
lods
pop
loop
dec
outsl
es
aas
push
push
std
ljmp
mov
cli
xchg
int
mulb
call
cmc
lret
stc
pop
cmp
lods
jbe
push
std
add
dec
xchg
rclb
inc
pop
icebp
inc
xchg
ret
lcall
pop
bound
daa
cmp
mov
dec
fists
dec
adc
loop
mov
lret
mov
scas
lcall
or
and
push
ljmp
jno
int
repz
dec
xchg
cmpsb
mov
jo
iret
jns
add
add
jge
xor
or
imul
lcall
jae
pushl
andl
xchg
inc
lock
pop
sbb
sarb
packssdw
fcomps
cmp
fsts
enter
fs
xor
xchg
jmp
mov
hlt
mov
jno
jecxz
pop
pop
out
inc
jnp
and
and
mov
xor
stos
jmp
sub
xor
mov
jnp
int3
and
aam
mov
call
push
xchg
lock
sarl
std
lahf
jmp
pushl
lahf
out
incb
out
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
sbb
fists
xor
xchg
add
xchg
xlat
xor
mov
mov
mov
clc
stc
inc
add
in
push
loopne
mov
mov
pop
mov
jns
subl
xor
loope
ljmp
jmp
pop
dec
data16
ds
sub
ds
punpcklwd
js
jmp
sub
sub
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
dec
test
pop
pop
lods
dec
or
cmp
outsb
adc
stos
stc
imul
ja
clc
incl
mov
xor
or
inc
jo
mov
js
incb
inc
mov
pushf
push
mov
xor
mov
je
or
pushl
sub
loope
cld
rcrb
mov
adc
sub
popf
call
lahf
jmp
xchg
outsb
arpl
leave
insl
add
jp
sub
and
std
aad
test
add
js
jl
push
and
inc
push
mov
pop
jb
pop
mov
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cld
xchg
mov
mov
mov
xor
call
mov
xchg
popf
enter
addr16
aad
pushl
scas
dec
test
push
test
aaa
ret
data16
mov
lods
push
push
mov
sbb
mov
add
cmpl
jg
lods
jmp
cmpsb
xchg
cmp
cmp
sbb
inc
out
xor
mov
pop
addb
leave
jecxz
ret
cmp
cmp
xchg
movsb
cmp
pop
je
insl
std
sti
movsb
iret
jg
xchg
mov
mov
loop
filds
gs
mov
out
jae
aas
jo
mov
dec
mov
sahf
mov
inc
arpl
ljmp
push
push
pop
mov
jle
mov
xchg
aam
jb
stc
lods
pop
cwtl
or
mov
jl
xor
inc
add
mov
rorl
pop
ret
lret
outsl
scas
cli
decl
lods
lcall
pusha
fisttpl
push
and
je
inc
pusha
inc
cmp
jl
das
movl
es
iret
mov
aam
fcmovbe
and
jmp
add
sbb
mov
and
scas
push
xorb
sarb
lret
scas
clc
sbb
mov
pusha
fisubrs
push
inc
xorl
add
cmpsl
aas
and
dec
pop
fwait
mov
insl
mov
adc
pop
mov
jecxz
sbb
negb
push
dec
loopne
jmp
push
sub
imul
mov
sbb
pushl
sub
pop
jo
cmp
push
movsb
aad
mov
jg
mov
cmp
mov
sbb
cmp
jbe
adc
incl
jge
jg
pop
mov
sbb
cmpb
ja
lret
inc
sub
add
push
mov
lcall
clc
sub
inc
or
loope
pusha
lds
push
ds
rcrb
std
push
jl
xor
cmc
cmp
inc
ret
sahf
push
cmpsl
cmp
xor
cwtl
call
mov
xchg
popa
mov
ja
pushf
les
or
pop
fdivrl
aam
les
mov
push
adc
inc
loopne,pn
jmp
inc
jmp
inc
lds
xor
lock
push
mov
cmp
dec
flds
cmpsl
cmp
xchg
sbb
int
sbb
cmp
jg
cld
dec
in
pop
jge
push
sub
test
sarb
xchg
les
jecxz
mov
xchg
ss
andb
mov
sbb
pushl
cmp
or
icebp
mov
cltd
aad
std
out
jne
adc
loop
stos
pop
hlt
decl
iret
pop
add
or
cmpsb
fwait
mov
icebp
mov
insl
mov
inc
jmp
push
imul
mov
rorb
pushf
movsb
test
inc
les
lods
mov
or
out
cmpl
data16
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
dec
loope
jmp
shl
adc
push
mov
daa
mov
xor
mov
icebp
addl
add
xchg
dec
ljmp
gs
out
sub
aad
push
pop
inc
add
push
mov
push
jne
inc
mov
hlt
incl
dec
out
sbb
xor
std
push
clc
add
jp
jno
loope
pop
in
cmp
decl
and
dec
dec
xchg
push
gs
mov
cmp
or
push
mov
rolb
jae
dec
push
pushf
loop
daa
pop
pop
jge
imul
jo
mov
cmp
ret
mov
push
mov
push
fcoml
test
addr16
jmp
adc
dec
call
aas
add
lret
xchg
iret
pop
mov
push
aaa
and
jge
pop
xchg
rclb
adc
out
mov
popa
mov
mov
sbb
mov
pop
ljmp
sub
lahf
or
or
hlt
stc
sub
jne
or
mov
jnp
sti
cmc
decl
push
lods
repnz
or
ret
adc
xchg
adc
mov
out
roll
addl
std
sbb
sbb
outsl
clc
decl
in
mov
ljmp
out
ror
dec
cs
mov
ljmp
mov
lcall
mov
xlat
lret
fisttpll
cltd
xchg
xchg
sub
cmp
jg
arpl
popf
lods
xchg
mov
popl
xchg
jo
push
add
dec
jbe
mov
enter
pop
and
push
icebp
pop
std
iret
add
jmp
push
scas
mov
xor
sub
cmp
xchg
not
xchg
and
test
jp
jecxz
pop
jbe
pop
ljmp
and
add
sbb
out
rcr
imul
mov
xor
mov
xchg
push
adc
pop
cli
jecxz
jnp
addr16
mov
ficompl
cmp
inc
push
nop
sahf
jno
insl
adc
fbstp
sub
xor
pop
mov
sbb
and
mov
jbe,pt
xchg
mov
and
int3
int
or
ret
mov
ljmp
push
push
fwait
sbb
stos
mov
mov
sar
js
jg
sbb
fs
mov
loop
xor
xchg
pop
sahf
and
lods
jo
pop
icebp
mov
dec
push
aas
xchg
inc
inc
xorb
mov
dec
leave
adc
mov
mov
movsl
ljmp
sbb
shrb
inc
cmp
cmc
enter
dec
mov
fmuls
inc
mov
adc
aad
sbb
mov
sbb
jno
jbe
pop
jl
cmp
push
popf
aad
ljmp
push
imul
fnstenv
jge
mov
fucom
mov
mov
pop
pushf
in
jns
push
addr16
sub
sub
lcall
pop
push
scas
pop
cltd
nop
xor
jmp
mov
subb
mov
sub
lahf
or
pop
push
mov
shlb
mov
ljmp
dec
mov
ss
lcall
pop
cmp
mov
clc
sbb
xchg
lss
pushl
inc
jns
popa
sub
stos
sbb
arpl
or
xchg
int3
or
call
mov
cmp
pop
and
lock
and
mov
jle
lods
pop
aaa
xchg
sti
clc
cmpsl
add
mov
cmp
je
lods
jmp
jg
lahf
sbb
pop
push
neg
xchg
or
adc
adc
jmp
cwtl
subl
mov
mov
adc
mov
pop
add
xor
or
lds
arpl
fcomip
loope,pn
sub
cmp
mov
and
xchg
fbld
or
xchg
mov
adc
icebp
or
data16
pop
add
call
fwait
pop
mov
iret
sbb
cmp
dec
mov
pop
push
xor
lcall
fidivl
xchg
mov
adc
js
fs
movsl
xlat
fmuls
testb
cli
fs
bound
inc
ja
lcall
adc
dec
andb
jl
cld
push
sbb
leave
push
xor
or
adc
cmpsl
jle
mov
dec
sub
lods
test
jns
dec
jne
adc
icebp
add
adc
rclb
sbb
add
cmp
cmpsl
mov
and
and
lcall
fstps
ds
push
push
ljmp
daa
xchg
nop
stos
smsw
sub
popf
add
push
in
ljmp
jmp
stos
jle
adc
and
mov
repz
jmp
mov
ljmp
mov
lcall
aad
push
add
xchg
jl
lcall
fisttpl
add
inc
pushl
cmc
cmp
loopne
xchg
push
cli
fucomp
test
stos
xchg
lcall
push
andl
xchg
test
sub
cmp
cli
mov
std
call
push
xchg
out
movsl
sbb
pop
movsl
cmp
mov
cmp
out
mov
fcoml
in
dec
arpl
ljmp
pop
inc
pop
xlat
mov
jge
or
sub
push
jge
inc
mov
sub
pushl
sub
popf
mov
shll
and
add
in
cmp
sbb
and
mov
outsb
jmp
pop
ja
sbb
test
dec
inc
or
jmp
and
and
icebp
sub
test
push
xor
push
hlt
sub
pushl
dec
cli
mov
fs
aas
pop
add
fidivrs
xchg
adc
leave
mov
cmp
pop
xor
pushl
std
cmpsb
aas
cmp
cmp
push
sbb
or
or
cmp
std
xor
push
pop
push
rcr
in
adc
pusha
add
ljmp
lcall
and
jle
inc
js
stos
or
sarl
jle
aas
icebp
int
sti
push
xchg
aaa
repz
ds
cmp
std
sub
pushf
sub
mov
aaa
std
mov
jne
xchg
xchg
add
fistps
mov
jg
pop
dec
ljmp
test
push
adc
mov
lret
or
mov
mov
xlat
cltd
lock
decl
repnz
mov
shll
lock
cs
ss
call
fbld
out
fcomps
xchg
fsubl
sub
lods
data16
and
mov
mov
adc
dec
fbstp
std
xchg
test
pop
inc
mov
xlat
aas
dec
loopne
or
imul
jo
pushf
cmp
mov
jno
js
cmp
xchg
aaa
icebp
jecxz
mov
lahf
jg
sub
jmp
and
dec
cmpsl
aaa
pusha
inc
xor
icebp
sbb
js
and
test
gs
and
or
adc
sbb
fistpll
push
les
loope
xchg
ds
ja
xchg
and
jmp
sbbb
sub
decb
ljmp
jg
sub
in
jmp
mov
inc
jbe
mov
test
call
sbb
les
sub
adc
jmp
cmp
jmp
ficoms
push
jmp
jmp
lret
gs
rorl
icebp
jne
call
fsubrl
jge
push
dec
mov
pop
cmp
js
mov
inc
mov
in
out
xchg
push
mov
add
bound
xor
cli
imul
xor
mov
mov
jp
mov
mov
dec
fs
dec
mov
fstpt
ds
jg
add
mov
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
decl
aas
stos
xor
add
add
mov
out
je
push
rcrl
mov
inc
rcll
jno
xor
jmp
add
lea
inc
and
inc
add
bnd
push
movsl
mov
pushf
xor
fdivs
cld
pushl
push
mov
cmp
xlat
sbb
outsl
xchg
hlt
lcall
and
pop
aaa
mov
sub
fcos
pushl
and
pop
iret
jne
adc
mov
aaa
cmp
adc
scas
loop
sub
shl
jmp
dec
xor
or
int
sub
shrl
push
jb
jg
push
pop
sahf
cmp
ds
jmp
dec
es
mov
inc
jns
mov
test
xor
ljmp
dec
xchg
adc
jo
test
jbe
icebp
int3
inc
sbb
jg
jmp
and
sub
inc
in
cmp
or
outsl
test
in
out
iret
fcmovnbe
pop
ljmp
pusha
mov
sahf
js
cmp
cmpsb
scas
jbe
icebp
int3
cmp
or
or
repz
or
mov
cmpsl
xchg
ds
xchg
stos
sbb
das
sub
mov
mov
testl
sbb
mov
mov
movsb
imul
mov
cli
jno
cmpsw
dec
cmp
test
adc
xchg
push
jmp
es
cmp
and
pushf
das
mov
sub
test
imul
scas
xchg
bound
jp
insl
ds
push
scas
pushf
sub
int
decl
xchg
inc
and
pushf
mov
xlat
ret
dec
jmp
cmp
cmpsb
sahf
and
out
shl
cmpl
fisubs
fs
out
jmp
pushf
inc
cld
xor
imulb
sbb
mov
adc
addr16
mov
mov
cmpsl
in
dec
push
stos
push
mov
cld
fbstp
lds
aad
add
add
decl
xor
push
push
push
push
test
pushl
xchg
pusha
xor
sub
inc
xlat
jmp
mov
xchg
and
or
aaa
iret
arpl
add
das
sar
mov
mov
test
ljmp
inc
dec
add
in
push
jb
incl
test
mov
pop
adc
mov
lods
test
cmp
outsl
xchg
sbbb
popa
clc
sbbl
jl
dec
cli
dec
cmp
adc
pop
movsb
popf
cmc
shll
and
adc
jp
dec
cmpsb
push
adc
out
mov
js
stos
lahf
sbb
lea
aas
mov
fdivrs
call
push
inc
sarl
cmp
iret
xchg
xor
outsl
push
sub
out
push
loop
adc
jmp
mov
cli
xchg
fnstcw
mov
xchg
es
lods
shll
clc
lods
sub
decl
jge
add
xchg
or
pop
push
and
cwtl
imul
xor
sub
lods
testl
or
mov
sbb
movsb
call
orb
inc
adc
jnp
call
leave
push
sbb
in
jge
bound
jg
push
xor
pusha
jo
add
dec
cld
mov
jno
or
or
gs
data16
ret
ds
call
lret
andl
jg
mov
leave
pop
sti
mov
mov
int
test
sub
repnz
cmpsl
rcrb
cli
jmp
lea
pop
jge
and
pop
ja
jbe
outsb
outsl
jne
das
push
dec
inc
leave
push
or
sbb
sub
data16
fildll
and
jae
add
jl
mov
notb
arpl
xor
add
pop
dec
jmp
repz
std
adc
xor
pushl
int3
sbbl
inc
imul
les
or
adc
cmp
and
push
ret
push
sub
js
add
stc
rorl
add
add
pop
add
lret
inc
fucomip
sbbb
out
ss
ljmp
jle
xor
mov
call
jmp
jo
sub
into
fwait
sub
xor
add
add
insl
cmc
mov
dec
cs
mov
leave
cltd
es
and
icebp
cwtl
stos
pop
stos
add
std
sbb
push
cmp
call
mov
decl
popa
add
fcmove
push
sub
decl
rorb
cli
int
jmp
jne
push
dec
hlt
mov
fnstenv
pop
jg
pop
jno
adc
xchg
pop
xor
subl
addr16
cld
add
sub
mov
fwait
nop
mov
jo
mov
dec
js
ret
mov
mov
dec
sarl
decl
movsl
jle
push
insl
mov
mov
xchg
leave
leave
add
ret
je
push
jae
add
cmp
stc
icebp
test
xchg
fs
dec
dec
jl
dec
push
mov
mov
call
inc
or
notb
aad
lods
in
mov
mov
hlt
jecxz
cmp
push
sahf
lea
mov
das
xchg
ljmp
clc
incl
cltd
dec
rolb
fisttpl
movsb
movsl
shl
xchg
or
jne
ljmp
incl
inc
mov
mov
out
pushf
aam
jp
in
int3
insb
cltd
cwtl
pop
mov
inc
inc
inc
decl
inc
add
movb
inc
mov
and
push
cli
lea
iret
and
sub
filds
dec
insl
fnstenv
mov
mov
xchg
mov
cld
sbb
lcall
fisttpll
jae
fisubrl
je
adc
xchg
jnp
incl
clc
cmpsb
sbb
push
ds
loop
imul
imulb
add
call
iret
xor
into
adc
stos
popa
xchg
call
mov
adc
pop
inc
cmp
push
jb
mov
xor
adc
test
jge
lcall
mov
out
imul
iret
cmp
inc
lret
data16
mov
call
clc
sar
mov
lock
adc
std
inc
popa
out
sti
mov
mov
incl
adc
add
ljmp
lock
xchg
cmp
jbe
add
test
pushl
jge
lods
xor
andl
mov
or
ret
sub
out
shr
or
pop
cmp
jns
and
das
mov
pop
xchg
lock
ds
in
lds
xchg
hlt
jmp
cmpsl
fistpll
and
dec
inc
stos
movsb
jecxz
xchg
aaa
adc
fcom
xchg
mov
aad
mov
and
popa
push
push
loop
or
xchg
cmc
cld
sub
sub
dec
cltd
or
es
mov
stos
pop
jo
push
sbb
cmp
je
loop
lret
shlb
cli
mov
ljmp
jg
bswap
dec
fs
popf
in
aaa
adc
int
push
jge
sahf
stc
jb
and
out
cli
jmp
pop
dec
je
jmp
mov
mov
out
iret
push
xor
xchg
and
decl
lock
xchg
test
or
int
xchg
xor
mov
add
call
stos
and
or
fs
adc
outsb
fs
repz
or
sub
das
mov
fiadds
and
in
fwait
pop
cltd
pop
xchg
sub
xor
mov
je
adc
jle
inc
add
lret
jmp
inc
pop
dec
xchg
inc
mov
js
ja
inc
add
pusha
mov
bound
dec
pop
xor
ljmp
lods
dec
cs
test
jmp
jno
sub
cmp
pushl
and
cli
repz
add
xchg
fs
mov
ret
sub
push
xchg
mov
scas
call
test
test
and
stos
popf
sarb
test
loopne
add
ljmp
sbb
xchg
lahf
decl
loop
mov
andl
xor
xchg
ljmp
pop
inc
cmc
ljmp
mov
adc
pop
mov
data16
mov
push
sub
or
popf
adc
int3
mov
mov
call
stos
add
and
ljmp
imul
push
fldt
mov
rcrb
and
bound
pop
cmpsl
fmull
rcr
je
lock
repz
sar
inc
bound
inc
mov
push
xor
js
push
jle
out
lcall
jg
adc
sbbb
scas
lret
popf
ja
adc
adc
incl
sub
inc
fisubrl
cwtl
out
or
xchg
lahf
out
mov
pop
dec
ljmp
ficoml
adc
roll
pop
lahf
cmp
cmp
jmp
cmp
xlat
jp,pt
mov
xor
lods
sub
lock
push
fiaddl
in
cmp
and
sub
jle
sbb
sbb
out
sahf
fwait
mov
push
sahf
add
loope
sbb
or
ljmp
fwait
std
fmuls
cmp
push
call
push
jb
test
add
lds
add
mov
outsl
cmp
mov
sub
sub
mov
mov
and
mov
stos
pusha
cmp
push
push
xor
flds
cld
jmp
pop
adc
stos
push
mov
and
std
les
das
sar
sbbl
mov
in
jmp
inc
jle
sub
repz
add
incl
int
dec
imul
outsl
rcrl
xchg
pop
sbb
and
outsb
movsl
pop
sub
lcall
ja
and
adc
adc
pop
ficoml
xchg
pop
sub
or
xor
fcomip
lods
xor
add
mov
sub
ljmp
sbb
cltd
sti
hlt
pop
cmp
dec
mov
mov
mov
incl
imul
jle
push
push
stos
lods
sti
dec
stc
or
jg
dec
aam
fstl
iret
movsl
mov
cmovnp
pop
mov
aaa
or
jg
cli
xchg
mov
jnp
push
inc
mov
pop
lcall
add
push
pop
adc
test
jl
cmc
loop
push
push
adc
sarb
call
push
mov
xor
xor
aam
jb
push
cmp
fsubrs
push
sahf
fcomip
cmp
lea
in
xlat
js
popf
hlt
dec
adc
jb
pop
js
xor
call
mov
mov
shrb
out
xchg
add
mov
xlat
arpl
inc
fidivl
movsl
xor
or
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
in
xchg
addr16
cwtl
xchg
sub
icebp
arpl
nop
cwtl
jmp
clc
mov
icebp
shrb
mov
mov
sbb
pop
repnz
fistpl
stc
popf
cmp
jo
enter
rorb
addl
push
es
lret
or
mov
xchg
call
sbb
sub
std
add
mov
scas
pop
sbb
mov
mov
jb
inc
dec
lock
mov
and
jmp
fldl
sbb
repnz
loope
lahf
repnz
mov
xchg
inc
adc
inc
loopne
cmp
pop
testb
mov
ljmp
and
iret
adc
sbb
jge
inc
sbb
in
stc
test
rcl
jmp
fdivrl
insl
xor
ja
mov
hlt
dec
cwtl
adc
insb
pushf
fcompl
and
test
clc
pushl
leave
push
or
pop
loope
jg
mov
dec
cmp
mov
sub
aad
call
into
imul
into
call
out
xchg
dec
sbb
jmp
xchg
cmp
inc
mov
iret
test
cmp
xchg
insl
sub
xor
sar
shll
sbbb
xlat
and
idiv
stos
push
sub
push
mov
fcomip
lcall
cmp
lret
out
push
test
cmpsb
leave
gs
cs
mov
mov
adc
and
pusha
outsl
arpl
sbb
divb
sub
scas
inc
ds
cmp
mov
inc
jmp
sub
adc
pop
or
push
in
das
and
xor
adc
int3
repz
pushf
pop
loopne
ljmp
dec
loop
mov
adc
ficompl
scas
out
jmp
imul
mov
dec
inc
push
ficoms
mov
push
ret
mov
lea
xor
test
lcall
mov
mov
loope
push
idivl
inc
jmp
test
in
jae
pop
imul
call
rol
outsb
sub
cmp
aam
mov
outsb
xchg
rorb
in
or
out
jmp
aaa
push
pop
shll
push
mov
loopne
ljmp
std
fcoml
mov
roll
mov
sub
xor
fnsave
mov
icebp
call
jne
push
dec
js
and
mov
ljmp
repnz
sbb
jne
cmc
sbb
sub
mov
mov
int3
cmp
testl
sahf
and
sub
add
inc
sbb
dec
push
mov
sub
jb
or
mov
xchg
mov
xchg
jmp
or
stc
loop
cltd
and
pop
xchg
xchg
mov
icebp
inc
out
xchg
out
lods
sti
int3
stos
lods
inc
nop
lcall
xor
leave
fwait
les
mov
jl,pt
adc
incl
jl
add
add
jae
or
pop
outsl
cwtl
int3
mov
push
mov
out
ss
ljmp
mov
insb
lods
iret
daa
and
push
or
cmp
jno
lcall
idiv
ljmp
and
dec
addr16
outsb
dec
mov
push
jmp
xchg
push
decl
es
mov
mov
aam
cmp
call
add
and
roll
jae
push
scas
out
mov
dec
stos
mov
cwtl
sub
cld
fisubrs
out
das
repz
scas
mov
insb
xor
int
cmp
ljmp
test
jne
repnz
rcll
mov
adc
xchg
jne
jmp
rcl
cmpsl
iret
and
std
clc
push
mov
decl
mov
lcall
xor
xchg
repz
jns
dec
sub
mov
add
jl
inc
jnp,pt
jbe
sub
jno
in
cld
mov
or
arpl
mov
ljmp
pop
mov
sbbb
dec
jno
sbb
xchg
xor
fcomip
or
ss
and
add
push
call
inc
xchg
inc
pop
mov
mov
cmpb
ljmp
xchg
fildll
fsubs
sti
xchg
out
mov
and
dec
mov
dec
repz
incl
mov
in
arpl
xchg
sbb
stos
push
mov
in
rcrl
aad
loope
fistps
inc
int
dec
mov
leave
sub
jns
popa
pop
add
loope
or
dec
dec
dec
das
ja
pminub
je
or
xchg
flds
movsl
push
cmp
stc
inc
adcb
jg
popf
mov
insb
cmc
out
push
add
mov
jno
iret
jbe
imul
mov
cli
pop
sbb
test
scas
or
jg
sbb
les
and
add
out
fwait
mov
ss
lcall
push
dec
lret
cmp
test
in
ret
mov
xor
mov
scas
add
aam
xchg
add
jp
loop
cld
jle
mov
call
lcall
movsl
sub
pop
vmptrst
ja
mov
incl
arpl
decl
sbb
shll
mov
ljmp
xchg
push
out
test
sbb
bnd
repz
loopne
adc
repz
out
loop
mov
shl
cmp
fsts
adc
pushf
ljmp
and
incl
out
cmpsl
shll
push
inc
fimull
add
pusha
data16
adc
in
cmp
jmp
lret
push
add
decl
cmpsb
or
jge
xor
xchg
mov
inc
hlt
or
mov
mov
data16
jmp
jl
sub
ret
pop
test
add
ret
mov
xorb
jg
ret
push
jmp
fldl
movsl
gs
mov
ror
and
sbb
repnz
test
adc
cmp
mov
movl
pop
dec
add
ret
jle
or
das
ret
inc
lcall
call
out
inc
jge
mov
adc
add
lcall
cmp
in
in
add
fadds
and
cltd
aam
xchg
inc
xor
sbb
add
jmp
dec
fs
popf
lahf
fstpl
fildl
dec
or
les
xor
mov
dec
lea
jp
sahf
fcomps
push
jmp
push
pop
xlat
adc
add
decl
cmp
push
adc
lcall
fcomip
jg
lea
gs
stos
fxsave
js
sub
aas
filds
in
add
push
subl
mov
pop
dec
shlb
lods
test
sti
and
fxch
out
sbb
or
aas
out
cli
dec
adc
fimull
cwtl
pop
dec
sub
out
dec
lret
cli
cli
xor
add
mov
xor
xlat
subb
mov
adc
sahf
adc
addl
push
das
mov
sbb
mov
aaa
cld
push
test
mov
mov
ds
pop
stos
mov
lds
mov
pushl
data16
test
test
mov
fnsave
idiv
ljmp
std
test
cmpsl
fisubrs
out
ret
or
inc
or
add
push
lcall
inc
jbe
mov
sbb
adc
fiadds
xchg
fldenvs
dec
add
inc
incl
cmpsl
in
xor
adcb
push
push
out
fmulp
ljmp
incl
jns
std
mov
bound
mov
cmp
inc
insl
test
or
mov
idivl
sbb
add
xchg
repz
out
dec
mov
lahf
and
inc
test
daa
and
push
jne
outsl
mov
and
or
or
aad
or
mov
and
jns
adc
roll
loop
push
pop
popa
jp
int3
mov
jns
cltd
jle
cmpsb
incb
std
xchg
incl
imul
jecxz
mov
imul
push
imul
mov
or
or
jge
jmp
and
add
fdivl
or
aaa
jl
ljmp
xchg
push
in
out
jne
inc
mov
mov
js
sub
lcall
inc
sarl
loopne
addl
lock
ss
add
call
movsb
jp
sbb
and
push
push
inc
mov
orb
rcll
inc
fdivrl
sub
mov
cld
sti
mov
adc
cmp
fadds
adc
ljmp
rorb
lods
jle
fwait
rclb
lods
or
es
loop
cmp
cmovb
call
push
cli
rolb
or
stos
aad
and
adc
mov
dec
mov
jne
xchg
rcrl
test
cmp
loopne
call
insb
cmp
repnz
lret
cmp
sub
dec
xor
lds
cvtdq2ps
sub
push
and
sar
call
or
inc
dec
das
movsb
enter
loop
cld
pushl
std
cmp
repz
es
fisttps
cmc
pop
mov
test
incl
adc
outsb
jg
jne
and
dec
mov
sbb
pushf
mov
inc
call
ficomps
icebp
popa
aad
adc
icebp
int
popaw
fdivl
sub
add
push
sub
sub
loop
mov
fsubl
add
adc
jae
adc
in
std
loop
inc
adc
mov
inc
push
xchg
push
rcl
jnp
call
jne
jbe
mov
stos
xchg
mov
orb
jmp
jl
stos
mov
incl
in
out
jmp
or
popa
enter
lock
mov
cmp
addr16
cmp
push
cwtl
or
xor
in
ret
arpl
push
pop
test
jp
pop
sub
bound
incl
mov
mov
out
imul
pop
stos
fcoml
lcall
jae
gs
stc
pop
mov
add
ret
fdivrs
mov
push
push
mov
arpl
push
dec
sub
cmp
stos
add
fidivs
jns
cmp
mov
push
lcall
xchg
sbb
call
fcos
arpl
bound
movsb
push
pop
popf
int
in
mov
shr
push
or
dec
cwtl
cmp
stos
mov
and
dec
push
push
inc
shrb
xor
pop
stos
sub
pop
xor
daa
scas
pushl
ds
xchg
imul
out
mov
adc
mov
add
lods
sahf
cld
jg
or
stc
pop
cmp
sub
pushl
lahf
push
cmp
push
add
ljmp
jnp
adc
add
pushl
ds
inc
jl
call
mov
das
ljmp
mov
xlat
outsl
cli
ficompl
stos
jp
dec
bound
sub
jae
push
mov
or
mov
xor
leave
inc
lret
ss
leave
lock
cld
and
dec
decl
cmp
xchg
cmp
and
imul
hlt
ja
mov
cmp
int
xor
pushl
and
pop
sub
xchg
pop
insl
cmpl
cmp
js
pushf
push
jge
arpl
loopne
out
or
mov
lods
xchg
lods
aaa
inc
mov
enter
bound
xor
mov
add
inc
into
fsub
adc
adc
cmpsl
and
out
clc
lcall
cli
adc
xchg
mov
out
jg
xchg
xchg
pop
icebp
jno
add
ljmp
add
dec
xor
sub
fs
out
or
jno
adc
test
aam
mov
pop
dec
dec
dec
rorl
fdivs
inc
jmp
cs
into
jecxz
ficompl
lea
ss
sbb
xchg
hlt
and
and
cld
or
inc
inc
dec
xchg
pmulhuw
mov
xchg
xor
sub
out
mov
jbe
jg
jg
lods
into
out
xchg
mov
stos
or
dec
stos
mov
sub
mov
ret
scas
int3
pop
sub
lods
xchg
mov
scas
dec
roll
xor
jmp
test
push
xchg
jmp
cmp
shr
out
rcrl
xor
aaa
xchg
outsl
mov
clc
shl
jne
decl
sti
mov
adc
mov
cmpsb
sbb
mov
sahf
imul
sbb
das
popf
ljmp
and
add
pushf
push
std
ljmp
sbb
ret
inc
xor
scas
cmp
mov
jle
jmp
bound
mov
jmp
dec
mov
subb
lret
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
call
decl
jmp
push
pop
shrb
and
idivb
ret
cld
mov
mov
add
test
mov
popa
mov
push
or
decl
mov
add
and
int
roll
mov
rclb
sbb
mov
xchg
inc
mov
sbb
push
cmc
dec
data16
or
add
jecxz
push
mov
mov
add
arpl
sub
dec
jno
aad
or
incl
mov
and
add
hlt
pop
cs
inc
xchg
jmp
and
cmp
ljmp
insb
out
cmp
std
loope
jmp
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
repz
int
cmc
adc
cmp
outsl
or
lahf
jecxz
sbb
jmp
sbb
or
shrb
lds
inc
out
inc
aaa
ljmp
call
dec
insl
rorl
lret
add
rorl
shll
dec
jl
lods
push
xor
fcmovnu
pop
imul
into
test
imull
jo
jbe
incl
mov
imulb
dec
test
push
mov
push
cltd
fcom
inc
jecxz
dec
fnstenv
je
adc
fsts
mov
clc
test
arpl
test
fildll
bound
leave
adc
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
decl
push
push
cmp
daa
mov
mov
xchg
mov
sub
xchg
decl
lock
push
jp
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
out
outsl
push
movd
movsw
jecxz
dec
add
mov
ja
dec
xchg
pushl
jl
in
xchg
push
xor
lcall
mov
sbbl
jmp
arpl
rcrb
xor
fldenv
xor
daa
or
das
mov
incl
lods
push
cld
repnz
push
adc
or
lcall
push
sbb
lahf
mov
jle
cmp
adcb
jo
mov
jge
mov
jmp
jg
lret
push
es
in
mov
rolb
into
sbb
xorl
in
mov
sbb
and
ror
dec
je
aaa
inc
jge
jg
jg
mov
mov
test
and
pop
push
stos
inc
test
jle
mov
pop
pop
mov
jp
iret
or
xchg
cli
dec
adcb
and
jle
addl
call
outsl
mov
mov
adc
lcall
jbe
popa
scas
sar
lcall
bound
hlt
loop
or
hlt
sub
sbb
xor
fimull
aad
addr16
inc
lcall
nop
pop
xchg
cmp
push
sti
add
cs
jmp
cmp
les
inc
push
pop
js
dec
cmp
mov
mov
leave
es
mov
leave
sti
call
outsl
cli
and
shll
stc
neg
push
shlb
xor
dec
inc
mov
dec
stos
push
jo
mov
gs
clc
xor
mov
aas
cmp
cmpsl
je
fidivl
xlat
dec
fimuls
in
lret
fisubl
cmp
inc
xchg
paddb
ljmp
in
out
fs
and
fadd
std
jnp
mov
jno
ljmp
pusha
fcompl
pop
mov
rorb
or
and
cmc
sub
dec
or
pop
sbb
cmp
or
clc
dec
mov
push
outsl
cli
lcall
inc
dec
mov
mov
sbb
arpl
out
lret
mov
cli
mov
xchg
jmp
sub
shlb
push
xor
incl
mov
cmp
mov
mov
add
ror
jne
push
enter
mov
push
xchg
cmc
imulb
pop
fcomip
fcoml
std
mov
call
pusha
sbb
or
pop
add
jmp
out
jl
jmp
jae
push
mov
mov
rcr
fwait
push
ror
pop
nop
aad
fadds
jge
sar
decl
das
mov
jo
inc
aas
jle
cwtl
call
loop
sti
inc
xor
cmc
test
mov
or
or
fwait
and
inc
aaa
push
sahf
loop
icebp
dec
xchg
mov
pushl
adc
sarb
daa
mov
fdivrs
jg
jg
out
sar
lods
sub
pop
out
imul
addr16
sub
mov
lock
jmp
mov
jge
pop
outsb
outsb
out
fs
pop
int3
mov
sbb
int
in
mov
mov
gs
push
and
dec
xchg
sti
stos
int
cld
decl
scas
mov
mov
cmp
mov
jbe
ss
sbbb
leave
jg
pushl
mov
mov
addr16
outsl
add
xchg
inc
pusha
cmpsb
add
ljmp
std
insl
fdivs
lods
adc
in
sbbb
mov
cli
pop
aaa
ljmp
aas
les
roll
js
int3
mov
pushl
push
mov
dec
rorl
call
add
mov
imulb
out
stos
lcall
xchg
jb
adc
push
or
lret
and
mov
inc
push
ljmp
in
jmp
lret
cmc
faddl
ja
loopne
adc
sub
sahf
js
xor
fwait
jmp
fistps
cmovns
add
orl
pop
movsl
pshufw
ljmp
stos
mulb
cmp
mov
fidivrs
int3
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
idiv
incl
jmp
mov
in
insl
or
fwait
push
jbe
sbb
das
repz
push
outsl
inc
cmp
leave
and
ja
adc
arpl
shll
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
xchg
imul
or
lahf
je
lcall
sbb
lods
lods
in
adc
cmp
movsb
xchg
in
sub
jno
icebp
cmp
pop
pusha
jg
mov
rcr
sub
popa
outsl
sbb
rorl
adc
xchg
incl
cmp
sahf
int3
mov
sbbl
pushf
sbb
loop
lock
jg
mov
lret
jmp
sbb
cwtl
xlat
icebp
sub
scas
das
rcr
ret
pop
push
or
xchg
mov
call
xchg
loop
ret
js
mov
adc
lcall
ret
xchg
fbstp
int3
aam
mov
test
rcrb
inc
jmp
push
test
mov
pushf
pop
sub
outsb
data16
add
inc
push
mov
push
loop
rcr
mov
into
jns
cwtl
insb
decl
test
call
fs
jnp
mov
fnstsw
inc
jmp
mov
filds
sub
hlt
push
push
stos
sti
sub
lcall
dec
sbb
add
add
into
inc
push
movsb
mov
cmp
out
ljmp
addr16
cmpsb
or
pop
and
pop
bswap
inc
data16
imul
mov
sbb
lcall
out
jg
subb
jo
loope
int3
jp
shll
scas
in
scas
popf
scas
jmp
pop
cs
ss
sub
enter
pop
xor
sub
dec
ljmp
call
jmp
dec
cmp
jne
shll
daa
mull
inc
cmp
xbegin
adc
pop
mov
jb
and
out
out
jge
incl
in
inc
fisttpll
out
out
out
es
test
sub
mov
xchg
cld
lods
ret
add
std
mov
rcrb
loopne
iret
push
test
adc
shll
fcmovbe
cmp
xor
or
in
and
lret
xchg
sub
data16
int3
fdivr
ljmp
cmp
adcl
ja
ret
jge
mov
add
mov
aad
and
xor
sub
dec
pushf
lahf
sub
lea
sub
adc
jg
pushl
fistps
imul
jg
xchg
out
or
or
cmp
test
ret
cli
and
push
cwtl
outsb
inc
cmp
bnd
push
negl
outsl
xchg
dec
inc
gs
call
inc
mov
mov
push
cld
pushl
dec
sub
dec
pushf
fnstcw
pop
sub
lock
sub
lcall
std
outsb
ffree
sbb
outsb
hlt
and
sub
adc
cwtl
ja
int3
stos
ljmp
cmp
inc
inc
push
shrl
ret
gs
sbb
jmp
mov
xlat
jmp
lods
pusha
mov
xorl
call
push
daa
xchg
and
fwait
or
push
xor
rcll
les
ljmp
call
pop
jecxz
inc
movsl
mov
es
loope
pop
dec
and
out
popf
or
jmp
mov
loop
xchg
dec
rcrb
mov
or
mov
sbb
add
add
adc
movsl
in
lcall
imul
mov
add
es
aam
push
add
mov
das
or
decl
leave
fimuls
mov
decb
cli
mov
adc
in
mov
out
and
testl
adc
add
pop
sub
mov
inc
call
ja
scas
loop
shr
or
addr16
pop
pop
inc
cltd
jg
xchg
shll
jmp
aam
jmp
lcall
fiaddl
gs
sbb
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
sbb
lss
cmp
incb
or
dec
roll
lods
or
decl
add
rcr
push
icebp
in
inc
int
ljmp
dec
jmp
fcmovne
sub
or
incl
sub
pop
imul
imul
repz
cs
fildll
movsb
push
fcomip
idiv
push
lcall
loop
push
mov
pop
decl
push
cmp
insb
adc
sbb
test
fs
cmp
sbbl
xchg
and
mov
ljmp
xor
popf
add
xlat
loopne
jnp
lahf
movsb
push
pusha
mov
cmp
add
cmpl
shrl
xor
icebp
jmp
jbe
jo
fimull
ljmp
dec
sub
push
add
mov
aaa
std
faddl
cmp
icebp
loope
in
std
push
cmp
cs
sub
xchg
fucomi
xor
xchg
push
dec
jbe
xor
push
push
aas
pop
ret
pop
pushl
xor
cmp
stc
sbb
inc
mov
paddq
in
stos
and
mov
xchg
sbb
lods
mov
call
les
mov
pusha
fwait
daa
or
xlat
sub
call
cltd
test
mov
scas
ljmp
jo
hlt
not
mov
call
iret
sub
sahf
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
ljmp
std
js
jne
lods
xchg
sub
sbb
cmp
aaa
and
gs
push
inc
dec
repz
scas
movsb
pop
loope
push
mov
mov
adc
gs
sbb
inc
leavew
clc
stos
lea
xchg
out
scas
clc
clc
push
dec
dec
or
push
cltd
loop
mov
aaa
xor
lcall
outsl
mov
inc
sub
orl
ret
adc
or
cltd
pop
mov
pop
lock
xchg
fwait
cmp
adc
ret
mov
xchg
mov
cmpb
pushl
movsb
push
or
inc
scas
popa
push
xchg
sahf
xor
cmpl
inc
mov
cmp
xchg
pushl
sti
ret
jle
or
in
sub
push
mov
ret
add
push
pop
decl
pusha
mov
sahf
movsl
mov
adc
adc
jo
xor
ljmp
push
fs
or
mov
fnstenv
les
bound
pop
cmp
out
sbb
ljmp
clc
cmpsb
dec
mov
sub
dec
inc
dec
test
iret
mov
fistps
fisubl
cmp
repz
mov
cltd
mov
pop
jecxz
decl
inc
cmp
cmpsl
mov
stos
fimull
pushf
sub
rcrl
mov
adc
test
jmp
lret
test
adc
call
xor
sub
mov
movsb
inc
lret
push
mov
lcall
inc
fsts
pop
flds
or
pop
push
rcll
lahf
leave
push
sar
inc
jle
shll
adc
jl
imul
fcmovnu
push
jo
shrb
pushl
fcoms
pop
pop
jo
push
and
cmpb
rolb
fmull
icebp
push
andb
or
sub
clc
sbb
call
and
sbb
out
mov
push
mov
lods
adc
into
sbb
mov
cs
call
jmp
stc
ret
dec
sbb
lods
iret
mov
cmp
lcall
sti
or
in
jmp
stos
aad
bound
adcl
leave
mov
jne
jecxz
ljmp
xor
and
mov
pop
mov
sub
add
orb
aaa
std
call
pop
dec
inc
test
pop
pop
xchg
gs
inc
addr16
inc
mov
lcall
scas
pusha
mov
notb
push
mov
mov
sub
repnz
add
call
push
scas
add
mov
in
loopne
ficoml
pop
mov
lds
sub
gs
fiadds
xor
in
sbb
jne
call
daa
cmp
shl
add
rclb
int3
push
jp
mov
inc
jns
add
ljmp
je
rcrb
rcr
adc
xchg
mov
stos
push
scas
add
sub
call
loopne
mov
dec
sbb
outsb
aas
add
jge
dec
adc
fwait
std
insb
sub
push
incl
dec
lods
xor
add
addr16
lods
sbbl
mov
inc
add
push
call
and
dec
inc
lds
fisttps
push
mov
add
call
popa
inc
scas
in
add
adc
out
loope
push
movsl
mov
movsb
fs
or
loope
push
mov
cmp
sub
incl
fwait
movsl
sub
mov
ret
or
cltd
or
cltd
fbld
cmpb
cli
das
clc
mov
and
lea
jl
push
push
jmp
mov
enter
lret
xchg
push
ficoml
pop
pop
mov
fdivrs
fcom
jg
loopne
inc
std
jae
xchg
ljmp
mov
ds
lock
ljmp
clc
lcall
fcoml
jb
xchg
or
dec
repnz
aad
insb
std
outsl
cld
iret
dec
xor
pop
das
sub
add
mov
jmp
push
out
adc
addr16
call
pop
aad
push
sbb
aaa
jno
inc
mov
sti
push
cmpsl
and
das
cmp
fiadds
call
in
mov
shl
xchg
adc
and
sbb
insl
pusha
push
fstpt
jnp
aam
mov
sub
nop
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
call
out
mov
arpl
xrelease
adc
test
lods
ss
lcall
pushf
cld
stc
xchg
dec
or
mov
sahf
dec
test
xlat
cmpsl
stos
push
aaa
adc
jb
mov
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
jmp
call
adc
push
inc
jmp
mov
inc
jp
lea
negb
decl
sbb
mov
mov
or
sub
push
sbb
push
stos
in
cmpsb
dec
jb
jecxz
and
out
xor
mov
cmp
out
pop
jg
out
rcr
dec
mov
push
addr16
test
lds
aaa
cld
lcall
cli
xor
mov
insb
sahf
inc
test
mov
aad
inc
mov
and
pop
dec
loope
push
mov
dec
ljmp
jmp
loope
in
int
data16
push
es
call
mov
mov
fwait
loope
xchg
sub
hlt
mov
out
repz
aas
pop
mov
cli
xchg
dec
mov
fnsave
leave
fstp
fisttpll
incl
cld
inc
pop
jp
mov
pop
shlb
das
ficoml
adc
sti
lcall
jnp
lcall
js
inc
pop
xchg
add
cs
add
dec
mov
scas
push
nop
xchg
lea
cmp
push
sarl
and
jnp
jg
sti
pop
lcall
cmp
add
loope
pop
enter
jmp
repz
adc
bound
jns
pop
jmp
pop
in
divl
push
push
daa
repz
sub
sbb
lock
rcrl
les
sub
lods
out
pop
das
sar
subl
xor
sbb
xchg
ja
push
into
in
mov
decl
dec
mov
sahf
sub
push
jne
jb
pop
mov
and
xchg
add
call
fs
into
enter
in
cs
scas
sbb
xor
push
andl
and
ja
negl
xchg
mov
fisubrl
jge
imul
mov
xor
stos
aam
call
mov
fnstsw
fisubs
popf
adc
dec
clc
dec
jg
ljmp
loop
or
call
insl
mov
xor
jmp
cmp
insb
dec
in
sbb
push
dec
pop
jno
mov
mov
cmp
fbstp
cmp
lods
jns
xchg
cmpsl
push
aam
adc
jl
mov
push
pushf
popa
movsb
subl
cmp
and
pop
mov
scas
insb
or
out
cli
fdivr
lods
push
jecxz
cmp
jl
push
enter
xchg
orb
inc
sti
pop
stos
call
pushf
cmpsb
in
imul
out
push
lods
inc
ret
mov
sub
decl
pusha
out
mov
mov
and
popf
aam
pop
fdivl
fcom
mov
shlb
cld
push
cmpsb
jbe
std
lods
outsb
pop
mov
cmp
or
mov
arpl
decl
or
push
in
bndstx
outsb
enter
sarl
lock
mov
xor
decl
cs
adc
cltd
loopne
clc
or
jne
push
ror
pusha
add
xchg
cmpsl
arpl
xor
mov
xor
out
mov
mov
cmp
mov
jbe
inc
pushl
and
loope
js
xchg
mulb
pop
pop
push
loop
inc
pop
mov
imul
lcall
add
cmp
lds
pop
jb
mov
xor
jg
mov
pop
cld
or
mov
decl
xchg
mov
xchg
rclb
mov
dec
cmp
pop
adc
add
mov
dec
adc
rorb
lahf
outsb
mov
jg
ds
dec
lods
in
in
lods
stc
sarl
dec
mov
jb
test
or
test
push
and
dec
std
incl
mov
ja
mov
aaa
or
mov
jg
dec
fildll
lds
sbb
push
test
jg
sbb
add
pop
ljmp
push
mov
xor
insb
sub
and
das
ja
rcrl
or
dec
imul
negb
adc
scas
mov
adcb
cmp
sub
xchg
pop
mov
scas
fistpll
add
mov
in
add
jmp
xchg
call
incl
daa
mov
daa
pop
jmp
outsl
mov
or
dec
repnz
or
ljmp
jmp
and
inc
leave
lret
mov
mov
mov
jns
push
icebp
xorb
decl
pop
mov
mov
sub
sti
fbld
xchg
pushf
fidivs
jg
fstpl
fcmovu
js
ja
mov
mov
cwtl
rcll
jecxz
in
das
xchg
or
fisttps
push
push
dec
jecxz
xchg
scas
add
aaa
cld
lea
pop
add
lods
les
fiadds
or
imul
decl
jmp
fwait
pop
dec
inc
pop
iret
push
adc
mov
jmp
mov
dec
or
ffree
xor
repz
jg
mov
lcall
push
out
push
adc
lds
fisubrl
pop
das
inc
mov
jmp
jnp
xor
cltd
imul
pop
adc
push
mov
or
loopne
push
test
fildl
pusha
insb
rol
lahf
push
cmp
or
mov
sub
mov
push
or
lods
dec
mov
scas
addr16
inc
es
xchg
cld
cmp
aad
movsl
into
incl
cs
fnsave
out
inc
aaa
movsb
and
pusha
adc
ret
jp
push
cld
add
mov
out
mov
xchg
lret
out
cli
jmp
sub
clc
or
pop
sahf
dec
call
add
mov
add
dec
add
std
sbb
pop
ret
sahf
dec
clc
inc
jmp
cmp
pop
rol
into
pop
mov
mov
popa
xchg
vsubss
leave
inc
dec
lret
sbb
sbb
stc
mov
data16
push
jnp
lcall
or
cmp
rorl
jmp
jno
mov
fists
mov
ljmp
das
repnz
je
dec
repnz
into
or
in
adc
xchg
nop
mov
mov
aaa
adc
pop
pop
hlt
fisubrs
sbb
ds
push
xor
xchg
ret
aam
cwtl
push
dec
cltd
jb
adc
push
mov
push
lock
pop
mov
adc
xlat
mov
mov
lods
xchg
jecxz
push
jl
imul
push
dec
mov
movsb
sbb
xor
ljmp
push
push
loope
mov
test
das
sarb
add
push
aaa
mov
sbb
repz
ljmp
cmc
fldt
jae
cmp
inc
jmp
mov
jmp
ljmp
es
adc
jg
or
add
in
mov
or
mov
inc
jne
pop
icebp
jecxz
and
push
push
call
push
jl
jo
mov
fcoml
scas
sbb
in
pop
cmc
add
or
bound
push
fcomps
mov
int
decl
dec
jecxz
rorl
loope
add
pop
in
push
sub
inc
mov
ljmp
inc
xchg
mov
push
and
mov
testl
cmpsl
mov
rol
pop
sarb
daa
sti
or
mov
decl
mov
in
rcrb
lret
add
add
std
and
lcall
outsb
imul
push
and
adc
shl
into
mov
loopne
mov
pushl
adc
arpl
imull
sbb
cmp
cld
cwtl
push
inc
push
xor
pushl
ljmp
imul
scas
xor
clc
sub
mov
std
pop
lock
lcall
imul
push
sub
repz
insb
ja
fmuls
dec
int
sahf
incl
std
and
push
loope
sub
mov
mov
in
in
stos
sub
cmpsb
nop
jp
mov
lea
add
addr16
dec
ljmp
into
fbld
test
lret
push
jge
sub
adc
mov
cmp
lcall
jge
xchg
mov
inc
cmpsb
rorl
mov
cmp
lcall
sub
xlat
aam
mov
call
add
xor
rol
ljmp
dec
enter
jge
ud1
mov
sbb
adc
sub
push
sub
rcrl
clc
call
popa
add
lea
push
pop
fcompl
jnp
call
pop
jmp
sbb
fwait
ja
arpl
scas
jmp
scas
enter
and
jmp
and
inc
mov
jbe
ja
push
jp
or
or
aas
xchg
jmp
sbb
sahf
movsl
in
xchg
mov
loope
mov
repz
mov
in
cmp
push
sbb
mov
push
mov
jp
push
mov
xchg
in
lret
rorl
popf
and
xor
pop
sub
test
lcall
stc
mov
scas
sub
stc
sub
rolb
jmp
xchg
cli
and
in
cmp
jmp
sbb
lods
stc
mov
cwtl
outsb
mov
push
bswap
movsb
or
in
mov
and
data16
lahf
and
jge
cld
xchg
mov
adc
pop
cmc
mov
lods
push
jle
mov
imul
jg
pop
inc
test
incl
push
and
mov
add
mov
mov
aam
xchg
pop
fadd
popl
hlt
mov
jmp
dec
pop
inc
aam
shrl
sahf
adc
sbb
mov
fisttps
adc
xchg
and
mov
pop
addb
push
bound
in
cwtl
fdiv
lcall
dec
stc
xchg
and
push
jecxz
lods
call
mov
leave
test
jae
aaa
xchg
cmp
jmp
out
movsb
pop
jmp
lods
add
ja
mov
lcall
xor
or
out
cltd
ljmp
mov
mov
js
push
mov
push
aaa
in
dec
pop
lret
xchg
sub
stos
ljmp
in
dec
lret
mov
pop
aad
adc
cld
mov
xor
scas
clc
pushl
sbb
std
cwtl
les
call
lret
stos
jg
mov
lahf
cs
iret
cmp
sbb
inc
idiv
sahf
sahf
mov
mov
jmp
sbbb
lea
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
stos
incl
sbb
xchg
adc
imul
bnd
cmpsl
inc
dec
mov
leave
mov
out
fistps
dec
sub
insb
fidivrl
inc
in
outsl
dec
xor
sbb
imulb
aam
shrl
mov
and
mov
fucom
idiv
jmp
je
mov
mov
in
movsb
mov
cmpb
push
loope
or
sub
incl
inc
incl
and
or
std
lea
push
aam
sbb
aad
or
sub
pop
fistpl
push
shl
pop
and
cld
jmp
xlat
aaa
mov
and
jb
xor
movsb
mov
xor
ljmp
mov
rorb
lods
fwait
lcall
mov
pop
dec
jmp
inc
loope
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
sub
jno
fildll
add
ss
mov
push
cmp
jnp
stos
ret
mov
ljmp
xor
lock
and
fisttps
dec
jmp
push
sbb
je
sahf
and
rcrb
xchg
lcall
or
repz
jmp
jns
insb
xchg
adc
dec
ret
inc
out
movsl
mov
idiv
push
pushf
sbb
aaa
sti
test
jns
adcl
aad
lods
pop
and
ja
and
test
arpl
ss
inc
into
cmp
cltd
xor
fwait
inc
cmpsb
cld
popf
adc
in
cmpb
mov
cmp
xchg
add
loope
sbb
loope
cmpb
ljmp
jge
cmp
nop
scas
mov
mov
int3
sbbb
insl
jno
inc
mov
arpl
arpl
inc
mov
scas
cli
int
test
pop
lods
xor
ja
xor
adc
aaa
pop
js
mov
jns
incl
jnp
sahf
add
push
out
int3
pop
mov
arpl
mov
mov
adc
vandnps
shl
lock
sub
cld
ljmp
call
pop
pop
mov
xor
add
cmp
test
das
adc
pop
jne
mov
imul
add
dec
xchg
push
mov
push
xor
pop
cmc
clc
xchg
push
ret
jmp
add
data16
adc
pop
xchg
and
call
fadds
std
mov
int3
or
fistps
xor
icebp
nop
out
mov
rcrb
gs
mov
ret
mov
dec
scas
jmp
sub
fiaddl
xor
outsb
loopnew
adc
fisttps
aam
add
jle
inc
mov
jmp
js
mov
mov
add
mov
mov
mov
or
ss
push
mov
jmp
lds
mov
jle
fwait
jb
in
test
dec
xchg
push
adc
sbbl
lcall
mov
and
in
inc
and
popa
imul
test
ja
je
aas
jecxz
enter
clc
xorl
add
cmpsl
xor
pop
mov
lcall
je
lock
lea
movsb
inc
mov
test
pop
mov
sub
decl
sbbl
call
pop
ljmp
lods
push
aaa
xor
call
mov
inc
cmp
xor
xchg
push
lcall
inc
clc
mov
bound
lods
push
pop
andb
sbb
jnp
test
bound
xor
inc
data16
adc
aaa
cld
jmp
xchg
push
scas
addr16
movsb
jbe
jp
arpl
xor
scas
test
decl
mov
stos
xchg
cli
clc
lods
mov
mov
xor
ljmp
incl
mov
add
cmp
repz
loop
pop
push
notb
xor
mov
decl
mov
mov
mov
push
jmp
setne
imulb
testl
jmp
jmp
lods
adc
add
imull
push
jl
push
jno
outsl
sbb
test
call
and
stos
fdiv
or
lahf
cmp
shl
mov
in
test
shl
jno
lods
sub
mov
lcall
lahf
or
gs
mov
push
adc
adc
rcrb
incl
mov
sbb
pop
and
pop
inc
clc
outsl
loope
cli
pop
dec
add
loop
pop
push
cmovb
inc
incl
enter
push
scas
push
addr16
fsubrs
or
incl
cltd
push
push
cli
ret
imul
dec
stos
rol
mov
push
jbe
mov
cmp
mov
inc
xor
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
ljmp
out
sbb
xlat
adc
xchg
add
sbb
pop
adc
fcomps
incl
aas
cmp
and
jnp
sub
lods
sbb
aaa
jecxz
jbe
mov
adc
incl
repnz
add
fimull
scas
mulb
clc
sbb
in
je
testl
lock
jnp
cmc
cmc
cmp
lock
dec
sub
fwait
add
jns
sub
scas
mov
mov
add
add
sbb
hlt
xorb
add
push
pop
add
push
insb
lret
bound
in
adc
out
dec
sub
orl
iret
cmp
inc
push
data16
or
xchg
cmp
imulb
aas
add
and
popa
es
inc
mov
popl
or
dec
pop
inc
inc
xor
decb
ret
fisttpl
das
sbb
dec
call
mov
lds
mov
cmp
xchg
rcrb
fldcw
aam
call
ficoml
push
fisttpll
movsb
outsl
stos
test
cmp
ljmp
inc
mov
in
dec
aam
xchg
test
lock
popa
or
movsl
cmpsb
sub
bound
pop
mov
jo
sbb
subb
sbb
push
jmp
mov
test
mov
nop
dec
repnz
inc
lods
imul
adc
jp
or
fwait
fs
das
loop
daa
incl
sahf
pop
xlat
cmp
sub
in
sub
dec
sbb
push
lods
outsl
cli
mov
ds
adc
mov
inc
test
hlt
xor
xchg
fisubs
jle
xchg
pop
popf
sti
mov
int3
pop
xor
cltd
xchg
addl
push
mov
pop
pop
cmp
call
clc
je
psllq
cwtl
sub
or
movsl
fldl
mov
add
lock
decl
sbb
ja
lods
scas
ficompl
mov
pop
out
dec
call
mov
lcall
inc
test
jmp
mov
add
push
sbb
pop
sahf
and
push
dec
jmp
into
xor
scas
xor
cmp
arpl
and
mov
movsb
cli
outsb
int
or
pushl
into
movsl
jo
cltd
fisubl
xchg
mov
popw
sbb
add
sbb
pushf
jne
icebp
mov
push
cwtl
pushl
pushl
mov
daa
ret
pop
loop
or
rol
rolb
out
inc
xchg
stos
dec
in
dec
jg
decl
jne
scas
lds
jle
mov
lahf
push
pop
dec
pushl
adc
loope
fcoms
scas
jno
pop
xchg
sahf
xchg
mov
fcomip
dec
inc
dec
mov
sub
add
std
add
mov
add
lock
test
icebp
lahf
movsl
inc
aad
inc
not
std
sbb
adc
test
push
or
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
decl
neg
sti
sub
mov
insl
repnz
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
pushl
cmpsb
in
push
ficoms
push
lret
jbe
imul
test
adc
in
push
mov
fcomip
xor
loop
sub
fwait
and
imul
jmp
jle
jno
inc
cmp
cmc
clc
call
pop
aam
in
cmp
jg
icebp
es
xchg
fadd
xor
das
xor
xchg
shrl
shl
out
mov
cmpsl
sbb
xchg
add
cltd
loopne
mov
pusha
sbb
inc
pop
fisttps
rorb
sub
pop
pop
pushl
jecxz
mov
cmpsb
ljmp
jo
hlt
mov
cmpl
imulb
pop
jecxz
cmp
ja
cli
or
pop
rcrb
sub
enter
mov
test
cmpl
lcall
cmp
push
rcrl
mov
xchg
arpl
shlb
and
incl
and
lods
dec
xchg
push
xor
jno
call
add
out
xlat
cwtl
mov
and
ret
into
push
xchg
pushf
cmp
test
mov
xor
inc
and
out
lock
xchg
push
daa
sbb
loopne
mov
imul
pushl
add
push
mov
jecxz
adc
sub
out
outsb
addr16
lcall
stos
addr16
aas
cmp
bound
push
rcrb
rolb
movsb
sbb
inc
incl
inc
mov
loop
xchg
push
or
in
mov
and
out
nop
data16
jns
cmpb
pushl
jmp
loopne
and
pop
inc
dec
mov
and
popf
data16
ljmp
add
sbb
xor
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
imulb
rcr
fsubl
arpl
test
clc
cli
gs
inc
push
mov
fbld
push
mov
dec
addb
push
fisttps
cmp
ds
jo,pt
pop
test
idivl
inc
inc
mov
sub
outsl
mov
inc
ret
mov
pushl
popa
movsb
mov
inc
fdivrs
inc
push
mov
pushf
xchg
sub
ljmp
jg
jmp
int
dec
test
pop
jne
cmpsb
adc
scas
mov
mov
lock
sar
mov
cld
lret
js
push
xchg
gs
ljmp
out
lret
push
pop
sbb
lcall
xchg
fsubrl
pop
inc
shrb
popf
ret
aas
inc
xchg
popa
lahf
scas
or
fs
fcoms
or
pusha
sahf
out
fs
inc
lcall
movsl
and
sub
ffreep
cmp
cli
scas
and
adc
shrl
push
mov
enter
call
xchg
xchg
and
mov
lcall
inc
mov
fidivl
and
xor
push
lcall
adc
cmpsb
mov
je
mov
adc
ss
or
sti
fdivp
dec
fimull
shlb
lret
jp
loope
fwait
cmp
mov
lret
jmp
pop
ds
call
jnp
fmuls
out
int
call
cmp
xchg
ficompl
mov
insb
aas
mov
pop
and
inc
adc
xchg
cmp
push
pop
rcrb
mov
mov
sbb
jmp
mov
lahf
fimull
decl
cmpl
mov
adc
cmp
dec
mov
in
push
push
add
lcall
mov
dec
jecxz
inc
mov
sti
pop
int3
xchg
aaa
jp
or
adc
fisubrs
dec
adc
xor
lcall
lret
arpl
repnz
mov
in
mov
gs
ret
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
addr16
insb
push
jl
pop
cld
or
mov
push
dec
mov
dec
adc
lcall
lret
jecxz
in
xchg
dec
mov
ljmp
sbb
sbb
push
popf
decl
mov
pop
sub
push
loope
xchg
pop
xor
mov
xor
adc
mov
jo
lods
xchg
out
mov
call
dec
scas
jge
or
push
loopne
mov
pop
into
repz
mov
call
xor
movaps
xchg
xchg
call
and
ljmp
pushf
push
dec
adc
ror
inc
ds
mov
decl
sbb
stos
and
jp
fnstcw
bound
outsl
cli
adc
loope
inc
push
jle
mov
roll
cmp
mov
pop
mov
hlt
stos
adc
add
mov
ret
mov
call
and
call
xchg
mov
xchg
jg
aas
faddl
pushl
iret
and
ja
sub
enter
pop
jnp
or
fisubl
or
mov
out
test
sub
inc
pushf
frstor
sbb
jne
aam
gs
ljmp
mov
cmp
mov
daa
imul
lods
or
repnz
add
xlat
call
fnstcw
and
xor
xchg
pusha
xor
dec
popa
stc
subl
push
xchg
fiaddl
ret
push
dec
xchg
or
cmc
xor
test
or
xlat
adc
repnz
mov
pop
push
dec
jg
fisttpl
cmp
sub
roll
mov
jg
jecxz
popa
js
lret
push
push
ja
jle
cmp
lock
dec
sbb
int
dec
lret
loop
incl
pop
mov
aaa
shll
jns
lahf
cltd
mov
std
jmp
dec
lods
pop
or
sahf
iret
push
sti
rolb
insl
cmp
pop
pop
sub
xchg
insl
stc
not
lcall
je
sub
cmp
lock
or
xchg
and
dec
mov
sar
cwtl
sbb
ret
xchg
leave
and
test
loop
sbb
jb
popf
add
call
adc
js
call
imul
insl
mov
lds
call
fadds
mov
adc
pusha
adcb
sbb
test
mov
jmp
mov
push
inc
mov
and
or
sbb
pop
movsb
daa
outsl
rorl
int3
sbb
or
test
in
and
mov
arpl
and
ljmp
sbb
xchg
mov
jno
out
outsb
lcall
imul
add
ja
lahf
pusha
imul
jb
add
mov
jmp
shr
add
addr16
fidivl
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
decl
aas
aad
xchg
or
jg
hlt
mov
inc
adc
dec
lcall
movsl
stc
xor
pushl
sahf
mov
pop
sub
jnp
inc
ror
add
sbb
into
scas
and
outsb
add
fcomip
xchg
and
sbb
divb
and
xlat
ret
aad
pop
or
sahf
push
out
imul
xchg
mov
and
rcrl
push
jae
jp
adc
les
xchg
push
push
pop
call
push
and
cmpl
add
repnz
movsb
aad
xchg
stc
mov
in
mov
lcall
pushf
shll
dec
sub
xchg
pop
jno
pop
leave
int3
and
mov
mov
je
lcall
jno
xor
pop
inc
mov
mov
pop
sahf
or
idivl
fsin
xchg
incb
in
inc
xor
add
jmp
insb
int3
add
sub
fwait
lods
fimuls
mov
fildll
cmpsb
jno
negl
test
jmp
aas
decl
adc
dec
jbe
movsl
loope
dec
xchg
es
daa
and
ret
inc
inc
jecxz
popf
test
std
mov
call
jbe
cmp
mov
stos
mov
jae
lret
sub
push
addr16
andb
decl
and
jmp
inc
bound
push
sahf
inc
jno
sbb
mov
lcall
pop
mov
mov
pop
mov
repnz
mov
inc
xchg
mov
inc
jns
clc
ret
add
dec
sahf
call
testl
mov
sub
mov
es
cld
fwait
dec
cmc
cld
add
mov
mov
or
or
mov
mov
das
cli
jmp
pushf
cwtl
mov
or
mov
push
xchg
cltd
aad
jb
dec
push
lods
mov
stc
push
sub
jl
mov
jle
add
sahf
js
hlt
pop
add
sbb
imul
mov
jae
jg
mov
sbb
xchg
mov
test
pushl
adc
inc
ret
mov
jbe
aas
push
icebp
sbb
popf
push
es
push
inc
inc
fnstenv
lcall
mov
leave
jnp
mov
std
mov
sub
push
rorb
mov
call
mov
popf
movsb
and
cmp
and
loopne
cmpsb
jge
push
incl
or
les
xchg
ds
sub
pop
jbe
test
add
pushf
fildll
shlb
fs
popf
mov
cmc
xor
jae
mov
sbb
push
sar
cmpsb
incl
sub
dec
and
jnp
jbe
sub
fistl
jo
mov
ret
popa
out
rorb
cmp
cmpsl
repnz
or
nop
sahf
add
push
adc
add
es
pop
ret
ds
les
jge
mov
call
call
outsl
aas
inc
loope
mov
cmp
fcoms
fbld
push
ret
jg
dec
mov
xor
dec
arpl
dec
jae
mov
repz
and
mov
idivb
ffree
popf
imul
xlat
jg
jno
cmp
imul
shll
out
inc
pop
add
iret
inc
pop
mov
popf
ljmp
loop
pushl
test
push
aas
shl
pop
jge
je
or
pop
ja
inc
xlat
rcr
fbld
cmc
cs
cmpsb
sbb
test
pop
cmp
xor
xchg
pushl
cs
fwait
sarl
cmpsl
mov
dec
sarl
mov
jb
cmpsb
push
inc
dec
jnp
xchg
push
push
jg
push
aas
lock
sbb
and
popl
cmp
stos
jae
push
bound
or
adc
mov
mov
adc
fs
imul
mov
ljmp
decl
insb
xor
outsb
hlt
inc
fwait
sub
pop
cmp
or
inc
or
es
mov
mov
lret
mov
fldl
in
add
loopne
jbe
cmpsl
hlt
adc
cmp
decl
pop
push
or
cmp
fsubrs
insl
aam
mov
jb
pop
xchg
repz
decl
push
scas
test
dec
insb
or
push
lret
dec
mov
mov
mov
out
mov
pushf
fimuls
add
test
jmpw
clc
scas
arpl
je
push
call
lret
cltd
pop
leave
jp
xchg
push
rorb
mov
cld
xor
fisttps
in
push
sub
push
subb
mov
xchg
insb
mov
shlb
xor
pop
lret
adc
pop
sub
pop
adc
das
jb
sar
or
cltd
fwait
jmp
sub
es
adc
xchg
adc
test
adc
push
and
rcrb
push
cmp
xchg
scas
in
inc
in
fdivr
mov
sahf
mov
ds
adc
enter
lods
lcall
jmp
dec
mov
mov
pop
mov
pop
aas
fildll
js
je
or
and
lret
lods
or
lretw
and
xchg
aam
dec
xchg
jge
xor
insb
add
mov
stc
and
sub
je
cli
das
shrb
add
popf
fs
adc
jg
inc
cli
cmc
inc
sub
test
rcr
dec
pop
or
popa
jecxz
pushl
inc
mov
sbb
aaa
push
sub
lcall
dec
popf
cli
roll
sbb
jno
add
sbb
sti
mov
adc
ljmp
jg
in
in
mov
pop
push
bound
test
gs
repnz
cmp
sbb
sti
mov
nop
and
jb
jbe
xchg
sub
mov
ljmp
xor
lods
push
dec
stos
dec
jae
push
ds
insb
push
mov
xor
pop
test
lcall
data16
cld
mov
arpl
sub
data16
test
gs
inc
mov
mov
push
imul
loope
into
push
mov
sbb
push
icebp
aaa
add
jg
sti
mov
leave
mov
push
ret
enter
sub
decl
mov
es
out
imul
dec
imul
cmp
xchg
in
fs
or
decl
mov
decl
fs
outsl
push
push
repnz
dec
imul
sbb
push
adc
std
out
clc
decl
dec
or
and
cltd
sbb
mov
xchg
jns
jb
inc
cld
lcall
sub
lcall
push
sbb
push
repnz
clc
add
arpl
out
lods
aad
adc
lock
jo
sbb
pop
test
push
pusha
jbe
ljmp
in
loopne
adc
pusha
inc
push
pop
in
lret
in
push
aad
imul
insb
xchg
or
push
xchg
jp
inc
mov
xchg
push
jmp
repz
xor
inc
fadds
cmp
cmpsl
cmpsl
imul
sets
push
loop
jmp
rcll
movsl
lods
incb
mov
outsb
fdiv
out
sub
mov
inc
loop
pop
arpl
lods
sbbl
inc
add
mov
fcmovb
arpl
jl
out
xorl
lea
cli
sbb
shll
lods
and
or
mov
jmp
sbb
callw
xor
adc
add
arpl
pop
cmp
mov
in
pushl
fs
pop
adc
call
add
sbb
or
dec
out
cs
incl
aas
ret
lock
mov
out
and
fmull
mov
ljmp
fildl
sahf
lds
test
pop
int
les
dec
out
stos
pop
cmp
cmpsl
or
out
movsb
data16
aam
ret
mov
mov
add
adc
mov
xchg
lcall
push
rcrl
jle
ds
dec
pop
sub
popf
lods
je
ds
jp
cli
incl
mov
xchg
adc
add
loop
into
std
cmp
pop
loopne
fildll
out
xor
add
insl
xor
lcall
sbb
xor
jo
xor
lock
jg
stc
xor
push
call
mov
data16
push
std
and
sub
cwtl
loope
pop
dec
push
fstps
cmp
jle
xchg
cwtl
jecxz
xlat
or
pop
fsts
cs
call
mov
cmp
add
jae
popf
icebp
jmp
xchg
jo
cld
lcall
add
daa
mov
dec
cld
push
or
and
nop
decl
sub
mov
imul
xchg
ja
ret
jmp
aas
adc
jecxz
dec
sbb
adc
test
or
xchg
shrl
mov
int3
add
icebp
int3
in
into
pop
xlat
adc
mov
pop
jp
stos
cli
out
jb
jle
mov
and
push
cmpsb
jge
push
int3
out
add
mov
mov
xchg
fisttps
cwtl
shll
dec
mov
incl
cld
lods
in
loope
cmp
testb
mov
call
mov
sbb
mov
sbbl
jbe
jg
add
inc
iret
dec
shl
call
sbb
and
decb
outsl
int3
test
mov
outsb
sub
sbb
jmp
sbb
cld
and
out
decl
mov
data16
mov
outsb
ds
push
cmpsb
xchg
ljmp
cli
pop
cli
pushl
insl
int3
enter
lahf
sbb
outsb
sbbb
pushl
andb
repz
into
inc
jecxz
out
jns
push
or
jne
daa
cmc
cltd
cmp
pushl
inc
lds
popa
mov
xchg
mov
push
mov
push
dec
fwait
sti
ljmp
ljmp
ljmp
add
inc
ljmp
cs
pop
push
add
and
dec
push
call
call
stos
inc
pop
loope
xor
jmp
adc
andl
mov
stos
xchg
shll
sarl
aaa
and
cltd
adc
popa
aam
jmp
cwtl
iret
mov
stos
int3
psrlq
add
sbb
pop
sbbb
add
inc
cmp
outsb
arpl
xchg
sub
mov
push
sub
sar
jg
add
movsb
das
jne
pop
xchg
add
out
icebp
rclb
push
xor
mov
outsl
adc
loope
adc
cwtl
fcoml
adc
mov
inc
sub
mov
cwtl
insb
into
out
mov
sbb
rcr
popa
stos
xchg
stc
into
mov
ret
popf
sahf
add
cmpsb
jmp
movsb
cld
push
cwtl
xchg
jbe
lcall
popf
cmp
cmp
sbb
arpl
push
adc
sub
call
std
cmp
adc
push
shlb
mov
repz
call
dec
cs
outsb
xchg
addr16
clc
xchg
pop
lcall
enter
mov
ja
push
into
divl
dec
fildl
movsl
sbb
addr16
pop
test
ljmp
mov
in
ljmp
jmp
add
push
mov
lds
scas
mov
mov
xor
lcall
cmp
gs
jae
iret
or
mov
jns
lret
xor
jmp
in
mov
outsb
out
nopl
push
fs
xchg
add
ljmp
hlt
xchg
clc
adc
or
loopne
loopne
push
andb
sbb
cmp
push
mov
addr16
push
es
mov
xchg
push
incl
cmp
inc
lret
fs
mov
dec
push
jns
cltd
loope
adc
mov
jle
jno
mov
pop
lock
sbb
add
push
or
sarl
hlt
mov
fildll
and
mov
xlat
sarl
dec
adc
add
pop
xchg
icebp
arpl
data16
inc
lahf
mov
jmp
std
mov
xchg
sti
jnp
cmp
cld
add
dec
pop
ss
mov
stos
mov
jbe
cmp
xchg
clc
mov
movl
mov
jmp
enter
push
outsb
in
fisubrl
jle
dec
pop
lcall
sub
vmovups
imul
jle
dec
scas
std
sbb
add
out
ljmp
dec
nop
push
scas
push
imul
testb
add
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xchg
cmc
pushl
sar
cmp
ss
ja
mov
mov
inc
sbb
jmp
fisttps
sti
loopne
jmp
add
lea
xor
jne
rorl
cwtl
je
pop
pop
ss
dec
xor
pushl
xchg
test
lahf
cmp
jmp
and
scas
cld
mov
push
sar
adc
mov
mov
jnp
add
xchg
in
insl
test
pushf
sub
enter
mov
xchg
jg
outsl
xchg
pop
cld
aaa
adcl
idivb
jle
adc
adcl
and
dec
lods
pop
push
cmovp
inc
pop
cli
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
mov
or
dec
lds
je
xor
out
call
imul
pushl
andl
xor
ljmp
fisttpl
fnstcw
add
cltd
clc
fucomi
push
mov
and
push
leave
in
pop
jg
dec
idivb
pop
wbinvd
loop
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pushl
pop
js
insb
out
sbb
leave
jle
jp
jle
sbb
and
das
pop
dec
xor
fwait
jb
adc
cmp
xchg
mov
mov
or
sbb
cmp
sbb
xor
push
test
jmp
dec
jb
rol
xchg
xchg
sbb
inc
and
int
adc
cmp
pop
out
and
or
push
je
mov
out
jmp
cmpsl
add
test
inc
lods
cmc
xor
je
xchg
xchg
mov
aad
push
lock
dec
fdivs
mov
addb
jmp
cmpsl
in
aaa
cmp
mov
out
rorb
test
xor
sahf
pop
cwtl
add
xor
loop
mov
and
jmp
mov
sbb
xchg
sub
mov
out
loope
ret
jnp
dec
stc
jae
add
mov
fcoms
addr16
or
leave
add
mov
movsl
idivb
lods
test
lcall
dec
stos
xor
add
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
incl
repnz
pop
cmp
popa
jg
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
push
ja
adc
jb
lret
stos
int
pop
sbb
fistpll
mov
sti
mov
lret
inc
lods
fdivs
aaa
push
cmc
daa
negb
ja
pushl
pop
clc
jae
and
scas
iret
fistpl
push
ficoms
fistpll
add
dec
std
inc
push
mov
push
push
call
ljmp
fstpl
mov
sub
sub
ljmp
in
ljmp
aad
push
test
xor
sub
sbbl
xchg
loope
pop
std
add
lock
decl
fldcw
xchg
iret
hlt
cmc
jbe
inc
jb
lock
xchg
sub
loope
hlt
rol
and
aas
mov
jne
lret
cwtl
jl
incl
decl
push
iret
into
mov
sbb
jb
jmp
pop
insl
dec
mov
incl
dec
xor
loopne
push
imul
xlat
mov
les
sbb
imul
cmpsl
cmp
pop
call
mov
cmp
push
cmp
xlat
mov
shlb
xor
pop
cmp
jnp
stos
and
aas
push
js
cmp
ds
cwtl
push
ds
push
lea
incl
ja
addr16
mov
nop
vunpcklpd
mov
icebp
enter
jmp
inc
mov
cmpsl
out
adc
daa
inc
or
pop
push
cmovb
pop
incl
pop
lock
int
push
or
ret
xchg
xor
jb
sbb
test
aaa
mov
jb
cli
ja
inc
jge
jo
out
adc
mov
cmp
ret
sbb
loopne
ljmp
mov
mov
xor
mov
jmp
mov
fistpll
aad
jno
cs
jmp
loop
ss
insl
outsl
mov
mov
jmp
mov
fidivl
mov
xor
sub
nop
dec
aaa
mov
add
xchg
push
clc
inc
cmpsb
xor
incb
push
jle
jecxz,pt
inc
jbe
out
add
mov
inc
pop
shrl
sub
or
push
lahf
mov
jge
dec
ja
jmp
lods
arpl
out
push
in
pop
ret
inc
fcoml
fldl
fcomip
push
cs
loopne
xchg
cs
mov
xor
cli
outsb
add
mov
pushl
push
sbb
in
movsl
xlat
aam
mov
xchg
bound
cmp
push
adc
jmp
insb
xor
jbe
jne
mov
push
cmp
pop
inc
pop
add
xor
cmp
pop
repnz
mov
ljmp
pop
ja
ror
dec
adc
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
popa
add
mov
pop
push
daa
dec
in
lret
daa
int
sti
sbb
and
sub
decl
add
daa
mov
or
pop
nop
or
femms
frstor
add
shr
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
ljmp
dec
aad
cmp
clc
in
insl
mov
rolb
mov
stos
leave
add
js
dec
add
jl
pop
mov
inc
xor
lahf
xchg
and
add
mov
lods
sbb
outsb
icebp
and
pop
mov
stos
popf
pop
mov
loope
clc
enter
and
cmp
outsl
shll
inc
cmp
sbb
hlt
xor
sbb
out
lcall
rolb
test
add
push
jnp
jnp
push
addr16
sti
ljmp
jb
sub
and
shr
or
xchg
adc
stos
push
decl
push
js
mov
push
dec
push
jl
in
fisttpll
aam
add
mov
outsl
add
jnp
mov
andb
xor
adc
add
scas
mov
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
not
jmp
xor
les
cmc
int3
loopne
stos
add
loope
mov
and
lds
jb
jg
mov
cld
pop
enter
and
out
jbe
mov
and
icebp
push
add
or
adc
push
jnp
and
mov
gs
incl
mov
out
adcb
xor
mov
pop
mov
pop
movsb
call
cmc
je
cmpsb
shlb
sti
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
jg
and
or
pushf
dec
inc
jae
loop
enter
mov
clc
cmp
jmp
sbb
hlt
std
lock
or
push
jb
pop
loope
nop
cmc
mov
cld
bound
sub
lret
ja
xor
cltd
cld
or
pop
pop
mov
int
mov
mov
jp
or
add
insl
ficompl
rorb
mov
mov
ja
and
gs
out
pop
jl
ss
loop
pop
pop
jl
incl
inc
pop
mov
test
icebp
std
jmp
ret
jl
inc
or
rcll
xchg
push
xorl
arpl
shlb
mov
test
cmp
cmp
or
sub
pop
icebp
ljmp
push
insb
stos
push
repnz
jg
xchg
push
mov
jne
jnp
incl
cmp
xchg
repnz
push
mov
push
cmpsb
je
test
das
mov
or
call
xor
jo
mov
mov
dec
pushf
lcall
push
loopne
mov
xor
out
mov
pusha
ljmp
sbb
jno
mov
pop
mov
jmp
andl
xor
sahf
ja
sahf
mov
mov
adc
ss
inc
sbb
sub
popa
into
push
loopne
das
mov
xor
adc
push
aam
add
sub
out
cli
rcr
jge
imul
scas
add
sbb
js
add
jbe
into
lcall
aam
lcall
xor
test
mov
faddp
mov
dec
ds
sbb
push
mov
dec
cmp
jne
mov
sub
push
test
test
stc
sbb
es
pop
pushl
dec
es
std
mov
push
pusha
test
xor
pusha
imul
incb
jmp
pop
stc
daa
repz
mov
mov
stc
stos
xor
xchg
call
pusha
dec
push
push
decl
xchg
sub
cmp
cmp
add
mov
mov
call
adc
pop
sahf
aad
mov
or
sahf
mov
iret
pop
mov
in
ja
mov
jno
add
cmp
push
rcl
pop
jl
pop
rol
sub
mov
lcall
jp
ljmp
push
or
jmp
push
jae
pop
jbe
adc
call
xor
mov
push
cmpsl
cmp
in
repnz
ds
in
mov
xchg
cmpsl
xlat
adc
pop
add
ljmp
bound
push
shrl
hlt
hlt
int3
mov
shll
cltd
cmp
push
xchg
add
rclb
fidivrl
dec
aam
jecxz
inc
adc
icebp
sub
mov
xchg
movsl
pop
add
ljmp
pop
gs
mov
xorl
sub
cmp
and
mov
out
into
xor
mov
xchg
jno
sub
into
push
test
push
mov
pop
mov
rolb
leave
or
ds
xor
sbb
movsb
fisubl
pushl
imulb
sbb
push
mov
push
mov
adc
sahf
xor
and
decl
lahf
cmpsl
subb
imul
sub
outsl
or
cmp
cmp
aam
xchg
imul
inc
fisttpll
mov
cmp
lods
push
ss
das
jecxz
sahf
in
div
adc
jge
scas
dec
je
call
inc
lea
incl
mov
mov
xor
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jg
jns
scas
or
jmp
arpl
jne
stos
and
mov
lcall
dec
aas
fildl
cmp
jge
movsl
out
jge
xor
div
mov
cmp
xchg
mov
dec
into
mov
lcall
cmpsb
jle
or
fisttps
ss
dec
popa
rolb
rol
cmp
inc
push
je
sahf
arpl
dec
and
decl
fildl
in
xchg
push
mov
push
sub
cmp
cld
push
pop
xchg
sub
pop
loopne
insl
jg
loop
test
jg
lcall
adc
pushf
inc
jae
in
cmpsl
clc
mov
fmull
pushf
and
adc
imulb
aam
fxch
gs
dec
in
jb
pusha
es
lahf
mov
inc
js
mov
scas
and
inc
add
jne
iret
mov
xchg
pop
ja
xor
push
inc
xor
ljmp
es
push
inc
jne
cmp
les
or
fldcw
xchg
sbb
mov
decl
cmp
push
mov
gs
imul
dec
lock
dec
mov
das
jp
dec
test
scas
cmp
cmp
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
cmp
decl
or
dec
mov
xchg
leave
mov
stos
mov
clc
ljmp
xor
dec
jp
mov
clc
fdivr
lcall
jp
sub
cmpsb
jmp
daa
sbb
inc
cmp
xchg
fdivrl
lods
or
xchg
andb
add
decl
inc
scas
pop
jmp
dec
inc
maskmovq
divl
sub
cld
inc
orl
xchg
ds
int
jecxz
shl
and
lods
sbb
fsubrl
or
sbb
cmp
dec
xchg
dec
mov
cltd
add
incl
xchg
comiss
test
push
mov
fdivr
xchg
cmp
sub
mov
clc
push
push
mov
insl
mov
ja
stc
push
xor
addr16
cwtl
cld
xchg
cld
insb
decl
stos
dec
pop
out
aaa
pushf
push
jne
mov
dec
adc
or
orl
ret
mov
sub
test
iret
imul
add
aas
mov
icebp
popf
aad
add
hlt
jmp
lret
push
mulb
stos
sub
test
and
decl
mov
jle
outsl
pushf
xlat
adc
subl
leave
stos
mov
jmp
pop
repnz
pushf
push
out
test
or
shrb
mov
pop
repz
mov
cmp
jecxz
mov
cmp
xchg
repz
shr
lods
dec
rcll
imul
call
lcall
mov
mov
push
pop
ja
sbb
mov
ljmp
iret
fs
mov
out
inc
inc
out
cmp
xchg
in
std
in
dec
js
lret
ja
mov
inc
frstor
dec
mov
cltd
mov
or
ljmp
pushf
and
inc
jno
shrl
divb
sahf
repz
mov
pop
or
enter
cmp
movsl
test
je
adc
cld
jb
incl
jg
mov
xor
repz
xor
jmp
or
aaa
call
lock
stos
adc
pop
lret
push
mov
repz
jbe
stos
rclb
inc
sbb
inc
jg
ficomps
imul
sbb
loop
pop
std
loope
dec
pop
aad
in
mov
enter
aas
dec
jne
js
mov
ds
movsb
jmp
sub
lods
cltd
in
loop
xor
shlb
pusha
fidivs
fisttps
mov
push
leave
inc
cmp
sbb
cmp
push
mov
sbb
lcall
mov
push
ret
cwtl
cmp
dec
inc
insb
test
cmp
test
push
cmp
pop
mov
enter
fistps
pushl
ret
sbb
add
in
push
pushf
sbb
mov
popf
sbb
nop
fcomip
add
jae
dec
in
or
test
push
insb
test
ljmp
cld
sub
add
icebp
cmp
out
enter
in
add
pop
std
dec
sbb
and
mov
mov
mov
pusha
mov
inc
scas
pop
shrl
adcb
ja
mov
cmp
xor
inc
aam
fcomip
sti
dec
push
jmp
popa
shll
xchg
in
orl
fbld
dec
push
rorl
push
jb
xchg
ret
cli
lahf
lret
std
xor
xchg
clc
pushl
add
test
hlt
mov
enter
call
out
xchg
cmp
sbb
lahf
idivb
dec
jle
mov
das
mov
incl
stos
xchg
fcmovnb
jle
xchg
xchg
sub
out
cmp
inc
push
mov
dec
loopne
shl
push
pushl
or
add
bound
cli
out
dec
repz
int
adc
cmpsb
ret
lcall
mov
dec
subl
icebp
lock
jb
mov
incb
cmp
lods
es
or
out
arpl
lock
inc
xchg
test
lods
pop
pusha
add
loopne
sbb
fsubrs
or
inc
adcl
lcall
jp,pn
xchg
and
ja
jb
xchg
ja
pop
lea
xorl
lcall
movsl
xor
sbb
aam
pop
push
push
pop
mov
cwtl
or
inc
out
clc
jmp
mov
int3
mov
push
inc
dec
pop
push
popa
scas
rorb
hlt
mov
icebp
push
clc
loop
in
fmuls
cmp
test
mov
mov
out
dec
jle
pop
test
pop
les
inc
jns
shrb
dec
imul
pushl
fsubrl
mov
pop
ljmp
lret
aam
lock
adc
xor
jnp
adc
popf
int3
jo
xorl
push
adc
mov
inc
int3
imul
mov
push
cmp
pop
bound
add
ljmp
loop
push
jle
jge
mov
xchg
pushf
in
xchg
stos
aad
test
and
cmpb
aaa
clc
popf
jg
cmpsb
mov
enter
pop
clc
jecxz
ret
int3
xchg
sub
ljmp
fwait
clc
cmpsb
jnp
mov
scas
jne
xor
pusha
adc
repz
hlt
jns
add
inc
mov
cld
incl
cmpsl
and
sbb
daa
sub
jmp
lds
test
in
std
js
sub
ja
xchg
xlat
push
mov
lcall
jle
mov
les
stos
inc
fidivs
cmp
and
mov
scas
dec
jp
push
pop
clc
fstps
jg
mov
into
xlat
iret
mov
xor
adc
pop
fisttpl
pop
jl
negl
sbb
push
push
mov
daa
lods
add
mov
mov
aas
xor
adc
mov
jno
inc
inc
pushl
and
xchg
mov
pop
pop
adc
mov
scas
insl
dec
shll
imul
cs
fcomip
mov
dec
and
push
iret
xlat
leave
js
push
push
mov
lahf
mov
jb
aam
jg
call
jmp
outsb
call
and
hlt
dec
mov
hlt
testl
std
call
jecxz
mov
mov
out
imul
add
adc
xchg
lret
jg
sub
inc
xchg
mov
in
cmp
test
in
incl
xor
pop
ret
add
mov
xchg
jnp
push
xchg
test
xor
decl
inc
cmpsl
int
inc
in
fstpl
jns
movsb
mov
scas
add
outsb
pop
xor
out
pop
fisubs
cmp
push
lods
pop
cld
scas
shlb
pop
gs
repz
mov
insl
xor
and
sbb
jecxz
aas
arpl
jmp
xor
mov
jg
mov
outsl
lock
dec
ja
sar
movsb
movsl
adc
notl
ljmp
jnp
mov
cmpsl
sub
mov
lret
enter
test
adc
mov
jmp
mov
add
sbb
adc
rcrb
and
lds
stos
adc
mov
mov
inc
ret
in
sbb
stos
daa
push
sbb
pop
inc
sbb
addb
lcall
and
mov
mov
dec
push
enter
push
or
iret
mov
decl
cld
or
pop
add
inc
mov
xor
clc
div
xchg
fistps
xchg
lahf
mov
cmp
dec
dec
sub
jae
xchg
cmc
mov
mov
fistpll
push
xchg
dec
push
adc
pop
enter
fidivs
pop
imul
movl
dec
mov
and
mov
out
inc
mov
loop
loope
adc
ja
lcall
cwtl
jnp
call
jg
push
mov
adc
nop
pop
or
mov
setp
mov
xchg
mov
cmp
mov
lret
push
outsb
mov
add
clc
shl
movsb
add
lcall
add
jmp
jno
mov
push
hlt
fcoml
pop
jg
jmp
ljmp
jp
add
les
cmpsl
xchg
sbb
cmp
mov
mov
subb
ljmp
push
adc
imul
mov
mov
ret
cmp
out
mov
xlat
add
cmp
addr16
out
add
dec
rolb
mov
xor
fldt
push
fisttpl
in
out
sbb
repz
popa
call
xor
dec
decb
sub
xor
jmp
adc
das
mov
sbb
add
add
div
aad
push
ret
push
jbe
test
call
loopne
fwait
mov
aam
inc
fucom
push
in
pusha
xor
fcomps
mov
mov
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
loop
ror
iret
clc
and
pop
and
xor
jns
pushf
jnp
and
loop
dec
and
stos
pop
xor
sti
xor
mov
lods
pop
fs
jb
pop
mov
shl
dec
inc
push
or
rcrb
cmp
push
nop
icebp
ljmp
aaa
loopne
inc
inc
enter
rep
mov
pushl
pop
sbb
ss
and
mov
ljmp
stc
rcrl
scas
mov
aam
or
jg
lea
fcomps
int3
dec
xor
jnp
xchg
movb
gs
ljmp
das
jmp
dec
add
lds
jge
mov
jmp
call
pushf
xchg
addr16
mov
inc
pop
imul
dec
sahf
mov
aas
inc
aam
sti
aam
out
adc
adc
jnp
jo
lea
leave
fdivrp
call
push
xor
jns
cmp
mov
decl
iret
xor
stc
sbb
mul
mov
or
daa
jecxz
push
pusha
daa
dec
decl
ljmp
inc
icebp
xor
pusha
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
incl
mov
iret
insl
rolb
sbb
pop
pushf
cli
and
xor
jg
sahf
mov
insb
lahf
insl
xchg
cmpsb
movsl
incl
dec
ficompl
pushl
add
mov
mov
incb
jno
cmc
shll
sub
mulps
mov
cli
in
fwait
pop
lea
dec
jb
sar
pushl
js
push
and
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
cs
fisubrl
mov
jo
inc
or
shll
incl
dec
xchg
popf
sbbl
incb
cmp
enter
stos
mov
inc
push
or
or
out
dec
pop
call
negl
xchg
mov
daa
xchg
add
push
adc
pop
add
and
push
and
mov
lea
cs
and
popa
sti
adc
cmovne
std
decl
adc
pop
inc
jmp
xor
xchg
js
mov
lods
ss
jg
pop
insb
mov
cli
dec
movsb
js
pop
call
inc
ss
mov
scas
test
pop
psllw
fstps
or
loopne
mov
scas
dec
pushl
ja
mov
data16
sahf
orl
mov
push
ret
cmp
sbb
lcall
in
loope
pop
adc
inc
dec
repz
popa
lods
rcrl
sbbl
and
in
sbb
sti
test
cli
int3
lahf
mov
int
mov
dec
add
xchg
xor
pop
or
ljmp
cmpl
lea
fs
fwait
dec
lcall
and
push
ret
pop
push
iret
push
cmp
jmp
mov
inc
jge
aad
jmp
or
pop
cwtl
push
jl
dec
loop
mov
mov
inc
popa
arpl
dec
lahf
shrl
loopne
aaa
cld
and
test
dec
test
cltd
in
negl
push
stos
pop
insl
jo
inc
cltd
sarb
int3
push
cwtl
cwtl
rcll
incb
pop
stc
ljmp
sub
adc
mov
jl
test
jmp
xor
mov
pop
or
or
in
aaa
into
push
pop
inc
iret
aaa
cmp
sbb
out
push
xchg
fidivrl
sarb
jns
ljmp
lret
sub
jmp
sub
es
ljmp
lock
movsb
xchg
jns
xchg
sub
mov
lcall
mov
mov
sahf
mov
subb
ljmp
jmp
in
out
pop
aaa
in
push
cmp
jae
xor
jle
inc
and
cmpsb
dec
mov
fadd
xor
div
or
xchg
cwtl
jo
xor
sub
out
jmp
dec
jns
jmp
adc
pop
pop
push
push
icebp
imul
orl
incl
mov
cmp
out
jl
test
orl
aam
xchg
decl
shlb
push
dec
cmpb
std
out
adc
xor
ss
fnstenv
inc
cmp
pushl
xchg
out
lds
mov
pop
mov
pushf
adc
pusha
out
xchg
xor
aad
sub
adc
sub
cmp
push
fadd
out
sti
es
sbb
xchg
stos
fs
ficoms
lock
or
adc
into
and
sub
jecxz
ljmp
pop
cltd
inc
decl
add
cmp
in
jecxz
test
into
pop
out
mov
sbb
pop
mov
incl
dec
mov
mov
push
bound
inc
fldenv
dec
fisubrs
dec
enter
std
mov
incl
ss
insl
in
in
push
mov
xor
adc
adc
call
pop
cmp
xor
in
pop
int
or
cwtl
loopne
decl
mov
test
int
popf
add
xorl
mov
aam
ljmp
insb
and
imul
dec
inc
ljmp
mov
adc
jmp
int
xchg
fildl
lds
imull
call
mov
fmul
add
push
adc
les
dec
gs
lods
inc
pop
adcb
xchg
movsb
xchg
dec
mov
aad
pushf
dec
or
xchg
adc
cld
jle
mov
xchg
jbe
pop
sbb
pusha
cmp
or
decl
or
cmp
lahf
mov
cmove
call
shlb
orb
push
lcall
and
pop
push
sub
incl
mov
fiadds
scas
insb
mov
jge
test
pusha
sub
push
mov
test
pop
jmp
out
pushf
mov
xor
cmc
decl
or
mov
test
mov
or
sti
jns
add
sub
ljmp
mov
add
inc
addr16
ljmp
mov
scas
push
ljmp
jne
es
pop
lds
rcrb
test
and
mov
inc
jecxz
call
add
nop
dec
shll
sbb
jb
lcall
leave
stos
adc
call
cmp
jnp
dec
js,pn
sbb
ret
repnz
fnop
iret
lods
dec
mov
mov
push
pushl
jp
ljmp
ss
fdivrs
and
mov
dec
inc
mov
or
pushl
push
mov
jno
mov
mov
add
or
add
jl
mov
adc
jg
push
cld
dec
add
sbb
push
test
shrb
out
jne
mov
inc
dec
sub
mov
pop
or
loopne
jbe
mov
lods
push
push
into
adc
cld
sbb
dec
inc
test
mov
push
pop
dec
inc
cli
imul
cld
mov
lcall
jp
jmp
xor
jp
ret
mov
mov
stos
movq
sub
fidivl
mov
mov
shrb
pop
jnp
jbe
and
lds
mov
incl
test
lods
adc
pop
std
repnz
and
mov
mov
xchg
sbb
je
pop
fistps
add
movsl
mov
jmp
or
lcall
xor
mov
jle
jge
dec
dec
imull
rcr
jmp
push
fbld
call
in
cmp
testb
ljmp
scas
clc
push
dec
jb
out
jl
repz
out
fdivl
cmc
jg
gs
out
mov
je
inc
cmpsl
mov
mov
adc
shll
ret
mov
std
push
sbb
mov
ss
ljmp
shrl
and
cmp
lock
push
cmp
jmp
inc
mov
jno
jecxz
cmp
jne
out
and
jns
or
test
pop
dec
call
mov
dec
pop
push
test
call
push
push
add
mov
in
fisttpll
outsl
cs
cmp
cs
ljmp
aam
sbb
fcompl
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
pushl
mov
pop
fs
xchg
pop
cmp
push
or
mov
aas
rclb
lock
and
mov
xor
addr16
loopne
iret
idiv
cwtl
lods
xchg
cli
movsb
mov
in
cli
clc
xchg
add
mov
inc
adc
cltd
jmp
cltd
aas
dec
lods
add
push
pushl
in
loopne
dec
sub
loop
fcoms
nop
mov
xlat
cs
fisubrl
ss
mov
scas
test
xchg
and
movsl
inc
aas
push
call
out
xor
sarl
cmc
adc
xchg
mov
int3
lds
js
or
icebp
decl
xchg
jbe
dec
sti
xchg
testl
dec
jmp
ss
pop
xchg
mov
insb
pop
insb
movsb
xor
dec
adc
sub
cs
psubw
rorb
popa
dec
or
repnz
and
xor
je
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
gs
call
sub
hlt
and
xchg
scas
pop
lock
pop
and
mov
xorb
mov
xchg
jl
mov
mov
jl
jecxz
pop
in
insb
sbb
push
gs
ds
mov
pop
lock
imul
aaa
cmc
cmp
jp
inc
icebp
push
lcall
fprem
bound
inc
cmp
pop
lods
leave
mov
sbb
cmp
lret
mov
push
push
xchg
stos
lcall
xchg
cmpsb
pop
leave
jge
int3
cmp
arpl
sahf
incl
lret
fs
scas
lea
inc
mov
jae
dec
leave
sbb
mov
inc
sbb
fdiv
in
jg
or
sbb
jecxz
cmpsb
add
cmp
dec
cwtl
shr
fbstp
and
lods
jb
fidivrl
or
pushl
lods
cmc
popf
dec
add
and
inc
jp
mov
push
dec
pop
adc
sbb
dec
pop
ljmp
sbb
push
mov
cmp
mov
out
xchg
cmp
sar
std
aas
or
repnz
movsb
pop
test
dec
imul
and
xor
stc
pushl
dec
jp
out
push
lds
sbb
movsl
inc
or
xchg
jae
mov
lcall
adc
or
adc
push
ljmp
insb
inc
cwtl
aam
movsb
enter
lock
pop
ficompl
cmp
rorl
outsb
xor
cwtl
push
in
arpl
fwait
xchg
fstl
jno
insl
daa
push
in
pop
cmp
push
xchg
or
dec
add
mov
mov
jno
rolb
decl
jne
loope
mov
push
xchg
iret
in
leave
add
and
push
cli
mov
fwait
sub
cli
cmp
movsb
or
movsl
push
incl
push
xor
les
ljmp
decl
or
push
mov
fcos
mov
mov
fcomi
sub
adc
popa
jecxz
push
popf
testl
dec
cmp
or
xchg
sti
dec
pushf
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
dec
inc
clc
aam
dec
jle
enter
popa
cmpsb
arpl
out
imul
or
mov
insb
mov
xchg
inc
add
xchg
dec
push
dec
sub
subb
ret
call
call
adc
lds
fdiv
cmpsb
adc
inc
out
cli
cmp
and
add
cmp
fisubl
adc
inc
ljmp
adc
dec
scas
loopne
insl
cli
push
je
arpl
stos
jae
xlat
addr16
sti
cmpl
mov
pop
aad
jecxz
jle
in
and
xor
push
shll
aaa
cld
movsb
ss
stos
push
orl
push
jo
mov
pusha
pop
jmp
lea
pusha
jp
daa
jmp
cmp
mov
mov
insb
das
push
pusha
jp
mov
stos
nop
out
jnp
cmp
push
decl
pop
aaa
lock
aam
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
call
cmp
jbe
adc
sub
scas
cmp
xchg
rorl
add
adcl
or
sub
loope
data16
int
pop
enter
or
repz
std
out
call
fidivl
jmp
call
sahf
loopne
push
adc
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
push
dec
lcall
pop
aad
xchg
xchg
les
jae
jg
mov
push
inc
mov
fidivs
mov
push
jmp
icebp
jmp
in
mov
lret
cmpsb
mov
adc
adc
sbb
int
adc
decl
push
cmp
inc
add
insb
mov
or
jnp
and
pop
imul
lcall
fsubs
clc
mov
mov
pusha
jne
xor
pop
shlb
pop
adc
pop
movsl
mov
mov
fwait
ja
decl
fildll
mov
mov
sbb
mov
pushf
test
fildll
loope
pop
pop
fidivrs
fdivrs
xor
stos
cld
shl
mov
mov
pushf
add
xor
decl
dec
add
pop
repz
dec
ds
push
push
into
jl
mov
mov
mov
pop
mov
in
test
mov
sti
test
dec
cmp
inc
mov
mov
incl
adc
aam
jl
mov
mov
sbb
hlt
xchg
sahf
aam
mov
mov
mov
push
cmc
cmp
push
sub
inc
andb
or
popf
stos
xor
pop
cmpsb
inc
or
incl
lea
mov
mov
cmpsl
adc
inc
cli
mov
mov
icebp
fistpll
movsb
arpl
sub
icebp
mov
fidivrl
jae
mov
push
negl
loope
jg
int
ds
or
push
push
jbe
sbb
or
pop
add
xlat
mov
adc
inc
or
stos
cmc
sbb
add
ret
mov
outsb
idivb
sbb
jmp
icebp
fmuls
xor
mov
sar
push
shl
xchg
xchg
imul
xchg
cmp
movb
lds
pop
adc
pop
dec
jge
stc
loop
lahf
cmp
stos
imul
ffree
bnd
push
mov
ds
nop
push
cmp
jmp
pop
out
dec
dec
imul
lahf
mov
adc
incl
mov
push
mov
mov
fstl
dec
pop
call
imul
inc
repz
outsb
ret
sbb
loope
dec
mov
jmp
sbb
jg
mov
in
outsb
pop
loop
out
jmp
arpl
add
call
imulb
repnz
or
dec
in
xor
sub
lcall
mov
int
xor
incl
clc
cmp
test
testl
mov
orl
int3
dec
ret
mov
adc
outsb
lcall
in
aad
scas
push
fs
shrb
shld
mov
inc
jne
fs
outsl
lret
lock
or
ljmp
sbbl
enter
adc
add
mov
in
inc
pushf
js
inc
jge
xor
xchg
rcl
adc
sub
and
xor
lea
std
pushl
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
ds
dec
sbb
adc
ret
lahf
dec
xor
push
andb
testb
aam
repnz
jl
dec
xor
jne
test
sub
in
in
mov
subl
cli
das
pop
fstl
ficoml
lcall
rcrb
lds
mov
iret
cmp
add
xchg
xor
inc
sbb
sahf
pop
sub
mov
scas
xchg
sarb
nop
gs
sub
faddl
decl
cmp
imul
aaa
mov
arpl
fnstcw
push
or
movlps
cld
cmp
mov
adc
nop
dec
pop
into
mov
xchg
push
test
push
adc
mov
push
cmp
xor
lods
shll
add
push
xchg
pop
cmpsl
das
mov
popa
cmp
mov
jmp
shlb
push
xor
jns
adc
adc
rclb
test
loop
add
dec
incb
clc
stos
mov
dec
mov
sub
fs
mov
fwait
lahf
pop
mov
pop
aaa
imulb
or
clc
out
test
fnsave
jg
jmp
lock
pushf
cmp
mov
popa
das
mov
nop
dec
mov
dec
push
xor
ficompl
ret
mov
into
gs
js
push
sar
mov
test
pop
mov
or
sbb
and
out
push
sbb
js
cmc
pushl
push
add
push
mov
aam
je
mov
dec
jmp
adc
xchg
int
pop
aaa
mov
cltd
inc
in
dec
mov
fists
rcrb
mov
shlb
sub
dec
movsb
jmp
fiaddl
lahf
pusha
or
mov
adc
cs
in
pop
out
inc
jns
out
call
fmull
stos
pop
mov
mov
lcall
mov
aaa
rcl
lods
or
sbb
lods
ja
movsb
mov
decl
push
jecxz
xor
xchg
sub
fimull
lods
push
pusha
sbb
in
mov
call
movb
out
jo
xor
pusha
mov
xchg
xor
xchg
mov
cmpl
call
fwait
inc
xor
pop
inc
leave
repnz
mov
mov
sub
jne
pop
cmp
clc
lcall
or
insb
aam
rcll
mov
mov
lcall
or
pop
push
js
cli
adc
filds
flds
jbe
cld
inc
imul
mov
push
mov
add
inc
repnz
and
inc
or
imul
test
fcomip
mov
lods
jmp
push
jne
sti
jmp
mov
cs
cli
int
ja
loopne
jmp
enter
adc
xchg
std
add
push
loop
je
add
and
jg
rclb
notb
frstor
add
ljmp
pop
icebp
mov
lock
ljmp
mov
and
jecxz
add
pushl
dec
or
rorb
les
inc
movsb
xor
mul
clc
mov
imul
call
mov
aad
nop
pop
cli
mov
xor
clc
aas
in
jl
lods
aam
sbb
sbbb
sbb
aam
repz
sub
or
outsl
neg
mov
mov
mov
gs
jmp
cli
push
push
jbe
cli
incl
dec
xchg
mov
pusha
push
lds
cwtl
push
mov
nop
into
xor
and
js
lcall
int
or
sbb
nop
mov
add
leave
cmpsb
pop
sbb
xchg
cmp
fcoml
dec
out
dec
sub
lcall
movsl
inc
sahf
sti
push
daa
add
jmp
mov
leave
mov
mov
inc
bound
mov
daa
dec
mov
sbb
sbb
fs
add
push
or
add
je
jmp
mov
aas
cld
xor
cmp
jb
aam
or
dec
push
jge
sbb
sbbb
gs
rep
or
jmp
sar
pusha
xchg
jmp
jmp
push
jg
and
roll
mov
sbb
out
and
add
mov
adc
xchg
push
xor
or
cli
mov
dec
inc
cli
ret
jle
loop
fprem
mov
outsl
cli
fadd
fsubp
jle
pop
cmpsb
sub
dec
push
jle
pop
cltd
fisubrs
cmp
jmp
out
mov
mov
in
leave
int
jge
mov
test
and
lods
repz
push
ljmp
cli
pop
dec
mov
pop
call
cmpb
aas
ud0
jo
xchg
jecxz
nop
repnz
dec
std
imul
or
popa
push
out
dec
pushl
cmp
out
imul
jns
pop
xchg
or
enter
sbb
inc
call
mov
xchg
cmpsl
loope
lret
mov
adc
mov
in
dec
push
xor
mov
ss
mov
lret
adc
in
mov
fdivrl
sahf
and
mov
jmp
push
outsb
je
adc
jbe
xor
add
xchg
jb
sbb
xchg
icebp
clc
push
daa
lods
loope
adc
push
jbe
push
add
mov
mov
es
insb
arpl
adc
push
ljmp
xchg
mov
fcomip
jmp
push
ljmp
out
push
out
or
xchg
lcall
call
or
push
xor
add
out
stc
xor
inc
xchg
xor
outsl
decl
pop
xchg
mov
xchg
pop
push
jl
bt
push
jp
fsubrp
clc
decl
pop
mov
scas
pop
mov
lcall
js
sbb
inc
push
cmp
inc
cmp
ja
jnp
dec
adc
cltd
clc
pop
sarl
pusha
test
cmp
mov
aad
pop
xchg
stos
jp
aaa
fwait
mov
mov
sbb
icebp
jmp
imul
in
movsl
orl
lods
pop
inc
addr16
test
std
dec
mov
cmp
xor
jecxz
jle
xor
dec
nop
xorl
jmp
fldenv
in
stos
mulb
in
data16
cli
xchg
loop
dec
lcall
and
jns
pop
add
dec
test
insl
loop
mov
arpl
fldl
lods
movsb
jl
ret
push
jecxz
cmp
inc
es
stos
or
call
push
sarb
test
adc
sub
out
add
cli
cmc
xor
incl
mov
les
loop
dec
cltd
dec
ret
push
bound
in
pop
imul
shl
and
shrl
or
pop
fnsave
xchg
pop
dec
mov
loopne
cld
add
dec
jnp
fnstsw
xchg
es
nop
ds
dec
and
push
imul
cwtl
pop
inc
enter
fildll
outsb
clc
dec
mov
cmp
xor
shr
outsb
push
mov
cmp
cmp
mov
cmp
xchg
in
push
fbstp
fmul
lods
addr16
ret
xor
sub
ljmp
adc
mov
pop
pop
push
mov
or
xchg
outsl
stc
aaa
cmp
ret
imul
mov
cld
aaa
cld
and
cltd
adc
jl
xchg
xor
sub
cmpsl
out
adcb
pushl
mov
and
push
enter
pusha
sarb
decl
or
call
popa
ja
xchg
jae
sbb
out
cli
leave
lret
and
push
or
aaa
mov
orps
lcall
pop
jo
add
jns
lcall
scas
push
or
inc
mov
ja
aas
fidivl
mov
out
xchg
mov
push
mov
push
push
jmp
xor
fwait
mov
dec
mov
mov
js
sbb
xchg
mov
cli
adc
lods
jno
pushf
stos
cmp
cmp
inc
inc
std
jns
repz
ja
test
cmp
jg
ljmp
jle
jp
mov
fs
test
xor
popf
in
nop
push
jl
es
cli
ljmp
in
pop
imul
clc
int
es
xor
pop
je
adc
cmp
lahf
add
scas
sub
add
dec
gs
mov
fsub
push
out
mov
add
lcall
mov
aad
mov
jnp
fdiv
jg
sti
loop
jecxz
cwtl
mov
sbb
in
std
aam
and
dec
fisttpll
fnstsw
nop
lcall
sbb
movsb
inc
mov
dec
mov
lret
or
rcr
push
fcomip
decl
push
sarl
clc
js
insl
add
lret
fcos
mov
loop
push
mov
add
sbb
bound
pushl
cltd
jge
mov
xchg
dec
loopne
push
pop
add
cmp
push
jns
lods
sub
inc
jmp
add
mov
enter
xor
jmp
jl
rorl
pop
test
adc
lcall
inc
lea
movsl
jmp
jecxz
fsts
xlat
and
pop
ljmp
clc
push
in
xchg
sbb
dec
mov
lock
push
call
scas
imull
xchg
ret
mov
cmpsb
pop
ja
shr
jecxz
rcrl
xchg
mov
andb
push
dec
aas
adcl
out
push
mov
subl
cwtl
sti
popf
xor
push
cmpl
es
inc
add
nop
dec
xlat
xor
roll
jbe
sahf
cmp
pop
push
mov
test
mov
sti
aam
fnstenv
inc
call
adc
incb
jb
xchg
int3
dec
cmp
jl
or
pop
or
dec
testl
pusha
sbb
ret
mov
jmp
mov
and
sbb
sub
jnp
dec
xchg
jge
cmp
lret
in
incl
mov
pop
sbb
jge
xchg
or
xchg
cmp
cwtl
shrl
stos
scas
sub
pop
lock
lcall
jne
lret
add
inc
xor
shr
fbld
sti
out
std
mov
call
and
dec
sbb
pop
pop
add
cmp
pop
ljmp
pusha
jb
jge
movsb
jecxz
xor
jae
aad
std
and
push
cs
call
push
or
cmp
int3
jno
ret
incb
xchg
and
jae
mov
inc
jl
incl
and
jae
cli
xor
push
inc
adc
inc
mov
jp
shl
shl
pop
mov
cmp
ljmp
bnd
in
inc
fisttps
cmp
fnsave
pop
dec
push
sub
cmp
push
cmp
pop
sub
stos
pop
mov
xlat
loop
cld
and
push
push
aaa
inc
shrb
rcl
inc
fldenv
and
mov
insb
jb
lret
stos
dec
cs
mov
xor
ds
cmc
xor
ljmp
subb
sti
enter
cld
adc
out
mov
in
repnz
add
fisubl
jge
jnp
in
pop
in
lods
push
sti
jnp
xor
add
lcall
shrl
jbe
jae
ficoms
ss
pop
outsl
mov
jg
decl
aam
jno
add
sub
ds
sbb
ja
sar
cmpsb
stc
int3
adc
and
jae
call
lcall
shr
ss
push
push
push
sbbb
fistl
jmp
mov
mov
ljmp
mov
rcrb
call
sarl
arpl
lret
fists
adcl
ds
nop
inc
sti
fbld
std
sub
cmp
or
rcrl
sbb
jp
dec
lcall
cmp
sub
repnz
xor
icebp
xor
mov
lcall
sub
inc
xor
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
and
mov
pop
loop
div
mov
jge
cmp
mov
adc
mov
cwtl
push
and
ds
in
ror
shlb
dec
jmp
inc
lcall
aas
jns
jne
fsubrs
insb
sbb
push
pop
sbb
out
mov
mov
push
cmc
in
dec
inc
push
vmaxps
or
stos
pop
rorb
testl
or
call
or
lock
adc
add
hlt
inc
lcall
cli
cmp
cmp
lahf
adc
es
dec
popa
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
ds
jmp
outsb
pop
cmp
inc
ds
cmp
ss
mov
fcoml
xor
test
js
jge
inc
sti
and
aas
add
int3
andb
rcrb
and
shl
pop
cs
cmp
fnstenv
pop
mov
pushl
lea
xchg
loope
repz
inc
pop
inc
lea
aam
sbb
sbb
add
dec
sbb
call
ds
ljmp
rclb
xor
mov
inc
mov
iret
sub
ud0
lcall
popa
push
fwait
mov
mov
xchg
push
popf
mov
sti
mov
js
inc
arpl
lea
cmp
sub
rorl
cmpsl
cmc
icebp
notl
mov
mov
add
sbb
lahf
ss
mov
mov
icebp
jmp
sti
shlb
sbb
and
negb
inc
clc
repnz
fsubrl
push
clc
sarl
pop
lods
sub
imul
and
xchg
jb
shlb
sar
sbb
jge
sbb
imulb
in
add
pop
jg
and
adc
pop
jns
test
pop
and
call
mov
insl
loopne
js
push
test
cmp
addr16
int
pop
test
rclb
dec
cmc
lahf
sub
jg
inc
add
rol
pop
pop
nop
clc
aam
fwait
shrb
les
andl
imul
imul
ljmp
mov
lods
and
inc
inc
sbb
out
es
jle
lds
pop
imul
incl
jle
or
or
cmp
testl
cmp
lret
out
cld
mov
cmpsb
mov
and
mov
repz
pushl
aam
ficompl
das
aaa
cmp
aas
pop
fnstcw
xor
clc
pop
jmp
jae
sub
in
jge
fimuls
lds
hlt
sbb
andb
sahf
gs
xchg
pop
sbb
call
out
sarb
sub
sub
xor
mov
xlat
rorb
ret
mov
inc
call
fucomp
jl
imul
push
inc
in
jb
sub
std
inc
enter
lods
test
imull
fisubrs
and
cmp
add
sbb
lds
push
ret
xchg
and
jno
xor
insb
inc
outsb
lods
out
sbb
lods
xchg
je
mov
xchg
mov
push
push
out
out
or
jnp
jp
lahf
pushf
lret
cli
out
add
and
pop
inc
outsl
clc
rcll
pop
mov
call
movsl
sub
adc
and
arpl
loopne
gs
mov
push
lcall
sub
xor
inc
cmpsl
out
subl
std
adc
shll
sub
lock
fdivr
in
xor
pop
lods
and
push
loopne
loopne
test
cld
in
add
mov
call
jno
cmp
push
dec
pop
cmpsl
hlt
jmp
rcrl
cmpl
sbb
data16
mov
add
fcomi
inc
aaa
movsb
clc
incl
mov
cli
mov
mov
xchg
clc
filds
and
sub
ss
dec
push
ds
sbb
ljmp
testl
sbb
dec
outsl
mov
fs
cmp
lds
call
xor
ret
inc
cmpsl
data16
cmp
call
fs
dec
clc
loope
xchg
xchg
enter
stc
push
mov
insl
adc
jmp
cmpsl
mov
or
jp
ljmp
push
mov
push
test
mov
daa
pushf
jle
pushw
jmp
ljmp
mov
mov
popa
lds
xor
inc
daa
add
pushl
mov
out
or
data16
test
sub
test
jle
mov
ljmp
outsb
jge
mov
out
xchg
mov
jbe
mov
or
cltd
jg
jmp
push
cmp
jns
push
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
bnd
xchg
inc
iret
mov
enter
sbb
lods
xchg
aad
dec
aaa
and
cld
aad
outsl
es
je
leave
mov
bound
out
mov
fildl
dec
pop
dec
repz
arpl
inc
pop
push
mov
mov
pushl
sbb
sahf
cmp
or
movsb
add
ljmp
mov
stos
inc
mov
jnp
push
in
lds
leave
cmp
jmp
jo
repz
ds
cmp
aam
mov
push
push
arpl
push
add
inc
adc
repnz
dec
add
shr
lds
mov
outsl
mov
mov
dec
loop
stos
ret
sti
adc
je
out
mov
pop
add
add
pop
icebp
lods
and
test
xlat
push
mov
dec
pop
pop
test
cmp
movsl
popf
sbb
adc
push
scas
adc
insl
pop
stos
sbb
mov
fists
sahf
push
pop
jae
mov
lcall
repnz
mov
cltd
movsb
lods
imul
mov
or
clc
or
lret
decl
jb
dec
or
insl
stos
push
xlat
push
lock
push
out
call
lret
cmp
dec
arpl
fadds
mov
push
mov
cmp
nop
push
decl
fwait
jne
test
jge
shrb
pop
dec
cmp
incl
lods
push
fwait
sbb
in
stc
inc
mov
add
mov
ja
sub
and
stc
add
sbbl
mov
call
cltd
mov
enter
movsl
js
int3
xor
lcall
sub
cmpl
lcall
mov
jp
jmp
adc
inc
rolb
push
dec
xchg
ljmp
cmp
xchg
sbb
aas
and
fwait
mov
jp
pop
fwait
jl
cmp
pushl
incl
fnstenv
mov
das
pop
hlt
mov
xor
rorl
push
test
push
ljmp
cltd
inc
outsl
add
mov
pop
pop
insb
in
cmpsb
inc
dec
pop
mov
popa
add
mov
daa
hlt
int3
dec
into
in
mov
mov
mov
leave
ret
jo
mov
push
pop
mov
cmc
dec
inc
mov
loopne
pushl
xchg
icebp
mov
xchg
mov
call
lock
inc
insb
mov
sub
pop
clc
movsl
mov
adc
inc
dec
mov
lcall
insl
aaa
filds
shrl
cmp
orl
mov
mov
push
cmp
xchg
sub
push
ret
popf
fsubl
push
pop
mov
in
xorl
jmp
xor
and
push
pushf
call
call
jbe
pop
ss
push
repnz
decl
and
icebp
jmp
push
jne
push
cs
in
gs
adc
outsl
scas
xchg
dec
push
fdivrs
cmp
push
push
pop
outsb
mov
movsl
mov
push
loop
xchg
mov
insl
or
jmp
xchg
shrl
and
push
in
rorb
jle
das
clc
mov
jp
movsb
dec
imulb
mov
jmp
stos
and
cmc
sarl
incl
scas
stos
xlat
add
jne
push
lods
push
cmpsb
mov
stos
push
mov
add
call
fst
pop
xchg
cmp
lahf
mov
jmp
aas
jno
or
iret
lock
mov
in
push
popa
into
ror
fistpl
aad
mov
aas
imull
ret
dec
nop
ds
insb
inc
idiv
call
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
fnstsw
inc
daa
xchg
test
pop
push
cmpsb
mov
xor
inc
cmpsb
jg
je
mov
clc
lahf
in
pop
inc
pause
jbe
add
ret
pop
dec
loope
mov
push
dec
rcrl
push
add
pushl
std
shlb
push
cs
js
daa
add
jg
mov
daa
scas
cli
lcall
rcl
ljmp
jno
pop
fnsave
notl
dec
dec
sub
decb
mov
pop
cmp
inc
imul
jmp
frstor
dec
aas
mov
imul
jnp
jno
push
cmc
adc
aaa
mov
lods
sub
mov
pop
mov
mov
pop
push
lock
decl
mov
xor
cmp
xchg
xor
push
xor
mov
dec
xlat
decl
into
ret
add
cmp
pop
xor
out
scas
pusha
mov
mov
mov
int3
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
lcall
adc
or
pop
lcall
ljmp
inc
mov
fcom
cmpl
hlt
addr16
pop
adc
add
sbb
cmpsl
cmp
daa
pushf
sub
inc
je
inc
fnstenv
inc
das
test
or
sub
mov
jle
push
cmpsl
dec
inc
in
jo
push
push
adc
jmp
out
ds
sahf
pop
cmp
ljmp
cmc
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
jp
hlt
push
adc
lret
push
push
loop
dec
dec
xor
shr
xchg
mov
pop
or
mov
test
fdivrl
aaa
mov
repz
dec
mov
adc
and
or
sti
lret
loopne,pn
sub
add
call
jo
xchg
cmp
repnz
push
mov
stos
push
sub
imul
jecxz
repz
mov
mov
pusha
dec
push
cmp
push
sbb
jecxz
push
pop
icebp
lock
dec
enter
dec
xchg
push
fildll
xchg
and
mov
sub
scas
std
fistpll
add
xchg
pop
xor
cwtl
and
icebp
pop
pop
movsb
mov
jp
orb
mov
lcall
or
pop
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
lcall
sub
call
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
call
inc
cld
test
add
pop
push
inc
push
lods
mov
add
arpl
mov
out
cli
call
cmp
roll
xchg
cmpb
mov
sub
hlt
std
jg
outsb
iret
cmp
pop
pop
popa
cmpsl
rolb
xor
jno
sbb
arpl
add
jp
sub
call
call
stos
popa
scas
out
mov
or
mov
jmp
inc
push
inc
jg
push
daa
ds
cli
mov
add
sub
mov
cmp
test
jg
or
movsb
cld
pusha
pop
mov
int
cmp
lret
jo
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
lcall
push
aas
add
and
jge
mov
shrl
out
push
loope
mov
mov
stos
incb
mov
mov
cmpsl
sbb
out
fdivrs
push
ret
mov
sub
push
mov
cmc
sbb
stos
jge
repnz
cmp
in
fiadds
sub
push
int
lcall
ds
ljmp
repz
out
xor
fildll
push
push
or
popf
or
xchg
jb
mov
push
mov
push
out
xor
fnstenv
cld
decl
xor
xor
mov
inc
pop
in
sub
xor
imul
fsubrl
xlat
test
push
jge
pop
cmp
enter
mov
xchg
lcall
clc
pop
push
push
out
int
mov
dec
aam
inc
sbb
or
repz
lret
test
idivl
in
insb
inc
ljmp
adc
pop
push
fistpl
adc
lock
inc
cld
inc
push
pop
int3
xchg
shr
mov
mov
popa
test
insl
and
out
cld
jmp
dec
sbb
add
sbb
or
mov
add
aas
ds
mov
pushl
mov
js
cmp
test
mov
cmpsb
dec
andl
add
call
xchg
cli
xchg
or
mov
movl
js
stos
fwait
dec
into
mov
loope
fisttps
call
jno
out
xchg
int3
or
sbb
lcall
jg
lahf
inc
dec
mov
pop
cmp
inc
mul
loope
popf
outsb
js
aad
in
ljmp
ja
dec
subb
dec
xor
adc
shll
push
dec
dec
mov
jmp
adc
mov
or
jno
jno
pusha
push
add
js
inc
cmp
mov
mov
lds
mov
inc
push
mov
xchg
test
push
pop
pop
std
decl
arpl
outsl
jno,pt
cmp
xor
les
pop
repnz
pop
popf
fists
out
gs
repz
pop
clc
mov
jl
addb
mov
test
decl
cmp
ret
mov
dec
arpl
cld
xor
jecxz
sbb
call
cld
add
cmpsb
arpl
iret
sbb
test
in
scas
ds
inc
ljmp
lcall
mov
out
int3
mov
push
xor
cmpsb
je
dec
push
cwtl
sbb
push
lcall
incl
pop
repz
xor
mov
out
dec
stc
ficoms
and
lcall
loop
mov
add
insb
mov
mov
rclb
int
mov
sbb
push
out
xchg
pop
xor
dec
mov
ljmp
clc
jl
push
inc
jb
cs
add
and
outsb
add
movsl
adc
and
jno
mov
push
sub
lret
mov
lcall
es
xor
mov
fs
push
jmp
sub
call
mov
dec
repnz
push
xor
test
daa
cmp
jl
xchg
pop
scas
in
cmp
ljmp
sbb
jae
gs
dec
test
mov
cmp
incl
cmc
push
xchg
mov
mov
iret
push
pop
shll
xchg
jecxz
sti
jnp
mov
movsl
push
xchg
inc
inc
cwtl
incl
setle
adc
scas
dec
loope
and
inc
xor
scas
xchg
jmp
ss
and
scas
gs
jmp
mov
js
dec
add
jae
into
dec
cmp
mov
dec
outsl
pop
cmp
dec
ficompl
xchg
ds
adc
or
xorb
adc
pop
push
gs
mov
test
call
out
mov
xchg
dec
shl
jmp
repnz
jo
xchg
je
inc
or
jg
pop
scas
sub
or
add
cmpsb
into
xor
cld
push
cmp
mov
cmp
aad
add
out
clc
xchg
xchg
push
cmp
dec
cmp
stos
push
test
xchg
ds
or
jmp
xchg
sbb
jle
xchg
push
xor
xor
mov
fs
mov
lock
mov
mov
adc
push
fs
jmp
mov
adc
xchg
clts
inc
mov
jmp
sbb
nop
lods
lahf
sarb
fcomip
jnp
pop
iret
cmp
mov
shl
cli
dec
imul
hlt
xchg
aad
sbb
bound
call
jl
xor
lret
popf
icebp
pop
push
ud2
ds
sub
fwait
sub
dec
sarl
clc
dec
loope
ljmp
outsb
into
shl
test
rcr
push
xchg
cmp
in
mov
clc
pop
in
sub
or
push
jno
test
cmp
mov
inc
push
push
daa
loope
stos
fcomp
cmp
lods
je
decl
and
sub
adc
aaa
push
loop
sbb
sub
fdivl
jmp
xchg
pop
mov
xchg
push
jge
jbe
sbb
and
cmp
les
sahf
decl
ja
loopnew
pop
pop
out
sub
jb
push
sub
int
adcl
and
aam
scas
cli
daa
sub
jnp
adc
inc
xchg
cmp
mov
mov
int
out
mov
or
inc
je
divl
repnz
push
xlat
das
negb
imul
inc
cltd
mov
loope
or
call
nop
inc
add
mov
lret
push
pop
adc
fwait
sbb
push
cmp
lds
jmp
push
jns
adc
cmc
fdecstp
repnz
push
push
aad
jbe
mov
out
insl
scas
lea
cli
incl
ja
jo
push
loop
es
sub
adc
push
push
pusha
fimull
lock
mov
outsl
cmp
xor
movsb
or
insb
loopne
mov
clc
in
push
fidivrl
in
mov
cwtl
mov
mov
pop
popa
sub
fwait
push
lret
in
imul
fldenv
pop
test
sub
jmp
insb
pusha
adc
mov
outsb
data16
or
in
fldcw
sub
nop
aad
stc
outsl
cli
cld
mov
mov
mov
sbb
mov
sbb
or
das
cli
cld
or
cmp
jo
fdivs
into
mov
add
sarl
mov
cmp
ljmp
mov
or
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
xchg
pop
fbstp
mov
addb
notb
dec
ret
adc
cld
dec
mov
popf
and
imul
inc
in
add
addb
das
sahf
in
mull
pushf
cmp
push
pop
cmpsb
fcomip
dec
shr
adc
enter
jbe
iret
sbb
daa
dec
sbb
mov
aad
xchg
jecxz
jle
aaa
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
decl
iret
jl
jnp
push
xor
pop
mov
icebp
add
mov
popf
decl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
add
dec
push
out
inc
cmp
call
push
add
arpl
leave
rcll
xor
fs
push
loop
xchg
ljmp
pushl
dec
bnd
jo
outsb
push
jnp
dec
testb
call
mov
stos
mov
call
rcll
pop
adc
xlat
cmp
loop
add
fwait
sahf
jg
jo
clc
pop
test
adc
loop
xor
mov
das
in
push
daa
jl
call
fcoml
cmpl
mov
lock
outsb
cmp
scas
cmp
movsb
cmp
jmp
sbb
stos
ret
or
ret
out
lret
sub
fcompl
xchg
cmp
mov
ss
push
ffree
jg
dec
cmp
out
fstpl
or
add
cmp
sub
ljmp
decl
movsl
jecxz
fnstcw
das
mov
call
and
xlat
fbld
pushf
add
dec
and
leave
clc
addps
dec
lcall
test
iret
notb
int
lcall
and
jmp
jge
ja
and
or
or
adc
aaa
call
das
or
filds
cmp
data16
jle
mov
lods
xlat
es
sbb
stc
adc
xor
jmp
jg
adc
sahf
sub
stos
push
cli
lret
movsb
dec
mov
ljmp
xor
lahf
inc
sbb
mov
adc
pop
pop
ljmp
dec
pop
mov
test
sub
inc
dec
lcall
jns
mov
jl
fisttpll
mov
pop
or
push
pop
mov
lret
push
mov
sbb
push
std
push
adc
js
xchg
push
push
xor
mov
push
call
cmp
mov
push
mov
mov
lds
mov
xlat
mov
hlt
xchg
and
pop
cli
decl
inc
test
jnp
jg
out
or
pop
arpl
push
or
int3
ljmp
xchg
pop
clc
inc
push
lea
les
and
pop
jp
dec
mov
adc
jg
dec
push
sbb
ds
push
cmpsb
mov
push
add
pushf
mov
mov
sbb
std
scas
cwtl
mov
adcl
out
mov
add
add
pushaw
mov
xchg
cmpsl
jmp
cmp
inc
aas
mov
jle
jge
fs
xor
sub
out
pop
dec
sbb
jb
jg
mov
mov
mov
adc
pop
mov
lahf
push
iret
jbe
jbe
jbe
mov
and
orb
mov
cmpsb
ljmp
jge
dec
sub
aam
shll
bound
mov
push
add
into
incl
push
sahf
dec
arpl
sbb
fnstcw
repnz
cmpsl
stc
dec
mov
es
incl
lahf
jle
or
pop
sub
aad
and
push
xlat
inc
fimull
dec
jbe
cmp
lcall
subb
movsb
mov
xor
aam
adc
into
mov
pop
jg
mov
outsl
gs
cmp
pop
stos
xor
jae
pop
pop
movsl
mov
int
in
mov
std
mov
gs
pusha
sbb
mov
adc
mov
call
xchg
mov
push
sbb
or
shl
add
negb
mov
pop
iret
dec
pushl
inc
shr
sub
cli
push
popa
sub
adc
mov
imul
ds
mov
lods
enter
xor
shlb
sbb
insl
cmp
sub
call
push
xor
or
push
jge
xchg
in
add
dec
xlat
or
dec
adc
rcr
dec
adc
cmp
dec
pop
sub
ja
hlt
lcall
icebp
int3
mov
jecxz
inc
nop
sub
xchg
sub
out
addb
ja
clc
aam
stos
rcr
lock
or
mov
jg
and
js
adc
mov
addr16
jl
cmc
add
cmpb
call
mov
int3
and
pop
mov
psubusb
fistps
jns
insb
ljmp
popa
cmp
sbb
fcomip
add
int
inc
adc
sarb
jecxz
call
inc
lahf
in
sub
loopne
frstor
push
dec
movsb
lea
out
add
jg
mov
in
dec
mov
imul
jle
cmp
push
push
jmp
icebp
and
mov
mov
jmp
rcll
sub
lds
adc
adc
jno
jl
sets
cli
iret
jecxz
inc
ss
pushf
and
push
sub
xchg
dec
rol
pop
in
adc
in
and
outsb
int
stos
incl
ffreep
in
xchg
sti
pusha
lret
cmp
xchg
in
fsubrp
cmpsl
decl
ret
pop
fiaddl
cli
rcll
cmp
pop
adc
call
outsl
popa
inc
cmpsb
push
dec
fmul
popf
arpl
cmp
or
jno
add
xchg
inc
or
inc
lcall
mov
mov
jle,pn
pop
fwait
inc
leave
sub
inc
testb
fsubrs
nop
test
adc
icebp
cwtl
adc
jge
jbe
ljmp
aaa
mov
scas
test
jae
repnz
dec
and
mov
mov
or
fistpl
sbb
fs
nop
push
arpl
inc
sub
stos
sub
dec
mov
adc
std
decl
mov
in
sub
and
leave
sub
adcl
es
dec
cli
sar
mov
dec
data16
mov
xchg
cmpb
lahf
push
add
repnz
daa
arpl
mov
mov
add
xchg
lret
and
xchg
nop
aaa
or
and
jg
push
sub
nop
and
cld
in
das
insb
addl
jg
popa
mov
mov
xchg
adc
aad
jmp
and
inc
loopne
addl
jae
push
lods
loopne
dec
xchg
cmp
or
sbb
cmpsb
call
sbb
sti
dec
or
push
out
mov
add
push
test
sub
shlb
std
arpl
mov
repnz
nop
sbb
subl
xor
or
outsl
mov
xchg
jl
add
data16
push
imul
daa
cmpsb
adc
mov
ljmp
push
adc
mov
push
enter
jno
and
and
outsb
inc
sbb
inc
push
shlb
incl
mov
jg
cmc
xor
jne
hlt
sahf
push
loop
dec
xchg
ljmp
pop
lods
lock
daa
adcb
insl
ja
int3
mov
decl
or
xchg
pop
sub
fadd
movsl
and
int3
mov
mov
mov
xor
out
scas
js
and
pop
jnp
stc
mov
cmp
sub
sbb
jmp
mov
xchg
jmp
pop
movsl
decl
daa
or
adc
sub
mov
es
in
lret
mov
xchg
add
mov
xor
mov
call
incl
pop
xchg
mov
fs
inc
mov
mov
idivb
xor
loopne
ljmp
mov
call
push
jae
push
ss
xchg
cmp
pop
add
sub
incb
cs
and
out
cli
jae
mov
stos
sub
or
push
jns
loop
ds
fimuls
incl
push
orl
or
movsl
or
mov
adc
pop
cmpsb
pusha
daa
jbe
mov
mov
popf
jbe
push
push
fnstenv
je
ficompl
jbe
or
pop
lcall
dec
add
int3
or
add
ds
aas
idivb
jae
insb
jne
outsl
clc
ljmp
leave
cltd
sub
mov
andl
sbb
notl
jae
out
sar
dec
fidivl
out
pop
or
test
mov
pushl
push
push
mov
ret
mov
or
push
push
fistpll
and
cmp
xchg
sbb
mov
outsb
lock
lcall
mov
add
imul
data16
dec
test
add
decl
inc
sbb
sbb
mov
inc
testl
jo
mov
ret
dec
push
dec
sub
lods
lahf
icebp
cmpsl
xchg
lods
push
mov
in
pop
std
ljmp
jb
pop
cmp
out
inc
sub
popa
loope
pop
xor
decl
mov
sti
mov
js
aad
loopne
addr16
sahf
adc
mov
in
leave
lds
lods
mov
and
loop
pushl
push
adc
push
iret
push
add
adc
ficompl
sbb
in
pop
lcall
cmp
in
adcl
xor
push
loop
mov
pushl
scas
or
mov
mov
or
xor
xlat
lea
sub
pushl
fcompl
hlt
cltd
sub
scas
push
sub
popf
and
jmp
test
mov
add
inc
repz
xchg
xor
push
dec
adc
rcll
jg
les
pop
aad
push
icebp
repz
sti
lds
mov
or
mov
or
inc
shl
xor
bound
gs
shll
pop
mov
pop
cmp
call
enter
es
fidivrs
aam
lds
xor
adc
mov
lcall
xlat
inc
sbb
lods
dec
daa
xchg
cmp
or
pop
cmp
xor
jg
or
xor
lea
aaa
shll
cltd
cmp
arpl
loope
incl
cmp
dec
inc
aaa
cld
pop
cli
sub
nop
sbb
xchg
push
fstps
ljmp
pushf
jecxz
rcrb
scas
into
sub
icebp
or
orl
mov
movsb
and
xchg
sar
incl
lods
mov
sbb
xchg
das
jnp
popa
sub
cmp
sbb
mov
dec
incl
jecxz
fucomip
test
xchg
adc
movsb
imul
jl
jecxz
sbb
jp
jno
xchg
cwtl
mov
push
xchg
push
inc
out
pop
adc
xor
loopne
jmp
dec
mov
sub
mov
aaa
jl
or
int3
jae
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
sarl
adc
jmp
test
dec
fneni(8087
dec
push
out
cltd
cmp
adc
mov
mov
cwtl
xchg
sbb
sbb
fwait
imul
cmc
subb
stos
les
hlt
cmp
fdivrs
mov
test
xchg
fidivrl
mov
test
or
sub
dec
ds
mov
icebp
fldt
xor
shlb
mov
pop
sbb
repnz
fsubrl
cmp
ljmp
in
jne
jge
inc
call
lods
int3
adc
sub
jecxz
cli
push
inc
inc
xor
cld
or
loopne
test
pop
lock
fistps
xchg
and
mov
js
lods
jp
mov
cmp
jecxz
sar
ljmp
clc
imul
scas
fsubrs
pop
je
sub
jge
arpl
jp
push
stos
jbe
lcall
arpl
mov
xchg
jg
add
pop
or
jmp
push
lods
jg
fcmovne
call
sbb
sub
xorl
fcomip
lcall
mov
test
gs
mov
jecxz
js
mov
xor
dec
std
ljmp
mov
jl
movsl
lods
dec
pop
popl
pushf
push
inc
lock
icebp
pushf
sbb
jmp
aaa
add
pop
push
push
lret
mov
ljmp
dec
or
mov
std
xchg
adc
mov
sub
fildl
add
incl
daa
loop
pushl
clc
mov
stos
dec
imulb
int
ja
rcll
xchg
test
mov
scas
mov
push
in
leave
dec
sub
repnz
mov
es
call
sbb
out
ficoml
xor
xor
inc
push
jno
pop
xor
push
incl
pop
cld
push
insb
lret
and
outsl
dec
mov
xor
enter
loop
add
and
xor
cmp
ljmp
pop
call
insb
pushf
daa
arpl
xor
je
ret
int
push
mov
rorl
enter
sar
call
call
xor
push
lods
rcr
dec
daa
mov
cwtl
inc
adc
and
into
fwait
sub
or
lcall
pop
xchg
iret
push
ljmp
aaa
scas
aam
add
pop
mov
into
mov
fstl
rcrb
add
push
sahf
jg
incl
cmp
test
or
lcall
data16
mov
call
notl
mov
pusha
sbb
push
inc
push
sub
sub
xlat
idiv
decl
mov
cmp
add
data16
in
ret
movsl
or
insb
pop
mov
push
rcrl
fbstp
cmp
mov
and
mov
xorl
pusha
dec
jae
loopne
sub
inc
mov
jnp
ds
xor
in
jns
xchg
xchg
lods
sub
lcall
pop
cmpsl
popa
mov
inc
mov
xor
sbb
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
pushf
dec
pop
add
out
xchg
add
les
adc
pushl
jmp
push
outsl
shrl
outsb
inc
les
fsubs
cmp
loopne
push
or
les
mov
pop
pop
mov
lds
mov
fs
les
push
test
push
incl
mov
ret
mov
inc
jl
sbb
jb
cmp
add
or
inc
sub
call
in
insb
jbe
jbe
outsb
clc
das
pop
push
adc
sbb
cli
mov
inc
cmp
and
shrb
int
and
lods
imul
ja
ljmp
push
adc
lahf
rorb
gs
and
sbb
cmp
out
push
enter
fs
movsl
test
mov
jmp
cs
inc
rcrl
popl
mov
push
xchg
vunpcklpd
xchg
dec
sbb
fdivl
test
pop
xor
mov
jb
dec
dec
xchg
and
push
cwtl
push
cmpsl
or
cld
xchg
pushl
repnz
jae
daa
int
mov
cltd
rorl
mov
sub
pop
dec
test
out
ljmp
fisttps
shll
pop
enter
inc
jge
addr16
jb
mov
inc
cmp
movsl
repz
push
sub
sub
inc
or
dec
cli
mov
or
inc
mov
cmp
sbb
pushl
sbb
fwait
mov
dec
leave
addr16
jp
fisubl
lahf
int3
mov
mov
aam
mov
test
mov
imul
nop
dec
push
pushf
pop
ljmp
out
cs
add
test
clc
inc
jl
jmp
mov
cmc
loopne
andl
dec
push
rolb
mov
mov
pusha
cmp
decl
sub
or
mov
sbb
mov
and
fisttpl
xchg
mov
call
and
dec
xor
loopne
mov
outsb
lahf
out
xchg
out
cwtl
sub
mov
loop
mov
xchg
xchg
mov
out
pop
pop
add
sbb
mov
lods
or
or
ds
xor
dec
xchg
ljmp
rcll
fdivrs
lea
je
and
pop
push
cmp
pop
inc
xchg
push
fiaddl
mov
ljmp
pusha
dec
mov
loopne
mov
and
enter
mov
pop
cld
ret
loopne
es
stc
or
pop
enter
dec
mov
cltd
or
std
push
lcall
jmp
push
xor
add
addr16
mov
or
xlat
incl
out
ret
cmp
fadd
outsl
cmp
mov
aam
scas
hlt
or
jg
pop
cld
cmp
jecxz
idivl
and
call
in
mull
dec
jno
sbb
pusha
or
inc
outsb
and
ret
and
mov
loop
xor
fistps
sub
mov
adc
ss
xor
sti
in
adcl
jb
and
decl
lods
ja
dec
push
aas
inc
cwtl
pop
and
mov
push
sub
imul
push
popa
pop
das
mov
outsl
and
and
xlat
insb
jns
add
mov
incl
mov
pop
xor
fnsave
and
xlat
adc
jecxz
xchg
dec
mov
jle
pushl
test
mov
xchg
pop
cwtl
out
cld
add
adc
cs
fimuls
call
xchg
clc
adc
add
jae
push
sub
jo
inc
dec
xchg
push
mov
adc
imul
xlat
jno
lret
enter
lret
aad
test
or
xor
jle
jge
outsl
or
out
pop
lcall
push
jne
in
push
decl
pop
sub
into
or
je
push
inc
filds
faddl
bound
pushl
fiadds
push
adc
dec
fs
lea
jbe
int
cwtl
jge
push
fs
cld
jmp
out
or
dec
rorl
pop
push
test
mov
and
test
sar
jns
test
test
push
mov
int3
sti
loope
cmp
jg
jo
mov
fidivrl
aad
push
mulb
sti
mov
mov
pushl
clc
xor
ficompl
jbe
pop
jecxz
adc
xor
add
jge
pop
int
and
pop
and
dec
icebp
push
lods
xchg
notb
or
push
pop
popf
push
cwtl
ja
inc
loopne
jecxz
loope
aaa
dec
outsb
or
gs
cld
cld
rcl
jb
mov
jl
sbb
jmp
mov
mov
xor
imul
aas
push
add
jecxz
imul
mov
repnz
mov
outsb
stos
in
jg,pt
lcall
fwait
sti
and
mov
push
loope
dec
add
inc
imul
scas
scas
jae
pushf
nop
fwait
test
insl
repnz
mov
xor
jp
mov
inc
in
push
adc
jmp
repnz
sub
enter
loope
lods
addr16
ljmp
jmp
mov
xchg
fdivrl
xchg
loope
dec
sbbb
inc
sub
psubw
fsubrs
aas
lods
jae
addr16
mov
rcr
jg
jmp
inc
cli
and
out
adc
subl
xchg
pop
and
inc
mov
call
cld
xorb
jne
cmp
push
in
fldenv
icebp
mov
scas
std
add
add
sbb
push
les
cmp
mov
lods
cwtl
push
sbb
loope
mov
adc
or
push
xlat
jnp
sahf
add
test
adc
jne
aaa
fcom
rcr
incl
mov
clc
outsb
push
xor
enter
xor
jno
sahf
mov
pop
fstpt
decl
test
sti
and
out
bound
inc
test
sar
ljmp
pop
or
lret
pop
js
pop
xor
dec
push
push
jge,pn
cmc
lcall
repz
ljmp
jne
movsl
test
out
cmp
inc
push
pop
arpl
mov
add
xchg
sbb
cmp
sarb
inc
pop
cmpsb
sub
xor
mov
cli
cmp
jno
push
push
lods
xchg
xchg
js
movsl
adc
cmp
aad
mov
adc
push
outsl
jno
pop
or
xor
xchg
adc
push
pop
hlt
jne
leave
or
jo
cmp
sbb
or
xor
add
call
or
mov
cmc
pop
jns
test
or
inc
xchg
incl
rclb
pop
dec
xlat
sbb
pop
in
das
adc
jmp
mov
imul
lahf
outsl
test
lea
pop
sbbb
ds
aas
and
insl
sub
cmpsl
lret
ret
xchg
xlat
xlat
mov
pop
cmp
iret
xor
mov
repz
shl
sahf
dec
sbb
iret
push
jg
iret
push
xchg
xchg
xchg
jo
call
xchg
fmulp
daa
es
xchg
and
lcall
shlb
int
mov
fistps
cmp
xchg
dec
out
jae
mov
daa
adc
lahf
jg
mov
in
cmpsb
dec
adc
out
mov
inc
push
push
aam
push
jo
mov
lret
test
lcall
out
jge
dec
ret
add
call
pop
jp
pop
sub
jns
mov
iret
or
or
dec
stos
sti
test
or
ljmp
clc
cmpsl
add
arpl
clc
popa
lahf
in
ds
imul
filds
insb
jge
jg
or
cld
and
lcall
stos
in
jp
sub
lahf
leave
push
daa
pop
insb
call
jl
mov
and
pop
aam
loopne
jae
jno
shrb
push
sbb
incl
mov
pop
add
icebp
pop
xor
cmpsl
sub
pop
clc
rcr
movsl
js
add
call
cld
mov
in
push
icebp
addr16
je
adc
js
lret
lret
xor
xchg
je
cmp
ljmp
mov
movl
pop
dec
std
shlb
fiadds
cmp
sti
ljmp
jle
add
mov
out
test
loop
fstpt
fmulp
lret
shll
in
jecxz
mov
out
repnz
adc
bound
mov
sbb
negl
jns
push
adc
and
fidivrs
popf
arpl
ljmp
shl
and
sub
loopne
xchg
cmp
std
jg
movsb
mov
stos
imul
or
fsubrs
ljmp
dec
and
mov
jo
inc
pop
sahf
test
mov
sbb
push
shlb
inc
push
ljmp
sub
inc
std
jbe
mov
out
mov
data16
cs
dec
idivb
jp
cwtl
daa
outsb
xchg
jae
and
lret
popf
mov
pop
mov
dec
xorl
jle
sbb
xchg
mov
mov
incl
aad
push
mov
mov
xchg
jo
imul
jecxz
xor
cmp
incl
jmp
pop
sbb
mov
cmp
stc
pop
sub
sbbb
xchg
lock
aam
sub
jecxz
dec
xor
out
cwtl
jb
scas
sbb
sarb
idiv
and
sar
jo
rcll
mov
dec
cmp
arpl
ss
add
sub
inc
mov
add
call
into
jo
pop
mov
adc
sbb
std
and
mov
adc
sub
mov
cli
mov
scas
imul
mov
and
in
dec
inc
sbb
adc
lahf
sbb
fst
fidivrl
in
xlat
inc
lods
cmpb
jecxz
push
or
or
adc
jg
les
and
jae
pusha
cli
clc
out
lret
les
test
sub
outsl
jle
hlt
inc
sub
xchg
loopne
pop
leave
mov
insl
xchg
testb
jp
sub
jae
mov
jbe
xchg
ljmp
loope
sbb
aam
jmp
push
jbe
adc
and
fsubs
int3
jle
xchg
mov
out
ds
bound
loopne
ljmp
cmp
mov
add
cmp
push
adc
jbe
xchg
inc
inc
sbbb
leave
out
add
cmp
outsl
xchg
shr
in
sbb
mov
test
mov
enter
ja
mov
adc
jmp
jecxz
adcb
dec
rcrb
dec
inc
out
movsl
mov
inc
aad
mov
jbe
andb
stos
into
cltd
movsl
jecxz
jae
cltd
jp
mov
mov
pop
iret
xor
push
cmc
jmp
icebp
cmp
xchg
lds
pushf
shlb
js
pop
ret
hlt
add
or
lock
movsb
pop
dec
negb
adc
icebp
out
xor
ffreep
or
mov
enter
mov
flds
outsl
stc
cmc
jnp
mov
dec
cmpsb
push
pushl
repz
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
mov
call
mov
push
xchg
fwait
lds
movsl
test
mov
pop
push
fbld
in
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
lock
outsl
jl
flds
test
enter
fcoms
out
push
jbe
jnp
test
lcall
mov
xor
das
es
pop
scas
std
jmp
cltd
push
cmc
sbb
mov
je
add
cmp
int3
mov
incl
adc
mov
jbe
sbb
sarb
outsl
in
cmp
ja
push
mov
decl
inc
pop
adc
movlps
fnstsw
cmpsl
pusha
sbb
jo
sahf
cmpsl
and
jo
mov
pushl
mov
jno
mov
mov
mov
popa
pop
pop
push
in
cli
and
jne
cld
shll
lcall
sbb
xchg
ljmp
add
rcr
clc
or
inc
lcall
imul
jno
mov
dec
pop
lock
out
lcall
rcrl
xor
adc
insb
push
add
push
mov
fsubl
inc
rcrb
mov
xor
add
add
lds
ljmp
sbb
sbb
cmp
int3
push
jnp
pop
lods
ljmp
sbb
daa
inc
mov
mov
jmp
aaa
popf
test
mov
lahf
pop
xchg
icebp
loop
orl
jb
lods
push
pop
lahf
or
jmp
ljmp
jle
push
outsl
adc
into
sub
and
mul
data16
decl
pushl
aad
dec
mov
mov
adc
or
adc
push
jns
inc
call
loope
popf
or
fmuls
xchg
mov
mov
daa
push
dec
mov
sar
jmp
sub
dec
mov
mov
pop
xor
inc
ljmp
or
xchg
sbb
cli
sbb
dec
dec
shlb
aad
mov
repz
fsubl
jne
pop
sub
push
ret
es
fildll
push
ljmp
push
xchg
call
aaa
lock
cmp
mov
lods
leave
pop
push
push
jne
dec
divl
adc
sbb
jae
inc
xor
push
leave
scas
stos
pushf
sbb
test
xlat
or
lcall
je
test
xchg
jmp
xchg
stc
shlb
lret
inc
ret
pop
rcr
popa
cmpsl
pop
pop
mov
or
mov
das
repz
dec
insl
mov
stc
xor
sub
jmp
inc
add
ljmp
test
or
nop
pushf
test
lret
sar
fisttps
xchg
mov
and
pop
mov
rcll
loop
push
jg
jae
or
enter
popf
in
rol
inc
pop
push
pop
iret
ficoms
lret
or
jg
adc
out
jg
popf
mov
push
or
aad
xchg
out
mov
mov
out
lahf
add
xchg
inc
lock
push
inc
call
pop
push
and
clc
mov
lds
adc
mov
dec
out
inc
lods
loop
pop
xchg
pop
dec
jg
add
jg
dec
cli
ds
add
ljmp
adc
dec
mov
pushl
fldpi
insb
enter
mov
jo
cmp
mov
lods
jnp
dec
push
dec
cli
jmp
and
out
push
ret
cltd
insb
dec
mov
push
xor
xchg
pop
mov
test
ret
decl
jp
push
mov
icebp
test
inc
xchg
popf
push
inc
cmp
popa
mov
sbb
movsl
imul
push
mov
push
add
cli
and
mov
adc
push
ljmp
xor
rcll
test
test
cli
mov
std
inc
jnp
mov
ud0
incl
into
mov
xchg
cli
or
lret
jl
mov
shrb
xchg
movsb
jmp
pop
and
pop
pop
movsb
mov
xor
lods
in
jns
xorl
xlat
or
push
lcall
cld
mov
mov
dec
aad
cmp
sahf
cmpsb
and
leave
call
lcall
dec
sub
dec
and
adc
sbb
and
jmp
jb
punpckhbw
scas
ja
inc
jecxz
sub
gs
xchg
roll
xchg
mov
lret
cmp
enter
sbb
scas
fisttps
cmpsb
shll
adc
dec
int
cli
jmp
xchg
rcl
jge
dec
jecxz
inc
aas
pop
mov
push
and
int
jle
ficomps
jmp
push
out
and
push
test
inc
ds
mov
and
push
int3
ljmp
test
roll
in
pop
iret
xchg
ret
mov
gs
push
aam
add
or
pop
in
loope
mov
int3
mov
jg
add
push
xchg
xlat
mov
adc
incl
lcall
push
mov
int3
and
push
mov
sub
sub
cmpsl
pop
xchg
incl
sbb
enter
test
movsl
stc
push
cltd
mov
xchg
push
dec
scas
push
mov
xorl
pop
pop
rcrl
sbb
incl
inc
xchg
or
mov
xchg
test
ret
sar
or
decl
movq
subb
call
outsb
adc
dec
clc
in
pop
pop
lcall
je
shr
dec
push
sub
adc
add
decl
mov
std
movsl
xor
xchg
scas
sub
divl
int3
mov
adc
test
push
in
ljmp
adcb
cmp
mov
fwait
imul
test
call
and
mov
push
push
cmc
fsubs
jne
mov
aam
jmp
scas
sub
push
add
shll
cmpsl
dec
push
outsb
test
mov
in
inc
dec
into
mov
fwait
jns
xor
mov
or
and
push
lock
xchg
sub
pop
incl
emms
out
gs
movsl
test
lahf
sbbl
sub
int
ds
or
jg
sub
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
and
cmp
fisttpll
mov
ljmp
scas
xchg
rcl
leave
das
and
push
push
scas
mov
lods
shrb
fwait
imull
xchg
mov
dec
jne
inc
cwtl
jmp
outsb
mov
mov
incl
push
dec
lods
adc
mov
repnz
outsb
enter
iret
loop
dec
cwtl
incl
out
icebp
popa
xchg
ret
fldt
add
mov
xchg
cmpsl
inc
in
test
out
jle
jmp
ret
loope
std
add
in
ljmp
push
out
and
dec
ret
lcall
sbb
popa
mov
xchg
ja
bnd
loop
or
in
mov
andl
adc
mov
or
lds
pushl
jnp
cmp
mov
jne
ljmp
cli
arpl
mov
adc
lods
clc
sti
leave
test
loopne
test
or
mov
call
xchg
cmp
mov
push
push
push
lret
and
jbe
insl
add
clc
add
mov
lock
insl
or
xchg
outsl
outsb
jp
pop
movsl
pop
dec
mov
dec
stc
push
xchg
sbb
imul
mov
loope
ds
xchg
lock
ss
movsl
cs
mov
and
das
mov
ljmp
cmpsb
sbb
dec
lcall
dec
leave
inc
test
aaa
jle
push
push
out
add
jmp
sub
fcomip
outsl
cltd
mov
inc
das
fcomip
pop
and
cld
ror
stc
lods
jbe
stos
dec
out
fiadds
xor
cmp
cmpsb
push
decl
add
pop
out
dec
pop
lcall
cld
call
cld
xchg
loope
pushl
enter
fadds
xchg
scas
jno
jne
jecxz
cld
jecxz
roll
loop
sbb
xchg
std
pinsrw
lock
jg
sub
push
or
sub
or
push
add
lods
shll
pop
aas
lcall
push
jmp
xchg
jg
mov
pop
pop
mov
sarb
dec
sub
xchg
mov
xchg
loop
into
popf
lock
cld
pushl
sahf
inc
mov
popf
mov
stc
push
jle
ljmp
mov
sbb
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
xchg
incl
mov
stos
sbb
test
adc
cs
mov
and
fdivr
jmp
adc
cmp
out
mov
jp
loope
out
or
mov
adc
incl
or
ja
push
subb
sti
cmp
in
pop
pushf
inc
sbb
mov
sub
dec
mov
pusha
shll
jecxz
cltd
popa
inc
pushl
addr16
lret
sbb
mov
ret
subl
xor
mov
enter
cmp
xor
jae
sbb
pop
subl
add
pusha
subl
incl
popa
fs
cmp
movsb
mov
push
pop
in
cmp
aaa
mov
cld
mov
lcall
das
fwait
jbe
sbb
sub
sub
add
sarb
or
pop
icebp
jmp
mov
or
into
jle
inc
test
cmpl
lock
dec
cmp
fsubs
ja
mov
push
cmpsb
mov
fld
adc
repz
lea
sbb
imul
lods
addb
scas
mov
arpl
ljmp
shlb
data16
enter
pop
mov
sbb
mov
xchg
movsb
lea
jmp
mov
push
stos
jnp
mov
push
xor
scas
push
incl
dec
mov
clc
aas
dec
daa
les
in
clc
pop
pop
shl
lods
xchg
jne
sbb
push
mov
idivb
adc
ljmp
adc
popf
fs
sbb
push
add
inc
dec
pop
lcall
ss
ds
aas
lods
sub
fldcw
pop
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
and
aam
push
aas
mov
push
cmp
or
push
jp
add
mov
mov
dec
js
in
pop
or
cmp
sbb
sub
into
jbe
shrb
jmp
ss
xor
mov
jg
out
aas
push
xchg
mov
pushl
and
nop
dec
dec
scas
sub
mov
shrb
push
pop
pop
mov
mov
mov
mov
mov
pop
xchg
inc
cmpsb
add
pushl
shrl
cmc
dec
out
clc
pop
mov
lds
inc
mov
nop
scas
push
js
ss
sbb
push
pushl
sbbb
fstpt
jmp
jp
mov
inc
fildll
ljmp
leave
out
cmp
dec
cli
nop
test
sbb
fs
push
test
movsl
mov
jg
mov
out
pop
test
push
cmp
mov
mov
ljmp
lods
and
xor
js
jbe
dec
in
adc
loop
pushl
jne
mov
xchg
mov
xchg
or
jp
xchg
inc
rcl
movl
pusha
jl
ljmp
sub
xchg
xor
ficoml
pop
jge
xor
lcall
adc
or
sub
mov
and
lcall
pop
mov
push
jae
inc
daa
inc
add
leave
ret
es
in
sub
mov
xor
xor
sbb
fidivl
loop
leave
testl
mov
cmpsl
clc
mov
mov
sbb
xchg
cmp
bound
pop
in
cmp
lcall
xchg
dec
lods
jmp
xchg
adc
in
xor
ret
loope
cmc
jg
push
mov
inc
dec
je
je
mov
test
jne
mov
sub
clc
decl
pop
lret
cmp
repnz
add
sub
dec
pushf
mov
vmovapd
or
push
shll
cwtl
outsb
and
xor
jmp
jg
sbb
int
pop
repnz
loop
rolb
pushf
ja
call
lahf
and
aad
sub
mov
gs
lret
inc
clc
xor
idiv
call
add
inc
rorb
push
xchg
inc
icebp
xchg
mov
int3
aam
sub
es
lcall
adc
push
xchg
xchg
dec
push
roll
lods
jb
jecxz
das
adc
nop
fwait
je
imul
decl
xchg
pusha
imul
xchg
xlat
out
fcom
popl
je
jg
xchg
ss
imul
lcall
mov
aam
ds
xchg
and
ds
imul
gs
and
xor
mov
inc
outsb
mov
xchg
std
adcb
call
fs
push
jbe
fld
or
lods
jle
and
std
mov
jl
inc
subb
call
lcall
ja
call
aam
mov
push
add
dec
loope
and
ror
mov
test
call
mov
sub
cmpsl
call
push
loopne
fcmovnbe
sarb
xchg
outsb
out
movsb
mov
fisttps
cld
pushf
xor
inc
shr
push
sub
sarb
pop
divb
xor
es
adc
cltd
and
mov
sbb
cmp
add
sbb
incb
add
fcomip
aam
cmpl
jae
popa
push
xchg
mov
movsb
pop
xor
decl
adc
lods
xchg
pop
pop
jmp
ljmp
lahf
add
dec
dec
mov
lahf
movl
divl
mov
or
loopne
or
and
adc
mov
xor
mov
leave
and
xchg
xchg
mov
cld
pop
sub
adc
gs
dec
fildl
std
out
xchg
cmp
xlat
loop
jmp
rclb
jns
pop
xor
fcomip
incl
lahf
jle
push
mov
ja
adc
dec
adc
addr16
int
jmp
lret
sbb
jnp
imul
fcomps
fcom
push
xchg
adc
popf
into
mov
out
clc
ljmp
mov
xchg
divb
add
dec
xchg
lret
mov
sbb
cwtl
inc
cwtl
cld
aaa
and
lcall
pop
adc
scas
adc
aad
dec
data16
xchg
mov
leave
push
push
adc
mov
push
rolb
mov
mov
repnz
jmp
or
pop
xchg
cmpsl
je
fneni(8087
sub
outsb
lret
repz
cmc
pop
jle
mov
mov
scas
and
mov
push
cmp
lds
cs
lock
scas
imull
inc
sti
xor
push
mov
rcrl
lods
jns
cld
popf
aad
xchg
mov
cmpsl
add
ljmp
sub
cmp
xor
pop
imul
xlat
xchg
fnstenv
sbb
stos
repz
jns
pop
adc
decl
repnz
fdivl
bound
or
rcr
pop
out
rolb
aas
test
or
int3
loop
pop
adc
gs
incl
into
push
mov
mov
rcll
jne
aam
fildll
mov
outsb
mov
test
gs
cmp
pop
or
sub
mov
push
nop
test
dec
dec
push
icebp
pushl
lret
jo
push
sub
icebp
push
test
incl
sub
xor
xor
push
inc
out
out
dec
push
jge
fcoms
dec
sbb
xor
daa
in
ljmp
outsl
jne
jns
bound
fwait
and
mov
aam
out
xor
andl
ljmp
add
int3
ds
xchg
sbb
push
mov
arpl
lea
mov
js
repz
jnp
adc
sahf
shll
jb
outsl
dec
into
lret
push
inc
repz
js
lods
push
adc
cli
sub
adc
dec
lea
xor
pushl
push
bound
lahf
sbbl
inc
sbb
jp
push
negl
xchg
inc
dec
mov
cmc
mov
mov
pop
outsl
or
scas
jmp
pushf
in
call
mov
xor
jl
jmp
push
push
mov
in
pop
xchg
or
outsb
push
jge
sbb
pusha
insl
mov
ret
push
out
cltd
dec
push
sbb
dec
and
cmc
inc
jbe
mov
xchg
ret
adc
roll
inc
xor
in
mov
mov
fmul
sub
mov
enter
mov
sti
jg
cmp
mov
test
aaa
push
cli
js
push
iret
aaa
fstl
adc
call
lods
dec
cmp
fsts
pushl
mov
das
nop
lea
popf
mov
jg
js
adcl
int
fsubrl
xor
jle
and
pushl
pop
aas
push
rolb
sbb
insl
jae
push
sbb
or
inc
inc
loopne
decl
xor
leave
pop
dec
mov
adc
aam
ljmp
cmpsb
shlb
sbb
adc
or
call
adc
push
test
movsl
test
mov
mov
shlb
fdivp
aam
test
inc
mov
popf
notb
je
cmp
jbe
lods
cld
or
outsl
lahf
ljmp
rcll
jmp
flds
fists
sbb
push
int
incl
mov
lahf
sbb
sbb
xchg
lret
into
les
mov
test
call
popa
dec
fisubl
pop
divl
and
into
dec
scas
sub
adc
incl
xchg
int
nop
sub
lods
jbe
mov
jne
outsl
mov
es
bound
aad
dec
or
pop
pop
std
incl
test
ljmp
pop
pop
xchg
xor
mov
pushl
cltd
leave
inc
jmp
jne
aam
pop
push
stos
push
int
adc
leave
and
call
pushf
xchg
or
pop
pop
mov
add
mov
push
xlat
pop
lods
add
aad
xchg
ljmp
mov
test
ficomps
insl
add
cli
cld
ss
jge
mov
pop
hlt
pop
out
fcmovnu
arpl
lret
mov
dec
xchg
outsl
xchg
incl
xchg
sahf
hlt
adc
sub
pusha
aaa
xor
lcall
lcall
testb
cmpsl
call
and
shlb
xchg
mov
rorb
mov
call
je
out
push
loopne
fisubrl
iret
ljmp
popf
xchg
sbb
hlt
fwait
pushl
push
loope
enter
leave
scas
pop
jmp
pop
xor
add
mov
insb
stos
mov
movsb
insb
jge
cltd
mov
bound
cltd
xchg
sub
xchg
adc
sbb
mov
adc
ficompl
pop
lret
mov
push
sahf
ljmp
js
dec
loop
jp
idivl
dec
popf
pop
ret
in
out
je
rorb
jmp
icebp
mov
stos
aam
pop
ljmp
clc
shll
mov
mov
mov
jmp
cmp
std
cmp
repz
fcoms
dec
call
inc
insl
sti
adcb
ljmp
sahf
dec
or
pop
out
orl
movsb
sbb
jb
inc
fsubr
decl
in
cmp
aas
push
xchg
pop
add
mov
xchg
aam
in
mov
das
mov
addb
and
pop
dec
ja
xorb
testb
sbb
pop
es
repnz
rclb
aad
dec
xchg
jg
bound
fucomi
lods
outsb
xchg
movsb
incl
ja,pt
dec
pusha
cmp
dec
insb
stc
mov
aaa
das
jl
jae
call
cmp
adc
and
or
mov
adc
ljmp
repz
xor
dec
push
inc
add
mov
decb
fdivr
aaa
mov
in
bound
hlt
dec
push
pop
out
imul
js
xchg
arpl
orl
mov
pusha
pop
push
pop
es
aaa
std
ljmp
test
jg
pushf
mov
insl
loope
mov
decl
inc
clc
mov
cmp
data16
xchg
jp
push
ja
pop
push
popf
fcos
ljmp
dec
frstor
shll
rclb
sbb
pop
and
int
repnz
mov
ljmp
cmp
shlb
cmp
orb
test
mov
lret
and
decl
xorl
or
xor
cmp
ficoml
push
aad
sbb
test
lcall
xorb
call
call
fwait
jle
xchg
incb
sub
andb
js
bound
lcall
cmp
clc
loopne
lock
sub
and
ja
test
test
fwait
inc
adc
pop
xorl
mov
jp
mov
out
incl
iret
sub
xchg
sub
in
ljmp
sbb
and
cmp
inc
push
call
popf
adc
cmpb
dec
mov
std
adc
xlat
hlt
addl
mov
sub
sbb
mov
loop
sub
out
push
push
pushf
pmaxsw
mov
fistps
mov
sbb
xor
and
mov
jge
sub
push
and
cmp
inc
jmp
fnclex
dec
pop
sbb
push
or
js
inc
xor
pop
jb
push
hlt
popf
decl
mov
sbb
pop
xchg
jb
sbb
sub
dec
call
push
mov
sub
mov
outsl
cmc
scas
inc
loope
mov
ret
cmp
incl
enter
mov
out
xor
inc
leave
add
lcall
sbbl
rcl
fdivr
in
xchg
pop
adc
js
std
test
xchg
fdivl
call
xchg
push
sub
movsl
in
lock
aad
jle
fiaddl
addr16
push
movl
fcmovbe
shl
dec
fs
jo
leave
add
dec
ret
imulb
fcomip
pushl
mov
push
mov
imul
sub
push
mov
inc
lcall
fcomi
lods
xchg
mov
fiadds
sub
mov
push
jmp
int
push
rcrb
adcb
xor
ljmp
call
push
fxtract
jo
cwtl
mov
insl
mov
pushf
mov
outsb
or
cmpsl
push
jbe
lcall
sub
xlat
cmp
cmp
cs
fwait
daa
adc
out
clc
cld
incl
xor
lea
pop
and
subl
clc
iret
cli
les
jbe
push
mov
lret
mov
filds
xlat
jo
cltd
jg
imul
jne
shrb
and
rcll
or
pushl
push
int3
aam
enter
and
lods
iret
push
sbb
sub
pop
cmpb
mov
in
jae
xchg
das
push
loope
mov
shrl
vpsubusw
inc
ljmp
call
mov
orl
dec
cwtl
dec
ret
iret
sti
aad
je
fs
cmc
xor
sti
mov
pop
sub
fwait
imul
repnz
fs
dec
ljmp
pop
push
jbe
inc
lods
mov
sbb
imul
popa
jp
cmp
add
lcall
ds
jmp
leave
stc
lods
aam
or
dec
scas
mov
arpl
jg
mov
cmp
icebp
jae
jl
adc
ljmp
push
cltd
sbb
and
dec
push
jb
jmp
fmul
and
das
imull
xchg
je
ror
cmpsl
dec
sbb
ljmp
rcl
pop
addr16
jl
jb
or
pop
and
inc
mov
sbb
call
scas
sbb
push
push
cmp
adc
incl
ds
jns
push
cli
leave
and
mov
in
ret
cmpsb
adc
xchg
ljmp
data16
mov
mov
add
adc
shrl
das
add
cmc
popf
xlat
movzwl
mov
mov
and
or
xor
inc
lret
shll
aas
mov
out
cli
lcall
xchg
ljmp
cmp
test
leave
ret
lcall
stos
jo
sub
pop
sub
cwtl
or
cmc
lcall
data16
hlt
pop
mov
mov
stos
and
xor
mov
adc
inc
cmp
not
push
movsl
test
jno
js
lock
mov
aas
shl
stos
inc
pop
add
ljmp
pushf
into
pop
dec
sub
dec
mov
in
insb
xchg
lret
sub
out
imul
inc
pop
add
jmp
sti
shlb
insb
jmp
and
cmpsb
push
test
outsl
inc
xchg
or
test
imul
jg
loop
inc
ds
pusha
dec
mov
mov
hlt
out
js
jmp
xchg
add
pop
ss
adc
mov
fnsetpm(287
sub
mov
mov
xchg
mov
mov
push
or
sub
std
sub
or
push
pop
jp
scas
les
shll
xchg
xor
mov
out
mov
inc
inc
inc
xchg
ljmp
or
call
or
add
test
lret
or
mov
sbb
call
cmp
scas
fcompl
jecxz
pop
gs
les
jne
inc
incl
repnz
fistl
adc
enter
jo
std
lods
push
mov
aam
jnp
rorb
jmp
jp
test
jo
popf
xor
in
mov
cld
pop
mov
popa
jecxz
addr16
lcall
out
fldt
fidivrs
je
repnz
jmp
out
xchg
or
call
xchg
test
lds
cs
out
jne
loop
loope
aaa
subl
clc
incl
cld
jo
in
fdivrl
jno
ds
cmp
or
call
jo
dec
xchg
sti
cmp
icebp
xchg
loopne
mov
or
test
and
xchg
call
loopne
sbb
pusha
mov
dec
pusha
adc
and
cmpsb
rcr
insl
inc
fnstsw
adc
call
cmp
setp
push
cmpsb
pop
xchg
pop
xor
sub
jmp
adcb
push
sub
scas
sbb
test
add
xchg
mov
into
js
xlat
ljmp
test
loop
push
adc
shrl
dec
or
sub
fisubl
cmp
lea
push
dec
fists
or
sbbb
lds
cmp
ljmp
loop
pop
dec
hlt
fcoms
shlb
mov
pop
lods
arpl
sbb
mov
inc
jge
xlat
lea
mov
dec
mov
inc
movsl
xor
rolb
ror
and
pushl
ss
cmp
dec
xor
sahf
xlat
and
test
and
mov
jl
ret
xor
rorl
sub
hlt
call
addb
incl
fcompl
adc
lods
push
fimuls
decl
sarl
dec
setno
mov
pushl
push
out
mov
push
add
pushf
lds
inc
pop
lods
inc
push
scas
adc
jge
pop
fnstenv
push
add
scas
lcall
notb
sahf
aaa
stos
cmc
sub
dec
push
push
add
push
and
push
mov
cmp
call
call
cmc
or
xor
jmp
or
jb
sar
dec
shlb
jecxz
cmpb
adc
ret
movsl
and
xorl
add
scas
lods
xor
stos
jmp
pusha
adc
xchg
ds
fld
decl
and
xor
dec
adc
or
jl
jg
mov
call
je
lret
add
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
decl
test
inc
pop
out
inc
mov
push
sarb
arpl
add
xchg
lock
decl
loopne
fstpl
xchg
sarb
dec
movsb
je
xor
es
ljmp
pushf
adc
ret
call
leave
sti
testb
pop
jl
imul
push
jae
loop
mov
lock
add
push
adcb
xor
int
pop
xchg
nop
mov
in
or
mulb
mov
shrl
sbb
dec
jp
pop
sbb
mov
cmpsl
dec
xchg
push
jns
mov
sub
dec
nop
outsl
xchg
pop
sub
add
push
or
push
cltd
sub
jle
jmp
shlb
adcb
pop
es
loope
ret
push
dec
xor
fcmovu
and
sbb
std
mov
lods
sub
lods
add
mov
mov
insl
and
xchg
test
cmpb
jmp
xor
mov
mov
mov
jnp
subl
outsb
filds
add
incl
loope
jmp
sbbb
das
aad
cmp
lret
mov
loopne
roll
push
andl
fnstcw
adc
aad
jp
mov
push
dec
and
mov
xor
incl
iret
sbb
sub
adc
imul
ds
shlb
mov
ljmp
lea
ja
cmp
push
lcall
cmp
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
dec
cmp
lcall
sub
mov
jge
ljmp
fdivrs
and
push
incl
in
cwtl
or
dec
sub
decb
sub
gs
adc
andb
daa
fcompl
mov
test
ljmp
or
cld
out
add
bnd
sub
cmp
or
mov
inc
jmp
mov
loopne
ret
fistpll
add
push
push
lret
xor
hlt
dec
jmp
into
push
dec
outsl
or
cmp
cld
pop
jnp
add
xchg
orb
mov
das
dec
add
jg
data16
sbb
sub
pop
fcoms
pop
fidivs
incl
adc
mov
loope
or
lods
jnp
xor
xor
jns
test
sbb
cli
pop
xorb
ljmp
lea
jns
enter
fdivr
outsl
cli
decl
xor
dec
frstor
fwait
cwtl
or
push
sbb
jmp
sub
push
or
add
mov
call
mov
jno
mov
mov
lcall
lods
mov
sub
sti
adc
insb
loopne
popa
enter
adc
call
xchg
mov
scas
fildl
mov
cwtl
imul
or
xor
xchg
xchg
add
and
aas
aas
or
sbb
out
stos
or
sar
out
mov
dec
insb
pop
out
inc
stc
inc
popf
dec
test
mov
pop
into
lods
lcall
aam
fisubrs
xchg
lcall
ljmp
dec
mov
cltd
fwait
mov
push
pusha
aam
not
sbb
and
stos
mov
mov
or
mov
cmpsl
or
es
dec
hlt
cmp
loope
cltd
addr16
jg
pop
inc
icebp
notl
inc
insl
gs
jnp
jo
out
ror
lods
fisubl
jl
and
lcall
mov
mov
inc
push
xor
push
imul
dec
or
jl
in
incl
sub
stc
jge
adc
mov
jo
cs
or
mov
js
jmp
sbb
stos
lcall
in
cld
sbb
movsl
add
adc
inc
test
sub
iret
test
inc
add
pop
or
cld
jle
int3
and
xchg
mov
mov
cmp
daa
and
fnstcw
neg
dec
or
mov
rcl
lret
push
add
scas
mov
or
divb
lcall
mov
push
push
jns
cmc
arpl
push
inc
mov
loope
fnsave
dec
pop
fisttpll
push
nop
or
jbe
xor
test
div
repnz
cli
xor
push
fists
call
mov
pop
push
cs
adc
mov
fs
sub
incl
lahf
and
je
cmp
xchg
mov
mov
std
pusha
out
inc
push
repnz
rcrb
loope
xchg
xor
mov
lahf
jb
mov
out
sarl
sbb
cmp
mov
je
or
cwtl
addr16
clc
push
mov
lret
jmp
push
lock
adc
sbb
aas
xchg
and
fwait
dec
nop
call
mov
cltd
and
lret
popa
xor
push
sbb
mov
jb
xor
popa
adc
pop
pushl
ljmp
lcall
insl
cmc
and
mov
sub
xchg
outsb
lcall
daa
pop
cs
jne
stc
mov
and
ljmp
cmp
adc
cmp
fisubrs
xor
mov
call
lret
and
mov
cmp
test
xchg
cs
fsubs
cmpsl
jge
ret
imull
mov
dec
sbb
ret
mul
dec
movsb
ljmp
mov
lea
push
pop
in
push
xchg
fcoml
imul
jmp
bound
xchg
adc
jp
decl
mov
jno
lcall
dec
stos
pop
and
dec
pop
sahf
pop
push
je
mov
xchg
push
gs
xor
push
jg
mov
loop
je
fildl
call
or
mov
nop
idivb
test
lods
mov
movsl
movsl
jmp
lcall
cmp
test
inc
insl
mov
mov
xor
ret
decl
into
and
ret
pop
test
cli
xor
notb
addr16
jmp
js
nop
scas
ljmp
imul
sub
xor
and
jmp
cmp
pushl
pop
mov
pusha
jo
ja
das
adc
call
repz
cltd
arpl
jae
mov
push
call
in
mov
repz
test
xchg
comiss
loop
hlt
adc
lcall
cld
in
mov
movsl
les
mov
shlb
mov
sub
inc
xor
sahf
lret
dec
mov
mov
mov
add
mov
mov
sub
enter
jmp
sub
and
jae
or
adc
rol
in
sbb
test
xchg
iret
xchg
cmc
mov
and
xor
or
mov
ljmp
fildll
mov
inc
aas
in
cwtl
sub
or
and
push
pop
repz
cld
arpl
imul
out
add
test
pop
roll
or
jmp
lcall
mov
fnstsw
and
rolb
mov
jae
ljmp
pop
mov
or
cmp
jg
rcrb
std
push
inc
in
jb
out
loopne
xor
push
add
mov
push
stc
in
imul
mov
loope
hlt
in
mov
out
jne
shr
cmpl
xchg
or
int
mov
testb
mov
xchg
pop
fisubrs
cmp
or
add
pop
ljmp
mov
inc
stos
adc
pop
lcall
lcall
cltd
gs
sub
popf
and
lods
xlat
aad
dec
pop
mov
imul
jo
jmp
cld
pop
add
xlat
sbb
subl
and
ljmp
jg
mov
insb
and
xchg
sub
div
dec
mov
jle
sbb
jb
xorl
sub
aaa
sub
inc
mov
mov
decl
js
loopne
lcall
aam
pushf
loope
dec
dec
enter
pop
in
inc
push
xchg
outsb
nop
pushl
cld
ss
push
jne
jo
test
test
add
int3
dec
out
and
dec
getsec
push
cld
pop
test
xchg
gs
jmp
or
fwait
popf
push
sub
jmp
loop
sub
xor
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
sub
fcomip
stos
roll
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
call
into
leave
in
xor
inc
mov
and
lret
rolb
and
jg
push
and
adc
push
xchg
test
cmpsb
jmp
nop
xlat
enter
or
call
pop
xchg
mov
xchg
xchg
mov
dec
fstpt
loopne
xchg
pop
mov
pop
ljmp
cmc
adc
mov
int3
cmp
loop
mov
cld
mov
ds
sub
popa
push
dec
pop
test
jae
in
mov
popa
add
dec
cbtw
imul
ret
mov
jmp
cmpsb
orl
lcall
sbb
xchg
bound
movsb
addr16
xchg
sar
push
jae
cmpsb
dec
mov
cmp
xchg
call
sti
outsb
movsb
mov
cmp
popf
jge
adc
insl
xchg
jo
sarl
jge
mov
adc
inc
ret
sub
xor
mov
xchg
adc
lcall
lds
call
scas
sbb
jle
jp
outsl
jl
pop
inc
or
test
divb
pushl
scas
xchg
ret
mov
dec
sub
adc
or
xor
push
mov
inc
mov
incl
andl
fisubrs
sar
cltd
pop
and
aad
dec
pop
sbb
adc
pop
bound
push
insb
push
decl
jbe
icebp
sub
inc
repz
pop
mov
out
mov
mov
gs
push
lret
mov
pushl
sub
fdivrs
jbe
mov
fisubrs
test
loopne
js
dec
mov
out
insl
push
incl
dec
sub
jmp
xor
cwtl
jg
push
int
loope
es
sar
jo
pop
stos
call
sbb
cmpsb
fsubs
mov
aam
movsb
jne
notb
jmp
cmp
mov
mov
fdivr
mov
cli
fwait
push
faddl
pusha
xchg
mov
push
fistpll
jbe
movsb
jmp
dec
mov
out
cltd
pop
xchg
inc
push
adc
orl
fdiv
mov
sbb
pop
cmp
mov
ja
aam
jno
out
adc
in
ja
sti
fcomip
aaa
jecxz
cs
lock
repz
pushf
cmp
inc
pushl
mov
push
adc
in
mov
jg
adc
add
cmp
ret
nop
int3
out
push
mov
fadds
mov
add
push
cmp
adc
aas
ljmp
in
cmpsb
icebp
fstps
mov
pop
sbb
test
dec
add
sub
mov
push
push
scas
aad
adc
call
sti
push
popa
std
imul
cmpsl
pop
lock
inc
sub
call
sbb
cmp
fnstsw
popf
pop
xorl
subl
shlb
jmp
sub
push
rol
nop
cmp
mov
dec
fwait
imul
mov
jne
and
add
cmc
jb
dec
jge
push
pushf
cli
rcl
cmp
mov
aam
jb
es
lods
lods
add
out
add
mov
ljmp
fldt
test
add
test
test
mov
bswap
xor
cwtl
test
cmp
scas
insb
jns
stos
dec
add
jns
loope
sub
mov
mov
sub
jle
and
or
ficompl
cmp
flds
sub
mov
mov
cmpsl
or
mov
enter
imul
or
sbb
fcmovnb
fwait
sub
mov
pop
or
mov
and
mov
idivb
enter
fnstenv
stos
call
xchg
mov
jmp
inc
xorl
mov
inc
rorl
shrl
jo
iret
data16
idiv
lcall
lcall
enter
push
pop
cmc
stc
mov
mov
pop
call
mov
mov
bound
shll
out
rolb
sbb
xchg
pushl
dec
pop
mov
cmp
cwtl
sbb
nop
sub
and
mov
mov
sub
cmp
loope
js
push
xor
popf
xchg
xor
or
jmp
dec
dec
outsl
push
fbld
mov
pop
adc
add
popa
or
aaa
loopne
cmp
movb
ljmp
sub
push
mov
lods
xchg
arpl
cmp
pop
mov
mov
ljmp
popf
xchg
subb
sub
fdiv
int
incl
xchg
sub
xor
pop
cmp
push
cld
push
jno
ret
int3
push
test
pop
dec
inc
lcall
scas
call
jge
adc
incl
clc
xor
out
popa
cld
push
pop
sbb
dec
cs
cld
lods
hlt
sub
push
loopne
cmp
and
pop
jb
inc
push
out
xchg
gs
adc
rorb
cltd
jge
ljmp
rclb
sub
mov
je
mov
jmp
cli
pushl
aas
aad
int
or
xlat
lea
icebp
lcall
cwtl
adc
decl
ret
cmp
inc
sbb
xor
cmp
jle
insb
or
and
pop
outsl
and
dec
call
ret
lock
incl
faddp
xchg
add
clc
xchg
lods
add
out
mov
pop
sbb
and
push
mov
mov
mov
inc
mov
jns
hlt
loop
pop
aad
cmc
pop
sub
mov
fwait
sbb
jne
pop
ret
ljmp
test
andb
scas
xchg
mov
call
out
clc
test
mov
fisubs
sbb
cmc
scas
mov
out
mov
add
pminub
mov
fildll
out
cmpsb
lock
movsb
pop
mov
in
int
or
sbb
mov
in
cmp
icebp
jns
and
mov
or
xor
inc
lret
lea
jmp
in
or
movsb
xchg
std
jne
jp
adc
or
into
xchg
aas
mov
movsb
xor
pop
sbb
jecxz
jmp
enter
jecxz
or
cltd
mov
xlat
inc
or
sbb
sbb
incl
push
push
and
imul
test
jl
divl
push
cmp
add
push
std
call
push
in
into
cwtl
pop
mov
pop
icebp
sarb
mov
std
jg
clc
sti
xor
inc
xor
pusha
cmp
jl
out
pop
inc
int3
cmp
ret
pop
cmc
xor
vmread
lea
fildll
std
ljmp
stc
popa
and
add
dec
in
push
loopne
lret
aam
sub
sbb
jg
in
insl
sbb
or
bound
pop
xchg
jmp
lahf
dec
sbb
mov
sbb
inc
or
pop
ds
push
xchg
loopne
cltd
inc
pop
fidivs
mov
mov
jne
jecxz
pop
adc
push
add
pop
loop
pop
hlt
jg
arpl
mov
and
and
aaa
in
sbb
insl
cmpsb
and
call
enter
xchg
pop
pop
inc
inc
xor
mov
push
insb
cli
sbb
imul
decl
mov
adc
sub
sbb
jmp
hlt
cs
sbb
cmp
cmc
loope
lcall
icebp
leave
pop
sahf
stc
or
movsl
or
xchg
and
jmp
dec
gs
incl
scas
cmp
out
cli
adc
loopne
movsb
pusha
outsl
and
xor
incl
push
push
repz
stc
aaa
mov
sbb
pop
mov
clc
enter
pop
hlt
data16
or
scas
cmp
jns
movsl
out
cmp
call
fistl
jmp
add
out
mov
scas
aad
add
decl
or
mov
rorl
adc
ror
sbb
test
inc
call
adc
jns
mov
or
sub
imul
mov
fld
pop
aam
cmp
jecxz
outsb
jl
jp
xchg
mov
in
inc
sar
pushl
scas
push
mov
mov
stos
push
jmp
xor
push
jnp
mov
pop
and
jg
push
lret
push
dec
push
push
jp
sub
pushl
push
mov
add
jl
push
loopne
out
add
lret
es
lcall
loope
mov
lods
adc
jns
push
xlat
loop
call
push
xchg
sub
bound
cmpsb
icebp
aas
std
pop
out
push
adcb
mov
push
sahf
stos
fs
xchg
lahf
jnp
lret
inc
cmp
adc
fs
sbb
mov
popl
jo
cwtl
out
loop
addr16
sub
popf
std
popa
fcomip
pushl
and
sti
insb
or
jbe
xchg
lods
inc
sbb
sbb
and
pop
mov
dec
sbb
mov
jle
adc
pop
jno
pop
dec
loopne
inc
mov
adc
sub
int3
dec
adcl
pop
decl
xchg
jnp
or
out
test
je
cwtl
mov
jmp
outsl
decl
data16
inc
sbb
cmp
aas
loopne
xchg
aad
ret
adc
push
js
stc
mov
jg
je
test
mov
lahf
scas
inc
mov
pop
sub
mov
mov
adc
or
test
test
jg
lcall
int
daa
in
xchg
mov
outsl
dec
inc
cli
ljmp
cmp
pop
pop
fdivl
push
mov
adc
fldt
cli
add
in
ret
daa
dec
jmp
adc
movsl
fsubl
mov
popa
mov
jle
cmp
push
mov
std
cmp
fcmovb
sti
dec
call
loope
sti
mov
leave
ret
mov
push
or
jg
lods
jae
mov
inc
push
jo
or
pop
lea
xor
ljmp
mov
loopne,pn
into
xor
in
ffree
inc
in
notb
rol
dec
ret
lods
insb
popa
sub
pop
add
push
pop
pop
or
inc
fidivl
jle
lret
dec
or
cwtl
mov
mov
mov
push
out
jmp
jecxz
loop
add
push
pop
adc
repnz
call
cmp
mov
inc
adc
inc
jns
clc
cwtl
and
mov
mov
pop
out
xchg
arpl
fidivrs
shlb
jae
push
mov
lcall
in
and
push
iret
stos
cs
sbb
mov
loopne
dec
clc
test
fsubrl
aaa
cmpsl
popa
xchg
movsb
sub
xor
and
cmp
cmp
bound
push
mov
or
sub
mov
mov
cld
xlat
stos
and
push
mov
inc
subl
sbb
pop
push
vxorps
fimuls
xor
loopne
int3
sarb
shlb
ss
inc
fwait
cmp
mov
jmp
rcrb
push
pop
ljmp
push
cmp
fwait
out
dec
and
xchg
sub
push
mov
nop
ds
add
cmp
xor
and
jbe
lcall
xchg
or
gs
popf
fisttpll
or
jbe
adc
inc
adc
cmp
ficompl
mov
jno
xor
stos
inc
jne
dec
sbb
sti
mov
cld
dec
mov
fimull
cmc
inc
inc
cltd
hlt
pop
mov
xor
ljmp
cmpsl
push
fiadds
dec
mov
lods
movsb
movsb
sbb
incl
add
push
lods
aaa
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
cmp
lcall
sub
aaa
xacquire
gs
dec
testb
xchg
mov
mov
outsb
push
mov
decl
ss
scas
loope
adc
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
inc
adc
ljmp
out
fs
mov
leave
mov
mov
test
mov
dec
mov
lods
stos
pop
and
repz
dec
mov
and
call
gs
cmp
in
cmp
sti
mov
pop
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
sub
incl
iret
xchg
jp
cmp
in
pop
scas
call
stc
movsb
jo
dec
out
gs
mov
push
fwait
loopne
imul
js
pusha
and
add
mov
ret
mov
jmp
lods
arpl
sbbl
adc
xor
sbb
js
xchg
or
push
lock
fstpl
js
mov
sti
push
aad
sub
loope
ljmp
fs
in
addr16
sub
push
pushl
mov
imul
enter
adc
jb
push
enter
aas
out
clc
call
clc
movsl
cltd
inc
lcall
aam
pop
push
lahf
or
ljmp
jae
clc
sbb
jg
mov
mov
jecxz
loopne
dec
sub
notl
ficoms
push
inc
mov
das
jo
mov
decl
nop
shl
adc
mov
fstpt
xor
orb
dec
inc
mov
incl
jmp
sub
mov
outsl
sub
out
xor
inc
fiaddl
lea
dec
fcompl
clc
pushl
shll
xchg
xchg
aam
daa
sti
ljmp
fnsave
or
outsl
jmp
jmp
xchg
or
xlat
add
loope
mov
popw
mov
xchg
and
scas
sub
add
jmp
or
sbb
push
inc
cmc
xchg
xchg
xor
adc
nop
push
imul
mov
out
and
cld
sub
fcomps
jmp
push
inc
cmp
test
mov
clc
cmp
sbb
loope
cmp
aas
or
insl
mov
cmp
jno
push
ja
imul
add
xor
out
push
sub
lea
call
inc
aam
mov
dec
pop
dec
add
mov
mov
adc
xchg
dec
scas
jne
outsl
aam
jecxz
lcall
insl
mov
popf
negb
lcall
fistps
mov
sti
cltd
mov
aas
rorl
lahf
out
or
push
dec
ljmp
mov
test
fildl
and
in
dec
je
jl
sub
cli
mov
mov
jmp
insl
and
push
aad
bound
pop
sbbl
adc
movsl
sub
bound
xchg
mov
scas
stos
ljmp
ljmp
mov
enter
ds
mov
daa
fists
aaa
call
sub
jg
pop
ss
scas
pop
es
cmp
aas
mov
lret
clc
out
test
jmp
adc
ja
insl
pop
mov
sbb
ret
aad
push
xor
xchg
sub
insl
mov
jp
push
inc
cmp
mov
int3
mov
idivl
adc
pop
out
or
je
stos
push
push
lcall
loopne
lahf
enter
mov
mov
dec
lea
mov
popa
pop
xchg
je
adc
insl
stos
push
ljmp
rol
mov
cs
dec
jno
js
test
xor
je
sbb
es
fadds
mov
call
adc
insb
rcl
mov
lcall
adc
sub
adc
inc
pop
es
sub
ret
sbb
push
pop
pushf
xchg
lcall
decl
insl
shrl
mov
push
scas
jns
cmp
test
addr16
in
jmp
sub
aam
inc
ret
dec
adc
ficompl
xor
adc
pushl
mov
pop
adc
lcall
mov
mov
clc
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
out
out
cli
incl
mov
insb
push
sbb
sub
cmp
push
mov
jnp
push
mov
mov
or
jbe
xchg
push
idiv
fsub
cltd
outsb
test
rcrb
sbb
jg
adc
jno
pushf
fiaddl
push
iret
add
incl
enter
lods
dec
sub
sti
and
lahf
add
push
mov
and
incl
nop
push
out
out
xchg
fdiv
cmpsl
imul
xor
sarb
pushl
std
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
and
or
inc
sbb
sbb
fs
sbb
xchg
lcall
int
clc
rclb
loop
mov
fdivr
cmpl
lcall
mov
leave
pushf
xchg
test
sbb
push
inc
es
pop
xor
inc
or
or
test
call
leave
dec
les
mov
notb
cltd
sbb
gs
je
push
cmc
loop
fildll
lcall
mov
cmpsb
fsts
in
lret
and
adc
inc
je
mov
and
incl
call
call
add
decl
sbb
cmp
xchg
cmp
mov
out
push
inc
enter
cli
add
je
lods
add
std
fidivrs
push
dec
icebp
push
sbb
pavgw
aad
insl
mov
clc
cmc
scas
dec
arpl
clc
lds
mov
les
fisubrs
idiv
call
loopne
cs
data16
cmp
push
addr16
pop
outsb
lea
pop
adc
mov
push
adc
aaa
lods
fisubs
ret
adc
lcall
or
inc
rolb
pop
out
and
jg
scas
fcmovbe
cli
mov
mov
adc
jmp
in
lods
mov
daa
mov
pop
addr16
ret
dec
xor
test
jg
sbb
incl
sbb
incb
shlb
jmp
pop
and
inc
jmp
push
movsb
rclb
popa
mov
mov
xchg
adc
push
lods
push
lods
inc
sub
jmp
out
fs
arpl
stos
sub
adc
push
aas
sar
call
push
jle
lds
outsl
dec
pop
and
lret
mov
incl
mov
and
or
pop
mov
cmp
add
pop
push
mov
ljmp
or
and
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
cmp
adc
ljmp
mov
add
ss
adc
sbb
pop
mov
jb
push
rorl
sbb
leave
pusha
stos
xchg
test
clc
ret
gs
adc
sub
out
mov
incl
fistl
xchg
add
jb
mov
push
ja
ljmp
pop
icebp
decl
mov
pop
jle
mov
adc
ljmp
cmc
rclb
stos
incl
push
pop
js
cmpsl
mov
jmp
stos
pop
jae
xor
das
or
jne
sub
push
cmc
and
cmpb
inc
lcall
inc
ja
fcmove
mov
adc
jmp
sub
lret
pmaxsw
xor
incl
test
or
mov
and
ss
mov
push
outsb
jns
xchg
stos
xchg
dec
cmp
pop
test
mov
lea
leave
jl
lcall
cld
leave
push
xchg
mov
int
cmp
ret
dec
mov
fmull
xchg
mov
jge
mov
gs
xor
push
fisttps
out
ss
sub
test
call
push
jmp
jns
xlat
or
cmp
dec
stc
xor
fdivs
popl
mov
xchg
arpl
ljmp
iret
mov
ljmp
fwait
lret
mov
xchg
lea
hlt
outsl
dec
inc
stos
add
mov
mov
dec
das
or
mov
xchg
mov
in
cld
lods
int
dec
pop
notb
mov
sahf
pop
mov
cmp
idiv
stos
imul
ret
jno
mov
lcall
jb
lds
inc
jae
leave
outsb
pushf
sbb
inc
aaa
repnz
call
ds
mov
cmp
test
subb
incb
jg
dec
xchg
cmpsl
fidivl
divb
mov
adc
outsb
idivl
adc
incl
pop
cli
dec
dec
jmp
pop
lea
push
imul
and
mov
es
scas
add
test
outsl
pop
mov
nop
sub
push
add
clc
decl
or
loope
or
cld
outsb
cwtl
xor
decl
hlt
mov
add
mov
stos
jl
add
insb
pop
pop
add
push
mov
dec
mov
std
push
cmp
jae
xchg
or
shrb
shrb
sbb
fisubs
scas
xor
add
adc
cmp
xchg
dec
dec
lock
jmp
ljmp
pop
mov
adc
testl
mov
sbb
filds
jmp
cmc
xor
das
jno
shll
loop
jg
pushl
jae
mov
notb
fucom
incl
out
fimuls
xor
jmp
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lea
pop
insb
cmc
cmp
pop
popf
xor
ret
xchg
lods
or
fs
jmp
mov
inc
mov
iret
jae
mov
aam
push
push
andb
decl
movl
adc
popa
add
incl
in
pop
test
ret
lock
mov
xchg
mov
push
fsubrs
mov
xchg
ja
ret
scas
insl
pop
lea
loop
add
mov
and
ret
arpl
jl
call
adc
lds
and
sub
dec
enter
lcall
sub
insl
jno
dec
mov
es
mov
dec
in
or
pusha
push
imul
or
push
test
sbb
hlt
pop
mov
pop
lods
push
movsb
scas
xchg
out
es
pop
loope
pop
divl
sub
adc
scas
and
add
adc
js
jb
sub
pop
inc
ffreep
or
repnz
and
cvtps2pi
ljmp
push
rcrb
pop
out
pop
push
or
sbb
fisubrl
call
outsl
inc
loop
cli
clc
inc
cmp
sub
pop
sti
mov
cmpsl
xor
jg
or
pushl
je
cld
mov
mov
adcl
icebp
sub
int
sbb
pop
cmp
sbb
jp
xchg
add
in
cltd
jge
inc
shlb
clc
ss
cmp
mov
loopne
lahf
sbb
or
rol
insl
xchg
jl
jns
add
call
jmp
idivb
or
daa
out
push
mov
out
pop
pop
inc
pusha
dec
sub
test
inc
fsubr
loop
je
pop
add
movb
arpl
cmp
call
je
mov
or
cmp
dec
push
sbb
pushl
mov
shrl
xlat
pop
add
imul
xor
sub
js
aam
cmpb
xor
leave
fbld
fdivs
cs
cld
scas
add
push
inc
fdiv
sbb
push
out
mov
jae
jbe
mov
das
ffreep
cmp
aaa
mov
pushl
push
push
pop
push
push
jb
repz
and
lds
fimull
dec
mov
cld
or
or
mov
sub
push
jae
pop
seto
repz
call
jno
push
sub
push
leave
sbb
cmp
ds
loope
jg
add
jg
mov
dec
push
imul
es
cltd
cltd
ljmp
test
cmpsb
es
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
stos
xchg
jo
mov
inc
lods
add
or
incl
cmpsl
clc
and
bt
jmp
cmp
push
int3
push
ds
lock
mov
lds
jnp
dec
push
cmp
jmp
dec
aas
jmp
xchg
testb
bound
or
ljmp
inc
xchg
xchg
data16
decl
test
pop
adc
fdivrs
jns
add
in
inc
lock
jo
jg
inc
pushl
outsb
iret
into
sar
decl
mov
dec
or
call
mov
xor
sub
cmc
fs
call
aam
arpl
push
sub
jns
sub
sub
adc
movsl
test
ja
rclb
jns
xor
mov
push
lahf
clc
pop
cmc
out
pop
outsb
push
jl
loope
xor
fadds
mov
cmp
inc
aaa
ljmp
inc
jmp
mov
add
mov
or
pop
xlat
adc
and
and
mov
gs
xchg
mov
and
cmpl
scas
sar
pushl
test
and
aad
mov
jp
inc
inc
dec
iret
adc
das
lcall
jmp
xchg
outsl
adc
mov
jns
pop
jge
mov
inc
daa
xchg
inc
lea
mov
xor
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
call
add
mov
jl
inc
xchg
and
mov
ss
mov
mov
add
sub
cmp
add
lds
xor
das
sti
and
hlt
test
dec
std
add
cmpl
adc
das
mov
pop
fstl
jo
cli
cmp
xor
lahf
arpl
dec
xor
mov
mov
xchg
cs
push
xor
test
mov
jno
test
call
scas
mov
adc
xchg
arpl
fildl
test
daa
sub
pushl
dec
in
mov
out
popf
push
mov
cs
pop
mov
cld
into
xor
test
outsl
mov
pushl
mov
bnd
jecxz
out
jb
jmp
in
and
jg
data16
jge
ret
mov
fwait
imul
xchg
xor
movsb
rol
shll
shrb
pop
or
cmpsl
mov
mov
stos
push
push
adc
cwtl
es
xchg
adc
adc
pop
mov
cltd
imul
leave
pusha
push
xchg
in
scas
mov
shrb
divb
incl
stc
jo
jne
jbe
data16
lret
repz
mov
in
adc
xor
cmp
adc
addr16
mov
pop
outsl
aad
cmpsb
call
call
push
lret
negb
into
popa
outsl
add
adcb
ljmp
call
xor
xchg
iret
das
xor
mov
lds
imul
adc
mov
sbb
out
jne
incl
loop
mov
xchg
push
or
push
pop
mov
std
adc
call
xchg
cmc
mov
or
fimull
mov
mov
pushl
mov
or
shll
sbb
jb
cmpsb
xor
add
jo
ljmp
push
xchg
loope
sbb
call
lock
jmp
and
lret
add
jmp
mov
sbb
jmp
das
fwait
rep
div
lock
mov
mov
sub
lock
ljmp
xchg
pop
inc
cwtl
push
xor
mov
movsb
xchg
lcall
out
and
pop
mov
push
inc
and
mov
scas
aam
aas
xor
ljmp
xchg
sahf
push
mov
filds
insl
into
inc
and
xchg
mov
aad
cmp
push
xor
decl
sub
push
cltd
stc
fs
push
loop
xor
inc
pushf
shll
incl
add
fmuls
mov
inc
repz
jmp
stc
mov
sti
enter
jl
mov
cmp
xchg
lret
cwtl
sub
out
ss
movb
fninit
pushf
inc
and
decl
jg
jae
xorl
dec
cld
inc
dec
jno
ja
mov
cld
call
push
imulb
push
xor
movb
lcall
and
mov
ficompl
pop
repnz
call
jl
mov
testb
sbb
ficomps
incb
xor
pop
push
incl
mov
adc
mov
in
aam
mull
cmp
xor
xor
es
add
push
ljmp
test
pop
scas
mov
lock
dec
sub
icebp
rcrl
mov
dec
mov
outsb
hlt
or
inc
push
mov
aaa
cli
sub
xor
push
jae
pop
lcall
imul
push
sbb
mov
pop
mov
sub
dec
xlat
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
jo
std
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
in
mov
aaa
sbb
push
jp
aaa
js
mov
incl
in
ret
adc
or
sbb
outsb
dec
aas
out
mov
.byte
.byte
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
test
sub
xorb
je
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
and
or
mov
sub
push
fbld
xchg
mov
or
mov
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
pop
pop
pop
out
mov
jle
sbb
mov
or
cmp
add
sbb
fdivr
vandnps
cmp
ja
mov
mov
hlt
iret
pop
inc
sbb
aas
and
adc
add
push
push
push
xor
pop
fld
ret
xorb
rclb
call
mov
jp
mov
mov
sub
sbb
ret
sub
inc
sub
lcall
fdivrl
sarl
mov
inc
repz
sahf
ss
leave
jmp
mov
jmp
mov
mov
inc
outsl
add
adc
stos
nop
sbb
mov
mov
cmp
ja
je
dec
js
rep
xchg
jbe
xor
lea
xor
std
xor
push
xlat
add
add
addb
fucomi
ret
pop
jmp
roll
dec
adc
mov
cmp
jbe
cmpb
xchg
cmpb
add
out
in
mov
jmp
dec
fcmovnu
inc
cmp
xor
push
shrb
roll
ljmp
jne
in
sbb
scas
or
ja
push
mov
mov
xor
jmp
inc
mov
adc
mov
mov
inc
aam
mov
adc
cmc
shl
pop
pop
movsl
or
into
test
clc
lahf
push
addb
in
xchg
mov
divb
push
push
jno
iret
add
ss
jmp
and
mov
scas
mov
ja
sub
data16
aas
mov
dec
jmp
mov
popa
jb
cmp
sti
jp
add
ret
nop
mov
fldcw
adc
pop
push
sub
fists
fwait
pop
pop
pop
fidivrs
sub
inc
add
add
fldcw
test
pop
fldcw
pop
inc
test
in
inc
xchg
sub
jl
mov
and
xor
out
fucomip
cmp
mov
jbe
mov
add
pusha
je
mov
insb
pop
clc
in
and
jnp
or
movl
cli
in
sub
and
loope
jg
mov
sbb
call
mov
or
lea
push
and
hlt
add
add
decb
xor
addb
addb
push
mov
xor
into
pop
fwait
loope
push
es
push
addl
mov
cs
cwtl
imull
dec
pusha
push
in
mov
jo
fisttpl
sbb
jecxz
push
push
imul
adc
cs
adc
sub
in
pshufw
je
add
pushw
andb
xlat
mov
push
or
fucomp
daa
das
inc
add
push
sarb
adcl
cli
cmpb
mov
push
jge
push
push
push
lea
push
sbb
lock
jp
cmp
mov
cmpl
out
jne
dec
add
pushl
outsl
out
in
adc
sub
jbe
xchg
push
aaa
ret
iret
xor
mov
loop
rorl
ds
inc
sbb
mov
jae
fs
mov
cmp
sub
out
push
xchg
sub
sar
mov
out
dec
jne
jmp
lea
push
fmull
xor
dec
popa
push
hlt
mov
call
pop
push
push
hlt
jmp
cmc
jne
movsb
sbbl
mov
pop
mov
mov
cs
dec
push
stos
xor
rclb
imul
inc
fdivl
leave
mov
lea
adc
mov
sahf
jbe
and
push
push
insl
ret
ret
push
lea
pop
call
das
movb
insb
lcall
pusha
cmovns
jmp
loopne
jmp
shll
fucomi
pop
cmp
sbb
ret
xlat
and
push
rcl
and
push
sbb
sbb
jmp
or
and
fdivs
negb
pop
imul
and
cwtl
adc
sub
sbb
fcmovnb
lret
adc
mov
adc
push
fadds
mov
aaa
push
loopne
scas
xchg
mov
mov
xor
mov
inc
add
mov
adc
enter
rorl
add
mov
jbe
sbb
lock
jmp
mov
mov
sbb
lret
mov
mov
inc
inc
and
xor
arpl
push
xchg
inc
inc
dec
pusha
add
push
rcr
ljmp
pop
cmp
jne
dec
je
mov
add
aaa
cmpl
mov
lock
or
loop
push
adc
add
and
je
imul
dec
je
mov
cmp
jne
or
jg
push
adc
add
adc
cmp
jne
shr
or
adc
add
push
mov
shr
repz
loope
mov
inc
dec
dec
pop
repz
out
add
or
ret
and
imul
dec
dec
dec
and
int
dec
sbb
fistpl
std
xchg
adc
xchg
mov
mov
shl
or
jae
or
mov
cmova
jl
pop
daa
push
mov
outsb
mov
fstpt
push
inc
cmp
je
mov
or
je
or
je
fstp
pop
imul
push
xor
ficomps
dec
inc
test
jmp
or
ret
or
cmp
ja
lea
push
add
shll
dec
je
sarb
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
fidivrl
je
andb
and
sar
adc
or
push
filds
aad
cwtl
pop
xor
mov
rclb
mov
inc
imul
mov
add
sbb
fidivrs
pop
mov
imul
push
jmp
and
cmp
xor
js
push
sub
cmp
jg
add
rcll
shrl
jnp
add
push
mov
ficoml
and
dec
or
nop
inc
mov
stos
pop
mov
sbb
mov
mov
pop
and
and
ret
pop
test
jg
movsl
sub
push
idiv
add
lock
dec
and
or
jmp
add
sub
cmp
pusha
ss
lahf
mov
pushl
and
cmp
ss
das
lcall
sbb
repz
mov
add
in
repz
sub
xchg
lods
loopne
fwait
cli
jge
dec
je
adc
lea
decl
pop
lea
fldt
fsubr
add
addr16
pcmpeqb
cltd
xor
std
sbb
mov
inc
das
ss
adc
xchg
mov
inc
idivl
push
fstp
fldt
pusha
and
adc
out
mov
add
adc
mov
jl
leave
inc
cli
or
or
ret
in
lahf
and
adc
mov
xchg
vpcomgtud
xchg
and
inc
mov
pop
adc
es
test
std
xor
out
sub
pop
jecxz
add
leave
sbb
pop
lds
mov
jbe
imul
cmp
mov
mov
mov
lods
lods
inc
cmpb
xlat
fadds
rep
lods
outsb
xor
xchg
push
or
push
push
int3
into
sbb
sar
cmp
decl
mov
push
pop
test
enter
movsl
outsl
movsl
push
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
call
mov
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
pushl
lcall
clc
repz
mov
subb
and
and
clc
lcall
outsb
bound
xor
jmp
fcmovnbe
fidivrs
shll
cmp
jne
push
pop
cmp
pop
add
insb
repz
push
add
addr16
mov
test
cld
push
or
push
add
fcompl
repz
scas
hlt
push
push
mov
movl
xor
hlt
push
data16
add
cwtl
aam
lock
inc
sub
cmpsb
out
cltd
mov
mov
jmp
push
clc
pop
fwait
or
icebp
aas
or
mov
dec
incl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
aaa
scas
cld
imul
jne
fninit
fwait
add
call
mov
push
in
xlat
mov
xor
mov
inc
rep
push
or
jmp
jg
push
mov
or
dec
cld
jne
dec
mov
xor
and
jne
sub
mov
fdivs
inc
fsubl
xchg
adc
lock
inc
sub
pop
pop
rcrb
fs
aaa
inc
sti
jle
mov
add
outsl
test
or
pop
xor
jl
movups
fs
shll
ret
xor
pop
icebp
pop
gs
int3
outsb
loopne
mov
or
push
cld
std
mov
ret
jl
mov
xor
push
shr
dec
rep
testb
mov
sub
movsb
add
pop
fcoml
cmp
je
pop
mov
add
incb
sbb
push
push
mov
mov
push
sbb
fildl
jecxz
lods
mov
mov
mov
sub
inc
cmp
mov
cmp
jb
jb
add
jmp
rolb
popf
inc
add
add
adc
push
lahf
fcomip
in
icebp
push
mov
mov
pop
xchg
cmp
mov
sub
sbb
add
lock
push
ret
stc
push
push
mov
push
add
pop
call
push
fildll
dec
setne
scas
jbe
cmp
lods
push
sub
pop
mov
das
test
imul
mov
cmp
fdivl
add
jo
fmull
or
jne
js
inc
rorl
push
inc
inc
fcompl
vmovdqa
mov
and
add
sub
mov
sarb
idiv
push
mov
mov
cmp
je
mov
leave
jne
mov
add
es
jmp
lret
adc
les
push
add
repnz
je
pop
in
negb
loop
inc
pop
add
sub
mov
pop
cs
xchg
add
ret
dec
sub
jmp
pop
mov
int3
mov
mov
xor
das
mov
rorb
out
sbb
lds
push
inc
rorb
xor
sub
data16
sbb
push
stos
pop
lcall
mov
push
ds
sbb
js
xchg
adc
je
movb
dec
push
cmp
sbb
add
dec
jne
icebp
dec
sar
jnp
jmp
push
jmp
add
sbb
jecxz
mov
cmp
fistps
xor
sbb
rcrb
sbb
jmp
lahf
fdivs
in
push
pop
add
mov
jl
ljmp
out
push
hlt
xor
adc
mov
mov
movl
test
cmp
or
inc
cmp
sub
mov
or
dec
mov
adcl
movsl
sbb
xor
call
mov
dec
je
in
enter
mov
pop
scas
cmpb
jecxz
addb
cli
in
push
call
jae
aaa
mov
push
pusha
push
mov
dec
jae
cmp
cmp
pop
iret
mov
repnz
add
add
rcrl
sub
or
jae
addr16
pop
idivb
fsts
and
sbb
jmp
sub
movsbl
inc
inc
jmp
add
sbb
sbb
jecxz
shlb
xor
adc
loop
fdivrl
rorb
adc
les
pop
test
inc
add
jne
scas
jl
cmp
inc
mov
dec
adc
outsb
pop
ja
jg
daa
mov
je
jae
pop
adc
sahf
cld
mov
cmp
cli
out
push
je
sbb
sbb
jb
jbe
test
cwtl
mov
and
push
pop
fwait
mov
sti
cmp
stos
pop
cmc
enter
enter
adc
adc
test
or
push
jns
sub
orl
out
ja
loopne
push
sbb
push
sub
push
add
sbb
add
decl
jbe
outsl
or
inc
add
xchg
sbb
mov
pusha
jmp
xlat
xor
mov
nop
cmovno
xor
pop
mov
xchg
je
dec
jne
sahf
or
push
add
mov
fsubrp
pusha
adc
push
or
hlt
pop
adc
add
lds
pusha
mov
mov
sub
repnz
addb
filds
fdivrs
dec
fdivs
xchg
mov
mov
or
mov
jg
pushw
lock
mov
rolb
inc
jno
adc
inc
jmp
sbb
sbbl
push
adc
lahf
adc
adc
insl
or
inc
push
subps
pop
adc
dec
aam
adc
sbb
jmp
paddw
mov
popf
pop
cmpsb
movl
ret
pushf
ret
push
subb
xor
inc
outsl
or
mov
shr
aas
pop
push
push
push
push
push
mov
add
jns
and
loopne
add
mov
inc
sahf
sbb
lds
pusha
add
testl
jle
fdivs
pop
mov
mov
cmc
lea
jae
mov
push
cmp
push
pop
lods
pop
insl
mov
shlb
test
ret
mov
addl
add
stos
fidivrl
pop
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
ja
adc
xchg
cs
adc
jmp
sub
jmp
das
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
jg
lock
sbb
into
jmp
mov
mov
jmp
mov
jmp
or
lret
call
push
or
pop
xor
xor
or
leave
cmp
je
push
dec
mov
mov
jp
xchg
inc
pop
rorb
push
push
inc
sbb
mov
mov
loopne
mov
or
push
inc
sti
sub
mov
jo
cmpsb
push
sub
outsb
pusha
push
adc
stc
xor
adcl
scas
ret
ret
mov
enter
push
ret
in
aas
mov
or
sbb
cmp
cmpsb
add
or
stc
pushl
add
adc
es
test
mov
dec
dec
push
add
mov
mov
call
fdivrs
idivl
dec
mov
inc
fiadds
call
and
and
loope
jecxz
adc
js
jl
lret
or
pop
ds
mov
insb
mov
inc
mov
repz
add
add
das
fildl
cmp
jg
jns
insl
je
add
adc
and
fldl
fwait
mov
outsb
xchg
stos
mov
call
ss
bnd
cmp
or
adc
push
add
add
fadds
jbe
adc
dec
jne
pop
pop
pop
gs
add
dec
jmp
pop
pusha
pop
out
add
mov
xchg
or
xor
dec
sbb
push
add
push
adc
mov
xor
rorl
lock
mov
cmpsb
mov
js
xchg
nop
adc
mov
mov
push
test
sbb
sub
xchg
rolb
outsl
das
rcrb
adc
ja
add
mov
mov
jbe
movsl
pop
leave
pop
push
cmpsb
dec
add
das
rcll
cmp
mov
push
les
mov
orb
loopne
push
push
popa
push
jg
add
inc
inc
sub
or
pop
ret
mov
ss
aaa
mov
cmp
push
repnz
or
shlb
mov
sub
or
push
cmpl
adc
shlb
clc
mov
call
out
dec
outsb
icebp
jge
and
xchg
xor
daa
adc
xor
add
mov
mov
imul
jbe
fwait
inc
adc
or
shl
lock
or
cmp
je
es
insl
jo
jbe
pusha
movsl
or
data16
sbb
add
pop
cmp
lods
pop
or
adc
or
pusha
rclb
push
popf
jb
sub
aas
mov
jmp
mov
aam
pop
mov
dec
clc
dec
jl
lock
push
lea
push
int
ret
or
push
les
popa
xchg
inc
jle
sbb
add
or
mov
fidivl
dec
and
jge
je
inc
jg
cmp
ss
mov
pop
jne
jle
push
dec
sbb
pop
pop
jmp
jbe
xchg
adc
sub
xchg
xchg
jle
mov
jle
push
add
loopne
push
or
push
sti
pop
movw
loopne
mov
push
cld
sub
insl
faddp
sbb
ja,pn
mov
mov
push
xor
or
stc
mov
loopne
ds
test
fsubs
mov
push
xchg
push
mov
dec
bound
loopne
mov
jns
jo
clc
cmp
aaa
addb
les
xchg
mov
xchg
jo
or
mov
pop
lea
cmp
push
lock
sbb
mov
jle
enter
test
rcrb
sub
xor
shrl
dec
jnp
pop
pop
sbb
add
cmp
mov
call
loop
loope
fistpl
leave
mov
je
out
adc
nop
jle
add
pop
add
call
pop
sub
sbb
shr
pop
pop
sub
and
in
out
stc
cmp
je
push
addr16
in
add
stc
in
gs
add
or
xor
hlt
xchg
out
lret
jle
lock
pop
rcrl
rcrl
mov
add
and
pop
mov
fisubs
fnstcw
or
inc
jo
mov
xchg
aas
lock
lock
pop
add
aas
xchg
test
sbb
mov
ljmp
mov
loop
pop
and
mov
adc
mov
sahf
ret
das
sub
pop
daa
out
popa
cmpl
je
cmp
push
mov
cld
sub
jo
out
push
out
scas
rorl
inc
mov
cmp
mov
mov
cli
lds
push
sbb
pop
push
mov
dec
clc
mov
in
out
loope
lret
mov
push
fwait
mov
jae
cmpsb
xor
mov
jl
dec
in
cmp
outsb
xchg
dec
sbb
or
push
cmp
fs
dec
jne
or
sbb
mov
cld
jge
aam
cmp
pushl
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
adc
mov
mov
or
and
loope
mov
pop
lea
jmp
xchg
shll
rolb
push
sub
rolb
rorb
and
xor
cmp
cmp
adc
faddl
or
daa
push
and
jmp
aam
sub
or
cmpsl
notl
das
lods
pop
add
add
push
jmp
mov
je
push
jmp
mov
adc
cltd
lret
xchg
pop
adc
mov
shlb
cmp
and
movd
clc
filds
es
jl
cmp
jge
sub
jbe
scas
xor
mov
jg
push
fnsave
adc
inc
aad
call
jmp
and
mov
cmp
lret
jl
sub
mov
clc
fisttpl
inc
sub
add
lea
inc
dec
lret
shld
cmp
mov
pop
or
lahf
cltd
mov
push
mov
jle
ds
dec
jge
cmp
adc
imul
mov
fsubs
push
mov
lea
lock
sub
sbb
add
mov
adc
add
pop
inc
pushf
xor
mov
push
insb
dec
js
mov
add
jb
adc
adc
call
lret
fcoml
push
faddl
mov
cmpsl
and
push
int3
or
aas
inc
dec
out
and
sbb
push
aam
or
loopne
xor
sbb
jecxz
mov
jo
lods
jmp
out
aad
divb
arpl
cli
pop
cmp
fisubl
pop
jg
rcrl
enter
ljmp
in
jne
clc
sbb
push
lretw
hlt
sahf
shrb
pop
mov
jo
or
fisubl
dec
xchg
ret
std
add
clc
push
std
add
sbb
pop
mov
push
addr16
push
push
das
sbb
push
fldenv
sub
dec
dec
lea
cltd
aad
out
push
cmp
call
mov
scas
mov
test
in
jno
nop
pop
je
cmp
jmp
pop
add
pop
call
and
rorb
add
xchg
adc
and
cmp
push
lock
or
dec
push
das
int3
call
pushl
mov
and
or
scas
add
and
add
add
pop
xor
cmp
cmpl
push
add
nop
and
mov
and
pop
sbb
push
or
sbb
je
shrb
or
adc
fwait
ret
mov
jge
ds
pusha
clc
xchg
lock
jge
pop
dec
cmp
nop
pop
out
dec
negl
cmp
push
lods
add
pop
out
loop
add
cmp
je
daa
test
cli
cltd
cmp
les
stos
test
jmp
pop
adc
enter
sub
xor
mov
pop
movsb
cli
ja
lea
mov
mov
mov
adc
aas
cwtl
cmp
arpl
mov
scas
push
add
or
lcall
cmp
je
cmp
je
cmp
je
cmp
mov
je
mov
pop
adc
push
or
mov
in
jp
clc
jmp
adc
or
push
pop
sbbb
aad
push
or
scas
pusha
rcrl
cs
adc
cmp
pop
jmp
push
push
jbe
xor
lock
in
push
jmp
enter
cwtl
xchg
mov
or
call
loope
adc
cmp
loopne
repz
add
and
iret
push
pop
jbe
test
push
mov
inc
pop
test
int3
jg
dec
out
mov
pop
int3
fdivrs
daa
ja
cmp
jmp
and
xor
push
dec
insb
sub
jmp
in
pop
dec
inc
test
cmp
lods
subb
test
test
pop
loope
xor
and
icebp
jmp
push
daa
xchg
xchg
sub
dec
cmpl
test
adc
dec
popa
pop
add
in
cs
clc
inc
add
cld
les
push
push
add
push
mov
mov
into
or
pop
push
mov
cmp
xor
outsb
outsb
or
je
or
dec
or
jo
mov
pusha
pusha
adcb
mov
push
mov
adc
fs
add
ret
xchg
jmp
and
in
sbb
jl
adc
scas
mov
call
lock
mov
mov
jmp
aas
cs
fidivl
xchg
ret
xor
mov
pop
push
mov
dec
adc
and
xchg
roll
dec
jne
lods
ss
rclb
sbb
fistpll
dec
pop
or
insb
and
mov
dec
movsl
jb
in
inc
push
popa
dec
enter
xchg
pushf
jg
push
dec
mov
jne
lds
jl
inc
fwait
cmp
push
imul
adc
test
les
cmp
cmp
or
ja
loopne
mov
sti
add
add
inc
ljmp
icebp
loop
mov
jo
add
je
cmp
aaa
leave
cltd
or
daa
cmp
xor
adc
jecxz
lock
pop
movsb
call
inc
sub
inc
jo
lods
call
lods
pop
pop
add
and
push
add
inc
xor
push
inc
mov
pop
aaa
jo
test
mov
out
enter
mov
ds
sbb
clc
mov
adc
popf
cmc
lea
and
shrl
and
add
dec
adc
pop
pop
ret
xorl
mov
or
outsl
test
push
or
fbstp
aam
or
sub
jl
fstp
scas
pop
lret
add
jne
sbb
or
std
inc
jmp
cmp
jne
mov
inc
and
sub
test
cmp
je
daa
xor
pop
loopne
cs
imul
add
ljmp
inc
movsl
mov
sbb
mov
and
loopne
out
xor
sbb
aaa
jmp
pop
jo
mov
mov
jmp
jl
insb
sub
inc
sub
jbe
jmp
jg
mov
cltd
aas
cld
adc
movsb
shrb
push
or
add
adc
rcrb
xor
mov
pop
lods
inc
xor
ljmp
movsl
mov
mov
inc
xchg
neg
push
cmp
add
sub
testl
shlb
das
jg
jp
or
pop
inc
sub
push
orb
adc
jmp
sub
pop
or
add
jmp
setb
jmp
setl
cmp
je
dec
add
mov
or
mov
mov
mov
in
push
mov
test
jmp
jmp
scas
pop
pop
xchg
inc
jo
xchg
loopne
lods
xor
pop
add
lods
push
loope
add
sbb
pop
mov
mov
lods
rolb
xor
aaa
jmp
and
push
push
into
inc
add
inc
pop
push
test
les
push
call
test
adc
notb
mov
dec
imull
dec
in
in
cmp
pushl
fidivl
or
xor
inc
cld
loopne
jge
jge
and
in
add
fildl
imul
sub
add
sbb
enter
mov
stc
mov
pop
decl
stos
xor
fcoml
lret
testb
jge
or
sbb
jecxz
test
insb
inc
push
inc
je
and
mov
mov
fldl
sti
in
add
mov
or
js
lock
lock
test
sarl
cmpl
jle
cwtl
or
shrl
xchg
dec
jo
and
add
or
pusha
mov
fdivr
push
dec
jne
enter
sub
cmp
add
jne
pop
sub
sbb
clc
jae
lds
pop
jo
xor
pusha
push
out
adc
push
loopne
pop
outsl
push
loop
cld
xlat
dec
mov
sub
je
mull
sarl
into
pop
cmp
add
xor
ja
xlat
cmp
jle
repnz
lds
jle
inc
orb
mov
or
mov
adc
mov
push
mov
hlt
jo
cmp
mov
inc
xor
jge
add
push
xor
sbb
xchg
dec
push
sub
je
xchg
test
xchg
cmp
roll
test
rcll
sub
pusha
xor
lock
jne
mov
push
mov
adc
push
aam
pop
and
in
into
mov
stc
adc
ret
mov
push
push
mov
incl
movsl
pop
pop
mov
in
sbb
shrb
jge
add
ss
mov
cwtl
inc
sbb
pop
inc
xor
es
fs
dec
jne
out
pop
clc
enter
repz
sub
xor
ret
add
or
bound
jno
and
outsl
mov
add
sbb
add
cli
inc
aam
sbb
aas
add
inc
shl
ret
jmp
dec
mov
test
out
pop
nop
mov
fmuls
js
xor
cmp
jnp
mov
cwtl
inc
inc
push
inc
push
push
and
pop
test
je
call
rcrb
imull
sub
in
sbb
out
fiaddl
js
pop
jne
add
fdivrs
mov
xor
xlat
dec
push
and
mov
ljmp
rcr
mov
mov
dec
ret
imul
mov
add
inc
cmp
dec
flds
add
push
gs
imul
out
and
je
std
fs
pusha
xor
rorb
cmp
fwait
jg
movb
ret
dec
push
push
nop
scas
insl
ret
mov
xchg
lahf
test
dec
jmp
pop
lods
lret
imul
gs
xor
cs
fucomip
fs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
sub
lret
loopne
sbb
mov
movb
int3
push
data16
pop
sbb
xor
fs
xchg
and
in
icebp
or
pop
pop
or
push
mov
sub
out
and
int
pusha
pusha
cmpsl
fstpt
iret
les
add
test
int
push
repnz
pusha
sbb
mov
pushf
and
push
lods
repz
movzwl
pop
mov
mov
mov
js
jecxz
jge
data16
fs
imul
negb
add
cmp
stos
pop
cmp
jne
adc
sahf
push
push
inc
and
cmp
jecxz
sub
sbb
add
lods
mov
fs
fbstp
ljmp
mov
xchg
adc
add
mov
outsl
data16
popa
jb
inc
push
mov
or
jae
aaa
mov
inc
cltd
dec
aam
pop
cmp
ja
hlt
mov
xchg
lea
cmp
jo
test
hlt
xchg
fldt
and
fucomip
sbb
mov
aaa
sbb
out
jp
mov
sub
mov
fmuls
in
add
fsts
ret
dec
adc
outsl
cli
mov
mov
lea
scas
cmp
shlb
inc
dec
add
ret
ds
or
xor
mov
movsl
loopne
mov
sbb
test
mov
je
cmovo
pusha
stos
cmp
and
or
push
das
pusha
sti
repz
add
mov
pop
mov
test
mov
cmp
jne
addl
inc
mov
pop
mov
ret
mov
call
and
sahf
sub
bound
push
lock
xchg
lock
mov
and
insl
pop
shlb
sahf
je
xchg
popa
sahf
mov
mov
or
push
mov
outsb
pop
daa
pop
sbb
mov
pop
pop
ret
sbb
adc
sub
inc
inc
test
lods
pop
inc
pushl
lock
mov
or
xchg
jp
pop
das
sub
call
mov
add
or
loope
and
fcomps
js
inc
xor
mov
movsb
ret
test
jnp
insb
jns
and
scas
sbbb
cld
call
mov
sub
cmp
outsl
mov
arpl
pop
pushf
je
push
fidivl
leave
inc
xchg
jmp
jg
sub
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
dec
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
aaa
in
outsl
out
adc
sbb
and
lret
add
jmp
pusha
add
dec
outsl
out
imul
or
sub
sti
cmp
jb
or
dec
movb
and
ror
mov
jbe
pop
mov
inc
add
jb
lea
ret
mov
mov
mov
hlt
add
lock
push
and
rcl
sbb
push
cmc
fdiv
adc
clc
pop
add
inc
test
je
or
jae
test
aas
and
je
cmp
adc
mov
and
cmp
jne
cmp
cwtl
and
mov
rorl
data16
jg
dec
cld
mov
mov
inc
lcall
cmp
xor
ficoml
or
sub
and
jmp
adc
inc
mov
ret
xor
mov
inc
adc
in
xorb
mov
daa
or
jb
inc
mov
int
out
daa
out
mov
adc
sbb
jns
rclb
mov
jge
push
je
adc
lea
push
fdivrs
add
mov
or
and
jnp
add
pop
pop
sub
or
test
lret
push
jmp
adc
repz
fs
std
pop
nop
dec
dec
enter
cmp
mov
hlt
enter
test
dec
pop
mov
inc
ds
cmp
cmp
enter
cmp
and
push
cmp
cmp
cmp
pop
leave
cmp
pop
gs
mov
push
rcll
jmp
gs
add
xor
push
cli
arpl
ljmp
sbb
add
pop
sub
jle
in
rcr
clc
aaa
mov
shlb
pop
mov
lock
shlb
adc
lea
push
push
lock
jp
ljmp
and
neg
cmp
pop
rclb
andb
bound
push
xchg
out
sub
add
movsb
and
dec
fldcw
call
lcall
jne
outsb
scas
clc
subl
test
cld
movb
mov
and
and
inc
je
xchg
loopne
cwtl
adc
dec
mov
cmp
adc
and
and
in
or
xchg
mov
pop
loop
inc
mov
mov
pop
lods
lods
sub
clc
add
les
test
jmp
dec
mov
cld
mov
cwtl
mov
xor
jmp
insb
xlat
cmp
cmp
rorb
push
push
pop
fisttpll
push
or
and
inc
dec
adc
lock
cmpsl
xor
and
or
jmp
dec
ja
fstl
push
push
aaa
sbb
mov
jnp
and
mov
clc
xchg
mov
ret
adcb
ret
mov
xor
lret
sub
into
mov
mov
lods
sub
out
fldlg2
cmp
mov
out
mov
xor
jg
xor
fsubrl
cmp
cmp
loopne
sub
sbb
or
ss
pop
pusha
mov
pop
mov
in
insb
push
pop
es
inc
mov
sti
push
add
add
push
or
lods
xchg
or
and
mov
add
xor
add
fbstp
outsl
fs
gs
out
shr
push
gs
inc
adc
outsb
add
and
insb
adc
dec
jg
inc
push
outsl
arpl
inc
gs
jne
je
fcmovnu
call
outsl
je
imul
mov
gs
outsl
inc
int3
fsubp
fisubl
lods
or
or
or
neg
jle
inc
xor
xor
outsl
insl
bound
outsl
js
and
idiv
imul
ja
nop
xchg
cmp
jo
sti
andps
outsb
dec
inc
xor
je
stc
xor
cmp
push
jns
jb
push
dec
dec
xchg
xor
cmp
sbb
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
mov
add
xor
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
pushf
pushf
pushf
pushf
ror
enter
pushf
pushf
sarb
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
nop
mov
pushf
cmpb
pushf
pushf
pushf
jo
push
pushf
pusha
movsb
xor
dec
les
mov
daa
mov
lods
test
daa
daa
daa
movsb
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
insb
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
xchg
daa
daa
daa
add
cld
xor
hlt
lock
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
leave
leave
enter
xor
leave
leave
leave
leave
and
xor
leave
leave
leave
cmp
sbb
leave
leave
leave
leave
adc
or
fs
leave
add
cld
ss
in
in
hlt
lock
call
in
leave
in
in
aam
int3
mov
leave
sarb
mov
test
leave
leave
leave
movsb
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
insb
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
sbb
pop
enter
adc
mov
mov
xor
pushf
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
leave
leave
leave
sub
sbb
leave
leave
leave
sbb
or
leave
leave
leave
or
cld
xor
in
fs
hlt
lock
in
in
call
in
in
aam
movzwl
aam
iret
clc
shl
or
repnz
xchg
clc
mov
inc
imulb
je
fxch
and
or
mov
popf
nop
xor
mov
loope
sar
scas
push
dec
movswl
add
sahf
add
inc
and
xchg
pop
jae
mov
adc
and
xor
jg
dec
cmp
push
arpl
test
sahf
or
add
pop
add
pop
xchg
mov
rorl
adc
repz
adc
sbb
and
ss
jnp
push
push
push
push
fs
inc
sbb
sbb
cmpsl
mov
stos
and
daa
stc
mov
push
addr16
push
or
pop
push
ds
orl
push
push
pop
pop
rcrb
push
sbb
loopne
aam
push
lds
dec
shll
or
inc
cmp
or
inc
pop
or
xchg
repz
add
gs
jne
sti
das
push
dec
inc
inc
dec
add
outsl
loop
jle
sti
and
dec
push
inc
push
dec
pop
and
mov
dec
push
push
pop
sub
push
inc
dec
pop
dec
and
inc
push
das
push
loope
xchg
or
js
jne
sbb
dec
jbe
sbb
and
inc
lret
nop
jl
lock
movsb
xor
psllw
repz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
xlat
in
in
fcomp
fcmovu
in
in
in
in
rol
ret
in
in
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movsl
cmpsb
cmpsl
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
out
nop
xchg
popa
jns
leave
add
ds
mov
push
inc
imul
hlt
lcall
push
or
popa
jb
push
repz
mov
lock
bound
lock
lahf
add
je
pop
out
pop
ss
adc
inc
js
xorl
imul
adc
in
repnz
movsb
jns
movb
mov
mov
mov
mov
call
jp
inc
dec
jne
dec
dec
gs
outsl
jb
lea
mov
outsb
jnp
outsl
jle
push
or
outsb
mov
push
mov
or
or
push
mov
mov
shrb
sbb
adc
and
jl
cmp
sbb
stos
in
mov
and
decl
inc
inc
imul
outsl
nop
rcl
mov
push
popa
outsb
sub
add
jge
cmp
outsb
jbe
jb
insb
outsl
ja
mov
and
test
dec
mov
adcl
push
push
leave
xchg
fdivrl
jge
jbe
inc
sti
cmp
imul
xor
or
inc
or
insl
jle
in
insl
mov
mov
rcl
scas
pop
shll
andnps
cmp
addr16
cmp
jg
popa
cwtl
add
mov
mov
dec
cwtl
mov
or
popa
pop
jo
or
inc
popa
jae
lea
pop
sbbl
call
shrb
jb
xchg
push
adcb
addb
push
adc
mov
popa
sbb
mov
cmpsb
push
push
jb
insb
cmp
out
xor
sbbl
adc
inc
fisubl
add
or
je
insb
inc
or
ds
pop
xchg
rol
sub
cmp
mov
add
xchg
mov
popa
faddl
fcmovb
mov
js
sub
push
bound
cmpb
push
pusha
adc
jo
nop
pop
push
js
orl
and
inc
push
stos
push
or
ds
in
inc
mov
data16
mov
adc
cs
xor
pop
dec
invd
pop
lds
mov
out
inc
jo
add
cmp
add
push
push
mov
fisttps
mov
push
adc
jb
and
loop
popa
pinsrw
xor
push
int3
add
in
inc
shrd
loopne
int
lock
aam
orl
jno
jnp
pushf
out
sahf
test
popa
imul
push
mov
jnp
sbb
push
loopne
sbb
lods
or
inc
mov
in
xor
aas
xor
push
adc
outsl
js
fdivrl
dec
jne
push
mov
and
push
push
fcomps
fsubs
ret
arpl
cmp
aas
test
ret
adc
in
add
div
mov
adc
push
lret
mov
mov
std
in
leave
mov
or
in
ret
push
cmp
repnz
aas
mov
dec
les
lods
adc
lock
xor
ret
stos
mov
movsl
pop
mov
loope
jg
unpckhps
adc
dec
add
or
cltd
mov
pop
pop
or
jg
phaddw
mov
mov
sub
or
orl
test
adc
mov
add
mov
inc
inc
dec
lock
ja
xor
push
inc
pop
add
sbb
or
mov
cmp
jbe
cmp
repz
je
movzbl
push
push
lcall
insb
shr
add
mov
repz
jne
mov
out
add
inc
inc
ds
mov
sub
or
xchg
push
scas
out
and
sti
je
loopne
out
sub
pop
pop
jne
adc
push
cld
lock
jbe
mov
jg
ss
ret
pop
add
xchg
inc
testb
fcomp
push
cmp
xchg
sub
aam
in
push
adc
xchg
ret
jle
sbbb
jo,pn
sub
mov
add
add
int3
ss
jnp
push
adc
or
mov
cli
jg
add
ret
dec
mov
repz
addb
std
jl
jmp
jbe
adc
test
in
mov
sub
clc
push
sub
inc
mov
enter
push
cmp
mov
outsb
insl
sub
xchg
mov
pop
test
mov
and
pusha
filds
repz
fistps
je
je
ljmp
xor
sub
cmp
push
jmp
sub
cld
or
inc
jmp
daa
and
aaa
push
pop
rcll
add
adc
jae
jne
pop
mov
test
inc
in
aas
aaa
mov
stc
loope
jne
add
sbb
iret
nop
in
das
xor
lcall
adc
outsb
add
jmp
add
pop
or
sbb
push
lock
cmpb
xor
and
push
cmp
outsl
clc
or
int3
out
jge
pop
lock
push
mov
cmpb
in
push
mov
xchg
cmp
scas
test
aaa
mov
sbb
sub
std
arpl
mov
adc
jae
cmp
jl
inc
mov
stos
mov
add
push
pop
or
jae
inc
dec
rorl
or
jne
pop
decl
jp
jns
idivl
mov
inc
dec
xchg
ret
dec
aam
sarb
div
dec
ds
ljmp
pop
mov
add
pop
pop
sub
sub
jbe
das
clc
add
sub
jmp
add
dec
jne
push
mov
loopne
popf
std
sub
xor
push
outsb
cltd
mov
cmp
iret
xor
dec
ljmp
xor
jo
pop
mov
negl
andl
mov
sub
data16
add
push
or
push
xchg
fs
xchg
pop
sub
mov
sbb
dec
ja
mov
fs
push
or
fildll
fistps
ret
add
add
sub
in
fcmovnu
add
rorl
fdivr
mov
cmpb
add
push
sub
rcrl
loope
gs
ret
ffree
fstl
ffree
pop
aad
add
stos
jns
add
frstor
push
cmp
orl
loop
and
pop
xor
pop
outsl
cmp
add
push
gs
mov
lret
push
dec
movhlps
and
push
pop
adc
inc
dec
sbb
cmpb
or
mov
or
jo
fnstenv
outsb
pop
cmpsl
fidivl
out
insl
imul
sub
push
shlb
movzbl
pop
aas
inc
js
pop
xor
inc
mov
test
pop
push
and
sbb
pop
lock
pushf
cmpl
fs
dec
mov
lds
mov
push
inc
sub
nop
pusha
testl
loope
pop
add
das
add
movb
xor
xor
and
push
mov
xor
cmp
add
jecxz
push
sbb
inc
js
outsl
push
std
dec
pop
or
xchg
mov
mov
adc
insl
lock
lahf
ljmp
ss
push
push
divl
cmp
pop
addr16
and
nop
add
scas
mov
dec
ret
xchg
aam
cmp
sbb
sub
sub
push
dec
sub
loop
testl
das
les
cmp
adc
cmp
cs
repnz
or
mov
sbb
add
mov
and
add
push
inc
ja
jno
add
xchg
sbb
sbb
insb
out
add
push
mov
mov
dec
push
ds
rolb
fstps
movb
movb
mov
adc
cwtl
scas
push
cmp
repnz
mov
push
pop
pop
jae
rol
imull
popa
lods
in
pop
adc
pop
hlt
mov
bound
sahf
push
add
mov
jns
lret
shrb
add
push
pop
adc
aas
mov
cmp
or
lock
pop
and
jne
negl
enter
repnz
push
hlt
and
dec
inc
cld
rcr
pop
fmuls
mov
lods
pop
jnp
sub
iret
nop
add
push
add
xorb
push
push
inc
jmp
lea
inc
cmpsl
jl
shlb
insl
fwait
adc
and
loopne
inc
sub
mov
adc
add
mov
cmp
fbld
lea
mov
test
test
push
rolb
adc
js,pt
ds
adc
push
pop
addb
cmc
subb
adc
push
fnstsw
fdecstp
and
or
pop
pusha
and
or
test
cs
bound
mov
cmp
je
mov
dec
add
scas
outsl
addr16
stos
mov
scas
sub
loopne
sahf
je
add
push
ret
xlat
popf
jne
dec
ljmp
mulb
xor
mov
loopne
in
xchg
mov
andps
sub
add
aas
inc
jle
lret
dec
imul
cmovle
inc
mov
ss
sahf
xchg
clc
adc
mov
pop
cmp
mov
sarl
into
mov
pop
jg
addr16
int3
jne
test
outsl
lock
in
sbb
cld
jle
hlt
jne,pn
xchg
lcall
adc
addr16
and
js
ss
and
out
xor
cwtl
mov
xorb
pop
jbe
mov
jne
rorl
add
call
push
or
ljmp
push
hlt
clc
cld
push
jne
adc
jmp
dec
cld
imull
out
inc
call
adc
cmp
outsb
and
cmp
jae
mov
lock
mov
ret
nop
pop
dec
in
push
fadd
and
adc
mov
sub
mov
ret
das
lea
daa
mov
mov
push
add
cli
mov
add
jl
not
mov
push
add
clc
mov
scas
je
js
pop
pop
ret
cld
popf
or
dec
adc
pop
dec
adc
inc
sub
pop
cli
mov
push
add
pop
pusha
das
pop
aaa
xchg
dec
out
or
pop
adc
hlt
pop
sbb
push
and
xlat
mov
xor
cwtl
fldl
xor
repz
mov
mov
inc
fisttps
dec
mov
cli
add
out
in
cli
ljmp
cmp
rorb
andl
xorl
jmp
les
rolb
fildl
mov
jne
scas
xchg
inc
jb,pt
incb
pop
inc
inc
dec
je
mov
mov
pop
sub
ret
mov
icebp
jbe
sbb
pop
inc
lods
mov
mov
push
mov
and
shll
icebp
nop
xchg
inc
add
mov
sbb
imul
or
mov
ret
dec
and
mov
jecxz
adc
xchg
test
adcb
lahf
test
sbb
fcompp
inc
cmp
mov
xlat
pop
jbe
pop
loope
dec
jg
mov
add
ficompl
adc
inc
sti
movb
les
and
pop
add
add
add
mov
inc
or
cmp
sub
push
je
mov
push
sub
inc
addr16
xchg
push
mov
or
dec
into
jle
dec
shr
push
add
jge
adc
ja
pminub
and
jne
mov
sub
jmp
push
jp
test
sar
mov
mov
jg
mov
fsubrl
jne
cs
and
lods
jmp
sub
push
dec
mov
fisubs
iret
sub
sub
mov
loopne
dec
mov
xchg
pop
mov
outsl
scas
and
fildl
sub
jae
shll
movsb
xchg
pop
mov
rep
sbb
das
lea
movsl
xchg
pop
pop
mov
sub
loopne
sarb
jb
cmp
ja
imul
mov
add
pop
lods
out
add
testb
movsb
pop
mov
or
jl
inc
loopne
je
ret
je
xchg
ret
and
mov
lcall
pop
pop
sbb
notb
or
xor
mov
lcall
cwtl
mov
repz
popa
out
cltd
push
pop
jns
fisubrs
das
pop
sub
fsubrp
mulb
das
push
js
sub
pop
mov
mov
cmpsl
inc
lea
and
ret
fidivs
cld
dec
stos
sub
je
push
imul
or
imul
cmp
aas
movsl
outsb
adc
icebp
call
add
sbb
mov
stc
push
jne
pusha
xchg
ret
sbb
sbb
cmpl
jbe
mov
aad
or
jmp
xor
inc
cld
xchg
and
jmp
mov
or
mov
mov
jge
and
incl
pop
js
mov
add
inc
mov
cmp
ja
jb
inc
adc
scas
jmp
js
fisubl
jecxz
dec
mov
dec
call
ds
leave
mov
dec
addl
out
mov
stos
lods
les
inc
je
mov
or
fistpll
cmp
mov
dec
je
dec
jl
aas
fcompl
adc
cmp
jbe
mov
push
jne
xchg
adc
ret
inc
fdivrl
pop
mov
inc
lret
xchg
mov
inc
iret
fcom
inc
movsl
dec
sbb
clc
xchg
ret
xor
rcl
sbb
and
rolb
stos
ds
adc
addl
stos
lock
test
mov
nop
mov
int3
int3
xchg
lock
fcoml
sub
mov
cmp
sti
and
lret
or
rolb
push
arpl
push
and
jne
in
mov
sbb
gs
cld
lea
out
jg
scas
mov
dec
fbstp
rorb
aam
add
cmpsb
cmp
cltd
adc
push
cmpsl
test
lea
push
xchg
or
lea
lahf
cs
xor
stos
or
or
pop
test
ljmp
push
or
enter
xchg
push
mov
jp
or
mov
mov
inc
dec
cs
incl
jg
dec
mov
stos
cmp
jne
pop
pop
iret
pop
sub
popa
aam
sub
filds
psubd
mov
sub
repz
faddl
adc
add
push
test
loop
cmp
add
loopne
push
daa
dec
adc
jb
rorb
fidivrl
mov
movzwl
sub
bnd
sbb
dec
int3
pushf
add
add
inc
inc
mov
sub
adc
sti
mov
add
ja
movswl
mov
add
lea
popf
mov
or
rorl
out
sub
cld
jmp
inc
popf
push
js
loopne
pushf
loop
dec
inc
dec
inc
dec
lods
or
shrl
xor
jge
out
sbb
std
mov
aam
adc
jg
test
clc
cmp
jl
pop
sbb
je
cmc
jbe
cmp
sbb
stos
jmp
inc
inc
mov
je
stos
loop
movlps
pop
pop
inc
clc
imul
push
mov
and
mov
es
sbb
ss
jbe
sub
add
leave
mov
mov
lods
roll
add
aam
mov
insl
cmp
add
jb
mov
ret
add
scas
je
mov
dec
adc
div
mov
inc
test
jne
sbb
or
fldt
pop
in
stos
xor
call
imul
or
je
inc
jne
pop
ret
inc
mov
mov
ret
xchg
repnz
sbb
aam
or
repnz
loope
push
in
lret
adc
pushf
fwait
inc
sahf
iret
mov
pusha
push
inc
je
push
push
cmp
sub
fmuls
sbb
xor
lock
add
or
jns
pop
inc
loop
push
mov
cmpsl
add
cmp
ret
and
inc
add
and
and
adc
and
popf
outsl
mov
sub
inc
sub
sub
fucomp
int3
push
sbb
and
sub
lahf
addr16
sub
xor
sub
cmp
in
xor
fldenv
fwait
add
dec
je
fstpt
iret
adc
subl
sub
testl
jge
fimull
cmpl
iret
mov
movb
je,pn
cmp
hlt
imul
mov
out
fabs
push
scas
ds
movlps
movsb
pop
frndint
rcr
scas
insb
or
fstps
push
negb
je
fidivl
out
fistps
call
or
mov
nop
shr
and
pop
loope
pcmpgtd
jmp
shrb
add
jns
lcall
out
outsl
or
cmpb
jb
movb
js
decb
outsb
mov
ja
jmp
call
loopne
adc
cmp
inc
xor
out
push
pusha
push
or
shr
mov
add
mov
adc
mov
pusha
cmc
push
adc
adc
out
pop
into
rorl
je
test
in
xchg
ficompl
add
jmp
in
lock
pop
mov
cmpsl
sbb
jae
dec
add
in
inc
loopne
push
in
insl
or
call
or
mov
jmp
loope
sbb
setnp
movsb
rcrl
sub
pushf
and
mov
dec
sub
cmp
jg
cmp
inc
or
ljmp
enter
roll
divl
add
jmp
mov
sbb
or
scas
inc
test
pop
sub
shl
sbb
mov
f2xm1
fwait
hlt
pop
mov
fldz
cmpsb
xchg
ljmp
inc
stos
sti
dec
lods
or
icebp
daa
lcall
pusha
jne
inc
sbb
dec
and
fistpll
jne
inc
push
sub
cwtl
jne
mov
ret
or
push
sahf
add
jg
frstor
loopne
adc
aas
jmp
fstpt
ss
push
add
or
mov
sbb
push
push
test
insl
dec
adc
and
push
int3
sahf
incl
add
mov
cmp
jae
fcmovu
in
add
add
jmp
aaa
add
add
mov
negb
es
loopne
call
inc
imul
push
cmp
iret
fsubs
call
inc
lds
sbb
adc
insb
push
cmp
xor
stc
mov
mov
mov
sbb
popl
mov
pop
add
and
push
in
adc
sbb
mov
fcomps
sbb
or
inc
dec
cmp
sub
aam
bound
pop
insb
jg
cmp
je
subb
fwait
cmpsl
push
fstps
bound
mov
push
in
cmpsb
xchg
xor
cmp
inc
or
cli
in
push
adc
dec
adc
mov
divl
push
adc
sbb
xchg
test
rcrb
clc
and
hlt
inc
sarl
or
cmp
inc
stc
inc
arpl
cmp
sub
add
imul
pop
mov
call
cmp
fdivs
add
mov
fstpl
fwait
pop
dec
mov
lock
pop
push
mov
movsb
dec
fisttps
xor
xor
xchg
pop
mov
add
push
mov
pop
fnstsw
nop
out
or
mov
pushl
add
push
jnp
fmuls
mov
lret
cmpsl
inc
inc
cmp
lret
fcomps
cmp
fdivl
and
call
imul
and
out
dec
adc
mov
adc
and
or
adc
mov
dec
shrb
subb
shl
std
add
movsb
jg
cmc
das
or
add
lea
incb
jb
ljmp
and
xor
js
or
jb
sti
insb
cli
cmp
adc
bound
orb
orl
mov
incb
jne
sub
dec
mov
aas
add
cltd
idiv
imul
sbb
repnz
ds
ds
add
pusha
or
sub
daa
loope
std
std
lds
inc
xor
mov
or
jle
pop
add
pop
pop
pop
push
ret
pop
mov
and
dec
in
test
jg
fmul
in
rcll
cmp
hlt
sbbl
mov
fistpl
pop
inc
inc
dec
data16
fs
jl
addl
push
jl
mov
and
je
mov
pop
xchg
mov
add
or
dec
lock
mov
cmp
fcoms
pop
lods
insb
jae
repnz
pop
sub
loopne
sub
or
cmp
fmuls
lock
xor
ret
js
or
push
pusha
loop
dec
mov
jb
adc
sub
fildll
mov
ds
hlt
and
hlt
mov
stc
pop
mov
sbb
jbe
or
insb
adc
dec
mov
xchg
pushf
pop
jge
fwait
loope
ret
cmp
addr16
xchg
lods
dec
and
rcrl
push
scas
das
or
test
push
adc
push
sub
fidivrl
inc
outsl
sub
rcrl
fidivrl
ja
mov
and
xchg
add
xchg
jnp
cwtl
xor
fldt
popl
sti
xchg
inc
pop
aas
lahf
jbe
cmp
jle
push
shl
shl
or
mov
call
mov
and
rcrb
arpl
sbb
cs
faddl
mov
push
dec
fnstcw
mov
dec
sti
je
insb
inc
lds
in
mov
inc
hlt
out
push
cmpb
mov
movb
add
add
jg
mov
push
lea
or
xchg
repnz
movb
sub
outsl
jecxz
cs
mov
push
mov
out
ljmp
jecxz
xchg
add
add
test
add
inc
js
sahf
cltd
rclb
and
pop
cwtl
mov
inc
push
add
ret
dec
shrb
lods
test
inc
mov
jnp
xchg
push
mov
pop
decl
mov
je
or
mov
cmpsb
add
aas
add
sarl
mov
cmp
dec
pop
add
sub
adc
cmp
and
add
dec
and
xor
jge
cs
cmp
mov
sbb
xor
enter
ljmp
imul
cmp
addr16
iret
test
stos
jmp
jg
int
inc
enter
or
ret
stos
loope
xor
jne
inc
cmpb
jne
push
or
jo
or
and
stos
out
xchg
out
sub
jns
pop
add
add
fmuls
inc
fadds
in
pusha
inc
or
cmp
pop
mov
outsb
add
sub
incl
mov
adc
jecxz
push
enter
mov
mov
pop
inc
cmp
insl
cmc
push
or
cmp
pop
repnz
sahf
nop
jns
mov
andb
jae
mov
cmp
jne
cmp
jne
mov
xor
data16
rcll
xchg
xchg
mov
std
ret
sub
jmp
or
dec
dec
pop
push
or
iret
decl
add
add
or
jnp
jnp
or
push
adc
jbe
scas
sbb
jns
jg
in
mov
insl
lock
push
shl
or
mov
and
mov
mov
cltd
xor
loopne
test
std
inc
subb
mov
sub
dec
push
lea
mov
cwtl
fcompl
adc
lcall
hlt
dec
mov
push
insl
sub
rcrl
test
mov
into
fmul
mov
ret
dec
add
jmp
out
aad
fldl
cs
shll
lahf
adc
or
dec
xchg
fists
and
nop
es
fwait
or
lds
pop
and
aaa
mov
loope
bound
sahf
into
stos
lock
addb
mov
jg
je
mov
add
out
sbb
pop
sub
je
pop
je
jmp
cmpb
dec
mov
cmp
in
jmp
movsb
sub
adc
arpl
mov
add
adc
loope
add
lods
cmp
popa
mov
ljmp
outsb
dec
push
data16
or
adc
in
or
or
adc
or
or
fcoml
fcomip
fcoms
lea
call
mov
xchg
mov
and
lret
in
test
push
rcl
jb
adc
ljmp
pop
cmp
jae
push
and
inc
xlat
push
jns
add
push
xchg
add
jns
stc
push
roll
jmp
and
nop
add
xor
xchg
jb
push
cltd
lea
sub
out
xor
xchg
pusha
mov
adc
sbb
or
or
lods
into
adc
popf
add
cmp
insl
int
imul
push
std
cmp
jmp
sbb
push
test
jnp
jo
fucomi
add
or
mov
sub
add
mov
repnz
cld
sub
imul
adc
jns
pop
sbb
clc
inc
mov
pop
iret
mov
outsb
imul
int3
jmp
inc
dec
das
push
dec
popf
mov
push
adc
push
mov
lcall
insl
mov
add
into
in
iret
jne
or
mov
lea
mov
decl
mov
inc
mov
fists
ja
outsb
mov
and
push
push
jo
cmp
jg
imul
mov
je
dec
pusha
inc
mov
adc
and
mov
mov
bound
and
vandps
push
ljmp
jnp
mov
adc
sub
jae
pop
jb
mov
pop
pop
xchg
jle
scas
or
add
mov
cmp
mov
fsubrp
testl
sbb
and
push
adc
mov
dec
cmp
sbb
inc
insb
inc
mov
inc
test
icebp
js
cmp
mov
arpl
test
adc
in
sbb
cltd
pop
push
mov
out
xchg
push
lret
fcompl
pop
push
cli
pop
in
cmp
jne
incl
int3
dec
cmp
fcoml
cmpsl
mov
shrl
inc
notrack
sub
je
dec
je
sub
ljmp
je
jmp
mov
jmp
push
push
push
faddp
outsb
and
jbe
push
inc
mov
jle
fadd
or
xor
pop
ret
mov
cmp
pushf
mov
xor
jg
jl
bound
push
mov
bound
or
sub
mov
rcrl
jmp
sub
rclb
pop
cmp
xchg
cmp
cmp
mov
std
mov
sub
add
fs
idivl
hlt
imul
add
cmpl
jle
adc
pop
and
je
push
push
out
cld
gs
xchg
psubusb
loopne
jecxz
sbb
or
pop
sbb
inc
out
mov
add
test
stos
ror
inc
mul
push
nop
data16
test
jne
icebp
jo
je
hlt
mov
int
and
insl
and
ret
js
fsubr
lret
in
cmp
mov
into
popa
movsl
cmp
fsubrs
or
mov
hlt
lods
mov
pushw
fcomps
and
add
jmp
bnd
daa
nop
add
add
lock
addl
bound
adc
jmp
jmp
mov
and
in
call
mov
hlt
push
sbb
mov
ss
repnz
sbb
jmp
push
bound
mov
adc
push
jmp
cmpb
ja
mov
sub
push
push
mov
data16
div
ja
lock
add
cmpb
jle
and
fs
jne
jo
mov
mov
add
or
xor
pop
jle
push
or
cmp
enter
aaa
xor
lods
dec
sbb
cmp
fwait
pop
mov
and
xor
test
jne
fmul
or
sarl
push
mov
fstpt
fsubrl
fiadds
movsb
imul
xor
mov
das
xor
inc
repnz
out
dec
xchg
adc
sti
adc
add
mov
gs
add
add
push
stos
hlt
aad
inc
repnz
fildl
stos
push
push
dec
frstor
ja
dec
jnp
sbb
jmp
push
enter
mov
cmp
ljmp
sub
add
xorl
mov
push
xor
or
or
lret
cwtl
testb
iret
je
orl
add
fs
add
add
and
mov
push
lock
out
xchg
mov
and
dec
inc
pmaxsw
jo
or
jne,pt
add
pop
sbb
sub
and
pushf
or
and
push
add
and
and
mov
mov
mov
int3
test
pop
push
pop
push
adc
fildll
mov
icebp
movsl
in
sub
xchg
cmp
sbbb
addr16
inc
ds
in
mov
jno
aaa
dec
sti
js
adc
lock
sbb
mov
push
cmp
ret
jne
aas
jle
xor
cmp
sbb
sbb
stos
fstpl
fwait
jmp
je
mov
sbb
mov
fucom
add
jp
pop
outsl
push
dec
push
push
xchg
xor
popf
adcb
jmp
jns
push
add
sub
jb
adc
movd
or
xchg
jmp
jno
fwait
lret
jp
shlb
out
inc
int
mov
adc
das
popf
or
movb
xor
or
fldt
cmp
arpl
push
addl
mov
add
adc
leave
movsl
pop
arpl
out
add
push
push
pop
or
adc
mov
push
add
xchg
mov
aam
jecxz
lods
cmp
or
or
jge
mov
mov
rorl
inc
inc
lahf
addb
lret
fcomps
dec
inc
push
imul
in
mov
inc
loop
cmp
or
daa
sub
pop
add
pop
push
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
xor
sbb
xchg
add
jl
je
xchg
adc
popf
insl
or
rolb
adc
adc
jne
add
ret
js
pusha
inc
cmp
cmp
sub
incl
jnp
lds
jl
add
mov
leave
mov
jmp
mov
in
xchg
dec
add
mov
dec
sarb
or
push
fcmovu
jbe
pop
shrb
add
pop
adc
fcoml
or
jmp
outsl
cli
dec
jne
push
push
and
orb
rol
leave
mov
ja
xor
push
subb
push
pop
sahf
adc
xor
add
es
clc
test
cmpsb
or
jb
sub
clc
xlat
add
and
subb
sbb
je
scas
ret
push
sbb
nop
lcall
add
mov
cwtl
jno
xchg
cs
sbb
ds
pusha
mov
getsec
jg
lods
add
stc
push
jg
mov
mov
scas
inc
cmovp
jle
xchg
inc
sahf
dec
xchg
adc
ret
add
push
mov
push
jns
pop
jmp
push
xor
jmp
xchg
dec
push
add
in
jle
into
mov
inc
repnz
mov
ja
push
add
mov
push
add
aas
gs
pop
sub
and
mov
aas
imulb
mov
or
fcmovbe
push
sbb
add
dec
clc
cmpl
cwtl
aaa
out
flds
idivb
mov
enter
cmp
inc
and
or
popf
cmpsb
dec
imul
rolb
repz
ss
ret
pop
xchg
test
push
ret
and
or
xchg
hlt
push
es
sub
rol
and
es
mov
add
shrb
push
pop
mov
movsl
loopne
push
cld
dec
adc
test
popa
mov
adcl
sbb
or
movb
iret
in
mov
push
xor
mov
mov
cmp
mov
out
xchg
int3
sahf
stc
push
lea
sar
or
pcmpgtd
add
push
or
or
ret
shlb
cmp
clc
pop
mov
sbb
xchg
sbb
inc
and
xchg
fldt
mov
mov
mov
cld
hlt
mov
enter
pop
adc
les
fisttpll
jmp
push
cmp
aam
push
sbb
sub
lahf
and
rcl
into
mov
pop
in
das
in
add
or
inc
add
sub
fildl
test
sub
push
mov
xlat
add
mov
ror
gs
addl
adc
sbb
pop
sbb
adc
xchg
inc
xchg
test
dec
xchg
xchg
fwait
lds
inc
xor
mov
inc
sbb
rolb
xchg
pop
cmpb
mov
or
adc
gs
mov
or
nop
dec
fcoml
pop
scas
inc
aas
xor
gs
lods
out
jbe
mov
jg
cmp
sbb
pop
sub
sub
sbb
mov
pop
fcoms
or
and
jo
pop
addr16
or
fxsave
dec
cmp
and
jg
adc
ljmp
inc
movsl
insl
inc
jmp
push
pushf
and
lea
inc
or
in
jp
jbe
jb
mov
mov
xor
daa
loopne
push
js
sbb
cmp
lods
mov
add
lahf
lods
xchg
rol
aad
sbb
lret
fnstenv
or
jge
nop
fucomi
mov
push
loopne
xchg
or
stc
lock
loopne
int3
and
adc
push
sbb
outsl
cmp
insb
loopne
int3
pop
insl
add
and
and
rol
add
nop
loop
dec
mov
scas
into
les
addb
add
pop
push
push
dec
jle
jg
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
xor
ret
mov
add
push
pop
or
xor
or
push
push
repnz
js
iret
mov
push
mov
seto
adc
mov
leave
pop
xorb
inc
lret
jg
mov
adc
movaps
jb
leave
mov
inc
fcoml
jae
daa
jl
adc
sbb
or
or
sbb
loope
xor
aad
xor
rcrb
fs
inc
push
jmp
adc
in
in
inc
add
pop
pusha
scas
sbb
jnp
jae
pop
mov
push
enter
rcr
add
repnz
aam
sub
mov
roll
lea
mov
add
jmp
sub
push
mov
mov
xchg
test
add
and
nop
cltd
mov
lret
cs
push
dec
dec
int3
aad
and
dec
xlat
sub
jns
gs
cld
std
jne
lods
call
add
sub
into
sbb
and
addl
pop
or
sub
aam
mov
jl
lock
nop
pop
mov
cmp
out
mov
push
in
adc
jp
sbb
adc
dec
and
mov
dec
adc
add
fwait
xlat
leave
xchg
mov
sub
push
data16
lock
sbb
add
push
stos
mov
adc
adc
and
mov
fbld
inc
inc
pop
lret
movl
test
add
pop
loope
dec
iret
cwtl
daa
sbb
adcl
fwait
pushf
mov
pop
inc
pushf
pushf
adc
into
cltd
ret
aaa
faddp
or
mov
adc
push
stc
or
and
inc
adc
cltd
push
push
xchg
push
daa
push
insb
cmp
out
pop
sbb
inc
adc
push
lahf
std
inc
aaa
mov
rolb
sbb
das
add
repnz
mov
aam
ret
mov
je
enter
out
mov
loopne
int3
mov
jl
pavgw
aam
jne
cmp
add
or
call
rolb
loope
jnp
lds
sbb
pop
push
sbbb
jae
and
orl
js
popf
lret
mov
dec
xor
add
jns
stos
sub
push
jbe
and
mov
sbbl
movsl
int
addb
rcrb
daa
jle
data16
adc
mov
aad
or
rclb
or
dec
jmp
dec
fcoms
pusha
mov
xor
jmp
and
loopne
xor
jns
dec
or
inc
pop
push
add
add
add
and
mov
xlat
loop
rolb
je
jmp
adc
test
mov
js
push
jle
leave
cmp
daa
lcall
jmp
sbb
adc
sbb
jl
xlat
leave
inc
inc
jbe
in
pop
jg
mov
scas
das
adc
mov
and
push
add
and
dec
inc
rcrb
inc
jge
push
mov
shlb
xchg
xchg
inc
inc
scas
andl
and
sbb
lret
mov
pop
pop
hlt
fucom
addl
and
push
push
stos
xor
xor
dec
and
ret
arpl
inc
andl
xor
inc
jle
fildll
push
cli
inc
enter
in
cmp
test
pop
lods
jg
cmc
jg
xchg
xor
decl
add
fwait
movl
jns
mov
mov
mov
jns
scas
pop
test
ret
sub
pop
loopnew
aaa
push
daa
push
xor
lods
scas
das
pop
and
cmpl
dec
or
xchg
sub
popa
push
movsb
jae
push
dec
push
sbb
adc
fsubrs
shlb
or
mov
adc
fidivl
dec
incl
inc
mov
sub
mov
in
push
aas
adc
cmp
jl
or
sub
bound
inc
jmp
mov
push
sbb
and
inc
sahf
jge
sbb
popa
jl
insl
ja
iret
adc
inc
sbb
repnz
and
jl
rol
lds
cmpb
push
jo
add
cmp
adc
mov
push
andl
aam
adc
je
scas
push
push
daa
push
inc
scas
or
pop
inc
inc
in
add
imul
dec
shrb
cmp
jbe
mov
bound
push
aaa
dec
xchg
outsb
ret
lods
dec
fildl
mov
hlt
rcrb
mov
mov
fsubrs
inc
loopne
xor
adc
jo
inc
inc
jne
addl
or
xchg
sar
pop
mov
dec
imul
and
mov
push
fstpl
pop
xchg
fdivs
adc
hlt
add
and
fisttps
in
push
mov
fwait
pusha
xor
push
icebp
incl
aaa
push
mov
sub
jb
inc
mov
inc
pop
js
pop
sti
stos
sbb
lret
jne
int
ret
test
or
inc
jne
mov
test
mov
clc
pop
ja
push
pop
or
or
inc
xor
mov
push
or
test
dec
add
pop
lret
hlt
mov
mov
cmp
mov
jo
jo
call
call
dec
add
mov
shl
add
test
imul
push
in
or
je
mov
push
cmp
inc
ja
mov
or
nop
test
loope
repnz
popa
mov
call
inc
cmp
jnp
cmc
lea
and
adc
scas
mov
loopne
cmp
xchg
rorl
cmpsl
insb
ss
lret
jg
jne
jmp
push
cmp
arpl
push
and
fimull
xor
arpl
add
cmp
leave
sub
jne
push
loop
xlat
in
movsb
pop
lahf
aam
lods
adc
pop
scas
in
les
jo
lcall
xor
out
lock
push
orb
mov
and
sub
cmp
call
mulb
mov
mov
mov
dec
mov
sbb
mov
insl
das
mov
rcrb
pop
fmul
int
xchg
js
scas
pushf
loopne
nop
xor
iret
ss
add
and
mov
repnz
fcomp
mov
push
fldenv
mov
cwtl
sarb
sub
shlb
jns
mov
sub
xchg
pop
int3
mov
add
and
enter
add
xor
inc
sbb
sbbb
leave
xchg
rolb
bswap
mov
fsubr
cs
xchg
mov
push
mov
jb
cmp
cmp
test
or
dec
lea
push
add
xlat
test
mov
sbb
outsl
push
insl
das
fs
push
loopne
fistl
fs
out
aaa
cltd
mov
add
pop
jo
sbb
cmc
pop
push
and
jbe
dec
pop
sbb
dec
ja
int3
pop
push
cmp
sbb
dec
dec
out
in
enter
pop
push
fldcw
jmp
aas
testb
je
scas
jmp
pop
lea
adc
adc
nop
mov
pop
sub
adc
daa
xor
movsb
inc
sub
jp
hlt
test
cmc
sub
mov
jge
add
es
daa
adcb
in
dec
jmp
sbb
xchg
pop
and
add
inc
mov
mov
data16
flds
inc
out
mov
outsl
xchg
je
inc
dec
mov
mov
cmp
leave
cld
ds
icebp
sbb
adc
adc
pop
and
sbb
addb
lcall
in
or
call
test
dec
push
xchg
add
movsl
popf
pushf
xor
mov
cmpsl
mov
sbb
push
ret
fmuls
lods
icebp
inc
repz
xor
orl
repz
testl
push
xchg
push
cmpsl
shr
push
and
fstps
add
xchg
xor
or
loope
orb
or
jb
gs
jo
adc
mov
xchg
lock
mov
inc
inc
call
dec
ret
xchg
mov
sti
mov
sbb
out
or
testb
push
lret
insl
inc
or
and
mov
sbb
inc
cmp
jne
cli
and
mov
push
xlat
sub
fstpt
sub
inc
or
cmpl
mov
inc
jmp
es
mov
lahf
les
je
mov
mov
jmp
jnp
add
fsubr
or
loopne
push
imulb
call
jne
push
mov
push
mov
inc
movl
lea
insl
or
lret
adc
add
mov
hlt
mov
mov
gs
je
xorl
lea
xchg
test
adc
jle
popa
pop
sbb
outsb
das
repnz
add
hlt
xor
cmp
or
sub
movl
jp
add
enter
pop
mov
sbb
pusha
int
inc
sahf
xorl
xchg
ja
pushf
lcall
mov
lret
cs
cltd
adc
cmp
idiv
mov
pop
mov
enter
outsl
dec
push
sbb
pop
add
adc
loop
les
clc
mov
jnp
ja
je
popa
rorl
outsl
sub
js
mov
test
push
ds
mov
lea
lret
sbb
mov
dec
dec
sbb
loop
call
data16
push
jns
roll
in
aam
orb
or
ficoms
sete
incl
xor
xchg
adc
testb
sbb
jnp
mov
inc
shr
int
or
sbb
lret
add
xchg
movsl
pop
lock
xor
inc
or
add
cmp
rorl
cmp
jmp
and
rcl
inc
aad
add
test
dec
mov
inc
lcall
aas
ja
and
aad
or
dec
sti
lods
cltd
pop
out
test
mov
cmp
loopne
stos
jmp
insb
adc
test
incl
pop
ret
fidivl
xchg
jecxz
inc
inc
pop
jo
outsl
bound
add
pop
shlb
xor
add
jns
jge
fistpll
xchg
jo
jle
push
xor
aam
std
cmp
and
adc
cmp
and
insl
fdivs
jne
movsb
dec
sahf
ja
pop
lret
inc
test
inc
sub
jnp
inc
cmp
push
loopne
jge
and
insl
rclb
and
mov
pop
out
aas
inc
dec
pop
popf
arpl
pop
roll
mov
ret
int3
stos
add
lret
data16
add
rclb
cmp
adc
xchg
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
push
jo
cmp
negl
movsb
mov
jnp
repz
jl
cs
jle
idivl
mov
pusha
push
call
stc
fisubrs
jle
repz
jns
adc
scas
adc
xor
repz
sub
mov
jns
mov
add
jl
sbb
push
xchg
iret
enter
mov
adc
or
or
add
push
daa
out
popf
mov
iret
enter
inc
clc
push
jo
hlt
pop
repnz
sahf
xchg
pop
lock
in
inc
mov
call
add
jae
mov
adc
inc
fdiv
dec
sahf
aam
shrb
add
sahf
xchg
ja
push
mov
sbb
fmulp
jae
mov
cs
out
out
mov
cwtl
mov
fwait
cmp
insb
lods
ja
test
mov
movsb
pop
test
daa
iret
pushf
adc
out
mov
jbe
leave
xor
popf
push
mov
pop
in
jg
loopne
fiaddl
push
iret
adc
das
jl
lret
mov
pop
bound
aas
xchg
movb
and
xchg
out
xchg
pop
adc
add
rclb
nop
adc
int
add
add
sbb
cmp
pop
pushf
push
daa
cmpsl
jge
orb
or
jb
iret
fsubl
or
jb
addb
enter
pushf
xchg
nop
xchg
inc
push
jb
fadds
les
fdivrl
fidivs
nop
in
and
xor
sub
push
loope
sbb
lahf
adc
gs
jl
outsb
xor
xor
xchg
push
mov
add
jbe
adc
in
xor
outsb
xchg
add
jge
dec
dec
js
inc
cmpl
enter
mov
inc
dec
mov
mov
out
aad
pop
ret
dec
rclb
jl
xchg
dec
or
iret
mov
enter
xchg
add
sbb
push
adc
mov
test
jg
out
fwait
cmp
push
ret
pop
adc
sub
xor
rorb
out
add
out
dec
push
test
adc
mov
xchg
sub
es
clc
jecxz
call
movsb
clc
clc
lea
jge
sti
loopne
add
sbb
adc
mov
std
adcb
xlat
push
mov
and
imul
sbb
inc
imul
aam
sbb
jb
jns
pop
popa
xor
jecxz
call
pusha
nop
fbld
jmp
mov
loope
pop
adc
jmp
call
mov
dec
or
divl
imul
adc
adc
test
out
add
mov
aaa
punpckhbw
cmp
push
xor
sbb
cld
sbb
and
jmp
sub
add
ret
push
jecxz
fnstsw
ror
push
mov
pop
mov
leave
and
nop
sub
xor
push
mov
mov
leave
and
inc
mov
leave
and
dec
mov
dec
xor
xchg
dec
xor
les
dec
xor
and
jl
mov
test
mov
mov
and
pushf
dec
push
mov
loopne
dec
push
mov
out
mov
rcr
dec
repnz
in
lock
cld
hlt
xor
mov
in
clc
push
push
scas
add
jne
push
leave
sarb
mov
push
lcall
add
outsl
je
mov
fs
jne
das
dec
jne
inc
fs
lret
imul
fs
outsb
inc
mov
add
jb
insl
jo
inc
fs
mov
push
je
pop
push
cmp
and
jns
adc
add
adc
inc
jns
ss
jae
pop
outsl
pushf
in
scas
mov
dec
in
xor
test
add
sbb
or
scas
cmp
add
and
pop
add
adc
subb
in
mov
mov
mov
add
outsb
add
xor
sti
loopne
inc
push
pop
push
jo
movsb
test
imul
pop
dec
fmul
repz
shrb
inc
or
mov
push
and
inc
jne
dec
inc
cmp
pusha
mov
nop
dec
testb
test
jmp
call
inc
jl
lods
add
adc
adc
fsubs
and
add
mov
add
in
mov
sbb
ret
xor
dec
div
subl
or
hlt
int3
int3
flds
ds
repz
mov
int3
out
lcall
lret
mov
jg
push
mov
sub
push
sbb
in
pushf
inc
aam
adc
nop
pusha
jl
mov
arpl
pusha
cmp
push
sbb
andl
imul
xor
inc
cmp
pop
jnp
mov
adcl
imul
xlat
pushf
pushf
ret
pop
adc
test
add
lods
xor
and
inc
mov
pop
push
fisubl
enter
mov
adc
or
sub
push
sub
jo
nop
repnz
xchg
fs
mov
nop
or
mov
in
add
iret
rolb
clc
inc
jb
cmp
pusha
repz
repz
add
fsubl
sbb
dec
insl
jo
mov
adc
sub
sub
sub
adc
pop
test
divb
mov
into
mov
push
sub
mov
out
nop
imul
repnz
mov
jno
cld
ficoms
inc
xor
les
hlt
mov
pop
pop
in
in
in
adc
in
mov
lret
xorb
jno
aaa
mov
dec
outsb
iret
cwtl
or
call
jns
pusha
cltd
es
mov
nop
dec
push
cmpb
add
loop
nop
adc
and
in
out
xchg
inc
and
jmp
sbb
sub
push
mov
pushf
add
xor
negb
and
in
adc
add
inc
rorb
and
int
or
add
jg
fwait
add
enter
es
sub
mov
call
fildll
dec
je
sbb
xchg
push
fs
leave
jbe
push
nop
es
jbe
add
push
fldl
cmc
mov
pop
stc
pop
inc
push
jl
dec
pop
in
fidivl
aas
clc
mov
pop
in
in
stos
hlt
mov
icebp
in
enter
fs
inc
repnz
enter
test
in
adc
leave
jae
scas
call
js
cmp
sbb
rcrl
lea
jmp
inc
xor
cmp
jmp
mov
movl
or
cmpsb
push
les
fdivs
xor
fmul
out
pop
adc
xor
jo
sub
mov
dec
loopne
mov
mov
sbb
mov
fcomp
push
push
mov
xchg
add
cmpsb
push
and
mov
rcl
clc
jmp
adc
adc
enter
and
aas
push
orb
dec
sbb
fs
mov
cli
jmp
xor
daa
jmp
inc
test
add
push
rorb
shll
adc
seto
inc
hlt
inc
cli
and
fsubl
xor
fs
daa
add
pop
xor
adc
or
xchg
add
cld
sbb
setg
dec
inc
and
ss
negl
nop
sti
cltd
cmp
incl
popf
inc
insb
jnp
and
pushf
xchg
jne
sub
insb
test
jmp
push
or
les
mov
insl
xchg
adc
mov
pop
mov
call
cld
test
test
sti
jo
mov
add
outsb
push
add
pop
sub
shlb
xor
maskmovq
imull
mov
test
dec
xchg
pop
data16
sti
les
adc
dec
xchg
cmpsl
arpl
and
inc
jo
out
mov
lock
or
lock
les
xor
lea
inc
jg
jo
repnz
into
jle
test
lea
shlb
mov
adcl
inc
pop
dec
inc
inc
dec
push
jbe
sahf
jmp
inc
mov
mov
pop
insb
lahf
mov
push
dec
jnp
pop
cwtl
mov
sub
in
test
aaa
sbb
cmp
cmp
lahf
mov
push
cld
aad
loopne
and
sti
pop
imul
adc
or
sbb
clc
push
jp
jne
dec
jnp
shlb
imul
add
push
adc
push
jbe
popf
xor
div
and
sbb
xchg
iret
add
xchg
xlat
and
roll
and
pop
ret
or
add
jne
adc
inc
or
pop
ret
aas
in
push
push
in
sub
test
clc
fimull
nop
mov
mov
mov
in
or
adc
adc
loopne
dec
scas
nop
add
in
inc
inc
cs
xchg
inc
je
lret
std
stc
push
push
jno
xchg
mov
test
in
inc
jbe
adc
jb
and
or
nop
cmpsb
dec
call
imul
mov
sub
pop
aad
sub
jmp
push
fildl
or
out
lock
cwtl
and
rcll
decl
cmp
enter
inc
jns
pop
xchg
add
movsl
xchg
adc
push
and
dec
incl
cmpsl
sbb
js
mov
movsb
xor
xor
sbb
adc
jg
add
inc
in
test
sub
aam
push
arpl
je
sbb
sub
or
pop
loopne
aas
or
ss
jne
inc
adc
movsl
push
insl
or
mov
add
or
das
mov
or
int3
lahf
out
or
and
cmp
lret
insb
fmul
dec
inc
xchg
and
xchg
test
repnz
dec
rorl
push
movsb
push
add
push
lds
ret
dec
mov
cwtl
pop
jns
inc
sub
mov
outsl
xor
cmp
adc
xchg
push
adc
mov
add
add
jns
cmpsl
cmp
add
jno
repnz
inc
mov
jns
insl
daa
out
clc
or
clc
xlat
and
ret
mov
mov
shl
pop
daa
mov
inc
mov
push
and
faddl
stc
sbb
inc
xor
mov
mov
js
xchg
fbld
push
ficompl
rclb
pop
addr16
arpl
xchg
xchg
data16
jl
mov
imul
mov
pop
ja
pop
pushl
stos
xlat
dec
fwait
push
js
push
jecxz
loopne
aaa
inc
icebp
ret
rcrb
jl
sub
jmp
xchg
push
cld
add
orl
jecxz
bound
scas
testb
lret
hlt
add
push
jae
lods
xor
or
inc
xor
jp
mov
or
sbb
cwtl
xlat
icebp
ljmp
fidivrs
sub
and
test
rorl
dec
mov
mov
dec
jmp
adc
fisubrl
setae
or
imul
aas
adcb
enter
xchg
mov
sbb
sbb
xor
scas
push
add
cmp
or
enter
push
xor
and
in
das
insb
int3
dec
mov
pop
sub
insl
adc
sub
lret
push
mov
clc
les
push
push
mov
sub
mov
xor
nop
popa
jae
pop
push
push
pop
push
pop
popf
popa
sti
pop
aas
nop
add
addb
mov
mov
cmpb
pop
repnz
push
lds
push
clc
xlat
sbb
es
pop
js
rorl
aaa
aam
sbb
or
xor
pop
pop
lock
or
lret
add
cmp
sbb
sub
imull
xlat
sbb
adc
mov
iret
repz
adc
sbb
inc
pusha
jp
out
cmp
scas
cs
inc
mov
data16
pop
daa
shl
push
clc
aas
dec
mov
push
data16
sbb
cmp
rcl
add
daa
movsb
dec
or
xlat
loopne
jb
pop
ljmp
in
jmp
add
sub
or
fimuls
jecxz
add
js
fstps
fwait
and
or
loopne
fstpl
idivb
leave
xor
mov
ret
jb
daa
push
push
mov
repz
or
aas
xor
pop
mov
cld
push
inc
jmp
and
lods
pusha
jmp
fwait
add
lock
and
add
jmp
adc
cmpb
je
dec
andnps
out
dec
js
adc
mov
pop
and
push
das
out
lret
fbstp
sbb
inc
push
push
cmp
xchg
xlat
add
ds
mov
jecxz
jp
fsubp
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
adc
adc
push
sbb
shll
push
data16
xchg
or
pop
or
and
inc
stc
cmp
lods
or
fiaddl
dec
and
add
jle
push
adc
hlt
ror
pusha
scas
fists
add
pop
cmp
mov
or
in
and
add
scas
sbb
pusha
das
xchg
inc
add
mov
push
cmp
push
je
push
outsl
push
test
call
or
pop
out
adc
and
mov
mov
aad
inc
mov
arpl
iret
repz
rcl
out
cmp
jmp
or
dec
sahf
idivb
or
sahf
out
jbe
xchg
xchg
movsl
mov
ljmp
and
xchg
pop
xchg
data16
aas
imul
mov
jae
mov
fldenv
pushf
push
sar
cmp
pop
push
jb
inc
jnp
cwtl
inc
fnsave
push
push
push
test
sbb
and
enter
jo
int
ljmp
outsb
inc
add
mov
pushf
clc
sub
add
pop
dec
je
jmp
outsl
gs
sbb
rcrl
inc
adc
and
mov
addr16
pop
repz
out
or
fdivr
and
fidivs
jle
lock
out
jbe
or
scas
mov
jo
mov
ret
pop
push
pop
insb
mov
fldcw
mov
push
leave
fstp
sub
xchg
push
adc
push
fwait
test
lret
and
lods
and
mov
fists
push
xor
movsb
sub
or
addl
or
daa
add
jmp
mov
dec
push
or
scas
dec
sbb
push
movhps
lret
sub
sbb
or
add
mov
pop
in
addr16
jb
add
std
sbb
push
or
add
pop
jb
test
rcll
xor
mov
mov
jmp
rcpps
leave
pop
jb
or
es
fadds
rcrb
mov
sbb
loopne
inc
adc
outsl
in
loopne
jns
pop
push
xchg
add
mov
xchg
xchg
push
dec
xchg
push
xchg
or
or
mov
adc
mov
loop
in
lock
add
iret
repz
add
or
adc
cmp
dec
enter
add
inc
scas
mov
jp
jns
ret
push
mov
mov
push
mov
push
mov
lds
in
cmp
aas
orps
add
in
shll
rorb
in
add
add
jo
sahf
testl
cmpsb
jg
jb
push
fistl
gs
in
fistl
mov
and
xchg
add
adc
int
xor
ret
pop
mov
adc
and
dec
repz
dec
push
or
adc
nop
sub
adc
adc
enter
movswl
adc
xlat
inc
dec
adc
mov
xchg
sub
or
lret
sbb
xchg
fs
push
sbb
cltd
sub
add
push
cmp
cmp
push
adc
in
and
aaa
cltd
jne
stc
rclb
ret
push
xor
aaa
sbb
or
adc
sbb
mov
in
cmp
repnz
in
push
or
in
adc
pop
hlt
loope
ret
orb
mov
mov
push
jl
test
cmp
jno
movsb
mov
and
popa
dec
call
adcb
fnsave
mov
push
xor
xchg
pop
rcrl
inc
clc
cmp
sbb
in
mov
mov
addr16
push
jae
call
pop
and
jp
sub
rorl
mov
dec
ja
mov
cmp
movsb
xor
lock
cmp
pop
lret
pop
adc
cmp
repz
stos
mov
repz
lret
jns
and
pop
inc
push
shlb
out
jnp
clc
lock
adc
rclb
adc
ss
icebp
ss
fsubs
sub
adc
pushf
sbb
or
mov
add
sbb
insb
cmpsb
movsb
and
mov
daa
mov
mov
ret
dec
fs
dec
xchg
cmp
mov
adcl
xchg
cmpl
sub
test
push
jns
out
test
xchg
test
cmpsl
fwait
mov
push
pop
and
jns
mov
pop
pop
ss
pop
push
movsb
sbb
rcrl
lods
mov
xchg
das
xor
add
xchg
loop
pop
pop
dec
pop
adc
mov
push
movsl
jmp
and
cwtl
gs
push
je
in
add
inc
out
sub
loope
sbb
nop
inc
nop
push
cmp
and
and
fildll
insb
xchg
stos
pop
outsb
fwait
test
pop
in
aam
sbb
sub
xchg
xor
and
mov
cmp
cltd
lret
sti
lock
pop
push
mov
nop
out
cmp
or
sbb
or
decl
sbb
add
mov
jno
dec
push
rolb
pop
out
je
pusha
test
sub
outsl
jnp
out
adc
inc
jmp
testl
push
or
sub
push
jns
dec
or
add
jp
iret
sarl
push
inc
data16
stc
cmp
repz
stos
rcl
sbb
in
sbb
hlt
movsb
repz
sbb
es
xorl
inc
cmp
mov
lock
sbb
sbb
inc
addl
pop
nop
fldt
fstp
imul
das
test
sti
lods
mov
push
push
incl
adc
aas
add
add
add
icebp
fcompl
pop
adc
push
das
sbb
push
or
arpl
int3
ds
push
inc
lods
sbb
add
cmp
repz
ss
fstl
inc
mov
fiadds
cltd
cmp
repz
mov
lret
xchg
xor
pop
in
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
sbb
sbb
and
mov
add
and
lds
inc
call
imul
imul
fisubrs
neg
ret
xchg
sbb
psubusw
sub
add
inc
clc
adc
xchg
mov
insl
call
pshufw
add
or
sbb
jecxz
add
mov
shll
or
mov
inc
repnz
das
mov
jb
popa
lock
mov
nop
push
push
or
pop
cmpb
mov
cwtl
xchg
imul
or
cmp
jbe
bound
iret
repz
into
loopne
and
push
imul
add
jns
inc
pop
and
in
frstor
adc
sbb
filds
and
fcmovnu
into
daa
popa
lock
imul
pop
add
and
inc
jge
arpl
mov
and
mov
lods
fiaddl
sub
pop
push
mov
flds
add
hlt
push
fildll
add
mov
inc
dec
dec
jnp
out
and
in
pop
add
add
ja
nop
push
sbb
push
xor
cmp
mov
and
xor
out
sahf
cmpsl
aas
dec
pop
outsl
andl
inc
cmpsl
push
push
daa
mov
rolb
out
adc
sbb
pusha
xor
loope
sbb
loop
mov
shrl
push
mov
inc
imul
inc
add
add
icebp
sub
jmp
daa
mov
movsb
xor
imul
pop
insl
jmp
mov
lds
adc
pop
and
mov
aam
loopne
mov
or
dec
adc
rolb
add
jbe
or
cmp
fldt
sub
jmp
es
lcall
sbb
in
add
sub
mov
out
pop
push
je
lcall
mov
adc
add
lea
aas
out
adc
insb
add
mov
adc
push
lahf
hlt
fildl
xorb
mov
add
mov
xchg
lret
mov
lock
shl
fildll
dec
xchg
pop
inc
jo
dec
push
xor
and
aaa
cs
add
adc
rorb
into
xchg
push
test
loopne
call
mov
test
push
cmp
cwtl
pusha
es
loopne
sbb
popa
movsb
ror
dec
push
pop
mov
test
out
push
es
scas
jl
sbb
dec
xchg
adc
aaa
lock
push
dec
dec
cmp
stc
fcmove
movsl
pusha
push
lock
mov
jbe
pop
leave
stos
nop
sub
stc
and
mov
add
mov
xorl
les
shl
add
push
out
sahf
ja
push
xor
ljmp
pop
push
push
in
test
xchg
scas
daa
fistps
xchg
outsb
repnz
sarb
rclb
movsb
fstl
adc
in
es
sub
lahf
push
mov
int3
or
lahf
sbb
sub
movsb
or
xchg
mov
adc
mov
mov
cmp
xor
fwait
sub
pop
lret
mov
inc
fists
addr16
jnp
imul
xor
test
mov
mov
sub
jb
dec
dec
outsl
sub
push
jne
adc
dec
inc
pushf
in
dec
xchg
push
push
adc
adcb
adc
add
in
sub
pop
das
xchg
sub
xchg
sbb
outsl
cwtl
cld
in
push
push
pop
nop
out
push
sub
fildll
mov
or
fs
fildll
in
xor
pop
leave
andl
jge
repnz
dec
push
xor
push
mov
iret
repz
push
cmp
adcb
mov
sub
ss
push
imul
sub
xor
iret
pop
jne
outsb
and
in
ret
or
fildl
imul
pop
and
lods
out
pop
sbb
pop
mov
rorb
insl
test
mov
add
jae
adcl
adcb
iret
pop
and
lcall
pusha
push
das
pop
xor
sti
cmp
dec
inc
pop
imul
in
popf
push
inc
daa
mov
jns
hlt
push
push
sub
jno
daa
fildl
lods
inc
stos
and
mov
pop
fisubl
and
dec
push
mov
lods
movsl
movsb
add
mov
mov
pusha
lds
pushf
or
or
ljmp
ret
mov
pop
mov
push
inc
lea
xchg
mov
cmp
mov
scas
pop
in
xor
jne
pusha
mov
xchg
or
popa
ds
je
and
clc
mov
add
adc
jmp
inc
lock
cmpsb
rcrb
hlt
sbb
ret
add
add
dec
add
mov
mov
xor
xchg
cltd
xor
js
loopne
pop
sub
dec
sbb
inc
inc
add
and
inc
rol
pop
clc
cmp
jecxz
add
or
xchg
sbb
loope
jno
xor
mov
mov
orb
lods
adc
and
in
sbb
jl
or
pop
test
or
lds
xor
adcl
inc
popa
movsl
add
or
adc
lods
or
cmpsb
add
jnp
lret
mov
cmp
adc
push
scas
and
es
jns
sti
cmpsl
aaa
mov
inc
add
xor
repz
repz
xchg
iret
loop
xor
adc
sahf
fildl
sub
cmp
pushf
popf
xor
pushf
daa
push
add
mov
sub
dec
cld
scas
xchg
xchg
movb
sbb
add
jb
xor
lret
mov
cld
in
rorl
inc
fucomp
add
mov
or
or
cmp
clc
add
test
or
cmp
mov
mov
into
push
or
or
xchg
in
and
lea
pushf
xor
mov
pushf
xor
mov
xor
shlb
andb
or
cmp
call
inc
das
jbe
jne
sar
int
jbe
xchg
dec
mov
and
lret
mov
aad
outsl
shlb
shlb
and
mov
lock
cmp
out
cmp
xchg
xor
ss
imul
repz
cltd
jl
push
mov
lock
sbbb
in
xchg
mov
mov
push
outsl
add
and
cmp
pop
enter
xchg
pushf
je
lods
lods
cmp
sbb
push
out
shll
movsb
push
adc
negb
es
mov
dec
gs
push
pushf
cwtl
mov
shlb
cwtl
xor
stos
xchg
insl
or
push
shlb
nop
dec
mov
cmp
gs
imul
stos
and
adc
mov
adc
mov
cmp
mov
dec
jb
or
mov
or
mov
test
mov
in
dec
test
out
jmp
leave
add
or
push
jno
adc
jecxz
dec
sub
adc
dec
cmp
dec
pop
mov
cmp
xchg
push
adc
ret
xchg
ret
and
leave
cmp
push
xor
loopne
aad
cmp
xor
mov
nop
xchg
jne
es
sbb
lret
mov
sbb
cmp
vphaddubd
dec
cmp
dec
push
push
push
ljmp
shlb
out
sahf
pop
jne
mov
out
dec
mov
jl
cmp
ljmp
imul
dec
push
fs
sbbb
cmp
fsubrl
jo
fisubrs
cmp
add
sub
dec
dec
fcoms
push
xor
xor
inc
xor
xor
push
pop
dec
fcomps
cmp
enter
cli
in
in
adc
dec
jno
aaa
loopne
and
lods
jnp
fmull
mov
dec
fdivs
fdivs
aam
shlb
add
ror
push
pusha
dec
dec
jno
xchg
loopne
fcompl
daa
mov
es
insb
enter
es
xchg
cmpsl
sub
outsl
std
sbb
aaa
pop
mov
ds
lret
cmp
jns
push
inc
jnp
sub
repz
imul
out
or
add
test
ss
add
mov
adc
mov
xor
fnstsw
sub
sbb
mov
mov
pop
cmp
es
mov
aaa
mov
arpl
test
movsb
or
rol
movsb
aad
lcall
pushf
aaa
cwtl
lods
fstpl
cmp
cwtl
mov
dec
out
jno
aaa
dec
adc
lcall
xchg
jecxz
nop
popf
nop
mov
pushf
aaa
cmp
sub
mov
cld
sbb
dec
add
mov
and
xchg
add
es
repnz
test
sbb
nop
int3
loopne
mov
nop
pop
mov
hlt
bound
popa
test
or
ret
ret
gs
dec
aas
and
inc
enter
pop
aaa
push
cmp
pusha
or
mov
or
je
jmp
sub
outsl
mov
sub
ss
sbb
cmovp
jmp
cmc
mov
mov
or
jge
outsb
adc
sbb
shlb
xor
jecxz
add
sbb
sub
inc
out
add
cli
out
dec
insb
popf
movsb
out
ret
repnz
adcb
jb
or
lea
sub
outsb
inc
xor
dec
and
lock
push
nop
fmuls
add
std
pop
ret
push
testw
imul
addr16
aam
rol
mov
jg
mov
jmp
movw
ja
shrb
lods
xchg
inc
or
out
sub
ds
adc
mov
mov
cmpb
mov
adc
aad
or
inc
aas
adcb
adc
scas
lods
mov
xchg
pop
das
push
xchg
dec
bound
cmpsb
mov
lahf
push
inc
scas
inc
scas
push
pop
dec
adc
or
or
sub
inc
fwait
adcb
xlat
and
fstpl
roll
or
xor
add
js
and
dec
inc
mov
lods
ds
nop
xchg
pop
mov
dec
cmp
adc
call
and
aas
addl
cmpsl
leave
or
jns
sub
or
enter
xchg
jecxz
nop
inc
push
jb
call
and
add
inc
push
sarb
push
xor
fsubrl
cmp
cmp
mov
sub
sub
test
pushf
pushf
add
or
fsubs
shl
xor
scas
inc
das
push
xor
mov
xor
xchg
mov
or
push
repnz
cmp
push
ja
jmp
in
inc
xor
call
jb
pushf
fmuls
jno
jne
jmp
addl
adc
adc
je
dec
aas
faddl
add
aaa
and
inc
sub
lmsw
dec
jmp
adcb
and
test
aaa
in
pop
or
and
or
cmp
outsl
inc
lret
mov
xchg
pop
inc
insl
jo
add
test
dec
jne
jmp
lahf
mov
or
jnp
pop
mov
in
jae
push
ds
add
push
fiaddl
lods
add
add
iret
add
add
insb
rcrb
lods
mov
mov
push
aad
xor
pop
sub
repnz
and
outsb
imul
cld
jl
dec
inc
arpl
pop
add
inc
adc
adc
push
or
cmp
pop
into
test
ret
jb
test
cmp
shlb
aaa
ss
xchg
mov
shrl
cmp
add
cmp
pop
adc
sti
out
int3
or
push
enter
dec
add
out
lahf
cmp
pop
mov
hlt
insb
das
add
jno
cmp
jno
mov
mov
test
stos
xchg
cld
inc
popa
xchg
and
hlt
pop
cmp
mov
adc
sub
popa
into
inc
jl
mov
lret
adc
test
leave
mov
sbb
or
and
enter
xchg
daa
or
sub
xchg
in
push
shll
pop
mov
jns
mov
inc
push
and
pushw
dec
ret
jmp
lret
push
cmp
scas
aaa
cmc
mov
into
pusha
nop
pusha
nop
jmp
xchg
push
add
daa
xor
cmp
add
mov
sahf
fs
hlt
cmp
cmpsb
add
mov
jo
pop
test
sbb
adc
and
pop
std
dec
ljmp
popf
cmp
pusha
test
pop
add
pop
arpl
mov
sub
daa
daa
or
mov
and
push
sbb
jo
adc
mov
push
or
inc
fisubl
setne
push
and
mov
lock
je
jo
add
or
or
insb
sub
dec
cld
rsqrtps
mov
adc
jne
sub
push
cmp
push
nop
clc
aaa
xchg
inc
sar
inc
roll
outsl
lret
movb
pop
cmp
and
jg
lret
mov
or
push
dec
push
sub
inc
mov
pop
xchg
outsl
dec
jne
arpl
js
and
xchg
inc
test
sbb
jnp
push
push
pop
jg
int
or
jle
inc
xor
and
pop
or
pop
lret
push
jge
xchg
test
push
jp
xor
and
mov
test
decl
jmp
ljmp
fcomps
xchg
xchg
movb
shr
push
inc
aas
mov
jg
shl
cmp
cs
jae
sub
dec
test
adc
movaps
mov
jne
xchg
outsb
dec
push
ss
test
jbe
xor
sti
jl
add
lea
cmc
les
iret
jge
sub
sahf
out
mov
inc
call
sbb
inc
adc
add
arpl
orl
int3
cmp
push
jecxz
pop
add
adc
mov
or
jmp
js
push
movsb
dec
clc
enter
xor
pop
mov
adcb
adc
ljmp
pop
push
mov
inc
jle
pushl
dec
jns
push
jo
pop
pop
lahf
es
fs
or
and
cltd
xchg
fmull
out
lcall
xchg
jmp
xchg
xor
adc
stos
nop
xchg
out
sbb
ss
sbb
cmp
mov
cltd
sbb
push
lock
in
lock
lahf
fstpl
inc
adc
repnz
and
sbb
mov
sbb
jb
or
jge
xchg
mov
inc
push
lea
mov
and
fwait
mov
inc
xchg
clc
cltd
andnps
js
cltd
dec
sbb
push
add
inc
jbe
cmp
sub
push
mov
or
jge
ljmp
hlt
sahf
mull
gs
or
add
inc
cmp
jle
dec
enter
call
or
mov
mov
enter
hlt
hlt
rcll
adc
loopne
outsl
push
inc
loop
adc
cmpb
je
push
or
or
aaa
pop
fst
lret
push
push
mov
push
sub
ljmp
stos
push
jle
sti
xor
aas
inc
incb
adc
inc
jle
mov
mov
mov
push
cmpb
add
inc
dec
pusha
sbb
pop
jne
mov
adc
sbbl
xchg
xor
cmpsb
les
pop
mov
xor
inc
jl
inc
xor
cld
adc
lods
addr16
into
add
call
dec
mov
fisttps
dec
sub
lret
cmpl
andl
inc
dec
jne
fisubrs
and
cmp
clc
add
mov
xorl
decl
xchg
fildl
pop
int3
adc
bound
orl
pop
cs
sbb
pop
cmp
dec
enter
or
dec
adc
add
lods
jge
adc
mov
sbb
sub
jo
call
push
test
sbbb
fdivrs
scas
mov
fdivrl
adc
mov
add
pop
or
in
push
andb
je
int
je
pcmpeqb
and
leave
lahf
lock
add
push
mov
cld
jo
or
imul
hlt
push
pop
inc
sub
lods
ficoms
mov
repz
int3
mov
and
push
inc
mov
test
call
cmp
sarl
jg
fists
sarb
hlt
add
mov
fnstcw
or
jo
loop
out
lods
jg
ficomps
mov
pushf
add
mov
and
pop
imul
or
fwait
ljmp
shrl
jg
sbb
ffree
lret
stos
push
or
xchg
iret
repz
pop
les
out
add
push
adc
xor
insl
movsl
mov
push
call
mov
add
add
mov
jnp
shrl
adc
push
push
fistl
ds
mov
idivb
and
mov
xor
xchg
cld
flds
and
xchg
mov
repnz
fildll
cmp
add
xor
cltd
scas
sbb
pusha
aad
cmpsb
pcmpeqb
dec
shl
or
jecxz
insl
jg
xor
pop
imul
lea
sbb
fs
imul
sahf
push
xchg
sub
push
cmp
sbb
or
in
sbb
insb
sub
pop
cmp
sub
or
mov
loopne
and
addr16
cmp
adc
inc
pop
sahf
mov
lock
xor
dec
add
rorb
add
cmp
ret
mov
xchg
movsb
cmp
lods
or
xor
cmp
cmp
inc
xor
imul
in
inc
jb
aas
in
int
arpl
sub
inc
xor
pop
add
cmp
dec
inc
fcoms
add
in
sbb
roll
call
in
fsubs
mov
sub
push
sub
scas
push
popf
adc
push
cmp
pop
add
and
repz
repz
push
bound
xchg
inc
mov
lea
or
jb
fs
aam
faddl
test
add
aas
xor
mov
stc
or
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jmp
push
out
jmp
lods
shl
sahf
pop
or
dec
jg
popa
imul
das
insb
jmp
xor
jbe
mov
xor
shlb
les
call
imul
inc
jo
jmp
cwtl
fdivrs
jl
outsb
xor
add
cmp
add
dec
out
inc
mov
mov
or
pop
clc
out
std
push
jmp
cmp
push
mov
cmp
xor
lahf
pop
push
jnp
cli
pushl
sti
pop
inc
xchg
pop
js
push
orb
out
and
scas
dec
ds
mov
xor
incb
adc
fldcw
jmp
inc
adc
insb
mov
daa
loope
dec
cmc
jge
cmp
scas
test
adc
rorl
ds
xchg
or
sbb
xor
inc
xchg
inc
xchg
imul
lock
lea
add
add
pop
mov
out
addb
leave
adc
mov
call
mov
sbb
ret
pushl
ja
or
ret
add
incl
dec
pop
aas
adc
lret
sar
mov
push
push
mov
into
cmp
mov
imul
leave
inc
mov
or
xor
pop
sub
jge
adc
aad
inc
dec
loope
sti
xor
or
push
mulb
sub
das
in
lock
mov
pusha
cld
sbb
ja
nop
inc
mov
shl
sub
fstpt
cmp
dec
add
jo
jns
mov
mov
cmpsl
push
add
push
int
pop
sub
jl
mov
or
xor
inc
dec
jne
aas
lcall
stos
jne
and
jl
mov
jae
sbb
jmp
add
int3
sub
in
add
xor
and
aam
cmpsb
mov
add
mov
xchg
daa
enter
enter
inc
daa
push
adc
pop
cmp
adc
rolb
loopne
add
test
in
push
sub
inc
in
lods
mov
jno
inc
pop
xor
cs
push
jle
or
add
dec
dec
mov
sbbb
mov
es
imul
push
inc
inc
stos
int3
scas
movl
movsl
out
and
movw
cmpsb
addr16
cmp
dec
or
jmp
cmp
ss
ds
sub
inc
pop
ret
in
int3
add
repnz
cmp
push
rcll
dec
fdivrl
filds
daa
xor
outsl
sbb
pop
xchg
ja
ljmp
add
nop
inc
cmpsl
enter
bound
inc
cmpsl
jmp
sbb
or
daa
insb
jle
arpl
inc
daa
adc
xchg
pop
jle
insb
xor
or
gs
xor
mov
xchg
mov
aaa
nop
les
push
ja
or
test
leave
andl
pusha
or
mov
lock
or
mov
cmp
in
ret
add
and
lea
pop
cmp
cmpsb
insb
push
pop
mov
push
shl
dec
clc
lea
cld
push
cmp
ss
mov
mov
jge
enter
and
leave
arpl
or
mov
mov
dec
dec
scas
imul
sti
add
push
clc
mov
jne
cmp
cmp
inc
hlt
xorl
sbb
mov
inc
sub
or
jmp
ja
jno
sbb
shrl
inc
or
sbb
mov
or
or
out
jnp
cmpsl
jp
lock
arpl
add
hlt
inc
or
hlt
inc
aaa
pop
notl
daa
testl
js
loope
imul
mov
out
in
bound
add
pop
push
add
cmpsl
subb
inc
mov
cmp
adc
cmp
and
fsts
fsubs
cwtl
daa
sbb
repz
mov
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
sub
or
or
loopne
sbb
push
int
push
or
push
push
enter
mov
into
cmp
pop
xor
js
daa
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
aam
js
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
fsubrs
push
stc
add
inc
popl
insb
add
mov
mov
xor
push
dec
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
fbld
inc
push
loop
push
xchg
fadds
push
push
clc
dec
les
les
mov
xor
test
dec
pop
push
pop
inc
cld
inc
and
outsb
jo
mov
les
fimull
ja
lock
ror
sub
std
dec
sub
or
pop
jbe
lcall
jle
cld
dec
adc
sbb
pop
and
mov
mov
loope
fdivr
sti
cmp
setg
testl
sub
test
inc
add
push
mov
and
xchg
lock
mov
addr16
fs
add
mov
lock
push
cli
and
add
sbb
mov
out
push
arpl
add
sbb
mov
xchg
add
xor
ret
mov
push
add
add
and
and
inc
add
and
nop
sbb
mov
jecxz
or
pop
out
and
inc
lock
leave
call
push
mov
dec
add
dec
dec
mov
add
adc
hlt
jno
and
sub
data16
fisubrl
jae
jne
mov
neg
mov
adc
cwtl
cmc
adc
test
mov
xor
cld
xchg
out
lret
daa
jo
xor
inc
sbb
adc
das
sub
add
xor
cmp
cwtl
cmp
test
or
xchg
cmp
inc
inc
inc
inc
ds
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
cwtl
cltd
inc
inc
inc
inc
lcall
inc
sahf
lahf
addb
addl
xchg
inc
mov
inc
inc
mov
inc
inc
jb
addr16
inc
sub
enter
inc
inc
sub
rclb
adcb
push
and
lock
cmp
jnp
xchg
push
popf
jns
loopne
call
aas
lea
push
lahf
push
cmc
or
xchg
test
sub
movaps
adc
adc
and
jl
adc
or
mov
jo
lock
push
push
nop
imul
push
loopne
add
pop
mov
repnz
push
jb
jo
jb
jns
imul
mov
pop
fldl
or
dec
inc
pop
mov
dec
adc
or
popa
faddl
bound
ja
push
out
xlat
sti
xchg
out
daa
mov
pop
and
add
aas
sub
bound
iret
call
add
lock
mov
inc
nop
lea
jge
xchg
inc
insb
or
or
mov
jae
add
jne
jl
pop
sbb
pop
add
and
push
or
mov
data16
imul
push
in
cmp
mov
daa
das
jl
out
out
daa
movsb
push
mov
into
mov
bound
sbb
insl
add
repz
icebp
jbe
and
sub
push
cmp
pushf
inc
dec
pusha
or
add
mov
jne
lahf
inc
push
pop
cmpb
imul
xor
fstp
sub
and
jge
mov
movsb
cmp
jmp
xor
and
cmp
xor
das
insl
je
push
pop
outsb
sub
shll
mov
xor
cs
inc
mov
xor
add
bnd
pop
insl
out
cmp
or
dec
insb
call
in
and
jge
adc
out
negb
or
adc
push
sbb
sub
jne
sub
push
or
sbb
scas
or
or
jle
and
pop
insb
leave
push
and
test
shll
test
push
nop
test
hlt
sub
pop
dec
es
cmc
mov
rolb
das
insl
dec
lahf
out
sti
xorb
mov
dec
outsb
dec
fidivs
lds
ficoms
loopne
pop
in
push
or
inc
add
xchg
or
sbb
repnz
or
pop
push
pop
mov
int3
add
inc
xor
inc
or
inc
and
leave
cmp
cmp
adc
push
pop
nop
nop
dec
cli
jne
ljmp
jge
lods
or
lea
scas
mov
les
ss
shll
lock
in
sbb
ss
leave
pop
jno
push
cmp
in
call
movsb
std
imul
jmp
push
pushf
mov
or
or
cmpsl
lahf
outsb
push
jmp
cmp
and
jne
sub
inc
popa
jnp
xor
adc
adcl
lods
mov
xor
jmp
add
jno
mov
cmp
ljmp
aas
insb
fnsave
add
iret
loope
fldcw
stos
pushf
xlat
mov
mov
mov
daa
orb
leave
inc
rclb
jo
add
mov
add
adc
xor
idiv
pop
sbb
scas
lods
xchg
dec
or
mov
xor
xlat
loope
mov
xchg
adc
les
adc
add
ljmp
js
ljmp
icebp
jo
aad
push
movsl
xchg
and
and
sub
jo
dec
lods
inc
or
mov
or
push
lods
mov
pop
adc
xor
test
jne
out
push
push
cs
dec
xor
clc
jle
mov
cmp
add
int
fimuls
sub
jb
add
loopne
cld
cmc
xor
adc
push
movsb
pop
push
sub
mov
addl
jp
or
fcmovb
dec
mov
pop
inc
gs
push
mov
testb
mov
mov
adc
add
pop
or
mov
push
or
sbb
pop
sbb
jmp
lret
je
mov
dec
and
sbb
xor
mov
insl
shll
jmp
jle
in
je
jmp
cmp
lock
test
out
jne
pop
call
std
mov
or
sbb
pop
mov
and
aam
je
sub
inc
addb
and
int3
add
xchg
lds
ja
cmp
aas
pop
je
pop
lods
in
or
dec
and
decb
ja
and
adc
sbb
and
mov
mov
cmp
insb
push
add
adc
pop
es
or
movsbl
or
sbb
jp
lcall
aas
dec
aaa
mov
in
fisttpl
sarl
cmp
lret
or
xchg
out
orb
testb
call
out
mov
mov
or
pusha
test
fcomip
popa
or
imul
inc
out
loope
mov
popa
dec
mov
mov
ljmp
cmpsl
or
imul
mov
cmpsb
mov
and
lock
jno
adc
xchg
xorb
or
pop
cmp
movsl
sub
inc
and
lcall
icebp
jb
rcrb
in
inc
dec
dec
loope
ret
test
sub
and
and
out
mov
push
push
imul
fwait
xor
mov
mov
pop
pop
pop
pop
test
pop
sbb
mov
add
xor
pusha
inc
or
add
cmc
fcmovbe
sub
push
mov
outsl
sahf
mov
add
div
je
add
lgs
dec
pop
mov
add
jne
pop
xor
sbb
sbb
add
je
jge
roll
mov
dec
push
mov
pusha
sub
mov
mov
dec
jae
nop
add
pop
imull
pop
push
jne
mov
or
movb
pop
jl
test
or
dec
and
movsb
cltd
add
adc
ds
mov
in
add
out
xlat
andb
movsl
jle
xor
adc
incl
cmp
pop
push
ret
call
rolb
or
ret
fcomip
ja
mov
lods
cmp
mov
enter
mov
push
mov
addl
popa
sbb
cltd
push
jge
ret
or
lds
inc
fstps
data16
pop
pop
cmp
das
cltd
es
sbb
or
xor
or
enter
mov
pop
clc
inc
jge
test
bound
fcmovnb
ja
add
xorb
inc
sbb
lret
mov
sub
js
scas
sbb
inc
xlat
cmp
add
ret
push
scas
push
mov
push
or
std
adc
sub
je
or
dec
je
jl
adc
sbb
stos
mov
je
addr16
fdivr
jg
mov
mov
sub
or
jmp
gs
aam
xor
or
mov
xchg
daa
out
pop
and
jns
imull
jecxz
adc
push
jmp
pop
sub
call
mov
rorb
fsts
and
sbbl
adc
sbb
xor
push
mov
aam
hlt
hlt
or
movsl
bound
decb
ficomps
fiaddl
adc
and
fbstp
rol
and
hlt
or
and
jp
sub
out
or
sbb
jp
scas
loope
iret
and
dec
shr
or
js
les
clc
clc
add
xor
ret
or
int3
lcall
pop
inc
dec
sahf
inc
mov
hlt
add
xchg
out
in
push
add
push
push
mov
test
fsubl
jnp
or
ja
enter
push
cmc
repz
mov
fsub
flds
frstpm(287
dec
sti
xor
adc
xchg
fcomps
lods
test
cs
push
and
push
cmp
jmp
das
push
jnp
add
jle
je
add
add
mov
adc
adc
rcrb
and
cmp
mov
cmp
aas
jbe
add
xor
push
jno
mov
imul
rorl
ja
lods
mov
enter
idivb
cld
jge
jl
insl
or
sbb
insl
push
adc
shlb
xor
add
mov
fimull
cmp
adc
or
cmp
mov
sti
fmuls
aaa
pop
add
xchg
mov
adc
fisttpl
test
or
push
push
fs
jns
movsb
cmp
and
mov
insl
pop
xchg
dec
sub
xor
push
sub
cmp
outsl
xor
sub
testl
or
cs
jge
sub
adc
jmp
pop
jmp
sbb
sub
jmp
or
pop
ret
nop
sbb
div
add
loopne
dec
mov
jge
rcrl
pop
pop
jp
adc
jno
incl
fildl
sbb
adc
push
mov
xchg
sub
xor
je
lods
inc
pop
or
or
pop
loope
mov
cs
std
into
xlat
mov
ret
vaddss
sbb
pop
adc
push
hlt
in
dec
or
dec
add
push
pop
shlb
cwtl
flds
cwtl
pushf
fstps
dec
cmp
and
pusha
or
mov
or
in
wbinvd
test
into
in
adc
ja
sbb
lahf
inc
dec
or
dec
jg
pop
mov
sarb
aam
push
das
js
nop
xchg
jg
jge
ret
fs
cld
call
je
addr16
push
dec
push
dec
pop
push
dec
or
cmp
rolb
inc
invd
dec
push
gs
imul
pop
or
add
inc
xchg
and
orl
or
mov
popa
insl
cmp
dec
mov
es
add
or
cmpsl
shl
or
pop
inc
inc
push
orb
pop
dec
and
fisttpll
or
and
or
or
or
mov
cmp
iret
adc
pop
addr16
enter
adc
mov
loop
pop
dec
outsb
push
insb
cmp
jmp
add
dec
int3
jg
jae
testl
adcl
mov
sbb
mov
pushf
add
arpl
cmp
ljmp
je
pop
andb
lds
sub
push
sub
adc
shlb
adc
fcmovnu
pop
ja
push
ja
outsb
addr16
stos
shrl
inc
cmp
xchg
insb
jp
in
icebp
nop
mov
dec
fwait
inc
fisubrl
jne
push
orb
jnp
mov
popa
aas
xor
pop
push
pushf
fsubl
pop
jle
cmpxchg
movsb
mov
pushf
cwtl
xchg
nop
mov
shrb
xchg
shrb
arpl
dec
mov
sub
insb
imul
test
cwtl
xor
dec
gs
fsubrs
jns
sbb
scas
sbb
dec
push
mov
inc
fldl
jae
call
cmp
imul
fmulp
lret
fs
outsl
test
nopl
addr16
adc
dec
outsl
sbb
mov
jbe
pop
adc
dec
outsb
insb
jns
xchg
inc
fisubs
xchg
inc
fldt
bound
or
jp
into
pop
insb
or
cmpsl
or
dec
imul
adc
xchg
test
or
pop
cmpsl
mov
pop
push
dec
add
and
add
nop
loopne
add
mov
sbb
fsubrl
or
dec
gs
fstpt
jae
add
xchg
cmp
insl
xor
cs
adc
inc
jbe
dec
or
push
fsubs
xor
xorl
xor
adc
test
cmpsl
add
in
into
pop
test
mov
xchg
or
pusha
sub
mov
dec
or
or
xchg
mov
cld
sub
outsb
mov
xchg
adc
or
inc
repnz
jb
insb
insb
adc
in
test
inc
pop
sbbl
mov
and
pop
xor
sbb
scas
sbb
or
inc
and
inc
inc
mov
mov
cmpsl
pop
arpl
aam
add
push
imul
mov
imul
test
jnp
loopne
in
rclb
xor
mov
insl
jo
push
mov
inc
mov
mov
push
lds
pushf
mov
lcall
push
push
lea
cltd
jno
adc
jle
ja
mov
popf
ljmp
mov
test
insb
push
push
shrb
push
add
pusha
mov
xor
jbe
jp
or
mov
mov
push
sbb
push
pop
push
or
stos
mov
sbb
es
add
jnp
mov
nop
mov
mov
test
push
xor
jle
sub
lcall
lods
mov
pop
addr16
xchg
flds
adc
or
adc
dec
test
jmp
in
movsb
lods
cmp
mov
adc
add
imul
xchg
scas
inc
or
jns
out
cld
sbb
push
xlat
mov
push
ret
sbb
aas
jo
fbld
inc
lock
jnp
push
cmpl
cs
out
xor
mov
xor
filds
cmovns
jae
fs
jo
lcall
jecxz
jge
das
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
cmp
sub
sbbb
xlat
mov
jp
adc
mov
mov
divb
mov
pop
mov
mov
sarb
fldcw
cmp
sbb
je
inc
jo
inc
mov
testl
mov
sub
xchg
or
fs
or
cmp
loopne
scas
pop
sbb
xchg
mov
push
lods
lea
dec
lcall
pop
insb
bound
mov
rcrb
jb
stc
lock
mov
loope
mov
lods
lds
loopne
call
popf
pop
pop
movl
enter
data16
leave
pusha
ret
insb
ret
or
push
dec
aaa
leave
sbb
mov
pop
inc
movb
nop
pop
rolb
test
mov
add
xchg
sbb
mov
sbb
inc
xor
dec
dec
popl
mov
loopne
mov
fadds
lock
pop
nop
lret
rolb
push
push
mov
fistpll
sahf
testb
int
in
xchg
mov
push
or
popa
imul
mov
enter
push
xor
in
iret
inc
in
and
sbb
xlat
mov
loopne
inc
sbb
adc
inc
mov
mov
xchg
mov
mov
lret
adc
idivl
adc
inc
nop
lods
rolb
xchg
push
rorl
rolb
rcl
pop
mov
xor
mov
sbb
cmp
shl
andps
pop
cmpsl
in
or
or
sbb
adcl
enter
or
sbbl
sub
add
mov
orl
dec
xchg
jl
out
or
pop
das
cmp
xchg
repz
sarl
repnz
and
jnp
push
adc
push
adc
mov
lahf
loop
or
push
or
lcall
adc
fs
jl
add
push
mov
adc
mov
pop
adc
mov
push
inc
push
adc
das
fidivrl
add
sub
aam
dec
aam
xor
mov
pop
xchg
add
jl
sbb
in
inc
fldt
push
push
les
ds
enter
push
inc
or
loop
call
inc
xor
inc
and
inc
pmuludq
ret
or
adc
add
xchg
aas
fcmovb
mov
mov
aas
pop
call
rcll
stos
mov
rorb
mov
xchg
xor
outsb
and
hlt
adc
pop
push
imul
ror
int3
inc
or
pop
cmp
addr16
add
pop
sbb
incl
int
dec
addb
mov
lcall
cmpsb
popa
imull
push
add
xor
mov
xor
data16
in
pop
inc
addr16
inc
mov
mov
push
inc
or
orb
mov
push
nop
push
mov
bound
sti
adc
jmp
adc
sti
inc
cli
stc
clc
push
push
push
push
push
dec
jnp
mov
loop
push
ljmp
xor
cmp
iret
repz
push
pop
pusha
insb
jns
mov
push
dec
into
pop
push
cmp
sub
adc
mov
cmp
pop
push
mov
test
std
cmp
xor
pop
add
push
xor
aad
sarb
add
ss
xchg
mov
adc
out
sbb
push
mov
cld
mov
rclb
and
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
adc
leave
mov
push
pusha
push
push
mov
or
and
xchg
sahf
cmpsl
stc
mov
push
cmp
adc
rcrb
ja
cmc
push
add
or
or
sbb
push
je
sub
loopne
and
adc
ljmp
dec
roll
loopne
ss
adc
mov
js
pop
pop
pusha
ficoml
or
test
push
push
rcr
or
cltd
mov
gs
clc
and
in
cmpsl
dec
push
arpl
call
add
inc
repnz
xchg
cltd
xchg
cltd
filds
add
add
jb
jne
out
mov
in
scas
in
and
xchg
js
or
pop
lret
sub
in
fwait
mov
pop
sub
mov
in
push
mov
dec
lahf
les
pop
cmp
xor
add
xchg
xchg
and
out
xchg
or
pop
and
jmp
push
push
inc
sub
mov
pop
lcall
and
add
sub
lock
push
sub
fldt
or
cli
jne
and
jmp
mov
outsb
jmp
jecxz
sub
add
neg
pop
sbb
movsl
mov
icebp
orl
out
nop
stos
mov
inc
inc
add
int3
lea
cmp
jmp
or
pop
jl
lcall
sbb
jmp
addps
movsl
aam
jecxz
cmc
cld
inc
add
mov
and
sbb
mov
clc
mov
daa
mov
inc
and
add
pop
adc
mov
pop
sbb
pop
pop
pop
jp
pop
mov
rolb
pop
or
dec
icebp
dec
push
inc
or
jmp
dec
sbb
push
cld
xchg
hlt
push
insl
dec
into
lret
iret
pushf
fildl
mov
inc
daa
jno
or
mov
pop
xchg
popf
mov
lock
enter
xchg
test
pop
adc
pushf
cld
jmp
gs
jo
push
orb
pop
std
rol
cmp
inc
dec
call
mov
push
xchg
inc
cmp
jbe
sbb
adc
fmuls
sub
enter
add
cmp
movsb
imul
imul
xchg
imul
xor
jo
sub
and
pop
test
xchg
sbb
imul
mov
lret
gs
xchg
dec
adc
mov
clc
push
call
inc
or
or
das
xor
pop
cmp
mov
cmp
pusha
fcmovbe
cmp
add
movb
popf
ret
out
xor
stos
pop
call
mov
in
jl
inc
xor
out
mov
xor
inc
dec
jne
mov
rorl
test
cmpsb
inc
cmpsl
outsb
lds
inc
loopne
cmp
sbb
push
sub
jg
inc
rcr
nop
sub
xchg
mov
dec
cmpb
dec
popf
xchg
outsb
add
pop
add
xchg
sub
leave
xchg
je
lahf
clc
rorl
rcll
test
inc
clc
mov
xchg
sbb
add
cld
pop
sub
cltd
out
xor
add
add
adc
mov
pop
mov
xchg
movsl
roll
mov
int3
pop
shl
jne
push
sbb
pop
imul
mov
push
inc
add
or
jl
or
dec
fsubrs
rcrb
in
xor
xorb
outsb
repnz
inc
pop
imul
push
loopne
es
mov
insl
sub
cmp
push
xor
cmpsb
jecxz
dec
call
jne
movl
jno
push
sbb
inc
adc
push
sbb
jb
jle
mov
lret
out
dec
jae
inc
test
call
aad
jge
sbbb
and
mov
xchg
mov
mov
sbb
xchg
aad
or
test
pop
mov
repz
stos
sub
pop
xchg
mov
hlt
xchg
inc
mov
aad
lret
lahf
sbb
inc
sub
xor
cli
mov
mov
mov
repz
shlb
cld
cwtl
cltd
or
adc
in
pop
in
ret
leave
or
fstpl
or
mov
mov
sbb
xchg
pop
mov
nop
sub
aam
fcom
into
mov
jae
push
test
sbb
adc
notl
add
jo
adc
mov
push
sub
ja
cli
dec
or
and
clc
and
cmpsl
sbb
mov
xchg
xchg
daa
lods
roll
jmp
mov
or
add
es
rolb
add
movsb
mov
ja
enter
ret
fsubrs
jbe
adc
mov
push
jno
inc
call
jg
xchg
lret
xchg
and
xchg
mov
xchg
jmp
inc
clc
mov
jmp
push
je
cmp
insb
cmp
push
shll
enter
movsl
and
lds
sub
sbb
xchg
je
push
xchg
xchg
add
or
popf
xchg
add
and
sub
mov
lea
jbe
pushf
cmp
aas
adc
dec
rolb
rol
loope
ss
addr16
icebp
and
or
or
push
push
sub
sub
mov
push
outsb
xchg
movsb
hlt
fsubrs
bound
cmp
outsl
mov
and
pop
adc
bsf
js
pop
add
lret
mov
jbe
rolb
cmp
addr16
mov
in
lahf
add
sub
clc
pop
push
mov
sub
lea
add
add
daa
addb
cld
mov
jmp
ret
pop
and
and
mov
add
inc
adc
add
sbb
jge
adc
sbb
jns
ret
idivl
sub
mov
in
pusha
push
sub
data16
push
cmp
push
mov
push
fs
mov
add
mov
in
je
rcrb
ja
cmp
dec
lahf
pop
mov
mov
aam
and
and
mov
jbe
daa
inc
popf
or
test
test
pop
icebp
sahf
push
mov
aam
or
jge
jbe
pop
xor
fldcw
mov
xchg
ret
mov
test
push
sbb
jb
cmp
add
pop
add
add
sub
test
jae
testl
rcl
cmp
push
xchg
sub
fdivrl
xlat
arpl
pop
mov
aaa
push
insb
mov
out
sbb
mov
lcall
push
dec
xchg
mov
adc
lock
int
mov
push
or
pushf
test
shll
mov
xchg
cld
pop
mov
outsb
stos
sbb
cmc
and
cmp
mov
jo
je
mov
in
jno
and
cmp
push
pop
dec
adc
pusha
jno
mov
pop
fld
or
xor
gs
in
mov
mov
cmp
rol
xchg
in
and
mov
sbb
shlb
fstpl
dec
imul
push
mov
movsb
push
mov
mov
shrl
rorb
aas
movl
bound
push
jge
inc
je
enter
xor
ja
rcl
and
shll
loop
inc
adc
pop
pop
aas
ljmp
leave
int
push
fisubl
or
jne
mov
das
and
js
inc
stos
add
insb
push
into
cld
loopne
iret
cli
sub
or
dec
or
mov
sbb
inc
idivl
shl
loop
adc
or
in
push
jmp
cmc
mov
icebp
xchg
adc
sbb
xor
jp
push
mov
clc
push
xchg
pop
mov
shr
jmp
or
inc
mov
sub
ficoms
pop
xchg
mov
into
test
xor
push
lods
dec
lcall
sbb
cmpsb
add
int
cmp
push
sbb
adc
push
lret
cmp
and
push
sbb
fcomp
jnp
add
imul
jmp
inc
cmp
jge
add
push
push
jnp
cmpsb
jne
sbb
leave
rorl
popf
iret
std
jle
inc
lds
jae
push
push
mov
inc
loopne
inc
sbb
jecxz
xchg
pusha
pop
jg
jecxz
sub
in
push
ret
cmc
mov
test
mov
test
add
jb
and
leave
xchg
out
lea
pop
sarb
adc
pop
pusha
xchg
je
scas
dec
jmp
or
shl
lcall
xor
call
push
fildl
lock
sbbl
jle
test
inc
loopne
jo
mov
push
bound
ja
call
std
jg
dec
hlt
dec
nop
rolb
fstpt
jo
cs
xchg
cmpsl
xorl
inc
mov
loop
dec
cmpsb
jb
sub
call
shl
scas
adc
je
sbb
push
push
mov
in
dec
jo
mov
mov
insl
jmp
cmpb
das
push
dec
xor
xchg
inc
jne
test
jmp
dec
add
add
sahf
or
bnd
dec
push
dec
popa
andb
movsl
dec
adc
pop
das
aaa
fcmovnu
or
xchg
add
or
loop
testl
fadds
sbbb
mov
push
movsl
movsb
hlt
enter
mov
adc
inc
mov
add
mov
mov
dec
or
adc
clc
add
pop
xor
sub
shl
cmp
je
addb
pop
nop
dec
push
andl
fisubl
icebp
add
sbb
adc
test
mov
fstps
push
fcmovnbe
adc
adc
adc
sub
cmp
jae
cmpb
dec
or
je
stos
adc
btr
loope
adc
push
add
mov
cld
push
push
inc
push
mov
fisubl
fmuls
mov
dec
test
adcb
into
dec
xorb
call
cli
pop
ja
test
push
dec
mov
mov
add
push
mov
mov
adc
push
inc
cmp
jne
inc
decl
jne
adc
pop
mov
bound
leave
hlt
lock
adc
xchg
mov
sbb
subl
in
sub
dec
xchg
test
incl
sub
mov
imul
mov
mov
pop
lods
loopne
movb
inc
dec
jmp
adc
jl
imul
das
lahf
adcb
inc
mov
sbb
add
sub
inc
inc
mov
sub
pop
cmp
push
dec
and
push
test
pop
cmpsb
pushl
js
sub
jne
push
adc
bound
test
ss
dec
push
mov
mov
mov
add
xchg
and
mov
or
int3
adc
add
pushf
mov
inc
add
mov
adc
cmp
sbb
aam
sub
inc
sub
jb
cmp
inc
jle
dec
and
arpl
or
test
pop
pop
jnp
lcall
jns
xor
and
push
mov
dec
enter
mov
fimull
inc
call
adc
mov
push
data16
xor
dec
and
test
fcoms
rorl
fdivrl
mov
clc
icebp
lock
or
xchg
cmp
call
notl
js
sub
lret
enter
push
mov
and
out
shrl
push
mov
cmp
mov
pusha
loopne
mov
inc
ret
xor
leave
and
cld
fiaddl
adc
inc
push
mov
adc
xchg
out
pop
pop
push
push
add
pop
or
adc
popa
mov
mov
dec
mov
push
add
and
movsb
adc
aaa
adc
je
shlb
mov
sbb
pop
aaa
daa
daa
dec
clc
shll
repz
adc
jecxz
lahf
add
addr16
movsb
adc
inc
movsl
push
push
ret
sbb
jbe
jl
ficomps
testl
lret
lcall
mov
les
push
dec
shll
push
add
jae
in
outsb
jmp
pop
and
daa
xor
xchg
cmp
mov
or
xor
xchg
fdivrs
and
pop
in
push
in
inc
ljmp
or
mov
cmp
into
mov
outsb
sbb
sub
inc
push
and
test
cmp
fs
pop
iret
lds
popa
inc
imul
dec
in
or
mov
sub
cld
adc
movsb
ret
loop
enter
ss
stos
and
mov
aad
sbb
clc
and
or
rdtsc
mov
sub
std
lock
and
fucomi
xchg
imul
aad
sbb
xchg
lret
inc
int
mov
ret
loopne
aad
pop
or
pop
and
push
loope
push
loopne
mov
clc
dec
xor
xchg
adc
inc
push
sbb
adc
xchg
pop
push
add
push
push
inc
add
test
outsb
scas
dec
in
fwait
pop
call
stos
lcall
push
and
inc
jnp
in
in
mov
cmp
add
sub
jg
inc
sub
or
dec
ficomps
adc
cwtl
sub
clc
inc
mov
mull
xor
dec
inc
adc
fcoml
xchg
inc
add
arpl
aas
addr16
js
call
add
sub
addr16
insb
and
or
xlat
nop
pop
cmpsb
mov
sub
add
js
jo
loopne
fmul
call
rcrb
add
call
cmp
movsb
test
cmp
movsb
scas
dec
lods
mov
inc
popf
jecxz
xlat
pop
addb
ds
push
sahf
and
mov
pop
cmp
or
pop
lods
ret
aaa
or
test
sbb
js
adc
mov
dec
repnz
xlat
je
dec
ret
lock
out
cmp
mov
pop
call
clc
clc
movsl
or
mov
ret
das
jmp
sub
lea
mov
push
xchg
or
adc
sub
cmpl
mov
lods
cwtl
sarb
adc
cwtl
pushf
dec
mov
mov
clc
sbb
bound
dec
push
add
loopne
pop
xor
aam
xor
xor
add
adc
lret
inc
rcr
inc
cmp
bound
js
adc
xadd
add
push
pop
push
call
loopne
aad
int3
out
fstl
or
push
ror
sbb
shl
jp
pop
das
push
xchg
cmp
sarb
mov
pop
add
dec
or
pushf
in
gs
aad
das
or
xchg
in
rol
xor
mov
push
cwtl
insl
adc
jge
das
repnz
daa
pop
movsb
mov
aaa
mov
in
rcll
inc
jb
or
xor
sub
ret
sub
add
cmp
mov
testb
add
scas
add
mov
sub
jle
and
cmpb
jne
or
scas
nop
inc
hlt
add
int
ret
jno
sub
mov
ret
adc
loop
and
insb
pop
rcll
test
fcoml
or
mov
and
ja
iret
loope
sar
testb
cmp
pop
sti
std
ret
sub
push
testb
orb
inc
dec
pop
mov
dec
xlat
lcall
sub
inc
popl
movsl
pushf
outsb
insb
pop
outsl
add
faddl
adc
inc
pop
inc
test
adc
sub
xor
pusha
cs
adc
and
rol
loop
adc
cmp
dec
inc
xchg
inc
xor
sbb
sbb
pop
dec
fiaddl
jmp
rorb
jl
sub
test
pushf
jl
mov
mov
sub
inc
mov
xor
data16
sub
inc
mov
and
sub
je
lcall
or
lods
inc
int3
dec
adc
shrb
ret
push
andb
inc
pop
adc
pop
dec
nop
gs
add
jge
jo
les
in
jbe
adc
or
roll
and
push
xor
roll
imul
fisttpll
out
cld
lock
dec
sbb
mov
sbb
adc
pop
add
add
jecxz
roll
clc
cmpb
cltd
ficoml
rcr
jle
cmp
aas
mov
jmp
sbb
andb
add
pop
sbb
jge
lea
add
dec
in
xor
dec
into
adc
add
add
repz
imul
mov
inc
add
push
xchg
outsb
sahf
inc
ljmp
aaa
aas
add
dec
push
sbb
add
mov
mov
sub
iret
cmpsl
push
push
stos
loopne
sbb
mov
xor
adc
test
or
das
int
je
xchg
pop
mov
mov
dec
sub
or
sbbb
mov
or
cmp
sbb
or
nop
and
ret
jns
push
test
and
or
mov
shrl
sbb
test
adc
mov
and
lock
pop
shr
add
shr
out
rorl
cmp
and
jg
arpl
and
idivb
cmp
jne
mov
or
or
test
dec
inc
jge
sbb
jle
lea
pop
mov
in
hlt
jl
adc
xorb
add
add
jg
aad
cmp
je
lcall
lods
nop
enter
and
xchg
imul
sahf
clc
lret
or
enter
loopne
add
jnp
xchg
xchg
inc
push
jge
inc
add
mov
push
add
ja
cmp
out
xchg
cmpb
out
add
add
pop
dec
test
xor
push
push
xchg
mov
cmp
push
pop
push
insl
insl
xorb
popf
mov
add
js
flds
shl
adc
push
test
movsb
cmpl
in
xchg
jge
adc
and
add
jb
push
sahf
or
shl
cmpsl
scas
cwtl
pop
add
ret
adc
mov
sbb
in
sbb
scas
or
xchg
lea
jecxz
xor
shlb
insl
pusha
pushf
or
insl
scas
dec
loopne
cltd
or
cmp
into
jne
sbb
mov
inc
pop
xor
int3
inc
movsb
bound
xor
mov
mov
pop
cmp
xchg
andl
push
mov
adc
rolb
lods
ret
fidivs
inc
add
es
andl
mov
fcom
xchg
aas
mull
xchg
outsl
dec
cs
adc
js
and
inc
nopl
pusha
xchg
popf
sbb
rorb
or
lods
push
inc
push
pusha
or
fwait
js
adc
add
add
jbe
or
sbb
or
push
inc
mov
adc
add
inc
ds
int3
cmp
fldt
jge
in
in
jmp
sti
jge
push
and
lret
stc
mov
jecxz
dec
mov
sbb
repnz
mov
xchg
movsb
inc
fst
mov
pusha
pop
in
lahf
inc
rolb
jl
sbb
xor
repnz
pop
ret
fsubrs
inc
cmp
mov
lahf
sbb
in
pop
jb
add
int
clc
xor
lea
xor
ja
lock
or
xor
cmp
fcompl
cmp
push
inc
sub
sbb
jecxz
mov
fs
xchg
xchg
push
out
orb
dec
mov
lea
movsb
sub
jg
cwtl
aam
subl
mov
cmc
inc
or
adc
adc
es
fwait
xlat
xchg
fsubl
add
jecxz
inc
cmpsb
xchg
imul
imul
cmc
mov
shll
inc
enter
cmpl
add
mov
lods
pop
add
cld
fcomi
pop
sub
frstor
mov
xor
fsubr
cmp
inc
lcall
pop
mov
push
sbb
jle
jge
and
loopne
and
adc
inc
and
xchg
or
push
fadd
dec
mov
pop
or
leave
add
pushf
xchg
or
aam
lock
jnp
test
pop
jae
dec
mov
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
lahf
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
aam
adc
inc
cmp
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
or
inc
and
cmp
je
or
mov
jne
arpl
inc
rclb
je
mov
mov
mov
sub
daa
or
sbb
pusha
cwtl
inc
push
cs
pusha
inc
add
inc
rorl
sub
sbb
orb
out
les
scas
xor
pop
lret
add
cmp
cmp
jle
or
mov
xor
pushf
xlat
test
dec
sahf
add
lds
mov
lret
and
pusha
rolb
add
add
or
nop
pop
sub
dec
add
pop
adc
test
shll
mov
add
push
clc
adc
adc
sbb
mov
pop
jmp
daa
jno
inc
push
cltd
lcall
ds
ret
adcb
xor
adc
repnz
sub
adc
sub
jg
out
pop
sbb
iret
adc
test
pop
mov
vcvtss2sd
and
mov
or
lods
pop
or
in
mov
inc
sbb
mov
inc
nop
insb
xchg
sbb
or
and
cs
pushf
insb
in
sub
add
xor
cs
adc
negl
push
addb
jne
lea
in
xorl
push
aam
mov
xchg
mov
ret
ret
nop
aaa
mov
mov
add
or
mov
lea
pop
shlb
adc
popa
test
inc
nop
pushf
ja
lods
push
mov
ficoms
loopne
jne
bound
mov
sub
mov
lea
int
inc
movsb
pop
insb
mov
or
and
or
dec
or
rcrl
ss
dec
and
fmuls
or
aaa
add
loop
dec
mov
sub
fidivs
sbbb
inc
add
jns
xor
cwtl
mov
xlat
shlb
leave
int
addr16
jmp
dec
dec
imul
scas
push
add
popl
out
add
adc
xchg
mov
cmp
scas
add
jo
sbb
cs
sbbb
je
fs
or
inc
push
ja
add
xchg
xlat
dec
cwtl
inc
cmp
jg
sarl
push
and
jl
push
pop
sbb
outsl
daa
or
mov
or
bound
jge
add
add
je
push
clc
xor
arpl
pop
mov
pop
xor
fdivrs
clc
lods
inc
add
je
sbb
adc
scas
xchg
loopne
cmp
sub
pop
ss
and
mov
pop
shll
cmp
and
cli
jecxz
in
jmp
aaa
pop
pop
inc
cmp
jl
inc
add
xor
mov
cmpl
mov
add
sub
andw
xchg
sbb
je
fnstcw
sub
and
inc
fldcw
pop
ret
cmpl
sbb
rcrl
pop
mov
lock
xor
and
scas
push
pop
or
mov
in
adc
adc
dec
je
inc
rcll
cmp
adc
add
xlat
pop
sbb
in
fiaddl
lret
adc
jbe
mov
or
push
pop
lret
aas
and
xchg
inc
and
fldl
add
and
andl
data16
movlps
add
and
ret
das
fnstsw
test
jmp
dec
adc
jmp
pushf
pop
cltd
hlt
ret
lahf
jne
jo
les
or
sbb
add
adc
push
mov
mov
xchg
mulb
mov
ret
ja
mov
cmpsl
ds
iret
push
adcb
testb
pop
adc
add
add
xchg
mov
nop
cmp
xchg
fdivrl
loopne
icebp
or
fisttpll
push
enter
dec
hlt
aaa
test
push
jno
inc
fsub
mov
mov
lea
mov
daa
subl
pushf
mov
incl
pop
push
inc
lret
call
arpl
daa
out
mov
imul
les
or
stos
inc
enter
sub
lock
and
xchg
fld
jnp
jno
mov
add
movsb
cmp
sbbb
pop
mov
pop
clc
fsts
mov
mov
pusha
cmp
push
add
push
push
or
popl
jne
add
out
loope
inc
or
and
fiadds
arpl
push
rolb
adc
pop
movsb
jnp
inc
in
xchg
sbbl
ljmp
movsb
cmp
pop
mov
fcomps
loop
lea
sub
inc
sbb
add
pop
adc
push
in
inc
xor
pusha
bound
movsl
rorb
fidivs
leave
xor
pop
pop
mov
scas
jns
test
ja
fmulp
lods
dec
and
and
aam
outsl
iret
jl
and
imul
sub
add
mov
push
xlat
fnstsw
movsb
push
dec
jne
and
xor
shlb
xchg
movups
mov
pop
jecxz
jmp
xchg
test
sub
sbb
movswl
jg
imul
xchg
pop
fbld
push
mov
dec
jne
mov
nop
in
sub
push
cmp
je
popa
mov
and
or
add
test
pop
pop
xor
rcll
push
cmp
roll
iret
xchg
xor
jp
jecxz
lret
pushf
pusha
loopne
pop
es
mov
dec
pop
sarb
or
rolb
cmp
outsb
fsts
movsl
je
or
imul
dec
mov
or
pop
cli
mov
jne
pop
inc
addl
dec
dec
mov
mov
sti
mov
rolb
xor
sub
loopne
xchg
jo
sub
jns
mov
cmp
dec
push
mov
jmp
mov
push
stos
loopne
scas
cltd
lock
fstl
or
cmpb
shll
or
lods
xchg
jge
in
add
add
fildl
lock
mov
int
mov
mov
fs
push
loope
fmuls
and
dec
pop
ss
enter
dec
inc
lods
movsb
mov
xchg
out
lahf
pop
sbb
inc
xor
or
adc
push
sbb
out
adc
sbb
jp
testb
inc
mov
and
loope
mov
sub
push
pop
push
pop
add
mov
cmp
cmpsl
lea
mov
cld
dec
mov
js
add
jge
pop
mov
cwtl
mov
or
add
push
jb
jmp
lea
shlb
sub
int3
ret
sbb
add
mov
mov
test
lsl
add
call
or
and
rcrb
jo
fistl
push
popf
lods
insb
das
arpl
call
add
int
xchg
pop
ficoml
add
scas
lea
adc
mov
push
xor
push
push
sti
loope
sbb
in
xchg
jo
imul
adc
mov
xchg
in
dec
jno
popa
sub
iret
fnstsw
iret
push
pop
mov
dec
sbb
xchg
insb
mov
adc
jecxz
aam
or
or
test
add
pop
das
imul
cmp
arpl
xor
cmpsb
sbb
movb
sbb
adc
jecxz
push
sub
mov
add
imul
das
enter
dec
aam
adc
xorl
in
or
jne
adc
or
inc
rcll
pop
inc
in
sub
lods
cwtl
in
adc
xor
fdivs
inc
aad
adc
sbb
fs
daa
mov
popa
in
mov
out
mov
or
testl
call
imul
fcoml
addr16
sub
sbb
fsubs
scas
fisubl
push
divb
or
aam
pop
jmp
rcrl
pop
ss
pop
popf
cmp
enter
xor
pop
scas
fneni(8087
push
mov
mov
pop
popf
jne
inc
sbb
aam
cmp
test
push
lret
xlat
sbb
rcrb
add
inc
in
adc
and
test
xchg
cld
out
cmp
adc
pusha
sbb
push
xor
imul
fisttps
popa
mov
push
stc
adc
jmp
inc
mov
pop
cmp
jo
xor
in
inc
scas
and
dec
or
lods
pop
adcl
jmp
rcrl
setp
sub
fsubs
cmp
pop
out
cwtl
out
sub
adc
fst
cltd
add
daa
or
push
roll
jns,pn
xchg
pop
call
sbb
pushf
bswap
push
enter
xlat
pop
ret
jle
jmp
cmp
push
xchg
popf
lock
sbb
sbb
add
les
shlb
fs
lcall
movsb
fidivrs
imul
pusha
sub
sbbb
xor
aad
mov
in
clc
cld
imul
hlt
sub
aaa
push
add
jbe
push
cmp
aam
jo
ret
mov
sub
push
xchg
gs
hlt
add
frndint
cmp
add
sbb
add
pop
jb
lock
and
cmp
orl
jbe
shr
ja
inc
arpl
lahf
adc
or
leave
xchg
xchg
cmp
fmuls
sahf
mov
adc
das
ljmp
je
scas
add
and
jns
jns
mov
lea
fimull
mov
or
pop
add
fldcw
loop
into
aam
das
sbb
jae
in
hlt
adc
adc
add
jns
mov
add
fwait
mov
cmp
xchg
sub
xor
and
ss
push
or
testb
mov
aas
orl
mov
sbb
xor
fs
daa
cmp
ret
cmp
cltd
jnp
or
mov
mov
loopne
stos
nopl
jbe
mov
mov
jne
mov
or
push
push
mov
pop
or
add
leave
mov
stc
in
pop
xchg
pop
lea
outsl
push
mov
dec
add
pop
hlt
pop
inc
add
std
sub
lahf
lret
mov
loopne
push
lret
inc
jp
es
pop
and
push
mov
inc
fsubrl
sub
mov
and
sbb
xchg
inc
das
aad
lret
mov
xchg
pop
add
adc
or
xlat
out
push
lcall
out
jmp
hlt
inc
xor
mov
or
out
add
je
sti
adc
ds
add
jl
xchg
xor
test
or
mov
gs
imul
push
jo
jle
pop
gs
mov
xchg
std
iret
movsb
test
mov
pop
cmpb
roll
cmpsl
and
popa
enter
mov
mov
push
jo
fwait
push
loop
inc
jmp
sbb
adc
lock
loopne
jmp
mov
cld
pusha
rcl
lock
mov
add
popa
adc
lds
dec
iret
jl
push
pop
adc
fdivrl
dec
xor
cmpb
jo
push
push
fstpt
xchg
out
sti
out
popa
movsl
lret
or
sub
push
nop
mov
sub
call
adc
gs
cmovns
add
je
pushf
fmuls
pop
and
xor
add
xchg
mov
mov
mov
sub
out
lock
cmp
add
pop
icebp
or
cmpsb
hlt
sbb
or
insl
mov
loop
sbb
pusha
and
add
lcall
or
sub
adc
gs
pop
mov
adc
clc
jge
shr
fisubl
enter
inc
cmp
adc
rcrb
jg
enter
jl
mov
jno
roll
add
fisubl
imull
mov
or
pop
pop
test
imul
mov
adc
mov
xchg
sbb
jae
jl
sarb
jns
faddl
repnz
in
jns
sti
call
push
dec
jae
roll
iret
insb
push
mov
pop
inc
push
test
add
xchg
test
daa
fisttps
in
push
enterw
rclb
lcall
jnp
ficoms
cmp
loope
call
xor
repnz
and
adc
repnz
fsubrl
arpl
cmp
adc
cli
sub
es
stos
sbb
cmp
cli
push
addb
cmc
fs
xchg
lods
inc
push
sbb
ret
push
lods
popf
dec
pop
or
fwait
mov
add
jo
lcall
faddl
cld
inc
pcmpeqb
loop
aaa
xchg
in
sbb
daa
push
mov
sub
pop
jo
push
aas
outsb
push
jmp
in
fdivrl
pop
adc
jae
mov
and
iret
dec
dec
or
ret
cmp
wbinvd
dec
push
jge
mov
daa
adc
push
cmc
ret
xchg
or
int3
sti
add
mov
inc
addr16
xlat
shlb
add
fcomp
nop
xlat
or
push
xchg
ret
and
rorl
dec
mov
notb
mov
out
test
mov
sbb
add
out
js,pn
push
sub
add
jle
aad
jmp
mov
fdivl
mov
hlt
mov
sbb
jmp
mov
mov
nop
out
dec
shl
mov
lods
aam
jo
inc
sbbl
das
loop
bound
les
sbb
je
outsl
imul
push
sbb
jmp
xchg
je
test
dec
sbb
pop
cmp
jecxz
adc
mov
sub
fs
lds
das
xchg
scas
xor
das
xchg
arpl
and
and
sub
jbe
xchg
je
pushl
adcl
fstl
push
mov
stos
into
mov
ds
push
fistps
or
je
in
jecxz
adc
mov
or
test
mov
mov
or
add
lods
pop
hlt
and
lock
xchg
or
iret
mov
mov
ret
mov
aaa
out
mov
rolb
xor
dec
ja
and
les
clc
loope
out
adc
push
enter
imul
bts
jmp
lds
sub
popa
ljmp
push
xchg
adc
mov
aad
xlat
push
out
mov
add
rclb
stc
pop
daa
push
sbb
rorb
add
xchg
adc
push
mov
add
mov
jge
mov
cmp
push
push
push
and
adc
mov
inc
xchg
cld
fld
xchg
adc
adc
jb
sahf
sbb
push
fdivl
lret
inc
jae
push
push
mov
iret
inc
jo
pop
ja
adc
sbb
inc
lock
jmp
push
inc
aas
and
pop
or
ds
dec
cmpl
rorl
roll
mov
out
inc
imul
lcall
sub
or
out
push
dec
cli
sbb
inc
nop
pop
lods
lock
js
ljmp
jp
xor
mov
insl
add
out
adc
pop
hlt
mov
pop
scas
shrb
dec
fcoml
and
scas
shll
xchg
mov
lret
inc
mov
das
pusha
repz
and
pop
mov
pop
xor
push
jno
out
mov
aas
sti
inc
orl
mov
ds
iret
mov
or
and
sub
cmp
repz
pop
data16
and
lods
push
insb
jge
scas
push
pop
pop
and
and
pop
and
xchg
add
ret
adc
insb
mov
sarw
insl
das
pop
push
adc
push
mov
dec
shlb
sub
adc
mov
shll
repnz
loope
or
test
dec
and
nop
mov
gs
mov
dec
sbb
decl
stos
pop
aas
and
sbb
lock
xchg
mov
ret
ret
sbb
push
aam
mov
sbb
je
sub
je,pt
lahf
loop
jae
ljmp
jns
mov
xor
scas
dec
es
inc
inc
push
dec
mov
rcll
adc
inc
push
call
cmp
and
jg
sbb
sub
add
testb
inc
test
test
test
clc
inc
popa
subb
mov
mov
inc
inc
call
jmp
in
adc
push
sub
dec
rcr
mov
cmpsl
xchg
or
sbb
push
inc
push
lret
push
sub
hlt
push
add
loope
sbb
pushf
add
or
and
mov
leave
mov
pushf
add
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
icebp
add
mov
or
nop
out
mov
int3
lock
aam
xchg
cli
inc
inc
adc
inc
bound
test
into
inc
cld
mov
mov
ja
sbb
dec
cld
shl
rol
jp
dec
cmpsl
in
push
daa
xlat
fidivrs
ret
clc
clc
iret
mov
mov
jmp
lret
sbb
and
adc
lds
mov
movsl
add
cmpsl
mov
sarb
dec
scas
add
push
mov
cmp
stc
dec
call
clc
das
inc
add
lret
cli
fisttps
mov
sub
aas
sbb
xor
push
out
xlat
xchg
je
arpl
or
jecxz
mov
adcb
fidivl
cmpsb
push
int
push
ret
clc
adc
push
int
movsb
pop
repz
and
cmp
dec
ja
ret
mov
mov
cs
fldenv
ss
dec
mov
add
push
add
cs
fadds
and
jo
xor
pop
inc
push
shl
or
cs
insl
mov
cmpl
clc
lods
cmpsl
pop
lea
out
inc
jge
jecxz
pop
dec
jmp
sbb
cwtl
es
ret
fxch
jecxz
jno
and
add
aas
ret
cmp
or
loopne
mov
fsub
jns
dec
or
dec
clc
repz
sbb
ljmp
sub
push
mov
add
add
mov
pushw
xchg
dec
pop
mov
jb
mov
jne
jmp
mov
int3
sbbb
bswap
ficoms
cli
jge
cmpb
jg
out
cmp
add
adc
adc
cmpl
aam
and
dec
cmpsb
std
cmpb
add
enter
mov
mov
mov
or
nop
inc
add
mov
pop
add
mov
xchg
jne
dec
ss
enter
push
jecxz
gs
add
cmpb
mov
pop
out
loope
dec
cmp
push
rclb
adc
push
sbb
jo
pop
push
mov
sbb
enter
mov
and
mov
inc
add
cmp
mov
or
sub
jg
jge
push
mov
call
out
xchg
sbb
push
pop
or
sbbl
cmc
pop
pop
filds
aad
adc
je
sbb
pop
fmull
push
inc
test
mov
testb
push
jns
and
clc
and
pop
hlt
push
out
addr16
push
xor
push
add
mov
xchg
jg
dec
jp
xor
not
loopne
push
adc
dec
pop
dec
sbb
test
rcrl
xor
test
mov
or
cmp
addr16
adc
mov
cmpsl
xchg
cmp
mov
adc
cmp
xor
lahf
sbb
lcall
dec
mov
inc
and
mov
xchg
sub
clc
fcompl
dec
push
inc
rcll
into
loope
hlt
test
shll
stc
dec
loop
test
jle
or
imul
dec
and
mov
jb
out
ljmp
mov
xchg
icebp
stc
xor
in
mov
mov
lret
push
or
jge
xor
in
pop
xor
and
mov
into
or
or
es
ficompl
or
sbb
or
orw
stos
lock
divl
fldt
mov
daa
sbb
sbb
sub
mov
inc
push
push
push
adc
push
or
shl
adc
jo
mov
pop
push
jmp
or
sbb
xlat
push
das
inc
sbb
or
pop
mov
jnp
cld
testb
inc
mov
or
and
ds
scas
inc
pop
push
je
addr16
pushf
sub
bound
xchg
push
clc
mov
dec
sbb
xchg
and
cmp
aam
mulb
les
std
inc
add
xchg
and
or
pop
data16
and
mov
pop
adc
rclb
adc
fsubrs
inc
aam
repnz
orl
movsb
cltd
cmp
inc
push
adc
cltd
clc
push
add
lock
or
adc
xchg
adc
sbb
test
stos
cli
add
into
adc
jecxz
call
sbb
adc
xorb
je
jp
lahf
xlat
adc
and
ficompl
sub
lods
andb
push
push
cmp
push
or
ficoml
fwait
push
setne
mov
add
pusha
push
fnstcw
sbb
jo
and
mov
dec
gs
outsl
jo
push
push
adc
aas
add
jb
ffreep
and
fwait
pop
and
push
ss
inc
inc
pop
inc
idivl
in
mov
decb
add
pop
xlat
test
lret
push
mov
es
mov
inc
dec
ja
pop
call
pop
add
xor
call
cs
jne
hlt
dec
call
cwtl
mov
jmp
test
push
push
repz
scas
or
in
mov
inc
cmp
mov
or
data16
pop
dec
in
sbb
xor
frstor
and
in
sbb
mov
xor
inc
dec
jne
les
ret
or
push
imul
fsubrs
dec
push
push
addb
sbb
lcall
sbb
jmp
sbb
dec
aad
adc
ffreep
scas
inc
adc
ljmp
daa
adc
add
xor
mov
push
sub
jl
adc
inc
add
leave
push
enter
movsb
push
sub
jp
push
or
aas
orb
jg
push
dec
cmp
mov
xlat
xor
gs
ret
sub
nop
pop
xlat
call
into
mov
pop
mov
or
sbb
andb
jmp
sbb
es
mov
inc
add
clc
scas
icebp
and
fs
xchg
ljmp
or
add
adc
les
mov
aam
rorl
jo
hlt
add
cmp
lahf
pop
sbb
inc
pop
jecxz
cmpsl
or
inc
sarb
cmp
push
andb
movsb
xor
dec
loop
and
or
pop
xlat
xchg
push
loope
xchg
jne
es
and
push
push
sbb
cmpsl
add
mov
mov
and
lahf
mov
imul
insb
hlt
or
cmp
or
cltd
pop
mov
mov
mov
cmpsl
xor
xor
inc
mov
mov
add
mov
push
test
inc
jl
jle
fbld
cmp
je
int
add
xchg
shll
ds
or
add
rol
dec
or
push
pop
add
and
adc
adc
push
in
pusha
dec
add
loope
sbb
jo
lods
add
add
sbb
jmp
ret
xor
ds
in
pop
out
inc
push
pop
ss
andl
push
xlat
jns
cli
inc
imul
cmp
lcall
push
sub
or
arpl
lcall
aaa
dec
dec
das
test
inc
mov
rorb
inc
je
dec
push
fwait
mov
xor
sbb
xlat
sub
adc
out
cmpb
mov
push
loopne
and
adc
rorl
or
jecxz
jo
gs
lods
mov
es
ficompl
adc
and
inc
pusha
scas
frstor
wrmsr
push
push
pop
mov
add
or
dec
addl
add
insb
andb
adc
iret
enter
pop
cld
out
adc
jge
test
add
jp
loopne
shll
dec
adc
sahf
lea
adc
int3
sbbb
push
test
rorb
iret
push
adc
and
add
add
add
xlat
pop
adc
es
movsb
cmpsb
push
ficoml
jle
and
cs
add
add
inc
lret
mov
negl
pop
sbb
sbb
or
nop
push
and
jle
sbb
cmp
inc
lods
out
insb
pop
jmp
loope
adc
push
adc
add
dec
mov
add
pop
fs
xor
iret
stc
inc
cli
push
push
movsb
hlt
inc
push
inc
orl
sub
in
cwtl
insb
and
pop
stc
pop
call
hlt
add
adc
mov
add
arpl
and
clc
jne
jmp
lret
push
or
mov
cs
call
inc
stos
mov
add
xlat
cmpb
clc
mov
push
fwait
inc
adc
test
enter
push
sub
inc
adc
add
fsub
dec
xchg
fcompl
push
cmp
rolb
or
inc
cld
mov
fcompl
inc
dec
pop
daa
decl
and
sub
add
out
sub
add
sbb
push
nop
push
push
outsb
sbb
lahf
orl
and
or
sbb
push
push
xlat
adc
incb
lcall
in
mov
sub
pusha
cmp
adc
sbb
lds
adc
mov
arpl
sbb
mov
add
pop
add
sbb
or
es
cmpsl
negb
ja
push
test
ret
inc
loopne
inc
sub
sub
mov
sub
and
sub
pop
lret
stos
dec
cs
sbb
or
or
push
mov
push
mov
or
cmpsl
push
push
push
push
adc
jecxz
xchg
cmp
pop
inc
and
pop
mov
add
xor
and
inc
or
add
adc
cmp
cmp
push
mov
insb
push
mov
mov
pop
dec
mov
cmpb
add
ja
mov
dec
clc
mulb
mov
pop
or
add
jmp
mov
add
pop
add
fisubrs
idivl
fisttpl
jbe
mov
pop
jo
inc
push
or
add
sub
mov
add
add
add
pop
iret
dec
addl
sbb
add
mov
and
les
cld
outsb
and
jbe
pop
paddq
push
pop
inc
pop
inc
dec
ret
push
pop
cmpsb
dec
pop
add
mov
cmpsl
sbb
adc
inc
pop
call
xchg
outsb
imul
mov
cld
push
xchg
mov
mov
stc
ss
cld
push
jo
clc
maxps
cmp
xor
adc
jns
xor
mov
lret
mov
in
sahf
mov
mov
and
cld
in
std
pop
mov
jmp
cld
pop
test
dec
int3
mov
popa
add
fstpl
sbb
mov
mov
inc
pop
popa
cltd
adc
daa
or
lret
les
int3
dec
add
inc
mov
adc
out
mov
mov
or
mov
movzwl
dec
dec
dec
cmp
je
jbe
dec
dec
dec
dec
js
jp
dec
dec
dec
dec
jl
jle
dec
dec
dec
dec
pusha
popa
bound
dec
dec
dec
fs
dec
dec
dec
push
dec
dec
dec
insb
insl
outsb
outsl
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
dec
dec
xor
ss
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
ds
dec
dec
dec
dec
and
and
daa
push
jno
and
dec
sbb
inc
mov
inc
push
or
mov
add
mulb
outsl
or
mov
push
es
jo
getsec
leave
addb
arpl
dec
sbbl
or
xchg
ds
outsl
outsb
je
imul
cmp
or
mov
popa
sbb
sbb
stc
mov
jae
addb
pusha
seto
add
pop
xchg
mov
jae
je
fidivl
dec
lods
fists
jns
loope
test
mov
inc
add
cltd
enter
je
arpl
adc
mov
jecxz
outsb
gs
xor
gs
cmc
sarl
add
jae
add
cs
into
es
outsb
int
sarb
pop
jo
outsl
sbb
push
inc
pop
idiv
inc
popa
jae
add
sbb
or
sub
jl
or
add
testl
iret
or
bswap
js
inc
idivb
push
push
push
dec
outsl
jo
je
push
andb
sbb
or
out
frstor
nop
and
add
sbb
adc
xor
pop
idivb
aas
mov
loopne
pop
mov
cmp
pop
adc
fdivl
ja
and
inc
jb
fimull
pop
xor
bound
jno
fiaddl
jl
jp
fistps
sbb
je
adc
cs
inc
imul
pop
inc
outsl
jb
jae
es
cmpsb
loope
and
add
jnp
push
and
pop
or
adc
sbb
filds
incl
jbe
push
aad
jmp
inc
lahf
mov
push
or
inc
xor
ja
popa
push
push
test
pop
outsb
mov
add
and
mov
xchg
out
cmpsl
inc
xchg
insl
mov
rolb
out
cmpsb
cmpsl
out
mulb
and
cmp
adcl
pop
cmp
js
lcall
cmp
loopne
fst
add
rolb
aam
pusha
aad
adc
and
dec
les
das
pop
adc
ret
stos
aas
pop
sbb
inc
iret
adc
rclb
add
scas
les
aas
push
push
dec
test
movsb
inc
mov
add
cmp
mov
xor
xchg
cmp
jnp
sbb
xor
add
push
imul
cmp
pusha
addb
movl
and
bound
pop
sbb
ja
outsl
leave
xor
push
add
mov
pop
pop
sbb
lds
repnz
jle
cmpl
add
dec
bnd
imul
inc
inc
add
add
push
xor
nop
loopne
imul
jmp
test
mov
add
push
push
inc
je
dec
and
dec
jae
pop
and
sbb
jo
push
clc
inc
and
movzwl
cmp
add
out
xchg
add
pop
inc
pusha
inc
add
movsl
rorb
enter
inc
add
sahf
mov
adc
cmp
je
inc
add
imul
mov
lock
push
and
push
inc
popa
sbb
sub
lods
pop
sbb
push
movsl
push
and
adc
dec
imul
popa
add
pop
aas
mov
push
or
insl
cld
and
hlt
imul
fmuls
stos
mov
das
fmul
insb
jmp
pop
sbb
fcompl
sbb
push
fsubr
test
lret
es
in
rorl
aad
and
mov
sbb
lock
pusha
mov
adc
and
fdivrs
es
add
daa
pop
lds
sahf
fwait
clc
das
push
sub
mov
in
nop
mov
pop
inc
pop
push
jle
mov
dec
adc
sysret
pop
popa
fstpt
loopne
inc
bound
pop
fidivs
pop
and
ss
aas
pop
push
loopne
rclb
or
popl
and
enter
push
mov
out
pop
push
mov
cmp
fadds
inc
mov
or
xor
daa
cmpsl
xchg
ret
xchg
cmpsl
call
fwait
xchg
clc
xor
cmpsl
or
sbb
sub
insb
scas
sbb
addr16
insb
sub
imul
dec
arpl
addl
push
push
arpl
jmp
and
sbb
mov
jl
pop
int3
xchg
lods
pop
push
les
bound
jns
call
pop
add
push
cmp
movl
cvtpi2ps
add
xor
add
out
mov
das
dec
mov
push
push
add
out
jne
fs
insl
popa
addr16
xchg
mov
andl
sub
insb
cld
mov
inc
lock
push
lods
ret
nop
hlt
mov
push
mov
psubw
jl
inc
lods
jo
cmpsb
dec
jnp
inc
jno
mov
jae
in
in
outsl
lock
shlb
js
call
ds
jnp
xor
inc
mov
dec
mov
repz
cwtl
jge
sbb
or
lods
andl
push
jno
xchg
or
inc
aam
jg
and
je
and
sub
addb
ds
fwait
nop
inc
popa
mov
pop
pop
xor
jg
enter
jo
inc
pop
mov
xchg
sub
insb
xchg
enter
fimull
mov
push
mov
test
lods
in
popf
add
aas
nop
xchg
xchg
cmp
fmull
pop
push
popa
or
mov
mov
sbb
out
rcrb
push
fwait
call
push
dec
arpl
pop
js
xor
push
pop
fsubrl
and
jns
or
outsl
in
cmpsb
fmuls
add
inc
jns
jb
sbb
mov
mov
rcll
xchg
cs
push
cmp
stos
jbe
es
nop
sbb
cmp
ffree
pop
mov
pop
xor
enter
loop
adc
addl
rorl
add
inc
rolb
imul
or
nop
lock
mov
ret
push
push
sub
add
sbb
rorb
ffree
mov
add
sub
call
mov
inc
ss
dec
je
sbb
push
inc
ret
jne
cmp
jbe
mov
das
inc
aam
lock
inc
and
imul
dec
arpl
cmp
adc
and
stos
mov
dec
or
xchg
xchg
add
xchg
decl
xchg
push
xchg
das
pandn
inc
add
pop
stos
jno
add
push
push
xor
out
outsl
das
test
dec
lock
loope
cwtl
sete
mull
dec
push
shrb
cmp
mov
cmc
pusha
mov
and
dec
ss
imull
and
jbe
xchg
jo
nop
mov
pop
push
sub
cs
mov
add
xor
sub
out
aaa
push
add
outsb
and
je
fdivr
xlat
cmp
push
push
repnz
or
imul
cwtl
fs
jmp
adc
inc
push
jle
aad
enter
jae
sub
xchg
addb
pop
sbb
mov
out
adc
or
mov
xor
xchg
sbb
insl
jecxz
fucom
adc
xor
xchg
mov
lock
insl
mov
nop
xor
push
daa
iret
in
lods
or
adc
insl
inc
fdivrl
les
push
jg
mov
or
add
js
in
adc
cmp
cmp
or
sbbl
shlb
and
jmp
nopl
stc
packsswb
jb
outsl
outsb
inc
out
repnz
mov
outsb
pop
dec
insb
imul
das
stc
dec
popa
jbe
add
jb
insb
gs
xor
add
push
gs
insb
pop
andb
push
imul
push
push
cmpsb
xchg
pop
cwtl
iret
pop
gs
insb
outsl
ja
jmp
negb
jne
push
adc
jne
mov
pop
pop
or
jns
push
fadds
add
ja
cmp
inc
dec
stc
adc
data16
push
fdivl
lock
xor
popa
test
dec
pop
pop
jo
push
pop
lock
and
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
mov
aam
cld
insb
add
or
dec
shll
jg
gs
or
insl
das
push
jmp
jno
outsb
daa
pop
xchg
imul
lahf
sbb
sbb
xor
inc
pop
pusha
add
push
notb
shlb
jg
int
nop
mov
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
xorl
punpcklbw
insb
daa
or
aaa
das
or
add
aas
push
cmp
scas
jmp
ret
push
mov
out
pop
dec
out
pop
test
fisttps
dec
or
inc
xchg
mov
or
fcoms
aas
int3
testl
dec
inc
push
push
inc
push
add
inc
xor
inc
inc
inc
loop
or
jg
notl
dec
inc
dec
dec
arpl
xchg
cmpl
dec
dec
inc
push
dec
dec
push
pop
mov
cmpb
addr16
dec
dec
and
out
inc
inc
xor
dec
enter
movb
and
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
int
in
mov
push
push
dec
dec
push
dec
dec
mov
push
insl
imul
sbb
mov
nop
jl
inc
dec
push
mov
dec
inc
dec
mov
out
push
dec
pop
test
inc
inc
push
push
push
dec
push
inc
scas
mov
aas
in
inc
dec
push
mov
daa
xchg
test
js
push
mov
mov
jl
shl
add
orl
dec
jl
add
adc
add
mov
lock
orb
sbbb
add
add
repnz
mov
mov
lea
outsl
add
and
fyl2xp1
lea
mov
sub
prefetch
pusha
imul
insl
or
add
and
dec
pusha
xchg
in
sbb
mov
add
sub
push
fs
adc
mov
and
dec
aas
or
pop
xchg
mov
jno
test
es
into
rclb
test
or
jmp
lods
xchg
movsl
ret
and
jl
lcall
es
adc
inc
and
jns
ret
das
idivb
dec
popf
mov
and
xor
clc
subl
cmc
xor
ss
adc
lret
loope
ficoms
xor
or
and
cld
or
mov
arpl
scas
rcll
fcoms
add
push
cli
das
fcoms
inc
lea
adc
das
movsl
mov
pop
leave
mov
jae
xchg
jmp
mov
xchg
pop
push
cmp
jb
mov
pop
mov
sub
xor
adc
int3
sbb
and
mov
fwait
orl
test
pop
in
mov
xchg
enter
inc
cli
je
fldt
jmp
adc
lcall
add
jae
mov
inc
sbb
dec
fs
xlat
lea
incb
mov
push
adc
cmp
subb
inc
push
cmp
test
jo
xor
push
jl
pop
movb
push
fcomp
add
mov
jge
dec
push
mov
jmp
inc
fildl
mov
jae
or
jmp
mov
push
ljmp
xchg
or
or
int
xlat
pop
out
jmp
xchg
add
mov
inc
inc
add
jp
mov
repz
aam
outsl
loop
imul
mov
inc
sub
sub
mov
nop
push
inc
sub
imul
pop
add
jo
iret
adc
pusha
inc
xchg
xor
mov
sbb
insb
xchg
fwait
nop
sub
inc
imul
popf
hlt
mov
xor
neg
cmpsb
imull
jg
inc
push
das
fiadds
ficoml
jp
mov
add
test
andb
dec
imul
mov
or
aaa
adc
inc
sbb
shl
div
sti
xchg
pop
and
leave
add
or
pop
or
pop
sub
lahf
movsb
dec
loopne
inc
sbb
or
loopne
dec
add
cmp
fidivrl
sbb
nop
or
mov
cmp
test
loope
or
je
fwait
or
xorb
push
leave
test
je
jns
rclb
add
das
cmp
in
push
jne
pop
repnz
cs
jne
pushl
test
rcrl
mov
inc
test
inc
jp
mov
adc
and
call
pop
enter
loopne
mov
cmp
mov
sbb
leave
repz
lock
or
mov
sub
xchg
xchg
andl
lret
mov
jb
in
sbbl
mov
push
nop
or
xchg
inc
in
xchg
mov
ret
mov
push
nop
pop
push
lock
push
aas
sub
and
nop
inc
in
inc
fisttpll
movlps
mov
mov
inc
ds
pop
push
xchg
inc
inc
mov
adc
add
mov
lock
lock
xchg
in
push
popa
inc
fistpll
imul
mov
and
adc
fs
mov
clc
dec
jb
push
add
mov
lock
inc
jecxz
jns
add
adc
xor
hlt
dec
lret
call
lock
or
and
movsb
dec
push
aas
push
ret
inc
xorl
mov
xor
jmp
mov
movb
cs
push
inc
nop
add
ss
sub
mov
xchg
lret
daa
xchg
jo
pop
inc
add
or
xchg
lret
adc
dec
and
sbb
xor
inc
sbb
popl
add
lahf
clc
or
sbb
scas
mov
or
sar
aad
and
push
adc
inc
rclb
movsl
andl
sbb
mov
fidivrl
sarl
inc
mov
out
idiv
sbb
push
or
push
add
or
pop
or
or
dec
xor
sbb
xchg
lds
push
push
pushl
pusha
mov
dec
call
jg
pop
xor
sub
cmp
inc
mov
xor
shrl
or
sub
inc
xchg
and
mov
sbbb
sbb
add
jp
js
xor
push
rorl
pop
cmp
push
push
mov
push
in
cwtl
test
andl
iret
jge
push
insl
push
pop
or
pop
mov
or
imul
sbb
lea
clc
dec
imul
inc
push
mov
push
or
cmp
inc
push
pop
xor
insl
and
aam
test
imul
negl
sbb
pusha
lods
pusha
push
mov
ja
adc
ror
dec
movsb
xchg
jp
lea
mov
or
cmpsl
pop
xchg
ret
and
xor
xorl
add
stos
or
fidivrs
cmp
daa
rolb
mov
addb
mov
pop
out
dec
cltd
mov
mov
xchg
les
stos
mov
test
loop
rclb
pop
sub
fmuls
lcall
cmova
pop
adc
push
adc
lds
pushf
push
dec
and
and
std
dec
adc
das
mov
aam
fmuls
dec
pop
sub
popa
inc
xlat
stos
sbbb
movsb
dec
cmpsl
scas
xchg
pushf
mov
sub
adc
popf
add
or
pop
inc
jae
fildll
jl
dec
mov
and
mov
cmp
je
mov
pushf
out
nop
mov
movsl
pop
pop
aad
movsb
lods
add
mov
out
push
mov
push
and
cmpl
clc
sbbl
or
and
orb
jl
adc
adc
ja
jbe
sti
lock
not
and
mov
jg
cmp
je
ret
inc
sub
add
mov
gs
mov
imul
inc
and
jo
mov
pusha
xor
sbb
push
xor
and
sub
or
sub
push
adc
repz
inc
adc
sbb
testl
fcmovu
push
jo
daa
cmp
dec
and
push
movsl
xor
testl
pop
testb
pop
xor
sti
out
mov
add
mov
xchg
jl
mov
add
rcrb
mov
adc
nop
mov
imul
pop
pop
out
in
cmp
dec
inc
cmp
hlt
mov
mov
scas
cmc
dec
inc
fmuls
add
gs
add
inc
push
mov
rolb
sti
or
cli
dec
lods
daa
adc
fstpt
cmp
lea
sub
clc
add
mov
arpl
popa
lock
mov
lcall
popl
mov
in
popa
hlt
push
shlb
int3
jge,pt
mov
int3
js
dec
loope
push
adc
in
decb
push
sbbb
push
xor
adc
cmp
call
bound
jbe
cmc
fwait
insl
imul
in
pusha
jns
outsb
xchg
rcrb
bound
roll
cmp
mov
sbb
in
mov
sahf
lock
jle
fdivl
add
pop
in
in
xlat
fmuls
fimull
push
sti
sub
inc
pop
mov
mov
aas
imulb
mov
add
cs
hlt
adc
add
fcmovu
fisubl
push
mov
pop
shl
mov
testb
divl
shl
and
jle
sarb
pop
sar
mov
mov
pop
xchg
mov
aas
mov
aam
add
mov
loop
sub
pop
sub
test
sub
add
cmp
jo
test
push
stc
push
out
xor
pop
push
mov
stos
test
arpl
push
ret
push
insb
cwtl
stos
and
push
ror
inc
cmp
nop
lret
push
rcll
sbb
add
cmp
sbb
or
mov
push
push
push
jge
ja
sbb
mov
jnp
and
cmpsl
sbb
and
arpl
push
sub
dec
xor
jmp
jns
pop
mov
dec
add
sbb
lock
cmp
ficompl
das
inc
sbb
stos
daa
or
pop
clc
stos
popa
mov
loopne
movb
mov
ja
inc
add
stos
dec
in
gs
out
leave
movsb
mov
pop
call
add
fiadds
cmp
mov
sub
jecxz
add
loope
scas
and
mov
adc
push
mov
mov
or
outsb
and
aaa
add
add
dec
das
xchg
mov
imul
dec
fcomps
adc
aas
dec
push
es
mov
mov
subl
push
mov
pop
pop
push
ss
and
dec
jne
fidivrl
add
cmp
notl
adc
adc
sbb
push
inc
inc
push
dec
and
cmp
sbb
call
in
mov
push
loope
sbb
and
cmp
push
and
mov
enter
xor
jmp
jp
mulb
mov
sub
shl
mov
mov
jmp
fwait
addr16
sti
data16
insb
loop
mov
adc
adc
cld
push
mov
rcrb
out
push
push
incb
mov
jo
or
push
jnp
or
movsb
rdpmc
cmp
push
rorb
fldl
add
ds
ds
mov
inc
movzwl
lea
lock
pop
push
cmp
xor
daa
jmp
add
ss
data16
test
push
cld
icebp
arpl
das
scas
hlt
rolb
sahf
sub
cmp
mov
cwtl
pushf
mov
add
push
and
or
jl
pop
stc
ljmp
cmp
mov
add
rcrl
mov
lea
adc
cld
mov
or
add
pop
pop
mov
xor
push
push
dec
clc
jns
jae
push
xor
cmp
sti
fisttpl
jmp
es
pushf
orb
ret
popa
pop
cwtl
ss
jo
dec
loope
mov
movups
inc
mov
mov
dec
add
sub
and
es
sbb
loope
inc
add
add
inc
inc
ljmp
or
add
in
sbb
mov
call
lods
fnsave
mov
inc
jl
sub
or
push
push
jmp
cmp
test
das
cmpsb
or
mov
pop
xor
jge
orl
shrb
xlat
or
push
push
add
inc
in
pop
movsb
js
movsl
inc
mov
pop
push
push
inc
xor
sub
cmp
add
popa
push
test
es
jl
add
sbb
sub
and
stos
rcr
pop
pop
adc
movl
and
and
xorl
jns
adc
mov
repnz
sbb
cs
push
cmp
lock
adc
nop
mov
mov
add
push
dec
dec
fadd
xchg
jl
sub
fcompl
add
sub
testb
call
lock
mov
dec
cmp
fadd
das
lods
movsl
or
mov
cmp
xor
lods
jg
test
jle
cmp
jl
aaa
pop
iret
sahf
xchg
sarb
enter
test
clc
jle
test
push
dec
out
sbb
or
add
repz
push
pop
jne
inc
in
xor
loop
inc
cmp
mov
sbb
fsubl
adc
arpl
push
pop
cli
in
xchg
sbb
adc
mov
pop
fcomp
rcrb
leave
pop
mov
insl
movsl
xchg
sbb
scas
into
xor
jbe
in
xchg
push
and
push
sbb
popf
les
sub
inc
mov
jp
inc
data16
dec
or
inc
test
in
cmp
ds
ret
sbb
fisubrs
in
sub
loopne
es
cmp
gs
mov
xchg
hlt
movsl
cld
push
mov
inc
dec
jne
enter
cmp
pop
out
inc
and
xor
push
xor
cli
lock
pop
ss
repnz
add
sub
add
adc
mov
adc
test
shlb
mov
adc
jp
inc
xor
mov
enter
jbe
inc
xchg
movsb
or
mov
mov
mov
push
mov
cs
ret
sbb
xor
hlt
mov
sarb
add
push
int3
mov
repnz
push
mov
adc
sarb
mov
push
push
dec
outsl
xor
or
popf
pop
shl
push
and
rorb
add
rolb
aas
mov
and
test
in
pop
pop
push
stos
gs
loop
cmp
adc
push
xor
adc
xor
test
lods
ficomps
xchg
push
call
test
dec
jl
aas
data16
mov
pop
sbb
jb
xor
or
ret
outsb
or
jmp
adc
ds
add
or
jns
jl
cmovs
or
jle
lock
jmp
jge
pop
push
jl
in
and
test
sbb
cmp
insb
and
clc
icebp
dec
data16
or
inc
and
jae
mov
jbe
mov
add
sub
scas
xor
ljmp
mov
loopne
les
mov
orl
in
cld
arpl
adc
pop
or
mov
or
pop
pusha
bound
adc
xor
rclb
sbb
adc
pop
fucomp
push
jl
push
add
loopne
adc
lcall
mov
xor
fucomip
cmpl
pop
ljmp
push
int
mov
or
pop
mov
in
push
ficoml
add
sbb
mov
hlt
pop
clc
pop
enter
hlt
hlt
decl
dec
sbb
cmpsl
add
cli
loopne
jg
dec
jecxz
jl
sub
cmpsl
cmpb
lods
loop
ljmp
cs
pop
out
sbb
lcall
jg
add
flds
out
adc
fimull
pop
xchg
mov
pop
push
push
in
pop
xchg
call
imull
sbb
lcall
adc
in
outsl
sbb
dec
loopne
fsubr
js
mov
loope
imul
adcl
or
mov
add
sbb
rclb
jns
xchg
adc
fidivl
push
xchg
fwait
xor
mov
mov
add
lods
or
lods
data16
ss
cs
mov
mov
lods
cmpsl
mov
add
mov
jle
mov
jbe
js
add
lcall
in
in
cmp
xor
in
pop
fldt
sti
fcoml
clc
call
sarb
sbbl
add
addr16
sbb
sub
pop
or
lods
pop
movb
scas
adc
lahf
icebp
lods
mov
pop
mov
mov
dec
es
sbb
shll
sbb
adc
sub
mov
mov
nop
ret
pop
inc
mov
adc
adc
dec
insb
or
inc
cmpsb
adc
push
push
jne
mov
sahf
adc
and
push
adc
pop
mov
pop
insl
xchg
arpl
je
sub
adc
inc
sub
push
add
dec
dec
add
popa
outsl
clc
dec
pop
push
cltd
fadds
cs
mov
scas
mov
push
add
xchg
in
data16
cmp
or
or
and
cmp
xchg
mov
test
icebp
mov
ret
ja
popa
inc
mov
inc
push
shll
insb
sbb
push
pop
adc
push
adc
xchg
jae
cmp
xchg
pusha
loope
cmpsl
cmp
pop
ret
push
aaa
bound
pop
bound
sub
cmp
rorb
inc
rolb
lcall
outsl
jb
test
movsl
add
in
fidivrs
push
add
dec
ds
ds
pusha
dec
push
xor
inc
adc
ss
out
dec
stos
push
or
inc
sbb
in
ljmp
push
sbb
xchg
fcompl
add
repnz
ds
push
adc
mov
nop
daa
stc
hlt
mov
call
repz
lock
lock
fwait
pop
in
inc
inc
bound
xchg
arpl
rcll
ja
popw
gs
arpl
insl
jo
pop
sar
pop
and
pop
sbb
xorb
xchg
bound
cmpb
inc
dec
jne
adc
add
add
sbbl
icebp
or
movsb
mov
jl
sbb
add
sbb
adc
push
filds
lea
pop
mov
das
loope
pushf
and
mov
xor
mov
or
xchg
xchg
mov
and
test
xor
aad
rorb
push
clc
mov
mov
pop
sbb
cltd
movsl
shrb
add
cld
push
cmpsl
lea
test
add
xchg
add
fisubrs
bound
adc
push
arpl
mov
and
mov
push
call
push
add
cwtl
imul
pop
dec
orl
into
jno
data16
or
and
cmp
js
ds
test
daa
cmpl
seto
daa
mov
popf
and
push
add
dec
or
push
adc
dec
xor
sub
fwait
test
sbb
jmp
cs
sub
xchg
pop
pusha
gs
ds
mov
outsb
fnsave
jg
xlat
pop
jne
das
add
inc
mov
or
pusha
jecxz
fdivr
push
dec
or
adc
int
mov
inc
pop
dec
scas
icebp
out
int3
les
adc
push
push
in
pop
das
sbb
or
sub
test
adc
jno
cvttps2pi
sbb
push
fildl
and
cld
or
mov
push
pop
xchg
lret
testl
popa
enter
nop
cmp
inc
pusha
mov
pop
adc
adc
std
sbb
adc
mov
and
xor
add
gs
xlat
inc
push
aas
aas
jno
arpl
dec
cmp
ffreep
and
cmp
and
arpl
lcall
mov
inc
add
push
jge
rcrl
sbb
xor
sbb
pop
xchg
xor
cmpsl
sbb
push
and
enter
jo
push
mov
jns
jns
cmpl
push
adc
fwait
dec
dec
mov
loopne
xchg
jno
sbb
movsl
test
sub
xchg
push
or
inc
fistpll
push
push
jno
sti
xor
pop
add
add
dec
leave
mov
bound
cmpl
xchg
add
je
xor
pop
or
jecxz
arpl
insb
inc
add
jbe
cmpsl
adcb
aaa
add
cmp
and
int
inc
add
xor
push
mov
je
orl
push
or
mov
sbb
adc
pusha
aaa
icebp
add
add
pop
rcrl
in
shll
fucom
mov
mov
insb
imul
sbb
pop
les
das
div
cli
dec
or
loop
or
jge
fimull
mov
cmp
xchg
mov
sbbb
outsl
jg
dec
push
xchg
scas
pop
sub
push
pshufw
out
imul
cmp
clc
pop
aad
das
bound
inc
jle
and
mov
and
mov
xchg
daa
aaa
jecxz
push
sbb
or
sbb
dec
push
dec
movsb
outsl
test
pop
or
loopne
push
jne
cmpb
outsl
xchg
dec
call
mov
push
fs
test
jmp
push
xor
push
dec
sub
icebp
cmp
inc
sbb
or
and
pop
repnz
and
and
insb
pop
adcl
add
and
mov
adc
test
jle
push
push
in
das
popf
cs
mov
sub
subb
cmp
stos
push
dec
popa
mov
push
cmp
xchg
adc
mull
or
out
sbb
xchg
xor
or
add
loop
xor
and
push
cmp
mov
push
mov
pop
pop
outsb
sti
cmpsl
add
movb
push
and
and
les
push
mov
sub
and
xor
push
mov
sub
inc
sub
int3
inc
sub
mov
sub
sub
inc
sub
pop
mov
mov
inc
pop
es
iret
inc
cmp
and
cmp
loopne
imul
or
fdivl
sbb
add
cmpl
fsubrs
in
or
push
push
mov
orb
loope
and
push
in
fs
mov
push
push
ret
adc
adc
ds
mov
mov
bound
int
push
js
inc
sub
adc
xor
dec
cmp
js
loope
xchg
pop
sbb
or
in
insl
aas
xor
add
std
adc
jnp
test
insl
into
inc
cmpl
ret
add
leave
and
enter
and
pop
mov
or
inc
pusha
icebp
xor
rolb
out
pushf
pminub
rcrl
sub
sbb
addb
sub
add
fs
and
push
out
sbb
fcoms
jns
adc
test
push
or
test
addr16
or
push
dec
imul
arpl
add
sub
divb
incb
jo
ja
xor
xchg
and
dec
add
ss
adc
in
xor
shll
ja
and
xor
sbb
inc
push
nop
out
or
mov
push
aad
cli
insl
xor
gs
sbb
cwtl
fdivrp
mov
aaa
data16
and
lcall
in
les
aad
add
xor
xchg
dec
pop
and
add
push
jo
xor
add
or
ret
push
or
daa
cmp
orl
and
fs
movsl
cltd
test
cmp
cmpl
je
xchg
loopne
pop
add
frstor
push
dec
jl
loop
jne
inc
ja
dec
enter
sub
cltd
out
mov
add
sbb
mov
mov
sbb
mov
adc
adc
dec
sbb
stc
jae
jbe
mov
and
les
or
cmp
and
loopne
pop
or
scas
int
lcall
data16
jle
repnz
subl
sar
hlt
mov
add
ja
mov
out
adc
mov
push
pushf
fsub
and
mov
mov
lret
sbb
popf
andb
push
push
in
ret
out
cmpl
aad
insb
into
or
push
mov
lea
dec
loop
mov
lea
dec
mov
lods
pop
fistl
mov
adc
cmpsl
cld
add
push
xchg
xchg
test
std
out
enter
xchg
dec
lock
push
and
sub
sti
fwait
dec
or
jge
mov
xorb
lcall
je
add
push
aaa
sbb
lock
push
sti
mov
stc
cmp
and
imul
add
je
cmpb
jl
arpl
imul
insb
dec
xchg
adcl
push
add
jp
cmp
mov
xchg
stc
or
lahf
aam
ss
add
or
fmull
mov
jp
inc
iret
imul
and
jbe
jb
addb
push
pop
sbb
xor
xor
or
fisubl
jmp
pop
push
adc
push
add
pop
divl
push
push
mov
pop
das
rcrb
lds
in
loope
sbb
and
or
push
push
sbb
inc
movsb
or
jg
nop
and
fistps
pop
and
push
test
mov
jmp
sbbl
push
dec
fs
clc
sub
push
mov
gs
inc
pop
orb
mov
loop
jmp
or
cmp
xor
aad
jmp
bound
jle
dec
cmp
jo
sbb
jecxz
dec
xchg
push
int
pop
jae
adc
sbb
pop
or
sbb
shlb
xchg
sbb
and
popf
clc
les
mov
lods
mov
and
addb
std
push
ret
pop
jo
jmp
aam
cmpb
imul
or
inc
lock
pop
mov
insl
adc
pop
cltd
jmp
xchg
inc
adc
or
mov
in
sub
sub
push
mov
shrl
or
xchg
stc
scas
test
xchg
rol
pop
addl
push
cmp
push
je
shlb
push
loop
inc
ret
pop
subl
or
jmp
pop
pop
loopne
push
mov
and
call
fisubs
add
repnz
mov
or
pop
or
in
push
or
cmp
ss
scas
sbb
or
jb
cmp
je
aas
xchg
pop
in
icebp
shll
pushf
mov
cmp
in
call
jge
sub
sbb
or
lods
adc
mov
ror
inc
push
repnz
les
movl
fiaddl
push
call
call
js
add
popl
and
and
xchg
or
out
pop
in
shlb
push
pop
inc
insb
addb
mov
cmp
mov
pop
sub
add
or
pop
xchg
arpl
mov
push
das
lods
enter
dec
je
and
pop
pusha
dec
in
les
cmp
outsb
dec
xlat
xor
xor
jmp
xor
pushf
mov
mov
movsl
test
mov
or
lods
sbb
or
in
in
or
jne
imul
test
sub
pop
pop
add
pop
les
rcrb
shr
loopne
add
sub
mov
movsl
cmp
ljmp
pop
sti
cld
shlb
cltd
stos
mov
adc
lods
mov
add
sub
jne
xor
pop
insl
subb
test
testb
pushl
lock
xchg
fwait
pop
sub
shll
push
xor
xchg
inc
pop
ror
test
and
jge
pop
dec
stc
add
and
mov
sbb
dec
xorl
push
out
movsl
and
pop
shl
mov
adc
mov
lock
pop
mov
mov
aad
clc
push
lods
xchg
cmp
xorb
fs
paddb
add
jne
loopne
inc
sub
bound
inc
imul
adc
adc
inc
cmc
es
adc
xor
adcb
cmp
int
enter
mov
or
orb
xor
es
std
adc
cmp
and
sti
mov
sub
or
or
adc
mov
lcall
add
jp
leave
or
mov
and
cs
add
outsb
test
adc
cmp
test
xchg
adc
dec
inc
xlat
je
icebp
add
not
add
inc
pop
mov
and
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
imul
int
je
adc
repz
sbb
sbb
jne
sub
or
addr16
dec
adc
add
movsl
dec
nop
sbb
js
push
push
adc
or
sbb
jl
lret
xor
push
jno
mov
jne
jecxz
mov
sub
outsb
inc
sub
push
or
inc
adc
add
scas
mov
cmp
mov
push
divb
push
insb
pop
bound
fbld
mov
and
inc
faddl
push
xchg
out
movl
xchg
inc
add
sub
and
dec
faddp
fcomps
call
dec
mov
out
push
fmull
fwait
sbb
adc
cmp
cs
insl
push
and
lods
ss
fldt
or
int3
sub
xchg
mov
fsubrl
push
pop
daa
ret
lcall
jbe
scas
xchg
test
repnz
pop
cmpsl
hlt
cmp
pusha
stos
add
in
nop
add
xor
xchg
and
mov
clc
inc
cmp
and
loopne
xor
insl
lcall
mov
fisttpll
adc
adc
loopne
pop
daa
sub
push
adc
push
sbb
inc
mov
ret
shrb
jne
ret
or
out
xor
pop
inc
push
mov
test
daa
clc
mov
xorb
jbe
mov
test
or
nop
sub
pop
je
dec
incl
mov
test
push
push
xchg
stos
and
test
sbb
mov
pop
mov
sbb
or
xor
mov
stos
xchg
pop
out
mov
inc
xor
fimull
and
in
sbb
add
add
mov
cwtl
jno
pop
fwait
mov
inc
in
push
xor
mov
pusha
pop
adc
mov
shlb
add
in
and
cmp
mov
mov
popf
repnz
mov
and
inc
dec
mov
fadds
push
ret
adc
std
loopne
xor
and
stc
push
adc
orl
andb
or
call
push
inc
mov
mov
or
lret
cmp
xchg
xor
sub
push
jecxz
imul
in
loope
or
mov
xor
lock
cmpsl
test
pop
jge
in
fwait
add
jg
call
add
into
and
inc
dec
lock
iret
daa
push
lcall
jb
nop
xchg
xor
push
scas
insb
mov
pop
inc
dec
xor
cs
gs
scas
add
aam
or
lret
dec
mov
sbb
test
nop
dec
fildl
dec
mov
cmpsl
ret
arpl
adc
iret
loopne
push
test
dec
jle
jge
loopne
ds
dec
ljmp
sub
mov
xchg
lods
xchg
nop
jl
leave
hlt
mov
mov
or
cmp
inc
out
add
loope
inc
cmp
hlt
or
sub
add
push
sysenter
sbb
push
or
push
and
dec
lock
sub
push
fwait
mov
lock
cmpsb
lock
insb
inc
lods
imul
xchg
sub
xchg
imul
js
cmp
shlb
popa
popa
ret
or
rorl
lret
lea
xchg
test
inc
mov
addb
cli
in
pop
je
sub
cmp
rolb
mov
insb
popl
jge
sub
dec
xchg
dec
add
test
adc
mov
xor
mov
mov
xchg
or
or
data16
scas
icebp
or
jg
xchg
sub
xchg
push
and
xor
cmp
test
dec
or
or
mov
sbb
das
mov
imul
or
cmp
sbb
mov
enter
xchg
push
mov
xchg
pop
rcll
imul
out
pop
lea
hlt
cmp
mov
clc
mov
pop
jp
sbb
dec
sbb
or
sub
jo
ss
pop
pop
lock
test
jecxz
clc
xor
cld
cld
lods
fwait
shlb
push
mov
adcb
push
or
insl
mov
movb
leave
push
lahf
xor
int3
orl
add
loop
mov
pop
push
or
mov
xor
jo
das
repz
lret
loopne
adcb
test
mov
popa
fwait
cld
pop
push
xchg
ret
ret
lods
add
inc
in
adc
movsb
adc
and
sbb
mov
pusha
sbb
mov
lea
jg
shlb
push
dec
sub
scas
rol
jno
add
cmp
lds
add
pop
cmp
test
dec
pop
or
sbb
push
or
xchg
adc
xor
arpl
add
fisubrs
pop
gs
nop
sbb
pop
nop
add
inc
shll
ret
imul
dec
add
xor
pop
popa
aam
pop
dec
inc
or
inc
leave
push
mov
xlat
nop
icebp
xchg
out
pop
and
inc
ds
test
inc
pusha
or
fcmovu
out
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
loope
xchg
pop
adc
sub
clc
out
mov
pop
stos
movsb
push
out
lock
add
ljmp
jno
mov
popa
xorb
add
jle
adc
push
sbb
and
pop
bsf
push
sbb
push
sub
mov
ds
sub
mov
insb
add
jnp
add
lods
adc
lret
lock
jle
mov
sub
mov
add
sub
movl
sbb
xlat
inc
cmp
lock
mov
xor
or
adc
pop
sbb
mov
movsb
xchg
sub
cmp
and
cmp
in
cmp
das
jmp
mov
dec
imul
pop
jbe
stos
rcrl
adc
inc
cmp
jne
in
mov
rcrl
ja
stos
or
and
cli
pop
pop
xor
adc
sbb
ret
adc
insb
xchg
or
loop
jb
gs
xor
adc
call
sbb
or
sbb
inc
es
add
int3
pop
test
or
fisubs
adc
data16
add
test
ja
jae
repnz
lret
loope
out
sub
inc
pop
stos
add
cmpsl
inc
pop
xchg
pop
aaa
iret
jne
xchg
icebp
adc
dec
sarb
push
notl
xchg
hlt
mov
popa
cltd
fnstcw
xchg
dec
sahf
mov
ficomps
into
addb
mov
mov
icebp
dec
fidivl
dec
lret
or
xor
fimull
or
adcl
js
push
dec
jl
xor
divb
mov
add
xor
jp
mov
mov
sub
mov
jge
adc
adc
mov
cmp
push
lea
sub
out
ss
inc
sub
adc
xor
pushf
pop
mov
daa
push
push
leave
adc
inc
push
shlb
push
js
sub
ljmp
cmp
ljmp
aam
cs
cltd
adc
movb
test
cmp
je
jl
xor
fistl
lods
or
fnstenv
cmpsb
or
sbb
pop
jbe
inc
into
xchg
sub
mov
inc
jo
dec
push
pop
jmp
and
sub
xchg
test
psrlw
stc
inc
ret
rcr
mov
sub
lea
lods
adc
push
dec
dec
or
es
lea
frstor
push
jl
adc
push
sub
dec
or
adc
lea
daa
insb
mov
clc
ja
xchg
cwtl
in
fs
xchg
pop
sbb
cmp
in
xchg
mov
sub
add
je
sub
mov
jp
aad
push
push
lds
dec
ja
or
mov
nop
xchg
insl
loopne
dec
fcoms
push
ffreep
filds
jne
arpl
dec
or
add
loop
fwait
sbb
shll
or
xor
adc
subl
jmp
sbb
cmpsl
mov
outsb
or
inc
sbb
cmp
shlb
ret
out
or
pop
or
mov
push
call
mov
xchg
add
rcrb
movsl
enter
or
jl
push
push
jle
add
and
lret
scas
sbb
pop
sbb
push
fsubl
sub
mov
fs
fstl
shll
adc
add
div
fisubl
adc
sti
and
popa
dec
or
mov
add
iret
ret
inc
in
or
subl
jne
ss
mov
into
ljmp
add
push
in
icebp
dec
loope
mov
inc
add
sub
or
loop
inc
jno
add
and
mov
xchg
or
js
hlt
fsubs
sub
sbb
je
dec
xchg
xor
lock
in
insb
and
inc
jbe
jmp
mov
aam
jmp
cmova
insl
loop
fildll
or
fsubr
loope
push
enter
scas
fwait
mov
into
pop
lods
adc
movsb
fisttpl
sub
aam
fwait
iret
pop
sub
jbe
mov
xchg
inc
push
xor
fwait
hlt
mov
jb
aam
fwait
int3
std
shll
movsb
and
pop
sbb
cmc
push
push
and
leave
ret
mov
xchg
cli
add
pop
push
cwtl
xchg
in
mov
movsl
pusha
aam
loope
leave
and
sar
cs
add
lcall
add
adc
loopne
pusha
inc
in
xchg
mov
pushf
leave
inc
xchg
cmp
sbb
pushf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
add
push
call
mov
in
mov
push
fcomps
fcmovnb
ret
dec
movl
frstor
mov
push
or
inc
scas
test
lds
and
and
mov
and
push
xchg
out
cmpsl
xorb
sub
jle
test
push
inc
dec
stc
int
pop
mov
out
and
mov
jle
call
inc
add
sbb
dec
test
or
dec
xchg
pop
test
dec
sahf
dec
cli
mov
imul
pop
cld
add
mov
inc
lods
xchg
mov
add
push
test
sbb
rol
or
fs
pusha
push
jo
mov
push
stc
sub
fadd
or
add
int3
xchg
loop
push
cwtl
mov
outsl
adc
push
push
sbb
push
jo
push
mov
xchg
ds
fstp
mov
lea
je
adc
nop
fmul
ror
or
dec
and
nop
lea
or
xchg
add
test
jmp
sbb
add
mov
fsubrp
push
jecxz
and
inc
mov
adc
fidivrl
insb
icebp
and
js
and
or
mov
push
and
das
call
or
movsl
jg
orl
xor
or
add
cmp
xorb
shl
add
dec
ja
and
adc
call
sub
mov
lahf
mov
js
jmp
in
pop
mov
cli
test
and
or
jge
and
inc
maxps
iret
lret
xchg
sbb
mov
iret
push
mov
sbb
add
dec
sbb
adc
in
movb
rcll
sbb
sbb
insl
loope
mov
xor
popf
adc
leave
pop
aaa
or
mov
cmpsl
and
es
lds
rorb
loopne
push
jp
out
mov
movsb
add
imul
push
jne
inc
jl
outsb
sub
mov
push
push
inc
sbb
dec
xchg
jno
jge
mov
and
mov
ja
scas
lret
test
add
int3
rcll
add
shrb
imul
push
ss
sub
or
or
sub
inc
pop
clc
out
pop
push
mov
or
ss
inc
arpl
cmp
cmpl
or
adc
sub
gs
loope
sub
pop
test
pop
pusha
ss
adc
cmp
cwtl
add
rcll
sbb
movl
inc
sbb
je
sub
rolb
sarb
or
dec
jbe
xor
push
push
dec
inc
and
dec
out
or
pop
inc
dec
pop
pop
cmpsl
push
loope
jle
test
stc
push
push
mov
push
xor
movsb
sbb
inc
add
pop
jns
cmp
sbb
pop
cs
test
sub
cmp
adcb
mov
movsl
rcrl
adc
mov
clc
or
je
mov
sub
psrad
mov
adc
or
cmp
jo
ja
out
cltd
and
inc
fcomps
shl
sub
inc
mov
jecxz
or
or
add
push
cmp
inc
mov
cs
movsl
imul
push
pusha
nop
loope
sbb
xchg
je
inc
and
cmp
ljmp
xor
pop
adc
pop
dec
push
add
inc
and
enter
push
test
nop
xor
call
xchg
lea
or
xor
sti
sub
inc
mov
xchg
jmp
sti
mov
inc
or
pop
cmp
or
aam
cmp
pop
add
xchg
in
icebp
inc
jns
pop
add
dec
jge
xor
mov
cmp
cmc
mov
inc
adc
adc
push
stos
daa
adc
es
or
sub
xor
xor
cmc
pop
sbb
jne
cmp
test
icebp
push
dec
add
rorb
mov
and
mov
clc
jnp
ds
inc
fsub
cmpsb
jle
aaa
mov
lods
pop
pop
ds
testl
xchg
or
call
test
imul
pop
push
cmp
aam
idivb
imulb
mov
gs
cmp
pop
sbb
and
xchg
xchg
adc
cmp
pop
inc
data16
xor
push
push
cld
loope
and
pop
lret
pmullw
enter
mov
ret
imul
testl
outsl
push
test
aaa
push
iret
in
lods
lcall
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
cmp
aaa
sub
cmpsb
shrl
out
lds
mov
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
sub
mov
push
pop
enter
test
daa
mov
stc
cs
adc
and
xchg
add
sub
cmp
das
jecxz
scas
push
push
xchg
push
into
pusha
jmp
clc
pop
mov
or
push
loope
xorb
and
sub
inc
jnp
mov
sbb
mov
ja
insb
andb
adcl
cli
addb
stos
iret
dec
xor
iret
mov
dec
mov
cmpsb
xor
nop
xor
test
nop
jo
or
test
pop
test
enter
test
cmp
jne
push
mov
sub
and
mov
ror
and
pop
mov
pushf
xchg
mov
mov
pop
rcrl
test
dec
jmp
lock
adc
push
cwtl
sub
add
and
add
ja
add
fdivrs
mov
sub
clc
dec
ja
pop
testl
repz
cmp
and
rclb
adc
dec
push
fcmovnbe
and
pop
dec
or
inc
ds
dec
or
inc
cmp
sub
sub
or
jne
push
cmp
movq
sbb
push
jp
push
pop
femms
jecxz
push
outsb
hlt
jecxz
ret
xor
nop
or
ljmp
fimuls
mov
call
adc
push
in
mov
sbb
xor
and
mov
jmp
out
adc
cmpsb
or
imul
nop
inc
call
pop
fisubl
adc
cmp
push
divb
add
call
or
xchg
sub
cwtl
inc
rolb
fisubrs
sub
pusha
and
lret
sbb
into
in
rcrl
out
fwait
sbb
jo
push
and
mov
fldcw
pop
mov
push
subl
jns
fisttpll
fwait
cwtl
mov
mov
sub
movsb
sbb
sub
loopne
das
fistps
in
or
fwait
mov
add
sahf
and
jbe
lods
mov
hlt
or
out
xor
es
aaa
mov
cltd
add
xor
cmp
jg
pushf
fld
rorb
jl
dec
mov
in
xchg
push
mov
cmc
push
ficoml
add
test
jl
mov
or
adc
adc
mov
and
cmpb
or
mov
xchg
cmp
fs
jl
in
in
mov
mov
aam
inc
adcb
pop
pop
xor
outsl
lods
adc
out
sub
push
das
adc
rclb
or
cli
lret
movsl
push
mov
subb
inc
lahf
and
inc
insb
mov
adc
add
xchg
mov
cmpsb
push
popa
mov
adcb
mov
lock
or
add
mov
iret
jmp
or
inc
xchg
jbe
mov
enter
add
xchg
test
hlt
in
push
jmp
sbb
in
in
adc
dec
mov
mov
add
inc
sahf
fmull
add
aaa
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
dec
cs
dec
shl
stc
lret
nop
sbb
clc
add
daa
fcoms
pop
ds
mov
lods
pop
imul
cmpb
add
sbb
and
je
push
xor
pop
lahf
fstps
loopew
or
mov
push
or
adc
add
sbbb
cld
mov
jmp
mov
pop
movb
adc
jno
mov
and
pxor
push
ret
je
jb
push
add
roll
and
mov
pop
add
push
jmp
js
or
adc
add
push
pop
dec
adc
adc
jmp
cmp
mov
or
sbb
pushw
push
arpl
xchg
pop
daa
and
adc
push
jnp
sub
jb
cmp
faddl
jge
sbb
and
mov
mov
aaa
call
cmp
mov
in
xchg
and
or
incb
push
push
popa
cmp
jle
push
pop
lcall
mov
or
das
sub
test
ficoms
aam
pop
and
mov
and
pop
cmp
lcall
sbb
popf
pop
push
popa
ficomps
or
sbb
push
xchg
fcoml
nop
movsl
js
and
adc
adc
daa
xor
lock
movsl
loope
test
cmpl
xor
es
and
lock
mov
jl
inc
or
test
das
adc
repnz
stos
pop
test
sub
mov
dec
xor
in
and
call
jne
xor
cmpl
jb
or
xor
dec
jge
sub
insl
adc
push
inc
sbb
aas
adc
jle
lea
fcomps
decb
and
jb
push
push
push
call
pop
in
inc
shll
push
cmpsb
sbb
decb
push
dec
inc
pop
cmpsl
sub
adc
pushf
adc
push
enter
inc
sub
xchg
daa
mov
enter
adc
mov
push
aam
jne
lret
cmpsb
sub
mov
adcl
sub
push
push
js
mov
push
inc
pusha
and
mov
inc
jne
inc
inc
andb
push
and
loopne
sbb
lock
out
mov
fmuls
and
loopne
sbb
loop
and
push
ss
sub
pop
jne
add
ss
jmp
ds
add
adc
loop
mov
push
push
shrb
adc
inc
outsb
jne
mov
insb
popa
jns
jae
push
aas
lock
movl
add
or
add
mov
mov
movsb
or
cmp
adc
mov
fwait
insb
loopne
mov
push
push
inc
push
jp
dec
cmp
dec
mov
jns
sbb
push
mov
xchg
cmpb
push
mov
in
mov
enter
test
prefetchw
aas
inc
cmp
std
outsl
sti
pop
jnp
test
xchg
cld
mov
pop
rcll
mov
cmp
inc
mov
mov
popf
or
fidivrl
cmp
adc
fistps
sub
push
imul
jb
inc
or
dec
adc
dec
mov
mov
mov
adc
popa
and
je
movsl
repnz
add
hlt
or
xorl
add
xor
push
cmpl
mov
fsub
sbb
xchg
push
ljmp
mov
pop
and
in
or
enter
orb
lcall
ds
fwait
sbb
jmp
mov
and
inc
into
movzwl
cmpb
fsub
repz
ds
push
sub
std
mov
add
ja
jns
out
cmp
push
pop
sbb
inc
aam
ja
jae,pn
inc
sub
aaa
fdivrl
dec
mov
loope
out
add
xor
lret
inc
dec
or
dec
int3
or
adc
sbb
fsts
mov
es
sub
pop
xchg
jg
shrb
das
add
cmp
mov
and
mov
jmp
dec
push
les
jecxz
nop
fiaddl
je
mov
loope
frstor
xchg
inc
lock
pop
ja
sbb
mov
insb
or
test
andb
pop
cmp
sbb
pusha
adc
loope
mov
mov
test
and
lea
pop
mov
push
pop
inc
cmp
popa
nop
iret
pop
hlt
sbb
xor
mov
ja
hlt
test
fsubl
add
or
add
rorb
and
imul
jp
xchg
or
or
sbb
lds
rcll
ret
sbb
jno
jno
sub
rorl
add
jne
mov
adc
popa
cmp
dec
jle
int3
push
into
popa
jg
pop
and
adc
xchg
test
arpl
adc
test
sub
add
dec
lock
lock
ficoml
out
add
or
mov
add
rclb
push
xor
rolb
mov
or
pop
or
mov
int3
mov
pop
movsb
and
sub
mov
or
mov
cmp
hlt
jne
fcompp
aaa
dec
sbb
cs
orb
pop
mov
or
ss
in
daa
sbb
sub
les
add
je
and
out
xorb
sub
inc
xchg
add
jo
fwait
nop
xchg
xor
pop
inc
sbb
jge
inc
cmc
and
out
inc
inc
sbb
jle
dec
jne
mov
sbb
dec
data16
loope
cwtl
sub
inc
lds
rcrb
cmp
jge
lock
cmp
mov
adc
ret
dec
xor
push
rorb
shrb
shlb
loopne
fyl2xp1
inc
shlb
or
or
mov
and
fldcw
data16
mov
into
daa
xor
jmp
in
inc
inc
inc
add
pop
fsubl
cwtl
add
aas
outsl
push
sub
dec
lods
or
js
lcall
sbb
push
mov
dec
add
add
in
pop
insl
jle
push
adc
das
adc
and
xchg
xchg
ds
ja
cltd
push
fsubrl
cmp
outsl
dec
sub
dec
in
jno
out
js
fadd
cmp
loope
xor
test
lds
fwait
pop
inc
dec
lea
cmp
and
icebp
fisubl
loopne
jmp
inc
jmp
ja
jns
mov
sti
xor
orl
nop
sbb
nop
movl
and
ret
rorl
and
mov
sbb
mov
push
xor
inc
test
xor
popa
jle
adc
call
in
lock
xlat
inc
inc
dec
mov
sbb
inc
call
call
sub
cld
loopne
push
enter
sub
je
nop
lcall
xlat
adc
mov
jbe
fldenv
pop
leave
icebp
or
shll
mov
pop
in
repnz
in
pop
clc
xchg
jo
mov
addps
xor
sbb
leave
test
xor
punpckhwd
push
stos
leavew
lock
fs
clc
adcb
xor
popa
push
iret
icebp
push
adc
inc
xor
and
add
stc
test
add
fdivs
pusha
clc
movsl
jno
loope
sub
into
cld
mov
or
dec
je
or
sbb
xchg
loopne
ds
jmp
adc
jmp
push
movb
mov
mov
and
test
sbb
and
test
aas
cld
sbb
add
std
inc
jns,pn
cmp
jne
sbb
or
push
adc
and
xor
adc
movsb
and
xchg
pop
mov
cmpl
test
js
push
sub
adc
xchg
jne
sbb
xor
je
xchg
movsl
das
jns
repz
pop
mov
jmp
or
lret
cmp
sub
scas
dec
inc
or
sbb
inc
test
sbb
arpl
loopne
in
adc
sub
rclb
push
dec
cli
leave
pop
leave
jo
push
adcb
fldt
es
and
dec
fisubrl
and
cmp
xchg
lret
insb
push
cmp
mov
insb
outsl
pushf
inc
inc
adcb
jae
cwtl
jns
jb
dec
mov
dec
lret
push
mov
movsb
or
and
and
push
test
and
lock
add
or
pop
or
and
int3
sbb
xchg
lahf
and
insl
arpl
or
mov
data16
insb
xor
lods
jle
inc
daa
push
sub
xchg
xchg
pop
lods
iret
jb
inc
dec
pop
push
das
push
loop
loop
inc
outsb
adc
mov
outsl
ja
xchg
mov
fidivrl
push
jnp
or
pop
outsl
jae
push
jg
push
push
inc
iret
or
and
lcall
lods
jl
and
iret
inc
mov
push
push
push
push
xchg
nop
cwtl
push
or
pusha
loop
sti
nop
adc
sbb
mov
pusha
iret
je
movsb
push
mov
sub
call
push
inc
jb
dec
push
les
push
arpl
push
dec
shlb
sbb
xchg
sub
pop
call
lods
mov
cltd
add
jns
and
pop
pop
push
icebp
rolb
inc
es
sarb
in
inc
sub
inc
sub
mov
enter
xor
decl
stc
fisubrs
adc
sbb
or
addl
or
enter
sub
enter
xchg
cwtl
enter
pushf
mov
enter
mov
enter
mov
enter
rcl
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
add
enter
or
adc
enter
sbb
and
push
lret
enter
xor
push
sub
sub
xor
mov
mov
out
ja
adc
cmp
add
adc
loopne
and
xchg
lds
je
jl
and
addb
fmuls
clc
xchg
or
movsb
xor
xchg
cwtl
and
mov
sbb
dec
gs
sub
test
aam
movsb
xor
mov
adcb
fcoms
jb
adc
and
nop
lret
cmp
inc
sub
push
dec
fcomps
or
fsubrl
js
and
adcb
in
mov
sbb
loopne
inc
sub
clc
lock
add
mov
sub
add
gs
sub
xor
add
push
push
movsb
xor
adc
sbb
sbb
sub
push
sbb
mov
enter
inc
sub
sub
xchg
add
repnz
jmp
pushl
mov
les
push
dec
rcrb
fcmove
sub
outsl
jae
and
sbb
mov
or
mov
cwtl
adc
add
scas
or
popa
jb
add
fistl
test
test
sbb
je
jne
adc
mov
addr16
xchg
mov
jae
addr16
fs
das
scas
pop
dec
arpl
jae
test
xor
fs
lea
or
jbe
or
jns
jp
jae
sbb
int
les
mov
pop
lahf
pop
xor
pop
and
push
inc
loop
sub
testb
imul
pop
mov
pop
dec
xor
dec
pop
adc
pop
iret
popf
loopne
add
dec
xor
in
pop
or
iret
mov
add
outsb
popa
and
and
nop
cwtl
mov
aad
mov
mov
fstpl
in
pop
push
xchg
mov
jl
mov
ja
and
jo
jg
jae
mov
addr16
jne
insl
outsb
sub
das
pop
fs
ss
sbb
inc
imul
popf
pusha
fs
mov
jno
arpl
inc
popa
loope
push
xchg
cmp
and
pop
outsl
pop
cmp
sbb
adc
adc
sbb
or
mov
inc
hlt
cwtl
fidivrl
inc
imul
ds
mov
jg
daa
daa
inc
sbb
subl
cmpsb
add
sbb
jnp
xchg
in
push
movsb
xchg
dec
sub
in
fcmove
mov
mov
outsl
dec
push
fs
push
and
dec
push
and
nop
dec
push
pop
inc
sbb
inc
mov
lds
xchg
add
in
add
pop
add
adc
xor
leave
fisttpl
popl
jbe
add
pusha
dec
pusha
pushl
and
push
jge
test
inc
fs
mov
push
push
push
pop
mov
push
push
je
jp
adc
inc
and
adc
jl
outsl
loop
out
xor
pop
fildll
push
test
ja
cmpsb
mov
inc
xchg
add
add
jmp
push
xchg
pavgb
mov
push
or
sbb
push
icebp
xchg
sub
aaa
and
popf
push
push
xor
clc
cmpsb
xchg
xor
incl
fxch
push
movsl
lret
add
inc
push
pop
cmp
cmp
mov
or
cmp
adc
repnz
cmpb
test
add
lds
and
sarl
inc
xor
push
push
adc
mov
mov
cli
push
xor
out
or
dec
push
divl
adc
xchg
fsubrp
cmp
js
rclb
aam
arpl
xchg
push
add
sub
enter
cmp
add
push
push
add
ret
sbb
mov
mov
andl
pop
pop
pop
cmp
xor
mov
scas
mov
mov
pop
popa
in
inc
insb
pop
sbb
or
add
test
out
out
add
add
gs
push
aas
mov
mov
outsw
test
mov
mov
out
and
cmpsb
in
push
and
test
pop
and
test
mov
fnstcw
cmp
mov
adcb
loopne
insb
adc
lea
jae
mov
pop
mov
bound
fbstp
inc
cmp
pop
or
and
daa
push
push
push
popf
or
pop
pop
rclb
add
and
dec
outsl
add
inc
xchg
add
les
bound
inc
bound
je
push
loope
inc
xor
negb
outsb
outsl
pop
cvtdq2ps
movl
add
and
inc
dec
jmp
push
call
mov
push
clc
sbb
push
sbb
test
sub
movb
jns
stos
js
sub
jg
mov
shlb
add
inc
lret
and
pop
in
std
test
insl
fs
addr16
push
cmp
add
lret
sub
push
adc
arpl
and
adc
mov
adc
es
dec
aas
or
nop
cs
iret
enter
mov
iret
leave
cmp
cmp
repnz
sahf
xchg
adc
xchg
xchg
lret
test
inc
sbb
repnz
sahf
jo
insb
push
loopne
jbe
pushf
add
insb
cmpsb
adc
push
icebp
sub
or
rcll
xor
pop
add
or
loop
insb
cmpsl
xor
cmpsl
dec
xor
inc
mov
xor
push
adc
sbb
sub
pop
pushf
repnz
xor
gs
insb
icebp
pop
push
fbstp
or
dec
outsl
ja
cmpsl
insb
or
push
popa
imul
add
jae
mov
push
pop
mov
je
add
or
xchg
cld
dec
xor
pop
aaa
and
je
sbb
test
adc
xchg
cmp
shrb
jb
sub
das
jle
lds
enter
dec
xchg
inc
aas
enter
sbb
inc
test
inc
add
in
jnp
mov
push
lock
ret
ret
aas
in
lret
inc
das
enter
pop
imul
test
push
fimuls
mov
sti
xor
in
jle
push
sbb
nop
rclb
fdivp
xchg
lret
or
int
fmul
iret
jnp
push
into
jle
icebp
rorb
dec
rcrl
sub
hlt
sbb
test
sahf
sub
xchg
adc
add
outsb
popa
stos
pop
sarb
add
pop
push
add
insl
and
hlt
push
aas
test
push
inc
rorb
in
popf
jle
inc
je
fdiv
orb
inc
push
in
inc
xchg
jae
lcall
xchg
femms
add
jb
push
idivl
push
iret
imul
cmpsl
sti
xor
mov
cltd
dec
xor
sahf
push
sbb
fstl
stos
test
iret
xor
push
jnp
das
test
and
mov
add
push
push
imul
nop
dec
out
mov
jne
jp
js
addb
outsl
cmc
and
mull
mull
sub
mov
in
xchg
pop
neg
xor
nop
testl
loop
clc
add
test
sti
pop
xchg
cmp
push
addr16
inc
xor
mov
ret
sbb
mov
cmp
aaa
xchg
sbb
pop
out
loopne
jge
in
xlat
fs
sub
ss
push
and
pop
call
dec
adc
cmp
inc
es
pop
repnz
inc
loopne
clc
std
hlt
insl
mov
cmp
dec
lcall
inc
inc
pop
int3
ss
shrl
xor
adc
mov
pop
xor
adc
push
fsubrs
outsb
push
mov
fisubrl
push
stc
push
pop
lcall
push
and
sub
or
cmp
xor
inc
js
jl
xchg
incl
movsb
sti
xor
mov
mov
mov
mov
mov
lret
cli
push
push
sub
add
iret
insb
adc
push
into
or
push
push
sub
outsb
and
sbbl
lret
push
ret
nop
fwait
or
lahf
fcomp
rolb
push
stc
imul
imulb
adc
inc
pop
dec
subl
imul
xchg
sub
xor
push
inc
iret
aaa
and
inc
cwtl
cmp
add
std
adc
cmp
add
or
and
or
pop
or
adc
lret
push
in
mov
jne
lods
mov
jo
add
sub
mov
dec
xchg
push
outsb
dec
adc
dec
lcall
jne
pushf
xchg
adc
jns
jns
add
sbb
xor
in
pop
and
pusha
sbb
sub
and
push
adc
cwtl
and
adcb
ret
test
cmp
mov
cmp
adc
bound
add
enter
into
or
mov
xor
fstl
adc
mov
or
push
push
in
add
push
pop
xchg
push
dec
cld
je
xor
loope
cmpsl
mov
jno
aaa
sbb
jmp
test
and
pushf
mov
dec
bound
loopne
jp
jp
xor
hlt
sbb
dec
addr16
mov
push
mov
insb
jl
dec
fwait
sbb
or
pop
sbb
dec
mov
hlt
addb
sbb
and
push
and
adc
and
push
xchg
inc
popa
and
sbb
adc
test
sarl
jo
dec
push
jno
or
and
add
mov
pop
jmp
int3
into
push
dec
lret
pusha
push
insb
pop
mov
adc
ss
fisubrs
dec
jbe
pop
lcall
pop
jae
pop
mov
iret
pop
fs
add
pop
jno
xchg
aaa
and
lds
cmp
add
lret
in
jnp
adc
cmp
mov
es
int
notb
jo
jo
push
mov
sub
add
insb
inc
out
and
jnp
sub
push
lds
cmp
mov
inc
sbb
sub
sbb
int3
dec
sarb
out
sub
stos
out
sbb
rolb
mov
mov
and
or
das
add
aad
stc
cltd
and
lahf
lods
mov
xor
loope
in
pop
xor
push
jle
and
pop
je
push
mov
xor
or
lcall
dec
mov
mov
psubusw
pop
xchg
xor
mov
inc
add
popf
xchg
sbb
dec
xor
jb
dec
fcmovnu
call
xor
fstpl
es
or
mov
or
fs
sahf
sbb
aaa
xchg
out
jns
insl
rolb
add
test
enter
repz
push
js
and
rolb
xchg
cmp
cmp
or
add
cmp
repnz
cmp
push
fcomp
add
in
cmp
daa
pop
enter
dec
loopne
add
push
loope
pop
xorl
inc
clc
ds
js
mov
xchg
insb
push
add
in
fnstcw
rclb
rolb
cmp
insb
xchg
lock
lock
and
push
dec
jge
xchg
add
pop
cld
out
ret
dec
and
add
xchg
into
add
jmp
dec
das
jl
mov
dec
dec
das
add
imul
cmpsl
cmp
cld
push
dec
mov
add
add
lods
test
inc
in
pop
ds
pop
lcall
hlt
rolb
sub
adc
mov
xor
mov
or
jle
dec
push
sub
mov
jp
or
out
movsl
adc
dec
inc
inc
or
add
xchg
outsl
add
mov
push
or
movb
movsl
or
mov
mov
pop
loopne
adc
out
pop
lret
cmp
nopl
adc
jb
aaa
imul
cmp
lcall
outsb
bound
add
mov
mov
in
fadds
movsb
push
xchg
repnz
mov
imul
add
pop
xchg
push
mov
sbb
cwtl
add
hlt
shll
rorl
aad
scas
mov
cmp
out
int
or
mov
or
aam
aas
pop
mov
add
add
es
or
js
push
adc
mul
adc
adc
sub
ds
out
or
push
jne
mov
stos
xor
push
les
fists
cmp
into
fadds
add
add
adc
dec
push
and
cmp
add
sbb
cltd
add
shll
daa
xchg
adc
popl
adc
fisubs
inc
push
or
adc
push
push
adc
and
inc
sub
call
add
mov
out
ds
push
sarl
divb
lock
pushf
loop
dec
dec
inc
ljmp
dec
pop
mov
xor
mov
outsl
adc
sbb
addr16
push
cmp
popa
insl
jae
or
dec
mov
pop
xor
les
inc
shlb
fstp
cmp
add
pop
movsb
hlt
imul
push
xlat
mov
insb
in
mov
jnp
dec
cmp
jmp
push
fdivs
push
out
or
gs
adcb
push
mov
mov
jnp
add
adc
filds
or
xchg
fsubr
int3
push
push
jne
xorb
in
cltd
add
call
test
cld
or
aam
aaa
xchg
cmp
js
jne
dec
out
inc
or
lods
push
and
sbb
add
lods
adcl
clc
mov
mov
mov
lahf
clc
adc
out
dec
lods
push
popa
nop
mov
push
cmpsl
xchg
inc
cmpb
adc
mov
and
fs
inc
bound
and
sbb
enter
stos
clc
cmp
or
or
leave
lods
adc
xor
cmp
mov
lahf
sbbl
test
push
out
sbb
call
es
mov
mov
not
and
push
push
mov
je
sub
xchg
push
add
add
mov
xchg
sbb
and
pop
mov
jne
cmp
add
or
add
push
push
addr16
add
movsb
add
xorl
aam
or
mov
incl
fldenv
cmpb
movsl
or
inc
mov
data16
fisubrs
jg
orl
cld
dec
aam
sub
jnp
or
aaa
fildll
adc
adc
push
or
cmpb
fwait
add
inc
or
addr16
mov
pop
sti
sahf
hlt
sub
in
movsl
mov
mov
xchg
jbe
popa
loop
sbb
adc
enter
mov
sbb
adc
mov
dec
dec
inc
fcoml
cmp
and
clc
sub
cmp
push
mov
imul
popf
dec
push
adc
movsl
sbb
lock
hlt
shll
jle
xlat
sbb
nop
xchg
add
cld
push
inc
jle
push
enter
das
clc
adc
dec
inc
clc
pop
mov
lock
std
sahf
inc
lods
sbb
sub
adc
sbb
push
pop
insl
andl
dec
in
loope
jbe
sbb
cmp
jo,pt
xchg
movsb
lods
push
sahf
sbb
xor
in
or
fwait
jge
cmp
xchg
cmc
movsl
or
clc
ja
or
inc
push
push
sbb
addl
pop
inc
add
sub
sar
rclb
shr
mov
dec
icebp
sbb
iret
inc
add
loopne
cmp
jmp
clc
push
mov
in
or
cwtl
loop
add
jmp
inc
sub
sti
adc
xchg
nop
jecxz
loope
roll
mov
sbb
out
test
inc
aaa
adc
push
enter
adc
hlt
sbb
mov
push
test
mov
and
and
cli
cltd
neg
aad
pop
movsb
dec
outsb
xor
gs
push
pop
xchg
mov
cltd
add
data16
ljmp
in
add
pushl
jge
sub
call
mov
push
jne
sub
and
pop
sbb
inc
dec
or
dec
lock
addb
in
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
testl
dec
arpl
movsb
imul
in
loopne
xor
int
cmpsb
or
test
cwtl
xchg
sub
outsl
xchg
inc
add
jl
or
mov
adcl
mov
fbld
mov
jne
ret
add
push
mov
inc
lret
shl
and
out
pop
mov
or
pop
pop
fnstenv
rcll
testb
decl
sub
in
in
sub
cs
in
in
adc
adc
in
in
adc
push
pop
in
in
sbb
sbb
in
in
sbb
push
pop
in
in
add
add
in
in
add
push
pop
in
in
or
or
in
in
or
push
jb
repnz
icebp
bnd
jb
hlt
cmc
div
add
out
das
negb
add
push
sbb
adc
or
stc
cmp
cmp
xor
add
out
sahf
hlt
and
sbb
adc
sahf
out
fmull
add
repz
repz
or
hlt
mov
iret
mov
lods
fsubl
pushf
int3
xchg
les
test
iret
je
insb
pushf
fs
cmp
repz
mov
repz
repz
je
insb
iret
repz
xor
sub
and
cmp
repz
dec
adc
or
cmp
xor
xchg
sub
jns
out
hlt
and
sbb
sahf
out
sahf
adc
or
add
cmp
sarl
hlt
mov
repz
in
inc
push
insl
std
sbb
mov
les
add
pop
xchg
push
stc
push
ret
and
sub
inc
xor
xchg
rcll
in
imul
xchg
or
mov
jp
mov
sub
mov
nop
xchg
mov
loope
bound
mov
push
jo
movb
les
and
aam
pop
or
sub
xchg
dec
add
and
mov
mov
into
xchg
outsb
sub
insl
and
mov
or
mov
add
add
call
cmpsl
cltd
add
mov
add
sahf
mov
mov
xchg
mov
and
repnz
xchg
ja
push
inc
adc
rclb
cmp
add
inc
dec
pop
js
enter
je
cmp
jo
repnz
sahf
xchg
push
insb
mov
adc
hlt
xlat
jo
shll
inc
cltd
nop
pushf
hlt
test
stc
in
push
ja
nop
sbb
sbb
mov
leave
int
dec
mov
in
pop
rolb
push
notl
xchg
xor
les
mov
ret
fnsave
pushf
aaa
push
jg
iret
nop
xor
ds
in
add
jae
jb
lock
lock
add
scas
dec
fstl
mov
aas
lahf
add
push
jecxz
in
dec
xlat
jl
inc
push
inc
mov
push
inc
or
arpl
sub
add
jmp
cmp
shrl
inc
inc
xchg
roll
dec
clc
dec
aas
add
les
push
movb
ja
es
mov
psubsw
pop
and
and
ljmp
xchg
fisttps
imul
sbb
sbb
or
inc
push
push
mov
addr16
loope
xchg
or
fldt
cmp
pop
sbbb
dec
push
clc
ret
and
in
push
sbb
lods
add
out
into
scas
lret
hlt
mov
sub
pop
jge
hlt
shr
xchg
adcl
xor
dec
pop
por
cs
inc
sbb
dec
scas
inc
push
lea
push
and
xor
ret
fdivrl
mov
pusha
xchg
mov
hlt
inc
jmp
movsb
pop
push
pop
add
nop
into
aaa
and
mov
sbb
jbe
push
add
inc
sub
inc
mov
cmpl
mov
jns
or
stos
test
sbb
and
movl
xor
or
sub
dec
adc
data16
xchg
test
ret
packsswb
dec
mov
lods
xchg
mov
xchg
sub
sub
add
cwtl
nop
test
dec
ljmp
xchg
sub
jmp
push
cmp
sub
pop
rcr
add
or
sub
jmp
cmp
xor
inc
daa
pop
xchg
xchg
test
pushf
jbe
rol
inc
dec
inc
xchg
es
sbb
mov
pop
jecxz
aam
inc
cmp
push
daa
sbb
ja
inc
push
or
xchg
pop
or
xor
pop
or
gs
add
push
dec
dec
mov
rol
push
and
jae
enter
xor
pushf
or
cmpsb
pop
adc
enter
scas
xchg
scas
dec
repnz
sbb
adc
mov
insb
rcl
push
roll
or
scas
push
or
mov
ja
in
sbb
ds
xor
cmp
push
push
or
push
out
mov
fcmovbe
inc
enter
and
mov
mov
ja
nop
pop
xchg
mov
je
adc
sbb
pop
mov
sub
outsl
mov
or
or
stos
adc
pusha
dec
shll
add
inc
fisubs
es
bound
pop
rorl
push
dec
or
in
das
push
ret
inc
mov
xchg
cmp
mov
les
cmp
inc
xchg
add
or
loopne
push
cmp
inc
pop
scas
xchg
jo
adc
inc
cmp
lahf
cmpsb
push
push
push
and
lods
imul
lock
and
and
push
inc
neg
xor
xor
dec
imul
dec
and
push
add
out
add
outsb
pop
imul
call
imul
insl
inc
mov
pop
js
bound
pop
and
jo
jb
jb
popa
or
mov
popa
dec
es
jae
out
data16
es
imulb
cmp
adc
pop
addr16
jb
fdivp
out
mov
add
mov
arpl
mov
testb
daa
push
jg
jnp
out
into
sub
insb
das
je
insl
sti
fsubp
cmpsl
sbb
and
pop
lock
mov
jge
push
je
jo
jb
sbb
jns
outsl
dec
data16
sbb
das
add
or
imul
pop
push
hlt
sub
mov
pop
ret
pop
xlat
sbb
mov
ret
jl
cmp
add
test
or
jb
loop
add
push
daa
and
daa
xor
jl
or
orb
sti
and
add
shlb
pop
fs
pop
rorl
mov
rorl
cmpb
or
sub
andl
push
insb
push
push
jg
mov
xchg
mov
mov
inc
sbb
jne
pop
or
add
call
fstpl
imul
pushl
push
mov
xor
hlt
addl
into
push
push
pop
mov
mov
xchg
xchg
and
and
je
inc
lcall
pushf
shrb
iret
xchg
rorb
ret
pop
dec
lcall
int3
lods
bound
mov
cmp
add
jge
and
imul
pop
es
jl
jns
sbb
in
xor
cmp
push
orb
add
mov
xor
and
add
mov
or
daa
sbbl
jb
sub
add
outsb
inc
adc
out
push
jmp
sbb
pop
xor
push
sub
mov
sbb
add
or
adc
js
lcall
xor
pop
jb
stos
or
adc
sbb
adc
or
pop
dec
push
adc
push
sahf
pop
lret
inc
decb
add
fbstp
push
pop
pop
or
or
repz
or
or
or
or
cmp
repz
adc
repz
sbb
sbb
imul
push
pop
and
and
and
lock
fcoms
jns
out
leave
cld
iret
repz
or
push
bound
repz
test
iret
repz
or
out
sahf
cmpsl
sbb
sahf
out
sahf
jb
mov
jns
aam
xchg
mov
fdivs
jmp
add
lret
add
push
mov
push
adc
pop
pop
adc
push
xchg
dec
sub
in
lret
sbb
mov
or
pop
push
and
sub
dec
sub
xchg
lret
adc
cmp
adc
mov
sub
sbb
and
sbb
xchg
pop
sbb
sbb
xor
sbb
popa
imul
adcl
mov
and
xchg
inc
sub
push
sbb
push
pop
mov
cmc
push
cmp
clc
test
pop
adc
jnp
ljmp
xchg
jmp
cmp
loopne
cltd
sbb
inc
push
lea
push
mov
js
lock
add
popa
or
pop
push
or
mov
sar
push
adc
push
add
or
andl
pop
cmpl
loopne
je
jns
mov
loope
or
push
imul
rcr
pusha
loopne
dec
pop
or
add
cmp
inc
mov
outsb
xor
stos
push
sub
sbb
ss
nop
out
jnp
bts
adc
movl
sbb
shlb
hlt
mov
adc
into
sbb
lock
not
test
or
js
sub
inc
add
inc
cmp
cmp
dec
inc
xchg
dec
inc
or
inc
dec
jecxz
xchg
push
int
or
mov
hlt
adc
dec
add
inc
sbb
add
addr16
sub
jne
sbb
push
je
push
xchg
mov
lahf
sbb
pusha
sbb
fcomps
dec
ret
mov
or
sbb
jmp
jbe
gs
xor
dec
sub
in
rcrl
or
orl
add
add
das
xchg
sbb
push
adc
inc
leave
push
jb
adc
and
pop
lods
lret
pop
dec
sbb
push
pop
sbb
xchg
stos
lret
negl
xorb
mov
orb
push
jb
jb
push
sbb
inc
leave
pop
and
arpl
xchg
and
inc
nop
and
stc
sub
pop
and
dec
scas
xchg
or
sbb
jb
stc
cmpsb
xchg
stos
in
sub
sub
or
add
pop
push
inc
mov
and
and
xor
in
mov
mov
inc
and
ljmp
test
xorb
insb
and
push
and
or
push
jl
ja
adc
push
nop
or
iret
loopne
sub
jmp
push
mov
cmp
inc
add
and
inc
fldl
inc
push
outsb
sub
add
hlt
mov
mov
mov
mov
inc
xchg
es
mov
push
rolb
dec
popa
bound
inc
in
xor
pop
sub
xchg
jns
xchg
nop
push
and
bswap
in
xchg
and
pushf
push
push
stc
nop
scas
pop
sbb
and
sbb
fsubl
adc
daa
xor
insb
repz
push
rorb
lods
aas
jg
add
in
add
movups
mov
test
enter
dec
pop
or
push
and
pop
daa
outsl
or
add
pusha
and
dec
sbb
xchg
stos
or
inc
scas
sbb
daa
mov
popa
jo
addb
lea
mov
daa
je
cmp
mov
or
push
jbe
dec
fisubrs
loopne
aaa
sub
icebp
inc
pop
outsl
test
and
or
inc
arpl
jo
cs
xchg
mov
xchg
pop
jne
sub
xor
xlat
add
sub
and
fs
or
js
js
pop
jb
das
dec
gs
loop
inc
cs
mov
cs
and
jg
and
add
dec
mov
push
or
insb
or
mov
inc
add
in
pop
lods
test
or
sub
pop
sub
sbb
dec
push
and
pop
leave
sub
in
xchg
dec
pop
inc
or
adc
cmp
inc
insb
push
inc
push
test
push
pop
imulb
pop
stos
pop
push
xorb
add
and
inc
rclb
adc
push
pop
jns
mov
pop
outsb
push
xor
in
cld
pop
fsubr
or
sahf
mov
notb
mov
mov
in
jnp
inc
adc
push
cmp
push
hlt
sbb
lock
push
and
shll
or
gs
pop
and
or
data16
bound
jno
or
sub
mov
aam
ja
sub
pushf
loop
add
sbb
pop
xchg
add
lea
xchg
adc
and
bound
cltd
or
mov
add
xor
inc
mov
into
jl
inc
cld
and
sub
cmovne
jae
push
xchg
mull
cmp
adc
pop
xchg
lods
pop
js
test
or
xchg
xchg
adc
adcb
mov
adc
int
xor
or
push
inc
scas
add
add
adc
add
mov
sub
mov
xchg
stos
sbb
cmp
sub
sbb
adc
xchg
dec
imul
mov
pop
test
dec
insl
gs
inc
insb
adc
popf
pop
or
outsl
and
or
mov
push
jns
dec
popa
js
outsb
addr16
inc
sahf
daa
push
inc
adc
and
dec
mov
imul
or
push
or
jns
xor
add
jae
lods
inc
mov
or
imul
xchg
rclb
dec
pusha
and
adcb
sub
dec
adcl
rclb
aad
xor
movsl
add
cmp
xchg
jae
xchg
cmp
push
sub
lahf
inc
leave
add
pop
and
scas
mov
xor
xor
ss
jns
xchg
mov
fcomp
lret
or
int
cmp
loopne
loopne
shll
and
inc
push
sahf
push
lret
je
call
or
dec
push
jo
cmp
add
push
mov
daa
inc
pusha
xor
pushf
xor
or
out
mov
cwtl
xor
inc
imul
sbbb
mov
pushf
data16
cmp
push
cmp
adcl
sub
in
and
and
and
bound
arpl
shlb
icebp
aaa
lock
sub
xchg
sub
fists
sbb
pushw
adc
or
push
inc
add
or
and
lock
mov
xor
call
and
enter
sbb
inc
enter
or
in
and
add
mov
mov
inc
nop
push
scas
and
mov
push
pop
cmp
xchg
sbb
sbb
sbb
es
push
sbb
sbb
test
loopne
xchg
lods
add
shlb
cmpsb
xchg
or
sub
push
jecxz
inc
scas
and
popa
loopne
or
sbb
mov
movsb
ss
mov
icebp
mov
outsb
pop
sub
inc
mov
xor
jl
inc
shlb
push
xor
add
xchg
sbb
xor
leave
push
jb
xor
xchg
pop
and
leave
push
xor
cmp
xor
and
push
cmp
add
inc
test
dec
inc
inc
pusha
orl
inc
cmpsl
divb
or
inc
pop
mov
inc
push
inc
fists
loop
push
mov
xor
out
mov
bound
repz
inc
mov
out
mov
rorb
nop
push
mov
mov
adc
adc
mov
push
fs
jne
inc
adc
mov
add
and
fidivrs
mov
lret
pop
adc
inc
hlt
data16
add
mov
je
xchg
pop
pushf
aas
cwtl
cmpsb
pushf
push
add
mov
add
adc
fs
dec
or
nop
push
xchg
out
enter
sub
mov
xchg
add
dec
out
inc
sub
stc
xor
inc
pop
inc
sbb
enter
ja
add
push
push
outsb
mov
add
jge
add
jmp
incl
push
cmp
stc
sahf
cmpsl
push
xor
push
pop
pop
roll
pop
sbb
rcr
inc
add
add
inc
adc
jo
add
les
mov
push
bound
push
in
jg
mov
push
add
cmpsl
or
and
pxor
test
cltd
inc
cs
pop
pop
dec
in
mov
dec
mov
jo
sbb
les
insb
adc
daa
add
cmp
or
mov
xchg
sbb
sbb
and
xor
sub
dec
push
pop
shll
or
leave
and
or
and
dec
scas
xchg
and
es
sub
xchg
sub
inc
push
inc
sub
dec
das
xor
and
add
lahf
mov
pop
movsb
adc
pushf
jb
adcl
pop
inc
xchg
jg
mov
sbbb
bound
mov
fcompl
nop
add
ja
add
push
hlt
pop
inc
or
sub
sbb
fisttpl
scas
into
push
test
xor
inc
add
and
rolb
stos
cld
sub
loop
call
daa
xchg
nop
mov
push
xchg
inc
add
mov
lods
outsl
leave
adc
dec
mov
mov
out
movsl
andl
ss
dec
push
adc
leave
pop
sbb
fsts
pop
pop
or
stos
insb
and
rolb
lret
cmpsl
mov
addb
lods
popa
rcrb
and
add
and
lea
je
sub
sbb
mov
mov
sbb
rorb
push
insb
cld
insl
fmull
inc
pop
jmp
imul
cmp
inc
fistl
je
fcomps
in
mov
ret
xchg
fistps
sar
mov
xchg
leave
add
mov
push
push
push
fisttpl
shl
shll
pop
aas
bound
push
test
idiv
pxor
jmp
or
push
repz
mov
jno
cmp
pop
ret
rcrl
push
jo
js
movsb
movsb
add
pushf
jae
int
sub
xchg
mov
popw
lahf
jle
add
vunpckhps
add
mov
dec
push
ss
imul
dec
mov
add
cmp
out
icebp
mov
inc
and
ss
in
pop
out
test
or
pusha
shlb
cwtl
dec
dec
adc
or
rol
cmp
stos
and
and
aas
das
mov
test
push
je
mov
insb
or
call
jne
lea
mov
adc
xchg
fmull
sbb
clc
addb
dec
sub
inc
jmp
pop
lods
inc
push
nop
push
xor
nop
js
popf
je
sub
or
sbb
dec
dec
push
or
xlat
cmpsl
cwtl
inc
mov
movsb
shll
or
arpl
pop
cli
rolb
cld
cld
pop
and
xor
sub
dec
inc
nop
push
sub
gs
add
xchg
jae
mov
insb
imul
pusha
add
xor
jl
xor
add
pop
daa
push
xor
decl
aam
test
inc
mov
dec
cltd
push
add
xchg
inc
pop
adc
jo
or
enter
xor
mov
enter
mov
sub
adc
or
pop
addb
push
insb
mov
mov
or
dec
sub
jo
mov
es
jne
andl
xor
lods
movl
inc
jle
push
test
test
aad
push
inc
cmp
and
scas
jnp
inc
movl
xor
adc
addl
adc
adc
and
arpl
xchg
mov
xchg
loopne
movsb
stc
lock
sub
cwtl
dec
add
aad
xorb
adc
inc
aam
aam
cmpsl
and
cmp
xor
lock
xor
out
iret
inc
daa
insb
or
mov
xchg
in
push
insb
outsb
pop
fdivr
ljmp
mov
addl
adc
cwtl
pop
add
test
sbb
sbb
sub
cmp
add
push
xchg
out
stos
push
mov
rcrb
and
sbb
mov
adc
sarl
push
mov
faddl
sbb
and
xchg
adc
inc
inc
leave
jno
rorb
and
mov
sub
testb
insb
push
push
ret
inc
pop
fwait
dec
ljmp
shrl
inc
dec
loopne
add
or
lret
adc
lcall
outsb
sub
and
insb
js
push
daa
cmp
add
jle
adc
testb
add
neg
xor
push
mov
sub
imul
cmp
pop
int
testl
fcoml
push
stc
xchg
inc
fcoml
jae
stc
mov
inc
mov
cmp
and
outsl
cmp
mov
pop
pop
arpl
adc
sbbl
rclb
cmp
push
jne
xchg
push
rcl
jb
jge
push
mov
fxch
or
nop
dec
les
cmpl
andb
dec
pop
inc
loopne
jnp
mov
mov
sub
adc
test
sbb
fstpl
mov
sub
sbb
push
dec
je
dec
fsubrs
les
inc
inc
add
gs
jp
js
add
orb
mov
xchg
pop
js
mov
mov
out
push
xor
push
testb
fimuls
add
adc
mov
jmp
test
in
and
test
push
dec
or
lds
pop
or
btc
lods
cmp
cmp
add
mov
xor
lahf
adc
insb
enter
adc
call
pop
outsl
idivl
mov
xor
and
rol
pop
mov
sti
sbb
pop
adc
adc
movsb
sbb
cmpsl
arpl
arpl
mov
in
pop
xchg
cltd
addr16
push
push
mov
out
push
or
push
and
xchg
jge
repnz
mov
sub
or
cli
popf
dec
mov
and
mov
jg
sahf
push
out
sub
setnp
iret
and
lods
into
push
xchg
and
mov
mov
push
adc
mov
loopne
fcomps
xchg
sub
sbb
scas
shlb
insl
gs
mov
sti
pop
push
sub
push
idivb
pop
inc
xor
mov
push
pop
mov
and
rclb
pop
push
sub
daa
add
test
popf
add
pop
and
clc
push
inc
add
clc
jg
dec
lock
mov
or
sbb
lods
test
inc
loopne
xor
pop
cli
xor
imul
dec
int3
pop
add
adc
xchg
lods
pop
cld
inc
pop
cld
les
adc
pop
lret
pop
sub
cld
sub
jno
mov
loope
das
mov
mov
dec
or
scas
mov
add
and
inc
cs
daa
es
mov
out
inc
push
inc
sbb
and
adc
pusha
or
cli
clc
dec
dec
inc
inc
dec
push
pop
xor
adc
jg
movsl
jecxz
inc
lea
inc
add
or
cld
mov
xchg
dec
jns
pop
aam
jmp
bound
andl
jmp
rcr
mov
pop
inc
rorb
adc
pop
mov
inc
adc
daa
mov
xchg
pop
add
jecxz
sub
fmull
mov
jl
inc
or
lret
sbb
adc
and
mov
aaa
add
dec
dec
sbb
ret
incl
mov
mov
xor
push
fnstcw
pop
pop
iret
cld
in
inc
sub
mov
dec
js
xor
clc
add
jo
xor
dec
add
roll
mov
mov
mov
sbb
bound
and
mov
push
fildll
addr16
push
popa
ss
or
add
nop
clc
add
mov
sbb
xchg
test
jae
pop
faddp
add
sti
add
cmp
fs
ret
cmp
sbb
repz
sbb
mov
add
call
push
pop
adc
inc
sbb
mov
popa
jo
notl
add
shll
or
test
rcrb
hlt
xchg
add
imul
test
xor
lcall
inc
testb
cmp
push
or
rorl
jp
add
insb
mov
add
arpl
cmp
cmpsl
adcb
in
or
pop
sbb
cmp
pusha
cmovns
fldt
adc
orl
mov
pop
sub
and
cmp
mov
mov
dec
push
mov
cmp
rorl
fists
test
jnp
test
adc
lcall
inc
movl
adc
faddl
je
dec
and
aaa
shll
out
xchg
add
into
mov
cmp
add
loopne
and
fwait
js
ja
inc
or
fbld
clc
inc
inc
or
mov
loope
les
sahf
dec
clc
bound
mov
dec
pusha
les
imul
pop
cmp
sti
test
mov
fcoms
fwait
xchg
push
push
mov
adc
or
mov
xchg
cmp
ss
out
inc
jo
dec
and
add
cmovg
inc
add
inc
cmp
mov
add
jge
xor
jo
cmp
push
adc
push
xlat
sbb
mov
outsb
and
cmp
mov
xor
sub
adc
jge
das
mov
sbb
ficoms
cmp
aaa
testl
nop
filds
dec
popf
int
imul
roll
js
jg
jl
lret
xchg
pushf
sbb
mov
and
add
and
sub
dec
xchg
mov
andl
aam
inc
in
test
sub
adc
test
mov
bound
les
movsl
mov
lods
cmp
xor
or
inc
push
stc
ret
pop
pop
loopne
call
movb
aas
enter
dec
inc
dec
shlb
pop
xchg
mov
add
in
out
jnp
lock
add
push
mov
rorb
add
loop
loope
test
xchg
dec
icebp
nop
je
ja
dec
mov
sbb
cld
add
or
or
inc
and
aas
inc
add
push
xlat
xorl
jb
pop
testb
inc
sbb
and
out
push
adc
addb
dec
dec
lds
mov
mov
mov
nop
cmp
cmp
mov
add
sbb
test
sbb
lea
movzwl
inc
push
leave
cmp
outsb
ljmp
sub
ficompl
inc
mov
mov
dec
inc
or
pushf
add
mov
mov
inc
gs
and
xor
inc
xchg
dec
pushf
mov
mov
sbb
xchg
es
cmpb
in
dec
or
andl
cmp
mov
and
mov
repz
sbb
and
push
idivb
or
movb
mov
loop
push
xor
faddl
stos
popl
add
xchg
fwait
lds
movsb
enter
mov
pop
pop
cmp
adcl
mov
ja
orb
repnz
add
out
inc
shll
xchg
ljmp
adc
jmp
mov
inc
test
nop
clc
inc
jne
movb
or
xor
iret
adc
adc
mov
push
lcall
roll
imul
aas
inc
scas
insl
mov
pop
scas
pop
jg
push
pop
sub
or
mov
dec
jb
inc
mov
xor
mov
pop
or
fsubrs
andb
push
adc
mov
and
leave
cld
dec
sub
add
pop
adc
push
pop
pop
or
xchg
call
imull
sub
mov
inc
or
or
inc
decl
jge
jecxz
xlat
or
ja
mov
pop
orl
fiadds
or
push
loopne
bound
pop
mov
mov
dec
arpl
mov
mov
xor
movsl
mov
or
outsl
xchg
movsb
add
or
loop
sbb
sbb
add
cmp
je
mov
xlat
inc
dec
push
or
mov
push
mov
sbb
mov
cmp
push
gs
mov
mov
das
add
pushf
or
sub
push
push
push
dec
dec
xlat
cmc
aaa
lsl
dec
mov
add
xchg
es
rcr
test
xor
or
loope
adc
sbb
or
fucom
xor
pop
cmp
cmp
jne
sbb
xor
fs
sub
jne
cmpsl
sub
add
or
in
imul
or
or
xor
and
pop
jmp
inc
add
insl
jp
cli
pop
shlb
je
cli
js
xor
add
xchg
sbb
sub
insb
add
fnstcw
add
jae
in
pop
fsubl
sub
and
xchg
xchg
xchg
inc
add
inc
add
inc
sub
pop
lea
roll
and
push
mov
xor
pop
and
pop
push
dec
add
outsb
daa
ret
jae
push
lcall
sbb
add
sub
jns
mov
cld
sub
jb
cwtl
insl
cld
stos
dec
fadds
clc
xchg
pop
loopne
pushf
insl
adc
data16
arpl
daa
inc
gs
pusha
inc
fxch
xchg
xchg
pop
shlb
js
mov
dec
cmovl
xor
xchg
jb
loopne
int
adc
daa
push
xor
insl
fnstsw
iret
repz
in
cmc
std
add
imul
repz
add
mov
lock
cmp
and
aaa
inc
outsb
scas
nop
fs
push
subb
adc
add
es
mov
test
pop
mov
push
push
dec
or
add
test
add
dec
cmc
fcmovbe
add
inc
adc
or
sbb
and
jae
test
push
cmpl
dec
jbe
xor
mov
clc
push
mov
sbb
or
sbbb
sub
pop
daa
outsl
lock
push
or
outsb
sbb
movq
add
adc
cmp
or
mov
test
mov
or
jo
nop
mov
xor
mov
mov
nop
inc
push
cmc
mov
addl
cmp
or
lds
loope
cmp
jl
pop
add
or
xor
rcrl
mov
cmp
adc
divl
ret
push
inc
and
add
pop
xchg
jbe
pop
inc
mov
or
push
mov
cmp
arpl
mov
push
or
mov
fstl
das
popf
dec
or
pop
arpl
jb
sub
and
xor
fisttpl
sub
cmp
adc
in
in
and
sbb
call
orb
ret
pop
fs
adc
clc
outsb
mov
or
test
mov
adc
dec
shl
sub
clc
lods
xorb
call
xor
jecxz
mov
dec
inc
sub
sub
and
sub
push
pop
dec
gs
sbb
cmp
sub
sub
and
xor
sub
retw
pop
rol
movb
cmp
sbbl
push
call
mov
jmp
jae
add
inc
xlat
adc
or
xor
inc
addb
and
add
adc
mov
loop
or
cld
jmp
mov
enter
imul
push
cld
incb
add
pop
push
pop
fldl
stc
add
lock
dec
jne
adc
test
jo
inc
call
sbb
add
jne
sbb
push
or
add
and
xchg
stos
cmc
call
test
and
aaa
and
jo
aaa
imul
push
sbb
cmp
bound
and
jge
adc
cmp
ja
rcrl
cmp
or
repz
and
add
jge
decl
je
or
je
xor
fcompl
loopne
stos
test
fdivrp
dec
es
jnp
sbb
popf
mov
push
xor
inc
lock
fs
mov
loope
sub
sub
repz
inc
and
fcmovnu
repz
jp
fildl
push
ja
adc
jg
sub
sub
cmovb
xlat
xchg
pop
enter
and
jecxz
in
cwtl
inc
mov
add
mov
xchg
mov
dec
pop
jb
sti
dec
inc
dec
push
add
mov
mov
add
lret
dec
cld
and
xor
aaa
loopne
or
or
add
jmp
rcrl
enter
mov
js
push
nop
inc
jp
mov
nop
inc
fsubrl
cmp
jne
sub
ret
jne,pt
mov
insl
jbe
insb
loope
nop
rclb
pop
cmp
pop
or
imul
mov
inc
sub
cmp
lock
inc
pop
mov
mov
fdivl
aaa
mov
lods
int3
pop
mov
les
fmull
imul
push
sbb
in
test
in
dec
mov
fdivl
leave
dec
xor
outsb
sub
adc
movsl
test
cmp
ret
test
movsl
in
xor
jns
sbb
mov
adc
pop
loopne
mov
add
mov
jb
inc
and
pop
pop
jp
in
xchg
pusha
jne
mov
mov
clc
sbb
inc
add
and
and
ud1
gs
out
mov
subb
jae
lods
push
cwtl
loopne
jno
insb
jns
shlb
dec
aaa
loop
add
mov
add
outsb
sbb
push
addl
nop
in
pop
push
add
sti
add
or
mov
mov
mov
clc
jp
insb
add
add
popa
loope
or
sub
insb
push
out
test
outsb
adc
test
fisttpll
mov
mov
inc
add
aas
leave
add
mov
inc
sub
ss
push
mov
jnp
push
mov
nop
or
dec
sbb
mov
and
ret
aaa
mov
incl
adc
ds
jl
push
jb
push
jl
and
push
pop
or
jnp
add
push
hlt
gs
push
sbb
rcr
fiadds
cmp
add
test
or
add
adc
fnstcw
movsb
xor
adc
daa
jns
push
pop
sarb
and
cmp
pusha
jle
leave
push
subl
out
mov
or
sbb
push
push
int3
rcl
sbb
push
loopne
cmpsl
pop
mov
je
pop
sub
sbb
inc
enter
rcrb
xchg
push
sbbl
and
mov
addr16
scas
or
mov
inc
add
mov
sbb
movl
sub
cltd
fwait
dec
pop
dec
aaa
and
mov
rcrb
les
xchg
mov
xchg
inc
and
jns
enter
mov
adc
inc
das
enter
mov
add
add
test
mov
insl
bound
pop
pop
insl
bound
jg
push
dec
add
inc
scas
gs
fwait
add
andb
outsb
jne
insl
outsb
ljmp
or
jmp
popl
jbe
or
fs
insb
xchg
nop
xchg
pop
loopne
gs
xorl
sbb
push
imul
imul
jmp
mov
jle
or
push
dec
dec
fdivrl
mulb
lods
or
add
popa
in
popa
imul
mov
adc
fldz
in
sbb
pop
or
and
add
add
and
mov
add
popl
addb
inc
xor
outsl
nop
out
and
adc
dec
movl
adc
mov
sub
sub
add
mov
pop
je
inc
loop
mov
or
push
or
dec
out
push
lea
add
cltd
in
add
adc
xchg
mov
dec
add
or
or
mov
add
push
push
jmp
lods
dec
adc
test
pop
icebp
adc
sbb
or
xor
adcl
gs
dec
sub
mov
testl
enter
pop
sahf
sub
int3
mov
negb
fildl
iret
mov
add
inc
xchg
and
mov
insl
mov
paddsb
sub
add
pop
xlat
roll
xchg
mov
or
repz
hlt
mov
pop
adc
clc
loopne
pop
lock
je
psubq
lret
popa
nop
cs
into
aam
cmpsl
shufps
inc
jp
pop
daa
pop
popf
sbb
xchg
hlt
dec
loop
push
outsl
pop
and
mov
popa
jb
gs
ret
xchg
enter
pop
pop
jo
inc
pop
push
movsb
or
sbb
stos
jae
divl
sbbb
orb
jmp
dec
mov
gs
shlb
add
add
in
cs
faddl
mov
lgdtl
sub
add
addb
or
jnp
mov
bound
arpl
add
jmp
mov
jo
test
sub
stc
add
addr16
das
sbb
or
test
push
push
jno
fnstenv
and
inc
imul
add
inc
jl
push
push
imul
roll
scas
out
push
out
xchg
or
jb
js
clc
dec
repz
mov
push
push
scas
xchg
pop
imul
sbb
wrmsr
sbb
cmpsl
sub
cmp
mov
push
sbb
dec
das
push
jo
test
push
mov
repz
push
dec
lahf
jo
and
push
mov
pop
test
fidivl
out
notb
int3
lea
cli
mov
adc
xchg
inc
fdivrl
adc
inc
out
and
ja
andps
jg
adc
dec
mov
add
push
add
add
add
pop
add
mov
imulb
mov
mov
mov
mov
mov
mov
pop
sbb
incb
cmp
mov
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
ljmp
cmpsb
fdivr
ficompl
call
call
call
call
call
mov
call
call
dec
cli
into
dec
dec
inc
inc
ljmp
leave
scas
mov
lret
and
jbe
push
lock
mov
push
mov
out
adc
push
push
jns
iret
rep
in
pushf
jmp
pop
in
ljmp
out
in
push
icebp
push
sub
push
dec
pusha
ss
cmp
imul
es
lock
mov
cmpsl
ja
rcr
xlat
push
movsb
repnz
cmp
fs
sub
je
or
push
call
fldcw
in
loopne
cwtl
shl
int3
mov
out
sub
xor
cs
lcall
push
hlt
rorb
sti
fidivrs
aam
cs
push
call
sbb
pop
sbb
fwait
orb
add
inc
out
lea
inc
sbb
inc
cwtl
add
cmp
add
mov
dec
in
orb
rcrl
enter
js
adc
add
mov
aas
incl
inc
pop
test
fcoml
in
dec
or
std
or
fiaddl
subb
adcl
repnz
ffreep
nop
pop
dec
insb
jmp
or
jmp
ds
fdivrs
or
repnz
xchg
xchg
cs
addr16
add
pop
cld
jle
cld
sahf
sbb
dec
insl
or
or
adc
adc
pop
adc
popa
pop
dec
and
push
or
xchg
inc
add
adc
inc
lds
inc
cmove
cmp
pop
jb
push
dec
popa
je
xchg
inc
push
push
addr16
lcall
mov
jg
push
pushf
nop
push
nop
mov
cmpsl
aaa
jno
ret
mov
outsb
add
mov
popa
iret
sarw
mov
bound
or
xchg
mov
adc
jb
aaa
xchg
add
xchg
push
xchg
iret
dec
mov
inc
bound
in
nop
xchg
bound
xchg
or
rcrb
xor
xor
pop
xchg
dec
imul
in
or
imul
or
rorb
ja
mov
add
popa
mov
push
nop
leave
mov
out
popa
jns
sbb
jo
fwait
divb
fisttps
outsb
cmp
pop
stos
lods
out
sbb
add
repz
and
js
inc
aas
add
xchg
adc
aaa
lldt
add
add
int
add
rolb
push
ss
push
popa
pop
stos
xor
addb
add
sub
adc
das
loopne
mov
adcl
test
adc
sbb
sbb
cmp
push
add
aaa
mov
ret
lods
mov
mov
outsb
mov
adc
dec
call
and
pop
les
mov
mov
mov
mov
clc
incl
xor
cmp
sbb
lcall
or
push
inc
inc
inc
decl
mov
into
std
mov
and
mov
jmp
dec
sub
mov
mov
mov
mov
jl
cmpsl
stc
mov
or
push
cld
and
jo
out
sahf
nop
mov
clc
sbb
inc
frstor
sbb
or
pop
fwait
out
mov
dec
and
and
daa
loop
repz
in
and
jbe
imul
je
push
pop
inc
jle
push
xor
dec
repz
push
pusha
and
out
pop
add
jbe
cmpsb
push
push
jo
sbb
sub
out
mov
sub
mov
iret
mov
mov
test
adc
lahf
idivl
pushf
movsb
les
imul
das
add
out
and
and
push
push
clc
xor
pop
jns
data16
push
int3
pop
cwtl
or
lahf
mov
jp
or
shlb
cmp
mov
imul
and
cmp
sbb
push
add
inc
out
loop
decl
in
cmp
into
inc
pop
and
mov
push
mov
or
adc
pop
rcrb
xor
fisubs
or
dec
dec
inc
pop
aad
cmp
into
sub
add
xchg
sbb
pop
sub
aas
pop
cmp
scas
xor
sbb
pop
push
dec
fadds
loopne
cwtl
cmpsl
add
inc
adc
mov
cmp
xchg
xor
loopne
movsb
adc
data16
push
push
insl
popa
xor
dec
lahf
sbb
sub
loopne
rolb
daa
nop
cwtl
mov
cltd
shll
jo
mov
sbb
pushf
addb
dec
mov
dec
test
pop
call
fs
adc
dec
xchg
cmp
mov
add
mov
mov
in
push
dec
pop
lret
stos
das
sbb
pushf
cltd
inc
rorl
imul
mov
test
fistps
mov
add
add
cmp
mov
mov
or
or
and
xor
adc
outsl
xor
add
sbb
arpl
enter
pusha
mov
xchg
cmpsb
sahf
push
test
out
sahf
sbb
sub
ds
jl
out
pop
gs
mov
in
inc
mov
je
cmp
lahf
push
ffree
mov
in
imul
andb
pop
cmp
lods
insb
jno
inc
js
ss
pop
subb
push
or
loopne
movsb
sahf
fcompl
fcompl
das
aad
push
cmp
sbb
pop
lds
jmp
pushf
push
add
daa
push
jg
pop
sbbl
fcmovb
or
nop
lcall
mov
jo
sbb
adc
cmp
push
push
and
rcrb
sbb
pop
lea
add
jb
mov
test
scas
test
inc
ret
fadd
add
int3
es
dec
rcll
sub
cs
nop
sbb
div
sbb
cmp
jp
pop
mov
xchg
pop
lea
inc
xor
nop
imul
sti
xor
sub
sub
cmp
adc
in
mov
jmp
aad
lods
jno
je
js
pop
sbb
scas
sbb
adc
push
push
inc
push
or
nop
or
inc
xchg
pop
daa
rcrb
in
sbb
pop
dec
inc
gs
insl
add
add
or
mov
push
xchg
daa
push
cmp
in
dec
dec
push
push
inc
push
inc
fmull
pop
push
or
add
or
mov
inc
insb
popa
clts
sbb
add
xchg
dec
pop
mov
daa
dec
push
jo
inc
es
imul
mov
pop
xchg
mov
movl
repnz
push
rorb
stos
add
jo
pop
sub
sbb
imul
mov
daa
enter
or
add
pop
test
add
lahf
cli
mov
mov
jecxz
adc
jmp
push
adc
cwtl
sbb
ror
jl
test
push
push
in
shlb
xchg
jmp
jle
inc
inc
add
push
add
mov
adc
jp
and
mov
out
pop
out
sub
inc
mov
psubsb
int
and
sbb
ss
mov
inc
je
maxps
sub
add
cmp
mov
xor
mov
das
inc
aam
or
or
movsl
orb
sub
add
push
or
add
imul
add
adc
push
scas
popf
mov
dec
imul
add
xchg
cli
sub
bound
lock
and
push
clc
adc
jno
mov
movsb
add
sbb
inc
movsb
jle
cmp
sub
xor
dec
jne
xor
mov
cmp
cmp
in
aad
es
es
dec
and
or
push
push
dec
sub
add
sub
push
push
out
imul
or
lcall
sbb
and
cmpsb
imul
dec
cld
andl
xchg
mov
mov
xchg
mov
out
iret
ret
arpl
js
jb
shl
push
inc
sbb
sub
cmpsl
mov
mov
sar
mov
sbb
add
sbb
mov
mov
push
xchg
sub
mov
mov
add
aam
mov
fisttps
pop
enter
imul
mov
add
adc
sahf
adc
mov
inc
cmp
dec
sub
adc
inc
sbb
or
sbb
lcall
data16
scas
add
pop
sub
pop
pop
mov
loopne
in
add
jmp
or
incl
and
ss
sub
mov
add
sub
or
pop
lods
rol
and
test
adc
setno
insb
pop
xor
cltd
inc
ret
push
jl
jg
mov
mov
mov
pop
adc
add
fdivrs
aam
cs
dec
fcomip
mov
shlb
xchg
and
pop
add
sub
aad
es
lea
mov
dec
jp
dec
outsl
sbb
dec
jae
lock
xor
or
shrb
in
das
ja
cld
cmpsl
daa
inc
add
inc
mov
inc
jge
or
loopne
dec
jge
xor
nop
dec
mov
sub
and
jge
std
mov
aaa
push
push
mov
xchg
fdivs
push
insb
insb
push
xchg
out
pop
jnp,pn
movsl
pop
push
pop
pop
mov
inc
inc
mov
mov
addr16
and
in
jl
lods
push
pop
enter
ret
cmp
movsb
xchg
add
ror
test
add
add
clc
pop
xchg
sub
or
mov
dec
push
sub
pop
shlb
ffreep
ljmp
popf
dec
inc
sub
add
neg
xchg
inc
push
movb
inc
cmp
pop
aaa
push
ja
jae
xor
aaa
daa
fisubrl
arpl
mov
xchg
dec
xchg
clc
push
and
mov
inc
and
test
mov
add
push
cmc
divb
mov
sarl
jb
and
pushl
add
adc
xor
test
test
dec
repnz
lret
cmp
mov
les
ficoml
xlat
push
ljmp
adc
in
ret
pusha
call
mov
clc
in
sti
sub
xor
pop
sub
or
jecxz
pop
dec
add
sub
push
jnp
repz
fdivrl
cmp
inc
imul
shrb
pop
movsl
ret
cmp
mov
dec
shrb
mov
inc
subb
test
xor
fsubrl
cmpsl
jae
js
addb
add
xorl
push
arpl
mov
xchg
repz
aaa
testl
js
sarb
aaa
adc
in
sub
add
mov
addb
insb
cmp
je
dec
mov
sarb
test
cmp
adc
in
add
lods
loopne
in
lea
orl
ret
je
jge
div
lea
or
push
push
ja
scas
cmpl
push
inc
xchg
fs
sub
add
into
mov
iret
xor
addl
addr16
scas
adc
outsl
fldl
pminsw
mov
scas
movsl
sub
xchg
jg
inc
rol
sti
push
cmpb
jge
xchg
jae
and
cmpsb
loopne
jno
push
negb
pop
lock
pusha
hlt
lahf
sbb
push
adc
dec
jle
inc
push
stos
vpshuflw
sub
ret
dec
push
jmp
jl
add
fdivrs
xorl
in
mov
test
or
addb
add
push
jmp
or
sbbl
jl
jl
and
call
and
cmp
je
popf
push
jno
pop
inc
push
cmp
fildl
mov
and
cmp
rcr
cmp
and
and
push
inc
xor
sbb
sti
pusha
or
pop
in
sbb
hlt
testl
jbe
push
sbb
mov
mov
call
das
mov
push
sbb
dec
aaa
and
sti
dec
push
push
sbb
cmp
ss
xchg
xchg
inc
add
in
or
jae
push
inc
ret
andb
popa
cmove
mov
or
nop
fucomp
out
lock
leave
sub
inc
push
sahf
test
sub
xchg
test
add
sbb
xchg
cmp
inc
push
lods
or
rolb
push
pop
fisubrl
and
cmpsl
rcr
xor
sbb
pop
push
xchg
push
pop
or
mov
popa
lcall
data16
jl
mov
pop
jae
mov
adc
pop
adc
xchg
popa
aaa
call
cmp
push
aam
pusha
test
push
push
jo
or
or
sub
fwait
sub
rcl
repz
pop
std
jno
or
mov
lock
sub
dec
jge
mov
jbe
inc
add
insb
mov
sub
or
lcall
icebp
mov
adcl
mov
xor
cmpb
movb
fnstcw
mov
xchg
add
xor
sti
movsb
imul
pop
add
dec
jmp
inc
in
or
jl
out
cmp
xchg
sub
adc
add
add
les
inc
pop
sub
and
es
sub
sub
add
mov
push
repz
adc
add
push
rorl
and
push
pusha
mov
and
std
enter
sbb
cmp
mov
xor
push
cmpsl
inc
jmp
fldenv
ss
sti
inc
enter
inc
cmp
mov
imul
inc
pop
xchg
pusha
das
js
or
push
cltd
test
ja
xadd
sbb
push
push
push
cmp
out
pop
nop
pushf
jl
xor
mov
pop
ficoms
push
fdivs
mov
and
push
fstpt
popf
ret
dec
out
xor
jle
push
pop
lret
mov
fadds
aad
xor
les
in
fdivrl
ret
dec
sbb
out
shlb
inc
adc
flds
pop
inc
push
ja
or
pop
aam
inc
adc
ljmp
imul
orl
out
jne
rcll
lea
js
or
stc
adc
jp
push
or
xchg
cmp
fistpl
dec
es
cs
add
push
stc
fstpl
fwait
jmp
sub
add
out
and
lcall
lods
fnstenv
sub
imul
push
push
insl
push
sbb
jns
sub
pusha
push
add
adc
sbb
jl
fistpl
or
ljmp
cltd
xchg
inc
pop
incl
loopne
cmpsl
insb
push
arpl
xor
xchg
loopne
arpl
inc
inc
loopne
insb
andl
addr16
inc
stos
dec
cmp
sbb
mov
dec
sbb
lret
mov
cs
dec
negb
popf
add
xchg
xchg
fbld
lea
xchg
adc
jo
and
adc
xchg
enter
inc
push
aaa
imul
xor
iret
xor
mov
jmp
dec
pop
add
lret
negl
loopne
mov
sbb
call
push
dec
sub
fdivrs
mov
add
pop
jno
dec
ja
xor
push
sbb
add
and
es
lahf
loopne
push
inc
popa
leave
xor
xor
lods
adc
mov
xor
xchg
add
push
push
jne
ss
sahf
test
sbb
dec
mov
pop
sub
dec
js
adc
stos
pushf
jecxz
add
xor
mov
fistpll
sub
lahf
mov
fcmovnb
inc
incb
or
add
sbb
cmpsl
sub
mov
cmpsb
std
inc
jle
out
movb
adc
or
stos
sbbb
cltd
push
lahf
xchg
xorl
movsb
xchg
cmpsb
mov
or
inc
insb
cmc
sub
in
nop
inc
sub
mov
sub
xchg
testb
cli
jmp
inc
mov
loop
adc
xchg
test
xor
xchg
sbb
movsl
adc
mov
insl
xor
arpl
fidivl
je
test
pop
outsb
cmpsb
adc
mov
rolb
pop
loope
xor
mov
jecxz
push
std
inc
jmp
icebp
or
rolb
add
jl
cmp
outsb
lock
pusha
or
add
sbb
sbb
adc
imul
cwtl
cmp
cld
push
adc
and
adc
das
cmp
xor
lret
and
mov
adc
cli
jl
push
and
mov
addl
xor
adc
mov
in
mov
mov
xor
dec
mov
insb
dec
jge
daa
movsb
add
nop
mov
adc
pushf
jle
or
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
or
sti
lock
jmp
enter
lcall
add
cmp
xor
movsb
xchg
into
cmp
jge
add
pop
sub
cli
pusha
add
add
push
push
adcb
xchg
je
jge
arpl
pop
ret
or
leave
les
sub
push
add
iret
and
leave
clc
iret
insb
loopne
jne
cld
frstor
mov
aas
jnp
mov
lcall
out
inc
sub
enter
cs
cmc
mov
push
lahf
dec
daa
cmp
push
pop
lods
repz
cmp
fwait
mov
insl
hlt
imul
add
rcll
lods
sbb
cltd
xor
pop
dec
mov
and
outsb
mov
dec
sbb
mov
jnp
add
cmpsw
insb
pop
lea
pop
iret
mov
sub
sub
shll
inc
push
inc
jge
mov
push
pop
push
clts
mov
xchg
test
xchg
andb
or
roll
xchg
lcall
xor
sbb
or
mov
sub
mul
je
mov
ja
daa
add
les
les
or
andl
xchg
push
aas
aam
add
fnstenv
andb
rcrl
or
or
je
xor
pop
or
and
inc
dec
add
inc
sub
push
dec
in
in
mov
jmp
cmp
je
mov
test
jbe
push
adc
insl
int3
jae
pushf
jge
cmp
push
or
dec
sub
adc
pop
je
je
mov
pusha
jbe
cmp
cmp
xchg
pop
je
cmp
daa
mov
nop
or
pop
jp
orb
fadds
dec
cmp
cmpsb
mov
in
mov
mov
add
dec
jbe
sbb
test
loopne
xlat
push
jl
cli
ljmp
sbb
icebp
pop
xchg
xchg
push
and
push
aas
jmp
adc
mov
adc
mov
mov
pusha
push
cmp
sub
mov
xchg
cmpsb
pushf
sub
sub
ja
jl
and
hlt
sub
mov
mov
jno
and
fs
add
clc
add
out
mov
lcall
sbb
add
mov
iret
mov
mov
insb
and
aam
add
sbb
sbb
sbb
ja
jmp
and
cmp
out
stc
mov
scas
add
adc
mov
or
xchg
inc
mov
lcall
sbb
mov
push
xor
sbb
cltd
mov
ja
sbb
cmp
push
out
add
push
cmpsl
xchg
and
xchg
data16
out
inc
and
mov
and
dec
mov
or
push
je
sbb
xchg
jne
cmp
ret
mov
push
add
stc
pop
mov
cmp
xor
cmpsb
fdivs
jl
push
aaa
aas
or
mov
test
xlat
add
movsb
scas
enter
lret
mov
adc
pop
push
push
out
xor
jae
mov
movb
inc
daa
addb
stos
mov
dec
je
sbb
movl
xchg
movb
push
pop
pop
idivb
int
sbbl
add
mov
lret
hlt
jmp
shlb
ds
add
lods
add
aad
pop
sbb
or
add
xchg
aas
dec
cmp
in
sub
mov
cmpsl
push
ret
nop
mov
push
push
xchg
dec
sti
sub
xor
add
fcmovbe
sbb
fs
pop
push
push
mov
testl
jbe
out
daa
addr16
ret
jae
and
cmp
xor
dec
inc
xor
push
sbb
fstpt
mov
push
jae
dec
push
insl
and
test
xlat
jo
inc
lea
fwait
dec
sub
sbb
jne
sarb
ss
dec
pop
loop
rorb
js
dec
lds
dec
dec
insb
imul
movups
fdivrs
xor
or
push
pop
push
add
add
fcomps
ret
push
sbb
andl
outsl
bnd
orl
adc
aam
push
fldcw
mov
repz
and
mov
inc
or
in
in
inc
xchg
loop
push
cmp
add
cwtl
loope
in
notl
or
pop
push
mov
pop
fsub
xor
enter
lret
cmp
xorl
rorl
xchg
push
ret
fldl
sbb
xchg
clc
or
xchg
pop
mov
dec
push
mov
sub
aaa
xlat
fisttpl
sub
push
arpl
cmp
int
out
loope
or
nop
or
adc
and
cmpsl
lcall
cli
push
jmp
jle
jne
mov
aas
pop
and
clc
jne
sub
add
mov
test
and
inc
loopne
clc
xor
or
jo
fadds
push
je
adc
mov
les
push
out
dec
fnstsw
shr
std
sub
ret
jne
sub
popa
pop
mov
and
ss
cs
inc
dec
push
push
dec
pop
push
inc
and
push
or
ret
or
cmp
icebp
leave
xchg
xor
sbb
add
scas
jb
inc
jbe
rol
lock
jne
cmp
aam
mov
xchg
lock
push
push
ret
mov
xchg
jns
inc
mov
mov
jle
gs
inc
add
add
pusha
or
addr16
and
iret
dec
or
jle
pusha
out
push
and
test
inc
test
mov
pop
popa
mov
cmp
jg
call
sete
data16
add
sahf
push
mov
dec
mov
push
adc
es
adc
dec
add
rol
sub
dec
mov
in
daa
inc
adc
rcll
test
xor
sbb
adc
cmp
add
xchg
jg
lahf
and
int3
jmp
inc
xor
or
pop
mov
dec
and
push
sbb
inc
dec
das
subl
decl
rolb
sub
mov
roll
mov
lret
inc
dec
stos
insl
outsl
roll
dec
dec
push
xchg
dec
pushf
or
mov
xchg
push
inc
or
mov
lods
mov
cmp
imul
imul
cmp
fs
in
mov
test
push
call
dec
add
adc
bound
je
mov
cmp
cli
clc
dec
and
mov
mov
mov
lds
push
cmpsl
push
popa
nop
inc
lcall
add
mov
dec
or
adc
mov
pusha
xor
cmpsb
mov
insl
test
or
rcrb
or
add
imull
rolb
test
xchg
loop
jnp
scas
xor
cmp
dec
lret
mov
dec
add
add
mov
sbb
dec
fsubs
out
cli
push
mov
ljmp
inc
xor
int
mov
lahf
cmp
or
xchg
push
xchg
lea
ret
xchg
add
push
mov
lods
dec
idivl
fldt
add
or
jge
aam
mov
cltd
fiaddl
jns
pusha
and
and
hlt
pop
lret
cmp
aam
mov
incl
add
sub
pop
sbb
push
gs
fiadds
push
and
inc
sbb
xor
pop
fiadds
mov
inc
xchg
flds
lcall
nop
xchg
or
push
sub
jno
and
sbb
inc
or
xor
xchg
cmp
sub
add
sbb
jne
push
jno
xchg
movsb
xchg
mov
decl
mov
shll
lret
aam
mov
testl
and
adc
mov
das
or
push
ret
mov
lea
adc
test
f2xm1
ljmp
cs
cmp
les
mov
or
in
add
adc
inc
loopne
adc
adc
aam
loopne
movsb
push
push
xor
xor
push
pop
jno
xchg
adc
add
adc
mov
nop
add
pop
ret
fimuls
inc
lcall
lret
or
adc
xor
cmp
rcll
push
xchg
xor
fmull
or
mov
lea
rclb
jecxz
dec
divl
xchg
pop
push
rclb
cmpb
loopne
addb
adc
or
rcrb
xor
popf
movsl
popf
push
cmp
jle
or
inc
cwtl
decl
push
cmp
je
mov
lret
jo
pop
dec
and
add
or
idivb
xchg
inc
push
and
xor
add
inc
or
lock
addr16
push
pop
pop
pop
or
fldl
jl
shlb
inc
enter
mov
and
and
mov
test
xlat
adcl
pop
inc
js
pop
adc
push
push
sbb
or
mov
inc
dec
xor
inc
cmp
xor
sbb
cmp
cmpsb
in
add
sub
mov
add
pusha
mov
and
test
mov
pop
jle
fs
cmp
je
pushf
dec
mov
int
push
xor
mov
mov
fldcw
pushf
xlat
adc
je
mov
push
mov
in
dec
or
pop
push
add
or
sbb
jle
dec
or
mov
or
nop
test
pop
out
jo
mov
jo
scas
stc
add
inc
inc
add
outsl
push
mov
mov
imul
daa
sub
push
lret
mov
mov
push
jo
movsb
pop
mov
xchg
add
std
in
and
push
cltd
sub
nop
into
aaa
jl
jnp
outsb
pop
je
mov
movb
ja
mov
or
push
push
lds
push
lret
mov
fwait
bound
mov
push
cs
xor
pop
push
xor
or
mov
mov
xor
pusha
and
subl
or
push
adc
or
insl
lock
nop
cltd
sbb
mov
mov
dec
and
and
setnp
push
cmp
inc
lcall
or
cs
pop
pop
and
xchg
in
inc
pusha
pusha
lods
mov
fdivrs
data16
adc
push
adc
fcoms
aas
shrb
icebp
mov
jle
rcl
adc
mov
out
sub
lahf
sub
insb
mov
adc
xor
pop
pushf
xor
in
cmp
xor
les
aaa
inc
shll
xor
dec
add
sub
mov
daa
mov
leave
je
idivl
sti
jp
xchg
xchg
dec
push
jo
adc
les
scas
rcrl
sub
out
add
popa
pop
or
inc
divl
dec
dec
mov
and
adc
roll
iret
inc
enter
mov
adc
inc
mov
mov
add
dec
test
or
xchg
cmpb
adc
cmp
testb
enter
push
fmull
dec
out
pop
and
sbb
pop
xor
mov
mov
rclb
jno
popf
inc
pop
je
adc
jne
mov
push
adc
dec
lock
add
jge
lock
inc
mov
or
dec
out
pop
push
nop
in
dec
mov
ja
add
outsb
xchg
or
mov
pusha
jg
lds
roll
out
movl
je
and
add
inc
pop
or
pop
jo
sub
stc
cmp
loope
in
pop
aad
xor
ret
mov
add
inc
fbld
adc
pop
jne
js
pandn
insl
xor
pop
cmpsb
xchg
mov
fcmovbe
inc
pop
aam
aam
sbb
inc
push
pop
inc
pop
add
push
popa
outsb
enter
sub
adc
jg
xchg
mov
mov
push
xor
xchg
fcoml
mov
xor
xchg
adc
mov
or
push
mov
push
movsb
mov
pop
das
add
xor
cmp
pop
jb
xchg
adc
inc
cld
add
adc
popl
mov
mov
iret
ret
jae
mov
dec
stos
pusha
mov
imul
int
adc
insb
push
js
push
mov
ret
jge
mov
ret
les
cmp
test
dec
add
in
dec
or
imul
lock
add
sbb
adc
roll
add
sbb
dec
iret
fdivs
repnz
sbb
xor
adc
dec
or
dec
lret
push
jns
hlt
lock
ja
fnstenv
ljmp
repz
gs
call
add
jmp
adc
adc
adc
outsl
and
add
push
dec
sbb
sbb
daa
js
inc
aad
fiaddl
pusha
cmpb
jne
adc
movsb
add
flds
xor
mov
lock
les
dec
and
inc
or
loope
int
fucomip
mov
adc
ret
aaa
enter
inc
fst
sbb
in
adc
xorl
jle
add
mov
mov
lcall
sub
inc
add
or
or
adc
or
push
push
push
insb
push
mov
cmp
inc
js
test
testb
test
inc
mov
or
add
and
sub
add
add
arpl
and
hlt
and
or
xor
pop
pop
je
cmp
push
lods
sub
notb
roll
jo
jne
add
push
fcoms
pushf
shrb
mov
pop
sbb
testl
or
jle
neg
pop
lea
ljmp
imul
ret
cmp
pop
mov
cmp
jge
mov
aas
mov
hlt
cmp
addb
sub
jl
cs
or
push
sarb
addb
jl
adc
add
cs
dec
dec
add
aaa
loopne
sbb
insb
aas
push
lea
loopne
fucomip
mov
cmpb
les
xor
push
adc
clc
jns
fnstcw
and
mov
dec
mov
add
push
xor
sub
sub
cmp
push
jle
leave
js
dec
mov
cmp
test
imul
sub
sub
lods
cmp
push
addl
cmp
and
pusha
test
add
push
shrb
dec
sbb
call
sbb
push
pop
out
cli
in
outsl
or
and
push
mov
cmp
jne
aaa
mov
adc
cmp
cld
ja
cltd
pop
je
mov
sub
jb
je
ret
add
inc
loope
inc
and
lock
dec
or
or
adc
add
or
push
mov
inc
adc
fidivs
loopne
fwait
mov
jb
xchg
sbb
es
fiaddl
pop
inc
data16
int3
pusha
mov
cld
test
movntq
sbb
fsubrl
add
add
sbb
push
das
enter
mov
inc
inc
pop
fdivrl
cmpsl
and
outsl
sbb
adc
loope
pusha
testl
imul
popa
mov
test
movsb
pop
outsl
inc
push
mov
int3
leave
jle
int3
loopne
jo
push
sahf
sti
jmp
add
lea
ret
sub
sahf
inc
bound
or
and
and
mov
dec
pop
add
pop
rol
xor
or
mov
dec
insb
incl
and
xor
es
pop
mov
xlat
or
test
scas
and
lea
cmp
sbbl
imul
ja
mov
and
inc
mov
inc
or
add
ret
loopne
sbb
pop
clc
mov
stos
popa
add
loop
push
das
jp
xor
mov
sbb
lret
aam
popa
and
dec
add
and
adc
add
addr16
xor
aam
inc
dec
add
ret
loop
test
push
adc
popf
les
push
pop
cmpsl
loopne
inc
or
int3
pop
add
pushf
sub
push
iret
xchg
pop
xchg
adc
sbb
loop
mov
movsb
inc
or
sar
mov
out
mov
pop
mov
jae
mov
cmp
or
xor
add
cltd
icebp
popa
sti
xor
inc
or
push
into
loopne
test
add
js
repz
cltd
int3
lcall
mov
push
inc
int3
test
adc
mov
add
outsl
test
stos
sub
xor
push
movsl
test
add
rorb
mov
or
lock
cmp
inc
or
jbe
insb
loop
scas
or
or
adc
mov
push
sub
add
or
pop
dec
dec
or
or
inc
js
rcrl
fldl
cmp
push
inc
dec
pop
test
or
mov
adc
sub
jge
roll
or
mov
test
jmp
sub
push
pop
mov
push
or
lcall
mov
cmpsb
adc
inc
sub
or
inc
sub
dec
add
aaa
aaa
jge
push
mov
push
dec
mov
rclb
dec
mov
pop
push
inc
cmpb
dec
mov
pushf
cmp
jge
inc
jae
addr16
jmp
add
repnz
or
mov
dec
inc
and
movsb
xlat
sub
dec
and
and
sbb
mov
cmp
mov
sbb
add
test
push
add
sub
add
int
adc
add
and
or
aaa
cmp
mov
fs
add
xchg
pushf
jne
bound
add
jb
adc
mov
add
or
add
ss
mov
imulb
sbb
cmp
stos
mov
push
shrl
test
in
clc
testb
or
push
add
jle
push
jmp
sti
xchg
sbb
xorb
adc
and
enter
adc
inc
sbb
push
ret
xor
inc
xchg
imul
inc
hlt
mov
adc
cmp
inc
pop
add
and
mov
cmpsl
aad
add
iret
mov
imul
xchg
mov
das
mov
test
add
jmp
cmpsb
jbe
add
clc
jbe
neg
aam
pushf
inc
xchg
add
xchg
xor
outsb
jp
inc
cs
mov
fisttpll
call
xchg
and
outsl
xchg
and
adc
and
mov
rolb
inc
pop
xor
pop
or
sub
jmp
out
hlt
add
adc
cmp
add
inc
pop
and
jo
and
pop
int
push
jle
test
add
mov
pop
dec
dec
dec
jecxz
rolb
cmpsl
mov
stos
push
test
sub
fcmove
mov
or
subl
sbb
mov
and
inc
imul
and
das
test
xchg
mov
push
or
fsubr
sbb
dec
repnz
sub
sub
sub
ret
mov
add
add
push
xchg
std
fmuls
cmp
rolb
and
out
xor
push
js
inc
push
xor
jg
jg
adc
mov
das
and
orb
sar
push
sbb
mov
push
dec
lahf
je
aad
movswl
xchg
lea
or
dec
pop
mov
roll
mov
add
or
sub
shr
sub
or
fiaddl
mov
sbb
dec
aaa
test
cmp
imul
sbb
sub
lods
mov
inc
lea
ret
addr16
stos
pop
pop
sbb
or
add
test
and
dec
mov
cs
cmp
cmp
lock
or
pop
and
mov
sahf
icebp
or
fwait
jne
test
cmpb
ret
pop
jge
mov
ret
shl
push
bnd
or
mov
xchg
pop
leave
rorb
inc
aad
xchg
fistpl
add
mov
rcll
cli
fiaddl
daa
xchg
mov
xor
addr16
fs
orl
jnp
shrl
push
bound
call
daa
ret
pop
aam
pop
mov
push
rcrb
dec
or
xor
in
les
push
cmpsb
add
shll
mov
pop
dec
xor
js
fisubl
push
sbb
mov
cmp
inc
and
addr16
pop
fcoms
rorl
leave
test
sub
xor
lahf
xlat
pusha
sbb
out
outsl
add
mov
mov
or
xchg
jne
insl
cmp
andb
sbb
sub
js
inc
adc
add
and
into
and
dec
or
packssdw
out
push
adc
ret
xor
xor
pop
ret
adc
je
pop
outsl
mov
lret
popa
addr16
jmp
push
push
xor
pop
lock
xor
in
mov
notb
es
jle
rclb
adc
or
ret
cmp
adc
lds
mov
bound
jne
testb
add
push
inc
add
jle
jae
cmp
cmp
push
jne
cld
add
add
fs
int3
aad
add
inc
rclb
mov
fisubrl
pop
pop
jl
mov
insb
and
aas
xor
mov
xor
jecxz
insb
sbb
xor
popa
pusha
mov
or
les
jo
xchg
mov
enter
dec
push
mov
mov
cltd
test
xor
adcl
movsl
push
aad
lret
rol
inc
inc
loope
das
push
prefetch
adc
add
pop
add
mov
xlat
lcall
mov
xchg
fcmovne
and
pop
mov
cmc
sub
push
in
fistl
nop
int
or
rorb
aas
insb
ret
xchg
sbb
int3
outsl
das
adc
cmc
sub
dec
mov
pop
xor
inc
lcall
rol
adc
dec
dec
daa
or
dec
nop
pop
add
dec
stos
mov
outsl
xchg
sbb
mulb
jge
jo
sub
mov
sub
dec
mov
lea
outsl
ret
sbb
xchg
mov
cltd
jb
push
sub
ficoms
push
xor
or
lea
test
adc
xor
outsl
mov
mov
cwtl
hlt
or
dec
dec
push
movsl
jo
aad
push
inc
add
push
cld
js
xor
movb
inc
add
and
fwait
xor
add
sub
or
scas
cld
sub
fdivrl
or
call
pusha
xchg
add
lret
jbe
sub
pushf
and
push
rcr
mov
les
mov
xor
jns
stos
in
lcall
cmp
xchg
je
idiv
dec
cld
int3
push
clc
fstl
stos
lock
and
sub
hlt
push
mov
and
inc
fs
cmpl
jno
xchg
push
adc
push
cmpb
or
dec
ret
and
inc
mov
add
inc
mov
imul
and
and
inc
or
leave
pop
cmp
jg
sbb
push
dec
inc
mov
and
fisubrl
mov
aas
xchg
pop
and
sub
pop
leave
inc
jb
inc
or
bound
xchg
arpl
push
shlb
pop
sub
xor
out
sbb
cmp
cwtl
push
push
ficomps
mov
xor
mov
fsub
daa
lea
loope
cmp
adc
push
xchg
movl
jmp
or
fwait
out
in
xchg
xlat
scas
ja
in
xchg
and
or
ror
fldl
fcompl
add
leave
outsb
fiadds
push
xlat
arpl
inc
mov
xorb
dec
add
and
add
addl
fidivrs
add
insl
cmp
push
add
test
push
dec
loopne
inc
mov
fisttpl
dec
cmp
or
or
adc
sbb
outsb
sahf
ja
nop
xor
xor
and
test
fwait
outsb
pop
inc
aas
and
add
mov
dec
je
out
insl
mov
add
jmp
bnd
in
aam
int3
pop
fs
jecxz
aaa
xchg
outsb
rorb
add
lds
stos
les
rolb
ficoml
dec
push
push
dec
push
and
mov
mov
push
iret
ficoml
sbb
loopne
push
add
or
pop
je
add
add
and
es
adc
insl
cltd
out
pop
out
lods
sbb
imull
sbb
jnp
jne
mov
repnz
cmp
sub
and
pop
push
add
or
and
cwtl
push
dec
or
hlt
aad
inc
loop
lea
mov
les
rorb
mov
adc
mov
mov
sbb
ret
mov
mov
push
push
out
sbb
inc
movsb
fcmovnu
jne
xor
jnp
add
sbb
fwait
sbbb
mov
inc
sbb
push
mov
sbb
lret
lods
xchg
cmp
mov
or
aad
dec
cmp
es
dec
pop
and
xchg
jbe
xor
sarb
and
cmpsb
xor
xchg
sbb
out
jno
sub
inc
jg
rorb
dec
dec
out
ja
xor
inc
scas
shlb
and
std
xor
bound
hlt
or
dec
sbb
or
adc
push
popf
mov
in
test
gs
mov
cmpsl
popf
cmpl
jmp
sbb
mov
sub
in
jae
mov
imul
ds
andl
arpl
lret
jno
outsb
push
jb
sbb
hlt
add
test
sub
out
stos
cmpb
xor
loope
cld
lcall
and
shlb
sar
pop
pop
call
aad
repnz
sbb
repz
rorb
repnz
push
sti
je
mov
shlb
dec
or
mov
adc
dec
push
scas
fsubrs
dec
adc
mov
es
push
jnp
into
enter
shl
push
pop
cwtl
rcl
adc
insl
hlt
pop
push
out
inc
popa
in
jl
xor
mov
jl
cmp
add
add
out
sbb
hlt
sti
push
inc
push
xor
loopne
and
mov
out
xlat
cmc
mov
adc
outsl
xor
ds
sbb
sarl
mov
add
pop
sub
jbe
lahf
pop
in
cmp
xor
xor
jo
aam
cld
fsubr
cmpsb
jno
lods
pop
push
mov
sti
pop
ss
jmp
xchg
sahf
cld
ja
out
mov
inc
cmp
setg
jmp
push
faddl
insb
inc
add
sbb
push
dec
cmp
setle
dec
imul
inc
inc
es
adc
cmpsb
dec
inc
dec
adc
add
push
imul
add
arpl
loopne
add
rorb
mov
inc
lds
lods
cmp
ljmp
or
out
popa
inc
fs
je
adc
dec
pop
lcall
or
dec
jnp
aam
mov
sbb
shlb
ret
fcmove
inc
loopne
jl
shll
aaa
pop
notl
sbb
out
imul
popa
mov
adc
adcb
out
sub
rorb
push
aaa
sbb
notb
hlt
jmp
xorl
xchg
sbb
dec
pop
outsb
aad
daa
and
std
or
xor
leave
add
dec
call
sbb
cmp
push
dec
popf
movb
and
in
pop
xchg
ret
cmp
call
mov
adc
add
lret
cmp
mov
sub
aaa
loop
loopne
jl
push
xchg
sub
movsl
loop
cmp
fs
or
loope
xor
pop
add
pop
add
jg
in
jnp
lock
scas
int
mov
jle
es
push
lcall
ret
jmp
xor
add
jle
psubq
sub
lods
or
fs
add
rorl
fsubr
push
sbb
adc
test
testl
pop
int3
ja
int3
mov
mov
adc
stos
cmp
imul
jo
lods
or
cli
mov
or
xchg
and
cli
data16
pop
lcall
sti
push
mov
xchg
jns
lret
fucomip
stos
push
pop
in
popa
in
push
dec
sub
xchg
push
xlat
sbb
add
push
dec
lods
pop
and
sbbl
fidivrl
and
sbb
mov
je
jbe
sub
out
sbb
subl
pop
cli
sbb
cmp
jne
push
mov
cmp
mov
fs
xlat
pushf
add
xor
add
es
jo
cmpb
mov
lds
inc
xchg
cmp
push
sahf
cmc
les
dec
or
dec
push
cmp
insb
je
xchg
add
sub
idiv
cmp
jge
push
sbb
inc
lods
fsub
lret
sahf
pop
sarl
iret
leave
sbb
aam
pop
clc
add
and
pop
inc
loope
xor
push
hlt
and
pusha
in
mov
int
into
ret
shlb
jne
push
rclb
filds
shlb
push
push
mov
lock
pushf
xor
or
or
pop
sbb
sti
sub
cmp
jne
push
jp
mov
or
test
xor
push
bound
lock
mov
jae
pop
cmpsl
sbb
and
adcb
push
cmp
rolb
xchg
pop
xchg
pop
mov
xchg
mov
and
push
enter
cmpsl
jmp
pop
adc
add
orl
add
inc
xchg
shlb
cmovbe
not
std
xchg
cmpsb
bound
iret
and
push
in
and
push
das
jbe
cmpsb
fbld
sbb
jb
xchg
xlat
test
ja
scas
mov
jge
aaa
and
pusha
push
out
mov
call
imul
push
mov
jne
push
ficoml
es
jb
test
xorl
in
ljmp
movsl
and
in
pop
fnstenv
xchg
lret
or
mov
jmp
sub
mov
dec
sub
cmpl
pushf
push
sub
dec
adc
mov
xor
add
pop
xor
pushl
jo
andl
mov
sbb
in
popa
sub
inc
push
cs
pop
and
cltd
aas
adc
jecxz
shll
dec
jne
mov
pop
jbe
push
dec
mov
sub
sub
mov
mov
jmp
mov
out
pop
mov
adc
push
push
xchg
test
out
dec
add
jno
jmp
pop
xor
lea
dec
lcall
into
jg
push
mov
add
add
dec
insb
aas
loop
outsl
xor
js
and
dec
xlat
xchg
dec
xchg
rolb
rorl
rcrb
inc
cmpsb
hlt
sbb
or
in
fsubrs
das
jne
test
sbb
and
xchg
pop
or
adc
repz
push
shll
dec
mov
adc
push
repnz
adc
movsb
mov
adc
imul
stos
add
push
mov
or
iret
fwait
cmp
mov
aas
jmp
adc
jmp
lds
jbe
lea
filds
xlat
and
lods
test
arpl
daa
shlb
and
adc
pushf
pop
cmp
jle
clc
call
jmp
lock
inc
inc
adc
sub
mov
je
add
sbb
out
xlat
jne
inc
mov
dec
in
daa
xchg
call
stos
pop
lods
push
arpl
ret
jle
insl
sbb
mov
outsl
popa
inc
add
or
fcomps
les
cmp
pop
mov
push
push
push
and
sub
dec
loop
add
and
sbb
dec
push
dec
insb
fidivrl
mov
adc
xchg
outsb
or
fbstp
sbb
js
orl
bound
inc
nop
cmpsl
cmp
ret
add
sub
popf
es
xchg
xchg
add
inc
dec
mov
xchg
or
dec
fmuls
push
lea
hlt
or
jmp
pop
sub
je
orl
mov
adc
and
call
movsb
stos
mov
sarb
or
inc
pop
inc
dec
rcll
dec
adc
dec
add
mov
jle
fs
and
or
adc
fldl
ficompl
push
mov
xor
inc
mov
push
pop
test
and
dec
cmpl
popf
add
out
incl
xor
pop
pop
pop
xchg
or
adc
cwtl
add
xchg
nop
aam
testb
sub
pop
add
and
jmp
sahf
test
inc
jmp
dec
lcall
fwait
add
or
pop
ret
nop
movl
adc
xor
jae
bound
clc
fwait
dec
xchg
push
inc
je
and
pushf
stc
mov
aas
push
sbb
sub
adc
cwtl
add
xchg
inc
push
out
mov
push
mov
sti
mov
jl
insl
and
sub
fdecstp
add
fdivs
bound
sub
cwtl
les
test
sub
iret
test
dec
pusha
outsb
clc
ret
ss
or
insb
pop
inc
inc
pushl
inc
inc
fwait
push
lods
inc
int3
and
inc
mov
and
stc
lcall
arpl
insb
mov
add
jne
cwtl
jge
into
pop
and
mov
mov
notl
inc
int
push
dec
jnp
mov
xchg
repz
fidivrl
mov
or
inc
mov
movsl
push
mov
and
pop
leave
cmp
fmuls
stos
mov
cmp
test
das
mov
aaa
loop
xchg
clc
sub
cmp
loopne
jl
cmpb
mov
pop
or
inc
popa
jne
loopne
lea
or
jle
pop
pop
icebp
jg
mov
and
jnp
adc
cld
and
in
mov
push
jl
inc
or
addl
cltd
clc
shlb
jo
adc
mov
es
lcall
andb
sub
xlat
imul
int3
rorb
adc
xlat
add
or
and
rcrl
or
sub
das
inc
or
and
mov
fldl
repnz
lock
jmp
push
and
in
idiv
adc
lahf
sbb
xor
push
lahf
mov
repz
and
xchg
jnp
push
in
pop
pop
add
cli
inc
dec
js
leave
or
dec
inc
adc
shlb
lea
ja
mov
inc
test
push
mov
lea
jbe
outsl
je
out
and
sbb
mov
mov
scas
mov
imul
nop
cmpl
arpl
jg
mov
and
and
or
test
dec
sub
clc
cmp
adc
adc
or
dec
xor
jmp
xchg
daa
mov
mov
pusha
nop
push
popa
mov
mov
dec
mov
push
sti
nop
and
xchg
push
inc
nop
or
sbb
push
nop
inc
mov
xor
mov
nop
mov
loope
dec
fsubrp
or
aaa
hlt
sub
out
mov
inc
nop
cwtl
idiv
adcb
pop
data16
bound
sub
js
mov
je
mov
push
arpl
inc
mov
push
aas
dec
cld
cmp
mov
add
mov
cltd
sub
scas
iret
imul
add
adc
popa
daa
add
inc
ret
adc
out
pop
mov
sub
ja
add
inc
sbb
fldcw
lahf
out
or
push
pop
out
xor
xchg
add
push
daa
adcl
clc
movsl
sub
fcompl
inc
lods
or
mov
sub
aas
push
lods
push
pushl
lods
adc
add
cmp
add
jno
add
push
inc
add
xor
add
jp
mov
inc
mov
and
gs
cltd
lock
or
xchg
adc
lahf
mov
popf
mov
std
cmpl
pop
pop
push
jne
outsb
or
shll
dec
decb
into
adc
rolb
sub
mov
mov
enter
push
cmpsb
adc
gs
push
push
mov
fdivs
pop
xor
fbstp
mov
sub
ret
or
outsl
roll
mov
pop
lods
sbb
adc
or
sbb
pop
jmp
push
mov
cwtl
or
daa
push
mov
cmpb
pop
adc
dec
add
dec
je
push
pop
lcall
add
jo
or
adc
out
xchg
loopne
sbb
popl
pop
sbb
xchg
cs
and
imulb
jmp
outsb
cli
inc
sbb
jne
addb
adc
into
cmp
test
and
mov
stos
cmpl
jo
jae
mov
push
adc
jmp
dec
imul
push
cld
add
dec
es
sub
or
and
movsb
or
clc
xchg
xchg
jecxz
cmp
jne
xor
les
xlat
imul
aaa
pusha
xchg
mov
test
push
rcll
arpl
mov
or
pop
pop
dec
adc
imul
fcomp
rorb
add
fldenv
pop
imul
sbb
addl
add
imul
cmp
push
repz
pop
xor
popf
xchg
sbb
je
cwtl
pop
mov
clc
or
sbb
insl
inc
adc
sub
mov
add
adc
or
mov
or
inc
pusha
dec
add
mov
dec
adc
push
pop
xchg
test
fstps
adc
xchg
int
rclb
rdtsc
add
dec
mov
inc
add
and
adc
inc
rorb
inc
es
cwtl
jae
and
xor
and
ret
je
inc
push
adc
pop
aaa
je
inc
xor
pop
enter
pop
dec
ss
daa
or
scas
adc
sbb
sbb
xor
or
ret
adc
jno
cmp
pop
js
mov
cwtl
movl
pop
movsl
stos
adc
xor
add
sub
cmpb
add
push
cmpl
push
xchg
lods
push
mov
sbb
iret
es
mov
or
call
dec
pop
lea
add
sub
pop
pop
add
adcb
roll
nop
inc
dec
mov
dec
inc
je
test
xorl
mov
push
fiadds
cwtl
gs
mov
loope
in
movsl
lahf
jbe
cmp
push
push
mov
push
xchg
cmpsl
shlb
add
push
dec
mov
adc
clc
add
and
popa
movsb
pusha
stos
leave
out
js
jge
push
mov
xchg
fldenv
mov
aad
test
or
xor
jb
dec
or
out
fmulp
adc
test
jns
mov
push
jbe
fwait
inc
test
cmp
dec
sbb
les
pop
cmpsl
rorl
lods
xor
push
xchg
addr16
xchg
call
test
stos
je
xor
adcl
pinsrw
les
dec
pop
ja
jp
pop
sub
repnz
add
xorb
add
mov
daa
mov
pop
negb
in
xor
xorl
mov
pop
aad
sbb
mov
xchg
pop
setae
or
cmp
cmc
xchg
aas
xor
repz
inc
dec
push
and
js
sbb
mov
rol
xor
xchg
sub
jecxz
push
mov
dec
jmp
dec
pop
cs
add
sbb
sti
fmull
rcrl
enter
lods
push
add
mov
jl
jnp
sbb
cmp
xchg
push
adc
lods
lahf
popf
call
xor
and
dec
mov
add
jns
add
das
pop
mov
sbb
pop
aaa
inc
aas
add
in
cmp
ret
sub
aad
hlt
push
adc
roll
or
popa
inc
inc
sbb
iret
shl
push
adcb
add
pop
fldt
daa
sbb
mov
dec
cmp
push
xchg
or
mov
xor
iret
es
inc
nop
ss
pop
daa
aas
pop
int3
test
call
mov
jg
daa
aas
xor
or
dec
xchg
push
and
cld
and
sub
xchg
movsb
adc
adc
or
scas
sbb
push
sub
mov
and
fisttpll
xorb
nop
pop
pop
pop
les
je
sbb
jl
ror
pop
fs
add
xor
es
popa
adcb
inc
add
loopne
sbb
daa
pusha
pop
or
add
sub
mov
pop
push
stos
sbb
iret
nop
inc
cs
sbb
push
rol
fadd
gs
fdivr
lea
xchg
xchg
jne
daa
aam
inc
call
lahf
inc
adc
push
adc
or
dec
sub
xchg
or
inc
test
outsl
ret
adc
inc
rorl
pop
inc
xor
mov
pop
mov
cmp
inc
ret
call
adc
adc
cs
inc
cmp
inc
pushw
dec
or
push
mov
jecxz
test
test
xchg
stos
ss
in
js
sub
mov
pop
movswl
cmpl
jmp
fimull
add
jmp
adc
push
xor
fldt
sbb
mov
push
pusha
adc
push
xor
xchg
mov
fs
push
daa
or
dec
cmp
push
pop
movb
xor
add
push
xchg
add
add
xchg
popa
cwtl
pop
clc
cmpl
dec
ret
cld
mov
cmp
inc
pop
je
pop
mov
cmp
test
dec
xchg
fcoms
xor
sub
jne
add
xlat
pop
push
iret
mov
jno
xchg
xchg
adc
add
mov
push
push
inc
sub
out
inc
in
jle
xor
push
push
add
adc
popf
inc
cmp
and
orl
mov
bound
in
cwtl
mov
shlb
dec
scas
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
ret
cmp
stos
mov
mov
sub
aaa
rcrl
mov
imul
loop
sarl
dec
pop
rolb
test
mov
loop
fimull
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
rcll
into
xlat
push
hlt
jmp
fcomp
adc
cmp
fwait
mov
adc
cld
sub
pop
cmp
outsl
mov
xor
divl
loope
je
dec
test
out
mov
jge
addr16
add
dec
or
add
xchg
cmp
shrl
sbbb
or
mov
stos
lds
test
mov
pop
cs
sbb
sub
dec
fistps
or
push
mov
out
loop
push
xor
fiaddl
lret
daa
adc
ror
shrb
push
cmpsl
mov
mov
lret
inc
xchg
jne
mov
dec
xorl
rcll
fcomip
out
push
mov
and
lahf
in
je
mov
pop
loopne
sub
jle
push
popa
push
push
andb
push
popa
cmp
push
pop
sahf
mov
add
mov
sub
or
imul
lea
ja
inc
push
xor
test
fists
add
or
outsb
scas
mov
sahf
add
push
inc
and
cmp
sub
adc
add
adc
iret
xor
push
pop
push
mov
cmp
test
sti
xchg
xchg
lock
and
cmpsl
mov
bound
or
shlb
inc
sub
int3
ret
sarb
pop
cmc
or
adc
push
ds
inc
ret
and
addr16
aaa
or
dec
adc
adc
push
and
dec
nop
adcb
add
and
or
or
daa
ja
pusha
ljmp
je
out
dec
bswap
and
lret
fcoml
mov
dec
nop
pop
cmp
xor
sbb
cmc
push
mov
inc
loope
iret
add
cmp
in
test
or
add
sbb
xorl
mov
dec
sbb
push
or
push
shrb
or
aam
aaa
pop
or
dec
scas
push
iret
ljmp
add
and
aam
mov
adc
nop
and
loop
jae
rcll
in
sbb
shrl
and
or
jge
aaa
and
adc
orb
in
inc
adc
inc
sub
arpl
push
inc
sub
or
add
das
insl
pop
movsl
mov
rolb
and
jle
mov
dec
add
adc
test
jne
push
and
push
rcrb
push
fsts
jo
rol
sbb
jle
popl
sub
or
icebp
sub
sbb
mov
or
je
adc
bound
adc
add
pop
inc
outsb
or
or
adc
cmp
pop
mov
in
pop
sub
or
loope
jl
stos
push
xchg
pop
push
sbb
add
ret
and
out
add
xor
aam
out
pop
sbb
cmp
lods
or
faddp
xor
jle
movb
jle
jle
test
mov
ret
lds
out
jns
cs
jge
sbb
movsl
subl
test
jne
popf
push
pop
cmpb
adc
xor
fdivp
xchg
inc
sub
lret
cli
in
or
inc
fcmovbe
xor
test
aas
les
inc
inc
loope
ficoml
and
les
cwtl
dec
sub
test
movb
imul
rcrl
das
es
int3
call
loope,pt
jo
lds
mov
mov
and
cmp
cmp
inc
sbb
push
sbb
xchg
add
push
sbb
pop
pop
cltd
jae
inc
shl
fyl2x
jg
aad
mov
popf
cmovp
push
mov
pop
mov
fdiv
icebp
ss
mov
psraw
pop
mov
add
loop
inc
mov
call
push
cmpsb
shlb
cmpsl
lret
jns
jo
add
shrb
dec
lds
xor
pop
cwtl
jbe
das
dec
enter
sbb
ret
ret
js
lea
or
andl
dec
ljmp
test
push
pop
jo
mov
outsl
push
jmp
idivl
insb
lods
loope
push
xor
mov
jle
scas
or
cmp
pop
je
dec
and
pop
pop
std
push
ret
jle
cmp
add
das
in
pop
sbb
ret
or
push
xchg
sarb
popa
daa
pusha
jmp
pop
push
adc
xor
idivl
loope
cmp
syscall
xor
push
out
jnp
add
prefetch
or
fcoms
cmp
jb
dec
cmp
cli
pop
lret
jb
shlb
loopne
subb
push
jne
mov
add
push
dec
xlat
cmp
pop
ljmp
int3
and
xor
adc
hlt
mov
cltd
mov
pop
inc
inc
adc
adc
pop
mov
jl
nop
cmpsb
cmp
dec
ret
stos
pop
das
push
call
add
push
pop
fstpl
orl
add
clc
xchg
add
cmpl
fildl
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
xchg
mov
scas
inc
jecxz
sub
push
adc
pop
jmp
adcl
out
rcr
or
push
mov
loop
subl
push
or
xor
mov
adc
xor
sahf
lock
add
gs
push
pop
aad
adc
pop
xorb
pop
dec
push
iret
leave
xchg
dec
sbb
jmp
add
adcl
adc
mov
cmp
dec
leave
test
push
pop
iret
mov
add
add
jne
sti
aaa
aas
dec
xor
and
ret
daa
addr16
movsb
pop
mov
jl
sbb
je
sub
rorb
loope
push
subl
imul
inc
loope
add
sub
fmuls
mov
inc
rcl
les
inc
loopne
dec
push
mov
lea
pushf
push
movsb
sub
lds
adc
in
out
jecxz
call
icebp
rorb
xor
and
or
pop
and
dec
arpl
je
mov
mov
push
push
fwait
sti
nop
or
mov
xchg
nop
sbb
addb
cmpsl
popf
xor
out
push
add
add
mov
or
in
out
jmp
or
push
xor
push
enter
dec
ss
inc
or
cmpsb
loopne
cltd
push
and
fucomip
in
ljmp
sub
out
add
sub
insb
or
inc
and
inc
or
xchg
int
add
mov
test
and
or
xchg
rcl
push
rol
inc
hlt
dec
lods
adc
mov
sub
inc
cwtl
pop
shrl
loopne
cmp
push
inc
sub
test
fbld
jg
les
dec
ret
add
xchg
je
mov
pop
testl
dec
dec
bound
dec
test
mov
lods
sbb
daa
mov
jbe
xchg
xor
pop
popf
jmp
push
mov
fldt
jle
and
add
aad
add
addps
add
dec
jecxz
test
jl
inc
xchg
mov
sbb
jns
mov
std
andl
add
nop
xchg
mov
pusha
mov
aam
jo
ret
add
xchg
push
xlat
or
adc
clc
dec
shl
sahf
sbb
mov
push
mov
hlt
mov
cmp
or
jl
xchg
mov
dec
pop
ret
divl
nop
or
or
cmpb
out
xor
inc
ljmp
pushf
xor
fwait
push
pop
mov
jecxz
mov
repz
dec
icebp
and
dec
inc
fs
dec
mov
and
popf
subb
lea
push
dec
rcll
sbb
jo
fucomip
pop
or
push
sarb
push
aaa
pop
or
roll
sub
inc
sub
inc
sub
dec
lds
add
adc
in
test
hlt
movsb
sbb
and
jne,pn
imul
sarb
inc
mov
cwtl
sbb
pop
push
jl
andl
fimuls
jno
mov
bound
and
cld
repz
call
push
sbb
sub
call
cmp
fs
add
mov
sarb
data16
and
xchg
leave
lcall
iret
sbbb
adc
fildll
or
mov
arpl
roll
enter
test
push
outsl
xchg
mov
add
and
sahf
push
iret
cltd
hlt
movsl
or
xor
lock
xor
xadd
xchg
je
cmp
lock
fisttps
push
dec
mov
sub
pop
sub
inc
rclb
test
xchg
adc
xor
xchg
sub
adc
or
cmc
or
mov
jnp
int3
ds
arpl
wrmsr
lock
cmp
cmp
and
add
mov
fwait
loopne
movsl
xchg
jno
push
ret
jp
arpl
pop
push
adc
icebp
cltd
mov
call
add
cmp
xchg
sub
and
or
cs
cmp
out
push
add
push
xor
pop
jns
or
fcomps
xchg
cmpsl
jg
lock
mov
adc
test
xor
inc
shlb
add
jno
and
add
cmovbe
or
hlt
push
je
sbb
add
les
jmp
adc
or
or
ss
andl
clc
sub
adc
leave
adc
mov
inc
sub
dec
inc
cwtl
push
xchg
or
push
mov
jl
and
outsl
test
push
fistpll
inc
sahf
push
mov
pop
xor
and
mov
bnd
adc
jmp
sub
loop
jne
test
pop
mov
adc
hlt
jne
inc
loop,pt
movb
sub
push
pop
cmpl
xlat
sbb
add
sbb
fwait
pushl
pop
or
or
sub
sti
popf
dec
inc
addr16
lock
mov
push
pinsrw
push
add
adcb
adc
jle
ja
add
cmpb
es
into
inc
xor
mov
mov
mov
cmp
add
cmp
in
dec
cmp
js
push
mov
add
sub
pop
orl
aas
push
dec
rolb
das
xchg
mov
insb
add
mov
ret
lds
rorb
and
ret
add
mov
add
ret
or
push
aam
adc
add
mov
and
or
and
jo
int
pop
fcomps
dec
add
clc
and
push
clc
mov
inc
pop
rcpps
adc
mov
adc
hlt
pop
or
adc
je
push
add
xor
xchg
outsl
or
rcl
and
sqrtps
push
mov
or
shlb
and
cltd
lds
mov
dec
fidivrl
stos
inc
mov
hlt
stos
jmp
sbb
pop
push
dec
call
sub
mov
pop
inc
push
loopne
sub
sub
pusha
mov
adc
cmp
int
fldt
sub
push
clc
clc
lock
imul
mov
mov
xchg
and
xchg
dec
movsl
rorb
fmul
fmul
aam
adc
sub
popf
adc
mov
xchg
or
sahf
dec
in
push
lahf
add
pusha
stc
mov
sub
mov
test
cmp
rcr
push
dec
subb
or
push
pop
rolb
push
movb
jno
push
or
mov
pop
insl
arpl
inc
inc
xor
rcrb
rolb
insb
movsb
imul
cs
sub
sub
clc
or
rcr
arpl
notl
add
push
dec
mov
dec
mov
in
imul
mov
or
push
push
dec
or
shlb
mov
add
sub
push
aaa
mov
mov
jmp
inc
inc
ja
sub
adc
sarb
dec
dec
shlb
and
push
adc
outsl
das
cs
ficoms
pusha
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
jo
push
adc
fmul
adc
ja
or
pop
mov
and
into
adc
into
inc
dec
add
add
mov
sbb
sbb
mov
dec
xchg
xor
xor
add
sbb
fsubl
dec
jnp
jb
fmull
or
scas
sbb
xchg
cmp
pop
mov
xchg
or
popf
aam
les
sbb
and
movsl
movsl
push
inc
cs
add
data16
push
add
mov
add
push
push
and
pop
repnz
or
pop
add
add
xchg
adc
in
lds
hlt
test
xchg
imul
xchg
jge
dec
or
enter
add
add
mov
or
inc
pop
add
add
aam
pop
mov
jb
xchg
add
mov
mov
sbb
unpckhps
pop
jns
mov
xor
sarl
sub
lret
push
dec
mov
pop
jnp
pusha
sub
lock
imul
int3
sub
and
cs
xlat
inc
jmp
movzwl
inc
mov
or
push
lock
ret
movsl
xor
loopne
outsl
or
cmp
shrb
dec
or
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
mov
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
sti
mov
push
mov
gs
fcmove
mov
dec
arpl
dec
sbb
mov
js
mov
imulb
or
fldenv
cmp
push
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
je
insb
mov
subl
pop
lcall
inc
outsl
repnz
adc
add
sub
sub
jnp
rcl
mov
lea
pop
imul
or
dec
cmp
cmp
aam
or
imul
xor
and
or
add
pop
adc
fldl
cmp
sbb
push
fmul
add
test
out
inc
adc
inc
adc
sub
xchg
dec
or
or
test
fsubrp
cs
rclb
xchg
xorb
ds
movsl
xor
cmp
mulb
into
enter
test
test
or
pop
xor
orl
or
je
and
fucomi
ret
popa
pop
dec
cmpsl
cwtl
add
lods
push
push
xchg
inc
lds
xor
aas
mov
test
cvtps2pi
cltd
xor
pop
add
adc
in
push
imull
mov
ret
js
push
add
pop
pop
movsl
pusha
mov
loope
inc
or
push
testl
xor
sub
lcall
add
arpl
and
test
lahf
cwtl
cmpl
mov
adc
aad
popa
adc
xor
adc
adc
jle
jecxz
filds
add
inc
xchg
jmp
sbb
outsb
stc
test
xor
aas
add
inc
xor
cmp
test
adc
loope
jp
pop
cmp
fiadds
mov
scas
fsubrs
add
add
fwait
test
scas
mov
xchg
movsb
repnz
ljmp
pop
js
mov
call
inc
daa
mov
sbb
ljmp
outsl
inc
cs
fwait
rolb
test
push
xchg
dec
sti
adc
hlt
fisubrs
outsl
mov
dec
hlt
je
addb
scas
sub
jno
mov
sbb
push
lahf
lcall
jo
mov
or
movsl
mov
call
insb
ljmp
xchg
push
stos
push
lods
decl
mov
pop
and
aam
push
pop
in
cmp
inc
and
insb
add
mov
sub
add
inc
sub
test
movsb
sbb
scas
insl
cmp
loope
or
dec
cvtdq2ps
out
test
xor
jns
loopne
addr16
add
pop
fiaddl
movsl
popf
or
mov
push
add
cmpl
sub
orb
aaa
into
mov
jbe
push
or
imul
sub
xlat
nop
sbb
cmpb
dec
xchg
and
add
int3
subb
push
jno
mov
xchg
and
inc
and
xchg
adcb
inc
or
and
mov
bnd
jne
pop
hlt
cmp
adc
mov
xor
pop
jmp
cli
mov
add
dec
enter
adc
pop
ss
call
pop
dec
call
or
and
mov
je
je
add
shll
adc
cs
lods
test
mov
or
ret
andb
out
inc
adc
xchg
int3
push
je
lahf
in
cmp
jge
cmpl
clc
jo
rcll
in
daa
pop
das
sbb
cs
dec
sbb
or
outsb
mov
ret
cwtl
inc
frstor
add
stos
dec
cmp
call
ds
push
xor
inc
rcrl
repz
cmc
mov
dec
imul
stos
mov
loopne
iret
lock
adc
rolb
xor
dec
mov
jp
pop
jne
xchg
or
mov
add
orl
push
or
mov
adc
out
in
imul
mov
dec
mov
add
pop
arpl
push
mov
loopne
add
popa
in
inc
loopne
out
je
lods
popa
dec
and
sub
push
and
pop
inc
inc
rol
cld
dec
adc
push
js
sub
iret
test
or
xor
call
mov
popa
inc
dec
fistpl
push
push
cld
in
test
hlt
leave
add
and
incl
add
out
movsb
push
rorb
data16
out
js
movswl
fwait
in
sbb
dec
xor
push
inc
push
push
cmpsl
cwtl
xchg
sarb
xor
xchg
inc
add
arpl
sbbl
out
sbb
sbb
inc
inc
adc
mov
orb
jo
test
cmc
mov
or
cmp
lock
push
or
jb
jg
dec
adc
mov
mov
test
mov
scas
popa
iret
mov
pop
cmp
jb
loopne
or
push
js
sbb
jle
inc
orb
mov
pop
stos
add
inc
stos
lret
fimuls
adc
mov
cmp
je
pop
inc
movsb
mov
mov
pop
sbb
ret
lret
je
call
mov
xchg
xorb
pop
xor
xor
xor
lock
adc
mov
pop
in
mov
pop
and
or
lods
outsl
and
insb
xchg
mov
aas
mov
pusha
mov
aam
dec
mov
xor
stos
lahf
xor
pop
movsb
roll
movb
push
out
ret
cmpb
lods
xchg
pop
ja
inc
pop
enter
add
test
jp
lds
add
jbe
pop
inc
xchg
out
les
andb
cmp
aaa
rolb
orb
daa
mov
fs
popf
call
dec
popf
dec
and
inc
scas
movl
pop
or
stc
or
push
inc
je
push
mov
jle
cmpb
or
adcb
xchg
sub
inc
mov
cltd
push
lods
add
movsl
inc
loopne
inc
pusha
clc
fstpt
fmuls
sub
adc
rcll
mulb
repnz
or
incl
and
sbb
inc
jl
pop
mov
mov
out
dec
cmp
push
pushf
outsb
mov
cmp
lahf
xor
ret
push
add
sbb
ds
adc
leave
mov
pop
mov
movsb
jns
rolb
mov
cmp
insl
jae
sbb
sbb
cmp
jnp
and
cmp
add
push
mov
push
loope
xor
xor
sbb
adc
push
imul
or
inc
stos
and
fildl
fs
push
mov
lods
mov
fs
jne
enter
cmovo
dec
jne
into
inc
and
fadd
mov
ja
sub
mov
repz
lcall
fwait
jbe
jg
jl
stos
test
xchg
sub
jmp
aam
ljmp
adc
and
push
add
inc
loopne
sbb
sub
jecxz
adc
mov
jae
pusha
or
fidivrs
outsb
add
in
adc
adc
pop
imul
mov
test
lret
pushf
je
jp
aad
pop
pop
push
adc
mov
cmp
add
daa
or
adc
add
movsb
pop
pop
lret
pop
lea
stos
xor
ret
add
sub
push
ss
imul
mov
je
gs
jle
dec
cmp
hlt
out
mov
add
mov
test
inc
cmp
and
mov
bswap
fidivl
ret
dec
or
mov
pop
mov
adc
pushf
dec
mov
mov
scas
movsb
pop
cwtl
adc
pop
add
test
dec
push
add
mov
adc
adc
sbb
jp
fwait
subb
pop
push
adc
mov
cmp
push
lock
lods
inc
decb
out
and
sbb
pop
lock
push
xchg
adc
push
xchg
jge
jne
push
repz
cmpsb
ret
mov
and
in
and
jnp
adc
push
push
inc
push
je
clc
loope
fs
inc
mov
adc
pusha
xor
push
dec
fiaddl
ds
sbb
xchg
jo
loopne
lret
pop
ret
adc
inc
data16
push
scas
mov
jae
adc
inc
cld
mov
shlb
lods
js
int3
and
mov
int
idivl
fs
cmpsb
pop
or
and
jle
fiaddl
popf
int
cwtl
inc
or
fs
stos
push
iret
pop
pop
arpl
cltd
mov
cmp
out
jl
daa
rol
outsl
push
lock
adc
push
jg
push
dec
loope
in
movsl
add
xlat
popw
clc
add
xchg
loopne
pop
sbb
sbb
or
and
add
hlt
pop
shll
mov
push
jo
lret
pusha
and
clc
sub
sub
add
and
add
mov
sub
or
pop
adc
ret
mov
hlt
lds
jmp
pop
mov
or
loope
add
test
jle
shl
fs
movsl
shlb
mov
mov
lock
ret
cwtl
lcall
cmp
cmp
and
call
lea
aad
push
fisubrl
pushf
stos
mov
mov
xchg
or
fistpl
sbb
push
pop
dec
sbb
sub
rolb
fucomi
ljmp
add
add
addl
incl
push
dec
insb
push
xor
jg
or
icebp
adc
fs
addps
adc
and
fdivr
lea
or
test
mov
inc
scas
fstl
or
xchg
push
inc
adc
sbb
enter
sbb
fs
fsts
shrb
mov
xlat
pop
leave
les
icebp
lea
ud0
outsb
sub
aam
dec
pop
dec
adc
and
lods
jne
adc
ret
push
loope
stos
daa
icebp
and
mov
adc
insl
mov
jg
in
jbe
cmp
call
hlt
mov
adcl
push
lods
and
andb
aaa
rolb
adc
in
cwtl
cmp
sub
es
dec
out
fwait
mov
mov
inc
adc
jge
aaa
add
imul
shrb
pop
ljmp
pop
das
dec
mov
pop
rclb
nop
daa
and
xchg
mov
mov
push
rclb
orl
and
lcall
xor
inc
sbb
pop
es
pop
jecxz
or
ret
add
add
pop
cld
mov
pop
sub
xchg
data16
fisubl
add
call
fs
cs
rclb
or
mov
jmp
dec
int
pusha
vmread
inc
mov
inc
push
and
sub
add
xchg
jne
or
jmp
into
push
mov
mov
cmp
roll
xchg
shrb
or
nop
mov
pusha
fucomi
sbb
notl
dec
int3
imul
inc
dec
cs
ret
arpl
jg
into
mov
fadds
cmp
push
scas
daa
faddl
or
inc
inc
dec
and
sub
and
or
add
mov
xor
idivb
and
jo
fsubr
rolb
adcb
cltd
sbb
in
inc
dec
inc
les
add
orb
xchg
adcl
adc
stc
ja
push
lds
dec
xor
inc
loop
or
sbb
or
or
sbb
adc
xchg
clc
adc
or
pop
das
aas
pop
adc
push
mov
mov
shll
js
jmp
xchg
sbb
out
sahf
lock
inc
sub
mov
pop
adc
push
dec
adc
test
and
or
or
notl
sbb
pop
xchg
cmp
dec
rcll
adc
jmp
sub
sbb
xchg
xor
decb
faddp
mov
movhps
lods
pop
adc
cmp
inc
icebp
pop
negb
mov
clc
sub
or
ljmp
xorl
adc
in
xor
push
leave
cltd
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
in
pop
dec
insb
adc
pop
xchg
insb
cmpsb
test
xchg
loope
in
stos
or
push
jp
cmp
or
mov
xor
add
push
in
shlb
jae
andb
bound
dec
xor
dec
add
fwait
popl
ljmp
sbb
sbb
push
mov
mov
push
sub
xchg
add
lods
mov
push
daa
jne
jno
lock
dec
adc
insb
stc
mov
test
gs
mov
push
jle
jne,pt
adc
xor
jmp
aaa
xchg
adc
add
jno
sbb
repnz
and
test
xchg
pop
addr16
or
in
push
in
inc
mov
pop
mov
loopne
push
inc
lahf
add
push
xor
or
lock
mov
mov
xchg
or
enter
and
clc
lock
mov
lea
filds
sub
add
adc
cmp
and
xchg
leave
add
cmp
adc
jae
subb
and
insl
pop
icebp
aam
or
or
sbb
dec
daa
rolb
fs
jmp
sbb
inc
in
sbbb
es
or
inc
lea
pushf
sub
or
xor
inc
pushf
and
in
loopne
push
sub
adc
sub
movsl
imul
inc
inc
sbb
cld
push
pop
mov
cmp
movsl
bound
cmp
andl
in
cmpsb
mov
mov
faddp
popf
xor
sub
test
add
es
sarb
subb
add
outsl
test
add
pushf
or
stc
das
enter
jl
sbb
fsubs
js
or
jbe
sub
lret
dec
and
pop
cmp
add
loope
js
test
inc
mov
inc
aas
out
cmpsb
sti
jo
test
jp
add
inc
add
and
roll
inc
fsubl
push
jmp
push
adc
inc
sbb
mov
popf
ret
scas
xor
cmp
cltd
and
add
popa
leave
push
jae
dec
adc
ja
arpl
dec
aad
push
xchg
cld
lcall
retw
test
push
dec
dec
add
fildll
popa
inc
xchg
insb
xor
pop
inc
adc
ret
add
ret
popa
cmp
jne
sub
cmp
clc
in
add
sub
adc
xchg
cmpsb
adc
inc
call
sbb
rorb
rorb
in
push
pusha
inc
int3
scas
inc
pop
lock
pop
movsb
push
rcll
jmp
jnp
jo
shll
popa
test
dec
out
cmp
pop
lret
cmp
inc
fldcw
jecxz
and
push
test
push
or
inc
sbb
movsb
popa
and
xchg
sbb
push
bound
sub
cmp
ss
cmpb
mov
mov
sub
push
push
cmp
aad
or
adc
arpl
xchg
dec
das
push
fiaddl
pop
or
add
jo
das
add
mov
imul
add
jae
push
stos
dec
dec
push
das
adc
or
add
clc
sbb
adc
fcoms
popf
push
inc
pop
or
pusha
testl
or
jge
mov
add
inc
popa
iret
popf
lahf
xchg
lea
push
outsl
rol
sbbl
xchg
or
outsl
pusha
pop
repnz
dec
pop
sbb
cltd
shlb
icebp
push
cmp
into
xchg
outsl
sbb
or
sbb
push
pop
mov
sbb
imul
fs
jecxz
or
or
inc
xchg
add
add
ds
movb
enter
or
add
and
cmp
mov
cmc
mov
mov
loop
sahf
xchg
adc
push
jb
and
hlt
rorb
push
dec
sbb
pop
sbb
in
daa
pushf
nop
xchg
mov
and
add
lea
ret
in
sbb
or
stos
pop
aad
clc
jnp
push
sub
lods
gs
cmp
push
xchg
outsb
das
sbb
jmp
mov
mov
shrl
inc
push
xor
lret
adc
dec
pusha
out
divl
pop
push
dec
repnz
sub
xor
testl
fisubs
add
inc
or
push
dec
jae
call
daa
push
lods
sub
in
pop
or
scas
out
mov
repz
imul
in
pop
push
int3
sbb
loope
fwait
jmp
pop
sub
xorl
sbb
sub
mov
stos
sahf
and
outsb
roll
xor
test
outsl
inc
lock
mov
ja
in
add
fs
mov
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
jl
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
mov
sub
add
dec
inc
inc
and
add
mov
jo
push
test
inc
inc
clc
cmc
rcrb
cbtw
push
stos
jle
icebp
push
pushf
xchg
jo
aas
out
jo
ljmp
out
lods
out
mov
and
data16
add
dec
fs
jmp
imul
inc
ss
xchg
pusha
pusha
js
fwait
cmp
ja
inc
sub
or
daa
jns
dec
and
stos
jno
mov
inc
add
in
test
jb
jo
lcall
inc
mov
jmp
add
sub
lods
dec
jne
jp
lds
sub
mov
mov
insl
mov
pop
pusha
sub
hlt
in
cmpsl
push
pop
push
lahf
push
pop
jecxz
adcl
pop
imul
lahf
call
lock
mov
adc
fcomps
sahf
inc
mov
sarb
xor
inc
inc
dec
dec
jbe
rolb
mov
test
sub
adc
out
push
add
jne
pop
loope,pn
dec
jmp
adc
andl
sbb
aas
or
dec
addb
push
inc
mov
and
outsl
jmp
adc
out
and
pusha
stos
ss
push
pop
adc
add
xor
sahf
mov
icebp
mov
xchg
push
mov
rcr
jae
push
xor
clc
lock
push
imul
sti
push
fldenv
pop
and
pop
js
pop
pop
outsb
xchg
cmp
mov
in
xchg
imul
jb
jp
pop
or
push
push
pop
scas
lods
adc
mov
push
and
and
fld
xchg
out
subb
xchg
minps
sbb
das
insb
push
push
dec
jne
pop
pusha
and
ret
nop
ss
xchg
pusha
call
rorl
cmpsb
dec
or
loop
test
push
or
push
dec
mov
addr16
lods
and
sbb
and
test
pop
nop
pop
enter
jo
xor
aaa
mov
inc
inc
mov
inc
les
leave
lret
xor
fmul
inc
enter
mov
mov
jecxz
ja
cld
je
popa
xor
in
mov
fs
in
arpl
aaa
sub
adc
or
jecxz
mov
leave
jno
inc
mov
clc
cmc
xchg
cmp
jne
lock
clc
ret
or
add
rolb
fistpl
insb
sbb
stos
add
clc
push
std
mov
xlat
scas
push
mov
push
pusha
adc
add
rcll
mov
mov
jge
jle
jl
dec
jnp
push
xor
lock
ret
fnsave
inc
ss
es
push
mov
mov
and
fdivs
icebp
push
inc
mov
loope
hlt
add
push
and
rclb
xor
int
addr16
pop
push
push
mov
ficoml
js
test
pop
xor
out
cmp
aad
and
test
aas
aad
int3
pop
roll
mov
adc
jl
sub
cs
repz
jmp
adc
mov
xor
or
cmp
pop
and
popa
sub
sub
mov
mov
mov
fcomi
sbb
pop
xchg
and
sbb
pop
jmp
lret
inc
aaa
adc
popa
stos
lods
inc
pop
das
dec
das
push
mov
xchg
stos
loope
pop
xchg
or
bound
xchg
push
push
pop
ret
pushl
pop
je
jbe
lret
and
push
loopne
ret
push
pop
jmp
adc
iret
jp
mov
inc
push
mov
or
scas
popa
add
and
push
push
xor
rcrl
or
nop
mov
pop
out
mov
and
adc
pusha
pop
inc
lea
out
testb
pop
cmp
jl
or
dec
push
jns
addr16
xor
jmp
push
ss
xchg
or
xor
adc
lret
mov
in
jno
jge
add
xorb
and
insl
mov
add
sub
inc
add
adc
decl
jnp
sub
test
or
xchg
stc
adc
test
xor
insl
ss
dec
in
sar
jle
imul
mov
aas
xor
mov
dec
xchg
mov
cmpsb
jge
push
or
push
push
jae
pop
push
or
adc
cmp
mov
imul
lock
cmpsb
pusha
push
dec
inc
outsb
push
rolb
popf
hlt
icebp
insb
bound
sbb
adc
test
iret
je
jne
ret
mov
dec
cmp
push
popa
cmp
mov
mov
sbb
mov
push
sti
jmp
incl
push
adc
xor
popa
js
pop
adc
lods
out
or
bound
xlat
subb
xor
and
xchg
fs
inc
push
xchg
ss
mov
mov
mov
push
test
xchg
cmp
inc
add
int
and
aas
sbb
imul
test
ja
adc
pushf
clc
movswl
cmc
mov
jne
out
pop
inc
clc
inc
xor
push
xor
add
push
inc
sti
cld
push
cltd
cmp
enter
cmpb
loopne
sbb
mov
mov
loopne
cs
push
stc
loopne
inc
loopne
inc
inc
inc
mov
call
inc
dec
ret
push
jmp
or
add
sbb
cmp
jmp
add
insb
or
mov
pop
jo
jge
je
rolb
adc
xor
add
mov
and
mov
or
cmp
sub
add
pop
sub
jg
adc
pop
or
inc
mov
mov
sub
adc
dec
and
mov
out
jnp
les
xor
fs
push
push
or
ret
fisttpll
pop
in
push
cmp
inc
mov
sub
test
inc
adc
push
rcll
push
dec
adc
push
and
mov
pop
jge
hlt
cmp
lcall
movsb
inc
add
or
xchg
mov
sbb
push
jns
inc
popa
inc
push
mov
je
jmp
popa
faddl
cmp
pusha
cmp
clc
pusha
cs
int3
push
inc
in
sub
mov
movsb
dec
jmp
sbb
jb
mov
sub
adc
mov
inc
enter
inc
fs
repnz
add
mov
mov
fcompl
mov
cmp
aam
int3
out
in
sahf
sbb
push
pop
andb
jns
sarb
and
insb
push
mov
jo
in
sub
je
js
test
loopne
jb
xchg
cmp
adc
mov
inc
jecxz
dec
cmp
sbb
sbb
xchg
and
push
fdiv
incl
leave
dec
dec
inc
add
insl
faddl
jns
push
inc
gs
into
ss
icebp
pop
push
gs
subb
cld
daa
inc
lahf
and
jae
sub
cmp
insl
jo
mov
jns
das
imul
das
ss
add
jae
pop
mov
sbb
dec
pop
js
fidivl
adc
sbb
push
inc
push
popf
xchg
add
adc
inc
add
mov
adcb
push
int
inc
lods
jae
mov
rcrl
mov
insb
dec
push
popf
mov
test
push
sub
ret
mov
rcrl
orb
sub
ret
jmp
push
adc
and
jbe
imul
ret
mov
js
add
jo
cmp
je
loopne
popf
mov
lea
pop
sbb
mov
test
mov
sub
mov
sub
xor
and
test
inc
push
cmp
arpl
adc
rolb
movsl
lea
lea
leave
sarb
push
mov
inc
mov
and
or
dec
js
sbb
push
icebp
inc
idiv
loopne
enter
mov
adc
inc
and
or
loope
outsl
sub
xchg
cmpsl
fsubrl
lods
mov
jno
lock
jg
xor
cmp
adc
enter
xchg
xor
nop
fdivp
iret
xor
mov
nop
mov
add
inc
inc
ljmp
jl
and
insb
loope
test
or
dec
cmp
addr16
cwtl
pusha
add
sub
pop
pop
daa
adc
mov
das
aaa
ja
outsb
mov
or
pop
dec
pop
cs
imul
xchg
adc
cld
cmp
jae
mov
or
in
push
mov
fistl
pop
push
xchg
dec
xchg
imul
pop
mov
pop
adc
xchg
add
loop
fsubs
daa
fists
cltd
inc
pop
pushf
mov
pushf
les
fdivrs
xor
js
pop
and
jo
inc
pusha
pop
mov
enter
xchg
xchg
mov
test
enter
jmp
pop
xor
clc
out
adc
sarb
sahf
add
fdivp
push
adc
jno
fiaddl
xor
hlt
xchg
rorl
cmpsb
ret
sahf
or
sar
adc
mov
or
add
pop
cmp
and
mov
mov
adc
dec
push
bound
and
push
push
bswap
mov
inc
mov
sbb
sbb
push
add
push
imul
insb
mov
imul
cmp
mov
lods
aas
pop
xchg
popa
pushf
test
inc
sbb
add
xor
inc
test
int3
lea
inc
or
xor
aad
lock
sub
movl
adc
jae
dec
repnz
jle
cpuid
into
mov
mov
and
xchg
inc
dec
mov
vmread
loopne
out
stc
add
out
lods
aam
or
ret
push
mov
and
movups
add
je
mov
clc
cmpl
and
out
push
jo
cwtl
lods
shl
sahf
out
enter
sahf
out
sahf
fcomp
loopne
call
jge
push
cmp
pop
in
jb
ss
jg
test
pop
sub
mov
xor
cli
ds
aaa
popa
cwtl
out
and
sti
push
movb
ja
add
sbb
xchg
xor
pop
addl
jl
and
inc
pop
sub
aas
dec
decb
pop
mov
pop
mov
add
mov
lret
jmp
or
add
pop
jno
nop
mov
pop
lcall
pop
cmpl
fdivl
sbb
movsl
pusha
movsb
jnp
addb
inc
add
repz
cs
sti
xor
add
lret
sub
cmp
adc
fs
das
dec
popa
enter
scas
lock
adc
jns
sbb
adc
sub
or
xor
cltd
inc
sub
mov
xor
bound
pop
bound
inc
test
inc
roll
ja
and
insb
sub
jmp
xor
aas
inc
lahf
adc
sbb
sar
and
inc
mov
xor
push
add
push
ja
outsl
adc
push
adc
leave
xor
mov
adc
rorl
lock
or
cmpsl
cmp
es
and
sbb
fisubs
and
dec
jecxz
jge
push
cmp
jle
pop
ds
cmp
adc
mov
add
pop
movsl
mov
int3
pop
xchg
aas
cmp
adcl
pop
loopne
pop
add
jp
xchg
mov
inc
mov
outsb
or
adc
loope
mov
call
imul
mov
jae
cmp
mov
mov
addl
inc
push
or
dec
je
xchg
pop
sti
out
addr16
stc
push
and
sbb
aas
cwtl
lods
ret
inc
sub
cmp
jae
cmpl
fimull
inc
push
je
sbb
cmp
add
xchg
or
pop
inc
sbb
xor
push
push
fadd
pusha
lds
daa
mov
adc
movb
add
add
stos
movsb
sub
add
push
or
aas
add
push
sub
cwtl
add
mov
nop
add
and
and
sbb
dec
xorl
ss
and
imul
mov
push
push
push
icebp
mov
and
dec
mov
test
xchg
sbb
mov
es
mov
inc
dec
dec
shll
dec
dec
cmp
test
cmp
sub
shrl
xchg
nop
mov
pop
xchg
add
fucom
jle
jo
push
dec
scas
fmull
xchg
push
sbb
cmpsl
mov
adc
xor
inc
xor
push
repnz
ret
in
xchg
cmp
sbb
popf
push
sbb
add
popa
leave
add
mov
pushf
jns
sbb
pop
dec
jne
test
and
jle
out
dec
testl
clc
movsl
inc
xchg
sub
jle
cld
je
lds
roll
test
mov
js
popa
rol
sarl
lahf
xchg
inc
push
pop
inc
shrl
je
cmp
mov
movsl
fldt
sub
dec
cmp
mov
push
inc
mov
push
add
xchg
mov
ljmp
cmp
lods
xor
mov
out
adc
aad
pusha
add
stos
cmp
ror
js
int
sbb
cmp
je
jns
inc
sbb
pop
jb
in
push
cmpl
subb
cmp
je
jne
das
enter
mov
dec
or
mov
push
enter
inc
sub
mov
mov
mov
push
cmp
add
lds
mov
frstor
mov
andl
or
jecxz
inc
jge
icebp
test
and
dec
mov
out
js
dec
add
mov
dec
jp
aaa
mov
sbb
pop
movsl
mov
jmp
dec
imul
xchg
jg
sbb
or
add
mov
pop
inc
pop
or
push
mov
pop
loop
invd
push
js
pop
daa
lock
jb
mov
or
inc
out
out
movsb
jae
scas
mov
shll
push
cmpsb
xlat
sti
xor
and
movl
enter
scas
mov
test
call
inc
sbb
mov
jmp
and
cwtl
inc
xchg
sub
xor
xlat
sub
and
jnp
pop
jno
xorb
xor
jo
hlt
stos
xchg
scas
sbb
push
pop
mov
in
pop
call
add
pushf
dec
enter
lds
mull
lcall
fsubrl
adc
xor
movsb
inc
fists
or
scas
cwtl
mov
push
outsb
mov
movsb
shrb
push
adc
and
sbb
push
aaa
xchg
xor
in
pop
xor
mov
subl
dec
mov
inc
inc
cli
fsts
mov
push
out
adc
test
push
fidivrs
int
push
movsl
and
inc
xor
or
adc
and
mov
inc
dec
or
ja
adc
repnz
out
mov
das
lea
push
push
dec
std
dec
sbb
daa
xchg
inc
sub
test
movb
push
enter
push
xor
jge
cld
mov
inc
xor
movl
pop
into
inc
add
sbb
jne
dec
sub
xor
add
mov
pushf
jmp
pusha
andb
data16
sub
pop
mov
dec
ljmp
push
xchg
xchg
pusha
loope
mov
inc
dec
or
xor
lret
pop
and
ret
dec
cmp
cli
pop
sub
lahf
mov
into
adc
dec
mov
test
mov
pop
adc
inc
mov
sahf
jno
int3
xor
das
cltd
adc
out
fdivrs
push
lcall
adc
xor
xor
adc
movsl
iret
call
xor
xchg
popf
movsb
loope
cmp
scas
jl
test
dec
adc
movsl
cld
pop
add
loopne
add
icebp
or
push
push
sub
push
fs
add
mov
cmp
jg
addl
aas
mov
mov
push
push
jp
lods
outsl
push
gs
pop
rcll
xchg
call
and
fnstcw
push
sbb
xor
stos
sahf
stos
adc
or
jae
inc
mov
mov
cmp
sbb
dec
ss
jbe
add
xor
sbbl
sub
push
dec
lahf
inc
pushf
arpl
cmp
nop
sub
iret
xor
push
outsl
inc
shufps
inc
cmp
and
or
pop
mov
jbe
js
adc
push
or
sbb
adc
or
mov
call
cmp
jecxz
jae
test
cmp
pusha
je
sbb
inc
mov
out
inc
jg
dec
sub
dec
cmp
nop
dec
pop
xchg
imul
xor
fidivs
xchg
daa
or
inc
ret
pusha
sub
rcrl
hlt
pop
inc
jle
pop
cmpl
cs
lods
rclb
call
movsl
cmp
add
xchg
push
pop
mov
fwait
xchg
addb
add
dec
or
and
mov
xor
adc
aaa
push
add
andb
aaa
inc
xorb
adc
mov
push
mov
test
cmp
lods
loopne
push
sbb
ret
push
cmp
inc
loope
outsb
inc
pop
loop
loope
lret
rolb
push
sarb
and
adc
xchg
addb
pusha
sarl
inc
add
loop
mov
pop
cs
into
repz
data16
loopne
or
and
lock
xchg
clc
xchg
sbb
in
cmp
pop
adc
push
in
insb
movsb
fwait
inc
testb
push
xchg
and
cmp
ds
int
imul
stos
ja
test
mov
enter
inc
xor
jno
mov
pop
mov
lea
jo
in
mov
ss
dec
cmpsb
in
fwait
push
sbbl
inc
fistps
call
les
and
scas
stos
lods
mov
icebp
cmpl
hlt
dec
jecxz
xor
pop
imul
dec
mov
cli
ror
sti
dec
cmp
cmc
xchg
fsubrs
or
cmp
jne
add
testb
inc
or
mov
cmc
dec
test
ret
cmp
test
daa
jmp
lea
mov
sbb
enter
and
dec
loope
call
subb
inc
aas
and
sarl
or
mov
adc
shll
cmp
out
cmpsb
insb
sbb
orb
jl
pop
inc
stos
sbb
sub
sbb
roll
push
push
je
mov
fsubl
push
ja
lret
mov
fcom
andl
mov
and
out
gs
inc
loopne
aas
test
lcall
inc
jmp
ljmp
mov
mov
dec
dec
insb
add
cmpsl
add
ss
mov
cmpsl
inc
dec
xor
dec
adc
roll
mov
adc
dec
mov
mov
pushf
aam
fistl
popa
mov
daa
mov
or
scas
adc
incb
fdivs
cwtl
popa
pop
insl
cwtl
jg
test
je
add
imul
cmp
in
sub
hlt
pop
hlt
mov
pop
js
scas
dec
clc
es
ds
mov
inc
subl
fiadds
repnz
inc
sbb
add
pushf
adc
jecxz
lahf
rclb
add
pushf
mov
mov
adc
push
inc
jle
push
test
xchg
jg
fstl
rorb
sahf
insl
mov
xlat
push
add
jno
nop
test
les
cmpsl
adc
popf
or
pusha
adc
xchg
ss
stos
jge
lock
adc
adc
ret
adc
in
sbb
aaa
cmp
in
imul
mov
rorb
nop
orb
xchg
dec
xor
or
fsubrl
push
sub
xor
mov
cs
mov
add
dec
inc
imul
scas
adc
xchg
push
ret
xor
movups
lea
pop
xor
and
in
xchg
ds
js
in
arpl
dec
in
push
mov
inc
push
loopne
push
das
dec
scas
push
aas
xchg
stos
cmp
jo
xor
pop
mov
pushf
pusha
mov
leave
or
cmpsb
xchg
xlat
in
fsubr
or
push
les
push
sub
rolb
jg
sub
push
mov
enter
or
lods
adc
add
test
sub
adc
outsb
lods
rclb
add
xchg
fdivrl
xchg
adc
sub
int
xor
mov
dec
jne
cmpsb
add
dec
pop
pop
xor
cmp
es
clc
test
or
xchg
cs
fcmovnb
or
or
mov
push
lods
fists
jecxz
cmp
shll
imul
das
aas
xor
and
sub
out
loopne
int3
mov
mov
and
repz
or
xor
jmp
xor
pop
cmpsl
cmp
jne
sahf
dec
int3
jl
dec
in
fwait
aam
ss
or
cltd
inc
ja
rolb
mov
mov
subl
stos
jb
push
and
push
push
jns
dec
and
dec
fdiv
sbb
scas
dec
dec
test
inc
push
cld
js
test
push
mov
dec
push
mov
insb
test
xlat
mov
push
push
pop
sub
xchg
dec
add
sbb
adc
pop
aas
pop
or
repnz
ret
push
add
incl
mov
cli
dec
pop
cmpb
movb
mov
gs
add
xchg
jmp
add
lcall
mov
xchg
sbb
or
cmp
outsb
push
orb
ljmp
je
stos
nop
mov
and
imul
mov
fcomip
fsts
or
popa
jb
add
popa
jae
jle
adc
xchg
jp
stos
add
mov
mov
pop
push
jl
nop
cli
bound
insb
add
test
lods
or
scas
adc
popa
inc
adc
push
adc
inc
mov
cs
mov
repz
mov
xor
js
lcall
fs
arpl
mov
adc
fsub
stos
icebp
jo
lock
shrl
xchg
inc
add
aam
pop
fcmovb
lds
and
pusha
mov
adc
mov
lcall
ret
pop
or
fstps
dec
int
push
or
push
notl
lret
pop
pop
mov
or
lret
es
ficomps
mov
add
ds
mov
inc
mov
inc
insb
enter
fiadds
push
dec
push
call
pop
xchg
sbb
ds
repz
insb
mov
bswap
call
push
dec
loop,pn
cmp
pop
rcr
sub
lock
cmp
xor
mov
adc
icebp
inc
add
inc
insb
int
add
repnz
mov
inc
cwtl
push
call
cwtl
in
bound
ljmp
in
xor
pop
icebp
dec
js
das
sbb
cmp
cmp
jb
jmp
je
push
lods
out
lcall
sbb
xor
push
xor
loopne
enter
inc
cmpsl
leave
add
adc
test
imul
pop
shl
pop
cmp
int3
stc
mov
push
inc
jl
pop
dec
dec
imul
dec
cmp
sti
test
add
and
ret
outsl
adcl
fbstp
adc
cmp
scas
dec
cwtl
pushf
out
dec
out
sbb
add
sbb
out
dec
lcall
call
into
add
lea
cmp
repnz
ret
or
jne
cmpsl
add
xchg
cmp
and
das
or
cmp
shl
jo
fidivrs
cmp
or
inc
aas
xor
cmpsb
jg
xorb
pop
or
popa
push
dec
pop
mov
loop
push
call
pop
loopne
adc
jecxz
cltd
or
test
jb
ljmp
sbb
jl
popa
cmp
movnti
popa
fs
adc
cwtl
cmp
insl
mov
dec
adc
movl
mov
adc
subb
inc
add
or
xchg
nop
adc
shll
push
add
jns
in
andb
in
mov
mov
mov
mov
daa
push
push
subb
jns
pop
bound
pop
repnz
enter
je
inc
add
add
adc
inc
mov
jmp
call
jl
lret
pop
test
dec
xchg
add
roll
adc
loope
add
xor
or
push
mov
filds
lock
or
add
pop
cmp
out
mov
shlb
shr
or
nop
or
dec
imul
pop
pop
and
jl
or
idivl
push
dec
bnd
add
stos
add
add
addr16
lds
andb
jge
xor
or
xor
push
mov
adc
aam
xchg
pop
es
jnp,pn
into
cwtl
add
jns
mov
into
int3
enter
or
or
sub
dec
rcl
or
nop
mov
shr
call
cmp
jno
adc
jo
aad
popa
jo
xchg
fchs
inc
dec
repnz
mov
push
jb
arpl
popf
int
scas
fdivl
or
xchg
add
and
divl
fdivs
add
mov
sub
popa
test
outsb
outsl
jnp
frstor
popa
sbb
and
push
sbb
int
mov
push
push
daa
in
fwait
add
mov
pop
xor
and
inc
jne
inc
scas
fcoms
inc
push
sub
ja
jle
adc
or
adcl
push
loope
leave
adc
les
xchg
mov
xor
popa
ljmp
cwtl
push
pop
and
push
hlt
loopne
mov
cwtl
push
test
ret
inc
test
mov
mov
or
nop
xlat
sub
pushf
xor
sbb
test
lods
jo
jo
xchg
paddsb
mov
xchg
jo
sbb
and
jl
imul
andl
cmp
cmc
mov
and
xor
xor
xor
pop
push
les
test
dec
dec
dec
dec
dec
dec
dec
dec
sub
inc
enter
push
push
imul
and
xor
adc
nop
xor
xor
push
cmp
cltd
test
js
inc
jne
dec
push
sbb
into
jmp
sbb
xor
adc
xor
lret
jae
inc
cli
and
add
add
mov
or
xor
dec
push
outsl
leave
lods
lcall
mov
fsts
pop
rolb
xchg
pop
push
xor
pop
add
idiv
pop
cmp
sbb
add
stc
and
pop
cwtl
rcr
sub
sub
clc
dec
mov
or
je
push
test
sub
jg
cmp
in
addr16
mov
push
inc
jge
shrl
dec
jae
and
xor
and
mov
imul
mov
xor
xchg
pop
mov
adc
xchg
mov
mov
push
xchg
sbb
ret
add
xchg
or
imul
jmp
loope
mov
ret
aaa
nop
jmp
enter
inc
inc
inc
dec
pusha
lret
and
jo
dec
call
pop
dec
jecxz
mov
or
call
jns
dec
mov
add
les
add
sbb
mov
pop
insl
aas
mov
jmp
xchg
xor
xchg
and
hlt
pop
sub
test
inc
mov
push
xchg
lock
test
adc
lods
iret
fiadds
bswap
or
dec
ljmp
mov
sub
jl
xchg
jl
aas
clc
xchg
jmp
addr16
in
loopne
faddl
mov
pop
or
pop
push
fdivrs
xor
jmp
xor
or
push
pop
iret
popa
push
xor
pop
sub
lahf
loopne
xchg
jmp
mov
mov
sub
dec
xchg
jmp
inc
sti
push
add
push
enter
outsb
ret
inc
cli
pop
int3
mov
pop
mov
push
mov
std
test
mov
and
imul
pop
arpl
xor
mov
mov
push
push
mov
lock
inc
pushl
sbb
xor
fiadds
mov
pusha
je
mov
add
test
sti
mov
popa
inc
cmp
jg
mov
ret
add
mov
test
dec
sbb
cltd
insl
xorb
clc
icebp
mov
pop
cwtl
ljmp
out
mov
add
xchg
push
jle
arpl
mov
push
es
sub
push
push
or
sub
lock
iret
leave
shll
jo
imul
mov
jmp
jmp
xor
inc
cmp
push
xor
pop
xchg
je
out
jbe
aaa
in
xlat
adc
fsts
out
cmovle
dec
adc
dec
jecxz
testl
cmp
imul
sub
and
mov
add
add
adc
pop
insb
sbb
inc
imul
mov
push
dec
push
nop
cmp
je
xchg
pusha
aaa
mov
add
clc
pop
fisubl
cmpb
xor
nop
fnstenv
sbb
mov
or
movzbl
cmp
filds
addb
push
addr16
inc
sub
imul
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
xlat
test
and
fwait
aas
fcomps
sub
movsb
je
wrmsr
add
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
mov
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
andb
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
ret
push
or
fdivrs
jmp
jb
pop
imul
mov
dec
jg
cmpl
adc
and
in
sbb
cltd
inc
shrd
nop
push
add
sbb
fimuls
mov
and
cmpsl
add
xchg
add
add
dec
add
rolb
leave
push
ficomps
ret
and
inc
ror
dec
jnp
outsl
ret
call
dec
xor
imul
mov
cmp
pusha
dec
jae
xor
fs
push
fmul
adc
testl
test
subb
push
dec
sarb
addb
or
add
or
pusha
aam
cmpb
sbb
xlat
and
call
int
lcall
jo
sti
shlb
dec
cld
adc
flds
inc
adc
lods
or
push
cmp
mov
or
icebp
or
je
mov
push
shrb
dec
idivl
out
ret
mov
xor
pop
cmp
adc
xchg
roll
xlat
sub
dec
cmpsb
loope
jmp
xchg
push
and
test
push
test
in
cmp
dec
insb
sti
cmp
jo
sub
push
inc
fdivl
adc
pop
mov
mov
push
or
push
in
jmp
inc
lret
adcl
xor
inc
lcall
pop
xlat
xchg
inc
or
sub
inc
cld
dec
sti
psrld
add
adc
enter
pop
jo
push
iret
sub
leave
mov
push
mov
adc
pop
adc
adc
mov
mov
mov
popa
mov
and
and
sub
mov
lock
sbb
pop
nop
inc
inc
or
inc
sub
pop
and
and
lods
testb
sub
shlb
push
aas
in
xchg
and
or
sbb
xchg
xorb
push
jecxz
inc
and
jnp
push
adc
stos
push
je
jp
mov
testb
icebp
sahf
or
adc
lock
xchg
out
add
xchg
negb
pop
add
adc
scas
clc
or
cmp
decb
inc
jo
hlt
rcrb
cmp
jp
int3
push
or
rcrb
and
pop
aaa
cmp
xor
jns
pop
cmp
mov
pop
dec
pop
flds
icebp
mov
lahf
mov
pop
inc
cmp
push
aad
mov
and
jae
mov
fldl
jl
xor
sbb
push
pop
inc
loope
rorb
inc
movsb
dec
xor
mov
mov
or
mov
adc
push
push
dec
or
ret
data16
inc
rcll
xchg
inc
sub
push
cltd
clc
xor
sbb
xchg
and
xor
mov
in
test
pop
xor
dec
rcll
clc
and
loope,pn
rorb
xor
mov
cmp
adc
add
mov
and
add
mov
movl
xor
mov
lahf
hlt
shlb
mov
jo
xor
xchg
lretw
outsb
call
ret
stos
addl
add
sub
pop
test
xor
xor
shll
sbb
pop
aad
jle
jg
insl
outsl
jmp
js
add
je
mov
pop
inc
cmp
test
orb
jecxz
jo
or
xor
jns
cmp
mov
subl
mov
sbb
shrb
xchg
adc
cwtl
out
sub
or
cmpsl
xor
add
or
pop
orb
andps
inc
mov
icebp
scas
xchg
mov
mov
dec
js
movsl
rcll
xor
inc
idivb
fisubl
jl
imulb
je
inc
or
bound
insb
and
pop
xor
push
ss
popa
dec
xlat
or
adc
loopne
stos
inc
cmpl
jmp
iret
dec
cmp
int3
xchg
mov
pop
adc
test
cmc
mov
and
dec
pop
notl
stc
lock
mov
enter
fiaddl
add
std
xchg
jo
lock
out
and
movl
movsl
mov
data16
sbb
shlb
xchg
push
les
push
sbb
ss
shll
mov
loope
and
and
dec
pusha
inc
xchg
outsb
add
addr16
hlt
mov
mov
add
sub
jnp
lock
imul
inc
xor
sub
sbb
hlt
xor
xchg
sub
jo
shll
testb
push
sti
popa
test
sub
or
jo
mov
jns
imul
addr16
insl
test
dec
xor
xchg
jmp
and
nopl
dec
adc
push
insb
clc
push
inc
lock
inc
cwtl
pop
add
leave
inc
popa
imul
jl
mov
pop
push
push
inc
adc
idivb
imul
imul
xlat
mov
inc
mov
fs
pop
mov
jge
xchg
push
pop
cwtl
push
mov
sbb
jb
sbb
repnz
ss
or
push
jno
sub
xchg
dec
incb
push
add
inc
push
sub
int3
push
enter
sub
roll
pop
add
movsb
xor
and
pop
adc
test
pop
and
lea
xor
xor
mov
cmc
sub
add
andl
cmp
or
sbb
mov
xchg
iret
hlt
cltd
fmuls
rcl
sbb
pop
into
hlt
sub
inc
add
test
lcall
dec
outsl
mov
or
pop
jns
stos
sbb
xor
cs
sbb
xor
leave
lock
rorl
add
movsb
loopne
add
jp
xchg
pop
fildll
push
and
nop
push
in
or
mov
movsl
or
fsubrs
dec
ja
addb
clc
loopne
push
xor
or
xchg
or
loopne
ret
xchg
ja
outsb
aaa
fistps
leave
addl
add
loopne
ja
dec
jmp
push
sbb
add
add
test
pushf
pop
lock
or
ret
xchg
call
dec
iret
push
inc
les
enter
sub
notl
lcall
sbb
loop
or
adc
adc
inc
js
push
sbb
mov
andb
addl
cwtl
jbe
or
add
sub
add
sub
enter
jge
fs
test
in
push
sbbb
push
lock
push
xor
xor
add
pop
in
add
add
je
push
shll
ret
cmp
adc
dec
call
outsb
pop
lods
inc
sbb
push
and
test
push
movl
ficompl
mov
mov
setge
enter
pop
les
xor
clc
loopne
mov
pushf
push
or
and
insb
stos
inc
clc
mov
rclb
mov
enter
clc
sub
inc
movsb
nop
lock
dec
lock
and
repnz
fbld
loopne
es
cmp
movsl
cmp
add
clc
arpl
push
movsl
sub
pop
xor
insl
adc
push
inc
pop
in
and
sbb
dec
sub
add
call
adc
in
add
leave
test
sbb
mov
or
out
loopne
sbb
add
cmp
inc
mov
add
inc
pusha
add
data16
pop
cmp
popf
ficomps
inc
movb
jecxz
dec
dec
int
rcl
sbb
add
xlat
and
sub
cmpsl
dec
shlb
mov
jae
jl
push
push
cmp
jge
sub
shl
je,pt
fs
push
shrl
adc
lcall
aaa
aas
mov
pop
xchg
inc
push
dec
fsubrs
mov
je
loope
sub
in
dec
insl
fisubl
push
sbbl
mov
sbb
mov
mov
add
lret
pop
pusha
mov
jp
loope
inc
stos
repz
pop
jl
or
adc
call
aam
movsb
dec
out
scas
movsl
mov
test
push
dec
lea
je
dec
or
sbb
and
push
nop
fcmovbe
sarb
dec
add
mov
ret
sub
or
mov
push
add
repnz
mov
das
nop
xor
mov
dec
pop
mov
cltd
add
mov
out
push
rcrl
sbb
mov
mov
incl
xchg
mov
sbb
call
xor
push
sub
shl
dec
movsl
sbb
aad
mov
aaa
dec
dec
ficomps
sbb
ljmp
mov
es
mov
mov
lcall
loope
lret
cwtl
popa
xor
mov
push
cmp
cld
ja
sbb
jae
add
jge
jle
push
xor
xchg
push
pop
adc
add
data16
add
dec
arpl
xchg
shlb
or
adc
cmc
mov
ds
incb
add
mov
jp
scas
clc
xchg
push
out
lods
and
and
ret
les
dec
inc
inc
cmp
cmpsb
dec
fstl
aam
or
pop
or
pop
xor
cmp
pop
insl
and
pop
outsl
cmp
jle
sub
mov
or
add
jb
addr16
jg
pop
jp
aas
pop
shrb
test
fnstenv
cmp
mov
inc
fadds
daa
inc
dec
adc
addb
and
and
test
push
mov
pop
pop
sarb
mov
mov
push
lods
add
cmpsl
cmp
lea
adc
pop
xor
inc
jbe
sbb
jo
pop
cmpsb
fsubrl
mov
add
addr16
cmpsl
out
aas
je
inc
adc
fmull
in
in
pop
and
jne
mov
push
jne
jno
pop
movl
cmp
mov
pop
xor
add
pop
test
adc
pop
into
pusha
lds
mov
mov
nop
dec
ds
inc
push
inc
inc
rcll
and
sbb
leave
outsb
xor
or
imul
sub
mov
lock
jbe
mov
push
pop
test
dec
pop
mov
arpl
ret
jge
imul
or
mov
inc
outsl
bound
rol
rorl
dec
cwtl
cmp
add
lret
and
cltd
lret
fs
pop
shll
out
inc
fcmovu
mov
xchg
es
lea
xchg
or
je
mov
scas
add
out
js
xchg
outsl
jmp
jge
outsb
pop
dec
imul
push
aas
jbe
and
into
aaa
mov
fsub
mov
popa
test
shll
outsl
popa
xor
sbb
inc
mov
aad
test
mov
or
mov
sbb
out
pop
sbb
push
push
mov
pop
xchg
push
pusha
pop
pushf
add
addr16
jge
or
or
imul
sahf
gs
jns
add
add
mov
xchg
xchg
outsb
jmp
jne
xor
fbld
movsl
fcoms
sub
lahf
and
scas
add
mov
add
xor
inc
dec
repz
inc
and
arpl
lock
cmpsl
and
add
movsl
mov
and
pop
sub
mov
lret
shrl
mov
insb
xor
dec
repnz
sbbb
popa
mov
ret
push
fsubs
es
enter
in
in
pop
push
ss
js
test
xchg
xorb
inc
pop
xorl
xchg
push
insb
cmp
pop
pop
and
inc
jmp
inc
mov
cli
sbb
mov
dec
ret
xchg
dec
inc
dec
or
fsubl
mov
cs
nop
inc
dec
mov
cltd
nop
fiadds
push
repnz
pop
lock
cmpsl
mov
xor
in
add
lods
dec
add
mov
loop
mov
jg
stos
das
lods
out
scas
out
cmpl
pop
clc
addb
jo
iret
lcall
fdivs
sbb
or
js
and
cmp
cmp
ja
push
fdivrl
fs
lret
push
cmp
fstps
mov
cmp
jnp
es
push
push
loop
popf
mov
xchg
sti
mov
imul
aas
pop
mov
push
les
jns
cmp
mov
fcomps
xor
test
insb
ja
lods
shll
push
pop
push
rcl
les
lea
pop
lea
aas
insb
mov
in
inc
xchg
jne
sar
jmp
mov
jle
push
push
data16
push
ds
mov
add
adc
inc
lods
pop
cmp
and
arpl
cmpsb
push
shlb
mov
incb
and
cs
mov
xor
in
mov
lcall
or
inc
or
xor
push
pop
push
inc
xchg
xor
adc
insb
xchg
iret
inc
sub
mov
mov
and
pusha
mov
scas
or
or
ffree
jmp
mov
loop
jmp
enter
push
in
mov
xlat
jl
inc
or
sbb
and
loop
ja
sbb
scas
rolb
adc
and
into
xor
gs
add
and
push
outsl
mov
mov
inc
ret
shlb
nop
test
or
push
ret
mov
sub
out
xorb
jecxz
pop
adc
in
fwait
cltd
bound
dec
xor
push
jnp
inc
adc
add
xor
les
mov
sar
call
js
mov
dec
or
jno
push
sub
outsl
adc
cwtl
lahf
inc
leave
mov
push
mov
mov
rcrb
and
inc
nop
loope
fisttpl
ret
dec
jne
jnp
pop
mov
or
inc
fdiv
mov
rorb
push
lock
inc
mov
inc
add
pushl
push
imull
or
cld
push
aas
stc
xchg
push
push
jmp
pushl
dec
push
lea
inc
add
and
xor
sub
push
mov
mov
add
sarl
lcall
les
in
inc
leave
dec
add
call
adc
inc
out
mov
cmp
jl
mov
sbb
push
call
or
fcmovnu
mov
sub
test
mov
fs
cltd
nop
mov
cltd
fimull
sub
enter
movsb
into
mov
cmp
stc
or
cmp
inc
mov
or
mov
ss
add
les
jns
in
pop
or
jne
dec
push
pop
outsb
je
pushf
dec
xor
push
outsl
push
sbb
aam
je
push
sbb
push
fldenv
shlb
or
out
or
push
pop
adc
int
xlat
xor
sarl
lea
movsl
cmp
data16
shlb
mov
mov
push
les
xor
mov
dec
xchg
adc
jne
and
js
push
inc
sbb
mov
jns
jbe
orb
dec
inc
aas
in
fisttpll
dec
add
mov
enter
lea
scas
in
jnp
inc
aaa
xor
cmp
or
adc
xchg
mov
pushf
cmp
adc
push
or
jle
jecxz
pop
xlat
orb
cmp
je
fsub
adc
lods
xorb
or
loopne
pop
push
call
sahf
insb
movsb
jns
pop
leave
adc
sbb
sbb
ret
clc
arpl
pusha
sbb
addr16
add
jp
cli
jge
push
insl
push
sub
aas
lea
mov
cmc
sbb
nop
mov
and
mov
inc
es
and
aad
mov
mov
popa
or
sbb
fsubrs
shl
sbb
ds
int3
cmpsl
ret
stos
fcmovnb
call
movsb
add
mov
test
pop
cmp
stos
dec
fdivs
sbb
lods
and
lods
adc
cli
xchg
inc
and
mov
adcb
adc
es
sbb
dec
ja
sti
jl
inc
test
mov
jmp
cmp
inc
rorb
push
pusha
into
mov
dec
ret
inc
sbbl
testl
or
inc
test
test
add
popa
adc
pop
jne
loope
in
mov
fistl
movsb
aad
mov
dec
enter
aaa
dec
and
mov
inc
jne
and
nop
idivb
mov
inc
cmp
pop
cmpl
insl
jl
adc
jmp
mov
or
adc
pop
push
cmp
add
xchg
sbb
mov
subl
add
xchg
fprem1
inc
xchg
mov
pop
int3
or
xor
add
mov
add
cld
fdivrs
add
adc
inc
cmp
clc
fmuls
add
test
mov
inc
inc
jae
sbb
push
sbb
into
dec
push
inc
xor
out
mov
dec
ret
inc
stc
xchg
jae
dec
daa
pop
sar
fdivrs
push
mov
or
xchg
cmp
push
dec
cmpl
push
cwtl
ret
add
mov
inc
fcoml
push
add
pusha
xchg
sub
mov
or
lock
and
or
sbb
add
in
cld
fildll
pop
push
push
out
sbb
inc
popf
jp
scas
push
push
dec
pop
std
add
and
rorb
push
pushl
sbb
sub
gs
add
push
or
call
out
add
and
aad
test
punpckhwd
xchg
call
fdivrl
add
js
int3
js
nop
insb
or
push
mov
mov
pop
pop
ret
or
mov
mov
cltd
push
hlt
rolb
or
sti
pop
sbb
addr16
cmp
in
fcoms
cld
or
sbb
or
into
aas
clc
mov
or
sub
pop
adc
test
or
or
out
push
xor
test
insb
inc
sbb
sub
jo
or
ret
movl
and
aaa
push
mov
xor
xor
test
sbb
loopne
add
jecxz
xchg
int
ja
in
into
xchg
cmp
rolb
fbld
ret
add
add
xchg
jbe
dec
xchg
fsubrs
jp
adc
movb
adc
push
cli
in
mov
loopne
adc
lods
popa
imul
add
jge
ljmp
xor
or
divl
cmp
add
xlat
cwtl
adc
inc
sbbb
call
mov
adc
pop
add
dec
loopne
or
push
add
push
and
mov
popa
lds
inc
or
add
add
or
pop
loop
xchg
data16
cli
add
add
push
fsubrs
inc
sub
push
and
push
mov
pop
push
add
pop
jecxz
mov
sbb
rcr
repz
jbe
inc
cmp
ret
dec
push
push
cltd
nop
cld
addr16
dec
xchg
add
repz
inc
addr16
mov
push
jno
xor
arpl
mov
push
cltd
push
push
loope
test
popa
pop
rcl
add
decb
pop
sbbb
or
mov
mov
cmovae
sub
inc
sub
ss
sahf
dec
cmp
and
sub
mov
push
ja
pop
fldcw
sbb
mov
test
jmp
inc
cmp
je
xor
dec
mov
lcall
dec
ret
ret
mov
lods
inc
dec
inc
cmp
addl
ss
jne
jp
aas
pop
lea
cld
mov
pusha
jno,pn
sbb
outsl
test
fxch
das
insb
jecxz
addr16
test
mov
inc
push
lahf
jo
ret
add
mov
add
and
push
lcall
loope
jle
pop
clc
jb
bswap
insl
ja,pt
mov
loopne
test
sbb
jecxz
push
sbb
adc
jo
add
ret
cmp
pop
push
mov
jl
jmp
sbb
sarb
dec
xchg
data16
add
xlat
add
push
sbb
in
mov
mov
sbb
xor
jecxz
or
inc
mov
xor
jbe
sbb
bound
push
mov
pop
adc
hlt
mov
mov
inc
or
xchg
iret
push
lock
and
adc
adc
cmpb
in
hlt
or
addr16
mov
std
or
ret
loopne
and
bound
dec
outsb
and
or
add
les
aaa
mov
pop
xchg
test
dec
aas
in
in
jae,pn
iret
dec
inc
jns
and
in
mov
ja
and
mov
nop
or
cs
push
outsl
and
xor
adc
je
ret
sbb
adc
sbb
mov
xchg
jno
jmp
xor
in
adc
cmp
leave
xchg
dec
fs
sbb
mov
das
sbb
mov
jns
cs
jnp
sub
inc
out
push
mov
sub
cmp
and
daa
mov
test
jge
or
dec
xchg
movsb
sub
and
clc
push
sbb
mov
jmp
adc
hlt
pop
pop
pop
cli
fs
lret
xor
jo
ret
fs
fwait
sti
mov
inc
lock
call
xlat
aam
mov
lock
fimuls
orl
cs
adc
and
dec
shrb
dec
push
mov
mov
cli
cmc
push
xor
gs
idivl
add
jmp
sbb
or
ss
out
int3
lods
mov
fidivrs
add
insl
addl
jl
adc
loopew
mov
decw
nop
or
mov
jno
and
fwait
jmp
sbb
add
xchg
test
xchg
mov
into
or
scas
sbb
adc
xchg
in
push
nop
push
in
aaa
movsl
fiaddl
xchg
mov
bound
push
push
ss
icebp
add
lcall
loope
clc
pushf
lods
addr16
push
xor
mov
cmpb
sti
mov
and
movb
pop
fmull
decl
sbb
mov
pop
inc
loopne
jb
or
int
push
movsl
js
cli
mov
insb
cmp
xor
inc
lock
hlt
add
mov
inc
inc
pop
mov
aaa
sbb
inc
test
push
insl
pusha
mov
push
pop
push
mov
ret
and
push
sbb
push
bound
mov
push
mov
add
push
adc
pop
and
cmp
ret
adc
mov
sbb
pop
js
jb
pop
imul
fcoms
adcl
cmc
push
mov
ja
out
push
add
in
add
mov
mov
rcrb
add
inc
loopne
adc
cwtl
push
mov
or
jmp
mov
jbe
inc
adc
dec
dec
push
or
mov
aaa
js
mov
arpl
cmp
adc
inc
push
jno
and
inc
push
pop
adc
or
xchg
xchg
insl
sbb
jns
cld
iret
call
pop
dec
inc
aas
cmp
sbb
or
add
test
ds
loop
repz
jae
les
popa
je
or
les
push
jmp
stos
nop
hlt
jl
inc
pop
xor
nop
int3
adc
nop
shr
cmp
push
fbstp
adc
addb
jl
fildll
or
pusha
add
fwait
arpl
scas
test
push
andl
shrb
or
add
daa
sub
int3
add
adc
out
cltd
xchg
das
jns
add
adc
cmpsb
adc
dec
xchg
addb
add
imul
xchg
pop
imul
loop
testb
add
mov
test
mov
jne
adc
sbb
mov
xor
push
in
add
fld
adc
and
repz
dec
dec
sbb
cmpl
idivb
push
mov
sahf
add
or
imul
sbb
cli
add
inc
repnz
lahf
es
loopne
adc
sbb
jmp
and
int
addl
push
and
cmp
sbb
push
sti
inc
sti
mov
push
out
xor
pop
or
scas
aaa
daa
or
clc
mov
sbb
sbb
lock
test
and
xor
xor
fdivrl
mov
add
adc
push
sbb
mov
fmull
imul
xor
sarb
cltd
mov
in
mov
mov
cmp
inc
xchg
cli
pop
push
xor
lea
sbb
add
xor
push
push
dec
xlat
out
push
adc
adc
xchg
add
adc
push
jo
inc
fdivr
roll
in
repnz
mov
cmovg
setl
dec
in
mov
push
in
dec
pop
xor
shrb
lcall
sbb
xchg
xchg
cmp
fisttpl
sub
lret
jne
jb
bound
test
push
dec
fstps
or
mov
adc
cmp
mov
cmp
and
ss
xchg
lods
dec
rcl
jmp
push
lds
jecxz
clc
xor
imul
rolb
dec
inc
or
or
dec
es
push
icebp
or
add
out
sahf
pop
push
loope
add
add
lods
movl
addl
je
jne
pop
cmp
cmc
add
cmp
inc
popa
add
les
or
add
mov
mov
cmpsl
add
push
and
sbb
cmpsb
pop
je
mov
add
mov
push
mov
mov
aaa
dec
xor
lods
add
mov
rclb
cmp
dec
jmp
jge
xor
ret
sbbl
shlb
aas
aas
cmpb
rorb
xor
or
push
add
pop
ret
adc
and
xchg
mov
int3
pop
movups
sub
pop
adc
pop
or
push
push
daa
pop
cmpsb
add
inc
xor
jmp
dec
inc
xor
lret
mov
insl
gs
mov
std
mov
lcall
sub
sub
and
movzwl
pop
imul
xor
fnstcw
push
stos
adc
fs
dec
outsl
add
cmp
ficomps
xchg
mov
nop
ds
sbb
loopne
jg
sbb
xor
movsl
ret
add
imul
sbb
xor
outsb
testb
aaa
add
jg
or
sbb
or
jg
push
sbb
jmp
jbe
sbb
dec
add
addr16
xor
cmpsb
jmp
repnz
pusha
cmp
dec
ja
and
push
pop
vpshuflw
loope
mov
clc
out
push
cmp
jne
inc
ss
xchg
sub
sub
sbb
and
adc
sub
fwait
mov
movsl
std
jmp
sbb
stos
pusha
pusha
sti
pop
inc
jg
test
lock
ret
sub
pop
daa
cmp
mov
lock
jl
mov
imul
and
push
jmp
les
add
jl
inc
sbb
insl
dec
popl
jge
mov
scas
arpl
and
popa
adc
push
and
ret
sbb
ds
stos
imul
adc
inc
jae
cmp
nop
push
jns
iret
repz
sub
rclb
cld
out
jns
out
dec
js,pt
inc
or
pop
fcompl
cmp
cmp
sbb
cmp
dec
fsubrs
les
idivl
pusha
and
out
out
in
sbb
push
adc
dec
and
gs
push
add
lods
cmp
dec
mov
nop
nop
inc
adc
adc
mov
mov
mov
push
jnp
jo
inc
dec
cmp
test
adc
mov
xchg
xchg
out
aaa
add
insb
mov
and
movsb
mov
mov
test
add
cli
add
add
mov
filds
or
lcall
in
aad
hlt
cmp
push
ss
pop
adc
inc
insb
popa
je
je
adc
add
testl
int3
pop
mov
inc
nop
icebp
dec
push
pop
dec
add
nop
cmp
int
jmp
and
outsb
mov
xor
add
add
pop
add
add
jo
add
adc
sub
mov
sub
jno
fs
scas
cld
mov
or
pop
mov
aas
or
clc
lock
or
inc
push
or
sbb
fdivrp
and
sub
rolb
add
test
sub
add
cmp
out
inc
adc
inc
dec
inc
inc
push
dec
cmp
pop
sub
in
pop
push
insl
outsl
fs
add
inc
scas
test
inc
roll
lock
lret
mov
or
inc
push
push
enter
pop
sbb
ret
arpl
mov
pop
push
je
and
or
sbb
jl
js
or
das
adc
and
mov
or
divl
dec
inc
imul
inc
fs
js
pop
inc
sbb
sbb
sbb
ds
sbb
push
mov
pop
cld
inc
inc
repnz
pop
adc
test
mov
dec
inc
add
inc
testl
dec
jbe
push
add
inc
ja
cmp
fisubrs
sub
nop
and
in
jp
stc
push
and
push
inc
cmp
or
inc
nop
add
jne
pop
xor
xchg
sbbb
loope
mov
stos
push
push
jge
inc
dec
inc
jp
jae
dec
aaa
dec
or
or
and
dec
aam
sub
add
add
push
mov
pop
inc
add
xlat
push
pop
mov
cmp
or
ret
push
jp
or
jle
fisttpll
gs
in
mov
leave
rorb
add
cli
mov
prefetch
sbb
mov
xchg
xchg
inc
dec
movsl
sbb
out
and
int3
inc
std
das
mov
popa
pop
adcl
cwtl
or
jnp
nop
push
shl
int
jns
xchg
pop
add
enter
dec
aaa
jb
les
sarl
and
inc
jnp
add
cmp
or
lods
or
mov
xchg
addr16
cwtl
sbb
sbb
arpl
mov
es
sub
sbb
add
es
adc
outsl
cwtl
pop
inc
xlat
push
pop
outsb
divl
xchg
nop
or
lea
pop
jl
jo
addr16
adc
adc
ret
adc
rcrl
and
push
push
fbld
andb
jge
xorb
adc
shll
orb
dec
repz
fs
mov
mov
and
add
fs
mov
roll
insl
popa
jb
or
push
push
push
out
mov
pusha
popa
sub
iret
insb
push
jo
addb
out
sbbl
or
pop
ds
add
iret
add
lea
or
xor
setne
dec
imul
popa
or
iret
add
mov
add
enter
sbb
sub
push
rcr
push
ficomps
aam
xchg
jne
adc
jo
xchg
pop
sarb
mov
inc
test
or
mov
add
addr16
push
push
dec
push
add
inc
outsb
jge
inc
out
mov
neg
dec
pop
push
pop
nop
loopne
and
test
shrl
fisttpll
dec
xlat
lea
xchg
lcall
and
mov
cmp
pop
and
and
jle
mov
clc
inc
clc
sbb
dec
inc
add
push
jl
enter
jne
pop
push
int3
push
inc
pop
jle
lods
sbb
into
push
fs
inc
inc
add
sub
fcompl
cwtl
inc
add
mov
inc
movsb
and
push
clc
mov
inc
inc
sbb
inc
mov
arpl
jb
pslld
sbb
inc
adc
testl
add
mov
incb
into
data16
mov
nop
call
clc
dec
mov
repz
pop
push
pusha
sbb
push
xchg
fs
cli
inc
call
add
jmp
or
and
pop
ljmp
add
add
inc
imul
inc
loop
sbb
mov
push
add
fsubl
xchg
or
adc
jp
mov
scas
add
or
jg
mov
mov
pushl
push
push
ljmp
pop
adc
stos
iret
cmp
shrb
dec
jle
test
push
enter
in
add
jns
divl
in
addb
enter
notl
push
inc
test
test
cwtl
imul
xchg
xchg
lock
mov
jo
sub
ss
push
xor
lahf
repnz
aam
dec
mov
sahf
out
sub
je
pop
int3
cmp
flds
push
movsb
jnp
pop
fistpll
inc
pop
into
cwtl
mov
int3
jl
mov
jnp
xchg
es
gs
cmp
mov
loope
sarl
mov
cmp
mov
lahf
pop
and
loope
jp
pop
shll
out
insb
and
add
dec
daa
pusha
and
sbb
fnstcw
ret
or
sbb
dec
ret
push
movsl
cld
and
pop
push
cwtl
or
or
or
data16
rclb
sub
push
or
leave
mov
jmp
lret
loopne
sbb
clc
mov
cltd
push
pusha
add
jo
mov
out
out
push
decl
mov
in
add
aaa
jb
add
cmp
add
inc
add
pop
inc
adc
test
mov
adc
xchg
maskmovq
notl
inc
dec
gs
push
ljmp
sub
add
pop
add
ja
pop
insb
add
incl
sbb
add
inc
add
xchg
jne
mov
insl
xor
cmp
sbb
pop
inc
clc
adc
sbb
sbb
lock
add
sbb
call
adc
sbb
dec
xchg
push
xchg
in
push
add
inc
repnz
add
adc
pop
xor
and
and
adc
and
xor
mov
or
and
jb
dec
andl
mov
cmp
and
and
adc
in
pop
das
int3
je
aam
insl
sub
or
roll
pop
inc
test
pop
push
lock
add
push
pop
sbbl
jmp
mov
and
movsb
stc
dec
cmp
sub
icebp
jmp
fwait
sub
shlb
rolb
push
mov
push
or
xor
jno
pop
pop
xor
aam
insb
fs
mov
jne
jecxz
mov
adc
dec
pusha
jo
push
inc
pop
dec
rol
mov
or
adc
sbb
mov
xchg
nop
imul
mov
ds
jae
mov
xlat
sub
inc
pop
pop
dec
xor
xor
arpl
pop
xchg
cmp
xor
xor
fnstsw
and
hlt
pop
sub
out
xor
mov
aas
int
addb
push
hlt
inc
ss
push
sbb
and
add
loope
jns
jns
push
mov
in
cmp
jmp
data16
inc
or
and
clc
jle
out
fbstp
scas
inc
add
jge
pop
pop
cs
jle
insb
push
lret
cmp
aad
and
pop
pop
xchg
cmp
add
dec
push
dec
enter
or
test
aas
pop
xchg
xor
xlat
and
xorb
adc
test
nop
fcoms
aas
fwait
inc
pop
inc
cwtl
dec
lods
test
stos
inc
adc
loopne
insl
push
or
and
inc
inc
inc
fs
sar
rolb
mov
xchg
inc
mov
inc
inc
movsb
test
jmp
outsb
clc
jns
mov
shlb
pop
push
pop
ret
inc
pop
jb
dec
nop
inc
mov
inc
dec
stos
fs
das
inc
push
inc
xchg
dec
gs
xchg
pop
leave
jl
dec
add
and
mov
test
test
inc
inc
test
and
dec
inc
push
and
push
xor
push
cmp
inc
push
and
inc
push
cmp
in
mov
cmp
imul
nop
das
in
push
add
pop
enter
push
dec
adc
push
cmp
insb
in
push
hlt
das
mov
test
mov
repz
push
inc
pop
test
test
nop
rcrb
test
jns
ror
enter
in
mov
rorl
enter
xchg
or
jg
or
hlt
lods
cmp
pop
push
cmp
pop
leave
add
aas
rcrb
lcall
repnz
inc
mov
mov
imul
xchg
push
iret
mov
iret
clc
push
popf
out
data16
lcall
cs
or
out
pop
sub
mov
push
test
mov
or
nop
in
add
mov
inc
pop
or
vminss
mov
iret
pop
imul
push
mov
out
mov
cmovo
adc
cmp
movups
and
adc
inc
shrd
enter
loopne
xchg
nop
adc
scas
inc
xor
xor
leave
out
xor
add
xor
mov
mov
inc
pop
testl
jb
pop
push
andps
or
mov
add
loop
xor
imul
not
mov
cmp
push
add
cmc
jnp
fdivs
jmp
push
je
and
or
push
inc
fdivs
ret
mov
call
mov
insb
xor
add
mov
add
loopne
and
jge
xchg
hlt
es
sub
js
add
dec
sub
bound
repnz
adc
dec
pop
jo
or
fsubrs
in
add
into
jl
divb
hlt
mov
and
sarb
ss
xchg
inc
inc
xor
add
mov
mov
xor
imul
adc
ds
fisttpl
mull
cld
leave
call
cbtw
dec
and
sub
or
xor
nop
lods
xchg
aam
scas
and
cmp
inc
mov
xor
sub
sub
push
test
xchg
add
pop
pushf
mov
adc
mov
push
adc
pop
dec
or
push
repnz
xorb
je
mov
movnti
test
rclb
push
sbb
cmp
out
test
xor
xchg
xor
adc
sbb
xchg
push
inc
and
cs
mov
mov
add
aaa
repz
aaa
dec
mov
mov
cmp
xchg
mov
aam
sbb
insb
push
or
jbe
or
jae
pop
pusha
out
mov
xchg
inc
movsl
mov
out
loopne
int
dec
cmpsl
div
mov
lret
jnp
mov
int3
add
out
pop
sahf
add
or
adc
cmp
fcmovnb
sbb
add
fisubl
cwtl
addr16
cltd
dec
adc
iret
aad
lahf
ja
testb
jae
cs
sbb
add
pop
lcall
push
sub
add
inc
cmp
fadds
cmpsl
pop
pop
aam
dec
cmp
adc
add
lods
test
xlat
mull
ret
pop
pop
shl
add
icebp
jl
cmp
sub
add
inc
push
je
sbbb
mov
dec
push
out
js
stos
mov
push
mov
movsl
mov
fwait
or
mov
fwait
mov
pop
cs
fwait
jae
and
or
sbb
notb
ds
push
inc
add
jge
inc
aas
mov
and
and
fistps
xor
add
sub
push
xor
dec
xor
push
adc
xor
xor
add
push
or
outsb
or
shlb
pop
dec
shrb
add
or
sub
or
push
inc
sbb
pop
or
mov
pop
xchg
out
pop
cld
add
jl
inc
and
mov
inc
add
add
test
mov
add
sub
es
in
or
add
imul
xlat
mov
jbe
add
call
sbb
inc
loope
jp
push
xlat
and
mov
test
les
add
mov
or
lret
dec
aas
cmpb
push
cmp
add
adc
jmp
sub
sub
imul
pop
testb
mov
faddl
rclb
lea
and
fsubs
arpl
inc
cmpl
adc
sbb
loop
fwait
and
add
lock
add
mov
xor
stos
cmp
push
and
fadd
sbb
lods
dec
jl
adcl
sbb
jg
int3
pop
or
or
sti
cmp
fucomi
arpl
test
xor
test
iret
cli
lds
jo
push
push
test
mov
es
bnd
adc
hlt
push
mov
int3
sub
leave
rcr
in
push
dec
leave
cmp
and
lret
add
mov
mov
mov
mov
push
and
cmpsl
push
push
lahf
mov
sbb
ds
or
movsl
add
movl
mov
popa
inc
push
shr
push
pop
push
fs
adc
mov
lods
jmp
nop
lea
cmpsb
adc
push
pop
repnz
xor
or
and
inc
fs
jmp
push
inc
pop
inc
scas
cmpl
icebp
jmp
out
and
inc
or
dec
cmp
hlt
out
insl
cmp
cs
or
sbb
and
lret
sbb
lods
arpl
jo
mov
ret
sub
push
push
cmp
push
mov
sub
fnstsw
sub
fstps
xor
push
jmp
dec
in
xchg
add
adc
add
jle
or
or
stos
or
je
inc
xchg
jl
fcoms
sub
ljmp
xchg
icebp
xor
inc
mov
sahf
test
dec
inc
mov
cmp
cltd
daa
xchg
dec
enter
aaa
add
and
dec
inc
xor
loop
mov
jle
push
lea
sbb
cs
out
inc
push
mov
and
and
dec
mov
dec
sub
test
push
adc
pop
mov
and
fdivrs
push
and
mov
sbb
sbbb
or
mov
daa
fiaddl
inc
or
push
push
xchg
std
or
jge
jmp
pop
sub
or
push
dec
inc
sbb
add
adcl
mov
imul
fcmovnb
xchg
js
xor
jae
adc
pop
add
rolb
inc
xchg
aam
add
add
mov
or
dec
pop
das
addr16
adc
ss
ds
add
and
sbb
jp
pop
mov
inc
dec
ds
xchg
mov
adc
loop
sbb
xor
sbb
or
cmp
sbb
adc
push
nop
and
xor
inc
push
aaa
mov
shrb
mov
inc
adc
and
lret
shrl
addb
xor
popa
movb
ret
pop
adc
jge
mov
pop
ss
daa
mov
cld
aas
cmp
test
cmp
inc
out
test
sbb
or
add
add
adc
sub
xor
and
pusha
popa
and
sbb
in
and
add
inc
push
xor
mov
cmpsb
push
sub
enter
mov
cmpsl
fisttpl
and
mov
js
ja
cmp
lock
mov
and
push
mov
mov
xchg
stos
adc
sub
jae
mov
loop
inc
loop
mov
dec
and
adc
or
sub
ljmp
rcrb
out
aas
or
test
dec
dec
notb
hlt
sub
pusha
pop
adc
subb
dec
lea
xor
mov
rclb
in
aaa
or
xor
add
cmp
mov
or
mov
adc
adc
cmp
and
mov
inc
inc
pop
sbb
sub
push
or
sub
add
mull
ds
addb
ret
inc
je
mov
and
ret
xchg
add
sub
aaa
lods
jno
jno
call
mov
push
adc
push
push
popa
mov
jle
movsb
pop
daa
lock
outsb
sbb
mov
pop
xor
inc
add
aaa
out
pop
jmp
sub
pop
sarl
push
xorl
adc
ss
jne
lock
or
nopl
and
push
in
push
jo
js
roll
push
dec
repz
inc
inc
lock
mov
mov
xorb
or
cmp
pop
je
mov
sbb
emms
shlb
ret
loopne
add
outsl
dec
mov
pop
or
xor
pop
jmp
sub
jmp
lret
push
inc
dec
dec
movb
add
loope
pushf
cmp
ret
or
sub
iret
push
xor
inc
mov
pop
dec
inc
mov
or
adc
in
and
dec
and
push
dec
inc
sbb
xchg
decl
jge
dec
stos
add
insb
icebp
push
sar
jns
cli
cmpsb
jbe
xchg
rcrl
push
dec
jmp
nop
or
sub
aad
sbb
mov
push
push
iret
sbb
mov
clc
adc
fisubrs
lea
push
mov
mov
icebp
or
dec
fcmovbe
addl
outsl
or
lds
sbb
out
sbb
mov
cmp
jno
push
jle
enter
mov
mov
fcmovnbe
mov
or
sbb
or
or
lods
and
inc
push
nop
push
add
adc
mov
scas
call
sbb
pop
popa
cmp
lcall
js
adc
vmovddup
in
or
add
ret
add
push
pusha
xor
cmp
test
and
and
pop
in
gs
xorb
dec
dec
mov
aam
fidivs
movb
dec
pusha
or
je
mov
or
dec
cmp
mov
pop
add
cmpsb
push
lret
xlat
cli
pop
mov
pop
cmp
add
and
inc
dec
cmp
pusha
jne
sbb
inc
rol
adc
adc
sub
out
stos
push
mov
ds
je,pn
or
jne
or
or
xor
ret
mov
arpl
adc
jo
or
and
xchg
xor
sbb
neg
sub
fcoms
dec
push
decb
add
or
xchg
xchg
mov
mov
ret
pusha
pop
test
out
dec
dec
or
add
mov
sbb
ss
jb
cwtl
add
push
push
stos
adc
popa
push
xlat
cmpsb
nop
push
or
movl
adc
pop
fchs
adc
push
loopne
rcrb
aad
xor
pop
dec
clc
dec
add
popf
movsb
mov
cwtl
aam
xor
add
test
cmp
jo
rorb
rorb
rcrb
lcall
mov
pop
pop
pop
lods
adc
scas
and
fs
clc
adc
xchg
dec
or
dec
sahf
hlt
incb
xchg
iret
nop
cltd
aam
push
shr
sbb
dec
repz
dec
inc
in
les
xor
mov
imul
xchg
jo
ret
icebp
testb
mov
mov
aas
push
popl
dec
test
push
pushf
and
inc
pusha
or
xchg
mov
jae
movsb
and
sub
sbb
mov
xchg
mov
cmp
das
sbbl
mov
adc
lock
adc
jecxz
mov
addb
add
cmp
mov
adc
sbb
add
pop
adc
testl
sbbl
xlat
push
or
mov
das
mov
in
adc
dec
hlt
xchg
pusha
nop
adc
mov
inc
nop
pop
jne
movsl
or
pop
movl
push
stos
adc
sbb
add
add
inc
cmpsl
out
es
rorb
mov
add
pop
mov
add
fsubrs
push
movsl
or
leave
or
es
inc
out
xchg
pop
inc
xchg
fwait
mov
jl
xor
lods
scas
arpl
sbb
into
pop
repnz
mov
inc
add
jne
push
test
in
pop
sub
sub
ds
add
adcl
dec
jmp
inc
enter
xchg
daa
imul
sbbl
ret
pop
test
add
iret
dec
popf
mov
cmp
jb
xchg
lret
fiaddl
fdivrl
push
in
pop
jb
add
cmpsl
lods
xor
and
mov
mov
mov
inc
push
lcall
jne
push
ds
ja
inc
inc
mov
and
xor
lea
iret
sub
setne
das
in
mov
test
cmp
jne
cmc
in
loop
popf
fs
add
jmp
pop
scas
xchg
roll
out
adc
lahf
push
movsb
frstor
xlat
jo
pop
nop
push
addb
pusha
insb
add
mov
xlat
xchg
inc
sub
movb
pop
mov
mov
mov
pop
dec
jb
jo
adc
sub
xor
xchg
in
hlt
pop
mov
pop
jo
inc
inc
pop
mov
cmp
je
adc
cs
das
daa
push
subb
pop
insl
jo
push
loop
xor
ret
sbb
test
pop
fidivrl
xchg
repz
push
jg
test
mov
and
lods
aaa
add
and
sahf
repnz
not
sbb
pop
or
bswap
insb
and
mov
inc
popa
inc
adc
outsl
es
sbb
mov
adc
enter
das
lret
cwtl
pop
and
ret
sub
and
out
add
xchg
inc
adc
or
inc
aas
stc
sub
push
lods
push
les
xor
mov
loope
das
pushf
sbb
mov
cmp
xor
or
lds
stos
les
inc
arpl
push
fmuls
add
scas
mov
repnz
iret
adc
enter
mov
add
push
lock
test
xchg
lcall
xchg
paddsw
in
sub
pop
mov
mov
int3
lcall
adcl
mov
pop
lods
and
call
add
popa
dec
iret
xor
loope
push
cmpsb
mov
and
add
lock
push
imul
sbb
test
and
cmpb
mov
imul
subb
adc
add
sub
loopne
xor
pop
dec
cld
cwtl
pmuludq
in
xchg
cmpb
cmpl
outsl
pushf
adc
xorl
ja
sbb
mov
mov
add
adcl
push
xchg
add
or
xchg
or
dec
pop
out
add
mov
aas
int3
enter
dec
xlat
frstor
lods
addl
cmpl
test
aam
push
mov
js
inc
or
dec
jnp
xchg
mov
dec
or
push
push
mov
pop
imul
sbbl
jmp
cmp
sub
mov
mov
xorb
cli
xchg
xor
xor
icebp
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
mov
inc
push
outsl
sbb
jae
add
cmp
inc
mov
xchg
jp
or
pop
fwait
push
lret
fcmovne
push
and
inc
pusha
xor
sbb
cmp
int
fistpll
je
inc
aad
and
dec
pop
pop
int3
dec
and
mov
push
test
shr
add
pop
mov
imul
push
pop
ja
loopne,pt
push
mov
mov
pop
in
and
or
push
pop
sbb
testb
pop
insb
hlt
pusha
rorb
jns
outsl
testb
fildl
fmulp
jmp
andb
ds
pop
sub
and
or
ret
xor
push
cmp
pop
cmp
jne
and
movsb
pop
sub
test
test
mov
insb
lahf
pop
mov
int3
xor
addl
popf
cmpsb
push
xchg
push
pop
outsb
push
mov
inc
cmp
arpl
das
adc
pop
loop
imul
sub
mov
jmp
inc
jg
lea
ret
ret
jb
adc
mov
or
push
dec
or
icebp
xchg
mov
movb
pop
fnstsw
dec
je
daa
cmpb
fdivl
pop
aam
pop
jne
sbb
sbb
mov
or
xor
pop
cmp
inc
or
sbb
and
or
inc
xor
cmpsb
pop
xchg
push
xor
ds
xchg
push
jbe
mov
mov
sbb
mov
fwait
push
inc
push
dec
sub
inc
push
popa
inc
test
xchg
adc
push
pop
test
arpl
lcall
add
add
insl
or
shrb
lea
test
popa
add
inc
imul
mov
mov
jnp
cmp
or
push
pop
add
cs
jmp
fstpl
ret
hlt
frstor
jl
pop
in
clc
cmp
inc
imul
hlt
xchg
or
push
add
in
pop
mov
push
mov
inc
mov
ret
jae
ds
nop
add
pop
push
out
arpl
repnz
lcall
leave
sbb
pushf
pusha
lock
shll
xor
and
lea
adc
xchg
or
mov
bound
lock
cmp
shrb
mov
and
dec
xchg
or
dec
xchg
adc
inc
sbb
sbb
or
add
fs
jae
push
sbb
outsb
or
movsl
mov
add
inc
add
fwait
movsl
andb
inc
ss
imul
mov
xchg
mov
movq
sbb
push
fnstenv
inc
shlb
push
push
pop
adc
into
xbegin
lahf
lods
call
push
mov
pop
push
xchg
stc
cmp
inc
pop
add
or
dec
movsb
test
insl
cmp
xchg
xchg
fadds
fwait
adc
sbb
dec
mov
sbb
gs
cmovne
testl
sub
sub
pop
rol
or
jmp
popf
adc
sbb
sub
movsb
xor
je
out
inc
gs
xor
nop
test
dec
test
fsts
out
add
insb
das
xor
pop
ja
cmp
lret
mov
xchg
adc
mov
in
jl
mov
test
add
cmp
scas
xchg
cmp
jle
sub
push
adc
add
sbb
push
js
and
andl
ret
insb
xchg
daa
mov
dec
sbb
into
or
lds
and
and
xor
push
mov
icebp
pusha
iret
add
push
pop
fdivrs
mov
sub
sub
mov
rcrb
mov
mov
gs
jne
xchg
pop
ljmp
gs
nop
fnstcw
js
jle
imul
push
inc
nop
testb
jmp
sbb
in
add
gs
add
fs
nop
in
add
mov
xchg
and
leave
pop
scas
ret
das
cli
mov
mov
popf
pop
loop
ja
mov
jo
pop
movb
stc
and
icebp
jnp
cltd
cli
std
or
mov
jge
adc
adc
cmp
je
and
icebp
xchg
sub
xor
je
jo
xor
shlb
mov
sub
xor
adc
sub
movb
ret
jno
mov
cmpsl
movsl
and
rcrl
sub
addb
push
ret
aaa
or
xchg
add
sbb
dec
sbb
mov
add
nop
filds
lods
loope
mov
nop
and
cmp
and
add
add
push
mov
xor
repnz
adc
or
popf
sbb
into
and
cmp
add
adc
lock
cmp
mov
sarb
test
les
push
inc
pop
and
fldt
popa
dec
fnstenv
or
sub
adc
adc
sub
mov
mov
and
and
xchg
cmp
inc
imull
pop
jno
es
jl
xlat
movsb
inc
setg
int3
ja
pop
cmpsl
out
das
ljmp
adc
pop
hlt
jno
icebp
pop
aam
mov
scas
mov
add
sbb
push
fldenv
add
arpl
dec
aam
xor
fdivrl
dec
xchg
inc
sahf
jecxz
iret
cmpb
xor
sahf
popf
xchg
jbe
jo
xchg
and
or
verr
and
dec
add
add
push
pause
test
adc
mov
adc
xor
jnp
inc
cmp
test
mov
add
pop
xchg
pop
sbb
lock
imul
add
popa
shrl
popf
cmp
or
cmp
je
and
gs
or
jecxz,pn
int3
adc
lock
sbb
cld
jne
fimull
sub
and
or
fnstenv
add
mov
imul
or
inc
jbe
std
or
push
and
cmpsb
pop
push
dec
je
add
nop
mov
ret
push
test
clc
je
cmp
nop
insl
insb
sbb
jmp
int
mov
dec
iret
popa
add
nop
imul
jl
jo
cs
popf
xchg
rorb
adcb
inc
xchg
hlt
shll
movsl
and
cmpsl
push
or
push
sbbl
lock
ret
inc
pop
loope
mov
adc
es
test
or
lfs
int3
add
pop
inc
pop
pop
add
loopne
and
rcll
cmp
or
add
sbb
or
push
jo
or
fnstcw
pop
pop
xchg
scas
add
mov
add
and
ljmp
jne
mov
ret
mov
sbb
pop
inc
test
nop
inc
fisubrs
lods
rorb
mov
jo
sbb
imull
mov
and
pushf
inc
dec
int3
sub
mov
push
or
lret
push
push
shl
xor
xchg
mov
and
mov
adc
cmpsl
mov
inc
sti
lods
add
movsb
inc
ja
add
outsb
nop
dec
mov
mov
push
push
cmp
cwtl
xor
fs
mov
add
add
fisttps
cmp
cmp
and
outsb
sbb
stc
ss
sbbb
pushf
pop
bound
push
mov
sub
scas
adc
xor
testb
imul
mov
add
xor
cmpsb
rorb
je
and
shrb
arpl
call
ds
punpckhdq
bound
sti
adcl
xor
add
mov
or
jnp
je
xlat
mov
add
stos
sub
adc
dec
jmp
add
sbb
lds
pop
pusha
aad
push
or
or
cmp
dec
adc
push
sbb
inc
fcoml
pop
test
and
add
lea
fdivr
ja
loopne
add
ss
mov
sbb
das
jl
sbb
add
push
sub
inc
outsl
add
dec
sub
imul
adc
lods
adc
iret
aas
cmp
xchg
nop
pop
sub
or
sbb
pop
mov
jecxz
sbb
fiadds
mov
xor
sub
mov
xor
add
imul
xchg
pop
adc
mov
cli
push
psrld
sbb
rclb
mulb
add
mov
cmp
adc
jmp
sahf
movsb
adc
dec
das
insl
loop
mulb
sbb
or
lods
lea
add
adc
inc
data16
lods
push
push
mov
fadds
sub
add
add
xchg
pushf
push
inc
shlb
cltd
sub
add
or
mov
movsb
flds
add
add
data16
jo
dec
ret
cli
rclb
mov
aas
mov
add
push
or
add
fcoms
xlat
push
sbb
jecxz
mov
adc
or
sbb
scas
add
jo
cmpsl
rcrb
popf
sarb
xchg
inc
xchg
add
add
push
xchg
xchg
hlt
repz
in
or
arpl
adc
rcrl
mov
jae
sarl
dec
pop
es
nop
sbb
jmp
pop
or
fisttpl
jp
or
sbb
adc
and
js
dec
sbb
dec
mov
je
imul
test
push
push
dec
xorl
hlt
inc
add
dec
dec
inc
dec
push
or
in
push
dec
call
push
or
pushf
mov
or
rcl
rclb
or
lea
mov
lea
adc
fdivl
cmp
mov
xor
shll
in
adc
sbb
dec
shl
add
and
xchg
and
xorb
ret
xor
push
or
pop
and
mov
daa
fdivrs
pop
incl
idiv
dec
sub
jecxz
out
xchg
cld
pop
adc
adc
and
push
loop
pop
or
and
add
xorb
out
inc
dec
popa
and
mov
push
pop
inc
cmpl
jne
inc
mov
cmp
pushf
call
loop
mov
jbe
popa
xchg
jo
ss
pop
faddl
fbstp
test
jne
pushf
or
mov
mov
ja
iret
add
pop
bound
imul
mov
adc
mov
les
mov
ja
sbb
adc
xor
test
and
outsb
jnp
shlb
outsl
sahf
cs
imul
bound
add
subb
cmp
or
aam
sahf
pop
mov
and
out
or
adc
jae
xchg
adc
or
mov
mov
insb
push
xor
daa
dec
dec
jmp
adc
cmc
and
shrb
leave
aam
mov
or
push
or
sbb
call
jns
js
pop
dec
loopne
out
sub
ljmp
push
or
jnp
or
cmp
addr16
jnp
pop
insl
add
mov
sbb
loop
sub
add
sbb
fimuls
dec
adc
sbb
pop
lock
inc
pop
jno
mov
inc
outsl
inc
sbb
cmp
or
dec
sbb
and
adc
and
repnz
sbb
jne
mov
dec
mov
stc
pop
mov
xchg
sahf
les
sbb
pop
add
adc
or
and
pop
mov
adc
test
arpl
and
xchg
or
and
sub
sub
outsb
mov
xchg
sub
lock
fs
loope
popa
sub
stos
cmpsb
daa
mov
xchg
adc
cmpl
fistpl
cmc
pop
ret
and
xchg
mov
ret
add
stos
push
pop
cmc
sbb
mov
lock
dec
push
and
mov
sbb
aas
arpl
test
les
mov
or
mov
jns
pop
mov
cmpl
jmp
and
inc
inc
je
ja
hlt
out
xor
mov
mul
and
or
mov
dec
movsl
xchg
mov
mov
sub
hlt
xchg
dec
cmc
sub
sbb
je
in
inc
and
and
movsl
adc
jo
inc
lock
push
cmp
sub
cs
ss
in
jne
and
push
xchg
push
mov
loopne
and
popa
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
scas
test
enter
cmp
inc
sbbl
sti
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
push
and
fistl
imul
dec
mov
mov
ja
dec
js
push
cmp
int
dec
loope
pop
xchg
xchg
inc
push
pushf
mov
fmuls
insl
jmp
xchg
mov
dec
jne
arpl
cmp
sbb
mov
rolb
mov
scas
fwait
mov
push
adc
out
cmp
and
push
adc
sti
cmp
inc
pop
js
inc
hlt
fwait
movsl
je
in
push
xor
mov
adc
stos
push
addb
sbb
add
popf
sbb
pop
daa
movsb
rcll
push
push
std
and
push
inc
xchg
shrl
pop
cld
sub
shlb
fbld
push
repz
test
sahf
mov
loop
inc
in
fwait
add
les
icebp
adc
das
rolb
imulb
sbb
nop
outsb
sbb
add
sbb
cmp
or
push
outsl
pusha
aaa
add
push
sbb
daa
push
pop
or
popf
pusha
sub
imul
and
xchg
inc
sub
adc
xchg
adc
stos
fwait
add
and
cmp
push
shlb
dec
add
add
push
push
loopne
and
lock
sub
stos
sub
mov
sub
bound
or
test
adc
adcb
sbb
add
xchg
dec
jns
add
sbb
orl
mov
test
adc
pop
jmp
sbb
out
cmp
fadds
jmp
add
dec
roll
cmpsb
insl
orl
pusha
add
xor
sahf
pusha
nop
pop
xlat
cmpl
cmp
push
data16
push
add
sub
or
fiaddl
inc
movsb
and
daa
test
inc
or
and
jno
sbb
inc
je
mov
daa
inc
mov
mov
rcrb
aad
add
enter
push
loopne
roll
pusha
movsb
enter
fwait
scas
push
push
mov
fwait
cmp
push
test
mov
cmovp
pop
mov
jns
loopne
inc
jo
lea
add
push
mov
push
js
add
push
xchg
push
or
nop
jp
pop
or
aaa
xchg
jae
push
hlt
mov
mov
insb
subb
scas
cltd
dec
inc
mov
inc
jecxz
sbb
pop
faddl
cwtl
fwait
push
scas
fwait
inc
sbb
or
jp
test
push
dec
adc
sub
fcoml
or
jno
cmpw
icebp
popw
add
popa
mov
inc
leave
push
or
es
jmp
dec
les
pop
into
movb
mov
xor
jo
adc
jmp
inc
leave
in
cmp
ret
jno
push
pop
sub
adc
dec
cmp
arpl
inc
or
inc
aaa
insb
add
jo
and
xchg
adc
movsl
cmp
or
push
dec
and
add
mov
leave
neg
lds
leave
cmpsl
sub
pusha
add
add
add
xor
sub
dec
xor
adc
stc
or
leave
outsl
out
xchg
add
add
jns
add
jne
dec
nop
int3
movsl
push
add
outsl
movb
rcrb
jne
outsb
adc
xchg
xchg
xor
push
inc
iret
cmc
test
inc
imul
inc
out
mov
or
test
pop
fsub
cltd
xchg
sbb
fidivrl
xor
je
sbb
scas
and
cmp
and
inc
fcompl
xlat
mov
in
push
and
dec
jge
sub
pusha
sub
mov
sbb
pop
jae
sub
xchg
push
and
mov
inc
or
ss
lcall
sbb
adc
mov
or
sub
insl
jo
es
inc
jmp
add
lock
loopne
mov
sbb
mov
jp
lods
lock
les
out
dec
pop
or
inc
je
dec
stos
and
push
jl
bound
adc
add
or
int
enter
push
and
sbb
dec
pop
int
insb
rclb
lahf
sub
jne
add
sub
cmc
fs
cs
andb
or
xchg
mov
fmuls
add
and
dec
mov
shlb
inc
or
mov
push
shr
push
or
xchg
xchg
imul
scas
mulb
cmp
loopne
pop
pop
les
mulb
and
cmp
aaa
push
test
xchg
jle
mov
adc
sbb
mov
addl
jl
test
adc
sub
jp
das
jbe
xor
addr16
jl
inc
pop
xchg
in
add
adc
in
mov
add
imul
mov
sub
adc
les
sbb
or
iret
sbb
stc
sbb
inc
cmp
xor
mov
clc
mov
xor
rorb
or
mov
mov
cmpsl
and
push
cmp
or
dec
and
push
int3
movl
jae
pop
jp
push
loopne
cmp
es
cli
lcall
enter
dec
cmp
int3
xor
ret
inc
sbb
xor
subl
inc
cmp
sarb
mov
lcall
lcall
push
push
movsl
jbe
or
rorl
inc
test
jl
cmp
ds
jo
jmp
jne
dec
sbb
push
loope
ds
and
dec
or
add
sbb
js
rolb
sub
add
popf
xchg
andb
and
mov
adc
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
or
das
cmp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
add
lea
jb
scas
or
insb
in
or
out
sub
lds
adc
push
dec
push
add
mov
andl
cmpsl
mov
pop
mov
dec
loope
or
mov
es
mov
mov
or
xchg
adc
xor
mov
push
push
outsb
test
inc
cmp
inc
fadds
or
nop
mov
jmp
push
les
cmp
adc
xchg
push
ss
ja
sub
jle
pop
js
rcll
inc
dec
shr
inc
inc
into
adcl
cmpsb
mov
push
push
cld
in
mov
inc
cmp
sub
cmc
dec
pop
and
out
push
xchg
add
or
orl
inc
jg
jg
insl
jb
repnz
pop
and
add
orps
sub
cmpsb
scas
aam
mov
lret
cmp
int
cmp
add
add
or
test
cmp
mov
xor
sbb
rclb
xchg
pop
inc
sbb
cltd
ret
rorl
add
stc
fcoms
or
push
rdpmc
or
sbb
jle
rclb
add
por
xchg
pop
call
sub
adc
xchg
inc
insb
adcl
or
in
ret
inc
inc
push
xchg
xchg
inc
and
add
add
cwtl
adcl
popa
push
cltd
xchg
cmc
shrl
and
and
push
nop
aaa
pop
loopne
test
fstl
pop
cwtl
and
je
or
add
bound
loopne
cld
adc
loopne
imul
inc
inc
je
mov
sbb
pop
or
shll
call
addb
push
jmp
dec
test
jl
out
push
lods
aad
xor
ficompl
add
adc
pop
shlb
sti
mov
sbb
out
inc
sub
sub
jle
mov
xchg
popf
add
jecxz
movsb
or
xchg
cmc
add
aam
cmpb
sub
add
pop
daa
dec
pusha
and
add
push
mov
fdivs
cmc
ja
stos
xchg
jbe
pusha
push
std
pusha
sbb
cmp
xor
mov
sub
pop
aam
adc
sub
cli
add
adc
pop
or
sbb
push
clc
xor
in
jno
and
lock
inc
inc
lock
negl
rolb
mov
imul
movsl
or
xor
mov
dec
enter
push
bound
and
xchg
pop
js
add
test
loop
rcl
in
inc
push
xor
push
push
dec
int
bound
pop
and
bound
push
adc
dec
test
ja
jnp
insl
inc
shl
fistpl
jnp
mov
push
sarb
pushf
fmul
mov
add
cmp
das
jne
push
adc
lds
adc
or
push
cmp
dec
add
xchg
adc
test
mov
xchg
adc
fdivs
ss
ret
in
loop
mov
or
xor
in
mov
sbb
push
test
or
insl
or
lock
dec
cmpsb
xchg
xchg
and
add
and
add
xor
mov
popf
and
adc
sbb
fldl
test
ret
in
dec
push
lcall
mov
mov
jnp
pop
test
xorb
push
push
inc
or
out
or
mov
out
xchg
pop
or
sbb
sub
fisubrl
fistl
xchg
or
mov
call
ret
add
cs
push
ret
ret
xchg
adc
pushf
cli
or
xor
mov
jg
cmpl
and
inc
out
lret
aas
cmp
into
mov
mov
mov
testl
nop
or
data16
pusha
sarl
push
call
jl
cmp
fsubp
and
adc
out
xchg
and
pop
xchg
adc
or
test
setl
loope
jb
filds
mov
sbb
arpl
aas
jno
shl
sbb
sub
mov
or
mov
outsb
mov
lret
aam
inc
insb
mov
adc
shll
mov
jge
cmpsl
cmpsb
xchg
mov
inc
pusha
movsl
or
inc
popa
stc
shlb
hlt
xor
inc
test
jns
push
test
cltd
cmp
push
cmpsb
daa
rol
or
sub
iret
or
orb
dec
loopne
push
mov
fiadds
insb
adc
sub
fnstsw
push
lock
clc
sbb
enter
lcall
xlat
pextrw
xchg
lods
aaa
and
push
pop
out
dec
xlat
inc
add
pop
push
leave
push
stos
adc
adc
or
fisttpll
mov
inc
xchg
push
inc
mov
and
jo
mov
ret
inc
lods
add
and
jge
cmp
and
jle
jge
push
and
mov
enter
cwtl
ds
add
test
insb
call
sbb
mov
push
inc
sbb
pop
adc
lahf
jnp
cmp
or
fistpl
sbb
mov
or
inc
hlt
or
push
sahf
add
add
adc
aas
ret
xorb
adc
sarb
and
out
and
cld
inc
push
xor
cld
cld
inc
add
sub
xchg
cld
cld
cld
and
add
in
sahf
inc
xlat
inc
movb
add
push
mov
int
aas
mov
andl
sbb
pop
outsb
shlb
push
dec
hlt
sbb
xchg
add
or
das
pop
push
enter
das
lcall
iret
fadd
push
lods
adc
imul
sti
test
jle
pop
sub
xor
adc
adc
movl
mov
and
lock
xchg
dec
cli
sbbb
mov
xor
dec
enter
push
pop
xor
test
ds
push
xor
or
roll
test
cmp
push
and
lahf
add
int3
cmc
imul
xorb
dec
sti
aam
call
mov
push
dec
popf
pushf
pushf
pushf
xor
pop
jle
cmpsl
or
push
inc
pop
mov
scas
cwtl
pop
inc
and
lds
jp
pop
sub
adc
test
pop
mov
mov
enter
sbb
aas
push
fcmovnb
dec
cs
jbe
pop
dec
dec
push
nop
in
dec
dec
cwtl
in
sbb
pop
dec
jnp
sbb
jne
push
push
fcom
push
fsubrs
jns
es
push
or
push
sbb
and
inc
sbb
dec
jo
xchg
movsl
inc
cmp
pop
iret
fwait
mov
aad
dec
insl
movsl
xor
mov
dec
mov
adc
inc
js
add
out
or
sbb
xor
push
call
pop
xchg
iret
cmp
xchg
mov
mov
sti
out
jl
or
jle
mov
cmp
pop
or
add
mov
cmp
pop
cmp
int3
sub
aas
pop
cmp
xabort
clc
mov
dec
mov
or
cmpsb
adc
xor
or
add
inc
mov
fs
sub
and
pop
stos
nop
in
cmc
pop
jg
mov
pop
sbb
mov
push
das
cmp
cs
cmpsb
mov
add
les
adc
lret
dec
cltd
mov
xor
push
inc
rol
inc
add
jg
in
mov
insl
add
in
adc
jbe
pusha
add
xor
xchg
cmp
sub
push
mov
sbb
adc
jne
adc
mov
mov
dec
xchg
mov
loopne
mov
div
sub
loopne
sub
into
ror
or
out
loopne
jne
jbe
ret
call
les
adc
xchg
leave
sbb
js
cmp
jne
adc
adcb
jno
jno
mov
rorl
lahf
and
mov
negb
mov
inc
sbb
ret
mov
cmpl
sbb
mov
frstor
xchg
and
cmpsl
or
lods
loop
inc
adc
pop
jl
adc
dec
mov
add
aam
pop
jle
outsb
insb
sbb
xlat
inc
sbb
add
push
lds
jne
aam
inc
shll
or
mov
jo
int3
jne
cmpl
es
mov
adc
push
pop
lahf
cmpsl
mov
jb
push
push
xor
cmp
xchg
aad
in
call
shrb
mov
add
pusha
dec
or
ror
or
xor
jae
cmpsb
out
movsb
add
jle
divb
aam
sbb
movsl
mov
inc
ljmp
call
loopne
jne
in
test
sub
loope
mov
aas
mov
lds
jp
and
loop
movswl
xor
insl
loope
inc
dec
pop
int
popa
outsb
iret
insb
dec
pop
in
xchg
push
mov
cmp
or
and
or
push
jecxz
sti
cmp
pop
pop
sbb
scas
or
and
jmp
mov
clc
pusha
mov
outsl
mov
enter
xor
dec
jmp
sub
xor
dec
and
jbe
iret
and
mov
pushf
sub
out
dec
jnp
imul
push
inc
insb
and
in
inc
rclb
or
icebp
or
mov
and
mov
mov
addr16
add
inc
sub
mov
ds
pushf
es
xchg
or
dec
cmp
testb
jno
ror
sub
cmp
nop
dec
enter
jmp
adc
xor
mov
sub
xchg
cli
xchg
push
mov
sub
adc
fldenv
lar
dec
jae
das
jmp
add
cld
pop
sar
sub
rolb
xchg
push
jecxz
cmc
cpuid
and
add
or
hlt
push
pop
fcmovu
lods
lcall
in
adc
mov
pushf
fmul
push
sbb
icebp
mov
adc
push
lock
out
xor
push
loop
jmp
sbb
xor
pop
sub
test
into
push
mov
ret
enter
in
or
jne
lods
imul
mov
cld
push
dec
cmp
rclb
xchg
add
sub
cmp
loop
push
push
gs
mov
mov
mov
inc
sub
inc
and
inc
or
xor
lock
sub
pop
pop
insb
insl
roll
jmp
sbb
sub
jo
sub
adc
hlt
je
sahf
pop
dec
es
roll
insb
mov
cmp
fsqrt
and
jge
cmp
lods
or
ss
imul
xor
test
clc
ror
jbe
jecxz
lock
fbstp
push
popa
mov
pop
js
mov
dec
mov
sub
push
pop
hlt
je
clc
or
adc
add
ret
sbb
xlat
cmp
unpckhps
subl
fmuls
pusha
and
xor
pop
insl
filds
lahf
mov
rorl
mov
mov
adc
cltd
sbb
pop
pop
lea
gs
xchg
mov
dec
shlb
dec
mov
lock
add
fwait
clc
addr16
sarb
iret
clc
into
lods
inc
add
add
and
and
mov
inc
inc
es
xlat
xlat
jge
in
dec
xlat
inc
sbb
fucomip
pop
sbb
insb
sbb
jb
sbb
in
shlb
sbb
sub
pop
pop
xchg
mov
outsb
xchg
je
in
add
test
add
xor
sub
inc
cmp
or
repz
adc
test
stos
jo
inc
or
push
leave
dec
dec
push
dec
add
je
movsb
pop
jmp
mov
xorb
subl
pop
cmp
add
cltd
stc
sbb
and
inc
mov
loope
hlt
add
xlat
mov
ds
sub
push
sub
lods
and
nop
sbb
test
or
adc
inc
add
xor
mov
mov
inc
sbb
movl
lock
enter
push
xchg
or
mov
mov
jns
adc
mov
fldl
push
aas
movsl
bound
dec
pop
sbb
adc
push
jbe
js
xchg
out
loope
add
enter
imul
jmp
xchg
rcrb
push
xchg
sbb
push
lock
loopne
cmp
sbb
fwait
into
leave
je
pop
arpl
mov
pop
enter
adc
add
adc
xchg
rcrb
pop
mov
ret
fcom
test
in
or
or
leave
or
test
or
xor
es
cmp
in
sub
mov
test
dec
xor
in
dec
add
push
ret
adc
and
push
dec
add
push
roll
rclb
mov
insb
test
pop
jne
pop
jmp
outsl
adc
mov
jge
pop
xlat
xor
and
mov
test
mov
cmp
or
movl
and
inc
js
test
xorb
fadd
or
or
add
cmp
push
xor
dec
popa
test
add
orb
ja
ror
inc
add
pop
mov
scas
arpl
daa
or
mov
mov
call
lea
daa
cmp
and
lea
mov
sti
orb
and
stc
pop
rclb
sti
loopne
sbb
mov
pop
test
adc
sub
or
mov
inc
dec
dec
dec
inc
ljmp
adc
fiadds
lock
cltd
xor
inc
mov
or
insl
jno
jb
inc
hlt
add
and
sbb
hlt
mov
imul
inc
movb
add
into
cmp
push
push
mov
xor
sub
adc
test
lret
sub
add
push
sarb
and
movsl
xchg
sub
sbb
dec
push
scas
int
test
fs
mov
adc
cwtl
sbb
sub
jecxz
inc
and
fs
rcll
mov
sbb
dec
push
ret
push
leave
sbb
adc
int3
lods
mov
les
je
fmull
jmp
push
cmpsl
mov
sbb
or
push
enter
aam
pusha
adc
fimull
inc
ret
and
cmp
dec
int3
cmp
mov
enter
lret
shlb
sbb
xchg
outsb
pop
adc
mov
mov
sub
scas
lods
inc
pop
das
push
shlb
repnz
insb
xorb
xor
or
repz
aam
inc
aam
dec
cmp
stos
ljmp
dec
cmc
mov
ret
push
fs
sbb
xor
sbb
push
push
js
pusha
lods
mov
lahf
and
rcrb
into
ljmp
sub
sbb
pop
xor
js
and
js
out
fisubl
adc
sti
or
leave
dec
lods
dec
cli
adc
nop
nop
mov
dec
mov
dec
mov
sbbb
ljmp
xchg
or
out
xchg
mov
xchg
mov
pop
lock
inc
mov
mov
loop
pop
cs
pop
adcb
adc
dec
push
fs
nop
cmp
pop
mov
add
sub
add
mov
adc
inc
loop
lock
mov
jnp
aad
add
out
or
mov
push
push
sbb
xchg
loop
in
dec
fwait
ret
push
mov
ljmp
adc
jle
movsl
fdivr
xadd
pop
subl
je
and
mov
adc
sub
jmp
xorl
test
adc
inc
iret
xor
add
test
mov
sbb
xchg
pop
aam
dec
pmullw
pop
fsubrs
pop
in
or
repz
fdivs
popf
cld
ret
and
pop
adc
or
add
xor
push
push
xor
xchg
and
adc
sbb
inc
or
rorb
rolb
clc
sub
inc
xchg
mov
dec
adc
inc
adc
xor
inc
push
pop
js
adc
and
repnz
mov
push
mov
add
sub
daa
mov
inc
or
pop
test
jmp
jecxz
xor
cmp
hlt
inc
ficomps
xchg
jg
je
in
add
adc
rcl
mov
or
inc
js
dec
mov
fdivrl
pop
fstps
cmpsb
daa
into
mov
popf
or
sbb
sbb
adc
jle
imul
lods
push
sub
cmp
adc
cmp
imul
sbb
cmc
sub
pop
mov
jb
insb
out
jbe
sbb
out
add
or
add
xchg
pop
mov
mov
dec
icebp
add
lock
or
shl
andb
pop
adc
je
sub
mov
icebp
scas
enter
mov
push
fcomps
pop
mov
shrb
sub
mov
or
ss
mov
clc
movl
sbb
pop
cld
js
mov
ret
mov
sub
fadds
pop
inc
adc
into
push
test
repnz
lods
cmpsb
rclb
enter
cltd
xor
adc
adc
jg
inc
inc
bound
mov
jbe
push
add
sub
push
ljmp
sub
test
or
scas
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lea
js
mov
adc
iret
loopne
cmp
push
lods
ja
xchg
repz
cli
orb
inc
mov
push
mov
outsl
push
jg
mov
das
test
sbb
or
shrb
loope
mov
lock
sbb
mov
sti
dec
pop
es
inc
mov
sub
or
push
in
shlb
arpl
and
call
lret
loopne
iret
movb
mov
xor
rcrb
ret
adc
enter
aaa
or
pop
dec
out
fcmovnb
cmp
pop
pop
add
sti
xor
xor
ja
cmpsl
or
push
xchg
sbb
dec
push
add
mov
addl
sbb
dec
insl
cmp
movl
sbb
lods
jno
inc
mov
lret
jae
je
fildll
jmp
xor
mov
xchg
movb
sub
rolb
out
or
inc
jmp
test
push
jecxz
ret
imul
and
addr16
cmp
je
xor
test
jb
movsl
or
sarl
nop
stos
aas
rorl
dec
aaa
dec
stmxcsr
cwtl
pop
mov
fstpt
pop
popl
xor
inc
xlat
pop
xchg
dec
adc
je
push
xchg
add
testb
push
dec
xchg
call
pop
push
leave
pop
sbb
pop
mov
inc
add
add
and
clc
pop
cltd
or
cmp
xchg
or
pop
pop
icebp
into
pusha
leave
xchg
or
adcl
mov
fmuls
ror
mov
sti
pop
cwtl
rol
in
cmp
hlt
sarl
or
push
popf
js
pop
inc
sub
aas
pop
mov
push
std
adc
jle
lcall
outsl
popf
cmp
daa
pop
and
addl
sub
outsl
pop
or
and
test
test
je
mov
mov
jb
sbb
pusha
cltd
mov
es
in
xor
push
fnsave
gs
fists
pop
and
ret
jmp
pop
stos
mov
movsl
push
or
popf
jno
jg
inc
jg
sbb
add
je
xorb
insb
stos
lea
cmpb
adc
ja
xor
dec
inc
movsl
fwait
mov
ja
xor
subb
ds
cmp
pushf
or
std
leave
ja,pn
sbb
inc
aaa
sbb
test
faddp
adc
loope
jmp
push
into
or
jecxz
add
imul
inc
jecxz
push
addl
icebp
push
jnp
lds
clc
cmp
sbb
cmpsl
cli
sbbl
mov
insb
pushf
mov
add
inc
inc
push
jo
daa
ds
mov
mov
test
pushf
jnp
cmpsb
and
adc
adc
cmpsb
add
sub
imul
xchg
cld
out
test
popa
call
add
test
je
or
leave
fiaddl
jle
ja
xchg
fdivrs
and
pop
cmc
movb
ficomps
daa
cmp
mov
das
aas
add
out
sbb
and
nop
adc
pop
mov
movsl
sub
outsb
pop
jmp
mov
fidivs
das
or
mov
faddl
movsb
popa
insb
lcall
push
jo
inc
lcall
add
hlt
leave
push
mov
insl
iret
pop
in
rolb
mov
cmpsl
mov
pop
add
sub
sti
cmp
popf
iret
adc
repz
jne
cmp
sbb
dec
xchg
push
mov
in
movsl
xchg
sbb
dec
frstor
es
jle
das
cmp
cwtl
xor
mov
and
sbb
call
sbb
push
scas
cmpl
ret
std
clc
loopne
and
sti
shll
mov
dec
or
movsl
clc
xor
test
xor
in
jecxz
jmp
inc
push
adc
jbe
adc
mov
pop
arpl
lea
and
add
add
dec
push
outsb
dec
test
mov
inc
lds
ja
xchg
sbb
dec
mov
orl
outsl
jno
scas
mov
test
sbb
add
inc
daa
scas
repnz
pop
cmp
push
push
mov
sbb
jge
xchg
movsb
mov
sub
or
lods
dec
pop
cmp
je
mov
fs
loop
adc
jecxz
in
push
add
xchg
push
adc
cmp
jmp
mov
or
repz
movsl
sub
les
lret
push
rcll
fldt
push
fwait
rcr
xchg
outsl
ret
dec
sbb
cmp
and
ret
sub
fwait
inc
add
aas
push
xor
leave
inc
dec
push
leave
shl
rclb
pop
jo
jmp
dec
jno
and
and
mov
and
push
test
leave
leave
mov
hlt
in
inc
sub
dec
sbb
clc
clc
inc
dec
inc
ds
lret
add
les
jno
insb
outsb
or
das
xchg
xorl
fs
push
and
inc
das
mov
mov
lret
adc
iret
test
sub
mov
lods
or
cmp
inc
cmp
add
push
push
adc
insl
push
cmp
or
dec
add
dec
push
ss
sbb
in
sbb
xchg
jns
cmp
xchg
outsb
or
repnz
cmp
xchg
dec
in
add
sub
add
sbb
mov
jo
adc
push
faddl
in
shll
inc
push
push
shlb
mov
add
push
test
or
repz
ret
aam
pop
loope
div
rcll
je
les
dec
mov
inc
dec
iret
mov
inc
shll
jge
or
outsb
sbb
mov
jns
enter
adc
pop
fidivrl
push
lret
popa
loop
or
lds
fcmovnb
mov
pusha
daa
push
push
xchg
push
dec
cmpsl
jno
add
rcll
jg
sbb
inc
enter
inc
jns
nop
inc
or
xor
aas
ffree
and
fstps
sub
cmovp
add
pushf
pop
sub
adc
aaa
sbb
enter
jmp
loop
sbb
push
movsl
ret
pop
and
js
jae
cmp
fwait
nop
mov
add
inc
pusha
fdivrs
adc
inc
jge
test
aam
dec
adcb
add
fistps
push
push
cmp
jne
cmpb
iret
adc
dec
test
xor
sub
dec
subl
cmp
stos
or
and
arpl
xchg
mov
ret
adc
inc
stos
pop
mov
es
add
add
xor
das
hlt
punpckhbw
bound
ror
add
sti
pop
and
cmp
push
and
test
xor
xor
mov
inc
dec
inc
jmp
rclb
test
mov
pop
fwait
das
aam
adc
sbb
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
cld
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
insb
pop
sub
push
dec
mov
test
dec
and
or
cmc
add
cmc
inc
cmpsl
push
inc
push
cltd
cmp
test
sbb
es
xchg
mov
sbb
aam
or
ja
mov
dec
and
lahf
xchg
mov
inc
insb
and
mov
cmp
push
addb
push
inc
push
pop
std
outsl
popa
push
xlat
shlb
jmp
inc
mov
outsb
ljmp
in
xor
or
mov
cwtl
mov
smsw
subb
xor
dec
jl
mov
mov
cmpsb
push
fsts
pop
cmpsb
dec
dec
xor
inc
daa
mov
push
ja
mov
in
and
loopne
test
sub
sub
lods
jbe
imul
clc
dec
dec
adc
cltd
stc
or
fwait
xchg
dec
frstor
scas
cmp
jne
xchg
loopne
mov
adc
rolb
sub
inc
pop
xchg
mov
mov
sbb
xor
dec
fistps
mov
push
pusha
adc
adc
or
daa
cmpl
imul
mov
mov
jg
mov
sbb
mov
xor
repnz
dec
adc
lock
shrl
ds
and
inc
faddl
data16
daa
out
mov
xor
mov
add
sub
adcb
into
jbe
jp
sub
ret
xlat
inc
loopne
pop
pop
movsb
loopne
xchg
insb
jge
daa
inc
push
mov
les
fsqrt
pop
repz
mov
aad
xor
dec
jge
and
jmp
add
dec
adc
test
add
lret
insb
mov
pop
mov
hlt
and
dec
inc
push
arpl
inc
jge
push
mov
out
fcoms
lock
arpl
or
or
js
or
scas
jne
rcl
std
cmpsb
pop
ss
add
and
add
pop
sar
xor
js
jge,pn
mov
sub
jmp
stc
ret
pop
shlb
adcb
cmpsb
lock
shrb
insl
imul
mov
pop
jns
idivl
sub
add
cmp
scas
mov
mov
and
xchg
imul
fnstsw
add
mov
sbb
ret
or
xlat
or
mov
pop
inc
rcrb
jae
je
ljmp
dec
push
das
cmp
xorl
sti
add
imul
cli
test
and
mov
mov
adc
jmp
mov
cld
cwtl
add
or
add
sub
sub
mov
or
sbb
in
mov
popa
mov
pushl
sbb
movsb
movsl
addb
cltd
cmp
and
mov
jp
inc
aas
push
flds
and
adc
and
pop
fcoml
daa
pop
cmp
add
adc
xor
loopne
jne
jp
and
cltd
cmpsb
or
add
aam
insl
int3
std
sub
and
cmp
ror
jge
sub
inc
ret
jnp
daa
nop
lock
jle
jae
jmp
jo,pn
or
add
or
lret
dec
add
fld
stos
dec
or
push
inc
or
lea
scas
or
lahf
test
repnz
lea
mov
xor
cmc
or
ds
adc
sub
rcrb
push
aam
mov
and
push
adc
mov
push
mov
mov
cmpb
adcb
fucomi
sbb
adc
xchg
xor
xchg
xchg
xchg
xor
loop
aad
push
sbb
inc
pop
ljmp
dec
pop
out
scas
je
adc
inc
movl
call
mov
repnz
mov
fdivs
sub
insl
and
loope
pop
dec
add
mov
lock
xchg
loopne
add
scas
std
lock
sbb
push
add
adc
shlb
insb
nop
insb
jo
in
jl
push
imul
mov
sahf
mov
ss
or
adc
push
xchg
jmp
xchg
aam
mov
xchg
sbb
lds
add
shrl
movsl
inc
cmp
test
pop
sbb
xor
add
mov
jge
mov
imul
xor
loopne
rcr
test
cmp
call
rcl
dec
cwtl
dec
sti
pop
cld
outsb
inc
cmp
je
test
aaa
lds
sub
sbb
sub
lret
dec
sbb
adc
or
xchg
add
loop
inc
insl
test
nop
pop
nop
test
fs
sub
dec
lret
clc
sbbb
fiaddl
xchg
pop
push
aad
fiaddl
ljmp
gs
nop
add
stos
add
enter
mov
inc
add
jecxz
je
bound
lods
push
int3
outsb
cltd
add
push
ret
sbb
ja
jl
add
test
mov
pop
adc
add
cmp
mov
sub
mov
adc
lcall
mov
pop
lret
les
inc
add
repnz
out
and
sub
jl
pushf
dec
cwtl
jns
add
rorb
cs
addb
or
jb
fs
outsl
decb
cli
sbb
xchg
xchg
sti
cld
std
decb
xchg
aam
add
inc
mov
pop
add
add
fists
add
and
out
jbe
mov
scas
aas
adc
or
adcb
mov
rcr
lea
fnsave
stos
in
sbb
inc
xlat
or
add
xor
pusha
fmull
inc
dec
je
add
xchg
nop
gs
mov
ret
pop
pop
dec
gs
jb
insb
pop
pop
sbb
daa
addr16
add
fldenv
or
sub
cmp
rorl
xor
and
jbe
xchg
adc
add
jle
pop
clc
inc
jne
cmpl
mov
outsl
fdivrp
mov
sbb
loope
push
icebp
mov
pop
and
xchg
dec
dec
pop
adc
movsb
cmpxchg
pop
mov
cltd
sub
repz
xor
std
fs
out
jbe
hlt
dec
rcrb
jmp
movsb
and
orl
jns
sbb
xchg
adc
mov
sti
add
pop
les
dec
and
inc
or
enter
adc
inc
xchg
mov
fdivs
movsl
lret
cmc
push
sub
scas
jb
test
or
hlt
iret
sub
push
push
aaa
cli
movsb
mov
pop
fstpl
xchg
dec
aam
adc
push
insl
push
cmpsl
push
or
cs
push
push
cmpsb
push
iret
sub
in
dec
movsb
xchg
movl
mov
dec
and
sub
stos
cmp
or
xchg
sbb
or
test
cmpsb
inc
add
mov
and
lea
pushf
or
adc
add
sub
xor
ret
sbb
pop
adc
pop
mov
jae
jno
dec
fs
jmp
mov
ljmp
cli
or
pop
out
sbb
dec
push
xor
sub
je
xchg
add
vmptrld
aas
loope
mov
cmp
fstpl
arpl
adc
ja
in
rol
sbb
lock
out
hlt
mov
je
fwait
xchg
ret
dec
push
push
mov
push
xor
aaa
push
sti
cmp
imul
subl
lea
mov
mov
push
xchg
loop
daa
add
dec
cld
movsb
repnz
mov
dec
cld
inc
and
adc
pop
add
add
arpl
cmp
cld
loope
roll
push
push
stc
jne
pusha
push
dec
lret
imul
dec
gs
jo
mov
mov
cltd
movsb
mov
sub
dec
add
adc
xchg
pop
inc
js
adc
fs
cmpl
into
add
dec
xlat
sub
int
movsb
movsb
mov
jae
dec
sbb
fs
mov
jae
loopne
sub
mov
dec
das
fldenv
mov
mov
xchg
andl
mov
push
add
jmp
nop
mov
and
adc
outsb
and
lock
es
sbb
push
xor
in
call
mov
pop
mov
std
sbbb
xchg
scas
in
nop
aam
inc
in
lock
cmp
je
inc
mov
add
jo
lcall
xchg
xlat
shl
enter
jle
cmp
jle
add
add
pop
or
cmpsl
lcall
mov
dec
out
xchg
inc
outsb
test
in
xor
call
mov
test
and
and
js
cli
push
inc
cmp
call
or
fnstcw
cmp
loope
jne
push
lea
hlt
or
xor
testl
add
adc
jle
js
or
call
push
ss
adc
jnp
push
push
pop
repz
inc
cli
cmp
jne
jns
push
push
or
fwait
iret
rorb
scas
scas
or
xchg
push
mov
mov
ds
inc
movsl
orl
pop
pop
xor
sbb
dec
sti
outsb
jae
push
adc
adc
movsl
out
or
pop
push
or
sbb
xchg
pop
sub
add
and
add
jg
mov
movsl
paddd
pop
imul
test
ret
or
aam
jge
mov
jnp
jo
pop
dec
jge
jne
lea
sub
les
repnz
or
cmp
mov
movl
in
aam
call
mov
ss
loopne
test
add
mov
sbb
inc
push
rclb
or
mov
adc
xchg
pop
pop
sbbb
dec
iret
push
mov
pop
xchg
mov
inc
add
or
enter
jo
adc
xor
shr
sbb
dec
out
icebp
adc
aaa
repnz
pop
imul
xchg
sbb
and
insb
cmp
mov
mov
add
inc
cvtdq2ps
loopne
arpl
jle
gs
les
les
xor
jo
adc
sahf
and
inc
dec
add
or
xor
xor
loopne
pop
call
or
pusha
jae
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
pop
js
loope
call
dec
stos
and
pop
mov
pop
jmp
jb
pusha
dec
and
hlt
mov
pop
ret
pop
leave
xor
and
adc
fsubrp
jnp
inc
jbe
arpl
movups
cmp
dec
push
int
cmpsl
sub
inc
int3
loope
inc
mov
cld
std
lahf
subb
pusha
dec
add
or
adc
add
fsubrs
sub
push
pop
rolb
pop
xor
pop
or
cmp
dec
mov
cmp
dec
aam
mov
subb
xchg
or
sub
mov
and
or
fld
xchg
lock
or
or
mov
sbb
jge
insl
loopne
xchg
add
call
pop
leave
roll
dec
call
push
lret
ret
xchg
sbb
scas
xor
add
adc
dec
nop
xor
aam
pop
insb
and
test
sub
je
cmp
jb
cmp
ja
pusha
pop
pop
inc
cmc
push
push
mov
jmp
add
pshufw
fistl
scas
push
je
push
jne
mov
lock
aaa
add
push
xchg
dec
test
fnstenv
sub
stc
and
fisubs
add
add
je
or
push
mov
pop
andl
fmull
sbb
lock
add
push
int3
pop
fbstp
mov
jmp
xor
xchg
push
sbb
clc
fcoml
add
pushl
xchg
inc
cmp
or
mov
add
daa
mov
cmp
leave
jmp
outsb
in
pop
push
mov
in
push
adc
pop
xor
ret
inc
pop
outsl
flds
jle
mov
fildll
add
js
repz
pop
hlt
lods
shll
cmp
xchg
daa
daa
mov
outsl
adc
xor
inc
inc
or
pop
cld
addb
int
and
pop
adc
sub
adc
mov
inc
mov
and
mov
push
xchg
adc
push
xchg
sbb
inc
mov
mov
inc
mov
ret
xchg
jp
insl
loope
loopne
mov
in
fmuls
add
add
mov
pop
inc
ljmp
add
cmpb
mov
add
daa
nop
dec
lret
imul
inc
fsubrs
dec
jl
mov
sub
jge
mov
inc
push
mov
iret
movl
jecxz
push
shrb
fs
cmp
out
arpl
pop
push
mov
fsubrp
in
pop
repnz
inc
in
lock
in
and
push
sub
ja
out
sub
sbb
test
popf
test
dec
aam
shrb
xchg
xchg
outsb
or
adc
test
add
pop
aas
push
es
sbb
adc
push
cltd
lock
xchg
sahf
out
pop
sub
add
sbb
out
out
sti
fwait
icebp
out
sbb
mov
adc
xor
fadd
add
adc
mov
add
xchg
xchg
shl
jmp
push
rcl
xchg
xor
add
cmp
fmul
repz
dec
pop
xor
push
insl
dec
push
cmp
repz
lea
ja
mov
push
rclb
mov
mov
mov
daa
out
and
mov
and
push
lock
sub
pop
sub
cld
in
inc
nop
fstps
and
testb
aas
cmpsl
add
jb
pop
out
nop
int3
jns
out
pop
addl
imul
lods
mov
add
xor
loope
repz
jns
inc
xchg
lock
lock
fdiv
jo
mov
daa
sbb
js
aam
insb
movsb
mov
push
sbb
aaa
inc
aam
add
repnz
pop
repnz
inc
outsl
inc
dec
push
sub
int3
xor
mov
xor
scas
repnz
inc
fmull
loopne
out
mov
mov
add
push
in
sbb
inc
mov
push
nop
push
inc
jle
mov
aas
in
repz
dec
add
rcrb
inc
setle
sbb
or
inc
pop
or
and
shl
inc
js
jno
es
push
out
enter
adc
movsb
mov
add
std
incl
or
movb
sub
sbb
push
push
and
dec
lret
fisubl
mov
popa
stos
imul
bnd
icebp
jmp
sbb
aam
in
cmp
lahf
rcrl
repz
mov
mov
aas
dec
jmp
aas
push
daa
imul
clc
clc
xchg
dec
jge
std
repz
sbb
addr16
mov
inc
outsl
inc
hlt
clc
add
mov
into
int3
call
and
cmp
ja
mov
xchg
js
adc
lods
pusha
sbb
lea
ret
add
pusha
mov
xor
pop
push
pop
outsl
adc
mov
add
subl
test
add
inc
adc
dec
adc
jge
repz
rolb
outsl
pop
xor
or
fisttps
mov
adc
rorb
filds
cmc
xchg
scas
push
nop
inc
addb
push
mov
mov
aam
jg
xchg
in
sbb
sbb
mov
nop
call
sub
clc
arpl
test
add
lret
mov
push
insb
fldcw
fsubl
sub
push
fdivl
adc
sbb
sbb
jbe
popl
fs
subl
sbb
pop
add
imul
je
cmp
xor
xlat
not
lret
and
jl
daa
jmp
popa
pop
adc
ret
push
mov
xor
mov
cmp
sub
mov
adc
jmp
sub
icebp
loop
adc
inc
or
fcomps
pop
sub
xlat
sbb
repz
idivb
add
lods
adc
aas
fisttps
cmpsb
stc
xor
mov
and
jns
ret
stc
loope
dec
dec
mov
dec
pop
pushf
aad
mov
loope
and
xchg
testl
loopne
add
or
ss
icebp
dec
sbb
mov
les
add
xchg
add
sub
xor
xchg
xchg
sbb
mov
arpl
dec
push
cmp
into
mov
jmp
add
and
xor
aad
push
inc
adc
aas
xchg
lods
add
in
stc
cli
fstps
rcrb
int
rolb
cs
fst
cld
movl
sbb
dec
aaa
fwait
out
loope
rorb
sti
fistpll
fwait
jb
mov
das
ret
push
imull
mov
seto
pop
dec
rcrb
pop
and
movsb
movsl
popa
frstor
in
add
nop
inc
push
lock
pop
je
popa
addr16
addl
push
jno
in
push
push
arpl
lcall
sbb
sti
add
jmp
ss
add
js
adc
mov
and
mov
dec
js
addr16
or
and
popf
movsl
inc
pushl
mov
jp
and
dec
clc
inc
cld
and
and
aad
xchg
cmpsl
add
push
inc
inc
lea
mov
aam
test
fnsave
push
fmuls
sbb
cmpsb
xor
jo
or
cmp
xor
je
and
leave
push
mov
dec
test
and
or
add
inc
fucomip
push
xchg
push
dec
outsl
push
jns
shll
sub
popa
mov
and
xchg
sbb
adc
fwait
aas
or
mov
daa
xor
fs
mov
mov
pop
test
adc
lock
icebp
ss
cmp
enter
sub
aaa
dec
sub
pop
cld
call
jmp
aam
sbb
jmp
lock
call
ds
outsb
dec
fdiv
mov
js
out
mov
xor
leave
mov
stos
and
rol
test
test
flds
xor
sbbl
lods
inc
imull
xchg
icebp
jle
je
sub
lds
dec
lods
cltd
push
out
ja
sbbb
mov
daa
jmp
fdivrp
push
or
nop
inc
fprem
rclb
sbbb
call
ret
mov
pop
adc
cltd
test
pcmpgtd
mov
or
add
roll
daa
or
jo
test
inc
push
mov
lock
adc
js
dec
sbb
test
push
imul
roll
sbb
adc
nop
cmp
incl
dec
and
push
pushl
push
scas
mov
and
push
and
movsl
aaa
add
pop
dec
popf
add
pop
and
mov
pop
negl
push
inc
pop
addb
lea
sti
dec
pop
mov
addr16
pop
or
sub
das
adc
sub
push
jae
rcrb
dec
dec
or
cmp
add
aaa
sbb
repnz
nop
das
sti
pop
cmpsl
imul
push
add
ret
test
rorb
rcrb
mov
mov
mov
xchg
inc
les
icebp
sub
xchg
xchg
sub
push
jmp
xchg
adc
cmc
scas
xchg
ljmp
mov
mov
adc
jg
rcrb
adc
xor
push
lods
cmp
push
sub
movsl
fsubr
stos
int
xchg
test
repnz
shll
pop
inc
lsl
add
fisubl
pop
and
bound
jno
in
add
sub
cmp
jae,pn
imul
adc
sub
sub
xorb
add
or
outsl
insb
gs
outsl
es
add
mov
add
mov
dec
test
imul
arpl
xor
aaa
dec
outsl
popa
xor
xchg
rcll
xchg
jnp
pop
lea
inc
xchg
mov
ds
xchg
lock
jp
pop
jmp
dec
inc
mov
insb
movl
sti
int3
das
mov
rclb
lea
push
and
ss
sub
imul
out
out
pop
sarb
cs
and
adc
sbb
mov
jmp
fldt
add
fdivs
std
fmuls
dec
and
fs
in
jo
xchg
decl
or
leave
leave
loopne
loop
in
loopne
fisttpll
mul
rorl
fmuls
clc
xchg
fcoml
in
push
add
or
enter
dec
adc
out
mov
add
xor
imul
or
or
imull
mov
fcoml
push
push
add
dec
sbb
ds
cmpsb
pushf
or
mov
cmpl
outsb
shrb
sbb
cmp
pop
sbb
mov
sub
ficoml
lret
push
fs
movsw
mov
lods
push
fs
into
sbb
cwtl
test
xor
jb
and
lods
test
and
pop
es
je
push
fs
orb
sbb
lods
mov
inc
rorl
add
nop
add
sub
add
xchg
add
and
xor
xor
nop
dec
mov
mov
enter
sbb
orb
mov
mov
adc
or
mov
fs
push
xchg
lods
les
fs
fsub
icebp
rdmsr
and
pushf
int3
pop
pop
dec
repz
sbbb
and
sahf
out
lcall
jns
out
lret
xchg
lahf
repz
out
orb
sahf
iretw
repz
jae
aas
dec
pop
in
out
jns
pop
icebp
decb
push
sbb
and
inc
or
sub
out
or
sarl
stc
push
or
and
cmp
repz
jmp
jg
stc
cmp
repz
cmpsb
mov
inc
or
repz
cmpsl
push
fs
push
add
mov
jns
cmp
addb
sub
or
adc
adc
lret
fwait
cmp
sub
mov
push
push
add
enter
mov
sbb
jno
pop
repnz
mov
test
pusha
sbb
addb
push
ss
pop
outsb
or
jp
mov
rcrb
push
and
pop
add
sahf
out
adc
pop
jns
out
mov
inc
les
inc
inc
aas
and
leave
sbb
and
xor
inc
add
repnz
adc
and
cmp
and
sbb
jns
or
and
jo
sub
and
xor
push
mov
cmp
scas
mov
and
mov
xor
sbb
and
mov
and
jo
push
enter
out
sub
xor
es
dec
test
fisubrs
fmuls
jmp
sub
push
sub
sub
xor
aam
cs
pushf
xor
push
rcrb
fwait
push
pop
and
add
mov
xlat
orb
jmp
mov
push
daa
testb
sub
lock
mov
mov
xchg
add
cmp
fstps
inc
lods
dec
out
mov
daa
xchg
lcallw
sbb
push
shl
and
orl
test
or
sbb
add
mov
push
mov
outsb
out
mov
xor
push
mov
sub
les
sbb
fninit
daa
xor
pusha
nop
les
jbe
daa
daa
jo
add
ret
popf
pop
or
jmp
and
jne
fimull
cld
cmp
push
test
dec
adc
sub
cmpl
jmp
and
inc
add
sbb
or
or
and
mov
sbb
mov
inc
and
or
pop
lret
mov
cmp
mov
sub
and
enter
push
outsl
aam
mov
imul
cmp
daa
push
push
shrb
inc
sbb
dec
ja
and
out
addr16
push
inc
stos
add
dec
xchg
push
push
test
dec
sub
adc
cmpl
test
pusha
pushf
xor
pop
mov
inc
es
dec
cmpl
add
mov
sub
test
daa
js
or
imul
ficompl
inc
adc
cmp
leave
or
and
or
sbb
or
nop
sub
lea
dec
add
pusha
je
jp
adc
dec
add
ficoms
push
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
push
mov
sub
dec
roll
sbb
mov
inc
cmp
mov
or
and
cltd
add
sbb
xchg
stos
test
in
and
jnp
adc
adc
sbb
pop
rorl
ss
or
mov
add
inc
lahf
imul
pop
fs
cmp
adc
bound
xchg
stc
outsl
sbb
fcoms
pop
xchg
jne
lret
dec
les
jecxz
sbb
sbb
ja
jge
mov
adc
push
inc
sbb
imul
pop
jb
leave
pop
inc
push
cltd
mov
out
jge
add
call
dec
and
aaa
xchg
dec
cmpsb
sub
push
add
fmulp
add
push
inc
pusha
pop
jb
mov
into
mov
push
cmp
adc
jmp
xor
lea
or
sbb
push
inc
add
aas
or
std
cmp
enter
add
lcall
repnz
push
int
cmp
cmp
or
pop
je
xchg
adc
add
mov
nop
nop
mov
les
and
pop
scas
fs
mov
add
jne
jae
xor
in
mov
or
out
inc
aaa
cmc
add
ret
mov
push
add
mul
inc
push
mov
sub
cmp
mov
lea
add
mov
xor
xchg
xor
test
sbb
sti
add
pop
in
jo
jmp
jl
inc
push
stc
in
mov
aam
adc
repnz
adc
pop
inc
inc
cltd
loopne
jg
adc
popf
mov
jecxz
leave
push
xchg
sbb
mov
sub
sub
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
mov
fcomp
ret
sub
mov
sub
jg
inc
adc
and
rcrl
call
sub
divl
loope
push
popf
add
push
mov
jno
sbb
sbb
pop
inc
sbb
xchg
push
movsl
mov
sbb
dec
jb
push
mov
jb
cmp
loop
jo
mov
jne
or
adc
inc
push
inc
pop
add
ljmp
add
mov
push
adc
jl
add
aas
push
cltd
sbb
mov
test
stos
xchg
mov
xor
loopne
xorl
hlt
sbb
sub
test
orb
sbb
popa
outsb
mov
ret
mov
xor
add
fisubs
mov
mov
jno
cwtl
inc
lahf
adc
xor
cmp
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
xchg
push
out
je
fs
and
jnp
mov
lcall
cmp
in
jmp
sub
adc
sub
mov
pop
jno
xor
ljmp
sbb
adc
je
inc
cmp
jne
hlt
decb
mov
jns
xchg
jb
fcmovbe
xor
inc
outsb
adc
pop
or
adc
cs
mov
inc
add
ret
pop
in
aam
mov
in
and
lret
xor
add
xor
fmull
or
test
sbb
inc
mov
adc
fwait
out
leavew
mov
repnz
xchg
and
cmp
xor
xor
sub
add
add
adc
mov
jp
shl
dec
adc
test
sub
inc
adc
enter
mov
push
add
pop
into
adc
xlat
xchg
loopne
jmp
in
ret
inc
mov
push
inc
cmp
cltd
dec
sbb
movl
lds
or
xchg
mov
lock
cmp
mov
movsb
int3
das
xchg
xor
dec
test
xor
rolb
bound
jns
xchg
pushw
xchg
sbb
inc
adc
jne
lahf
scas
mov
fs
sbb
mov
and
pop
loopne
xor
push
mov
push
lahf
mov
jae
mov
cmp
ja
or
fwait
enter
dec
add
sarb
mov
dec
daa
inc
or
ret
ss
test
adc
fs
add
or
sbb
shll
hlt
cmpl
mov
inc
loopne
lret
insb
mov
or
int
rcll
add
add
mov
sub
adcl
test
adc
cli
or
stos
add
sbb
xorb
add
das
or
sar
xchg
mov
idivl
adc
sub
pop
scas
dec
add
gs
mov
adc
in
mov
and
add
jmp
adc
add
dec
mov
sarl
mov
adc
jp
mov
push
inc
push
call
bndldx
or
inc
cmp
push
icebp
sbb
nopl
incl
lret
push
dec
lea
add
add
ljmp
add
loop
dec
push
xorb
adc
pop
or
xor
adc
decb
js
xorl
push
adc
cmp
inc
pop
push
adc
cmp
icebp
js
lock
add
mov
popa
cmpsb
cld
pop
decb
mov
add
rorb
push
cmp
push
daa
push
inc
inc
sbb
adc
add
add
aam
or
pop
rclb
or
pop
fsubrl
clc
adc
jne
test
call
jmp
sub
push
mov
cmc
es
lret
xor
mov
xor
xlat
and
js
imul
xor
js
or
call
nop
xchg
pop
jge
rol
sahf
test
mov
push
pop
pop
or
inc
enter
push
dec
cmp
sbb
xor
stc
dec
loopne
add
xchg
pop
pop
inc
xor
lahf
push
in
fwait
inc
mov
xchg
rclb
dec
push
push
add
mov
mov
aad
and
in
push
pop
lock
daa
and
jne
jmp
incb
in
mov
es
jns
mov
inc
rcrb
xor
test
pop
jg
sbb
sbb
pushf
movsl
and
lods
sub
or
popa
lods
push
lret
inc
aas
sbbl
lods
and
cwtl
push
or
push
pop
orl
jmp
add
adc
or
xor
ja
inc
jmp
aam
pop
sub
jb
and
adc
mov
mov
mov
lock
adc
xchg
dec
outsl
and
hlt
test
les
push
movsl
dec
or
push
frstor
sub
xor
pop
pop
pop
and
mov
or
push
cwtl
inc
adc
in
cwtl
jo
shll
cmp
mov
pop
test
jmp
and
les
adc
fdivrs
clc
rolb
adc
je
mov
das
in
and
hlt
and
test
pop
test
mov
dec
cmpb
sub
add
push
pop
and
sti
and
dec
mov
jp
es
jmp
adcb
dec
leave
dec
mov
add
inc
cmpsb
mov
leave
stos
jg
sub
enter
xor
dec
inc
mov
lods
dec
pushf
or
or
add
loop
in
cmp
xor
add
es
sbb
sub
dec
dec
in
es
inc
sahf
push
xor
rorb
cmp
xchg
rcrb
push
mov
nop
add
add
addb
sub
or
jge
pop
xchg
push
icebp
pusha
and
ljmpw
inc
cmpsb
sub
mov
lret
xor
sbb
and
xchg
lcall
daa
lea
add
clc
cmc
mov
out
out
mov
je
fwait
dec
sbb
bound
mov
out
mov
add
dec
pushf
fwait
adc
shrl
jo
adc
adc
sbb
test
sub
mov
cmpsl
mov
adc
movsb
and
outsb
imul
push
nop
push
lcall
mov
lds
sbb
xlat
sub
add
push
nop
iret
mov
subl
sub
imul
ja
push
sbb
and
mov
jns
jl
cmp
cld
dec
clc
scas
clc
sub
out
sbb
and
mov
insl
xchg
sub
xor
inc
sbb
and
inc
adc
test
mov
fsts
mov
jbe
mov
add
jae
jbe
sub
pusha
lahf
add
dec
cld
sbb
push
ret
and
pop
xchg
imul
cwtl
or
dec
push
repz
lret
imul
ss
je
test
push
push
mov
imul
dec
jmp
iret
sub
aam
pop
dec
jne
xor
pop
jecxz
test
cmpsb
push
stos
mov
ja
cmpl
cltd
dec
inc
cmp
lock
repz
mov
mov
pusha
adcb
jp
icebp
loope
adc
daa
nop
repnz
sbb
mov
cwtl
lds
cmp
push
scas
or
xor
jbe
mov
inc
push
imul
sbb
push
inc
push
cld
jns
and
sbb
clc
sub
cs
cs
add
sbb
test
add
xor
or
sbb
jl
dec
dec
insb
cmp
jns
xchg
adc
pop
inc
cmpsb
out
pushf
popf
pop
pop
add
sub
shrl
lea
inc
clc
leave
or
or
fbstp
icebp
out
call
fwait
or
sub
jne
in
imul
or
add
orl
sbb
xor
cmp
iret
rcr
or
fstps
pop
mov
pop
add
stos
mov
sub
inc
cmp
sbbb
rorb
mov
insl
loop
pop
cmpsl
adcl
aam
push
xchg
push
imul
xchg
cmp
cs
jo
fwait
sub
test
jmp
movsb
mov
dec
outsl
pop
or
aam
cs
dec
pop
push
popa
and
lock
std
adc
adc
into
and
jnp
and
fldcw
or
xchg
inc
push
inc
push
es
fs
cltd
mov
and
mov
sbb
inc
push
std
mov
aam
mov
fs
incb
loop
insb
mov
pop
in
add
das
dec
loopne
adc
sub
in
sbb
jns
rorb
add
rorl
mov
push
push
insl
insw
cmp
pop
push
gs
sbb
sub
push
lock
mov
inc
and
popf
shlb
and
gs
iret
mov
aad
add
outsl
shl
sbb
je
mov
mov
iret
imul
fwait
dec
rcrl
adc
jp
add
stos
mov
inc
cmpsl
pop
das
inc
pop
lcall
sub
insl
lods
ret
cmpsb
push
mov
dec
pop
leave
push
xchg
or
mov
inc
loopne
add
xchg
mov
jo
push
push
mov
outsb
mov
daa
movsb
inc
aad
cmp
xor
ret
sbb
test
je
out
jno
sti
add
mov
add
jbe
or
pop
roll
test
dec
mov
aas
outsl
or
movsl
xchg
or
incb
add
mov
push
fwait
inc
add
jmp
add
jmp
flds
fmuls
add
xor
fdivrp
adc
in
flds
aaa
inc
sub
add
dec
inc
push
inc
lahf
sub
xchg
or
inc
lods
int
notl
push
jge
insb
adc
imul
sub
pop
lea
add
movsl
rorl
xor
es
lds
cltd
dec
adc
mov
pop
pop
mov
or
sti
jg
sbb
imul
xor
sub
xchg
aad
sbb
cltd
fisubrs
nop
cmp
push
out
or
add
add
pop
pop
xor
or
mov
lret
add
dec
push
dec
push
push
mov
xor
fcom
mov
xor
loopne
jne
xchg
outsl
and
adc
lock
lret
pop
xchg
int
mov
filds
add
mov
mov
out
or
or
sbb
jmp
fbld
aas
xchg
push
inc
sub
ficoml
xor
mov
cli
insl
xor
sbb
mov
daa
pop
fisttpl
adc
dec
hlt
and
insl
mov
outsl
sbb
daa
cmp
push
sarb
in
cmp
insb
inc
imul
jmp
sbb
sbb
in
pop
lods
fstps
inc
ja
insl
sub
shlb
sbb
mov
push
xor
dec
lea
aad
ja
cmp
or
or
fcomip
fbstp
daa
pop
aam
ret
into
repz
imul
jo
add
sub
iret
pop
cld
mov
mov
das
or
sub
push
push
add
mov
jbe
jnp
loope
out
sbb
pop
mov
push
js
cmpsb
sbb
fnstenv
inc
pop
and
inc
dec
fadds
sub
pop
adc
enter
xchg
ret
and
sbb
cmp
jmp
roll
add
sub
out
sub
daa
xor
arpl
push
pop
xor
leave
aas
mov
cmp
es
push
jl
sub
dec
ss
xchg
jns
inc
dec
or
test
mov
xchg
push
jge
cmp
add
xchg
push
dec
adc
cmp
sbb
inc
inc
mov
dec
xchg
jno
pop
outsl
in
sbb
leave
aam
cmp
dec
aam
dec
mov
pop
loope
test
add
orl
cmp
adc
jne
shll
popa
mov
insl
mov
mov
pop
dec
popf
arpl
aaa
fildl
xor
pop
add
out
and
sub
mov
lods
sub
enter
cmp
cmp
cmp
fdivp
pusha
or
cltd
sub
lock
push
inc
push
aaa
cmp
fidivrl
pop
xchg
inc
xchg
mov
lock
or
das
adc
jo
inc
pop
mov
outsb
outsb
push
sbb
sub
xor
cmc
subb
arpl
jne
xorb
sbb
sbb
jbe
adc
and
insl
ja
movb
adc
inc
je
xor
outsl
rcrl
and
lcall
push
enter
mov
or
push
adc
rorb
sahf
out
push
and
cmp
stc
stos
cmp
pop
push
inc
jmp
cmp
add
cs
adc
aam
dec
push
add
bound
ds
or
shrl
cmc
xchg
push
sti
lfs
sbb
in
or
push
add
push
lret
pushf
outsl
mov
sbb
inc
int3
push
lock
push
jl
dec
jmp
inc
inc
jecxz
repnz
inc
xchg
inc
insb
jg
inc
push
ja
inc
push
add
inc
dec
xchg
mov
add
xor
inc
inc
ltr
lods
cmp
add
sarb
push
shll
add
and
scas
pusha
dec
je
mov
psubusb
xor
adc
insb
dec
movsb
xor
out
and
leave
mov
fs
sbb
sub
es
pusha
push
jl
and
and
or
jnp
xchg
insl
les
fimuls
or
inc
sub
push
enter
sub
sub
dec
push
sbb
xchg
pusha
sbb
je
dec
cmp
inc
cld
push
push
cmp
inc
xchg
lods
push
xchg
jo
xor
add
add
movsl
xchg
dec
or
pop
mov
cltd
jo
and
int3
aas
enter
inc
fsubr
das
imul
arpl
push
and
dec
push
cmp
and
enter
je
push
and
stc
add
push
and
add
mov
push
mov
sarl
xor
cmpsb
sbb
inc
sarl
push
jo
pop
xor
and
dec
aas
dec
jge
mov
xchg
add
inc
jb
movsb
lea
mov
mov
call
jmp
cmp
mov
inc
mov
xchg
lock
sub
les
push
loop
add
sub
or
jbe
dec
cmp
xlat
leave
ret
jmp
inc
aam
jns
push
inc
mov
add
inc
ja
sub
jb
lods
stc
add
leave
insb
outsb
dec
bound
movsl
jno
mov
sbb
jb
mov
in
xchg
add
cmpsb
xlat
push
call
aam
test
inc
popf
pusha
movsl
xor
xchg
dec
test
int3
dec
jmp
cli
mov
sbb
add
inc
pop
sub
and
outsl
ljmp
inc
lock
shl
mov
dec
or
in
dec
sbb
aaa
insb
sbb
add
mov
cs
cmp
mov
sbb
cmp
ss
ret
rcll
mov
pop
xor
pop
dec
pop
jb
cmovbe
inc
and
inc
inc
cmp
inc
and
adc
ss
xchg
mov
fldl
bound
push
movsb
les
sub
adc
mov
push
dec
mov
jne
notb
sbb
shlb
scas
sub
add
xchg
je
dec
lahf
cwtl
outsl
or
cmp
mov
or
scas
int
adc
leave
loop
adc
xchg
cld
ds
int3
data16
push
pusha
popa
call
movsb
mov
xchg
and
add
loopne
dec
movsl
mull
push
rclb
sahf
sbb
dec
outsb
cmpsb
fwait
add
inc
and
mov
or
cli
movsl
pop
aad
lods
iret
test
push
sbb
sbb
pop
dec
loopne
aam
stos
push
or
add
int
cmpl
call
je
sub
xor
ret
sahf
outsl
xchg
or
inc
das
jmp
cmpsl
sbb
jnp
or
imul
cmp
test
add
or
adc
push
push
dec
sub
adc
inc
jae
bsr
cmp
add
aaa
inc
je
aam
mov
xchg
mov
xchg
aaa
xor
aam
and
pusha
inc
mov
loop
add
mov
test
scas
loope
jmp
sarb
imul
outsb
jnp
add
nop
add
xchg
scas
test
cmp
rcrb
dec
outsb
mov
movsl
cmp
rorb
push
inc
inc
ljmp
sbb
sub
xor
scas
pusha
push
fcmovu
add
sub
push
push
mov
aam
adc
cltd
pop
movsl
pop
or
fwait
out
push
xor
je
sbb
out
jbe
xchg
sub
or
aas
xchg
dec
testl
dec
cmpsb
push
add
push
cld
into
pusha
or
ss
inc
je
inc
add
rorb
sbb
xorl
sarl
cmp
out
sub
jge
arpl
insl
or
prefetch
nop
or
push
sbbb
sqrtps
xchg
pop
adc
sub
arpl
adc
or
leave
push
inc
sbb
push
push
pop
nop
or
lret
xchg
cs
adc
mov
mov
sbbb
inc
lahf
mov
xchg
xchg
sbb
cli
fs
adc
xchg
sbb
dec
sahf
ja
jno
nop
pop
and
inc
or
dec
sbb
aad
stos
cmp
sub
xchg
xchg
push
inc
dec
sub
cmp
add
js
data16
mov
mov
and
in
push
imul
daa
and
lea
inc
xchg
push
sub
jge
and
add
imul
xchg
mov
inc
jo
mov
sub
push
ret
or
xchg
sub
in
sub
and
mov
push
add
rcrl
stos
sbb
jo
sbb
add
andb
out
js
sub
adc
imul
pop
sbbb
xor
add
lock
push
cmc
push
dec
faddl
outsb
in
or
jmp
popa
sub
push
ja
pop
in
pop
cmpsl
test
popa
mov
cmpsl
loopne
jecxz
sub
mov
cmp
mov
repz
adcb
add
gs
les
popf
pop
fs
ljmp
loope
mov
mov
insl
jo
xor
lret
and
inc
sub
repnz
jge
push
subl
push
jne
lcall
xor
repnz
shlb
repnz
sub
adc
inc
fcomp
jns
sub
xor
pop
inc
loopne
mov
in
in
push
fisubrs
ss
mov
dec
lock
shll
lods
and
inc
iret
xchg
nop
pop
mov
xor
cld
es
sbbl
dec
adc
enter
dec
int3
sbb
and
and
add
xchg
xchg
push
adc
mov
out
adc
ja
mov
or
push
inc
mov
inc
loop
mov
inc
jno
add
dec
jnp
xchg
mov
mov
xor
push
push
popf
xor
dec
imul
add
inc
and
cmpsl
in
sub
push
and
popf
or
outsl
sbb
enter
sub
nop
dec
push
push
xor
xchg
and
xchg
sti
aad
add
sub
pusha
pop
add
add
fadd
pop
mov
lds
xor
ss
jecxz
pmulhw
and
out
scas
sbb
dec
push
and
cmp
mov
mov
pop
and
cmpsb
fsubl
in
inc
add
pop
inc
sbb
imul
mov
aaa
cmpsl
mov
sbb
adc
xchg
imul
mov
push
ja
andb
movsb
shll
push
loope
pop
mov
xor
push
or
in
xor
adc
adc
das
adc
or
insb
and
or
xchg
loopne
adc
jle
jl
add
scas
addb
and
mov
repz
mov
cmp
test
sahf
cmpsb
pop
adc
cs
pop
repnz
lods
add
add
cmpsl
cmp
sbb
or
add
xor
jns
orl
push
and
add
push
les
imul
arpl
test
fs
add
or
pop
gs
sub
repz
js
jne
fwait
and
dec
repz
sbb
adc
or
inc
out
shrb
ljmp
loop
sbb
sbb
adc
jns
pop
inc
xor
pop
add
or
sbb
push
jle
insl
pushf
push
jp
fimull
or
aam
mov
das
push
dec
mov
mov
cmpsb
jle
xchg
push
push
adc
sub
out
test
fistpl
xor
or
enter
jle
pop
rcrl
and
dec
cwtl
test
mov
or
xchg
adc
fwait
or
pop
ja
inc
sub
in
jle
xchg
sub
add
inc
js
cmp
push
cltd
or
push
mov
push
or
push
dec
xor
lcall
inc
js
cmp
or
dec
mov
pop
add
cmpsl
inc
adc
mov
pop
and
sub
push
push
ja
cmp
or
or
or
adc
jo
or
cmpsb
push
adc
push
jmp
hlt
pop
push
mov
scas
push
lahf
push
push
sbb
iret
jnp
sub
or
or
popf
out
cmp
or
or
dec
push
adc
cmc
movsb
outsl
cmpb
push
pop
add
lret
cs
push
fidivrs
sbb
sbb
push
pop
push
sbb
or
add
or
mov
iret
and
push
push
pop
adc
rcrl
adc
push
jle
and
mov
adc
sbb
stos
push
into
lea
sub
dec
pop
dec
aas
clc
and
lcall
mov
push
mov
add
mov
out
nop
push
push
xchg
or
push
mov
pop
or
mov
popf
push
add
or
mov
cld
stos
push
lock
scas
les
pop
jns
lcall
and
push
dec
outsl
pop
sbb
mov
dec
lea
mov
dec
pop
push
mov
sub
cwtl
or
xchg
xchg
xchg
cmpsl
push
or
push
xor
adc
or
or
xchg
add
dec
push
jecxz
add
mov
sti
dec
mov
sub
mov
xor
xchg
les
fs
sbb
sbb
dec
mov
popa
mov
movsb
mov
or
push
jle
cmp
jl
in
test
and
lods
push
inc
mov
outsl
pop
mov
out
call
insl
or
cs
sbb
out
ret
or
sbb
fs
mov
mov
daa
pop
out
add
and
and
insl
mov
sub
pop
dec
in
cmp
clc
xchg
inc
pop
lods
jns
orl
dec
fsub
fsubr
outsl
sub
inc
out
sub
imul
add
dec
loopne
loopne
inc
sbb
add
data16
lock
cmpsl
and
imul
xor
hlt
fstpl
fwait
push
push
lcall
pop
in
jae
popa
pop
sub
pop
dec
dec
cs
lods
jge
inc
mov
inc
lock
sbb
repz
adc
and
xor
sub
sub
add
dec
pusha
js
xor
out
pop
adc
int3
add
jne
jl
mov
mov
sbb
or
fucomp
add
inc
aaa
cwtl
adc
add
lods
nop
xchg
inc
cwtl
xchg
lcall
inc
sbb
shr
inc
pushf
lcall
pop
pop
pop
enter
lock
or
and
jge
mov
sub
pop
ja
or
cmp
push
mov
std
or
jbe
jl
add
divl
mov
movsl
pop
mov
mov
xor
adc
adc
add
sub
mov
add
es
or
pushf
add
aam
test
and
xlat
rcll
push
push
scas
dec
pop
mov
hlt
insb
push
add
call
jecxz
add
or
ret
adc
pushf
cmp
outsb
add
or
xchg
sbb
enter
xorl
xchg
jmp
nop
scas
push
mov
add
loope
xchg
insb
add
sbb
pop
and
pop
bound
dec
or
sti
xor
fcmovb
xchg
int3
faddl
jmp
adc
sub
xchg
repnz
sub
ja
bound
add
movswl
bound
add
or
dec
push
add
or
dec
in
xchg
int3
or
mov
jle
jl
lds
xchg
xor
mov
pop
or
sbb
pop
ja
pop
loope
cltd
xchg
jae
sahf
rclb
sbb
push
int
or
jbe
test
sbb
xchg
clc
clc
add
je
stos
jecxz
repz
cmp
in
arpl
loop
push
xchg
loopne
aaa
and
test
test
add
mov
and
nop
push
add
adc
xor
push
inc
arpl
mov
dec
ds
adc
iret
xchg
pop
inc
jp
cmpsl
movsb
fs
cld
mov
mov
insl
adc
and
xor
mov
xchg
push
ljmp
adc
push
je
nop
add
sahf
mov
and
adc
shlb
adc
and
pop
aaa
pop
cmpsl
pop
and
pop
sub
sub
mov
jle
sub
imul
lods
jbe
sub
stc
addr16
add
jl
iret
jnp
push
inc
fsub
add
or
sub
lret
cmp
sub
pop
lret
pop
repnz
nop
insb
dec
add
dec
mov
mov
pop
sub
jne
inc
outsl
push
mov
push
cltd
test
mov
and
movsl
pop
insw
stos
sub
lret
ja
and
push
pop
ret
das
mov
jbe
fwait
or
inc
add
imul
nop
mov
nop
addr16
ror
jb
xor
lcall
in
inc
popa
popf
push
add
and
mov
sub
xchg
hlt
push
insb
jge
and
xchg
dec
cmpsb
jno
movsl
lahf
rclb
lret
imul
mov
orl
jl
add
inc
sahf
and
pop
mov
sbb
aam
call
push
fildll
nop
outsl
fsubrl
cmp
add
mov
rclb
xchg
pusha
jp
jae
fs
fmuls
add
testb
pop
aad
hlt
pop
cltd
fisttps
fdivrs
imul
and
and
inc
imul
shlb
out
or
and
add
and
xchg
aaa
repnz
subl
lea
mov
es
mov
mov
or
adcb
data16
or
fimuls
fldcw
push
mov
call
xchg
jns
sahf
pop
sidtl
loopne
pop
jo
arpl
dec
pop
xorl
aaa
pop
inc
sub
adc
push
roll
adc
or
sbb
and
adc
adc
xor
push
lahf
xchg
add
sbbl
jb
cmp
stos
insb
lea
jmp
sub
and
scas
and
mov
dec
push
cmp
pusha
insb
add
stos
mov
pop
mov
dec
insb
xchg
insb
rorb
in
mov
mov
enter
dec
shrb
and
pop
stos
jb
push
in
push
aas
loopne
add
add
insl
fldcw
jmp
rclb
pop
xor
sub
je
dec
je
add
jmp
inc
xor
sarl
push
mov
jmp
clc
inc
pop
jb
push
and
ret
xchg
xchg
push
push
push
add
sub
sub
pop
xor
mov
push
popa
cmpl
outsl
enter
test
outsl
nop
rcrb
outsl
or
mov
sbb
ja
sbb
dec
dec
imul
fildl
ret
sbb
add
mull
dec
jnp
lods
in
mov
sbbb
dec
add
testb
xor
inc
mov
sbb
hlt
ficomps
fidivs
dec
dec
adc
xor
cmpb
ja
and
adc
inc
push
fldenv
mov
ja
xchg
or
enter
jae
jb
jo
and
leave
mov
push
adc
ret
notl
orb
fists
sub
pop
lods
pop
add
cs
xchg
dec
sbb
pop
pop
mov
rorb
clc
mov
cli
push
int
nop
cmp
ss
cmp
mov
sub
cmp
add
es
jbe
sahf
sub
or
xor
pop
rorl
xor
pushf
jge
cmpsb
lea
jae
sbb
mov
sub
int3
cmp
fucomip
loope
popf
xor
adc
or
xor
roll
cmp
xor
and
and
xor
in
sbb
sbb
sar
jo
addb
jmp
fadds
mov
lcall
cmc
or
imul
sub
shr
sbb
adc
or
xchg
fcompl
jns
out
sbb
or
add
push
push
test
and
mov
movsl
jg
scas
and
pop
add
fadds
pop
push
mov
sub
push
rclb
add
add
add
in
adc
jle
adc
sbb
pop
add
mov
cmp
daa
and
lods
or
xchg
jne
aad
aad
inc
jns
xlat
mov
stos
xor
jge
ljmp
pop
push
out
fcmovu
mov
push
or
sub
mov
or
dec
dec
addr16
add
dec
jne
dec
inc
mov
popa
lock
jne
andb
sub
sub
add
mov
inc
out
inc
sbb
pusha
cmc
adc
and
pop
pop
xlat
mov
bound
andb
cmpsb
fisttpl
inc
shll
call
rorb
push
add
mov
push
clc
mov
cmp
jg
lea
adc
in
add
mov
xor
pusha
in
dec
inc
jo
mov
mov
xchg
xor
jne
loopne
sarb
jne
push
xor
jne
or
sub
push
nop
cmp
adc
add
sbb
fldl
call
sbb
jns
cs
cwtl
sbb
and
clc
outsb
inc
ja
sbb
sub
pop
adc
aad
pusha
jae
inc
inc
or
popf
sub
dec
ja
xchg
mov
jne
in
clc
jnp
mov
or
sbb
or
hlt
mov
icebp
mov
int
sbb
hlt
call
and
call
inc
lock
call
in
in
loope
sbb
loop
cld
sub
push
fcoml
cltd
dec
and
mov
or
pop
xor
xor
cmp
rol
rcl
sub
outsb
loope
jmp
push
jecxz
movsb
insl
jp
push
push
pusha
mov
mov
or
jo
out
popa
xorb
sbb
xchg
pop
lock
mov
mov
jp
mov
sbb
out
add
loope
outsb
sbb
mov
jne
pop
sbb
xchg
mov
and
nop
add
sub
and
call
inc
mov
or
add
pop
aam
jecxz
push
add
sahf
adc
ds
add
stos
addl
fmull
jecxz
mov
ror
push
mov
lret
pop
cmp
mov
ja
inc
stos
imul
gs
dec
enter
dec
fistpl
xor
les
dec
shrb
mov
bound
sarb
or
insl
shll
jns
add
sarb
push
in
or
mov
add
cmpsl
inc
and
mov
pop
inc
fwait
adc
adc
stos
inc
mov
or
inc
mov
xor
push
mov
mov
xchg
and
lods
mov
stc
clc
lds
test
xor
gs
ljmp
div
mov
add
mov
sub
pop
adcl
pop
pop
push
dec
sbbb
rorb
xchg
push
sbbl
lcall
loopne
dec
mov
cmp
clc
sub
mov
icebp
and
lods
fcoml
fdivrs
in
mov
fdiv
lock
mov
jne,pn
inc
mov
mov
adc
popa
decl
xor
push
ret
dec
fidivs
cmp
sti
pushf
inc
xor
imul
stos
pusha
sub
xor
and
pop
rorb
insb
int3
dec
jo
movsl
iret
adc
jnp
adc
popa
movsb
jmp
fstl
rorl
icebp
lock
ljmp
cwtl
outsb
nop
out
xlat
mov
xchg
out
les
and
mov
inc
or
cwtl
mov
xor
mov
ret
mov
mov
lcall
mov
sub
mov
xor
lods
jb
or
imul
test
xor
popa
outsl
pop
adc
cmp
sbb
xor
jl
les
loopne
push
add
aaa
push
sarl
icebp
and
jmp
test
sar
add
pop
add
mov
or
add
add
add
lcall
sti
push
adc
in
or
push
xor
imul
add
in
js
add
stos
pop
insb
pop
pop
mov
adc
addb
add
jnp
addb
fisttpl
add
lahf
fldl2e
je,pn
or
adc
pop
fldt
dec
test
fildll
sbb
insb
loopne
rclb
mov
mov
add
addr16
mov
loop
jo
dec
add
pusha
or
xor
imul
das
push
xchg
push
test
sub
pop
test
jle
ljmp
jno
daa
insl
lods
hlt
std
mov
verw
dec
sahf
sbb
xchg
inc
inc
test
mov
inc
sahf
jle
push
sbb
sub
xchg
xorl
nop
dec
lcall
pop
add
pop
out
sarb
call
cmpsb
dec
cmp
dec
jbe
mov
dec
aaa
dec
add
lock
adc
repz
fs
push
cmp
in
mov
mov
mov
pusha
cmp
jg
pop
and
rolb
jnp
pop
loope
jle
jmp
addr16
xchg
inc
mov
fnstenv
xchg
and
pop
imul
xor
mov
std
arpl
add
jg
fdiv
sub
push
jecxz
add
movsb
movsl
mov
pop
inc
add
std
repz
sbb
xor
lock
gs
movsb
mov
stos
jno
adc
out
add
xchg
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
dec
imul
dec
pop
jl
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
outsb
inc
fmuls
mov
imul
mov
sahf
sbb
call
mov
lret
or
sub
aaa
jmp
lock
mov
push
insl
test
cmp
mov
jmp
insb
rcll
push
adc
ret
leave
add
adc
int3
jle
daa
add
or
inc
push
dec
lcall
xor
dec
add
pop
or
push
pop
pop
fldl
adc
shlb
inc
mov
dec
pop
push
or
push
xchg
mov
lds
push
cmp
adc
lds
push
push
xlat
push
xchg
rcll
imul
dec
add
es
push
outsl
js
adc
jb
jecxz
mov
add
pop
enter
andl
inc
test
xor
sub
aam
shll
inc
aaa
ds
int
in
dec
cmc
or
test
xor
pop
push
push
incb
push
pusha
jmp
push
clc
or
pop
inc
xor
adc
rclb
test
push
sbb
jns
int
clc
inc
adc
mov
pop
test
dec
push
fildl
mov
sub
aas
xor
add
cmp
jb
mov
mov
mov
sub
out
add
sub
jbe
hlt
lcall
lods
add
cmp
adc
jae
mov
add
adc
and
or
lods
mov
sti
mov
or
mov
stos
ss
outsb
add
ds
test
adc
jb
xrelease
fildll
and
dec
adc
std
or
dec
sbb
or
sbb
gs
cmp
mov
add
mov
in
add
outsl
cmp
jae
cwtl
fstp
cmp
add
add
insl
scas
xorb
sub
fucomip
popf
or
push
xor
pop
mov
jle
mov
jecxz
jmp
sub
fsubs
nop
add
inc
pop
jmp
mov
sbb
scas
sub
inc
mov
inc
fsubr
add
adcl
xchg
xlat
cli
cli
ret
add
fs
xchg
call
mov
xor
fistl
lods
cmp
je
sub
fcompl
fidivrl
add
les
loop
and
xor
add
xchg
ja
pusha
adc
mov
jmp
adc
clc
xor
mov
fwait
add
sub
mov
insl
and
out
jecxz
mov
test
push
and
add
mov
mov
jg
stos
cltd
cmpsb
push
adc
jns
lock
mov
test
loope
adc
test
or
js
out
mov
dec
testl
adc
mov
or
inc
add
mov
add
cmpl
push
add
mov
add
xchg
xchg
mov
push
xchg
cmpb
les
roll
inc
adc
add
xchg
outsb
push
sbb
add
lcall
and
xor
cmp
lea
or
add
dec
pusha
mov
xchg
mov
jne
mov
clc
mov
push
mov
mov
sub
sbb
mov
mov
inc
push
das
loopne
add
push
data16
inc
or
adcl
int3
cmc
push
fadds
cmp
mov
sub
mov
sbb
sti
ret
push
mov
or
int3
and
out
add
test
mov
or
pop
cmpsl
stos
xchg
sbb
imul
and
push
pusha
cld
sbb
lods
adc
push
sub
cmp
pop
jno
pop
pop
stos
pop
xchg
insl
sbb
roll
hlt
xchg
cmp
push
mov
add
nop
stc
add
test
add
mov
and
lcall
imul
outsb
cs
mov
jmp
in
push
mov
and
fmull
adc
sar
and
cmp
xorb
cmp
loop
loop
pop
aam
dec
test
cli
mov
mov
xchg
and
inc
arpl
outsl
mov
nop
lret
add
cmp
insl
insb
push
or
ljmp
ljmp
xchg
mov
inc
cmp
jne
fucomip
out
add
loopne
sbb
fimull
sbb
xchg
ret
shr
cmp
clc
repz
mov
pop
and
es
mov
adc
mov
mov
mov
add
mov
adc
pop
inc
pop
dec
fcom
adc
jo
dec
and
ret
add
add
mov
cmpsl
test
ljmp
fwait
add
dec
cmpsb
call
mov
jmp
push
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
inc
or
ret
push
adc
out
lock
pop
cmp
ret
insl
cmp
int3
iret
push
or
push
imul
lds
popa
pop
test
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
outsl
sub
push
inc
fidivrs
mov
push
movsb
mov
push
adc
jb
or
push
push
pop
cmpsl
stos
push
sarl
pushf
mov
jne
mov
sahf
js
push
cld
popf
mov
ret
and
cli
inc
adc
jo
dec
mov
cwtl
pop
jg
sbb
or
dec
std
scas
fistpll
add
lret
mov
data16
dec
repnz
loope
pop
jg
dec
sarb
cli
jl
sti
pop
dec
inc
sti
jle
pop
mov
cld
mov
imul
push
sbb
push
lea
lock
xchg
mov
addl
cld
jge
ds
sti
test
mov
ret
xor
mov
dec
xchg
mov
aas
mov
out
call
or
ret
sub
add
add
sub
add
adc
add
mov
or
fiaddl
adc
mov
xchg
xorl
ret
cmp
push
cmp
movsl
mov
ds
fidivrl
jo
xchg
lret
adc
adc
fiaddl
jle
in
and
or
insb
and
shlb
push
pop
dec
aaa
lock
in
mov
fdivs
pop
mov
xor
rorl
repz
pop
lock
or
xchg
cmp
fdecstp
add
mov
dec
scas
mov
mov
out
test
inc
jae
cmp
lea
sti
add
sub
cmp
jg
sbb
sub
ret
in
sahf
mov
outsb
mov
jae
or
sbb
inc
test
fst
popf
pushf
xchg
mov
push
inc
xor
sub
loop
es
add
test
jg
or
sub
outsl
add
sarl
mov
cmp
push
lret
cmp
mov
or
jge
leave
clc
and
jmp
insb
and
add
add
jl
jno
push
in
lea
and
push
push
outsl
add
cmp
dec
add
xor
jp
sarb
loop
loopne
neg
jbe
out
jg
xchg
icebp
or
add
outsb
shll
popa
and
add
xor
or
cmpsl
cmp
push
adc
inc
in
sbb
inc
mov
pop
rolb
fisttpl
xor
inc
jl
ja
jmp
jne
cmpsl
and
inc
dec
or
inc
pop
pop
sbb
loopne
movsb
pop
leave
mov
nop
pusha
inc
addr16
leave
add
add
push
xchg
insb
das
sbb
iret
pop
xor
and
mov
add
xchg
mov
fcoms
adc
xor
mov
jno
push
jp
aas
testb
or
adc
adc
inc
inc
in
mov
ljmp
int
daa
pop
pop
pop
pop
enter
lds
enter
add
pop
dec
or
inc
test
leave
xchg
add
sarb
in
das
nop
push
lds
sub
and
push
push
inc
lods
pop
mov
push
das
add
add
dec
mov
or
push
adc
fsubs
add
inc
jnp
lcall
push
cmp
push
add
aad
lock
into
aas
daa
mov
cli
movl
test
rorb
push
add
repz
xor
lea
cmp
cmpsl
inc
in
xchg
jne
add
add
test
xlat
push
aad
mov
sbb
sarb
jge
mov
jns
jmp
jge
push
xchg
push
test
or
lret
xor
push
sarb
xchg
sbb
leave
cmp
add
dec
pop
add
add
loope
pop
xabort
cmpb
or
inc
add
or
push
notl
mov
pop
push
mov
xchg
and
and
add
fmuls
xchg
pop
pop
push
mov
cmp
ja
push
jle
mov
inc
inc
cli
insl
push
div
pop
das
hlt
push
movb
dec
mull
mov
sbb
dec
add
inc
dec
arpl
mov
cmpsl
sub
and
test
shr
int
pop
mov
loop
data16
push
and
in
imul
sub
jmp
jle
cmpb
and
pop
movb
data16
inc
test
stc
pusha
pop
jae
add
pop
mov
jne
popa
or
xchg
ret
popa
push
add
dec
jno
push
les
dec
fwait
push
ret
aaa
pop
add
jmp
push
push
adc
repnz
fmull
sbb
pop
or
je
jge
and
lcall
subl
test
push
jae
jbe
adc
js
xchg
push
add
ret
mov
ljmp
adc
adc
push
shlb
inc
mov
cmp
inc
mov
adc
push
mov
mov
fwait
pop
js
shrb
jnp
sub
loope
add
gs
sbb
sbb
mov
adc
jecxz
mov
mov
sub
pop
xor
outsl
xor
add
inc
and
lahf
jb
loope
ret
mov
xchg
mov
sbb
movsl
mov
ja
filds
xchg
jo
push
add
fistpll
dec
movb
or
or
jns
not
rcl
test
inc
fisttpl
cld
xchg
mov
or
je
sar
ja
add
push
sub
fdivs
es
jmp
ds
mov
inc
push
add
cltd
ret
out
mov
lahf
or
xorb
push
out
jns
dec
add
and
xchg
jb
sidtl
mov
sub
adc
inc
cmp
jne
fldz
jmp
mov
add
mov
cltd
out
sub
sbb
add
in
fistps
add
loopne
loopne
adcl
leave
fstcw
fldcw
fnstsw
fimuls
adc
not
and
cmpsl
mov
scas
sbbb
lcall
inc
cmp
inc
sub
fs
ljmp
iret
xlat
imul
mov
pop
pop
inc
ljmp
ficompl
addr16
inc
jmp
pop
fwait
movsl
mov
xchg
add
lea
das
add
lods
inc
out
and
nop
adc
out
iret
push
insb
outsl
bound
or
or
jmp
insl
je
or
aad
push
sub
dec
jnp
xor
sbb
add
mov
lods
pop
jns
push
xor
dec
aas
movsb
mov
pop
arpl
ss
sti
sub
aam
mov
jnp
pop
inc
push
add
add
orb
gs
sub
xor
jne
in
sbb
daa
inc
add
fistl
sub
inc
aas
inc
jne
popa
or
ss
orl
xor
fwait
inc
push
inc
inc
push
gs
imul
outsb
sti
dec
and
jb
mov
in
test
incb
add
and
cmp
jp
in
sub
in
mov
pop
pshufw
or
pop
pmulhw
call
push
lock
sub
sbb
jns
out
push
popa
imul
test
fbld
dec
xchg
push
sub
cld
filds
add
lds
inc
mov
dec
push
mov
pop
cmp
xchg
mov
sbb
rcr
jb
pushf
inc
pop
add
es
add
es
and
call
cmpsb
push
fwait
inc
mov
inc
mov
sbb
mov
insl
sub
scas
adc
movsl
sub
mov
adc
pop
cltd
in
popf
pusha
sub
mov
js
aam
and
es
or
dec
xlat
dec
sahf
addl
adc
and
pushf
inc
sub
jbe
cltd
cli
mov
into
nop
movl
push
adc
and
jb
push
out
psubsw
in
in
jmp
in
fs
ljmp
cmp
shl
sahf
cmp
in
sahf
fs
lahf
aaa
jp
int
sub
in
mov
add
and
sarl
add
add
and
ficompl
add
inc
inc
xchg
popa
jnp
punpckhbw
push
sbb
pop
bound
adc
mov
dec
jmp
cmp
add
sbb
add
push
xor
addl
jle
adc
mov
xor
add
mov
or
and
and
push
lods
aaa
add
movsl
inc
and
xchg
or
dec
outsl
addr16
add
jecxz
add
inc
add
inc
mov
daa
mov
sub
pop
push
add
fsubs
push
jl
or
cs
insb
lods
mov
lea
adc
push
mov
lods
jnp
or
xchg
mull
dec
adcl
or
popf
out
pushf
adc
and
push
ficomps
sub
adc
push
inc
mov
in
cmp
jno
out
xor
or
dec
cs
popa
dec
or
shll
xor
push
mov
cmpsl
das
and
pop
mov
ret
adc
shl
adc
push
pop
and
mov
add
xlat
pop
push
shr
inc
movsl
push
cwtl
in
movsb
adc
sbb
pop
shrb
adc
cmp
sub
mov
andl
mov
das
mov
push
inc
cmp
push
enter
or
mov
out
mov
cmpsl
ror
push
xor
jae
dec
leave
inc
jb
in
mov
pop
movsl
sbb
inc
dec
movsl
pop
dec
add
or
iret
orl
mov
push
in
lcall
xchg
xor
std
loope
add
ljmp
xor
pop
sub
fisttpll
sbb
push
shll
push
mov
dec
mov
dec
lret
adc
add
insl
pop
mov
adc
mov
push
inc
xchg
mov
mov
xor
cmpsb
dec
jo
push
nop
test
andb
sahf
insl
test
dec
adc
dec
xchg
cmp
pop
add
mov
or
xor
xchg
or
add
add
lock
add
xorb
cs
and
dec
sbb
cmpsb
addl
orl
add
sub
cli
or
fwait
adc
adc
push
fcmovnbe
aam
std
sbb
push
in
mov
pushf
adc
xor
jo
cmp
push
xor
and
lret
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
add
outsl
dec
repnz
dec
xor
in
sub
xlat
jno
dec
jne
or
rcrb
and
xor
nop
cmpsb
test
xchg
lret
pop
shll
adc
add
icebp
dec
and
push
lret
xor
xlat
cmp
popf
and
adc
cwtl
aas
pop
pop
mov
or
mov
jne
stos
or
sbb
aas
xchg
lea
movsl
in
icebp
es
out
pop
mov
nop
nop
adc
xchg
add
pop
and
in
or
pop
push
add
stos
out
stos
nop
xor
incl
xchg
and
out
or
jae
xchg
fdivl
scas
insb
sub
push
pusha
int3
mov
pushf
rorb
dec
cmp
popf
and
hlt
pop
aaa
xor
hlt
hlt
lock
xchg
xadd
in
jge
sahf
out
fiadds
jne
dec
lahf
out
mov
fwait
mov
andb
or
outsb
loop
xchg
subb
and
ds
cli
and
xchg
adc
ja
cmp
out
das
repz
je
or
je
or
shll
add
fnsave
lods
push
jle
hlt
push
inc
add
sub
je
jmp
mov
daa
mov
mov
push
push
sbb
mov
pop
ficompl
adc
pop
add
push
dec
push
repnz
and
adc
mov
enter
adc
iret
leave
cmp
sbb
adc
das
mov
push
cwtl
adc
lods
mov
adc
loopne
xor
sub
pop
mov
pop
jo
inc
mov
xchg
xchg
inc
or
nop
mov
scas
xor
movsl
mov
ret
add
xchg
sub
jle
push
add
pop
rorb
enter
aam
int
or
test
add
xchg
add
push
movsb
sub
lret
cwtl
fs
sub
pushf
je
add
xchg
movsb
xor
xchg
test
lods
mov
adcb
mov
sbb
add
add
iret
iret
adc
bound
push
ss
or
cs
jae
outsl
iret
dec
std
push
xchg
inc
imul
pop
dec
fs
mov
das
fwait
and
insl
mov
xchg
push
enter
pop
jne
push
pop
adcl
add
cld
xchg
lea
dec
outsl
fs
gs
pop
aas
push
pop
sbb
dec
jp
adc
insl
sbb
xchg
and
xchg
cwtl
xchg
inc
pop
lea
imul
idivb
inc
outsl
bound
nop
push
inc
push
push
imul
pop
aas
mov
imul
and
xor
hlt
sub
jmp
imul
jp
sub
scas
mov
inc
adc
push
sub
dec
and
pop
inc
cltd
aaa
sub
jbe
jne
outsl
and
xchg
and
sub
adc
adc
add
or
inc
jmp
push
inc
inc
sub
cmp
bound
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
and
addr16
cs
data16
jno
jo
cwtl
orb
setl
mov
dec
pop
xor
xor
lret
adc
popa
imul
xor
out
push
push
pop
aaa
sbb
and
cs
pop
js
mov
enter
adc
sbb
movsb
cld
jae
lret
fidivs
sbb
jge
add
push
jle
inc
mov
sbb
fildl
popa
pushw
push
sbb
dec
inc
shll
jo
popa
cmp
test
insb
xlat
push
adc
insb
push
imul
orb
jp
sub
rcrb
mov
imul
inc
dec
dec
inc
push
jg
sub
and
aas
ja
sbb
xchg
rclb
push
jno
outsb
pop
pop
dec
push
mov
filds
lods
cmp
pop
xor
andl
jne
test
push
dec
jne
popa
push
mov
xor
add
gs
loope
pop
cli
inc
inc
and
jae
mov
lods
ret
push
ret
push
mov
adc
push
aam
rcll
sbb
or
pop
push
push
iret
iret
adc
inc
inc
inc
inc
pop
lret
les
aas
sbb
iret
mov
pop
and
loopne
inc
or
orps
or
inc
insl
ja
repnz
push
jbe
xor
pop
xor
mov
push
icebp
lret
push
inc
push
pop
push
cs
je
push
sub
and
sahf
rolb
fists
sub
add
cmp
or
call
pop
or
jp
imul
jns
push
push
jb
dec
rcr
aaa
adc
add
pop
pop
push
push
dec
jne
pop
pop
sbbl
stos
scas
in
aaa
push
cli
insb
je
imul
inc
inc
scas
push
outsl
outsl
jne
inc
xchg
notb
cwtl
loop
xlat
sub
jne
and
pop
add
cmp
or
mov
pop
xchg
push
iret
jo
mov
push
sub
mov
push
inc
push
stc
les
jp
outsl
push
shlb
inc
pop
outsl
shll
mov
pusha
andb
or
imul
push
inc
push
inc
push
pop
push
mov
pusha
cmc
push
sub
push
xor
pop
ja
add
mov
push
push
and
mov
and
inc
adc
mov
insb
and
shrb
and
xchg
xchg
jne
push
sub
cwtl
ss
adc
push
mov
mov
or
sbb
jbe
mov
xlat
sub
sbb
cmp
pop
pop
and
cmp
xor
xor
cmp
and
insl
aas
xor
xor
add
xor
xor
cmp
imul
aaa
aas
or
ja
cmp
xor
repnz
cmp
or
aas
and
inc
xor
aas
cmp
sub
rolb
in
jbe
xor
mov
aas
cmp
jg
imul
mov
aas
mov
dec
push
pushf
bound
ss
adc
cmp
xor
das
sub
or
aaa
aas
cmp
mov
adc
aas
mov
mov
cmp
push
int3
push
incb
ds
ss
mov
cmp
mov
aaa
pushl
in
sbb
mov
pushl
mov
sti
mov
jle
lds
mov
pop
jg
out
or
xor
ss
xor
sub
xor
cmp
shlb
inc
xor
aas
or
and
jle
jg
push
lock
aas
jg
ja
in
clc
xorl
outsl
mov
das
xor
cmp
xor
xor
cmp
shrb
and
mov
cmp
cmp
xor
jbe
push
cmp
out
xor
inc
dec
and
aaa
cmp
xor
jb
mov
mov
repnz
lds
or
pop
insb
sbb
das
cmp
nop
pop
nop
xor
xor
or
rcrl
cmp
add
enter
jg
stos
loopne
or
pop
jg
or
ja
xor
xor
or
dec
xor
xor
sysexit
xor
shlb
mov
xor
xor
ret
add
mov
das
aaa
aas
roll
pop
and
push
lds
jb
xor
xor
add
add
ss
jp
cmp
pop
cmp
xor
add
add
inc
das
xor
pop
enter
xor
enter
add
sbb
cs
push
subb
aaa
clc
xchg
ret
inc
add
lret
movsb
push
divl
jecxz
push
fidivs
fiaddl
cltd
clc
cld
mov
and
int3
push
mov
mov
add
negl
jl
mov
cltd
cmp
adc
or
or
fistpl
orb
je
rclb
sbb
mov
pop
push
stc
pop
adcb
dec
pop
ja
xchg
rclb
or
int3
mov
adc
les
pop
ja
gs
popf
push
mov
pop
xchg
xchg
test
imul
sbb
mov
xor
inc
fisttpll
incb
sahf
fildl
adc
push
lea
icebp
sub
pop
and
inc
inc
push
jbe
pop
leave
and
popf
push
sbb
xchg
sub
xor
dec
xchg
xchg
sarb
mov
cmp
add
mov
inc
mov
adc
mov
add
add
push
ret
lret
lock
xor
nop
sub
cmpb
cmpsb
xchg
test
inc
scas
mov
mov
cmp
jb
mov
sbb
insl
fnstcw
pop
and
pop
xchg
push
or
out
orb
dec
int3
adc
mov
add
or
or
or
push
jns
jno
mov
scas
cld
insl
add
data16
js
lcall
test
gs
aaa
inc
adc
loopne
mov
mov
flds
pop
push
orb
push
js
imul
add
jnp
imul
fiadds
cmp
adc
psubusb
lret
and
xchg
out
fs
lock
movsb
test
or
pop
je
enter
dec
xchg
push
das
dec
xor
adc
movsb
cld
pop
xchg
dec
rcrl
andb
jno
pop
inc
test
mov
mov
cs
cld
sub
xor
adc
outsb
dec
ficoml
dec
movsb
ret
gs
sbb
push
jns
nop
sbb
pushl
fs
out
push
pop
sub
mov
popf
dec
sti
pop
xchg
dec
cmp
dec
cmpl
dec
js
arpl
je
add
pop
lea
test
js
add
hlt
test
and
adc
daa
jne
inc
es
inc
sub
notb
sar
or
inc
int
test
sarl
adc
push
sbb
dec
and
push
adc
xor
sbb
mov
adc
xchg
mov
fdivrs
or
add
xchg
int3
imul
leave
cmp
flds
int3
cmp
pop
push
xor
xor
clc
lock
popa
push
sub
call
lret
aaa
sub
or
xor
and
incl
xor
and
jo
mov
xorl
gs
inc
mov
test
add
ja
stos
std
lahf
fmull
inc
dec
inc
pop
push
dec
dec
push
inc
cs
inc
test
pushl
and
jb
jno
bound
jle
iret
add
sub
aas
fidivrl
ret
pop
and
hlt
mov
and
inc
imull
xor
push
sbb
pop
push
fs
gs
and
pop
sub
insb
fs
mov
and
sbb
and
jo
ret
pop
push
and
push
jae
or
add
mov
sbb
movsb
sarl
dec
sub
arpl
dec
pop
and
xor
add
and
and
pop
in
and
test
fstpl
inc
sub
or
imul
add
push
pop
clc
mov
dec
cmpsb
cltd
stos
fcoml
fs
stos
fadd
test
aam
in
ud1
mov
add
leave
in
hlt
pop
cmp
mov
enter
outsl
or
je
cmpsl
rorb
push
hlt
inc
call
inc
stos
or
xbegin
hlt
push
xor
call
das
shrb
adc
mov
xchg
jmp
mov
fistpll
int3
aaa
pop
test
int3
fcomip
in
inc
jb
or
aad
add
in
xchg
bnd
movsb
dec
outsb
iret
enter
mov
outsb
jb
jb
test
je
repnz
sub
jg
mov
mov
sbb
sub
jns
adc
das
daa
xchg
test
mov
jb
cmpsb
je
dec
or
and
xlat
rol
pop
pop
pop
imul
dec
js
outsl
sub
add
out
sbb
cmp
das
cmpsb
add
inc
flds
fdivrs
xchg
test
xchg
filds
sub
daa
inc
test
ret
js
lds
sbb
cld
rolb
jb
test
jbe
fwait
dec
mov
jo
push
cld
jmp
pop
dec
mov
lret
enter
sti
add
pushf
jne
lea
and
repnz
hlt
mov
hlt
mov
in
jmp
dec
insb
insb
pushf
loopne
sbb
in
lret
pop
sbb
jmp
pop
repnz
mov
cmp
gs
frstor
sub
dec
mov
cs
aaa
lret
and
sarb
mov
hlt
or
testl
pop
pop
lods
or
xchg
pop
pop
add
fs
cs
and
gs
scas
push
push
sbb
nop
push
push
aam
dec
dec
nop
lret
dec
dec
sub
inc
jb
xchg
sub
inc
inc
cmp
or
cmp
add
dec
sub
xchg
lret
xor
add
xchg
xor
pop
pushf
xchg
sub
and
sub
insb
pop
xor
and
mov
mov
icebp
add
xchg
ficoml
inc
ds
repz
shrb
jb
shlb
xchg
pop
ret
test
lea
lock
mov
rcll
sbb
pop
leave
in
pop
push
orb
or
fimuls
dec
scas
or
pop
aas
pop
leave
mov
push
incb
xor
xor
add
add
or
lcall
cmp
repnz
bnd
mov
adc
cli
test
sub
jg
out
int3
sub
enter
inc
es
js
cmp
loopne
inc
mov
push
xchg
push
xor
repnz
repnz
repnz
in
loope
je
push
pop
sbb
ficoml
sub
add
jg
add
pop
es
jbe
pushf
movsb
cli
jb
and
mov
shll
add
adc
movsb
jb
add
mov
and
sub
ret
clc
int3
aad
adc
int3
add
inc
dec
xorl
pop
push
repnz
sub
inc
cld
cld
sti
and
cld
mov
cli
fadds
push
and
jns
mov
inc
dec
fldcw
inc
push
movsb
cli
call
cmp
pop
xor
gs
daa
test
add
or
das
mov
add
cs
inc
dec
push
push
aas
jb
push
test
pop
add
dec
cs
dec
dec
push
jecxz
lea
lahf
daa
mov
and
out
scas
mov
push
dec
inc
and
push
dec
sbb
hlt
arpl
xchg
pop
lahf
testb
int3
fcmovbe
mov
push
aas
inc
dec
push
inc
and
pop
lahf
or
fadds
nop
inc
push
pop
inc
dec
es
insl
mov
lods
inc
pop
pop
rcrb
inc
sbb
adc
adc
pop
shrb
insb
jae
xor
xor
fildl
sub
cld
adc
inc
lea
pop
je
dec
xchg
js
inc
and
inc
push
clc
jns
cmp
sub
cmp
jo
loopne
xor
call
in
inc
fcomp
or
ficompl
ret
arpl
sti
jmp
jl
imul
xchg
icebp
add
lcall
repz
enter
dec
popf
add
add
stc
ja
les
inc
or
sub
loope
inc
push
clc
filds
add
jbe
sbb
sbb
inc
cs
dec
push
call
add
dec
dec
inc
int
jle
dec
ret
data16
jnp
in
and
inc
mov
xchg
push
adc
inc
adc
or
inc
in
dec
add
fstpt
mov
and
cmc
cs
mov
das
movsb
xorl
pusha
adc
sbb
jg
pop
and
adc
out
aaa
nop
pop
adc
sub
int
sbb
and
jne
xchg
cmp
lcall
and
dec
leave
leave
xchg
enter
inc
jb
pop
leave
adc
and
pushf
sbb
ror
jb
inc
or
fmull
mov
cmp
add
add
mov
jb
mov
sbb
xchg
and
inc
adc
sub
xor
fildll
fdivrl
scas
mov
mov
dec
pop
insb
adc
bound
gs
imul
outsb
outsl
jo
mov
jns
dec
jge
push
addl
jae
cltd
xor
push
aas
aas
mov
add
jns
inc
flds
daa
dec
inc
or
or
sub
imul
pop
ja
pop
jg
inc
dec
rol
jmp
dec
pusha
pusha
cltd
divb
or
mov
clc
gs
fidivrl
ljmp
adc
pop
insl
std
inc
fadds
mov
mov
mov
les
out
js
cmp
std
mov
cmp
dec
and
les
mov
push
fs
jmp
inc
add
xor
cmpl
pushl
mov
loop
xor
jb
lods
frstor
lock
bound
call
test
sahf
xchg
add
dec
shrb
mov
sub
shl
inc
in
sub
jne
dec
jp
mov
or
cmp
repz
ret
rorb
test
insl
mov
rclb
jo
sahf
inc
dec
xchg
das
mov
mov
bound
fnstenv
daa
push
dec
inc
push
push
push
push
inc
pop
mov
sbbb
xchg
aaa
dec
lahf
addb
xchg
in
mov
sbb
lods
push
and
and
pop
mov
sub
out
xor
adc
clc
rcl
xor
enter
movsb
mov
adc
dec
test
pop
sbb
orl
add
popf
jge
xchg
cmp
inc
popf
pop
pop
scas
sbb
pop
jb
sahf
push
push
sub
dec
xorb
insl
jae
fisubl
and
adc
or
sub
inc
sbb
pop
adc
adc
cmp
cmp
and
mov
add
ja
mov
shrl
mov
pop
stos
mov
out
or
sub
jmp
fiadds
inc
sub
and
pop
add
xlat
sbb
add
addb
pushl
rol
inc
pusha
dec
pop
mov
push
rolb
sub
inc
cwtl
insb
cmp
dec
in
adc
mov
test
mov
cld
lret
in
ss
roll
cld
push
ret
stos
stos
adc
ret
adc
xor
insb
vpmaxsw
ret
fsub
adc
cmp
mov
jne
nop
and
adc
pop
mov
sbb
popa
mov
mov
and
bound
xor
cmpsl
mov
push
pop
inc
stos
mov
rcpps
mov
gs
cmpsb
scas
jo
sbb
sbb
mov
test
or
in
jne
cmp
pop
lea
cltd
out
lds
movsb
mov
insb
daa
fwait
sarb
mov
in
out
mov
xchg
pop
clc
add
sub
push
cld
push
xchg
stos
pop
push
sub
inc
and
movb
or
and
sub
lea
sub
add
daa
test
hlt
push
cmp
adc
rclb
inc
push
call
xor
mov
sbbb
in
mov
and
and
stc
inc
lds
ljmp
sbb
aam
add
or
repz
push
xor
push
cmp
inc
out
sahf
dec
jno
out
add
icebp
pop
xor
add
daa
jb
ja
inc
jmp
and
daa
nop
movsb
push
nop
je
stos
jmp
push
shl
rolb
add
push
and
sbb
arpl
lods
mov
sbb
loopne
lea
mov
jl
bound
push
push
popf
cmp
int
ja
lahf
fadds
mov
lock
imul
pop
adc
adc
adc
jno
aam
shrb
orb
jne
call
popf
in
loop
aam
xor
add
test
mov
andb
cld
push
outsb
fs
outsl
arpl
add
loopne
les
pop
dec
aas
xchg
dec
mov
jne
sarl
sub
cmp
dec
push
adc
in
inc
and
sub
cltd
imul
in
out
push
sahf
in
roll
clc
or
xchg
cmp
pop
and
in
test
xchg
mov
inc
dec
aas
cmp
arpl
mov
sbb
sub
add
and
shl
and
pop
adc
jbe
xor
dec
lods
movl
xlat
adc
cmp
cmc
add
push
push
test
pop
or
xor
push
sbb
addr16
nop
ljmp
mov
add
xchg
push
or
push
nop
pop
sbb
and
pop
xor
stos
popa
or
fisubrl
cmp
and
inc
push
lea
mov
jp
jmp
and
cld
cmpb
mov
pop
movsb
cmp
call
int3
push
sbb
aam
js
cmpl
push
call
xor
loopne
mov
inc
jae
daa
subb
pop
test
pop
fsubrl
mov
pushl
push
nop
add
and
lock
or
adc
mov
sbb
jecxz
fdivrs
test
add
push
rclb
cwtl
add
lock
push
cld
mov
rorb
push
inc
adc
pushf
xor
rcl
sub
iret
mull
or
loop
inc
loop
xor
in
mov
ds
in
inc
das
cwtl
je
mov
sub
leave
mov
subl
push
leave
or
icebp
xchg
add
cltd
enter
insb
jo
lea
add
sbb
les
cltd
inc
push
or
rol
push
xchg
add
lea
push
add
pop
push
out
fnstenv
dec
xor
add
xor
ja
xor
cs
jbe
fnstsw
imul
sub
xor
xor
sbb
add
add
sbb
and
fldcw
push
or
jo
and
out
push
es
sbb
scas
nop
xchg
add
cwtl
and
jae
fildl
out
cmpsb
pop
cmpb
out
imul
jg
sbb
ret
notl
jbe
inc
daa
in
mov
push
imul
daa
pushl
popa
jo
fildll
ja
bound
pop
js
add
das
ds
inc
sub
and
popf
xor
out
cli
mov
add
call
inc
push
fdivr
in
adc
push
fdivr
and
out
int3
ret
push
movsb
or
jecxz
push
loope
filds
cmp
jg
sbb
mov
fsub
das
test
std
rcrl
sbb
enter
jl
push
int3
or
clc
fnsave
and
cwtl
mov
or
rcl
cli
mov
mov
adc
mov
xchg
push
les
xchg
and
mov
pop
test
lods
std
xchg
lods
xchg
inc
adc
mov
and
movsb
movsb
cmp
mov
pushf
pop
enter
js
mov
xchg
xchg
nop
pop
and
jb
cwtl
mov
test
mov
inc
enter
xchg
mov
ja
mov
jno
pop
in
stc
and
fmull
decb
fdivr
aad
dec
xor
in
subl
pusha
sub
adc
adc
jno
pop
bnd
jae
cmp
add
test
xor
imul
xor
mov
cmpb
xor
shlb
sub
dec
inc
pop
pop
inc
push
push
subl
adcb
dec
lds
sub
enter
push
and
out
shrb
ja
mov
unpcklps
xor
adc
pop
les
or
iret
and
lods
dec
fcoms
das
aas
leave
and
dec
xchg
jmp
or
stc
enter
add
arpl
cli
push
repz
or
dec
push
xor
dec
repz
mov
mov
mov
push
hlt
nop
addb
insb
jns
add
in
jecxz
in
ds
lahf
sbb
gs
add
addr16
pop
jg
ljmp
add
inc
add
pop
mov
ds
repz
jl
mov
push
add
ss
sbb
iret
negb
pop
dec
scas
mov
scas
push
les
cld
xor
inc
push
cld
rolb
int3
movsb
fidivrl
push
or
fcomp
shlb
cmp
pusha
xor
and
xor
jg
or
add
insb
add
fidivrs
ja
les
cmp
push
cld
mov
push
shl
repz
clc
loop
lock
test
lahf
neg
sub
sarb
add
pushaw
or
jl
inc
aam
jl
lret
je
add
jmp
insb
int3
push
or
jl
out
mov
push
fmull
insb
rorl
test
cltd
fcomps
push
iret
and
imulb
xchg
inc
push
hlt
in
les
push
push
jmp
in
in
push
add
push
fsubrp
push
mov
inc
fmull
xor
inc
lock
shrb
push
clc
pusha
fnstcw
push
push
setns
in
cwtl
int
mov
arpl
popf
nop
ds
add
stos
adc
movsl
sarl
mov
je
inc
mov
in
into
jmp
hlt
stc
les
cld
and
or
push
mov
arpl
mov
enter
adc
adc
inc
test
and
push
andb
add
adc
adc
insb
sub
pop
add
and
jmp
es
xor
lret
int3
enter
enter
fcomp
fxch
jne
add
loopne
jecxz
pop
aad
mov
pop
mov
je
fidivs
and
and
popa
je
xor
test
sbb
xor
add
or
add
divl
mov
push
cmpsb
addb
jo
and
imul
rorb
xchg
xor
aas
mov
das
add
data16
and
js
jns
pop
incb
sbb
sub
out
sahf
xor
inc
dec
push
pop
jns
out
fs
je
test
jns
out
xchg
pushf
movsb
lods
sahf
out
sahf
mov
int3
aam
jl
out
in
hlt
cld
add
repz
rorl
sbb
sub
adc
add
adc
xchg
xchg
add
fs
enter
push
in
enter
jge
xor
cmp
in
mov
cwtl
jg
sbbb
or
sbbb
jnp
mov
and
add
pop
and
jb
xor
push
leave
add
fst
xchg
pop
add
adc
pop
inc
mov
cmp
inc
inc
mov
push
lods
add
jg
adc
fimull
jg
out
lods
jp
call
jp
out
daa
testl
add
adc
jns
jl
pusha
inc
cmpsb
push
adcb
fsubr
clc
cmp
sarl
sbb
cmp
repz
repz
push
sarl
add
shl
fnstenv
insb
imul
pop
push
push
inc
xor
jmp
inc
pop
and
sbb
or
jbe
pop
outsb
jae
jb
mov
shlb
xor
lods
cmpsl
xor
ja
adc
pop
adc
fcompp
xchg
mov
lock
add
push
adc
lahf
es
and
dec
xlat
frstor
dec
pop
lcall
in
sub
insb
aas
incl
jl
add
push
mov
cmpsb
lret
enter
lods
sti
push
fsubl
or
cmpsl
push
add
or
xor
dec
cmp
repz
pusha
adc
adc
cmp
repz
mov
sahf
int
and
sbb
sbb
cmp
repz
push
adc
iret
repz
sbb
iret
repz
add
iret
repz
in
clc
push
jns
cmpsl
stc
or
out
jns
shrb
push
add
adc
insb
push
test
repz
lods
or
pop
jns
cmpsl
push
cmp
push
add
jo
jns
out
mov
jns
mov
mov
cmp
jmp
aaa
push
mov
repz
mov
mov
mov
cmp
xchg
fisubrs
jmp
std
sahf
and
pop
adc
cmp
lds
popf
cmp
or
inc
push
inc
or
int
loopne
ret
add
jle
frstor
cmp
jno
adcb
mov
out
out
or
or
faddp
mov
or
push
comiss
aam
add
sbb
loopne
sahf
testb
cld
add
loopne
out
pop
mov
lock
ds
repz
sbb
inc
add
jns
out
or
sbb
xor
jns
out
inc
dec
push
and
and
xchg
sub
jbe
mov
andb
xor
movhps
mov
xor
out
imul
pmulhuw
popf
incb
in
in
add
adc
lods
test
in
jmp
pop
adc
in
in
adc
pop
adc
scas
rorl
outsb
add
out
loop
dec
or
fidivs
cmp
repz
test
repz
mov
push
lock
or
adc
decl
fs
mov
hlt
or
or
add
iret
repz
xchg
test
int3
imul
cld
or
sbb
jns
out
cmp
pusha
jo
out
sahf
js
pushf
lods
mov
jns
cld
and
fcoms
adc
fldcw
mov
imul
cmp
inc
add
adc
std
pop
sbb
add
or
nop
pop
jo
repz
mov
std
xchg
cld
iret
repz
movsb
cli
mov
enter
repz
div
testb
sahf
out
cmc
sbb
sub
out
sahf
out
repnz
icebp
fs
out
sahf
lock
mov
mov
in
mov
jmp
dec
sahf
out
ljmp
mov
xchg
decl
inc
out
inc
insb
imul
nop
scas
and
or
mov
lcall
push
pop
outsb
ds
or
or
add
fcomp
sbb
cmpsl
lods
pop
popf
inc
mov
adc
nop
mov
jb
stos
fisubl
insb
jne
inc
addr16
or
outsl
inc
add
cs
shll
add
pop
inc
outsb
inc
xchg
pop
add
das
or
pop
add
xlat
push
fcoml
adc
add
repnz
mov
and
mov
jb
push
xchg
pop
mov
ficoms
jg
stc
repz
repz
repz
cld
std
incb
add
iret
repz
addb
repz
add
adc
inc
aaa
cs
sub
scas
add
push
pusha
jo
fstsw
xchg
pushl
add
add
push
pop
adc
sti
les
and
xor
adc
es
push
iret
repz
imul
into
out
mov
cld
add
out
jno
jmp
add
stc
push
mov
xor
adc
mov
test
xor
gs
xchg
dec
inc
lods
dec
adc
ds
cmova
roll
hlt
push
or
sbb
in
les
fs
fwait
setp
inc
sbb
jp
push
enter
dec
fldenv
inc
out
dec
push
cmp
repz
nop
mov
repz
lock
adc
cmp
sahf
out
sahf
push
les
out
aam
cld
adc
repz
push
fs
xchg
out
sahf
mov
sahf
ja
push
sahf
ss
nop
cwtl
mov
test
mov
sti
cmp
mov
scas
push
test
iret
repz
call
jns
out
jo
shl
repz
or
sahf
cmpsl
stc
cmp
add
sub
insb
jns
out
nop
test
loopne
repz
repz
cmpsl
stc
cmp
mov
adc
out
sahf
xor
xchg
test
cmp
out
fdivr
sbb
cmp
repz
repz
mov
iret
repz
mov
mov
mov
repz
repz
iret
repz
mov
mov
mov
repz
repz
iret
repz
mov
mov
mov
iret
repz
insb
test
stc
cmp
adc
sub
pop
jns
out
je
movsb
mov
out
add
cmpsb
push
xor
fs
out
jl
lods
fdiv
cmp
out
or
and
push
iret
repz
insb
test
sti
cmp
adc
incb
inc
pop
into
repz
je
movsb
mov
movsl
out
and
seto
push
test
jbe
arpl
and
int
jp
aam
in
push
push
sub
fildl
cltd
icebp
jne
sub
mov
scas
jbe
scas
movsl
jle
adc
inc
xchg
dec
or
loopne
ja
push
push
sub
out
mov
cmp
ds
jle
inc
scas
add
negl
fdivrl
jno
xchg
dec
jle,pt
daa
ds
shrl
aam
push
test
add
shll
adc
mov
jge,pn
addr16
out
js
jnp
cs
xlat
in
dec
push
push
dec
or
pop
xor
dec
push
aam
testb
fcompl
cmpsb
in
mov
jnp
lret
movsb
jbe
data16
daa
out
imul
push
lods
test
cmpsb
fstps
insb
sbb
fisubs
loopne
sti
mov
sub
es
or
repz
push
pushf
es
add
jle
fidivrs
testl
es
cld
push
je
push
cmpsb
adc
ficomps
sarl
sbb
rolb
jle
cs
mov
sbb
in
es
cmp
mov
enter
cld
ss
movsb
inc
dec
loop
into
fidivrs
call
outsb
jo
cmp
fs
cmp
push
dec
out
and
sbb
loopne
cs
outsb
mov
xlat
ja
call
mov
push
out
sbb
mov
add
dec
imul
sub
add
xchg
es
shll
xchg
inc
cmpsb
test
cmp
in
push
andb
in
sbb
mov
div
push
cmp
sbb
mov
adc
imul
loopne
or
mov
jmp
xlat
push
roll
ja
loopne
add
idivb
int3
jbe
js
cmp
les
sbb
fdivp
cmp
negl
aaa
pop
ficomps
fnstsw
xchg
push
pop
ss
fsubrp
xor
sub
jnp
imul
ds
add
jnp
pushf
sbb
adc
cmpsb
iret
enter
ss
mov
je
ret
fwait
add
cs
adc
fs
ja
sbb
xchg
sub
xchg
hlt
or
loopne
push
mov
dec
daa
outsb
xchg
xchg
push
clc
into
loopne
daa
pop
xor
outsb
les
es
js
sub
btrl
pop
push
ja
mov
dec
data16
ss
je
sarb
mov
pusha
inc
negl
push
fs
cmp
push
lock
pushf
in
pop
add
or
fistl
outsb
xchg
imulb
lock
xchg
call
xchg
xlat
add
dec
mov
dec
jmp
sub
je
push
lock
fists
fsubrs
outsb
inc
sbb
out
jae
add
sub
lock
lods
hlt
sahf
negl
jle
ss
jnp
sbb
adc
and
cmp
enter
jns
divb
inc
sub
xlat
push
aad
out
or
cwtl
add
test
dec
add
test
pop
push
movsb
out
repz
inc
add
mov
add
mov
xor
add
adc
adc
mov
pop
pop
add
out
test
dec
add
add
inc
add
dec
add
negb
add
sub
or
and
mov
pop
dec
es
fisubrs
cmpsb
push
addb
push
dec
aaa
mov
pop
dec
add
pop
inc
sbb
out
sti
fisubl
push
pop
dec
aaa
pop
out
into
mov
pop
dec
add
inc
add
repnz
testb
aaa
js
push
inc
mov
jmp
fcompl
jae
xchg
adc
or
pop
sarl
push
sahf
push
ja
push
push
lret
fidivs
and
pop
or
fstpt
loopne
dec
or
mov
out
loope
and
repz
loopne
jbe
rcrb
dec
arpl
fisttpll
push
inc
push
cs
mov
fidivrs
sti
or
inc
sbb
inc
js
jnp
jp
dec
dec
push
rsqrtps
lret
loope
pop
inc
aas
or
rdmsr
out
pusha
fucomip
adcl
pop
inc
aas
or
dec
div
js
xor
dec
pop
pop
aam
shlb
paddsw
loope
add
negb
or
pop
mov
int
mov
or
call
jae
jo
and
sbb
push
mov
mov
and
mov
and
xchg
pop
in
push
push
inc
es
add
add
pop
inc
sub
add
loopne
add
pusha
sbb
daa
xor
mov
sbb
dec
cli
pop
add
idivl
sbb
xlat
sahf
jnp
adc
sar
or
mov
or
insb
sbb
dec
inc
inc
rclb
xchg
inc
add
push
pusha
inc
inc
push
inc
fmul
pop
dec
add
xchg
dec
inc
mov
out
testl
test
add
shrb
shl
gs
dec
or
outsb
lret
test
cmp
or
dec
jb
dec
lock
fwait
dec
inc
push
gs
outsl
arpl
pop
add
mov
sub
push
daa
dec
and
push
mov
add
xchg
test
and
fisttpl
stc
cmp
inc
insl
cwtl
sub
subb
mov
in
adc
push
add
fsts
sub
adc
or
and
iret
jno
andb
or
xchg
adc
gs
sbb
nop
inc
mov
dec
jnp
adc
and
push
sub
clc
int3
sub
push
mov
add
inc
outsl
insl
ltr
xor
inc
xchg
add
or
ror
movsb
adc
or
loopne
pop
cli
mov
cmp
sbb
inc
adc
sbbl
add
sbb
dec
adc
aaa
and
and
rcrl
sbb
pushf
pushf
pushf
pushf
or
sub
inc
sahf
pushf
add
sar
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
daa
daa
and
sarl
xor
xchg
daa
daa
xor
ror
xchg
xchg
xchg
xchg
enter
dec
adc
jle
push
dec
cmp
inc
test
jle
jb
xor
inc
xor
inc
popf
incl
add
mov
xchg
and
rorb
dec
ret
and
into
inc
imul
adc
repnz
or
add
dec
loope
sub
sub
sub
add
inc
mov
loopne
or
push
mov
movsb
add
dec
add
cmp
popa
repnz
dec
push
jae
jmp
and
movsl
and
mov
pop
dec
adc
pop
in
pop
xchg
or
incl
mulb
cmp
call
dec
dec
pop
cmc
std
call
add
sar
call
in
adc
pop
and
lock
fsubr
dec
inc
iret
mov
xor
xchg
mov
dec
or
ja
and
inc
ds
aaa
call
xchg
add
adc
in
les
sub
mov
cwtl
movsl
jne
or
mov
into
adc
std
sub
jmp
out
mov
and
add
cmp
inc
push
cld
jmp
pop
xchg
jl
les
les
push
xchg
fsincos
ja
shrl
pop
add
inc
ds
jl
les
decl
and
sbb
incl
std
ljmp
in
repnz
inc
std
call
les
cld
jle
sub
jge
pushl
add
add
mov
movsb
lea
push
mov
push
repnz
std
incl
cli
lcall
shlb
test
jl
xchg
divl
cld
call
sbb
gs
jmp
push
mov
push
je
and
fwait
mov
js
dec
cmp
or
mov
push
mov
jl
dec
mov
pop
les
jns
adc
add
or
ret
jmp
pop
nop
sbb
adc
or
mov
rcr
pop
adcl
push
call
iret
pushf
sbb
and
add
add
sbb
stos
clc
mov
push
xchg
divl
add
jne
jg
push
push
add
std
testl
fisttpl
lea
inc
xorl
repnz
shr
mov
icebp
sbb
adc
adc
mov
js
inc
sbb
inc
cmp
cld
sub
ret
inc
and
fstl
jl
xchg
jmp
les
les
enter
les
incl
add
push
and
cmpsl
mov
sub
cmpsb
int3
arpl
and
outsb
xchg
and
into
and
push
xchg
rclb
cmp
out
inc
sub
incl
xor
int3
scas
aam
mov
xor
scas
and
faddl
test
shr
add
arpl
scas
stos
jl
ljmp
sbb
cli
inc
das
adc
stc
jb
dec
lahf
insb
les
les
rcrb
les
xchg
and
dec
cld
push
and
mov
pusha
dec
mov
pop
cmc
add
test
pushl
incl
xor
out
or
jo
and
lret
insb
les
clc
inc
cs
xorps
dec
popa
xlat
rcrl
es
push
mov
cmp
jb
xor
sbbb
insb
xchg
pusha
addb
xchg
jl
cmpl
lcall
decl
fdivrl
jo
inc
jo
inc
dec
jle
repnz
ret
inc
add
inc
ss
lcall
insb
xchg
cld
pusha
std
lcall
xchg
stc
aaa
and
mov
jg
add
push
add
notb
sbb
ss
xchg
add
and
mov
mov
lcall
inc
xchg
repz
mov
mov
mov
mov
decb
ja
add
or
lcall
ret
inc
bound
mov
xchg
cmp
sarl
setg
push
insb
dec
and
lea
mov
xor
inc
fwait
repz
and
and
es
or
xor
xchg
repnz
call
push
xchg
nop
xlat
xchg
repz
and
jmp
pop
mov
inc
dec
xor
cs
or
or
sub
test
jge
mov
jae
lea
mov
pushl
bswap
les
in
addl
lods
xchg
jo
aas
fucomip
jmp
in
push
xchg
les
lret
sbb
inc
add
cmp
or
mov
and
out
or
xchg
jns
sbb
jo
inc
jo
inc
and
adc
sub
xor
add
xor
call
pop
and
ss
adc
or
repnz
les
les
imulb
sbb
dec
daa
dec
adc
je
xor
aas
jno
les
loop
xor
pop
jp
add
test
data16
call
clc
jmp
stc
incl
arpl
imul
imull
hlt
xchg
rorl
int3
adc
mov
jp
adc
aad
clc
fisttps
pop
aaa
outsl
aaa
mov
outsl
adc
in
and
inc
iret
sti
jge
pop
and
daa
in
jne
sbb
ljmp
add
dec
push
push
push
iret
gs
das
or
jmp
or
mov
mov
inc
cld
xor
mov
sbb
inc
sub
add
inc
adc
fnstsw
or
pop
call
dec
mov
or
push
das
add
sub
inc
dec
push
pop
bswap
xchg
in
xor
in
add
movsb
mov
test
int
jb
push
jg
sysret
adc
and
mov
mov
jle
addl
sarb
inc
repnz
shlb
cld
xchg
nop
shrb
call
ror
mov
and
jno
push
add
cld
jle
pop
imul
mul
adc
jae
inc
xchg
push
inc
or
je
push
inc
adc
xor
mov
adc
test
inc
jmp
adc
pop
lret
inc
es
loope
xchg
sbb
dec
out
mov
pop
xchg
sbb
ja
in
or
cmp
in
ret
push
push
or
call
add
xor
sbb
xchg
xor
in
xchg
or
add
call
mov
mov
outsl
pusha
push
or
push
add
or
cmp
mov
test
adc
in
adc
xor
sbb
in
cmc
or
push
xchg
mov
daa
mov
repnz
in
test
jne
pop
xchg
mov
fcoms
or
and
cld
in
sti
movsb
fstps
loope
mov
mov
int
int
in
fisttpll
or
js
mov
jle
xchg
adc
fcmovu
out
jl
cmp
adc
repz
fisttps
or
repz
leave
inc
insb
mov
movsb
mov
sub
and
mov
in
repnz
add
add
or
add
int
ret
sub
mov
dec
sub
jbe
push
iret
adc
lods
jecxz
in
push
dec
out
aaa
je
adc
push
push
aam
movsl
lcall
insb
out
jns
xchg
add
add
ss
movb
shrb
jmp
cmp
fnstcw
iret
push
pop
xchg
fldcw
les
push
aas
rolb
outsb
or
jge
cmp
adc
iret
out
pop
push
or
fdivrs
into
iret
cli
or
mov
or
inc
dec
ret
xor
sbbl
xchg
sub
push
call
jo
jns
add
add
sub
pop
jecxz
out
mov
jmp
ja
adc
imul
or
xchg
add
imul
jnp
cld
add
loope
jne
add
add
rcll
imul
stc
and
in
push
in
stc
in
ret
lahf
dec
aam
jmp
xchg
xacquire
bound
test
jae
leave
or
pop
jl
pop
push
in
in
or
add
and
add
sbb
int3
add
sti
jl
dec
push
movl
call
std
adcl
outsl
and
fwait
mov
mov
js
dec
mov
mov
push
jns
jmp
fldt
call
adc
inc
arpl
in
jo
repz
fnstenv
leave
movzwl
insb
jecxz
or
mov
ficoms
or
in
int3
push
xor
aaa
cmp
dec
jo
push
jmp
and
scas
out
cs
dec
and
sbbl
call
pop
add
jle
aas
xchg
add
stc
jnp
pushl
jmp
jo
adc
jl
mov
ljmp
cli
test
call
cmp
pop
pop
adc
mov
imul
sbb
adc
mov
or
adc
or
mov
sahf
pop
pushf
xchg
pop
push
mov
or
jns
dec
shlb
push
movsb
jae
js
out
adc
sbb
call
mov
pop
pop
rclb
xchg
inc
mov
push
dec
outsb
sbb
xor
pusha
or
iret
ret
push
mov
mov
cli
loopne
mov
sub
mov
rclb
into
jnp
push
xor
lods
jmp
leave
nop
loopne
iret
sbb
sbb
dec
or
fs
mov
shlb
scas
in
jmp
dec
mov
arpl
pop
xchg
pop
shlb
pop
add
add
mov
cwtl
hlt
rcrb
sub
rorl
xchg
jle
mov
push
jle
adc
fnstenv
call
xor
cmpsl
push
scas
test
cmpb
incl
and
in
test
and
inc
pop
ret
jmp
push
xchg
call
xor
mov
pop
enter
fdivrp
into
add
add
pushl
incb
lcall
leave
psubw
lcall
repz
jl
repnz
inc
cmp
or
push
xor
testl
inc
or
std
cld
dec
jne
call
pop
jle
adc
repnz
jmp
dec
popa
icebp
std
ss
lods
xor
inc
or
push
jbe
push
and
xor
and
or
xchg
into
sbb
cvtps2pi
jmp
enter
decl
and
or
inc
ret
inc
jle
cld
sub
icebp
decl
or
mov
pop
repnz
je
lock
jp
mov
lcall
or
dec
ds
dec
cld
dec
mov
or
or
dec
add
mov
sbb
push
lods
call
clc
sbbb
or
ret
je
or
dec
test
sbb
loop
dec
push
call
stc
adc
jnp
add
or
push
mov
call
in
and
mov
add
hlt
shll
popa
ljmp
inc
lea
je
fildll
popa
jl
jge
andb
xor
mov
inc
das
push
push
pop
call
js
adc
pop
fcomi
imul
sub
sub
aas
neg
call
mov
sahf
aas
push
mov
push
inc
jmp
stos
or
push
jae,pt
sbb
pop
dec
iret
repz
sub
adc
and
dec
sub
mov
jg
rcll
das
add
call
dec
push
push
jnp
mov
dec
cmp
push
movl
out
loope
call
push
add
inc
shlb
cmp
out
popl
xchg
sbb
adc
add
les
push
loope
imul
fidivrs
ds
jg
cmp
jae
xor
or
ret
pop
cmp
hlt
or
and
outsl
push
rcll
movsb
adc
cmp
jle
fcomp
je
testb
inc
mov
int
bound
out
roll
and
pop
rolb
shll
mulb
sbb
pop
sbb
dec
arpl
push
jo
stos
inc
push
mov
sbb
xor
lahf
xor
xchg
loop
or
or
fmuls
sub
mov
test
fists
scas
add
inc
fsts
repz
lcall
xchg
ss
pop
pop
sbb
or
stos
ljmp
insb
xor
and
loopne
cld
dec
aad
inc
push
jne
push
sbb
mov
xor
cmp
push
cld
div
lcall
mov
testb
pop
push
mov
ja
inc
xor
sub
fmuls
call
xchg
and
pop
or
mov
mov
mov
faddl
sarb
pop
jmp
mov
push
mov
jmp
mov
loope
push
movsl
adc
and
and
pusha
and
and
sub
mov
push
popf
adc
mov
inc
sahf
nop
add
in
push
rorb
xor
or
adc
and
call
outsl
inc
jp
call
push
aaa
pop
add
leave
ss
push
and
pop
pop
loopne
add
iret
jmp
add
out
addb
jne
mov
test
inc
dec
jb
dec
add
add
sarb
daa
sub
daa
cli
cmp
cmp
cmp
rcl
jmp
push
inc
push
dec
stc
add
inc
inc
inc
sti
sbbl
mov
xor
aas
xchg
xchg
out
ljmp
call
insb
repnz
orl
sbb
ja
push
mov
adc
inc
pop
jmp
cmp
add
aas
xor
and
sbb
mov
adc
cmp
pop
insb
push
lods
rclb
and
bndldx
aad
or
data16
clc
push
insl
xadd
sbb
push
lods
mov
adc
or
jge
mov
hlt
adc
sbb
cmp
cmp
and
dec
mov
xchg
jno
mov
sbb
adc
jl
jbe
pop
dec
jne
mov
or
cli
pusha
dec
adc
jae
dec
jmp
std
iret
push
ret
push
pop
testl
fs
dec
and
repz
jecxz
cwtl
std
out
movsl
push
ljmp
sbb
dec
push
adc
pop
fcomps
push
cmp
loopne
mov
and
int3
xor
or
push
adc
rcll
rorl
jl
mov
cwtl
sbb
in
jle
push
pusha
jbe
cmp
test
inc
pop
std
sbb
repnz
out
mov
inc
xor
pushf
mov
inc
ret
jbe
jne
out
jne
add
pop
or
jg
cmp
cld
jb
adc
add
and
cmp
xor
sub
iret
push
sbb
cld
mov
aas
fmull
adc
xchg
out
roll
xor
push
mov
fcomps
cmp
sbb
repnz
pop
aad
imull
mov
icebp
sub
int3
and
stc
sbb
fwait
cmpsb
jb
add
or
call
add
call
sub
sbbl
icebp
pop
jo
sbb
sub
addr16
mov
mov
sub
pop
mov
jne
xchg
stos
inc
cmp
jg
sub
push
push
mov
scas
mov
pushf
xor
cmp
and
ficoml
pop
jle
rcr
pop
pop
xchg
je
mov
call
out
or
int
or
pop
pop
adc
ret
jp
cwtl
pop
repnz
adc
or
pusha
sbb
or
jmp
add
jle
mov
int3
add
shrl
cmp
mov
jmp
push
inc
mov
mov
or
mov
ret
andb
add
daa
pop
loop
adc
fdivrp
xchg
leave
jmp
pop
cmove
out
push
lea
xor
out
pop
cs
mov
cmp
dec
xchg
lock
cli
or
or
orb
pop
sub
inc
and
adc
pop
pop
hlt
xlat
insb
dec
clc
xor
jl
je
pop
jg
shrb
enter
shrb
inc
in
and
inc
ret
test
inc
xchg
loopne
and
stc
ret
fldt
clc
fldz
imul
inc
add
ds
add
adc
dec
inc
adc
jge
in
and
aam
xor
aaa
inc
scas
call
pop
and
sub
add
std
xor
or
xor
fmull
out
in
add
inc
mov
xor
dec
mov
sub
sub
aam
clc
xor
daa
sub
sbb
push
dec
cmp
jns
dec
or
add
pushf
pushf
mov
sar
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
inc
sahf
cmp
cmp
xor
dec
dec
sub
and
dec
dec
dec
dec
sbb
adc
dec
jle
pop
push
dec
inc
add
or
dec
ss
pop
aas
mov
jb
sub
adc
inc
add
push
inc
add
xchg
xor
sub
inc
xchg
or
movsb
cmp
adc
rorl
sub
pop
inc
dec
xchg
sub
jg
pop
inc
test
enter
fdivl
jg
nop
inc
push
sbb
inc
or
ret
pusha
mov
movsb
nop
inc
cmp
bound
inc
adc
pop
and
jg
pusha
inc
fistpll
inc
or
and
and
imul
inc
or
mov
and
xchg
bound
dec
orl
insb
pop
add
adc
adc
jg
orl
cmp
add
inc
das
jg
lods
nop
and
fsub
cmpsb
incl
jns
pop
and
outsb
xor
cwtl
mov
mov
pushf
lret
fwait
addb
ljmp
sbb
in
call
andb
or
call
ja
ret
dec
testb
mov
fs
int
jmp
and
and
add
mov
inc
push
call
rorb
adc
enter
mov
outsb
mov
mov
mov
adc
push
ret
adc
in
xor
push
std
and
add
or
inc
cmp
jbe
orl
maskmovq
pop
mov
sbb
pusha
ss
dec
inc
push
cmp
xor
add
in
popa
or
popa
mov
cmp
adc
mov
ljmp
int3
add
hlt
adc
sub
and
in
scas
push
push
in
and
mov
fcoms
xchg
pusha
into
popa
cld
xor
pop
add
mov
dec
add
dec
push
and
adc
repnz
add
cs
call
or
test
lods
call
ret
clc
enter
addb
mov
cmpsb
sub
dec
mov
or
or
fisubs
add
call
nop
lret
lret
hlt
hlt
call
out
jmp
jmp
nop
mov
xor
cmp
ja
imul
sub
lcall
mov
ja
xchg
mov
pop
push
cmc
lea
addr16
and
lea
lahf
xchg
push
lds
dec
into
cmpl
dec
das
pop
test
cmp
je
lret
call
sub
call
inc
je
and
or
push
pop
jne
pop
inc
inc
js
fildl
add
popa
xchg
call
xor
div
dec
add
adc
shll
sub
scas
in
jb
cmp
add
or
xor
xor
jp
js
add
dec
shlb
xchg
lcall
adc
movsb
and
dec
lcall
in
add
or
mov
pop
mov
dec
xchg
xchg
push
push
cwtl
les
mov
call
mov
das
or
sbb
xchg
lret
das
sar
jmp
stc
and
add
add
adcl
sti
loope
xor
test
out
jbe
outsl
flds
pop
sub
cmpsl
test
lea
je
mov
sbb
test
cmpsl
int
lcall
and
stc
add
ljmp
bnd
nop
xchg
incl
or
and
js
insb
jmp
mov
shl
mov
mov
flds
imul
jle
in
jge
rcr
adc
jmp
in
or
call
and
loope
and
xor
push
push
movsb
jb
cld
cmpsl
fists
jg
add
push
out
push
or
or
and
orl
sub
jmp
mov
popa
pop
arpl
sbb
clc
push
jge
mov
sahf
hlt
adc
jo
nop
nop
pushf
mov
data16
inc
push
lahf
repz
mov
test
cmpsb
mov
xorb
jge
pop
jns
push
lahf
std
and
cs
mov
xchg
xchg
sbb
xor
and
xor
lahf
mov
cltd
xor
lret
lea
pushf
leave
dec
ja
jmp
sub
and
mov
movsb
inc
sub
xchg
xchg
and
cld
test
sub
and
push
inc
sub
lods
jo
and
dec
mov
adc
popa
notl
jmp
pop
test
or
nop
inc
inc
push
and
mov
stc
clc
mov
outsb
cmpsl
cmp
sub
clc
mov
mov
iret
test
cltd
xor
add
call
jns
stos
sub
fs
add
inc
push
xlat
and
call
and
jno
incl
pop
xchg
cmpb
cmpsl
pop
std
pop
call
test
ja
dec
mov
push
push
and
movsb
xchg
xchg
pop
push
xchg
rolb
out
jmp
sbb
inc
push
cli
ret
mov
mov
fwait
inc
or
and
mov
mov
cmc
incl
fiadds
test
push
push
lcall
lea
divl
jb
sar
sbb
add
mov
and
mov
push
cs
mov
inc
ficomps
sub
pushf
dec
mov
mov
mov
addb
cmpb
adc
ret
loopne
fwait
je
inc
and
inc
jb
lock
iret
xor
pusha
mov
lret
jle
xchg
xor
mov
mov
fcom
test
xchg
loop
mov
pop
mov
mov
repz
jbe
pushf
inc
lds
xlat
add
fisubrs
and
sbb
cmpsl
adc
incl
push
push
or
xor
pop
cmp
pop
adc
fcom
decl
pop
or
adcb
out
out
stos
adc
call
jbe
shrb
out
xchg
sbb
shl
pop
jg
in
iret
aam
push
aaa
xchg
fmuls
imul
jecxz
rorl
pop
jle
adcl
decl
roll
pop
mov
jl
stc
rorb
lret
adc
aam
addl
jmp
callw
ja
cld
ficoms
sahf
or
call
sub
mov
add
xorb
xor
mov
rcll
cmp
out
jmp
call
adc
mov
fcmove
xchg
jecxz
mov
call
popf
push
dec
push
loope
fisubrl
rolb
dec
cmp
aaa
enter
or
sbb
jmp
fidivrl
mov
sahf
mov
rcl
inc
jmp
inc
fsubrp
xchg
inc
or
rcrb
xchg
adc
andb
dec
pop
add
inc
js
pop
jae
pop
adc
mov
push
testl
pop
mov
inc
dec
and
jmp
xchg
mov
and
mov
sub
sbb
outsb
in
lock
and
dec
cmpsb
sbb
mov
jl
sbb
mov
lcall
mov
push
fsub
pushf
pop
sbb
je
inc
mov
repnz
ss
icebp
lret
jp
in
aad
rcrb
popa
shr
xor
adc
cmp
cmp
es
out
mov
inc
fistl
mov
pop
adc
or
push
mov
cmc
or
or
dec
int
test
sub
add
jl
aas
dec
xchg
jo
push
loope
add
sbb
mov
aaa
gs
outsl
and
sbb
cld
add
add
inc
lock
adc
adc
mov
and
add
jge
adc
les
sbb
popf
cmc
jmp
dec
pop
push
ror
ss
es
lods
or
out
jmp
xor
stc
cmpsl
pop
sbb
leave
jg
inc
mov
or
mov
stos
loop
unpckhps
test
xor
test
sub
mov
ret
ret
orl
daa
stc
imul
add
xor
cmp
lret
dec
stos
or
xorl
les
xor
divl
or
test
jle
fdivl
pop
in
and
fcoml
in
sub
mov
push
xchg
rorl
stos
dec
je
dec
jne
mov
data16
jmp
mov
std
xchg
pop
mov
movzwl
ljmp
into
push
inc
imul
unpcklps
fnstenv
test
pushl
mov
add
lea
inc
fcoml
mov
xor
xor
movsl
enter
inc
loopne
adc
xchg
loope
xchg
or
adc
push
pop
mov
jmp
inc
or
and
pop
adc
or
psubsb
lahf
sub
in
mov
and
push
lcall
rorb
mov
mov
dec
ror
mov
and
sub
jne
adc
xchg
insl
push
jle
jno
dec
jl
loop
scas
gs
cmp
and
ret
push
and
shl
ficoml
pop
dec
and
cmc
clc
mov
or
sbb
and
and
adc
out
loop
mov
push
repz
push
add
inc
sbb
ret
jle
add
jge
cmp
je
xor
jmp
cld
cmpsb
mov
or
divb
add
sahf
and
negl
fisubs
cmp
je
mov
inc
je
cmp
je
xchg
je
mov
jmp
inc
jmp
imul
mov
jmp
cmpl
roll
inc
mov
add
mov
scas
adc
sti
insl
rcr
mov
sti
jmp
push
pop
mov
pop
in
imul
stos
ror
loopne
ret
jge
je
aad
pop
xchg
pop
es
adc
outsb
sti
sbb
cmp
add
add
jb
aaa
and
adc
sahf
shrb
pop
ret
imul
fwait
daa
and
out
push
sbb
push
jp,pn
push
inc
dec
inc
aam
dec
int
mov
sub
hlt
mov
cmp
cld
or
fiaddl
clc
sub
or
pusha
mov
stc
cltd
inc
loopne
pop
fcoms
in
sbb
sub
rolb
push
inc
ret
cmpsl
sbb
xchg
inc
clc
and
dec
fdivs
jmp
jmp
faddl
inc
push
or
filds
and
jle
cli
jge
xor
xlat
jmp
stos
js
orl
stos
outsb
test
lss
sub
push
jge
nop
inc
push
jecxz
movsl
sbb
stc
pop
ret
hlt
call
pop
or
xchg
lret
and
cmpsb
mov
adc
pop
rcll
push
and
xor
mov
ret
add
jl
push
call
fldt
push
repnz
cs
xor
adc
mov
and
adc
rcll
xchg
cld
inc
clc
mov
cmp
or
je
or
mov
fildll
mov
xchg
fidivl
jae
inc
out
or
sti
inc
push
mov
mov
add
stos
aas
sahf
jl
inc
inc
mov
mov
dec
repnz
jl
shll
xor
push
test
flds
lock
push
mov
cli
and
add
repz
nop
add
add
xor
sbbb
test
pop
add
call
or
mov
mov
add
gs
xor
in
xchg
ret
dec
repnz
sahf
sbb
pop
inc
cld
fiaddl
push
repnz
rorb
sti
ljmp
mov
lcall
and
out
xchg
fs
pushf
test
add
dec
push
or
in
push
xchg
ja
push
jmp
dec
pop
sbb
adcb
outsb
and
push
pop
and
mov
ret
pop
add
add
pusha
jg
pop
insb
or
cmp
xchg
test
int
jp
dec
or
mov
xchg
push
cld
out
movsl
sbb
jo
pushf
and
add
movsl
push
sbb
and
cmp
xchg
das
lods
inc
sub
xchg
add
ljmp
sar
jl
ret
insl
iret
sub
xlat
sbb
shr
mov
enter
ficomps
repz
jns
data16
call
test
or
mov
mov
xchg
add
mov
sub
incl
add
pop
inc
mov
mov
iret
push
sbb
sub
sbb
std
add
inc
rclb
sbb
adc
and
incb
fdivrs
insb
cmp
ds
jmp
ret
sbb
incb
sarb
push
loope
lcall
cmp
int
mov
cmpb
adc
jg
adc
mov
sub
pop
sub
call
mov
mov
pushf
sbb
inc
lock
loopne
pop
add
jmp
xor
pop
sbb
inc
sti
jmp
push
inc
jmp
xchg
stos
pop
dec
cmpl
jge
fmull
fistpll
nop
lds
imul
push
push
ret
jle
gs
add
or
push
mov
scas
adc
ds
sub
mov
dec
test
or
sbb
sub
leave
sbb
xlat
data16
in
lds
pusha
or
cvtpi2ps
call
or
lret
jg
add
xchg
fbld
lea
adc
js
push
adc
mov
mov
fmulp
xchg
and
adc
jle
jp
pushl
and
leave
jge
test
fsubrs
jmp
dec
jmp
mov
pusha
aaa
jp
fsts
and
daa
jno
aaa
ret
ja
adc
in
lock
inc
fld1
in
imul
and
je
mov
adc
dec
out
mov
and
test
movnti
xstore-rng
cmpsl
inc
push
add
ds
push
push
lret
jnp
aas
divb
add
mov
movsl
or
stos
add
loop
push
cmp
push
adc
adc
mov
push
inc
pop
incl
inc
mov
cmpl
repnz
and
xchg
ret
or
jne
jne
sub
xchg
inc
cwtl
icebp
mov
sbb
call
leave
push
inc
inc
imul
xor
or
scas
mov
outsl
push
xchg
sbb
arpl
sbb
or
mov
mov
imull
push
repnz
rcr
jae
jb
shlb
dec
inc
nop
xorl
pop
imul
std
je
cmp
dec
or
lock
inc
ss
imul
add
or
jge
mov
add
and
sub
out
test
mov
mov
lahf
mov
sub
fnstenv
fdiv
or
lret
lds
pushf
pop
test
dec
jmp
mov
inc
xchg
daa
inc
jo
cmp
pusha
mov
sub
add
sub
pusha
jne
jne
jle
rol
sar
fcmovbe
out
and
and
imul
test
and
insb
ds
jmp
push
push
repz
ss
repnz
lret
repnz
ficomps
add
add
dec
fmull
cld
int
mov
mov
push
incl
call
add
out
xor
and
aas
scas
insb
leave
les
rcrl
add
jnp
or
pop
add
sbb
nop
cs
push
gs
dec
add
pop
call
jo
call
mov
addb
int
outsb
inc
push
xor
add
and
or
inc
fcmovbe
js
or
test
pop
je
invd
lds
or
inc
dec
sbb
clc
loopne,pn
mov
andl
pop
out
xlat
inc
pusha
adc
lods
in
ds
call
rcrl
call
ds
push
fistps
sbb
sub
test
in
test
jbe
or
lahf
js
leave
pop
xchg
push
mov
arpl
jp
mov
inc
mov
sahf
mov
pop
mov
movb
sub
lcall
sub
sub
aaa
xchg
daa
pop
add
roll
scas
xchg
mov
add
and
sbb
lret
aam
cwtl
sub
outsl
popf
push
test
mov
inc
ds
outsl
lock
adc
add
clc
les
jne
div
outsb
fstpt
repz
outsl
inc
fs
cmp
divl
lock
loop
jo
jle
inc
push
or
stos
aam
lods
or
adc
outsb
mov
sub
inc
cmp
add
fs
ficoms
scas
js
or
dec
add
cs
in
out
sub
es
lcall
xchg
xchg
lret
cmpsl
sbb
outsb
mov
movl
ret
nop
lock
xchg
mov
adc
mov
xchg
fldt
xor
sub
shll
call
jl
mov
or
iret
pop
fdivl
mov
cs
cmpsb
nop
add
addl
ja
popa
dec
and
pop
mov
xor
add
mov
cmovnp
inc
scas
xchg
test
and
lahf
or
or
pop
sbb
sub
jbe,pn
and
fmull
lret
mov
cmp
ja
movsb
fsubs
and
in
fdivs
popa
mov
cmp
jl,pn
or
push
and
push
ret
lock
pop
rcll
push
add
das
add
pop
dec
pop
jl
and
cmp
dec
cld
das
stc
xchg
pushf
add
sar
cli
and
cmp
jbe
cmp
insl
rcrb
imul
sbb
inc
jb
iret
repz
sub
xor
cmp
dec
adc
cmp
mov
je
fsubr
mov
addps
in
xchg
mov
xchg
sahf
out
mov
push
sar
jne
les
out
jnp
push
add
cmp
or
scas
ret
notl
in
sub
mov
inc
cmp
lcall
aaa
lds
push
jbe
rorb
js
jmp
cmp
dec
sub
inc
mov
dec
fs
mov
stc
xchg
movups
les
and
push
dec
and
data16
adc
in
out
icebp
xchg
cwtl
or
addb
or
xor
mov
push
aam
add
adc
push
xor
push
scas
jno
add
cmp
xchg
shlb
lods
push
or
nop
adc
adc
adc
add
rcll
inc
outsb
lret
and
mov
cmp
mov
xor
negl
or
inc
add
pop
iret
jnp
stc
mov
mov
xchg
mov
iret
xor
dec
pop
popf
rorl
inc
out
sbb
sub
mov
pop
imul
enter
testb
addb
jl
clc
loopne
add
outsb
addl
clc
pop
push
push
aas
lret
insl
call
xchg
lahf
lret
outsl
popa
pop
dec
cmp
data16
dec
pop
dec
jo
iret
enter
or
jle
fsubr
into
cmp
add
sub
add
insb
mov
in
das
in
inc
clc
dec
jle
std
mov
dec
xor
dec
push
jo
fildll
or
push
push
sarb
repnz
xor
sbb
inc
cwtl
mov
cmp
sub
add
fimuls
jl
cmp
roll
xor
les
imul
jnp
xchg
js
xor
adc
arpl
loopne
lahf
scas
xlat
xchg
scas
je
shrl
sbb
dec
jp
push
or
add
push
or
imul
and
idivb
sub
add
shr
xor
xchg
sub
fucomi
add
dec
jne
mov
inc
add
jp
push
movsl
dec
dec
inc
push
loope
push
je
ljmp
inc
out
xchg
or
movsl
fs
or
or
je
xchg
mov
fld
arpl
gs
dec
inc
test
adc
popa
add
into
cli
call
inc
loopne
or
dec
aam
pop
clc
fmuls
adc
add
cmp
test
cli
mov
cmp
mov
jne
mov
push
add
nop
rolb
lods
or
rclb
bound
mov
push
mov
push
add
jecxz
or
adc
add
xlat
jne
sub
test
fidivrl
mov
je
add
shr
sub
loopne
loopne
adc
add
add
es
lock
jne
jle
sub
incl
jno
inc
into
scas
push
inc
and
std
jno
aam
leave
dec
out
inc
fiadds
mov
and
in
insl
add
test
push
jne
es
mov
leave
dec
and
inc
pushf
mov
jo
add
jge
inc
clc
dec
iret
or
push
call
add
and
loopne
loope
jnp
add
cs
and
adc
mov
jnp
add
sub
cmpsl
xor
pusha
inc
or
mov
sbb
aad
outsl
and
jne
sarl
rcl
lret
lock
into
mov
sti
sub
add
sbb
pop
push
rcrb
or
push
or
mov
fs
scas
adcl
in
add
or
jge
sub
pmaxsw
fmul
mov
xlat
rolb
imul
or
imul
cmpsl
adc
or
inc
mov
cmp
adc
sbb
pop
je
clc
inc
push
and
dec
int3
fs
mov
push
adc
pop
iret
lock
ret
int
xor
dec
jg
cmpl
or
pusha
outsl
xchg
xor
fcomp
jmp
jnp
sbb
fdivs
sahf
aad
sbb
push
sbb
jg
push
fisubrs
pop
sbb
jmp
sti
add
jl
cwtl
inc
arpl
push
cmpsl
popa
test
ud2
std
add
and
flds
je
lods
fildl
mov
outsl
inc
xchg
add
jl
push
or
push
adc
pop
jge
jle
rolb
dec
jg
add
inc
clc
dec
pop
dec
inc
xor
das
lcall
jl
xor
push
sbb
push
and
insb
jp
xchg
cmp
add
andb
and
and
je
sub
fs
or
dec
sub
mov
and
pop
nop
adc
push
xchg
ja
adc
outsb
mov
jge,pt
dec
and
mov
mov
push
xor
add
ljmp
xchg
pop
aam
jp
add
add
add
jmp
push
call
ret
loope
add
mov
push
sbb
push
or
test
xor
cmp
adc
xchg
mov
add
push
mov
pop
dec
add
fldcw
mov
dec
shlb
adcb
outsb
add
xor
fldcw
cmp
dec
mov
cmp
push
rcrb
movsb
aaa
adc
add
mov
jp
add
jae
je
or
and
xor
push
pop
pop
sbb
push
enter
push
dec
pusha
add
or
into
orb
in
sbb
mov
push
movsl
push
push
ja
loop
cs
addr16
jbe
jg
pusha
mov
jb
je
cmpsb
jle
jmp
mov
pop
aam
jo
mov
inc
mov
inc
xchg
dec
movsl
jb
inc
cmp
mov
in
jo
jecxz
dec
xchg
pop
dec
mov
fdivrl
mov
dec
sbb
dec
pushw
sbb
push
cmp
add
add
call
mov
add
mov
jo
mov
inc
sbb
jbe
add
add
dec
sarb
pop
or
xor
imul
pop
dec
jmp
div
fwait
stos
and
shl
mov
sbb
std
or
inc
cmp
dec
or
in
das
sbb
push
rclb
push
jo
je
shr
add
cmp
ja
ret
add
or
mov
dec
jns
cltd
hlt
ds
cmpsb
cmp
hlt
repnz
inc
rorb
fists
sub
movsb
movzwl
push
or
ljmp
bnd
cld
clc
fisttps
xor
sub
sar
add
xorl
inc
cmp
insl
pop
shl
or
lret
or
fnstcw
je
or
sar
sub
sub
clts
sbb
mov
lret
jbe
imul
dec
inc
or
mov
mov
roll
add
dec
add
and
jne
nop
add
loopne
adc
ret
jo
mov
push
iret
mov
jge
test
and
or
pop
into
jle
clc
inc
inc
jl
ja
fistpl
bound
pop
mov
call
mov
push
jl
sub
push
outsl
fmul
cmc
inc
jg
popa
movzbl
sar
roll
mov
shlb
loopne
rolb
add
xchg
in
fists
mov
and
jge
shll
or
cmpsb
and
inc
xor
aam
mov
cmpsb
imul
shlb
add
or
dec
pop
inc
stos
inc
inc
jle
adc
xchg
fnstenv
dec
pop
add
and
imul
inc
pop
sub
adc
jo
xlat
adcl
sub
xchg
mov
loope
sbb
fnsave
or
dec
rcl
jae
sub
enter
add
negl
sub
pop
aas
or
mov
cmp
inc
cwtl
xor
mov
shl
add
sti
add
in
adc
inc
sub
pop
pop
mov
loopne
stos
incl
or
jl
mov
rcll
arpl
in
sbb
and
daa
jno
or
loop
ficompl
out
mov
add
pop
pop
fmull
or
dec
push
inc
cmpb
sbb
jnp
and
stos
aam
cmpsb
popf
testb
sub
movsl
mov
sbb
mov
imul
sub
and
and
subl
push
test
sbb
addb
push
js
decl
or
fdivr
mov
mov
xorl
dec
mov
push
decb
test
fnsave
dec
fcoml
xor
insb
mov
popa
mov
mov
adc
mov
push
mov
pop
push
cwtl
data16
nop
cltd
mov
add
mov
sub
out
push
lods
gs
mov
call
adc
xor
adc
xchg
test
push
je
adc
call
xor
lcall
jo
push
insb
push
xchg
add
jmp
push
nop
jo
iret
adc
push
cwtl
jmp
push
cmpsb
test
mov
add
mov
sbb
push
inc
rcrb
cmp
cwtl
mov
and
incl
call
sub
dec
int3
ror
push
and
mov
outsb
clc
mov
add
jmp
mov
dec
jmp
movsb
or
ficoms
in
in
push
cmp
sbb
sub
enter
mov
or
xor
ds
inc
lock
lea
out
cli
or
int
xlat
ds
mov
inc
loopne
push
div
dec
dec
mov
sub
cli
rolb
stos
mov
add
pop
jl
subl
or
movsb
movsb
or
lods
add
mov
add
sub
call
mov
push
cmc
jae
ljmp
stc
xchg
jae
incl
xor
icebp
adc
cmp
jge
fucomi
rolb
xor
sub
das
push
in
xchg
fwait
cmpsb
int3
push
adc
repz
stc
adcb
cmp
jnp
jo
add
loopne
mov
subl
add
mov
js
pop
sub
jmp
aam
mov
fldcw
xor
add
push
push
test
mov
push
and
jmp
movsl
roll
cs
cwtl
push
mov
inc
push
inc
sbb
enter
stos
add
dec
rorl
and
add
lock
ljmp
rep
pusha
insl
adc
mov
lea
fmuls
pop
or
lea
cltd
fs
shll
lea
loop
and
xor
xchg
pusha
add
push
mov
dec
punpcklbw
clc
pop
mov
ja
fdivp
mov
pushf
mov
into
add
out
push
fstp
adcb
xorb
xchg
mov
jp
je
add
call
inc
adc
sbb
into
out
sub
sahf
mov
cmp
cmp
xor
arpl
aam
dec
fistpll
or
adc
cmp
jbe
cmc
ret
adc
sub
inc
mov
loop
jbe
int3
add
sub
mov
fisttpll
stos
pop
test
adc
stc
push
push
insl
add
cli
lahf
jb
and
pop
loopne
inc
dec
test
mov
lahf
out
dec
jns
jns
mov
in
mov
and
inc
int
jl
xor
mov
sbb
cmp
inc
imul
pop
in
cmpsb
int3
dec
push
mov
mov
and
pop
adc
sbbb
add
data16
jo
add
inc
lds
adc
xor
scas
lods
ret
sar
mov
mov
add
mov
push
fs
mov
adc
fidivs
cld
sahf
inc
jg
popf
or
dec
sbb
inc
dec
fldl
lock
or
or
lret
push
test
xchg
xchg
cmp
daa
lock
rolb
sar
xlat
adc
test
sbb
test
push
jle
mov
mov
pop
cmpsl
movb
mov
or
lock
xor
mov
pop
or
cmp
in
call
or
xlat
xor
sub
in
sbb
rorb
call
mov
jo
adc
nop
add
sub
pushf
pushf
pushf
pushf
or
adc
pushf
pushf
pushf
sbb
and
cwtl
inc
call
inc
int3
cmc
mov
shll
cmp
mov
dec
shr
test
popa
push
rolb
fisubs
mov
jno
dec
cwtl
test
sbb
out
cmp
out
adc
inc
mov
call
and
lea
mov
mov
in
push
aas
jo
xchg
cmp
mov
xchg
mov
jo
subb
repnz
or
inc
jmp
mov
jb
lock
stc
jnp
add
add
imul
lcall
shlb
pop
adc
cmpsl
imul
scas
imul
notl
cmc
adc
push
xorl
mov
mov
mov
add
movb
lret
js
das
or
mov
mov
jg
adc
dec
mov
icebp
enter
rorb
mov
rol
mov
mov
mov
add
js
call
xchg
enter
or
sbb
stos
xor
mov
aam
insl
inc
sbb
fwait
dec
arpl
iret
jo
cmp
inc
outsb
leave
push
mov
add
xor
sub
add
test
scas
add
add
inc
mov
dec
sub
push
inc
mov
insl
push
fsubl
test
loopne,pt
add
out
pop
dec
insb
adc
call
dec
ficomps
mov
xchg
iret
imul
add
mov
cmpb
cmp
test
int3
ret
pop
dec
push
fimull
ret
std
outsl
dec
sub
push
call
add
push
add
sub
iret
sbb
je
test
xor
fildl
inc
sbb
dec
cmp
push
aam
movsl
fmul
ds
sarb
xor
int3
rclb
push
inc
mov
mov
adc
es
xchg
fisttpll
je
jmp
in
ss
das
les
mov
loope
pop
cmp
and
push
sbb
je
jmp
sbb
dec
xorl
nop
xor
imul
setns
sbb
sub
out
xchg
adc
stos
dec
mov
push
sti
cmp
call
adc
loop
push
cli
adc
ss
inc
and
pop
inc
and
cmpsb
scas
sub
pop
push
testb
inc
inc
arpl
push
cmp
pop
out
mov
push
pop
insb
add
push
rclb
mov
inc
loop
xor
out
decb
pop
sub
shll
dec
test
shr
xchg
inc
lock
nop
xchg
mov
or
scas
add
pusha
int3
mov
fists
aad
mov
ljmp
add
or
xor
ficoml
divl
fs
cmp
and
bound
lock
call
ret
gs
and
sub
xor
fmul
loop
and
jl
inc
and
ljmp
push
std
xchg
push
cmp
add
xchg
pusha
add
xchg
lahf
inc
and
pop
push
or
test
das
mov
cmpsl
xchg
cmp
mov
into
lret
xchg
insl
dec
mov
cmc
mov
ret
mov
mov
pop
xor
xchg
out
outsb
call
xchg
ret
xchg
lahf
mov
hlt
insb
or
std
lahf
ss
adc
loopne
fbstp
cmp
jle
mov
call
mov
iret
inc
in
hlt
mov
in
sbb
mov
lahf
psrld
loopne
add
stc
and
cmpsb
sahf
fiaddl
fidivrs
dec
shrb
movsb
and
cld
push
or
pop
push
push
call
mov
sbb
sub
mov
je
aad
xor
cltd
and
out
jno
push
pop
lret
xor
xor
mov
mov
outsb
push
cmpsb
in
adc
dec
bound
inc
dec
xor
rol
pusha
jle
adc
movsl
iret
ja
adc
data16
ds
or
int3
ljmp
pushf
cmpsb
or
or
call
call
imull
mov
ja
arpl
push
push
call
imul
or
pusha
mov
pop
lods
dec
scas
in
mov
call
lds
fisttpll
clc
into
lock
push
cmp
cld
add
jb
adc
mov
and
cmp
sbb
inc
setne
js
mov
dec
fldt
xchg
and
and
lret
push
push
rcrb
mov
dec
push
cmp
mov
xchg
inc
pushf
jb
and
fcomi
inc
ret
xchg
aad
out
and
out
xor
or
sbb
mov
daa
fldt
bswap
push
aad
jle
popf
lahf
and
sbb
inc
dec
jne
int
test
xor
inc
ds
push
xchg
lret
arpl
jbe
sbb
pop
push
jae
insl
pop
dec
cmp
xchg
rorl
ret
xchg
outsb
xchg
jae
fwait
xlat
xchg
add
push
push
jnp
es
pop
or
dec
add
sbb
insb
inc
cmp
insl
incl
dec
imul
jge
pop
lret
push
cmp
repz
mov
repz
or
mov
push
mov
sub
mov
add
test
mov
mov
mov
dec
inc
mov
int3
adc
dec
jns
jo
add
mov
loop
xor
leave
lock
rolb
enter
xlat
iret
mov
or
adc
hlt
negl
call
xor
in
xorb
enter
push
inc
xor
lea
mov
cmp
jne
cmpl
jle
fsts
and
mov
fmul
test
jle
and
xchg
popa
dec
insb
movsl
adc
repz
or
ret
jmp
aas
xchg
push
push
adc
jmp
rolb
cmpl
push
pop
dec
sub
and
mov
jle
fs
mov
push
ss
loopne
lret
xchg
inc
loope
aas
add
sbb
jmp
cmp
or
cmp
mov
fwait
sbb
lods
shl
sbb
cwtl
adc
ret
push
repnz
adc
adc
xor
push
xchg
mov
or
adc
cltd
mul
mov
pop
sub
pop
fldl
aas
cmp
mov
jno
call
aaa
push
lods
jl
es
jo
push
lcall
dec
je
call
test
pushf
or
ja
jg
xor
cwtl
or
cwtl
aam
enter
mov
pop
and
mov
lret
nop
or
jo
inc
mov
aaa
xchg
lret
sub
or
xor
lock
ja
mov
je
sub
outsb
lock
imul
sbb
stc
jmp
cmpl
pusha
testb
jne
aas
pusha
loop
cld
mov
lgs
add
or
mov
ret
adc
scas
cmc
add
push
xchg
lods
sbbl
xor
test
bound
cmovp
or
out
adcb
mov
ret
arpl
sbb
cmpsl
sub
mov
jg
jle
adc
les
or
ficoml
sub
sub
xchg
add
cld
xchg
imul
and
int3
push
shlb
xchg
fsubr
cli
mov
call
leave
cmp
sbb
ret
cmp
hlt
mov
repnz
and
pop
inc
fwait
and
sub
and
cmc
mov
xchg
cmpsl
cmp
dec
or
and
mov
sub
mov
mov
lock
jnp
or
push
push
add
adc
fldl
in
adc
cs
sub
xlat
inc
mov
or
and
addr16
ds
adc
cmp
iret
sarl
mov
add
out
fcom
mov
mov
inc
addb
nop
lods
dec
lods
pushf
and
mov
fists
and
mov
jg
fwait
push
push
mov
add
idivl
mov
cmp
fmull
mov
sahf
jmp
call
push
cmp
inc
sbb
xchg
mov
add
mov
lahf
push
popf
frstor
nop
xchg
xor
cmp
inc
xor
imul
dec
dec
fnstsw
ljmp
add
cmpb
mov
test
mov
push
sub
cmpsl
mov
aaa
cmc
mov
call
push
push
mov
push
ds
sahf
inc
inc
je
scas
mov
jecxz
push
lea
xchg
std
mov
mov
fdivrl
std
fdiv
push
enterw
pop
int
jne
mov
pop
call
cld
adc
ret
pushf
loop
int
movsl
sub
cmp
or
sub
xor
mov
jle
int
lahf
ja
addr16
mov
js,pt
adc
push
xor
loopne
and
fdivrs
dec
mov
sahf
in
mov
pop
fisubl
mov
movl
gs
nop
xchg
insb
pop
mov
nop
sahf
xchg
mov
and
mov
nop
pop
invd
dec
push
sbb
imul
push
cli
sub
mov
mov
xor
adc
lahf
sub
jae
orb
daa
xlat
pop
fldz
loope
test
rorb
xchg
popa
lea
aaa
adc
dec
insb
push
fwait
scas
add
rol
pop
pop
aas
pop
call
and
mov
inc
cmp
xchg
or
or
mov
lcall
mov
add
imul
lret
and
mov
push
imul
ljmp
push
mov
adc
imul
push
mov
fs
call
popf
push
loope
sbb
imull
das
cmp
rcl
xchg
lods
mov
cmc
loop
push
call
lahf
mov
push
push
push
jle
hlt
adc
mov
inc
mov
pop
das
fisttpll
ljmp
movsb
pop
fsubs
mov
xchg
or
outsb
sub
mov
subps
loop
insb
std
test
insl
pop
cmp
sub
push
repnz
jns
dec
cmp
xchg
cmp
adc
add
mov
mov
cmp
ficomps
pushf
pop
cmp
add
cld
je
pop
mov
pop
enter
loopne
dec
outsb
outsb
outsl
inc
fs
cld
stos
inc
pop
push
push
inc
push
dec
inc
pop
adc
dec
adc
and
add
mov
add
daa
xchg
pop
push
xor
movsb
and
adc
jecxz
in
xor
cmpsl
cltd
int3
sub
sahf
out
sahf
mov
add
out
lea
push
jl
popf
data16
call
out
xor
lcall
out
push
xchg
loopne
pop
and
sahf
pusha
xchg
in
insb
dec
cltd
cmp
idivl
pushf
push
cmp
hlt
dec
outsb
iret
repz
dec
dec
dec
test
inc
add
lods
scas
jne
and
mov
add
cmp
xor
xor
and
movsl
sub
add
js
and
xor
pop
faddl
adc
outsl
fs
add
xchg
push
rorb
rcr
inc
ss
cmp
sub
xor
es
fwait
pop
shlb
fcoms
sarb
cmp
flds
rcrb
bound
xchg
stos
jns
out
aam
lock
repz
repz
and
inc
pop
iret
repz
push
mov
repz
aam
repnz
mov
out
adc
sub
out
punpckldq
sahf
out
js
xchg
ds
repz
cli
push
aad
out
sahf
testl
jo
sahf
out
sahf
mov
cmp
out
lock
or
sbb
repz
repz
data16
iret
repz
cmpsb
mov
sahf
out
lcall
jns
out
adcb
sahf
out
loop
add
push
fdiv
mov
inc
push
push
iretw
repz
adcb
mul
cmp
xor
jo
inc
incl
add
jmp
insl
dec
pop
xchg
cs
pop
add
das
insl
mov
dec
cmp
add
imul
popf
ficompl
int3
lret
mov
shlb
aaa
pop
xor
cs
cmc
rcr
push
outsl
cmpsl
loopne
or
lods
push
insb
jae
or
xor
data16
fs
inc
ret
jne
cmpl
adc
pop
sbb
adcl
inc
mov
out
outsb
add
push
loopne
fdivs
inc
push
dec
inc
xor
test
outsb
ja
push
push
mov
inc
pop
outsb
fldl
rcl
fcoml
pop
pop
inc
add
test
jns
adcl
pushf
pusha
rorl
out
shrb
add
inc
inc
fwait
xchg
data16
mov
sbb
nop
add
cld
push
cmpsl
or
dec
pop
add
divb
je
mov
or
cs
pop
addr16
jbe
xchg
mov
lret
and
pop
mov
inc
daa
dec
fadd
sub
pop
and
test
sbb
shl
iret
cmp
jne
das
push
mov
outsl
pop
fidivl
pop
mov
ret
mov
add
push
mov
inc
das
pushf
jo
cmp
lret
or
inc
xor
clc
jo
hlt
arpl
inc
dec
outsl
cmpsl
jne
or
jae
sub
fisubrl
push
popa
fs
push
bound
ja
jae
inc
inc
push
dec
adcb
add
addr16
mov
push
fisubrs
ja
test
repnz
mov
pop
ss
xor
dec
cmpsb
push
popa
xor
add
daa
aaa
adc
or
sub
test
add
jo
imul
gs
pop
inc
out
shlb
sub
and
add
mov
je
dec
addb
imul
inc
inc
push
fildll
inc
gs
jg
inc
push
fcomp
cmpsb
jecxz
and
stos
push
insl
rolb
xchg
ljmp
push
push
stos
jg
mov
pusha
add
daa
add
or
adc
mov
inc
fidivl
call
jg
arpl
imul
ja
out
xchg
mov
xlat
imul
add
inc
sbbb
sub
cmp
rolb
insb
lret
sub
add
and
sub
sub
pop
xlat
or
mov
xlat
xchg
xor
dec
add
add
inc
loopne
push
or
ds
adc
mov
fcomps
cmp
repz
addb
jo
iret
repz
mov
enter
and
cmp
jg
scas
repz
adc
addb
sub
ror
pop
bswap
cs
push
sahf
out
sahf
mov
mov
mov
jns
call
dec
in
lea
subb
out
or
movsl
jbe
add
xor
xor
mov
pusha
cltd
das
sbbl
push
jb
das
das
and
enter
add
loopne
xchg
pop
enter
or
lcall
xchg
clc
mov
push
pop
insb
dec
mov
adc
push
add
fwait
xchg
int3
sbb
or
and
push
push
xlat
ficoms
add
push
dec
lcall
and
enter
leave
out
sub
inc
push
xchg
push
cwtl
and
adc
sbb
stc
rolb
xchg
add
add
adc
into
push
pop
jo
repnz
out
push
decl
mov
repz
jg
mov
mov
jnp
filds
xorb
fadds
ja
mov
cmpb
js
jo
cmp
mov
and
movsb
pop
decl
add
jb
push
jle
dec
stos
stos
scas
jg
jo
pop
pop
cmovp
pop
repnz
pop
add
sub
fmulp
adc
push
lock
in
xchg
and
dec
jmp
adc
loopne
add
inc
ds
push
dec
ss
add
add
fwait
int
add
add
add
and
sub
fldcw
add
inc
add
call
jl
push
push
add
add
fldt
out
movb
out
lods
test
iret
jnp
cmp
cltd
in
xor
cwtd
repz
dec
data16
cmp
data16
cltd
cltd
cmp
popf
out
cltd
cltd
cs
int3
out
mov
js
idivl
push
cltd
int3
jmp
jns
sub
xor
sahf
out
pop
sub
data16
ja
push
cs
cltd
cltd
out
pop
out
jns
int3
int3
cmp
ja
int3
int3
daa
jmp
fldl
add
push
cwtl
cmpsl
push
data16
xor
xchg
cmp
xor
or
ss
out
data16
data16
out
data16
jns
es
int3
jns
fnstsw
jns
jmp
int3
jo
in
loop
into
push
add
sub
xor
jns
cmpsl
push
jmp
data16
data16
jns
xor
cltd
cltd
cltd
jnp
sub
cltd
and
ljmp
dec
addr16
int3
dec
das
cltd
ljmp
loop
pushl
add
mov
and
cltd
cmpsb
pusha
mov
repz
data16
push
fcomi
cmp
cwtd
int3
decl
insb
cmp
repz
int3
int3
int3
xor
int3
ljmp
incl
addr16
daa
or
jo
cmp
repz
push
cmp
repz
dec
iret
repz
cmp
repz
dec
repz
xchg
pushl
sub
cmpsl
ds
mov
add
ss
int
xchg
xchg
add
add
mov
add
add
add
add
add
popl
push
sbb
xchg
cmp
test
push
pop
in
pop
mov
pop
cli
pop
in
pop
pop
cli
pop
pop
popa
mov
das
pop
add
sti
sti
push
aas
popf
daa
fnstenv
pop
in
sti
dec
addr16
push
pop
mov
add
in
in
fbstp
outsb
add
cmc
pushf
add
in
dec
in
imul
outsl
push
outsl
jp
xor
cmp
in
outsb
jae
cltd
pop
inc
push
and
and
and
dec
add
lock
aad
lret
add
iret
and
jb
and
inc
addb
pop
mov
mov
fstl
jns
clc
lock
mov
cltd
adc
jo
xchg
std
fnstcw
enter
mov
xchg
js
mov
cwtl
mov
xchg
repnz
js
or
in
inc
cmp
mov
inc
aas
repnz
aas
js
mov
jnp
fwait
mov
outsb
push
jle
mov
aas
xchg
mov
fcomi
js
mov
mov
jo
popw
jns
pop
jge
pop
ja
maskmovq
notl
adc
or
clc
jo
ja
js
adc
mov
mov
or
lock
add
out
mull
jbe
pop
repnz
das
pop
sbbl
outsl
pop
stc
mov
pop
push
sti
mov
xor
mov
int
jae
pop
mov
pop
imul
ja
inc
pop
inc
pop
outsl
add
pop
add
outsb
sbb
ss
push
jo
pushf
mov
add
add
pusha
add
cmp
add
add
dec
push
clc
cld
incl
push
clc
push
add
add
pop
dec
lahf
addb
inc
inc
inc
add
in
mov
mov
xor
mov
sub
aas
xor
in
lds
pop
cmp
fnstsw
out
out
aas
cmp
rcr
mov
shlb
add
inc
jnp
out
ljmp
jg
inc
mov
jg,pt
push
mov
lock
jg
repnz
lods
xor
mov
nop
mov
out
add
cmp
jae
ds
push
lock
js
ds
cmp
jg
ds
loope
inc
mov
lahf
aas
add
jge
xchg
psadbw
cmpl
jmp
pop
in
and
aas
push
out
nop
pop
in
add
jmp
aas
add
gs
pop
insb
in
add
mov
or
outsl
jnp
add
xchg
adcl
flds
add
imull
pop
aas
inc
aas
sti
jp
xor
cltd
dec
aas
mov
ret
pop
inc
dec
sub
mov
inc
aas
add
insl
orb
arpl
mov
jp
aas
inc
aad
pop
bound
inc
sti
aas
xor
aas
add
add
add
push
popf
ss
bound
and
mov
ljmp
dec
or
test
gs
cmp
cmp
mov
rorb
aaa
inc
testl
push
inc
or
rcpps
cs
push
jg
js
push
sbb
jnp
sbb
dec
daa
cmpsb
pop
decl
push
pop
pop
mov
out
add
in
or
mov
mov
std
jbe
idivb
push
push
jnp
or
mov
pop
xchg
pop
sbb
pop
push
mov
mov
cmp
fst
fnstsw
mov
push
test
ja
fstpt
pop
rol
js
jbe
pop
loope
pop
xchg
aas
xchg
gs
or
notb
rcrl
hlt
push
shrb
pop
bound
aaa
arpl
fs
dec
cmp
out
addr16
dec
adc
dec
push
xchg
xor
arpl
aaa
call
jb
pop
add
mov
lcall
ret
nop
jl
add
xor
sbb
stos
sub
pop
or
push
shr
or
ds
add
fcmovnu
mov
adc
jns
mov
sub
outsb
pop
loopne
sub
xchg
pop
cmp
lahf
cwtl
fdivs
sbb
jecxz
stc
pop
mov
xchg
pop
sub
jp
pop
lds
push
js
or
dec
jae
in
int3
scas
bnd
add
dec
pop
jl
adc
xlat
fcoms
xchg
ljmp
testb
or
adc
insl
stc
or
das
add
or
push
xor
sarl
addr16
or
add
xor
mov
loop
pop
incb
aas
adc
adc
or
aas
ljmp
les
test
adc
lret
dec
js
jg
das
and
jge
pop
mov
pop
call
popa
arpl
das
dec
add
cld
sahf
mov
add
dec
jb
inc
add
sub
dec
jne
insb
aas
iret
mov
outsb
push
jo
dec
add
je
xchg
arpl
repz
jbe
arpl
pop
in
fsubrs
or
jb
add
mov
push
add
lock
daa
adc
or
out
mov
or
je
insl
mov
addb
sbb
das
outsl
pop
or
inc
rcll
and
push
sahf
xlat
fldl
push
push
gs
sbb
fdiv
or
and
pop
insl
movd
popa
push
outsl
outsl
push
jnp
in
jbe
sbb
xchg
or
fsubr
or
aas
dec
mov
iret
inc
and
jb
insb
push
je
int
xlat
jnp
sub
subb
lcall
jg
jg
or
mov
sar
lret
fldenv
out
or
mov
add
loop
sbb
pop
rolb
and
bound
fiaddl
sbb
clc
inc
das
and
inc
mov
xor
rcll
pop
or
lods
sbbb
lret
or
add
or
aas
pop
loopne
push
xor
add
icebp
out
mov
sbb
lret
sub
outsl
inc
ret
push
xor
idiv
fiadds
sahf
inc
add
inc
inc
lcall
mov
imul
jl
out
xor
outsb
and
out
jo
test
pop
xchg
inc
xchg
jns
popa
lahf
mov
fiaddl
adc
insb
push
clc
push
bound
or
inc
xchg
add
lea
jle
arpl
imul
inc
fcmovnb
pop
repnz
dec
add
cmpsl
jae
xchg
pop
pop
mov
dec
or
insb
sub
sahf
push
adc
jns
addr16
je
add
and
cmp
jo
mov
notl
jo
scas
aaa
dec
pop
test
leave
add
adc
jmp
and
cmp
mov
popa
movsl
and
aas
js
insb
and
add
and
xor
and
out
dec
test
cmp
lcall
jns
mov
cld
gs
aas
ds
insl
idivb
inc
cli
jl
jae
jne
outsb
cmp
push
xor
adc
insl
jbe,pn
mov
movsb
xchg
push
mov
mov
xlat
xchg
sbb
je
outsb
popa
insl
int3
dec
push
cs
js,pn
cltd
outsl
adc
add
or
loopne
js
and
xlat
int3
add
mov
ja
push
movsb
shr
and
les
enter
outsl
cmp
das
pop
arpl
jo
jb
jns
pusha
shrl
inc
cmp
jo
pusha
addr16
out
cs
or
subl
sub
mov
ss
addl
pushl
push
ss
out
mov
xor
arpl
xor
insb
aad
sub
scas
addb
das
jae
mov
outsb
inc
adc
sub
outsl
xor
orl
jne
sbb
icebp
andb
sub
dec
mov
loope
cltd
dec
mov
ror
xor
rorb
pop
add
xor
cmpsb
xor
pusha
fiaddl
cmp
das
sti
das
push
pop
mov
call
inc
xor
mov
rcl
xchg
xchg
xchg
fidivs
jo
das
das
lea
cs
push
dec
push
sub
decl
xor
xor
gs
mov
into
cltd
push
shrl
adc
mov
popa
sbb
push
rorl
add
xchg
incl
loope
adc
jo
push
and
shll
xchg
jnp
dec
xor
aaa
sub
sbb
dec
ljmp
sub
js
push
jg
xchg
add
xor
jge
jae
xor
ss
std
cld
cmp
xor
fs
lcall
cmp
xor
xor
mov
das
inc
cmp
or
or
jp
bound
pop
xchg
jg
mov
hlt
add
cmp
icebp
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
incl
jg
mov
xchg
mov
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
adc
xchg
xchg
call
push
pop
mov
outsl
fucomp
in
clc
incl
inc
adc
inc
dec
dec
xchg
lret
xor
scas
jno
or
stos
jnp
jae
mov
add
dec
xor
dec
dec
call
or
lods
lods
dec
les
or
je
outsl
out
daa
xchg
jo
divl
int
rcrb
cmp
lods
lret
push
es
fistps
dec
aad
jl
rolb
push
loop
add
jl
rolb
pushl
cmp
mov
andl
dec
call
mov
add
out
pop
lcall
sbb
repnz
jmp
out
cmp
ljmp
mov
and
movl
clc
mov
aaa
and
mov
xor
push
adc
leave
xchg
xchg
inc
jge
sbb
aas
push
mov
out
jbe
insb
pop
lret
pop
scas
clc
pushl
lds
cmp
lcall
rclb
mov
out
movsb
ret
inc
imul
sub
push
sub
sub
mov
in
pop
adc
add
clc
dec
roll
loope
xor
mov
rorl
xor
mov
lahf
in
fs
call
or
outsb
fwait
mov
pop
fsubs
xchg
or
xchg
or
repz
cmovbe
les
cmc
adc
lret
inc
xor
pushf
dec
mov
sbb
mov
push
call
jge
clc
xor
sbb
mov
pop
ja
adc
cmp
mov
decl
xor
subb
data16
es
insl
into
mov
dec
fmul
out
cwtl
sarl
cwtl
test
hlt
imul
ja
int
adc
mov
mov
push
xchg
pop
sqrtps
fstps
clc
push
pushl
mov
push
mov
push
lds
mov
mov
inc
cmpsl
mov
incl
lds
inc
pop
xchg
xlat
push
andl
sahf
test
test
ds
aam
popa
adcl
sbb
incl
adc
cld
loope
pop
xchg
sub
cmp
jle
imull
loopne
push
push
cmp
jecxz
out
dec
xor
or
popa
mov
adc
mov
rol
dec
int
ret
call
rorl
or
das
sub
stc
outsl
nop
pushf
and
stc
adc
out
loop
cwtl
mov
out
mov
mov
icebp
fwait
mov
xchg
pushl
xlat
into
int
jge
rorl
push
inc
jmp
lds
lret
mov
hlt
sbb
in
sub
in
mov
das
push
fisubl
ljmp
jge
mov
mov
ljmp
movsb
dec
xchg
xor
push
dec
enter
data16
pop
pop
jg
clc
mov
sbb
in
jmp
mov
jno
add
and
icebp
adc
aaa
cld
jmp
inc
pop
jne
ret
in
clc
cs
pop
push
les
pushl
std
xchg
mov
mov
sub
int3
mov
cmp
lock
iret
xor
push
or
int3
xor
sbb
ljmp
push
pushl
xor
jns
xor
jge
and
testb
test
xor
fwait
pushl
cmp
enter
ret
test
js
lcall
dec
lahf
dec
jecxz
incl
lret
inc
aaa
mov
xchg
leave
mov
mov
cmp
mov
push
and
ljmp
dec
mov
out
mov
xchg
lret
and
sub
jmp
dec
lds
call
addr16
bound
jmp
negl
add
dec
push
outsl
push
add
enter
mov
or
outsl
scas
popa
ljmp
pop
outsl
lahf
sbb
clc
xchg
mov
incl
mov
leave
cmpsl
dec
mov
pop
pop
out
add
aam
jg
jmp
lods
jmp
lret
mov
xor
sbb
dec
jecxz
imul
pushl
daa
or
out
shrb
cli
out
insb
jmp
arpl
jmp
clc
mov
sarl
repnz
xor
cmp
rclb
jmp
pop
repz
addl
pop
jno
and
outsb
ret
sub
inc
les
int
and
cmp
insb
sub
pop
xor
push
inc
gs
in
imul
pop
jecxz
jg,pn
call
fsubs
shlb
or
sbb
inc
vcvttps2dq
xchg
jb
add
push
sbb
pop
jbe
jno
lret
sub
and
jl
sbb
add
add
pusha
or
incl
rcr
pop
inc
and
mov
pop
cli
pop
scas
test
xor
dec
bound
cmp
call
push
movsl
fiadds
or
sub
cmp
into
mov
test
sbb
iret
pop
mov
mov
sti
adc
fldenv
fwait
or
les
adc
mov
mov
xor
std
idiv
ljmp
mov
xorl
std
daa
xor
mov
test
jb
sbb
hlt
push
lcall
aaa
fisubrs
inc
pop
fs
cmp
push
ljmp
es
push
or
push
daa
mov
mov
int
cltd
push
xchg
xor
adc
ret
mov
fwait
xchg
xchg
jnp
out
and
cmp
jp
lret
adc
fcomip
or
int
aaa
sbb
les
jmp
pusha
mov
testl
daa
jae
pop
mov
iret
or
fucompp
cmp
sub
js
pushf
jae
jg
and
jl
cmp
pop
xorb
or
push
jns
jno
arpl
outsl
dec
lea
xlat
ss
sbb
sbb
mov
mov
call
push
cmp
cmc
popa
push
out
les
xor
mov
mov
jmp
lcall
mov
loop
out
push
jg
fs
addb
mulb
stos
out
into
dec
fbstp
dec
outsl
orl
pushf
xlat
jns
sub
test
cmp
decl
add
cltd
out
aas
push
fcmovb
stos
xor
fldl
negb
jae
pushl
out
mov
lods
adc
pop
xorl
dec
push
jl
pop
cld
lds
cld
test
pop
clc
add
jmp
push
pop
shlb
mov
imul
cmp
scas
jo
fldcw
lret
movl
cmp
lock
and
out
faddl
xchg
inc
or
cltd
mov
call
ljmp
mov
das
xchg
and
jg
or
notb
mov
and
lret
push
xchg
divb
jp,pn
or
in
out
nop
add
pushl
adc
jbe
fnstcw
mov
mov
cld
ffreep
enter
mov
inc
lahf
scas
jo
or
jno
dec
add
call
and
movsl
mov
loop
shll
jbe
in
add
arpl
sar
jmp
sub
shlb
sbb
push
mov
bound
inc
and
incl
add
ds
dec
loopne
jae
test
aam
jmp
mov
nop
push
dec
jmp
loopne
sub
sbb
jo
push
addr16
test
decl
pop
jl
sarb
mov
mov
es
pusha
fld
cmpsl
mov
xor
xor
sub
addb
xor
inc
add
jl
sub
mov
decl
jne
sbb
stos
mov
std
imul
mov
sub
sbb
cltd
adc
sbb
out
in
test
fistl
pop
jnp
mov
jmp
data16
hlt
decl
push
ret
xor
out
or
insl
xor
insl
lea
mov
lcall
pop
push
sar
and
or
pop
mov
cmpsl
shll
sbb
sub
ljmp
call
mov
stos
push
popf
in
xor
sbbl
pop
imul
inc
push
mov
jp
sti
jmp
sub
ret
sahf
std
jbe
lods
push
mov
lock
aas
aaa
push
repz
enter
sbb
leave
dec
loopne
incl
insb
fdivrs
xchg
inc
int
mov
scas
mov
fildll
insl
les
enter
call
pusha
gs
mov
divb
aaa
xor
cli
stos
fnstsw
rcl
ljmp
call
mov
out
mov
mov
add
push
adc
incl
jae
and
outsb
jnp
popa
js
lahf
aas
movsb
adc
inc
lret
bswap
lock
scas
add
pop
inc
popa
sbbb
aad
test
pop
shl
call
mov
push
bound
cli
das
push
mov
and
negb
aas
lcall
lods
add
adcb
aam
push
adc
pop
push
pop
mov
scas
inc
inc
sarb
dec
add
pop
cmpsb
cmc
into
cmp
mov
xchg
movsl
fists
test
or
pushl
jmp
lods
push
sbb
addr16
aas
popa
jle
jbe
adc
mov
dec
sar
call
add
ret
xlat
fstpl
popa
adc
jmp
and
les
pop
std
cmp
ljmp
clc
xor
sbb
adc
jno
sti
fdivl
ds
and
bound
stos
out
fwait
inc
xor
pop
std
insb
dec
pusha
andl
xor
mov
sbb
loopne
mov
inc
ljmp
and
fwait
pop
adc
ds
mov
js
add
ljmp
pop
dec
xchg
out
rcll
cmpsb
cli
pushf
jle
test
cmp
fs
fwait
xchg
es
lcall
incl
in
inc
ljmp
std
loope
pop
dec
ss
call
xlat
std
mov
lds
mov
xchg
popa
mov
push
test
imul
out
lods
pop
xchg
ja
and
xor
xchg
xchg
out
mov
jo
jb
jg
push
nop
mov
sub
push
jno
lds
std
sbb
scas
sub
sar
ljmp
decl
xchg
mov
aam
sub
sub
cmp
popa
push
xchg
incl
into
lret
stc
data16
push
mov
imul
dec
pushf
mov
and
sub
add
roll
and
adc
loopne
mov
decl
mov
call
sbb
daa
push
mov
daa
sub
test
stos
into
mov
std
call
mov
jge
insl
fs
pop
xor
fists
xor
jg
inc
mov
out
loopne
scas
add
inc
mov
jmp
fs
inc
dec
jno
jns
sub
ss
aam
jmp
outsl
sub
sbb
inc
iret
repz
andl
loope
xlat
sbb
incl
ja
jno
pusha
ja
adc
or
add
add
loop
mov
inc
and
mov
dec
xor
imul
dec
jo
inc
xchg
add
push
xor
decl
mov
fdivl
inc
adc
insb
inc
sub
sbb
call
pop
lock
push
std
mov
shrl
or
cs
decl
outsb
xchg
out
sbb
mov
mov
fcompl
fwait
out
xchg
xchg
xchg
add
pop
sbb
xor
popf
add
xchg
test
cmc
dec
add
jmp
mov
add
call
rolb
lea
fcmovnbe
outsl
mov
aam
mov
aam
out
shll
jmp
or
es
cli
ja
cmp
repz
lahf
es
shll
call
sub
gs
pop
out
inc
pop
icebp
mov
adc
mov
adc
test
ljmp
popf
out
aaa
andl
sbb
push
mov
cltd
stos
pop
das
push
stos
les
or
outsb
mov
xor
mov
test
sbb
add
imul
stos
dec
push
lock
inc
decl
xchg
mov
lcall
pop
pusha
clc
or
hlt
add
push
in
test
mov
ret
pop
sti
lcall
fiaddl
dec
cmp
mov
ljmp
jecxz
xorl
stos
loop
mov
inc
mov
shrl
cwtl
mov
xchg
call
mov
into
push
loopne
and
loopne
aaa
mov
xor
jb
ljmp
push
jg
ljmp
add
mov
int3
sub
je
push
push
divl
sbb
dec
jne
or
adc
mov
xchg
fs
dec
inc
ljmp
mov
dec
stos
lret
test
mov
cmp
popf
lds
ljmp
lods
mov
pop
mov
push
jb
add
inc
outsb
movsb
inc
mov
cmp
pushl
xchg
or
subb
xor
pop
sub
mov
dec
aas
mov
push
cmpsb
mov
inc
pop
xchg
adc
lds
fcoms
fistpll
push
mov
arpl
outsl
mov
inc
lahf
decl
and
out
push
push
sbb
push
mov
cmc
aas
in
push
adcb
cltd
mov
dec
shlb
clc
cmpb
cmp
nop
int3
or
xchg
in
call
xlat
subb
push
mov
mov
pushf
dec
sbb
pcmpgtw
sahf
call
aad
stos
add
es
fmull
hlt
jnp
aaa
push
cmpsl
test
mov
decl
scas
test
inc
cmp
pop
fcompl
and
adc
ret
xor
loop
cmc
jne
cli
das
cli
ljmp
inc
cltd
xor
sar
psrld
sbb
adc
mov
aaa
lods
pop
lods
mov
insb
or
and
movsl
lods
dec
push
pop
hlt
jmp
inc
mov
stc
jbe
add
xlat
sarl
mov
decl
in
cs
xchg
push
xor
adc
rcrl
mov
call
mov
sbb
mov
dec
sbb
sbb
icebp
jl
decl
ret
shrl
inc
jae
mov
loope
mov
mov
cwtl
test
js
loope
dec
jmp
and
xor
cli
outsl
ljmp
jmp
push
dec
push
ljmp
pop
fbld
rcl
sbb
ret
mov
sbb
fstpt
jmp
add
pop
insl
nop
aam
mov
rorb
movsl
or
decl
rcrl
xchg
jns
xlat
lods
cwtl
divb
cld
sub
sbb
call
sbb
jmp
fmull
test
jae
add
xchg
sub
inc
xchg
fdivs
pusha
les
stos
rolb
ljmp
jp
mov
pop
push
dec
or
or
bound
dec
mov
xor
fdivrp
pushl
repnz
popa
mov
mov
adc
in
adcb
xor
mov
push
popf
das
fwait
in
imul
movhps
push
inc
incl
jbe
push
and
js
jb
cmpsb
call
sub
in
sbb
call
rclb
mov
cmc
andl
jo
cmp
mov
test
lea
adc
incl
or
insl
jbe
sbb
and
in
popa
ja
xor
rcll
cld
jecxz
daa
mov
pop
mov
mov
clc
add
lahf
outsl
inc
jmp
dec
cmp
fldt
pop
pop
test
movsb
repnz
rcr
sub
sbb
adc
stc
jl
mov
fadd
lock
mov
cmp
xchg
jmp
add
pushl
cmp
aaa
xor
cmpsl
inc
xchg
push
out
ret
jl
adc
mov
bound
dec
sahf
ljmp
les
mov
insl
mov
sbb
mov
lods
sub
incl
cs
add
pushf
in
add
xor
push
fnstcw
es
push
pop
xchg
icebp
ret
outsb
popa
scas
jg
add
push
push
inc
mov
fsubrs
lcall
movsl
adc
push
cmp
outsl
jo
iret
pop
sti
mov
mov
mov
add
ljmp
xchg
sub
jecxz
jecxz
jbe
jne
or
out
mov
push
scas
push
ja
sbb
ret
cmc
fwait
popa
jne
pop
scas
out
in
jne
adc
xor
jl
arpl
pop
gs
pop
ja
fsubl
cmpsl
jp
repz
nop
dec
arpl
je
out
add
mov
jae
fists
xor
and
aaa
mov
xchg
mov
pop
leave
inc
mov
out
dec
jmp
add
or
popa
and
ja
sbb
dec
inc
movsb
push
rol
pop
pushl
or
pop
push
and
in
inc
jp
cmc
inc
add
fdivl
rorb
jmp
rcrl
mov
fs
add
imul
sahf
mov
cmp
popf
cmc
test
jmp
fimull
movsb
mov
incl
in
test
inc
ror
or
push
cs
incl
dec
insb
lcall
pushf
mov
or
ret
sub
lret
mov
sbb
adc
call
jmp
mov
dec
jae
lret
aaa
adc
and
and
inc
insb
stc
andb
pop
cmpsl
jge
decl
xlat
inc
hlt
out
sarb
jae
inc
xchg
ret
adc
aaa
in
cmpsb
inc
testb
jmp
hlt
bound
sti
and
imul
xchg
sbb
lods
sbb
dec
pushl
inc
mov
test
xor
mov
andl
jnp
pushl
nop
pop
dec
in
test
sbb
xchg
int
jp
or
shl
pop
push
mov
or
adc
mov
pushf
hlt
adc
call
pop
std
inc
jne
mov
mov
sti
xchg
loopne
and
es
out
flds
ret
and
pushl
add
push
fimuls
lcall
mov
xlat
jge
add
push
pop
add
stc
addl
ret
sub
mov
imul
ja
clc
pcmpeqd
xchg
sbb
shlb
push
xchg
mov
insl
loope
inc
xchg
shrl
cmpsb
jmp
ja,pt
mov
ja
repz
push
inc
jle
dec
jb
popf
adc
jmp
dec
jl
fstpl
inc
lods
dec
mov
fidivrs
sbb
hlt
shlb
cmc
jbe
push
or
pushl
cli
push
pop
jnp
rcrl
mov
movsl
xlat
std
push
pop
inc
sub
pop
nop
ss
test
jp
sahf
mov
jl
loopne
fmul
push
shlb
fidivl
push
iret
jbe
fdivr
call
cld
push
xchg
aad
sub
xor
pop
rcrb
push
rcrb
cltd
dec
aam
sub
call
sti
lea
xor
cwtl
dec
mov
imul
ja
call
jge
xor
push
cwtl
pop
mov
icebp
pusha
outsl
js
lods
cmp
xchg
xchg
sbb
out
lods
lods
or
dec
adc
dec
mov
enter
add
outsb
or
adc
call
cli
test
call
cltd
jne
and
int
es
ljmp
sub
std
rcl
sbb
movsl
sarb
je
pushl
jle
mov
xor
jnp
insb
push
adc
insl
out
and
cmp
imul
les
sbb
ret
fwait
loopne
dec
nop
repnz
or
jo
scas
insb
cmp
xor
jmp
xchg
mulb
inc
aaa
adc
jp
push
mov
test
pop
xchg
bound
out
pushl
dec
jb
push
cmp
xchg
cmp
mov
mulb
jmp
mov
cmp
insb
dec
dec
sub
mull
mov
shrl
mov
jmp
mov
sub
xchg
jb
or
rorb
leave
gs
inc
cli
ljmp
xor
push
int3
nop
repz
out
scas
xor
jns
ljmp
in
loope
inc
xchg
gs
lds
mov
dec
xchg
sarb
inc
push
inc
nop
and
lea
cs
out
sub
push
mov
pop
loope
lahf
sub
call
push
roll
jnp
inc
data16
mov
dec
mov
icebp
cltd
rclb
and
stos
je
lds
jns
divl
dec
jmp
roll
test
jmp
imul
xor
pop
cld
mov
push
xchg
aas
add
sub
push
data16
rorb
clc
lcall
push
push
mov
ss
or
movsl
data16
mov
sbb
shl
inc
cmpsb
scas
jmp
adc
mov
pop
sub
lods
inc
mov
cmpsl
pop
lods
cmpl
xchg
mov
outsl
mov
iret
stos
es
xchg
add
cmpsl
fcomip
call
pop
rcll
ret
cmpsb
cmp
push
inc
mov
mov
outsl
and
push
rcrb
push
loope
jl
dec
jne
cmpsl
pop
sbb
jmp
lds
jo
mov
outsl
push
mov
lcall
mov
adc
stc
popa
push
and
pop
lods
iret
fmulp
inc
add
sbb
iret
call
frstor
mov
mov
xchg
fsubrl
scas
jae
dec
xchg
inc
fsubrl
lcall
sub
dec
cmp
pop
sbb
ljmp
and
dec
adc
cli
or
push
sub
inc
mov
fidivs
or
ja
jle
fisubl
lahf
pop
push
xor
cmp
in
rol
adc
push
dec
mov
je
in
cmc
out
lds
scas
imul
call
movsl
jae
scas
mov
and
jns
leave
sti
adc
cmp
arpl
sub
aam
repz
decl
sub
imulb
mov
adcl
jmp
jno
push
add
pop
jno
out
call
mov
xchg
je
and
nop
xor
mov
xorl
jmp
test
out
aad
inc
xlat
test
loope
mov
jne
arpl
pop
jns
push
or
pop
pusha
sub
pop
cmpl
jg
ror
ljmp
xor
cwtl
adc
dec
or
mov
adc
jmp
dec
in
out
jge
push
into
in
jns
jmp
popf
fs
xchg
cs
inc
stos
inc
xchg
sub
inc
and
add
aaa
leave
inc
push
dec
mov
or
dec
cmpsb
pop
movq
mov
aas
loop
mov
stc
mov
adc
jmp
pop
and
dec
and
inc
add
lcall
repnz
call
inc
lds
adc
mov
js
mov
lea
movsl
iret
or
test
mov
mov
xchg
mov
mov
incl
repnz
dec
test
and
jmp
cltd
into
mov
xchg
jge
cmp
std
das
addr16
cmp
jecxz
movsl
loope
fcomi
insb
add
pushf
std
ret
test
aas
adc
mov
nop
xchg
rcrb
add
inc
repnz
in
pop
mov
out
subl
pop
fsub
jmp
push
and
movsbl
dec
xchg
xor
mov
pop
icebp
pushl
jge
pop
cmp
or
or
loop
push
out
lret
pop
popf
pop
decl
test
adc
mov
push
jmp
inc
sub
aaa
jns
cmc
inc
jne
data16
sahf
jecxz
std
jne
xchg
cld
in
les
jl
cld
sahf
mov
or
or
ss
xor
push
sub
jge
xchg
jg
xor
test
sbb
dec
or
data16
imul
call
adc
mov
leave
pop
loop
cmp
adc
dec
hlt
add
incl
cld
jecxz
fnstcw
mov
push
sub
add
push
lock
push
sti
call
call
cmc
rcll
push
lahf
popa
imul
std
dec
push
fsubrl
testb
ljmp
fildl
inc
les
and
mov
outsl
xchg
mov
pop
scas
push
enter
insl
fsts
jno
jno
sbb
cmpl
out
push
add
lret
cmp
jmp
jmp
out
cs
rcrb
int
or
sub
lock
stc
jmp
lock
sub
test
mov
call
out
add
cld
pop
xor
push
and
pop
add
sahf
sub
and
push
xor
mov
fimuls
call
mov
lock
nop
insl
out
add
sub
ljmp
into
mov
sub
inc
jmp
inc
adc
push
or
jg
pop
mov
or
decl
jns
lods
neg
decb
sahf
out
and
dec
scas
test
bound
fidivl
sub
mov
pushf
mov
lock
jmp
stos
pushl
cld
pinsrw
push
clc
subb
jecxz
add
mov
sbb
xor
in
cmpsl
sub
mov
sbb
mov
call
outsl
ret
ja
ljmp
and
jle
in
rcrb
std
notb
arpl
lcall
mov
fs
adc
sub
mov
inc
mov
mov
loopne
and
push
lock
mov
or
mov
jge
movsl
jg,pn
sub
mov
mov
stos
data16
xor
add
and
cmpsl
dec
mov
call
and
cmc
inc
ret
dec
inc
das
jecxz
mov
jbe
push
loopne
jmp
repz
jg
ljmp
int
test
or
inc
lret
out
negb
fistps
ljmp
push
mov
push
lahf
add
ja
arpl
pop
jno
outsb
inc
lret
adc
lcall
mov
inc
add
push
and
lret
sub
repnz
fs
insl
push
decl
lods
in
scas
sub
lds
inc
pop
popa
jl
hlt
sub
ret
lods
or
pop
mov
ljmp
cmp
sub
xor
sbb
dec
mov
lods
daa
mov
cmp
nop
jbe
push
adc
xchg
movsb
jbe
lods
jb
ja
pop
loopne
cmpsl
addb
xor
cmpsl
mov
adc
jp
xchg
and
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
incl
or
js
pop
notl
add
and
sbb
push
mov
std
incl
enter
scas
mov
sbb
mov
rorb
loop
les
push
std
aaa
data16
je
inc
sub
sub
test
ss
mov
decl
pusha
add
jp
mov
pop
mov
ffreep
pop
call
shlb
call
push
ficoms
mov
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
std
jp
dec
push
hlt
rcl
in
jno
fldenv
lahf
mov
jno
push
roll
div
mov
lods
mov
sub
ficoms
push
dec
outsl
cmp
xorl
lock
mov
jnp
push
gs
pop
inc
xchg
fcomip
push
ret
mov
in
popa
incl
push
jbe
imul
sub
cld
fdivrs
xor
mov
hlt
mov
push
out
ja
pushl
out
jo
adc
cltd
jp
aad
mov
cltd
scas
out
ja
mov
jmp
cmp
adc
mov
sub
cmp
in
lcall
jg
jo
pusha
adc
sbb
mov
rcll
test
fildl
jmp
lcall
mov
jp
cltd
sbbb
add
jl
rol
sysexit
sbb
cmp
pop
dec
test
xor
mov
cltd
inc
mov
push
std
pushl
dec
sar
notl
dec
mov
hlt
fimull
cmp
sbb
decl
mov
inc
test
pop
fsubs
inc
jns
sbb
xor
call
sahf
adc
outsb
push
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
decl
add
pushf
jecxz
push
or
cmp
xchg
mov
sub
xor
cmp
xchg
ljmp
insl
inc
sbb
stc
fldcw
pop
popa
mov
cmp
lods
rolb
pushl
mov
hlt
repnz
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
ljmp
gs
and
push
call
lock
dec
mov
stos
fldcw
bnd
push
cmp
cmpsl
repnz
lea
adc
xchg
shr
clc
lcall
or
xor
push
xchg
imul
imul
repnz
mov
outsl
mov
xchg
push
in
popf
scas
sbb
add
dec
and
mov
addl
pop
decl
clc
jb
mov
xor
pushf
push
ret
sbbl
mov
incl
cmp
and
out
les
nop
inc
mov
xchg
pop
not
pop
cmc
decl
fiaddl
mov
rcll
inc
imul
cs
repnz
pushl
lods
inc
cmp
push
imul
inc
jl
hlt
pushf
push
inc
mov
jmp
mov
fidivs
es
aad
dec
pop
pop
scas
rolb
outsb
enter
sub
jmp
inc
pop
mov
pop
cmp
sub
jno
js
call
push
shll
sub
jo
stc
rorb
mov
test
cmp
sub
cmp
clc
jp
cmp
and
int3
lcall
pop
or
not
lock
add
lock
das
or
into
xchg
int3
iret
arpl
shrl
push
pop
adc
dec
dec
fsubl
xor
andl
push
lock
incl
dec
iret
sub
ds
cli
xchg
dec
jmp
inc
ds
fstpl
cmp
insl
or
aas
daa
lcall
push
fsubrp
rorb
push
clc
in
jmp
mov
mov
cmp
sub
data16
mov
js
stos
ljmp
pop
dec
repnz
ljmp
pushf
inc
add
xor
outsb
rorl
incl
arpl
xchg
add
and
stos
pushf
rorb
lods
mov
decl
lock
jp
nop
jo
dec
in
arpl
dec
mov
stos
inc
or
jmp
lcall
pop
in
sub
out
aad
jg
in
mov
push
add
xor
inc
pop
out
xchg
mov
fdivrl
add
out
sub
sub
fisubs
adc
lcall
ret
in
add
aaa
sub
stos
loop
inc
movsl
inc
push
cwtl
arpl
in
int3
repnz
decl
movsb
lods
sbb
fdivl
ret
icebp
cld
lock
jb
xchg
or
dec
bound
aam
incl
mov
pusha
and
outsb
imul
aas
add
cld
mov
loopne
loope
jae
inc
mov
les
hlt
call
fwait
js
in
or
inc
jne
iret
in
lods
decl
lret
dec
sbb
sti
pusha
test
stc
lock
sbb
test
mov
cltd
jmp
ljmp
inc
push
mov
add
iret
jge
rorb
or
xchg
decl
jg
sti
dec
push
movsb
testb
pop
sbb
jo
jmp
jnp
out
repz
adc
or
data16
imul
pop
add
out
cmp
dec
mov
push
or
ljmp
and
sahf
xchg
pop
fcmovu
outsb
ds
into
in
paddb
cs
and
push
ss
ljmp
cli
mov
or
xor
jae
mulb
push
mov
xchg
mov
push
call
cmc
inc
fdivrl
and
shll
push
js
incl
scas
mov
mov
pusha
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
ja
in
je
imul
orl
cld
loop
iret
jb
jne
mov
ljmp
pop
clc
aam
xor
jge
mov
ds
jle
int3
adc
js
ljmp
mov
call
sub
sbb
in
fiadds
pop
adc
jg
lret
hlt
sub
lock
lock
repnz
mov
std
sbbb
das
sar
mov
scas
andb
mov
test
mov
pop
xchg
push
js
push
xor
ljmp
xchg
mov
test
dec
pop
mov
int3
lcall
push
push
pop
cmp
sbb
nop
fdivr
cmpl
pmuludq
iret
out
cli
cli
lcall
pop
fcmove
ret
popa
lds
shll
fld
push
pop
leave
call
aad
sbb
outsb
cs
xor
inc
inc
das
insb
mov
std
mov
cli
xor
mov
mov
stos
mov
add
cs
adc
pop
into
jge
je
fildl
shrb
or
cmpsb
adc
dec
clc
cmpsb
sub
mov
incl
jmp
jne
sub
adc
sub
lds
cs
add
xchg
dec
pushl
add
imul
cmp
leave
fldz
pop
inc
ljmp
iret
out
test
lcall
repz
xor
xchg
imul
mov
mov
cmp
add
call
push
adc
idivl
sub
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
mov
inc
jbe
repz
jbe
xchg
xchg
mov
sbb
push
aam
or
dec
lock
cmp
lds
sub
in
pop
lds
enter
ret
sbb
jo
pop
ud0
inc
dec
int3
jno
and
test
mov
push
add
arpl
jmp
mov
mov
lock
scas
sub
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
and
repnz
xor
sarl
xchg
outsl
adc
lcall
bound
loope
mov
cwtl
add
fsubs
and
jp
mov
adc
in
test
dec
lock
jmp
gs
repnz
or
ja
in
mov
inc
mov
adc
pop
sbb
aam
xchg
cld
xor
ljmp
daa
mov
addl
ja
sub
sbb
lods
enter
testb
call
inc
call
mov
movsl
sbb
int3
fldenv
adc
fiaddl
jecxz
fidivl
xor
fdivrp
jno
jno
stos
xor
pop
adc
xchg
das
in
fwait
xchg
imul
orb
and
mov
sub
jg
out
jmp
or
aaa
fcompl
sbbb
sub
in
icebp
ljmp
sarb
pop
xor
jmp
lcall
add
addl
mov
inc
in
inc
sar
xchg
and
clc
xchg
aam
mov
out
xor
lcall
jge
mov
push
or
shrb
add
in
dec
cltd
das
mov
mov
cmpsl
inc
jbe
movsb
jl
orb
add
cmc
scas
cmp
jmp
addb
inc
pop
and
pushl
rorl
mov
mov
out
adc
mov
mov
or
jp
push
into
icebp
mov
mov
pushl
adc
mov
pop
aam
mov
js,pt
lods
add
in
or
mov
mov
out
mov
xchg
sub
mov
xchg
adc
stos
popf
pop
mov
dec
lock
ljmp
jmp
aad
bound
aad
mov
push
in
nop
add
dec
das
sub
mov
mov
sub
lret
mov
fwait
adc
enter
jmp
xchg
into
pop
cli
cmp
lods
adc
sbb
jg
iret
lds
push
add
ljmp
mov
adc
mov
sbb
dec
fdivrl
mov
push
outsb
add
incl
dec
sbb
sbb
sbb
hlt
adc
mov
mov
adc
xor
call
lret
out
cmp
js
das
mov
pop
fadds
pop
inc
push
sbb
or
mov
dec
xchg
dec
adcb
popl
add
xlat
pushl
sahf
sti
push
loope
cmp
push
out
cmpsl
out
fwait
cwtl
gs
cmpl
lcall
sub
add
dec
dec
or
test
orps
cld
decl
ss
and
mov
inc
mov
add
mov
jmp
nop
mov
call
addr16
xor
xor
pop
movl
into
or
inc
lea
outsl
add
fwait
and
add
ljmp
mov
shll
movsl
scas
arpl
xchg
pusha
scas
mov
mov
ljmp
ror
and
xchg
or
bound
std
inc
stc
adc
dec
jmp
xor
ud0
ljmp
cmp
in
les
mov
lods
out
popf
adc
icebp
scas
jg
pushf
mov
mov
jmp
stos
push
mov
mov
shll
xchg
das
test
mov
test
mov
sbb
lea
ljmp
pop
push
hlt
loop
or
fcos
pushl
lcall
sub
or
dec
fistl
push
nop
leave
call
mov
xor
jmp
push
add
cli
into
dec
mov
adcl
cmp
stos
enter
call
mov
lcall
add
inc
dec
xchg
orl
pop
dec
stos
lea
decl
jge
shlb
ljmp
std
test
lcall
sbb
movl
lret
lret
push
cmp
stos
push
sahf
sahf
add
mov
cmc
and
cwtl
adc
inc
pop
dec
jg
or
xor
jg
and
sbb
adc
push
addr16
cmc
mov
lock
enter
sbb
inc
aas
mov
fwait
and
enter
mov
lahf
push
xchg
leave
dec
or
ds
lock
jnp
mov
sahf
mov
daa
mov
or
mov
ja
add
xchg
pop
xchg
iret
daa
dec
mov
push
test
cmp
popf
sbb
add
lahf
jbe
lods
insl
dec
mov
lcall
fst
sub
fdivl
nop
bound
inc
or
mov
xchg
cwtl
cmp
push
and
mov
lcall
pop
xlat
xor
lods
in
and
leave
cmp
mov
push
adc
push
sub
sub
call
adc
shlb
cli
cld
cs
cltd
xchg
movsl
es
dec
clc
sub
sbb
into
scas
outsl
vsqrtpd
xchg
adc
lock
stos
daa
mov
lds
flds
stos
pop
xor
inc
das
jne
mov
movsl
cwtl
xor
das
dec
idiv
int
icebp
fistpll
ss
movsb
push
push
dec
inc
pushf
nop
out
jg
mov
push
and
push
in
test
adc
repz
out
shlb
ds
jge
decl
mov
cli
in
insb
pop
xchg
and
and
aaa
test
fmuls
call
cmpsl
sub
fdiv
dec
lcall
push
shr
fisttpl
ret
and
cld
mov
loopne
incl
lds
in
arpl
hlt
sbb
lcall
sub
cmpsb
lahf
jecxz
sbb
dec
test
jae
insb
jmp
decl
add
ja
cltd
pop
dec
xchg
outsl
mov
add
fnstsw
imul
or
loop
leave
loopne
xchg
in
es
inc
push
lods
sub
imul
mov
test
jge
inc
dec
mov
mov
fistpl
or
out
enter
popa
mov
push
fs
mov
jl
xchg
mov
cmp
cmp
jnp
in
test
jl
inc
lret
xchg
sti
out
push
xchg
in
adc
mov
sar
cli
jnp
cmpsl
dec
jl
mov
pushf
lds
cmp
shl
nop
push
add
and
mov
cld
lcall
aad
mov
js
cmp
lea
mov
ljmp
push
jge
or
jl
pushl
nop
cmp
in
mov
arpl
out
nop
cmpsb
pop
mov
jmp
shrb
pushf
push
push
jl
pop
scas
jle
jl
push
int3
pushf
pop
js
or
aam
or
cld
push
out
cmp
inc
sbb
jbe
sbb
mov
xor
ret
aad
sahf
movsl
cmp
repnz
pushl
sbb
cmp
ss
fmull
daa
mov
adc
lods
mov
into
inc
and
ror
loop
inc
scas
adc
push
mov
xchg
mov
jg
mov
jecxz
sti
push
out
sub
subb
pop
aam
or
outsl
mull
jecxz
cmp
movsb
in
enter
jmp
in
loope
sub
or
xchg
movsb
test
and
dec
decl
arpl
aaa
popa
inc
push
or
mov
cmp
mov
cmc
outsb
dec
icebp
dec
lret
daa
dec
lret
leave
jmp
repz
inc
es
or
fmul
add
adc
push
xor
or
das
imul
mov
add
scas
push
ljmp
hlt
aaa
and
repz
dec
pop
fcompl
sbb
popf
dec
xor
dec
push
mov
aaa
add
orb
lock
adc
scas
sbb
loop
dec
push
ds
dec
cmp
xor
xchg
cld
dec
mov
xchg
xor
xchg
jmp
icebp
push
push
mov
push
lret
cmp
negb
mul
fidivrs
inc
das
repnz
aaa
test
pop
xor
sub
or
pusha
adc
pop
repnz
pop
jno
push
mov
decl
sbb
dec
jno
push
push
ss
call
inc
movsb
xchg
mov
inc
cwtl
orl
xchg
dec
jg
jg
jg
inc
xchg
mov
push
push
mov
jno
push
out
xor
cli
adc
roll
push
jne
movsl
add
cmp
mov
mov
ljmp
bound
push
xchg
pop
and
xor
or
fdivrl
pop
pop
jmp
out
push
mov
sub
xchg
pusha
insb
pop
das
fcmovnu
ljmp
popf
mov
fnstcw
in
jb
faddp
sub
lods
movsb
mov
mov
arpl
iret
popf
push
pop
cmc
push
movl
push
dec
or
inc
xlat
jmp
pop
dec
push
fdiv
xchg
jno
adcb
pop
fiaddl
cwtl
jae
sub
jp
arpl
jg
add
and
xchg
and
mov
adc
enter
jmp
jmp
jmp
jb
pusha
enter
xchg
adc
mov
aaa
sbb
lds
popf
or
dec
xorb
in
cmp
xchg
mov
pop
pop
sbb
addr16
imul
outsl
dec
xchg
jno
mov
pop
loopne
enter
push
jecxz
or
and
leave
mov
stc
scas
decl
pop
cmp
test
outsb
xor
cmp
test
repz
cmpsb
xor
sub
decl
push
xor
out
xor
mov
sbb
imul
dec
mov
inc
mov
call
rclb
xchg
clc
js
call
test
int
bound
jg
call
loopne
in
xor
push
or
or
gs
in
stc
mov
xor
pop
decl
loop
dec
test
pusha
jecxz
dec
aam
sub
or
push
jmp
cmc
int
decl
xchg
jecxz
jns
adc
xor
mov
mov
cmpsb
sbb
mov
xor
or
mov
cmc
and
add
aad
popa
mov
incl
movsl
je
fidivrl
mov
mov
mov
ret
fldcw
lds
inc
dec
movsl
inc
xor
jmp
or
lret
pop
mov
xchg
jmp
loope
fs
dec
xchg
call
inc
pop
push
add
pop
scas
adc
mov
sub
std
pextrw
adc
fdivrp
pop
insl
mov
xchg
mov
mov
xchg
imull
pusha
idiv
pushl
mov
stos
push
aas
xor
push
mov
insl
and
dec
loope
movsb
add
pop
ret
cmp
pop
pushf
xor
dec
movsb
add
insb
rorl
movsl
sbb
mov
out
in
push
std
and
mov
dec
fcmovne
cli
jl
inc
mov
lcall
jp,pn
mov
and
push
mov
cmp
lock
dec
mov
jmp
cmpsl
push
cmp
adc
bound
pop
sti
cld
and
lret
addr16
jp
outsl
adc
pop
fdiv
roll
ja
int
sbb
ja
popf
push
jnp
mov
lret
push
psrad
in
mov
mov
div
mov
fistpl
js
in
sbb
loopne
insb
xor
cmp
mov
decl
je
dec
jle
xchg
xchg
fwait
test
push
fcmovnbe
outsl
iret
inc
out
cmp
sar
add
lock
movsb
jle
jne
mov
loop
es
fstps
decl
push
dec
and
sbb
rcll
dec
push
jg
jmp
inc
lock
stos
test
sbb
jmp
jno
popf
jge
shll
sahf
ds
incl
add
outsb
jnp
popa
lret
adc
lds
loop
xchg
shlb
sub
or
push
std
lret
xchg
movsb
psubw
clc
shlb
xchg
or
aas
dec
jae
ljmp
mov
fs
pop
jns
xchg
test
gs
popa
inc
jmp
cmpl
aaa
xlat
call
int3
sub
xchg
inc
xchg
andl
ljmp
js
xchg
mov
sub
fstl
sbb
ficoml
aad
out
dec
cwtl
cmp
push
or
jo
lods
js
mov
in
inc
pop
jmp
push
adc
pop
icebp
arpl
push
rorb
in
sbb
dec
jno
push
cmp
test
xchg
push
ljmp
pushl
pop
ficoms
push
add
xor
mov
out
cmpsb
test
addb
lret
xor
fnstsw
jno
jle
pop
adc
cwtl
mov
dec
push
out
sbb
mov
mov
incl
inc
fiaddl
jg
sub
insb
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
call
jmp
rcrl
jge
data16
pop
cmp
std
pusha
pop
adc
fs
jmp
cs
into
int
mov
vpinsrw
push
jmp
add
mov
lds
ja
test
add
pop
mov
or
inc
mov
inc
inc
mov
imul
loope
add
hlt
and
mov
add
sbb
enter
leave
test
icebp
arpl
or
pushl
inc
sub
mov
and
sub
mov
lahf
add
adc
sub
cmp
call
mov
push
mov
rorb
adc
mov
pop
xchg
pushl
scas
addr16
int
lahf
aad
ret
fidivl
xchg
dec
cmp
jno
cs
mov
ficomps
stos
add
xchg
roll
push
ja
dec
scas
mov
call
imul
lods
shll
in
les
adc
push
out
mov
in
and
sub
iret
movl
rolb
mov
fdiv
fwait
or
pushl
fiadds
es
pop
test
push
fs
push
jg
add
adc
cmp
dec
imul
jl
adc
jg
push
addr16
sbb
mov
xchg
cmc
call
cmp
jb
mov
popf
aam
loope
dec
mov
push
sub
inc
icebp
add
dec
cmp
filds
cmp
inc
in
pop
cmpsb
push
sete
xor
xchg
ljmp
mov
dec
fildll
decl
pop
jns
enter
inc
inc
ljmp
sbbb
inc
fsubl
push
fisubs
loopne
pop
popa
ftst
adcb
loop
fnstcw
into
mov
rcr
les
fstps
jmp
cmp
stos
getsec
jb
sub
movsl
mov
aad
pop
idivb
ljmp
ljmp
jnp
test
cwtl
push
pop
jnp
shlb
fildl
adc
cltd
arpl
popa
stos
jmp
lcall
mov
sbb
dec
mov
dec
mov
test
mov
pop
mov
cld
fwait
les
mov
mov
push
sti
cs
incl
mov
repnz
repz
pop
pop
ljmp
push
and
mov
mov
lahf
sub
inc
xchg
or
cli
adc
xor
mov
xchg
outsb
scas
hlt
faddl
xor
cwtl
cmp
cmc
mov
incl
xchg
not
push
or
rorl
in
mov
gs
inc
pop
pop
adc
sar
mov
outsl
loop
sti
cmpsl
inc
inc
mov
ret
cs
sbb
jmp
or
ljmp
pushl
push
sub
xor
lods
cwtl
push
in
inc
jbe
sbb
push
imul
mull
push
cmp
lcall
cmp
cld
lahf
xchg
xchg
lcall
test
mov
push
scas
push
mov
jl
mov
xchg
imul
sub
pop
in
loop
adc
test
ret
jmp
adc
addr16
stos
sbbl
cli
jg
das
add
pop
pushf
iret
addr16
fcompl
inc
push
and
sub
dec
fs
outsl
call
jmp
test
push
sub
pop
push
pushl
sub
stos
repnz
mov
push
jge
sub
mov
push
push
fwait
leave
cmp
dec
cmp
ss
repnz
lret
jmp
mov
mov
pop
imul
das
cmp
addb
sub
cli
inc
jae
decl
xchg
jge
add
cwtl
or
sub
push
push
sbb
into
lcall
mov
adc
inc
or
out
sub
push
jecxz
sub
cmc
xchg
jle
je
inc
pop
ljmp
dec
std
sbb
add
mov
mov
decl
xor
pop
inc
push
add
cmc
mov
loopne
jecxz
sub
sbb
pop
inc
out
push
decl
lock
les
dec
sub
add
xchg
mov
test
mov
bswap
ljmp
mov
popa
adc
pop
dec
mov
push
adc
jo
aas
jg
cmp
pushl
imul
sub
call
lods
sub
out
xor
jmp
mov
push
imull
push
movsb
in
adc
outsl
test
outsl
pushl
gs
in
pusha
cmp
into
mov
cwtl
popf
fildll
xor
jle
dec
mov
loop
or
clc
push
sahf
andl
xchg
std
je
mov
lret
inc
pushl
sbb
lea
lock
arpl
xchg
push
mov
inc
adc
imul
in
aad
mov
enter
cmp
in
ljmp
mov
dec
cmp
das
lret
popf
pop
or
add
xchg
decl
push
add
inc
xchg
lods
loopne
inc
mov
test
stos
cmpsl
xlat
jg
jbe
testl
outsl
shlb
mov
xor
sti
dec
sbb
sahf
sar
jge
xor
pop
mov
int3
daa
pop
push
into
in
cmp
xchg
sbb
or
std
xor
lcall
sub
mov
mov
sarl
cmp
fldcw
pop
add
incl
pop
xor
xor
dec
inc
push
xchg
insb
scas
icebp
or
mov
add
pushl
adc
cmc
xchg
pusha
dec
dec
dec
stos
add
mov
mov
lds
arpl
jno
lretw
clc
insl
xor
stos
jne
mov
lcall
jle
xchg
push
sbb
cmp
xlat
ds
jb
push
mov
mov
cmp
decl
jbe
jno
lahf
jg
adc
xor
testb
sbb
cmp
xor
mov
jp
jbe
test
pushf
and
push
mov
lret
sahf
fadds
outsb
push
filds
mov
push
pop
and
sub
and
decl
stos
push
sbb
int
dec
push
mov
mov
call
addr16
pop
cmp
lds
cmp
sub
push
into
cmc
push
jg
add
out
cmp
fdivrs
dec
jle
sub
arpl
add
paddsb
arpl
mov
adc
cltd
sahf
mov
dec
pop
inc
push
sbb
gs
dec
sub
xchg
in
xor
pop
inc
pinsrw
pop
sbb
dec
push
mov
ljmp
sbb
int3
repz
jbe
xor
inc
mov
sahf
roll
call
gs
out
jns
mov
loopne
sbb
cmp
mov
push
pop
push
adc
ljmp
jg
push
fbld
push
and
shl
dec
int3
cmp
ljmp
adc
stos
mov
shrl
adc
mov
sub
mov
leave
or
cs
in
add
ljmp
decl
mov
call
jecxz
cld
ds
divb
out
mov
ljmp
loopne
and
mov
cld
loope
in
in
lcall
jb
mov
inc
clc
adc
outsl
movb
ds
adc
popa
mov
je
nop
push
push
push
ljmp
adc
inc
loope
mov
and
push
and
lret
lcall
sbb
sub
pop
inc
push
call
pop
aad
dec
icebp
or
out
push
jg
shlb
inc
vpshuflw
xor
jmp
push
sbb
test
pop
shlb
gs
into
enter
xchg
sbb
dec
cmpsb
dec
das
xchg
cmp
loop
sub
incl
call
pop
mov
mov
int3
or
mov
call
xchg
mov
lret
call
and
pop
sbb
jmp
mov
test
cmp
cli
in
and
mov
lahf
xor
pusha
mov
mov
test
sar
incl
ljmp
or
push
test
test
cmp
call
scas
mov
cmp
add
sbbb
pop
mov
and
divb
cli
in
jne
dec
mov
jae
fwait
mov
pop
or
ljmp
and
testl
ds
leave
cltd
cld
dec
push
roll
jle
outsl
fnstcw
jge
push
xlat
out
mov
xor
cmp
or
sub
pushl
jnp
cmp
mov
push
mov
cmp
inc
mov
adc
mov
idiv
decl
gs
mov
jbe
mov
inc
movsl
iret
mov
clc
sbb
jmp
mov
sar
decl
dec
sarb
push
mov
dec
das
lds
insb
mov
js
shlb
cmp
ds
and
scas
lods
rcrb
and
test
jmp
jo
cltd
adc
jmp
push
test
or
jmp
jbe
popf
data16
stos
adc
in
jbe
jns
pop
incl
aam
das
stos
fwait
add
loop
cmp
push
in
mov
das
gs
jle
loop
xchg
in
add
ret
xchg
add
xchg
push
inc
add
fisubrl
cs
inc
pop
clc
push
cmpsb
scas
sub
mov
cwtl
pop
xor
mov
popa
pop
and
leave
mov
dec
xchg
shlb
mov
incl
shrb
insb
cmp
add
pop
push
lods
ss
popf
push
mov
lcall
out
fists
push
movsb
jmp
mov
xchg
pop
jo
inc
testb
dec
mov
adc
lods
scas
popl
inc
out
lret
in
lock
iret
xor
xorl
lods
inc
call
cmpsb
mov
in
enter
sub
addr16
xor
jo
xchg
xchg
pop
insb
cmp
stos
or
dec
fcomps
pusha
scas
mov
push
mov
popf
cmp
mov
loope
mov
and
xchg
pop
stc
ja
cmp
jmp
shll
sti
mov
es
flds
mov
lret
int
inc
adc
pop
dec
adc
mov
mov
test
xchg
pop
cs
cwtl
mov
lock
dec
push
out
mov
aaa
adc
mov
pop
push
out
adc
cmc
add
cmp
pop
gs
daa
push
enter
lcall
inc
jle
push
mov
in
adc
loop
scas
shl
fwait
loopne
mov
jg
jbe
lea
loop
sbb
mov
or
repz
outsb
imul
jmp
push
rcrl
dec
lods
xchg
fiaddl
ljmp
scas
aaa
jno
cld
pop
jl
xchg
ret
incl
push
cmp
sbb
out
enter
icebp
in
sbb
cmpsb
js
pop
inc
std
cmp
or
inc
aam
and
pop
dec
insb
sub
cmp
scas
shll
dec
test
test
jmp
and
test
sub
mov
mov
jg
pop
or
fnstcw
es
fsub
sahf
lret
cld
mov
int
scas
or
xchg
std
test
cmp
jge
ds
jbe
pushl
dec
jae
xchg
out
nop
bound
lret
jecxz
inc
mov
fadds
sub
xchg
jno
int
ljmp
cli
cmp
popa
mov
add
sub
aam
and
jge
add
push
scas
mov
decl
ja,pn
push
add
ds
push
imulb
jae
pop
xchg
inc
ljmp
adc
cmp
mov
xlat
rcr
sbb
notl
arpl
ficompl
ret
dec
icebp
ror
lock
jle
xor
shl
pop
mov
repz
fucomip
insl
pop
fldcw
pop
sarl
dec
mov
bound
fists
sbb
pushl
mov
push
mov
dec
mov
mov
inc
jecxz
inc
cmp
or
bound
add
mov
rcrb
dec
cs
rcrl
bound
fld
incl
incb
aaa
imul
bnd
iret
sub
pop
or
mov
cmp
jmp
xchg
js
dec
adc
stc
push
mulb
jl
push
pop
lods
adc
daa
add
mov
sbb
adc
ret
sub
push
add
or
mov
mov
adc
outsb
jle
mov
or
jle
sub
outsb
xlat
adc
es
sub
inc
testb
pushl
rcrl
inc
rorb
jns
aam
add
arpl
push
sbb
mov
and
decl
bound
pop
sbb
sub
std
stc
mov
fstps
add
pop
ja
or
lcall
push
pop
xlat
addl
inc
and
popa
mov
xchg
push
or
call
lock
mov
aad
cmp
loop
inc
xchg
sbb
and
movsb
fstpl
lods
add
adcl
les
dec
push
xor
xchg
jo
mov
and
stc
clc
cltd
inc
cmp
incl
sub
jns
jno
push
xchg
push
loope,pt
mov
jle
js
mov
xchg
pushf
inc
pushl
pop
movsl
jecxz
rorb
mov
addr16
lahf
mov
js
lods
pop
jl
scas
mov
lcall
test
xchg
or
repnz
das
or
enter
test
stos
leave
insb
and
outsl
clc
ljmp
cmp
pop
push
lock
jp
adc
xor
sbb
mov
outsb
cmp
inc
jmp
sbb
stos
in
int3
inc
xlat
aad
sub
jnp
aaa
iret
jmp
and
bound
and
lcall
adc
out
inc
push
ljmp
gs
fucom
inc
fistl
fldl
imul
popf
add
adc
push
dec
pop
push
sub
orl
dec
stos
arpl
aaa
cld
icebp
stos
repnz
xor
cmp
cmp
out
cmc
out
dec
pop
jg
aaa
lcall
loopne
fbld
sbb
testl
inc
cmp
mov
dec
fidivl
adcl
subb
pop
jns
xor
pop
mov
out
mov
dec
adc
xor
sub
mov
ljmp
insb
loopne
repnz
test
popf
pushf
cs
add
jno
in
xor
mov
stc
pop
pop
scas
mov
lea
lcall
sbb
cs
das
dec
mov
xchg
pop
or
xchg
lds
adc
cmp
in
loopne
pushf
mov
sbb
lea
xchg
jns
or
out
jg
shlb
add
imul
int3
adc
mov
mov
shr
lds
push
movsl
inc
fdivrl
jno
or
fwait
push
mov
jle
add
lret
pushl
insb
push
mov
test
rcll
mov
adc
clc
xorb
xlat
cld
inc
sub
es
mov
dec
add
jns
fcmovnb
mov
aaa
mov
incl
mov
cmp
mov
xchg
cmc
dec
inc
mov
add
in
out
adc
scas
loop
mov
cs
pop
shufps
int
push
jne
sbb
aad
inc
das
arpl
fidivl
popa
inc
rolb
les
or
mov
sub
daa
pop
data16
shll
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
or
imul
push
insl
fimull
add
pushf
movsl
sbbl
cmp
fnsave
push
pop
push
in
sub
mov
push
jo
cwtl
add
push
ds
mov
sub
push
jnp
add
in
jg
mov
ljmp
pushf
mov
inc
fnsetpm(287
push
cld
xlat
out
adc
xor
xor
test
pop
add
mov
pop
jle
decl
adc
adc
stos
dec
xchg
nop
adc
mov
roll
movsl
mov
das
jo
outsl
cli
call
cmc
aad
fmul
lea
incb
daa
lods
add
adc
jmp
xlat
push
adc
push
sbb
push
in
adc
mov
pop
pop
mov
dec
cmc
mov
lcall
mov
daa
insb
pop
es
into
call
adc
ljmp
xchg
in
iret
pop
incl
mov
jge
push
pop
addr16
inc
inc
movsb
dec
mov
push
ljmp
inc
mov
dec
adc
pop
cmp
and
fistps
in
inc
push
cld
scas
or
test
es
jnp
ljmp
sub
fsubl
jo
pop
loop
mov
xor
pop
subl
push
jae
cmpsb
fsub
outsl
cmc
lret
scas
xchg
push
xchg
adc
jg
mov
mov
xor
xor
xor
lret
dec
sbb
cmp
pop
mov
mov
shlb
xchg
push
ss
mov
int
inc
dec
in
lahf
call
mov
loopne
mov
mov
pop
fsts
popa
lea
mov
cmp
nop
mov
ds
jg
incl
mov
jp
stos
in
outsl
dec
jnp
inc
xchg
mov
fwait
cld
fcmovnb
or
insb
fnstsw
je
adc
popa
insl
cld
inc
dec
adcb
mov
jg
sub
js
mov
lretw
pop
jmp
push
cli
mov
add
and
gs
into
mov
add
ljmp
lret
jmp
cmp
pop
sbb
or
ja
dec
clc
scas
sbb
mov
test
inc
pop
inc
inc
pop
cmp
add
xchg
jae
rorb
mov
sub
cld
and
stc
adc
sbb
lds
test
inc
cltd
rcrb
adc
xchg
pop
mov
aaa
aad
inc
add
jge
sbb
popf
sub
push
jae
decl
cmpsb
dec
std
movsl
mov
dec
sub
push
mov
xchg
lret
fistpll
ds
or
cld
call
pop
rcr
mov
test
mov
xor
xchg
sbb
wrmsr
mov
lcall
dec
and
push
xor
das
adc
pushf
aas
pop
into
loopne
fisttps
cli
push
push
hlt
jo
mov
add
xchg
roll
push
pusha
addr16
dec
mov
test
ja
repnz
call
imul
imul
add
pushl
pop
lea
jge
call
or
push
cmp
out
repnz
div
xor
in
mov
mov
cs
pop
xor
ljmp
add
fs
ljmp
rcrb
push
sbb
movsb
cvttps2pi
mov
mov
jmp
iret
fstpl
stos
dec
pop
cltd
fisttpl
pop
sbb
sahf
call
add
fidivs
sahf
loope
ljmp
stos
stos
lcall
sar
incl
add
outsb
dec
xlat
gs
jnp
jmp
outsl
scas
pop
sar
aas
cld
jg
daa
inc
test
aad
ss
pusha
push
mov
movsl
faddl
mov
rolb
sbb
pop
cmp
test
jne
in
outsb
ret
icebp
movsl
xorl
cs
push
out
sub
imull
dec
notl
pop
nop
loope
nop
addl
xor
int
cli
jbe
into
mov
adc
call
in
push
clc
repnz
rcl
pop
add
pop
cs
xor
mov
decl
push
hlt
lea
imul
mov
mov
mov
cmp
sub
inc
inc
jl
ja
xor
sbb
mov
nop
add
stc
mov
or
scas
cmp
int
clc
outsl
and
sub
adc
lods
xchg
rcrl
dec
cli
ds
jle
data16
mov
xor
fld1
js
jnp
mov
imull
in
repz
dec
in
leave
clc
das
mov
bound
call
test
jbe
shrl
jle
test
xor
leave
divb
push
int3
das
and
out
cli
mov
loopne
mov
movsb
jle
pop
notl
mov
cld
int3
insb
fstps
cmp
dec
add
jg
xchg
imul
hlt
mov
and
mov
das
shrl
push
aas
push
gs
lods
insl
ja
add
xor
loopne
pop
cld
int
add
xor
loopne
jmp
inc
test
adc
mov
call
sar
jb
dec
in
in
inc
ret
mov
push
sub
add
ljmp
in
pushf
sub
cmc
mov
mov
mov
mov
stos
jno
nop
cwtl
mov
pop
call
gs
sub
push
mov
adc
mov
add
pop
pop
mov
jmp
and
ret
inc
jp
sub
and
loopne
inc
decl
push
cmp
pop
add
sub
adc
jmp
push
inc
mov
stos
enter
sub
sub
movsl
and
aam
ljmp
in
mov
pushf
dec
pop
dec
arpl
fisubrs
xchg
test
push
dec
adc
insb
cmp
ljmp
or
mov
inc
out
push
aaa
xor
add
mov
out
incl
xchg
ret
mov
inc
inc
pop
inc
jns
fidivrl
rcrl
pop
mov
mov
leave
push
xor
jbe
and
bound
pop
mov
adc
rorb
mov
bound
adc
pop
scas
mov
call
clc
cmp
stos
adc
or
push
inc
mov
pop
loop
movsb
cli
jge
sbb
into
mov
push
xor
mov
add
fimull
arpl
jge
sub
sbb
dec
push
lret
mov
cmp
mov
subl
addr16
push
ret
sti
xchg
icebp
lcall
push
or
xor
fwait
mov
inc
aas
incl
aad
mov
andb
ds
out
sub
pop
dec
or
lcall
push
stc
in
dec
xor
inc
cmp
sbb
sub
mov
stc
pop
jl
sub
in
mov
shl
jp
xor
sti
jne
push
xor
pop
push
sub
aam
add
addr16
mov
pop
leave
pop
lods
loopne
ljmp
push
cltd
dec
outsl
jecxz
mov
inc
cmp
sbb
lcall
mov
pushl
mov
outsb
test
fnstcw
cwtl
adc
lea
fs
pop
cmc
fwait
jp
aam
inc
sbb
sub
mov
jp
adc
dec
decl
decl
xchg
cmp
movsb
lcall
in
call
scas
sarb
mov
bound
out
fdivrp
mov
imul
xchg
jbe
and
js
incl
aam
inc
inc
xchg
mov
test
cmp
addr16
cli
jl
mov
rclb
sub
mov
cs
mov
jmp
xor
movsl
clc
out
push
xchg
mov
imul
mov
outsl
jmp
decl
sub
clc
xor
inc
fs
mov
decl
mov
mov
leave
es
scas
sbb
std
out
jbe
and
mov
ljmp
sarb
sarb
add
push
aas
inc
incl
fdivl
test
xchg
push
in
imul
xor
movsl
adc
sbb
repz
cltd
mov
lahf
rcr
pop
hlt
lea
dec
ret
cld
in
cli
xchg
jp
mov
ud0
decl
mov
fists
or
or
roll
cli
and
mov
stc
fdivrl
ja
or
adc
in
or
mov
dec
inc
sub
xchg
add
pop
jo
sbb
pop
popa
ljmp
sti
inc
push
jae
fwait
xchg
mov
test
les
call
push
decl
mov
loopne
mov
or
pop
or
push
loope
inc
lahf
cld
lcall
sub
js
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
pop
fucomi
addr16
cmp
shll
enter
inc
jb
dec
mov
sub
jmp
push
gs
and
loop
inc
cli
adc
sub
outsl
cmpl
cli
call
add
cmp
mov
ret
sbbl
push
sbb
sub
mov
testl
out
clc
ljmp
jg
pop
xchg
jge
aam
out
add
or
movb
call
fisubl
data16
rol
ljmp
sub
and
ljmp
incl
loopne
cld
movsl
pop
adc
pushf
jge
je
mov
mov
rclb
into
and
sahf
push
rorb
dec
je
dec
divb
and
leave
mov
lcall
mov
cmc
daa
lcall
mov
mov
lods
cld
adcl
popa
ljmp
aaa
icebp
gs
test
les
sub
fnstsw
movsb
scas
jb
test
push
xchg
ret
scas
nop
xor
mov
push
sbb
mov
fcomip
inc
xchg
fs
or
shrl
xchg
stc
mov
xor
roll
test
pop
call
xor
in
fsubrl
roll
adc
add
pop
xchg
mov
xor
fistps
sbb
ja
adc
in
dec
in
repnz
sub
cmp
and
jg
add
pop
in
adc
ret
in
lods
repnz
sub
push
mov
dec
sub
gs
sub
mov
es
adc
dec
jle
mov
in
aaa
popf
ljmp
cli
mov
nop
and
xchg
daa
in
mov
imul
cwtl
sub
std
lcall
stos
or
cmp
push
jo
lcall
lahf
push
scas
cmp
decl
ljmp
mov
repz
out
jb
decl
inc
mov
mov
dec
cmc
xor
sbb
adc
or
test
ja
pushl
mov
lods
adc
in
pusha
xor
fstpl
in
mov
rcrb
sbb
xchg
lret
call
mov
mov
pop
or
fldl
mov
les
shrl
decl
jns
scas
and
inc
dec
jb
lock
pop
je
and
sbb
adc
sti
cmc
sbb
call
fidivrl
mov
stc
pop
stc
pop
out
pop
mov
sbbb
dec
lock
cld
mov
xchg
push
lods
xor
jo
jbe
les
mov
stos
push
fucomip
movsb
push
sbb
test
int
cmpsb
cmp
push
lods
sti
in
jo
add
mov
cli
shll
fsubrl
loop
inc
pop
jae
aad
les
lods
sub
mov
xor
or
cmp
loop
rdmsr
fistps
orl
mov
adc
push
dec
inc
ja
push
nop/reserved
decl
sub
mov
sbb
xor
sub
ljmp
nop
negl
call
and
xor
pop
cltd
call
push
jp
gs
xor
jmp
xor
mov
out
xchg
ljmp
or
pusha
cli
rorb
nop
notb
and
pop
jmp
arpl
adc
mov
call
sub
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
add
idiv
in
cltd
cmovl
jbe
outsl
into
loopne
arpl
test
cmp
mov
and
das
xchg
or
in
and
pop
popf
rcr
dec
jb
inc
inc
mov
incl
mov
cwtl
jnp
fwait
adc
inc
popa
lret
sti
sub
in
pushl
test
stc
out
and
add
cwtl
add
jg
ss
mov
sbb
dec
and
in
lret
jno
cmp
xchg
aad
lcall
mov
insb
in
scas
test
adc
mov
jle
cmp
or
xor
pushf
lds
push
cmp
dec
fs
fsubs
jmp
ds
loopne
pop
insl
xchg
pop
sub
add
xchg
mov
cmc
pop
and
or
decl
shlb
nop
das
pop
pop
scas
xchg
mov
sbb
in
jmp
push
inc
sbb
sub
rolb
aad
cmp
addb
sub
push
aam
xchg
adc
call
or
repnz
incl
mov
jno
cwtl
dec
inc
enter
js
mov
scas
mov
call
push
out
cmp
loop
push
push
add
sbb
cmp
and
sbb
push
dec
sahf
test
data16
mov
daa
cmp
aas
lock
fdiv
fsubrs
mov
or
incl
or
and
divb
ja
cwtl
xlat
sbb
lock
or
mov
inc
loop
fmul
inc
outsl
dec
adc
cmpsl
lcall
push
push
push
ljmp
pop
stc
adc
pop
inc
jno
into
push
scas
das
lret
das
mov
mov
loopne
ljmp
mov
mov
mov
and
inc
nop
stos
push
out
hlt
mov
ljmp
cli
push
jge
arpl
loopne
inc
sub
sub
daa
pop
pop
jle
jmp
jmp
test
xchg
mov
cmpsb
ja
cli
or
push
pop
cwtl
or
push
or
pushl
test
inc
xchg
cmc
icebp
in
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
pop
jl
xchg
or
xchg
mov
insb
dec
fisubs
mov
inc
jecxz
sbb
adc
mov
lds
jb
cmpsl
stos
lret
adc
je
push
jmp
aad
fsubs
push
inc
inc
cli
xor
add
rolb
fadd
ljmp
mov
movsl
adc
pop
repnz
stos
aad
and
push
bound
mov
fsubl
mov
mov
mov
mov
shr
adc
outsl
pop
ljmp
add
shll
movsb
imul
cmp
outsl
in
inc
test
addr16
jnp
dec
insb
fidivrs
mov
lock
dec
js
pushl
jns
out
imul
mov
mov
dec
xchg
loope
in
in
push
sbb
cmp
call
jg
ret
push
movb
inc
cwtl
xor
pop
jge
mov
sub
roll
into
cmp
xchg
sub
mov
das
adc
jno
cmpsl
out
mov
in
and
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
scas
add
dec
and
out
xchg
aad
mov
sbb
fiaddl
out
daa
sbb
or
mov
fidivs
push
dec
aad
insb
out
xor
xor
das
cli
mov
push
xchg
mov
inc
call
add
or
and
jge
je
dec
decl
scas
jns
dec
call
jg
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
pushl
xchg
outsb
mov
clc
outsb
inc
rcr
lea
int
test
sub
call
fidivrs
and
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
stc
pop
inc
mov
mov
inc
and
cmpsl
mov
xor
lahf
mov
cwtl
movsb
std
decl
and
sahf
dec
ficomps
pop
push
push
sbbl
bound
adc
xor
and
jg
add
test
scas
push
inc
sub
ljmp
hlt
pop
sbb
aas
test
push
cmp
jge
into
sub
pop
shll
mov
sbb
fdivr
mov
mov
push
out
jae
add
popf
aas
and
test
es
ljmp
stos
add
or
adc
xor
sbb
cmp
add
subps
je
adc
popa
add
pop
mov
sub
sub
call
negb
push
push
jmp
cli
cs
sub
pop
mov
decl
cmp
adc
jno
nop
decb
insl
les
lcall
jmp
mov
iret
or
lret
out
mov
push
testl
call
aas
imul
adc
sahf
inc
into
mov
in
mov
cmpl
shlb
mov
leave
add
daa
insl
mov
aad
push
xlat
mov
and
std
and
jne
call
aad
push
xchg
in
popa
fs
jb
lret
pop
pop
sub
popa
insl
and
das
stc
into
in
jae
call
jb
addr16
or
popf
push
imul
push
sub
out
mov
pushf
pushl
cli
ljmp
rorb
mov
je
or
mov
jb
mov
das
ret
rol
push
aad
xor
aam
ljmp
dec
scas
push
or
mov
fbstp
insl
sbb
nop
in
stc
lods
dec
and
ja
pushf
mov
call
xchg
gs
frstor
and
mov
icebp
adc
faddl
incl
pop
dec
inc
shrb
jg
add
outsb
adc
into
mull
mov
sub
ds
adc
xor
mov
cltd
inc
adc
push
mov
xchg
lods
sub
pop
cld
jmp
ljmp
dec
dec
pop
stos
or
inc
dec
add
test
jmp
movsl
sub
in
xchg
aam
xchg
adc
sbb
ud1
xchg
lds
ljmp
sub
add
xor
pop
mov
xchg
xor
sub
pop
insl
pushl
mov
lahf
push
fs
popf
test
hlt
sub
insl
mov
dec
xor
arpl
js
jmp
stos
cli
loopne
daa
aam
and
inc
sub
cmp
decb
inc
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
popf
mov
js
sub
hlt
pop
std
call
push
pop
arpl
test
les
sbb
and
aam
int
pop
rclb
jns
jmp
arpl
adc
push
outsb
rcll
nop
push
loopne
xorl
loope
xchg
push
add
movsl
ljmp
cltd
out
xchg
dec
or
or
stc
pop
rolb
popa
addb
lds
sbb
ja
ljmp
mov
stc
and
les
fisubrs
fcmovne
pushf
adc
sbb
in
sub
sub
push
lret
stc
sbb
mov
push
js
sbb
lods
rclb
clc
push
stos
fists
xchg
xor
mov
mov
test
shll
xchg
gs
pop
inc
scas
cli
add
mov
adc
jns
jae
popa
das
testb
xor
and
jg
push
int
xor
aad
lods
ret
sahf
fistpl
ret
es
xor
lcall
adc
sbb
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
call
cld
pop
inc
sbb
repz
cmpsl
lds
inc
lea
adc
leave
andb
call
iret
ja
push
inc
leave
jle
xor
loope
in
pop
cmp
mov
lcall
xor
xchg
mov
mov
jo
jg
push
lret
bound
fistps
insl
dec
pop
hlt
cld
jg
out
shl
sbb
cmp
sub
orb
ss
mov
jmp
popf
mov
hlt
pop
dec
mov
cmp
cmpsl
mov
sar
loop
hlt
mov
orl
lcall
sbb
fcomps
and
outsb
aaa
fbld
mov
test
ja
jp
pop
mov
ljmp
lds
mov
mov
sub
test
or
pop
ret
fildl
loop
inc
inc
xchg
jno
jns
shl
adc
call
mov
ret
sub
mov
cmpsb
inc
nop
negb
dec
loop
add
push
pop
adc
ficompl
aam
xchg
pushl
xchg
or
jo
sub
fs
fcmovb
and
xor
xchg
loope
and
outsb
dec
lea
dec
popa
daa
jns
jae
pushf
xor
push
cmp
adc
pushl
inc
dec
loop
push
or
daa
dec
test
cmpsb
mov
mov
adc
xor
ljmp
or
sub
inc
adc
sub
sahf
and
sbb
roll
lcall
mov
push
enter
aad
test
mov
adc
lcall
xchg
lods
les
jmp
or
daa
mov
fucomp
fs
je
push
push
mov
push
ret
inc
jecxz
jecxz
pop
inc
mov
jecxz
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
inc
fsubp
lds
movsl
mov
xor
repz
mov
notl
lcall
popf
nop
mov
rcl
cmp
imul
cs
xchg
ss
mov
out
mov
das
fcoms
inc
sub
fistl
inc
in
cmp
sahf
add
cli
aad
imull
xchg
add
test
ret
cmp
je
sub
lcall
pushl
sti
popa
mov
mov
rcrb
repnz
sti
xchg
call
pop
out
out
or
aas
je
push
mov
cmc
inc
into
mov
decl
sub
pop
iret
imul
add
rorb
loopne
jmp
sbb
imul
call
and
mov
sbb
mov
mov
or
int
mov
rolb
jno
out
mov
lock
and
xor
cmpsb
mov
call
inc
cmpsb
movsl
jecxz
stos
and
sbb
sub
mov
jp
decl
jns
mov
icebp
push
scas
test
dec
push
sahf
inc
test
pushf
cmpsb
repnz
inc
nop
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
ljmp
adc
mov
xlat
inc
loop
lds
dec
ds
loope
add
mov
bound
lcall
aaa
jno
push
adc
xor
or
mov
in
inc
and
loope
bnd
ljmp
hlt
fbstp
lret
mov
fsubr
jbe
jecxz
mov
incl
enter
push
xor
push
pop
push
cmpsb
adc
imul
add
negl
cs
dec
arpl
andl
sub
xchg
jp
popf
mov
xor
mov
dec
cmp
adc
popf
xchg
test
or
ds
lcall
iret
jmp
test
xchg
lock
ljmp
sbb
movsl
jl
mov
sbbb
push
arpl
ret
jg
sbb
sbb
lock
pop
outsb
push
jb
lret
mov
xor
stos
int3
les
pop
mov
sbb
pop
xor
dec
mov
jnp
mov
sub
cmp
in
xchg
sbb
dec
in
fildll
xchg
mov
xchg
lret
js
movzwl
xlat
repnz
maskmovq
testl
xchg
arpl
test
mov
ljmp
pop
loope
mov
jmp
movsb
or
fmull
cmp
lock
cmp
jbe
lods
xor
das
ja
jmp
mov
loope
inc
lahf
movsb
sub
adc
in
loop
lcall
pop
popf
jnp
into
ja
shll
cmp
mov
fistpl
lcall
dec
inc
cmp
pop
cmp
icebp
cs
pop
cmp
pop
pop
shlw
inc
xchg
pop
andb
dec
jb
jb
test
test
pop
aaa
stos
add
xor
sub
lock
mov
dec
mov
pusha
data16
aaa
rcrl
dec
jno
mov
incl
pop
lds
addr16
into
pop
fwait
inc
aas
lea
xchg
cwtl
stc
push
sub
test
xor
pushl
int
les
lcall
lods
jnp
and
cs
ror
popfw
add
inc
add
frstor
test
jno
dec
cld
push
xchg
lods
add
mov
decl
fidivs
xchg
cltd
sub
test
iret
xchg
xchg
imul
inc
lock
decl
adc
aas
or
pop
and
faddp
xchg
jmp
notb
xor
fbstp
push
sub
test
sbb
inc
addr16
js
pusha
imul
repnz
jno
das
pop
or
sub
idivl
mov
pushl
lea
pop
repz
jne
push
outsl
fs
stos
pop
jle
jg
test
decb
call
lret
insb
and
orb
cmp
rcll
jmp
adc
hlt
int3
mov
push
mov
pop
ljmp
enter
fcom
cmpsb
lcall
cmc
fwait
stc
stc
aaa
cmp
xor
jb
cltd
lods
in
repz
jmp
mov
add
js
xor
add
xchg
pop
push
pop
cmp
mov
lods
call
movsb
clc
dec
imul
xor
outsb
sbb
scas
mov
sub
movsl
jmp
sti
shll
cmc
push
mov
inc
loopne
mov
push
insb
xchg
repnz
lds
out
inc
add
dec
mov
cwtl
xor
icebp
rcrl
sbb
xchg
sub
mov
decl
or
pop
cmp
not
adc
xchg
imul
insl
pop
cmp
sbb
sub
int3
out
inc
push
inc
mov
mov
xor
test
sbb
ljmp
sub
int3
push
sbb
adcl
lods
add
mov
add
call
cmp
xor
jp
adc
ret
into
iret
notb
jnp
std
sahf
inc
sbb
and
jl
add
test
lcall
mov
lods
fldenv
lahf
outsl
push
les
insl
mov
icebp
or
fwait
xcrypt-cbc
cmpsl
aam
mov
bnd
and
aad
scas
jle
mov
ret
sub
mov
stos
lods
aas
in
faddp
adc
mov
es
ja
das
mov
jmp
icebp
cmp
mov
ljmp
lcall
fnstenv
cwtl
xor
aas
xor
add
adc
cld
aaa
fiaddl
or
in
std
pop
pop
aas
push
jb
dec
pop
lea
inc
or
faddl
fildl
mov
out
cmc
dec
mov
xchg
sbb
sub
out
mov
xchg
bound
jmp
lret
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
mov
shll
adc
jl
xchg
outsb
and
ret
adc
testb
cmp
sbb
pop
leave
xor
lcall
aaa
mov
dec
jecxz
adc
push
idivl
into
andb
lods
lahf
or
and
shrl
dec
cmp
lcall
jb
xor
sbb
fwait
and
lods
je
sbb
test
xor
imul
mov
push
aam
inc
outsl
push
stc
add
push
and
mov
lcall
loop
jo
cmc
lret
sbb
jo
push
dec
sahf
dec
push
push
or
xchg
cmp
jmp
push
mov
fstps
daa
stos
shll
xor
pop
lock
xchg
insl
sub
mov
pop
out
pop
add
aam
or
fsts
fcompl
and
shlb
fwait
mov
inc
mov
test
sbb
mov
mov
incl
test
push
push
mov
into
in
or
ret
std
adc
rclb
mov
xchg
pusha
jg
iret
pop
jb
adc
jp
mov
pop
mov
fnstcw
arpl
pushl
mov
mov
outsb
xlat
cmp
jnp
jg
std
and
lcall
movsb
shlb
or
xchg
enter
inc
ret
sub
aaa
jge
mov
mov
aam
out
and
test
xchg
inc
ja
add
add
xchg
ljmp
fidivrl
sbb
cmp
rcrl
sbb
dec
mov
insb
cmp
fmulp
sub
scas
sub
jno
xor
test
sbb
ds
mov
pop
out
inc
test
jmp
in
addr16
jmp
pop
fiadds
loop
adc
jg
xlat
stos
pop
ljmp
mov
jae
js
lea
repnz
daa
call
shll
lcall
jge
inc
mov
loop
adcb
gs
xor
arpl
mov
test
into
push
add
jbe
mov
shrl
stc
xor
stos
cltd
mov
insb
leave
push
and
ljmp
cmp
insb
andb
bound
stc
xchg
pop
mov
dec
in
pop
subb
pushl
in
jp
scas
push
in
ljmp
dec
stos
xchg
icebp
std
enter
jecxz
mov
ljmp
js
inc
test
xor
cmp
cld
and
mov
or
ja
rorb
dec
bswap
test
inc
push
or
cmp
inc
outsb
ret
test
jg
test
push
or
dec
jnp
mov
pushf
sub
pop
inc
pop
fcomps
jg
mov
call
add
test
mov
mov
cmp
cmp
out
sbb
inc
imul
mov
call
cmpsb
mov
fdivrl
pop
cwtl
sahf
adcb
push
ja
push
jl
imul
decl
xchg
ja
mov
out
mov
roll
pop
icebp
pop
or
divl
push
jge
mov
testb
cmp
mov
ror
and
test
add
repnz
cli
jg
pop
mov
inc
cmc
cli
int3
cwtl
mov
xor
mov
pushl
and
pop
or
add
jg
les
inc
cli
add
pop
and
aad
popa
mov
mov
dec
js
loope
xor
mov
stc
in
ficoms
pop
test
pop
mov
mov
lcall
xchg
call
push
push
push
rcrl
or
mov
and
xchg
rcll
or
test
sub
std
pop
inc
mov
daa
stos
fadd
and
dec
out
or
fbld
popl
enter
xchg
xor
sarb
cli
cmp
adc
adc
push
mov
shrl
jae
xor
aaa
aas
xchg
xor
jmp
mov
int
sti
aam
jb,pt
shll
jge
ds
bound
or
fisubs
aaa
or
sahf
cmc
pop
jbe
sbb
jmp
xchg
out
in
int
cmp
fmuls
test
xor
outsb
inc
push
sub
aad
mov
xchg
mov
push
cmp
decl
in
scas
and
adc
adc
imull
jmp
push
sbb
inc
pop
jmp
incl
jns
loope
lea
mov
xchg
add
inc
lea
icebp
ret
ds
xchg
lcall
pop
mov
gs
sub
mov
inc
pop
dec
push
stos
add
sub
cmpsl
xchg
push
decl
in
rclb
adc
cld
in
inc
insb
xor
ljmp
and
cmp
shrl
enter
aad
mov
inc
hlt
ljmp
clc
sbb
adc
xchg
cmc
js
fiaddl
outsb
out
stos
jno
add
dec
pop
repz
mov
lcall
xchg
jo
incl
and
jle
sbb
mov
shlb
fnstenv
icebp
mov
pushf
call
xchg
sbb
cmp
gs
xchg
jb
cmp
mov
ss
mov
stos
int3
fdivs
shlb
out
adc
inc
scas
and
push
mov
incl
ret
aam
jns
shlb
cmp
mov
inc
fcoms
enter
rcr
xor
ljmp
mov
sbb
push
mov
mov
lds
faddp
icebp
cltd
mov
sub
or
out
out
setbe
in
mov
das
sar
jae
stos
sub
xor
fs
in
pushl
jmp
mov
daa
inc
das
and
add
ret
loopne
mov
out
ja
cmp
decl
fstps
out
incl
adc
dec
mov
mov
adc
mov
or
and
decl
lcall
fldl
sbb
ds
inc
xor
cld
add
jmp
imul
hlt
sbbb
insl
decb
into
jmp
pop
add
mov
jmp
mov
popa
fdiv
and
or
sbb
sbb
jle
pushl
dec
rcrl
pop
pop
aas
out
mov
and
test
lret
sahf
inc
clc
mov
pop
clc
dec
dec
and
cmp
iret
cmp
into
xchg
subb
push
adc
ljmp
stos
push
testb
pop
pop
dec
inc
cmpsb
cmp
data16
mov
in
in
daa
add
xor
popa
push
jp
push
inc
jns
xchg
daa
xchg
gs
and
xor
sbb
ljmp
nop
sbbl
in
insb
push
jne
ljmp
pop
xchg
pop
sub
sub
mov
xlat
call
jmp
mov
lret
std
notl
mov
jecxz
js
push
mov
pushf
inc
in
mov
orb
outsb
imul
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
outsl
mov
cmp
xor
adc
pop
jl
jae
clc
push
scas
clc
ljmp
fidivrs
loope
pop
shlb
mov
cmp
aas
ja
cmp
pusha
outsb
mov
nop
aas
adc
jmp
aam
add
jmp
push
loop
cmp
mov
aam
loopne
int
add
call
or
sub
leave
push
ljmp
pop
sahf
testl
aam
dec
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
sti
jmp
mov
aaa
dec
insb
adc
fmull
cmp
inc
cmp
mov
jmp
mov
add
call
or
sbb
push
jl
jno
shlb
push
gs
hlt
lcall
push
mov
cmp
mov
jno
mov
sbb
ljmp
fimull
xchg
or
arpl
mov
lret
pop
shlb
ja
lret
outsl
call
push
lcall
mov
inc
decb
sbb
jno
jno
pop
xor
mov
call
xor
sbb
jns
inc
dec
adc
popa
mov
sti
fstpt
add
incl
popa
push
adc
xchg
call
fidivl
je
or
push
cmp
incl
mov
cmp
out
rcl
mov
mov
jno
xchg
sbb
ljmp
adc
push
clc
daa
mov
cs
nop
jo
rcll
adc
cmp
add
lret
out
pop
cli
inc
pop
imul
lcall
test
jne
and
incl
dec
mov
mov
or
pushf
fwait
stos
shlb
or
cmp
ss
call
cmp
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
add
outsb
js
sub
jns
pop
mov
xor
fmulp
jmp
jbe
testl
cli
push
das
xchg
cld
or
lahf
adc
mov
fldt
dec
xlat
stc
ja
arpl
and
mov
shlb
jmp
mov
repnz
dec
pop
push
inc
sub
mov
bound
fbld
mov
adc
pop
xor
mov
and
bound
jmp
in
xchg
mov
cmc
or
dec
sbb
daa
mov
adc
jge
and
lcall
lcall
add
mov
and
jb
into
out
push
adc
fcomi
push
jmp
fstpt
or
xchg
add
pop
outsb
adcb
add
aam
lods
adc
mov
fstpt
and
hlt
add
in
add
inc
pop
cs
je
inc
sbb
adc
sbb
dec
sbb
outsb
lcall
jb
leave
rcll
xor
arpl
decl
xlat
inc
lock
mov
movsl
sahf
arpl
inc
adc
in
sub
subb
scas
push
lea
imul
imul
pop
add
stc
add
or
sub
outsl
cli
push
or
mov
pop
inc
ficomps
fwait
sahf
dec
sub
in
sahf
fidivs
dec
push
mov
sbb
fwait
mov
lahf
xor
scas
out
shrb
fists
pop
fsubrs
imul
movsl
or
pop
jp
adc
or
sub
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
add
ljmp
and
popf
sbbl
pop
pop
arpl
pop
mov
pushl
mov
xchg
mov
fwait
sub
pusha
insb
and
mov
jbe
xchg
push
ret
jmp
fsub
call
cs
xchg
cmc
aas
sub
jo
movl
jmp
fstpl
fcmovne
lret
xor
mov
xlat
sti
movaps
insl
mov
arpl
mov
fisubs
cmp
cmp
adc
jns
cmp
xlat
adc
mov
mov
rcrb
lods
adc
aaa
lret
in
xchg
dec
xchg
jno
call
jl
shlb
mov
xor
popa
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
sub
insb
add
incl
lods
out
andl
cs
mov
incl
arpl
push
and
or
icebp
mov
xor
xchg
subb
lret
aaa
enter
daa
mov
xor
inc
mov
mov
popa
pop
stos
sub
jl
lcall
jb
lcall
out
dec
jmp
imul
mov
arpl
aad
jno
lcall
addb
mov
pusha
push
pop
push
stos
or
cmpl
ret
repz
dec
lock
cmpsl
mov
jle
insl
xchg
cmpb
fwait
icebp
je
aad
std
fidivrl
call
cmc
or
jecxz
xchg
inc
xchg
cmp
incl
jno
lahf
aam
out
sbb
jo
aas
outsl
cmp
sub
addr16
mov
xchg
cmpsb
jbe
dec
mov
jae
xor
xchg
fistpll
mov
scas
in
push
fdiv
jmp
dec
std
jns
mov
sbb
pusha
cmp
fcomip
jbe
out
in
cmp
ja
xchg
out
inc
xor
xor
push
xchg
adc
mov
xchg
test
scas
movb
dec
aam
je
jnp
push
sub
or
in
cmpsl
cli
gs
dec
dec
xchg
pop
idivl
sbb
mov
cmp
pushl
dec
enter
iret
sbb
cmc
cs
loopne
mov
je
mov
loopne
mov
incl
cmpsb
push
out
add
daa
dec
pop
sti
das
pop
scas
je
push
mov
pop
out
inc
cmp
in
xchg
sub
add
adcl
mov
mov
sarb
out
jg
fucom
fwait
or
std
add
add
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
es
cld
mov
enter
pushl
adc
mov
ss
inc
ds
mov
cltd
pushf
popa
jnp
xor
sti
ljmp
and
cli
sub
imul
cmpsl
push
into
fists
pop
lret
jae
xchg
loope
ljmp
pop
mov
xor
imul
and
shrb
sti
fnstcw
pop
mov
pop
movsl
lcall
fistpl
test
add
lcall
or
test
mov
sub
call
es
or
sbb
inc
lods
fiadds
dec
leave
cmpl
jmp
sahf
lret
test
icebp
push
fistl
and
cmpsb
sbb
inc
xchg
adc
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
loopne
vpperm
pushl
cmp
inc
lods
sub
arpl
mov
lods
repnz
callw
jle
cmc
test
addb
jl
push
xchg
adc
and
out
add
ljmp
push
xor
loopne
insl
dec
lcall
pop
sub
fisttpll
dec
lret
mov
insl
popf
xlat
incl
imul
inc
ja
xor
loopne
ljmp
adc
daa
das
xchg
mull
jns
sub
into
leave
imul
sub
mov
mov
adc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
dec
inc
clc
or
cmp
lods
mov
into
sahf
loope
lds
sub
lea
jmp
fisttpll
int
mov
push
jle
pop
inc
mov
lret
adc
mov
idivl
jmp
cmp
jnp
jnp
mov
xchg
mov
xchg
into
xchg
push
in
cmpsl
in
cmp
mov
in
lret
pop
sbb
out
idiv
dec
rol
in
fiadds
call
mov
insb
ja
mov
nop
add
or
inc
adc
inc
push
std
stc
mov
inc
push
incl
push
mov
out
inc
mov
ljmp
sub
push
inc
sbb
pop
add
int3
ficoms
mov
repnz
pushl
mov
cmp
stc
sub
adc
pop
jl
jle
or
mov
jl
push
das
std
mov
pop
outsb
xor
push
sub
popa
fdivp
pop
fnsave
incl
lods
mov
daa
and
shll
add
xchg
mov
decl
test
imul
es
push
fstpt
mov
dec
xchg
jle
jg
adc
ret
jmp
inc
cmp
jl
dec
testb
or
lds
xor
insl
imul
mov
push
pop
aam
add
lret
ret
test
shlb
fmull
or
stc
mov
outsl
incl
sbb
push
into
pop
xor
adc
cmpsb
out
sub
dec
aaa
clc
dec
popf
decl
ds
mov
rol
pop
jo
es
pusha
stos
mov
xor
out
mov
sbbb
and
xor
mov
lcall
sbb
sbb
ja
push
sub
and
sub
popf
push
pop
inc
ss
cld
adc
jg
mov
mov
and
stos
dec
xchg
repz
xorb
mov
xor
add
mov
test
jo
mov
rcr
lea
xor
pop
ss
shlb
add
lods
bound
outsl
decw
hlt
lods
inc
mov
sub
pop
ret
sub
dec
dec
lea
not
mov
mov
dec
lock
out
pop
xchg
jmp
cmp
pushf
xchg
xchg
xor
adc
sbb
cmc
cmpb
sbb
push
and
fisttpll
notl
fsubrs
stos
add
or
stos
mov
adc
ljmp
pop
push
shrl
push
or
sbbb
pop
sub
and
bound
xchg
jp
sbb
xor
lea
fs
sarl
fstpt
call
decl
loope
and
jnp
dec
js
insl
lods
lret
and
mov
call
shlb
and
or
pop
daa
lahf
int
and
cmpsb
or
lcall
outsb
iret
stc
push
cmp
idiv
aam
cmp
jb
mov
adc
filds
dec
mov
mov
push
adc
int
push
fnstcw
repnz
push
pop
decl
in
cs
or
shl
push
cmp
repz
outsl
pushf
push
cmpsb
insl
adc
pop
jle
ljmp
and
lcall
fdivs
fwait
inc
shrl
xchg
int3
loop
mov
out
cmp
jg
xchg
pop
cmp
cmp
push
jle
loope
aad
dec
add
pop
dec
sbb
rolb
ljmp
rcll
pushf
ja
loopne
jecxz
rorb
insb
xchg
mov
test
sub
xchg
aas
sub
fstpt
adcl
xor
std
imul
xchg
call
mov
shlb
leave
popa
test
mov
ficomps
in
movsl
push
jg
incb
adc
fldenv
les
mov
fwait
or
call
call
jno
dec
fwait
ss
push
add
aam
mov
sbb
pop
cs
mov
xlat
das
sbb
mov
cli
inc
push
aad
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
inc
dec
insb
xchg
jno
lcall
sti
add
lcall
mov
and
or
xor
sarl
jmp
mov
xor
in
inc
or
push
call
aad
popa
fwait
xchg
sbbb
mov
lcall
cmpl
xchg
mov
stos
popa
mov
dec
lods
sbb
mov
fbstp
jecxz
mov
dec
loop
aam
push
mov
inc
cmc
pop
es
cmp
aam
decl
lock
mov
imul
int
std
lods
out
mov
mov
xchg
mov
push
in
inc
inc
mov
pop
rcl
decl
jbe
mov
and
aam
dec
sbb
popf
jno
popf
xchg
jb
and
leave
xor
pushl
sbb
mov
out
inc
outsl
adc
adc
inc
in
sbb
out
or
cmpsl
adc
push
rorb
inc
testl
inc
xor
dec
inc
fsubs
add
test
cmovbe
mov
jmp
add
jne
ss
stos
sub
ljmp
jl
xchg
pop
inc
gs
call
aaa
scas
add
sahf
adc
movsl
xchg
in
icebp
adc
jg
push
fwait
inc
scas
adc
add
lahf
clc
cld
cmc
test
adc
adc
fbld
test
mov
dec
je
ret
inc
das
add
sti
rclb
push
enter
xor
jp
pushl
std
popa
mov
es
stc
mov
mov
push
fildl
hlt
inc
pushl
lods
xor
jecxz
sahf
add
dec
jno
lret
push
jp
sahf
aas
repnz
out
sahf
in
sbb
pop
ljmp
sbb
dec
jp
inc
ficomps
add
sub
and
sbb
stos
movsl
add
ljmp
in
lret
lea
inc
mov
inc
xor
pop
ret
in
push
mov
scas
or
mov
ret
mov
scas
xor
sti
mov
inc
jo
lcall
fsubs
sbb
xorl
and
das
out
jle
adc
jle
sub
movsl
and
pushl
jg
adc
pop
popa
cmp
mov
jmp
sub
adc
decl
bound
xor
in
enter
cmpl
push
sbb
adc
adc
sbb
xchg
ds
jnp
adcb
decl
lock
dec
data16
sub
lret
idiv
test
mov
fsub
repnz
incl
bound
or
xchg
sbb
lret
out
cmp
in
shll
jne
clc
repz
push
xchg
jg
jmp
jg
sbb
push
adc
mov
mov
out
ljmp
sub
sbb
repz
pop
int3
ss
or
push
push
shrb
push
mov
lret
and
jne
push
stos
leave
cld
inc
in
push
add
clc
stos
or
sbb
xchg
mov
loop
in
fcomps
negl
xlat
lahf
leave
inc
insb
out
xorb
ljmp
lahf
xor
rcl
test
xor
sub
dec
call
fldcw
inc
ds
jl
mov
mov
insl
push
aaa
les
ret
push
sub
or
jmp
jge
adc
lock
pushl
xchg
fildll
push
lcall
jmp
ret
jmp
movsl
mov
xor
in
mov
mov
adc
shl
pop
test
mov
sar
mov
frstor
xchg
jo
or
call
or
fstps
mov
pop
mov
test
mov
clc
cmp
jns
lea
ljmp
aas
popf
xor
scas
pop
fldenv
bswap
hlt
sbb
loop
jl
sub
push
cli
sbb
test
pop
adcl
std
lcall
mov
shrl
fsubrl
out
ja
sbbb
and
daa
jne
leave
ss
sar
pushl
ljmp
into
pop
jecxz
or
sub
add
in
filds
mov
mov
insl
pop
push
js
mov
arpl
ljmp
fs
mov
cltd
in
add
jns
sub
and
pushl
insb
int3
mov
lcall
int3
cmp
jl
out
jbe
sbb
clc
frstor
rclb
or
sbb
jb
push
jne
jo
popf
test
pxor
in
mov
dec
sti
insl
sbb
push
imul
ljmp
cmp
repnz
jno
cmp
testl
mov
clc
call
jmp
or
test
test
pushl
incb
pop
mov
add
jp
out
dec
loopne
xchg
mov
cmp
or
outsb
stc
stc
imull
aas
ss
mov
shrl
adc
pushl
repz
mov
out
jb
jle
jg
push
mov
lahf
xor
lods
test
inc
rclb
push
lret
daa
mov
mov
decl
idiv
inc
mov
push
push
dec
incl
xor
pop
cmp
and
push
stos
or
mov
decl
fmuls
sti
sub
push
dec
cmp
ja
fstp
cmp
mov
jne
inc
cli
jl
cmp
adc
push
add
push
cwtl
sti
pop
cmp
andl
push
adc
incl
cmp
clc
dec
cmp
mov
aaa
push
push
jp
call
stos
cli
aad
shlb
repnz
push
movsb
cmpb
out
sbb
jmp
hlt
movsb
sbb
imul
stc
cmp
cmp
lret
cmp
cmc
lcall
mov
stc
add
stc
sub
xor
lods
push
cmpsb
dec
xchg
int3
sbb
sub
pop
subl
and
decl
pop
cmpsb
jg
push
add
inc
sub
sub
cmp
out
adc
add
jmp
sub
mov
mov
jp
or
mov
jno
adc
bound
dec
adc
inc
lea
in
push
sbb
xchg
test
jle
cmp
sub
dec
pusha
stc
test
loope
leave
jg
das
push
pop
outsl
cltd
dec
add
mov
fimuls
gs
dec
pop
mov
loopne
mov
cli
dec
mov
out
idivb
or
cmp
repnz
mov
test
ljmp
jno
and
mov
enter
clc
call
mov
arpl
push
sbb
mov
add
jae
in
lret
jecxz
decl
dec
popf
mov
inc
lock
jns
nop
dec
mov
test
xchg
ss
outsl
data16
cmpsl
fcos
incl
imul
sub
push
daa
fsts
jl
mov
cmpl
scas
adc
or
fcmovb
incl
leave
fwait
sub
ljmpw
filds
lods
shll
cmp
shr
pop
dec
daa
mov
push
mov
push
cmp
call
lea
es
inc
adc
outsl
std
enter
cs
jmp
cs
dec
insb
dec
mov
jmp
xchg
or
mov
call
mov
lods
rcrl
inc
cmp
enter
clc
mov
dec
pop
adc
incl
mov
and
sub
call
dec
arpl
pop
push
or
mov
push
or
dec
addr16
mov
xchg
ljmp
mov
mov
ljmp
xlat
adc
fsubrl
out
pop
mov
cmp
adc
out
and
incl
jle
arpl
ja
inc
negl
add
xor
push
mov
aad
xchg
and
or
or
mov
pop
jns
jp
jg
incl
clc
xor
dec
loopne
sbb
and
push
inc
mov
jecxz
inc
ss
mov
pop
inc
pop
xchg
loope
sti
daa
jge
cli
icebp
aad
das
jnp
dec
pop
pop
loopne
mov
mov
int3
or
pusha
jno
iret
push
mov
adc
outsl
cli
decl
in
out
mov
pop
mov
std
jbe
sbb
movsl
mov
sbb
inc
repnz
imul
test
cmp
mov
lahf
mov
mov
ja
rol
aas
dec
push
std
call
lock
push
pop
je
add
push
out
inc
sbbb
add
cmpsb
lahf
loope
jns
ljmp
sbb
fmull
fisubs
clc
mov
push
push
adc
pushf
sbb
inc
sbb
pop
lcall
dec
xor
or
jle
mov
jmp
lock
or
bound
sub
or
roll
sub
mov
arpl
addr16
out
sbb
jo
loop
xchg
stos
subl
cmp
leave
add
mov
enter
adcl
add
ja
js
rcrb
pop
cmp
addb
xor
scas
xlat
xorl
mov
pushl
aas
add
cmp
ja
mov
pop
inc
fidivrl
push
mov
xor
orb
clc
cmp
out
and
xchg
inc
dec
iret
mov
push
xchg
cmpsl
pop
jg
jle
jecxz
mov
outsl
adc
gs
push
jb
inc
clc
mov
lahf
ds
add
fisubrs
cli
in
or
fiadds
imul
jbe
int3
daa
mov
mov
add
lea
pop
decl
cmp
xor
or
insl
xrelease
add
into
rcrb
pop
lcall
aam
pop
cs
dec
and
mov
push
testb
invd
push
pop
aam
aaa
std
incl
pop
adc
add
lahf
inc
nop
xchg
sub
js
jmp
xor
mov
pop
orb
mov
int
arpl
movsb
sub
fimuls
call
out
daa
aaa
and
push
les
or
jl
cmpsl
mov
push
jae
or
sahf
test
push
or
sub
loop
pop
mov
inc
lret
dec
xchg
ss
adc
incl
fcomps
push
jecxz
xor
popf
xlat
or
sahf
push
jne
lds
addr16
pop
loopne
pushl
jo
insb
divl
xor
or
dec
mov
cmpsl
ljmp
orb
cmpsb
mov
add
jnp
hlt
inc
xor
scas
inc
pop
mov
mov
mov
mov
xchg
stos
cmp
sub
mov
adc
into
mov
pusha
daa
inc
div
inc
sbb
mov
mov
imull
cs
dec
shll
incl
stos
sub
jp
rorb
lea
movsb
les
add
test
sbb
rolb
movsl
push
addb
jnp
das
mov
push
fstps
out
xchg
adc
mov
mov
jg
pushf
and
clc
jmp
jae
movsb
sub
loopne
fwait
sbb
mov
jb
test
cmc
out
test
pop
inc
imul
mov
loope
jns
hlt
jg
aad
inc
xor
test
add
xor
jmp
mov
dec
dec
ljmp
in
lock
in
filds
int3
push
jg
add
mov
call
dec
dec
mov
in
adc
insb
popa
insb
test
addr16
stos
jmp
pusha
push
pop
pop
xlat
std
call
fs
lods
loope
and
mov
getsec
pushw
mov
jmp
inc
lods
dec
push
dec
pushl
rcrb
jge
push
movsb
jmp
aad
stos
and
mov
lock
sbb
or
mov
es
mov
jo
aam
jae
data16
call
push
imul
popa
add
sbb
mov
lcall
push
xchg
negb
in
enter
push
mov
test
push
dec
dec
mov
clc
decl
mov
push
faddl
out
push
add
mov
divl
lcall
mov
jo
inc
in
mov
stc
cli
push
adc
fsubrs
out
add
lea
stc
notb
lods
dec
loop
les
cmp
sub
sbb
jno
jl
lcall
push
push
cmp
cld
addl
add
inc
inc
sbb
adc
sti
cld
pop
movsb
sub
xor
ds
ja
sarl
aaa
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
jp
sbb
in
cmp
insb
loopne
push
incl
xlat
jne
stc
fldcw
les
fdivs
push
inc
xor
dec
aad
jmp
lea
adc
ret
lds
mov
pop
pop
push
ret
or
pop
dec
add
aas
sbb
cs
into
xchg
sahf
and
adc
or
xchg
mov
xor
mov
std
push
push
scas
inc
popa
and
imul
xor
jge
cmc
sub
inc
mov
inc
sbb
lods
ds
adc
jb
in
cmp
push
mov
fs
jbe
jmp
nop
xor
adc
mov
jae
lds
mov
xor
push
sbb
mov
xor
repnz
leave
dec
movsl
xchg
call
cs
cmp
scas
push
xchg
xchg
pushf
stc
mov
ljmp
clc
es
sub
xchg
cmp
sbb
imul
roll
jnp
imul
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
pushl
lods
adc
cmc
sub
sbb
mov
addl
inc
rolb
pop
fisttps
pop
mov
cmp
cs
insl
mov
pop
inc
mov
inc
rorb
ljmp
stos
mov
aas
lret
push
test
mov
stos
push
mov
dec
add
mov
cli
dec
push
push
xor
mov
mov
or
sub
jmp
roll
pop
sbb
popa
fwait
xchg
mov
dec
inc
leave
fxch
jle
bnd
ss
lcall
sbb
and
dec
sbb
mov
adc
ret
cmp
in
dec
aaa
aaa
in
iret
mov
incl
clc
sti
inc
inc
rep
sub
cltd
xchg
lahf
jmp
push
cld
lcall
push
fmull
mov
pop
mov
lods
ja
jne
and
outsl
out
cmp
adc
inc
cmp
fstl
cmpsl
fmull
rclb
data16
daa
into
dec
sbb
cs
ret
mov
xlat
jle
nop
fisubrl
xor
lahf
mov
aaa
cmpb
sbb
fcomip
add
icebp
dec
push
ja
insl
inc
lret
lret
sbb
ret
sarl
and
call
in
cmc
jmp
cwtl
inc
xchg
out
mov
je
loop
xchg
cmp
fisubrl
bound
lock
ljmp
and
test
mov
push
gs
jge
mov
and
jmp
add
jg
lcall
decl
and
arpl
testl
or
xchg
andb
sub
rcrb
xchg
jnp
sbb
fisubl
jle
adc
fsts
mov
out
add
pushl
test
lea
je
lods
adc
xor
push
mov
cld
subb
decl
xchg
outsl
jae
cmc
leave
test
int3
add
push
outsb
ret
sbb
popa
inc
data16
sbb
or
bound
add
dec
cmp
clc
and
pushf
popa
in
ljmp
imul
addr16
mov
mov
pop
xchg
shlb
jmp
stos
cs
dec
cs
jp
in
test
clc
and
cmc
cmovl
sub
ret
pop
push
sbb
jl
mov
jb
repnz
movl
pushf
pop
adc
fwait
test
sbb
test
or
lcall
hlt
add
mov
add
sub
pushl
cmpsb
leave
and
mov
fs
clc
dec
js
jge
adc
incl
xchg
dec
cltd
out
cmp
xchg
and
add
scas
add
jns
mov
mov
and
cmp
fs
outsl
mov
hlt
inc
ljmp
add
ljmp
bound
sbb
or
lea
iretw
adc
mov
mov
imul
and
mov
in
jbe
pop
xor
aam
xchg
mov
xchg
loope
rcl
sub
es
pop
fidivrl
push
pop
push
pusha
inc
push
xchg
icebp
pop
loopne
pushl
adc
lret
add
xor
adc
push
lcall
mov
outsb
jne
in
jge
jo
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
inc
mov
dec
cwtl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
jnp
jmp
pop
mov
rclb
mov
push
pop
push
sub
jecxz
loop
mov
stos
push
adc
jecxz
stc
fs
lcall
add
jmp
out
push
ss
adc
movsl
data16
push
jns
jae
daa
imul
and
lcall
stos
ret
push
mov
or
add
push
rclb
pushl
shrl
movhps
jne
add
cld
insb
add
sbb
ret
ds
aaa
incl
sarb
jns
xlat
aam
add
pop
movsl
cmpsb
into
jg
sar
jb
ja
or
push
lret
xlat
std
mov
sbb
outsb
inc
sbb
jmp
decl
and
int
rcll
pop
fsubr
pop
cmp
cmpb
call
inc
cmp
fildl
dec
adc
sub
or
mov
lods
insb
xchg
sbb
decl
xchg
mov
mov
lea
jg
repnz
xor
stos
jns
pop
mov
xor
test
loope
fucom
and
mov
pop
jmp
dec
rorl
sbb
adc
dec
jae
push
mov
jb
jo
in
or
les
dec
ds
cmp
stos
pop
rcrl
inc
xor
ljmp
outsb
sub
scas
ret
mov
mov
das
cli
inc
or
ljmp
and
pop
dec
in
inc
shll
add
data16
mov
pop
lcall
adc
adc
xor
out
adc
lahf
xlat
or
pop
subl
ljmp
cli
pop
int
cmp
mov
push
sub
icebp
sbb
cmp
push
jmp
into
xchg
push
inc
adc
mov
xor
data16
test
js
mov
sub
push
mov
lcall
sbb
adc
cmc
fnstsw
fs
fidivrs
jns
bsf
cmp
xor
ljmp
adc
call
mov
mov
cmp
adc
aam
pushf
aam
xchg
cmp
mov
inc
or
mov
pop
dec
mov
jge
fists
lahf
mov
cmp
and
jmp
out
imul
sbb
xchg
xor
mov
push
out
mov
aad
mov
aad
icebp
inc
call
bound
stos
sub
mov
in
pop
andl
daa
mov
int
fists
hlt
mov
ljmp
mov
cs
fxch
pop
push
mov
xchg
sub
inc
rcrb
jae
mov
pop
add
icebp
hlt
or
je
mov
mov
mov
out
dec
decl
mov
or
mov
mov
jae
jge
pop
sti
out
sub
mov
jo
aas
clc
cmp
test
adc
and
mov
jg
adc
mov
cmp
fsubs
test
xchg
dec
and
mov
dec
loopne
push
pop
add
mov
jmp
mov
ja
in
jb
add
outsl
gs
jp
or
es
and
ja
jmp
test
into
xor
cmp
mov
jl
jg
jp
lods
or
in
insb
lcall
push
fs
jle
mov
sub
fbld
rcl
push
push
lods
xor
sub
cld
adc
loop
test
ret
stc
sbb
rcl
cmp
and
movsb
incl
add
jg
call
xchg
fdivs
sbb
fdivrp
dec
mov
pop
dec
push
bound
jmp
xchg
jecxz
add
leave
orb
xchg
sbb
inc
inc
stos
lods
xor
mov
in
in
es
pop
jb
sbb
test
ljmp
jbe
and
sbb
das
sub
movq
js
nop
sbb
das
add
pop
addr16
mov
pop
cli
jp
sbb
imul
call
sbb
ffreep
ja
insb
das
mov
xchg
xor
mov
fisubs
imull
je
test
lcall
sub
iret
fmul
hlt
pop
add
pop
xor
int3
fs
lcall
push
pop
mov
in
mov
xchg
jns
lds
mov
mov
jbe
subb
push
ds
lods
push
insb
push
pop
out
daa
lock
sub
lea
call
push
or
dec
aad
data16
hlt
in
negb
cmp
shlb
sahf
cs
and
call
or
enter
lods
dec
test
mov
or
scas
pop
ret
mov
cmp
adc
lock
xor
dec
shll
ret
stc
es
mov
jg
sarb
jmp
scas
pop
dec
mov
cmc
ret
xchg
push
lret
bound
pop
sub
sbb
rcr
into
jg
fstps
fdivrs
call
jne
dec
pusha
sar
outsb
cld
push
imul
test
mov
sub
cli
fbld
mov
inc
popf
push
jmp
mov
jle
adc
mov
ljmp
cmp
lret
pusha
mov
mov
inc
lds
fstpt
ljmp
mov
fstpt
jg
cmp
xor
pop
inc
and
fisubl
push
inc
call
call
xchg
insb
mov
incl
cmc
pop
and
cmpsb
xchg
mov
cld
fcoms
and
nop
scas
sub
dec
or
lods
int
mov
idivb
inc
or
nop
insb
lcall
xchg
mov
jae
jb
jne
push
push
cmc
mov
xchg
decl
mov
rolb
addr16
scas
jo
xchg
fstp
or
lods
stc
push
push
incl
xor
pop
mov
lds
cmp
jmp
fwait
sub
in
jmp
imul
sub
sub
iret
mov
mov
decb
pop
movsb
dec
mov
decl
cmp
mov
xchg
inc
lret
push
call
fsub
pop
pop
dec
jno
push
pop
test
lods
mov
ret
lds
fimuls
aas
outsl
cli
incl
orl
push
out
add
or
and
xchg
cmc
aam
sar
push
mov
dec
cmc
sub
pop
mov
insb
and
adc
pop
cmp
jmp
and
mov
or
ret
aad
jbe
and
xchg
scas
sahf
adc
call
call
cli
and
dec
cmp
in
mov
dec
cld
ds
std
incl
rcrl
aam
ret
xchg
dec
pop
cmp
ljmp
inc
sbb
sbb
loope
adc
push
inc
insl
imul
dec
lret
adc
or
insl
mov
xor
fcompl
je
scas
in
xchg
xor
out
decl
xchg
xchg
arpl
mov
sbb
insl
repz
or
push
arpl
jmp
cmpsb
fimull
insb
push
ja
arpl
sub
push
mov
xchg
xor
adc
mov
xchg
stos
add
setle
mull
stos
mov
daa
or
decl
stos
mov
nop
cmp
in
enter
mov
hlt
push
test
and
pop
jge
dec
pop
rcrb
sbb
scas
imul
subl
lahf
int
fdivl
lods
jmp
lcall
enter
popa
std
jle
cmp
xchg
pusha
dec
decl
add
sbb
mov
insb
jne
out
rorl
jmp
cmp
cmp
cmp
sub
clc
sub
mov
in
lret
call
andb
push
sub
push
cmpsl
lods
xchg
in
bound
adc
pop
pop
push
insl
inc
jmp
das
jbe
pop
lahf
mov
sub
inc
aam
daa
jl
popf
adc
sub
mov
pop
int3
inc
jnp
mov
mov
pop
pop
pop
xchg
jo
test
sub
sbb
pop
bound
jnp
jp
or
rcr
arpl
rcll
push
movsl
enter
cmc
pop
loopne
xchg
popf
or
lret
mov
ljmp
mov
roll
xchg
aad
sub
aam
sbb
lcall
out
mov
cmp
mov
bound
sub
cmpsl
mov
add
sbb
mov
xchg
mov
or
mov
daa
dec
jp
mov
decl
in
hlt
add
jg
sub
cmp
dec
dec
mov
push
pop
mov
and
ljmp
xor
adc
ret
adc
sbb
inc
cmp
out
xor
inc
out
mov
mov
pushf
add
inc
mov
testl
pushl
pushl
adc
mov
add
gs
test
cmp
mov
sub
pop
loope
inc
adc
js
ret
incl
scas
xchg
divb
cmpsl
sub
sub
dec
add
xchg
iret
mov
and
mov
push
mov
sub
fs
loop
xorl
loope
mov
lock
pushl
xchg
adc
imul
sub
into
mov
pop
cmp
aas
ljmp
mov
xchg
cmp
adc
pop
int3
mov
int
add
incl
outsl
add
sub
ret
mov
cmpsb
jp
dec
aam
andb
xor
int
pop
pop
andl
les
mov
popf
sub
hlt
xor
cmp
loop
movsb
insl
sub
jmp
popa
xor
cmp
mov
add
mov
cld
enter
sahf
loope
pshufw
push
adc
jmp
cmpsb
jae
xlat
push
clc
ds
sub
ljmp
push
shlb
dec
loope
adc
dec
std
xor
sub
mov
lods
mov
push
pop
push
lods
adc
adc
cmp
mov
insl
xchg
lahf
sbb
or
xor
jns
int
js
sbb
pushl
decl
insl
test
mov
xor
fstps
xor
mov
cmp
mov
addr16
push
vmovhpd
jl
xchg
jmp
mov
sahf
sahf
xor
sbb
dec
lret
or
inc
push
adc
shrl
jb
mov
pop
out
mov
std
pushf
bound
or
adc
movsl
adc
ljmp
xor
hlt
mov
cmpsb
xlat
les
call
call
jecxz
jnp
jp
ja
sub
sbb
imul
mov
enter
jnp
loopne
xlat
int3
shlb
push
pop
dec
imul
adc
dec
out
mov
clc
push
lahf
arpl
gs
sbb
sbb
mov
jae
cmpsl
mov
xor
call
loopne
mov
fadd
pop
or
cmpsb
out
mov
xlat
inc
cmp
jg
repnz
push
cs
mov
jbe
jnp
data16
or
mov
mov
dec
push
cmp
loopne
push
test
cmp
mov
pushf
mov
jl
stos
call
insb
scas
int
mov
pushf
sbbb
adc
xchg
es
pop
ljmp
sbb
mov
or
mov
add
mov
ljmp
jmp
out
in
xchg
push
stc
enter
movsl
cmc
pop
jg
pop
jb
test
add
pop
lret
lods
inc
popf
aam
ret
adc
push
jl
dec
fmull
push
pop
adc
adc
or
sub
mov
xchg
jp
stos
inc
jmp
mov
push
fst
sub
push
movsb
aam
inc
cmp
in
repz
sub
jo
xchg
int3
mov
mov
arpl
push
in
xchg
xor
dec
ret
xchg
jns
call
fcmovu
repz
popa
xchg
and
imul
test
add
mov
insb
xor
or
lods
cmpsl
adc
xchg
insl
faddl
mov
ljmp
and
loope
jb
flds
and
xor
inc
sbb
stos
repz
mov
pop
dec
call
outsl
adc
into
in
sub
mov
sub
mov
pusha
and
mov
stos
cmp
out
mov
test
jae
pushl
sbb
push
cwtl
and
jl
mov
sar
loopne
shlb
mov
filds
sti
xlat
sub
pop
std
jg
rclb
mov
sbb
js
inc
popa
sti
mov
repnz
mov
cld
lcall
push
mov
xor
leave
nop
shrl
cmp
hlt
fwait
mov
pop
loopne
push
mov
daa
sbb
mov
cld
call
cmpsl
pushf
lock
or
xchg
in
xchg
adc
test
jg
pop
cmp
push
jne
xchg
mov
subl
fwait
push
insl
nop
fcom
pop
ljmp
pop
sub
push
cmp
jnp
mov
dec
outsb
popa
das
mov
pop
sbb
xlat
sarb
adc
mov
nop
mov
test
jno
dec
push
sub
cmp
push
enter
mov
sub
divb
adc
out
xor
or
sub
movsb
in
outsb
incl
xchg
and
lods
xchg
jmp
cs
test
sti
mov
jg
scas
dec
mov
jp
daa
xlat
add
orl
xchg
pushf
inc
sbb
dec
add
repnz
push
sub
push
mov
sub
ja
xchg
xor
inc
push
xchg
push
test
mov
incl
xor
stc
loope
inc
repnz
pop
mov
es
mov
stc
sub
inc
lret
shll
aam
xchg
fistpl
popf
les
outsl
lods
xor
sbb
enter
push
or
xlat
lcall
mov
jg
dec
sub
sub
shrb
or
ljmp
jbe
inc
out
ret
and
xor
pop
clc
xor
int3
xchg
mov
loop
call
loop
aas
inc
repz
pop
jmp
mov
insb
add
push
jg
jle
push
je
xchg
pusha
test
js
add
aad
cmp
inc
mov
add
jno
imul
ret
push
mov
mov
insb
inc
jmp
inc
adc
cmp
scas
or
inc
mov
decl
jae
push
fisubs
mov
jae
jle
add
mov
xlat
or
ljmp
pop
sub
mov
out
imul
sti
mov
cli
inc
pop
repz
cmp
cmp
push
icebp
es
cmp
xchg
daa
push
cmp
push
jge
adc
ljmp
mov
xchg
pusha
push
shl
inc
ffree
imul
out
sub
add
cmp
pop
scas
push
mov
mov
sbb
clc
push
or
in
daa
jle
push
leave
mov
popf
aas
mov
mov
jo
jbe
xchg
data16
fwait
jb
mov
mov
jae
negl
mov
cwtl
jmp
out
ret
dec
adc
ficoms
decl
lock
push
ret
fbstp
push
mov
ljmp
push
adc
add
aaa
cld
ljmp
ficomps
push
mov
sbb
fs
xor
clc
loopne
fmulp
or
out
jecxz,pn
dec
lock
sub
jl
xorl
xlat
mov
or
add
das
das
ret
out
jle
or
in
cmpsl
jg
fwait
mov
jecxz
dec
mov
subl
inc
xor
je
dec
decl
data16
imul
xor
mov
jle
push
jae
popf
es
fildll
fiaddl
aam
adc
push
decl
ljmp
je
inc
out
push
push
xlat
sti
jl
or
shll
push
fs
push
dec
pop
sahf
in
xchg
mov
jbe
or
pop
outsl
xchg
ljmp
call
call
clc
clc
xchg
sbb
push
jmp
cmp
out
xchg
push
jecxz
std
call
xchg
push
ror
and
sub
leave
and
jno
sarl
dec
xchg
or
call
jbe
xor
lods
inc
mov
arpl
mov
jno
push
jmp
sbb
and
mov
jbe
shlb
mov
ljmp
sub
mov
mov
sbb
je
stc
mov
daa
faddl
aad
sar
out
fwait
sti
jg
mov
dec
cmp
sti
pop
pop
xchg
in
add
ljmp
mov
push
insb
fcmovu
adc
gs
std
stos
ss
out
pushl
push
jmp
sub
pop
arpl
xchg
out
or
movsb
popf
in
mov
loopne
addr16
or
imul
jg
movsl
out
pop
or
push
add
arpl
dec
inc
call
loope
movsl
movntps
push
or
mov
push
in
and
and
mov
call
and
mov
orl
push
fwait
iret
dec
ljmp
dec
push
add
iret
adc
mov
popa
ja,pn
in
xor
or
mov
cmp
cltd
decl
mov
push
cmp
inc
adc
shll
mov
mov
mov
data16
and
fnstcw
push
fldenv
dec
fcomps
pushf
test
decl
xchg
inc
jne
pushf
enter
mulb
jne
popf
fidivrs
sti
push
add
jp
xor
sub
mov
sub
xlat
cmc
sbb
movsb
xchg
xor
cli
fidivl
jbe
pop
jnp
xor
mov
sbb
test
fnsave
inc
push
hlt
mov
in
outsb
fcompl
xor
pop
cmp
ret
ljmp
jne
jo
sbb
adc
add
insl
dec
outsb
mov
jg
pusha
cld
rol
push
dec
lea
push
cmpsb
aas
sti
lcall
test
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
sar
jg
add
inc
arpl
ficompl
xchg
ja
aad
outsb
inc
pop
std
cli
mov
test
or
mov
adc
hlt
ljmp
mov
fwait
dec
loop
shl
cwtl
and
push
loope
cmp
icebp
pop
cmpb
xor
and
xchg
xchg
fcomip
pushl
pop
popf
inc
arpl
inc
cmp
mov
mov
xor
mov
call
inc
xlat
or
int
mov
sahf
fst
jle
js
jo
dec
or
dec
inc
sub
ljmp
jb
nop
dec
mov
cli
sbb
or
call
cmp
popa
push
sbbb
popf
push
loopne
shr
add
xchg
out
xor
sbb
nop
jnp
and
inc
mov
les
and
xchg
test
in
mov
jl
jg
fcoms
pop
insl
push
jecxz
mov
fisubl
std
lea
mov
pushl
std
fldenv
fistl
push
push
lret
imul
out
js
fiadds
sarb
cmp
mov
pop
stc
mov
fistl
repz
sahf
mov
jo
mov
imul
ljmp
push
mov
xor
xchg
inc
mov
jae
jae
xchg
cs
push
jbe
xor
mov
jl
mov
xor
loop
sub
mov
sbb
je
sbb
cmp
jle
mov
lock
cwtl
cmp
push
cltd
dec
addr16
pusha
jp
rclb
outsl
adc
xchg
jbe
ljmp
xor
ret
sbb
mov
cmpsb
inc
loope
lcall
decl
lods
mov
cmpsb
outsb
fidivrs
mov
push
xchg
and
xchg
sub
cmp
shrl
in
add
bnd
add
jne
push
lcall
insb
in
jle
jno
xchg
repnz
add
dec
mov
push
push
jno
xor
adc
cmpsl
out
mov
pushl
pop
jle
mov
incb
test
icebp
sbb
test
daa
rcrb
mov
fcomip
ljmp
pop
pop
gs
adc
mov
pusha
or
gs
pop
inc
add
in
addr16
push
cmpsb
mov
rolb
lcall
sbbb
cmp
dec
mov
int
fisttpll
cbtw
cmp
xor
decl
nop
sbb
pop
and
int3
popf
lock
sub
sbb
inc
fcompl
xchg
jmp
idivl
lret
int3
jb
and
add
out
addb
nop
call
mov
movsl
roll
inc
jmp
cmpsl
jl
aad
or
sub
and
add
cmp
fs
pusha
sub
cmp
stos
push
or
in
xchg
sub
loope
sti
mov
lea
das
jne
mov
rcll
jno
fwait
pop
add
dec
or
loopne
call
push
fwait
mov
push
jp
addl
pop
sar
inc
cmpsl
xor
xor
pop
mov
adc
negb
cli
or
sub
sbb
js
repz
jmp
mov
incl
sbb
pop
pusha
shl
push
inc
int3
sbb
and
mov
in
call
lcall
and
mov
testl
fs
enter
lret
and
and
aad
mov
decl
dec
push
pop
popf
inc
add
mov
mov
dec
ds
lock
nop
sub
adc
mov
loop
xor
scas
push
adc
dec
call
lcall
mov
out
mov
pusha
out
mov
popf
and
leave
clc
push
xor
insb
jnp
cwtl
ret
stos
mov
pop
nop
int3
mov
shr
incl
pop
cltd
ret
rcr
gs
inc
dec
sbb
jmp
mov
decl
test
add
mov
loop
test
in
movsb
pop
fmull
hlt
or
mov
pushl
xchg
in
inc
int
jns
loope
cmp
call
xchg
add
jp
fwait
pop
jmp
in
in
cwtl
subb
movsl
pushf
mov
xlat
cmp
rclb
xor
jae
ljmp
idiv
mov
and
xchg
sbb
cmpsb
adc
mov
sbb
jg
and
clc
incl
sbb
or
fsubrs
jmp
ljmp
dec
data16
gs
mov
out
lods
add
push
orl
mov
inc
mov
or
and
push
test
aad
push
and
sarb
cmc
decl
lock
rolb
pop
mov
sub
push
pop
cwtl
add
dec
cmp
sbb
fnsave
iret
xchg
in
jle
loop
movsb
ds
mov
pop
mov
pop
stos
pop
out
les
insb
or
fisubl
out
sbbb
lcall
jns
lock
test
pop
sub
mov
xchg
cld
lcall
and
dec
cmp
cmp
test
lcall
roll
push
mov
dec
js
stc
inc
out
test
mov
rcll
pop
or
incl
mov
sbb
in
sarl
in
mov
cmp
inc
push
stos
lcall
decl
push
jnp
cmc
mov
sahf
stos
mov
hlt
mov
lcall
inc
cmpsb
call
loope
sbb
mov
mov
stos
in
and
jmp
pushl
cwtl
ficoms
fnstsw
push
dec
mov
add
loope
mov
divl
jo
ror
les
lcall
inc
xor
jne
mov
popf
test
mov
push
sbb
out
cmp
or
clc
idivl
pop
leave
push
and
sbb
icebp
dec
push
fdivl
mov
lcall
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
insl
test
cmpsl
mov
mov
call
add
rorb
xchg
cltd
call
or
inc
clc
and
add
sbb
jnp
popa
sub
xchg
sbbb
movsl
jl
pushl
cwtl
adc
or
std
bndstx
jmp
rorl
push
cld
add
or
in
cltd
and
jbe
push
push
cmp
sbb
insb
inc
das
daa
icebp
adc
push
pop
insb
sub
incl
lret
ljmp
mov
dec
cs
pop
sbb
filds
sti
cltd
aaa
leave
xchg
cmpsb
mov
arpl
insl
xor
dec
mov
test
jmp
outsb
repnz
lds
push
jmp
jnp
mov
or
xor
cmp
aad
pop
addr16
mov
call
fwait
outsb
adc
or
xor
push
sub
xor
jle
out
outsb
lods
and
jo
hlt
movsl
aad
incl
fildl
add
pusha
cli
jecxz
add
pop
pusha
sub
mov
scas
insl
out
lret
push
in
fcomp
out
lock
cli
call
add
nop
mov
add
pop
pop
xchg
fstpt
movsb
sbb
call
xor
lds
gs
mov
pop
inc
addb
xor
sub
mov
xchg
fistl
xor
aam
push
mov
or
adc
lret
jp
inc
loope
rorb
pop
stos
pop
pop
ret
sub
call
ret
popa
and
mov
and
pop
jnp
pushf
jge
or
dec
adc
jmp
fadds
ss
movlhps
into
ljmp
shlb
cmp
mov
mov
sar
sub
jecxz
leave
sbb
sub
insl
xchg
pop
mov
incl
cwtl
pusha
stos
imul
mov
imul
and
pop
xor
lahf
jo
jns
pop
lock
dec
ljmp
inc
int
mov
sub
sub
popf
dec
adcl
mov
lcall
rorl
leave
lea
jbe
sbb
fs
shl
cs
mov
addr16
xor
out
rolb
push
popf
lock
jnp
dec
pop
inc
loopne
call
jg
lds
test
or
mov
push
in
test
push
rcrl
jecxz
dec
inc
addl
cmp
xor
and
fsubrl
rcr
notb
cmp
ljmp
gs
mov
rcrl
or
inc
jmp
add
icebp
loope
jns
out
test
int
addr16
push
incb
lahf
push
pop
imul
outsb
push
xchg
ja
les
std
ret
mov
xor
outsb
pop
xchg
inc
data16
jmp
std
dec
stos
pop
into
das
fisubl
push
nop
push
pop
ret
or
xor
sbb
push
cld
xchg
stos
dec
int
inc
adc
leave
cmpsb
cmc
fnsave
icebp
jl
scas
lds
shll
call
or
sub
decl
mov
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
mov
or
repnz
cmp
aas
scas
clc
jg
std
adc
loop
mov
jl
cmp
pop
sbb
cmp
in
ljmp
dec
xchg
cmp
mov
jne
adc
jmp
repz
js
fs
inc
je
in
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
mov
shl
cmp
divb
addr16
filds
cwtl
bound
mov
shrl
sbb
jmp
dec
nop
xchg
adc
jg
jg
push
cmp
loope
int3
bound
cmp
cmp
call
daa
lock
aad
or
sbb
xchg
jo
push
ja
decl
pop
mov
xchg
jge
call
or
and
dec
dec
push
sub
lcall
mov
xchg
notl
es
scas
xlat
test
mov
cmp
push
push
std
decl
ljmp
pop
pop
lods
call
push
xchg
xor
push
inc
mov
jg
lcall
sub
sbb
dec
scas
sub
into
test
lock
decl
push
loop
pop
divb
push
dec
and
xchg
popl
mov
lock
jmp
add
aas
shrd
out
into
outsb
pop
inc
push
int
stos
cwtl
cmp
mov
out
test
int
nop
pop
ljmp
js
inc
inc
xchg
out
adc
cwtl
repnz
jmp
mov
sub
pop
out
mov
xchg
out
lret
js
cmp
sub
fwait
enter
mull
mov
fcmove
mov
pop
mov
out
daa
ljmp
cli
into
add
xlat
loop
dec
push
inc
inc
mov
jns
mov
ja
ljmp
fldcw
shlb
ljmp
jmp
mov
ret
adc
in
cwtl
pop
test
mov
aaa
ret
decl
push
mov
ljmp
xchg
jb
sub
sub
jge
lea
lds
mov
pusha
cs
pop
mov
dec
lods
xchg
aas
pop
sub
fwait
cmp
pop
xchg
xor
pushf
or
or
xlat
mov
inc
jns
jnp
lahf
pop
or
sub
loop
decl
les
dec
lret
mov
popa
cld
mov
sahf
pop
insb
jno
movsb
lods
sbb
ror
sbb
ljmp
dec
lahf
jmp
mov
nop
mov
add
push
push
xor
fcmove
lcall
dec
ljmp
imul
mov
or
add
ljmp
movsb
in
pop
cmc
mov
push
and
add
jmp
scas
adc
push
inc
adc
popa
push
int3
nop
push
add
sbbl
jg
outsl
cli
outsl
jp
push
mov
push
subb
xchg
imul
or
lods
pop
std
idiv
pop
bound
rol
xchg
cmc
push
in
test
cld
stc
jp
stos
icebp
jmp
das
xor
test
movnti
lods
jnp
jbe
fldcw
iret
loopne
jo
push
popf
sub
decl
decl
pop
inc
aaa
clc
cmpsl
aaa
xor
xor
out
clc
subl
repnz
dec
rcl
nop
loop
sti
push
pushf
mov
ljmp
add
adc
or
and
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jmp
loopew
cmpsl
push
push
jmp
cmp
jecxz
imul
jmp
xchg
scas
ss
push
int3
and
pop
jge
xor
adcb
jns
repnz
cltd
sub
dec
sub
lcall
and
addr16
push
dec
lcall
or
daa
fnstcw
xchg
mov
lret
add
jmp
stos
bound
test
int
adcl
push
jne
int3
outsb
jp
xchg
pop
mov
jmp
pushf
enter
cmpsl
xor
sbb
popa
xlat
outsb
pop
push
dec
sbb
add
push
je
jmp
fwait
mov
imul
mov
out
jae
adc
dec
or
sbb
pop
push
icebp
pop
jno
sub
lcall
pusha
or
mov
mov
jmp
push
jecxz
jl
push
mov
and
cmpsl
sub
jns
mov
scas
clc
jmp
movsb
push
and
sahf
mov
inc
aam
and
sahf
push
inc
insl
fstl
jnp
dec
je
lret
mov
in
lcall
pop
out
mov
loope
test
leave
cltd
aaa
std
and
movsb
add
pusha
andb
cmc
decl
lods
add
loopne
mov
pop
enter
jg
push
or
mov
outsb
cld
jo
xor
jns
shll
bound
xor
pop
das
jae
cli
adc
mov
sbb
sub
pop
xor
jae
jg
or
je
dec
pusha
dec
jmp
out
inc
jle
sub
add
cmpsl
lock
lcall
jns
cmp
or
aas
push
xchg
mov
jge
lretw
mov
mov
sbb
inc
xchg
movsl
mov
loopne
shll
jg
dec
jnp
shr
push
sub
pop
dec
daa
ja
mov
mov
add
mov
push
sub
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
ljmp
fs
es
call
jo
dec
int
js
sub
incl
sti
cmc
fwait
adc
push
cmp
lcall
fwait
sbb
adc
mov
pop
pop
add
in
and
pop
inc
push
unpckhps
cmc
roll
inc
xchg
cwtl
cmp
stos
decb
mov
xor
daa
call
cmpxchg
pop
rol
xor
and
decl
sub
pop
test
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
ljmp
push
loop
mov
out
push
aaa
aaa
mov
stos
pop
and
shrb
sarb
call
xlat
movl
call
nop
adc
sbb
std
in
iret
xchg
adc
xchg
cmp
cmp
pop
jne
das
cwtl
imul
xor
add
push
adc
fistps
js
xor
pushf
roll
push
sub
xorb
xlat
mov
mov
decl
in
add
rorb
jg
add
jge
mov
rorl
mov
cltd
mov
mov
cmp
pop
mov
repnz
js
sbb
xchg
cmp
arpl
mov
lods
scas
pop
jb
pop
lcall
call
xchg
inc
test
mov
jbe
out
mov
jno
dec
sbb
es
call
add
xchg
add
push
hlt
pushf
inc
hlt
inc
adc
lret
cmp
push
jl
mov
or
dec
enter
mov
jns
test
or
std
ret
inc
andl
clc
dec
ret
adc
sar
ljmp
inc
adc
mov
in
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
inc
fstpl
sbb
push
arpl
pop
push
ljmp
sub
sbb
xchg
test
incl
push
bound
iret
mov
fs
sub
test
incl
mov
gs
pop
mov
push
popa
test
cltd
insl
pop
push
mov
xchg
push
test
fcomip
push
mov
mov
push
inc
sbbl
gs
call
jns
or
xchg
pop
pop
mov
push
or
dec
mov
icebp
ds
mov
sub
pop
imul
ficoml
pop
hlt
push
pushf
push
sbb
sbb
mov
ljmp
push
pushf
ja
nop
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
int3
xchg
aaa
mov
std
jl
or
std
jne
pop
inc
loopne
incl
hlt
ss
mull
sub
add
jle
movnti
pop
mov
jle
sti
lcall
push
cmp
lret
sub
imul
or
jge
sbb
in
mov
mov
dec
arpl
push
push
adc
ds
sub
incl
cmp
out
push
pop
gs
xor
into
mov
cld
xor
mov
adc
mov
dec
pop
decl
jbe
pop
xlat
jnp
imul
cli
imul
jnp
adc
pop
dec
in
ret
inc
xlat
orb
cltd
jae
push
sbb
mov
jne
div
or
es
enter
mov
loopne
xlat
adc
pushl
mov
ror
cmp
shll
jg
int3
pop
insb
push
inc
negb
dec
std
les
je
lcall
out
sub
add
ljmp
fucomip
pop
push
outsl
xor
je
mov
dec
testl
jae
call
arpl
pop
scas
mov
clc
mov
dec
sahf
cmp
repnz
ljmp
push
lock
shl
mov
cmpsb
lods
aam
lahf
sub
mov
mov
jmp
push
imul
call
rol
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
jge
popa
mov
xor
xchg
push
lods
aaa
je
clc
js
mov
jmp
and
inc
rcll
xor
xchg
xchg
lock
jbe
xchg
lods
test
or
decl
pop
popa
mov
scas
rorl
cwtl
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
jmp
daa
je
lds
out
xchg
dec
jg
push
es
cs
push
pop
mov
cmp
int
dec
hlt
jbe
fldl
mov
push
outsl
dec
movsb
in
imul
xchg
incl
gs
imul
xor
mov
sbb
or
push
sbbb
dec
dec
xchg
xchg
sbb
fwait
mov
sub
add
cli
sbb
enter
jg
xchg
pop
js
inc
xor
aam
and
cli
imul
jae
push
mov
in
fistpl
jmp
push
push
testl
sbb
pushl
xchg
fmulp
shr
shlb
addr16
fldenv
jecxz
push
jle
fnstcw
mov
jge
incl
add
jae
ljmp
pushl
sub
incl
adcl
inc
jne
mov
in
mov
xor
dec
push
loopne
addl
push
sub
lcall
pop
add
sbb
popf
push
je
popa
or
pushl
enter
lock
into
dec
and
leave
pop
xchg
push
sbb
mov
mov
das
aad
into
sarb
daa
daa
lcall
scas
push
sub
adc
mul
ljmp
xor
jns
mov
sbb
scas
xchg
mov
fcomps
movsb
insb
lds
sub
in
adc
cmc
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
out
mov
popa
lret
rcrl
sub
adc
push
cmp
repnz
lcall
inc
insl
mov
jmp
push
jge
fwait
dec
dec
insb
xor
loop
lcall
inc
hlt
loopne
lret
mov
mov
xchg
pop
mov
test
shll
inc
adc
pop
std
decl
nop
xchg
add
cwtl
add
fwait
inc
outsl
movsb
pusha
cmp
or
call
or
icebp
shr
insb
aas
cwtl
leave
movsb
fcoms
fidivrs
sbb
decl
imul
icebp
fadd
js
and
movsb
and
jle
dec
imul
mov
sar
jmp
in
sub
repz
cld
dec
push
xchg
jne
lret
jo
pop
inc
or
movsl
adc
mov
ljmp
or
sahf
inc
push
daa
in
repnz
clc
inc
cmp
cmp
dec
aaa
jl
roll
push
jg
cmp
pop
data16
mov
rolb
cwtl
daa
xor
lret
cmp
jmp
lcall
jmp
xchg
add
jge
xchg
dec
xchg
outsl
sub
push
cmp
int
cmpl
decl
test
popa
data16
xor
fldt
dec
fwait
pop
sub
incl
lcall
and
sarb
mov
pop
xchg
xor
nop
and
enter
cs
repnz
iret
lcall
pushl
jns
push
jmp
les
imul
push
insb
dec
iret
aaa
push
orl
and
cltd
cltd
push
ss
cmp
sub
leave
popf
icebp
mov
xchg
filds
or
push
or
pop
xchg
sbb
pushl
pop
bound
ja
lahf
movb
mov
clc
cmp
movsb
es
lret
sti
pop
aam
decl
adc
iret
mov
pop
stos
add
inc
adc
enter
jns
fcmove
sahf
jae
leave
ljmp
adc
popa
fwait
mov
jne
or
xchg
cmpsl
lea
cmc
imul
fbstp
jb
in
cmp
xchg
insl
mov
lret
dec
cmpsb
push
inc
call
pushl
fcompl
jge
pushf
xorl
pop
dec
inc
mov
rorb
and
jmp
mov
popa
iret
adc
add
cmp
in
jp
test
cltd
or
out
imul
push
pop
xchg
sbb
jg
stos
fiaddl
jg
sti
jmp
and
sti
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
call
call
imul
mov
xchg
fs
mov
std
cmp
jg
lcall
jns
inc
push
jo
add
cmp
pop
div
mov
and
addr16
push
cmp
cmp
mov
aas
imul
push
cmp
clc
je
loop
push
stc
das
and
cmp
mov
sbb
mov
mov
decl
lcall
and
pop
sbb
pushl
adc
je
je
imul
je
dec
cmpsb
mov
aam
push
jno
inc
jge
adc
sub
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
decl
sub
push
sbb
movsb
outsb
xchg
sbb
subb
fstpl
incl
ja
outsl
lcall
sub
push
inc
or
adc
dec
pextrw
push
mov
sbb
jmp
in
ljmp
aas
movsl
or
sbbl
sbb
ljmp
call
leave
imul
repnz
jbe
jne
movsb
push
fcompl
les
clc
aam
inc
sub
dec
or
xchg
divl
adc
push
sahf
aas
mov
xchg
in
mov
mov
mov
jae
test
lock
cmp
mov
cli
lds
ljmp
mov
adc
sub
cmp
fiaddl
ss
jbe,pt
stc
cmpsl
inc
cld
mov
incl
out
aaa
stc
pop
cmp
jae
cmp
jp
lods
aaa
cs
fisttps
ret
or
test
jb
jecxz
lcall
jmp
fldcw
notb
dec
jp
jecxz
call
or
call
sarl
cmpb
xchg
scas
repz
or
cmp
outsb
mov
mov
sbb
dec
sub
or
mov
pop
and
adc
pop
sub
cld
out
pop
aas
incl
in
mov
push
cwtl
and
rolb
imull
imul
pushl
loop
aad
push
inc
xchg
lcall
push
inc
pop
rep
mov
mov
fstpt
incl
pusha
sub
dec
mov
test
bound
aad
mov
and
in
mov
inc
xchg
sti
sti
call
cmp
ljmp
inc
adc
mov
jecxz
in
mov
fwait
pop
ja
clc
jg
mov
mov
adc
and
clc
daa
xor
aaa
and
popa
cmpsb
in
insb
pop
adc
incl
adc
sbb
ret
mov
aad
xchg
movsl
add
mov
and
sbb
jl
and
jg
lcall
or
movsl
cwtl
fcomp
aaa
call
push
xchg
or
outsb
in
xlat
ds
mov
cs
adc
cmp
xchg
clc
jle
cld
je
dec
mulb
mov
out
cli
bound
dec
inc
movsb
lahf
pusha
in
out
inc
push
andnps
insl
mov
push
ss
aad
mov
popa
rcrb
inc
cli
ret
pop
stos
pop
je
cmp
inc
mov
push
out
clc
ljmp
stos
dec
pop
pop
in
pop
jl
je
jmp
pop
push
addr16
lods
andb
sbb
clc
add
jae
leave
in
and
sarl
mov
leave
pop
cli
loopne
dec
stos
sbb
fisttps
mov
xchg
dec
xlat
sub
in
repnz
push
faddl
pop
push
jbe
xlat
nop
and
lcall
or
jp
js
or
int3
or
adcb
cmpsl
mov
data16
fcomip
pushl
cmc
dec
push
sub
xor
and
jmp
jmp
in
not
fadds
fs
sub
jnp
and
xor
cmpsb
and
movsb
cld
push
lret
fs
xor
push
call
and
push
loope
pop
lret
je
pusha
push
fmulp
stc
je
loop
icebp
repnz
lods
int
orb
stc
sbb
jmp
aas
rorb
jle
pop
andb
push
lret
push
and
fsubrs
sbb
cmpsb
pop
mov
xchg
leave
push
hlt
sbb
mov
call
out
mov
js
xor
add
scas
popf
mov
lods
stos
sub
cmp
adc
repz
pushl
das
inc
xor
xor
icebp
cmp
mov
fsubrl
dec
cli
ss
pushl
enter
jae
aam
bound
mov
insb
sti
mov
xorl
pop
loopne
dec
fisubrs
lcall
ljmp
sub
push
pop
shrb
scas
xor
sbb
sbb
adc
pushl
jnp
sti
mov
inc
nop
or
lea
pop
adc
test
insl
aam
incl
xchg
test
dec
pushf
imul
daa
fcmovnu
mov
and
mov
dec
add
arpl
mov
fisttpl
xchg
test
jle
hlt
push
ret
inc
lods
lods
jge
shll
enter
jmp
aad
inc
popa
out
ret
pusha
xlat
sbb
das
test
and
jg
incl
dec
cmp
or
frndint
mov
lcall
sahf
cltd
loopne
and
lods
fdivrp
es
pop
or
dec
mov
add
push
adc
mov
fwait
add
fcompl
lahf
ja
leave
pop
pop
mov
cmp
cmp
inc
xlat
dec
mov
xchg
js
shlb
decb
std
fildll
rorb
push
ljmp
cmpsl
sbb
add
in
push
inc
pop
out
xlat
outsl
pop
push
inc
fnsave
push
and
in
incl
push
cmpl
add
mov
mov
aaa
test
dec
decl
push
addr16
lcall
gs
adc
addr16
popa
test
lret
mov
icebp
sbb
insb
xchg
mov
or
lcall
sub
setnp
in
jge
jl
adc
mov
xchg
add
dec
mov
scas
inc
dec
cmp
rorb
inc
iret
fisubl
imul
aas
jecxz
fdivr
arpl
sbb
and
sti
dec
filds
xor
jg
inc
repz
mov
xchg
mov
in
call
pushf
shrb
pop
cli
jge
cmpsl
nop
jno
popa
stc
dec
call
negl
les
xor
add
mov
push
ret
push
mov
hlt
jmp
lea
sbb
mov
jnp
insb
xor
mov
push
cld
jp
insb
jg
lcall
lds
cmp
adc
in
cmp
ds
adc
fwait
inc
out
arpl
insb
mov
mov
das
clc
cmp
adc
lret
arpl
fs
lcall
inc
fdivl
lahf
ljmp
jae
xor
lods
jnp
jge
cli
ja
mov
repz
mov
push
mov
decl
lcall
mov
mov
cmp
lret
mov
xor
lcall
fimuls
lret
mov
inc
jle
mov
call
sbb
xchg
stos
or
lret
fcomip
scas
xchg
mov
xchg
cwtl
or
pop
dec
in
scas
mov
rcll
inc
inc
adc
dec
imul
into
repnz
dec
push
test
lock
mov
movsl
pop
mov
jp
lret
pop
lods
sub
fisttpll
inc
jmp
lcall
nop
pop
scas
cmp
mov
or
stc
out
jecxz
xchg
fwait
adc
into
mov
pushl
push
mov
cmp
in
pop
test
das
xor
stc
adc
sbb
ljmp
dec
jno
in
xor
out
sub
cmpsb
sbb
dec
pop
dec
pop
sub
push
sbb
pop
jmp
cmp
ja
cmp
push
fdivl
into
sub
js
out
sub
incl
inc
cmpsl
inc
and
frstor
jle
or
movl
lods
inc
mov
mov
sub
rcrb
fisubl
iret
dec
std
jmp
cld
hlt
jns
add
push
lods
mov
push
das
roll
mov
or
jae
stc
pop
jmp
cmp
dec
shl
gs
decl
sbb
cmpsl
sarb
mov
cmp
rorl
lahf
xlat
xchg
mov
cmc
call
dec
out
nop
out
xchg
mov
mov
out
fwait
dec
mov
es
loop
or
fiaddl
andb
cvttps2pi
lret
mov
xlat
xor
call
push
in
xor
pop
xor
cltd
es
jecxz
ret
test
adc
sbb
jmp
sahf
jle
or
push
sbb
ljmp
fcomps
mov
sbb
ror
inc
cmp
cmp
ror
cli
jmp
pop
adc
pushf
pop
or
jbe
cmp
xchg
fbstp
dec
test
jbe
mov
aaa
sub
insl
sub
call
mov
cli
mov
push
cld
loop
scas
jnp
push
dec
inc
dec
ss
xchg
lcall
js
movsb
test
out
in
test
repnz
repnz
jbe
jae
fwait
adcl
mov
insl
xchg
int
decl
add
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
test
call
enter
dec
loope
jb
sbb
add
rcr
jg
rclb
push
cli
xchg
stos
idiv
lcall
lret
daa
cwtl
stc
mov
loop
daa
imul
push
jbe
jbe
stos
mov
test
fisttpll
add
sbb
ja
decl
in
inc
cmc
lcall
lods
pop
call
sub
sahf
lds
jmp
cmp
outsl
rcr
or
pop
jnp
cltd
jp
fwait
in
cmp
sub
fistpll
jp
push
jbe
sub
cmpsl
cs
mov
push
xchg
adc
and
das
cs
sub
jno
incb
add
adc
jmp
incl
out
xchg
enter
jmp
jno
dec
xor
or
int3
cltd
iret
add
xchg
pop
ja
pushl
cs
popf
fimull
int
xor
sbb
repz
sub
loopne
vandnps
lcall
adc
or
inc
movsb
sti
add
inc
mov
pop
call
sarl
jae
mov
mov
xor
inc
xchg
loope
push
sbb
cwtl
mov
pop
lret
lock
test
outsb
sub
cmp
mov
fimuls
decl
or
les
pop
rclb
pop
nop
and
sar
push
bswap
push
loop
divb
loop
ret
cli
loopne
dec
cmc
sub
add
fisttpll
xor
xor
fisttpl
pinsrw
lods
fdivr
imul
sub
call
inc
xor
fisttpll
jae
adc
shr
inc
adc
add
xor
push
or
incl
inc
and
adc
popf
mov
mov
mov
xor
mov
lea
inc
ja
lcall
dec
insb
mov
push
cmpl
out
icebp
ror
adc
pop
cld
out
pop
cmp
gs
in
pop
lret
push
mov
test
mov
test
stos
add
in
add
pop
sahf
push
iret
push
push
cmovl
add
ljmpw
pop
sbb
sub
mov
leave
inc
fsts
mov
xor
call
xchg
adc
mov
inc
repnz
shll
push
or
lds
in
sub
push
arpl
je
gs
enter
rclb
jb
cmp
push
push
jb
ljmp
cmp
push
repnz
mov
xor
push
insl
adc
push
rcr
mov
jmp
xlat
sub
test
cmp
cmp
add
mov
rcr
sub
and
push
mov
incl
ret
mov
push
repz
ss
sub
jnp
mov
jge
xor
incl
xor
jae
repz
inc
jne
adc
fwait
dec
adc
add
mov
call
xchg
cmp
adc
cmpsl
pop
lods
inc
call
pop
xor
stos
je
shl
mov
xchg
insb
rcll
sbb
repz
jmp
mov
pop
les
out
mov
setp
or
out
jne
mov
fdivrl
pop
mov
inc
bound
cmc
frstor
pop
insl
cmp
mov
lcall
sub
add
push
cmp
mov
dec
leave
or
sub
movsl
inc
or
jmp
mov
pusha
mov
iret
mov
xchg
lret
rolb
mov
movsl
push
mov
jmp
jl
or
es
loopne
add
mov
pop
ret
push
test
out
add
cmpsb
decl
and
xchg
xor
dec
sbbb
mov
add
add
data16
pop
stos
outsl
clc
cmp
out
push
sbb
mov
jmp
ja
inc
adc
fistpll
cs
jecxz,pt
pusha
test
subl
stc
stos
lahf
test
dec
jmp
lods
mov
addr16
lods
ljmp
cmp
std
lcall
mov
mov
daa
inc
lods
xchg
clc
cwtl
dec
lds
fwait
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
pop
movsb
jmp
lcall
adc
push
cmp
lcall
add
ljmp
cs
push
adc
jb
testb
mov
jmp
adc
and
ficoms
sahf
push
and
adc
mov
add
or
mov
fs
mov
mov
ret
inc
jb
clc
rcrb
pusha
jns
pop
ret
adc
and
pushl
rcll
push
mov
xor
loop
cmp
call
push
xchg
dec
mov
ret
or
test
pusha
scas
xor
ds
in
test
jo
fwait
int3
scas
dec
sbb
dec
ja
mov
aas
in
jecxz
shlb
ficomps
inc
and
nop
rol
and
dec
add
mov
das
pop
enter
push
pop
das
imul
ja
psllq
xchg
rcll
inc
stos
push
call
and
dec
mov
mov
test
data16
call
es
pop
inc
sbb
jne
jp
shrl
inc
jns
lahf
push
xchg
popa
inc
sbb
aaa
rolb
js
popw
std
incb
rolb
fwait
js
ljmp
inc
test
mov
arpl
xchg
stos
popf
push
test
test
incl
test
dec
stos
dec
sbb
icebp
sbb
push
int
inc
xor
mov
outsl
out
fsubl
incl
mov
mov
mov
icebp
xlat
adc
jns
aas
or
mov
sbb
xor
repz
and
pop
mov
bound
or
clc
call
repnz
aam
push
hlt
add
jg
jg
shlb
add
lods
mov
mov
fcomip
pop
mov
in
and
leave
mov
mov
mov
fidivs
xor
dec
pushl
cld
xchg
jbe
out
sbb
xor
lock
mov
jl
jmp
sub
ljmp
cli
jecxz
mov
dec
inc
cld
pop
int3
ljmp
jp
adc
decl
mov
sbbl
call
dec
and
loopne
int
jp
fstpl
sarl
stc
push
gs
adc
sbb
sbb
xlat
loop
aas
ud0
cmc
mov
ret
in
jle
es
daa
jecxz
leave
dec
cmp
jl
fmuls
inc
push
mov
cmp
lock
inc
sub
mov
lcall
pop
push
xchg
sti
sub
ja
xchg
aas
xorb
xlat
decl
cmp
dec
cmc
in
jmp
test
in
in
fstl
ds
data16
dec
addr16
lock
xrelease
sub
decl
inc
mov
cli
pusha
popf
sbb
inc
ret
leave
aas
jae
aam
sbb
call
lahf
aam
xor
js
xor
hlt
xchg
xchg
jae
xadd
mov
dec
arpl
push
ret
dec
je
hlt
xchg
movl
in
lods
and
icebp
push
mov
fidivrs
movsb
mov
std
push
out
or
mov
ss
lcall
push
mov
xor
je
jl
loopne
push
xchg
pop
movsl
aaa
adc
mov
or
ljmp
ljmp
lods
and
xchg
or
jb
xchg
je
shlb
fs
enter
mov
arpl
cmp
jnp
sub
aad
cmp
scas
inc
ljmp
shr
cld
jo
fs
sarl
int3
pop
xrelease
sbb
mov
pop
inc
pop
mov
mov
xchg
push
adc
jle
jb
pop
loopne
je
subb
and
mov
incl
cmp
lock
notl
cmpsl
jp
sbb
ror
dec
paddsb
jb
inc
movsb
add
call
cs
fstpt
and
andl
pop
xor
ja
hlt
repnz
setae
js
or
adc
jbe
lret
lret
test
pop
ljmpw
incl
mov
xor
rcll
or
xchg
mov
sub
and
aad
xchg
jmp
ljmp
call
mov
xor
loopne
daa
cmp
test
sbb
shrl
jl
decl
pusha
addb
xor
sarb
jg
mov
out
pop
andl
aad
test
out
test
mov
or
mov
test
dec
arpl
push
std
push
cmpsl
scas
dec
je
or
push
jo
push
rorb
xchg
ljmp
shrb
jo
into
inc
inc
ret
lcall
shlb
decl
mov
sub
fs
mov
xor
push
sub
dec
dec
push
leave
xor
icebp
mov
jbe
mov
mov
loopne
call
xchg
add
aam
incl
mov
lods
xchg
sbb
fcmovnbe
xor
mov
add
adc
leave
fcomip
pop
std
inc
xchg
jecxz
dec
pusha
cmpsl
in
cmp
loope
cmp
data16
fcomip
call
insl
adc
cmp
push
sahf
sub
imul
mov
cld
jns
xlat
dec
call
push
mov
shl
daa
mov
cmp
negb
sub
repz
incl
sbb
dec
cmp
aad
jne
jecxz
mov
and
xor
mov
or
inc
ljmp
lods
xor
xchg
pop
ss
jne
lret
push
call
push
aas
add
jmp
lods
mov
xchg
sbb
mov
divb
mov
call
add
addr16
and
add
pop
push
cwtl
jp
in
push
xor
ja
xor
jmp
shlb
cmp
fists
jg
jbe
fmuls
test
inc
out
lcall
jle
inc
push
out
sub
and
loopne
push
popa
or
test
out
out
out
cs
cmp
push
cmpsl
cwtl
sbb
imul
cwtl
or
lret
cs
xor
and
push
mov
sub
arpl
push
cmp
push
inc
iret
pop
xchg
or
and
imul
mov
mov
push
mov
stc
loop
ss
or
jmp
xlat
lods
es
arpl
and
ljmp
decl
cmp
jno
xlat
inc
lret
inc
xchg
pop
movsl
sbb
icebp
lods
movsb
outsb
push
ret
lcall
mov
sub
inc
inc
adc
jle
leave
clc
and
call
lcall
inc
xor
fs
bound
sti
xchg
pusha
cwtl
jle
inc
or
xchg
add
inc
adc
mov
imul
movsb
mov
xchg
push
fwait
ret
sbb
pushf
lds
and
dec
test
mov
push
arpl
in
add
icebp
push
cld
add
add
mov
inc
je
dec
fcomip
outsl
aam
mov
insl
jge
xchg
cli
int
jnp
add
mov
and
cltd
out
mov
sub
inc
sub
aas
mov
xor
fcomip
pop
aaa
mov
inc
push
data16
lock
mov
test
xor
cmp
mov
pop
sbb
adc
cld
jecxz
dec
iret
pop
in
pushl
jge
mov
fs
lahf
dec
cmpsl
outsl
inc
xchg
pusha
mov
or
call
push
jmp
stc
into
adc
insl
lret
loop
push
mov
cwtl
sub
lcall
and
das
cli
sub
repz
aam
popf
mov
mov
lods
stos
xchg
mov
ficomps
ss
clc
jl
jmp
mov
xor
das
xchg
ljmp
jle
lea
imul
sahf
out
loope
dec
mov
xor
pop
sub
cmp
movsb
repnz
insl
iret
insb
xchg
dec
and
jl
sub
mov
mov
aam
jge
cmc
loope
inc
decl
adc
lahf
movsl
data16
out
aad
add
ljmp
cwtl
decl
jge
mov
xchg
mov
sbb
aaa
stos
lret
lret
sub
lcall
push
fldcw
in
in
pop
mov
es
and
jns
repz
xchg
pushl
shlb
xchg
push
xchg
mov
addr16
daa
data16
inc
out
jl
inc
xor
fwait
daa
xchg
jns
lods
out
in
dec
or
xor
ljmp
cmp
push
outsb
roll
add
pop
and
fisubl
jmp
shrb
sti
add
fdivr
jmp
inc
jg
sbb
cmpl
mov
inc
ds
ljmp
pusha
es
popf
xchg
cmpsb
ljmp
insb
xchg
int3
imul
test
das
and
sahf
push
push
mov
push
sbbb
xor
lcall
mov
ljmp
sbb
inc
jge
mov
pusha
inc
mov
arpl
incl
or
xlat
into
daa
or
jl
lods
mov
or
mov
fwait
cmp
call
jo
pop
adc
push
fcoms
xorl
fwait
insb
push
cmp
lcall
sub
call
jle
push
jbe
inc
gs
outsb
lret
inc
pop
iret
jle
mov
xchg
lcall
adc
cmp
add
in
es
xor
lods
ss
scas
mov
xchg
mov
add
inc
pusha
push
push
cmp
jmp
and
pop
insl
imul
pop
mov
or
in
jecxz
xor
dec
mov
subb
cmpsb
adc
ja
jno
pop
cmp
and
xchg
jmp
clc
xchg
rcrl
mov
push
fldt
leave
test
push
test
das
out
test
cmpsb
adc
pop
out
std
stos
pusha
jno
fwait
sbb
mov
negb
lods
js
rolb
adc
aaa
mov
jmp
mov
sbb
adc
stos
js
sub
lds
adc
xor
push
icebp
ror
popf
mov
mov
jmp
pop
adc
xchg
orl
movsb
sahf
movsl
add
js
jo
sarb
decl
mov
movsb
mov
push
in
rcrb
fwait
sub
mov
in
pop
call
pop
mov
je
push
pop
and
out
sbb
xchg
sub
lods
in
addr16
das
pusha
pop
mov
lcall
nop
pop
push
pop
dec
mov
pop
and
movsb
sbb
xor
dec
ss
int
cmp
jle
incl
fldl
leave
clc
adc
adc
ss
xchg
gs
and
imulb
in
rcrl
mov
push
pop
sbb
lret
dec
popa
push
pop
or
enter
xchg
in
sub
lcall
popa
sub
sbb
jno
out
push
shll
fcos
lahf
shl
lret
sbb
cli
mov
push
sub
lahf
cwtl
fldt
sub
vmwrite
xchg
leave
cmp
jg
jmp
jmp
sub
push
in
gs
add
dec
call
dec
stos
fisttpl
test
push
sub
mov
inc
repnz
xchg
popf
cltd
mov
cvtps2pd
push
mov
mov
gs
pop
outsl
push
test
nop
out
lahf
jnp
fiaddl
cmp
and
lock
jmp
dec
pop
nop
lahf
rolb
jl
lcall
orb
push
icebp
push
std
das
adc
xchg
mov
pop
das
sbb
jl
andps
out
fidivl
push
mov
icebp
inc
pushl
adc
pop
aad
mov
jnp
decl
jg
mov
pop
lret
je
mov
test
pushfw
jno
cltd
ljmp
in
pop
dec
sub
or
mov
cmp
repnz
push
in
sbb
push
xchg
leave
or
and
shlb
mov
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
shrl
imul
lahf
outsb
clc
roll
mov
add
xchg
je
faddp
aam
ds
xchg
pop
pop
loope
rorl
cmp
sbb
dec
mov
inc
loopne
push
or
mov
test
sbb
add
jle
fwait
inc
jnp
xchg
mov
mov
scas
incl
adcl
repnz
stos
test
mov
rcl
lcall
xor
jbe
sbb
adc
call
push
cmp
jg
inc
sub
inc
repz
xchg
fcmovb
jge
jmp
rcrb
inc
push
rclb
ret
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
mov
repz
lea
ja
fadds
stos
sbb
and
inc
sahf
nop
mov
call
dec
clc
fdivl
sbb
movsb
test
xchg
popf
sahf
push
cwtl
dec
call
add
and
mov
pushl
xor
cmpsl
inc
fwait
inc
cld
es
push
sbb
test
pusha
cmp
sbb
sub
decl
cli
adc
dec
les
repnz
mov
cmp
adc
cmc
out
pushl
push
sbb
jge
leave
popf
xlat
js
push
fs
cmp
sub
sarb
xchg
xor
mov
xchg
xchg
mov
popl
pop
fnstenv
outsb
cli
xor
out
pop
arpl
mov
xor
pop
jno
lods
shl
inc
dec
repz
arpl
aam
stos
decb
lahf
adc
imul
sbb
pop
loopne
notl
call
adc
sbb
imul
out
out
dec
dec
scas
loopne
sbb
jmp
insb
stos
insl
int
push
jne
pushf
rorb
stos
out
pop
mov
in
xchg
or
lcall
add
xchg
sub
shll
popf
adc
push
jg
mov
test
aas
jmp
addr16
cmpsl
sahf
xor
push
jge
xchg
xor
lahf
aaa
cli
add
std
out
out
jb
xchg
jmp
mov
pushf
out
xchg
int3
push
popa
add
dec
stos
inc
call
std
das
mov
cli
inc
mov
inc
add
mov
lods
shl
iret
pop
xchg
inc
mov
enter
inc
fdivr
iret
sbb
in
test
test
dec
jmp
sub
or
add
xchg
aas
mov
fsubrl
js
inc
into
popf
cmp
jp
ljmp
shl
xchg
sbb
in
pop
adc
pop
xchg
add
dec
mov
fcomip
decl
repnz
pop
sub
loopne
retw
xor
dec
pop
in
imul
inc
fbld
pusha
nop
adc
bound
add
ljmp
jnp
js
push
in
je
xlat
cmp
imul
decl
imulb
xlat
filds
mov
xor
mov
bound
ljmp
test
stos
add
lock
cmp
push
mov
ja
mov
test
jg
mov
jns
in
clc
adc
pusha
scas
test
pop
and
lods
push
std
pushl
lahf
cmc
ror
lahf
push
ror
cmp
inc
add
jbe
jo
clc
jmp
dec
pop
jmp
jbe
push
dec
pushf
or
lods
jmp
add
icebp
loope
pop
sub
mov
xor
bound
mov
push
fcomps
popa
add
lret
pop
arpl
in
sub
sub
outsl
sarl
nop
mov
sub
push
push
cld
scas
xchg
hlt
or
rclb
sbb
inc
add
cbtw
mov
jp
xchg
push
movsb
xchg
push
push
mov
stc
jecxz
mov
adc
data16
mov
fwait
andl
pushl
lods
loopne
xchg
xor
stos
test
jmp
xlat
xorb
mov
call
std
jns
stos
push
push
pop
call
jmp
xor
lcall
js
in
outsl
xor
xor
in
inc
aaa
addb
incl
or
mov
loopne
in
shl
inc
js
mov
out
cli
decl
mov
inc
push
sub
sub
addr16
dec
dec
jle
mov
call
mov
dec
pop
sub
add
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
call
clc
enter
cli
xor
enter
dec
add
inc
push
fs
add
jo
dec
sar
ljmp
mov
jmp
dec
push
js
cli
sub
mov
test
test
in
movsb
push
and
inc
add
incl
mov
ja
mov
jle
xor
test
mov
incl
xchg
out
iret
cmp
inc
mov
xchg
ret
jmp
std
ret
push
mov
adc
push
mov
lods
sub
mov
lock
out
xchg
sar
lcall
dec
fwait
mov
shlb
mov
sbb
xchg
add
push
incl
loope
shlb
inc
lods
sub
ret
sub
jbe
cli
cwtl
jo
scas
clc
incl
scas
gs
pushf
sbb
rolb
fldcw
stos
jmp
inc
ja
scas
and
out
sub
xor
arpl
mov
push
pop
scas
aaa
mov
ljmp
mov
in
mov
jp
push
andl
adc
pop
pushf
sbb
lcall
mov
jns
mov
out
rolb
movsb
dec
rolb
mov
je
cld
mov
pop
lcall
mov
shll
into
ret
filds
sbb
xchg
add
pop
mov
mov
sti
dec
add
push
in
and
icebp
ja
cmc
lock
out
xchg
bound
or
push
int3
xchg
jge
lock
or
mov
lds
fcmovnbe
mov
jg
inc
inc
mov
les
js
cmp
imul
sub
cld
pushl
mov
scas
scas
test
cli
xchg
inc
aad
js
push
cwtl
movsl
dec
jno
decl
xchg
push
lods
loope
cld
outsb
stos
mov
and
shll
movsl
ud0
ljmp
mov
in
sub
jae
rcrb
push
insb
ds
push
pop
mov
pop
lret
lods
pop
stos
fwait
push
dec
mov
mov
in
mov
js
cli
decl
cmp
pop
cs
addb
jns
stos
add
sub
fdivr
scas
movsb
push
cwtl
jle
dec
jmp
pushf
dec
es
sarb
repz
ljmp
sbbl
jbe
fdivr
insb
sbb
inc
out
mov
jp
pop
loope
xlat
popa
pop
sbb
push
rcrb
cmp
mov
push
add
jae
xchg
pop
je
jmp
push
repnz
push
test
dec
dec
shll
adc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
fldl2t
ficomps
cmp
mov
pop
xor
adc
repnz
lods
je
divb
sub
popa
lret
pushl
mov
dec
xchg
fimull
mov
sub
cwtl
mov
ljmp
xor
rcrb
or
lock
pop
pushf
cmc
addr16
aaa
std
enter
mov
mov
call
jbe
jae
mov
jmp
outsl
andb
xchg
pop
mov
mov
pop
in
out
in
sub
clc
aas
mov
mov
loop
cmp
outsl
daa
sbb
ret
mov
rorl
pop
aam
sbb
jmp
std
xlat
rcl
negl
mov
mov
pop
ljmp
les
mov
dec
mov
xor
sbb
iret
lahf
dec
inc
mov
call
minps
imul
fnstcw
repnz
mov
sub
ljmp
inc
pop
hlt
out
fmull
mov
add
ljmp
mov
lcall
sar
ljmp
sub
loopne
sub
jl
shlb
inc
and
cmp
pushl
bound
fdiv
dec
push
int3
fpatan
lods
in
mov
ljmp
push
test
adc
xchg
out
lcall
mov
call
rcl
aas
inc
clc
cmp
push
aaa
mov
dec
sahf
ffreep
enter
test
ret
pushl
sub
or
addb
stos
subb
aas
and
out
roll
daa
or
pop
das
dec
cmp
push
mov
mov
jl
rcl
mov
call
dec
sbb
addr16
xchg
mov
popa
inc
rcrl
je
push
jecxz
in
push
ret
insb
clc
std
add
jmp
jp
pop
mov
aaa
xor
clc
mov
nop
ret
sbb
inc
shr
loope
ljmp
into
les
and
shrb
repz
ljmp
jl
xchg
push
mov
roll
or
xchg
lret
insl
test
arpl
lret
sub
sar
xor
inc
imul
xor
les
xchg
pusha
clc
inc
jb
push
cmp
movsb
fldcw
push
sti
and
movsl
gs
imul
jp
xor
jne
sub
cmp
pushl
or
fistpl
adc
rcll
mov
or
or
popa
sbb
decl
sub
lods
lea
or
icebp
jb
mov
pop
inc
lcall
jg
fwait
out
mov
sub
int
jmp
mov
and
incl
test
cmp
cwtl
jge
repnz
and
mov
imul
into
leave
dec
cld
fcomip
out
xchg
insb
mov
push
arpl
inc
shll
xor
pop
icebp
mov
xchg
pushf
es
test
cmpsl
outsl
sub
push
shlb
cmp
decl
fnstcw
mov
fdivl
fisubrl
fsubp
inc
in
mov
ljmp
mov
scas
cmpl
xor
jnp
sbb
xor
dec
mov
push
or
repz
aas
xor
fnstenv
sub
jne
adc
jae
pop
scas
cli
decl
shlb
jbe
enter
or
decl
lea
daa
push
sbb
sub
push
xor
mov
xchg
jmp
shrb
sar
push
stc
and
push
mov
inc
int
fnsave
jae
and
shlb
in
div
les
pop
lods
mov
cmp
xchg
push
js
outsb
sub
inc
hlt
lret
and
sbb
scas
mov
xor
repz
or
mov
sub
neg
pop
add
sti
adc
lcall
filds
jecxz
push
scas
popf
das
divl
fsubrp
movsl
push
ss
mov
call
cmp
movsb
push
push
mov
pusha
jecxz
test
add
out
jno
jge
incl
aas
adc
out
dec
inc
es
cmpsb
call
in
in
out
or
call
shll
mov
movsb
fdivr
push
dec
sub
lods
xchg
xchg
mov
cmp
loope
movsl
or
sub
jnp
mov
aaa
test
inc
ljmp
in
xchg
fcoml
sarl
repz
movsl
mul
or
cli
daa
pop
out
add
jmp
dec
mov
adc
or
cld
bnd
sbb
mov
decl
test
clc
cmp
and
inc
outsb
cmp
aas
lcall
pop
shll
pop
sbbb
popa
bound
pop
cmp
leave
jg
cmp
call
cli
inc
adc
mov
dec
xor
inc
in
lea
cmpl
inc
icebp
movsb
xchg
popa
mov
test
cmp
out
pop
aaa
shl
scas
pop
dec
shll
jmp
movsb
push
ds
cmp
nop
das
ret
xchg
add
mov
push
enter
push
bound
in
out
pop
ret
add
mov
in
xchg
clc
mov
mov
add
int3
pop
jp
push
imul
out
lcall
pop
ss
mov
and
dec
loop
push
sub
pop
mov
fisttps
fs
movsl
cld
cltd
outsb
lock
mov
push
and
mov
and
jmp
or
repnz
jecxz
and
sbb
or
jo
lret
repz
pop
mov
push
popa
cmp
pop
insb
dec
adc
fsubrl
xchg
inc
insb
xchg
or
decl
add
ja
mov
ljmp
or
test
call
in
dec
push
pop
xchg
jbe
cmp
data16
les
mov
adc
push
int3
ljmp
pushf
jecxz
clc
jno
cmpsb
int
mov
mov
movsl
cmc
outsb
push
push
pop
movl
mov
test
push
pop
pusha
inc
fildll
neg
stc
cmp
adc
sti
into
cmp
push
imul
or
jge
mov
and
movsb
stos
mov
std
in
lock
ljmp
lahf
sub
mov
xchg
xchg
ja
sub
fbstp
sub
mov
add
nop
and
sbb
mov
push
icebp
nop
pusha
cmp
push
std
dec
xchg
mov
mov
push
ret
lods
or
aas
dec
std
in
and
push
push
add
and
addl
push
jg
xor
cmp
loop
fdivrs
call
fiaddl
lret
call
and
imul
mov
adc
decl
cwtl
out
movl
cli
dec
fdivr
cltd
push
orb
mov
fisttpl
xchg
ja
cli
mov
cs
sub
jns
pushf
jae
shrb
sbb
sbb
jmp
mov
sahf
sbb
xchg
xlat
leave
test
add
jb
mov
arpl
mov
add
adc
stos
iret
ret
fistpl
test
inc
cltd
shl
and
mov
decl
push
xchg
pop
or
pop
loopne
sub
inc
mov
and
pop
inc
repnz
lock
jg
iret
ds
aaa
popa
je
in
push
dec
xchg
dec
and
jl
adc
inc
or
aaa
cmp
enter
mov
jle
loopne
ja
mov
cli
les
cld
incl
add
jne
lock
sar
cmpb
sbb
loope
cmp
mov
mov
fdiv
in
inc
jb
xchg
pop
inc
xlat
rcrl
push
adc
mov
jb
jle
xlat
mov
jmp
and
add
out
adc
in
sarl
sub
mov
loopne
shrl
sbb
pusha
jo
mov
mov
notl
dec
cmpsl
push
mov
in
mov
int3
cmc
dec
pop
mov
add
in
js
loope
mov
and
mov
mov
fildll
push
sbb
fsts
inc
fistpl
sub
out
cltd
lock
negb
mov
addl
dec
lret
sbbb
nop
mov
inc
adc
push
ljmp
xchg
cmpsl
lods
sub
out
cmp
shlb
pop
das
pop
xor
hlt
xchg
inc
fisubrl
jmp
mov
rolb
xor
mov
mov
inc
pavgb
pop
cmp
addr16
ret
push
lahf
cmp
sbb
in
xor
sbb
call
mov
ja
jnp
fidivs
xor
dec
sub
sbb
pushf
pop
jmp
xchg
mov
scas
lcall
movsb
bound
push
pushf
sbbb
pushl
dec
lcall
lcall
add
jmp
lcall
or
int
pop
inc
xchg
in
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
cmp
mov
jp
jo
inc
jbe
jno
jecxz
fwait
push
xor
push
add
lock
lcall
or
inc
and
jnp
ds
dec
add
push
not
push
mov
test
push
sub
jp
je
or
ljmp
rol
cmp
xchg
mov
pushl
cmp
shl
aam
mov
sub
loope
push
xchg
fsubl
out
cmp
out
push
sub
insb
fisubl
cmpsl
popa
fldenv
ds
repz
jge
arpl
movsl
jmp
roll
sarb
inc
int
lea
cmp
ss
test
incl
sub
or
mov
jbe
insb
xchg
leave
in
in
add
mov
jo
in
imul
push
xor
xchg
xchg
jp
mov
test
mov
adc
out
into
shrl
inc
stos
xor
add
pop
fwait
mov
daa
fwait
xor
incl
imul
mov
sub
or
cmpsb
push
insl
push
into
dec
push
lcallw
jmp
push
test
mov
xchg
jae
and
les
stc
enter
cmp
adc
incl
cmpsb
sub
xchg
sub
or
jno
lods
xchg
mov
into
xchg
jae
fisubrs
pop
ljmp
push
in
sti
push
or
mov
xor
ljmp
cmc
dec
fmull
call
pop
adc
jle
sub
test
or
in
sub
test
cmpsb
cwtl
cmc
push
addr16
jns
in
hlt
mov
movsb
mov
push
in
cld
fmuls
adc
mov
icebp
mov
cmp
out
inc
out
pop
mov
jg
std
fs
xor
dec
out
push
mov
mov
add
shlb
movsb
icebp
call
mov
fwait
outsb
jae
mov
in
dec
in
xchg
dec
loope
xor
jecxz
xchg
add
mov
aaa
std
ljmp
dec
lcall
xor
adc
pushf
mov
mov
jmp
out
jae
mov
dec
mov
icebp
cmp
xchg
cmp
inc
mov
sar
pushl
add
and
mov
push
sbb
vunpckhpd
stos
mov
jg
ljmp
xchg
push
ret
xchg
shr
mov
pop
or
ljmp
gs
outsl
dec
jp
pushf
stos
fdivrl
push
mov
fcomip
mov
push
push
loop
or
xchg
pusha
bound
jo
int3
lcall
adc
idiv
mov
cmp
dec
scas
xchg
lahf
and
insb
mov
mov
sub
jmp
push
mov
test
enter
mov
movsb
xorl
mov
sbb
sbb
out
stos
test
jne
mov
mov
and
push
pop
fisubrs
or
mov
repnz
inc
jp
xor
aam
or
or
jmp
mulb
xor
sarb
cmp
pushl
std
fbstp
decl
cmp
sbb
cmpb
daa
jo
movsb
jb
lods
gs
push
loope
jmp
cmpsb
test
int3
stos
sarb
loopne
aam
int3
out
push
xchg
jl
negl
fs
push
jnp
sbb
lret
lds
decl
test
inc
cmp
imul
decl
add
call
outsl
popa
incl
mov
fdivl
ds
insb
add
jmp
cmp
mov
add
or
pop
or
cmp
fwait
testb
ss
dec
scas
sbbb
dec
mov
mov
out
or
ljmp
lcall
addr16
pushf
jmp
push
test
fsubrs
sub
sbb
es
mov
popa
ret
mov
mov
pop
jnp
adcb
nop
adc
xchg
rol
lcall
jmp
cltd
pop
out
dec
scas
xchg
sbb
pushl
mov
adc
dec
xchg
sbb
inc
in
test
dec
pusha
xlat
js
test
call
aaa
mov
or
pop
jge
pop
dec
mov
dec
test
push
and
stos
pop
lock
jecxz
adc
test
xor
mov
jmp
and
cmpsl
push
and
push
or
xchg
outsl
sbb
subb
pushf
cld
dec
int3
out
adc
or
in
dec
dec
imul
inc
xchg
scas
cmpsb
dec
pop
mov
jbe
pop
lret
rclb
push
xor
aam
lock
push
and
jne
and
push
jge
addr16
out
loope
sbbb
mov
mov
push
pop
sbb
aam
popa
or
xchg
ds
jge
popf
or
mov
test
lcall
jb
add
std
bound
jge
out
add
imul
daa
sbb
mov
cmpsl
in
adc
or
or
or
iret
adc
inc
push
jle
int
xchg
inc
hlt
clc
out
dec
mov
daa
mov
add
cmp
fs
in
cmpsl
scas
or
mov
orb
gs
jg
dec
push
out
sbb
shlb
iret
in
imul
leave
mov
out
jb
dec
decl
pop
and
cwtl
stos
mov
bound
call
enter
mov
rcrl
push
mov
das
and
outsl
inc
dec
sar
mov
shll
rcl
jno
dec
inc
xorl
into
xor
cmpsl
inc
jo
stc
xor
jg
ds
gs
insl
stc
pusha
xor
fdivs
rclb
or
in
mov
mov
lcall
in
mov
test
testl
xor
adc
lock
or
ljmp
sbb
pusha
push
jbe
push
divb
aaa
adc
std
adc
arpl
cmp
decl
mov
repz
daa
jb
js
jae
movsb
pop
inc
push
testl
jmp
mov
pop
daa
sub
or
ror
das
fildl
or
push
daa
movsb
add
ljmp
js
lahf
add
xchg
adc
incb
movsl
ja
dec
add
push
loop
leave
push
jg
shll
xchg
sar
das
push
push
inc
outsl
xor
orl
push
inc
sti
cmc
pop
bound
sar
fcomip
nop
jle
dec
mov
popa
jb
sti
cmpsb
cmp
mov
push
inc
sub
jmp
mov
shll
shll
cs
fsubp
sbb
adc
lea
pushl
nop
mov
mov
mov
jns
mov
pop
shlb
outsl
sbb
shrl
jecxz
ret
xchg
mov
pop
push
cmp
movsl
data16
jg
and
std
or
push
lds
out
rorl
push
dec
aaa
push
xchg
rcrl
mov
test
push
leave
decl
sub
mov
dec
lea
or
iret
dec
push
js
nop
mulb
stos
ljmp
outsb
and
or
push
pop
or
pop
jno
out
mov
adc
sub
outsl
clc
call
fdiv
pop
cmp
pop
push
push
ja
lods
adc
cmp
jp
aas
cmp
daa
cmp
jg
lods
or
adc
les
out
into
in
pop
gs
adc
incl
cld
repnz
lods
int
xchg
fwait
popf
sub
sbb
mov
push
test
scas
mov
idiv
pop
cld
roll
jb
sub
lcall
movsb
imul
unpcklps
push
nop
icebp
mov
outsb
mov
fisubl
and
push
scas
mov
mov
pop
call
and
or
in
dec
call
in
jg
or
mov
enter
inc
andl
sti
jg
pop
xchg
out
orl
add
mov
les
lds
add
inc
sahf
dec
pop
clc
lcall
stos
push
into
fimull
cmpsb
enter
mov
dec
jmp
out
jge
jmp
sub
ljmp
mov
rcrb
aaa
into
inc
mov
dec
nop
aas
incl
inc
pushl
cmpsb
movsl
mov
fdiv
push
bound
jnp
int
or
incl
lock
repnz
xlat
shll
pcmpeqb
push
hlt
inc
cmc
mov
and
lods
xchg
push
lods
mov
sbb
adc
push
je
lret
pop
lahf
pop
popf
in
jnp
ret
lret
push
xchg
mov
jmp
mov
ljmp
mov
inc
inc
ja
mov
xchg
lea
jg
shlb
mov
call
pop
pop
scas
jb
popa
fistl
sbb
or
cmove
fildll
lahf
loop
mov
or
push
daa
in
into
sbb
xlat
rcll
dec
xchg
mov
icebp
jg
mov
daa
or
lret
sub
xor
out
inc
cltd
push
jmp
add
test
mov
push
add
inc
add
in
nop
clc
decl
dec
lock
fsubs
out
fs
pop
cltd
adc
in
cmpsl
sub
sar
ljmp
sbb
jg
jle
hlt
loop
sahf
dec
rorl
sub
loope
jbe
jle
fwait
ljmp
sbb
push
sarl
nop
ja
fiadds
sbb
pop
jp
push
dec
shlb
pusha
sbb
sbb
jmp
imul
xor
cltd
out
push
adc
and
dec
cmpsl
or
and
clc
decl
fcmove
mov
std
mov
mov
adc
cmovs
ljmp
out
std
lahf
lock
jg
adc
cld
mov
mov
test
out
xor
insb
mov
push
push
sbb
pop
in
jge
pop
arpl
xor
sub
decl
testb
out
push
mov
mov
int3
sbb
sbb
and
add
les
clc
lcall
pop
test
ljmp
xchg
call
loopne
popf
or
sub
js
lret
imul
jmp
push
xor
pop
lcall
lcall
and
push
popa
in
sbb
pop
loope
out
mov
cmp
incl
mov
cmp
fisubrl
test
lds
dec
cli
xchg
aam
xor
xchg
jmp
movsb
fidivs
push
adc
adc
dec
xor
xchg
push
js
and
xchg
incl
fs
add
and
pop
add
pop
mov
aas
add
test
mov
call
cmp
pop
je
pop
ds
xor
sbb
notl
add
sub
hlt
ljmp
sar
fbld
mov
xchg
mov
in
xchg
cmp
jmp
mov
test
inc
jae
mov
sbb
pop
pop
adc
je
icebp
jbe
mov
mov
sub
incl
inc
mov
lds
mov
cwtl
push
xchg
out
inc
iret
push
cmp
xlat
stc
lcall
iret
syscall
lods
iret
push
arpl
mov
leave
in
mov
xor
out
push
in
xchg
addr16
fadds
cli
jg
lcall
or
push
pop
and
stos
sbb
dec
xchg
cmp
ljmp
in
pushf
fisttpl
daa
iret
jns
cmp
sub
enter
notl
cmp
xor
pushl
ds
pop
mov
cwtl
dec
xor
fcompl
lods
jp
ret
push
stc
in
lret
incl
daa
in
test
out
dec
sub
adc
lret
and
cs
and
or
into
jmp
jle
hlt
sarl
mov
sarl
js
add
clc
jge
popf
ljmp
int3
int3
jg
and
cmp
push
decl
add
lret
mov
cmp
jmp
ss
ljmp
mov
push
or
xchg
xchg
sbb
mov
out
or
pop
dec
stc
push
cmp
inc
cmp
push
aaa
and
in
cs
push
jl
cmpsl
pop
sub
decl
mov
cmp
jge
enter
xchg
bound
iret
lock
mov
push
mov
jmp
sbb
orb
mov
out
lcall
pop
push
rcl
mov
push
cmp
jno
int3
xchg
lahf
scas
and
push
dec
or
mov
mov
xchg
repz
ss
int
xchg
jmp
xchg
aas
adc
jno
inc
ret
mulb
fs
adc
push
jle
sti
shl
inc
xlat
ljmp
add
mov
sbb
insl
cs
jne
sub
sbb
mov
pop
sbbb
hlt
dec
jecxz
sbb
hlt
lcall
xlat
in
bound
xor
shr
inc
sub
inc
pop
popa
mov
insl
mov
lret
ret
or
push
loopne
push
negl
ret
xchg
imul
ljmp
adc
adc
daa
push
rcll
add
xor
les
dec
test
pushl
cmc
mov
sahf
insb
pop
insb
mov
pusha
pop
dec
scas
add
jbe
insb
repnz
cmp
call
in
aad
mov
repnz
mov
jmp
lahf
inc
faddp
sbb
in
shll
xchg
adc
adc
sub
das
daa
js
sub
push
xor
int
sub
sbb
push
add
aas
repnz
push
rorb
push
fs
rcrb
sahf
xlat
dec
fstl
in
pop
cmp
push
cmp
lret
mov
inc
out
jbe
push
xor
nop
inc
stos
call
pop
sbb
sub
or
jne
mov
ss
and
pop
jg
std
jg
pop
and
pop
std
xchg
jo
test
bnd
jmp
popa
out
call
jmp
dec
in
loope
pop
ja
call
out
push
aas
jnp
cmpsb
push
ficompl
shll
std
jmp
adc
js
push
pop
sub
jb
sub
pushl
test
xor
xchg
popa
xchg
movsb
int
stos
in
pop
and
cld
cmp
cmc
icebp
jg
push
imul
mov
stos
cmc
mov
add
adc
pop
jne
movsl
lods
mov
aad
in
or
popf
mov
sub
xor
jmp
scas
mov
lcall
xchg
test
mov
mov
imul
jle
test
ljmp
or
imul
xorl
xor
jl
sbb
lcall
incl
dec
sub
ret
jp
mov
lret
shlb
inc
xor
sbb
dec
inc
test
mov
push
xor
sar
call
ds
dec
sti
dec
sarb
int3
mov
sbb
lcall
ret
inc
adc
fwait
sub
gs
mov
or
pop
xor
in
movb
lock
sti
xchg
inc
add
jge
sarb
xchg
pop
inc
sti
test
pusha
jp
mov
lcall
test
inc
out
jp
aam
adc
fists
jmp
subl
call
push
add
loope
mov
sbb
lock
loopne
and
jnp
add
push
es
pushl
std
decl
mov
call
xchg
dec
xchg
dec
pop
dec
je
sbb
cmp
iret
enter
mov
push
pop
into
push
ret
scas
hlt
push
cmp
repnz
decl
scas
pop
and
loope
out
xchg
jne
xlat
adc
push
jmp
push
push
cmp
add
push
mov
xchg
or
rcrl
lods
inc
into
sbb
sub
ljmp
daa
xchg
adc
sbb
clc
inc
inc
mov
enter
mov
xor
test
jo
sbb
cli
incl
pop
add
pop
dec
lods
and
shlb
in
mov
inc
fwait
and
out
pop
arpl
cs
inc
inc
ficompl
push
insl
je
pop
pop
int
decl
les
or
int
shrb
push
pop
push
fisttpll
pop
pop
mov
jle
mov
cs
push
outsl
push
aam
cmpsb
sub
jge
shrb
add
cli
jno
or
icebp
pop
or
pop
std
sbb
sbb
decl
add
movsb
sub
movsl
fadd
and
scas
shll
pop
push
mov
and
ljmp
dec
cmp
push
and
inc
inc
movsb
or
decl
jle
mov
jb
jb
push
cltd
jg
icebp
cmpsl
test
pop
loopne
jl
mov
mov
sub
push
pushl
mov
xor
mov
lret
cld
jg
icebp
cmp
into
mov
rcrl
fcoml
ret
into
arpl
lret
iret
lcall
xchg
dec
mov
sub
mov
loop
cs
jg
dec
cmpl
imulb
adc
int3
hlt
xchg
push
xlat
inc
cmp
dec
in
pop
lcall
push
clc
dec
inc
push
into
sub
jo
hlt
stc
pop
ljmp
add
fcomip
fwait
int
mov
sub
not
pop
sbb
rcrb
push
push
sar
ficoms
jecxz
pop
push
push
scas
jbe
cmp
inc
mov
mov
cmpsl
mov
rclb
pop
sbb
movl
xchg
sub
cmc
mov
outsl
call
imul
ljmp
push
cld
testb
in
popa
sbbb
outsl
jmp
hlt
mov
loop
sbb
lret
in
jae
sub
sub
pop
cmp
inc
fcomi
in
lds
enter
lcall
jmp
mov
dec
pop
aaa
inc
enter
in
add
dec
pop
pop
out
adc
mov
loope
and
xor
fsubrs
jmp
lds
xor
xchg
or
sub
bound
stc
lcall
rcl
mov
jle
fcoml
mov
sub
gs
mov
notb
fists
adc
scas
not
add
jb
mov
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
movsl
inc
dec
outsl
pushl
jg
sbbl
push
mov
sahf
loopne
fnstsw
xor
mov
call
pop
fstpl
hlt
jp
mov
div
jmp
pop
lock
aaa
pop
dec
ss
mov
scas
mov
stc
clc
add
adc
call
fwait
inc
jge
cmc
or
das
gs
push
sub
cs
bound
call
out
movb
mov
sub
mov
jne
sbb
xchg
cld
push
inc
pop
mov
decl
jae
imul
mov
push
jae
push
mov
notl
int3
stos
mov
loope
call
fs
ss
pop
xor
leave
loope,pt
pop
loopne
lret
jo
std
mov
xchg
outsb
lods
push
cmp
pop
xor
add
in
cmp
mov
ljmp
xor
mov
cwtl
loope
stos
cltd
mov
jecxz
in
push
xor
fisubrl
dec
cli
xchg
mov
icebp
push
jmp
and
ljmp
decl
and
adc
scas
mov
xchg
or
cmp
jmp
pop
sti
lods
je
in
daa
cli
in
push
mov
les
push
mov
scas
inc
sbbb
mov
in
dec
push
adc
mov
jno
mov
xchg
mov
or
jge
leave
push
add
pop
stc
push
insb
xchg
push
stos
xor
xchg
jae
push
push
jle
js
test
scas
add
jb
aas
dec
pop
jg
pushl
and
fsub
inc
xor
jns
les
test
push
push
mov
mov
fnsave
xor
stos
mov
mov
addr16
xchg
xor
sbb
jmp
add
push
xchg
add
ret
push
jbe
and
imul
jae
aaa
aam
add
jle
das
sub
inc
add
adc
mov
push
das
jge
add
ret
push
loopne
sbbb
xchg
and
push
jmp
ljmp
orb
fisubrl
cmpsb
jg
popl
mov
cmp
and
add
je
mov
hlt
lods
into
out
or
xor
lahf
pop
insl
mov
adc
inc
jle
add
and
inc
daa
push
adc
sbb
or
pushf
mov
xor
lods
call
and
aam
mov
mov
cwtl
fstp
lahf
fistpl
xor
ljmp
pop
mov
pop
sbb
arpl
das
mov
jne
jg
jle
inc
bound
repz
je
test
pop
clc
stos
or
test
ud0
jmp
push
sarb
inc
sbb
subl
xchg
lods
push
pop
pusha
pusha
fdivr
incl
push
fwait
jbe
push
lds
pop
push
adc
lods
and
dec
pop
inc
ljmp
lcall
mov
sub
pop
mov
adc
mov
stos
repnz
insl
cli
sbbb
scas
clc
hlt
lods
lods
scas
gs
or
loope
xlat
push
jno
xchg
int
js
dec
or
sar
into
mov
arpl
adc
cmp
xchg
sbb
hlt
cmp
pop
testb
sbb
add
cmp
mov
mov
and
dec
jecxz
ret
pop
in
jnp
sbb
xor
sub
dec
lds
adc
rol
call
pusha
leave
inc
xchg
xor
arpl
lcall
sub
fdiv
inc
xchg
push
dec
stc
or
out
pop
jae
xchg
pushf
rolb
fs
call
and
dec
stc
mov
jae
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
xchg
das
ret
call
mov
mov
data16
cmp
inc
sbb
ret
sbb
xchg
stos
jae
hlt
ljmp
sbb
iret
jp
enter
xchg
and
cmp
fistpll
or
jg
jnp
cld
cwtl
add
dec
push
dec
out
push
je
sbb
decl
xchg
sub
lea
clc
mov
call
pop
out
test
mov
xor
mov
shll
push
add
xchg
adc
xchg
push
mov
call
or
cmp
push
iret
pop
mov
cmp
out
xor
out
les
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
jmp
movsb
imul
lret
xchg
testl
lcall
xlat
mov
outsb
cmpsb
jo
cmp
incl
in
mov
rol
jmp
movsb
mov
push
in
push
mov
sub
dec
mov
jnp
enter
pop
inc
add
pop
push
jecxz
lods
xchg
std
call
bound
repz
addb
pusha
mov
stos
cmp
insl
movsl
mov
jnp
jg
sub
fnstenv
mov
pushl
and
loopne
lret
sub
sbb
andb
mov
mov
data16
fnstcw
adc
sbb
test
shl
in
pop
shl
adc
clc
inc
and
adc
add
call
sahf
imul
imul
mov
fldcw
outsl
outsl
jecxz
inc
ds
jnp
in
mov
aas
aad
adc
subl
jle
jecxz
sahf
call
push
insl
pop
jno
inc
jmp
das
es
mov
and
fistps
incl
sbb
jno
inc
dec
xor
mov
popf
out
pop
xchg
push
pop
jnp
push
fstps
and
pop
orps
repnz
shl
daa
outsb
or
xor
mov
rcrl
xchg
push
mov
jg
sub
cmpl
popa
mov
ljmp
push
dec
adc
xor
repnz
mov
int3
je
mov
mov
jmp
jp
add
enter
sbb
out
movsb
jg
dec
psubsw
or
shl
jmp
mov
mov
call
into
cmpsb
adc
push
cmc
jle
sbb
jecxz
jmp
xor
mov
test
inc
dec
dec
cwtl
mov
in
dec
sbb
dec
lcall
xchg
mov
fucom
mov
sar
nop
jg
mov
or
inc
xchg
add
out
in
paddusw
enter
sti
mov
and
mov
loopne
pop
mov
loop
mov
lret
mov
add
shl
sbb
sbb
jae
ljmp
xor
loop
mov
mov
cwtl
sub
and
rcrb
mov
sbb
or
decl
cld
iret
and
cmpl
das
or
cltd
loope
cmpsl
pop
in
iret
loopne
cmpsl
lea
cmp
pop
test
lcall
and
jecxz
out
and
dec
or
pusha
cwtl
daa
xor
xor
jg
xor
lcall
popf
jp
clc
stc
nop
inc
int3
push
jg
sbb
jmp
fdivs
adc
rclb
xchg
push
push
loope
icebp
sub
mov
cmc
add
decl
lock
sub
inc
movsb
mov
insb
test
inc
loope
icebp
lcall
mov
or
mov
cmp
adc
jns
call
cld
fbstp
add
add
push
movl
aas
xchg
fstpl
ljmp
add
mov
jecxz
cmp
and
push
jnp
mov
xor
ljmp
jmp
js
or
mov
jmp
outsl
push
pop
int
xlat
dec
decl
imul
sbb
cmp
or
jp
outsb
lock
jp
and
adc
mov
ljmp
repz
adc
enter
pushl
cld
mov
sti
cmc
sub
mov
jmp
xor
outsl
mov
call
fsubl
xor
xchg
xor
mov
add
out
aad
fstps
add
lcall
cmp
mov
lods
fsub
fdivrs
cmp
gs
rcll
add
xchg
and
lock
ljmp
adc
and
push
pop
fsubs
fcoms
cmp
testl
xor
lods
shrb
loop
or
pushl
adc
mov
sub
fnstcw
push
std
jp
push
sbb
push
in
fdiv
cmp
mov
into
out
inc
sub
ljmp
cmp
lcall
movsb
hlt
sbb
nop
push
sbb
jecxz
gs
xchg
decl
jl
or
jnp
lret
mov
xchg
mov
scas
jecxz
xchg
xchg
push
cmp
jmp
int3
out
fnstsw
xor
xchg
xor
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
or
dec
out
mov
dec
push
push
insl
fadds
and
xor
xchg
movsb
in
and
jmp
int3
rcr
mov
xchg
sbb
adc
ja
hlt
dec
mov
movsl
dec
pop
loop
inc
out
pop
insl
add
sub
inc
repnz
dec
xor
stc
dec
out
rorl
sbb
movsl
decl
xchg
in
out
push
stc
addb
sbb
jecxz
shll
mov
push
rclb
mov
call
xchg
shrb
cmpsb
fiaddl
mov
fwait
lea
out
decl
fdiv
adc
xchg
xchg
aad
mov
push
pop
jmp
mov
inc
push
jmp
mov
es
shll
hlt
out
clc
jg
jae
ljmp
fdivrl
sub
out
insb
dec
or
cs
sbb
sarl
mov
test
jmp
test
imul
mov
call
add
xor
movsb
lea
das
nop
inc
popa
loope
hlt
int3
insb
popf
sahf
stos
lcall
dec
push
sub
repz
add
lret
or
imul
stc
std
in
lcall
cmp
push
js
or
mov
int
lcall
mov
mov
fdivrp
call
adc
lret
mov
fdivr
in
push
fwait
aas
dec
call
lahf
pop
lock
lcall
adc
xor
xlat
jbe
loop
add
lcall
lcall
lock
shl
lret
jne
stos
cltd
add
iret
repnz
ljmp
dec
mov
jb
dec
mov
dec
mov
cld
lcall
ss
out
sbb
sbb
lret
jo
outsl
mov
in
arpl
and
mov
jb
repz
imul
push
dec
cmc
rcrb
adc
adc
inc
movsl
jno
cmc
stos
add
adc
mov
sub
ljmp
cwtl
test
cltd
lret
jne
mov
and
push
or
push
out
mov
push
xchg
push
loop
pushl
cld
popa
int
loopne
out
pushf
adc
xor
push
xchg
add
mov
adc
pushl
fwait
mov
and
repz
popf
mov
or
clc
decl
mov
sahf
xor
xor
aas
adc
addl
incl
je
mov
push
or
negl
sub
sub
cmp
decl
pop
jns
jg
movsl
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
ljmp
test
ficomps
pop
das
push
push
lds
and
cmp
mov
jo
iret
in
mov
negl
out
mov
mov
or
jp
mov
sub
cmp
inc
repnz
in
sub
dec
testl
lahf
push
jae
jb
out
sub
xor
push
popa
add
fbstp
cli
outsb
jb
mov
leave
xor
add
daa
test
push
addl
fnstenv
loop
pushl
ljmp
adc
add
fdiv
sti
idivl
pusha
rorb
mov
mov
inc
jg
fadds
sub
mov
ret
lock
fs
jmp
fnstenv
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
fcomip
decl
cmp
push
and
shll
test
cmp
inc
push
push
mov
jmp
inc
scas
imul
arpl
and
lret
out
add
movsl
push
mov
lcall
push
jl
cmpb
add
pop
xchg
mov
cmp
jo
mov
add
fwait
mov
inc
jg
jnp
jmp
sbb
daa
dec
lahf
add
nop
xor
and
jmp
jl
ret
aam
in
fisttpll
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
pop
dec
dec
dec
pop
fildl
adc
dec
dec
inc
ret
pushl
add
xor
sub
divb
rorb
jbe
pop
cmp
enter
jp
cmp
stos
jp
out
xchg
adc
mov
lret
cmp
push
ljmp
xchg
mov
dec
jo
fidivrl
xor
in
mov
dec
out
xor
lcall
xchg
mov
stos
push
ficomps
mov
test
nop
or
adc
test
lcall
andb
cmp
insb
add
dec
or
fwait
sbb
inc
pop
ret
adc
jmp
les
dec
add
jbe
or
into
inc
test
mov
repnz
leave
mov
movsb
or
jle
sub
inc
pop
pop
lock
test
jle
ret
das
into
pop
sbb
push
es
mov
incl
inc
ss
popf
dec
leave
jne
cld
ror
inc
mov
out
ljmp
mov
scas
or
lret
orb
cmp
or
incl
lcall
push
sub
lods
push
sbb
lret
pop
sub
xchg
repz
std
aam
sub
filds
test
shlb
push
jl
xor
aaa
sti
pushl
pop
push
loop
push
lods
add
daa
push
dec
nop
call
xchg
xchg
mov
and
fstpt
pop
outsl
js
jo
sub
movsb
jns
pop
inc
sub
add
scas
cltd
fs
frstor
push
adcb
mov
and
or
les
popa
arpl
movsb
iret
lahf
sub
adc
mov
push
mov
in
push
jno
inc
mov
test
xor
mov
xor
pop
inc
cmp
dec
ss
dec
je
mov
push
mov
sub
push
cld
lods
cmp
ljmp
jo
loop
dec
mov
mov
pushf
push
decl
dec
adc
mov
lret
adc
mov
jo
sbb
mov
pushl
cld
les
ret
shlb
or
lds
pop
mov
inc
jmp
sbb
inc
sbb
push
mov
or
lcall
int
or
sbb
mov
pop
dec
fsubrl
inc
out
mov
je
mov
lods
lock
das
add
jmp
or
and
insb
jg
push
pop
xor
filds
jmp
in
movsb
or
mov
sarb
jmp
xchg
bnd
rol
push
js
lret
lcall
adc
cmc
pop
out
xor
enter
insb
cld
ret
and
fidivrl
mov
push
hlt
ret
mov
mov
pop
xchg
jns
lcall
test
pushf
cmpb
std
xchg
sbb
data16
push
inc
or
dec
jmp
inc
stc
xor
xor
and
mov
pushl
loop
dec
repz
dec
dec
jae
outsl
sub
nop
decl
mov
loop
bound
cmp
mov
add
mov
ljmp
cld
repz
in
lret
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
rcrb
out
into
lods
std
or
fildll
xor
int
xchg
ljmp
cmp
cld
push
out
out
push
jae
imul
sti
add
mov
sbb
pop
pop
lcall
fs
cmp
insb
pop
lea
movsb
insl
mov
pop
sti
add
out
xchg
adc
xor
ljmp
lods
aad
lret
clc
cmp
xor
out
pop
dec
or
std
mov
stos
cli
fwait
push
jg
mov
or
dec
fsubrl
test
sub
testb
ja
jmp
icebp
push
mov
pop
ficoms
xchg
jb
pusha
movsb
push
cmpsl
inc
lods
das
decl
mov
mov
and
jo
repnz
add
rcll
arpl
ljmp
jns
ljmp
lret
jb
mov
test
loopne
decl
mov
cmp
imulb
fadd
pop
mov
or
inc
dec
test
cmpsl
or
shlb
mov
pusha
xor
rolb
ljmp
int
pop
sbb
push
dec
dec
mov
xchg
arpl
test
xor
jle
mov
in
in
lcall
or
pusha
xorb
ss
xor
mov
mov
or
jbe
push
sbb
subl
cmp
add
stos
loop
ja
in
add
push
adc
xchg
add
aad
xor
pushl
test
sbb
sbb
mov
dec
xor
popf
xor
ret
inc
mov
out
push
mov
cmp
xor
jg
out
xor
mov
rcll
sub
test
fildll
sbb
sub
jecxz
int
push
repz
out
or
call
movb
xchg
mov
mov
mov
inc
xlat
sbb
call
dec
mov
jae
cmp
adc
popf
leave
adc
inc
aad
pushl
jo
fldenv
mov
fldt
outsb
push
sbb
mov
mov
leavew
imul
das
shrb
cwtl
hlt
jp
sbb
insb
pop
in
negb
lods
pop
xchg
xor
mov
outsl
call
in
jne
daa
movsl
je
jmp
lcall
call
jmp
adc
mov
fnstcw
lcall
in
sbb
fimuls
adc
jmp
push
mov
fsubrs
test
jge
xorb
adc
out
xlat
mov
pushl
cs
mov
addb
push
int3
jae
inc
out
pop
rorb
jge
test
cmp
mov
data16
fcomps
cmp
scas
xor
adc
fidivrl
mov
mov
incl
sub
push
jp
jo
je
pop
pop
pusha
dec
dec
push
inc
inc
add
out
and
rorb
or
call
test
sub
imul
xorb
xchg
ljmp
sub
jne
xchg
fisttpll
mov
test
add
add
stos
push
stos
ds
push
lods
xchg
fsubs
dec
jg
sbb
jle
cmp
dec
lcall
test
pop
push
fdivrl
fnstcw
jmp
jmp
inc
mov
rorl
jecxz
mov
inc
stos
sub
jg
int
fs
push
mov
and
rcrl
jg
push
repnz
pop
aaa
inc
ljmp
cli
incl
push
xchg
cmp
popf
cld
orb
inc
lahf
dec
dec
add
sar
cmp
add
bound
mov
sbb
add
mov
ds
adc
mov
mov
cmp
dec
jae
mov
cmp
incl
mov
xchg
nop
orl
lahf
mov
jg
jle
cwtl
inc
in
mov
inc
or
push
shl
mov
clc
int3
jl
test
dec
sahf
push
imul
mov
insb
xlat
xchg
cld
test
stc
in
lds
icebp
inc
mov
inc
or
push
aam
cltd
decl
dec
dec
jecxz
inc
and
scas
data16
jne
mov
popa
mov
mov
aas
adc
in
pushf
mov
pusha
roll
enter
lock
mov
test
pushl
jge
sbb
jecxz
xor
pop
mov
ljmp
into
add
ret
subl
pop
push
fwait
cltd
pop
mov
fbld
pop
mov
and
test
imul
sbb
lods
jae
stos
rorl
or
sbb
nop
scas
jge
outsb
push
mov
pop
and
fucomi
push
push
pop
in
popf
or
ljmp
fidivrs
jle
and
mov
mov
int3
cmp
xor
pusha
xchg
and
jg
popf
jl
in
dec
or
push
push
clc
lcall
add
mov
xchg
outsl
adc
xor
xlat
jns
inc
stc
lcall
decl
lret
inc
scas
and
push
pop
mov
lcall
imul
dec
xor
cli
lods
jg
movl
add
imul
fucom
rorb
lods
pop
loop
dec
outsl
es
aas
push
push
std
ljmp
mov
cli
xchg
int
mulb
call
cmc
lret
stc
pop
cmp
lods
jbe
push
std
add
dec
xchg
rclb
inc
pop
icebp
inc
xchg
ret
lcall
pop
bound
daa
cmp
mov
dec
fists
dec
adc
loop
mov
lret
mov
scas
lcall
or
and
push
ljmp
jno
int
repz
dec
xchg
cmpsb
mov
jo
iret
jns
add
add
jge
xor
or
imul
lcall
jae
pushl
andl
xchg
inc
lock
pop
sbb
sarb
packssdw
fcomps
cmp
fsts
enter
fs
xor
xchg
jmp
mov
hlt
mov
jno
jecxz
pop
pop
out
inc
jnp
and
and
mov
xor
stos
jmp
sub
xor
mov
jnp
int3
and
aam
mov
call
push
xchg
lock
sarl
std
lahf
jmp
pushl
lahf
out
incb
out
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
sbb
fists
xor
xchg
add
xchg
xlat
xor
mov
mov
mov
clc
stc
inc
add
in
push
loopne
mov
mov
pop
mov
jns
subl
xor
loope
ljmp
jmp
pop
dec
data16
ds
sub
ds
punpcklwd
js
jmp
sub
sub
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
dec
test
pop
pop
lods
dec
or
cmp
outsb
adc
stos
stc
imul
ja
clc
incl
mov
xor
or
inc
jo
mov
js
incb
inc
mov
pushf
push
mov
xor
mov
je
or
pushl
sub
loope
cld
rcrb
mov
adc
sub
popf
call
lahf
jmp
xchg
outsb
arpl
leave
insl
add
jp
sub
and
std
aad
test
add
js
jl
push
and
inc
push
mov
pop
jb
pop
mov
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cld
xchg
mov
mov
mov
xor
call
mov
xchg
popf
enter
addr16
aad
pushl
scas
dec
test
push
test
aaa
ret
data16
mov
lods
push
push
mov
sbb
mov
add
cmpl
jg
lods
jmp
cmpsb
xchg
cmp
cmp
sbb
inc
out
xor
mov
pop
addb
leave
jecxz
ret
cmp
cmp
xchg
movsb
cmp
pop
je
insl
std
sti
movsb
iret
jg
xchg
mov
mov
loop
filds
gs
mov
out
jae
aas
jo
mov
dec
mov
sahf
mov
inc
arpl
ljmp
push
push
pop
mov
jle
mov
xchg
aam
jb
stc
lods
pop
cwtl
or
mov
jl
xor
inc
add
mov
rorl
pop
ret
lret
outsl
scas
cli
decl
lods
lcall
pusha
fisttpl
push
and
je
inc
pusha
inc
cmp
jl
das
movl
es
iret
mov
aam
fcmovbe
and
jmp
add
sbb
mov
and
scas
push
xorb
sarb
lret
scas
clc
sbb
mov
pusha
fisubrs
push
inc
xorl
add
cmpsl
aas
and
dec
pop
fwait
mov
insl
mov
adc
pop
mov
jecxz
sbb
negb
push
dec
loopne
jmp
push
sub
imul
mov
sbb
pushl
sub
pop
jo
cmp
push
movsb
aad
mov
jg
mov
cmp
mov
sbb
cmp
jbe
adc
incl
jge
jg
pop
mov
sbb
cmpb
ja
lret
inc
sub
add
push
mov
lcall
clc
sub
inc
or
loope
pusha
lds
push
ds
rcrb
std
push
jl
xor
cmc
cmp
inc
ret
sahf
push
cmpsl
cmp
xor
cwtl
call
mov
xchg
popa
mov
ja
pushf
les
or
pop
fdivrl
aam
les
mov
push
adc
inc
loopne,pn
jmp
inc
jmp
inc
lds
xor
lock
push
mov
cmp
dec
flds
cmpsl
cmp
xchg
sbb
int
sbb
cmp
jg
cld
dec
in
pop
jge
push
sub
test
sarb
xchg
les
jecxz
mov
xchg
ss
andb
mov
sbb
pushl
cmp
or
icebp
mov
cltd
aad
std
out
jne
adc
loop
stos
pop
hlt
decl
iret
pop
add
or
cmpsb
fwait
mov
icebp
mov
insl
mov
inc
jmp
push
imul
mov
rorb
pushf
movsb
test
inc
les
lods
mov
or
out
cmpl
data16
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
dec
loope
jmp
shl
adc
push
mov
daa
mov
xor
mov
icebp
addl
add
xchg
dec
ljmp
gs
out
sub
aad
push
pop
inc
add
push
mov
push
jne
inc
mov
hlt
incl
dec
out
sbb
xor
std
push
clc
add
jp
jno
loope
pop
in
cmp
decl
and
dec
dec
xchg
push
gs
mov
cmp
or
push
mov
rolb
jae
dec
push
pushf
loop
daa
pop
pop
jge
imul
jo
mov
cmp
ret
mov
push
mov
push
fcoml
test
addr16
jmp
adc
dec
call
aas
add
lret
xchg
iret
pop
mov
push
aaa
and
jge
pop
xchg
rclb
adc
out
mov
popa
mov
mov
sbb
mov
pop
ljmp
sub
lahf
or
or
hlt
stc
sub
jne
or
mov
jnp
sti
cmc
decl
push
lods
repnz
or
ret
adc
xchg
adc
mov
out
roll
addl
std
sbb
sbb
outsl
clc
decl
in
mov
ljmp
out
ror
dec
cs
mov
ljmp
mov
lcall
mov
xlat
lret
fisttpll
cltd
xchg
xchg
sub
cmp
jg
arpl
popf
lods
xchg
mov
popl
xchg
jo
push
add
dec
jbe
mov
enter
pop
and
push
icebp
pop
std
iret
add
jmp
push
scas
mov
xor
sub
cmp
xchg
not
xchg
and
test
jp
jecxz
pop
jbe
pop
ljmp
and
add
sbb
out
rcr
imul
mov
xor
mov
xchg
push
adc
pop
cli
jecxz
jnp
addr16
mov
ficompl
cmp
inc
push
nop
sahf
jno
insl
adc
fbstp
sub
xor
pop
mov
sbb
and
mov
jbe,pt
xchg
mov
and
int3
int
or
ret
mov
ljmp
push
push
fwait
sbb
stos
mov
mov
sar
js
jg
sbb
fs
mov
loop
xor
xchg
pop
sahf
and
lods
jo
pop
icebp
mov
dec
push
aas
xchg
inc
inc
xorb
mov
dec
leave
adc
mov
mov
movsl
ljmp
sbb
shrb
inc
cmp
cmc
enter
dec
mov
fmuls
inc
mov
adc
aad
sbb
mov
sbb
jno
jbe
pop
jl
cmp
push
popf
aad
ljmp
push
imul
fnstenv
jge
mov
fucom
mov
mov
pop
pushf
in
jns
push
addr16
sub
sub
lcall
pop
push
scas
pop
cltd
nop
xor
jmp
mov
subb
mov
sub
lahf
or
pop
push
mov
shlb
mov
ljmp
dec
mov
ss
lcall
pop
cmp
mov
clc
sbb
xchg
lss
pushl
inc
jns
popa
sub
stos
sbb
arpl
or
xchg
int3
or
call
mov
cmp
pop
and
lock
and
mov
jle
lods
pop
aaa
xchg
sti
clc
cmpsl
add
mov
cmp
je
lods
jmp
jg
lahf
sbb
pop
push
neg
xchg
or
adc
adc
jmp
cwtl
subl
mov
mov
adc
mov
pop
add
xor
or
lds
arpl
fcomip
loope,pn
sub
cmp
mov
and
xchg
fbld
or
xchg
mov
adc
icebp
or
data16
pop
add
call
fwait
pop
mov
iret
sbb
cmp
dec
mov
pop
push
xor
lcall
fidivl
xchg
mov
adc
js
fs
movsl
xlat
fmuls
testb
cli
fs
bound
inc
ja
lcall
adc
dec
andb
jl
cld
push
sbb
leave
push
xor
or
adc
cmpsl
jle
mov
dec
sub
lods
test
jns
dec
jne
adc
icebp
add
adc
rclb
sbb
add
cmp
cmpsl
mov
and
and
lcall
fstps
ds
push
push
ljmp
daa
xchg
nop
stos
smsw
sub
popf
add
push
in
ljmp
jmp
stos
jle
adc
and
mov
repz
jmp
mov
ljmp
mov
lcall
aad
push
add
xchg
jl
lcall
fisttpl
add
inc
pushl
cmc
cmp
loopne
xchg
push
cli
fucomp
test
stos
xchg
lcall
push
andl
xchg
test
sub
cmp
cli
mov
std
call
push
xchg
out
movsl
sbb
pop
movsl
cmp
mov
cmp
out
mov
fcoml
in
dec
arpl
ljmp
pop
inc
pop
xlat
mov
jge
or
sub
push
jge
inc
mov
sub
pushl
sub
popf
mov
shll
and
add
in
cmp
sbb
and
mov
outsb
jmp
pop
ja
sbb
test
dec
inc
or
jmp
and
and
icebp
sub
test
push
xor
push
hlt
sub
pushl
dec
cli
mov
fs
aas
pop
add
fidivrs
xchg
adc
leave
mov
cmp
pop
xor
pushl
std
cmpsb
aas
cmp
cmp
push
sbb
or
or
cmp
std
xor
push
pop
push
rcr
in
adc
pusha
add
ljmp
lcall
and
jle
inc
js
stos
or
sarl
jle
aas
icebp
int
sti
push
xchg
aaa
repz
ds
cmp
std
sub
pushf
sub
mov
aaa
std
mov
jne
xchg
xchg
add
fistps
mov
jg
pop
dec
ljmp
test
push
adc
mov
lret
or
mov
mov
xlat
cltd
lock
decl
repnz
mov
shll
lock
cs
ss
call
fbld
out
fcomps
xchg
fsubl
sub
lods
data16
and
mov
mov
adc
dec
fbstp
std
xchg
test
pop
inc
mov
xlat
aas
dec
loopne
or
imul
jo
pushf
cmp
mov
jno
js
cmp
xchg
aaa
icebp
jecxz
mov
lahf
jg
sub
jmp
and
dec
cmpsl
aaa
pusha
inc
xor
icebp
sbb
js
and
test
gs
and
or
adc
sbb
fistpll
push
les
loope
xchg
ds
ja
xchg
and
jmp
sbbb
sub
decb
ljmp
jg
sub
in
jmp
mov
inc
jbe
mov
test
call
sbb
les
sub
adc
jmp
cmp
jmp
ficoms
push
jmp
jmp
lret
gs
rorl
icebp
jne
call
fsubrl
jge
push
dec
mov
pop
cmp
js
mov
inc
mov
in
out
xchg
push
mov
add
bound
xor
cli
imul
xor
mov
mov
jp
mov
mov
dec
fs
dec
mov
fstpt
ds
jg
add
mov
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
decl
aas
stos
xor
add
add
mov
out
je
push
rcrl
mov
inc
rcll
jno
xor
jmp
add
lea
inc
and
inc
add
bnd
push
movsl
mov
pushf
xor
fdivs
cld
pushl
push
mov
cmp
xlat
sbb
outsl
xchg
hlt
lcall
and
pop
aaa
mov
sub
fcos
pushl
and
pop
iret
jne
adc
mov
aaa
cmp
adc
scas
loop
sub
shl
jmp
dec
xor
or
int
sub
shrl
push
jb
jg
push
pop
sahf
cmp
ds
jmp
dec
es
mov
inc
jns
mov
test
xor
ljmp
dec
xchg
adc
jo
test
jbe
icebp
int3
inc
sbb
jg
jmp
and
sub
inc
in
cmp
or
outsl
test
in
out
iret
fcmovnbe
pop
ljmp
pusha
mov
sahf
js
cmp
cmpsb
scas
jbe
icebp
int3
cmp
or
or
repz
or
mov
cmpsl
xchg
ds
xchg
stos
sbb
das
sub
mov
mov
testl
sbb
mov
mov
movsb
imul
mov
cli
jno
cmpsw
dec
cmp
test
adc
xchg
push
jmp
es
cmp
and
pushf
das
mov
sub
test
imul
scas
xchg
bound
jp
insl
ds
push
scas
pushf
sub
int
decl
xchg
inc
and
pushf
mov
xlat
ret
dec
jmp
cmp
cmpsb
sahf
and
out
shl
cmpl
fisubs
fs
out
jmp
pushf
inc
cld
xor
imulb
sbb
mov
adc
addr16
mov
mov
cmpsl
in
dec
push
stos
push
mov
cld
fbstp
lds
aad
add
add
decl
xor
push
push
push
push
test
pushl
xchg
pusha
xor
sub
inc
xlat
jmp
mov
xchg
and
or
aaa
iret
arpl
add
das
sar
mov
mov
test
ljmp
inc
dec
add
in
push
jb
incl
test
mov
pop
adc
mov
lods
test
cmp
outsl
xchg
sbbb
popa
clc
sbbl
jl
dec
cli
dec
cmp
adc
pop
movsb
popf
cmc
shll
and
adc
jp
dec
cmpsb
push
adc
out
mov
js
stos
lahf
sbb
lea
aas
mov
fdivrs
call
push
inc
sarl
cmp
iret
xchg
xor
outsl
push
sub
out
push
loop
adc
jmp
mov
cli
xchg
fnstcw
mov
xchg
es
lods
shll
clc
lods
sub
decl
jge
add
xchg
or
pop
push
and
cwtl
imul
xor
sub
lods
testl
or
mov
sbb
movsb
call
orb
inc
adc
jnp
call
leave
push
sbb
in
jge
bound
jg
push
xor
pusha
jo
add
dec
cld
mov
jno
or
or
gs
data16
ret
ds
call
lret
andl
jg
mov
leave
pop
sti
mov
mov
int
test
sub
repnz
cmpsl
rcrb
cli
jmp
lea
pop
jge
and
pop
ja
jbe
outsb
outsl
jne
das
push
dec
inc
leave
push
or
sbb
sub
data16
fildll
and
jae
add
jl
mov
notb
arpl
xor
add
pop
dec
jmp
repz
std
adc
xor
pushl
int3
sbbl
inc
imul
les
or
adc
cmp
and
push
ret
push
sub
js
add
stc
rorl
add
add
pop
add
lret
inc
fucomip
sbbb
out
ss
ljmp
jle
xor
mov
call
jmp
jo
sub
into
fwait
sub
xor
add
add
insl
cmc
mov
dec
cs
mov
leave
cltd
es
and
icebp
cwtl
stos
pop
stos
add
std
sbb
push
cmp
call
mov
decl
popa
add
fcmove
push
sub
decl
rorb
cli
int
jmp
jne
push
dec
hlt
mov
fnstenv
pop
jg
pop
jno
adc
xchg
pop
xor
subl
addr16
cld
add
sub
mov
fwait
nop
mov
jo
mov
dec
js
ret
mov
mov
dec
sarl
decl
movsl
jle
push
insl
mov
mov
xchg
leave
leave
add
ret
je
push
jae
add
cmp
stc
icebp
test
xchg
fs
dec
dec
jl
dec
push
mov
mov
call
inc
or
notb
aad
lods
in
mov
mov
hlt
jecxz
cmp
push
sahf
lea
mov
das
xchg
ljmp
clc
incl
cltd
dec
rolb
fisttpl
movsb
movsl
shl
xchg
or
jne
ljmp
incl
inc
mov
mov
out
pushf
aam
jp
in
int3
insb
cltd
cwtl
pop
mov
inc
inc
inc
decl
inc
add
movb
inc
mov
and
push
cli
lea
iret
and
sub
filds
dec
insl
fnstenv
mov
mov
xchg
mov
cld
sbb
lcall
fisttpll
jae
fisubrl
je
adc
xchg
jnp
incl
clc
cmpsb
sbb
push
ds
loop
imul
imulb
add
call
iret
xor
into
adc
stos
popa
xchg
call
mov
adc
pop
inc
cmp
push
jb
mov
xor
adc
test
jge
lcall
mov
out
imul
iret
cmp
inc
lret
data16
mov
call
clc
sar
mov
lock
adc
std
inc
popa
out
sti
mov
mov
incl
adc
add
ljmp
lock
xchg
cmp
jbe
add
test
pushl
jge
lods
xor
andl
mov
or
ret
sub
out
shr
or
pop
cmp
jns
and
das
mov
pop
xchg
lock
ds
in
lds
xchg
hlt
jmp
cmpsl
fistpll
and
dec
inc
stos
movsb
jecxz
xchg
aaa
adc
fcom
xchg
mov
aad
mov
and
popa
push
push
loop
or
xchg
cmc
cld
sub
sub
dec
cltd
or
es
mov
stos
pop
jo
push
sbb
cmp
je
loop
lret
shlb
cli
mov
ljmp
jg
bswap
dec
fs
popf
in
aaa
adc
int
push
jge
sahf
stc
jb
and
out
cli
jmp
pop
dec
je
jmp
mov
mov
out
iret
push
xor
xchg
and
decl
lock
xchg
test
or
int
xchg
xor
mov
add
call
stos
and
or
fs
adc
outsb
fs
repz
or
sub
das
mov
fiadds
and
in
fwait
pop
cltd
pop
xchg
sub
xor
mov
je
adc
jle
inc
add
lret
jmp
inc
pop
dec
xchg
inc
mov
js
ja
inc
add
pusha
mov
bound
dec
pop
xor
ljmp
lods
dec
cs
test
jmp
jno
sub
cmp
pushl
and
cli
repz
add
xchg
fs
mov
ret
sub
push
xchg
mov
scas
call
test
test
and
stos
popf
sarb
test
loopne
add
ljmp
sbb
xchg
lahf
decl
loop
mov
andl
xor
xchg
ljmp
pop
inc
cmc
ljmp
mov
adc
pop
mov
data16
mov
push
sub
or
popf
adc
int3
mov
mov
call
stos
add
and
ljmp
imul
push
fldt
mov
rcrb
and
bound
pop
cmpsl
fmull
rcr
je
lock
repz
sar
inc
bound
inc
mov
push
xor
js
push
jle
out
lcall
jg
adc
sbbb
scas
lret
popf
ja
adc
adc
incl
sub
inc
fisubrl
cwtl
out
or
xchg
lahf
out
mov
pop
dec
ljmp
ficoml
adc
roll
pop
lahf
cmp
cmp
jmp
cmp
xlat
jp,pt
mov
xor
lods
sub
lock
push
fiaddl
in
cmp
and
sub
jle
sbb
sbb
out
sahf
fwait
mov
push
sahf
add
loope
sbb
or
ljmp
fwait
std
fmuls
cmp
push
call
push
jb
test
add
lds
add
mov
outsl
cmp
mov
sub
sub
mov
mov
and
mov
stos
pusha
cmp
push
push
xor
flds
cld
jmp
pop
adc
stos
push
mov
and
std
les
das
sar
sbbl
mov
in
jmp
inc
jle
sub
repz
add
incl
int
dec
imul
outsl
rcrl
xchg
pop
sbb
and
outsb
movsl
pop
sub
lcall
ja
and
adc
adc
pop
ficoml
xchg
pop
sub
or
xor
fcomip
lods
xor
add
mov
sub
ljmp
sbb
cltd
sti
hlt
pop
cmp
dec
mov
mov
mov
incl
imul
jle
push
push
stos
lods
sti
dec
stc
or
jg
dec
aam
fstl
iret
movsl
mov
cmovnp
pop
mov
aaa
or
jg
cli
xchg
mov
jnp
push
inc
mov
pop
lcall
add
push
pop
adc
test
jl
cmc
loop
push
push
adc
sarb
call
push
mov
xor
xor
aam
jb
push
cmp
fsubrs
push
sahf
fcomip
cmp
lea
in
xlat
js
popf
hlt
dec
adc
jb
pop
js
xor
call
mov
mov
shrb
out
xchg
add
mov
xlat
arpl
inc
fidivl
movsl
xor
or
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
in
xchg
addr16
cwtl
xchg
sub
icebp
arpl
nop
cwtl
jmp
clc
mov
icebp
shrb
mov
mov
sbb
pop
repnz
fistpl
stc
popf
cmp
jo
enter
rorb
addl
push
es
lret
or
mov
xchg
call
sbb
sub
std
add
mov
scas
pop
sbb
mov
mov
jb
inc
dec
lock
mov
and
jmp
fldl
sbb
repnz
loope
lahf
repnz
mov
xchg
inc
adc
inc
loopne
cmp
pop
testb
mov
ljmp
and
iret
adc
sbb
jge
inc
sbb
in
stc
test
rcl
jmp
fdivrl
insl
xor
ja
mov
hlt
dec
cwtl
adc
insb
pushf
fcompl
and
test
clc
pushl
leave
push
or
pop
loope
jg
mov
dec
cmp
mov
sub
aad
call
into
imul
into
call
out
xchg
dec
sbb
jmp
xchg
cmp
inc
mov
iret
test
cmp
xchg
insl
sub
xor
sar
shll
sbbb
xlat
and
idiv
stos
push
sub
push
mov
fcomip
lcall
cmp
lret
out
push
test
cmpsb
leave
gs
cs
mov
mov
adc
and
pusha
outsl
arpl
sbb
divb
sub
scas
inc
ds
cmp
mov
inc
jmp
sub
adc
pop
or
push
in
das
and
xor
adc
int3
repz
pushf
pop
loopne
ljmp
dec
loop
mov
adc
ficompl
scas
out
jmp
imul
mov
dec
inc
push
ficoms
mov
push
ret
mov
lea
xor
test
lcall
mov
mov
loope
push
idivl
inc
jmp
test
in
jae
pop
imul
call
rol
outsb
sub
cmp
aam
mov
outsb
xchg
rorb
in
or
out
jmp
aaa
push
pop
shll
push
mov
loopne
ljmp
std
fcoml
mov
roll
mov
sub
xor
fnsave
mov
icebp
call
jne
push
dec
js
and
mov
ljmp
repnz
sbb
jne
cmc
sbb
sub
mov
mov
int3
cmp
testl
sahf
and
sub
add
inc
sbb
dec
push
mov
sub
jb
or
mov
xchg
mov
xchg
jmp
or
stc
loop
cltd
and
pop
xchg
xchg
mov
icebp
inc
out
xchg
out
lods
sti
int3
stos
lods
inc
nop
lcall
xor
leave
fwait
les
mov
jl,pt
adc
incl
jl
add
add
jae
or
pop
outsl
cwtl
int3
mov
push
mov
out
ss
ljmp
mov
insb
lods
iret
daa
and
push
or
cmp
jno
lcall
idiv
ljmp
and
dec
addr16
outsb
dec
mov
push
jmp
xchg
push
decl
es
mov
mov
aam
cmp
call
add
and
roll
jae
push
scas
out
mov
dec
stos
mov
cwtl
sub
cld
fisubrs
out
das
repz
scas
mov
insb
xor
int
cmp
ljmp
test
jne
repnz
rcll
mov
adc
xchg
jne
jmp
rcl
cmpsl
iret
and
std
clc
push
mov
decl
mov
lcall
xor
xchg
repz
jns
dec
sub
mov
add
jl
inc
jnp,pt
jbe
sub
jno
in
cld
mov
or
arpl
mov
ljmp
pop
mov
sbbb
dec
jno
sbb
xchg
xor
fcomip
or
ss
and
add
push
call
inc
xchg
inc
pop
mov
mov
cmpb
ljmp
xchg
fildll
fsubs
sti
xchg
out
mov
and
dec
mov
dec
repz
incl
mov
in
arpl
xchg
sbb
stos
push
mov
in
rcrl
aad
loope
fistps
inc
int
dec
mov
leave
sub
jns
popa
pop
add
loope
or
dec
dec
dec
das
ja
pminub
je
or
xchg
flds
movsl
push
cmp
stc
inc
adcb
jg
popf
mov
insb
cmc
out
push
add
mov
jno
iret
jbe
imul
mov
cli
pop
sbb
test
scas
or
jg
sbb
les
and
add
out
fwait
mov
ss
lcall
push
dec
lret
cmp
test
in
ret
mov
xor
mov
scas
add
aam
xchg
add
jp
loop
cld
jle
mov
call
lcall
movsl
sub
pop
vmptrst
ja
mov
incl
arpl
decl
sbb
shll
mov
ljmp
xchg
push
out
test
sbb
bnd
repz
loopne
adc
repz
out
loop
mov
shl
cmp
fsts
adc
pushf
ljmp
and
incl
out
cmpsl
shll
push
inc
fimull
add
pusha
data16
adc
in
cmp
jmp
lret
push
add
decl
cmpsb
or
jge
xor
xchg
mov
inc
hlt
or
mov
mov
data16
jmp
jl
sub
ret
pop
test
add
ret
mov
xorb
jg
ret
push
jmp
fldl
movsl
gs
mov
ror
and
sbb
repnz
test
adc
cmp
mov
movl
pop
dec
add
ret
jle
or
das
ret
inc
lcall
call
out
inc
jge
mov
adc
add
lcall
cmp
in
in
add
fadds
and
cltd
aam
xchg
inc
xor
sbb
add
jmp
dec
fs
popf
lahf
fstpl
fildl
dec
or
les
xor
mov
dec
lea
jp
sahf
fcomps
push
jmp
push
pop
xlat
adc
add
decl
cmp
push
adc
lcall
fcomip
jg
lea
gs
stos
fxsave
js
sub
aas
filds
in
add
push
subl
mov
pop
dec
shlb
lods
test
sti
and
fxch
out
sbb
or
aas
out
cli
dec
adc
fimull
cwtl
pop
dec
sub
out
dec
lret
cli
cli
xor
add
mov
xor
xlat
subb
mov
adc
sahf
adc
addl
push
das
mov
sbb
mov
aaa
cld
push
test
mov
mov
ds
pop
stos
mov
lds
mov
pushl
data16
test
test
mov
fnsave
idiv
ljmp
std
test
cmpsl
fisubrs
out
ret
or
inc
or
add
push
lcall
inc
jbe
mov
sbb
adc
fiadds
xchg
fldenvs
dec
add
inc
incl
cmpsl
in
xor
adcb
push
push
out
fmulp
ljmp
incl
jns
std
mov
bound
mov
cmp
inc
insl
test
or
mov
idivl
sbb
add
xchg
repz
out
dec
mov
lahf
and
inc
test
daa
and
push
jne
outsl
mov
and
or
or
aad
or
mov
and
jns
adc
roll
loop
push
pop
popa
jp
int3
mov
jns
cltd
jle
cmpsb
incb
std
xchg
incl
imul
jecxz
mov
imul
push
imul
mov
or
or
jge
jmp
and
add
fdivl
or
aaa
jl
ljmp
xchg
push
in
out
jne
inc
mov
mov
js
sub
lcall
inc
sarl
loopne
addl
lock
ss
add
call
movsb
jp
sbb
and
push
push
inc
mov
orb
rcll
inc
fdivrl
sub
mov
cld
sti
mov
adc
cmp
fadds
adc
ljmp
rorb
lods
jle
fwait
rclb
lods
or
es
loop
cmp
cmovb
call
push
cli
rolb
or
stos
aad
and
adc
mov
dec
mov
jne
xchg
rcrl
test
cmp
loopne
call
insb
cmp
repnz
lret
cmp
sub
dec
xor
lds
cvtdq2ps
sub
push
and
sar
call
or
inc
dec
das
movsb
enter
loop
cld
pushl
std
cmp
repz
es
fisttps
cmc
pop
mov
test
incl
adc
outsb
jg
jne
and
dec
mov
sbb
pushf
mov
inc
call
ficomps
icebp
popa
aad
adc
icebp
int
popaw
fdivl
sub
add
push
sub
sub
loop
mov
fsubl
add
adc
jae
adc
in
std
loop
inc
adc
mov
inc
push
xchg
push
rcl
jnp
call
jne
jbe
mov
stos
xchg
mov
orb
jmp
jl
stos
mov
incl
in
out
jmp
or
popa
enter
lock
mov
cmp
addr16
cmp
push
cwtl
or
xor
in
ret
arpl
push
pop
test
jp
pop
sub
bound
incl
mov
mov
out
imul
pop
stos
fcoml
lcall
jae
gs
stc
pop
mov
add
ret
fdivrs
mov
push
push
mov
arpl
push
dec
sub
cmp
stos
add
fidivs
jns
cmp
mov
push
lcall
xchg
sbb
call
fcos
arpl
bound
movsb
push
pop
popf
int
in
mov
shr
push
or
dec
cwtl
cmp
stos
mov
and
dec
push
push
inc
shrb
xor
pop
stos
sub
pop
xor
daa
scas
pushl
ds
xchg
imul
out
mov
adc
mov
add
lods
sahf
cld
jg
or
stc
pop
cmp
sub
pushl
lahf
push
cmp
push
add
ljmp
jnp
adc
add
pushl
ds
inc
jl
call
mov
das
ljmp
mov
xlat
outsl
cli
ficompl
stos
jp
dec
bound
sub
jae
push
mov
or
mov
xor
leave
inc
lret
ss
leave
lock
cld
and
dec
decl
cmp
xchg
cmp
and
imul
hlt
ja
mov
cmp
int
xor
pushl
and
pop
sub
xchg
pop
insl
cmpl
cmp
js
pushf
push
jge
arpl
loopne
out
or
mov
lods
xchg
lods
aaa
inc
mov
enter
bound
xor
mov
add
inc
into
fsub
adc
adc
cmpsl
and
out
clc
lcall
cli
adc
xchg
mov
out
jg
xchg
xchg
pop
icebp
jno
add
ljmp
add
dec
xor
sub
fs
out
or
jno
adc
test
aam
mov
pop
dec
dec
dec
rorl
fdivs
inc
jmp
cs
into
jecxz
ficompl
lea
ss
sbb
xchg
hlt
and
and
cld
or
inc
inc
dec
xchg
pmulhuw
mov
xchg
xor
sub
out
mov
jbe
jg
jg
lods
into
out
xchg
mov
stos
or
dec
stos
mov
sub
mov
ret
scas
int3
pop
sub
lods
xchg
mov
scas
dec
roll
xor
jmp
test
push
xchg
jmp
cmp
shr
out
rcrl
xor
aaa
xchg
outsl
mov
clc
shl
jne
decl
sti
mov
adc
mov
cmpsb
sbb
mov
sahf
imul
sbb
das
popf
ljmp
and
add
pushf
push
std
ljmp
sbb
ret
inc
xor
scas
cmp
mov
jle
jmp
bound
mov
jmp
dec
mov
subb
lret
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
call
decl
jmp
push
pop
shrb
and
idivb
ret
cld
mov
mov
add
test
mov
popa
mov
push
or
decl
mov
add
and
int
roll
mov
rclb
sbb
mov
xchg
inc
mov
sbb
push
cmc
dec
data16
or
add
jecxz
push
mov
mov
add
arpl
sub
dec
jno
aad
or
incl
mov
and
add
hlt
pop
cs
inc
xchg
jmp
and
cmp
ljmp
insb
out
cmp
std
loope
jmp
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
repz
int
cmc
adc
cmp
outsl
or
lahf
jecxz
sbb
jmp
sbb
or
shrb
lds
inc
out
inc
aaa
ljmp
call
dec
insl
rorl
lret
add
rorl
shll
dec
jl
lods
push
xor
fcmovnu
pop
imul
into
test
imull
jo
jbe
incl
mov
imulb
dec
test
push
mov
push
cltd
fcom
inc
jecxz
dec
fnstenv
je
adc
fsts
mov
clc
test
arpl
test
fildll
bound
leave
adc
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
decl
push
push
cmp
daa
mov
mov
xchg
mov
sub
xchg
decl
lock
push
jp
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
out
outsl
push
movd
movsw
jecxz
dec
add
mov
ja
dec
xchg
pushl
jl
in
xchg
push
xor
lcall
mov
sbbl
jmp
arpl
rcrb
xor
fldenv
xor
daa
or
das
mov
incl
lods
push
cld
repnz
push
adc
or
lcall
push
sbb
lahf
mov
jle
cmp
adcb
jo
mov
jge
mov
jmp
jg
lret
push
es
in
mov
rolb
into
sbb
xorl
in
mov
sbb
and
ror
dec
je
aaa
inc
jge
jg
jg
mov
mov
test
and
pop
push
stos
inc
test
jle
mov
pop
pop
mov
jp
iret
or
xchg
cli
dec
adcb
and
jle
addl
call
outsl
mov
mov
adc
lcall
jbe
popa
scas
sar
lcall
bound
hlt
loop
or
hlt
sub
sbb
xor
fimull
aad
addr16
inc
lcall
nop
pop
xchg
cmp
push
sti
add
cs
jmp
cmp
les
inc
push
pop
js
dec
cmp
mov
mov
leave
es
mov
leave
sti
call
outsl
cli
and
shll
stc
neg
push
shlb
xor
dec
inc
mov
dec
stos
push
jo
mov
gs
clc
xor
mov
aas
cmp
cmpsl
je
fidivl
xlat
dec
fimuls
in
lret
fisubl
cmp
inc
xchg
paddb
ljmp
in
out
fs
and
fadd
std
jnp
mov
jno
ljmp
pusha
fcompl
pop
mov
rorb
or
and
cmc
sub
dec
or
pop
sbb
cmp
or
clc
dec
mov
push
outsl
cli
lcall
inc
dec
mov
mov
sbb
arpl
out
lret
mov
cli
mov
xchg
jmp
sub
shlb
push
xor
incl
mov
cmp
mov
mov
add
ror
jne
push
enter
mov
push
xchg
cmc
imulb
pop
fcomip
fcoml
std
mov
call
pusha
sbb
or
pop
add
jmp
out
jl
jmp
jae
push
mov
mov
rcr
fwait
push
ror
pop
nop
aad
fadds
jge
sar
decl
das
mov
jo
inc
aas
jle
cwtl
call
loop
sti
inc
xor
cmc
test
mov
or
or
fwait
and
inc
aaa
push
sahf
loop
icebp
dec
xchg
mov
pushl
adc
sarb
daa
mov
fdivrs
jg
jg
out
sar
lods
sub
pop
out
imul
addr16
sub
mov
lock
jmp
mov
jge
pop
outsb
outsb
out
fs
pop
int3
mov
sbb
int
in
mov
mov
gs
push
and
dec
xchg
sti
stos
int
cld
decl
scas
mov
mov
cmp
mov
jbe
ss
sbbb
leave
jg
pushl
mov
mov
addr16
outsl
add
xchg
inc
pusha
cmpsb
add
ljmp
std
insl
fdivs
lods
adc
in
sbbb
mov
cli
pop
aaa
ljmp
aas
les
roll
js
int3
mov
pushl
push
mov
dec
rorl
call
add
mov
imulb
out
stos
lcall
xchg
jb
adc
push
or
lret
and
mov
inc
push
ljmp
in
jmp
lret
cmc
faddl
ja
loopne
adc
sub
sahf
js
xor
fwait
jmp
fistps
cmovns
add
orl
pop
movsl
pshufw
ljmp
stos
mulb
cmp
mov
fidivrs
int3
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
idiv
incl
jmp
mov
in
insl
or
fwait
push
jbe
sbb
das
repz
push
outsl
inc
cmp
leave
and
ja
adc
arpl
shll
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
xchg
imul
or
lahf
je
lcall
sbb
lods
lods
in
adc
cmp
movsb
xchg
in
sub
jno
icebp
cmp
pop
pusha
jg
mov
rcr
sub
popa
outsl
sbb
rorl
adc
xchg
incl
cmp
sahf
int3
mov
sbbl
pushf
sbb
loop
lock
jg
mov
lret
jmp
sbb
cwtl
xlat
icebp
sub
scas
das
rcr
ret
pop
push
or
xchg
mov
call
xchg
loop
ret
js
mov
adc
lcall
ret
xchg
fbstp
int3
aam
mov
test
rcrb
inc
jmp
push
test
mov
pushf
pop
sub
outsb
data16
add
inc
push
mov
push
loop
rcr
mov
into
jns
cwtl
insb
decl
test
call
fs
jnp
mov
fnstsw
inc
jmp
mov
filds
sub
hlt
push
push
stos
sti
sub
lcall
dec
sbb
add
add
into
inc
push
movsb
mov
cmp
out
ljmp
addr16
cmpsb
or
pop
and
pop
bswap
inc
data16
imul
mov
sbb
lcall
out
jg
subb
jo
loope
int3
jp
shll
scas
in
scas
popf
scas
jmp
pop
cs
ss
sub
enter
pop
xor
sub
dec
ljmp
call
jmp
dec
cmp
jne
shll
daa
mull
inc
cmp
xbegin
adc
pop
mov
jb
and
out
out
jge
incl
in
inc
fisttpll
out
out
out
es
test
sub
mov
xchg
cld
lods
ret
add
std
mov
rcrb
loopne
iret
push
test
adc
shll
fcmovbe
cmp
xor
or
in
and
lret
xchg
sub
data16
int3
fdivr
ljmp
cmp
adcl
ja
ret
jge
mov
add
mov
aad
and
xor
sub
dec
pushf
lahf
sub
lea
sub
adc
jg
pushl
fistps
imul
jg
xchg
out
or
or
cmp
test
ret
cli
and
push
cwtl
outsb
inc
cmp
bnd
push
negl
outsl
xchg
dec
inc
gs
call
inc
mov
mov
push
cld
pushl
dec
sub
dec
pushf
fnstcw
pop
sub
lock
sub
lcall
std
outsb
ffree
sbb
outsb
hlt
and
sub
adc
cwtl
ja
int3
stos
ljmp
cmp
inc
inc
push
shrl
ret
gs
sbb
jmp
mov
xlat
jmp
lods
pusha
mov
xorl
call
push
daa
xchg
and
fwait
or
push
xor
rcll
les
ljmp
call
pop
jecxz
inc
movsl
mov
es
loope
pop
dec
and
out
popf
or
jmp
mov
loop
xchg
dec
rcrb
mov
or
mov
sbb
add
add
adc
movsl
in
lcall
imul
mov
add
es
aam
push
add
mov
das
or
decl
leave
fimuls
mov
decb
cli
mov
adc
in
mov
out
and
testl
adc
add
pop
sub
mov
inc
call
ja
scas
loop
shr
or
addr16
pop
pop
inc
cltd
jg
xchg
shll
jmp
aam
jmp
lcall
fiaddl
gs
sbb
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
sbb
lss
cmp
incb
or
dec
roll
lods
or
decl
add
rcr
push
icebp
in
inc
int
ljmp
dec
jmp
fcmovne
sub
or
incl
sub
pop
imul
imul
repz
cs
fildll
movsb
push
fcomip
idiv
push
lcall
loop
push
mov
pop
decl
push
cmp
insb
adc
sbb
test
fs
cmp
sbbl
xchg
and
mov
ljmp
xor
popf
add
xlat
loopne
jnp
lahf
movsb
push
pusha
mov
cmp
add
cmpl
shrl
xor
icebp
jmp
jbe
jo
fimull
ljmp
dec
sub
push
add
mov
aaa
std
faddl
cmp
icebp
loope
in
std
push
cmp
cs
sub
xchg
fucomi
xor
xchg
push
dec
jbe
xor
push
push
aas
pop
ret
pop
pushl
xor
cmp
stc
sbb
inc
mov
paddq
in
stos
and
mov
xchg
sbb
lods
mov
call
les
mov
pusha
fwait
daa
or
xlat
sub
call
cltd
test
mov
scas
ljmp
jo
hlt
not
mov
call
iret
sub
sahf
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
ljmp
std
js
jne
lods
xchg
sub
sbb
cmp
aaa
and
gs
push
inc
dec
repz
scas
movsb
pop
loope
push
mov
mov
adc
gs
sbb
inc
leavew
clc
stos
lea
xchg
out
scas
clc
clc
push
dec
dec
or
push
cltd
loop
mov
aaa
xor
lcall
outsl
mov
inc
sub
orl
ret
adc
or
cltd
pop
mov
pop
lock
xchg
fwait
cmp
adc
ret
mov
xchg
mov
cmpb
pushl
movsb
push
or
inc
scas
popa
push
xchg
sahf
xor
cmpl
inc
mov
cmp
xchg
pushl
sti
ret
jle
or
in
sub
push
mov
ret
add
push
pop
decl
pusha
mov
sahf
movsl
mov
adc
adc
jo
xor
ljmp
push
fs
or
mov
fnstenv
les
bound
pop
cmp
out
sbb
ljmp
clc
cmpsb
dec
mov
sub
dec
inc
dec
test
iret
mov
fistps
fisubl
cmp
repz
mov
cltd
mov
pop
jecxz
decl
inc
cmp
cmpsl
mov
stos
fimull
pushf
sub
rcrl
mov
adc
test
jmp
lret
test
adc
call
xor
sub
mov
movsb
inc
lret
push
mov
lcall
inc
fsts
pop
flds
or
pop
push
rcll
lahf
leave
push
sar
inc
jle
shll
adc
jl
imul
fcmovnu
push
jo
shrb
pushl
fcoms
pop
pop
jo
push
and
cmpb
rolb
fmull
icebp
push
andb
or
sub
clc
sbb
call
and
sbb
out
mov
push
mov
lods
adc
into
sbb
mov
cs
call
jmp
stc
ret
dec
sbb
lods
iret
mov
cmp
lcall
sti
or
in
jmp
stos
aad
bound
adcl
leave
mov
jne
jecxz
ljmp
xor
and
mov
pop
mov
sub
add
orb
aaa
std
call
pop
dec
inc
test
pop
pop
xchg
gs
inc
addr16
inc
mov
lcall
scas
pusha
mov
notb
push
mov
mov
sub
repnz
add
call
push
scas
add
mov
in
loopne
ficoml
pop
mov
lds
sub
gs
fiadds
xor
in
sbb
jne
call
daa
cmp
shl
add
rclb
int3
push
jp
mov
inc
jns
add
ljmp
je
rcrb
rcr
adc
xchg
mov
stos
push
scas
add
sub
call
loopne
mov
dec
sbb
outsb
aas
add
jge
dec
adc
fwait
std
insb
sub
push
incl
dec
lods
xor
add
addr16
lods
sbbl
mov
inc
add
push
call
and
dec
inc
lds
fisttps
push
mov
add
call
popa
inc
scas
in
add
adc
out
loope
push
movsl
mov
movsb
fs
or
loope
push
mov
cmp
sub
incl
fwait
movsl
sub
mov
ret
or
cltd
or
cltd
fbld
cmpb
cli
das
clc
mov
and
lea
jl
push
push
jmp
mov
enter
lret
xchg
push
ficoml
pop
pop
mov
fdivrs
fcom
jg
loopne
inc
std
jae
xchg
ljmp
mov
ds
lock
ljmp
clc
lcall
fcoml
jb
xchg
or
dec
repnz
aad
insb
std
outsl
cld
iret
dec
xor
pop
das
sub
add
mov
jmp
push
out
adc
addr16
call
pop
aad
push
sbb
aaa
jno
inc
mov
sti
push
cmpsl
and
das
cmp
fiadds
call
in
mov
shl
xchg
adc
and
sbb
insl
pusha
push
fstpt
jnp
aam
mov
sub
nop
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
call
out
mov
arpl
xrelease
adc
test
lods
ss
lcall
pushf
cld
stc
xchg
dec
or
mov
sahf
dec
test
xlat
cmpsl
stos
push
aaa
adc
jb
mov
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
jmp
call
adc
push
inc
jmp
mov
inc
jp
lea
negb
decl
sbb
mov
mov
or
sub
push
sbb
push
stos
in
cmpsb
dec
jb
jecxz
and
out
xor
mov
cmp
out
pop
jg
out
rcr
dec
mov
push
addr16
test
lds
aaa
cld
lcall
cli
xor
mov
insb
sahf
inc
test
mov
aad
inc
mov
and
pop
dec
loope
push
mov
dec
ljmp
jmp
loope
in
int
data16
push
es
call
mov
mov
fwait
loope
xchg
sub
hlt
mov
out
repz
aas
pop
mov
cli
xchg
dec
mov
fnsave
leave
fstp
fisttpll
incl
cld
inc
pop
jp
mov
pop
shlb
das
ficoml
adc
sti
lcall
jnp
lcall
js
inc
pop
xchg
add
cs
add
dec
mov
scas
push
nop
xchg
lea
cmp
push
sarl
and
jnp
jg
sti
pop
lcall
cmp
add
loope
pop
enter
jmp
repz
adc
bound
jns
pop
jmp
pop
in
divl
push
push
daa
repz
sub
sbb
lock
rcrl
les
sub
lods
out
pop
das
sar
subl
xor
sbb
xchg
ja
push
into
in
mov
decl
dec
mov
sahf
sub
push
jne
jb
pop
mov
and
xchg
add
call
fs
into
enter
in
cs
scas
sbb
xor
push
andl
and
ja
negl
xchg
mov
fisubrl
jge
imul
mov
xor
stos
aam
call
mov
fnstsw
fisubs
popf
adc
dec
clc
dec
jg
ljmp
loop
or
call
insl
mov
xor
jmp
cmp
insb
dec
in
sbb
push
dec
pop
jno
mov
mov
cmp
fbstp
cmp
lods
jns
xchg
cmpsl
push
aam
adc
jl
mov
push
pushf
popa
movsb
subl
cmp
and
pop
mov
scas
insb
or
out
cli
fdivr
lods
push
jecxz
cmp
jl
push
enter
xchg
orb
inc
sti
pop
stos
call
pushf
cmpsb
in
imul
out
push
lods
inc
ret
mov
sub
decl
pusha
out
mov
mov
and
popf
aam
pop
fdivl
fcom
mov
shlb
cld
push
cmpsb
jbe
std
lods
outsb
pop
mov
cmp
or
mov
arpl
decl
or
push
in
bndstx
outsb
enter
sarl
lock
mov
xor
decl
cs
adc
cltd
loopne
clc
or
jne
push
ror
pusha
add
xchg
cmpsl
arpl
xor
mov
xor
out
mov
mov
cmp
mov
jbe
inc
pushl
and
loope
js
xchg
mulb
pop
pop
push
loop
inc
pop
mov
imul
lcall
add
cmp
lds
pop
jb
mov
xor
jg
mov
pop
cld
or
mov
decl
xchg
mov
xchg
rclb
mov
dec
cmp
pop
adc
add
mov
dec
adc
rorb
lahf
outsb
mov
jg
ds
dec
lods
in
in
lods
stc
sarl
dec
mov
jb
test
or
test
push
and
dec
std
incl
mov
ja
mov
aaa
or
mov
jg
dec
fildll
lds
sbb
push
test
jg
sbb
add
pop
ljmp
push
mov
xor
insb
sub
and
das
ja
rcrl
or
dec
imul
negb
adc
scas
mov
adcb
cmp
sub
xchg
pop
mov
scas
fistpll
add
mov
in
add
jmp
xchg
call
incl
daa
mov
daa
pop
jmp
outsl
mov
or
dec
repnz
or
ljmp
jmp
and
inc
leave
lret
mov
mov
mov
jns
push
icebp
xorb
decl
pop
mov
mov
sub
sti
fbld
xchg
pushf
fidivs
jg
fstpl
fcmovu
js
ja
mov
mov
cwtl
rcll
jecxz
in
das
xchg
or
fisttps
push
push
dec
jecxz
xchg
scas
add
aaa
cld
lea
pop
add
lods
les
fiadds
or
imul
decl
jmp
fwait
pop
dec
inc
pop
iret
push
adc
mov
jmp
mov
dec
or
ffree
xor
repz
jg
mov
lcall
push
out
push
adc
lds
fisubrl
pop
das
inc
mov
jmp
jnp
xor
cltd
imul
pop
adc
push
mov
or
loopne
push
test
fildl
pusha
insb
rol
lahf
push
cmp
or
mov
sub
mov
push
or
lods
dec
mov
scas
addr16
inc
es
xchg
cld
cmp
aad
movsl
into
incl
cs
fnsave
out
inc
aaa
movsb
and
pusha
adc
ret
jp
push
cld
add
mov
out
mov
xchg
lret
out
cli
jmp
sub
clc
or
pop
sahf
dec
call
add
mov
add
dec
add
std
sbb
pop
ret
sahf
dec
clc
inc
jmp
cmp
pop
rol
into
pop
mov
mov
popa
xchg
vsubss
leave
inc
dec
lret
sbb
sbb
stc
mov
data16
push
jnp
lcall
or
cmp
rorl
jmp
jno
mov
fists
mov
ljmp
das
repnz
je
dec
repnz
into
or
in
adc
xchg
nop
mov
mov
aaa
adc
pop
pop
hlt
fisubrs
sbb
ds
push
xor
xchg
ret
aam
cwtl
push
dec
cltd
jb
adc
push
mov
push
lock
pop
mov
adc
xlat
mov
mov
lods
xchg
jecxz
push
jl
imul
push
dec
mov
movsb
sbb
xor
ljmp
push
push
loope
mov
test
das
sarb
add
push
aaa
mov
sbb
repz
ljmp
cmc
fldt
jae
cmp
inc
jmp
mov
jmp
ljmp
es
adc
jg
or
add
in
mov
or
mov
inc
jne
pop
icebp
jecxz
and
push
push
call
push
jl
jo
mov
fcoml
scas
sbb
in
pop
cmc
add
or
bound
push
fcomps
mov
int
decl
dec
jecxz
rorl
loope
add
pop
in
push
sub
inc
mov
ljmp
inc
xchg
mov
push
and
mov
testl
cmpsl
mov
rol
pop
sarb
daa
sti
or
mov
decl
mov
in
rcrb
lret
add
add
std
and
lcall
outsb
imul
push
and
adc
shl
into
mov
loopne
mov
pushl
adc
arpl
imull
sbb
cmp
cld
cwtl
push
inc
push
xor
pushl
ljmp
imul
scas
xor
clc
sub
mov
std
pop
lock
lcall
imul
push
sub
repz
insb
ja
fmuls
dec
int
sahf
incl
std
and
push
loope
sub
mov
mov
in
in
stos
sub
cmpsb
nop
jp
mov
lea
add
addr16
dec
ljmp
into
fbld
test
lret
push
jge
sub
adc
mov
cmp
lcall
jge
xchg
mov
inc
cmpsb
rorl
mov
cmp
lcall
sub
xlat
aam
mov
call
add
xor
rol
ljmp
dec
enter
jge
ud1
mov
sbb
adc
sub
push
sub
rcrl
clc
call
popa
add
lea
push
pop
fcompl
jnp
call
pop
jmp
sbb
fwait
ja
arpl
scas
jmp
scas
enter
and
jmp
and
inc
mov
jbe
ja
push
jp
or
or
aas
xchg
jmp
sbb
sahf
movsl
in
xchg
mov
loope
mov
repz
mov
in
cmp
push
sbb
mov
push
mov
jp
push
mov
xchg
in
lret
rorl
popf
and
xor
pop
sub
test
lcall
stc
mov
scas
sub
stc
sub
rolb
jmp
xchg
cli
and
in
cmp
jmp
sbb
lods
stc
mov
cwtl
outsb
mov
push
bswap
movsb
or
in
mov
and
data16
lahf
and
jge
cld
xchg
mov
adc
pop
cmc
mov
lods
push
jle
mov
imul
jg
pop
inc
test
incl
push
and
mov
add
mov
mov
aam
xchg
pop
fadd
popl
hlt
mov
jmp
dec
pop
inc
aam
shrl
sahf
adc
sbb
mov
fisttps
adc
xchg
and
mov
pop
addb
push
bound
in
cwtl
fdiv
lcall
dec
stc
xchg
and
push
jecxz
lods
call
mov
leave
test
jae
aaa
xchg
cmp
jmp
out
movsb
pop
jmp
lods
add
ja
mov
lcall
xor
or
out
cltd
ljmp
mov
mov
js
push
mov
push
aaa
in
dec
pop
lret
xchg
sub
stos
ljmp
in
dec
lret
mov
pop
aad
adc
cld
mov
xor
scas
clc
pushl
sbb
std
cwtl
les
call
lret
stos
jg
mov
lahf
cs
iret
cmp
sbb
inc
idiv
sahf
sahf
mov
mov
jmp
sbbb
lea
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
stos
incl
sbb
xchg
adc
imul
bnd
cmpsl
inc
dec
mov
leave
mov
out
fistps
dec
sub
insb
fidivrl
inc
in
outsl
dec
xor
sbb
imulb
aam
shrl
mov
and
mov
fucom
idiv
jmp
je
mov
mov
in
movsb
mov
cmpb
push
loope
or
sub
incl
inc
incl
and
or
std
lea
push
aam
sbb
aad
or
sub
pop
fistpl
push
shl
pop
and
cld
jmp
xlat
aaa
mov
and
jb
xor
movsb
mov
xor
ljmp
mov
rorb
lods
fwait
lcall
mov
pop
dec
jmp
inc
loope
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
sub
jno
fildll
add
ss
mov
push
cmp
jnp
stos
ret
mov
ljmp
xor
lock
and
fisttps
dec
jmp
push
sbb
je
sahf
and
rcrb
xchg
lcall
or
repz
jmp
jns
insb
xchg
adc
dec
ret
inc
out
movsl
mov
idiv
push
pushf
sbb
aaa
sti
test
jns
adcl
aad
lods
pop
and
ja
and
test
arpl
ss
inc
into
cmp
cltd
xor
fwait
inc
cmpsb
cld
popf
adc
in
cmpb
mov
cmp
xchg
add
loope
sbb
loope
cmpb
ljmp
jge
cmp
nop
scas
mov
mov
int3
sbbb
insl
jno
inc
mov
arpl
arpl
inc
mov
scas
cli
int
test
pop
lods
xor
ja
xor
adc
aaa
pop
js
mov
jns
incl
jnp
sahf
add
push
out
int3
pop
mov
arpl
mov
mov
adc
vandnps
shl
lock
sub
cld
ljmp
call
pop
pop
mov
xor
add
cmp
test
das
adc
pop
jne
mov
imul
add
dec
xchg
push
mov
push
xor
pop
cmc
clc
xchg
push
ret
jmp
add
data16
adc
pop
xchg
and
call
fadds
std
mov
int3
or
fistps
xor
icebp
nop
out
mov
rcrb
gs
mov
ret
mov
dec
scas
jmp
sub
fiaddl
xor
outsb
loopnew
adc
fisttps
aam
add
jle
inc
mov
jmp
js
mov
mov
add
mov
mov
mov
or
ss
push
mov
jmp
lds
mov
jle
fwait
jb
in
test
dec
xchg
push
adc
sbbl
lcall
mov
and
in
inc
and
popa
imul
test
ja
je
aas
jecxz
enter
clc
xorl
add
cmpsl
xor
pop
mov
lcall
je
lock
lea
movsb
inc
mov
test
pop
mov
sub
decl
sbbl
call
pop
ljmp
lods
push
aaa
xor
call
mov
inc
cmp
xor
xchg
push
lcall
inc
clc
mov
bound
lods
push
pop
andb
sbb
jnp
test
bound
xor
inc
data16
adc
aaa
cld
jmp
xchg
push
scas
addr16
movsb
jbe
jp
arpl
xor
scas
test
decl
mov
stos
xchg
cli
clc
lods
mov
mov
xor
ljmp
incl
mov
add
cmp
repz
loop
pop
push
notb
xor
mov
decl
mov
mov
mov
push
jmp
setne
imulb
testl
jmp
jmp
lods
adc
add
imull
push
jl
push
jno
outsl
sbb
test
call
and
stos
fdiv
or
lahf
cmp
shl
mov
in
test
shl
jno
lods
sub
mov
lcall
lahf
or
gs
mov
push
adc
adc
rcrb
incl
mov
sbb
pop
and
pop
inc
clc
outsl
loope
cli
pop
dec
add
loop
pop
push
cmovb
inc
incl
enter
push
scas
push
addr16
fsubrs
or
incl
cltd
push
push
cli
ret
imul
dec
stos
rol
mov
push
jbe
mov
cmp
mov
inc
xor
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
ljmp
out
sbb
xlat
adc
xchg
add
sbb
pop
adc
fcomps
incl
aas
cmp
and
jnp
sub
lods
sbb
aaa
jecxz
jbe
mov
adc
incl
repnz
add
fimull
scas
mulb
clc
sbb
in
je
testl
lock
jnp
cmc
cmc
cmp
lock
dec
sub
fwait
add
jns
sub
scas
mov
mov
add
add
sbb
hlt
xorb
add
push
pop
add
push
insb
lret
bound
in
adc
out
dec
sub
orl
iret
cmp
inc
push
data16
or
xchg
cmp
imulb
aas
add
and
popa
es
inc
mov
popl
or
dec
pop
inc
inc
xor
decb
ret
fisttpl
das
sbb
dec
call
mov
lds
mov
cmp
xchg
rcrb
fldcw
aam
call
ficoml
push
fisttpll
movsb
outsl
stos
test
cmp
ljmp
inc
mov
in
dec
aam
xchg
test
lock
popa
or
movsl
cmpsb
sub
bound
pop
mov
jo
sbb
subb
sbb
push
jmp
mov
test
mov
nop
dec
repnz
inc
lods
imul
adc
jp
or
fwait
fs
das
loop
daa
incl
sahf
pop
xlat
cmp
sub
in
sub
dec
sbb
push
lods
outsl
cli
mov
ds
adc
mov
inc
test
hlt
xor
xchg
fisubs
jle
xchg
pop
popf
sti
mov
int3
pop
xor
cltd
xchg
addl
push
mov
pop
pop
cmp
call
clc
je
psllq
cwtl
sub
or
movsl
fldl
mov
add
lock
decl
sbb
ja
lods
scas
ficompl
mov
pop
out
dec
call
mov
lcall
inc
test
jmp
mov
add
push
sbb
pop
sahf
and
push
dec
jmp
into
xor
scas
xor
cmp
arpl
and
mov
movsb
cli
outsb
int
or
pushl
into
movsl
jo
cltd
fisubl
xchg
mov
popw
sbb
add
sbb
pushf
jne
icebp
mov
push
cwtl
pushl
pushl
mov
daa
ret
pop
loop
or
rol
rolb
out
inc
xchg
stos
dec
in
dec
jg
decl
jne
scas
lds
jle
mov
lahf
push
pop
dec
pushl
adc
loope
fcoms
scas
jno
pop
xchg
sahf
xchg
mov
fcomip
dec
inc
dec
mov
sub
add
std
add
mov
add
lock
test
icebp
lahf
movsl
inc
aad
inc
not
std
sbb
adc
test
push
or
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
decl
neg
sti
sub
mov
insl
repnz
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
pushl
cmpsb
in
push
ficoms
push
lret
jbe
imul
test
adc
in
push
mov
fcomip
xor
loop
sub
fwait
and
imul
jmp
jle
jno
inc
cmp
cmc
clc
call
pop
aam
in
cmp
jg
icebp
es
xchg
fadd
xor
das
xor
xchg
shrl
shl
out
mov
cmpsl
sbb
xchg
add
cltd
loopne
mov
pusha
sbb
inc
pop
fisttps
rorb
sub
pop
pop
pushl
jecxz
mov
cmpsb
ljmp
jo
hlt
mov
cmpl
imulb
pop
jecxz
cmp
ja
cli
or
pop
rcrb
sub
enter
mov
test
cmpl
lcall
cmp
push
rcrl
mov
xchg
arpl
shlb
and
incl
and
lods
dec
xchg
push
xor
jno
call
add
out
xlat
cwtl
mov
and
ret
into
push
xchg
pushf
cmp
test
mov
xor
inc
and
out
lock
xchg
push
daa
sbb
loopne
mov
imul
pushl
add
push
mov
jecxz
adc
sub
out
outsb
addr16
lcall
stos
addr16
aas
cmp
bound
push
rcrb
rolb
movsb
sbb
inc
incl
inc
mov
loop
xchg
push
or
in
mov
and
out
nop
data16
jns
cmpb
pushl
jmp
loopne
and
pop
inc
dec
mov
and
popf
data16
ljmp
add
sbb
xor
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
imulb
rcr
fsubl
arpl
test
clc
cli
gs
inc
push
mov
fbld
push
mov
dec
addb
push
fisttps
cmp
ds
jo,pt
pop
test
idivl
inc
inc
mov
sub
outsl
mov
inc
ret
mov
pushl
popa
movsb
mov
inc
fdivrs
inc
push
mov
pushf
xchg
sub
ljmp
jg
jmp
int
dec
test
pop
jne
cmpsb
adc
scas
mov
mov
lock
sar
mov
cld
lret
js
push
xchg
gs
ljmp
out
lret
push
pop
sbb
lcall
xchg
fsubrl
pop
inc
shrb
popf
ret
aas
inc
xchg
popa
lahf
scas
or
fs
fcoms
or
pusha
sahf
out
fs
inc
lcall
movsl
and
sub
ffreep
cmp
cli
scas
and
adc
shrl
push
mov
enter
call
xchg
xchg
and
mov
lcall
inc
mov
fidivl
and
xor
push
lcall
adc
cmpsb
mov
je
mov
adc
ss
or
sti
fdivp
dec
fimull
shlb
lret
jp
loope
fwait
cmp
mov
lret
jmp
pop
ds
call
jnp
fmuls
out
int
call
cmp
xchg
ficompl
mov
insb
aas
mov
pop
and
inc
adc
xchg
cmp
push
pop
rcrb
mov
mov
sbb
jmp
mov
lahf
fimull
decl
cmpl
mov
adc
cmp
dec
mov
in
push
push
add
lcall
mov
dec
jecxz
inc
mov
sti
pop
int3
xchg
aaa
jp
or
adc
fisubrs
dec
adc
xor
lcall
lret
arpl
repnz
mov
in
mov
gs
ret
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
addr16
insb
push
jl
pop
cld
or
mov
push
dec
mov
dec
adc
lcall
lret
jecxz
in
xchg
dec
mov
ljmp
sbb
sbb
push
popf
decl
mov
pop
sub
push
loope
xchg
pop
xor
mov
xor
adc
mov
jo
lods
xchg
out
mov
call
dec
scas
jge
or
push
loopne
mov
pop
into
repz
mov
call
xor
movaps
xchg
xchg
call
and
ljmp
pushf
push
dec
adc
ror
inc
ds
mov
decl
sbb
stos
and
jp
fnstcw
bound
outsl
cli
adc
loope
inc
push
jle
mov
roll
cmp
mov
pop
mov
hlt
stos
adc
add
mov
ret
mov
call
and
call
xchg
mov
xchg
jg
aas
faddl
pushl
iret
and
ja
sub
enter
pop
jnp
or
fisubl
or
mov
out
test
sub
inc
pushf
frstor
sbb
jne
aam
gs
ljmp
mov
cmp
mov
daa
imul
lods
or
repnz
add
xlat
call
fnstcw
and
xor
xchg
pusha
xor
dec
popa
stc
subl
push
xchg
fiaddl
ret
push
dec
xchg
or
cmc
xor
test
or
xlat
adc
repnz
mov
pop
push
dec
jg
fisttpl
cmp
sub
roll
mov
jg
jecxz
popa
js
lret
push
push
ja
jle
cmp
lock
dec
sbb
int
dec
lret
loop
incl
pop
mov
aaa
shll
jns
lahf
cltd
mov
std
jmp
dec
lods
pop
or
sahf
iret
push
sti
rolb
insl
cmp
pop
pop
sub
xchg
insl
stc
not
lcall
je
sub
cmp
lock
or
xchg
and
dec
mov
sar
cwtl
sbb
ret
xchg
leave
and
test
loop
sbb
jb
popf
add
call
adc
js
call
imul
insl
mov
lds
call
fadds
mov
adc
pusha
adcb
sbb
test
mov
jmp
mov
push
inc
mov
and
or
sbb
pop
movsb
daa
outsl
rorl
int3
sbb
or
test
in
and
mov
arpl
and
ljmp
sbb
xchg
mov
jno
out
outsb
lcall
imul
add
ja
lahf
pusha
imul
jb
add
mov
jmp
shr
add
addr16
fidivl
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
decl
aas
aad
xchg
or
jg
hlt
mov
inc
adc
dec
lcall
movsl
stc
xor
pushl
sahf
mov
pop
sub
jnp
inc
ror
add
sbb
into
scas
and
outsb
add
fcomip
xchg
and
sbb
divb
and
xlat
ret
aad
pop
or
sahf
push
out
imul
xchg
mov
and
rcrl
push
jae
jp
adc
les
xchg
push
push
pop
call
push
and
cmpl
add
repnz
movsb
aad
xchg
stc
mov
in
mov
lcall
pushf
shll
dec
sub
xchg
pop
jno
pop
leave
int3
and
mov
mov
je
lcall
jno
xor
pop
inc
mov
mov
pop
sahf
or
idivl
fsin
xchg
incb
in
inc
xor
add
jmp
insb
int3
add
sub
fwait
lods
fimuls
mov
fildll
cmpsb
jno
negl
test
jmp
aas
decl
adc
dec
jbe
movsl
loope
dec
xchg
es
daa
and
ret
inc
inc
jecxz
popf
test
std
mov
call
jbe
cmp
mov
stos
mov
jae
lret
sub
push
addr16
andb
decl
and
jmp
inc
bound
push
sahf
inc
jno
sbb
mov
lcall
pop
mov
mov
pop
mov
repnz
mov
inc
xchg
mov
inc
jns
clc
ret
add
dec
sahf
call
testl
mov
sub
mov
es
cld
fwait
dec
cmc
cld
add
mov
mov
or
or
mov
mov
das
cli
jmp
pushf
cwtl
mov
or
mov
push
xchg
cltd
aad
jb
dec
push
lods
mov
stc
push
sub
jl
mov
jle
add
sahf
js
hlt
pop
add
sbb
imul
mov
jae
jg
mov
sbb
xchg
mov
test
pushl
adc
inc
ret
mov
jbe
aas
push
icebp
sbb
popf
push
es
push
inc
inc
fnstenv
lcall
mov
leave
jnp
mov
std
mov
sub
push
rorb
mov
call
mov
popf
movsb
and
cmp
and
loopne
cmpsb
jge
push
incl
or
les
xchg
ds
sub
pop
jbe
test
add
pushf
fildll
shlb
fs
popf
mov
cmc
xor
jae
mov
sbb
push
sar
cmpsb
incl
sub
dec
and
jnp
jbe
sub
fistl
jo
mov
ret
popa
out
rorb
cmp
cmpsl
repnz
or
nop
sahf
add
push
adc
add
es
pop
ret
ds
les
jge
mov
call
call
outsl
aas
inc
loope
mov
cmp
fcoms
fbld
push
ret
jg
dec
mov
xor
dec
arpl
dec
jae
mov
repz
and
mov
idivb
ffree
popf
imul
xlat
jg
jno
cmp
imul
shll
out
inc
pop
add
iret
inc
pop
mov
popf
ljmp
loop
pushl
test
push
aas
shl
pop
jge
je
or
pop
ja
inc
xlat
rcr
fbld
cmc
cs
cmpsb
sbb
test
pop
cmp
xor
xchg
pushl
cs
fwait
sarl
cmpsl
mov
dec
sarl
mov
jb
cmpsb
push
inc
dec
jnp
xchg
push
push
jg
push
aas
lock
sbb
and
popl
cmp
stos
jae
push
bound
or
adc
mov
mov
adc
fs
imul
mov
ljmp
decl
insb
xor
outsb
hlt
inc
fwait
sub
pop
cmp
or
inc
or
es
mov
mov
lret
mov
fldl
in
add
loopne
jbe
cmpsl
hlt
adc
cmp
decl
pop
push
or
cmp
fsubrs
insl
aam
mov
jb
pop
xchg
repz
decl
push
scas
test
dec
insb
or
push
lret
dec
mov
mov
mov
out
mov
pushf
fimuls
add
test
jmpw
clc
scas
arpl
je
push
call
lret
cltd
pop
leave
jp
xchg
push
rorb
mov
cld
xor
fisttps
in
push
sub
push
subb
mov
xchg
insb
mov
shlb
xor
pop
lret
adc
pop
sub
pop
adc
das
jb
sar
or
cltd
fwait
jmp
sub
es
adc
xchg
adc
test
adc
push
and
rcrb
push
cmp
xchg
scas
in
inc
in
fdivr
mov
sahf
mov
ds
adc
enter
lods
lcall
jmp
dec
mov
mov
pop
mov
pop
aas
fildll
js
je
or
and
lret
lods
or
lretw
and
xchg
aam
dec
xchg
jge
xor
insb
add
mov
stc
and
sub
je
cli
das
shrb
add
popf
fs
adc
jg
inc
cli
cmc
inc
sub
test
rcr
dec
pop
or
popa
jecxz
pushl
inc
mov
sbb
aaa
push
sub
lcall
dec
popf
cli
roll
sbb
jno
add
sbb
sti
mov
adc
ljmp
jg
in
in
mov
pop
push
bound
test
gs
repnz
cmp
sbb
sti
mov
nop
and
jb
jbe
xchg
sub
mov
ljmp
xor
lods
push
dec
stos
dec
jae
push
ds
insb
push
mov
xor
pop
test
lcall
data16
cld
mov
arpl
sub
data16
test
gs
inc
mov
mov
push
imul
loope
into
push
mov
sbb
push
icebp
aaa
add
jg
sti
mov
leave
mov
push
ret
enter
sub
decl
mov
es
out
imul
dec
imul
cmp
xchg
in
fs
or
decl
mov
decl
fs
outsl
push
push
repnz
dec
imul
sbb
push
adc
std
out
clc
decl
dec
or
and
cltd
sbb
mov
xchg
jns
jb
inc
cld
lcall
sub
lcall
push
sbb
push
repnz
clc
add
arpl
out
lods
aad
adc
lock
jo
sbb
pop
test
push
pusha
jbe
ljmp
in
loopne
adc
pusha
inc
push
pop
in
lret
in
push
aad
imul
insb
xchg
or
push
xchg
jp
inc
mov
xchg
push
jmp
repz
xor
inc
fadds
cmp
cmpsl
cmpsl
imul
sets
push
loop
jmp
rcll
movsl
lods
incb
mov
outsb
fdiv
out
sub
mov
inc
loop
pop
arpl
lods
sbbl
inc
add
mov
fcmovb
arpl
jl
out
xorl
lea
cli
sbb
shll
lods
and
or
mov
jmp
sbb
callw
xor
adc
add
arpl
pop
cmp
mov
in
pushl
fs
pop
adc
call
add
sbb
or
dec
out
cs
incl
aas
ret
lock
mov
out
and
fmull
mov
ljmp
fildl
sahf
lds
test
pop
int
les
dec
out
stos
pop
cmp
cmpsl
or
out
movsb
data16
aam
ret
mov
mov
add
adc
mov
xchg
lcall
push
rcrl
jle
ds
dec
pop
sub
popf
lods
je
ds
jp
cli
incl
mov
xchg
adc
add
loop
into
std
cmp
pop
loopne
fildll
out
xor
add
insl
xor
lcall
sbb
xor
jo
xor
lock
jg
stc
xor
push
call
mov
data16
push
std
and
sub
cwtl
loope
pop
dec
push
fstps
cmp
jle
xchg
cwtl
jecxz
xlat
or
pop
fsts
cs
call
mov
cmp
add
jae
popf
icebp
jmp
xchg
jo
cld
lcall
add
daa
mov
dec
cld
push
or
and
nop
decl
sub
mov
imul
xchg
ja
ret
jmp
aas
adc
jecxz
dec
sbb
adc
test
or
xchg
shrl
mov
int3
add
icebp
int3
in
into
pop
xlat
adc
mov
pop
jp
stos
cli
out
jb
jle
mov
and
push
cmpsb
jge
push
int3
out
add
mov
mov
xchg
fisttps
cwtl
shll
dec
mov
incl
cld
lods
in
loope
cmp
testb
mov
call
mov
sbb
mov
sbbl
jbe
jg
add
inc
iret
dec
shl
call
sbb
and
decb
outsl
int3
test
mov
outsb
sub
sbb
jmp
sbb
cld
and
out
decl
mov
data16
mov
outsb
ds
push
cmpsb
xchg
ljmp
cli
pop
cli
pushl
insl
int3
enter
lahf
sbb
outsb
sbbb
pushl
andb
repz
into
inc
jecxz
out
jns
push
or
jne
daa
cmc
cltd
cmp
pushl
inc
lds
popa
mov
xchg
mov
push
mov
push
dec
fwait
sti
ljmp
ljmp
ljmp
add
inc
ljmp
cs
pop
push
add
and
dec
push
call
call
stos
inc
pop
loope
xor
jmp
adc
andl
mov
stos
xchg
shll
sarl
aaa
and
cltd
adc
popa
aam
jmp
cwtl
iret
mov
stos
int3
psrlq
add
sbb
pop
sbbb
add
inc
cmp
outsb
arpl
xchg
sub
mov
push
sub
sar
jg
add
movsb
das
jne
pop
xchg
add
out
icebp
rclb
push
xor
mov
outsl
adc
loope
adc
cwtl
fcoml
adc
mov
inc
sub
mov
cwtl
insb
into
out
mov
sbb
rcr
popa
stos
xchg
stc
into
mov
ret
popf
sahf
add
cmpsb
jmp
movsb
cld
push
cwtl
xchg
jbe
lcall
popf
cmp
cmp
sbb
arpl
push
adc
sub
call
std
cmp
adc
push
shlb
mov
repz
call
dec
cs
outsb
xchg
addr16
clc
xchg
pop
lcall
enter
mov
ja
push
into
divl
dec
fildl
movsl
sbb
addr16
pop
test
ljmp
mov
in
ljmp
jmp
add
push
mov
lds
scas
mov
mov
xor
lcall
cmp
gs
jae
iret
or
mov
jns
lret
xor
jmp
in
mov
outsb
out
nopl
push
fs
xchg
add
ljmp
hlt
xchg
clc
adc
or
loopne
loopne
push
andb
sbb
cmp
push
mov
addr16
push
es
mov
xchg
push
incl
cmp
inc
lret
fs
mov
dec
push
jns
cltd
loope
adc
mov
jle
jno
mov
pop
lock
sbb
add
push
or
sarl
hlt
mov
fildll
and
mov
xlat
sarl
dec
adc
add
pop
xchg
icebp
arpl
data16
inc
lahf
mov
jmp
std
mov
xchg
sti
jnp
cmp
cld
add
dec
pop
ss
mov
stos
mov
jbe
cmp
xchg
clc
mov
movl
mov
jmp
enter
push
outsb
in
fisubrl
jle
dec
pop
lcall
sub
vmovups
imul
jle
dec
scas
std
sbb
add
out
ljmp
dec
nop
push
scas
push
imul
testb
add
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xchg
cmc
pushl
sar
cmp
ss
ja
mov
mov
inc
sbb
jmp
fisttps
sti
loopne
jmp
add
lea
xor
jne
rorl
cwtl
je
pop
pop
ss
dec
xor
pushl
xchg
test
lahf
cmp
jmp
and
scas
cld
mov
push
sar
adc
mov
mov
jnp
add
xchg
in
insl
test
pushf
sub
enter
mov
xchg
jg
outsl
xchg
pop
cld
aaa
adcl
idivb
jle
adc
adcl
and
dec
lods
pop
push
cmovp
inc
pop
cli
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
mov
or
dec
lds
je
xor
out
call
imul
pushl
andl
xor
ljmp
fisttpl
fnstcw
add
cltd
clc
fucomi
push
mov
and
push
leave
in
pop
jg
dec
idivb
pop
wbinvd
loop
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pushl
pop
js
insb
out
sbb
leave
jle
jp
jle
sbb
and
das
pop
dec
xor
fwait
jb
adc
cmp
xchg
mov
mov
or
sbb
cmp
sbb
xor
push
test
jmp
dec
jb
rol
xchg
xchg
sbb
inc
and
int
adc
cmp
pop
out
and
or
push
je
mov
out
jmp
cmpsl
add
test
inc
lods
cmc
xor
je
xchg
xchg
mov
aad
push
lock
dec
fdivs
mov
addb
jmp
cmpsl
in
aaa
cmp
mov
out
rorb
test
xor
sahf
pop
cwtl
add
xor
loop
mov
and
jmp
mov
sbb
xchg
sub
mov
out
loope
ret
jnp
dec
stc
jae
add
mov
fcoms
addr16
or
leave
add
mov
movsl
idivb
lods
test
lcall
dec
stos
xor
add
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
incl
repnz
pop
cmp
popa
jg
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
push
ja
adc
jb
lret
stos
int
pop
sbb
fistpll
mov
sti
mov
lret
inc
lods
fdivs
aaa
push
cmc
daa
negb
ja
pushl
pop
clc
jae
and
scas
iret
fistpl
push
ficoms
fistpll
add
dec
std
inc
push
mov
push
push
call
ljmp
fstpl
mov
sub
sub
ljmp
in
ljmp
aad
push
test
xor
sub
sbbl
xchg
loope
pop
std
add
lock
decl
fldcw
xchg
iret
hlt
cmc
jbe
inc
jb
lock
xchg
sub
loope
hlt
rol
and
aas
mov
jne
lret
cwtl
jl
incl
decl
push
iret
into
mov
sbb
jb
jmp
pop
insl
dec
mov
incl
dec
xor
loopne
push
imul
xlat
mov
les
sbb
imul
cmpsl
cmp
pop
call
mov
cmp
push
cmp
xlat
mov
shlb
xor
pop
cmp
jnp
stos
and
aas
push
js
cmp
ds
cwtl
push
ds
push
lea
incl
ja
addr16
mov
nop
vunpcklpd
mov
icebp
enter
jmp
inc
mov
cmpsl
out
adc
daa
inc
or
pop
push
cmovb
pop
incl
pop
lock
int
push
or
ret
xchg
xor
jb
sbb
test
aaa
mov
jb
cli
ja
inc
jge
jo
out
adc
mov
cmp
ret
sbb
loopne
ljmp
mov
mov
xor
mov
jmp
mov
fistpll
aad
jno
cs
jmp
loop
ss
insl
outsl
mov
mov
jmp
mov
fidivl
mov
xor
sub
nop
dec
aaa
mov
add
xchg
push
clc
inc
cmpsb
xor
incb
push
jle
jecxz,pt
inc
jbe
out
add
mov
inc
pop
shrl
sub
or
push
lahf
mov
jge
dec
ja
jmp
lods
arpl
out
push
in
pop
ret
inc
fcoml
fldl
fcomip
push
cs
loopne
xchg
cs
mov
xor
cli
outsb
add
mov
pushl
push
sbb
in
movsl
xlat
aam
mov
xchg
bound
cmp
push
adc
jmp
insb
xor
jbe
jne
mov
push
cmp
pop
inc
pop
add
xor
cmp
pop
repnz
mov
ljmp
pop
ja
ror
dec
adc
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
popa
add
mov
pop
push
daa
dec
in
lret
daa
int
sti
sbb
and
sub
decl
add
daa
mov
or
pop
nop
or
femms
frstor
add
shr
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
ljmp
dec
aad
cmp
clc
in
insl
mov
rolb
mov
stos
leave
add
js
dec
add
jl
pop
mov
inc
xor
lahf
xchg
and
add
mov
lods
sbb
outsb
icebp
and
pop
mov
stos
popf
pop
mov
loope
clc
enter
and
cmp
outsl
shll
inc
cmp
sbb
hlt
xor
sbb
out
lcall
rolb
test
add
push
jnp
jnp
push
addr16
sti
ljmp
jb
sub
and
shr
or
xchg
adc
stos
push
decl
push
js
mov
push
dec
push
jl
in
fisttpll
aam
add
mov
outsl
add
jnp
mov
andb
xor
adc
add
scas
mov
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
not
jmp
xor
les
cmc
int3
loopne
stos
add
loope
mov
and
lds
jb
jg
mov
cld
pop
enter
and
out
jbe
mov
and
icebp
push
add
or
adc
push
jnp
and
mov
gs
incl
mov
out
adcb
xor
mov
pop
mov
pop
movsb
call
cmc
je
cmpsb
shlb
sti
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
jg
and
or
pushf
dec
inc
jae
loop
enter
mov
clc
cmp
jmp
sbb
hlt
std
lock
or
push
jb
pop
loope
nop
cmc
mov
cld
bound
sub
lret
ja
xor
cltd
cld
or
pop
pop
mov
int
mov
mov
jp
or
add
insl
ficompl
rorb
mov
mov
ja
and
gs
out
pop
jl
ss
loop
pop
pop
jl
incl
inc
pop
mov
test
icebp
std
jmp
ret
jl
inc
or
rcll
xchg
push
xorl
arpl
shlb
mov
test
cmp
cmp
or
sub
pop
icebp
ljmp
push
insb
stos
push
repnz
jg
xchg
push
mov
jne
jnp
incl
cmp
xchg
repnz
push
mov
push
cmpsb
je
test
das
mov
or
call
xor
jo
mov
mov
dec
pushf
lcall
push
loopne
mov
xor
out
mov
pusha
ljmp
sbb
jno
mov
pop
mov
jmp
andl
xor
sahf
ja
sahf
mov
mov
adc
ss
inc
sbb
sub
popa
into
push
loopne
das
mov
xor
adc
push
aam
add
sub
out
cli
rcr
jge
imul
scas
add
sbb
js
add
jbe
into
lcall
aam
lcall
xor
test
mov
faddp
mov
dec
ds
sbb
push
mov
dec
cmp
jne
mov
sub
push
test
test
stc
sbb
es
pop
pushl
dec
es
std
mov
push
pusha
test
xor
pusha
imul
incb
jmp
pop
stc
daa
repz
mov
mov
stc
stos
xor
xchg
call
pusha
dec
push
push
decl
xchg
sub
cmp
cmp
add
mov
mov
call
adc
pop
sahf
aad
mov
or
sahf
mov
iret
pop
mov
in
ja
mov
jno
add
cmp
push
rcl
pop
jl
pop
rol
sub
mov
lcall
jp
ljmp
push
or
jmp
push
jae
pop
jbe
adc
call
xor
mov
push
cmpsl
cmp
in
repnz
ds
in
mov
xchg
cmpsl
xlat
adc
pop
add
ljmp
bound
push
shrl
hlt
hlt
int3
mov
shll
cltd
cmp
push
xchg
add
rclb
fidivrl
dec
aam
jecxz
inc
adc
icebp
sub
mov
xchg
movsl
pop
add
ljmp
pop
gs
mov
xorl
sub
cmp
and
mov
out
into
xor
mov
xchg
jno
sub
into
push
test
push
mov
pop
mov
rolb
leave
or
ds
xor
sbb
movsb
fisubl
pushl
imulb
sbb
push
mov
push
mov
adc
sahf
xor
and
decl
lahf
cmpsl
subb
imul
sub
outsl
or
cmp
cmp
aam
xchg
imul
inc
fisttpll
mov
cmp
lods
push
ss
das
jecxz
sahf
in
div
adc
jge
scas
dec
je
call
inc
lea
incl
mov
mov
xor
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jg
jns
scas
or
jmp
arpl
jne
stos
and
mov
lcall
dec
aas
fildl
cmp
jge
movsl
out
jge
xor
div
mov
cmp
xchg
mov
dec
into
mov
lcall
cmpsb
jle
or
fisttps
ss
dec
popa
rolb
rol
cmp
inc
push
je
sahf
arpl
dec
and
decl
fildl
in
xchg
push
mov
push
sub
cmp
cld
push
pop
xchg
sub
pop
loopne
insl
jg
loop
test
jg
lcall
adc
pushf
inc
jae
in
cmpsl
clc
mov
fmull
pushf
and
adc
imulb
aam
fxch
gs
dec
in
jb
pusha
es
lahf
mov
inc
js
mov
scas
and
inc
add
jne
iret
mov
xchg
pop
ja
xor
push
inc
xor
ljmp
es
push
inc
jne
cmp
les
or
fldcw
xchg
sbb
mov
decl
cmp
push
mov
gs
imul
dec
lock
dec
mov
das
jp
dec
test
scas
cmp
cmp
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
cmp
decl
or
dec
mov
xchg
leave
mov
stos
mov
clc
ljmp
xor
dec
jp
mov
clc
fdivr
lcall
jp
sub
cmpsb
jmp
daa
sbb
inc
cmp
xchg
fdivrl
lods
or
xchg
andb
add
decl
inc
scas
pop
jmp
dec
inc
maskmovq
divl
sub
cld
inc
orl
xchg
ds
int
jecxz
shl
and
lods
sbb
fsubrl
or
sbb
cmp
dec
xchg
dec
mov
cltd
add
incl
xchg
comiss
test
push
mov
fdivr
xchg
cmp
sub
mov
clc
push
push
mov
insl
mov
ja
stc
push
xor
addr16
cwtl
cld
xchg
cld
insb
decl
stos
dec
pop
out
aaa
pushf
push
jne
mov
dec
adc
or
orl
ret
mov
sub
test
iret
imul
add
aas
mov
icebp
popf
aad
add
hlt
jmp
lret
push
mulb
stos
sub
test
and
decl
mov
jle
outsl
pushf
xlat
adc
subl
leave
stos
mov
jmp
pop
repnz
pushf
push
out
test
or
shrb
mov
pop
repz
mov
cmp
jecxz
mov
cmp
xchg
repz
shr
lods
dec
rcll
imul
call
lcall
mov
mov
push
pop
ja
sbb
mov
ljmp
iret
fs
mov
out
inc
inc
out
cmp
xchg
in
std
in
dec
js
lret
ja
mov
inc
frstor
dec
mov
cltd
mov
or
ljmp
pushf
and
inc
jno
shrl
divb
sahf
repz
mov
pop
or
enter
cmp
movsl
test
je
adc
cld
jb
incl
jg
mov
xor
repz
xor
jmp
or
aaa
call
lock
stos
adc
pop
lret
push
mov
repz
jbe
stos
rclb
inc
sbb
inc
jg
ficomps
imul
sbb
loop
pop
std
loope
dec
pop
aad
in
mov
enter
aas
dec
jne
js
mov
ds
movsb
jmp
sub
lods
cltd
in
loop
xor
shlb
pusha
fidivs
fisttps
mov
push
leave
inc
cmp
sbb
cmp
push
mov
sbb
lcall
mov
push
ret
cwtl
cmp
dec
inc
insb
test
cmp
test
push
cmp
pop
mov
enter
fistps
pushl
ret
sbb
add
in
push
pushf
sbb
mov
popf
sbb
nop
fcomip
add
jae
dec
in
or
test
push
insb
test
ljmp
cld
sub
add
icebp
cmp
out
enter
in
add
pop
std
dec
sbb
and
mov
mov
mov
pusha
mov
inc
scas
pop
shrl
adcb
ja
mov
cmp
xor
inc
aam
fcomip
sti
dec
push
jmp
popa
shll
xchg
in
orl
fbld
dec
push
rorl
push
jb
xchg
ret
cli
lahf
lret
std
xor
xchg
clc
pushl
add
test
hlt
mov
enter
call
out
xchg
cmp
sbb
lahf
idivb
dec
jle
mov
das
mov
incl
stos
xchg
fcmovnb
jle
xchg
xchg
sub
out
cmp
inc
push
mov
dec
loopne
shl
push
pushl
or
add
bound
cli
out
dec
repz
int
adc
cmpsb
ret
lcall
mov
dec
subl
icebp
lock
jb
mov
incb
cmp
lods
es
or
out
arpl
lock
inc
xchg
test
lods
pop
pusha
add
loopne
sbb
fsubrs
or
inc
adcl
lcall
jp,pn
xchg
and
ja
jb
xchg
ja
pop
lea
xorl
lcall
movsl
xor
sbb
aam
pop
push
push
pop
mov
cwtl
or
inc
out
clc
jmp
mov
int3
mov
push
inc
dec
pop
push
popa
scas
rorb
hlt
mov
icebp
push
clc
loop
in
fmuls
cmp
test
mov
mov
out
dec
jle
pop
test
pop
les
inc
jns
shrb
dec
imul
pushl
fsubrl
mov
pop
ljmp
lret
aam
lock
adc
xor
jnp
adc
popf
int3
jo
xorl
push
adc
mov
inc
int3
imul
mov
push
cmp
pop
bound
add
ljmp
loop
push
jle
jge
mov
xchg
pushf
in
xchg
stos
aad
test
and
cmpb
aaa
clc
popf
jg
cmpsb
mov
enter
pop
clc
jecxz
ret
int3
xchg
sub
ljmp
fwait
clc
cmpsb
jnp
mov
scas
jne
xor
pusha
adc
repz
hlt
jns
add
inc
mov
cld
incl
cmpsl
and
sbb
daa
sub
jmp
lds
test
in
std
js
sub
ja
xchg
xlat
push
mov
lcall
jle
mov
les
stos
inc
fidivs
cmp
and
mov
scas
dec
jp
push
pop
clc
fstps
jg
mov
into
xlat
iret
mov
xor
adc
pop
fisttpl
pop
jl
negl
sbb
push
push
mov
daa
lods
add
mov
mov
aas
xor
adc
mov
jno
inc
inc
pushl
and
xchg
mov
pop
pop
adc
mov
scas
insl
dec
shll
imul
cs
fcomip
mov
dec
and
push
iret
xlat
leave
js
push
push
mov
lahf
mov
jb
aam
jg
call
jmp
outsb
call
and
hlt
dec
mov
hlt
testl
std
call
jecxz
mov
mov
out
imul
add
adc
xchg
lret
jg
sub
inc
xchg
mov
in
cmp
test
in
incl
xor
pop
ret
add
mov
xchg
jnp
push
xchg
test
xor
decl
inc
cmpsl
int
inc
in
fstpl
jns
movsb
mov
scas
add
outsb
pop
xor
out
pop
fisubs
cmp
push
lods
pop
cld
scas
shlb
pop
gs
repz
mov
insl
xor
and
sbb
jecxz
aas
arpl
jmp
xor
mov
jg
mov
outsl
lock
dec
ja
sar
movsb
movsl
adc
notl
ljmp
jnp
mov
cmpsl
sub
mov
lret
enter
test
adc
mov
jmp
mov
add
sbb
adc
rcrb
and
lds
stos
adc
mov
mov
inc
ret
in
sbb
stos
daa
push
sbb
pop
inc
sbb
addb
lcall
and
mov
mov
dec
push
enter
push
or
iret
mov
decl
cld
or
pop
add
inc
mov
xor
clc
div
xchg
fistps
xchg
lahf
mov
cmp
dec
dec
sub
jae
xchg
cmc
mov
mov
fistpll
push
xchg
dec
push
adc
pop
enter
fidivs
pop
imul
movl
dec
mov
and
mov
out
inc
mov
loop
loope
adc
ja
lcall
cwtl
jnp
call
jg
push
mov
adc
nop
pop
or
mov
setp
mov
xchg
mov
cmp
mov
lret
push
outsb
mov
add
clc
shl
movsb
add
lcall
add
jmp
jno
mov
push
hlt
fcoml
pop
jg
jmp
ljmp
jp
add
les
cmpsl
xchg
sbb
cmp
mov
mov
subb
ljmp
push
adc
imul
mov
mov
ret
cmp
out
mov
xlat
add
cmp
addr16
out
add
dec
rolb
mov
xor
fldt
push
fisttpl
in
out
sbb
repz
popa
call
xor
dec
decb
sub
xor
jmp
adc
das
mov
sbb
add
add
div
aad
push
ret
push
jbe
test
call
loopne
fwait
mov
aam
inc
fucom
push
in
pusha
xor
fcomps
mov
mov
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
loop
ror
iret
clc
and
pop
and
xor
jns
pushf
jnp
and
loop
dec
and
stos
pop
xor
sti
xor
mov
lods
pop
fs
jb
pop
mov
shl
dec
inc
push
or
rcrb
cmp
push
nop
icebp
ljmp
aaa
loopne
inc
inc
enter
rep
mov
pushl
pop
sbb
ss
and
mov
ljmp
stc
rcrl
scas
mov
aam
or
jg
lea
fcomps
int3
dec
xor
jnp
xchg
movb
gs
ljmp
das
jmp
dec
add
lds
jge
mov
jmp
call
pushf
xchg
addr16
mov
inc
pop
imul
dec
sahf
mov
aas
inc
aam
sti
aam
out
adc
adc
jnp
jo
lea
leave
fdivrp
call
push
xor
jns
cmp
mov
decl
iret
xor
stc
sbb
mul
mov
or
daa
jecxz
push
pusha
daa
dec
decl
ljmp
inc
icebp
xor
pusha
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
incl
mov
iret
insl
rolb
sbb
pop
pushf
cli
and
xor
jg
sahf
mov
insb
lahf
insl
xchg
cmpsb
movsl
incl
dec
ficompl
pushl
add
mov
mov
incb
jno
cmc
shll
sub
mulps
mov
cli
in
fwait
pop
lea
dec
jb
sar
pushl
js
push
and
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
cs
fisubrl
mov
jo
inc
or
shll
incl
dec
xchg
popf
sbbl
incb
cmp
enter
stos
mov
inc
push
or
or
out
dec
pop
call
negl
xchg
mov
daa
xchg
add
push
adc
pop
add
and
push
and
mov
lea
cs
and
popa
sti
adc
cmovne
std
decl
adc
pop
inc
jmp
xor
xchg
js
mov
lods
ss
jg
pop
insb
mov
cli
dec
movsb
js
pop
call
inc
ss
mov
scas
test
pop
psllw
fstps
or
loopne
mov
scas
dec
pushl
ja
mov
data16
sahf
orl
mov
push
ret
cmp
sbb
lcall
in
loope
pop
adc
inc
dec
repz
popa
lods
rcrl
sbbl
and
in
sbb
sti
test
cli
int3
lahf
mov
int
mov
dec
add
xchg
xor
pop
or
ljmp
cmpl
lea
fs
fwait
dec
lcall
and
push
ret
pop
push
iret
push
cmp
jmp
mov
inc
jge
aad
jmp
or
pop
cwtl
push
jl
dec
loop
mov
mov
inc
popa
arpl
dec
lahf
shrl
loopne
aaa
cld
and
test
dec
test
cltd
in
negl
push
stos
pop
insl
jo
inc
cltd
sarb
int3
push
cwtl
cwtl
rcll
incb
pop
stc
ljmp
sub
adc
mov
jl
test
jmp
xor
mov
pop
or
or
in
aaa
into
push
pop
inc
iret
aaa
cmp
sbb
out
push
xchg
fidivrl
sarb
jns
ljmp
lret
sub
jmp
sub
es
ljmp
lock
movsb
xchg
jns
xchg
sub
mov
lcall
mov
mov
sahf
mov
subb
ljmp
jmp
in
out
pop
aaa
in
push
cmp
jae
xor
jle
inc
and
cmpsb
dec
mov
fadd
xor
div
or
xchg
cwtl
jo
xor
sub
out
jmp
dec
jns
jmp
adc
pop
pop
push
push
icebp
imul
orl
incl
mov
cmp
out
jl
test
orl
aam
xchg
decl
shlb
push
dec
cmpb
std
out
adc
xor
ss
fnstenv
inc
cmp
pushl
xchg
out
lds
mov
pop
mov
pushf
adc
pusha
out
xchg
xor
aad
sub
adc
sub
cmp
push
fadd
out
sti
es
sbb
xchg
stos
fs
ficoms
lock
or
adc
into
and
sub
jecxz
ljmp
pop
cltd
inc
decl
add
cmp
in
jecxz
test
into
pop
out
mov
sbb
pop
mov
incl
dec
mov
mov
push
bound
inc
fldenv
dec
fisubrs
dec
enter
std
mov
incl
ss
insl
in
in
push
mov
xor
adc
adc
call
pop
cmp
xor
in
pop
int
or
cwtl
loopne
decl
mov
test
int
popf
add
xorl
mov
aam
ljmp
insb
and
imul
dec
inc
ljmp
mov
adc
jmp
int
xchg
fildl
lds
imull
call
mov
fmul
add
push
adc
les
dec
gs
lods
inc
pop
adcb
xchg
movsb
xchg
dec
mov
aad
pushf
dec
or
xchg
adc
cld
jle
mov
xchg
jbe
pop
sbb
pusha
cmp
or
decl
or
cmp
lahf
mov
cmove
call
shlb
orb
push
lcall
and
pop
push
sub
incl
mov
fiadds
scas
insb
mov
jge
test
pusha
sub
push
mov
test
pop
jmp
out
pushf
mov
xor
cmc
decl
or
mov
test
mov
or
sti
jns
add
sub
ljmp
mov
add
inc
addr16
ljmp
mov
scas
push
ljmp
jne
es
pop
lds
rcrb
test
and
mov
inc
jecxz
call
add
nop
dec
shll
sbb
jb
lcall
leave
stos
adc
call
cmp
jnp
dec
js,pn
sbb
ret
repnz
fnop
iret
lods
dec
mov
mov
push
pushl
jp
ljmp
ss
fdivrs
and
mov
dec
inc
mov
or
pushl
push
mov
jno
mov
mov
add
or
add
jl
mov
adc
jg
push
cld
dec
add
sbb
push
test
shrb
out
jne
mov
inc
dec
sub
mov
pop
or
loopne
jbe
mov
lods
push
push
into
adc
cld
sbb
dec
inc
test
mov
push
pop
dec
inc
cli
imul
cld
mov
lcall
jp
jmp
xor
jp
ret
mov
mov
stos
movq
sub
fidivl
mov
mov
shrb
pop
jnp
jbe
and
lds
mov
incl
test
lods
adc
pop
std
repnz
and
mov
mov
xchg
sbb
je
pop
fistps
add
movsl
mov
jmp
or
lcall
xor
mov
jle
jge
dec
dec
imull
rcr
jmp
push
fbld
call
in
cmp
testb
ljmp
scas
clc
push
dec
jb
out
jl
repz
out
fdivl
cmc
jg
gs
out
mov
je
inc
cmpsl
mov
mov
adc
shll
ret
mov
std
push
sbb
mov
ss
ljmp
shrl
and
cmp
lock
push
cmp
jmp
inc
mov
jno
jecxz
cmp
jne
out
and
jns
or
test
pop
dec
call
mov
dec
pop
push
test
call
push
push
add
mov
in
fisttpll
outsl
cs
cmp
cs
ljmp
aam
sbb
fcompl
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
pushl
mov
pop
fs
xchg
pop
cmp
push
or
mov
aas
rclb
lock
and
mov
xor
addr16
loopne
iret
idiv
cwtl
lods
xchg
cli
movsb
mov
in
cli
clc
xchg
add
mov
inc
adc
cltd
jmp
cltd
aas
dec
lods
add
push
pushl
in
loopne
dec
sub
loop
fcoms
nop
mov
xlat
cs
fisubrl
ss
mov
scas
test
xchg
and
movsl
inc
aas
push
call
out
xor
sarl
cmc
adc
xchg
mov
int3
lds
js
or
icebp
decl
xchg
jbe
dec
sti
xchg
testl
dec
jmp
ss
pop
xchg
mov
insb
pop
insb
movsb
xor
dec
adc
sub
cs
psubw
rorb
popa
dec
or
repnz
and
xor
je
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
gs
call
sub
hlt
and
xchg
scas
pop
lock
pop
and
mov
xorb
mov
xchg
jl
mov
mov
jl
jecxz
pop
in
insb
sbb
push
gs
ds
mov
pop
lock
imul
aaa
cmc
cmp
jp
inc
icebp
push
lcall
fprem
bound
inc
cmp
pop
lods
leave
mov
sbb
cmp
lret
mov
push
push
xchg
stos
lcall
xchg
cmpsb
pop
leave
jge
int3
cmp
arpl
sahf
incl
lret
fs
scas
lea
inc
mov
jae
dec
leave
sbb
mov
inc
sbb
fdiv
in
jg
or
sbb
jecxz
cmpsb
add
cmp
dec
cwtl
shr
fbstp
and
lods
jb
fidivrl
or
pushl
lods
cmc
popf
dec
add
and
inc
jp
mov
push
dec
pop
adc
sbb
dec
pop
ljmp
sbb
push
mov
cmp
mov
out
xchg
cmp
sar
std
aas
or
repnz
movsb
pop
test
dec
imul
and
xor
stc
pushl
dec
jp
out
push
lds
sbb
movsl
inc
or
xchg
jae
mov
lcall
adc
or
adc
push
ljmp
insb
inc
cwtl
aam
movsb
enter
lock
pop
ficompl
cmp
rorl
outsb
xor
cwtl
push
in
arpl
fwait
xchg
fstl
jno
insl
daa
push
in
pop
cmp
push
xchg
or
dec
add
mov
mov
jno
rolb
decl
jne
loope
mov
push
xchg
iret
in
leave
add
and
push
cli
mov
fwait
sub
cli
cmp
movsb
or
movsl
push
incl
push
xor
les
ljmp
decl
or
push
mov
fcos
mov
mov
fcomi
sub
adc
popa
jecxz
push
popf
testl
dec
cmp
or
xchg
sti
dec
pushf
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
dec
inc
clc
aam
dec
jle
enter
popa
cmpsb
arpl
out
imul
or
mov
insb
mov
xchg
inc
add
xchg
dec
push
dec
sub
subb
ret
call
call
adc
lds
fdiv
cmpsb
adc
inc
out
cli
cmp
and
add
cmp
fisubl
adc
inc
ljmp
adc
dec
scas
loopne
insl
cli
push
je
arpl
stos
jae
xlat
addr16
sti
cmpl
mov
pop
aad
jecxz
jle
in
and
xor
push
shll
aaa
cld
movsb
ss
stos
push
orl
push
jo
mov
pusha
pop
jmp
lea
pusha
jp
daa
jmp
cmp
mov
mov
insb
das
push
pusha
jp
mov
stos
nop
out
jnp
cmp
push
decl
pop
aaa
lock
aam
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
call
cmp
jbe
adc
sub
scas
cmp
xchg
rorl
add
adcl
or
sub
loope
data16
int
pop
enter
or
repz
std
out
call
fidivl
jmp
call
sahf
loopne
push
adc
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
push
dec
lcall
pop
aad
xchg
xchg
les
jae
jg
mov
push
inc
mov
fidivs
mov
push
jmp
icebp
jmp
in
mov
lret
cmpsb
mov
adc
adc
sbb
int
adc
decl
push
cmp
inc
add
insb
mov
or
jnp
and
pop
imul
lcall
fsubs
clc
mov
mov
pusha
jne
xor
pop
shlb
pop
adc
pop
movsl
mov
mov
fwait
ja
decl
fildll
mov
mov
sbb
mov
pushf
test
fildll
loope
pop
pop
fidivrs
fdivrs
xor
stos
cld
shl
mov
mov
pushf
add
xor
decl
dec
add
pop
repz
dec
ds
push
push
into
jl
mov
mov
mov
pop
mov
in
test
mov
sti
test
dec
cmp
inc
mov
mov
incl
adc
aam
jl
mov
mov
sbb
hlt
xchg
sahf
aam
mov
mov
mov
push
cmc
cmp
push
sub
inc
andb
or
popf
stos
xor
pop
cmpsb
inc
or
incl
lea
mov
mov
cmpsl
adc
inc
cli
mov
mov
icebp
fistpll
movsb
arpl
sub
icebp
mov
fidivrl
jae
mov
push
negl
loope
jg
int
ds
or
push
push
jbe
sbb
or
pop
add
xlat
mov
adc
inc
or
stos
cmc
sbb
add
ret
mov
outsb
idivb
sbb
jmp
icebp
fmuls
xor
mov
sar
push
shl
xchg
xchg
imul
xchg
cmp
movb
lds
pop
adc
pop
dec
jge
stc
loop
lahf
cmp
stos
imul
ffree
bnd
push
mov
ds
nop
push
cmp
jmp
pop
out
dec
dec
imul
lahf
mov
adc
incl
mov
push
mov
mov
fstl
dec
pop
call
imul
inc
repz
outsb
ret
sbb
loope
dec
mov
jmp
sbb
jg
mov
in
outsb
pop
loop
out
jmp
arpl
add
call
imulb
repnz
or
dec
in
xor
sub
lcall
mov
int
xor
incl
clc
cmp
test
testl
mov
orl
int3
dec
ret
mov
adc
outsb
lcall
in
aad
scas
push
fs
shrb
shld
mov
inc
jne
fs
outsl
lret
lock
or
ljmp
sbbl
enter
adc
add
mov
in
inc
pushf
js
inc
jge
xor
xchg
rcl
adc
sub
and
xor
lea
std
pushl
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
ds
dec
sbb
adc
ret
lahf
dec
xor
push
andb
testb
aam
repnz
jl
dec
xor
jne
test
sub
in
in
mov
subl
cli
das
pop
fstl
ficoml
lcall
rcrb
lds
mov
iret
cmp
add
xchg
xor
inc
sbb
sahf
pop
sub
mov
scas
xchg
sarb
nop
gs
sub
faddl
decl
cmp
imul
aaa
mov
arpl
fnstcw
push
or
movlps
cld
cmp
mov
adc
nop
dec
pop
into
mov
xchg
push
test
push
adc
mov
push
cmp
xor
lods
shll
add
push
xchg
pop
cmpsl
das
mov
popa
cmp
mov
jmp
shlb
push
xor
jns
adc
adc
rclb
test
loop
add
dec
incb
clc
stos
mov
dec
mov
sub
fs
mov
fwait
lahf
pop
mov
pop
aaa
imulb
or
clc
out
test
fnsave
jg
jmp
lock
pushf
cmp
mov
popa
das
mov
nop
dec
mov
dec
push
xor
ficompl
ret
mov
into
gs
js
push
sar
mov
test
pop
mov
or
sbb
and
out
push
sbb
js
cmc
pushl
push
add
push
mov
aam
je
mov
dec
jmp
adc
xchg
int
pop
aaa
mov
cltd
inc
in
dec
mov
fists
rcrb
mov
shlb
sub
dec
movsb
jmp
fiaddl
lahf
pusha
or
mov
adc
cs
in
pop
out
inc
jns
out
call
fmull
stos
pop
mov
mov
lcall
mov
aaa
rcl
lods
or
sbb
lods
ja
movsb
mov
decl
push
jecxz
xor
xchg
sub
fimull
lods
push
pusha
sbb
in
mov
call
movb
out
jo
xor
pusha
mov
xchg
xor
xchg
mov
cmpl
call
fwait
inc
xor
pop
inc
leave
repnz
mov
mov
sub
jne
pop
cmp
clc
lcall
or
insb
aam
rcll
mov
mov
lcall
or
pop
push
js
cli
adc
filds
flds
jbe
cld
inc
imul
mov
push
mov
add
inc
repnz
and
inc
or
imul
test
fcomip
mov
lods
jmp
push
jne
sti
jmp
mov
cs
cli
int
ja
loopne
jmp
enter
adc
xchg
std
add
push
loop
je
add
and
jg
rclb
notb
frstor
add
ljmp
pop
icebp
mov
lock
ljmp
mov
and
jecxz
add
pushl
dec
or
rorb
les
inc
movsb
xor
mul
clc
mov
imul
call
mov
aad
nop
pop
cli
mov
xor
clc
aas
in
jl
lods
aam
sbb
sbbb
sbb
aam
repz
sub
or
outsl
neg
mov
mov
mov
gs
jmp
cli
push
push
jbe
cli
incl
dec
xchg
mov
pusha
push
lds
cwtl
push
mov
nop
into
xor
and
js
lcall
int
or
sbb
nop
mov
add
leave
cmpsb
pop
sbb
xchg
cmp
fcoml
dec
out
dec
sub
lcall
movsl
inc
sahf
sti
push
daa
add
jmp
mov
leave
mov
mov
inc
bound
mov
daa
dec
mov
sbb
sbb
fs
add
push
or
add
je
jmp
mov
aas
cld
xor
cmp
jb
aam
or
dec
push
jge
sbb
sbbb
gs
rep
or
jmp
sar
pusha
xchg
jmp
jmp
push
jg
and
roll
mov
sbb
out
and
add
mov
adc
xchg
push
xor
or
cli
mov
dec
inc
cli
ret
jle
loop
fprem
mov
outsl
cli
fadd
fsubp
jle
pop
cmpsb
sub
dec
push
jle
pop
cltd
fisubrs
cmp
jmp
out
mov
mov
in
leave
int
jge
mov
test
and
lods
repz
push
ljmp
cli
pop
dec
mov
pop
call
cmpb
aas
ud0
jo
xchg
jecxz
nop
repnz
dec
std
imul
or
popa
push
out
dec
pushl
cmp
out
imul
jns
pop
xchg
or
enter
sbb
inc
call
mov
xchg
cmpsl
loope
lret
mov
adc
mov
in
dec
push
xor
mov
ss
mov
lret
adc
in
mov
fdivrl
sahf
and
mov
jmp
push
outsb
je
adc
jbe
xor
add
xchg
jb
sbb
xchg
icebp
clc
push
daa
lods
loope
adc
push
jbe
push
add
mov
mov
es
insb
arpl
adc
push
ljmp
xchg
mov
fcomip
jmp
push
ljmp
out
push
out
or
xchg
lcall
call
or
push
xor
add
out
stc
xor
inc
xchg
xor
outsl
decl
pop
xchg
mov
xchg
pop
push
jl
bt
push
jp
fsubrp
clc
decl
pop
mov
scas
pop
mov
lcall
js
sbb
inc
push
cmp
inc
cmp
ja
jnp
dec
adc
cltd
clc
pop
sarl
pusha
test
cmp
mov
aad
pop
xchg
stos
jp
aaa
fwait
mov
mov
sbb
icebp
jmp
imul
in
movsl
orl
lods
pop
inc
addr16
test
std
dec
mov
cmp
xor
jecxz
jle
xor
dec
nop
xorl
jmp
fldenv
in
stos
mulb
in
data16
cli
xchg
loop
dec
lcall
and
jns
pop
add
dec
test
insl
loop
mov
arpl
fldl
lods
movsb
jl
ret
push
jecxz
cmp
inc
es
stos
or
call
push
sarb
test
adc
sub
out
add
cli
cmc
xor
incl
mov
les
loop
dec
cltd
dec
ret
push
bound
in
pop
imul
shl
and
shrl
or
pop
fnsave
xchg
pop
dec
mov
loopne
cld
add
dec
jnp
fnstsw
xchg
es
nop
ds
dec
and
push
imul
cwtl
pop
inc
enter
fildll
outsb
clc
dec
mov
cmp
xor
shr
outsb
push
mov
cmp
cmp
mov
cmp
xchg
in
push
fbstp
fmul
lods
addr16
ret
xor
sub
ljmp
adc
mov
pop
pop
push
mov
or
xchg
outsl
stc
aaa
cmp
ret
imul
mov
cld
aaa
cld
and
cltd
adc
jl
xchg
xor
sub
cmpsl
out
adcb
pushl
mov
and
push
enter
pusha
sarb
decl
or
call
popa
ja
xchg
jae
sbb
out
cli
leave
lret
and
push
or
aaa
mov
orps
lcall
pop
jo
add
jns
lcall
scas
push
or
inc
mov
ja
aas
fidivl
mov
out
xchg
mov
push
mov
push
push
jmp
xor
fwait
mov
dec
mov
mov
js
sbb
xchg
mov
cli
adc
lods
jno
pushf
stos
cmp
cmp
inc
inc
std
jns
repz
ja
test
cmp
jg
ljmp
jle
jp
mov
fs
test
xor
popf
in
nop
push
jl
es
cli
ljmp
in
pop
imul
clc
int
es
xor
pop
je
adc
cmp
lahf
add
scas
sub
add
dec
gs
mov
fsub
push
out
mov
add
lcall
mov
aad
mov
jnp
fdiv
jg
sti
loop
jecxz
cwtl
mov
sbb
in
std
aam
and
dec
fisttpll
fnstsw
nop
lcall
sbb
movsb
inc
mov
dec
mov
lret
or
rcr
push
fcomip
decl
push
sarl
clc
js
insl
add
lret
fcos
mov
loop
push
mov
add
sbb
bound
pushl
cltd
jge
mov
xchg
dec
loopne
push
pop
add
cmp
push
jns
lods
sub
inc
jmp
add
mov
enter
xor
jmp
jl
rorl
pop
test
adc
lcall
inc
lea
movsl
jmp
jecxz
fsts
xlat
and
pop
ljmp
clc
push
in
xchg
sbb
dec
mov
lock
push
call
scas
imull
xchg
ret
mov
cmpsb
pop
ja
shr
jecxz
rcrl
xchg
mov
andb
push
dec
aas
adcl
out
push
mov
subl
cwtl
sti
popf
xor
push
cmpl
es
inc
add
nop
dec
xlat
xor
roll
jbe
sahf
cmp
pop
push
mov
test
mov
sti
aam
fnstenv
inc
call
adc
incb
jb
xchg
int3
dec
cmp
jl
or
pop
or
dec
testl
pusha
sbb
ret
mov
jmp
mov
and
sbb
sub
jnp
dec
xchg
jge
cmp
lret
in
incl
mov
pop
sbb
jge
xchg
or
xchg
cmp
cwtl
shrl
stos
scas
sub
pop
lock
lcall
jne
lret
add
inc
xor
shr
fbld
sti
out
std
mov
call
and
dec
sbb
pop
pop
add
cmp
pop
ljmp
pusha
jb
jge
movsb
jecxz
xor
jae
aad
std
and
push
cs
call
push
or
cmp
int3
jno
ret
incb
xchg
and
jae
mov
inc
jl
incl
and
jae
cli
xor
push
inc
adc
inc
mov
jp
shl
shl
pop
mov
cmp
ljmp
bnd
in
inc
fisttps
cmp
fnsave
pop
dec
push
sub
cmp
push
cmp
pop
sub
stos
pop
mov
xlat
loop
cld
and
push
push
aaa
inc
shrb
rcl
inc
fldenv
and
mov
insb
jb
lret
stos
dec
cs
mov
xor
ds
cmc
xor
ljmp
subb
sti
enter
cld
adc
out
mov
in
repnz
add
fisubl
jge
jnp
in
pop
in
lods
push
sti
jnp
xor
add
lcall
shrl
jbe
jae
ficoms
ss
pop
outsl
mov
jg
decl
aam
jno
add
sub
ds
sbb
ja
sar
cmpsb
stc
int3
adc
and
jae
call
lcall
shr
ss
push
push
push
sbbb
fistl
jmp
mov
mov
ljmp
mov
rcrb
call
sarl
arpl
lret
fists
adcl
ds
nop
inc
sti
fbld
std
sub
cmp
or
rcrl
sbb
jp
dec
lcall
cmp
sub
repnz
xor
icebp
xor
mov
lcall
sub
inc
xor
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
and
mov
pop
loop
div
mov
jge
cmp
mov
adc
mov
cwtl
push
and
ds
in
ror
shlb
dec
jmp
inc
lcall
aas
jns
jne
fsubrs
insb
sbb
push
pop
sbb
out
mov
mov
push
cmc
in
dec
inc
push
vmaxps
or
stos
pop
rorb
testl
or
call
or
lock
adc
add
hlt
inc
lcall
cli
cmp
cmp
lahf
adc
es
dec
popa
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
ds
jmp
outsb
pop
cmp
inc
ds
cmp
ss
mov
fcoml
xor
test
js
jge
inc
sti
and
aas
add
int3
andb
rcrb
and
shl
pop
cs
cmp
fnstenv
pop
mov
pushl
lea
xchg
loope
repz
inc
pop
inc
lea
aam
sbb
sbb
add
dec
sbb
call
ds
ljmp
rclb
xor
mov
inc
mov
iret
sub
ud0
lcall
popa
push
fwait
mov
mov
xchg
push
popf
mov
sti
mov
js
inc
arpl
lea
cmp
sub
rorl
cmpsl
cmc
icebp
notl
mov
mov
add
sbb
lahf
ss
mov
mov
icebp
jmp
sti
shlb
sbb
and
negb
inc
clc
repnz
fsubrl
push
clc
sarl
pop
lods
sub
imul
and
xchg
jb
shlb
sar
sbb
jge
sbb
imulb
in
add
pop
jg
and
adc
pop
jns
test
pop
and
call
mov
insl
loopne
js
push
test
cmp
addr16
int
pop
test
rclb
dec
cmc
lahf
sub
jg
inc
add
rol
pop
pop
nop
clc
aam
fwait
shrb
les
andl
imul
imul
ljmp
mov
lods
and
inc
inc
sbb
out
es
jle
lds
pop
imul
incl
jle
or
or
cmp
testl
cmp
lret
out
cld
mov
cmpsb
mov
and
mov
repz
pushl
aam
ficompl
das
aaa
cmp
aas
pop
fnstcw
xor
clc
pop
jmp
jae
sub
in
jge
fimuls
lds
hlt
sbb
andb
sahf
gs
xchg
pop
sbb
call
out
sarb
sub
sub
xor
mov
xlat
rorb
ret
mov
inc
call
fucomp
jl
imul
push
inc
in
jb
sub
std
inc
enter
lods
test
imull
fisubrs
and
cmp
add
sbb
lds
push
ret
xchg
and
jno
xor
insb
inc
outsb
lods
out
sbb
lods
xchg
je
mov
xchg
mov
push
push
out
out
or
jnp
jp
lahf
pushf
lret
cli
out
add
and
pop
inc
outsl
clc
rcll
pop
mov
call
movsl
sub
adc
and
arpl
loopne
gs
mov
push
lcall
sub
xor
inc
cmpsl
out
subl
std
adc
shll
sub
lock
fdivr
in
xor
pop
lods
and
push
loopne
loopne
test
cld
in
add
mov
call
jno
cmp
push
dec
pop
cmpsl
hlt
jmp
rcrl
cmpl
sbb
data16
mov
add
fcomi
inc
aaa
movsb
clc
incl
mov
cli
mov
mov
xchg
clc
filds
and
sub
ss
dec
push
ds
sbb
ljmp
testl
sbb
dec
outsl
mov
fs
cmp
lds
call
xor
ret
inc
cmpsl
data16
cmp
call
fs
dec
clc
loope
xchg
xchg
enter
stc
push
mov
insl
adc
jmp
cmpsl
mov
or
jp
ljmp
push
mov
push
test
mov
daa
pushf
jle
pushw
jmp
ljmp
mov
mov
popa
lds
xor
inc
daa
add
pushl
mov
out
or
data16
test
sub
test
jle
mov
ljmp
outsb
jge
mov
out
xchg
mov
jbe
mov
or
cltd
jg
jmp
push
cmp
jns
push
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
bnd
xchg
inc
iret
mov
enter
sbb
lods
xchg
aad
dec
aaa
and
cld
aad
outsl
es
je
leave
mov
bound
out
mov
fildl
dec
pop
dec
repz
arpl
inc
pop
push
mov
mov
pushl
sbb
sahf
cmp
or
movsb
add
ljmp
mov
stos
inc
mov
jnp
push
in
lds
leave
cmp
jmp
jo
repz
ds
cmp
aam
mov
push
push
arpl
push
add
inc
adc
repnz
dec
add
shr
lds
mov
outsl
mov
mov
dec
loop
stos
ret
sti
adc
je
out
mov
pop
add
add
pop
icebp
lods
and
test
xlat
push
mov
dec
pop
pop
test
cmp
movsl
popf
sbb
adc
push
scas
adc
insl
pop
stos
sbb
mov
fists
sahf
push
pop
jae
mov
lcall
repnz
mov
cltd
movsb
lods
imul
mov
or
clc
or
lret
decl
jb
dec
or
insl
stos
push
xlat
push
lock
push
out
call
lret
cmp
dec
arpl
fadds
mov
push
mov
cmp
nop
push
decl
fwait
jne
test
jge
shrb
pop
dec
cmp
incl
lods
push
fwait
sbb
in
stc
inc
mov
add
mov
ja
sub
and
stc
add
sbbl
mov
call
cltd
mov
enter
movsl
js
int3
xor
lcall
sub
cmpl
lcall
mov
jp
jmp
adc
inc
rolb
push
dec
xchg
ljmp
cmp
xchg
sbb
aas
and
fwait
mov
jp
pop
fwait
jl
cmp
pushl
incl
fnstenv
mov
das
pop
hlt
mov
xor
rorl
push
test
push
ljmp
cltd
inc
outsl
add
mov
pop
pop
insb
in
cmpsb
inc
dec
pop
mov
popa
add
mov
daa
hlt
int3
dec
into
in
mov
mov
mov
leave
ret
jo
mov
push
pop
mov
cmc
dec
inc
mov
loopne
pushl
xchg
icebp
mov
xchg
mov
call
lock
inc
insb
mov
sub
pop
clc
movsl
mov
adc
inc
dec
mov
lcall
insl
aaa
filds
shrl
cmp
orl
mov
mov
push
cmp
xchg
sub
push
ret
popf
fsubl
push
pop
mov
in
xorl
jmp
xor
and
push
pushf
call
call
jbe
pop
ss
push
repnz
decl
and
icebp
jmp
push
jne
push
cs
in
gs
adc
outsl
scas
xchg
dec
push
fdivrs
cmp
push
push
pop
outsb
mov
movsl
mov
push
loop
xchg
mov
insl
or
jmp
xchg
shrl
and
push
in
rorb
jle
das
clc
mov
jp
movsb
dec
imulb
mov
jmp
stos
and
cmc
sarl
incl
scas
stos
xlat
add
jne
push
lods
push
cmpsb
mov
stos
push
mov
add
call
fst
pop
xchg
cmp
lahf
mov
jmp
aas
jno
or
iret
lock
mov
in
push
popa
into
ror
fistpl
aad
mov
aas
imull
ret
dec
nop
ds
insb
inc
idiv
call
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
fnstsw
inc
daa
xchg
test
pop
push
cmpsb
mov
xor
inc
cmpsb
jg
je
mov
clc
lahf
in
pop
inc
pause
jbe
add
ret
pop
dec
loope
mov
push
dec
rcrl
push
add
pushl
std
shlb
push
cs
js
daa
add
jg
mov
daa
scas
cli
lcall
rcl
ljmp
jno
pop
fnsave
notl
dec
dec
sub
decb
mov
pop
cmp
inc
imul
jmp
frstor
dec
aas
mov
imul
jnp
jno
push
cmc
adc
aaa
mov
lods
sub
mov
pop
mov
mov
pop
push
lock
decl
mov
xor
cmp
xchg
xor
push
xor
mov
dec
xlat
decl
into
ret
add
cmp
pop
xor
out
scas
pusha
mov
mov
mov
int3
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
lcall
adc
or
pop
lcall
ljmp
inc
mov
fcom
cmpl
hlt
addr16
pop
adc
add
sbb
cmpsl
cmp
daa
pushf
sub
inc
je
inc
fnstenv
inc
das
test
or
sub
mov
jle
push
cmpsl
dec
inc
in
jo
push
push
adc
jmp
out
ds
sahf
pop
cmp
ljmp
cmc
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
jp
hlt
push
adc
lret
push
push
loop
dec
dec
xor
shr
xchg
mov
pop
or
mov
test
fdivrl
aaa
mov
repz
dec
mov
adc
and
or
sti
lret
loopne,pn
sub
add
call
jo
xchg
cmp
repnz
push
mov
stos
push
sub
imul
jecxz
repz
mov
mov
pusha
dec
push
cmp
push
sbb
jecxz
push
pop
icebp
lock
dec
enter
dec
xchg
push
fildll
xchg
and
mov
sub
scas
std
fistpll
add
xchg
pop
xor
cwtl
and
icebp
pop
pop
movsb
mov
jp
orb
mov
lcall
or
pop
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
lcall
sub
call
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
call
inc
cld
test
add
pop
push
inc
push
lods
mov
add
arpl
mov
out
cli
call
cmp
roll
xchg
cmpb
mov
sub
hlt
std
jg
outsb
iret
cmp
pop
pop
popa
cmpsl
rolb
xor
jno
sbb
arpl
add
jp
sub
call
call
stos
popa
scas
out
mov
or
mov
jmp
inc
push
inc
jg
push
daa
ds
cli
mov
add
sub
mov
cmp
test
jg
or
movsb
cld
pusha
pop
mov
int
cmp
lret
jo
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
lcall
push
aas
add
and
jge
mov
shrl
out
push
loope
mov
mov
stos
incb
mov
mov
cmpsl
sbb
out
fdivrs
push
ret
mov
sub
push
mov
cmc
sbb
stos
jge
repnz
cmp
in
fiadds
sub
push
int
lcall
ds
ljmp
repz
out
xor
fildll
push
push
or
popf
or
xchg
jb
mov
push
mov
push
out
xor
fnstenv
cld
decl
xor
xor
mov
inc
pop
in
sub
xor
imul
fsubrl
xlat
test
push
jge
pop
cmp
enter
mov
xchg
lcall
clc
pop
push
push
out
int
mov
dec
aam
inc
sbb
or
repz
lret
test
idivl
in
insb
inc
ljmp
adc
pop
push
fistpl
adc
lock
inc
cld
inc
push
pop
int3
xchg
shr
mov
mov
popa
test
insl
and
out
cld
jmp
dec
sbb
add
sbb
or
mov
add
aas
ds
mov
pushl
mov
js
cmp
test
mov
cmpsb
dec
andl
add
call
xchg
cli
xchg
or
mov
movl
js
stos
fwait
dec
into
mov
loope
fisttps
call
jno
out
xchg
int3
or
sbb
lcall
jg
lahf
inc
dec
mov
pop
cmp
inc
mul
loope
popf
outsb
js
aad
in
ljmp
ja
dec
subb
dec
xor
adc
shll
push
dec
dec
mov
jmp
adc
mov
or
jno
jno
pusha
push
add
js
inc
cmp
mov
mov
lds
mov
inc
push
mov
xchg
test
push
pop
pop
std
decl
arpl
outsl
jno,pt
cmp
xor
les
pop
repnz
pop
popf
fists
out
gs
repz
pop
clc
mov
jl
addb
mov
test
decl
cmp
ret
mov
dec
arpl
cld
xor
jecxz
sbb
call
cld
add
cmpsb
arpl
iret
sbb
test
in
scas
ds
inc
ljmp
lcall
mov
out
int3
mov
push
xor
cmpsb
je
dec
push
cwtl
sbb
push
lcall
incl
pop
repz
xor
mov
out
dec
stc
ficoms
and
lcall
loop
mov
add
insb
mov
mov
rclb
int
mov
sbb
push
out
xchg
pop
xor
dec
mov
ljmp
clc
jl
push
inc
jb
cs
add
and
outsb
add
movsl
adc
and
jno
mov
push
sub
lret
mov
lcall
es
xor
mov
fs
push
jmp
sub
call
mov
dec
repnz
push
xor
test
daa
cmp
jl
xchg
pop
scas
in
cmp
ljmp
sbb
jae
gs
dec
test
mov
cmp
incl
cmc
push
xchg
mov
mov
iret
push
pop
shll
xchg
jecxz
sti
jnp
mov
movsl
push
xchg
inc
inc
cwtl
incl
setle
adc
scas
dec
loope
and
inc
xor
scas
xchg
jmp
ss
and
scas
gs
jmp
mov
js
dec
add
jae
into
dec
cmp
mov
dec
outsl
pop
cmp
dec
ficompl
xchg
ds
adc
or
xorb
adc
pop
push
gs
mov
test
call
out
mov
xchg
dec
shl
jmp
repnz
jo
xchg
je
inc
or
jg
pop
scas
sub
or
add
cmpsb
into
xor
cld
push
cmp
mov
cmp
aad
add
out
clc
xchg
xchg
push
cmp
dec
cmp
stos
push
test
xchg
ds
or
jmp
xchg
sbb
jle
xchg
push
xor
xor
mov
fs
mov
lock
mov
mov
adc
push
fs
jmp
mov
adc
xchg
clts
inc
mov
jmp
sbb
nop
lods
lahf
sarb
fcomip
jnp
pop
iret
cmp
mov
shl
cli
dec
imul
hlt
xchg
aad
sbb
bound
call
jl
xor
lret
popf
icebp
pop
push
ud2
ds
sub
fwait
sub
dec
sarl
clc
dec
loope
ljmp
outsb
into
shl
test
rcr
push
xchg
cmp
in
mov
clc
pop
in
sub
or
push
jno
test
cmp
mov
inc
push
push
daa
loope
stos
fcomp
cmp
lods
je
decl
and
sub
adc
aaa
push
loop
sbb
sub
fdivl
jmp
xchg
pop
mov
xchg
push
jge
jbe
sbb
and
cmp
les
sahf
decl
ja
loopnew
pop
pop
out
sub
jb
push
sub
int
adcl
and
aam
scas
cli
daa
sub
jnp
adc
inc
xchg
cmp
mov
mov
int
out
mov
or
inc
je
divl
repnz
push
xlat
das
negb
imul
inc
cltd
mov
loope
or
call
nop
inc
add
mov
lret
push
pop
adc
fwait
sbb
push
cmp
lds
jmp
push
jns
adc
cmc
fdecstp
repnz
push
push
aad
jbe
mov
out
insl
scas
lea
cli
incl
ja
jo
push
loop
es
sub
adc
push
push
pusha
fimull
lock
mov
outsl
cmp
xor
movsb
or
insb
loopne
mov
clc
in
push
fidivrl
in
mov
cwtl
mov
mov
pop
popa
sub
fwait
push
lret
in
imul
fldenv
pop
test
sub
jmp
insb
pusha
adc
mov
outsb
data16
or
in
fldcw
sub
nop
aad
stc
outsl
cli
cld
mov
mov
mov
sbb
mov
sbb
or
das
cli
cld
or
cmp
jo
fdivs
into
mov
add
sarl
mov
cmp
ljmp
mov
or
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
xchg
pop
fbstp
mov
addb
notb
dec
ret
adc
cld
dec
mov
popf
and
imul
inc
in
add
addb
das
sahf
in
mull
pushf
cmp
push
pop
cmpsb
fcomip
dec
shr
adc
enter
jbe
iret
sbb
daa
dec
sbb
mov
aad
xchg
jecxz
jle
aaa
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
decl
iret
jl
jnp
push
xor
pop
mov
icebp
add
mov
popf
decl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
add
dec
push
out
inc
cmp
call
push
add
arpl
leave
rcll
xor
fs
push
loop
xchg
ljmp
pushl
dec
bnd
jo
outsb
push
jnp
dec
testb
call
mov
stos
mov
call
rcll
pop
adc
xlat
cmp
loop
add
fwait
sahf
jg
jo
clc
pop
test
adc
loop
xor
mov
das
in
push
daa
jl
call
fcoml
cmpl
mov
lock
outsb
cmp
scas
cmp
movsb
cmp
jmp
sbb
stos
ret
or
ret
out
lret
sub
fcompl
xchg
cmp
mov
ss
push
ffree
jg
dec
cmp
out
fstpl
or
add
cmp
sub
ljmp
decl
movsl
jecxz
fnstcw
das
mov
call
and
xlat
fbld
pushf
add
dec
and
leave
clc
addps
dec
lcall
test
iret
notb
int
lcall
and
jmp
jge
ja
and
or
or
adc
aaa
call
das
or
filds
cmp
data16
jle
mov
lods
xlat
es
sbb
stc
adc
xor
jmp
jg
adc
sahf
sub
stos
push
cli
lret
movsb
dec
mov
ljmp
xor
lahf
inc
sbb
mov
adc
pop
pop
ljmp
dec
pop
mov
test
sub
inc
dec
lcall
jns
mov
jl
fisttpll
mov
pop
or
push
pop
mov
lret
push
mov
sbb
push
std
push
adc
js
xchg
push
push
xor
mov
push
call
cmp
mov
push
mov
mov
lds
mov
xlat
mov
hlt
xchg
and
pop
cli
decl
inc
test
jnp
jg
out
or
pop
arpl
push
or
int3
ljmp
xchg
pop
clc
inc
push
lea
les
and
pop
jp
dec
mov
adc
jg
dec
push
sbb
ds
push
cmpsb
mov
push
add
pushf
mov
mov
sbb
std
scas
cwtl
mov
adcl
out
mov
add
add
pushaw
mov
xchg
cmpsl
jmp
cmp
inc
aas
mov
jle
jge
fs
xor
sub
out
pop
dec
sbb
jb
jg
mov
mov
mov
adc
pop
mov
lahf
push
iret
jbe
jbe
jbe
mov
and
orb
mov
cmpsb
ljmp
jge
dec
sub
aam
shll
bound
mov
push
add
into
incl
push
sahf
dec
arpl
sbb
fnstcw
repnz
cmpsl
stc
dec
mov
es
incl
lahf
jle
or
pop
sub
aad
and
push
xlat
inc
fimull
dec
jbe
cmp
lcall
subb
movsb
mov
xor
aam
adc
into
mov
pop
jg
mov
outsl
gs
cmp
pop
stos
xor
jae
pop
pop
movsl
mov
int
in
mov
std
mov
gs
pusha
sbb
mov
adc
mov
call
xchg
mov
push
sbb
or
shl
add
negb
mov
pop
iret
dec
pushl
inc
shr
sub
cli
push
popa
sub
adc
mov
imul
ds
mov
lods
enter
xor
shlb
sbb
insl
cmp
sub
call
push
xor
or
push
jge
xchg
in
add
dec
xlat
or
dec
adc
rcr
dec
adc
cmp
dec
pop
sub
ja
hlt
lcall
icebp
int3
mov
jecxz
inc
nop
sub
xchg
sub
out
addb
ja
clc
aam
stos
rcr
lock
or
mov
jg
and
js
adc
mov
addr16
jl
cmc
add
cmpb
call
mov
int3
and
pop
mov
psubusb
fistps
jns
insb
ljmp
popa
cmp
sbb
fcomip
add
int
inc
adc
sarb
jecxz
call
inc
lahf
in
sub
loopne
frstor
push
dec
movsb
lea
out
add
jg
mov
in
dec
mov
imul
jle
cmp
push
push
jmp
icebp
and
mov
mov
jmp
rcll
sub
lds
adc
adc
jno
jl
sets
cli
iret
jecxz
inc
ss
pushf
and
push
sub
xchg
dec
rol
pop
in
adc
in
and
outsb
int
stos
incl
ffreep
in
xchg
sti
pusha
lret
cmp
xchg
in
fsubrp
cmpsl
decl
ret
pop
fiaddl
cli
rcll
cmp
pop
adc
call
outsl
popa
inc
cmpsb
push
dec
fmul
popf
arpl
cmp
or
jno
add
xchg
inc
or
inc
lcall
mov
mov
jle,pn
pop
fwait
inc
leave
sub
inc
testb
fsubrs
nop
test
adc
icebp
cwtl
adc
jge
jbe
ljmp
aaa
mov
scas
test
jae
repnz
dec
and
mov
mov
or
fistpl
sbb
fs
nop
push
arpl
inc
sub
stos
sub
dec
mov
adc
std
decl
mov
in
sub
and
leave
sub
adcl
es
dec
cli
sar
mov
dec
data16
mov
xchg
cmpb
lahf
push
add
repnz
daa
arpl
mov
mov
add
xchg
lret
and
xchg
nop
aaa
or
and
jg
push
sub
nop
and
cld
in
das
insb
addl
jg
popa
mov
mov
xchg
adc
aad
jmp
and
inc
loopne
addl
jae
push
lods
loopne
dec
xchg
cmp
or
sbb
cmpsb
call
sbb
sti
dec
or
push
out
mov
add
push
test
sub
shlb
std
arpl
mov
repnz
nop
sbb
subl
xor
or
outsl
mov
xchg
jl
add
data16
push
imul
daa
cmpsb
adc
mov
ljmp
push
adc
mov
push
enter
jno
and
and
outsb
inc
sbb
inc
push
shlb
incl
mov
jg
cmc
xor
jne
hlt
sahf
push
loop
dec
xchg
ljmp
pop
lods
lock
daa
adcb
insl
ja
int3
mov
decl
or
xchg
pop
sub
fadd
movsl
and
int3
mov
mov
mov
xor
out
scas
js
and
pop
jnp
stc
mov
cmp
sub
sbb
jmp
mov
xchg
jmp
pop
movsl
decl
daa
or
adc
sub
mov
es
in
lret
mov
xchg
add
mov
xor
mov
call
incl
pop
xchg
mov
fs
inc
mov
mov
idivb
xor
loopne
ljmp
mov
call
push
jae
push
ss
xchg
cmp
pop
add
sub
incb
cs
and
out
cli
jae
mov
stos
sub
or
push
jns
loop
ds
fimuls
incl
push
orl
or
movsl
or
mov
adc
pop
cmpsb
pusha
daa
jbe
mov
mov
popf
jbe
push
push
fnstenv
je
ficompl
jbe
or
pop
lcall
dec
add
int3
or
add
ds
aas
idivb
jae
insb
jne
outsl
clc
ljmp
leave
cltd
sub
mov
andl
sbb
notl
jae
out
sar
dec
fidivl
out
pop
or
test
mov
pushl
push
push
mov
ret
mov
or
push
push
fistpll
and
cmp
xchg
sbb
mov
outsb
lock
lcall
mov
add
imul
data16
dec
test
add
decl
inc
sbb
sbb
mov
inc
testl
jo
mov
ret
dec
push
dec
sub
lods
lahf
icebp
cmpsl
xchg
lods
push
mov
in
pop
std
ljmp
jb
pop
cmp
out
inc
sub
popa
loope
pop
xor
decl
mov
sti
mov
js
aad
loopne
addr16
sahf
adc
mov
in
leave
lds
lods
mov
and
loop
pushl
push
adc
push
iret
push
add
adc
ficompl
sbb
in
pop
lcall
cmp
in
adcl
xor
push
loop
mov
pushl
scas
or
mov
mov
or
xor
xlat
lea
sub
pushl
fcompl
hlt
cltd
sub
scas
push
sub
popf
and
jmp
test
mov
add
inc
repz
xchg
xor
push
dec
adc
rcll
jg
les
pop
aad
push
icebp
repz
sti
lds
mov
or
mov
or
inc
shl
xor
bound
gs
shll
pop
mov
pop
cmp
call
enter
es
fidivrs
aam
lds
xor
adc
mov
lcall
xlat
inc
sbb
lods
dec
daa
xchg
cmp
or
pop
cmp
xor
jg
or
xor
lea
aaa
shll
cltd
cmp
arpl
loope
incl
cmp
dec
inc
aaa
cld
pop
cli
sub
nop
sbb
xchg
push
fstps
ljmp
pushf
jecxz
rcrb
scas
into
sub
icebp
or
orl
mov
movsb
and
xchg
sar
incl
lods
mov
sbb
xchg
das
jnp
popa
sub
cmp
sbb
mov
dec
incl
jecxz
fucomip
test
xchg
adc
movsb
imul
jl
jecxz
sbb
jp
jno
xchg
cwtl
mov
push
xchg
push
inc
out
pop
adc
xor
loopne
jmp
dec
mov
sub
mov
aaa
jl
or
int3
jae
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
sarl
adc
jmp
test
dec
fneni(8087
dec
push
out
cltd
cmp
adc
mov
mov
cwtl
xchg
sbb
sbb
fwait
imul
cmc
subb
stos
les
hlt
cmp
fdivrs
mov
test
xchg
fidivrl
mov
test
or
sub
dec
ds
mov
icebp
fldt
xor
shlb
mov
pop
sbb
repnz
fsubrl
cmp
ljmp
in
jne
jge
inc
call
lods
int3
adc
sub
jecxz
cli
push
inc
inc
xor
cld
or
loopne
test
pop
lock
fistps
xchg
and
mov
js
lods
jp
mov
cmp
jecxz
sar
ljmp
clc
imul
scas
fsubrs
pop
je
sub
jge
arpl
jp
push
stos
jbe
lcall
arpl
mov
xchg
jg
add
pop
or
jmp
push
lods
jg
fcmovne
call
sbb
sub
xorl
fcomip
lcall
mov
test
gs
mov
jecxz
js
mov
xor
dec
std
ljmp
mov
jl
movsl
lods
dec
pop
popl
pushf
push
inc
lock
icebp
pushf
sbb
jmp
aaa
add
pop
push
push
lret
mov
ljmp
dec
or
mov
std
xchg
adc
mov
sub
fildl
add
incl
daa
loop
pushl
clc
mov
stos
dec
imulb
int
ja
rcll
xchg
test
mov
scas
mov
push
in
leave
dec
sub
repnz
mov
es
call
sbb
out
ficoml
xor
xor
inc
push
jno
pop
xor
push
incl
pop
cld
push
insb
lret
and
outsl
dec
mov
xor
enter
loop
add
and
xor
cmp
ljmp
pop
call
insb
pushf
daa
arpl
xor
je
ret
int
push
mov
rorl
enter
sar
call
call
xor
push
lods
rcr
dec
daa
mov
cwtl
inc
adc
and
into
fwait
sub
or
lcall
pop
xchg
iret
push
ljmp
aaa
scas
aam
add
pop
mov
into
mov
fstl
rcrb
add
push
sahf
jg
incl
cmp
test
or
lcall
data16
mov
call
notl
mov
pusha
sbb
push
inc
push
sub
sub
xlat
idiv
decl
mov
cmp
add
data16
in
ret
movsl
or
insb
pop
mov
push
rcrl
fbstp
cmp
mov
and
mov
xorl
pusha
dec
jae
loopne
sub
inc
mov
jnp
ds
xor
in
jns
xchg
xchg
lods
sub
lcall
pop
cmpsl
popa
mov
inc
mov
xor
sbb
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
pushf
dec
pop
add
out
xchg
add
les
adc
pushl
jmp
push
outsl
shrl
outsb
inc
les
fsubs
cmp
loopne
push
or
les
mov
pop
pop
mov
lds
mov
fs
les
push
test
push
incl
mov
ret
mov
inc
jl
sbb
jb
cmp
add
or
inc
sub
call
in
insb
jbe
jbe
outsb
clc
das
pop
push
adc
sbb
cli
mov
inc
cmp
and
shrb
int
and
lods
imul
ja
ljmp
push
adc
lahf
rorb
gs
and
sbb
cmp
out
push
enter
fs
movsl
test
mov
jmp
cs
inc
rcrl
popl
mov
push
xchg
vunpcklpd
xchg
dec
sbb
fdivl
test
pop
xor
mov
jb
dec
dec
xchg
and
push
cwtl
push
cmpsl
or
cld
xchg
pushl
repnz
jae
daa
int
mov
cltd
rorl
mov
sub
pop
dec
test
out
ljmp
fisttps
shll
pop
enter
inc
jge
addr16
jb
mov
inc
cmp
movsl
repz
push
sub
sub
inc
or
dec
cli
mov
or
inc
mov
cmp
sbb
pushl
sbb
fwait
mov
dec
leave
addr16
jp
fisubl
lahf
int3
mov
mov
aam
mov
test
mov
imul
nop
dec
push
pushf
pop
ljmp
out
cs
add
test
clc
inc
jl
jmp
mov
cmc
loopne
andl
dec
push
rolb
mov
mov
pusha
cmp
decl
sub
or
mov
sbb
mov
and
fisttpl
xchg
mov
call
and
dec
xor
loopne
mov
outsb
lahf
out
xchg
out
cwtl
sub
mov
loop
mov
xchg
xchg
mov
out
pop
pop
add
sbb
mov
lods
or
or
ds
xor
dec
xchg
ljmp
rcll
fdivrs
lea
je
and
pop
push
cmp
pop
inc
xchg
push
fiaddl
mov
ljmp
pusha
dec
mov
loopne
mov
and
enter
mov
pop
cld
ret
loopne
es
stc
or
pop
enter
dec
mov
cltd
or
std
push
lcall
jmp
push
xor
add
addr16
mov
or
xlat
incl
out
ret
cmp
fadd
outsl
cmp
mov
aam
scas
hlt
or
jg
pop
cld
cmp
jecxz
idivl
and
call
in
mull
dec
jno
sbb
pusha
or
inc
outsb
and
ret
and
mov
loop
xor
fistps
sub
mov
adc
ss
xor
sti
in
adcl
jb
and
decl
lods
ja
dec
push
aas
inc
cwtl
pop
and
mov
push
sub
imul
push
popa
pop
das
mov
outsl
and
and
xlat
insb
jns
add
mov
incl
mov
pop
xor
fnsave
and
xlat
adc
jecxz
xchg
dec
mov
jle
pushl
test
mov
xchg
pop
cwtl
out
cld
add
adc
cs
fimuls
call
xchg
clc
adc
add
jae
push
sub
jo
inc
dec
xchg
push
mov
adc
imul
xlat
jno
lret
enter
lret
aad
test
or
xor
jle
jge
outsl
or
out
pop
lcall
push
jne
in
push
decl
pop
sub
into
or
je
push
inc
filds
faddl
bound
pushl
fiadds
push
adc
dec
fs
lea
jbe
int
cwtl
jge
push
fs
cld
jmp
out
or
dec
rorl
pop
push
test
mov
and
test
sar
jns
test
test
push
mov
int3
sti
loope
cmp
jg
jo
mov
fidivrl
aad
push
mulb
sti
mov
mov
pushl
clc
xor
ficompl
jbe
pop
jecxz
adc
xor
add
jge
pop
int
and
pop
and
dec
icebp
push
lods
xchg
notb
or
push
pop
popf
push
cwtl
ja
inc
loopne
jecxz
loope
aaa
dec
outsb
or
gs
cld
cld
rcl
jb
mov
jl
sbb
jmp
mov
mov
xor
imul
aas
push
add
jecxz
imul
mov
repnz
mov
outsb
stos
in
jg,pt
lcall
fwait
sti
and
mov
push
loope
dec
add
inc
imul
scas
scas
jae
pushf
nop
fwait
test
insl
repnz
mov
xor
jp
mov
inc
in
push
adc
jmp
repnz
sub
enter
loope
lods
addr16
ljmp
jmp
mov
xchg
fdivrl
xchg
loope
dec
sbbb
inc
sub
psubw
fsubrs
aas
lods
jae
addr16
mov
rcr
jg
jmp
inc
cli
and
out
adc
subl
xchg
pop
and
inc
mov
call
cld
xorb
jne
cmp
push
in
fldenv
icebp
mov
scas
std
add
add
sbb
push
les
cmp
mov
lods
cwtl
push
sbb
loope
mov
adc
or
push
xlat
jnp
sahf
add
test
adc
jne
aaa
fcom
rcr
incl
mov
clc
outsb
push
xor
enter
xor
jno
sahf
mov
pop
fstpt
decl
test
sti
and
out
bound
inc
test
sar
ljmp
pop
or
lret
pop
js
pop
xor
dec
push
push
jge,pn
cmc
lcall
repz
ljmp
jne
movsl
test
out
cmp
inc
push
pop
arpl
mov
add
xchg
sbb
cmp
sarb
inc
pop
cmpsb
sub
xor
mov
cli
cmp
jno
push
push
lods
xchg
xchg
js
movsl
adc
cmp
aad
mov
adc
push
outsl
jno
pop
or
xor
xchg
adc
push
pop
hlt
jne
leave
or
jo
cmp
sbb
or
xor
add
call
or
mov
cmc
pop
jns
test
or
inc
xchg
incl
rclb
pop
dec
xlat
sbb
pop
in
das
adc
jmp
mov
imul
lahf
outsl
test
lea
pop
sbbb
ds
aas
and
insl
sub
cmpsl
lret
ret
xchg
xlat
xlat
mov
pop
cmp
iret
xor
mov
repz
shl
sahf
dec
sbb
iret
push
jg
iret
push
xchg
xchg
xchg
jo
call
xchg
fmulp
daa
es
xchg
and
lcall
shlb
int
mov
fistps
cmp
xchg
dec
out
jae
mov
daa
adc
lahf
jg
mov
in
cmpsb
dec
adc
out
mov
inc
push
push
aam
push
jo
mov
lret
test
lcall
out
jge
dec
ret
add
call
pop
jp
pop
sub
jns
mov
iret
or
or
dec
stos
sti
test
or
ljmp
clc
cmpsl
add
arpl
clc
popa
lahf
in
ds
imul
filds
insb
jge
jg
or
cld
and
lcall
stos
in
jp
sub
lahf
leave
push
daa
pop
insb
call
jl
mov
and
pop
aam
loopne
jae
jno
shrb
push
sbb
incl
mov
pop
add
icebp
pop
xor
cmpsl
sub
pop
clc
rcr
movsl
js
add
call
cld
mov
in
push
icebp
addr16
je
adc
js
lret
lret
xor
xchg
je
cmp
ljmp
mov
movl
pop
dec
std
shlb
fiadds
cmp
sti
ljmp
jle
add
mov
out
test
loop
fstpt
fmulp
lret
shll
in
jecxz
mov
out
repnz
adc
bound
mov
sbb
negl
jns
push
adc
and
fidivrs
popf
arpl
ljmp
shl
and
sub
loopne
xchg
cmp
std
jg
movsb
mov
stos
imul
or
fsubrs
ljmp
dec
and
mov
jo
inc
pop
sahf
test
mov
sbb
push
shlb
inc
push
ljmp
sub
inc
std
jbe
mov
out
mov
data16
cs
dec
idivb
jp
cwtl
daa
outsb
xchg
jae
and
lret
popf
mov
pop
mov
dec
xorl
jle
sbb
xchg
mov
mov
incl
aad
push
mov
mov
xchg
jo
imul
jecxz
xor
cmp
incl
jmp
pop
sbb
mov
cmp
stc
pop
sub
sbbb
xchg
lock
aam
sub
jecxz
dec
xor
out
cwtl
jb
scas
sbb
sarb
idiv
and
sar
jo
rcll
mov
dec
cmp
arpl
ss
add
sub
inc
mov
add
call
into
jo
pop
mov
adc
sbb
std
and
mov
adc
sub
mov
cli
mov
scas
imul
mov
and
in
dec
inc
sbb
adc
lahf
sbb
fst
fidivrl
in
xlat
inc
lods
cmpb
jecxz
push
or
or
adc
jg
les
and
jae
pusha
cli
clc
out
lret
les
test
sub
outsl
jle
hlt
inc
sub
xchg
loopne
pop
leave
mov
insl
xchg
testb
jp
sub
jae
mov
jbe
xchg
ljmp
loope
sbb
aam
jmp
push
jbe
adc
and
fsubs
int3
jle
xchg
mov
out
ds
bound
loopne
ljmp
cmp
mov
add
cmp
push
adc
jbe
xchg
inc
inc
sbbb
leave
out
add
cmp
outsl
xchg
shr
in
sbb
mov
test
mov
enter
ja
mov
adc
jmp
jecxz
adcb
dec
rcrb
dec
inc
out
movsl
mov
inc
aad
mov
jbe
andb
stos
into
cltd
movsl
jecxz
jae
cltd
jp
mov
mov
pop
iret
xor
push
cmc
jmp
icebp
cmp
xchg
lds
pushf
shlb
js
pop
ret
hlt
add
or
lock
movsb
pop
dec
negb
adc
icebp
out
xor
ffreep
or
mov
enter
mov
flds
outsl
stc
cmc
jnp
mov
dec
cmpsb
push
pushl
repz
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
mov
call
mov
push
xchg
fwait
lds
movsl
test
mov
pop
push
fbld
in
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
lock
outsl
jl
flds
test
enter
fcoms
out
push
jbe
jnp
test
lcall
mov
xor
das
es
pop
scas
std
jmp
cltd
push
cmc
sbb
mov
je
add
cmp
int3
mov
incl
adc
mov
jbe
sbb
sarb
outsl
in
cmp
ja
push
mov
decl
inc
pop
adc
movlps
fnstsw
cmpsl
pusha
sbb
jo
sahf
cmpsl
and
jo
mov
pushl
mov
jno
mov
mov
mov
popa
pop
pop
push
in
cli
and
jne
cld
shll
lcall
sbb
xchg
ljmp
add
rcr
clc
or
inc
lcall
imul
jno
mov
dec
pop
lock
out
lcall
rcrl
xor
adc
insb
push
add
push
mov
fsubl
inc
rcrb
mov
xor
add
add
lds
ljmp
sbb
sbb
cmp
int3
push
jnp
pop
lods
ljmp
sbb
daa
inc
mov
mov
jmp
aaa
popf
test
mov
lahf
pop
xchg
icebp
loop
orl
jb
lods
push
pop
lahf
or
jmp
ljmp
jle
push
outsl
adc
into
sub
and
mul
data16
decl
pushl
aad
dec
mov
mov
adc
or
adc
push
jns
inc
call
loope
popf
or
fmuls
xchg
mov
mov
daa
push
dec
mov
sar
jmp
sub
dec
mov
mov
pop
xor
inc
ljmp
or
xchg
sbb
cli
sbb
dec
dec
shlb
aad
mov
repz
fsubl
jne
pop
sub
push
ret
es
fildll
push
ljmp
push
xchg
call
aaa
lock
cmp
mov
lods
leave
pop
push
push
jne
dec
divl
adc
sbb
jae
inc
xor
push
leave
scas
stos
pushf
sbb
test
xlat
or
lcall
je
test
xchg
jmp
xchg
stc
shlb
lret
inc
ret
pop
rcr
popa
cmpsl
pop
pop
mov
or
mov
das
repz
dec
insl
mov
stc
xor
sub
jmp
inc
add
ljmp
test
or
nop
pushf
test
lret
sar
fisttps
xchg
mov
and
pop
mov
rcll
loop
push
jg
jae
or
enter
popf
in
rol
inc
pop
push
pop
iret
ficoms
lret
or
jg
adc
out
jg
popf
mov
push
or
aad
xchg
out
mov
mov
out
lahf
add
xchg
inc
lock
push
inc
call
pop
push
and
clc
mov
lds
adc
mov
dec
out
inc
lods
loop
pop
xchg
pop
dec
jg
add
jg
dec
cli
ds
add
ljmp
adc
dec
mov
pushl
fldpi
insb
enter
mov
jo
cmp
mov
lods
jnp
dec
push
dec
cli
jmp
and
out
push
ret
cltd
insb
dec
mov
push
xor
xchg
pop
mov
test
ret
decl
jp
push
mov
icebp
test
inc
xchg
popf
push
inc
cmp
popa
mov
sbb
movsl
imul
push
mov
push
add
cli
and
mov
adc
push
ljmp
xor
rcll
test
test
cli
mov
std
inc
jnp
mov
ud0
incl
into
mov
xchg
cli
or
lret
jl
mov
shrb
xchg
movsb
jmp
pop
and
pop
pop
movsb
mov
xor
lods
in
jns
xorl
xlat
or
push
lcall
cld
mov
mov
dec
aad
cmp
sahf
cmpsb
and
leave
call
lcall
dec
sub
dec
and
adc
sbb
and
jmp
jb
punpckhbw
scas
ja
inc
jecxz
sub
gs
xchg
roll
xchg
mov
lret
cmp
enter
sbb
scas
fisttps
cmpsb
shll
adc
dec
int
cli
jmp
xchg
rcl
jge
dec
jecxz
inc
aas
pop
mov
push
and
int
jle
ficomps
jmp
push
out
and
push
test
inc
ds
mov
and
push
int3
ljmp
test
roll
in
pop
iret
xchg
ret
mov
gs
push
aam
add
or
pop
in
loope
mov
int3
mov
jg
add
push
xchg
xlat
mov
adc
incl
lcall
push
mov
int3
and
push
mov
sub
sub
cmpsl
pop
xchg
incl
sbb
enter
test
movsl
stc
push
cltd
mov
xchg
push
dec
scas
push
mov
xorl
pop
pop
rcrl
sbb
incl
inc
xchg
or
mov
xchg
test
ret
sar
or
decl
movq
subb
call
outsb
adc
dec
clc
in
pop
pop
lcall
je
shr
dec
push
sub
adc
add
decl
mov
std
movsl
xor
xchg
scas
sub
divl
int3
mov
adc
test
push
in
ljmp
adcb
cmp
mov
fwait
imul
test
call
and
mov
push
push
cmc
fsubs
jne
mov
aam
jmp
scas
sub
push
add
shll
cmpsl
dec
push
outsb
test
mov
in
inc
dec
into
mov
fwait
jns
xor
mov
or
and
push
lock
xchg
sub
pop
incl
emms
out
gs
movsl
test
lahf
sbbl
sub
int
ds
or
jg
sub
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
and
cmp
fisttpll
mov
ljmp
scas
xchg
rcl
leave
das
and
push
push
scas
mov
lods
shrb
fwait
imull
xchg
mov
dec
jne
inc
cwtl
jmp
outsb
mov
mov
incl
push
dec
lods
adc
mov
repnz
outsb
enter
iret
loop
dec
cwtl
incl
out
icebp
popa
xchg
ret
fldt
add
mov
xchg
cmpsl
inc
in
test
out
jle
jmp
ret
loope
std
add
in
ljmp
push
out
and
dec
ret
lcall
sbb
popa
mov
xchg
ja
bnd
loop
or
in
mov
andl
adc
mov
or
lds
pushl
jnp
cmp
mov
jne
ljmp
cli
arpl
mov
adc
lods
clc
sti
leave
test
loopne
test
or
mov
call
xchg
cmp
mov
push
push
push
lret
and
jbe
insl
add
clc
add
mov
lock
insl
or
xchg
outsl
outsb
jp
pop
movsl
pop
dec
mov
dec
stc
push
xchg
sbb
imul
mov
loope
ds
xchg
lock
ss
movsl
cs
mov
and
das
mov
ljmp
cmpsb
sbb
dec
lcall
dec
leave
inc
test
aaa
jle
push
push
out
add
jmp
sub
fcomip
outsl
cltd
mov
inc
das
fcomip
pop
and
cld
ror
stc
lods
jbe
stos
dec
out
fiadds
xor
cmp
cmpsb
push
decl
add
pop
out
dec
pop
lcall
cld
call
cld
xchg
loope
pushl
enter
fadds
xchg
scas
jno
jne
jecxz
cld
jecxz
roll
loop
sbb
xchg
std
pinsrw
lock
jg
sub
push
or
sub
or
push
add
lods
shll
pop
aas
lcall
push
jmp
xchg
jg
mov
pop
pop
mov
sarb
dec
sub
xchg
mov
xchg
loop
into
popf
lock
cld
pushl
sahf
inc
mov
popf
mov
stc
push
jle
ljmp
mov
sbb
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
xchg
incl
mov
stos
sbb
test
adc
cs
mov
and
fdivr
jmp
adc
cmp
out
mov
jp
loope
out
or
mov
adc
incl
or
ja
push
subb
sti
cmp
in
pop
pushf
inc
sbb
mov
sub
dec
mov
pusha
shll
jecxz
cltd
popa
inc
pushl
addr16
lret
sbb
mov
ret
subl
xor
mov
enter
cmp
xor
jae
sbb
pop
subl
add
pusha
subl
incl
popa
fs
cmp
movsb
mov
push
pop
in
cmp
aaa
mov
cld
mov
lcall
das
fwait
jbe
sbb
sub
sub
add
sarb
or
pop
icebp
jmp
mov
or
into
jle
inc
test
cmpl
lock
dec
cmp
fsubs
ja
mov
push
cmpsb
mov
fld
adc
repz
lea
sbb
imul
lods
addb
scas
mov
arpl
ljmp
shlb
data16
enter
pop
mov
sbb
mov
xchg
movsb
lea
jmp
mov
push
stos
jnp
mov
push
xor
scas
push
incl
dec
mov
clc
aas
dec
daa
les
in
clc
pop
pop
shl
lods
xchg
jne
sbb
push
mov
idivb
adc
ljmp
adc
popf
fs
sbb
push
add
inc
dec
pop
lcall
ss
ds
aas
lods
sub
fldcw
pop
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
and
aam
push
aas
mov
push
cmp
or
push
jp
add
mov
mov
dec
js
in
pop
or
cmp
sbb
sub
into
jbe
shrb
jmp
ss
xor
mov
jg
out
aas
push
xchg
mov
pushl
and
nop
dec
dec
scas
sub
mov
shrb
push
pop
pop
mov
mov
mov
mov
mov
pop
xchg
inc
cmpsb
add
pushl
shrl
cmc
dec
out
clc
pop
mov
lds
inc
mov
nop
scas
push
js
ss
sbb
push
pushl
sbbb
fstpt
jmp
jp
mov
inc
fildll
ljmp
leave
out
cmp
dec
cli
nop
test
sbb
fs
push
test
movsl
mov
jg
mov
out
pop
test
push
cmp
mov
mov
ljmp
lods
and
xor
js
jbe
dec
in
adc
loop
pushl
jne
mov
xchg
mov
xchg
or
jp
xchg
inc
rcl
movl
pusha
jl
ljmp
sub
xchg
xor
ficoml
pop
jge
xor
lcall
adc
or
sub
mov
and
lcall
pop
mov
push
jae
inc
daa
inc
add
leave
ret
es
in
sub
mov
xor
xor
sbb
fidivl
loop
leave
testl
mov
cmpsl
clc
mov
mov
sbb
xchg
cmp
bound
pop
in
cmp
lcall
xchg
dec
lods
jmp
xchg
adc
in
xor
ret
loope
cmc
jg
push
mov
inc
dec
je
je
mov
test
jne
mov
sub
clc
decl
pop
lret
cmp
repnz
add
sub
dec
pushf
mov
vmovapd
or
push
shll
cwtl
outsb
and
xor
jmp
jg
sbb
int
pop
repnz
loop
rolb
pushf
ja
call
lahf
and
aad
sub
mov
gs
lret
inc
clc
xor
idiv
call
add
inc
rorb
push
xchg
inc
icebp
xchg
mov
int3
aam
sub
es
lcall
adc
push
xchg
xchg
dec
push
roll
lods
jb
jecxz
das
adc
nop
fwait
je
imul
decl
xchg
pusha
imul
xchg
xlat
out
fcom
popl
je
jg
xchg
ss
imul
lcall
mov
aam
ds
xchg
and
ds
imul
gs
and
xor
mov
inc
outsb
mov
xchg
std
adcb
call
fs
push
jbe
fld
or
lods
jle
and
std
mov
jl
inc
subb
call
lcall
ja
call
aam
mov
push
add
dec
loope
and
ror
mov
test
call
mov
sub
cmpsl
call
push
loopne
fcmovnbe
sarb
xchg
outsb
out
movsb
mov
fisttps
cld
pushf
xor
inc
shr
push
sub
sarb
pop
divb
xor
es
adc
cltd
and
mov
sbb
cmp
add
sbb
incb
add
fcomip
aam
cmpl
jae
popa
push
xchg
mov
movsb
pop
xor
decl
adc
lods
xchg
pop
pop
jmp
ljmp
lahf
add
dec
dec
mov
lahf
movl
divl
mov
or
loopne
or
and
adc
mov
xor
mov
leave
and
xchg
xchg
mov
cld
pop
sub
adc
gs
dec
fildl
std
out
xchg
cmp
xlat
loop
jmp
rclb
jns
pop
xor
fcomip
incl
lahf
jle
push
mov
ja
adc
dec
adc
addr16
int
jmp
lret
sbb
jnp
imul
fcomps
fcom
push
xchg
adc
popf
into
mov
out
clc
ljmp
mov
xchg
divb
add
dec
xchg
lret
mov
sbb
cwtl
inc
cwtl
cld
aaa
and
lcall
pop
adc
scas
adc
aad
dec
data16
xchg
mov
leave
push
push
adc
mov
push
rolb
mov
mov
repnz
jmp
or
pop
xchg
cmpsl
je
fneni(8087
sub
outsb
lret
repz
cmc
pop
jle
mov
mov
scas
and
mov
push
cmp
lds
cs
lock
scas
imull
inc
sti
xor
push
mov
rcrl
lods
jns
cld
popf
aad
xchg
mov
cmpsl
add
ljmp
sub
cmp
xor
pop
imul
xlat
xchg
fnstenv
sbb
stos
repz
jns
pop
adc
decl
repnz
fdivl
bound
or
rcr
pop
out
rolb
aas
test
or
int3
loop
pop
adc
gs
incl
into
push
mov
mov
rcll
jne
aam
fildll
mov
outsb
mov
test
gs
cmp
pop
or
sub
mov
push
nop
test
dec
dec
push
icebp
pushl
lret
jo
push
sub
icebp
push
test
incl
sub
xor
xor
push
inc
out
out
dec
push
jge
fcoms
dec
sbb
xor
daa
in
ljmp
outsl
jne
jns
bound
fwait
and
mov
aam
out
xor
andl
ljmp
add
int3
ds
xchg
sbb
push
mov
arpl
lea
mov
js
repz
jnp
adc
sahf
shll
jb
outsl
dec
into
lret
push
inc
repz
js
lods
push
adc
cli
sub
adc
dec
lea
xor
pushl
push
bound
lahf
sbbl
inc
sbb
jp
push
negl
xchg
inc
dec
mov
cmc
mov
mov
pop
outsl
or
scas
jmp
pushf
in
call
mov
xor
jl
jmp
push
push
mov
in
pop
xchg
or
outsb
push
jge
sbb
pusha
insl
mov
ret
push
out
cltd
dec
push
sbb
dec
and
cmc
inc
jbe
mov
xchg
ret
adc
roll
inc
xor
in
mov
mov
fmul
sub
mov
enter
mov
sti
jg
cmp
mov
test
aaa
push
cli
js
push
iret
aaa
fstl
adc
call
lods
dec
cmp
fsts
pushl
mov
das
nop
lea
popf
mov
jg
js
adcl
int
fsubrl
xor
jle
and
pushl
pop
aas
push
rolb
sbb
insl
jae
push
sbb
or
inc
inc
loopne
decl
xor
leave
pop
dec
mov
adc
aam
ljmp
cmpsb
shlb
sbb
adc
or
call
adc
push
test
movsl
test
mov
mov
shlb
fdivp
aam
test
inc
mov
popf
notb
je
cmp
jbe
lods
cld
or
outsl
lahf
ljmp
rcll
jmp
flds
fists
sbb
push
int
incl
mov
lahf
sbb
sbb
xchg
lret
into
les
mov
test
call
popa
dec
fisubl
pop
divl
and
into
dec
scas
sub
adc
incl
xchg
int
nop
sub
lods
jbe
mov
jne
outsl
mov
es
bound
aad
dec
or
pop
pop
std
incl
test
ljmp
pop
pop
xchg
xor
mov
pushl
cltd
leave
inc
jmp
jne
aam
pop
push
stos
push
int
adc
leave
and
call
pushf
xchg
or
pop
pop
mov
add
mov
push
xlat
pop
lods
add
aad
xchg
ljmp
mov
test
ficomps
insl
add
cli
cld
ss
jge
mov
pop
hlt
pop
out
fcmovnu
arpl
lret
mov
dec
xchg
outsl
xchg
incl
xchg
sahf
hlt
adc
sub
pusha
aaa
xor
lcall
lcall
testb
cmpsl
call
and
shlb
xchg
mov
rorb
mov
call
je
out
push
loopne
fisubrl
iret
ljmp
popf
xchg
sbb
hlt
fwait
pushl
push
loope
enter
leave
scas
pop
jmp
pop
xor
add
mov
insb
stos
mov
movsb
insb
jge
cltd
mov
bound
cltd
xchg
sub
xchg
adc
sbb
mov
adc
ficompl
pop
lret
mov
push
sahf
ljmp
js
dec
loop
jp
idivl
dec
popf
pop
ret
in
out
je
rorb
jmp
icebp
mov
stos
aam
pop
ljmp
clc
shll
mov
mov
mov
jmp
cmp
std
cmp
repz
fcoms
dec
call
inc
insl
sti
adcb
ljmp
sahf
dec
or
pop
out
orl
movsb
sbb
jb
inc
fsubr
decl
in
cmp
aas
push
xchg
pop
add
mov
xchg
aam
in
mov
das
mov
addb
and
pop
dec
ja
xorb
testb
sbb
pop
es
repnz
rclb
aad
dec
xchg
jg
bound
fucomi
lods
outsb
xchg
movsb
incl
ja,pt
dec
pusha
cmp
dec
insb
stc
mov
aaa
das
jl
jae
call
cmp
adc
and
or
mov
adc
ljmp
repz
xor
dec
push
inc
add
mov
decb
fdivr
aaa
mov
in
bound
hlt
dec
push
pop
out
imul
js
xchg
arpl
orl
mov
pusha
pop
push
pop
es
aaa
std
ljmp
test
jg
pushf
mov
insl
loope
mov
decl
inc
clc
mov
cmp
data16
xchg
jp
push
ja
pop
push
popf
fcos
ljmp
dec
frstor
shll
rclb
sbb
pop
and
int
repnz
mov
ljmp
cmp
shlb
cmp
orb
test
mov
lret
and
decl
xorl
or
xor
cmp
ficoml
push
aad
sbb
test
lcall
xorb
call
call
fwait
jle
xchg
incb
sub
andb
js
bound
lcall
cmp
clc
loopne
lock
sub
and
ja
test
test
fwait
inc
adc
pop
xorl
mov
jp
mov
out
incl
iret
sub
xchg
sub
in
ljmp
sbb
and
cmp
inc
push
call
popf
adc
cmpb
dec
mov
std
adc
xlat
hlt
addl
mov
sub
sbb
mov
loop
sub
out
push
push
pushf
pmaxsw
mov
fistps
mov
sbb
xor
and
mov
jge
sub
push
and
cmp
inc
jmp
fnclex
dec
pop
sbb
push
or
js
inc
xor
pop
jb
push
hlt
popf
decl
mov
sbb
pop
xchg
jb
sbb
sub
dec
call
push
mov
sub
mov
outsl
cmc
scas
inc
loope
mov
ret
cmp
incl
enter
mov
out
xor
inc
leave
add
lcall
sbbl
rcl
fdivr
in
xchg
pop
adc
js
std
test
xchg
fdivl
call
xchg
push
sub
movsl
in
lock
aad
jle
fiaddl
addr16
push
movl
fcmovbe
shl
dec
fs
jo
leave
add
dec
ret
imulb
fcomip
pushl
mov
push
mov
imul
sub
push
mov
inc
lcall
fcomi
lods
xchg
mov
fiadds
sub
mov
push
jmp
int
push
rcrb
adcb
xor
ljmp
call
push
fxtract
jo
cwtl
mov
insl
mov
pushf
mov
outsb
or
cmpsl
push
jbe
lcall
sub
xlat
cmp
cmp
cs
fwait
daa
adc
out
clc
cld
incl
xor
lea
pop
and
subl
clc
iret
cli
les
jbe
push
mov
lret
mov
filds
xlat
jo
cltd
jg
imul
jne
shrb
and
rcll
or
pushl
push
int3
aam
enter
and
lods
iret
push
sbb
sub
pop
cmpb
mov
in
jae
xchg
das
push
loope
mov
shrl
vpsubusw
inc
ljmp
call
mov
orl
dec
cwtl
dec
ret
iret
sti
aad
je
fs
cmc
xor
sti
mov
pop
sub
fwait
imul
repnz
fs
dec
ljmp
pop
push
jbe
inc
lods
mov
sbb
imul
popa
jp
cmp
add
lcall
ds
jmp
leave
stc
lods
aam
or
dec
scas
mov
arpl
jg
mov
cmp
icebp
jae
jl
adc
ljmp
push
cltd
sbb
and
dec
push
jb
jmp
fmul
and
das
imull
xchg
je
ror
cmpsl
dec
sbb
ljmp
rcl
pop
addr16
jl
jb
or
pop
and
inc
mov
sbb
call
scas
sbb
push
push
cmp
adc
incl
ds
jns
push
cli
leave
and
mov
in
ret
cmpsb
adc
xchg
ljmp
data16
mov
mov
add
adc
shrl
das
add
cmc
popf
xlat
movzwl
mov
mov
and
or
xor
inc
lret
shll
aas
mov
out
cli
lcall
xchg
ljmp
cmp
test
leave
ret
lcall
stos
jo
sub
pop
sub
cwtl
or
cmc
lcall
data16
hlt
pop
mov
mov
stos
and
xor
mov
adc
inc
cmp
not
push
movsl
test
jno
js
lock
mov
aas
shl
stos
inc
pop
add
ljmp
pushf
into
pop
dec
sub
dec
mov
in
insb
xchg
lret
sub
out
imul
inc
pop
add
jmp
sti
shlb
insb
jmp
and
cmpsb
push
test
outsl
inc
xchg
or
test
imul
jg
loop
inc
ds
pusha
dec
mov
mov
hlt
out
js
jmp
xchg
add
pop
ss
adc
mov
fnsetpm(287
sub
mov
mov
xchg
mov
mov
push
or
sub
std
sub
or
push
pop
jp
scas
les
shll
xchg
xor
mov
out
mov
inc
inc
inc
xchg
ljmp
or
call
or
add
test
lret
or
mov
sbb
call
cmp
scas
fcompl
jecxz
pop
gs
les
jne
inc
incl
repnz
fistl
adc
enter
jo
std
lods
push
mov
aam
jnp
rorb
jmp
jp
test
jo
popf
xor
in
mov
cld
pop
mov
popa
jecxz
addr16
lcall
out
fldt
fidivrs
je
repnz
jmp
out
xchg
or
call
xchg
test
lds
cs
out
jne
loop
loope
aaa
subl
clc
incl
cld
jo
in
fdivrl
jno
ds
cmp
or
call
jo
dec
xchg
sti
cmp
icebp
xchg
loopne
mov
or
test
and
xchg
call
loopne
sbb
pusha
mov
dec
pusha
adc
and
cmpsb
rcr
insl
inc
fnstsw
adc
call
cmp
setp
push
cmpsb
pop
xchg
pop
xor
sub
jmp
adcb
push
sub
scas
sbb
test
add
xchg
mov
into
js
xlat
ljmp
test
loop
push
adc
shrl
dec
or
sub
fisubl
cmp
lea
push
dec
fists
or
sbbb
lds
cmp
ljmp
loop
pop
dec
hlt
fcoms
shlb
mov
pop
lods
arpl
sbb
mov
inc
jge
xlat
lea
mov
dec
mov
inc
movsl
xor
rolb
ror
and
pushl
ss
cmp
dec
xor
sahf
xlat
and
test
and
mov
jl
ret
xor
rorl
sub
hlt
call
addb
incl
fcompl
adc
lods
push
fimuls
decl
sarl
dec
setno
mov
pushl
push
out
mov
push
add
pushf
lds
inc
pop
lods
inc
push
scas
adc
jge
pop
fnstenv
push
add
scas
lcall
notb
sahf
aaa
stos
cmc
sub
dec
push
push
add
push
and
push
mov
cmp
call
call
cmc
or
xor
jmp
or
jb
sar
dec
shlb
jecxz
cmpb
adc
ret
movsl
and
xorl
add
scas
lods
xor
stos
jmp
pusha
adc
xchg
ds
fld
decl
and
xor
dec
adc
or
jl
jg
mov
call
je
lret
add
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
decl
test
inc
pop
out
inc
mov
push
sarb
arpl
add
xchg
lock
decl
loopne
fstpl
xchg
sarb
dec
movsb
je
xor
es
ljmp
pushf
adc
ret
call
leave
sti
testb
pop
jl
imul
push
jae
loop
mov
lock
add
push
adcb
xor
int
pop
xchg
nop
mov
in
or
mulb
mov
shrl
sbb
dec
jp
pop
sbb
mov
cmpsl
dec
xchg
push
jns
mov
sub
dec
nop
outsl
xchg
pop
sub
add
push
or
push
cltd
sub
jle
jmp
shlb
adcb
pop
es
loope
ret
push
dec
xor
fcmovu
and
sbb
std
mov
lods
sub
lods
add
mov
mov
insl
and
xchg
test
cmpb
jmp
xor
mov
mov
mov
jnp
subl
outsb
filds
add
incl
loope
jmp
sbbb
das
aad
cmp
lret
mov
loopne
roll
push
andl
fnstcw
adc
aad
jp
mov
push
dec
and
mov
xor
incl
iret
sbb
sub
adc
imul
ds
shlb
mov
ljmp
lea
ja
cmp
push
lcall
cmp
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
dec
cmp
lcall
sub
mov
jge
ljmp
fdivrs
and
push
incl
in
cwtl
or
dec
sub
decb
sub
gs
adc
andb
daa
fcompl
mov
test
ljmp
or
cld
out
add
bnd
sub
cmp
or
mov
inc
jmp
mov
loopne
ret
fistpll
add
push
push
lret
xor
hlt
dec
jmp
into
push
dec
outsl
or
cmp
cld
pop
jnp
add
xchg
orb
mov
das
dec
add
jg
data16
sbb
sub
pop
fcoms
pop
fidivs
incl
adc
mov
loope
or
lods
jnp
xor
xor
jns
test
sbb
cli
pop
xorb
ljmp
lea
jns
enter
fdivr
outsl
cli
decl
xor
dec
frstor
fwait
cwtl
or
push
sbb
jmp
sub
push
or
add
mov
call
mov
jno
mov
mov
lcall
lods
mov
sub
sti
adc
insb
loopne
popa
enter
adc
call
xchg
mov
scas
fildl
mov
cwtl
imul
or
xor
xchg
xchg
add
and
aas
aas
or
sbb
out
stos
or
sar
out
mov
dec
insb
pop
out
inc
stc
inc
popf
dec
test
mov
pop
into
lods
lcall
aam
fisubrs
xchg
lcall
ljmp
dec
mov
cltd
fwait
mov
push
pusha
aam
not
sbb
and
stos
mov
mov
or
mov
cmpsl
or
es
dec
hlt
cmp
loope
cltd
addr16
jg
pop
inc
icebp
notl
inc
insl
gs
jnp
jo
out
ror
lods
fisubl
jl
and
lcall
mov
mov
inc
push
xor
push
imul
dec
or
jl
in
incl
sub
stc
jge
adc
mov
jo
cs
or
mov
js
jmp
sbb
stos
lcall
in
cld
sbb
movsl
add
adc
inc
test
sub
iret
test
inc
add
pop
or
cld
jle
int3
and
xchg
mov
mov
cmp
daa
and
fnstcw
neg
dec
or
mov
rcl
lret
push
add
scas
mov
or
divb
lcall
mov
push
push
jns
cmc
arpl
push
inc
mov
loope
fnsave
dec
pop
fisttpll
push
nop
or
jbe
xor
test
div
repnz
cli
xor
push
fists
call
mov
pop
push
cs
adc
mov
fs
sub
incl
lahf
and
je
cmp
xchg
mov
mov
std
pusha
out
inc
push
repnz
rcrb
loope
xchg
xor
mov
lahf
jb
mov
out
sarl
sbb
cmp
mov
je
or
cwtl
addr16
clc
push
mov
lret
jmp
push
lock
adc
sbb
aas
xchg
and
fwait
dec
nop
call
mov
cltd
and
lret
popa
xor
push
sbb
mov
jb
xor
popa
adc
pop
pushl
ljmp
lcall
insl
cmc
and
mov
sub
xchg
outsb
lcall
daa
pop
cs
jne
stc
mov
and
ljmp
cmp
adc
cmp
fisubrs
xor
mov
call
lret
and
mov
cmp
test
xchg
cs
fsubs
cmpsl
jge
ret
imull
mov
dec
sbb
ret
mul
dec
movsb
ljmp
mov
lea
push
pop
in
push
xchg
fcoml
imul
jmp
bound
xchg
adc
jp
decl
mov
jno
lcall
dec
stos
pop
and
dec
pop
sahf
pop
push
je
mov
xchg
push
gs
xor
push
jg
mov
loop
je
fildl
call
or
mov
nop
idivb
test
lods
mov
movsl
movsl
jmp
lcall
cmp
test
inc
insl
mov
mov
xor
ret
decl
into
and
ret
pop
test
cli
xor
notb
addr16
jmp
js
nop
scas
ljmp
imul
sub
xor
and
jmp
cmp
pushl
pop
mov
pusha
jo
ja
das
adc
call
repz
cltd
arpl
jae
mov
push
call
in
mov
repz
test
xchg
comiss
loop
hlt
adc
lcall
cld
in
mov
movsl
les
mov
shlb
mov
sub
inc
xor
sahf
lret
dec
mov
mov
mov
add
mov
mov
sub
enter
jmp
sub
and
jae
or
adc
rol
in
sbb
test
xchg
iret
xchg
cmc
mov
and
xor
or
mov
ljmp
fildll
mov
inc
aas
in
cwtl
sub
or
and
push
pop
repz
cld
arpl
imul
out
add
test
pop
roll
or
jmp
lcall
mov
fnstsw
and
rolb
mov
jae
ljmp
pop
mov
or
cmp
jg
rcrb
std
push
inc
in
jb
out
loopne
xor
push
add
mov
push
stc
in
imul
mov
loope
hlt
in
mov
out
jne
shr
cmpl
xchg
or
int
mov
testb
mov
xchg
pop
fisubrs
cmp
or
add
pop
ljmp
mov
inc
stos
adc
pop
lcall
lcall
cltd
gs
sub
popf
and
lods
xlat
aad
dec
pop
mov
imul
jo
jmp
cld
pop
add
xlat
sbb
subl
and
ljmp
jg
mov
insb
and
xchg
sub
div
dec
mov
jle
sbb
jb
xorl
sub
aaa
sub
inc
mov
mov
decl
js
loopne
lcall
aam
pushf
loope
dec
dec
enter
pop
in
inc
push
xchg
outsb
nop
pushl
cld
ss
push
jne
jo
test
test
add
int3
dec
out
and
dec
getsec
push
cld
pop
test
xchg
gs
jmp
or
fwait
popf
push
sub
jmp
loop
sub
xor
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
sub
fcomip
stos
roll
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
call
into
leave
in
xor
inc
mov
and
lret
rolb
and
jg
push
and
adc
push
xchg
test
cmpsb
jmp
nop
xlat
enter
or
call
pop
xchg
mov
xchg
xchg
mov
dec
fstpt
loopne
xchg
pop
mov
pop
ljmp
cmc
adc
mov
int3
cmp
loop
mov
cld
mov
ds
sub
popa
push
dec
pop
test
jae
in
mov
popa
add
dec
cbtw
imul
ret
mov
jmp
cmpsb
orl
lcall
sbb
xchg
bound
movsb
addr16
xchg
sar
push
jae
cmpsb
dec
mov
cmp
xchg
call
sti
outsb
movsb
mov
cmp
popf
jge
adc
insl
xchg
jo
sarl
jge
mov
adc
inc
ret
sub
xor
mov
xchg
adc
lcall
lds
call
scas
sbb
jle
jp
outsl
jl
pop
inc
or
test
divb
pushl
scas
xchg
ret
mov
dec
sub
adc
or
xor
push
mov
inc
mov
incl
andl
fisubrs
sar
cltd
pop
and
aad
dec
pop
sbb
adc
pop
bound
push
insb
push
decl
jbe
icebp
sub
inc
repz
pop
mov
out
mov
mov
gs
push
lret
mov
pushl
sub
fdivrs
jbe
mov
fisubrs
test
loopne
js
dec
mov
out
insl
push
incl
dec
sub
jmp
xor
cwtl
jg
push
int
loope
es
sar
jo
pop
stos
call
sbb
cmpsb
fsubs
mov
aam
movsb
jne
notb
jmp
cmp
mov
mov
fdivr
mov
cli
fwait
push
faddl
pusha
xchg
mov
push
fistpll
jbe
movsb
jmp
dec
mov
out
cltd
pop
xchg
inc
push
adc
orl
fdiv
mov
sbb
pop
cmp
mov
ja
aam
jno
out
adc
in
ja
sti
fcomip
aaa
jecxz
cs
lock
repz
pushf
cmp
inc
pushl
mov
push
adc
in
mov
jg
adc
add
cmp
ret
nop
int3
out
push
mov
fadds
mov
add
push
cmp
adc
aas
ljmp
in
cmpsb
icebp
fstps
mov
pop
sbb
test
dec
add
sub
mov
push
push
scas
aad
adc
call
sti
push
popa
std
imul
cmpsl
pop
lock
inc
sub
call
sbb
cmp
fnstsw
popf
pop
xorl
subl
shlb
jmp
sub
push
rol
nop
cmp
mov
dec
fwait
imul
mov
jne
and
add
cmc
jb
dec
jge
push
pushf
cli
rcl
cmp
mov
aam
jb
es
lods
lods
add
out
add
mov
ljmp
fldt
test
add
test
test
mov
bswap
xor
cwtl
test
cmp
scas
insb
jns
stos
dec
add
jns
loope
sub
mov
mov
sub
jle
and
or
ficompl
cmp
flds
sub
mov
mov
cmpsl
or
mov
enter
imul
or
sbb
fcmovnb
fwait
sub
mov
pop
or
mov
and
mov
idivb
enter
fnstenv
stos
call
xchg
mov
jmp
inc
xorl
mov
inc
rorl
shrl
jo
iret
data16
idiv
lcall
lcall
enter
push
pop
cmc
stc
mov
mov
pop
call
mov
mov
bound
shll
out
rolb
sbb
xchg
pushl
dec
pop
mov
cmp
cwtl
sbb
nop
sub
and
mov
mov
sub
cmp
loope
js
push
xor
popf
xchg
xor
or
jmp
dec
dec
outsl
push
fbld
mov
pop
adc
add
popa
or
aaa
loopne
cmp
movb
ljmp
sub
push
mov
lods
xchg
arpl
cmp
pop
mov
mov
ljmp
popf
xchg
subb
sub
fdiv
int
incl
xchg
sub
xor
pop
cmp
push
cld
push
jno
ret
int3
push
test
pop
dec
inc
lcall
scas
call
jge
adc
incl
clc
xor
out
popa
cld
push
pop
sbb
dec
cs
cld
lods
hlt
sub
push
loopne
cmp
and
pop
jb
inc
push
out
xchg
gs
adc
rorb
cltd
jge
ljmp
rclb
sub
mov
je
mov
jmp
cli
pushl
aas
aad
int
or
xlat
lea
icebp
lcall
cwtl
adc
decl
ret
cmp
inc
sbb
xor
cmp
jle
insb
or
and
pop
outsl
and
dec
call
ret
lock
incl
faddp
xchg
add
clc
xchg
lods
add
out
mov
pop
sbb
and
push
mov
mov
mov
inc
mov
jns
hlt
loop
pop
aad
cmc
pop
sub
mov
fwait
sbb
jne
pop
ret
ljmp
test
andb
scas
xchg
mov
call
out
clc
test
mov
fisubs
sbb
cmc
scas
mov
out
mov
add
pminub
mov
fildll
out
cmpsb
lock
movsb
pop
mov
in
int
or
sbb
mov
in
cmp
icebp
jns
and
mov
or
xor
inc
lret
lea
jmp
in
or
movsb
xchg
std
jne
jp
adc
or
into
xchg
aas
mov
movsb
xor
pop
sbb
jecxz
jmp
enter
jecxz
or
cltd
mov
xlat
inc
or
sbb
sbb
incl
push
push
and
imul
test
jl
divl
push
cmp
add
push
std
call
push
in
into
cwtl
pop
mov
pop
icebp
sarb
mov
std
jg
clc
sti
xor
inc
xor
pusha
cmp
jl
out
pop
inc
int3
cmp
ret
pop
cmc
xor
vmread
lea
fildll
std
ljmp
stc
popa
and
add
dec
in
push
loopne
lret
aam
sub
sbb
jg
in
insl
sbb
or
bound
pop
xchg
jmp
lahf
dec
sbb
mov
sbb
inc
or
pop
ds
push
xchg
loopne
cltd
inc
pop
fidivs
mov
mov
jne
jecxz
pop
adc
push
add
pop
loop
pop
hlt
jg
arpl
mov
and
and
aaa
in
sbb
insl
cmpsb
and
call
enter
xchg
pop
pop
inc
inc
xor
mov
push
insb
cli
sbb
imul
decl
mov
adc
sub
sbb
jmp
hlt
cs
sbb
cmp
cmc
loope
lcall
icebp
leave
pop
sahf
stc
or
movsl
or
xchg
and
jmp
dec
gs
incl
scas
cmp
out
cli
adc
loopne
movsb
pusha
outsl
and
xor
incl
push
push
repz
stc
aaa
mov
sbb
pop
mov
clc
enter
pop
hlt
data16
or
scas
cmp
jns
movsl
out
cmp
call
fistl
jmp
add
out
mov
scas
aad
add
decl
or
mov
rorl
adc
ror
sbb
test
inc
call
adc
jns
mov
or
sub
imul
mov
fld
pop
aam
cmp
jecxz
outsb
jl
jp
xchg
mov
in
inc
sar
pushl
scas
push
mov
mov
stos
push
jmp
xor
push
jnp
mov
pop
and
jg
push
lret
push
dec
push
push
jp
sub
pushl
push
mov
add
jl
push
loopne
out
add
lret
es
lcall
loope
mov
lods
adc
jns
push
xlat
loop
call
push
xchg
sub
bound
cmpsb
icebp
aas
std
pop
out
push
adcb
mov
push
sahf
stos
fs
xchg
lahf
jnp
lret
inc
cmp
adc
fs
sbb
mov
popl
jo
cwtl
out
loop
addr16
sub
popf
std
popa
fcomip
pushl
and
sti
insb
or
jbe
xchg
lods
inc
sbb
sbb
and
pop
mov
dec
sbb
mov
jle
adc
pop
jno
pop
dec
loopne
inc
mov
adc
sub
int3
dec
adcl
pop
decl
xchg
jnp
or
out
test
je
cwtl
mov
jmp
outsl
decl
data16
inc
sbb
cmp
aas
loopne
xchg
aad
ret
adc
push
js
stc
mov
jg
je
test
mov
lahf
scas
inc
mov
pop
sub
mov
mov
adc
or
test
test
jg
lcall
int
daa
in
xchg
mov
outsl
dec
inc
cli
ljmp
cmp
pop
pop
fdivl
push
mov
adc
fldt
cli
add
in
ret
daa
dec
jmp
adc
movsl
fsubl
mov
popa
mov
jle
cmp
push
mov
std
cmp
fcmovb
sti
dec
call
loope
sti
mov
leave
ret
mov
push
or
jg
lods
jae
mov
inc
push
jo
or
pop
lea
xor
ljmp
mov
loopne,pn
into
xor
in
ffree
inc
in
notb
rol
dec
ret
lods
insb
popa
sub
pop
add
push
pop
pop
or
inc
fidivl
jle
lret
dec
or
cwtl
mov
mov
mov
push
out
jmp
jecxz
loop
add
push
pop
adc
repnz
call
cmp
mov
inc
adc
inc
jns
clc
cwtl
and
mov
mov
pop
out
xchg
arpl
fidivrs
shlb
jae
push
mov
lcall
in
and
push
iret
stos
cs
sbb
mov
loopne
dec
clc
test
fsubrl
aaa
cmpsl
popa
xchg
movsb
sub
xor
and
cmp
cmp
bound
push
mov
or
sub
mov
mov
cld
xlat
stos
and
push
mov
inc
subl
sbb
pop
push
vxorps
fimuls
xor
loopne
int3
sarb
shlb
ss
inc
fwait
cmp
mov
jmp
rcrb
push
pop
ljmp
push
cmp
fwait
out
dec
and
xchg
sub
push
mov
nop
ds
add
cmp
xor
and
jbe
lcall
xchg
or
gs
popf
fisttpll
or
jbe
adc
inc
adc
cmp
ficompl
mov
jno
xor
stos
inc
jne
dec
sbb
sti
mov
cld
dec
mov
fimull
cmc
inc
inc
cltd
hlt
pop
mov
xor
ljmp
cmpsl
push
fiadds
dec
mov
lods
movsb
movsb
sbb
incl
add
push
lods
aaa
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
cmp
lcall
sub
aaa
xacquire
gs
dec
testb
xchg
mov
mov
outsb
push
mov
decl
ss
scas
loope
adc
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
inc
adc
ljmp
out
fs
mov
leave
mov
mov
test
mov
dec
mov
lods
stos
pop
and
repz
dec
mov
and
call
gs
cmp
in
cmp
sti
mov
pop
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
sub
incl
iret
xchg
jp
cmp
in
pop
scas
call
stc
movsb
jo
dec
out
gs
mov
push
fwait
loopne
imul
js
pusha
and
add
mov
ret
mov
jmp
lods
arpl
sbbl
adc
xor
sbb
js
xchg
or
push
lock
fstpl
js
mov
sti
push
aad
sub
loope
ljmp
fs
in
addr16
sub
push
pushl
mov
imul
enter
adc
jb
push
enter
aas
out
clc
call
clc
movsl
cltd
inc
lcall
aam
pop
push
lahf
or
ljmp
jae
clc
sbb
jg
mov
mov
jecxz
loopne
dec
sub
notl
ficoms
push
inc
mov
das
jo
mov
decl
nop
shl
adc
mov
fstpt
xor
orb
dec
inc
mov
incl
jmp
sub
mov
outsl
sub
out
xor
inc
fiaddl
lea
dec
fcompl
clc
pushl
shll
xchg
xchg
aam
daa
sti
ljmp
fnsave
or
outsl
jmp
jmp
xchg
or
xlat
add
loope
mov
popw
mov
xchg
and
scas
sub
add
jmp
or
sbb
push
inc
cmc
xchg
xchg
xor
adc
nop
push
imul
mov
out
and
cld
sub
fcomps
jmp
push
inc
cmp
test
mov
clc
cmp
sbb
loope
cmp
aas
or
insl
mov
cmp
jno
push
ja
imul
add
xor
out
push
sub
lea
call
inc
aam
mov
dec
pop
dec
add
mov
mov
adc
xchg
dec
scas
jne
outsl
aam
jecxz
lcall
insl
mov
popf
negb
lcall
fistps
mov
sti
cltd
mov
aas
rorl
lahf
out
or
push
dec
ljmp
mov
test
fildl
and
in
dec
je
jl
sub
cli
mov
mov
jmp
insl
and
push
aad
bound
pop
sbbl
adc
movsl
sub
bound
xchg
mov
scas
stos
ljmp
ljmp
mov
enter
ds
mov
daa
fists
aaa
call
sub
jg
pop
ss
scas
pop
es
cmp
aas
mov
lret
clc
out
test
jmp
adc
ja
insl
pop
mov
sbb
ret
aad
push
xor
xchg
sub
insl
mov
jp
push
inc
cmp
mov
int3
mov
idivl
adc
pop
out
or
je
stos
push
push
lcall
loopne
lahf
enter
mov
mov
dec
lea
mov
popa
pop
xchg
je
adc
insl
stos
push
ljmp
rol
mov
cs
dec
jno
js
test
xor
je
sbb
es
fadds
mov
call
adc
insb
rcl
mov
lcall
adc
sub
adc
inc
pop
es
sub
ret
sbb
push
pop
pushf
xchg
lcall
decl
insl
shrl
mov
push
scas
jns
cmp
test
addr16
in
jmp
sub
aam
inc
ret
dec
adc
ficompl
xor
adc
pushl
mov
pop
adc
lcall
mov
mov
clc
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
out
out
cli
incl
mov
insb
push
sbb
sub
cmp
push
mov
jnp
push
mov
mov
or
jbe
xchg
push
idiv
fsub
cltd
outsb
test
rcrb
sbb
jg
adc
jno
pushf
fiaddl
push
iret
add
incl
enter
lods
dec
sub
sti
and
lahf
add
push
mov
and
incl
nop
push
out
out
xchg
fdiv
cmpsl
imul
xor
sarb
pushl
std
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
and
or
inc
sbb
sbb
fs
sbb
xchg
lcall
int
clc
rclb
loop
mov
fdivr
cmpl
lcall
mov
leave
pushf
xchg
test
sbb
push
inc
es
pop
xor
inc
or
or
test
call
leave
dec
les
mov
notb
cltd
sbb
gs
je
push
cmc
loop
fildll
lcall
mov
cmpsb
fsts
in
lret
and
adc
inc
je
mov
and
incl
call
call
add
decl
sbb
cmp
xchg
cmp
mov
out
push
inc
enter
cli
add
je
lods
add
std
fidivrs
push
dec
icebp
push
sbb
pavgw
aad
insl
mov
clc
cmc
scas
dec
arpl
clc
lds
mov
les
fisubrs
idiv
call
loopne
cs
data16
cmp
push
addr16
pop
outsb
lea
pop
adc
mov
push
adc
aaa
lods
fisubs
ret
adc
lcall
or
inc
rolb
pop
out
and
jg
scas
fcmovbe
cli
mov
mov
adc
jmp
in
lods
mov
daa
mov
pop
addr16
ret
dec
xor
test
jg
sbb
incl
sbb
incb
shlb
jmp
pop
and
inc
jmp
push
movsb
rclb
popa
mov
mov
xchg
adc
push
lods
push
lods
inc
sub
jmp
out
fs
arpl
stos
sub
adc
push
aas
sar
call
push
jle
lds
outsl
dec
pop
and
lret
mov
incl
mov
and
or
pop
mov
cmp
add
pop
push
mov
ljmp
or
and
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
cmp
adc
ljmp
mov
add
ss
adc
sbb
pop
mov
jb
push
rorl
sbb
leave
pusha
stos
xchg
test
clc
ret
gs
adc
sub
out
mov
incl
fistl
xchg
add
jb
mov
push
ja
ljmp
pop
icebp
decl
mov
pop
jle
mov
adc
ljmp
cmc
rclb
stos
incl
push
pop
js
cmpsl
mov
jmp
stos
pop
jae
xor
das
or
jne
sub
push
cmc
and
cmpb
inc
lcall
inc
ja
fcmove
mov
adc
jmp
sub
lret
pmaxsw
xor
incl
test
or
mov
and
ss
mov
push
outsb
jns
xchg
stos
xchg
dec
cmp
pop
test
mov
lea
leave
jl
lcall
cld
leave
push
xchg
mov
int
cmp
ret
dec
mov
fmull
xchg
mov
jge
mov
gs
xor
push
fisttps
out
ss
sub
test
call
push
jmp
jns
xlat
or
cmp
dec
stc
xor
fdivs
popl
mov
xchg
arpl
ljmp
iret
mov
ljmp
fwait
lret
mov
xchg
lea
hlt
outsl
dec
inc
stos
add
mov
mov
dec
das
or
mov
xchg
mov
in
cld
lods
int
dec
pop
notb
mov
sahf
pop
mov
cmp
idiv
stos
imul
ret
jno
mov
lcall
jb
lds
inc
jae
leave
outsb
pushf
sbb
inc
aaa
repnz
call
ds
mov
cmp
test
subb
incb
jg
dec
xchg
cmpsl
fidivl
divb
mov
adc
outsb
idivl
adc
incl
pop
cli
dec
dec
jmp
pop
lea
push
imul
and
mov
es
scas
add
test
outsl
pop
mov
nop
sub
push
add
clc
decl
or
loope
or
cld
outsb
cwtl
xor
decl
hlt
mov
add
mov
stos
jl
add
insb
pop
pop
add
push
mov
dec
mov
std
push
cmp
jae
xchg
or
shrb
shrb
sbb
fisubs
scas
xor
add
adc
cmp
xchg
dec
dec
lock
jmp
ljmp
pop
mov
adc
testl
mov
sbb
filds
jmp
cmc
xor
das
jno
shll
loop
jg
pushl
jae
mov
notb
fucom
incl
out
fimuls
xor
jmp
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lea
pop
insb
cmc
cmp
pop
popf
xor
ret
xchg
lods
or
fs
jmp
mov
inc
mov
iret
jae
mov
aam
push
push
andb
decl
movl
adc
popa
add
incl
in
pop
test
ret
lock
mov
xchg
mov
push
fsubrs
mov
xchg
ja
ret
scas
insl
pop
lea
loop
add
mov
and
ret
arpl
jl
call
adc
lds
and
sub
dec
enter
lcall
sub
insl
jno
dec
mov
es
mov
dec
in
or
pusha
push
imul
or
push
test
sbb
hlt
pop
mov
pop
lods
push
movsb
scas
xchg
out
es
pop
loope
pop
divl
sub
adc
scas
and
add
adc
js
jb
sub
pop
inc
ffreep
or
repnz
and
cvtps2pi
ljmp
push
rcrb
pop
out
pop
push
or
sbb
fisubrl
call
outsl
inc
loop
cli
clc
inc
cmp
sub
pop
sti
mov
cmpsl
xor
jg
or
pushl
je
cld
mov
mov
adcl
icebp
sub
int
sbb
pop
cmp
sbb
jp
xchg
add
in
cltd
jge
inc
shlb
clc
ss
cmp
mov
loopne
lahf
sbb
or
rol
insl
xchg
jl
jns
add
call
jmp
idivb
or
daa
out
push
mov
out
pop
pop
inc
pusha
dec
sub
test
inc
fsubr
loop
je
pop
add
movb
arpl
cmp
call
je
mov
or
cmp
dec
push
sbb
pushl
mov
shrl
xlat
pop
add
imul
xor
sub
js
aam
cmpb
xor
leave
fbld
fdivs
cs
cld
scas
add
push
inc
fdiv
sbb
push
out
mov
jae
jbe
mov
das
ffreep
cmp
aaa
mov
pushl
push
push
pop
push
push
jb
repz
and
lds
fimull
dec
mov
cld
or
or
mov
sub
push
jae
pop
seto
repz
call
jno
push
sub
push
leave
sbb
cmp
ds
loope
jg
add
jg
mov
dec
push
imul
es
cltd
cltd
ljmp
test
cmpsb
es
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
stos
xchg
jo
mov
inc
lods
add
or
incl
cmpsl
clc
and
bt
jmp
cmp
push
int3
push
ds
lock
mov
lds
jnp
dec
push
cmp
jmp
dec
aas
jmp
xchg
testb
bound
or
ljmp
inc
xchg
xchg
data16
decl
test
pop
adc
fdivrs
jns
add
in
inc
lock
jo
jg
inc
pushl
outsb
iret
into
sar
decl
mov
dec
or
call
mov
xor
sub
cmc
fs
call
aam
arpl
push
sub
jns
sub
sub
adc
movsl
test
ja
rclb
jns
xor
mov
push
lahf
clc
pop
cmc
out
pop
outsb
push
jl
loope
xor
fadds
mov
cmp
inc
aaa
ljmp
inc
jmp
mov
add
mov
or
pop
xlat
adc
and
and
mov
gs
xchg
mov
and
cmpl
scas
sar
pushl
test
and
aad
mov
jp
inc
inc
dec
iret
adc
das
lcall
jmp
xchg
outsl
adc
mov
jns
pop
jge
mov
inc
daa
xchg
inc
lea
mov
xor
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
call
add
mov
jl
inc
xchg
and
mov
ss
mov
mov
add
sub
cmp
add
lds
xor
das
sti
and
hlt
test
dec
std
add
cmpl
adc
das
mov
pop
fstl
jo
cli
cmp
xor
lahf
arpl
dec
xor
mov
mov
xchg
cs
push
xor
test
mov
jno
test
call
scas
mov
adc
xchg
arpl
fildl
test
daa
sub
pushl
dec
in
mov
out
popf
push
mov
cs
pop
mov
cld
into
xor
test
outsl
mov
pushl
mov
bnd
jecxz
out
jb
jmp
in
and
jg
data16
jge
ret
mov
fwait
imul
xchg
xor
movsb
rol
shll
shrb
pop
or
cmpsl
mov
mov
stos
push
push
adc
cwtl
es
xchg
adc
adc
pop
mov
cltd
imul
leave
pusha
push
xchg
in
scas
mov
shrb
divb
incl
stc
jo
jne
jbe
data16
lret
repz
mov
in
adc
xor
cmp
adc
addr16
mov
pop
outsl
aad
cmpsb
call
call
push
lret
negb
into
popa
outsl
add
adcb
ljmp
call
xor
xchg
iret
das
xor
mov
lds
imul
adc
mov
sbb
out
jne
incl
loop
mov
xchg
push
or
push
pop
mov
std
adc
call
xchg
cmc
mov
or
fimull
mov
mov
pushl
mov
or
shll
sbb
jb
cmpsb
xor
add
jo
ljmp
push
xchg
loope
sbb
call
lock
jmp
and
lret
add
jmp
mov
sbb
jmp
das
fwait
rep
div
lock
mov
mov
sub
lock
ljmp
xchg
pop
inc
cwtl
push
xor
mov
movsb
xchg
lcall
out
and
pop
mov
push
inc
and
mov
scas
aam
aas
xor
ljmp
xchg
sahf
push
mov
filds
insl
into
inc
and
xchg
mov
aad
cmp
push
xor
decl
sub
push
cltd
stc
fs
push
loop
xor
inc
pushf
shll
incl
add
fmuls
mov
inc
repz
jmp
stc
mov
sti
enter
jl
mov
cmp
xchg
lret
cwtl
sub
out
ss
movb
fninit
pushf
inc
and
decl
jg
jae
xorl
dec
cld
inc
dec
jno
ja
mov
cld
call
push
imulb
push
xor
movb
lcall
and
mov
ficompl
pop
repnz
call
jl
mov
testb
sbb
ficomps
incb
xor
pop
push
incl
mov
adc
mov
in
aam
mull
cmp
xor
xor
es
add
push
ljmp
test
pop
scas
mov
lock
dec
sub
icebp
rcrl
mov
dec
mov
outsb
hlt
or
inc
push
mov
aaa
cli
sub
xor
push
jae
pop
lcall
imul
push
sbb
mov
pop
mov
sub
dec
xlat
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
jo
std
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
in
mov
aaa
sbb
push
jp
aaa
js
mov
incl
in
ret
adc
or
sbb
outsb
dec
aas
out
mov
ljmp
cld
call
in
or
in
pop
push
roll
in
outsb
jns
xchg
push
incl
lods
mov
sar
push
call
gs
scas
dec
xchg
or
jle
outsb
mov
push
xchg
jecxz
aaa
or
call
call
dec
inc
clc
sub
call
add
test
fwait
xchg
push
add
xor
jae
ljmp
movsl
pop
or
int
xlat
dec
movsb
inc
adc
sti
das
sbb
clc
jmp
dec
mov
mov
loop
aad
movsl
repnz
ljmp
xchg
xor
sbb
loope
pop
pushf
divb
flds
decl
mov
sub
jnp
mov
sub
inc
pop
cwtl
jnp
stos
add
mov
cmc
ret
mov
dec
mov
xchg
add
xchg
jg
mov
rcrb
fwait
insl
xlat
or
push
adc
lcall
dec
sub
psubusw
popa
push
outsl
jg
adc
push
mov
mov
mov
add
ja
pop
push
jno
xorb
jo
fwait
mov
pop
lcall
daa
das
pop
xor
mov
mov
mov
mov
jmp
jl,pn
mov
add
mov
mov
adc
decl
jle
enter
sub
inc
inc
sub
cmp
and
mov
call
mov
add
pop
xchg
ja
orb
xchg
xchg
in
lret
out
jmp
das
sub
adc
xor
adc
inc
mov
jae
enter
push
push
aaa
popf
mov
xchg
or
out
cmp
mov
inc
adc
scas
in
dec
sub
fucomp
or
mov
pop
repz
and
repz
xchg
sbb
mov
fnstsw
and
mov
fs
xchg
stc
mov
pop
cmc
add
jmp
xchg
or
fisttpl
mov
loopne
add
adc
mov
mov
cli
sti
mov
sbb
imull
dec
cmpl
jmp
test
clc
mov
add
in
and
shr
andb
repz
add
mov
aam
divb
adc
mov
pusha
or
cmp
loopne
aaa
xchg
cmpsb
push
pop
jne
push
jno
cmp
mov
push
incl
pop
in
insb
aaa
jmp
mov
and
test
pushl
pop
clc
jmp
dec
outsb
inc
add
cmp
xchg
aam
ret
add
decl
aad
mov
pop
mov
jns
mov
mov
addr16
dec
js
ljmp
test
shld
mov
dec
push
int3
mov
popa
jbe
adc
xor
stos
cli
xchg
cmpsl
ja
cwtl
pushf
pushl
ja
jge
xor
hlt
cmp
adc
scas
mov
mov
xlat
into
push
push
pop
add
dec
add
jae
insb
test
xchg
call
cli
cmp
jp
push
pop
inc
mov
xor
sarb
push
sti
dec
loopne
and
decl
add
fldl
jmp
mov
xor
sbb
mov
subb
int3
shlb
xchg
popf
adc
cmp
ljmp
and
mov
mov
les
mov
push
pushl
and
aas
and
leave
outsl
jb
lods
adc
test
mov
dec
sbb
and
lcall
das
in
cmp
inc
push
movl
inc
dec
sub
orl
scas
xchg
cmp
scas
movb
rcrl
jp
in
push
and
push
or
mov
lcall
bound
rcr
xchg
and
pop
cltd
mov
xor
dec
push
sbb
sbb
sti
mov
fsubr
pop
call
jmp
cmp
push
cmpsb
jmp
sbb
xchg
push
pop
imul
and
pusha
fiaddl
cltd
sbb
pop
push
sbb
stos
rclb
fcomip
pop
lret
test
jmp
mov
insl
mov
cmp
insb
or
mov
adc
sub
pop
add
push
dec
push
dec
sub
lahf
or
dec
add
rolb
stos
pop
mov
push
and
jmp
mov
cs
push
and
lock
or
or
inc
fs
rcrb
add
ror
sbb
pushl
pop
push
lds
popa
jno
or
fistps
shrl
incl
cli
adc
inc
test
mov
dec
or
mov
push
lahf
dec
lret
arpl
inc
sahf
scas
cmpsl
test
pushl
xchg
imul
cmp
cmp
and
mov
or
incl
push
outsb
stos
or
cli
dec
mov
int3
test
inc
test
jo
aas
lret
xchg
or
push
call
lea
outsl
cmp
iret
xchg
push
mov
shl
hlt
call
ljmp
inc
push
add
inc
out
adc
mov
adc
adcb
dec
out
cmp
dec
adc
and
in
nop
inc
pushf
or
mov
dec
cmp
outsl
dec
dec
xor
ljmp
push
mov
push
mov
loope
nop
lods
in
inc
sbb
xor
out
push
fisubrl
test
sbb
lcall
jnp
mov
jmp
xchg
pop
pop
pop
ret
or
xor
stos
loopne
incl
and
push
mov
arpl
aas
cltd
add
pop
inc
add
push
pop
pop
mov
shll
test
loopne
mov
cmp
pop
mov
aaa
inc
mov
jp
or
jmp
jne
pop
rcrb
or
add
jae
sbb
cmp
sub
inc
jbe
push
add
dec
in
scas
into
daa
divl
mov
sbb
push
out
lock
fcompp
dec
and
decl
dec
xchg
sbb
mov
sub
ljmp
lcall
enter
sub
mov
or
sarb
rcrb
sbb
jmp
test
mov
or
cmc
lahf
sub
mov
xchg
cltd
mov
mov
js
inc
ud0
arpl
sub
in
lods
dec
mov
mov
ret
andl
xchg
adc
jmp
leave
jecxz
inc
stos
in
pop
popf
subb
mov
add
jg
idivb
xor
shrb
daa
pop
lret
out
xor
and
test
lea
inc
add
ljmp
mov
out
jns
push
push
js
mov
mov
sbb
add
xor
pop
leave
js
into
pop
out
jmp
sbb
in
pop
cmpsl
sti
repz
outsb
fucom
call
and
cld
cld
ret
adc
aaa
nop
fs
add
dec
xor
jmp
pop
push
add
and
cmp
dec
mov
add
call
adc
inc
mov
repnz
sub
clc
mov
pushl
test
shlb
in
sub
dec
push
pop
inc
mov
cli
add
scas
jge
fldl
sbb
adc
js
xor
lcall
repz
push
mov
rcll
push
out
shlb
pusha
push
fsts
jmp
incl
mov
es
out
imul
dec
lcall
add
or
sbb
pop
push
ljmp
push
and
push
jle
clc
inc
out
setno
incl
pusha
xchg
adc
test
adc
fbld
int3
sub
into
dec
jmp
shll
dec
cmp
dec
xor
xchg
push
sub
mov
dec
push
pop
and
aad
cmp
inc
int3
xchg
dec
ds
movsl
fmul
xor
fwait
fwait
movb
mov
outsl
lret
adc
call
cmpsb
shl
pop
or
push
cwtl
les
fdivl
pop
dec
push
sub
push
jmp
xchg
jg
dec
sahf
cmp
es
sahf
and
push
scas
addr16
repz
mov
sti
jp
sub
nop
jle
je
out
f2xm1
inc
loop
or
jg
decl
mov
sub
ss
push
xlat
outsl
cli
mov
sub
mov
or
add
cmp
test
ljmp
ljmp
pushf
dec
mov
push
adc
adc
xor
gs
les
dec
ljmp
cmp
jno
jb
test
in
rcrl
addb
lods
inc
icebp
cli
je
mov
pop
lcall
push
aas
or
sbb
inc
inc
adc
call
loopne
xor
push
ja
sbb
xor
les
add
jno
mov
sub
push
stos
fstpl
in
xor
shlb
pop
les
mov
sub
jo
or
mov
pop
push
xlat
fmul
push
push
in
jl
add
jg
jae
test
xlat
dec
loop
add
adc
xlat
mov
aaa
test
mov
loope
xor
push
cmc
addr16
pushf
adc
cmp
sub
decl
ror
add
add
and
xlat
fisttpll
mov
mov
into
or
cmc
jmp
jmp
xor
stos
fdivr
and
loopne
push
xchg
int3
movsb
decl
lock
sub
jb
cmc
add
jle
mov
jge
call
inc
sbbl
xchg
call
cs
mov
in
sbb
dec
xchg
xor
and
xor
jg
or
push
xor
call
xor
xchg
pushl
cmp
xchg
stc
mov
add
rclb
repnz
ds
stos
mov
ret
out
call
add
inc
test
aaa
sbb
inc
xchg
test
xchg
cltd
out
xchg
mov
negb
mov
and
std
adc
rclb
mov
xchg
adc
xchg
jb
orb
sbb
mov
in
or
push
sub
test
fldcw
stos
mov
mov
xchg
enter
add
jg
cld
outsb
testl
cmp
jge
out
push
mov
arpl
in
out
out
push
in
or
cmp
nop
test
mov
aam
test
jbe
es
cmpsl
in
sbb
call
cltd
sbb
insb
sbb
dec
xchg
mov
cmpsb
pop
xchg
and
xlat
cs
and
mov
call
push
lret
lds
dec
push
in
jbe
loope
pop
add
push
scas
lcall
or
or
dec
lcall
mov
push
ficoms
inc
clc
inc
ljmp
mov
ja
data16
call
adc
and
mov
cmp
decl
dec
dec
mov
adc
xchg
insb
xchg
sbb
jns
movl
jp
or
sbb
int
push
pop
pop
jp
lods
dec
stos
and
jbe
outsb
lcall
gs
out
pop
in
repnz
and
lcall
cmc
dec
shl
jp
data16
and
das
pop
rorl
ss
and
sub
sbb
and
and
lret
cld
loopne
outsl
loop
and
sub
imulb
adc
nop
into
mov
loopne
scas
and
loopne
mov
or
xchg
xor
push
mov
loopne
iret
inc
std
incl
mov
xchg
cmc
popa
mov
vpsubsw
sar
mov
ret
mov
push
xor
xor
and
pushl
sbb
ds
and
loop
popa
out
ds
movsb
xchg
incl
test
aam
sub
loop
jle
clc
jno
mov
aam
call
rorb
cltd
inc
jae
jno
shrb
fiadds
pop
outsl
jae
jl
sahf
xchg
pop
loop
push
xor
cmp
sbb
push
sub
add
cltd
scas
decl
fdivrp
mov
jne
popa
push
imul
imul
dec
sub
incl
insl
push
mov
data16
js
icebp
fsts
or
sbb
ljmp
jmp
xchg
lret
pusha
push
mov
xchg
jge
leave
dec
outsb
ds
cwtl
stc
adc
jg
jmp
jg
pop
mov
mov
jecxz
outsb
sbb
cmpsb
dec
scas
cli
lcall
mov
aaa
int3
loopne
hlt
sub
sarl
inc
mov
ret
jmp
and
enter
ficoml
test
lcall
stos
and
jg
sub
shlb
bound
add
xlat
lret
dec
mov
mov
push
or
ret
das
stos
dec
hlt
outsb
out
pop
pop
call
push
lcall
ljmp
pushl
dec
ss
push
popf
inc
pop
lret
inc
cmp
fs
lret
jg
test
jl
mov
mov
imul
aaa
pop
mov
fwait
cmp
call
sub
dec
pushf
pop
cs
aaa
adc
cwtl
popf
repz
js
fidivl
pushl
cld
jnp
mov
loopne
mov
testb
cmp
scas
loopne
out
xabort
fildl
ljmp
xchg
adc
cmpl
pop
daa
push
xor
cmc
jl
fs
arpl
aas
fidivrs
jg
add
xor
shrb
adc
jl
pop
jecxz
add
mov
sub
adc
add
aas
cmc
ret
rol
mov
ds
cwtl
mov
cltd
cmpsb
jecxz
std
sti
mov
cmp
adc
insb
xor
or
stos
sahf
fildll
pop
cmpsl
or
scas
rorl
stos
push
fld
or
xor
clc
mov
pop
mov
mov
mov
push
jecxz
in
repnz
into
lods
lods
cwtl
int3
repnz
sub
cmp
push
mov
adc
ret
fiaddl
mov
or
shll
mov
cmp
sti
gs
pop
lods
bnd
jb
cwtl
call
cld
lcall
jne
outsl
addb
pop
and
sbb
lods
pop
aas
or
cmp
jg
out
push
inc
or
inc
ret
dec
add
push
ret
pop
insl
mov
mov
mov
addr16
sbb
movsl
jb
pushl
xchg
insb
push
rol
loop
int3
pushf
mov
enter
add
pop
shl
and
ljmp
sahf
mov
js
xchg
mov
pushl
lds
cli
pop
sbb
loop
ret
lahf
inc
jmp
sbb
jge
push
cmpsb
popf
cwtl
out
and
and
adc
xor
jmp
sbb
inc
ret
push
dec
cmp
popf
bswap
inc
sti
mov
cli
inc
enter
pop
mov
xchg
aad
xor
jae
rolb
outsl
cli
scas
fmuls
mov
cmpsl
xor
xor
push
mov
mov
mov
out
adc
xchg
daa
aam
fidivl
les
xor
add
popa
scas
ficoml
js
shll
pop
int
cmpsl
jno
sbbl
xchg
mov
xor
jbe
in
sar
decl
cltd
or
push
add
div
push
xor
mov
push
insb
jge
mov
lcall
dec
push
daa
pusha
movsb
sarl
incl
inc
jmp
dec
out
lods
repnz
loope
add
mov
and
sahf
call
cmp
xchg
aaa
lret
clc
idivl
stc
decl
adc
mov
nop
xchg
dec
xchg
jns
or
loopne
dec
shlb
xor
xor
cld
subb
shll
mov
pop
stos
insl
fstpl
outsb
dec
cmp
loop
pop
decl
sub
mov
xor
xchg
lods
mov
push
std
decl
data16
and
cwtl
out
mov
xchg
cmp
xchg
mov
push
call
test
add
jmp
sbb
movsl
inc
je
pop
jnp
push
outsb
or
mov
add
ja
or
xchg
ljmp
cmpsl
imulb
push
jg
dec
lods
mov
and
cmpsl
loop
je
jl
das
cmp
stos
into
pop
sub
adc
int
loopne
clc
hlt
ljmp
sbb
mov
and
adc
sub
or
sti
out
push
cmp
pop
mov
inc
ljmp
mov
adc
sub
outsl
mov
mov
and
in
pop
or
pushl
sub
negl
imul
ds
jmp
push
push
push
sti
or
pop
pop
pop
inc
or
or
add
leave
ljmp
hlt
int3
in
jns
movsb
push
aas
mov
ja
aas
in
mov
mov
lcall
and
jne
mov
aam
xchg
shlb
xor
es
fucomip
jno
sbb
push
stc
dec
push
mov
push
push
sahf
scas
push
mov
fs
aaa
mov
pop
sar
jmp
add
sbb
out
mov
std
adc
rcll
push
push
pop
call
test
repz
fdivrs
sub
xchg
push
xchg
sub
add
mov
sbb
stc
subl
lcall
and
loope
ljmp
arpl
int
ja
add
mov
fimuls
add
sarl
lock
sub
into
jmp
stos
add
cli
std
add
arpl
in
into
sbb
int
pop
movsb
test
enter
aaa
pop
fdivrl
and
call
enter
inc
sbb
xchg
inc
and
lcall
out
sarl
shll
pop
cmp
adc
imul
ret
int3
incl
cld
jmp
and
mov
lcall
push
outsl
xor
int
in
jl
fistl
shlb
aam
movsb
ljmp
lea
and
popa
nop
jb
mov
pusha
inc
dec
incl
test
aas
aaa
mov
insb
les
shl
bound
mov
pop
inc
std
incl
push
mov
test
fistps
and
iret
sub
push
xchg
clc
xor
pop
gs
call
movsb
push
repnz
in
or
aaa
mov
stc
or
dec
mov
mov
jb
lahf
test
jmp
mov
jnp
inc
mov
cmp
mov
das
lret
xchg
int3
mov
or
stc
in
incl
lahf
lahf
ret
bound
adc
fs
sub
mov
jmp
outsl
dec
out
mov
movsb
mov
xor
push
and
lahf
ljmp
lds
in
shl
stos
or
in
enter
sub
or
push
filds
and
fwait
pop
ss
inc
aad
dec
lcall
inc
pop
clc
std
dec
ljmp
sar
neg
repz
pop
xchg
mov
mov
push
dec
dec
xchg
jl
add
shrb
jge
outsb
xchg
lcall
ret
pop
pop
dec
push
lock
les
pusha
fwait
in
fwait
sub
sbb
sbb
xorb
pop
pop
add
stos
or
aad
push
mov
subb
or
dec
push
push
push
leave
dec
cmp
jmp
push
dec
ret
outsl
cli
jmp
stos
and
std
subb
es
loope
push
cwtl
add
jb
cli
push
cld
js
fdivrl
sub
fnstsw
mov
xchg
into
xor
decl
into
loopne
or
inc
sti
hlt
xor
loope
sub
sub
stos
das
clc
das
jp
push
mov
and
inc
xchg
pop
cmp
and
out
ja
int
pop
or
fstpt
in
decl
lcall
pop
jge
jmp
dec
cmpsl
jg
push
jae
decl
xlat
sub
loop
movsl
adc
inc
push
mov
movsb
sub
ljmp
cs
xchg
push
out
sbb
pop
sub
lods
sti
mov
loopne
incl
inc
add
ror
mov
jge
fcomps
leave
enter
je
loopne
sbb
xor
fbstp
fisubrl
xchg
mov
mov
insb
or
cmp
pop
aas
jp
xchg
inc
cli
lcall
ja
jns
or
cltd
mov
mov
sarl
xchg
xor
lcall
sbb
or
jno
inc
jmp
push
push
mov
in
sbb
ljmp
cli
pop
xor
pop
imul
stos
leave
inc
push
loope
mov
rcll
push
push
shlb
in
or
cmp
mov
cmp
les
cld
cwtl
sbb
push
mov
out
loopne
push
adcl
lret
cmp
call
into
pop
mov
clc
int
shl
pushl
lods
ss
jl
retw
fstpl
pop
sbbl
sti
mov
push
jmp
dec
and
es
aam
int3
dec
fcoml
inc
jb
mov
bound
mov
pushl
into
xor
cmc
les
sbb
jae
stos
jp
rorb
leave
mov
cmp
pop
sub
arpl
xor
stos
pop
xorb
jo
adc
mov
pushf
or
fidivs
sbb
ljmp
inc
loopne
stc
cmp
mov
scas
movsb
xor
add
dec
push
sbb
sub
sub
inc
xor
loope
push
inc
sbbl
daa
add
dec
loopne
call
ret
fidivl
dec
sbb
fidivrl
and
mov
jo
js
cwtl
jmp
mov
pushl
push
fisttps
jecxz
nop
les
or
xchg
filds
fs
mov
aad
adc
je
clc
inc
sti
test
repz
loop
leave
push
movsb
xchg
xor
add
pushl
sbb
pop
dec
sub
sbb
sub
in
mov
mov
hlt
cmpsl
xchg
pop
lcall
loopne
insb
push
xchg
mov
mov
jnp
push
shlb
dec
roll
cwtl
dec
sbbb
jge
cmpsb
dec
stos
adc
sub
ret
sbb
imul
mov
push
jne
inc
fwait
incl
pusha
sti
jg
or
fadd
mov
jp
pop
sub
mov
fdiv
jg
ljmp
andb
test
bound
mov
lods
xor
lock
mov
je
adc
cld
mov
jns
add
sbb
jg
incl
cwtl
incb
imul
nop
jmp
pop
out
mov
in
inc
or
adc
push
sbb
jno
pop
xor
and
cmp
fstpt
jmp
stos
in
outsb
test
enter
inc
jb
add
std
stc
dec
inc
je
pop
ds
mov
movsl
inc
jle
notb
pusha
xor
jge
dec
sub
aaa
xchg
call
adc
and
jo
mov
gs
add
in
cmp
sbb
and
cld
mov
call
decl
decl
movsb
mov
sub
mov
cwtl
sub
mov
and
xor
aad
sbb
add
mov
cs
jg
js
fidivl
or
adc
clc
cmp
je
cmp
movsl
clc
add
mov
cld
repnz
dec
jne
cmpsb
lcall
in
jg
into
mov
je
push
sbb
fstps
fiaddl
fisttps
adc
xor
enter
jbe
std
out
adc
mov
mov
lods
js
sub
cmp
cmp
dec
je
iret
dec
and
movsl
push
dec
mov
or
xor
std
pushl
mov
int3
mov
cmpsb
jo,pn
mov
fisttps
std
in
ja
and
lea
xor
js
mov
je
cmp
cmp
mov
pop
add
and
sbb
jmp
mov
repnz
sbb
xchg
ds
loopne
call
jle
push
sbb
test
lret
cmpsb
xchg
xor
or
cmp
sar
sbb
adcl
sbb
ljmp
pop
push
pusha
lcall
decl
lods
mov
jle
rclb
adc
add
ds
adc
inc
in
loopne
call
loopne
mov
test
inc
repnz
pop
inc
das
cmp
filds
mov
pop
jo
lcall
push
addr16
sub
xor
mov
adc
movsl
xchg
or
clc
lcall
add
and
stos
mov
or
repz
xchg
out
clc
jnp
pop
cmc
out
nop
jl
fwait
push
sub
sub
ljmp
mov
decl
sub
out
in
sub
int3
sub
and
mov
or
pop
pop
sbbl
xor
insb
das
jecxz
push
lcall
ljmp
pop
outsb
mov
fists
fld
cli
das
add
and
dec
ret
nop
lock
lcall
cmp
inc
dec
je
dec
jno
dec
push
pop
cli
call
sub
aas
addr16
cmp
cmp
push
adc
mov
mov
cwtl
cmp
fidivs
jbe
mov
scas
and
xchg
xchg
and
test
push
sub
jg
lods
pop
cmp
adcb
into
xor
test
test
faddl
dec
add
call
xor
das
mov
ljmp
add
popa
das
addr16
fcoms
stos
push
adc
decl
out
js
int
jbe
push
out
pop
mov
pop
xor
incl
ljmp
in
clc
pop
or
xlat
sbbl
inc
mov
jle
or
call
adc
sub
scas
mov
fadds
pop
stc
stos
cmp
ljmp
mov
push
cmp
in
and
test
loop
sub
movsb
cmp
sub
jbe
fbld
adc
fsubp
insl
push
dec
imul
pop
shl
gs
fwait
mov
xlat
in
mov
inc
mov
and
add
ret
sub
xchg
push
xchg
ljmp
fsubrs
jbe
pushf
out
dec
imul
adc
cmc
jmp
mov
outsb
ds
jecxz
rolb
pop
mov
clc
push
dec
es
stos
jge
loope
jg
int3
mov
aad
push
push
ljmp
call
sahf
mov
das
pop
add
jns
sarb
lahf
or
mov
dec
idivb
xchg
mov
fisttpl
loope
and
jg
push
mov
adc
and
push
fisubrl
cmc
rdtsc
divl
jecxz
pop
jp
adc
or
push
int
ficompl
cmp
xor
and
out
les
jae
cld
adc
dec
or
fs
inc
jmp
dec
adc
mov
pop
cmp
mov
pop
call
mov
adc
hlt
icebp
gs
sti
das
xchg
adcb
gs
stos
mov
sbb
cld
mov
fsubp
lds
and
addl
imul
jne
dec
pop
mov
cs
out
adc
movb
pop
icebp
push
out
adc
aaa
mov
icebp
pop
scas
push
xchg
adc
fs
incl
in
xor
movsb
pop
out
pop
mov
pop
cmp
scas
rcrl
pop
pushl
mov
lds
push
int3
arpl
stos
xor
or
add
adc
xchg
call
pop
test
icebp
aas
fninit
and
xor
jl
stc
or
mov
ja
ljmp
mov
cld
jnp
add
sbb
pop
sbb
adc
sar
lock
mov
mov
pop
xchg
and
mov
movsb
decb
outsb
lea
adc
xor
out
rcll
add
into
repz
dec
sbbl
sbb
push
mov
or
das
shl
cwtl
loope
imul
ficompl
call
add
jae
jmp
push
mov
hlt
adc
addl
ljmp
repnz
sarb
push
sub
pop
mov
loop
mov
and
clc
sbbl
xor
jmp
inc
sub
xor
xchg
fsubr
mov
ret
fnsave
adc
rorl
fldcw
out
mov
mov
jg
inc
pushf
mov
mov
mov
movd
jns
jo
rcll
lcall
and
cmpsb
or
or
jns
sub
mov
repnz
xchg
inc
leave
mov
sahf
sbb
mov
mov
mov
imul
xchg
pushl
inc
jecxz
sbb
xlat
pop
push
repz
pusha
cli
pop
ret
adc
push
std
xor
dec
sbb
xor
fldt
or
out
mov
repnz
sub
fbstp
pop
pavgb
dec
imul
shl
cld
sub
ljmp
fistl
dec
in
xchg
ljmp
ja
cld
mov
mov
pmulhuw
fstpt
out
sub
test
cmp
push
pop
mov
frstor
mov
mov
adc
jmp
fs
mov
call
push
pusha
or
jns
mov
jns
add
cmpsb
and
das
hlt
es
push
mov
shr
stc
or
push
jp
insb
lcall
rclb
jp
fisubrs
mov
ljmp
jne
dec
scas
sbb
stc
cmovl
lods
sub
mov
mov
rorl
iret
mov
out
pop
and
icebp
xchg
sub
inc
call
mov
lret
mov
call
xchg
adc
mov
mov
rcll
ror
lcall
mov
jne
mov
mov
jle
adc
enter
sbb
and
mov
pushl
loopne
xor
or
pop
outsb
xlat
add
sti
mov
jmp
cmpb
loop
sub
inc
movb
push
or
incb
dec
fildll
push
enter
fwait
popa
loopne
hlt
dec
rolb
leave
xlat
jne
adc
jmp
lods
push
push
movsb
jecxz
shll
lea
test
jns
scas
pop
add
call
or
jae
scas
ret
sbb
mov
sub
push
stc
cmpl
dec
pushf
fwait
call
mov
arpl
sub
je
or
mov
aam
and
and
mov
call
jb
xchg
test
ljmp
lods
aad
xchg
scas
leave
pop
jbe
mov
adc
sbb
ret
cmp
xchg
cld
incl
call
or
dec
rorb
jmp
inc
push
lods
das
pop
std
jbe
mulb
jbe
jp
xchg
mov
dec
xchg
in
in
fdivrs
lock
fcomip
lcall
jmp
sub
cwtl
ds
cmpsl
inc
cmpl
cmp
lods
pop
into
adc
push
icebp
fmull
sbb
lock
out
inc
push
dec
mov
jnp
hlt
lea
into
mov
sbb
aas
loope
fldcw
dec
std
aad
mov
lcall
cmp
mov
xor
notb
mov
std
push
iret
test
push
decl
fwait
pop
out
pop
ficoml
addr16
or
out
xchg
jno
iret
stos
call
sbb
cld
lcall
and
rol
movsl
push
xor
out
mov
xor
cmp
lcall
clc
push
cmpb
add
int3
pusha
pop
pop
stos
into
dec
mov
iret
filds
xor
ss
sahf
dec
mov
adc
std
sub
test
pop
xchg
jg
cmp
das
stc
out
inc
divb
leave
sbb
or
xor
das
xchg
clc
ljmp
cmpsb
jbe
jb
in
not
xchg
inc
in
mov
xchg
mov
imul
cmp
ret
push
mov
call
lret
push
inc
mov
test
push
mov
bound
push
clc
jb
dec
adc
ljmp
mov
aas
add
cli
or
lods
int3
add
icebp
cli
jp
test
inc
in
mov
lret
lcall
dec
fdivrs
or
shl
daa
add
xchg
decb
pop
and
ja
cs
mov
cmpsb
pop
div
mov
jb
mov
not
mov
lods
mov
mov
std
lcall
push
test
les
cwtl
fdivrs
dec
clc
sahf
out
mov
pop
inc
and
stos
aad
data16
push
leave
lret
cmpsl
adc
xchg
scas
push
leave
pop
cmc
movsb
aam
xor
leave
push
jmp
mov
fadd
aas
mov
movsb
jbe
mov
negl
xchg
negb
pop
dec
ret
arpl
xchg
in
mov
mov
push
icebp
incl
jno
andb
push
dec
jge
inc
repz
add
mov
lea
xlat
fisubl
sub
popa
cmp
mov
lret
push
and
out
pop
loopne
fnstsw
repnz
inc
lods
shl
push
add
jmp
pushl
dec
out
sbb
std
hlt
inc
adc
cmp
out
dec
or
out
inc
and
xor
mov
cmp
sbb
lods
sub
data16
loop
lret
inc
cmp
push
mov
or
cld
mov
fucom
lods
ss
mov
loope
ret
adc
and
add
loop
popa
orb
fiaddl
sahf
and
mov
pop
push
xchg
clc
jmp
fcmove
sbb
bound
push
mov
and
shl
mull
pushl
push
aam
jae
dec
mov
cmp
movsb
or
fstpl
incl
clc
and
jge
xor
pop
mov
sub
adc
jge
push
fmuls
or
push
scas
cmp
adcl
aad
inc
push
in
mov
clc
incl
cmp
cmc
adc
je
movsl
fwait
scas
cmp
out
mov
shlb
pop
sbb
jmp
add
push
pop
fidivrl
call
arpl
popf
push
mulb
jle
imul
das
lcall
adc
sbb
clc
push
sub
subb
ret
fldenv
sub
imul
data16
mov
out
push
pop
rcll
push
xor
and
call
pop
sti
pushf
pop
movsb
and
mov
mov
push
aaa
xchg
xor
incl
cwtl
ss
lret
stos
sub
stos
cwtl
sub
xor
or
mov
cwtl
xchg
xchg
test
lods
xchg
lret
mov
icebp
mov
hlt
sbb
and
lcall
or
aam
pop
pusha
jae
xchg
mov
loopne
iret
dec
jge
mov
incl
enter
add
xchg
out
mov
subl
lcall
gs
pushf
pusha
xchg
add
jle
adc
adc
adc
inc
fs
cmp
jle
xorb
lret
xchg
adc
dec
push
or
incl
or
fisttpll
xlat
xorl
lcall
push
xchg
notb
mov
fxch
cmpsb
in
mov
outsl
repz
repnz
push
adc
repnz
imulb
mov
in
loope
les
flds
mov
mov
cmp
pop
mov
jbe
call
add
pop
xchg
insl
jb
scas
aaa
or
icebp
lcall
adcl
mov
call
and
repz
loopne
ljmp
das
inc
jae
int3
rcrb
out
lahf
push
loopne,pt
jno
jae
outsb
push
or
mov
jmp
push
pop
cli
inc
push
and
cmp
bound
inc
sub
call
ja
dec
mov
adcl
sub
popa
xchg
call
xor
stc
cmp
jmp
and
js,pt
lock
add
add
imul
jg
or
xchg
les
jmp
incl
in
xor
push
cmc
sub
xor
xchg
jle
mov
dec
arpl
push
nop
mov
mov
addr16
lahf
pop
dec
add
mov
pop
sarl
mov
int
decl
xchg
jo
lret
scas
cmpsl
enter
inc
push
mov
mov
loop
shrb
push
jmp
push
sbb
repz
and
jl
jle
mov
nop
pop
mov
inc
xor
jno
call
xchg
inc
push
jmp
jl
xchg
add
das
or
mov
jg
add
scas
lods
clc
clc
in
decl
scas
and
test
incl
or
jnp
adc
cmp
cs
pop
mov
adc
adc
dec
adcb
ret
mov
pop
mov
mov
bound
inc
xchg
call
push
popa
and
lods
mov
lock
test
pop
int3
cmp
xchg
stos
mov
or
test
loopne
pop
cmp
incl
enter
fwait
xor
push
add
shrb
jnp
repnz
inc
pushf
int
fcoms
iret
or
fisttps
les
enter
fnstenv
sbb
adc
xor
bound
inc
ret
dec
orb
repnz
adc
scas
pop
gs
jecxz
dec
or
out
pop
xor
mov
stos
dec
aam
lcall
loope
dec
stos
push
addr16
lods
add
sub
dec
xchg
mov
mov
jmp
movsl
pop
push
mov
incl
ret
adc
pop
cmp
sub
inc
xchg
sbb
ds
add
jg
and
push
aas
dec
insl
popf
movsl
mov
xor
mov
mov
add
pushf
in
jb
sbb
scas
add
mov
push
ret
jl
adc
jge,pn
xor
das
pop
insb
push
mov
imul
cmp
push
fs
cmp
test
and
je
xor
aaa
jg
and
sar
jno
cwtl
lods
in
test
mov
sub
jmp
stos
pop
pop
in
push
cmc
and
cmpsb
sub
xlat
ss
mov
daa
mov
jno
fsub
mov
xchg
outsb
shld
ljmp
and
pop
lret
push
push
test
xchg
out
xor
loop
xor
arpl
mov
scas
mov
shr
popf
cmpsb
xchg
cwtl
pop
push
add
mov
jg
mov
pop
dec
xchg
push
adc
xor
xor
add
inc
cmpl
int
ljmp
dec
jns
loopne
ss
addr16
scas
cmpsl
sti
sub
fnsave
push
cmpb
call
clc
jmp
scas
dec
cmc
jecxz
and
pushl
fnstenv
xchg
jns
inc
lret
jl
cltd
lret
dec
push
pop
inc
xor
and
stc
aam
stos
mov
push
mov
jb
pop
xor
clc
hlt
mov
cmp
pop
jle
jnp
scas
jmp
out
sub
push
mov
movsb
sbb
or
std
mov
mov
or
pop
cmp
inc
add
push
out
dec
sbb
mov
lcall
lods
inc
xor
xor
xchg
cmp
push
fnsave
pop
and
lcall
jmp
sbb
clc
jg
push
xor
inc
cmp
jmp
sub
ljmp
lock
je
xchg
mov
sbb
cmpsb
pushl
mov
xchg
les
mov
cmpb
cmp
ret
mov
sub
imul
ja
shll
sbb
inc
aas
loopne
hlt
mov
mov
addb
xchg
or
mov
clc
incl
pushf
sub
pop
fsubrs
push
fcom
dec
rcrl
std
insb
mov
lcall
add
pop
daa
rcr
sbb
jl
cmpsb
mov
cmpsl
pop
inc
popa
shrl
xchg
out
mov
incl
cld
pop
pop
cmpb
and
clc
mov
inc
imul
mov
int3
cli
jne
mov
sbb
mov
cmp
push
ja
xchg
in
ffree
xlat
aam
jmp
pop
mov
enter
pop
addb
fwait
xchg
fisubs
lock
pop
in
and
loop
push
push
lea
sti
test
pop
lock
dec
sbb
pop
rorl
inc
dec
jnp
adcl
inc
loope
inc
cwtl
cmp
xorl
inc
shl
cmc
cmp
decl
cmc
test
aaa
aas
cmp
pusha
in
xchg
rol
ljmp
sbb
mov
sbbl
lods
outsl
cmc
rcl
mov
sub
mul
add
dec
cmp
loopne
shlb
test
shlb
decl
rdtsc
aaa
inc
push
push
stos
or
sub
xor
js
push
jno
out
adc
decl
sbb
push
sub
add
ja
fstpt
sti
cmpsb
stos
sbb
and
mov
hlt
lock
icebp
es
or
add
xchg
nop
or
pushl
cltd
adc
hlt
sub
add
outsb
das
push
adc
lea
pushl
mov
and
dec
dec
cwtl
pinsrw
cmpsb
das
subb
sub
mov
sbb
xlat
xchg
incl
cmp
std
lds
adc
xor
bound
aaa
mov
dec
lahf
les
ficompl
add
mov
push
ja
and
je
not
mov
mov
mov
incl
inc
push
mov
lods
sbb
jmp
sbb
out
dec
and
pop
adc
cld
out
adc
push
mov
jp
jg
fcmovbe
stc
cli
dec
adc
jne
movsb
add
mov
ja
fwait
call
js
sbb
xchg
hlt
in
fcmovne
les
in
adc
jb
mov
call
mov
incl
into
mulps
adc
iret
stos
out
push
lods
sbb
mov
orb
decl
cmpsb
adcl
push
xor
scas
xchg
jbe
adc
mov
ss
inc
pop
xchg
adc
lcall
pop
xor
push
mov
dec
repnz
and
in
mov
aaa
scas
fidivs
or
or
xor
inc
xlat
mov
dec
mov
and
pop
cld
incl
and
push
jmp
ja
arpl
ror
les
ret
pop
outsl
decl
xchg
cs
jl
pop
xchg
call
icebp
and
push
or
pusha
sbb
mov
push
ja
mov
add
aad
stc
sub
inc
in
ljmp
push
stos
popl
imull
sub
lods
nop
sub
mov
les
jae
call
mov
pop
push
out
pop
imul
jle
test
dec
movsl
mov
mov
pushl
lods
and
loopne
call
push
and
mov
repz
mov
call
dec
pop
mov
movsl
je
or
jge
lret
out
pushf
outsl
or
ja
les
fistpll
lock
mov
lret
mov
ljmp
enter
negb
ss
jecxz
test
hlt
cld
das
clc
fistl
outsb
mov
iret
shl
in
sbb
mov
bound
jg
addb
mov
mov
or
stc
fcomip
incl
push
lock
mov
ret
aas
cmc
and
xor
iret
push
incl
sub
in
dec
sbb
mov
add
fcmovb
mov
pop
cli
dec
insb
lods
pop
jp
mov
inc
cltd
cmc
or
adc
lds
call
popf
pop
nop
enter
jle
jge
jg
and
xchg
push
sahf
xchg
lret
ret
jmp
jne
bound
adc
sub
rcrb
push
add
pop
aad
add
pop
adc
fisttpll
push
push
aaa
cld
mov
int
test
inc
cltd
mov
jno
cmp
fwait
sahf
jnp
sub
ljmp
leave
pop
push
mov
and
mov
dec
ret
or
popf
mov
rcll
jmp
mov
xchg
fisubrs
jp
jo
and
cmp
andb
xor
ljmp
mov
popf
test
shll
cmp
mov
push
shlb
inc
push
ljmp
sub
popf
data16
mov
icebp
xchg
cmp
out
jb
xlat
jg
or
jle
pushf
loope
inc
insl
ss
repz
adc
push
mov
pop
inc
sar
call
loopne
int
push
mov
js
push
inc
sti
stos
movsb
dec
add
inc
jne
cmc
ljmp
clc
mov
xchg
xchg
xor
int3
push
loope
mov
mov
lcall
popa
pop
push
ds
cmp
lea
std
pop
xchg
jp
int3
cld
aam
jmp
and
push
das
cmp
aas
pop
and
xor
pushl
pop
xor
dec
push
push
jnp
jecxz
cmp
roll
fmul
inc
fdivrl
daa
and
mov
cmp
ljmp
jle
call
dec
idivl
movsl
add
inc
fldl
rcll
mov
or
test
or
sub
int
mov
mov
lcall
shlb
mov
push
test
or
aas
mov
decl
es
call
mov
xchg
std
insb
pop
xor
stc
nop
fcomip
lcall
add
adc
cmpsl
xchg
jle
mov
mov
mov
int
call
es
jne
jl
pop
sbb
js
add
jecxz
gs
aaa
lret
push
mov
sti
iret
jle
cmp
xchg
pop
mov
dec
or
pop
out
inc
mov
push
and
mov
pop
lret
insl
ljmp
xor
mov
dec
lcallw
jno
push
sahf
mov
push
sbb
add
push
lahf
inc
mov
jnp
shr
aaa
in
sub
decl
dec
ret
in
test
mov
aam
lahf
inc
mov
fidivrs
jbe
stos
int3
icebp
jns
mov
call
into
jne
lds
nop
sub
out
loop
aad
aas
out
nop
jb
mov
ret
sbb
orb
pop
jl
jmp
xor
sti
pop
pop
bound
scas
ret
mov
sbb
adc
add
adc
cmp
or
push
jmp
add
daa
pop
roll
data16
cmpsl
or
jmp
fnsave
push
dec
add
mov
jne
jmp
inc
inc
call
cmc
push
xor
ficompl
jns
cmovge
decl
fdiv
mulb
and
lea
sbb
jg
mov
test
inc
lock
mov
int
out
adc
lcall
dec
dec
bnd
pop
lahf
clc
movsb
shlb
mov
je
iret
sbb
clc
adc
negl
pushf
inc
xlat
and
pusha
insb
adcl
mov
pushf
mov
cmp
sub
scas
jl
aad
lods
adc
rcrl
call
pop
push
sbb
mov
out
sbb
aas
sbb
fdivr
jg
fwait
ljmp
push
push
mov
mov
cmp
sarb
jmp
stos
mov
rorb
sahf
mov
push
dec
aaa
decl
cltd
mov
int
push
xchg
or
in
shlb
cmpsb
js
xor
daa
pushl
nop
mov
add
in
pop
mov
inc
mov
mov
mov
daa
and
mov
mov
imul
sbb
sub
pop
imul
pushl
inc
lods
mov
js
aaa
add
sub
insb
xor
jg
incb
fstpl
cmp
mov
sub
arpl
cmp
jmp
inc
push
out
orb
sahf
adc
dec
rorb
call
ja
inc
fldz
loop
ljmp
lret
insb
pop
adc
sub
jecxz
cltd
mov
outsb
add
xchg
fisubrl
imul
fxch
ljmp
push
cmpsl
nop
pusha
xchg
jo
pop
cwtl
mov
jns
icebp
mov
je
sarb
dec
xchg
mov
decl
test
cmp
lret
pop
iret
sub
jecxz
jle
rcll
sbb
std
lods
jp
hlt
movsb
call
sub
test
les
clc
cmc
cmp
std
rclb
or
and
mov
cmp
jae
or
inc
cmp
mov
mov
std
inc
push
shl
cwtl
xor
xorl
jmp
jo
rolb
clc
or
std
test
pop
imul
dec
insb
cmp
sbb
pop
ret
inc
outsb
cli
outsl
insb
in
cmp
push
inc
js
sbb
mov
mov
mov
push
or
lret
repz
scas
sbb
xchg
pop
test
mov
out
mov
cmpsb
sub
insl
aam
cmpsb
out
ljmp
add
pop
fdivrl
dec
sbb
xor
xchg
repz
or
pop
mov
push
push
sahf
mov
pop
mov
jp
icebp
rorb
sub
adc
or
jg
inc
in
test
jmp
call
dec
push
lcall
inc
jae
repnz
ss
inc
and
mov
ret
rorb
sbb
inc
out
mov
mov
push
mov
ds
aad
jmp
ljmp
xchg
mov
les
or
loope
mov
hlt
rep
and
incl
sahf
in
fisubrl
fs
cmp
jae
mov
std
lcall
and
out
loope
fstl
cmp
sub
mov
mov
cld
mov
outsl
push
add
jg
adc
aaa
rorl
js
dec
jg
or
mov
dec
std
lds
ss
ja
pop
xor
jmp
and
cmp
lahf
and
add
cld
mov
subb
mov
icebp
add
pushf
or
sarl
in
lods
lods
mov
cld
call
pop
xor
arpl
push
call
pushf
repz
inc
insl
xor
cmp
xchg
or
ficoml
es
call
xchg
mov
ljmp
pop
int
cmc
mov
inc
dec
popa
imul
jmp
pop
sbb
dec
aaa
bound
lock
call
add
xchg
mov
mov
test
nop
loop
sub
sub
outsl
adc
test
and
and
dec
mov
pop
jmp
adc
ds
push
mov
and
lret
scas
test
sahf
pushf
rcrb
fcomp
ljmp
mov
push
xor
pop
shlb
lods
sbb
sarl
xchg
js
mov
pop
jmp
jge
movsb
outsl
and
dec
sarl
push
insl
adc
inc
dec
mov
jl
int
scas
and
outsb
rolb
jmp
loop
cmc
call
imul
mov
pop
adc
or
stos
dec
cmp
rcrl
imul
mov
icebp
js
jnp
add
nop
mov
xchg
lea
lret
icebp
mov
cmp
out
mov
mov
and
adc
sar
ja
xchg
cmp
mov
outsb
dec
adc
insb
sbb
call
xor
testb
loop
gs
movsb
loopne
cmpsl
cwtl
scas
nop
lods
sahf
jle
mov
pop
mov
inc
lods
inc
rorb
dec
jecxz
cmp
inc
or
cmp
ret
mov
decl
dec
pusha
add
popf
imul
sar
or
rorl
jnp
comiss
dec
xchg
jecxz
xorb
push
xchg
mov
or
cmp
xchg
mov
clc
cmp
cmc
divb
mov
push
or
mov
call
push
inc
xchg
lret
and
pop
nop
jb
into
add
cmpsb
mov
add
decl
gs
adc
jo
mov
jb
mov
in
pop
mov
xor
push
cmpsb
cld
mov
imul
andb
pop
fcmovnbe
lret
mov
and
cmp
les
aam
add
notb
pushl
call
sbb
or
add
cmp
in
cmp
and
sbb
decb
lcall
and
addr16
aas
int
aaa
add
jle
pop
push
jb
jecxz
incl
mov
sysenter
pop
mov
xchg
jns
mov
enter
sbb
add
sarb
dec
xlat
scas
shrb
and
push
dec
or
mov
cmp
lcall
loopne
mov
out
rcrl
push
sar
ljmp
mov
cli
out
adc
add
jne
sub
es
stos
addr16
add
cmc
sub
push
loop
cmp
gs
lcall
pop
jp
dec
mov
ja
adc
cmp
inc
xchg
sub
mov
mov
pushl
icebp
sub
outsb
clc
popa
push
insb
clc
add
mov
sub
hlt
add
push
inc
mov
cmp
je
jg
sub
gs
xchg
jl
jae
mov
in
sbb
cmc
or
adc
decl
movsl
sub
fmull
jg
jo
push
inc
cmpsl
cmpsb
aad
shll
clc
bound
and
jae
loop
sbb
push
pushl
pushf
sbbl
cmpsb
or
daa
lcall
ss
jne
mov
fs
cmp
out
mov
andl
sub
out
adc
cmp
out
sub
push
addl
std
dec
lcall
lods
div
fwait
jbe
mov
movsl
mov
xchg
shlb
xchg
sbb
add
and
movsb
xor
or
aaa
gs
push
orl
xchg
xlat
loopne
sar
jmp
lret
or
mov
sarb
aaa
and
out
mov
xchg
or
dec
mov
mov
pop
mov
and
add
mov
push
push
bound
jg
or
je
adc
insl
inc
lret
cmpl
pop
cwtl
xor
sbb
rclb
mov
xchg
scas
sub
call
jb
mull
int
repz
ret
div
inc
loopne
je
pop
loop
fwait
add
ss
cltd
je
xor
and
xor
add
les
fwait
sbb
or
push
pop
ljmp
lds
adc
decb
lods
lock
loopne,pt
dec
or
fnsave
inc
jb
cmc
js
call
mov
orl
imul
jnp
fcmovnbe
and
mov
pushf
mov
push
inc
jl
mov
loop
fcomi
loopne
jmp
cmp
ljmp
clc
xchg
xchg
aas
clc
inc
scas
pop
std
pop
or
mov
jg
stos
lods
mov
lcall
add
xlat
sub
aad
pop
dec
andb
xchg
andb
js
xchg
mov
outsl
mov
or
jo
sbb
jb
or
test
sbb
mov
inc
outsl
jae
adc
cwtl
sbbl
pop
xchg
and
sbb
adc
sbb
or
sar
lcall
stos
testl
sahf
or
and
push
sbb
incb
mov
jg
lret
clc
jmp
stc
pop
inc
mov
mov
jg
test
out
and
jmp
bound
sub
and
pop
xor
jg
ret
mov
test
mov
add
jmp
mov
dec
pop
rcrl
pop
dec
std
xor
lcall
in
xchg
nop
mov
and
popa
daa
add
cmp
jae
rcrl
out
mov
lock
xorl
pop
jecxz
imul
pop
inc
xor
popa
pop
rclb
or
decl
pop
inc
sbb
xor
lods
outsb
lcall
enter
mov
jae
shl
jg
out
cmp
inc
push
add
decl
pop
jae
mov
jns
push
push
push
repz
lret
dec
sub
in
push
mov
lcall
cld
test
mov
add
jmp
pop
enter
shlb
lcall
dec
push
mov
pop
dec
rcrl
adc
cmp
ljmp
sbbl
ja
out
out
cmp
out
les
cmp
adc
call
lock
pop
mov
repnz
jb
xchg
sub
jg
pop
lock
mov
das
pusha
test
iret
xchg
es
inc
je
pop
cld
cmp
pop
imul
shll
push
stc
push
incl
dec
xchg
and
std
xchg
and
adc
inc
xor
inc
scas
add
mov
sub
nop
cmpsl
fstl
movsl
mov
ss
fwait
movl
push
push
shrl
fcomps
mov
xchg
icebp
push
mull
ret
xor
out
shlb
push
pushl
mov
aaa
fwait
clc
loopne
aad
mov
mov
mov
push
jge
out
cli
shlb
daa
mov
fldenv
sub
in
jae
mov
mov
sub
test
fcoml
xchg
sub
adc
lds
loope
hlt
lcall
sarb
xor
orb
enter
clc
jmp
loop
lahf
outsb
gs
sbb
addb
and
jbe
push
movswl
cld
ja
je
sti
xchg
lds
jp
jno
sbb
ljmp
inc
sbb
popf
xchg
mov
leave
movaps
lcall
xor
imul
pop
mov
sti
ret
lret
or
lcall
rclb
inc
std
mov
mov
cmpsl
dec
mov
in
xchg
sub
fs
mov
lcall
es
adc
in
inc
cmpsb
lcall
cmp
fistpll
lcall
xor
and
sub
imul
mov
dec
out
add
call
out
repnz
cmp
call
push
xor
dec
mov
sti
cltd
scas
sub
fisttps
movsb
adc
dec
and
sbb
xchg
xor
pop
push
jmp
push
mov
decl
sub
jg
cmp
xchg
and
add
push
movsb
movd
insl
stos
popf
adc
jmp
mov
mov
iret
xor
sarl
jmp
int3
dec
mov
nop
pop
fidivl
mov
ret
sti
stos
pop
xor
add
call
sbb
dec
aas
add
das
sub
test
mov
cmp
out
ljmp
cmp
outsb
add
push
ret
jbe
call
pushl
dec
xchg
xor
test
cs
mov
clc
call
xchg
clc
fidivrl
aad
hlt
sub
dec
mov
add
std
std
pop
dec
fsts
push
mov
dec
mov
into
ljmp
mov
sbb
jnp
sub
cmp
cmp
movsl
nop
scas
adc
mov
sub
call
scas
jnp
push
loope
clc
mov
mov
lea
sbb
lcall
pusha
aaa
hlt
push
sbb
iret
push
xchg
popf
pop
gs
mov
mov
test
mov
mov
jecxz
int3
push
ds
push
mov
incl
jo
adc
and
jmp
adc
and
in
cld
fisttpl
inc
xchg
subl
jmp
cmp
arpl
mov
les
jp
add
jmp
and
jmp
cmpsb
cs
into
mov
mov
cli
push
int
adc
adc
shr
outsb
jl
rcll
dec
jp
into
mov
sti
leave
jnp
or
cmp
mov
add
dec
test
push
leave
pop
in
imul
cwtl
fstpt
mov
sbb
movsb
repz
mov
xchg
sub
jmp
cmpsl
and
loopne
sbbb
mov
xor
pop
sbb
inc
sub
ret
ret
shlb
mov
inc
in
scas
xchg
mov
mov
push
fld1
push
fnstsw
call
xchg
sub
daa
cmp
cmp
xor
ja
jnp
pop
jne
nop
call
into
and
arpl
xor
or
adc
dec
shl
jo
shlb
test
insb
test
pop
dec
ret
add
sar
call
or
jp
mov
mov
jmp
mov
mov
ds
jmp
pop
cwtl
dec
add
js
sub
push
xor
lods
xor
push
mov
and
je
aas
lret
and
stos
sbb
jp
out
jmp
push
push
aam
vprotd
jns
icebp
fwait
shlb
mov
fldz
sti
inc
or
in
fsts
ds
jmp
int
mov
mov
stc
in
rcll
lods
movsl
cmp
adc
jecxz
lcall
int3
fisttpl
aaa
mov
repnz
sbb
iret
push
add
mov
aas
pop
fcompl
inc
popl
lcall
dec
repz
loop
and
sbb
or
dec
pushf
jl
pop
ja
std
jp
adc
xchg
xor
les
xchg
mov
fcomip
ljmp
std
sub
cwtl
and
mov
add
outsb
pop
call
lock
jo
jmp
adc
xchg
adcb
inc
xchg
cmp
ljmp
and
lahf
into
repz
push
pop
cmp
add
arpl
mov
imull
sar
in
lret
inc
enter
repz
xlat
cli
insb
push
and
xchg
test
cmp
clc
and
xchg
es
inc
movl
mov
repnz
inc
js
js
pop
pop
pop
hlt
mov
loop
test
fsubs
cmp
cmpsb
pop
xor
addr16
cld
pop
incl
jo
loop
or
js
fcmove
dec
or
pushf
je
ss
push
inc
call
lcall
xchg
pop
clc
dec
shl
xor
dec
je
out
neg
mov
add
out
fisubs
fcomip
repz
imul
ds
xchg
stos
xchg
or
pop
mov
xchg
xor
jg
jge
add
mov
in
lcall
jge
pop
inc
mov
pop
jae
xchg
mov
pop
cmp
or
xor
aad
lock
push
mov
jnp
xor
mov
xlat
rorb
stos
pop
mov
push
jecxz
inc
cmc
lea
xchg
adc
fdivrl
xor
int3
lcall
adc
cmpl
cmp
cli
inc
call
clc
fistps
inc
out
cld
adc
push
jge
xchg
loope
jmp
es
popa
pushf
js
pop
push
test
sahf
idiv
lahf
call
sbb
add
test
sahf
in
push
cmpsl
add
insb
adc
pushf
cmp
push
push
mov
lcall
ret
fisttpl
in
mov
arpl
xchg
je
mov
or
idivl
ljmp
stos
icebp
ljmp
mov
push
lods
sbb
mov
std
mov
sarl
jmp
in
xchg
pop
sbb
mov
movsb
inc
xor
sbb
mov
sub
test
call
cmc
js
lret
pushl
and
stos
inc
shrl
decl
add
imul
ds
push
shlb
call
mov
or
test
ja
mov
xchg
jno
add
data16
jmp
jbe
dec
stc
clc
lcall
sub
xchg
sbb
inc
mov
out
rcr
shr
sub
pop
and
jne
push
pop
mov
cmc
sar
inc
inc
xchg
mov
cmp
leave
mov
xlat
lods
loopne
cmpsb
lods
cmp
pop
jmp
adc
icebp
sti
aas
mov
outsl
cmp
cs
ss
insb
mov
pop
inc
in
cmpsb
dec
jmp
nop
rorl
add
cmpsl
mov
sbb
icebp
mov
dec
push
ljmp
scas
js
jb
xor
loopne
jne
in
loope
shl
iretw
pop
inc
adc
scas
jmp
cmpsb
mov
push
and
xor
fwait
bound
cmp
jmp
testl
mov
js
mov
add
out
adc
jg
scas
xor
imul
rol
xchg
sbb
outsb
lcall
xchg
into
pop
push
in
sub
dec
mov
test
leave
or
push
fadd
jle
dec
pop
imul
inc
cmp
dec
sbb
jb
call
xchg
mov
mov
stos
mov
sbb
rcrb
mov
incl
mov
cld
cmpsl
scas
add
dec
mov
push
cltd
test
sahf
xchg
mov
mov
and
call
jno
xchg
and
lret
or
push
pop
push
mov
jle
pop
mov
pop
push
push
cmpsl
sbbl
jle
outsl
icebp
cmp
loopne
out
cli
jmp
rcll
pushf
dec
test
add
sahf
lret
jbe
and
stos
or
idiv
call
ss
pop
mov
adc
mov
sbb
or
inc
adc
ret
dec
inc
clc
incl
shl
mov
dec
ljmp
adc
cmp
repnz
test
popa
shr
sbb
orl
xchg
sar
outsb
adc
arpl
mov
ljmp
dec
loopne
ret
iret
rorb
mov
cld
out
ljmp
jle
incl
pop
dec
and
mov
cmp
lcall
test
lea
xchg
xchg
outsl
cwtl
mov
cmp
incl
push
jbe
and
imul
pop
out
fwait
push
outsl
sub
pushf
out
fmull
arpl
jmp
das
pusha
fdiv
push
outsb
push
nop
pop
inc
push
in
sbb
jnp
fisubs
outsl
std
push
nop
mov
fnstenv
xchg
rol
xor
lock
bound
mov
jecxz
sbb
pop
cld
push
outsb
cli
mov
xor
pop
inc
sbb
inc
fsubs
or
push
pushl
ja
cmp
bound
dec
push
leave
adc
jmp
mov
scas
sar
ficoms
mov
jle
in
adc
inc
inc
and
mov
and
lock
incl
ds
xor
scas
inc
jne
and
js
push
jbe
pusha
aam
loope
test
dec
call
fs
cmpsb
mov
out
test
xchg
sub
inc
xchg
adc
call
push
fsubrl
mov
or
inc
lret
or
lret
sbb
xchg
fsubrl
aad
sbb
push
mov
or
gs
lcall
sbb
loopne
sahf
stos
sbb
cwtl
mov
jecxz
movsl
inc
dec
pop
or
or
mov
lret
cmpsl
fsubrl
insb
mov
xchg
in
inc
sub
inc
aas
mov
xchg
and
add
add
jmp
add
cmpsb
mov
icebp
es
sub
xor
sbb
data16
ds
in
sbb
testl
add
cmp
mov
cmp
insl
stos
push
push
sub
icebp
fisttps
add
hlt
cltd
bound
filds
test
pop
out
cmpsl
or
add
int3
cld
adc
gs
xchg
xlat
idiv
jg
ljmp
out
popf
addr16
rorb
lock
jecxz
ret
std
cmp
call
mov
or
sti
cmpl
sbb
add
lea
mov
scas
pushl
gs
dec
js
scas
icebp
cltd
cmc
jae
es
push
sub
rcll
mov
mov
clc
call
pop
adc
cmp
push
mov
cmp
shll
ljmp
gs
mov
and
xchg
mov
xor
sbb
cmpsl
jns
dec
cmp
lcall
pop
ljmp
and
stos
sbbl
std
mov
inc
rclb
call
test
fistl
mov
jae
dec
cmp
les
mov
das
ds
push
cmp
jb
pop
jnp
jecxz
mul
mov
xchg
mov
inc
jle
adc
sti
inc
dec
lds
xchg
inc
sub
mov
push
lods
fwait
push
cmc
leave
jg
ljmp
aam
loop
mov
pop
xchg
and
addl
out
lock
popa
cld
jo
add
fdivp
lock
cmpsb
jp
mov
decl
xchg
jae
pushf
test
sti
pop
lock
mov
mov
mov
bound
inc
inc
cmc
xor
adc
sub
or
sbb
push
leave
mov
fcoml
mov
jmp
jp
test
mov
in
xor
jecxz
scas
test
jnp
adc
test
outsl
clc
test
aas
cmp
sub
xchg
pop
js
push
call
fsubrs
mov
loopne
mov
movsl
fldenv
pushl
repz
ds
mov
shl
xchg
and
jecxz
ss
push
movsl
mov
cli
inc
dec
repnz
mov
mov
cmpsl
ja
sti
lock
and
pushl
pop
xchg
sub
mov
testl
mov
mov
fdivrl
std
sub
lock
dec
mov
shll
roll
and
pop
xor
outsl
imul
jbe
scas
xchg
mov
imul
jnp
das
mov
idivl
inc
ret
sbb
rcrb
mov
and
lods
loopne
xchg
sub
xchg
cmp
xor
add
jmp
ficoms
pop
int
pop
out
xor
decl
lock
mov
xchg
jp
repnz
jo
mov
mov
add
lea
js
inc
mov
push
sbb
push
incl
lahf
in
je
push
cld
call
and
mov
or
scas
sub
push
jb
ret
ljmp
mov
xlat
pop
mov
movsl
daa
and
pop
jg
mov
lds
dec
fisubs
scas
lret
icebp
fwait
pop
inc
jnp
dec
leave
in
push
stos
pop
cmp
bound
sbb
mov
call
jnp
jb
shlb
push
lea
int
jmp
add
push
inc
and
out
scas
xchg
mov
fsubl
test
pop
sbb
repz
cmpsl
stos
and
sar
and
jne
mov
mov
jns
dec
fmull
arpl
adcw
in
bound
std
decl
pusha
lods
sub
xchg
add
adc
pop
mov
fimull
jmp
cmp
dec
int
icebp
mov
pop
push
xchg
scas
jle
cmp
mov
out
clc
sbb
push
jg
jg
mov
add
sar
xchg
test
jp
and
call
scas
lods
push
sub
mov
decl
mov
enter
in
and
cmp
dec
jle
imul
stc
mov
neg
add
minps
lods
push
fistpl
dec
sahf
outsb
pop
mov
call
les
faddp
pushl
adc
test
sub
rcll
sti
add
ljmp
ret
ret
jge
sbb
jmp
adc
push
jno
sti
loop
jmp
sub
jmp
movl
rdtsc
movsl
lcall
inc
push
fadd
ss
shrb
orb
jg
das
clc
xor
pop
ja
mov
cli
mov
push
lock
push
sub
xor
sahf
sub
jmp
loope
out
push
sbb
clc
cmc
fs
cmc
cld
sti
stos
jo
pop
cs
ljmp
xor
fs
aam
icebp
xchg
lea
scas
gs
xchg
push
sub
sub
lahf
ret
decl
ds
xchg
std
push
add
scas
mov
jb
mov
std
ja
and
cmp
inc
scas
or
and
mov
mov
fwait
cmc
les
aaa
sub
out
and
cmp
ds
cmc
adc
inc
aam
xlat
inc
leave
cmpsb
jno
cmc
mov
incl
mov
mov
fcomps
sbb
pop
and
stos
in
cmp
shll
pop
xor
jg
pushl
push
dec
push
insl
push
lcall
test
push
jecxz
pop
jbe
out
popf
mov
push
nop
mov
push
inc
mov
movsb
incb
sbb
xchg
loope
int
or
andl
xchg
and
leave
mov
sbb
mov
pop
or
loop
add
imull
lock
jo
aaa
rol
decl
roll
cmp
jmp
ljmp
inc
test
sbb
xor
rcrb
inc
lahf
das
pop
mov
mov
jmp
push
int
jae
dec
add
lcall
aad
stc
sahf
loop
sti
jbe
ret
mov
fidivrs
adc
ljmp
push
jnp
mov
std
cmp
imul
push
add
pop
xchg
pop
icebp
pushl
ds
sub
mov
or
add
adc
iret
fcmovb
incl
sahf
repnz
shll
xor
dec
clc
sbb
or
jne
xchg
inc
cmp
inc
cmp
jle
aaa
arpl
hlt
and
or
jnp
ljmp
out
jne
mov
pop
and
xchg
adc
mov
cmp
xchg
outsl
adc
pop
fistl
add
inc
pushf
xor
push
sub
push
inc
cmp
dec
das
fisubl
outsl
pop
fwait
push
xchg
adc
inc
jmp
cmpsb
xorl
insl
pop
fcoms
adc
insl
and
or
subl
faddp
sarl
add
pushf
and
push
mov
push
outsb
jbe
fbstp
in
andb
cmp
popa
ffree
xchg
lock
mov
push
add
inc
sbb
jp
stos
out
push
mov
dec
call
out
inc
pop
pop
je
cmp
lcall
lds
jl
sub
sub
dec
shrl
roll
aas
sbb
das
push
test
test
call
xor
js
out
sbb
xchg
sub
repz
test
pop
lods
mov
call
push
cli
lret
ja
leave
pop
shrb
rorb
pop
pop
jo
enter
jg
in
push
das
imul
push
das
mov
dec
es
aaa
push
dec
jecxz
fisttps
jmp
adc
in
cmpb
dec
div
scas
inc
data16
and
jl
lea
sub
test
imul
mov
cmp
lahf
ljmp
lcall
pushf
test
inc
sbb
lds
and
decl
outsl
sbb
aad
adc
mov
and
push
out
clc
lcall
push
mov
or
lods
or
xorl
mov
cli
daa
sub
dec
mov
cmc
and
in
adc
pop
loope
jne
call
jg
enter
cmp
ret
pop
les
out
gs
cmpsb
sbb
hlt
aad
enter
push
out
sbb
insb
out
sub
inc
ret
inc
int3
fistpl
xor
test
pop
addr16
out
and
in
push
mov
insl
cmp
loope
cmp
or
stos
jl
mov
adc
pop
xor
jle
into
call
mov
push
mov
pop
sahf
imul
cmp
adcb
xchg
cltd
jg
jbe
mov
stos
mov
sub
shlb
cmp
ljmp
stc
xchg
arpl
mov
mov
pushl
add
inc
xchg
mov
pusha
loop
in
xchg
ret
test
ljmp
inc
repz
mov
sbb
dec
xchg
inc
cmp
std
into
or
jno
ljmp
jle
into
jg
sbb
cs
and
sbb
stc
pop
call
in
dec
dec
push
sub
xchg
mov
adc
adc
pop
jnp
sarb
cld
mov
cli
insb
roll
incl
dec
dec
dec
cld
mov
jne
jo
xchg
iret
shl
decb
mov
movsl
sahf
push
testl
fisttps
sub
jmp
cltd
out
scas
cmp
mov
jae
push
cmpsl
pop
insb
add
xchg
test
test
lret
mov
ljmp
mov
jp
xor
xor
inc
clc
int
cmc
fcmove
hlt
sbb
fisubl
addr16
inc
rorl
cli
jmp
and
fs
add
add
pusha
mov
cmp
lcall
int
pop
mov
setnp
call
in
add
sbb
das
adc
or
bound
fcoml
xchg
int3
cwtl
mov
decl
int3
xor
outsl
or
inc
ret
pop
cwtl
das
movsb
xor
inc
cli
pop
adc
jnp
dec
mov
frstpm(287
mov
sub
aad
imul
ret
sbb
sbb
stos
add
les
outsl
push
jg
bound
jge
aaa
iret
stos
and
je
scas
adc
pop
in
xchg
sbb
lock
pusha
cli
in
std
decl
call
jb
jo
dec
ret
sti
cmp
sbb
stos
imul
inc
int3
mov
pusha
imul
call
dec
movsb
xor
movsl
pusha
pop
or
fdivl
mov
jecxz
xlat
ss
call
mov
cltd
loope
loopne
ror
xchg
fcoml
sbb
lods
mov
add
push
iret
sti
hlt
inc
pop
lock
call
daa
sbb
cmpsl
int3
cmp
lret
mov
lcall
adc
movsb
pop
ret
scas
rol
ja
push
fidivrl
cmp
mov
and
lods
xor
insb
jge
jb
mov
fstpt
sub
sub
xor
hlt
mov
jg
dec
mov
push
lret
and
shll
sti
and
decl
xchg
call
sub
mov
cli
lret
aad
loope
pushl
cmp
iret
cmp
aas
inc
stos
popf
cli
decl
ss
cmp
insb
mov
cmp
sub
sub
and
cli
ljmp
sub
push
pusha
inc
push
mov
imul
xchg
jmp
out
dec
jg
aad
in
xor
xor
mov
dec
adc
and
jb
ljmp
mov
mov
sub
cwtl
in
popf
add
xor
orl
mov
jmp
sub
sti
sbb
jp
and
push
pop
jns
mov
sub
lret
mov
pop
lcall
or
sbb
pop
lret
aas
ds
jg
je
out
outsl
es
std
jmp
rolb
lret
inc
mov
popa
les
push
sub
jg
fs
aad
ficomps
addl
or
ja
inc
cld
inc
loopne
mov
fcoml
and
jle
js
sbb
jbe
mov
jne
push
push
ret
pop
cli
lcall
loop
push
out
add
out
les
push
into
and
ljmp
xchg
shrb
sbb
xchg
outsb
inc
xchg
insl
js
negb
insl
aad
pop
mov
or
pushl
js
lds
inc
inc
loope
push
pop
cwtl
sbb
lret
jp
addl
loopne
cmc
jmp
aaa
loope
pop
xchg
cltd
sub
lret
cli
cmp
fmul
mov
push
movsb
mov
fstpt
pop
fcomip
pop
lock
cld
mov
enter
cmpsl
stos
pop
jl
popf
inc
int3
mov
or
jmp
sbb
xchg
xchg
lcall
adc
and
xchg
push
not
jp
sbb
in
mov
pop
ficompl
push
mov
incl
loope
out
sti
loope
mov
jp
rcrb
rep
push
call
cmpb
in
in
dec
popa
repnz
sbb
adc
sub
mov
jge
iret
jo
cwtl
bound
push
and
lcall
lret
cmpsb
mov
jo
mov
mov
xchg
lret
popf
mov
jle
pop
outsb
or
into
cwtl
dec
mov
imul
das
clc
cmp
push
xchg
jecxz
mulb
sahf
dec
add
test
aam
call
xchg
mov
xchg
pushf
lcall
in
lret
push
mov
movsl
mov
stc
inc
add
jno
pop
mov
icebp
sub
into
call
add
xchg
pop
bound
in
add
add
enter
jmp
pop
mov
inc
jae
push
int
stos
jl
inc
mov
andl
xor
incl
and
adc
adc
ljmp
or
aaa
cmpsl
jmp
add
into
sarb
stc
dec
stc
pop
fisubrs
sbb
incl
and
pop
lock
insb
fildl
sbb
xchg
pushl
ror
pop
test
xchg
or
lcall
pop
ljmp
mov
or
xor
or
mov
xchg
adc
cwtl
push
add
decl
loop
aaa
sahf
push
cmpsl
and
dec
cmpsb
pop
les
fldenv
lcall
add
repnz
pusha
or
and
cltd
loopne
inc
pop
xorb
cli
lods
mov
add
es
mov
mov
cmp
dec
add
add
dec
dec
jmp
xchg
push
mov
jo
negb
mov
xchg
pop
in
push
roll
push
std
add
cmpb
mov
in
jnp
fisubrl
jmp
dec
inc
pop
cld
cmp
or
out
mov
ret
ja
loope
mov
sahf
jae
out
insb
lret
cmp
incl
in
cld
imul
xor
push
dec
push
xchg
push
and
add
dec
je
adc
mov
cs
out
fstps
push
aam
ret
aaa
lret
inc
inc
sti
testl
pop
mov
repz
add
push
dec
sub
pop
lds
xor
rcrb
cld
out
and
pop
data16
fsubl
arpl
test
aas
and
into
mov
jmp
xor
mov
call
insb
enter
sub
push
imul
add
inc
pop
cmpsb
cmp
and
push
out
cmp
ja
popa
and
and
add
lods
pop
mov
adc
fs
std
fcoml
xor
pop
fimull
test
dec
dec
mov
sahf
pop
inc
insb
call
xchg
lea
jae
pop
adc
or
jge
cmc
inc
lock
outsl
out
pop
push
mov
std
pushf
decl
jecxz
push
das
adc
movsl
or
sbb
iret
mov
jae
out
push
imul
push
adc
push
push
cs
pop
adc
cltd
in
hlt
notb
decl
loope
dec
enter
sti
jne
xchg
sub
adc
repz
aad
mov
jns
enter
cmp
mov
pop
imul
xchg
cmp
mov
jmp
lahf
daa
cltd
mov
add
cld
mov
dec
dec
ss
xchg
jne
push
pop
mov
pop
fnstsw
jbe
pushl
push
jecxz
add
test
outsb
fsubr
adc
outsl
std
test
imulb
lock
xchg
add
andl
into
sub
pop
shll
imul
ret
xchg
cltd
insb
clc
decl
mov
fsubr
clc
inc
sarl
dec
pop
sub
sahf
scas
and
incl
or
imul
or
data16
movsb
push
cmp
sar
add
fsubs
xchg
and
fldenv
xchg
repnz
xor
ret
cs
lcall
enter
pop
imul
push
add
pop
cmp
hlt
ret
mov
mov
mov
movsb
outsb
inc
loop
mov
shlb
sar
and
xchg
jg
imull
inc
pusha
xor
popa
xchg
icebp
rcll
push
jl
dec
iret
js
cmpsb
jp
mov
fcmovnb
pop
push
scas
mov
inc
ss
ds
call
inc
lret
adc
lret
fiadds
add
cmp
insl
lea
xor
or
ljmp
push
nop
inc
fdivs
dec
lods
inc
xchg
or
xor
cmp
pop
pop
adc
mov
ss
call
jbe
movsb
push
aad
inc
cmp
jl
push
insb
into
sbb
dec
push
inc
pusha
xchg
xchg
jae
ljmp
lcall
ja
sub
mov
mov
call
dec
pusha
push
cmp
sub
xchg
jp
mov
jmp
or
les
pop
mov
pushf
incl
sub
xor
mov
lcall
xchg
mov
test
xchg
cmc
mov
aas
xchg
mov
movsb
lret
mov
jg
pushl
add
push
cmp
cld
adc
add
push
and
fsubl
ret
xor
jp
sbb
xchg
bound
and
xor
testb
pop
add
test
fdivs
test
sub
pop
iret
fucompp
cmp
pop
jmp
jmp
jp
mov
cmpsb
flds
mov
incl
sub
out
imul
push
sti
sub
push
adc
push
jne
aaa
cld
jp
inc
pop
mov
clc
enter
mov
cmc
jns
mov
jmp
inc
repz
inc
imull
in
lock
mov
es
call
pop
or
inc
sar
jo
ficomps
out
into
lods
test
cmp
test
stos
lock
xlat
xchg
test
xchg
leave
or
test
fs
add
cmp
push
xor
int
pusha
cmp
adc
test
jg
nop
dec
dec
stos
cmp
rcrb
sbb
mov
aad
ret
jl
mov
mov
hlt
daa
data16
xor
hlt
pop
mov
pop
stc
negb
cmp
xor
or
adc
in
adc
xor
rclb
lods
repz
jg
incl
push
lods
or
push
lods
push
cmp
lock
jmp
fisttps
adc
fdivrp
decl
or
enter
mov
and
dec
jge
lea
and
pushl
inc
mov
dec
add
xchg
sti
arpl
dec
shrl
les
xchg
push
push
xlat
mov
sti
cli
dec
dec
ljmp
add
andl
mov
pop
mov
out
sub
jmp
out
outsb
lahf
inc
jnp
cwtl
in
pop
outsb
subl
sub
shrb
cmp
jg
hlt
scas
fldl
jb
lock
jno
push
mov
insb
repnz
sbbl
jns
insl
xor
inc
pushf
push
cmp
out
test
sbb
mov
decl
stos
cld
push
cwtl
fistpll
xlat
jne
out
imul
addr16
xchg
cwtl
and
std
push
add
decl
mov
pop
leave
sub
out
mov
loopne
ljmp
std
or
push
or
xchg
or
hlt
dec
pop
insl
orl
mov
es
lret
aam
rclb
mov
fidivrl
in
jg
inc
ljmp
push
xor
pop
movsb
push
scas
pop
aad
stos
hlt
cs
xchg
and
inc
repz
adc
xchg
and
and
sbb
sub
loop
mov
jo
adc
shlb
sbb
mov
mov
call
mov
xor
cmp
xor
in
mov
dec
fs
mov
mov
call
mov
or
push
popa
sbb
sbb
mov
incl
adc
dec
push
btcl
push
cmp
fiadds
repz
jmp
cmp
jg
test
fld
cmpsb
or
fnsave
or
adc
adc
sbb
push
js
aad
mov
repnz
lods
sarl
cli
push
push
adc
shl
imul
cld
sub
xchg
int3
jae
lock
dec
cwtl
or
pop
daa
lock
adc
shlb
or
sti
push
fcompl
loop
call
cmp
add
and
rclb
jbe
lahf
insl
cltd
cwtl
cld
outsl
push
jecxz
xchg
pop
sarl
mov
xchg
fldcw
ja
repnz
push
loopne
shr
mov
pushf
lock
decl
fnstsw
push
sbb
loop
imulb
inc
testl
mov
mov
into
and
scas
arpl
pusha
fs
pop
push
mov
in
out
dec
push
ss
mov
and
xchg
add
xor
decl
jb
adc
add
sbb
ja
pop
in
ficoms
inc
cld
dec
je
mov
mov
jl
scas
or
mov
jg
push
push
adc
scas
push
rol
mov
mov
pop
add
cmp
dec
lret
adcb
ss
movsl
incl
xchg
cmp
stos
dec
push
mov
jne
add
dec
leave
mov
mov
inc
or
clc
sbb
sub
mov
or
cs
inc
mov
enter
aas
fcomip
call
roll
cli
ret
icebp
jno
jmp
pop
mov
test
iret
test
loope
cmp
jle
negb
cld
mov
or
pop
cmpl
sub
adc
insb
sbb
outsb
popa
leave
fdivp
cmpl
mov
pop
jns
cmp
cmc
add
mov
fimull
inc
or
loope
xchg
xor
mov
gs
stc
inc
arpl
loope
xchg
ficompl
out
dec
fidivl
lock
cld
mov
mov
loope
push
rep
jle
push
ret
push
movsb
sub
outsb
lcall
sti
lcall
stos
sub
hlt
sub
loop
pop
xlat
or
mov
jp
cmp
xor
push
adc
iret
movsb
push
les
test
fbstp
xor
out
inc
mov
mov
dec
adc
sti
pop
push
xor
push
les
std
jmp
dec
addr16
popf
popa
jb
out
cmp
out
jne
imul
pop
pop
ljmp
call
xchg
dec
fidivrs
pop
mov
add
sti
fistps
mov
or
mov
in
lds
mov
ja
sahf
aam
subb
incl
sti
add
in
loope
js
shl
xor
mov
lods
cmp
decl
mov
sbb
flds
xchg
rorl
jns
mov
jo
fcomip
lcall
or
fisubs
mov
push
mov
xor
incl
lods
mov
movsb
dec
push
jns
arpl
in
filds
jp
and
add
into
jp
movsl
or
sub
cmp
lcall
outsb
xchg
sbb
cmp
push
es
sub
adc
lcall
or
decl
pusha
rclb
rcrl
js
jmp
ret
jbe
ret
mov
pushl
mov
jnp
inc
xchg
pop
xchg
jno
pop
add
aam
dec
or
fcos
lcall
stos
int
add
xor
test
aaa
or
incl
arpl
sub
jns
xor
xor
insb
push
testb
outsb
adc
ljmp
sub
idivb
dec
divb
sahf
adc
xchg
mov
jg
in
pop
push
and
scas
mov
cmp
mov
push
cmp
incl
pushl
mov
fisubrl
inc
and
int3
fs
enter
out
cld
je
lods
call
sbb
call
xor
xor
xchg
lret
mov
fbstp
pop
test
push
xlat
xchg
adc
pushl
inc
jmp
mov
movsb
pop
push
mov
leave
pop
outsl
jle
int
adc
cmp
test
orb
jno
or
fisubl
mov
outsb
add
pop
imul
jg
mov
je
mov
xchg
mov
cmp
mov
xchg
jo
xchg
mov
or
inc
mov
repz
sahf
fstl
inc
jg
pushl
sbb
int3
push
xor
jae
test
and
sbb
lcall
fucomp
scas
shll
inc
movsl
stos
dec
or
aam
frstor
mov
and
cmp
scas
incl
sub
sub
mov
xchg
pusha
mov
fnstcw
mov
inc
sar
inc
adc
iret
lods
int3
repnz
pop
mov
adc
cmp
cmp
dec
xchg
sub
xchg
imul
arpl
fnstsw
aaa
rol
xchg
movsb
inc
and
jg
push
lret
sarb
push
jns
cmp
ljmp
pop
out
pop
xchg
mov
nop
ret
sarb
cmp
mov
call
push
movsb
jo
inc
lods
es
rorl
lds
pop
aaa
ljmp
xor
std
xor
scas
in
sub
in
mov
inc
inc
setg
pop
in
mov
pop
faddl
sbbb
icebp
rol
cmp
lahf
pop
cli
and
and
push
scas
das
js
stc
iret
xchg
adc
xor
and
or
mov
pushl
and
xchg
cmp
pop
mov
sbb
sbb
mov
and
ljmp
popa
push
imul
or
dec
out
mov
js
leave
mov
mov
outsb
or
insb
movsl
cmp
loope
or
movsb
add
decl
int3
cmp
int3
ret
fcmovb
pushf
lds
enter
lock
sbb
into
push
in
pop
mov
fwait
dec
mov
xchg
xlat
in
mov
xor
js
cmp
dec
sti
cmpb
lcall
inc
add
pop
into
hlt
rolb
jmp
hlt
rolb
test
push
xlat
call
neg
and
xor
lret
xchg
and
stc
jmp
ret
mov
incl
mov
pop
pushf
adc
pop
sbb
lahf
cwtl
in
cmp
or
clc
and
push
lahf
or
fxch
aas
jnp
fdivrs
pop
insb
test
mov
pop
inc
loop
ljmp
xor
pop
dec
aas
or
int
insl
movsl
dec
xor
mov
mov
js
cmp
mov
rcll
outsb
fldl
icebp
pushl
sub
lods
rclb
push
pushf
hlt
push
mov
js
std
push
adc
test
in
fsubs
out
cli
mov
sbb
loopne
lcall
cli
not
mov
push
in
push
mov
aad
mov
decl
jmp
xor
jg
inc
int3
lea
dec
iret
inc
bound
add
ljmp
add
fisubrs
cmc
repnz
xorl
rorl
test
push
clc
mov
aam
xchg
add
push
pushl
cld
das
or
sti
pop
or
movsb
pop
imull
inc
mov
cmp
ljmp
sub
jo
outsl
jge
hlt
and
jns
das
jg
lret
aad
nop
push
mov
sbb
push
cmp
je
adc
mov
les
xor
sti
sub
or
mov
pushl
outsl
mov
xor
imul
mov
pop
sub
jno
xchg
mov
loopne
adc
pushf
cvtdq2ps
or
mov
jg
jle
adc
aam
inc
in
out
adc
mov
mov
mov
sbb
adc
push
adc
out
mov
repz
test
jo
int3
mov
gs
mov
xor
adc
out
jmp
sub
cmc
mov
in
xchg
ljmp
incl
mov
outsl
test
dec
outsl
inc
adc
mov
lods
push
sahf
sar
cld
jecxz
sti
mov
mov
sub
cmp
mov
ds
js
dec
stos
and
mov
jle
xchg
test
lcall
inc
popa
fs
adc
dec
and
sti
push
in
cmp
arpl
movsl
pop
mov
push
adc
daa
outsb
cmp
or
int3
push
cmpsb
and
xchg
decl
inc
nop
dec
ss
clc
mov
std
stos
lret
jg
ljmp
mov
adc
popf
mov
sbb
clc
idivl
dec
push
popf
stos
iret
nop
clc
gs
jg
cmp
push
stos
cmp
add
mov
jmp
int
xchg
push
sbb
ljmp
shlb
sub
or
inc
jnp
xor
mov
jmp
sbb
jle
scas
xchg
xchg
rcl
sbb
mov
mov
out
inc
call
or
js
push
mov
push
dec
test
out
sub
and
fsubrs
dec
xor
fwait
add
call
lcall
outsb
mov
sbb
stos
inc
lods
test
push
xchg
fwait
add
mov
sbb
jge
je
sarb
sbb
popa
int3
ljmp
ljmp
dec
stos
lahf
xor
xchg
mov
call
or
incl
cs
das
das
dec
sbb
mov
stc
hlt
in
jecxz
outsb
fcmovbe
push
and
pushl
gs
jge
rcr
test
gs
in
sub
mov
and
push
mov
cmp
test
and
xchg
aaa
adc
incl
pop
call
adc
xchg
rolb
lret
or
incl
js
mov
pushl
sub
jae
fidivrs
popa
out
mov
in
arpl
dec
inc
sar
pushl
jl
das
bound
mov
push
inc
leave
cmp
sahf
stc
in
jge
and
out
mov
call
dec
dec
push
fcoms
jno
pop
sbb
inc
mov
sub
or
call
int
push
dec
fmuls
dec
xchg
cmp
inc
pop
mov
adc
jae
insb
test
call
scas
cmp
popf
and
push
mov
rcrl
jmp
daa
add
lds
cld
orl
inc
ljmp
pop
dec
lcall
bound
mov
test
test
dec
push
bound
xchg
mov
add
jmp
xchg
xchg
lds
clc
call
out
push
ds
sub
fiaddl
push
in
cltd
leave
icebp
das
ds
int
decb
push
loop
fisttpl
arpl
pavgw
jle
mov
out
or
mov
or
mov
stos
int
mov
lret
jmp
mov
mov
ljmp
xor
mov
xor
in
mov
repz
daa
sub
push
xchg
jg
cwtl
mov
pop
xchg
stos
xchg
sub
mov
mov
pusha
cmp
cmpsl
pop
fwait
mov
ljmp
popa
stc
push
sub
cmp
pop
push
icebp
cmp
lds
mov
mov
cmc
imul
movsb
jp
inc
inc
sbb
fcos
call
mov
pop
jmp
or
push
in
imul
add
mov
mov
shll
sbb
mov
fsts
incl
push
and
or
pop
sub
inc
jbe
sub
jl
xchg
cmp
mov
mov
call
push
iret
or
and
jl,pn
mov
sub
mov
fiadds
cs
in
mov
and
fcomip
mov
pop
push
movsl
and
or
xchg
and
cld
decl
data16
dec
dec
mov
gs
popf
mov
cmp
xchg
sub
pop
mov
daa
fwait
in
leave
in
pop
sub
ljmp
lock
push
js
sbb
xchg
ljmp
push
push
lret
incl
daa
fisttpll
cmp
xchg
outsl
or
lret
imul
push
imul
fildl
in
mov
pop
outsb
fbstp
dec
lcall
mov
jnp
or
loope
ret
push
pop
mov
popf
push
sub
add
data16
sar
cmp
pop
lret
inc
mov
divl
mov
mov
pop
dec
jmp
push
sbb
fidivrl
and
leave
inc
xchg
pop
adc
adc
ret
out
sub
mul
push
je
mov
push
orb
push
test
sarl
lea
sbb
fbstp
xor
lods
loopne
and
push
mov
xchg
out
adc
mov
fdivr
fs
push
scas
cld
aas
stos
repz
and
fnstenv
in
repz
inc
icebp
fidivrl
sbbb
in
mov
mov
or
inc
inc
aad
cmp
pushl
pop
jge
and
ret
sbb
jne
lret
or
pop
es
push
jle
jns
push
lcall
or
rol
push
mov
sti
clc
and
movsb
push
mov
jbe
scas
loopne
jl
mov
lcall
xchg
xchg
sti
fbstp
inc
jl
mov
xor
push
mov
outsb
xlat
mov
pop
repz
push
push
scas
jnp
xchg
pop
fbld
pop
lcall
push
adc
xlat
mov
test
outsl
clc
push
std
cmp
inc
cmp
push
add
int3
repz
int3
daa
pop
inc
pop
incl
negl
mov
sub
lahf
sbb
pop
aas
cli
jbe
outsb
lea
cmpsb
jbe
pop
mov
add
jo
or
push
into
aad
dec
aad
add
lret
test
jno
ja
scas
xor
test
jmp
mov
inc
and
cwtl
rep
jns
jb
mov
outsb
lret
mov
cli
pop
pusha
mov
lahf
sub
push
jo
cmpsl
ljmp
stos
pop
xchg
and
outsl
fiadds
lret
pushf
lock
daa
clc
fistpll
jg
test
lcall
push
lods
into
lret
xchg
inc
enter
pop
fcmovu
push
imul
mov
sub
pushl
int3
ret
and
jg
insl
sbb
lret
stc
pop
fsubrs
test
pushl
popl
jl
aaa
pop
lcall
push
ljmp
cs
nop
inc
roll
lock
mov
stos
shrb
cwtl
fisttpl
or
iret
push
std
repz
stc
stos
mov
inc
out
or
jmp
jmp
lcall
ret
mulb
call
adc
mov
lds
ja
std
adc
jecxz
cmp
arpl
jmp
js
gs
push
adc
sbb
cwtl
sbb
test
icebp
mov
xlat
mov
or
push
sbb
sarl
xor
sar
les
insb
xor
add
aad
or
arpl
and
dec
add
decl
imul
shrl
or
ds
add
jmp
out
in
movsl
add
sub
ret
xchg
xchg
pushl
outsl
sbb
ret
cld
and
in
fistpll
mov
mov
inc
adc
push
call
mov
adc
pushf
leave
adc
pop
incl
cs
xchg
les
pop
cltd
mov
fstl
pop
inc
mov
jmp
int
mov
pop
xor
cmp
push
adc
or
call
xchg
sbb
lods
fdivs
cmp
jbe
jo
mov
cs
cld
cmp
push
nop
cmpsl
hlt
xchg
shll
imul
sbb
and
sbb
cwtl
je
incl
gs
jb
pop
mov
shl
dec
cli
mov
ds
mov
jmp
pushl
shlb
aaa
imul
aas
mov
or
sbb
mov
test
push
jg
movsl
mov
pop
dec
ror
adc
mov
repnz
nop
pop
nop
cmp
mov
mov
and
je
movsl
insb
out
cs
add
pop
out
sbb
jnp
or
repz
out
loopne
lcall
std
stos
in
popf
pop
negb
movaps
add
sbb
fs
add
mov
pushl
scas
cmp
pop
xchg
xlat
shl
lods
lds
cli
test
mov
or
mov
scas
mov
ret
dec
dec
mul
jo
sbb
pop
pop
ljmp
mov
lods
mov
testl
stc
decb
sbb
decl
call
dec
shrb
xor
and
adc
cmp
pop
incl
cltd
lods
sub
ss
test
cli
out
repz
or
cmp
clc
loopne
add
inc
insb
lcall
mov
or
repnz
pop
mov
mov
lods
sbbb
dec
jo
xor
mov
push
sub
enter
outsl
clc
jg
ficompl
mov
scas
push
gs
inc
das
sub
call
aaa
xor
test
dec
add
loopne
fs
stc
sar
mov
inc
lret
jle
rorl
bnd
add
sbb
and
add
aaa
adc
je
lcall
mov
mov
test
push
mov
add
cmp
test
cmp
inc
sbb
cli
nop
pushf
mov
sbb
sub
loop
sbb
nop
and
loop
pushl
loope
aaa
ret
daa
insl
repz
es
fsubrl
push
sub
and
or
popa
adc
cmc
test
aaa
push
and
bound
cmp
popa
out
fildl
mov
jg
stos
mov
add
add
fimuls
cmpl
cmc
loop
pushl
adc
aad
xor
fcompl
push
pop
inc
jmp
mov
jp
jg
jnp
ljmp
gs
adc
add
or
mov
test
cltd
xchg
jnp
push
ljmp
jg
aaa
clc
inc
clc
push
add
rclb
idivl
lods
jb
xchg
pxor
mov
imul
shlb
roll
ljmp
mov
lcall
cmp
orl
sbb
incl
call
test
lea
jae
add
imul
std
push
jmp
nop
push
add
cld
lcall
fdivl
mov
call
andb
scas
lahf
movsb
dec
aam
push
daa
xlat
incl
xor
inc
shrl
imul
jb
mov
not
xchg
pop
ret
lcall
sti
mov
pop
dec
mov
push
cmpsb
adc
pop
inc
gs
das
add
jmp
stc
xchg
repnz
push
xchg
mov
xor
cmp
lods
push
cmp
iret
jno
je
incl
adc
fcmovne
outsl
ret
xor
mov
dec
das
or
adc
clc
incl
repz
add
scas
gs
decb
cmp
dec
mov
push
cmp
mov
outsb
das
cmp
pop
sub
pop
and
adc
inc
arpl
pop
adc
lock
jg
pop
push
xor
mov
and
pop
or
or
imul
hlt
push
xchg
jp
adc
inc
bound
ljmp
push
ror
test
inc
dec
movsl
adc
iret
stos
xchg
push
ret
ljmp
loop
adc
ds
pop
outsl
outsl
or
or
sahf
pop
cmp
sbb
mov
jmp
rcl
int3
dec
lcall
and
cmpsb
cmp
and
negb
xlat
mov
cld
sti
mov
clc
ds
out
nop
jecxz
or
lahf
pop
push
sbb
xlat
in
fdivp
lea
into
lahf
insb
faddl
cmp
mov
sbb
in
xchg
mov
cmp
lcall
int
faddl
xchg
pop
jecxz
fsub
jge
pop
fst
lods
fldt
loop
cmc
call
xor
in
lret
push
ss
jg
pushf
jp
xchg
adc
adc
shlb
adc
sub
decl
sbb
and
lcall
push
lods
outsl
xor
adc
inc
adc
mov
and
cmpsl
rorb
sar
lcall
sbbb
add
cmc
lock
hlt
sahf
pusha
repnz
cmc
pop
nop
add
or
clc
jo
movsb
push
ljmp
xchg
gs
mov
mov
in
into
or
xchg
cmp
ljmp
pop
adc
aam
ss
inc
cwtl
aam
cwtl
dec
lods
adc
std
adc
add
mov
test
movsb
sar
jo
ror
mov
xchg
lds
std
lcall
out
mov
sub
pop
add
decl
add
pushl
xchg
das
pop
push
rcrb
adc
loopne
add
xor
and
push
jb
es
clc
stos
test
cwtl
int
icebp
sub
insb
aas
nop
rclb
call
jle
and
or
dec
ja
dec
lods
mov
pushf
jne
jl
shll
insb
or
dec
jp
cmpsb
inc
in
stc
in
sbb
push
pop
inc
inc
jmp
adc
sbb
cltd
push
sub
cmpb
aas
clc
pop
orb
fnsave
addr16
repz
cs
mov
jg
xchg
test
iret
inc
dec
add
decl
test
and
call
out
cmp
xchg
lcall
pusha
into
jle
and
sbb
int3
pop
mov
int3
jmp
mov
inc
jge
xor
push
lret
mov
xchg
mov
mov
loop
cmpsl
mov
push
xor
adc
shlb
cmpsb
test
adc
mov
inc
xchg
movsl
and
call
bound
and
push
pop
jmp
jns
mov
lcall
push
jbe
lods
nop
pop
push
mov
fldenv
jle
mov
not
push
mov
gs
lcall
mov
aas
push
jmp
cld
mov
push
pop
adcb
or
test
inc
mov
sbb
hlt
lcall
fisttps
jno
cld
xchg
push
fildll
lods
push
sbb
jmp
ds
jecxz
or
mov
test
decl
fwait
out
stc
pop
inc
cmp
mov
mov
mov
lret
lahf
adc
popa
test
clc
lcall
jmp
and
insl
hlt
loop
pop
fisubs
jo
pushl
call
pop
and
movsl
xor
addb
dec
add
sub
cmp
adc
inc
movsl
mov
mov
or
jle
loopne
mov
or
jmp
inc
adc
xor
pop
movsl
dec
popf
aad
repz
scas
jl
add
dec
jle
out
lahf
jbe
ret
mov
insb
lods
mov
lret
fisubs
clc
dec
or
push
popf
cmp
mov
push
fcomps
ljmp
jbe
jg
popa
inc
outsb
xor
adc
movsl
out
mov
cli
cmpsb
loop
pushf
decl
xchg
push
lret
push
jecxz
mov
dec
pusha
inc
and
inc
adc
jmp
lahf
mov
sub
push
lock
fwait
mov
dec
xlat
ffree
mov
scas
pop
scas
jne
aad
pop
scas
les
xchg
out
pusha
mov
pushl
stos
xor
fst
add
xor
out
and
jmp
jp,pt
pushl
bound
loopne
lock
mov
out
je
pop
pop
cmp
jg
adc
xor
mov
sub
aas
out
imul
test
incl
clc
jmp
add
mov
jecxz
incl
aas
mov
rcrb
mov
out
in
inc
insl
fwait
adc
loope
incl
das
aas
xchg
gs
push
adc
mov
out
mov
add
jmp
incl
push
fptan
pop
imul
cli
ja
dec
push
arpl
jae
push
mov
sub
int3
into
xor
out
push
push
cmp
xlat
clc
outsb
jmp
cmp
scas
out
pop
aad
mov
lea
sbb
ljmp
push
pushf
mov
sub
mov
jle
cltd
push
filds
or
fadd
test
xor
cmp
incl
sbb
dec
xchg
das
jmp
mov
decl
and
loop
dec
nop
cmpl
sbb
jge
enter
mov
std
sbb
add
xchg
xchg
mov
test
jmp
xchg
ja
cli
out
repz
mov
cli
loop
adc
jge
test
cmp
sbb
jo
lock
sub
cmp
jge
xchg
and
lcall
mov
mov
rclb
mov
push
insl
iret
jmp
sub
ficomps
push
sbb
dec
xor
jae
mov
lcall
cmp
stos
call
and
sbb
xchg
cmp
loopne
scas
xchg
adc
mov
sbb
add
mov
repnz
dec
mov
lock
jg
lcall
push
sub
mov
std
stc
andb
and
jo
or
pushl
in
lods
pop
jle
cltd
loope
jmp
mov
sbb
pop
jecxz
sbb
je
hlt
mov
dec
cltd
mov
dec
icebp
jnp
push
cmp
adc
push
xor
dec
fcoms
cmp
pop
add
add
maxps
es
add
loope
sub
roll
cs
jg
pushl
out
decl
nop
sbb
dec
scas
sbb
xchg
pop
push
fstpl
jmp
add
inc
dec
sbb
push
addl
lahf
push
sub
pop
leave
loop,pt
sti
testb
ljmp
cli
in
and
into
mov
fdivs
mov
lods
push
dec
sbb
aam
inc
dec
push
aas
mov
andb
pop
out
sbb
inc
inc
sbbl
mov
mov
js
push
popa
loopne
xlat
mov
xor
pop
jl
push
call
or
pop
fmull
jo
fdivrs
movsb
outsb
ja
mov
testb
pop
mov
and
imul
inc
cld
push
cmp
mov
aaa
inc
lods
cld
int3
adc
inc
dec
push
xor
xchg
lret
push
and
and
subl
stos
lcall
cmp
mov
sub
test
dec
mov
incl
into
stc
lods
and
loopne
and
jno
lret
and
xor
pop
cmp
fnstcw
adc
or
mov
jg
pop
push
sub
xor
xchg
call
std
sub
into
lods
sub
pop
push
daa
or
push
jno
push
jns
sub
lcall
lahf
cmp
and
mov
mov
ss
call
pop
add
jno
shlb
ds
mov
aaa
inc
adc
outsb
jnp
pop
fdivrp
call
push
mov
sbb
insb
mov
loope
push
xor
add
inc
lret
sub
in
test
and
cmp
xchg
pop
lds
cwtl
lret
movsb
inc
inc
mov
in
push
xlat
push
push
ljmp
dec
test
or
cmpsl
shr
fstpt
lock
mov
jnp
cs
sub
push
int
adc
icebp
dec
sub
call
pop
pop
fdivrs
inc
jb
add
pusha
pop
imul
js
test
mov
push
cld
sub
fs
pop
ret
ffree
push
xchg
dec
xchg
std
inc
fidivrl
notb
cs
adc
mov
sub
sub
outsl
decl
fs
inc
xor
cld
push
jl
jnp
mov
popf
push
test
adc
xor
and
stc
fcompl
jno
cmp
fisttpl
mov
fsubrs
rclb
ljmp
dec
cmpsl
arpl
lods
push
ret
xchg
dec
mov
scas
add
dec
inc
lahf
fidivrs
clc
cmp
fcoml
das
ss
cmp
jle
mov
fldl
cld
cmp
daa
pop
pop
adc
shlb
mov
mov
push
mov
mov
ficoms
inc
add
mov
je
jbe
mov
mov
push
je
jb
jmp
cmp
data16
pop
mov
ret
push
pop
dec
mov
test
dec
and
cs
pusha
fwait
or
loopne
cmp
ret
cs
inc
mov
in
out
cmp
ret
sbb
rcrl
repnz
sbb
cmp
rorl
adc
and
rcll
fsubrl
movsl
inc
jg
aad
jmp
adc
and
cs
scas
inc
mov
in
pop
lods
lea
sbb
mov
movsb
inc
sub
aaa
cld
cmp
dec
lahf
xor
lock
mov
cmp
clc
mov
insb
jo
sbb
pushf
mov
int3
daa
dec
in
decl
ror
clc
inc
pop
sbb
cs
cmp
inc
pushf
xchg
repz
mov
loop
pop
or
in
jp
push
mov
dec
and
sbb
mov
mov
das
xchg
cmpsl
insl
mov
cmp
out
cli
aaa
std
dec
fimull
dec
and
inc
cmp
incl
repnz
pcmpgtw
lock
ret
xchg
stos
push
jecxz
mov
mov
decl
xchg
pushf
adcb
and
loopne
popf
mov
repnz
fwait
call
push
inc
ljmp
cmp
xor
mov
mov
aam
fbstp
pop
xchg
add
aad
rcrl
pushl
mov
jecxz
cmp
pop
in
and
jl
fistpl
pushl
addr16
cwtl
lahf
jg
fdivp
xchg
inc
xchg
shll
rcrb
dec
jg
inc
int
testb
pop
lock
ljmp
popf
cmp
es
add
in
pop
fwait
repnz
imul
jmp
call
mov
or
add
enter
cli
jg
decl
dec
fdivl
fidivrs
mov
sbb
or
push
aaa
inc
shrb
xor
addr16
pushf
pushf
jp
jmp
mov
sti
mov
dec
daa
out
mov
insl
pop
mov
xchg
outsb
sub
push
mov
incl
outsb
pop
lret
and
push
aas
jno
fmull
lods
mov
pop
dec
dec
clc
call
loope
adc
dec
into
and
add
sbb
adc
jae
sub
pushl
lods
fsubrs
in
add
jmp
daa
inc
mov
dec
outsl
add
icebp
mov
repz
xchg
push
sub
stc
std
mov
cmc
jnp
cltd
stos
cmp
call
outsl
xchg
inc
pop
test
dec
xor
cmc
orl
popf
xchg
pushf
inc
sti
shr
ljmp
aas
scas
sbb
mov
xor
fldt
inc
stos
dec
aad
lret
lcall
adc
div
cmovle
dec
push
mov
cli
out
push
jmp
sbb
pop
or
test
cwtl
je
scas
jnp
pop
test
inc
in
jmp
rcrb
je
jmp
out
push
adcl
ds
pop
or
pushl
inc
cmp
mov
xor
divb
scas
mov
addr16
sbbl
lret
xor
inc
cmpb
lcall
sub
push
insl
insb
push
add
shll
adc
jmp
xor
scas
or
sbbb
repz
test
stos
xchg
mov
scas
push
data16
pop
pop
loopne
dec
and
xchg
lock
out
push
sbb
scas
loopne
filds
in
dec
das
xorl
jb
pop
add
js
out
sbbl
call
jns
mov
jg
cmpsb
cmc
gs
sbb
shlb
inc
or
jmp
xchg
aad
push
fs
nop
push
mov
push
or
jae
xchg
and
dec
cmpsl
ret
mov
adc
pop
lock
push
call
cld
mov
das
in
pop
jecxz
push
mov
sub
stos
add
xor
lcall
aad
inc
add
cld
js
jns
inc
push
loope
jg
jl
ja
mov
in
adc
push
aad
or
add
rol
add
xchg
adcl
ljmp
scas
inc
and
negl
push
xor
and
ss
xor
xor
cmp
movsl
mov
sbb
sbb
popf
xchg
sbb
ljmp
mov
popf
or
push
mov
enter
dec
int3
mov
push
sarl
inc
std
mov
popf
xor
cmp
add
xor
pop
decl
and
lret
aam
inc
into
in
fdivl
imul
mov
aad
cmpsb
stos
ljmp
jp
aas
lods
cli
xor
sub
mov
out
push
ss
mov
inc
xchg
sti
mov
std
imul
inc
icebp
ljmp
mov
fisttps
mov
jecxz
fimull
dec
dec
inc
push
les
jbe
fyl2x
mov
idiv
shl
sahf
test
enter
jg
jp
out
insb
sbb
nop
cli
ficoml
rorl
insl
sbb
add
mov
ljmp
mov
lea
fmull
int3
xor
scas
mov
ja
sar
sti
cmp
in
dec
gs
cwtl
cwtl
add
dec
sti
xor
imul
xchg
push
sub
mov
mov
bound
in
sub
xor
in
pop
add
shl
cwtl
mov
fldenv
fwait
aas
in
rcll
jmp
sbb
and
pop
or
push
push
repz
jl
cltd
mov
ljmp
jmp
dec
jno
sub
arpl
shlb
not
push
ror
jp
and
xchg
int
mov
or
sbbb
or
loope
nop
scas
push
nop
test
loopne
les
decl
inc
popa
dec
jle
and
es
xlat
loop
inc
xchg
in
xchg
mov
push
aam
cmp
loope
mov
sbb
xchg
pop
mov
mov
cmp
jmp
or
jmp
cmp
pushl
ja
cmp
mov
pop
movaps
test
ljmp
mov
mov
push
fwait
jo
xor
and
jmp
xchg
adc
call
push
les
test
repnz
dec
jl
mov
idivl
cmpsb
mov
stos
pop
lock
incl
jo
cmp
mov
stc
jne
pop
cmp
mov
sti
test
sub
sahf
ljmp
dec
jae
jge
or
in
xorl
filds
ffreep
add
sbb
pop
into
hlt
mov
adc
insl
mov
sbbb
push
pusha
pop
inc
fistpl
stos
jns
pop
sbb
jg
and
mov
push
mov
scas
fisttps
push
ficoml
sub
pop
lret
fistl
or
xor
es
out
enter
mov
fsts
decl
sub
fcmovnu
pop
jp
daa
jb
sbb
pop
in
mov
rclb
pushf
xor
sbb
xor
fnstenv
mov
mov
push
push
sbb
cld
icebp
ss
repz
lret
inc
adc
inc
cld
std
mov
mov
xor
mov
mov
or
adc
ss
stc
jbe
sub
mov
fadd
insl
jno
pop
ljmp
sbb
adc
jae
cmp
mov
in
inc
cwtl
xchg
call
scas
and
ret
mov
push
or
sub
enter
inc
mov
call
lods
cltd
push
mov
or
mov
jecxz
cltd
push
loope
leave
incl
pusha
or
stos
flds
jno
gs
mov
xchg
in
repnz
push
inc
hlt
mov
std
popa
lahf
out
dec
adc
data16
xor
inc
pusha
fists
scas
pop
mov
js
mov
inc
adc
inc
xor
movsb
xchg
ljmp
gs
sub
aad
scas
jo
xor
pusha
sbb
pop
and
pop
cmove
in
ret
and
ljmp
or
pop
lods
adcl
stos
inc
sub
cmp
mov
ja
adcb
decl
mov
jp
ret
ja
cmpsb
push
cltd
out
add
jg
aas
sub
mov
sbb
ljmp
xchg
fwait
jns
mov
mov
inc
cmc
ljmp
sub
sub
outsb
push
mov
mull
or
popf
clc
xor
test
adc
push
mov
mov
sub
jle
cmp
stc
cmp
pushl
mov
scas
xor
pop
leave
add
lahf
fcoms
aad
xorb
incl
scas
in
js
push
dec
pop
mov
sarl
ljmp
sahf
insl
inc
adc
push
das
scas
push
sti
leave
js
fcoms
sbb
rol
cltd
sbb
mov
sbb
xchg
std
push
lcall
xor
push
sbb
dec
push
test
lods
dec
and
mov
call
cmc
add
andb
jo
push
cmp
ret
lods
rcrb
mov
ljmp
cmp
out
daa
xlat
mov
cmpsl
aas
mov
and
out
sub
mov
mov
insb
fisubrs
in
insl
mov
fstps
inc
xchg
xchg
xor
imul
shld
pop
mov
push
jmp
das
or
jo
dec
pop
cmp
push
xor
pop
jo
call
repnz
push
cmp
push
lcall
adc
clc
mov
aad
jno
sbb
jecxz
xor
inc
mov
call
in
lret
add
or
and
push
inc
sti
push
dec
mov
push
sub
pop
inc
pushf
adc
inc
lcall
mov
jns
or
inc
jg
dec
xor
and
pop
xchg
aas
cwtl
mov
aam
imulb
frstor
rcrl
cmp
loope
adc
push
add
das
sub
jmp
cmp
orl
insb
fdivr
gs
fmul
add
fistpl
fdivr
call
pop
jmp
push
mov
cmpsb
cwtl
mov
dec
and
rcrb
out
lret
jno
aam
jnp
pop
iret
inc
call
pop
jns
incl
xchg
jmp
jmp
leave
popa
aas
aas
aam
movsl
or
mov
push
pop
or
jnp
mov
test
cmpsb
jnp
sahf
scas
fisubrs
bound
incl
mov
gs
adc
lret
jo
shlb
divb
aad
movsl
lcall
push
out
fidivrl
mov
inc
mov
jmp
cs
imul
ljmp
mov
jmp
cmp
outsb
addr16
arpl
pop
mov
jmp
rcr
push
popf
aam
xorl
mov
cmpsb
repz
call
pop
xchg
xchg
nop
cmp
jp
or
and
or
dec
iret
or
mov
in
jecxz
and
jns
call
pop
insb
and
mov
mov
sbb
jne
mov
adc
cmp
in
js
cmp
lcall
sbb
pop
mov
xor
sub
mov
jmp
cvtps2pi
lcall
popf
xchg
test
stos
inc
std
cmp
mov
mov
fcomip
jle
push
or
mov
sahf
nop
packuswb
xchg
add
xchg
incl
mov
push
and
inc
mov
pusha
mov
mov
xor
mov
decl
int
fcmovnu
and
mov
ret
cwtl
mulb
mov
mov
jo
gs
aaa
nop
mov
leave
xchg
xor
cmpsb
lcall
xor
scas
mov
push
aad
cmpb
rclb
or
or
mov
gs
xchg
dec
pop
scas
test
mov
push
push
out
push
add
dec
dec
in
xbegin
dec
mov
bnd
jg
cmp
mov
out
push
int3
and
push
addl
loopne
sahf
arpl
add
fs
or
lcall
cmpsl
sbb
or
inc
stc
insl
sbb
aas
sahf
jg
sbb
or
lock
mov
cmp
jle
ret
jp
fnstcw
ror
mov
adc
loop
pop
cmp
mov
push
outsb
xchg
push
stos
inc
loopne
mov
cs
pop
shll
pop
dec
dec
movsb
ja
mov
inc
jge
xchg
jle
js
lods
inc
mov
cmc
fldcw
pop
jmp
mov
pushf
in
adc
movsb
les
mov
insl
pop
push
xchg
pop
sbb
xchg
dec
mov
push
shlb
pop
loopne
xchg
mov
jns
dec
out
mov
mov
incl
xor
push
test
mov
inc
insb
mov
data16
adc
add
xchg
or
jmp
add
mov
andl
pushl
fistl
fs
jns
adc
mov
jl
fsubrs
xor
gs
lock
pushl
or
jb
dec
clc
rcrl
fdivrs
inc
xor
inc
push
pushl
sti
dec
mov
test
fsubs
loopne
cmp
arpl
adc
sbb
stos
sub
out
into
dec
enter
xchg
xchg
or
je
fstp
sbb
incl
pop
add
mov
pusha
add
push
mov
jmp
jno
inc
push
test
loope
pusha
clc
mov
adc
xor
mov
dec
adc
jmp
cmp
lea
shll
lcall
cmpsb
in
mov
mov
push
movsl
push
sub
in
addr16
fdiv
sub
xor
call
push
pop
sbb
pop
iret
aad
dec
test
mov
popf
pop
lea
roll
nop
jl
es
and
jbe
out
cmp
decl
jg
mov
aaa
rolb
inc
sub
push
mov
and
dec
in
xor
dec
sbb
cmp
call
test
sub
test
jp
push
dec
incl
arpl
jmp
or
cmp
lcall
add
int3
stos
ss
push
je
fisubrl
ret
jg
lahf
pop
pushf
loopne
stos
pop
fyl2xp1
xchg
ja
scas
js
jno
xor
lods
arpl
out
inc
mov
and
jo
jne
daa
cli
jmp
dec
xor
mov
test
adc
xorb
jmp
mov
leave
repz
fisubs
std
in
lods
rorl
cmpl
repnz
sub
shrb
outsb
aad
std
idivl
add
or
push
out
shll
call
sub
ja
popa
dec
adc
cltd
cmp
push
fdivp
outsb
adc
push
andl
cmp
stos
loopne
sbb
je
or
pop
js
add
clc
rclb
shrl
fidivrl
sbb
and
mov
outsl
jnp
adc
rol
sahf
or
incl
jb
andb
xor
lea
xchg
pop
imul
mov
test
notl
leave
in
cld
call
mov
mov
lock
mov
fstp
iret
xchg
pop
inc
sar
call
push
es
cld
mov
ja
fidivs
in
rcrb
les
pushl
adc
xchg
adc
and
adc
out
sar
outsb
ja
xchg
test
pop
inc
fldenv
mov
jnp
or
call
pop
cmc
adc
jmp
add
mov
or
pushf
arpl
mov
mov
ljmp
xchg
call
pop
adc
push
xor
cwtl
repnz
ficompl
mov
insl
cld
insb
pop
ds
add
lods
call
mov
cmp
popa
gs
loopne
or
rorl
enter
jmp
or
mov
sub
sbb
rcrb
add
xchg
jle
arpl
int3
outsb
push
std
imul
incl
or
xor
mov
xor
jnp
mov
push
notb
pusha
rol
pop
and
hlt
fstpl
cld
pop
adc
push
lahf
int3
lahf
sbb
mov
lea
jmp
addr16
lret
or
stos
pop
jae
gs
push
fcmovbe
pop
fidivs
push
mov
call
dec
gs
je
inc
hlt
daa
cmp
popf
cmpsl
cmpsl
ret
les
repz
mov
dec
lcall
xorl
das
stos
jp
dec
xchg
xchg
fnstcw
add
jmp
and
sbb
test
lret
mov
xchg
xchg
xor
inc
or
aad
int
in
adc
cld
mov
dec
inc
bnd
inc
in
std
jg
fldt
arpl
xor
push
lods
adc
sbb
mov
call
cwtl
scas
cmp
mov
imul
sbb
or
cmp
movsb
mov
adc
cld
mov
dec
lret
adc
mov
pop
xor
std
or
int
xchg
inc
jns
js
jne
inc
xchg
mov
add
jbe
cmp
fcompl
push
dec
clc
pop
and
popa
fsubp
cwtl
and
ficoms
ljmp
push
sub
jbe
cs
jae
shll
incl
sti
mov
out
imul
lea
and
pop
inc
imulb
pop
mov
movl
mov
pop
inc
repz
push
sub
gs
jp
into
cmp
dec
imul
and
mov
push
fadd
jg
mov
aaa
pop
into
inc
push
fnstenv
xchg
xor
xchg
addr16
xor
out
aam
ret
inc
sub
test
pop
jnp
sbb
cwtl
int3
adcb
xchg
xor
xchg
push
mov
mov
cwtl
repz
inc
mov
cmpsl
lret
fidivl
cmpsl
mov
pop
std
pushl
inc
nop
fwait
mov
popf
push
xor
pop
scas
push
lods
jmp
mov
xchg
add
test
jns
or
js
dec
sub
popa
into
adc
lcall
gs
out
xchg
mov
xlat
lret
lret
and
test
jne
dec
fsub
clc
sub
pushl
jle
hlt
popa
sbb
mov
mov
dec
push
pop
inc
test
jge
and
out
movsb
call
iret
xchg
dec
adc
mov
data16
push
push
insb
stos
and
jg
movsb
dec
mov
mov
cli
lods
xor
aaa
lods
push
xlat
jns
out
fisttps
adc
sar
jge
imul
andb
pop
test
xchg
jae
xchg
jle
mov
adc
xchg
mov
fnstcw
adc
inc
clc
out
incl
cmp
jb
cmpsl
xchg
fidivl
pop
add
mov
jle
jmp
sar
loope
pop
das
das
fistpl
dec
mov
cli
mov
inc
push
das
adcl
lcall
popl
fwait
fwait
mov
mov
push
pop
scas
sub
out
push
fidivs
loopne
mov
and
sbb
xchg
mov
decl
jns
stos
pop
jb
aad
and
jne
jns
dec
aas
outsb
and
jg
insl
repnz
push
movsb
sbb
or
add
cmp
adc
ljmp
stc
cmp
sub
pop
and
xchg
decl
and
dec
std
lahf
andl
mov
push
out
aam
lahf
sub
pop
jmp
fiadds
mov
pop
dec
xchg
in
xchg
mov
pop
fdivp
mov
mov
repz
les
pop
pushf
mov
dec
popf
pushl
mov
sahf
jmp
sub
sub
dec
xchg
adc
jg
dec
out
push
movsl
mov
lret
insb
subl
fisttps
fs
fdivrs
xchg
jmp
mov
iret
mov
adc
out
into
ljmp
add
mov
cs
into
daa
push
xor
jg
pop
enter
inc
xor
xchg
and
push
outsb
inc
pop
mov
mov
pushl
cmp
mov
jb
sbb
xor
aas
aad
clc
mov
int3
ljmp
xlat
fucomi
movsb
pushf
scas
cmpsl
jmp
xchg
fmuls
sbb
call
mov
test
xchg
mov
outsb
adc
or
fwait
sub
dec
push
std
sarb
testb
mov
ret
add
mov
xchg
clc
stos
mov
push
les
incl
mov
stc
adc
ja
jnp
xchg
repnz
cmp
jno
mov
call
cli
push
mov
push
sbb
and
or
mov
std
add
fisubs
out
movsb
sub
xchg
insb
cmp
inc
pushl
sub
fistpl
xor
or
divb
testl
cmp
pop
xor
push
dec
sub
mov
mov
ds
adc
shlb
shrb
cmpsl
mov
das
push
out
sub
mov
pushl
imul
in
fldt
scas
popf
mov
test
dec
dec
dec
fistl
xchg
dec
ret
in
push
xchg
pcmpeqb
pop
inc
stos
notb
dec
data16
push
nop
and
ds
fsubl
xor
fidivrs
push
sbb
push
decl
dec
nop
outsl
les
xor
das
cli
idiv
inc
jecxz
pop
xchg
ficoms
sbb
and
push
faddl
jge
in
sbb
mov
mov
loopne
enter
test
data16
stos
mov
mov
fsubrs
in
xchg
mov
addr16
pop
mov
jns
cmovge
stos
testb
cld
and
fisttpl
arpl
ljmp
lods
fcmovnu
cld
push
out
xchg
add
daa
push
out
out
mov
ds
pushl
jmp
cmp
cmp
movsb
shl
xlat
cmp
push
and
movsl
cmp
decl
test
cmpsl
jno
xorb
jnp
daa
cmpsl
insb
xchg
pushl
jecxz
adc
and
decl
rcll
jne
xor
roll
gs
cmp
and
dec
sub
mov
push
aam
mov
pop
rcll
mov
pmaxub
pop
push
jb
sub
decl
rorl
sahf
or
dec
in
cwtl
cmp
shlb
jp
sub
pushl
pop
jle
in
mov
sub
mov
in
xchg
sub
enter
call
mov
jae
sub
pop
bound
pop
xor
or
push
cld
push
nop
ljmp
ljmp
cmpsl
out
adc
jne
mov
adc
mov
jl
add
into
ds
cmp
lcall
and
mov
jae
lret
xchg
mov
in
inc
scas
and
cmp
popf
stos
xchg
decl
fidivrl
cmp
xchg
mov
mov
dec
inc
jle
shll
mov
pushl
sahf
movsb
xor
adc
leave
rolb
mov
ljmp
add
push
pop
pop
jle
inc
and
fistpll
inc
rclb
loope
test
pop
cmc
lcall
sbb
sub
xlat
sbb
loope
repnz
outsb
mov
cltd
pop
jo
mov
or
jge
pop
xchg
mov
push
in
mov
dec
add
and
or
dec
push
add
dec
inc
shlb
arpl
cmp
outsb
push
fdivr
shr
and
xchg
jecxz
pop
loopne
or
cli
mov
lcall
adc
ljmp
imul
xor
out
or
lcall
inc
ja
clc
cmpsb
dec
xor
je
shlb
add
push
bswap
inc
clc
lcall
les
cmp
or
or
pop
and
bnd
pop
push
add
mov
dec
out
add
inc
push
push
inc
imul
fmull
cmovo
or
out
scas
movsb
les
or
pushf
loop
mov
hlt
cs
into
cmp
add
loope
ljmp
cmp
jmp
sub
lahf
jo
test
shrl
or
test
add
add
cmp
xchg
inc
cmp
mov
dec
scas
mov
xchg
mov
test
shlb
orb
shll
iret
jno
out
or
andb
jmp
xchg
aad
mov
ja
inc
stc
lret
shll
fildll
sbb
push
loope
jmp
clc
mov
pushf
mov
inc
fists
pusha
add
dec
imul
enter
xchg
dec
std
repz
scas
xchg
inc
in
aad
leave
inc
push
fcos
incl
dec
xor
int
jbe
pop
das
mov
adc
sbb
in
lods
popa
leave
mov
mov
push
mov
mulb
outsl
sub
in
inc
sbb
popa
pop
push
inc
mov
stc
stos
xchg
std
inc
xor
mov
pop
adc
iret
jg
mov
and
mov
or
inc
ret
cltd
adc
dec
fldl
fstpt
movsb
gs
dec
incl
dec
sarl
in
das
or
data16
pop
enter
inc
dec
mov
or
in
mov
out
rorl
add
or
pop
scas
test
sub
mov
sub
jmp
pop
scas
xchg
mov
insl
shrl
shlb
inc
outsb
or
push
lods
lret
mov
addb
dec
daa
bnd
shrb
push
out
add
mov
mov
mov
test
xor
mov
out
cli
imul
test
jnp
je
pushf
fdiv
push
adc
mov
inc
jnp
lcall
dec
cmp
push
pushf
and
insl
mov
notb
fsts
ljmp
pop
popf
outsl
aad
inc
pop
push
xchg
xchg
or
dec
push
je
dec
incl
push
into
nop
test
daa
inc
movsl
sub
cmc
mov
ljmp
ja
js
nop
rorl
lcall
cmc
pop
xchg
leave
sahf
lcallw
decl
inc
incl
dec
sahf
in
mov
cltd
lods
mov
add
idiv
jmp
xor
iret
arpl
inc
add
stos
int
jecxz
push
cmc
mov
jae
incl
test
loope
or
mov
sub
mov
aad
out
or
decl
add
leave
xchg
scas
dec
cmc
clc
out
push
sbb
lret
rcll
mov
jo
jns
cwtl
icebp
out
and
clc
cmp
lahf
jo
mov
decl
ss
cmp
loopne
test
movsb
cs
pop
iret
outsl
mov
test
in
lcall
clc
jmp
in
imul
mov
stos
call
jmp
daa
sub
adc
jl
scas
mov
ss
repnz
mov
lret
cmp
mov
dec
test
sub
xchg
enter
jno
pushl
addl
add
cmpsb
stos
subl
out
dec
jge
xor
adcb
cli
pushl
inc
adc
adc
popf
lods
stos
xor
sbb
pop
leave
adc
call
fsqrt
xor
test
ret
mov
pop
pushl
fwait
std
in
mov
popl
push
cld
inc
xlat
sbb
or
clc
jns
mov
mov
enter
in
mov
jg
popf
and
inc
jns
and
in
jns
mov
jl
sbb
aad
lret
adc
mov
jb
jp
add
inc
shl
in
sbb
shlb
sbb
fstpl
and
fwait
sub
decl
mov
outsl
jmp
std
dec
loop
call
movsl
sti
cmpsl
adc
outsl
cli
dec
xchg
nop
enter
cmc
lret
loopne
ljmp
mov
lfs
pop
pop
outsb
or
iret
jne
fcomip
or
mov
sti
push
adc
mov
xlat
pop
xor
xchg
mov
ds
lret
test
mov
fwait
ljmp
gs
pop
mov
pop
xlat
adcb
cmc
mov
xchg
popa
ljmp
addr16
and
mov
push
cmp
mov
fisttpll
loop
ljmp
clc
out
sbb
and
mov
aas
mov
mov
sub
inc
movsl
gs
decl
mov
iret
sti
iret
xor
xor
push
insl
cmp
es
outsb
cli
add
mov
cld
mov
fst
xchg
inc
mov
sarl
jne
sbb
and
out
jg
cmp
orl
add
pop
iret
add
jl
push
fs
cld
lcall
mov
in
cmpsl
inc
and
push
ja
pop
jne
sub
mov
sub
pushl
push
mov
adc
movsb
and
insl
loope
inc
mov
or
sub
fsubl
inc
push
loopne
jns
pop
pop
lcall
scas
js
inc
lods
idivl
mov
fistpl
xchg
sbb
or
fcomip
push
popf
push
dec
fiaddl
xchg
repz
mov
mov
mov
add
lcall
fadds
lock
cltd
enter
mov
mov
mov
lret
jg
sub
in
sub
jb
jl
dec
sub
lahf
mov
decl
dec
xchg
pop
subl
sbb
fidivrl
rclb
mov
xor
cli
add
test
push
mov
outsl
cltd
insb
cwtl
bound
mov
inc
mov
mov
add
mov
jmp
repz
ja
sti
sar
jl
out
es
ljmp
cmpsl
jecxz
fsubr
jecxz
lods
jmp
add
loopne
mov
call
sbb
aam
les
add
pushf
push
mov
push
mov
pop
mov
in
add
cmp
add
add
xchg
xorl
pushl
mov
add
adc
and
nop
push
mov
popf
std
lds
shrb
jmp
adc
data16
mov
mov
pop
nop
test
out
js
mov
mov
adc
faddl
dec
lret
xchg
xchg
lcall
dec
loop
adc
pop
lahf
mov
pop
or
cmc
mov
dec
push
jmp
lcall
int3
test
call
fadds
push
adcb
push
pop
sub
jnp
pop
fst
xor
rorb
jmp
mov
xchg
sbb
leave
mov
mov
idivb
cmpsl
stos
xchg
mov
out
stos
pusha
loopne
lea
mov
mov
in
push
dec
clc
jge
hlt
pushf
mov
xor
ret
arpl
inc
xchg
js
mov
ret
add
and
int3
es
pushl
lods
icebp
rclb
stos
mov
mov
push
jmp
and
xor
lcall
movb
fldt
mov
scas
je
add
dec
nop
cmp
xchg
lock
out
jl
lock
or
add
dec
or
inc
es
push
cmp
xor
ret
xchg
xchg
pop
popw
pop
icebp
arpl
das
mov
je
sbb
fdivl
inc
fs
jp
gs
cli
call
fidivrs
xchg
clc
pop
xorl
push
adc
jo
inc
push
lahf
ljmp
cmpsb
sbb
xor
fisubrs
call
in
cmp
xchg
ret
xor
push
mov
movsl
repz
add
movsl
test
decl
enter
cmc
mov
mov
mov
mov
insb
pop
mov
cmp
and
out
add
adc
dec
call
jmp
test
rep
mov
mov
mov
cmp
mov
xor
iret
std
in
sbb
sub
cltd
xor
and
psrlw
or
ljmp
mov
test
pop
not
inc
ljmp
sbb
jmp
test
push
push
stos
fxch
jmp
cltd
cmp
insb
push
and
in
ljmp
call
int3
ficoms
je
push
cltd
lds
jg
movsb
mov
pop
xor
jmp
test
lret
ret
scas
shrl
push
sar
inc
ljmp
gs
sar
push
inc
fistl
sti
clc
lock
jecxz
insl
pop
xchg
or
xchg
cld
jg
sub
mov
add
adc
dec
sahf
xchg
mov
ljmp
outsl
xchg
mov
mov
movsl
or
out
sar
ljmp
or
inc
ja
mov
ljmp
lea
cs
hlt
iret
dec
fcomp
pop
cmp
and
incl
pop
clc
aam
repnz
movl
sarl
mov
enter
in
addr16
call
push
and
adc
pushl
dec
mov
sbb
stos
sahf
dec
mov
pop
popl
dec
mov
incl
jbe
pop
stos
lods
out
push
cmp
ret
sbb
or
xchg
push
push
inc
jp
dec
xchg
or
dec
call
shlb
enter
into
push
imul
test
dec
xchg
jg
dec
std
pop
aas
push
jge
out
imul
ret
push
decl
or
clc
fmuls
push
inc
mov
mov
repz
pushl
icebp
ss
fstpl
cmpsb
insb
outsl
lcall
mov
pop
xchg
sbbb
jle
fcoml
subl
in
mov
orl
aaa
decl
or
call
je
pop
scas
icebp
lahf
bound
xchg
fld
int
push
fisubrs
jmp
lcall
dec
and
popa
and
sbb
mov
xabort
nop
icebp
mov
push
adc
lods
imul
jmp
jbe
xorl
fisubrl
aad
mov
rcll
cli
xchg
cmp
adc
pushl
outsl
out
lcall
std
aaa
push
adcb
arpl
add
push
aad
mov
sbb
call
or
mov
jo
cmp
mov
mov
outsl
cli
decl
into
fdiv
sbb
mov
xchg
or
shrb
mov
loopne
push
test
pusha
pop
cli
in
ret
push
inc
xchg
mov
sub
lcall
rcr
ljmp
mov
jo
adc
loopne
sub
jnp
aaa
push
mov
divl
cmp
xchg
aas
imul
lock
out
fisubs
xor
xchg
addr16
xchg
stos
cmpsb
cmp
jmp
ljmp
mov
int
and
dec
ss
pushl
inc
ret
rclb
popa
out
pop
jno
mov
in
lret
pop
imulb
fbld
dec
jle
cmpsb
cmc
ljmp
fs
adc
outsb
cmp
ljmp
mov
sub
push
enter
inc
sbb
fiadds
loopne
inc
int
cli
or
mov
sub
pop
sub
cld
imul
mov
add
mov
call
mov
mov
dec
stos
ds
mov
mov
lock
add
push
push
scas
xchg
ret
adc
daa
movsb
aaa
ret
fwait
sbb
or
cmp
sub
ljmp
popa
mov
mov
aas
scas
jmp
enter
sbbl
out
pop
jg
mov
dec
mov
int
mov
in
add
jmp
sbb
pop
and
in
xchg
xchg
leave
data16
and
loop
and
sub
jmp
loope
sub
xorb
mov
and
stos
sbb
lcall
out
popl
cmpsb
jae
xor
mov
push
dec
xchg
sbb
shll
xchg
mov
xchg
idiv
dec
scas
jg
lahf
mov
and
jecxz
or
inc
sbb
xlat
inc
jnp
es
lods
push
ljmp
in
dec
fisttpl
pop
in
dec
lcall
xchg
loope
loope
movsl
test
ljmp
pop
in
push
out
sub
mov
ljmp
lock
sbb
push
jo
pop
out
test
jnp
scas
pop
in
rcrb
jmp
ljmp
sbb
cli
cmp
loop
sub
lods
daa
in
add
jmp
xlat
or
push
outsb
cmp
rcr
mov
or
mov
call
addl
dec
jne
xor
ljmp
test
push
pop
mov
gs
dec
mov
cltd
sub
mov
and
and
inc
adc
or
cli
jg
loopne
push
fs
enter
decl
sbb
pop
and
aas
jae
daa
aad
pop
sbb
sub
jle
push
aaa
dec
rorb
xor
and
ljmp
loopne
cli
data16
add
mov
dec
jno
push
pusha
incl
xchg
frstor
stc
pushf
lcall
je
pop
and
pushf
xor
les
jp
mov
jg
jbe
sub
fwait
xchg
outsl
dec
mov
sar
or
andb
xor
gs
push
mov
jae
mov
dec
sub
leave
cmp
xchg
inc
push
dec
pop
bound
pop
push
mov
ljmp
push
ja
mov
or
cmp
push
add
mov
push
inc
loopne
loopne
jl
xchg
or
decl
push
xchg
addr16
imul
ret
iret
iret
pop
inc
mov
sub
inc
adcb
stc
cmp
jle
dec
sbb
lds
std
sub
fstpt
int3
sarl
out
sub
lock
add
xor
pusha
jmp
in
das
or
cmpsb
rcrb
add
daa
pushf
je
leave
inc
clc
out
cli
scas
xchg
sbb
fwait
or
ja
xor
ret
sbb
out
sbb
pop
scas
aas
sarb
inc
jae
dec
inc
pop
bound
negb
xchg
rorl
sub
pusha
and
jno
mov
pop
sub
call
fwait
cmpsl
push
jecxz
xchg
pop
mov
pusha
push
out
jg
sub
mov
mov
inc
dec
add
lcall
lods
lods
sub
push
push
inc
pop
cmp
inc
mov
aas
jmp
xchg
std
fadds
call
dec
pop
shr
jnp
fsubrp
mov
punpckhdq
cmp
ljmp
call
jg
dec
fld
pop
scas
cld
cmpsl
test
dec
jb
lods
cmpsb
inc
or
or
add
push
mov
add
xchg
insb
call
jmp
sbb
mov
and
xor
mov
jg
jg,pt
push
inc
or
mov
fmulp
push
insb
jae
lcall
ds
decl
xor
inc
pushf
jnp
sub
negl
movsl
ret
insl
testb
jbe
adc
lcall
jmp
inc
ja
jecxz
dec
and
add
cmc
lret
mov
call
cmp
mov
lea
pop
std
ljmp
pushl
mov
icebp
dec
push
das
jle
mov
movl
test
outsl
xchg
shlb
enter
or
js
cmp
outsb
add
mov
mov
pop
sub
addb
mov
mov
filds
jecxz
lcall
outsb
or
jne
decl
lock
xor
push
pop
dec
cmpsl
cmc
push
popf
enter
out
mov
adc
aad
call
mov
call
sahf
push
clc
mov
fimull
adc
pushf
mov
in
in
es
sub
xchg
dec
and
xchg
fsubrs
mov
cwtl
sbb
sahf
lds
sar
dec
pop
stc
mov
sub
jecxz
add
sub
mov
xchg
ljmp
push
loopne
arpl
push
loopne
sub
test
sbb
push
jno
mov
decl
mov
inc
ds
std
inc
fcoms
or
or
insb
jmp
lock
dec
adc
lcall
scas
daa
jo,pn
jmp
and
int
icebp
pop
add
push
aam
jns
and
sbbb
and
test
stos
pop
movb
dec
sbb
push
ljmp
ljmp
cwtl
mov
push
mov
cmp
imul
stos
outsl
push
xchg
or
fildll
test
jne
popf
pop
loop
imul
jmp
test
jl
inc
push
push
test
cmp
mov
add
push
mov
aam
fldt
mov
cmp
cmpsl
mov
mov
andl
push
sub
fs
mov
sub
decl
sbb
sbb
test
sub
dec
xchg
cmpb
cmp
jmp
xchg
rol
popf
xlat
pop
cwtl
or
ds
gs
adc
xchg
sbb
jp
pushl
dec
cmpsl
xchg
or
mov
sub
sub
jo
jmp
test
daa
into
js
ret
repnz
and
sarb
loopne
insb
repz
incl
fnstcw
lahf
loop
loope
ficompl
or
cmp
sarb
incl
cli
insl
push
adc
or
or
xor
sbb
je
in
jns
or
dec
test
adc
movsb
jmp
sbb
jecxz
mov
add
mov
jmp
lea
mov
loop
cli
cwtl
bound
pusha
fmuls
les
repz
test
adc
jmp
inc
add
in
shl
push
jbe
sbb
and
jmp
ret
out
test
aaa
jnp
mov
push
xchg
and
loop
test
jg
ljmp
mov
push
lret
pushf
decl
sub
es
fcompl
lcall
jae
nop
out
in
sub
push
mov
imulb
lods
mov
aam
fwait
dec
pushf
dec
jge
push
xor
mov
leave
movsl
xchg
push
in
jmp
mov
push
sbb
mov
ljmp
jae
adc
jno
and
sbb
xchg
pusha
adc
adc
and
ljmp
enter
mov
push
fcoms
call
popf
lret
imul
add
mov
nop
rcl
cwtl
movsl
dec
add
push
stos
jmp
ljmp
fldt
mov
cmp
shlb
lret
popf
call
insb
pop
xor
call
fldcw
movsl
gs
rorl
sbb
push
mov
lret
jle
insl
fists
mov
test
stos
aaa
insl
xor
sub
movl
in
lcall
test
sbb
add
pop
idiv
mov
pop
or
negl
std
call
inc
jo
into
jne
fists
lcall
movsb
test
cmp
add
popf
sbb
scas
ljmp
insb
pusha
es
cmpl
cltd
jae
stos
pop
push
push
js
sbb
lds
decb
and
xchg
push
rcll
mov
mov
cwtl
push
arpl
jg
fists
lcall
aam
data16
mov
add
cs
ljmp
outsb
imul
mov
sbb
add
aas
pop
adc
xor
dec
hlt
mov
lods
enter
lcall
repz
test
mov
jne
mov
ja
ljmp
push
sub
popf
popa
jle
cli
push
and
add
in
mov
cltd
stc
sbb
pop
iret
xchg
cli
xchg
sbb
pop
repnz
and
push
xor
xor
add
ss
ljmp
mov
lds
mov
movsl
mov
test
sbb
and
repz
loop
mov
dec
gs
dec
mov
jno
inc
push
sub
bound
lock
push
std
incl
pop
jl
inc
ljmp
test
cmc
popf
sub
sbb
mov
add
sub
cmp
movsb
mov
jno
out
lret
jnp
shlb
cmp
hlt
cmp
shrb
ljmp
shlb
mov
int
test
insl
add
inc
mov
jg
cwtl
or
xor
mov
and
push
mov
mov
xchg
pop
loope
imul
and
fidivrs
lods
mov
outsl
das
es
nop
jp
fcomip
dec
sbbl
nop
sarl
adc
cld
xchg
jg
out
inc
dec
pop
in
lret
xor
mov
inc
stc
cmpsl
mov
int
dec
out
insl
xchg
push
lret
incl
mov
inc
mov
lcall
andb
cwtl
adc
push
xchg
decl
lock
cmp
and
mov
sub
data16
xchg
out
mov
scas
test
incl
adc
aad
arpl
cs
out
lock
xor
pop
mov
mov
cmp
std
sub
in
push
dec
pop
mov
inc
mov
add
in
or
or
inc
iret
mov
add
sar
sar
cmp
adc
mov
inc
jmp
add
cs
sar
sbb
xor
or
pop
mov
incl
test
mov
lds
jmp
inc
mov
mov
mov
aas
ja
push
mov
ljmp
dec
inc
sar
adc
cld
pop
in
xchg
movsl
and
cmpsb
out
cli
lahf
or
sbb
sarb
iret
hlt
ret
decl
clc
push
je
push
stc
mov
add
dec
gs
test
cmc
out
and
and
add
mov
fbld
or
dec
jbe
cmc
test
jl
pop
dec
cmp
sti
or
lcall
jo
imul
ja
rol
cmp
mov
xchg
out
xor
dec
lods
fwait
pop
mov
lock
lcall
leave
mov
ffree
sbbb
xor
xor
movsl
out
push
test
in
mov
lcall
hlt
out
icebp
pusha
lock
or
loope
sub
test
and
in
sub
rolb
lcall
fisttpl
adc
xor
sbb
sti
inc
mov
or
imul
pop
fnstenv
daa
mov
loop
jns
pushl
outsb
cld
subb
jb
sbb
lds
aas
xchg
adc
lret
push
call
jmp
xchg
push
mov
add
mov
cltd
and
mov
or
inc
comiss
and
inc
popf
insb
mov
cmp
aaa
mov
sahf
mov
call
cld
push
scas
imul
sbb
adc
adc
jo
sbbl
sbb
mov
sbb
mov
inc
lcall
lcall
adc
xchg
or
mov
arpl
incb
jg
dec
mov
clc
xchg
pushf
xorb
out
test
jg
int
or
cmc
push
lcall
fs
jo
lds
inc
inc
jmp
js
cli
lea
inc
jbe
mov
xor
dec
sbb
icebp
mov
scas
xchg
jno
xchg
out
in
xchg
mov
cli
and
in
push
movsb
popa
cmp
scas
imul
push
jne
jg
pop
std
mov
push
bound
in
ja
jp
hlt
mov
inc
fcmovnbe
pop
test
lds
js
outsl
mov
lret
stos
sbb
bound
repnz
and
push
movl
cmpsl
push
mov
cmp
test
or
stos
jg
xor
int
shl
mov
repnz
int3
fdivl
pusha
sub
pop
sub
mov
fwait
and
pop
mov
pop
xchg
sahf
mov
mov
addr16
incl
inc
cmp
jbe,pt
push
jl
jno
ret
fisttps
or
arpl
xor
scas
test
call
test
stos
flds
add
sbb
cmp
xchg
shlb
inc
push
add
out
pop
lcall
outsl
mov
push
dec
inc
adc
dec
mov
sti
inc
jno
sbbb
out
cli
mov
sbb
decb
lahf
rorb
lret
dec
xor
pop
fs
mov
lcall
add
mov
ss
call
inc
fcmovu
lea
out
mov
or
push
adc
in
in
push
repnz
xchg
lds
leave
dec
xor
out
pop
aam
icebp
lcall
jle
pop
push
lret
sarl
jle
add
jmp
and
jnp
lcall
inc
xchg
lock
in
xor
jg
and
push
sub
jge
lcall
jg
cmp
mov
jmp
aam
mov
jb
ljmp
imul
hlt
jb
jg
cmp
xor
out
push
jns
insl
mov
popf
gs
divl
or
add
call
jle
mov
cli
pop
je
lcall
ficompl
add
sbb
flds
xchg
ret
pop
fwait
and
mov
shlb
cmp
sbb
jge
or
mov
mov
dec
jo
lock
les
mov
ds
cltd
movsw
mov
rorl
fildl
nop
xor
push
stc
outsb
jg
shlb
add
lss
or
rorl
fisttpll
lcall
add
push
pusha
insl
clc
jg
decl
cmpsb
rorb
pushf
xchg
cmp
jg
sti
mull
loopne
enter
or
loop
call
cmp
add
inc
ljmp
sub
test
xchg
mov
lods
xchg
cmp
cmp
or
call
dec
enter
mov
add
cmp
loopne
ljmp
dec
push
test
and
jmp
mov
ds
jno
fwait
and
pushl
mov
sub
js
rcl
jb
stc
imul
and
cli
js
mov
addl
push
add
push
scas
pop
push
mov
jns
cmp
call
jl
lret
dec
push
mov
in
cmp
cmpsl
pop
add
add
mov
cmp
divl
cmpsl
push
add
adc
fiadds
push
inc
loopne
jmp
adcb
fs
inc
and
dec
xor
pop
lock
lock
mov
adc
ljmp
iret
push
fs
jg
inc
pop
rclb
push
pcmpgtw
mov
call
jge
imul
add
jo
mov
jns
xchg
jmp
es
dec
mov
mov
add
mov
incb
cmp
cld
push
call
jno
inc
out
mov
push
adc
mov
ret
rcrb
push
cmpxchg
adc
fwait
mov
in
je
dec
sub
cltd
call
out
fidivl
sbb
lds
sub
inc
jb
dec
scas
mov
scas
outsl
lock
xchg
mov
sahf
inc
lcall
xor
loope
loop
xor
pop
lds
xchg
js
cmp
cmp
fcoml
decl
sbb
mov
or
and
int3
pop
mov
rcll
fistps
dec
pop
int
inc
aad
lcall
hlt
lods
ret
push
rcrb
pop
push
leave
mov
lock
into
insb
jns
jne
mov
outsl
xchg
hlt
sbb
sbb
mov
cmp
pushl
or
pusha
lock
outsl
add
addr16
mov
mov
mov
sahf
testl
lds
sub
shlb
add
gs
mov
inc
and
outsl
sub
inc
xor
push
cwtl
mov
mov
xchg
add
mov
call
ds
mov
add
xchg
add
mov
imul
inc
pop
or
mov
ljmp
mov
mov
inc
out
push
orl
jne
and
cmp
lret
or
mov
out
clc
aaa
aaa
lcall
jmp
cmpsb
sub
and
push
mov
popa
loopne
push
lods
outsb
fsubr
or
fs
or
aam
add
dec
pop
mov
bound
clc
adc
fcmovnu
in
sbbb
jg
mov
popl
inc
movsb
jb
out
pop
xor
push
pop
ljmp
adc
and
add
call
out
mov
stc
out
dec
inc
cmc
jmp
jg
dec
sti
out
loope
mov
xchg
or
add
arpl
and
dec
push
je
iret
sbb
jecxz
std
pop
inc
ljmp
and
push
jbe
iret
sub
pushl
and
jo
aad
sub
imul
incb
and
pop
rolb
add
mov
scas
mov
xor
mov
enter
jmp
incl
popa
push
inc
sbb
outsb
pop
add
sbb
dec
mov
mov
xor
lret
into
scas
clc
incl
scas
sub
aad
cli
lret
xlat
sbb
xlat
fwait
push
jl
loopne
sbbb
inc
or
out
movsb
xlat
or
fimuls
sti
hlt
jmp
cmpsl
push
pop
addb
test
cmc
adc
flds
es
popf
add
outsl
pop
sub
jnp
xchg
and
int
or
adc
call
push
stc
cltd
outsb
aas
and
pop
fprem
mov
jecxz
dec
mov
call
out
pop
push
mov
ret
daa
divb
sub
mov
push
sbb
lcall
fsubl
stos
push
jmp
test
mov
fildl
sti
xchg
leave
dec
mov
push
fstl
decl
pusha
xchg
stos
scas
mov
and
out
bound
lcall
fwait
add
and
push
pop
into
pop
lahf
mov
inc
pop
aaa
clc
call
loopne
push
pop
fisubl
or
jmp
xchg
inc
mov
incl
in
test
sbb
out
adc
mov
pushl
into
into
xchg
out
ss
cmc
decb
mov
ss
mov
push
ljmp
fmul
aas
out
dec
xor
repnz
cmp
sahf
mov
sbb
pop
loopne
call
push
xchg
cmp
inc
jne
repnz
lds
xchg
xor
stos
sub
sbb
imul
push
add
or
sbb
lcall
ja
mov
push
xchg
imul
xor
rcrb
into
inc
jo
jb
add
aad
filds
push
cmp
cli
adc
mulb
lahf
add
pop
ja
call
lds
cmc
pushf
mov
mov
cmp
loope
pop
je
mov
test
call
inc
add
je
dec
jo
mov
mov
test
mov
push
test
dec
call
adc
in
aam
cmpsl
js
xchg
xor
or
push
stos
leave
out
jmp
or
push
or
out
cmp
not
call
out
popf
inc
push
mov
mov
pop
xor
iret
xchg
dec
inc
mov
dec
pcmpeqb
clc
and
roll
sbb
jg
xchg
sub
gs
jp
in
inc
push
loopne
ljmp
outsl
cmp
popf
es
nop
daa
cmp
aam
inc
mov
incl
push
adc
sbb
clc
add
pushl
and
mov
jle
fwait
lds
insb
ss
sub
dec
insb
adc
in
incl
fiadds
xchg
shlb
inc
xchg
in
pop
cmp
repnz
out
aam
sbb
sarb
jmp
out
sbb
ret
and
mov
cwtl
lods
js
dec
outsb
push
out
mov
cmpsl
divl
decl
mov
lods
sarb
mov
and
jg
test
dec
mov
hlt
push
lret
clc
lcall
xchg
sar
adc
push
incl
jmp
xor
jae
jp
lret
jecxz
add
jne
mov
or
out
mov
lods
lcall
mov
xor
addr16
ret
add
jge
inc
mov
ret
out
jnp
fadd
push
es
fcompl
movsl
mov
sub
or
pop
stos
jge
add
xchg
aaa
adc
stos
ljmp
icebp
adc
fcomip
call
pop
inc
faddp
mov
sti
xchg
mov
xor
stc
pop
into
jne
adc
cltd
pop
push
xchg
scas
adc
nop
hlt
xchg
or
adc
inc
sub
out
mov
push
icebp
fcomp
add
imul
and
call
das
ljmp
mov
push
sub
imulb
xor
lret
or
mov
mov
jno
xchg
push
mov
adc
jnp,pn
fisttpl
mov
jecxz
mov
incl
ret
or
std
mov
ljmp
shlb
dec
in
pushl
adc
shrb
xchg
roll
ljmp
adc
and
mov
jmp
aaa
sub
fiadds
sub
repnz
jmp
dec
jb
bnd
add
mov
sarb
cmp
sbb
adc
lcall
mov
adc
call
cmc
fistpl
stc
xor
dec
and
and
pop
sub
in
push
in
dec
leave
test
cmp
dec
data16
mov
out
pushf
out
add
jmp
cmp
lcall
fcomip
sar
lcall
js
test
and
movsb
loopne
push
push
jge
scas
incl
xchg
push
outsb
inc
jle
das
mov
cmp
insl
xchg
add
pusha
xchg
xor
push
sahf
int3
mov
shlb
ljmp
loope
into
cs
adc
mov
jae
pop
xor
push
pop
mov
pop
imul
jmp
push
pushf
inc
xor
pop
les
sbb
mov
pop
icebp
incl
ret
pop
test
cwtl
mov
or
test
std
arpl
mov
mov
xor
jo
ds
out
lods
dec
jmp
push
adc
mov
inc
mov
mov
jmp
inc
cltd
movsl
shrl
push
sar
je
lcall
popf
insb
out
sub
or
aas
adc
mov
dec
cmp
mov
jae
roll
add
cld
fstl
dec
insb
ret
cmp
jbe
jb
add
lock
mov
jmp
iret
pop
mov
inc
ja
jg
jns
ljmp
shl
data16
push
sub
das
push
popf
and
dec
and
mov
xchg
dec
lds
adc
add
ljmp
pop
pushf
xchg
clc
ja
lock
push
cli
decl
call
outsb
stos
mov
dec
bound
das
cmp
jl
fs
ss
ljmp
mov
mull
mov
push
mov
loope
pushf
pop
clc
repz
push
imul
out
jecxz
mov
js
sar
ja
mov
int
xchg
and
pop
push
jo
sub
out
aas
push
shlb
popf
mov
jae
mov
ljmp
lret
push
insb
ret
pop
xor
mov
push
cmpsb
mov
rcr
loopne
flds
and
decl
lahf
jecxz
addl
out
mov
iret
sbb
sub
inc
jp
mov
ret
mov
and
call
push
xor
call
scas
insb
leave
outsl
pop
jo
sbb
test
mov
dec
or
inc
push
ljmp
or
scas
jae
pushf
out
add
jno
mov
push
inc
sub
dec
cmp
js
inc
movsl
lods
ljmp
call
in
xor
sti
cld
push
xchg
mov
fldenv
or
imul
push
call
aam
mov
fnstenv
dec
jecxz
push
rcll
inc
dec
outsb
int
loop
cmp
dec
movsl
cld
outsb
cmp
fsubs
jg
testb
sbb
cltd
and
dec
jmp
jne
mov
mov
hlt
push
out
and
call
ljmp
aaa
xor
inc
xor
cmp
cmc
iret
int3
pop
insl
xchg
cmpsl
je,pn
das
mov
jmp
fdivr
movsb
arpl
gs
rorl
pop
dec
mov
shlb
pop
pop
sbb
fistl
xchg
jno
aam
lcall
mov
xlat
xchg
pop
inc
add
fadds
push
xlat
in
sbb
mov
pushf
mov
dec
clc
mov
add
leave
lea
add
inc
and
xor
xchg
jle
xchg
in
cmpsb
and
or
jnp
dec
jb
push
mov
cwtl
inc
push
jmp
push
fdivr
and
lods
pop
in
rolb
call
lock
sub
xor
sub
aaa
repz
outsb
cmp
mov
fcomip
pushl
clc
fwait
js
inc
push
not
mov
adc
test
cmp
fwait
out
std
sbb
es
rcl
test
sbbl
xchg
mov
sti
jmp
call
cmp
fwait
test
and
loop
out
jg
out
adc
loope
sub
adc
jno
fnsave
sbb
punpckhwd
out
push
popa
sbbb
lds
lock
sbb
lret
sbb
push
cmpsb
push
es
jge
jmp
push
cmp
add
call
data16
icebp
ficompl
testb
cmpsb
incl
jle
daa
fnsave
ret
sub
dec
es
mov
ja
cmp
cmpsb
in
aaa
push
xchg
pushl
in
cwtl
mov
aad
and
ja
jne
inc
or
push
lret
jmp
out
imul
cmp
aad
and
sbb
add
decl
xchg
and
cli
mov
les
in
sbb
pop
sbb
es
mov
loop
dec
add
push
add
dec
jbe
cli
or
lods
jp
out
and
leave
push
icebp
sbb
scas
adc
ss
in
dec
insl
jno
push
pop
ljmp
jg
dec
incb
push
sub
jp
push
out
rol
rcrl
add
mov
jg
add
repz
jmp
mov
in
or
sahf
lds
mov
out
iret
add
mov
in
loop
mov
stos
into
push
adc
cld
decl
fnstsw
add
mov
xchg
inc
addr16
shll
js
mov
push
enter
xlat
stc
popf
lods
dec
dec
out
push
shlb
cmpb
mov
cmpsb
mov
out
inc
jns
movsb
push
aam
pmaxsw
add
lea
sbb
cmp
dec
push
cld
imul
test
dec
inc
or
xor
push
inc
cmp
aaa
xlat
ds
cli
lcall
rcrb
pop
and
push
sub
pop
cld
inc
mov
xor
es
das
jnp
lcall
dec
mov
jo
mov
jns
mov
inc
test
cli
mov
xchg
out
call
mov
leave
jecxz
or
xchg
or
lret
xchg
sub
jp
sar
sbb
mov
ret
rolb
inc
loope
cmc
mov
xchg
add
aaa
inc
mov
dec
mov
std
scas
cli
cmp
je
lds
test
xchg
push
rcrl
loope
lcall
cmp
cs
enter
or
or
cmpsl
adc
or
and
insl
sbb
aaa
js
jno
ljmp
push
imul
aaa
shrl
out
cmp
dec
mov
lods
push
daa
stos
out
fadd
jmp
sbb
js
ficoml
out
lock
sarb
push
clc
pushl
lret
iret
sbb
loopne
clc
aam
mov
mov
jl
jo
into
fdivs
scas
aaa
pop
outsl
cmp
sub
in
pop
fs
fistpll
pop
push
jne
out
cmp
js
sbb
sub
push
mov
add
jge
fiaddl
push
or
or
jp
call
push
iret
enter
and
pop
subl
out
imul
pop
mov
ja
push
pop
leave
adc
xor
out
shl
mov
lret
call
jns
or
and
leave
lds
jecxz
dec
ret
insl
and
ja
lcall
pop
dec
adc
in
inc
adc
test
mov
inc
mov
incl
or
sub
jns
mov
insb
xchg
push
subl
sub
ret
repnz
xor
aam
inc
dec
jle
xor
and
call
fadds
mov
fiaddl
jb
push
enter
iret
xor
fdivrl
cmp
adc
sbb
cmp
mov
or
fistps
nop
adc
jmp
mov
sub
clc
std
inc
add
imul
sti
xchg
fbld
push
push
cmp
mov
loopne
aad
leave
lcall
and
imul
mov
cwtl
loopne
call
sub
mov
je
sti
pushf
mov
dec
add
pop
jge
or
mov
loop
mov
out
shll
add
cmp
pop
adc
or
mov
adc
xchg
insb
sub
aas
xchg
popf
mov
mov
out
imul
cmp
push
addl
cmp
sub
jmp
jp
incl
cld
jg
fcmovu
sub
mov
pop
push
xor
inc
push
mov
or
push
pop
pop
mov
jno
pop
xlat
sub
xchg
loop
push
pop
scas
in
sub
mov
pusha
loope
dec
inc
adc
sbb
sub
lahf
pushf
lea
or
inc
out
inc
int3
add
cwtl
shlb
popf
movsl
inc
lods
pop
subl
decl
jae
push
add
and
lea
jg
pushl
xchg
hlt
adcb
arpl
xchg
cltd
dec
repnz
mov
lcall
movsl
sub
and
gs
xor
enter
mov
mov
xor
addr16
aas
shlb
ljmp
fmull
cli
pop
xchg
rorb
jae
or
ljmp
ss
scas
sarb
and
inc
shlb
adc
dec
mov
call
push
loopne
jg
add
dec
inc
ret
int
xchg
sub
push
and
push
mov
ljmp
fcmovnu
fstl
mov
mov
int3
lds
je
add
pushl
jo
mov
pop
fimuls
pslld
inc
mov
loopne
xor
pop
je
xchg
aas
iret
in
inc
pop
mov
or
inc
es
les
jb
jle
mov
out
inc
popf
or
loopne
jmp
lds
mov
jp
call
mov
adc
ljmp
dec
incb
in
pop
fwait
mov
pop
inc
shrb
lret
repnz
decl
rorl
nop
mov
and
push
es
cs
ljmp
push
movsl
pop
pop
mov
outsb
std
mov
inc
add
pop
xor
stos
sbb
jg
and
jno
aad
sbb
cmp
xchg
sub
lcall
push
ret
in
pop
inc
and
fwait
scas
lock
pop
push
aaa
rorb
pop
mov
add
fsubrl
std
in
fbld
in
clc
insb
test
ds
cmc
jg
imul
ds
movsl
or
leave
int3
xor
movb
adc
jno
movsb
cltd
push
bound
sahf
lret
xlat
mov
rcl
and
dec
into
mov
push
add
cmp
sub
lahf
es
fildll
xor
xor
fwait
decl
enter
xor
into
inc
adc
lahf
test
mov
dec
jae
imul
outsb
adc
arpl
cli
add
lods
sbbl
call
jle
sub
sub
gs
call
fwait
sbb
ror
mov
or
xchg
dec
xchg
lods
arpl
pop
lods
add
movsl
decl
push
dec
mov
push
pop
jmp
call
mov
mov
cmc
mov
fsubs
ljmp
pop
sbb
or
inc
sarb
pop
add
ret
decl
push
cmpsb
fdiv
filds
cmp
xor
pop
xor
je
in
das
xor
inc
or
mov
push
aad
xchg
jle
sub
jg
ljmp
xchg
xchg
pop
loopne
scas
lods
dec
fdiv
out
mov
dec
cltd
adc
push
stc
sub
les
ljmp
mov
clc
repnz
xor
aam
jmp
or
jne
scas
adc
in
dec
or
scas
push
cld
pushl
xchg
cltd
aaa
icebp
mov
jno
jge
sahf
repnz
push
and
std
add
iret
popf
cld
das
xchg
or
xchg
ret
push
fstpl
mov
daa
ret
dec
ljmp
fiadds
in
in
xchg
pop
jns
in
test
imul
mov
aas
or
xor
inc
pop
xor
mov
lea
outsb
jo
loope
ljmp
ficoml
push
pop
leave
icebp
adc
inc
pushl
cmp
stos
mov
gs
and
adc
and
xchg
dec
mov
fsubrs
or
push
mov
jb
das
sbb
loopne
push
aas
mov
xor
xchg
lcall
push
cld
out
sub
repnz
stos
fildl
loop
lods
rcrb
insb
stos
incl
inc
xor
dec
push
sbb
repz
ljmp
and
mov
cwtl
rcrl
pop
loop
jo
xchg
jbe
inc
sahf
jbe
movsb
in
jmp
mov
and
repnz
insl
jmp
sub
sub
sahf
cmpsb
xor
pop
jg
std
call
jg
fcomp
iret
push
mov
loopw
negl
add
incl
adc
adc
pop
nop
ds
mov
scas
out
stc
rolb
fcmovbe
sub
and
sar
sti
lcall
mov
sbb
stc
movsb
aaa
inc
mov
lcall
jmp
aam
fnstcw
outsl
movsb
pop
sub
xchg
push
jle
cld
clc
shlb
jbe
imul
sarb
or
ds
jmp
xchg
clc
in
inc
pop
jns
cwtl
insb
add
popf
mov
fsts
lret
lea
push
nop
lock
shl
insb
mov
push
adc
ljmp
cmpsl
jbe
out
jns
movl
or
aas
in
mov
outsl
add
cmp
lods
pop
inc
dec
fadds
or
in
decl
dec
addr16
inc
int3
out
movsb
addr16
insl
nop
push
sub
ret
or
dec
adc
push
ljmp
neg
scas
lods
psllq
imul
xor
mov
rorl
or
clc
xchg
mov
or
push
push
pop
pop
fildll
mov
sub
mov
test
je
ljmp
adc
and
sub
lock
pop
mov
fdivrs
jmp
and
call
push
sahf
xchg
pop
xlat
fildll
xor
movsb
xchg
jle
in
nop
pop
inc
and
jg
sbb
inc
int3
xchg
lcall
iret
jg
decl
xchg
stc
mov
int
jg
and
ds
ljmp
sub
sbb
jnp
jle
fs
gs
add
add
mov
jle
push
les
sar
pop
std
mov
jo
cwtl
sbb
pop
pop
cmp
cmp
jb
pushl
pop
jmp
cwtl
inc
push
jbe
in
cmp
in
sbb
int3
push
dec
mov
mov
push
in
cld
push
lret
sbb
sub
adc
fcmovnb
dec
sub
out
mov
xor
add
sub
js
pushl
jp
pop
iret
negl
sbb
cmp
jmp
pushf
inc
sub
aad
push
dec
lock
mov
jae
sbb
sub
lcall
pop
push
sub
or
inc
les
jg
sbb
out
and
enter
push
jg
daa
xor
jmp
addr16
jg
or
dec
js
je
aad
movsl
mov
rorb
pushf
cmpsb
sub
iret
das
je
pop
fsub
or
pop
sub
push
std
leave
je
mov
mov
xor
rcr
xchg
adc
push
xor
shrl
mov
cld
jmp
pop
jb
nop
fdivrl
bound
sti
xor
test
scas
cmpsb
or
add
mov
stos
cmp
orl
iret
pop
loopne
dec
push
js
inc
push
data16
sub
jmp
xor
lods
stc
pop
jg
aaa
in
xchg
out
js
test
xor
dec
cmp
adc
mov
xor
int
call
stc
ficompl
xor
out
push
push
sub
je
daa
fidivs
sbb
cmc
and
mov
sbb
movsbl
mov
movsl
jns
jne
data16
mov
mov
mov
dec
inc
data16
xchg
cltd
jge
push
sub
xchg
fnstsw
adc
pop
decl
push
pop
mov
clc
mov
addr16
enter
xor
xlat
incl
jmp
fs
inc
adc
dec
mov
pop
fcomip
jnp
arpl
arpl
filds
cmp
clc
stc
cmp
push
into
shlw
xor
icebp
loop
inc
jnp
sbb
or
fildll
jnp
push
jle
pop
aad
mov
mov
xchg
jne,pt
add
cmp
das
sbb
lret
inc
cmp
jmp
lock
or
xor
pop
fdivrs
in
jns
vxorps
imul
mov
icebp
push
and
mov
scas
rsqrtps
push
pop
call
sarl
inc
std
push
jg
fsts
mov
mov
jge
or
pop
push
cwtl
and
mov
and
inc
ret
xor
jb
nop
mov
ja
jmp
daa
fsubrl
fisttpl
aad
cmp
mov
mov
out
movsl
and
cmp
mov
lock
mov
xchg
sub
test
add
fcoml
xchg
js
decl
ljmp
jle
sub
xadd
xchg
and
cmpsb
fistpl
pop
cmpb
sar
aam
mov
mov
test
iret
inc
jnp
dec
in
lcall
je
xchg
syscall
jns
or
ljmp
add
test
or
lcall
mov
sub
sub
push
jb
sub
push
push
xor
pop
outsl
sahf
mov
fidivl
mov
into
xlat
and
test
fisttps
das
std
or
test
and
mov
stc
push
mov
xchg
jl
movb
fadds
in
adc
jg
fs
cwtl
in
push
jge
dec
cmp
pop
sub
cmp
dec
jg
repz
test
lcall
js
dec
jecxz
inc
test
pushf
sub
and
clc
push
inc
shlb
cli
lcall
imul
shl
or
ljmp
sbb
das
dec
shl
push
push
bnd
lds
fwait
sbbb
mov
cs
mov
mov
mov
into
push
jp
faddl
sub
jmp
ret
int
or
sub
push
fwait
cs
rol
in
push
sbb
clc
jmp
lea
leave
add
js
and
inc
adc
jl
and
add
sub
sbb
insb
and
dec
ret
xchg
leave
inc
inc
add
lcall
dec
cmp
in
rclb
sub
mull
sub
dec
pusha
bnd
cmpsl
mov
stc
jae
mov
imul
cld
jmp
mov
add
fisttpll
and
call
fisubrs
vmaxps
pop
fsubp
jp
mov
mov
fidivs
mov
cmpsb
andl
add
mov
adc
cmpsl
clc
or
incl
pop
int
mov
and
out
clc
dec
repz
push
mov
and
loop
mov
rorb
andb
das
fisttpl
jne
negl
dec
pushf
scas
mov
cmpsl
test
sub
aaa
cmp
dec
sar
add
add
movsl
xor
pushl
dec
ret
les
cmpl
leave
cli
decl
mov
cmp
lods
fildll
cmp
cmp
xor
pushl
les
loope
ljmp
sub
inc
movsb
cmp
push
jnp
data16
cmp
sahf
les
jp
bound
mov
mov
std
fcomps
ss
in
ret
clc
xchg
call
sahf
fmull
jmp
mov
push
stos
or
out
addr16
into
movsl
pop
push
cmp
imul
mov
mov
fidivrl
and
bound
push
xchg
add
inc
loop
popf
in
stos
push
pop
out
jno
ret
jg
pushl
lcall
dec
lds
fnstsw
adc
rcl
jg
in
lods
pop
push
sbb
jle
xchg
jnp
icebp
cmp
ja
sub
les
xchg
dec
add
mov
add
and
or
or
sub
imul
and
sub
jae
jp
les
sub
test
or
sub
shll
iret
arpl
inc
adc
lcall
mov
dec
aaa
jb
xor
jge
adc
pusha
ds
jns
lcall
mov
inc
inc
dec
mov
jbe
xchg
pop
mov
fnstenv
jmp
decl
test
and
pop
dec
mov
lret
add
pop
jns
mov
bound
loope
sahf
aad
pop
cmp
fisttpl
push
push
fsubrl
mov
vpsubusw
cmp
add
cmpsl
ffreep
mov
jbe
xor
adc
pop
insl
add
cmpsl
sub
ds
mov
jnp
test
or
mov
cmp
ret
gs
jge
test
ljmp
test
inc
mov
ret
mov
mov
sub
popf
leave
fsts
jmp
sub
push
jl
subl
testl
pop
xchg
incl
lcall
lds
pop
mov
lea
cs
add
in
xchg
cmc
push
das
pushl
mov
sub
imul
sbb
or
inc
dec
push
jmp
sbbl
xorb
popa
in
incl
add
mov
jb
add
mov
or
and
mov
loop
xchg
pop
fcomip
decl
testb
jns
xor
je
sbb
aam
mov
idiv
call
sbb
pop
stos
pop
iret
jp
divl
int
repz
dec
mov
pop
sti
cwtl
test
cmpb
mov
clc
cmp
push
xor
insl
and
xchg
lcall
mov
xor
aas
or
inc
jge
pop
aam
inc
jne
sub
and
movsb
push
jae
inc
push
jge
shrb
push
sarl
fcompl
jg
cmp
pusha
add
lret
jno
cwtl
out
inc
fbstp
sbb
adc
xchg
add
das
cli
call
cmp
push
push
mov
mov
int3
aad
arpl
test
idiv
jmp
mov
in
push
rcrb
lret
jb
movsl
mov
fisttpl
shlb
inc
mov
decl
fstpl
pushf
xor
iret
jge
push
pushf
jbe
je
xchg
xor
mov
dec
out
add
push
sbb
jmp
xor
stos
pop
in
test
aaa
push
ret
push
insl
es
shll
lcall
dec
decl
mov
mov
lret
mov
aaa
lret
xchg
mov
cmp
xchg
jge
mov
inc
pop
gs
ja
add
xlat
mov
das
xor
mov
fnstenv
or
aaa
hlt
lock
decl
xchg
push
outsb
push
fisubrs
movsl
cmp
aaa
or
sub
sub
sub
pop
and
mov
cmp
sub
inc
push
scas
push
mov
mov
data16
std
push
pop
or
lcall
pop
xchg
inc
repz
pop
push
pop
ss
add
popa
add
cmp
incl
lret
scas
xchg
push
mov
push
inc
xor
in
call
xchg
cmp
xchg
xor
incl
rcrl
push
pushf
pop
push
clc
sbb
ficoms
cli
out
arpl
pop
or
mov
sub
dec
inc
add
gs
outsl
clc
mov
xchg
sti
push
dec
lods
mov
aas
cmp
push
push
jmp
mov
adc
jg
mov
fldl
out
lret
mov
pop
daa
shlb
insb
pop
fsts
ljmp
pushf
xor
adc
dec
sub
pop
lahf
sub
sbb
xchg
popa
scas
pop
ss
jl
jb
dec
cli
mov
jg
mov
add
jmp
call
cmp
mov
out
jbe
jmp
stos
aad
decb
ds
inc
jecxz
mov
jle
jns
std
stos
imul
or
and
mov
jg
loope
add
adc
cs
scas
sti
dec
and
out
xchg
inc
jbe
push
jo
jl
or
add
aas
push
pop
push
fs
mov
incb
push
mov
stos
fwait
addr16
push
sub
mov
imulb
xlat
fadds
ljmp
rcrb
fmull
incl
into
outsb
sub
decl
daa
xchg
int3
in
movsl
cltd
jns
out
ret
or
mov
fcomp
ret
stc
dec
add
lret
add
mov
cld
xor
fmuls
cld
pushl
loopne
sbb
mov
ss
mov
lcall
xor
repnz
jae
cltd
insl
cmp
cli
aam
and
sti
cld
mov
and
rclb
imul
jo
sar
jg
gs
cmc
aad
je
mov
or
dec
add
dec
int3
jnp
out
push
jecxz
bound
call
fs
lea
pop
add
mov
inc
cmpsl
mov
nop
xor
xorl
push
and
jmp
dec
cmp
imul
loope
mov
or
out
sarb
rcrb
sbb
iret
mov
into
sub
rep
int
push
push
xor
imul
jmp
mov
aaa
lods
fmulp
test
out
pop
test
push
das
and
xchg
lahf
add
fstpt
enter
jae
mov
sahf
cltd
xor
xchg
das
negb
filds
data16
and
mov
fcmovnbe
sbb
sar
lcall
cwtl
nop
mov
dec
mov
mov
into
fists
jmp
dec
nop
call
int
xor
lcall
or
negb
xchg
fdivrl
movsl
mov
cmp
inc
xchg
hlt
xchg
inc
les
incl
add
pop
mov
decl
inc
cmp
rolb
jle
mov
daa
jnp
jle
pop
cmpsl
jle
scas
cmp
inc
stc
ret
lcall
cwtl
push
adc
fsubrl
cmp
add
ljmp
pop
sbb
ljmp
pop
xor
xor
sbb
dec
imul
call
adc
nop
test
andl
pop
mov
lret
adc
dec
and
mov
decl
inc
mov
adc
movsl
mov
xor
das
jp
pop
fbld
jmp
mov
inc
popf
in
push
push
leave
sahf
pusha
pop
roll
and
jnp
add
or
fnstcw
mov
jmp
xchg
add
test
incb
pop
test
xchg
lret
mov
in
in
mov
ljmp
pop
imul
and
repnz
hlt
iret
cmp
cld
push
divl
mov
or
ds
push
xchg
jg
or
stc
fisttpl
sahf
dec
jecxz
decl
lods
pop
add
test
add
jb
leave
dec
mov
stos
or
ljmp
mov
les
fmuls
aaa
cmpsb
lea
push
jb
into
mov
pushl
jne
adc
cs
pop
hlt
pop
mov
cld
fidivrs
decl
ljmp
and
pop
scas
mov
mov
adc
fdivr
fcomip
incl
push
sub
lret
int3
jno
lods
and
repz
dec
pop
adc
decl
fildll
xchg
xchg
xchg
dec
add
iret
mov
push
sbb
fwait
add
push
mov
cli
jmp
xchg
lret
add
and
xor
pushf
jp
repz
jmp
xchg
fsubrs
ljmp
mov
sub
xor
das
sarl
pusha
aad
pop
mov
or
bound
ja
jg
xor
xchg
outsl
xchg
fldt
pop
push
pop
cmp
mov
dec
scas
cmp
mov
mov
sub
mov
test
ja
push
adc
cmp
fimull
and
test
into
xchg
mov
fildl
pop
cmp
mov
mov
pop
jmp
cmp
sarb
push
adc
cld
inc
push
lret
loope
xor
nop
mov
int3
ljmp
cmp
mov
add
pop
insl
sahf
in
int3
lods
sub
mov
sub
cmpsb
pop
mov
pushl
push
adc
dec
pop
stos
cmpsb
jmp
sub
out
inc
pop
test
jmp
push
or
and
leave
push
in
mov
adc
xchg
insb
push
push
aam
inc
cmpsb
sub
ror
push
sbb
les
out
xchg
jecxz
push
les
cltd
ficompl
jae
lcall
jmp
push
mov
dec
mov
add
mov
pop
stc
in
dec
mov
test
jo
int3
push
sbb
cld
cltd
or
mov
stc
in
loopne
js
cmp
jle
xchg
sub
xor
xchg
pop
sbb
pop
dec
dec
in
int
enter
jne
mov
mov
pushf
mov
gs
mov
ljmp
lock
imul
popa
add
sahf
and
xchg
bound
adc
fld
out
pop
lock
dec
test
mov
add
mov
sar
jmp
out
ss
loop
mov
xor
sub
imul
int3
sub
outsl
lret
mov
jl
dec
aas
sbb
and
outsl
dec
sbb
xchg
in
test
ljmp
pop
repz
ficomps
jecxz
decb
jge
and
sbb
dec
std
pop
lret
pop
mov
outsb
jl
popf
inc
insb
neg
ljmp
incl
icebp
andb
inc
lods
lcall
jg
dec
movsl
pop
filds
push
and
clc
lcall
jg
mov
adc
push
inc
jo
cmp
addl
test
ljmp
jne
pop
xor
ljmp
inc
scas
dec
dec
cmpsl
push
inc
ja
lods
mov
xchg
test
push
lods
adcb
or
or
sbb
adcl
out
jo
dec
and
jo
loopne
movsb
cmp
cwtl
out
mov
loopne
xchg
std
pushl
cwtl
mov
xchg
mov
pop
push
xchg
cmpsl
fildll
les
fcomip
push
push
ret
jg
inc
mov
imul
test
iret
lret
pop
mov
shlb
in
test
inc
mov
sahf
mov
adc
push
dec
in
shrl
sbb
push
ljmp
mov
sarl
pop
arpl
push
pop
stos
inc
cmp
add
aam
mov
inc
mov
ds
jg
add
pop
fidivs
jecxz
pop
or
repnz
orb
call
inc
lcall
cmp
cmp
xorb
repz
push
lods
int3
ljmp
ljmp
movsl
sub
pop
push
and
jp
pop
test
lods
ds
ljmp
lods
mov
xchg
mov
xchg
test
out
pcmpgtb
adc
je
sbb
ret
mov
mov
jnp
div
mov
test
fnstcw
inc
push
jp
inc
jmp
clc
cmp
mov
and
ja
aas
jecxz
fucomi
or
aam
orl
incl
movb
cmpl
lcall
or
xor
outsb
adc
notl
sbb
mov
xchg
lea
or
mov
cmp
fs
and
sbb
pushf
xchg
int
inc
or
jg
incl
scas
xchg
iret
xor
out
and
dec
xchg
mov
dec
out
cld
call
add
inc
lods
add
fdivr
jg
in
call
fists
sub
xchg
test
in
pop
sub
aam
mov
pop
mov
shll
clc
icebp
sbb
push
mov
dec
cli
gs
pop
icebp
ret
jmp
cld
xor
xchg
jmp
sub
dec
lcall
push
mov
mov
stc
pop
add
xchg
int3
dec
xchg
pop
in
cmc
mov
shlb
lds
call
and
xchg
push
inc
popf
mov
mov
sti
sub
je
sbb
dec
adc
cmp
lcall
xchg
shrb
loopne
inc
les
insb
out
inc
or
lret
mov
incl
mov
jns
scas
test
test
dec
pushl
jle
pop
pop
les
ret
aaa
dec
mov
and
lea
xorb
mov
inc
push
sbb
aam
pushf
andb
insb
inc
mov
inc
rorl
outsl
call
jb
dec
outsl
mov
pop
or
cltd
jb
mov
pusha
mov
aam
daa
jge
incl
pop
pop
adc
dec
adc
or
jmp
mov
jns
fstl
adc
lods
jecxz
enter
decl
popa
hlt
mov
stos
cmovge
in
fnstsw
jl
paddusb
jg
push
loop
inc
fwait
mov
lock
ja
test
ret
mov
sbb
xlat
sbb
mov
jne
cmpsb
imul
daa
sti
loop
push
imul
add
sub
cmp
pop
mov
mov
inc
insl
pusha
aas
inc
mov
in
xlat
jp
imul
fisttps
jg
std
cmp
pop
mov
in
imul
adc
adc
repnz
jmp
rclb
ljmp
inc
adc
sbb
call
mov
push
dec
xchg
dec
pop
ret
in
cmp
mov
loop
xlat
push
push
xchg
pushf
icebp
xchg
dec
mov
pop
roll
insb
xlat
sbbb
jmp
pop
lahf
aaa
scas
jg
aaa
pop
inc
cwtl
sbb
inc
sar
and
pop
push
or
mov
sbb
outsb
addr16
inc
or
clc
ret
dec
xchg
and
ljmp
push
gs
test
lret
fildll
cmp
push
lds
inc
or
fdiv
sti
lcall
mov
mov
xchg
test
insl
mov
cli
test
bound
cs
call
inc
cld
push
nop
cld
leave
cmp
jge
out
daa
ljmp
ja
shll
call
xchg
call
loopne
vcvtsd2ss
xor
mov
es
lea
pop
xchg
sahf
fistpl
xchg
sbb
decl
leave
adc
in
inc
mov
dec
insb
out
imul
jb
sbb
repz
into
in
ljmp
data16
push
jnp
mov
sbb
repnz
leave
pop
loop
test
inc
add
dec
push
ljmp
or
or
cmp
sar
mov
test
ftst
jnp
cmp
insb
insl
popa
cmp
aam
cli
adc
jg
mov
test
mov
call
ret
std
decl
hlt
lret
mov
push
adcb
sub
and
je
dec
jg
or
orl
cwtl
jge
aam
fucom
and
lcall
mov
xchg
pop
enter
inc
lcall
mov
dec
sarl
cli
sbb
gs
cmp
fdivrs
icebp
jl
fadds
add
and
dec
aas
js
cwtl
and
and
fsubrs
mov
mov
ljmp
jo
jns
rclb
mov
jmp
mov
jb
orb
pushl
cs
jbe
clc
xor
or
push
pop
fwait
xchg
lods
filds
adcb
pop
outsb
mov
stos
add
inc
push
add
push
or
add
mov
xchg
adc
int3
shl
push
mov
les
sub
aaa
mov
stc
jg
sub
loop
mov
les
gs
cmp
mov
jmp
mov
and
iret
push
insb
sub
shrb
jns
push
mov
lahf
rcll
test
jg
out
test
mov
jmp
dec
mov
std
jnp
das
mull
pop
push
mov
jnp
movsl
jo
jg
xor
pushf
mov
dec
lea
pushl
jne
lret
push
inc
into
seta
fnsave
enter
filds
gs
out
pop
inc
ret
cmp
jmp
sbb
mov
scas
dec
mov
pop
sti
adc
scas
sub
dec
sub
push
out
and
call
dec
push
push
out
mov
in
jmp
aam
fsubrl
xchg
jo
sbb
sbb
cmp
aad
fisttps
sbb
dec
sbb
jle
sub
mov
cmpsl
add
in
loopne
pushl
ss
cmpsb
loope
mov
inc
test
xor
out
add
cwtl
inc
dec
xor
clc
mov
sub
sbb
inc
filds
loope
jge
imul
test
or
jmp
push
add
add
stos
cmp
shll
dec
js
mov
mov
push
and
imul
outsl
xchg
fidivrl
call
es
cmp
dec
push
rclb
lret
fmuls
lret
andl
in
aam
xchg
cmp
loopne
add
cmp
aaa
cli
divl
mov
add
out
mov
push
in
les
push
inc
aas
test
out
xchg
std
cmp
jecxz
inc
bound
mov
out
mov
or
and
call
mulb
cmp
lret
xor
fstpl
movsb
xchg
pushl
pop
cmpsb
scas
cli
lcall
inc
or
fs
adc
add
pop
jb
ljmp
lods
rcrl
push
dec
xor
iret
std
sbb
stos
insb
push
fs
jle
pushl
adc
jecxz,pn
inc
jle
jge
xor
and
ret
inc
mov
adc
ret
jmp
lea
ja
cmp
fwait
xor
outsl
and
call
mov
out
sub
jnp
int
jns
xchg
xchg
sarl
cwtl
sti
mov
int3
imul
and
adc
push
dec
pop
ret
or
jo
pop
adc
decl
idiv
in
mov
es
decl
xchg
out
jnp
pop
jno
cmc
outsb
stos
ret
jg
scas
cli
aas
adc
xlat
cld
xchg
or
sti
inc
cld
or
stos
je
nop
rol
subl
pop
add
int3
in
call
push
ja
bnd
or
test
or
mov
adc
sub
negb
inc
inc
cli
dec
std
mov
or
mov
mov
dec
jg
inc
addr16
and
ret
test
test
fisttpll
nop
ljmp
or
sub
sahf
cld
jg
cmp
or
cmp
std
dec
iret
test
rorl
test
notb
sar
xchg
ja
roll
push
cmc
test
mov
add
ljmp
cmp
push
add
cltd
rol
add
or
add
pop
sar
push
daa
jo
sbb
rorl
leave
scas
loop
lcall
adc
push
call
jge
push
cmp
stos
repz
push
mov
mov
and
das
cld
js
adc
fs
leave
fwait
outsl
orb
mov
cmp
sub
push
orb
dec
pusha
cs
push
mov
call
pop
fcoml
push
mov
or
out
cwtl
dec
loopne
mov
or
jmp
test
in
xor
xchg
cmp
inc
cld
pusha
int3
mov
xchg
pop
adc
mov
sbb
dec
mov
repz
mov
leave
mov
pushf
js
adc
pushl
bound
pop
pop
adc
inc
push
sbb
mov
ret
sbb
inc
leave
mov
lock
decl
cmpsb
jnp
mov
xor
dec
andb
inc
adc
cld
xor
ljmp
inc
test
shrl
fldcw
decl
dec
lret
test
stos
mov
jnp
cltd
loop
outsb
repnz
pop
das
dec
incl
add
and
in
cmp
sub
in
lret
in
cs
incl
adc
jp
push
jmp
aad
cmp
xchg
lahf
mov
inc
mov
mov
pop
das
ja
mov
test
xchg
es
pushl
mov
nop
dec
lock
subl
and
iret
push
paddd
fstl
movsl
lds
cs
cmp
inc
fildl
cld
rolb
aad
jmp
fcos
ret
repnz
mov
icebp
sub
push
push
sub
xchg
sub
jg
shrb
jmp
sub
mov
xor
or
cmpsb
jl
decl
jmp
sub
xchg
sahf
mov
aaa
pop
es
sub
add
cli
out
inc
enter
push
int
dec
inc
mov
push
movsb
rcll
jns
xlat
out
jle
incb
imul
or
mov
rolb
aad
incl
jbe
dec
pushf
es
aaa
addr16
xchg
mov
ret
sub
imul
xor
ja
fwait
and
imul
jg
cmp
push
jo
add
pop
mov
arpl
push
js
into
loop
adc
incl
mov
ret
add
jns
adc
scas
push
lret
jae
adc
insb
aas
repz
mov
repnz
dec
jl
jae
cmpsl
test
push
add
mov
add
ljmp
out
insb
ljmp
sbb
ja
outsb
sub
mov
arpl
pushl
inc
icebp
jl
in
stos
lret
mov
jecxz
js
add
lods
lds
pop
or
incl
mov
jae
jl
dec
decb
scas
push
jecxz
sbb
dec
and
sahf
push
fbstp
outsb
adc
sarl
xchg
in
rcrb
ss
inc
pop
jge
or
sbb
mov
mov
inc
xlat
lds
xchg
ljmp
mov
mov
xchg
test
jbe
adc
inc
inc
pop
andl
adc
or
mov
fldt
jle
in
mov
xchg
pop
lcall
push
push
ljmp
xor
popa
je
jl
cmp
push
mov
push
lods
pop
mov
dec
add
shl
mov
push
and
jmp
mov
pop
xor
sbb
scas
lods
or
sbb
cltd
push
movsb
lret
xorl
lcall
xchg
jg
push
push
sbb
adc
mov
cmpsl
aaa
inc
sti
cmp
jmp
push
xchg
adc
test
mov
xor
call
mov
xchg
adc
sar
fsubl
nop
push
pushf
cmp
adc
xchg
inc
add
int3
lret
cli
push
sbb
movsl
ficompl
cmp
add
sbb
fcompl
arpl
stc
imul
int3
das
out
or
lret
stc
lcall
cltd
insl
scas
mov
xor
push
xor
sub
pop
test
ficompl
call
int
xor
inc
dec
andb
mov
and
pushf
int3
enter
xchg
jo
sti
mov
call
jb
add
fisubs
je
push
xchg
js
sub
sub
mov
push
shll
imul
mov
int
adc
popf
push
cli
jmp
into
arpl
mov
fwait
sub
lds
icebp
add
jl
jecxz
test
ret
test
xchg
lea
stos
and
or
int3
mov
inc
inc
stos
mov
xchg
fisubs
cmc
dec
push
lcall
jl
lods
mov
fstps
jbe
popa
js
cmp
out
cmpsl
cmp
cmp
push
jmp
clc
call
mov
sti
movsl
in
std
mov
mov
call
inc
or
loop
xchg
push
jle
test
nop
cmc
xrelease
mov
loopne
js
mov
pushl
adc
int
fdivrl
pop
imul
stos
xchg
mov
clc
xchg
mov
loopne
xchg
stc
test
rcll
dec
or
sbb
test
pop
hlt
decl
out
xchg
out
inc
push
push
clc
sub
adc
dec
les
push
ja
pusha
into
jae
cmp
leave
cmpsl
jle
aad
ret
or
mov
sarl
add
test
jmp
cmc
adc
out
mov
js
clc
sub
push
jecxz
jns
mov
jo
loopne
jmp
fcomps
and
lcall
repnz
pusha
loopne
lds
cwtl
fadds
incl
mov
jl
xor
xor
leave
push
faddl
pushl
ds
fabs
pop
fucompp
lock
cmpb
sub
fisubrl
sbb
aaa
lret
pop
mov
fisubrs
jp
ss
add
mov
mov
call
xor
dec
outsl
push
cs
aad
movsb
push
dec
out
clc
ret
cmc
jae
inc
movsl
clc
dec
lea
hlt
dec
jmp
add
lahf
daa
in
pop
movsb
mov
test
cld
sub
imul
incl
enter
xor
mov
mov
dec
aas
or
mov
add
add
mov
scas
xchg
jle
movsb
loopne
repz
call
imul
outsb
pop
and
sub
fldcw
ret
mov
inc
sub
lcall
mov
sub
loopne
pop
dec
movsb
pop
mov
sbb
cmpsl
rcrl
cld
cli
ret
imul
mov
mov
mov
sub
xchg
ss
mov
in
lret
mov
or
pop
and
push
or
adc
add
incl
cmp
add
sub
pushf
or
push
pop
ljmp
push
outsl
cld
pop
ljmp
jbe
ss
mov
push
add
das
xchg
jg
push
pusha
push
sbb
repnz
mov
mov
mov
hlt
xchg
es
jmp
push
cmpsb
pop
popf
xchg
es
cmp
nop
dec
into
pop
loopne
fidivrl
fidivl
jne
add
push
test
fisubl
adc
dec
rol
jl
lods
push
test
int
and
or
adc
jnp
cld
popa
cmp
dec
inc
inc
ss
pop
mov
ljmp
lea
ret
sbb
adc
or
ljmp
mov
imul
es
sub
cmp
jp
jecxz
call
pushl
fs
mov
pop
mov
in
pop
leave
push
push
aas
adc
cli
ljmp
cltd
dec
xor
cmpsl
pop
mov
add
jae
push
addr16
mov
cmpl
xor
push
je
mov
cmpl
js
adc
lcall
mov
push
aas
mov
fsubrp
enter
jae
rolb
jmp
push
sub
and
adc
sahf
sub
call
popf
popa
aas
clc
incl
xor
jns
sbb
aam
daa
xchg
mov
mov
fs
rorl
xor
ljmp
push
stos
aaa
cmp
stos
push
mov
xchg
je
cmp
ljmp
rolb
sti
out
cld
or
subl
enter
decl
lock
js
adc
mov
ret
xchg
stos
mov
pop
cmp
test
jae
lds
dec
jne
add
add
dec
into
test
decl
sub
jg
mov
repnz
push
and
lret
adc
cmp
imul
xor
fstl
adc
inc
leave
in
mulb
ljmp
fidivs
loopne,pn
sahf
mov
adc
adc
pop
xor
mov
cli
decl
into
je
mov
mov
mov
icebp
adc
adc
mov
mov
scas
push
jnp
adc
ret
fistps
jno
mov
jnp
sbb
push
xchg
cmc
cmp
push
push
pop
pusha
mov
jo
mov
decl
cmpsb
cmpsl
das
push
lods
cli
scas
cmp
xor
dec
xchg
adc
dec
inc
or
sbb
push
popf
cmp
ljmp
xchg
mov
lds
or
ljmp
rorb
lcall
pushl
adc
pop
dec
iret
jl
add
dec
jno
idivb
xchg
jl
xchg
outsl
lds
jae
das
mov
jns
add
and
stos
repz
pushl
and
mov
add
movsl
out
jbe
mov
mov
add
loope
push
or
insl
stc
incl
mov
repnz
mov
pop
aas
clc
insl
inc
js
clc
or
jge
adc
fsubr
sbb
idivl
sbb
lock
int3
aaa
pushf
push
sbb
scas
cli
mov
pushf
jecxz
lret
adc
or
fwait
in
cmpsl
pushf
dec
pop
pop
test
les
cmp
adc
lds
mov
stos
loope
sahf
xchg
push
es
cmp
test
pop
mov
or
pop
inc
out
jl
ja
dec
mov
sbb
lahf
incl
outsl
add
xor
out
sub
push
sub
sti
mov
call
mov
cmpsb
dec
daa
adc
pop
divl
jno
sarb
cmp
jmp
push
mov
xchg
mov
mov
add
jbe
rorl
jge
lods
push
ljmp
push
mov
arpl
jne
and
out
sarb
scas
and
push
lods
push
std
hlt
fwait
std
test
add
stos
push
push
fldl2e
out
mov
clc
loope
mov
xor
rol
xor
loopne
adc
or
jmp
sahf
push
stos
add
test
cli
lods
pop
into
push
incl
stc
xchg
adc
aaa
repnz
fnsave
daa
outsl
int
addr16
inc
xchg
rcll
jmp
hlt
fbld
ja
cmpsb
cmp
sub
imulb
loopne
xor
mov
ljmp
inc
jnp
fbld
adc
repz
aaa
and
into
sub
aam
cmc
scas
mov
loope
push
or
cmpsl
sbb
into
mov
and
call
pop
dec
stos
test
lds
xor
xchg
sbb
push
and
cmc
mov
sub
out
add
mov
inc
test
sbb
jmp
xchg
sahf
lods
fcompl
scas
mov
imul
sbb
mov
out
pop
sbb
and
cli
mov
jbe
add
rcl
arpl
aas
out
inc
or
jg
adc
int3
inc
mov
and
jmp
aam
js
fdivl
cmpsb
xchg
enter
sbb
icebp
loop
jge
mov
test
inc
addr16
jae
inc
add
mov
decl
or
in
fsts
jae
arpl
das
js
cltd
sahf
pop
inc
dec
and
xchg
test
incl
test
jg
repz
or
lahf
nop
int
pusha
incl
cmp
test
enter
dec
arpl
clc
or
mov
or
pushl
fiaddl
jno
pop
imul
adc
fstpl
xor
push
cld
xchg
lcall
cmp
mov
lcall
mov
cltd
xchg
and
cmp
jp
int3
fstpt
hlt
out
add
xchg
out
push
push
pop
pop
mov
into
jne
js
es
or
cmp
stc
imul
rorb
jmp
inc
shll
js
inc
or
das
das
fisttps
mov
xchg
push
mov
jo
aad
mov
jmp
and
in
sub
cwtl
xorb
stos
push
imul
adc
fildll
xor
or
mov
jne
sbb
test
iret
push
push
mov
pop
push
fwait
sar
call
popa
jae
xor
je
lea
mov
xor
out
inc
or
push
jb
lret
test
sub
ljmp
mov
fwait
mov
rcll
mov
cld
mov
push
lds
ds
decl
ja
xchg
or
xchg
loop
lahf
cmp
ljmp
jns
push
push
or
jo
dec
sbb
rolb
into
push
not
xor
rclb
hlt
jmp
aam
insl
or
mov
pop
inc
add
divl
pusha
cwtl
dec
pop
inc
int3
stc
mov
lcall
jp
sbb
jne
popf
push
nop
addr16
imul
jle
mull
push
mov
xchg
sbbb
jb
es
mov
push
cmpb
hlt
jb
mov
or
orl
mov
xchg
outsl
lcall
ljmp
jns
cmp
fiaddl
rcrb
imul
or
ret
std
outsb
sar
in
mov
out
inc
cmp
mov
gs
adc
pop
push
push
lcall
repz
xor
dec
loope
jns
addr16
push
scas
mov
xchg
mov
insb
push
pop
jmp
pop
sub
dec
sti
inc
mov
gs
sub
in
mov
push
add
xor
incl
jae
jle
pop
add
orb
jae
mov
das
enter
mov
cmp
push
cmp
xchg
pop
xchg
fucom
push
sti
jmp
adc
mov
mov
xlat
lds
orb
and
das
testb
mov
test
sbb
fs
mov
repz
test
inc
out
xor
fcmovnb
or
dec
arpl
call
js
mov
cmp
and
dec
data16
cmp
imul
loop
in
loop
outsl
mov
lods
fisttpl
dec
subb
adc
call
movsl
push
pusha
popf
divl
and
push
loope
mov
call
call
push
loope
push
dec
dec
in
in
mov
push
pop
ljmp
jmp
cmp
pop
outsl
in
movsl
xchg
inc
test
loope
xor
orb
bndldx
cmp
fcmove
in
mov
or
adc
rorb
jbe
inc
lea
inc
sar
incl
jl
mov
jl
cmp
push
cmp
mov
es
clc
test
lahf
or
jecxz
pushf
jb
fnstsw
mov
fsubrl
jle
nop
out
inc
in
pop
ljmp
jns
push
xchg
push
jmp
pop
pop
mov
push
ja
jno
hlt
sbb
sbb
add
je
ret
xor
in
push
pop
push
out
and
adc
je
pushf
test
push
jae
mov
push
jmp
sbb
rcl
adc
movsl
lock
mov
jbe
or
sub
out
ret
movsl
scas
fs
mov
ds
pushl
lcall
jne
add
mov
xchg
cmpsl
es
cwtl
mov
lcall
cld
mov
sti
or
ds
mov
and
jb
fldenv
ljmp
inc
pop
leave
add
sbb
inc
cwtl
adc
inc
sbb
and
mov
std
mov
sub
lcall
sub
dec
popf
out
add
les
push
mov
sbb
sbb
mov
or
call
pusha
xchg
cmp
lret
orl
jmp
jns
sbb
cmp
xor
popa
movsl
incl
push
in
jl
adc
lcall
or
jns
cli
xchg
enter
mov
push
call
cld
call
jne
jl
daa
loopne
movsl
or
test
jae
popa
inc
frstor
movsb
cs
ljmp
push
lock
mov
sar
es
sbb
pop
sub
ds
xor
test
jg
jmp
addl
jecxz
gs
or
and
out
rol
adc
mov
int
dec
cmp
jbe
notb
xchg
push
dec
sub
cmp
pop
cmp
push
inc
push
mov
adc
jp
shrl
sub
call
imul
cmp
cmp
inc
and
addb
jle
sbb
ljmp
in
xchg
retw
xor
and
je
popa
mov
lcall
mov
jo
jl
mov
dec
push
stos
pop
lea
add
ljmp
scas
mov
or
lret
das
imul
daa
jl
icebp
mov
sub
scas
cmc
xor
adc
xor
mov
push
sbb
daa
xor
push
test
fnstenv
enter
imul
adc
lcall
jmp
push
test
mov
dec
adc
in
popa
sarl
push
cmp
stc
and
aaa
lea
ss
fisttpl
test
aas
icebp
ljmp
add
cmp
hlt
leave
push
xor
sub
push
lea
mov
repnz
arpl
or
jle
and
mov
mov
cmp
jns
mov
shrb
shlb
repnz
jg
cli
pushl
leave
push
imul
iret
pop
sub
push
mov
push
sub
test
cs
pushl
shll
gs
dec
or
adc
fcmovbe
xor
jp
mov
push
pop
sbb
aaa
out
push
mov
and
decl
decb
or
sub
push
inc
mov
ret
adc
jg
decl
adc
fs
stos
in
call
mov
sar
add
push
scas
dec
lods
rorb
cmpsb
jl
stos
arpl
dec
sbb
pop
decl
cltd
std
xor
call
movsl
or
in
dec
mov
jnp
inc
mov
mov
movsb
test
cs
std
lcall
sbb
push
xchg
mov
sahf
es
dec
out
jns
jnp
gs
push
into
mov
out
cli
call
adc
out
xor
ret
jo
adc
lahf
push
mov
jmp
call
test
frstor
movsl
gs
hlt
push
add
and
fisubrl
mov
popf
lcall
daa
andb
enter
dec
repz
shlb
inc
icebp
daa
in
daa
or
xchg
xchg
cmpsb
add
jp
add
xor
std
mov
repnz
sbb
ljmp
aam
decl
fistpl
mov
cwtl
movsb
xchg
hlt
int
sub
iret
mov
mov
inc
aad
inc
mov
aad
add
pusha
cmpsl
inc
in
add
cmp
in
cli
decl
aas
fidivrl
lahf
repz
insb
out
movsl
aad
and
repz
push
push
lcall
outsl
stos
jle
xchg
push
lret
and
rolb
or
decl
or
cli
cmpxchg
push
cmp
lods
pop
and
out
lods
sub
add
imul
sbb
jp
inc
sbb
and
mov
jge
cmpsl
dec
subb
add
incl
mov
cltd
popf
arpl
pop
mov
push
cld
movsl
je
ljmp
roll
out
sub
mov
xor
pop
and
sub
and
filds
pop
sbb
push
jg
test
mov
and
mov
pop
cmp
lds
pop
pop
cld
or
push
sbb
sub
loopne
mov
popf
mov
and
jmp
dec
ficoml
sbb
imul
inc
push
or
out
dec
inc
jle
hlt
ffree
aam
pushl
data16
nop
adc
lock
shl
xor
loop
cmpsl
mov
mov
movsl
add
stos
call
pop
mov
push
cmpsb
push
dec
dec
in
decl
sub
mov
mov
sub
xchg
adc
pop
mov
push
jmp
divb
mov
sub
jle
add
scas
push
pop
mov
stos
adc
fists
add
push
insl
pop
imul
ret
hlt
xor
inc
icebp
lea
xor
test
or
xchg
pushl
push
clc
loop
loopne
into
inc
mov
in
pop
sub
pushl
hlt
push
pop
push
mov
insb
and
inc
pop
mov
pushf
fwait
pop
mov
push
je
lret
lcall
lock
call
and
push
data16
incl
jmp
jle
dec
lock
stos
out
sbb
mov
jns
add
sub
decl
call
in
jno
push
sub
xor
mov
cmp
mov
push
insl
inc
push
cmc
insb
lods
jno
fnsave
mov
data16
inc
jl
fstpl
xlat
loop
ljmp
jae
push
fldcw
mov
jnp
in
bound
jecxz
cmc
jmp
cmp
dec
adc
bound
adc
les
jo
mov
inc
lods
fwait
lcall
xor
push
jecxz
lret
leave
inc
lods
test
pop
pop
movsl
inc
inc
jns
add
lahf
push
les
imul
lods
push
scas
sbb
jle
xchg
lock
mov
gs
jnp
aam
test
mov
rcr
jne
lret
mov
seto
sbb
sub
mov
fs
xchg
mov
mov
xor
ljmp
xchg
xchg
je
pop
lahf
fistl
pop
pop
or
cmp
xchg
mov
add
lea
adc
call
roll
aas
adc
add
push
jp
inc
mov
pop
push
mov
xchg
and
enter
lret
inc
sub
xchg
jnp
outsb
mov
addl
cmp
mov
cmp
cmp
push
data16
cmpsl
imul
xor
mov
scas
dec
jmp
ljmp
mov
mov
pop
pop
lea
call
js,pt
adc
cmpsb
enter
sti
hlt
jae
add
xchg
in
insl
aam
mov
mov
ljmp
sbb
test
xchg
ret
xor
pushl
adc
clc
pushf
stc
pop
cwtl
adc
inc
xchg
roll
mov
jecxz
dec
add
sbbl
js
add
fwait
rcr
aas
insb
and
retw
mov
adc
pop
les
nop
add
sbbb
scas
add
loope
mov
outsl
push
ja
pushf
xchg
cmpsl
cmp
push
adc
mov
jmp
xor
inc
and
scas
dec
mov
ljmp
sub
push
add
sub
sbb
in
or
sbb
movsl
incl
outsb
mul
push
leave
sub
mull
mov
jl
js
adc
mov
inc
mov
mov
mov
pushl
mov
enter
mov
mov
das
mov
aam
mov
sbb
push
repz
aad
xchg
lcall
ja
loopne
cmc
sti
fadd
scas
pop
lods
xchg
mov
movsl
ljmp
test
cmp
outsl
loope
mov
test
inc
lret
inc
rclb
mov
or
mov
dec
push
pop
stos
jmp
jnp
mov
jg
mov
nop
loopne
mov
push
mov
nop
orb
push
pop
pop
push
ds
cltd
out
mov
push
sub
std
jg
adc
push
cltd
mov
sbb
jl
insl
ja
push
mov
jmp
push
nop
call
lock
xchg
dec
sub
add
popf
mov
adc
sar
decl
jl
ss
and
push
mov
or
or
mov
xor
sub
std
jle
jbe
scas
ljmp
int
std
mov
out
shll
daa
lret
xchg
push
mov
mov
incl
jg
pop
into
loop
test
aam
dec
cs
incl
push
repz
dec
js
popa
stc
outsl
sub
sbb
cmpsb
cmp
jbe
adc
popa
ljmp
fimull
in
push
hlt
in
jne
outsl
adc
mov
and
sbb
push
or
jns
xor
xchg
data16
outsl
out
out
stos
jmp
xchg
int
cmp
mov
sbb
mov
popa
inc
test
push
cmp
cmp
pop
ret
ret
mov
jmp
adc
mov
leave
jmp
sub
aaa
push
sub
dec
rol
aad
out
pop
incl
sahf
inc
sub
orps
push
aad
lahf
cmp
sbb
incl
loope
arpl
lret
xor
mov
lods
in
push
out
scas
outsb
leave
cmpl
pusha
enter
pop
out
es
mov
mov
lcall
and
repnz
int3
int
mov
add
xchg
fsubs
adc
pop
sub
jg
js
int
dec
fisttpl
loope
int3
inc
je
subb
fsubs
mov
rcl
jno
adc
ss
jnp
ss
rclb
mov
je
push
icebp
or
sub
and
jecxz
pushl
gs
dec
xchg
jne
dec
push
sbb
push
test
cs
clc
jg
inc
mov
or
sub
xor
xchg
cmp
fwait
popa
call
aad
lcall
ljmp
loopne
jmp
hlt
stos
pop
mov
sbb
pushf
decl
adc
inc
add
mov
sub
leave
imul
fwait
cmc
insl
lock
in
ljmp
movsb
jbe
jb
std
je
mov
into
scas
pop
mov
shl
xlat
jge
out
repz
push
mov
lcall
add
in
dec
int3
xchg
sbb
jae
decl
sahf
popf
or
idivb
xchg
add
mov
addl
jg
cmp
pop
jnp
lock
cmc
mov
lcall
mov
sbb
push
mov
jne
xor
push
mov
out
movsb
mov
out
mov
subps
sub
mov
repnz
dec
pop
clc
ljmp
sbb
popf
dec
mov
cltd
xor
add
pushl
decl
xchg
inc
mov
jns
outsl
add
cs
mov
push
adc
cmp
mov
mov
in
dec
jmp
pop
ret
imul
lcall
stos
test
pop
mov
mov
call
clc
jne
jg
mov
xchg
pop
push
sub
repz
push
pushf
rcrb
and
out
movsl
popf
dec
filds
js
out
mov
push
pop
and
pushl
push
jmp
xchg
pop
iret
xor
or
stos
sbb
pop
mov
adc
decl
inc
lock
jno
out
out
xor
push
or
dec
mov
call
orb
or
cli
add
aam
hlt
sub
je
mov
adc
push
xlat
sahf
mov
lock
enter
pushf
dec
ds
rolb
repz
mov
cmc
mov
rolb
inc
repz
jge
sub
lcall
sbb
pop
sbb
out
push
pushf
int
lods
call
data16
dec
pop
pop
pop
lret
testb
sbb
stos
pop
lcall
dec
jl
inc
ret
xchg
pop
jmp
ja
in
sti
pop
lahf
lods
mov
xchg
daa
outsl
sbb
add
ja
test
ss
sar
jmp
scas
cltd
sub
cmp
pop
ljmp
mov
jo
call
dec
fs
mov
cmp
movsb
mov
and
scas
sub
sahf
jg
and
add
ds
insl
or
cmpl
incl
fldcw
and
fldt
movsb
int3
mov
movsb
rsm
and
cmp
stos
cltd
ljmp
jecxz
jns
sub
xchg
dec
out
test
fucomp
add
in
cmp
sbb
jl,pt
or
dec
jle
mov
lods
and
rcrb
in
insb
jle
pop
pusha
mov
hlt
inc
pop
dec
dec
push
nop
lcall
sbbb
adc
lret
stos
mov
fwait
cmpsb
out
jno
inc
pop
mov
inc
mov
xor
cs
lcall
lret
jge
push
adc
and
jns
sbb
sbbb
test
or
push
pop
jmp
jmp
sbb
enter
or
or
and
mov
lock
jmp
sbb
in
fisubs
and
sti
xor
call
or
ds
and
cmp
adc
call
dec
repnz
ljmp
iret
fwait
test
pop
les
inc
icebp
sbb
jp
mov
sti
and
dec
in
pop
pushf
aaa
std
jmp
mov
sbb
std
int
mov
es
bound
sbb
cld
pushl
mov
ror
pop
dec
ficomps
out
jg
aad
lock
mov
paddsb
mov
loop
push
inc
push
dec
scas
aam
xor
loope
and
stos
add
cli
fwait
add
das
test
cmp
dec
std
pushl
imul
int
sub
or
loopne
xchg
fcomip
icebp
imul
mul
insb
outsl
in
xor
std
pop
mov
pop
or
jle
xchg
pop
loop
rorb
push
sahf
data16
push
das
clc
mov
sarl
ss
mov
mov
xchg
in
mov
clc
cmp
mov
ret
gs
or
in
inc
jg
mov
push
push
pop
int
imul
push
orl
out
mov
push
out
or
incl
je
mov
into
pop
test
cmp
stc
add
lcall
inc
dec
xchg
outsb
cmp
iret
mov
inc
mov
ljmp
and
faddl
xor
iret
pushf
xchg
movsb
mov
sub
xor
xlat
xchg
xchg
add
incl
add
dec
stos
sahf
addr16
imul
shlb
in
ljmp
cmp
lcall
mov
das
pop
push
ds
adc
icebp
xchg
xor
pusha
fnstcw
out
data16
xor
stos
ljmp
or
pop
ret
jl
lret
xor
cmpsl
nop
out
daa
pop
pushl
mov
iret
xor
pusha
mov
or
xor
push
and
andb
in
cwtl
in
mov
jmp
push
iret
cmc
int
mov
and
cmp
out
ja
push
enter
push
movsl
xor
mov
push
pop
inc
out
subb
ret
pop
daa
outsb
fimuls
pushf
push
movb
fstl
in
arpl
aad
jns
es
sbb
adc
cmp
into
sub
fistl
lcall
pop
lret
lret
ficoml
imul
fdivs
push
inc
mov
incl
cmpsb
or
jns
fists
push
aad
pop
inc
mov
or
and
outsl
cli
lcall
push
cmp
push
insl
dec
out
ret
jno
inc
ljmp
pusha
aam
mov
or
sub
cmp
jmp
and
adc
add
and
xlat
mov
aas
leave
ljmp
enter
shlb
cmpsb
cmp
scas
lcall
add
ror
xor
mov
pop
bound
cwtl
and
xor
loop
test
jmp
das
rcl
inc
fnstsw
adc
addr16
jbe
dec
or
sbb
imul
sahf
xchg
sub
rcl
lcall
je
and
sub
sbb
mov
aam
lcall
jae
lock
xchg
jge
inc
inc
sub
pusha
pop
add
lcall
aam
lods
pop
enter
pop
xor
stc
pushf
inc
out
ss
and
call
xor
push
jbe
cmp
jp
xor
dec
inc
leave
xlat
push
es
sbb
leave
sar
lcall
jmp
jne
mov
cs
adc
add
dec
or
fistps
call
pop
add
in
lods
xor
inc
push
pop
push
and
mov
xchg
and
out
lcall
std
das
lea
sbb
outsb
pop
aad
xchg
cmp
jb
or
test
ljmp
arpl
cmpl
insb
cwtl
out
sub
out
popf
adc
mov
mov
ljmp
jmp
pop
xor
mov
cltd
fwait
jg
mov
arpl
aas
outsb
inc
cmp
add
lds
fucom
arpl
xchg
cmp
jp
call
call
jo
mov
xchg
sti
aas
fimuls
clc
jne
scas
and
loopne
ds
jmp
in
sbb
mov
pop
or
test
pop
lret
sahf
cwtl
aad
mov
sbb
loopne
xchg
xor
decl
out
xchg
shrl
pop
jmp
fisubrl
dec
jnp
mov
jns
incl
xor
sahf
xor
dec
iret
inc
test
lcall
or
xor
nop
pop
loope
push
cmp
lahf
mov
dec
in
mov
scas
inc
decl
and
inc
jl
mov
imul
out
pop
cmp
mov
lcall
lahf
lea
mov
repz
ja
fisubs
adc
add
add
les
inc
push
aas
ss
popw
sbb
in
and
hlt
jo
mov
or
negl
ret
mov
out
cmp
call
xor
inc
std
lea
jo
xor
out
subb
sti
jg
test
test
cmpb
ljmp
ljmp
subb
pusha
fsubrp
cmp
xchg
sub
push
test
jg
fwait
out
pop
data16
sub
xor
adc
inc
outsb
dec
mov
jmp
dec
pushf
or
test
loop
pop
pop
rorl
fisubrs
repnz
inc
adc
mov
cmpsb
incl
repz
stos
mov
insb
fists
xchg
dec
bound
push
pop
pop
iret
nop
movsb
mov
dec
push
push
and
dec
or
push
adc
fdivrp
idiv
adc
inc
cmpsb
push
sub
lret
jl
xor
mov
decl
sbb
insb
icebp
jle
adc
adc
aad
dec
testl
dec
add
mov
lcall
cmp
sbb
in
stos
push
outsb
fucomi
and
push
adc
fistpl
stc
vmovsldup
call
in
push
lcall
pop
dec
mov
inc
xor
dec
movsb
cs
mov
jg
lods
cltd
jle
adc
or
sbb
cmp
pop
int
rcrb
pop
scas
mov
jmp
sub
seto
call
je
jne
jnp
hlt
bound
shl
js
inc
fidivrs
enter
test
out
jl
jne
out
jb
cmc
xor
xlat
lahf
loopne
inc
jno
cmpsl
popa
xchg
test
push
leave
decl
xor
xchg
imul
js
pop
lock
sahf
inc
add
sub
push
decl
es
jmp
cmp
mov
and
xlat
fs
cld
and
cmpsl
test
stos
stos
addr16
jo
cmp
add
out
inc
dec
inc
lods
mov
call
test
enter
out
inc
je
add
repnz
pop
mov
push
pop
rclb
mov
lcall
vxorps
mov
fcoml
push
cld
outsl
pop
sbb
call
push
mov
sbb
call
push
dec
sbb
cmp
push
arpl
cmp
mov
add
cli
dec
stos
test
cld
or
push
repz
mov
loop
mov
lcall
shlb
popf
mov
cld
mov
jnp
mov
xor
dec
xor
sbb
pushl
xlat
sbb
dec
insb
stc
mov
cmp
ljmp
inc
or
inc
sbb
sub
movsb
stos
add
pop
sbb
movsb
mov
ljmp
xchg
insl
cmp
jle
xor
sub
insb
pop
and
add
lds
lock
fcomi
adc
call
in
mov
xchg
mov
pushl
mov
cmpsl
add
arpl
cltd
cld
cmp
dec
jp
clc
cltd
dec
idiv
ljmp
decb
jle
xchg
mov
stos
cmp
dec
push
push
and
add
int
cld
std
xchg
fstl
cmp
pop
jb
jmp
adc
jb
pop
fstps
mov
fnsave
sbbl
sbbl
call
repz
sahf
jnp
inc
cmp
imul
jg
mov
or
push
and
rolb
push
cmc
in
out
jmp
repnz
mov
cmp
repnz
mov
in
mov
call
pop
push
jno
ficomps
jne
loope
pop
cmp
inc
cmp
push
ds
movsl
push
jl
in
inc
out
ret
repz
bound
or
lcall
mov
popa
rcl
dec
push
cmpsb
xor
jp,pn
dec
stc
mov
fcomip
mov
jp
stos
je
and
movsl
xchg
stos
fisubl
mov
cwtl
cmpsl
adc
jp
clc
cmp
jb
or
aaa
dec
stc
mov
mov
xchg
cli
pushf
std
mov
sbb
ljmp
mov
js
push
xchg
jb
idiv
jg
add
loop
insl
test
sti
fcomps
bound
loop
lret
dec
cld
lahf
mov
cli
and
shlb
cmp
mov
dec
pop
frstor
ljmp
mov
aam
loopne
cmp
or
icebp
jns
call
ja
mov
mov
cmc
pop
add
and
xchg
xor
lods
leave
movsl
bound
mov
repnz
jmp
mov
addr16
mov
push
rorb
dec
femms
js
movsb
add
ljmp
sub
mov
adc
pop
adc
iret
inc
insl
cmpsb
adcl
dec
mov
and
outsl
fucomp
jge
add
lods
cld
xor
dec
cltd
cmc
fnstsw
aaa
pop
incl
mov
jno
pop
arpl
mov
decl
push
test
adc
adc
aam
adc
cld
cmp
mov
stc
ljmp
andb
inc
jecxz
js
push
iret
daa
inc
idiv
xor
dec
call
xchg
xchg
or
inc
xorb
js
lahf
rol
and
call
or
mov
sbb
ret
pop
repz
jmp
movsb
mov
xchg
shll
and
or
cli
jg
std
xacquire
mov
je
mov
sti
inc
push
jno
jnp
out
pop
into
mov
push
mov
fdivs
xor
jbe
imul
lods
icebp
ret
addr16
test
inc
movsb
decl
mov
ljmp
xchg
call
ficomps
ljmp
hlt
daa
outsb
sbb
jne
cmpb
or
test
jne
addr16
insl
pop
mov
lock
add
out
mov
mov
loop
add
data16
lcall
xchg
into
sbb
int
cwtl
imul
movb
popf
push
dec
lods
cmp
inc
sbb
cltd
sbb
repz
out
mov
and
jns
aaa
fldenv
repnz
out
test
jae
ss
jmp
in
out
iret
jno
pop
out
jmp
adc
in
xorl
or
gs
cmp
ljmp
inc
push
dec
or
out
mov
adc
xor
or
fnsave
pop
lret
fucom
jmp
ljmp
enter
aam
bound
sbb
mov
sub
call
scas
mov
mov
hlt
in
out
xorl
pop
shlb
and
in
jge
mov
sbb
jecxz
ds
xchg
jns
pop
xchg
addl
xchg
loop
ljmp
mov
pusha
insl
push
fucomi
adc
add
mov
or
mov
call
dec
xchg
inc
ljmp
popa
test
dec
mov
push
xchg
cmp
inc
popf
pushf
adc
mov
call
jno
lret
cmc
xchg
jbe
mov
dec
dec
mov
dec
xchg
dec
cmp
pushl
cld
pushl
xorb
mov
inc
xlat
or
sub
cmpsb
lcall
pushl
push
ret
or
orb
and
sbb
pop
sbb
add
sbb
mov
jg
mov
push
push
mov
cld
jl
ret
movsl
push
into
adc
jmp
inc
xchg
mov
lahf
sub
icebp
negl
in
push
push
jnp
inc
loop
push
jns
pop
mov
sbbl
scas
mov
mov
loopne
insb
adc
mov
popf
fs
ljmp
adcl
add
out
mov
or
xchg
push
fldl
imulb
or
push
pop
xor
jp
cli
xor
xchg
sbb
andl
in
test
mov
out
pop
fs
jns
add
cmp
mov
incl
lock
jg
repnz
mov
jle
push
mov
jae
mov
mov
jo
jle
sar
dec
leave
and
xchg
ret
call
hlt
inc
inc
shlb
mov
data16
mov
mov
scas
lods
mov
sbb
inc
inc
ljmp
pop
ds
pushl
ja
mov
fistl
andl
shll
mov
lods
jl
sub
addb
inc
ljmp
mov
or
insl
movsb
pop
lods
into
por
fimuls
pop
mov
adc
xchg
dec
add
fcoms
push
push
repz
ret
jg
popa
add
add
xchg
mov
mov
imul
jnp
jnp
push
or
xor
mov
sub
pushf
lcall
cwtl
jle
in
repz
int3
xchg
jns
filds
sub
hlt
jo
adc
dec
mull
jne
or
mov
stc
and
int
test
mov
aad
addr16
adc
lcall
add
adc
and
cltd
push
adc
imul
call
imul
fadds
xlat
add
daa
gs
push
ljmp
dec
loop
or
jmp
mov
dec
jg
jp
and
push
std
adc
repnz
add
dec
or
ds
inc
aad
adc
push
gs
test
shlb
aaa
fsubrp
sar
push
mov
sbb
push
xor
sub
cmc
jmp
mov
lods
pop
and
pop
fcom
fwait
lcall
stos
in
sbb
out
cld
decl
in
adc
rcr
jg
hlt
xchg
je
imul
add
sbb
xchg
insb
mov
mov
adc
pop
mov
or
sbb
cmovb
test
xor
leave
ret
push
jg
filds
inc
mov
mov
pushf
std
mov
es
jmp
sub
fldcw
adc
in
sub
adc
ret
xor
sub
pop
mov
loopne
inc
push
mov
adcb
inc
sub
mov
fisttps
sbb
cmp
pop
aad
and
nop
lods
dec
and
clc
mov
jae
imul
pusha
ljmp
and
call
push
mov
ljmp
mov
subb
fists
ret
push
and
inc
out
mov
test
push
cs
pushl
pop
inc
lcall
pushl
fwait
clc
fistps
sbb
push
and
jmp
pushf
or
jmp
jmp
push
adc
sbb
mov
jmp
sbb
fildll
adc
fs
dec
lcall
in
pop
add
into
cmp
shl
fcmove
aad
test
orb
dec
scas
mov
dec
repnz
rolb
ljmp
push
div
add
mov
jmp
popa
fdivrs
lock
cli
add
push
outsb
jmp
cmp
xor
pop
add
mov
scas
aam
decl
mov
xchg
jo
int3
sub
xchg
sub
dec
or
iret
inc
sbb
ljmp
outsl
sbb
pop
bsf
cmp
adc
in
jmp
or
add
in
cmc
cltd
lcall
std
cmp
ja
mov
or
lret
mov
lret
push
and
fbstp
jmp
sub
addb
out
shll
inc
adc
lret
adc
addr16
insb
mov
sti
or
sbb
insl
fdivr
cwtl
add
icebp
jp
cmc
stos
push
xchg
sbb
mov
stos
pop
mov
xchg
leave
jl
jno
js
mul
adc
pop
cmpsb
push
cld
push
int3
addr16
cltd
xor
lret
mov
mov
addr16
mov
xor
jg
or
mov
add
test
inc
test
jmp
cmp
enter
out
xchg
dec
jno
fptan
mov
jp
push
arpl
lock
fnstsw
xchg
ds
das
cli
pushl
lds
jno
loop
add
jmp
xchg
push
jmp
arpl
mov
out
dec
xchg
inc
into
jnp
xor
dec
dec
mov
pop
push
pop
inc
mov
jmp
mov
imull
lds
adc
test
lret
push
repz
mov
jmp
pop
pop
sbbb
and
pushf
sub
out
mov
xor
xchg
and
jmp
outsb
loop
push
call
lahf
adc
mov
cmpsl
stc
inc
lods
fcomps
ljmp
cmp
jmp
clc
mov
sbb
mov
fcmovne
test
lret
jl
jmp
nop
fs
jge
mov
and
jg
popf
inc
cmp
outsl
or
pushl
daa
aaa
mov
prefetcht1
mov
cmpsb
fisttpll
cld
cmpsb
dec
pop
in
ja
incl
fists
mov
or
mov
fnstenv
pushl
out
mov
out
push
push
in
mov
push
xchg
lea
push
pop
mov
xorb
adc
xchg
loop
cmp
imul
push
dec
nop
ret
aas
cmp
out
mov
inc
dec
loop
imull
and
xchg
jl
insb
loop
insl
add
lods
jg
ret
icebp
pushl
dec
clc
pop
inc
mov
aad
add
cmp
lret
dec
xchg
and
aam
cmpsb
jbe
mov
and
mov
adc
int3
cmp
out
scas
sub
add
pop
or
call
fnstsw
or
xchg
inc
sub
mov
loopne
sub
xchg
hlt
dec
sbb
popf
adc
ss
inc
inc
shrb
scas
jns
inc
fdivr
mov
lods
xor
xor
lock
jl
push
and
fisttpll
push
ljmp
push
bound
cmp
scas
cltd
imul
std
and
bound
lods
lea
mov
sarl
push
ds
loope
cmp
cmc
dec
push
aas
stos
sti
daa
repz
dec
inc
mov
ret
fstpt
lahf
outsb
sub
fcomp
push
mov
mov
sub
fcmovbe
mov
test
or
jnp
loop
jae
ficoml
pop
mov
dec
dec
or
pushl
clc
fwait
inc
mov
xor
dec
data16
jno
in
xchg
xor
mov
jbe
lods
mov
popf
scas
jg
test
add
push
mov
pop
xor
jecxz
cmpb
fmuls
xchg
daa
fcomps
incl
vmaxpd
insb
cmp
repz
inc
xchg
inc
mov
jge
test
and
cmp
sti
imul
cs
and
lret
xchg
inc
movsb
loopne
push
cmp
push
jb
lods
mov
and
pushl
cltd
and
movsb
inc
stos
cmp
xchg
sub
fwait
addl
cmp
cmp
std
filds
sbb
addr16
stos
mov
mov
rcll
gs
xchg
stc
or
xor
and
add
std
mov
lcall
mov
pop
mov
adc
sbb
cmp
sbb
add
pop
or
or
jle
lcall
jmp
and
sbb
xorb
test
jo
les
aaa
test
push
pop
dec
mov
adc
cmp
lds
mov
stos
mov
xor
adc
popa
dec
cmpsb
lahf
inc
repz
cmp
sub
js
push
mov
gs
push
movl
inc
fldt
mov
or
lcall
xchg
pushf
add
js
test
repnz
mov
xor
pop
clc
sbb
aaa
cmpsb
xor
lcall
xchg
insb
clc
jecxz
dec
xor
lcall
inc
ror
test
rolb
pushf
cmp
dec
int
mov
repnz
and
in
loope
xchg
fidivl
jge
fidivl
cmp
lcall
xchg
and
repnz
or
orl
jne
leave
and
inc
sbb
sti
push
mov
add
fisubs
andl
ret
ljmp
mov
pusha
js
add
mov
push
pop
gs
mov
jp
sub
mov
lret
das
ja
xorb
cmc
lods
rcl
mov
add
jmp
pop
cmc
stos
sbb
test
jp
aam
inc
gs
fsubl
cwtl
pop
test
pop
push
ljmp
mov
mov
cmp
fists
ljmp
sub
rcrb
mov
mov
cli
pushf
pop
add
ljmp
pop
xlat
out
movsl
cmp
rorl
mov
fsts
vphadduwq
jmp
or
mov
inc
cmpsl
jle
mov
pop
cmpsb
adc
jl
jge
jp
mov
ljmp
fisubs
push
mov
push
ljmp
xor
call
xchg
push
xchg
sub
jno
ret
adc
mov
jle
dec
mov
lcall
in
pushl
xor
xor
shlb
shrb
aaa
pop
add
mov
sbb
movsb
inc
cmp
pushl
mov
inc
mov
add
sti
ss
push
fimull
xchg
ljmp
jle
jb
xor
xchg
sahf
int3
orb
pop
insl
aam
jle
jo
ss
jnp
fsub
dec
pop
dec
and
into
push
jp
frstor
fs
jp
mov
push
sub
decl
jns
mov
pop
mov
xchg
fistpll
rol
fcmovnu
mov
push
push
pushl
dec
mov
es
aaa
mov
xor
dec
mov
jecxz
mov
je
cmp
aaa
sbb
pop
pop
xchg
mov
xor
and
xchg
notl
int3
rcl
inc
stos
ret
insl
loope
fiaddl
decl
or
xor
shrl
add
scas
and
mov
xor
out
insb
pushl
add
or
pop
jle
rcrb
shlb
mov
jl
into
enter
xchg
call
loopne
mov
mov
cmp
cwtl
xor
mov
push
mov
movsl
loope
incl
shll
cmp
dec
push
jl
stc
pop
inc
cmp
adc
pop
pop
mov
jmp
cmpsl
xchg
and
and
and
call
mov
push
cmp
jmp
mov
sarl
mov
mov
es
call
in
mov
inc
fisubl
mov
dec
and
xchg
leave
push
jbe
rcrl
decl
push
jg
hlt
fcoms
sub
scas
mov
xchg
fs
jg
pushl
inc
mov
sbb
ficoms
mov
sbb
add
pushl
adc
push
iret
pusha
mov
cmpsl
xchg
mov
hlt
imul
fbld
cwtl
and
lcall
call
dec
xchg
mov
test
jmp
mov
and
pop
dec
fmull
jmp
pop
push
xchg
test
add
xor
pop
or
or
in
leave
push
xchg
inc
mov
jbe
jg
cmpsb
lcall
xor
out
sbb
mov
or
jns
mov
mov
ret
dec
cmpsb
icebp
popa
outsb
das
call
sbb
xchg
sbb
out
cmp
mov
loopne
lods
push
adc
adcb
cmp
add
lcall
xchg
std
aaa
insl
pop
incl
xchg
ret
clc
xchg
mov
cmc
sti
aad
cli
not
insl
inc
mov
inc
les
adc
jmp
jne
dec
out
shll
out
pushf
popf
in
insb
leave
lea
xchg
fcomip
lcall
repnz
addr16
out
xorb
movsb
lret
cltd
subb
jne
or
das
xor
arpl
fxam
insb
push
cld
jmp
sbb
ljmp
mov
into
add
mov
inc
xor
xor
into
movsb
loop
pusha
add
das
inc
add
fcoms
pop
ja
fucomp
idiv
pushl
insb
cltd
push
data16
xchg
push
inc
add
adc
push
in
and
jmp
and
hlt
out
call
daa
push
imul
pushf
mov
jnp
adc
sbb
push
jmp
sub
mov
pop
faddl
cmp
mov
mov
jb
fildll
fwait
add
es
push
push
scas
cmpsb
push
dec
and
pop
jge
out
inc
inc
jmp
and
inc
imul
mov
loopne
call
mov
adc
in
lock
loop
repnz
dec
push
jb
decl
sbb
and
lcall
mov
inc
sbb
pop
loope
sbb
insl
ljmp
enter
mov
xor
repnz
out
cmp
pop
dec
ss
ljmp
xchg
dec
imul
lret
call
xchg
dec
cmpsb
rolb
movsb
push
jmp
jnp
inc
aaa
out
push
pop
sahf
icebp
sub
addr16
mov
out
mov
test
jge
addr16
add
aam
ficoms
or
mov
enter
jp
decl
test
sbb
sub
nop
jmp
adc
ja
scas
sub
add
push
out
pop
std
or
out
imul
aas
xchg
ljmp
xchg
xchg
sbb
bound
dec
pushf
cmp
sbb
or
xchg
jo
testb
xor
ret
xchg
mov
call
mov
insb
dec
fwait
pop
sbb
fidivrs
inc
fcoms
push
xchg
cld
lret
ret
mov
rol
mov
shl
and
cmp
daa
mov
cli
jg
jmp
fcoml
add
cmp
int3
dec
jne
jl
dec
push
inc
mov
add
cld
scas
dec
cltd
push
mov
push
cmp
andb
inc
adc
ljmp
sbb
cld
outsl
mov
push
test
sahf
sub
mov
push
ret
push
enter
test
jbe
adc
in
rolb
rcl
dec
movsl
jbe
out
insb
mov
add
jmp
cmp
cmpsl
push
pop
orl
ret
xor
clc
movsb
stos
in
sarl
mov
das
cmp
fdivr
call
sbb
push
cmp
aaa
inc
push
sub
cmp
out
sbb
int3
outsl
add
les
int3
sub
push
jno
jns
add
imul
mov
pop
push
dec
mov
lock
cli
outsl
add
jne
pop
jge
int3
pop
dec
lret
addr16
lcall
ret
cld
jge
mov
mov
add
daa
ljmp
enter
pushl
out
iret
xor
int3
nop
dec
out
xchg
iret
lods
jecxz
lret
mov
movsl
mov
or
idiv
das
mov
lahf
in
fdiv
mov
mov
incb
aam
sbb
jns
mov
xchg
sti
ss
xchg
imul
and
mov
sbb
jg
cli
adc
sbb
jg
inc
sbb
mov
movsb
push
mov
fld
out
pop
cmp
out
xchg
add
test
stos
repnz
cmp
add
xchg
mov
incl
fs
insl
add
aas
in
xor
push
jnp
in
test
and
add
call
cmpsb
mov
push
cld
clc
dec
insl
inc
icebp
sbb
call
aas
mov
add
jae
inc
mov
lds
mov
decl
jnp
adc
stc
outsl
push
popa
cmp
sbb
fldcw
mov
ret
dec
out
popf
call
mov
fisttps
jnp
rorl
cmpl
push
adc
adc
loopne
decl
das
adc
iret
sahf
jecxz
jp
push
out
cmp
pop
mov
addr16
lret
int3
jl
fst
push
xor
jg
test
mov
or
aam
xchg
jns
lds
loop
sbb
mov
flds
cld
test
inc
out
mov
addr16
ja
addr16
mov
outsl
cmc
mov
push
out
mov
push
jp
lret
mov
lahf
popa
mov
push
mov
jns
xor
fisubrl
popl
sub
dec
mov
and
adc
cmp
or
pop
call
push
fistps
adc
add
cmpb
lcall
cli
push
adc
sbb
repnz
push
jmp
sub
mov
jne
decl
push
lds
mov
cwtl
dec
loopne
xchg
push
popf
loop
ret
pop
shll
inc
push
dec
and
notb
das
or
add
jns
pop
xchg
xchg
and
dec
test
adc
jg
mov
call
mov
in
mov
not
pop
inc
jle
jno
stc
sahf
testl
sbb
or
dec
sbb
stos
mov
xorl
mov
adc
push
jle
cli
pushl
mov
imul
mov
xor
cmc
pop
enter
jne
call
mov
fs
pop
lds
andb
icebp
loope
and
add
aam
add
push
inc
sub
in
sbb
sbb
and
inc
pop
loope
xchg
fdivs
or
adc
or
outsb
jo,pn
negb
pusha
inc
cwtl
pop
adc
decl
mov
cli
or
pusha
lret
xchg
into
mov
pushf
push
lock
push
loop
xlat
cltd
and
mov
xchg
nop
lahf
arpl
dec
ljmp
pop
sub
and
orl
or
or
pop
outsb
ds
jg
lcall
lret
xchg
lea
nop
mov
popf
imul
pushl
cmc
pop
push
push
pop
enter
push
xchg
aaa
dec
cld
sahf
call
inc
lahf
jecxz
mov
dec
pop
pop
aaa
std
inc
push
inc
out
xor
cmpsb
sarb
stos
pop
out
lahf
cwtl
aad
push
or
icebp
pop
call
inc
stos
les
xor
dec
mov
cmp
xchg
mov
sbb
xor
stos
out
shld
mov
in
ljmp
or
push
icebp
mov
fabs
loop
sub
mov
cmp
mov
je
adc
call
aad
ds
xchg
popf
fsubl
fdivrl
push
iret
addl
js
lret
jae
push
fsubs
push
ss
cwtl
shll
sbb
cmp
loopne
into
add
pop
pop
jns
icebp
fistps
mov
push
jg
js
mov
xchg
dec
or
jecxz
test
stc
and
add
ljmp
aad
jb
jge
addr16
fwait
sub
in
cmp
mov
xor
sub
call
std
pop
push
sub
bound
cmp
inc
shll
and
sub
int
sub
lcall
icebp
dec
insl
dec
sbb
jg
push
add
test
adc
into
pop
mov
inc
fcompl
scas
clc
pushl
adc
dec
push
jb
push
mov
mov
cmp
ljmp
lea
inc
cmpsl
mov
out
enter
call
mov
icebp
inc
mov
hlt
testl
mov
lcall
or
andl
sahf
and
jmp
ja
lahf
cmc
push
sti
cld
dec
dec
cli
dec
jge
incl
fadds
repnz
adc
leave
mov
mov
jne
or
fldenv
loopne
fdivrs
pushl
je
hlt
dec
sub
lret
adc
mov
mov
mov
std
jl
inc
dec
bound
into
sarl
daa
movsb
sub
and
cmpsb
sbb
repnz
data16
jmp
sub
inc
int3
lcall
std
repnz
adc
mov
pushf
xchg
test
das
mov
enter
mov
mov
rclb
jg
xor
xchg
cmpsb
jecxz
rorb
inc
sarb
mov
jl
fdivrs
scas
lods
in
jb
outsb
and
xchg
push
ss
mov
or
xchg
fisubrl
pop
out
cmp
in
das
xor
jl
fs
jo
jns
jmp
in
pop
stos
push
or
sub
dec
mov
cmp
nop
or
call
outsl
and
adc
and
mov
stc
push
mov
sub
pop
or
lcall
out
and
insb
testl
gs
and
sub
fbld
popf
cmc
and
mov
lods
fwait
push
lahf
into
repnz
xchg
clc
inc
ret
sti
out
clc
icebp
mov
lea
orl
test
pop
push
movsl
ficoms
stos
jae
lea
cli
xor
je
jnp
addr16
mov
xlat
dec
shll
incl
incb
test
jecxz
stos
jge
sbb
je
hlt
call
cmpsl
mov
mov
adc
decl
mov
mov
jmp
pushl
pop
loopne
fdivr
adcl
bound
out
aaa
out
adc
push
jg
fwait
jmp
stc
inc
xchg
xchg
sbb
clc
loop
or
cmp
inc
ja
mov
mov
cmpsb
aas
mov
nop
push
xchg
jns
cmc
mov
jg
cmp
loop
xor
outsl
imul
test
sub
mov
xchg
shl
push
xchg
subb
push
mov
sub
call
and
aad
fsub
pop
or
and
push
pop
rorl
and
or
rcll
push
std
jmp
adcl
or
inc
jmp
jg
test
into
cmp
lahf
sub
xor
std
es
or
arpl
adc
xchg
movl
rcl
mov
jae
leave
jmp
push
out
pop
mul
xor
dec
lahf
mov
popa
inc
or
mov
arpl
inc
cmc
lcall
call
jmp
push
add
sub
inc
mov
lock
lcall
inc
xchg
jg
nop
dec
sahf
rolb
jle
xchg
or
mov
mov
xchg
mov
jns
out
cmp
andl
jp
or
pop
movb
movsb
out
inc
insb
stc
je
inc
leave
out
mov
out
icebp
sar
pushl
es
scas
mov
pop
loop
je
gs
mul
xor
push
fs
mov
jg
data16
push
mov
sbb
mov
push
outsl
add
mov
pop
cmp
cmp
jp
mov
lcall
ficoms
or
cmp
adc
cmc
cmp
negb
adcb
lcall
or
adc
adc
ficompl
in
jne
mov
adc
lods
xchg
decl
dec
add
pop
pop
push
ss
pusha
mov
gs
or
decl
test
imul
push
pop
mov
mov
adc
scas
pop
cli
adc
cli
mov
call
mov
push
mov
and
cmp
and
jmp
lods
lods
js
imul
mov
incl
outsb
jecxz
adc
cmp
es
inc
inc
in
push
dec
popf
outsl
sub
mov
call
push
inc
xchg
add
and
data16
mov
inc
inc
ret
out
movsl
push
lea
xor
push
xchg
adcl
je
addr16
adc
mov
leave
inc
ljmp
mov
xchg
cmp
sbb
and
push
jle
clc
sbb
push
xor
lock
pushl
sbb
jmp
push
subl
xor
xor
mov
xor
ljmp
adc
push
repnz
mov
test
lds
mov
push
mov
mov
pop
fucomip
lea
push
mov
push
jle
mov
decl
mov
sbb
bound
imul
icebp
fldcw
and
call
outsl
leave
xor
clc
jle
sarl
clc
adc
and
sar
jmp
in
and
movsl
ret
stc
inc
xor
jns
xchg
loop
pushl
ficompl
adc
push
mov
repz
xor
test
pusha
cld
ljmp
push
sbb
push
add
aad
call
loopne
das
or
mov
xchg
xor
sbb
mov
and
xlat
jmp
fs
or
xchg
mov
or
jnp
push
cmp
pop
cld
sub
jg
pop
xchg
jl
test
xor
fldl
cwtl
fsubl
fistpl
or
or
imul
sarb
cmp
enter
outsb
or
or
mov
loopne
call
add
add
lret
cmp
push
and
inc
ljmp
mov
movsl
adc
add
xchg
xchg
lcall
fsubrp
aad
push
push
pop
mov
popf
dec
xor
xor
js
xlat
decl
add
push
lea
jo
xchg
testl
mov
arpl
icebp
lcall
jne
fiadds
and
jb
add
je
loopne
enter
cmc
mov
mov
gs
decl
xlat
jmp
ret
dec
pop
xchg
sbbb
mov
ljmp
mov
xchg
mov
dec
sub
push
sbb
jmp
stos
jne
cmp
ljmp
dec
rcrb
aam
xor
in
jae
int
mov
mov
jg
and
sti
or
push
pop
mov
incl
movsl
xor
icebp
sbb
sbb
mov
mov
inc
test
das
sub
incl
adc
sbb
cmpsl
pop
js
inc
jb
add
call
ficomps
lret
dec
cltd
adc
pop
addr16
fadds
pop
or
mov
stc
in
insb
fwait
out
negl
push
call
call
clc
pop
push
dec
lods
adc
mov
mov
ds
lcall
or
out
xchg
inc
mov
pushl
fldcw
sbb
mov
mov
stc
sahf
enter
pop
mov
ss
cmp
arpl
fidivrl
mull
push
xchg
adcl
imul
sbb
sbb
jle
xchg
stc
fidivrs
xlat
jb
ret
ja
clc
ljmp
lock
sbb
mov
incl
xor
test
rorl
andl
test
jno
dec
add
in
jae
mov
pop
dec
decl
push
inc
push
jae
sarb
mov
arpl
xor
bound
mov
mov
cmp
ja
mov
les
pushl
xor
sub
add
mov
push
or
in
adc
lock
clc
popf
mov
push
and
push
jge
div
js
sti
incb
out
or
decl
jbe
jbe
cmp
mov
les
dec
jb
mov
ficoms
xchg
fst
push
shlb
std
push
jmp
in
lods
inc
and
sub
jbe
ljmp
adc
add
lret
test
ret
hlt
xor
popf
mov
jg
std
xchg
mov
lods
js
mov
lret
push
jmp
in
lret
pushf
std
mov
ljmp
ljmp
cmpsb
xor
insl
jbe
mov
shll
sbb
lcall
js
sti
jle
aaa
aad
inc
dec
push
mov
rolb
lcall
pause
mov
jmp
call
jo
ss
push
jecxz
push
pop
call
out
xchg
mov
fimuls
push
rcrb
pop
pop
scas
xor
fisttpl
xchg
das
shlb
test
cwtl
mov
pushf
ja
jmp
cmpsb
cmpsb
out
mov
incb
int3
lock
lcall
into
scas
mov
cld
sub
cld
sub
inc
mov
out
in
or
push
shlb
les
nop
int3
or
dec
push
nop
gs
sahf
sub
cmp
xor
sbb
incl
jnp
xor
cltd
nop
fdivr
jl
xchg
fs
ljmp
out
pop
jnp
xor
clc
ja
jmp
and
add
sub
pop
dec
pusha
dec
ja
cmpb
out
cmp
jle
push
xor
jecxz
mov
lock
jbe
mov
jns
decl
cld
leave
pushf
mov
cs
int3
sbb
mov
mov
push
pop
sub
gs
incl
js
add
xor
pop
cmpsl
and
imul
int
stos
or
pop
add
cmp
jl
mov
inc
fbld
icebp
mov
lcall
jp
inc
stos
jle
push
sbb
je
xchg
and
cmp
or
aaa
lret
incl
std
mov
or
pop
push
ljmp
call
lea
pop
fprem1
add
decl
dec
stc
js
in
leave
dec
sbb
sub
xor
pop
add
cmc
mov
xor
repnz
jge
mov
clc
scas
popf
xor
cmp
insl
shll
outsl
cli
xor
pop
cmp
aas
arpl
jg
mov
inc
sahf
in
nop
and
sbb
decl
cmp
inc
movsb
adc
sbb
lret
lret
ljmp
enter
jg
int
decl
xchg
mov
inc
dec
addr16
ljmp
es
mov
clc
stos
pop
xlat
adc
outsl
divb
mov
jbe
mov
sahf
adc
lret
incl
pop
xchg
mull
mov
sub
cmp
int3
adc
mov
orl
shl
lret
dec
insb
push
mov
fwait
or
mov
pop
pop
inc
ljmp
cmc
mov
test
scas
jp
xchg
push
pop
flds
mov
and
push
xchg
push
push
pop
mov
sub
std
enter
call
adc
test
bound
jge
adc
cli
inc
cmp
incl
dec
pusha
mov
jl
fsubl
sub
push
mov
cmp
pop
in
xchg
je
add
loop
in
scas
fists
or
stos
ja
ret
lods
addr16
lret
xchg
sbb
pop
lock
inc
call
movsl
jl
pop
orb
jnp
rolb
sub
mov
fmuls
mov
cmp
ja
nop
icebp
or
outsb
rorl
jg
lcall
mov
lahf
xor
nop
mov
jns
lret
clc
lcall
jno
sub
pop
movsl
ds
fcoms
pop
xchg
add
incl
mov
ds
jmp
test
call
into
test
movsl
xchg
xor
in
or
add
dec
pop
int
sbb
add
incl
pop
xchg
add
lret
push
and
incl
movsb
aaa
imul
cli
adc
push
pop
cld
mov
and
cmp
cs
test
cli
or
add
dec
pusha
and
loope,pt
ja
out
xchg
lock
jg
shll
pop
sbb
aas
mov
dec
and
adc
jo
shrl
adc
mov
xor
mov
dec
les
jbe
cli
dec
or
jg
cmp
dec
pusha
jb
imul
mov
cmp
push
adc
ljmp
sub
out
scas
or
pop
push
es
adc
fists
pop
test
mov
inc
dec
mov
mov
incl
out
cmp
pop
data16
stos
pusha
sub
ljmp
or
inc
into
or
pop
jo
add
mov
adc
or
cmp
pushf
mov
loope
add
cmp
aam
push
adc
and
incl
mov
cmc
push
push
mov
sbb
sub
mov
in
mov
lcall
ret
insl
movsb
or
stos
sub
lds
gs
and
pop
scas
xchg
lcall
clc
mov
nop
not
outsb
xor
mov
sbb
dec
lcall
sbb
rorb
out
ss
cs
inc
stos
fs
in
mov
push
std
decl
jb
in
mov
push
out
adc
lods
sub
xlat
push
sarb
sbb
das
movsb
jle
lcall
gs
negb
int
sbb
ljmp
jge
dec
dec
jb
lcall
int
or
inc
cmp
mov
and
mov
sbb
mov
cld
scas
fcoms
push
sbb
pop
mov
shl
mov
mov
jbe
out
dec
jmp
clc
lret
lcall
jo
and
jnp
lock
daa
out
dec
mov
je
cmp
cli
shl
stc
pusha
lods
incl
jecxz
test
jno
xor
sarb
lea
scas
cmpsl
loope
vmread
sub
pop
mov
inc
test
xor
sub
scas
cld
test
cltd
inc
addb
dec
pop
dec
lods
call
sub
pop
jle
test
jae
andb
in
popa
push
add
loop
ljmp
aas
pop
push
push
pop
movsl
cmpsb
xor
cmp
pop
aas
adc
int3
lods
mov
out
fwait
out
mov
fsubrs
fs
roll
popf
ret
cltd
scas
mov
fs
dec
gs
cld
scas
or
je
xor
test
mov
jl
inc
mov
or
bound
xor
out
jg
arpl
dec
jle
and
sbbb
push
or
and
ljmp
cwtl
xchg
xor
xchg
xor
or
sar
cltd
orl
pop
fdivl
sub
popl
jp
push
xchg
mov
add
std
add
gs
cmpl
inc
fstpl
mov
js
jae
xrelease
insb
or
fs
int3
push
scas
outsl
imul
mov
das
add
add
mov
adc
mov
and
sar
decl
mov
pop
add
push
inc
bound
jb
rorl
arpl
rclb
outsl
repnz
insl
pop
in
fbld
and
shrl
out
fs
mov
jo
or
mov
test
call
mov
lods
add
cmpsl
lea
cmp
xchg
and
les
cmp
call
xor
inc
lahf
push
test
and
shl
add
out
inc
xchg
fsubrl
mov
or
mov
mov
cmpl
xor
fidivrl
pop
add
cs
pop
cmp
push
mov
subb
mov
ljmp
stos
mov
mov
or
push
enter
inc
mov
mov
xor
fnstcw
fldl
mov
xorb
sub
mov
pop
fistpll
mov
or
incl
jnp
pop
mov
aas
out
lock
lcall
add
inc
push
adc
pushw
mov
loop
movsb
fstpt
cwtl
and
nop
decl
aam
mov
sbb
sub
ss
subl
dec
mov
outsb
add
in
sahf
outsb
jbe
es
xor
push
addr16
stos
jecxz
out
sbb
mov
jl
sbb
ss
cwtl
push
jns
cmp
sub
adcl
js
xchg
fisubrl
push
movb
xchg
pusha
ret
pop
push
hlt
push
sub
sahf
test
jg
inc
nop
xchg
xlat
into
repz
adc
test
loopne
jae
out
push
cld
mov
int3
into
xchg
loopne
insb
pop
leave
inc
add
add
cmpsl
mov
sbb
gs
xchg
jmp
aas
add
cs
fistpll
lcall
sahf
in
loopne
cli
mov
xchg
xchg
popf
cld
movsl
cli
push
addr16
and
sar
add
mov
mov
mov
cmpsl
xchg
mov
xchg
push
mov
adc
imul
jb
jecxz
ljmp
cmp
mov
mov
and
fidivrl
xor
bound
fisttps
aam
lahf
push
sahf
daa
adc
inc
stos
pop
jecxz
inc
std
jae
push
cs
dec
and
clc
mov
roll
ljmp
rcl
xchg
mov
arpl
aaa
icebp
push
hlt
dec
stc
hlt
lods
push
xchg
sub
movsl
push
aaa
retw
mov
mov
push
cmp
jbe
imul
stos
or
call
jo
arpl
lods
mov
loop
mov
rorb
pushf
es
ss
incl
push
dec
sub
xor
fsubs
test
ret
dec
loopne
adc
pop
mov
leave
mov
jo
lcall
push
aam
test
fwait
xchg
sbb
adc
xchg
sarb
int
loope
inc
decl
and
push
jecxz
mov
mov
push
adc
les
adc
dec
push
xor
adc
push
add
iret
dec
sbb
int3
mov
and
pusha
cwtl
sbb
rorb
fstpt
aad
sbb
fwait
adc
lahf
aaa
lret
mov
es
cmp
call
mov
mov
out
push
imulb
fimull
lret
popa
into
cmp
push
stos
dec
sub
test
mov
in
ret
adc
pop
sub
push
cld
cmp
or
pop
mov
adc
push
xlat
jne
sub
mov
jno
fsubrl
push
hlt
das
mov
jg
mov
notb
push
leave
mov
adc
popf
and
add
outsl
ret
mov
sbb
jo
cmpsb
bound
outsl
ja
pop
cld
mov
incl
mov
jl
test
adc
jmp
hlt
call
xchg
mov
push
jno
test
out
mov
pushf
popf
mov
pop
jae
adc
lcall
lods
pushf
xor
jmp
fildl
call
mov
rcrb
and
js
inc
rcrb
ficomps
lret
jnp
mov
cmp
test
jg
inc
push
pop
jo
outsb
out
je
ss
inc
push
jae
pop
pause
gs
fcoml
testb
inc
bound
sbb
faddl
mov
xor
call
lock
dec
iret
adcl
adc
cmp
adc
loope
pop
mov
shrl
jmp
es
ss
movzbl
loope
lea
hlt
and
push
sbb
xchg
jae
ljmp
in
repz
mov
lods
cmpb
mov
jmp
push
add
push
setb
iret
out
sub
pusha
arpl
int3
push
mov
call
loope
adc
sti
and
sub
mov
orb
sbb
cmp
call
std
inc
jne
mov
sbb
int
and
mov
ljmp
dec
sti
pushf
sub
outsb
outsl
push
mov
pop
rclb
js
push
out
or
push
adc
push
mov
sbb
ljmp
add
fidivrl
fstps
dec
jecxz
daa
pop
fucomp
lahf
in
mov
hlt
jg
cmp
and
cmp
push
outsb
mov
jo,pn
test
call
loopne
or
lods
pusha
icebp
ja
jge
xchg
mov
sbb
mov
or
inc
add
sbb
aas
lds
jg
push
adc
pop
cmp
mov
add
rclb
jle
dec
int3
cmpsb
push
aad
add
mov
mov
xchg
sahf
nop
cmp
or
fs
mov
repz
decl
je
adcb
fldl
pushf
imul
arpl
rep
incl
inc
or
mov
jmp
cmp
popl
lods
pop
mov
rep
clc
decl
sti
outsb
cmp
pop
sahf
fcmovnb
test
shl
inc
movb
fcomip
in
out
cmp
outsl
cwtl
dec
adc
jle
dec
stos
test
js
xchg
jmp
jge
mov
mov
jb
iret
pop
push
ss
gs
movsl
test
cwtl
test
mov
mov
das
or
jbe
lea
xchg
scas
jmp
adc
mov
incl
pop
and
ljmp
outsb
fdivrs
pop
adc
jmp
pop
and
imul
aas
arpl
incl
pop
jno
xor
leave
add
mov
xor
inc
sti
and
add
nop
pop
pop
fs
mov
ud0
pushl
in
push
cmpsb
lcall
shl
mov
mov
sub
jge
xor
mov
cltd
add
into
pop
inc
clc
sbb
xor
ljmp
fidivs
xlat
mov
stos
sbb
scas
fidivrs
aas
jle
push
add
enter
jp
mov
push
xchg
cli
sbb
loop
out
shl
or
dec
out
fs
lcall
mov
pop
adc
cmpsb
adc
jmp
stc
dec
int
data16
ljmp
gs
dec
push
test
dec
lods
xchg
cmp
outsb
pop
inc
pop
xchg
rolb
scas
sub
push
call
scas
out
xlat
subb
pop
push
sbb
or
mov
dec
cltd
mov
decl
push
test
adc
dec
pop
fcompl
popa
lea
mov
daa
xor
sti
ljmp
scas
mov
loopne
lcall
ret
aad
jmp
dec
and
push
pop
fwait
ret
sbb
jg
mov
dec
test
movsb
inc
or
clc
or
pop
fs
dec
clc
pushl
mov
push
jnp
jmp
shrl
call
icebp
test
or
fwait
popa
sub
sbb
cmp
dec
or
push
scas
dec
mov
es
jnp
pop
test
sub
pushl
les
xchg
inc
xchg
jmp
add
divl
dec
add
jo
sub
cmpsl
int
mov
sub
scas
xchg
push
xchg
loope
push
bound
pop
icebp
adc
outsb
push
clc
cmp
test
gs
xor
xor
lcall
fildll
add
pop
sarl
cmp
rcrl
add
xchg
stos
stc
jne
inc
adc
or
mov
ja
pop
aas
jbe
and
imul
call
aad
mov
jae
in
xlat
popa
sub
mov
adc
iret
cmp
roll
jmp
push
lds
sbb
xor
xchg
jne
inc
outsl
filds
std
ljmp
and
mov
lds
nop
test
mov
call
in
cmp
mov
aas
push
lcall
lcall
repnz
jl
sub
jne
icebp
lock
popa
and
outsb
incl
mov
xor
loop
ret
iret
int3
shrb
push
call
loopne
xchg
data16
stos
dec
cld
ljmp
mov
hlt
arpl
push
lods
shrb
icebp
sub
adc
mov
sub
inc
mov
repz
cmp
leave
enter
jmp
add
sub
aad
add
mov
mov
insl
and
pop
cli
jmp
jnp
xchg
and
and
lcall
and
add
jg
push
std
std
ss
popf
test
sti
addr16
imul
fs
mov
mov
insl
test
inc
cmp
xor
movsl
mov
inc
sub
push
enter
incl
insl
test
aad
jo
out
jnp
aaa
inc
jg
inc
cmpsl
dec
fistps
test
mov
outsb
mov
and
rcr
xor
mov
rclb
daa
popa
xchg
or
hlt
and
repnz
cltd
push
lock
jmp
fdivrs
add
nop
arpl
cmp
jp
pop
mov
jbe
push
fldcw
insb
popa
loop
mov
call
out
insl
mov
lods
inc
imul
lds
dec
fnstcw
cli
jge
mov
out
call
dec
jae
in
xor
call
ss
lea
ljmp
cmp
pop
cwtl
push
setns
sub
popf
daa
aad
jecxz
jl
lods
out
jecxz
sub
pop
mov
sub
pop
mov
push
ffreep
cmpsl
xchg
adc
cmp
xchg
mov
adcb
mov
mov
dec
jmp
arpl
sysret
xchg
mov
loop
pushf
shll
scas
jg
lcall
adc
pop
jno
in
xchg
das
push
cmp
mov
lahf
push
jmp
jle
pcmpgtb
inc
in
rorb
mov
bound
fsts
inc
fcmovne
mov
inc
inc
and
dec
fsubp
in
test
sub
ret
xchg
jle
xor
pushf
pop
inc
call
shlb
sub
push
and
and
and
or
cli
mov
mov
mov
and
clc
aas
out
ljmp
add
add
shrb
fiadds
bound
pushl
nop
or
mov
and
bound
push
idivb
sbb
pop
andl
pop
lea
enter
loop
cld
repnz
jo
jne
xor
ljmp
stos
pop
push
dec
sbb
xchg
movsl
push
outsl
inc
mov
ljmp
enter
outsb
imul
aas
add
int
inc
jno
add
idiv
mov
or
push
movsl
stc
jo
push
sub
cmp
cmp
and
int3
lret
jbe
out
pop
insb
lock
pushf
into
add
xor
add
mov
mov
jmp
sbb
lods
movsb
fsts
dec
mov
xor
nop
cmp
andl
jmp
sbb
or
insl
mov
xchg
and
sbb
rorl
movsb
stos
rcrb
dec
xchg
pop
and
jg
fisttpl
fistl
ljmp
or
js
xor
fnstenv
xor
sarl
fbld
jecxz
pop
mov
sub
negl
ljmp
jl
pusha
decb
sub
cvttps2pi
xchg
jns
mov
pop
mov
xchg
push
jg
aad
dec
test
int
dec
and
mov
push
rclb
push
and
push
subl
mov
test
mov
outsl
ss
scas
shll
mov
lret
arpl
xchg
test
cmp
pop
push
inc
sub
sub
icebp
clc
pushl
cld
fcmovbe
scas
je
movsl
dec
cmc
pop
imul
div
cmp
out
mov
cmp
aam
incl
jae
ljmp
or
pop
mov
jno
in
repnz
mov
inc
jmp
pushl
jo
fldt
push
dec
jb
mov
test
and
xchg
sub
imul
pop
dec
decl
add
push
in
test
call
sbb
mov
bound
sub
frstor
cld
jl
stc
cwtl
outsl
push
punpcklbw
int
cmp
sbb
lods
mov
fsubp
jg
outsl
and
aaa
nop
mov
cmp
test
push
es
inc
sbb
mov
repnz
test
es
xorl
dec
add
xchg
in
insb
pop
ficoms
mov
je
mov
xchg
jp
jb
popf
sbb
jge
outsl
adc
stos
scas
adc
lcall
and
add
jo
pop
incb
push
jno
sbb
cmp
loopne
outsl
lcall
mov
movsb
jns
ret
test
jb
or
in
rclb
addr16
or
int3
jno
pop
or
mov
stc
push
fiadds
incl
sub
xor
out
or
fwait
mov
aaa
add
sbb
cmpsb
cmc
dec
dec
icebp
mov
inc
and
inc
push
inc
cmp
cwtl
in
and
call
andl
out
mov
je
xor
sub
incl
stos
repnz
xchg
shlb
cld
je
mov
cmpsl
das
and
jmp
sbb
push
roll
mov
enter
ds
or
fstl
pushl
adc
xor
xchg
mov
adc
decl
incl
fwait
imul
daa
xlat
lret
outsb
pop
lahf
pop
lock
cld
cmp
ljmp
call
xchg
fnstcw
push
repz
aas
push
xor
mov
sub
push
adc
ljmp
add
mov
xlat
mov
into
outsl
setae
adc
add
sub
jge
push
mov
stc
shl
jecxz
fdivs
cmp
stc
stos
xor
sbb
inc
ljmp
in
add
in
mov
vorps
cltd
stos
xchg
cmp
jg
push
and
incl
into
and
jg
cmp
cmp
cmp
and
push
aas
loope
outsl
ljmp
xchg
sbb
mov
xchg
hlt
add
adc
adc
ja
pop
call
adc
les
push
imul
xchg
jl
leave
subl
je
dec
inc
xchg
sbbb
out
sub
cmp
ja
clc
xor
mov
jg
fildll
int
or
ss
ss
and
pop
dec
es
xor
jge
cmp
insl
fs
test
and
ret
jg
outsl
adc
insl
js
gs
lods
xchg
mov
adc
les
mov
mov
inc
mov
or
out
ret
xchg
ljmp
push
mov
pop
fs
into
in
fwait
into
inc
out
cld
mov
loop
pushl
jecxz
sbb
data16
getsec
gs
ljmp
mov
clc
icebp
popf
dec
dec
sub
pop
lock
pusha
fwait
xor
pop
call
sub
mov
jle
or
mov
in
lcall
xchg
nop
sbb
sbb
dec
pushf
popa
shrb
mov
imul
stos
push
or
movsl
cltd
sub
incl
xor
testb
cmc
ja
cmc
inc
test
mov
loope
mov
stc
cmp
out
sub
clc
pop
push
out
lds
lds
pop
fistps
roll
into
adc
inc
lods
mov
out
xchg
xor
push
pop
mov
movsb
cmpsb
xchg
in
jmp
movsb
aaa
xchg
fs
and
jmp
neg
mov
xor
add
mov
mov
aas
sub
out
xor
ja
cmpsl
cmp
or
je
jmp
pop
pop
jo
ss
xor
lret
push
std
call
pop
fwait
nop
xchg
adcl
jg
rol
std
dec
mov
out
xchg
ljmp
mov
push
test
or
scas
mov
cmp
adc
les
pop
clc
pop
cmpsb
addr16
mov
xchg
aad
dec
les
jle
pop
adc
daa
adc
jae
stos
and
add
push
jge
cmpsb
test
xchg
lcall
push
test
push
cwtl
cld
jmp
push
jb
dec
outsb
sti
ds
test
jmp
dec
mov
xor
data16
add
dec
lahf
adc
push
mov
inc
lock
std
mov
nop
cmpb
adc
repz
push
dec
lea
jmp
add
pop
dec
pop
jne
mov
or
insb
shr
lods
xchg
shll
sub
ljmp
je
pop
cwtl
adc
hlt
xor
or
sbb
adc
push
or
cmc
ljmp
mov
mov
inc
push
push
das
sub
and
jg
inc
pop
mov
ss
dec
xor
jle
jne
dec
cli
sbb
mov
aad
shr
cmp
push
dec
pusha
inc
cmp
lahf
clc
call
push
std
ficompl
xchg
cltd
jecxz
jbe
cld
cmp
jnp
push
jno
pushf
jle
lret
or
incl
pop
lds
xchg
cmp
xor
mov
mov
jo
incl
stos
pop
push
sub
data16
cmp
adc
lret
test
lcall
sbb
loopne
cmp
cmpsl
mov
and
loope
lcall
mov
sbb
jbe
test
out
inc
out
outsl
fdivs
jae
push
inc
ficoms
cld
fwait
and
sbb
ja
insl
cmpsl
cltd
decl
sub
mov
adc
enter
lcall
add
roll
xor
leave
cwtl
mov
sub
or
jp
mov
ret
xor
pop
mov
and
into
out
clc
dec
inc
mov
in
inc
sbb
xor
in
in
popl
xor
cmp
push
inc
jge
and
xor
fsubrl
mov
and
cmp
push
cltd
xor
cltd
and
pop
and
cmp
clc
mov
daa
rorb
xor
repnz
mov
dec
jbe
in
pop
out
jmp
xchg
ljmp
dec
out
jecxz
sbb
out
adc
jecxz
icebp
call
rorl
rol
test
pusha
in
pop
pop
in
mov
mov
xchg
jo
fldcw
out
xchg
fisubrl
lods
sub
push
sbb
fldz
jle
inc
jmp
fmuls
ljmp
aaa
xlat
imul
mov
leave
xor
mov
jle
aas
cltd
mov
fistpl
and
lret
xchg
lahf
repnz
xchg
out
mov
addr16
dec
fists
sbb
fildl
ret
sbb
fisubrs
jbe
cmp
pop
inc
test
les
fldcw
test
pop
and
in
into
push
mov
push
mov
in
test
cli
fildll
mov
clc
jl
and
data16
pop
or
mov
or
jne
jnp
sbb
mulb
xor
jmp
dec
sub
and
sti
ss
dec
pop
scas
ret
out
call
call
or
or
mov
int
lret
dec
iret
shrb
mov
xor
adc
out
in
inc
mov
icebp
or
pop
mov
decl
inc
cmp
xchg
pop
adc
mov
repz
mov
xchg
jmp
into
aas
jnp
sub
fwait
clc
incl
push
add
pop
dec
dec
decl
pop
or
xor
add
jp
ja
sbb
xchg
iret
out
lods
xchg
nop
sarl
testl
stc
jl
xor
std
aas
sub
addl
repnz
cmc
cld
int3
sbb
add
cmpsb
js
leave
lock
int
shl
inc
push
pushf
cltd
lock
nop
dec
int3
sub
ss
cmp
sbb
adc
cmp
stos
adc
inc
hlt
sbb
shlb
lcall
repnz
sbb
push
mov
xor
or
aam
sub
inc
pop
cmc
decl
sets
cltd
cmp
repnz
nop
jmp
fstps
addr16
shrl
cmpb
cmp
out
int
mov
clc
push
test
or
ret
pushl
insb
jo
rcr
nop
add
xor
mov
mov
mov
imul
fabs
pop
ljmp
cmpb
stc
in
leave
ret
mov
jg
pusha
mov
sti
popa
pop
or
add
mov
xchg
daa
mov
mov
bound
pop
jmp
add
dec
adc
push
mov
adc
mov
scas
test
mov
jge
cwtl
sti
jne
pop
add
sbb
xchg
adc
decl
rclb
lret
adc
sbb
mov
inc
xchg
popa
scas
lret
fnstcw
and
mov
cmp
stos
outsl
prefetch
push
fiadds
addr16
add
cli
mov
inc
xchg
push
cwtl
pop
sarb
incl
pop
push
aas
push
daa
and
mov
add
push
xor
inc
adc
adc
adc
push
mov
loopne
ljmp
sti
pop
test
jnp
adc
notb
shlb
jmp
aad
fdivrs
aam
mov
lcall
roll
cmp
xchg
sub
es
cli
jo
jle
push
cmp
loope
push
sbb
sub
filds
aas
div
xchg
bound
mov
daa
cld
mov
lcall
jle
mov
jmp
clc
mov
xchg
decl
pushl
add
test
incl
adc
idivl
lods
and
add
jo
mov
es
pusha
add
bound
and
lcall
push
mov
sub
fildll
cmp
addr16
movsb
mov
popa
push
sub
dec
cld
aaa
cld
mov
das
jo
jg
ds
mov
sbb
add
or
jg
lock
cmp
roll
adc
loopne
aad
fcomip
in
mov
test
movsl
add
push
mov
int
sbb
imull
push
lcall
call
nop
dec
cmpsb
out
cli
push
mov
ficompl
cmpsb
ds
xchg
sar
jmp
pop
clc
and
push
or
loop
add
lea
ljmp
cld
gs
xchg
jno
dec
stos
sbb
ret
pop
out
int
jmp
lcall
cmp
mov
sbb
fdivrp
cltd
jmp
mov
xor
mov
add
incl
push
add
mov
loop
or
mov
mov
lods
ljmp
adc
cmpsb
pusha
aam
insb
push
pop
push
xor
mov
jg
or
int
fistps
jg
je
cmp
pushl
orl
xor
int
push
mov
pop
xlat
dec
cmpsl
aam
sbb
ljmp
mov
xchg
adc
cmp
add
pop
jb
push
fists
bound
xchg
clc
push
out
jbe
aaa
cld
lcall
push
rcrb
jmp
loop
xchg
gs
clc
stos
xor
es
decl
xor
stos
icebp
add
stc
mov
popa
outsb
roll
sti
rorl
gs
add
dec
ljmp
fyl2xp1
cmp
std
enter
pushf
xchg
mov
mov
lea
push
lods
dec
mov
cmpsl
xchg
fdivr
push
daa
test
and
out
push
and
leave
mulb
in
imul
push
xor
and
xlat
stc
call
rcrl
lock
out
lret
mov
insb
pop
push
jnp
sti
icebp
sub
sbb
stos
ds
imul
hlt
outsl
clc
jge
sbb
adc
out
imulb
lcall
pop
mov
enter
orb
outsb
add
add
and
cwtl
mulb
insb
lock
jmp
popa
or
out
sti
sbb
jnp
mov
bound
int
add
nop
subl
imul
lret
cmc
ljmp
mov
push
fidivl
cmp
push
addr16
mov
gs
sbb
and
gs
sub
adc
dec
and
incl
scas
cmp
mov
adc
idiv
jecxz
sub
inc
xlat
sub
pushl
dec
mov
out
inc
fistl
sbb
test
sar
dec
ljmp
pop
fsubs
aam
mov
push
fcmovb
imul
or
dec
mov
call
pop
cmp
lahf
sahf
sub
jle
cli
outsl
shll
and
shr
push
call
shll
jns
mov
daa
jb
sub
inc
add
cs
jmp
hlt
pop
lret
push
fs
push
adc
xchg
cwtl
fcoms
and
inc
pop
popf
adc
out
addb
dec
std
cmp
movsb
pop
adc
dec
or
and
xchg
mov
popa
insl
dec
push
pop
or
push
test
push
dec
stc
je
jp,pt
mov
mov
jo
fcoms
push
incl
xchg
push
jbe
jae
test
and
testb
mov
mov
pop
dec
sub
and
outsl
in
mov
dec
push
cld
adc
sub
push
pop
xor
add
repnz
xchg
imul
outsl
lcall
mulb
fiadds
mov
add
mov
dec
daa
mov
lock
sub
fldl
repz
mov
sti
leave
sahf
xchg
outsb
push
and
call
dec
lret
sub
call
inc
add
roll
cmpsl
emms
inc
xor
and
xchg
mov
fistpl
cwtl
repnz
push
sub
dec
mov
lds
stos
inc
mov
decl
cmc
xor
mov
popf
rcrb
bound
cwtl
loope
xchg
leave
fdivr
mov
aad
mov
add
xchg
repnz
mov
xchg
sbb
add
lcall
lds
push
fsubs
push
jl
test
xor
dec
rcrl
pop
leave
pop
das
pushf
loop
fcom
mov
fldt
in
adc
mov
repnz
hlt
mov
xor
test
xlat
call
mov
dec
jnp
pop
rcr
mov
xor
leave
mov
lcall
pop
pusha
inc
or
clc
jg
add
ret
repz
mov
lcall
add
mov
testl
jg
les
or
pushf
loope
bound
cmc
ret
fsubrl
incl
cmp
inc
xor
aaa
mov
sbb
inc
cmpsb
add
movsb
lods
or
loope
mov
testb
sub
aam
mov
jmp
sub
jmp
xchg
mov
addr16
testl
out
es
mov
bound
imul
lock
das
cli
inc
mov
xor
mov
idivl
mov
xor
and
push
in
push
mov
sbb
mov
movsl
imull
ret
xor
mov
mov
stos
pop
aam
adc
and
pusha
insl
cmp
clc
push
jb
jbe
cmpb
fisttps
stos
out
and
out
xchg
cld
outsb
sbb
cmp
inc
push
ret
sti
fdivrs
mov
jle
insb
out
xchg
adc
lcall
sbb
pop
cli
call
adc
jecxz
stc
push
cmpsl
lods
sarb
mov
mov
sbb
and
mov
fs
imul
pop
dec
adcl
mov
mov
add
fistps
sub
daa
cmc
outsb
loop
in
and
pop
pop
jge
push
fistpl
cmp
and
mov
push
mov
jo
nop
aad
decl
pop
adc
outsl
in
test
in
dec
in
inc
mov
sbb
outsb
fsub
jne
inc
in
push
pop
mov
mov
stos
mov
sbb
rdmsr
or
cmp
jecxz
cmc
testl
mov
sub
icebp
dec
aaa
outsb
jns
pushf
and
loope
call
mov
repnz
das
dec
scas
daa
arpl
xchg
inc
dec
ja
adc
int3
xchg
sub
incl
mov
ja
hlt
mov
sbb
rclb
les
jg
or
mov
jecxz
xor
ffreep
and
push
jp
sub
popa
cltd
popf
jl
js
mov
jne
dec
pop
push
lods
mov
incl
jae
shrb
insl
insl
cld
mov
mov
or
push
cmpsb
and
dec
jne
std
call
sbb
add
cmp
nop
fwait
repz
loope
cmp
aaa
lret
adc
jb
jge
pop
push
fidivs
pushl
add
push
aad
xor
mov
sub
inc
pop
sub
repnz
decl
push
pop
push
sbb
pop
adc
pop
ret
sub
andb
push
out
test
idiv
adc
push
lahf
lahf
out
adc
clc
fwait
dec
cwtl
jae
decl
cwtl
into
sti
scas
and
add
mov
cmp
and
cmp
push
out
shll
add
add
jmp
pusha
sub
mov
mov
or
jmp
jne
add
sub
cld
addr16
add
mov
sub
jg
filds
call
fmul
sub
lret
insl
mov
adc
out
xor
fisttps
add
in
cltd
push
dec
data16
or
call
or
and
adc
cmp
fidivrs
add
incl
inc
data16
cmp
repnz
pop
gs
cmc
adc
test
lcall
fimull
add
cmp
xchg
dec
inc
cs
dec
cmp
push
push
cs
sub
dec
std
ljmp
in
subb
popf
test
sbb
mov
inc
or
mov
mov
jne
sahf
mov
sbb
rcll
aaa
nop
jp
call
add
fsubp
ror
jnp
and
xor
lcall
pusha
js
push
std
pop
movsb
mov
into
loop
int3
mov
and
inc
clc
ja
dec
cmpsb
sahf
insb
cmp
stos
mov
enter
push
fs
pop
pop
and
push
and
enter
daa
test
jg
scas
inc
orl
mov
push
leave
xchg
and
jge
sub
inc
mov
popf
cltd
ds
mov
incl
xchg
jne
addr16
cli
mov
add
xchg
xchg
push
int3
out
mov
and
cmpsl
out
mov
arpl
test
fwait
aam
jno
or
cmp
adc
cwtl
push
push
pop
inc
push
adc
cmp
sub
mov
aaa
out
mov
adc
cmp
xchg
iret
ss
cmc
mov
cld
xchg
shll
rolb
dec
add
and
and
lea
das
sar
jp
xchg
or
mov
lock
xor
aas
sbb
lock
jmp
test
add
add
add
jns
subl
incl
xchg
xor
jl
ljmp
dec
cltd
mov
sub
cltd
add
cs
mov
add
fwait
cmp
sub
call
clc
mov
xor
sbb
stos
sti
push
mov
mov
mov
in
aas
mov
cmp
stos
imul
pushl
aam
aaa
push
cmp
add
mov
popa
cmp
cwtl
cmp
sub
sar
push
mov
test
sbb
xchg
nop
mov
cmp
mov
imull
and
shlb
popa
arpl
outsl
adc
lret
test
pushl
ret
push
cltd
inc
mov
psraw
or
rorb
jp
cmp
scas
incl
sbb
les
push
mov
fnsave
and
es
jb
shll
ljmp
ljmp
js
or
lock
cmp
push
cmp
mov
pop
fnstenv
sbb
shrb
jmp
jg
mov
ljmp
xlat
pop
push
dec
pop
in
or
add
or
ljmp
call
or
jg
not
lock
fcmovu
in
outsb
add
lock
dec
mov
and
incl
lock
dec
xor
aam
aam
or
js
adc
mov
sub
pushl
lods
xlat
mov
test
stos
pushf
cmp
xchg
mov
ret
lcall
incl
jle
shrl
inc
lea
cmp
mov
in
cmp
ret
jg
jmp
xchg
xor
mov
shll
inc
jge
adc
and
mov
dec
cmpb
xchg
ret
and
popa
icebp
dec
xchg
sahf
adc
std
cli
popf
pop
cld
push
iret
arpl
cmp
fildll
fdivrl
or
sbb
and
aaa
mov
jle
jg
cmp
imul
icebp
jp
popa
pop
leave
pop
push
test
out
in
jmp
das
jns
push
sub
add
sub
jno
jp
push
mov
sub
cmpsb
popa
into
xchg
pop
and
cmp
scas
adc
inc
sbb
jle
lds
arpl
bound
ret
in
int
nop
xchg
or
sbbl
call
clc
insb
pushf
xor
imul
fs
and
lea
cmp
cmp
lcall
ljmp
mov
xchg
inc
mov
inc
adcb
aad
aad
call
std
call
in
test
adc
push
inc
daa
dec
addl
mov
push
decl
fwait
sti
dec
push
or
iret
mov
jg
aam
incb
inc
jge
lea
xchg
pusha
leave
dec
ja
call
mov
inc
pop
xchg
cmp
jb
mov
lret
clc
aaa
ret
rcrb
pop
sbbb
sbb
ljmp
xor
cmpsb
sub
lret
sbb
dec
leave
sub
pop
scas
xor
fwait
push
dec
mov
into
nop
decl
mov
hlt
iret
or
or
movsb
test
mov
mov
jbe
jne
lret
mov
dec
aaa
es
aaa
pop
insl
mov
mov
push
lret
gs
inc
gs
rolb
inc
push
push
bound
adc
xor
popa
call
push
adc
bound
rcrb
sbb
pop
pop
push
xor
or
and
cld
out
clc
mov
or
adc
pop
jo
dec
mov
cld
mov
fbstp
incl
mov
fs
xchg
jge
xchg
xchg
mov
and
jmp
ljmp
mov
das
outsb
xchg
or
fsubp
add
sbb
movsb
and
in
jmp
fsubs
dec
mov
aad
hlt
dec
jmp
cmp
push
shlb
cmp
outsb
xchg
adc
push
std
popf
xor
jbe
lcall
cs
cmp
lcall
jb
cmpl
mov
add
inc
mov
xchg
and
loope
lcall
lods
adc
jl
lods
imul
das
xchg
add
decl
dec
xchg
dec
pop
adc
lods
addr16
pop
mov
jmp
add
cmp
in
sbb
jmp
std
dec
jno,pt
sub
or
mov
mov
dec
or
mov
push
aas
fcmovnu
shr
les
mov
cmp
add
aad
repnz
shr
inc
jno
mov
ljmp
or
add
mov
push
xchg
dec
das
test
mov
ret
xchg
popf
stos
sbb
dec
pop
icebp
pushl
jp
dec
out
fnstenv
dec
adc
and
xchg
push
negl
jmp
xor
mov
mov
fidivs
pop
movsl
push
jne
ja
mov
inc
jge
insl
add
sub
push
push
js
adc
xchg
imul
pushl
jno
sub
pushf
jo
test
ljmp
push
out
mov
repz
dec
outsb
push
jmp
or
xor
cmp
lods
push
inc
mov
cmp
sub
fbstp
and
dec
nop
pop
fisubrl
xor
and
cmpsb
nopl
mov
push
xchg
jmp
inc
rorb
inc
mov
sar
xor
out
cli
call
add
mov
inc
xchg
cli
pop
stos
mov
xlat
xchg
xchg
or
mov
xchg
enter
push
sub
jae
push
mov
call
inc
or
pop
fadds
lods
or
or
out
hlt
mov
movsb
adc
xor
adc
sar
xor
test
mov
push
fwait
and
cs
push
out
iret
mov
sub
scas
cwtl
jge
cmc
ljmp
pop
fildll
mov
aaa
add
into
cmpsl
pop
pop
sbb
jmp
lcall
aaa
xor
mov
cmp
adc
in
xchg
hlt
jmp
cmp
fisttpll
out
cli
les
push
cmp
jns
lcall
ss
fs
xchg
into
dec
jle
jl
add
push
dec
lahf
into
movsl
dec
mov
push
xor
add
sbb
sahf
add
mov
dec
ror
bound
data16
dec
pop
out
int3
lock
ds
and
fwait
mov
mov
ds
decl
xchg
scas
in
mov
stos
popf
seto
rol
decl
mov
in
add
cmp
loope
movsb
insb
cmp
xor
push
and
jl
ljmp
add
mov
dec
sub
loope
fildl
and
dec
mov
sub
mov
scas
xlat
jb
aaa
cmp
cltd
dec
cmc
push
lea
xchg
mov
mov
or
mov
adc
cld
jns
jmp
je
gs
sub
mov
sbb
push
inc
mov
cli
mov
clc
add
int
add
decl
pop
pop
fildll
fxam
imul
pop
in
fs
jg
jae
xchg
cmp
sbb
mov
xchg
or
push
mov
aam
mov
jmp
mov
fadds
sbb
xchg
push
rcll
and
adc
dec
cs
std
fbstp
repz
mov
and
add
jnp
cmp
or
adc
sbb
adc
add
xor
frstor
cld
and
nop
xor
mov
sar
inc
dec
add
jb
fildll
jp
outsb
xor
fistl
mov
js,pn
leave
out
in
lcall
test
dec
sub
mov
jno
xchg
push
repz
dec
push
je
mov
iret
mov
xor
insl
fildll
jmp
add
jge
adc
dec
xor
push
popf
aas
cwtl
jne
push
mov
dec
cmp
and
xchg
xlat
xor
mov
outsl
cli
and
mov
lea
cmp
popa
mov
dec
xchg
add
push
lret
aaa
lods
into
in
pop
xlat
sbb
mov
ds
or
mov
xchg
mov
fisttpl
jecxz
or
scas
imul
xlat
mov
call
inc
add
jp
pop
and
enter
fsubs
dec
dec
fsubl
aad
xchg
decl
mov
imul
jnp
push
mov
loope
je
incl
mov
adc
mov
cmp
shll
mov
sub
push
pushl
in
push
mov
js
pushf
loopne
insb
hlt
cmp
icebp
ss
cld
jp
adc
cmpsb
cs
xor
decl
leave
pop
cmpb
fs
outsl
add
xchg
jecxz
jle
js
incl
pushl
loopne
bound
std
lcall
cmp
int3
adc
repnz
inc
push
mov
pushl
cmpsb
mov
sub
int3
pop
hlt
loop
shl
jl
das
sahf
ds
cs
loopne
pop
jecxz
rorb
inc
jecxz
xor
sbb
mov
dec
es
push
addb
inc
mov
mov
rcll
leave
inc
out
ss
jge
xor
decl
loop
stos
cmp
xor
call
leave
mov
mov
jle
ljmp
push
cli
cmp
lahf
lods
cli
sti
xor
stos
adc
add
call
cmpsb
stos
lods
mov
call
xchg
es
xor
mov
call
xchg
shl
inc
sub
fdiv
aaa
and
jl
scas
inc
sub
mov
adc
outsl
js
and
jg
add
icebp
in
lock
xchg
sbb
rorb
and
adc
dec
ja
addr16
sbb
decl
popa
loop
or
out
cmp
add
pop
and
je
pop
testl
pushl
fidivl
jb
into
xchg
fcmovne
movsl
jb
cmp
mov
jg
repnz
mov
mov
and
sub
cmp
aaa
lock
cmp
pop
cltd
fbld
clc
push
adc
add
fcompl
clc
lahf
pushl
aad
cmp
jle
shrl
push
stos
pop
sub
int3
cwtl
sbb
lock
mov
push
stc
pusha
jmp
cltd
cmp
mov
and
mov
xchg
cld
ds
add
sbb
jp
adc
call
adc
aad
adc
addr16
pop
mov
out
stc
jmp
sarl
jg
mov
ljmp
in
stc
pop
movsl
add
rorb
imul
sub
jg
push
lret
inc
mov
aad
shr
mov
mov
mov
pop
sarw
or
sti
fwait
xor
in
lods
repz
fwait
ljmp
mov
lods
arpl
int
clc
andb
push
and
jmp
cmp
sub
icebp
ljmp
lahf
add
cmc
into
fistps
push
push
imul
add
sub
scas
pop
inc
xchg
ss
lock
cltd
inc
loope
call
fbstp
andb
pop
sbb
mov
out
lret
push
sti
or
clc
lcall
fldt
sub
inc
mov
push
movsl
lret
mov
dec
cld
mov
push
push
jge
icebp
repnz
jg
pop
insb
in
sub
or
out
cmp
pop
clc
insb
xor
lock
xchg
dec
inc
add
clc
orl
jle
pop
inc
xchg
add
daa
aaa
and
sub
or
pop
sarb
mov
cwtl
nop
adc
mov
or
ljmp
daa
push
mov
aam
inc
or
push
pop
js
cmpsb
mov
bound
loop
clc
sub
pop
ljmp
cmp
inc
pop
add
pop
add
fsubr
cs
ljmp
jecxz
ja
mov
and
push
mov
pop
imul
mov
inc
or
xchg
add
repz
loope
andl
jmp
dec
inc
repz
mov
mov
mov
mov
je
lods
mov
dec
decl
xor
mov
shl
cmpsl
push
or
call
in
insl
push
sti
pop
sbb
sub
add
or
bound
and
push
cmc
xchg
decl
adcb
sti
and
cld
xchg
or
pop
mov
push
push
xchg
fwait
add
mov
enter
xor
stc
jo
stos
xchg
inc
call
dec
mov
incl
pop
movsl
orb
adc
jae
out
lods
mov
filds
fimull
push
pop
insl
adc
aad
insb
ljmp
clc
enter
inc
cltd
clc
aad
outsb
sub
aas
mov
or
clc
mov
fcoms
inc
jno
mov
jge
inc
push
leave
jno
rcl
out
mov
std
jge
lcallw
cmpsb
or
out
ljmp
iret
ljmp
aaa
fs
mov
das
repz
ss
lcall
dec
cltd
mov
mov
movsl
insb
adc
leave
test
mov
lds
sub
dec
xorb
incl
in
and
inc
mov
inc
jb
sbb
jge
imul
pop
popl
bound
jmp
sbb
stc
movsb
or
test
jbe
cmp
lock
cltd
ud0
lcall
fwait
ds
int
int3
subl
in
sub
mov
movsl
jle
call
inc
dec
cmp
add
ja
xchg
lock
push
shll
pop
cmp
jle
lcall
es
add
dec
aas
hlt
sbbb
push
pushl
fadds
mov
addl
mov
js
pushl
std
call
jecxz
mov
adc
pop
mov
mov
mov
ljmp
aas
xor
lret
pop
hlt
loop
arpl
js
lods
fistl
and
adc
push
sahf
push
sbb
mov
pop
idiv
sahf
cmpsb
imul
sbb
cltd
decl
inc
enter
shrb
in
or
pop
xchg
lds
dec
sub
ljmp
mov
rcll
lret
arpl
jne
mov
in
das
outsb
call
or
call
cmp
lods
xchg
fwait
rcrb
nop
dec
mov
dec
sub
clc
iret
lock
faddl
pusha
cld
call
sub
shl
mov
aaa
cs
stos
nop
js
jmp
and
test
hlt
lret
rcr
add
inc
pushl
sub
bound
stos
dec
sub
nop
inc
test
fwait
out
call
inc
cmp
icebp
add
mov
in
xchg
data16
sarb
push
iret
arpl
jecxz
sub
xchg
lcall
mov
xor
fistpl
pop
sti
inc
hlt
inc
int3
pop
bound
scas
call
xchg
mov
mov
int3
subl
into
scas
cmp
mov
in
dec
pop
sbb
and
jl
xor
aas
dec
pusha
add
add
sub
lcall
decl
adc
outsl
fisubrl
popf
xor
aaa
jns
into
xor
and
data16
pop
mov
pand
pop
call
fcmovbe
outsl
pop
test
js
add
movsl
imul
loopne
mov
hlt
and
lret
icebp
in
mov
jg
out
cltd
ficomps
jmp
xchg
ja
jnp
lahf
test
arpl
jl
fdivrl
sbb
loopne
lods
dec
pop
lea
rcll
push
ljmp
aas
flds
mov
test
jnp
add
incl
pushw
mov
sub
or
push
test
fs
filds
inc
sub
scas
test
lret
aaa
mov
fbld
push
stos
jnp
cld
inc
ret
jns
insl
aad
push
jnp
mov
sbb
das
clc
pushl
xor
mov
aam
sbb
pop
jns
ljmp
mov
dec
cmp
shll
imul
cmp
std
addr16
mov
aam
mov
push
lcall
xchg
decl
sbb
fsubrl
xchg
xor
cmpl
ret
inc
dec
scas
push
cld
call
mov
ja
dec
into
iret
adc
ds
lea
pop
loop
jg
jns
loop
pop
jbe
pushl
xchg
sub
inc
xchg
add
mov
cwtl
notb
sub
orl
mov
mov
cltd
fwait
cmp
ss
xchg
lcall
out
pop
ret
xlat
fiadds
ja
mov
jbe
push
xchg
xchg
pop
jle
mov
arpl
lcall
imul
sti
mov
ljmp
mov
sub
and
call
jbe
stc
dec
mov
ficomps
lock
push
inc
enter
call
outsb
daa
mov
fadds
xor
add
jecxz
out
pop
pop
call
decl
pop
movsb
jge
lret
ret
and
std
add
movsb
out
dec
inc
stc
punpcklbw
fcomip
pushl
dec
and
inc
or
sub
test
outsb
les
jle
jae
inc
lahf
cli
inc
test
xchg
xchg
out
cld
sbb
pop
push
cmp
xchg
inc
dec
test
dec
lods
cmp
call
push
sbb
out
lods
test
rorl
daa
sbb
pop
mov
sarb
in
inc
xor
and
xorb
not
ljmp
clc
in
cld
dec
xor
mov
xchg
imul
adc
outsl
cli
jmp
fisttpl
add
jns
sti
xchg
stc
cld
pushf
push
ret
mov
call
xor
hlt
aad
xchg
mov
sub
jecxz
jnp
or
mov
fwait
jbe
mov
cmp
sub
leave
sbb
push
iret
stc
mov
ja
sbb
push
hlt
orb
and
cld
mov
sub
pop
lcall
mov
icebp
mov
fnstsw
insb
ljmp
stos
and
pusha
mov
or
xor
and
xchg
fistps
mov
pushf
sbb
lods
and
push
xor
les
sub
stc
aad
in
insb
enter
jg
decl
je
or
roll
arpl
loope
push
add
ljmp
jmp
jmp
lahf
in
fisttpl
in
cmp
test
add
jecxz
orb
scas
jbe
jns
test
or
jmp
into
lds
pop
addl
and
jno
push
jne
lahf
js
mov
call
ds
lods
inc
adc
sahf
jno
pushl
push
cmc
mov
test
int3
xchg
add
rolb
push
mov
sbb
mov
push
stc
push
pop
fdivl
call
ret
xchg
xchg
push
cmp
mov
inc
push
lea
testb
scas
incl
in
inc
xor
xlat
roll
add
daa
xor
stos
addr16
mov
mov
adc
gs
call
dec
rorl
clc
cmc
or
lret
lret
sub
pop
sbbb
test
sbb
cwtl
xchg
nop
mov
dec
ss
mov
jecxz
cli
outsb
pushf
rcll
loope
mov
cltd
xchg
shll
jp
sahf
jg
jb
aam
movsl
mov
popf
test
insl
mov
scas
jecxz
pop
inc
incl
xor
dec
mov
test
loopne
mov
pop
repnz
ja
jbe
insb
and
cld
push
or
roll
push
or
sub
cmp
aas
enter
mov
jbe
loopne
jmp
mov
mov
andb
push
dec
lcall
sub
and
pusha
dec
and
jae
add
pushl
mov
lret
gs
and
xorl
add
push
leave
jmp
xchg
jnp
or
cltd
push
mov
pushl
cld
adc
sti
cli
je
sub
sub
dec
jecxz
jmp
push
pop
cs
jnp
lock
jmp
sahf
push
fcomps
push
mov
or
sar
xlat
push
into
push
pushl
add
std
scas
cwtl
jg
not
pushf
adc
xor
in
cli
sub
lret
push
inc
xor
and
jbe
xchg
mov
dec
insb
cwtl
jmp
add
cld
incl
popf
movsb
jne
ficomps
out
mov
sub
stc
mov
loope
out
int3
jl
mov
out
jecxz
pusha
shll
mov
fsubrl
mov
addb
out
lahf
cmp
decl
or
xor
mov
xor
stc
iret
and
mov
ds
and
aad
cs
add
lret
addb
or
in
xorb
push
sbb
xchg
push
adc
fbstp
popa
sbb
frstor
inc
xchg
fcom
xor
jmp
cmp
dec
sub
xchg
popa
jns
add
add
add
mov
nop
sarb
decl
test
and
lea
cmp
adc
lcall
or
mov
pop
in
push
xrelease
idiv
push
xchg
insb
xor
pop
sub
popf
call
sub
sub
mov
cld
call
sub
lods
sbb
lcall
push
cmp
mov
adc
add
mov
gs
jmp
push
stos
mov
icebp
xchg
popa
test
test
hlt
inc
cmp
xchg
cmpsb
inc
cli
ljmp
cltd
pop
ret
jb
or
popa
mov
xor
jle
fsubl
out
mov
in
out
test
sti
dec
jl
int
pop
cmp
incl
sub
push
add
pop
not
lret
lret
mov
aas
addr16
shl
add
ljmp
loopne
jecxz
test
pop
sahf
rorb
jle
sbb
out
pop
add
fildll
cld
pop
popa
lcall
xchg
mov
mov
fidivs
mov
inc
or
decl
lds
push
and
push
icebp
push
fdivs
mov
mov
mov
fidivrs
jg
dec
negl
ss
repz
inc
into
lcall
mov
pushf
out
movsl
negl
outsl
push
push
repnz
dec
insb
jmp
or
aas
imul
pop
inc
xchg
mov
daa
decl
sbb
ret
sahf
adcl
int
xchg
decl
pop
push
movsl
xor
daa
scas
pop
icebp
pusha
or
test
or
push
incl
fwait
enter
xchg
or
out
mov
mov
push
or
pop
xchg
and
fs
push
push
in
cs
pop
pushf
ljmp
push
adcb
test
sti
int3
pop
mov
adc
fdivs
pop
stc
je
incl
dec
mov
dec
sub
dec
icebp
lods
lea
sti
orb
dec
loope
sbb
test
aad
jmp
nop
into
insl
mov
out
inc
cs
dec
pop
test
pop
cli
adc
dec
cltd
mov
jg
dec
rcll
cld
insl
inc
adc
test
adc
aad
rorl
jb
pushl
mov
sub
add
fistps
incl
cs
rclb
xor
fisttpll
xor
xchg
adc
mov
mov
xor
decl
adc
inc
int3
ljmp
sbb
mov
or
mov
call
imull
das
cmpsl
xor
jmp
pusha
dec
pop
jecxz
loop
ljmp
add
push
cmp
mov
mov
jnp
mov
mov
mov
sub
add
std
fwait
mov
pushl
xchg
xchg
pushf
cmp
sbb
xchg
jno
fsubrs
push
pushl
clc
cmpsb
push
movsb
loope
mov
push
clc
aas
test
xchg
xchg
xchg
jae
imul
add
xor
lret
inc
pop
clc
popl
jge
pusha
lcall
sbbb
pop
pop
push
sbbl
ja
ljmp
out
mov
mov
xor
lds
aad
ret
dec
xchg
in
test
mov
int3
mov
push
xchg
mov
or
dec
shlb
lock
dec
jl
adc
arpl
bound
xor
sbb
or
repnz
ja
aaa
scas
pushf
movsb
cwtl
cmc
jecxz
pushl
test
outsl
and
xor
call
enter
push
dec
and
inc
dec
jae
adc
xor
pop
aas
xor
insb
sub
call
aas
or
movsl
push
arpl
push
enter
inc
pop
push
lret
icebp
ror
ljmp
pop
subl
shlb
call
push
test
stc
scas
das
es
incl
sbb
incb
pop
std
xchg
and
negl
addr16
push
fists
push
loop
jp
decl
mov
sti
xor
inc
lock
and
out
stos
in
inc
insb
push
shlb
mov
out
pop
pop
sbb
sub
dec
dec
jg
outsb
test
bound
inc
pop
subl
pop
pop
icebp
dec
fs
sbb
mov
pop
lock
lcall
xlat
jge
adc
mov
cmp
adc
test
adc
jmp
dec
dec
test
mov
xor
sub
lea
pop
lds
pop
push
mov
pop
pop
aaa
fcomip
lcall
testb
dec
loop
test
or
fadds
in
ds
sbb
clc
adc
xor
iret
or
pop
in
push
shr
xchg
mov
add
inc
lret
out
ljmp
jae
fwait
ret
inc
jp
jp
jle
gs
sub
out
ljmp
ja
mov
aaa
jnp
jne
xchg
stc
or
mov
add
movsl
call
stos
test
mov
test
pop
jmp
lret
addb
or
lret
adcl
add
dec
or
lcall
push
sbb
clc
lock
repnz
out
adc
in
jb
jg
ljmp
pop
jno
mov
mov
inc
arpl
jne
jno
hlt
cmp
jnp
shll
sbb
mov
insb
call
xor
lock
cmc
pop
pop
fsubrp
and
or
jne
es
cmc
lods
pop
adc
sub
in
push
loop
sub
add
jl
xor
shlb
insb
movsl
or
cltd
sbb
mov
mov
sahf
or
test
sarb
out
shlb
ret
and
and
mov
jmp
push
nop
mov
insl
pop
hlt
mov
adc
aaa
mov
imul
mov
jmp
cmc
dec
sub
dec
mov
je
mov
ret
mov
mov
fbld
push
out
cmp
or
leave
or
out
jnp
pop
test
lcall
push
pushl
pop
icebp
xchg
inc
sub
mov
xchg
iret
sub
pop
mov
mov
jbe
in
or
pushl
insl
bound
push
clc
dec
xor
and
fbld
pushf
in
jecxz
inc
push
pop
movsb
test
xchg
ficoms
fldl
jo
lods
jg
nop
outsl
xor
sbb
sete
fisubrs
je
jnp
mov
stos
jo
mov
pop
imul
xchg
mov
inc
test
ja
enter
ljmp
filds
je
outsb
or
cs
push
icebp
test
cli
in
test
mov
leave
push
pop
push
aaa
aad
ds
ljmp
movsl
shrl
push
mov
and
mov
pop
pop
or
enter
sar
ffreep
mov
das
std
incl
lods
jmp
ja
push
push
sbb
xchg
jbe
add
dec
mov
addl
aad
pusha
cltd
add
into
mov
push
xchg
negb
outsb
add
cmc
int3
imul
pushl
dec
push
aad
fucom
insb
mov
mov
mov
jmp
call
cmpsb
aad
mov
mov
fucom
mov
pop
rcll
xor
pushl
addr16
lea
cli
test
cld
mov
push
sar
popa
pop
mov
pushl
dec
in
mov
add
andl
push
pop
lcall
movsl
inc
or
sbb
pushl
dec
adc
jge
fisubrl
dec
das
imul
fstps
pop
add
repz
ljmp
rcrb
int3
sbb
std
mov
scas
cmp
sbb
inc
lods
minps
cld
xor
adc
jno
cmp
stos
out
out
sbb
jmp
lret
push
cmp
out
or
mov
fistpl
rorl
mov
out
mov
je
sbb
bnd
enter
ds
dec
call
xor
sbb
sbb
hlt
into
or
lods
test
lahf
mov
sub
rep
sbb
add
push
dec
shlb
jo
sbb
adc
stos
fists
inc
and
decl
mov
sub
xchg
inc
fsubl
imul
call
pusha
data16
inc
rcr
pop
in
cli
fwait
push
xor
mov
outsb
adc
call
ss
cmp
shl
mov
sahf
jmp
xchg
icebp
or
mov
call
adc
orl
repnz
push
push
pop
insb
fcmovb
sub
pushl
imul
mov
add
test
dec
pop
js
je
decl
lcall
js
stos
sbb
das
pusha
mov
inc
popa
insb
add
jg
incl
mov
aas
mov
push
shr
aam
mov
aad
decl
and
popf
gs
or
or
jmp
push
sub
popa
out
enter
mov
add
in
pop
xor
pop
int
and
shll
mov
lods
xor
push
bound
andb
or
mov
inc
mov
add
jo
lcall
dec
insl
lcall
sub
xchg
jp
clc
lods
outsb
push
out
fs
fsubp
rcrl
pop
cmc
inc
popl
mov
mov
mov
mov
fwait
ljmp
pushl
or
jne
push
arpl
sbb
xchg
std
jne
mov
pop
outsl
inc
jmp
inc
sbb
xor
pop
out
mov
bound
call
xchg
adc
jmp
xchg
dec
inc
nop
cmp
lahf
data16
aas
pop
push
dec
iret
in
xor
inc
js
and
sub
iret
ljmp
iret
sahf
pop
jp
and
push
xchg
mov
inc
sbb
mul
je
mov
fsubrs
sub
mov
xor
pushf
mov
inc
jp
mov
sub
fs
ljmp
popa
fsubrl
adc
sbb
ss
push
mov
pop
xor
sarb
jmp
add
sbb
iret
call
xor
subl
js
cmp
lahf
je
pop
mov
fisttps
or
push
clc
sub
jo
sbb
mov
mov
nop
lcall
decl
sub
les
data16
cmp
jb
xor
push
loope
jecxz
call
test
and
cmp
pushf
scas
sub
mov
movsb
fucomip
mov
dec
cmp
pop
insb
leave
mov
push
call
jecxz
std
lret
push
es
pop
hlt
pushf
imul
loope
mov
js
sbb
in
xor
loop
in
mov
out
jnp
scas
sarl
bound
outsb
in
dec
decl
clc
movsl
loopne
jl
pop
mov
inc
and
lcall
or
adc
xchg
inc
ret
in
stos
and
dec
rcrb
fcmovnb
ljmp
push
std
jge
pop
lea
ficoml
call
sbb
mov
sbb
sbb
test
mov
repz
outsl
inc
imul
fldt
inc
loopne
inc
sub
and
inc
dec
inc
dec
fisttps
pop
cmpsb
mov
xor
mov
xchg
in
cmp
lret
push
and
pop
iret
fcomip
call
insl
insb
fwait
pop
imul
fdivr
nop
mov
cltd
sbb
rorb
clc
pushl
cld
shl
inc
inc
or
loope
adc
jne
cli
xchg
movsl
jno
add
or
ljmp
inc
xchg
fcoml
xchg
in
loope
mov
adc
mov
test
imul
and
icebp
inc
stos
cmp
add
xor
inc
popa
in
call
cld
das
jmp
out
lods
pusha
ret
stos
push
mov
xlat
lods
mov
stos
aaa
mov
xchg
jo
sub
sub
inc
push
imul
xor
xchg
sub
push
pushf
lods
cmpsb
xor
or
decb
pop
adc
scas
cmpsl
sbb
push
incl
pop
decl
pop
jp
or
sbb
xchg
popf
decl
sbb
push
mov
jmp
cmc
notl
sub
icebp
dec
daa
int
push
ret
add
jno
mov
bnd
mov
dec
and
insl
xchg
ljmp
and
cltd
and
and
gs
rclb
sub
adc
out
clc
cmp
lods
loope
and
add
aam
lods
jl
xlat
mov
cwtl
stos
and
das
sar
jecxz
dec
arpl
loop
mov
mov
inc
int
push
call
or
cwtl
pop
pop
inc
add
mov
xorb
lcall
xchg
scas
in
rclb
mov
push
dec
test
test
cmp
das
nop
or
jle
push
std
pushl
shlb
mov
jle
shll
and
lods
xchg
inc
jg
xor
nop
sbb
push
es
out
sub
cltd
mov
cmp
push
lret
in
push
decb
repz
ja
lcall
mov
loopne
pop
incb
cmpb
lea
pop
or
dec
xor
fildll
les
adcb
mov
fstpl
stos
and
push
jns
and
inc
test
pop
push
aad
and
pusha
sbb
pop
xor
jg
movb
dec
aam
scas
adcb
and
ss
cltd
adc
mov
je
jo
mov
inc
xchg
nop
adcb
inc
add
push
std
lcall
in
lahf
xor
or
ret
mov
dec
jecxz
or
jne
incl
cld
push
mov
mov
mov
lret
xchg
int
pop
sti
pusha
cmp
cld
call
cld
test
addb
mov
jmp
mov
call
mov
sbbb
adc
mov
mov
divl
and
clc
cmp
pushl
pop
sub
lods
pop
xor
add
in
mov
sbb
lret
mov
mov
aad
shlb
inc
test
test
mov
incl
sub
mov
pop
mov
in
pop
stos
add
cmp
mov
notb
lcall
and
gs
testl
sub
into
fcomip
mov
pushf
sub
adc
push
arpl
xor
fs
sbbl
pushl
xor
jg
cmpsb
sti
hlt
cwtl
insb
jno
pop
and
mov
lret
stos
mov
add
mov
jae
mov
jl
rcll
sub
xor
mov
dec
cmp
scas
or
repz
inc
jno
notb
sub
cwtl
pop
add
aas
and
fwait
mov
pop
push
cld
hlt
sbb
fsts
in
icebp
jecxz
cwtl
inc
iret
or
loop
and
mov
loopne
lcall
mov
aam
cli
incl
push
clc
dec
sub
aam
lret
xor
dec
decl
xor
inc
clc
insb
js
mov
fwait
inc
push
mov
call
mov
pop
jne
in
xchg
bound
and
adc
fcoml
dec
xchg
mov
cmc
shrb
cmp
outsl
cli
jg
mov
add
in
mov
pushf
push
inc
sbb
orb
cmc
leave
fiadds
incl
fstp
dec
pop
push
divb
xor
cmp
sub
xchg
pop
fnstenv
add
out
dec
idivb
dec
push
out
aas
out
mov
dec
lahf
ljmp
insb
push
jp
lahf
int
jle
fwait
sub
das
mov
pop
jb
divl
cmp
and
dec
mov
mov
jo
mov
in
fcompl
ja
inc
cmc
jp
mov
movsb
adc
fistpll
inc
mov
sub
into
pop
jle
pushf
adc
fsubr
stc
incl
clc
sub
hlt
mov
jnp
adc
dec
inc
pop
adc
sub
cld
mov
and
xchg
dec
cltd
lret
xor
jno
ljmp
cmp
xor
lds
cs
cmpb
push
mov
push
subb
cmp
popf
ja
pop
push
lock
xlat
mov
jmp
xlat
call
ret
movb
setle
int
call
add
sub
push
cs
ss
ljmp
add
fdivl
jle
ja
fcoms
cmc
stos
sub
xor
add
lcall
sbb
jb
shrl
pop
pop
mov
fdivs
jl
dec
mov
ljmp
xchg
push
xor
insb
xchg
jne
push
xchg
ljmp
out
mov
inc
xchg
int3
pushf
shlb
repz
cs
cltd
daa
negl
ds
xlat
ds
and
adc
mov
xchg
sahf
dec
aam
dec
adc
push
ret
shll
push
jmp
lcall
xchg
add
lods
call
adc
scas
sbb
sbb
jbe
mov
adc
popf
mov
push
mov
orb
loope
mov
cs
pushl
std
decl
pop
ss
arpl
jb
and
lds
int3
fcmovnbe
decl
call
pushl
out
mov
hlt
jb
pop
jo
movsb
push
movsl
rcll
loopne
jg
add
fdivrl
sbb
adc
jl
fcomip
call
lret
or
pop
xlat
std
jmp
dec
hlt
mov
add
jne
add
idiv
call
clc
pop
inc
jb
sti
push
mov
in
ja
out
shr
test
lcall
aad
mov
ljmp
clc
addb
fcomip
lcall
ficomps
push
scas
lods
adc
cmp
push
xor
ljmp
mov
iret
xor
push
fcoms
fimull
outsl
push
outsl
out
and
jle
incl
sbb
lods
movsb
mov
inc
jno
and
cmpsb
inc
mov
test
into
mov
imul
fldl
es
xor
pushl
jl
andl
push
or
pop
xor
push
pop
lret
adc
pop
mov
in
or
cli
pusha
orb
es
test
test
mov
mov
call
loope
stc
lcall
mov
pop
cmc
ret
mov
arpl
sahf
mov
adc
add
adc
repz
pop
rclb
repz
filds
pushl
sbb
mov
xor
dec
movq
dec
hlt
movsl
fcomip
scas
mov
pop
es
repnz
mov
xchg
pop
test
popf
pushf
divb
ljmp
aaa
add
xor
in
test
js
pop
ret
ret
jnp
pop
int3
fildll
call
loopne
arpl
mov
xchg
xchg
loopne
dec
cmpl
fiadds
sbb
incl
push
xchg
mov
pop
xor
sub
ffreep
nop
pushf
fnstsw
cmp
xchg
rorl
inc
fadds
xlat
cmpsl
daa
cmp
imul
ljmp
mov
mov
call
inc
inc
mov
push
jnp
scas
pop
arpl
sub
sub
add
pop
sbb
fstl
sahf
dec
test
fsubl
ret
shlb
daa
push
lods
fiaddl
enter
mov
xchg
adc
int3
aaa
lods
xchg
fsubs
inc
cli
incl
fistpll
fimull
incl
sub
sub
mov
mov
sub
lods
cmp
aad
decl
loopne
pop
mov
sbb
push
push
lahf
fldl
xor
lea
stos
sbb
xor
jge
sti
daa
outsb
inc
stc
cmpsb
loope
cltd
test
call
divb
shrb
lret
repz
xchg
test
mov
lock
incl
out
rcll
jb
adc
in
sti
nop
jbe
sub
adc
call
enter
push
daa
call
pop
ret
mov
push
cld
adc
movsb
iret
jg
movsb
cmpsb
sub
push
repnz
inc
out
outsl
cwtl
mov
popf
scas
mov
pop
or
sub
aaa
call
push
arpl
mov
and
push
int
ret
into
xchg
jg
xchg
add
push
decl
enter
pushl
push
in
inc
push
ja
push
push
repz
mov
repz
shll
das
outsl
fdiv
je
pop
jecxz
and
sub
aam
or
fbld
shlb
inc
xlat
dec
ss
cli
js
call
mov
mov
mov
cmp
je
mov
pusha
pop
out
xchg
inc
push
rcll
fsub
decl
lahf
xchg
lods
mov
push
sbb
sbb
pusha
jecxz
push
mov
aas
xor
inc
shlb
mov
mov
inc
in
movsl
pop
rcrl
pop
out
cli
frstor
jae
xchg
dec
xchg
mov
sahf
lea
or
pushl
sbb
inc
inc
out
inc
push
or
pop
scas
or
or
cmp
call
and
cmp
cmp
or
add
dec
fbstp
popf
imul
incl
es
push
push
lock
pop
xchg
icebp
mov
stos
cmp
nop
cmc
mov
jmp
scas
and
lret
test
stos
pop
mov
adc
and
inc
sarb
mov
loop
pop
gs
ds
ret
cmp
outsl
ljmp
adc
shl
je
fistpll
loop
pushf
jg
inc
stc
addr16
cmc
and
jp
dec
xchg
mov
call
sbb
jbe
xchg
clc
pusha
daa
out
or
add
shl
pop
fistpll
sub
jmp
loopne
aad
scas
inc
push
shlb
in
mov
push
sbb
lcall
stos
adc
sbb
push
xor
cmp
call
repz
mov
mov
stos
sub
jg
addb
lods
inc
pop
icebp
xchg
test
decl
fstps
popa
movsb
push
mov
push
sub
icebp
sub
imul
xor
ret
pop
adc
push
xor
pop
inc
cmp
mov
or
decl
mov
push
pop
adc
cmp
cld
mov
inc
jns,pn
push
rorl
pushl
fadd
sbb
xor
mov
add
fwait
cmp
jb
subb
ljmp
movsb
mov
dec
sar
jo
adc
pop
rorb
nop
add
jge
mov
or
iret
sti
ret
jae
sar
lcall
in
mov
test
mov
test
pusha
stc
outsl
dec
lret
rclb
shll
imul
mov
mov
mov
mov
stc
rclb
test
mov
sbb
mov
shll
sbb
xchg
test
and
decl
imul
fsubl
adc
pop
dec
inc
loope
out
mov
adc
sahf
adc
es
xchg
jmp
and
pusha
popa
clc
std
in
push
push
jnp
int3
mov
subb
leave
dec
das
imul
std
outsb
inc
movsb
and
cld
adc
dec
call
xchg
enter
dec
imul
nop
xchg
mov
sar
jg
fstpt
lds
mov
add
xor
pushl
jno
fstpt
ror
adc
push
sbb
dec
mov
pushf
xchg
and
mov
adc
inc
inc
push
sbb
cmpb
es
or
xor
adc
lea
mov
ljmp
nop
sbb
push
neg
popf
adc
aas
dec
cmp
loopne
in
mov
xchg
std
mov
popf
ljmp
cmp
pop
lock
push
into
cmp
cmp
das
mov
icebp
aad
incl
lock
jbe
sti
rorb
pushl
push
xchg
pushw
xadd
insl
gs
or
rcll
add
fwait
or
xor
and
decl
xchg
pop
cmc
pop
mov
xchg
lcall
cld
xchg
xor
xor
popa
test
sar
add
imul
inc
jge
push
or
in
int
mov
mov
in
ljmp
adc
pop
aam
lcall
or
call
sbb
and
fsub
addb
mov
scas
stos
mov
and
mov
fcoms
jb
dec
lea
fsubrl
cmp
sbb
decl
push
test
cmpsl
movsl
cs
dec
cld
out
daa
arpl
sub
mov
cmpsb
or
mov
jg
xchg
pop
jle
mov
or
sbb
or
dec
cli
add
ljmp
nop
jbe
pop
popa
mov
cli
cmp
lea
popa
sbb
std
or
sti
shll
jmp
jns
mov
das
jae
ja
fsubs
in
out
pop
or
scas
clc
incl
dec
or
movsb
shl
shlb
insl
sub
fcmovnb
sti
adc
cmp
popa
cli
push
std
dec
int3
lret
jmp
inc
cmp
or
pop
inc
ficomps
pusha
out
sbbb
in
psubq
mov
mov
movsl
fdivrl
in
fucomi
mov
lods
hlt
lret
dec
imul
pop
sar
cmp
mov
mov
cmc
dec
in
test
lds
lret
push
mov
xlat
shl
daa
scas
add
jle
rol
mov
fbld
sub
movsl
fnstcw
loopne
mov
popa
shll
add
call
outsb
arpl
mov
test
aad
mov
mov
fbld
xchg
dec
pop
das
outsl
icebp
ja
mov
fs
push
call
mov
hlt
iret
sub
test
jmp
lcall
jae
pop
sub
mov
or
cmp
mov
sahf
ljmp
jg
rcl
cmpsb
push
enter
aad
mov
sub
cmpb
js
lods
pop
aam
pushf
mov
xor
push
xchg
ds
cld
sbb
cwtl
adc
sub
cs
stc
outsb
out
lret
xchg
imul
jb
push
or
das
cmpb
push
daa
adc
dec
add
loop
add
push
lahf
jbe
mov
test
jmp
stos
cmpsl
sbb
sub
test
jl
popa
subl
sbb
inc
fildll
fmul
shlb
dec
jae
xchg
sbb
pop
pop
outsb
jno
jecxz
decl
out
shrl
jae
bound
lcall
mov
mov
cwtl
ljmp
inc
loop
pop
mov
mov
outsl
xchg
repz
nop
jb
cmp
lock
call
adc
mov
dec
mov
pop
test
imul
push
jne
les
je
idiv
jmp
arpl
lret
cs
mov
pop
pop
orl
sbb
mov
mov
add
jmp
mov
dec
ds
jl
test
in
mov
fldl
push
and
pop
mov
jmp
jmp
cmp
mov
imul
pop
or
cmc
nop
cld
in
pop
sbb
mov
jmp
add
popa
call
imul
je
pushf
xlat
lcall
inc
sahf
lea
dec
jle
dec
or
jg
lret
mov
push
inc
inc
fstps
pop
addr16
repz
in
loopne
decl
and
xchg
aas
and
leave
push
add
roll
dec
js
xchg
dec
cld
lods
cmp
lcall
jmp
add
mov
enter
lret
mov
sar
lcall
xchg
dec
push
repnz
jp
add
adc
in
push
fs
mov
call
xor
jns
lret
mov
mov
nop
mov
in
enter
fcompl
aaa
push
push
pop
cmpsb
pusha
mov
cmp
inc
adc
lds
rcll
lcall
pushl
loop
scas
je
and
sbb
imul
mov
or
push
lds
cld
dec
in
jge
mov
adcb
and
push
bound
fcmove
xchg
dec
jmp
sbb
and
cwtl
cmp
movsb
repnz
jae
clc
dec
jge
fldcw
inc
jno
sar
filds
lods
test
sbb
sbb
pop
cwtl
sbbb
jmp
je
adcl
call
mov
push
jmp
push
imul
ja
ljmp
pop
outsb
rclb
and
or
fwait
inc
shlb
sbb
and
xor
inc
hlt
push
jne
jne
push
repnz
xchg
pop
mov
incl
mov
loopne
rcrb
addr16
les
pusha
fidivl
ljmp
adc
sarl
sub
mov
xlat
pop
bound
jns
das
sub
insb
dec
in
cmp
mov
add
pop
icebp
dec
in
mov
cmp
ret
sahf
fnstcw
call
out
les
cmp
dec
sbb
aam
out
and
pop
iret
jno
setbe
call
push
sub
push
mov
mov
pop
pop
sub
lahf
cmpl
es
decl
sbb
sub
cmp
inc
add
mov
call
in
pusha
arpl
jnp
mov
cld
lcall
call
sub
pop
push
mov
int
fs
adc
fwait
inc
stos
cld
ja
push
mov
sbb
lret
fmull
popa
addb
call
mov
ror
cs
push
in
pushf
inc
or
es
fnstsw
push
pop
xor
mov
jnp
ljmp
lahf
inc
adc
mov
push
add
lea
xchg
ss
je
imul
jmp
das
cmp
add
mov
mov
cld
insb
xchg
aam
cltd
push
movq
sub
xor
fadds
cmp
int3
jge
inc
push
daa
sbb
lods
cmpb
mov
outsl
add
out
jl
and
dec
jge
xacquire
dec
lods
sarl
imul
lods
dec
push
arpl
lcall
ljmp
push
cltd
popa
jle
xchg
faddl
fistpl
aam
mov
jecxz
add
xchg
mov
icebp
lcall
lods
cld
or
xchg
das
dec
fstps
ret
push
in
mov
inc
jge
push
leave
into
pop
cld
lcall
shlb
iret
add
rcll
jecxz
ljmp
ret
pop
int
push
xchg
loop
and
adc
add
xor
jmp
lcall
ss
int3
inc
repnz
xchg
xchg
jno
xchg
stos
mov
pop
jl
decl
mov
push
inc
pop
imul
cld
fisubrl
cmpsb
out
pushf
inc
gs
xchg
fwait
mov
fldcw
pushf
dec
mov
mov
jmp
ja
nop
out
push
and
cld
int
call
sbb
mov
xor
addl
call
bound
aas
sub
xor
cmp
out
cltd
es
clc
mov
add
mov
lret
adc
cmc
mov
in
cmp
and
loope
mov
cmp
cmp
cld
and
xchg
push
xor
push
push
cld
mov
aam
clc
icebp
jbe
push
pop
inc
push
jmp
lcall
test
loop
sub
adc
imul
jns
pop
test
add
cmpb
andb
push
loop
clc
call
rorb
stos
cmp
cmc
stos
les
lea
or
loopne
mov
mov
and
inc
jl
rcll
daa
cmp
push
xor
outsl
addb
pop
pop
push
add
xchg
dec
lods
jmp
jge
cltd
mov
jp
pushl
cld
insb
int3
out
arpl
out
loopne
xchg
rclb
xchg
mul
popf
aad
add
aad
incl
flds
fsub
dec
sbb
xchg
pop
add
adc
jb
push
outsl
clc
cmpsb
push
inc
std
mov
mov
sub
test
divb
lcall
sbb
loope
ljmp
je
cmp
sub
pop
dec
cmpl
jmp
bound
jp
xor
adc
jp
fiadds
in
popa
add
cmc
dec
push
cld
pop
insb
lods
dec
shrb
je
xor
arpl
rcrl
jg
test
mov
sub
adc
mov
daa
cmpsb
sbb
call
inc
mov
out
and
inc
gs
xchg
adc
dec
adc
pop
jnp
mov
or
adc
push
sbb
insl
push
lea
loopne
xchg
push
ret
incl
aas
xchg
mov
add
out
movsb
pop
fwait
shll
cmc
mov
push
sub
xchg
mov
mov
jle
mov
mov
or
pop
out
jbe
dec
icebp
clc
jg
test
subl
push
cltd
or
or
sbb
jno
xchg
sbb
mov
jp
lds
out
es
jns
xchg
scas
cs
cmpsb
leave
lret
xchg
call
lret
adc
push
cmpsl
mov
or
imulb
inc
jmp
fcomps
xor
xchg
pop
gs
aas
pop
or
movsb
push
int3
xchg
cmc
dec
lcall
outsb
ja
ja
jmp
xor
jbe
xor
in
add
call
sbb
mov
push
sbb
std
dec
or
xchg
popa
xor
xor
lret
das
cli
shlb
mov
jbe
jmp
dec
push
mov
mov
sub
mov
ret
inc
adc
xchg
jl
daa
add
call
pushl
mov
out
ret
xor
out
jg
in
sbb
add
pop
movsb
out
xchg
adc
xor
add
jl
jg
inc
mov
int3
xchg
popa
daa
scas
push
xchg
out
pop
out
xchg
push
ret
and
leave
xchg
or
mov
loope
lds
cmp
movsl
xor
int
cmp
pushl
dec
mov
out
loopne
icebp
iret
or
mov
int3
dec
jns,pt
ljmp
mov
rclb
or
je
cmpsb
lods
push
sti
ljmp
rcrb
adc
xor
or
loopne
enter
cmp
or
hlt
inc
pushf
pusha
jo
imul
push
xor
out
sbb
ljmp
mov
outsb
ss
outsl
js
js
dec
sarl
repnz
aam
xchg
inc
in
jmp
call
cmp
xchg
mov
xchg
and
xor
stc
repz
mov
adc
adc
adc
dec
cmp
daa
inc
sbbl
jecxz
pushl
mov
mov
mov
lods
add
adc
mov
flds
pop
icebp
mov
add
idivl
mov
mov
push
xor
mov
jg
into
andb
pop
xor
ljmp
in
divb
mov
xor
inc
inc
jbe
rorb
and
decl
es
pop
mov
cmp
test
js
sub
mov
inc
or
ljmp
out
dec
cmpsl
xchg
sbb
xchg
fstps
movsl
nop
push
popa
jb
pushl
std
mov
or
imul
mov
movsl
inc
push
cmpsl
test
pop
das
movsb
cmp
clc
adc
mov
in
lods
xchg
mov
push
in
cli
retw
push
and
jle
mov
sub
lods
push
and
test
jl
pushl
add
inc
out
pop
mov
sub
xor
mov
rcll
test
xor
mov
jae
test
stos
add
adc
or
xor
pop
and
xchg
incl
roll
and
lods
dec
push
int
shlb
pop
cmp
sub
pop
fwait
dec
sub
cmc
jmp
daa
out
lahf
data16
mov
outsb
jle
dec
jge
push
ja
adc
mov
gs
mov
push
decl
add
dec
popa
add
aas
sbb
push
popf
decl
jl
push
cli
scas
ds
xlat
aas
adc
shll
ds
stos
add
neg
hlt
jmp
cld
sbb
cltd
mov
sub
jle
ffreep
ljmp
xor
movsl
scas
lahf
fwait
push
push
jmp
push
loop
sar
ljmp
es
pusha
add
mov
dec
orw
aam
sti
mov
decl
mov
hlt
stc
mov
or
jmp
cmc
movsl
ljmp
in
ss
sbb
movl
and
repz
cld
pushl
mov
out
test
ret
jnp
shrl
mov
pushl
push
mov
push
mov
cmp
mov
lret
mov
jge
ret
sub
outsb
sbb
decl
mov
fldcw
outsb
push
mov
xorb
cwtl
add
addb
bound
sub
adc
push
fisttpll
or
push
pop
fildll
cld
nop
inc
loopne
lds
mov
mov
sub
shl
out
jo
jne
inc
mov
ljmp
cli
pusha
mov
pop
lcall
pop
mov
into
decl
mov
pop
fsub
dec
pop
outsl
outsl
add
lret
push
inc
dec
mov
fmul
pop
aad
push
inc
sahf
push
xchg
mov
out
ror
inc
loop
xchg
sub
or
mov
ror
xor
mov
add
push
les
scas
ds
cmp
jns
test
incl
ljmp
repnz
dec
orb
nop
repz
add
jnp
std
jae
push
pop
push
sub
or
push
cmc
dec
jg
push
lds
hlt
mov
jne
jno
jo
ss
or
int3
push
fistl
outsl
ljmp
and
mov
es
mov
shlb
dec
int3
pop
sub
push
fdivl
insb
shlb
pop
mov
jbe
mov
shl
cmp
das
outsl
add
mov
clc
call
mov
stc
nop
jmp
or
ja
dec
inc
pop
aad
or
push
stc
xchg
sbb
dec
fistpll
stos
pop
imul
mov
in
add
add
es
mov
inc
jmp
push
fbld
jecxz
divl
push
mov
imul
jmp
call
lret
mov
loope
or
hlt
cmp
jno
mov
popf
mov
mov
sub
stos
push
sbb
in
outsb
iret
sbb
mov
xchg
jg,pt
pop
jne
es
xlat
push
and
mov
call
mov
pop
test
push
pop
sarb
fisubl
addb
mov
nop
or
mov
jg
movsb
nop
pop
lahf
ljmp
adc
or
cmp
jae
pop
mov
xchg
dec
and
fwait
jge
adc
sbb
test
popa
jl
add
push
inc
sar
mov
sarb
lahf
push
and
cmp
es
fistpll
loopne
je
mov
sub
shll
jp
incl
inc
cmpsl
push
inc
arpl
lret
mov
fisttpll
dec
mov
les
xor
loop
call
subb
insl
xchg
mov
pop
dec
inc
sub
movsb
test
iret
dec
icebp
ljmp
inc
mov
ret
add
int3
das
jne
mov
sbb
or
aam
stos
and
popa
imulb
and
add
insl
je
nop
xchg
daa
in
mov
mov
into
ljmp
lcall
dec
ljmp
and
mov
lret
addl
call
lret
loop
clc
jmp
mov
xchg
jb
repz
imul
ret
mov
sub
adc
lock
mov
divl
arpl
mov
repz
insl
mov
shrb
mov
arpl
sub
push
incl
test
xchg
in
cmp
mov
std
pop
sarl
push
call
cmc
mov
mov
jge
or
outsl
jg
lods
lea
incl
push
pop
rcr
sbb
jecxz
ret
adc
fwait
test
sbb
rcl
or
jns
lods
inc
fistps
lret
lret
inc
pop
cmpsb
xchg
icebp
add
jo
cmp
ja
aad
and
sbb
inc
jae
in
inc
and
mov
xor
jne
mov
aas
xor
or
pop
lock
in
repnz
or
aad
add
bound
mov
fists
into
xorb
call
push
fdivs
icebp
pop
cwtl
es
stos
iret
loop
pushl
test
popa
pop
nop
dec
inc
in
xor
pop
scas
rcrb
out
adc
data16
push
incl
les
pop
imul
sbb
test
sub
mov
xor
lods
sbb
inc
xchg
dec
xor
and
incl
lock
testl
out
in
inc
icebp
scas
adc
inc
cli
gs
push
stos
popa
cmpb
ljmp
in
xchg
pop
jecxz
ficoml
dec
xchg
popl
cmp
movsb
addb
hlt
pop
mov
cmp
mov
or
icebp
push
jo
scas
ret
imul
iret
arpl
dec
pop
push
imul
or
dec
or
xlat
cli
jmp
es
mov
mov
ficoml
icebp
icebp
in
sub
sub
movups
ljmp
test
inc
sub
sub
sbb
call
jmp
dec
out
or
and
xchg
mov
and
dec
jnp
sarb
sahf
add
cmp
pop
push
and
shlb
enter
mov
xlat
enter
cmp
loopne
addr16
sbb
loopne,pt
fldenv
lret
cmpsl
or
dec
fsubrl
adcl
mov
fucomp
hlt
lea
bound
loopne
pop
mov
pushl
xchg
push
fstpl
stc
mov
inc
mov
xor
add
xchg
mov
mov
lods
mov
add
test
ret
jmp
je
sbb
sub
mov
mov
icebp
pop
das
cltd
push
and
pop
scas
std
gs
pop
insl
cmp
sub
insl
dec
or
pop
xchg
push
cmpl
or
dec
cmpsb
lcall
cmp
testb
test
test
leave
lods
iret
push
pop
aas
mov
and
cwtl
dec
leave
jg
shll
movsb
or
jo
pop
jg
call
rorb
test
arpl
jb
xor
loope
jmp
es
mov
ja
mov
inc
arpl
in
call
push
mov
enter
sub
jl
fstpl
mov
sbb
nop
lock
pushl
mov
cmp
lods
shrl
and
mov
stc
popa
mov
pushl
pop
sub
adc
ficomps
cmp
imul
incl
xchg
adc
mov
push
hlt
cmp
imul
pop
or
leave
fnstcw
insl
cmpl
popa
jmp
je
inc
or
loopne
lods
cmp
push
in
adc
gs
sbb
and
sub
incl
fcomi
fisttps
fstpl
mov
mov
incl
je
test
mov
dec
ret
or
pop
mov
scas
cli
call
push
pop
ficomps
xchg
inc
ja
mov
sub
into
ljmp
xchg
xchg
adc
mov
aam
pop
mov
ljmp
add
jae
loop
les
shrl
jl
inc
xor
pushl
nop
add
jp
push
mov
mov
inc
and
adc
loope
lcall
mov
or
ljmp
inc
mov
sbb
sbb
mov
ljmp
scas
or
cmp
enter
imul
cmp
mov
sbb
scas
in
mov
pop
xchg
and
cmpsb
or
pop
iret
js
jg
out
push
jmp
mov
inc
pop
inc
push
test
mov
dec
dec
imul
mov
pop
aam
xchg
xchg
clc
nop
bound
sub
in
mov
lods
xchg
sbb
lcall
mov
fists
stos
fsubrl
mov
dec
loopne
pop
idiv
ja
jle
out
jmp
int
dec
insb
cltd
mov
ljmp
adc
rorb
insl
data16
loope
mov
mov
lcall
xchg
pop
sub
subb
and
mov
sahf
nop
ljmp
out
xchg
lock
mov
dec
aas
das
pop
dec
xchg
out
lods
mov
filds
adc
testl
sbb
dec
jecxz
push
ja
int
imul
jmp
mov
push
inc
sbb
add
std
push
xor
mov
cmpsl
iret
lods
adc
call
adc
out
insb
iret
mov
push
fs
cmc
or
inc
and
test
pop
push
das
loop
jg
incl
dec
and
setnp
dec
xchg
mov
mov
xchg
dec
cmpsl
fdivs
clc
ljmp
int3
add
xlat
or
and
push
mov
sub
mov
and
sbb
repz
dec
pop
sbb
xor
inc
adc
orb
cmp
incb
pushw
scas
into
lock
test
jnp
outsb
sub
lcall
hlt
xchg
xchg
and
imul
fstl
add
in
mov
cli
push
ret
mov
incl
or
into
cmp
sbb
loop
sbb
push
lcall
pushl
outsl
cmp
in
fadds
dec
add
jg
inc
dec
out
lock
xlat
pop
push
aas
add
adc
outsb
jb
jmp
mov
adc
cmp
mov
push
jl
pop
dec
sbb
sbb
jmp
div
sbb
jmp
dec
ret
pusha
in
lret
cmp
lods
shrl
ja
stc
xor
shlb
pushl
dec
jbe
jo
adc
add
neg
mov
adcl
jns
and
xchg
lods
add
sbb
mov
testl
or
inc
ret
fdivl
je
ret
testb
aam
std
test
add
std
and
adc
xchg
sbb
pop
dec
jmp
sbb
in
in
out
inc
dec
jle
sub
fildll
pushl
les
push
inc
test
xor
jge
mov
or
xor
add
xor
scas
insb
mov
sbb
push
xor
stos
into
cmp
sub
insl
mov
jg,pt
xor
sbb
and
out
mov
inc
jmp
inc
inc
and
sub
dec
and
pushl
cmp
jae
orl
outsl
adc
aam
outsl
mov
xchg
cmp
fmull
ds
push
incl
dec
xchg
cmp
mov
hlt
push
je
shl
inc
adc
pop
addb
decl
inc
inc
outsb
mov
pop
add
pop
adc
repz
scas
xrelease
mov
das
adc
mov
fwait
push
dec
lock
ljmp
and
test
sbb
ss
repz
daa
xor
loope
mov
decl
inc
xchg
pop
sub
mov
cmp
fidivrl
js
xor
pop
out
sbb
jno
and
inc
push
int
push
decb
lock
cmpsl
pop
rcrl
mov
test
dec
jg
fwait
movsb
push
es
add
movsl
jg
adc
jmp
shlb
stc
dec
mov
mov
xorb
mov
aaa
or
dec
sti
sub
add
sbbl
cld
call
push
inc
mov
jae
sarl
jle
neg
imul
jmp
sub
aas
cmp
or
ret
jae
scas
rorb
cwtl
dec
inc
inc
cmp
push
cmp
inc
mov
add
dec
neg
or
lcall
das
sub
mov
out
icebp
outsb
test
sti
mov
jns
sbb
add
cmc
out
ljmp
andl
xchg
lcall
cmc
lcall
add
in
out
insl
or
or
or
adc
mov
sbb
mov
test
mov
repz
inc
lret
jle
jg
arpl
lcall
cmp
loopne
sub
and
or
xchg
adcl
js
enter
testb
ror
addr16
add
xchg
loope
popa
inc
sahf
loopne
stc
cmc
adc
out
xor
cmp
add
cld
pushl
bound
popa
adc
fs
ljmp
mov
mov
fucomp
jne
dec
and
pop
pop
repnz
aas
mov
sub
mov
jl
pop
cmp
decl
cmpsl
jp
ficompl
mov
roll
add
jmp
test
inc
mov
cmpsb
adc
lock
std
call
out
mov
rorl
fcomps
ds
out
call
pusha
mov
xchg
push
sbb
ret
clc
sub
ljmp
inc
fmulp
insb
mov
sbbb
push
lock
fcoms
repz
jbe
imull
pop
jb
insb
lds
addr16
or
lahf
mov
nop
test
scas
jg
lret
sub
cmp
adc
mov
and
das
push
xchg
or
incl
push
and
in
add
sahf
jl
in
rorl
outsb
push
scas
enter
inc
out
std
daa
icebp
mov
jmp
rorb
cmp
push
lcall
xchg
sub
pop
xchg
fsubrs
mov
sarl
jle
loope
and
mov
cmp
cwtl
adc
lcall
xchg
mov
repz
add
mov
dec
mov
xchg
xor
push
jmp
xchg
cmp
cs
and
inc
iret
jmp
test
dec
je
enter
stos
sub
sub
call
push
rolb
push
inc
push
mov
rclb
add
lcall
mov
fdivrs
dec
fisubs
lret
std
out
fs
nop
loop
cmp
out
test
dec
sbb
pushl
bound
sub
adc
in
jo
push
xor
cmp
lcall
sub
and
clc
mov
jge
movsl
ss
cli
mov
addr16
gs
mov
sub
jb
aas
mov
cmp
inc
pushl
test
jne
pop
inc
das
dec
sbb
xchg
or
xchg
dec
cmpsb
and
pop
dec
pop
add
stc
inc
push
sbb
decl
jno
or
mov
adc
rclb
std
call
movsl
std
inc
cmp
push
lds
daa
cmpsl
jo
arpl
mov
lret
mov
incl
jmp
cmpsl
aad
arpl
ja
mov
push
adc
mov
mov
xor
stc
or
int
hlt
push
and
xor
loopne
ret
pushl
aad
subb
imul
push
add
filds
pop
push
jmp
push
mov
pop
adc
jns
mov
cli
dec
pop
or
sti
mov
sbb
adc
popa
jg
scas
fstpl
add
mov
decl
inc
jecxz
push
push
jae
cs
push
inc
pushl
inc
mov
and
jnp
movsb
addb
mov
mov
dec
push
aas
push
fs
ds
inc
pusha
mov
aas
orl
sbb
popf
test
dec
out
xchg
inc
icebp
xor
adc
data16
pop
inc
out
lret
mov
loopne
decl
mov
mov
ss
mov
dec
outsb
mov
ljmp
jge
and
repnz
out
ja
or
stos
cmp
pop
std
cld
out
sbb
mov
mov
pop
ja
mov
sub
dec
incl
ss
xorb
fimuls
pop
lret
test
push
jp
mov
xchg
mov
mov
mov
jg
cmp
sbb
std
lods
fs
loop
mov
mov
mov
jnp
bound
inc
sbb
lcall
and
insl
mov
dec
inc
ljmp
sbb
repz
popw
movaps
inc
adc
fldcw
mov
pushl
cld
rorl
js
cmp
lret
aaa
adc
pop
lock
cmpsb
dec
or
mov
in
adcl
dec
xchg
push
pop
and
rorl
push
cld
sub
add
test
sub
inc
cld
ljmp
pop
inc
lods
movb
incb
stos
loop
insl
dec
lahf
dec
sahf
ret
cmp
dec
dec
je
pop
ds
and
jle
lock
jmp
jmp
and
xchg
push
mov
js
adc
push
rcrb
lahf
mov
cmp
cli
jge
pop
jge
push
je
jne
dec
lcall
dec
pop
pushl
mov
pop
jb
sub
sub
aas
lcall
push
fcomi
bound
lods
lcall
xor
or
insl
iret
out
jle
sahf
cwtl
sub
loope
and
xchg
fistl
icebp
mov
loop
pop
rclb
shlb
pushl
mov
roll
aas
fdivrs
pop
mov
fisttps
mov
arpl
sbb
in
test
mov
enter
bnd
mov
and
cmp
push
cli
inc
sbb
pushf
xchg
jmp
mov
cld
les
pop
aaa
xchg
subb
mov
jnp
dec
sub
ljmp
js
push
push
ficoms
and
lret
sahf
cmp
stos
in
pop
jb
ljmp
cmpsb
inc
mov
push
jno
push
or
push
mov
add
cmc
add
jmp
call
fsubp
stc
stos
mov
adc
out
imul
add
adc
call
sub
add
ss
cwtl
mov
mov
or
fisubrs
push
incl
pop
iret
push
add
push
mov
xor
add
inc
mov
push
xor
xchg
scas
rol
int
mov
push
mov
push
in
xchg
popf
mov
decl
pop
xor
fldt
add
outsl
outsb
in
sbb
mov
nop
out
cli
ljmp
mov
jg
xor
imul
inc
pop
xor
out
iret
xor
dec
ljmp
je
dec
cld
dec
rdmsr
pop
sti
mov
lcall
dec
jecxz
mov
pop
sub
mov
jle
mov
push
je
pop
aad
fsts
pop
add
sbb
ljmp
clc
sti
sub
mov
sub
sbb
call
adcb
mov
negl
inc
mov
pop
cmpb
sbb
inc
test
mov
mov
add
clc
test
repz
pusha
cmpxchg
addr16
lock
push
sub
shlb
xchg
and
jmp
jmp
dec
add
jmp
push
pop
jp
stos
rcll
fcomip
pushl
call
cwtl
cld
cmc
jbe
pop
xchg
push
fistl
call
or
sbb
pop
push
gs
or
popw
jmp
xor
and
adc
in
mov
out
xchg
jmp
fildll
and
mov
shrb
out
cmp
negl
decb
inc
pop
int3
out
cmpsl
and
pop
std
pushl
mov
cmp
fldenv
pop
stc
leave
sbb
cmp
cli
cltd
cmp
testb
mov
out
mov
repnz
and
jb
stos
sub
mov
iret
lds
push
xor
jg
adc
mov
cmp
dec
mov
pop
mov
lcall
call
mov
push
xchg
js
mov
mov
cld
sub
and
pushf
jnp
xchg
frstor
shll
and
ljmp
lcall
and
add
mov
push
arpl
clc
decl
scas
xorb
test
loopne
scas
dec
adc
nop
clc
fistpll
andb
or
aam
lcall
icebp
imul
cli
jecxz
bound
jle
xchg
test
vmovshdup
incl
adc
jmp
add
jne
and
adc
cld
jmp
adc
pusha
and
arpl
jg
insb
or
jb
mulb
adc
mov
or
or
lcall
or
mov
xchg
mov
jmp
cmp
scas
iret
push
mov
jg
and
icebp
out
lock
xchg
stos
aam
fwait
add
xchg
xor
rcrb
cmpsb
dec
cltd
arpl
sti
decl
mov
dec
mov
jge
mov
adc
cwtl
cmp
xor
jl
xchg
mov
ret
cmp
retw
sbb
sti
gs
add
jle
xor
inc
push
pop
fcos
incl
sahf
add
popf
push
repz
pop
mov
lcall
mov
inc
sbb
outsl
int
es
lds
lods
stc
jbe
cmpb
enter
incl
ss
cs
adc
push
outsl
idivb
xchg
cld
out
or
dec
int
pushw
lret
enter
movsl
cmp
mov
fdivrp
data16
mov
mov
fisttps
dec
push
dec
popa
es
jge
lods
inc
mov
ljmp
jg
mov
in
outsb
mov
xchg
test
pop
stos
adc
dec
pop
sar
lcall
xor
aas
test
jae
push
daa
and
sub
jno
inc
inc
xchg
jmp
jle
insb
decb
das
shlb
ret
mov
ror
cmc
test
icebp
in
rcl
pop
ret
in
notb
fcomip
jmp
push
and
push
mov
fcomps
fwait
call
pop
jle
add
inc
sbb
sbb
xchg
mov
push
add
mov
jg
cmp
outsl
aad
out
enter
jecxz
sbb
mov
mov
incl
cmp
pusha
add
and
aam
xor
sahf
adc
sbb
xchg
leave
inc
mov
jo
into
jbe
adc
pop
add
cs
xchg
mov
lods
add
loope
add
andb
xor
adc
decl
adc
dec
mov
into
outsb
and
jns
dec
pop
adc
jecxz
rolb
insb
aad
decl
add
and
int
dec
es
mov
mov
adc
fcomp
push
mov
jg
fisttps
int
xlat
sbb
lcall
push
or
insb
stos
popa
mov
loope
es
xchg
subb
mov
and
daa
xor
test
add
mov
or
out
scas
pop
adc
mov
imul
std
std
xor
mov
rol
sbb
cld
jno
cli
mov
rclb
inc
sbb
mov
pop
movsb
cmpb
xchg
dec
les
gs
cmp
inc
int3
in
and
mov
pop
mov
cli
nop
pop
shrb
test
mov
sub
ss
roll
mov
int3
mov
lock
lcall
aad
jg
lods
cltd
fistps
sub
xor
test
add
push
push
sar
decl
cs
or
mov
bound
xchg
ljmp
dec
adc
fsubl
xchg
sub
stos
sbb
jle
xor
sbbl
inc
mov
or
pop
testl
popf
lock
imul
dec
incl
mov
xor
leave
mov
cmp
add
jp
and
xchg
aas
cmp
jmp
xchg
mov
clc
dec
cmp
icebp
ja
cmp
rolb
addr16
lock
mov
dec
jp
jg
outsb
cli
dec
pop
fs
cld
clc
fadds
clc
pushl
mov
jp
icebp
mov
stos
pusha
cmp
cld
pusha
xchg
imul
jl
mov
jg
call
jae
mov
inc
inc
test
data16
stc
das
dec
lea
jl
iret
cli
das
sbb
lcall
and
aad
adc
xor
or
repnz
sbb
nop
popf
add
inc
jno
dec
lock
call
test
int3
adc
js
lock
xor
les
out
cmp
mov
inc
cwtl
out
cli
enter
xchg
mov
stos
jl
icebp
sbb
cmp
adc
jl
pop
cmp
int
int
cmpsl
lods
rcll
in
ljmp
pop
lods
inc
movsb
jp
pop
loope
ljmp
daa
sub
jg
inc
std
xchg
mov
enter
xor
popa
cmp
decl
mov
sub
fwait
aaa
addr16
out
inc
movsb
mov
dec
in
dec
fs
xor
cmpsb
xchg
ja
add
xchg
mov
mov
mov
pop
icebp
hlt
pusha
call
or
fisubrs
addl
jmp
lcall
je
test
pusha
mov
fidivs
sub
popa
push
daa
xchg
lods
sarb
and
sub
jnp
inc
xor
xlat
dec
into
hlt
ds
movsl
ljmp
push
dec
shll
gs
test
and
mov
jns
mov
shr
aam
xor
push
adcb
call
pushl
aas
rorb
out
sbb
and
sbb
gs
in
es
outsb
push
outsb
aam
mov
imul
ds
mov
cmp
xchg
je
mov
xchg
xor
pop
loop
mov
adc
jmp
pop
scas
mov
movsb
cmp
inc
jno,pt
xchg
push
cmp
inc
mov
in
xor
pop
mov
sub
sbb
xor
pop
mov
fldl
xchg
or
ret
push
mov
lods
or
popa
xchg
or
pushl
data16
jbe
movsb
fildl
inc
push
lock
fnstsw
jb
into
ss
lds
repz
test
shlb
aas
scas
loop
pop
sub
stos
inc
jle
push
popf
jl
ja
loop
loop
rorb
fcmovnb
push
jo
sbb
decl
add
sahf
lock
loope
inc
fnstcw
push
pop
daa
mov
jmp
inc
test
pop
pushl
orb
sbb
mov
test
xchg
pop
lock
jnp
jo
cld
xchg
dec
sbb
pop
mov
cltd
loopne
cmp
or
or
mov
sbb
or
sbb
inc
cli
flds
bound
add
aam
xchg
into
cmpsb
jg
or
mov
clc
pop
dec
lcall
fmuls
outsb
lods
jb
aaa
fcmovnbe
jmp
xor
andl
sub
mov
andb
hlt
scas
xor
fs
testb
movsb
inc
push
inc
adc
lret
orl
ffreep
and
xor
aas
sub
lds
test
sub
test
push
fucomi
gs
ljmp
int3
aas
xchg
ljmp
daa
rcr
jl
insb
or
or
cli
mov
push
push
sub
stos
in
cmpsl
pop
mov
jl
cs
fdivr
jno
mov
out
cmpsl
insl
mov
sbb
je
and
xchg
or
mov
ss
arpl
call
mov
sub
jecxz
leave
sbb
pop
and
incl
xor
dec
push
popa
mov
jp
mov
push
xchg
ljmp
loop
push
out
lock
fs
push
lret
xchg
mov
mov
fisubrs
frstor
sbb
rcl
ljmp
push
pop
inc
pop
decl
xor
or
push
adc
jecxz
mov
mov
stos
jle
mov
ret
cmp
pop
fisttps
lods
fldt
mov
incl
ljmp
je
je,pt
inc
scas
call
xor
int
mov
push
sub
ds
lods
loop
cmc
stos
insb
jp
xchg
je
outsl
orb
pop
in
jle
lods
bound
jg
inc
popf
arpl
pop
cs
push
push
in
mov
shlb
mov
inc
sbb
mov
outsb
dec
mov
pushl
je
inc
push
dec
mov
xor
and
fdivs
in
jl
mov
test
jns
dec
daa
aas
idiv
loop
xchg
jecxz
mov
stc
add
sahf
gs
mov
or
setg
mov
sarl
lret
pushl
push
sbb
mov
fs
inc
mov
gs
dec
jbe
arpl
das
insl
lcall
push
xor
ljmp
push
mov
sahf
mov
cmpsl
jo
mov
push
ss
sbbl
jg,pt
sahf
loopne
loopne
xor
data16
cwtl
rol
pushl
jb
jbe
addr16
push
mov
not
push
jne,pt
call
repz
jbe
mov
pop
cmp
js
mov
add
cmpsb
sbb
and
lcall
xchg
dec
test
jmp
data16
mov
out
lcall
ljmp
data16
in
xchg
add
inc
mov
lds
loop
mov
sub
scas
lcall
dec
ds
outsb
inc
rorl
jmp
ljmp
sub
fistps
int
sub
arpl
jb
dec
dec
stc
and
xchg
es
fists
mov
sub
sub
rclb
aas
test
flds
and
imul
xchg
mov
aam
nop
sar
lcall
xor
sub
lock
outsl
sbb
push
jns
jle
push
pushf
aam
mov
or
cmp
cmpsb
les
jl
jb
jne
dec
sbb
popa
call
aam
adc
pop
mov
xchg
faddl
lea
idiv
insb
aaa
movb
and
ljmp
sti
int
rcrb
push
shlb
adc
xchg
inc
push
loop
pop
sub
jecxz
add
xchg
inc
fisubl
cmp
mov
or
mov
insl
jge
dec
xor
push
addr16
sub
lcall
mov
stos
jp
dec
icebp
ljmp
xchg
movsl
jbe
stos
loop
xchg
inc
adc
cld
and
dec
lods
jl
and
pop
lods
les
dec
movsb
add
add
stc
jmp
lret
cmp
pusha
arpl
fildl
add
pop
mov
test
mov
shll
mov
xchg
imul
cltd
fcmovnbe
or
cmc
in
pop
inc
mov
mov
jbe
decl
test
in
lock
mov
in
and
cmp
jnp
or
leave
in
mov
adc
cmp
nop
mov
jne
ljmp
ljmp
mov
dec
mov
mov
scas
xchg
sti
mov
out
mov
cmpsb
mov
cltd
mov
bnd
insb
add
jmp
xacquire
popf
cmp
mov
nop
xor
jg
jle
hlt
jecxz
pop
mov
sbb
movsl
aad
jno
dec
adc
mov
sbb
ljmp
mov
mov
jmp
rorl
xchg
addr16
ljmp
in
xlat
lcall
or
int3
cmp
call
cld
jae
mov
sub
in
fisttpll
insb
dec
fistps
xchg
cmp
mov
push
xor
inc
jmp
dec
dec
ljmp
dec
pop
adc
ljmp
sub
arpl
loope
sub
pusha
mov
dec
lcall
call
std
data16
xor
add
jg
rolb
incb
into
cli
xchg
pushl
xor
arpl
xchg
dec
sub
add
push
js
and
pop
pop
rolb
jo
xorb
scas
in
ud0
incl
nop
mov
push
repnz
sti
shrl
jmp
arpl
ss
jno
filds
test
pop
cmp
adc
mov
scas
add
add
scas
jbe
movsb
scas
jecxz
add
jmp
mov
popf
rcrb
inc
push
xor
fbstp
adc
pop
mov
ljmp
mov
mov
xchg
insl
ficompl
add
ror
pushf
and
inc
mov
push
rep
lahf
and
sbbl
test
mov
addr16
cwtl
mov
je
mov
pop
fisttps
pop
in
data16
or
mov
push
hlt
cmc
jns
hlt
adc
inc
jg
fs
or
dec
pop
js
enter
push
push
lcall
pop
nop
mov
inc
jnp
inc
std
cmp
sbb
movl
in
sub
into
inc
dec
aas
lahf
sub
jns
hlt
mov
push
sti
ja
jmp
mull
ja
sar
push
imul
mov
push
jmp
and
adc
add
cmpsb
pop
jno
pusha
call
xor
add
popf
xchg
jp
arpl
jl
in
pop
call
outsb
cli
push
pushl
test
imul
mov
add
arpl
test
push
imulb
shlb
push
cld
ljmp
cmpsl
sti
icebp
fdivr
push
mov
and
and
mov
in
xor
idiv
lcall
inc
lcall
icebp
push
and
in
adc
faddp
aaa
out
clc
decl
pop
dec
add
push
mov
sub
aas
sar
add
mov
outsl
or
out
clc
dec
xchg
nop
mov
es
punpcklbw
adc
jbe
stos
jae
mov
pushl
std
pushl
lea
xor
xchg
jle
bswap
add
rcrl
aaa
fwait
add
inc
test
xor
cmpsb
inc
push
inc
in
iret
pop
rorb
nop
sub
out
sbb
jne
decl
inc
jo
shll
decl
dec
xchg
retw
jmp
in
add
in
mov
std
jg
fstps
mov
cmp
pop
ljmp
loop
lds
iret
sub
jg
add
in
shlb
sbb
call
ljmp
mov
pop
xlat
jg
in
adc
push
imul
push
jp
dec
push
mov
loopne
aam
shl
lret
xchg
or
add
push
ret
das
int3
add
push
call
jb
call
mov
sahf
sub
pop
cmp
push
mov
icebp
inc
adc
push
pushl
push
pop
inc
pop
jle
std
shr
adc
and
cmp
mov
loop
incl
fimuls
mov
jo
loope
es
jae
rcl
ret
mov
ljmp
push
arpl
or
lahf
mov
cmp
add
or
lods
sar
dec
outsl
out
mov
mov
inc
stos
or
cmpl
mov
adc
cld
jg
sbb
bound
jmp
dec
pushf
adc
jno
addr16
test
cmp
dec
xor
jnp
cltd
pop
sub
adc
inc
mov
dec
sub
pushf
lods
mov
bound
out
pop
rcrl
or
xchg
inc
std
outsl
mov
or
ja
loopne
aam
outsb
popa
pop
push
mov
add
xchg
lods
ss
das
sar
rolb
lea
popf
repz
roll
dec
fcomi
call
test
fiadds
outsl
into
push
jb
push
push
insl
ss
mov
lcall
or
fs
mov
insb
imul
cmpsb
iret
imul
cmp
xor
inc
mov
fsin
rcll
push
cmp
clc
jg
cmp
fwait
pusha
fwait
push
stos
pop
adc
repz
adc
cmp
adc
mov
clc
jecxz
in
dec
into
pop
sbb
mov
cli
test
inc
jmp
ret
xchg
jnp
jl
lods
insl
ds
dec
dec
gs
push
fwait
jp
mov
ljmp
int
and
mov
shrl
and
jp
idiv
jg
scas
push
cmp
and
mov
mov
push
lcall
clc
das
shr
mov
jmp
mov
aas
std
fs
jecxz
stos
and
sub
adc
xor
loop
mov
mov
dec
inc
aaa
mov
sub
shrb
pop
dec
dec
inc
dec
fdivl
jae
lods
scas
push
mov
rorl
sti
test
and
test
aas
popf
adc
mov
repnz
and
xchg
sbb
inc
inc
dec
fsubrs
xor
cmp
stos
jge
mov
and
push
in
sbb
push
cld
push
scas
cwtl
enter
mov
push
fdivs
xchg
sbb
add
cmp
mov
pinsrw
jno
mov
and
lcall
hlt
scas
arpl
add
mov
push
ret
inc
or
xchg
pop
fstl
adc
xor
xor
insl
lahf
sbb
fsubrl
lret
fcoms
adc
pop
ja
decl
pop
outsb
dec
mov
add
mov
scas
sbb
pushl
shlb
inc
push
mov
mov
push
pusha
nop
loopne
sarl
cs
loop
xorl
jmp
fisubl
push
mov
out
push
cli
sbb
and
ljmp
or
inc
cmp
sti
xchg
jl
dec
out
fldcw
mov
sub
divb
push
ljmp
or
fmull
push
outsb
pushf
repnz
cwtl
mov
xor
jle
ficompl
fsubrs
push
test
int
mov
fistpl
adc
xchg
adc
jge
jmp
xchg
mov
sti
mov
xacquire
and
call
pushf
popf
stos
loop
ficoms
cmpsl
incl
jae
out
call
loopne
rclb
addr16
jecxz
data16
js
lock
lcall
incl
sub
loope
aas
ja
lock
pushl
jle
sub
inc
fadd
xchg
jbe
lock
pop
subl
testl
pop
and
add
lds
xor
cmp
pop
rcl
xor
xchg
xchg
and
ljmp
mov
das
into
or
pop
jbe
mov
lods
sub
cmp
ret
insb
outsb
mov
fdivr
outsl
outsb
imul
push
and
test
decl
cmove
pushw
and
add
ja
leave
fistl
pop
mov
call
push
mov
fs
cmpl
mov
pop
bound
mov
push
jae
jmp
cli
add
adc
mov
pusha
movsb
mov
jmp
jns
frstor
xchg
or
inc
addl
push
sar
sub
and
mov
cmp
push
sub
mov
add
cmp
pushl
xor
xlat
ret
call
and
and
jae
adc
popf
push
xchg
movsl
pusha
jne
call
mov
sbb
popa
mov
loopne
lret
mov
sub
ja
popa
jmp
fwait
insb
clc
call
cmp
sbb
and
ljmp
scas
and
mov
cltd
ljmp
out
stos
pop
pushf
outsb
inc
xor
jg
nop
sbb
sbb
xchg
mov
fwait
call
adc
imulb
or
xchg
cmpsb
mov
iret
ret
repz
rcl
mov
mov
data16
push
ja
push
out
lret
mov
jb
rcrl
call
nop
cmp
jp
roll
adc
cld
les
test
push
in
pop
ljmp
aas
sub
inc
or
mov
cmp
mov
inc
sub
das
mov
inc
std
cmc
inc
int3
mov
mov
inc
call
adc
ficompl
jle
mov
ja
mov
cmp
xor
lds
and
call
sbb
lods
and
sub
pushf
ljmp
mov
sbb
decl
xchg
or
hlt
xorl
mull
mov
gs
lds
in
jae
lcall
outsb
inc
inc
ljmp
mov
xor
mov
jg
mov
pushf
lahf
je
aaa
add
out
cld
and
stos
cld
adc
and
loope
xchg
push
decl
inc
and
mov
add
fwait
ret
dec
mov
or
xchg
sbb
inc
jb
mov
fwait
inc
mov
jae
nop
fcoml
das
cli
jge
mov
gs
push
push
aas
gs
rclb
fimull
int
ss
cmp
stos
xlat
icebp
inc
pop
xor
jl
into
inc
lcall
ljmp
aas
adc
dec
sub
ret
movsl
pop
jl
int
repz
jg
adc
xlat
das
mov
les
mov
call
sbb
cs
add
xor
bound
aam
mov
mov
rclb
enter
out
push
stc
cmp
xor
cli
aam
mov
xor
decl
insb
in
inc
pop
std
int
sar
stos
and
add
add
push
push
mov
push
decl
insl
call
and
rdtsc
dec
ljmp
and
and
fs
sbb
cs
jne
inc
adc
cmp
std
xchg
or
adc
dec
cmp
ja
das
or
mov
in
mov
sub
lahf
stc
pop
les
filds
add
orb
in
lsl
or
or
jo
push
rclb
xorl
pop
or
inc
add
add
loope
and
adc
push
and
inc
cmpsb
test
fldcw
adc
push
pop
xor
shlb
sahf
jbe
incl
nop
dec
leave
repz
popa
nop
dec
dec
loopne
inc
or
lds
leave
jb
add
cld
ljmp
xor
and
data16
add
js
inc
ficompl
insb
cs
push
and
add
aas
sub
movl
nop
sbb
cld
ljmp
lret
and
or
shll
idiv
inc
jg
sub
cmp
jl
pop
ret
adc
or
pop
jle
adc
add
pushf
inc
call
sub
add
fdivrs
call
rclb
pop
fsubr
dec
push
adc
int
mov
push
push
sarl
lea
mov
aaa
insb
iret
lret
fiadds
or
aas
or
mov
sbb
pop
pop
fildll
dec
outsl
outsl
jg
jge
jg
or
mov
pop
or
adc
or
pop
add
cs
pop
outsb
mov
sbb
cmpsb
lret
testb
decl
neg
fildll
inc
cmpl
icebp
jl
inc
adc
pop
sbb
insl
fists
jo
scas
mov
adc
or
jmp
lcall
and
arpl
ja
neg
fisttps
mov
or
mov
or
xchg
xor
outsl
ss
cmp
dec
out
and
xchg
pushl
dec
je
sub
dec
adc
dec
je
sbb
aaa
ja
and
sbb
decl
adc
call
jmp
addr16
mov
push
insb
or
add
adc
int3
data16
jnp
cmovnp
xor
or
lcall
addb
jne
cwtl
pop
mov
mov
push
mov
sub
shll
xorl
xor
mov
ljmp
dec
inc
das
add
and
adc
mov
sbb
and
pushl
jl
das
dec
shlb
or
or
push
push
lods
sbb
and
sbb
or
repnz
fiaddl
mov
call
and
cmp
je
push
lea
and
mov
sti
push
subb
fcmovb
decl
mov
push
mov
lods
push
xchg
dec
mov
mov
incl
add
hlt
stos
sub
push
mov
mov
mov
jg
clc
push
sub
mov
xchg
mov
mov
or
or
decl
popa
adc
pop
leave
jg
frstor
arpl
dec
push
xor
shll
shlb
and
jmp
ret
ljmp
cmp
daa
mov
jecxz
mov
push
push
xchg
push
pop
pop
icebp
jg
or
mov
insl
mov
idiv
call
pop
cmp
add
dec
in
mov
or
adc
decl
test
insl
push
mov
push
adc
cmp
loope
int3
insb
adc
ret
jle
pop
push
push
pop
mov
adc
mov
lea
out
cltd
adc
imul
or
or
inc
sub
inc
push
and
sub
popf
mov
push
insl
mov
pop
adc
sub
add
jbe
cld
incl
popf
inc
push
in
jl
lock
in
push
stos
scas
dec
push
dec
out
fstpt
fcmovne
in
inc
add
cmp
mov
in
idivb
lea
lea
or
add
decb
shl
add
inc
push
data16
outsl
pop
mov
jle
or
adc
hlt
je
popf
sub
xchg
mov
mov
in
movsl
fisttps
sti
sbb
add
cmp
jb
sub
mov
cld
outsl
mov
mov
imul
add
shrb
jg
std
jg
fisttpll
sbb
inc
add
cmp
jb
push
lea
fstps
ljmp
add
out
or
jbe
mov
int
sub
loope
ret
clc
jg
test
inc
push
add
scas
popf
mov
decl
adc
pop
jb
sub
push
pop
pop
jb
mov
decl
push
sub
fnstcw
push
push
or
test
fidivrl
push
adc
call
lret
sbb
mov
adc
pop
les
jp
sbb
repz
xorl
jmp
fnstcw
jl
push
rcrb
aam
mov
or
mov
ja
mov
das
jbe
lea
pop
imul
push
push
or
mov
out
outsl
adc
xor
sbb
jb
mov
pop
aad
ljmp
sbb
cmpsl
sti
je
sbb
push
xor
ret
push
aas
int3
pop
addr16
mov
pop
cmp
loopne
add
sbb
adc
push
push
sbb
mov
test
push
push
xor
sub
lcall
sub
xor
into
pop
xchg
enter
test
out
mov
data16
inc
push
gs
push
mov
sbb
fdivl
lock
aam
rclb
cli
ljmp
push
aaa
mov
insl
arpl
xor
jg
out
ret
insb
adc
push
cwtl
dec
data16
or
shll
mov
push
lods
push
jmp
insb
sarb
testl
ds
fwait
lods
sti
mov
out
cli
popa
mov
and
mov
gs
adcl
rolb
mov
push
nop
leave
cmp
pusha
ja
cli
cmp
ret
adc
icebp
xchg
divl
dec
or
lcall
std
ljmp
sbb
shlb
push
push
push
push
faddl
scas
fs
inc
push
push
push
ret
sbb
push
neg
decb
loopne
sbb
fsubrs
pop
xchg
gs
dec
xchg
add
loopne
or
adc
sbb
jg
sub
scas
fistl
jmp
adc
idivb
je,pt
movb
push
sti
inc
ret
setnp
sbb
and
ret
push
add
pop
and
add
scas
mov
mov
adc
in
lods
xchg
xchg
and
call
and
push
cmp
or
sub
icebp
adc
or
mov
bound
jmp
push
mov
add
or
ljmp
pop
cld
pushf
lock
mov
mov
sub
add
cltd
xor
add
incl
lods
sahf
movsl
dec
push
sub
shr
mov
mov
ss
ljmp
pop
add
jnp
mov
test
cmpl
push
lea
out
push
adc
add
push
push
pop
in
mov
pop
fisttpll
cmp
scas
lds
std
dec
pop
and
jmp
pop
aaa
fisubrl
cmp
push
pop
cltd
shl
clc
sbb
and
or
lahf
cmp
call
movsl
jle,pn
ljmp
push
mov
cmp
out
xlat
mov
pop
pop
pop
jne
mov
sti
incl
push
fstpl
mov
fisubs
push
xor
mov
nop
or
xchg
mov
sbb
aad
decl
push
mov
or
or
mov
xchg
loopne
clc
movsl
and
popa
jmp
jecxz
mov
mov
cmp
jp
pop
dec
jp
mov
movsb
cld
and
test
mov
add
mov
mov
insb
cld
jbe
imul
rcll
pop
and
dec
std
hlt
lea
aaa
mov
ss
push
inc
xchg
dec
pop
push
dec
cld
outsl
push
jb
and
mov
lea
sub
adc
mov
lahf
call
fbld
jmp
xchg
xor
gs
cmp
adc
cmpl
mov
push
sbb
jg
sbb
xchg
cltd
or
outsl
inc
imul
ds
adc
and
inc
es
dec
adc
decl
dec
xchg
shl
lock
and
fsubrs
loope
push
dec
sub
xchg
sbb
decl
xchg
mov
pop
inc
out
es
dec
enter
sahf
int3
mov
outsl
push
jne
push
repnz
insl
imul
push
les
xor
or
int3
adc
jmp
sarl
push
sarb
push
sbb
dec
loop
icebp
sbb
imul
mov
sub
inc
pop
jle
push
pop
push
clc
mov
ljmp
stc
xor
cmp
ret
ja
cmp
push
xor
lcall
sbb
lock
push
push
push
jbe
daa
loope
xor
fsubrs
pop
jae
popf
scas
or
js
aaa
punpckhbw
push
fistpl
xchg
sbb
ljmp
add
insl
add
lods
mov
aaa
jge
mov
cmp
sbb
xor
cmp
pop
xchg
lcall
mov
icebp
fdivrs
cmpb
or
inc
mov
clc
or
cmp
fbld
jmp
pop
aas
clc
jg
mov
sub
pop
push
repz
rorb
popf
cs
adc
cmp
mov
jmp
push
out
inc
mov
sti
fwait
inc
repz
jl
lea
adc
sarb
aaa
out
cmp
add
xchg
pop
fbstp
cmp
jl
movsl
decl
cli
sbb
nop
add
cmp
mov
jb
adc
imul
push
fadds
jle
imul
mov
cmp
pop
pop
inc
dec
lcall
add
mov
neg
ljmp
stos
and
cmp
mov
std
add
pop
clc
ja
pop
jp
into
push
adc
in
inc
or
or
add
mov
cmp
dec
jge
sub
mov
lcall
call
sti
jns
loope
jbe
adc
test
ja
push
pop
lock
cmpb
pop
cmp
incl
sbb
pushf
fdivrl
pusha
aas
cmp
add
dec
std
or
inc
add
adc
sub
sub
push
push
push
push
adc
and
pop
mov
lods
incl
loope
stos
insl
jne
sub
dec
jbe
int
pop
cmp
adc
rol
xor
add
mov
testl
lock
fdivrp
mov
test
shrl
insl
fwait
adc
add
push
int3
push
add
or
xor
mov
out
dec
stc
mov
in
rol
or
dec
cmpsl
mov
adc
pop
cmp
aas
pop
loopne
hlt
rcrb
js
imul
cld
cmp
loope
nop
aas
inc
jg
mov
cli
popf
add
mov
lahf
pmuludq
rcrb
mov
repnz
jle
mov
ja
shl
cmp
xor
jmp
call
mov
popf
jne
xor
test
jmp
sti
and
icebp
xchg
adc
cmpsb
pop
sbbl
lcall
subl
xchg
jb
scas
or
sbb
pop
fs
mov
sub
lock
rcpps
lcall
cmp
sub
sub
lea
pop
cld
cld
fnstcw
inc
repnz
sub
adc
jbe
call
mov
inc
push
inc
push
fnstcw
pop
pop
int3
cld
xor
fcoml
push
call
xchg
adcl
mov
xor
out
jp
sub
dec
cmp
std
pop
fdivrs
mov
sub
cmp
ja
inc
cmp
std
fcomp
adc
dec
jmp
xchg
sub
mov
inc
data16
rorl
xchg
mov
adc
dec
add
ret
cmpb
incl
js
js
or
fdivrs
adc
pop
nop
xor
mov
es
outsl
cli
ljmp
cmpsb
arpl
add
movsl
xlat
adc
dec
call
mov
movl
pushl
out
inc
dec
sbb
roll
pushl
ret
fucomi
pop
mov
adc
sub
dec
fbstp
mov
mov
ja
pop
dec
fdivr
jmp
inc
sbb
sar
call
adc
incl
sub
fildl
adc
inc
dec
cmp
mov
jne
lea
test
jns
jae
sub
push
lea
mov
jle
outsl
movsb
or
add
xor
loop
push
fistpll
inc
sbb
in
cwtl
mov
nop
add
or
ret
push
sar
lcall
xchg
jge
adcb
insl
mov
mov
sub
ds
inc
jb
push
adc
pushl
jns
or
popf
pop
cmp
sbb
sub
ret
pusha
pop
sbb
add
xchg
cmpsl
incl
xchg
filds
arpl
icebp
xorl
mov
jle
movb
pushl
cmp
xchg
inc
jmp
mov
lcall
sbb
std
push
mov
inc
push
or
add
add
inc
inc
lock
je
mov
jl
test
clc
decl
mov
mov
ljmp
hlt
nop
mov
sti
enter
sbb
push
lcall
inc
fisttpl
imul
add
add
xor
rcrb
pusha
and
in
pushl
int
push
jl
mov
inc
test
adc
decl
lock
rolb
jle
adc
adc
stc
push
mov
ljmp
cs
pop
movsb
adc
call
sub
or
push
sbb
fldcw
scas
es
sbb
aaa
adc
jmp
xchg
int3
pop
push
shl
push
sub
icebp
lea
or
repz
and
fwait
or
jmp
add
add
mov
mov
out
mov
roll
adc
arpl
loope
out
jecxz
add
sbbb
or
cmp
scas
sub
mov
shlb
hlt
clc
iret
jle
push
add
subl
fmuls
ljmp
lea
lods
mov
pop
lods
sbb
fimuls
or
dec
loope
clc
add
fcomip
incl
repz
clc
imul
mov
rcrb
cmp
or
and
pop
push
fisubrl
mov
incl
xorb
je
mov
rcll
adc
dec
add
mov
hlt
add
xlat
aam
fcmovu
lock
sub
sub
and
es
pusha
dec
mov
popf
xor
cmc
push
push
fs
dec
lock
sbb
lcall
dec
mov
jnp
cmpsb
mov
rolb
mov
xor
neg
cli
into
inc
jle
mov
jle
push
call
cld
jl
std
push
stos
mov
les
ficomps
enter
push
dec
vmwrite
cmp
push
jle
inc
xlat
mov
inc
icebp
xorl
add
inc
mov
subl
call
push
xchg
mov
mov
je
cmp
push
pop
xor
rolb
or
repz
adc
and
lods
pop
inc
sub
in
popa
push
pop
lods
into
inc
decb
or
mov
or
decl
loope
jge
insb
into
lahf
loop
mov
in
je
rclb
pop
add
call
sbb
xor
sub
xchg
sub
adcl
jns
mov
mov
shl
and
clc
incl
pop
movsl
pop
popa
movb
lods
and
ljmp
inc
aam
mov
faddl
fmull
push
jne
arpl
call
aam
fcomip
call
das
push
mov
adc
decb
call
sti
movl
mov
stos
inc
pop
mov
mov
add
jbe
or
or
pop
push
mov
xchg
push
adc
incl
aad
adc
fcomi
mov
stos
enter
cmp
inc
adc
push
adc
and
adc
mov
insl
adc
popa
push
movsb
add
clc
lcall
sbb
lret
push
add
or
scas
pop
mov
xor
jmp
add
add
inc
jo
adc
in
mov
roll
mov
or
xchg
dec
ja
clc
jg
ret
ja
jmp
push
iret
dec
and
decl
cmpsb
xor
or
in
lds
jmp
lea
cmp
inc
sbb
int3
push
mov
add
or
pop
fisttpll
movsl
inc
mov
and
sahf
add
add
inc
mov
lcall
je
xchg
fwait
sbb
cli
push
dec
add
and
sbb
adc
pushl
cmc
fcmovbe
add
dec
xor
nopl
mov
pop
cmp
popa
movsl
cs
xor
shrb
dec
cmp
cmp
push
push
sbb
loope
cmp
inc
xchg
mov
mov
ljmp
push
mov
ss
or
fbld
pop
aad
push
push
fisubl
hlt
call
pop
adc
ljmp
call
ret
imul
push
test
and
push
push
out
jae
push
leave
pop
popa
sar
sar
push
call
sbb
shlb
mov
pop
jl
test
inc
mov
xchg
xor
lea
sahf
je
fistpll
pop
call
pop
sub
cmp
push
push
or
mov
mov
lcall
mov
iret
mov
stc
ret
jecxz
or
mov
call
sarb
mov
xor
je
cli
jg
jl
cmc
add
mov
stc
mov
pop
mov
sub
loop
nop
shl
cmp
out
je
mov
cwtl
into
push
lea
inc
mov
shl
out
xor
push
mov
sar
decl
or
pop
push
mov
mov
hlt
push
scas
ret
stos
sahf
mov
decl
cltd
sbb
sub
aas
xchg
cmp
mov
mov
cmpsb
aaa
stc
cmp
mov
adc
push
incl
push
fdivs
and
jle
xor
push
je
xchg
iret
sar
shlb
inc
cltd
inc
mov
mov
push
or
xor
adc
or
cmc
ljmp
and
adc
js
movsl
add
push
mov
jmp
inc
push
and
cmc
inc
push
fnstenv
and
xor
std
ds
push
ss
incl
cld
mov
lock
sbb
jnp
dec
or
decl
pop
hlt
hlt
inc
sahf
cltd
out
clc
sbb
mov
insl
push
push
fyl2xp1
pop
mov
imul
cmp
or
cs
loop
loope
mov
cld
mov
loope
and
pop
jne
pop
push
or
inc
pop
cmp
mov
stos
sub
mov
mov
jg
dec
cmp
add
lods
jl
add
adc
mov
loopne,pt
decl
cmp
pop
sbb
pop
add
inc
xchg
jo
int3
sbb
xchg
pop
or
xchg
sub
cmpsb
push
lock
jp
and
xchg
pop
adc
mov
mov
mov
movsb
mov
popa
inc
sahf
xor
or
call
shrl
in
sub
pop
mov
mov
push
pop
mov
js
ret
mov
mov
movsw
jnp
movsl
imul
cli
shrb
pushl
cld
jle
add
decl
decb
or
and
mov
repnz
push
pop
jo
mov
mov
inc
cmpsl
push
aad
sbb
in
inc
rcll
sbb
incl
je
mov
push
push
inc
add
clc
mov
add
adc
addr16
aam
mov
mov
adc
jg
sub
mov
loop
inc
ret
pop
fcoms
and
rcr
shlb
das
mov
ljmp
mov
les
jne
in
fcompl
jnp
les
jae
ljmp
movsb
test
adc
push
xchg
sub
xorb
dec
jo
jbe
dec
jg
cmp
pusha
xor
or
test
push
andb
add
test
test
mov
pusha
xchg
mov
scas
addb
xor
jo
stos
fbld
pop
nop
test
inc
lcall
cld
mov
push
jge
add
test
jmp
int3
pushl
dec
and
add
cmp
mov
inc
mov
and
test
fldcw
stos
mov
jns
inc
or
popa
nop
mov
jo
test
add
mov
pop
pop
add
jge
add
xor
or
or
sti
or
jle
mov
or
outsl
mov
or
aaa
push
aaa
fidivrs
pop
ljmp
jle
mov
xor
mulb
jno
dec
cltd
jae
jb
imul
mov
ret
or
out
sbb
add
push
imul
ret
jmp
ret
call
in
movsl
clc
pop
adc
xor
jmp
push
pop
cmp
mov
lods
loopne
push
push
dec
push
es
dec
fisttpl
rolb
aad
push
fmull
mov
in
add
unpcklps
add
sub
fstpt
add
xchg
sbb
jbe
sbb
push
jle
adc
out
clc
inc
outsb
adc
sub
xchg
ljmp
add
in
jg
push
dec
or
add
jg
push
mov
or
jno
inc
ljmp
ja
mov
adc
adc
roll
mov
dec
inc
pop
add
call
mov
outsb
inc
or
cmp
or
test
jae
shll
dec
daa
add
mov
sbbb
pop
or
popa
sar
jg
mov
mov
addb
pusha
lea
sub
sbb
filds
or
ja
inc
arpl
cmp
pop
xor
mov
push
pop
rclb
xor
repz
or
or
jnp
iret
sbb
hlt
es
and
xor
or
jl
xchg
pop
jb
orb
sub
jg
scas
in
pop
mov
in
mov
sbb
pushf
ljmp
dec
gs
cs
cmpb
je
or
mov
arpl
xchg
cli
incl
ja
out
cmpl
or
adc
incl
jo
or
pop
popw
pushl
rorb
test
or
ret
sub
sub
mov
in
pop
loopne
mov
rclb
sub
hlt
dec
std
decl
insl
inc
int3
add
lea
mov
push
bound
icebp
sub
incl
inc
xchg
fildll
shll
or
sub
repnz
sbb
sbb
idiv
or
push
sub
ja
ja
fisttpll
inc
data16
add
xchg
jle
xchg
jg
xor
xchg
aaa
cmp
je
decl
push
and
movl
mov
negl
adc
incl
jne
jmp
dec
shrl
adc
lea
lds
out
jp
xorb
int3
testb
inc
mov
shr
dec
add
pop
addl
sbbl
decl
jo
inc
mov
sbb
inc
cli
lcall
les
and
ret
rolb
test
adc
outsl
mov
xchg
in
add
call
loopne
xchg
lock
adc
fildl
out
mov
lods
cmp
test
mov
inc
outsb
call
mov
in
call
jne
add
frstor
adc
mov
add
pop
pop
mov
out
addb
ret
and
and
js
xor
outsb
in
jmp
pop
cmc
jg
in
je
setno
sbb
push
sub
mov
orl
imul
clc
push
or
push
mov
jbe
mov
inc
ljmp
cmp
cmp
inc
outsb
push
sbb
or
incl
lret
enter
pop
imulb
jnp
and
aad
or
sub
push
inc
add
ljmp
mov
stos
push
testb
and
inc
cli
lcall
nop
push
or
or
sbb
fsubs
insb
add
fildll
push
jle
or
subl
sub
outsl
cld
in
cli
sbb
sbb
cmp
std
stc
outsb
rolb
movb
test
lret
cmp
das
stc
es
outsl
mov
jle
sub
fs
or
push
mov
xchg
clc
incl
test
lret
aas
push
push
jno
arpl
push
pop
add
or
fnstsw
incl
sbb
cli
mov
add
cmp
dec
add
je
es
ljmp
cltd
das
mov
xchg
mov
jge
ja
mov
add
ret
xchg
cli
stos
pop
push
adc
jo
pushl
and
gs
push
movsb
adc
test
inc
jnp
or
dec
mov
int3
inc
add
pop
pop
mov
outsb
cmpsb
cwtl
aad
aam
mov
push
sub
jl
pushl
jae,pt
xchg
sub
sub
aam
jl
mov
sbb
mov
std
sub
ss
xchg
clc
or
mov
sahf
sbb
aaa
push
push
jnp
dec
mov
sbb
mov
sbb
dec
or
imul
sahf
mov
sti
pop
push
lods
xchg
lods
push
cld
mov
andb
fcmovu
mov
jge
scas
hlt
or
jns
xor
fistps
xor
movsl
adc
stos
jo
or
sub
sub
ljmp
std
stc
cmp
in
rclb
xchg
xchg
cmp
pause
cmp
push
mov
pushl
incl
stos
mov
outsl
xchg
add
sbb
imul
ret
ljmp
or
xchg
sbb
xor
test
jmp
leave
or
sub
es
mov
xor
rorl
or
adc
pushl
sbb
cmp
push
sbb
pusha
jl
mov
mov
mov
movsl
cmp
push
jl
push
mov
pop
sbb
mov
int
cmpsb
pop
lcall
gs
mov
add
inc
pop
push
scas
pop
popa
pop
push
pop
lcall
jle
push
jbe
int3
sarl
cmp
push
lcall
test
das
dec
mov
lcall
push
fwait
xor
dec
xor
and
sbb
cltd
jp
inc
or
jbe
popa
sar
lea
cmp
push
pop
loope
pushl
outsb
scas
push
adc
fisubrl
ret
or
shrb
mov
lock
loopne
dec
orl
ljmp
or
and
and
add
sahf
pushf
and
cmp
xor
add
pusha
icebp
nop
xor
ss
cli
rcrl
inc
pusha
dec
adc
fwait
push
xchg
sub
outsl
clc
dec
ja
lods
andl
mov
push
adc
popf
test
aaa
jg
inc
push
xor
add
inc
mov
push
lock
and
ljmp
inc
jo
jnp
cmp
inc
cmp
jl
xchg
lods
out
or
mov
testl
mov
lcall
sub
push
icebp
inc
cltd
mov
xchg
lods
cmp
or
adc
dec
les
add
cld
sbb
js
push
pop
clc
sbb
cmp
jbe
mov
stos
fsubs
pop
imul
cmp
pop
mov
icebp
pushl
fdivrs
xor
sub
mov
movsb
adc
fldenv
mov
lcall
or
adc
add
test
mov
xor
ljmp
aam
dec
xacquire
out
push
lea
stc
lock
mov
je
and
decb
repnz
mov
push
mov
sbb
outsl
clc
mov
test
in
out
lods
clc
imul
pushf
add
cmp
je
incl
cld
lcall
movsl
or
push
addr16
mov
dec
cmp
sub
pop
jmp
sar
pop
push
inc
daa
add
cmp
fadds
sub
add
or
mov
sbbl
jae
jo
test
fsubrl
lcall
lahf
lods
stos
cmpsl
fildl
aas
jbe
test
push
dec
hlt
push
cmpsl
mov
cli
jne
cmp
push
lret
ljmp
xor
jo
lret
dec
sets
cld
outsb
std
std
jb
jmp
imul
or
clc
cltd
scas
sub
incl
jb
add
insl
ds
clc
js
addl
jns
pop
xchg
adc
push
bound
push
or
sbb
inc
add
add
adc
jle
in
adc
cmpb
test
aaa
cld
call
pop
push
mov
out
stc
push
in
jg
sub
cmp
jl
add
inc
or
outsl
jp
testl
or
push
cltd
rcrb
xchg
push
jnp
jmp
jb
dec
or
int
cld
adcb
or
je
test
sub
jp
xor
mov
insb
push
fisubrl
xor
sub
test
js
rcrb
sub
repnz
fdivs
push
fisttps
jl
add
je
fnstenv
cmp
adc
out
and
decl
and
sbb
cltd
nop
imul
sub
mov
sbb
jg
mov
test
push
mov
add
add
add
sbb
pusha
mov
ret
jg
inc
push
xorb
xor
push
mov
aas
call
add
add
add
incl
mov
sti
loop
inc
loope
fnstcw
mov
and
adcb
outsl
adc
sbb
adc
imul
or
mov
sbb
dec
pop
inc
cmp
pop
xor
out
sbb
int3
lea
sbb
jge
push
pop
lcall
lea
loope
je
xchg
pushfw
sbbb
cmp
adc
sbb
jbe
into
push
pop
mov
rorb
mov
add
inc
pop
dec
add
ret
clc
adc
cmp
xchg
cmc
imul
adc
push
pop
jae
pop
xchg
jl
push
sbb
mov
ljmp
outsl
sub
mov
loop
shrl
test
push
push
mov
or
bound
jbe
cmp
call
in
rorl
addr16
fldcw
mov
push
in
or
incl
ljmp
das
aaa
movsb
cmp
pop
jmp
lret
fiadds
addr16
xor
call
gs
fstps
push
fldcw
push
push
mov
push
or
pusha
sbb
jle
pop
xor
xchg
cmp
dec
jns
jmp
push
mov
call
pop
add
stos
mov
mov
pop
pop
fs
idivb
pop
push
bound
bound
imull
push
pop
pop
dec
dec
mov
mov
nop
or
or
mov
lcall
std
test
mov
js
sar
add
jmp
push
push
lcall
jmp
push
fsubs
sub
mov
and
add
pop
jnp
ljmp
cs
push
scas
inc
sub
aaa
addr16
add
orb
xchg
inc
addb
adc
mov
add
rol
pop
adc
icebp
add
dec
pop
mov
inc
push
add
out
add
xchg
ret
inc
cmp
in
sub
pop
repz
scas
pop
xlat
sub
cmp
enter
push
incl
ret
pop
dec
xor
inc
aaa
mov
es
jle
or
call
rcr
addr16
dec
cmc
in
mov
lock
ljmp
scas
sbb
std
enter
scas
sub
fiaddl
and
sbb
mov
insb
pop
sbb
clc
add
out
mov
enter
popf
rclb
test
add
jo
decl
xchg
xchg
push
push
push
dec
bound
aam
pop
mov
jp
or
shrl
fistl
decb
sub
sbb
and
insl
ss
add
cld
add
out
or
jae
adc
incl
xchg
mov
xchg
xchg
mov
pop
cwtl
cmpsb
psubb
mov
lock
incl
add
sbb
inc
in
inc
hlt
adc
pushl
or
clc
in
xchg
jb
fcompl
inc
mov
dec
std
mov
aam
jmp
fmuls
adc
sub
add
shl
aaa
mov
icebp
ficoml
pushl
push
pop
xor
or
pop
pushl
bound
ja
cld
icebp
jmp
push
mov
pop
xchg
inc
add
xor
push
inc
push
ljmp
popa
nop
movsb
mov
inc
mov
aaa
rclb
leave
xlat
mov
xor
inc
inc
dec
add
decl
add
mov
movsl
push
mov
xor
divl
push
inc
pop
cld
call
pop
test
inc
clc
xor
aas
and
pop
mov
mov
sbb
out
test
pop
mov
decb
lock
js
push
adc
cmp
jl
add
mov
jae
jge
adc
fsubrl
cmp
xchg
xor
jl
mov
sbb
fcoms
jno
int3
mov
lret
mov
or
mov
insl
decl
and
adc
ror
cmp
xor
cmc
push
popf
in
repnz
fldl
icebp
incl
pop
mov
xchg
rolb
pushl
cmp
je
test
mov
add
cli
hlt
cli
or
cmp
mov
lcall
pop
mov
mov
ljmp
jmp
jmp
mov
sbb
insb
lea
sbb
xor
out
cwtl
bound
mov
fidivl
add
ret
jg
cmpsl
sub
mov
sub
fistl
sub
movsb
pop
movsb
jbe
faddl
xchg
mov
push
sarb
xchg
ss
call
push
fists
cmp
mov
adc
pop
add
or
mov
lods
cld
dec
pop
ljmp
mov
push
mov
mov
jnp
out
add
icebp
dec
sub
mov
xchg
xchg
dec
and
aam
lahf
mov
pop
std
pushl
inc
in
add
push
inc
imul
adc
scas
push
or
sbb
ljmp
into
push
xor
mov
ss
fmul
fs
frstor
pop
aam
in
mov
fsubrl
inc
das
cmpsb
mov
jle
in
fiaddl
popa
push
les
fisttpl
scas
lock
cmpl
hlt
add
sbb
ljmp
sbbl
nop
add
pop
imul
adc
inc
inc
es
call
out
stos
jns
pop
jae
adc
pop
push
cmp
xchg
add
inc
mov
add
push
scas
sbb
push
pop
jge
fildl
jmp
sbb
mov
sbb
push
mov
int3
mov
cmp
test
incl
or
insl
inc
shll
push
xor
inc
push
add
mov
or
cmp
in
fs
in
dec
std
inc
mov
popf
sbbl
push
ljmp
cmp
inc
mov
ficoml
jns
mov
push
dec
lea
int
mov
jl
dec
or
in
std
in
das
lods
adc
inc
inc
and
push
dec
or
jbe
icebp
jg
mov
push
daa
push
or
cmp
adc
inc
sbb
data16
dec
fmull
incb
mov
mov
add
inc
popa
push
mov
ljmp
add
add
adc
xchg
in
into
adc
inc
lcall
xchg
imul
jl
push
pop
scas
cli
decl
pop
je
iret
jl
pop
inc
pop
leave
pop
test
mov
cltd
repnz
stos
sbbb
mov
add
loopne
jl
test
push
adc
add
faddl
shrb
mov
xchg
or
jg
divb
imul
mov
or
outsb
aam
test
or
xor
lcall
mov
loop
loop
push
add
mov
push
popf
mov
push
inc
pop
inc
ljmp
jmp
test
pusha
xor
insl
or
jmp
aas
shlb
insb
cs
push
add
fwait
jae
mov
or
js
dec
mov
clc
das
in
imul
jge
jp
popa
push
jmp
inc
xchg
leave
test
sub
addr16
incl
fsubr
mov
inc
inc
jns
mov
mov
sub
incl
add
in
stos
sbb
cmp
mov
cmp
cmp
lods
inc
adc
add
cmp
mov
xchg
je
dec
outsl
call
push
hlt
je
cmp
jge
mov
or
enter
dec
pop
cmp
sbb
sbb
cmp
push
dec
sub
mov
pop
dec
movsb
in
sub
scas
xor
mov
push
ret
fsubr
dec
in
or
lcall
mov
mov
andb
add
sbb
dec
push
dec
add
sub
xor
ljmp
push
lds
or
das
les
cltd
insb
adc
int3
add
ret
mov
fcomip
fidivl
js
nop
pop
rorb
push
imul
das
and
in
decl
ljmp
in
add
add
adc
shr
dec
in
pop
sub
cmp
jno
jle
mov
loopne
adc
jle
insb
inc
cmpsb
ljmp
adc
fwait
lcall
push
mov
lock
xor
add
jne
push
mov
mov
push
movsl
jle
jecxz
test
decl
dec
pop
adc
push
jp
xchg
jb
ss
popa
ds
inc
pop
push
jne
stos
and
addr16
fistl
stc
clc
mov
movsb
das
xchg
pop
mov
sbb
das
jne
mov
mov
mov
push
jg
sbb
mov
jmp
add
adc
cli
call
pop
or
or
xor
arpl
and
mov
push
or
add
inc
icebp
std
adc
stos
jmp
inc
test
sar
call
cld
xchg
lock
xchg
ljmp
push
push
jo
divb
xor
fdivr
sbb
mov
cmp
cli
lret
loope
add
in
xor
cmp
xor
pushf
mov
por
and
add
or
or
decb
sti
xchg
mov
decl
call
push
bound
push
or
test
pop
or
and
inc
adc
dec
push
pop
pop
or
cmp
add
jle
lea
sbb
mov
or
stos
int
aad
pop
icebp
xorb
movsl
cmc
push
enter
or
adc
movsb
xor
sti
push
clc
pop
ss
or
xbegin
leave
add
ljmp
clc
lock
mov
mov
sub
cmc
sbb
out
gs
in
pushf
das
repz
fwait
and
xchg
or
enter
sti
ja
fiadds
fs
out
push
xchg
push
aaa
stos
push
pop
dec
jecxz
negb
mov
adc
push
je
jmp
mov
inc
jno
lret
add
decl
jp
push
sti
addl
orb
fstps
sub
xchg
pop
cld
pop
add
fs
add
push
decl
sahf
addl
and
rcrb
iret
cmc
pop
push
sbb
cld
aaa
inc
jne
mov
jle
pushl
mov
jae
add
mov
or
jp
mov
clc
daa
hlt
sti
push
jg
test
mov
cmp
xchg
addr16
addr16
aaa
fcomi
fildl
inc
test
fsubs
xor
hlt
idivl
cmpsb
xchg
adc
pushf
mov
sti
insl
inc
cld
or
and
push
jne
sti
jg
jl
jae
rcrl
push
pop
shrb
test
mov
inc
push
cmp
fdivr
mov
pusha
add
jmp
xchg
hlt
jg
and
cld
and
mov
lea
mov
decl
lock
bound
xor
sub
push
and
pop
sub
lcall
gs
ret
mov
adc
test
out
nop
mov
jg
loopne
test
push
mov
mov
out
dec
or
leave
cmp
dec
sbb
dec
testl
and
sub
inc
cmp
add
mov
inc
jl
sub
imul
push
mov
xchg
mov
mov
cmc
ud2
or
ja
icebp
call
in
pop
add
daa
pop
add
fcompl
push
or
sar
mov
decl
cmp
mov
jl
push
adc
adc
dec
mov
inc
mov
pop
popa
dec
jmp
adc
adc
pusha
dec
mov
ljmp
scas
inc
ss
sbb
sbb
andl
inc
pusha
cltd
mov
inc
add
lock
cld
pcmpgtb
mov
add
sti
in
sti
cmp
je
mov
ret
adc
push
imul
cli
add
sar
cld
sbb
push
sbb
mov
aaa
sbb
leave
cmp
sar
decb
push
inc
dec
jmp
fs
pushl
sbbb
mov
mov
xor
stc
iret
mov
cmpsb
call
cmp
adc
jns
lahf
fnstsw
fildl
jmp
pop
fmull
mov
in
das
fstps
inc
xchg
cmp
jl
mov
mov
jb
dec
pusha
pushf
fldenv
pushl
lret
jge
dec
cmp
jge
push
cld
ret
pop
ljmp
mov
jmp
add
push
dec
fwait
sbb
lock
add
push
fcompl
cmp
movsl
xor
lcall
add
pop
inc
in
dec
in
in
pop
pop
jl
or
add
ljmp
xor
inc
mov
push
test
fadds
pop
dec
jne
call
mov
std
sub
add
lahf
shrb
fnstsw
and
js
or
sub
add
dec
mov
cmp
inc
call
cmpsb
inc
mov
out
cmp
cmp
call
int3
in
push
std
fidivl
push
mov
lea
mov
fsub
jp
mov
mov
sar
incl
pop
adc
movsb
adc
sbb
loopne
aad
movsl
pushl
mov
jne
in
inc
out
cli
push
sbb
clc
mov
and
call
call
adc
ss
out
mov
stos
or
ja
cmc
pop
add
mov
xchg
loopne
rorl
pop
iretw
test
push
rclb
jae
es
inc
addb
sbbl
xor
adc
mov
inc
mov
cmp
call
lcall
call
fs
mov
mov
sbb
xchg
inc
es
and
incl
mov
rcl
mov
jge
cmp
sti
mov
push
shl
sub
or
popf
adc
mov
lock
mov
jl
pop
andl
push
cld
inc
jmp
or
mov
or
mov
jl
push
or
pushl
mov
push
xchg
popa
pusha
arpl
pusha
sbb
imull
lods
insb
das
and
pop
add
and
xchg
push
lods
and
mov
sarl
xor
daa
lret
lsl
mov
jl
adc
mov
pop
jb
xchg
cwtl
inc
cmp
push
fists
push
push
xor
cwtl
lahf
int3
dec
fbstp
or
mov
pop
cmp
pop
pop
inc
cmp
pop
cwtl
loope
jg
add
push
sarb
add
pop
and
xorl
mov
loopne
insb
movsb
jnp
jl
int3
pop
or
mov
enter
int3
scas
xchg
movsb
frstor
add
into
inc
or
mov
mov
gs
pop
fs
xchg
cltd
pop
pop
inc
insl
add
jge
ss
push
ret
call
dec
sbb
ljmp
aam
adc
dec
xor
cmp
sub
jl
arpl
fwait
ljmp
pop
imul
or
test
mov
mov
mov
or
pusha
xchg
dec
and
sar
push
bswap
aaa
test
fnsave
push
jle
mov
inc
cmpsb
in
xchg
xchg
enter
aam
mov
pop
jno
loopne
mov
adc
and
push
adc
insb
fisubs
mov
js
test
jg
ljmp
pop
adc
or
or
adc
out
xor
rol
incl
setns
push
push
enter
inc
sbb
leave
jae
pop
test
nop
inc
inc
movsb
fbstp
clc
or
cs
mov
or
sbb
in
cmp
jo
adc
int
pop
int3
fcomps
pop
add
incl
cmp
and
inc
pop
inc
dec
fs
sub
shlb
ljmp
das
dec
sbb
fstps
nop
in
inc
loop
out
aas
mov
jns
xor
adc
xchg
xor
call
cld
jmp
sub
fists
jnp
sub
mov
and
negb
xor
jmp
push
xor
lcall
in
stc
cli
call
sarb
push
mov
add
and
insl
loop
in
hlt
test
fcomip
jo
rcr
clc
dec
pop
inc
cs
pop
aas
pop
cli
adc
out
pusha
adcl
xor
lods
subb
mov
push
fbstp
mov
sarb
aam
sarb
aas
clc
sbb
out
sbb
movsl
lcall
pushf
aas
test
clc
cmpsb
add
cs
and
mov
inc
fists
pop
inc
pop
repnz
fdivrs
xor
xlat
push
test
lcall
stos
xchg
push
pop
pop
pop
push
jbe
push
push
dec
aaa
es
push
lods
add
or
cld
or
cwtl
dec
jmp
andl
in
pop
xor
xchg
lock
daa
add
xorb
int
arpl
mov
xchg
sarl
and
pop
mov
gs
add
movsb
sahf
xor
nop
out
leave
aas
fidivrs
mov
aam
mov
add
mov
sub
add
out
fcomps
add
sub
test
mov
mov
xor
and
fstps
dec
add
push
mov
mov
jle
addsubps
jge
lea
add
in
add
add
mov
push
cs
mov
adc
and
push
insb
inc
sbb
lods
cmovbe
jbe
lea
fidivl
shl
push
mov
add
mov
rolb
dec
flds
and
pushl
jmp
or
enter
mov
test
xor
push
lea
mov
lahf
dec
adc
jg
or
movsl
push
inc
jmp
xor
dec
insl
dec
push
dec
adc
fimull
adc
sbb
xchg
call
xor
mov
adc
fstpt
fs
pop
insb
add
pop
pop
adc
das
icebp
dec
or
mov
dec
push
jnp
addr16
mov
push
dec
inc
movsl
cmp
fsubl
xor
in
adc
je
dec
ret
add
nop
daa
rcll
call
fists
hlt
in
pop
cmp
insb
sbb
ds
mov
dec
push
shlb
decl
jl
test
adc
and
pop
jnp
or
lock
pushl
test
push
jne
xchg
inc
or
jl
mov
push
stos
stos
and
mov
sub
ret
add
lock
xchg
pop
jo
les
test
mov
scas
inc
push
dec
inc
push
push
and
sub
add
shlb
push
ljmp
and
or
popa
enter
lock
data16
call
incl
sub
push
mov
push
and
inc
adc
pop
mov
fsubrl
ljmp
es
and
or
xchg
mov
arpl
int
push
std
lcall
xor
adc
stos
into
inc
sbb
mov
aam
subl
add
in
inc
adc
pop
ficoms
add
dec
jne
mov
call
jo
mov
test
int
mov
mov
jmp
imul
push
out
push
loopne
lcall
lcall
jp
jmp
fs
cmp
es
cmp
add
mov
add
out
shrb
fs
dec
insb
push
daa
popa
lods
add
ficoml
xor
xchg
inc
test
xchg
sahf
arpl
pop
loopne
mov
jl
jo
icebp
jl
xorb
in
mov
ljmp
pop
push
or
add
addr16
jl
or
sub
dec
mov
enter
push
inc
cli
jp
cmpsl
out
popf
lcall
mov
jl
xor
xchg
sti
mov
or
xchg
movsl
xlat
insb
insb
jl
jbe
and
jl
or
out
jbe
out
add
jmp
push
xor
sbb
adc
in
sub
jmp
mov
push
insb
pop
stc
jl
or
jo
dec
adc
sbb
filds
pop
mov
xchg
inc
mov
add
push
data16
pushf
shll
cs
mov
jmp
or
decl
sarb
lret
cs
push
test
dec
ss
out
jb
push
push
and
out
mov
dec
dec
jb
rolb
ljmp
inc
mov
or
aam
pop
in
pop
and
xchg
test
cmp
lcall
sbb
jle
lods
pop
stc
fidivs
ja
adc
inc
push
mov
es
jg
test
mov
lret
jbe
sar
and
mov
inc
dec
aam
mov
xchg
adc
adc
mov
inc
adc
out
xlat
xor
andb
stos
push
inc
or
mov
es
mov
pop
cld
add
adc
and
insb
mov
pop
subl
sbb
icebp
out
movsb
imul
mov
and
into
add
add
incl
push
es
cmp
adc
and
cmp
incl
cmp
push
add
pusha
into
xor
je
repz
pop
cld
lcall
and
adc
dec
mov
mov
jo
lds
decl
lock
adc
push
rcr
mov
push
dec
pop
add
xlat
and
jmp
loope
jmp
loopne
inc
nop
into
pop
jl
xchg
xor
sbb
sub
mov
jb
pop
pushl
lret
mov
lahf
jns
cmc
sub
int3
push
and
jnp
jl
jmp
jl
pop
or
add
insl
inc
push
shll
jb
lret
sbb
es
push
scas
add
inc
pushf
ljmp
int3
mov
adcb
push
addr16
push
jnp
xchg
in
int3
call
rolb
int3
scas
and
push
mov
sbb
adc
push
cltd
pop
out
pop
jl
cmp
inc
or
or
cmp
test
push
mov
aaa
dec
mov
insb
adc
decl
dec
mov
sbb
sbb
add
test
les
pop
arpl
arpl
and
xchg
repz
mov
popa
lcall
lcall
incl
pop
aad
ret
into
or
mov
xor
addl
imul
xchg
jle
pop
adc
adc
cmc
out
into
stos
xor
and
mov
lods
sbb
js
mov
call
and
lcall
ret
pop
xor
rclb
xchg
jp
adc
mov
scas
mov
mov
pop
lods
and
mov
jg
mov
nop
outsb
cmp
inc
cmp
jbe
pop
popa
ja
mov
mov
and
ja
aam
inc
jne
and
ljmp
jno
or
adc
mulb
clc
fs
adc
push
arpl
inc
add
out
clc
repnz
jmp
add
jmp
push
or
scas
cwtl
add
push
rolb
sub
out
in
push
mov
icebp
jge
repz
mov
enter
adc
xlat
add
ljmp
jnp
inc
loopne
push
dec
jne
lcall
inc
imul
incl
dec
mov
inc
cmp
lock
mov
ret
mov
pop
or
stos
decl
xadd
dec
imul
adc
call
jg
popa
push
push
mov
pop
pop
mov
and
rorl
sbb
jg
inc
and
pop
ja
sbb
and
jge
pop
fsubrs
ljmp
sbb
add
xchg
pop
repz
sbb
andl
inc
ss
pop
call
xchg
jbe
daa
push
sbbb
cmp
or
loopne
cmc
cmp
out
adc
loopne
mov
inc
or
sahf
xor
and
jle
inc
or
pop
push
popa
hlt
xchg
test
ret
sub
sbb
mov
mov
rcll
and
adc
loope
je
dec
sbb
ja
decl
ret
addr16
outsl
repnz
lock
nop
fimull
add
dec
mulps
cmc
mov
int3
and
lret
movsb
movsl
push
stos
aas
les
pop
adc
adc
push
cld
frstor
xchg
enter
cs
or
call
test
mov
out
pop
xchg
hlt
sub
xor
pop
lret
cmp
loopne
clc
popa
int
adc
adc
push
decl
pop
add
adc
push
jne
mov
dec
aas
pusha
cmp
xchg
mov
gs
pop
mov
xchg
inc
shlb
push
insl
adc
inc
mov
test
add
fsubs
pop
mov
pushf
jmp
out
or
pop
inc
inc
xchg
adc
and
mov
hlt
add
xor
xchg
mov
loopne
es
dec
dec
lcall
mov
out
repnz
sbb
add
or
add
jg
incl
pop
dec
int3
or
loope
cmp
dec
js
test
push
jmp
inc
fcos
scas
cli
incl
out
or
insb
xchg
mov
rolb
outsb
adc
nop
cli
enter
shr
fdivl
jg
popa
mov
je
push
into
push
das
sub
fsubr
icebp
dec
inc
inc
jmp
test
dec
inc
mov
mov
rorb
bound
loope
push
inc
insl
orb
out
inc
adc
arpl
cmp
push
lar
cmpsl
sbb
cmp
push
jecxz
add
dec
adc
pop
loopne
mov
das
add
ret
call
inc
jmp
mov
adc
xor
loope
popa
in
inc
add
xor
xchg
mov
ret
ds
push
push
cld
fwait
jle
add
pop
adc
add
std
ljmp
jl
jmp
fistl
shrl
rolb
dec
pop
adc
sbb
adc
movb
inc
shr
mov
push
cltd
cli
pushf
adcl
xchg
xor
mov
rolb
inc
dec
mov
or
daa
sahf
clc
sbb
loop
das
fsts
push
sbb
mov
ds
push
fs
and
add
out
clc
decl
jns
dec
orb
sbb
and
sbbl
push
pushf
inc
pop
enter
rol
scas
jmp
aad
mov
push
mov
pop
adc
and
call
sub
pop
shrl
xchg
push
test
pushl
inc
mov
xor
sbb
sbb
movsb
sbb
sub
jmp
subl
in
nop
xor
and
call
or
cltd
in
push
jg
and
pushf
mov
jns
sbb
fucomp
xchg
loop
mov
ljmp
and
mov
or
add
lret
mov
lret
sbb
and
sub
dec
lahf
or
cmp
inc
adc
xchg
or
ja
cmp
jno
jo
sub
call
push
or
cmc
cmp
leave
or
in
pop
adc
fdivr
sub
incl
cld
in
or
cmp
icebp
je
movsb
sbb
sbb
push
gs
pop
mov
clc
fisttps
lea
adc
int3
and
sub
xor
into
test
jge
xor
add
mov
and
lcall
lds
add
push
dec
cmp
pop
cmp
mov
xchg
test
adc
jb
shrb
imul
sub
adc
jle
push
sub
add
add
lahf
pop
int
push
loop
jb
push
push
add
jns
js
std
or
in
mov
lea
mov
dec
jo
hlt
pop
mov
adc
int3
xchg
jno
jo
stos
nop
jo
dec
in
add
incl
data16
push
pop
insl
movsb
sti
add
push
lods
call
addl
push
in
insb
inc
rcrb
jo
js
fisttpl
jo
rcll
bound
jmp
add
mov
call
or
bound
test
mov
pop
mov
and
stc
add
and
outsl
cli
jg
jae
cmp
jbe
or
mov
jmp
lock
loop
cld
pop
or
loopne
push
or
jg
fists
push
test
hlt
jo
std
ds
lea
test
cmp
in
repnz
lock
loop
in
dec
push
push
push
cmp
mov
sbb
cmp
incl
cmp
push
push
inc
xor
add
xchg
sahf
sbb
mov
sbb
or
adc
sub
inc
mov
mov
and
loop
inc
xor
test
bound
jnp
leave
test
xorl
mov
loopne
test
mov
out
mov
inc
sub
insb
push
xor
addb
jg
jmp
xor
pop
xchg
stos
mov
mov
insb
pop
test
and
sti
mov
sub
cmp
out
mov
mov
mov
lea
push
jnp
jo
ljmp
mov
add
data16
cmp
nop
nop
add
xchg
inc
pop
je
call
dec
outsb
scas
sub
cmpb
push
cmp
std
ss
dec
je
addb
or
test
out
icebp
cli
fisttps
rorl
pop
or
push
pop
mov
dec
movsb
and
ljmp
sbb
add
or
xchg
rclb
enter
loopne
jp
or
xor
cs
pushl
in
mov
add
cmp
je
sub
add
ficoms
jg
xchg
sub
add
pop
push
xor
add
pop
outsl
clc
out
or
adc
jp
xchg
test
xchg
mov
cmpsl
test
add
adc
mov
scas
xor
mov
mov
push
push
das
xorb
mov
push
std
lea
mov
sar
jmp
push
push
push
shl
add
sarb
push
mov
call
push
xor
data16
mov
sub
cld
lcall
std
pushl
pop
sbb
or
add
dec
inc
sbb
call
adc
adc
add
jo
or
dec
fildl
jge
faddl
ljmp
and
nop
mov
xor
pop
dec
outsl
pop
sub
cwtl
outsb
neg
and
push
pop
inc
dec
jb
mov
push
ja
and
pop
dec
jbe
mov
mov
adc
decl
mov
cmpsl
movsb
es
ds
xor
rolb
daa
jge
stos
mov
inc
push
das
je
jg
test
push
daa
out
test
mov
decl
mov
or
fldl
add
fcos
push
leave
cli
mov
xchg
mov
sbb
push
jg
xorb
dec
xchg
pop
add
xor
orb
incl
and
pop
sub
addl
pop
sub
mov
scas
add
sar
jg
push
insb
in
int3
xchg
call
mov
mov
pop
fwait
add
push
std
and
mov
fs
cld
call
sub
mov
loop
mov
sbb
mov
sbb
test
adc
rolb
mov
fiadds
inc
daa
cmp
mov
jo
popa
push
push
push
jb
add
inc
xchg
in
je
cmp
mov
outsb
push
movsb
inc
add
mov
insb
loopne
ret
mov
rorb
and
xchg
mov
roll
inc
aaa
jmp
xchg
jmp
mov
call
test
jne
fsub
nop
sbb
cwtl
and
xor
jns
in
push
je
out
cli
testb
das
test
or
and
adc
lcall
sbb
loopne,pn
das
inc
push
pop
pop
js
sbb
in
pusha
adc
xor
mov
mov
mov
mov
sbb
inc
push
sub
sbb
test
cmp
ja
push
jecxz
lcall
in
push
xchg
mov
add
pop
push
nop
mov
lods
loope
and
push
das
cmp
decl
mov
sub
aam
pop
js
add
sbb
mov
push
scas
cmp
cld
ljmp
shrb
gs
push
cmpsl
test
out
pusha
xchg
movsb
or
lcall
bound
pop
push
insb
add
or
xchg
loopne
test
ret
sbb
lods
and
jo
icebp
push
add
mov
std
sbb
js
adc
dec
in
cmp
push
mov
mov
lcall
mov
stc
pop
inc
test
or
test
popa
or
adc
jno
cs
in
or
push
imul
jle
jmp
cmp
lea
push
loope
dec
cmc
mov
xchg
cld
push
push
popa
mov
sbb
incl
sbb
sub
aam
and
sti
test
xor
dec
mov
in
push
movsb
jg
jmp
jle
inc
cmp
jbe
or
bound
jbe
pop
orb
push
jnp
and
fcoms
jmp
fstl
jecxz
dec
dec
cwtl
mov
into
cmp
roll
test
cmp
cltd
or
mov
test
cltd
inc
sbb
sub
xchg
sbb
lcall
add
add
or
movsl
enter
inc
aam
jb
or
fstpt
lock
aas
orb
or
pop
sbb
popw
adc
out
dec
aam
add
call
dec
push
and
push
add
cmp
lods
in
or
xchg
jmp
adc
call
or
sbb
and
sub
out
mov
mov
xor
fdivs
xchg
stos
dec
ror
pop
repnz
pop
fdivrs
push
push
ljmp
mov
add
ret
mov
je
add
sub
push
inc
in
inc
cwtl
xor
int
js
loopne
popf
pop
dec
jo
mov
add
call
or
dec
out
xorl
enter
push
xchg
jp
das
rcrb
add
sub
out
and
or
incl
xchg
add
xor
rorl
dec
and
int3
or
insb
repz
sbb
ds
mov
sub
cmp
cmp
fdivl
and
int3
jo
das
sub
mov
mov
test
push
push
incl
dec
jp
add
insl
sbb
stc
jb
ficoml
in
lcall
xchg
sti
mov
inc
add
mov
jb
lcall
push
inc
inc
push
push
ljmp
pop
negl
call
lret
pop
push
jnp
xor
push
lock
ljmp
add
sub
aas
or
insb
jo
dec
inc
in
jg
decl
jbe
push
and
and
push
inc
or
xor
inc
xchg
cmpb
popf
and
outsl
xor
mov
cwtl
lock
cli
push
inc
jmp
in
cmpsb
and
inc
fldenv
in
cmp
mov
push
ljmp
or
sbb
test
outsb
xor
jl
push
loop
cmc
ds
mov
add
daa
rolb
shlb
pop
xchg
sbb
sub
pushl
pop
xchg
sti
push
das
stos
fistps
cli
sub
fbstp
jg
mov
push
std
movsb
shll
call
imul
jbe
out
or
jmp
incl
cmp
jo
loop
jb,pt
ja
jbe
stos
pop
and
mov
rcl
fcomps
je
jo
mov
pusha
sbb
mov
test
adc
jno
sbb
or
push
add
or
push
scas
ja
cmp
insb
and
add
pushl
and
add
add
sbb
les
or
mov
jl
lock
lcall
xor
jecxz
xor
dec
mov
pushf
test
cmp
call
decl
mov
fwait
push
inc
loope
scas
dec
pop
push
pop
lea
pushl
sub
xchg
js
ja
mov
insl
and
sub
aaa
add
jg
incb
mov
and
arpl
aam
ret
mov
divb
push
test
call
mov
dec
jbe
push
sub
inc
sbb
and
stos
cmp
pushl
inc
dec
push
notl
jl
dec
xchg
mov
push
add
lret
push
push
adcb
and
lock
in
and
hlt
cld
sub
adc
ror
mov
xchg
loopne
scas
enter
pusha
shrb
adc
jmp
adc
pop
sbb
push
aad
aas
test
inc
lcall
push
cld
pop
cli
and
scas
out
add
or
xor
cld
loope
in
inc
push
push
fbstp
loopne
fisubl
inc
in
loopne
mov
loopne
and
test
xchg
shlb
mov
pop
and
mov
xchg
pop
xchg
lock
xchg
push
mov
ljmp
rol
xchg
repz
cmp
pop
out
lcall
xor
cmpsb
jp
cli
cmp
scas
inc
imul
popf
push
sbb
inc
sbbb
ja
pop
xor
add
jmp
adc
add
js
imul
inc
cmpb
out
aas
xchg
and
cltd
in
push
add
jp
mov
js
test
pop
cmpsb
ret
xchg
das
mov
ficomps
call
std
cmp
pushf
sub
xchg
inc
push
repnz
call
xor
and
call
xchg
dec
int3
int3
push
ds
pusha
pop
sbb
sub
cmp
add
adcb
and
das
adc
leave
mov
push
rcrb
inc
jge
cmp
call
pop
dec
popf
xchg
filds
addb
outsb
push
add
cmc
fldl
fs
cmp
cmpb
ljmp
or
call
stos
add
pop
xor
ja
popf
add
aam
call
or
leave
pop
mov
add
and
test
mov
sahf
sbb
sahf
push
je
test
or
pushl
xchg
lea
mov
sub
sbb
lcall
cld
decl
cmp
push
push
xor
call
cmp
stos
inc
dec
ret
sahf
popf
and
sbb
test
lcall
add
lock
push
jns
cmp
shlb
adc
jmp
es
dec
jbe
cmp
aaa
and
mov
daa
fstp
pop
or
pop
pop
imul
loope
inc
push
ja
adc
ljmp
add
dec
fildl
ret
jne
adc
push
mov
pop
das
cli
decl
data16
push
lret
adc
data16
cmp
js
inc
ret
decl
mov
push
popf
lea
inc
mov
out
popf
inc
mov
insl
push
jmp
notb
ficoms
js
mov
leave
or
cmp
cmp
icebp
sahf
push
xor
lcall
inc
out
pop
clc
call
rorl
test
fstpt
mov
test
cmp
dec
pushl
sbb
and
bound
sub
push
push
mov
outsl
jo
lock
mov
sarb
and
popa
clc
sbb
xchg
cld
pop
sbbb
mov
andb
cmp
aaa
and
call
mov
subb
mov
jne
cmp
mov
shll
mov
cs
out
or
adc
arpl
sub
mov
addr16
int3
test
xchg
pusha
xchg
jo
dec
inc
xchg
cli
inc
and
mov
stc
push
out
and
push
xchg
add
push
test
ficoms
pop
enter
add
adc
out
add
or
add
out
push
mov
insb
add
popf
sub
dec
int3
add
pusha
add
mov
js
js
dec
or
or
mov
mov
lock
jb
lds
sbb
xlat
cmp
push
les
ds
pop
ss
pusha
inc
enter
xchg
es
incl
mov
and
push
test
jbe
pop
inc
aam
or
call
jle
jbe
inc
xor
pop
cmp
jmp
dec
push
pusha
nop
mov
jmp
sbb
xchg
xor
lea
clc
clc
push
push
push
add
add
lods
dec
add
add
loope
mov
push
inc
imul
mov
sub
es
cmp
addb
inc
mov
mov
mov
lcall
pop
jmp
adc
or
lcall
xor
xor
pop
jb
jae
sbb
call
std
incl
mov
nop
stc
in
jmp
orb
jne
cmpl
add
movsb
mov
push
sbb
dec
mov
inc
stos
add
adc
orl
mov
pop
fcoms
mov
lahf
sub
or
lcall
pop
adc
movsb
ss
movsb
push
roll
fcomip
ja
and
push
rcrl
cmp
inc
scas
cmp
add
inc
adc
ret
push
adc
stos
nop
add
cmp
and
mov
dec
dec
jb
pushf
call
cmp
and
in
call
sbb
push
add
jg
dec
cld
ds
push
mov
jge
cwtl
mov
sub
incl
dec
mov
mov
sub
mov
popl
mov
test
inc
ficoml
push
aam
add
incl
mov
pop
mov
inc
mov
mov
push
pop
xor
push
loope
ljmp
movsb
or
loopne
sub
jl
inc
out
and
aam
jo
add
es
push
cmpsl
mov
jg
push
lds
icebp
call
out
mov
sbb
or
hlt
adc
lods
dec
lcall
push
sbb
fildll
and
pop
sub
or
and
xor
inc
add
mov
lea
stc
dec
pop
sub
mov
inc
sahf
pop
insb
mov
das
decl
nop
mov
sub
mov
xor
add
ljmp
push
lcall
push
sub
add
insb
es
int
into
shlb
lock
cmpsb
mov
jp
add
cmp
sbb
std
pushl
sub
dec
and
enter
pushl
jge
neg
sbb
outsl
inc
adc
movsl
pop
testb
dec
inc
decl
mov
xchg
fistl
add
mov
cmpsb
mov
mov
je
dec
mov
xchg
mov
xchg
and
dec
and
mov
inc
lcall
pop
mov
sbb
sbb
push
inc
mov
xchg
or
rcrb
or
popa
iret
or
push
in
outsl
aam
fdivrs
dec
add
mov
push
cli
das
inc
int3
mov
inc
add
in
ljmp
decl
jb
cwtl
sub
das
or
rclb
addr16
push
clc
dec
push
mov
cld
fnsave
mov
and
hlt
jmp
push
jle
lds
add
ljmp
jmp
rclb
xor
add
inc
je
call
clc
push
xchg
or
sub
mov
stos
clc
dec
push
jnp
adc
dec
filds
es
xor
cmp
or
push
call
shlb
sub
push
popa
loopne
sbb
enter
aas
pop
add
sub
inc
inc
xlat
lcall
dec
pusha
mov
out
adc
sub
dec
dec
push
pand
stos
shlb
pushf
je
inc
iret
fdivs
adc
xchg
push
xor
dec
jecxz
mov
xchg
sahf
dec
push
or
pop
mov
std
decl
mov
pop
add
add
push
das
pop
sub
jg
pushf
mov
push
jle
lea
and
repz
cmp
adc
insl
call
cld
call
mov
je
mov
xor
ja
or
bound
icebp
add
add
add
mov
in
sub
orl
out
les
incl
xor
jmp
addr16
sbb
sbb
lcall
xor
pushl
sub
sbb
adc
mov
mov
xchg
push
fstp
or
or
out
clc
jo
or
fnstsw
test
pop
jmp
dec
mov
mov
mov
lds
mov
lcall
sub
xor
add
mov
adc
ret
pop
push
inc
test
call
and
adc
aas
and
lahf
jp
fs
js
ss
je
jp
movsb
icebp
incl
mov
mov
lahf
mov
pop
rclb
test
adc
push
mov
rolb
ljmp
push
and
cmp
sti
sahf
xor
out
ret
daa
xchg
cmp
fmull
shlb
jb
leave
and
pushf
pop
jb
loopne
out
enter
jmp
cmp
insb
or
pop
je
or
cmp
mov
xor
sub
and
mov
and
mov
fisttps
fimull
icebp
or
ret
or
clc
push
mov
popa
inc
test
push
mov
ljmp
icebp
sbb
pop
cmp
jmp
push
sbb
add
movsb
xor
scas
out
cli
pushl
xchg
cltd
in
jmp
push
pop
adc
sub
and
adc
xchg
dec
cld
incl
pop
push
fcoml
cmp
and
fadds
push
ljmp
mov
fcoms
sbb
xchg
pop
call
ss
lret
pop
pusha
incl
sbb
push
popl
mov
add
faddl
pop
mov
jo
pop
push
clc
adc
popf
sbb
dec
enter
jb
push
fcoml
cmp
subb
adc
mov
mov
cmp
jmp
adc
enter
add
push
pop
inc
clc
push
jg
adc
decl
cmp
insl
scas
sub
and
sbb
out
repz
mov
add
das
adc
jmp
push
shl
outsb
stos
subb
push
push
pop
cmp
out
push
inc
loopne
inc
sub
and
or
lcall
rolb
outsl
stos
pop
fsubrs
sbb
or
inc
sar
xor
or
inc
add
test
jbe
decl
mov
mov
fld
pusha
or
jmp
fldcw
fisttpl
lea
incl
cmp
inc
imul
adc
shl
push
sahf
ret
icebp
inc
and
add
shll
jo
inc
mov
sahf
outsl
cmp
dec
push
cmp
call
test
inc
notb
and
pop
cmp
jbe
int
pop
lds
decl
call
addr16
xchg
test
push
pop
out
ljmp
adc
push
mov
push
orl
xchg
push
insb
hlt
mov
pop
jl
dec
mov
add
push
push
jmp
fisubl
pop
dec
popa
inc
clc
fisttps
inc
lock
xor
popa
pop
xor
push
andnps
xor
adc
dec
movsl
mov
pop
xor
push
xchg
inc
inc
dec
cmc
cmp
push
cmp
sub
test
push
mov
xor
xor
stc
cmpsb
or
mov
mov
cmpsb
xor
adc
or
incl
test
sbb
rcrb
add
push
add
cs
sbb
push
cld
push
push
lea
push
incl
clc
testl
push
hlt
push
adc
aas
or
or
jbe
dec
add
push
adc
incl
pop
sti
pusha
pop
inc
insb
cmpsb
add
pop
in
push
sub
jb
mov
mov
int3
ret
sti
pushl
clc
inc
sub
cwtl
mov
ss
cwtl
lret
push
mov
mov
adc
fnstsw
in
add
scas
and
ljmp
or
stc
inc
inc
cmp
jl
aas
cltd
sub
mov
aad
stos
inc
std
pop
or
decl
adc
mov
add
mov
pusha
ljmp
adc
sbb
mov
lods
dec
ret
or
sub
xchg
add
and
dec
out
ljmp
dec
orb
sahf
add
lods
pop
adc
andb
mov
fimull
mov
outsl
movsb
test
incl
pushf
cmpsb
mov
pop
negl
cmpsl
sub
or
daa
mov
ret
fwait
sbb
xchg
push
adc
lea
or
sub
push
movsl
adc
stos
lcall
mov
aad
dec
test
dec
mov
adc
ljmp
xchg
cwtl
sbb
test
mov
jne
xchg
incl
or
jg
push
or
movsl
jl
sbb
jne
decl
pop
decl
xorb
sbb
inc
jo
insl
fisttpl
outsl
mov
add
cmp
pop
test
movsl
jge
add
cmp
cmp
mov
sbb
xchg
lock
pop
xor
mov
dec
xor
xchg
sbb
dec
cs
loopne
mov
mov
je
es
mov
outsb
insb
and
loopne
mov
add
mov
cmp
push
push
popf
fwait
scas
cli
call
xor
ss
lret
aas
inc
cmp
jle
dec
cmp
jl
jnp
pushf
hlt
pop
or
xor
dec
shl
add
push
or
fisttps
movsl
cld
flds
fcomps
pop
add
fnstsw
mull
sti
test
jp
push
fcomip
pop
ss
inc
je
or
aas
push
scas
nop
jo
fstps
sbb
and
push
fldt
jae
call
jecxz
inc
stos
fldl
adc
repnz
in
and
rolb
fildll
jl
and
xchg
dec
repz
or
lcall
rorl
es
mov
add
or
je
out
scas
lea
or
mov
sub
mov
xchg
jge
movsb
movsb
mov
xchg
adc
sahf
sar
push
fsub
nop
or
inc
sbb
or
xor
push
pop
push
adc
mov
pushf
scas
clc
mov
insb
loope
lea
cld
sub
jbe
pop
enter
std
rclb
cmc
jmp
lea
mov
adc
adc
sbb
fildll
add
push
or
sbb
inc
filds
dec
xchg
cmp
or
sti
mov
inc
and
or
adc
fsubs
inc
bound
sbb
loopne
jg
pop
and
mov
es
sbb
imul
call
inc
outsl
iret
push
stos
push
insb
inc
into
sub
or
adc
movsb
imul
or
incl
movsb
decb
cmp
jge
lcall
fsubl
orb
or
pop
mov
fstpt
cmpsl
sbb
mov
lcall
jge
adc
aam
pop
pop
push
inc
shl
bound
movsl
shrb
inc
add
jbe
add
jbe
sub
addl
sub
les
xchg
sub
add
dec
aad
and
adc
lret
sub
call
shr
and
jmp
pop
std
decl
xor
dec
je
mov
adc
in
mov
rol
mov
jecxz
pushl
push
repnz
pop
mov
jb
rclb
shrb
fmull
or
push
sti
shl
outsb
mov
jmp
and
insl
mov
or
push
ret
addl
pop
test
scas
filds
mov
sbb
and
dec
ret
inc
in
fsubl
add
aam
jns
fst
int3
bswap
sarb
nop
mov
call
jl
je
insb
sbb
mov
push
push
push
lods
dec
nop
sub
push
pop
pop
jle
jmp
cmp
enter
inc
repz
insb
sbb
sbb
push
add
call
stc
in
orl
out
and
mov
je
loop
xchg
and
call
nop
sub
ds
fcomp
loopne
push
xor
push
fnstcw
and
scas
ljmp
orb
sbb
pop
shll
loopne
cmp
inc
decb
call
pop
icebp
push
std
scas
loop
push
aas
mov
stos
inc
add
push
add
cltd
int
shrl
add
cmp
imul
and
jbe
add
jns
sbb
add
add
jg
xchg
sbb
and
jne
cmp
pop
xor
jge
xchg
pop
cltd
test
call
in
mov
mov
sbb
inc
fmull
gs
ljmp
cs
sub
sbb
mov
sbb
mov
fcomps
push
cmp
outsb
and
dec
mov
push
call
inc
out
shlb
add
or
fsub
bound
jg
insb
gs
add
pop
mov
ljmp
push
push
mov
sbb
xor
fstl
push
jae
insl
pushf
int3
lea
ljmp
add
dec
test
xchg
mov
push
sti
jge
inc
test
sub
add
out
outsb
or
in
sub
loope
xchg
scas
mov
fwait
add
mov
add
loope
pop
mov
xchg
push
add
and
add
nop
fisttps
adc
sbb
xchg
push
frstor
sub
and
dec
int3
adc
or
dec
mov
jmp
adc
aaa
sub
outsb
xchg
mov
loopne
sahf
fildl
push
add
add
and
rolb
int3
xor
adc
fwait
push
mov
and
sub
mov
lock
lcall
jecxz
adc
clc
inc
pmaxsw
fsts
inc
add
imull
dec
test
outsl
int3
pop
int
sub
cld
int
adc
adc
pop
inc
cmpsb
outsl
ss
arpl
or
inc
insl
jae
xchg
sub
arpl
gs
call
fincstp
fcomi
call
imul
popf
sbbb
insb
add
fistpll
add
mov
mov
out
inc
dec
outsl
fwait
mov
push
insb
jne
inc
or
push
cmpsb
mov
call
or
sahf
lret
popa
jbe
add
pop
pop
mov
cmp
je
adc
xchg
fs
cmp
xor
sbb
mov
sub
fsubrs
sbb
inc
push
dec
verw
incl
push
ret
data16
dec
inc
push
sbb
outsl
jae
or
jmp
test
sub
inc
xchg
int
jo
stos
mov
push
and
incl
cltd
mov
adc
add
sarl
pop
push
sub
xchg
test
jg
sub
add
push
sti
and
je
xchg
jne
mov
and
jo
ret
mov
outsb
inc
enter
repnz
nop
or
fistps
and
pop
decl
in
xchg
inc
cmp
arpl
cmp
pop
jl
pop
popa
jae
add
ds
mov
mov
and
pop
xor
mov
mov
outsb
add
cmp
imul
popa
idiv
mov
arpl
push
xchg
outsb
pop
fs
cltd
mov
sbb
dec
mov
decl
cs
imul
mov
cmp
popa
pusha
inc
fs
xor
sti
jg
imul
mov
mov
jb
insb
sar
das
cmp
aas
and
jg
std
mov
imul
xor
and
inc
outsl
fcmovbe
jno
insb
clc
ljmp
outsl
les
push
dec
imul
mov
dec
addr16
incl
push
fcomps
ja
xor
cmp
ret
push
outsl
sub
inc
insl
mov
insl
shlb
das
push
test
rcrb
fidivrs
andb
jmp
cmp
or
insb
sub
into
icebp
imul
data16
sar
hlt
pop
pop
mov
push
cs
and
sti
out
imul
gs
movsl
decl
cmpb
mov
lcall
aas
xor
ja
mov
xor
cs
sti
cmp
jmp
roll
push
loopne
mov
push
outsb
add
dec
inc
or
add
mov
out
dec
and
ja
je
xchg
xor
adc
jae
jg
xchg
je
inc
insb
mov
in
out
cltd
outsb
add
aam
jne
daa
dec
or
test
incl
jl
fildll
adcb
je
fisttpl
out
decl
cwtl
jae
jb
pop
mov
pop
jns
ficoms
arpl
jmp
sbb
mov
mov
and
decl
int
or
aas
ret
scas
push
pop
insb
inc
arpl
cmp
pop
gs
jmp
sub
movd
push
bound
aaa
sbb
insb
popa
add
movsl
mov
jbe
adc
loope
pop
fdivs
test
insl
mov
jne
popf
pop
jmp
jb
aad
or
sbb
iret
ret
ja
pop
jo
xor
outsb
ret
popa
inc
push
xor
or
bound
ror
dec
out
rcrb
lcall
mov
ret
insl
pop
insl
jecxz
stos
out
in
insl
fcmovnu
addr16
std
pop
mov
rcrb
into
daa
pop
call
cli
jle
jnp
popa
mov
jo
outsl
out
js
push
ss
scas
jb
or
fs
cmp
mov
push
lcall
jmp
pop
imul
arpl
outsl
fadd
xchg
jg
pop
pop
and
or
decl
sub
bound
adc
sahf
imul
aas
sbb
sbb
lret
add
mov
bound
inc
arpl
cmp
push
fisubrs
outsb
daa
iret
pop
cmc
call
lods
out
lods
imul
push
loopne
push
outsl
and
insb
cmp
ss
scas
and
sbb
ja
sbb
mov
jae
xlat
js
mov
fcompp
adc
fs
loope
pushl
ret
sbb
outsb
inc
xor
repnz
arpl
shll
mov
add
std
fs
or
xorb
scas
jae
es
enter
pop
outsl
sub
jmp
in
ret
sbb
and
pop
or
out
clc
jns
inc
rcr
fistpll
sub
adc
or
fs
in
cmpsl
pushl
ret
cmp
push
insb
jmp
lret
pop
dec
inc
adc
mov
frstpm(287
in
loopne
pushl
insb
pop
push
or
mov
jns
enter
ret
or
xor
mov
flds
dec
and
push
or
js
xchg
pop
jg
imul
push
pushl
jp
jae
add
sbb
and
pushl
fwait
jne
xor
pusha
adc
arpl
pop
fmul
mov
adc
mov
sbb
jmp
pop
outsb
fsubrs
enter
aas
int
pop
jae
or
and
arpl
jg
icebp
xchg
push
pushl
xchg
push
jnp
sarl
pop
add
pop
push
int3
inc
dec
inc
pop
or
push
adc
push
inc
or
push
pop
dec
or
sbbb
aaa
mov
adc
arpl
xorl
and
insb
sbb
mov
sub
and
pop
out
ret
jle
jne
daa
stos
dec
xchg
jg
jmp
xchg
insl
xchg
and
or
ss
or
arpl
mov
adc
stos
ljmp
out
and
pop
push
inc
imul
arpl
out
cld
push
pusha
pop
psubsw
mov
jmp
jns
jg
rcr
dec
inc
lods
hlt
jp
and
ljmp
dec
push
or
inc
xor
pusha
imulb
dec
jo
or
inc
pushl
dec
inc
jge
ja
mov
ret
push
pop
push
inc
push
pop
xor
incl
mov
jl
out
xor
arpl
data16
cmp
push
mov
xchg
xor
pop
addb
lahf
mov
jp
pop
push
sbb
pop
add
lods
xor
popa
pusha
inc
jp
or
ljmp
lods
dec
push
sbb
lret
fisttps
ret
jp
call
sbb
and
andl
adc
faddp
mov
or
and
iret
cmc
ja
or
mov
jg
xchg
pop
fwait
leave
scas
call
cs
bound
sub
jmp
fs
push
sub
icebp
jmp
inc
dec
mov
xor
jae
aaa
jg
cmp
pop
jb
dec
mov
pop
mov
pop
jnp
int3
out
cli
bound
mov
dec
outsb
nop
sbb
xlat
stc
sbb
ret
push
loopne
sub
insb
pop
sub
mov
xor
jno
jne
iret
pushl
sbb
sub
test
mov
jae
pop
xchg
dec
mov
ret
imul
push
lock
or
mov
mov
js
leave
pop
push
xor
xchg
lock
push
addl
lret
mov
lods
call
mov
int3
sbbl
aas
nop
popl
mov
in
lds
lcall
or
push
rolb
imul
or
dec
jo
pop
xor
je
mov
mov
push
mov
fldl
sub
sub
ret
incl
dec
xchg
inc
and
loopne
fwait
imul
jg
movsb
add
mov
popa
mov
and
leave
or
fnstsw
push
pop
call
mov
ret
mov
or
mov
add
call
adc
bound
cmp
and
cmpsl
pushl
inc
jns
inc
inc
inc
jne
outsl
ficompl
fildl
or
and
call
sbb
jl
or
test
lahf
mov
xlat
and
adc
adc
not
lcall
xchg
jae
jns
xor
push
popa
repz
jbe
mov
add
jg
xchg
insl
push
sbb
pusha
lret
lretw
nopl
pop
jbe
push
jb
xor
je
cld
mov
addr16
dec
push
addl
decl
sbb
psubq
in
or
or
jo
add
shrl
ljmp
pushl
sarb
xor
xlat
popa
in
rcrb
push
sbb
adc
adc
fstps
ljmp
jae
jp
cmp
push
cs
jbe
and
inc
push
push
adc
inc
pushl
push
and
adcb
sbb
pop
iret
dec
gs
scas
arpl
insl
lcall
inc
sub
incl
out
sub
popa
mov
jmp
cmpsl
cmp
xlat
dec
xchg
jae
int
and
imul
in
mov
movl
cli
cmp
push
or
adc
rorb
mov
decl
lods
data16
mov
mov
cs
add
pop
jo
mov
fbstp
arpl
call
shrl
adc
fldcw
dec
jecxz
adc
aam
outsb
push
ljmp
xchg
pushf
dec
icebp
es
and
fwait
push
dec
push
mov
dec
cmp
sub
dec
pop
inc
inc
jecxz
rcrb
adc
das
push
sbb
hlt
push
stos
and
push
dec
adc
loopne
xchg
cltd
mov
inc
and
sbb
call
decl
jnp
sbb
or
dec
add
mov
repnz
outsl
bound
push
cli
adc
dec
inc
or
and
inc
jne
lock
dec
popa
mov
fwait
or
push
and
sbb
sbb
testl
lret
sahf
inc
js
pop
and
sub
adc
decl
and
in
lods
adc
mov
xor
cmp
fadd
inc
jo
jae
sub
or
das
js
aas
sub
and
sub
out
shll
push
call
and
inc
lds
dec
inc
pop
into
mov
cld
adc
bound
icebp
decl
cmpsb
jne
sub
ret
mov
dec
and
loopne
sbb
cmpsb
add
xor
lea
dec
fisubrs
incl
inc
inc
dec
loope
dec
dec
and
or
clc
leave
out
sbb
jmp
outsl
sbb
inc
push
push
pop
push
dec
dec
push
push
imull
in
stc
das
push
push
inc
inc
push
add
decl
inc
dec
inc
sub
je
fsts
push
jg
mov
push
add
push
popa
adc
pop
pop
pop
stos
std
adc
out
dec
push
inc
dec
mulb
dec
pop
pushl
jl
and
adc
roll
xchg
icebp
push
sub
sub
sub
and
adc
incl
fwait
jmp
jae
mov
sub
and
sub
dec
scas
xor
roll
fsubs
and
push
dec
stos
push
mov
cwtl
inc
xor
call
jecxz
aad
inc
inc
mulb
arpl
loop
add
push
inc
jo
das
push
adc
incl
out
pop
push
and
cmpl
push
sub
mov
cs
fdivs
pushl
cmp
ja
gs
dec
add
push
cmp
or
ljmp
pop
inc
xchg
mov
pop
or
xchg
inc
adc
in
in
ljmp
mov
das
in
inc
mov
add
call
xor
fs
test
cmpsl
inc
fimuls
subb
fistps
inc
inc
xchg
and
lods
dec
std
testl
bound
jg
shlb
push
dec
jne
test
ljmp
inc
mov
sub
pop
mov
dec
jbe
add
ds
inc
pop
sub
xor
push
push
loop
mov
call
orl
test
jne
insb
and
add
pop
inc
jl
push
push
push
jae
push
push
sbb
sbb
pop
mov
fidivl
fsubl
sbb
std
jg
fsubs
dec
push
jae
mov
leave
jo
or
add
push
ljmp
mov
movb
xchg
and
aas
add
ss
pop
incb
fs
jns
incl
pop
jmp
ud1
rolb
cmp
popa
mov
out
add
mov
inc
leave
lock
insb
dec
pushl
enter
cld
into
std
lcall
dec
sarl
add
mov
aaa
jmp
aas
incl
xchg
and
jg
add
ret
xchg
xor
xor
xor
fcomip
or
and
enter
sbb
lcall
sub
outsb
add
test
lods
dec
add
ljmp
stos
cwtl
push
and
ud0
add
jl
mov
add
lret
ljmp
fldt
lods
ljmp
add
sbb
insb
sub
add
mov
daa
and
push
cli
decl
mov
cmp
add
fimuls
js
sub
incl
sahf
sub
xor
or
xor
jmp
pop
loopne
mov
sub
inc
mov
dec
push
and
mov
cmpsb
and
add
gs
inc
sbb
arpl
jne
jne
adc
jg
jmp
jb
insl
or
int3
addr16
and
add
add
pop
add
push
fwait
clc
mov
mov
insb
ret
adc
add
incl
sbbl
jmp
sbb
ja
lcall
sbb
shr
sbb
push
mov
add
decl
cmp
push
cs
xor
shr
scas
call
fcmovnu
dec
mov
fcoml
add
imul
lcall
mov
aaa
mov
sbb
mov
adc
push
pop
sub
xor
inc
push
and
in
incl
enter
enter
cwtl
sbb
xchg
inc
lret
or
jmp
ret
cli
mov
repnz
pop
aad
xor
or
jne
nop
jmp
pusha
add
fdivrs
push
push
add
cmc
test
jbe
insb
ja
push
cmp
sbb
adc
popa
mov
pop
ss
cmp
popf
insl
jg
push
and
shll
push
fbld
add
iret
pop
lcall
lret
scas
add
mov
adc
loopne
dec
jge
das
movsb
movsb
lcall
stos
add
movsb
inc
lock
es
int
lcall
add
ss
outsl
fidivl
outsb
gs
inc
xchg
sbb
xor
push
inc
sub
ss
push
jecxz
cmp
ja
mov
fadd
dec
pop
mov
fcomps
jp
cmp
push
sbb
test
outsb
lcall
lahf
jb
xor
cmp
orb
mov
jle
and
fs
call
mov
fs
jbe
mov
stc
mov
fmuls
inc
sub
ljmp
test
dec
inc
xor
fmuls
std
test
sbb
loopne
sub
ja
cmp
popa
sbb
bound
adc
gs
dec
popa
sub
sub
xchg
mov
mov
sbb
pop
out
xor
or
adc
aad
pop
pop
call
out
adc
push
sbb
cmpsb
adc
sbb
cmp
decl
addr16
adc
cmc
adc
lsl
xchg
or
mov
add
mov
outsl
and
xor
decl
inc
mov
and
sub
and
xor
pusha
sti
mov
fmuls
sub
inc
dec
mov
sub
ret
pop
cld
pop
pop
jo
je
adc
or
add
pop
data16
lock
pushl
shlb
stos
push
lock
in
sbb
gs
dec
shlb
push
sbb
pop
jmp
add
adc
pop
arpl
xchg
decl
sbb
ds
cmpb
data16
jae
adc
fldt
cmpsb
push
push
ss
mov
jo
je
adc
pop
add
arpl
add
pop
mov
mov
out
adc
jb
loop
dec
lods
insb
ds
mov
push
fwait
and
call
out
outsl
add
sbb
xchg
test
out
dec
ret
jb
popf
pop
sbb
bound
pushl
insb
cwtl
arpl
jns
dec
pop
sub
out
cmpsb
jae
out
mov
pop
or
pushl
sbb
mov
aas
aas
xor
inc
pop
push
add
adc
fwait
mov
lcall
dec
pop
pop
cwtl
lock
aad
or
push
mov
pop
dec
jbe
jne
xchg
int
pushl
xchg
mov
sub
lcall
push
push
sbb
pop
and
push
subl
call
faddl
int3
dec
push
xchg
inc
loopne
xchg
dec
add
ss
push
aad
loope
clc
push
dec
lock
outsl
pop
jns
or
popf
mov
mov
xor
dec
cmp
jg
adc
jg
or
pushf
push
icebp
js
and
adcl
adc
mov
cmc
data16
ljmp
cmp
sub
pop
stos
jp
jb
mov
insb
arpl
pushl
cmc
push
dec
das
cmp
mov
inc
cs
das
lock
sbbb
andl
push
incl
dec
bound
fnstenv
or
add
inc
xor
cmc
push
imul
xchg
push
mov
mov
push
mov
inc
sub
pop
jnp
add
icebp
rolb
ljmp
pop
fstps
outsl
addr16
outsl
test
cmpb
inc
jae
ljmp
insb
addr16
int
imul
ret
inc
inc
xchg
sub
ljmp
dec
adc
sub
ds
jo
xchg
and
das
rcrl
and
mov
and
mov
pop
mulb
and
mov
flds
mov
ljmp
aaa
cmp
mov
fcoms
pop
mov
in
mov
jns
aas
icebp
push
decl
outsl
inc
sbb
xchg
jb
xor
shll
or
pop
loopne
js
les
aam
mov
or
dec
mov
or
sub
cmp
jmp
incl
ss
rol
inc
sbb
fmuls
fisubl
inc
imul
fs
fdivs
icebp
imul
inc
dec
out
cmp
add
inc
sbb
pop
add
loopne,pn
pop
sub
or
cmp
mov
in
jmp
fucom
add
add
or
push
in
cmp
mov
add
adc
xchg
arpl
push
jp
in
mov
pop
lret
aad
jns
pop
push
xor
cs
decl
adc
push
idivb
mov
je
xchg
or
sbb
out
lods
mov
daa
ds
inc
in
mov
push
cmpsb
movsb
cmp
rorb
ja
push
sarb
out
lock
or
push
in
ret
sbb
add
ss
out
inc
sub
or
jmp
nop
mov
inc
and
addr16
out
out
cld
adc
jb
mov
dec
ret
sbb
jne
sbb
add
cs
add
sti
pusha
add
je
lds
sbb
inc
cmp
add
cmp
or
test
std
cld
jbe
mov
inc
sub
neg
inc
pop
ja
nop
mov
sahf
mov
jg
pop
lcall
iret
jmp
idivl
imul
aas
or
pop
mov
das
or
rol
xchg
sub
sub
add
ja
push
fsub
fldz
rolb
insl
push
test
or
push
jnp
dec
loopne
repz
dec
call
or
push
out
mov
fmull
scas
push
sub
pop
pop
not
fisubrs
ret
add
loope
aam
scas
enter
cwtl
push
mov
mov
push
mov
call
fidivl
add
and
pusha
sub
sub
pop
popa
cld
jmp
mov
subb
les
sub
jmp
or
pop
sub
adc
aam
jg
out
add
jo
loopne
cmp
adc
dec
add
or
or
xor
add
data16
jo
mov
or
and
addr16
rcrb
adc
sbbl
test
mov
cwtl
adc
mov
filds
cmp
dec
push
cmp
push
push
inc
jle
mov
pop
mov
or
mov
xorb
rcrb
movzwl
leave
bswap
add
add
add
loop
push
pop
jp
add
cmp
or
movsl
neg
inc
dec
xchg
jb
outsl
mov
cs
add
outsl
out
dec
dec
out
inc
mov
add
xor
cs
movl
push
fwait
xchg
mov
and
sahf
pop
test
daa
and
test
fmulp
jnp
xor
sub
and
stc
or
add
dec
xchg
xchg
imul
xor
and
scas
rclb
call
lcall
pop
ret
outsl
testl
add
rolb
enter
fsubrl
in
test
cmp
inc
hlt
pop
enter
cld
pop
pop
sahf
or
add
fs
cmp
jl,pn
mov
push
mov
leave
insb
fmul
loop
cmpsl
inc
invd
jae
and
dec
inc
push
dec
inc
dec
roll
movmskps
inc
push
in
loopne
popa
lahf
inc
inc
inc
adc
jbe
jb
adc
mov
pop
cmc
not
js
push
dec
dec
dec
dec
adc
mov
sub
fldenv
mov
mov
lods
add
out
insl
push
push
jp
insb
jle
inc
insb
xor
push
mov
add
aaa
sbb
xor
fildl
aad
inc
push
insl
imul
adc
adc
inc
aas
daa
push
and
test
lret
incb
add
add
pop
addb
rolb
sbb
push
flds
mov
mov
sbb
and
xchg
pop
es
cld
nop
pushf
cmp
incb
aas
push
pop
jmp
rol
sahf
mov
cld
add
pop
or
push
aas
shlb
dec
jg
add
pop
dec
es
add
or
dec
or
sbb
pusha
roll
mov
add
psubb
insb
ss
addr16
push
out
ficompl
iret
shr
cmp
add
loopne
lock
sbb
pop
jnp
xchg
insb
push
aas
pop
cs
pop
add
insb
push
out
pop
lock
xor
pop
std
out
int
cmp
add
xchg
jbe
popf
out
jle
rolb
or
jo
xor
jnp
iret
rolb
incb
lock
jl
aas
pushl
or
push
in
iret
leave
add
nopl
es
repz
add
add
nopl
cs
enter
add
clc
mov
or
mov
daa
add
mov
add
das
aas
dec
or
negl
daa
add
pop
insb
ds
push
std
clc
lock
aas
mov
pop
clc
dec
add
mov
outsl
jnp
inc
pop
outsl
clc
popl
jb
pusha
mov
push
jnp
inc
add
xlat
pop
sbb
sub
addb
pminub
aas
pop
jle
fsubrs
ret
addr16
pop
inc
xchg
fnstcw
adc
adc
cmp
adc
jae
push
mov
stos
sbb
cld
pop
push
lods
and
aaa
add
adc
lock
push
aad
jo
loop
adc
cs
std
fldcw
or
jle
or
push
sub
in
fnstcw
inc
addl
pusha
jp
ss
xor
sbb
push
push
sbb
jne
mov
xchg
ret
shll
cmp
sbb
jl
sbb
push
sbb
or
fdivr
je
incl
out
mov
aam
arpl
aam
push
sbb
or
pop
add
sbb
or
inc
jnp
xor
add
mov
sub
adc
mov
jle
daa
sbb
cmp
xor
daa
and
cs
pop
lret
fisubs
adc
and
jae
fidivl
inc
cmp
clc
dec
push
dec
push
jae
int
mov
push
push
daa
inc
outsb
fucom
cmp
daa
xchg
mov
ss
sbb
cltd
sarl
mov
jge
stc
push
ja
push
daa
ret
mov
sbb
or
add
mov
lahf
adc
cmp
xor
cmp
inc
and
cmpl
xor
and
fiadds
mov
daa
in
jns
dec
sub
repz
xor
mov
repnz
dec
sub
clc
xor
call
dec
and
push
fnstsw
mov
int3
push
cmp
and
and
cmp
jmp
mov
push
dec
pop
push
cmp
fldenv
xor
push
xlat
repnz
jnp
lret
push
and
xor
push
or
fistl
mov
in
push
xbegin
sbb
andl
adc
lahf
jne
decb
add
ja
testl
inc
inc
inc
or
dec
ljmp
insb
aas
scas
dec
push
pop
xor
outsb
daa
addr16
inc
aad
mov
dec
dec
cs
mov
out
in
adc
sub
movsb
sub
dec
clc
add
test
adc
daa
add
mov
in
fdivs
mov
stos
mov
sbb
jl
adc
xor
inc
arpl
ret
cmc
mov
ds
shll
xor
arpl
add
daa
lahf
cmp
data16
leave
xchg
inc
mov
out
fidivl
push
push
fwait
daa
push
outsb
paddusb
in
es
fstpl
dec
lret
ljmp
inc
inc
es
daa
dec
into
fld1
cmp
daa
xor
xor
in
repz
sub
jecxz
jp
push
and
test
xor
in
inc
rolb
or
stos
movsb
xchg
mov
inc
repz
daa
xor
xor
cmpsb
arpl
das
or
js
bound
in
into
xchg
lahf
daa
push
inc
sub
push
mov
dec
push
xor
push
sub
sub
add
outsb
data16
inc
jge
and
out
push
inc
mov
daa
cmpl
and
inc
aas
call
aas
clc
daa
fsubrs
jo
pop
pop
lock
jns
fsubs
movsb
pop
xor
fimuls
mov
dec
xchg
daa
mov
subl
mov
lahf
jmp
in
loope
divl
adc
adcb
mov
fsubrl
out
xor
cmp
sbb
xchg
xchg
sbb
loop
fwait
addl
pop
adc
daa
popf
in
dec
in
jl
and
clc
or
insb
mull
sbb
xchg
fcoms
mov
dec
xor
dec
xor
dec
daa
jo
fldt
dec
daa
dec
daa
clc
dec
fidivrl
cltd
or
dec
sarb
dec
jl
push
pop
out
pop
dec
rorl
sbb
out
mov
incl
push
pop
cltd
cltd
push
mov
mov
insb
js
cltd
cltd
and
xchg
test
daa
cmpsl
mov
xchg
repz
cmp
push
xor
and
les
dec
jb
sub
push
pop
sahf
sbb
push
outsl
inc
outsb
xor
daa
cmp
es
fsubs
shlb
stos
and
push
mov
movsb
adc
js
xor
and
lahf
stos
popa
jo
es
mov
icebp
rorb
push
cmovbe
pushf
aaa
es
fstpt
repz
daa
aaa
cltd
cmpsl
aaa
daa
and
cmpsl
test
stos
and
aaa
ja
pop
mov
push
addr16
pushf
outsb
push
imul
repz
fnsave
push
mov
mov
dec
incl
mov
stos
mov
rorb
push
push
and
push
in
pop
adc
or
sub
push
ja
pop
mov
sbb
pushl
add
into
in
cmp
jae
xor
pop
add
cmpsl
mov
pop
cld
inc
aaa
add
xor
fcmovbe
cmp
inc
push
aaa
jae
push
ret
movsb
ja
pop
or
xor
push
subb
jg
inc
mov
ja
repz
les
orb
repnz
add
incl
inc
repz
enter
aas
xor
nop
dec
ret
push
aaa
outsl
ja
cmpsl
aad
ljmp
pop
lret
test
jo
pushl
sbb
sahf
jo
pushl
jo
xchg
mov
fidivrl
and
jns
inc
xlat
mov
sbb
push
aas
push
sbb
call
insl
in
incl
aas
pop
rolb
fdivrs
jae
filds
and
sbb
ja
fs
xor
incl
pop
add
stos
push
outsl
jb
jmp
jo
repnz
jo
ja
je
scas
popf
ja
ja
pop
ret
adc
aaa
adc
pushf
dec
mov
and
pop
into
in
cmpsl
mov
cld
xor
jae
mov
out
into
add
pop
sbb
int3
in
push
aas
mov
pusha
sbb
out
ljmp
xchg
out
decb
iret
ret
jae
xor
test
ja
pop
add
mov
repnz
aas
add
add
pop
mov
ds
jae
push
cmp
pop
jle
xor
pop
imul
jmp
sbb
pop
or
dec
push
add
ja
stos
jle
shl
gs
aaa
add
aas
lock
jbe
jl
add
aas
shlb
push
movsl
out
stc
js
aaa
jbe
das
aaa
jae
fsubrp
mov
pop
sbb
aaa
jae
mov
lea
push
sbb
shlb
or
aaa
pop
jne
pop
aaa
add
fimuls
push
jae
mov
pop
iret
xor
cmp
jg
push
cmp
stc
mov
jo
jo
aaa
mov
repz
pop
sub
lahf
pop
jae
mov
fiadds
jae
adc
outsl
pop
mov
orb
adc
xor
sbb
stc
repz
add
pop
mov
lock
jns
mov
out
xchg
es
jnp
xor
or
inc
add
jne
add
inc
andl
sarl
dec
ja
cmp
adc
inc
push
int
adc
sti
push
sub
add
dec
outsl
es
ljmp
cmp
pop
mov
outsl
fwait
and
xchg
hlt
outsb
outsl
jnp
and
push
dec
arpl
ja
cmpsb
inc
jp
fwait
lret
and
dec
mov
daa
outsl
sub
add
dec
insb
push
push
xchg
sub
repnz
sub
jns
ljmp
sbb
arpl
push
mov
push
mov
cmpsl
je
out
movsb
ret
ret
xor
dec
test
loope
xor
fidivrs
bound
and
loopne
lahf
jle
gs
popa
insl
or
aas
push
ja
cmp
outsb
nopl
jmp
jbe
lds
bnd
push
sub
je
mov
dec
inc
pop
das
or
xlat
shll
ja
xchg
cld
rolb
ljmp
xchg
sti
and
mov
mov
and
sbb
movsl
push
jb
cli
push
sbb
xlat
push
push
push
push
xchg
dec
in
sub
dec
es
pop
shlb
lret
pop
jb
xchg
stos
dec
jnp
mov
fidivrs
arpl
xor
dec
mov
push
push
jnp
cmp
xchg
or
cmp
push
arpl
cmp
fiadds
imul
inc
insl
jmp
gs
push
inc
adc
sahf
pop
stos
movsl
das
add
add
add
jno
sbb
push
mov
outsl
cmp
add
icebp
jl,pt
xchg
inc
sbb
push
je
pop
or
dec
rcll
add
ja
pop
push
aas
mov
addr16
out
bound
stos
or
inc
xor
cmp
sbb
jns
ficompl
push
jns
in
aas
push
dec
inc
jo
arpl
mov
push
mov
jb
xor
stos
cs
mov
andl
daa
aas
pop
cmp
sbb
lcall
jg
ljmp
fwait
ljmp
roll
push
lcall
pop
shll
lahf
jne
cmpb
mov
ljmp
insl
lahf
jae
or
insb
jecxz
pop
adc
out
add
imul
pop
and
adc
inc
sahf
dec
lahf
inc
push
imul
rolb
rolb
mov
dec
pop
jbe
sub
testb
jp
or
ja
fwait
fs
add
dec
cmc
inc
and
dec
fmull
sub
je
ja
inc
inc
lcall
pop
out
insb
decl
pop
stos
mov
mov
mov
dec
jne
addb
scas
mov
or
push
push
psubsw
add
mov
lods
mul
mov
inc
push
push
or
addr16
or
push
daa
fstpt
adc
mov
xlat
imul
ds
shl
add
lds
mov
jae
cli
hlt
adc
jae
xor
jno
or
mov
add
and
push
mov
dec
out
mov
or
imul
push
out
add
imul
ja
push
or
xor
inc
jecxz
mov
arpl
imul
stos
cmpsb
arpl
mull
or
push
paddd
cmp
bound
daa
test
jae
rcll
sub
shlb
ffree
outsl
mov
test
mov
sbb
and
jb
pop
xor
or
lahf
push
mov
js
iret
fs
push
je
ss
xor
scas
dec
lods
lahf
inc
sbb
lods
shlb
pop
add
cmp
pop
xchg
xchg
pop
fwait
pusha
mov
dec
fidivl
xchg
push
adc
push
insb
pop
and
mov
xor
rcr
and
loop
inc
sbbl
xchg
mov
mov
add
xchg
push
cmpsl
add
subl
imul
dec
pop
dec
dec
xor
shrl
lret
inc
in
mov
add
inc
aam
push
out
xchg
push
adc
add
outsl
inc
fiaddl
mov
pop
imul
ds
fiaddl
add
push
jnp
mov
outsl
repz
ret
push
outsl
sub
xor
insb
sub
testl
bound
test
xchg
insl
lds
sbb
and
stos
mov
insl
pop
mov
out
jns
and
inc
lret
loopne
and
imul
icebp
mov
dec
ficoms
ss
testl
or
push
mov
out
idiv
pop
sbb
cmp
push
daa
or
mov
mov
pop
pop
insb
jp
sub
add
mov
mull
add
dec
add
loopne
inc
inc
outsl
mov
add
add
mov
lea
mov
je
aaa
popw
divb
ret
mov
inc
sarl
add
mov
fistps
push
stos
movsb
fwait
push
faddl
inc
or
or
and
xchg
mov
gs
dec
inc
or
pop
pop
pop
mov
repz
xor
cmp
adc
adc
out
sti
sarb
outsl
imul
aaa
sbbl
adc
iret
fadds
xchg
aaa
add
xlat
push
scas
dec
cmp
xor
mov
pop
sub
pop
add
adc
jae
ret
xlat
int
outsb
iret
inc
mov
pop
mov
and
movsb
jbe
sbb
cmpsb
pop
test
sbb
pop
in
or
xor
adc
cmp
je
and
xlat
out
scas
push
inc
cli
sub
mov
or
cmp
das
xchg
or
fstpl
sti
addr16
fisttps
pop
jbe
pop
cmp
push
cmp
pop
jo
cmp
mov
inc
xor
js
push
addr16
fcomps
xlat
xor
mov
or
dec
dec
xor
ja
scas
addr16
dec
cmp
cmp
insb
stos
or
or
lcall
push
xlat
xchg
je
cs
mov
daa
iret
aad
sub
push
xor
sbb
mov
jb
cwtl
fdivrs
xchg
sbb
jo
ret
xchg
out
pop
mov
adc
mov
ja
push
pop
sbb
adc
jmp
pusha
sbb
jmp
adc
jae
and
jae
outsl
jp
fisubs
sub
mov
mov
pop
and
lret
sti
fisttps
mov
nop
or
add
les
sahf
das
mov
outsl
xchg
pusha
add
arpl
addr16
mov
popa
adc
sbb
jg
dec
adc
mov
inc
adc
mov
push
pop
inc
sub
pop
aad
mov
add
andl
es
dec
sti
mov
mov
imul
mov
test
adc
imul
fcmove
shl
cmp
jp
arpl
push
or
mov
sub
test
insl
mov
mov
test
jns
mov
jae
sub
sbb
jecxz
or
fisubrl
sub
push
sub
fisttpl
addr16
shlb
xchg
push
mov
popa
push
insb
push
imul
dec
add
rclb
xor
scas
adc
test
dec
sub
enter
out
pop
pop
insl
push
xchg
push
mov
out
mov
scas
pop
xor
aam
in
out
imul
or
out
jg
dec
add
lods
sbb
jo
imul
push
test
push
mov
inc
lcall
shrl
dec
sbb
sti
xlat
outsb
or
das
popa
push
cmpsb
pop
pop
add
cwtl
or
jae
insl
add
daa
cmp
test
sub
addr16
inc
daa
inc
pop
mov
or
push
jb
dec
aaa
loope
or
lods
call
and
add
inc
mov
loop
adc
push
ret
shlb
shrb
push
sbb
mov
ja
pop
pop
imul
pop
push
dec
test
jp
imul
lret
imul
push
sub
repz
xor
and
adc
sbb
scas
daa
push
lcall
pop
cmp
add
and
or
jbe
cs
sbb
outsb
xor
sbb
and
mov
push
mov
daa
iret
sub
add
cmp
add
cwtl
movl
pop
push
pop
es
sbb
inc
insl
add
jbe
test
fistl
mov
mov
pop
loope
sbb
pop
pop
in
sub
mov
add
shrb
shl
adc
jae
mov
fwait
das
mov
mov
sub
cli
xlat
lods
rolb
sub
inc
and
adc
sub
mov
pusha
xlat
sub
arpl
push
xchg
and
or
push
arpl
ret
sub
je
out
push
or
and
ret
pop
jne
push
popa
enter
mov
mov
push
cmpsl
mov
fisttpll
xor
inc
sar
pop
xchg
adc
adc
in
das
sub
mov
push
xchg
push
and
arpl
insb
push
or
jo
inc
pusha
jecxz
mov
add
mov
test
cmp
mov
aaa
mov
in
loop
jbe
push
mov
pop
inc
jmp
cmpsl
test
adc
insb
fwait
pop
or
outsl
jbe
mov
jg
push
mov
mov
push
push
or
or
push
pop
addb
jnp
pop
cmpsb
add
push
mov
or
mov
xorl
scas
sbb
lahf
xor
xorb
outsl
jae
xchg
or
cmp
ret
push
xor
pop
aas
je
stos
loopne
stos
scas
lahf
ljmp
cli
insl
adc
jmp
add
mov
pop
adc
pop
bound
lds
add
mov
lret
roll
lods
push
cmp
adcb
jnp
and
jg
mov
adc
sbb
aad
xchg
cmp
test
mov
ja
push
fmull
pop
sub
sbb
arpl
xor
mov
and
adc
sbb
inc
sbb
aaa
mov
imul
js
and
push
jmp
jbe
xor
or
mov
sub
push
pop
mov
lock
dec
ljmp
pop
adc
or
inc
sti
xor
xchg
xlat
sbb
add
dec
stos
bound
fwait
xchg
sbb
pop
popl
xchg
popw
inc
mov
push
loop
mov
jae
push
and
and
xor
mov
push
lods
pop
sub
bt
or
xor
cmp
sarb
jg
jecxz
sub
add
mov
imul
jo
mov
ret
adc
adc
stos
imul
orl
imul
sti
sti
jns
adc
cs
stos
scas
or
xchg
sbb
imul
jl
xor
sub
loopne
pushf
jo
adc
cmpsb
adc
arpl
imul
iret
xchg
dec
push
imul
lcall
ret
mov
pop
fwait
cmp
movsb
sahf
mov
jno
sub
je
pop
jo
cmpsb
movl
mov
pushf
cmp
and
das
push
adc
push
daa
or
inc
inc
mov
outsb
jo
aaa
popa
mov
push
sub
ficoms
or
mov
adc
sub
nop
xor
pop
jns
dec
ret
and
dec
xchg
dec
mov
inc
cmp
lods
mov
ljmp
jae
xchg
xor
adc
sub
arpl
lods
popa
jnp
lods
aaa
adc
jmp
xchg
sub
push
jb
aas
add
push
push
jo
dec
adc
mov
test
loop
xor
adc
sub
adc
shlb
pop
push
lods
or
mov
add
sub
inc
add
popa
loope
sbb
xchg
adc
outsb
cmp
pop
xor
icebp
imul
repnz
movsl
adc
adc
add
xor
mov
mov
push
addr16
sbb
fmuls
jns
push
sub
add
test
mov
xchg
aas
pusha
gs
push
dec
push
jle
or
xorb
sbb
adc
insl
pop
cmpsl
adc
shlb
push
js
adc
xorb
or
sbb
xchg
cltd
or
mov
bound
aaa
add
sbb
js
push
insl
inc
mov
inc
shlb
fisubrs
cwtl
inc
xchg
into
adc
ja
and
repnz
sub
or
je
xchg
lret
inc
sbb
mov
push
sbb
mov
inc
lret
sti
adc
push
push
adc
js
sti
roll
in
push
push
inc
leave
shlb
push
in
push
out
inc
repnz
cli
dec
adc
fadds
and
pmulhw
les
add
mov
add
clc
addl
pop
roll
mov
fs
std
pop
or
xor
xor
or
cmp
inc
pop
psubusw
pop
or
imul
jl
or
add
mov
cmc
or
push
push
add
xchg
push
ret
xchg
push
add
or
and
inc
and
and
pop
xchg
mov
pusha
or
iret
or
icebp
cld
mov
xchg
leave
or
add
add
add
roll
addb
and
or
dec
pop
adc
dec
mov
dec
pop
add
rclb
jae
iret
adc
imul
dec
mov
lret
addb
mov
and
insl
cmpsl
sbb
dec
popa
fstpl
cld
jl
xchg
pop
sar
mov
inc
mov
dec
in
int
daa
movsb
flds
push
and
and
adc
lret
and
add
inc
andb
xor
jl
add
cmc
sbb
dec
pusha
or
call
xchg
or
and
xor
push
lret
rolb
xor
pop
jnp
add
xor
inc
adc
xor
fimuls
ss
sub
xor
cmp
cmp
repz
cmp
xchg
das
xor
xor
xor
inc
cmp
xor
fs
cmp
inc
or
jle
test
inc
xor
xor
and
gs
xor
xchg
gs
in
and
popa
add
xor
jp
arpl
sub
and
cmp
jb
and
scas
adc
push
dec
xchg
pusha
adc
dec
or
or
xchg
js
dec
jne
mov
and
pop
fs
pop
push
orl
and
add
pop
leave
xor
adc
outsl
pop
inc
sbb
add
mov
or
ret
loope
lock
orb
mov
pop
sub
sbb
adc
or
and
ret
dec
push
pop
andl
sbb
mov
popf
inc
xchg
mov
mov
faddl
add
pusha
adc
or
or
insl
mov
or
arpl
aad
mov
xchg
mov
insl
insb
jbe
push
or
and
push
lods
lds
or
jne
or
les
bound
popl
xor
and
fbld
xchg
es
les
sbb
cmp
das
push
jb
pusha
testb
or
jno
or
addl
in
mov
pop
adc
add
add
adc
pusha
adc
mov
xor
sbb
in
pop
std
inc
and
adc
sbb
and
push
pop
add
in
sub
cmp
dec
pop
cmpsl
or
and
nop
push
lds
xor
rorl
sub
xchg
repnz
repnz
add
or
es
test
scas
lea
pusha
and
and
sub
and
add
xchg
in
mov
sbb
xor
mov
xor
inc
subb
dec
and
sub
add
leave
test
xor
or
pop
rol
jno
insb
push
jae
fldcw
sub
lret
pop
pusha
xor
push
lea
add
pop
bound
xchg
dec
cmp
push
add
cmpsb
mov
adc
adc
out
or
movsl
adc
pushf
pop
adc
adc
adc
push
push
aaa
nop
add
rolb
xor
push
shlb
push
push
jb
mov
sub
add
mov
push
or
xor
leave
shrb
fstpl
jbe
aad
es
or
mov
pop
cmp
mov
icebp
push
or
and
cmp
xor
out
mov
xchg
add
push
ret
add
adc
daa
scas
in
scas
add
add
scas
in
add
loope
addl
aas
and
add
pusha
and
xor
daa
push
mov
arpl
add
loope
mov
lret
push
les
inc
aas
imul
adc
mov
sbb
add
lods
mov
add
sbb
dec
aaa
and
xor
popa
in
das
sbb
add
sbb
imul
add
sub
mov
add
enter
and
jle
push
outsb
insb
les
icebp
pop
popa
sbb
sub
and
dec
imul
pop
les
pop
popa
test
and
xor
pop
and
imul
pop
insl
xor
mov
sbb
stos
subl
sub
sbb
jb
loop
inc
and
jo
jp
ret
lods
cltd
pusha
movsl
mov
aad
sub
mov
add
cmpsl
inc
loope
imul
test
imul
mov
adc
andb
pop
add
dec
ret
mov
xchg
adc
xor
test
insb
pop
pop
sbb
leave
inc
pop
mov
xchg
and
test
jo
ret
imul
inc
popa
movsl
ret
cltd
push
push
shl
pop
hlt
push
cmpsl
sub
sbb
loopne
lods
inc
add
sbb
inc
es
push
int3
pop
out
sbb
add
adc
insb
jnp
sbb
xor
sbbl
hlt
inc
aam
push
mov
fwait
cld
sbb
add
outsl
or
lret
jo
stos
dec
add
xchg
mov
inc
pop
xlat
sbb
sbb
xor
lret
fistpl
mov
xchg
repnz
push
out
inc
xchg
cmp
add
addr16
dec
daa
pop
insl
pop
push
and
mov
inc
dec
or
nop
sbb
stos
dec
add
add
dec
lods
je
rcll
sub
inc
mov
pusha
xor
jl
push
cmp
adc
jge
add
out
imul
loop
sbb
adc
shlb
or
cmpsb
inc
adc
clc
lcall
loope
sub
xor
ret
inc
adc
push
int
and
enter
rorb
pop
and
repnz
icebp
xor
xor
ja
insb
lea
inc
xor
push
mov
cmp
cmpsb
test
ds
inc
or
in
jo
sub
dec
inc
add
in
sub
adc
and
mov
push
and
and
pusha
hlt
push
sub
dec
outsl
movl
sarl
push
insb
outsl
shlb
push
push
mov
pusha
outsb
adc
das
and
sbb
cmp
rcrb
roll
jns
les
fwait
sub
inc
sub
mov
in
scas
mov
lods
cmc
icebp
and
aaa
mov
push
ret
or
xor
mov
add
inc
insb
dec
ss
adc
stos
pop
gs
sub
fadds
xorl
cs
adc
loopne
fwait
sbb
loope
dec
push
xor
dec
adc
mov
lret
daa
add
pop
inc
dec
inc
movsl
mov
and
jmp
cmpl
loope
test
in
inc
fcoms
insb
sbb
sti
pop
push
outsb
sbb
inc
inc
add
push
ds
cs
sub
enter
xlat
fidivl
fidivrl
outsb
adc
orb
jns
and
push
push
mov
xchg
sbb
push
aaa
sarb
fsubs
pusha
jnp
push
fiadds
jae
xchg
or
inc
or
adc
js
jno
icebp
add
mov
xor
adc
push
or
cmp
sub
insl
add
cmp
inc
inc
pop
jmp
lea
mov
inc
cmpsl
sbb
mov
and
sbb
or
frstor
inc
push
test
sub
mov
and
or
adc
inc
sbb
cltd
ds
insl
lret
sbb
sbb
push
ret
xor
mov
fisttpl
dec
or
xor
ds
pop
xchg
stc
popa
sub
aaa
xchg
jne
mov
mov
daa
jnp
or
mov
sub
sarl
xor
push
enter
orb
dec
outsb
dec
mov
sub
cmp
jo
push
imul
sbb
lcall
cmp
xchg
movsl
ret
mov
pop
cmc
dec
push
lods
cmc
les
xchg
addr16
mov
imul
and
mov
sub
pop
mov
dec
jl
mov
pop
movsb
push
popa
pop
outsl
lret
shlb
push
loop
data16
push
and
imul
xchg
insb
and
xor
gs
cld
mov
cmpxchg
sub
push
or
adc
dec
test
lods
sub
add
and
dec
push
ficompl
rcrb
push
es
adc
arpl
jg
sub
arpl
aaa
lret
pop
sub
push
mov
cs
mov
and
pop
in
sub
mov
jae
jp
sahf
pop
mov
sub
leave
cmp
or
push
push
or
add
inc
xchg
push
call
jo
dec
add
adc
leave
repnz
adc
bound
dec
adc
push
xchg
in
pop
and
push
fldt
cmp
add
arpl
add
mov
cmp
jbe
adc
ret
pop
adc
jo
lret
sbb
enter
and
jge
inc
and
inc
pop
mov
int3
dec
sbb
dec
lret
pop
ja
pop
xor
push
xchg
mov
mov
outsl
in
and
cmp
adc
push
pop
jo
aam
insb
or
push
out
dec
inc
test
sbb
insb
ret
add
int
jo
sbb
push
inc
pop
jbe
cmp
xor
mov
push
pushl
aaa
aaa
push
outsl
orb
mov
lret
imul
xor
fstl
loope
mov
push
dec
cmpsl
shrl
dec
adc
mov
test
in
pop
mov
fs
aas
fs
sbb
je
jne
imul
add
mov
data16
or
jb
int3
bound
sar
xchg
adc
jae
xchg
inc
push
cmp
dec
pop
sbb
lea
dec
jge
dec
mov
and
pop
cmp
dec
imul
fs
adc
adc
imul
and
jo
xchg
daa
loopne
imul
sbb
imul
shr
into
fdivs
pop
add
mov
pop
sbb
jae
sbb
sbb
inc
and
data16
ficompl
pop
test
jno
inc
jno
mov
xchg
jp
push
and
xor
mov
and
sbb
xor
sbb
pop
jb
insl
push
popa
inc
inc
and
xor
lods
or
loope
fndisi(8087
inc
push
lret
dec
pop
adc
jbe
sbb
and
shlb
and
push
mov
inc
xchg
push
mov
pop
in
addl
cltd
mov
stc
inc
and
std
mov
cltd
fidivs
sbb
pop
ret
and
outsl
adc
mov
jnp
lret
xchg
inc
inc
jle
fnstcw
add
rcrb
cwtl
adc
in
sbb
and
fsubs
and
mov
mov
es
adc
inc
and
out
dec
sbb
dec
pop
jno
and
adc
xchg
gs
movsb
xchg
fs
pop
gs
ss
push
sbb
lea
dec
pop
pop
gs
outsb
nop
orb
and
mov
pop
and
jmp
lea
dec
ret
pop
mov
xor
sub
mov
jge
fldl
sbb
pusha
aaa
inc
adc
aad
stc
push
fadds
jo
jmp
add
dec
add
inc
sub
shll
daa
mov
add
push
or
mov
subl
mov
dec
sarl
xor
xor
repz
addb
popa
bound
insl
lods
cld
push
pop
addb
xchg
adc
and
add
lock
xor
add
or
addb
dec
push
repz
hlt
in
add
out
push
cwtl
sbb
enter
sbb
repnz
test
add
and
or
add
dec
es
or
xchg
repz
repnz
pop
jo
xor
in
xchg
xchg
cs
pop
pop
mov
sub
mov
add
dec
adc
das
mov
add
add
add
add
add
inc
xchg
sbb
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
dec
add
dec
add
