sbb
add
mov
ss
adc
jno
jg
adc
cmc
call
sbb
iret
add
stos
adc
ss
cli
lret
das
or
pop
jne
jl
xchg
daa
add
pop
filds
add
and
fidivl
mov
repnz
mov
adc
fidivrl
aad
pop
sbb
dec
push
jbe
mov
mov
dec
xlat
inc
loop
mov
cwtl
and
jnp
icebp
in
shrb
push
loope
mov
lahf
jge
movsl
out
stos
pop
mov
mov
cld
pop
push
cwtl
mov
inc
cmpsl
fdiv
xchg
add
in
imul
mov
add
clc
aam
pop
mov
sub
sbb
or
sahf
fldl
push
sbb
jno
adc
mov
jb
cmpl
fldt
inc
pop
sub
cmpb
pop
mov
push
test
data16
sbb
cmp
je
cmp
xchg
movsb
xchg
inc
les
lods
outsl
data16
xor
xor
and
sub
dec
jecxz
test
jge
xchg
aaa
ja
jns
jecxz
jge,pn
push
test
lret
test
dec
insb
dec
pusha
lock
add
mov
add
icebp
dec
fadds
pop
fwait
xor
pop
lret
pop
fs
push
cmp
or
gs
pop
movsb
push
dec
cmp
iret
pop
push
pop
out
push
or
push
test
imul
adcb
adc
adc
hlt
mov
push
jne
add
mov
push
and
pop
add
and
cltd
enter
mov
dec
rorb
mov
push
inc
icebp
mov
hlt
pop
dec
mov
sti
pop
jbe
xor
into
es
adc
add
fimuls
out
push
aad
xor
jecxz
lahf
inc
mov
mov
xor
mov
rolb
xchg
sbb
data16
and
and
shlb
sub
movsl
inc
clc
sbb
or
cmpsl
xlat
mov
cmpsb
test
add
push
sarb
aaa
xor
sub
test
bnd
mov
sarl
inc
hlt
dec
push
ds
sbb
fists
lret
xor
hlt
push
xchg
lods
das
sbb
or
jecxz
sub
jle
out
pop
scas
mov
xor
xchg
adc
sbb
in
mov
xor
aaa
sarl
jbe
jne
and
lret
movsb
fidivl
incb
cmp
xor
jne
sub
or
arpl
lods
cs
std
outsb
daa
imul
fldt
mov
add
jno
mov
lahf
scas
aad
jno
scas
testb
cli
mov
fdiv
in
enter
jo
jno
shlb
js
jmp
rclb
aaa
std
pop
mov
cmp
loope
aaa
ljmp
push
std
jecxz
fcomps
aad
bound
repz
xchg
lret
out
int3
dec
pop
fwait
cmp
sub
mov
xchg
cmp
sub
and
aaa
out
imul
stos
out
test
loop
int
mov
lret
adc
push
jecxz
movsl
mov
test
in
punpckhdq
adcl
mov
sarb
mov
cli
mov
inc
ja
popa
ficoms
gs
aad
pop
into
imul
pop
inc
insl
repnz
jb
mov
cmp
dec
mov
sub
xchg
dec
sbb
dec
fwait
xchg
or
sarl
outsb
sub
lret
xor
inc
ja
imul
pop
inc
jg
orl
popf
cmc
lcall
mov
cmp
and
lcall
sub
xchg
xor
push
and
in
scas
rolb
lret
push
inc
int3
add
popf
aad
mov
cld
imull
and
mov
inc
subb
loope
scas
dec
hlt
fdivp
fidivrl
aad
aaa
push
xchg
scas
sub
add
sub
cli
jp
sbb
jge
mov
push
mov
push
push
fmuls
jl
mov
shr
dec
add
push
add
xchg
std
int
adc
popf
arpl
testb
call
mov
inc
sbb
add
sub
xchg
dec
out
dec
cltd
outsl
push
stc
or
and
aad
cld
and
dec
lods
pop
ret
cs
xchg
mov
sub
jnp
mov
push
xor
cwtl
popf
daa
arpl
add
and
mov
sub
adc
shlb
mov
mov
stos
jl
loope
ds
and
scas
jns
inc
xchg
fmull
movsl
jl
popf
xchg
fstpt
loope
sub
cmp
jns
mov
cmp
xchg
jnp
dec
test
repnz
or
add
test
and
and
mov
in
and
add
cmp
or
xlat
jecxz
and
sbb
or
mov
imul
js
filds
cmovs
call
add
adc
fisttps
out
sti
pop
lods
movsb
in
lods
popf
inc
jp
inc
fdivl
sti
xlat
sti
jle
clc
xchg
pop
aad
fwait
lds
ss
mov
subb
out
xor
in
xor
cltd
add
sub
mov
ret
out
rol
fistl
mov
push
adc
hlt
xchg
push
sbb
ret
and
and
push
pop
ret
mov
jo
ja
std
imul
aas
pop
in
lea
outsl
jle
aad
and
add
cmp
daa
repnz
shll
fiadds
lds
popf
mov
into
pop
jb
push
and
push
mov
fimuls
fdivl
push
ds
mov
xor
popf
cmp
and
mov
push
mov
iret
mov
xchg
xor
shufps
test
adc
adc
inc
mov
leave
xchg
inc
push
fldt
std
rorl
push
mov
cmp
cltd
movsl
and
ja
add
add
fwait
mov
add
xchg
jecxz
adc
lock
test
jo
xchg
enter
inc
jl
jle
fs
push
or
cltd
lea
sbb
stos
mov
push
mov
adc
lahf
mov
test
jae
mov
add
mov
jp
out
movsb
mov
aam
lcall
dec
sbb
lds
pop
mov
ja
adc
arpl
rolb
hlt
mov
adc
pop
int
repz
xor
loope
push
cld
scas
mov
or
int3
orb
sbbl
aad
sub
in
gs
push
xchg
pop
and
imul
ret
mov
dec
jbe
push
or
stos
lret
cmp
gs
sbb
or
and
inc
cmp
jmp
ds
xchg
mov
xchg
into
and
popa
fstps
aas
stc
test
jbe
shlb
jo
and
inc
test
popa
test
adc
faddl
lods
in
sbb
ljmp
mov
mov
jge
pop
mov
cwtl
and
add
aas
dec
mov
leave
imul
sbb
in
popf
pop
mov
rorb
add
mov
fsubrl
lods
inc
lea
scas
jbe
rorl
pop
xchg
stc
or
pop
mov
jp
and
xchg
lret
xchg
or
sbb
dec
les
int
push
mov
pmaxsw
inc
sbb
xor
dec
adc
fdivr
push
pop
xor
mov
scas
push
lret
adc
pushf
mov
pop
negb
movb
shr
sbb
sub
int3
xchg
dec
add
cmp
add
iret
loopne
sbb
add
mov
adc
and
add
dec
rcrb
push
outsl
in
ja
xchg
adc
jle
mov
cmp
inc
bound
das
pop
pop
test
jp
mov
cmp
lahf
jo
sti
cwtl
std
xchg
loope
fadd
aas
aas
mov
and
popf
ss
xor
inc
mov
in
and
ret
push
int
add
ja
mov
pop
dec
mov
sub
adc
sub
loopne
addr16
inc
ljmp
mov
mov
xor
dec
mov
cltd
enter
std
jns
jbe
fwait
dec
xor
popa
xchg
xor
es
enter
das
push
jl
stc
or
cli
ds
add
adc
jns
cli
clc
lock
test
adc
sbb
repnz
adc
ret
xchg
test
pop
adc
jno
or
leave
inc
in
sbb
sbb
addr16
mov
ret
shlb
orl
mov
fnstenv
cmpsb
loope
in
inc
xor
js
and
lods
sub
mov
insb
rcll
push
loopne
in
sti
add
out
fucom
mov
mov
setge
jp
or
fcomps
cmp
leave
std
cs
loopne
aas
mov
add
stc
mov
push
push
in
add
pop
xchg
pop
mov
lock
in
gs
mov
lcall
sbb
mov
sub
push
sbb
mov
sub
out
outsb
shll
push
into
mov
jb
xchg
inc
jns
mov
outsb
rolb
inc
cmpl
sub
add
push
in
lret
sti
gs
pop
mov
outsl
outsb
je
xor
fsubrs
out
lret
dec
test
inc
push
xchg
orb
pop
add
mov
imul
mov
fists
add
loope
in
xchg
xchg
in
lahf
xchg
inc
negl
or
imul
inc
inc
adc
sub
jmp
mov
cmc
xlat
mov
lea
sti
xchg
sbb
into
shl
mov
test
jmp
or
arpl
hlt
cmpsl
push
mov
lods
xchg
adc
xchg
mov
out
sbb
mov
aas
cld
dec
insl
dec
fisubl
aam
push
push
sahf
add
clc
mov
mov
mov
and
push
mov
and
sbb
cmp
int
aad
jns
push
xchg
sub
adc
sub
inc
in
jb
in
inc
cmpsb
push
xor
fsubrs
dec
pop
pop
das
std
push
loope
clc
mov
cld
cli
sub
outsl
outsl
pop
push
sub
clc
sahf
leave
popf
cmpsl
andb
push
orl
jp
mov
jne
sub
jne
jge
insl
and
cli
in
or
out
sti
mov
gs
in
push
jns
pop
push
jnp
mov
inc
adc
push
pop
mov
aam
aam
enter
pop
int
into
add
add
pop
fsubrl
push
shlb
jg
adc
imul
int
jecxz
mov
mov
lret
leave
xchg
nop
aam
das
sbb
xchg
inc
cvtps2pd
or
mov
xchg
aaa
rclb
xchg
xorl
adc
test
int3
minps
cmp
xchg
aam
mov
dec
xchg
je
sahf
xor
dec
fxch
dec
js
in
push
mov
inc
mov
cmp
pusha
xchg
pop
shlb
loopne
and
loopne
jge
dec
or
mov
dec
push
out
decl
xchg
mov
out
add
cltd
adc
test
push
lods
pop
mov
inc
insl
add
and
stc
pop
pusha
pop
jno
inc
addr16
pop
jns
gs
mov
cli
jnp
icebp
mov
xor
or
or
call
mov
xor
dec
clc
in
jl
and
daa
push
push
push
cmp
mov
imul
or
jmp
ret
cwtl
pop
sbb
mov
jl
setle
shrb
insb
mov
andl
hlt
mov
out
and
nop
mov
jecxz
gs
lea
jp
inc
ljmp
test
scas
inc
sub
pop
outsb
cmp
es
ficoml
add
push
lods
divl
gs
adc
and
mov
pop
sub
sub
shl
and
enter
mov
std
outsb
cmpsl
imul
push
lock
push
dec
inc
dec
mov
xchg
cmp
outsl
outsb
or
pop
adc
popa
mov
cmc
rcrb
jle
lods
subl
sbb
imul
inc
fistl
lds
bound
cmpsb
pop
mov
mov
xchg
insb
xlat
push
stc
js
scas
clc
xor
es
inc
jnp
rcl
sub
adc
repz
jecxz
mov
or
mov
int3
test
fcmove
jmp
shll
ret
imulb
xor
add
mov
fs
jmp
aaa
xchg
pop
in
mulb
outsb
movsbl
in
test
jno
out
mov
test
movsl
popa
mov
fstp
imul
cli
test
mov
leave
inc
mov
pop
mov
je
push
xor
aaa
aaa
push
out
aam
pop
js
or
mov
jmp
fs
xchg
insl
gs
jl
loopne
std
jae
fptan
je
stos
ljmp
push
pop
inc
pusha
xor
xlat
xor
mov
ljmp
inc
testl
sub
adc
jl
out
cld
and
jg
cmp
sbb
clc
pop
mov
dec
imul
popf
jle
call
movsb
push
jnp
jns
adc
add
push
ret
fadds
sbb
sbb
aas
ljmp
dec
lcall
pop
dec
jae
aas
psubsb
sub
test
pop
in
jg
cmpsl
sub
jle
loope
out
jl
fildl
or
pop
fadd
jge
mov
jmp
or
jp
cmc
push
inc
inc
popf
div
dec
cmp
and
adc
or
pop
jmp
or
stc
adc
je
leave
je
jle
testb
push
cmpsb
into
les
mov
lahf
in
or
push
pop
ret
repnz
out
mov
inc
test
je
push
loop
fstpt
adc
filds
mov
fstp
adc
sub
dec
and
pop
daa
lahf
cmpsb
ja
fsubr
mov
or
loopne
popf
push
bound
clc
jne
lahf
out
rolb
negl
rclb
out
mov
subb
push
fmuls
push
call
sub
rcl
adc
sbb
inc
ficoms
push
mov
xor
sub
outsl
adc
sti
jecxz
aas
jo
pushf
gs
loope
ja
arpl
mov
pop
sub
adc
std
or
mov
icebp
clc
dec
pushf
adc
adc
and
sbb
imul
or
jg
mov
jecxz
mov
pop
rcll
or
or
sbb
jmp
pop
insb
sahf
lahf
cmc
out
fisubl
and
adc
push
xor
or
ljmp
mov
lock
sub
cmp
loopne
aas
jmp
cwtl
das
into
cmp
scas
aaa
sub
ds
push
jmp
test
popa
bswap
inc
insl
sub
jle
mov
lret
leave
int
inc
mov
adcl
test
push
and
push
repz
test
xlat
cwtl
pop
adc
push
mov
mov
in
adc
rorb
in
aas
dec
mov
push
movsl
xlat
stos
call
mov
jecxz
xchg
es
sahf
mov
xor
inc
pop
add
lods
sub
testl
mov
cmp
push
dec
pop
or
xor
popl
cs
push
cwtl
lahf
cmp
mov
lock
jl
jnp
dec
idivl
cmp
lds
fisubrl
sarl
or
int3
or
loope
adc
or
lods
incb
xchg
or
test
pop
xor
and
pop
shrl
or
ret
sbbb
outsb
push
and
je
xchg
push
xor
or
cmp
orb
in
cmpsl
mov
or
lret
adc
movsb
pop
jae
inc
dec
fisttpl
je
sarl
ja
mov
cmpsb
lea
or
xor
aaa
jns
mov
les
aaa
out
stc
ja
push
jae
pushf
sub
in
stos
std
push
pop
add
loopne
mov
cmp
lret
mov
or
aad
adc
ja
daa
mov
mov
data16
daa
movsl
frstor
cmp
es
sbb
add
jecxz
pushf
jge
outsl
jnp
lret
mov
lret
dec
nop
fcmovnb
ficoml
jmp
cmp
jns
mov
and
sub
adc
popa
out
jg
push
fistpll
xchg
mov
mov
int
movsb
mov
mov
in
push
push
add
mov
loop
adc
xor
shll
outsl
jge
pop
ret
lods
out
mov
sbb
xor
leave
mov
sbb
lods
out
int3
sub
and
sbb
dec
or
mov
xlat
lea
jp
aaa
or
mov
scas
cmp
sbb
popf
cwtl
stc
sbb
insl
xchg
popa
test
inc
pop
int3
ss
pop
cwtl
sbb
or
mov
xor
dec
mov
jp
and
mov
lods
js
jbe
ss
mov
jae
mov
rcll
pop
ss
ret
wrmsr
push
arpl
pop
pop
xor
jne
mov
pop
or
xor
jp
jne
imul
and
inc
dec
xchg
push
mov
lea
sbb
xor
or
outsl
insl
adc
add
stos
push
jmp
mov
ss
dec
ja
add
out
cmpsl
jns
mov
fbld
push
inc
aam
pop
fcoms
cwtl
inc
stc
outsb
mov
daa
mov
jmp
jl
pop
scas
mov
rolb
loopne
jle
imul
xchg
les
aad
lcall
hlt
dec
loopne
out
mul
test
push
xchg
repz
dec
call
xchg
adc
xchg
pop
loopne
and
xor
imul
sbb
lcall
movsl
js
adc
pushf
sarl
adc
cli
rclb
mov
mov
jl
jno
pop
cmp
dec
ljmp
jmp
loope
xor
cmc
xchg
jb
pop
adc
movsb
mov
jb
cmpsl
and
int3
xchg
pop
mov
mov
mov
mov
movsl
mov
ficompl
jl
mov
int3
sub
pop
pop
stos
jmp
push
outsl
mov
sub
push
scas
adc
push
xor
and
push
add
mov
cltd
imul
pop
es
pop
cwtl
xor
push
movsl
cltd
das
dec
and
popa
faddp
orl
jl
popa
into
negb
jb
jb
cmp
cmp
leave
push
sbb
aam
lea
push
push
inc
adc
std
jo
dec
clc
dec
cmovo
stos
cwtl
outsb
add
xor
xor
fistpl
mov
and
rorb
call
dec
idivb
inc
and
jmp
inc
push
in
out
sbb
add
cmp
sbb
mov
enter
test
movsl
jle
sti
test
sub
mov
iret
mov
mov
sarl
call
mov
clc
adc
mov
mov
dec
cmp
dec
dec
lods
repz
out
sbb
mov
les
mov
add
sbb
and
and
add
sbb
push
mov
push
out
stos
aad
mov
shll
dec
mov
enter
int
lods
outsl
xchg
xchg
test
cmp
jbe
lcall
loope
adc
das
push
pop
push
inc
outsl
or
xor
jb
pop
jno
call
lret
shlb
jnp
das
jns
sub
and
inc
enter
or
rclb
ja
aas
fstpl
lods
and
js
xor
mov
sub
aad
mov
loop
arpl
pop
in
pop
mov
xor
sbb
xchg
mov
cli
aad
clc
in
and
cli
pop
dec
add
jo
jbe
je
in
stc
sbb
repnz
xor
add
ret
or
in
scas
mov
sub
cmp
dec
scas
add
mov
scas
outsb
mov
aas
mov
add
rcrl
push
mov
pop
sahf
pop
xchg
mov
les
fdivs
aad
faddp
or
and
scas
ret
outsb
ds
lods
xor
mov
out
mov
lea
mov
ds
adc
decb
dec
push
stos
cmp
add
test
leave
mov
mov
int
pushl
aam
adc
aam
xor
sbb
loopw
pop
lock
cwtl
sub
xchg
push
pop
sub
sbb
popf
clc
push
les
dec
movsl
enter
xchg
jecxz
arpl
in
aaa
cmp
aam
fimuls
jp
das
ljmp
mov
and
movaps
adc
hlt
xchg
out
dec
std
mov
cmp
lods
xlat
stos
ds
sub
sti
sbb
mov
and
inc
jno
add
sar
fwait
and
shrl
pop
sbb
lea
sbb
mov
push
dec
add
sub
enter
out
fwait
xchg
iret
fbld
inc
mov
lret
or
xchg
fs
pop
scas
int
or
add
daa
out
or
jmp
jb
addr16
pop
aam
jp
xor
inc
int
in
pop
cld
loopne
mov
mov
into
dec
imul
jmp
shl
pop
xchg
cmp
pop
jle
inc
hlt
jmp
sarb
add
xor
xchg
sub
mov
jg
jb
fdivrp
movsb
addr16
cmp
sub
mov
push
or
push
fs
xchg
push
cli
outsb
rcll
lds
subl
add
loope
out
stos
les
or
ret
data16
das
andl
decb
mov
push
scas
mov
pusha
mov
outsl
ja
setae
mov
int
test
add
in
loopne
mov
sub
xchg
cmp
pop
out
mov
lods
inc
or
cld
add
sub
stc
sub
ds
adc
push
xor
stos
test
leave
and
hlt
cmp
fs
pop
lahf
pop
shl
scas
lcall
les
imul
push
mov
pop
lock
jecxz
stos
jns
imul
sarl
cltd
icebp
jno
cs
xor
lcall
lret
jo
or
sti
or
gs
jp
xor
fsubs
scas
leave
pop
hlt
cmp
push
rep
adc
cmp
shlb
or
stc
in
mov
arpl
aam
sti
arpl
in
xor
pusha
or
adc
or
es
aas
sarb
jmp
icebp
movsl
mov
sarb
xor
ds
jle
js
in
mov
fidivl
imul
movsb
lcall
in
iret
std
ds
xchg
xor
scas
sbb
in
fcomi
push
int
xor
lods
mov
lock
int
or
pop
rcr
cmp
mov
in
cmp
in
mov
les
push
stos
stos
imul
sti
addb
loope
out
das
xchg
mov
fcompl
cmp
popa
test
repnz
aad
cltd
fcom
dec
movsb
add
lea
mov
lahf
lods
ret
cmp
add
pop
jmp
dec
dec
add
cmp
sub
stc
inc
sbb
xlat
adc
add
cmp
shl
pusha
push
push
push
jmp
in
mov
lock
out
fcoml
clc
adc
cmp
pushf
sahf
mov
mov
xorb
pcmpgtd
add
xlat
pushf
frstor
or
clc
icebp
cmp
lea
xchg
inc
sahf
ret
push
filds
sub
loope
cltd
aas
xor
xchg
mov
cs
cmp
mov
aam
cltd
mov
mov
scas
fnsave
sbbb
dec
xchg
mov
xchg
out
sub
xchg
int
or
out
insb
cmp
mov
movsb
pop
repz
arpl
xchg
shrb
jecxz
pop
aam
mov
roll
or
aam
sub
jecxz
sahf
mov
leave
dec
daa
adc
push
insl
jne
xlat
addb
mov
cmp
pop
push
mov
cmc
inc
jb
mov
jmp
dec
xor
and
xlat
jno
fstpt
sub
mov
std
loope
enter
ljmp
push
jb
mov
cmp
mov
sarb
mov
xor
pop
outsl
sbb
int
or
sbb
pusha
push
rcr
jl
sbb
jae
out
sbb
in
mov
mov
sti
aam
mov
stc
in
fisubs
adc
xchg
push
je
loopne
es
push
pop
pop
aad
in
pop
xchg
xor
mov
cmpsl
data16
cwtl
jg
lahf
mov
jl
into
pop
addr16
out
sub
lcall
xlat
inc
das
leave
mov
push
cwtl
test
arpl
and
dec
xchg
mov
aas
cld
mov
clc
pop
cmp
ja
scas
add
pushf
pop
adc
loop
test
xchg
je
pop
and
pop
xchg
repz
repnz
js
xchg
vpunpckhqdq
jg
stc
rorl
fsts
rcll
rolb
out
pop
and
pop
xchg
call
cmp
fwait
push
push
and
lcall
xor
push
aas
into
loop
cmpsl
loopne
push
dec
mov
scas
inc
subl
jmp
enter
pop
sbb
push
je
add
and
jo
cltd
pop
es
inc
test
lds
mov
xchg
or
or
cld
adc
ljmp
shl
mov
int
lods
xor
inc
lds
inc
inc
mov
xor
pop
jmp
lret
out
mov
sbb
ja
xchg
dec
push
jl
andl
mov
repz
and
sub
hlt
rcrb
lahf
and
clc
cli
mov
popa
insb
mov
out
sub
mov
rcl
sub
hlt
fstps
arpl
enter
das
xchg
or
mov
andb
push
out
mov
adc
fwait
sub
in
xchg
and
dec
add
jl
call
mov
int
hlt
lock
push
int
sarb
inc
jmp
outsb
test
sbb
in
push
pushf
cmpsb
fbld
mov
dec
ljmp
xor
jp
mov
cltd
stos
addr16
inc
lcall
cmp
add
mov
mov
cmc
popf
hlt
push
int
adc
stos
cmc
inc
test
repz
mov
xor
xchg
adc
jge
int
cltd
sbb
sbb
mov
cltd
sub
aas
mov
sbb
leave
cs
inc
pusha
test
add
mov
add
mov
scas
leave
clc
jnp
movlps
push
push
outsl
cmc
pop
and
insb
imul
mov
sub
xor
int3
lcall
cli
jp
shrb
fsubr
inc
leave
mull
jecxz
aaa
fidivrs
lcall
out
jg
jne
fisubrl
sahf
sub
mov
adc
dec
shl
xchg
popa
pop
xchg
adc
iret
sub
lret
mov
push
lcall
enter
pusha
bound
mov
xor
shlb
std
push
adcl
pop
push
stos
test
inc
aad
sub
aas
popf
adc
xchg
sbb
shl
push
out
jge
rcr
psraw
ss
sbb
stc
jecxz
push
push
call
into
mov
inc
push
jmp
aam
cld
add
fs
outsl
scas
movsl
ja
cmp
xchg
repnz
adc
cltd
and
mov
ds
mov
cmp
repz
fistl
adc
stc
outsb
cmp
scas
adc
out
je
mov
movsl
pop
xchg
fwait
xor
adc
call
push
pop
mov
and
jecxz
sti
sbbl
push
mov
imul
cmp
add
les
xchg
inc
cmp
sbbb
ja
xchg
mov
aad
xchg
lcall
sbb
or
mov
movsl
or
xorl
out
inc
push
xorl
mov
outsl
testb
add
jp
rol
or
clc
pop
jp
enter
mov
das
dec
stos
mov
adc
jnp
sbb
arpl
jp
divl
mov
add
out
les
lock
fidivrl
dec
lea
and
jb
mov
push
fistl
adcb
jb,pn
jp
jmp
int
inc
call
ror
ljmp
xor
fisubs
ret
lock
aad
pop
inc
xchg
push
scas
mov
clc
adcb
int3
into
pop
or
mov
mov
dec
add
scas
push
pop
aas
or
sar
sbb
cmpsl
dec
repz
inc
push
adc
mov
mov
pop
jecxz
mov
and
out
ss
imul
leave
cwtl
mov
or
jp
pop
inc
loope
lods
psubq
movsl
shll
fwait
push
inc
jne
xor
dec
xchg
imul
test
sahf
jo
icebp
arpl
es
addb
dec
nop
xor
dec
mov
jecxz
pop
xor
cld
sub
ficoms
mov
fdivl
aam
mov
loope
scas
lcall
add
and
aas
mov
mov
test
xor
push
xchg
fs
sub
imul
pop
add
add
fdivrl
jecxz
fidivrs
rorl
psubusb
je
mov
mov
add
jg
mov
shr
adc
dec
or
push
mov
sbb
mov
inc
mov
mov
dec
shlb
lock
push
lar
inc
push
mov
jg
test
andb
sub
aad
push
das
sbb
cwtl
sbb
mov
lcall
push
lret
mov
mov
iret
inc
mov
bound
and
mov
fisttps
sti
ljmp
cmp
jo
pop
insl
or
js
jno
mov
inc
sbb
sub
jnp
fistl
push
lods
jle
push
mov
or
push
in
pop
fs
xor
fisubrs
int
mov
xchg
jbe
lcall
push
in
loope
xchg
sbb
imul
mov
test
and
cltd
cmp
enter
cwtl
fdiv
test
sub
cmpl
dec
sub
loopne
push
xchg
pusha
int3
jno
rcrb
mov
bound
pop
cmpsl
pop
int3
pop
clc
or
in
rcrl
pop
pop
aad
out
loop
add
fldl
mov
xlat
xchg
or
rclb
stc
mov
xor
insb
cmp
ret
mov
or
stc
adc
verw
xchg
rol
add
jp
in
mov
push
int3
push
cwtl
dec
cmp
inc
mov
out
inc
mov
jb
xchg
aam
adc
scas
inc
xchg
push
enter
lds
popf
jae
adc
add
clc
sub
inc
fmul
fwait
pop
inc
push
adc
leave
lock
cmc
shll
mov
xchg
or
pop
mov
xor
dec
popf
repnz
cmpb
inc
lock
outsb
data16
jo
lahf
push
dec
cmp
adc
lea
jo
xchg
lcall
jge
movsb
test
and
fsubl
xor
stos
sbb
dec
and
and
cmp
insb
dec
dec
fistpll
fs
cmp
scas
pop
roll
into
out
and
cmp
in
pop
push
inc
out
sub
scas
mov
pusha
inc
subl
xchg
inc
dec
sahf
movsl
je
push
sub
in
cmpsb
ds
mov
push
adc
cmpsb
mov
loopne
je
jl
pop
sarb
data16
bound
stos
mov
inc
lods
inc
pop
fnstenv
cli
inc
lcall
fildl
int
mov
fiaddl
dec
mov
aaa
mov
addb
xchg
adc
cmp
lea
adc
cmp
fwait
inc
jbe
add
adc
xor
sbb
xchg
addr16
inc
pop
test
sbb
ss
pop
call
fnstsw
inc
sbb
outsl
pop
push
cli
cmp
jl
imul
inc
or
jne
iret
mov
sbb
add
dec
ds
fnstcw
lds
jmp
ds
mov
ret
leave
aam
insb
bound
xor
mov
xor
push
mov
adc
mov
dec
dec
nop
or
push
mov
mov
popa
inc
adc
outsb
lahf
stos
adc
enter
xor
sub
shll
sti
and
mov
mov
sahf
data16
call
dec
mov
inc
jne
jbe
mov
xchg
scas
addr16
push
xlat
arpl
repz
test
arpl
add
mov
jno
jae
jnp
enter
and
in
sti
cltd
mov
ret
testb
je
push
in
andl
lock
clc
fisttps
hlt
in
inc
pop
test
or
out
sub
add
xor
test
sbb
adc
in
sub
aas
fiaddl
in
mov
fdivr
cmp
shrl
subl
lcall
xor
xchg
ror
and
enter
gs
in
xchg
lahf
cmpsl
lock
ss
adc
dec
imul
pop
inc
mov
push
ja
lds
add
xchg
pop
ljmp
fsubrs
xor
sbb
adc
inc
fnstenv
sub
lret
sbb
popa
jecxz
xor
sti
repz
sti
and
mov
jo
int3
inc
les
push
sub
dec
pop
mov
cltd
sub
imul
add
sbb
mov
sub
popa
adc
stc
shl
cld
mov
push
mov
fisubrl
jno
sub
outsb
pop
sub
xchg
sahf
mov
or
and
scas
jp
mov
ljmp
push
fcmovu
or
and
ret
stos
pop
je
inc
outsb
push
inc
sti
mov
mov
gs
jno
xor
xor
jp
jbe
push
sub
and
call
or
movsb
inc
mov
sub
xor
les
lahf
xchg
add
scas
sti
xchg
lods
lcall
in
fstl
popf
cmp
subl
stos
test
sahf
inc
mov
sarl
mov
mov
aaa
pop
inc
sarb
cmpsl
aaa
es
popa
leave
mov
push
mov
xchg
dec
inc
pop
adc
js
scas
addr16
xchg
jb
add
and
mov
aam
fbstp
mov
dec
nop
call
push
xor
or
fidivrl
stos
pop
push
arpl
jp
jge
rol
in
push
pusha
addr16
dec
movsl
or
inc
ret
adcb
das
xor
scas
push
or
sbb
nop
sub
lds
jmp
scas
sub
sbb
mov
inc
adc
in
fdivrl
js
mov
cltd
leave
pop
add
or
fstpl
cmp
cld
fsubs
xchg
int3
mov
push
dec
cmpsl
loopne
lods
dec
test
stc
xchg
sub
jp
push
int
jns
jle
xchg
sub
lahf
popa
cmp
es
mov
inc
sub
and
push
mov
stc
scas
mov
sub
jbe
jg
jno
mov
sbb
mull
movsl
shl
add
aad
sbb
inc
cli
add
sbb
jbe
fs
sbbb
xchg
jo
push
dec
mov
xor
repnz
enter
shll
xor
insl
fcmovb
repnz
out
push
aaa
cmovne
jne
stos
adc
adcb
loope
aad
mov
orb
nop
pushf
jmp
mov
jnp
popf
clc
rcrl
in
stc
mov
xchg
mov
mov
jo
jp
push
les
mov
xor
arpl
mov
xor
fisttpll
cmp
in
stc
in
or
fimull
out
cmp
test
cmc
pop
sbb
xchg
mov
rorb
mov
test
mov
cmp
sub
inc
in
lods
mov
mov
inc
int
mov
sarl
jnp
push
daa
out
lods
jmp
pop
pop
dec
mfence
xchg
sti
sbb
xchg
mov
lods
pop
mov
cmp
xorl
or
cmp
lds
dec
incl
das
ss
mov
in
mov
ja
icebp
dec
loop
adc
pop
rorl
sbb
cmp
test
je
adc
js
out
lods
ja
mov
push
mov
repz
cltd
movsl
mov
mov
mov
icebp
jge
add
xor
add
pop
cmp
sub
sub
sub
ftst
rorb
fs
cmp
xchg
aas
jmp
mov
stc
inc
lea
pop
pushf
stc
pop
fbld
sbb
das
inc
add
jae
sub
jg
push
push
pop
popa
hlt
das
adc
std
pop
mov
shlb
shl
ret
mov
jo
cld
test
leave
popa
test
push
sbb
cmp
rclb
imul
lock
dec
fmuls
adc
xor
mov
int3
inc
lret
mov
in
adc
dec
adc
xlat
mov
fcoml
data16
mov
fdivrp
enter
jg
xor
sub
or
arpl
ret
ror
jecxz
pop
testb
jle
mov
leave
push
psllq
cmc
hlt
push
xchg
xchg
in
rcll
xlat
sbb
fstpl
insb
inc
jne
pop
and
sub
ds
or
dec
push
in
xchg
pop
mov
data16
out
cmp
dec
pop
mov
pop
jbe
arpl
shl
aaa
in
xor
gs
cmp
lea
sbb
subl
or
cmp
pushf
pop
adc
movsl
imul
jl
dec
push
mov
mov
sub
outsb
xchg
shll
fnstsw
dec
inc
dec
std
mov
sahf
and
push
xchg
fsubs
iret
mov
pop
scas
push
mov
fldl
push
sbbl
into
xor
and
mov
pop
mov
outsb
or
mov
push
mov
jmp
lods
shll
fwait
data16
mov
push
aam
cmpsb
mov
fisttps
aam
arpl
std
mov
mov
xchg
in
nop
shrb
cmp
scas
pop
mull
push
cltd
add
popl
dec
xchg
dec
dec
push
mov
push
add
es
cmovle
cmp
dec
xchg
int
stos
cmp
loope
aas
pop
push
pop
dec
ss
stos
call
and
repz
mov
dec
adc
jecxz
pop
mov
stos
mov
or
sbb
popf
movsb
lock
pusha
rorb
pop
dec
push
jno
paddsb
or
push
dec
sarb
jns
imul
sub
jl
mov
movsb
ret
xchg
cli
dec
cltd
or
pop
addb
imul
fnsave
push
repz
adc
or
sahf
iret
mov
pop
mov
or
push
lahf
lret
push
stc
pop
dec
iret
ss
adc
lods
xor
jns
movsb
push
adc
rorl
push
into
dec
lcall
cmpsb
fnstenv
inc
and
mov
cmc
imul
mov
aaa
popf
push
nop
fistl
and
jp
xchg
and
mov
lcall
mov
adc
xlat
lret
ret
test
mov
sub
sub
aas
mov
roll
pusha
mov
ficoml
or
xor
mov
cld
xchg
movsb
sbb
rol
movsb
xor
fcoml
aaa
rcl
mov
outsl
bound
ret
shlb
dec
ret
jmp
out
stc
loope
scas
jbe
mov
or
xchg
mov
pop
in
lahf
repz
inc
adc
jecxz
out
jmp
jno
jo
add
outsb
xchg
and
and
in
shl
xor
or
ret
or
pop
and
cmp
mov
sub
test
arpl
into
dec
setne
xor
mov
lds
jle
pop
mov
adc
mov
cmp
xchg
inc
jle
jmp
mov
inc
test
test
jbe
cmp
cld
lret
jnp
mov
jle
jg
mov
mov
mov
mov
mov
stos
in
pop
fisttpll
fisubs
sub
stc
out
out
rorb
das
loop
lret
dec
mov
dec
xor
mov
adc
paddsw
mov
dec
or
fnstenv
dec
add
mov
dec
dec
or
insl
iret
repz
mov
add
lcall
cmp
icebp
sbb
and
mov
dec
push
dec
mov
jne
vpcmov
fs
or
mov
or
mov
aad
aaa
test
pop
mov
ds
push
xor
insb
loopne
xchg
stc
or
cmp
das
dec
mov
pop
push
adc
ljmp
lds
filds
dec
addr16
cmp
push
dec
jp
clc
add
xchg
ret
or
insb
xor
jae
jmp
xchg
pop
outsl
lcall
lods
mov
icebp
add
mov
icebp
std
pop
jle
mov
adc
pop
sub
xchg
mov
pop
loopne
fs
jmp
cmp
in
mov
repnz
jae
lahf
ja
pushf
jne
stos
and
sbb
hlt
es
mov
cmpsb
loope
cmp
enter
pushf
ss
cltd
stc
and
add
rcl
inc
test
cmc
sbb
mov
pop
cmp
sub
cmp
fidivl
xor
jg
push
cmc
pop
sti
xchg
push
pop
cmpsl
insb
inc
lods
xchg
fstl
lret
push
lahf
lods
hlt
inc
movl
notb
mov
cmp
icebp
mov
cld
arpl
pushf
daa
sub
mov
sub
mov
ja
mov
and
mov
pop
sahf
jmp
fistpll
dec
sbb
xchg
je
mov
sub
fldenv
xor
jl
pop
gs
pusha
les
push
sub
mov
pop
lret
stos
out
mov
xor
or
dec
jb
add
xchg
cmp
mov
les
dec
dec
stos
cs
je
and
jno
fcomip
inc
push
or
inc
mov
incb
stc
int
adc
adc
push
pop
adc
ljmp
roll
xor
cltd
pop
and
bound
sub
insb
pop
arpl
call
das
push
fs
sbb
les
sbb
pop
dec
fistpl
daa
jl
jmp
jg
scas
or
cmp
mov
jbe
and
repnz
mov
cli
dec
push
out
inc
push
pop
das
xchg
int3
xchg
nop
sbb
int
xor
test
test
and
out
int
cs
pop
clc
inc
movsl
imul
sbb
sub
enter
out
outsl
mov
cltd
out
jne
imul
jno
xchg
lcall
cmp
mov
repz
jo
xchg
add
insb
inc
xor
or
enter
in
rorb
and
pop
in
aam
test
rcrl
orb
push
dec
inc
std
sbb
and
pop
in
cs
adc
lods
jo
sahf
xor
mov
jnp
adc
in
into
and
out
sbb
adc
int3
mov
jnp
insl
es
ret
xchg
xor
inc
stos
or
xor
cmpb
mov
dec
mov
dec
stc
inc
jmp
popf
xor
jns
lcall
cmc
fwait
push
outsb
test
jg
jg
or
das
nop/reserved
mov
jge
sbbl
imul
mov
mov
push
leave
lods
jbe
adc
mov
xlat
das
dec
mov
or
mov
cmp
dec
dec
mov
pop
pop
enter
cmp
xor
les
push
lret
rcrb
pop
dec
inc
xor
ret
cld
jno
imul
mov
adc
push
fpatan
rol
sub
in
daa
cmpsl
or
into
fdivrs
pop
dec
push
lock
mov
gs
xor
dec
ja
sbb
sbb
lret
mov
or
dec
mov
lods
jae
dec
jmp
testl
test
stos
jmp
sahf
stc
add
pusha
add
cmpsb
in
push
jno
cmp
adc
add
cld
pop
xchg
outsb
adc
lahf
cwtl
pop
pop
cmp
sahf
cmp
sbb
adc
rcll
push
push
fnstcw
cmpl
inc
test
jmp
aam
sub
out
inc
xor
insl
sub
imul
ret
cmp
push
dec
jb
and
xlat
push
test
or
push
test
int
mov
les
roll
inc
loopne
lcall
xor
nop
jbe
inc
cs
jmp
mov
mov
sbb
jne
xor
iret
mov
jmp
lods
mov
or
scas
mov
cmpsl
into
cltd
xor
sbb
in
jl
dec
pop
add
cmp
push
int
mov
icebp
out
shrl
push
in
push
pop
lds
jo
mov
nop
neg
imul
pop
sub
call
out
dec
lret
cmc
jno
jmp
xor
push
dec
in
cmp
mov
sbb
jae
inc
into
les
rclb
loope
cmp
pop
sub
loope
shlb
jo
fisubl
push
fmull
mov
sarb
inc
inc
fs
cmpsb
and
xchg
ss
aad
loop
les
cmp
test
dec
xchg
push
cmpsl
cmc
or
adc
pop
push
das
testl
fistps
jg
xlat
call
outsl
jo
push
out
jg
xor
inc
fdivs
pop
pop
add
inc
mov
sub
lret
ret
cmp
mov
mov
sbb
adc
jbe
cmp
mov
pop
fsts
jnp
lea
pop
xor
out
shrl
mov
testb
mov
mov
cwtl
loop
jmp
xchg
call
ljmp
cmp
jp
or
lahf
fsubl
jl
cli
sahf
adc
cwtl
push
inc
mov
rol
shlb
xchg
fstpl
inc
icebp
ret
jle
xor
repz
xor
adc
and
jo
outsl
popa
aaa
ds
hlt
and
mov
outsb
fwait
mov
mov
inc
mov
mov
data16
inc
stos
sbb
lret
fxch
push
mov
mov
pop
testb
or
ja
inc
fadds
std
push
jmp
mov
xor
dec
dec
insb
test
ret
orl
or
mov
push
sti
cmp
sarb
adc
xor
out
push
jns
test
mov
lods
mov
stc
xchg
out
jo
outsb
das
fistpl
or
jne
push
adc
inc
sbb
repz
movl
aad
push
and
subl
hlt
cmp
xlat
in
xor
dec
xor
adc
pop
or
ret
out
xlat
rorb
jle
fs
and
nop
adc
add
sbb
movsl
xchg
sub
iret
mov
test
jge
rcrl
push
dec
in
push
cmp
fsubp
jecxz
insb
sub
dec
andl
loopne
fists
cmp
xorb
loope
xchg
dec
add
sub
push
hlt
cmpsl
pop
in
push
imul
mov
inc
cmpsl
mov
lahf
dec
inc
inc
jbe
and
mov
iret
mov
xchg
jbe
out
sbb
push
lret
adc
sbb
inc
dec
pop
push
xchg
add
xchg
push
mov
loope
das
add
fidivl
mov
adc
push
imul
and
pop
push
push
push
loope
mov
aad
push
xchg
sbb
cwtl
fmulp
ror
test
inc
and
int3
add
pop
jns
fs
mov
adcl
sti
xchg
int
cmp
aam
sahf
jl
sbbb
out
sbb
inc
jno
push
mov
inc
int
xchg
inc
movsb
mov
scas
push
insl
movsl
aad
fadds
sub
and
ret
or
cmp
pop
mov
and
ja
in
mov
or
sub
adc
test
mov
cmc
dec
or
repz
jmp
fsubs
jl
push
jne
jbe
pusha
jp
cmp
cmpsl
ds
mov
movsb
int
bound
xor
test
fcomp
pushf
int
cmp
aaa
fucomp
loop
xor
xchg
dec
jp
pop
lret
dec
dec
addr16
pop
add
rolb
aam
mov
push
cs
mov
mov
xlat
cmp
pop
dec
pop
not
mov
and
xchg
lea
loop
sub
adc
ds
jmp
mov
add
mov
push
movl
cwtl
scas
test
leave
adc
call
mov
loopne
aas
adc
sub
mov
mov
sub
je
push
rcrl
fiadds
lods
mov
jp
rcll
jbe
sbb
pop
add
bts
inc
test
fcoml
rorb
mov
mov
or
xchg
push
jno
ficompl
dec
mov
sti
push
aaa
jo
or
lahf
lods
mov
sarb
sti
fistps
in
and
dec
cli
push
inc
cld
dec
repnz
dec
xchg
inc
jb
inc
adc
mov
push
lret
test
jns
mov
xchg
cmp
push
or
xchg
lret
inc
hlt
cmpl
xorl
mov
stos
out
push
in
pop
pop
mov
out
daa
outsb
outsl
insl
fmulp
rcll
ja
pop
fisttpl
dec
into
add
and
xor
dec
jmp
fcmovnu
mov
cmpsl
lcall
out
jb
cmpsl
add
jns
dec
outsb
xchg
pop
fidivrs
out
mov
leave
loope
pop
inc
mov
xchg
fs
mov
or
arpl
not
std
int3
bound
leave
in
inc
inc
andb
leave
sti
addl
sbb
int3
imul
sbb
xchg
mov
jecxz
sbb
loope
jnp
stc
ds
adc
push
inc
lock
or
hlt
dec
stc
pushf
in
mov
and
aam
xor
and
scas
jl
xlat
sahf
icebp
sar
pop
mov
out
jb
lods
cmp
push
xor
shl
jmp
cmpsb
inc
ret
lahf
jb
or
and
fs
popa
clc
sbbl
and
sar
mov
cmp
mov
ljmp
jecxz
pop
push
imul
aad
lods
fs
mov
movsl
fisttpll
negb
xor
add
add
pop
xchg
xorb
cs
sbb
adc
jmp
testb
mov
cmc
add
push
je
and
jnp
ror
jnp
jo
push
mov
pusha
cmp
sbbl
mov
adc
xchg
sti
inc
mov
and
repnz
shll
out
inc
in
cmpsb
cwtl
sti
lret
add
lahf
fs
rorl
xchg
lds
dec
das
mov
ficoml
xorl
jbe
inc
ret
and
pop
stos
push
lcall
shlb
cmpsb
pop
mov
mov
aam
cltd
mov
xor
xchg
popf
incl
dec
push
std
or
xchg
jge
pop
es
iret
dec
ss
imul
les
mov
ret
inc
shll
sub
test
pusha
or
push
icebp
dec
pop
xorb
popf
mov
icebp
cmp
adc
cmp
mov
insl
imul
ret
sub
scas
into
xchg
stos
out
fdivl
aaa
adc
fdivrl
or
inc
sbb
mov
cmp
cmp
roll
mov
pop
mov
fisubs
mov
aam
clc
xor
push
pop
pop
pusha
out
cmp
rorl
scas
jae
inc
or
out
mov
mov
mov
movsl
daa
adc
add
cmpsl
mov
cli
add
les
push
mov
push
insb
push
lods
icebp
add
jb
fsubrl
dec
pop
jmp
sub
sbb
pop
mov
pop
xor
and
dec
subl
add
test
cmpsb
loope
test
and
and
or
in
andl
jle
outsb
and
iret
enter
push
movsb
dec
and
adc
mov
out
cli
ja
cs
mov
int3
dec
add
cmp
inc
iret
adc
mov
arpl
jl
mov
leave
jg
push
jge
jb
mov
push
push
jbe
ret
or
ret
jmp
lret
inc
mov
cwtl
fstps
push
int3
push
push
xchg
lea
dec
cmp
into
mov
lods
inc
sub
and
std
call
rcr
xor
push
dec
mov
scas
stc
add
jnp
add
and
dec
xchg
clc
add
dec
cmp
shlb
fadd
and
xor
inc
shl
loop
jmp
outsl
dec
addr16
sahf
push
call
mov
push
icebp
jg
pop
fwait
popa
iret
mov
cmp
aam
cmp
pop
pop
mov
cwtl
ret
jae
sub
lds
or
dec
inc
mov
insl
dec
mov
in
add
fldl
sarl
push
paddusw
dec
cmp
in
mov
out
xchg
lock
sub
pop
inc
andl
ficomps
push
mov
jbe
mov
out
xchg
mov
pop
and
sarl
pop
sti
adc
xor
in
pop
hlt
movsb
mov
mov
lret
jmp
js
outsl
shr
cmc
mov
mov
push
pop
pushf
movsb
dec
xchg
add
xchg
in
jecxz
jl
sbb
push
test
je
dec
aad
aas
out
hlt
pop
xorl
ja
or
adc
and
cld
xor
push
lods
lcall
icebp
fistl
idivl
out
push
negl
xchg
pop
dec
inc
and
pop
inc
xchg
sahf
push
sbb
mov
or
movsl
xchg
inc
fs
andb
sub
push
push
notl
out
mov
arpl
xor
jg,pn
and
cmp
bound
ss
ret
xlat
xor
sbb
sbb
mov
lret
mov
fisubl
sbb
mov
adc
adc
push
pop
or
pop
inc
fists
adc
dec
notl
jns
ljmp
mov
mov
mov
dec
push
cmp
cmp
xchg
bnd
adc
mov
aaa
jbe
test
loopne
mov
pop
xor
ret
mov
scas
in
nop
imul
cmp
dec
test
sbb
addr16
dec
pop
insl
push
lret
xchg
pop
dec
shll
mov
loop
testl
adc
ss
sti
dec
lcall
das
or
or
add
mov
fwait
lcall
movsl
push
and
xor
sub
int3
cwtl
call
dec
rorb
dec
shl
mov
ret
inc
add
fldt
sbb
aam
lret
mov
mov
mov
jecxz
lahf
pop
mov
pop
jg
test
cmp
test
mov
daa
add
imul
fldcw
push
cmp
push
sub
in
pop
adc
inc
sar
pop
pop
cmpxchg
sahf
adc
add
xchg
pop
dec
cli
jl
adc
push
in
inc
push
shl
cs
pop
lret
stc
daa
mov
xchg
jbe
movsb
rorl
ljmp
cld
adc
push
gs
pop
nop
psubb
lods
add
and
mov
jnp
mov
xchg
int3
inc
stos
in
push
sbb
int3
rcll
into
cmc
fidivrl
test
or
mov
adc
mov
pop
inc
cmpsb
xchg
les
in
inc
leave
mov
gs
jmp
jnp
adcb
test
dec
mov
adc
iret
add
sbb
add
jmp
sti
js
and
loopne
icebp
popa
shlb
add
add
jecxz
dec
or
adc
mov
sbb
and
pop
cli
mov
and
inc
dec
pxor
std
inc
fiaddl
call
lods
mov
rol
lods
and
inc
lds
rcrb
imul
cs
jmp
enter
shll
insl
jge
lock
mov
testb
ds
ss
test
mov
jb
cmpsl
repnz
add
pushw
repz
addps
and
cwtl
mov
sub
lds
outsl
xchg
jge
xor
movsb
xchg
inc
rcrl
andl
pop
sub
jg
loop
repz
or
pop
or
stos
mov
jnp
ljmp
or
dec
inc
jns
jge
iret
cmp
sbb
dec
xchg
pusha
cmp
in
and
daa
stos
inc
fwait
pop
lcall
push
in
jecxz
cmp
ja
dec
rorl
imulb
scas
dec
jo
mov
xchg
sbb
je
nop
pushf
mov
push
pop
mov
int3
cmp
xor
or
into
pop
rcrb
fdivr
adc
jmp
xor
mov
imul
sub
jns
out
hlt
or
pop
mov
dec
aam
std
clc
movb
dec
bound
xchg
push
call
jmp
addl
sti
sahf
jge
jo
test
loop
add
inc
xor
hlt
addr16
testl
fisubrs
pop
push
sbb
mov
jp
dec
incl
pop
in
jbe
jecxz
mov
add
fsubrp
icebp
pop
movsl
int3
inc
push
adc
stos
xor
push
call
pop
push
testb
cmp
pushf
dec
push
int3
adc
add
mov
cmp
pusha
xchg
lahf
inc
or
nop
mov
aam
in
outsb
add
push
aas
adcb
sbb
div
loope
fcoml
xchg
cli
pop
xor
cmpsl
push
sub
je
xchg
mov
scas
es
cmp
pop
or
xor
int
loopne
dec
cmp
pop
jecxz
jecxz
fistpll
in
xor
mov
adc
in
sub
addl
jg
nop
fs
jnp
jns
mov
or
scas
fidivrl
fstps
pop
xchg
and
jmp
out
fsubrl
sbbb
jne
fildll
inc
ss
lods
xchg
mov
pop
fwait
add
sti
xor
xchg
hlt
in
aaa
or
inc
push
cltd
add
addl
and
mov
xchg
movsl
or
hlt
insb
add
jecxz
loope
dec
jne
js
pop
test
lahf
fdiv
loope
jp
ss
es
pop
fisttps
in
jle
in
ss
inc
notl
sub
xchg
or
pop
mov
popl
loope
pop
aas
sbb
repnz
fimuls
nop
clc
push
rcrb
xor
out
sbb
fmuls
xchg
cmp
sub
fs
fs
jne
pop
mov
orl
fiaddl
push
push
imul
ljmp
mov
stc
inc
add
sub
sbb
xchg
dec
lds
xor
stos
insl
xor
xor
cmp
lods
insb
mov
mov
push
xchg
jle
xor
outsl
or
push
push
mov
lret
or
loopne
sbb
popa
push
das
aas
sub
pop
test
push
fdivrp
inc
lcall
cmpsl
mov
outsl
mov
pop
imul
fisubl
and
mov
sub
cwtl
jmp
into
lcall
ficoml
pop
mov
xchg
xlat
dec
mov
aad
fistl
cwtl
mov
jge
adc
cmp
mov
popa
lds
shll
and
pushf
ss
sbb
add
lcall
fmuls
je
mov
mov
cmpsb
mov
lea
in
pop
adc
pop
dec
mov
jbe
fwait
or
or
ja
xor
fsts
jae
ret
pop
test
mov
sub
sbb
ss
add
mov
dec
outsb
sub
inc
cmp
adc
or
cmc
xchg
xchg
addb
mov
icebp
shlb
lds
arpl
ss
or
cmpsl
aad
sub
mov
loop
cmp
stos
xchg
loopne
fistpll
xchg
sbb
popf
adc
aad
inc
popf
fwait
inc
nop
je
dec
xchg
mov
mov
mov
mov
push
push
adc
cmc
sti
je
mov
ret
aad
scas
push
xchg
icebp
repnz
scas
in
dec
test
repz
mov
mul
lods
push
int
pop
cltd
out
xor
cltd
test
mov
mul
push
shlb
mov
mov
pop
push
fsubrs
sub
ds
dec
popf
imul
mov
mov
xor
rcrl
cmp
gs
pop
xchg
xlat
aas
mov
jge
add
lret
adc
or
pop
les
out
cmp
cmpsl
push
stc
xor
sub
js
add
inc
jmp
adc
enter
pop
jo
fcomps
inc
daa
jmp
xor
and
test
cmp
int
in
dec
lods
bound
sub
add
push
cld
cmp
stc
cmp
ret
jecxz
mov
push
nop
and
jb
addr16
add
sbb
out
sbb
or
das
xor
dec
into
addr16
ret
add
lods
testb
movsl
adc
sbb
movlps
mov
loop
xchg
mov
mov
pop
mov
addr16
dec
or
jo
xchg
push
mov
ljmp
lods
jno
inc
mov
or
cmp
ds
mull
fildl
sbb
sbb
add
jae
clc
adc
fs
xchg
sub
jg
mov
call
pop
push
inc
neg
xchg
xor
nop
xchg
cmp
or
aam
hlt
push
aaa
jmp
xor
sub
out
mov
ds
aas
push
and
sbbl
adc
adc
lds
cmpsl
repnz
and
adc
pusha
lret
sub
sbb
js
iret
jg
in
push
mov
adc
mov
pusha
mov
test
mov
shr
mov
icebp
loope
mov
das
cmp
lods
xchg
sub
dec
negl
les
inc
in
pusha
inc
out
xchg
inc
mov
mov
add
lahf
push
dec
int
pushf
cltd
add
cmpb
shll
cmp
jge
jns
add
rcrl
mov
movsb
sbb
add
lar
test
push
jmp
andb
jle
mov
pop
outsl
inc
pop
cmp
mov
sbb
les
cmp
pop
mov
and
ficomps
push
add
jbe
jmp
stos
rorl
jbe
cs
push
pop
push
shlb
mov
mov
xor
stos
mov
daa
aad
jl
inc
or
pushf
stc
inc
dec
push
repnz
pop
xor
mov
into
jp
pushf
mov
stos
fs
sbbl
or
add
xchg
pop
push
mov
mov
cmc
clc
sub
loopne
ret
sti
and
mov
xchg
pop
mov
mov
loop
and
xchg
sub
cmp
enter
dec
dec
mov
mov
mov
inc
jb
inc
xchg
lds
push
push
les
mov
test
mov
jge
leave
and
xor
dec
sti
xchg
and
call
icebp
aad
cmp
xor
ss
les
loope
cmp
clc
out
inc
sbb
nop
pop
xchg
movsb
inc
fimuls
sbb
pusha
mov
imul
les
repz
mov
loope
mov
test
lret
mov
mov
inc
jle
push
push
rcr
mov
inc
pop
test
jge
adc
sub
rorb
inc
lods
xor
sub
pusha
xor
mov
jo
int
and
inc
out
mov
push
and
sets
xchg
xor
in
add
cmp
add
mov
xchg
jge
aaa
je
mov
add
lret
sub
in
inc
jae
xchg
popa
cwtl
mov
outsb
adc
and
mov
mov
xor
das
and
mov
lock
and
push
jge
sahf
push
lret
lret
xchg
add
sbb
pushf
iret
and
mov
arpl
aad
mov
xchg
push
mov
jno
push
add
es
aad
fs
xchg
cmp
sahf
and
sbb
push
or
inc
mov
sbbb
cmp
or
adc
loop
lods
jecxz
xchg
push
out
fxch
mov
sub
out
xor
out
mov
jo
or
cmc
lret
ss
movsl
jns
fstp
add
pop
es
or
jmp
shr
in
scas
sub
push
cmp
imul
xchg
push
sub
movsl
xor
inc
fstps
imul
in
pop
dec
dec
xor
lahf
int3
push
mov
subl
cmp
mov
mov
cmp
daa
push
cmp
fidivl
dec
add
test
mov
imul
pop
jae
leave
mov
add
in
cs
add
cmpsl
dec
orb
push
mov
jp
idivl
sarl
ficoml
lret
repz
js,pn
insl
add
addr16
mov
pop
aaa
cli
mov
pop
mov
sbb
out
sub
cmp
cmc
mov
mov
out
cmpl
mov
test
cmp
out
shlb
stc
sub
xor
leave
rcll
cs
bound
push
hlt
inc
mov
in
sarl
cmpsl
jg
aad
es
xor
sbb
adc
stos
mov
gs
loope
jne
lods
cli
movsl
push
push
inc
fsts
icebp
das
adc
std
mov
cmpsl
outsb
addb
or
xchg
leave
dec
call
or
xchg
xchg
ret
cmp
jo
popa
pop
fldz
xchg
mov
sub
push
sti
xchg
enter
or
scas
ret
aaa
adc
sub
cmp
ja
pop
cs
roll
or
cld
mov
rclb
xchg
call
imul
std
aaa
daa
lea
nop
daa
dec
mov
dec
stc
jp
add
xor
pop
cmovg
sub
cmp
testl
cmp
sbb
xor
jnp
and
xor
sti
mov
mov
inc
sbb
mov
push
testb
jae
fstps
inc
and
sub
les
pusha
inc
outsl
cmpsb
cmc
sbb
rcr
xchg
pop
fcmovb
insb
adc
shrb
jns
cmpsb
add
outsl
addr16
lret
jae
lods
adc
xor
insl
pop
fsubrl
sub
pop
push
jno
xor
repnz
repnz
cmpsb
insl
repz
dec
ss
ret
lock
pushf
mov
iret
insb
dec
ja,pn
hlt
popf
outsb
fmul
cmc
es
jecxz
insl
sahf
sub
out
jl
scas
push
xchg
mov
mov
pop
out
fists
filds
jecxz
pop
es
into
mov
js
lock
outsb
shlb
pop
pop
inc
or
stos
jl
sbb
pop
jne
mov
mov
out
mov
ds
std
push
test
dec
sub
aad
adc
daa
add
js
das
out
test
sbb
std
jb
mov
mov
xlat
lret
ljmp
fnstcw
jp
fcomps
insl
in
sbb
pop
aad
ror
jae
mov
dec
nopl
mov
mov
cmp
jmp
ja
or
or
mov
xchg
loope
sbb
xchg
test
lret
lret
or
push
and
jecxz
inc
xchg
lahf
int3
outsb
mov
push
cmpl
xor
mov
fldenv
test
push
sbb
arpl
lss
pop
dec
add
cli
lods
decb
cmp
push
mov
cmpsl
xchg
out
jnp
in
aam
ja
imul
shll
inc
in
jae
das
pusha
cs
rcl
or
gs
adc
insl
inc
popa
dec
or
sbb
cli
xor
push
lret
mov
int
push
and
iret
sub
daa
push
mov
loope
lcall
dec
cli
shlb
movntps
add
repnz
shl
or
fwait
push
call
popa
shll
inc
rorb
and
je
bound
mov
idivl
imull
inc
cmpsb
mov
lods
out
sub
jbe
out
shrl
xchg
adc
lahf
sarb
rcll
mov
subb
inc
xor
scas
push
mov
cli
cli
inc
inc
pop
mov
pop
insl
adc
out
jne
cmp
loop
movsl
sbb
push
xchg
lcall
push
data16
jbe
lret
xor
jge
mov
pop
mov
arpl
cmp
movsl
rclb
sub
sbbl
ror
mov
cmp
sbb
addl
lods
ja
shll
cmp
and
clc
loope
lahf
mov
sarb
push
add
inc
cld
or
shlb
push
and
cmpsb
pop
aad
in
out
xor
sahf
lods
ror
mov
cmp
pop
sbb
out
ret
rcll
mov
adc
sub
push
popa
xor
stos
push
repnz
pushf
xchg
mov
xor
pop
pop
movsb
loope
mov
sub
mov
je
aad
lds
dec
out
lea
and
mov
imul
lods
cmp
ljmp
cmp
sbb
ljmp
and
mov
or
aaa
daa
pop
inc
dec
or
in
filds
mov
xchg
cmpxchg
shlb
sbb
pop
rorb
aaa
sbb
add
les
cli
push
test
sbb
jp
cltd
lock
xor
add
push
push
repz
mulb
loope
lcall
sbb
cmp
scas
pushf
mov
mov
shll
aad
popf
cmpsl
jg
sbb
in
push
daa
jbe
imul
sub
daa
push
xchg
ja
repz
stos
lea
dec
mov
and
or
hlt
add
lret
cltd
xchg
leave
inc
jb
jbe
lods
xchg
stc
cmp
mov
loope
int3
pop
pop
repnz
pop
movsb
pop
test
sar
add
sub
loopne
arpl
cmp
aad
out
mov
push
push
mov
sub
sbb
jns
pushf
jns
adc
sub
xchg
sbb
vsubps
xor
mov
pushf
mov
out
or
mov
xor
mov
cmpsb
cltd
jg
jbe
xor
xor
dec
seto
movsl
dec
sbb
mov
jbe
pop
imul
je
divl
mov
xchg
vcvttss2si
xor
or
push
and
lock
push
in
sbb
ret
out
sbb
cld
add
loop
mov
in
cs
fst
xchg
dec
es
xor
push
out
adc
lds
sbb
movsb
xchg
push
mov
imul
in
imul
xchg
and
cmc
mov
pop
cmp
jne
ret
inc
inc
push
push
mov
mov
adc
push
aad
out
xchg
into
mov
int3
sub
push
lods
lods
cmp
fs
sarb
lods
jmp
fldlg2
mov
push
mov
shrb
call
clc
es
cmp
nop
cmp
scas
test
arpl
ljmp
cmp
imul
add
or
sub
cltd
lods
push
or
in
mov
movsl
xchg
sbbl
mov
in
addr16
stos
mov
int
shrl
fwait
xor
lret
inc
dec
roll
mov
inc
add
inc
xor
repnz
sti
rcr
shrb
and
inc
gs
lret
jge
push
out
pop
fldln2
add
xlat
dec
clc
aam
or
adcb
loopne
imul
shll
cmp
adc
in
sbb
mov
inc
sbb
lret
jbe
cmp
mov
mov
mov
cmpsl
inc
rolb
mov
inc
out
mov
dec
sbb
aaa
push
stos
pushf
dec
sub
leave
mov
push
xchg
jge
dec
in
out
cmp
fsubrl
cmpl
jmp
sbb
jnp
sbb
mov
outsb
mov
dec
adc
push
std
sub
mov
push
jecxz
jno
or
outsb
stos
and
mov
jno
mov
jno
pusha
test
push
mov
arpl
insl
call
xor
jb
popf
pop
clc
das
push
pop
dec
sub
cld
repz
sbb
mov
sahf
in
cmpsb
mov
jle
mov
inc
sti
aam
xchg
add
xor
xor
pop
fstl
sub
xor
mulb
mov
in
or
adc
movsb
ljmp
arpl
lods
dec
fbld
out
jb
imull
imul
mov
cmc
nop
jecxz
and
scas
push
cmpsb
cmp
fdivl
sahf
fwait
sub
jnp
into
cmpsb
pop
lahf
pop
fcoms
xor
hlt
call
loop
testl
shl
cwtl
cltd
aaa
cmp
xor
sub
sbb
push
data16
pop
enter
adc
cmp
sub
sbb
pop
xlat
imul
jne
stos
pop
pop
comiss
xchg
xor
push
inc
xor
add
cmc
popa
in
out
cltd
xor
mov
out
mov
jno
and
es
out
mov
ud0
mov
cmp
mov
clc
jl
mov
loopne
in
jns
push
or
mov
cwtl
sub
insb
pop
xlat
mov
or
lret
lods
and
mov
mov
cmp
or
fxtract
loope
pop
or
add
mov
pop
insb
mov
add
xchg
sbb
push
movsb
loope
push
cmp
cmp
and
iret
sub
push
or
inc
adc
mov
movl
std
ss
notl
adc
scas
xor
cmp
test
add
xchg
cltd
add
int
add
pop
sti
mov
sbb
push
mov
stos
or
or
mov
repnz
stc
xor
fcompl
inc
mov
fmuls
loopne
lea
add
mov
add
jae
pop
daa
push
cmpsb
and
mov
xlat
into
in
dec
popl
xor
mov
insb
pop
rcll
popf
sti
xlat
pop
lock
ljmp
xchg
test
in
xchg
jg
leave
inc
imul
cld
test
dec
pop
pop
scas
jnp
sbb
and
sbb
inc
ss
and
test
cwtl
jp
adc
into
loope
sbb
loop
sbb
dec
nop
insb
xchg
cld
scas
hlt
pop
std
mov
mov
mul
push
ds
int3
iret
mov
cmpsl
shl
add
testl
or
push
cltd
push
push
aaa
enter
xor
fcoms
cmp
mov
ficomps
or
mov
sbb
imul
das
sub
ss
mov
add
mov
addl
repz
jmp
fisubrs
out
xchg
inc
push
cmpsl
cmp
dec
cmpb
cs
rorb
jne
mov
mov
clc
cmp
adc
jae
popf
and
rorl
call
mov
sub
fbld
xor
fcoml
stos
cs
mov
and
mov
push
dec
mov
sahf
mov
cli
inc
out
dec
mov
jno
jp
add
daa
xor
mov
push
mov
mov
sbb
rol
push
add
sti
xrelease
cmp
mov
loope
mov
adc
push
es
or
mov
cmc
add
jp
inc
pop
ficoml
xor
outsb
jae
ljmp
push
addb
pop
imul
dec
imul
push
xchg
mov
lahf
shl
js
sub
lret
xor
jae
and
pop
addr16
mov
xor
xor
shl
fistpl
pop
and
pop
mov
sub
nop
dec
test
outsl
inc
xchg
in
popf
mov
jns
movsl
push
lea
add
js
sub
pop
cmp
clc
in
push
in
dec
rcl
push
mov
sahf
out
enter
stc
roll
jns
pop
xchg
inc
pop
mov
jmp
pop
xor
sbb
add
gs
outsb
jbe
cmp
mov
out
test
sahf
nop
push
scas
fldenv
clc
xor
sti
imul
dec
xor
pop
mov
imulb
inc
inc
test
push
pop
push
shrb
aas
dec
clc
lods
sbb
push
cmpsb
movsb
mov
andb
out
pop
jns,pn
shr
lea
and
fsubl
movsl
imul
icebp
addr16
inc
out
shrb
insb
and
pop
fisttpll
push
jo
adc
rcrl
mov
or
jno
mov
push
xlat
push
ret
leave
adc
cltd
mov
sub
jl
and
aam
lds
mov
test
popa
mov
push
pop
xor
inc
lret
pop
xchg
fildl
popa
loope
push
std
lahf
mov
lds
in
cmp
cld
jbe
aad
mov
std
mov
pop
xor
mov
icebp
cs
fmul
scas
mov
ror
mov
mov
stc
sub
pop
cs
aaa
jnp
mov
xchg
adcb
jno
or
loope
arpl
fwait
loop
pop
gs
mov
add
jp
cmp
adc
sbb
test
mov
push
sahf
mov
mov
les
test
xchg
nop
push
push
faddl
or
add
sub
jo
push
jno
push
push
into
aad
cmp
push
outsl
popa
filds
mov
lods
xor
in
or
jge
and
fwait
pusha
jb
notl
pop
or
cmp
dec
mov
cmp
inc
sub
fs
add
iret
cltd
repnz
fildll
fwait
adc
sbb
xor
sub
dec
sbbb
adc
scas
sub
stc
push
jns
jns
leave
aaa
add
cmp
pop
push
sahf
je
clc
sub
in
sbb
mov
xchg
lahf
xorps
out
nop
push
xchg
dec
icebp
push
add
out
movsb
jl
and
or
pushf
mov
mov
xchg
pusha
push
mov
ja
mov
xchg
adc
rorb
mov
roll
mov
stos
sbb
add
shll
js
fld
and
push
sahf
push
insl
ds
out
mov
or
movsl
adc
outsl
aam
hlt
enter
aad
shr
lcall
push
es
lods
sti
imulb
dec
out
hlt
fcom
jmp
bound
pop
out
inc
loop
int
mov
sbb
fcmovu
mov
xor
imul
icebp
push
cld
aaa
pop
mov
adc
xchg
adc
pop
add
imul
push
inc
mov
xchg
bound
rclb
popf
adc
roll
add
sub
mov
fbld
xor
scas
sbb
clc
and
adc
xor
stc
jo
xchg
pusha
lcall
sub
pushf
jle
push
rorb
xor
hlt
and
nop
sub
push
std
imul
cmovl
shrb
ja
icebp
or
sbb
or
cmpl
mov
ret
das
xchg
sbb
mov
cld
sub
imul
mov
mov
pushf
testl
and
pop
push
hlt
imul
int3
stos
insb
xor
mov
add
pop
inc
fistl
test
xchg
gs
loopne
imul
mov
dec
jp
xor
or
sbb
and
cmp
jg
add
popa
dec
ljmp
xorl
dec
fs
sbb
out
cld
ss
and
das
pop
sahf
or
and
mov
int3
movsb
xchg
fsubl
or
lcall
add
lret
push
or
das
lds
loop
xor
gs
loope
pop
push
add
loope
outsl
adc
fdivrl
add
xchg
pusha
repz
xchg
sarl
iret
loopne
and
dec
aas
je
xchg
and
fs
mov
or
push
sbbb
fildl
mov
aam
jo
shlb
mov
xlat
jp
int3
cmpb
cli
dec
rcll
sub
lcall
imul
out
hlt
xor
cmpl
pop
cltd
inc
aam
and
sub
sub
dec
or
divb
mov
dec
jmp
lock
pop
xchg
sub
ret
push
mov
xlat
xchg
call
rcrl
add
mov
push
out
mov
out
inc
mov
stos
fisubrs
cwtl
lahf
mov
loopne
jb
adc
shrl
mov
mov
inc
nop
push
out
mov
lret
pop
jo
js
lret
mov
mov
mov
data16
mov
scas
loopne
repz
jp
jnp
pop
lods
and
push
fildl
aam
sbb
pushf
out
imul
sub
cmp
inc
in
in
aaa
adc
cmp
gs
jp
loop
inc
inc
mov
pop
aam
in
sub
xchg
push
lret
imul
ljmp
adc
mov
and
orb
sbb
les
mov
or
movsb
dec
sbb
jecxz
repnz
outsb
lds
in
fidivs
lea
inc
mov
cwtl
xchg
std
out
adc
adc
rdpmc
int
sbb
cmp
sbb
movsb
cmpsb
das
fists
mov
or
dec
cmp
inc
jl
push
cmp
aas
push
inc
inc
ret
aas
scas
jnp
xchg
int
outsl
dec
inc
mov
pop
in
jl
scas
or
std
jnp
ret
lods
pop
mov
push
pop
adc
aam
fimuls
mov
sbb
pop
andl
pop
adc
pop
in
gs
push
pop
jmp
jecxz
pop
js
rclb
inc
push
pusha
sbb
repnz
add
sahf
push
fldt
cwtl
mov
mov
leave
fwait
add
lea
cmpsb
mov
mov
mov
xor
sub
lds
xchg
push
in
pop
inc
mov
pop
push
movsl
shrl
js
sti
jae
fdivp
lcall
ret
gs
inc
push
mov
in
mov
xor
dec
dec
repnz
xchg
and
nop
inc
xorl
std
je
jo
pop
dec
xor
push
xor
mov
push
insb
outsb
jl
dec
repz
call
and
ficoml
or
inc
imull
push
dec
xchg
pop
das
bnd
dec
fnstcw
xor
sub
divl
pushf
iret
or
jmp
mov
in
mov
insl
jo
add
lret
fcompl
jl
jecxz
pop
sub
les
dec
in
xor
dec
pop
sbb
fnsave
cltd
lock
add
mov
ss
in
in
mov
dec
imul
xor
cwtl
push
jge
scas
dec
or
fcompl
push
dec
in
and
xor
or
lret
fwait
mov
xchg
dec
inc
mov
cmc
sbb
push
mov
es
lret
mov
loop
int
ret
cmc
xor
loope
mov
mov
lret
aam
rcrl
mov
shll
icebp
ret
inc
push
push
fmul
jo
int3
xor
mov
mov
imul
mov
pop
mov
movsb
push
mov
addb
xor
jmp
movl
int3
xor
and
lds
adc
dec
or
ret
pop
mov
and
jae
les
mov
fxch
ret
jbe
cmpsl
ss
cmc
lods
xor
sub
fisubs
lahf
xor
aad
push
xor
clc
inc
cmp
push
arpl
movsl
into
xor
pop
jp
mov
imul
push
pop
pop
stos
push
mov
add
push
xchg
call
mov
xor
fisubs
nop
cmp
movsb
mov
pop
add
aad
cli
adc
mov
pop
or
xchg
sahf
jns
clc
sbb
and
popf
jge
sub
subb
lea
lds
sti
stos
hlt
iret
fadd
pop
lret
mov
shrb
insb
sbb
enter
cmp
aam
stc
lods
sbb
mov
pusha
aaa
sub
nop
pop
dec
es
push
int
cli
nop
sbb
in
ret
mov
mov
pushf
sbb
cmpl
dec
mov
and
mov
xor
stc
and
mov
dec
sbb
xor
cmpsb
nop
enter
shl
add
sbb
stos
repz
repz
dec
ss
xor
dec
fwait
inc
jb
inc
xchg
in
icebp
popf
nop
push
pop
into
movsl
ret
stos
push
sub
mov
hlt
jmp
cmp
andl
cmp
and
mov
mov
pop
xor
push
ret
int
mov
inc
addr16
gs
xchg
sub
test
xor
orl
add
sbb
or
pop
jge
out
jg
aad
push
das
xorb
adc
sub
mov
shl
repz
cmp
and
jb
mov
aad
or
mov
lock
xchg
movb
cmpsb
stos
frstor
es
xor
out
xchg
add
cmp
jge
adc
jbe
sbb
push
cltd
scas
in
das
mov
sbb
fildl
and
push
and
cvtps2pd
push
icebp
outsl
out
ficoml
jg
gs
inc
mov
pop
icebp
aaa
ror
dec
and
cltd
shl
cmc
adc
pop
sbb
jl
fwait
rcr
push
and
dec
je
outsb
cmp
sub
call
jecxz
loopne
mov
ss
into
or
mov
cld
imul
jge
rclb
aad
neg
sub
push
or
push
mov
sub
call
inc
aam
xchg
stos
jmp
in
rol
inc
dec
xor
sub
mov
sti
jmp
fldl2e
imul
fstp
dec
xchg
lahf
cmp
push
mov
and
shll
or
xlat
ret
mov
jge
lods
aam
arpl
push
mov
pop
testl
push
inc
jg
cld
pop
adc
push
or
cld
jb
leave
push
xchg
mov
dec
mov
fstp
jne,pn
mov
mov
out
es
fsubrp
fwait
daa
fdivs
fxch
push
shlb
and
xchg
mov
xor
cmp
outsb
cmp
or
sahf
inc
cmpsl
fildll
mov
pop
mov
pop
inc
out
jp
push
filds
filds
cmp
ret
lods
lret
jo
mov
cli
sbb
aam
cmp
faddp
inc
movsl
sub
push
stos
xchg
xor
insl
adc
lea
imul
fistpl
jmp
shrb
mov
push
movsl
test
xchg
mov
sbb
or
fcoms
loopne
mov
mov
cli
into
jns
fsubrl
mov
nop
dec
adc
jns
mov
insl
gs
pusha
lds
fsubs
pop
fwait
push
mov
aas
push
repnz
cmp
out
xchg
xlat
in
xor
cmp
cmc
stos
xchg
and
mov
xor
or
das
cmpsl
sub
lods
rcrb
dec
mov
shlb
ret
dec
inc
into
mov
cmc
lock
aad
pop
js
mov
nop
das
mov
xlat
cmp
insb
lods
aas
mov
push
or
fmull
call
and
je
jge
rcr
xor
int
sub
cmp
inc
and
into
enter
add
scas
adc
lods
pop
push
pause
cmp
sbb
mov
jge
cld
aas
inc
test
push
adcl
shl
push
loopne
std
ljmp
inc
xchg
gs
mov
into
popf
cmp
rol
pusha
js
in
adc
rcll
outsb
inc
lds
fcmovne
cmp
cmpsl
das
jnp
jge
xchg
sbb
das
mov
out
movsb
loopne
inc
or
popf
xor
jo
call
and
dec
imul
mov
imul
in
and
mov
das
mov
lods
dec
fsubrl
sbb
pushf
sub
inc
subb
jmp
xchg
adcl
mov
dec
mov
sub
and
setp
repz
aas
das
testb
loopne
xor
add
cld
sbb
xlat
mov
loopne
jmp
ljmp
loopne
push
loopne
sarb
inc
mov
outsb
sbb
pop
pop
test
enter
lcall
loope
xchg
add
fdecstp
in
fcomps
dec
mov
push
dec
push
mov
xchg
xchg
dec
pop
fstpl
push
mov
add
push
orl
movl
mov
xchg
mov
mov
lea
mov
lock
jo
push
sub
lcall
das
mov
push
adc
ret
cwtl
lds
ss
jbe
inc
or
mov
ret
jecxz
lret
pop
mov
gs
data16
inc
push
or
dec
movsl
lods
sub
mov
xchg
roll
cli
mov
cli
fistps
push
outsb
popa
je
in
outsl
lret
mov
lods
sub
xor
sbb
cmp
xor
jle
aam
xlat
cld
adc
jp
sub
and
xor
mov
ret
mov
push
pop
fstps
xchg
or
sbb
insl
mov
lods
sbb
mov
jmp
lods
lea
pop
mov
lock
or
pop
push
mov
sahf
es
lods
lods
gs
not
xorb
insb
lret
inc
dec
ja
xchg
rclb
mov
out
push
lods
cmp
test
sbb
xchg
loopne
mov
xchg
aad
ds
cmp
shl
adc
inc
mov
lods
mov
xchg
jae
mov
loope
xor
mov
cltd
in
and
push
add
cwtl
es
mov
cmp
cmp
dec
pop
mov
das
cli
clc
mov
mov
test
or
adc
jle
xchg
sbb
movsb
mov
out
pushl
or
jnp
pop
jne
xchg
imulb
add
mov
adc
addr16
mov
filds
and
icebp
jecxz
and
xor
mov
fidivl
xor
push
cmp
dec
jnp
in
inc
movsb
fsubl
jmp
add
sub
ret
out
dec
bound
pusha
push
out
push
pop
mov
repnz
roll
push
es
dec
in
data16
mov
dec
jbe
das
pop
clc
push
scas
jle
es
mov
and
scas
popf
dec
mov
sbb
aam
aas
sbb
xchg
mov
add
or
push
loope
int3
scas
jno
sub
cmp
inc
andl
mov
enter
call
lcall
dec
loope
mov
hlt
sub
stc
out
cmc
movsb
ja
fildll
push
nop
dec
sbb
rcrb
mov
scas
pop
les
js
push
mov
jecxz
test
xchg
inc
push
xlat
test
shll
cltd
dec
cmp
and
popa
mov
push
or
lods
mov
andl
adc
lock
pop
subl
mov
addb
ja
mov
push
xchg
jno
out
mov
push
add
test
xchg
int3
mov
in
cmp
inc
sbb
ret
int3
push
out
add
mov
inc
subb
fs
fwait
xor
inc
mov
cltd
es
jg
aaa
cmp
sub
jbe
pop
xchg
and
rclb
inc
push
fidivl
xchg
ljmp
std
add
lds
btc
cli
popf
das
add
es
notb
ret
cmp
inc
insb
push
clc
xchg
je
fucom
sbb
insb
inc
andl
fs
call
nop
sahf
jo
cmp
inc
pop
test
arpl
cwtl
shrb
mov
xchg
sbb
dec
pop
cltd
ret
sbb
jo
adc
dec
xchg
xorl
add
sub
push
lret
pop
sarb
repz
mov
pop
cmp
mov
and
jl
mov
movl
adc
pop
pop
gs
in
fistpl
mov
clc
loopne
mov
and
inc
add
sbb
cmpsb
sbb
or
xchg
repz
outsl
jge
sub
and
icebp
fistps
adc
loope
inc
push
ljmp
scas
test
pushf
lds
mov
add
lods
cmpsl
jl
ss
mov
mov
jg
adc
sarb
rclb
and
push
adc
xor
mov
and
push
stos
and
repz
mov
pop
dec
jne
inc
push
mov
enter
jne
pushf
add
ficompl
xchg
cmp
das
mov
lahf
mov
or
adcl
add
sbbl
in
js
mov
pop
je
pop
lock
arpl
js
lcall
xor
fnstenv
in
test
mov
add
and
ljmp
ja
int3
xor
dec
mov
push
or
lret
icebp
pop
adc
jb
sbbl
lods
into
and
loope
pop
jge
lret
loope,pn
lds
mov
int
jp
movl
push
pop
iret
xchg
lds
sub
push
in
and
xchg
popf
xor
lock
sub
sbb
insb
pushf
fidivl
lahf
cmpsb
xchg
and
and
aam
xchg
aaa
inc
jmp
loop
or
xchg
push
rcr
out
add
out
lret
test
stos
cmpsl
ljmp
repnz
movb
in
dec
mov
ret
mov
sbb
or
int
lcall
or
xchg
adc
or
or
xchg
pop
mov
sub
test
stos
pop
mov
rclb
test
and
in
and
or
ret
mov
xor
xchg
xchg
push
jmp
inc
mov
add
mov
add
addr16
jl
iret
jbe
fwait
ds
bnd
dec
sbb
dec
test
addr16
inc
aam
inc
insb
test
loope
lret
push
rcrl
xchg
notl
int
test
loopne
sbb
enter
ds
dec
dec
mov
test
test
cmovp
xlat
jge,pn
xchg
clc
lods
mov
mov
push
arpl
mov
iret
idiv
jbe
inc
push
xor
ds
or
lea
sbb
mov
pusha
xchg
aas
std
xchg
notb
pop
leave
add
cmpsl
adc
dec
mov
push
pop
mov
adc
add
xchg
pushf
mov
lea
imul
lret
or
fs
cmp
push
inc
adc
mov
xor
shrb
stos
pop
jle
ss
mov
add
sub
aas
mov
adc
fimuls
in
jge
ljmp
sahf
mov
ret
xor
stc
and
cmp
push
fs
dec
lret
rsqrtps
adc
test
jle
rolb
into
ret
movsl
sub
sti
xor
fadds
shrl
es
push
rcl
repnz
push
inc
adc
out
pop
scas
pop
data16
jbe
out
xor
loope
or
pop
push
repz
sub
sub
popfw
cmovle
dec
mov
cmpsb
sbb
jecxz
xchg
adc
xchg
mov
aaa
inc
cltd
mov
insb
pop
fisubs
shr
addl
jno
scas
add
sahf
shr
lret
pop
xchg
and
push
or
jp
testb
repz
pop
cmpsb
movsl
ss
sahf
test
mov
jmp
test
push
xor
stos
mov
scas
fadd
jg
add
mov
xchg
pop
inc
push
lock
stos
cld
ja
lods
pop
jo
mov
mov
sub
jbe,pt
push
repz
stc
sti
inc
mov
bound
leave
cmp
add
adc
jge
and
cmp
mov
xchg
fwait
push
repz
jg
cmp
popf
popa
cmp
jns
std
push
xchg
mov
stos
pop
mov
sbb
xlat
dec
popf
mov
imul
scas
jle
in
loopne
sbb
lock
sti
pushf
xchg
push
push
push
das
and
mov
cs
ss
insb
fs
mov
pop
or
push
xlat
test
dec
dec
mov
mov
and
in
cmp
lods
xor
mov
leave
into
lret
inc
into
push
mov
pop
cmp
ss
fimuls
es
loopne
in
sarb
out
pop
ret
cmc
lods
xchg
stos
in
jnp
push
push
das
mov
mov
and
in
jmp
in
sbb
movsl
dec
cli
loopne
xorl
mov
insl
daa
lea
or
or
jb
cmp
test
decl
xchg
inc
add
repz
jmp
push
sbb
cmc
cld
xor
dec
jne
mov
outsb
jecxz
lods
outsb
mov
pop
cwtl
ds
lret
push
fwait
push
insb
andb
jecxz
fcomps
xorl
adc
mov
test
or
inc
fcompl
xor
add
push
cmp
pusha
push
insb
pop
xor
mov
jle
repnz
sub
popa
sub
sbb
mov
xor
jmp
or
cvtps2pi
and
pushf
dec
outsb
cmpsl
dec
pop
push
mov
cli
pusha
xchg
loope
mov
dec
xor
cmp
and
dec
adc
inc
lret
add
iret
sub
mov
mov
lahf
push
mov
push
mov
inc
gs
pop
loop
mov
xchg
je
call
inc
fistpl
sub
fs
bound
scas
pop
div
sbb
and
cmp
cmpsb
push
cli
cmp
sbb
sti
jno
clc
subb
cmovb
xor
jb
dec
repz
push
pusha
cwtl
scas
pop
dec
push
inc
in
clc
jecxz
dec
jg
pop
jns
add
ja
mov
dec
xchg
add
mov
push
outsl
rcll
mov
inc
mov
push
push
mov
jg
sbb
pop
lret
shlb
ss
sub
or
mov
lret
cmpsl
mov
or
cmpsl
mov
scas
scas
xor
mov
pop
por
sbb
fsubl
bound
lret
xor
mov
jecxz
scas
out
mov
push
mov
icebp
lods
das
pop
mov
mov
mov
mov
pop
shlb
hlt
xchg
iret
sar
push
sub
in
cmp
jnp
xor
xchg
fisubs
adc
int
fsubr
mov
dec
int
sbb
or
inc
pop
out
add
lret
jo
mov
pusha
pop
cmpsl
xchg
jb
loope
add
nop
cmp
sarl
push
push
cmp
jbe
rcr
sub
or
ret
push
mov
in
mov
pusha
ja
in
pop
push
into
jg
addr16
in
xorl
in
test
addr16
adc
mov
or
inc
ljmp
jne
hlt
push
fwait
cld
cmpsl
bound
mov
mov
adc
jo
adc
cli
enter
ds
adc
xor
adc
fsubrl
lret
stos
xchg
mov
ret
sub
int
push
iret
cmp
jg
movsl
mov
es
mov
jmp
fwait
jns
and
cltd
rcll
out
push
stc
mov
jnp
jg
loope
inc
xor
mov
dec
cmp
mov
jl
jb
lahf
shll
mov
hlt
fwait
and
imul
aam
lret
xchg
sub
dec
fwait
std
lods
outsl
and
adc
pop
aad
sahf
int3
mov
add
insb
test
hlt
ret
pushf
push
bound
clc
cmp
sti
int
add
xchg
enter
mov
aaa
scas
and
mov
mov
fwait
xlat
popf
into
jmp
dec
mov
jmp
mov
fdivrl
fs
push
mov
repnz
std
push
push
cltd
lea
mov
jmp
shl
ljmp
mov
filds
es
int
fldenv
arpl
nop
cld
lcall
mov
std
jg
ret
adc
popf
addr16
ja
cmpb
push
or
or
mov
arpl
les
dec
jo
or
push
mov
cmp
scas
adc
mov
psubq
pop
cmp
lret
lcall
mov
push
sub
or
lods
setb
into
dec
lret
and
test
out
out
adc
inc
pop
mov
jg
pop
inc
mov
fcompl
inc
mul
cwtl
icebp
mov
xchg
aam
add
add
mov
add
rorl
sbb
xlat
aam
movsl
xor
sbb
aam
test
jo,pt
ljmp
mov
lea
mov
cmpsb
jbe
movsb
lret
in
insl
mov
xor
push
fs
push
lcall
lods
daa
fnsave
or
sub
jge
out
push
push
or
pop
cmp
xchg
movsb
fwait
push
imul
lahf
xchg
aaa
lahf
out
daa
es
ljmp
xchg
je
movsb
sub
sub
stc
inc
repz
sub
pushl
pop
jnp
mov
ret
ja
pop
mov
mov
inc
jbe
cmp
repz
sbb
stos
lret
insb
hlt
push
clc
sti
push
jae
notb
jg
mov
loop
push
inc
out
inc
into
or
sbb
jle
jnp
or
outsl
movsl
dec
lock
ds
int3
mov
pop
or
add
inc
sub
xor
push
push
push
mov
dec
sbbl
cmp
mov
loope
cmp
sub
jnp
add
insl
lods
push
and
ljmp
shlb
dec
sbb
mov
xchg
imul
and
sbb
mov
lret
inc
mov
insl
push
imul
cwtl
and
sbb
push
test
dec
and
inc
fldl
out
lock
push
repnz
inc
xor
dec
popf
call
push
pop
xor
cmpsb
jp
ds
xchg
jb
pop
in
inc
ficoms
cmp
lods
or
inc
push
test
imul
aas
or
sbb
mov
jl
xor
jge
movsb
lahf
mov
mov
xchg
push
scas
sub
xor
mov
jg
cmp
cmpsl
jecxz
scas
les
cmp
xlat
scas
pushf
call
pusha
adcl
mov
or
in
pop
mov
mov
aas
mov
cmp
pop
and
rorb
mov
pop
pop
cmpsb
add
aam
lahf
mov
pop
fadd
in
arpl
nop
aam
xchg
cmp
push
imul
fwait
dec
sub
movl
jl
movsl
mov
mov
cmp
outsb
lods
mov
pop
icebp
cmc
ret
outsb
or
dec
push
mov
faddl
imul
xchg
roll
sub
jne
xor
test
cmpsl
icebp
and
test
mov
sub
aam
sbb
bnd
add
xchg
jle
jmp
mov
dec
enter
int3
icebp
cmc
stos
stc
pop
sub
sub
scas
lcall
inc
scas
jp
inc
gs
xchg
and
in
scas
jae
nop
loope
sbb
incb
in
mov
or
lahf
loopne
pop
nop
out
adc
mov
jle
xchg
pusha
sahf
xchg
mov
push
add
xchg
sub
les
insb
and
adc
sbb
enter
mov
leave
inc
mov
mov
add
addr16
pusha
outsl
leave
test
xor
mulb
fbld
movsl
rorb
xchg
push
jne
pop
fnstcw
and
cmp
mov
sub
lret
scas
xor
das
es
xlat
inc
mov
adc
sbb
mov
clc
mov
insb
dec
aad
mov
mov
test
cmpsb
dec
pushf
jno
stos
leave
inc
push
and
iret
lods
dec
xchg
sbb
mov
faddl
popa
lods
xchg
sub
fdivrs
pusha
or
pop
jp
inc
test
xor
xchg
ja
or
inc
xchg
aaa
fbstp
dec
popa
sarb
pop
data16
scas
xchg
push
sbb
das
xchg
fbstp
sbb
hlt
in
mov
xchg
lods
shlb
hlt
xlat
fdivrs
sub
pop
leave
sbb
sbb
mov
mov
filds
jmp
sti
xlat
mov
dec
dec
xchg
pop
stos
loope
in
push
jl
js
bound
push
sbb
cmp
cmpsl
add
sub
hlt
dec
mov
ja
in
mov
lahf
fnstcw
lds
dec
ret
enter
xchg
inc
stos
sbb
and
add
sbb
divl
mov
inc
call
nop
ja
adc
jle
jmp
dec
xor
xchg
scas
ja
scas
inc
jns
xor
imul
jne
jae
int
aad
jbe
jae
or
cmp
mov
das
les
fldenv
das
jl
ja
outsl
ljmp
push
mov
pop
lods
loop
pop
outsl
dec
inc
pop
nop
mov
shr
adc
mov
loopne
fnstcw
cli
adc
int
sub
adc
shr
lock
pop
daa
and
mull
mov
xchg
pop
or
push
fwait
ret
aas
stos
arpl
mov
in
sahf
mov
movsb
int
ficoms
cmp
push
enter
ljmp
test
mov
push
rorb
mov
adc
pop
inc
incl
or
jecxz
mov
sbbl
mov
jge
andl
aad
in
ja
push
sub
jnp
mulb
mov
test
dec
add
xchg
sbbl
mov
addr16
adc
mov
idivb
repnz
fwait
jge
xchg
enter
xchg
ret
push
mov
push
shr
cmp
xchg
jmp
dec
xor
clc
js
mov
ret
cli
scas
push
and
inc
pop
movsb
xchg
jns
xchg
rclb
adc
pop
sub
push
roll
jnp
and
xchg
add
addb
adc
test
mov
js
es
xlat
mov
dec
mov
xor
aam
sbb
ljmp
and
scas
cli
cmp
daa
addr16
pop
insl
push
sub
in
mov
pop
mov
in
cmp
cmp
cmp
addr16
pop
xchg
add
stos
movsb
push
xorb
insb
ja
and
idivb
add
je
ret
adc
adc
adc
dec
inc
enter
add
insb
sbb
or
and
or
sub
xchg
xorl
shll
lahf
loope
aam
fisubl
push
fsubs
stos
orl
fs
shl
dec
repnz
test
jecxz
jns
pop
out
stos
jnp
sbb
cmp
cltd
jecxz
adc
dec
out
mov
and
xchg
mov
adc
jbe
xorl
test
add
scas
jg
pushf
cmp
xchg
inc
inc
or
stos
xchg
int3
or
outsb
and
aaa
sub
negl
pushf
mov
popf
mov
jge
or
fbld
pop
into
push
pop
dec
inc
mov
or
sub
movsl
mov
negb
shr
shl
mov
push
dec
fsubrl
or
dec
add
stos
mov
das
aaa
inc
sub
inc
repnz
mov
in
hlt
call
repz
xor
loope
xlat
outsl
jg
pop
out
addr16
shll
sub
dec
push
fidivrl
mov
rcll
ret
or
xor
pop
outsl
fldcw
jae
xor
cld
push
gs
ljmp
je
aaa
pusha
fwait
push
adcb
enter
rolb
cmp
stc
dec
lds
cmc
mov
mov
jecxz
cltd
bound
push
imul
inc
and
aaa
adc
out
out
jmp
popf
pop
into
pop
mov
sti
mov
rcll
popf
inc
in
jmp
xchg
jno
dec
scas
and
in
imul
dec
sub
nop
jbe
pop
xchg
dec
mov
xchg
pusha
leave
addr16
ja
sub
jmp
sti
add
add
cmp
xchg
jecxz
dec
xchg
addr16
lret
sahf
xchg
aas
loop
sub
sbb
in
add
push
loop
lahf
xor
cld
inc
xlat
ja
loopne
cmp
dec
push
sub
int3
clc
add
popf
xchg
icebp
mov
dec
or
loop
in
mov
mov
rorb
push
lahf
jp
es
out
pusha
repz
scas
jge
sbb
sbb
sbb
aaa
adc
mov
popf
mov
not
mov
xchg
inc
cmp
xor
outsb
sti
js
mov
mov
je
add
scas
xchg
cltd
lock
lcall
lods
fmuls
mov
gs
jg
pop
mov
mulb
inc
mov
insl
addl
data16
sub
adc
adc
jnp
adc
jno
shlb
dec
out
fildll
mov
ja
xor
or
mov
or
les
scas
mov
push
cltd
lcall
mov
test
xchg
jns
ja
outsl
insl
adc
in
xor
mov
mov
aaa
cltd
pop
fisttpll
pop
cld
cmpb
ret
test
shlb
xchg
imul
cmpsb
fsubrs
test
sub
ret
mov
jns
insb
jmp
adc
cmp
inc
outsl
adc
enter
imul
inc
pop
and
lods
arpl
dec
lods
and
mov
push
shll
push
mov
adc
push
sbb
stc
js
mov
inc
cmp
cmp
or
add
add
nop
daa
insb
mov
add
and
popf
pop
jge
loopne
call
sbb
adc
and
dec
adc
cmp
xor
sbbb
add
shll
mov
inc
adc
mov
xchg
pushf
dec
cltd
add
cmp
test
push
jge
rcll
adcb
outsl
adcb
rolb
lret
in
adc
shll
sub
mov
cmp
lds
mov
mov
insb
mov
fdivrl
mov
shlb
aad
stos
sub
xlat
or
cmc
add
out
sbb
or
pop
scas
inc
xor
adc
pop
jne
ljmp
outsb
loop
xor
mov
inc
inc
push
cmp
in
sbb
dec
sbb
jne
ror
addr16
sub
jle
cmc
nop
inc
jg
push
push
push
pop
test
mov
inc
fldcw
call
mov
or
leave
and
sub
mov
aad
or
lea
stos
test
xchg
cmp
lret
or
xor
or
pop
out
cmc
adc
xchg
arpl
mov
shr
orl
pusha
cmp
fisttpl
aam
nop
xor
mov
dec
xchg
adc
mov
pop
sbb
ja
outsl
les
cmp
in
adc
aas
lea
push
mov
mov
jb
lock
pushf
push
jmp
cmp
add
inc
sbb
enter
pop
lock
pop
pop
or
mov
fmuls
mov
pop
aas
insb
sar
sub
in
jnp
in
hlt
xchg
mov
stos
sbb
lret
push
mov
cmp
shr
xchg
push
cvtps2pd
cmp
xchg
mov
mov
shl
dec
sti
and
dec
popa
mov
xlat
arpl
mov
xchg
mov
xchg
out
in
xchg
xor
xchg
sbb
icebp
add
in
or
icebp
gs
jmp
add
mov
push
lahf
adc
aam
mov
pop
pop
popf
aaa
mov
adc
pop
dec
dec
jno
pop
repz
out
aaa
lock
orl
inc
push
mov
imul
cmp
and
jge
dec
ja
jns
loope
leave
push
cmpsb
push
sub
dec
data16
mov
fdiv
lcall
mov
insl
movsb
dec
shrl
stos
sbb
je
push
adc
and
mov
sbb
test
inc
lods
and
inc
ret
pop
pop
aad
inc
imulb
adc
fs
adc
ja
xor
xor
or
arpl
xor
push
clc
das
or
add
pusha
inc
ds
mov
push
mov
sbb
sbb
cmpsb
or
mov
dec
sub
ret
fwait
lret
xchg
sub
mov
pop
push
shl
or
test
pop
mov
das
lcall
cmpsl
pushf
adc
test
adc
shrb
fadds
and
add
pop
adc
outsl
jns
jo
mov
inc
je
inc
leave
pop
mov
sbb
dec
ret
mov
hlt
and
insb
cmp
inc
scas
jae
push
adc
pop
mov
cmp
es
cmc
add
mov
imul
shufps
and
in
jecxz
rcll
push
push
sub
lods
lea
enter
jb
add
adc
outsb
jmp
sub
cld
pop
testl
faddl
jle
jg
mov
iret
loop
mov
lcall
aas
jp
adc
xor
mov
adcb
cld
ret
lcall
inc
sarb
inc
dec
nop
mov
cs
jl
pop
subl
repz
rcr
add
aas
fsubl
inc
arpl
ljmp
ja
daa
mov
dec
dec
out
test
leave
cmp
xchg
repz
movsl
enter
adc
mov
test
inc
mov
mov
inc
insl
fnstenv
jne
lock
out
negl
sub
jg
jne
push
jne
aam
mov
flds
movsl
ja
jns
and
pop
pop
inc
je
inc
dec
lods
or
cld
leave
dec
das
arpl
fwait
jnp
mov
adc
and
mov
xchg
testb
adc
mov
xor
jne
rcr
stos
pop
xchg
mov
enter
pop
pop
or
push
mov
ds
fiaddl
xorl
pop
adc
mov
dec
mov
adc
insb
mov
popf
out
mov
clc
ror
mov
push
jmp
repnz
mov
test
mov
rolb
cmp
push
imul
inc
push
xchg
popa
mov
mov
lea
mov
inc
rcll
dec
data16
jae
pop
loop
leave
xchg
and
jmp
call
insl
and
shl
sbb
dec
shlb
adc
cmp
push
int3
daa
push
fimuls
hlt
aad
inc
mov
fnsave
xchg
mov
jmp
mov
in
sub
add
xchg
lea
lods
mov
inc
aam
sbb
pop
roll
mov
sub
cltd
les
mov
mov
inc
ss
and
cmp
mov
test
pop
js
mov
xor
insl
ret
fists
in
pop
cmp
fdivrs
pop
shrb
out
mov
push
sub
test
fdivs
xchg
xlat
jge
adc
ljmp
popa
mov
dec
imul
sbb
insb
scas
and
cmpsl
jle
lds
insl
cmp
mov
xchg
lock
cmp
mov
pusha
dec
jo
loop
rol
vpaddsw
pop
add
mov
jo
out
inc
or
scas
mov
ret
cmp
out
xlat
scas
fndisi(8087
shll
mov
je
cmp
dec
jno
and
movsb
xorl
xlat
mov
adc
dec
mov
mov
add
pop
jb
test
test
push
in
adc
pop
add
cmp
inc
sbb
movsl
cld
mov
dec
sub
sarl
mov
jns
push
sbb
mov
ja
xchg
divb
rclb
out
into
mov
push
test
fisttps
lcall
mov
fsub
push
std
pop
bound
mov
push
mov
and
sub
fstpl
lods
fsubrs
out
stos
into
push
or
xchg
scas
inc
add
lcall
jne
insl
in
add
sub
xchg
std
lcall
mov
cmpsl
in
notl
std
stos
mov
dec
movsl
lock
jecxz
clc
cmp
add
xor
inc
sbb
mov
rclb
js
jae
dec
xchg
push
addl
xchg
xor
inc
sbb
jp
jb
lods
dec
xor
mov
cmp
xchg
cli
insl
xchg
dec
call
adc
adc
pop
stos
adc
jl
loope
push
fiaddl
mov
clc
cmp
pop
or
sti
ficompl
lea
cld
cmp
dec
iret
lods
xchg
cltd
lods
punpckhbw
xchg
mov
insl
jno
lods
jbe
movsl
nop
imul
add
sbb
enter
cmp
fwait
sub
sar
mov
in
insb
aas
rcll
ret
mov
lock
inc
lea
data16
mov
or
push
lret
imul
sbb
psubw
fsubr
adc
jp
dec
aam
lods
adc
rorl
jmp
shrb
mov
addr16
test
xchg
inc
xchg
pushf
jbe
or
scas
fwait
aad
rclb
outsl
cmp
mov
adc
jne
movsb
dec
dec
jo
mov
inc
rolb
int
inc
jl
mov
jg
sbb
jo
inc
jno
daa
gs
mov
inc
pop
inc
mov
jbe
dec
fsub
movsb
pop
int
add
imul
cli
sbb
icebp
pop
mov
cli
shl
scas
imul
sahf
addr16
xor
out
into
or
cmp
jmp
in
lahf
adc
mov
lret
rep
add
orb
sub
inc
js
shlb
dec
dec
repnz
clc
jb
and
mov
jge
ljmp
sub
ss
add
gs
fisubs
test
in
out
sahf
and
push
pop
int3
inc
fdiv
xor
cwtl
cmp
stc
push
rep
insl
aad
enter
cld
and
inc
ja
mov
shr
mov
call
shlb
xlat
loope
dec
mov
sub
inc
or
pop
inc
mov
fwait
push
ds
stos
xchg
pusha
pop
lock
add
vorps
cmp
push
adc
js
push
fstp
rcrl
cmc
jmp
mov
std
inc
test
and
subb
outsl
movsb
cmpsl
inc
mov
lret
ficoms
int
cmpsb
nop
cmp
cli
jo,pt
in
popf
scas
std
sub
push
push
mov
push
fnstcw
and
cmpsl
stos
rol
xor
push
mov
jmp
jne
fiaddl
jae
nop
iret
aam
dec
jae
call
lods
dec
negb
icebp
cmp
icebp
nop
mov
xor
arpl
push
stc
pop
gs
mov
mov
aaa
jnp
mov
jl
loope
test
out
pop
sbb
rol
jmp
inc
das
sub
pop
fisubs
loope
loope
in
add
ret
lods
pop
gs
fdivs
out
fwait
out
cld
xchg
jne
mov
mov
mov
sbb
cmpsl
cmp
push
mov
mov
frstor
mov
fsubl
adc
lahf
outsl
mov
xor
dec
fs
add
lds
gs
hlt
int3
stos
leave
lods
out
add
out
inc
arpl
leave
sbb
inc
cltd
test
lret
inc
cmpsl
adc
lahf
outsb
orl
mov
stos
lds
cmp
mov
std
xor
and
mov
lods
adc
out
xor
loop
xchg
inc
jecxz
setp
mov
inc
insl
mov
nop
pop
xchg
dec
sbb
insl
mov
cmc
pop
mov
xor
out
xor
arpl
xor
test
insl
sbb
lret
ficoms
mov
cs
jns
or
sbb
sbb
push
xchg
inc
push
rolb
push
aaa
mov
cmp
xchg
cld
push
rcr
bswap
movsb
clc
aaa
push
mov
rcrb
sbb
popf
adc
clc
adc
cmc
inc
fistpl
sub
or
inc
add
jle
add
ds
inc
je
or
movsl
mov
inc
xor
pop
and
sub
push
sub
dec
pop
pop
bound
nop
inc
xor
fsubrs
inc
into
pop
aam
pop
outsl
lcall
sub
jmp
mov
pushf
iret
jne
jns
stos
push
cmpsb
out
call
jne
xor
mov
or
and
nop
ds
test
imul
sub
add
sub
pop
cmp
cmp
fisttps
inc
data16
sub
pop
enter
sahf
push
mov
xor
mov
mov
and
sarb
or
xor
ss
pusha
mov
push
jb
pusha
pushf
xor
sub
cmpsl
xorl
jo
cmp
rcr
mov
ficoml
jne
js
xchg
cmp
jmp
inc
in
inc
sbb
lret
dec
sbb
inc
push
or
jmp
add
testb
daa
inc
xor
cwtl
mov
xor
shll
push
or
iret
and
mov
lea
nop
jno
push
push
loope
pop
mov
ret
fldcw
or
mov
push
pop
jg
xchg
ret
lods
lock
jg
test
enter
sbb
cmp
sub
sub
cmp
fcomps
test
cld
jo
ljmp
xor
jns
xor
push
cli
push
js
jl
iret
sti
popa
and
aad
cmpsl
ret
inc
gs
inc
inc
loop
nop
xor
add
cwtl
repnz
fwait
add
aam
out
clc
xchg
dec
jl
sbb
fistps
cmpl
pushf
ljmp
and
fcmovnbe
repnz
or
cmc
fcmovnu
cmp
das
and
adc
and
sub
or
in
pushf
and
out
pop
idivl
sbb
insb
movsb
test
cld
popf
jl
das
xchg
inc
call
pop
movb
add
lds
into
int3
jbe
das
fbstp
inc
xchg
mov
xchg
jb
mov
xor
push
mov
imul
inc
jecxz
xchg
popf
inc
mov
add
mov
mov
fsubrl
mov
mov
mov
jmp
adc
sahf
scas
sbb
sbb
mov
out
or
jle
fidivs
fwait
xchg
js
adc
jno
sti
pop
mov
out
lock
cltd
imul
adc
xchg
cmc
lcall
push
xchg
fisttpll
fistl
sub
cmp
pop
or
aaa
sbb
lahf
outsl
aas
inc
cmp
xchg
push
stos
into
imul
mov
add
mov
jb
std
push
cmpsl
sbb
adc
sub
rclb
dec
add
jle,pt
xchg
mov
roll
movl
push
sub
inc
flds
test
ds
cmp
push
stos
in
ret
push
mov
mov
jb
mov
in
enter
sbb
adc
inc
xchg
sub
repz
pop
pop
xchg
out
adc
js
lcall
jle
mov
mov
outsb
xchg
test
stos
maskmovq
testl
in
and
out
cmpsl
sbb
jae
dec
subb
stos
mov
jne
in
or
or
mov
cmp
mov
jmp
push
fiaddl
rolb
mov
movsl
or
push
jge
pop
inc
and
int
inc
sahf
mov
scas
lods
je
into
sbb
cmp
rcll
mov
mov
stc
inc
sub
push
clc
jge
pusha
mov
gs
sbb
out
test
sub
adc
cld
aam
ret
push
sbb
mov
push
mov
sti
mov
dec
mov
bound
push
fwait
xchg
sub
insl
stos
adc
mov
adc
rol
sub
and
or
pushf
ret
fisttpll
pop
outsl
push
adc
adc
cmp
adc
int3
sahf
stos
cmp
push
cwtl
popa
add
test
ja
lods
mov
movsl
into
adc
loope
cltd
mov
loopne
adc
aaa
mov
lahf
fists
call
mov
sbb
jnp
cmc
in
xchg
daa
mov
fyl2xp1
dec
pusha
fcoml
in
lcall
push
cwtl
das
inc
xchg
cmp
out
jo
filds
inc
aaa
imul
inc
cmpl
mov
and
mov
mov
jns
sub
bound
and
movsl
add
xor
popf
repz
add
xor
cli
push
testl
mov
push
pop
cmpsb
or
test
mov
sti
inc
sbb
sbb
dec
adc
ljmp
scas
ljmp
ss
repnz
sub
dec
bound
or
cmp
xchg
movl
pushf
insb
popa
out
filds
cmp
and
inc
sahf
mov
cli
imul
loope
shl
clc
lock
out
arpl
movb
frstor
sar
jne
and
mov
sbb
inc
push
mov
loopne
mov
stos
sbb
ret
pop
pop
scas
sti
not
push
push
ficoms
push
ljmp
pop
push
shl
xor
ror
cmpsb
dec
mov
std
stos
pop
jmp
and
jns
cmp
loop
fisttps
test
adc
and
xchg
icebp
popf
cmp
push
lea
inc
test
mov
mov
fucomip
fists
test
loope
rcrb
mov
push
and
jno
or
mov
pop
aad
pop
push
outsb
fsubp
xchg
sub
sbb
fadd
fs
pop
and
jo
mov
pop
rcll
inc
add
jbe
out
mov
mov
pushf
cmpsb
mov
in
movsb
jg
rorl
lds
or
aam
sarb
xor
rclb
out
js
push
adc
jns
roll
outsb
dec
sub
mov
mov
insl
add
outsl
rolb
arpl
lods
mov
lret
roll
push
mov
stc
lcall
pop
cmp
inc
icebp
xchg
sbb
mov
std
aad
mov
pop
sub
adc
mov
sbb
shlb
out
xor
lret
aas
call
jg
cmp
movsb
shlb
mov
lret
mov
mov
jne
cmc
dec
jno
inc
pop
fcomps
adc
lock
dec
pushf
rcrb
mov
push
ljmp
add
fimuls
int
mov
or
mov
and
dec
add
out
arpl
cmpsl
call
jecxz
jo
pop
ss
sbb
nop
sti
ret
bound
dec
aas
dec
adc
adc
cmp
lds
sahf
push
cmp
outsb
cs
push
push
push
cwtl
xor
pop
xchg
pop
inc
sub
push
insl
inc
aad
mov
inc
jbe
mov
enter
and
sbbl
mov
inc
cwtl
repz
lahf
icebp
xchg
push
adc
loopne
sti
nop
lock
or
add
or
xchg
fnsetpm(287
jmp
push
lock
negl
fistpll
jle
pop
inc
iret
jo
lods
xor
sub
mov
jno
test
add
jecxz
out
hlt
mov
out
or
push
mov
dec
sub
mov
xchg
fidivrl
mov
add
incl
repnz
fisttpll
cmpsb
mov
data16
div
cmp
pop
inc
lods
sbb
ret
sbb
jle
movsl
divb
or
stos
pop
jb
jo
inc
lock
sub
js
mov
sbb
rclb
and
lret
arpl
insl
xor
mov
dec
lahf
pop
mov
out
test
or
repnz
xchg
movsl
stc
cmp
push
lret
add
xchg
push
les
jae
dec
inc
sbb
cwtl
sti
lret
xchg
scas
test
push
ja
jl
xchg
mov
sbb
movsb
dec
in
pushf
sub
nop
mov
pushf
pushf
mov
or
jl
shll
pop
ljmp
add
lcall
inc
rcrl
pop
pop
dec
push
popf
pop
and
jg
inc
mov
mov
mov
inc
mov
test
dec
adc
adc
out
jmp
lahf
scas
imul
sub
pop
test
add
mov
add
xchg
fdiv
out
push
jg
mov
lods
repz
pop
dec
not
insl
add
insb
insl
sbb
cmc
lret
pop
dec
scas
cltd
push
add
jbe
call
movsb
sbb
push
cmp
pop
jnp
loop
push
scas
ss
add
xor
rorb
jnp
in
clc
sbb
loopne
dec
push
movl
je
pop
in
mov
movsl
testb
bound
fistl
jbe
mov
mov
mov
adc
fwait
into
push
cmpsl
jne
sahf
adc
sub
sbb
push
cmp
jns
fisttpll
fld
repz
xchg
and
int
jle
xchg
push
dec
push
into
and
mov
imulb
loop
lods
mov
xor
stos
jle
rcrb
cmp
incb
sbb
mov
push
loopne
xchg
mov
pop
out
adc
cmpsb
loope
inc
aaa
popa
sbb
fwait
clc
dec
repz
push
cli
jb
mov
sub
enter
insl
xchg
in
mov
jp
jo
and
push
cmp
shrl
cmpsb
mov
mov
out
and
test
pop
testl
add
scas
push
jb
mov
sub
pop
xchg
sbb
insb
xor
into
and
in
nop
rolb
inc
xor
shl
xchg
cmpsl
xchg
mov
push
lock
xchg
pop
lcall
mov
js
mov
mov
add
stos
and
or
jmp
xchg
mov
repnz
cltd
jp
push
cmp
pusha
sahf
add
iret
dec
inc
xchg
pop
mov
js
xchg
adc
loopne
ss
rolb
inc
mov
loop
adc
xchg
adc
or
xlat
xchg
inc
pop
dec
jmp
mov
xor
and
ja
or
outsl
outsl
xor
push
jmp
stc
add
push
sub
jl
cmp
mov
sbb
sahf
cmp
jmp
negb
sahf
or
rcr
push
mov
in
test
lcall
dec
sub
sarl
fcoms
mov
mov
mov
insb
inc
iret
nop
jb
test
repz
insl
xor
jl
dec
mov
incl
test
mov
cltd
gs
inc
lods
push
xchg
stos
repz
mov
movsl
imul
adc
sub
adc
xor
insb
sahf
xlat
sarl
xor
cs
aaa
enter
inc
and
imul
cmpb
jecxz
dec
movsb
repnz
fwait
jl
and
test
mov
ret
fimuls
incl
xor
inc
xorl
and
jae
jbe
mov
xlat
lods
or
xchg
rcl
andl
add
cmp
mov
cmp
xor
push
inc
int3
and
mov
pushf
dec
mov
mov
lods
ret
ds
pop
mov
rclb
xor
in
and
mov
rcll
push
std
movsl
popf
xor
call
push
repz
jno
and
popa
pop
andb
and
or
es
mov
mov
xor
fidivl
dec
addl
aad
in
xor
push
and
fisubrl
les
dec
push
pop
imul
cmp
and
mov
push
lret
das
imul
clc
cld
xor
fistpll
rclb
jle
jge
gs
xor
out
lret
or
pop
popa
mov
cs
lret
loop
jnp
dec
popf
mov
rorl
push
and
fcompl
cmp
les
lds
pop
push
in
mov
and
sbb
mov
pop
je
pop
jp
push
nop
leave
mov
dec
clc
add
leave
rorl
adc
xchg
rorb
dec
bound
xor
jmp
add
fwait
int3
adc
dec
insb
xchg
mov
out
les
push
js
push
add
adcl
out
sbb
pop
ret
ret
mov
stos
push
into
movsb
mov
int
sub
loopne
xlat
ret
xchg
inc
loop
fdivrp
movl
dec
add
inc
mov
std
enter
inc
pusha
inc
xchg
mov
dec
mov
lret
rcr
inc
daa
jne
push
inc
imul
loopne
jae
imul
xor
mov
dec
loope
dec
outsl
fstpt
inc
push
aaa
scas
ss
cs
push
dec
les
pop
stc
lods
pop
cmp
push
adc
mov
sub
inc
sbb
into
adc
mov
sbb
repz
mov
jb
xlat
push
xchg
lret
xlat
xor
sub
in
push
ficoms
test
xchg
ret
and
lds
jmp
xchg
pop
xchg
fsubs
mov
pop
mov
and
insb
fldenv
fisttpl
xor
or
into
jl
outsb
cltd
aad
mov
or
pop
leave
pop
or
lods
mov
fistl
mov
fisubl
lods
lods
and
lret
xchg
les
pusha
push
adc
imul
push
into
popa
xor
dec
loop
xchg
cmp
jp
jmp
mov
clc
int
jo
call
jb
nop
xchg
lock
pop
shrb
xchg
inc
mov
rolb
mov
imul
cli
xchg
cmp
gs
jne
mov
mov
or
pusha
int
test
and
mov
test
in
shl
stos
dec
mulb
mov
sbb
decl
mov
push
out
mov
jae
sub
fsubrl
insb
imul
push
scas
mov
xchg
push
into
mov
adc
pop
sahf
das
addr16
add
shll
rorb
mov
rorl
rcrb
jmp
mov
imul
mov
orl
cmp
je
int3
jmp
mov
mov
cltd
nop
push
cmpsl
jbe
xchg
repz
sbb
mov
adc
add
addps
push
or
mov
dec
xor
dec
test
scas
mov
movsb
dec
xchg
and
xchg
popf
or
out
jecxz
lcall
lea
clc
dec
mov
test
les
fdivrs
xchg
inc
jecxz
das
in
sahf
fidivs
xchg
mov
mov
push
insl
repnz
pop
loope
jecxz
push
jnp
out
out
adc
dec
clc
mov
adc
stos
xor
add
xlat
and
push
pop
add
mov
test
pop
movl
jo
lock
imul
sbb
leave
jg
aam
sbb
mov
and
sbb
jmp
cwtl
jl
je
xor
cmpsb
xchg
xor
in
add
rclb
dec
insb
jl
jns
and
push
push
add
sti
pop
clc
or
repz
out
es
mov
dec
insl
stc
pop
ds
adc
push
push
and
in
push
shrb
cli
push
das
leave
pop
out
xchg
pop
and
xorb
jle
sub
cwtl
cmpsl
lock
out
xchg
out
jnp
or
push
add
out
jae
out
in
lds
out
sbb
loopne
imul
mov
sbb
ja
adc
push
cmp
popa
loope
xor
dec
and
jmp
and
add
xchg
fldl
mov
movsb
mov
sub
mov
mov
jge
stos
push
mov
add
push
jns
mov
sahf
fxch
lret
mov
inc
jmp
flds
mov
add
xor
jno
test
insb
mov
mov
stc
mov
cwtl
enter
xor
mov
stos
pop
ja
mov
and
inc
sub
movl
inc
pop
xor
lcallw
mov
std
pop
mov
ljmp
pushl
vucomiss
mov
or
fcoms
ljmp
adc
movb
cmc
stos
neg
adc
stos
push
pusha
jecxz
xchg
ja
adc
inc
dec
fdivp
fwait
mov
clc
pop
jbe
arpl
push
push
adc
mov
out
lret
repz
lahf
push
outsl
in
push
adc
xchg
xlat
mov
cmp
xorl
sbb
sti
sbb
push
mov
mov
xor
adc
imul
jo
adcb
dec
xchg
outsb
ret
xlat
push
out
push
or
pop
xor
aas
fwait
xchg
das
in
aas
or
mov
add
jge
inc
test
loop
ds
xchg
push
and
and
inc
les
xchg
test
into
inc
leave
fnsave
addl
xchg
xchg
ds
in
pmaxub
sbb
mov
ficompl
out
stc
xor
test
pop
cmp
pusha
jle
pop
cmpsb
jge
mov
mov
adc
ds
fiadds
insl
leave
pushl
stos
cmp
push
les
cs
stos
inc
stos
mov
sarb
stc
jg
mov
inc
xor
sub
loopne
pop
das
rcr
inc
aas
outsl
clc
xor
popf
sbb
jbe
popl
pushf
mov
sahf
pop
movsb
xchg
sub
dec
inc
in
sub
add
or
and
inc
inc
sub
jb
bound
adc
pop
and
stos
cltd
sahf
xchg
jle
sub
jbe
scas
dec
add
jae
add
sub
dec
out
ss
lock
int
cltd
pop
ljmp
xorb
into
jmp
jbe
mov
cmpsl
int
mov
cmpsl
or
cwtl
call
cmp
out
mov
adc
in
sbb
cmp
mov
xor
in
push
lcall
pop
fildl
fwait
sbb
mov
mov
movsb
push
mov
jle
sbb
ss
jecxz
or
popa
ja
add
fs
cmp
repnz
dec
sub
jmp
push
nop
dec
cvtps2pd
cli
push
cmpsb
repz
dec
addr16
sbb
sub
rorb
mov
cmp
dec
jmp
inc
test
repz
fdivrs
jl
movsl
lret
pop
and
cmpsl
pushf
xlat
sub
lods
imul
sbb
icebp
or
icebp
loope
mov
pop
or
sbb
sbb
add
lds
push
sbb
xchg
dec
push
mov
fiaddl
or
das
mov
xchg
mov
sub
lret
pop
jge
test
add
lods
cmp
iret
icebp
aad
das
in
mov
sub
inc
hlt
xchg
movsb
jnp
test
jp
pusha
stos
pop
and
fwait
xchg
imul
push
pop
imul
cwtl
sbb
push
mov
pop
repz
xor
xchg
or
loop
or
push
stos
jl
cmp
idivl
rolb
hlt
dec
cli
cmpb
jne
aas
mov
adc
stos
jne
out
jmp
iret
xchg
cli
jmp
and
push
fsubl
add
xchg
scas
dec
add
jl
scas
test
pop
pmulhuw
clc
das
test
cmpsb
int
dec
in
cli
aas
data16
pushf
add
pop
mov
ljmp
cld
pusha
pop
or
cwtl
lock
xchg
or
mov
movb
mov
outsl
sbb
test
cmc
lahf
cmp
or
mov
mov
jnp
stos
nop
frstor
mov
xchg
push
gs
mov
jno
enter
ret
fbstp
fisubrs
mov
push
jl
mov
call
xchg
cmc
pop
shlb
popa
dec
mov
inc
mov
cmp
call
push
mov
jmp
jne
andl
in
jne
cmp
pop
push
mov
fidivl
es
mov
xchg
push
xchg
negl
xchg
and
ret
test
ret
cld
push
jl
cmp
outsb
mov
testb
fiadds
or
fcoms
cmp
shlb
xor
push
pop
shll
jge
jae
dec
pusha
add
dec
lea
loope
xor
pop
mov
lods
sti
mov
adc
scas
and
mov
fsubrl
mov
fadds
and
cmp
nop
sub
sub
pop
mov
pop
mov
jbe
lods
into
std
push
xchg
leave
imulb
jns
lret
popf
mov
dec
sti
sbb
les
sub
adc
rcrb
imul
subb
pusha
mov
sbb
out
mov
sub
sti
leave
sub
int
jno
or
aaa
testl
or
cmp
pop
xchg
sti
leave
xchg
or
fld
sti
pusha
mov
leave
cltd
int
outsl
jp
add
bound
push
mov
mov
mov
xor
push
push
or
and
cli
stos
jp
addr16
mov
mov
iret
lret
int3
or
lcall
dec
into
mov
mov
out
mov
lds
xor
pop
mov
mov
push
dec
ljmp
xor
out
sub
sbb
xchg
sti
popf
lods
enter
or
in
adc
loop
jae
daa
and
les
cmp
inc
push
push
dec
sar
pushf
rorl
pop
leave
loope
xchg
movsb
stos
push
out
cmpsl
lods
sbb
sahf
adc
adc
dec
push
push
cmpsb
xor
mov
push
sub
outsl
aad
dec
push
dec
movsl
sub
push
in
sub
sbb
pop
test
js
cs
xchg
jae,pn
push
imul
adc
cli
js
pushf
je
cltd
jbe
push
movsl
outsb
push
xor
or
push
daa
mov
lcall
out
dec
cmpsl
mov
cs
adc
in
nop
push
call
mov
sub
and
test
jmp
mov
orl
dec
mov
call
mov
xor
push
xlat
cmp
aaa
pop
jns
adc
loop
movsb
xor
stc
movsb
data16
push
mov
dec
cmc
push
out
mov
and
cmp
das
mov
or
stc
inc
mov
or
mov
mov
stos
adcb
inc
dec
jno
sub
and
adc
sbb
les
inc
lods
push
pop
pop
push
push
sarb
cmp
fsts
adc
ja
jo
cmp
sub
dec
pop
add
mov
inc
pop
cmc
mov
movsb
lea
insl
pop
push
lret
lods
pop
repz
sub
lock
pop
sub
mov
test
imul
jb
mov
xlat
xorl
xchg
pop
shrl
pop
sahf
pop
nop
adc
loopne
mov
sbb
int
adc
push
ljmp
rcl
pop
and
xchg
lcall
push
hlt
shlb
add
mov
jecxz
rcll
into
mov
test
call
ret
out
in
fwait
or
pop
xchg
outsb
aaa
fxch
das
mov
cltd
cmp
jl
les
int3
das
aam
adc
jns
mov
mov
je
cmc
pop
cld
ljmp
addr16
mov
mov
ret
xor
jmp
outsl
dec
cmp
std
arpl
fsts
and
popf
push
shl
xchg
lea
add
fnstenv
xor
push
lds
lods
pop
pop
jp
mov
jle
sbb
test
daa
jge
addr16
gs
nop
aas
aam
test
stos
in
mov
jno
cli
and
adc
pop
in
pop
das
into
test
shlb
push
or
sub
test
mov
lods
xchg
lods
sbb
inc
mov
subl
jns
mov
enter
movsl
pop
fidivl
sti
and
lret
mov
aam
mov
lret
push
inc
lahf
cld
or
sub
push
mov
sub
and
in
mov
jne
push
out
movsb
xor
xor
jle
fnstcw
imul
mov
pop
ds
xor
pop
repz
jmp
jl
inc
idivb
jecxz
cmpsl
push
cmp
mov
iret
or
jbe
lret
into
stos
fisttpl
clc
and
out
call
div
mov
les
inc
ja
jbe
jl
insl
xchg
out
das
aas
push
movsb
fcmovbe
xchg
mov
and
loop
xor
add
push
in
rorl
fs
daa
mov
xchg
ja
mov
xchg
mov
or
in
xchg
cmp
xchg
or
cwtl
cmp
jg
sbb
out
negb
repnz
ss
mov
fdivl
lds
jae
mov
aas
sub
sub
xchg
stc
mov
call
or
mov
mov
out
jae
mov
or
loop
xlat
out
push
lods
fcomi
adc
mov
inc
push
daa
xchg
stc
inc
lock
scas
mov
xlat
mov
lea
nop
mov
daa
mov
add
push
xlat
hlt
fs
ja
fnstsw
aad
adc
aad
push
fisttps
pop
loope
inc
push
iret
shll
dec
or
pop
aam
dec
cld
stos
dec
rcrb
pushf
ja
sbb
jge
pusha
pusha
mov
sub
fmul
stc
popf
mov
out
jo
test
call
jmp
insb
std
mov
fistps
pop
es
je
cli
incb
rcll
mov
jb
pop
cmc
rcl
aaa
clc
divl
cmp
hlt
ss
dec
gs
jl
xchg
xor
mov
adc
arpl
adc
ds
mov
insb
jge
arpl
mov
and
gs
jp
daa
fcompl
sarb
pusha
adc
clc
ds
stos
out
aad
test
jae
lcall
xchg
int3
bnd
aam
mov
pop
daa
aam
movsl
add
pop
js
xchg
stos
pushf
push
add
jnp
mov
je
int
pop
mov
lods
test
jns
jmp
outsl
jmp
pusha
xchg
fstps
sub
ja
dec
cs
mov
test
pop
popa
cmp
addb
ror
repz
and
mov
sarb
ljmp
cmpsl
orb
test
mov
mov
mov
nop
call
call
sbb
mov
dec
and
mov
pop
push
inc
mov
imul
pop
aam
frstor
xorl
ret
sti
pop
dec
jl
push
mov
icebp
sarb
cli
xor
icebp
gs
scas
shll
fwait
mov
cli
mov
arpl
addl
cmp
insl
test
xor
call
inc
loop
push
cld
sub
sub
lret
roll
push
xor
cmc
adc
pusha
push
jl
push
repnz
setno
pusha
movsb
mov
or
xchg
mov
into
inc
cwtl
jns
adcl
jno
call
lods
inc
or
jne
test
mov
jg
mov
std
jbe
lea
pusha
sti
xchg
and
mov
dec
jp
lret
inc
or
into
aaa
jo,pn
subb
push
mov
inc
out
dec
jo
inc
cmc
dec
push
lret
in
push
loope
pop
popf
test
sub
mov
mov
das
sbb
jae
fwait
test
jb
daa
outsl
push
xchg
sbb
jae
sbb
and
adc
dec
push
arpl
sbb
test
insl
stos
mov
cmp
xor
xchg
sub
mov
pop
and
sub
xchg
push
mov
push
arpl
ja
int
or
xor
push
enter
push
mull
push
lsl
lahf
int3
jp
dec
fisubrs
lcall
push
icebp
jno
lock
out
mov
or
shlb
sbb
push
mov
mov
sbb
mov
insl
add
movsb
sbb
es
adc
ja
and
mov
and
xor
xchg
push
xchg
xor
xor
sbb
lods
enter
lods
das
sbb
mov
mov
aas
push
rcrl
mov
les
push
movntq
adc
ds
lahf
fistl
xor
xor
pop
mov
stos
mov
das
adc
out
mov
cmpsl
inc
cwtl
hlt
xchg
test
icebp
cli
push
outsb
sub
ja
ljmp
test
test
push
daa
sbb
pop
xorl
jmp
sbb
movsl
mov
mov
jns
repnz
xchg
ja
cmp
cmp
jl
mov
pop
aam
jnp
mov
loop
in
imul
xchg
push
into
mov
jno
lret
cmp
cmp
jp
into
add
int3
stc
ret
imull
mov
gs
xchg
aas
sahf
sub
loope
pop
mov
and
pop
push
test
jne
xchg
arpl
sbb
jge
invd
pusha
test
push
aas
sbb
xchg
inc
scas
ret
mov
mov
jge
cmc
cmp
pop
vxorps
sub
shrl
mov
and
jle
out
sahf
xchg
jl
loope
dec
std
fildl
roll
jne
mov
cmp
pop
push
imul
fldcw
enter
jmp
lods
lods
test
cli
inc
icebp
and
push
int3
testb
test
jle
inc
inc
lock
push
sub
fsubrp
xchg
jle
sbbb
loop
std
push
mov
fstpl
and
enter
ja
in
hlt
xor
jbe
push
pop
out
fcmovu
adc
mov
sbb
sti
inc
cli
dec
ljmp
add
mov
leave
ret
inc
add
dec
xchg
fstl
pop
loopne
rcll
push
jecxz
movb
popa
std
xchg
daa
js
mov
push
sbb
xchg
jmp
rorl
in
inc
dec
cmpsl
sbb
jne
in
ja
cmc
lods
in
pusha
xchg
dec
sub
imul
jae
mov
imulb
pop
mov
fcmovb
inc
clc
jo
jno
js
cmpsb
negb
cmp
mov
xor
xchg
inc
sbb
mov
add
es
push
mov
stos
fcoms
mov
mov
sahf
mov
or
mov
sub
aam
ljmp
xor
push
cwtl
fldenv
mov
jns
push
cmp
bound
mov
scas
addb
xor
icebp
sub
pop
sbb
lret
or
jno
outsb
outsb
inc
mov
fdivrl
mov
aas
push
adc
mull
shll
icebp
mov
inc
ror
cwtl
repnz
or
icebp
jb
out
repnz
loopne
je
stos
incb
lret
in
ret
mov
ror
sbb
or
ss
ljmp
push
xchg
sti
xchg
mov
or
jp
dec
dec
push
jb
rcrb
jns
movsb
outsl
push
outsl
mov
pop
mov
shll
cmp
ljmp
jne
iret
and
mov
insb
xchg
lahf
cmp
das
pop
mov
mov
cmp
jnp
or
icebp
fimuls
fldt
stc
fiaddl
arpl
fcomp
cmc
mov
inc
push
mov
mov
fsubrl
lock
adcb
mov
fdivs
mov
or
ret
xchg
js
mov
mov
gs
nop
pop
xchg
sahf
inc
sbb
lahf
ror
std
jo
daa
xchg
jno
dec
sbb
daa
inc
leave
lret
push
push
pop
clc
jnp
sub
xor
movb
inc
sbb
adc
arpl
cmpsl
scas
stc
repz
loopne
mov
test
add
add
into
aad
rcrb
or
jnp
inc
pop
iret
push
lds
cmc
push
dec
mov
mov
jne
jno
movsb
mov
movsl
es
das
sbb
sub
add
lahf
repnz
push
lea
add
sarl
and
or
test
cmpsl
mov
outsl
or
js
cmpsl
fisubrl
std
je
rcr
loop
xor
sahf
lret
fldcw
into
subl
aas
push
test
sbb
dec
sahf
xchg
push
mov
adc
inc
insb
loope
dec
in
sbb
xchg
cltd
and
push
or
jl
aam
dec
pusha
outsb
lret
leave
lahf
xchg
adc
jno
out
fistpl
hlt
sarl
mov
loop
adc
and
add
dec
out
aam
jbe
jns
sbb
cli
or
or
lds
or
or
rorl
cwtl
repz
add
sub
cmpb
jge
test
ss
and
lcall
in
aam
shlb
sub
mov
mov
mov
sub
imul
inc
out
xor
nop
xorl
in
inc
mov
les
jecxz
fwait
cli
xor
or
shrl
xchg
nop
xchg
ds
add
or
jp
lock
and
dec
sbbl
jbe
stos
repz
sarb
jbe
aam
push
pushf
dec
pushf
adc
pop
sub
or
sbb
cmpsb
mov
jns
xlat
aam
mov
dec
lock
fsubrs
sub
mov
xor
mov
xchg
xchg
mov
mov
cmp
jb
rcll
in
std
fwait
test
ret
and
pop
mov
push
sbb
addl
sbb
mov
add
stos
cmp
out
ret
insb
iret
scas
aam
imul
or
push
insl
sub
scas
les
pop
data16
imul
or
lods
loop
add
test
adc
sbb
int3
scas
into
sub
dec
mov
nop
idivl
dec
xchg
pop
cmp
les
mov
jge
sbb
gs
stc
mov
pop
icebp
xchg
aad
pop
xchg
in
dec
fsubl
push
and
aad
jp
cwtl
in
fsub
push
ret
xor
dec
mov
xor
jae
push
fbld
cmp
mov
add
iret
dec
call
inc
push
jnp
dec
and
insl
rclb
cmc
push
loop
icebp
adc
push
incb
mov
js
pop
subl
sub
out
popa
mov
mov
jb
xchg
push
xchg
and
pop
cwtl
fisubrs
jno
adc
repz
mov
hlt
scas
out
data16
mov
cltd
scas
out
lds
adc
push
add
jae
addr16
lock
ss
scas
cmp
push
fcompl
or
mov
rcl
repnz
sbb
inc
push
sbb
or
push
loope
sub
inc
adc
js
lcall
pop
mov
mov
xchg
dec
jecxz
out
xchg
pushf
test
mov
das
pop
dec
sub
inc
pop
dec
bnd
adc
jle
js
rclb
fdivrl
insl
stos
push
add
leave
sbb
jo
mov
and
orps
mov
gs
cltd
dec
mov
xchg
sahf
movl
loopne
test
xchg
mov
mov
mov
or
and
xchg
stos
or
jns
push
lock
and
sub
imul
mov
bound
std
leave
inc
inc
sti
jo
dec
clc
dec
pop
pop
mov
frstor
aaa
sub
arpl
enter
enter
ret
sub
mov
xchg
mov
cs
fwait
pop
adc
lahf
mov
ss
pop
add
jo
int3
add
inc
sbb
mov
xchg
sub
out
out
mov
add
mov
clc
cwtl
leave
inc
testb
sub
out
das
xor
jb
adc
sub
insl
pop
inc
inc
mov
imulb
out
in
fucomip
adc
push
sub
frstor
inc
in
int3
addb
or
movsb
ja
xchg
add
cld
rclb
pop
lcall
or
cmc
add
mov
adc
or
mov
jg
stos
cmpsb
mov
call
in
lods
dec
jle
mov
pusha
jmp
inc
and
add
mov
hlt
or
call
mov
inc
movl
adc
lock
mov
movsl
loope
loopne
cmpsl
in
adc
lds
clc
mov
arpl
and
dec
popf
push
fsubp
scas
fistl
pop
add
movsl
and
mov
hlt
add
lds
movsb
pop
xchg
orb
sti
outsl
ret
ds
mov
mov
push
mov
mov
adc
ja
inc
adc
or
pusha
mov
adc
lret
out
adc
pop
adc
arpl
adc
add
in
popf
sti
dec
xor
ss
outsl
sub
and
fimull
sarl
sbb
adcb
and
je
cmp
sub
jge
cmp
jmp
jl
pop
imul
outsb
cld
sub
sbb
add
mov
das
sbb
shll
cmc
data16
xchg
xchg
pop
lods
cmp
stc
pop
loopne
xchg
adc
shrb
stc
in
jle
or
mov
mov
mov
jmp
fcomip
pop
pop
or
ljmp
lock
int
push
push
xchg
jle
es
jbe
jmp
fcmovne
lods
push
jno
test
mov
out
push
ja
ljmp
mov
sub
mov
pop
iret
dec
je
jno
repnz
cmp
or
add
icebp
lods
xor
ret
pop
enter
sbb
lock
dec
mov
xor
popf
filds
mov
adc
pop
insb
aaa
pop
leave
xlat
inc
inc
cmpsb
lret
cmp
repnz
clc
cmp
mov
cmp
sub
pop
xchg
inc
insl
pop
jp
nop
cmp
pop
jg
daa
in
mov
or
dec
movsb
mov
pop
push
cmovl
int
xchg
pop
gs
call
fstpt
sub
and
rclb
unpcklps
cli
orb
and
cmp
imul
jmp
mov
into
stos
lock
jno
ret
pop
sbb
les
mov
int
sbb
nop
inc
mov
or
fwait
xor
cmpl
lods
adc
dec
inc
loop
sti
pop
iret
mov
xchg
iret
cmpsb
dec
xchg
add
inc
sarb
sti
push
xchg
lods
std
dec
push
aas
jo
psadbw
jns
rep
into
int
mov
insb
lods
imul
lahf
push
call
pop
loope
cli
sbb
rcrb
in
repz
sub
cmpsl
mov
pop
ret
loop
dec
sub
ficoms
ret
aas
push
push
mov
test
sbb
mov
mov
jle
fs
pop
shrl
push
loope
mov
cli
test
adc
aaa
add
or
sub
sbb
pushl
sarl
inc
out
xchg
lods
add
fldcw
xchg
add
test
add
adc
jg
sarb
jns
push
push
mov
nopl
jbe
shl
out
add
aam
push
adc
jne
rep
jnp
and
test
movsb
int
in
fsubrl
dec
jmp
xor
stos
inc
and
int
pushf
mov
dec
out
nop
std
insl
add
sbb
xchg
scas
fs
std
cltd
mov
bound
xor
into
fsubrp
pop
ret
test
in
in
xor
lods
movsb
and
jg
push
add
cmpl
bound
pop
test
mov
cmp
loope
lods
clc
insb
push
push
loope
sub
push
notl
jle
mov
pop
stc
outsl
sarl
mov
test
cmp
pop
repnz
fldcw
add
insb
jp
pop
cmp
cmp
or
insb
adc
fldcw
sub
jp
dec
lds
es
inc
or
pop
jge
push
xor
jg
mov
pusha
add
mov
push
lret
cltd
test
lods
popf
push
rol
pusha
in
fistpll
sbb
jecxz
dec
and
jmp
clc
dec
repnz
cmpsl
icebp
push
lea
pusha
sub
push
dec
cmp
js
jp
fdivrs
xor
and
adcl
jmp
clc
sub
xchg
ret
jl
mov
cwtl
mov
xchg
add
adc
xor
insl
xchg
mov
iret
sbb
push
sbb
push
in
mov
ss
movsb
mov
cli
sbb
dec
repz
mov
or
dec
and
into
or
cltd
test
sarl
outsb
lods
add
orl
in
push
shll
icebp
outsb
fstps
int3
adc
cmp
inc
xchg
inc
cld
popf
rcrl
dec
inc
xor
push
divl
scas
and
sbb
add
imul
sbb
xchg
movsb
sarl
xlat
fwait
repz
xchg
mov
shrl
xchg
push
add
data16
cmp
jno
fs
es
lret
pusha
cs
nop
and
xchg
pop
adc
or
loope
sbb
ret
mov
sbb
add
add
shl
add
cltd
out
mov
seta
call
sub
ret
xchg
adc
push
sbb
movsl
arpl
pop
out
mov
clc
ficoml
aad
mov
xchg
mov
test
out
and
sbb
push
scas
out
jge
out
andb
push
fimull
xor
xchg
and
out
lods
inc
call
or
pusha
popa
out
test
jb
jl
mov
and
iret
cli
pop
mov
mov
xchg
mov
mov
je
xchg
loope
mov
sahf
mov
sbb
ficompl
addl
rorb
fnsave
call
call
mov
rolb
movsl
cmp
jb
mov
adc
push
xchg
xor
cmp
push
mov
push
lahf
shlb
and
aad
push
mov
jecxz
shll
stos
fwait
jp
sbb
das
scas
out
inc
out
cmp
cli
push
or
dec
sbb
orl
mov
mov
fwait
dec
mov
and
fsts
cmpsl
cmp
jge
scas
jmp
movsb
test
mov
inc
enter
push
into
add
dec
adc
xchg
nop
das
cwtl
pop
ds
lahf
mov
cltd
push
int3
fistl
add
fidivl
ds
sbb
mov
push
push
movsl
lods
insb
mov
push
clc
test
jl
cmc
or
ljmp
aaa
push
mov
sbb
and
fsubrl
sbb
fdivrp
in
pop
pop
iret
out
mov
pop
icebp
movsb
gs
pop
mov
sti
xchg
and
adc
subl
jns
cld
lret
jnp
out
and
pop
inc
dec
dec
xchg
jae
mov
mov
jge
lcall
imul
mov
je
sub
enter
das
ljmp
insl
ret
jl
stos
ds
adc
orb
imul
pop
call
sub
dec
or
pop
bound
sahf
aam
lahf
fsubrp
xlat
or
seto
addr16
add
mov
dec
cmp
cld
and
mov
jnp
test
addl
jae
fnstenv
push
pop
cmpl
int3
icebp
repz
inc
push
xchg
or
push
jmp
adc
jmp
mov
sbb
add
mov
shl
rolb
inc
mov
dec
push
pushf
data16
shlb
std
idivl
jae
aad
xchg
mov
xchg
sub
mov
mov
fdivl
mov
push
dec
repz
shll
popf
pop
dec
aam
pop
cwtl
cmp
in
pop
shl
xchg
sbb
jne
sarl
cmp
lret
loope
jl
xchg
repz
fs
enter
sbb
sbb
movsl
lds
in
lret
addl
push
add
jne
xchg
jae
push
roll
jne
xor
mov
sbb
inc
les
sbb
add
out
sbb
cmp
or
pop
mov
sarb
sub
mov
and
fmuls
stos
stos
cmp
inc
xor
fcoml
push
cmp
nop
adc
or
adcl
out
int3
nop
adc
cmp
mov
mov
aas
xchg
lret
dec
cmp
add
xlat
push
mov
jns
push
cli
fistl
ret
sbb
stc
inc
adc
sub
lcall
xor
cmp
mov
xchg
dec
dec
lret
mov
mov
mov
mov
cmpsl
fs
sub
mov
mov
imulb
add
ja
mov
faddl
out
pop
mov
sub
sahf
sub
sub
mov
pop
les
aaa
int
inc
xchg
inc
fdivrs
cmp
inc
mov
pushf
inc
lea
xor
inc
jb
dec
mov
jnp
push
fwait
out
inc
mov
jae
pop
mov
cs
loop
pop
xchg
fsub
rcll
add
repnz
outsl
enter
adc
xchg
push
inc
fdivs
popa
je
rcll
pop
pushf
push
subb
mov
mov
add
cmp
xlat
popa
scas
mov
xchg
out
icebp
cmovno
aas
les
xor
inc
pop
ss
lret
or
or
pop
pop
mov
stc
or
movsl
mov
add
push
adc
lret
and
inc
cmp
add
push
das
push
xor
je
dec
xchg
scas
xor
cli
cmp
jns
push
fdiv
ud2
les
cmpsb
add
or
repz
cli
push
mov
jns
fsts
and
mov
inc
inc
jp
rolb
das
mov
sbb
or
pop
xchg
adc
lods
loop
xabort
rorb
add
mov
loopne
add
jae
pop
imull
and
je
shrb
push
negb
dec
ret
add
jbe
stc
or
push
mov
xchg
in
pop
add
xchg
or
movsl
push
push
push
or
dec
ret
cmpsb
loop
jnp
cmp
add
stos
cmpsl
gs
imul
dec
dec
xlat
stos
xor
xchg
stc
dec
shl
stos
xchg
cmp
or
mov
jp
mov
je
mov
and
movsb
dec
jecxz
imul
les
imul
pop
dec
push
add
js
jns
jo
or
fs
mov
into
outsb
dec
pop
icebp
aam
pop
imul
push
pusha
aas
test
or
dec
stc
inc
push
and
jnp
imul
pusha
out
mov
movsl
into
sbb
inc
xchg
js
fdivs
stos
mov
addr16
xchg
push
movsb
push
jnp
pop
lcall
int
jo
sub
xchg
dec
xor
daa
packsswb
loop
sbb
pop
jo
cmpsl
sti
jo
loopne
dec
mov
pop
outsl
sarl
cs
hlt
mov
addr16
in
xor
fwait
cmp
and
push
in
cmpsl
sub
cli
aam
repz
out
inc
fs
adc
fdiv
lock
out
in
test
int
add
inc
cmp
mov
sti
cs
arpl
push
int3
push
add
xchg
and
or
pusha
lods
stc
cmc
popf
lret
mov
mov
stc
rcll
adc
scas
mov
mov
add
push
int
repz
sub
leave
imul
andb
nop
add
in
lea
fisubs
jne
clc
adc
and
xchg
dec
sbb
mov
push
repz
mov
cwtl
push
lahf
xor
jge
mov
pushf
aaa
aaa
pop
mov
lret
xor
lret
mov
jmp
mov
pushf
rcrl
cmp
fcoms
outsb
jp
xchg
sub
popa
xchg
or
dec
lret
add
mov
enter
dec
lret
lds
js
addr16
xchg
lcall
lds
xchg
mov
mov
xor
das
fistpll
stos
push
xchg
icebp
rorl
stos
xor
add
xlat
stos
mov
jae
addr16
mov
dec
adcb
cmp
pop
mov
or
mov
loopne
dec
call
adc
xchg
add
sub
xor
idiv
es
adc
inc
mov
and
pop
jbe
stc
push
push
pop
or
mov
xchg
xchg
test
cld
mov
push
pop
dec
xlat
xchg
das
sbb
push
dec
scas
mov
or
enter
call
mov
imul
sub
cmp
pop
cmpl
mov
cmp
sub
cs
popa
test
arpl
aam
mov
in
or
mov
sarl
pushf
in
dec
xchg
mov
pushl
adc
sbb
imul
into
sbb
add
sub
aad
mov
pop
adc
jmp
loop
mov
rcr
bound
outsl
xchg
and
dec
dec
xchg
ss
mov
sti
loop
adcb
push
mov
aas
xchg
shll
insb
leave
dec
mov
pop
int3
cmovp
push
mov
xor
pop
sub
les
xchg
jg
iret
movsl
aad
popa
adc
roll
mov
push
dec
add
push
and
pop
fs
inc
xorl
sarl
xor
or
push
xor
repz
movsl
sarl
sbb
mov
xorl
dec
pop
insl
jb
and
cmp
dec
xor
cmp
test
test
out
loope
and
iret
sbb
idivl
mov
sub
test
mov
pop
test
add
in
jg
movsb
adc
repnz
gs
scas
lds
std
pushf
pop
jmp
mov
cwtl
aam
les
add
adc
test
mov
unpcklps
in
and
push
mov
outsl
rcrl
sub
imulb
fadd
xchg
cwtl
test
popa
ljmp
adc
and
add
ret
shll
or
mov
enter
sbb
movsb
es
aaa
pop
outsb
pop
insl
sysret
test
insl
mov
cwtl
fidivrs
shll
and
cmp
test
sbb
xchg
movsl
roll
pusha
arpl
shrl
inc
and
lods
aad
hlt
pop
arpl
lahf
in
lods
mov
xchg
test
adc
mov
xchg
sub
push
inc
cmp
inc
xchg
cld
scas
sbb
lcall
icebp
fwait
pop
test
dec
mov
hlt
popa
out
jb
sbb
xchg
mov
mov
pop
pop
gs
fnsave
mov
out
pop
sti
stos
lds
and
xchg
repnz
mov
mov
mov
aas
pop
outsb
xor
out
xor
leave
sbb
mov
hlt
gs
hlt
xchg
mov
jnp
mov
mov
push
fadds
jne
add
jo
incl
pop
cmp
mov
shlb
loopne
lock
mov
adc
dec
std
popa
adc
dec
push
dec
xorl
int
mov
push
mov
sub
xchg
or
adcl
out
sahf
sub
div
adc
dec
in
jo
lock
into
outsb
inc
xlat
bound
in
ret
jne
je
mov
cli
jbe
hlt
stos
adc
aaa
int
ror
inc
push
icebp
popf
or
int
mov
shr
pop
jne
or
shll
cltd
dec
adc
xlat
xchg
xchg
mov
xchg
idivl
mov
add
daa
dec
mov
xchg
jp
cmp
sahf
push
fsub
inc
add
aas
movsl
scas
mov
xchg
popa
xor
sbb
cmpsb
fimull
mov
lea
push
inc
mov
idivb
mulb
enter
adc
sub
inc
mov
adc
jge
mov
mov
mov
mov
jp
xor
mov
mov
push
hlt
fwait
jge
push
arpl
jns
xor
cmovae
insl
leave
mov
jge
cmpsl
loopne
pop
mov
mov
dec
cmpsb
dec
in
fs
xchg
adc
and
xlat
in
or
dec
pop
and
pop
mov
jp
loopne
lock
push
mov
gs
cmp
mov
push
push
daa
stc
pushf
jmp
stos
inc
fwait
lea
xchg
xchg
fildll
ss
jb
jp
sub
cmp
ret
push
sub
dec
sub
out
insb
sub
inc
pusha
mov
adc
lods
push
adc
pop
and
or
pop
sbbb
mov
out
jo
movsl
xchg
jne
fmull
stc
and
icebp
aas
fisttps
jns
fcoms
lret
sub
mov
int3
ret
in
fwait
xor
cwtl
repz
add
adc
and
inc
cld
or
rorl
adc
push
and
mov
out
lds
push
ror
clc
icebp
pop
sbb
push
cltd
loope
or
call
dec
fiaddl
fs
xchg
sbb
add
xlat
adc
push
adc
movsl
movsl
push
push
pop
into
lods
cs
inc
aam
shll
mov
jmp
inc
cli
mov
inc
test
pop
aaa
cmp
out
mov
pop
xchg
cld
sbb
pop
notl
ror
adc
icebp
adc
scas
hlt
aas
out
popa
xor
jg
popa
xorl
fdivs
fldenv
insl
xchg
dec
rclb
les
lods
aaa
add
cmp
adc
mov
pushf
sub
lods
adc
adc
ja
scas
sbb
testl
push
push
cmp
sub
stos
jb
inc
das
pop
add
adc
xchg
xchg
ja
xchg
jns
movsb
cmpsb
sbb
sbb
jae
jecxz
shrb
cli
mov
mov
inc
bound
arpl
push
outsl
xchg
sbb
mov
test
icebp
pushl
mov
jge
push
dec
aad
cmc
cmpsb
outsl
xchg
cwtl
and
pop
lds
hlt
jg
xor
movsb
neg
jbe
pop
rorb
xor
push
push
mov
aad
cmpsb
sbb
jb
xchg
movsl
pop
xchg
icebp
loope
jp
jns
repnz
ljmp
mov
add
mov
aas
pop
xor
icebp
sub
icebp
roll
outsb
jg
pop
popf
inc
loop
xchg
mov
stos
jnp
cmc
clc
dec
cmpsl
add
sbb
dec
fisttpl
adc
ror
adc
testb
xor
out
cwtl
movsb
arpl
movsl
roll
mov
xor
inc
dec
xor
call
or
js
fs
or
or
outsb
xchg
cmp
inc
sbb
dec
pop
pop
pop
fdivr
sti
xchg
mov
or
insl
mov
imulb
lahf
jnp
fadd
testb
ja
call
div
xchg
lods
add
add
aad
insb
lret
sbb
in
xchg
pop
mov
lods
mov
cmp
sbb
aas
or
aaa
int
addr16
scas
cmc
mov
dec
mov
sti
sbb
inc
push
cmp
push
push
or
xor
xchg
push
jge
std
mov
dec
xor
orl
bound
stos
out
shrb
das
movsb
push
mov
filds
arpl
aam
leave
fwait
mov
bound
fnstcw
mov
xchg
out
cmp
mov
xor
in
jle
mov
fs
sarb
fidivrl
push
and
ss
mov
mov
dec
xchg
pop
insb
call
xchg
incl
cmp
xchg
in
jno
inc
iret
cli
lahf
jp
xorl
call
mov
push
push
pusha
enter
cmpsl
cld
das
mov
sbb
cmp
popf
lds
mov
and
xorb
jp
repnz
mov
dec
push
dec
jo
rolb
out
jns
or
stc
rcr
dec
inc
adc
fwait
mov
xchg
loope
inc
xchg
sbb
ljmp
xchg
decl
inc
leave
sbb
cltd
mov
sti
cltd
dec
mov
pop
and
iret
sub
xchg
jp
scas
lret
jo
cmp
cmp
sub
cs
xor
les
iret
or
leave
movsl
loope
push
xor
push
and
add
pop
xchg
push
push
and
data16
imul
sub
in
sub
fucomip
pusha
mov
test
inc
xor
jl
inc
movsb
mov
jmp
cmp
clc
mov
ljmp
push
jb
in
cmp
pushf
rorl
mov
and
inc
ret
fldl
and
pop
dec
sbb
xchg
iretw
popf
sub
aas
fstpl
mov
pop
sub
fldt
arpl
and
jb
mov
aad
data16
adc
leave
stos
ret
mov
push
xchg
push
imulb
shlb
incb
fs
jg
js
out
lea
rcrb
bound
jg
sub
orl
data16
loop
xchg
rorl
or
clc
rcr
adc
imul
test
pop
popf
and
and
aam
mov
lret
in
push
sub
or
cmp
out
jg
adc
pop
lret
lods
inc
in
pop
push
mov
ljmp
cmpb
dec
mov
call
cmp
in
push
test
xor
sub
sbb
mov
test
pop
les
or
push
push
add
popa
aad
sti
xchg
wbinvd
jb
ret
aam
lods
add
push
mov
jge
inc
cmp
xchg
rcr
je
enter
in
scas
in
push
repnz
test
daa
inc
inc
fistpl
xchg
xchg
arpl
mov
movsl
inc
cmp
mov
sarl
xchg
data16
testb
adc
das
out
ljmp
cmovo
jbe
nop
sbb
pop
sti
and
jne
test
xchg
xor
int3
sub
sbb
and
ds
cltd
je
fcmovnb
out
stos
sub
mov
je
and
testl
aad
cli
pop
faddl
fistl
sub
std
xchg
aas
pusha
ja
movb
pop
jne
je
mov
or
lret
js
addr16
aaa
dec
mov
data16
mov
ss
xchg
sub
sbb
sbbl
pop
pusha
movsb
sub
add
in
in
cmp
out
mov
and
lahf
orb
popa
dec
lcall
and
call
imul
mov
add
push
mov
jnp
xchg
adc
aad
xchg
inc
scas
push
adc
or
xchg
call
sub
fs
cmc
xchg
imul
add
xor
stos
mov
xchg
pusha
adc
mov
push
pusha
xchg
test
mov
jns
mov
jmp
pop
mov
dec
bound
jecxz
and
mov
in
lret
loop
sub
nop
sub
das
stc
sub
mov
lret
pop
pop
xchg
sbb
sub
stos
adc
sub
sarl
in
lcall
mov
add
lods
jle
push
int
es
jno
jmp
pop
cmp
jnp
or
xor
cld
jno
mov
clc
xchg
sub
nop
cli
lahf
push
addl
mov
xchg
data16
imul
pop
repnz
mov
mov
cmp
loope
std
lahf
mov
scas
cmp
dec
movsl
or
jbe
xlat
and
dec
and
imul
mov
outsl
dec
imul
imul
js
xchg
jbe
ss
loop
mov
das
push
dec
cmpl
cmpsb
nop
es
add
mov
in
scas
insb
js,pn
or
jns
xchg
imul
aaa
mov
fidivs
fwait
or
cmp
xchg
mov
mov
sti
lcall
adc
stos
je
stos
movsl
cmp
lret
ret
cmpsb
or
xor
add
stos
imul
faddl
sarb
xor
test
xlat
xchg
ret
cmp
sar
push
pop
push
add
mov
stos
sub
ljmp
lods
and
sar
fnstsw
in
push
mov
xor
gs
cmp
push
xchg
aas
pop
out
lcall
sbb
cltd
imul
and
mov
pusha
push
or
pushl
setne
cltd
mov
mov
aas
adc
out
test
cmp
jbe
push
test
test
enter
add
in
arpl
dec
mov
add
pusha
test
jg
movsb
push
inc
or
jno
mov
int
mov
mov
pcmpeqw
mov
push
cmp
mov
inc
daa
js
mov
frstor
jle
daa
call
std
and
ss
cmp
mov
add
adc
popf
out
icebp
fisubrl
mov
inc
aas
ljmp
cmpsb
cli
outsl
mov
add
pop
fistps
push
mov
mov
and
loope
movsl
scas
sub
out
insl
data16
sub
or
and
dec
arpl
mov
add
pusha
jp
cmpsl
mov
into
jnp
add
fsubr
fsubs
mov
leave
or
addl
mov
mov
xor
dec
cmp
les
movsl
gs
dec
cmpsb
push
rol
js
push
fidivrs
pop
aam
jns
dec
dec
mov
xor
mov
ja
dec
jbe
fsubl
mov
dec
adc
inc
cmp
int3
add
adc
test
push
outsl
dec
jae
sbb
stc
cmpl
push
sbb
lcall
dec
inc
mov
lret
test
leave
xchg
lds
sarl
push
mov
push
enter
movb
sub
mov
sbb
sbb
mov
fs
push
dec
test
xchg
ss
subb
sub
sbb
sbbb
das
mov
pop
sbbl
push
mov
stos
inc
fwait
pop
push
aam
mov
jle
scas
insb
fisttpll
or
sbb
in
adc
mov
dec
cmc
repz
or
cmc
mulb
dec
sub
lods
lret
imul
xchg
push
jle
jp
pop
xchg
inc
dec
xor
sbb
mov
inc
mov
arpl
in
int3
popw
dec
loop
bound
in
aas
jb
jo
add
fstpt
cmp
adc
dec
ja
sbb
sbb
pop
dec
adc
and
daa
mov
std
cmp
icebp
xchg
pop
cmp
push
outsb
lods
xchg
aad
cwtl
push
outsb
movsb
jl
and
movsl
ja
and
leave
fsubl
mov
push
scas
fldl
sti
aad
inc
jno
mov
adc
xor
and
inc
sub
fdivr
pusha
mov
or
or
lret
xchg
les
add
cli
les
jle
jns
pop
je
inc
jnp
sub
mov
insb
add
mov
movsb
jbe
mov
in
clc
fimull
imul
sbb
sahf
mov
into
adc
xor
mov
mov
and
cmpsb
xlat
pop
insl
pop
xchg
std
cmp
xchg
enter
push
sub
divb
xor
jno
sub
pop
mov
adc
rep
xchg
mov
iret
fdivrl
xchg
in
mov
dec
dec
loop
ud1
popf
insb
xchg
sub
xchg
jbe
or
mov
test
cmp
cmp
sbb
sahf
xchg
out
add
mov
icebp
cld
js
mov
in
sub
jg
jae
jle
inc
mov
xchg
mov
cmp
cmp
add
push
cmp
push
push
add
adc
jmp
call
xchg
jle
in
and
jo
scas
repnz
sub
add
mov
dec
movsb
repnz
mov
fmul
fnsave
mov
enter
movsb
movsl
cmc
pop
xchg
stc
mov
cmpsl
bnd
roll
into
scas
ret
dec
add
repnz
mov
sar
sub
int
cmpsl
js
jge
aas
add
lea
sub
aaa
and
jbe
mov
mov
aas
mov
jbe
out
sub
leave
mov
loop
add
outsb
xlat
or
cli
adc
xlat
dec
xchg
lcall
loope
pop
das
out
rcrb
add
pop
arpl
int3
in
mov
mov
and
loopne
sbb
xchg
in
jns
xchg
sub
pop
pop
dec
sub
cmpsb
inc
cmp
and
jle
jle
sub
dec
adc
mov
jb
lds
ja
xor
sub
test
in
out
mov
int3
lcall
adc
pop
scas
mov
iret
fwait
mov
insl
lock
leave
mov
js
or
adc
adc
cmp
jbe
imul
orl
xor
dec
lret
movsb
ret
jo
test
les
fs
xchg
xchg
sub
mov
add
scas
push
xor
cwtl
jg
xor
cmp
jns
add
lods
imul
popa
and
or
call
mov
mov
push
dec
fimull
mov
outsb
insl
mov
loop
sbb
pushf
loop
in
xor
aad
scas
stc
ret
mov
cmpsl
mov
pusha
aaa
sub
ljmp
jb
add
arpl
or
lret
in
dec
pop
fnstsw
call
inc
jb
shr
inc
dec
add
inc
xorl
cmp
fisttps
jecxz
arpl
and
mov
ja
out
cwtl
repnz
mov
fcomi
sbb
xchg
xchg
or
xchg
loope
add
daa
mov
adc
repz
popa
ret
cli
mov
mov
inc
mov
and
xchg
add
adc
cmp
out
push
int
xchg
adc
xor
push
push
mov
ret
mulb
xchg
inc
inc
cmp
pmaxub
mov
clc
dec
enter
lods
jl
lock
xor
fisubrl
clc
es
push
lret
rorb
cmp
mov
ljmp
movsb
icebp
cwtl
cmpsb
jecxz
lcall
popf
add
or
int3
jmp
mov
adc
mov
mov
jno
xor
int
sub
pop
jl
lea
enter
icebp
insl
cltd
inc
repnz
rclb
cs
xchg
dec
lods
std
adc
in
push
xor
adc
jle
xlat
ret
pop
mov
cmp
jmp
sbb
fistpl
clc
mov
push
loope
daa
mov
pop
outsl
add
stos
lds
pop
adc
lahf
mov
or
mov
or
pop
test
ffree
fdivrl
adc
in
out
jae
mov
daa
mov
pop
pop
lods
jmp
das
ret
fisubl
insl
orb
pop
sbb
dec
mov
cld
js
stos
sub
loopne
dec
jp
rcrl
mov
mov
adc
lret
loope
lret
mov
pushf
loop
out
repz
lahf
xchg
and
xchg
cmpsl
mov
imul
out
or
add
mov
inc
aam
insb
movsl
push
shll
insb
std
fsubr
sub
in
test
xor
dec
inc
dec
fsubrs
imulb
jge
lahf
push
test
cs
cld
xchg
sbb
mov
sahf
std
ja
mov
cmpsl
or
gs
inc
sbb
sbb
jge
push
mov
mov
jne
xor
cltd
je
movsb
arpl
nop
add
lods
or
xchg
push
pop
fsubl
and
hlt
mov
cmp
jns
sub
movsl
jae
scas
mov
xchg
sub
sub
add
into
sbb
shlb
in
test
fstp
std
shl
jae
ret
lea
dec
into
pop
dec
jp
mov
jge
movsb
mov
sub
fst
nop
or
add
and
push
repnz
add
mov
rcrl
mov
cltd
xor
cli
mov
inc
mov
or
js
shrb
add
and
fiadds
xchg
arpl
sbb
lock
lcall
mov
add
aas
sub
cmpsb
xchg
adc
xor
loope
sbb
lods
mov
pop
mov
mov
mov
mov
imul
mov
mov
or
adc
push
js
mov
cmpsl
test
divb
or
mov
inc
lods
xor
test
bound
sub
mov
call
sub
ja
push
mov
jae
addr16
or
push
mov
test
test
testb
mov
pop
in
or
add
push
jp
or
insb
xchg
jbe
sbb
xlat
fists
xchg
cltd
jmp
mov
mov
hlt
pop
xor
jle
in
xchg
jno
dec
push
or
cwtl
bound
inc
mulb
stos
and
fs
xor
or
cmpsl
lods
cli
mov
ficoms
cmp
cmp
mov
cld
dec
ja
inc
push
leave
ss
jge
lods
cli
pusha
sbb
adc
adc
addl
mov
mov
dec
sbb
ret
mov
mov
xchg
sbb
xor
mov
jbe
das
bound
aam
push
or
jne
jge,pt
dec
mov
mov
aas
das
pusha
fwait
mov
aam
shlb
cmp
sbb
fs
add
mov
ds
inc
jns
ret
jp
sub
data16
cmpsl
scas
sahf
mov
mov
xchg
popa
push
mov
mov
movsb
cmp
fcmovnb
out
les
mov
cmp
add
insb
xchg
adc
dec
in
xor
es
in
add
lret
or
cmp
int3
fadd
pusha
jnp
jno
jmp
sub
xor
or
mov
sbb
cmp
sbb
cmpb
fcompl
sti
xchg
or
sbb
pop
cld
jno
sti
sti
lods
dec
or
fcoml
add
jns
pusha
cmc
inc
sub
loop
cld
dec
adc
jl
fiaddl
call
mov
andb
cmp
cmpsl
jp
dec
sbb
mov
rcll
pop
out
inc
adc
mov
mov
aas
push
jnp
scas
int
mov
push
push
loop
repz
inc
add
repnz
xor
lds
xchg
and
inc
loope
xor
outsl
sbb
push
gs
loop
mov
dec
arpl
loop
ljmp
mov
and
xchg
nop
sbb
ret
add
jecxz
aaa
cli
into
stc
ljmp
sub
jmp
cli
std
rclb
sti
je
mov
push
fisubrl
aam
jl
ds
inc
add
xor
mov
xchg
shll
into
stos
pusha
sbb
addr16
sti
xchg
jg
fbstp
xor
jb
gs
jno
cmp
faddl
fcmovbe
push
inc
mov
and
aaa
lret
inc
cltd
rcrl
dec
sub
push
outsl
push
jl
sahf
or
sbb
js
mov
xchg
dec
je
sub
jp
adc
mov
roll
and
dec
bound
loop
out
push
mov
or
int3
or
outsb
jle
jae
push
or
mov
jle
jge
xor
imul
or
dec
cmc
pop
test
pop
pop
push
xor
pop
jb
and
repz
and
xor
les
inc
jns
xchg
mov
scas
scas
push
mov
cmp
and
inc
scas
inc
jmp
icebp
lcall
dec
popa
jl
fneni(8087
cwtl
rcll
cs
cmc
mov
fcomi
mov
imul
aas
lcall
lock
arpl
call
stc
pop
or
cld
cs
out
jg
cmp
and
pop
mov
dec
ds
cmp
mov
lods
mov
das
cs
jno
lret
gs
push
out
add
jnp
fimuls
xchg
push
lods
pop
fcomps
aam
clc
lea
pop
popf
jnp
inc
sbb
add
cmc
dec
or
jecxz
mov
sar
add
jae
daa
sarl
jge
push
xor
xor
dec
mov
sbb
sbb
movsb
xor
cwtl
sahf
fimull
mov
sti
sbb
xor
cmpsb
mov
jmp
mov
sub
xlat
xchg
iret
push
jl
adc
nop
inc
push
push
fsubrl
pop
adc
and
and
mov
outsb
xor
jl
xor
or
cmc
mov
lcall
pushf
iret
jb
inc
mov
push
xchg
add
ret
pushf
and
inc
pop
pop
into
push
inc
jl
and
stos
les
in
and
add
and
ja
sub
add
add
inc
jbe
sbb
mov
mov
jge
std
push
pop
cmp
jne
push
mov
dec
cld
add
aaa
push
lock
in
xlat
pop
mov
mov
xchg
push
fsubrs
add
dec
mov
xor
ss
decl
imul
fninit
es
jg
sahf
lahf
lds
fimuls
rclb
dec
jle
adc
cltd
jg
push
repz
and
cmp
sahf
inc
mov
repz
lcall
lods
adc
aam
jg
jne
repz
cli
mov
dec
popf
xor
das
fs
andl
xchg
xor
jl
mov
add
jbe
xchg
sub
aad
sbb
pop
lret
mov
mov
add
fwait
or
mov
jo
jge
ror
pop
mov
xchg
push
dec
fcomip
mov
inc
addr16
rcrl
sbb
popf
mov
ss
jae
xchg
mov
psubsw
roll
mov
dec
mov
inc
mov
cmpsb
pop
cmp
and
ss
insl
fsubs
mov
push
imul
in
sub
cmp
test
xchg
add
push
pushf
in
mov
test
out
inc
sbb
cs
add
adc
loopne
testb
dec
and
js
xor
ds
addl
cmpsb
in
mov
jge
adc
insb
cmp
das
fnsave
mov
add
xor
mov
mov
xlat
adc
sub
and
mov
xchg
add
push
loopne
rolb
jg
stos
push
mov
imul
popf
sbb
insl
cmp
mov
out
push
cmp
aas
pop
inc
mulb
add
imul
ret
stos
pop
xchg
mov
cli
shll
jg
shl
int3
inc
push
filds
jo
xor
mov
add
jae
sub
outsb
int3
mov
repnz
cwtl
fldcw
std
push
icebp
inc
imul
enter
sbb
cmp
jle
jmp
arpl
cwtl
das
add
push
jne
adc
lret
add
imul
jnp
popa
inc
pop
scas
lret
sbb
pusha
inc
aaa
loopne
cmovo
ss
cld
sub
adc
push
imul
testb
inc
xor
and
test
cmp
pop
push
lahf
sbb
mov
sbbb
mov
add
or
test
loop
push
ja
jnp
xor
or
in
mov
test
shrl
aam
das
adcb
fwait
lods
cltd
stos
repz
lods
dec
push
out
and
adc
jno
into
sarl
push
sub
fcmovb
inc
pop
les
mov
ss
mov
bound
push
mov
pop
fs
and
iret
je
push
mov
dec
outsl
jbe
add
mov
lods
lods
lahf
cli
mov
lret
fcmovbe
pop
lods
mov
add
cs
gs
loope
nop
xchg
enter
mov
fisubl
enter
cmp
ret
mov
pop
jg
ret
mov
sbb
xor
pop
aad
lods
cmp
out
mov
lret
cld
dec
stos
dec
roll
lret
rolb
xor
jne
shlb
stos
lods
inc
outsb
mov
pushf
int3
or
add
out
das
xor
or
mov
fxch
xor
test
les
sbb
popf
mov
mov
push
sbb
mov
ficompl
dec
add
adc
and
movsb
ss
sahf
mov
sbb
loop
dec
incb
and
push
cwtl
mov
xchg
cmp
in
das
shll
or
fisubs
pop
push
pop
jne
cmp
test
jnp
shlb
dec
xor
rcrb
popf
daa
je
push
fcmovnbe
loopne
paddsb
movsb
scas
call
dec
cmp
cmp
mov
mov
sbb
push
and
pop
xchg
pusha
mov
mov
add
aam
push
and
or
outsl
cmpb
test
xchg
insb
pop
add
xchg
jmp
movsb
ret
mov
bound
test
in
fsubrl
cmpsb
ss
outsl
in
sub
test
mov
movsb
and
in
sbb
add
pop
std
pop
popl
cmpsl
xor
clc
imul
or
lahf
xchg
pop
popf
or
loopne
das
dec
addb
push
and
xlat
int
scas
divl
inc
enter
jo
jnp
bound
aaa
mov
popa
or
dec
cmc
dec
insl
sbb
leave
mov
push
sarb
or
dec
sbb
frstor
push
and
imul
std
dec
insb
shrl
repnz
cmp
dec
addr16
fdivs
sub
dec
sub
push
cmpsl
call
pop
pusha
pop
push
push
sarl
add
ret
cmpsl
data16
cmp
ret
adc
mov
ret
loop
sbb
test
adc
xchg
mov
test
push
mov
and
xchg
sub
pusha
and
popa
popa
scas
jl
sub
scas
test
mov
out
mov
loop
inc
testl
aam
ret
xchg
sbb
fisubl
mov
inc
add
enter
mov
inc
les
fcom
pop
sbb
movsb
dec
out
jo
aaa
or
outsb
adc
and
les
pop
push
sub
imul
insb
bound
shrb
movsl
mov
fdivrs
incl
pop
insb
jnp
jmp
cli
pop
es
lods
into
xchg
sbb
out
pop
lea
orl
mov
add
bound
imul
je
or
popf
dec
je
adc
push
inc
and
aas
jle
xchg
test
iret
icebp
mov
shlb
les
mov
aam
insl
pop
jb
sbb
mov
mov
push
mov
lret
sbb
dec
mov
cmp
lahf
and
out
outsl
js
or
idivl
lahf
and
call
aaa
push
aaa
mov
and
sbb
cs
outsl
std
adc
test
cli
and
inc
lock
inc
lods
ljmp
pusha
jg
lock
or
mov
vrsqrtps
iret
mov
cwtl
or
out
fsts
lods
and
mov
test
cmp
sbb
sbbl
test
inc
sub
push
in
in
pusha
cmp
pushf
cli
cltd
adc
inc
jmp
pop
pop
fcmovu
dec
adc
fwait
punpcklwd
rcll
cmp
clc
add
outsl
iret
lret
mov
insl
daa
push
xchg
insb
cmp
or
jno
pop
and
mov
pusha
cmp
mov
mov
sbb
mov
lcall
dec
mulb
xchg
add
loopne
xor
ss
das
dec
mov
xchg
mov
or
ja
jb,pt
daa
dec
test
inc
hlt
push
adc
push
jge
and
ja
ja
test
mov
scas
or
sbb
aam
lods
scas
in
aad
jne
push
arpl
dec
in
push
pop
adc
stos
jb
in
cmp
adc
mov
pop
jbe
in
movsb
imul
ljmp
imull
bound
push
sbb
mov
pop
jnp
pop
cwtl
test
cmp
pop
pop
add
adc
xor
popf
sbb
sub
addr16
fwait
pop
xor
and
or
xchg
push
cmpsl
jle
pop
lret
lret
roll
movq
mov
xor
cmp
xorl
dec
pusha
xor
rol
pop
push
loopne
loopne
popa
or
cmc
ljmp
sub
ror
fimuls
jbe
lret
daa
xorb
jl
jnp
icebp
mov
pushf
subb
cmp
or
dec
dec
enterw
mov
lea
repz
mov
xchg
fst
sub
and
cmp
push
shll
imul
scas
inc
leave
add
dec
int
dec
xor
push
fs
mov
jge
push
je
push
out
push
arpl
push
movsb
sahf
popf
int
sub
pop
outsb
or
xor
loope
test
push
pop
or
xchg
pop
out
inc
lret
push
mov
xchg
and
xchg
sub
dec
sub
arpl
shl
gs
je
fldcw
add
jle
jo
or
enter
das
je
test
jmp
mov
outsl
mov
jg
jecxz
stos
and
jge
add
cld
and
cs
mov
popa
ljmp
mov
mov
cltd
or
sbb
loopne
popa
scas
mov
or
adc
test
sti
je
not
test
or
inc
lret
cltd
aad
nop
fistpll
es
scas
pop
clc
cmp
cmc
sahf
gs
pop
inc
sub
not
inc
add
xchg
aas
ja
sub
int
xchg
out
hlt
push
push
stc
inc
xor
sti
stos
mov
jbe
lods
mov
cmp
jge
out
xor
fldt
xor
pop
icebp
cli
mov
addr16
add
or
jnp
in
aad
cmp
mov
out
loopne
shl
pop
cltd
sub
pop
rcll
lret
add
daa
add
cmp
and
pop
jp
dec
fisttpl
pop
cmc
aaa
ljmp
lahf
mov
and
jbe
arpl
leave
mov
sbb
and
dec
jecxz
cmp
loop
aad
dec
xchg
inc
cmp
cmp
out
xor
mov
std
sbb
fcompl
xor
insl
fucomp
repz
enter
insb
je
push
std
insl
nop
test
push
lret
mov
repz
mov
lods
in
xchg
loop
cmp
inc
inc
stos
fildll
sbb
add
mov
cmp
mov
in
cld
push
add
aam
lret
mov
inc
cmp
mov
adc
dec
divb
add
mov
or
icebp
addr16
shrb
jl
cmp
or
std
dec
push
mov
imull
xchg
sub
addr16
idivb
adc
fmul
js
aam
out
popf
mov
jbe
inc
btc
mov
mov
or
jg
add
test
mov
xchg
or
test
cld
xchg
leave
mov
jecxz
sub
inc
sub
fcompl
lahf
sub
adc
jge
sbb
ret
imul
sbbl
scas
rolb
jno
stc
test
shr
sub
jecxz,pn
jno
test
cmp
inc
cmp
inc
fs
cmp
xchg
dec
stos
scas
mov
adc
loope
dec
call
lret
inc
or
mov
mov
cmc
xchg
call
stc
repnz
les
fs
inc
push
imul
pop
xor
push
pop
or
dec
push
es
movsb
mov
stc
cmc
or
icebp
cmpb
sub
rcrl
fcoml
mov
dec
sub
lea
hlt
mov
lods
rclb
pop
dec
jmp
adc
xor
mov
push
adc
push
jmp
dec
lea
test
add
sbbb
pop
sub
lea
dec
cs
sbb
pop
stc
scas
repz
mov
and
das
jge
and
repnz
enter
lods
int
ja
mov
push
adc
lret
cmp
out
push
push
push
paddusb
aad
std
pop
test
pop
mov
lret
dec
call
dec
fstpt
lret
sub
lock
mov
clc
xchg
popa
adc
jle
mov
or
jb
sub
xchg
inc
movsb
aaa
push
adc
loope
push
mov
pop
fstps
xchg
out
stc
inc
add
or
and
jecxz
or
or
mov
add
mov
mov
jg
and
popf
sub
mov
jecxz
jmp
fsubs
dec
jno
cs
out
sbb
or
shll
movsb
push
mov
sti
jecxz
ds
jmp
xorl
xor
push
jns
sub
test
nop
mov
and
dec
push
jp
inc
dec
cmp
lock
stc
xchg
push
jp
inc
add
mov
out
pop
ret
lcall
lods
pop
daa
or
pop
gs
lods
adc
and
std
sub
inc
mov
dec
push
mov
jnp
nop
cmpsl
pop
adc
nop
out
mov
inc
shlb
out
incb
shlb
sahf
sub
loopne
ficoms
or
mov
fnstcw
fisubl
and
pop
mov
ror
dec
jo
mov
jl
adc
notl
push
jge
incl
stos
lret
sub
data16
jmp
aad
mov
jae
push
into
inc
and
icebp
jmp
and
sbb
aaa
lea
push
pop
lahf
or
mov
jmp
je
mov
push
or
aad
dec
and
push
loopne
adc
into
rorl
out
test
xor
mov
mov
loop
arpl
das
in
xor
fldl
push
sub
and
jae
pop
sbb
push
rol
enter
jmp
push
loopne
out
mov
mov
inc
and
xor
xchg
dec
ljmp
repnz
jmp
lret
test
adc
xor
lea
and
ffreep
js
xchg
lcall
mov
fcmovnu
pushf
ss
push
addr16
pop
and
notb
lcall
ja
adc
rcll
sub
mov
fnstsw
jbe
push
call
jp
orb
cmpsl
fwait
mov
js
lret
mov
fsubrl
notb
cmpsl
aam
mov
adc
mov
and
jns
repnz
push
inc
jno
enter
rolb
lock
inc
sti
cmp
jg
jle
cmpsb
pop
mov
mov
std
push
ljmp
cmp
xchg
in
filds
fadds
shlb
cld
out
repnz
mov
fsubl
jne
xchg
jb
lods
push
mov
test
movsb
pop
clc
or
loop
jno
fisubrs
arpl
in
xchg
mov
push
ret
sbb
aam
push
adc
jbe
out
in
jne
pop
test
sub
in
sbb
in
aaa
sbb
or
verw
pop
imul
in
cld
push
iret
loop
je
sbb
out
out
push
cs
mov
imul
fstl
in
popa
or
shll
int
pop
notb
pushf
xor
push
jge
cltd
mov
in
loopne
pushf
scas
cltd
xorb
jge
sub
sub
cli
jb
add
arpl
dec
mov
popf
dec
std
xor
aad
nop
mov
aas
es
cmp
icebp
leave
xchg
loopne
and
jle
int
and
adc
sub
movsb
push
mov
jmp
inc
sbb
hlt
or
pop
cmp
pop
mov
jb
add
inc
inc
xchg
or
inc
lods
rolb
test
lds
mov
dec
fstps
test
cmp
jle
fiadds
insl
call
fcomps
fcmovnbe
outsl
and
or
cmpsl
and
arpl
dec
cwtl
lret
sub
xchg
and
mov
cmp
add
dec
and
cmc
xchg
push
cld
fsubrs
dec
mov
mov
hlt
mov
or
adc
mov
mov
loopew
sub
pop
stos
xor
and
aam
hlt
js
iret
add
inc
xor
addb
inc
rorb
and
mov
add
or
xor
sbb
out
ret
out
sub
push
mov
int
cs
imul
xchg
mov
clc
ficoms
ret
in
pop
icebp
pop
jo
inc
adc
pusha
filds
in
mov
mov
fwait
xchg
and
mov
test
mov
jns
int
or
or
in
test
push
xchg
aam
xchg
addr16
movsb
ds
lods
loope
popa
lods
imul
aas
icebp
cli
xchg
mov
push
inc
call
adc
movsl
pop
mov
mov
out
xor
push
mov
mov
scas
sti
loop
mov
sbb
adc
and
sbb
mov
xchg
dec
movsl
sbb
outsl
ret
stos
hlt
push
mov
test
jo
add
out
inc
aas
jne
xor
and
stos
cmpsl
xlat
inc
inc
rcll
repz
or
push
pop
data16
std
or
adc
cmp
cmpsl
stos
or
adc
outsl
fwait
out
add
jle
iret
mov
sahf
aam
lods
mov
or
mov
sub
mov
inc
xorb
ficomps
cld
push
and
in
pushf
cmp
in
outsb
mov
jb
test
sbbl
pop
inc
addr16
xchg
mov
push
scas
lret
mov
pop
jo
bound
mov
xchg
pushf
fstl
mov
mov
ficoml
cmc
jne
sbb
lcall
notb
push
push
fldt
mov
jp
mov
jp
mov
jg
test
mov
push
icebp
xchg
fwait
jnp
push
cmpsl
je
push
aaa
mov
jne
adc
mov
std
inc
and
sub
adc
cmp
fisubrs
jns
sbb
es
lock
sti
pop
les
fcompl
enter
hlt
mov
mov
cmpl
cmpsb
adc
ret
xchg
jmp
andb
sarb
cmp
cltd
and
cmp
xchg
xor
fisubrl
les
jno
and
sub
push
into
out
dec
jns
add
stos
jge
cli
lea
xchg
push
iret
add
std
aad
cld
gs
push
mov
pushf
pop
scas
jno
push
and
test
push
inc
shrb
nop
pop
enter
js
pop
xchg
push
push
mov
lods
pop
mov
mov
aam
xor
and
xlat
es
je
enter
loope
add
aad
mov
mov
fs
mov
in
fisubrl
mov
adc
repnz
enter
sbb
in
jno
add
sbb
fcmovbe
das
in
pop
ret
dec
jbe
dec
int
hlt
inc
push
jbe
mov
ss
in
mov
ljmp
lock
cli
jle
clc
ficompl
push
rol
inc
inc
adc
inc
jae
ds
pop
xchg
sbb
pop
mov
sbb
aaa
lds
mov
loop
sbb
push
addr16
popf
mov
aad
mov
stc
movsl
mov
outsl
cmp
leave
cld
jb
leave
ljmp
and
cmp
std
test
imul
sub
ljmp
add
pop
add
dec
cmc
pop
stos
bound
xchg
jle
loop
adc
test
mov
movsb
dec
pop
negl
mov
cld
fisubs
push
jno
lret
inc
lea
sbb
ljmp
xchg
sub
sub
xor
daa
inc
dec
mov
nop
sub
test
sahf
jb
cmp
repz
rol
cmp
bound
test
int
in
out
mov
fcomp
add
mov
sahf
add
lcall
leave
jnp
mov
inc
aas
ss
cmp
sub
mov
mov
sub
cmc
push
shlb
push
adc
pop
lods
push
cmpsb
dec
test
daa
pop
popa
and
orb
or
and
shrl
inc
test
and
push
jle
repz
stos
mov
xchg
or
sbb
fmull
js
sbb
lods
mov
ds
inc
and
dec
movsb
xchg
mov
pusha
pop
inc
xchg
loopne
in
mov
adc
scas
and
sub
xchg
jl
in
cmp
xor
xor
loopne
gs
scas
sub
mov
inc
cmp
xchg
sbbb
cwtl
mov
call
sub
jnp
inc
fsubr
xor
add
push
stc
xor
push
inc
push
imul
cmp
icebp
pop
fldenv
mov
pop
adc
mov
sub
pop
shl
jp
ja
xor
mov
cli
add
sbb
outsl
fs
mov
jo
adc
cmp
mov
xchg
pop
dec
fcmovu
xchg
pop
xchg
dec
jo
mov
xor
jge
imul
jbe
sub
sub
arpl
rcrb
or
cmpsl
pop
xor
inc
aaa
call
bound
test
pop
inc
addl
adc
loope
sar
lret
sub
xor
inc
inc
sub
mov
je
shr
lods
and
or
cli
popa
add
xchg
fdivl
cmp
xor
cmp
iret
pusha
dec
fwait
or
jbe
jbe
test
push
mov
mov
dec
xor
clc
dec
in
cwtl
ficoml
push
sub
sub
add
and
add
dec
mov
faddp
or
aas
push
scas
stc
cmp
add
push
push
out
and
lcall
out
push
sub
dec
fsubrs
and
icebp
jle
and
cmp
addr16
or
mul
pop
jne
daa
pop
aad
cltd
jle
push
clc
adc
incl
clc
sarb
mov
out
inc
test
inc
push
js
push
outsl
cltd
lock
aas
mov
mov
fcmovb
sti
ljmp
ljmp
ljmp
int
test
rcll
jmp
loopne
and
sub
push
ret
cmpsl
inc
jmp
rep
add
and
stos
jmp
movsb
and
cwtl
nop
inc
cmp
and
aam
xchg
adc
and
mov
sbb
dec
enter
dec
or
lods
mov
out
pop
rol
imul
je
lods
sub
and
ds
pop
stos
idiv
xchg
mov
aad
loop
das
inc
in
cmpl
dec
cmp
sti
push
call
rcrl
iret
pop
ret
pop
neg
mov
xor
dec
cmpsl
cld
insl
jns
cmp
jae
or
imul
pminub
test
stc
xchg
mov
icebp
and
testl
mov
aam
pop
mov
loopne
pop
jecxz
lret
and
xchg
lret
out
dec
test
push
lcall
mov
mov
test
inc
add
in
fcompl
rorb
sub
mov
popl
out
in
imul
mov
addl
aad
mov
xor
mov
jnp
push
or
outsl
fcoms
jnp
ja
cs
je
push
nop
xchg
and
pusha
fs
out
and
rdtsc
dec
cmp
hlt
or
ljmp
je
jle
out
push
sub
lds
testb
inc
scas
jne
in
sbb
inc
icebp
push
fwait
sub
pop
movsl
loopne
out
test
daa
pop
mov
popa
xchg
nop
lcall
push
jb
inc
mov
ja
fs
mov
ljmp
stc
xor
and
repnz
xchg
xor
jl
je
mov
nop
out
add
jo
push
orl
mov
xchg
mov
test
add
fcoms
cmp
push
pushf
pusha
jb
jne
mov
sub
or
test
repz
addr16
xor
mov
fistl
lahf
pop
lret
ljmp
adcl
sub
not
inc
jo
int
sub
cmc
inc
cmovns
or
pop
jp
outsb
cmp
sahf
mov
pop
inc
mov
pop
mov
out
push
dec
subb
cmove
pop
adcl
fstpl
xor
inc
insl
outsb
mov
lret
daa
je
nop
jp
mov
mov
pop
fsubrs
mov
mov
icebp
aaa
xchg
push
mov
add
fnstenv
ja
cld
xchg
outsl
call
mov
das
inc
push
call
fisubs
jno
addl
push
xorb
nop
sub
mov
mov
mov
dec
lods
lea
test
mov
loope
das
fldt
test
mov
xor
mov
mov
dec
pop
ret
rcrb
mov
mov
add
dec
jp
andb
dec
sbb
sti
mov
push
sbb
mov
add
dec
dec
or
call
loop
call
mov
mov
outsl
jp
pusha
mov
sti
jl
and
test
arpl
pop
sbb
mov
or
xchg
filds
das
aas
adc
fwait
xor
dec
add
xor
push
pop
jge
data16
aas
lcall
idivb
jns
push
and
cmpsl
cmp
jl
mov
test
mov
lahf
sub
mov
fidivl
jge
inc
pop
mov
xor
xor
push
imul
dec
sti
sub
jge
popa
lds
aad
mov
enter
scas
hlt
xchg
pushf
daa
in
push
cmpl
or
stos
adc
insl
inc
lods
aad
xorb
out
aaa
cmc
call
ret
test
adc
cmp
xor
aad
adc
or
call
aad
dec
jne
mov
bnd
aam
jl
jae
mov
clc
cmp
mov
add
inc
sub
adc
lret
sbbl
push
inc
outsl
lcall
loop
mov
arpl
and
test
xchg
bnd
pop
ds
inc
pop
cmovno
test
adc
stos
scas
dec
sub
cwtl
push
hlt
lods
rcrb
nop
repnz
aam
movb
sti
dec
mov
enter
out
ss
rorl
das
ss
dec
sub
mov
push
mov
stos
cmpsb
sbbl
dec
mov
repz
xlat
dec
shl
xor
out
leave
fadds
mov
mov
dec
sbb
dec
mov
mov
inc
dec
fsubrl
mov
cmp
sub
repz
jno
push
push
leave
insb
scas
mov
push
add
add
cmc
fcoml
or
push
cltd
push
popa
pop
xchg
xchg
cmc
dec
pop
and
cmpsb
mov
ja
movsl
enter
mov
jmp
lahf
repnz
mov
mov
in
icebp
cmp
push
and
jmp
jle
sub
sub
insl
add
dec
shl
ss
xlat
jbe
fdivrs
and
dec
xchg
leave
dec
out
lds
in
idiv
aad
cmovae
lret
jmp
shlw
sahf
adc
aam
xchg
add
testb
pushf
inc
adc
mov
dec
jle
leave
jns
pushf
adc
sahf
lcall
mov
das
filds
rol
xchg
out
int3
push
shlb
test
mov
sti
iret
xchg
pop
jo
fdivrl
imul
pop
addr16
or
push
xchg
xchg
pop
sub
jnp
add
push
daa
notl
push
inc
add
je
xor
lods
xor
jp
mov
inc
jg
pop
dec
fnstcw
dec
hlt
mov
add
add
test
cmp
and
adc
clc
add
es
clc
mov
sbb
bound
xor
out
fwait
mov
outsl
sub
hlt
cmp
scas
mov
fs
aas
in
xchg
out
adc
nop
fcomip
sbb
cs
cld
xlat
ja
add
pop
sti
popa
mov
pop
iret
push
pop
stc
push
cmpsb
scas
cmpsb
jb
or
jnp
mov
test
xchg
test
push
ret
inc
jnp
jge
jb
cmpl
xchg
imul
test
sahf
fistl
or
in
setp
mov
or
cmp
cmc
inc
icebp
cmp
sti
fs
sub
dec
mov
hlt
sarb
xlat
movsl
jno
xor
push
mov
out
add
jae
xchg
fwait
jle
jns
jmpw
cltd
fnstsw
dec
iret
js
pushf
repz
ss
and
jno
fcomps
adc
mov
sub
les
leave
dec
pop
sbb
pusha
jmp
rcl
out
mov
rclb
mov
adc
mov
bt
xchg
lods
je
fwait
inc
jne
and
lods
sbb
rcll
sbb
mov
lcall
or
pop
popf
out
lret
jno
xchg
mov
jle
cli
loope
xor
sub
ja
daa
and
imul
jg
stc
mov
sbb
jg
lahf
mov
leave
xor
aad
push
sub
clc
lea
sbb
mov
mov
in
push
mov
push
push
inc
jbe
pop
bound
add
ret
std
cmp
or
in
xchg
sbb
out
in
mov
mov
mov
pushf
jle,pn
mov
and
xor
jbe
mov
cli
add
jecxz
movb
dec
sbbb
clc
and
stc
mov
imul
cmp
test
mov
cmp
pop
jg
add
jae
lret
pusha
fucomip
and
mov
lret
add
fadds
js
xchg
add
xchg
mov
xchg
mov
movsb
inc
aas
jbe
mov
push
jmp
ja
andl
sub
inc
scas
dec
sub
enter
js
and
sub
sbb
idivl
in
jmp
push
inc
cmp
and
in
lahf
ds
insb
ficomps
or
pop
lea
shl
aas
mov
test
sbb
imul
fs
xchg
push
add
pop
mov
pop
je
add
dec
movsl
mov
mov
movsl
jbe
sbb
fisubrl
dec
leave
or
jne
pop
xor
cmp
inc
or
call
fwait
lret
dec
in
pop
stc
mov
xchg
inc
cmp
sub
in
mov
movb
cmpb
push
movsb
mov
ud0
mov
out
push
ljmp
das
stc
scas
pop
jp
call
hlt
add
jb
out
fnstcw
jg
sbb
xor
jbe
xchg
push
add
je
mov
mov
mov
mov
mov
mov
call
and
mov
into
lods
jl
lea
std
sub
sbb
mov
lds
push
lahf
andb
push
and
idivl
mov
cmp
and
xor
adc
icebp
stc
fs
pop
repnz
cmc
shrb
mov
movsb
xor
pop
in
inc
mov
loope
dec
xchg
sbb
and
loop
out
leave
test
popa
sbb
add
add
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmpb
je
sub
cmp
ja
cmpb
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
