and
cwtl
add
mov
pop
xchg
nop
orl
mov
enter
je
enter
insb
test
and
and
pop
orl
push
push
dec
dec
or
enter
mov
enter
rolb
or
cmp
ljmp
call
les
call
inc
and
add
mov
xor
div
and
mov
sbb
arpl
enter
sub
and
orl
sbb
push
mov
cmpl
jne
push
add
and
or
xor
mov
jmp
mov
mov
int3
sub
adc
mov
add
mov
idivl
add
push
and
mov
or
inc
cmp
jne
fldt
fmull
cmp
pop
push
out
mov
lods
mov
lds
adc
lret
jmp
push
push
clc
mov
mov
jg
xor
in
mulb
jmp
mov
dec
inc
addl
out
or
inc
push
adc
xchg
push
pop
add
push
sbb
push
push
insl
imul
jnp
pop
pop
pop
arpl
mov
mov
mov
xor
dec
add
cmp
fmulp
shlb
push
aaa
mov
mov
mov
mov
mov
jns
mov
lret
add
cmp
popf
fucomi
fidivl
sbb
or
mov
add
jmp
add
shlb
push
pop
jnp
jmp
pop
cmp
jne
mov
mov
imul
test
lock
pop
pop
pop
pop
lea
xchg
in
hlt
xchg
mov
pop
outsl
jb
jo
xor
stc
add
fbstp
sbb
jne
and
or
push
sub
andl
ret
dec
push
pop
sub
xor
testb
jne
sub
xor
pop
fnstsw
out
jbe
lret
mov
add
sub
mov
sub
jle
or
mov
push
lods
jmp
gs
xchg
mov
fildl
jne
mov
adc
nop
ret
mov
inc
xorl
pop
mov
and
and
add
mov
push
push
orl
mov
test
je
sbb
mov
jo
and
movsl
outsl
push
popa
cmp
lock
sub
push
lods
outsl
in
push
mov
pusha
push
dec
push
mov
push
jne
js
add
mov
dec
or
mov
lahf
call
scas
imul
mov
stos
or
inc
popa
adc
sub
adc
dec
push
jmp
sbb
xchg
cmp
pop
pop
sbb
jb
int
add
adc
mov
adc
jae
or
push
out
mov
insb
dec
jbe
add
jbe
xchg
mov
add
pop
sbb
ficoms
mov
jecxz
xor
or
adc
andl
sbb
xor
xchg
out
call
lock
loopne
and
aaa
xlat
sub
add
adc
push
neg
dec
adc
or
inc
dec
cli
lods
jl
pop
jmp
push
push
add
inc
lahf
in
jae
xor
mov
hlt
jbe
adc
add
pop
ficompl
or
push
push
adc
xor
jge
push
jae
pop
faddl
pop
mov
fnstenv
rolb
and
add
dec
es
mov
sbb
mov
push
sbb
jae
mov
add
sahf
add
lahf
jnp
fisubrl
in
sbb
jo
mov
in
pop
cmp
jg
mov
cwtl
mov
pusha
sbb
cmc
arpl
dec
pop
add
jns
jmp
mov
js,pt
push
jb
push
enter
dec
loopne
or
adc
es
xchg
jecxz
fcmovnb
adc
add
movsb
jae
pop
pop
das
fs
or
cli
inc
dec
inc
into
sbb
lods
out
jecxz
jge
push
push
cmp
je
jmp
fnstenv
push
pop
lcall
iret
cmc
mov
sub
int
add
jns
je
jmp
mov
js
xor
insl
or
adc
mov
push
bound
jmp
out
or
inc
push
push
inc
xor
fstps
and
movsb
inc
jmp
jl
fnsave
scas
jg
and
push
and
pop
jb
clc
pusha
sti
mov
inc
js
inc
es
or
inc
pop
inc
mov
push
cmpsl
lea
xor
dec
add
xchg
rorb
cmp
cmp
pop
jmp
push
sub
dec
push
sub
xchg
mov
jge
in
mov
test
je
bound
mov
daa
cwtl
ljmp
inc
addl
xchg
xlat
jbe
cmp
push
movsb
push
push
pushl
fs
xor
and
cld
inc
cmpb
ret
es
dec
leave
loop
jbe
adc
push
mov
adc
inc
mov
cmpl
inc
cmp
movl
jne
mov
mov
mov
fucomp
pop
mov
lods
loope
pop
pop
pop
pushf
cmp
jnp
push
ret
add
fisttps
push
jmp
mov
xlat
mov
sub
repz
jle
sub
cmp
xor
fsubrl
imull
add
and
mov
sbb
jmp
xchg
or
dec
mov
mov
out
cmpl
je
add
pusha
xor
or
dec
dec
and
aas
sbb
xchg
ja
pop
fistpl
push
std
cmp
shlb
add
out
clc
rolb
jne
test
jns
das
sti
and
ret
cli
add
dec
push
mov
pop
mov
mov
je
insl
adc
mov
popa
sbb
iret
jle
mov
push
mov
add
inc
adc
sbb
outsb
cmp
jb
sbb
push
or
sbb
or
stc
cmp
sbb
pop
inc
lret
loopne
sti
insl
mov
cli
adc
movl
insl
js
mov
push
push
adc
pop
add
emms
in
aam
mov
mov
pushf
dec
dec
fisttpl
rolb
adc
je
outsl
out
or
add
pop
cmp
push
fs
mov
or
mov
add
or
dec
or
mov
mov
inc
sqrtps
or
fbld
je
add
idiv
fiaddl
enter
ret
mov
add
inc
pusha
push
or
sbb
or
add
inc
add
loop
ja
xor
mov
test
pusha
add
add
test
push
adc
cltd
or
inc
or
sbb
push
hlt
push
inc
loopne
sub
fistl
or
icebp
fcmovnbe
pop
dec
daa
jb
js
movl
or
sub
sbb
push
mov
jg
lock
xor
jge
sub
enter
dec
in
xchg
les
aam
or
sbb
push
sbb
cmp
lret
cmp
aad
pop
mov
push
cmp
add
fstpt
shlb
lea
aam
js
push
testl
in
or
fldcw
add
call
jbe
movsl
mov
clc
add
pop
pop
insl
outsl
outsb
pop
in
jne
jbe
adc
xchg
inc
mov
mov
mov
pop
mov
ficoms
ds
mov
or
or
dec
pop
mov
or
nop
dec
cmp
inc
mov
fsubrl
sub
clc
aaa
or
jle
or
out
push
mov
pop
hlt
dec
sub
fldl
les
mov
rorb
and
push
inc
lea
jbe
jno
cmp
pop
loopne
sub
fdivs
dec
mov
add
jge
mov
add
add
mov
jae
jmp
loope
loope
push
cmp
jne
mov
sti
jmp
subl
orl
fbld
aam
inc
lods
xor
adcl
inc
sbbb
xor
add
add
nop
fnsave
pop
lea
ret
xor
nop
mov
push
pop
int3
or
cmp
xchg
jg
iret
dec
xor
sbb
cmp
or
cld
bound
and
or
xchg
cli
mov
push
js
fcmovb
stos
aad
nop
shrb
mov
adc
add
pop
insb
lret
mov
push
or
jg
pop
mov
xor
je
int3
jbe
mov
ret
adc
jp,pt
or
in
jne
adc
shrb
mov
add
hlt
mov
mov
pop
sub
ds
and
push
add
add
xor
stc
ds
xchg
fucomp
imul
aam
ret
jl
jge
xchg
outsl
cmp
xor
push
push
movsb
jne
iret
inc
adcb
lods
mov
pop
out
mov
inc
jp
scas
sub
jbe
es
inc
xchg
jmp
pop
je
clc
mov
jmp
cld
and
cld
bound
test
popf
pop
mov
fisttpl
sti
dec
sbb
das
or
fimull
lods
hlt
push
clc
cmp
mov
jbe
aad
or
adc
pop
lret
data16
xchg
and
or
mov
push
mov
or
fwait
jmp
inc
xlat
add
push
loopne
hlt
sub
mov
in
xor
pop
adc
test
inc
push
inc
cld
ret
call
cmp
pop
rcrb
add
test
pop
pushf
lret
loope
jmp
jb
jb
push
jl
das
imul
inc
incb
cld
pop
mov
lock
and
mov
iret
nop
cmp
jne
jae
mov
lahf
or
and
sub
or
push
sub
sbb
ret
mull
sbb
push
decl
mov
int
sub
mov
pop
push
cmp
popa
mov
cmpl
or
push
xchg
cmp
adc
push
sbb
ret
and
lea
add
loope
shlb
sub
sub
outsb
cmove
add
mov
addl
or
mov
add
out
cmp
or
jmp
pop
or
sbb
or
adc
or
xchg
into
dec
sbb
lods
lods
inc
js
mov
and
xor
add
inc
and
sarb
xchg
jo
hlt
sti
mov
and
cmp
lods
mov
rolb
or
or
cmpsl
lahf
nop
out
sub
idivl
adc
pusha
mov
xchg
sub
pusha
cmc
pop
cmp
add
lds
cmp
and
ds
and
dec
add
sub
popa
lock
push
ret
sti
sub
mov
dec
fadds
jmp
cmp
adc
outsb
mov
lods
push
jae
mov
and
pop
or
pop
sbb
notl
les
imul
movl
cwtl
jmp
sub
aam
mov
mov
add
in
sub
add
cmp
iret
sub
xlat
sbb
xchg
xor
push
mov
sbb
dec
xor
rorb
ds
in
xlat
adc
sbb
or
fdivrs
cmp
adc
cld
jmp
pushf
mov
les
inc
mov
jge
sbb
jbe
clc
jle
adc
sub
pop
aas
in
loope
push
pop
mov
inc
xor
jle
dec
call
mov
shr
adc
sbb
jae
stos
fucom
cltd
insl
adc
mov
or
popf
daa
add
ret
push
jmp
leave
je
jmp
sbb
enter
or
insb
pop
insl
xor
jo
sub
lahf
inc
mov
jnp
inc
pop
jne
adc
shlb
adc
test
out
popa
adc
jnp
adc
mov
xlat
push
mov
nop
fildl
or
jge
rolb
mov
sti
adc
jge
sbb
mov
mov
call
mov
adc
popf
arpl
cmpsb
push
cmp
fsubr
pop
jne
xor
xchg
repz
mov
pop
jb
cmc
cmp
insl
insb
xor
xlat
sarl
divl
je
cld
mov
js
rep
mov
and
rep
sub
in
pusha
mov
lea
sbb
std
sbb
loope
pop
cld
and
or
movsl
js
xchg
insl
or
xchg
push
mov
fldt
into
and
or
cmp
out
sbb
add
add
fbstp
in
lret
cltd
adcl
or
sub
repnz
sub
xor
je
loop
movsb
mov
and
pop
jp
mov
pop
adcb
jmp
pop
xor
adcb
mov
jae
mov
mov
incl
jbe
pusha
mov
nop
iret
xor
loopne
adc
adc
push
adc
push
adc
sbb
xorb
sub
je
cld
pop
mov
jne
push
push
jge
cli
inc
bound
xchg
mov
xchg
and
into
icebp
lock
or
adc
std
or
sub
int3
sbb
movsb
fdiv
add
out
or
sbb
mov
in
pop
or
ds
pop
sub
or
push
inc
adc
ja
or
rcrb
inc
or
adc
jmp
les
bound
stos
pop
add
push
mov
cmpsl
fmull
mov
rcrb
adcl
push
pop
bound
push
or
repz
or
jnp
call
sete
pcmpgtd
ja
adc
mov
cmp
sbb
test
sbb
cmpsb
inc
or
jmp
sub
xlat
jae
dec
jp
cmpsb
lods
add
sbb
mov
inc
es
mov
cmpsb
jmp
in
je
pop
inc
add
es
push
and
sub
enter
jmp
pop
mov
push
lret
ret
filds
push
push
lea
push
or
lcall
ret
inc
adc
jle
mov
jne
dec
add
in
jbe
out
pushl
and
and
adc
arpl
pop
mov
push
push
sbb
mov
push
pusha
lea
sub
dec
clc
dec
insb
push
test
cmp
jae
cmpb
pop
call
add
sarb
or
mov
xchg
jg
iret
mov
xor
je
xor
outsl
mov
shl
pop
or
dec
cmc
rcrb
cmp
mov
jno
and
adc
add
pop
int3
and
or
mov
add
int3
or
fstpl
imul
sub
mov
pop
mov
ret
addr16
shll
mov
data16
pop
inc
sbb
sub
aas
negb
je
fs
pop
cs
pop
pop
data16
pop
movb
out
push
int3
add
out
push
push
ljmp
mov
add
shlb
fyl2x
cmp
jne
aam
cld
imul
push
push
xchg
call
bound
in
shlb
xor
jmp
insl
out
or
jae
or
adc
decl
xlat
cmc
or
stos
jmp
cmp
or
or
inc
addr16
shl
adc
fcmovnb
ret
ret
mov
mov
pop
or
mov
shr
outsb
movsl
push
sub
push
pop
sbb
sbb
loop
shll
sub
and
add
and
adc
add
push
sbb
out
jge
dec
push
or
sbb
insb
mov
cmp
jmp
cmp
sbb
movsb
dec
push
or
pop
mov
jbe
ss
mov
and
in
and
jmp
xor
fistl
dec
push
inc
pop
mov
in
mov
shl
add
outsl
cli
cld
or
stos
mov
stos
pop
stos
xor
imul
inc
mov
mul
xor
loop
lret
jge
jbe
mov
mov
xor
sub
ret
mov
mov
adc
loopne
add
mov
xchg
jmp
int3
mov
movsb
push
imul
dec
xor
mov
out
addl
xchg
pop
or
push
mov
je
in
cmc
or
cmpsb
aaa
inc
dec
push
or
or
xor
adc
and
jg
mov
cmp
cmp
jmp
mov
clc
sahf
add
or
pop
pop
xor
add
add
ss
pushf
lds
inc
lea
ja
mov
lods
xchg
loopne
scas
loop
xor
dec
ret
loope
mov
cmpsb
jmp
icebp
in
inc
test
int3
add
push
inc
xchg
mov
aaa
xchg
je
mov
sti
sub
je
and
pop
pop
jle
je
pop
je
xor
out
push
sahf
out
daa
adc
call
pop
cli
sub
ja
cmp
ja
lea
push
ja
sub
out
int
imul
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
in
sub
popa
jb
jmp
dec
mov
or
adc
or
dec
jbe
insb
add
aad
add
testb
nop
lret
mov
mov
push
pop
jne
push
or
cmp
and
or
xchg
sub
ds
hlt
jbe
rorl
inc
add
xor
inc
fildl
push
test
mov
xor
cs
hlt
push
xor
add
aad
lds
cmp
ror
adc
hlt
push
out
mov
add
fistps
data16
or
mov
mov
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
lods
pop
loopne
imul
push
dec
popa
push
popa
insb
fldl
fninit
fldcw
xchg
cli
insl
pop
mov
or
push
cld
ret
sbb
jbe
data16
pushf
sahf
in
push
popa
adc
push
fimull
mov
push
pop
push
push
push
adc
pop
xchg
insb
sbb
push
inc
push
movsb
fsts
add
add
mov
push
push
int
push
jg
sbb
cmpb
je
add
jne
movsbl
inc
inc
jmp
out
fcomps
cltd
rcll
sbb
loope
cmp
int
stos
xchg
daa
adc
loop
popa
mov
pop
fistpl
ja
jecxz
pop
arpl
testl
adc
cmp
imull
fisubs
push
sbb
cld
ja
imul
push
icebp
cmpsl
xor
shlb
or
sub
adc
into
cli
out
sub
sub
and
or
mov
pop
push
sarl
cmp
pop
sbb
fldt
mov
jp
or
jp
addr16
or
add
adc
sbb
out
je
orl
xor
mov
push
sbb
pop
mov
hlt
xor
push
fcoml
jnp
fimull
mov
insl
mov
rorb
inc
add
xor
arpl
jecxz
jmp
pop
cmp
es
loope
orb
roll
cmp
mov
pop
je
mov
inc
add
rcrl
push
mov
shrl
add
xor
daa
clc
addr16
gs
or
pusha
add
scas
cmp
or
mov
imul
in
pop
enter
cltd
push
lea
mov
mov
inc
xchg
pop
adc
push
pop
inc
stos
loop
pop
shll
add
dec
jg
xorl
pop
cmp
push
sub
sub
ljmp
lock
add
call
jmp
in
stc
out
push
cmp
cmp
adc
and
mov
sub
cmp
mov
jmp
mov
test
add
jg
int
and
sbb
pop
loop
xchg
pop
mov
pop
mov
push
mov
fists
outsb
out
lret
dec
push
ret
orb
lahf
mov
sbb
negl
je
sub
or
movsb
cmp
adc
push
xchg
cmc
je
cmp
xchg
sar
sbb
decl
and
or
ret
push
mov
lcall
pop
ss
popa
xchg
pusha
pop
jo
mov
out
aaa
mov
ss
push
pop
test
bound
std
push
das
mov
cmp
or
add
movhps
adc
push
push
mov
adc
xor
pop
pop
push
mov
sahf
inc
mov
aaa
scas
sbb
sbb
mov
pop
add
sbb
jg
inc
jmp
mov
xchg
jb
popa
int3
daa
mov
xchg
popf
loopne
pop
cli
outsl
mov
daa
xor
jo
cmp
repz
insb
add
imul
or
mov
repz
movl
or
mov
lea
pushf
adc
mov
mov
movb
pop
cs
sbb
add
xchg
loopne
cltd
idiv
add
fadd
mov
inc
daa
fistl
adc
mov
mov
mov
xor
mov
or
mov
sub
shr
dec
sahf
mov
or
mov
xchg
cmp
cmovg
sbb
inc
maxps
outsl
adc
ja
jbe
mov
add
mov
mov
leave
push
iret
or
xor
push
mov
cmp
cmp
mov
mul
add
jbe
add
pushf
push
push
adc
mov
cmp
fadd
test
and
push
stc
into
pop
add
sbb
pop
pop
add
in
js
inc
out
notl
mov
xor
test
sbb
scas
sub
sbb
adc
shlb
mov
mov
shrb
fistl
sbb
outsl
push
pop
add
loope
arpl
fwait
sbb
push
bound
jbe
leave
jnp
pop
clc
push
insl
jnp
lcall
adc
add
das
push
push
sahf
jp
fbstp
jne
dec
mov
lds
push
sub
sbb
lock
fbstp
adc
sub
dec
mov
add
outsl
and
sbb
fsubr
jmp
add
pop
xchg
rol
add
dec
clc
dec
jl
incl
jle
mov
clc
cmp
pop
lock
popa
and
add
or
cmp
addl
dec
jne
xlat
daa
and
sbb
sbb
dec
sub
pop
or
movsbl
cmp
xchg
fnstenv
rorb
jle
out
jmp
inc
inc
jle
push
add
and
push
adc
mov
inc
add
adc
mov
mov
dec
clc
out
imul
int3
mov
shr
stc
xor
lahf
mov
pushf
data16
adcb
mov
roll
cltd
fistps
pop
push
mov
test
lods
push
mov
push
mov
mov
xor
movsl
mov
pop
mov
fnstcw
dec
add
add
je
fists
xchg
or
mov
inc
inc
inc
mov
pop
sub
jmp
stos
push
mov
xchg
repnz
xlat
in
push
cmp
pop
stos
pop
pop
sbb
pop
mov
dec
aas
cmp
stos
mov
push
fistpll
push
cld
add
sub
pop
lods
insl
mov
mov
adc
mov
and
fidivl
popa
inc
xlat
mov
adc
jbe
add
ret
outsb
sub
push
rorl
mov
lods
scas
mov
mov
int
cmp
push
push
bsf
pop
in
xchg
mov
jmp
pop
xchg
lret
push
xor
dec
xchg
adc
or
or
inc
push
cld
dec
jmp
adc
or
iret
cli
es
jne
push
pop
jmp
test
sub
cld
mov
add
dec
jmp
rclb
bound
sbb
jge
dec
dec
mov
jmp
test
or
xchg
dec
pop
xchg
jle
add
lea
jmp
stos
pop
cmp
push
and
push
cld
sub
ja
add
push
js
pop
fstpt
mov
pop
cmp
jne
dec
je
in
add
les
cmp
add
or
lods
push
or
pop
add
fidivrs
mov
pop
cmp
jne
push
adc
xchg
cmp
cmp
cmp
push
test
and
sbb
push
adc
jne
adc
shr
or
int
rcll
inc
jmp
or
imul
add
and
stc
cmp
decl
sbb
push
push
pop
or
icebp
in
dec
inc
adc
shl
out
mov
addr16
jo,pn
pop
sub
test
sbb
dec
jl
cmp
jge
sub
mov
lds
and
adc
in
dec
jmp
and
mov
ret
cmp
ss
pop
fidivs
jl
fildl
es
jle
sub
sarl
and
inc
inc
mov
stc
add
lea
fwait
daa
dec
push
add
das
mov
xchg
jle
pop
mov
push
rorb
sbb
adc
fcmovu
dec
adc
mov
sbb
repz
das
ds
test
pop
aaa
or
iret
pop
mov
ret
xchg
inc
dec
jle
add
cmpl
mov
xor
pop
das
je
pop
push
jo
push
or
jmp
adc
xor
shlb
cli
inc
cmp
jl
icebp
lcall
dec
mov
mov
stc
in
sbbl
push
pop
aam
dec
push
sbb
mov
push
pop
stos
stos
jb
add
xor
add
sbb
stc
inc
xor
cmpsb
jmp
pop
add
fcmovb
mov
inc
mov
mov
adc
inc
in
or
inc
mov
adc
fcomp
aam
aaa
and
mov
or
sub
and
mov
loopne
inc
cmp
push
sub
subb
mov
ret
lret
push
dec
jg
and
jge
mov
pop
push
add
out
cmp
je
test
or
cmp
je
cmp
dec
cmp
sti
arpl
int
add
jae
dec
clc
jmp
or
mov
adc
out
jmp
push
mov
fs
add
dec
mov
jg
xchg
data16
shr
pop
add
in
shl
shl
ret
and
insl
jb
rolb
add
pop
mov
lea
fsubrl
cmp
sub
mov
fbld
ds
pop
jbe
test
pop
mov
xor
inc
add
or
adc
pop
or
sbb
pop
shlb
ja
sbb
sbb
cmp
outsb
adc
cmpsl
mov
or
jmp
xor
inc
insb
mov
jmp
inc
add
sub
mov
sbb
sbb
jmp
rcrb
pop
icebp
fcomps
test
xor
imul
inc
fsubrs
dec
push
adc
imul
fwait
jp
lcall
xchg
sub
dec
and
mov
push
das
jnp
adc
sub
cmp
ja
push
dec
shlb
xchg
cld
in
cmpsl
es
aam
or
pusha
adc
cmp
adc
adc
aas
xchg
in
push
imul
inc
jb
dec
mov
xchg
pop
xor
arpl
jge
sub
cmp
add
pusha
aaa
bound
mov
sub
cmp
and
or
popa
mov
jmp
nop
fcompl
mov
pop
mov
call
jne
add
dec
push
lock
nop
pop
xlat
stos
inc
push
lea
push
push
adc
pop
mov
dec
sete
sarb
inc
xchg
xchg
mov
push
movsl
sub
mov
sub
xor
test
movsb
insl
jae
lods
out
jle
add
add
mov
and
push
cld
insb
or
repz
jae
std
imul
push
clc
in
pop
or
jae
scas
push
sub
lock
clc
inc
add
jae
cmpsl
and
dec
push
sbb
xlat
or
repnz
aad
into
aam
cmp
cmpsb
cmp
and
cld
mov
cmp
add
gs
add
jbe
test
cmpsl
out
fs
movsb
and
jg
fsts
femms
fsubl
std
xchg
jmp
shlb
enter
inc
pushf
sbb
ret
xor
push
pop
cmovo
inc
or
arpl
lea
mov
sbb
fcoml
and
jp
sti
jle
or
mov
popa
mov
mov
jne
mov
punpcklwd
ds
or
adc
ret
mov
ret
mov
movsb
xchg
sub
xor
mov
into
insb
xlat
mov
xor
andl
test
subb
out
xchg
subl
inc
push
aas
or
cmp
or
xor
xorl
xor
orl
or
add
add
sbb
add
hlt
lock
in
jb
push
loopne
add
leave
and
in
orl
filds
lock
or
sbb
inc
stc
gs
aad
sbb
aaa
hlt
or
pusha
subl
pop
les
orl
mov
enter
test
xor
and
sbbl
or
mov
jl
orl
je
insb
push
fs
pop
xor
and
and
and
cmp
xor
or
enter
sbb
enter
adc
and
or
xor
add
cld
add
push
lock
loopne
cs
cmp
leave
inc
cmp
das
adc
dec
pusha
and
inc
sub
jb
add
aaa
fs
xchg
and
push
mov
add
loop
test
cmp
mov
leave
adc
and
and
imul
les
je
iret
cmpb
adc
sbb
jae
and
pop
test
pop
sbb
jae
mov
cmpl
enter
cwtl
cwtl
pushf
test
pop
repnz
mov
iret
subl
je
outsl
lods
adc
mov
and
or
jb
adc
xor
clc
insb
insb
lahf
inc
jb
popa
je
push
neg
pop
hlt
outsl
outsl
insb
push
popa
jo
push
in
out
fimull
adc
je
imul
ds
gs
pop
sbb
jg
jbe
dec
push
adc
gs
mov
sar
gs
outsl
jb
add
mov
cmp
push
xchg
and
push
fsts
dec
outsl
fs
gs
inc
xchg
sub
add
adc
cmp
xchg
mov
inc
or
add
add
imul
dec
dec
push
enter
dec
adc
loopne
push
hlt
call
shll
sti
arpl
cs
lock
or
lds
pushf
insb
add
or
adc
clc
ds
arpl
mov
push
add
lock
pop
sub
sbb
inc
or
popa
sub
xchg
dec
lahf
dec
aad
inc
hlt
cmp
jnp
jp
mov
push
addr16
flds
sub
push
push
cld
jle,pn
cvtdq2ps
lea
mov
dec
mov
mov
mov
pop
adc
hlt
jmp
pop
xlat
add
repz
ja
pop
pop
cs
invlpg
add
jmp
mov
lock
mov
dec
aaa
mov
sbbl
in
pop
mov
pusha
mov
push
mov
in
leave
shl
cmpsb
in
rolb
mov
sbbl
in
cmp
sbb
enter
fs
pop
sbb
and
xor
and
sub
sar
cmpsl
mov
jns
idivl
mov
sub
ret
mov
iret
push
push
xor
div
dec
out
cli
cmp
sub
pop
mov
cmp
pop
pop
sub
sub
jbe
out
call
add
mov
sub
jmp
mov
dec
jne
xor
add
push
mov
cmp
out
in
and
daa
push
mov
xchg
adc
insb
and
xor
and
ljmp
call
mov
inc
nop
ds
mov
adc
sub
incl
cmpw
jne
rclb
cmp
mov
mov
cmpl
pop
sub
mov
jle
push
cmc
testb
out
aad
pop
dec
test
adc
subl
adc
lea
dec
add
gs
mov
divb
cmp
mov
cmp
dec
rolb
mov
add
je
and
fiaddl
lea
orb
call
xchg
xorb
jo
call
std
add
mov
adc
movsb
jns
adc
mov
call
inc
cld
adc
push
mov
push
sbb
movb
in
mov
loopne
imul
shrl
fucomi
gs
mov
cs
push
mov
pop
stos
js
inc
add
cmp
and
cmp
push
lods
daa
adc
sub
mov
mov
out
add
fstl
sub
jmp
inc
dec
push
add
daa
into
shr
cmp
jb
push
add
movsb
sti
pop
pop
sti
gs
add
xor
lock
out
daa
xor
fs
aad
cs
ds
mov
pop
clc
call
shr
and
xor
xor
dec
xchg
inc
fadds
sbb
xchg
mov
cmpsb
in
add
ret
mov
sbb
in
stc
or
and
and
loopne
lahf
fdivrl
dec
nop
jb
inc
inc
mov
add
and
pushf
push
fmull
mov
dec
jl
dec
or
sbb
lods
stc
cmpb
jne
inc
or
inc
pop
aaa
xchg
adc
or
mov
mov
or
ret
dec
sahf
xchg
icebp
in
sbb
or
jne
add
push
shlb
and
jecxz
shrl
hlt
mov
pop
mov
mov
stc
sbb
das
push
lret
and
addl
dec
adc
cmp
aas
and
jmp
aam
sbb
jle
pop
lcall
lock
clc
mov
xlat
xor
inc
je
in
clc
mov
movsl
xor
mov
xor
in
push
add
adc
call
cmp
or
and
or
and
sbb
and
sub
mov
inc
jecxz
ja
les
ds
xor
ret
add
adc
psraw
movzbl
and
in
nop
xor
adc
mov
lret
fcom
mov
aam
fildl
or
or
add
mov
test
xor
add
add
sub
xor
cmp
rcrb
sub
out
dec
mov
mov
pop
scas
fs
int3
enter
gs
or
nop
add
push
and
cld
jmp
inc
cmp
pop
jmp
sbb
push
les
nop
gs
dec
gs
jns
imul
jo
xchg
xchg
or
popa
bound
inc
aaa
xor
dec
mov
lods
xchg
inc
mov
enter
std
aaa
cmc
jbe
je
dec
insl
imul
bound
arpl
xchg
outsb
je
loopne
xchg
leave
xchg
cmp
or
cmpsb
and
lock
shlb
lds
fsubs
inc
dec
jbe
push
pop
push
fsub
out
cs
add
cmp
add
push
push
repnz
mov
cld
adc
enter
iret
hlt
clc
imul
sbb
push
and
sbb
pop
arpl
clc
fs
or
cmpl
bound
sub
push
push
fmull
aaa
movsb
cmp
mov
jg
mov
sub
lea
cmp
iret
xor
in
popa
repz
xchg
ret
repnz
mov
adc
mov
call
xchg
add
inc
add
jl
test
fimuls
or
gs
xor
mov
add
mov
xor
sbb
sub
lcall
lods
push
cmpsl
int
leave
push
push
dec
cmp
or
ret
jb
hlt
jp
push
and
jecxz
jo
jno
sbb
jle
popf
sbb
lret
push
hlt
test
lcall
rcr
and
movsl
pop
or
sub
ljmp
fld
mov
or
sub
sbb
and
ljmp
or
pop
xchg
sbb
inc
mov
dec
pop
add
rolb
and
nop
xchg
push
stc
push
pop
ret
dec
push
inc
sbb
and
leave
nop
sbb
call
fs
lock
pop
in
andl
dec
cmc
push
xchg
add
out
sahf
clc
mov
cld
mov
add
add
or
add
adc
nop
out
in
cld
iret
cmpb
pop
sbb
sbb
cmp
cmp
repnz
xchg
dec
leave
sub
xor
pop
repnz
cmp
test
jae
iret
addl
enter
dec
lock
test
xchg
mov
sub
and
repz
jnp
ret
adc
gs
cmp
mov
dec
popa
insl
gs
adc
insb
enter
inc
js
sub
cmp
adc
outsb
data16
insl
fucom
testl
pop
inc
insl
scas
jns
or
imul
and
push
jne
pusha
mov
outsb
imul
gs
inc
sbb
push
aas
arpl
popa
jo
gs
fldcw
mov
or
lds
jb
add
cmp
leave
adc
push
and
jbe
sbb
das
lods
or
push
add
sub
stc
vmwrite
mov
and
lahf
push
add
push
pop
in
push
enter
in
clc
outsl
sarb
not
and
or
or
and
or
loop
adc
ret
rcll
or
push
addr16
daa
push
sbb
and
sub
mov
shr
stc
lret
data16
adc
loop
fimull
rolb
sbb
imul
mov
push
or
add
testb
andb
js
add
add
rcr
iret
push
or
pop
push
shr
fdivl
mov
fists
xchg
insb
std
mov
mov
incl
or
loop
or
xor
sbb
imul
xchg
mov
mov
push
mov
sti
ja
inc
mov
mov
and
sub
push
or
or
nop
fnstsw
ljmp
mov
mov
dec
push
fwait
test
xchg
or
adc
sbb
xchg
jl
pushf
jl
push
inc
push
or
mov
or
outsb
xor
sbb
push
sub
lret
movsb
push
out
cli
repnz
mov
push
das
lods
mov
sbb
or
push
mov
pop
imul
sbb
and
sub
das
adc
jo
and
or
in
fldt
push
push
into
data16
lret
dec
arpl
sbb
stc
xor
cmc
xor
movb
xor
inc
xor
incb
xchg
inc
std
cmp
cwtl
subb
iret
xchg
inc
scas
testl
mov
decl
xlat
pop
mov
add
adc
xchg
aas
xchg
jno
std
push
mov
cmpsb
add
iret
xchg
pop
and
mov
pushf
pop
repnz
and
mul
xor
in
mov
inc
shl
lret
leave
cmp
push
loopne
adc
nop
add
push
loopne
xchg
aas
push
repnz
adc
inc
push
adc
add
xchg
cld
cltd
pop
and
leave
lahf
add
sti
shl
inc
out
loope
addr16
decb
pop
aaa
ret
sub
or
adc
inc
dec
leave
pop
push
push
inc
add
repnz
clc
mov
add
das
nop
aas
push
dec
mov
add
rorb
testb
ljmp
adc
or
divb
stos
push
adc
jb
xor
dec
popa
popf
insl
in
push
adc
jae
xchg
cld
pop
push
push
leave
lahf
sub
inc
ljmp
dec
out
decb
dec
mov
add
jo
mov
fwait
sub
and
daa
mov
sub
test
out
aam
add
in
add
cmp
aam
dec
stc
xor
out
clc
jl
pop
add
lahf
sub
daa
xchg
mov
hlt
push
cmp
in
or
ljmp
inc
dec
ret
cmp
push
push
xor
das
mov
dec
repnz
inc
pop
pop
sub
xchg
aas
push
inc
jge
out
jmp
stc
xor
test
jle
outsl
dec
leave
lahf
sub
out
xor
out
adc
add
dec
cmpsb
in
add
jle
testl
repnz
sub
lahf
sub
roll
aas
mov
push
add
or
mov
out
or
or
pop
cmp
ss
ffreep
or
cli
stos
int
clc
in
out
push
or
fdivrl
xor
add
popf
clc
mov
add
add
mov
inc
pop
int3
mov
ljmp
adc
fsubp
aas
push
inc
in
add
push
adc
add
incl
pminsw
jg
sbb
fdivrs
fbstp
lea
sbb
inc
in
lea
push
xor
fcomp
jmp
or
or
ret
inc
lea
cmp
ja
push
popf
xor
fsubrl
push
outsl
mov
aaa
mov
pop
aam
adc
fcom
jnp
clc
ss
lea
push
testb
jmp
mov
sti
adc
or
pop
cwtl
cmp
test
ret
sahf
lods
add
ret
mov
sarl
and
aaa
leave
push
js
xchg
cmc
imul
shrl
movsb
mov
jae
sbb
arpl
nop
out
rcrl
cld
imul
repnz
jbe
imul
dec
subb
mov
jl
orl
sub
shl
xor
add
sub
in
lock
or
sub
add
in
add
daa
out
push
jo
and
xchg
popa
push
adc
jbe
sub
and
cmp
xchg
iret
jae
imul
mov
sbb
mov
sub
pop
or
pop
xchg
inc
add
pop
mov
outsb
icebp
dec
call
mov
xchg
outsl
mov
repnz
jne
movsl
inc
jl
mov
jne
pushl
adc
push
fldl
or
dec
lods
inc
daa
add
jae
mov
adc
insl
pop
movl
mov
adc
sbb
pusha
leave
scas
lcall
and
cmp
cmp
push
shrb
aaa
push
jo
inc
fs
push
and
mov
stos
pop
test
xchg
add
cmp
and
xchg
into
push
push
mov
rcr
pop
pop
sti
add
inc
jge
jmp
sbb
cmp
mov
sbb
or
popf
fnstenv
cmp
das
add
fsubrs
subb
adc
push
push
cmp
or
in
outsb
inc
scas
xor
call
pop
enter
add
testb
jecxz
testl
insb
mov
test
add
push
call
mov
outsb
int3
aam
xorb
push
adc
fdivs
xchg
daa
test
cmc
pop
insb
jo
jl
push
fldenv
lds
mov
bswap
sbb
popa
add
xchg
xor
aas
stos
inc
aam
sbb
mov
lcall
loopne
ret
popa
add
insb
sbb
xchg
sub
imul
jae
jae
gs
pop
inc
mov
outsl
pushl
jb
outsb
je
outsl
add
insb
pushf
pop
push
pusha
orb
sbb
cmc
jg
aas
aas
dec
insl
popa
addr16
popa
je
push
jns
pop
out
adc
shrb
call
test
xor
dec
sub
sar
jle
ss
pushf
outsl
adc
and
adc
mov
js
mov
sbb
fldcw
stos
cmc
mov
jbe
flds
repz
xor
dec
fisttpl
addr16
jb
pop
shlb
outsb
dec
mov
ret
or
cs
outsl
pop
add
fdivrs
inc
pop
jae
mov
pop
ret
push
adc
clc
dec
outsl
popa
fs
push
add
arpl
push
jo
mov
in
pop
pusha
and
nop
add
lea
fs
add
nop
sub
sub
nop
push
int3
cli
sbb
ljmp
push
push
or
ljmp
mov
js
inc
or
inc
ror
jecxz
scas
and
shlb
jno
mov
hlt
push
das
int
rcll
xchg
dec
aas
pusha
fdivrl
or
mov
and
or
lds
and
fbld
inc
aaa
pop
fs
or
arpl
outsl
je
data16
sub
sbb
imul
outsb
enter
fdivrs
inc
sbb
or
pushf
sub
or
add
adc
filds
jae
daa
fs
push
mov
aaa
push
clc
push
or
pop
hlt
or
cli
adc
push
pop
enter
js
jnp
inc
jle
jae
or
pop
out
lods
or
jae
sub
xchg
fisttpll
or
jge
jno
dec
xor
push
inc
dec
pop
cs
insl
push
pop
imul
mov
jle
adc
dec
and
mov
popaw
mov
stc
mov
int3
cmp
adc
cmp
pusha
aam
outsl
jne
enter
or
or
push
sub
jne
sub
push
xchg
andl
bts
adc
nop
out
jae
sub
xchg
pop
or
dec
je
sub
pusha
adc
add
mov
je
popa
hlt
pop
xor
stos
dec
dec
push
je
fwait
sar
shll
xor
push
adc
adc
cmp
add
ret
sgdtl
dec
test
insb
je
fisttpll
or
push
sbb
adc
push
nop
in
femms
or
mov
push
arpl
fcoms
jle
filds
popa
bound
push
leave
jns
gs
add
xor
or
movsl
ss
mov
pcmpeqb
pop
imul
or
popa
jae
push
xor
sarb
or
or
outsb
js
sti
fldt
push
inc
dec
addr16
imul
sub
sub
jo
mov
ja
jb
ja
popa
imul
aad
sti
dec
inc
push
push
inc
das
dec
or
mov
imul
mov
sbb
add
sbbb
insb
enterw
fsubrs
push
sub
popf
sub
imulb
jne
xchg
jae
js
pop
ficoml
outsl
out
jbe
out
jge
or
push
or
rclb
jnp
outsl
arpl
dec
in
dec
add
fs
push
xchg
ds
mov
jne
stos
fs
mov
insl
and
push
mov
sub
lock
dec
inc
or
inc
inc
dec
dec
int
lret
sbb
imul
mov
pop
inc
gs
popa
insb
data16
dec
rcr
xor
outsl
or
lods
sarl
daa
dec
push
push
scas
jne
or
cmp
lahf
dec
xor
push
ja
sub
jb
mov
sbb
faddl
jo
pop
jne
ret
add
sub
pop
mov
inc
jbe
fs
mov
imul
int3
fimuls
push
jne
and
out
and
mov
popa
lods
cmp
lcall
test
mov
inc
inc
push
jns
push
sub
adc
pop
sub
imul
imul
dec
dec
jo
mov
adc
fs
xor
mov
push
push
sub
imul
dec
push
jge
ret
popa
ja
das
popa
dec
ss
fdivs
lcall
pop
or
inc
inc
imul
dec
or
dec
xor
mov
or
aas
fs
xor
cmpsl
popa
adc
dec
hlt
dec
push
dec
les
mov
test
cmovbe
loope
xchg
xchg
jge
push
dec
in
shlb
jo
js
jae
xor
jnp
push
push
mov
jo
xor
rcll
jmp
gs
imul
sub
jne
cmp
mov
xchg
dec
dec
arpl
cwtl
pop
push
inc
dec
pop
jnp
or
push
imul
gs
outsl
or
jg
mov
dec
into
inc
sbb
je
mov
popf
bound
aaa
mov
and
sbb
popl
mov
stos
inc
and
cmp
mov
popa
xchg
rdpmc
arpl
fldt
push
cwtl
stos
push
lcall
enter
fbstp
jecxz
jno
arpl
pop
xchg
and
imul
jb
dec
dec
out
pop
jg
or
push
inc
xchg
or
je
fcmove
addr16
or
push
mov
or
and
cmpsl
popa
out
insb
fs
popa
push
inc
xor
push
mov
pop
jae
jecxz
mov
push
insl
in
xchg
or
push
inc
outsb
jp
nop
outsl
loopne
pop
inc
shll
insl
insb
arpl
inc
xor
mov
outsl
push
fnstenv
ja
rorb
jmp
ret
push
mov
stc
mov
gs
push
insl
js
add
adc
pop
push
xchg
jnp
mov
jae
and
aas
inc
insl
or
bnd
insb
jo
movsl
jo
lods
xchg
test
or
mov
cmp
into
or
jo
dec
add
push
push
inc
psrad
push
dec
jo
mov
popa
je
sti
and
mov
dec
mulb
lret
imul
insl
cmp
cmp
adc
inc
aam
jo
or
sub
fldl
and
adc
push
inc
jb
insl
add
add
roll
and
mov
sbb
inc
dec
cmpsl
dec
testl
imul
push
add
xor
mov
sub
enter
outsl
pop
cs
setb
or
xchg
push
sbb
jp
jae
add
mov
mov
gs
jge
inc
adc
fsubs
sbb
sarl
and
aad
dec
cmpl
ja
add
and
push
je
dec
pop
jae
add
jo
inc
lar
jo
dec
callw
lahf
js
push
inc
inc
mov
popa
or
xchg
inc
mov
sti
jno
dec
xlat
scas
shll
iret
or
movsb
inc
scas
add
loopne
pop
subl
mov
jae
je
xchg
sbb
fldt
adc
xor
in
inc
dec
push
sub
xchg
rolb
jae
insl
sub
insl
push
push
jo
pop
mov
sti
insl
pushf
jno
lret
lcall
js
cmpb
sbb
or
dec
cmp
xor
xor
adc
sub
inc
pusha
ljmp
pop
adc
clc
mov
scas
mov
iret
psubw
repz
rol
notb
lret
test
in
pushl
mov
lret
int3
leave
stos
ss
testb
cmp
or
mov
mov
in
pop
pop
inc
sbb
out
aam
sbb
xchg
inc
addr16
test
sbb
adc
int
xlat
xchg
mov
les
pop
lret
out
mov
stos
mov
daa
mov
in
or
mov
aaa
or
jg
mov
repz
lret
mov
mov
in
ud2
mov
int3
in
mov
xchg
jg
mov
mov
aam
shl
test
ret
sti
mov
iret
mov
into
repz
fidivs
mov
fcoms
sub
sub
in
mov
mov
jmp
sbb
mov
mov
into
icebp
test
mov
sub
repz
rcl
mov
jno
xor
cmp
fisubs
mov
fs
mov
mov
xor
and
jne
sub
cmp
xor
sub
inc
add
outsl
in
lahf
sbb
xor
and
jne
imul
popa
and
add
jbe
xor
cmp
jne
insb
jle
fs
push
int3
add
xor
cmp
jg
or
fsubs
xor
push
ss
pop
xor
imul
lahf
popa
imull
mov
insl
mov
xor
push
ss
insb
imull
ss
xor
popf
sub
jne
cwtl
xor
pop
outsl
ja
push
das
and
inc
stos
xchg
cmp
je
cmp
cmp
push
imul
fisubl
add
cmp
js
aas
mov
bound
cmp
testb
push
xor
ja
pop
out
loope
je
mov
shll
movsb
cmpsb
dec
dec
pop
outsl
xor
inc
ds
xor
bound
inc
mov
ja
mov
xchg
xchg
aaa
xor
imul
aaa
xor
fimull
mulb
lahf
push
or
orl
lahf
test
xor
xor
mov
popa
sti
les
outsb
aaa
cwtl
mov
cmp
jg
lret
xchg
daa
mov
xor
xor
popa
jp
insl
js
xor
movsl
jecxz
lods
pop
push
dec
fsubs
ja
adc
xor
fs
push
xor
sub
xor
xor
test
xor
xor
mov
imul
imul
mov
sub
jns
or
xchg
loope
jge
aaa
outsb
jecxz
xchg
rorl
jmp
insb
lahf
xor
push
mov
out
shlb
dec
inc
xchg
fsubl
repz
repz
xor
push
mov
dec
fdivs
fmull
xchg
add
jo
sub
lret
pop
adc
pop
andb
pop
adc
sub
int
cmp
movsb
inc
movsl
in
ret
ret
xchg
mov
popa
imul
and
movsl
insl
dec
arpl
push
lods
mov
jae
jg
loope
scas
cmp
insb
add
cmp
inc
loopne
aaa
xlat
jmp
fildll
push
xchg
sbb
sbb
mov
insb
xor
shll
gs
das
xchg
cmp
push
int3
xchg
fldt
addr16
pushf
fisttps
imul
outsb
xchg
xor
adc
and
xor
frstor
xchg
or
xor
arpl
xor
cmp
das
cmp
push
mov
fisubrl
or
push
lock
jbe
cmp
adc
dec
ss
adc
bound
sbb
addr16
add
xor
or
xor
out
push
jecxz
push
scas
jno
adc
popa
or
test
pop
cmpl
xor
lock
cmp
popa
in
cmp
cmpsl
outsl
cmp
or
mov
shlb
iret
insb
pop
rorb
xor
jb
xchg
data16
lods
popa
cmp
test
inc
cmp
xlat
mov
mov
and
or
sbb
lret
cmp
imul
jae
lret
mov
dec
mov
cwtl
jmp
inc
imul
sub
adc
xor
pop
and
adc
mov
cwtl
jp
lods
ret
dec
mov
cmp
xor
mov
into
push
pusha
jmp
xor
arpl
jnp
cmp
mov
ss
xchg
sbb
fisubs
jp
push
xor
shlb
jnp
jne
js
lret
sub
pusha
addr16
cmp
cmp
pushf
call
outsl
imul
les
pushf
or
sahf
xchg
push
addr16
inc
xchg
cmp
push
pop
or
fs
and
inc
xchg
outsl
or
and
sub
inc
xor
scas
cmp
inc
sarb
sbb
xor
and
imul
sub
push
imul
outsb
stos
inc
jno
jae
int
rclb
out
inc
sbb
insb
xorl
xor
or
rcrb
rcll
xor
xor
xorb
imul
xor
addr16
imul
mov
jmp
outsl
jbe
jbe
fisttpll
pop
in
js
cs
sub
popf
iret
sub
bound
jns
lret
popf
mov
xor
push
fs
xchg
lods
jbe
cmp
xlat
pop
pop
icebp
test
adc
insb
xchg
imul
xor
mov
inc
jbe
jg
test
movsl
insl
pushf
xchg
xchg
shrl
xor
or
fisubl
xor
jne
or
imul
fs
adc
lcall
pop
cmp
test
orl
and
pop
xor
lods
sub
jno
jb
pop
ja
test
xor
xchg
loope
call
pop
xor
es
xor
xor
dec
push
sti
jae
jne
cmp
or
or
aas
ret
bound
push
mov
jp
enter
imul
stos
and
ja
ss
adc
push
sbb
scas
in
add
lcall
mov
lret
in
mov
adc
ret
jae
jnp
mov
jae
inc
or
popa
test
xor
fldcw
imul
xchg
cmp
adc
ret
cmp
and
mov
ss
imul
mov
cmp
and
sbb
hlt
cmp
or
mov
js
das
je
mov
shlb
ret
in
pop
cmp
jae
insl
lahf
cmp
int3
xchg
movsl
mov
sbb
aas
je
lret
xor
stc
cmp
cmp
gs
pop
pop
mov
gs
cmp
xchg
bound
mov
scas
dec
cmp
ss
cli
or
loop
lahf
jno
ret
arpl
ljmp
out
enter
push
fnsave
cmp
adc
mov
add
dec
loop
push
outsb
outsb
adc
inc
adc
or
sub
mov
scas
and
inc
pop
lret
or
xor
fld
and
ljmp
or
pop
rolb
int3
pop
popa
jbe
and
cmp
add
jae
jno
mov
mov
cmp
mov
jo
pop
mov
loopne
testb
mov
pop
pop
icebp
jne
add
ds
ja
mov
imul
movsb
stos
push
xchg
xor
arpl
je
inc
cmpl
mov
popf
adc
mov
das
ret
scas
ss
jnp
push
scas
sbb
mov
jb
data16
sysenter
shrl
enter
xchg
xchg
ss
add
xor
ja
xor
ficoml
popf
pop
mulb
rorb
inc
or
xor
imul
mov
cmp
aaa
imul
insl
shlb
fs
xor
xchg
sbb
mov
add
mov
cmp
packssdw
imul
dec
rolb
bound
add
inc
xor
fs
iret
cmp
dec
push
lret
add
outsb
mov
dec
bound
xor
xchg
push
xchg
data16
sub
imul
int3
mov
shlb
xor
roll
xchg
inc
fsubl
or
stos
add
sub
or
xchg
inc
mov
fwait
xor
int
or
je
jle
pusha
or
insl
jo
ss
pop
pop
jae
push
inc
sarl
dec
xor
pop
fistpll
xchg
xchg
mov
test
test
pop
fimull
xor
lea
sbb
testl
out
mov
or
bound
stos
in
aad
ja
jae
mov
insl
jno
add
pop
mov
call
jl
pop
in
addr16
cmp
xor
xor
sbb
mov
dec
ja
mov
aaa
sub
and
jne
outsl
cltd
pop
ret
mov
jns
mov
shr
outsb
adc
pop
lea
add
cmp
jno
adc
dec
data16
or
push
ja
push
js
jg
icebp
cwtl
insl
mov
arpl
mov
daa
jo
add
test
sbb
xor
outsb
mov
aad
sub
insl
je
pop
testb
push
push
scas
sub
mov
mov
mov
cmp
in
xor
xor
pop
and
mov
rcr
pushf
xor
outsl
nop
sti
pop
dec
or
jp
mov
push
xchg
jl
and
adc
mov
rorl
fidivs
ja
add
js
insl
xor
test
imulb
sbb
call
pop
sub
xchg
out
data16
or
outsb
imul
lret
mov
jbe
arpl
cmp
aaa
gs
mov
jnp
sahf
and
or
or
mov
adcl
addr16
xor
stc
fiaddl
push
or
sbb
ret
arpl
xor
push
dec
xchg
pop
stc
cmc
pusha
and
pop
pushl
pop
and
insl
adc
das
add
push
adc
nop
stos
hlt
arpl
mov
lahf
jne
add
pop
mov
or
xor
and
sti
pop
jecxz
xor
shr
and
insb
js
arpl
jae
add
cmp
arpl
in
outsb
pop
stos
fwait
mov
imul
inc
mov
dec
xor
mov
or
test
fwait
sub
dec
sbb
sbb
sbb
bndstx
je
dec
sub
ret
inc
mov
push
das
and
clc
dec
mov
add
popa
or
imul
jne
add
mov
rclb
dec
mov
mov
sarl
jne
imul
and
push
addr16
gs
jns
and
mov
and
popa
aam
movsb
jno
fldenv
add
jmp
xor
push
push
or
jno
cs
or
mov
xor
jbe
cmpsl
pop
mov
cmc
sbb
data16
pop
add
std
inc
or
cs
and
xor
mov
pushf
mov
imul
popa
adc
dec
out
das
ret
xor
sub
sbb
cwtl
lock
sub
dec
jne
ss
push
mov
or
adcb
push
xor
out
push
jne
or
roll
enter
push
das
cmp
stos
xor
in
sbb
xor
mov
xchg
and
and
push
mov
mov
and
cmp
les
pop
insl
push
pop
adc
lcall
pop
xchg
jecxz
pop
adc
arpl
cmpsb
dec
mov
mov
out
jp
adc
cmp
jb
xor
sub
dec
xor
fisttpl
xchg
sub
movsb
xchg
insb
xor
sub
and
ret
subb
dec
mov
ljmp
adc
jbe
scas
inc
xchg
lods
or
add
shlb
andb
imul
stos
cmp
js
cmp
filds
je
pop
dec
mov
push
orb
cmp
cmc
or
ja
and
xchg
adc
and
mov
sbb
rorl
gs
sbb
insb
mov
aaa
sti
jo
pop
gs
cmp
inc
or
add
add
cltd
test
mov
call
or
dec
mov
push
inc
ret
repnz
dec
sub
mov
in
pop
fisubl
xor
cli
leave
lcall
test
and
cmp
xor
ret
daa
inc
js
jo
bound
push
arpl
jb
imul
or
outsl
emms
jns
int3
jo
dec
loope
jecxz
filds
xchg
int3
mov
lret
test
lret
jo
mov
fisubrl
mov
push
xor
xor
xor
aad
sub
fwait
sub
loope
jbe
fbld
sub
stos
hlt
js
jne
aas
sub
imul
jae
push
es
and
rol
call
ficoml
inc
inc
sub
push
sbb
out
pop
jns
mov
jo
leave
cmpsl
pop
xor
jo
mov
cmp
push
add
mov
jo
cltd
inc
rorl
sub
loope
xchg
or
aas
push
adc
shlb
dec
xchg
lock
ret
cmp
inc
lret
cmpsb
xor
push
dec
jo
fwait
scas
and
pop
push
pop
jecxz
dec
push
fldt
popa
jnp
nop
mov
mov
and
xor
xor
jmp
iret
ja
add
xor
shll
fsubs
in
sbb
insl
outsb
jbe
pop
sub
xchg
push
xlat
nop
pop
jg
cwtl
jae
xchg
fidivl
aaa
pop
sarb
xor
imul
pop
pusha
fistps
ss
scas
mov
mov
ja
mov
pop
jne
dec
or
scas
aaa
pop
and
adc
movsl
cmp
arpl
sub
sub
xorl
leave
dec
and
outsb
or
mov
rorl
or
int3
jecxz
ss
inc
lods
inc
call
lock
adc
or
mov
mov
cwtl
mov
push
mov
stos
dec
and
xor
push
or
push
pop
add
mov
xor
or
xchg
shrl
js
xchg
push
and
neg
cmpsl
pop
or
jmp
in
push
xchg
pop
imul
bound
cmp
xor
sbb
repz
cs
outsb
jmp
xchg
xor
shll
mov
outsb
out
mov
insb
adcl
add
jge
pop
mov
ret
inc
push
or
and
sub
dec
data16
pop
mov
mov
out
or
jo
add
add
add
add
mov
aaa
mov
pop
cmpb
jbe
or
mov
insb
jg
jmp
dec
adc
clc
xor
mov
or
cmp
mov
subb
dec
xchg
movsl
andb
lahf
or
aas
xchg
xchg
outsl
shrb
lds
push
mov
xchg
call
add
call
add
lds
jge
fisubl
add
in
std
aas
and
cltd
idiv
mov
inc
adc
mov
cmp
push
test
adc
je
aaa
adc
pushl
int3
fcompl
adc
push
hlt
imul
jne
mov
mov
popf
xchg
cs
pop
or
and
gs
sti
mov
jae
or
inc
mov
mov
loopne
les
xchg
dec
jne
lahf
in
fwait
mov
jle
test
insb
add
mov
mov
pop
test
pushf
loope
aam
roll
lea
pop
xor
mov
add
sbb
pop
push
push
in
or
or
push
fmuls
ds
fdivl
div
dec
aad
mov
adc
repnz
dec
enter
mov
sub
push
mov
testl
stc
xchg
push
pop
in
enter
ljmp
aaa
or
add
xchg
pop
adc
add
xchg
or
xchg
xchg
es
mulb
sbb
ljmp
and
mov
mov
test
mov
add
in
push
fnstcw
in
test
pop
cld
mov
int3
pushf
push
test
sub
push
repnz
mov
add
or
or
sub
add
cmp
imul
and
xor
andb
stos
inc
jne
add
aaa
les
push
stos
pusha
test
push
xchg
xchg
xchg
or
ds
in
jmp
aam
cmp
in
adc
sub
or
cmp
aad
push
clc
mov
and
adc
inc
rcrb
adc
adc
fwait
test
and
jne
push
mov
xchg
in
or
in
push
mov
sub
incl
shl
or
shl
or
or
xor
inc
out
out
mov
hlt
sbb
push
gs
cmp
repnz
cmp
adc
addr16
lock
ja
or
dec
stos
sti
inc
sub
inc
pop
int3
loope
push
testw
xchg
lock
cmc
ret
mov
dec
adc
cmp
scas
test
pop
xchg
loopne
leave
add
fs
push
xchg
js
pop
nop
inc
repnz
or
insb
push
in
mov
xchg
imul
sbb
jne
push
add
jne
add
adc
or
jne
loop
pop
movsb
pop
xor
or
sub
mov
fcmovne
mov
xchg
pop
cmp
sahf
in
cmp
mov
sbb
mov
or
mov
sub
es
fs
fs
mov
mov
fsubrl
dec
es
orl
sub
pop
dec
es
fs
mov
mov
lcall
test
cld
jb
sbb
aad
ret
pop
loopne
test
cmpsb
in
and
xor
les
sub
movsb
cmp
add
fs
mov
jge
in
out
mov
or
mov
insb
lods
or
pop
dec
pop
fdivrl
xchg
sub
fcoml
push
nop
sbb
mov
insl
nop
scas
movsl
dec
aam
push
and
jl
mov
sub
push
and
lods
mov
in
push
fs
enter
mov
enter
xchg
push
in
jb
inc
roll
pushf
sbb
fsubl
push
push
inc
mov
jnp
sbb
inc
popa
rclb
inc
add
add
int3
mov
cmpl
pop
mov
rcll
cmpsl
or
idivb
dec
mov
push
add
push
pop
mov
clc
cmp
push
leave
sahf
sub
adc
mov
fnstcw
cmp
mov
mov
cmp
mov
nop
inc
scas
mov
inc
mov
jecxz
or
jo
cmp
and
sbb
imul
je
imul
out
pop
or
in
push
ret
ja
mov
inc
ret
ret
movsb
xor
dec
daa
in
fs
sbb
pop
ret
sahf
pop
enter
aam
popa
pop
in
dec
fdivl
cmp
jge
mov
mov
leave
cmovp
push
rol
dec
fmuls
adc
cmp
sbb
xchg
lds
inc
pop
mov
fadds
sbb
dec
enter
mov
out
adc
movl
pop
enter
cmp
add
movsb
mov
mov
fmul
in
test
jne
push
in
sbb
fistl
cld
pop
xchg
push
add
lcall
mov
leave
in
or
mov
in
cs
test
mov
sbb
inc
cmp
test
add
leave
pushf
dec
repnz
insb
add
repz
enter
and
nop
lock
mov
and
dec
negb
mov
les
fs
pop
enter
pusha
das
in
cs
aam
int
adc
and
int
arpl
inc
sbb
jns
dec
out
and
insb
dec
cmp
add
mov
mov
cltd
push
xchg
pop
shlb
jb
and
je
xchg
pop
repnz
jo
jo
leave
and
subb
jb
push
iret
and
sti
insb
jnp
fs
sbb
or
or
or
inc
imul
pop
pop
and
pop
lock
push
fadds
hlt
and
sbbb
or
lret
mov
sub
dec
mov
dec
pop
dec
cs
cs
sub
or
mov
scas
in
inc
inc
sub
dec
inc
cmp
in
cs
in
cmp
sub
cmp
xchg
out
xchg
xor
sub
dec
scas
xor
pop
les
mov
in
in
cs
sub
mov
and
dec
scas
insb
enter
and
mov
sub
in
sbb
sbb
xchg
sub
repnz
jb
adc
adc
pop
rclb
fs
pop
fsts
sub
rclb
inc
aam
xchg
out
or
dec
add
xor
in
push
sbb
or
sbb
xchg
jl
pop
add
add
int
sub
inc
fiadds
jb
cld
decb
in
mov
sub
mov
jb
xchg
mov
hlt
pop
jb
inc
hlt
pop
lock
in
cs
nop
pop
in
in
pop
call
call
xchg
or
pop
dec
cwtl
test
aad
cmp
mov
insb
loopne
fsubrl
fdivrl
pop
fcomp
mov
insb
dec
cmp
pop
aam
in
xchg
aam
pop
rolb
insb
dec
mov
enter
int3
cs
int3
pop
insb
dec
mov
enter
mov
les
les
rorb
pop
cld
lret
push
nop
dec
sarb
mov
leave
out
sbb
mov
mov
mov
pop
pop
repnz
jb
mov
mov
pop
subb
lods
pop
inc
das
movsb
jnp
dec
test
or
push
xchg
xchg
or
in
out
insb
movsb
in
out
mov
dec
adc
addl
or
jp
rcrl
cmp
sbb
dec
xchg
sub
sarb
mov
sbb
push
push
push
inc
dec
mov
pushf
stos
xchg
pop
dec
push
mov
lahf
and
fwait
xchg
add
pushf
adc
test
mov
js
inc
adcl
xchg
or
xor
in
packsswb
jb
addr16
das
pusha
or
xor
adc
cmp
jo
jae
mov
push
push
adc
imul
adc
outsl
outsl
rcrl
pop
arpl
insb
jae
push
sub
adc
das
adc
ret
arpl
addr16
push
push
add
xchg
adc
adc
adc
flds
insb
decl
mov
jle
imul
fsts
or
addr16
gs
popa
lret
call
mov
pop
imul
inc
pop
push
cmpsl
in
inc
andb
pop
jne
outsl
scas
in
insb
insb
ja
jno
jbe
inc
fs
inc
xchg
adc
in
outsb
mov
push
je
popa
insl
das
adc
es
add
add
int
lcall
pop
imul
mov
and
sbb
and
xor
dec
inc
push
call
jne
jecxz
inc
dec
jne
imul
push
xchg
aas
mov
dec
xor
jnp
mov
add
or
sub
adc
sbb
pop
fistl
cmp
insb
popa
outsl
add
jb
dec
push
dec
inc
pop
jnp
inc
xor
cli
pushl
ss
sub
sub
inc
aaa
cmp
sbb
xor
jge
or
xchg
pop
xor
inc
pusha
clc
or
aaa
and
jo
sub
sbb
das
das
repz
push
in
xchg
jle
pop
das
aas
jae
add
pop
jae
pop
dec
jo
outsb
sub
dec
push
loop
aas
xor
adc
add
ficomps
and
or
mov
dec
dec
and
arpl
out
add
xor
sub
push
sub
add
mov
mov
or
add
sub
add
dec
push
imul
in
jbe
add
xor
xor
push
xor
sbb
imul
pop
inc
xor
sub
xor
add
out
insb
jge
push
jno
push
push
je
lahf
jne
add
mov
jb
arpl
mov
add
fs
pop
inc
je
imul
cmovno
adc
cs
mov
push
push
js
and
jb
pop
push
jbe
movsl
lds
inc
adc
mov
mov
mov
outsb
sti
popa
test
dec
push
dec
mov
stos
in
cmp
out
xchg
popa
jne
je
mov
gs
inc
lret
jno
mov
gs
pop
dec
sti
addb
imul
sbb
jae
insl
mov
pop
inc
xorb
pop
ja
jae
je
pop
outsb
and
or
rclb
fstpt
jne
popa
pop
addl
orl
das
xorb
mov
js
xchg
adc
pushf
cmpl
in
adc
xchg
shrl
bound
lahf
inc
enter
aaa
aas
lods
mov
shlb
lock
fmuls
or
inc
cmp
mov
push
pop
arpl
dec
fs
xor
dec
push
sbb
sbb
outsb
daa
and
popa
fistl
push
cmp
and
daa
mov
xchg
test
or
inc
adc
or
in
mov
fiaddl
inc
jae
or
inc
icebp
lds
pop
stos
add
or
rol
mov
xchg
lods
ljmp
inc
mov
xchg
inc
inc
sub
inc
xor
xor
cmp
or
sbb
imul
xchg
sub
add
add
ficoml
aas
je
test
push
cmpsl
lahf
iret
loope
rcrb
andl
cmpsb
inc
and
mov
test
push
push
xchg
xor
adc
add
sub
jb
and
adc
jns
sub
push
fnstenv
fldt
xchg
or
sti
fwait
dec
in
cmp
mov
subl
mov
cmpsl
xor
xchg
movsl
cmp
cmpsl
inc
repnz
lret
dec
std
jne
jge
fs
cmp
push
jne
leave
fsubs
adc
jl
push
dec
add
lods
jge
sub
and
jne
into
push
mov
or
mov
iret
aad
in
insb
outsb
imul
mov
mov
pop
fstps
sbb
ror
pop
enter
mov
pusha
outsl
es
fidivrs
jge
mov
sbb
enter
cmp
fimuls
sbb
jl
fwait
std
pop
in
mov
sarb
xlat
mov
out
lret
hlt
fsts
add
or
fsts
repz
dec
sbb
test
dec
popa
bound
or
push
add
lods
jle
jae
scas
rol
sbb
pushf
movsl
in
pop
push
mov
enter
mov
mov
dec
and
xor
pop
enter
xor
xor
xor
xchg
sbb
and
xor
movb
addb
and
push
jne
imul
pop
mov
pop
or
fwait
in
cs
int3
aam
stc
jg
cmpsb
mov
cs
ret
loop
shll
inc
sub
lds
adc
adc
mov
in
xor
popa
sbb
pop
leave
dec
adc
and
pusha
popa
pop
xorb
sub
or
bound
lret
and
dec
pop
loop
fildll
jae
and
bound
jb
mov
mov
push
mov
testl
shrb
es
xor
inc
pop
cli
push
mov
adcb
xor
xor
push
jl
lds
push
mov
mov
push
jecxz
push
push
add
loop
movl
or
dec
add
push
push
push
jg
call
push
push
sbbb
out
popa
or
sub
xor
cmc
push
or
push
push
mov
ficoml
xor
dec
push
pop
push
and
mov
and
jl
xor
cmp
mov
push
je
inc
pop
les
and
xchg
shll
movsb
sbb
xchg
sar
pop
adc
fisttps
add
ss
ret
mov
push
mov
adc
je
jb
cld
insb
inc
or
out
jb
xchg
push
mov
push
xor
push
aam
push
and
fcom
inc
jb
in
in
aam
dec
fmuls
xchg
pop
repnz
pop
nop
test
ja
or
push
das
inc
es
cmpb
jne
push
mov
and
dec
mov
lock
dec
cmpb
jne
sub
pop
sub
cmpsb
or
add
incl
jge
inc
fldl
adc
sub
popa
test
loop
dec
lcall
mov
mov
push
and
pusha
mov
adc
gs
and
popa
add
test
add
pop
inc
or
rolb
cmp
push
push
mov
inc
or
and
dec
xlat
jmp
cld
push
lock
fdivrl
mov
test
movsl
mov
cmp
push
xchg
mov
cs
insb
dec
push
and
mov
mov
pop
dec
adc
push
xlat
add
ret
jle
dec
push
das
jmp
jl
in
insl
mov
push
cli
mov
and
add
dec
jl
push
pop
push
pop
push
mov
in
pop
adc
and
pop
mov
pop
push
mov
jmp
dec
xchg
mov
mov
scas
add
lea
jns
sub
add
pop
rolb
negl
repnz
andb
scas
adc
jbe
pop
data16
rcrl
add
add
popa
movb
push
adc
fsubr
sbb
sarl
in
mov
mov
sbb
in
fdivs
inc
sub
push
and
inc
push
or
fsubrs
mov
cmc
push
cmp
cmp
es
aam
or
mov
negb
mov
push
mov
popa
jns
cmp
aam
shr
fistl
mov
adc
mov
adc
push
xlat
je
push
enter
or
sub
push
lods
xor
mov
cmp
sub
mov
mov
dec
adc
addb
xor
call
and
mov
outsb
pushw
push
push
enter
sbb
cli
mov
dec
lods
fnstsw
xchg
push
enter
jno
adc
clc
flds
sbb
je
xor
sbb
je
sahf
in
sbb
pushf
stc
xor
dec
mov
push
pushf
popa
sub
or
xchg
and
or
sub
dec
fstps
nop
nop
pop
cmp
or
nop
dec
mov
sub
insb
ds
mov
push
ficoml
mov
jnp
sub
sbb
cwtl
in
out
js
cmpb
dec
jo,pn
pushf
insb
sbb
je
in
add
push
enter
lods
out
or
in
xchg
rcrb
pusha
mov
push
insb
push
cmp
push
in
jns,pn
push
dec
jb
repz
inc
and
dec
dec
inc
insb
sbb
nop
pop
inc
inc
cwtl
cmp
dec
ds
cmp
out
cmp
dec
cs
xchg
cmp
mov
mov
sub
jns,pn
cmp
sub
push
sub
mov
xchg
sbb
sbb
and
mov
sbb
cmp
je
in
cs
or
jb
repz
out
or
adc
inc
adc
add
sbb
nop
add
add
jns
xchg
cmp
add
std
dec
mov
clc
std
shl
std
xchg
mov
cld
std
cld
std
lock
mov
sbb
hlt
fs
push
fcoms
dec
fwait
dec
jne
or
fnsave
push
jge
cmpsl
in
push
push
into
insb
mov
in
mov
fistps
in
mov
enter
test
or
cmp
and
cmc
arpl
pop
cmp
cs
testb
dec
adc
cmp
test
sbb
jo
loopne
mov
sub
or
fdivrl
push
ficoms
addps
mov
dec
xorl
dec
dec
rorl
xor
cmp
shlb
or
adc
xor
add
push
and
jp
or
push
push
add
pop
xor
enter
repnz
rclb
sbb
add
mov
cmpb
mov
jb
push
leave
mov
test
pushf
pop
xor
sbbl
mov
enter
inc
enter
xchg
push
test
mov
nop
nop
cs
dec
sahf
mov
mov
addb
inc
push
cmpb
fs
js
and
jo
jo
out
xchg
je
insb
xor
nop
or
insb
push
dec
fs
inc
scas
pusha
pusha
cltd
dec
push
nop
pop
pop
push
in
xchg
and
or
xchg
out
inc
push
in
push
nop
dec
dec
dec
inc
scas
nop
add
push
nop
sub
inc
inc
inc
xchg
and
out
xchg
cmp
xor
push
nop
or
xor
xor
sub
sbb
sub
cltd
dec
push
nop
and
sbb
xchg
xchg
and
and
in
out
pop
sbb
dec
push
nop
adc
adc
nop
add
or
nop
sub
or
or
add
in
add
cld
cld
fs
jb
jns
cld
clc
cld
clc
in
sbb
cld
hlt
cld
hlt
cld
dec
pop
leave
sub
cld
lock
xchg
push
jb
cld
in
cld
in
dec
repnz
cld
call
jns,pn
loopne
loopne
add
or
inc
fcom
add
cmp
enter
sbb
int3
les
les
add
je
mov
stc
push
arpl
mov
pop
jbe
and
mov
add
xchg
mov
cmp
test
dec
sbb
inc
movsb
mov
mov
in
cwtl
cwtl
test
xchg
dec
inc
mov
dec
sahf
xchg
nop
mov
test
cmpb
add
pop
sub
js
mov
add
xorb
adc
mov
dec
push
enter
and
js
arpl
dec
dec
mov
sbb
and
xor
movsb
or
insb
dec
mov
pop
mov
xorb
pop
sbb
test
test
orl
divb
add
shrb
insl
ss
push
bndstx
or
cmp
outsb
cmpsb
or
jns
pop
or
sub
adc
bound
and
pop
or
addr16
mov
jae
and
pop
mov
and
mov
js
es
test
filds
or
fs
pop
cmc
test
add
mov
pop
adc
jo
popa
jns
int
add
or
ljmp
mov
daa
mov
jns
mov
sub
gs
in
mov
dec
je
jne
insb
adcb
dec
repnz
arpl
jo
pushw
fs
dec
add
aaa
sbb
ja
add
add
inc
and
jae
das
push
icebp
add
adc
pop
and
pop
push
je
push
adc
add
cltd
push
inc
mov
jmp
inc
rcr
bsf
adc
icebp
pop
dec
idiv
xchg
push
clc
or
repz
cmp
ja
mov
and
cmpb
inc
ja
je
and
push
cmp
add
loope
sbb
push
cmp
adc
mov
add
ficompl
mov
add
and
sar
enter
pushf
fdivr
pushf
out
nop
adc
pop
adc
push
xchg
jo
adc
loopne
jbe
fwait
xchg
sub
xchg
mov
data16
xchg
decb
cmp
nop
mov
mov
cmp
xchg
mov
enter
xor
cmpb
xchg
out
testb
cmp
cmp
xchg
xchg
mov
or
in
cmp
xchg
xchg
or
in
cmp
dec
pop
cmp
pop
or
push
jae
and
lret
push
dec
and
jb
push
jae
and
inc
js
and
jb
push
inc
jb
jae
inc
cmp
cmp
and
adc
cmp
adc
jae
pushf
xor
out
dec
sahf
add
xor
es
lods
sub
sub
and
dec
inc
es
bound
in
out
and
sbb
dec
inc
es
daa
in
out
call
leave
xchg
cmp
adc
inc
es
sti
or
or
add
dec
inc
es
jb
jns
repz
cld
std
inc
cld
std
call
pushl
mov
push
adc
loopne
mov
pop
cmp
sahf
mov
hlt
pop
pop
push
sub
clc
or
pop
pusha
stos
test
add
and
xchg
insb
cwtl
pop
dec
scas
in
xchg
add
fmuls
mulb
or
imul
aam
and
xchg
and
rcl
pop
mov
sub
push
mov
je
nop
sbb
int3
test
sar
addr16
sbb
je
jb
in
jb
int3
les
add
sbb
xorl
mov
mov
lea
out
movsb
es
mov
jb
sarb
sub
imul
rclb
and
or
and
pcmpgtw
jl
enter
push
dec
dec
dec
push
dec
push
add
fs
outsl
lret
outsb
add
inc
adc
jo
movd
jne
mov
outsb
or
xchg
inc
pop
mov
push
and
insl
imul
dec
push
mov
push
dec
shlb
add
or
mov
test
stos
xor
mov
sbb
and
mov
je
xlat
push
xchg
jo
mov
jns
roll
xchg
lods
xchg
adc
outsl
insb
dec
and
sbb
das
sti
and
leave
adc
push
xchg
add
add
dec
enter
inc
mov
xchg
add
add
test
add
enter
add
add
das
nop
cmpsl
xchg
add
add
add
and
call
mov
add
add
cmp
add
inc
outsl
add
add
adc
inc
xor
in
repnz
and
inc
testl
xor
inc
mov
push
inc
add
add
add
add
and
add
add
add
add
jns
cmp
add
add
jns
add
add
add
add
or
les
inc
fildl
fsubl
inc
lahf
add
add
seto
addr16
mov
add
and
inc
jne
inc
std
jle
fisttps
into
jmp
andl
test
and
nop
cmp
mov
dec
leave
or
sti
or
lcall
or
pmulhuw
push
and
and
or
inc
ds
dec
and
add
cltd
jmp
in
lods
push
or
adc
inc
leave
jno
pop
or
xor
push
insb
or
stc
cltd
inc
sahf
dec
jl
inc
mov
mov
or
or
inc
add
lods
or
or
mov
cltd
inc
sahf
int3
or
xchg
push
jb
jns
or
push
add
in
repnz
sbb
xchg
or
add
inc
fstpl
or
inc
mov
xchg
pushf
inc
add
inc
stc
sub
subl
in
fs
test
or
and
mov
adc
adc
es
and
mov
gs
fcomp
add
addr16
in
in
movb
mov
dec
aam
jne
mov
shl
push
bound
lods
es
test
std
and
enter
lods
sbb
push
je
dec
inc
xor
push
popa
testl
pushf
adcb
mov
mov
jo
mov
adc
lret
es
mov
and
test
test
aaa
push
and
lret
adc
and
repnz
movsb
push
in
sub
inc
cmp
jne
xor
setae
sbb
and
out
pop
add
jne
and
pusha
hlt
and
mov
dec
pop
pop
push
aam
cmpsb
in
in
push
mov
inc
jle
push
inc
pop
and
or
xchg
sbb
pop
add
inc
enter
adc
xchg
sbb
and
adc
sub
sbb
and
pop
loopne
sbb
dec
pop
movsb
push
leave
adc
pop
pop
push
nop
pop
sub
pop
in
xor
xchg
and
or
mov
inc
enter
les
add
cmpsl
xchg
add
pop
les
xchg
in
pop
mov
sbb
inc
pop
and
adc
adc
cmp
jb
cmp
sbb
lock
flds
and
xor
sbb
xchg
mov
in
test
xchg
pop
shlb
pop
fxch
and
stos
enter
gs
flds
shrb
pop
sbb
mov
adc
mov
xchg
rcll
mov
mov
mov
mov
add
xchg
and
jbe
pop
lods
adc
pop
or
movsb
sub
mov
add
dec
ret
sahf
and
call
sub
sbb
in
mov
and
cmp
lods
and
dec
les
rclb
fsubl
inc
repnz
in
and
and
and
and
dec
pop
sub
cmp
leave
sub
and
mov
adc
mov
and
shlb
and
and
sub
enter
and
sbb
in
cmp
sub
pushf
add
sub
sub
cmp
jns
sub
sub
repz
sub
dec
and
enter
and
and
mov
and
enter
and
inc
leave
stos
in
and
add
and
popf
sub
push
aad
lods
mov
mov
mov
mov
adc
test
dec
xchg
sbb
loopne
in
sub
cmpsl
dec
clc
sub
leave
sub
jb
in
sub
sub
sub
and
dec
dec
pusha
sub
leave
sub
sub
in
movsb
sub
inc
int3
sub
sub
sub
or
xchg
mov
xchg
movsb
sub
shlb
add
jo
push
int3
iret
sub
push
das
mov
mov
loope
sarb
cmp
push
cmp
ja
sub
fisttpl
adc
mov
inc
inc
test
fists
mov
inc
mov
mov
add
int3
enter
nop
cmpsl
pop
sub
or
aad
in
decl
fisttpll
push
adc
int3
movsl
addr16
inc
outsb
sbb
mov
xchg
mov
shll
mov
adc
add
leave
test
imul
fsubrl
sub
or
xchg
test
fstpl
les
add
dec
pop
add
sub
inc
test
and
jo
ljmp
lea
add
and
ljmp
mov
pop
iret
add
repnz
orb
jne
dec
xor
sub
inc
cmp
sub
nop
or
inc
test
orb
add
leave
popf
or
and
cld
in
push
mov
cltd
mov
leave
add
adcb
pushf
rdtsc
lock
xor
cwtl
pavgb
pusha
sbb
testl
sbb
inc
mov
hlt
sbb
inc
xchg
icebp
clc
xchg
jne
mov
js
mov
ffree
mov
rcrb
pop
test
aam
add
loopne
rol
jp
lahf
cld
sbb
mov
mov
sar
mov
in
out
hlt
int
jae
out
or
and
push
mov
bound
adc
mov
fisttpl
adc
jp
cmc
sub
fdivl
or
aaa
mov
mov
push
inc
cmp
nop
je
add
pusha
adc
outsb
notb
xor
mov
mov
aam
pop
push
cwtl
cmp
ja
xor
rolb
sar
push
js
inc
jnp
cmpl
je
mov
sbb
mov
in
popa
push
dec
jmp
sbb
sub
call
mov
add
cs
fs
cmpsb
insb
fstps
jno
shll
dec
sbb
mov
cmp
mov
mov
mov
das
movsl
mov
cmp
lods
imull
mov
mov
xchg
sub
cmp
cmp
sbbb
int
xor
and
jnp
xchg
inc
std
push
cmp
addl
jle
adc
fisttpl
cmpb
add
fmuls
add
hlt
movb
js
inc
jp
mov
add
xchg
xor
cmp
or
add
cmp
lock
sbb
xor
in
popa
mov
xor
dec
and
jae
xchg
sub
inc
daa
nop
pop
add
and
fsubs
add
fsubrs
add
adc
sbb
sub
inc
mov
or
sbb
and
cmc
aam
or
push
lds
pop
imul
xor
push
pushf
sub
pusha
addr16
cmp
es
pusha
icebp
test
stc
sub
mov
cld
movsb
shlb
mov
add
pop
sub
subl
insb
out
cwtl
dec
adc
push
pop
and
xlat
aam
xchg
movsl
and
test
mov
sub
cwtl
test
inc
cmpsb
insb
iret
loopne
push
pushf
cmp
fdivl
inc
push
nop
inc
es
inc
inc
int3
int3
or
inc
mov
rorb
pusha
pusha
mov
cld
int3
mov
adc
lahf
cmp
xchg
pop
repnz
cmp
xchg
in
sbb
nop
adcl
pusha
mov
sub
lahf
sub
sbb
lahf
jo
sub
xchg
test
cmp
jo
inc
lahf
and
sbb
pop
loopne
fdivrl
je
cmpl
nop
mov
pushf
js
bswap
ds
sbb
and
into
and
push
inc
xor
int
es
xor
mov
add
aam
add
sbb
and
paddsw
jnp
test
call
sub
sub
repnz
pop
jo
adc
push
sub
push
ficoml
test
notl
lock
pushf
popw
rcrb
sti
jne
mov
push
adc
test
adc
xchg
fs
lods
or
ja
sub
popf
push
adc
adc
fadds
and
divb
sub
pop
pop
mov
push
adc
and
cwtl
inc
push
arpl
insb
or
sbb
jl
xchg
loopne
shrb
fs
xchg
in
mov
daa
int3
adc
inc
add
cld
adc
adc
imul
and
clc
mov
ja
mov
mov
pop
adc
sbb
or
notb
push
and
mov
hlt
pop
inc
clc
pop
xchg
dec
je
cmp
subb
add
les
lock
xchg
cmpsb
push
frstor
adc
lea
push
and
lea
or
pop
ret
mov
dec
cmp
fwait
scas
stos
into
mov
aam
and
mov
sarb
in
sbb
and
leave
enter
and
or
ret
or
sbb
cld
fdivr
mov
sbb
rcl
jb
daa
xchg
aam
enter
xor
int3
jl
xlat
push
sbb
jne
sahf
push
lock
lock
or
add
or
mov
add
shlb
mov
cltd
es
mov
mov
cltd
mov
mov
inc
lods
mov
inc
es
xchg
add
mov
and
leave
pushf
pushf
nop
nop
push
enter
xchg
mov
adc
and
mov
push
sahf
mov
je
push
push
pmulhuw
push
adc
push
add
xchg
test
test
cmp
or
test
es
add
out
xchg
jl
jo
push
add
xor
jo
add
nop
dec
je
es
pusha
insb
es
push
and
add
in
testb
les
aaa
and
loope
mov
xchg
xchg
xor
pop
mov
pop
pusha
pusha
mov
mov
pusha
push
pop
loope
or
pop
pop
enter
ds
pop
in
pushf
xchg
push
mov
cwtl
push
inc
mov
push
in
mov
loopne
inc
es
dec
dec
fs
xchg
xchg
dec
inc
loopne
in
mov
xchg
or
cmp
fs
dec
push
fdivl
and
iret
cmp
sub
jb
enter
xor
or
nop
pop
fsubl
inc
sbb
pushf
je
leave
test
and
and
leave
xchg
sbb
fcomps
daa
xchg
mov
sbb
leave
enter
adc
leave
push
jb
or
sbb
adc
test
dec
sahf
or
std
aam
xchg
dec
sahf
std
add
clc
std
cltd
sub
clc
std
aam
add
std
leave
or
nop
hlt
std
in
std
ret
add
pusha
inc
sbb
enter
push
and
call
or
std
nop
pop
and
loopne
fdivr
nop
dec
test
fxch
rcll
add
mov
push
push
loopne
mov
std
enter
imul
aam
sbbb
pushf
pop
xor
int3
stos
rcl
les
add
inc
pop
mov
mov
int
and
mov
sbb
mov
enter
mov
or
enter
xchg
sbb
or
in
and
add
or
in
mov
mov
cltd
nop
pushf
pushf
cwtl
enter
cwtl
add
mov
pop
mov
and
cmp
push
or
push
jne
push
bound
in
mov
and
dec
es
nop
sbb
mov
dec
addb
test
jl
push
enter
dec
pop
test
sbb
sbb
sbb
in
ss
push
fs
insb
fs
xchg
fs
test
stos
fs
testl
push
or
and
xor
adc
test
dec
xor
and
add
adc
and
inc
pusha
push
jo
sbb
dec
call
and
and
xchg
xor
sbb
xor
cmp
fs
inc
dec
sub
and
cmp
mov
std
mov
std
and
jb
fadds
and
sbb
in
add
mov
std
xor
cmc
aam
pop
mov
cmp
mov
cwtl
nop
and
xchg
adc
push
pop
or
imul
stos
pop
adc
loop
jb
arpl
jb
push
sar
inc
fs
or
add
cmp
adc
imul
movsb
inc
js
pusha
add
push
int
roll
scas
add
div
add
cmpb
mov
fs
xchg
push
gs
jb
mov
or
adcb
push
hlt
push
inc
dec
daa
mov
notl
or
andl
push
fistpl
pop
and
fstpl
pop
sbb
shll
pop
adc
mov
inc
stos
and
insb
sbb
push
inc
adc
dec
popa
js
cmp
mov
insl
mov
xor
insb
mov
push
push
into
imul
fcom
mov
mov
sti
cwtl
adc
arpl
xor
and
and
push
out
shll
pop
push
xor
pop
insb
fsubrs
jnp
outsl
sti
jmp
jle
adc
pop
push
push
pop
or
add
clc
add
jne
add
xchg
mov
dec
inc
add
adc
sbb
inc
je
imul
cmovo
push
pop
inc
push
movsl
mov
cmp
inc
push
repnz
and
push
mov
sub
add
inc
push
add
sub
inc
shlb
xor
gs
inc
and
dec
adc
add
sub
in
pop
psubusb
and
aad
add
inc
mov
test
frstor
xchg
add
psrad
adc
dec
xor
mov
rsqrtps
lea
mov
pop
inc
shr
ss
inc
incb
inc
hlt
inc
xor
sbb
and
adc
jmp
daa
inc
dec
inc
jae
insl
push
cmp
push
dec
dec
xor
inc
or
inc
add
and
jb
pop
inc
sbb
pop
inc
add
xchg
adc
and
jg
adc
and
addr16
xchg
pop
pop
mov
inc
imul
xchg
xlat
push
pop
xor
lret
mov
push
adc
ja
arpl
add
push
pop
fsubrl
mov
adc
roll
push
add
inc
setne
test
jecxz
sti
xchg
mov
in
pop
mov
flds
int3
fidivs
pop
mov
jnp
dec
push
cmp
loop
ret
mov
or
out
popf
adc
cmp
dec
jne
sbb
in
xchg
pop
inc
fldcw
in
cmp
arpl
push
clc
push
insb
insl
outsb
xor
jae
jbe
adc
lods
push
aas
sbb
test
mov
inc
test
pop
and
nop
xchg
cmpl
cmpsl
dec
sahf
test
pop
inc
and
xchg
nop
inc
add
sub
and
test
ret
add
add
and
adc
sub
xchg
pop
and
dec
and
in
pop
inc
rcl
xchg
cmp
xchg
fildll
pop
aad
js
cmpsb
jl
xchg
movl
mov
das
pop
mov
push
pusha
punpcklbw
jmp
je
dec
je
add
aaa
inc
in
and
pusha
inc
jmp
cltd
fs
adc
push
xor
adc
or
test
sbb
aad
lods
fisttpll
cwtl
pushf
lods
add
fs
push
jle
js
xor
sbbb
inc
add
dec
inc
inc
dec
dec
dec
inc
pop
add
test
das
inc
push
push
push
inc
dec
push
pop
push
movsb
push
pop
pop
int3
and
pop
dec
inc
push
push
inc
push
pop
push
dec
dec
push
push
and
xchg
sti
daa
push
adc
mov
gs
iret
mov
xchg
cmp
fcmovnb
enter
adc
mov
call
inc
sti
add
pop
sbb
mov
xlat
iret
mov
loop
fildl
push
cmpsl
daa
les
lods
call
enter
es
fs
in
rolb
es
mov
fwait
in
inc
mov
push
lret
push
mov
and
and
add
mov
shlb
iret
sub
push
adc
std
sbb
mov
out
pop
xor
jo
sbb
testb
xor
arpl
mov
dec
and
sub
and
xchg
mov
push
xor
je
xchg
adc
xor
cltd
pop
push
mov
out
arpl
mov
and
or
pop
jl
dec
and
ret
loopne
cmp
popf
mov
call
or
xlat
dec
mov
test
lds
xor
or
or
xchg
add
or
bound
test
fnstenv
loopne
xlat
sub
dec
push
outsb
push
add
push
and
les
or
hlt
mov
call
mov
rol
dec
addl
enter
in
sub
fs
add
and
sub
and
push
cmpb
cmovs
imul
punpckhbw
add
fists
lahf
in
xor
push
lods
in
and
add
insb
jns
lahf
lock
aad
ret
pop
rcrl
mov
dec
and
sbb
mov
aam
mov
clc
and
pop
or
lds
int3
pusha
sbb
nop
xchg
hlt
add
pop
or
int3
dec
sbb
test
dec
sbb
mov
mov
xchg
pop
enter
hlt
enter
clc
mov
mov
mov
les
mov
xor
pop
mov
addb
nop
mov
in
add
je
adc
nop
mov
aad
cs
outsb
inc
mov
push
push
test
push
sub
mov
and
lods
pop
mov
add
subl
sbb
movsb
pop
int3
push
and
or
out
or
push
push
inc
clc
nop
or
in
hlt
push
adc
lock
fs
loopne
fs
mov
fmuls
in
in
adc
inc
inc
inc
mov
ss
mov
cmc
loope
lret
pop
mov
adc
cmp
sbb
cwtl
sub
cwtl
cmp
or
sub
xchg
xchg
dec
dec
and
nop
nop
sbb
or
and
or
insl
loope
xchg
lahf
jnp
push
mov
mov
clc
xor
call
fs
je
clc
add
insb
inc
subb
xor
push
mov
popa
push
pop
xor
xor
pop
loopne
add
mov
sub
inc
js
add
int
cmp
sbb
inc
mov
xor
aaa
nop
xor
insb
sbb
push
or
sbb
bound
xchg
cmc
push
xchg
sbb
fs
mov
sub
cmc
and
pop
xor
and
aas
pop
ss
mov
fsts
pop
ss
ds
push
std
push
insb
dec
push
jno
push
push
std
sbb
dec
dec
std
in
or
dec
sbb
inc
xor
inc
inc
std
in
dec
sbb
ds
lods
pushf
sub
cmovne
in
cmp
cmp
leave
and
cmp
add
add
cmp
or
add
xor
or
xor
add
sub
sub
add
ss
sbb
mov
mov
and
sbb
and
inc
sarb
xchg
sbb
cmpsl
push
add
nopl
mov
xor
clc
das
pusha
and
fsts
add
adc
adc
sbb
or
test
and
sbb
sub
inc
jb
or
add
nop
shlb
cs
and
push
das
and
outsl
pop
dec
mov
mov
xchg
mov
notb
pmaddwd
mov
add
cs
adc
dec
push
inc
mov
decb
mov
std
call
dec
xor
and
pop
enter
loopne
leave
adc
loopne
fmull
cmpsb
nop
pop
add
fdivr
fadds
fmuls
and
aam
cs
sub
xchg
lret
cs
sar
int3
sub
arpl
int3
std
jg
push
mov
and
add
jns
pop
dec
mov
mov
mov
fs
push
test
or
ja
sbb
fs
mov
dec
sbb
jo
sbb
cmp
in
cs
pop
jbe
push
addb
sbb
flds
std
movsb
sub
inc
jb
movsb
std
mov
pop
mov
and
pushf
jb
sbbb
cwtl
adc
pusha
inc
cwtl
std
fsubs
jb
xchg
ds
xchg
std
fcoms
nop
nop
std
ss
pop
mov
mov
pop
adc
cmp
xchg
or
fiadds
xchg
add
repnz
loopne
adc
and
fdivl
and
jb
adc
and
fsubr
or
xchg
add
push
aaa
hlt
xchg
movsl
or
mov
mov
adc
push
sub
or
enter
hlt
mov
dec
test
inc
inc
sub
mov
dec
mov
dec
cs
dec
jl
adc
orl
inc
mov
mov
sub
je
xchg
pushf
and
mov
fs
mov
sbb
push
add
cld
lcall
gs
scas
scas
sub
or
push
jb
jae
pusha
pusha
shlb
gs
pop
sub
add
mov
sbb
mov
xchg
or
xor
stos
adc
and
test
stos
push
loopne
in
push
xor
xchg
stos
dec
ss
cs
dec
sub
ret
dec
test
js
mov
dec
enter
inc
inc
pop
bnd
or
cmp
in
or
and
add
and
in
and
xor
dec
cs
xor
mov
popa
xor
sub
sub
sub
sub
sub
add
fimuls
stos
sub
or
gs
and
and
xchg
or
and
ss
cmc
sbb
flds
cmc
sbb
dec
popa
inc
jb
sbb
adc
test
xchg
adc
adc
shlb
xor
push
jb
or
or
jbe
inc
or
or
or
std
add
add
adc
and
std
add
stos
add
loopne
cmp
std
xor
xchg
sbb
std
clc
ds
pop
inc
mov
les
leave
gs
jbe
f2xm1
sub
mov
xchg
addr16
and
fldlg2
std
inc
loopne
cmp
sbb
adc
call
sbb
loopne,pn
sub
xchg
ss
push
sub
xchg
dec
fsubrl
fcompl
and
dec
push
fsubrs
fdivrs
adcl
std
gs
or
std
rcrb
push
or
dec
cs
int3
xor
and
enter
mov
les
les
sbb
sub
jmp
cmp
xorl
enter
xor
or
cs
pop
fcoms
mov
ss
sub
or
lods
cmc
add
cs
sub
test
movsb
xor
test
mov
mov
sbb
std
ret
mov
sub
sub
jo
adc
xchg
std
nop
xor
and
nop
mov
pop
fcoms
mov
ss
sub
or
sub
flds
enter
std
jl
jl
dec
cmp
xor
pop
psubusw
test
mov
inc
sbb
sbb
mov
vmwrite
or
gs
enter
fs
psubusw
and
or
std
or
sub
jb
test
pop
sub
icebp
xchg
dec
popa
std
push
or
inc
push
sbb
push
std
push
xor
push
psubusw
mov
dec
pop
mov
data16
pop
push
mov
sbb
pop
dec
cs
psubusw
fimuls
add
mov
pusha
nop
sub
in
pop
xchg
nop
and
and
fwait
insl
clc
addr16
jb
push
daa
dec
bound
xchg
in
push
sbb
cmp
and
mov
mov
inc
xchg
pop
push
xchg
xchg
js,pn
cmp
dec
pop
push
or
sub
cmova
outsb
pusha
sub
or
and
repnz
mov
mov
pop
outsw
jo
shrl
xchg
js
mov
lea
cltd
adc
je
negb
mov
xor
mov
dec
movsb
or
ret
icebp
lcall
imul
mov
pop
test
fs
subb
mov
xchg
xor
inc
push
leave
and
and
add
jb
ss
cmp
and
das
and
int3
and
sbb
cmc
gs
test
jg
xchg
adc
pushf
sbb
nop
adc
or
in
xor
mov
adc
or
add
add
nop
sbb
or
test
or
dec
add
cmp
cmp
hlt
clc
cld
xchg
clc
cld
or
inc
mov
test
invd
xchg
sarl
inc
in
cld
or
jge
jne
sbb
popf
in
pop
dec
mov
shufps
jbe
test
or
pop
fwait
loopne
cmp
lret
pop
sub
fadds
in
pop
xchg
dec
mov
into
sti
mov
aam
fsubs
rcl
adc
adc
inc
es
loopne
push
jb
daa
or
pop
inc
lds
nop
push
outsb
xlat
fcompl
mov
push
inc
test
push
mov
mov
in
sub
aam
push
nop
dec
xchg
test
push
cld
add
movsb
sbb
cld
push
movsl
fadds
movsl
push
movsl
mov
enter
sub
xchg
rdpmc
leave
loopne
int3
push
jb
jbe
pusha
cmpsb
movsb
cmpsb
enter
test
sbb
adc
mov
xor
mov
xchg
test
push
jb
cs
sub
mov
or
push
mov
add
xchg
daa
in
adc
mov
add
add
or
enter
inc
stos
push
fs
dec
mov
add
ret
cld
nop
addr16
mov
jno
repz
enter
push
les
lea
inc
mov
push
push
mov
mov
jbe
les
cmp
mov
xor
mov
movsb
nop
and
dec
cmp
sub
xchg
add
jae
das
dec
xor
stos
pop
stos
insb
sbb
cmp
je
jl
add
fsubrs
push
sbb
or
mov
ror
mov
jmp
or
push
or
cmp
lods
pop
sbb
push
jl
cld
stos
push
scas
cld
je
mov
mov
and
ja
and
pushf
and
fs
cwtl
cwtl
fldenv
xchg
xchg
pop
jb
jae
xchg
xchg
nop
and
and
jae
mov
sbb
mov
or
sahf
dec
mov
imul
andb
repnz
cmpb
fadds
js
sub
daa
and
sti
push
jbe
lahf
sub
dec
cs
sub
sub
inc
jo
mov
or
xchg
insb
push
in
cs
sub
scas
in
out
mov
mov
pop
cs
cs
pop
in
in
push
push
clc
in
sub
in
xchg
dec
dec
mov
mov
dec
dec
dec
scas
insb
enter
inc
movsb
sub
mov
mov
xchg
dec
repnz
inc
jb
jae
cmp
cmp
inc
jbe
push
cmp
pop
jb
sub
push
push
mov
lahf
sub
dec
mov
sbb
repnz
lahf
xor
xor
dec
mov
dec
dec
cld
cld
xchg
add
test
adc
fldenv
and
cwtl
and
pop
jbe
sub
pop
jb
add
and
cs
jb
inc
sbb
sbb
sbbb
adc
sbb
nop
pop
adc
pop
adc
xchg
cmp
adc
ss
or
pop
nop
jo
inc
or
or
gs
or
cs
leave
xchg
or
mov
fcoms
sti
cs
push
jb
sti
cvtps2pd
outsl
and
nop
pop
jbe
pop
hlt
cs
cmp
sbb
hlt
pop
lock
or
cs
mov
and
pop
call
inc
into
call
xchg
lret
push
in
in
pop
xchg
out
and
loopne
in
add
loopne
fdivrl
pop
fcomp
insb
add
cmpb
aam
jle
cmp
lahf
sar
shrb
test
cmp
int3
inc
jns,pn
int3
mov
cmp
enter
sbbb
xchg
pushf
sti
sti
call
enter
cmp
mov
inc
sbb
rorl
cmp
or
pusha
testb
lahf
xchg
push
movsb
orb
arpl
xor
and
dec
or
and
add
inc
mov
push
inc
cli
adc
or
push
movsl
stc
push
aaa
add
add
daa
add
xor
sbb
xor
xor
mov
xor
test
mov
xor
xor
enterw
cmp
push
add
je
bnd
fdivrl
arpl
or
pop
fs
jns
push
inc
outsl
or
mov
or
dec
das
shlb
lret
mov
adc
xchg
addr16
inc
mov
add
add
push
rcll
lcall
orl
pop
dec
and
add
adc
or
cmp
cmp
addb
je
cmp
inc
xor
push
negb
arpl
daa
push
inc
notb
daa
mov
inc
neg
enter
sub
mov
inc
sub
add
sbb
or
and
push
subl
add
cmp
sub
add
xchg
add
out
adc
das
and
inc
shll
add
dec
mov
add
loope
sbb
push
nop
test
push
in
test
aad
jo
cmp
aas
or
and
es
adc
movsl
iret
jbe
sub
cmp
in
test
and
in
in
adc
enter
cmpsl
sbb
cltd
nop
out
call
add
loopne
fcomps
push
inc
push
fsubs
xchg
adc
pop
pop
add
sub
adc
and
cmp
mov
xchg
sub
push
adc
nop
mov
mov
cmp
daa
add
clc
mov
add
or
es
in
je
test
lods
rcl
sbb
xchg
dec
cld
adc
xchg
inc
pop
jo
add
leave
dec
add
cmpsb
hlt
pop
xor
and
or
dec
add
dec
xorb
in
test
call
fs
in
in
add
insb
shrb
loopne
inc
cs
insl
mov
mov
sbb
fsubrs
and
inc
or
add
insl
add
mov
stos
add
fwait
xor
push
push
push
pop
or
xor
push
mov
pop
adc
and
inc
and
lahf
cmpb
pop
push
inc
test
jl
mov
cltd
in
daa
in
sbb
rol
sub
mov
xchg
dec
les
xchg
sbb
mov
lods
xchg
dec
es
test
mov
cltd
test
lds
push
mov
xchg
subl
pop
or
pop
outsb
fcmovnu
mov
sbb
push
inc
add
mov
and
cld
dec
mov
popf
fldt
hlt
push
pop
add
dec
imul
or
je
mov
dec
aam
pop
sub
dec
scas
in
pushfw
insb
add
fdivl
les
js
dec
shlb
cmpsb
xor
mov
xor
push
je
cmp
pop
pop
imul
jne
add
movb
or
enter
pusha
mov
mov
shl
and
pop
add
sub
rol
shll
xor
cltd
add
mov
out
mov
ret
adc
inc
mull
adc
in
insb
mov
bound
das
fstl
xor
add
ficomps
and
push
cmp
addb
movsb
push
push
fldt
sti
jnp
pop
mov
and
aam
hlt
aam
insl
adc
nop
ss
add
mov
rcrb
mov
and
and
test
sub
int3
int3
add
mov
sbb
stc
and
push
rolb
and
nop
sub
mov
xchg
inc
fisubs
mov
shll
pop
mov
mov
cmp
mov
jns
and
or
mov
movsb
sbb
or
insb
shlb
adc
cwtl
jbe
xchg
cmp
sbbb
fwait
insl
xchg
lods
inc
mov
pop
or
inc
into
adc
pop
push
in
lcall
pop
push
in
pushf
pushf
mov
mov
pop
and
xchg
mov
in
pop
stc
xor
jo
xchg
or
lods
pop
adc
push
pop
call
push
fstps
mov
add
mov
push
test
nop
or
jge
sub
addb
adc
ss
repnz
jns
inc
arpl
sbb
lods
in
js,pn
cmpb
xor
adc
mov
mov
andnps
in
push
or
insb
and
add
insb
ss
nop
in
dec
pop
ds
jmp
pusha
pushl
and
pop
pop
mov
cltd
in
les
jno
xchg
out
dec
push
push
je
addb
push
je
push
arpl
dec
popa
dec
jae
xor
cwtl
or
in
push
sub
imul
and
inc
clc
push
ss
push
dec
cmp
xchg
dec
movsl
cmp
push
add
std
mov
sub
xor
jno
inc
xor
mov
cmc
setle
cmp
mov
xor
lcall
or
or
and
and
ud2
adcl
andl
add
add
sub
sub
inc
shr
pop
mov
nop
popa
and
sbb
test
out
lret
jp
dec
add
add
shlb
adc
mov
xor
pop
or
xchg
repnz
adc
add
test
add
cmp
nop
pop
xor
add
mov
fwait
pushf
mov
add
add
xor
and
dec
sub
xor
cmp
pop
adc
nop
adc
test
rcll
pop
sbb
add
sbb
pop
jg
sub
push
in
ss
mov
xchg
adc
inc
push
add
sbb
mov
inc
fsubs
or
adc
pop
aaa
xchg
fldt
add
and
je
push
daa
lret
int3
enter
dec
xlat
iret
enter
fcomp
fxch
loopne
jecxz
in
das
add
int3
jl
xlat
add
add
jb
add
addr16
lods
and
and
popa
je
xor
inc
je
pop
xor
aam
and
inc
inc
inc
sub
inc
ljmp
push
imul
jne
dec
shrl
sbb
and
inc
dec
shll
test
lods
mov
outsb
shll
cld
or
dec
add
shll
push
dec
jl
pushf
test
shlb
shll
fsubr
hlt
add
imul
imul
imul
mov
hlt
add
adc
xor
xor
roll
jo
dec
shll
enter
shll
in
clc
or
adc
dec
roll
and
dec
jns
lcall
add
mov
lods
mov
jmp
jp
add
lcall
pop
push
imul
rcl
hlt
add
dec
shll
inc
push
xor
shll
push
xor
rcrl
pop
ss
fdiv
add
lcall
pop
push
imul
mov
dec
shrl
cld
or
and
inc
xor
shll
pop
insb
je
shll
pushf
lods
dec
shll
in
xor
jmp
jle
sub
shll
je
dec
shll
enter
shll
call
shll
xor
push
dec
shll
mov
movsb
mov
aam
jg
lcall
addb
shll
push
sbbb
imul
cmpsb
imul
ror
sahf
cmpsb
imul
orl
sub
inc
push
xor
shll
push
xor
rcrl
popf
imul
sbb
cmp
xor
rcrl
orb
mov
enter
shll
in
clc
add
adc
cmpsb
imul
imul
jmp
lods
mov
shll
addl
into
incl
and
xor
inc
inc
shll
pop
fs
je
shll
mov
xor
shll
rcr
in
imul
cmpsb
imul
imul
out
insl
lods
test
shll
or
adc
xor
imul
imul
imul
fwait
cmpsb
jmp
xor
scas
dec
shll
pop
dec
add
jo
rcrl
mov
dec
rcrl
enter
sahf
lock
clc
xchg
cmpsb
jae
add
and
ret
outsl
cmpsb
imul
lcall
mov
imul
mov
mov
imul
nop
cmpsb
imul
cmpsb
imul
cmpsb
imul
mov
ss
mov
adc
sub
and
mov
inc
add
decl
add
mov
xchg
mov
mov
enter
cmpsb
imul
xor
shll
inc
dec
pop
dec
shll
nop
pushf
xor
shll
mov
rcr
imul
cmpsb
imul
pop
dec
sahf
cmpsb
imul
popf
jmp
mov
dec
aam
hlt
mov
or
lcall
cmp
lcall
mov
mov
cmpsb
imul
lcall
xor
imul
fstp
test
mov
mov
enter
lcall
mov
mov
add
sub
dec
shll
jo
xor
shll
xchg
mov
dec
rol
rcr
in
jmp
lcall
lret
sbb
and
xor
jmp
xor
xor
add
fs
mov
mov
xor
call
xor
xchg
pop
sub
mov
dec
roll
dec
pop
push
negl
cwtl
add
out
xor
rorb
aaa
call
imul
sub
inc
dec
pop
fs
xchg
mov
imul
clc
add
adc
dec
shll
fs
dec
shll
mov
sarl
xchg
xchg
dec
addr16
sub
dec
shll
inc
push
pop
push
jo
test
insb
lods
xchg
inc
mov
loopne
sub
cmpsb
in
clc
add
or
dec
shll
pop
fs
shll
jl
nop
pushf
imul
xchg
popf
imul
dec
shll
sub
inc
push
shll
orb
test
rcl
pop
shll
in
clc
push
xchg
add
xor
push
lcall
jl
xchg
imul
dec
shll
xchg
cwtl
add
and
inc
dec
lcall
orb
test
ror
imul
shll
inc
dec
xor
shll
fs
mov
xor
rcll
shll
cld
push
or
rcrl
push
lcall
dec
pop
fs
lcall
pop
addb
mov
dec
rol
int3
fsub
lock
imul
cmpsb
imul
cmpsb
imul
mov
int3
xor
lcall
pop
imul
cmpsb
imul
imul
mov
dec
clc
add
add
cmpsb
imul
imul
cmpsb
imul
cld
popf
push
sahf
add
cmpsb
imul
cmpsb
imul
imul
imul
dec
shll
xor
inc
push
shll
je
dec
shll
mov
ss
shll
aam
in
clc
lahf
shll
sbb
dec
shll
fs
dec
shll
nop
pushf
test
shll
in
cmpsb
imul
mov
lcall
jo
xor
xlat
pusha
or
test
pushf
test
ror
xchg
dec
shll
lock
or
imul
imul
imul
cmpsb
imul
mov
or
and
inc
dec
shll
js
xor
shll
pushf
test
shll
in
clc
or
gs
adc
lds
sahf
inc
lods
test
or
add
imul
stos
je
mov
shlb
addb
fs
cld
or
and
inc
add
mov
adc
inc
inc
mov
lret
adc
fs
add
adc
add
dec
inc
add
inc
add
inc
or
repz
push
add
add
add
add
push
sbb
andb
movsb
sbb
xor
inc
inc
scas
sbb
inc
pop
cmp
inc
lcall
mov
jmp
add
lahf
inc
pop
xlat
sbb
or
push
pop
or
scas
inc
xchg
sub
dec
or
dec
adc
dec
pop
pop
dec
pop
push
xor
push
test
add
xchg
jl
je
mov
jne
pushl
add
adc
push
pop
mov
int
mov
orl
icebp
aas
insl
jne
je
bound
in
and
imul
pop
lock
pop
xor
or
pop
repnz
push
inc
xor
add
pop
inc
sub
add
mov
add
adc
adc
or
aaa
add
or
push
add
xchg
in
pop
xor
or
sbbb
mov
mov
int3
dec
nop
dec
pop
pop
mov
dec
inc
inc
shlb
sbb
fistl
inc
inc
push
inc
sti
fstpl
pop
mov
push
push
dec
push
imul
je
shlb
in
xchg
outsb
jo
push
inc
cmpsl
fs
out
pop
ja
inc
push
cs
mov
clc
jb
insb
outsl
arpl
nop
dec
inc
daa
xchg
lock
jae
es
imul
insb
gs
adc
daa
push
popa
mov
movsl
or
daa
jo
push
sbb
call
nop
inc
fdivr
fsubs
push
aam
int3
and
pop
sbb
or
or
cmp
enter
rclb
jmp
cs
dec
sahf
sbb
jo
jo
jo
or
and
aaa
gs
cmpsb
incl
inc
gs
lahf
push
xchg
jl
jmp
gs
sub
adc
or
add
cli
stc
push
leave
cmpsl
lock
decl
decl
enter
std
ljmp
or
push
xchg
adc
jno
std
jmp
cld
ljmp
xchg
mov
add
sahf
and
aaa
gs
jl
daa
aas
push
cld
jmp
adc
push
adcb
pushf
xchg
es
jmp
add
or
sahf
cmp
inc
gs
aas
add
incl
sti
and
xchg
ljmp
decl
sti
cmp
jmp
dec
leave
lar
cli
ds
jg
lcall
adc
stc
xchg
aaa
sub
pushl
decl
cld
incl
enter
mov
add
pop
xchg
in
pop
push
leave
scas
mov
outsb
sti
lcall
add
cwtl
aaa
xchg
pop
xchg
add
mov
inc
adc
add
mov
inc
clc
or
cmp
data16
enter
aaa
pop
idiv
jmp
inc
add
inc
gs
xor
out
inc
gs
ret
cmpsl
xchg
andb
arpl
adc
enter
inc
gs
lret
jb
sbb
cmp
iret
imul
movsl
les
and
dec
repnz
inc
sbb
push
notl
or
mov
or
add
mulb
aaa
and
stc
sbb
sub
add
cmp
aaa
inc
inc
pushf
inc
pop
and
das
xchg
push
andb
inc
jl
in
gs
fiaddl
add
inc
add
gs
inc
mov
aaa
in
enter
jmp
nop
push
leave
mov
gs
nop
dec
test
xor
std
decl
add
or
lcall
and
nop
decl
sti
cmp
daa
lahf
dec
jnp
cld
hlt
call
inc
inc
stc
inc
leave
cmpsl
mov
add
cwtl
ljmp
xchg
xchg
sbb
inc
inc
push
repnz
inc
inc
gs
inc
ss
dec
inc
inc
or
inc
ret
jl
inc
mov
dec
cmp
xchg
push
aaa
or
jle
cld
insb
std
call
push
and
enter
inc
hlt
idiv
jmp
xchg
pop
push
ljmp
xor
or
adc
andl
nop
lret
inc
gs
pop
jmp
lahf
in
in
pushl
inc
push
inc
inc
gs
enter
inc
jmp
dec
xchg
jl
cld
ljmp
pusha
adc
aaa
gs
xor
and
pushl
and
and
shrb
lret
aaa
nop
add
inc
inc
inc
sbb
add
mov
scas
or
inc
outsb
adc
inc
inc
inc
fiaddl
xor
adc
pop
and
cld
mov
ljmp
dec
leave
shll
shrb
int3
xor
aaa
sahf
cld
fnstcw
cmc
jmp
and
loope
xchg
mov
and
add
jg
aaa
jb
enter
and
add
gs
and
xchg
adc
gs
loope
xchg
push
ret
mov
jmp
in
inc
inc
inc
jo
enter
cmp
inc
jo
or
aaa
jb
in
gs
gs
scas
imul
incl
mov
and
dec
push
or
lret
in
sbb
aaa
or
stc
push
mov
and
enter
outsl
ss
mov
inc
pop
add
add
xchg
pop
and
inc
add
jae
or
or
jb
fs
inc
inc
mov
xchg
cmp
pop
sbb
popf
add
mov
gs
mov
les
stc
add
aas
idiv
jl
jle
add
cld
dec
adcl
popf
in
lcall
xor
xchg
stos
repnz
incl
aas
xchg
sti
cmpsl
in
jno
int
daa
dec
jmp
mov
adc
push
inc
mov
add
and
inc
pusha
add
add
adc
dec
push
or
pusha
inc
pusha
inc
pop
in
stc
fists
add
xor
lods
jmp
js
and
mov
add
movsb
dec
sub
push
jae
jmp
and
fsubl
pop
adc
mov
mov
inc
fs
clc
jo
and
jmp
incl
jns
pop
or
inc
les
adc
enter
sub
sub
in
movsb
adc
in
adcb
and
push
inc
in
stc
orb
adc
push
and
cmpsl
pusha
inc
adc
pusha
inc
leave
xchg
pushf
inc
pusha
inc
adc
inc
sahf
add
fdivr
call
push
inc
stc
nop
adc
iret
jmp
adc
inc
repnz
sub
adc
pusha
in
or
jmp
shrb
sub
adc
in
orb
dec
and
and
push
inc
and
call
sub
in
repnz
inc
sub
add
sub
scas
mov
jmp
dec
sbb
orl
push
sub
cmp
inc
cmpsl
daa
gs
outsb
sub
and
or
call
je
mov
enter
mov
std
ljmp
nop
pop
inc
pusha
stc
call
push
daa
xchg
jl
inc
pop
loope
incl
or
push
pusha
add
pusha
inc
mov
cld
jmp
cli
add
add
dec
dec
and
repnz
inc
inc
out
outsb
sub
aad
push
call
and
int
std
mov
inc
inc
xor
cmp
mov
or
roll
les
negl
popl
mov
jl
cmp
sub
les
shl
leave
jno
andb
sub
or
sub
or
test
call
inc
mov
fisttpl
cwtl
insl
adc
cmp
jge
adc
mov
add
or
adc
int
aad
or
jl
sbb
mov
add
cmp
fstpl
dec
jne
jae
int3
lahf
add
xchg
adc
xchg
inc
push
inc
push
inc
cmpl
inc
data16
scas
xchg
inc
pusha
inc
bound
insb
mov
inc
bound
inc
push
jmp
or
inc
push
fidivrs
sub
sbb
push
or
adc
push
inc
loopne
data16
dec
or
or
and
add
inc
adc
sbb
push
inc
scas
push
call
jo
adc
push
repnz
dec
push
inc
loop
call
fstl
add
push
adc
pop
stc
fwait
jmp
or
fcomi
and
adc
ljmp
push
mov
adc
jmp
adc
hlt
call
decl
enter
add
mov
and
push
hlt
mov
repz
inc
jmp
sti
rolb
hlt
push
call
add
inc
xor
movsb
decl
adc
xorb
inc
adc
push
inc
movsb
dec
adc
add
jmp
test
and
mov
sub
addl
or
inc
pop
enter
push
inc
pop
ss
incl
fs
inc
sbb
push
enter
sbb
inc
ret
incl
adc
enter
mov
mov
repnz
pushl
call
ss
insb
cmpsb
imul
push
out
das
lods
shll
aaa
gs
mov
in
aaa
test
xorb
shlb
call
rcr
sub
aas
dec
repnz
shll
or
pusha
inc
add
int
xchg
or
adc
ss
xlat
or
pop
mov
add
or
repz
cmp
push
shll
bound
aam
sti
jbe
cmp
mov
push
add
enter
sarl
inc
mov
sbb
xchg
cmp
psubsb
sbb
mov
and
pop
push
sbb
sbb
adc
push
adc
jmp
repnz
incl
stc
inc
pop
add
cli
ljmp
lds
inc
aam
cmp
aaa
pop
pop
call
call
call
pop
sub
pop
sub
push
insb
sbb
push
and
push
mov
daa
sbb
sub
sahf
jnp
push
sbb
mov
dec
add
pop
and
mov
daa
pop
sub
adc
add
out
sti
test
or
sub
add
add
call
nop
add
in
inc
addr16
shrl
xor
stc
xor
icebp
inc
lret
shll
loope
pop
and
ja
add
ret
push
add
fadd
aaa
cmc
pusha
and
xor
sub
mov
push
jecxz
pop
pop
pop
nop
inc
push
sbb
inc
push
sbb
inc
push
sbb
cmp
pop
lock
inc
push
jns
jb
ret
scas
movsl
cmp
enter
jp
fs
add
sub
in
js
sbb
in
cmp
das
mov
inc
push
cmp
add
lcall
fs
jns
je
cmp
push
adc
sahf
addr16
nop
jmp
mov
flds
out
in
mov
aam
inc
sahf
addr16
xchg
nop
bnd
jns
jg
add
iret
and
jae
cwtl
adc
pushf
repnz
cmp
dec
mov
or
movsb
inc
and
test
adc
add
cmp
push
add
call
and
sbb
pop
pop
movsb
enter
cmp
cmp
cmp
pop
add
es
insb
push
add
mov
and
inc
hlt
jecxz
add
dec
pop
mov
push
incl
xchg
fs
add
mov
push
xchg
mov
or
cld
les
mov
pop
or
sub
outsl
repnz
fistl
mov
dec
or
inc
in
inc
adc
imul
pusha
jmp
fcomps
xor
pop
push
lods
add
inc
or
xor
cltd
mov
add
sbb
loop
xchg
arpl
lret
dec
pop
jne
sub
mov
xchg
das
lea
jne
add
or
jmp
or
mov
cmpb
jne
fimull
sbb
aad
repz
sbb
ss
inc
cmp
sbb
push
loop
add
jmp
and
fistl
xor
xor
inc
and
xchg
xchg
sub
fnsave
mov
mov
sti
jle
xchg
pop
or
push
loope
cltd
jecxz
push
iret
push
scas
mov
andb
cmp
or
cmp
cld
incl
cwtl
repz
bound
sub
and
sub
ss
invd
dec
add
push
test
out
mov
out
insb
out
fsin
bound
aam
je
mov
pop
inc
rorb
int3
sub
std
imul
push
cli
aas
mov
adc
pop
stc
sub
out
arpl
xor
arpl
outsb
mov
arpl
bound
cmp
rcr
ja
add
leave
inc
adc
sub
lcall
adc
inc
xor
psubw
into
stc
lods
stc
pop
enter
cld
or
enter
stc
sar
mov
xor
sub
push
jb
cmovno
stc
pop
in
mov
dec
sbb
fadds
push
fcoms
inc
or
adc
int3
sbb
mov
mov
mov
sub
arpl
call
add
mov
xchg
gs
shl
jbe
jns
dec
sbb
add
and
lcall
les
jmp
aaa
or
add
mov
testb
inc
and
jns
mov
lods
and
inc
femms
sbb
not
lahf
mov
mov
pusha
in
mov
inc
imul
push
ds
icebp
repnz
fwait
inc
stos
addb
das
repnz
xor
sbb
repnz
add
inc
xor
add
dec
push
push
addr16
mov
mov
pop
xchg
push
stos
pop
lahf
mov
int3
mov
inc
cld
call
aad
add
ja
icebp
mov
incl
lcall
dec
cmpsl
call
sti
aad
pop
imull
ljmp
int
enter
xor
fdivl
cmp
scas
pop
shlb
rcr
mov
push
add
dec
ja
stos
adc
mov
cld
adc
inc
sahf
jo
cld
cmc
and
inc
push
int
ljmp
in
push
adc
fisttps
xchg
les
add
call
cmp
add
add
enter
jnp
add
push
mov
mov
mov
jnp
pop
test
push
mov
mulb
ds
iret
and
mov
sub
jne
dec
jae
jmp
inc
pop
push
je
scas
jmp
cmp
out
cli
push
outsb
inc
jle
push
jo
mov
or
pop
js
ljmp
xor
or
add
iret
out
aam
and
sub
cmp
inc
push
test
outsl
je
and
sub
fildl
inc
push
inc
cmpsb
add
jg
sub
mov
add
es
dec
and
xor
jbe
loopne
push
mov
dec
mov
add
adc
xchg
jo
adc
sub
int
insb
add
insb
adc
push
dec
xor
xor
je
pop
pusha
fwait
and
jo
xchg
xchg
xor
xlat
sahf
add
shll
jb
add
xor
xor
shll
jl
pushf
stos
into
ss
shll
fwait
or
xlat
pushf
insl
push
jae
cmp
pop
shll
add
pop
xor
aam
add
or
cmpsb
pop
sbb
inc
push
data16
lcall
add
subl
and
les
inc
gs
jb
bound
popa
xlat
arpl
dec
jns
push
sub
pop
inc
pop
inc
pop
mov
push
add
pop
push
je
adc
gs
stos
xchg
or
push
test
mov
inc
mov
or
ficoml
dec
fs
gs
cmp
hsubpd
inc
adc
cmc
xchg
sbb
loope
fisttps
adc
lds
in
ret
push
scas
fwait
add
pop
inc
jge
jnp
push
outsl
imul
jo
sbb
push
std
sub
ja
or
jae
inc
in
popa
xchg
and
xchg
fs
cmp
push
sbb
gs
outsl
ja
adc
jp
inc
sub
mov
cmp
sub
push
sub
sbb
push
and
inc
xlat
or
int3
inc
adc
inc
inc
adc
xchg
cmpsb
add
push
xor
pop
es
in
cmp
sub
lock
mov
insl
stos
inc
xor
and
roll
es
stos
add
fists
test
gs
add
sub
js
mov
dec
sbb
push
rcrb
or
dec
fs
sub
mov
dec
adc
mov
leave
or
push
mov
loopne
xorb
dec
inc
inc
inc
add
cmc
dec
dec
push
cs
push
ret
and
ds
data16
push
outsl
inc
adc
add
int
dec
adc
sub
pop
ss
dec
inc
adcb
mov
sub
push
push
adc
push
nop
or
pushl
xor
xor
xor
xor
xor
xor
xor
xor
pop
loop
inc
xor
push
xor
bound
push
xor
xorb
xor
pushl
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
bound
xorb
aaa
mov
cmp
cmp
cmp
cmp
cs
lcall
dec
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
cmp
cmp
push
cmp
cmp
mov
sahf
cmp
sarb
fnstsw
add
sbb
cmp
cmp
cmp
push
cmp
pop
ds
lods
ds
sarb
ds
fnstsw
ds
aas
pusha
aas
ljmp
aam
xor
xor
int
jg
xor
pop
xor
xor
xor
xor
dec
xor
push
xor
xchg
pushl
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
jl
mov
pushl
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
mov
xor
pushl
jmp
cmc
xor
add
adc
sbb
jns
jg
xchg
mov
divb
or
in
cmp
cmp
jmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
jmp
cmp
push
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
int3
cmp
and
sarl
fidivrl
repnz
dec
aas
push
aas
pop
aas
mov
mov
mov
pushl
mov
xor
clc
ljmp
xorb
xor
xor
xor
ljmp
add
or
adc
sub
xor
pusha
xor
mov
xchg
xor
xor
xor
xor
jmp
xor
xor
xor
xor
xor
dec
xor
xorl
lock
xor
adc
xor
xor
xor
sbb
and
sub
js
shll
ss
divb
add
std
pushl
or
and
xor
aas
aaa
inc
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
popa
aaa
gs
mov
xchg
aaa
popf
pop
pushl
cmpsl
aaa
into
aaa
jecxz
hlt
aaa
aaa
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
lcall
cmp
cmp
cmp
cmp
cmp
cmp
inc
xor
inc
cmp
pop
cmp
cmp
ljmp
xchg
mov
lahf
cmp
cmp
inc
lock
or
push
fwait
adc
cmp
cmp
cmp
inc
cmp
push
cmp
bound
push
jb
xchg
cmp
cmp
cmp
cmp
cmp
outsl
cmp
sbb
lcall
pop
inc
cmp
push
cmp
cmp
ja
test
mov
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
cmp
cmpl
cmp
push
ds
sar
aas
inc
aas
inc
aas
push
aas
jl
mov
mov
aas
xor
xchg
xor
jg
xor
jne
clc
mov
push
xor
insl
xor
xchg
mov
pushf
xor
jle
sbb
mov
iret
jnp
xor
xor
jg
xor
clc
cmp
adc
adc
sbb
sbb
and
sub
sub
xor
jmp
xor
ja
xchg
cltd
xor
ret
xor
xor
xor
xor
xor
xchg
adc
popf
inc
xor
xor
xor
xor
xor
sar
shlb
xor
mov
pop
push
lret
ds
ja
dec
repz
or
addb
inc
je
mov
add
enter
push
fwait
js
mov
enter
repnz
mov
dec
cmp
xorb
repz
add
fwait
cmp
iret
mov
xchg
subl
call
ret
test
sbbl
pusha
mov
push
aaa
or
or
mov
sti
inc
sub
pushl
cmp
je
call
jb
lock
mov
fcmovnb
daa
add
add
add
mov
xchg
xchg
push
pusha
jb
mov
pusha
sti
push
js
dec
xchg
push
inc
pop
mov
cltd
fidivl
or
shlb
push
sbb
test
and
lahf
xchg
dec
cs
or
loopne
and
mov
or
cmp
daa
daa
pop
add
enter
mov
mov
mov
in
in
mov
mov
sbb
cmp
mov
mov
int3
mov
dec
dec
mov
mov
mov
xchg
sub
test
xchg
xchg
mov
mov
and
mov
movsl
mov
cltd
movsl
movsl
scas
add
or
cmp
in
movsl
or
mov
and
movsl
movsl
dec
es
movsl
movsl
nop
orl
dec
cmpsb
mov
sbb
movsl
cmp
nop
xchg
mov
cmp
cmpsb
cmpsb
cmpsb
or
inc
push
cmpsb
movsl
pop
sbb
xchg
dec
sub
movsl
inc
push
in
movsl
shl
cltd
in
mov
add
cmpsb
movsl
movsl
in
inc
push
movsl
movsl
cmpsb
cmp
movsl
or
add
sbb
mov
nop
mov
movsl
shll
cmpsb
cmpsb
xchg
sub
cmpsb
cmpsb
sub
and
scas
xchg
mov
movsl
movsl
movsl
add
sbb
nop
inc
push
dec
cmpsb
cmpsb
inc
push
cltd
movsl
cmpsb
cmpsb
cmpsb
mov
cmpsb
in
mov
inc
mov
cmpsb
cmpsb
add
cmpsb
nop
inc
cmpsb
movsl
jb
test
movsl
movsl
inc
movsl
enter
movsl
cld
dec
test
sbbl
enter
repz
jae
cmpsb
cmpsb
cmpsb
test
shlb
sub
dec
loope
sub
lret
cvtpi2ps
sbb
and
xcrypt-cfb
cmpsl
movsl
movsl
and
mov
enter
movsl
and
mov
sub
xchg
cmpsb
cmpsb
cmpsb
cmpsb
push
and
leave
sub
movsl
movsl
cmp
add
movsl
fisubl
shll
sbb
rorb
repz
or
cmpsb
cmpsb
cmpsb
dec
sahf
es
sahf
xchg
xchg
and
out
jns
cmpsb
cmpsb
cmpsb
cmpsb
sub
nop
cmpsb
movsl
movsl
sbb
mov
and
pcmpgtw
cmpsb
push
test
int
sbb
and
add
cmpsl
nop
or
sub
and
and
rolb
inc
xchg
add
psubw
sub
inc
jo
add
sub
inc
nop
pop
inc
cmp
nop
and
sub
xor
in
sub
cli
xchg
ja
call
pop
arpl
fildl
dec
mov
dec
jae
sub
nop
inc
nop
inc
push
jb
enter
cmp
or
nop
dec
sub
daa
and
sub
jb
inc
sub
inc
adc
xchg
mov
adc
adc
mov
nop
nop
mov
add
adc
push
jb
sub
cmpsb
in
adc
mov
mov
sub
nop
nop
sub
or
nop
lock
pop
enter
mov
nop
pushf
xchg
sub
pop
pop
subb
mov
cmp
xchg
pop
imul
adc
fsub
jb
mov
das
mov
push
mov
cltd
in
cmpsb
cmpsb
pop
adc
pop
xor
leave
cmpsb
repz
test
enter
cmpsb
cmpsb
cmpsb
sbb
and
push
and
nop
iret
mov
nop
in
push
and
nop
adcl
mov
mov
movsb
fucom
xor
and
outsl
mov
repnz
push
jb
nop
push
nop
pop
nop
jnp
and
nop
adc
xchg
nop
nop
repnz
pop
enter
in
dec
xor
push
mov
inc
push
xchg
fcoml
add
fdivp
in
xor
xchg
repz
scas
dec
mov
and
adc
in
incl
repz
mov
lahf
ljmp
add
pop
repnz
add
mov
mov
decl
incl
or
ss
leave
das
stc
lods
std
call
repnz
lcall
icebp
lcall
jl
pushl
std
jle
mov
ljmp
leave
pop
inc
jbe
decl
add
mov
lock
ljmp
rolb
in
inc
lock
mov
dec
outsb
inc
sub
xchg
lock
xchg
pop
jb
nop
push
cmp
stc
mov
and
leave
sub
cmp
adc
cmp
and
add
jns
hlt
outsb
cmp
and
in
xlat
popf
sti
push
lock
out
add
dec
cli
xor
dec
cmp
movsl
mov
mov
fs
loopne
cmp
rep
enter
or
mov
jae
add
cmp
xchg
lock
lock
icebp
mov
mov
push
in
pop
lcall
jae
inc
xchg
jae
in
aad
fcmovnbe
mov
xor
and
adc
inc
mov
mov
mov
xchg
push
repnz
nop
test
nop
inc
enter
nop
mov
cmpsb
mov
in
mov
mov
mov
cmpsb
mov
xchg
cmpsb
cmpsb
xchg
add
movsb
nop
scas
hlt
pop
cmp
fnstcw
icebp
cmpsb
add
mov
xchg
aaa
pusha
adc
nop
xchg
pushf
push
pusha
sbb
pop
mov
cmp
push
cmpb
push
sbb
inc
push
sbb
pusha
push
sbb
pop
push
push
sbb
dec
dec
pushf
fs
inc
push
cwtl
xchg
nop
xchg
sbb
in
cmp
lock
nop
dec
lds
xchg
sbb
nop
push
and
jb
std
insb
inc
push
in
add
cmpsb
insb
enter
xor
orl
enter
je
or
orl
enter
out
js
sbb
sbb
sahf
pop
jb
adc
mov
fs
orb
push
test
inc
push
test
push
mov
mov
sbb
arpl
inc
push
mov
dec
push
mov
inc
cltd
pushf
testl
jge
sti
or
add
adc
or
iret
pushf
daa
pop
pop
inc
adc
sbb
mov
push
test
test
dec
or
adc
push
mov
xor
pop
push
fdiv
fstpt
and
pop
mov
adc
lret
and
cmp
loop
test
pop
inc
rclb
mov
repnz
inc
push
incl
push
sbb
xchg
push
jb,pn
cmp
pop
sbb
cmp
into
inc
jae
gs
cmp
into
jno
or
sbb
pop
push
adc
testl
mov
sbb
incl
add
jp
into
xchg
add
and
xor
iret
lcall
sar
inc
into
pushl
add
mov
test
popf
inc
push
sub
rcrb
fmuls
add
mov
mov
lahf
xlat
fsubr
data16
mov
or
push
cmpl
add
pushf
cmpsb
xchg
mov
data16
mov
xchg
pop
sub
sub
mov
insl
xchg
cmp
inc
int3
gs
leave
push
jmp
movsb
cmp
jp
cmpb
sarl
daa
or
cmp
into
xchg
xor
pushl
cmc
or
pusha
loope
and
xor
rcl
fisttpl
call
mov
adc
shl
popf
nop
add
push
icebp
mov
push
mov
lock
mov
sbbl
jno
and
les
inc
fwait
adc
and
fsubs
call
add
push
call
inc
push
sbb
sbb
mov
adc
in
mov
push
call
out
loope
mov
lret
and
mov
cld
aam
pusha
mov
inc
push
adc
mov
cltd
adc
fsubr
inc
lock
or
sbb
sbb
and
aaa
call
sbbb
xchg
inc
sti
ds
jo
jmp
and
enter
ret
and
jmp
sbb
or
pop
dec
fxch
xchg
adc
movsb
xorl
lcall
push
xchg
jns
int3
mov
dec
pop
repnz
adc
incl
or
rcll
stc
mov
inc
cwtl
cmpsb
inc
sarl
dec
aam
nop
or
call
sbb
or
sti
or
xchg
out
add
lret
enter
mov
mov
pop
lahf
xchg
mov
incb
cld
dec
enter
int3
inc
rorl
pop
repnz
pop
sub
int
rorb
inc
repnz
fistpll
jns
daa
push
int3
rol
or
rcl
stos
nop
dec
pusha
cld
adc
test
pusha
push
call
jne,pt
cli
ss
sar
lret
pusha
hlt
pop
push
dec
jecxz,pn
hlt
jns
pusha
mov
sahf
daa
mov
in
ss
lock
popa
jmp
pusha
xchg
addr16
gs
call
js
pusha
cld
lret
loopne
subl
leave
loopne
in
lret
add
call
push
call
and
mov
fdivr
mov
aam
fsubr
in
stc
mov
nop
and
xchg
addr16
or
test
pusha
daa
lret
int3
aam
enter
jns
pop
loopne
test
inc
lret
nop
rorb
stc
pop
sbb
mov
or
imul
pop
xchg
sbb
jecxz
pusha
je
ror
repz
cmp
and
enter
cmp
clc
enter
push
bnd
div
les
leave
mov
sub
mov
sahf
pushf
cmp
mov
mov
enter
fcomi
mov
xchg
sub
or
jb
enter
iret
xchg
leave
ds
std
into
test
and
inc
push
test
sub
repnz
jns
mov
xchg
out
movsb
push
mull
push
pushf
add
jb
and
into
dec
into
imul
das
into
add
sahf
sbb
sub
sbb
or
add
int
sahf
cmpl
int
xlat
cmc
cwtl
fsubs
xchg
mov
iret
xchg
fld
add
ljmp
arpl
cmp
sub
mov
mov
add
pop
lds
daa
fnstcw
dec
adc
pushf
nop
int3
dec
mov
or
adc
out
jl
hlt
jl
sahf
iret
enter
jo,pt
hlt
je
dec
and
insb
aam
xchg
xchg
jl
les
inc
int3
jns
mov
add
lret
dec
ss
or
jne
jmp
in
jne
lret
xchg
cmpl
jne
lret
insb
jne
xor
enter
jne
jns
sbb
jno
lret
jae
in
sbb
push
stc
cmp
sbb
fs
enter
pop
js
pop
dec
dec
sahf
iret
pusha
dec
repz
push
push
ret
mov
pop
sub
pop
cmp
adc
ljmp
leave
out
fcmovb
mov
xchg
test
out
inc
dec
mov
cmp
dec
jp
dec
inc
jle
enter
inc
inc
push
repnz
jae
sub
adc
rcrl
iret
cmp
into
leave
jno
leave
test
test
push
xor
cmpsb
movsb
push
shll
clc
pop
andb
leave
xor
ds
mov
cwtl
cmp
mov
fistl
shll
inc
and
insb
insb
add
mov
sub
add
stos
or
std
jne
lret
xchg
xchg
test
xor
test
lcall
loope
cmpsb
xlat
and
nop
int
ja
leave
out
jbe
mov
lods
pop
sbb
ret
nop
mov
mov
mov
push
sbb
int3
rolb
sbb
faddl
sbb
in
in
sbb
lock
clc
enter
cld
add
xor
or
orl
adc
sbb
or
enter
sub
enter
xor
pop
adc
cmp
pop
ds
mov
jl
or
imul
pop
cmp
cmpsl
inc
jne
cmp
jmp
push
mov
xchg
imul
mov
notb
in
mov
add
iret
mov
sbb
push
jl
loope
mov
insb
or
lret
xor
mov
mov
enter
xchg
mov
mov
test
icebp
scas
push
stc
add
mov
mov
ljmp
stc
adc
add
decl
push
adc
mov
and
incl
xchg
loope
mov
xor
flds
in
jns
mov
in
cmp
or
dec
cmp
mov
lock
hlt
call
fwait
jnp
hlt
mov
adc
pop
ljmp
xchg
adc
rclb
in
in
dec
call
dec
mov
in
jmp
loopne
pop
sahf
iret
mov
push
shl
data16
fdivrl
jge
xchg
xchg
lods
fcomp
mov
mov
and
jno
std
shlb
adc
mov
idivl
sub
jp
adcl
pop
gs
jmp
daa
and
fwait
cmp
insb
enter
enter
and
call
test
jne
cmp
enter
les
ss
mov
mov
cli
mov
jb
jb
mov
mov
shr
mov
mov
cs
mov
leave
enter
mov
cwtl
mov
inc
inc
test
movsb
push
sbb
xchg
jbe
lods
cmp
lods
mov
mov
pop
xchg
in
enter
call
test
push
in
inc
test
and
jbe
fsubrs
xor
rorl
jnp
pop
lods
aad
stc
icebp
es
sub
push
fwait
lods
stos
or
sbb
inc
lea
adc
adc
mov
add
push
pushf
adc
cwtl
insl
addr16
add
jl
jbe
nop
mov
jo
push
xchg
int
sarb
jl
cmp
cwtl
cmp
sbb
js
dec
nop
aas
pusha
fnstenv
mov
and
cmpsb
imul
mov
lcall
jbe
mov
movsb
jne
xor
rclb
add
lods
mov
arpl
inc
xor
insb
fadd
mov
dec
pop
mov
shr
inc
jbe
je
mov
adc
xor
enter
iret
repz
movsb
mov
adcb
test
iret
shlb
les
and
xor
inc
int3
and
xor
push
iret
xor
cmp
cwtl
adc
lods
cmp
cmp
add
mov
xchg
cmpsl
loopne
in
fcompl
call
out
jns
mov
sbb
cmp
and
clc
cmp
repnz
test
dec
je
sahf
xchg
out
cmpsl
pusha
fs
sahf
xchg
out
push
or
sbb
xor
shl
jns
and
aam
sbb
jl
xchg
in
add
add
xchg
cmpsl
and
in
sub
sub
sub
out
jns
mov
push
jns
jge
movsb
xor
cmpsl
ds
sbb
shl
push
mov
mov
scas
pop
dec
mov
orb
jge
jo
push
sub
push
clc
in
jp
jo
insb
lods
aaa
cli
jns
imul
push
jne
mov
add
pop
dec
outsl
push
fistl
push
sbb
popa
imul
push
je
pop
jbe
mov
inc
inc
sub
push
add
stos
add
out
sbb
and
xchg
lods
add
pop
cmovbe
jp
mov
add
inc
xorb
jbe
lret
data16
xchg
jae
inc
ljmp
xchg
js
add
out
out
cmp
dec
jne
data16
dec
popa
jns
jbe
dec
scas
mov
xorb
xor
xchg
insb
sub
popa
jo
push
outsb
mov
test
xor
adc
add
in
sbb
in
pop
dec
adc
push
int3
mov
cmpsb
int3
inc
pop
pop
xchg
sbb
xchg
xor
push
xor
arpl
inc
repz
push
gs
jno
in
jge
popa
push
adcl
add
movsbl
fsubrs
dec
xchg
sbb
xchg
pop
push
xor
pusha
or
inc
add
mov
imulb
cmpb
sub
cmp
pop
xor
mov
cwtl
aas
add
dec
rcl
loopne
clc
pop
add
imul
inc
cmpsb
imul
je
orb
xor
xor
inc
inc
inc
push
cmpsb
imul
sbb
xor
cmpsb
imul
cmpsb
imul
fsub
inc
push
inc
inc
lcall
and
inc
imul
imul
imul
mov
or
and
into
ss
roll
jo
xor
cmpsb
jmp
lods
mov
enter
hlt
imul
sub
inc
dec
pop
fs
nop
cwtl
mov
test
ror
mov
into
xor
roll
inc
add
sub
cmp
push
rcrl
mov
add
pushf
test
mov
xor
fsub
inc
pop
inc
inc
shll
sub
dec
shll
jl
xor
shll
mov
ss
ror
rcr
call
insb
mov
add
and
fcomps
inc
inc
push
dec
pop
push
inc
lcall
jo
jl
nop
popf
cmp
inc
jnp
inc
cmpsl
mov
pop
les
int3
fadds
outsl
int
jmp
clc
add
adc
dec
shll
xor
dec
push
shll
orb
mov
enter
shll
in
clc
add
frstor
pop
roll
adc
or
cmp
inc
xor
shll
pop
fs
jl
xor
roll
fdivs
dec
and
dec
cltd
out
shll
dec
sarl
roll
and
cmp
dec
push
je
xor
fs
mov
xchg
shll
ror
dec
imul
xor
shll
sub
inc
push
shll
test
pushf
test
rcr
xchg
dec
shll
lock
add
fwait
cmpsb
imul
shll
fs
dec
shll
ror
dec
shll
loopne
clc
add
imul
imul
imul
cmpsb
imul
dec
cmpsb
jmp
dec
add
imul
dec
pop
pusha
xlat
imul
dec
ret
inc
outsl
dec
pushf
pop
test
mov
xor
rol
enter
cmpsb
imul
cmpsb
imul
cmpsb
imul
addr16
cmpsb
mov
enter
pop
fcomps
call
dec
push
imul
shll
js
xor
shll
pushf
test
shlb
aam
sub
add
insl
lcall
sub
xor
xlat
popf
out
pop
dec
add
shll
test
xor
movsb
mov
add
fsubr
dec
shrl
push
mov
cmpsb
imul
imul
cmpsb
imul
clc
add
push
add
lcall
dec
push
pusha
imul
imul
imul
dec
shll
xor
inc
push
lcall
insb
pop
jl
mov
lods
mov
dec
mov
push
push
push
push
push
add
and
cmp
push
imul
imul
imul
lcall
xor
cmpsb
imul
imul
cmpsb
imul
push
push
cmpsb
imul
imul
cmpsb
imul
fsub
hlt
add
shll
inc
dec
xor
shll
pop
push
dec
rorl
cmpsb
pop
push
pop
xor
rcrl
xor
xor
rorl
pusha
insb
js
shll
mov
dec
rcrl
push
pop
pop
pop
addr16
into
xor
add
and
sub
dec
shll
xor
inc
push
pusha
push
je
mov
dec
mov
enter
mov
add
adc
sub
cmpsb
imul
imul
imul
insb
mov
pop
pop
pop
add
sub
dec
lcall
test
lods
mov
xor
in
pop
dec
pop
pop
add
lcall
inc
push
pop
imul
imul
insl
lcall
add
imul
imul
imul
cmpsb
imul
pop
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
je
in
clc
pop
mov
imul
imul
imul
inc
shll
popa
popa
sbb
or
add
inc
push
xor
shll
push
xor
rcrl
shll
add
cmpsb
imul
cmpsb
imul
imul
imul
dec
shrl
adc
sub
shll
push
dec
orb
sbb
shlb
cltd
lret
sar
and
mov
mov
jnp
mov
mov
orb
lcall
rorb
cmp
jbe
pop
and
mov
add
cli
push
mov
xor
cmpsb
imul
cmpsb
imul
add
mov
mov
or
lfs
fiadds
in
not
jne
mov
sub
rsqrtps
add
dec
sarl
mov
imul
cmpsb
jmp
push
pop
mov
sahf
stos
mov
enter
adc
outsl
decl
subb
and
mov
add
or
rorb
cltd
xorb
js
int
outsl
jbe
cmp
mov
arpl
push
imul
cmp
push
gs
insb
js
loopne
in
cmp
movsb
pop
divb
aad
mov
inc
fs
nop
enter
ret
adc
ja
sub
inc
sub
pop
push
mov
pop
fcomps
inc
sub
cwtl
inc
out
add
leavew
subps
inc
jb
and
xchg
dec
cmp
inc
or
comiss
push
jp
mov
jo
inc
jne
or
nop
shlb
xchg
mov
insb
add
and
sub
mov
xor
gs
shll
sbb
or
clc
jbe
call
lcall
imul
jmp
jo
push
lcall
ja
cmpsb
imul
dec
shll
fsubr
std
lcall
xor
imul
imul
lcall
pop
jb
imul
mov
cmpsb
in
cli
and
and
sbb
add
mov
xor
cmpsl
add
sti
add
adc
pop
push
cltd
ljmp
or
or
push
std
add
add
aad
xchg
push
dec
rcl
and
add
iret
int3
aam
test
sub
sub
push
mov
adc
xor
inc
mov
mov
test
mov
adc
and
push
inc
lods
lods
mov
test
xchg
push
add
decl
in
nop
in
xor
mov
cmp
or
rdmsr
mov
xor
inc
xor
xor
xor
arpl
jb
xchg
ss
aaa
mov
out
cmp
pop
cmp
cmp
or
xchg
sub
pop
cmp
in
jmp
cmp
aam
in
repz
cmp
jmp
sbb
and
arpl
insl
cmp
mov
cwtl
cmp
cmp
cmp
cmp
dec
adc
in
and
mov
push
lock
cmp
cmp
cmp
cmp
cmp
insl
ds
ds
mov
call
xlat
ds
in
ds
push
std
inc
mov
xor
jl
xor
xor
ljmp
push
sarb
xchg
xor
xor
ljmp
lock
pop
add
xorb
xor
lret
pushl
movsb
xor
xor
xor
xor
xor
xor
xor
push
xor
pushf
ljmp
pushl
mov
xor
xor
xor
xor
xor
mov
xor
xor
or
push
xor
aam
fidivl
push
sar
out
xor
add
aaa
and
sub
add
aaa
aaa
xchg
aaa
shlb
aaa
adc
sub
inc
cmc
idiv
ljmp
js
cwtl
cmp
cmp
cmp
lea
cwtl
cmp
mov
cmp
cmp
idiv
jg
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
adc
cmp
cmp
cmp
push
cmp
das
pop
adc
aas
pop
aas
jbe
cwtl
aas
int3
aas
aam
fisttps
je
call
cs
xor
jle
xchg
xor
xor
xor
xor
sbb
stc
rdtsc
adc
clc
incl
xor
xor
test
mov
mov
mov
and
xor
xor
push
xor
imul
push
lock
movsl
xor
xor
xor
xor
xor
xor
ss
test
cmp
xchg
cmp
lds
cmp
jg
stos
loopne
cmp
sarb
fistpll
lcall
loopne
cmp
mov
add
add
cmp
loopne
xor
cmp
cmp
fldt
sti
mov
mov
and
add
push
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
push
ja
sbbl
cmp
cmp
idiv
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
loopne
cmp
push
cmp
outsl
cmp
lcall
cmp
fistpll
pop
and
xor
inc
ds
ds
lcall
push
ds
mov
ds
fdivrs
lock
div
add
adc
and
jae
dec
aas
pop
aas
addr16
das
dec
inc
std
jae
cmpb
aas
or
stos
xor
cld
push
add
jmp
sub
xor
sar
and
inc
ss
test
xlat
lret
push
add
adc
sub
call
sub
insl
aaa
ja
jge
mov
xchg
aaa
mov
dec
aaa
ret
aaa
fdivs
jmp
cmp
test
dec
cmp
mov
or
pop
pop
pop
and
jg
push
mov
loop
out
in
cmp
dec
cmp
mov
testl
inc
adc
outsb
cmp
mov
cmp
cmp
stos
cmp
cmp
cmp
cmp
cmp
inc
rcrl
sar
andb
iret
cmp
sbb
mov
movsb
ds
aas
dec
sbb
pop
aas
sub
aas
imul
push
mov
sbb
incl
sarl
mov
jecxz
call
xor
pop
shl
ljmp
insb
xor
xorb
xor
es
test
aaa
sub
sti
xor
pop
xor
mov
fcomip
xor
xor
xor
out
clc
xor
sbb
and
sub
adc
lock
cmp
dec
ss
ss
push
mov
push
daa
xorb
push
lcall
clc
pushl
ss
fidivl
loop
ljmp
fildll
aaa
sbb
and
aaa
xchg
aaa
or
lods
aaa
iret
aaa
sbb
sarb
cmp
push
mov
sub
inc
cmp
jge
pop
ja
das
pop
mov
out
add
pop
cmp
popa
cmp
test
cmp
cmp
insb
cmp
cmp
gs
cmpb
mov
ret
lcall
push
xchg
cmp
jne
cmp
cmp
cmp
cmp
cmp
inc
xchg
or
mov
cmp
dec
xchg
cmp
cmp
cmp
cmp
mov
sbb
push
gs
outsl
pop
jp
test
movsl
cmp
mov
cmp
sbb
cmp
cli
cmp
sbb
and
fcomip
fcomip
cmp
inc
mov
pop
ds
jne
test
mov
xchg
jg
push
adc
movsl
icebp
mov
mov
fbstp
sti
in
cmc
ds
ds
aas
or
adc
aas
sub
xor
mov
xchg
gs
mov
xchg
mov
stos
add
adc
clc
sbb
movsb
xor
xor
xor
xor
xchg
aaa
adcb
xor
xor
xor
xor
xor
aad
cli
in
xor
xor
sub
or
hlt
fisttps
xor
xor
and
and
sub
sub
scas
add
cmp
inc
xor
dec
inc
js
mov
xor
cld
outsl
in
fbstp
xor
xor
mov
nop
xor
push
xlat
sbb
addr16
mov
loopne
xchg
int3
xor
xor
fbstp
xchg
fdivl
loopne
call
xor
push
cmpl
xor
outsl
clc
sbb
lock
adc
mov
xor
sub
sub
add
aaa
mov
xor
cmp
lret
xor
lock
inc
cld
xor
xor
xor
add
xor
insb
fnstenv
adc
jl
test
mov
mov
nop
loope
decl
xor
xor
xor
enter
icebp
xor
xor
sti
fdivs
fdivl
loopne
das
add
call
xor
xor
inc
pop
and
xor
ja
or
inc
and
cmpl
xor
insb
xor
sbb
mov
test
mov
add
xchg
xor
fiadds
bound
sidtl
add
ret
aam
fdivs
fdivl
loopne
in
call
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sub
xor
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
icebp
or
xor
xor
xor
mov
sar
pushl
ret
enter
shlb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
cld
pushl
xor
or
adc
sbb
and
pusha
sbbl
xor
xor
push
sti
dec
xor
pop
xor
fs
jo
je
js
loop
jl
xorb
xor
cwtl
xor
movsb
xor
mov
sbbb
mov
mov
xor
xor
dec
sub
adc
in
in
xor
lret
cmp
ss
or
or
adc
jg
or
sub
sub
xor
mov
inc
ss
ss
ss
ss
ss
ss
pop
inc
cld
pushl
pop
ss
ss
ss
jl
pushl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
aaa
icebp
shlb
mov
aam
fdivs
fdivl
loopne
in
call
icebp
pop
inc
cld
ss
ss
ss
iret
add
or
or
inc
sub
ret
adc
sbb
filds
and
sub
xor
xor
cmp
cmp
inc
aaa
inc
jg
icebp
aaa
dec
aaa
dec
jmp
pusha
aaa
fs
push
icebp
pushl
jo
je
js
jl
xorb
stc
mov
nop
adc
ja
aaa
xchg
aaa
cwtl
aaa
pushf
lahf
movsb
aaa
test
lods
sarb
or
les
enter
shlb
aam
inc
cld
fucomip
fdivl
loopne
in
call
and
cmp
pushl
cld
aaa
add
add
or
adc
adc
loop
ss
sub
pop
cld
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
clc
push
and
je
jl
mov
test
cmp
cmp
movsb
cmp
cmp
call
push
daa
stos
enter
sarb
aam
fdivrs
fdivrl
loopne
in
sub
icebp
cmp
cmp
xor
test
or
add
or
rcll
cmp
test
out
jne
cmp
xchg
sub
sub
xor
sbbl
arpl
cmp
cli
movsl
and
pop
cmp
in
push
ljmp
cmp
cmp
cmp
lods
add
test
adc
loopne
lods
cmp
shl
std
push
adc
cmp
cmp
adc
loopne
xor
ja
call
mov
cmp
lock
adc
or
adc
sub
cmp
outsl
mov
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
mov
nop
pop
pop
pushf
push
adc
adc
aam
mov
mov
cmp
cmp
cmp
cmp
ljmp
icebp
cmp
cmp
sub
cmp
cmp
cmp
cmp
cmp
das
icebp
sbb
cmp
cmp
cmp
cmp
adc
push
sbb
sbb
clc
jg
cmp
sub
xor
xor
cmp
mov
cmp
cmp
cmp
pop
loop
fisttps
push
cmp
insb
cmp
je
js
jl
orb
cmp
and
movsb
lods
cmp
cmp
test
push
adc
jno
xlat
fsubr
les
jmp
cmp
cmp
cmp
jnp
js
mov
add
cmp
or
adc
aaa
addb
cmp
cmp
notl
outsl
or
add
inc
sbb
cmp
mov
push
call
cmp
std
and
cmp
cmp
cmp
adc
decl
cmp
sub
xor
cmp
cmp
inc
cmp
dec
adcl
pop
cmp
push
outsl
call
cmp
cmpb
cmp
pushf
cmp
add
mov
mov
and
fs
mov
add
aaa
dec
push
jmp
xor
cmp
add
pushf
getsec
adc
call
add
push
push
sub
mov
sbb
adc
hlt
frstor
shl
jbe
pop
aaa
xor
sbb
add
jge
sub
fnstsw
sti
inc
push
test
js
fcoml
jle
aas
inc
dec
fbstp
bound
out
push
and
sbb
push
jae
add
sub
and
gs
jp
jb
dec
adc
adc
rolb
mov
sbb
enter
out
test
int3
and
mov
push
mov
pop
insb
add
add
pushl
pop
dec
add
push
loopne
shlb
ljmp
add
mov
das
inc
jp
jg
rorl
adc
ret
sub
add
dec
inc
push
inc
jle
add
out
mov
sub
es
jmp
adc
sbb
out
test
addr16
or
pusha
arpl
test
gs
push
dec
cltd
in
call
or
dec
push
inc
push
dec
cmp
jae
test
je
dec
jmp
mov
dec
inc
mov
outsb
lahf
sti
sahf
pop
push
dec
test
adc
and
pop
push
dec
dec
push
inc
fs
sbb
xor
stos
and
call
dec
movsb
push
or
xor
sub
add
jnp
or
xor
lcall
lods
adc
mov
or
xchg
jae,pt
pop
add
inc
pop
sbb
out
lods
mov
pop
cmp
add
cwtl
mov
and
mov
mov
add
adc
push
mov
add
xor
aas
xchg
insl
dec
push
adc
jmp
das
mov
adc
inc
adc
int3
lret
push
jbe
xor
jmp
jne
pop
and
sub
and
repnz
add
pop
fs
aaa
xlat
push
add
fs
add
jl
movd
ja
pop
inc
pop
or
and
out
mov
je
sahf
xchg
cmpb
jbe
mov
cmpb
lock
lret
fisubs
add
popa
cmp
ffree
das
gs
shll
xchg
cwtl
mov
inc
jbe
shll
fcoms
inc
lret
fistps
neg
cwtl
xchg
or
and
repnz
mov
or
roll
iret
push
sbb
pop
mov
or
daa
xchg
xor
out
xchg
jl
add
push
addps
stos
sbb
fnstcw
das
cmpl
cs
push
aas
and
pop
arpl
lock
out
icebp
mov
addb
cmp
mov
inc
mov
es
xchg
adc
cmpsl
mov
ja
jge
adc
repnz
pop
adc
dec
pop
dec
add
adcb
mov
cmpb
gs
and
and
data16
sbbb
push
add
arpl
nop
sub
aaa
adc
dec
lods
fs
outsl
lods
fildl
andl
add
fnsave
push
sbb
lds
outsl
sbb
movsl
jae
xor
sbb
pop
cmp
mov
xchg
ffree
stc
adc
cltd
fistps
das
add
inc
jle
ds
arpl
or
add
or
sbb
push
dec
inc
mov
inc
fimull
push
shll
dec
rol
mov
adc
mov
sbbl
roll
or
dec
mov
enter
pop
cmpb
push
xor
ds
xor
and
adc
insl
and
sub
dec
add
add
lock
insb
add
repz
into
lret
add
cmp
mov
push
ds
adc
fldenv
outsl
cmpb
jns
mov
dec
fistl
sbb
pop
sub
pop
adc
inc
and
inc
aad
xor
add
cmc
jg
mov
movsb
xchg
loopne
mov
cmp
pop
push
add
scas
test
enter
cltd
ds
cwtd
ds
data16
adc
sub
lds
or
cld
and
movsw
cmp
pop
pop
adc
movsb
and
mov
shll
and
sub
mov
cmp
dec
leave
xor
cltd
dec
es
xchg
leave
xor
push
dec
fistpll
adc
popf
stc
cs
enter
xchg
loop
and
iret
jle
push
adcl
inc
xor
js
inc
dec
push
adc
cld
sub
sub
or
inc
cld
xor
xchg
xchg
in
pop
xchg
push
inc
add
and
add
fistl
test
pop
adc
punpckhbw
or
or
sub
add
add
lcall
add
sbb
outsb
add
sbb
fdivrs
insl
rolb
or
jnp
pop
daa
sub
add
in
mov
inc
add
cmp
arpl
adc
popl
sbb
jge
mov
shlb
int3
pop
xlat
jne
insl
fsubr
outsb
aad
out
adc
add
std
pop
int
fisubl
add
daa
into
or
mov
sub
cmovae
dec
ljmp
sbb
insl
rcr
pushl
push
add
sbb
iret
jb
sbb
jno
pop
out
or
pop
adc
push
push
outsb
or
inc
lcall
outsl
push
mov
jne
cmc
insb
push
pop
rcll
add
pop
add
sbb
jno
imul
mov
push
pop
mov
xlat
jg
arpl
mov
sbb
fstl
push
pop
pop
imul
xor
pop
or
xchg
jb
pop
daa
or
jno
aaa
cmp
mov
dec
sbb
push
pop
fdivrs
aas
ret
lock
push
push
in
or
jnp
cs
xchg
outsb
push
jb
adc
mov
je
pop
add
and
add
cmp
pop
shrl
sbb
bound
outsl
push
outsb
addr16
mov
stc
cs
or
jno
sti
outsb
sti
into
and
xor
ss
and
jns
add
arpl
sbb
sbb
je
mov
ja
sub
sub
jle
sbb
outsb
and
jne
jbe
mov
pop
add
incl
outsl
pop
pop
imul
sub
and
jns
mov
jne
je
jg
sbbl
mov
xchg
pop
fbstp
pushl
pop
mov
lret
jb
daa
test
dec
popa
fildll
jno
daa
jae
sbb
jb
pop
add
pop
ja
mov
inc
jo
adc
add
and
jbe
pop
dec
sub
aaa
je
inc
jb
pop
mov
out
mov
jae
add
jg
jg
jl
and
ja
jmp
pop
jg
jg
cli
and
divl
push
cmp
jmp
add
cmp
pop
cmp
imulb
cmp
add
pop
or
mov
sub
sti
nopl
pop
and
mov
fiaddl
das
adc
mov
adcb
pop
add
and
shrl
ja
jecxz
es
jg
decl
test
cmp
lods
cli
aaa
adc
add
pop
lods
std
adc
mov
aaa
lsl
cmp
into
fstpl
scas
std
das
sub
cmp
jbe
insl
jae
adc
sub
stos
decl
jg
jne
inc
add
push
pop
adc
and
in
xchg
sbb
pushl
and
cli
scas
insl
out
mov
cmp
cmp
adc
in
in
mov
and
mov
push
lahf
sub
sysexit
adc
adc
fsubrp
mov
das
pop
aaa
add
aaa
jmp
adc
push
std
xlat
scas
jg
pushl
jne
jns
or
fcmovu
mov
adc
adc
movsl
fucomi
push
cmpsb
inc
fwait
call
or
ljmp
fcos
push
or
test
adc
pushl
mov
mov
aas
adc
xor
insl
adcl
pop
xor
or
sarl
and
and
xor
mov
divl
por
or
adc
jnp
add
add
incl
push
pop
adc
ret
ljmp
adc
sbb
mov
jp
sbb
add
pop
arpl
xchg
or
in
or
jg
or
sub
lcall
xchg
fwait
or
pushf
push
xchg
call
adc
incl
push
outsl
mov
xchg
or
lret
adc
incl
adc
das
sub
cmp
or
paddd
pop
dec
idivb
lcall
add
sti
sub
ds
notb
pop
add
sub
xchg
mov
mul
cmp
or
add
xchg
arpl
scas
imul
pop
or
pop
pop
rorb
mov
cmp
dec
sub
lret
sub
sub
test
or
xchg
sti
add
daa
jb
cmp
sub
call
pop
call
jecxz
neg
xchg
out
in
or
addl
not
mov
sbb
dec
cmp
pop
ja
cmp
or
inc
arpl
pop
add
and
lea
xchg
mov
imul
push
mov
pop
incl
push
pop
mov
pop
add
push
lret
decb
fldl
push
call
or
lock
fsubrl
pop
sbb
sub
xchg
aaa
add
daa
outsl
inc
and
mov
sti
lods
jg
imull
jg
add
and
enter
add
addl
add
int
clc
add
mov
adc
adcl
adc
jae
xor
jl
test
ss
into
orb
arpl
imul
mov
xchg
jg
adc
fucomp
fcmove
jnp
jge
push
add
pop
jl
pop
mov
jae
sbb
jnp
sti
push
loopne
lahf
ja
decl
sbb
sbb
mov
fbstp
fbld
add
aaa
jle
jl
fsubrp
inc
inc
pop
inc
pop
pop
cmp
xchg
jp
imul
jg
add
add
sti
sbb
cmp
pop
sbb
add
pop
ljmp
jnp
incl
sbb
sbb
insb
sbb
jg
imul
jp
sbb
mov
add
add
pop
movsb
imul
xchg
lcall
pushf
jl
pop
sti
pop
jae
nop
pop
incb
lcall
adcl
jbe
imul
loopne
adc
jne
insl
add
sbb
je
enter
outsl
jg
hlt
in
outsb
or
popf
jmp
add
xor
mov
pop
sbb
sti
add
std
mov
mov
push
sbb
sbb
je
push
imul
pusha
insl
insb
cld
sbb
das
mov
push
inc
sbb
push
out
fwait
psubq
mov
jne
in
add
incl
pop
fwait
mov
add
out
popf
sahf
xor
add
cmp
mov
push
add
in
add
decb
arpl
add
sti
daa
rcl
std
in
pushf
cwtl
lcall
mov
mov
testb
aam
fwait
mov
xchg
mov
out
mov
mov
cltd
sub
mov
jg
cld
add
add
sahf
lret
std
lret
adc
pushf
mov
mov
imul
lahf
jnp
incl
push
mov
cltd
sar
or
add
in
xchg
dec
and
add
mov
js
xchg
cmp
in
adc
dec
sbb
add
mov
scas
divl
lret
out
add
push
fisubrs
jmp
or
daa
or
popf
rol
xchg
inc
ud0
or
movsl
add
add
add
insl
jmp
incb
cmpsl
add
add
add
ret
daa
lods
sub
divb
movsb
sub
cltd
xor
jecxz
jae
cmpsb
sti
test
pushf
dec
add
popa
je
and
fwait
mov
fsubrs
aas
rcll
cmp
movsl
lods
pop
dec
aaa
pop
push
aad
pop
ret
adc
jnp
xchg
sub
sahf
jecxz
adc
jmp
pop
ret
sbb
cmpsl
mov
pavgb
mov
sbb
push
xchg
adc
push
xchg
add
pop
je
mov
mov
arpl
add
mov
lds
mov
fstpt
sub
shll
adc
inc
fwait
int
loope
sub
rclb
stos
adc
inc
add
arpl
mov
xchg
inc
repz
adc
add
adc
add
adc
in
mov
push
cltd
add
adc
mov
and
cmc
add
out
movsb
or
outsl
insl
mov
push
sub
add
jmp
mov
in
pop
cmpsl
ljmp
adc
add
lahf
imull
add
sub
scas
sub
jbe
adc
sub
sbb
mov
add
add
push
outsl
add
mov
fsubrp
lods
xor
lods
xor
das
sub
outsl
sub
pop
mov
xor
xor
add
insl
daa
scas
adc
sub
sub
sub
and
dec
sub
mov
jl
ja
cmp
sub
xchg
add
mov
push
pop
push
sysret
test
test
or
das
inc
push
stc
xchg
sub
test
xor
in
add
pop
xchg
add
adcb
hlt
add
sbb
jae
cmp
add
stc
inc
ss
jae
std
jnp
mov
shll
add
adc
jo
mov
add
subb
insl
mov
stos
insl
lcall
addb
sbb
outsl
mov
imul
jg
andb
pshufw
imul
fistpl
and
insl
xlat
xor
mov
aas
das
jmp
add
xchg
inc
insl
outsl
jmp
mov
arpl
pshufw
xlat
sub
bndstx
sub
inc
mov
sub
std
add
sub
xchg
call
jb
pop
testb
out
mov
xchg
jae
sbb
jecxz
pop
xchg
pop
nop
hlt
insl
add
xor
cwtl
call
aad
std
jle
pop
add
and
adc
mov
aas
sub
lods
mov
mov
cmpsb
pop
lods
inc
outsb
repnz
idiv
adc
mov
call
insl
dec
filds
sahf
std
daa
popf
cld
xor
std
and
test
pop
or
std
pop
imul
sub
mov
sub
mov
push
ret
jg
ret
mov
pop
stos
cmp
mov
dec
xchg
cld
sub
xor
call
or
add
loopne
out
or
es
cwtl
mov
fistpl
addr16
and
je,pn
xor
sbb
in
or
adc
std
sbb
aaa
lcall
cmc
incb
and
xchg
and
std
cld
test
xor
sub
or
mov
test
mov
sti
mov
mov
imul
sti
add
cld
std
ret
or
test
ja
aas
sti
js
add
sub
and
sub
sarl
mov
in
add
add
pop
cwtl
test
push
or
cmpsl
push
lods
xor
out
pop
mov
out
lahf
pop
and
cltd
mov
cs
mov
int
or
push
add
sti
xchg
mov
xchg
pop
cs
mov
pop
xchg
out
mov
sub
rol
lods
mov
push
inc
mov
or
lcall
dec
sahf
jnp
pushf
jp
in
lahf
xor
or
xor
les
mov
daa
cwtl
add
adc
pop
pop
push
xor
mov
addr16
mov
xchg
mov
mov
and
mov
add
insw
push
cmp
jecxz
add
cs
or
sahf
insb
dec
aas
es
and
mov
lret
jns
and
add
pushl
and
jge
or
aaa
add
add
add
xor
daa
stos
pop
add
mov
fwait
scas
imul
test
mov
mov
out
aaa
xchg
xchg
add
xchg
ja
andb
lcall
mov
inc
mov
add
inc
mov
inc
inc
xchg
inc
pop
mov
add
outsl
add
ja
cmp
add
cmp
add
cmp
pop
leave
add
xor
add
sbb
add
inc
faddl
sbb
gs
dec
or
call
je
adc
push
dec
negb
icebp
fistpl
adc
or
hlt
pop
dec
pop
mov
in
outsb
or
or
dec
clc
pop
dec
cld
test
jecxz
add
dec
adc
call
push
hlt
pop
or
push
cmp
push
in
jbe
inc
adc
adc
testb
negb
fistl
push
negb
add
pop
mull
cli
sbb
fucom
fisttps
push
cli
add
push
stc
push
cld
daa
cld
add
jnp
jne
pop
push
pop
pop
pop
pop
sbb
add
mov
insl
pop
nopl
push
pop
add
pop
inc
and
pop
and
and
pop
clc
pop
pop
pop
mov
adc
punpcklwd
mov
fs
clc
add
arpl
add
data16
mov
pop
push
xor
das
xor
in
pop
imul
pop
cmp
outsl
cmp
jno
jae
add
inc
je
inc
jbe
mov
add
dec
jnp
dec
jge
jle
mov
in
jb
adcb
pop
test
add
jb
pop
mov
mov
bound
lret
in
xchg
insb
xchg
outsb
xchg
or
jae
pushl
pop
jbe
pop
jns
jge
add
mov
icebp
add
ret
andl
xchg
sti
add
mov
xchg
scas
pop
xchg
mov
xchg
mov
cwtl
mov
mov
pop
mov
mov
add
cmpsl
mov
mov
mov
in
add
in
repnz
add
mov
mov
cs
rol
shll
pop
inc
sar
add
aad
xlat
into
fildl
iret
fsubrl
xchg
lret
in
fst
loopne
jecxz
in
call
in
jmp
lock
repnz
hlt
in
mov
div
clc
stc
cli
inc
xchg
insb
lret
sti
cld
incb
add
jle
fs
fs
jle
sbb
test
dec
add
sbb
jle
outsl
xchg
pop
push
das
sub
and
ja
pop
notl
das
cmp
das
or
ds
sbb
aas
mov
xor
sub
add
out
xor
cmp
jnp
loop
test
adc
aas
ja
jbe
pop
outsl
outsb
outsl
int
inc
push
dec
sahf
jmp
cltd
sub
je
dec
in
scas
std
ja
ss
mov
insl
and
mov
ds
xchg
xchg
jbe
pop
stos
mov
mov
mov
xor
or
fs
incl
sarb
subb
xor
ds
cmpsl
std
out
lods
or
data16
mov
nop
dec
xchg
xchg
jo
outsl
fcmovnbe
cs
dec
and
mov
jbe
out
scas
movsb
pop
scas
or
outsb
outsl
fisttpl
stos
mov
das
fs
xchg
and
outsl
out
imulb
pop
inc
inc
ss
lcall
mov
jmp
mov
mov
aas
dec
dec
ss
cmpsl
fsubrp
out
pop
dec
xchg
cltd
mov
mov
mov
ffreep
push
inc
imul
mov
stos
push
jbe
out
divl
mov
or
fldt
cld
in
mov
cmpsl
sahf
cltd
xchg
into
cmp
data16
fistpll
or
outsl
mov
jp
jmp
ret
mov
fs
in
push
jns
pushl
je
xchg
sahf
jo
pop
xchg
insl
mov
scas
push
mov
mov
test
mov
orl
pxor
sahf
shlb
mov
cmpsl
insl
clc
out
out
jge
mov
nop
xchg
jge
insl
movsb
cltd
sbb
pop
ficomps
sahf
mov
add
push
and
jmp
std
mov
xchg
adc
test
cmp
or
sahf
pop
fistpll
or
fst
pop
sbbb
add
sahf
pop
test
int
mov
cmp
push
and
lock
aad
fs
pusha
inc
push
fdivrl
div
jecxz
sub
dec
pop
push
mov
insb
outsl
and
jbe
push
test
nop
pop
nop
stos
xchg
mov
pop
outsb
inc
test
push
pop
pusha
push
mov
out
and
nop
xchg
jge
mov
imul
xchg
push
pop
push
outsb
neg
in
jp
test
aas
cltd
push
xchg
push
jae
mov
scas
dec
stc
add
data16
loope
mov
add
pusha
add
popf
push
mov
sub
je
sarb
push
push
dec
cmp
mov
jge
xor
aaa
ss
xchg
das
arpl
xor
das
add
cmp
cld
fistpll
imul
xor
inc
xor
xor
jb
xor
adc
mov
sbb
outsl
push
pop
xor
fs
xor
cmp
cli
cmp
incl
cmp
xor
xchg
xor
inc
xor
inc
xor
xor
mov
dec
push
inc
xor
stos
ds
cwtl
insb
add
xor
xor
pop
pop
xor
inc
mov
xor
inc
add
iret
outsl
bound
jae
mov
rcrb
and
inc
xor
cmp
push
push
mov
aaa
xor
xor
sti
dec
add
mov
out
pushf
ret
es
add
jmp
mov
dec
aam
fmuls
xchg
inc
dec
lods
add
leave
rcrl
into
test
add
or
dec
adc
test
pop
ja
roll
ljmp
lds
mov
cmp
lds
pop
push
in
adc
and
xchg
and
gs
mov
jne
loop
or
les
mov
jl
mov
mov
pop
sub
nop
add
add
dec
jo
add
adc
mov
inc
orb
and
pop
arpl
outsb
outsl
push
loop
imul
or
cs
adc
sarl
mov
jg
sub
mov
out
arpl
or
push
xlat
rcl
jle
adc
add
add
pusha
loopne
stc
int
arpl
or
and
push
pop
inc
xlat
inc
or
mov
stos
test
sbb
push
add
test
sub
leave
jb
loopne
cmp
and
cs
jbe
ret
add
push
mulps
push
das
push
pop
dec
push
inc
pop
out
sbb
cs
fs
jbe
pusha
add
dec
dec
dec
lods
imul
dec
pop
fldenv
inc
pop
mov
mov
test
fwait
popf
and
loop
adc
stos
decl
pusha
pop
sub
sbb
mov
mov
mov
fs
scas
mov
sbb
in
stos
outsl
out
test
pusha
push
test
add
stos
cmp
dec
ja
call
mov
sub
jnp
out
adc
mov
jne
mov
mov
push
imul
inc
mov
pinsrw
lahf
and
push
push
aas
jbe
lods
push
call
bound
imul
add
mov
or
mov
inc
sub
push
mov
push
dec
inc
push
jae
and
jae
popa
mov
adc
and
jne
xor
insb
push
aam
inc
push
mov
inc
jae
or
inc
rclb
aam
outsl
aaa
or
add
mov
xchg
mov
or
lods
push
push
iret
insb
sahf
std
dec
adc
adc
and
lds
mov
adc
cmp
clts
inc
jo
add
add
rcr
fucomi
or
call
push
es
addl
push
sub
das
test
jmp
xor
sbb
add
adc
orb
inc
inc
inc
ss
jmp
inc
xor
jmp
mov
mov
call
pop
aaa
ret
int3
int3
imul
insb
int
jmp
testl
dec
shll
insb
jle
mov
sub
xor
call
and
rorb
adc
jnp
inc
js
push
test
xor
adc
sbb
imul
arpl
push
inc
loope
dec
add
push
scas
mov
data16
xchg
inc
or
jns
bound
xchg
xor
addr16
inc
je
inc
pop
loop
xor
push
dec
dec
jecxz
and
and
out
popa
jnp
gs
popf
je
cmp
pop
stos
clc
ljmp
outsb
xor
dec
adc
cmp
cld
xor
xor
xor
sub
sub
lret
jae
push
sub
loop
sbb
add
andl
adc
stos
mov
mov
mov
push
inc
xchg
cwtl
or
icebp
push
shrb
lcall
lock
or
adc
test
shrb
jp
imul
pop
sbb
test
inc
or
pop
jle
dec
jns
outsb
sbb
orb
cmp
adc
lods
and
jns
ss
loop
adc
or
hlt
push
mov
gs
inc
sub
jns
add
push
adc
push
xchg
repnz
or
inc
arpl
shll
xchg
add
mulb
popa
inc
outsl
jb
bswap
and
add
add
shll
inc
or
inc
add
outsb
ja
and
push
adc
sub
xor
jb
stos
fbstp
cmp
nop
fs
insb
dec
adc
or
xor
adc
insb
je
inc
jns
and
ret
jae
fsts
fistl
jbe
mov
or
lods
dec
sbb
or
fcomps
adc
test
cmp
lock
adc
add
pop
adc
add
inc
inc
popl
and
push
adc
push
or
sbb
dec
adc
push
adc
sahf
push
leave
inc
shrl
adc
inc
jb
test
mov
adc
or
sbb
push
adc
test
inc
xchg
mov
adc
inc
jne
aaa
rcll
adc
cmpsl
and
mov
imul
or
sub
insb
adc
sub
sbb
push
push
xor
cli
dec
pcmpgtb
pop
int3
icebp
xchg
das
pusha
push
loop
inc
adc
mov
sbb
test
add
inc
push
adc
cmp
add
add
add
pop
fnstcw
sbb
xor
xchg
adc
roll
imul
bound
movsb
nop
inc
or
hlt
and
or
pop
call
pop
stos
push
outsl
imul
jns
int
dec
or
adc
adc
and
inc
sbb
sbb
pop
icebp
sbb
call
inc
test
add
ss
arpl
insb
nop
xor
or
xchg
or
pop
fs
xchg
int
cmp
push
xor
xchg
add
mov
pop
dec
ss
ret
cltd
addr16
lds
sbb
xor
mov
fs
jne
jns
pop
jns
in
push
pop
incb
lret
in
xor
sbb
or
cmp
mov
fidivs
rolb
stos
mov
sub
fsubl
dec
sbb
mov
cmpb
sub
cmp
sub
sbb
dec
cli
jo
adc
test
int
mov
int
mov
push
push
scas
or
adc
mov
xlat
in
imul
jb
jae
int3
pop
and
adc
xor
sub
cwtl
test
movsb
gs
pop
repz
mov
mov
pop
pop
mov
or
mov
sub
and
or
rcll
stos
inc
add
sub
cwtl
sub
nop
add
rorl
popl
mov
add
loopne
fs
ljmp
out
xchg
inc
push
inc
and
sub
jbe
mov
or
xor
add
and
add
setb
pop
movsb
mov
mov
lods
adc
lds
adc
mov
inc
add
lock
add
add
daa
mov
or
adc
pushf
or
daa
fidivl
or
daa
rorl
xor
movsb
nop
pop
inc
stc
faddl
mov
inc
cmp
add
ffreep
add
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
inc
add
pop
inc
add
