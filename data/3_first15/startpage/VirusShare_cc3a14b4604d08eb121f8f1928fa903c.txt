fstpt
xor
ret
nop
test
jne
push
mov
test
jp
je
dec
sbb
mov
add
xor
xor
add
test
je
mov
cld
dec
es
je
and
pushl
push
je
jmp
in
dec
lea
sub
ret
or
std
cld
push
decl
shl
sub
lea
push
movl
or
push
call
adc
pop
add
mov
add
dec
jne
pushl
add
add
loopne
mov
mov
pop
lea
push
lea
or
ret
movsb
dec
mov
pop
add
in
mov
in
or
jmp
push
dec
push
jb
je
arpl
sti
jmp
bound
imul
add
movb
push
jmp
pop
cld
lock
push
mov
add
test
jle
add
subb
push
fnsave
mov
pop
lcall
inc
push
bound
pushl
push
add
adc
or
jge
pop
sbb
jne
mov
xorl
push
enter
popa
push
push
or
xchg
pop
add
fidivs
xchg
inc
sbb
popf
jl
pop
repnz
nop
or
push
xchg
out
add
inc
adc
add
mov
sub
cmp
outsb
add
push
and
cs
dec
jg
and
test
jne
add
cmp
outsl
fistl
sbb
test
cmp
mov
sub
in
cmp
and
out
sbb
call
xchg
xor
sub
add
mov
jl
sbb
shl
xchg
je
mov
dec
jnp
add
jmp
push
jecxz
add
cmp
pop
lods
aam
lret
les
xchg
inc
popa
cmp
fcomip
insl
cmpsb
fsubs
mov
and
push
in
imul
jl
sub
dec
inc
xchg
hlt
mov
push
cmp
jl
sub
or
ret
lcall
or
ret
testb
clc
mov
or
xor
sub
pop
add
loopne
into
and
stos
sub
cli
pop
push
inc
call
cld
mov
push
mov
add
push
sub
push
pop
aam
or
push
insb
in
sti
sub
fdivs
call
mov
pushl
pop
pop
push
push
mov
mov
add
prefetch
or
mov
pop
jmp
mov
cmp
addb
or
dec
inc
pop
adc
jbe
adc
out
je
or
orl
sarl
repz
or
push
dec
xchg
lock
jb
divl
in
push
pushl
push
push
pop
mov
scas
add
or
adcl
push
cmp
mov
add
cmp
mov
xor
sete
pop
loopne
push
in
sahf
addb
movsb
nop
push
popf
add
xor
add
add
mov
push
or
mov
fcompl
pop
adc
add
ret
sbb
xor
ja
test
rcr
test
mov
loopne
push
push
add
adc
jo
incb
push
imul
mul
mov
xchg
and
jnp
or
ss
or
xor
mov
aaa
mov
cld
arpl
repnz
add
or
xchg
hlt
in
pop
in
pop
loope
push
mov
shlb
and
jb
mov
xchg
or
mov
and
dec
or
xchg
ss
dec
mov
sub
insb
adc
jb
jne
insb
sbbb
cmpsl
and
xorl
das
popa
inc
mov
dec
test
lock
mov
bound
cltd
test
and
lds
xor
cmp
mov
jo
in
scas
adcb
and
or
nop
mov
adc
hlt
dec
cmpl
out
insb
add
mov
jb
mov
or
sub
sbb
sbb
cmp
clc
add
push
clc
push
or
lock
mov
and
mov
jle
dec
xor
mov
out
add
xchg
hlt
sbb
cmp
leave
lret
pop
fbstp
ret
sub
cli
hlt
aad
pop
and
movsb
dec
lock
mov
push
pop
outsl
shrl
inc
pop
push
orb
xchg
int
enter
lock
xor
cmp
adc
sti
pop
or
insb
adc
sbb
xor
negl
hlt
fnstcw
push
incb
int3
or
dec
fldcw
fists
and
lock
iret
inc
jae
movsb
loope
sbb
add
sub
mov
in
cmp
push
orb
mov
cmp
cmp
or
lock
mov
call
inc
add
push
aad
add
cmp
push
inc
daa
nop
inc
sub
ret
or
sbb
jb
push
lock
inc
fildl
fstpt
and
adc
faddl
or
adc
fidivl
xor
imul
aam
test
aam
daa
ds
clc
sub
push
xchg
pushf
cmp
mov
pop
int3
shlb
int3
add
dec
bound
cmp
mov
and
cmp
rclb
dec
rcrl
cs
nop
jmp
rorb
fcoml
rcl
stc
and
enter
xchg
in
add
les
jmp
pushl
stos
in
adcb
jb
pop
fadd
rclb
mov
adc
lret
movsl
sbb
mov
sbb
jge
insl
push
loopne
inc
adc
sub
cmp
xor
lods
or
call
mov
lods
mov
mov
leave
ret
fnstcw
imul
jo
xor
hlt
or
in
movsl
jmp
sbb
sub
test
inc
add
add
jnp
sbb
push
xor
loopne
jnp
incl
add
add
dec
xchg
fcmovnb
mov
sbb
mov
fisttps
sarb
add
xor
imul
pcmpeqd
test
loopne
rcll
je
rorb
dec
jb
dec
jb
mov
sub
xchg
mov
out
dec
aad
fmull
test
aad
xchg
daa
cmp
loopne
enter
in
inc
in
jmp
je
cmp
and
pop
push
rorl
mov
push
repz
popf
xor
cmp
pop
pop
mov
rep
or
sbb
and
add
add
jg
aad
test
push
fmuls
push
cmp
mov
or
xor
in
das
sub
push
pop
pop
cmp
jl
add
mov
loopne
add
inc
fwait
sub
sahf
jb
mov
push
aaa
test
jecxz
fsubrs
call
jecxz
dec
fmuls
mov
xchg
das
fs
inc
nopl
add
aad
and
fcmove
mov
xchg
in
pop
pop
pop
push
orb
aam
adc
or
adc
shr
or
xor
add
adc
aaa
int3
adc
rclb
sbb
sbb
xchg
into
out
insl
mov
jp
xchg
and
add
dec
test
sbb
out
xor
sbb
jl
cli
adc
xchg
pop
je
jne
jmp
movsl
adc
and
lods
aad
pop
fwait
cld
jae
push
dec
pop
or
and
lcall
outsb
and
rcll
add
scas
int
pop
sub
shll
pop
mov
enter
dec
dec
aas
ret
das
es
push
add
andb
inc
lds
add
adc
sbb
sub
jecxz
lock
add
jge
add
xor
push
insl
mov
data16
sbb
jne
aam
sti
add
inc
lods
jp
jle
inc
adc
in
call
call
inc
pop
in
outsl
cmp
xlat
or
cmp
add
xchg
adc
or
into
xchg
add
push
push
call
and
enter
adc
add
jg
or
sbb
push
adc
xchg
add
scas
pop
mov
sub
adcb
and
into
or
ret
and
jecxz
push
or
push
jnp
or
and
mov
xor
mov
sbb
or
jmp
adc
jmp
enter
and
jo
jae
lret
lcall
xor
repnz
shlb
adc
sbb
inc
push
test
sub
in
cmp
inc
mov
cmp
mov
sub
sub
sub
idivl
jbe
mov
rolb
pop
rclb
hlt
mov
mov
fwait
pop
cmpl
fwait
cmc
mov
cmp
push
sub
popa
inc
sbb
icebp
mull
add
or
cli
in
mov
and
add
mov
sub
push
lods
jmp
shrb
pop
or
addr16
inc
adc
xchg
mov
shrl
inc
add
add
adc
mov
ds
push
addr16
add
mov
sbb
adc
add
fs
popa
mov
push
sub
push
imul
inc
or
popa
pusha
push
inc
add
sub
jne
addl
or
add
cmp
movsb
inc
or
clc
xor
push
push
or
inc
sbb
mov
movsl
out
add
sbb
fs
imul
sub
cld
jle
push
imul
inc
ret
cld
inc
lods
lcall
shll
jl
add
mov
int
or
adc
lcall
sbb
iret
jnp
lahf
lret
inc
add
add
mov
push
inc
fists
ja
ficomps
fistl
push
je
fldl
fldl
faddl
cmp
dec
in
and
add
push
andl
sub
push
popf
jb
lods
jecxz
mov
or
roll
sbb
andl
adc
imul
pop
and
cld
inc
mov
dec
dec
clc
sub
lock
lock
movsb
mov
cmp
je
add
clc
insb
movsl
lock
push
out
jmp
or
movsb
in
test
sub
add
xchg
jae
cmpl
scas
inc
xor
enter
sbb
int
pop
xor
ja
aad
ja
xchg
and
stos
in
push
add
clc
add
into
sbb
dec
lods
jecxz
dec
cmp
stc
gs
mov
or
push
outsb
and
jae
push
sbbb
mov
insl
lock
das
xlat
aad
stc
call
jno
or
aad
loopne
aaa
or
int3
adc
in
data16
pushf
sub
popa
jmp
cld
jmp
pop
push
aaa
or
push
rolb
jge
fildl
push
add
dec
dec
add
cli
xchg
jl
nop
cmp
and
mov
push
and
hlt
mov
xchg
imul
mov
adc
jp,pt
cmpsl
adc
add
testb
mov
lea
cmp
orb
fs
inc
add
cmp
aaa
dec
jno
adc
pop
add
lock
je
mov
push
test
adc
pusha
je
pushf
arpl
popf
lret
xor
xor
nop
adc
fdivrs
in
in
stc
rorb
push
nop
data16
int3
add
and
inc
xor
xorb
rorb
and
fcmovnu
bound
cmpsb
jns
adc
test
inc
test
mov
imul
ljmp
mov
gs
ftst
fnstsw
test
je
fchs
fcompl
mov
or
cmpsb
add
iret
adcl
and
mov
add
or
pop
das
popa
jo
cmp
cwtl
push
xor
lea
pop
add
add
mov
and
fdivp
dec
lret
xchg
or
filds
add
repnz
pop
pop
out
push
pop
rolb
add
ljmp
jns
sub
add
jb
cmc
cmp
or
scas
push
xor
cs
lcall
jns
dec
add
or
xor
insb
sbb
int
insb
lods
adc
rcrl
xor
jb
sub
jne
pusha
cld
jae
insl
cmpb
cltd
mov
das
push
jecxz
mov
xchg
jno
aad
xchg
fdivs
xchg
and
xor
pop
sbb
mov
add
push
sub
cmp
cmp
mov
dec
mov
mov
inc
add
add
push
mov
in
inc
pop
mov
popa
pop
push
sub
les
testb
mov
mov
and
push
add
call
jns
test
jo
lds
or
sub
sub
shl
or
cmpl
mov
xor
cmp
pushf
cmp
popf
xor
das
sub
pop
sub
ret
cmp
jmp
sub
mov
and
cmp
and
adc
sti
adc
sub
xchg
jg
shrl
test
fstl
aas
repz
dec
aaa
icebp
add
inc
pop
push
hlt
dec
mov
lock
pop
cmp
and
jb
and
inc
shrb
mov
mov
pushl
andl
rcr
ret
in
fcoml
cmp
and
adc
mulb
xor
popw
shlb
popa
jg
sbb
movb
push
call
shlb
pop
dec
stc
xor
inc
jle
das
addb
int3
push
loopne
jge
lock
dec
mov
mov
xor
hlt
aaa
sbb
pop
adc
test
in
cmp
mov
stos
in
mov
sbb
mov
add
sbb
and
cmp
pop
jne
add
push
test
dec
xchg
push
mov
popa
pop
and
notl
scas
push
jno
adc
pop
cmpsl
inc
adc
inc
xor
shlb
or
adc
aaa
xor
stos
sarb
loopne
cmp
mov
or
rcrb
dec
movsb
enter
xlat
mov
out
or
daa
mov
loope
add
stos
and
fisttpl
int3
mov
push
popf
and
mov
inc
dec
popa
lock
adc
lock
mov
out
xchg
stos
loopne
cmc
and
popa
movsb
nop
orb
and
std
leave
lea
sbb
pop
add
arpl
or
call
data16
mov
call
shrl
sbb
daa
mov
inc
shl
xchg
out
dec
loopne
and
jo
es
fistpl
inc
and
and
les
fmuls
push
sub
cmp
jg
js
push
and
add
add
and
fdivl
ret
xchg
mov
or
xor
jns,pn
aam
push
cmpsb
loopne
popa
lods
mov
lods
lods
push
inc
lcall
fwait
imul
nop
imul
adc
pop
pop
pop
inc
add
push
jo
fimuls
inc
or
inc
sarb
push
loopne
mov
enter
mov
add
stc
movsl
xchg
push
sbb
in
nop
push
enter
adc
mov
inc
mov
sbb
std
jne
daa
xchg
mov
xchg
pusha
pop
cld
xor
leave
sbb
test
fmul
push
repz
jmp
mov
ss
stc
add
lock
dec
sbb
sub
cld
cld
mov
imul
ret
add
mov
add
jns
test
jge
pop
inc
mov
stos
lret
xor
or
mov
xor
sahf
fbld
or
add
sbb
sbb
in
push
dec
mov
dec
push
popa
pusha
push
xchg
dec
sub
xlat
fcoml
mov
aam
push
xchg
sbb
inc
imul
adc
sub
dec
adc
es
sub
jb
insb
pop
stos
inc
sbb
mov
jg
xchg
loop
call
xor
in
outsl
iret
or
push
push
mov
shll
mov
dec
sub
mov
fdivrl
or
cmp
cmp
ret
movsb
stos
cmp
jnp
sti
pop
cltd
mov
push
lods
push
push
push
rorl
adc
mov
inc
sub
sub
and
leave
and
push
mov
call
pop
pusha
adcb
adc
and
mov
adc
pop
lods
jmp
xor
and
inc
jge
adc
bound
inc
popa
test
iret
das
push
push
pop
cmpsl
jmp
in
inc
fnstsw
add
push
dec
bound
pop
sbb
lds
sub
cmp
orb
fiadds
lock
lock
ret
hlt
incl
lock
push
sbb
and
enter
xor
xchg
and
adc
pushf
cmpsb
add
inc
enter
pop
xor
adc
cmp
add
inc
nop
and
inc
and
add
push
inc
enter
push
cs
push
xor
pop
pushf
xchg
sub
cmc
add
andl
outsb
push
inc
lahf
jo
jne
push
or
mov
loop
xor
leave
addr16
or
imul
popf
mov
insb
es
popa
sub
mov
in
jne
js
jbe
cmpsb
sub
in
cwtl
xor
or
sbb
pop
inc
push
cld
pop
xor
loope
dec
mov
ja
cmp
mov
push
or
pushf
or
pop
xchg
sub
fisubl
or
stos
addb
stos
mov
or
adc
dec
mov
test
mov
fstl
sbb
test
or
xchg
icebp
push
sub
xchg
push
xchg
add
cmc
push
xor
sar
push
test
imul
and
stos
jg
pop
sbb
or
pop
hlt
fisttpll
fsubl
pop
movsl
or
aad
pop
in
out
mov
dec
and
cmp
add
in
add
and
mov
mov
add
jmp
push
xchg
xorb
std
jns
pop
jmp
sbb
add
je
iret
jmp
jns
add
call
sbb
jns
push
adc
daa
ret
push
shlb
mov
jb
test
adc
xchg
inc
pop
or
sbb
jbe
or
ja
push
or
pop
xchg
pop
dec
pop
pop
mov
into
sub
pop
mov
and
adc
push
repnz
and
and
test
aaa
jg
xor
pop
and
mov
jg
sub
es
cmp
packsswb
andl
pop
dec
inc
pusha
sbb
cmp
xor
cmpsb
xchg
aaa
cmp
pusha
shrl
rcll
push
fwait
or
inc
jb
aas
pop
adc
xlat
aaa
xchg
push
inc
add
adc
shl
push
sub
mov
add
pop
jmp
popf
nop
add
les
push
add
mov
or
sbb
nop
dec
aam
out
xor
wrmsr
test
xchg
add
call
iret
add
pop
fistpll
adc
lock
in
aad
fs
sti
dec
stos
jo
addb
and
inc
and
clc
jo
mov
push
push
cltd
dec
inc
inc
jo
push
pop
inc
or
dec
mov
jle
fistpl
imul
stos
pop
add
or
adc
jne
push
test
and
or
cld
cld
nop
mov
pop
mov
xor
in
fs
clc
daa
or
push
mov
xor
clc
jne
scas
inc
dec
inc
lock
mov
push
pop
int
jne
fucomi
sub
sub
aad
lods
xchg
sub
clc
or
sbb
push
pop
push
jns
test
popa
test
hlt
pop
mov
cwtl
std
cld
cmp
sbb
add
xor
outsl
hlt
pusha
lods
cmp
enter
sub
mov
mov
shl
and
push
mov
pop
cmp
mov
lods
cmp
mov
sub
add
inc
test
xchg
cmp
or
cld
dec
test
or
or
sub
stc
push
icebp
mov
lock
xor
pop
mov
hlt
popa
or
nop
hlt
rclb
or
mov
inc
xor
out
fistpl
sub
insb
push
add
mov
xchg
ja
mov
pop
faddl
stos
pop
mov
roll
and
sub
subb
mov
das
or
pop
dec
es
icebp
out
pop
mov
cltd
pop
push
loope
in
dec
std
mov
adc
ret
mov
add
jmp
add
ja
cltd
lock
and
std
in
push
call
fsubrs
and
xor
fcoml
and
loopne
mov
shlb
mov
lock
jecxz
push
incl
and
pop
subl
call
add
in
push
xor
inc
stos
aaa
adc
sub
mov
and
jnp
call
in
in
add
loopne
in
or
xchg
loopne
add
mov
gs
subb
dec
fisubl
inc
jne
and
add
js
mov
jno
sbb
stc
in
call
scas
call
ret
dec
lock
jbe
lcall
xchg
and
dec
adc
mov
sub
push
fbld
sub
or
xchg
js
test
bound
push
sub
pop
popa
insl
imulb
in
inc
jmp
adc
inc
in
in
cmp
mov
cmpsl
outsb
adc
nop
sbbl
movsb
fs
stos
or
in
xor
cmp
arpl
iret
push
or
lock
sub
insl
lods
in
les
outsl
clc
test
dec
jge
mov
push
inc
fcmovnb
stos
loope
out
sbb
push
xor
lea
push
add
add
outsb
inc
icebp
test
xor
push
orl
xor
mov
push
loopne
inc
add
pop
imul
je
loop
fidivl
fmuls
mov
lods
fstpl
inc
test
outsl
mov
mov
movb
scas
mov
cvtpi2ps
adc
adc
clc
mov
hlt
inc
arpl
inc
pop
mov
dec
shlb
xchg
sbb
and
adc
add
inc
jo
andb
int
inc
pop
pop
cltd
inc
xor
adc
or
xorl
add
inc
dec
pop
addl
add
mov
add
inc
rcll
inc
test
imul
jne
pop
adc
push
fists
gs
inc
mov
push
lea
mov
add
into
dec
pop
es
ds
adc
fs
xchg
adc
insb
jns
inc
jne
std
jo
inc
loopne
cld
push
pushf
adcb
sub
test
imul
add
adcb
and
in
or
clc
in
push
popa
adc
inc
lods
inc
mov
sarl
shr
inc
lcall
mov
adc
mov
imull
inc
pop
ss
xor
mov
ret
sbb
push
jns
jge
cwtl
pop
sub
loope
leave
sub
cmp
mov
stos
add
mov
or
arpl
mov
mov
jns
sbbl
loopne
jnp
fildl
gs
push
dec
testl
mov
test
lea
adcb
cli
sar
sub
shl
inc
orl
addl
out
sub
hlt
xor
jno
and
and
jg
mov
mov
call
inc
pusha
xor
xchg
addb
xchg
sub
cmpsl
jno
inc
popa
fsubrl
andl
and
or
xchg
and
fcomps
jnp
filds
xchg
pop
or
pop
xor
movsl
cli
fildll
and
lock
icebp
ret
test
or
in
insl
adc
shll
clc
test
enter
jp
test
sbb
test
lods
adc
test
clc
sbb
jns
pusha
in
add
pop
inc
mov
mov
inc
pop
inc
add
cmp
inc
leave
adc
add
sbb
xor
jge
test
andb
inc
das
cmc
hlt
push
nop
nop
clc
in
xchg
xor
or
inc
and
rep
adc
mov
sbb
mov
rolb
es
test
add
or
jg
mov
sub
sbb
dec
inc
rol
add
hlt
jmp
ja
jmp
or
inc
int
xor
fildl
add
sbb
icebp
push
loop
and
aaa
xchg
cmp
cld
xor
jns,pn
push
cli
mov
nop
dec
or
popa
adc
data16
and
cld
jns
mov
sbb
inc
jnp
add
add
mov
bound
add
cmp
and
add
push
aas
lock
in
push
imul
enter
and
sbb
movsl
into
nop
sbb
enter
xchg
in
and
jno
inc
daa
mov
in
fdivl
push
xchg
lock
jecxz
push
push
inc
adc
sbb
push
test
lock
push
or
ror
sbb
push
push
add
push
mov
pop
push
push
lea
int3
xchg
jecxz
sub
pop
test
add
mov
xor
rep
inc
enter
stc
jnp
insb
or
or
mov
lret
fnstsw
push
and
outsb
pop
sub
mov
aas
in
mov
enter
andb
pop
inc
popf
test
dec
xchg
scas
or
adc
pop
dec
adc
add
mov
add
or
orb
mov
popa
rorb
push
xor
xor
inc
pop
icebp
add
int3
dec
push
mov
or
cld
or
jmp
aaa
sub
daa
gs
push
mov
lahf
fsubr
andl
insl
aam
sub
movsl
add
push
fcoms
ret
add
pop
in
inc
shlb
iret
lds
adc
add
loopne
jno
sub
aam
or
cmpsl
xchg
ja
sbb
pop
push
lret
movl
add
xor
push
shlb
enter
in
fwait
sub
inc
jb
add
mov
popf
ret
mov
outsl
or
sbb
dec
xor
push
roll
inc
and
or
dec
inc
add
xchg
mov
adc
enter
fdivrp
or
lret
lock
mov
pop
and
push
mov
nop
in
and
add
loopne
pop
or
or
jns
jl
ja
sub
hlt
cmp
dec
and
add
and
and
sub
cmp
mov
test
dec
adc
sub
dec
lods
orb
mov
inc
lea
pop
add
push
lea
cmpsl
vcvtss2si
add
mov
lods
add
push
rorb
dec
adc
add
push
mov
or
adc
sbb
or
push
cmp
push
les
das
push
dec
dec
rorb
nop
inc
push
rcrb
push
mov
imul
add
cld
sbb
add
jnp
push
mov
pop
dec
and
nop
pop
mov
popa
or
xor
and
adc
add
lcall
mov
add
sub
xchg
xchg
jle
and
add
and
or
repnz
or
psllw
nop
int3
mov
adc
mov
add
sti
enter
push
xchg
xchg
sub
xchg
or
and
imul
loopne
and
cwtl
jmp
sbb
dec
fcomp
push
aam
add
jmp
rclb
fcompl
inc
rcl
sub
add
movsl
sbb
push
jne
xchg
int3
enter
sbbb
nop
sbb
call
and
int
shlb
jb
xor
bound
pop
and
mov
addb
dec
push
outsb
and
je
mov
or
addr16
sub
push
adc
push
cmp
or
xchg
mov
test
add
jge
lock
adc
popa
in
dec
dec
dec
pushf
or
nop
adc
adcl
shrl
sbb
ds
fcoms
daa
xchg
add
pop
lods
xchg
clc
in
pop
fisubrl
es
push
adc
add
cmp
cmp
xor
push
repnz
shl
add
call
add
sbb
adc
jge
jno
mov
add
xor
or
pop
out
jle
mov
repz
sbb
aas
pop
xchg
cmp
lret
test
lds
lods
xchg
adc
and
inc
fiaddl
imul
xchg
addb
ss
add
fadds
xchg
dec
movsl
and
addb
or
add
xor
into
pushl
mov
dec
ret
dec
inc
ret
or
bound
dec
mov
mov
sub
jne
and
jo
fs
and
popa
adc
push
aas
xchg
es
xchg
in
les
push
fwait
add
cmpsb
push
pushf
movsl
inc
add
fcompl
js
mov
dec
push
add
adc
adc
or
sub
pop
sti
adc
jmp
insl
add
sub
fwait
mov
adc
and
insl
loopne
fsubr
in
dec
jae
add
fcom
inc
in
add
mov
and
dec
fdivr
ljmp
xlat
push
xor
dec
pop
fsubr
lcall
cmpsb
jecxz
adcl
aaa
add
mov
and
sbbl
mov
cmpsl
xchg
fldenv
lcall
or
jge
or
inc
filds
sarb
jo
jnp
push
cmp
sub
nop
jae
mov
add
inc
cmp
imul
add
jbe
sbb
in
xchg
and
ror
xchg
inc
lods
pushf
push
or
jae
adc
inc
mov
stos
rcrb
addl
movsb
or
aam
mov
testl
movsb
adc
pop
push
push
pop
insb
add
or
add
lds
aas
in
jmp
std
fcoml
bound
shlb
int3
jmp
movsb
add
test
xor
add
push
mov
mov
lods
orl
xchg
ss
xchg
adc
cld
test
popa
pushf
aad
add
jo
sbb
mov
fcmovbe
sub
add
dec
add
movsb
xor
inc
call
jmp
fdivrs
adc
adc
test
add
mov
clc
addr16
inc
test
xchg
xchg
lahf
sub
enter
adc
das
adc
js
scas
dec
mov
inc
rclb
lea
andb
pop
lds
mov
inc
addr16
mov
addr16
movsb
inc
adc
sbbb
in
or
add
add
dec
mov
in
mov
and
adc
aam
sbb
jg
push
inc
sub
or
or
aam
cltd
loopne
sbb
test
in
sbb
dec
les
xor
out
roll
add
mov
fstpt
adc
xchg
lods
es
push
lods
in
and
loop
mov
adc
ss
jae
sub
ret
sbbb
stos
cmc
mov
dec
pushf
inc
sbbb
adc
adc
add
mov
inc
add
and
rorl
scas
push
test
cmp
xor
dec
inc
and
repz
pop
in
push
inc
xor
mov
cmp
inc
es
sbb
adcl
inc
push
test
add
jmp
pop
orl
daa
sub
xchg
adc
adc
std
or
pop
mov
or
push
mull
and
push
sub
stos
xor
mov
push
cld
mov
mov
nop
add
movsb
inc
push
lock
add
adc
add
xor
nop
movd
or
mov
and
add
aaa
aaa
jne
test
cmp
push
xchg
cwtl
sub
or
add
mov
jo
lret
adc
or
push
and
rolb
push
pop
jmp
out
add
adc
xor
loope
push
call
mov
insl
mov
push
movl
mov
pop
sub
es
mov
inc
test
inc
pushf
in
mov
rorl
or
cwtl
and
cld
mov
adc
test
iret
imul
test
mov
adc
pop
pop
xor
and
mov
jmp
push
pusha
or
enter
dec
dec
pop
loopne
dec
inc
xchg
dec
stc
pop
cmp
sub
push
movsl
shll
mov
add
add
mov
mov
pop
add
and
aad
inc
or
or
adc
pop
inc
xor
jecxz
adc
in
xchg
mov
in
fwait
arpl
dec
es
ds
rcll
daa
test
test
push
test
adc
stos
cwtl
rolb
fbld
adc
xor
cld
sbb
sar
daa
rol
test
pop
add
xor
rcrb
cmp
sub
xor
inc
sbb
cltd
pop
xchg
flds
pushf
popf
popa
sub
call
adc
movsb
sti
and
movsb
mov
mov
fldcw
adc
enter
lock
stos
mov
or
pusha
add
decl
cltd
cmp
mov
and
add
adc
inc
add
xchg
stos
cmp
sub
ljmp
inc
ret
int
dec
rorb
inc
xchg
cmp
cmp
xchg
aam
or
adc
ror
inc
push
dec
stos
push
in
lock
cwtl
mov
ss
cmc
add
cli
add
jb
incl
nop
pop
or
dec
nop
or
and
sbb
mov
and
add
bound
xor
icebp
bound
mov
pop
in
xor
in
daa
add
cmp
and
roll
repnz
nop
outsb
mov
xor
outsb
nop
mov
adcl
xchg
cmp
mov
or
loopne
jge
xor
in
xorb
adc
aaa
and
clc
movsl
rcr
rolb
shll
add
inc
push
add
test
dec
cmp
arpl
or
or
ljmp
rcll
pop
loopne
cld
orl
dec
or
rolb
push
xor
lea
in
push
frstor
fs
xlat
in
adc
sbb
inc
mov
mov
lds
mov
out
sbb
insl
fisttpl
sbb
mov
adc
add
enter
cli
xor
js
aam
fldcw
dec
leave
push
jmp
and
mov
inc
call
lods
push
pop
dec
imul
cmpsb
stos
xor
or
call
aam
enter
data16
loope
cmp
mov
pusha
push
dec
fdivrs
stc
mov
data16
stc
mov
mov
pop
mov
dec
and
pop
aam
js
dec
inc
add
mov
or
or
scas
aad
stos
or
sbb
icebp
dec
in
cmp
mov
sub
int3
enter
xchg
cmp
enter
shlb
inc
rorb
sbb
testl
add
stos
adc
repnz
lcall
adc
sub
adc
dec
sbb
pushf
mov
shll
add
pop
int3
fildl
ret
adc
fsubl
add
addl
xchg
sub
lea
inc
or
mov
dec
xor
mov
iret
dec
push
lods
mov
sbb
inc
es
xchg
and
and
dec
push
mov
enter
or
push
lahf
dec
and
xor
mov
mov
imul
in
adc
mov
or
cltd
push
and
les
xor
or
test
push
and
xchg
add
dec
add
jo
push
int3
aaa
int3
jne
adc
fadds
mov
orb
and
sub
cmc
into
imul
les
shrl
rolb
and
or
stos
lock
adc
xchg
sarl
dec
xchg
bound
or
cld
ljmp
rol
or
imul
or
bound
mov
in
sub
inc
mov
insb
dec
and
cld
in
add
mov
enter
inc
or
pusha
aas
mov
pop
decb
fmull
mov
insl
lock
roll
mov
cmpsb
lock
iret
shlb
mov
test
loop
std
fwait
dec
lods
mov
adc
xorb
stos
sbb
jp
fsts
sbb
push
adc
sbb
xor
dec
add
mov
dec
call
push
and
fstpt
test
xor
add
sbb
xchg
pop
roll
je
in
lods
xor
sub
shl
hlt
fcoms
sbb
call
int3
mov
adc
pop
xchg
in
jge
stos
inc
orb
mov
stos
ja
cmpsl
lock
aam
push
mov
movsb
pop
or
mov
dec
scas
aam
inc
mov
test
add
sub
jl
xorb
dec
jns
xor
int
adc
or
leave
aad
lea
imul
push
jg
addl
addr16
cld
mov
rol
aaa
xor
into
dec
outsl
insb
ficoml
or
sti
sbbb
mov
add
sub
outsb
sti
and
andb
jo
push
xlat
sub
xchg
adc
or
dec
clc
xchg
mov
and
hlt
add
add
das
cmp
mov
and
add
dec
dec
add
add
or
push
or
ret
insl
adc
push
arpl
inc
shr
add
mov
dec
nop
test
mov
lds
xchg
push
addb
clc
jno
inc
cwtl
mov
inc
in
daa
mov
sub
push
inc
lcall
sub
cmpsl
mov
push
bnd
decl
inc
jp
jl
out
call
mov
ljmp
mov
mov
mov
and
adc
mov
adc
mov
fdivl
iret
xchg
adc
dec
and
jae
int3
pop
push
sar
rclb
fnstsw
pop
push
cmpsb
mov
cmp
lock
push
mov
sub
xchg
xor
enter
mov
mov
cmp
lea
insl
arpl
gs
or
inc
or
call
dec
call
sub
jl
jl
ret
fwait
loopne
cmp
jle
mov
dec
mov
cltd
dec
lods
shl
outsb
in
rorb
add
or
mov
es
enter
inc
scas
orb
iret
bound
aas
mov
mov
lods
add
mov
mov
in
loopne
xchg
xor
pop
popa
mov
loopne
addr16
sub
xchg
stos
push
dec
and
xchg
push
or
push
cmpsb
pusha
dec
lock
addb
mov
ret
fistl
add
scas
daa
push
add
iret
hlt
scas
push
dec
imul
jae
rolb
lds
sbb
in
and
popa
add
in
test
mov
add
xor
adc
shrb
shrb
inc
test
les
iret
orb
push
add
fists
push
jecxz
or
or
cld
movsl
sub
inc
sbb
sbb
or
sbb
jo
adcb
cltd
cmpsl
pop
pop
xor
mov
add
enter
orl
in
stos
mov
pop
aam
pop
push
nop
cmp
push
xlat
inc
dec
bound
xchg
lds
sbb
inc
mov
or
add
mov
xchg
inc
jb
clc
cld
push
pop
sbb
adc
xor
mov
mov
sbb
cmp
je
jmp
mov
add
pop
push
addb
lock
mov
mov
fadds
add
sbb
fldt
test
loopne
mov
iret
mov
xchg
add
adc
or
gs
nop
sbb
adc
adc
sub
adc
add
push
pop
cmpsl
add
add
xchg
cmpb
je
mov
fstpt
dec
rcrl
out
sub
icebp
pop
scas
or
add
mov
sarb
dec
xlat
stos
sub
cmp
add
cmp
add
shrl
xchg
xchg
mov
adc
fdivl
iret
xor
and
dec
add
ret
sbb
orl
cwtl
mov
xor
pop
push
pushf
xor
test
mov
cli
dec
sbb
add
mov
cwtl
rcrl
dec
fildl
data16
jo
lcall
inc
mov
popf
ret
inc
adc
or
pop
leave
movsb
sbb
and
or
hlt
leave
mov
and
add
roll
adc
leave
push
or
add
and
insb
and
fbstp
ljmp
add
loop
cmc
cmc
push
pop
shrl
outsl
test
or
add
pusha
add
add
orb
fdivrl
or
fdiv
fcomps
movsb
and
pusha
and
add
cmc
mov
dec
es
xchg
mov
test
or
xchg
mov
sbb
inc
xchg
or
push
add
jl
add
add
add
adc
pop
add
adc
leave
and
faddl
mov
notl
les
adc
and
aaa
inc
push
and
std
push
xchg
subb
and
sbbl
cs
adc
inc
fiaddl
cli
add
in
loopne
sub
dec
test
xor
add
imul
loopne
out
rcrl
in
inc
inc
lock
or
jg
pusha
xor
add
cwtl
out
mov
int3
xor
xchg
insl
mov
push
addl
xor
mov
adc
inc
loopne
pop
lea
loopne
testl
rorb
decl
roll
sti
lods
cmp
mov
cltd
repz
push
mov
iret
arpl
mov
fwait
push
sub
ret
lods
outsb
fmull
mov
mov
add
shlb
mov
addl
push
in
sub
pop
xor
mov
sbb
in
or
or
lret
dec
xor
les
movl
jmp
fsubrs
add
adc
jge
mull
enter
xchg
lock
lock
test
imul
or
and
inc
lods
pop
lods
sub
test
and
test
mov
mov
rorb
mov
sbb
sub
xor
mov
mov
rolb
cmpsl
aaa
aas
daa
pop
enter
mov
mov
sbb
xor
inc
mov
fisubl
cwtl
mov
fdivl
outsl
imul
inc
test
popf
jl
fldl
and
js
mov
push
rcrb
sub
rcrb
xlat
incb
ret
inc
call
lea
push
es
push
xchg
push
push
pop
adc
movsl
dec
xchg
jnp
fldl
or
or
push
lods
dec
cmpsb
dec
lcall
push
imull
push
insb
or
push
das
xor
sub
push
pusha
pusha
adc
adc
mov
sbb
les
int
pop
push
pop
decb
add
lret
mov
repnz
sbb
bound
mov
data16
pop
sbb
or
mov
xor
mov
push
pop
xchg
or
sub
sbbb
xor
dec
lret
test
sbb
test
fsubs
test
pop
stos
xchg
stos
adc
xor
inc
sbb
pop
popf
movl
xorl
add
add
enter
icebp
in
movsb
aad
popf
add
add
push
xlat
push
rcrl
adcb
imul
cmp
push
mov
stos
inc
sbb
cmpsl
inc
sub
mov
jne
test
test
and
clc
in
dec
popa
roll
lds
in
sub
pop
cs
push
add
rolb
mov
es
in
xor
dec
decl
jne
out
inc
nop
inc
or
add
out
add
in
or
in
mov
stos
or
stc
addl
fsubs
pusha
push
adc
sbb
or
sub
push
mov
mov
ss
in
sbb
mov
test
fwait
sub
xor
in
das
sub
or
mov
mov
or
ret
imul
popa
aas
adc
sub
mov
test
ret
test
adc
and
xchg
sbb
cmp
sbb
popa
jne
push
sub
es
xchg
or
cmp
shrb
adc
imul
je
mov
mov
test
enter
loope
sahf
push
popa
mov
dec
test
add
mov
cmp
add
shrl
fnstsw
adc
jo
xchg
add
dec
inc
adc
add
int3
push
cmp
or
das
mov
dec
cmp
add
add
push
je
pushf
fsubrl
mov
pop
jns
inc
mov
sub
xor
push
mov
add
arpl
test
mov
sub
popf
xor
movsb
dec
xchg
push
add
aam
test
inc
rolb
dec
and
xchg
addr16
sbb
rorl
fmul
xchg
mov
movl
nop
call
pop
iret
adc
and
int3
hlt
int3
add
hlt
fwait
lds
xor
rclb
ret
rcr
adc
outsl
inc
sbb
mov
mov
or
lock
ror
and
and
add
or
push
add
xor
pop
rcrb
sarb
jns
mov
cld
add
in
mov
aad
add
fxsave
inc
add
sbbl
in
cs
movsb
or
imul
ret
icebp
adc
mov
repz
mov
sbb
sbb
mov
out
sbb
pop
imul
pop
cld
mov
dec
xor
add
adc
mov
ja
int
inc
les
and
mov
in
adc
cmp
lds
add
add
les
bound
dec
inc
dec
popf
int
or
xor
daa
mov
sub
adc
add
push
loopne
mov
dec
and
push
and
dec
xchg
dec
and
sub
add
mov
cmc
roll
cs
adc
dec
cld
cmpb
shlb
xor
aas
xchg
ljmp
sbb
xchg
leave
add
cmp
sub
push
inc
hlt
lods
add
xor
or
push
ret
insb
xchg
push
daa
pushf
mov
fmull
sahf
test
jo
rcr
add
bound
test
ljmp
and
mov
lds
add
pop
insb
std
jns
roll
fld
push
dec
lcall
cltd
fsub
add
push
inc
rclb
movl
imul
enter
xor
les
mov
movsl
xor
mov
lds
pop
mov
out
faddl
loopne
in
fdivl
mov
aaa
mov
or
mov
icebp
fdivl
pop
enter
addl
cmp
adc
fmull
loopne
adc
pop
or
hlt
xchg
test
lock
mov
add
lock
and
loopne
scas
or
aaa
lock
imul
and
jb
sub
xchg
xor
adcb
xchg
shl
jnp
int
icebp
inc
or
fs
sysret
test
cltd
pop
cld
fninit
push
sub
push
cmp
sub
hlt
stc
jl
sub
or
mov
pop
pop
inc
push
push
jb
push
pop
lock
push
cs
lret
in
inc
sub
and
jb
pop
inc
cmp
xor
imul
int3
add
hlt
das
jo
or
inc
add
adc
clc
push
ja
push
mov
movl
insb
sti
pop
lock
scas
mov
pop
not
mov
add
add
mov
lock
or
mov
mov
ret
arpl
stos
and
aaa
je
adc
mov
or
add
ret
push
mov
xor
push
sarb
in
roll
cmp
loop
mov
fs
inc
nop
add
mov
inc
ret
rcr
push
stos
out
mov
rcr
in
jae
aaa
add
adc
test
incl
adc
ret
and
call
lea
push
jne
sbb
inc
jne
pop
and
fstpl
pop
push
je
pusha
xlat
push
sti
fildl
adc
cli
or
mov
xor
es
ficoml
add
js
lock
je
imul
pop
jl
or
test
je
inc
mov
pop
xor
push
inc
jbe
or
mov
pop
mov
push
out
inc
mov
std
sub
cmp
jmp
add
or
mov
mov
mov
in
pop
out
jne
fwait
mov
cmp
pop
and
sarl
jne
out
push
es
sahf
loopne
loop
ds
push
add
das
je
imul
prefetch
lret
xlat
fs
pop
add
add
lret
add
iret
pop
loope
in
out
sub
fisttpll
inc
or
mov
fildl
in
pushf
mov
js
mov
xchg
push
mov
jp
leave
test
push
push
mov
and
add
lea
mov
inc
or
sbb
or
inc
aas
imul
add
les
mov
push
xchg
fstpl
mov
jne
fs
ret
sub
pop
pop
mov
sbb
sbb
nop
addl
movsl
hlt
fldl
call
jne
test
push
sbb
pop
push
push
or
addr16
mov
fildll
sub
mov
add
call
pushl
je
dec
jne
xor
jmp
or
add
or
push
aad
scas
ret
cmpsl
lcall
addr16
xor
add
es
push
push
xchg
mov
imul
cs
push
addr16
cmp
mov
sbb
inc
and
jo
inc
and
sarb
jne
sub
xor
add
add
cmp
jge
jmp
sbb
out
std
fcmove
sbb
inc
or
mov
jne
data16
outsb
and
add
scas
dec
jmp
push
add
mov
jmp
sbb
adc
add
sub
pop
sub
mov
jmp
jb
cld
inc
lcall
xor
adcb
inc
push
or
shld
push
inc
leave
loopne
cs
jmp
in
popa
jo
sbb
dec
ss
inc
ss
call
push
push
inc
pusha
mov
pop
push
push
loope
mov
adc
mov
les
push
into
jl
cltd
sub
adcl
inc
sbb
add
sahf
or
cwtl
cmp
mov
pop
daa
adc
in
dec
sbb
dec
sub
xchg
push
adc
sub
push
mov
or
mov
cmp
push
bound
or
divb
sarl
pop
xchg
mov
dec
mov
push
dec
pop
cmpsl
or
mov
push
sbb
push
iret
nop
fwait
xor
aas
aam
push
xlat
movsl
push
pop
add
add
loopne
out
push
inc
sub
dec
or
adc
sbb
xor
or
xchg
jle
rorl
cmpl
ficoms
mov
push
icebp
pop
mov
jle
icebp
movl
outsb
out
lock
imulb
push
sbb
jl
fwait
rol
push
fstpl
ja
stc
push
xor
movl
cmp
repnz
loopne
repnz
fbld
inc
or
jl
xor
push
xchg
ja
pushf
ret
rorb
mov
in
or
rorl
cmp
ljmp
mov
cmp
jle
sbb
stc
xor
sub
ja
jnp
push
cmp
cmp
stc
or
inc
sub
inc
cltd
idiv
or
pop
cmp
gs
push
in
jg
lret
movl
add
and
fdivr
or
adc
add
ror
rcll
scas
imulb
add
jg
mov
dec
mov
xor
or
pop
orl
fists
icebp
sub
add
adcb
push
inc
or
rcrl
push
inc
scas
push
sbb
jge
push
jle
lea
cmp
fsubrl
pop
lock
sub
es
sub
sti
mov
jo
in
push
adc
or
adc
pop
adc
mov
push
test
inc
aam
or
mov
ja
xor
sbb
sbb
pop
movsbl
mov
dec
sub
fdivs
adc
cld
sub
mov
dec
and
dec
dec
pop
pop
es
add
imul
in
cmp
cmp
and
fld
loope
xlat
sbb
and
mov
jne
or
and
jl
sbb
fisttpl
mov
ret
dec
and
push
and
sbb
sbb
sub
sub
jl
jbe
jmp
sub
add
mov
push
jg,pn
or
sti
or
cs
stc
mov
cld
sub
dec
sbb
sbb
jle
or
shlb
nop
into
jl
incl
push
cmp
jl
orl
call
push
push
push
ds
into
pop
clc
push
out
mov
and
pop
mov
sub
inc
pop
push
mov
or
jmp
mov
stos
loop
into
repz
lock
das
psubsb
inc
sbb
mov
test
sub
add
jne
xchg
ja
jge
pop
cld
sbb
or
sbb
jg
push
push
mov
dec
aas
add
push
loope
dec
add
xor
ret
in
insl
sub
mov
mov
bound
xor
and
icebp
sbb
cmp
lret
cmp
jecxz
pusha
push
dec
in
fcomps
push
jbe
mov
cmp
test
aaa
aad
lock
cmp
jb
or
fistpl
jbe
pop
sub
mov
or
rcll
mov
inc
je
popf
cmpb
jne
jmp
cmpsl
je
xor
movsl
sahf
inc
pop
shrl
jl
dec
and
add
mul
jmp
lea
and
or
add
adc
sub
sbb
cmp
imul
clc
sbb
cltd
mov
andl
jmp
push
and
pop
enter
sub
sbb
inc
jb
sub
add
or
mov
fnstsw
jle
arpl
arpl
xchg
cmp
jecxz
push
rolb
test
mov
nop
out
adc
sbb
testl
add
stos
popf
mov
loopne
ret
test
fcmovb
jge
push
pop
mov
daa
bound
push
add
sbb
loope
movsl
jns
sbb
adc
icebp
and
imul
and
dec
int3
pusha
cmp
ret
addb
xchg
pushf
sbb
fwait
outsb
roll
or
movzbl
arpl
out
arpl
push
sbb
ficomps
sbb
inc
je
push
cmp
or
adc
xor
lods
aaa
shll
xchg
out
sub
fstl
sbb
xchg
pushf
sbb
or
packssdw
arpl
xor
fs
xor
movswl
jne
cmp
inc
cmp
sbb
jo
dec
dec
dec
sbb
andl
fistl
pop
cwtl
xchg
push
pop
xor
mov
dec
sub
push
push
hlt
ret
or
cmpb
dec
into
pop
sbb
sub
in
add
insb
cltd
mov
stc
dec
scas
pop
test
cld
dec
adc
add
jg
fisubl
cmp
je
cmp
jne
cmp
jne
test
hlt
jbe
push
adc
pcmpeqw
hlt
push
xchg
jns
fnsave
cmp
mov
mov
test
test
in
in
and
cmpb
push
dec
push
mov
inc
mov
mov
add
addr16
jmp
cli
and
cmp
jo
aas
cmp
xor
aaa
hlt
jle
pop
mov
mov
pop
ss
incl
and
inc
cmp
lock
nop
or
mov
xor
or
cmp
je
mov
jo
lock
inc
jmp
movsb
push
ljmp
mov
scas
and
pop
mov
ficomps
mulb
lock
jne
ja
jecxz
insb
in
push
je
mov
mov
js
shlb
jge
lods
adc
sub
sub
xor
test
push
mull
call
enter
inc
loopne
add
sbb
cmp
inc
test
insl
add
hlt
sub
or
shll
dec
jle
push
sbb
aad
jo
sbbb
or
adc
or
cmp
add
or
ss
mov
insl
insl
loop
adc
rorb
xchg
push
mov
std
shll
cmp
jg
addl
inc
mov
sbb
sbb
ror
sbb
sub
jecxz
sti
in
std
mov
and
js
jmp
xchg
stos
lods
int3
out
in
pop
pop
out
dec
fists
cmp
jge
mov
push
push
shrb
add
sub
cmp
repnz
mov
xor
adc
fimuls
xchg
or
int
repz
cmpsb
mov
sub
imul
clc
ljmp
je
dec
mov
je
jmp
mov
sbb
jecxz
sub
dec
jmp
push
sbb
xorb
sub
fdivl
cmc
outsl
sub
sbb
mov
add
push
jns
dec
push
test
adcl
and
mov
ret
lahf
sub
pop
mov
scas
dec
adc
aam
xchg
lret
pop
pop
pop
rorb
mov
in
and
sbb
inc
mov
iret
jno
icebp
dec
mov
iret
add
lds
jbe
sbb
mov
jne
push
test
push
hlt
inc
push
push
mov
jl
xchg
add
push
sub
push
push
xor
and
test
mov
aad
push
sbb
lds
sub
add
adc
imul
cmp
cmp
in
jge
cmpb
je
lea
xchg
clc
das
pop
ror
add
sub
out
add
out
lea
sbb
fldt
add
dec
mov
and
jmp
fstps
ljmp
std
inc
inc
testl
add
movsb
cs
loop
xor
sbb
test
push
jp
push
jl
aam
pop
nop
shr
and
setp
pop
jmp
sbb
mov
mov
push
out
subb
idiv
test
scas
inc
cld
mov
push
add
mov
adc
adc
cmp
pop
mov
fs
inc
shll
xor
adc
or
int
dec
or
sbb
or
pop
xchg
adc
or
pop
push
fs
xor
into
mov
mov
mov
mov
stos
cwtl
sbb
icebp
movb
cmpsb
xchg
sub
repnz
or
inc
rcrl
cmp
mov
pop
sub
add
sub
jle
sub
add
rol
fs
add
push
imul
jns
add
add
test
pop
inc
jns
jbe
push
sbb
add
test
mov
or
and
add
pop
adc
in
and
mov
rorl
ret
jl
mov
hlt
arpl
cmp
add
pop
paddsb
mov
mov
jmp
mov
dec
jns
xor
jmp
mov
cmc
pop
and
sub
push
cmp
cli
fdivrp
je
cmp
jge
xor
cmp
jo
push
sbb
lret
cmp
into
clc
cmpb
and
loop
fmuls
popa
sub
mov
cmpl
xchg
adc
call
clc
aaa
inc
pop
or
pop
mov
int3
mov
mov
pop
jbe
lea
and
stc
jne
lgs
lahf
xor
cmp
hlt
inc
sub
inc
roll
cmp
and
push
sbb
and
gs
popf
adc
jg
repnz
cmp
leave
popa
icebp
cmpsb
jge
sub
push
loop
mov
or
jg
cmp
add
pop
inc
cld
cmp
iret
repz
mov
mov
lock
or
inc
pop
xlat
lret
xor
shr
movsl
lahf
dec
mov
mov
sub
xchg
jo
sbb
mov
sub
repz
lods
cmc
lea
xor
add
add
sbb
pop
dec
jns
popa
rorl
sub
xchg
jle
je
jmp
jmp
sbb
in
sbb
cmp
jns
int
push
insb
mov
jle
int3
mov
cmp
cmp
mov
jl
push
sub
add
lods
sbb
push
push
std
pushw
cmp
mov
jl
cmp
jl,pt
clc
inc
push
mov
ljmp
in
pop
inc
dec
cmpsb
std
jge
cmp
adc
xchg
loop
mov
stos
jb
mov
inc
sub
es
stos
inc
pop
inc
inc
aam
push
test
mov
add
and
xor
mov
aad
pop
lcall
mov
cs
mov
rclb
mov
mov
negb
shlb
sbb
cli
sbb
cmp
les
mov
scas
sbb
mov
sub
sbb
sbb
jmp
fimuls
out
or
leave
ja
je
subps
rolb
or
or
data16
pop
and
pop
aas
add
out
mov
shr
shlb
push
sbb
aad
and
and
add
mov
ljmp
ss
add
sub
pop
add
pop
add
and
dec
sub
sbb
xchg
xor
dec
or
in
pop
in
adc
inc
cmp
push
and
lock
adc
sub
add
push
add
in
xchg
out
fmulp
cmp
or
push
addl
inc
mov
stos
sbb
dec
stc
sbb
sbb
add
sbb
fs
mov
push
out
jno
aas
push
xchg
pop
cmp
push
and
aas
repnz
mov
cld
inc
je
xor
arpl
xchg
jl
rcll
ret
push
push
sarb
mov
test
mov
mov
pop
adc
mov
in
cmpsb
add
mov
pop
jmp
push
add
sub
sub
jge
mov
movsl
jne
sbb
add
inc
push
xor
sbb
sbb
loopne
push
add
fwait
xor
add
push
outsl
les
add
add
adc
outsb
jb
mov
inc
rcl
nop
or
and
push
bound
out
cmp
and
jecxz
shll
jb
test
outsb
mov
jae
adc
jnp
xor
fwait
xor
xchg
imul
push
notb
add
push
jge
jg
pop
ss
aaa
outsl
cmpb
ds
dec
call
mov
or
sbb
adc
and
pop
adcb
es
add
mov
inc
les
dec
aaa
ss
jge
lea
mov
scas
xchg
lock
mov
add
in
or
dec
or
inc
jmp
adc
xchg
dec
sbb
mov
fcompl
jmp
gs
pop
mov
pop
pop
pop
loopne
push
inc
pop
inc
mov
dec
xor
stos
stos
les
mov
rcll
jne
ds
test
add
jo
pop
push
sbb
push
in
outsl
push
mov
push
adc
stos
xchg
jo
xchg
adc
add
mov
sub
outsl
pop
pop
into
je
repnz
test
insl
jmp
push
add
les
push
adc
pop
mov
xchg
push
pop
push
mov
adc
clc
mov
mulb
jno
xchg
iret
popf
incb
popf
mov
in
rolb
inc
sbb
push
mov
std
jb
lods
inc
push
adc
jl
sbb
dec
add
push
mov
je
xchg
xchg
adc
cmpsb
adc
add
push
push
std
or
stos
loopne
mov
push
rcrb
mov
jle
xor
push
incl
imul
inc
push
adc
sbb
ffreep
cmpsl
or
add
add
out
xchg
mov
and
lea
xchg
fiaddl
outsl
pop
adcl
pop
dec
mov
ret
sbb
adc
icebp
ret
je
adc
inc
je
dec
pop
pushf
insl
xor
cmp
je
ss
cmpsl
fstl
sbb
dec
dec
std
pop
mov
popa
inc
dec
outsb
xchg
mov
mov
aam
mov
jo
add
push
and
pusha
mov
inc
sub
add
add
adc
jmp
dec
cmp
mov
jl
inc
nop
cmpsl
dec
cmpsb
insb
sub
push
sub
pop
cmpsb
rcrl
dec
nop
jo
dec
movl
push
jo
cs
std
ret
mov
and
jl
or
xor
push
pop
mov
add
inc
stc
mov
lods
pop
mov
xor
mov
cmp
mov
call
cs
pusha
cmp
dec
js
in
mov
adc
push
mov
gs
in
push
inc
and
loope
xor
inc
pop
sahf
cmp
es
xor
movlps
daa
jno
lods
jl
fstpl
in
add
roll
imul
adc
add
jae
push
dec
je
dec
jne
insb
in
jge
je
jmp
inc
push
add
mov
sub
shlb
je
dec
jne
mov
add
arpl
js
add
xor
sbbl
xchg
xlat
sbb
insb
fs
loope
cld
lods
pusha
ret
lea
pop
les
pop
inc
cmovbe
and
mov
add
sbb
push
push
icebp
push
stos
inc
fs
inc
push
sarb
divb
add
adc
cmp
jp
movb
test
mulb
into
xor
test
shl
dec
stos
out
inc
pop
push
repz
jae
pop
pop
test
pop
mov
nop
je
int3
push
push
jmp
stos
mov
and
push
push
out
mov
cmp
add
xchg
data16
or
jmp
cmp
lea
not
push
xchg
xchg
aas
out
push
daa
pop
xor
sub
adc
push
mov
lcall
push
out
repnz
stc
xchg
xor
or
test
nop
sbb
cmp
pop
arpl
pushf
cmp
add
and
insb
or
lock
les
mov
mov
or
rolb
pop
jge
xchg
push
or
cld
pop
adc
insb
xchg
adc
popa
inc
sbb
xor
and
adc
xchg
push
and
mov
movsb
repnz
or
test
sub
pop
pop
sahf
orl
or
or
cmp
pop
cmp
pop
adc
movsb
shl
sbb
pop
push
or
adc
pop
add
jmp
cwtl
ret
lods
cmp
loope
adc
ja
add
loope
pop
movsb
xchg
aas
fs
je
outsb
lds
popf
stos
sub
push
cltd
bound
push
mov
adc
out
or
lcall
cmp
cmp
pop
out
sub
push
or
dec
mov
inc
pop
xchg
or
sbb
not
and
jecxz
clc
add
push
push
push
jo
xchg
pop
cmp
loopne
jbe
jne
out
mov
pushf
adc
in
es
jb
test
dec
add
xchg
pushf
pop
pop
push
push
add
xor
and
dec
and
loopne
or
ret
mov
pop
ja
jle
mov
ja
scas
sub
inc
cmp
inc
pop
add
sti
push
dec
cs
adc
gs
add
pop
incl
pop
mov
movsbw
jbe
mov
lock
popa
lret
je
pop
or
aaa
or
test
pop
loop
arpl
bound
sbb
cs
push
push
inc
push
js
sub
mov
or
sti
sbb
pop
sub
mov
pop
inc
es
inc
call
test
pusha
sbb
dec
jle
jmp
adc
mov
dec
cmp
inc
repnz
cmpsl
sti
mov
lea
inc
insb
mov
add
ss
daa
mov
adc
dec
or
stos
lea
movsb
pop
bound
push
xchg
push
mov
lcall
or
lods
cmp
push
xchg
push
and
mov
xchg
popa
mov
sub
mov
cltd
cmp
pop
lods
add
push
test
dec
out
sub
loop
loopne
pop
sbbl
or
fstpt
pcmpgtw
mov
or
sub
add
sub
fadd
fildll
add
lods
pop
add
js
sub
outsl
push
jae
pop
and
clc
sbb
xor
shrb
lods
test
dec
js
jecxz
add
adcl
or
ljmp
xor
mov
cmp
clc
mov
or
push
cmp
mov
jmp
jb
testb
inc
push
or
dec
fiadds
in
sbb
push
xor
add
fcmovne
adc
rcrl
imul
and
jmp
gs
add
or
jmp
scas
and
xor
sub
je
or
and
test
test
inc
in
mov
or
jne
push
or
mov
pop
leave
scas
incl
movsl
adc
add
push
movl
pop
fs
pop
dec
in
mov
loop
inc
add
push
loop
jmp
pop
pop
mov
mov
cmp
pop
int3
jmp
lock
call
pop
mov
mov
xor
or
mov
push
xor
adc
pop
cmp
stc
int3
adc
nop
pop
enter
pop
insb
subb
sub
jle
dec
fildl
lar
mov
clc
cltd
and
and
popa
call
push
mov
push
push
call
and
mov
test
aaa
or
in
pop
adc
test
inc
sub
bound
or
lods
and
in
and
xor
xor
mov
pop
or
mov
cmpb
xchg
inc
adc
das
lods
add
cmp
push
nop
pusha
testl
sbb
shrl
fwait
std
and
xor
dec
pusha
cli
sarl
add
add
and
out
add
cmp
ds
in
mov
dec
or
test
jmp
inc
sub
mov
orb
mov
and
push
lock
dec
aaa
fwait
sbb
or
in
mov
jb
cmpsl
std
mov
hlt
sub
rclb
add
push
pushf
push
int3
push
sub
jl
data16
xor
jne
and
push
cld
push
push
das
fsubrs
cmp
inc
jge
fldpi
inc
cmp
shl
push
push
dec
fmul
mov
loopne
and
mov
out
adc
sbb
mov
and
into
xor
pop
int
mov
pop
cwtl
mov
cmp
cmp
sar
sub
inc
fmull
call
xor
add
rclb
cld
cmp
pop
or
push
insb
cmp
ffree
je
adc
shrb
out
loop
outsl
ss
mov
and
add
adc
add
pop
sbbl
add
fstpt
jo
mov
out
inc
adc
sub
mov
mov
pop
or
add
pop
adc
inc
cli
test
jne
mov
mov
or
or
pop
cmp
loope
lret
cmp
shlb
sbb
pop
sub
sbb
enter
insl
rorb
mov
inc
jl
push
add
jl
enter
or
or
inc
jg
sub
int
inc
xchg
sub
add
push
add
or
loop
push
cmp
xor
loop
or
or
add
std
dec
push
lods
dec
adc
xchg
add
imull
or
mov
xor
adc
ret
cli
pop
ja
jmp
xor
and
sbb
mov
test
pop
push
mov
pop
addr16
xchg
sbb
push
pop
mov
mov
add
shr
sbb
addb
test
or
hlt
paddsb
dec
loopne
sbb
loope
cmp
mov
add
mov
push
mov
filds
fisttpl
arpl
cmp
or
mov
test
sub
or
push
xor
inc
cmpsb
aam
loopne
xchg
addr16
jecxz
adc
int
das
shl
push
sbb
mov
insb
mov
arpl
adc
add
or
insl
dec
iret
ja
dec
rolb
cld
adc
out
ficoms
outsl
mov
pop
or
add
popa
jns
fcomps
fisttpll
sub
pop
adc
lret
cmp
and
and
jnp
add
push
fmul
fadds
stos
jmp
ret
jmp
sub
fdiv
sub
lret
add
cmpb
pop
sarb
jns
test
xchg
or
jnp
lods
imul
push
fimuls
std
popa
xchg
cmp
add
xchg
rorl
xchg
adc
inc
pop
sbb
push
loopne
push
cli
xor
repz
push
clc
mov
ret
gs
jle
or
xchg
mov
xchg
mov
mov
dec
pop
and
aad
movsl
lret
or
pop
lods
lea
sub
in
repnz
mov
mov
xchg
jecxz
je
lcall
mov
jae
lock
in
fdivrs
addb
adc
xchg
pop
add
mov
xor
add
push
mov
and
sub
pusha
pop
fmul
leave
je
es
jo
sub
or
mov
jmp
xchg
xchg
lar
mov
out
mov
cld
xor
or
fstps
jmp
cmp
mov
out
dec
adc
je
cld
mov
cltd
sahf
push
fmull
fstl
sbb
add
or
movsb
xlat
xabort
or
ljmp
inc
lock
movw
mov
aaa
adc
jno
push
bound
sub
test
or
mov
jne
push
dec
add
mov
dec
dec
ds
loope
add
add
test
fstl
adc
push
movl
sarl
ljmp
xor
cmp
das
jmp
mov
aam
insb
or
lahf
jl
mov
clc
push
lcall
jnp
mov
add
lcall
or
add
enter
sbb
jne
push
lock
or
inc
adc
sub
sub
cmp
mov
add
mov
sub
pusha
xchg
loopne
subb
in
push
test
dec
mov
adc
inc
jnp
out
pop
lods
pop
push
in
cmpsb
or
push
sti
into
xor
in
stos
in
xor
out
sarb
mov
je
add
fwait
stos
fstp
bound
jmp
or
data16
cmpsb
and
dec
test
jnp
cmp
push
sub
ds
dec
in
push
stos
jmp
push
movsb
add
pop
cmp
jne
test
lea
push
notb
imul
mov
decb
push
or
push
sbb
xchg
sbbl
enter
movl
cmp
fidivl
lods
in
std
les
pop
loop
dec
inc
les
loopne
mov
adc
sarb
movswl
andl
cmp
adc
and
enterw
ficompl
inc
or
je
sub
push
shlb
cmpsb
jne
rclb
lcall
icebp
pop
ja
adc
and
test
or
adc
sarb
sbb
hlt
pop
adc
int
ss
or
clc
push
xor
adc
int3
sbb
or
lea
sub
or
jmp
sub
repz
or
ret
jle
mov
int3
lods
jp
call
js
scas
leave
movsb
shl
push
int3
rol
mov
rcll
notl
lahf
mov
xchg
enter
icebp
adc
push
or
fadd
lock
sub
add
xor
hlt
pop
sub
ret
mov
mov
mov
xchg
dec
or
shlb
js
repz
shl
ja
mov
orb
scas
test
into
in
pop
mov
pop
int
adc
mov
mov
negb
or
and
sarb
push
fcoms
mov
loope
out
xor
xor
adc
test
lea
mov
aaa
sarb
lahf
pop
xchg
hlt
adc
cmpsb
cmpsl
cmp
pusha
fmul
hlt
shlb
adc
dec
pop
shrb
cli
subl
adc
or
mov
cmp
push
push
sub
in
mov
and
cs
pop
cwtl
push
shr
cmpsb
mov
and
inc
mov
adc
je
mov
push
bound
and
inc
and
testl
inc
mov
xor
dec
lods
fmuls
aad
out
rcrl
outsb
pushf
add
sub
add
jbe
imul
lock
add
mov
mov
faddp
cmpsl
dec
add
inc
or
fistpll
sub
movb
dec
dec
push
or
test
jne
test
gs
sub
inc
clc
inc
lea
mov
std
dec
dec
fmull
imul
outsl
cld
pop
and
add
inc
sub
mov
mov
sbb
dec
je
adc
sbb
push
add
mov
cwtl
lods
cmp
add
or
sarl
fsub
add
push
xor
test
push
or
dec
inc
add
adc
jns
lret
fmulp
dec
je
push
popa
andl
mov
lods
push
enter
add
dec
pusha
push
add
mov
adc
lds
xchg
mov
inc
imul
movsb
xchg
push
gs
pop
xchg
add
ret
xchg
mov
mov
outsl
icebp
aaa
je
jle
sbbl
lock
push
pop
out
call
jmp
ss
fmul
push
insb
leave
sbb
mov
xor
pop
addb
mov
xor
stos
ret
aas
cmp
je
ds
add
cli
jne
movsl
outsb
or
int3
pusha
cld
adc
call
push
popa
loop
in
mov
push
cmp
mov
inc
mov
dec
nop
and
add
and
cmp
movsl
mov
xchg
pop
mov
jae
pop
push
and
shll
dec
dec
push
and
mov
ret
pushl
mov
sub
adc
iret
mov
movsb
xchg
xor
push
push
sbb
fidivl
out
push
lea
adc
in
push
or
ljmp
push
adc
push
or
or
sbb
xchg
push
sbb
mov
sbb
fdivrs
insb
test
testb
xchg
push
pop
mov
dec
adc
sbb
shl
outsb
test
add
call
enter
or
dec
repnz
shrb
sbb
or
sahf
adc
pop
lds
pop
out
lahf
jp
mov
sbb
test
mov
mov
push
xchg
inc
scas
fcompl
cmc
pusha
cmp
mov
repz
mov
xchg
fwait
pop
xchg
repnz
icebp
and
pop
lock
cmp
outsl
cmp
roll
push
loop
add
rorb
sbb
fnsave
in
mov
idivl
jae
fcoms
imul
mov
cltd
cmp
or
pop
push
sub
stos
sub
cld
mov
iret
lret
pop
sbb
xor
push
adc
dec
push
pop
mov
push
push
cmp
push
and
push
lods
xor
dec
sub
pop
or
in
out
adc
or
push
inc
insl
jmp
xchg
mov
movsl
jl
jno
inc
jg
or
push
sub
jb
mov
lahf
add
pushf
push
push
or
aam
cmp
dec
sbb
mov
mov
cwtl
pop
add
add
outsl
loop
push
gs
cmpb
jae
cld
dec
popf
mov
or
cltd
sbb
mov
sbb
mov
push
insb
adc
dec
and
add
add
push
cs
cmpl
mov
mov
sub
adc
mov
loopne
xor
bound
inc
adc
add
pop
aam
mov
or
sahf
add
enter
lahf
cmpsl
test
sub
cmp
mov
or
inc
lcall
gs
mov
mov
test
mov
push
add
in
popf
adc
ret
lret
decl
sub
push
fs
jb
add
mov
call
imulb
xchg
jl
cmp
or
int
shrl
adc
or
mov
lea
mov
sub
cmpsb
cmpsb
jmp
xchg
int
jae
push
pop
aam
pushl
sbb
push
cmp
out
mov
pop
loope
js
sbb
mov
add
push
or
ret
fucomi
gs
pop
push
aas
pop
xchg
and
js
popa
add
test
adc
pop
mov
subb
inc
mov
sub
xchg
cli
jae
lret
sbbl
fs
into
clc
add
sar
cmp
mov
out
or
mov
rcrb
fbld
add
push
or
rolb
adc
push
data16
ret
jno
call
data16
cmp
arpl
test
scas
lcall
and
jbe
sbb
jno
ret
pushf
repnz
add
sbb
fildl
push
xor
add
shll
insb
add
add
or
es
enter
mov
xor
adc
push
jno
add
rorb
adc
mov
push
shrb
sub
pop
inc
add
enter
rcl
sbb
and
sbb
xorl
mov
lahf
ret
jle
push
push
jbe
jae
daa
in
call
dec
sub
or
ja
inc
cwtl
push
pop
xor
sbb
call
push
popa
cwtl
jnp
xchg
mov
fwait
jb
and
push
inc
in
test
andl
xchg
fsts
dec
loopne
test
mov
sbbb
stos
sub
loop
and
add
xchg
sub
clc
out
jne
xor
xorb
int
andb
dec
jns
push
aaa
or
jge
aaa
sub
cmp
je
aaa
cld
leave
mov
mov
gs
xor
or
adc
orl
test
push
test
or
dec
jecxz
loope
fs
fidivl
mov
lahf
clc
xchg
or
and
stc
mov
ret
imul
mov
cld
je
mulb
push
push
aam
mov
enter
jl
leave
xlat
ja
cmp
js
cwtl
adc
xchg
sbb
push
dec
out
push
mov
sbb
pushf
popf
call
or
sbb
fcomi
addb
mov
in
mov
call
mov
pop
jnp
and
insb
cs
jne
jle
stos
add
push
adc
sub
mov
add
xor
fucomi
fisubrl
push
pop
lea
jge
sub
lea
stos
inc
dec
mov
or
popa
jg
jnp
push
push
push
and
xorb
roll
imul
lea
jmp
leave
int3
add
dec
sahf
add
test
push
je
mov
cmp
mov
mov
push
fdivrs
fbld
cs
std
or
jecxz
xlat
jge
pop
fisubrs
rcpps
inc
push
or
sub
inc
jmp
fsubrs
ret
cmp
movsb
loopne
lock
mov
std
push
inc
xchg
cli
adc
and
repnz
in
clc
mov
push
dec
cs
inc
mov
addb
mov
xor
adc
push
add
push
push
lea
mov
popa
mov
int
and
push
outsb
xor
inc
push
iret
sub
mov
sbb
aas
pop
push
mov
adc
mov
adc
outsb
sarb
js
mov
int
jno
iret
sbb
inc
adc
or
or
fcmovbe
clc
dec
arpl
ret
sarl
dec
movl
dec
in
jmp
pop
pop
adc
rclb
add
push
or
mov
lcall
mov
sub
test
fstl
mov
jg
adc
scas
fisubs
jle
clc
mov
js
sub
data16
jne
adc
sahf
cwtl
fsubl
mov
sbb
xchg
pop
dec
inc
push
je
pop
or
in
push
pop
mov
pop
lahf
mov
inc
or
rolb
scas
lods
cmpsb
add
push
or
loope
mov
xchg
mov
test
jno
mov
sbb
cmp
xor
call
adc
inc
arpl
call
je
repz
cli
sbb
cmpsl
clc
adc
jg
hlt
or
or
mov
popf
xchg
pop
movsl
mov
add
ja
add
jmp
insb
mov
jns
sbb
cmp
or
jns
add
outsb
sarl
les
jo
xor
mov
in
mov
aas
insb
push
out
push
dec
lods
fnstenv
sbb
std
nop
into
repz
mov
mov
jecxz
cmp
cmpsl
xor
push
xor
mov
push
or
xor
jae
addr16
or
jp
jo
pop
mov
test
sarb
test
add
or
push
dec
push
out
xor
movsb
sub
loopne
in
scas
addr16
jne
adc
sbb
pop
jecxz
xchg
jbe
add
les
and
pop
add
or
mov
insl
sbb
push
pushf
out
out
push
xchg
cwtl
sahf
push
movsl
lods
mov
nop
cs
pop
cmp
shrb
sub
test
push
mov
mov
and
inc
inc
repnz
js
push
pop
inc
jns
pop
outsb
bound
and
pop
xchg
movsl
cmp
lods
cmp
daa
add
sub
sub
add
add
jmp
inc
xchg
push
jne
scas
ret
loope
push
cmp
outsb
jns
xor
inc
and
xchg
in
jno
sub
sub
mov
cmp
sub
inc
and
fs
jecxz
mov
mov
jle
dec
push
push
and
ret
sbb
jg
addr16
lcall
push
popa
add
mov
adc
and
sbb
dec
lock
mov
push
push
and
inc
push
arpl
lret
into
cmpl
jne
push
je
xchg
lock
xor
mov
es
mov
push
jbe
push
cmpsl
push
rclb
int
xor
xor
outsb
sar
mov
insb
dec
sbb
pop
add
inc
mov
iret
jae
xor
xchg
xchg
outsl
and
or
in
dec
in
nop
pop
outsb
lcall
cltd
std
adc
les
or
and
les
push
adc
push
sbb
push
jne
xor
sbb
dec
inc
in
orl
push
push
push
sarb
adc
je
or
cli
dec
clc
int
cld
pusha
lea
push
add
pop
cmp
inc
jmp
lea
rorb
mov
push
cmp
inc
inc
bound
add
mov
jb
pop
repnz
adc
jnp
bound
sbb
push
js
adc
adc
ljmp
add
int
xor
xchg
add
scas
sub
push
movsl
add
ss
dec
sbb
pusha
lock
dec
add
movsb
popa
push
jns
lahf
orl
xor
jb
pop
sahf
adc
or
xchg
out
and
stos
fmuls
inc
inc
xor
push
stos
adc
rcl
push
movsl
int
fstl
cmp
push
push
xor
pop
rolb
mov
cld
pop
add
push
adc
loop
cmp
sub
push
sahf
adc
call
or
push
jb
aas
mov
jge
sub
inc
mov
or
pop
ficoms
inc
lock
sub
mov
pop
push
jmp
or
andl
jl
test
into
out
das
jp
push
cmp
out
setne
call
xor
imul
jae
sahf
inc
fistpl
jl
push
jle
cmp
in
xchg
push
cmp
lahf
add
pop
cmp
inc
pop
inc
popf
and
insb
sbb
test
push
mov
fiaddl
clc
xchg
data16
insb
mov
inc
pop
add
aaa
roll
inc
je
das
movsl
sbb
xchg
pop
xor
int3
lsl
dec
les
mov
cmp
out
scas
addl
lea
push
inc
push
inc
sub
or
or
mov
inc
outsb
cmp
mov
jnp
push
pop
or
call
popf
movsl
mov
daa
icebp
add
push
lahf
insb
cwtl
mov
fistpll
decl
test
push
pop
xor
fildl
or
inc
std
int
add
push
mov
cmp
jne
aam
xor
inc
push
xor
push
pop
push
in
mov
xor
mov
xchg
je
fdivr
bound
pop
nop
or
push
jne
sbb
jp
lods
xchg
mov
or
or
push
pusha
sub
insl
pop
call
xchg
mov
ret
sbbb
and
fdivp
aad
in
sbb
sbb
pop
clc
xor
clc
repnz
mov
mov
push
sub
pop
sbb
or
out
jne
test
lods
xor
fldenv
enter
xlat
xchg
sub
push
imul
lds
inc
test
insb
ror
mov
lea
fldenv
std
pushf
xor
xchg
cwtl
pop
imul
sbb
or
imul
xor
xor
into
xchg
push
mov
mov
sbb
xor
fistl
dec
dec
add
call
xchg
jmp
arpl
sbb
sbb
icebp
pop
clc
xlat
or
push
push
and
or
mov
movsl
lds
adc
push
adc
adc
add
or
mov
cmpb
shrb
hlt
mov
sub
outsb
fldl
sub
or
sar
push
ret
dec
xchg
out
add
adc
shlb
pop
mov
sub
mov
cmp
pop
and
mov
add
insb
xchg
pop
xchg
add
nop
pushf
pop
inc
mov
test
cld
stc
dec
ja
pop
pop
lahf
ret
pop
sti
push
enter
aam
push
ret
imul
or
roll
add
mov
leave
cmp
mov
sar
jo
inc
push
enter
mov
inc
cli
push
or
lahf
cmp
rolb
mov
lret
fstl
mov
jle
ret
iret
mov
in
inc
adc
out
int3
bswap
pop
into
or
adc
movl
sbbb
sub
inc
xor
cmpsl
jo
pop
pushf
insl
add
scas
add
cltd
or
es
mov
mov
push
testb
cmp
jne
sbb
mov
jge
in
push
inc
mov
mov
xor
xor
sub
pop
inc
loope
lea
clc
mov
and
adc
inc
aaa
pop
push
ret
inc
dec
and
test
pop
into
and
pop
pop
lahf
pop
dec
dec
jmp
push
pop
jno
inc
dec
mov
push
loopne
jmp
pusha
fsubs
dec
jecxz
mov
mov
lods
js
xchg
test
and
inc
js
or
mov
or
in
cmp
aaa
lahf
in
pop
loop
sbb
je
jne
sub
mov
or
je
xor
jbe
pop
out
loopne
cmp
ja
shrl
inc
or
add
into
sar
and
mov
scas
lods
pop
pushf
push
mov
cmp
test
push
and
shlb
or
dec
jle
mov
xor
push
jg
sbb
scas
xor
lods
mov
and
jle
or
push
pop
adc
ret
decb
pop
imul
ja
das
push
and
xor
aas
movsb
test
xchg
pop
lods
push
dec
dec
or
jg
sbb
or
or
adc
or
rcll
aas
and
adc
jmp
cmp
mov
jg
mov
int3
dec
mov
dec
movsl
loop
add
dec
push
mov
cld
xor
fimull
xor
mov
pop
addb
jne
das
mov
lea
cmpl
je
aaa
xchg
lock
lret
or
add
inc
cmp
das
je
test
mov
dec
adc
adc
cmp
mulb
lcall
sahf
out
fwait
test
pop
pop
jecxz
ret
jnp
add
js
fneni(8087
mov
push
hlt
mov
cld
fadds
pop
inc
mov
pop
push
pop
xchg
or
jp
or
or
jmp
push
push
out
sub
jle
pop
data16
adc
test
add
je
sub
out
mov
inc
dec
sbb
inc
dec
inc
jl
cmpsb
adc
inc
lahf
sub
pop
orb
daa
pop
sbb
pusha
pop
sub
dec
adc
sub
sbb
pusha
inc
aas
cmp
shr
push
push
daa
negb
xor
adc
sbb
jb
sar
adc
sahf
mov
jle
mov
mov
call
pop
add
gs
loopne
pop
mov
ret
pop
ja
scas
rcrb
out
cltd
insl
cltd
inc
data16
pop
clc
test
cs
inc
sbb
fcmovnb
xchg
mov
pop
or
sbbl
cmp
bound
inc
les
lret
aam
lea
push
test
cmp
adc
repnz
add
rcll
push
ss
dec
in
icebp
inc
push
cltd
push
call
sbb
jmp
and
jecxz
clc
lret
sbb
stos
je
test
add
and
adc
outsl
sbb
iret
imul
mov
fs
pop
cmp
xor
outsl
insb
andl
bound
dec
mov
add
leave
and
xchg
dec
mov
arpl
jno
ret
fwait
jo
xchg
jle
xchg
js
test
je
movsl
icebp
or
inc
jo
inc
imul
or
add
pusha
lcall
add
adcb
iret
jnp
sbb
sbb
mov
gs
arpl
neg
lahf
cwtl
repnz
xchg
or
cmpsb
or
add
adc
shrb
jecxz
orl
mov
mov
movntq
out
jl
push
lock
push
mov
sub
push
mov
xor
jne
aaa
lds
xchg
jle
insb
mull
jno
pop
ret
pop
mov
xchg
dec
push
jne
das
fists
push
stos
lock
enter
aam
pop
mov
imul
and
or
das
lret
sub
addr16
dec
fildl
outsl
mov
mov
dec
jle
insl
adc
cmp
sbb
sbb
and
cmp
push
or
push
loope
into
xchg
jge
pop
loop
pop
scas
outsl
test
or
test
mov
dec
add
xor
mov
addb
and
add
movl
jmp
lods
adc
imul
sub
filds
scas
jmp
shlb
mov
push
imul
pusha
push
sub
or
jno
mov
aam
adc
or
loopne
lods
sbb
rorl
sub
mov
pop
call
xchg
sub
cmp
dec
inc
mov
sub
adc
hlt
sub
add
jmp
add
push
cwtl
mov
pop
mov
test
push
jbe
pushl
inc
or
or
dec
adc
adc
jmp
adc
mov
mov
int3
mov
movsl
mov
inc
sub
dec
sbb
push
jb
xor
add
push
jmp
add
adc
inc
adc
push
mov
and
pop
sbb
in
fs
insb
push
and
xor
push
mov
sbb
jmp
adcl
lret
in
sahf
subb
or
mov
js
fcoml
inc
xchg
fdivl
dec
pop
loop
adc
pop
inc
ret
add
dec
jnp
inc
push
add
xor
xor
pusha
mov
stc
fists
mov
pop
enter
sub
mov
or
mov
push
xor
insl
xchg
fs
adc
push
test
push
and
mov
pop
adc
adc
fs
cmp
push
push
arpl
lret
and
push
push
repnz
test
je
push
sbb
scas
jnp
and
mov
test
or
sub
mov
loop
push
dec
js
adc
je
leave
mov
xchg
hlt
mov
dec
mov
sbb
push
push
inc
jp
outsb
sbb
xlat
push
push
into
ss
ret
ret
inc
xchg
push
mov
mov
mov
xor
inc
pusha
inc
xor
mov
dec
cmp
insb
out
leave
xor
and
mov
shrb
fldt
loop
jl
push
daa
movsl
inc
daa
lret
iret
and
pop
cs
mov
mov
add
mov
mov
fisttps
xor
cmp
jne
test
sbb
movsb
push
add
ret
mov
adc
xchg
add
loopne
inc
cmp
lea
fdivr
push
push
test
xor
aad
mov
scas
popf
sub
pushf
lahf
mov
mov
or
lods
jge
inc
xor
inc
inc
mov
mov
add
xchg
fiaddl
push
jg
sbb
and
push
inc
dec
flds
mov
bound
cmc
arpl
inc
cltd
push
add
xchg
inc
add
add
or
cltd
push
inc
xchg
out
test
jp
xchg
insb
notl
adc
push
pop
mov
les
mov
mov
jnp
add
leave
adc
ljmp
fidivrl
repz
sbb
push
in
ret
mov
and
or
shrl
in
inc
adc
jbe
pop
sub
sbb
xlat
push
sahf
cmp
stc
sbb
xchg
pop
enter
imul
cmp
xchg
pop
add
stos
and
dec
out
xchg
or
ficoms
lods
mov
pop
jmp
loop
test
nop
and
sti
mov
mov
sub
mov
jmp
sbb
sbb
cmc
push
movsl
mov
jp
xchg
push
mov
sahf
out
test
iret
repz
pop
stos
xor
loope
lahf
out
lcall
lods
xor
lahf
ja
push
popf
lods
lods
jg
dec
jl
sbb
push
adc
daa
test
pop
fdivrl
sarl
inc
inc
mov
movsl
pop
adc
cmp
inc
push
mov
adc
push
dec
dec
sbb
and
push
dec
xchg
pop
lret
rorb
fs
push
add
fcomp
sbb
insb
mov
jge
sub
jo
je
push
mov
andb
cmpsl
adc
push
mov
xorb
nop
dec
fisubrl
js
out
cwtl
mov
mov
sub
in
mov
repz
stos
mov
movsb
mov
imul
scas
sbb
sahf
out
sahf
insl
adcl
stc
or
mov
ds
jecxz
movsb
mov
sarb
test
in
lahf
xor
inc
mov
enter
or
and
scas
andb
or
jns
pop
add
repnz
mov
lods
das
iret
push
push
jle
cmp
mov
stos
test
add
and
dec
or
inc
push
push
test
jns
mov
leave
push
push
in
jmp
idivb
jmp
pop
inc
jl
daa
add
add
dec
sub
outsb
ja
and
lods
sub
add
fiaddl
jns
adc
popa
scas
sbb
loopne
mov
pop
and
push
shll
insb
clc
add
jo
jb
add
cmp
pop
in
cmpsl
and
pop
add
pop
leave
sub
pop
lock
adc
in
adc
sbb
push
movsb
add
lods
fmul
shl
xchg
ss
and
lahf
mov
add
push
mov
in
pop
cmp
inc
cmp
aaa
push
add
mov
inc
inc
jns
test
cmp
lsl
out
adc
add
out
mov
loop
cmpsl
pusha
loop
adc
jp
push
rolb
xchg
push
add
mov
pop
and
and
cld
int3
push
js
sub
jle
in
mov
and
stos
insb
xor
int3
jno
cmp
cs
aaa
xor
ja
dec
xchg
xlat
icebp
sahf
adc
lods
add
rolb
sbb
and
add
lods
cmp
mov
addr16
jb
repnz
pop
or
jg
cmp
leave
and
arpl
mov
mov
jo
sub
movsb
xlat
pop
int
or
add
pop
add
sbb
add
add
test
xacquire
mov
test
dec
test
jo
adc
mov
in
pop
decl
outsl
subl
sbb
add
jle
push
jg
fildl
sbb
dec
movsl
mov
ja
jne
cmpb
xchg
jl
add
pop
mov
imul
sbb
in
fistps
jl
push
or
sarl
ret
lea
pushf
testl
push
data16
or
pop
sub
mov
inc
mov
fsubrs
in
and
sub
xor
cmc
lea
scas
ret
ret
loopne
pop
push
loopne
rep
sub
scas
push
fistpl
arpl
rcl
cmp
pusha
cmp
cmp
repz
dec
inc
inc
push
pop
and
rclb
mov
push
insl
or
mov
mov
and
lea
sub
sub
sub
pop
adc
xlat
or
mov
pop
dec
or
add
add
inc
or
or
fidivrs
jg
mov
lds
into
xlat
and
cmp
jg
mov
push
and
imul
mov
jp
push
cmp
aaa
add
fstpt
push
adc
icebp
or
scas
jns
test
je
xchg
fstp
fsubrl
and
fisttpll
fmul
mov
dec
add
sbb
adc
call
mov
cld
clc
insb
cltd
dec
and
mov
shl
sbb
call
push
movsl
sub
lock
pop
push
daa
jg
testb
add
sub
xchg
and
jle
addb
add
push
sub
js
out
push
or
sbb
repnz
inc
pop
add
vsqrtss
or
aaa
imul
cmpsl
add
mov
into
cmp
jge
lea
cmp
or
xchg
mov
mov
xchg
movsb
xchg
push
lret
pop
test
or
ret
push
or
loopne
ljmp
push
xor
out
ret
sub
push
and
imul
scas
add
inc
sbb
add
mov
mov
pop
push
push
cli
je
repnz
add
cmp
sub
mov
popa
leave
leave
cmpb
cltd
cmpsl
inc
mov
or
fdivs
cmpsl
incb
mov
xor
xor
xchg
stos
add
mov
cmpl
push
arpl
push
pop
ret
sub
push
pop
jg
in
xor
inc
leave
sbb
scas
jg
pusha
loopne
ss
iret
fisttpll
add
push
pop
mov
and
add
dec
inc
or
cwtl
sbb
cmp
loope
sti
sub
sbb
mov
pop
or
clc
cmp
jle
jmp
and
pop
mov
sbb
sub
imul
mov
nop
adc
add
icebp
sub
mov
arpl
dec
movsl
adc
insb
mov
adc
push
push
js
mov
inc
jo
and
jl
xorb
cwtl
push
sbb
push
mov
neg
sub
adc
add
xchg
adc
iret
adc
sub
mov
mov
pop
inc
sahf
dec
fidivl
add
sub
outsl
add
jp
cmp
sub
push
xor
sbb
adc
stos
sahf
xchg
push
ja
or
mov
imul
sbb
arpl
scas
inc
jne
xchg
add
lea
mov
and
lods
and
mov
pop
mov
insb
insb
mov
xchg
das
xor
je
cmp
mov
push
cmpsb
fcompl
push
js
dec
dec
pop
aad
repnz
les
ret
lret
add
sbb
mov
push
arpl
cmpb
mov
push
je
bound
jl
lods
or
mov
add
inc
pop
xchg
mov
mov
push
cmp
sbb
clc
jl
scas
arpl
dec
add
rol
mov
ret
pop
sub
dec
sbb
fdivrl
cmp
adc
push
ds
pop
pop
loop
push
lcall
adc
rol
popa
push
scas
imulb
ds
cmp
enter
push
ds
or
or
jl
mov
js
push
adc
sub
and
lods
mov
outsl
sbb
add
or
movsb
js
push
fs
xor
mov
jo
mov
sti
add
cmpsl
into
adc
add
leave
jle
test
or
jmp
pop
lods
mov
push
and
or
scas
pusha
ja
or
aas
lods
fisttps
xor
cmp
sub
add
sbb
test
sub
clc
push
fwait
hlt
sbb
insb
ss
cld
jne
call
adc
sbb
inc
in
sbb
jge
stos
cmp
test
jl
les
jnp
ret
fisttps
cmp
jmp
aam
push
push
jns
out
dec
inc
push
dec
dec
xorb
ret
sub
push
arpl
scas
or
push
cmp
cmp
cmp
sub
push
or
inc
ret
and
loope
xchg
push
dec
and
hlt
xchg
dec
jmp
sahf
push
mov
push
push
add
ret
adc
dec
pop
pop
shl
mov
mov
adc
add
hlt
das
je
lock
push
ds
ret
hlt
jle
dec
xchg
lret
movd
add
mov
mov
adcl
popl
stc
sbb
iret
add
dec
xchg
inc
sarb
mov
xchg
mov
mov
cld
and
es
pushf
or
imul
push
fisubrl
or
pop
sub
lahf
sub
adc
cwtl
pop
popa
adc
push
mov
sarb
add
xchg
or
rcrb
jo
dec
ds
call
and
xor
outsb
ficomps
movsb
jmp
sbb
sar
aas
es
cmp
je
mov
test
sub
into
add
int
loop
inc
sub
mov
dec
push
pop
push
push
bound
push
ret
cmp
hlt
mov
ds
xchg
xor
add
outsb
outsb
fs
outsb
mov
bound
and
in
and
pop
or
add
aas
sbb
or
enter
pop
in
or
push
and
and
stos
sbb
dec
and
push
out
push
mov
pop
inc
pop
inc
pop
loop
and
inc
les
cmp
ret
loopne
adc
sbb
pop
push
xor
xchg
push
aam
mov
jb
fs
and
movsb
dec
sub
mov
jmp
push
push
and
add
sbb
add
or
push
mov
and
imul
testl
pop
dec
pop
stos
sbb
push
sub
push
jmp
push
sbb
cmpsl
jge
je
rol
cld
dec
fwait
cli
push
mov
or
es
push
neg
sbb
and
jo
xor
jle
jns
jmp
lds
sub
xchg
fsubr
imul
push
das
push
pop
add
push
xor
jl
je
mov
scas
add
push
push
jmp
or
mov
push
inc
addr16
mov
jo
and
iret
in
lcall
fsubr
je
dec
sub
sub
push
mov
push
push
push
xchg
outsl
mov
loop
cld
sub
sub
pushf
mov
aam
cmp
jge
sub
or
dec
fmuls
lret
adc
data16
pop
int
xchg
sub
xor
and
arpl
sub
adc
inc
add
and
lods
push
sub
mov
lret
or
inc
mov
sub
imul
cmp
arpl
mulb
jl
cmp
pop
jecxz
pop
cmp
mov
and
push
scas
pop
ja
enter
addb
sub
push
push
sbb
or
sub
leave
adc
add
out
sar
ja
decb
add
pop
mov
imul
and
mov
and
sbb
jo
loope
mov
js
ret
pushfw
or
dec
sub
stos
aaa
cmc
push
outsb
push
out
repz
push
jmp
ret
mov
push
xchg
and
inc
addr16
mov
adc
inc
les
cli
les
mov
cli
mov
push
scas
dec
lahf
pop
sub
test
repz
lock
add
xor
leave
inc
push
sub
ret
enter
or
jmp
and
rol
sub
xchg
cmp
and
pop
add
xor
loope
mov
leave
sub
xorb
ds
sub
xor
cs
call
mov
xor
add
push
sbb
ret
jns
dec
pushl
call
mov
lock
sub
rolb
sbb
mov
fnsave
out
iret
and
and
addb
inc
je
inc
cli
inc
movsl
jg
ja
leave
mov
movsl
mov
sub
rorb
mov
push
jle
adc
jno
and
adc
mov
sbb
mov
adc
jmp
cmp
sub
dec
dec
cwtl
mov
xchg
dec
out
call
jne
inc
inc
jg
lcall
loope
pop
mov
and
add
and
adc
dec
or
inc
lock
adc
xchg
cmp
adc
xchg
pop
sbb
sbb
dec
sub
lcall
nop
cmpb
sbb
scas
and
mov
cmc
adc
adc
dec
or
les
jp
shll
mov
out
clts
bound
push
inc
or
in
pushf
insb
dec
push
imul
cmc
sub
inc
mov
mov
out
adc
mov
and
pop
pusha
mov
and
sbb
sbb
dec
adc
cmp
inc
pop
shrb
inc
jp
or
mov
adc
jmp
or
xor
add
or
inc
fwait
push
je
xchg
loopne
jb
dec
sub
push
sub
movsl
ret
xchg
sbb
loop
and
xchg
mov
jo
incb
push
push
pop
mov
dec
ds
jmp
mov
aam
std
in
inc
or
das
shrb
or
add
xchg
push
out
adc
adcl
es
iret
or
push
push
das
inc
pop
pusha
sbb
cmpl
test
mov
xchg
cmp
push
lea
jge
adc
jg
ret
inc
je
mov
inc
pop
cmp
int
mov
push
and
xorb
ss
mov
arpl
ficompl
cmp
and
sbb
jb
bound
pop
pop
mov
addr16
mov
inc
in
lods
dec
inc
lret
mov
mov
jg
xchg
or
mov
nop
push
inc
shl
icebp
push
mov
out
push
and
int3
and
cmp
leave
adc
popa
sub
lea
adc
cwtl
dec
push
pop
jmp
lods
dec
fildl
into
push
lcall
rcrb
add
mov
setl
repnz
xor
push
mov
pop
sahf
lret
add
pushf
xor
mov
or
inc
sub
or
popl
push
or
xor
push
iret
aam
push
mov
loope
rcrb
repnz
add
inc
lcall
xor
repz
push
dec
sub
fstl
inc
lods
roll
ret
int
insb
cmp
rcrl
roll
xor
repz
push
mov
mov
pop
and
dec
testb
movsbl
push
call
cmp
adc
push
jmp
pop
out
sub
cmp
dec
jnp
pop
inc
pop
push
push
sub
xor
or
je
pusha
inc
cs
sub
cmp
test
adc
and
mov
xor
mov
sbb
dec
push
loope
out
insb
mov
dec
loope
mov
mov
dec
push
add
dec
sahf
push
out
xorb
push
or
pop
jne
add
ror
iret
or
sbb
shll
leave
lret
push
cltd
or
push
lahf
push
push
xchg
push
jo
jnp
dec
pushf
jecxz
sbb
pop
pop
or
andb
pop
pop
mov
ja
cs
pushf
adc
out
mov
orl
lret
inc
sub
fsubl
cmp
mov
xor
cmp
lock
dec
xchg
insl
mov
fpatan
pop
xor
mov
test
and
sub
inc
sbb
adcl
jl
push
enter
jo
shlb
xchg
aas
inc
js
dec
jl
jno
push
mov
push
loopne
add
js
push
inc
arpl
filds
add
dec
add
add
sub
add
stos
push
ror
fadds
ds
nop
stc
xor
cmp
jno
pushf
cmp
and
test
add
mov
daa
push
inc
jp
cmpsl
cmp
int3
inc
lock
push
pop
ja
jmp
out
in
std
pop
sub
ja
jmp
add
adc
dec
jmp
add
or
sti
cli
cmp
je
hlt
dec
push
cmp
pop
add
lret
sahf
push
fiaddl
push
jle
aam
mov
jne
inc
push
rclb
sbb
aam
xchg
dec
push
pop
lea
lods
orb
and
insb
insb
roll
adcb
push
popf
sub
out
pop
mov
mov
test
xchg
aas
push
pop
lahf
cmc
dec
inc
xor
sub
sbb
fmuls
push
out
sahf
out
push
pop
popaw
inc
mov
aad
dec
fdivrs
and
or
call
xor
push
push
mov
add
mov
je
push
adc
mov
jns
pop
push
and
cmp
sbb
pop
les
add
je
pop
les
push
cmpl
push
mov
scas
sbbl
into
pop
mov
inc
lret
sbb
dec
inc
pushf
filds
mov
jg
pushf
lret
or
push
fistps
mov
dec
loope
pusha
enter
hlt
clc
rcr
les
nop
lret
lret
stc
pushf
sub
aam
ret
sub
into
into
ljmp
sub
push
fnsave
mov
sbb
or
push
jecxz
or
shrb
push
ja
pop
jb
into
flds
xor
lret
lock
cmpb
mov
push
call
sub
scas
mov
fs
mov
jne
out
loopne
lea
mov
xor
cmp
aad
push
adc
orb
movsb
insb
out
in
mov
int3
add
sbb
push
inc
dec
lods
cltd
je
rcrb
in
sbb
dec
movsl
aaa
jg
mov
jg
xor
or
pop
sarb
and
cmpl
push
or
cmp
jmp
jb
cmp
inc
push
dec
mov
or
xor
xor
xchg
in
push
clc
inc
leave
add
inc
aas
nop
fs
push
cmp
jne
mov
inc
add
unpcklps
inc
jmp
dec
leave
lock
mov
mov
mov
cmp
push
push
mov
leave
repz
pop
pop
cld
jnp
push
dec
mov
sbb
mov
push
inc
icebp
pop
inc
dec
mov
push
jmp
inc
test
push
xchg
sub
add
jmp
scas
inc
dec
mov
inc
jg
pop
ljmp
xlat
add
sub
stos
pop
lcall
add
push
outsl
push
aas
dec
pop
cmp
outsb
in
rcr
mov
sub
ficompl
add
stc
xchg
imul
push
rolb
cmpsl
rorl
add
pop
jb
cmc
push
adc
jl
mov
mov
popf
cmp
movsl
cmp
push
push
lea
sbb
cmp
add
dec
inc
or
inc
lret
jno
xor
adc
mov
ret
fdiv
fwait
icebp
pop
rorb
dec
sbb
push
mov
cwtl
adc
nop
xor
mov
mov
pop
mov
addb
push
enter
es
cmp
adc
jne
push
inc
pop
push
loop
dec
add
stos
and
jl
sub
adc
and
sbb
add
sahf
movsl
dec
popa
xorb
inc
dec
pusha
or
pop
add
push
daa
or
ret
aaa
mov
cmpsl
jmp
sub
test
sub
pusha
add
shlb
movsb
sbb
sbbl
cmp
rcll
lods
push
lea
push
fmuls
jg
add
add
xchg
jecxz
dec
cmpsb
push
and
sbb
pop
mov
data16
xchg
lock
dec
dec
rcl
sbb
inc
movb
movl
aaa
or
dec
push
cmp
mov
or
xor
aas
out
mov
xchg
bound
testb
bound
aas
test
or
mov
imul
mov
push
aas
push
and
dec
mov
arpl
add
faddl
cmc
fistpll
push
or
rcrl
xor
push
decl
jl
repnz
rcll
pop
mov
dec
out
arpl
xchg
xlat
pop
add
jne
addb
jp
push
mov
mov
rcrl
dec
fldl
ret
fcmovnu
xchg
mov
fwait
aas
aam
psrld
jl
and
cltd
test
lahf
outsb
inc
push
and
add
mov
rorb
mov
jno
fisubrl
or
sub
adc
pop
lahf
pop
jb
rcll
add
mov
xor
add
xor
jne
inc
call
add
pop
dec
pop
aad
pop
das
sti
mov
std
arpl
add
jle
sbb
dec
mov
int3
fwait
leave
mov
loope
bound
lea
test
and
or
sbb
aam
adc
pop
fadds
pop
add
in
sub
xor
push
add
sub
mov
or
or
mov
xchg
xor
add
mov
inc
xor
inc
out
dec
push
xor
loope
inc
inc
loopne
xor
or
or
adc
inc
divb
push
ret
jne
and
and
push
mov
add
add
nop
test
outsb
lahf
aas
sub
push
pop
test
push
push
add
sub
cld
mov
addl
dec
mov
adc
and
insb
and
jne
sub
pop
insb
cmp
push
or
adc
adc
push
inc
adc
mov
pop
in
int
pop
inc
inc
jmp
sbb
js
add
mov
or
mov
inc
mov
lret
push
and
jns
push
add
add
sbb
mov
and
and
orl
add
clc
dec
lret
or
dec
sbb
push
inc
mov
add
orb
pop
push
mov
stos
xor
outsb
daa
or
xchg
mov
add
pop
and
and
or
add
lods
adc
push
push
lds
push
stc
inc
and
lret
adc
inc
sarb
mov
add
mov
insb
leave
add
bound
xchg
push
movsb
outsb
scas
jle
js
scas
gs
pop
fs
leave
mov
lret
xorb
cmp
out
xor
dec
dec
dec
push
sbb
hlt
or
xor
xchg
push
cmc
pop
pop
push
push
daa
sbb
call
add
leave
pusha
push
lahf
mov
call
not
adc
jno
ret
xlat
enter
push
xor
adc
inc
enter
ret
popf
scas
adc
add
insb
and
mov
stos
enter
enter
pop
add
stos
mov
fimuls
push
dec
lock
inc
inc
repz
or
outsl
test
les
inc
das
fldl
jmp
push
inc
clc
push
nop
or
sub
fsubs
jb
dec
iret
das
mov
push
xchg
cmp
leave
inc
pop
pop
loope
stc
popa
dec
add
push
lret
and
pusha
inc
popa
mov
adcb
cmp
dec
fs
inc
pop
insb
inc
sub
lahf
lahf
in
sarl
out
sbb
dec
iret
repz
andl
mov
iret
dec
notb
jo
add
out
faddp
mov
roll
jecxz
into
repz
add
dec
les
fbld
dec
mov
or
fwait
xchg
push
mov
dec
xchg
add
add
bound
pusha
sub
pop
sub
pusha
mov
inc
adc
push
ret
outsb
mov
add
and
and
outsl
sbb
or
or
js
and
xlat
pop
xchg
call
filds
adc
dec
js
rclb
dec
or
lahf
pop
adc
pop
pop
in
pop
dec
pop
in
jo
dec
pop
enter
mov
push
push
sub
and
test
scas
or
xchg
rolb
push
dec
dec
movsl
dec
pop
mov
test
adc
sbb
and
ljmp
add
test
movsl
inc
pop
add
orb
mov
add
add
add
sbb
and
mov
lock
filds
add
pushf
mov
cmp
sub
imul
aas
cmp
cmp
jne
lret
bsr
dec
hlt
inc
shlb
sbb
shlb
inc
je
cmp
jbe
cmp
nop
cmp
add
fs
enter
mov
fildl
cmp
push
push
lcall
mov
xlat
les
push
sub
js
clc
sbb
loopne
push
cmp
mov
and
add
inc
jp
add
sbb
in
loopne
enter
mov
pop
rolb
jmp
add
aaa
clc
es
mov
push
add
push
add
add
mov
cmp
arpl
jg
sbb
sbb
das
int
jnp
divb
push
fwait
push
adc
add
and
push
dec
cmp
in
cmp
or
pop
lock
ja
outsl
subl
orb
addr16
sbb
pop
inc
inc
popa
mov
mov
jo
je
std
pop
fisttps
aam
pop
or
imul
push
rclb
add
enter
xchg
jge
push
aas
lea
jmp
lea
fists
popa
jo
push
jl
sub
ret
adcb
inc
movb
int3
mov
adc
push
fstpt
mov
xor
fstl
ret
test
jb
adc
mov
mov
inc
xchg
jmp
dec
mov
lahf
aas
jmp
cwtl
add
add
push
adc
fsubs
pop
push
add
lahf
cmp
inc
fwait
pop
movsl
jno
push
push
xor
aad
orb
xor
dec
add
cli
xor
int
ret
in
xor
xor
cli
inc
gs
and
mov
mov
imulb
sbb
outsl
or
inc
dec
je
or
dec
push
adc
in
icebp
cmp
adc
test
imul
das
test
push
push
jmp
clc
sub
sbbb
ja
cwtl
cmp
or
sbb
test
xor
sbb
sbb
pop
xor
aam
push
xchg
mov
jno
test
test
aas
or
rcrl
or
dec
sbb
sbb
pushf
nop
sub
mov
inc
in
pop
and
add
add
add
fisttpl
incb
test
or
add
loop
push
dec
jmp
addl
cmp
pop
pop
jmp
and
mov
les
pop
cmp
jmp
pop
inc
movb
inc
rorl
in
ret
inc
ss
xor
cld
add
mov
inc
dec
les
xor
and
jmp
pop
enter
jne
lods
and
push
inc
xchg
jecxz
mov
jp
sahf
test
add
clc
dec
sbb
test
sub
pop
stos
mov
loop
adc
adc
cmp
or
mov
rcrl
rorb
je
fadd
xlat
sub
add
adc
movsb
cld
adc
test
dec
adcb
ret
sub
js
and
cmp
xor
ss
data16
mov
push
inc
cltd
pop
inc
fiadds
mov
mov
arpl
push
hlt
or
mov
lcall
jb
cli
adc
inc
pop
mov
enter
push
pop
int
in
mov
mov
adc
loope
sbb
aas
sub
clc
mov
jmp
xchg
mov
jmp
adc
mov
add
stos
and
adc
pop
sub
hlt
add
dec
pop
push
adc
jns
and
in
inc
push
das
push
xchg
loope
mov
das
jecxz
cmpl
movsb
add
bndldx
in
rcrb
cwtl
jmp
cltd
mov
or
xor
inc
push
add
pop
add
push
sbb
sbb
sbb
and
rcll
xor
cmpsb
test
cmp
dec
jmp
xchg
cmp
cmp
fistpll
in
add
in
add
sbb
pushf
sbb
push
sub
rclb
add
cmp
add
xchg
or
inc
add
and
and
inc
and
sub
and
pop
xor
and
dec
add
rolb
sub
cmp
cmp
push
push
push
jle
add
inc
or
push
add
push
and
inc
jp
push
add
or
add
call
pop
fucompp
push
mov
shrb
popa
adc
xchg
dec
mov
fdivl
cmp
push
sbb
sbbl
addr16
out
xor
xchg
add
scas
jne
sarl
jle
jo
push
xchg
push
fs
sub
mov
push
leave
add
push
jo
push
dec
loope
mov
call
roll
push
enter
sbb
lea
inc
pushf
cmp
aam
sub
adcl
je
pop
test
jmp
mov
dec
inc
fs
inc
mov
push
sbb
and
add
in
mov
je
nop
or
push
rcll
adc
sarb
push
stos
adc
mov
sub
les
cmpsb
mov
or
push
push
dec
in
pop
movsb
fcmovnb
push
add
jns
add
ja
pop
inc
sbb
push
add
and
into
inc
jle
and
xor
or
ja
mov
dec
lcall
insl
xor
addr16
add
and
pop
cmp
xorb
pop
pop
jp
outsb
in
lahf
dec
sarl
in
add
push
push
rcll
sbb
test
fists
push
fsts
push
add
incb
int
cmp
inc
jo
adc
push
stos
imul
arpl
inc
je
mov
js
insb
mov
push
pop
inc
lods
sbbl
mov
mov
pop
fs
inc
cmp
push
jo
sub
or
or
cs
jns
shll
lea
xor
xchg
int
cmp
out
es
sbb
out
pop
fs
mov
fists
icebp
sbb
lret
frstor
les
cwtl
push
dec
add
sbb
inc
sub
mov
addr16
shlb
ret
pop
mov
push
pop
pop
arpl
add
ljmp
and
imul
add
xchg
and
sbb
add
sbb
jbe
mov
jl
pop
pop
das
add
push
mov
inc
movsb
adc
xlat
push
jo
sbbb
dec
pop
adcl
and
int3
push
push
imul
lahf
mov
aad
sahf
out
out
or
mov
lea
push
int3
xor
in
sbbb
aam
sbb
inc
nop
inc
dec
inc
sbb
mov
pusha
pop
dec
shll
je
dec
into
add
adc
push
xchg
pushf
add
mov
pop
pop
pushf
add
add
andb
clc
insb
imul
inc
push
cs
pusha
push
in
fs
in
add
pop
ljmp
cmp
inc
xor
mov
lods
jg
inc
pusha
xor
xor
popl
xor
loopne
sub
lahf
sbb
inc
mov
or
xor
stos
dec
pop
rolb
hlt
jecxz
or
aas
into
sub
mov
sub
xchg
push
mov
les
sahf
aad
add
repnz
mov
je
mov
les
inc
pop
cs
ret
add
mov
add
mov
aad
push
jp
sub
dec
aas
cld
cld
nop
pushf
and
add
xchg
add
inc
and
or
test
or
xchg
cmc
add
push
or
and
sbb
sub
sub
and
push
pop
mov
sbb
lret
sbb
addb
pop
movsb
sbb
push
nop
lcall
adc
insl
xor
enter
add
push
sahf
or
clc
je
sar
test
fldcw
adc
ja
push
insl
jl
xchg
sti
pushl
inc
push
dec
mov
add
add
test
push
fsubrs
mov
cmp
and
fcmovu
lock
sbb
es
and
xor
pop
jbe
divps
data16
loopne
roll
sar
pop
data16
mov
enter
leave
rolb
mov
aad
pop
push
mov
enter
lods
and
add
faddl
lods
jo
loop
push
pop
or
icebp
lea
inc
sarl
mov
mov
jg
fs
push
jo
pushf
inc
sbb
lods
rorb
pop
inc
mov
stos
mov
daa
xchg
mov
push
bound
jge
mov
push
arpl
push
sub
stc
sub
adc
aaa
inc
pop
movsb
pop
enter
add
in
aad
enter
pop
cmp
adc
shl
sbb
inc
leave
push
xor
rorl
in
add
add
xor
and
xor
ss
or
sub
xor
dec
add
dec
mov
orb
dec
popa
insb
sub
nop
dec
sub
jg
les
pop
or
jg
add
add
jg
add
pusha
roll
cmp
pop
or
jns
in
sahf
orl
adc
adc
mov
xor
or
or
mov
lahf
mov
xor
lea
test
jo
aas
or
and
enter
pop
rolb
adc
or
xor
les
push
ret
pop
pop
loopne
in
inc
rcll
add
cmp
lods
mov
sbb
mov
les
test
test
adc
xchg
sbb
mov
inc
add
mul
jb
sub
xchg
adc
lcall
lcall
jg
mov
or
dec
pop
std
push
lret
add
rolb
hlt
test
ret
jmp
cmp
movb
sub
enter
and
or
test
repz
jo
jo
je
mov
mov
std
sub
ss
int
inc
leave
or
mov
cmp
dec
sbb
pop
inc
jno
mov
add
das
fwait
cmp
cmpsb
sub
cmp
jl
cwtl
cltd
xor
jne
shlb
pop
adc
push
mov
lret
aas
movsb
jge
xchg
or
add
jmp
xor
insb
dec
cmpsb
aam
in
pop
mov
test
mov
push
cmp
inc
in
add
inc
cmp
jl
push
mov
jo
lock
add
push
fwait
repnz
add
jle
mov
or
aaa
push
daa
push
fdivs
mov
arpl
jl
neg
sbb
xor
pop
add
in
and
out
or
pop
imulb
cmp
loop
jne
inc
cmp
jl
add
push
ja
xchg
add
enter
jmp
repz
mov
aaa
jne
sub
dec
push
mov
push
pop
dec
pop
or
push
js
and
arpl
inc
add
or
stos
mov
inc
cs
add
fmul
add
repnz
add
push
pop
jmp
in
adc
in
adc
add
or
adc
xor
sub
mov
fwait
xor
xlat
shlb
subl
push
sar
mov
jge
dec
inc
pop
sbb
cmpsl
test
add
push
push
or
mov
or
inc
test
inc
pop
ret
lds
mov
cld
call
push
lock
stos
push
pop
or
popa
jbe
push
adc
sbb
push
add
xchg
in
faddl
or
imul
je
pusha
dec
inc
fidivs
lock
xor
and
sbb
test
loope
andb
adc
or
mov
sar
and
mov
xchg
mov
mov
mov
or
and
and
push
sbb
xchg
lret
stos
lcall
pop
or
push
out
add
jo
je
js
jns
in
push
jl
xor
push
jmp
mov
out
fs
test
cmp
inc
cs
xor
enter
aam
mov
loopne
xor
lahf
div
add
out
subb
mov
test
mov
jbe
cli
jns
xor
or
dec
adc
into
push
into
adc
movb
or
or
add
mov
and
outsb
imul
sub
xor
push
xor
pop
xor
cmp
push
or
inc
jb
repnz
jle
leave
mov
nop
in
jne
cli
push
adc
xchg
or
inc
les
adc
cmp
nop
dec
sub
sub
leave
and
dec
xor
or
mov
sbb
jo
pop
dec
xor
add
dec
les
sbb
test
adc
dec
les
movsb
add
and
cmp
pop
or
jmp
addl
sbb
arpl
dec
xor
add
movsb
cmp
dec
and
inc
adc
ret
push
push
hlt
inc
cmp
es
dec
or
cld
add
sub
jae
js
ja
pop
jns
cltd
xchg
in
lock
fdivl
xor
add
and
jecxz
movsb
mov
xor
or
xor
enter
cld
sub
push
es
inc
popa
jb
fsub
and
ds
or
dec
mov
and
pushf
aam
inc
jo
pop
push
push
jl
test
call
das
push
ja
inc
mov
add
inc
or
shlb
mov
add
add
dec
loop
cld
test
sub
mov
cs
fadds
mov
or
les
adc
dec
or
das
inc
or
push
out
je
sbb
test
roll
add
test
fildl
fprem
repz
cmp
add
xchg
pusha
push
rcll
inc
pop
jl
sbb
mov
xchg
fisubrs
scas
addl
mov
inc
push
xchg
addb
push
aad
std
imul
cmpsb
pop
inc
call
les
pop
add
mov
add
sbb
imul
fldcw
add
push
push
in
call
push
mov
adc
fdivrl
pop
shrb
mov
insb
popa
adc
mov
push
or
jo
add
cmp
cmovle
pop
insb
adc
adc
xorl
out
js
jne
js
rcll
loop
cmp
inc
sbb
inc
popa
xchg
jb
sub
lea
into
shll
jge
mov
inc
sub
jo
jns
iret
jmp
sub
mov
iret
repz
sbb
faddl
nop
lods
jns,pn
aas
js
sub
inc
mov
movsl
ljmp
cmp
int3
xchg
stos
adc
pop
mov
mov
mov
jo
mov
jecxz
add
inc
push
inc
adc
jne
inc
pop
mov
rorl
pop
pop
test
push
fstl
pop
fists
push
rorb
inc
sub
sbbb
push
insb
mov
je
dec
xchg
mov
lret
cmp
mov
mov
pusha
push
loope
xchg
and
and
pop
adcl
mov
jne
inc
je
pushf
xor
inc
mov
lea
imul
rcll
sub
mov
and
mov
pop
pop
add
inc
daa
insb
nop
add
or
mov
inc
adc
push
or
cmp
push
xchg
xor
xor
sub
xlat
test
xor
push
repz
repz
mov
mul
jns
out
xor
pop
jge
pop
add
cmpsb
and
stc
push
sbb
and
pop
sub
push
sub
gs
jl
aaa
jmp
xchg
push
or
cmpl
sbbb
outsl
cmp
add
mov
mov
cltd
add
mov
xor
insb
mov
adc
mov
jno
dec
repz
or
dec
repnz
call
test
push
mov
cli
shrb
mov
mov
xchg
lods
sbb
repnz
fsubrs
in
imul
lahf
js
dec
or
mov
imul
aas
add
adc
cmp
enter
fbstp
cmp
push
push
arpl
xor
mov
in
push
fadds
pusha
in
dec
rorb
jle
sub
rcrb
or
sbb
jo
cmp
inc
adc
jae
dec
add
push
xor
lods
andl
test
mov
dec
and
mov
adc
or
mov
cmpsb
sbb
sub
adc
and
leave
adc
pop
or
sub
loopne
pop
dec
imul
ret
inc
mov
sub
jne
xchg
nop
cs
gs
test
nop
outsb
or
inc
dec
sbb
je
sub
push
pushf
push
cltd
jne
and
jno
xchg
adc
add
sbb
cmp
xchg
movl
das
ficoms
push
xor
dec
cmp
jge
push
jge
dec
es
add
sbb
ja
adc
movsl
popf
adc
daa
insl
inc
add
push
add
fnstenv
aam
add
shrl
fcomi
jp
outsb
push
inc
jns
ljmp
imul
movsl
fbld
cmp
sub
sub
movsl
add
push
lods
andl
imul
das
push
adc
xor
xor
xor
xchg
rcrb
and
cmpb
xor
push
pop
call
sub
pop
arpl
lea
movl
and
lock
sbb
sbb
mov
jne
das
mov
or
push
repz
call
sti
add
lcall
fmulp
shrb
int3
int3
adc
xchg
jb
je
mov
add
and
shll
outsl
scas
adc
and
sbb
mov
mov
aam
daa
inc
iret
fsubr
mov
add
clc
test
cmp
lods
and
dec
test
jns
cmp
loopne
dec
mov
in
mov
ljmp
orb
and
sub
dec
sbb
pop
cmp
es
insl
push
push
push
push
mov
mov
pushf
xchg
jae
aaa
out
mov
out
insb
mov
inc
and
jl
jg
sbb
sbb
pop
push
sbb
pop
sahf
adc
mov
adc
lret
adcb
pop
filds
rcrb
dec
jle
test
cmp
push
pop
inc
sub
cmp
ss
loope
dec
mov
loope
push
jo
sbb
adc
rorl
cmp
mov
mov
scas
pop
sahf
sbb
mov
adc
insb
lock
add
pop
inc
cmp
xchg
out
inc
in
push
inc
cmp
sbbb
and
test
popf
js
cmp
aad
scas
fiaddl
dec
mov
je
jbe
inc
cmp
cltd
inc
ds
push
add
push
insl
cltd
sbb
push
fs
je
inc
lahf
std
push
je
add
mov
lret
pop
cmp
push
mov
inc
dec
inc
push
cmpsb
cmpl
mov
push
or
adc
xor
cmpb
add
test
pusha
inc
sbb
and
inc
or
push
pusha
jl
sbb
add
addl
sbb
inc
sbb
orl
ret
test
stos
add
sbbl
icebp
xchg
call
adc
notb
out
jmp
shlb
sub
push
aaa
push
push
cmp
mov
mov
dec
push
mov
lods
sbb
imul
sbb
das
movsb
add
adc
cmp
cmpsl
pop
push
xchg
nop
sbb
fildll
or
fisttpl
xor
cmp
decb
mov
mov
pop
das
and
cmp
and
xor
push
and
adc
rol
clc
inc
add
fdivrs
subb
push
push
je
bound
jo
adc
cmp
lds
mov
hlt
or
nop
out
jo
cmp
jge
sbb
inc
cmc
add
jle
inc
aad
rorb
pop
in
bound
enter
dec
cwtl
jl
call
insb
lea
jmp
push
jge
mov
rcrb
pop
pushf
mov
mov
ds
and
rolb
push
push
mov
mov
xor
in
push
and
or
push
add
push
lea
repz
mov
dec
and
cmp
inc
cs
xchg
mov
movsl
cmp
decb
jle
mov
int3
aam
mov
ret
inc
test
sub
mov
pop
inc
mov
and
lock
loope
clc
jp
and
push
clc
adcb
lret
movl
ret
int3
dec
decl
lea
or
mov
lahf
cmp
lock
shll
mov
and
jne
bound
call
dec
push
pop
mov
loop
xor
sbb
nop
clc
inc
loope
lds
roll
inc
hlt
clc
int
sbb
fimull
pop
inc
in
or
pop
xchg
aam
mov
dec
lds
int3
xlat
xchg
fdivl
push
push
or
sub
and
xchg
xor
jo
and
orl
lret
popa
add
popf
mov
sub
in
mov
mov
pop
ror
fldenv
or
add
daa
ss
mov
ljmp
cwtl
cmp
rolb
xchg
movsb
rcll
inc
add
mov
mov
addb
add
push
es
push
xor
movsl
ret
sub
pusha
mov
jl
lods
andb
and
jne
mov
out
or
and
ss
xchg
pushf
fwait
stc
and
movsb
cmp
add
xor
in
sbbl
mov
loope
cmp
xchg
pop
in
sbbl
test
lcall
jne
cli
push
add
mov
adc
out
ret
add
mov
fists
dec
push
push
fcomp
mull
into
sub
mov
sub
popf
adc
sub
sbb
and
sarl
lods
mov
je
inc
test
hlt
fucomp
push
test
add
divb
add
or
or
adc
push
fwait
push
mov
and
sub
test
xor
cmp
and
push
push
mov
pop
pusha
movl
pushw
lret
out
mov
jp
stos
je
jl
or
mov
nop
xchg
or
pushf
iret
add
das
xchg
dec
test
mov
mov
movsb
push
test
rol
enter
lret
repnz
push
shrb
inc
push
xchg
aaa
adc
push
mov
shl
lea
fcomp
jmp
xchg
dec
in
in
lock
jns
test
rolb
pop
movsl
mov
or
xchg
or
adc
test
inc
sbb
xchg
lret
sub
xor
test
inc
inc
dec
lret
push
dec
push
push
pop
pop
inc
sub
insb
outsl
movsb
push
test
inc
push
sub
test
mov
enter
mov
sub
mov
mov
lret
enter
int3
into
rclb
addl
dec
inc
xor
cmp
dec
add
add
shrb
inc
pop
and
mov
in
scas
inc
dec
test
inc
sub
mov
insb
mov
or
jns
cltd
dec
xchg
int3
push
jl
test
or
je
push
push
and
adc
cli
and
out
dec
and
inc
adc
pop
xchg
dec
scas
fldcw
ret
cs
dec
aas
enter
sub
add
je
nop
das
cmp
pop
and
or
ret
xorl
mov
lret
add
push
xchg
sub
xchg
inc
pop
sub
pop
jge
fisttps
js
cmp
jo
js
mov
dec
pop
pop
movsl
mov
jl
mov
add
xchg
cmpsb
rolb
aaa
mov
pop
and
or
dec
inc
add
nop
adc
adc
pop
inc
inc
ds
mov
pop
mov
add
mov
dec
les
addr16
ljmp
rcrl
and
pop
add
inc
cmp
cmp
je
push
into
adc
ja
xchg
sbb
pop
addr16
push
das
aaa
sub
jnp
add
xchg
and
dec
or
xchg
jo
sub
loopne
and
out
push
das
adc
mov
add
adc
xchg
jle
aam
sub
jle
adcb
or
test
cmpl
lahf
inc
xchg
push
push
sbb
and
jno
pop
insb
pushf
arpl
je
addr16
push
jmp
inc
addl
push
sbb
lods
imul
mov
lods
shlb
dec
out
nop
pop
mov
je
push
xchg
cmp
inc
sarl
sub
clc
pop
pop
pop
je
pop
push
push
imul
cmp
imul
rolb
mov
add
pop
add
mov
adc
mov
lods
addr16
and
mov
mov
out
push
mov
adc
mov
iret
fstps
jp
out
inc
arpl
xlat
adc
add
sub
cltd
adc
xor
adc
clc
sbb
cld
push
decb
into
in
pop
pop
sbb
popf
push
jns
cltd
cmp
movsb
sub
shrb
cmp
xor
inc
out
jae
pusha
bound
sbb
jp
and
inc
push
pop
roll
popa
sbb
or
xor
mov
lret
inc
sbb
adc
nop
pop
pop
stos
add
inc
mov
push
dec
call
push
push
ds
cmc
xor
in
mov
mov
dec
repz
add
lcall
fistpll
pusha
sti
jle
push
fisttpll
mov
popf
inc
xchg
ret
push
out
and
add
leave
inc
pop
shll
jl
xchg
loop
xchg
xor
in
jg
push
mov
cmp
sbb
dec
cli
jecxz
shlb
push
push
push
cmpl
les
bound
and
mov
lcall
adc
or
or
filds
mov
pop
addr16
push
dec
dec
push
lahf
dec
sbb
cmp
sbb
add
mov
push
inc
aaa
pusha
hlt
imul
push
jmp
mov
or
mov
cmp
mov
push
or
inc
stos
or
and
test
jg
jecxz
push
and
jp
mov
scas
sub
mov
xchg
and
push
lret
or
inc
lods
lds
sbb
pop
dec
imul
mov
push
pop
outsl
sub
js
call
test
pop
pop
push
jno
mov
dec
push
adc
xchg
add
imul
inc
lahf
popa
xor
adc
pop
push
or
add
push
ss
orl
sub
and
inc
stos
fadd
sub
sbb
lret
add
lahf
mov
out
push
mov
cs
arpl
xor
mov
rcr
cmpl
stc
cld
sub
jbe
mov
bound
push
inc
adcb
nop
or
sub
jl
pop
add
fbld
push
adc
rcr
shl
push
js
cmpsl
push
add
xchg
ljmp
jns
dec
js
and
sbb
dec
xor
adc
lret
loopne
pop
call
sbb
inc
mov
das
test
mov
aam
xchg
dec
call
jne
add
leave
inc
inc
aaa
jl
adc
aas
jo
xchg
loope
repnz
adc
hlt
cmp
jne
mov
xor
sbb
push
imul
cmp
sbbb
insb
inc
inc
push
inc
das
cmp
aas
or
push
subb
push
test
pop
je
adc
enter
jp
fstps
add
and
xlat
pop
jnp
ret
lcall
jg
sahf
nop
loopne
dec
cmp
cld
adc
dec
xchg
push
pop
loopne
popa
mov
xchg
insb
pop
or
push
push
cmp
pop
imul
mov
push
call
std
lret
mov
out
pop
xchg
dec
rcr
mov
cmp
dec
rcll
push
ss
or
dec
push
push
pop
add
push
mov
ds
and
dec
push
andb
lahf
inc
and
xchg
cmc
cmpsl
add
push
add
lods
insb
addb
inc
stos
ret
inc
int3
fs
inc
sub
mov
je
rolb
and
adc
addr16
pop
packssdw
xchg
pop
call
adcl
or
lahf
push
mov
xlat
sub
push
cmp
jne
pop
inc
push
dec
inc
rorl
orb
or
jecxz
add
or
jmp
push
mov
jb
push
xlat
outsb
sbb
mov
sbb
arpl
xchg
nop
jl
imul
mov
adc
push
or
adc
lea
test
bnd
mov
sbb
gs
add
out
mov
lea
jge
ret
adc
add
mov
mov
data16
mov
mov
pop
sbb
or
leave
jle
push
dec
adc
push
jmp
sub
dec
andl
inc
adc
inc
adcb
add
fdivrl
inc
mov
inc
rorl
ret
icebp
xor
pop
push
adc
inc
fisubl
arpl
pusha
add
xchg
bound
or
dec
sbb
lea
xchg
call
cmp
mov
jo
les
push
pusha
push
aas
xor
dec
sub
jno
jg
push
mov
fcomps
sub
mov
iret
mov
lock
and
add
xchg
inc
adc
xor
mov
neg
inc
push
push
push
push
rcr
sti
add
pop
stc
int
imul
pop
iret
push
pop
xchg
ficoml
bound
mov
sbb
repnz
or
jo
aas
jl
iret
push
sub
add
dec
pop
add
repnz
push
push
jbe
mov
mov
test
fadd
or
adc
mov
add
ret
adc
shl
cmovo
je
add
popa
xchg
mov
ljmp
test
add
inc
mov
xchg
push
mov
cmp
ss
rorb
ret
push
dec
push
adc
cmpsl
fs
sub
add
dec
dec
lahf
push
mov
pop
dec
add
and
insb
or
pop
dec
jne
mov
xchg
sbb
push
sbb
ret
mov
ret
jae
bnd
mov
lea
mov
sbb
pop
jle
jne
insl
pop
add
push
push
and
mov
iret
dec
mov
pop
push
test
lret
dec
sahf
pop
inc
mov
shrl
ss
adc
xchg
adc
push
stc
notl
imul
ficomps
xchg
je
flds
jno
mov
and
call
cltd
orl
popf
orl
inc
push
mov
dec
jo
push
inc
push
pop
lods
lock
jae
or
jge
adc
std
jno
pop
les
push
push
cmpsw
test
push
dec
inc
scas
mov
push
push
mov
scas
push
shlb
lds
sub
divb
ja
pop
mov
int
dec
xor
insl
arpl
mov
ss
mov
dec
xlat
push
fldt
adc
lock
repnz
xchg
sbb
add
xchg
insb
pop
xor
ds
sub
or
adc
dec
pop
or
cmp
sarl
js
scas
dec
test
adcl
pop
rorl
push
jnp
push
imul
ret
push
pop
jno
sbb
call
scas
and
insb
push
dec
hlt
dec
cmp
xchg
fmull
mov
gs
sbb
push
movsb
call
test
sub
stos
mov
or
and
lahf
add
jle
out
add
cmpsl
rorb
and
or
or
test
pop
in
push
shlb
repz
adc
add
faddl
lret
push
mov
add
cmp
push
icebp
shrb
cmp
add
cmp
inc
mov
hlt
pop
cli
jge
lea
cmp
sbb
inc
ror
shlb
insb
inc
add
cmp
sbb
je
in
push
xor
xor
jns
testl
push
jno
sbb
xchg
inc
aas
mov
add
dec
or
orl
iret
mov
mov
insb
pop
ds
fstl
fcompl
and
aas
cmp
xchg
push
ds
mov
test
lahf
gs
push
jne
pop
inc
cld
and
fstpt
inc
cmp
dec
in
dec
dec
mov
je
aas
or
push
pop
mov
lods
sub
sub
sahf
rorl
shll
roll
imul
dec
push
mov
jb
xor
loopne
or
or
sbb
lock
stos
inc
adc
fmulp
es
cwtl
lcall
mov
dec
xor
les
outsl
dec
xchg
fwait
repnz
inc
imul
enter
mov
push
jmp
add
lods
push
pop
out
xchg
sub
ret
sbb
enter
mov
jmp
mov
mov
jne
jecxz
xchg
and
adcl
push
fstpl
dec
aaa
cmp
lcall
mov
sbb
orb
and
sbb
cmp
push
fiaddl
ret
pop
movsl
arpl
rclb
mov
outsb
cwtl
pop
dec
pusha
dec
xor
js
sbb
and
sbb
rolb
cmp
or
test
add
mov
adc
dec
cmp
cmp
and
cmp
inc
push
push
out
push
inc
call
dec
repnz
or
add
push
int
loopne
pop
iret
pop
sbb
in
xor
daa
lds
dec
test
hlt
jne
push
vxorps
hlt
data16
jl
inc
cmp
int3
mov
and
adc
pop
jp
rclb
inc
push
or
fstpl
dec
mov
in
mov
xlat
xor
cmp
scas
pop
add
xchg
and
cmc
adc
pop
movsl
fmuls
sbb
test
shll
inc
loope
sahf
sbb
test
dec
xor
and
and
and
flds
lret
lret
ret
jbe
sub
mov
xchg
fistl
add
rorl
lock
push
adc
testl
pop
repz
xor
or
xor
push
loope
add
sub
repnz
popa
gs
sub
sbb
mov
push
lock
cmp
cli
pop
mov
add
sub
repz
add
sbb
das
pop
add
pop
mov
xchg
int
movb
mov
je
jnp
mov
and
and
jl
scas
push
push
or
xchg
xchg
mov
pop
cld
aam
pop
loop
push
inc
mov
shlb
mov
dec
lea
insl
jno
fs
cmp
add
xchg
adc
pop
in
sbb
ret
pop
and
xor
or
hlt
and
jle
movl
subl
lret
inc
enter
push
sbb
aam
pop
pushf
pop
or
aaa
movsb
push
mov
add
lea
scas
push
out
push
mov
adc
sub
nop
or
push
or
jp
fdivr
pop
or
in
adc
push
insb
cmp
mov
mov
insb
or
push
rcll
xchg
jbe
jo
loop
lock
push
daa
inc
dec
cmpb
add
addr16
add
test
push
adc
push
or
lahf
aas
or
mov
jnp
adc
cld
scas
mov
jl
jns
dec
sub
enter
cmpsl
mov
sub
mov
mov
sub
mov
pop
pop
pop
sub
or
rcll
dec
bound
imul
jmp
dec
mov
mov
gs
fcompl
or
nop
lock
or
in
hlt
lea
push
call
inc
rolb
pop
sub
adc
mov
lods
cmp
cmp
push
add
jecxz
int3
adc
dec
jno
or
subb
adc
lds
fcmovne
aaa
push
sbb
shl
pop
icebp
adc
add
aad
jne
lock
push
xor
fisttps
adc
call
cld
addb
cmp
adc
hlt
loop
pop
insb
pop
jmp
lea
mov
mov
cmp
cmpb
xor
test
leave
push
adc
adc
test
sbb
jb
jp
fs
fbld
sub
subb
inc
dec
push
mov
xor
xchg
dec
clc
adcl
inc
cmp
mov
add
pop
sbb
jp
cmpsl
out
dec
mov
cmp
push
dec
adc
sbb
sub
or
mov
sahf
xor
rolb
sub
cwtl
sub
push
dec
cmp
xor
xchg
adc
or
xor
jne
push
das
mov
testb
xchg
jnp
cmp
push
push
dec
or
jne
aaa
inc
adc
popl
xchg
xchg
pop
and
icebp
mov
dec
pop
push
cmp
push
scas
cltd
sbbl
sbb
aas
xor
cmp
sub
cmp
lea
clc
call
jnp
popw
in
push
inc
jo
pop
pop
inc
xchg
add
lahf
cmp
popf
ret
dec
jle
orl
mov
mov
rorl
sbb
pop
aaa
jl
jge
xorl
add
sbbb
lahf
andb
add
xlat
mov
pop
aas
mov
push
or
pop
test
or
fimull
add
aaa
test
mov
andl
mov
test
dec
jbe
aas
sbb
and
or
sub
loope
or
ret
int3
jmp
mov
sub
or
add
fisttps
mov
lock
pop
popf
and
mov
sbbb
or
push
fdivp
leave
xchg
je
inc
add
leave
xchg
dec
pop
jo
nop
dec
leave
xchg
cwtl
lods
bswap
enter
add
adc
inc
xchg
or
cwtl
xchg
mov
add
cltd
cmp
and
je
cmp
add
pop
add
mov
repnz
insb
mov
ss
sub
sahf
jl
test
and
mov
jbe
dec
mov
enter
cs
testb
lods
outsb
enter
sbb
mov
add
movl
movsl
adc
loop
loopne
and
and
in
mov
hlt
lock
iret
ret
push
arpl
or
xchg
nop
cwtl
xchg
mov
lods
das
xchg
out
mov
sbb
add
mov
xor
sub
pop
inc
pop
mov
mov
mov
add
jg
pop
inc
icebp
jbe
lea
xchg
or
and
in
lahf
faddl
popf
or
inc
pop
icebp
fdivs
sub
mov
pop
test
cmp
fistps
inc
enter
pop
mov
push
cs
or
jmp
ret
out
ss
mov
insb
rcrl
addl
je
mov
pop
jl
movsb
in
pop
repz
inc
mov
and
lods
sti
cmp
mov
out
mov
adc
loopne
xor
fisubs
jne
xor
loopne
ror
fcomp
cmp
xchg
pop
inc
adcb
inc
sbbb
stos
and
sti
mov
cmp
nop
xchg
xchg
push
sub
add
cmp
dec
add
cmp
cmp
adc
fldl
add
adc
push
fdivl
adc
cmp
add
imul
and
daa
or
and
pop
dec
or
daa
pop
jb
and
mov
cld
lret
pop
xchg
pop
js
iret
and
sti
push
sbb
or
ss
xor
dec
pop
mov
test
add
mov
mov
dec
arpl
arpl
push
or
pop
loopne
mov
mov
inc
jo
loopne
add
sarb
out
mov
push
cmovae
inc
mov
inc
loope
mov
enter
mov
sbb
rcrb
sub
aam
cmp
jne
pop
popa
mov
test
orb
rcrl
dec
jmp
dec
pop
insl
xor
cmp
mov
and
shlb
and
popa
or
imul
add
mov
or
jno
and
or
cmp
xchg
xor
aas
push
mov
cmp
cld
gs
enter
mov
add
sub
dec
xor
push
push
adc
aas
mov
pop
add
add
pextrw
adc
push
pop
mov
jno
flds
cmpsl
inc
lcall
add
mov
movsl
mov
xorb
adc
shlb
push
sub
dec
or
mov
loope
inc
jmp
test
int3
sub
push
cmp
mov
pop
loop
inc
shlb
sbb
je
xchg
push
push
mov
sub
jl
test
inc
sbb
sti
sbb
sub
test
sub
cli
cltd
sbb
test
and
mov
adc
inc
xor
dec
dec
xadd
lods
cli
or
mov
rcl
inc
dec
mov
gs
push
int
add
arpl
movsl
int3
jp
fmuls
xor
add
xor
inc
push
xor
and
pop
jnp
pop
mov
imul
cmp
les
outsl
pop
das
clc
daa
or
in
xor
cwtl
mov
outsl
sbb
stos
lahf
outsb
push
test
sbb
jns
imul
jne
push
mov
cmpsl
pop
fldenv
mov
and
sbb
sbb
push
mov
enter
sbb
dec
loop
rorl
aas
push
adc
push
add
pop
push
inc
adc
pop
sub
ljmp
nop
loope
stc
ret
nop
mov
or
adc
cmpsb
aad
outsl
cmp
dec
push
or
or
add
mov
push
add
jnp
cmp
jbe
adc
nop
cs
scas
icebp
mov
shll
push
jl
xchg
push
jl
add
fldenv
push
add
jg
xchg
adc
jb
adcl
lods
pushl
inc
and
bound
dec
mov
or
push
jl
lds
cvttps2pi
push
inc
mov
call
inc
out
adc
call
mov
pop
jne
sbb
sub
mov
pop
push
sub
or
jle
mov
pop
adcb
mov
mov
shlb
fcompl
sub
in
pusha
mov
push
mov
mov
jp
clc
pop
jle
call
lea
stos
add
jns
scas
xchg
adc
dec
dec
fidivs
sbb
out
popf
push
icebp
add
outsl
push
mov
add
mov
cmp
sbb
jp
cwtl
jnp
ljmp
test
bnd
rorb
or
outsl
dec
lods
jo
stos
mov
and
cmp
enter
add
mov
xchg
adc
or
adc
xchg
cmp
es
lret
inc
cwtl
into
icebp
adc
iret
mov
mov
test
call
sub
fwait
cmp
sbb
adc
cmp
shll
or
out
inc
and
stos
je
cmp
cmp
xchg
mov
scas
iret
xchg
cs
jae
pop
mov
imul
adc
jne
rcll
sbb
stos
mov
inc
out
push
pop
popf
xchg
scas
sbb
cmp
adc
sub
dec
pop
pop
push
and
ret
xor
cld
xchg
movsl
cmp
dec
repz
push
push
mov
movsb
adc
push
inc
adc
movsb
test
inc
outsb
inc
push
addr16
subl
add
add
sbb
dec
cmp
sub
xchg
dec
mov
hlt
add
jns
mulb
addr16
popa
int3
jge
inc
dec
push
and
aad
jp
lods
in
mov
pop
or
xor
lock
mov
data16
ffreep
jmp
test
sub
jge
dec
test
and
cli
jno
jle
sbb
fdivrs
mov
jp
mov
out
mov
dec
imul
js
inc
xor
ret
or
push
js
ljmp
out
mov
mov
out
pop
mov
xchg
and
add
leave
mov
push
daa
inc
testl
aas
sbb
xchg
sbb
pop
into
jne
ret
adc
jmp
dec
or
xchg
imul
mov
loope
push
push
add
push
push
jbe
fdivrp
pushf
lcall
add
or
call
push
mov
out
insb
repz
mov
lea
push
sarb
clc
es
push
cmp
sbb
lea
rcll
xchg
inc
jecxz
adc
cli
pop
fidivrs
sbb
xor
mov
cli
jo
jb
sbb
nop
popa
add
adc
pop
push
and
imul
mov
xchg
push
inc
dec
push
popa
lcall
nop
push
je
lahf
xchg
xchg
xchg
inc
jmp
push
lret
imul
inc
adc
and
cmp
je
add
jne
jl
sbb
push
int3
addb
and
iret
repz
jge
cmpsl
call
or
outsb
pop
js
inc
orl
repz
sub
jns
out
jl
mov
adc
out
sahf
sbb
push
es
xor
test
or
push
imul
stc
rorb
push
or
out
iret
repz
push
pop
push
and
adc
lcall
xorb
test
push
in
push
and
push
inc
dec
pop
cmp
or
sub
pop
jmp
sbb
inc
hlt
lock
popf
inc
xchg
xor
pop
js
add
outsb
push
shlb
and
pusha
mov
push
fisttps
test
arpl
dec
mov
call
dec
xchg
in
and
inc
imul
stc
jne
mov
fidivl
incl
mov
aaa
push
dec
or
mov
xchg
aas
sbb
fdivrl
mov
jne
lds
add
int3
les
dec
out
sbb
xchg
aaa
sbb
scas
test
and
jb
push
cwtl
sar
sbb
lods
mov
sbb
mov
out
rcrl
shrb
inc
jb
or
xchg
xor
mov
or
adc
pop
xchg
pop
add
xchg
sub
mov
and
mov
xchg
pop
movsl
clc
dec
cmpsb
mov
lret
jge
mov
xchg
mov
sbbl
arpl
ja
jecxz
stos
push
push
push
mov
fildl
push
mov
mov
mov
mov
enter
jo
push
inc
push
pop
pop
jmp
add
in
test
int3
mov
add
je
push
xchg
adc
dec
mov
test
jg
inc
addb
and
jl
xchg
xor
pusha
sub
pop
push
sub
xchg
fists
sbb
jns
pop
pop
mov
test
xor
add
lea
mov
push
add
adc
shr
addr16
pop
jne
movsl
adc
ret
cmpsb
sbb
pop
dec
icebp
and
inc
cmc
adc
adc
dec
sbb
arpl
xchg
ret
jl
dec
dec
adc
pop
and
xchg
mov
dec
mov
and
or
pop
jle
outsl
pop
icebp
add
aad
add
add
jns
insl
insl
xor
push
xchg
mov
sbbb
lret
int
dec
and
and
mov
je
es
sbb
fstps
imul
es
in
inc
xchg
mov
sarb
or
cmc
mov
ss
jg
cmp
cwtl
adcb
pushf
and
push
mov
fs
sarb
test
movsl
jo
outsl
jbe
adc
cmp
push
cmp
mov
lds
cld
inc
jne
mov
mov
rcrb
pop
mov
jo
and
test
mov
adc
movsb
or
xor
push
rcrl
xchg
add
adc
ret
inc
test
les
jne
lret
and
cld
fstps
xor
lds
jl
and
push
bound
mov
inc
fs
add
jle
mov
call
arpl
or
fs
or
jmp
push
sbb
call
jl
and
or
mov
push
mov
mov
sbb
mov
jle
cli
xchg
andb
push
test
add
sahf
aas
lret
icebp
push
mov
cmp
icebp
fdivrl
cmp
loope
pop
mov
mov
sub
cmp
push
sahf
add
sbb
and
mov
pop
test
test
pop
pusha
and
inc
or
inc
ret
cmp
adc
fsub
inc
paddq
ljmp
xchg
jp
cmp
push
xchg
or
xchg
pop
fisttpl
mov
lock
mov
adc
dec
shll
dec
mov
push
test
fwait
nop
mov
test
mov
fisubs
jmp
mov
jl
mov
in
movsb
aaa
sbb
dec
iret
ficomps
test
idivb
je
fucomi
jle
sbb
and
cmp
add
ds
xchg
inc
push
std
nop
adc
push
or
add
xor
sahf
mov
and
stos
adc
jmp
push
jb
push
pop
xchg
xlat
or
push
into
out
sub
add
pop
push
pop
dec
jns
pushf
int
lods
push
roll
inc
test
xlat
mov
pusha
sub
push
addb
jo
xchg
fsubs
push
dec
push
pop
add
push
sub
and
mov
enter
push
push
xchg
loopne
cmp
sbb
mov
subb
xchg
mov
gs
icebp
dec
ret
popl
cmp
imul
icebp
pop
and
mov
jg
hlt
cmp
scas
popa
mov
and
dec
mov
mov
test
loope
sbb
je
and
call
rcll
imull
adc
mov
sar
inc
insl
mov
aam
and
pop
mov
adc
test
test
jo
adc
into
lea
adc
test
pop
inc
or
jns
push
xchg
sbb
push
add
repnz
sbb
shrl
inc
or
lret
imul
lea
mov
paddb
lcall
repz
cmc
xor
or
push
mov
lods
insl
jl
subb
cmp
aaa
popa
mov
pop
xchg
push
pop
push
dec
cmpl
inc
push
jbe
sbb
cmp
pop
or
jg
jmp
and
mov
adc
adc
sbb
mov
push
dec
jne
xchg
ficompl
jnp
aad
out
or
mov
movsb
jmp
psubusb
push
subb
cmp
mov
fnsave
mov
pop
jl
movsl
push
stos
push
add
sbb
pop
or
dec
pop
ret
xor
jge
sbb
push
js
jnp
ja
and
cmp
jl
iret
push
mov
clc
cld
fisttpll
sbb
sub
mov
push
lahf
aam
call
jmp
xor
adc
inc
sti
adc
test
and
or
pop
fdivrp
shll
sub
mov
cmp
inc
enter
sub
lahf
or
mov
pop
clc
cli
jmp
push
call
js
lea
cmpb
dec
push
dec
sbb
into
jns
push
inc
shlb
cmp
push
pop
xor
jmp
std
mov
aad
push
add
sahf
jmp
lret
out
daa
jne
les
or
idivl
lcall
sub
add
adc
mov
dec
adc
shl
jp
clc
pusha
je
lret
sbb
jno
loope
cs
jl
lcall
add
dec
sub
fcmove
mov
ret
icebp
das
push
scas
jns
outsb
test
stos
mov
push
pop
fidivs
outsb
enter
fmull
call
and
pusha
jno
push
mov
mov
lret
lret
shrd
xchg
xchg
push
add
loopne
xchg
and
shll
mov
pop
pop
mov
sbb
sbb
les
push
push
cwtl
inc
hlt
incl
movsb
fnsave
test
imul
insb
jp
aam
sarb
stos
jb
inc
aam
enter
xlat
jno
xchg
adc
xchg
test
scas
push
mov
sub
jne
mov
loop
cltd
rcrb
int
aas
jnp
push
sbb
orl
xor
les
add
adcl
fdivrl
dec
pop
pusha
adc
push
dec
and
pop
sub
push
inc
ds
mov
jae
push
xchg
shlb
loope
std
add
mov
mov
add
ljmp
xor
insb
sub
clc
cmp
pusha
inc
sbb
add
xor
mov
insb
xor
movsb
arpl
sub
pop
mov
aas
or
cmp
jge
and
loop
push
mov
xchg
mov
mov
shr
sub
out
test
push
pop
or
sbb
push
jns
mov
jmp
sub
adc
inc
adc
mov
ja
dec
add
sbb
sbb
clc
lcall
jmp
loope
sbb
sbb
inc
cmp
jl
in
pop
addb
and
arpl
jne
pop
dec
test
pop
sub
dec
ret
ljmp
dec
sbbl
cmp
int
jno
scas
aad
mov
ret
xor
test
and
ret
in
push
add
cmp
add
xlat
jne
mov
sbb
scas
cs
sbb
add
cmc
xchg
pop
mov
cmp
lods
jns
dec
inc
and
adc
hlt
pusha
xor
jbe
cmc
andb
or
jns
sub
mov
pop
dec
jno
test
push
xchg
jo
cmp
je
cld
in
dec
testl
xchg
rorb
jne
cmp
cmp
sbb
xor
pop
scas
mov
loope
jg
xchg
adc
dec
mov
in
dec
inc
and
fcomp
pop
push
les
adc
pop
out
nopl
mov
add
pop
cmp
insb
fmull
pop
lock
xchg
dec
js
push
lea
xor
scas
or
outsl
es
rol
jp
and
inc
jmp
jle
decb
cmp
mov
xchg
add
jne
inc
cli
add
inc
popf
pop
mov
inc
sbb
call
repnz
jl
mov
lahf
xchg
je
mov
push
pop
jnp
inc
or
scas
movsb
xor
cmpsb
les
je
jbe
iret
mov
sub
sub
mov
lea
push
movsl
fs
xorl
adc
push
jne
xchg
subb
orb
jl
fiaddl
in
inc
xor
cmc
stos
sbb
ljmp
push
mov
lock
dec
jge
dec
add
ficompl
popa
xorl
movsb
movsb
pop
testl
fs
and
jo
mov
dec
cmp
cld
adcb
and
loopne
pop
dec
push
hlt
xor
loopne
push
mov
push
std
fwait
or
mov
add
push
inc
xor
je
add
in
fstps
cmpsl
aas
adc
sbb
push
test
mov
into
in
nop
lock
push
out
cmp
xchg
mov
pop
je
pushf
loop
cmp
daa
cmp
decb
gs
lds
insb
mov
lcall
negb
mov
mov
insl
mov
jle
sbb
ljmp
add
out
pop
push
sub
lock
xchg
sbb
push
inc
pushf
push
popf
cmp
nop
seto
mov
pusha
mov
outsl
dec
dec
and
adc
mov
inc
loopne
mov
push
push
inc
xorb
push
xchg
xlat
pop
idivl
sbb
outsl
push
xor
add
inc
jne
adc
shll
fdivs
js
nop
push
jae
mov
lds
ljmp
insl
dec
fwait
rclb
push
js
je
inc
jmp
xchg
mov
xchg
sahf
sbb
adc
movsl
push
leave
ljmp
mov
sbb
sub
incl
or
addb
xor
cli
das
mov
xchg
ret
or
push
pop
add
rcr
xchg
ret
jl
in
negl
clc
test
movl
mov
adc
sub
cmp
inc
daa
pop
cmp
mov
loope
mov
bound
sub
push
pop
push
cmp
mov
mov
add
add
aam
ss
mov
xorl
push
add
xchg
xor
dec
jecxz
cmp
pop
cmp
mov
inc
aaa
movsb
cmp
adc
sub
adc
pusha
mov
imul
mov
or
sbb
sbb
pop
fldl
sbb
push
fstl
jo
jl
push
fsubl
push
mov
adc
into
ret
sysenter
popf
nop
push
dec
enter
or
dec
xlat
push
xchg
outsl
pop
pop
or
and
adcb
daa
sbb
cmpb
sbb
push
gs
push
neg
insb
lcall
push
mov
dec
pushf
xor
clc
pop
ljmp
pop
sahf
pop
cmp
test
lcall
and
int3
xchg
mov
aam
clc
insb
mov
add
add
pop
roll
cmovo
mov
push
add
xor
push
mov
daa
xchg
ljmp
mov
lea
or
jnp
mov
dec
test
lcall
roll
loop
pop
lock
cmp
lret
sub
dec
subb
jnp
mov
push
inc
mov
lods
jne
mov
mov
aaa
cltd
pop
not
xor
and
sbb
mov
adc
orl
dec
inc
sti
xchg
jl
ret
ljmp
mov
jg
mov
pop
mov
inc
cmp
push
daa
jns
jl
in
nop
fnstcw
pop
jns
jbe
cltd
fstp
jge
xchg
jns
and
cmpl
jnp
xchg
jne
pop
fdivrs
mov
push
jge
jl
lret
pop
inc
cltd
add
mov
div
mov
push
cmp
cmp
push
push
push
pop
nop
push
lock
scas
shrl
jne
movsl
aad
pop
lea
int
push
leave
and
add
cmp
pop
push
pop
xchg
sbb
fmuls
or
adc
push
in
fs
push
fbld
jo
xchg
inc
ss
mov
xlat
pop
sub
adc
dec
xor
ljmp
icebp
push
test
jno
cli
mov
jg
loopne
incl
sbb
xchg
test
sbb
push
push
movl
shlb
iret
ss
add
pop
es
push
test
xchg
lea
add
sbb
jne
dec
repz
rclb
mov
push
push
shll
cmp
pop
sbb
es
and
push
sbb
hlt
ret
or
outsb
int3
or
sub
movl
data16
push
jg
lods
outsb
pop
or
mov
mov
push
dec
rorb
adc
dec
int
jge
mov
mov
aam
paddq
pop
and
jo
jge
mov
lea
xchg
loopne
add
xchg
add
test
xor
push
or
and
fimuls
call
jmp
push
rorb
pop
fwait
in
adcb
jg
je
cmpb
cld
add
mov
cltd
cmc
jmp
adc
jbe
cmpsb
mov
inc
jmp
rorl
aam
les
adc
dec
testb
ret
insb
sbb
push
rolb
inc
cmp
lds
pop
sti
add
xchg
cmp
out
negl
add
jmp
mov
dec
fimuls
shrl
rcrb
push
adc
inc
push
sbb
xorl
sbb
jg
xor
xchg
push
repz
and
rclb
or
sbb
dec
jne
or
sar
movb
pop
inc
das
aas
iret
or
and
cmc
cmp
add
rorb
cmpsl
pop
out
lds
adc
andl
mov
outsl
push
sbb
ret
imul
imulb
dec
pop
mov
mov
into
jle
add
fists
mov
push
add
inc
pop
mov
cmp
inc
mov
ucomiss
or
imul
inc
push
or
insb
cmp
pop
imul
jne
or
fidivrl
push
rorb
and
ret
fcmovnbe
lret
aas
dec
in
push
mov
dec
jae
subl
inc
xor
xchg
add
sbb
fs
fmuls
aaa
add
jne
inc
xchg
cmp
cmp
inc
and
test
mov
mov
inc
xlat
aas
push
adc
ret
push
call
dec
pop
sbb
add
and
jns
inc
inc
mov
xorl
jmp
and
push
mov
ret
jmp
mov
rcrb
arpl
mov
mov
fsub
shlb
sub
lock
testl
sbb
push
loopne
cmp
out
inc
in
ret
inc
xor
js
mov
clc
ret
mov
jbe
pop
xchg
xor
lds
dec
push
pop
cld
insb
pushf
fmull
aas
ljmp
jne
xchg
fadds
pop
daa
insl
add
add
mov
or
or
cmpsb
mov
roll
pusha
in
js,pn
mov
jge
popl
cmp
add
cmpsb
pop
aam
inc
add
inc
push
mov
mov
mov
repz
rolb
jge
testb
aas
jmp
xor
sub
shlb
dec
jmp
cmpsb
or
in
push
sbb
or
dec
nop
scas
push
adc
mov
mov
lock
push
inc
add
mov
or
cmp
hlt
add
incl
push
push
push
jmp
fwait
rcl
push
add
rol
pmulhuw
push
subb
or
push
shll
xor
pop
sahf
xchg
mov
js
hlt
cmp
or
sub
lods
push
stc
das
rclb
js
out
pop
xchg
fidivs
sahf
cli
in
adc
push
xchg
cwtl
negl
cmpsl
movsb
sbb
jmp
cmp
xchg
cmp
xchg
pop
cmp
pusha
jge
sub
mov
xor
jne
or
mov
popf
xor
or
sub
movl
pop
mov
cmp
add
popa
mov
lcall
es
js
inc
iret
adc
xlat
adc
cmp
or
clc
js
mov
iret
fldl
insl
fiaddl
sub
sub
xor
int
jl
cmpsl
jmp
lods
pop
rcl
push
into
and
xor
lock
jl
test
mov
sbb
mov
adc
mov
and
add
test
pop
push
pop
or
les
jo
lock
pop
pop
pop
outsb
xor
xchg
mov
mov
jle
sub
or
cmp
nop
adc
xor
lock
push
inc
test
cmp
ret
cmp
hlt
jns
jp
add
call
adc
push
mov
lea
or
addb
xor
mov
mov
cmp
xchg
sbb
pop
sub
jle
xor
sbb
sub
xchg
loopne
or
pop
pushf
or
lret
xchg
mov
fld
add
xor
dec
push
nop
lock
adc
fcompl
sub
jnp
pop
cltd
clc
lock
movsl
addr16
cmpl
push
or
add
add
lock
add
or
pop
sub
daa
insb
loope
jmp
aad
popf
cwtl
inc
sbb
jne
popa
jmp
mov
shll
push
push
and
push
jge
mov
xchg
dec
test
mov
neg
rcll
pop
add
mov
pop
jecxz
mov
add
or
lcall
das
inc
cmpb
je
arpl
dec
les
add
mov
scas
std
add
inc
decb
mov
in
pop
in
bound
jp
sub
sbb
dec
xchg
sbb
jae
add
sub
test
jecxz
repz
loopne
pop
outsl
mov
pop
push
push
sub
jp
adc
xor
dec
inc
in
add
pop
mov
mov
fisttpll
jne
dec
cmpl
fxch
ljmp
push
jne
jne
sahf
out
fldl
scas
fiadds
push
bound
add
pop
pop
pop
popa
dec
call
inc
loopne
mov
dec
push
mov
sbbl
les
cmp
push
push
aam
out
outsb
popa
adc
js
push
cmp
decl
push
push
push
push
add
lock
pop
hlt
cmp
mov
jb
pusha
in
mov
jmp
add
jno
cltd
pop
jo
mov
inc
adc
bound
or
shr
pop
addr16
push
push
icebp
dec
in
and
xchg
cld
jmp
lea
sbb
xor
mov
lea
nop
or
ljmp
adc
pop
jge
jns
add
jge
test
popf
mov
xchg
inc
movsl
sbb
dec
push
inc
popa
daa
sbb
jp
nop
loopne
inc
xor
inc
lods
adc
xchg
and
cmpl
pop
add
arpl
loop
add
es
lods
cmp
sbb
push
add
xchg
fsubrs
rcll
and
push
inc
jle
add
dec
orl
loopne
push
inc
add
xor
cmpsl
ljmp
xchg
popa
adcb
test
add
dec
movl
enter
test
sti
xchg
jns
shll
jb
sbb
push
lock
push
dec
test
int
pop
xor
push
adc
es
push
mov
aas
jmp
jae
or
or
imul
jbe
push
adc
push
sub
mov
dec
push
test
clc
dec
sbb
sub
dec
insb
inc
inc
call
orl
pop
add
push
sbb
xor
jne
sahf
testl
jp
push
lret
or
sahf
cmp
das
aas
mov
dec
repz
xor
mov
dec
push
stc
xor
push
add
rcll
mov
addr16
loopne
xchg
fs
xor
mov
jo
lret
or
cmp
pop
inc
push
cmp
pop
pop
adc
or
add
js
fildl
loope
push
lret
mov
clc
movsb
mov
xor
inc
push
pop
mov
jp
mov
popa
sbb
in
movsl
and
add
std
sbb
or
loop
cmpsb
mov
lret
dec
cmp
mov
jl
xchg
xor
out
xchg
movsl
sub
out
xor
mov
outsl
fs
inc
rolb
data16
lret
mov
or
imul
or
add
xchg
adc
push
xor
jb
and
and
loopne
pop
cwtl
sub
je
bound
jno
movsb
adc
mov
lcall
lods
push
push
add
pop
push
insl
mov
and
movsl
and
mov
and
lods
push
popf
inc
mov
mov
idiv
fiadds
ror
jp
add
fadds
cmp
adc
sbb
and
add
xor
xor
jbe
mov
mov
sub
mov
imul
shrb
adc
push
push
subl
bound
add
rcll
scas
add
aam
xor
and
or
mov
fwait
mov
mov
push
jno
add
std
push
mov
insl
sub
daa
fiadds
add
and
add
push
rorl
push
fimull
addb
call
inc
or
sbb
test
inc
roll
fwait
adc
and
ss
push
aas
mov
jge
dec
mov
jmp
push
or
or
mov
push
mov
pop
and
sahf
ret
addr16
dec
inc
xchg
das
daa
stos
push
lahf
aad
jo
sbb
nop
sbb
repz
sbb
push
lfs
cmp
push
incl
add
add
test
sti
repz
add
add
sbb
imul
mov
cmp
sarb
jns
fisttps
into
jp
cwtl
push
stos
xchg
stos
xor
jp
xchg
add
movsb
mov
push
cmp
add
and
movsb
pop
adc
outsl
sbb
icebp
sbb
cmp
andl
inc
adcb
mov
cmpsb
sbb
push
dec
imul
aam
adc
stos
pop
scas
cmpsb
push
pop
inc
daa
xchg
jecxz
or
loope
bound
mov
push
movsb
xchg
lods
cwtl
aam
sti
push
and
mov
push
push
mov
stc
xor
dec
cs
or
pusha
or
inc
add
pop
sub
pop
xor
push
cmp
pop
sub
movsl
aaa
adc
jbe
add
jbe
jne
sbb
rcrb
cmp
fiaddl
lock
sub
js
movsb
xor
push
adc
push
adcb
dec
sub
stc
shlb
mov
and
jmp
mov
lret
test
pop
mov
out
int3
fisttpll
sbb
push
stos
pop
int3
and
repnz
and
cmpsl
push
dec
fcmovb
aaa
pop
and
inc
or
xchg
adc
adc
js
inc
ss
inc
mov
scas
inc
pop
pop
jmp
push
sahf
sbb
push
push
maxps
aam
mov
mov
and
or
pop
dec
fsts
loope
mov
fcmovne
ja
pop
mov
sbb
adc
outsl
repz
repz
je
nop
mov
push
iret
cmc
pop
cwtl
push
flds
and
nop
pop
pop
sbb
push
add
jecxz
lcall
mov
adc
pinsrw
mov
and
ret
mov
mov
cmp
xlat
xchg
adc
mov
mov
movsb
mov
je
cmp
jne
sub
out
loope
les
adc
je
cmc
popa
xchg
or
sub
test
mov
mov
and
inc
aad
cwtl
adc
xchg
stos
add
push
adc
mov
inc
cmp
jl
xchg
jo
mov
loope
dec
mov
xchg
jl
add
mov
mov
push
xor
push
or
adc
cmp
clc
xor
dec
fists
jnp
sub
mov
mov
aas
adc
pop
dec
cld
jl
add
repnz
mov
adc
mov
sbb
sti
jge
add
cmp
cmc
and
pop
shr
cmp
inc
xchg
xor
push
adcb
add
rcrl
stos
mov
jecxz
idivl
jo
shrb
sub
push
and
sahf
mov
js
jmp
cmp
push
mov
adc
outsb
and
mov
sub
add
push
adc
sub
push
out
fistpll
inc
cld
xor
jae
sbb
push
push
sub
das
xlat
clc
add
mov
fadds
pop
and
je
popf
cmpsl
stos
push
dec
sub
test
xor
jp
and
repz
push
hlt
roll
jl
int
loopne
addl
shlb
mov
push
or
pushf
sub
add
push
sbb
or
mov
and
in
push
sub
add
add
outsl
bswap
mov
lahf
fwait
divl
mov
add
cmp
cwtl
add
clc
inc
or
or
sub
mov
sbb
mov
sub
sub
push
sbb
jne
jmp
jle
je
aas
dec
and
push
pop
push
push
adc
rorb
clc
dec
cmp
add
pop
jno
rol
xchg
xor
sbb
push
lea
mov
or
lods
cmp
insb
test
inc
cmp
xor
mov
push
fdivrs
add
adc
pop
dec
jne
clc
or
or
pusha
iret
lret
dec
gs
jmp
cmpsl
push
popa
xor
xchg
pushf
pop
jbe,pn
inc
rcl
xlat
mov
dec
xadd
mov
ret
inc
je
dec
sbb
sub
sub
and
cli
jb
in
mov
aad
pop
movsl
push
loope
sbb
mov
jecxz
loop
inc
loopne
pop
mov
jge
scas
aad
aam
push
or
jbe
jp
mov
ljmp
int3
add
push
push
push
mov
push
mov
js
adc
push
mov
push
mov
dec
test
sub
pop
dec
imul
and
mov
jne
xor
nop
xchg
stos
and
or
sub
dec
jmp
adc
mov
mov
xchg
push
add
ss
leave
jne
adc
and
leave
add
xor
les
incb
lgs
pop
pusha
add
movsb
cltd
cli
dec
and
dec
gs
sub
sub
xor
mov
mov
and
in
push
pop
es
push
and
pop
pop
mov
scas
shrb
cmp
mov
add
mov
sbb
jle
jbe
aad
mov
lcall
jnp
push
pop
fmuls
xchg
xchg
adc
popf
cs
mov
adc
nop
insb
cmp
pop
sbb
cmp
in
call
jle
mov
mov
call
push
add
dec
push
icebp
push
sbb
jno
jge
mov
push
sbb
scas
cmp
data16
dec
add
pop
adc
fldt
dec
bound
in
stos
sub
je
rclb
les
add
dec
sahf
pop
mov
adc
fsubrs
sbb
fadd
sbbb
add
push
xor
add
adc
shll
pop
mov
add
pop
sub
inc
or
mov
adc
cmc
incl
cs
inc
push
jg
dec
sbb
sbb
and
lret
sbb
sbb
out
pop
movsl
sub
or
or
pop
mov
inc
fadds
mov
scas
cwtl
add
inc
adc
push
xchg
mov
jl
push
addb
jbe
rclb
gs
push
into
cmp
mov
in
rol
and
sub
add
lret
cmp
jmp
daa
out
add
into
and
movswl
add
adc
cmp
jo
xchg
or
test
mov
pop
popf
out
insl
lods
sub
mov
xor
xchg
and
xchg
mov
jmp
nop
sub
test
sub
cmp
sbb
pop
pusha
cmpl
add
cmp
cmp
mov
int
sbb
pop
dec
inc
or
sbb
repz
mov
pushf
leave
mov
test
add
and
sub
shll
inc
fisubl
mov
aaa
cmp
cmp
addr16
int
adc
ret
in
cmp
jae
cmp
inc
test
insl
out
inc
pop
xor
push
sub
bound
lds
push
cmp
cmp
lret
dec
stc
cmp
inc
push
mov
cmp
loopne
dec
jp
cld
inc
lcall
pop
inc
push
cmp
pop
pusha
enter
popa
push
push
push
lret
sub
adc
dec
push
add
push
mov
inc
cld
sbb
cmp
fs
sbb
jno
pop
or
mov
or
icebp
fcoml
lds
cwtl
xor
and
and
shlb
mov
inc
pop
dec
push
dec
cmp
dec
adc
pop
add
daa
cmp
sub
pop
add
xchg
push
loope
lahf
xchg
and
shll
ss
idivl
jns
fwait
iret
repz
dec
mov
jns
mov
mov
int
in
add
push
cmp
push
inc
lock
and
je
sbb
or
call
mov
mov
out
jecxz
test
xchg
mov
cmp
and
adc
sub
pusha
loope
test
inc
cmp
add
nop
out
adc
out
xchg
add
push
cmp
fmull
in
jae
cmp
pop
orl
xchg
pop
cmpsb
ret
add
mov
xchg
addl
or
shll
xchg
add
and
mov
push
ljmp
adc
sarb
nop
push
pop
inc
add
mov
xor
dec
jge
mov
cltd
inc
aas
mov
xorb
add
xchg
sbb
mov
out
sbb
or
adc
sub
orl
mov
add
xor
add
cmp
fs
and
push
cmp
es
cs
sarb
or
adc
dec
push
stos
inc
aas
fdiv
push
xchg
sbb
lcall
sbb
push
adc
jno
pop
movsb
fisttps
cmpsb
loop
andl
insb
jo
mov
cli
jb
out
fidivrs
pop
push
jl
in
jmp
push
xor
cmp
mov
mov
mov
jne
pop
in
mov
push
outsl
dec
mov
fwait
add
push
xorl
add
xchg
loop
icebp
sub
and
and
add
cs
pushf
jecxz
or
rorl
xchg
stc
sub
and
push
or
fs
insb
jo
or
jl
int3
jecxz
in
adc
mov
mov
dec
lahf
xlat
lods
sub
incb
aam
cmpsl
mov
xchg
xchg
ret
adc
xlat
repnz
fisubrl
daa
sub
ss
pusha
outsb
roll
mov
jg
aam
test
mov
call
divb
insl
push
or
add
dec
pushf
cld
push
in
mov
shlb
mov
sub
repnz
sub
xor
jmp
adc
outsb
mov
nop
xchg
out
mov
scas
or
pop
xor
in
lret
fisubl
mov
add
sbbb
sbb
sub
dec
cmp
test
ret
mov
lret
pop
xor
lds
sub
sub
fisttpl
sbb
sahf
sub
cmpsl
int3
mov
test
and
dec
pop
jo
mov
fucomip
add
jne
sbb
inc
pop
and
mov
call
pop
sbb
and
fadd
inc
cmp
leave
fistpl
pop
jmp
sbb
ss
pop
sahf
repz
xor
mov
inc
push
mov
push
xchg
mov
push
sbb
or
jo
mov
mov
es
inc
pushf
pop
add
movsb
outsl
add
xor
daa
inc
inc
lcall
dec
cld
shrb
jbe
add
push
jne
mov
rolb
adc
inc
pop
dec
and
xlat
inc
jmp
push
push
aad
data16
clc
mov
movsb
pop
mov
sbb
test
add
repnz
jnp
imul
xor
lods
or
mov
or
adc
mov
adc
mov
leave
insl
lods
movsb
or
cli
and
in
shrl
enter
sbb
push
popa
dec
pusha
dec
enter
add
dec
push
xchg
xchg
jle
adc
pop
cmp
mov
pop
and
xor
xor
cmp
dec
inc
popa
hlt
pop
push
lock
mov
insb
loop
pop
push
es
rorb
jo
mov
insb
cmp
scas
adcl
movsl
pop
or
inc
pusha
sbb
or
mov
add
push
dec
add
lods
and
fwait
or
push
popa
insl
and
xchg
clc
fs
or
xchg
sbb
sbb
xchg
popf
mov
cmpsb
push
jge
std
adcl
sbb
cmp
jbe
xchg
je
and
or
add
jmp
mov
test
dec
xchg
fs
sar
sbb
addr16
or
mov
fcom
sti
and
out
lea
adc
cltd
mov
inc
and
push
inc
cmp
xchg
popa
add
incl
cld
pop
push
cmp
cmp
je
orl
imul
adc
movsb
add
bound
test
loop
xchg
outsb
pop
pop
pop
or
or
ret
add
and
sub
push
xor
sub
adc
jecxz
ret
cld
fadds
mov
xor
inc
sub
in
icebp
or
add
repz
pop
jl
sub
mov
jae
jo
pop
sub
cmp
je
adc
out
hlt
inc
das
subb
iret
fstl
aaa
lock
mov
pushf
mov
je
push
je
in
xor
aam
jge
mov
sbb
movsb
mov
lods
or
popa
pushf
xor
fwait
push
lret
jle
scas
dec
add
adc
divb
push
das
sbb
adc
jecxz
push
pop
and
aad
loopne
mov
vpmullw
add
mov
ret
mov
rcll
adc
hlt
mov
pop
inc
push
or
repnz
add
or
les
ljmp
or
adc
mov
pop
cltd
push
push
and
inc
adc
roll
ret
js
cmpsb
add
or
insb
adc
imul
shrl
cli
imul
pand
push
mov
enter
fldt
xor
fiadds
sbb
gs
cmp
scas
or
push
movsl
dec
sbb
sbb
jbe
sub
push
imull
ret
mov
lea
add
adc
mov
cmp
or
mov
and
jmp
add
aaa
adcl
add
test
jmp
mov
cmpsl
mov
sbb
and
orb
jns
add
mov
data16
mov
push
das
es
sbb
in
iret
imul
or
mov
fs
addr16
aaa
cmpsl
add
movsb
mov
insb
data16
cmp
sub
pop
pop
add
out
push
js
lods
mov
push
lods
push
dec
mov
inc
or
add
adc
sub
cmpsl
push
jmp
call
push
sub
stc
push
ja
mov
aad
ret
and
mov
iret
mov
push
les
mov
sbb
mov
push
testl
or
push
aas
push
jo
add
aam
push
xor
add
andl
imul
adc
push
cmp
sub
jp
jp
daa
adc
push
not
into
test
pop
or
dec
and
mov
pop
jbe
xchg
lods
and
mov
sbb
dec
lahf
add
cmp
sbb
loopne
imul
stc
int3
sbb
nopl
sbb
or
or
push
mov
lret
mov
cmp
sub
cmpsl
movsb
addb
test
lahf
or
inc
pop
add
add
cwtl
add
and
push
xorl
xchg
sub
scas
push
mov
mov
mov
popa
adc
es
inc
andb
addr16
ret
rclb
scas
stc
out
mov
mov
flds
mov
aas
fcmove
sarl
mov
fldt
inc
arpl
imul
fstpl
cmp
imul
stc
add
iret
out
cmpsb
jg
mov
insl
je
test
mov
push
push
sahf
addr16
pop
adc
leave
fwait
add
adc
std
inc
loop
and
nop
and
inc
dec
dec
push
movsb
or
dec
in
push
das
pop
push
rolb
mov
fwait
shll
cmpsl
mov
lods
leave
xchg
cmp
test
sbbb
je
adc
inc
mov
and
pop
sub
xchg
xchg
mov
xchg
cmp
bound
roll
xlat
adc
mov
sbb
nop
mov
fs
enter
push
int3
out
inc
mov
push
aad
iret
repz
sbb
cwtl
stos
sahf
out
cmp
std
psraw
jns
out
jnp
movsl
mov
out
stc
push
loop
rorl
nop
cmc
sbb
or
lock
lea
and
sahf
outsl
imul
jge
addl
push
or
push
inc
cmp
lea
dec
push
cmp
fucompp
cmp
test
pop
dec
push
xchg
add
sbb
sbb
jo
sub
rcr
mov
sub
push
into
xor
push
jnp
and
or
adc
and
add
dec
adc
cmp
cmovnp
push
and
in
mov
sbb
or
std
push
pop
and
mov
sbb
fldcw
test
push
in
sub
lock
sub
cltd
nop
and
xor
add
xchg
pop
and
add
add
mov
mov
xor
negb
inc
add
je
add
stos
fcmovnbe
cmp
mov
inc
mov
push
xchg
idivb
xchg
cmp
sbbb
shlb
das
es
imul
inc
jge
js
lea
add
mov
das
lods
pop
data16
mov
and
add
mov
mov
mov
cmc
pop
enter
movsb
and
xchg
pushf
leave
pop
jmp
lock
mov
das
scas
inc
pusha
add
out
or
fcmovnu
add
leave
sbb
rcrb
or
insl
ret
jg
pop
cwtl
in
aam
mov
pop
fistps
pop
loopw
jns
fwait
cltd
shl
xor
and
xor
or
push
push
dec
shlb
push
mov
outsb
sbb
and
outsl
adc
in
idivl
pop
cmp
pushl
add
je
nop
mov
inc
dec
dec
movsl
in
mov
add
mov
dec
je
roll
jge
mov
adc
push
add
cmp
jne
dec
clc
or
push
mov
sbb
mov
push
pop
or
loopne
xchg
xchg
lret
in
in
fsubs
pop
cs
call
mov
or
out
mov
push
cmp
mov
outsb
arpl
fstps
xor
mov
pop
pushf
pop
mov
and
sub
shlb
inc
add
push
and
lods
xor
push
dec
mov
mov
ja
lahf
hlt
push
push
mov
aaa
pop
mov
sbb
pop
sbb
adc
sbb
mov
mov
push
push
and
mov
pop
sbb
or
nop
pushf
in
or
or
pop
xchg
pop
xchg
push
mov
pop
jb
nop
in
and
and
sbb
inc
pop
aas
jmp
sub
and
test
mov
or
pusha
pop
jp
ds
inc
sbb
pop
lds
sbb
fidivrl
add
push
lahf
add
lods
inc
or
fimull
jno
scas
and
aad
bound
rorb
dec
xchg
rolb
ret
sbb
push
cwtl
or
loope
jo
add
add
mov
lock
sub
or
cmp
iret
or
sbb
adc
cmp
sbbb
xchg
outsl
mov
test
push
xchg
cmc
xchg
nop
loopne
or
mov
cmp
mov
adc
jge
popa
scas
imul
jae
push
iret
inc
mov
sbb
or
xchg
icebp
or
mov
cld
adc
gs
push
sub
sub
fimuls
xor
mov
dec
lods
or
sbb
jmp
out
xor
mov
pop
jne
subb
imul
adc
sbb
push
xchg
into
jbe
pop
mov
je
sahf
cmpsl
add
jg
andb
arpl
push
rcr
das
push
xor
jg
mov
std
movsb
inc
test
push
add
pushf
ds
xchg
stos
and
sbbb
cmpl
adc
dec
mov
and
cmp
sahf
xor
mov
test
dec
ret
icebp
jo
jo
push
and
xchg
adc
mov
push
loopne
sub
lcall
cmp
pop
mov
mov
enter
in
lods
sar
aam
pop
and
sbbl
or
lods
shll
sbb
cli
filds
dec
push
idivb
adc
add
loope
and
ds
pop
add
push
in
sbb
xor
push
add
rorb
rcll
loopne
pop
int3
push
sbb
movsl
mov
push
xor
insl
faddl
out
push
bound
jne
std
ds
into
sbb
push
dec
push
es
adc
es
cs
xor
out
icebp
decb
inc
pop
push
push
push
push
dec
push
xchg
add
sti
aas
mov
adc
stc
add
clc
add
jmp
enter
push
and
add
or
lahf
xor
and
ljmp
push
cltd
or
sbb
pusha
mov
and
sub
cmovns
jmp
das
in
mov
orb
and
pusha
mulb
gs
js
or
inc
and
or
outsl
lods
lods
push
fstpl
xchg
jmp
xchg
sub
sbb
cld
mov
inc
outsb
dec
add
pop
sahf
addb
mov
jo
ret
xchg
fsubrl
push
pop
pop
ret
push
mov
ret
in
inc
pop
sbb
test
cmpsl
dec
call
dec
sbb
add
push
inc
sbb
mov
mov
jmp
pop
pop
xor
data16
mov
test
jnp
int
jl
adc
xor
pop
out
inc
call
add
lds
and
adc
xor
bound
jno
jle
clc
test
rcrb
ficoms
inc
mulb
xchg
iret
push
xor
push
sub
mov
in
push
dec
mov
xchg
loopne
inc
or
out
jge
ret
rorl
jmp
xchg
adc
fs
inc
inc
adc
adc
pop
repz
aaa
sahf
or
scas
pop
add
les
mov
into
and
push
mov
sahf
or
jne
push
popf
idivb
inc
inc
cmp
adc
mov
lea
shrl
mov
orb
and
add
mov
out
push
pusha
sub
addb
dec
jecxz
in
adc
ja
xchg
push
testb
add
push
mov
testb
cmp
and
rcll
clc
add
in
xorl
out
fs
and
xchg
mov
add
sbb
sahf
in
jl
xchg
loopne
or
cltd
or
out
or
cmp
mov
cmp
dec
add
or
rcll
aas
dec
push
dec
shll
dec
sub
enter
push
pop
inc
scas
jno
es
add
sbbb
scas
mov
xor
sbb
xchg
cmpsb
or
push
fwait
push
add
notl
jecxz
or
jmp
mov
out
in
add
jl
lds
lock
jg
aaa
dec
lock
cmc
fstpl
adc
push
push
cmp
jle
xor
movsl
imul
xchg
pop
push
test
inc
frstor
fcom
hlt
sbb
xchg
scas
inc
adc
ret
in
movsb
sbb
sub
push
incl
fiadds
out
sbb
adc
je
inc
adc
sbb
adc
pushl
sbb
mov
adcb
push
push
lret
lods
jnp
or
cmpl
inc
pop
cmp
push
or
push
add
sbb
or
add
inc
ja
fimuls
imul
mov
inc
sub
xor
mov
cmp
adc
in
or
cmp
fcoml
lock
cmc
or
es
aaa
pop
repz
cmp
xor
aas
mov
pop
push
cmp
stc
jb
add
dec
repz
sub
dec
jb
jo
push
push
mov
push
bound
loopne
ret
push
fiaddl
mov
add
jle
loopne
sbb
jge
mov
scas
mov
dec
mov
scas
or
bound
jl
and
push
xchg
jo
stos
adc
nop
dec
mov
stc
or
inc
push
js
insb
and
inc
lea
sub
push
pop
aaa
push
nop
xchg
add
sbb
sbb
add
cmp
and
xor
jl
je
add
test
cmp
clc
mov
je
cmp
je
or
adc
sub
xor
pusha
xor
adc
adc
cmp
aas
jmp
cmpl
add
push
pop
push
in
mov
xor
fnstcw
repz
sbb
add
adcb
push
sbb
ret
dec
dec
add
jb
push
lock
mov
pop
dec
test
pop
jo
or
add
sub
push
dec
aam
je
push
and
sbb
mov
sbb
fmuls
les
push
mov
test
aam
sbb
popf
pop
push
adcl
outsl
pop
adc
aam
jmp
aas
and
xchg
push
jns
loop
pop
adc
and
cltd
mov
aas
into
adc
jmp
mov
cmp
and
xor
jmp
xchg
sub
fistl
loopne
adc
movsb
jb
sahf
lahf
int3
mov
test
hlt
and
pop
dec
cmpl
fstl
push
push
and
cmpsb
xor
sub
xchg
je
addl
pusha
mov
add
ret
dec
cld
xchg
mov
xchg
popa
and
sub
push
divb
aad
cmpsl
mov
or
pop
pop
add
push
inc
cs
and
pusha
jno
outsb
fidivrl
fwait
sub
popa
or
push
mov
xor
fcoms
aaa
or
mov
xor
out
push
aaa
or
sub
inc
pop
sbb
pop
sbb
dec
add
add
xor
xchg
daa
fnstcw
jb
scas
mov
cmpsl
pop
jb
push
cmpl
shrl
sub
scas
push
adc
loop
and
pop
or
mov
jne
daa
push
push
es
and
cmc
xor
idivl
aas
test
mov
mov
mov
mov
adc
add
or
mov
push
inc
mov
movsb
sti
inc
jg
sub
rcrl
inc
pop
mov
adcl
dec
cmc
add
shl
mov
pop
loope
and
dec
nop
aam
rolb
ds
pop
xchg
call
adc
mov
or
sbb
push
clc
and
cmp
jp
mov
or
lcall
or
push
jo
fcoml
sbb
lret
aaa
loopne
test
adc
xchg
push
adc
imul
adc
xchg
cmp
jne
adc
mov
shrb
add
insl
pop
and
hlt
outsl
and
push
adc
add
sbbl
xchg
orl
xchg
mov
mov
sbb
push
dec
xchg
sar
push
add
mov
dec
popf
data16
loopne
inc
pusha
ret
mov
pushf
subb
fwait
dec
inc
std
cmp
fstpt
push
cmpsl
sub
dec
inc
mov
pop
out
add
xchg
leave
xchg
lret
fbld
mov
hlt
pop
lock
inc
sbb
and
add
push
dec
cmpsb
xorb
lods
cli
xor
or
sbb
nop
cmp
xor
movsl
and
inc
adc
aaa
sbb
inc
mov
add
nop
loopne
jns
mov
leave
add
call
dec
jns
dec
pop
cmp
fmuls
icebp
aas
mov
std
lods
fdivs
push
cmp
mov
mov
or
aas
cmp
popa
shlb
and
sub
inc
add
pop
mov
ret
pop
xor
pop
mov
pop
adc
ret
add
loopne
dec
adc
js
xor
xor
es
repz
xchg
cltd
xor
adc
mov
lock
loopne
jae
pop
loope
xchg
pop
cmp
jnp
mov
js
jg
addb
sub
cmp
jle
adc
rclb
hlt
es
add
rorl
iret
lea
push
cmpsb
or
mov
int3
loop
dec
sub
and
push
sub
sbb
clc
arpl
inc
mov
pusha
and
mov
mov
xor
movsl
and
push
test
inc
dec
dec
stos
pop
test
lea
movsb
pop
jl
inc
idivl
repnz
lea
and
insb
mov
dec
jb
adc
pusha
pop
dec
lock
mov
xor
dec
sub
pop
inc
test
fcoms
xchg
imul
insb
insb
sbb
or
shll
and
push
push
test
mov
fbstp
cmp
jne
inc
loop
mov
dec
or
lock
out
lods
in
pusha
lret
gs
iret
and
sbb
fdivrs
add
js
mov
xor
and
enter
ret
out
mov
cmp
rcll
lea
aad
mov
data16
or
test
inc
mov
rcrb
inc
pop
fistps
jo
shl
jmp
popf
pop
sub
pop
pop
pop
movsb
daa
inc
mov
enter
pop
pop
push
inc
sbb
mov
xlat
call
adc
push
adc
push
pop
pop
in
and
imul
addr16
hlt
sti
enter
jecxz
pop
mov
jne
jno
roll
mov
xlat
std
inc
push
das
add
adc
daa
xchg
xor
addr16
add
nop
xchg
sub
add
arpl
sbbl
xor
inc
stos
xchg
adc
js
das
movsl
dec
cli
add
jg
js
dec
cmp
psllw
push
push
push
loopne
inc
or
mov
push
adcb
pop
add
add
dec
mov
push
push
pop
outsb
xchg
adc
mov
lods
std
mov
push
roll
or
js
and
jl
js
sbb
pop
outsb
sbbb
inc
adc
jne
negb
je
aad
cwtl
inc
and
and
das
aaa
xor
add
orb
clc
inc
add
sbb
dec
pop
adc
roll
fidivrs
lea
pop
add
movsb
mov
sub
psubusw
xchg
pop
sbb
and
pop
sub
cmp
fmuls
push
mov
test
inc
repz
fdivrs
cmp
notb
sbb
lods
or
push
sahf
and
jp
sahf
xchg
inc
push
mov
cwtl
loope
xchg
xchg
aaa
inc
xchg
push
mov
push
mov
movsb
sbb
or
adc
sbbl
and
outsb
lds
sbb
lcall
int3
sub
rorb
aad
sub
sbb
mov
pop
xchg
xchg
xchg
leave
push
andb
xchg
rcrb
inc
xchg
cld
bswap
mov
xor
dec
push
imul
arpl
out
gs
push
add
xchg
jns
add
pusha
push
js
mov
clc
jl
add
sub
fdivs
xor
sub
mov
and
ds
dec
push
mov
push
xchg
push
mov
jnp
call
xor
inc
and
push
add
lea
push
mov
pause
mov
movsl
jge
sbb
cmp
sahf
inc
mov
or
or
sbb
push
test
out
addl
lock
push
jne
ds
cmpl
mov
iret
loope
imul
shll
je
sub
adc
dec
sub
outsb
add
pop
pop
mov
xchg
je
sti
xchg
jmp
les
xchg
ja
je
mov
stos
cld
pushf
pop
or
xor
inc
inc
sub
mov
or
outsl
adc
enter
jmp
cltd
sub
test
test
ja
addr16
mov
mov
xchg
cwtl
in
outsl
imul
push
push
stos
fstps
inc
bound
xor
dec
cmp
outsb
movsl
cwtl
push
pop
pop
lods
xchg
daa
fwait
push
adc
ret
into
inc
cmp
and
and
bound
stos
push
inc
sub
sub
stos
xorl
out
adc
pop
lods
push
icebp
cmp
pop
or
inc
push
and
adc
iret
rcrb
outsl
jbe
rcl
cmp
fwait
lods
sub
shrb
mov
imul
test
loopne
pop
scas
mov
clc
and
aas
in
mov
pop
jbe
sbb
pop
cmp
jge
ja
icebp
int
inc
mov
jmp
sbb
and
fcoms
sbb
loope
pop
jo
daa
inc
sbb
mov
or
pop
jg
inc
or
in
rcl
inc
stos
lret
sbbb
mov
rol
fisubl
ret
leave
test
pop
dec
pop
push
jecxz
mov
dec
mov
jp
mov
add
dec
cmpsb
and
pop
cmpsb
fstl
push
inc
ljmp
pop
hlt
xchg
sahf
test
sub
add
xlat
sub
adc
or
or
xor
sbb
sbb
je
cmp
insb
ret
mov
and
add
or
rep
shll
sbb
hlt
cltd
hlt
xor
dec
mov
mov
pushf
adc
sarl
pop
sub
push
xorl
stos
and
adc
pop
push
pushf
je
mov
and
dec
push
add
xor
inc
xchg
inc
jp
fidivrs
lret
push
xlat
push
outsb
add
adc
add
or
cmp
xchg
inc
add
xor
or
adc
outsl
ljmp
inc
movsl
in
push
dec
stos
pop
mov
sbb
lods
loope
cmp
dec
rcll
push
cmp
or
pop
and
fsubs
inc
push
cmp
insb
mov
orb
adc
push
adcl
loopne
loopne
push
cmpsl
lea
pop
or
les
add
mov
add
inc
jl
jmp
adc
loopne
mov
and
sub
xor
pop
adc
mov
xor
repz
mov
dec
push
push
add
xchg
sub
push
jne
sub
dec
and
push
add
adc
pop
and
cmp
out
and
and
mov
std
inc
and
lret
add
dec
xchg
add
adcb
mov
bound
cmpl
pop
es
pop
daa
pushf
shrl
adc
sarl
xchg
das
pop
pop
fdivs
cmpsl
and
push
pop
imul
mov
loopne
add
push
adc
movsb
pop
add
leave
cmp
cmpsl
adc
add
push
push
push
and
ds
dec
pop
fucomp
inc
in
push
rorb
iret
jnp
jle
sub
inc
fistpl
scas
jo
pop
xchg
add
lock
pushf
adcl
mov
sub
orl
dec
xchg
and
call
or
jmp
and
stos
push
daa
mov
jmp
add
adc
popa
sub
jnp
mov
flds
xchg
cmp
xchg
std
lcall
push
add
pop
movsb
iret
rolb
mov
mov
lea
sbb
mov
insl
mov
enter
ljmp
test
sbb
or
pop
mov
and
push
daa
adc
fcmovnu
push
push
fidivs
cld
inc
mov
in
push
outsb
ret
lods
andb
sub
ret
and
inc
xor
mov
and
test
shll
cmp
xor
and
add
rolb
adc
std
lock
orb
xchg
push
aaa
in
cmp
push
xor
scas
jp
addl
jb
mov
fldcw
out
mulb
mov
mov
xchg
in
add
insl
hlt
test
vunpckhps
cli
sub
ja
add
cmp
add
xlat
and
aaa
mov
push
je
lahf
mov
adc
dec
xorb
mov
mov
inc
sub
pusha
cmp
cmpsl
or
adc
adc
lahf
mov
push
pop
jne
ret
inc
cmc
inc
inc
pop
cmp
fsubs
mov
gs
pop
xchg
adcb
mov
pmulhuw
std
lret
or
clc
jge
icebp
sbb
mov
fmuls
dec
inc
cli
nop
adc
xor
fs
add
adc
insl
rolb
inc
or
xchg
cmpl
add
and
xor
xorb
pop
mov
lcall
cmp
hlt
es
push
pop
push
roll
idivl
push
sar
mov
and
sbb
hlt
xchg
push
pop
es
jb
push
push
cmp
inc
push
inc
inc
rcll
inc
inc
insb
sbb
adc
je
push
add
inc
jne
cmp
or
mov
pop
push
dec
addb
xchg
adc
cltd
push
sbb
cmp
sbb
pop
jp
push
addb
aas
pop
pop
push
sbb
inc
pop
inc
sbb
rcll
or
fwait
jne
sub
and
push
or
in
xchg
int3
movsl
and
jp
mov
loopne
add
mov
sbb
mov
nop
sbb
test
sbb
or
mov
pop
aam
sbbb
xor
ja
adc
fstp
add
mov
cltd
cltd
cwtl
call
aad
pop
inc
js
enter
loopne
insb
out
sbb
loope
stos
add
mov
jae
jecxz
ret
cmp
out
pop
int3
mov
pop
sar
dec
test
jo
insb
mov
cmp
mov
or
xchg
cmp
test
xchg
dec
pop
sub
test
add
and
in
adc
cvtpi2ps
push
or
inc
add
stc
xor
jecxz
aas
dec
test
or
cmp
sub
movsl
dec
ret
adc
inc
ja
loope
inc
mov
push
xchg
sub
sub
sub
dec
xor
add
mov
cltd
clc
dec
inc
sub
addr16
add
sub
adc
or
or
mov
cmp
sub
sahf
xorb
xchg
sub
pop
mov
outsl
and
mov
nop
push
push
push
mov
testl
inc
mov
in
out
mov
mull
mov
negb
adc
jb
adc
scas
xchg
jnp
inc
pushf
sub
je
sti
js
cli
fidivrl
mov
sub
jp
push
or
adcl
data16
sub
cmp
fwait
andb
jb
lock
mov
cmp
inc
stos
and
dec
pop
dec
jg
movsl
outsl
bound
aas
push
add
sub
push
add
movsl
or
lds
add
xchg
and
in
xor
lds
pop
frstor
jae
cmp
imul
push
in
ret
ret
out
pop
xchg
mov
aad
pop
pop
or
pop
pop
test
repnz
adc
inc
shrb
mov
test
or
push
movb
mov
cmp
je
pop
call
adc
jp
movsl
cmp
mov
loopne
add
push
leave
add
lods
add
and
fcompl
pop
and
xchg
in
pushf
stc
or
push
add
mov
add
push
sub
dec
shl
cld
test
push
adc
jno
lds
jg
repz
push
pop
or
mov
subb
push
mov
enter
push
push
and
adc
inc
sbb
mov
outsl
push
inc
dec
add
dec
mov
aad
push
pop
xor
jb
dec
test
inc
and
pop
dec
aas
fwait
mov
nop
mov
int3
push
sti
popa
movsb
lock
pop
push
and
pop
pusha
jl
movsl
sbb
mov
mov
outsb
jnp
cmp
add
xor
mov
add
repnz
cwtl
sbb
mov
outsb
xchg
sbb
xlat
sahf
add
sbb
fs
movl
lods
sbb
sub
push
and
shll
pop
sbb
test
jg
inc
pushf
cmpsl
add
pushf
cwtl
mov
dec
aas
aam
push
pop
in
push
test
or
xchg
xor
loopne
scas
or
or
adc
add
insb
or
push
ss
lret
inc
push
xchg
or
push
imul
inc
lahf
inc
test
rorl
dec
mov
rdpmc
out
in
push
loop
pop
notl
push
sub
cmp
cltd
popa
gs
push
push
sub
mov
sbb
jmp
sub
cmp
insb
nop
adc
jmp
ljmp
call
cmp
roll
movl
pop
movl
rolb
sub
push
insb
jmp
pop
leave
int3
int3
pop
push
push
sbbb
in
dec
mov
fmulp
pop
and
inc
in
mov
dec
les
bound
outsb
fsub
add
shr
inc
xor
fidivl
test
dec
loope
cmc
push
lock
dec
cmpl
mov
jae
ds
hlt
fs
sbb
fidivs
int
mov
aam
rcr
add
or
enter
jns
fidivrs
xor
adc
adc
cmp
xor
sbb
repnz
pop
add
sub
pop
scas
aam
rolb
lcall
adc
jle
in
jbe
fists
jge
cmpl
test
cmp
dec
shll
js
js,pt
and
out
outsb
jo
scas
repnz
divb
mov
pushf
cltd
cmpsb
xor
add
mov
and
mov
out
popf
or
call
adc
xor
jnp
stos
jbe
xor
int3
mov
lock
cmpsl
inc
mov
fadds
cmp
jp
es
push
movsl
push
jns
pop
test
inc
pusha
adc
ds
push
jp
lahf
jb
mov
jl
inc
movsl
sub
sahf
cmp
sbb
je
repz
push
pop
xchg
js
push
cmp
test
rcl
sbb
pop
cmp
xchg
gs
push
xlat
jb
insb
jg
cld
dec
sub
or
shl
push
arpl
mov
add
or
push
push
fldz
out
aad
pusha
dec
sarl
mov
lods
jb
cwtl
cmp
decl
adc
sbb
adc
sbb
ds
mov
adc
ja
jl
rol
or
mov
les
lock
sub
fdivs
cmpl
pop
push
dec
push
adc
sub
adc
mov
push
rcl
clc
push
lahf
in
or
lret
push
mov
jbe
adc
ljmp
xchg
inc
mov
jle
les
sbb
and
sub
test
inc
imul
and
mov
jle
and
mov
xor
loope
cmp
or
ret
sbb
jmp
sar
fildll
xlat
jl
pop
mov
adc
dec
jb
jg
add
jg
push
mov
add
rolb
stos
fwait
xor
adc
and
inc
pop
push
sbb
lea
mov
add
or
push
ss
mov
jg
ret
xor
rcrb
sarb
adc
leave
sbb
loopne
mov
insl
add
add
or
add
push
ret
push
push
mov
pop
lahf
cmp
xchg
icebp
dec
cld
cmpb
or
dec
je
fisubrs
hlt
adc
xlat
cmp
lods
mov
fisubrl
adc
es
xchg
inc
adc
add
xchg
jo
xor
sahf
divl
pop
mov
xor
call
jne
mov
sbb
jl
in
sub
cmp
adc
fs
xchg
shr
pop
mov
or
inc
inc
add
jo
and
dec
pop
inc
pop
pop
loopne
ljmp
or
jb
pop
pop
push
movsb
pop
cmp
push
dec
push
jns
and
or
aam
std
inc
push
and
or
inc
mov
push
cltd
mov
pop
pop
pop
rcrb
mov
or
dec
sbb
cmp
pop
mov
lret
push
xchg
push
mov
inc
or
cmp
xor
pushl
add
push
add
and
dec
add
xlat
out
andl
jne
or
inc
jne
or
and
inc
shlb
mov
jl
fldlg2
fldl
sub
inc
pop
pop
push
sub
or
cwtl
ret
loopne
in
jg
mov
fmull
popa
add
mov
cmp
fstpl
flds
sti
fbstp
fdivl
jmp
fmull
fcoml
iret
xchg
adc
inc
push
adc
dec
push
imul
sub
or
lock
rclb
lock
out
sbb
sbb
scas
gs
pop
add
dec
jecxz
push
pop
xor
sub
jle
mov
or
jl
fmulp
cmp
fdivrp
or
xor
jmp
dec
into
clc
mov
lea
dec
daa
pop
pushf
push
out
test
sub
push
addb
mov
fisubl
popf
and
push
or
pusha
inc
pop
push
sbb
and
add
cmp
push
push
fs
push
pop
shll
dec
or
mov
dec
popf
pop
lock
xor
inc
roll
add
lods
fdivs
pop
testb
push
push
jo
ret
inc
inc
xchg
inc
inc
sbb
and
jg
rorl
fs
lret
ljmp
rorb
pop
sarl
int3
mov
push
jp
bound
call
dec
pop
mov
scas
push
jmp
fadds
dec
ret
push
mov
insb
push
jbe
pop
jecxz
and
push
mov
enter
push
sub
mov
pop
xor
sub
ret
cmp
jmp
xorb
pusha
lods
pushf
pop
xor
sub
add
std
push
mov
dec
andl
lahf
rorb
add
orb
roll
xlat
add
mov
inc
mov
cmpb
mov
push
push
jmp
xor
out
and
subb
sbb
sub
jnp
pop
inc
in
jmp
push
jmp
or
mov
cmp
and
xchg
imul
leave
arpl
stc
jno
mov
cltd
mov
dec
xor
bound
popf
push
add
pusha
mov
fsubrl
aaa
push
xor
frstor
hlt
adc
add
pop
push
popa
and
xor
outsl
sbb
mov
cs
push
ljmp
xor
or
popa
loop
mov
or
dec
pop
test
pop
inc
push
inc
aam
shrb
fnsave
pop
je
dec
das
je
or
cmpsb
push
je
xchg
icebp
and
inc
mov
and
adc
add
fwait
out
data16
mov
daa
mov
sub
sbb
ret
or
jmp
ret
pop
outsl
adc
mov
into
out
xchg
daa
dec
dec
push
jle
iret
xor
das
sub
fwait
cmp
aad
add
mov
lods
mov
or
xor
and
and
pusha
xorl
mov
shrl
mov
insb
pop
jle
int
inc
xor
nop
mov
and
loope
mov
pop
pop
adc
cs
mov
mov
pop
xor
das
add
sub
adc
adc
sub
xchg
cld
int3
mov
cmp
jne
cmp
jne
add
shrl
pop
push
push
sub
cmpb
jne
and
icebp
jne
jl
rorb
push
push
xchg
insb
pusha
add
clc
fnstsw
pusha
add
or
or
fldl
or
nop
in
ret
gs
cmp
push
loop
pop
ret
pop
mov
sub
ret
jmp
movsl
repz
dec
mov
dec
sub
pop
sub
pop
mov
pop
push
ss
hlt
sbb
or
push
fisubs
add
adc
sub
adc
jne
mov
pop
pop
pop
pop
lea
cmp
lds
cmp
jne
mov
ret
cmp
or
incb
lcall
mov
ret
mov
adc
pop
clc
jbe
cmp
jae
jg
xor
call
and
inc
testl
movsb
outsl
sub
push
or
push
mov
jle
push
push
mov
faddl
add
xchg
inc
mov
pop
mov
rcl
dec
ret
jg
jo
push
add
mov
adc
lea
dec
jecxz
xchg
das
loope
inc
subl
ret
push
rcr
sub
mov
lea
ficoml
xchg
pop
outsl
mov
pop
cwtl
or
xchg
xor
pop
mov
fld
xor
jp
mov
out
rolb
xchg
pop
movsb
adc
mov
jbe
psubd
adc
pop
out
jne
jl
cmp
push
inc
mov
stc
cmp
push
lahf
bound
cmp
cmpl
testl
test
imul
sub
or
lcall
fcmovnb
lret
or
int3
out
arpl
pop
lock
sbb
dec
and
adc
inc
or
sub
dec
dec
nop
xchg
movsl
loope
lods
xchg
outsb
dec
jle
stc
xorl
das
mov
push
dec
push
sub
je
sahf
dec
les
adc
sti
and
outsl
insb
mov
jge
hlt
les
fld
xor
xor
or
mov
iret
test
imul
adcb
push
mov
xor
mov
adc
xor
or
add
add
xchg
mov
cmpsb
mov
daa
ret
cmp
pop
jl
push
jb
pop
or
faddp
das
mov
adc
and
and
add
mov
push
push
xchg
push
push
dec
lcall
jno
lds
mov
cmp
dec
leave
sub
xor
mov
rorl
sbb
adc
cmc
cmp
mov
cwtl
ret
mov
pop
pop
cli
mov
vmulpd
push
cmp
ds
sub
mov
mov
push
sub
mov
and
test
arpl
aaa
push
movsb
inc
or
mov
lcall
leave
pop
ffreep
movl
pusha
in
lahf
mov
push
inc
and
jg
cltd
pop
je
ja
ds
mov
daa
ret
mov
sub
jmp
fs
sbbb
lret
in
lock
outsl
mov
push
push
inc
pop
daa
lcall
add
scas
adc
jle
xchg
mov
cmp
je
inc
bnd
push
sarb
loopne
push
or
xor
pop
imul
out
or
lock
pop
add
push
or
fld
xor
icebp
lahf
lods
pop
fstpt
mov
aam
out
je
or
repnz
adcb
dec
jmp
loopne
mov
push
add
int3
arpl
sub
cmp
jmp
sub
dec
cmp
rclb
push
sub
test
cmpsb
pop
pop
mov
jmp
mov
incl
add
insb
loopne
cmp
inc
mov
xchg
bound
pop
ret
mov
add
push
clc
cmp
iret
out
jmp
and
syscall
or
xchg
negl
or
scas
sbb
cmpsb
add
sbb
jle
cmpsb
sti
add
push
cmp
jb
dec
push
or
xlat
push
pop
add
or
dec
aam
adc
pop
mov
insl
mov
jne
mov
lock
je
xor
repz
cwtl
push
sahf
test
fldl
std
adc
mov
cmp
nop
or
push
push
je
xchg
test
and
mov
jbe,pt
cmp
jae
or
mov
cmp
leave
mov
hlt
adc
sahf
push
and
push
dec
inc
push
adc
ss
push
iret
push
loope
lods
ret
push
fsubrl
rcl
andb
sarb
add
adc
or
add
adc
sub
mov
and
inc
lds
jnp
or
xchg
scas
insl
and
xor
mov
inc
div
sbb
cmc
loopne
addl
lds
cmp
adc
es
nop
cmp
pop
nop
or
je
inc
sbb
nop
inc
add
jae
add
dec
sub
cmp
jecxz
or
pusha
popf
call
daa
push
or
lods
rorb
aas
aad
xor
std
jmp
aaa
push
lock
popa
popa
mov
adc
adc
pop
xchg
movaps
and
insb
ss
aam
in
aas
mov
invd
adc
or
mov
push
jne
cmp
jbe
ret
cmp
or
cmpsb
pop
int
sub
add
adc
iret
in
adc
adc
adc
jns
das
xor
daa
mov
sbb
adc
jnp
sbb
and
sbb
dec
xchg
pop
or
clc
cmp
daa
add
mov
xor
insl
add
mov
add
push
dec
flds
dec
popa
push
push
and
push
lea
fmuls
cld
inc
test
fdivp
stos
stos
lea
and
add
stos
lea
cmp
call
nop
mov
cli
push
xor
fldt
fidivrs
popa
dec
inc
out
push
cli
std
add
rcrl
push
rdtsc
cmp
ret
xor
movsl
movsb
push
sub
insb
push
sub
movsw
shrl
int
aas
mov
add
pop
js
adc
or
or
xor
or
ss
sub
inc
dec
pop
dec
xchg
dec
jbe
push
ficompl
add
movl
jle
cli
mov
pop
addl
and
aam
or
or
add
or
jb
adc
adc
mov
and
and
push
adc
ljmp
xor
mov
add
pop
or
movsl
inc
mov
xchg
data16
adc
dec
or
test
adcl
xlat
pop
pop
ds
add
les
jge
cmp
jl
movl
jp
mov
mov
xchg
inc
or
jle
xor
push
mov
shr
or
cmp
mov
sti
ret
test
and
mov
mov
or
and
add
xor
jle
gs
sbb
lcall
mov
lea
cltd
div
inc
cmp
mov
shlb
pop
or
scas
or
jge
mov
ja
popl
push
inc
js
psubb
loopne
pusha
loopne
jne
idivl
inc
aaa
imul
sub
rolb
dec
jne
mov
ds
jp
out
decl
fnstenv
inc
in
mov
inc
stc
fsts
stos
push
mov
jge
add
push
call
sbb
xor
inc
cli
out
movsb
mov
mov
mov
nop
and
xor
add
xchg
jo
mov
call
xor
and
lahf
hlt
and
pop
shrl
push
sbb
add
mov
push
adc
or
add
out
push
popf
imul
or
lea
pop
and
repnz
pop
adc
add
sti
jl
popf
addl
add
insb
and
lods
add
cltd
push
sar
add
dec
dec
fisubl
adc
hlt
int3
mov
add
jp
stos
stos
lods
cmp
sbb
mov
aam
pusha
rdpmc
dec
or
mov
je
push
call
mov
or
ret
push
push
rolb
lret
push
aas
xor
add
pusha
test
mov
in
test
jle
and
lea
pop
lcall
cmp
add
cmp
in
jmp
shl
add
push
lods
adcb
test
add
in
rcll
in
fwait
pop
in
mov
fiadds
in
ja
jnp
sub
push
aad
ror
sbb
shll
out
or
addr16
mov
push
and
sbb
test
cld
xor
mov
in
pop
mov
imul
xor
mov
je
dec
adc
call
int3
dec
pop
mov
mov
sbb
adc
dec
mov
out
cmp
jb
mov
push
leave
rclb
jne
sbb
jecxz
or
jb
jbe
sub
mov
lret
ucomiss
clc
dec
inc
mov
addl
jo
sub
test
dec
push
push
push
sub
mov
aad
mov
cmp
enter
dec
inc
pop
loop
lods
inc
add
push
inc
push
test
aas
cmpl
inc
and
dec
mov
sub
add
and
mov
adc
inc
xor
mov
mov
fisubs
jmp
and
cmpsb
or
push
add
jbe
mov
sbb
and
or
push
xor
int
xor
dec
inc
adc
and
insb
push
popf
xlat
add
fmull
sub
mov
adc
cmpsl
mov
movsb
mov
dec
data16
xlat
fistpl
dec
imul
loopne
in
inc
xchg
das
adc
scas
popa
sahf
and
dec
mov
jae
pop
cmp
inc
and
hlt
push
jl
sub
push
xor
cs
xor
shlb
sub
ret
loopne
jno
pop
insl
and
xchg
mov
mov
and
call
xor
mov
lods
cld
cmp
inc
pop
shl
pop
push
mov
xchg
jecxz
push
mov
mov
cmpb
adc
jae
mov
push
sti
xor
ss
add
mov
rol
jg
xchg
in
mov
or
in
mov
dec
inc
je
add
mov
cmp
sub
aam
xor
jne
mov
mov
sbb
dec
xchg
and
inc
rcrb
jnp
jb,pt
aam
mov
ljmp
jle
add
pop
sti
xchg
cmp
sub
push
mov
cmp
add
sbb
and
fimuls
jnp
dec
test
dec
data16
push
dec
lods
inc
cltd
inc
sbbl
dec
lahf
or
test
pop
mov
xchg
dec
mov
pop
sbb
call
loop
xor
fcoml
std
enter
add
jge
shl
ds
rcl
lods
aas
xchg
adc
fistpl
out
mov
fisttpll
cmpsl
xor
mov
rolb
xchg
add
flds
sarl
and
je
in
arpl
cmp
repz
arpl
inc
inc
jmp
xchg
movsb
xor
call
adc
push
xor
into
dec
stc
mov
dec
loop
xchg
push
sahf
orb
dec
cmp
adc
xchg
call
push
sub
push
movsb
aas
add
pusha
sbb
das
adc
negb
nop
das
cmp
jge
push
ss
cmc
dec
push
jl
loopne
sub
scas
cmp
insl
int
pop
push
push
lods
sbb
inc
int
push
ss
lea
add
lahf
push
add
idiv
fwait
sbb
icebp
inc
push
mov
add
pop
xchg
pop
loopne
outsl
ret
and
jo
test
xor
push
xchg
xchg
adc
pop
pop
xor
jl
and
pop
into
cli
or
test
xor
stos
push
jge
testb
sbb
xorl
idivb
insb
std
push
aam
mov
and
into
or
xchg
sbb
insl
add
aam
and
loope
cltd
adc
call
mov
and
fsubs
mov
outsl
sbb
scas
loopne
mov
xchg
push
je
cmp
adcb
xor
lea
fstps
add
or
push
pop
push
add
inc
adc
xchg
inc
pop
dec
pusha
sub
push
push
inc
mov
xor
mov
push
xchg
cmp
adc
or
cmp
sub
popf
pop
xchg
inc
or
cmp
xchg
and
pushf
leave
add
mov
mov
mov
shlb
fidivrl
movsl
daa
cmpsl
js
xor
cmp
adc
repz
shlb
mov
ss
leave
gs
or
pop
jecxz
in
popf
pop
add
push
das
push
add
jnp
in
imul
inc
sbb
imul
mov
fs
mov
jmp
in
push
or
out
jbe
jne
sbb
mov
inc
mov
sub
sbb
or
push
mov
icebp
decb
ja
idivb
jge
pop
sbb
jmp
clc
and
or
addr16
clc
inc
push
cwtl
and
mov
add
fcmovb
les
sbb
pop
stc
cmp
enter
sub
cltd
mov
mov
sub
lcall
lret
outsb
sahf
cmpl
sbb
jne
pop
inc
and
pop
roll
adc
leave
and
push
mov
aas
jp
loopne
sbbl
jle
bound
movsb
xchg
jecxz
lods
and
stc
ret
lea
sbb
mov
and
add
or
cmpsb
mov
lds
ret
sarl
mov
inc
add
xor
mov
stos
add
scas
jo
mov
push
les
repnz
test
js
xchg
fcmove
pop
test
xchg
pop
adc
mov
mov
push
mov
xchg
push
pop
mov
out
call
mov
rolb
push
jge
jge
xchg
mov
sub
in
dec
mov
or
add
test
dec
cld
pop
enter
add
mov
cltd
or
or
add
sbb
out
add
add
xchg
stos
xchg
sub
xor
ret
ds
pop
push
push
or
lea
mov
inc
fadd
in
mov
test
lods
push
pop
sub
orb
mov
popf
les
jb
ficoms
inc
subl
test
adc
pusha
bound
cmp
push
cmp
rolb
or
nop
cmp
or
data16
mov
imul
sahf
cmp
es
dec
adc
shl
sub
pushf
xchg
adc
ds
lea
mov
sub
pop
pop
mov
push
sub
xor
push
jne
dec
scas
or
shll
sbb
sbb
in
jae
mov
sbb
rorl
push
push
ja
lahf
push
pop
out
push
push
push
mov
inc
and
and
mov
leave
cli
and
adc
cmp
lea
out
je
popf
gs
jo
xchg
push
sbbb
popf
js
mov
and
dec
in
ret
arpl
ljmp
rorl
cmp
cmp
or
pop
mov
pushf
inc
sbb
dec
lods
mov
je
in
test
outsb
mov
or
fadd
pop
sub
out
pop
mov
insl
xchg
loopne
stos
popf
mov
mov
dec
andl
jge
pusha
test
sti
xchg
sub
adc
push
pop
pop
jae
cmp
ss
pop
pop
iret
adc
add
shrb
sub
mov
test
lds
in
mov
lds
jl
push
clc
ss
je
faddl
cmpsl
stc
fiaddl
mov
movsb
mov
aaa
mov
add
les
push
inc
inc
jbe
xchg
testl
pop
push
bswap
jnp
fldl
jle
test
mov
sysret
lcall
dec
sbb
adc
cs
das
xor
flds
orl
int
jbe
dec
add
decb
or
into
sti
bound
mov
push
add
dec
or
pusha
or
gs
test
jo
or
insb
je
icebp
xor
cwtl
pop
or
fldl
or
pop
js
push
cmp
mov
das
jmp
add
push
add
jle
mov
fs
pushf
clc
mov
jne
pusha
pop
push
scas
loop
inc
mov
mov
mov
stos
mov
add
adc
roll
notb
jbe
cmp
loop
inc
sbb
das
stc
lods
or
jne
xchg
es
cltd
sub
js
shl
das
and
addl
adc
fs
push
int3
repz
cwtl
int
ljmp
cmp
sbb
xchg
add
in
and
and
js
jo
lods
insl
sbb
adc
roll
fldenv
or
jp
add
mov
jb
add
inc
enter
sti
ret
push
popa
filds
mov
subb
filds
add
pop
pop
inc
sub
jg
loopne
or
cld
push
rorb
cs
repnz
inc
push
xchg
ss
ret
ja
adc
dec
fidivrs
mov
loopne
inc
push
add
loope
push
mov
test
mov
adc
dec
setge
and
inc
push
mov
popa
loopne
push
daa
cmp
dec
insl
mov
and
cmp
mov
mov
xchg
ret
cmp
jbe
cltd
stos
cmp
jg
inc
daa
or
sub
enter
jl
cmpsl
notb
jb
add
adc
lcall
or
out
dec
add
in
mov
inc
xlat
dec
dec
lahf
xor
fistpl
adc
ds
popa
shll
mov
xor
rcrb
push
jbe
pop
adc
lahf
or
and
inc
or
cs
jae
clc
adc
lods
sbb
rclb
inc
adcl
adc
xchg
dec
sbb
out
mov
addr16
mov
jg
sti
out
lods
xchg
mov
push
dec
sub
xlat
aad
pop
or
push
cmp
das
dec
pop
xchg
push
int
cmp
xor
imul
gs
cmp
scas
push
cs
jmp
fistpll
ret
sbb
cmc
xor
cmp
sub
movsb
movsl
lods
bound
sub
and
mov
roll
cltd
inc
cmp
andb
mov
sbb
in
call
xor
adc
jp
cmp
nop
mov
les
inc
fcompl
test
add
push
cltd
dec
scas
je
or
fiadds
inc
pusha
pusha
push
imul
inc
fistpll
loope
mov
shll
cmp
jbe
pop
xchg
jle
add
clc
push
test
sbb
inc
fs
xor
mov
sub
pop
pop
cli
pop
add
or
add
sbb
adc
ffree
add
jo
pop
sti
adc
into
inc
and
mov
ror
test
pop
in
sub
mov
add
das
test
add
pop
movl
mov
or
inc
jl
inc
subl
jg
loopne
and
divps
iret
std
push
or
roll
test
mov
daa
mov
push
dec
mov
je
ljmp
outsb
sub
sub
lea
xchg
mov
clc
pop
sbb
push
insb
sub
insl
insl
popa
mov
push
or
into
dec
add
fidivs
push
add
sbb
loope
test
push
lret
fadds
cwtl
sbb
sbb
loope
les
cld
adc
jmp
push
cmp
das
cs
mov
jmp
andps
mov
and
lret
fs
mov
cmpsl
mov
adc
push
fnstenv
into
leave
ja
push
in
dec
or
cwtl
or
add
push
dec
out
jg
inc
cmp
jl
mov
ficomps
in
outsl
inc
jecxz
push
pushf
push
fisttpl
jnp
cs
sub
aam
add
cmp
sbbb
or
add
dec
pusha
sbbb
shl
lret
xchg
nop
fimull
insb
pusha
adc
mov
add
pop
dec
fdivl
and
or
mov
pop
xor
lahf
andb
loopne
aad
fucomp
adc
or
adc
adc
xchg
popf
adc
mov
cmp
add
ret
jecxz
je
xchg
fisttps
mov
stc
cmc
adc
call
pushl
dec
push
mov
std
sbb
out
jle
or
int
adc
mov
sub
push
jge
andnps
jo
inc
pop
or
jnp
pop
cmp
jne
push
addr16
enter
adc
xchg
add
xor
jo
push
cli
js
lret
lods
pop
cmp
jne
popf
pop
mov
divps
enter
test
jp
inc
in
test
clc
outsl
shrb
rolb
dec
ljmp
xchg
pop
dec
aaa
xchg
popf
xchg
nop
mov
or
aad
loopne
insb
jmp
mov
scas
adc
add
sbb
dec
icebp
movl
pop
insb
cmp
icebp
subl
mov
test
into
daa
aam
in
add
movsl
cld
push
push
inc
cmpsl
add
push
arpl
and
push
movsb
add
or
mov
ret
pop
int3
add
pop
inc
addl
add
xor
mov
sbb
in
push
shll
outsl
inc
test
push
sbb
faddp
std
dec
in
and
push
sub
sub
aad
sub
jo
movsl
adc
sbb
sar
xor
adc
subl
pop
sbb
cltd
daa
neg
subl
dec
push
mov
rclb
inc
or
adc
inc
xchg
pop
faddl
jne
or
je
xor
mov
sub
inc
fst
std
jne,pn
jno
fstl
mov
es
sbb
xchg
test
push
movl
push
pop
push
add
inc
rcrb
adc
iret
jmp
and
sbb
insl
add
push
pop
or
es
arpl
and
pop
mov
add
inc
jmp
or
mov
push
adc
sbb
pop
mov
pop
ret
mov
push
imul
and
pop
sti
xchg
out
push
push
loopne
xor
adc
and
dec
push
stos
movsb
hlt
orb
loop
jo
cld
add
dec
aad
sbb
mov
fmull
fsubrl
fadd
sbb
xorl
and
into
and
popf
xchg
xchg
jne
rcr
rorl
mov
adc
ret
orl
pop
push
mov
cmp
pop
dec
or
lahf
jo
dec
mov
cmp
cmp
and
sbb
inc
or
and
adc
clc
jmp
inc
sti
outsl
cld
and
outsb
bound
in
pusha
jne
in
in
mov
hlt
movsl
mov
and
and
call
xchg
inc
scas
ds
je
inc
adc
push
push
pop
jmp
xchg
testb
add
add
adc
sub
ds
push
lea
add
mov
movsb
dec
cld
movsb
int
adc
adc
adcl
push
adc
pop
push
dec
inc
pop
je
orb
sbbb
rorl
jne
mov
pop
int3
aaa
loopne
rcll
and
inc
xchg
orl
out
jmp
popa
jl
dec
rorl
pop
fstps
jne
aaa
and
jnp
dec
dec
add
jo
sbb
insb
roll
or
sbb
in
sbbb
push
dec
or
push
js
pop
pop
out
popf
cmp
or
popf
addb
les
mov
pop
scas
shl
test
test
sub
popf
pop
ret
inc
inc
test
xchg
mov
fimuls
fisubl
in
push
jbe
jae
clc
test
sub
lock
mov
pop
aaa
js
add
add
or
pop
dec
cmpl
loop
add
enter
cmp
add
xchg
cmp
lcall
pop
addr16
shrb
mov
adc
push
sbb
scas
cmpsl
inc
pop
ret
sub
jno
lea
add
in
movsb
adc
adc
lret
hlt
sbbl
add
jle
cmp
lock
xchg
orl
push
movsl
dec
push
fldt
push
repz
cli
push
jg
inc
sbb
dec
dec
lcall
out
add
loope
aam
mov
xchg
rol
icebp
xor
inc
dec
lea
stos
add
or
jl
inc
aaa
mov
mov
mov
add
dec
mov
cmpw
and
dec
jne
and
push
push
push
jp
dec
sbb
xor
push
pop
adc
and
push
aam
or
mov
xchg
xchg
jg
or
jno
jae
sbb
in
call
push
test
sahf
ret
or
pop
push
ret
pop
add
ret
aad
loopne
mov
sbb
add
xchg
cvtps2pi
cmp
inc
push
and
mov
add
cmp
inc
inc
sbb
adc
pop
cmp
rclb
roll
inc
dec
out
and
out
mov
popa
shrb
mov
fiadds
or
push
mov
dec
cmc
and
pop
pop
lret
ret
jg
inc
push
je
push
push
mov
push
movsb
push
pop
mov
imul
add
xor
dec
pusha
and
cmp
ds
push
and
pop
incl
dec
lods
nop
es
loop
xchg
cmp
add
ret
out
push
pop
cmp
mov
je
and
loope
pushf
adc
adc
dec
ret
pop
in
jae
roll
inc
cs
or
inc
push
mov
mov
xchg
push
or
out
or
data16
sub
in
dec
push
popf
fcmovnu
adc
nop
popa
rorl
jle
mov
in
add
sahf
xchg
sub
jle
inc
jmp
push
pop
hlt
or
xchg
jbe
xor
sbb
lods
add
cmp
pushf
call
cmp
cmp
je
push
lcall
mov
ss
adc
jp
or
out
pop
inc
mov
test
clc
ret
jae
mov
adc
shr
or
jne
push
fidivl
push
in
adc
test
jmp
xor
sbb
int
add
je
test
sbb
and
and
insb
fs
push
outsl
sub
jb
lret
aad
into
mov
or
pop
sbb
mov
jbe
dec
mov
sub
ljmp
or
push
pop
clc
aas
inc
std
lret
sbb
sbb
cwtl
and
fadds
mov
sbb
sbb
adc
push
push
push
jmp
mov
sub
stos
add
sbb
cmp
dec
xchg
fldz
je
sub
stos
lock
mov
flds
push
fnstcw
push
cltd
mov
cmp
xor
ss
xchg
sbb
imul
jecxz
jp
cmp
std
pop
pop
insb
xor
or
cmp
or
jae
adc
incb
sbb
stos
movsl
pop
sarb
sub
dec
jne
push
cli
insb
add
sar
sub
mov
rcr
gs
loopne
aam
hlt
inc
sub
call
ja
cmpsb
aad
or
dec
push
movsl
icebp
cmp
pop
pusha
fs
shrb
mov
loope
add
and
push
xor
dec
std
loopne
out
jg
lea
out
push
push
push
pusha
pop
in
jno
out
add
lret
repnz
or
ret
lcall
dec
stos
push
loopne
xor
push
cltd
lds
pusha
cmp
es
xor
or
pushf
dec
aad
int
pop
mov
outsb
mov
add
out
insl
mov
je
push
lock
lea
mov
shr
insb
or
or
roll
lea
jne
add
push
mov
cmp
push
add
and
push
and
xchg
dec
add
adc
int3
and
mov
in
jne
lcall
xor
and
std
pop
notb
fisubs
pop
out
loop
fwait
dec
sbb
jnp
push
jnp
sub
dec
adc
push
xor
sbb
push
mov
test
inc
faddl
icebp
lea
dec
push
shl
pop
or
xchg
dec
jle
push
push
push
inc
dec
fbstp
push
inc
fimull
adc
pop
fiadds
loopne
push
test
push
shlb
loop
mov
push
out
aas
push
pop
sub
pop
add
ret
mov
add
out
inc
jnp
enter
jg
pop
rolb
sub
nop
std
rcrl
push
inc
cmp
adc
xchg
nop
aaa
test
mov
pushf
out
xorb
out
mov
sbb
les
loopne
jge
neg
cmp
jge
mov
fs
cmpsl
mov
push
fsubs
mov
jmp
jge
neg
cmp
outsl
dec
sub
nop
add
loop
inc
out
push
cmp
andl
les
pop
loope
clc
rolb
cmp
or
call
add
clc
addb
xor
push
lods
cmc
adc
xor
jge
je
lock
lret
jo
subl
sub
push
cltd
cmp
insl
loopne
jne
cmp
jne
add
sbb
insb
lock
inc
push
pusha
iret
loopne
imul
inc
jns
add
adc
mov
cmp
xor
lods
addr16
scas
inc
mov
cmp
int3
add
lds
pop
addr16
add
dec
je
lret
and
jge
adc
add
jno
ret
loopne
fwait
mov
adc
push
das
add
nop
jno
lock
stc
xor
aaa
sbb
test
push
jecxz
push
andb
pushf
insb
pop
cs
shll
rorl
inc
sbb
js
jg
addr16
sbb
pop
cmp
add
inc
sub
mov
repz
rclb
add
pop
cmp
je
xor
inc
xor
ficompl
fsubrs
mov
add
mov
add
pop
mov
aas
add
std
xchg
mov
adcb
mov
stos
push
repnz
xchg
mov
cmp
push
insb
or
add
loop
cmp
pop
adc
pop
fcoml
test
adc
subb
subl
je
testl
add
push
mov
adc
add
lock
pop
push
or
cmp
loop
push
fsts
sbb
ret
xchg
js
cmp
sbb
adc
sbb
mov
xchg
clc
fldenv
cmp
add
sub
and
popa
insl
push
les
lea
xlat
or
cli
movl
add
cmp
xor
mov
jne
mov
loopne
push
loopne
mov
sub
mov
gs
lahf
dec
mov
dec
or
lcall
pop
cs
scas
lods
adc
xor
movsl
enter
mov
lods
sbbl
add
add
in
outsb
stc
inc
mov
adc
pop
xchg
add
fldl
add
enter
push
mov
mov
mov
stos
or
nop
xchg
lahf
push
aad
je
xlat
inc
mov
ds
xor
adc
test
xlat
mov
pop
mov
dec
lds
lods
inc
xor
push
jp
mov
or
inc
int3
jnp
out
push
xchg
pop
ds
pop
jbe
xor
add
data16
mov
inc
ss
jnp
fcoms
push
outsb
push
jg
cs
cmp
movsb
inc
decl
enter
add
sub
jl
inc
inc
je
dec
and
rorb
ss
movsb
push
jne
scas
add
popa
and
sub
and
dec
jo
imul
sub
dec
pop
pop
mov
push
lds
je
mov
clc
sub
mov
cwtl
fnstsw
push
xchg
xchg
inc
cwtl
pushf
popa
pushf
xchg
inc
into
popf
testb
xor
fstl
add
ret
adc
inc
ret
sbb
js
inc
out
insb
jg
and
insl
xor
cmp
mov
dec
jo
and
inc
shll
add
jmp
ret
mov
sub
mov
dec
cs
outsb
ret
add
fadd
jl
ss
cmpl
mov
jl
jns
clc
test
add
push
imul
std
push
cmpl
jge
inc
gs
fistps
or
cmp
jle
mov
cmp
push
or
lahf
adc
push
add
jmp
lret
add
jg
add
int
pop
push
aas
xor
js
push
lret
adc
add
outsl
xchg
je
ds
push
add
xchg
sbbb
cli
fsubr
jge
ss
sbb
cmp
dec
and
cwtl
inc
jne
sbb
sbb
xorb
cli
add
sahf
xchg
orl
lods
and
ficompl
add
adcb
loopne
shrl
sbb
push
pusha
ret
clc
rolb
mov
xchg
ja
push
leave
ret
sbb
or
add
repz
push
cmp
inc
cmp
mov
mov
add
inc
lea
add
xor
lea
sub
incl
sub
movl
jle
mov
shrb
addl
jbe
jl
mov
cmp
addl
mov
pushf
aas
xchg
fcoms
int
mov
mov
imul
out
add
pushl
roll
hlt
jo
inc
add
sbb
stos
inc
sahf
ret
clc
outsl
int
bsf
jnp
or
fmuls
xacquire
inc
pop
dec
mov
mov
fstp
cwtl
rclb
or
in
test
mov
mov
out
nop
stos
cmp
out
or
adc
adc
rorb
jo
loop
ja
mov
inc
sbb
or
ret
sarl
inc
fcomps
ret
jns
xchg
jle
add
pop
je
sbb
pushf
push
sbb
mov
jb
cmp
inc
mov
or
pop
mov
jl
leave
sbb
mov
fiaddl
stos
push
inc
and
adcl
test
jb
mov
cmp
stos
test
lret
pusha
sub
loope
adc
push
jl
test
sbb
or
jecxz
sub
cmp
push
popa
xor
dec
movsl
lret
push
cmp
jne
and
aaa
push
sub
iret
xor
shlb
inc
test
stos
incl
push
enter
outsb
mov
mov
mov
lret
div
fnstcw
out
inc
xchg
mov
out
xchg
or
xchg
xor
jle
cltd
mov
stc
inc
nop
jl
adc
cmp
push
sbbl
mov
jo
ret
lret
push
shr
jle
jle
sahf
push
pop
ret
imul
loope
lock
jnp
sbb
pop
loop
popf
mov
js
lcall
ret
push
cmp
mov
push
les
dec
out
push
push
cmpl
or
ljmp
jae
push
idiv
inc
test
rolb
cmp
pusha
and
xor
fcmovnu
mov
dec
cmp
adc
mov
cltd
cld
pop
mov
pop
mov
adc
and
dec
add
ds
ret
call
mov
movsl
ficoms
icebp
testl
int3
xchg
mov
pop
dec
fstp
dec
sbb
adc
adcl
or
mov
lret
lock
popa
jl
sub
sbb
sbb
sbb
cmpsb
sbb
pop
pop
ret
ficompl
add
int3
mov
data16
cmp
mov
xlat
ror
sbb
and
loopne
add
mov
repnz
push
and
add
cmp
shll
add
or
stos
push
pusha
sbb
push
test
fwait
mov
movsl
fnstcw
jle
pushf
xchg
xchg
pop
aaa
xor
inc
dec
rclb
imul
push
and
mov
add
dec
pop
xchg
inc
jbe
push
add
push
push
cmpsb
js
test
sub
mov
enter
add
adc
adc
ret
insl
mov
iret
bound
jne
push
dec
pushf
pop
add
cmp
mov
scas
mov
xor
mov
pushf
inc
and
mov
mov
jle
sbb
ljmp
adc
pusha
cmpsl
add
lret
je
aaa
fsubr
push
cmp
mov
pusha
ljmp
dec
push
out
mov
xor
adc
jae
mov
push
pop
jne
loope
or
mov
sbb
mov
or
adc
ficoml
repz
mov
nop
push
pop
out
jg
insb
sub
mov
adc
or
xchg
jle
xchg
sbb
sub
dec
inc
rolb
jp
lods
repz
push
imul
dec
or
mov
or
add
cmpsl
fidivrs
sbb
cwtl
pop
shl
je
pop
ret
jg
inc
push
pop
aaa
rcrb
and
add
jecxz
cmp
cli
aad
imul
push
push
jne
movl
pop
lar
pop
sub
cmp
rclb
add
sbb
loope
push
xor
movsb
sahf
sub
cmp
addb
addl
bound
test
inc
outsl
or
adc
push
mov
pusha
jl,pn
das
mov
jl
inc
push
ja
pusha
lods
and
jnp
js
push
lcall
lods
xor
test
mov
and
jbe
cmpb
dec
jo
and
xor
scas
daa
add
xchg
ss
lds
mov
test
arpl
mov
and
fcmovb
xor
pop
je
ret
ret
jp
mov
xchg
std
add
mov
loopne
js
lods
push
iret
adc
mov
xchg
adc
push
inc
shrl
push
cwtl
notl
sbb
sbb
cmp
add
add
cmp
dec
xchg
and
lea
and
inc
movb
adc
out
sbb
js
mov
loop
jbe
xchg
inc
sbb
inc
fldcw
addb
sub
jo
test
lds
dec
mov
jmp
or
gs
cmp
lods
cmp
iret
cmp
jb
xchg
sarb
ficompl
jg
js
in
sar
ret
add
mov
stos
xor
dec
shr
add
add
mov
and
fwait
cld
push
push
inc
imul
mov
sahf
adc
test
push
xor
jne
add
lea
inc
cli
push
sub
sub
pop
jl
cld
sbb
push
out
and
sti
and
cmp
and
sbb
pop
clc
mov
aaa
mov
add
ret
and
shll
push
mov
and
and
int
add
inc
jge
sbb
mov
jne
jmp
cmp
jl
mov
mov
movsb
hlt
lea
mov
cld
loope
adc
xor
cmp
ja
mov
jnp
arpl
test
mov
pop
push
sbb
sbb
fcmovnu
or
dec
push
push
dec
push
sbb
jne
xchg
and
sbb
xchg
dec
imul
cmp
push
inc
jne
push
and
mov
adcb
movsl
test
mov
add
rcrb
mov
imul
icebp
push
cltd
insl
imul
repnz
jl
neg
ds
pusha
in
nop
jo
or
sbb
adc
add
jns
add
testl
push
ror
mov
test
sti
or
xor
jns
adcl
pop
bound
push
loopne
scas
jb
adcl
mov
push
ffree
dec
add
paddw
outsl
push
mov
or
sub
inc
and
out
inc
add
dec
jno
mov
mov
dec
rol
les
mov
xor
lock
or
cmc
in
sub
push
push
sbbl
pop
iret
push
cmp
enter
cmp
shll
add
mov
push
and
andb
push
sub
sub
lahf
ror
aas
mov
add
or
popa
push
mov
push
inc
add
pusha
add
outsb
lds
lock
push
or
add
jge
mov
test
sti
and
cmp
enter
int
pop
ret
xchg
jbe
add
mov
sbb
fwait
add
lds
dec
sbb
fmull
dec
jne
outsb
dec
sbb
loopne
fldl
inc
movsb
movb
push
or
push
or
xor
push
or
test
mov
xchg
data16
sbb
jne
inc
popa
push
orb
rolb
call
mov
xor
push
lret
mov
loopne
data16
mov
scas
ret
dec
jp
shl
movsb
mov
fwait
cmp
je
sub
add
inc
push
xor
out
push
pop
inc
cmc
not
cs
add
mov
gs
cmp
jmp
lods
pop
adc
push
or
mov
dec
jmp
call
mov
add
ljmp
add
push
stos
inc
sub
iret
push
cmpsl
or
fcomps
mov
roll
ret
jbe
dec
shl
and
nop
addb
jmp
or
ror
dec
lret
mov
mov
aad
pop
push
push
call
push
sub
xor
cs
dec
or
mov
jp
mov
sbb
pmulhw
sbb
pop
fdivrp
or
movsb
dec
push
push
test
jns
data16
pop
pop
sub
push
push
sbb
xchg
pop
lcall
dec
std
and
sub
movsl
sbb
xchg
int
or
mov
lea
push
xchg
jl
xor
cmp
ret
testb
out
push
dec
xchg
push
cmp
int3
or
mov
jb
sbb
fs
pop
adc
fdivrp
mov
add
push
push
sbb
xor
dec
pop
xor
mov
xor
push
sub
sub
push
pop
add
fstl
rcrl
push
or
add
push
mov
dec
adc
cli
mov
sub
cmpsb
enter
sub
bound
pusha
push
or
test
dec
sbb
adc
add
int
outsb
inc
arpl
add
int
pop
enter
xchg
pop
ret
xchg
xchg
mov
push
or
push
and
push
jo
mov
xchg
es
push
push
arpl
pop
sbb
out
mov
or
or
frstor
mov
outsb
ljmp
fld
lea
pop
stos
sbb
push
and
push
adc
jne
xlat
lock
pop
push
and
cwtl
popa
push
add
xchg
mov
or
cmp
push
add
js
xchg
and
pushf
popa
pop
bswap
mov
arpl
arpl
out
mov
dec
sub
mov
jl
pop
enter
dec
ljmp
sbb
push
sub
outsl
push
outsb
aam
aaa
sub
sub
les
cmp
cmp
fisubs
adc
rclb
shll
repz
sub
adc
sub
pop
fwait
mov
clc
mov
fwait
push
dec
mov
leave
pop
xorl
std
add
test
test
insb
and
ds
sub
and
ret
pop
or
push
les
lret
cmp
je
push
movsb
sub
cmp
sub
jae
push
insb
fst
xchg
sub
das
cmp
mov
aad
xchg
dec
imul
adc
push
fmull
and
or
lcall
sbb
xor
clc
mov
and
and
inc
lret
push
stc
inc
mov
popa
pop
cmp
fdivl
add
out
push
pop
lods
dec
popa
sub
push
push
icebp
lods
push
jo
sub
pop
push
sub
je
or
or
icebp
jbe
xchg
push
pusha
out
xchg
xchg
xor
loop,pt
out
adc
aas
shlb
push
addr16
adc
in
mov
imul
and
cmp
jae
aad
imul
insb
jae
xchg
jae
sbbb
xor
mov
inc
push
cwtl
mov
ret
dec
cmp
addr16
sbb
jae
pop
sbb
mov
les
and
mov
cmp
les
aas
push
or
mov
aam
push
push
xor
mov
cmp
inc
ret
or
add
cs
imul
adc
push
int
mov
push
jl
popf
or
out
ss
cs
add
or
and
ss
adc
adc
idivl
inc
add
mov
jbe
or
add
cmp
adc
fistl
scas
mov
push
and
imul
pop
pop
fadds
popa
xchg
adc
sbb
inc
jne
ss
inc
xchg
xchg
cmc
out
rcl
ret
add
dec
push
jp
sbb
aad
push
nop
sub
rclb
lods
sub
imul
loope
fistl
inc
movsb
nop
enter
push
lea
push
xchg
pusha
push
adcb
je
and
jp
insl
mov
or
mov
cwtl
add
clc
push
push
scas
and
xor
loopne
imul
push
das
or
shrb
test
or
leave
cld
inc
je
inc
sub
mov
sahf
and
lret
jne
xchg
push
enter
inc
xchg
push
arpl
test
mov
pop
je
push
xor
jmp
jge
subl
es
sub
cmp
mov
sub
scas
jp
push
sbb
pop
sbb
adc
push
lds
push
add
inc
adc
push
call
popf
add
aaa
xorl
icebp
or
mov
adc
cmc
cli
cmc
add
test
adc
scas
inc
hlt
pop
pop
aad
add
adc
xchg
test
dec
xor
jg
push
cs
lea
mov
and
jle
lea
cld
insb
idivl
sub
cli
adc
sti
mov
push
int
stc
or
lret
sbb
mov
je
and
inc
cmp
jl
adc
pop
mov
push
lret
dec
dec
cld
fidivrl
shll
mov
outsb
cmp
fs
mov
inc
sub
out
out
dec
sbb
dec
sub
inc
push
inc
clc
inc
jne
sub
push
inc
outsb
in
xor
sub
push
sbb
dec
xchg
jge
mov
lcall
jle
jecxz
aaa
xchg
push
or
outsb
sbb
outsb
xor
inc
ds
push
add
xchg
psrlw
nop
orb
xchg
adc
aam
mov
push
hlt
call
or
imul
icebp
and
jg
and
mov
push
mov
pop
sub
inc
or
inc
add
ret
leave
adc
lahf
js
lds
push
shl
push
dec
xchg
push
push
je
and
push
pop
js
add
fistpl
and
mov
sbb
add
aas
ret
pop
adc
xor
push
hlt
ds
sti
mov
mov
lods
inc
xchg
xor
cmp
cld
xor
es
aam
inc
es
xchg
or
push
push
xor
fidivs
push
add
push
sbb
cmp
or
or
or
popa
xchg
push
mov
sbb
dec
leave
pop
adc
daa
cmp
test
or
lea
rorw
add
bound
dec
xor
adc
shrb
add
pop
push
jmp
mov
in
sbb
cmp
push
adc
mov
add
sbb
and
fists
mov
test
push
pushf
and
pop
adc
insb
or
arpl
pop
ret
sbb
inc
mov
or
mov
loopne
add
xchg
adc
je
and
fcoms
inc
lret
pop
jne
xchg
push
frstor
push
mov
cmp
sbb
lods
pop
stos
ret
filds
ret
adc
push
xchg
sarl
push
fiaddl
test
out
xor
dec
adc
add
mov
or
adc
ja
mov
add
jo
in
je
pusha
mov
dec
add
sub
add
stos
jo
inc
nop
ss
add
das
lea
sub
inc
in
ss
push
fwait
jp
jo
cmp
or
pop
inc
and
lds
mov
dec
add
aaa
loop
scas
pop
test
xchg
push
lea
adc
xchg
jp
adc
mov
adc
and
mov
jae
loop
test
push
adcl
mov
cmp
aas
cltd
cld
add
dec
sub
dec
mov
out
jmp
or
test
mov
jnp
push
push
jmp
push
movb
movsb
mov
mov
pop
jbe
pop
shll
pop
mov
rolb
mov
inc
clc
cmpsl
xchg
jne
push
add
push
dec
jne
mov
out
es
fadds
add
addr16
mov
jge
cmp
inc
or
jbe
add
mov
das
test
xchg
xor
jne
sbb
or
inc
jne
xlat
add
add
jne
mov
stc
aaa
push
cmp
pop
jnp
filds
jne
add
out
mov
cmp
sbb
shl
mov
jne
push
or
cmp
in
nop
sbb
test
mov
daa
sub
add
mov
add
cli
pop
ret
pusha
shll
test
dec
push
icebp
jo
push
add
pop
nop
pop
push
rcl
ja
loopne
xor
add
xchg
pop
sub
or
enter
pop
xor
movsb
inc
adc
dec
fdiv
sbb
and
inc
lahf
test
push
sbb
nop
out
adc
out
mov
adc
or
adc
je
les
ficompl
incb
fistl
push
adc
mov
repnz
pop
outsb
mov
xchg
jge
jge
ret
push
adc
andl
les
mov
xor
loop
je
ret
cmpb
jb
mov
sti
lret
rorb
les
jmp
adc
xchg
shlb
xchg
data16
push
dec
or
inc
cmpsb
jge
jge
and
xchg
cli
push
push
stos
sub
outsb
fbld
ret
cmp
je
push
mov
xchg
movsb
mov
pop
add
cwtl
cmpsb
imul
shrl
xchg
push
sbb
mov
sar
cmpsb
mov
push
jbe
mov
nop
pop
xor
sbb
cs
cli
jg
adc
sub
push
sbb
push
jle
pop
jnp
jecxz
dec
shlb
or
jmp
pop
aam
out
add
mov
sbb
add
jno
outsb
fdivrs
lds
shrl
xor
push
aas
xchg
or
sub
and
adc
dec
jae
mul
jne
or
add
mov
push
or
clc
push
pop
dec
jne
ret
incb
aad
xchg
push
mov
push
push
sub
shrb
sbb
or
in
fs
xor
jne
sbb
add
in
repz
mov
jge
out
add
mov
jg
lods
mov
cmp
je
jecxz
je
mov
dec
shll
sub
or
adc
add
add
sub
fadd
subl
dec
mov
stos
dec
mov
sbb
mov
pop
jmp
loopne
mov
movl
ret
call
xchg
js
or
mov
xchg
push
lret
adc
xor
mov
movsb
pop
scas
jne
jge
and
dec
jmp
aam
out
test
add
adc
subl
add
sbb
cmp
inc
jne
mov
cmp
add
jo
mov
xchg
mov
xchg
dec
pop
mov
xchg
mov
into
sub
jge
mov
lods
xor
rolb
inc
add
rcr
sarl
sbb
std
fcomps
dec
mov
lds
sub
pushf
out
test
aas
ja
mov
add
lods
xchg
jnp
xchg
mov
stos
out
jb
inc
xlat
subb
mov
jle
inc
and
movsb
jg
add
push
jle
sub
dec
cmp
lock
fwait
sar
cmp
jg
mov
lret
test
shll
insb
fwait
jnp
cmp
add
jle
icebp
pop
imul
fstl
adc
pusha
xor
sub
in
movsb
enter
clc
outsl
pushf
mov
sar
loopne
ret
scas
jnp
rcr
mov
jmp
test
push
cmp
jmp
pop
sahf
inc
cmp
cwtl
sbb
sbb
push
mov
insb
or
or
mov
test
add
push
pop
pop
mov
sbb
push
jmp
sahf
add
loope
or
lret
lcall
push
insb
add
ja
xor
sbb
push
add
sub
cmp
pop
mov
mov
xlat
pop
jb
cmpb
rcl
pop
dec
push
mov
out
sub
xchg
add
push
sub
push
push
int
inc
add
and
fstps
adc
mov
faddl
or
and
mov
push
in
pop
xchg
pushf
and
adc
test
decl
cmpb
inc
lahf
out
and
dec
add
mov
test
jb
data16
xlat
rcl
sub
adc
inc
pop
enter
adc
pop
loope
jo
dec
push
enter
push
popa
lahf
xchg
lret
adc
jno
pusha
test
rorb
and
stc
cmp
sub
cmpl
push
nop
inc
cmp
sub
leave
popa
addb
testb
or
adc
sbb
jmp
xor
pop
xor
xchg
sub
sbb
push
xor
xor
pusha
and
leave
mov
popa
inc
and
sbb
adc
inc
jmp
push
addl
cmp
xorb
leave
push
adc
push
fdivr
imul
inc
xchg
test
inc
add
xchg
mov
mov
lahf
mov
push
fmuls
push
jmp
push
add
cld
or
call
push
or
adc
inc
push
out
test
jge
push
push
sahf
push
fmuls
in
push
les
cwtl
movl
stc
sbbl
call
xchg
or
mov
dec
out
rep
orb
jne
shl
lcall
jnp
mov
lcall
sub
and
inc
mov
rorb
sti
dec
pop
nop
inc
xchg
int3
inc
inc
cmp
das
loop
fisubs
cmp
jns
sbb
test
out
fadd
lods
lds
aas
ret
cmp
fcmovu
subl
in
jns
andl
andl
aad
jle
mov
lea
fprem
mov
dec
pop
repz
inc
add
lea
push
rol
fs
add
std
pop
lea
push
test
popa
mov
adc
sti
lock
mov
inc
sub
rolb
mov
out
adc
sbb
aad
roll
and
push
adc
mov
mov
jl
call
stos
jnp
inc
mov
xchg
jno
add
inc
ljmp
jbe
mov
sub
add
sahf
xlat
shll
ds
sbb
cmp
bswap
mov
mov
mov
mov
shl
data16
repnz
push
push
test
movsb
popl
dec
mov
mov
ret
cmp
sub
inc
daa
lods
or
mov
and
push
loopne
mov
sub
into
xor
mov
push
add
mov
add
jge
ret
rorb
test
dec
jg
aad
inc
mov
mov
sub
xor
add
mov
or
movb
dec
jne
mov
lods
arpl
hlt
add
mov
jo
aam
xchg
and
sub
push
push
ljmp
inc
mov
adc
cmp
gs
push
test
mov
fwait
clc
adc
incl
and
sub
add
loopne
mov
inc
sub
mov
aad
imul
imul
mov
fwait
or
mov
jne
shll
mov
into
rolb
das
jne
add
jbe
cmc
sub
mov
jle
int
adc
les
std
dec
xor
sbb
mov
out
out
or
cmp
push
jne
add
push
mov
or
and
pop
and
in
xor
repz
push
xchg
dec
and
icebp
push
loopne
sbb
pop
adc
sbb
pop
fadds
je
push
add
push
sub
hlt
test
roll
out
adc
nop
ds
cmpsl
mov
push
lods
push
mov
ljmp
and
or
adc
sbb
adc
lret
xchg
ljmp
lea
add
ss
and
and
push
sub
popa
cld
xlat
shl
inc
dec
or
and
rorl
pop
sbb
sub
sub
add
rol
push
push
cmpsl
or
gs
out
pop
xor
jmp
lock
pop
inc
ficomps
push
rolb
or
add
xor
mov
jle
push
push
or
mov
xorl
add
mov
sbbb
inc
xchg
loopne
pop
pop
cmpl
cmpsl
sub
push
dec
outsl
nop
pop
push
rclb
mov
cmpsl
mov
out
jo
mov
lods
lret
movsl
add
inc
testl
pushf
sbb
and
push
fwait
mov
add
mov
dec
das
inc
outsl
and
inc
into
add
push
ficompl
xchg
adc
sub
or
cmp
cmp
test
imul
cmp
xchg
inc
into
xchg
insl
jne
clc
pop
stos
shll
sbb
xor
shll
and
sub
movl
out
push
cmp
imul
dec
add
push
mov
cmp
pusha
push
cmp
push
inc
mov
aaa
inc
je
mov
push
or
test
inc
and
mov
je
jo
pop
pop
aad
into
push
je
int
cmp
stos
and
add
ds
adc
out
mov
xchg
mov
jb
adc
xchg
lret
out
mov
xchg
cwtl
add
jb
aaa
out
add
lret
mov
clc
pop
adc
in
adc
mov
cmpl
pop
mov
mov
mov
mov
mov
push
push
xor
and
inc
cmp
shlb
mov
or
ljmp
adc
and
and
mov
jmp
push
push
inc
outsl
mov
jae
iret
addr16
addr16
mov
mov
fadds
mov
add
or
loope
popa
imul
popa
sub
sub
push
push
sbb
push
cld
sub
push
push
add
mov
mov
push
adc
mov
sbb
or
push
push
pop
adc
popa
cld
push
bound
insb
sub
mov
imul
push
add
cmp
jae
xor
mov
pop
sub
lods
sub
jg
fsubr
and
cmp
jae
add
pop
shlb
shlb
pop
mov
into
lods
fmuls
test
mov
imul
pop
add
sbb
mov
push
loop
sbb
mov
sbb
cmpsl
dec
dec
lret
cmpsb
sbb
or
add
pusha
sub
sub
pushf
mov
inc
les
or
or
mov
add
and
orl
jmp
movb
sub
lea
scas
repnz
lods
aaa
or
fsubrs
cmpb
inc
pop
lea
sub
adcl
lret
ret
leave
cmp
sbb
or
jns
or
jns
lea
sub
add
sbb
out
data16
or
cmp
push
mov
dec
mov
and
inc
sarl
cmp
lret
test
in
mov
xchg
sbb
pop
or
shll
and
mov
cmpsl
pushf
mov
jle
rorb
or
jmp
ficomps
and
cmp
fcoml
push
and
dec
aaa
and
or
data16
and
loopne
pop
jbe
dec
add
push
push
mov
inc
push
sbb
jne
or
dec
mov
pop
divl
mov
cwtl
cmp
popa
test
sub
adc
pop
add
ret
push
mov
or
sahf
loop
jne
push
fadd
sahf
fadds
sbb
sbb
je
push
into
pop
and
imul
filds
pop
cmpsl
fdivl
addl
cmp
and
or
rol
notl
cmp
movsb
je
mov
scas
fstpt
pop
or
insb
add
ret
lcall
pop
add
inc
pusha
add
add
pop
push
adc
test
lea
or
push
sbb
add
push
int
jae
adc
ja
out
inc
fbstp
inc
mov
call
hlt
mov
pop
sub
jp
add
add
mov
or
dec
inc
push
sub
inc
cmp
dec
out
lods
or
nop
xor
ret
loopne
cmp
xchg
ljmp
test
scas
leave
jp
fmull
jge
imul
inc
sub
mov
push
cmc
mov
movsl
adc
je
sub
sbb
pushf
sub
cwtl
jne
negl
jae
test
ss
je
cmp
lock
add
stos
addr16
sbb
adc
out
and
xchg
fisttps
loopne
mov
fs
cli
jae
or
jmp
hlt
lea
pop
testb
outsb
subb
js
notb
int
ret
mov
adc
bnd
pop
mov
mov
adc
push
data16
pushf
push
shll
mov
xchg
inc
ds
sbb
or
loopne
cmp
lock
bound
sub
add
fwait
add
push
push
inc
sbb
jno
sbb
xor
jnp
jmp
ret
rorb
icebp
cmp
jle
aaa
xchg
mov
jl
pop
or
or
and
shrl
add
dec
or
add
clc
and
cmp
adc
ljmp
lods
pop
mov
mov
and
mov
cmp
sahf
pop
inc
mov
add
add
jbe
push
mov
movsb
add
out
dec
jp
xchg
mov
xor
push
mov
aas
and
lods
decb
cmp
je
scas
or
mov
inc
adc
fcmovnb
xor
mov
xchg
or
inc
add
int
rolb
scas
lods
data16
sbb
in
jle
jne
xor
mov
in
cmp
mov
xchg
sbb
lret
push
xor
jge
lea
push
xlat
andb
in
mov
add
or
pop
fs
jle
mov
cmp
adc
mov
icebp
jbe
mov
pushf
sub
or
sbb
mov
or
cmp
bound
aam
lock
adc
cmpb
jne
cmpl
cwtl
push
jmp
and
adcb
sbb
adc
add
in
sub
aaa
pop
inc
xchg
adc
inc
lcall
jne
jl
push
push
std
lea
inc
dec
lret
and
mov
push
imul
testb
daa
push
sarb
and
adc
cmp
iret
push
jnp
xchg
cli
in
bound
out
mov
add
aam
out
or
push
jo
add
jne
inc
movsb
xchg
xor
mov
mov
jb
mov
mov
add
add
mov
adc
sub
jle
inc
std
inc
mov
jbe
cmp
je
leave
xchg
sbb
cwtl
movl
jnp
pop
aaa
fldt
cmp
cmp
or
inc
sub
jae
mov
mov
je
mov
mov
xor
add
mov
inc
ja
divl
xor
ja
jle
or
dec
addb
inc
sti
ja
jae
test
jne
sub
lods
sahf
sbb
add
cmp
add
pop
cmp
mov
jbe
mov
dec
adc
xor
lcall
loop
out
pop
sub
gs
pop
mov
xlat
std
push
aam
cmp
pop
push
je
cmp
or
or
mov
dec
sbb
xchg
in
cmp
push
jns
inc
or
jnp
shlb
mov
mov
pusha
add
ret
or
sbb
inc
sub
fwait
mov
or
fsubl
inc
add
pop
mov
add
inc
mov
dec
mov
rclb
ja
or
push
mov
mov
out
in
iret
pusha
ret
mov
fidivrl
jl
push
push
xchg
adc
orl
sbb
inc
in
cmp
outsl
cld
pusha
ror
push
inc
outsl
aaa
shl
enter
xor
or
xor
adc
sub
jae
cmp
cmp
and
mov
push
push
pop
pop
xor
mov
cld
jbe
lcall
outsb
push
mov
loope
push
out
cmp
xchg
nop
andb
adc
add
mov
test
push
je
add
lds
fldl
mov
xor
aad
lret
iret
int3
jp
mov
jb
cs
xchg
inc
in
mov
lret
ljmp
rorl
mov
inc
insl
sarb
dec
cmpsl
xor
push
xchg
inc
mov
sbbl
test
fimull
and
iret
add
in
sub
iret
sahf
adc
outsb
sub
or
mov
cmp
lods
sbb
push
mov
andb
lcall
scas
push
or
das
loope
fimuls
push
lods
jno
rorb
sub
push
cmp
das
sub
mov
push
jb
insl
mov
movsb
mov
fmul
stc
or
add
mov
cmp
dec
loop
xor
push
jnp
fadd
outsb
sti
arpl
cmc
push
add
push
push
inc
inc
dec
dec
push
mov
outsl
rcrb
mov
xchg
push
and
dec
inc
sbb
jne
into
sbb
sbb
inc
dec
cmp
adc
sbb
mov
push
seto
jbe
jle
jnp
mov
int3
testb
add
inc
sbb
sub
add
xlat
push
pop
xchg
mov
inc
icebp
mov
sti
xor
inc
and
ljmp
imul
aaa
inc
cmp
movl
sbb
orl
dec
sub
insl
mov
lds
inc
and
add
hlt
mov
cld
push
cmp
ss
mov
and
movsl
sahf
and
dec
jmp
mov
repz
jecxz
pop
movb
outsl
lcall
or
sub
rolb
loope
loope
shr
add
jo
pop
rorb
push
mov
fs
cwtl
pop
roll
rclb
fsts
mov
ss
pop
jle
mov
clc
and
dec
pop
push
push
test
mov
jbe
in
sub
mov
mov
incl
fcomps
add
repnz
push
sub
and
or
adc
lods
or
dec
or
andl
mov
mov
mov
sub
idivl
mov
sub
xchg
nop
ret
xor
cmp
ss
test
mov
mov
xchg
and
adc
aam
dec
xchg
or
lock
xchg
push
xor
ss
cmp
dec
or
lret
jae
xchg
sti
or
out
sbb
inc
sbb
sbb
pop
jb
int
popf
adc
fimuls
sub
sub
test
jae
jbe
mov
adc
xorl
mov
add
pop
lock
dec
xor
add
add
outsl
aaa
adc
test
movsb
jbe
mov
push
ds
add
clc
dec
dec
jne
cmc
pop
add
push
mov
xor
sbb
je
test
pop
es
add
pop
fs
pop
cmp
leave
sti
popf
rorl
jmp
fistpll
leave
and
cmpsl
rcll
nop
adc
out
inc
adcl
pop
or
add
jnp
ljmp
adc
or
pop
push
lret
mov
or
add
out
mov
fwait
repz
jp
je
movhps
push
rcll
xchg
repnz
cmpsl
sub
jo
pop
ret
roll
or
adc
movsl
mov
sub
xor
outsb
lds
cmp
sbb
test
mov
loopne
cmp
repz
add
mov
les
jne
add
shlb
roll
add
mov
mov
and
aad
dec
vpandn
ret
mov
cs
pop
sub
ljmp
xchg
jne
out
icebp
adc
xor
daa
jmp
and
or
outsl
daa
pop
inc
pop
mov
enter
cmp
and
je
sbb
pop
aaa
push
xchg
aad
jmp
dec
push
sbb
jp
jnp
jno
mov
inc
enter
push
mov
add
or
inc
hlt
cwtl
ss
add
add
push
and
xor
dec
xchg
daa
push
xor
daa
adc
and
in
adc
adc
jbe
imul
mov
add
clc
jg
lea
push
insl
or
inc
cmpsb
mov
add
nop
movsb
sti
add
push
add
fldcw
and
fsts
lahf
or
add
add
pop
repnz
in
sub
insl
push
cs
cmpsl
popa
adc
mov
cmp
sub
or
and
ror
push
add
stos
je
cmpsb
loopne
cmp
enter
lock
lahf
mov
sub
je
testb
shlb
dec
xchg
xchg
dec
cmp
mov
sbb
movsb
shl
or
jbe
hlt
cmp
xchg
shl
int
mov
clc
call
push
shr
xchg
rcr
sub
cld
scas
in
pop
add
sub
xor
or
ljmp
xor
sbb
lcall
inc
mov
incl
adc
push
dec
hlt
or
pop
pop
push
outsl
push
mov
stos
decl
mov
iret
dec
jmp
mov
add
loop
lret
leave
xchg
inc
jp
push
adc
sub
add
sqrtps
pop
pusha
insb
clc
dec
push
jle
in
sub
fisubrs
jb
add
out
pop
adc
cmc
loope
push
in
mov
and
aad
mov
push
xchg
repnz
xor
sbbl
xor
outsl
pop
imul
mov
iret
jae
mov
loopne
xor
xchg
sti
and
sub
shll
mov
fdivl
sahf
mov
add
mov
insb
das
jo
cmp
and
pusha
add
cmpsl
js
or
mov
sarl
inc
adc
add
xor
into
or
clc
xchg
ljmp
stc
adc
inc
addl
xor
add
inc
pop
jae
push
xor
push
sub
push
ljmp
fwait
clc
push
dec
xchg
jmp
insb
jg
jle
adc
fildl
push
das
sbb
push
dec
push
push
inc
adc
les
xor
and
in
or
or
or
cmpsb
movsl
cmp
lahf
nop
adc
xchg
cmp
in
arpl
adc
or
jb
lret
outsl
dec
test
fs
pop
add
cmpsl
inc
push
mov
enter
and
dec
add
adc
push
mov
aas
lods
aaa
mov
xor
jge
loope
push
push
push
or
push
movsl
sbb
insl
bound
pop
enter
or
rolb
out
mov
into
ja
sarb
pop
js
xchg
pop
cld
jnp
mov
inc
call
sbb
and
add
pusha
and
mov
add
enter
rorl
adc
jge
insl
pop
and
scas
lods
andb
adc
and
rcl
aam
sar
les
ret
adc
push
loopne
and
jge
mov
or
push
shll
jl
mov
test
sub
out
cs
sbb
push
sub
and
subl
xor
push
add
mov
or
jmp
xor
fs
xchg
rolb
outsb
stos
mov
mov
xchg
mov
push
push
js
mov
outsl
dec
shlb
adc
aas
inc
add
or
daa
jo
test
pop
or
pop
fildll
pop
pcmpgtb
mov
xchg
rep
sahf
adcb
jno
push
in
test
or
mov
clc
and
cmpsb
push
mov
dec
sbb
pop
jge
imul
sub
xchg
jecxz
aaa
outsl
repnz
and
sub
stos
adc
push
mov
cwtl
xor
pop
dec
pop
cmp
and
jno
shll
mov
movsb
inc
cmp
sarb
lcall
add
popa
push
inc
movsb
jo
test
cmp
pop
inc
jne
faddp
shlb
push
push
mov
push
mov
movsb
inc
sub
je
cmp
xchg
loopne
pop
ret
hlt
xchg
adc
add
loopne
sbb
out
lea
clc
or
add
ret
mov
mov
xor
and
adc
jns
ss
dec
daa
add
pop
outsb
inc
cmp
sbb
adc
dec
inc
mov
sbb
leave
mov
je
and
dec
dec
inc
outsl
adc
inc
lds
sbb
jb
inc
movsb
int3
ret
mov
sbb
xchg
jae
iret
xor
leave
inc
sbb
int
inc
daa
mov
je
inc
jb
or
push
pusha
or
imul
dec
inc
fs
or
cmp
adc
adc
mov
cmpl
pop
add
bound
adc
scas
mov
aas
cmp
les
add
es
mov
cmpsb
pop
push
jmp
inc
stos
filds
outsl
adc
sbbb
cwtl
xor
and
pop
clc
inc
roll
mov
shlb
mov
mov
mov
sbb
lock
cmp
lea
jo
sti
pop
or
lods
push
dec
repz
push
jns
loopne
dec
and
imul
movsl
adcb
rcl
sub
dec
fsubr
or
add
cmp
jge
jnp
dec
les
stc
mov
mov
xor
popl
mov
and
mov
loop
mov
stos
fadds
imul
bound
test
pusha
jg
mov
add
or
or
pop
xor
pusha
push
test
dec
push
cmp
or
push
add
mov
sbb
mov
push
xor
and
dec
mov
insb
xor
dec
daa
repnz
pop
sbb
insb
mov
push
std
mov
out
cmp
xchg
push
enter
jnp
jns
adc
mov
fldl
and
fmul
add
or
imul
fxtract
inc
arpl
js
jge
sbb
pop
movb
xor
ret
inc
mov
add
sub
jnp
dec
dec
fwait
xor
add
adc
xchg
push
jecxz
mov
add
sub
mov
add
push
xchg
and
insl
stos
mov
imul
inc
test
sbb
pop
mov
cmp
mov
ljmp
xlat
pop
out
or
addr16
jne
sarl
mov
enter
pop
mov
xchg
xor
jno
pusha
aam
rorl
adc
sub
test
xlat
cmc
cmp
pop
insl
cmp
inc
sub
sub
dec
add
fildll
std
bound
mov
dec
adc
enter
ljmp
cmpb
mov
insb
jle
ds
mov
dec
jmp
push
inc
sbb
mov
dec
or
add
stos
aam
enter
test
push
rcll
lods
scas
push
lods
and
push
adc
push
lcall
stos
sbb
sbb
popa
fs
push
lods
sbb
sub
mov
mov
push
cmp
test
ret
xor
pop
cld
outsl
mov
mov
roll
aaa
adc
mov
inc
addl
push
lret
dec
jae
inc
or
mov
outsl
sub
adc
test
and
lods
pop
jmp
lret
pop
pop
push
mov
push
sub
add
or
lods
mov
ret
stos
inc
jbe
sbb
dec
cmp
fldt
mov
add
add
xchg
push
gs
pop
cmp
inc
xor
cmp
cld
mov
xor
adc
lahf
movsl
mov
fs
pop
add
imul
mov
jae
sbb
dec
mov
cmpsl
cmpsl
ret
repz
sbb
sub
roll
scas
add
push
and
ret
repnz
sub
dec
dec
adc
fcomps
lock
cmpl
sbb
cmpsl
mov
push
imul
pop
out
pop
inc
and
les
fimull
pop
cwtl
addl
enter
dec
mov
inc
mov
aas
js
rorb
call
pop
jmp
and
or
jb
sub
inc
push
andb
sbb
fmul
and
outsb
pop
loop
mov
idiv
dec
inc
inc
push
ja
faddl
mov
jmp
mov
adc
push
and
or
lcall
in
lahf
lods
sub
dec
test
dec
sub
mov
xchg
push
and
and
inc
in
fldcw
mov
cs
decl
adc
jbe
push
cltd
lret
sbb
dec
inc
push
push
push
inc
imul
movsb
push
or
mov
lahf
in
sub
xchg
arpl
xchg
pop
adc
movsb
imul
add
add
or
xor
in
and
lock
cwtl
pop
jmp
mov
add
jne
mov
cltd
push
mov
dec
sbb
mov
pop
or
leave
nop
ljmp
add
jns
xacquire
pop
ret
adc
mov
inc
and
cmp
shlb
xor
sti
lahf
and
inc
pop
inc
add
dec
add
xor
dec
jns
dec
xchg
inc
sarl
decl
mov
xor
jg
jl
test
sbb
xchg
sub
jb
les
jmp
cmp
fmuls
call
mov
push
xchg
sbb
jge
sub
cmp
dec
rorb
push
push
push
inc
call
je
jnp
adc
and
cld
cmp
push
push
xor
clc
inc
insb
mov
xchg
in
enter
push
lea
iret
or
outsb
push
mov
je
fmuls
imul
cld
cmp
or
mov
or
sbb
ret
push
and
adc
push
adc
push
push
adc
popa
gs
in
mov
popa
sbb
pop
repnz
test
sahf
data16
in
cwtl
and
mov
xor
add
adc
add
call
aaa
notl
and
loop
adc
push
add
push
dec
aas
xchg
push
in
push
dec
adc
push
inc
push
int
and
movsb
sub
shlb
stos
or
mov
or
jno
jg
push
dec
enter
adc
jl
mov
pop
pushf
inc
push
add
icebp
cld
cltd
aam
or
loope
push
jl
adc
mov
mov
shlb
push
mov
cltd
xor
jns
and
cmp
or
call
add
sbb
addps
in
pop
inc
pop
jle
decl
clc
pop
dec
mov
inc
or
jle
jle
fsubs
or
mov
out
jbe
add
and
adc
push
mov
jmp
decl
mov
rolb
push
dec
repnz
scas
adc
add
test
or
mov
dec
movsl
scas
and
lock
adc
int3
adc
popa
push
rorb
mov
int3
add
pop
jmp
jge
fstpt
pop
data16
daa
lods
sub
sbb
enter
sub
mov
outsb
or
ds
or
push
adc
xchg
adc
jl
sbb
adc
adc
repnz
in
out
push
cltd
ss
cltd
fs
dec
push
xor
hlt
add
shll
or
xchg
inc
cmpsb
or
add
or
pop
ss
xchg
or
add
daa
roll
fists
add
or
daa
add
mov
push
pushf
add
lds
aaa
and
add
shrb
add
loop
ret
mov
pop
pusha
shlb
or
loop
push
das
xor
mov
xchg
sub
mov
sub
sub
xchg
sub
push
mov
mov
mov
sbb
leave
aad
fistl
and
pop
leave
xchg
pop
push
sbb
xchg
sbb
shlb
push
sub
ret
pop
mov
fcoml
mov
mov
pop
push
lahf
lds
xchg
or
sbb
repz
rorl
lret
pop
add
test
push
dec
jb
dec
dec
adc
sbb
push
rolb
xchg
adc
cmp
pop
adc
ds
push
in
adc
add
push
movsb
daa
daa
daa
daa
push
push
daa
daa
or
add
mov
xchg
xchg
mov
js
cmp
lods
pop
outsb
aas
or
pop
sub
aas
dec
lret
adc
push
mov
leave
leave
add
pop
out
insl
push
mov
xchg
add
and
sbb
mov
in
shlb
lds
sahf
mov
xchg
push
leave
int
mov
pop
adc
js
jl
dec
test
nop
xor
mov
hlt
or
js
jl
mov
call
mov
shrb
push
and
pop
lods
dec
lods
loopne
lcall
fcompl
cmp
mov
push
popa
push
add
data16
push
xchg
push
fimull
and
adcl
imul
or
cmp
sbb
rcrb
mov
sbb
flds
push
and
jge
or
inc
xor
pusha
imul
sbb
fldenv
call
mov
int3
mov
lahf
push
jne
add
rorb
jmp
jmp
pop
sbb
cmp
inc
add
jle
xor
adc
mov
sbb
dec
stos
sbb
inc
mov
je
pop
lea
mov
sti
ljmp
inc
xor
bound
ret
shl
cmp
jle
push
inc
xchg
inc
test
adc
js
frstor
add
pop
sub
or
lcall
mov
lret
imul
ficoms
inc
xor
mov
bound
inc
or
dec
inc
or
shl
pop
push
nop
xchg
loope
call
pop
rclb
jnp
ljmp
jmp
int
test
dec
inc
push
mov
sub
cmp
cwtl
int3
or
cs
push
lret
aam
sub
pop
pop
cmpb
inc
inc
sbb
push
jo
imul
push
dec
push
and
inc
flds
aam
bound
rorl
popf
sbb
adc
leave
imul
add
cmp
mov
frstpm(287
sub
fildl
mov
xchg
and
notb
stos
ss
out
xor
sbb
clc
cmpb
shr
mov
mov
jno
cwtl
push
jne
mov
adc
fs
enter
sbb
pop
adc
movsb
ror
leave
push
cmpb
addr16
sub
idivl
flds
inc
xor
jo
cmp
push
ret
or
notl
mulb
or
addb
push
lods
pop
int3
sbb
and
div
repz
fbld
cli
xor
pop
sbb
xor
adc
mov
push
dec
sbb
ret
scas
dec
and
sub
dec
or
sbb
inc
ja
pop
jae,pt
xor
inc
loopne
pop
or
in
jbe
cmp
or
lea
pop
lea
cmp
jle
aaa
dec
js
mov
loop
push
das
cmp
jl
mov
inc
scas
pop
fucomp
add
cmp
or
aas
shrb
and
data16
lods
cs
push
test
daa
into
jb
jl
push
inc
nop
add
jg
or
inc
xchg
push
and
pop
dec
lock
js
lock
jne
xor
leave
dec
ja
xor
pop
mov
jle
cmp
jl
sbb
sub
jmp
dec
call
mov
pop
jnp
lret
pop
xcrypt-ecb
cmpsl
mov
pusha
mov
add
sub
cli
cmp
adc
hlt
mov
dec
xchg
addb
push
loop
ja
and
lea
test
push
ret
mov
test
loope
push
or
sti
pop
add
push
add
loop
or
push
and
sbb
rolb
inc
clc
push
in
shlb
push
push
jno
shlb
inc
pop
jne
ficoml
outsb
cmp
jg
pop
loopne
dec
add
push
push
or
fmuls
into
push
xacquire
or
push
push
add
sub
lea
faddp
ffree
mov
movsl
sbb
pop
push
pop
sarb
pushf
nop
rolb
mov
cmpl
push
clc
inc
movsb
sbb
mov
mov
or
sbbb
or
nop
sub
sub
inc
and
dec
add
push
stos
push
into
popa
adc
sti
adc
call
cmp
iret
lock
cmp
jbe
clc
lahf
mov
jg
push
jae
outsl
jmp
inc
sbb
add
xlat
das
dec
mov
push
mov
hlt
mov
xchg
dec
pop
xlat
push
push
jno
jmp
je
or
and
lds
scas
and
rorb
jo
daa
push
frstor
jmp
outsb
dec
mov
js
inc
pop
ret
jmp
movb
jne
inc
or
jnp
add
pop
mov
sbb
mov
inc
jae
ret
or
icebp
jg
and
adc
data16
add
popa
cld
jo
push
mov
out
shll
jno
push
dec
adc
insl
in
cmp
shlb
roll
inc
and
sbb
or
pop
pop
pop
dec
sbb
and
mov
mov
jecxz
cmp
xor
ret
mov
ret
filds
inc
jecxz
out
adc
inc
inc
es
ret
mov
mov
sbb
cs
and
mov
xor
lock
xchg
into
cmp
cmp
or
fists
or
add
inc
cmp
or
jno
xor
mov
push
pop
push
mov
xchg
mov
adc
jnp
in
mov
aam
sti
mov
jnp
xor
push
pushf
xor
inc
adc
push
add
add
mov
or
push
jb
enter
adc
adc
cmpsb
adc
mov
ret
and
idiv
mov
jnp
xor
jae
jle
sub
jge
adc
inc
push
sub
test
and
lock
add
or
inc
shrb
je
addb
push
inc
push
push
rcll
xchg
and
sbb
add
ljmp
mov
sbb
push
and
sub
xor
shrl
xor
xor
lock
cmp
cmp
inc
push
inc
dec
movsb
pop
cmp
dec
sbb
or
dec
stos
subb
push
dec
inc
data16
data16
xor
xor
jbe
pushfw
push
pop
int
sub
pop
lahf
and
and
dec
adc
jle
add
test
sub
sub
aaa
ret
scas
aaa
decl
sub
or
or
ss
xor
add
cmp
pop
pop
add
leave
ljmp
scas
xor
add
ljmp
pop
dec
adc
add
dec
test
add
adc
shr
xchg
bound
add
pop
adc
add
test
inc
add
jne
xor
mov
leave
pop
movswl
ret
pop
clc
adc
cmp
rcl
gs
pop
xor
inc
ja
add
push
push
pop
testl
adcb
insl
jmp
cmpsl
lods
ja
or
dec
xor
pop
cmp
mov
adc
cmp
cmp
jne
leave
xlat
ret
push
xchg
push
mov
js
add
jns
push
jae
cmpsl
ret
popf
pop
add
dec
popa
push
mov
pop
int
nop
mov
nop
roll
dec
sbb
add
rcll
add
add
sti
call
testl
cmp
mov
xlat
xchg
push
stos
lea
pop
shrl
push
je
and
push
test
mov
fsubl
xor
and
mov
add
aam
adc
or
dec
in
addb
cmp
dec
ret
xor
sub
jge
push
es
dec
lea
cmp
dec
dec
dec
or
add
mov
dec
cs
in
mov
or
push
dec
ret
or
jb
jle
fimull
std
jle
sub
push
mov
ret
addr16
mov
mov
dec
or
add
push
add
xchg
ret
cmp
fadds
insl
mov
rorl
data16
sub
cs
cmp
cmp
add
and
out
mov
push
clc
mov
imul
push
nop
sbb
push
or
ret
cmp
or
push
inc
es
fcomps
inc
xchg
jno
and
sahf
fadds
test
push
sbb
mov
lahf
inc
xchg
jg
cmp
inc
dec
pusha
xchg
lea
aam
and
sub
daa
pop
xor
inc
and
cmp
addb
inc
stos
adc
js
adc
pop
es
test
push
push
xor
sub
or
lods
mov
mov
cmp
shll
or
add
fidivrs
cmc
jg
fdivrs
outsl
fwait
or
sbb
push
push
mov
push
int3
jne
push
cmp
push
push
int
inc
sub
enter
repnz
std
inc
sarl
je
cmpsb
dec
push
iret
and
jle
mov
push
mov
sbb
aad
xchg
ret
ret
ljmp
dec
lret
cmp
or
das
mov
test
mov
rorb
pop
push
scas
icebp
je,pt
jle
inc
push
and
push
adc
jl
sub
pop
inc
inc
mov
or
es
or
rcll
push
inc
inc
es
rcr
rol
testl
sbb
pop
mov
lods
insb
xor
sub
dec
mov
scas
and
push
push
mov
mov
rcll
or
push
sarb
push
lret
and
push
adc
orb
adc
sub
pop
leave
adc
pop
mov
pop
jl
test
push
cmp
fsts
addb
inc
dec
or
push
movsb
mov
idivb
out
movb
mov
mov
push
dec
inc
inc
cltd
inc
pop
pop
imul
sub
arpl
inc
push
add
xor
pop
adc
iret
dec
cmp
popf
sbb
pop
or
cwtl
sub
mov
mov
std
add
pop
hlt
cmp
hlt
xchg
adc
insl
sub
call
cmp
mov
adc
add
xor
lock
lcall
pop
dec
xor
jl
pop
add
out
aad
movsl
or
adc
mov
insl
fildll
aas
std
pop
mov
xor
sbb
inc
jno
stos
push
pop
push
mov
leave
vpermilpd
add
push
mov
sahf
mov
sbb
sbb
push
xchg
xchg
sub
sbb
test
mov
xor
inc
inc
add
dec
cmp
adcb
cli
fs
pop
push
xchg
cltd
scas
pop
flds
xchg
add
les
jmp
cs
jnp
test
test
into
inc
adc
pushf
movsl
push
enter
or
adc
sbb
sbb
daa
bound
mov
and
pop
rorl
aas
or
repnz
and
push
lods
mov
mov
sub
pushf
or
sub
imul
add
loopne
adc
sbb
repnz
sbb
push
and
cmp
addr16
dec
or
aas
and
rcll
mov
fiaddl
sbb
dec
cmp
or
sbb
jl
dec
sahf
dec
sahf
jl
sbb
cmp
sbb
adc
out
push
adc
inc
push
cltd
nop
addr16
sbb
sub
or
mov
sti
xchg
dec
mov
cmp
jo
push
cmp
fists
pop
pop
xchg
in
cmp
cmpb
xchg
xchg
push
cld
incb
push
daa
cmpsl
add
add
mov
mov
jbe
ljmp
rcr
jno
add
sub
sarb
mov
inc
sub
rep
jge
add
imul
loope
add
add
sbb
ja
or
lods
mov
add
leave
inc
push
add
or
or
adc
dec
lods
add
or
add
push
push
inc
add
inc
shlb
cli
data16
movb
in
mov
loopne
lods
xor
pop
stos
xchg
cmp
mov
in
shlb
jl
arpl
mov
movl
jns
jmp
sub
ret
mov
dec
inc
fldt
or
and
jecxz
xor
pop
popa
lds
mov
int
pushf
or
imul
and
cmp
aas
insb
dec
dec
mov
sbb
jns
jg
enter
lods
lea
adc
aas
dec
and
arpl
adc
cltd
js
dec
mov
fldl
fcoml
pop
push
lods
adc
outsl
pop
add
xor
in
loopne
stc
lods
xor
out
test
add
push
int
mov
push
push
push
sbb
lods
insb
insb
mov
rcrl
loope
sbb
testb
xor
mov
sbb
sub
cmp
imul
lods
icebp
outsl
hlt
addb
std
mov
jl
mov
jnp
dec
jge
add
jge
push
je
mov
in
sar
sub
xchg
inc
push
insb
pop
xor
rcll
add
jb
adc
adc
leave
adc
xchg
lret
xor
test
ljmp
or
loopne
add
add
dec
popf
jg
mov
mov
daa
sub
call
ret
lar
add
test
add
cmp
jmp
jge
scas
das
je
dec
push
test
rclb
rcll
and
fnstcw
push
push
lods
push
rcrb
hlt
push
dec
leave
mov
ss
push
inc
or
test
les
cmovge
je
sbb
rorb
ljmp
adc
cld
mov
xlat
mov
mov
push
and
pop
inc
add
mov
cmpsl
fmull
adc
fisttps
mov
loopne
dec
mov
pop
mov
lods
add
lods
aam
add
pushf
jecxz
iret
and
pop
pop
xor
sbb
daa
pop
pinsrw
jnp
ss
mov
jne
push
mov
sub
iret
js
sub
js
mov
mov
mov
adc
push
test
dec
loop
cmp
ja
xchg
je
xchg
push
add
pop
cwtl
imul
pop
push
test
adc
xor
add
push
add
inc
or
mov
aas
push
mov
ret
and
push
fdivrl
jnp
bound
or
mov
inc
and
lock
scas
addr16
arpl
sbb
pusha
mov
xor
pop
out
add
add
sbb
rorb
dec
pop
js
mov
pop
push
adc
lret
insb
std
fidivs
xor
fwait
xor
push
insb
andl
inc
pushf
xor
into
shlb
push
lods
mov
xchg
push
dec
cmpsl
xor
js
xchg
test
adc
dec
and
sbb
or
lods
inc
adc
inc
push
clc
xor
imul
sbb
ss
testb
sbb
xchg
cmp
lods
mov
inc
lods
mov
pop
loope
mul
adc
insb
adc
push
dec
ret
sub
pop
inc
push
and
mov
xor
sbb
addb
sbb
adcb
or
dec
fldenv
insb
push
cltd
int
jl
test
cwtl
jl
push
enter
stc
lahf
xor
push
xlat
xor
mov
adcl
adc
dec
hlt
sbb
icebp
insb
lcall
push
or
mov
sub
mov
adc
lret
loope
mov
xchg
lea
mov
out
or
pop
xor
add
add
pop
outsb
lds
mov
inc
cld
fwait
cmc
insb
push
and
fsubl
cmp
in
push
push
mov
dec
mov
xchg
inc
pushf
ror
mov
loop
mov
xor
or
fldcw
push
xchg
or
test
adc
test
mov
outsb
dec
pushf
out
add
xor
dec
dec
insb
push
mov
mov
xlat
ret
add
mov
jae
dec
pop
pop
dec
hlt
imul
adc
or
iret
jns
or
sub
add
or
mov
rorb
sbb
mov
stc
add
aas
and
lea
push
sub
jl
inc
push
sub
fxch
mov
jne
push
fistps
mov
cmp
stc
add
mov
int3
jo
dec
push
lcall
test
insb
js
divl
xlat
or
int3
lahf
aam
loopne
push
aaa
fmul
xchg
sbb
xchg
mov
test
xor
pop
imul
push
inc
push
lods
mov
test
inc
mov
push
outsb
and
push
jl
jo
call
or
bound
add
pop
push
or
ret
adc
mov
js
inc
lcall
mov
push
jmp
pusha
popa
loopne
mov
inc
int
sub
daa
repz
xor
pop
push
in
pusha
fsubr
push
data16
inc
and
imul
add
and
int3
xor
sub
and
stos
cmp
or
fwait
xchg
push
push
bound
repnz
push
push
arpl
xchg
cmp
mov
push
push
mov
sbb
xor
xor
je
lds
lahf
loope
movsb
xor
and
aad
shl
and
outsb
xchg
movsb
sbb
cwtl
jb
lret
and
add
rcrl
jns
push
lea
rcrl
sbb
xchg
push
sbb
lret
xchg
lds
push
push
inc
shrb
repnz
mov
mov
push
and
andb
sbb
fstps
rcrb
pop
push
mov
pop
and
add
shrb
jae
imul
mov
fdivrs
and
cmp
loop
pop
mov
daa
and
movsl
or
cmpb
je
xchg
and
aad
cwtl
ss
adc
sbb
jb
ja
pusha
mov
scas
push
mov
lock
push
gs
mov
rorb
out
mov
pusha
pop
lahf
aam
xor
stc
icebp
push
mov
jbe
in
mov
cmp
xchg
xor
not
cmp
or
inc
lcall
xlat
push
inc
pop
sbb
xor
push
dec
fstpl
xor
notl
add
push
xchg
cs
sbbb
xchg
xchg
cltd
mov
and
and
fldl
das
jbe
rcll
adc
cltd
fadds
cmpsb
adc
adc
loopne
daa
push
int3
std
movsl
mov
pusha
sub
push
push
or
pop
mov
add
jecxz
sub
adc
xchg
cmp
pop
dec
sub
sub
lods
fwait
jge
add
jns
sti
sub
andb
scas
jns
fwait
xchg
jb
pop
dec
sbb
push
jecxz
jge
in
repz
test
int
add
pop
add
aam
add
cli
sbb
dec
idivl
pop
sub
cmp
xchg
cmp
in
push
xor
dec
sbb
pop
inc
fsubrs
notrack
lcall
mov
jp
pop
mov
test
push
or
sub
imul
imul
int3
jne
push
ss
jnp
push
cmc
xchg
icebp
add
insb
mov
ja
aam
and
jno
fsubr
call
cmp
enter
ror
mov
mov
mov
cmp
sbb
stos
ret
fildll
sbbl
jmp
cmpb
popa
mov
cmp
xor
call
push
pusha
cmp
jge
cs
pop
push
lcall
sbb
adc
aas
xchg
jo
add
pop
lcall
adc
popa
mov
adc
lea
ficoms
xchg
and
fnstsw
adc
jae
push
sub
rorb
lret
stos
test
das
sub
lods
dec
sub
xchg
xlat
out
mov
hlt
loopne
fwait
jne
pop
jae
mov
or
mov
mov
push
shrl
ja
fdivrs
pushf
jns
or
lea
js
mov
leave
mov
sbb
pop
jo
mov
cmp
cmp
fcompl
pop
imul
mov
jl,pt
sbb
mov
mov
fdivrl
in
rclb
test
fnsave
mov
push
jae
inc
push
or
adc
xchg
std
mov
lahf
ds
cmp
notb
push
mov
mov
and
xor
lret
dec
shl
lahf
and
jmp
repnz
pop
mov
aas
push
ret
push
add
lea
imul
push
nop
loope
sub
pop
test
mov
cwtl
push
jl
sbb
daa
or
das
lcall
add
mov
insb
lds
add
xor
xchg
push
enter
xlat
mov
xor
inc
mov
lods
dec
arpl
add
push
orl
fsubl
mov
xchg
clc
cltd
mov
aaa
inc
je
jns
jne
shrl
and
and
mov
add
les
cmp
jo
adc
push
or
and
cmp
loopne
pop
insb
mov
push
icebp
mov
stos
movsl
inc
pop
push
popa
mov
mov
mov
stos
daa
or
ja
xchg
js
leave
pop
or
inc
cmp
andb
call
adc
das
add
fldenv
and
es
es
jp
mov
mov
adc
cs
xor
or
enter
xor
adc
jo
push
sbb
or
fisttps
subb
sbb
pop
mov
in
sub
and
inc
inc
xor
lret
and
jbe
xor
dec
mov
je
mov
faddl
and
xchg
xor
scas
or
push
pop
pop
cltd
jae
add
and
push
mov
sbb
add
xchg
je
lret
pop
ffreep
daa
mov
icebp
xchg
xor
or
test
daa
pop
daa
lods
add
imul
test
and
mov
sub
xor
push
mov
rcrb
inc
mov
push
loop
pop
cmp
push
scas
sub
std
push
xor
push
call
shll
add
pop
or
movl
or
and
sub
or
mov
ror
sbb
sub
jo
mov
ret
popa
adc
inc
in
mov
sub
push
cmp
push
frstor
push
aad
pushf
jno
in
fsubrs
lods
sub
fistl
push
rclb
movsb
ficompl
dec
arpl
pop
or
mov
sbb
jl
mov
int
xchg
js
and
adc
sbb
stos
add
xor
dec
sbb
push
js
popa
add
pop
push
out
add
iret
dec
call
sbb
sub
inc
dec
cmp
add
cmp
push
les
sub
jbe
clc
xchg
adc
dec
or
xchg
dec
dec
jecxz
add
outsl
sbbl
sbb
repnz
leave
dec
push
xchg
mov
push
ljmp
add
out
fwait
fs
push
aas
cmp
xor
out
loope
ret
fidivl
js
jmp
sbb
sahf
mov
sub
rcrb
add
rorb
pop
jno
int3
gs
rorb
mov
mov
lret
outsl
call
push
or
lods
mov
inc
and
push
pop
sub
inc
xor
xor
sbb
sbb
out
test
adc
dec
push
mov
mov
push
adc
mov
int3
hlt
xchg
push
aam
mov
sahf
mov
push
and
pusha
pop
cltd
sbb
or
xor
inc
inc
imull
mov
adc
movsb
jnp
insb
mov
punpckhwd
mov
or
mov
ds
jmp
push
test
dec
and
call
nop
sbb
or
and
add
push
inc
add
dec
jecxz
pop
mov
or
add
xchg
xor
dec
outsb
adc
dec
mov
pop
pop
push
mov
xchg
mov
cmp
xchg
or
imul
sbb
int3
addb
push
out
mov
dec
jmp
inc
pop
or
cwtl
lea
in
cmp
sbb
sbb
subl
jg
cmp
rcrb
cmpsb
jmp
pop
cmp
xchg
dec
push
inc
xchg
dec
dec
cmp
pop
aad
and
mov
pop
sub
adc
cmp
adc
xchg
or
es
jg
movsb
and
jmp
cmp
or
sarb
xchg
test
andb
sti
or
pop
rcrl
mov
push
jle
cmp
fmuls
sbb
ss
subb
mov
in
push
push
dec
adc
rorl
mov
sbb
dec
pop
sbb
and
clc
andl
adc
mov
dec
insb
jb
push
mov
push
fs
sub
jl
pop
xchg
rcr
adc
inc
aas
jecxz
out
inc
dec
pop
sbb
lea
push
adc
jne
jno
adc
repnz
shrb
or
mov
add
adc
clc
mov
je
cli
xchg
mov
mov
cltd
lahf
pop
adc
pusha
sub
sub
sub
cwtl
jecxz
or
sbb
and
add
mov
push
or
add
push
imul
insl
mov
je
sbb
push
mov
mov
and
es
test
lea
or
sarl
cmp
lods
sbb
push
call
xor
xor
lret
add
push
push
arpl
mov
xchg
fwait
and
loope
or
pop
add
in
cmp
sub
lods
adc
pop
mov
or
loope
fdivrs
je
dec
inc
adc
fnstenv
or
sbbl
adc
icebp
pop
loop
imul
ret
mov
adc
mov
adc
pop
add
adc
inc
movsb
std
or
xor
or
push
sbb
pop
es
cmp
arpl
or
xor
dec
add
sbb
add
mov
or
aas
inc
pop
and
js
sub
popf
xchg
jmp
inc
jae
sub
sub
test
push
adc
xor
ret
imul
sub
push
fidivrl
fwait
mull
jg
cmpsb
clc
ret
jmp
push
inc
insl
ret
add
imul
enter
fucomp
or
sti
les
push
adc
call
pop
cs
jo
jle
inc
jg
fdivrs
std
test
sbb
push
or
bswap
dec
int3
xchg
es
out
enter
enter
mov
mov
jno
cmp
add
sbb
aas
add
lods
mov
jo
pop
das
scas
or
and
dec
dec
jns
or
push
sbb
add
pop
inc
sub
push
test
or
outsb
add
ljmp
icebp
dec
add
hlt
je
les
jp
loope
mov
inc
int
ljmp
lahf
rolb
sbb
test
mov
mov
sti
add
ljmp
jb
cmp
imul
call
add
daa
int
ret
sbb
adc
mov
cmp
mov
rcll
inc
sbb
mov
stos
scas
je
in
push
pop
xchg
inc
mov
mov
das
sub
jb
mov
xchg
mov
insb
andb
fsin
pop
xchg
inc
sbb
scas
into
neg
push
push
lea
add
fists
mov
sub
dec
inc
je
add
fdivp
sub
xor
cmp
cmp
dec
inc
dec
and
and
mov
aaa
sub
pop
mov
sbb
cmp
push
addl
int3
adc
enter
cmp
pop
jp
jmp
push
nop
or
nop
inc
push
in
fs
insb
or
imul
add
adc
mov
push
sub
cli
movsb
fucom
imul
cmp
xchg
cmp
sub
and
ret
aad
sub
test
test
jmp
and
dec
ret
and
sub
fs
dec
adc
repnz
sbb
lret
add
fwait
xor
fldenv
mov
sub
or
mov
or
adc
cmp
xor
or
push
outsb
ret
dec
mov
push
sbb
test
sbb
jge
or
jnp
cmp
dec
inc
jl
mov
and
push
and
in
movsb
das
dec
xor
in
hlt
sbb
mov
pop
stos
cmp
loopne
lds
les
fwait
inc
mov
mov
mov
xchg
cmc
es
pop
pop
mov
jnp
push
and
call
pusha
xor
xchg
jle
ret
ljmp
pop
jg
shlb
xchg
pushf
mov
pop
adc
add
or
clc
aas
sbb
xor
shlb
in
add
sbb
sbb
fcoml
inc
imul
test
adc
aam
and
add
dec
adc
ds
pop
daa
xor
add
lcall
cmpsl
inc
mov
mov
sbb
and
das
iret
inc
inc
inc
add
dec
clc
sbb
or
pop
mov
dec
push
and
lea
test
cs
cmpsl
cli
adc
movb
dec
repnz
xchg
add
das
es
push
mov
dec
rclb
add
aaa
mov
and
or
cmp
and
jmp
fs
or
xlat
andl
sar
loope
push
enter
lea
or
movsb
mov
push
mov
test
jbe
ss
push
adc
nopl
push
test
push
add
nop
pop
xchg
mov
sbb
rcrl
pushf
ja
jmp
push
pop
sarl
push
in
xor
inc
xor
cmp
push
and
add
clc
sbb
sbb
sysret
dec
pushf
xlat
ds
pop
sbb
add
sub
addl
mov
repz
loop
add
mov
or
and
or
mov
enter
imul
shll
lea
mov
dec
ficomps
push
inc
sub
adc
cs
sbb
pushf
fxch
mov
jl
pop
cmp
push
adc
mov
or
push
lds
pop
js
lea
and
aam
pusha
cmc
sub
cltd
rcrb
pop
mov
mov
xorb
sbb
aaa
test
lea
or
aaa
xchg
or
cwtl
jmp
sbb
je
fnstcw
and
inc
inc
pop
sub
xor
xchg
loopne
ret
mov
ss
int3
pop
mov
pop
dec
dec
arpl
dec
and
roll
sub
sarl
mov
subl
jmp
add
xor
ret
add
add
movsl
or
ja
mull
push
add
xchg
dec
jl
adcl
negb
sbb
sti
arpl
pop
dec
mov
test
dec
ror
loope
sub
sahf
cmp
test
gs
pop
or
ss
fwait
xor
sbb
add
inc
sub
mov
adc
in
mov
adc
jne
xchg
inc
xlat
fldl
sbb
inc
ret
ficoms
sbb
dec
push
mov
or
push
or
and
jle
mov
push
decl
jne
mov
shr
or
mov
push
sbb
adc
jg
rclb
or
or
jmp
or
or
mov
pop
loopne
int
andb
sub
in
mov
orb
or
and
rclb
inc
inc
mov
dec
loopne
jp
icebp
mov
iret
mov
mov
test
lret
mov
imul
cs
inc
in
xchg
mov
mull
cmp
imul
sub
insb
orl
insl
dec
jns
xchg
or
jae
fwait
push
bound
cmp
push
dec
or
sub
mov
inc
pop
xor
adc
and
in
fsubs
inc
push
subb
call
jmp
pop
pop
js
jle
xchg
int3
cmc
ret
pop
pop
pop
testb
mov
movsl
and
rolb
js
mov
push
aaa
fldenv
add
pop
in
das
jns
dec
adc
nop
je
out
insb
es
inc
adc
or
arpl
push
test
adc
pop
cwtl
pop
xchg
decl
xchg
pop
sub
sbb
sbb
inc
ret
in
push
adc
lahf
test
push
push
lea
fidivl
add
adc
mov
lcall
add
and
pop
sub
xor
jmp
stos
add
or
fdivrp
dec
aaa
sub
and
iret
movl
xor
or
and
sarb
mov
inc
movsb
rcll
xor
or
mov
cld
inc
je
fisubrl
out
ss
jo
sub
jl
jl
stc
in
add
jne
fnsave
fcomp
xor
adc
fisubs
ds
add
add
jbe
repnz
jl
push
xor
fwait
sbb
mov
bound
dec
push
pop
xchg
push
add
add
adc
je
std
movsb
fcoms
insb
shll
jb
ja
ja
sbb
aaa
xchg
xlat
sahf
and
adc
add
push
push
mov
inc
inc
cmp
mov
dec
push
fs
push
test
andl
pop
lods
sbb
je
dec
daa
push
aas
and
or
inc
cmp
test
inc
pusha
xchg
adc
nop
lea
enter
cld
fdiv
rcrb
mov
xor
adc
pop
mov
daa
jge
push
orb
int3
mov
pusha
cmp
sub
orb
sbb
push
subl
xchg
les
xor
mov
sub
push
das
cmp
and
xor
or
inc
cs
jne
sbbb
cmp
push
popf
add
aas
xor
push
cmpl
hlt
xchg
pop
jl
sbb
aad
mov
enter
add
into
cs
push
bound
je
shlb
das
and
xor
inc
outsb
clc
mov
dec
idiv
rorb
mov
inc
add
adc
shlb
xchg
xor
sbb
pop
in
movsb
sbb
mov
or
mov
or
pop
arpl
test
mov
loopne
sbb
adc
dec
or
adc
sarb
fwait
sub
test
aam
arpl
imul
adc
je
divl
lahf
ret
mov
push
push
enter
and
in
and
sbb
in
cmpsb
sub
ret
adc
jb
xchg
dec
inc
cmp
push
enter
push
push
mov
adc
push
and
mov
fcoml
push
mov
dec
or
sbb
push
push
in
cwtl
and
adc
xor
add
jbe
cmp
mov
enter
dec
sbb
ljmp
and
mov
push
je
adc
jg
adc
sbbb
push
mull
mov
fwait
mov
in
lock
dec
ret
sbb
ljmp
mov
inc
add
jo
addr16
pop
add
sub
xor
loop
rclb
sbb
pop
jo
iret
pop
add
popa
loop
or
dec
rolb
gs
jo
cmc
imul
popf
fstp
xchg
movsl
push
xor
cmp
add
hlt
or
loope
scas
and
cmc
and
dec
fmuls
inc
jne
popa
and
dec
push
push
dec
dec
mov
out
cltd
loopne
pop
imull
inc
mov
xlat
cs
fsubrs
inc
rcrb
and
jns
inc
dec
push
and
adc
ljmp
or
mov
mov
jb
adc
dec
hlt
or
jno
dec
mov
jge
cmpsl
push
cli
xor
or
cmpsl
push
inc
mov
pop
sub
rcl
pop
ficompl
sbb
jecxz
mov
inc
add
adc
out
add
jmp
add
add
sub
push
andl
call
mov
or
and
loopne
mov
add
dec
aam
push
push
pop
xchg
sbb
in
aas
add
cltd
in
inc
or
xchg
mov
ds
or
mov
push
and
clc
std
pop
outsb
dec
jo
out
shll
sbb
pop
mov
rolb
pop
xor
pop
dec
dec
pop
dec
repnz
adc
ja
dec
pop
jecxz
adc
add
lods
add
les
mov
cmp
pop
jmp
inc
popa
add
add
iret
lret
xchg
fmuls
addr16
add
xchg
mov
cmp
push
cmc
rolb
push
ficoms
mov
lahf
add
and
sub
lret
xor
ret
jl
cmp
sbb
mov
cmp
add
xchg
dec
adc
or
add
aam
roll
xchg
and
loopne
clc
adc
cltd
cmp
leave
push
ss
adc
out
call
shr
jbe
loope
mov
sbb
jmp
add
push
sub
cli
and
mov
sbb
and
add
loopne
mov
push
scas
xlat
fadds
and
and
outsb
mov
adc
je
or
je
sub
je
outsb
outsb
outsb
outsb
and
je
and
jne
pop
push
xchg
or
movsl
int
push
sbb
cmp
scas
or
sbb
inc
add
jb
sbb
cmp
lock
lret
xor
mov
mov
push
mov
rcll
inc
les
dec
inc
cmp
inc
dec
dec
xor
push
cmp
fistps
xor
xchg
add
in
dec
sub
cmc
sahf
inc
mov
push
ret
xor
fnstsw
add
cmp
lock
push
lods
movsl
shlb
int
loop
push
sbb
mov
fcoml
sub
into
pushf
push
scas
adc
jne
insb
adc
dec
inc
xor
nop
add
fcoml
mov
xlat
sbb
test
push
dec
arpl
xlat
add
xchg
cmp
add
dec
and
lret
fstl
dec
push
push
jmp
inc
cmp
mov
xor
bound
je
outsl
jecxz
xchg
jae
aaa
scas
push
push
mov
inc
and
or
add
decb
push
test
jbe
xchg
cwtl
mov
cmp
scas
jne
xchg
inc
inc
sarb
push
cmp
dec
push
push
cmp
pop
mov
xchg
std
jne
adc
dec
inc
xchg
mov
inc
xor
cmp
dec
jb
jp
push
stos
push
cmp
dec
push
inc
adc
dec
add
out
lds
add
cmpsb
testb
add
or
sub
add
mov
pop
loopne
add
outsb
loopne
inc
adc
sbb
je
mov
xchg
js
pushf
push
sbb
cmc
ss
lret
daa
sub
inc
inc
pop
call
inc
test
adc
int3
shlb
cmp
mov
sbb
je
cltd
sbb
xor
leave
and
sub
pop
add
fadd
and
and
add
cmpsl
xchg
mov
lods
ss
js
xor
dec
adc
and
or
jmp
or
rcl
adc
jge
loop
push
int
inc
add
aas
fcompl
jmp
jge
mov
jge
nop
test
std
add
pop
cmp
dec
push
inc
ret
mov
jl
arpl
sbb
cmp
dec
popf
mov
testl
push
push
lds
adc
lcall
or
cmp
xchg
pusha
js
add
pop
scas
dec
mov
cmp
push
cmc
push
sub
cmpsl
add
push
sub
add
dec
notb
and
jmp
out
call
dec
push
mov
xor
sbb
jecxz
sub
arpl
pop
fistpl
jno
dec
rcrb
add
mov
jmp
fdivl
loope
in
pop
jmp
repz
pusha
inc
stos
sub
push
push
test
test
loop
xchg
or
add
push
push
xorb
loopne
mov
inc
out
popa
imul
imul
sbb
faddl
test
push
dec
pop
movsl
cwtl
inc
inc
sub
add
sbb
mov
in
test
xchg
dec
inc
rorb
jae
xchg
mov
adc
mov
adcb
inc
orb
sub
pusha
addl
xchg
jne
gs
add
and
aas
add
dec
push
jge
inc
push
arpl
mov
push
je
or
and
xlat
jge
insb
inc
dec
xor
dec
adc
jb
lods
xor
adc
dec
rcr
test
cmp
adc
call
ret
or
dec
pop
rcr
ret
jge
into
xorb
jmp
je
or
test
js
ds
adc
fs
push
test
inc
cwtl
scas
test
aaa
xor
push
cs
ficomps
jge
lcall
pop
sub
aam
imul
inc
lock
popf
xchg
jae
and
insb
mov
ss
in
and
scas
sbb
mov
mov
add
jecxz
adc
or
loope
xchg
and
push
dec
sbb
or
test
cmp
xor
sbb
dec
sbb
sahf
call
cli
add
push
sbb
lods
fs
fs
out
sahf
clc
push
addr16
stos
imul
pusha
push
lock
addr16
push
and
cmp
data16
pop
push
cmp
in
or
mov
jge
mov
das
enter
movsb
sub
mov
jno
inc
ret
push
xor
inc
test
dec
adc
stc
insl
sbb
lahf
adc
pop
movsb
inc
xchg
cli
add
push
sub
add
out
dec
push
inc
enter
inc
test
adc
dec
pop
add
push
nop
mov
cltd
dec
and
scas
cmp
pop
or
cmpb
or
sti
dec
pop
add
add
je
loopne
or
mov
xchg
jp
cmc
mov
fwait
jne
or
jns
mov
clc
push
cs
pop
fwait
and
fnsave
adc
mov
add
xchg
push
or
and
inc
fwait
add
push
loop
inc
mov
lods
lret
test
xchg
das
fnstsw
jbe
push
xchg
je
fwait
jo
xchg
test
or
sub
and
mov
jg
and
xor
cmpsb
or
push
rclb
aad
es
shll
jne
jno
xor
test
clc
mov
cmp
jl
push
push
lahf
push
or
enter
popf
adc
ss
repnz
inc
movsb
sbb
jmp
sbb
or
loopne
add
jne
cmp
data16
sbb
sbb
in
xchg
test
and
dec
push
xchg
and
mov
in
and
cmp
and
and
or
sub
fsubs
movsb
in
lahf
pop
or
cmp
loop
add
cltd
nop
dec
inc
xor
inc
in
arpl
dec
jl
dec
ret
test
mov
push
js
nop
pop
cmp
fists
dec
jecxz
mov
ret
sbb
jp
push
dec
add
sub
mov
movsb
push
xlat
mov
push
mov
dec
cld
cmc
jmp
pusha
and
xchg
test
and
loopne
sbb
insb
dec
sbb
jmp
cmp
inc
mov
add
adc
mov
dec
call
sub
xchg
mov
jmp
aaa
das
cmp
push
sbb
cwtl
clc
imul
inc
inc
pop
inc
pop
or
dec
push
mov
xlat
mov
cmpl
pop
movsb
xor
push
test
orb
add
mov
sbb
popf
push
xchg
or
push
dec
adc
nop
mov
mov
push
dec
imul
sub
ret
adc
pop
rorb
dec
imul
loop
test
mov
dec
mov
scas
push
jge
neg
push
push
cltd
mov
mov
pop
jmp
jp
mov
dec
arpl
or
ret
mov
in
orl
or
push
in
jl
cmc
push
or
dec
xor
push
pop
dec
je
push
rorl
fistl
js
inc
leave
and
inc
mov
outsb
push
mov
roll
je
sbb
lret
xchg
xor
pusha
mov
inc
dec
xor
pop
cmp
push
mov
push
cmp
push
je
xchg
push
cmp
push
icebp
shrb
lods
fadd
push
push
or
push
jbe
pusha
lods
mov
shrb
jae
mov
jg
repz
mov
popa
add
dec
push
add
jo
inc
fidivl
dec
scas
cmp
movsl
push
daa
mov
int3
lea
test
lret
add
xchg
lock
mov
xchg
aas
fstps
frstor
jmp
push
add
jb
jp
aaa
push
lahf
sbb
sub
or
xor
dec
sbb
jecxz
xchg
pop
push
add
ret
push
mov
pusha
movsl
xchg
and
pop
ffree
xor
inc
loop
fistpll
inc
jno
outsb
int
mov
sub
aaa
xor
cmp
fwait
sbb
cmp
call
push
push
inc
ja
mov
pop
or
sub
cltd
sarb
push
xchg
imul
add
rolb
mov
mov
push
ret
inc
inc
add
orl
arpl
add
and
je
test
imul
add
pop
push
xor
jl
adc
lods
mov
sub
push
mulb
scas
dec
add
pushf
sbb
mov
inc
sub
mov
sub
lods
and
out
jmp
rorb
gs
or
decl
pop
sbb
popf
mov
fwait
ret
icebp
jb
andb
or
pop
sbbb
mov
fisttpll
addr16
dec
sub
pop
and
or
push
sbbb
movl
scas
xor
and
or
outsl
ljmp
movsl
repz
mov
fisubrl
es
lcall
clc
push
fst
sbbl
in
xchg
loope
insb
or
add
je
les
rclb
adc
pop
rcll
hlt
or
or
aaa
jle
fstl
test
int3
push
inc
or
movsl
sbb
mov
sbb
cmpl
sbb
mov
or
mov
adc
sbb
cltd
push
out
push
xor
sbb
mov
shrb
repnz
data16
mov
dec
inc
push
pop
dec
pusha
loop
nop
dec
push
push
push
add
cld
dec
xor
cmp
jp
mov
fimuls
lods
mov
inc
sub
dec
adc
test
filds
rcrb
jg
mov
jnp
inc
dec
push
pop
fsubs
mov
mov
neg
push
push
and
dec
mov
pop
push
push
adc
imul
jne
inc
pop
add
fsubs
pop
pop
xchg
pop
fmull
call
dec
cmp
pop
rol
or
mov
adc
adc
push
cmp
cmpsb
rcrl
adc
sbb
push
or
add
mov
mov
xchg
ja
sbb
ret
xchg
rol
push
jg
rorl
imul
sub
fcompl
sar
sub
inc
repnz
pop
sbb
add
push
sub
nop
xor
add
add
jl
fadds
mov
sub
xchg
test
or
cmp
ss
lock
nop
int3
jne
loopne
add
mov
mov
pop
push
data16
lahf
insb
adc
xor
xchg
daa
aaa
adc
jle
pop
clc
jge
xchg
cld
adc
push
scas
subl
push
rcr
inc
cld
js
sti
mov
in
fsubl
ljmp
add
jae
jmp
jno
inc
add
daa
add
outsb
fwait
jne
xor
dec
push
mov
adc
mov
sub
mov
aas
mov
sarb
fisubl
flds
aas
xchg
push
cmc
dec
mov
mov
lret
xchg
mov
push
inc
push
rcr
mov
ljmp
mov
add
in
lock
test
mov
add
mov
push
push
add
inc
dec
push
and
test
cmp
insb
subb
int
jl
cli
add
je
sbb
aam
rorl
mov
push
insl
xchg
push
jnp
add
push
push
add
mov
adc
add
test
popa
dec
test
faddl
xchg
out
mov
sahf
mov
je
jg
sbb
adc
add
mov
lahf
jecxz
dec
mov
sub
adc
sub
push
std
mov
mov
iret
or
inc
pop
daa
jmp
or
xor
aam
andl
add
jne
shlb
or
jge
or
push
xchg
outsl
add
or
andb
mov
inc
add
mov
pop
rcl
cltd
movsl
inc
add
add
mov
sub
mov
dec
push
push
adc
out
mov
movsb
je
or
cmp
push
call
add
mov
mov
sub
add
gs
in
ret
push
or
sbb
xchg
or
or
lds
sbb
mov
imul
insb
in
sub
or
cwtl
sbb
or
xor
lret
into
or
inc
pop
loope
push
add
mull
xchg
sub
shll
popf
movsb
fbstp
pushf
mov
js
cmp
or
pop
and
fldcw
fs
mov
sub
cli
dec
popf
enter
pop
xchg
lret
push
and
mov
aad
je
adc
inc
adc
cmp
dec
add
mov
mov
push
lods
add
pop
ljmp
xchg
mov
sub
mov
mov
xchg
adcl
ss
test
neg
add
mov
and
add
push
add
push
mov
arpl
fimuls
add
inc
arpl
jg
ljmp
bnd
cmc
adc
and
std
cmp
or
pop
push
pop
jb
dec
das
fdivl
imulb
adc
push
adc
orb
add
lret
push
lds
ja
jns
daa
sbb
cmp
das
mov
dec
mov
push
cmpsl
dec
adc
xor
sbb
cmp
loop
pop
fstps
jo,pn
sbb
sar
aas
push
dec
jmp
lods
and
xor
dec
pop
cmc
xchg
and
push
fmul
add
shll
clc
outsl
mov
shrl
push
jmp
pop
add
loope
jg
sub
lds
pop
pop
jae
jl
aad
pop
int
inc
add
int
xor
cmp
jmp
sbb
das
push
push
and
dec
leave
adc
sbbl
outsl
sar
mov
cmp
push
add
pusha
dec
addb
cld
jg
clc
xor
add
xor
sbb
pop
mov
cmp
xor
push
sbb
add
dec
pop
xchg
or
das
pop
inc
js
mov
mov
cmp
mov
sub
movb
push
mov
test
repz
aas
jg
dec
and
xchg
int
adc
lock
jle
or
or
sbb
jp
xor
test
xchg
mov
inc
push
dec
mov
outsl
pop
mov
je
fidivrl
icebp
mov
mov
or
mov
adc
data16
dec
sub
add
xchg
adc
mov
cmpsb
or
dec
add
add
add
cli
push
stc
pop
clc
repnz
or
or
and
enter
or
or
repnz
or
or
or
icebp
pop
jle
xchg
jnp
pop
sub
pop
inc
cmp
push
rorb
adcl
pop
adc
mov
sub
sbb
or
adc
pusha
and
sbb
or
or
arpl
and
hlt
sub
xchg
jle
lea
inc
loopne
dec
cmp
cmp
sub
cmp
sub
je
rolb
and
pop
dec
inc
xlat
cltd
jmp
xor
ljmp
sub
pop
push
pop
int3
inc
xchg
xchg
xchg
call
jmp
test
xor
or
mov
sub
inc
loopne
loope
sahf
idivb
rclb
loope
loope
lahf
xchg
mov
sub
gs
scas
rolb
xchg
mov
add
nop
fisttps
ffree
cltd
lcall
inc
mov
sub
and
and
lock
lea
xchg
mov
mov
stc
or
ret
test
xchg
pop
mov
inc
not
cmp
adc
jle
cmpl
push
xchg
mov
call
jl
jmp
mov
dec
outsl
dec
mov
test
test
inc
out
pusha
mov
xchg
add
inc
mov
mov
test
sub
mov
orb
inc
xor
add
sbb
mov
mov
les
sar
push
rcrb
sbb
orb
push
movsl
sqrtps
jp
sub
adc
inc
arpl
mov
movsl
push
sbb
test
adc
push
ret
sub
jne
lds
mov
mov
and
loope
add
mov
fists
orb
sub
and
ficomps
and
nop
loopne
ret
dec
jne
mov
pusha
jp
cltd
inc
testl
push
ret
add
adcl
test
les
mov
pop
fldt
loope
mov
fildl
add
pop
adc
or
ret
mov
scas
jg
or
xor
push
dec
and
cmpb
sbb
xor
test
pop
lret
jp
push
cld
jne
or
cmp
test
jne
das
or
sbb
adc
lret
mov
adc
call
add
aam
cld
ljmp
jne
push
adc
imul
loope
loope
xchg
or
mov
jb
cmp
iret
les
push
cmp
mov
inc
mov
jecxz
dec
in
or
adc
test
jbe
loopne
negb
add
fsub
test
das
jae
adc
and
add
xchg
xor
add
sbb
add
xchg
loopne
ror
insb
add
dec
outsb
rclb
movsl
and
adc
test
push
shll
es
in
rclb
adc
pop
and
lds
adc
push
inc
bswap
or
add
lcall
rorl
pop
inc
inc
sbb
pop
imul
in
popf
dec
in
or
in
dec
lds
icebp
lods
arpl
sbb
adc
jne
movsl
mov
fmuls
in
call
mov
and
or
jne
pusha
stc
dec
push
push
shll
or
shlb
pop
pop
mov
jns
mov
pop
pop
mov
cmp
fdivs
xor
sub
fisttps
mov
mov
pop
adcb
dec
incl
jae
fists
test
pop
lods
inc
push
call
pop
pushf
inc
add
mov
inc
add
cmp
adc
insl
sbb
repnz
or
sub
scas
jle
rep
xor
cmp
mov
je
insb
jge
rol
sbb
jne
mov
repnz
add
fisubrs
and
rcrb
add
jg
adc
xchg
sub
lea
push
add
mov
dec
sahf
je
lds
jo
sub
mov
push
enter
jo
or
or
mov
xchg
push
ja
push
or
jecxz
nop
fdiv
int3
xorb
pop
fildl
inc
les
add
adc
xor
enter
mov
add
pop
testl
js
mov
call
test
test
shl
inc
or
push
addl
leave
cli
std
sbb
js
push
nop
mov
mov
int3
push
test
push
outsl
and
dec
or
lea
cmp
les
mov
notl
lea
xor
xchg
mov
lea
mov
mov
movsl
mov
jge
ja
xchg
orl
inc
inc
rol
xchg
loop
clc
lea
push
test
push
inc
cli
lock
mov
call
out
and
mov
xchg
mul
pop
shrb
cltd
das
dec
popa
lds
pusha
shrl
mov
push
mov
mov
jmp
mov
aam
or
rclb
lret
stos
adc
fs
fcmove
pop
mov
aad
inc
aas
les
cmc
mov
push
fchs
lds
push
cmp
add
mov
sub
xchg
in
rclb
icebp
jbe
mov
sub
cmp
inc
cwtl
pop
add
fidivrl
adc
or
jno
fdivp
insb
add
and
imul
or
sub
pop
pop
mov
mov
fwait
cmp
adc
xor
pop
addr16
insb
or
sub
push
push
jle
jnp
stos
mov
shlb
mov
fnstsw
ds
pop
call
les
push
insl
loopne
push
xchg
je
loope
xor
orb
push
mov
inc
stos
jb
aad
jne
push
add
sub
adc
cmp
xor
inc
loopne
xchg
loope
int
cmp
xchg
push
cltd
ret
jne
jne
mov
xchg
pop
mov
push
xchg
jge
pop
sbb
inc
cmp
and
mov
adc
sbb
sbb
cmp
inc
sbb
stos
cmpsb
fwait
pop
movsl
and
mov
js
and
lods
push
push
inc
push
fsubrs
cmpsl
push
cmp
push
cmp
cs
nop
push
xor
mov
sub
jbe
mov
cmp
xchg
iret
adc
mov
es
mov
mov
dec
push
pusha
std
mov
mov
aam
inc
jmp
rorb
das
lahf
mov
insb
xchg
mov
out
mov
dec
aam
or
pop
mov
mov
and
or
loope
add
popl
inc
ret
imul
fmuls
jns
shll
aam
add
push
mov
popa
or
lcall
dec
mov
dec
push
xor
nop
fsubs
and
and
xchg
adc
push
push
enter
loop
sbb
push
les
sub
or
mov
shll
stos
dec
cld
pop
mov
or
out
push
dec
mov
lock
mov
add
add
add
icebp
pop
nop
imul
lahf
sub
test
das
push
je
and
mov
add
mov
mov
mov
lea
ja
lea
or
cmp
pop
ret
sbb
lods
int3
pusha
inc
adcl
xchg
inc
jecxz
dec
in
pop
cmp
je
call
inc
data16
push
jnp
cmp
and
sbb
pop
mov
test
rolb
mov
pushf
xchg
push
xchg
inc
mov
outsb
test
sarb
dec
push
push
mov
dec
or
cltd
adc
jo
addb
and
and
fwait
sub
dec
in
cmpsl
test
stc
xlat
mov
dec
add
cmp
je
adc
push
int3
adc
inc
rcrb
fidivl
cmp
push
orb
xor
and
adc
lods
shlb
adc
incl
or
gs
call
sbb
cmpsb
xor
repz
and
xchg
or
and
mov
popa
aam
in
push
adc
cmovae
test
dec
add
jb
inc
movsb
fs
clc
add
movsb
xor
cltd
fcompp
xchg
cmp
mov
imul
mov
cmovbe
rolb
lahf
adc
pop
leave
shlb
pop
icebp
clc
cmp
idivl
ret
sub
aaa
rcll
pop
push
ds
ljmp
adc
ret
sub
les
inc
inc
outsb
mov
divb
mov
movsl
sub
or
sub
mov
aam
daa
adc
dec
inc
ljmp
add
push
jle
xor
rorb
or
xor
pop
rcrb
pop
adc
push
xlat
int
jmp
gs
mov
jae
sub
inc
push
lock
jecxz
or
sub
pop
mov
mov
mov
inc
in
movsb
adc
fdivrl
jmp
sbb
cmp
jne
flds
sub
popf
outsl
xor
sub
inc
xor
and
add
add
fidivs
push
adc
dec
jo
push
jg
rcrl
inc
dec
mov
test
mov
push
pop
jl
mov
aas
sub
dec
pushf
jp
add
xchg
aam
call
mov
fmuls
js
enter
mov
push
dec
push
add
or
cmp
xchg
mov
cld
popf
inc
lea
jb
xor
sub
sub
sub
in
jecxz
orb
mov
enter
dec
jne
add
adc
stc
adcb
call
aad
stc
stos
inc
xchg
add
mov
mov
adc
xor
add
jne
xchg
lea
mov
push
sbb
xor
pop
jbe
pop
jmp
les
sbb
add
mov
jle
xor
pop
sub
sbb
pop
xor
cmp
inc
nop
addb
inc
mov
mov
popa
xor
test
insb
push
sahf
push
and
scas
mov
push
repnz
adc
adc
sub
adc
in
movsl
mov
out
lret
xchg
xor
push
cmpsl
je
inc
fadds
out
lea
nop
push
xor
and
pusha
call
jecxz
test
and
pop
icebp
fwait
push
adc
into
test
mov
push
cmp
and
add
sbb
add
test
repnz
dec
cmpsl
mov
test
jno
test
outsl
inc
call
mov
or
daa
sti
adc
or
scas
pop
inc
sub
jmp
inc
sahf
xorb
add
fcompl
and
push
stc
enter
aad
stos
or
popa
add
adc
decl
cmpsb
popf
pop
cmp
push
movsb
add
inc
jge
add
push
ret
mov
not
in
dec
int
push
add
push
movb
pop
adc
orl
lret
add
or
mov
push
xor
aam
adc
adc
mov
push
pop
adc
fs
or
or
add
adc
insl
pop
mov
and
add
push
push
int3
add
sbb
adc
int3
jge
mov
adc
mov
jne
inc
push
dec
or
mov
add
add
decl
mov
pop
adc
mov
xchg
call
cmp
mov
orb
xchg
icebp
and
hlt
mov
cmp
arpl
lahf
xchg
insl
mov
test
movsl
xor
cmp
cmp
or
inc
lcall
mov
inc
sub
lret
repz
or
dec
sub
mov
mov
mov
or
sbb
sbb
jge
pop
fcoml
sbb
pop
std
mov
rol
xor
movsl
test
xorl
add
imul
fldl
cmp
lock
pop
popa
xor
clc
adc
ret
out
or
or
and
vmovntps
ja
jb
mov
jmp
mov
ja
pop
add
sub
loop
fsubrs
sub
add
xorb
and
lret
mov
sbb
pop
fwait
movsl
out
mov
sahf
out
adc
cmpb
or
bound
sbb
push
je
dec
sahf
das
sub
imul
jne
testb
in
lea
and
das
add
sub
mov
cmp
bound
or
sarb
dec
sahf
test
outsl
add
jns,pn
sub
mov
mov
insl
aam
les
ror
push
push
iret
add
jl
mov
in
cmpsb
mov
int
jle
cmp
sub
inc
outsb
pop
adc
das
cld
stos
push
sbb
add
cmp
lret
andl
inc
rcll
and
dec
lods
je
xchg
clc
mov
add
and
add
aad
jl
mov
or
push
add
jmp
popa
jb
cmp
ja
add
jnp
sub
test
add
and
lods
lods
imul
sub
cmp
loop
orl
imul
js
shlb
adc
dec
in
and
sbb
dec
shl
sub
and
add
pop
pop
sbb
dec
addr16
data16
lcall
jae
adc
or
enter
adc
push
mov
pop
sbb
xor
mov
pusha
ds
pushf
andb
mov
fdivs
loop
push
pushf
pop
out
add
sar
mov
ret
mov
fstpt
arpl
push
mov
jmp
mov
cld
and
inc
cmp
push
setp
sti
les
inc
jmp
sub
icebp
je
mov
bound
lods
aad
adc
nop
rolb
and
nop
push
movsl
xchg
mov
mov
xchg
mov
pop
aam
push
loop
loopne
jg
inc
cmp
addb
adcl
in
aas
stos
movsl
lods
cmp
push
aaa
aas
stos
rol
mov
cmp
sbb
insb
add
pop
or
mov
pop
cltd
ret
mov
adc
lock
add
mov
add
inc
pop
loope
fildll
mov
push
xor
int3
add
mov
hlt
add
pop
xor
popl
adc
mov
xor
lahf
call
xchg
cli
adc
idivb
popa
and
pop
out
lods
sub
xor
cmpb
mul
xor
stos
jo
aam
mov
cwtl
cltd
loopne
mov
and
or
in
cs
adcl
or
out
xor
push
ss
cmp
dec
xor
dec
adc
pop
dec
push
add
sbb
adc
enter
or
icebp
mov
mov
mov
dec
sbb
adcb
xchg
push
mov
or
or
daa
sub
push
jo
sbb
pop
fldl
loopne
cwtl
or
or
add
int3
push
cmp
popf
jnp
cmp
cmc
sbb
movsl
xor
mov
in
inc
enter
xchg
in
sbb
bound
pushf
jno
cli
or
inc
je
or
sbb
cmp
pop
rclb
aas
js
cld
mov
xorb
jae
push
xchg
jb
ffreep
subl
inc
adc
les
and
lds
xlat
or
and
jmp
cmp
sbb
fwait
fs
test
lea
pusha
sbb
pusha
ret
dec
jne
pusha
imul
das
xchg
sbb
lret
adc
mov
shlb
push
push
xchg
shr
ljmp
adc
sub
sub
jmp
fmuls
popa
pop
pop
ret
cmp
les
outsb
push
sbb
js
or
jo
xor
mov
dec
sahf
add
lods
pop
aas
xor
inc
add
dec
xchg
dec
out
xchg
and
push
add
mov
adc
and
or
call
pop
mov
add
sub
sub
or
and
add
push
inc
mov
mov
push
das
int3
pop
push
fadds
jmp
or
les
pop
pop
sub
loopne,pn
cmp
mov
mov
xor
cwtl
inc
sub
xor
aad
inc
cli
test
mov
mov
dec
sub
lea
nop
cmpsb
rorl
xchg
out
sub
and
xchg
pop
push
cmp
jno
jns
mov
push
popa
test
mov
pop
push
jp
lea
ds
cmpsl
push
mov
inc
xor
imul
adc
es
ss
xchg
mov
or
mov
push
push
bound
mov
cld
cli
sub
inc
sub
add
ret
icebp
mov
dec
test
subl
iret
xor
or
and
enter
xor
dec
jne
test
insl
sub
es
mov
xchg
mov
add
mov
ss
popa
sbb
jg
test
clc
push
add
out
sub
shl
call
sbb
lahf
imull
add
push
pop
test
and
gs
cwtl
or
dec
js
or
push
push
shll
negl
push
jbe
inc
popa
sbb
sbb
mov
pop
jge
dec
push
mov
int
dec
roll
or
sub
mov
push
lods
xor
popf
inc
adc
push
mov
sub
ret
dec
or
pop
inc
pop
adc
add
in
lret
xchg
andl
sub
sbb
adc
jle
adc
lock
xor
and
sbb
pop
adc
shlb
lahf
push
or
movb
test
cmc
mov
test
lea
in
es
push
push
dec
push
loop
and
and
ds
mov
mov
leave
sub
rcrl
sub
rcrb
arpl
inc
inc
lds
cmp
lea
fidivrl
sbb
mov
pop
dec
sbb
xor
mov
xchg
mov
push
add
mov
add
bound
mov
popf
add
dec
add
mov
xorb
mov
fcom
or
call
ret
mov
arpl
add
push
notl
in
adc
inc
push
jmp
in
xchg
aam
pop
mov
ss
leave
dec
or
xor
xchg
popa
jae
repz
sbb
mov
jo
lcall
mov
jns
mov
ljmp
push
addl
in
loop
int
ss
jbe
adc
stos
movsl
push
sub
scas
jno
push
adc
and
push
push
push
sub
popa
mov
jmp
jle
mov
push
xchg
jp
mov
dec
xchg
dec
and
stc
inc
int3
or
xchg
std
sbbl
xor
enter
in
addb
sbb
les
rorb
add
cmc
fadds
int3
leave
je
and
add
rcll
pop
mov
aaa
sbb
sub
or
jno
pop
or
adc
pop
push
rcrl
mov
inc
push
mov
add
lods
xchg
or
out
imul
xor
jl
inc
sbb
lret
add
dec
rol
mov
test
addb
inc
push
ret
test
ss
int
lds
mov
fadd
sub
ret
stos
push
push
xlat
adc
testl
sbb
movl
lea
movsb
daa
cmp
inc
hlt
push
pop
lods
adc
movsl
push
and
lock
push
sbb
jnp
adc
ss
push
out
inc
arpl
rcl
daa
loope
adc
push
movsb
fadds
cmpsb
add
push
xor
mov
mov
call
push
sbb
inc
xchg
lret
in
in
cmp
add
rorb
out
das
inc
divb
xor
adc
adc
cmp
int
iret
pop
leave
jmp
std
outsb
inc
orb
and
mov
ret
shr
fimull
and
int3
and
movsb
jo
imul
in
mov
sbb
push
shll
sbb
mov
aas
adc
aas
and
sub
dec
mov
mov
push
dec
sbb
and
cmp
push
scas
je
adc
int
lea
int
stos
and
test
ret
push
ret
mov
mov
shrb
add
push
or
inc
jmp
or
sub
push
in
jge
inc
push
push
mov
jb
hlt
cmp
xor
mov
sub
push
fsubrl
in
pop
insb
adc
mov
insb
dec
and
add
mov
and
data16
test
sbb
inc
imul
lahf
mov
mov
adc
mov
sub
addb
test
rolb
fildll
cmp
js
xchg
out
lock
adc
scas
push
push
daa
jbe
outsl
add
std
icebp
inc
adc
ds
push
sbb
inc
sbb
inc
int3
jno
test
add
clc
xor
mov
add
adc
push
nop
cmpsb
dec
inc
scas
push
in
icebp
adc
lret
push
add
sbb
mov
mov
nop
push
xorb
in
pop
sub
lods
pop
jne
inc
xor
outsb
and
cmp
mov
jge
jl
xchg
sbb
cltd
stos
jno
pop
push
fildl
fldenv
sbb
pop
cs
sub
and
xchg
rcrl
mov
or
sbb
das
enter
pop
add
cmp
mov
out
push
ret
dec
mov
sbb
int3
jp
jne
inc
insb
imul
ficomps
in
gs
xor
push
daa
popf
jne
aad
arpl
push
add
dec
inc
sub
cmpsl
push
pop
dec
aam
xor
loopne
cli
push
sub
pusha
pop
fwait
nop
lret
in
scas
mov
fwait
xor
inc
add
sub
lahf
cmc
pop
fldt
dec
dec
and
xor
xchg
repz
orl
push
jp
jno
add
adc
dec
dec
xor
push
inc
adc
mov
loope
push
mov
sarb
push
out
inc
rcr
loope
icebp
pop
pop
fmull
sbb
test
ffreep
adc
inc
dec
int
cmp
add
add
push
jecxz
inc
or
push
or
dec
lods
cwtl
pop
sub
mov
pop
inc
jmp
pop
pusha
ds
sub
sub
pop
rclb
sbb
mov
sub
xchg
sbb
lds
pop
and
pop
movsb
mov
dec
test
lods
test
pop
jae
or
jo
stos
repnz
jo
mov
jl,pt
shl
pop
push
mov
imul
add
mov
mov
sbb
sbb
jb
lea
es
or
inc
add
outsb
xor
jo
push
stos
dec
add
inc
orl
xchg
call
add
xchg
push
clc
pop
addr16
je
std
lret
and
mov
lock
arpl
mov
push
pop
mov
imul
dec
scas
popf
jl
dec
pop
ds
bsr
enter
in
add
jne
pop
dec
arpl
mov
shll
ss
in
shll
loopne
call
dec
mov
pusha
inc
leave
repz
add
dec
push
icebp
mov
ret
popa
cli
sub
lock
or
je
sub
arpl
push
push
dec
mov
sub
stos
dec
aas
push
mov
xchg
xchg
mov
mov
sub
jo
ss
push
add
call
mov
imul
lret
mov
jl
mov
xchg
push
pop
pop
popa
test
push
push
add
inc
sub
cmp
rcrb
rorl
jp
icebp
cs
lea
inc
push
mov
jns
gs
jle
mov
inc
jne
outsb
sub
dec
adc
cmpsb
pusha
pop
sbb
add
pop
jae
outsl
xchg
cmpsl
ret
mov
pop
inc
push
movsb
ret
xchg
xchg
cmpl
sub
into
mov
xchg
ljmp
jae
sahf
test
add
adc
xor
jns
mov
mov
rclb
jne
mov
xchg
sbb
daa
loopne
cs
inc
andb
pop
push
or
or
nop
add
push
xor
or
rcl
adcl
pop
inc
and
push
faddp
jne
mov
es
xor
dec
aad
mov
shr
adc
in
lret
inc
dec
bound
push
hlt
mov
jo
mov
arpl
bound
jmp
add
cli
xchg
adc
into
mov
pop
jne
inc
cmp
dec
mov
jmp
jne
testb
mov
je
adc
adc
repz
or
mov
add
adc
insb
orb
fstps
jmp
rcrl
jge
add
or
mov
das
inc
xchg
push
pushf
xchg
mov
push
repz
sbb
jecxz
iret
add
into
mov
into
and
pop
adc
xlat
movsl
cmovp
fsubs
lods
pop
mov
sbb
sbb
xor
das
out
sbb
adc
mov
pop
jbe
stos
push
imul
pop
add
add
inc
inc
and
pushf
push
push
mov
xchg
dec
arpl
cltd
loope
lock
div
rcrl
push
xor
pop
ret
sub
sub
cwtl
fsub
dec
sbb
sbb
xor
or
les
int
sub
xor
decl
es
lods
jmp
cmp
push
cs
add
mov
ja
jo
jecxz
inc
and
loope
in
ret
ss
add
xor
pop
inc
pop
mov
icebp
stos
inc
sti
sahf
sub
mov
sub
add
cmp
fcoml
xor
outsl
or
add
or
ss
adc
and
in
dec
jmp
mov
testb
mov
xchg
add
push
jle,pn
outsl
je
sbb
rolb
push
inc
mov
das
mov
sub
insb
insl
lret
sub
adc
insl
iret
dec
pusha
jmp
adcl
xor
clc
mov
jl
subps
push
cmpsl
push
test
xor
cmovne
movsb
fidivl
movsl
dec
popf
pop
loop
lds
cmpsl
push
shll
sbb
inc
sarb
stc
call
sbbl
mov
dec
jge
push
pop
mov
aad
test
jl
or
loop
mov
inc
cmc
jp
mov
inc
sub
fbld
pop
inc
or
and
and
dec
sarb
stos
or
dec
adc
or
xor
movsl
add
movsl
xor
dec
dec
movsb
pushf
imul
mov
fs
call
rorb
mov
adc
shlb
xor
repz
in
cs
cmp
sbb
mov
das
adc
pop
je
sub
sub
aas
fldl
and
push
inc
xchg
mov
adc
pop
aas
rcl
jle
xchg
lods
jge
mov
or
lods
sbb
add
cmova
int
pusha
dec
mov
mov
aas
mulb
cld
xor
push
push
sub
mov
call
push
and
cmp
adc
sub
lahf
dec
sbb
daa
or
faddl
jo
add
xchg
pop
xchg
adc
adc
stc
mov
jl
and
orb
cwtl
lahf
xchg
pop
cmp
test
lods
push
or
add
mov
add
dec
sbb
jmp
mov
daa
push
add
xchg
cmpsl
in
push
xchg
pushf
adc
insb
adc
test
jmp
adc
pop
sbb
adc
push
adc
cwtl
lea
in
pop
fcmovu
push
ficoml
in
lcall
nop
adc
jmp
pop
mov
pop
cmp
cmp
lock
push
push
pop
movsl
mov
jp
fst
stos
test
add
mov
inc
sub
inc
shlb
adc
test
pop
add
push
ret
lods
mov
lea
xchg
mov
push
gs
dec
and
or
dec
push
sahf
jo
xchg
and
sub
xchg
dec
fcoms
lea
inc
jl
paddusb
or
add
mov
mov
and
add
inc
xor
xchg
fistpl
daa
aad
adc
cmp
xor
cltd
mov
test
push
inc
mov
add
mov
in
sub
mov
pop
push
outsl
pop
adc
lds
mov
dec
sub
xchg
hlt
in
sub
push
or
add
or
mov
negb
aas
cmp
add
xchg
or
fcoml
ds
jbe
and
stos
inc
mov
add
test
push
sub
cmp
adcb
adc
aam
sbb
cwtl
call
inc
push
movsb
mov
inc
inc
aad
mov
test
inc
add
cmpsb
xor
xchg
sarb
mov
mov
xor
add
test
out
movsb
fcom
xor
stos
push
or
push
pop
jle
jo
sub
or
imul
add
and
or
jl
pop
jbe
add
and
add
cs
test
mov
mov
mov
mov
mov
and
dec
loopne
ds
insl
add
sub
loopne
loopne
cmp
sbb
dec
pusha
jl
rcrb
cmp
push
je
popf
test
mov
ss
xchg
adc
xchg
jno
add
inc
mov
push
or
loope
pusha
loop
push
jecxz
lods
xor
in
ret
push
inc
pop
xor
stos
lcall
sbb
aas
and
add
inc
inc
les
sbb
adc
or
xchg
or
xor
xor
pop
dec
cmp
mov
aad
dec
jmp
push
call
inc
call
sub
push
xchg
jb
int3
mov
pop
add
push
xor
push
and
cmp
rcr
sti
mov
pop
loopne
or
push
or
loop
xor
jge
ss
and
pop
mov
push
adc
out
aad
sub
mov
mov
push
sub
push
xor
push
or
xchg
mov
dec
movsl
adc
lock
push
fisubs
jae
xchg
push
or
xlat
movsl
outsl
jmp
add
daa
lds
fs
je
out
push
jno
push
lret
sub
and
xchg
ret
cmc
enter
into
and
pop
stos
jle
add
cmp
rorb
adc
shlb
or
jmp
or
cs
ja
adc
xchg
jecxz
mov
inc
sbb
jecxz
cmpsb
adc
or
mov
jecxz
jmp
add
test
mov
mov
dec
or
cmpsb
mov
or
pusha
pop
sub
cmp
add
in
jbe
cmpl
push
neg
sub
pop
dec
add
push
mov
push
push
inc
mov
mov
ret
sbb
adc
inc
imul
lahf
adc
pop
scas
stos
inc
add
or
dec
iret
xor
mov
out
push
jp
test
push
mov
cwtl
jo
test
jne
nop
sti
jmp
and
push
or
mov
push
loope
adc
and
adc
leave
clc
cmp
je
push
hlt
or
xor
idivl
repz
dec
pop
or
cmp
fistl
mov
je
pusha
xor
dec
cmp
cmpsb
sub
or
cli
mov
in
insl
jmp
add
and
inc
adc
sbb
fsts
push
fcomip
adc
mov
gs
pop
add
sbb
add
fnstcw
loope
jge
outsb
aad
dec
adc
or
inc
or
mov
cmc
pop
mov
adc
mov
push
movsb
dec
pusha
loope
dec
dec
add
push
jecxz
imul
mov
pop
lods
lods
sub
and
imul
test
inc
popa
pop
lea
mov
pop
aam
inc
test
imul
add
mov
xchg
repnz
wrmsr
fcoml
andl
push
pusha
pop
mov
xor
dec
or
in
test
push
sbb
mov
xchg
orb
cmp
rorb
enter
cs
ret
lea
inc
aad
fisttps
lock
adc
inc
bound
add
lock
lods
add
pop
fs
mov
test
or
call
loope
push
push
mov
sbb
iret
adc
add
pop
sub
adc
fsubrs
cld
shll
aaa
add
pop
aad
cmp
mov
dec
sub
mov
inc
lret
mov
adc
ret
dec
inc
xor
mov
sub
rorl
jg
mov
push
sbb
adc
add
dec
and
lcall
mov
aas
rorb
and
std
push
xor
arpl
addl
out
sub
xorb
xor
repnz
icebp
sbb
in
dec
pop
xor
pop
pusha
pop
nop
mov
pop
sahf
mov
int3
sbb
test
mov
mov
xor
dec
sbb
sub
add
mov
sbbl
pop
dec
mov
fnstsw
roll
das
je
rolb
dec
es
bound
dec
mov
loope
jnp
orl
ja
fs
es
sub
aaa
lea
add
je
loop
or
pusha
call
sbb
enter
inc
clc
adc
push
add
xchg
jmp
idiv
xchg
scas
fists
filds
xchg
fisubs
xor
jl
sbb
aam
rorb
je
lcall
movsl
sub
adc
add
in
enter
xor
sbb
sub
or
in
mov
shlb
int
dec
lock
adc
sbb
ds
in
xchg
push
mov
and
aam
rolb
cltd
ljmp
jo
xchg
jmp
sub
pop
pop
scas
xor
push
inc
imul
cmovns
jmp
push
pop
test
adc
mov
lock
addr16
inc
push
mov
in
shll
xor
mov
sbb
fistl
cltd
in
loopne
pop
push
hlt
lock
mov
add
test
inc
inc
push
out
and
adc
jae
lcall
and
lahf
or
mov
sbb
jg
pcmpeqw
lds
lret
xchg
cli
pop
push
psrld
insl
push
sbb
push
das
sub
in
mov
gs
packuswb
neg
pop
cmpsl
adc
or
dec
cmc
xchg
mov
sbb
popa
aas
subb
popa
mov
call
aas
inc
xor
lea
push
movsb
add
bound
das
nop
xor
out
sub
or
sub
or
pop
scas
adc
jns,pn
data16
mov
add
or
push
xor
sub
and
and
mov
and
and
stc
jp
nop
sub
popa
push
ss
push
out
mov
jle
gs
in
sub
test
jmp
dec
lds
andb
fadd
addb
jno
or
pop
lcall
loopne
push
cmp
sub
push
push
lods
jb
sub
and
cmpsb
dec
pop
push
pop
inc
push
daa
test
push
add
arpl
add
icebp
mov
mov
in
add
sub
push
add
shlb
xor
lcall
mov
push
inc
mov
sbb
sbb
data16
mov
ficoms
push
pop
gs
sub
push
or
dec
cmpsb
push
pop
dec
ds
and
adc
inc
insb
or
mov
addl
ret
das
dec
cwtl
loopne
adc
add
push
adc
push
jmp
push
shlb
jecxz
xor
sbbl
loop
xorl
enter
pop
adc
addb
scas
pop
mov
jecxz
or
adc
or
sbb
push
loopne
push
dec
sub
sbb
ljmp
dec
and
or
shl
enter
test
add
inc
add
mov
add
sbb
ret
sub
jne
xchg
dec
cmp
test
into
mov
outsl
mov
in
shll
or
test
jno
pop
sub
in
xchg
movsl
push
fstps
pop
rcrb
scas
subl
pop
pop
xor
jmp
repnz
mov
xor
or
sti
and
mov
mov
pushf
loopne
pop
lcall
xchg
add
mov
cmp
jnp
cmp
je
cmp
sub
fs
push
lret
inc
push
sahf
sbbl
movsb
pop
test
pop
and
popf
and
jo
dec
or
jle
lahf
shlb
xchg
inc
shl
push
jae
enter
mov
rorl
sbb
mov
or
mov
ja
stos
mov
lea
cmp
fisttps
mov
mov
lea
bound
push
add
sub
fadd
mov
sub
lea
push
mov
in
dec
je
xchg
or
xchg
rolb
out
xor
mov
popa
jnp
mov
jne
push
push
pop
lret
fimuls
outsl
push
xchg
movsb
xchg
shrl
in
inc
sbb
out
xor
xchg
xchg
fmulp
adc
lret
and
jae
mov
mov
lds
mov
mov
mov
mov
and
add
push
ret
cli
fwait
and
jb
pop
mov
loopne
pop
and
jo
mov
mov
adc
lcall
add
xchg
imul
mov
or
push
daa
in
sahf
insl
push
inc
dec
pop
cmp
xchg
sti
out
cmp
pop
and
mov
fidivs
sub
mov
cmp
push
or
sub
nop
lea
add
movsl
xor
jg
mov
ret
mov
xchg
je
mov
and
mov
sub
enter
mov
out
cmp
mov
adc
rorl
mov
mov
rol
push
enter
mov
jmp
sub
dec
rol
or
and
mov
adc
loop
sbb
cmp
mov
fcmovb
mov
xor
adc
in
hlt
arpl
push
std
adc
stc
pusha
popa
mov
aas
clc
mov
mov
in
lret
mov
mov
lcall
add
add
cmpsb
pop
add
add
adc
push
sahf
je
add
test
push
adc
in
inc
mov
push
xchg
loop
jl
xchg
mov
add
or
mov
xchg
push
adc
adc
aam
hlt
lret
ficomps
push
or
sub
lea
popf
and
mov
insb
ds
pop
pop
enter
loop
cwtl
pop
aaa
ljmp
push
mov
out
add
cmp
xor
sbb
inc
dec
and
inc
sub
sbb
sub
xor
mov
add
push
mov
arpl
repz
mov
movsb
mov
mov
movw
popf
inc
or
mov
dec
and
mov
mov
nop
mov
xlat
cmp
out
das
pop
mov
sub
pop
or
dec
jmp
mov
movsb
lret
mov
sahf
sub
in
outsl
mov
jbe
sti
inc
je
or
push
pop
call
mov
mov
enter
and
dec
add
mov
fildl
in
fidivrl
shlb
jmp
dec
mov
insl
dec
inc
je
dec
mov
add
adc
add
sub
sbb
pop
inc
fadds
mov
in
sbb
adc
or
divl
or
fmull
lds
add
lcall
dec
push
shrl
mov
or
dec
inc
add
and
pop
pop
or
jl
pop
js
cltd
sti
push
dec
inc
xchg
inc
inc
push
or
mov
push
xor
cmp
add
jecxz
std
rcl
fbstp
lret
sbb
ds
dec
mov
ret
mov
adc
lock
shll
or
or
cmp
je
ljmp
aam
sahf
xchg
xchg
push
rorb
pop
mov
add
xor
push
add
mov
lret
cmp
jle
sub
dec
or
inc
and
mov
pop
dec
dec
dec
jo
lret
pop
xor
or
mov
sub
pop
jg
sbb
or
push
or
xchg
push
mov
adc
mov
shl
mov
shll
add
sbb
mov
cmpl
lock
stos
jb
cmc
leave
mov
adc
jo
cmp
fsubr
dec
test
mov
sbb
xchg
jmp
lret
add
lret
mov
imul
jo
sub
push
movsb
dec
roll
ljmp
lea
adc
lret
lods
out
push
mov
dec
mov
or
pop
das
cmpb
ljmp
adc
inc
bnd
jl
mov
sbb
ret
jge
mov
fcmovnu
sbb
ret
xchg
repnz
out
pop
cmp
pusha
cs
scas
xlat
add
fnstcw
dec
adc
lret
leave
decl
lcall
ds
loope
xor
inc
pop
mov
ds
fmull
shlb
pop
inc
xchg
xchg
loop
aam
adc
push
sahf
shl
add
jo
and
mov
or
es
dec
dec
lret
jl
inc
pop
pop
or
es
sub
or
mov
test
and
loopne
popa
cld
mov
shr
sub
dec
pop
pop
pop
push
mov
pop
or
mov
push
dec
sbb
lock
add
insb
fisubrl
repz
int3
dec
inc
fs
shll
inc
push
imul
add
jecxz
subb
adc
mov
jl
sar
in
test
js
add
ret
add
mov
pop
js
and
cmp
shlb
jl
ja
mov
adc
bound
sub
ljmp
xor
les
dec
je
cmp
shlb
sbb
ret
je
clc
push
xor
jmp
test
mov
lea
data16
mov
xchg
frstor
subl
ret
jge
add
or
or
pop
inc
or
stc
stc
xor
and
mov
dec
jle
jl
inc
decl
jo
movsl
jns
xchg
iret
or
cmpb
dec
mov
loope
fidivrs
jo
lret
fistpl
jg
cmpl
add
dec
pusha
enter
xchg
nop
inc
or
push
mov
dec
mov
xchg
xor
mov
test
mov
xchg
popa
or
pushw
sbb
inc
inc
popl
sub
and
push
out
mov
dec
sbb
rolb
lea
div
push
add
inc
and
sub
andl
movl
adcb
sub
add
pop
sbb
dec
mov
outsb
xor
jno
add
xorl
inc
jbe,pn
mov
pop
int3
add
jle
and
and
fwait
scas
cmp
jl
pop
jmp
shll
icebp
ja
leave
movsb
lret
loop
lods
and
xor
cmp
aas
cmp
push
sbb
add
dec
scas
inc
sbb
jne
fs
setae
das
jmp
sbb
cmpsl
jl
cmpsb
push
cmpsl
fs
lcall
sbb
pop
adc
test
push
je
clc
fwait
and
add
add
adc
jno
jbe
je
jbe
jge
pop
outsl
or
sbb
ret
out
xchg
dec
dec
jae
push
cmpl
ljmp
fsub
popa
es
or
and
lea
and
nop
popf
test
inc
inc
mov
add
sbb
and
inc
mov
leave
stc
movsb
cltd
insb
sub
call
jmp
mov
leave
mov
push
add
loopne
mov
add
push
mov
inc
sbb
fbstp
or
mov
out
aam
inc
xchg
sbb
xchg
xchg
xchg
adc
jmp
cmp
push
xchg
add
inc
js
repz
fadd
mov
addl
inc
arpl
mov
rol
pop
dec
sub
mov
push
loope
in
fsubrs
adc
sarb
fs
dec
lds
xorb
or
lahf
cmpsb
push
or
es
lret
or
aad
ret
dec
std
or
mov
add
mov
inc
lods
fs
inc
add
inc
pop
inc
cmp
mov
mov
push
or
inc
cld
repz
ret
cmp
dec
dec
imul
sahf
int
and
iret
mov
mov
sbb
ds
mov
jg
sahf
ret
mov
or
jo
dec
loopne
or
inc
fsubrl
sbb
xor
xor
imul
lock
and
add
or
call
push
adc
stos
add
out
leave
rolb
fsub
add
pop
decl
js
add
and
repz
mov
test
or
incl
add
cmpsl
jns
pop
mov
and
xor
or
loope
mov
jbe
push
push
int
push
leave
mov
push
pop
cmp
rolb
xor
push
pop
adc
into
sub
ret
loope
or
cmpl
lea
sbb
or
sbbb
pusha
jge
iret
xchg
sbb
cld
sub
arpl
icebp
jae
adc
mov
or
jle
inc
jmp
test
mov
loopnew
xor
into
xor
in
push
xlat
outsb
loopne
pop
or
mov
pusha
dec
mov
push
lahf
rorl
int
mov
dec
fstl
or
sub
mov
add
mov
or
outsb
in
jl
or
dec
lret
or
xchg
arpl
daa
pusha
lock
lock
mov
test
xchg
popa
xchg
data16
pop
test
adc
gs
lea
popf
nop
and
je
mov
push
push
out
jne
dec
movsb
mov
mov
dec
pop
push
fsubrp
pop
inc
cwtl
cmp
add
clc
bound
sbb
outsl
xchg
adc
add
iret
or
dec
adc
add
pop
insl
jmp
push
stos
xor
inc
cli
adc
pop
add
or
dec
sub
sub
push
cmp
adc
sti
mov
push
shll
and
mov
inc
sub
inc
popa
imul
xor
mov
mov
hlt
xor
and
add
fiaddl
or
sub
sub
scas
mov
or
jno
sti
xchg
shll
push
test
or
add
and
fcoml
movsb
lahf
add
adc
add
ret
mov
mov
mov
and
jp
xor
insl
test
sbb
xor
and
add
addl
and
pop
sbb
sbb
adc
xchg
cmp
decb
sbb
add
mov
ret
lock
jne
xor
pop
sub
negl
testl
cmpsb
cmpsl
out
push
dec
or
mov
fisttps
dec
aam
test
and
xchg
sub
adc
inc
push
lret
dec
lea
mov
outsb
inc
jbe
ret
div
rclb
push
popa
push
sub
dec
dec
and
loop
dec
js
out
dec
mov
hlt
jmp
push
aam
fistpll
sbb
sub
or
iret
cmp
lea
pshufw
lods
ljmp
and
mov
mov
sub
pop
sbb
lds
or
push
clc
cmpsb
lock
pop
js
add
loop
shr
imul
push
push
add
mov
jge
push
shrl
add
xchg
pushl
shl
add
testb
push
push
push
pop
sub
hlt
adc
cmp
push
nop
or
sbbl
jge
xorb
pop
test
outsl
adc
inc
rolb
enter
mov
nop
sub
stos
push
sbb
sbb
das
clc
lea
push
pop
jge
push
dec
mov
and
lret
rolb
xor
mov
sbb
pop
lcall
sbb
sub
inc
jo
cli
mov
and
insb
mov
pop
ss
ret
or
push
jnp
cmpsl
mov
push
hlt
inc
dec
xor
adc
xchg
out
lea
mov
in
loopne
test
push
push
push
inc
add
xchg
jno
cmp
dec
cmpsl
cli
fsts
idivb
dec
jno
sbb
cwtl
dec
dec
cld
sub
jb
rcl
and
ret
cmp
je
inc
jmp
pop
shrb
inc
inc
into
lea
jl
sbb
fs
xor
arpl
jge
cld
pop
adc
push
mov
mov
mov
sbb
cmp
bound
xor
sbb
sub
mov
xchg
push
or
push
add
jle
mov
inc
or
or
cmp
mov
xor
pop
push
xor
dec
or
cld
or
dec
push
push
lds
pop
movsb
xchg
nop
or
jg
test
mov
or
sbb
and
add
push
push
test
cmp
mov
roll
lret
mov
loope
rorl
inc
jbe
add
jns
test
push
dec
jg
dec
jne
fisttps
addl
popa
or
dec
mov
or
xchg
xchg
add
pop
test
lahf
add
push
aam
cmp
adc
lock
add
or
and
adc
fs
or
arpl
aaa
dec
dec
rorb
test
fisttpll
mov
inc
mov
pop
push
push
add
mov
popa
xchg
sti
imul
mov
jmp
xor
es
pop
rol
adc
sub
add
les
inc
test
nop
inc
or
jb
test
add
loop
mov
push
xchg
xor
add
repnz
call
imul
jo
cs
adc
sub
inc
mov
push
dec
jne
or
xor
adc
sbb
add
push
jge
lea
fmull
jo
sbbl
push
mov
add
ljmp
add
pop
ret
ret
inc
push
pop
loop
sbb
adc
ljmp
push
call
pop
xchg
js
dec
sub
dec
cmpl
add
out
dec
sbb
imul
jle
xchg
or
mov
cmp
pop
mov
or
adc
lods
inc
or
cmp
cmp
pusha
and
push
push
or
cltd
mov
lcall
cmp
clc
xor
xchg
inc
outsb
cmc
insb
rclb
add
mov
cmp
dec
nop
rcr
jae
pop
jns
mov
push
ret
push
mov
push
ss
clc
mov
pop
adc
push
addr16
movsb
shr
aaa
adc
dec
rclb
pop
fsubl
fldenv
jb
adc
fiaddl
pop
fmuls
adc
call
ds
cmpsb
mov
jle
lds
add
mov
jge
inc
fdivl
data16
mov
call
and
js
and
lods
pop
push
ljmp
ret
fs
dec
xchg
and
movsl
fisttpll
stos
inc
inc
subl
popa
pushf
adc
adc
pop
outsb
ja
xor
dec
add
sbb
or
test
ds
jne
fstpt
add
inc
inc
and
mov
fsubl
popa
mov
cmp
inc
int3
sub
sub
adc
dec
pushf
xorl
xchg
push
push
sbb
fsubl
jne
js
stos
sub
fs
mov
jmp
lock
js
fists
push
pop
jmp
popa
and
adc
sarb
test
adc
cld
inc
in
and
lcall
js
test
shlb
adc
or
push
dec
mov
insb
lea
xor
rorb
xor
aaa
cli
cmpl
arpl
sub
push
mov
fimull
pop
and
cmpsb
addr16
or
mov
movb
int
add
xorl
sbb
fists
mov
add
mov
push
ds
pop
and
cmp
mov
adc
test
pusha
adc
jmp
or
icebp
or
add
push
lcall
mov
xor
enter
shll
lret
or
sbb
aam
xchg
or
call
call
sbb
inc
scas
rorl
xlat
incl
aad
push
lea
notb
loopne
mov
js
shl
or
add
and
not
and
or
jg
ss
fldl
into
mov
push
fdivrs
or
sti
add
mov
push
lcall
mov
std
lods
jo
test
lea
cli
and
push
cmp
clc
add
nop
and
xchg
push
jle
pop
nop
or
push
xor
lds
adc
fdivs
rorb
push
test
dec
in
pushw
mov
inc
xor
sub
and
jge
add
cmp
mov
loopne
pop
nop
aaa
aas
push
sar
pop
jo
cmp
aad
mov
imul
xlat
add
aaa
adc
nop
or
inc
mov
out
sub
cli
mov
push
cwtl
jns
push
test
mov
lods
sbb
movups
rclb
dec
pushf
or
ds
lods
dec
cld
cmp
mov
xlat
cmp
lock
iret
cmp
push
lahf
xchg
pop
loop
adc
xor
fsts
push
clc
pop
adcb
adc
rorl
pusha
ds
repnz
ljmp
cmpsb
les
test
repz
ret
sarl
pop
pop
pusha
mov
lods
sub
or
in
or
rorl
fstpl
sbb
idivb
mov
or
loop
dec
in
mov
inc
rclb
push
shll
add
je
cld
mov
out
aad
push
pop
pop
or
test
inc
cmpl
cli
je
xchg
jns
nop
pushf
out
stos
mov
out
jecxz
and
int3
addb
mov
mov
and
mov
pusha
add
ret
inc
cmp
mov
rclb
insl
push
adc
add
loope
sub
and
mov
jmp
movups
loopne
out
mov
adc
jmp
sub
sahf
add
imul
xchg
cmp
cmpsb
add
dec
aaa
in
call
loope
out
dec
dec
or
dec
jns
mov
cli
imul
ret
call
loopne
bnd
mov
ljmp
icebp
xchg
adc
cmc
jg
ror
in
pushf
sbb
adc
inc
mov
adc
dec
repz
loope
pop
nop
jg
jo
das
fldenv
jecxz
lcall
loop
xor
shrl
sbb
clc
mov
or
stc
mov
call
pop
cmp
sbb
jle
dec
mov
sub
adc
and
cmc
into
fldl
sbb
mov
dec
sub
jnp
add
sub
push
xor
aas
cmp
cwtl
inc
cmp
dec
push
add
cwtl
fisttps
cmp
aaa
xor
xor
mov
xor
jno
lock
adc
insl
cmc
inc
inc
shll
shlb
shl
cmp
pop
and
mov
aad
insl
push
adc
or
cmp
cmp
lods
xor
fs
and
adc
in
lods
add
call
xor
xlat
xor
fbstp
clc
rclb
inc
ljmp
lret
outsl
xor
fimuls
je
pop
add
sbb
lret
pop
punpcklbw
jbe
inc
rorl
out
std
xor
mov
outsb
jo
mov
mov
lret
xor
cli
xor
jle
sub
shr
loop
jb
data16
in
stos
add
push
cli
daa
mov
mov
cmp
cmp
sbb
test
out
aam
jl
mov
ljmp
add
sti
mov
dec
out
in
or
inc
out
sbb
push
cmp
aam
ljmp
mov
sbb
cltd
pop
push
imul
pop
in
sbb
push
jl
pop
xchg
loopne
into
sub
mov
neg
cmp
push
inc
push
mov
and
nop
out
gs
lods
loopne
or
std
loope
mov
sub
sub
pop
cmp
adc
or
pop
cltd
or
sahf
iret
cmp
ljmp
inc
jecxz
xchg
inc
push
or
add
and
stc
cmpsb
shll
sub
stos
adc
push
add
xor
or
add
xor
pushf
jg
or
mov
ret
pop
pop
gs
dec
inc
pop
jne
xor
dec
mov
cli
scas
fsubrl
int3
or
push
xlat
push
fbld
pop
dec
jbe
popa
cld
aaa
stc
push
push
roll
dec
popf
loope
int
subl
test
arpl
sub
pop
cmp
xorl
jle
outsl
jmp
les
xchg
dec
lock
sub
inc
jmp
sbb
cs
adc
add
jmp
pop
jl
cmp
mov
push
in
jmp
xor
mov
push
imul
and
dec
std
jb
int3
xor
sbb
addl
sub
sbbb
rcl
sub
sub
pop
pop
rolb
roll
je
and
inc
pop
out
and
xor
fisubl
cmp
and
popf
mov
pop
aam
add
add
add
aaa
rorb
adc
nop
sbb
jne
push
xor
repnz
jo
or
and
jecxz
arpl
add
iret
roll
shl
add
pop
xchg
cwtl
add
stos
adc
ja
test
jp
movl
inc
dec
add
movl
lock
outsl
or
mov
fdivrl
xor
and
mov
and
sub
sbb
mov
repnz
and
push
decl
insl
xchg
mov
add
pop
push
cmp
jb
pop
add
adc
daa
movb
fnstsw
or
pop
sarb
jbe
pop
out
xor
clc
add
cmp
mov
mov
push
sbb
shl
push
sbb
fimuls
adc
pop
aam
lret
push
cmpsb
add
push
imul
pop
mov
sub
ja
pushf
pop
daa
push
push
and
or
adc
cmovl
jns
sbb
lret
pop
add
stos
ss
ljmp
rep
jl
push
add
sub
das
subb
popa
js
inc
loop
lea
inc
inc
xor
into
cmp
push
mov
jae
incl
jbe
stos
js
add
mov
sub
cmp
mov
rorb
ret
mov
adc
add
jmp
fdivs
lea
inc
nop
fadds
fcmovne
pop
jne
or
cmc
jae
jg
xor
mov
or
lret
jb
dec
adc
xchg
fsubl
pusha
sbb
lods
mov
mov
pop
fstpl
call
test
outsl
outsb
rcll
jo
xchg
jle
adc
rcll
add
xor
mov
lock
outsl
pusha
mov
movl
sub
dec
push
pusha
inc
fdivrl
xchg
nop
mov
add
push
cmp
xchg
fldt
pop
dec
pop
cmp
in
into
xor
push
push
test
lods
scas
add
or
call
mov
and
and
sbb
jecxz
cs
mov
mov
orl
pop
mov
shr
inc
insl
or
xchg
mov
fiaddl
xor
cmp
jae
xor
push
sbb
ss
jbe
pop
or
push
mov
mov
hlt
ucomiss
bound
mov
aad
pusha
pop
xor
jo
cmp
insb
mov
cs
jmp
push
mov
and
add
lods
xchg
icebp
add
add
pop
add
dec
mulb
cs
pop
jle
jnp
movsb
call
inc
mov
scas
in
sbb
decb
inc
cmp
mov
xor
add
fbstp
in
insl
test
add
push
jne
and
dec
fcompl
cmpsb
or
and
in
aas
shlb
imul
xor
xor
sarb
mov
and
and
inc
inc
add
xchg
movsl
bswap
lock
mov
test
xor
outsb
xchg
loop
sbb
jl
push
mov
jg
movsl
sub
ljmp
adc
dec
inc
je
ss
mov
adc
sub
mov
mov
push
cwtl
sub
pop
push
aaa
in
decb
mov
stos
xor
add
repnz
push
add
loopne
test
fbld
stc
lock
pop
sbb
mov
ja
fs
lods
jbe
add
or
in
mov
loope
lret
call
add
jle
inc
push
or
dec
je
mov
in
sub
xchg
add
push
xor
mov
dec
xor
loopne
flds
push
loopne
mov
addr16
neg
add
pop
imul
ficompl
lods
test
loopne
sbb
lret
sti
add
out
pop
rclb
or
adc
pop
cwtl
ret
jae
adc
inc
xchg
or
sbb
mov
ss
sbb
and
in
push
lods
or
shr
mov
filds
mov
dec
data16
aam
and
xchg
loope
dec
test
pavgw
add
loop
push
cmp
data16
and
xor
orb
cmc
rcl
jecxz
int3
mov
test
mov
ss
fiaddl
xor
push
mov
mov
jp
sub
xor
push
add
sbb
imul
mov
jne
mov
pop
je
loopne
sbb
in
inc
mov
ret
adc
cli
xor
xchg
inc
sbb
rcl
ss
mov
adc
dec
addl
dec
std
inc
subl
mov
dec
js
test
scas
pop
cmp
xor
stos
sub
dec
and
push
nop
add
lret
push
push
in
ss
shl
lods
cmp
inc
push
aam
es
enter
lea
jle
clc
pusha
subl
fcomps
or
mov
sub
test
jne
js
dec
sti
push
cmp
mov
mov
in
mov
or
rcll
lret
aad
adc
xchg
or
stc
inc
sahf
xchg
dec
adc
mov
jmp
stos
add
rcrb
push
add
lea
mov
pop
mov
int3
inc
inc
mov
mov
mov
jg
mov
or
adc
mov
sub
inc
add
dec
jne
push
pop
add
mov
push
into
addr16
je
sbb
pop
outsl
or
movsl
add
or
sarb
push
nop
add
adc
popa
pusha
pop
inc
mov
sub
rol
movups
cld
test
ja
ret
clc
push
adc
inc
jle
push
imul
shld
mov
insl
test
dec
fcomip
mov
pusha
pop
push
adc
inc
xchg
inc
cmp
add
dec
mov
inc
mov
test
pop
mov
cwtl
enter
das
aam
or
pop
jns
mov
add
loopne
mov
dec
add
mov
add
adc
das
push
push
cltd
sbb
jbe
pop
sbb
or
or
mov
sbb
mov
das
or
or
nop
xchg
or
movsb
nop
xchg
or
push
loopne
jbe
xor
das
and
xchg
pop
adc
das
in
shrb
adc
and
pop
add
push
xor
adc
push
and
sbb
mov
add
sbb
pop
adc
fcmovu
sub
roll
cmp
aad
sti
daa
adc
and
fldl
push
push
mov
pop
shrb
fisubrs
and
xchg
mov
push
les
repnz
dec
mov
xchg
imull
push
xchg
dec
cs
mov
lock
xchg
jl
and
cmp
scas
jmp
in
inc
pop
inc
jnp
jns
dec
inc
inc
push
fisubs
aas
ss
jns
and
push
js
jnp
adc
add
push
in
pop
add
add
mov
and
jo
adc
mov
xchg
xor
push
or
mov
add
or
jns
aam
loope
lret
sbb
and
mov
cmp
pop
cmp
xor
sbb
in
mov
jge
pop
fadds
push
inc
mov
pop
or
mov
aaa
mov
add
push
push
adc
iret
mov
mov
movsb
xchg
cmp
dec
adc
mov
sub
push
pop
divb
adc
pop
sti
sbb
cmp
push
inc
sbb
push
mov
inc
or
xchg
adc
push
mov
sbb
jbe
inc
sub
testb
pop
add
imul
es
dec
xchg
outsl
mov
out
sbb
cmp
inc
mov
pop
inc
aaa
and
dec
cmpsl
shlb
ljmp
pop
shll
lock
dec
sbb
adc
push
test
ljmp
test
push
in
xchg
xor
pushf
inc
pushf
aaa
lods
imul
xor
dec
loopne
icebp
jne
cmp
les
mov
adc
xlat
push
std
adc
xor
or
or
mov
xchg
mov
ss
gs
test
fildl
push
jb
loope
jg
and
mov
js
push
add
or
adc
add
push
and
cli
aam
sbb
sahf
dec
incb
add
enter
mov
xchg
cwtl
push
dec
sub
pop
inc
push
lahf
add
mov
pop
push
adc
adc
xchg
dec
inc
movsl
cld
fistl
or
xor
adc
dec
xchg
mov
inc
lahf
enter
clc
subl
enter
pop
push
add
add
and
cmp
dec
les
ffreep
add
push
push
pop
test
push
aas
dec
add
mov
dec
xchg
or
lea
jl
adcb
jns
push
ljmp
stos
mov
add
adc
mov
nop
popa
or
adc
and
mov
leave
ds
or
pushf
sbb
add
cmp
sbb
inc
pop
sbb
sbb
add
inc
push
icebp
aas
sbb
rcl
xchg
push
adc
inc
push
cmp
je
pop
and
inc
jmp
mov
inc
sub
bound
cli
push
push
cmp
push
push
and
push
lods
test
iret
lds
cld
add
es
push
and
cld
adc
rclb
xchg
inc
dec
mov
hlt
fcmovnb
enter
push
dec
and
jne
add
lock
inc
in
dec
fisttpll
fisttpll
add
icebp
addb
fwait
add
mov
inc
ret
imul
inc
enter
cs
dec
int3
sub
inc
or
xchg
rolb
add
fs
sub
cmp
shrb
jns
cmpsl
test
push
lret
mov
push
fimuls
fisttpll
add
test
pop
js
andl
push
das
push
push
cmp
inc
xchg
push
arpl
mov
lea
testb
call
les
pandn
lock
je
xor
sub
jl
out
jno
and
popa
dec
insl
repnz
pop
sbb
inc
ret
or
adc
push
jb
push
jb
orl
or
sqrtps
sbb
aaa
mov
mov
movsb
mov
add
sbb
cmp
pusha
or
push
sub
and
test
inc
pop
sub
xchg
movb
inc
rcll
jo
xor
roll
pop
and
dec
inc
incl
inc
adc
inc
adc
mov
loope
bound
mov
mov
push
and
xchg
fdivl
subl
xor
add
addb
xchg
mov
push
push
push
mov
icebp
inc
cmp
ds
cmp
nop
adc
andl
outsl
pop
mov
mov
pop
push
jb
sub
jge
jge
push
jbe
add
fucomip
ss
dec
add
push
and
popa
pop
nop
inc
cli
or
xchg
sub
pop
push
push
test
and
add
push
sub
lods
dec
ret
adc
orb
fcoms
rorb
sbbb
ret
stos
loope
xor
xchg
out
mov
cmp
dec
int3
cltd
fisttpl
loopne
into
sub
add
shrl
nop
mov
sub
scas
adc
pop
push
int3
jno
lret
add
xor
and
pop
arpl
xor
mov
mov
movsb
pop
xchg
or
scas
bound
push
cmp
pop
or
push
xor
adc
xchg
ficoml
test
xor
push
dec
mov
add
scas
xchg
push
and
dec
insl
add
push
push
outsb
call
sub
insl
cmp
mov
pusha
leave
push
dec
mov
push
jle
jle
mov
xlat
and
jmp
mov
aaa
mov
pop
fidivrs
inc
shlb
dec
or
push
int
je
dec
or
arpl
inc
mov
fisttps
or
pop
cmp
sub
add
aaa
xchg
mov
jle
enter
and
xchg
add
pusha
and
and
ss
nop
sbb
pop
push
sbb
xchg
imul
jmp
push
xor
push
xor
daa
lods
xchg
pop
arpl
cltd
adc
mov
adc
decl
push
daa
sidtl
ret
fsub
and
js
inc
cmp
pop
pop
or
in
loopne
jl
rorb
adc
add
ds
pop
or
xchg
cmp
inc
in
ds
test
pop
fmull
lods
ret
sbb
inc
jns
xchg
cmp
mov
add
jae
sub
add
mov
pushf
nop
jns
sbb
data16
fadd
adc
add
push
sub
sub
sbb
sbb
nop
lea
push
out
xchg
push
pushl
pop
push
pop
push
xchg
out
sahf
jae
pop
lods
push
mov
mov
repnz
or
dec
fidivs
das
es
dec
inc
cs
mov
mov
fstpt
mov
rcrl
pusha
push
push
or
out
inc
push
fistpl
mov
movsb
sub
mov
adc
fdivl
mov
sub
cmp
out
jo
aaa
cmp
and
sub
jno
cmp
nop
fisttpl
or
or
xchg
add
sub
std
add
pop
add
mov
sbb
xor
fsubl
adc
in
xchg
pop
sbb
mov
push
push
mov
add
test
dec
inc
adc
pushf
dec
and
inc
push
push
fidivrl
outsl
adc
jmp
add
xor
adc
push
and
into
loopne
and
lods
rolb
cmp
movsl
dec
and
sub
xor
mov
mov
bound
faddl
pop
stos
es
ret
sub
cmp
adc
xor
inc
pop
loop
and
inc
je
push
push
push
rorb
or
dec
or
sti
data16
push
insl
add
cmp
mov
jg
push
mov
pop
sbb
hlt
jnp
pop
dec
pop
ret
movd
or
adc
mov
pop
test
or
inc
pop
repnz
adcb
sub
or
or
jbe
adc
jnp
imul
xchg
xchg
sbb
and
sbb
adc
mov
or
cmp
and
add
je
js
or
pop
stc
addb
or
cwtl
adcb
push
cli
adc
inc
loope
pop
sub
add
cs
xor
rolb
inc
push
ret
mov
mov
pushw
movsl
or
divb
in
ficomps
add
inc
pop
push
fnstenv
pop
aaa
mov
add
and
jge
outsl
jg
mov
movl
insl
adc
pop
adc
pop
pusha
and
mov
lcall
insb
sub
sbb
dec
and
adcb
bound
icebp
xchg
fsub
enter
or
pop
in
xchg
jecxz
cmp
fdivrs
ret
fcompl
cld
lcall
dec
push
add
dec
sbbl
mov
shlb
cmpsl
sbb
nop
and
in
nop
inc
insb
mov
gs
or
les
loope
flds
or
pop
jne
enter
shr
push
jne
scas
mov
popf
xor
lahf
pop
sub
sbb
je
mov
sbb
and
cmc
lds
mov
out
enter
jnp
sub
int
movsl
add
inc
inc
sbb
iret
stos
fisubrs
je
int
cmp
or
mov
popa
adc
push
je
pop
mov
inc
mov
dec
lcall
out
pop
pop
pusha
add
mov
rolb
lea
idivb
pop
pop
jo
jle
push
sbb
insb
popa
fimull
dec
decl
fcoml
pusha
ret
dec
mov
mov
push
je
bswap
and
or
insb
shlb
sub
mov
aaa
push
xchg
or
gs
testb
mov
and
pop
or
add
jg
repnz
adc
and
into
or
movsb
out
test
mov
movsb
pop
out
shll
fistl
repz
jge
xor
mov
jnp
aad
adc
add
add
lods
pop
push
add
in
fidivrs
xchg
xor
js
sbb
aam
sub
xor
ret
jl
add
xchg
add
shlb
sbb
mov
mov
cmp
or
xor
iret
xor
sub
add
sarl
jl
cmp
add
ficoms
lds
mov
push
rsqrtps
rolb
adc
or
popa
test
in
cmp
fsub
iret
gs
xchg
or
in
and
or
add
push
or
inc
add
or
adc
add
shlb
sub
inc
mov
pop
imul
lds
adc
out
pop
or
insl
cld
xchg
fidivrs
jnp
push
inc
in
add
pop
xchg
xchg
jmp
cmpsl
inc
rclb
inc
xor
movb
aaa
xchg
fdivs
and
ret
xor
fidivs
mov
ret
push
dec
in
push
rol
pop
mov
and
jmp
push
in
icebp
neg
fimuls
fdivs
jg
add
out
mov
add
ret
sahf
mov
lcall
in
ffreep
sbb
bound
cmp
arpl
pop
sub
sub
xor
or
and
mov
or
mov
and
inc
sbb
and
fmuls
inc
push
loopne
push
adc
xor
add
add
add
or
add
sbb
pusha
jns
add
icebp
or
imul
add
mov
or
add
enter
and
jb
sub
es
shl
dec
adc
jle
orb
pop
neg
fldenv
ljmp
xchg
and
xlat
je
pop
or
arpl
add
test
test
xor
inc
std
jnp
mov
lret
xor
pop
sbb
jb
sbb
push
idivb
or
std
fs
push
mov
mov
and
js
rorb
cmp
adc
mov
mov
test
subl
lock
add
pushf
aas
lods
or
xchg
movsb
or
xor
outsb
not
mov
sub
push
fs
ja
sbbb
scas
cmp
add
stos
test
js
inc
decl
cmp
ficompl
lea
loop
jge
and
nop
mov
lcall
xor
add
cmp
sub
mov
lea
adc
add
mov
ret
sub
es
pop
jno
enter
inc
ds
inc
outsb
int3
push
js
xchg
aam
fs
xor
fisttpll
pop
sub
push
push
fs
test
jge
call
mov
sbb
sub
add
mov
xor
cmpsl
mov
in
or
cmp
dec
adc
mov
and
stc
rorb
addb
and
fcompl
mov
daa
adc
loope,pn
sub
test
out
push
sbbb
push
cmp
xchg
leave
fcompl
xor
clc
sbb
xorl
into
xor
mov
insl
dec
inc
inc
lea
addr16
movsb
pop
pop
cmp
pop
pop
pop
adc
test
lock
push
add
mov
dec
push
push
cmp
loopne
xor
xchg
xchg
xchg
xor
add
inc
orb
and
pop
mov
sbbl
xchg
push
ret
pop
inc
add
outsl
mov
sub
jne
sub
les
cmp
mov
xor
aaa
push
add
imul
lds
adc
bound
push
jnp
fs
add
mov
test
sbb
shlb
push
inc
jle
add
mov
push
xchg
inc
inc
mov
or
test
jnp,pn
xor
dec
add
or
data16
xor
adc
pusha
loopne
jne
nop
lods
adc
add
push
pop
or
push
push
mov
icebp
xchg
mov
push
push
sub
xor
push
les
out
xchg
cmpsl
aad
pop
add
xchg
lods
push
test
push
fiadds
sbb
inc
push
hlt
and
insl
pop
cmpsl
nop
mov
push
add
cmpsl
arpl
add
and
and
add
pop
jge
test
add
shl
and
sti
sbb
adc
push
or
push
inc
xchg
lds
cwtl
jg
fdivl
lret
mov
push
test
adc
jl
xchg
or
add
sbb
adc
jne
fisttpll
aas
xor
fcoml
xor
rcrl
pop
inc
push
repz
push
cmp
push
push
push
inc
js
dec
dec
add
push
nop
js
imul
sbb
imul
inc
stos
mov
rcrb
stos
adc
movsl
pusha
add
add
or
pop
jmpw
dec
mov
push
or
pusha
fistpl
and
orb
ret
sbb
sub
xchg
mov
notb
daa
xchg
jl
fbstp
inc
and
adc
adc
cli
or
negb
pop
sub
in
inc
xor
mov
add
gs
ljmp
xor
inc
dec
add
lock
inc
pushf
xor
push
mov
sub
inc
or
test
add
jl
jmp
sub
inc
pusha
mov
je
fs
arpl
mov
lds
inc
enter
mov
mov
lret
add
rorb
aas
add
mov
pop
mov
in
inc
jb
insb
or
sbb
fcmovb
dec
shrb
enter
insb
mov
imul
lea
adc
into
pop
pop
popf
cvtdq2ps
xor
addb
xlat
xor
add
push
dec
js
scas
fldenv
lret
hlt
movsb
push
push
insb
sbb
das
cld
jg
in
cli
sets
dec
and
std
test
sbb
sbb
ret
dec
dec
jnp
popa
sbb
into
insb
or
dec
sbb
pop
divl
mov
push
or
jge
imul
and
jmp
icebp
hlt
hlt
jmp
adc
je
and
push
pop
inc
fists
adc
sbb
outsb
jl
jp
ss
inc
inc
ljmp
sbb
pop
adc
or
aas
pop
adc
loop
xor
push
imul
inc
adc
adc
cmp
adc
subb
and
add
mov
add
xor
negl
out
add
repz
sbb
add
or
adc
cmc
jno
push
imulb
test
popf
adc
and
sbb
mov
mov
pusha
xchg
mov
mov
pop
shll
sbb
test
cli
add
rolb
push
imul
adc
nop
pop
leave
outsb
pushf
mov
mov
pop
inc
dec
leave
dec
movb
clc
xchg
leave
js
inc
pop
pop
sbb
ret
jg
mov
ret
mov
add
jle
xchg
rclb
shrb
nop
pop
add
test
arpl
aam
sub
push
jns
test
outsl
add
add
add
pop
or
iret
pop
movsl
xchg
test
push
mov
movsb
xchg
movsb
inc
in
ljmp
iret
lret
iret
cmovo
pop
shrb
cmp
fsubp
popf
lock
push
pusha
sbb
repnz
adc
pop
pushf
push
pusha
and
rolb
aam
lret
ret
xchg
sbb
outsl
push
inc
mov
pop
push
hlt
jmp
xor
or
pop
adc
add
pop
adc
xchg
ss
xor
and
out
pop
mov
call
mov
jo
mov
das
out
mov
sbb
inc
cmc
add
adc
outsl
adc
sub
lea
mov
pop
sbb
fs
lods
mov
cmp
pop
push
test
mov
ret
dec
out
lods
sub
xor
pusha
xchg
sub
adc
adcb
xchg
add
and
push
cld
lret
lret
xchg
push
shrb
lret
aad
mov
and
sub
push
jle
mov
add
dec
sub
pop
movsb
daa
mov
xor
xor
jmp
or
ds
and
push
movsl
fs
lea
lea
rorb
push
push
leave
and
or
and
test
xchg
lret
ss
push
add
arpl
mov
sbb
cmp
ret
push
adc
fwait
pop
repnz
add
push
movsb
push
rclb
pop
mov
shlb
es
jo
cmovb
lods
ja
pop
xchg
out
daa
mov
push
adc
cmc
arpl
and
pushf
pop
ds
stos
insb
mov
add
xchg
and
nop
inc
sub
dec
rcr
test
int
cltd
jb,pt
jae
sub
sub
lret
inc
sub
dec
inc
add
and
push
pop
push
shlb
sbb
add
call
movsl
sbb
cmpl
mov
mov
out
inc
push
lea
push
lret
push
push
loope
mov
jo
push
cmp
int
sub
popa
mov
int
sbb
dec
pop
mov
and
inc
and
lods
jecxz
cmp
addl
roll
and
or
or
arpl
fsubr
in
sub
mov
pusha
inc
cs
xchg
xchg
divl
xchg
mov
pop
clc
loopne
push
call
lods
or
or
xor
fwait
push
push
int
push
mov
mov
jo
jl
ljmp
and
incl
lcall
sbbl
ds
or
or
rcll
and
xor
push
lea
pop
add
je
loope
pop
lcall
scas
push
jae
fildl
lea
daa
cltd
xchg
and
sbb
and
push
mov
push
push
sti
pop
fbstp
jge
pop
sbb
dec
cmp
add
mov
xchg
xchg
xchg
fs
mov
adc
inc
inc
mov
scas
add
inc
add
lea
cmp
adc
mov
sub
sub
sbb
fisubrs
jl
out
sahf
inc
add
push
into
gs
and
adc
push
in
test
sbb
add
xchg
add
adc
lock
loope
data16
and
and
scas
dec
mov
lahf
ret
mov
inc
adc
fbstp
jmp
dec
cmp
sbb
and
rorb
sub
nop
pop
jle
sub
jle
adc
jae
dec
or
insl
and
xchg
pushf
test
add
xchg
test
ljmp
pop
add
add
sub
mov
mov
cmpsb
inc
std
mov
add
mov
call
sub
mov
sub
inc
out
iret
or
insl
aas
push
push
sbb
dec
lods
or
xor
jno
test
dec
xor
fldt
or
xor
dec
push
pop
jbe
push
call
mov
inc
dec
jne
test
adc
cwtl
adc
aaa
sub
sahf
pop
cmp
adc
xchg
movsb
push
jge
and
dec
dec
xor
lods
mov
sub
jmp
sbb
mov
sbb
mov
loopne
jb
cmc
jle
inc
or
lahf
cwtl
sti
dec
add
push
jle
mov
push
fs
nop
or
push
stc
sahf
test
daa
mov
mov
dec
cmp
insb
mov
repnz
cwtl
mov
mov
aas
lds
out
jg
and
bound
mov
mov
mov
sbb
pmulhuw
pop
jb
aad
sbb
fimull
imul
repnz
addb
aas
mov
push
stos
sub
push
out
cmp
inc
and
xchg
sbb
loopne
test
int
mov
or
lea
and
add
add
pushf
lea
nop
scas
jecxz
or
push
test
lret
addb
lea
pop
or
inc
xor
insl
add
add
pop
mov
aaa
dec
or
ss
rcll
adc
xor
enter
addl
rcrb
cmp
xor
in
adc
dec
mov
movsb
aam
test
and
mov
push
sbb
testb
and
loop
jo
or
out
or
push
fmull
xchg
dec
pop
inc
adc
xchg
push
mov
push
ja
push
std
dec
xor
lock
sbb
sbb
sub
cmp
pop
lods
lcall
mov
arpl
fldl
xor
mov
cmp
or
movsl
pop
fidivrl
inc
sti
add
fnstsw
jbe
pop
shll
mov
sbb
sbb
aam
push
insl
lock
cmp
push
cmp
mov
add
push
dec
leave
hlt
xorb
lods
scas
cmc
js
mov
push
and
es
dec
fwait
xor
adc
inc
rolb
enter
push
sub
or
rcrl
out
pop
mov
out
sar
and
mov
adc
sub
mov
adc
cld
dec
pop
push
lock
push
jmp
add
dec
inc
shr
sbb
pop
pop
inc
dec
adc
imul
das
mov
jmp
insb
fwait
lock
or
sbb
ret
jno
mov
cmp
xchg
push
pop
xchg
push
cmp
xchg
add
adc
sbbl
mov
pop
jg
mov
fcoms
adc
jg
test
push
or
push
pop
cmp
and
nop
popa
pop
mov
adc
into
mov
aam
movsb
cmp
add
push
test
incb
add
mov
inc
js
or
lods
or
es
cmp
inc
inc
push
push
fists
xchg
pop
sarb
mov
inc
and
adc
pusha
push
into
mov
mov
pop
cld
lods
jo
push
test
inc
jo
push
orl
pop
ret
arpl
add
push
dec
sub
or
or
jge
or
pop
cmp
inc
cltd
into
pop
push
add
icebp
pop
mov
cmpl
sub
add
loope
gs
push
lea
mov
add
dec
mov
sub
jge
aas
push
and
cmpsb
cli
lods
push
rcl
ljmp
js
or
sarb
std
pop
std
outsb
inc
arpl
and
insb
stos
std
sbb
push
inc
jge
inc
inc
es
lods
xchg
xor
push
cmp
test
jl
push
dec
mov
enter
les
das
cwtl
sub
dec
repz
mov
sub
or
inc
xor
outsb
inc
pop
int3
jns
push
xchg
inc
leave
add
mov
xor
pop
insb
movsl
jb
or
pop
adc
push
xorl
loope
xchg
movsb
mov
mov
cmpsb
inc
push
lea
adc
push
roll
push
stos
dec
or
xor
loopne
xchg
adc
sbb
mov
mov
out
and
jg
mov
dec
push
insb
mov
sbb
inc
fs
push
or
push
jmp
test
sub
sub
adc
add
repz
jl
cmp
and
jmp
lods
add
jl
shrl
mov
xor
xor
push
pop
push
mov
stos
shll
mov
mov
rorw
add
rorl
aas
icebp
sbb
add
push
bound
dec
mov
mov
test
adc
lahf
cmpsb
dec
ret
movsb
xor
inc
jne
movsl
pusha
movsb
xchg
rorb
xor
movsb
lahf
dec
push
xchg
nop
dec
dec
add
shrb
lret
jmp
test
jmp
or
mov
xchg
push
mov
push
pop
test
mov
mov
aam
cmp
or
jo
dec
or
cmp
jp
sub
mov
add
daa
nop
inc
add
addb
aaa
mov
dec
cmp
xchg
and
xchg
in
loopne
lea
adc
mov
mov
and
inc
xchg
push
mov
and
mov
xor
and
inc
out
loopne
xor
loope
add
aad
or
adc
mov
add
cld
add
sbb
lock
cs
lea
jle
fcmovb
shlb
push
sbb
or
push
mov
imul
loop
fisttps
test
dec
loopne
mov
add
cmp
dec
xchg
and
ret
sub
or
pop
pusha
mov
mov
inc
cmp
push
sub
popa
adc
js
lock
pusha
mov
mov
push
in
imul
mov
ret
loopne
vunpcklps
sti
add
arpl
xlat
pop
or
sbb
aaa
or
rclb
movsb
sbb
ds
fcoms
and
and
and
lods
adc
fnstenv
mov
adc
int
mov
xor
and
cmp
movups
push
stos
xor
jb
aad
cmp
divl
push
jnp
pop
adc
sbb
pop
testb
or
daa
adcl
mov
enter
stc
cmp
js
lahf
jle
dec
push
jl
push
gs
add
mov
pop
mov
jo
xchg
cmp
movsb
daa
lods
xor
or
repz
jo
fmuls
ljmp
inc
xor
push
into
jmp
push
and
ret
adc
push
dec
mov
mov
inc
popf
pop
xor
pushf
sbb
test
mov
cmp
inc
sbb
fxtract
jl
add
push
push
cmp
pop
je
subl
adc
clc
mov
push
outsl
fwait
pop
loopne
out
stos
mov
or
push
mov
sub
jnp
or
addr16
mov
jecxz
gs
jmp
cmpsl
sbbl
ja
pop
adc
xor
xchg
push
push
inc
cs
jbe
mov
mov
andb
jo
fadds
mov
cmp
insl
dec
adc
push
lock
sbb
ss
push
push
xor
lods
adcb
inc
xlat
and
imull
xchg
roll
nop
outsl
or
sub
outsb
jo
sub
mov
or
push
mov
insl
adc
insb
push
outsl
cmp
push
filds
dec
xchg
jno
nop
pop
and
cmp
xor
je
inc
push
arpl
adc
movsb
adc
xchg
dec
jmp
add
lea
mul
mov
xchg
jne
js
cltd
add
es
pusha
inc
cmp
push
pop
xor
adc
inc
cmp
mov
inc
jbe
ss
adc
fdivr
jbe
mov
insb
inc
push
inc
test
movsl
popa
adc
adc
add
pop
jo
pop
shl
call
les
sbb
or
inc
add
cmpb
mov
mov
leave
rorb
push
sbbb
cmp
cmc
or
or
aas
jmp
lods
mov
mov
push
shlb
hlt
push
push
shl
lock
sub
fnclex
insb
pop
mov
xchg
inc
aam
or
mov
inc
sbb
push
mov
and
push
mov
std
mov
sbb
mov
pop
dec
or
jmp
jo
or
mov
or
in
or
mov
adc
shl
or
shl
fimull
push
or
test
test
or
pop
mov
or
push
fnstenv
jg
pop
repnz
cmp
push
ss
lds
es
xorb
adc
shlb
int
sbb
rcrl
push
filds
push
fdivs
or
adc
adc
lds
mov
sub
push
pop
pop
and
in
fcmovbe
sub
push
clc
loope
or
mov
rorl
int3
jp
pop
adc
dec
std
or
mov
in
roll
pop
fldl
out
rcrb
pop
inc
cmp
loopw
loop
sbb
rol
add
push
mov
pusha
addr16
adc
inc
aaa
call
scas
lea
sahf
popl
add
inc
es
push
jns
inc
push
lcall
mov
jo
sbb
adc
in
push
dec
xchg
xchg
or
push
daa
dec
out
push
daa
adc
jno
xor
cmp
fs
rcl
add
jno
ds
add
xor
loopne
lods
rorb
lahf
sbb
sbb
adc
xchg
jno
lahf
bsf
jmp
addl
dec
movsb
shll
jo
in
out
inc
cmp
clc
cmp
add
and
xor
sarb
push
adc
add
mov
subb
push
xchg
cmp
pop
pop
push
or
data16
mov
push
pusha
xchg
mov
or
or
aaa
inc
pop
lock
cmpsl
cmc
sbb
call
mov
dec
test
adc
inc
adc
filds
jae
pop
ret
jmp
lret
inc
je
cmp
push
arpl
loopne
add
je
mov
cmpsl
mov
inc
jae
push
lds
js
xchg
sbbl
sarl
imul
lock
inc
fmull
mov
push
hlt
adc
push
mov
xor
sub
add
aaa
mov
lock
xor
cld
jnp
adc
add
add
rcr
xchg
adc
sub
repz
stos
je
popl
mov
push
cmp
mov
dec
add
add
pop
xor
mov
add
add
outsl
test
pop
and
and
inc
and
adc
add
sub
fiadds
pop
pop
or
mov
and
cmp
jae
and
cmp
mov
jno
and
cltd
xor
mov
dec
lods
push
push
aas
or
inc
mov
pop
adcl
cmpsl
and
jno
test
xchg
sub
daa
cmc
push
sub
mov
sbb
sbb
inc
jne
sub
scas
and
xchg
add
stos
mov
pusha
sub
js
sub
or
xor
pop
mov
jmp
dec
dec
dec
dec
lret
pusha
pop
adc
inc
imul
adc
xchg
sbb
mov
inc
jmp
dec
lret
hlt
cmpsb
sbb
xor
sub
stos
jae
clc
mov
sbb
shlb
dec
andb
or
cmp
and
rclb
xor
neg
and
je
into
clc
push
sbb
or
xor
pop
cmpl
jo
and
inc
lahf
push
cld
insb
addr16
sbb
mov
sbb
shlb
pop
jno
aaa
inc
cltd
js
jle
and
xlat
cmp
push
and
push
icebp
or
out
mov
jp
cs
lods
or
push
rclb
sub
mov
stos
movsl
divb
call
push
mov
lcall
cmp
mov
xor
mov
mov
xor
pusha
cmp
push
push
mov
push
sbb
es
outsl
pop
rclb
pop
pusha
out
mov
lahf
jp
cmp
rorl
pop
push
mul
out
pop
jo
mov
fwait
xchg
dec
inc
sub
mov
int
int3
std
push
lods
mov
adc
int
mov
add
setns
dec
rol
jbe
test
adcl
xorl
ret
cmpsb
xor
call
xchg
push
jo
and
push
or
addr16
loopne
adc
sbb
andb
push
cwtl
pop
mov
rcrb
or
loopne
push
pop
jne
sub
mov
add
add
and
mov
mov
cmp
xlat
ja
push
mov
ja
repnz
push
jl
shll
push
inc
cmp
add
and
push
pop
xor
jne
pop
movsb
mov
and
add
xor
jle
cmp
adc
lock
sbb
and
out
fimull
push
mov
mov
imul
loopne
iret
add
xchg
xchg
ja
or
lock
add
adc
jo
xchg
pop
sub
dec
jnp
add
jl
mov
mov
mov
call
std
test
lods
in
xor
decl
pusha
or
daa
movl
push
adc
inc
push
sbb
add
lods
loopne
in
sbb
adcb
jmp
aad
lock
nop
sbb
xchg
add
jns
enter
jecxz
mov
adc
mov
add
cmp
inc
inc
cmc
add
or
cmpb
and
inc
ret
jnp
push
push
mov
sub
les
pop
ja
mov
enter
pop
popa
ja
scas
in
pop
jle
aam
inc
mov
xchg
adc
xor
xor
add
dec
add
test
out
pop
shl
push
ljmp
add
adc
mov
adc
push
js
sbb
pop
add
pop
aad
push
ss
pop
and
inc
adc
inc
inc
adc
div
mov
add
cmp
mov
or
mov
jns
es
jbe
adc
in
add
repz
mov
jbe
mov
cmp
jnp
add
inc
rcrb
add
add
push
jns
inc
xchg
mov
sar
mov
arpl
sbb
push
mov
insb
loopne
hlt
or
and
mov
and
shlb
add
add
jns
enter
push
or
gs
and
addr16
cmc
test
sarb
mov
dec
and
dec
loopne
ds
cmp
in
mov
xchg
and
cmpsl
and
pcmpeqw
loope
inc
sbb
push
popa
imull
iret
cmpsb
pop
les
jo
bound
and
call
adc
lea
lahf
sub
or
pop
dec
jnp
mov
jb
subb
add
test
adc
orb
dec
jb
fldl
mov
cld
mov
mov
imul
mov
cmp
adc
jl
or
push
inc
add
fisttps
adc
ficompl
orl
push
xchg
cmp
fmuls
dec
dec
jne
dec
sbb
dec
xor
cmp
push
test
pop
sbb
ds
inc
lea
mov
jecxz
xor
xchg
mov
cmp
xor
icebp
and
dec
pop
lods
testb
jg
fsubl
inc
sbb
add
fcomps
jle
sbbl
leave
cmpl
dec
pop
cmp
pusha
push
add
xchg
or
xchg
fiadds
loope
sbb
lea
add
xchg
iret
jle
out
jg
sarl
mov
stos
add
mov
mul
insl
and
mov
daa
sbb
mov
lcall
out
cmp
cmp
in
mov
in
sbb
sub
push
data16
jp,pn
popf
ret
dec
jnp
mov
add
or
xor
inc
in
xor
das
xchg
ljmp
or
sbb
lea
or
loop
adc
pop
xor
inc
ret
sub
push
rol
mov
popf
clc
xchg
orb
cmp
cmp
pop
jl
faddl
rolb
pop
out
xchg
data16
out
inc
inc
pusha
or
mov
push
cmp
adc
mov
pop
movsl
jg
cmp
stos
jo
pushf
xchg
mov
inc
pusha
pop
push
scas
xor
pop
mov
push
jl
test
dec
xlat
jg
lea
pop
dec
js
or
int
adc
lea
push
ret
subl
loopne
add
div
je
pop
stos
mov
cli
addr16
add
iret
mov
sub
imul
fs
mov
dec
add
rorl
das
dec
add
into
fld
test
add
mov
scas
cmp
push
or
ja
jmp
jae
xchg
dec
hlt
push
adc
cltd
mov
sub
call
push
mov
mov
insl
je
ret
mov
test
cmp
std
mov
inc
sbb
roll
shll
dec
push
mov
nop
mov
pop
add
mov
adc
mov
jl
jno
cld
inc
pop
ret
pop
mov
stos
loope
sbb
push
jg
dec
pusha
push
addl
push
add
pop
dec
fiaddl
addr16
aaa
inc
or
fdivrl
pop
inc
xor
shlb
push
add
xor
outsb
mov
imul
add
push
mov
inc
push
pop
mov
pop
jl
mov
adc
inc
nop
push
aam
roll
in
xchg
daa
inc
cmp
inc
push
pop
enter
add
add
inc
bound
push
and
ret
mov
push
shrb
iret
pop
adc
add
inc
inc
imul
sub
hlt
jmp
xlat
xchg
inc
or
mov
adc
mov
cmp
sbb
fidivrs
dec
adc
xchg
mov
cmp
adc
push
test
enter
inc
mov
ret
and
mov
sbb
das
adc
cltd
xor
add
xchg
sbb
inc
or
in
or
adc
or
sbb
int3
sbb
jp
mov
or
shrl
pop
mov
add
mov
sub
cwtl
push
repnz
inc
loopne
sub
aad
push
movsl
sbb
loopne
addb
add
call
rcrl
addb
outsb
adc
rcr
cmpsl
imul
inc
push
ret
ret
dec
pushf
jo
out
push
je
adc
pop
adc
sbb
or
jmp
jp
pop
pop
out
dec
shrb
add
cs
mov
enter
inc
sahf
rclb
push
jno
add
mov
std
inc
xor
lcall
inc
std
test
insb
adc
dec
sub
inc
cs
mov
aas
jg
clc
sbb
push
adc
push
outsl
jne
pop
bound
pop
rcrb
xor
push
inc
xlat
cmp
sbb
fisubl
mov
mov
adc
cmpb
int
cmp
movaps
ret
push
xor
das
push
push
mov
bound
aad
mov
ret
push
xor
in
in
pop
and
lock
mov
inc
xor
pop
push
mul
cmp
xchg
int
subb
mov
push
mov
mov
cmp
inc
add
pop
out
decb
movsb
xorl
fs
add
ljmp
jne
ret
push
cmp
jne
adc
arpl
adc
popf
adc
push
test
std
cmp
loop
mov
std
xchg
lock
push
push
jmp
add
jbe
xchg
dec
add
test
sahf
or
shrl
push
aam
and
pop
pusha
mov
or
jns
dec
cld
add
dec
enter
sub
es
dec
fists
inc
cs
xchg
push
testl
pop
add
push
je
das
inc
pop
insb
and
daa
je
add
mov
push
xorb
push
fimull
mov
dec
pushl
cli
cmp
cmp
repz
inc
dec
jl
cmp
inc
jno
mov
inc
push
shr
push
xor
push
adc
and
cmc
adc
add
or
or
or
mov
add
inc
rolb
adc
rolb
push
or
pop
push
je
mov
sbb
dec
sub
mov
mov
mov
cmpsb
scas
stos
mov
inc
lea
cmpsb
push
dec
std
adc
mov
add
sahf
sub
mov
aas
sbb
xchg
add
and
sub
push
add
jg
lcall
jmp
mov
in
add
xchg
data16
js
aaa
add
inc
ret
push
arpl
dec
add
push
sbb
cmp
pavgb
rorl
adc
lods
cmp
sbb
sbb
pusha
filds
inc
sbb
stos
sbb
adc
pop
lret
add
cld
daa
sbb
inc
and
mov
add
out
mov
adc
sbb
push
test
int3
rorl
pop
jp
add
dec
mov
call
ret
dec
fadds
sbb
stos
dec
and
in
mov
sbb
jp
push
idivb
popa
sbb
lods
popf
cld
ret
dec
pop
loopnew
dec
inc
inc
pop
shll
stos
add
mov
push
dec
add
mov
cli
and
loop
sbb
sub
mov
lods
insl
and
in
push
pop
push
ds
adc
dec
mov
xchg
push
sbbl
ss
xor
pop
or
add
xchg
aam
adc
add
dec
dec
aad
push
mov
pop
adc
add
test
es
inc
mov
jge
cmpsl
or
and
push
lret
or
mov
mov
inc
cmp
inc
and
psubsb
push
int3
add
dec
rcl
loope
push
inc
push
push
dec
adc
lea
push
and
add
cmp
and
rol
daa
pop
push
jb
mov
fnstenv
add
add
sbb
das
push
lahf
sub
jae
orl
sar
cmp
je
inc
inc
lretw
sbbl
xchg
repz
pop
movsb
push
les
inc
cs
lods
inc
sbb
mov
add
test
sub
outsl
cltd
add
pop
push
and
outsb
xchg
divb
nop
pop
test
xor
nop
inc
cli
enter
rorl
stc
lcall
pop
add
movsb
sbb
inc
pop
fcomps
notl
inc
inc
dec
cmpsb
lods
pop
mov
adc
shrl
icebp
jae
shlb
xchg
pop
fs
mov
xor
push
aas
push
mov
leave
fidivs
mov
inc
sub
xlat
sbb
pusha
sbb
add
fidivs
push
add
inc
xchg
push
outsl
pop
add
jnp
subl
mov
addr16
sbb
repnz
xor
fiadds
lret
cmpsb
sbb
and
push
mov
or
daa
mov
sub
sti
add
xchg
das
loopne
sbb
das
cmp
inc
cltd
xor
sbb
enter
xchg
push
xor
and
cmp
lods
or
mov
or
jg
gs
insl
test
jbe
pop
pop
mov
sti
jbe
pop
out
sub
orb
add
nop
imul
test
sbb
dec
dec
jl
or
mov
push
pop
fcomp
jmp
fadd
mov
inc
js
jbe
dec
push
adc
mov
sub
xchg
mov
pop
pop
ficoml
inc
clc
or
addb
rorl
add
ljmp
adc
add
or
scas
fisubrl
mov
pop
and
push
pop
xchg
fcoms
and
aad
jb
insb
or
or
fdivrs
mov
pusha
jle
nop
sbb
and
mov
fwait
xchg
cmp
xor
sti
sbb
into
out
lock
test
test
call
cmp
adc
cmp
aas
cli
or
je
orb
mov
mov
mov
adc
inc
and
add
push
lods
push
adc
scas
adc
dec
andb
bound
je
mov
dec
mov
push
jmp
push
lods
inc
fwait
std
jg
mov
push
push
jne
adc
mov
adc
bsr
fimull
ds
cmp
adc
nop
in
dec
mov
dec
cwtl
js
adcb
xchg
addr16
dec
cmp
sbb
sbbb
mov
inc
sarl
test
rcll
jecxz
movl
or
cmc
je
loope
aaa
pusha
xchg
fwait
push
push
sbbl
jnp
sbb
addb
je
inc
ret
sbbb
shlb
add
lret
xchg
scas
sbb
nop
mov
push
add
jmp
inc
mov
add
sub
xchg
mov
dec
cmp
divl
mov
jl
add
or
or
jmp
out
cmp
inc
mov
push
and
shll
mov
mov
xor
shl
adc
fists
jmp
xchg
or
jbe
inc
pop
out
pusha
aam
fisttpl
and
pusha
rolb
xor
push
cmp
pop
cmp
mov
inc
mov
dec
push
mov
pop
and
adc
enter
sbb
adc
or
pusha
sbb
push
dec
inc
or
pop
notl
or
call
sbb
adc
push
subb
imul
or
movsl
xchg
cmp
decb
inc
movsb
sub
add
jns
xchg
call
iret
cmp
mov
dec
das
sarl
adc
push
push
adc
add
mov
mov
clc
mov
dec
clc
xor
mov
xor
pop
ret
call
stc
dec
cld
shrl
cmp
push
push
inc
xchg
dec
xchg
jnp
xor
mov
push
out
jle
add
pushw
nop
jns
xchg
xchg
mov
or
lock
gs
mov
sbb
lock
scas
pop
mov
mov
inc
faddl
dec
idivb
add
jmp
or
lea
int3
push
push
testb
or
fs
push
dec
ret
lret
loop
pop
aas
or
inc
jmp
xor
push
cmp
and
add
lret
add
outsb
shlb
cwtl
cmp
or
sub
jae
call
inc
add
jmp
xchg
or
jmp
jecxz
lods
add
push
add
je
aad
aaa
addb
xchg
fdivrs
movsl
xchg
lret
fisttpl
mov
xchg
js
sbb
call
mov
jmp
ret
mov
bound
mov
sti
xor
push
rcrb
js
lock
add
jbe
or
push
push
or
and
out
shlb
jae
add
mov
inc
cmpsb
ds
inc
je
push
xchg
lock
sub
xor
mov
adc
or
ja
aas
pop
mov
xor
cmpb
push
repz
cltd
inc
add
jp
adc
adc
and
add
iret
insb
or
mov
xchg
push
pop
lahf
pop
or
ret
fs
push
cli
push
mov
mov
lock
dec
loope
enter
push
and
orl
inc
vmwrite
inc
dec
lea
mov
lcall
adc
les
mov
adc
push
mov
or
pop
pop
fidivrl
cmp
loop
jp
sbb
insb
or
lcall
add
add
push
add
imul
out
rol
cmp
jb
into
gs
imul
addr16
push
mov
lcall
ficoms
add
ret
dec
jne
cmp
jb
and
add
add
leave
pop
inc
lock
inc
and
mov
xor
dec
add
push
loopne
dec
and
pop
sbb
and
lahf
outsb
sti
add
ds
cmpsb
cmc
mov
arpl
pop
jno
jns
imul
lods
in
adc
shll
or
and
inc
sub
aam
pop
sub
sahf
push
cltd
or
mov
js
add
jne
push
loop
sbbb
cmpsl
inc
movsl
cltd
or
sub
add
in
jnp
addr16
dec
inc
and
sbb
push
pop
pop
mov
rclb
orb
lock
add
add
lcall
push
mov
adc
ss
mov
in
pop
sbb
dec
divl
inc
pop
mov
inc
cmp
data16
mov
push
inc
aam
lea
or
inc
mov
inc
push
stos
lea
fists
and
into
in
dec
subl
push
dec
fs
adc
adc
or
rorl
or
jbe
xchg
xchg
out
mov
fs
add
icebp
cmp
pop
mov
out
dec
dec
adc
pusha
lea
in
inc
in
cmp
and
in
sub
nop
mov
cmp
sbb
push
cmp
test
fisttpl
cmp
ja
inc
push
pop
mov
loop
fiadds
lds
sbb
mov
jbe
push
sub
jbe
push
test
mov
mov
inc
add
test
cmp
jbe
mov
push
jbe
inc
push
pop
push
add
push
mov
scas
sti
jae
mov
or
and
andb
filds
test
mov
incb
sbb
sub
outsb
mov
cwtl
add
jne
in
mov
jb
xchg
icebp
and
xor
daa
mov
mov
mov
call
inc
popa
inc
fisubl
sarl
inc
jo
js
and
pop
mov
test
mov
ds
add
add
lahf
sub
imul
inc
mov
dec
sbb
ret
in
daa
push
pop
pop
push
mov
add
and
push
xor
mov
cmp
xor
or
stos
pusha
mov
loop
push
push
xchg
test
push
lahf
inc
scas
xchg
out
add
lret
xchg
jmp
pop
xchg
xchg
pop
lds
movsb
lds
std
jae
push
sub
scas
fldt
pop
nop
mov
call
inc
push
in
std
pop
lcall
pop
xor
pop
cld
rolb
mov
mov
push
fsubs
adc
sub
int3
leave
imul
push
mov
ret
fs
cmp
incl
dec
es
inc
xor
pop
sub
sub
dec
xor
pop
push
cmp
test
jg
xor
inc
pop
inc
adc
enter
andl
mov
test
sbb
push
or
dec
icebp
mov
mov
push
jne
outsl
xor
cmp
xor
and
aas
pop
inc
sbb
or
cmpsl
jb
add
outsl
jecxz
jns
je
or
jl
push
dec
adc
imul
dec
pushl
pop
insb
mov
sbb
jg
sbbb
jp
insb
pop
pop
lods
mov
fcompl
push
out
cmp
js
jle
scas
int3
xchg
adc
sub
sbb
sub
aas
push
shld
and
inc
sub
sbb
jmp
hlt
cmpsl
lds
push
add
sub
lods
push
or
shrb
jo
int3
inc
je
scas
and
xchg
mulb
jmp
bound
pop
enter
mov
cmp
arpl
sbb
nop
add
shrl
fmuls
sahf
push
jo
or
cmp
test
xchg
ds
jle
mov
bound
jmp
lods
adc
fwait
mov
pop
cld
or
shl
cmp
jg
dec
sahf
xor
sbb
fcmovbe
in
add
out
pop
add
pop
jl
mov
xor
jecxz
fiadds
push
cmp
out
lods
pop
int
lods
sub
add
data16
pop
inc
pop
add
jge
pusha
xor
jne
lds
push
mov
lock
dec
pop
sahf
push
xchg
aaa
scas
outsb
js
sbb
movntq
adc
cmpsl
mov
les
push
or
push
gs
andb
cmpsb
cmp
add
pop
ret
push
adc
inc
rclb
adc
cmpsl
add
aas
mov
and
in
dec
pop
subb
cli
int
mov
mov
test
jne
cmpl
jne
adc
xchg
adc
inc
mov
insl
arpl
jg
clc
jne
cmp
sub
push
cmp
jne
and
and
cmc
lds
or
add
jecxz
cmp
mov
adc
insb
jmp
movl
pushf
sbb
mov
sub
ja
pop
outsl
jl
mov
sahf
jae
pop
mov
lret
push
sarl
fs
cmpsl
psubq
jnp
add
push
pop
mov
int3
inc
jne
pop
jbe
cwtl
mov
and
pop
jno
fidivl
inc
imul
inc
dec
cmp
add
jmp
pusha
pop
sbb
insb
jmp
dec
sbb
sti
xlat
insb
pop
enter
cmp
jne
push
rol
mov
push
sbb
test
sub
cmp
and
adc
mov
fscale
subb
sub
stos
pushf
or
xchg
push
mov
inc
insb
mov
pop
pushf
addb
cld
jmp
fcoml
adc
lret
push
icebp
mov
sahf
cmpsl
push
inc
lods
fldcw
jecxz
dec
mov
push
sbb
inc
in
lret
mov
push
orl
jmp
bound
mov
sbb
enter
imull
adc
cmp
fadds
inc
jbe
xor
mov
les
nop
or
aas
push
rclb
rcll
add
xchg
adc
and
mov
rep
mov
inc
shl
dec
test
sbb
addr16
fdivrl
pop
add
js
jnp
add
xor
dec
pop
mov
repnz
or
arpl
xor
adc
inc
push
mov
jp
or
je
mov
inc
dec
mov
push
sbb
xor
aam
xchg
dec
inc
imul
xor
xor
xchg
adc
pop
leave
in
xor
xor
pop
mov
les
stos
push
icebp
andb
cmp
xchg
outsl
or
pop
mov
pop
mov
call
xchg
popa
and
push
pop
fstp
push
lods
jg
push
mov
cmp
ss
inc
lret
cld
call
pop
adc
lret
sbb
test
sbb
mov
mov
ss
mov
jl
fmull
dec
imul
test
jg
and
mov
es
dec
sti
adc
pop
sub
pop
add
jecxz
or
aaa
ljmp
adc
jle
mov
xchg
xor
or
pusha
pop
adc
rep
jne
dec
leave
les
xchg
pop
or
mov
push
pop
push
or
pusha
adc
pop
es
ret
pop
mov
pushf
movb
pop
or
repnz
imul
imul
push
sbb
mov
push
and
sahf
test
push
inc
inc
daa
outsb
roll
xchg
cmp
mov
popa
jge
jge
cmp
nop
sub
jl
movsb
and
dec
mov
mov
adc
cmpsb
xor
test
xor
mov
ror
bound
clc
push
roll
div
test
push
add
pusha
loope
imul
dec
test
fnstsw
adc
and
adc
daa
pop
xor
push
int3
nop
mov
adc
inc
lock
and
cmp
sub
movlps
rorb
test
aas
dec
and
or
or
push
fwait
shl
clc
scas
test
inc
pop
push
cmp
push
mov
dec
lods
cmp
imul
sbb
xchg
and
fwait
mov
scas
mov
xor
sub
andl
and
sahf
mov
popa
sbb
xchg
fnstsw
loopne
sbb
and
nop
push
movsl
adc
pushf
jle
in
lcall
xor
adc
jl
mov
and
xchg
cmpsl
xchg
fistpl
xor
inc
sti
cmp
inc
add
pop
insb
popf
or
add
add
push
int
into
stos
adc
and
xchg
sbb
add
sbb
sbb
cmp
out
daa
and
lea
test
test
push
out
jmp
mov
ss
mov
pop
mov
sub
or
cwtl
dec
das
mov
add
int
lea
lock
inc
push
push
cs
pop
adc
push
cmp
sub
push
jno
or
sub
sub
mov
in
andl
xor
stos
inc
add
adc
cmp
sarb
push
ret
dec
mov
jne
je
jl
lods
movsl
push
test
addb
into
leave
add
out
xsavec
popa
cmpsb
mov
add
and
inc
mov
push
sbb
jmp
mov
mov
outsb
ss
aas
loopne
fcomps
xchg
scas
std
adc
lea
push
push
lret
out
push
insb
push
add
sub
mov
jb
jb
sub
and
idivl
imul
adc
push
pop
mov
dec
add
lahf
inc
dec
pop
pop
jb
add
sbb
adc
xchg
adc
dec
je
dec
sbb
pop
lahf
ja
dec
xchg
xchg
sbb
testb
dec
xchg
cmp
add
aad
adc
dec
rorb
xorb
sarl
sub
sbbl
jecxz
fisttpl
sbb
dec
mov
or
test
push
jb
insb
push
jmp
and
jb
xchg
add
inc
jl
orl
jge
aad
push
fdiv
inc
outsb
loopne
jae
add
ret
stos
rclb
aas
mov
xor
mov
sub
inc
and
and
jl
cmp
mov
sbb
xchg
xchg
and
pop
scas
push
push
and
pop
mov
sub
sbb
push
pop
nop
in
movsl
test
mov
inc
inc
xchg
inc
sub
in
sbb
imul
clc
inc
mov
mov
push
or
sbb
mov
push
jo
ja
and
sub
sub
mov
shrl
sub
jbe
sbb
xor
inc
xor
cmp
add
loopne
dec
insb
sbb
insb
inc
or
cmpsl
mov
mov
xor
add
xorb
into
ds
push
pop
test
cmp
in
movsl
inc
push
loope
sbb
setle
fidivl
fmuls
sbb
stos
mov
add
xchg
clc
adc
and
pop
xchg
cmp
sbb
push
or
dec
inc
cmp
jbe
dec
jmp
push
lods
mov
cmp
test
test
loopne
mov
addl
cmc
addr16
arpl
dec
imul
xor
dec
push
adc
xchg
or
ret
add
andb
and
in
insl
call
push
push
cli
fisttpll
rorb
imul
subl
push
mov
dec
jno
sbb
adc
out
mov
ret
dec
testl
js
mov
and
adc
test
mov
cwtl
js
imul
and
add
xchg
nop
or
mov
inc
cmp
or
or
push
add
xchg
sbb
sbbl
push
mov
or
mov
ss
push
sbb
add
ss
and
pop
push
movl
pop
jg
pop
dec
xchg
mov
lcall
mov
fisubrs
mov
xchg
push
xchg
push
dec
sub
lcall
sbb
add
nop
es
dec
arpl
and
dec
push
das
dec
je
xchg
push
sbb
ficomps
pushf
addb
mov
nop
adc
inc
mov
orl
test
sarb
addr16
cmp
scas
incb
orb
adc
lea
pop
outsl
adc
clc
push
shr
and
ja
dec
and
adc
and
mov
push
in
enter
stos
cmp
cmp
xor
xor
add
scas
xchg
arpl
and
cmp
call
xor
icebp
sbb
or
dec
cmp
cli
xchg
rolb
ja
inc
cmp
in
inc
incb
or
jno
shr
inc
and
or
adc
dec
ret
mov
push
enter
xor
cmp
clc
sbb
xor
mov
or
cmp
jge
jmp
lods
inc
jecxz
lea
or
push
push
idiv
lcall
mov
cli
xor
sub
and
ds
xor
roll
mov
mov
inc
add
mov
jl
cmp
daa
mov
or
xchg
push
inc
test
push
and
pop
bnd
xor
push
aaa
sub
aas
and
sub
xchg
addr16
popa
sub
insb
repnz
js
push
xchg
inc
mov
lods
pop
mov
inc
inc
mov
sub
push
mov
mull
mov
or
or
dec
push
imul
imul
aad
and
jo
inc
jle
out
sub
rcrl
sub
jno
outsb
repz
add
push
pop
js
add
fbstp
loope
test
xchg
xchg
jne
divb
aaa
mov
adc
nop
xor
mov
call
roll
loope
icebp
xchg
or
arpl
fsts
jge
sub
clc
add
jecxz
adc
push
lods
or
pop
cmp
scas
or
scas
xor
shrl
pop
sbb
add
enter
icebp
arpl
outsb
add
inc
mov
push
test
stos
je
or
add
inc
cmp
mov
pop
or
jns
mov
inc
mov
sbb
and
shll
cmp
push
jbe
int
add
scas
les
sbbb
xchg
add
adcb
xchg
cmp
xchg
pop
arpl
dec
dec
xor
fdiv
xchg
or
icebp
iret
inc
dec
xchg
push
cmc
es
xor
mov
xor
adc
inc
stc
sbb
ss
cltd
dec
sti
imul
adcl
jne
and
ja
or
cwtl
lock
movsb
dec
xorb
fadd
loopne
subb
sbb
js
push
mov
sub
int3
xchg
das
scas
imul
leave
js
neg
or
mov
cmp
inc
cmp
js
call
add
mov
sub
icebp
rcrl
call
adc
or
xor
imul
inc
dec
mov
adcb
cld
insl
jbe
xor
nop
cltd
lret
cmp
push
cmpsb
jg,pt
cmpsl
pop
icebp
push
fistpll
jb
jo
mov
adc
push
ret
andb
js
movsb
mov
jns
sbb
lods
nop
or
imul
icebp
jl
add
adc
cli
sub
insl
sbb
inc
jbe
mov
lods
mov
mov
es
jle
mov
arpl
shll
in
popf
cmp
sub
loope
jo
dec
mov
xor
xchg
sbb
or
adc
dec
sbbb
sub
and
xchg
movntps
int
sub
dec
lret
mov
in
mov
test
add
mov
adc
push
xor
mov
sub
aam
lret
pop
imulb
push
pop
inc
xchg
mov
sub
or
sub
cs
roll
push
out
dec
push
pop
push
rcl
inc
or
fwait
push
into
dec
cmpsb
fstps
int
mov
pop
addr16
adc
or
test
stc
jo
inc
mov
xchg
mov
xor
cmp
adc
fisttpl
push
xchg
std
pop
call
je
add
mov
lahf
push
xchg
xchg
dec
adc
jecxz
mov
push
fucom
jnp
push
popf
shrl
mov
sub
loope
shll
popf
add
adc
push
pop
cmp
xchg
sbb
lahf
outsb
mov
mov
push
inc
adc
imul
ret
mov
push
xor
xchg
lods
roll
jmp
jp
lock
int3
push
arpl
cmp
idiv
ret
es
dec
loop
mov
inc
ja
add
mov
xor
adc
jmp
dec
or
call
ret
lock
mov
inc
jo
mov
sbb
add
lret
jae
das
rorb
adc
filds
pop
sahf
and
leave
jo
and
fldenv
rolb
lock
cmp
adcb
push
mov
popa
fdivrl
push
das
or
ret
rclb
xchg
addb
mov
xchg
data16
push
dec
push
xchg
nop
scas
shrl
ret
sbb
add
ret
cli
sub
cmp
dec
out
xchg
rorl
aaa
pop
xchg
test
je
mov
fs
cmp
push
les
xor
jp
push
lods
add
mov
cld
cmp
push
notb
sbb
shlb
out
pop
sti
imul
mov
and
inc
cmp
imul
scas
test
lcall
jecxz
insb
data16
aaa
loope
inc
pop
lds
add
cltd
fcomps
dec
clc
shl
idiv
add
dec
shl
dec
ja
dec
jl
inc
jmp
sub
xor
add
fsub
dec
adc
lods
lret
lock
inc
mov
test
add
mov
stc
test
dec
dec
or
mov
jno
in
je
add
or
cmp
or
sbb
pop
sub
xchg
or
stos
adc
ret
jp
popa
and
jle
loop
das
cmp
orb
movsb
or
cmp
ret
or
xchg
dec
pushf
outsb
mov
in
or
jmp
loopne
xor
add
fs
add
sahf
or
movsb
dec
lods
jne
ljmp
mov
out
cmc
adc
sarl
mov
xchg
enter
mov
stos
pop
add
repnz
pop
nop
jo
imul
push
add
mov
pop
loope
inc
add
xlat
adc
mov
addb
fdivl
les
mov
pop
and
sbb
sarb
or
mov
inc
inc
test
outsl
shlb
or
popa
or
ss
cmc
in
nop
fistps
es
sbb
push
dec
sbb
adc
mov
clc
dec
adc
add
mov
mov
lea
mov
cmp
xchg
and
inc
nop
int
add
mov
cli
adc
pusha
scas
in
mov
mov
aas
sbb
mov
push
sub
push
adc
pop
test
fildll
add
lret
inc
cmp
je
mov
loope
jecxz
mov
pop
jne
xor
negb
movsb
mov
cmpsb
xchg
mov
mov
adc
pop
push
mov
or
es
and
jle
incl
inc
adc
adc
ltr
js
enter
aam
into
pop
lock
inc
push
mov
mov
cmp
addb
xchg
ds
clc
adc
lock
xchg
test
jge
in
sbb
lcall
and
mov
mov
adc
jne
push
sahf
lods
or
adc
outsl
jo
sti
mov
cmp
mov
add
addl
mov
inc
mov
faddp
mov
std
sbb
mov
sbb
jno
xor
mov
div
inc
add
je
inc
cld
pop
mov
bound
fmuls
jns
sbb
jg
je
ss
push
fwait
add
mov
sbb
sbb
pop
mov
imul
push
sub
jbe
dec
cmp
jp
lds
enter
imul
dec
pop
or
rorb
push
sbb
and
test
jge
push
repz
cmp
xchg
mov
stos
pop
cmp
xor
cmp
pop
mov
mov
decb
mov
shl
outsl
lods
mov
clc
dec
and
mov
int3
inc
shl
mov
pop
dec
push
fwait
je
ss
sahf
mov
ljmp
aam
jge
add
cmc
inc
dec
jp
cltd
add
icebp
jg
cltd
sbb
xor
daa
adc
xchg
push
jo
adc
or
inc
adc
push
xchg
rolb
and
xlat
cld
xor
inc
xor
xor
in
dec
in
bound
jg
push
fisttpl
lret
xorl
or
dec
lret
loope
sub
int
in
adc
push
and
xchg
dec
xor
dec
es
fmuls
jne
or
adcb
xor
fmuls
lret
rclb
or
xchg
cs
seto
lcall
push
imul
lds
adc
sahf
les
nop
rol
fisttps
sub
jmp
dec
adc
adc
push
jae
je
jmp
stc
dec
test
lret
xor
mov
adc
inc
pop
cmp
mov
pop
mov
mov
mov
mov
adc
mov
add
pushf
cmpsl
rcrb
dec
pop
sti
pushf
xor
inc
ret
movsl
xor
dec
and
or
outsb
mov
xor
sbb
or
test
or
arpl
and
sbb
push
stos
out
xor
std
cmpsb
lea
xchg
mov
mov
mov
jno
leave
stos
cmp
adc
push
aas
sti
lods
jg
adc
outsl
sbb
xchg
pushf
imul
test
xchg
xchg
gs
xchg
popa
lods
pop
stos
cmp
push
mov
pop
in
and
dec
mov
test
adc
sar
mov
addb
or
mov
mov
icebp
jmp
xchg
xchg
inc
or
push
lahf
mov
adc
jmp
inc
adc
fimuls
addb
mov
push
mov
and
mov
xorb
jg
mov
fildll
sbb
mov
sarl
shll
out
lcall
or
pop
inc
xor
mov
imul
mov
fnsave
movsl
adc
mov
lret
dec
test
xchg
sbb
orb
or
adc
mov
addr16
daa
rorb
xchg
inc
mov
sbb
push
mov
dec
ret
inc
aaa
movsl
jmp
unpcklps
pop
push
fmuls
sbb
add
adc
clc
rolb
jns
and
std
push
enter
cld
sub
pop
cmp
or
inc
cmp
lea
incb
or
sub
xchg
xor
inc
sbb
and
push
inc
cmpsl
scas
jne
bnd
scas
dec
pushf
sbb
adc
pop
cmp
pop
pop
flds
repz
lods
cli
push
push
inc
xor
sbb
mov
push
and
and
insl
jl
dec
and
push
lret
sbb
or
loopne
xchg
dec
push
pop
orb
fwait
add
rcl
pop
cmp
jo
out
arpl
sbbb
lea
insl
je
fwait
pop
add
lcall
int3
insb
sub
push
mov
mov
pushl
inc
loop
inc
adc
or
subl
rclb
xor
aam
xlat
push
cmpsb
or
sub
mov
mov
sbb
inc
add
lcall
enter
add
andl
or
js
adc
je
cmp
loop
jmp
mov
cmp
clc
rol
jl
cmpl
pop
lret
sbb
cmp
sbb
hlt
dec
add
mov
pop
or
sbb
inc
jns
out
mov
jo
daa
add
orl
stc
sbb
imul
pop
aas
add
aaa
test
outsb
loop
fdivrs
lea
mov
jge
push
adc
dec
andl
mov
insl
push
or
pop
out
fdivrs
or
sub
sbb
jae
bound
sbb
fstl
xor
sbb
adc
sahf
mov
mov
adc
and
mov
adc
push
xor
inc
pop
dec
enter
mov
sub
push
sbb
lock
imul
or
rorl
xchg
push
pop
mov
lret
cmovb
inc
pop
scas
or
in
dec
sbb
rclb
add
add
mov
mov
sub
push
or
mov
les
cld
test
cmp
fnstenv
mov
and
aaa
xchg
int
push
mov
jecxz
shl
adc
inc
pusha
mov
push
xchg
sbb
addr16
cld
pushf
dec
aaa
hlt
xchg
adc
mov
pop
pop
pop
cmp
shrb
dec
mov
xchg
sbb
or
cmpl
adc
lea
dec
adc
mov
in
and
push
test
push
pop
adc
jb
push
testb
notl
or
into
dec
inc
sbb
xchg
sti
incl
xlat
orb
inc
or
pop
jp
data16
sub
out
or
xor
adc
insl
sbb
xchg
mov
or
shll
or
ja
dec
inc
lods
cld
lea
mov
loop
push
add
mov
icebp
adc
sbb
add
loop
mov
inc
mov
sbb
xor
mov
sub
cltd
lea
push
and
imul
nop
sbb
or
sub
mov
xchg
insb
hlt
subb
adc
push
add
dec
inc
sbb
push
dec
aam
not
inc
cmpsb
lock
cmp
stos
aaa
rclb
xor
sub
xlat
jp
inc
cmp
imul
pusha
or
cwtl
and
push
cs
pop
add
push
jg
dec
and
inc
sub
mov
enter
xchg
sub
repnz
xor
jae
ss
sar
jne
add
sub
sbb
push
outsl
movl
xchg
and
xorb
shrb
test
pop
outsl
or
lock
xchg
jp
jne
push
loop
jmp
faddl
cmp
je
loopne
add
add
adc
push
imul
aas
xchg
sub
dec
and
add
dec
pop
cmp
or
push
xchg
sbb
push
loop
inc
incb
sbb
int
mov
add
out
xlat
jecxz
mov
inc
push
xchg
scas
nop
shll
loopne
adc
icebp
adc
mov
cmp
sub
leave
adcl
dec
mov
mov
push
and
sub
jno
xchg
lock
lcall
inc
mov
jge
cwtl
es
and
inc
andl
mov
sub
push
rclb
dec
or
inc
mov
dec
out
xor
adc
pop
inc
sbb
push
add
lcall
sub
push
pop
dec
daa
lods
mov
les
cs
sub
mov
sub
pop
mov
or
sbb
cltd
add
cmpl
push
test
xchg
xor
and
inc
frstor
stc
neg
inc
pop
adc
fstl
push
or
out
data16
aad
xchg
cmp
test
rclb
rolb
dec
dec
popa
mov
das
fs
push
jge
push
lea
ret
sar
and
lds
icebp
push
xchg
cmp
out
lret
mov
dec
adcl
xor
lret
int
in
add
sub
mov
dec
add
xor
popa
sub
pop
cmp
xchg
dec
mov
cmp
push
mov
or
popf
xchg
imul
cltd
add
xor
test
fadd
faddl
xor
pop
lods
cmp
mov
sub
push
je
sub
cmp
sub
cwtl
dec
loope
cmpl
and
mov
insb
pop
lods
sbb
adc
cvtdq2ps
ljmp
xchg
rorb
push
lahf
push
push
out
xchg
inc
push
dec
xor
leave
cmp
sub
lret
sub
sbb
pop
hlt
mov
stos
incl
out
js
cmp
adc
add
cmp
shl
pop
sbb
adc
dec
dec
and
imul
roll
jnp
outsb
xchg
movsl
test
dec
test
iret
repz
inc
inc
je
or
insb
or
ljmp
dec
sbb
or
ret
clc
push
cmp
dec
nop
and
or
cs
pushl
inc
mov
pushf
mov
inc
xchg
call
cld
mov
sbb
aad
hlt
sarb
dec
inc
mov
xchg
xchg
adc
sbb
enter
adc
push
mov
enter
mov
push
adc
pop
pop
roll
pop
dec
test
push
push
test
cmpsl
subb
xchg
inc
clc
pop
cmp
dec
ljmp
repz
mov
fadds
outsl
and
pop
pop
xchg
push
and
cmp
mov
or
add
and
negb
mov
sti
pop
les
xorb
mov
xor
daa
addr16
jmp
pop
loopne
arpl
std
cltd
fsubs
cli
inc
dec
lcall
bts
jmp
ja
jb
loope
cmp
sub
lods
in
in
fs
sbb
cld
les
cmp
dec
js
add
jge
inc
and
into
mov
sub
and
mulb
or
shrl
fdivrl
mov
ss
mov
mov
inc
mov
or
loopne
cmpsb
or
jl
cmpb
dec
clc
fmull
fstps
jl
outsb
pop
test
pop
cmp
das
sbb
lahf
ljmp
or
mov
push
dec
xchg
sbb
mov
call
sar
pop
cld
cmp
xor
mov
pop
sub
cld
dec
jne
movsl
adc
andb
pop
int
ds
push
in
push
xchg
rcll
xchg
sbb
push
sbb
jg
test
movl
push
sbb
popa
adc
inc
pop
sub
xlat
xchg
cli
dec
je
jns
push
dec
movsb
push
lahf
push
js
mov
xchg
jo
shlb
lret
pop
lea
inc
les
cwtl
cmp
cmp
jo
shlb
push
fdivs
imul
inc
sbb
sbb
loopne
in
adc
adc
mov
repnz
dec
rorb
dec
sub
inc
mov
mov
mov
and
int3
sbb
adc
jnp
testl
dec
mov
rcrb
test
adc
xlat
clc
dec
or
xchg
into
xor
mov
mov
pushf
orb
adc
addb
add
lret
adc
mov
movsb
dec
js
or
je
lret
xchg
pushf
fs
mov
sbb
insb
inc
leave
push
and
push
push
sbb
loope
sub
sub
push
xor
call
fsubs
daa
mov
sub
push
xor
call
xchg
dec
or
cli
fldl
or
jb
clc
sub
sbb
jae
adc
andl
dec
xor
pop
push
insb
pop
inc
add
jle
ljmp
sbb
jbe
in
jmp
fnsave
ret
ja
push
xchg
enter
mov
adc
adc
arpl
adc
pop
fnstsw
inc
rcrb
insb
pusha
pop
arpl
shr
mov
xlat
pusha
cmp
mov
dec
xchg
loopne
rorb
jo
mov
or
mov
push
dec
cmp
je
popa
inc
sbb
or
pop
mov
jb
cmp
arpl
cld
lret
mov
dec
std
push
xor
lods
push
jle
or
sbb
sub
fstpt
imul
scas
xor
lock
inc
orb
das
pop
sub
ret
inc
dec
mov
cmpsb
pop
jmp
cmp
sub
push
jns
pusha
das
sbb
or
add
jbe
rol
adc
les
mov
sub
gs
rcrb
adc
movb
pushf
adc
push
mov
push
bound
pop
sahf
cmp
xor
test
push
and
shl
adc
xchg
repnz
jbe
jle
mov
inc
or
test
icebp
add
cmp
push
push
inc
push
dec
mov
mov
push
je
mov
js
pop
rcrb
clc
rcll
or
pusha
ret
scas
or
lahf
dec
mov
orl
stos
or
mov
push
aam
inc
pop
inc
icebp
add
push
pop
in
inc
jno
push
js
lahf
sar
mov
xor
adc
mov
rol
push
mov
jbe
in
push
pop
ljmp
sbb
pop
sahf
inc
cmp
inc
fbstp
cmp
icebp
fwait
aad
aad
dec
scas
pop
je
xchg
push
ret
jae
adc
inc
push
add
js
pusha
fsubrl
pop
and
into
mov
jb
xchg
fnstcw
cmp
pop
jl
or
insl
cmpsb
mov
test
inc
cwtl
pop
xor
mov
insb
jns
sbb
aas
jl
adcl
add
add
mov
mov
sub
dec
cmpb
mov
xchg
icebp
xorb
outsl
push
jbe
cmpsb
aad
and
cmpsb
icebp
movd
mov
aad
mov
add
inc
inc
dec
call
lcall
pushf
iret
shll
addb
mov
and
cmpsl
inc
fldenv
sub
mov
or
imull
mov
das
sbb
dec
jo
imul
add
loopne
mov
rcll
add
ret
adcb
add
scas
pop
mov
adc
jbe
mov
arpl
rorb
pop
xor
cmp
fs
sbb
sbb
mov
cld
jae
mov
inc
mov
add
jb
push
pop
sahf
push
loope
xor
add
ss
mov
add
push
mov
enter
push
ret
xchg
mov
test
cld
cmp
pop
inc
and
imul
mov
adc
rorl
push
test
les
add
or
pop
add
xlat
push
jl
jge
add
pop
add
xchg
adcb
mov
dec
sarb
or
pcmpeqd
dec
sarb
sbb
sbb
bound
lock
pop
jmp
adcl
jge
dec
lea
push
push
decb
add
inc
lock
jge
sbb
dec
jne
mov
mov
push
stc
or
sub
push
scas
fistpll
jb
dec
nop
cmp
imul
push
pop
and
insl
and
pop
les
add
rclb
mov
jmp
ds
mov
xchg
lock
inc
call
sub
dec
cmp
pop
int
push
or
xor
movq
je
sub
add
jbe
repnz
inc
pop
pop
mov
xor
and
push
mov
push
jo
and
in
outsb
push
push
push
pop
and
mov
inc
roll
enter
inc
push
mov
ja
add
mov
jnp
lea
pop
pop
adc
fsts
jle
jp
inc
dec
jbe
rolb
movl
push
inc
push
adc
nop
test
push
fisttps
add
clc
data16
movl
add
clc
xchg
aas
pop
jnp
adc
xchg
cmpb
cmpsb
mov
cmp
jg
inc
cltd
nop
sbb
movsl
push
jecxz
xchg
dec
and
sub
js
xchg
jle
push
clc
pop
inc
sub
and
add
jmp
sbb
add
cmp
or
inc
add
dec
sbb
push
and
mov
jg
sbb
dec
and
adc
lahf
lea
lret
filds
inc
fmul
xchg
pusha
mov
ss
jle
cmpsb
icebp
dec
mov
mov
addl
jne
adc
dec
push
inc
lret
mull
mov
push
jo
dec
add
xchg
je
xchg
test
movsl
cmp
int3
xor
cmp
mov
arpl
adc
xlat
fcomps
cmp
out
dec
push
orb
jl
xor
pop
pop
and
xor
mov
mov
pop
fistps
xchg
dec
push
mov
mov
adc
lods
and
inc
and
movsb
cmpsb
pop
inc
loopne
push
pop
adc
pop
jo
pop
insb
xor
dec
cli
imul
imul
scas
sbb
dec
mov
outsb
pushf
fcmovb
sti
lods
sbb
cwtl
jge
sub
filds
and
negb
daa
add
push
jmp
mov
or
cld
mov
push
adc
sub
inc
out
test
lret
aam
imul
add
aaa
push
jo
xchg
shl
les
xchg
inc
xchg
inc
dec
pop
ja
add
int3
cmp
sbb
inc
and
or
mov
cmpb
sub
xor
push
lret
insb
int
inc
add
dec
cmp
mov
xchg
or
mov
cmp
add
inc
push
lret
js
faddl
mov
sub
dec
mov
cmp
cmp
mov
rcrb
add
loopne
push
bound
sti
or
jmp
jmp
pcmpeqw
add
mov
mov
stos
sbb
inc
outsl
call
and
xorl
push
bound
add
gs
fstpl
xor
jne
bound
pushf
cmp
shlb
push
in
mov
jnp
cltd
ret
push
cs
mov
js
cmpsb
mov
insl
or
add
or
xor
fsubs
and
or
or
pop
add
push
xor
push
mov
inc
mov
and
cwtl
dec
jne
pop
mov
mov
jl
jne
dec
movsb
out
xlat
lret
ret
and
or
jl
call
addl
addl
in
mov
fbld
iret
and
rorl
sbb
adc
xchg
lock
sbb
pop
sub
lea
lea
loopne
insb
sub
lock
sbb
push
or
mov
add
cwtl
in
mov
sub
push
cld
cld
inc
cmc
scas
sub
push
add
std
cmp
clc
jno
mov
and
adc
add
add
pop
sbb
adc
sub
mov
and
and
ljmp
out
mov
dec
ss
fisubrl
pop
mov
cmp
lea
lea
xor
mov
jnp
and
arpl
adc
movsb
sbb
mov
pop
push
xor
pop
lock
icebp
push
lock
ss
jmp
dec
jo
sub
adc
mov
push
push
push
mov
hlt
or
mov
loopne
sarb
and
and
leave
inc
add
adc
pop
adc
sbb
dec
jb
adc
sbbl
or
and
pusha
andl
pop
or
push
ret
pop
lods
scas
dec
sbb
push
jne
aas
and
in
test
cmp
test
pop
mov
adc
aad
std
pop
jmp
sub
add
movsb
push
in
jae
jg
fs
stc
clc
sub
cmc
inc
and
sub
mov
shr
mov
jbe
aad
mov
ret
shl
jno
mov
and
xchg
xor
dec
mov
ja
lea
adc
xlat
mov
pop
adc
and
adc
jno
add
jle
daa
jno
add
sbb
push
or
movsl
mov
mov
stos
cmp
mov
mov
pop
and
stc
test
adc
data16
insb
xor
lods
mov
sbb
dec
push
sub
jo
pusha
cmp
mov
mov
pop
push
xor
sbb
sub
push
jo
shr
add
out
xor
enter
or
or
lods
sbb
fs
lods
scas
outsb
xor
ds
xor
add
stos
pop
sub
adc
arpl
add
sar
jbe
lea
mov
pop
cli
lea
add
push
adc
pop
xlat
mov
or
cld
push
inc
dec
add
cmp
push
ljmp
in
cltd
xor
sbb
sub
push
testb
je
xor
adc
push
decl
adc
mov
sbb
and
sub
rorl
adc
adc
mov
mov
jns
xlat
cmpl
ds
cmc
mov
loop
rorb
jle
xor
pop
sbb
cmp
add
push
dec
inc
call
inc
jne
mov
loope
jo
imul
cvtps2pi
push
inc
inc
cs
or
jo
dec
and
push
mov
inc
iret
pop
sbb
stc
sub
cmp
lcall
mov
outsl
mov
sbb
fdivr
adc
mov
pop
add
push
adc
enter
mov
sbb
jb
cmp
in
push
pop
push
add
mov
mov
rcrb
pop
vmovlps
dec
iret
sahf
les
cmc
pop
add
xchg
sbb
xchg
pusha
jo
jp
mov
addr16
cli
test
dec
push
sbb
popf
add
js
cli
rclb
mov
fdivrs
lcall
or
add
cli
fiadds
and
out
adc
xor
add
daa
sbb
mov
cltd
enter
push
out
cmpsb
into
in
and
xor
add
cmp
mov
inc
mov
fstpt
cmpsb
mov
lcall
xchg
sbb
jl
lcall
xor
mov
idivb
addb
xor
push
aaa
dec
inc
add
sub
call
mov
mov
fcomip
sub
jne
insb
pop
cmp
cli
push
rclb
lods
pop
mov
iret
push
jo
les
pop
fcompl
shlb
mov
push
mov
pop
adc
adc
fstps
or
aad
mov
or
loope
clc
out
add
dec
dec
mov
jbe
lea
mov
sub
fildl
mov
ss
and
inc
add
xchg
insb
mov
adc
jg
fsub
aaa
mov
lea
sub
mov
push
push
inc
inc
pop
call
test
xchg
das
jmp
or
lock
inc
cli
xchg
jo
and
jbe
sub
sbb
ret
std
aas
fisttps
inc
inc
push
jp
jne
faddl
test
mov
lds
add
inc
mov
mov
scas
and
dec
shl
pop
sub
pop
je
pop
and
push
out
ret
xlat
xchg
insb
imul
or
fldenv
xor
inc
or
ret
aas
cwtl
cli
imul
ljmp
pop
fdivrp
loope
pop
mov
or
push
lds
cmp
movsb
add
shl
push
cmpsl
and
fiadds
inc
add
ljmp
and
dec
or
decl
sub
test
adc
shlb
dec
faddl
and
mov
jnp
mov
adc
pushf
mov
and
test
jo
push
push
jl
adcb
xor
or
mov
dec
std
push
sub
push
push
lods
sbb
xchg
jbe
xor
stos
adc
shrb
and
mov
mov
inc
je
adc
mov
push
out
loopne
add
jnp
in
jb
xchg
cvttps2pi
mov
sbb
dec
mov
inc
fldt
sub
punpckldq
push
jne
push
inc
mov
test
ja
inc
adc
or
xor
push
xchg
insb
add
push
dec
shl
sub
sti
nop
std
add
fsubrl
xor
cmc
inc
sub
or
jb
aam
enter
mov
pop
das
add
adc
push
call
enter
js
je
test
lds
into
push
sahf
mov
xor
dec
or
jle
adc
inc
lretw
mov
test
std
mov
imul
jp
adc
sbb
mov
add
inc
lret
adc
icebp
fadds
popa
cwtl
or
popf
pop
mov
and
or
cmp
xchg
xchg
subl
insl
rclb
sbb
je
rcll
aaa
pop
lret
js
lock
xchg
cli
roll
shll
sbb
adc
sar
sub
fcmovnbe
cmp
push
in
xor
icebp
orb
mov
jmp
lds
inc
ret
xor
lods
sbb
ss
rcrl
loop
scas
shlb
push
in
psubsb
push
shl
sub
sub
divl
mov
push
fmulp
ja
mov
pop
push
or
and
mov
ret
jmp
pminsw
dec
cmc
iret
pop
cmp
inc
jbe
sub
add
ret
neg
loopne
ret
je
cmp
jge
jae
sbb
push
sub
sar
push
call
jg
call
pop
push
jge
sub
sbb
arpl
call
add
add
lret
frstor
adc
fisubs
lea
ret
xchg
sbb
mov
lds
and
nop
shll
mov
mov
mov
inc
inc
imul
lds
mov
mov
mov
lds
stos
cmp
and
sub
cs
enter
sbbb
adc
mov
call
pusha
ffreep
mov
aam
push
jmp
adc
js
and
js
lret
in
inc
sbb
add
inc
hlt
lods
lcall
lea
mov
or
clc
dec
lea
mov
pop
shl
test
sbb
mov
push
aam
xchg
aam
jmp
xchg
xor
cmp
jbe
outsb
inc
dec
jne
dec
jb
or
sub
and
jne
popf
add
bound
dec
cld
loopne
or
shll
lea
pop
xor
push
xchg
loopne
sub
sbb
pop
cmp
push
popa
xor
dec
sti
mov
push
loopne
flds
das
jp
into
movsb
and
test
mov
sbb
push
outsl
pop
xorl
fildll
out
pop
shll
inc
sbb
dec
inc
sbb
scas
pop
insb
je
dec
jo
xchg
sub
je
into
or
test
inc
cmc
push
xor
xor
ud0
adc
mov
add
inc
loop
pop
ret
or
and
mov
mov
or
scas
push
push
push
mov
cli
dec
add
lret
call
inc
rorb
push
sysret
push
dec
loope
push
dec
push
lahf
add
out
or
inc
cmpsl
cs
add
lcall
repnz
add
fadds
imul
mov
fidivrl
push
add
push
or
jmp
push
mov
and
enter
inc
pop
xorb
ret
xchg
mov
dec
add
cli
dec
xor
dec
cmp
jne
les
adc
dec
and
or
mov
mov
inc
stc
jbe
xor
addr16
lds
pushf
add
mov
pop
sarb
lcall
rcrl
dec
xlat
push
inc
pop
push
jnp
sub
inc
sub
daa
xor
or
add
sahf
push
inc
iret
enter
push
cmc
fidivs
fs
es
jmp
pop
push
les
shll
jl
mov
cmp
cmp
mov
adcl
rcrl
dec
sarl
or
cmp
adc
sbb
popf
rolb
mov
ret
lahf
std
cmp
adc
inc
mov
dec
popa
addr16
shr
sbb
sub
jne
pop
int
adc
ljmp
push
ret
out
testl
jbe
aas
or
xor
mov
mov
sar
and
jmp
adc
mov
test
test
cmp
mov
fmuls
in
das
loope
fbld
stos
add
sub
push
adc
test
dec
jle
in
les
inc
pop
sub
sbb
jg
xchg
rorl
or
mov
add
and
lds
data16
or
mov
mov
sub
push
inc
add
clc
and
idivl
adcl
rcrl
cwtl
push
sub
push
ret
jecxz
cmp
insb
scas
mov
ja
dec
cmp
inc
shlb
push
add
sbb
cmpsb
mov
pop
inc
enter
inc
add
sbb
loope
or
adc
inc
fstps
mov
pop
test
mull
and
jne
jg
push
push
adc
out
je
push
push
lcall
cmpsl
or
shll
adc
sbb
je
jle
jne
inc
cmp
pop
cmp
mov
or
test
or
mov
jne
or
inc
or
in
jns
not
inc
rcrl
or
dec
inc
pusha
inc
rol
cmp
sbb
sbb
or
inc
mov
inc
inc
or
or
lds
jo
dec
stc
jg
or
inc
xor
aaa
pop
iret
shl
aam
mov
stos
pop
dec
pop
ret
push
fcoml
cmpsb
inc
push
repnz
push
sbb
fidivl
lret
imul
call
aas
push
fnstsw
nop
imul
inc
repz
mov
or
idiv
inc
adc
fcomps
int
lret
mov
pop
cmp
inc
jecxz
sub
adc
mov
dec
fldl
inc
cwtl
mov
mov
sub
or
icebp
ss
adc
enter
les
lea
xor
scas
cmc
or
or
in
push
pop
loope
xor
shr
dec
jg
cmp
jnp
cmp
lret
lahf
mov
mov
add
dec
mov
enter
fmuls
into
or
iret
push
rcrb
xor
imul
leave
sbb
add
xor
inc
adcl
in
sbb
iret
aas
js
ja
mov
pushf
and
lea
mov
es
push
push
out
push
clc
cmp
push
jg
addr16
add
int3
and
ficomps
clc
addl
hlt
loopne
xchg
pop
mov
mov
sbb
arpl
adc
cld
mov
leave
push
fstl
inc
js
imul
sarb
or
call
add
out
test
and
clc
jg
daa
std
xchg
xlat
jle
mov
xor
sbb
ds
arpl
imul
cmp
int3
enter
and
nop
dec
cmp
js
sub
pop
imul
jp
sub
push
daa
push
or
mov
xor
sbb
jl
inc
loope
sub
sti
push
add
call
shrl
jo
sahf
or
adc
jmp
pop
cld
mov
inc
in
repnz
jns
pop
ja
fsubp
sub
jl
outsb
call
out
xor
push
pop
mov
cmp
jecxz
xchg
inc
push
jl
push
or
adc
push
and
fcomps
adc
hlt
mov
jae
add
enter
js
mov
outsl
mov
cmpsb
lods
dec
sbb
add
sub
add
dec
mov
mov
loop
sbb
push
push
nop
push
add
inc
cmp
or
cmpl
add
mov
or
pop
inc
jne
add
sub
inc
sbb
ret
dec
xor
pop
and
jo
lea
dec
jne
jne
cmp
jnp
mov
adc
jne
cmpl
ja
dec
inc
push
and
je
jl
mov
jae
and
jmp
jp
out
add
loope
lock
cmp
xor
sahf
daa
push
add
sbb
out
fcompl
and
jne
test
inc
mov
pop
inc
jno
sub
cs
aas
pop
test
add
jmp
inc
jnp
pop
pusha
dec
inc
add
test
addr16
shrl
in
scas
xchg
fidivrl
repz
xchg
add
pop
jbe
movsl
aas
or
loop
repz
outsl
and
or
jbe
cmp
js
sub
or
int3
sub
sbb
adc
mov
lea
into
jo
sbb
fcmovnbe
add
lock
out
jge
aas
sub
xorb
ret
dec
mov
lea
push
dec
scas
rorl
jecxz
sub
mov
lods
jge
or
pop
add
inc
cmp
sub
jb
adc
sub
sbb
add
push
addb
movb
sub
mov
add
mov
cmc
xchg
lock
outsb
lret
jmp
mov
pop
and
ja
xchg
jb
lahf
adc
loopne
clc
popf
ja
push
pusha
scas
loopne
lods
xchg
subl
dec
xchg
fidivrl
jne
in
adc
mov
jge
xchg
clc
add
fldcw
sbb
stos
pop
jmp
push
mov
xchg
fistps
sbbb
xor
repz
adc
inc
push
cmpsb
fistpl
sbb
sbbb
mov
outsl
pop
inc
inc
xchg
movsl
jne
in
or
sarl
adc
jmp
fmuls
outsb
aas
lea
lods
adc
outsb
lock
mov
fcmovnb
pop
cli
xchg
pop
call
lods
mov
enter
xor
mov
inc
sbb
or
or
xchg
mov
iret
dec
push
push
dec
psubsw
adc
cmc
or
sti
rol
dec
xchg
imul
mov
fsubs
add
orb
add
and
roll
jne
push
mov
and
jl
push
es
mov
push
xor
xor
adc
test
push
sbb
fwait
jle
int
lret
push
pop
fstpt
sbb
xchg
add
loopne
aas
jo
cmp
mov
rolb
pop
jno
adc
sbb
bound
lea
adc
clc
das
xor
or
hlt
mov
dec
inc
push
lea
and
test
xor
add
and
ret
inc
pop
add
pop
xor
inc
adc
push
dec
adc
push
lods
dec
into
cwtl
pop
test
cmpsl
pop
stos
repz
push
add
xchg
sub
add
outsl
push
scas
add
shl
push
add
js
add
stos
les
push
mov
lock
jmp
lea
out
inc
add
paddusb
mov
xor
daa
sbb
int3
ja
cmp
pusha
out
and
mov
arpl
dec
insl
std
sub
enter
lea
sbb
push
jp
lea
add
pop
dec
adc
jb
fiadds
lea
pop
orb
ja
inc
inc
lock
leave
pop
add
xchg
xor
clc
xchg
add
adc
cmp
adc
ret
mov
cmc
andb
pop
faddl
mov
and
xchg
push
xchg
or
cs
pusha
into
or
mov
jo
mov
iret
sti
ret
mov
movsb
adc
push
js
and
outsb
jge
pushf
js
sbb
test
lock
rcll
sub
jecxz
imul
adc
loopne
lahf
and
dec
je
inc
imul
add
push
rorb
push
mov
sub
lret
int3
test
mov
inc
jae
pop
loope
inc
pop
movb
je
cmp
in
pop
je
or
mov
adc
cmpl
test
inc
add
movl
dec
js
in
pop
lret
push
sub
sbb
and
add
inc
outsl
jb
int3
push
sti
jb
adc
adc
sub
popf
sub
mov
mov
xor
cmc
pusha
movsb
xor
mov
dec
fwait
aas
test
xorb
jle
nop
jno
ret
stos
js
mov
in
xchg
repz
xchg
sub
push
in
mov
loopne
or
mov
xor
sub
cmp
mov
ret
xchg
mul
push
lea
repnz
popf
movsb
xchg
or
pop
mov
adc
sbb
aas
fsubrs
mov
js
and
mov
sbb
jge
das
jbe
add
mov
mov
fst
popf
and
ret
inc
inc
or
sub
xchg
addr16
lcall
jb
add
jl
jmp
cmp
subl
and
arpl
loop
add
xchg
pop
dec
jo
clc
and
inc
inc
sbb
pop
or
jo
fistl
repz
adc
or
adc
or
xor
stos
xchg
push
jo
dec
mov
mov
push
fistpl
sbb
jb
shl
add
add
test
loopne
jle
jle
out
outsb
push
popf
sbb
sbb
xor
sbb
mov
js
mov
mov
arpl
jae
lods
insl
pop
dec
lret
inc
xor
jo
lock
mov
dec
pop
dec
mov
test
ret
mov
scas
test
cmp
bound
in
ret
or
pusha
cwtl
add
add
jo
xchg
pop
and
int
fimull
or
xor
adc
addl
sub
data16
popa
call
xor
mov
rol
testb
pop
les
je
inc
movsl
pop
es
xchg
lock
mov
jbe
add
mov
jo
xor
push
incb
iret
mov
or
mov
push
dec
mov
jo
outsb
pop
je
xchg
loope
xchg
xor
jo
add
xor
outsl
pop
ret
dec
cld
xchg
pop
jmp
cmc
mov
jp
add
sub
int3
add
pop
or
push
cmp
mov
mov
insl
xor
mov
and
and
shll
outsb
cltd
adc
cmovl
clc
ret
and
lea
out
mov
cmp
xor
pop
inc
inc
xchg
loope
rcr
adc
hlt
aam
push
sub
fsubr
sbb
push
into
les
xchg
pop
adc
pop
or
adc
in
lret
inc
inc
dec
js
push
movsl
lods
ret
push
cmp
adc
xorl
adc
ja
mov
sahf
rorl
jns
inc
adc
push
and
inc
into
xor
sub
xchg
and
movsl
cmp
sahf
cmp
sbb
cmpb
sbb
push
sbb
call
mov
add
add
sub
pusha
pop
push
mov
addl
push
mov
xor
stos
jo
out
sbb
addb
add
push
mov
stos
add
lock
movsb
pusha
adc
lock
lea
and
lea
add
outsb
lods
mov
out
clc
or
sub
xchg
adc
stos
xchg
mov
mov
pop
jbe
sbb
das
push
lea
movsb
roll
scas
xor
sub
push
sub
mov
sbb
pop
fcoms
fiadds
sub
mov
and
pusha
cmp
xchg
or
xor
add
adc
or
push
stos
and
and
fwait
ljmp
xchg
sbb
or
jmp
sbb
shlb
shll
jne
test
movsb
or
or
loopne
or
outsb
in
mov
add
jmp
call
inc
add
xchg
movups
idiv
pop
imul
xor
mov
jge
dec
or
mov
adc
fistl
js
and
adc
call
arpl
xor
jmp
xor
add
adc
cmp
fsubs
xchg
or
dec
add
mov
in
fwait
enter
sar
sub
shlb
cmp
sti
or
xchg
out
outsl
mov
pop
inc
push
mov
fists
lea
decl
or
jbe
dec
jns
roll
into
outsl
jmp
push
test
adc
fadd
movsb
scas
xchg
cmpsl
adc
inc
xor
inc
test
add
cmp
ljmp
cmpsb
pusha
pop
or
and
dec
fisttps
jge
inc
or
sbb
pop
sbb
xor
fidivrs
or
or
mov
aam
and
and
or
add
cmp
mov
mov
add
add
push
pop
push
xor
ds
lahf
cmpsb
add
ljmp
adc
adc
inc
insl
hlt
test
shlb
mov
sub
cmp
cs
pop
mov
push
sbb
movsb
pop
and
and
and
in
sub
insb
sbb
cmp
loope
mov
sbb
xor
push
sbb
push
inc
ds
pop
pusha
inc
xor
cmp
mov
fstpl
fisttpll
idivl
fsubs
inc
or
arpl
pop
lea
call
lcall
mov
pushf
sbb
push
adc
pop
icebp
or
jecxz
movsb
adc
dec
dec
stos
mov
scas
call
pop
lea
push
aas
inc
sub
scas
and
inc
and
fwait
adc
dec
mov
pop
add
jnp
adc
push
and
movb
or
xchg
lret
out
sub
push
popa
or
add
and
std
lret
pop
cmp
subl
sub
cmp
dec
push
pop
in
addl
mov
or
jnp
rolb
jp
push
push
out
cltd
loope
pop
sbb
sub
test
and
jge
dec
lea
and
adc
or
repnz
jmp
andl
icebp
cmp
imul
add
js
add
ret
lcall
lock
xchg
cwtl
sti
mov
add
jno
testb
or
mov
mov
pop
xchg
ficomps
jmp
xlat
dec
xor
repz
add
sahf
push
shl
les
xor
outsb
addr16
mov
sub
test
inc
les
mov
cmp
mov
sbb
loopne
mov
mov
imul
add
test
adc
aad
call
cmp
in
add
add
xor
or
adcb
imull
js
mov
or
es
cs
add
pop
jg
sub
add
shl
insb
notb
mov
outsl
repnz
xor
out
rcrb
push
xchg
and
into
jmp
jb
adc
imul
xor
scas
sub
clc
lret
clc
pusha
and
push
xor
pop
push
sub
mov
sub
push
jg
cmc
shl
add
out
add
or
daa
mov
es
lods
pop
or
xchg
ret
push
fcoms
sbb
stos
mov
fwait
lcall
pop
push
adc
aaa
nop
lods
pop
sarb
ljmp
int3
adc
adc
xchg
icebp
xor
adc
mov
add
cmpsb
imul
pop
in
inc
mov
loop
lods
gs
nop
cmpsb
xor
dec
mov
clc
xchg
sar
lret
and
es
lods
popa
int
sub
mov
out
adc
js
add
push
shll
or
fnstenv
add
xor
fstp
mov
mov
sub
lahf
push
sub
jne
shl
std
dec
cmp
shlb
pop
xchg
mov
in
roll
in
shll
pop
sbb
jecxz
xor
dec
mov
out
fistpl
in
outsb
int3
xor
cmp
pop
inc
sbb
pushf
dec
imul
cmp
fnstsw
add
or
push
mov
xchg
sub
sub
daa
sar
sub
in
adc
cmp
xor
movsl
dec
xchg
lods
and
and
loopne
out
inc
and
fimull
pusha
aad
xor
mov
fldl
push
or
cmp
sahf
add
and
lret
testb
adc
mov
or
or
divl
xor
ja
jle
lahf
or
adc
push
and
pusha
fsts
xor
mov
mov
push
push
jo
call
inc
fmulp
adc
sbb
loop
fsts
xor
ret
rclb
jp
jnp
and
xor
rcr
push
xor
popa
mov
loope
fbstp
test
fadds
fsubs
cwtl
sbbl
pop
sti
sti
into
dec
xor
bound
daa
and
fadd
push
jl
in
mov
icebp
mov
clc
inc
pusha
push
outsb
xor
adc
es
jae
jl
sub
adc
sub
sbb
push
push
or
xchg
push
sub
cmp
push
nop
jmp
mov
adc
roll
jp
js
clc
pop
fnstcw
jns
cmc
sbb
and
add
addb
pop
in
add
jbe
popa
sbb
pusha
scas
inc
or
dec
add
inc
inc
add
dec
das
add
les
sub
negb
imul
inc
clc
or
fsubs
or
mov
adc
mov
nop
push
flds
xor
and
ret
rcll
pop
ja
push
aaa
inc
stos
or
outsl
cmp
or
inc
cld
jae
push
ss
ja
push
adc
sbb
shll
mov
les
mov
xchg
push
popa
xor
lds
push
nop
unpcklps
mov
cmp
ret
pushaw
sub
pop
icebp
shll
add
aas
or
add
xlat
and
pop
sbb
mov
mov
cmp
xor
pusha
push
jecxz
cmpsl
add
popa
inc
test
xor
push
jb
int3
sub
sub
inc
push
fnstcw
and
loop
and
mov
shlb
push
lret
jmp
ds
pop
xchg
popa
aas
loope
iret
fidivrl
popa
insb
movsb
mov
aaa
shll
mov
or
inc
ljmp
jnp
pop
shl
push
sbb
xor
rclb
cmpb
adc
pop
cmpsl
or
or
push
push
lock
sub
jne
or
fwait
sbb
sbbb
loope
hlt
mov
shlb
jecxz
aad
inc
repnz
loop
fwait
dec
adc
jl
mov
xor
pop
lock
mov
dec
inc
cmp
ficomps
add
jecxz
sub
add
pop
outsl
push
sub
jo
ljmp
mov
sti
lret
inc
fsubs
pusha
push
push
pushf
into
rcrl
mov
ds
push
sbb
push
rol
sbb
int
fstpt
dec
ljmp
push
scas
shrb
cld
and
sub
pop
xor
adc
add
add
cmc
dec
sbb
test
inc
insb
in
add
out
sahf
shl
pop
rolb
lock
sub
push
cmp
ss
add
gs
in
rcll
push
inc
std
sbb
push
or
mov
test
stos
dec
xor
cli
scas
clc
shl
mov
lea
xchg
sar
inc
and
addb
call
jle
sub
dec
test
and
scas
das
jg
jo
jnp
adc
push
leave
cmp
pinsrw
mov
and
popf
push
and
or
popa
test
std
lret
and
nop
mov
adc
lea
notb
jnp
adc
sub
aam
push
and
stos
mov
sti
push
daa
and
rorl
mov
push
add
enter
jo
out
jp
push
pop
jl
sub
popa
push
xor
jecxz
jecxz
out
sub
push
cwtl
lds
imul
inc
dec
jp
sbb
inc
dec
fstp
dec
pop
dec
mov
push
xchg
push
loope
addb
shll
call
loope
adc
and
adc
sub
packssdw
push
mov
cmp
sbb
sarb
cld
ret
pop
cli
push
add
cld
dec
movsb
lret
loop
push
and
push
push
add
addr16
ja
push
mov
cmpsl
xor
or
sub
lea
lea
add
cs
mov
roll
rolb
outsl
into
push
pop
sub
cmc
or
inc
jo
xor
or
inc
and
fs
xor
jle
sbb
jecxz
sub
repnz
testb
loopne
lea
mov
rolb
jl
ret
add
stos
aad
rorb
push
xchg
test
mov
or
and
stos
jne
fs
pop
aaa
aad
xor
ljmp
add
xor
or
nop
jle
inc
push
adc
lea
out
cs
add
je
push
xor
enter
pop
pusha
dec
rorb
xor
push
add
xor
std
aad
cmpl
or
or
add
or
fwait
add
mov
pop
add
inc
orl
jmp
sub
xchg
mov
cmp
mov
repnz
sbb
xor
mov
dec
lcall
inc
fimull
repz
sbb
cmpb
dec
sub
fcmovu
cmp
jnp
hlt
xchg
clc
adc
mov
fsubs
mov
imul
arpl
pop
popa
ljmp
dec
push
loopne
add
mov
mov
cltd
push
hlt
repnz
outsl
add
xchg
imul
fwait
sar
dec
jmp
jne
sarl
push
sti
sbb
arpl
pop
jo
inc
aas
pop
fsqrt
and
dec
je
xchg
pop
xchg
and
sbb
popf
pop
dec
inc
sbb
dec
fstl
test
add
addl
push
js
or
sarb
arpl
mov
aaa
push
push
insb
in
int
mov
add
push
mov
fstl
push
or
xchg
lahf
mov
dec
nop
test
add
cld
lods
sub
sbb
mov
sbb
into
xchg
outsb
testl
push
push
xor
repz
jnp
xchg
lret
leave
out
ds
in
cli
cld
call
push
dec
mov
inc
xchg
add
out
and
shll
inc
push
cmp
adc
xchg
aas
imul
mov
or
add
add
pop
dec
dec
or
rcl
cmp
mov
add
sbb
sub
sarb
adc
mov
add
adc
in
lret
xchg
mov
pop
jmp
dec
lods
push
lea
cmp
repz
pop
push
pop
das
dec
aam
inc
jbe
test
fcoml
adc
dec
cmp
popf
test
orb
setp
sbb
jmp
jecxz
xor
xor
mov
negb
sbb
loop
test
ds
aas
or
inc
mov
nop
fs
fisubrs
sbb
xchg
jno
adc
push
push
xchg
sbb
mov
push
scas
stos
fcmovbe
mov
mov
fisubs
jg
std
insb
mov
jl
fwait
stos
adc
fwait
mov
jle
outsb
pop
adc
cwtl
nop
mov
stos
mov
enter
lods
mov
pop
pop
xchg
xchg
xor
ss
mov
mov
or
pop
jmp
and
pop
add
clc
pusha
ss
sbb
add
stos
fisubl
push
ss
repnz
push
jecxz
add
sbb
cltd
or
jno
ret
fbstp
js
lods
mov
pop
mov
xchg
or
rcl
dec
ljmp
mov
addr16
mov
jae
jne
imul
ds
rorl
loope
stc
add
mov
aas
adc
push
sbb
or
sbb
mov
pop
push
adc
in
mov
add
xor
push
fwait
push
js
nop
fstps
cmp
jns
cs
incb
lds
out
add
xchg
cmp
mov
inc
fdivl
sbb
inc
test
icebp
mov
ds
insb
sbb
jbe
adc
or
fsubl
xchg
push
pop
cltd
sbb
rclb
xchg
or
mov
push
sbb
push
cmpl
mov
push
inc
and
mov
and
inc
cmc
cld
jmp
xchg
or
xor
cmpsb
sub
dec
and
aas
int3
ja
adc
pop
inc
sub
push
inc
repnz
or
mov
dec
and
add
pop
std
dec
test
inc
lahf
dec
inc
inc
add
push
lahf
mov
adc
or
inc
push
push
pop
inc
sub
push
sub
jno
or
and
mov
enter
clc
push
sub
fimuls
and
ret
sbb
bound
add
gs
mov
fnstenv
push
push
hlt
inc
pop
stos
or
or
clc
nop
push
push
sub
pop
dec
jg
popa
push
mov
movsl
cmp
cwtl
sbb
in
mov
icebp
add
stc
mov
add
clc
pusha
push
nop
pusha
dec
in
pop
sbb
loopne
scas
add
push
mov
push
push
sbb
or
or
jge
clc
inc
push
and
push
jbe
mov
int
clc
inc
fisubrl
pop
xchg
sub
mov
sub
sbb
pushf
adc
or
rclb
arpl
xchg
xor
imul
gs
js
inc
cwtl
pop
lret
adc
and
lods
push
xor
repnz
ret
mov
jge
mov
test
push
or
call
mov
out
ficoms
shrb
inc
inc
push
sub
pop
fmuls
incb
fsubl
lea
es
mov
push
or
push
in
outsb
or
push
fadds
xchg
or
test
or
mov
jmp
cmp
sbb
jne
cmp
test
pop
stc
adc
iret
leave
rcll
call
xchg
jecxz
cmp
loopne
sub
enter
sub
movb
aam
in
push
push
push
les
pop
adc
xchg
and
lock
aam
dec
subl
rcll
lock
loopne
push
fs
out
popa
jle
adc
pop
rol
aad
adc
sarb
sahf
mov
fldt
cwtl
push
or
shrb
jno
push
inc
arpl
lret
push
pop
adc
enter
lret
add
mov
nop
mov
out
dec
dec
dec
pop
pop
push
push
inc
enter
mov
push
ret
push
int3
test
arpl
out
lea
and
pusha
in
mov
in
mov
adc
adc
inc
fucomp
pop
sbb
rcll
push
test
pop
cmp
cmp
or
aad
xchg
int3
mov
in
and
push
pusha
push
mov
rcr
mov
cld
mov
cltd
push
mov
inc
enter
jbe
dec
mov
aam
mov
mov
sbb
adc
test
inc
pop
imul
or
subb
adc
test
rol
mov
sub
rcrb
sub
or
nop
jb
js
pop
jne
sahf
and
mov
pop
arpl
push
xor
mov
xchg
or
inc
stos
and
push
dec
pop
sub
pop
cmpsb
push
adc
pop
or
adc
jp
outsb
mov
fidivs
add
filds
inc
or
lret
rol
rcrb
repnz
cmp
sbb
add
rol
pusha
mov
mov
fdiv
mov
or
cmpb
add
clc
dec
mov
hlt
mov
lds
cli
and
jl
in
cltd
inc
mov
push
add
dec
add
jmp
mov
aad
inc
cmpb
daa
test
imul
call
push
sar
push
jle
mov
or
add
loopne
pop
lea
or
int
or
scas
and
or
pop
adc
fisttpll
push
mov
adc
rcl
push
cmp
imul
push
dec
cmp
rorl
and
pop
cmp
xchg
push
mov
jnp
pop
adc
and
add
test
and
inc
adc
and
gs
push
xorb
scas
mov
lock
jmp
insl
pop
xchg
pop
mov
mov
shlb
add
mov
repnz
into
mov
imul
mov
push
lock
lock
hlt
fs
sub
addb
fcom
mov
pop
rclb
mov
adc
pusha
stos
ret
shl
xor
mov
ljmp
push
sti
add
sub
mov
pop
sbb
inc
inc
loopne
sti
mov
mov
sub
inc
or
mov
js
inc
xor
push
or
imul
push
lds
add
lcall
xor
insb
mov
pop
dec
popa
loopne
sub
lahf
sarl
mov
in
sar
jno
lret
sbb
adc
inc
jns
popa
loop
rcl
insb
sahf
pop
mov
mov
movsb
mov
test
dec
je
dec
scas
xor
cwtl
inc
mov
cli
add
push
add
push
pop
andb
or
inc
fsubr
xor
push
push
hlt
jmp
jp
lahf
sbbl
inc
std
sbb
movb
scas
push
jl
icebp
adc
mov
out
dec
and
sbb
push
leave
sub
nop
and
movsl
ret
xor
sti
mov
pop
mov
pop
dec
ret
fists
dec
jg
adc
mov
add
push
pusha
imul
inc
lret
mov
sub
jg
sti
jg
into
aaa
and
push
sti
cli
dec
dec
sub
mov
nop
pop
xchg
adc
or
addr16
push
popaw
adc
or
jne
test
add
xchg
mov
shrl
sti
mov
fistl
rclb
jge
pop
leave
mov
ret
or
dec
xchg
adc
icebp
jbe
adc
adcb
daa
add
fistps
lret
in
or
pop
pop
mov
mov
sbb
or
mov
push
mov
jne
dec
das
jecxz
lods
push
shr
mulb
pusha
add
sbb
outsb
pop
push
mov
xor
push
lock
push
xor
xor
cmp
and
xor
add
sbb
addl
sub
xchg
flds
mov
mov
scas
jl
shlb
xor
test
mov
adc
lret
xor
adc
push
mov
in
imul
dec
stos
mov
and
sbb
add
cmp
cmp
dec
add
jmp
dec
cwtl
fsubrs
dec
push
ja
mov
aam
mov
jle
or
test
insl
mov
xor
push
scas
add
fadd
dec
enter
sub
mov
jl
pop
in
push
sbb
or
punpckhdq
dec
bound
mov
dec
and
push
dec
push
jg
jge
push
rorb
or
rcrb
or
ficompl
or
fwait
loop
lea
or
iret
pop
leave
dec
push
cmp
shll
sahf
add
icebp
jo
mov
and
jmp
and
dec
cmp
add
daa
aam
shll
mov
and
xchg
inc
cmp
movsl
rcrl
aam
xchg
ss
cs
jge
in
pop
xor
pusha
pop
test
shll
and
pop
mov
mov
out
jle
sbbb
add
xchg
cmp
pop
push
inc
mov
lock
inc
adc
rolb
cwtl
cwtl
popa
mov
mov
pop
fldenv
jg
push
push
sub
je
dec
pop
dec
pop
fisubrl
push
dec
add
cmp
jle
push
mov
fwait
mov
xchg
xchg
xorl
loopne
bound
je
pop
scas
push
and
xchg
sbb
inc
and
push
sbb
xchg
cmp
loope
or
out
ret
pop
aaa
mov
fiaddl
push
jo
push
sbb
and
sbb
inc
movsb
pop
lcall
xchg
inc
sub
and
xor
sub
mov
lcall
sub
pusha
inc
outsb
add
add
int3
repnz
xchg
mov
jae
add
aas
sbbb
sbb
sub
scas
and
adc
cmp
inc
add
sahf
in
add
movsl
mov
mov
ja
and
clc
push
imul
sub
pop
gs
cmp
inc
push
mov
imul
add
iret
pop
fstp
jo
pop
push
loop
fwait
cmp
rolb
or
shll
shl
jno
push
xor
ret
rolb
cmp
mov
iret
mov
mov
sub
xor
addl
add
jae
pop
test
jp,pt
cld
push
push
or
stc
push
cmpl
sbb
pop
test
add
adc
inc
adc
orb
es
jo
imul
pushf
insl
or
or
and
cmp
xor
nop
or
pusha
inc
mov
adc
push
rorl
or
lock
push
shlb
jae
pop
dec
loop
icebp
dec
jmp
int3
jnp
jnp
push
pop
push
fildll
push
sbb
mov
push
push
sbb
sbbl
inc
xchg
inc
xor
adc
mov
push
adc
sbb
sbb
sbb
sub
cmp
loope
leave
aas
dec
sahf
out
mov
mov
or
or
leave
xchg
or
movsl
mov
outsb
aad
push
lcall
lds
xlat
mov
or
std
mov
push
mov
mov
pop
push
nopl
daa
lret
and
out
or
xor
leave
adc
xor
daa
sbbl
ror
and
jge
cs
push
xchg
mov
adc
sbb
push
xor
push
fcoml
or
and
add
mov
and
add
sbb
cmp
movsl
imul
add
adc
fcomi
inc
xorl
and
in
jecxz
rolb
fnstenv
lods
out
add
mov
inc
sbb
add
add
xor
sarb
mov
add
xchg
lret
aad
push
hlt
pop
sbb
pop
and
popa
adc
xchg
jbe
nop
movb
and
mov
in
addl
inc
lods
mov
insb
inc
mov
movsb
pop
leave
xlat
inc
mov
test
adc
test
nop
jecxz
das
dec
js
mov
inc
add
arpl
mov
add
ret
out
movsb
or
add
and
mov
or
adc
pop
or
xor
jg
jg
jmp
cld
sub
dec
mov
in
mov
into
adc
sub
add
out
pop
incb
cmp
or
add
push
cmp
movb
jne
cli
and
cmp
or
mov
call
test
sbb
inc
xor
push
shll
outsl
add
sbb
sub
jae
or
aam
ret
xor
or
dec
cltd
cli
sbb
hlt
or
jae
sub
jmp
icebp
pushf
and
imul
in
sbb
call
adc
or
rorl
lahf
jmp
inc
rcr
pusha
enter
adc
sub
inc
add
add
int3
sbb
adc
and
dec
icebp
les
sbb
fadd
inc
rorb
push
sbb
xchg
shrb
gs
xchg
cs
push
dec
jg
cmp
scas
mov
mov
jbe
andb
mov
ja
dec
adc
cmc
mov
jecxz
cmp
or
inc
outsb
adc
imul
imul
inc
pop
mov
push
pop
add
into
jns
sub
inc
mov
mov
and
ss
ja
xor
xchg
mov
mov
inc
jbe
push
insl
out
lea
arpl
bsf
push
cmpsl
bound
sub
jnp
out
push
jne
inc
andb
sub
or
mov
dec
pushf
sub
loopne
fs
mov
jns
lds
cmp
daa
push
and
jne
jbe
ret
sub
dec
rcll
fmull
js
scas
xchg
mov
ss
ds
in
pop
scas
pop
push
and
jmp
loop
adc
xchg
ljmp
push
mov
add
or
push
xchg
sbb
push
pop
cmc
fldt
test
into
inc
mov
inc
adc
inc
inc
add
adc
dec
pop
pop
push
jecxz
test
rcrb
xor
lea
lret
add
leave
aad
ljmp
mov
and
nop
mov
xchg
add
push
in
leave
jne
jnp
je
cmp
inc
push
shl
push
add
xchg
cmp
pop
gs
cli
jnp
dec
push
or
fstpl
push
mov
pop
inc
call
fsts
aam
out
dec
mov
jne
jb
xchg
or
movsb
cs
lret
inc
xor
repz
movsl
or
mov
fiaddl
add
fwait
dec
in
sbb
and
shrb
dec
daa
pop
andb
insb
mov
imul
jg
fsubs
movsb
test
push
mov
icebp
mov
aas
rcll
jle
inc
push
xchg
shlb
test
rcr
pop
dec
mov
add
pop
xchg
popf
and
inc
inc
mov
mov
jl
add
lret
dec
or
pusha
inc
push
lock
imul
xchg
xorb
test
cmp
jecxz
xchg
inc
inc
sbb
mov
mov
or
fs
sbb
bound
mov
mov
adc
jb
sub
cmp
call
in
test
dec
add
or
push
aas
adc
incl
in
ds
into
out
mov
and
push
adc
sub
add
add
repz
or
xor
loope
mov
lea
and
inc
sahf
adc
and
xchg
sbb
inc
in
dec
sbb
jg
call
and
xchg
in
or
repnz
roll
das
imul
inc
test
adc
bound
mov
fistpl
int
inc
sarb
dec
test
add
push
shrl
or
and
ds
ret
test
lods
je
add
call
cmp
push
cmc
xor
xchg
mov
daa
or
push
adc
add
insl
sub
pop
arpl
xor
sbb
mov
pop
aad
sbb
adc
push
and
and
pop
sub
or
mov
or
or
xorb
stos
and
mov
ret
lea
imul
in
or
pop
and
outsb
enter
pop
mov
fwait
mov
lret
and
je
arpl
sub
daa
mov
movsl
cmp
push
mov
dec
push
fdivrl
shl
jmp
or
dec
dec
xor
sbb
or
or
xchg
push
pop
cmp
xor
psrlw
mov
dec
cmpsb
push
sub
pop
cmp
aas
mov
out
in
cltd
lea
jl
add
dec
arpl
add
ficompl
and
adc
daa
das
xchg
cltd
int3
sub
mov
add
movb
mov
and
sarl
lods
je
or
cmp
xchg
jge
lret
aam
push
sub
or
fcmovbe
xor
push
mov
fs
or
dec
pop
add
aas
pusha
dec
les
dec
mov
adc
stc
dec
pop
imul
adc
cmpl
dec
lahf
popa
and
or
or
inc
js
push
and
xor
ljmp
xchg
add
scas
ret
lock
icebp
push
cmc
cmp
inc
xor
jg
imul
sub
push
xor
xchg
es
orl
and
movsb
aas
pop
and
popa
jmp
adc
lds
jne
ds
pop
push
sbb
cmpsb
out
pusha
adc
xchg
in
add
testl
jmp
fs
push
mov
dec
inc
cmp
lods
add
mov
movsb
pop
or
xor
and
xor
shll
or
sbb
inc
jne
shl
rorl
adc
adc
xchg
mov
dec
sbb
xor
sbb
ss
into
push
sub
push
sbb
cmp
je
add
push
push
nop
fisubs
xor
dec
imul
rcr
or
and
popl
das
mov
subb
adc
or
dec
int3
dec
adc
test
xchg
push
sbbl
add
lret
test
test
ret
pusha
xor
or
nop
xchg
cmpsl
push
add
cmp
sub
sbb
cs
inc
sbb
and
ret
and
dec
stc
rolb
lret
test
push
cmp
aaa
pop
cmp
pop
addb
add
in
repnz
or
lods
mov
pop
pop
test
xchg
cmc
adc
sbb
dec
xchg
inc
cltd
adc
je
inc
push
lcall
and
add
dec
push
ret
xchg
adc
jl
bound
or
pop
xchg
scas
push
test
inc
mov
lahf
push
adc
inc
and
test
pop
test
lods
xchg
add
cmp
outsl
int
sbb
outsb
and
pop
dec
lahf
xchg
aaa
or
xchg
shr
mov
in
xor
lods
jmp
xchg
pop
inc
scas
jb
ret
imul
add
and
lret
jno
addr16
mov
stos
pop
aas
push
mov
mov
push
aas
push
mov
sub
pusha
movsl
fists
testl
sub
pop
mov
decl
sbb
fldl
movb
mov
or
pusha
dec
pop
jle
pop
imul
mov
dec
pop
mov
add
dec
jmp
push
rolb
adc
and
int
xchg
mov
outsb
sbb
movsl
xor
add
dec
and
clc
push
outsl
mov
mov
mov
pop
inc
call
push
mov
fdivrl
xorl
dec
dec
jne
pop
inc
pop
jne
jne
push
and
sbb
pop
or
push
push
or
inc
rol
cmp
pop
cmpb
adc
jo
xchg
xor
sbb
rolb
push
adc
notb
xor
je
push
add
jo
fwait
mov
and
and
cli
ret
pop
iret
mov
pusha
inc
push
ret
add
shll
mov
sarb
out
cmp
jge
xor
daa
and
mov
mov
sub
jl
inc
mov
xchg
add
aad
xor
sbb
ret
sbb
mov
shl
pop
mov
push
jmp
ror
pshufw
sbb
in
mov
adc
es
or
mov
dec
or
push
dec
cmc
cs
in
and
jmp
sbb
and
add
insl
jecxz
leave
gs
jmp
add
cwtl
add
sbb
pop
adc
add
movsl
shll
adc
add
fwait
or
dec
stos
inc
pop
movsl
imul
loope
mov
or
jl
inc
scas
hlt
inc
cwtl
add
xchg
xor
mov
jg
xor
sbb
test
inc
stos
mov
inc
pop
mov
push
mov
test
je
test
add
movsl
movsl
sbb
and
push
fwait
dec
lcall
inc
lds
shlb
pop
out
test
inc
pop
imul
or
mov
call
inc
adc
cltd
xor
jns
add
orl
leave
xchg
bound
fisttps
add
and
repz
call
xor
outsl
repz
inc
bound
addb
pop
int
xchg
mov
lods
and
sbb
and
int
inc
and
adc
inc
addr16
lcall
in
add
or
dec
or
out
leave
add
outsb
or
inc
mov
aad
xor
xchg
les
add
movsl
jl
and
cmpl
inc
rcll
sub
push
test
xchg
add
push
call
dec
dec
xchg
or
cmp
rolb
shrb
cld
jae
xor
sub
inc
cmovge
push
or
stc
and
mov
movsb
add
cwtl
in
sub
inc
add
int3
mov
adc
ret
in
lea
or
imul
cli
add
push
cmpsl
incl
cmpsb
sarl
out
cmp
mov
mov
movb
sbb
les
and
subl
mov
cltd
mov
movsb
mov
imul
pop
rorb
cmp
and
insl
mov
shrl
pusha
jb
cli
addr16
scas
ljmp
dec
iret
subb
call
inc
mov
test
pop
movsl
and
and
mov
pop
negb
and
push
dec
lods
push
inc
loopne
movsl
and
ljmp
adc
sbbl
push
in
jo
rclb
mov
add
mov
mov
xor
push
das
dec
or
rorb
push
test
imulb
lods
mov
stos
rcll
mov
add
mov
lea
mov
push
in
sbb
leave
insb
mov
mov
mov
push
push
lock
cwtl
or
push
mov
jp
mov
sub
pop
test
mov
sub
fstl
lret
mov
rcrl
testl
adc
add
addl
movsb
or
mov
cmp
sub
adc
or
cmp
dec
fsubrs
and
cmp
cwtl
lock
mov
pushf
fisttps
aad
push
adc
cmpsb
sbb
nop
mov
orb
push
sbb
adc
movsb
xor
dec
enter
push
aam
mov
jl
adc
je,pt
inc
sub
mov
nop
cmp
test
add
maxps
dec
insl
push
test
push
push
stos
push
pop
popa
adc
sbb
sbbw
pusha
pop
aad
adc
inc
cmp
inc
jg
jmp
push
inc
and
inc
pop
and
pop
push
push
add
out
sub
xor
inc
xor
sbb
es
inc
inc
inc
sbb
fsts
push
pop
dec
dec
inc
push
iret
fcomps
add
incl
adc
dec
pusha
cmpb
mov
stos
push
pop
nop
iret
cwtl
std
push
cmp
adc
iret
repz
aam
mov
jbe
pop
test
cmpsl
or
repz
inc
xor
fdivr
dec
fimuls
adc
mov
xchg
cmp
mov
lock
push
add
lods
add
push
pushf
sbbl
test
fadd
jo
cmp
xchg
xor
add
push
gs
pop
dec
and
mov
jp
and
test
adc
lds
lret
inc
int3
and
mov
and
inc
js
xor
adc
lcall
mov
inc
jmp
mov
sbbb
pusha
jns
add
or
push
data16
dec
jns
pusha
pusha
inc
pusha
ret
ret
rorb
jne
pusha
js
inc
mov
and
je
fcomps
push
lock
or
imul
es
aas
add
and
adc
sarl
xchg
lock
scas
mov
dec
pop
mov
sbb
dec
push
mov
push
sub
std
add
push
mov
jb
repz
cmpsb
mov
fnstenv
ret
lahf
xor
push
jg
or
enter
or
clc
adc
xchg
movsb
or
inc
add
shrl
jno
inc
cmp
add
fs
push
inc
rcrl
pusha
adc
and
or
and
out
nop
aas
clc
mov
aas
push
cmpsl
das
inc
pusha
add
in
nop
sbb
inc
cld
xorb
movsl
cmp
xchg
sub
pop
lahf
cmp
sbb
sbbb
loope
and
jg
pop
xor
std
adc
jp
inc
mov
and
imul
pop
orl
lock
mov
adc
push
sub
jo
xor
push
xchg
aam
loop
inc
cs
sub
push
cmp
mov
or
rcll
and
pusha
mov
and
inc
ljmp
sbb
push
or
push
roll
das
or
adc
xor
mov
dec
dec
stos
inc
adc
inc
push
jae
loope
jnp
addb
dec
push
jae
xor
add
sub
jge
les
ja
sbb
nop
imul
andl
mov
xor
pop
sbb
dec
out
push
imul
sbb
cmp
mov
addr16
pop
mov
xchg
lahf
inc
sub
xchg
addl
sub
adc
stos
or
adc
lcall
or
xor
repz
fbstp
hlt
pop
lret
cmp
add
inc
aas
inc
gs
sub
pop
pusha
dec
or
ss
add
pop
pop
xor
sbbl
fstl
sbb
cltd
adc
sub
sub
inc
pop
dec
int3
add
and
int3
cmpsb
push
inc
subb
mov
adcl
pop
xor
sub
or
fbstp
push
push
add
jl
add
lods
outsb
mov
jmp
dec
aam
jmp
dec
enter
fwait
testl
push
mov
and
jo
lock
mov
popf
aas
lds
aas
mov
pop
les
xor
adc
pop
test
pop
sub
and
rolb
dec
push
and
addl
lea
daa
movb
rclb
push
fmuls
in
test
xchg
pop
sbb
xor
sub
adc
ja
fdivl
stc
push
push
dec
in
in
adc
and
dec
mov
mov
pop
mov
leave
enter
ret
filds
push
mov
jmp
js
das
push
mov
aaa
or
xchg
xor
movb
inc
dec
push
mov
adc
sbb
rclb
repz
cmovl
mov
and
mov
or
sbb
sbb
sub
mov
aam
push
aam
nop
add
pop
push
or
pop
adc
adc
pop
add
add
jmp
imul
or
or
inc
or
xchg
xor
adc
jne
flds
mov
mov
push
mov
or
fnstsw
fadds
push
add
enter
xor
es
and
arpl
jp
lahf
push
push
call
jle
push
ja
or
les
js
adc
repz
stos
cmp
inc
and
sbb
push
or
sbb
or
ds
shlw
mov
sbb
pop
jl
xchg
mov
shll
jl
cmpb
gs
cmpsl
or
test
or
pop
sub
and
js
mov
add
jb
std
aaa
inc
cmp
xchg
or
in
pop
ret
pop
in
out
and
repz
or
fmul
ret
loop
mov
dec
pop
push
pop
ja
les
inc
mov
xchg
lock
mov
les
inc
mov
in
imul
data16
js
pop
gs
mov
shll
jmp
orl
jle
push
xor
add
push
out
cmpsl
aam
inc
mov
xchg
lods
cmp
push
testb
sbb
push
lea
xchg
popa
or
loop
or
lret
xor
sub
fcoms
or
or
xor
ds
fmuls
push
into
addr16
or
add
sub
test
mov
frstor
push
call
sar
sbb
sbb
inc
test
lods
add
dec
addl
or
sub
push
fisubrl
dec
cltd
xchg
push
aas
sub
cmp
add
xchg
xlat
xchg
jp
aaa
cmc
clc
data16
dec
inc
sbb
push
or
test
adc
jmp
add
test
sub
mov
test
pusha
lret
push
inc
test
jmp
and
xchg
jo
lock
sub
cmp
ret
inc
in
jge
loopne
mov
push
call
outsb
clc
inc
dec
add
or
cltd
add
add
hlt
xor
xchg
in
clc
sbb
xchg
ljmp
sbb
das
jecxz
and
daa
and
xorb
jp
stos
xor
adc
sub
dec
rorb
xor
ja
and
int3
shll
mov
mov
mov
or
push
mov
fs
sbb
fbld
lods
enter
inc
les
mov
sti
push
add
jecxz
add
adc
inc
shlb
push
inc
xor
mov
pop
popf
or
sahf
dec
add
pop
in
mov
mov
dec
mov
outsb
sub
roll
jg
addr16
add
lock
jb
pop
add
addb
sub
or
xor
lcall
shlb
adc
and
aaa
rcll
mov
sbb
mov
add
and
inc
push
pop
and
dec
xor
sub
fwait
xor
gs
and
xchg
lret
or
xchg
nop
push
push
rcrb
pop
or
lock
jns
xchg
jle
cmp
notb
push
fstpl
arpl
sub
push
popf
add
lret
inc
and
push
nop
dec
xor
dec
scas
add
adc
inc
sub
xchg
dec
enter
test
add
inc
test
es
inc
add
mov
std
cmp
and
mov
push
inc
xchg
inc
add
orb
or
add
popl
popa
lods
add
xor
add
and
xchg
xor
mov
jno
dec
push
cs
pop
pop
pop
call
adc
fldcw
and
cwtl
pop
and
dec
ds
pop
inc
push
lods
adc
or
push
push
cmpsl
xor
push
dec
js
lea
cmp
inc
inc
inc
push
jg
mov
push
dec
lock
push
mov
stos
cmpl
sbb
lock
pop
aaa
insl
cwtl
add
mov
rcr
add
enter
adc
dec
mov
rolb
movsb
ret
add
sub
dec
jmp
mov
jecxz
inc
mov
test
flds
and
mov
je
out
cmp
or
loopne
xchg
adc
cmpsl
sub
jge
xor
or
cmp
stos
lahf
enter
push
jns
fdivr
push
call
inc
xchg
push
shl
xor
xor
pop
movmskps
testb
pop
jns
fiaddl
adc
lea
mov
xchg
out
xor
lock
mov
mov
test
or
push
pop
pop
push
add
or
sti
fsubp
xchg
mov
mov
add
outsl
push
jl
and
mov
dec
push
add
dec
xor
dec
add
push
jmp
sbb
push
push
in
ja
jb
xchg
xchg
push
sub
dec
ret
adc
or
adc
dec
enter
fs
insb
and
xchg
sub
iret
jbe
out
pusha
or
std
aaa
cmp
stos
insb
mov
push
mov
sub
push
mov
dec
jne
outsl
push
mov
cmp
mov
clc
push
cmpl
xchg
add
xchg
pop
xchg
je
inc
sbb
adc
jo
jmp
and
dec
xchg
adc
jp
xor
out
lock
mov
insl
imul
mov
test
jne
sub
in
ja
pop
mov
je
movsb
fisttpl
loopne
inc
cs
in
in
cs
enter
inc
cs
dec
cs
aam
jge
xchg
add
imul
mov
jb
pop
lcall
lret
in
xor
xor
out
cs
dec
dec
pop
inc
push
or
cli
sbb
jge
cmp
hlt
xchg
lcall
mov
push
rcl
incl
pushf
addb
add
xchg
mov
or
sbb
push
out
mov
push
push
jne
mov
shll
xor
js
push
push
sub
add
call
cmp
enter
add
and
mov
cmc
mov
sbb
add
add
pop
aaa
rolb
pusha
ss
or
or
loope
add
pop
leave
xor
pushf
or
pusha
mov
or
or
or
cltd
fsubs
jge
xchg
or
mov
adc
out
enter
lock
jbe
add
xchg
enter
push
inc
shrb
jp
cmc
sarl
pop
sbb
rolb
push
orw
rorb
adc
xchg
ret
cmpb
push
pop
mov
pop
or
dec
jae
xor
testb
jne
movzwl
mov
push
cltd
pop
idiv
insl
rcll
xor
mov
sbb
add
outsb
lcall
adc
xor
xchg
xor
pop
add
push
enter
push
and
sbb
sbb
pop
in
nop
adc
sbb
test
ja
insb
mov
mov
andb
mov
sbb
add
and
dec
out
out
imul
pop
idiv
mov
dec
movsb
iret
aad
ja
add
je
dec
jbe
adc
sbb
cmp
addl
sbb
pop
push
subb
leave
fildl
loopne
xor
jo
add
in
sbb
fcom
fbld
fadd
fstpl
pop
fstp
mov
aam
sub
test
adc
fldl
pusha
sahf
jns
or
pop
subb
cmp
mov
jno
scas
mov
push
xor
faddl
add
push
xchg
pop
push
push
pop
pop
sbb
adc
add
daa
nop
lods
push
mov
push
fsubrl
pop
pop
pusha
adc
js
fs
test
mov
mov
ret
pop
inc
xchg
adc
movb
sbb
sarb
mov
hlt
sbb
mov
xor
or
pushf
movsb
lock
fadds
mov
out
sbb
mov
int3
or
and
cmp
out
fucom
inc
mov
push
out
or
push
lock
xchg
hlt
push
sbb
insl
ret
xor
mov
add
ficompl
xorl
jne
cmp
les
test
jbe
cmp
sbb
nop
mov
lods
or
sbb
repz
in
rcrb
rcr
scas
inc
mov
scas
mov
mov
mov
lods
xchg
add
sar
inc
mov
cmp
lcall
pop
push
mov
out
or
and
fsubrs
lods
inc
and
out
or
or
out
and
or
and
mov
xor
scas
mov
sub
lock
pop
push
sub
rcrb
leave
ljmp
inc
cmp
mov
in
jbe
loope
insl
mov
fmuls
shrl
inc
cmc
adc
add
fimull
adcl
out
push
pushf
arpl
mov
pop
push
jge
pop
sub
or
loope
fsubrp
inc
jbe
lock
setl
pop
lock
add
push
ja
cmp
fadds
insb
test
cmp
mov
fldl
push
cltd
push
insb
daa
mov
add
lock
cmc
dec
nop
adc
clc
add
dec
push
jo
push
js
jnp
add
call
push
lahf
out
push
loopne
fmull
pusha
inc
sbb
add
add
test
add
xor
lock
ret
js
push
or
or
or
or
in
shrb
xor
lds
mov
sti
xchg
pop
push
pop
je
data16
or
insl
and
adc
inc
add
punpckhdq
mov
punpckhwd
inc
pop
pop
or
arpl
dec
mov
add
outsb
dec
int3
push
pop
clc
fldl
and
sbb
add
popa
and
jae
pushl
and
push
and
or
sbb
jecxz
or
jg
push
sbb
or
pushl
call
adc
push
lock
xchg
test
repnz
rolb
push
clc
xor
dec
rorb
mov
xchg
jbe
cmp
clc
xor
sahf
in
mov
into
adc
or
push
push
inc
xchg
sbb
adc
cmpsb
xor
push
mov
in
mov
dec
in
cld
pop
sub
inc
pop
push
push
roll
push
je
sbb
pushf
mov
adc
leave
sub
or
inc
cli
or
jmp
movsl
loopne
lahf
outsl
pusha
adc
cld
jp
pushl
adc
int
xchg
and
icebp
ret
cmp
pop
das
hlt
dec
xor
push
dec
ret
adc
mov
push
push
mov
adc
adc
je
adc
loopne
fmull
lds
pop
pop
push
gs
test
sub
fcom
lods
lcall
or
call
jo
add
jl
mov
inc
add
rorb
cmp
stc
push
push
out
and
inc
cmp
pop
rcrl
sbb
and
dec
jb
pop
loop
ss
xchg
rolb
imul
pop
jae
push
adc
and
mov
imul
filds
dec
pop
mov
add
rcll
mov
xchg
mov
mov
or
pop
inc
cmp
sbb
int
xor
push
fmuls
shrb
lret
push
dec
adcb
cmpsb
sti
jbe
les
sub
pop
cltd
mov
pop
push
in
sub
pushf
sarb
scas
sbb
sub
je
sbb
jb
push
mov
xor
xor
rol
in
xchg
lret
aam
add
fstpt
test
mov
je
cli
xor
sbb
cmp
testb
pop
xor
jle
or
push
push
sbb
add
outsb
cmp
jge
mov
mov
clc
push
inc
add
sbb
add
je
sub
pop
mov
push
daa
scas
int3
dec
idivb
xchg
push
add
sbb
cmp
das
sub
jge
clc
push
cs
and
inc
movsb
sbb
bound
lahf
scas
jne
das
aad
xchg
mov
outsb
add
rorl
pop
sub
pop
pop
cmpl
jb
mov
fstps
dec
ss
push
fcmovb
inc
mov
or
adc
adc
mov
sti
adc
adc
jne
movsl
add
mov
pop
sbb
pop
jb
movsb
movsl
and
sub
push
popa
xor
mov
add
cli
scas
add
cmp
sbb
ret
add
lret
ss
dec
sbb
test
ljmp
bound
adc
popf
xorl
mov
xchg
add
ret
stos
ja
cmp
push
inc
mov
data16
add
dec
lock
push
rclb
test
clc
or
fstl
fldl
xchg
xor
pop
inc
movswl
es
mov
push
loop
bound
jle
ja
pop
sbb
adc
js
in
in
in
cld
ret
daa
in
sbb
inc
add
lods
aaa
lods
mov
mov
je
test
xor
add
nop
negl
test
mov
out
dec
pusha
mov
fs
outsb
add
mov
push
lods
push
sub
jb
jge
add
sub
mov
push
clc
push
call
mov
lret
into
lcall
aad
push
cld
and
movsb
cmpl
js
xor
jns
sub
loopne
xor
sub
sub
lock
mov
or
sub
sub
gs
into
dec
jmp
inc
bound
jg
cmp
dec
pop
pushf
insl
mov
push
outsl
mov
jmp
pop
jae
clc
and
mov
cltd
mov
pop
push
pop
mov
je
inc
fwait
xor
mov
dec
cmpsb
das
pushl
or
cwtl
or
push
sahf
dec
mov
inc
add
sbb
lret
lods
ret
mov
inc
es
imul
push
subl
fidivs
dec
cmp
push
inc
add
ss
push
dec
add
aam
enter
xor
cmpsl
mov
xor
jp
arpl
fisttpl
mov
xchg
mov
sbb
inc
lea
aam
and
cs
xchg
je
stos
push
call
mov
cmp
imul
jbe
imul
ret
test
mov
outsl
fsts
sbb
cli
jl
jmp
add
mov
daa
cli
and
cmp
imul
sub
and
dec
push
mov
xchg
jl
mov
lds
add
je
out
push
insl
sbb
lret
sub
xlat
in
mov
pop
xchg
mov
sbb
dec
push
pop
cmp
fstpt
lret
shlb
leave
xchg
stc
or
cli
and
dec
jge
jbe
and
mov
push
decb
adc
dec
mov
rolb
roll
mov
push
inc
sub
and
dec
lds
push
insb
jno
cltd
and
cld
adc
mov
movsw
fnstsw
and
mov
fidivl
mov
sub
idivb
cld
push
or
xchg
mov
lock
psubq
test
pop
adc
or
aam
je
pushf
and
pop
rcl
inc
push
jl
cmp
adc
jg
lods
lcall
movsl
xchg
dec
outsw
adc
pop
sub
sub
mov
dec
movsl
nop
push
sub
adc
xor
adc
push
cmp
pop
inc
loopne
rclb
pop
clc
pusha
aam
cmp
movsb
into
sbb
shlb
sub
fidivs
cmp
pop
and
cmp
les
mov
adc
or
push
pop
lea
scas
movsl
addr16
jb
and
mov
pushf
push
data16
sub
or
mov
sbb
into
and
cwtl
shlb
lea
or
lock
lret
rcr
lahf
xor
dec
es
ss
shl
dec
or
fnstsw
pop
dec
pop
movsb
jbe
outsl
cwtl
push
call
mov
mov
add
mov
call
push
add
daa
jge
push
cmp
iret
add
lods
push
adc
add
and
xchg
sbb
mov
call
mov
lea
movsb
add
add
inc
cmp
inc
ljmp
fsubrs
adc
or
mov
scas
nop
cmpb
and
sbbb
int3
sub
pusha
cmp
add
ja
jmp
and
adc
mov
rorb
push
add
add
pop
add
sub
cmp
data16
and
int
adc
adc
push
mov
int3
fdivl
dec
cmp
xor
or
hlt
loope
movl
or
mov
jno
push
imul
mov
add
sbb
push
mov
jns
mov
js
test
mov
xor
dec
shrl
add
outsl
push
bound
stos
jno
mov
pop
push
xchg
push
xchg
mov
dec
cmc
sbbb
or
je
cld
clc
dec
sub
cmp
daa
dec
inc
xor
addl
cmpl
push
rorb
std
inc
push
enter
xor
mov
insb
dec
cmp
push
ljmp
pop
add
push
mov
push
jo
sub
and
push
mov
jmp
jno
sbb
sub
pop
adc
popf
add
and
adc
outsl
das
or
inc
jmp
adc
fs
mov
add
push
cmpb
call
push
push
push
je
ds
mov
adc
and
mov
add
call
add
xchg
enter
push
pop
jnp
inc
popf
push
imul
test
pop
xchg
addb
adc
sbb
and
pop
ljmp
dec
push
push
xor
jne
sub
dec
push
or
sub
pop
ret
inc
xor
ljmp
xchg
lock
popa
gs
jmp
das
popa
xchg
faddl
enter
pop
sti
lcall
xchg
addr16
cmp
fsub
and
aas
ret
scas
rcr
std
fldl
daa
fs
dec
faddl
adc
xchg
or
dec
dec
xchg
mov
inc
or
daa
sub
fnstsw
and
cmp
test
cmp
push
cmp
lock
es
mov
push
lods
push
fs
daa
dec
popf
inc
dec
in
adc
push
js
jne
call
adc
cvtpi2ps
xchg
sbb
out
jge
mov
into
popf
scas
dec
mov
and
fmul
aas
mov
sbb
add
mov
push
cld
pop
and
xor
jns
push
icebp
jns
or
decl
pop
pop
pop
iret
and
pop
xchg
mov
out
inc
add
push
addb
and
jbe
cmp
and
jne
push
sub
dec
scas
adcb
add
push
and
out
das
mov
push
pop
xor
outsb
or
and
push
stc
push
lahf
add
inc
mov
ds
js
pop
pop
mov
add
add
adc
inc
and
add
out
fistpl
shlb
sbb
xor
mov
ret
adcb
and
mov
and
int
add
in
sbb
lcall
fsubl
pop
xchg
in
mov
or
mov
push
in
jmp
int3
add
lds
fdivrs
xrelease
pop
push
pop
je
push
ret
dec
jecxz
dec
aam
outsb
mov
rcll
inc
cmp
push
cmp
and
mov
fs
roll
or
or
cwtl
pusha
movsl
sbb
jl
sti
jbe
jae
jo
mov
arpl
in
clc
mov
xor
pop
jmp
sbb
idivl
sub
mov
setle
xchg
push
cmp
out
xorb
pop
xor
lret
jns
sbb
inc
push
sbb
movsl
pop
loopne
jmp
or
hlt
mov
mov
add
js
push
sbb
test
ljmp
hlt
pop
add
popa
sbb
fwait
push
xor
inc
rolb
xor
js
sbb
iret
cmpb
pop
jne
sbb
sti
fs
movsb
mov
add
jmp
loopne
loope
fsts
add
mov
sub
sub
push
mov
enter
inc
shll
sbb
add
pop
adc
insl
push
es
das
push
subl
push
je
bound
jp
adcb
iret
pop
mov
or
adc
sbb
or
jne
xchg
add
fnstcw
hlt
adc
pop
push
mov
sub
mov
adc
push
push
dec
mov
dec
dec
aaa
insl
push
inc
add
sub
lret
ret
mov
shll
sbb
inc
push
sbb
xchg
in
lods
lock
jne
adc
popa
test
ss
sbb
dec
cld
cmp
mov
pop
mov
mov
lods
jne
jle
or
outsb
adcl
sub
loopne
pop
jne
loopne
dec
outsb
mov
push
inc
or
int
add
and
add
and
out
push
arpl
pop
or
or
or
imul
inc
adc
iret
mov
bound
sub
push
fnstenv
add
mov
adc
orl
jmp
hlt
jne
test
pop
or
inc
pop
or
pop
je
adc
jo
popa
je
test
push
push
mov
addr16
test
sbb
lods
pop
mov
mov
adcb
adc
xor
enter
add
in
mov
jle
mov
push
or
clc
lret
insl
js
push
clc
sub
dec
xorl
and
cmp
imul
pop
or
shlb
adc
or
rol
cmp
jge
inc
and
ret
pop
push
fidivl
imul
adc
je
or
sub
cmpsb
jnp
js
inc
adc
dec
sbb
inc
je
test
or
xor
push
cmp
insb
push
enter
jmp
rolb
add
xor
into
ret
add
xor
enter
inc
pop
push
sbb
in
push
push
cmp
mov
mov
dec
and
stos
or
aas
push
ss
push
out
es
loopne
xor
jb
jge
add
rorl
pop
cld
es
adc
pop
adc
jbe
push
je
adc
adc
sub
sbb
pop
shrb
inc
pop
add
and
rorl
pushf
push
xchg
bound
sub
mov
pop
enter
dec
xlat
gs
insl
mov
jb
xor
push
dec
jmp
pushl
cmp
mov
lods
adcl
mov
jnp
das
imul
loopne
dec
add
add
or
push
jne
ret
popf
adc
mov
addb
cmp
pop
pop
cwtl
mov
outsl
inc
jo
das
jg
rolb
clc
mov
das
or
outsl
cmp
ret
push
dec
adc
adc
add
lods
mov
adcl
ljmp
push
cmp
rorl
movsb
push
jle
cmpsb
out
mov
notb
push
inc
stos
inc
adc
sbb
sbb
push
mov
jecxz
jge
testb
push
or
inc
push
dec
mov
ret
ja
jmp
stos
adc
clc
sbb
pop
rcrb
push
enter
or
push
jb
mov
subl
and
adc
jo
jecxz
push
call
sub
adc
push
dec
dec
pop
pop
adc
sbb
add
rclb
pop
je
daa
mov
insb
sub
out
mov
ficompl
xchg
sti
mov
ret
cmp
cmp
inc
idivl
pop
outsb
add
loopne
push
jae
nop
aam
lret
in
inc
pop
imull
pop
enter
add
jbe
sub
sbb
mov
inc
mov
push
cmc
push
popa
xor
jne
clc
add
daa
cmp
in
ja
add
fldt
inc
and
and
rorb
mov
push
insl
or
xor
add
push
enter
or
add
mov
mov
jns
insb
jne
pop
xor
movsb
sub
out
inc
dec
inc
jno
lcall
add
push
add
cmpsl
cltd
insb
clc
push
xchg
jmp
out
adc
loope
jb
or
incb
cmp
xor
cwtl
push
and
mov
aaa
push
das
mov
arpl
pop
push
arpl
repnz
dec
fstl
push
add
and
sbb
mov
clc
lea
lahf
sbb
pop
or
dec
xor
push
loopne
xchg
fcompl
ficompl
jns
xor
shl
sbb
pop
and
push
fs
jae
movsb
add
test
sbb
jnp
push
pop
and
ret
or
mov
test
inc
add
lea
test
lock
inc
in
xor
inc
bound
adc
pusha
or
mov
lds
dec
or
or
popf
cmc
cmpsb
adc
mov
rorl
iret
cmp
pop
jle
inc
dec
adc
lock
incb
aad
cmp
orl
fwait
xor
imul
push
lret
adc
inc
add
js
pop
dec
dec
je
push
mov
insb
dec
pop
sbb
pushf
mov
ret
daa
pusha
lock
xlat
sub
mov
jns
mov
pop
lret
lock
out
repnz
sbb
add
test
dec
sub
aaa
add
ret
add
dec
mov
and
mov
fstl
add
sub
xor
loopne
cltd
add
add
sub
loope
lcall
mov
sbb
pop
insl
loopne
adc
xchg
pop
enter
dec
sub
add
sub
and
jecxz
dec
xchg
pop
inc
mov
or
jo
pop
fisubrl
or
fs
pushf
and
or
out
and
pop
adc
cmp
out
xchg
enter
aas
iret
in
rorb
sahf
test
sahf
out
lds
aam
push
adc
ss
fadds
push
sub
and
orb
movsl
shll
cmpb
pop
mov
mov
mov
shll
push
mov
cmc
mov
mov
jg
ja
sub
dec
adc
fldcw
sbb
push
loopne
sbb
jae
and
pop
psubsw
add
call
es
add
call
sahf
push
or
push
dec
push
jae
mov
sbb
sbb
sbb
imul
push
daa
test
adc
or
dec
mov
dec
xchg
or
jne
pop
inc
fdivrl
sub
mov
inc
adc
xchg
aas
xchg
pushf
in
add
xchg
or
lock
adc
cmp
dec
bound
jne
mov
shrl
cmc
inc
xor
mov
bound
inc
jl
sub
jl
mov
fs
test
add
in
pop
dec
call
adc
popa
mov
enter
mov
sbb
mov
stc
pusha
dec
add
sub
xor
inc
fnstenv
inc
jb
shlb
push
fcomps
cmp
mov
or
and
mov
ret
movsb
aas
call
sub
mov
cwtl
addl
and
mov
sub
subl
pop
sbb
jne
mov
movsb
loopne
inc
fwait
shlb
cltd
enter
mov
pushl
sub
jne
xchg
inc
faddl
ret
xchg
pusha
mov
push
mov
xor
orb
sbb
sti
loopne
test
movsw
mov
daa
imul
add
jge
add
call
adc
mov
pusha
movsl
hlt
jo
xor
addl
call
je
sbb
cmp
and
cmpsb
push
xchg
imul
mov
lds
outsl
pushf
iret
sub
sbb
or
xor
ret
mov
push
aam
sub
xor
mov
jb
xchg
aam
jnp
pusha
imul
pop
adc
rorb
pop
pop
or
testb
pop
or
mul
push
push
cwtl
push
push
sub
push
dec
iret
push
pop
daa
inc
cmp
cli
sub
pop
push
adc
pop
fmull
jl
and
sub
cmp
push
jo
mov
sbb
bnd
or
lahf
por
pop
add
xchg
or
inc
lret
jb
movsb
cmp
mov
out
sub
mov
pushf
xor
mov
and
leave
mov
cltd
mov
dec
test
dec
nop
sub
sbb
sbb
movsb
orb
or
fsubrs
shr
into
js
pop
cmp
or
xchg
mov
ja
jb
adc
mov
add
push
and
pop
mov
ret
ret
icebp
push
xor
pushf
fimuls
push
cmp
push
adc
fimuls
clc
add
mov
scas
aaa
mov
jge
mov
insb
inc
loop
lcall
and
cmp
cld
out
subb
cld
or
mov
sbb
push
ja
cld
sti
mov
leave
fs
adc
jo
lock
push
es
push
xchg
nop
sbb
pop
mov
add
lods
dec
mov
mov
in
jle
xchg
add
inc
test
pop
mov
out
or
and
lcall
mov
add
das
iret
jl
xor
nop
xchg
in
add
jge
push
js
or
mov
xlat
and
pushf
push
push
in
adc
push
dec
sub
pushf
cmp
adcb
mov
in
movswl
aas
mov
ret
and
xor
movsb
adc
cmpsb
adc
data16
movsb
mov
lock
in
sbb
dec
scas
mov
pop
sti
imul
mov
fs
movsb
sbbl
pop
dec
in
inc
sub
fs
icebp
mov
or
sbb
adc
xchg
repnz
sbb
mov
sbb
imul
dec
fists
ja
adc
jne
mov
adcl
sti
inc
jb
je
es
movsl
lret
popa
arpl
dec
or
mov
add
jp
push
fadds
dec
call
add
push
or
lods
sbb
call
jecxz
mov
jecxz
out
aad
fists
stos
fldl2t
mov
fwait
mov
jne
mov
mov
ficoms
pop
mov
jb
cmp
mov
sub
insl
nop
jmp
xor
js
dec
aam
loop
sti
loopne
jecxz
dec
aam
arpl
nop
jo
out
sbb
jmp
cmp
xlat
fisubrl
mov
xor
pushf
cmpsb
aaa
shrb
xchg
sahf
push
add
sahf
push
imul
pop
or
mov
into
xorl
sub
lods
rcrl
pop
cmpsl
xor
movsb
lret
adc
add
je
les
pop
sbb
push
xor
or
add
mov
adc
pop
or
arpl
imul
push
cmp
push
pop
in
inc
cs
or
sbb
xlat
add
lcall
pop
fwait
add
push
xchg
movl
sarl
mov
or
dec
jge
jno
js
pop
cmp
outsb
sbb
mov
in
call
call
add
push
xchg
hlt
or
jno
dec
mov
push
dec
xor
ror
mov
add
cmp
rcrl
mov
je
test
insl
test
xor
ret
and
dec
cmp
lods
add
lahf
add
sub
rol
nop
ds
lcall
sarb
add
add
add
push
sbb
das
test
adc
pop
jbe
aaa
rclb
push
enter
inc
cmpsl
jmp
lret
orb
xchg
scas
xor
and
mov
es
and
scas
cld
push
xor
push
dec
fadds
je
push
adc
leave
sbb
out
mov
xor
fldenv
lcall
aam
and
add
mov
sbb
jb
xor
sbb
sbb
out
pop
mov
in
call
mov
cmpb
mov
mov
test
test
cmp
and
sti
in
push
jae
xor
sahf
loopne
cmp
push
outsl
inc
movzwl
jb
cmp
pop
push
loopne
clc
push
pop
and
div
sub
pop
loopne
cmp
in
clc
loope
cmp
ja
subl
xor
push
dec
sbb
lock
in
and
pop
rcl
cltd
and
jb
xchg
ja
push
or
xor
cmpl
pop
push
sbb
jecxz
ret
dec
xchg
jbe
or
insb
sbb
movb
inc
push
mov
clc
pop
and
mov
xor
sbb
loopne
clc
mov
push
push
or
iret
lcall
js
data16
jmp
push
movups
mov
and
cmp
push
mov
sbb
dec
pushl
fidivrs
addb
or
pop
les
dec
pop
pop
xchg
les
xchg
sub
mov
inc
dec
jae
mov
ja
jbe
sbb
mov
in
add
ja
faddp
add
jnp
push
push
cmp
enter
inc
les
cmp
shr
mov
and
jae
stos
ljmp
push
jnp
inc
sub
or
cmpl
or
inc
rorl
sbb
pop
jnp
test
dec
sub
or
push
adc
decl
sbb
mov
xorb
adc
in
push
decb
jns
pusha
fiadds
aas
inc
pop
jne
push
adc
cmpsb
jo
or
push
minps
sub
sbb
inc
into
ret
or
mov
cmp
cmp
pop
mov
xor
or
push
pop
mov
in
cwtl
push
pop
sub
jg
jno
sub
push
pop
adc
inc
xor
mov
jge
push
stos
push
imul
inc
push
addl
jo
dec
add
lock
pop
pop
ret
clc
mov
push
or
pusha
sub
cld
fwait
jnp
loope
dec
push
pop
ret
mov
and
mov
or
cmp
add
push
mov
jno
xorb
dec
sbbb
ljmp
adc
inc
lea
push
aam
sti
ret
shll
mov
mov
jle
push
push
push
push
xchg
loopne
in
fdiv
rolb
add
fadds
pusha
pop
sahf
adc
push
mov
cmp
xlat
inc
push
xchg
xchg
sub
or
xchg
cmp
jp
orb
xorl
aaa
mov
mov
xor
adc
dec
rorl
lret
roll
clc
dec
xchg
add
mov
in
add
xchg
adc
xchg
lahf
pop
push
mov
inc
stos
mov
or
mov
insl
test
nop
test
cmp
insb
js
adc
sub
imul
sub
and
and
pusha
mov
popa
and
xor
jg
sbb
loopne
push
movsb
add
ss
adc
jne
test
scas
or
cmp
fwait
and
int3
shll
stc
or
and
in
enter
or
outsb
jecxz
mov
les
jae
push
das
xchg
pop
cmc
add
add
add
push
sub
xchg
int3
adc
call
sbb
add
mov
push
cmp
dec
shrl
xchg
mov
in
nop
rorb
mov
mov
movb
les
inc
mov
and
imul
dec
mov
mov
inc
pop
add
inc
and
mov
lea
inc
repz
sub
inc
mov
test
add
in
ss
adc
popa
rclb
inc
or
inc
mov
loop
add
inc
or
add
hlt
outsl
dec
movb
sbbl
mov
lcall
addr16
push
jmp
push
or
inc
push
pop
inc
inc
orb
pop
dec
ds
mov
or
xchg
pop
aaa
addb
loopne
cwtl
sbbb
insl
pop
insb
dec
cmp
inc
sub
push
inc
and
or
not
std
es
jp
mov
xchg
adc
or
add
scas
sbbb
sbb
or
push
jbe
xor
or
repz
and
pop
add
adc
xor
xchg
jle
jbe
mov
xchg
and
add
pop
incb
pusha
outsb
cmpsl
push
mov
xchg
mov
push
adc
xchg
rclb
dec
push
inc
mov
fstpl
mov
out
cltd
jnp
roll
push
push
mov
fiaddl
ds
je
xor
pop
pop
movsb
add
mov
sarl
sbb
adcl
fs
sub
push
jns
loopne
insl
xchg
loope
inc
scas
xchg
inc
lea
nop
inc
loope
and
jnp
pop
popa
insb
pop
sub
rcll
push
test
pop
sub
cmp
inc
scas
es
fs
pop
or
push
testl
add
adc
mov
dec
adc
or
mov
loopne
cmp
scas
add
testl
outsl
shll
xlat
mov
ret
call
lret
and
push
ret
push
adc
adc
fsubr
push
cmp
imul
lock
lret
cmpsb
adc
mov
imul
sbb
pop
mov
lcall
xchg
outsl
and
or
add
jge
xchg
pop
lock
hlt
inc
clc
divb
iret
cltd
fcomp
push
dec
cmp
inc
mov
adc
cmp
jne
mov
mov
and
in
enter
adc
push
rol
pushf
pop
dec
mov
mov
jne
add
add
test
bound
adc
mov
cltd
xor
shll
fs
mov
fists
xorl
mov
inc
scas
inc
xor
mov
test
xor
addb
cmp
cs
inc
nop
cli
fldl
rclb
pop
sub
pop
imul
scas
lea
xor
and
aaa
jmp
jbe
jo
js
cmp
pusha
or
es
inc
sbb
lods
loopne
lods
es
push
adc
aas
lea
cltd
or
pop
or
pusha
pop
or
les
and
jbe
sbb
js
push
xor
xchg
pushf
and
arpl
lock
add
pusha
adc
or
cmp
jmp
inc
enter
inc
inc
add
or
jge
sub
sar
mov
js
or
push
jo
dec
push
inc
cmp
adc
mov
jo
xchg
push
push
ljmp
jp
sbb
lea
addb
outsb
inc
cmpsb
sub
sub
cli
test
or
fstps
push
aaa
xchg
inc
jmp
je
adc
nop
adc
clc
fstps
pop
sub
aaa
xor
xorb
inc
mov
xchg
mov
lret
adc
adcl
ja
mov
aam
lods
adc
xor
repnz
mov
cld
fsubrl
or
ret
jmp
enter
movsl
xchg
inc
or
inc
scas
cmp
xchg
inc
out
push
push
cmp
cmp
std
std
inc
inc
fnstenv
mov
dec
xor
idivl
cltd
je
sub
sub
leave
push
loopne
add
xchg
cwtl
inc
cs
sbb
xchg
inc
lea
or
pusha
mov
in
or
mov
add
xchg
js
test
lcall
int3
movsb
rolb
fsubs
or
pop
mov
in
mov
mov
lock
lahf
xchg
xchg
movsb
rolb
mov
enter
sub
jecxz
push
int3
push
push
xlat
dec
mov
in
fimull
loopne
or
push
js
jmp
test
loop
cmp
sbb
sbb
mov
sub
aam
fcom
loopne
mov
or
or
xchg
fstl
xchg
jae
and
out
mov
fcomps
jne
cmp
sbb
pop
pop
adc
std
xchg
cmpsb
imul
cld
outsb
sub
test
sub
inc
insb
leave
fwait
ret
xor
mov
xchg
add
sbb
xor
out
add
xchg
fisttpl
movups
mov
and
mov
in
add
xchg
ficoml
or
shlb
fdivl
xlat
and
or
scas
push
adc
inc
rcrl
ret
test
jle
negl
jle
lea
add
les
stos
mov
mov
mov
lods
scas
mov
enter
pop
pop
push
sbb
mov
ret
pop
aaa
push
xchg
rcrb
movsl
movsb
push
dec
add
or
pop
in
test
scas
add
loope
inc
xchg
push
mov
ud0
mov
dec
mov
jmp
pop
addb
inc
inc
test
adc
fimuls
sbb
inc
inc
mov
in
push
or
jl
push
cmp
cmp
testb
inc
push
inc
push
pop
fstl
or
adc
pop
add
in
sbbb
loopne
testb
jo
iret
dec
inc
pcmpeqd
stos
cltd
adc
add
sbb
inc
jge
jbe
jle
sub
inc
adc
add
idivb
adc
rol
sti
xchg
pop
push
sbb
adc
les
test
adc
xor
adc
xor
sub
addr16
or
dec
cmp
rcll
dec
xchg
jle
pop
inc
and
cmp
dec
in
adc
adc
pop
in
add
pop
push
push
or
lock
lods
push
jno
mov
dec
mov
std
xchg
jle
push
pushl
xchg
inc
faddl
jmp
ss
cmpsb
rolb
push
add
xor
arpl
or
mov
insl
lea
sub
test
jne
pop
jbe
jne
movsb
lret
and
bound
loope
mov
scas
aad
inc
rclb
jl
add
addl
rolb
rcrl
ficomps
mov
add
sub
clc
sarl
xor
int3
sbb
cmpb
dec
int3
fisttps
out
stos
mov
xor
xorl
cs
and
add
loop
imul
fnstsw
ss
jns
andb
sbb
sbb
test
jg
push
sub
lcall
inc
aam
int3
pop
and
shll
jp
xor
add
movb
xchg
pushf
imul
push
loope
shrb
loopne
sub
mov
loopne
sub
scas
call
and
in
push
jnp
and
and
je
mov
out
lods
std
add
out
rorb
pop
scas
mov
xchg
das
jle
lock
or
addr16
xlat
rolb
test
loope
sub
and
mov
enter
push
mov
pusha
arpl
or
pop
sbb
push
mov
pop
mov
ljmp
mov
or
inc
push
xchg
rorb
sub
inc
push
in
jp
or
clc
jp
and
das
mov
cld
add
or
adc
add
loop
mov
sub
mov
test
push
or
lahf
xchg
std
inc
mov
loopne
cmp
add
test
orb
pop
pop
adc
ss
add
rcrb
xor
ja
fdivrs
je
and
lcall
sub
push
mov
mov
pop
outsb
pop
je
jb
add
outsb
out
cmpsb
or
adc
push
outsb
push
pushl
cmp
sar
xchg
mov
popa
adc
or
xor
ret
xchg
in
sbb
and
ret
push
leave
fs
stos
xlat
sarb
inc
mov
lahf
dec
sbb
xor
neg
push
in
inc
or
movsb
cmp
and
pop
loop
cmp
lea
and
push
mov
mov
xor
js
ret
dec
push
das
xorl
addr16
dec
lods
mov
pop
xchg
popf
push
dec
movsb
sbb
adc
and
or
mov
aaa
fdivrl
jb
ret
push
call
pop
mov
or
jl
add
add
loop
inc
xor
adcb
xchg
sti
jmp
push
jnp
push
les
enter
adc
mov
mov
les
mov
xor
xchg
mov
push
mov
xchg
push
push
add
push
inc
mov
xchg
out
mov
mov
shrb
sbb
mov
aam
dec
inc
and
jbe
rcrl
ss
inc
push
sbb
test
cmp
test
testl
ret
push
sub
dec
call
test
add
sub
adc
lret
cmc
pop
mov
push
jle
jge
pop
cmc
fildl
and
sbb
jge
pop
fcmovnb
add
fmuls
and
mov
dec
loopne
in
jecxz
sbb
seto
iret
lods
jle
mov
inc
or
out
cmc
sbb
push
or
sti
push
pop
inc
mov
insl
jmp
mov
pop
psrad
push
ja
jle
mov
mov
pop
inc
mov
cmpb
mov
addr16
test
in
add
fs
lcall
dec
push
incl
mov
push
pusha
cmp
push
adc
and
push
xchg
fs
sub
adc
and
test
and
out
adc
dec
pop
push
mov
movl
or
ffree
dec
pop
mov
sbb
sarl
outsb
or
gs
imul
outsb
test
cmp
lock
sub
in
orb
scas
daa
sbb
push
mov
sub
push
adc
cmp
or
push
test
test
jl
arpl
or
jmp
movb
add
imul
add
and
jne
or
add
stos
pushf
push
mov
pushf
jns
fidivrs
or
cmp
push
pop
daa
in
mov
add
movb
add
or
or
mov
pop
into
aam
pushf
jp
mov
pop
xchg
jbe
leave
push
aam
ljmp
and
xlat
ja
jp
mov
mov
int3
lret
xor
jge
movsb
fsts
adc
loop
roll
push
lcall
mov
or
or
adc
or
and
push
iret
add
jns
push
push
mov
or
loope
xor
mov
mov
imulb
fmull
dec
and
xchg
ljmp
es
sbb
test
cmp
ret
push
mov
or
sbb
lcall
sub
push
inc
or
int3
pop
add
adc
jnp
and
xor
mov
mov
stc
dec
fcmove
mov
dec
push
ficoml
mov
pop
fistps
outsl
and
inc
xor
nop
dec
shlb
sub
or
call
add
push
push
or
adc
mov
sti
mov
sbb
pop
add
xor
add
shrb
push
lea
push
xchg
xor
push
xchg
pop
cmp
xchg
jg
xchg
call
dec
pop
jne
pop
and
inc
or
pop
cli
pop
push
adc
push
in
mov
mov
jo
imul
dec
push
xor
adc
and
and
es
out
xor
adc
pop
shll
push
adc
sub
outsb
sbb
cmp
jo
fsubl
sahf
or
inc
pop
sarl
inc
xor
mov
orl
sbb
adc
add
fcoms
sbb
es
dec
or
test
mov
adc
inc
jecxz
inc
out
sbb
adc
adc
dec
test
adc
test
and
and
jecxz
pop
call
add
repz
push
push
or
fcom
add
data16
jge
adc
aam
and
mov
rolb
pop
rcrb
adc
and
mov
dec
pop
mov
jne
popa
inc
mov
popa
pop
mov
pop
neg
pop
sbb
popa
mov
jne
rolb
jl
negb
add
and
stc
dec
mov
push
dec
mull
adc
popf
push
fisttps
lahf
lods
pop
mov
jmp
roll
mov
sbb
push
shrl
xchg
jmp
or
cmp
push
sbb
jbe
jge
insb
inc
and
fisttpl
xchg
popa
push
adcb
cmp
or
cmc
test
and
jecxz
inc
sub
je
sbb
stos
or
inc
movsb
add
jo
test
fists
xor
jb
xor
jmp
mov
push
test
inc
add
fldl
imul
adc
clc
loope
ret
enter
add
rcll
pop
cltd
add
fcoml
and
addb
ffree
sbb
inc
mov
cmp
xchg
mov
push
ret
adc
shl
div
push
pop
sub
je
or
jle
push
shlb
add
inc
or
xor
jbe
xchg
adc
push
stos
mov
mov
or
push
or
push
cmp
stos
sbb
and
inc
inc
je
int
js
jle
sbb
jl
mov
fiaddl
add
adc
pop
rcrb
push
aas
fidivrl
add
xorb
js
out
insl
push
cmp
cs
cmp
adc
sub
mov
cli
decl
and
sahf
insl
pop
aam
inc
cmp
mov
lcall
test
cwtl
cld
or
hlt
add
hlt
adc
mov
ret
mov
adcl
adc
adc
mov
adc
jae
cmp
push
movsl
fldl
add
or
adc
dec
adc
pop
jo
lds
lret
or
ret
add
cmp
adc
call
es
lea
push
push
push
xchg
adc
dec
addb
add
outsb
in
push
and
lock
inc
or
sbbb
xlat
adc
leave
clc
push
dec
push
ja
jne
ljmp
les
mov
cwtl
ret
aam
dec
mov
xor
add
add
adc
sbbl
rorb
cmp
es
ds
push
push
dec
push
lret
xchg
lret
aaa
rorb
inc
loope
leave
enter
test
nop
dec
scas
fbstp
dec
inc
or
loopne
gs
mov
fwait
lret
sub
test
xor
fstpl
insb
mov
or
mov
mov
sarb
add
add
cwtl
jl
adc
pusha
inc
lods
bound
sbb
es
xor
xorb
lret
repz
mov
mov
adc
icebp
inc
pushf
push
fstps
bound
pushf
jl
jne
fidivl
paddsw
cmpsb
pop
xor
adc
mov
or
fs
jo
insb
pop
inc
adc
push
lea
leave
and
mov
adc
sbb
ja
popa
mov
mov
sub
insb
leave
pop
ss
xorb
mov
jns
add
in
es
outsl
dec
or
inc
rorb
xchg
add
pop
adc
add
or
jecxz
leave
add
jbe
rorb
addr16
leave
xchg
or
shlb
cmp
push
shlb
out
push
inc
jb
aad
inc
dec
or
add
mov
ldmxcsr
leave
pop
jge
sbb
adc
mov
mov
fwait
rclb
jne
movswl
sub
push
outsb
inc
jb
and
lret
sbb
adc
inc
sub
test
loopne
sub
es
das
fldl
fsub
pop
pop
jo
aaa
fldz
cmp
pop
int3
inc
data16
push
aas
loopne
fdiv
pusha
incl
push
push
push
pop
dec
push
dec
sub
fs
adc
ja
inc
cmp
movsb
arpl
cmp
jg
sub
sbb
jae
add
mov
es
adc
pop
fildll
jo
add
xchg
inc
mov
mov
aad
jmp
and
sub
lret
mov
mov
xchg
cmp
leave
jbe
fld
adc
pushw
icebp
in
cmpb
and
loopne
fstpt
clc
jl
ud0
imul
jb
rol
add
subl
adc
adc
rcl
rcr
subl
dec
sub
cmp
roll
roll
imul
pop
add
roll
icebp
xchg
or
inc
sbb
inc
movsl
jp
sub
loopne
push
leave
cmp
and
sub
mov
or
push
mov
or
jle
ret
add
sbb
push
mov
fcoms
and
jo
addb
loop
mov
add
jge
or
dec
add
pop
jg
push
add
in
sub
inc
push
xor
and
xor
adc
add
sbb
mov
popa
lret
inc
dec
sub
ja
xor
jo
clc
and
mov
xor
push
mov
add
loope
dec
mov
and
data16
dec
andl
testb
and
adcl
call
push
inc
ss
adc
pop
imul
mov
popa
inc
cmp
scas
mov
mov
ss
ja
mov
mov
hlt
xchg
sbb
rcrb
inc
adc
std
sahf
sbb
adc
pop
mov
add
mov
or
aam
fsubp
rorl
std
dec
in
fwait
sub
loopne
cmp
ss
bound
daa
push
dec
ljmp
pop
or
or
jo
inc
mov
mov
cmp
jne
add
pop
jb
lea
addr16
call
movsb
nop
je
mov
push
pop
pop
ret
push
stc
pop
sub
ret
dec
push
lcall
push
mov
mov
cmp
ret
data16
dec
add
cmp
lahf
jmp
ret
xorb
mov
dec
adc
pushf
cld
xchg
adc
adc
test
push
inc
cs
cmpsl
lods
mov
push
inc
push
and
pop
cmpsl
adc
sub
ret
cmp
dec
or
lock
cmp
les
int3
add
lret
lea
xchg
addb
jns
push
inc
adc
lcall
cmp
rol
mov
repnz
pop
mov
aaa
fdivl
inc
fdivs
xchg
dec
fildl
mov
ret
es
fcoms
xor
pop
sarb
clc
add
push
add
dec
leave
inc
ret
add
add
dec
es
shrb
sub
bound
adc
call
dec
sub
cltd
and
ret
mov
lcall
mov
data16
adc
xor
mov
jmp
jle
mov
mov
adcb
mov
lret
mov
push
fcompp
pop
clc
and
rorb
fstpt
movsl
mov
cmp
movsl
jno
or
lods
push
iret
add
push
cmp
push
cmp
sub
in
or
mov
call
popa
xchg
adc
xchg
add
mov
dec
jo
pop
js
mov
sahf
imull
push
lcall
mov
mov
mov
pop
pop
andl
sbb
cltd
inc
movsb
lods
mov
bound
test
cwtl
lea
lods
jne
or
clc
xlat
int3
popa
push
inc
cmpsl
je
dec
mov
loopne
inc
inc
fnstsw
scas
inc
xor
subb
fneni(8087
xor
aad
push
in
mov
xor
ret
iret
jg
inc
lds
sar
sbb
fstl
mov
test
pop
xorl
mov
jb
jge
add
call
ret
cmp
cmp
or
inc
pop
add
addb
or
add
xor
push
inc
lcall
pop
mov
push
jbe
daa
mov
push
or
and
int3
fiadds
lret
inc
cmp
adc
pop
mov
rcrb
outsl
xchg
sbb
mov
outsl
daa
test
and
xor
test
rorl
add
not
mov
rolb
daa
inc
pop
icebp
in
dec
adc
pop
or
je
jmp
or
xchg
push
cmp
push
into
je
or
test
mov
sbb
inc
in
lret
or
cld
adc
jne
mov
inc
push
cmpb
ret
cmp
adc
data16
sbb
call
cmc
test
andl
fdivp
repnz
loopne
rolb
or
pop
adc
jl
cmp
adc
loopne
inc
xor
jle
popa
and
fmull
push
inc
and
gs
add
lock
push
add
and
insl
rcll
add
sub
les
ja
inc
pop
mov
in
cmpb
sub
adc
leave
push
mov
xor
mov
xor
pop
dec
sarb
jae
lock
sarl
jne
jns
into
ror
jbe
push
pop
aad
xor
out
pop
inc
inc
mov
push
add
pop
lds
movsb
mov
into
shr
mov
ret
push
addr16
mov
sbb
add
bound
subl
mov
js
inc
sbb
filds
pushl
push
loopne
push
call
adc
out
test
bound
xchg
or
add
push
orl
sbb
ja
jne
push
clc
push
xor
or
call
add
pop
push
inc
ss
adc
cmp
mov
or
pop
nop
inc
push
fcomi
loop
push
fdivrs
popf
shlb
into
add
loop
es
adc
push
jns
jmp
fiaddl
loope
and
pushl
or
lea
and
les
fbld
push
adc
daa
and
data16
ds
mov
adc
call
sbb
pop
dec
sbb
adc
inc
or
push
rcr
scas
cs
iret
xlat
xchg
inc
sbb
or
daa
cmc
cmpl
or
nop
cld
notb
lea
enter
sahf
push
mov
push
mov
repz
arpl
or
pop
sbb
or
or
cld
mov
das
add
push
push
imul
mov
dec
add
sub
add
fcmovnu
jne
add
jecxz
adc
lods
leave
mov
call
add
shufps
pop
enter
mov
decl
cmpsb
insl
sbb
and
jno
mov
jp
adc
out
pop
in
adc
aas
ret
or
adcl
adc
or
mov
fcmovu
gs
mov
ss
je
or
je
add
jl
aam
pop
loopne
decb
pop
and
adc
cmp
xchg
lods
sbbl
dec
add
adc
scas
inc
ds
xchg
pushf
mov
and
out
in
rolb
nop
sbb
push
mov
or
scas
inc
lea
hlt
divb
jle
xor
hlt
push
shl
and
sub
and
mov
mov
call
mov
xchg
push
in
xchg
add
or
in
inc
xor
andl
sbb
fnstenv
movsl
xor
lcall
daa
testb
mov
push
or
pop
dec
clc
pop
xor
adc
ja
movzbl
loope
or
bound
sbb
mov
jmp
loopne
push
adc
adc
inc
shlb
push
jmp
sub
push
adc
pop
loop
pop
add
fimuls
clc
jle
and
sti
lret
pop
jns
out
xor
xor
add
out
adc
add
push
xchg
add
push
adc
add
add
addr16
add
push
and
and
aam
daa
sub
and
test
xchg
jnp
dec
je
add
rcll
cli
dec
or
push
loopne
jne
out
add
clc
push
add
jmp
sub
icebp
xor
xlat
mov
faddl
push
adc
jp
rcrb
fdivs
or
jle
and
sbb
fcmovnbe
sub
pop
je
cmp
adc
xorl
add
jne
or
inc
leave
add
call
sub
pop
je
sub
je
push
or
or
fldpi
or
pop
stc
repnz
pop
stos
mov
imulb
cmp
sub
jne
xchg
push
add
fildl
mov
and
test
enter
mov
loopne
xchg
cmp
pop
or
adc
test
adc
add
push
sbb
mov
hlt
fsubrs
xor
ljmp
inc
js
inc
jbe
cmp
mov
popf
jo
in
popa
jno
bound
jae
mov
pop
loope
add
dec
sbb
xor
mov
add
jbe
or
add
rcrl
xchg
mov
sbb
sub
addb
ret
and
ds
push
mov
and
fbld
sbbl
addb
xlat
jb
insl
add
test
lock
push
andl
lods
test
into
in
test
inc
loopne,pn
je
loop
xor
repnz
loopne
inc
ret
add
sub
ss
jl
out
xchg
rcr
mov
adc
lods
ja
lret
mov
lret
outsl
gs
in
lods
adc
cmp
cs
bound
mov
lods
mov
mov
jbe
pop
add
ja
pop
ja
add
jo
outsb
jmp
xor
or
jg
inc
stos
push
cmp
into
pusha
mov
arpl
fstl
mov
inc
ss
outsb
icebp
rolb
xor
pop
dec
shlb
cmp
mov
push
push
jle
inc
test
xchg
inc
and
lock
nop
adc
push
mov
xchg
test
add
pop
inc
shlb
orb
mov
pop
js
and
mov
mov
pop
bound
and
imul
inc
enter
push
call
xor
xor
xchg
loope
mov
xchg
mov
jp
add
loop
loopne
dec
lock
jge
icebp
cltd
jge
mov
and
add
stc
js
mov
inc
sbb
pop
pop
mov
dec
add
rclb
add
jo
cmp
sarb
add
rclb
stos
dec
test
int
mov
cmp
cmp
les
daa
cmp
sbb
loop
pop
mov
nop
ret
shl
pop
and
in
popf
dec
pop
pushf
jbe
pop
jne
lret
mov
sahf
jne
or
pop
pop
mov
test
ja
aam
jecxz
or
jp
dec
out
add
and
roll
das
repnz
adc
push
adc
dec
jbe
xchg
pop
jne
dec
cwtl
test
sub
imul
or
lds
inc
je
push
add
and
push
orl
push
ret
ret
adcb
pop
test
popl
add
mov
arpl
out
jne
test
pusha
loope
inc
push
xor
jbe
je
push
and
push
pminub
andl
pop
je
mov
or
cmp
add
and
push
jmp
or
aam
push
mov
sub
pop
xchg
test
push
xchg
push
cmpsl
dec
jl
xchg
adc
push
inc
fnstenv
lcall
inc
pop
add
fwait
mov
adc
std
ret
dec
inc
cmp
sub
sarb
add
in
sbb
test
push
cltd
mov
sbb
inc
lock
push
loop
int3
or
xor
ss
sub
faddl
and
dec
dec
dec
pcmpeqw
sbb
dec
pusha
test
andl
adc
push
add
loopne
jns
and
pop
cli
mov
push
jl
push
inc
cld
cmpl
sbb
icebp
inc
je
jmp
lret
dec
or
adc
or
xor
ljmp
pushl
push
fsubp
sbb
xor
xor
adc
data16
push
cmp
ja
lods
jl
cmp
repz
dec
xor
mov
lods
push
and
sub
sub
pop
sbb
cmc
add
pop
aam
mov
mov
lahf
gs
xor
inc
mov
inc
cmp
jno
push
cli
lret
mov
dec
popa
shr
repz
pop
cmp
and
pop
jmp
or
sbb
jecxz
int
movsb
arpl
push
div
jg
mov
add
add
mov
add
jo
inc
add
push
dec
jl
push
inc
loope
jae
add
jl,pt
xchg
push
and
outsl
or
lods
insb
sub
push
fiadds
pop
xchg
repz
test
adc
or
mov
frstor
push
jmp
rolb
pop
mov
loopne
loopne
test
jae
add
adc
add
inc
adc
push
adc
mov
add
pop
adc
xchg
adc
and
adc
pop
pop
pop
daa
or
insb
ja
scas
popa
sub
in
sbb
cmp
adc
cmpsl
xchg
sub
cmp
xchg
cmp
push
imul
sbb
sahf
add
and
mov
cmpsl
mov
ja
movsb
xor
sbb
and
jo
js
sub
adc
add
xchg
sub
and
push
push
loopne
stc
or
adc
dec
fmull
lea
fsub
leave
stos
cmpsb
push
xlat
push
test
mov
sbb
jb
add
or
adc
push
xor
sbb
adc
sbb
lea
push
or
cmc
cltd
dec
fisttpl
mov
dec
ror
sbb
aaa
clc
xor
loopne
pop
shll
data16
push
add
testb
sbb
adc
je
jmp
fwait
mov
add
ret
jne
pop
loopne
adc
inc
sbb
mov
outsl
push
ds
cmp
adc
insb
test
or
mov
and
jge
daa
rclb
adc
cmp
shrb
adc
sub
and
jne
push
and
adcl
jecxz
mov
test
inc
push
mov
and
sbb
fwait
nop
push
sub
scas
xor
pop
popl
add
sub
ss
inc
or
fcoml
dec
add
movsb
push
pop
add
nopl
jecxz
pop
rorb
imul
divl
mov
add
mul
pop
pop
dec
faddl
aaa
fwait
inc
sub
jo
out
adc
lret
imul
or
aad
inc
sarl
sbb
push
loope
adc
mov
push
roll
push
cmp
and
or
lahf
sub
sbb
mov
popf
sub
andb
jne
cmc
or
mov
jmp
pop
mov
adc
mov
out
jb
and
and
shll
call
popf
mov
or
sbb
push
bound
inc
jo
ds
push
xchg
pop
or
jg
cli
lods
fcoml
popa
xchg
and
vpcomub
push
aas
or
mov
in
push
jae
pushf
push
cmpl
cmovae
xchg
call
mov
or
scas
into
sub
inc
mov
and
pushf
fnstcw
dec
mov
out
adc
in
sub
lock
popa
lods
and
sub
call
inc
cli
aas
rorb
lret
pop
mov
subb
mov
movsl
lods
sub
lret
call
rolb
inc
cs
hlt
inc
dec
js
mov
pop
in
daa
pop
and
and
add
iret
dec
insl
sub
mov
fisttpll
mov
aas
sbb
into
or
sub
in
inc
movsb
push
push
dec
add
fbld
cmp
or
dec
and
enter
rorl
pop
add
push
push
popf
dec
or
aad
je
sub
xchg
mov
pop
imul
mull
dec
cmp
ret
mov
sub
push
add
loop
mov
sahf
push
dec
jo
dec
fistpl
and
cld
mov
sub
test
fnclex
ret
ret
mov
cwtl
xor
frstor
adc
jb
xor
jmp
jo
je
adc
stos
mov
rcr
push
and
sarl
pop
mov
in
scas
sbb
fnstcw
addw
xchg
lock
push
xchg
sti
inc
or
inc
pusha
testb
sub
test
and
push
xor
icebp
dec
sbb
xchg
sub
push
loop
push
adc
ljmp
jle
xor
mov
add
jle
imul
or
fwait
add
push
or
inc
jmp
faddp
xlat
mov
and
lock
test
sbb
dec
push
mull
or
add
xor
pop
adc
pop
shlb
pop
and
push
test
inc
jne
bound
push
out
inc
cmp
dec
push
fnsave
in
aam
ret
push
test
pop
frstor
fldl
adc
popa
jae
xchg
inc
flds
in
ss
dec
cmp
or
xchg
mov
add
out
xchg
mov
ficompl
xor
in
pop
imull
mov
fldt
je
mov
in
sbbl
xor
mov
or
dec
or
imul
mov
lods
loopne
add
fcomp
test
into
jne
mov
and
mov
fldenv
loopne
lret
fiaddl
sbb
insb
mov
sbb
popa
pop
push
je
push
xor
pop
or
cltd
scas
and
cmp
and
in
cmp
xor
inc
or
pop
lea
and
xor
cwtl
js
jle
and
inc
idivb
movb
inc
outsb
mul
testb
out
aad
loope
pusha
imul
dec
sbbb
and
adc
jnp
movsb
fistl
jmp
inc
add
xor
clc
imul
aaa
mov
sbb
inc
jns
addb
adc
or
sbb
sbb
pop
ficompl
fsubl
in
es
push
xchg
xor
adc
pop
adc
mov
cmp
fprem
dec
andl
fwait
sahf
jp
fstp
aas
rcrb
jecxz
mov
ljmp
fsqrt
sub
pushf
in
repz
mov
int
mov
je
inc
pushl
lcall
inc
jmp
pop
pop
in
and
lock
pop
push
pop
mov
and
pop
push
daa
push
sub
sub
sub
and
testl
mov
jmp
mov
xlat
mov
cmp
lahf
push
mov
clc
and
ret
and
push
jge
lock
mov
jge
fwait
mov
les
and
jmp
loopne
mov
push
adc
enter
or
roll
inc
pop
insl
dec
pop
jmp
pop
jo
js
rclb
or
jmp
clc
cmc
add
and
fldcw
push
add
int
or
or
add
inc
push
or
xor
adc
jp
dec
xor
fwait
sbb
bound
adc
std
mov
or
repnz
mov
mov
hlt
add
ret
adc
fcomps
jg
dec
push
lock
inc
dec
mov
dec
or
pop
jno
mov
std
xor
gs
jo
mov
sbb
xor
push
movsb
push
and
daa
cmp
pop
sbb
sub
mov
rcr
ret
das
push
sbb
cmpb
sub
bswap
jle
cmp
les
sti
add
inc
cmp
fwait
mov
or
adc
add
jb
cmpsl
or
dec
mov
mov
fcomps
arpl
mov
loopne
pop
pop
xchg
test
and
or
or
inc
ret
mov
imul
mov
pusha
std
rcrb
xchg
mov
cmp
fs
lahf
add
cmp
sahf
cld
sbb
inc
fs
je
cmp
or
test
into
leave
or
xchg
cmp
pushf
hlt
adc
ljmp
cwtl
in
sub
enter
mov
test
or
cmp
shl
dec
push
divb
nop
push
bound
rclb
shlb
fcom
or
fsubs
lds
xchg
pusha
sub
and
push
hlt
clc
sahf
inc
jo
mov
and
insl
clc
cmp
sub
inc
int3
movb
push
lods
dec
sbb
fidivl
repz
push
or
int3
add
pop
imul
jnp
fmuls
mov
sub
popf
int3
outsl
sbb
mov
ret
mov
and
jbe
movsl
and
shl
bnd
cld
or
adc
jmp
add
imul
repz
imul
sbb
aad
test
ja
pop
les
lock
ss
lret
and
js
jbe
in
stos
dec
lcall
pop
add
cmp
aas
dec
dec
push
mov
lret
adc
add
add
fldenv
mov
jbe
xchg
sbb
adc
rolb
ljmp
ret
mov
inc
loop
cmp
addr16
add
dec
jle
add
push
push
xor
movsl
negl
or
pop
pop
hlt
movsb
add
cs
and
sub
loope
lret
mov
jl
add
push
push
mulb
call
ret
popl
pop
and
loopne
iret
jns
shl
push
jo
xchg
lock
or
push
lock
inc
fisttpl
pop
adc
mov
adc
jne
insb
mov
add
xchg
push
pop
jmp
pop
dec
jmp
cli
mov
jo
inc
add
movzbl
sbb
jns
mov
mov
cmpsb
test
sbb
push
cmp
push
aam
cmpsl
js
fldl
inc
ret
fimuls
test
fmul
nop
inc
sub
inc
sub
pop
mov
jne
pop
xor
mov
test
or
pop
xor
mov
testl
test
jne
mov
popf
cs
ret
push
sub
dec
rolb
cli
mov
sub
inc
fisttpll
cld
or
test
sbb
sub
test
test
imul
insl
mov
pop
push
add
sahf
jbe
push
add
sar
jmp
sbb
sub
adc
rorl
push
sbb
add
push
pop
into
jp
pusha
aaa
or
cli
imul
mov
push
mul
insb
push
or
dec
iret
add
js
loope
add
loope
rcrl
cmp
mov
jns
test
fimuls
stc
pop
push
inc
mov
push
dec
scas
pop
cwtl
mov
pop
das
xchg
roll
addb
insb
add
push
ss
and
or
aam
mov
inc
jns
add
push
imul
adc
call
je
mov
mov
addr16
aad
and
pop
mov
mov
jmp
mov
sub
dec
mov
rorb
cmpsl
or
inc
xchg
xchg
pop
push
int3
cli
out
push
pop
loope
sbb
jnp
hlt
lea
clc
xor
rclb
sbb
insb
adc
xorb
dec
je
call
stc
imul
lcall
sbb
scas
mov
push
sbb
roll
jp
xchg
hlt
ja
or
sbb
clc
fidivrs
xchg
test
or
mov
clc
mov
push
inc
ja
and
call
or
rcrl
rclb
add
outsb
hlt
testb
cltd
xchg
sbb
adc
out
adc
add
or
xor
or
jmp
or
mov
cmp
or
push
jne
lcallw
loope
pop
jecxz
in
cld
mov
sbb
add
imull
leave
add
mov
test
inc
inc
ds
pop
or
adc
add
int
push
fldt
jne
inc
mov
pop
popa
adc
jmp
push
xor
or
das
cmpsl
shr
rcr
shr
rcr
or
sbb
lock
pop
adc
cltd
mul
add
jb
cmp
fdivrl
dec
ja
jb
cmp
add
mov
dec
dec
fadds
sbb
mov
fwait
inc
xchg
dec
and
or
mov
push
loopne
pop
sbb
iret
mov
add
ret
mov
dec
jns
jmp
cmpsl
ljmp
enter
fstps
push
push
out
insb
jo
inc
sbb
push
or
or
jno
pop
mov
jno
jge
es
dec
rcl
jle
mov
inc
and
cmp
ret
jne
dec
arpl
es
sub
inc
in
push
andl
mov
outsb
add
add
cs
or
mov
enter
loopne
or
xor
or
push
and
xchg
jae
sbb
add
in
mov
inc
sub
dec
add
add
nop
inc
inc
inc
inc
jg
scas
out
sahf
testl
jl
lds
inc
mov
sbb
iret
repz
in
in
lock
repz
hlt
clc
clc
cld
cltd
jb
aam
pop
xor
outsb
pop
inc
adc
loope
push
fadd
adcl
jbe
nop
cmp
repz
jbe
or
adc
lea
and
fmul
jl
cld
jmp
scas
cld
out
push
maskmovq
lret
xchg
pop
sbb
mov
stc
sub
mov
fisubrs
nop
push
fiaddl
xchg
je
xor
dec
mov
lods
mov
cmpsb
and
xchg
aas
inc
out
add
add
pop
mov
dec
push
jne
cwtl
ss
add
pop
iret
jnp
jnp
mov
or
push
adc
mov
repz
sub
inc
comiss
repz
sbb
sbb
adc
cmp
repz
adc
or
and
repz
push
jl
fwait
aas
pusha
or
js
comiss
lcall
adc
pop
daa
outsl
sbb
movsl
movsb
sbb
je
mov
add
pop
push
add
and
cmp
out
and
mov
adc
add
cli
jg
push
inc
or
mov
inc
test
ja
andb
dec
ret
inc
inc
adc
inc
push
jbe
jb
cmp
adc
push
in
jge
or
mov
pop
cmp
mov
and
adc
jecxz
out
xchg
add
adc
jns
xor
or
or
jae
cmp
adc
add
xchg
mov
cmovs
mov
mov
sub
jne
xlat
or
jmp
push
sub
xchg
xchg
loope
sub
cmp
addb
jbe
add
add
xchg
outsb
push
addl
add
outsl
int3
ja
andb
dec
fimuls
fbld
mov
dec
inc
ficoml
jb
inc
or
adc
cmp
jae
or
jae
cld
add
push
shrd
shr
ret
sbb
loope
shr
outsb
add
and
and
movl
roll
pop
push
jle
rolb
test
xchg
cmp
add
push
cmp
inc
scas
adc
sbb
jle
and
fcomi
jae
mov
fnstcw
inc
xor
mov
pop
clc
ficoml
das
cmp
mov
push
cmpsl
sub
jno
jl
add
mov
clc
cmpsb
sub
mov
jno
mov
jne
mov
inc
daa
add
sbb
jno
or
cmp
inc
aad
pop
jbe
inc
cmp
fistl
clc
test
or
inc
jne
pushf
jp
fsts
in
sbb
sbb
and
jle
jne
jmp
clc
inc
test
std
into
into
or
sub
jne
pop
cmp
jecxz
je
ror
aam
inc
cmp
dec
popa
adc
ret
mov
adc
in
pop
dec
jge
je
insb
rcrb
cli
push
aam
mov
scas
leave
rol
mov
stc
or
cwtl
push
icebp
mov
cmp
std
ficoms
insb
mov
push
mov
movsb
call
jmp
mov
adc
add
inc
sub
mov
pop
or
add
push
dec
mov
inc
inc
pop
and
pop
pop
pop
dec
mov
jno
clc
pop
or
dec
cmp
jmp
pop
or
jge
pop
rcrb
pop
pusha
in
xchg
sbbl
add
es
out
xor
jb
test
jg
and
push
push
cmp
inc
cmp
mov
cmp
sbb
push
fisubs
sbb
int3
jb
cld
xor
xor
xchg
fldenv
ret
xor
int3
mov
push
dec
test
aas
inc
mov
add
jns
icebp
inc
xor
cmp
adc
xor
fidivs
or
jo
dec
aaa
inc
mov
xor
xchg
inc
ret
cmp
cmpb
add
jmp
test
aaa
add
rorb
out
ficoms
pop
mov
push
mov
add
xorl
jp
mov
lea
clc
jne
push
dec
mov
mov
add
and
push
jae
loopne
dec
int3
mov
adc
ds
and
rclb
mov
rorl
xchg
mov
mov
mov
popa
and
mov
add
add
lcall
or
scas
dec
ljmp
fcmovnu
mov
es
cmp
stos
icebp
push
incb
fdiv
loopne
lea
orb
rolb
dec
les
mov
inc
cmp
pop
xchg
cmp
cmpb
in
call
aad
cmpsb
std
outsb
add
cmp
sub
add
fwait
add
mov
or
or
cmp
jno
jb
or
jno
pop
stos
fsubs
daa
sub
add
adc
inc
add
adc
lret
adc
or
pop
test
xchg
test
adc
and
and
or
mov
or
inc
out
add
add
pop
or
inc
pop
or
xchg
ret
jmp
jno
mov
xor
and
call
ret
add
mov
movsb
dec
lea
fdivl
les
sbb
xor
mov
mov
inc
cmp
je
shll
adc
jne
or
mov
in
push
adc
addb
rcr
mov
stc
xor
dec
xor
xchg
fisttpll
fdivs
and
lea
loopne
out
sub
or
sub
lahf
fadds
cmp
je
push
out
cmp
je
test
je
jns
out
test
add
aam
xchg
pop
arpl
outsb
or
insb
insl
inc
sbb
inc
sbb
fistpl
sub
dec
clc
popa
jl
or
lock
call
or
push
mov
push
pushf
sbb
push
xchg
jecxz
adc
shrl
test
pop
sub
imul
adc
pop
pushf
mov
ja
sub
push
mov
sub
mov
mov
add
jmp
movsl
mov
out
add
jo
inc
pop
hlt
sbb
int3
or
sarb
or
dec
stos
add
push
andb
mov
mov
int3
or
pushf
aam
dec
or
push
xchg
daa
add
sub
sbb
mov
imul
mov
push
or
mov
jae
jo
and
mov
andb
das
movsb
sub
jno
push
pop
loope
lock
cmp
and
pop
or
cmpsb
cmc
push
push
mov
mov
mov
sub
and
loopne
mov
not
icebp
sbb
mov
shll
fucomip
mov
or
jl,pt
mov
cmp
loop
loop
scas
jecxz
add
or
imul
or
pusha
loopne
rcrl
popa
mov
add
pop
cmp
je
cmp
ja
push
and
sub
mov
mov
pop
xchg
cmp
call
mov
sbb
les
pop
sbb
jmp
shrl
dec
mov
add
mov
rcrb
neg
dec
mov
pop
je
loopne
jg
cld
ret
cs
pusha
lock
dec
dec
or
pop
sub
lods
xor
mov
ret
testb
or
stc
movl
jno
out
or
icebp
inc
jne
and
add
pusha
sub
pinsrw
andb
add
add
sub
pushf
jb
mov
sbbb
inc
push
and
jo
ds
loopne
popf
push
rep
in
mov
lret
iret
mov
or
shl
lea
sbb
jno
sbb
in
push
xchg
push
dec
push
stos
adc
dec
xor
jmp
dec
jecxz
mov
test
pop
nop
add
loopne
fiaddl
push
inc
imul
mov
push
dec
pop
shl
dec
shll
and
inc
xchg
andb
mov
ficoms
add
lods
mov
jp
push
js
dec
fcoms
shl
jp
jae
xor
jecxz
sub
in
push
int3
jb
jp
je
sub
adc
pop
pop
adc
sub
pop
ds
jne
add
shrb
adc
sbb
add
sbb
or
dec
cld
push
and
jmp
dec
out
mov
hlt
adc
mov
pop
mov
or
movb
mov
test
jmp
add
pop
push
adc
inc
and
add
xorl
sti
or
adc
in
inc
mov
cmp
out
adc
inc
push
sbb
and
mov
sahf
jp
stc
push
rcl
push
lock
mov
and
gs
sub
and
fs
dec
in
nop
rolb
test
mov
sbb
jnp
pop
loope
inc
and
fwait
pop
or
sbb
out
xchg
inc
cmp
and
mov
fimuls
adc
fs
cmp
xchg
mov
sar
add
jmp
popf
and
mov
fisubrl
add
test
push
adc
adc
ret
addr16
pop
inc
xchg
popf
jne
cltd
out
mov
decl
lock
inc
andb
sbb
sahf
cmp
mov
andl
adc
or
jo
sti
lea
push
mov
mov
mov
or
stos
mov
fcomi
ljmp
sub
cmp
sbb
and
add
fiadds
add
test
sbb
fimull
mov
inc
js
incl
add
shlb
adc
jmp
es
leave
je
test
out
into
daa
pop
ss
shlb
push
or
push
cmp
je
mov
sub
or
inc
xor
addr16
push
cmc
sub
nop
sahf
notl
adc
push
xchg
cmp
pusha
les
call
test
loop
sahf
cmpsl
repnz
add
mov
mov
test
push
cmp
and
loop
sbb
add
icebp
enter
pop
out
and
adc
test
mov
push
jmp
cli
clc
not
mov
repnz
cmpsl
mov
xchg
leave
cli
pop
and
fisttpl
inc
sbb
scas
jne
inc
in
inc
inc
or
adc
loopne
push
push
or
lods
loope
mov
loopne
xchg
jecxz
sbb
sub
jg
dec
sbb
xchg
xor
cmp
jb
loope
outsb
push
jmp
cmp
sbbl
dec
les
pop
fdiv
mov
mov
pop
movsl
out
clc
jne
ds
jo
sub
inc
dec
add
adc
mov
inc
pushf
scas
lods
and
iret
lahf
adc
cmpsb
popf
out
adc
mov
jne
add
lods
les
daa
fwait
cmp
sahf
xchg
push
xchg
sbb
nop
xchg
hlt
jo
aad
fdivp
popa
fs
jl
adc
jbe
shll
or
xor
imul
xchg
nop
imul
rol
shlb
cmp
inc
push
lock
push
jmp
fs
enter
lock
cmp
jp
push
insl
in
xor
or
int3
pop
sbb
inc
xchg
mov
cltd
or
xchg
cmp
push
jmp
mov
andl
jne
lods
je
movsl
jecxz
sbb
loopne
and
push
lds
push
enter
jne
jb
or
hlt
aas
int3
push
inc
xor
pop
inc
xor
or
add
push
cld
fmuls
adc
rorl
andb
inc
sbb
jmp
inc
inc
jae
call
mov
xor
mov
add
inc
pop
outsb
jmp
call
pop
subb
js
dec
push
or
mov
mov
addb
lds
stos
or
mov
mov
xor
jmp
mov
jnp
mov
push
cs
pop
sub
movsl
xchg
push
pusha
pop
sub
popf
sarb
xor
pop
mov
pop
mov
rep
mov
adc
add
loopne
sbb
add
add
add
add
fwait
inc
add
push
decl
cmp
add
pop
inc
bts
jmp
aaa
ja
and
push
sub
mov
sbb
mov
movsb
aaa
mov
fnstenv
data16
aas
loop
dec
push
stos
inc
mov
xlat
rol
xchg
shlb
jcxz
or
add
lock
testb
mov
mov
data16
iret
xor
xor
outsb
addb
sub
int
arpl
add
rclb
sbb
lret
jge
cmovo
jns
mov
mov
mov
and
or
dec
xchg
or
xor
pop
test
pop
or
orl
mov
or
scas
nop
sti
aad
cmp
push
fildll
inc
daa
cmp
or
mov
jl
mov
rcr
fists
pushf
shrb
fnstsw
or
push
add
div
push
in
adcb
cmp
fsubl
fistpll
ds
jmp
inc
push
dec
pop
adc
ffreep
sub
enter
out
in
pop
nop
fcoms
clc
push
and
filds
fbstp
fbstp
je
jl
test
jns
mov
fistps
rorb
fadds
call
jo
fists
cmpl
inc
mov
int3
inc
inc
xchg
imulb
inc
or
hlt
rcl
dec
mov
dec
mov
movsl
lock
push
ret
cmp
xchg
pop
jbe
inc
and
je
add
mov
add
xor
sub
in
mulb
dec
int3
je
jmp
and
or
mov
and
push
xchg
jmp
pop
pop
adc
sbb
subb
xchg
imul
push
daa
fld
mov
and
aaa
andb
sub
dec
jb
sbb
and
das
inc
jne
mov
scas
or
adc
sbb
out
stos
je
inc
dec
push
adc
js
test
pusha
or
jle
add
mov
inc
and
and
test
mov
movsl
in
adc
movsl
incb
mov
cmp
sub
inc
cltd
add
lods
xor
inc
rcl
je
cmp
push
or
daa
mov
cmp
je
xor
or
or
cmp
pusha
jne
jbe
sbb
inc
js
jne
inc
arpl
pop
pop
sub
les
call
add
loopne
test
inc
jecxz
jb
sbb
or
mov
xor
and
ret
adc
xor
jb
std
cld
stc
xchg
or
add
or
in
rorb
mov
das
pop
push
add
or
sbb
test
loope
pcmpeqw
inc
dec
inc
push
jne
mov
and
adc
or
mov
fildll
enter
repz
shrl
add
repnz
cld
dec
adc
cmc
dec
sbb
sub
es
sbb
popf
mov
inc
push
outsl
pop
push
sha1msg2
sbb
out
jne
or
sbb
shlb
sub
dec
xchg
dec
mov
xor
push
push
push
rol
push
loop
je
pop
cmp
dec
mov
cmp
dec
push
je
xchg
fwait
and
pusha
pop
adc
sbb
arpl
push
test
mov
lock
jle
push
jecxz
sbb
pop
pop
push
and
add
and
dec
inc
or
add
and
fcomip
mov
mov
cmp
pop
cmp
jge
sub
inc
adc
mov
mov
and
lock
add
lods
pop
repnz
fs
mov
roll
pop
ficomps
fnstenv
push
sub
pushf
push
cwtl
and
push
int3
insl
flds
adc
jmp
cmp
pop
cltd
fisubs
mov
inc
add
or
dec
jg
outsb
in
repnz
sub
inc
add
adc
push
add
or
ret
inc
push
ljmp
or
inc
ss
xor
orb
add
jle
pop
mov
rcrl
sbb
add
dec
and
or
sbb
ret
jge
inc
imul
inc
sbb
hlt
fdivrl
lock
or
insb
or
fadds
or
leave
xor
jno
xor
lcall
cmp
sub
in
add
cmpsl
bound
sbb
call
dec
inc
sbb
mov
test
sub
mov
outsb
cmp
loop
or
mov
adc
mov
sub
push
mov
sbb
decl
push
pop
sbb
and
push
into
std
insl
push
bound
movl
sbb
pop
icebp
cmp
adc
push
mov
roll
loop
bnd
jl
outsb
mov
dec
bound
push
ss
loope
push
push
mov
insb
es
cmc
repnz
stos
jno
orb
iret
add
push
imul
dec
sbb
or
lods
rclb
and
scas
pop
mov
push
je
or
testl
sbb
orb
iret
and
mov
mov
sbb
pusha
mov
cmp
xor
and
sub
subl
cmp
in
es
popf
dec
pushf
inc
xchg
enter
shrl
pop
add
push
pusha
push
sbb
sub
inc
xor
outsb
repnz
add
pusha
lods
pusha
sub
push
cmpb
test
lock
dec
add
mov
mulb
push
nop
and
cmp
add
out
lds
jne
inc
sub
aaa
aam
mov
bound
pop
jmp
inc
daa
jbe
ficoms
cmp
xlat
xorb
cmp
push
pop
jbe
cwtl
jmp
or
clc
popa
pop
or
lods
add
push
icebp
scas
nop
push
xor
nop
insl
adc
add
mov
push
push
stc
insl
daa
mov
lcall
fiaddl
sbb
inc
push
jg
shrl
ss
cmp
insl
js
andb
and
mov
cmp
mov
lahf
int
add
pop
cmp
sbb
cs
xchg
push
and
dec
cmp
fbld
lock
jmp
out
jo
mov
loopne
pop
dec
sub
jb
push
testl
cmp
cmpsb
mov
mov
pop
nop
cwtl
mov
adc
push
cmp
jmp
movsb
inc
pusha
testl
cmp
jmp
jmp
sbb
add
pop
adc
or
jg
sbb
movsl
insb
cwtl
push
mov
and
cmp
mov
loopne
inc
push
out
add
fisttpl
cs
cmc
cmp
jne
sbb
lock
or
pushf
es
add
jge
xor
cmp
movsl
and
test
push
sahf
or
or
test
stos
pop
mov
rcrb
add
int3
add
fstpl
in
push
pop
xchg
call
decb
popf
mov
cmp
jb
add
jbe
mov
lea
inc
xchg
ret
fnstsw
sub
int3
cmovns
mov
dec
mov
orb
imul
cmp
dec
mov
ds
stos
mov
cmpsl
and
add
or
or
push
mov
inc
decl
cmp
je
ja
lcall
fs
or
adc
add
adc
push
je
jne
je
faddl
test
sbb
andb
inc
xorl
mov
adc
cmp
loope
dec
adc
mov
in
in
mov
sub
pop
pop
or
and
lret
sarl
cmp
sbb
call
inc
stos
add
sub
add
in
adc
in
push
lahf
xchg
xchg
push
xchg
push
mov
ret
add
xor
pop
adc
mov
xor
add
push
cmp
je
jge
and
adc
adc
push
pusha
mov
imul
mov
xchg
or
dec
shrl
enter
inc
popa
fs
push
sub
lcall
mov
fisubrl
xchg
nop
mov
dec
lret
and
pop
jns
add
mov
xlat
dec
cmp
xchg
data16
xor
xor
cmp
push
mov
inc
push
movsb
add
sbb
adc
stos
cmc
movsb
pop
bnd
jns
sbb
jmp
sbb
movaps
inc
rorb
cmp
roll
dec
and
add
or
and
arpl
adc
push
movsl
dec
loopne
les
imul
in
aam
sub
mov
fwait
ret
push
mov
or
fldcw
mov
xchg
inc
jp
nop
dec
rorl
add
leave
pop
cmp
cmpsb
sbb
push
lret
cltd
or
out
mov
nop
sbb
adc
mov
mov
pop
cmp
xor
cmpsb
rorb
cld
testb
sub
xor
cmp
in
pop
push
shll
push
loopne
je
mov
ja
in
inc
cmc
and
movsl
adc
popa
cmp
add
movsb
dec
and
lock
sbb
pop
arpl
mul
jbe
sub
pusha
sbb
subl
loopne
dec
mov
cmpsl
adc
cmpsl
push
jge
xchg
xorb
test
inc
or
mov
rclb
adc
fstp
push
push
adc
mov
add
sub
or
mov
xor
ss
jne
andb
fistpl
add
add
adc
add
push
inc
and
jne
jmp
sub
inc
inc
sub
fcoms
test
pop
or
sbb
xor
or
mov
jbe
shlb
call
jb
loop
loopne
sub
push
and
push
sbb
dec
shlb
or
pop
das
es
lods
sub
adc
mov
lock
ret
cmc
mov
sbb
adc
xor
add
aam
sbbl
rcrb
ret
add
aas
sbb
add
rolb
or
mov
dec
adc
sbb
adc
add
ja
and
mov
and
adcb
movaps
sub
dec
dec
jl
add
or
xchg
or
fisttpl
and
add
pop
push
out
dec
cltd
out
jne
aas
add
pop
add
fcmovnb
push
or
mov
add
sub
repz
mov
movsbl
sub
loopne
das
jbe
xlat
or
mov
mov
ret
dec
ret
push
inc
or
data16
cmp
jae
mov
aad
jle
hlt
jb
push
pop
cmp
jbe
andb
mov
outsl
jb
mov
add
clc
xchg
xor
inc
das
jne
cmp
push
jmp
mov
add
push
jne
mov
cmp
xor
add
rclb
xor
cmp
das
jmp
mov
and
inc
cmpsb
jle
mov
int
ja
add
mov
into
xchg
push
in
push
mov
sub
addl
into
fnstenv
sbb
push
nop
add
hlt
call
push
or
add
push
mov
xchg
fisubs
cmp
cmp
jb
stc
and
add
addb
add
lahf
jp
mov
adc
in
cmp
push
inc
mov
pop
or
push
mov
xchg
inc
jo
adc
or
nop
mov
mov
rcrl
in
inc
lods
leave
stos
jae
add
rcrb
adcl
push
push
sbb
or
push
add
sub
jge
xchg
dec
mov
addl
cs
add
mov
rorb
push
loopne
jne
push
aas
je
hlt
test
and
or
push
push
push
in
xchg
cmp
inc
jnp
sub
sbb
addl
addb
pop
pushf
sbb
add
ja
or
sbb
repnz
in
mov
mov
cmp
and
stos
inc
sbb
mov
test
push
mov
mov
mov
push
jge
push
sbb
mov
movsb
fiadds
mov
or
rcrl
sub
ret
mov
inc
popa
mov
add
subb
movsl
pop
push
test
inc
bound
jge
add
pop
mov
cmc
cmpl
push
mov
dec
cli
dec
pop
dec
mov
in
jb
hlt
inc
lret
pop
xchg
adc
cli
jg
shrb
and
clc
add
xchg
inc
mov
xor
push
jl
or
ss
sub
inc
or
mov
popf
and
add
int
sti
sub
xor
mov
bound
and
push
add
loope
in
mov
aad
add
pop
add
adc
je
cmp
mov
adc
sub
inc
test
arpl
ficoml
cmp
aam
sbb
adc
jae
pop
cmp
sub
test
mov
and
sbb
mov
adc
and
test
outsl
inc
xor
mov
push
sbb
sbb
and
xor
jmp
mov
jne
mov
cmp
je
xor
sbb
pop
xor
fidivs
push
addb
andb
test
add
add
in
out
cmc
push
inc
pop
mov
jge
add
dec
out
mov
test
daa
add
inc
incl
pop
test
dec
and
jmp
rorl
sbb
sahf
add
dec
adc
dec
dec
mov
je
sub
out
or
and
jne
mov
mov
inc
mov
or
inc
jle
adc
clc
dec
ret
push
add
roll
or
pop
mov
mov
mov
jbe
lock
cmp
push
movsl
movsl
pop
mov
jns
add
inc
adc
inc
or
xor
ljmp
cs
xchg
xchg
stos
add
pop
pavgw
pop
xor
pop
add
fdivs
and
fsubrs
int3
sbb
loopne
test
popf
and
movsb
sub
pusha
cld
jne
mov
sbb
xor
and
add
loopne
or
push
add
in
xchg
or
push
or
mov
xchg
xchg
jl
cmp
xor
aas
mov
popa
and
sbbb
xchg
loopne
test
sub
test
jg
mov
je
test
das
and
hlt
mov
movb
or
je
repz
and
add
add
xor
jl
or
std
or
push
inc
inc
scas
es
add
push
cwtl
data16
cli
sub
lods
push
sbb
mov
push
cmp
push
inc
inc
cld
ret
pop
or
lea
inc
mov
pop
adc
nop
cmpsl
mov
jp
sbb
add
mov
sbb
imul
jecxz
mov
mov
xchg
jb,pn
pusha
imul
scas
mov
xchg
pop
inc
jb
test
insl
sub
ja
popf
cmp
and
loopne
xchg
shll
mov
mov
xor
pop
clc
and
pop
test
or
jle
push
jae
mov
sbb
xor
inc
mov
adc
add
ret
addb
addl
insb
pushf
add
dec
sbb
je
adc
or
mov
adc
mov
ret
push
imul
jmp
jmp
pusha
leave
dec
or
cmp
daa
push
enter
aaa
clc
push
testb
and
rolb
xorl
jmp
lea
testl
cld
and
lods
and
adc
sbb
or
test
xor
mov
in
push
xor
lea
loopne
subl
mov
scas
testb
cwtl
jbe
cwtl
rcrb
mov
neg
pop
adc
add
inc
adc
push
je
add
scas
data16
xor
xor
and
add
cmp
jle
push
push
ja
stos
and
and
fadds
std
or
or
add
mov
lret
jmp
mov
ss
or
jbe
ret
rorb
fadd
pop
lods
test
xor
pop
cmp
dec
or
and
add
insl
add
xorl
cwtl
insl
xchg
test
xor
xor
test
xor
jge
sbb
movsl
das
or
mov
inc
jmp
sub
push
or
sbb
push
xor
out
add
clc
cmp
mov
ljmp
outsl
ret
js
adc
ss
loope
imul
push
or
sti
inc
mov
jns
or
in
cmp
arpl
ds
dec
mov
into
jo
in
mov
mov
add
jmp
insl
or
push
mov
xchg
or
push
push
lea
cmpsb
push
and
out
mov
ss
sbb
inc
inc
jmp
dec
popa
les
or
ljmp
xchg
lret
clc
into
inc
xchg
push
hlt
insb
out
out
mov
add
shr
or
leave
data16
sbb
jg
adcl
push
pusha
add
push
or
sbb
add
pop
sbb
and
inc
adc
les
sbb
call
add
addr16
test
mov
pop
or
pop
add
loop
xchg
inc
jle
pop
fimull
xchg
fs
inc
cmp
dec
test
xchg
pop
loop
sub
pusha
and
out
mov
pushf
dec
mov
xchg
pop
and
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
test
mov
or
int
in
rcrl
lock
shll
sbb
inc
push
pop
test
movsl
aam
push
cmp
mov
dec
mov
mov
ret
clc
dec
push
dec
add
dec
and
cmp
jne
inc
testl
cmp
sbb
add
xchg
cli
dec
ss
mov
and
xchg
push
scas
cmp
sarb
mov
push
add
out
ds
or
je
mov
cmp
ja
push
shrb
iret
add
jmp
adc
mov
mov
dec
inc
lret
mov
dec
cmp
test
xchg
inc
mov
push
and
cmpsl
call
inc
sub
mov
xchg
es
das
jecxz
roll
jno
loopne
into
cmp
out
lock
call
xchg
and
cmp
aam
sahf
data16
pushl
test
push
jne
pop
decl
ret
jne
add
push
sbb
pop
xor
mov
lea
mov
inc
adc
loope
mov
sub
test
call
mov
cmp
addr16
mov
clc
adc
jp
push
cmp
pop
dec
dec
xchg
sbb
mov
cld
jp
mov
shlb
or
fmull
xor
push
push
lret
xchg
inc
inc
loop
adc
stos
stos
sub
push
ss
cli
cmp
or
push
jl
xchg
rcrb
nop
ds
cmp
push
shl
repnz
aad
into
sbb
outsl
jae
out
cmpl
divl
mov
testb
lret
mov
and
adc
jne
jbe
dec
test
xchg
pushw
inc
pop
lret
mov
dec
lock
das
or
xchg
push
shrb
incl
or
sbb
dec
or
add
inc
jmp
and
fdivrl
pusha
xchg
or
lea
cltd
add
sbb
or
add
sbb
or
mov
shr
js
cs
fwait
aam
adc
push
pop
inc
pop
add
dec
dec
ds
or
loopne
mov
cs
sbb
push
pop
ret
or
aas
aaa
jno
fisubrl
add
ds
popa
mov
mov
daa
sbb
cmp
cmp
push
lods
pop
push
leave
jl
shlb
xchg
insb
cmc
adc
sub
imul
aaa
add
pop
sahf
clc
int
clc
add
and
fs
cmp
sbb
inc
pusha
out
into
pusha
jp
insl
mov
or
xchg
clc
sbb
add
push
arpl
push
rcl
lcall
dec
push
push
movsb
and
push
or
dec
inc
mov
hlt
aad
loop
mov
cmp
ret
jmp
push
dec
jmp
or
cmp
stos
push
inc
movsl
stos
mov
imulb
movl
push
scas
or
mov
out
jp
icebp
hlt
inc
pop
aam
pop
cmpsl
dec
sahf
push
pop
add
jns
push
pusha
mov
sub
sbb
push
fists
int
adc
testl
and
aas
jmp
shlb
add
js
or
add
and
jns
adc
stos
push
movsl
fs
es
mov
negb
cmp
iret
jge
mov
jbe
clc
or
addl
lea
int
jae
andb
inc
mov
add
push
dec
in
add
rcr
fwait
jl
add
and
dec
movsl
mov
dec
cmp
mov
dec
rorl
xor
or
push
out
into
push
stc
adc
add
movsl
test
and
or
enter
outsb
sub
inc
insb
mov
jle
dec
cs
cmp
xor
dec
test
sbb
push
mov
jmp
ret
and
cmc
push
js
adc
in
xor
or
outsb
icebp
or
ds
push
orb
cmp
push
syscall
adc
push
lahf
mov
or
jl
pushl
mov
push
and
or
mov
lock
jne
mov
pop
add
xor
in
pop
popa
xor
mov
dec
ljmp
cmpsl
cmp
push
je
pushf
ss
jl
int3
xchg
and
fldenv
adc
aam
sbb
push
imul
jg
sub
inc
es
data16
test
inc
pop
mov
push
xor
add
mov
mov
mov
mov
scas
mov
sub
lea
push
loop
rcpps
dec
cld
cld
call
xorb
fildl
addl
adc
addb
xchg
or
mov
jb
dec
adc
inc
cmp
sbb
add
jl
cmp
jg
sub
mov
inc
cmp
jne
xorl
jl
fistps
les
cmp
push
xor
mov
push
test
add
test
ds
pop
xchg
les
das
mov
mov
or
cmpb
into
mov
jmp
repnz
orl
push
push
push
cwtl
dec
mov
sbb
shr
adc
push
pop
imul
test
or
adc
push
add
nop
mov
xchg
je
inc
add
mov
jg
adc
and
filds
dec
das
sbb
mov
andps
aaa
add
mov
inc
add
rclb
jne
or
push
jg
inc
loop
mov
pop
out
adcl
sub
or
shlb
cmp
je
mov
mov
jl
mov
aam
dec
cmp
fxch
jnp
test
scas
movsl
adc
or
sbb
pop
subb
cwtl
fcmovne
xor
mov
jg
int3
je
gs
sbb
loop
sub
push
add
push
xchg
insl
outsb
repz
pusha
ljmp
and
mov
add
lret
push
cmpsb
sub
in
enter
fcomp
mov
mov
pop
jmp
mov
jne
lea
xlat
rcl
mov
fisubrl
dec
xor
sub
or
sbb
add
shl
adc
sub
or
lods
jne
es
repnz
jge
inc
das
loop
enter
sahf
imul
push
dec
ss
jno
imul
lods
add
je
jbe
inc
jmp
xor
sub
mov
je
cltd
jmp
and
inc
mov
mov
mov
adc
inc
mov
mov
cmp
or
pop
add
rorb
and
in
fbstp
xor
push
aam
rorl
inc
cli
in
mov
cmpb
je
cmp
pop
stos
xchg
add
mov
add
fldl
add
or
insb
or
je
outsb
call
shl
rcrb
and
out
movsl
xor
mov
dec
xor
cmp
pop
adc
cmp
js
cltd
mov
sub
test
add
or
xor
sarl
dec
sub
dec
push
push
scas
shlb
leave
xor
popa
cmp
cmc
pop
push
push
es
mov
sbbb
jo
inc
pop
dec
scas
sub
js
movb
inc
or
adc
adc
add
mov
dec
loopne
push
mov
add
insl
pop
rolb
xor
push
movb
fwait
popa
je
fiaddl
cmp
dec
jns
incb
add
sti
fs
mov
arpl
mov
push
add
or
add
xchg
inc
insl
inc
xchg
xor
inc
add
sbb
mov
and
push
mov
adc
push
test
sub
mov
adc
ljmp
xor
and
repz
pusha
test
and
fcoml
pop
xor
jmp
or
add
inc
das
mov
pop
pop
jle
add
clc
ret
outsl
jge
leave
add
pop
push
addl
pusha
dec
or
push
adc
gs
adc
push
jns
and
or
xchg
pop
add
pop
mov
repz
xor
in
sub
mov
mov
es
mov
dec
and
call
ret
stc
jne
and
pop
sti
es
inc
or
and
aam
or
mov
or
adc
dec
iret
mov
add
jmp
and
inc
lods
unpcklps
xchg
fildl
jecxz
ljmp
and
idivb
or
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
jbe
cmp
call
faddp
imulb
cwtl
add
stc
push
add
pop
add
ret
push
add
lcall
insb
adc
loopne
jle
sub
not
mov
testl
jo
lods
pop
loope
dec
clc
jge
ret
fldln2
inc
in
fwait
shrl
iret
loope
jne
es
inc
popa
mov
sbb
jmp
or
push
pop
in
inc
gs
out
mov
mov
push
fldz
pop
pop
add
sub
je
in
jmp
repnz
dec
xchg
pop
add
inc
push
xchg
add
lea
xor
daa
dec
rolb
sahf
fcompp
mov
add
fisttpl
into
fs
jbe
lock
sahf
and
sbb
addb
cwtl
shll
pop
rolb
inc
sar
add
xor
icebp
push
call
jo
hlt
or
in
adc
data16
push
je
test
pop
jo
movsl
lds
or
cmpb
mov
es
and
mov
jmp
mov
in
sbb
push
pop
sub
pusha
mov
pmulhw
scas
adc
add
loope
stc
rolb
shll
dec
and
jb
add
or
nop
sbb
and
push
iret
iret
mov
lods
icebp
in
std
rol
mov
mov
and
shl
add
les
sbb
add
jmp
clc
adc
imulb
ret
fstpt
sti
test
lods
or
mov
loop
dec
aad
pop
add
add
fwait
add
or
dec
pushf
test
dec
inc
sub
sbb
add
push
xor
loopne
add
aas
xor
jle
add
jmp
sub
adc
add
xchg
adc
in
pop
cmovns
ret
div
mov
mov
loopne
js
fldcw
insl
xchg
jbe
add
dec
in
repnz
or
flds
hlt
shlb
sbb
fldcw
cmp
add
inc
push
pop
dec
add
addb
fcmovne
fldl
and
or
mov
mov
shld
shl
fiadds
mov
fldt
or
and
xchg
and
outsb
cmp
pop
pop
sbb
cmp
push
or
fildll
adc
cmp
rorl
gs
test
les
lret
je
xlat
pop
mov
jne
movsb
xor
cmp
je
mov
jo
fldl
dec
aaa
and
push
test
mov
mov
movsb
dec
repz
xchg
add
mov
adc
mov
lea
dec
jae
mov
pop
mov
adc
xor
push
adc
rorb
push
mov
loope
sub
jb
or
or
jp
sarl
dec
jo
or
adcl
jb
sbb
xor
movsl
rclb
adc
call
jae
jecxz
int
loopne
gs
ss
push
fcoms
pop
inc
and
test
sarl
pop
cmp
or
mov
adc
sahf
cwtl
outsl
setnp
icebp
lea
sar
insb
pop
test
pop
jne
and
sbb
mov
frstor
inc
sub
push
inc
add
aad
movsb
push
add
clc
sub
xchg
loope
and
nop
ret
or
xor
pop
inc
sbb
mov
dec
mov
lea
cmp
adc
movsb
jo
mov
mov
add
sbb
out
xchg
into
mov
out
aaa
and
gs
push
sub
jge
pop
addr16
test
fs
pop
fisubl
add
scas
adc
sub
add
sbb
sbbl
push
das
sbb
mov
mov
adc
or
loope
test
dec
aam
push
add
movsb
loopne
out
cld
add
xchg
and
pop
add
pop
fadds
and
and
or
and
cs
or
test
in
mov
mov
andl
xor
cs
shr
xor
dec
fisubl
mov
add
mov
sub
push
dec
das
dec
sahf
dec
or
test
adc
or
push
adc
jns
test
or
and
cmp
or
mov
sub
je
cltd
je
or
inc
push
icebp
or
sub
loopne
cli
fimuls
add
add
or
mov
pop
sbb
mov
jmp
cmpl
xchg
lret
add
jp
and
pop
mov
sti
jecxz
sbb
or
jmp
sbb
add
testl
adc
insb
mov
sti
sbb
or
icebp
dec
and
dec
out
dec
jecxz
push
xchg
dec
add
mov
push
push
mov
inc
and
sbb
inc
pop
pop
out
push
xor
xchg
mov
clc
testb
mov
sti
ja
test
out
test
aad
je
fisttps
repz
sbb
enter
jp
je
add
dec
xor
dec
add
sahf
push
and
or
or
notl
movsl
mov
push
push
popw
mov
pusha
pop
push
sub
push
and
ss
mov
inc
dec
pop
adc
pop
fldl
fstpl
fstp
arpl
out
jmp
mov
je
test
jbe
xor
jecxz
lret
sbb
scas
push
neg
or
xchg
mov
sarb
or
mov
inc
mov
out
lds
add
cmp
insl
adc
push
add
rolb
add
clc
into
add
ds
fldl
mov
or
inc
roll
fs
call
push
leave
call
test
cmovns
imul
mov
xchg
mov
movb
pop
loope
and
and
ret
jmp
or
add
ficoml
sbb
or
scas
cmpl
push
test
mov
xor
cli
loope
sbb
mov
inc
dec
push
jge
sub
test
mov
add
insl
hlt
sbb
adc
inc
bound
push
clc
jo
sbb
mov
inc
lea
jmp
pop
pop
je
rcll
adc
push
adcl
adc
push
sub
popa
lret
or
mov
mov
in
sub
cmp
sub
sbb
dec
or
in
and
ds
dec
xor
push
ror
add
and
xchg
and
dec
cmp
idivb
push
inc
mov
fdivp
aam
je,pn
push
pop
mov
xor
push
sub
xchg
int
jle
xor
mov
test
or
mov
loope
sbb
and
or
jp
sbb
fadd
pop
xchg
lods
jl
test
jge
nop
dec
push
ret
mov
ret
push
xor
or
test
mov
push
add
mov
inc
clc
and
loopne
pop
pop
mov
push
push
sahf
add
jle
scas
push
shrl
rcrl
pop
adc
adc
sahf
pop
pop
cltd
mov
inc
sub
js
jg
enter
pop
adc
mov
mov
pop
mov
push
mov
adc
dec
cwtl
push
ret
push
xor
sahf
fimull
incb
and
jb
mov
gs
cmp
adc
outsl
mov
cmp
into
negb
shll
adc
orb
lcall
or
out
gs
add
and
mov
rorl
and
pop
push
fistpll
daa
sub
loope
fsubp
sub
call
movswl
sub
dec
mov
ficoml
ss
sbb
fnclex
sbb
cmp
inc
adc
ror
mov
dec
cld
or
and
or
cld
fwait
mov
or
sub
or
clc
adc
and
popf
mov
ficompl
inc
adc
pushw
cmp
dec
icebp
fstp
sbb
add
xor
mov
adc
xor
push
adc
pop
call
je
cmc
mov
orb
mov
push
xchg
jp
push
push
sbbb
jns
dec
in
add
sub
std
cmpl
jecxz
mov
mov
in
sub
mov
add
test
cmpsl
cmp
ljmp
ljmp
jne
mov
sti
aas
mov
sbb
je
cmp
je
push
xor
jecxz
sbb
pop
test
loope
sub
popa
mov
fldcw
cmpl
fildl
into
or
jmp
push
add
push
push
xchg
push
out
mov
fwait
divl
or
pop
jns
and
push
daa
jne
cmpsl
mov
xor
mov
push
xchg
jne
cld
cli
mov
hlt
movsl
movsl
cmpb
and
mov
mov
mov
iret
mov
push
push
orl
mov
sti
or
pop
sub
test
imul
jmp
mov
sbb
push
fmuls
test
js
push
pop
push
loopne
rol
movsb
fmuls
push
jne
fldt
insb
sahf
sbb
adc
push
clc
test
jae
push
call
jo
jl
stc
ret
pushf
sbb
mov
jle
pop
sbb
push
addr16
cld
pop
xor
sbb
aas
xchg
xor
call
in
loope
and
sbb
fmuls
pop
cwtl
enter
mov
loopne
and
mov
jmp
adc
ss
adc
xor
xor
jb
into
rcl
jo
rcrb
ret
fwait
out
xchg
mov
or
stc
in
aas
push
rclb
jle
dec
fdiv
jnp
fcmovu
mov
clc
adc
lds
stos
or
fstpt
adc
xchg
insb
in
scas
pop
out
jno
or
xor
or
jnp
lea
fisubrl
lea
pop
mov
nop
push
pop
lret
xchg
bound
cs
mov
out
xor
das
inc
lret
enter
push
int3
xchg
dec
or
mov
movsl
sub
xor
das
inc
lret
pop
add
mov
xchg
imul
jge
xor
das
inc
int3
pusha
and
pop
xor
or
mov
jge
xor
pusha
imul
jb
int
dec
cmpsb
sbb
mov
push
jnp
jge
or
insb
in
xor
cs
into
iret
insb
leave
mov
or
fisubl
lds
stos
lods
pop
xor
mov
sti
outsl
addr16
push
sub
loopne
pop
or
cmp
xor
and
arpl
lock
outsl
mov
imul
mov
or
cmp
push
leave
mov
jmp
rcll
or
cmp
add
in
xchg
push
push
pandn
fldt
xor
jmp
inc
push
nop
and
or
cmp
andl
xor
dec
pop
sub
jp
push
sub
push
xor
push
test
push
loop
mov
lods
clc
xchg
dec
sbb
decl
es
cs
sbb
test
ss
adc
adc
fisubrs
sarb
in
pop
adc
xor
jnp
inc
pop
js
add
jbe
xor
pop
or
mov
fsubs
cld
or
mov
push
dec
inc
push
adc
jb
loopne
push
mov
lods
jne
aaa
es
cmp
jb
xor
cmp
xorb
aas
aaa
adc
sub
add
add
adcb
loope
sub
js
ss
popa
add
add
loop
or
or
outsb
adc
push
sbb
sub
test
xor
je
or
add
or
cmp
dec
push
fnsave
dec
mov
gs
jg
xchg
fsts
insb
insb
xor
jecxz
inc
add
xor
andl
or
es
flds
push
push
imul
push
test
shlb
cli
pop
ret
mov
xchg
sbb
or
jns
cmp
adc
lcall
sub
and
mov
add
sti
sbb
mov
adc
jmp
jns
dec
rcrl
je
sbb
adc
or
mov
rcl
and
cmp
mov
rcr
into
sbb
repz
loop
inc
pop
push
xor
pushf
pushf
mov
sahf
push
les
pop
xor
nop
and
pcmpeqw
add
adc
sahf
clc
pop
test
adc
lret
or
add
lea
lahf
ret
mov
jmp
stc
andb
rcrl
ss
mov
or
stos
test
cmp
call
mov
cmc
adc
jne
xchg
mov
or
insb
or
add
inc
adc
or
lret
addb
add
shll
outsb
loop
pop
bound
shll
fisubl
out
je
das
cmp
ljmp
xchg
xchg
je
lods
insb
xor
xor
es
ret
ret
xor
inc
cmp
dec
dec
cld
movsb
mov
push
lahf
sbb
jno
notb
mov
clc
je
cmp
cmp
test
mov
cmp
mov
aaa
dec
lret
stos
or
loope
adc
cmp
ja
test
rolb
movsb
test
into
sub
je
mov
addr16
jo
sti
xor
cli
mov
add
pusha
aaa
lea
jl
push
loop
adc
push
mov
cmp
add
push
xchg
push
sub
movb
push
dec
xor
aam
loop
cld
int3
adc
lock
xor
jp
fs
les
fimuls
sbb
inc
pop
sub
xor
and
mov
arpl
mov
bound
es
dec
jge
cs
xchg
add
cs
sub
xchg
inc
clc
lret
pop
xor
xchg
jno
call
ret
adcb
lcall
sub
ss
push
jns
pop
sub
dec
jne
mov
jnp
pushf
pop
pop
push
test
mov
or
outsb
sub
ret
pop
popl
leave
loope
das
or
ret
xor
ficoms
and
fsubr
pop
rorl
add
mov
xor
pop
mov
shlb
inc
sub
pop
add
xchg
aam
cltd
es
cmp
push
mov
and
mov
push
jmp
and
sbb
jns
or
outsl
lahf
xchg
mov
or
sbb
adc
pop
inc
add
add
out
jmp
inc
movsb
mov
imul
sarl
xor
sti
into
dec
daa
adc
jo
xchg
sbb
mov
fwait
sbb
sub
inc
lcall
push
mov
je,pt
push
dec
and
data16
xchg
sbb
les
outsb
adc
sar
popa
iret
jb
push
cmp
push
cmpl
js
jecxz
pop
js
jbe
rorb
fcmovbe
aas
and
push
mov
movsb
icebp
popa
push
popf
shll
jmp
fdivl
and
jo
cmp
adc
cmp
and
jl
loop
jl
push
add
push
pop
mov
incl
push
cmp
jle
pop
idivb
mov
cmp
jne
adc
push
inc
cmpsb
sbb
js
scas
es
pusha
addr16
jo
cmovo
scas
push
push
or
jo
add
ret
xchg
fstpl
mov
imul
inc
fldl
jge
dec
stos
pop
nop
mov
adc
push
test
dec
mov
in
or
pop
add
scas
setle
fldl
jl
jnp
jg
out
or
dec
mov
cmp
inc
imul
jle
aad
test
pusha
aaa
arpl
insb
fcmovnb
addr16
sbb
dec
clc
inc
cmp
loope
hlt
cmpl
mov
jg
jmp
and
and
sbb
dec
jecxz
stos
push
cmp
mov
jae
dec
loope
pop
jl
mov
cltd
mov
jbe
ret
sub
imul
scas
lods
fsub
xlat
push
inc
dec
inc
push
hlt
movsb
imul
dec
sbb
fs
xchg
add
clc
jae
cmp
jl
call
jg
and
or
push
xchg
xchg
hlt
add
nop
pushf
aas
movsb
bound
lret
lock
push
or
rol
adc
test
int3
scas
mov
std
adc
dec
cmpb
push
or
adc
mov
lock
and
adc
pop
and
push
cwtl
testb
daa
or
sub
insl
mov
or
push
adc
push
jge
lea
fmull
jne
clc
adc
in
rolb
cmp
jle
cmp
cmc
inc
push
sbb
xchg
lock
or
sbb
sbb
sti
ja
inc
mov
sbb
in
lcall
mov
jmp
mov
push
cmp
add
mov
sbb
lods
gs
pop
rol
lock
jno
and
xor
ja
sbb
add
adc
out
fstpl
rcl
sub
jb
popf
push
popf
sub
sbb
adc
add
cmp
hlt
jmp
push
jbe
pop
rcrb
or
adc
adc
push
int3
daa
in
stos
push
fdivrs
adc
jo
mov
xor
aam
jb
pusha
lods
mov
dec
int3
xchg
mov
notl
mov
jecxz
repz
insb
aam
sub
jnp
out
mov
cmp
xor
neg
pop
sub
and
int3
dec
xor
icebp
in
pop
ja
loopnew
aas
push
sub
push
sbb
cmpl
sarb
adc
aam
sahf
negb
inc
mov
adc
push
mov
pop
xor
adc
dec
test
xchg
and
sub
popf
data16
test
adc
xor
sub
pusha
pop
jl
les
add
inc
mov
sbb
pop
dec
xor
and
dec
dec
and
test
mov
adc
popa
test
dec
pusha
and
xchg
ret
push
push
cmp
jae
add
adc
or
adc
push
int
pop
mov
add
pop
insl
incl
inc
imul
jmp
xor
add
jne
scas
mov
jnp
fsubl
mov
mov
jae
push
imul
mov
sbb
mov
imul
push
lea
aad
jnp
push
jmp
xor
pop
movsl
pop
sub
mov
sub
jge
loope
xchg
push
dec
dec
mov
xchg
out
sbb
movsl
aad
fadds
push
jo
sbb
cmp
inc
or
cmpsb
pushf
ret
lock
dec
and
dec
or
add
and
nop
xor
insb
movsb
movsl
int
and
hlt
rcrl
inc
and
jmp
add
cmp
push
mov
insl
cld
pop
orl
rcl
mov
pop
es
jmp
mov
add
pop
add
jle
imul
xchg
cmpl
cmp
je
gs
dec
sbb
jmp
gs
icebp
stos
popa
js
int3
ret
adc
inc
frstor
insl
mov
aad
scas
push
and
jmp
stos
mov
sub
add
mov
rcl
fdivrl
xchg
ret
mov
inc
adc
notb
popa
jmp
ds
inc
mov
and
test
mov
nop
and
popa
daa
and
push
js
sub
insb
mov
enter
cs
popa
cmp
mov
or
mov
xchg
or
cmpsb
add
sbb
xchg
xlat
push
add
fsubrs
add
std
xchg
std
sbb
pop
sbb
xchg
or
pushf
nop
sbb
frstor
inc
or
shlb
or
adc
and
mov
out
repz
cmp
es
int
adc
mov
mov
cmpb
icebp
push
sbb
jmp
or
push
leave
pop
clc
or
mov
xor
xchg
je
hlt
cmp
mov
add
push
jle
pop
mov
sbb
movsl
cmp
inc
sub
pushf
outsl
loopne
xchg
test
add
adc
aas
test
lea
mov
cmp
and
fwait
mov
mov
sti
mov
xor
js
out
inc
sub
pop
xchg
lahf
jmp
call
call
mov
inc
sbb
add
lea
out
lock
mov
jmp
push
loopne
and
fcmovnb
ss
adc
fwait
gs
test
inc
scas
jmp
dec
lock
icebp
imul
inc
or
outsb
inc
jl
jno
sub
mov
jle
orb
sub
inc
fidivl
xorl
faddl
adc
std
dec
mov
fbstp
enter
pushf
and
data16
push
jmp
sbb
inc
add
inc
call
xchg
sub
or
adc
pop
push
ret
mov
and
or
pop
rcll
shrl
leave
enter
repz
xor
fisttps
fwait
sbb
mov
xchg
or
push
fisttpll
int3
sbb
sub
xor
repnz
adc
or
xchg
lock
adc
or
and
insl
stc
clc
push
dec
stos
mov
ret
outsb
adc
mov
add
mulb
nop
sub
iret
movsb
or
test
inc
push
jle
xchg
mov
out
loopne
xor
push
push
push
or
sahf
adc
call
xor
or
inc
and
xchg
pop
add
jns
mov
mov
cmc
mov
imul
fidivs
jo
dec
xchg
or
pusha
xchg
pop
out
mov
lea
push
xchg
addb
cmp
inc
xor
cmp
adc
add
pop
cmpl
and
mov
mov
add
push
cli
lea
and
decb
mov
and
adc
fdivr
jmp
lea
inc
cmp
adc
mov
call
add
push
bound
cmpsb
pop
add
ficomps
push
adc
pop
sbb
cs
int3
jecxz
mov
loopne
hlt
lret
sub
and
xor
sub
sbb
pop
into
dec
pop
cmp
jbe
mov
cli
in
scas
sub
xchg
and
cmp
mov
es
jno
cmp
cmp
sbb
lret
shr
not
and
add
xor
xor
loopne
cmp
aas
jae
xchg
or
and
dec
pop
add
nop
adc
xor
and
mov
push
call
ja
pop
roll
es
bound
push
mov
push
pop
outsb
or
mov
inc
loope
pusha
mov
mov
rorl
adc
and
mov
and
fildl
cs
adc
dec
ds
repnz
push
mov
or
frstor
cmp
testl
sti
mov
inc
jnp
cwtl
xor
cmp
loope
add
movsb
add
adc
aas
or
sti
mulb
or
sbb
inc
cmp
dec
inc
adc
dec
adc
and
or
and
mov
in
jo
mov
adc
sbb
xor
cmc
jmp
adc
inc
jmp
push
or
adc
push
es
pop
xchg
xchg
mov
jbe
cmpsl
cmpsl
int
or
sti
clc
cmp
sbb
rcr
in
adc
pusha
lret
mov
scas
dec
pop
and
add
jb
test
push
mov
dec
call
jmp
loopne
je
pop
mov
shr
sbb
mov
iret
inc
or
mov
mov
and
sbb
xlat
cmc
ss
adc
bound
push
ds
sar
jne
mov
cmp
dec
adc
sub
pop
dec
jae
icebp
or
jnp
push
mov
or
add
out
and
inc
cltd
testb
adc
xchg
jge
test
mov
orl
mov
filds
mov
or
mov
nop
inc
jo
dec
mov
aaa
or
jo
push
mov
aam
inc
or
leave
mov
lret
test
cmp
xlat
sub
cwtl
cs
jp
imul
scas
into
movsl
cmc
into
fcompl
pop
cs
insb
jl
add
testl
idivb
pop
mov
add
subps
pop
jb
push
jno
hlt
loop
inc
dec
popa
cmp
sub
iret
shr
cmp
stos
insb
mov
mov
sub
aas
jmp
dec
in
and
jmp
dec
jo
js
sub
cmp
or
push
insb
xor
shr
dec
or
add
sub
hlt
addb
pusha
mov
xchg
push
jl
jle
add
mov
inc
imul
ficompl
cli
or
subb
mov
les
popa
into
shr
or
adc
add
jle
xor
pop
loopne
push
jnp
arpl
sub
or
inc
push
sbb
add
cld
data16
lods
mov
push
add
inc
add
shlb
jp,pt
jne
enter
adc
mov
push
or
loop
adc
js
cmpsb
add
dec
cs
mov
dec
lea
and
es
xor
xchg
jnp
push
mov
popf
mov
data16
xchg
out
and
loop
fwait
cltd
push
and
xor
jb
adc
jbe
repz
dec
dec
clc
dec
inc
mov
add
movsb
int3
mov
cmp
or
dec
test
test
lea
imul
xor
sbb
add
or
xor
sti
xchg
out
jns
add
mov
loop
lods
mov
test
xchg
add
stos
fidivl
enter
lea
dec
in
mov
psubsb
repz
sbb
scas
mov
movl
sahf
pop
lock
lea
pop
mov
or
mov
lea
adc
inc
fs
inc
test
sahf
mov
faddp
test
ljmp
inc
jne
or
mov
sub
lea
push
ret
imul
cld
adc
xlat
lea
sub
and
and
gs
add
adc
xchg
cmp
adcb
sbb
sbb
and
out
popl
xchg
loopne
loope
sbb
pushf
or
push
mov
pop
dec
or
dec
xchg
cmpsb
pop
cmpsl
dec
add
nop
sub
push
pop
int3
cs
call
cmp
movsb
mov
enter
xchg
inc
and
rclb
fwait
scas
mov
sar
dec
mov
cs
arpl
cmc
pop
mov
sbb
adcb
xchg
pop
jg
or
dec
shll
pop
pop
add
insb
pop
add
xchg
adc
dec
push
adc
sub
jo
and
and
daa
mov
jae
or
popf
stos
rcll
inc
xor
and
mov
sub
push
hlt
fmull
lea
or
mov
add
lods
mov
insb
pop
xor
and
das
add
pop
idivb
jno
cld
aaa
ret
test
inc
cmp
inc
push
pusha
cmpsb
mov
jo
mov
ret
repz
xlat
dec
jmp
in
in
repz
and
movsl
jno
or
add
push
je
jmp
loopne
add
add
cmc
pop
fildl
ret
push
pop
imul
dec
add
and
dec
je
inc
add
add
xchg
jle
cmpl
sbbl
adcb
sbb
fdivs
add
sub
dec
movb
fdiv
xor
add
je
lret
mov
test
movsl
mov
sbb
nop
sti
jmp
mov
mov
test
lahf
mov
lea
rol
push
enter
jp
scas
inc
mov
xor
adc
and
dec
inc
mov
add
adc
mov
xor
jl
adc
sbb
sahf
adcb
inc
scas
mov
orb
loopne
cmp
lock
sbb
jmp
jbe
jnp
js
shrl
cmp
dec
or
addl
test
lock
xor
andb
test
mov
mov
xchg
pop
sub
ss
mov
xchg
xchg
imul
dec
push
or
popa
mov
jo
into
lock
lods
aas
jae
dec
je
sub
cltd
add
push
or
out
das
ud0
or
xor
xlat
stos
or
add
dec
inc
rcr
push
pop
sub
push
scas
inc
shlb
adc
es
es
inc
and
or
mov
cs
punpcklbw
xchg
ds
mov
addb
or
js
add
jmp
lret
adc
or
and
adc
loop
ret
clc
jmp
test
insb
lock
cmp
add
push
add
xor
ret
sbb
dec
insb
xchg
xchg
sar
or
sub
dec
push
lods
popa
stos
scas
stc
add
movzbl
add
andb
lock
adc
sub
hlt
insb
or
push
lret
and
test
std
mov
pop
add
dec
push
mov
repz
mov
outsb
mov
mov
mov
push
hlt
inc
aam
mov
lock
fidivs
mov
adc
adc
jl
xchg
adc
lds
jne
and
sub
movl
or
jle
mov
and
test
xorb
fdivr
xor
jl
cltd
adc
aas
addr16
fidivl
jbe
movsb
cmp
sbb
rcr
rorb
adc
daa
dec
mov
or
sub
mov
xchg
sub
or
and
inc
fnstcw
fiaddl
enter
pop
scas
je
cmpsb
sub
ret
sub
sub
out
add
cld
adc
adc
push
add
ds
out
movsb
ret
andl
add
pop
xchg
xor
push
mov
rorb
imul
mov
sbb
mov
leave
push
sbb
mov
xor
adc
inc
cmp
mov
xor
mov
mov
insl
cmp
jae
or
jmp
sbb
adc
mov
fisubs
cmpb
sub
sub
push
lret
je
ljmp
sbb
pop
iret
sahf
outsb
xor
jmp
jmp
roll
cmpsb
inc
shrl
push
sbb
pop
sbb
jne
inc
int3
adc
lea
rcrb
dec
add
add
mov
dec
jae
add
sub
jle
clc
lock
xor
js
andl
nop
sbbb
ss
sbb
fucomi
inc
mov
mov
adc
cmpsl
xor
add
cmp
inc
inc
jmp
push
adc
mov
fadds
test
insb
jb,pt
sub
add
loop
xorl
lea
divl
hlt
push
data16
scas
add
pop
add
add
out
inc
inc
lea
bound
sub
decb
pop
sbb
mov
sub
dec
ret
sub
jb
fsubrp
scas
sahf
xchg
testb
add
jmp
outsb
push
ret
add
push
js
leave
movlps
inc
mov
or
inc
xchg
test
stos
jecxz
inc
add
dec
mov
cwtl
jl
sbb
or
outsl
mov
mov
add
sahf
xchg
out
sub
gs
add
inc
loope
ja
adc
mov
push
or
mov
jge
and
inc
push
push
ja
inc
jbe
push
jae
scas
jbe
cmp
lret
cmp
int
mov
push
arpl
arpl
lods
mov
ljmp
ds
lret
cmp
popa
and
adc
dec
sub
leave
push
xchg
sar
dec
sbb
aam
je
mov
xchg
ret
mov
mov
daa
mov
mov
inc
test
pop
insb
insb
or
cmpsb
ret
mov
andb
test
dec
lret
loopne
pop
mov
cld
mov
mov
ret
dec
push
pop
rorl
xor
xchg
mov
aam
xchg
mov
rcr
push
push
nop
je
or
je
or
dec
je
sbb
cmpsb
test
or
add
xor
and
jne
std
push
daa
movsb
push
xchg
mov
fimull
lea
daa
mov
lea
sbb
mov
iret
and
sub
lret
pop
inc
inc
shr
jmp
sbb
push
in
pop
lcall
or
cmp
dec
jbe
push
jbe
insb
je
ja
jmp
mov
xor
adc
arpl
ss
cmpb
jne
inc
inc
nop
std
orb
or
in
push
dec
ror
ret
sbb
push
loopne
es
out
dec
jno
xor
inc
push
arpl
clc
addr16
pop
in
mov
cmpsb
sbb
add
inc
ret
add
pmulhuw
insb
and
pop
add
xor
push
movsb
sbb
jo
xor
loopne
mov
adc
mov
sub
lods
hlt
mov
in
or
inc
imull
je
clc
and
aam
mov
mov
ficoms
add
lahf
hlt
lock
or
inc
inc
lea
mov
push
int
cs
ret
repnz
xchg
sbb
icebp
lods
push
push
push
sbb
shrb
fwait
or
add
lods
or
stos
xchg
shlb
pop
sub
call
cli
add
mov
test
pop
mov
popa
and
jle
fildl
nop
and
pop
ucomiss
sub
ror
popa
fsubp
out
into
popa
sub
sbb
cwtl
push
cmpl
into
sub
mov
xor
xchg
bound
in
jno
mov
mov
pop
test
sarb
sbb
js
sbb
sbb
adc
icebp
je
add
xchg
mov
inc
xchg
mov
incl
lret
add
cmpsb
add
rclb
mov
or
insb
pop
adc
and
and
sbb
add
push
push
js
int
push
lret
pop
lock
or
je
cs
call
inc
mov
mov
adc
sbb
or
push
rorb
andb
dec
dec
and
rol
jnp
fneni(8087
inc
gs
sub
jg
mov
bound
jle
inc
ljmp
pushf
test
mov
inc
addr16
or
cmpsb
arpl
sbb
or
std
adcb
jmp
push
or
sarl
popf
cmp
clc
jecxz
ds
je
jne
pop
jmp
jnp
and
inc
ja
lret
or
je
jmp
mov
nop
repnz
or
mov
rdpmc
shlb
pusha
xchg
lock
fidivl
loope
mov
neg
mov
mov
push
sbb
imull
mov
add
inc
jge
push
test
stos
testl
cmp
lcall
inc
in
faddl
call
roll
add
aaa
je
push
cltd
mov
mov
outsl
push
daa
sub
sbb
xor
nop
mov
push
int3
pusha
mov
cmp
sbb
scas
lods
sub
add
add
enter
pusha
cmpb
call
jo
inc
push
movb
xor
orl
and
jmp
es
sti
inc
dec
testb
adc
adc
shr
or
inc
push
dec
lock
add
pop
inc
sub
xor
jae
jnp
jnp
add
je
and
push
sub
dec
call
stos
mov
inc
scas
xor
or
jle
xchg
js
mov
inc
mov
or
xor
cmp
fnsave
jbe
mov
dec
mov
jmp
jnp
or
sub
dec
sbb
dec
add
pusha
shlb
outsb
or
mov
mov
sbb
xchg
sub
cmpsl
push
push
clc
sarl
js
xor
mov
push
hlt
out
jns
out
mov
ss
cld
mov
gs
dec
add
push
mov
mov
adc
push
loop
incl
pop
jmp
push
pop
mov
stos
or
add
adc
jge
into
ret
push
ja
ficompl
js
aad
cmpl
pop
fistpl
clc
inc
jg
xor
arpl
dec
jo
es
or
inc
out
into
xor
insl
aas
dec
insb
loop
lock
addl
add
das
sbb
add
sbb
cld
cmp
addl
add
mov
nop
sbbl
or
stos
test
inc
pop
mov
inc
cmp
pusha
pusha
cmp
mov
xchg
push
sub
cwtl
push
sbb
call
push
sub
xchg
mov
movl
adc
loopne
and
mov
or
sub
add
mov
xchg
push
pushf
adc
adc
adcl
loopne
popa
inc
add
inc
push
scas
pop
adc
dec
rcrb
imull
pop
add
add
or
sub
add
call
sub
push
out
push
inc
jne
add
and
loope
pop
out
sbb
clc
inc
cmp
sbb
or
enter
inc
inc
les
add
mov
test
fsubs
adc
mov
push
mov
push
enter
xor
jg
js
pop
jbe
or
pop
aad
outsl
hlt
pop
add
cmp
ret
aaa
addl
loopne
es
and
mov
imul
cmp
xchg
mov
add
and
subb
push
or
jbe
movb
aam
and
jle
bnd
mov
lds
sub
cmp
aam
inc
in
add
int3
and
lea
scas
add
or
adc
adc
sbb
jp
xchg
jg
leave
adc
mov
or
push
push
xor
pop
mov
das
adc
or
or
mov
je
and
aas
out
cld
jb
cmp
ja
add
cmp
adc
cmp
jne
dec
jne
int
and
adc
and
pop
daa
notl
test
push
xor
add
mov
or
mov
je
or
nop
mov
sub
push
popa
xor
add
aad
idivb
pushf
jmp
add
push
fadds
push
push
mov
jge
adc
or
fcoms
dec
sbb
sbb
js
shll
lock
mov
shl
les
aas
mov
jmp
sti
lods
push
pop
mov
or
out
xor
or
xchg
jmp
mov
jmp
push
add
xor
dec
cmpsb
dec
lods
push
sbbb
mov
and
out
or
pop
lret
push
call
sahf
repnz
ljmp
sti
add
hlt
movb
add
cmp
rorb
and
add
icebp
test
or
xor
lock
lods
shr
gs
jg
push
add
sti
inc
pop
push
jmp
enter
dec
sbb
jmp
add
ss
or
xor
inc
and
rcl
xor
mov
daa
inc
bnd
pop
push
cmpsl
push
icebp
mov
push
sti
jmp
jnp
jecxz
dec
dec
sti
cmpb
dec
push
adc
cld
mov
dec
mov
adc
jge
adc
aam
jge
mov
mov
or
push
cwtl
cmp
js
cmp
xchg
add
xchg
xor
sub
les
arpl
jnp
loope
jb
inc
loopne
jmp
popf
sbb
dec
hlt
and
add
cmc
cmpsb
inc
aaa
add
push
outsl
jg
insl
pop
sbb
push
mov
sub
fs
sti
ss
add
mov
addr16
or
sbb
jnp
jo
xor
and
sbb
aas
or
sub
jo
inc
daa
sbb
ljmp
push
dec
jmp
lea
xchg
jne
mov
loop
jae
and
jne
test
cmp
cmp
jb
fadds
cmp
leave
ror
hlt
into
jle
cmpb
adc
mov
leave
add
and
sub
in
mov
mov
jne
push
pop
inc
or
jne
mov
inc
fstpt
dec
cmp
jne
mov
mov
push
mov
jbe
push
gs
mov
adc
pop
ss
and
push
and
bt
sub
nop
adc
or
or
inc
mov
add
test
push
fisttpll
andb
addr16
mov
repz
dec
mov
fwait
adc
je
add
jno
mov
and
and
jle
ljmp
nop
sahf
dec
inc
mov
sbb
mov
inc
lcall
adc
dec
sub
and
add
aas
push
jmp
out
aam
mov
mov
add
adc
mov
aas
pop
dec
add
shl
sub
lret
and
movb
icebp
add
adc
call
pop
xor
xor
das
sbb
mov
pop
je
in
icebp
ret
jge
test
mov
sbb
jae
xor
loope
add
iret
add
scas
pop
rorb
jl
pushf
jne
ja
inc
cwtl
jnp
aas
pop
jne
mov
inc
push
ljmp
push
lret
mov
cmp
je
inc
lea
and
into
cmp
stc
push
ss
cmp
or
shr
ret
cmp
ja
test
sub
ss
inc
stos
test
cwtl
mov
inc
clc
or
xchg
pushf
or
lcall
shr
mov
enter
jne
sarl
add
add
mov
xor
cs
rcl
push
test
and
and
pop
or
cwtl
ret
xchg
inc
enter
call
lock
shll
or
shll
jne
or
pop
aam
mov
ds
sub
mov
lea
add
mov
mov
cmp
xor
push
push
adc
int3
xchg
sbb
push
pop
movsb
and
mov
lret
out
les
mov
movsl
jb
sbb
add
pusha
lret
scas
setl
jne
mov
dec
xor
into
out
add
pop
push
icebp
jecxz
jp
dec
add
and
sbb
imul
lret
addr16
adc
pop
leave
int3
push
sbb
push
daa
pcmpeqd
pop
jo
push
pusha
adc
dec
ret
lahf
add
adc
adc
xor
mov
cltd
add
adc
into
push
dec
dec
mov
xchg
sahf
adc
fsubr
add
fdivrl
lock
add
movsb
out
mov
adc
or
cmp
test
add
aas
addl
xorl
jno
jns
lock
mov
jl
sarb
lock
fists
inc
repz
test
leave
popf
sub
jp
call
mov
mov
ret
mov
cs
data16
inc
jmp
orl
inc
jns
loope
mov
nop
cmp
clc
adc
xchg
adc
dec
daa
sbb
push
pop
repz
push
enter
in
bound
jne
rolb
outsb
mov
mov
push
testb
sub
lea
inc
int
pop
dec
das
xchg
fidivl
dec
mov
or
jo
or
push
jle
outsb
stos
and
mov
or
or
out
out
pop
adc
decl
js
mov
jmp
ret
das
inc
mov
ljmp
dec
cmp
add
or
or
leave
jmp
outsl
lahf
cmp
fildl
inc
clc
push
xor
pop
sbb
sbb
testl
adc
clc
lea
xchg
fists
cwtl
test
and
movsl
dec
or
adc
cmp
sbb
or
out
or
cmp
cmp
lock
or
jb
fistpl
aam
pop
outsl
testw
je
cltd
ret
jmp
adc
mov
dec
jl
es
std
inc
sbb
adc
sbb
fimull
jb
push
mov
iret
fnstenv
gs
lcall
mov
jmp
and
adc
sub
pop
stos
into
xor
loopne
inc
xchg
push
fiaddl
in
out
outsl
or
lods
test
insl
sub
cli
enter
jnp
mov
cmpsl
cmp
xchg
sbb
cld
push
popa
xor
mov
add
mov
test
add
inc
in
movsl
aad
dec
dec
inc
clc
xchg
mov
cmp
rcrl
push
xlat
add
mov
adc
add
mov
add
add
adc
or
push
sbbl
jge
lea
jo
mull
and
or
test
push
cmp
or
pop
test
dec
test
adc
jbe
mov
xchg
test
pop
mov
and
push
movb
mov
lods
mov
add
sub
pop
and
aam
addr16
faddl
das
and
fs
insl
and
xchg
sbb
clc
ret
sbb
adc
or
inc
aam
pop
add
and
push
aaa
push
xor
cmp
xlat
add
pop
sbb
add
mov
addr16
push
jns
test
xor
dec
and
nop
daa
sub
aam
arpl
sub
adc
popf
hlt
lea
mov
cwtl
inc
sub
or
cld
sub
ret
fstpl
movsb
and
lock
mov
pop
adc
sbb
or
into
or
and
mov
loopne
mov
leave
fisttps
adc
movsb
or
mov
pushf
aam
std
mov
mov
inc
dec
pushf
ret
stos
sub
jb
stos
inc
push
or
cmpsb
mov
push
nop
pop
lret
sub
sbb
aaa
ljmp
cmpsl
ffreep
xchg
addr16
scas
mov
or
mov
or
or
movb
push
xchg
cmp
pop
adc
ret
and
loopne
or
cmp
mov
scas
adc
divb
out
xor
loop
sbb
arpl
dec
lods
ja
jecxz
jle
mov
xchg
xor
sbb
xor
imulb
test
xor
push
les
mov
dec
ljmp
mov
movsb
adc
test
push
aam
mov
inc
adc
addl
lods
pop
jb
shl
add
cmpsl
test
aas
xor
xchg
xor
fbld
push
pop
mov
sahf
lods
cmp
xchg
xchg
gs
mov
jnp
les
repnz
ds
daa
inc
push
and
subb
push
pop
mov
dec
pop
or
or
jl
push
sbb
pop
add
jne
pop
xchg
rol
jle
xor
enter
inc
mov
rclb
pop
cmp
xor
insb
fidivs
inc
push
jge
adc
loopne
les
adc
in
pop
mov
xor
pop
xchg
xchg
mov
shlb
mov
push
ret
ret
scas
loopne
and
dec
pop
movsb
add
push
mov
andb
mov
test
or
sub
lret
ficomps
push
ljmp
sbb
out
popa
mov
loopne
adc
push
sub
rorb
mov
sub
add
daa
mov
mov
cwtl
setbe
jne
adc
sbbb
xchg
popf
mov
inc
cmp
outsb
aas
push
inc
push
jmp
push
add
cltd
xchg
fnstcw
sti
pop
adc
sub
xchg
pop
test
sbb
add
fcmovbe
jge
call
mov
mov
mov
lret
enter
fcmovnbe
xchg
in
adc
jg
sub
pop
out
inc
push
push
pop
ljmp
andl
ss
xor
movsl
fldt
rcrl
pushf
sbb
insl
or
adc
cwtl
bound
mov
pusha
add
or
pop
jmp
adc
sbb
fsubrs
and
movsl
push
and
sbb
rolw
xchg
and
adc
sub
cmp
jg
mov
add
loop
jmp
sbb
call
inc
ljmp
adc
test
push
push
mov
sub
cli
ret
jmp
adc
pop
mov
pop
adc
lock
dec
and
sub
jo
ds
ret
ss
sbb
adc
mov
jne
push
push
jl
mov
push
lret
jns
fidivrs
add
and
sbb
popa
fldcw
inc
and
sub
and
icebp
jae
xor
inc
or
or
leave
aaa
scas
lret
sbb
add
clc
mov
cmp
inc
mov
mov
cmp
rcll
mov
imul
fldenv
add
subb
mov
jbe
test
pop
adc
inc
add
adc
les
lea
aas
movb
dec
daa
dec
cs
xchg
jb
xor
mov
idivl
call
outsb
pop
in
adc
lcall
inc
js
movsb
test
ret
xor
movsl
xchg
pop
or
int
add
xor
add
test
push
test
jg
inc
cmp
jne
or
jmp
and
mov
and
test
dec
clc
cmpsb
and
dec
mov
lret
adc
imul
data16
cmp
je
push
out
mov
dec
enter
mov
cmp
data16
jmp
movb
inc
sbb
jae
push
adc
lahf
or
je
popf
dec
lea
inc
cmp
pop
stos
xor
pushf
mov
mov
mov
jmp
imul
popa
sbb
cmpb
add
jbe
jmp
lcall
lcall
je
out
jle
xchg
and
roll
mov
inc
enter
sub
ljmp
mov
sub
push
and
mov
subb
xor
inc
js
push
outsb
or
and
xor
and
fnsave
shll
mov
sbb
call
jbe
loope
jb
sbb
sub
in
add
mov
call
frstor
add
xchg
push
sub
lock
sub
testl
adc
aam
add
and
sarl
add
jl
push
popa
xchg
add
pop
add
sbb
mov
sub
push
mov
jne
pop
inc
sti
xor
and
lea
mov
dec
or
leave
mov
popa
fiaddl
pop
pushf
push
mov
pop
jb
sbb
inc
stos
or
stos
sub
nop
sbb
jmp
dec
lock
fistps
ret
pop
fildll
xlat
sarb
enter
sub
xor
xor
or
test
pop
mov
jmp
sbb
mov
add
fs
lea
test
or
jno
xchg
push
or
ja
xchg
add
ret
lahf
pop
push
test
mov
test
pop
pop
sub
cmp
icebp
pop
add
sub
xchg
ljmp
pop
call
loopne
int
cmp
adc
leave
and
rorb
add
pop
scas
je
sub
and
and
sbb
lds
fdiv
sbb
cmp
in
inc
mov
jb
test
test
add
lcall
push
sbb
xchg
inc
xchg
insl
mov
andw
inc
pop
mov
add
push
adc
sbbl
and
xor
inc
fimull
test
jne
mov
push
sbb
lret
sbb
adc
cmpsl
lods
push
idiv
add
inc
push
outsl
fs
xor
sub
outsb
ja
out
or
push
je
push
bt
jne
sbb
jl
insl
inc
cmpsb
mov
add
enter
test
icebp
jmp
dec
sbb
js
out
pusha
inc
jge
mov
and
dec
cmp
and
sub
pop
lods
fldcw
sub
arpl
ss
call
xchg
cmp
cmpsb
push
not
inc
ret
mov
pop
imul
add
cmp
sahf
out
and
or
mov
sbb
hlt
sarl
sub
inc
imul
pop
scas
cmp
repz
adc
not
jne
or
jmp
or
add
test
push
add
cmp
cmp
enter
cwtl
inc
pusha
out
mov
adc
jbe
push
sbb
xorl
adc
dec
repz
add
add
test
addl
mov
and
sub
clc
testb
xorb
sub
xor
mov
jo
fmuls
ret
add
dec
adc
pop
les
imul
mov
sub
jecxz
inc
shl
not
test
outsb
mov
lcall
hlt
or
mov
jmp
pusha
and
jl
and
adc
inc
mov
pop
pop
push
mov
test
aaa
cmp
sbb
sbb
dec
pop
pop
addr16
les
mov
jge
adc
lods
adc
push
mov
sbb
pop
cltd
addr16
add
xor
lea
and
repnz
add
test
inc
push
xchg
mov
jecxz
push
push
sbb
pusha
adc
push
lret
and
inc
push
pop
jo
lcall
enter
cmp
test
add
add
clc
mov
push
jbe
in
dec
or
sub
mov
add
push
push
test
xor
push
int
pop
orl
out
sbbl
sub
not
stos
enter
and
or
mov
dec
push
xor
mov
jne
xchg
hlt
pusha
add
or
or
xor
adc
andb
adc
xor
sbb
sub
and
popf
inc
push
fwait
test
scas
sub
jecxz
mov
pop
adcb
push
or
add
aam
sti
add
fwait
sub
mov
add
testb
rorl
jl
testb
mov
pop
adc
xchg
lock
mov
mov
mov
cmpsl
add
gs
inc
sbb
sub
loopne
jge
test
pushf
jmp
inc
aas
sub
outsb
iret
xchg
cmpsb
cmp
xchg
dec
and
mov
sub
xor
addb
mov
movsl
pusha
or
add
add
ljmp
inc
push
mov
and
add
inc
dec
mov
inc
cmpb
jg
es
outsb
xorl
pop
cwtl
bound
je
icebp
or
incl
sub
xchg
popa
jl
clc
aas
jl
mov
and
push
les
mov
jbe
sub
xchg
dec
cmc
xchg
mov
mov
shrb
mov
cmpsl
rcrb
mov
push
xchg
dec
or
add
push
pop
gs
jle
xchg
fistl
pop
push
mov
rolb
inc
and
xor
out
sub
ss
jl
cmpb
jl
nop
sbb
fmuls
mov
ds
out
xor
incl
test
andb
mov
cmpsb
test
shlb
jle
adc
push
je
popf
push
and
adc
cld
push
and
xor
mov
xchg
adc
out
add
test
dec
add
push
xchg
mov
fwait
mov
pop
add
dec
lahf
mov
dec
add
adc
iret
ss
push
rcll
mov
sub
push
sub
or
mov
int
jo
or
jecxz
je
test
outsb
insl
mov
data16
jmp
dec
add
pop
test
inc
scas
xor
dec
loop
and
test
xor
in
add
outsb
pop
or
lea
scas
adc
mov
jecxz
push
jmp
adc
iret
das
jmp
mov
xchg
add
or
aaa
xorl
xchg
dec
int
and
sub
add
or
shl
mov
outsb
push
jmp
inc
push
pop
push
jmp
push
outsb
inc
xchg
inc
dec
push
mov
push
int
push
out
sbb
fdivl
or
mov
push
je
sbb
movsb
adc
mov
mov
pop
rolb
xor
jle
lea
cwtl
mov
icebp
rcll
or
xorb
adcl
sahf
or
ss
mov
ret
add
xchg
adc
fistpll
into
ljmp
push
pop
pop
rclb
mov
sti
cmp
sub
add
mov
das
adc
lea
std
dec
sub
sub
sub
imul
sbb
das
xchg
or
mov
push
fdivrp
mov
mov
andb
xor
stc
xor
or
jle
jb
dec
roll
and
add
outsl
ja
pop
inc
sub
add
cmp
cmp
mov
push
adc
add
roll
jg
adc
add
lret
inc
jp
inc
adc
xor
lcall
or
pop
dec
fmuls
xchg
inc
cs
mov
cmpsb
or
cmp
add
push
addr16
push
cmp
adc
cmp
in
add
mov
sbb
repz
popa
mov
or
stos
inc
jo
popf
cwtl
or
out
fneni(8087
mov
sbb
xchg
daa
add
mov
pop
inc
jo
mov
dec
insl
cmp
inc
or
push
cli
icebp
dec
xor
pop
add
cmp
ret
je
rolb
imul
shlb
add
mov
test
inc
fiaddl
or
les
ret
nop
popa
push
or
aam
and
xor
rcrb
dec
adc
or
pop
xor
sub
ret
loopne
push
sub
xchg
fcom
sub
pop
out
loop
pop
and
mov
pop
aam
dec
push
call
pop
dec
mov
xlat
push
sti
xor
popa
mov
or
jg
hlt
push
lds
cmp
sbb
jno
sub
mov
aam
add
pop
mov
sbb
fsubl
cmpsl
cmpsb
scas
jmp
pushf
out
xor
inc
add
mov
mov
or
fwait
sub
je
inc
xchg
cmpsb
mov
inc
jle
arpl
mov
aam
push
sti
dec
push
punpcklwd
dec
push
jb
jne
cmpb
int3
ret
fbstp
adc
add
add
fwait
dec
jmp
xchg
mov
mov
loope
push
bound
jae
xchg
adc
mov
incb
add
call
jmp
adc
xchg
jo
jle
hlt
fdivs
adc
data16
push
dec
repz
and
cs
mov
jo
xchg
adc
iret
cmpb
mov
mov
push
lea
pop
dec
pop
test
mov
sarb
dec
sub
adc
loopne
ret
cltd
add
pop
fsub
push
xlat
inc
mov
or
dec
adc
jmp
jbe
lods
rcrl
pop
add
inc
add
fdivr
sub
pop
pop
nop/reserved
sbb
or
mov
sbb
push
sbb
or
adc
pop
lock
mov
je
rorb
les
adc
test
mov
imul
jmp
scas
inc
and
sbb
mov
and
filds
push
pop
lcall
jl
incb
into
icebp
mov
inc
dec
adc
and
xor
mov
xor
mov
dec
mov
int3
bnd
ret
daa
mov
stos
flds
adc
sbb
fsubrl
inc
sbb
cmpl
xchg
push
inc
mov
xor
dec
clc
sti
pusha
rclb
ss
fcomps
add
mov
dec
cmpsb
shl
mov
stc
ljmp
mov
nop
ret
cwtl
mov
popa
or
mov
cmpsl
push
jns
adc
pusha
push
cvtps2pi
xchg
mov
cmpsl
add
fcmovbe
inc
or
push
adc
scas
imul
je
push
mov
cmp
repz
cmpsl
mov
xor
adc
jg
or
jb
fists
inc
sbb
xor
jecxz
roll
arpl
or
les
movsb
hlt
popa
mov
fcompp
sub
dec
sbb
lahf
in
add
sub
mov
push
xchg
adc
sub
insl
jecxz
pop
add
xor
or
or
je
and
into
sub
inc
das
outsl
ljmp
and
mov
loop
jp
jp
lock
test
push
add
push
sbb
push
pusha
mov
lods
jmp
sbb
jle
data16
adc
add
sbb
test
adc
data16
sub
loope
push
xchg
ficoms
push
out
pop
insl
ret
push
adc
push
repnz
lcall
cmp
mov
cmovle
inc
subb
in
lea
fisubrl
popf
sbb
jae
sub
aaa
pop
jne
push
jb
dec
call
xchg
test
cmp
xor
lcall
movsb
icebp
xlat
aaa
jmp
int3
int3
lahf
test
sub
movsl
add
sub
sahf
loop
mov
push
ficompl
negl
loopne
lock
shlb
test
jne
imul
mov
popa
xchg
pop
add
and
rol
dec
mov
push
insl
adc
push
push
scas
addl
cld
sbb
out
push
jp
insb
sbb
push
popf
adc
mov
or
inc
call
inc
pop
cmp
sub
sbb
imul
cld
lret
mov
jmp
sbb
xchg
cmpsb
push
js
orb
jno
jo
xlat
lret
fildl
js
lret
loopne
jbe
jmp
push
je
fs
les
repz
push
pop
shl
call
not
and
andl
ljmp
das
push
xchg
aaa
push
or
push
dec
dec
or
frstor
sbb
push
fimull
xor
jne
sbb
mov
shll
cs
cmp
stos
sub
sbb
adc
mov
cwtl
cld
push
push
add
rol
add
movsl
cmp
add
lcall
ljmp
mov
cmpsl
out
pushf
jl
sub
pop
jmp
dec
xchg
dec
testb
adc
push
cmp
sbb
scas
jb
ficoml
add
sub
pop
push
mov
ret
mov
fcmovne
sbb
xor
lret
into
test
cwtl
pop
adc
sahf
aaa
pop
sbb
in
rclb
enter
sub
push
das
or
jp
test
hlt
arpl
xor
sbb
xor
fimull
adc
fldcw
das
dec
shr
shl
fistpl
sbb
sti
sti
mov
jmp
or
out
shr
or
push
push
dec
xor
xchg
es
and
inc
je
daa
push
scas
mov
push
push
data16
roll
lret
sub
mov
push
pop
cmp
popl
mov
lcall
into
movsb
mov
pop
pop
push
into
inc
add
or
adc
xchg
out
adc
out
adc
icebp
sbb
lahf
dec
imul
mov
xchg
test
adc
cmp
jmp
xchg
ljmp
sti
sbb
push
jmp
popf
stos
enter
and
push
movb
push
in
jns
out
out
jmp
lahf
out
in
out
sti
out
aas
mov
rcr
inc
add
imul
les
push
add
andl
ss
out
and
xor
add
add
add
xchg
inc
rolb
jle
mov
and
add
inc
imul
pushf
jmp
pushf
nop
lock
movsb
adc
out
jne
in
push
and
sbb
push
mov
mov
into
add
rcrl
push
add
outsl
sub
movzwl
mov
sbb
adc
out
or
xchg
push
xor
dec
inc
clc
decl
cli
imul
mov
lea
roll
test
decb
mov
pop
mov
inc
lock
jbe
pop
sarl
aas
jb
in
xor
xor
mulb
sbb
mov
je
lods
push
cmp
les
mov
dec
into
xor
cmp
aam
pop
lret
add
add
rclb
clc
cli
mov
mov
or
dec
ljmp
pop
neg
cmp
mov
dec
jle
cmp
dec
xor
dec
add
sbb
mov
jb
dec
and
jne
sub
sbb
insb
jbe
imul
sub
addr16
jle
inc
sti
mov
mov
inc
data16
add
add
adc
add
jo
xchg
pop
hlt
cmp
lea
jl
fimull
mov
fwait
arpl
push
dec
jmp
movsb
or
incl
incl
incb
sub
sub
mov
lds
fstpl
cmpsl
pop
or
pop
hlt
flds
call
xor
mov
pop
dec
test
in
aas
mov
aad
in
inc
or
mov
rorb
out
aad
movsl
cmp
or
les
cli
push
cld
dec
lods
cli
std
mov
aas
ja
adc
mov
xchg
sbb
test
stos
mov
add
test
rolb
fdivrl
dec
ljmp
cmp
cmp
stos
sti
adc
int
push
dec
addr16
loopne
cs
push
or
push
adc
cmp
add
dec
inc
dec
xchg
or
add
repz
push
add
cmp
sar
jo
push
pusha
add
in
insb
push
add
lcall
adc
pushf
mov
push
cwtl
or
rolb
and
shl
mov
rorl
std
mov
outsl
cmp
or
sub
test
add
fdivrs
add
pop
dec
ljmp
ss
fsubrl
adc
outsb
jmp
dec
or
inc
insl
xchg
inc
inc
fisubs
push
loop
push
es
or
test
roll
je
push
jmp
insl
jno
push
loop
fisubrs
jae
mov
or
sbb
popa
dec
sti
and
dec
add
in
sbb
push
xor
dec
mov
push
add
int3
andb
or
cmp
push
mov
xorb
jge
loope
xchg
in
mov
or
adc
add
xchg
mov
scas
add
ret
push
lods
add
fsubl
shr
mov
add
xor
cmp
loopne
movsl
hlt
cmp
push
sahf
lods
sbb
in
insl
jl
fcmovbe
jg
jmp
and
lods
sub
sarl
xchg
inc
fcoms
jbe
sub
xor
mov
cmp
and
inc
fcmovnbe
add
dec
mov
cli
icebp
and
mov
mov
mov
lock
pop
jbe
xlat
mov
pop
dec
sub
fmuls
inc
or
push
xchg
sbb
pusha
jmp
dec
push
mov
inc
jmp
jl
pop
orl
pusha
rcrb
fsubrp
cmp
push
xor
push
add
es
and
gs
sub
jmp
fdivr
ret
push
inc
sub
daa
testb
or
sub
sarb
push
aam
add
jbe
pop
ret
test
add
jle
add
pusha
add
add
sub
lds
add
inc
aad
int3
int3
dec
scas
jae
push
mov
xchg
aaa
cwtl
pushf
mov
add
sbb
call
leave
cmp
mov
test
movzwl
or
cmp
mov
jbe
scas
sub
xor
push
hlt
xor
push
push
in
xchg
rol
lahf
flds
scas
inc
inc
mov
mov
je
sbb
mov
repnz
xchg
lea
and
sbb
push
int3
xchg
jne
loop
jmp
inc
and
out
inc
xchg
dec
sub
jle
inc
sarl
pop
aad
ds
mov
fdivs
and
or
mov
sbb
push
jl
das
lcall
dec
ss
push
inc
call
pushf
adc
push
xchg
adc
xchg
cli
lds
push
add
add
push
clc
jl
jl
rclb
sub
inc
cmp
add
mov
sub
push
push
daa
ficomps
mov
or
lods
setbe
or
dec
lods
sub
add
push
xor
in
sub
shl
inc
shlb
inc
testl
adc
adc
xor
push
pop
jl
inc
xor
ds
sbb
movsl
in
xchg
pop
ret
mov
cmp
inc
pop
push
and
mov
pusha
testl
rcll
push
push
inc
enter
fnstenv
inc
sbb
xchg
sti
out
jne
pop
in
aas
jp
adc
outsb
es
mov
test
add
dec
loopne
es
repnz
cmp
loopne
add
sbbb
sub
pushf
add
loop
icebp
ja
cld
jmp
cmp
je
dec
cmp
cmpsb
insb
and
mov
xorb
imul
je
cltd
xchg
mov
adc
and
test
loope
aas
scas
shrb
jne
xchg
loopne
push
jecxz
lock
fcomps
push
or
and
nop
addl
enter
movsl
jne
aam
gs
out
subps
jb
lahf
imul
xchg
jle
xor
sub
je
xor
pop
sarb
fcomps
adc
loop
out
cmp
std
adc
add
or
arpl
in
inc
pop
push
loopne
out
add
lods
push
sub
adc
aas
lea
setbe
fstpt
jns
clc
imul
inc
mov
jge
xchg
and
inc
nop
or
xor
outsb
sub
je
pusha
clc
je
or
sbb
pushf
sub
test
lds
inc
pusha
fwait
lret
aas
and
add
xlat
sbb
push
xchg
xchg
js
dec
pop
push
or
rcrl
pop
add
mov
push
pop
or
lea
and
jle
or
fcompl
lahf
mov
js
and
push
fldl
sub
push
mov
inc
in
push
hlt
xor
cmp
mov
or
je
sub
add
call
pop
cwtl
push
jmp
outsl
xchg
push
pop
mull
pop
lock
jl
add
testb
ja
popf
mov
jmp
aas
sahf
jmp
imul
pop
jge
xchg
sub
fcomps
loopne
rorb
call
push
sbb
xchg
lea
inc
pop
dec
ja
sbbb
fmul
fsubrs
xorb
adc
inc
nop
mov
lock
xchg
xor
outsl
pop
shlb
xlat
fwait
mov
repnz
into
out
pushf
pop
jo
xor
adc
jns
sti
xorb
xchg
xchg
push
push
ffree
stos
adc
pop
jae
leave
xchg
ret
xor
push
loopne
mov
imul
and
push
pop
push
xchg
lret
and
movsl
aas
pop
mov
dec
push
inc
add
pusha
mov
outsl
dec
inc
test
lock
fs
mov
add
sub
popa
mov
or
mov
mov
hlt
sub
scas
sbb
jle
adc
xchg
movsb
icebp
adc
add
iret
icebp
cmc
andb
mov
sbb
jnp
das
push
mov
sbb
ror
fs
jle
pop
jb
mov
icebp
mov
pop
push
andl
or
add
mov
push
adc
dec
loope
ret
mov
push
scas
cltd
xchg
add
pop
mov
xor
sbb
xor
add
add
mov
xchg
push
addr16
mov
lcall
js
pushf
inc
loopne
sbb
lods
test
punpcklwd
and
sub
imul
nop
pop
in
xchg
xchg
dec
mov
fmul
testb
fnstsw
push
jnp
mov
jne,pn
aad
out
sub
fucomp
add
sbb
loopne
int3
xor
insb
push
adc
fs
adc
adc
or
pop
mov
fdivs
add
mov
pop
xchg
add
or
or
fnstenv
pop
pop
shr
mov
pop
fwait
dec
lock
scas
in
cmp
xor
fadds
add
ljmp
and
pop
adc
or
jo
xor
call
divb
js
xor
push
aaa
in
jo
mov
gs
jl
ja
mov
pop
popa
sbb
sbb
add
xorb
mov
lock
adcb
adc
and
aaa
add
imul
cmp
ret
pop
mov
or
in
les
xchg
mov
je
movsb
mov
cmp
mov
adc
cmp
out
or
cmp
lock
xchg
or
fcompl
test
pop
loopne
in
mov
adc
lods
mov
push
push
push
dec
inc
mov
outsl
sub
pop
jmp
aam
movsl
test
xchg
pop
lock
and
dec
sub
shrl
jecxz
dec
sbb
add
lcall
loopne
or
dec
xchg
mov
push
add
push
or
xlat
jecxz
or
adc
push
repnz
ficompl
pop
movl
lcall
push
jo
cmp
aaa
push
jo
mov
sub
push
js
and
test
fwait
or
mov
mov
aam
sub
mov
adc
dec
pushf
push
and
faddl
inc
add
dec
shll
add
sbb
ret
xchg
cmpsb
jbe
xor
rcrb
cmc
test
sbb
loopne,pt
mov
inc
enter
movsb
pusha
cmpsb
test
and
lahf
dec
inc
inc
mov
sub
dec
outsb
dec
decl
cltd
insb
pop
jae
jnp
and
mov
dec
push
push
or
cwtl
add
or
push
inc
popf
inc
adc
loope
mov
cwtl
xchg
pop
sub
mov
or
sbb
inc
les
adc
ja
xchg
push
int3
xor
adc
xor
in
xchg
push
xchg
loop
xor
repnz
setl
sarl
xor
or
or
sbb
mov
inc
lret
gs
movsl
xor
aad
ja
rolb
shll
or
mov
into
xchg
add
movsb
repnz
repnz
je
sahf
mov
push
push
and
mov
mov
jb
nop
stos
inc
sbb
adc
mov
lds
ss
mov
sar
jne
pusha
or
pushf
lret
dec
cwtl
xchg
lret
cmp
sub
mov
sbb
loopne
js
or
fidivrs
inc
mov
push
rorb
push
add
add
mov
xor
orb
mov
dec
hlt
and
sub
movsb
icebp
jne
sahf
sub
in
ret
ss
jp
xchg
and
popf
rol
xchg
popf
andl
pop
dec
pushf
sbb
movb
sub
push
fcoml
push
fmul
sbb
stos
mov
dec
nop
hlt
jg
jp
cld
push
and
push
pop
sahf
test
sub
sub
push
xchg
pop
and
cmp
mov
sbb
or
xlat
add
push
push
test
cmpsl
je
fildll
mov
cmp
adc
push
jno
add
nop
push
sub
pop
dec
adc
inc
idiv
pop
and
inc
add
ss
mov
loop
int3
dec
pushf
inc
sbb
jle
rorb
filds
divb
cli
add
and
dec
sub
cmpsb
lock
rcll
and
push
sbb
xlat
call
in
andl
insb
add
repz
ljmp
add
popa
xor
cltd
xchg
or
in
adc
rorb
xchg
add
and
xchg
test
pop
mov
sbb
jge
repz
push
sbb
push
push
in
int
adc
fmull
sub
mov
dec
addb
lret
or
sbb
or
lock
sub
cmp
and
nop
mov
in
fdivs
or
lock
pop
xor
mov
jge
sahf
or
es
in
lods
enter
lcall
add
andl
pop
pop
push
js
xorl
mov
adc
adc
lock
lock
enter
clc
dec
or
sbb
adc
pop
cmp
push
mov
out
xor
push
xchg
jl
data16
push
nop
xor
dec
mov
or
lock
je
fcomps
aaa
inc
mov
jmp
mov
and
adc
test
adc
nop
push
or
das
sbb
jbe
sbb
test
fdivrs
dec
cmp
stos
xor
sub
mov
incb
dec
addb
xor
call
xchg
int3
call
pop
pop
push
or
pusha
push
cltd
outsl
push
jo
fadds
shrb
lods
pop
nop
add
cmpsl
sbb
in
cmpsl
add
test
add
push
shr
adc
fsts
inc
add
pusha
pop
sbb
dec
imul
xor
dec
shl
sahf
call
xor
inc
movsb
mov
jl
push
sahf
repz
daa
pushf
inc
and
sbb
lret
add
es
sbb
pop
jl
and
das
or
ljmp
xor
mov
sub
xchg
pop
popa
js
lahf
mov
mov
push
mov
cmp
lret
fidivrl
and
mov
je
pop
je
and
aam
ja
jae
and
and
xchg
xor
les
mov
aad
jmp
pop
pop
movsl
pop
dec
xchg
mov
lock
or
jge
rep
ss
jne
adc
in
and
clc
je
sub
cmp
clc
loopne
mov
out
xlat
mov
outsb
iret
add
cmp
ds
aam
mov
push
stos
orl
cmpsl
push
sti
mov
nop
pop
test
inc
xor
adc
push
lock
pop
loop
or
add
sub
sbb
xor
dec
sub
add
shrb
pop
outsl
or
dec
aaa
cld
inc
in
shrb
cmp
pop
or
dec
adcb
dec
and
das
imul
in
mov
inc
mov
in
test
sbb
cmp
rcrb
pusha
aaa
mov
daa
clc
pop
adc
add
lcall
sub
mov
and
add
sarl
popa
mov
inc
adcb
mov
dec
jmp
pop
scas
mov
test
push
dec
xchg
es
mov
push
mov
lcall
lret
aam
sub
push
out
push
movb
imul
int
mov
sub
adc
mov
jne
mov
ljmp
scas
lock
bound
push
mov
mov
in
jbe
mov
sti
or
mov
mov
pop
mov
cmpb
enter
call
add
dec
inc
cmp
enter
xchg
inc
sahf
int
hlt
and
jns
sbb
push
sbb
or
mov
add
adc
prefetchnta
and
pop
scas
push
xchg
movsl
lds
leave
pop
add
adcb
out
loopne
inc
push
and
js
pusha
jnp
xor
insl
and
nop
mov
cmpb
inc
mov
addb
js
loop
pop
add
jle
mov
push
push
ret
push
push
xor
subl
cmp
fsubr
mov
push
imul
jne
fimull
out
pop
pop
mov
push
or
mov
lret
and
add
jne
xor
push
push
xchg
mov
das
pop
fwait
push
sti
xchg
push
sub
xlat
sub
push
push
push
add
mov
jmp
jle
sub
push
and
into
sbb
pop
mov
push
pop
pop
les
pop
cmp
mov
mov
rorl
dec
add
add
pop
adc
push
and
xlat
cmpl
movzbl
popa
fstpl
scas
lock
xor
mov
sbb
mov
jge
les
addr16
mov
lock
pop
cmp
add
dec
pop
or
mov
inc
jno
loope
sub
mov
push
dec
sub
xchg
or
push
ret
jb
pop
cmp
push
add
sub
sub
xchg
pop
dec
enter
jl
jno
or
subl
jbe
adc
mov
push
pop
mov
sub
out
mov
je
add
mov
pop
mov
xchg
mov
jle
les
pop
cmp
outsl
iret
loop
in
jmp
flds
insb
jno
cwtl
cs
adc
rcrb
in
repnz
ret
repnz
add
js
xor
push
inc
xor
insl
pop
sub
repz
and
sub
add
fs
les
sbb
push
sbb
fcmove
cmp
imul
rolb
xlat
ljmp
int3
adc
hlt
jecxz
and
or
and
shlb
push
ljmp
adc
sub
loope
push
hlt
mov
arpl
pop
adc
repnz
push
mov
xorb
push
mov
mov
je
lcall
cmp
or
loope
push
adc
xchg
sbb
inc
rcll
xchg
aad
iret
sarl
pusha
shrl
jmp
xor
push
in
ret
insl
inc
inc
mov
enter
adc
pushf
hlt
gs
pop
loopne
and
sahf
leave
cld
mov
stos
push
stos
and
insb
cs
inc
jg
loop
add
add
mov
shl
movsl
jg
adc
mov
enter
and
xchg
inc
mov
cmp
push
and
sub
cmpl
testl
ret
or
jb
cmp
add
jno
mov
lock
cs
adc
add
push
sbb
dec
push
push
mov
aas
inc
icebp
loop
lea
dec
adc
rolb
sahf
lret
sbb
sti
push
cmpsb
adc
mov
cmp
push
adc
inc
icebp
dec
rolb
in
fwait
neg
and
or
push
mov
sbb
dec
dec
ret
out
nop
hlt
jl
inc
enter
ret
xsha256
cmpsb
aad
dec
adc
adcb
push
push
clc
mov
inc
repz
sub
decl
inc
sub
shlb
in
jns
xchg
cwtl
jge
clc
and
or
dec
pop
fimull
mov
rolb
xor
fsubs
or
and
shlb
mov
ja
and
outsl
loop
cmp
push
mov
adc
or
mov
and
or
es
mov
jb
insl
mov
faddl
cmp
add
sbb
or
adc
test
nop
ljmp
pop
mov
loopne
test
sbb
cmp
push
add
jo
inc
into
je
pop
adc
movsl
les
aam
and
inc
mov
jmp
push
rolb
in
push
inc
xorl
sbb
fdiv
scas
out
xchg
sbb
int3
dec
sub
sub
pop
iret
loopne
inc
jmp
notb
mov
pop
push
stc
cli
jp
inc
xorb
pop
sbb
ret
cmp
test
push
xchg
jbe
mov
jno
pusha
mov
or
xchg
push
sbb
and
push
push
repz
loopne
cmpb
sbb
mov
jae
xchg
fiaddl
std
int3
cmp
pop
mov
jecxz
pop
xchg
stc
mov
cltd
fcomps
nop
pop
add
das
into
mov
aas
stc
mov
cli
dec
movsb
add
mov
adcb
inc
mov
adc
adc
mov
addb
mov
sbb
js
push
inc
xor
stos
fwait
and
mov
aam
and
jle
orb
ds
cmc
call
cmp
pop
inc
pop
adc
mov
inc
popf
shrl
sub
adc
int3
xchg
mulb
or
or
or
add
bound
out
mov
pop
adc
je
adc
and
mov
loopne
mov
in
cmp
xor
mov
or
pop
cmp
pmuludq
jp
dec
fisttps
aas
jmp
inc
cmp
jb
pop
jne
and
or
loopne
gs
sbb
sbb
sbb
rolb
cld
pusha
outsl
xor
mov
inc
shlb
loop
jae
lock
insb
cltd
mov
inc
test
add
mov
addr16
xchg
je
icebp
mov
in
scas
xchg
sub
and
add
mov
xchg
enter
jmp
idivb
mov
xor
jae
nop
nop
and
cltd
popa
add
mov
ss
call
and
jmp
jecxz
or
inc
ljmp
and
push
push
sbb
pop
ja
or
call
jg
pushl
jp
jo
jae
dec
or
xchg
dec
lcall
or
push
push
adc
int3
sub
insl
outsb
popa
ffree
outsb
daa
mov
sub
xor
push
std
or
adc
inc
jo
add
test
dec
sbb
pop
loope
adc
add
push
loopne
hlt
and
pop
stos
jmp
dec
jno
and
push
ljmp
icebp
mov
jmp
test
adcb
lret
push
es
push
rep
and
sub
notb
incl
arpl
and
mov
and
aaa
adc
pusha
inc
test
push
imul
cmp
loopne
daa
sbb
mov
add
push
cmovno
mov
andl
cs
inc
jmp
lcall
add
stos
fmuls
jmp
push
or
test
adc
xchg
andb
push
lcall
dec
inc
ret
jge
dec
cmpsb
fistl
stc
mov
shl
jbe
iret
fdivrl
push
jne
int
push
lahf
or
add
pop
or
subl
xor
jbe
push
cltd
pop
jmp
jbe
mov
dec
pop
sbb
adc
filds
fsubr
or
add
stos
stos
ss
ret
adc
stos
ljmp
jg
nop
loop
imul
sbb
add
pshufw
into
insl
and
xchg
sbb
mov
ficoms
push
stc
jge
into
jb
cmp
dec
dec
or
xchg
mov
inc
adc
inc
clc
loopne
and
mov
lea
push
int
push
lock
sub
hlt
mov
out
push
dec
pusha
or
inc
add
adc
jo,pt
cmp
push
push
mov
mov
mov
loope
xchg
mov
and
add
or
scas
or
cwtl
xchg
inc
mov
andl
fdivrs
loope
jp
leave
inc
push
cmp
addb
sbb
add
pop
test
jo
add
lock
cld
jo
fldpi
adc
add
xchg
cmp
pop
push
inc
insl
out
add
jnp
pusha
adc
call
and
adc
enter
dec
fwait
test
popa
dec
sbb
cld
dec
fildl
inc
and
mov
loopne
push
sbb
mov
sbb
sbb
and
cmc
js
rolb
add
rorb
test
lods
mov
ljmp
nop
das
popa
add
jne
mov
or
dec
xor
daa
pusha
lcall
dec
xor
pop
cmp
push
notb
hlt
push
out
inc
mov
loopne
pop
loopne
sub
jbe,pn
lcall
clc
test
jg
aam
sub
cmp
jg
enter
fwait
adc
ret
push
dec
lock
fdivr
push
cmp
sbbl
jmp
es
add
daa
pop
scas
lea
std
aaa
add
das
push
lcall
pusha
int
mov
xor
sub
gs
stos
pop
shll
push
push
xlat
dec
sbb
test
and
xchg
sbb
test
jmp
cmpl
pop
lret
fsubrs
inc
js
or
popa
sbb
inc
cmp
mov
dec
adc
jge
inc
cmp
or
test
repz
push
and
add
and
mov
lcall
adc
jmp
sbb
mov
pop
xor
sub
arpl
or
frstor
xor
pop
sbb
mov
inc
xchg
push
pop
xor
popf
jb
inc
mov
scas
push
shll
js
mov
mov
cmpsb
addb
fs
test
or
andb
add
and
out
outsb
loope
jg
cld
lea
add
push
or
pop
popf
xchg
nop
inc
xor
jge
cmp
aas
and
pop
xor
or
sub
add
lds
adc
mov
dec
jno
rorl
ret
add
dec
pop
cmp
or
test
shlb
adc
push
xor
jo
xchg
imul
rcrb
imul
pop
and
leave
sub
inc
or
mov
or
adc
sbb
mov
adc
lods
pop
lods
mov
fidivl
imul
or
mov
add
into
test
out
adc
sbb
or
adc
pushf
addl
push
cmp
into
fiaddl
or
and
adc
or
outsl
rorl
lea
add
push
jg
fnstenv
mov
dec
lods
xchg
or
ss
xor
xor
cli
outsl
push
pop
cmp
pop
or
adc
jmp
or
inc
and
or
jo
or
or
je
xor
mov
dec
mov
ret
inc
add
mov
xor
ljmp
push
or
lock
sbb
xor
cltd
test
fsubrp
out
inc
inc
push
add
aam
xchg
push
hlt
stos
push
xor
pop
lock
or
aas
je
adc
movsb
push
imul
or
inc
inc
push
cmpsl
nop
popa
fistps
and
test
add
or
sbb
or
fwait
pop
fs
sbb
jne
jno
mov
cmpsl
jbe
prefetcht0
and
daa
xor
and
push
pop
ja
lods
or
in
push
mov
movb
mov
pop
pop
imull
je
push
ret
add
imul
outsb
pop
xchg
dec
push
js
cmp
ljmp
js
test
lret
andl
or
adc
push
mov
cmovo
or
test
dec
mov
pop
push
adc
add
push
iret
inc
jl
jg
pop
mov
stos
add
into
sbb
push
stos
movsl
test
pop
adc
add
in
push
mov
movsb
rclb
aam
sbb
ret
adc
vmread
out
call
push
dec
or
pop
lock
pop
lock
notb
cmp
ds
divb
lahf
dec
js
add
je
sbb
sub
test
xchg
data16
test
pop
ss
jo
mov
in
mov
cwtl
insb
pop
jmp
mov
rorb
jns
sub
and
mov
cltd
or
mov
cmpb
loopne
shlb
pop
push
mov
cmpsl
push
dec
sbb
shlb
or
ficoml
inc
adc
dec
sub
adc
or
out
pop
pop
ljmp
xor
mov
ret
sbb
jge
popa
xchg
dec
ja
fstp
out
add
or
popa
push
mov
adc
xchg
mov
cmpb
aad
data16
mov
stos
int
jmp
push
aad
pop
pop
and
sub
sub
loop
pop
sub
scas
mov
xchg
jg
enter
insl
mov
fimuls
dec
and
lock
pop
pop
sahf
add
push
nop
shll
jmp
pop
mov
popl
dec
jbe
in
lods
aaa
inc
jp
xor
in
scas
and
inc
xor
shll
pop
or
ljmp
xchg
adc
add
jmp
outsl
cmp
pop
dec
dec
dec
out
xchg
inc
sbb
dec
inc
adc
sub
sub
dec
rcl
sbb
inc
jae
mov
adc
jnp
cmp
sbb
dec
cmpsb
les
sbb
sbb
pushf
pop
out
es
add
xor
popf
and
push
das
or
aad
call
mov
test
mov
xchg
or
add
mov
mov
add
adc
pop
call
adc
call
cmp
loopw
add
pop
pop
rol
mov
lods
cmpsl
adc
pop
aaa
fsubrs
push
jecxz
cwtl
adc
shl
mov
or
pushf
into
out
mov
or
sub
jae
jne
push
fiaddl
in
es
faddl
hlt
inc
jne
push
loopne
pop
cltd
inc
jp
test
pop
fistl
wrmsr
adc
popa
adc
mov
cmp
test
jne
sub
or
dec
sub
push
sbb
mov
mov
push
push
in
xchg
push
sub
inc
adc
push
jnp
push
and
dec
dec
xchg
mov
add
shl
lock
lods
sbb
adc
mov
call
lea
sub
or
idivb
in
or
in
nop
mov
jae
or
mov
xchg
sub
aaa
inc
mov
jecxz
bound
lret
inc
xorl
adc
xchg
lea
enter
dec
jp
jmp
jl
les
jl
lret
and
dec
sbbb
jle
js
xchg
mov
cmp
push
adc
mov
or
push
add
pop
ret
add
mov
pop
and
sbb
test
sub
or
pop
inc
mov
pop
add
sbb
push
mov
outsb
jle
or
or
mov
sub
xchg
leave
xchg
add
lea
dec
arpl
or
movsb
push
out
pop
bswap
jmp
push
sbb
add
pop
xchg
jl
shll
xor
sub
mov
call
push
adc
cmpsb
sub
adc
inc
sbb
sarb
or
add
cmp
je
push
inc
push
add
sbb
das
daa
sbb
and
jo
mov
sub
or
adc
lods
and
jne
xor
add
sub
pusha
xchg
cmp
inc
sbb
mov
je
frstor
out
and
orb
inc
fcomps
mov
inc
mov
xchg
fwait
and
and
mov
in
push
out
push
dec
xchg
cmp
rolb
inc
push
push
aaa
inc
sub
push
sbb
arpl
fistl
xor
mov
inc
xchg
inc
and
jnp
pusha
sbb
inc
sub
bound
cmp
add
test
cmp
push
je
xor
xchg
popa
mov
adc
push
adc
inc
mov
dec
fwait
mov
rolb
xorl
sbb
mov
cmp
jle
dec
cmp
lock
sub
cmpsb
inc
cltd
push
lea
xchg
cmpsl
or
subb
adc
and
xchg
cmpsl
jne
xchg
mov
add
mov
jp
adc
orb
jb
inc
ss
fbstp
push
jo
fnstenv
hlt
pop
je
cmpw
jp
push
inc
or
push
popa
sbb
jbe
mov
xchg
jb
or
test
and
add
push
pusha
xchg
push
mov
cmp
xlat
insl
or
int3
xchg
rcl
scas
adc
fwait
inc
cmp
sub
fidivs
add
arpl
or
in
leave
pop
mov
dec
and
push
xor
mov
sub
aaa
pop
neg
adc
mov
dec
xor
pop
push
sti
pop
ja
mov
or
aad
cs
clc
fiadds
adc
fs
jnp
xchg
idivb
mov
dec
jnp
and
push
push
aam
mov
fimull
jnp
add
pop
adc
mov
or
nop
mov
jge
mov
pop
test
sbb
add
jo
sahf
xor
inc
push
rcl
adc
jl
les
jge
sbb
inc
or
push
push
fistpl
fs
mov
enter
mov
add
adc
sub
add
sbb
je
or
push
push
add
les
adc
addr16
inc
mov
mov
mov
sbb
in
add
rorb
sub
add
cmovs
xor
push
dec
jno
add
out
push
jne
add
mov
pop
mov
add
dec
lock
clc
inc
hlt
jne
push
cmpsb
xchg
dec
jg
xor
sbb
lods
inc
pop
pop
push
pop
into
cmp
sti
cmp
lods
mov
out
jne
and
aam
roll
out
add
pop
cmp
adc
jp
test
adc
jb
push
jcxz
pop
outsb
es
xor
orb
lods
gs
test
adc
pop
or
cld
aam
jne
mov
adc
jo
rorb
movsb
test
sub
test
mov
and
mull
testl
adcl
mov
add
push
rol
lea
daa
insb
mov
int3
jb
movsl
sbb
outsl
adc
jle
push
add
adc
inc
cmp
cmp
push
jae
adc
or
adc
lea
push
pop
outsb
ret
push
sahf
sbb
fnstcw
or
es
orb
insl
scas
sahf
dec
nop
ss
mov
push
push
dec
jmp
inc
sub
fstp
push
xor
fstpl
sbb
push
insb
pop
lcall
adc
stc
js
push
mov
add
leave
mov
jnp
add
loop
push
adc
add
jmp
xor
int3
inc
inc
repz
or
inc
push
mov
dec
dec
sub
fildll
xor
mov
inc
int
or
fidivl
add
les
and
mov
inc
repnz
mov
jl
push
sbb
push
add
mov
popl
inc
jno
shrl
bound
jnp
dec
and
enter
hlt
mov
call
sbb
xor
and
es
out
ret
pop
imul
cmp
hlt
pop
mov
pusha
or
call
xor
xchg
fdivrs
out
mov
cmp
dec
jnp
adc
adc
pop
movsb
shrl
adc
dec
rclb
push
cwtl
rcll
movsl
clc
mov
xchg
sbb
loopne
sbbl
sbb
xor
hlt
dec
std
repnz
bound
mov
adc
aas
inc
fwait
mov
in
push
push
imul
int3
or
dec
or
sbb
aaa
push
pop
push
push
subl
jnp
or
xor
jmp
subl
push
mov
ljmp
cli
ds
lock
adc
mov
sbb
sub
repnz
mov
in
dec
popf
dec
mov
sub
mov
sahf
xor
xchg
cmp
mov
cmp
repz
push
sbb
pop
iret
lret
pop
movsl
pushl
pushl
sbb
mov
mov
xor
nop
jmp
daa
lods
xchg
cmc
inc
pop
sbb
popa
add
or
out
lock
pop
cmovle
jecxz
jo
fmulp
fsubs
cs
pop
jo
cmp
mov
adc
test
bound
push
adc
inc
and
mov
push
imul
or
xchg
test
out
enter
mov
xor
mov
push
jecxz
and
xor
add
popf
mov
push
add
cld
xchg
arpl
sub
sub
lock
sbb
xor
lock
adc
lods
cmp
jg
adc
dec
stos
add
add
dec
lcall
xor
pop
xchg
push
sbb
dec
add
mov
lock
inc
loope
and
outsb
int3
sub
fucomip
adc
arpl
add
idivl
xchg
jmp
daa
xorl
cli
sbb
dec
shlb
xchg
push
out
cmpsb
test
fnstsw
adc
push
and
push
push
out
lock
js
mov
in
jl
dec
shlb
or
pop
push
in
xor
add
loope
je
inc
xchg
scas
repz
cmp
dec
test
jl
cmp
imul
rcl
lock
jne
cmp
mov
dec
shll
stc
popa
add
sub
out
and
or
jg
cmpb
and
add
scas
pop
push
imul
mov
xor
xchg
dec
sub
call
bound
sub
jne
sub
fcomps
inc
pop
es
adcb
jmp
xor
shl
pop
sbb
movsb
dec
testb
dec
push
cmp
test
mov
add
pop
mov
cmp
xorb
pushl
aam
sub
jne
mov
pop
sub
lret
movsl
add
adc
dec
adc
test
or
shl
push
movl
aad
orb
push
xchg
movsb
xchg
push
push
add
inc
loopne,pn
push
push
dec
inc
popf
push
sbb
or
xor
cmpxchg
push
sbb
dec
adc
pop
arpl
out
mov
adc
xchg
sub
jmp
push
sub
add
dec
cwtl
mov
push
lea
pop
js
aaa
hlt
clc
mov
mov
lcall
xchg
adc
sbb
cmp
xchg
mov
lcall
and
insl
cmpsl
out
pop
and
xor
mov
or
pop
jp
fsubr
pop
push
and
dec
or
test
test
pop
jae
sarb
sub
inc
shlb
push
aam
lods
mov
and
loopne
sub
mov
add
inc
push
lret
cld
mov
xorl
fsubrs
dec
push
sbb
lahf
or
aaa
je
push
or
aas
stos
test
sbb
das
sub
mov
imul
test
mov
sub
mov
nopl
ret
add
add
jne
iret
cmp
popa
dec
or
ja
and
pusha
mov
aaa
testb
rorl
aaa
adc
push
test
inc
sub
stc
dec
push
mov
xorb
fsubrp
je
pop
shlb
and
shl
es
mov
xor
lea
add
inc
pusha
jg
xor
sarl
add
dec
lea
pushl
mov
movsb
mov
js
sub
inc
add
jle
xchg
dec
mov
sub
jle
sti
xchg
jle
das
sahf
xor
pop
gs
fs
pop
addl
pop
jnp
enter
cmpl
mov
pop
and
and
fs
movsb
or
jp
add
shll
push
fwait
add
roll
sbb
or
jmp
xor
xor
bound
dec
rdmsr
clc
mov
notb
outsb
in
push
sub
outsl
dec
jmp
or
inc
xchg
add
add
sub
xchg
xchg
rcrb
dec
mov
mov
xchg
in
sub
and
sub
addr16
jge
adc
es
sbb
adc
or
pop
pop
or
push
xor
pop
push
xchg
sti
jmp
sub
cmpsl
lods
push
pop
dec
mov
push
mov
push
jmp
jne
daa
movq
adc
pop
jg
jo
mov
or
lret
enter
jecxz
lahf
mov
xchg
xchg
add
andb
cwtl
enter
sub
pushl
push
push
xor
or
fldt
add
push
add
jno
je
xor
or
js
mov
mov
or
mov
out
scas
ficoml
or
xor
jbe
testl
pop
movl
js
cs
sbb
or
aas
test
push
stos
in
ret
dec
add
mov
sbb
cmp
jnp
scas
ret
inc
add
mov
pusha
in
int3
movsl
adc
gs
shl
enter
arpl
pop
lock
adcb
xor
adc
mov
pop
xor
sub
ret
adc
inc
cmp
push
setns
loope
sarb
and
test
mov
shl
adc
jb
es
push
cmc
je
mov
push
inc
adc
shrb
pop
adc
push
sbb
inc
dec
add
scas
inc
faddl
sub
faddl
push
imul
imulb
mov
ret
pop
icebp
sub
pop
js
xchg
rcll
jmp
xor
pop
aam
push
xchg
ret
jecxz
cmpb
add
xor
mov
sbbb
push
add
idivb
jb
dec
or
in
lcall
rcrb
or
lcall
and
into
pop
rcr
imul
shrb
push
sub
push
imul
lods
movsl
dec
lcall
cld
or
cmp
mov
jne
jge
mov
pause
push
movsb
cs
inc
pop
add
lock
or
aas
pop
pop
and
dec
adcl
pop
push
ss
adc
xorb
and
sbb
adc
push
inc
out
xchg
les
jae
cmc
xchg
cmpb
enter
das
or
push
xor
jmp
add
cmp
pop
cmpb
mov
lods
scas
ror
jne
cmp
pusha
sahf
aam
insb
pop
add
push
stos
rolb
inc
inc
xchg
sbb
jecxz
push
mov
inc
or
ja
pushf
sub
movsb
mov
push
xor
lcall
call
inc
adc
mov
imul
jmp
cmp
ljmp
out
or
push
scas
ds
lret
cs
mov
leave
add
stc
js
xchg
pop
jl
add
ds
pop
jns
mov
cmp
cmp
mov
dec
sahf
ja
mov
ds
pop
push
into
sub
sbb
negb
xor
aas
sbb
sub
ss
cs
xlat
bound
addb
and
pop
push
xchg
jbe
dec
mov
xchg
leave
sbb
andb
loop
add
jmp
aam
or
mov
std
gs
call
jo
mov
add
add
cs
add
cmp
pop
jo
arpl
out
cmp
mov
pusha
outsl
sbb
loop
jmp
popf
jbe
mov
push
test
xchg
cs
sub
test
sbb
mov
push
mov
mov
rcrb
stc
mov
xchg
sbb
jmp
xchg
jnp
subb
inc
jmp
lock
sahf
sahf
add
into
stos
aas
mov
push
sub
pop
jno
add
sbb
mov
pusha
pop
sub
fimull
pop
sbb
dec
add
sbb
add
stc
hlt
fnstsw
sub
jne
or
cmpsl
mov
icebp
xchg
das
push
dec
mov
inc
cmp
movsb
fldcw
dec
imul
ret
iret
jmp
outsb
subl
aas
shlb
sbb
mov
mov
xchg
ljmp
sahf
out
cmp
fwait
shl
cmp
cmpsl
jge
outsl
repnz
sahf
ds
sbb
in
mov
cmp
pop
dec
addr16
iret
repz
jne
xchg
mov
repz
xlat
out
pop
ds
data16
push
sub
daa
xchg
test
roll
cwtl
outsb
pop
push
outsb
dec
cmp
push
mov
fadds
gs
sub
xchg
dec
add
adc
and
jno
cwtl
inc
mov
add
adc
test
enter
and
dec
push
add
lahf
sub
push
adc
icebp
pop
sbb
fdivr
sbb
and
hlt
ds
fadds
add
es
xor
mov
sub
push
add
insl
mov
push
fnstenv
call
push
fisttpl
mov
push
loope
int3
js
lret
or
sbb
push
iret
or
inc
and
lcall
das
or
pop
nop
inc
adc
jl
test
addl
jb
mov
xor
sub
lret
xor
or
cmp
rolb
popf
or
mov
ja
dec
imul
push
push
jns
xchg
push
test
sbb
inc
cs
addl
push
mov
cmp
imul
sbb
adc
inc
ficompl
je
lods
imul
jno
inc
enter
or
shr
and
je
sbb
cmpb
fimuls
popf
add
scas
test
inc
subb
dec
add
adc
scas
popf
dec
loopne
aas
jnp
pop
push
iret
mov
pop
jno
movsb
jne
sbb
pop
int
test
mov
icebp
xchg
pop
pop
ss
jno
and
fbld
ljmp
or
sbb
adc
jmp
adc
aaa
cltd
stc
sbb
dec
jl
push
je
dec
push
add
inc
cli
into
jmp
adc
out
lods
ret
stos
pop
lret
mov
ret
and
push
fwait
add
or
sbb
mov
dec
add
adc
dec
pop
and
movsl
cmp
sahf
and
lods
rolb
mov
add
mov
sub
or
push
adc
les
loopne
adc
cmp
adc
mov
cmp
and
cmp
mov
adc
push
js
and
jo
mov
lea
push
and
sbb
inc
push
or
pop
add
xor
cmp
mov
enter
and
loope
idivl
jge
push
fmuls
push
imul
push
dec
mov
arpl
je
ja,pn
xchg
pop
adc
icebp
orl
call
addb
daa
or
cmp
icebp
xor
adc
xchg
ret
inc
ja
fisubrl
ja
clc
sub
sbb
das
jbe
or
rclb
jne
fmull
dec
sti
push
movsb
and
pusha
insb
xchg
es
js
dec
mov
mov
fdivrs
mov
insb
push
xor
mov
adc
cmp
pop
je
std
outsb
jo
mov
and
adc
dec
pop
jecxz
nop
jbe
orl
subl
shll
mov
and
add
and
gs
daa
es
loopne
push
pop
pop
adc
cmp
pop
aaa
into
data16
add
je
adc
stos
ud1
push
xchg
push
pop
adc
add
fmuls
and
inc
jg
adcl
enter
pop
frstor
mov
sub
fdivrl
dec
xchg
xchg
enter
push
cmp
movsl
adc
sbb
inc
inc
fwait
out
std
lds
xchg
popa
out
js
or
and
and
mov
lahf
jecxz
add
push
addl
rorl
sbb
lret
es
sub
scas
pop
jmp
mov
inc
jmp
cmp
ds
inc
lods
xchg
addr16
sarl
adc
and
sbb
adc
xchg
cmp
shll
lahf
test
insl
or
xchg
mov
add
push
pop
pop
or
clc
rclb
gs
scas
mov
push
sub
push
fstps
je
push
aaa
pop
mov
loopne
jmp
mov
push
lds
ret
pop
and
popf
push
mov
xor
cmp
push
add
enter
xorl
inc
or
adc
adc
jmp
sbb
cmc
xor
pop
add
push
int3
add
adcl
or
or
or
or
lods
sarl
imul
andb
dec
or
xor
cltd
or
add
add
movsl
les
mov
ret
popf
cmp
clc
ljmp
outsl
dec
mov
or
jno
inc
fmull
nop
test
test
cld
mov
jmp
mov
or
push
xor
rclb
je
aaa
jecxz
mov
cmc
mov
add
xchg
jmp
out
mov
pusha
dec
cmp
roll
mov
testb
das
movsb
push
cwtl
adc
or
subb
imul
es
addr16
sub
mov
dec
or
lods
lret
add
sbb
push
arpl
sarb
and
shrl
pusha
fs
xchg
jne
imul
mov
fisubl
and
push
dec
lret
mov
mov
call
shr
fs
out
mov
sub
add
or
idivl
arpl
orl
dec
sbb
jbe
mov
jge
add
stos
jo
sbb
pop
fcompl
adc
adc
sahf
dec
int3
add
and
pop
pop
jae
sub
cmp
dec
call
and
cwtl
stc
mov
mov
jne
xor
jmp
and
inc
cmp
jle
inc
subl
xchg
adc
adc
cmc
xchg
rolb
mov
inc
in
lcall
lea
inc
insb
add
mov
push
add
stc
add
jno
rolb
popa
in
scas
gs
inc
mov
movsb
mov
xchg
dec
xor
sbb
or
cmp
push
ja
or
add
xorb
rcrl
sbb
add
pusha
test
hlt
fdivr
and
testb
fadds
add
adc
push
or
add
pop
jne
pop
xor
pop
xor
sub
xlat
adc
sbb
pop
lds
jnp
inc
inc
jne
adc
jg
mov
push
jl
repz
lods
adc
ljmp
adc
inc
aam
pop
push
ret
insl
mov
or
or
je
inc
adc
pusha
jecxz
xchg
or
xchg
orl
rcll
add
loop
xor
je
inc
push
jne
sub
sahf
ret
ja
cmp
movsl
out
out
pushf
cmp
shl
insl
lock
push
xor
sub
and
push
ds
add
mov
fstpt
pusha
loope
je
and
push
jl
stos
mov
pmaxsw
ds
jo
cmp
push
mov
pusha
add
adc
shl
cmp
enter
sub
inc
clc
inc
fs
andl
push
xchg
inc
sub
cmp
sub
mov
sbb
and
cmp
mov
mov
cmpsb
push
mov
sbb
inc
mov
pop
xchg
shrb
and
dec
ss
pop
add
sub
in
ss
mov
xor
cltd
insl
sti
enter
push
loope
push
test
mov
xor
popf
arpl
dec
mov
sti
or
outsb
call
imul
sbb
push
xchg
jmp
push
adc
into
pusha
hlt
fadd
rorl
lret
xchg
inc
sbb
shlb
sbb
mulb
subb
push
cld
pusha
add
pop
adc
call
idiv
into
mov
je
pop
ss
mov
or
add
inc
addb
test
cmp
dec
inc
mov
movsb
push
mov
popf
out
sti
inc
add
mov
sbb
inc
sbbl
ss
adc
notl
sub
ds
mov
test
inc
mov
lret
andl
repz
inc
adc
xlat
sbb
adc
inc
inc
or
in
jae
shlb
sub
inc
aas
adc
in
cmp
out
jns
jns
inc
xchg
mov
mov
mov
clc
xor
adc
cmp
mov
xor
movsb
jnp
push
cmp
inc
mov
jge
filds
sbbl
and
and
clc
adcl
add
cmpb
cmpsl
cmp
je
inc
add
mov
rorl
jno
rolb
and
cmp
add
dec
add
or
insb
jle
push
and
add
enter
or
xchg
cmp
lea
pop
xlat
shll
add
jg
push
or
xchg
les
pop
and
rclb
or
add
aad
fistps
aaa
lret
mov
dec
cmp
pop
sub
mov
sub
jae
add
nop
test
jle
cmpsl
std
roll
ret
push
xor
jno
insb
or
or
sarb
push
call
mov
addr16
push
xchg
ret
movsb
xchg
mov
nop
fsubrl
sub
daa
imul
inc
inc
sub
add
and
test
sub
inc
add
nop
movl
xor
test
popf
push
fildl
sbb
lret
xor
lock
addl
pusha
ret
inc
bound
js
inc
xor
je
cmp
mov
repnz
mov
push
js
popa
dec
cmp
pop
jo
sbb
jnp
and
rcll
and
pop
push
movsb
rolb
inc
adc
pop
test
mov
cltd
loopne
lahf
xor
rclb
add
adc
sub
sbb
popa
cmp
jecxz
pop
jnp
cmp
mov
and
mov
xchg
mov
pushf
xor
sbb
or
ret
push
or
mov
pop
xor
or
ret
adcb
or
cwtl
fcoml
xor
fstpl
outsb
adc
cld
je
push
scas
outsl
mov
ljmp
mov
cmp
call
add
mov
or
push
mov
xor
dec
cmpsl
test
stos
inc
pop
bound
adc
in
or
aaa
xor
shll
fs
cmp
or
rol
jp
mov
and
inc
sub
lea
or
shrb
insb
scas
dec
cmp
pop
test
nop
xchg
ficoml
popf
dec
add
or
inc
sub
and
add
adc
lock
sbb
cmc
idiv
loop
pop
imul
insl
repz
call
lea
repz
sbb
ror
pop
and
loopne
bound
add
fbstp
pop
sbb
xor
and
inc
pusha
fwait
pusha
ljmp
lcall
jl
mov
cmpl
andb
inc
mov
or
das
or
les
adc
scas
push
jnp
test
or
add
imul
xchg
dec
add
pushf
fmuls
jecxz
cmp
mov
arpl
jae
sbb
sahf
cmp
push
xchg
cmp
sub
into
js
ja
sub
les
push
aas
lea
push
insb
xchg
aaa
aaa
lods
or
je
cs
cli
sub
je
enter
mov
aam
pop
lock
add
insb
push
lods
sub
mov
push
bound
dec
jp
jecxz
movsb
jmp
push
add
jl
dec
std
or
push
sbb
mov
push
fstpt
dec
loop
dec
cmp
add
xor
inc
jne
bound
mov
xor
jmp
daa
mov
mov
sbb
ficoml
or
loope
rol
or
rolb
xchg
leave
ret
roll
or
push
jo
pop
fimull
add
je
jbe
je
dec
dec
lea
mov
dec
inc
push
jnp
xchg
cmp
rolb
push
adc
frstor
or
subb
cmp
inc
into
pop
adcb
mov
jnp
adc
fadds
ficomps
ret
mov
shlb
add
sbb
test
mov
lcall
sub
cmp
cmp
mov
ja
and
je
push
pop
push
or
ds
into
popa
jle
push
loope
jne
out
pushl
push
push
adc
jae
jmp
aaa
and
mov
pop
jmp
sbb
out
push
das
les
je
fisubs
add
or
cltd
adc
mov
cmp
push
sbb
or
mov
dec
sti
gs
pop
das
jmp
int
or
mov
sbb
push
inc
mov
push
js
push
dec
and
sub
subb
push
xor
imul
or
subl
lods
daa
fadds
push
pop
ret
in
xchg
rcll
and
cmp
ds
push
xchg
push
and
dec
stc
pop
push
cmpsb
xchg
sub
and
push
push
pop
sbb
mov
lods
xchg
dec
in
push
mov
xorl
lret
add
movsl
fdivr
enter
and
add
test
pusha
push
adc
push
jecxz
adc
mov
in
jo
mov
movsl
and
cmp
test
jo
in
add
in
and
mov
mov
js
addr16
pop
repnz
xor
das
pop
pushf
push
xor
or
icebp
scas
and
add
adc
lock
in
sub
ja
and
adc
sbb
adc
mov
jl
push
roll
sbb
inc
xchg
or
push
or
xorb
lret
rorb
push
pop
jle
dec
add
loope
mov
hlt
ja
mov
pop
push
add
inc
or
fisttpl
jp
jne
adc
or
sbb
mov
sbb
fidivs
cs
lahf
fcmovnbe
or
add
adc
mov
icebp
das
mov
icebp
sub
std
popa
inc
shll
jns
jle
shlb
dec
ret
xor
cmp
rorl
shll
or
mov
or
lret
xor
mov
push
push
push
push
sub
or
and
cmp
ds
imul
inc
rcrb
xchg
add
push
jns
mov
arpl
sbb
adc
fdivs
xchg
or
pop
push
adc
mov
add
xor
xchg
jo
imul
insl
clc
jo
xor
pop
cmp
sub
outsb
lods
xchg
push
gs
sti
inc
or
jnp
sub
ficomps
xlat
jge
daa
scas
adc
sbb
adc
lcall
sahf
arpl
or
jl
call
xor
push
decb
and
mov
dec
and
lcall
and
js
cmp
jne
cmp
adc
ja
sarb
fs
sub
mov
adc
sti
stc
ret
lret
rolb
xor
push
les
jno
sbb
arpl
std
add
xor
mov
lds
pop
and
xchg
icebp
sbb
mov
inc
fmull
push
push
push
sbb
pop
outsl
das
cmpsl
add
jl
aas
lods
dec
add
enter
cmp
je
push
pop
cmp
mov
int
lds
cmp
daa
lock
push
xor
and
scas
mov
jle
push
xchg
push
and
add
jmp
adc
push
jo
pop
dec
nop
or
cmp
adc
xchg
and
fimuls
xorb
xchg
mov
clc
jp
adc
loopne
shll
push
push
cmp
sbb
in
dec
or
mov
push
das
je
adc
cmp
cmp
dec
add
sub
sbb
dec
mov
dec
sub
ret
or
ffree
and
adc
cmc
mov
cmpsl
jge
sub
pushl
jno
mov
cmpsb
add
das
sbb
fisttpll
jmp
adc
adc
into
adc
xchg
hlt
cmp
sahf
jg
aaa
je
stos
xchg
jne
mov
pop
mov
add
addr16
mov
aaa
jmp
and
cmc
cmp
cmp
aam
dec
ss
js
nop
inc
test
or
int3
or
xor
adc
inc
sahf
adc
push
xlat
xor
outsl
adc
add
test
andb
jne
inc
loop
fimuls
sub
hlt
pushl
cwtl
loope
add
push
sbb
jno
lock
mov
cmp
je
lret
xchg
inc
add
xor
inc
outsb
mov
or
pop
lret
stos
insl
out
fucomi
jmp
call
jle
insb
jae
sbb
sbb
lods
jae
jmp
inc
jne
lock
mov
pop
and
loop
sbb
out
fs
mov
cmpl
mov
movl
in
push
dec
dec
and
or
loopne
pop
xchg
xor
or
scas
inc
adc
push
mov
jo
mov
dec
mov
mov
mov
xor
sbb
leave
cmpl
mov
push
ds
push
stc
dec
loopne
test
rorb
ret
sbb
lret
sbb
test
ljmp
cmp
add
dec
sub
dec
dec
std
adc
sub
xor
fldl
mov
mov
adc
mov
in
mov
lcall
mov
ss
cmpsl
adc
mov
insb
sahf
adc
mov
push
fidivs
or
or
mov
push
pop
push
in
subb
inc
adc
add
mov
cmpsl
arpl
aaa
mov
loopne
lods
pop
aas
push
mov
push
mov
daa
or
adc
popf
cmp
pop
dec
dec
add
cld
cltd
jb
mov
push
outsl
pop
push
mov
mov
ret
fwait
push
out
fcomps
out
mov
lods
sub
test
adc
jo
rcrl
or
ds
add
pop
add
sub
mov
out
scas
test
push
or
jg
mov
daa
ja
insb
frstor
ja
je
mov
pusha
cmp
mov
rorb
push
or
jle
or
jp
and
add
push
fisubrs
ds
push
jmp
add
lock
mov
jge
mov
nop
inc
xor
imul
xchg
mov
or
jbe
cmp
xor
rcll
scas
push
mov
mov
sbb
jbe
ret
lock
lcall
mov
jae
push
je
insb
jne
mov
je
popa
xchg
lcall
in
scas
push
jmp
push
jmp
cmp
outsl
or
jp
cmp
popa
movsl
and
mov
stc
push
loope
mov
cmp
xchg
adc
mov
push
cmp
bound
xor
out
je
jne
mov
in
jnp
sub
or
int3
jp
mov
jne
inc
or
push
pop
sub
pop
jae
cmpsl
int3
or
mov
stos
xchg
mov
cmp
das
pop
mov
mov
outsl
insb
pop
mov
outsb
pop
in
scas
and
jg
jmp
ss
scas
mov
decl
add
leave
mov
ret
dec
ja
add
js
shlb
mov
inc
or
inc
xchg
adc
rclb
adc
add
jge
jne
push
andb
jns
dec
add
add
movb
adc
sbb
mov
aad
rol
push
xchg
adc
sub
jle
xchg
sub
rclb
lods
sbb
lahf
shr
outsl
pop
mov
xor
jl
xor
test
add
jle
imul
pop
fldl
icebp
pop
inc
flds
add
pushf
mull
push
int3
xlat
mov
cmp
sbb
adcb
insl
adc
add
dec
mov
adc
pop
inc
jns
mov
jmp
add
rorb
jb
jb
push
sbb
adc
adc
inc
and
add
fists
mov
sub
cmp
jae
cmpl
mov
push
inc
dec
sub
or
pop
pushl
and
adc
dec
jo
movsb
je
sub
pop
add
shlb
or
loopne
sbb
stc
jb
aam
mov
pusha
add
dec
ljmp
xchg
test
popl
rolb
add
fiaddl
fisubl
enter
sbb
mov
adcb
lahf
fildl
pop
loop
and
fsts
insb
sbb
lock
les
inc
push
mov
pop
jmp
xchg
mov
cmp
dec
pop
pop
sahf
sbb
ret
mov
cmp
or
sbb
add
hlt
out
pop
lock
aam
aas
cmp
add
mov
add
push
inc
out
aas
mov
add
or
iret
sahf
movsl
add
mov
sub
add
into
add
cmp
adcl
popa
es
cli
in
add
sbb
dec
sub
mov
pusha
test
shl
std
rcl
pop
push
xchg
pop
or
psllw
shll
sub
xchg
les
xchg
xor
test
icebp
push
add
mov
ret
sub
dec
add
jmp
insl
loope
xchg
aam
icebp
mov
add
movsb
add
fistl
movsl
cmpb
and
pop
sbb
ret
nop
dec
ret
not
rol
inc
aaa
mov
push
int3
sbb
mov
sarl
pop
sub
dec
or
roll
mov
add
cmp
push
fcmovb
clc
cs
lods
dec
cli
sahf
fildl
sahf
or
mov
pop
adc
lock
mov
jnp
push
movb
andl
push
or
push
popa
jecxz
inc
jmp
popa
fnsetpm(287
pop
xchg
dec
shr
popa
and
or
mov
pop
pop
xchg
push
loopne
sub
pop
fsts
push
pop
dec
cmpsb
je
adc
dec
adc
sbb
add
cmp
push
dec
dec
shlb
push
mov
add
xchg
push
pop
sub
and
inc
loop
je
jb
pop
adc
xchg
ret
inc
test
and
cs
inc
shl
cmp
sbb
mov
or
xor
push
push
cli
daa
adcb
add
cwtl
add
ss
lock
pop
cmp
insb
xor
push
testl
xchg
lea
mov
adc
adc
sbb
jbe
shrb
push
mov
fadds
pop
add
adc
leave
xchg
dec
push
pop
dec
adc
add
cs
into
lret
jne
jge
dec
addb
jle
dec
add
pop
xchg
pop
pop
or
inc
inc
jne
push
sbb
sub
ljmp
add
cmp
mov
je
shrb
das
mov
stc
and
push
xor
mov
test
mov
scas
rolb
imul
xor
shr
ss
lret
fsubrs
mov
data16
and
popa
jle
test
das
xor
repz
add
sub
sub
cmp
xor
xor
xor
adc
sub
xor
cmp
and
dec
mull
out
mov
or
mov
push
lahf
and
lods
sbb
add
sbb
popa
dec
push
sbb
lea
push
sbb
outsb
nop
loopne
sbb
cmp
fwait
lock
push
movb
test
or
and
jb
inc
sbb
aam
pushf
test
ret
cmp
inc
dec
xor
and
dec
test
adc
or
popf
sarb
lods
cmp
or
fwait
arpl
sbb
je
inc
and
sbb
mov
add
cmp
and
call
cmpsl
and
sbb
loopne
inc
addl
mov
or
push
int3
nop
sub
dec
adc
mov
and
int3
mov
ret
mov
and
jne
ret
or
je
push
shll
sbb
or
add
mov
add
mov
rorl
pop
lahf
xor
fcmovne
stos
sbb
or
add
pop
pop
cmp
ja
pop
nop
or
sub
nop
jp
xorb
jbe
jns
js
stos
and
test
adc
adc
sbb
push
sbb
adc
gs
inc
arpl
ret
mov
adc
jno
rorl
addr16
push
cs
lret
inc
ljmp
adc
rorl
imul
pop
roll
ret
xchg
sbb
add
sarl
pop
test
or
test
push
adc
outsl
int
fiaddl
cmpb
insb
adc
xchg
jo
sub
inc
jbe
or
mov
test
arpl
add
or
adc
adc
adc
filds
and
pop
add
mov
ret
add
adc
aad
stos
pop
sub
or
sub
mov
adc
adc
out
dec
adc
pop
cmpsl
and
add
xchg
pusha
push
jge
ret
sub
pop
mov
pop
mov
mov
pop
js
ret
faddl
loopne
mov
xor
and
jbe
movsb
adc
or
movsb
xchg
add
pusha
dec
aaa
mov
aad
push
adc
jns
and
sub
or
push
add
out
add
inc
addl
inc
pop
loopne
cmp
xor
dec
loopne
aas
adc
clc
testb
mov
andl
popf
pop
push
adc
loop
mov
and
xchg
xor
dec
sbb
shlb
lock
enter
insb
daa
sub
ja
sub
mov
xchg
cmp
cmc
mov
dec
push
push
jo
mulb
inc
add
add
and
jns
pop
mov
and
fists
adc
aam
into
adc
enter
in
xchg
addr16
lods
js
sub
sub
rol
mov
lcall
fs
addr16
inc
push
nop
loope
lret
mov
adc
or
sbb
cmpsb
and
xor
and
dec
es
lcall
jb
sub
dec
lcall
imul
outsb
fcoml
ret
mov
pop
cwtl
xor
jne
inc
xorl
nop
inc
cmpsb
ss
xor
cmp
scas
subb
or
lahf
or
insb
loope
imul
push
mov
leave
push
add
sbb
clc
cmp
xor
std
jle
xchg
jmp
sbb
jge
and
je
test
inc
and
jmp
sub
andl
inc
jmp
call
sbb
push
je
mov
cmpsl
xor
js
nop
orb
popa
and
jl
mov
mov
pusha
lods
sbbb
mov
sbb
pop
mov
add
add
add
in
mov
add
xchg
aad
shlb
xor
dec
mov
and
add
and
int
cmp
loop
or
jmp
test
lahf
cmp
push
or
push
lahf
aaa
shl
mov
adc
push
add
and
and
ret
movsb
and
rolb
jns
push
jo
add
cli
movsb
nop
shlb
mov
fistl
pop
dec
cmp
or
lock
sub
test
push
sbb
arpl
xor
sbb
loopne
enter
xor
push
xor
mov
dec
pop
or
adc
jge
jp
jle
sub
add
lcall
mov
mov
lret
inc
sbb
adc
adc
jge
mov
repnz
test
sbb
xor
mov
addr16
sub
sbb
stos
add
or
sub
add
je
rcll
repz
add
aad
and
rolb
daa
mov
xor
add
sub
jle
xchg
inc
sbb
in
cmp
mov
inc
or
cmp
hlt
dec
xlat
mov
popa
or
shlb
xchg
sub
rcr
or
sti
fwait
sub
insl
dec
je
add
subl
ret
or
inc
sub
jo
mov
data16
xor
sbb
mov
push
jbe
adc
sub
jl
xchg
mov
xor
xor
xchg
mov
lea
sub
cmp
ja
flds
clc
lea
outsb
cltd
clc
xchg
clc
mov
jbe
outsb
mov
inc
jb
push
rorb
xchg
bnd
bound
mov
inc
lea
adc
or
pop
inc
xchg
lods
dec
sbb
jle
nop
pop
outsl
push
inc
sbb
mov
push
xchg
and
ror
lahf
and
push
push
mov
rcrb
push
cmp
arpl
add
adc
sti
add
push
push
sub
jmp
ss
rclb
out
je
jnp
lret
sub
lcall
out
mov
out
jmp
ss
sub
or
ficomps
xor
or
sbb
push
cmp
daa
and
push
push
aas
and
mov
push
jb
xor
pop
daa
mov
sbb
push
and
pop
xor
and
imul
aaa
sbb
add
popf
aam
test
xchg
pusha
add
insl
push
xorb
ret
or
and
lock
add
and
xchg
cwtl
inc
dec
frstor
fists
mov
and
andl
sbb
push
sbb
push
push
mov
xchg
xor
test
shll
stc
leave
lods
rcll
mov
adc
pusha
add
mov
loop
les
cmpsl
fidivrs
sub
xchg
sbb
jmp
mov
stos
jo
xchg
pop
jbe
es
adc
or
adc
adc
push
in
or
and
call
or
pusha
or
dec
insl
test
xchg
or
lock
rorl
enter
add
imul
xorb
ss
hlt
push
sbb
test
stos
frstor
leave
push
inc
and
sub
sbb
push
push
adc
insb
cmp
push
cmp
cwtl
push
and
je
aaa
adc
mov
lock
dec
push
sbb
repz
xchg
or
dec
jmp
nop
nop
push
mov
dec
sbb
push
fmuls
or
addb
sbb
jo
push
sub
pop
je
adc
push
scas
add
and
addb
xchg
shll
xchg
int3
xor
loop
addb
sahf
mov
sub
fnstenv
and
and
pop
xor
add
pop
mov
js
clc
cmp
clc
outsl
mov
dec
mov
xchg
pushf
in
sub
mov
pop
mov
xorps
dec
jne
add
adc
repnz
cmp
cmp
and
or
lcall
fs
pop
xor
lock
xchg
mov
and
sub
pop
pop
nop
sbb
fs
mov
or
inc
adc
les
lds
and
dec
cmpl
xchg
adc
xchg
pop
icebp
lcall
pushf
rol
dec
cmp
sbb
mov
pop
roll
jno
jmp
popa
push
mov
imulb
inc
addr16
ret
add
and
inc
sbb
push
scas
sbb
push
adc
xor
add
xchg
iret
repz
fnstsw
add
push
mov
fstps
pop
lret
pop
adc
popa
xchg
clc
pusha
sub
mov
pusha
dec
and
push
faddl
test
xlat
imul
mov
pusha
dec
mov
pop
fistpl
add
in
cmp
pop
or
les
in
rclb
gs
sbb
loope
clc
clc
cli
mov
lock
push
xchg
or
aaa
pop
andb
movsl
xor
cmpsb
lret
cmp
jbe
insb
movb
jae
ret
sbb
jb
clc
mov
fdivs
mov
mov
movsl
dec
rclb
mov
jp
mov
rolb
mov
andl
xor
fsts
push
add
outsl
mov
push
ret
js
js
aad
dec
xor
into
or
jb
sub
ja
sub
movsl
dec
or
ja
xchg
sub
loopne
push
jbe
sub
mov
js
push
cmp
mov
adc
lods
lret
and
pop
xlat
mov
pop
push
outsb
addr16
js
pop
add
xor
sub
nop
adcl
cld
sbbb
imul
jo
or
jmp
dec
mov
push
push
cmp
imul
xchg
dec
enter
addr16
and
add
sub
push
call
mov
out
inc
jo
rorl
repz
jecxz
push
sbb
mov
adc
add
adc
and
xchg
psadbw
inc
dec
out
cmp
jo
xchg
fldt
adc
mov
xchg
push
les
xor
cld
sub
push
mov
push
lea
repz
and
mov
cmpl
mov
sub
jo
xor
lock
sbb
xor
inc
sub
jo
cmc
mov
pusha
xor
stos
jg
jmp
ja
mov
sbb
aad
sar
cmpsb
ds
hlt
or
pushf
fs
mov
or
jo
mov
int
adc
add
xchg
das
xor
inc
jge
pop
in
inc
nop
sub
jae
stos
mov
lea
xchg
add
andl
addl
jmp
lret
xchg
xor
jge
lret
cmc
jne
push
jg
dec
jecxz
pop
jle
adcl
xchg
popa
int3
cwtl
subb
xor
and
mov
fwait
icebp
lods
mov
pop
lods
inc
mov
cmp
sub
xchg
xchg
cmp
jmp
insl
pusha
and
outsb
scas
mov
lahf
sub
add
xor
leave
imul
mov
lock
push
add
mov
inc
adc
push
push
cmp
insb
jp
shlb
insl
add
lods
scas
fbstp
dec
popf
scas
ds
fbstp
and
test
or
push
add
push
pop
sub
movsb
insb
imul
and
les
or
xor
sbb
iret
inc
lea
adc
push
adc
test
add
dec
mov
mov
movsl
xor
arpl
adc
mov
add
jo
loop
stos
push
pusha
cwtl
add
xchg
imul
ds
jne
fdivr
fcoml
cmpl
leave
inc
add
hlt
jne
jle
dec
inc
or
out
test
into
inc
inc
scas
sbb
pop
inc
sbb
adc
aas
mov
lds
cmp
add
in
movsl
hlt
pop
rcrb
outsb
or
add
daa
xchg
rcrb
jp
jmp
jnp
add
les
xchg
push
push
mov
pusha
xchg
aaa
push
repnz
adc
cmp
sbb
nop
pop
xor
add
pop
cmp
cmp
and
xor
xor
fildll
jle
inc
jl
cmp
jg
push
sar
aad
rolb
xor
cmp
jge
mov
or
adc
fadds
addb
sti
add
add
stos
mov
and
fdivr
insl
dec
call
fisttpll
inc
cmp
inc
inc
pop
or
jl
aas
inc
jmp
jmp
push
push
mov
dec
push
inc
inc
in
insl
dec
add
jmp
sub
cli
push
jne
push
or
orl
mov
and
pushf
mov
js
cltd
adcb
mov
adc
adc
xor
inc
mov
mov
or
lock
popa
outsb
mov
stc
add
decl
out
pop
test
mov
push
add
push
sbb
testl
pop
dec
dec
xchg
add
jne
in
adc
clc
dec
and
xlat
rclb
gs
xor
rclb
or
mov
in
les
popf
mov
andb
adc
add
mov
xor
orl
jns
xlat
xchg
aaa
hlt
add
fs
or
in
adc
mov
test
add
ds
pop
sbb
fsubr
adc
xchg
xor
in
js
cs
sbb
mov
sbb
inc
add
mov
leave
xchg
faddl
sbb
inc
pop
push
pushf
bound
pop
adc
cmpl
rorb
pop
and
andl
adc
fwait
adc
inc
add
mov
pop
dec
out
jne
js
mov
jo
or
xchg
out
mov
mov
or
push
dec
or
adc
in
cmc
adc
push
add
pop
lds
or
xorl
adc
adc
lss
mov
or
ss
in
loop
shl
and
das
or
test
out
push
and
lea
mov
loopne
addb
or
or
mov
sub
pop
xchg
adc
mov
ljmp
mov
push
sbb
shlb
shlb
push
sbb
jecxz
in
mov
and
in
das
call
push
sbb
daa
sbb
sbb
ret
popa
outsl
dec
pop
mov
sti
rolb
adc
inc
out
divb
nop
movsl
sbb
loopne
jge
lret
xlat
ss
sbb
shlb
lock
call
js
shr
imul
lret
xchg
add
adc
ret
stos
lods
cmpsb
dec
les
fnstenv
mov
dec
not
inc
inc
into
xlat
cld
push
push
push
adcl
sbb
ret
test
rol
insb
mov
xor
mov
adc
lock
pusha
or
add
popf
jno
mov
fcomps
push
mov
sahf
add
arpl
xor
clc
add
pop
xchg
push
add
jle
xchg
inc
test
inc
insl
xor
dec
sbb
fmuls
sbb
xchg
push
adc
cmp
ret
test
je
sbb
push
nop
or
shrl
pop
xchg
xchg
mov
inc
jae
je
xchg
cmp
xlat
pop
inc
and
arpl
adc
jg
pop
jne
shll
inc
and
iret
dec
insl
in
push
push
push
or
mov
pushf
rclb
ret
or
in
add
push
push
lds
movsl
cmpsl
lahf
insb
push
aas
lcall
push
jnp
or
push
add
sbb
cmp
std
mov
outsb
xor
sbb
push
ret
xor
jo
sahf
nop
sbb
sub
push
dec
push
mov
ficoml
add
flds
cltd
xchg
jo
ljmp
inc
push
pop
dec
sbb
and
shr
and
or
or
outsl
or
push
fsubr
sbb
test
lods
mov
push
jmp
mov
call
jg
push
dec
sub
js
xor
movsb
add
movsl
lds
or
lock
add
dec
insb
lods
jbe
dec
repz
shll
or
adc
push
mov
push
sbb
push
bound
mov
xor
into
call
mov
or
or
mov
xchg
out
jmp
xchg
mov
push
add
loope
adc
pop
ljmp
or
push
dec
pop
sbb
adc
or
insl
addl
dec
xor
xor
sub
push
or
cmp
rcl
popl
dec
inc
xor
cmpsl
aam
mov
or
test
rorl
mov
xor
xlat
ljmp
fimuls
sbb
inc
push
sub
jl
mov
clc
inc
jecxz
arpl
decb
inc
mov
in
xor
into
inc
xchg
push
dec
lods
sbb
loopne
mov
and
add
iret
lods
fbld
sub
imul
fildl
xchg
jb
dec
lock
jo
mov
sbb
or
js
test
push
mov
mov
mov
leave
add
xor
jb
sar
adc
fisttpl
nop
cmp
xor
pusha
pusha
outsb
and
sub
adc
jge
shrl
add
xor
sub
add
outsb
test
or
test
adc
push
int3
hlt
sbb
mov
xor
mov
adc
and
sub
repnz
cs
jmp
nop
into
shrl
pusha
inc
shlb
arpl
jns
cmp
dec
cmp
xor
testl
mov
xor
add
rcrb
popf
xor
push
js
arpl
push
pop
shrb
ljmp
dec
xchg
movsl
es
sub
cwtl
pop
pop
jmp
xor
loopne
ds
loop
jo
insl
xor
imul
lret
add
orl
fadd
test
xchg
pop
push
jmp
push
inc
dec
inc
cmp
and
inc
test
mov
cmp
xorl
mov
lea
or
adc
or
xchg
push
sub
or
mov
mov
push
pop
lcallw
je
add
cmp
test
sub
push
jne
mov
add
push
adc
in
sub
pop
add
adc
mov
add
dec
mov
std
xchg
xchg
sub
cmp
adc
sahf
test
pop
jbe
loop
out
xchg
mov
movsl
shll
mov
xor
les
mov
or
mov
xchg
push
in
or
push
inc
sub
dec
add
sub
mov
sbb
in
add
lret
cmpsl
fnstcw
fcmovnbe
mov
rcll
shlb
mov
addb
cmp
ja
push
mov
int3
mov
clc
roll
pop
or
mov
sub
dec
clc
xchg
mov
ljmp
clc
or
ret
or
js
sbb
cmp
push
xor
cmpsl
jmp
stos
mov
mov
stos
out
sub
outsb
jae
mov
fs
inc
sahf
pop
sbb
sarl
movlhps
inc
lock
insb
or
xor
and
jns
xor
movsl
sub
jp
inc
scas
faddl
outsl
pop
insb
push
imul
and
or
mov
mov
jo
in
jo
push
pop
or
call
movsl
repnz
or
test
lret
mov
jo
sub
add
cmp
dec
sahf
or
inc
xchg
cmp
imul
dec
mov
rorl
xor
dec
rorb
addb
cmp
jne
adc
xchg
mov
inc
sub
in
adc
rcr
dec
xchg
test
daa
adc
adc
jg
repnz
lock
or
sbb
cmpsl
lock
pop
add
dec
jg
xchg
mov
mov
nop
cmp
pop
cmp
outsl
sub
mov
xchg
jne
sub
in
or
js
adc
dec
ds
inc
cwtl
xchg
iret
cmp
mov
xchg
and
adc
in
imul
cmp
push
ficomps
cwtl
lods
adc
lcall
mov
loope
pushf
mov
inc
jno
test
and
push
cmp
mov
mov
pop
outsl
sub
jb
adc
jmp
and
pusha
mov
sub
mov
push
jp
cmp
sub
nop
lret
popa
pop
push
std
xchg
jo
jns
cltd
sub
sbb
lahf
add
daa
dec
pop
adc
add
push
jle
add
test
xor
inc
xchg
inc
sub
jbe
shlb
mov
dec
adc
and
mov
test
push
rorb
xor
dec
add
and
in
adc
dec
sub
cmp
pop
or
push
or
and
mov
fwait
imul
sbb
sbb
fstl
in
movl
inc
lcall
pop
inc
jle
jo
in
sub
adc
push
or
sbb
dec
add
or
mov
xor
sbb
xchg
adcb
sub
xchg
cmp
cli
push
sbb
out
sub
addl
push
add
add
dec
sbb
pop
sbb
and
sbb
and
fs
sbb
and
push
or
or
and
cmp
cmpsl
push
sbb
sbb
es
stos
lock
add
fwait
pop
pop
punpckhbw
adcb
and
dec
and
loope
or
and
rorb
and
rcrb
and
and
fidivrs
pop
fidivrs
lcall
mov
adcb
mov
push
insb
push
xor
push
sub
and
gs
pushf
mov
add
fisubl
inc
sbb
cmp
aaa
mov
mov
or
add
dec
add
or
cmp
cmp
lret
or
in
pop
repz
add
mov
xchg
hlt
dec
xchg
and
adc
add
in
jns
and
or
outsb
sub
xchg
and
inc
add
adcl
cmp
jb
ret
mov
fwait
mov
lea
push
pop
inc
push
inc
sub
icebp
pushf
add
or
call
mov
fimuls
addr16
dec
fdivr
loop
dec
inc
sarl
sbb
dec
jp
mov
xchg
imul
std
jge
xchg
testb
add
jno
mov
sbb
mov
fldt
jl
and
sub
jnp
dec
jl
push
movsb
lcall
push
add
sbb
lds
jmp
jmp
fldl
pop
lds
dec
push
dec
sub
mov
mov
sbb
js
pop
aaa
adc
popf
mov
jns
sub
ret
mov
and
pusha
and
push
into
int
pop
pop
shlb
clc
jne
nop
jge
or
mov
or
dec
cmp
and
inc
pop
and
clc
and
mov
add
pop
jne
xor
add
jle
das
sub
fdivr
fdivrs
and
add
sbb
sub
pop
xchg
add
add
dec
cmp
inc
leave
lret
lock
andl
addr16
mov
dec
cmp
ficoml
xchg
push
sbb
stos
add
imul
sahf
add
mov
rorb
push
mov
add
jbe
push
lret
dec
inc
mov
addl
add
pop
rolb
dec
sbb
and
xchg
mov
push
loopne
inc
clc
or
pop
rolb
pop
or
inc
stc
shlb
mov
cmp
jmp
mov
es
das
iret
lock
push
adc
dec
fsts
or
lea
dec
add
addl
in
or
mov
rcrl
loopne
and
notl
jmp
add
push
insl
stos
outsl
dec
or
or
jecxz
fstps
repz
pop
add
mov
adc
ja
test
bound
ljmp
mov
xor
or
fiaddl
inc
dec
and
xchg
adc
inc
sub
lahf
imul
and
cld
sbbl
inc
or
imul
mov
cmp
adc
sub
add
adc
xchg
sub
pop
push
push
or
xchg
cmp
xor
das
out
xchg
or
dec
xor
movsb
jge
sub
idivl
pop
data16
sub
arpl
push
or
xchg
andl
bound
inc
mov
jb
negb
cmp
icebp
add
jecxz
jge
out
or
lea
cmp
test
xor
js
popf
lock
int
and
inc
push
push
sbb
jecxz
adc
adc
popa
sub
jle
adc
xchg
xchg
jne
jl
dec
mov
or
movsb
or
mov
inc
jo
jb
push
imul
fstpt
mov
decl
push
pusha
ljmp
mov
mov
or
add
adc
mov
or
test
push
pop
sbb
push
adc
push
addl
or
mov
and
and
sub
inc
xor
mov
sbb
or
test
sti
ret
mov
cwtl
data16
dec
and
xor
push
out
mov
dec
pop
sbbl
and
adc
dec
js
adc
push
pop
out
jl
js
push
jl
inc
es
nop
or
inc
dec
xor
push
pop
sub
inc
inc
pop
sub
pop
pop
adc
lods
sbb
clts
insb
jle
xor
sbb
cmc
loope
sub
mov
les
add
or
add
adc
jne
cmp
inc
push
repnz
movsl
ret
ret
push
mov
movsl
mov
or
pop
pop
adc
hlt
mov
rclb
outsl
sbb
in
lods
stc
movsb
orl
cmpsb
push
in
mov
out
inc
dec
dec
adc
loopne
fwait
in
out
or
adc
xchg
xchg
sub
mov
outsb
or
mov
pop
lea
setns
jne
adc
add
sub
add
sar
pusha
clc
sub
mov
inc
or
inc
pop
imul
push
popf
test
dec
push
cmp
xchg
xor
push
ds
out
sarl
movb
add
call
iret
test
es
out
pop
mov
call
mov
inc
std
add
jo
stos
orl
movsb
cmp
movsb
sub
adc
xor
push
cltd
ret
daa
push
sub
clc
fistl
setl
xchg
mov
or
and
sub
inc
stos
cmpsl
fcomps
fiaddl
jle
inc
inc
push
sub
aaa
inc
cmp
fs
xchg
roll
or
movl
test
and
push
fs
cld
ret
xor
xchg
test
mov
xchg
sub
xor
jae
add
aad
in
leave
dec
cs
js
cmp
or
dec
sti
out
lret
lret
icebp
fidivl
adc
pushf
fidivl
jecxz
hlt
xor
cli
nop
pop
pop
push
xchg
mov
rclb
arpl
enter
cwtl
mov
out
mov
mov
and
mov
insl
gs
mov
imul
movsl
std
in
mov
push
xchg
adc
mov
clc
cmp
mov
push
fwait
xor
add
cmpsb
or
push
or
dec
test
cmc
fimuls
fistpl
popa
sub
jo
mov
or
adc
mov
mov
pop
loope
add
inc
test
push
or
sub
push
or
out
inc
push
jecxz
jae
mov
pop
fcom
push
dec
and
jmp
dec
mov
fs
cmp
xor
cs
cmp
xchg
ret
xor
cmc
adc
mov
mov
xchg
leave
js
cmpsb
and
js
scas
mov
insl
jne
xchg
push
js
push
inc
mov
mov
andb
or
pushf
mov
loopne
out
enter
pop
push
lods
xor
mov
dec
gs
cmp
fldt
push
pop
or
fprem
mov
cmp
aad
and
arpl
or
adc
out
and
mov
inc
cmp
pop
mov
xor
shlb
dec
or
xlat
mov
lods
shrb
mov
cmp
mov
jg
mov
imul
sti
sarb
jmp
fcoml
aaa
add
add
add
inc
adc
adc
xchg
add
pop
rolb
lret
mov
mov
aas
adc
add
sbb
jbe
lea
and
jo
addr16
xor
add
test
add
dec
lret
cmp
add
pop
sbb
inc
adc
enter
or
push
pusha
or
incb
mov
xor
inc
push
add
cmpsb
sbb
and
pop
dec
aam
xlat
setbe
movsb
rolb
mov
inc
pop
setne
jae
adc
test
mov
enter
ss
add
cmp
insb
leave
sub
push
out
xor
mov
and
xor
push
jne
adc
sbb
test
and
cld
sub
jmp
push
push
push
jnp
shll
inc
decl
adc
jne
pop
jns
iret
xchg
xlat
mov
imul
mov
push
xor
out
mov
call
movsb
testl
aaa
jne
fnstcw
sbb
mov
jmp
movsl
hlt
pusha
xchg
jne
push
mov
ret
call
add
add
iret
pop
pop
dec
sub
xor
xchg
pop
adc
cli
je
arpl
lret
pop
gs
and
mov
call
addl
sbb
and
add
xchg
xchg
xor
sub
xchg
or
movsl
mov
push
cmp
rcr
push
shll
inc
mov
shlb
cmc
int3
pop
push
test
lcall
clc
xchg
mov
push
mov
sub
push
push
pop
mov
inc
ficoms
cmp
hlt
sbb
adc
andl
xor
pop
js
dec
mov
xor
add
inc
or
pop
adc
cmpsb
mov
repz
imul
into
or
testl
push
leave
jecxz
clc
sar
lods
mov
outsb
mov
mov
mov
adc
mov
inc
out
dec
div
push
nop
or
push
adc
adc
mov
pop
adc
cs
in
sbb
sbb
sub
and
iret
sub
inc
lods
or
xor
or
xchg
gs
dec
fwait
or
mov
pop
push
adc
jge
cld
mov
push
push
xchg
leave
cli
mov
add
inc
dec
scas
add
andb
inc
or
movsl
and
mov
rcrl
dec
btr
enter
mov
and
fmulp
ljmp
mov
imul
pop
mov
cld
insb
or
cmp
push
lock
adc
pcmpeqb
or
push
rorl
mov
or
mov
dec
jne
incl
fldz
pop
shll
add
mov
ret
aaa
sbb
or
insb
ror
ret
pop
mov
test
mov
push
outsb
pop
mov
or
adc
cmp
inc
jmp
mov
enter
cmc
iret
lahf
dec
wrmsr
mov
mov
aaa
add
lret
or
xor
das
cmp
xchg
mov
inc
xchg
or
ja
mov
ret
push
orl
nop
push
adc
adc
add
add
jo
sub
and
jne
push
pop
ret
adc
imul
or
add
push
daa
cs
add
mov
jl
adc
jl
orb
and
or
and
adc
push
iret
lcall
dec
or
movsl
mov
mov
das
add
jo
bound
lcall
add
add
and
adc
xor
push
pushw
or
or
add
mov
pusha
test
jnp
jl
test
pop
push
add
cmp
adc
movsl
imul
jmp
mov
cld
sarb
adc
push
out
mov
adc
incl
test
out
mov
ja
add
or
or
dec
cmp
iretw
test
es
nop
and
pusha
xchg
xchg
inc
js
shlb
mov
sub
int
lods
ret
popf
inc
popa
mov
add
sbb
imul
inc
xchg
push
andb
cmpsb
inc
cmp
das
push
enter
sbb
rclb
xlat
push
mov
iret
mov
mov
cmpsl
mov
push
add
add
dec
mov
iret
and
ds
xchg
pusha
xor
imul
dec
xlat
and
jmp
mov
adc
add
ret
mov
sbb
dec
push
push
lods
pop
mov
xchg
addr16
jne
das
adc
sub
push
inc
lret
dec
pop
pushl
imul
sbb
pusha
jp
push
cmpsl
dec
scas
inc
rorb
rcrl
mov
imul
push
fdiv
jl
xchg
jge
mov
movl
sbb
int3
or
or
fdivl
dec
add
push
mov
leave
add
cmp
mov
pop
js
roll
adc
inc
xchg
repnz
inc
inc
push
or
or
les
stc
ds
add
dec
push
and
sbb
jbe
das
and
jbe
sbb
ja
js
pop
test
orl
mov
enter
xor
fiaddl
add
gs
add
adc
xor
dec
mov
movb
cmp
sub
ret
jno
and
lea
aad
jns
cmc
or
ret
ret
xor
add
sub
inc
js
adc
push
mov
incl
mov
or
sub
ret
xor
sbb
pop
dec
loopne
sub
xor
or
xor
int3
sub
push
leave
mov
clc
pushf
sub
mov
dec
int3
add
lods
dec
fstps
shrl
int3
sub
xor
int3
adc
or
or
dec
lret
mov
lea
cmpsb
push
mov
in
push
les
jno
add
or
add
xchg
leave
adc
movsl
sub
adc
add
sub
lcall
push
fsubr
mov
jo
or
loopne
cwtl
mov
and
sbb
dec
push
fucomip
xchg
test
in
mov
roll
pop
mov
int3
push
xor
or
xor
fmull
pushf
and
dec
xor
mov
jle
ja
xchg
icebp
orb
test
das
jmp
xor
mov
or
bound
arpl
inc
add
test
lret
adc
mov
mov
sub
cmpsl
mov
adc
std
sbb
in
hlt
enter
enter
daa
mov
or
ja
jns
or
mov
incl
enter
ljmp
push
outsl
in
mov
fldt
add
cmpsb
jp
and
int
subb
iret
fadd
or
in
icebp
es
jl
mov
cwtl
shlb
dec
leave
xor
sbb
and
xchg
hlt
lock
push
call
mov
ret
add
mov
mov
or
mov
xor
sub
or
inc
insl
sbbl
pop
pop
push
jo
sbb
jge
inc
les
popa
and
and
pop
mov
or
add
pushf
push
adc
xor
enter
jg
adc
dec
les
add
add
cmp
js
jne
dec
push
aam
adc
mov
ret
push
xor
adc
es
jmp
dec
pusha
mov
je
clc
pop
mov
sub
or
pop
or
lahf
push
les
shr
jecxz
jbe
js
lods
mov
sbb
jl
push
mov
dec
push
inc
dec
das
test
inc
cmp
jmp
sbbb
test
int3
mov
jle
fistpl
sub
xchg
add
mov
mov
inc
sub
mov
pop
int3
daa
inc
je
aas
ficoml
cmp
inc
push
addr16
and
ds
shll
sub
push
add
mov
sub
xchg
adc
mov
push
popa
push
xchg
or
inc
andb
pop
imul
and
push
adc
lds
pop
andw
xorb
dec
sub
mov
les
test
jo
test
lods
add
mov
ret
int
jb
jle
push
rep
cmc
and
jl
popa
jg
cmp
cmp
add
mov
push
mov
jge
movsb
in
inc
xor
pop
call
or
loop
test
dec
xchg
jo
push
dec
mov
adc
sbb
xchg
jmp
pop
sbb
testl
and
inc
and
fimuls
js
push
orb
inc
cmp
mov
or
ljmp
add
sar
add
mov
and
stos
or
mov
pop
jnp
jle
pop
outsb
ljmp
shll
sbb
mov
mov
add
mov
dec
xchg
insb
data16
mov
xchg
or
push
fldl
fstps
and
and
cmp
push
fisubrl
mov
cwtl
cmp
adc
cmpsl
mov
jno
pop
add
or
aaa
xchg
stos
and
mov
push
shll
xor
aam
insl
mov
in
mov
push
daa
es
loope
add
and
push
xchg
jmp
iret
xorl
iret
nop
movsb
rorb
bound
mov
jge
mov
js
mov
xor
outsl
cmp
sub
sub
movsl
popa
jne
out
inc
gs
lock
lock
push
ss
mov
xchg
or
das
lcall
ljmp
push
aam
pop
push
jne
dec
movsb
nop
in
xchg
ret
cltd
xor
dec
aam
and
mov
loope
dec
cmp
cmp
sbb
aad
into
mov
divl
pop
or
je
add
sbbb
or
popl
jp
rcl
jmp
pop
rol
adc
out
mov
mov
pop
mov
push
add
dec
cli
adc
roll
sbb
loopne
mov
je
test
push
lods
dec
or
or
pmaddwd
mov
mov
mov
pop
mov
cwtl
mov
cmp
shrl
out
out
sbb
pushf
sub
pushf
mov
add
pop
pop
and
inc
pop
inc
adc
xor
rorb
cmp
les
cs
add
roll
xchg
xchg
shlb
sub
mov
cmpsb
cmpsb
adcl
movl
aam
mov
rolb
adcb
adc
cmp
loope
js
cmp
lea
cmpl
mov
fmul
push
sbb
add
adc
jae
sub
jnp
xor
adc
ret
sbb
inc
mov
out
jge
push
push
push
push
das
neg
sahf
outsb
pop
sub
pop
ret
roll
pop
fwait
push
gs
xchg
dec
fldt
push
mov
leave
mov
push
adcb
push
push
add
push
je
push
enter
or
fistl
or
mov
pusha
push
call
dec
jmp
push
dec
sarl
adc
xor
test
dec
mov
inc
jnp
add
daa
push
cmp
sbb
insl
mov
xchg
mov
rorb
add
dec
stos
and
add
mov
and
pop
or
jl
pop
pop
pop
pop
mov
add
xchg
mov
pop
or
sbb
adc
subb
add
inc
or
adc
mov
mov
cmp
loop
aam
mov
insl
test
out
adc
std
push
jge
or
mov
es
dec
mov
inc
js
shlb
insb
test
hlt
pop
lock
stc
or
outsb
sbb
inc
lret
lock
cmpsb
jp
push
or
fdivrs
push
out
sbb
xor
sbb
inc
imul
dec
sbb
in
jne
addb
in
and
push
add
int
loopne
or
and
add
or
loopne
cmp
mov
pop
in
sbb
xchg
sbb
adc
jge
or
cmp
stos
cld
sti
xchg
dec
pusha
jmp
mov
mov
cmp
push
outsl
lahf
jne
or
pop
dec
rcl
or
add
mov
and
fldl
aaa
pusha
sbb
pushf
xor
sub
ret
jg
jmp
mov
jmp
lods
rclb
fstpl
sub
push
ljmp
pusha
and
xor
testl
mov
dec
xor
adc
outsb
mov
test
mov
add
fdivrl
fcmove
mov
ja
jle
pop
mov
push
cltd
pop
mov
xchg
in
mov
xchg
xchg
adcb
sub
push
or
adc
inc
popf
and
xor
jg
cld
sbb
sbb
rolb
inc
add
pop
mov
inc
sub
jnp
or
lret
or
dec
adc
aaa
incl
add
andb
outsl
je
dec
adc
add
shl
imul
adc
adc
subb
xchg
cmp
mov
xor
les
cmpsb
test
push
and
adc
pop
iret
add
std
insb
push
das
aad
pop
jle
in
xor
cli
mov
pop
dec
jp
inc
call
xor
add
in
ja
daa
xor
js
jmp
adc
push
fdivl
jmp
cmp
and
sbb
in
jmp
sbb
nop
mov
int3
xlat
xor
inc
dec
sti
mov
mov
adc
in
mov
js
add
or
dec
adc
push
jne
and
rcl
adc
rcr
mov
cmpsl
mov
mov
sub
add
lods
lock
int3
insb
orb
mov
or
push
fisttpll
cmp
fnsave
inc
lea
mov
add
sbb
and
int3
add
pushf
sub
jmp
inc
pop
loope
xor
push
inc
shrl
mov
aad
ja
mov
push
push
addr16
jbe
pop
cmovl
add
jns
std
pop
in
mov
sub
test
add
adc
cs
xchg
push
inc
std
adc
pop
mov
adc
xchg
xchg
int
sbb
in
jecxz
mov
rolb
sbb
icebp
pop
sbb
adc
pop
rolb
mov
sbb
adc
sbb
mov
add
loopne
ret
sub
adc
shrb
sub
ss
mov
jno
fs
xchg
sub
cmp
lods
daa
or
test
sti
les
xor
rolb
jle
icebp
pop
xchg
jo
aas
cmp
add
xchg
int3
mov
popa
lock
inc
aam
adc
fs
out
pop
ret
je
push
adc
cltd
sbb
sbb
cmc
loopne
pop
or
sbb
jne
or
or
or
andb
and
in
add
mov
mov
scas
movsb
subb
adc
addb
je
pop
xchg
push
addr16
shll
add
std
lea
sbb
movsl
sub
inc
sbb
cmpb
sbb
add
addb
dec
js
and
push
fiadds
jge
add
jno
add
rclb
mov
xor
and
lcall
icebp
push
test
out
jg
mov
pop
pop
addb
dec
pop
xchg
imul
cli
mov
add
out
sbb
pop
pop
pop
add
mov
outsb
inc
xor
or
mov
lcall
test
fmull
adc
and
int
imul
cmp
push
add
pop
inc
sbbl
arpl
imul
ljmp
repnz
cli
nop
icebp
and
or
mov
test
xchg
xor
and
das
fsubl
push
mov
inc
cmp
pushf
adc
das
add
sub
ret
fisttpll
adc
push
sbb
sbb
scas
out
or
push
or
add
inc
outsb
pop
and
data16
sub
popa
mov
jg
sarl
outsl
pop
pop
mov
jb
negl
add
nop
or
add
mov
pop
inc
pusha
lock
outsl
std
sub
sbb
or
les
int
jmp
inc
ds
mov
inc
popa
pop
xchg
out
ret
xchg
js
in
decb
es
subl
add
cs
push
and
aas
iret
xlat
adcl
inc
and
lret
jnp
pop
add
fstpl
cmpb
imul
imul
ret
test
mov
loope
cmp
mov
sbb
lock
inc
pop
add
data16
xor
mov
add
pop
xor
mov
ret
lahf
mov
jo
dec
shll
mov
jmp
push
pop
xchg
dec
jl
sbb
fimull
add
cmp
das
stos
mov
call
push
mov
adc
inc
ret
dec
xor
pop
fldenv
dec
clc
es
arpl
rcrb
inc
mov
sub
bound
jmp
sahf
mov
repz
cmp
test
aas
fsubr
movsb
dec
lock
bound
fadds
lret
mov
in
bound
add
or
mov
in
movsb
mov
and
pop
in
clc
mov
mov
add
pushf
sbb
adc
lods
ss
pop
cmc
jo
fsubp
repnz
lea
or
cmp
add
jg
addr16
xor
into
inc
mov
adc
and
sbb
jg
dec
push
push
push
lods
ss
jg
adc
sbb
aas
fsts
stos
add
inc
aas
lock
mov
aaa
mov
mov
popa
mov
loop
mov
push
push
shl
xor
sub
jb
lds
aad
jmp
and
fwait
in
gs
outsl
call
movsb
lods
mov
push
dec
ds
repnz
in
in
or
enter
js
movsb
sbb
test
mov
mov
loopne
jo
popa
or
rcl
push
pop
lods
mov
lea
jnp
sar
sarl
xchg
jbe
call
insl
fucomi
loopne
adcl
inc
sub
or
add
sub
adc
xchg
xchg
or
sbb
nop
cltd
pop
int
dec
fidivrl
pop
insb
push
faddl
pusha
dec
in
and
out
mov
or
call
jb
or
rolb
call
mov
xor
aam
lahf
lcall
pop
xor
loopne
daa
pop
xorb
shll
sbb
test
lahf
je
xchg
stos
xchg
mov
rorb
mov
bsf
sarb
aas
inc
or
in
push
or
xor
loope
das
enter
pop
xor
mov
jb
adc
push
pop
or
push
xor
mov
test
mov
insb
decl
inc
aaa
jo
cmpl
shlb
ret
and
lahf
addb
xor
or
nopl
push
pop
rorb
aas
xor
cmp
xchg
sbb
xor
inc
or
jae
aam
inc
mov
pop
in
pop
adc
int3
cmpsb
imul
xchg
cmp
aas
popa
add
adc
add
out
iret
sbb
stos
push
pop
jg
aad
xchg
sbb
push
addr16
addl
ficoml
call
dec
push
mov
adc
orl
mov
xchg
mov
cmp
aas
pop
adcb
sti
mov
incl
or
psubsb
movsb
test
fcoms
and
test
cmp
mov
pusha
adc
mov
sub
dec
insb
movsb
dec
cwtl
mov
jno
mov
xor
aas
outsb
xchg
aas
sarb
mov
pop
adc
mov
stc
loopne
cmp
mov
mov
movsbl
push
lret
js
fisubrl
jle
and
jg
stc
mov
enter
daa
add
cwtl
das
pop
cwtl
pop
mov
lock
cmp
aas
add
add
mov
movsb
jnp
pop
loopne
dec
sbb
roll
lods
jne
mov
pop
sbb
das
js
lahf
fwait
lods
and
xor
push
shlb
cmp
movsb
push
jmp
in
push
fcomp
rolb
mov
bound
and
sbb
cmp
test
cmp
sub
rolb
push
rcrb
pusha
sbb
outsl
or
sbb
sbbl
enter
je
and
pop
mov
add
xchg
das
fists
jl
pop
fcoml
mov
inc
das
sbb
les
and
in
lahf
pop
sub
sbb
sbb
aas
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
enter
in
in
in
sbb
sbbl
enter
or
sbb
sbb
pusha
dec
sub
sbb
push
sti
jle
pop
adc
sbb
mov
or
enter
cmpsl
push
repnz
sbb
mov
pop
iret
call
sbb
les
sbb
xor
and
sub
ds
xchg
loopne
add
xchg
sbb
shll
in
sbb
mov
mov
lea
ficompl
dec
mov
add
sbb
insl
mov
adc
cmpsl
jge
into
bound
push
sbb
sarb
adc
jge
leave
insl
je
sbb
test
pop
pop
pushf
pusha
lods
xor
lods
add
fistpll
xchg
push
decl
push
pop
clc
les
push
sbb
xor
pop
or
pop
js
mov
or
aam
xor
daa
mov
outsb
jmp
add
cmp
popa
mov
push
rol
xor
and
push
mov
lea
call
adc
subb
sbb
movsb
and
inc
pop
nop
mov
iret
mov
jle
lahf
mov
test
fsubrs
les
dec
rcrb
fistpll
cmp
pushl
cwtl
and
inc
mov
call
inc
mov
dec
pop
sub
insl
inc
add
mov
xchg
mov
push
dec
insl
imul
adc
dec
push
mov
mov
inc
pusha
adc
aas
popa
pop
push
nop
into
in
jnp
add
inc
negb
inc
sub
jle
loope
adc
lods
movq
pop
cmp
mov
aas
js
nop
jecxz
aad
and
insb
lods
xchg
addr16
inc
add
sbb
inc
or
scas
adc
addr16
jb
std
test
les
test
lcall
cmpsl
movsb
add
orb
fs
xchg
push
in
jae
mov
test
ret
add
inc
add
aas
pop
rcrb
enter
add
dec
dec
int
or
popa
and
mov
shrl
lcall
sub
xchg
pop
inc
dec
jp
add
xchg
inc
pop
mov
inc
into
xor
mov
add
push
xor
movl
lahf
arpl
decl
movsb
mov
mov
sbb
fdivrs
rorb
or
inc
pop
inc
sbb
mov
mov
fdivs
and
aas
iret
inc
fdivrs
adc
les
lahf
dec
daa
lcall
inc
mov
sub
add
add
and
add
sarb
ljmp
and
in
push
mov
dec
add
sahf
bound
and
in
mov
das
lcall
imul
push
dec
inc
push
sub
testb
mov
add
push
fbstp
or
fadds
sub
pop
insl
mov
punpcklwd
or
lahf
mov
js
aas
call
andl
mov
lahf
sbb
adc
xor
xchg
xchg
jg
or
jo
mov
inc
dec
sti
loope
adc
shrb
arpl
cmp
leave
mov
push
je
mov
in
xchg
dec
push
cmp
std
mov
fdivr
pop
sbb
scas
push
sub
es
jbe
adc
loope
insl
adc
dec
sbbb
lods
xchg
cmpsb
push
add
pop
adc
nop
fadds
jns
jg
add
push
mov
fld
sbb
ja
sbbb
cmp
push
in
push
js
lock
push
in
sbb
push
movsb
loopne
add
or
add
xchg
aaa
fadds
jns
rcrb
or
dec
add
sbb
xor
pop
cs
jmp
pop
ss
fsubr
leave
hlt
adc
dec
adc
in
or
test
push
pop
repz
xlat
fistpll
das
mov
daa
nop
lret
cmp
pop
mov
mov
mov
pop
mov
rcrb
das
xor
push
xor
sbb
aas
inc
andl
push
pop
mov
aas
mov
inc
or
xor
push
xchg
adc
push
loopne
xor
jl
enter
enter
std
pop
sub
or
sub
mov
in
imul
ljmp
fcoml
adc
sbb
sbb
add
mov
sub
shrb
dec
mov
lds
xchg
in
or
leave
and
andb
and
pop
mov
pop
pop
iret
cwtl
mov
lahf
xor
ss
pop
test
leave
mov
ret
mov
les
adc
xor
bound
cwtl
movsb
pop
dec
adc
aas
mov
cmp
mov
sbb
push
xor
inc
sbb
pop
in
cmovno
dec
push
in
aas
jb
lock
and
les
and
test
inc
in
push
inc
jg
aas
mov
fadd
sub
popf
cmp
mov
shlb
xchg
push
mov
xorb
mov
pop
or
push
pusha
inc
arpl
sbbl
leave
and
mov
jo
out
call
sbb
daa
mov
adc
lret
xor
inc
jb
popa
xor
or
dec
outsl
mov
shrb
jecxz
mov
ret
adc
lahf
cmp
fcoms
in
cmpl
dec
loopne
shlb
mov
cmpb
lock
pop
pop
sub
outsl
call
adc
pop
cmp
out
scas
cmp
add
jg
and
insl
sub
push
js
push
jb
mov
movsb
sbb
adc
ret
mov
in
add
and
push
cmp
and
adc
js
test
pop
pop
xor
lock
ret
fadds
lahf
mov
dec
pusha
pop
pop
cmp
pop
dec
push
or
cmpb
adc
aas
in
test
out
les
mov
por
mov
ss
ds
cmp
aas
pusha
aas
cwtl
imulb
test
paddusb
pop
in
aas
rcr
or
aas
imul
scas
mov
nop
pop
sub
movsl
inc
pop
rclb
lcall
mov
outsb
aas
pusha
mov
sub
mov
inc
pop
ret
mov
leave
and
lods
sbb
mov
popa
pop
cmp
pusha
outsl
inc
mov
mov
or
out
mov
and
loopne
lahf
jo
mov
pop
jg
fcoms
leave
adc
inc
inc
daa
xor
aas
mov
mov
pop
pop
ffree
loopne
in
pop
xchg
aas
sub
adc
in
cmp
sbbb
mov
sbb
movsb
iret
add
adc
xchg
das
xor
pop
adc
jg
push
fwait
jbe
push
jg
pop
lock
stos
mov
inc
cmp
repz
sbb
inc
leave
daa
mov
jne
nop
bound
adc
pop
cmp
test
in
lahf
xchg
in
add
nop
dec
in
in
pop
pop
les
inc
rolb
inc
dec
je
call
fmuls
add
push
rcrb
adc
call
das
lods
lods
cmp
dec
jns
jg
inc
mov
sarb
xchg
js
jns
clc
mov
mov
mov
roll
add
inc
and
xchg
xor
or
mov
mov
lret
xor
dec
add
movsb
fsubp
call
fisttps
or
enter
mov
pop
lods
xor
mov
add
insb
mov
xchg
xorb
mov
xchg
dec
fistps
and
push
aad
addr16
and
xor
das
stc
orl
fstpl
cmovg
rorb
maxps
cld
adc
push
outsl
pop
shlb
mov
mov
loopne
xor
adc
sbb
lcall
inc
adc
and
and
sub
stc
pop
test
adc
sub
ret
inc
sub
dec
dec
jg
insb
jp
shlb
adc
ss
aas
dec
test
adc
sbb
loopne
in
inc
nop
mov
pop
jo
in
mov
or
jno
call
mov
xor
and
inc
xchg
jno
dec
aas
js
pushl
mov
mov
mov
mov
ds
cs
in
xor
sub
insl
sbb
xor
sbb
dec
mov
dec
xchg
imul
aas
or
hlt
mov
xor
push
cwtl
pop
dec
and
enter
sub
or
sub
jg
das
inc
cmp
fists
bound
jg
push
inc
or
or
add
fisubl
das
bound
lock
and
std
subb
push
cmpsb
in
mov
adc
sub
cwtl
push
incl
test
and
add
or
xor
dec
adc
pop
xchg
in
movl
sarb
rclb
pop
ret
int3
mov
and
imul
lock
mov
xchg
add
inc
push
push
xchg
pop
orl
idivl
rclb
push
dec
push
mov
popf
cmp
mov
xchg
sub
adc
arpl
inc
push
fidivl
dec
shlb
and
push
cwtl
mov
push
fists
pop
leave
aad
dec
daa
pusha
mov
fsubrs
insb
and
push
aas
sub
dec
mov
shll
daa
int3
inc
pop
enter
stos
test
pop
push
push
jg
shrl
das
pop
push
aaa
pop
or
jbe
clc
push
das
push
pop
adc
pop
iret
dec
psubsb
fbstp
clc
adc
jp
daa
cmp
inc
pop
fmul
inc
pop
dec
xor
or
clc
dec
xor
mov
inc
push
inc
pop
jg
sti
pop
sub
cmpsb
and
cmpsl
nop
dec
push
repnz
pop
loopne
jb
push
repnz
pop
xchg
andb
cmp
pop
call
mov
or
daa
pop
mov
sbb
test
mov
in
or
nop
pop
cmp
sbb
cmp
lods
mov
mov
jne
loopne
repnz
cmpsb
inc
push
inc
pop
pusha
pop
nop
ret
mov
push
sbb
jne
jg
pop
lock
test
inc
daa
sbbb
sbb
push
or
xchg
add
lock
push
jo
pop
xlat
xor
push
sub
dec
xchg
subb
test
jg
add
cs
shl
in
pop
or
sub
push
mov
pusha
lahf
andb
scas
jbe
push
test
shlb
jp
iret
clc
pusha
jmp
popa
daa
xchg
add
dec
popa
daa
jo
sub
push
sbb
cwtl
mov
aas
mov
inc
repnz
mov
xlat
xchg
cwtl
sbb
xchg
arpl
int
mov
dec
cmp
sub
push
add
arpl
xchg
pop
in
adc
fs
inc
sub
rcll
scas
outsb
sbb
push
daa
lock
in
imul
jl
gs
mov
xchg
xlat
cmpsl
mov
push
call
inc
sub
loope
pushf
andb
mov
dec
inc
lcall
repnz
dec
pop
lock
je
call
shl
pop
mov
dec
mov
mov
sub
dec
call
sbb
mov
push
mov
cmp
imul
sub
jg
pop
fwait
mov
push
push
rorl
out
push
aad
cmpsb
push
and
dec
daa
cs
jecxz
imul
daa
push
dec
xchg
hlt
cmpsl
inc
fiadds
movsl
or
popa
pop
fmuls
inc
pop
jg
enter
cwtl
loopne
xchg
jb
push
daa
nop
mov
dec
push
clts
insb
pop
add
leave
lock
xchg
test
outsb
daa
andb
mov
add
or
ret
subb
or
mov
andb
mov
jge
inc
or
sub
es
in
clc
addr16
fdivrs
sub
jg
jo
mov
jg
in
pop
xchg
mov
out
xchg
jbe
mov
adc
lods
xor
fs
insb
pushf
adc
pop
and
pop
dec
fwait
add
cmp
dec
mov
pop
enter
mov
rol
das
jno
mov
test
pusha
in
enter
rcrb
add
jb
push
enter
ret
and
jae
mov
sub
jae
dec
repnz
dec
je
clc
fwait
ss
je
push
jne
js
dec
shll
sbb
pop
sub
mov
das
add
pusha
mov
sub
add
sbb
dec
push
pop
jo
xchg
mov
mov
pop
adc
mov
add
pop
fcomps
popf
iret
repz
jl
mov
jns
out
xchg
pop
dec
int
jns
inc
cmp
sbb
lea
out
lcall
out
sub
jnp
cs
push
cmp
xor
hlt
test
repz
mov
sahf
out
adc
jns
out
push
pusha
jbe
lcall
call
int
nop
adc
push
push
clc
pushf
in
sahf
out
into
mov
push
sahf
out
sahf
inc
pop
push
adcb
mov
ds
hlt
add
push
add
jns
xchg
push
xorb
xchg
repz
xchg
cmp
cmp
mov
push
push
fs
inc
stc
cmp
repz
push
or
xchg
out
sahf
cmpsl
out
loop
enter
jns
mov
dec
repz
out
xor
or
add
xchg
push
enter
sahf
cmpsl
fnstcw
hlt
test
rol
jns
out
movsb
xchg
subb
jns
out
xor
push
cli
test
repz
out
faddp
mov
lcall
fs
inc
imul
or
and
jns
out
into
mov
jns
xchg
xorb
jl,pt
out
and
push
call
rcr
enter
xchg
lahf
out
sahf
mov
pop
inc
in
cwtl
xor
divl
push
push
push
repnz
les
iret
jle
xchg
mov
into
dec
repz
fdivp
cld
push
xchg
push
and
iret
repz
pop
je
cmpsb
repz
repz
cmp
repz
es
ss
push
data16
repz
pop
ja
fcoml
or
out
sahf
out
adc
out
sahf
adc
sbb
or
out
add
mov
int
mov
push
mov
pop
dec
push
pop
aam
in
iret
repz
push
cmp
pop
jbe
iret
repz
xchg
mov
iret
repz
shl
repnz
adc
inc
push
mov
jle
lcall
iret
roll
ljmp
cmp
movsb
xchg
xorb
cmp
repz
cmp
and
jns
cmpsl
stc
decb
sbb
repz
pushf
xor
mov
out
lcall
fidivrl
xchg
xchg
push
cmp
lahf
out
sub
repnz
stos
mov
push
mov
out
insb
pop
push
push
cmp
adc
clc
xchg
sahf
out
sahf
mov
sahf
out
xorb
inc
repz
out
sub
push
hlt
xchg
repz
loopne
mov
cmp
les
push
mov
repz
cmp
lahf
cmp
repz
pop
jb
mov
iret
repz
decb
lea
out
sahf
out
ds
push
lahf
out
sahf
xchg
mov
aam
add
sbb
ss
push
repz
repz
mov
mov
loopne
adc
cmp
fs
sahf
out
xchg
iret
rep
pop
xchg
dec
push
xor
or
xchg
adc
test
cmpsl
repz
push
push
push
push
push
iret
xchg
mov
ds
repz
sbb
idivb
ret
mov
jg
xchg
push
outsb
call
xchg
es
leave
je
out
je
add
cmpsl
jae
add
data16
cmp
push
cli
aaa
lahf
jnp
iret
roll
sub
push
dec
mov
iret
mov
incb
and
adc
imull
jl
pop
mov
scas
incl
cmp
add
dec
or
out
jmp
femms
dec
fs
insl
mov
inc
arpl
xor
sarb
cmp
mov
dec
cmp
dec
push
iret
repz
push
fs
mov
movsl
mov
mov
repz
repz
mov
cmp
mov
sarb
cmp
ret
iret
repz
leave
lret
cmp
lret
int3
int
iret
sarb
repz
rcl
aam
repz
repz
xlat
fcomp
fcmove
repz
fcmovnu
fstp
fnstsw
cmp
repz
loop
in
repz
repz
call
cmp
jmp
in
out
out
lock
repz
repnz
cmc
repz
repz
clc
stc
cli
into
repz
sti
cld
std
jns
cmpsl
mov
add
jns
out
push
pop
or
sahf
out
sahf
and
cmp
sahf
out
jns
fwait
lods
mov
rcr
in
cld
pop
cmp
and
ds
pop
imul
cmp
mov
iret
repz
ds
sahf
cmpsl
push
sbb
aas
dec
sahf
out
sahf
pop
jo
mov
jns
lret
bnd
cmpsl
fldcw
push
sbb
cs
sahf
out
inc
dec
push
pop
sahf
out
sahf
fs
jbe
mov
lcall
int
jmp
inc
sbb
cmp
repz
dec
pusha
jb
xchg
mov
lods
mov
int3
fdivrs
iret
repz
xor
jns
out
dec
arpl
fnstsw
pushf
stos
mov
jb
xor
popa
fs
div
jbe
jo
adc
fs
insb
sbb
jg
sbb
jb
popa
je
push
outsl
addb
jo
push
outsb
xorb
outsl
je
jb
arpl
jae
inc
imul
jnp
roll
gs
insl
jnp
jae
imul
jo
inc
arpl
pusha
gs
outsl
outsb
je
jbe
jnp
inc
sub
jp
pop
push
gs
int
and
daa
cmp
pop
imul
lret
inc
gs
add
stos
std
push
popa
jb
insl
and
fs
pop
adc
daa
dec
ret
push
jbe
loop
sbb
gs
aam
xor
imul
imul
pushl
outsb
arpl
jns
je
push
mov
outsb
rcr
dec
push
push
mov
adc
gs
sub
insb
mov
jbe
gs
outsl
push
xchg
inc
jne
outsb
and
xchg
rcr
xorl
fucomp
mov
inc
fs
cmpsl
xchg
shlb
mov
fwait
dec
push
pop
fstpt
sbb
aas
push
push
cld
jge
shrb
inc
gs
adc
pop
or
pusha
fstl
dec
mov
push
sub
mov
testl
jb
jne
push
jne
cmp
sbb
sbb
inc
mov
sbb
jp
push
push
push
in
pop
mov
outsl
aaa
or
outsb
mov
nop
xor
xor
insl
loopne
xor
mov
cmc
or
fs
push
xchg
jo
popa
sarl
push
push
bound
mov
pusha
xchg
es
shrb
je
xor
mov
inc
je
dec
inc
loop
and
sub
inc
mov
pop
shrl
pop
push
popa
imul
bound
mov
sub
sbb
dec
orl
jbe
or
pusha
push
and
pop
sbb
sub
sub
mov
jbe
call
insb
mov
enter
push
imul
push
push
xor
mov
fs
pop
rolb
cmpsl
repnz
and
mov
jns
adc
nop
sub
out
mov
xor
push
mov
inc
push
add
xchg
and
push
gs
ficomps
add
pop
add
cs
add
shlb
mov
dec
dec
inc
xor
jnp
inc
daa
xor
inc
insb
pop
cld
inc
cmpsb
cmovno
add
xchg
dec
push
dec
or
hlt
push
add
cmp
sub
orb
xor
adc
add
add
leave
adc
push
addr16
push
pop
add
leave
loopne
mov
adc
xchg
add
jb
xchg
dec
cwtl
xor
add
call
enter
xor
data16
xor
cmp
cmp
cmp
push
loope
ss
popa
data16
arpl
hlt
xor
mov
lret
rol
jge
sub
mov
pop
insb
iret
data16
mov
pop
imul
cmpsl
fnstenv
xor
inc
es
push
push
lock
out
jge
rclb
push
ss
rclb
pop
push
sub
out
pusha
xchg
inc
inc
outsl
xchg
ds
nop
pushw
push
adc
into
ror
jnp
testb
push
push
rolb
cmp
nop
mov
push
add
cmc
jb
mov
mov
dec
mov
inc
push
jbe
adc
push
mov
int
cmp
loopne
es
jle
pusha
out
jnp
cmp
cmpsb
loopne
lock
push
aas
jg
fnsave
push
and
xchg
aaa
inc
inc
fsubs
xor
inc
add
xor
cwtl
mov
cmp
test
inc
add
cmpsb
rol
mov
test
or
xor
xor
arpl
aaa
shlb
push
mov
repnz
gs
xor
xor
add
dec
or
int
imul
bound
fs
gs
gs
sbb
mov
fs
and
ss
inc
test
sti
mov
sarb
xor
push
inc
ss
ret
sbb
shrb
ljmp
add
mov
into
les
sarb
jecxz
sahf
mov
rolb
int
fbld
mov
and
pop
push
push
mov
sarb
adc
inc
nop
xor
and
fiadds
inc
and
test
sti
lea
sbb
inc
outsl
mov
test
or
fstps
shrl
pop
mov
xchg
lcall
and
clc
inc
nop
or
mov
mov
nop
push
das
bound
insl
pop
add
sbb
adcl
inc
or
fprem1
mov
pusha
mov
cltd
nop
orb
inc
sar
dec
add
jo
add
loop
and
xchg
push
jno
xlat
add
pop
jae
imul
inc
xor
enter
outsl
out
cld
bound
out
loop
push
outsb
pop
arpl
ja
cmp
mov
mov
add
scas
sbb
add
inc
in
jmp
imulb
out
shrb
sub
mov
dec
hlt
add
sbb
inc
xor
repnz
cs
dec
jmp
add
pop
and
jo
notl
call
xchg
mov
inc
jb
ja
popa
outsb
gs
shll
mov
inc
je
mov
out
adc
sbbb
or
xchg
cmc
push
add
loop
les
mov
test
std
adc
cmp
daa
or
xchg
pop
pusha
mov
add
mov
mov
lret
cli
daa
mov
call
movsl
add
je
outsl
outsb
popf
movl
out
incl
mov
add
shrb
outsl
js
mov
sub
jmp
pop
mov
sti
and
inc
mov
mov
mov
shrl
jns
mov
outsb
adc
imul
inc
xorl
add
loope
es
shlb
stc
fstpl
mov
roll
pop
push
adc
or
repz
ror
loope
loope
ret
imul
push
jb
outsb
jae
jb
ss
add
out
and
inc
cmc
divb
mov
pop
jmp
imul
inc
pop
cld
insl
insb
xchg
jno
xor
add
daa
clc
sti
push
lods
push
add
jo
inc
add
sbb
data16
inc
nop
push
mov
push
and
push
andb
mov
and
outsl
jae
data16
cs
sti
das
push
inc
push
gs
push
outsl
jb
fs
imul
aaa
jae
adc
pop
imul
dec
push
dec
jae
pop
push
cmp
nop
mov
loopne
rcll
xor
mov
clc
int
fucomip
or
pop
mov
int
mov
imul
sub
addr16
and
outsb
outsl
mov
fs
shlb
jne
and
inc
dec
push
push
add
cs
mov
pop
pop
jle
inc
roll
push
sbb
cli
mov
clc
dec
not
jl
sbb
jp,pt
sti
push
inc
shl
mov
dec
es
push
push
imul
lahf
mov
dec
add
xor
jp
ja
jnp
or
pop
or
adc
mov
pop
mov
sub
jbe
and
sbb
push
add
aaa
mov
les
imul
icebp
pusha
and
push
sub
pop
jl
loop
ljmp
loop
insl
pop
test
jb
les
into
add
dec
outsb
xchg
idivb
and
xor
mov
sahf
jae
arpl
xlat
inc
inc
notl
lods
jbe
lahf
test
nop
lahf
inc
sbb
dec
push
push
or
mov
in
loop
decl
cmp
decl
test
or
out
push
test
or
scas
pop
mov
push
sub
inc
dec
and
and
fst
push
cmp
mov
mov
and
adc
stc
sub
xor
add
sahf
rcll
int
out
popf
cmp
jmp
fidivrl
testl
and
add
or
and
and
add
xchg
xor
mov
rol
popf
and
and
ja
inc
cmpb
cmp
jecxz
sub
pop
xor
sbb
mov
fdivr
shrb
add
fildl
adc
dec
jb
push
daa
aas
add
mov
pop
out
in
je
je
push
push
mov
sub
nop
aam
push
test
jb
xor
cmp
loope
jmp
mov
adc
cld
push
mov
lcall
ficomps
and
lock
jl
sbb
push
call
mov
call
clc
xchg
add
dec
pop
pop
dec
ret
or
inc
jns
inc
lods
xchg
sbb
cmpl
add
jmp
jbe
or
incl
jo
jmp
xchg
insb
xchg
xor
xor
shlb
subl
cwtl
and
jne
dec
jno
movsl
add
lahf
int3
int3
push
sub
cmc
adc
out
jecxz
sub
inc
adc
jnp
clc
mov
push
fcmovnb
adc
js
adc
or
inc
adc
cmp
mov
sbb
adc
aad
or
addr16
and
push
xor
fdiv
cmp
lcall
sub
adc
fs
adc
adc
clc
mov
adc
negb
mov
fnstsw
adc
pop
orb
adc
and
push
call
data16
lret
lcall
pop
imul
insl
add
add
insb
subl
pop
popa
fs
jae
imul
dec
pop
inc
jo
pop
arpl
pop
dec
div
pop
add
and
arpl
pop
push
mov
dec
lods
inc
push
aaa
xor
data16
outsl
outsb
dec
mov
test
mov
imul
scas
mov
mov
add
push
dec
inc
dec
add
insb
or
jmp
jmp
rorb
inc
sub
add
pop
add
push
add
dec
daa
fimull
or
enter
push
fsubr
push
mov
cs
inc
pop
inc
mov
dec
mov
nop
dec
push
pop
loopne
lcall
pop
cwtl
mov
repnz
add
scas
dec
cmc
dec
add
or
jb
popa
add
pop
ret
pop
mov
and
push
sub
and
cmp
out
mov
outsl
push
cmp
and
push
fidivrs
cmc
add
pop
jae
imul
fdivrp
dec
insb
ds
adc
imul
fidivrl
add
pop
daa
into
and
outsl
sbb
jbe
adc
insl
bound
jb
jae
jne
arpl
and
sbb
aas
jae
inc
out
cmp
mov
cmpsb
je
insl
xlat
fldl
dec
je
out
lock
jnp
xchg
insl
loopne
dec
pop
lahf
jbe
jae
jb
sub
loopne
inc
cmp
inc
mov
ja
inc
jbe
sbb
sub
fbstp
pop
data16
cmp
andb
fisubrl
out
mov
jae
mov
push
jb
gs
aam
fimull
fwait
out
sbb
test
ficoml
repz
loope
pop
subl
dec
loop
pop
or
fimuls
out
ds
cmp
sub
insb
data16
sti
icebp
adc
push
or
dec
cmp
shll
dec
mov
js
dec
xchg
xlat
in
clc
icebp
jmp
cmpsl
sub
xor
dec
out
and
inc
outsl
fwait
mov
sbb
mov
push
sbb
jecxz
pop
pushw
imul
sarb
mov
scas
ret
andl
adc
sub
leave
mov
jmp
stos
cmpb
and
lret
popa
scas
arpl
or
lock
jmp
mov
and
jnp
sbb
and
outsb
jns
shrl
mov
mov
jae
xchg
xchg
xchg
imul
add
iret
jnp
arpl
dec
cmc
scas
outsb
mov
pop
pop
in
loopne
pop
stos
push
notb
or
push
arpl
fxrstor
insl
jecxz
xor
jns
pop
sbb
and
mov
daa
sbb
das
arpl
daa
push
sbb
mov
sbb
adc
jmp
mov
xor
jg
jo
pusha
sarb
jg
sub
cmp
dec
pop
add
jg
outsl
add
xor
xor
xor
xor
xor
dec
xor
popa
xor
jno
jge
pushl
mov
xchg
xor
mov
shll
xor
xor
movsb
xor
xor
pushl
out
xor
xor
xor
xor
xor
ja
test
xchg
xor
xor
xor
xchg
jg
sbb
inc
xor
push
xor
mov
and
aaa
ljmp
je
cmp
das
ja
arpl
sarb
mov
in
inc
shll
mov
lods
iret
ret
fcos
lret
ret
mov
jmp
movsl
mov
mov
lret
ror
idivl
dec
in
jmp
cmp
rol
cli
mov
sarl
or
mov
into
iret
fildl
test
cmc
mov
into
repz
fdivrs
out
call
ret
rcl
mov
or
cs
ror
iret
in
int
cmp
pop
inc
jno
sbb
das
clc
xlat
mov
les
clc
aad
cmp
sub
sbb
popa
push
enter
aam
insb
jl
mov
pop
add
outsb
daa
mov
dec
or
ss
mov
hlt
dec
sbb
and
adc
adc
add
adc
iret
ret
mov
push
add
scas
scas
popf
lods
in
dec
mov
push
dec
in
data16
test
ds
cmpsl
push
cmpsb
fwait
movsl
movsb
cmp
aaa
mov
mov
push
mov
xchg
out
popf
pushf
fwait
pop
xor
xchg
lcall
fsts
repnz
rorb
xor
and
xchg
inc
lea
mov
mov
pop
xchg
inc
test
repnz
pop
sbbl
jb
xchg
lahf
andl
mov
test
mov
jae
iret
dec
mov
jp
dec
leave
repz
push
imul
jbe
insb
jne
jg
xchg
cmpsl
insl
outsb
je
outsl
je
jae
sar
lret
jno
test
stos
je
jo
mov
jbe
outsb
lods
ja
js
out
cmpsl
jns
scas
jp
insb
imul
xchg
lahf
xchg
mov
push
jg
imul
push
test
test
xchg
fmull
mov
and
bound
mov
cmp
movsb
mov
pusha
pop
xchg
leave
sarl
mov
xchg
pop
inc
ds
lret
xchg
pop
mov
in
mov
into
mov
movsl
push
sahf
orb
popf
setl
xchg
lret
sbbl
xchg
xchg
adcb
jns
shlb
xchg
jg
xchg
dec
in
jae
nop
jg
jle
aaa
aas
iret
xchg
lea
mov
dec
lcall
out
add
jnp
xchg
addr16
push
cmpb
jge
out
in
jp
jp
jp
js
sbb
jbe
jns
je
xor
jae
jb
jno
outsl
das
mov
sbb
insb
imul
in
sbb
cmpsb
nop
inc
addr16
or
push
gs
adc
arpl
or
and
sbb
pop
jl
jb
pause
pop
jge
pop
pop
leave
and
jg
xchg
lret
pop
adcb
pop
sbb
adcl
xchg
out
and
and
and
repnz
test
test
dec
xchg
inc
stc
pop
sub
sub
dec
mov
jg
jg
dec
mov
dec
mov
dec
mov
inc
mov
repz
mov
inc
mov
inc
lea
aaa
jg
aaa
inc
mov
inc
cmp
cmp
inc
nop
cmp
stc
stc
stc
fwait
cmp
aas
xchg
ds
aas
cmp
inc
jl
jns
inc
cmp
inc
cmp
cld
fdivl
cwtl
dec
ss
dec
dec
xor
dec
xor
dec
xor
xor
push
xor
sarl
push
sub
mov
out
pop
sub
sub
pusha
daa
cmpsb
popa
rcrl
cmpsl
bound
test
es
and
data16
jmp
and
stos
push
stos
push
lods
imul
rep
pop
lods
outsb
push
scas
outsb
sbb
mov
sar
sub
sbb
mov
sbb
out
sbb
jns
mov
jmp
jns
jnp
mov
push
lret
mov
iret
movsb
push
popf
orb
pushf
or
sub
cmp
inc
pop
lcall
jns
cmpsb
jns
xchg
xchg
xchg
jle
stc
mov
mov
mov
mov
fdivrp
jl
mov
adc
jnp
test
addl
jns
outsb
es
jp
jl
jns
mov
adc
push
jbe
lret
jae
jne
js
jae
jno
sarl
sbb
outsb
das
mov
insb
add
sbb
nop
sbb
addr16
push
cltd
inc
data16
fs
dec
arpl
mov
pusha
inc
xor
xchg
jp
pop
pop
jb
daa
and
pop
inc
jns,pn
jl
pop
pop
in
daa
xchg
jge
sbb
jle
dec
in
push
sbb
stos
mov
adcb
jae
cwtl
imul
push
andb
cltd
scas
enter
add
jmp
and
in
dec
add
dec
xchg
dec
in
dec
add
out
dec
loopne
inc
mov
mov
jae
add
xor
xor
inc
loopne
xor
inc
cld
pop
fwait
mov
mov
aaa
loopne,pt
cmp
iret
fistpll
cmp
cmp
xchg
cmp
xchg
cmp
aas
aas
fwait
incl
xchg
inc
aaa
xchg
inc
aaa
xchg
xchg
inc
ss
inc
xor
ss
xor
inc
dec
xor
xor
repz
cmpsb
xor
fwait
add
add
pushf
dec
jmp
fisubrl
push
sub
sub
outsl
lcall
pop
sub
mov
in
daa
mov
movsb
and
pop
and
fisubl
loopne
and
and
imul
push
stos
addr16
jmp
loopne
imul
sbb
movsl
push
outsb
aam
add
sbb
jb
sbb
jne
iret
jae
mov
ja
mov
nop
inc
lcall
cmp
jmp
lret
mov
syscall
sahf
xor
sbb
adc
and
adcb
cltd
cwtl
orl
xchg
xchg
out
repnz
adcb
xchg
xchg
adcb
xchg
lret
mov
lea
mov
add
xchg
lahf
xchg
xchg
dec
or
adcl
jnp
pop
sahf
das
jp
sbb
ja
pop
cs
push
jbe
je
stc
and
jae
jno
jnp
outsl
cmp
dec
outsb
insl
jnp
insb
fs
dec
push
imul
xchg
inc
mov
jl
add
gs
cmp
dec
arpl
xor
adc
jle
and
pop
pop
sbb
pop
pop
sbbb
and
pop
pop
sbbl
sbbb
jae
pop
xchg
push
addb
mov
xchg
jae
xor
push
add
jl
sbb
sub
lahf
and
sub
mov
mov
dec
movsb
dec
dec
add
jns
mov
inc
xor
inc
ss
inc
xor
addr16
nop
cmp
inc
inc
add
mov
add
aas
mov
add
inc
inc
cmp
inc
inc
cmp
mov
cwtl
inc
cmp
add
lcall
fwait
dec
aaa
pushf
dec
ss
dec
xor
dec
add
sahf
push
xor
xor
out
lods
xor
mov
push
pop
sub
pop
sub
xlat
out
add
sub
movsl
pop
sub
loop
scas
int
pusha
sub
es
dec
push
cwtl
gs
add
stos
imul
repz
lods
imul
insb
insl
pop
scas
outsb
scas
outsl
mov
test
push
mov
add
dec
adc
mov
sbb
sahf
jmp
movsb
add
sahf
add
mov
cmp
jl
mov
jnp
mov
mov
sub
push
lahf
mov
adc
mov
adc
cmp
dec
sahf
popf
test
pushf
fwait
outsl
insl
fs
test
cltd
push
cwtl
add
das
iret
sbbl
xchg
adcl
sbb
dec
xchg
xchg
nop
sbbb
sbb
lea
mov
addr16
mov
sbb
test
iret
xchg
dec
push
cmpb
jg
jl
inc
outsb
jnp,pn
jle
jns
dec
sarl
pop
ja
jne
xchg
dec
je,pt
and
jno
and
xchg
inc
push
jo
outsb
fs
and
insl
insb
imul
fs
imul
addr16
andb
and
andl
andb
pop
jae
xchg
inc
sbbl
int
repnz
test
pop
cmp
mov
push
add
jns
pop
xchg
pop
xchg
push
sub
sub
add
jae
add
jae
aaa
lahf
cs
mov
lea
mov
sahf
add
dec
mov
movsb
dec
shll
out
add
dec
movsb
dec
add
jns
dec
xchg
cmp
inc
xchg
cmp
cmp
xchg
cmp
fmull
inc
inc
xchg
inc
xchg
inc
inc
xchg
inc
inc
jns
out
cwtl
inc
inc
aas
cltd
inc
inc
ds
cmp
jp
lcall
mov
mov
jmp
cmp
cmp
mov
mov
push
xor
pop
add
pop
xor
xor
lret
mov
das
cs
int
jg
cmpsl
pop
sub
add
sub
add
stos
sub
add
lods
imul
lods
push
and
scas
insl
and
outsb
iret
je
cmp
and
mov
jae
mov
pop
mov
imul
add
ja
mov
jns
cmp
add
add
mov
mov
jmp
int3
mov
movsb
mov
add
push
sbb
xchg
xchg
das
lahf
xchg
sahf
popf
xchg
push
lcall
sbb
jns
cwtl
xchg
xchg
xchg
xchg
xchg
xchg
test
jle
shll
mov
cmpsb
mov
mov
xchg
and
in
and
and
cltd
sub
jbe
jnp
xor
leave
jp
jns
ja
xor
pcmpeqd
or
pushf
and
sbb
and
outsb
xor
and
subb
xor
inc
imul
nop
lret
push
and
and
sbb
sbb
pushf
push
push
mov
lret
xchg
sub
inc
sub
mov
and
pop
push
dec
repnz
pop
mov
sub
cs
push
push
lea
xor
cmp
repz
mov
xor
out
dec
xchg
stos
push
add
push
sahf
add
pop
stc
iret
push
xchg
cmp
cmp
dec
xchg
cmp
out
outsl
fidivrs
xchg
cmp
dec
xchg
aas
dec
xchg
inc
push
jle
repz
inc
xchg
inc
inc
xchg
inc
inc
inc
cwtl
inc
inc
cltd
inc
lcall
inc
fwait
dec
dec
inc
fwait
dec
inc
mov
pushf
dec
inc
popf
dec
pop
jg
jle
aas
sahf
dec
ds
dec
cmp
cmp
cld
lahf
push
cmp
push
add
jns
sahf
mov
aaa
mov
pop
xor
mov
pop
xor
jmp
aaa
xor
add
stos
fs
mov
jg
sub
push
sub
cmpsb
jmp
add
mov
aas
outsl
mov
jo
mov
jb
mov
and
je
pop
jg
jne
mov
and
sahf
iret
add
add
jl
mov
add
sbb
xor
sbb
sbbl
jmp
int
iret
mov
nop
lret
movsl
push
movsb
imul
mov
repnz
sbb
sahf
mov
pop
sahf
das
add
lcall
mov
xchg
xchg
movsb
jns
jae
xchg
xchg
xchg
xchg
xchg
xchg
imul
and
das
int
mov
mov
lret
lahf
and
addl
xor
test
int
jb
daa
jge
jnp
mov
sub
ja
push
jns
sub
inc
mov
jae
int3
sahf
xchg
xchg
jno
sub
add
outsl
outsb
insl
fs
pop
xchg
add
imul
cld
add
cmp
sub
daa
daa
pcmpgtb
in
push
bound
mov
inc
pop
mov
pop
dec
ds
out
add
xor
fwait
xchg
out
xor
pop
pop
nop
xor
cltd
jne
ds
xchg
ss
cwtl
push
add
cld
cmp
cmp
movsb
push
repz
cmp
push
add
aas
repz
jns
dec
xchg
inc
inc
dec
dec
cwtl
inc
dec
cwtl
inc
shll
dec
stos
add
mov
dec
stc
repz
dec
pushf
dec
add
popf
dec
dec
inc
sahf
dec
inc
sahf
dec
inc
mov
inc
mov
inc
mov
mov
stc
inc
mov
mov
cmp
fwait
lcall
pop
cmp
cmp
cld
int
test
aaa
test
bound
xor
dec
gs
xor
add
out
jg
xor
xor
insl
jmp
repz
mov
outsl
sub
jno
mov
sub
jne
sub
sub
cmc
pop
mov
daa
mov
es
and
jmp
add
add
jge
pop
iret
out
and
add
and
mov
pop
jl
pop
xlat
iret
movsl
iret
shrl
test
and
rcrb
and
and
mov
mov
dec
sub
lahf
push
outsb
cs
mov
mov
in
test
xchg
xor
and
mov
xchg
xchg
xchg
xchg
dec
repz
cld
mov
xchg
daa
xchg
nop
xor
sub
mov
mov
mov
jns
xchg
repz
pop
sahf
inc
add
subb
das
stc
and
jg
mov
in
sub
and
in
js,pn
pop
jb
nop
jbe
mov
mov
add
xor
mov
test
outsl
jl,pn
xchg
xchg
outsb
mov
add
xchg
imul
inc
cs
imul
push
dec
movsl
mov
mov
dec
add
jns
mulb
add
pusha
xchg
ss
xlat
and
add
jmp
pop
xchg
cmp
pop
pop
xchg
cmp
jl
int
pop
xchg
cmp
pop
xchg
add
xchg
fstps
push
add
stc
cld
push
cltd
inc
push
lcall
inc
push
pushf
mov
push
pushf
dec
dec
dec
pushf
dec
dec
stos
jns
mov
add
stos
dec
lahf
add
dec
mov
push
fnsave
push
dec
mov
inc
mov
jmp
inc
stos
add
movsl
pop
inc
cmpsb
pop
inc
cmpsb
pop
inc
cmpsb
pop
inc
cmpsb
pop
inc
out
mov
pop
inc
test
aas
mov
test
ds
out
fistpll
stos
bound
stos
fs
out
add
scas
imul
cltd
cmpsb
aaa
ss
xor
stc
mov
mov
xor
mov
xlat
lret
xor
mov
js
ljmp
sub
sub
sub
aas
sub
mov
daa
mov
ds
es
mov
nop
inc
and
iret
and
bound
sub
push
mov
nop
test
nop
sub
jns
push
cmpsb
movsl
movsb
pop
sbb
sbb
mov
lahf
sahf
mov
popf
pushf
insb
fidivrs
lea
lcall
enter
xchg
sbb
add
xchg
lret
sub
nop
xchg
out
lods
mov
aam
sahf
das
mov
jmp
xchg
dec
sti
adc
test
addb
dec
jg,pn
xor
in
inc
jl
jp
fs
and
mov
dec
push
cltd
ja
jne
pushf
nop
sub
popf
mov
xor
pop
jno
mov
daa
jo
xor
mov
insl
inc
daa
jns
insb
xor
push
sub
pop
pop
add
stos
xor
push
in
cmp
xchg
aaa
cmp
xchg
dec
cmp
bound
addr16
pop
xchg
repz
je
pop
pop
add
inc
addr16
repz
cltd
inc
pop
lcall
out
mov
add
out
cld
stc
push
popf
dec
push
sahf
dec
push
sahf
dec
dec
push
stos
add
out
jp
push
mov
push
mov
mov
std
iret
iret
mov
dec
movsb
push
dec
movsb
push
dec
outsl
pop
into
je
dec
add
cmpsl
pop
inc
xlat
out
sub
test
pop
inc
mov
imul
inc
mov
bound
inc
lods
fs
sahf
imul
lods
gs
cmp
cmpsb
imul
insl
cmp
cmp
aaa
mov
aaa
mov
cld
dec
shl
add
mov
xor
xor
shll
xor
fcomi
cld
in
add
jl
mov
mov
jmp
sub
add
sub
cmpsl
jns
addb
nop
push
sub
mov
testb
iret
lds
add
lods
sub
dec
xor
jne
dec
test
pop
cmpsl
add
int
jb
movsl
movsb
xchg
das
mov
das
mov
xchg
xor
dec
xlat
ficompl
add
jns
xor
nop
cwtl
xchg
xchg
rcrl
xchg
xchg
nop
xor
xchg
xor
nop
add
xor
xor
xchg
xor
lret
mov
das
stc
and
orl
addb
sbb
jg
jge
scas
fs
jnp
dec
es
jns
and
push
cmp
adc
je
inc
jns,pn
xchg
aaa
jb
in
daa
xchg
xchg
jo
outsl
xchg
xchg
dec
in
outsb
cmp
lret
and
push
pop
pop
xor
sbb
lret
jae
ds
aas
inc
gs
out
shlb
lcall
inc
bound
pusha
pushf
inc
inc
iret
mov
dec
inc
pop
popf
inc
pop
popf
dec
dec
pop
xchg
add
xlat
out
out
dec
pop
pop
mov
dec
pop
sahf
mov
mov
push
push
add
push
push
aas
outsl
mov
movsb
push
push
push
movsl
push
push
push
cmpsb
push
push
cmpsb
pop
xlat
out
dec
cmpsl
pop
dec
test
pop
dec
movsb
add
dec
int
repz
stos
pop
dec
stos
pusha
dec
stos
popa
dec
dec
fwait
scas
out
stos
bound
lods
fs
mov
inc
scas
cli
out
mull
scas
push
inc
mov
imul
inc
fwait
mov
mov
inc
inc
mov
aas
add
cmp
mov
cmp
jae
mov
jne
stos
add
cld
pop
mov
cmp
jp
mov
sahf
lret
mov
add
mov
jp
xor
add
xor
pop
int
sahf
add
sahf
add
in
cmp
addb
dec
adc
ret
mov
cmc
aaa
repnz
mov
or
stos
iret
sub
mov
xor
xchg
lret
lods
lods
xor
stos
sbb
and
jns
xchg
cmpsb
movsl
movsb
xchg
xor
pop
push
stc
mov
cs
add
dec
bnd
fwait
lcall
rcll
sarb
cs
xchg
xchg
ss
mov
add
lea
mov
and
repnz
leave
and
addl
adcb
jle
lret
xor
stc
in
sbb
add
push
js
add
lcall
cmp
xchg
cmp
xchg
pop
stc
pop
daa
jb
add
and
jno
jo
outsl
in
cltd
mov
insl
int3
xor
insb
imul
lcall
imul
addr16
sahf
inc
data16
dec
gs
fs
pop
iret
lahf
dec
arpl
dec
repz
add
popa
mov
mov
xlat
out
pop
mov
pop
mov
movsb
shl
stc
dec
pop
add
cmpsb
push
pop
stos
push
jg
fidivrs
cmpsl
pop
push
test
add
push
test
push
test
xor
mov
push
add
mov
bound
dec
lods
scas
fs
scas
gs
scas
fnsave
cmp
dec
dec
mov
iret
cmc
mov
insb
insl
inc
mov
inc
stos
add
jo
mov
inc
mov
inc
stos
add
mov
out
outsl
dec
inc
inc
add
mov
ds
jns
jp
out
mov
cmp
mov
mov
xorb
add
mov
add
xor
test
stc
cld
add
mov
xor
jb
xor
mov
mov
add
ret
mov
ret
lea
stos
and
sti
iret
enter
cltd
xor
sub
mov
mov
scas
xchg
xchg
xchg
out
lods
lods
cwtl
aaa
ss
inc
lcall
int
stc
shlb
xchg
aaa
movsb
mov
adc
add
mov
lahf
xchg
cmp
sub
jl
cmp
fwait
lcall
nop
dec
xchg
cmp
xchg
xchg
cltd
insl
xchg
out
xchg
cmp
add
in
cmp
rorb
inc
sahf
xchg
dec
mov
xchg
xchg
adcl
es
cmpb
cmp
jle
jge
testb
cmp
in
add
xchg
inc
push
js
ja
out
in
jbe
jne
test
jae
inc
fwait
jb
xchg
dec
ds
jno
jo
inc
outsl
repnz
and
inc
inc
insl
sahf
inc
insb
out
mov
add
lret
pop
xlat
dec
imul
scas
out
sub
dec
mov
lcall
push
push
popa
movsl
push
popa
movsb
pusha
pop
xlat
out
add
pop
stos
add
pop
lahf
lahf
stc
mov
pop
test
stos
pop
pop
stos
lahf
negl
pop
pop
push
stos
push
stos
pusha
push
lods
add
push
lods
mov
push
push
scas
arpl
push
push
add
imul
mov
dec
mov
dec
mov
dec
cld
fnstsw
outsb
dec
dec
mov
add
mov
dec
mov
mov
jb
mov
inc
mov
inc
mov
mov
mov
inc
mov
mov
mov
jns
jnp
mov
aas
pop
jbe
ds
mov
mov
addl
mov
cmp
xlat
xlat
aaa
add
ss
jae
repz
xchg
add
jne
xor
lds
xor
adc
lods
iret
lret
mov
cmp
jns
add
or
mov
cmp
xchg
lret
mov
mov
xchg
iret
cs
cmp
scas
sbb
cmp
xchg
push
lcall
stos
movsl
mov
in
cmp
cmp
test
mov
enter
movsl
add
lahf
cmpsb
add
mov
add
imul
push
popf
add
das
cmp
mov
jb
cwtl
xchg
xchg
push
xchg
cltd
add
cmp
xchg
inc
xchg
xchg
in
psrld
lea
sbb
mov
cmp
xor
and
lcall
test
and
lcall
and
jge
inc
pop
jl
cmp
cmp
jnp
jnp
iret
inc
jp
jns
add
sahf
js
add
stc
flds
inc
jne
dec
dec
jae
bnd
outsb
add
jb
movsb
jns
mov
jo
mov
outsb
mov
dec
insl
add
jae
aas
inc
movsl
push
imul
fistps
imul
push
xchg
ja
cmc
gs
gs
arpl
out
fcompl
pop
pusha
stos
lods
pop
pop
lods
pop
pop
lods
pop
aas
xlat
repz
lods
pusha
popa
pop
scas
bound
add
scas
fs
outsb
scas
pop
movsb
add
pop
mov
mov
push
mov
push
stos
push
mov
push
mov
push
add
outsl
scas
xchg
push
outsb
push
stos
add
push
mov
dec
mov
outsl
out
dec
mov
dec
mov
je
mov
ja
mov
lcall
mov
inc
pop
iret
mov
inc
mov
add
stos
inc
in
outsb
mov
inc
mov
rolb
roll
stos
aas
xchg
fisttps
cmp
mov
ret
mov
je
cmp
add
daa
jns
ss
nop
xor
xor
pop
xlat
out
or
xlat
scas
iret
int3
mov
add
inc
mov
add
mov
xor
and
lahf
mov
lea
mov
lahf
inc
inc
mov
dec
sub
scas
lods
lods
popf
xchg
das
in
xchg
inc
adc
stos
sahf
inc
inc
cmpsb
xor
inc
test
and
dec
sahf
movsl
popf
movsb
cmp
xor
data16
mov
add
sahf
popf
pushf
cs
lcall
inc
pushf
inc
cwtl
inc
add
cmp
xchg
xchg
xchg
inc
xchg
xchg
adcl
xchg
pushf
inc
xchg
inc
inc
and
leave
and
jb
mov
sbb
fldenv
mov
mov
add
push
mov
adc
mov
inc
test
enter
and
addb
xlat
lds
jle
jge
mov
dec
jl
lahf
dec
in
jp
dec
jnp
jp
jns
enter
dec
js
dec
add
ja
dec
out
in
dec
jbe
jne
dec
jae
lcall
add
cmpsb
push
jb
push
jno
outsl
test
outsb
test
fsubrl
insl
test
test
stos
pop
repz
iret
cmc
push
add
push
pop
je
pop
dec
pop
stos
data16
gs
pop
lahf
iret
add
scas
popa
arpl
jp
int
popa
mov
add
mov
pop
movsb
add
aaa
jg
jmp
imul
pop
pop
mov
lret
mov
insl
pop
mov
push
mov
push
stos
add
movsb
add
stos
push
push
mov
mov
jne
mov
js
jp
mov
repnz
mov
dec
mov
dec
dec
dec
push
shll
dec
dec
stos
inc
inc
jmp
addl
roll
lahf
scas
inc
add
mov
mov
je
aas
aas
les
push
jl
cmp
cmp
xchg
cmp
cltd
stos
imul
enter
enter
xchg
aaa
leave
xchg
data16
aas
int
je
mov
push
add
mov
enter
mov
sub
sbb
mov
inc
inc
mov
sbb
dec
movsb
cmp
nop
lods
lods
add
mov
in
test
inc
cmpsl
inc
cmpsb
jae
popf
mov
mov
jae
mov
sahf
jl
lret
add
pushf
inc
pushf
lahf
fwait
lahf
inc
data16
fnstenv
adc
cwtl
mov
xchg
xchg
lcall
pop
adc
sub
cmp
xchg
xchg
lahf
dec
nop
sbb
mov
sub
cmpsb
nop
and
jb
mov
xchg
sbb
test
xlat
jae
or
or
subb
mov
notb
dec
add
int
jle
add
xchg
cltd
bound
dec
sahf
lahf
push
jp
jns
push
js
shll
ja
cwtl
jbe
jne
fstps
test
jb
jae
pop
mov
pop
jo
pop
outsl
sahf
add
movsb
add
lods
pop
insl
insb
lods
pop
mov
scas
add
push
stos
add
mov
fs
je
stc
stc
add
mov
arpl
bound
pusha
add
mov
pop
pop
inc
jae
lods
pop
add
mov
pop
jo
mov
iret
mov
ret
add
pop
stos
add
jle
jmp
stos
push
mov
add
mov
jle
mov
add
mov
jl
mov
jg
dec
dec
mov
sahf
stos
fnstenv
orl
dec
jg
jl
mov
ret
dec
dec
ret
ret
mov
xchg
pusha
pushf
lahf
mov
mov
add
lds
add
inc
rcr
cmc
pushf
nop
inc
sahf
inc
enter
jne,pt
xchg
cmpsb
xchg
xchg
xchg
cmp
xchg
xchg
cmp
std
jecxz
add
fnstenv
mov
movsb
sub
dec
mov
xlat
pop
mov
mov
rorl
enter
mov
mov
xchg
inc
cs
sbb
mov
mov
enter
scas
scas
mov
and
fisubrl
mov
insb
test
mov
cmpsb
movsl
dec
movsb
mov
movsl
xor
mov
lahf
sahf
mov
pushf
nop
cmpsb
cmp
add
and
xchg
mov
aam
testl
and
sbb
xchg
xchg
and
xor
nop
pop
nop
adc
push
cmp
add
dec
cld
add
fnstenv
xchg
adc
dec
push
test
jnp
dec
adc
andb
pushf
push
pop
addb
inc
push
jle
push
jge
test
ja
add
jl
stos
jae
jae
jp
push
jns
add
lret
int
enter
pop
jbe
lods
pop
out
sub
scas
pop
jb
pop
pop
pop
jns
scas
jno
jo
mov
outsl
bound
fdivrp
jmp
insl
add
arpl
imul
xlat
mov
push
mov
data16
jmp
stos
add
mov
mov
fs
arpl
mov
jmp
mov
popa
stos
pusha
pop
add
mov
mov
pop
mov
pop
stos
fwait
stos
mov
mov
mov
jp
mov
jnp
mov
stos
push
mov
jg
add
mov
add
cmpsb
jmp
push
roll
ret
add
dec
out
push
int
xchg
dec
lds
add
dec
movsb
add
mov
sahf
pop
stc
add
movl
inc
movsb
int
repz
inc
inc
leave
xchg
xchg
in
iret
enter
inc
lret
xchg
aas
cwtl
jecxz
inc
ds
cltd
imul
iret
inc
lcall
cmpsl
dec
add
lret
leave
xor
dec
mov
push
jns
dec
mov
xlat
mov
cs
add
lods
cltd
mov
add
mov
jmp
push
scas
add
enter
lods
lods
push
add
stos
stos
test
jl
cmpsl
adc
mov
repz
add
cmpsb
add
mov
in
fldenv
add
adc
sahf
popf
pushf
fwait
dec
cltd
out
cltd
inc
lcall
in
mov
xchg
xchg
es
and
dec
inc
cmpsb
xchg
cmpsb
push
xchg
stc
insb
inc
mov
push
xchg
inc
push
cmpsl
mov
mov
xlat
add
pop
add
mov
add
mov
daa
xchg
test
test
xchg
add
jb
es
test
jae
add
push
cmpsb
repnz
jnp
pop
add
jle
pop
jge
mov
lahf
pop
jl
pop
jnp
pop
repnz
jns
pop
pusha
js
cmp
mov
bound
xchg
add
jle
in
cwtl
add
mov
mov
data16
addr16
fbstp
push
insl
mov
insb
mov
outsl
mov
push
insl
outsb
imul
jno
mov
jae
jg
scas
fs
add
mov
popa
ja
aas
xlat
out
pop
stos
pusha
mov
pop
stos
add
mov
out
mov
jle
sarb
fsubrp
push
sbbb
pop
ret
ret
push
stc
fcmovnbe
mov
stos
push
les
push
les
mov
mov
mov
dec
lret
inc
or
mov
stos
add
enter
xchg
out
jae
dec
leave
xchg
dec
sahf
add
lret
xchg
gs
xchg
inc
lret
xchg
inc
lret
xchg
inc
xchg
out
int3
les
cwtl
cltd
inc
ds
and
int
fwait
inc
into
insb
fdivl
rol
jp
test
outsl
sbb
add
enter
mov
test
fcmove
push
mov
mov
fnstcw
adc
mov
sti
into
pop
mov
dec
mov
adc
add
je
cltd
mov
sub
scas
add
rorl
adc
cmp
dec
test
mov
mov
test
add
movsl
lcall
mov
hlt
lcall
add
or
loop
fwait
iret
leave
and
negb
and
inc
inc
add
push
xor
in
xchg
adc
jae,pn
iret
push
xchg
push
clc
repnz
sahf
imul
mov
jb
push
mov
mov
mov
dec
sahf
cmp
adc
push
jp
addr16
pop
xchg
test
add
cmp
scas
jne
addb
lahf
cmpsb
sarb
pop
jle
dec
shl
bnd
pop
pop
jge
jl
int
into
cmc
add
stos
add
fs
lcall
jne
out
push
je
jae
add
jb
imul
repz
imul
insb
insl
outsb
mov
add
imul
push
jb
imul
data16
mov
arpl
add
mov
pusha
ficoml
jae
add
ret
lahf
out
add
pop
ret
pop
int
pop
pop
ret
pop
ret
test
jae
xlat
mov
mov
mov
cmpsb
rclb
mov
push
mov
int
lcall
nop
cmc
out
out
enter
dec
lret
lret
iret
cmc
pop
into
mov
mov
dec
cmp
fwait
xchg
int3
xchg
cwtl
inc
inc
int
inc
pop
jae
pushf
lcall
mov
popf
insl
fdivl
shrl
add
mov
mov
jbe
lret
enter
push
mov
cmp
add
push
mov
imul
mov
add
adc
jmp
add
jns
add
in
cltd
and
add
stos
pop
mov
movsl
stos
test
cmp
movsb
push
lcall
adc
lahf
int
daa
xlat
add
repnz
and
popf
pop
add
fwait
daa
iret
and
push
cltd
push
mov
xchg
xchg
cwtl
push
sub
fsts
jne
fnstenv
xchg
adc
lds
nop
add
data16
enter
nop
push
movsb
cltd
in
pop
pop
mov
pop
inc
es
mov
pop
add
add
mov
out
scas
mov
scas
pop
add
mov
pop
xchg
mov
test
jl
pushf
pop
test
add
andb
push
pop
pusha
xorl
arpl
fs
xchg
into
cmc
jge
add
jnp
cmp
xor
addr16
imul
out
ss
movsb
jbe
mov
jae
out
jmp
jb
jno
outsl
jo
jo
jno
mov
jle
mov
insb
mov
ja
repz
imul
mov
out
cmpsb
stos
data16
stos
add
sarl
out
sarl
andb
popa
pusha
mov
add
cmpsl
stc
out
addl
xchg
pop
lds
mov
mov
mov
je
cmp
lea
push
mov
fwait
idiv
into
add
nop
push
lret
adc
cmc
jl
lret
xchg
dec
stos
add
dec
lret
int
dec
int
dec
xlat
in
stc
cltd
dec
into
lcall
inc
xor
popf
inc
rcrb
sti
cmc
ss
outsl
fnsave
ret
lods
push
add
push
ret
push
push
xchg
xchg
xchg
lret
rol
mov
push
mov
and
and
push
mov
mov
add
adc
stos
push
mov
mov
mov
pop
rcrb
mov
lret
enter
lods
lods
push
lods
lods
xchg
daa
js
lods
mov
stos
test
sbb
lods
add
and
movsl
movsb
mov
xor
mov
add
cs
sahf
pop
popf
fsts
inc
pushf
pop
fwait
adc
push
dec
rolb
cltd
sbb
sbb
xchg
pop
sub
cmp
xchg
pop
pop
ss
add
xor
xchg
fadds
xchg
xchg
pop
push
add
in
pushf
insb
pop
xchg
pop
nop
scas
sbb
mov
add
pop
lret
xchg
jmp
mov
in
je
mov
xchg
bound
sahf
push
test
xlat
out
imul
xchg
fcoml
add
mov
jge
push
jnp
repnz
stos
jp
add
outsb
js
pop
fwait
jmp
mov
jo
stos
add
mov
mov
je
je
add
jno
mov
mov
mov
jae
cmp
add
sarb
imul
addr16
ret
ret
xorl
gs
les
lds
mov
xlat
jae
xlat
mov
pop
add
add
mov
mov
pop
pop
add
mov
leave
mov
pop
xor
cmpsl
jne
push
add
mov
push
scas
out
fistl
int3
xchg
push
int3
xchg
push
stos
fwait
pop
sub
push
int
push
xchg
cwtl
dec
into
cltd
lcall
fwait
dec
pushf
dec
xchg
jb
pop
movl
ds
sbb
jo
mov
and
push
cld
movb
lret
les
lcall
add
arpl
js
mov
pushf
mov
add
sbb
mov
mov
push
mov
mov
pop
sub
mov
mov
pop
mov
add
xor
jns
mov
pop
mov
mov
dec
mov
pushf
pop
scas
pop
scas
lods
data16
lret
pop
lods
stos
stos
jl
test
test
cmpsl
cmpsb
pop
frstor
mov
pusha
fs
dec
add
mov
mov
or
mov
cmp
xchg
add
push
mov
pushf
add
xchg
xchg
mov
repnz
sahf
add
inc
sahf
fnstenv
nop
adc
push
sahf
xchg
mov
mov
out
push
mov
repnz
mov
cld
test
mov
repz
jb
mov
xlat
jle
jge
jne
mov
add
lcall
js
sarb
repnz
out
jne
add
sarl
jle
cmp
ret
addb
les
jae
add
movb
push
jb
mov
movl
mov
jmp
mov
fs
arpl
xor
lret
xchg
pusha
lret
xchg
pop
int3
xchg
pop
pop
fcomi
pop
iret
sahf
add
sahf
add
xchg
pop
into
add
lahf
jmp
xchg
pop
into
cwtl
pop
cwtl
add
iret
lcall
add
add
pop
fcomi
pop
addb
push
rolb
and
mov
dec
shll
dec
aam
dec
push
je
mov
in
fcoml
roll
ret
xchg
adc
das
xchg
into
int
pop
int3
es
mov
test
xchg
lret
lds
addl
xor
mov
xchg
imul
add
and
test
cmpl
les
cs
mov
mov
and
mov
movl
mov
outsl
jb
add
mov
sbb
pop
sbb
stc
stc
mov
mov
sbb
stos
dec
pop
jle
mov
mov
test
and
mov
movsl
lret
nop
push
cmp
xchg
mov
imul
add
sahf
fists
cmp
jb
iret
xchg
add
iret
cmp
xor
cwtl
cltd
lcall
dec
mov
xchg
xchg
rcrl
fwait
popf
sahf
xchg
lahf
mov
xor
nop
add
aam
mov
movsl
lea
mov
cmpsb
mov
cmpsl
mov
dec
rcrl
stos
test
inc
sahf
out
lods
test
lods
scas
adc
mov
scas
adc
scas
addb
fnstenv
cmpb
jle
mov
adc
mov
jl
fisttpl
jns
mov
loope
iret
push
push
jbe
jl
sub
push
daa
cs
dec
sub
jne
arpl
in
push
fists
cwtl
xor
or
gs
xchg
leave
lret
enter
stos
test
int
cmpsl
xchg
xor
movsl
movsb
mov
mov
mov
lahf
xchg
add
int3
add
add
xor
cltd
xchg
xor
xchg
xor
cmp
xchg
xchg
xor
xchg
out
xchg
xor
jb
mov
mov
or
inc
mov
fidivl
test
adcb
xor
cmpb
adc
sbb
bound
cltd
nop
jl
jp
xchg
or
or
sbb
inc
jb
or
jb
xchg
xchg
lret
xchg
jno
jo
push
jns
outsl
xchg
cmp
xor
mov
in
push
mov
lcall
lret
aas
push
inc
inc
pushfw
popf
inc
gs
stc
popf
inc
fs
inc
arpl
cmp
push
popa
lahf
dec
pusha
lahf
dec
mov
pop
mov
dec
pop
mov
push
pop
pop
mov
cld
jl
push
pop
movsl
push
push
push
cmpsb
push
push
cmpsl
push
push
out
iret
cmpsl
pop
push
cmpsl
pop
pop
push
cmpsl
pop
pop
push
test
push
test
jle
stos
pop
dec
stos
pusha
dec
stos
popa
dec
stos
bound
aas
ljmp
scas
fs
scas
gs
scas
addr16
scas
dec
iret
ljmp
scas
imul
inc
mov
insl
inc
mov
inc
mov
inc
fwait
outsl
pop
imul
inc
mov
inc
aas
mov
in
repz
mov
jbe
mov
cmp
cmp
jmp
cmp
mov
mov
jle
mov
xor
fwait
xchg
filds
mov
xor
aas
scas
xor
xchg
rorb
mov
mov
add
ret
or
lods
iret
add
lahf
sbbb
xchg
push
orl
push
leave
test
scas
xchg
add
scas
xchg
lods
lods
imul
stos
xchg
test
movsb
cmpsl
cmpsb
movsl
movsb
or
outsl
xchg
in
pop
repz
mov
xchg
xor
aam
fwait
add
cmp
out
xor
xchg
sbb
xor
outsl
inc
lds
cmp
in
in
xchg
cmp
add
addl
outsb
rorb
cmp
xchg
jp
xchg
jns
in
es
cmp
xchg
stc
mov
cmp
cmp
sbb
je
cmp
cmp
fwait
pop
cmp
jb
push
push
fs
xchg
cmp
ds
mov
addr16
cmp
inc
fwait
inc
jmp
fwait
inc
inc
push
add
sbb
inc
inc
sbb
cltd
cmc
aad
add
lret
dec
bound
mov
out
inc
sbb
call
mov
add
pop
pop
mov
pop
ja
test
add
jmp
lcall
cmpsl
pop
push
test
push
test
push
stos
pop
push
push
mov
push
stos
pusha
add
lods
popa
cmp
bnd
dec
fs
imul
into
imul
add
insb
inc
push
shlb
add
dec
repz
mov
ss
jne
addb
pushl
popf
xor
mov
inc
push
jge
add
xor
bound
mov
rorb
mov
test
jle
pop
aam
sysexit
xchg
xchg
xor
xor
sti
add
syscall
add
sbb
inc
jo
add
syscall
fdivrs
adc
movups
mov
add
add
gs
cmp
xor
add
jne
mov
syscall
sbb
cmp
adc
sbb
add
or
push
sbb
cmovl
scas
ja
sbb
jae
mov
inc
mov
aas
iret
fs
and
inc
mov
sbb
add
fcompl
push
jmp
les
mov
scas
xchg
lahf
mov
adc
xor
iret
aad
in
or
add
daa
inc
movsl
xor
add
push
jb
xchg
xchg
mov
cmp
inc
pop
cmpsb
xchg
xchg
pop
pop
mov
and
dec
mov
xor
and
xor
xor
and
jmp
imul
test
adc
mov
mov
inc
mov
xor
mov
out
gs
out
dec
adc
cmp
cmp
add
xchg
ss
in
imul
orb
add
fldl
pop
out
cmp
sbb
in
jns
js
inc
inc
mov
ja
xchg
pushf
fistpll
xchg
cmp
or
popf
fistpll
add
addr16
jecxz
fwait
cwtl
out
sbb
add
imul
inc
add
scas
enter
gs
and
lret
clc
dec
bound
sub
add
dec
pop
mov
add
pop
movsb
push
pop
add
push
mov
out
adc
mov
pop
add
xlat
scas
xchg
inc
out
push
stos
push
iret
leave
and
add
lods
fistps
and
out
imul
mov
loope
or
inc
mov
rcl
jp
out
jo
mov
mov
mov
xlat
cltd
cs
into
jne
mov
jbe
add
aam
add
mov
test
jl
cmp
out
enter
scas
pop
out
aam
add
mov
adc
mov
out
add
test
loope
add
cwtl
out
adc
xor
mov
ret
movsb
mov
add
sbb
aas
iret
xchg
nop
orb
stos
sbb
pop
outsl
stc
add
dec
lods
arpl
dec
scas
gs
dec
xchg
imul
mov
dec
push
dec
xor
and
lods
scas
imul
popf
add
push
inc
inc
movsl
scas
adc
and
xchg
mov
push
push
test
pop
add
and
xchg
adc
mov
add
dec
movsb
inc
push
mov
xlat
pop
mov
or
or
loope
js
ss
add
mov
xchg
xor
cmpsb
pop
push
stc
lods
movsl
push
add
xchg
mov
outsl
add
xor
sahf
popf
jmp
icebp
mov
add
or
xchg
or
xor
xchg
ss
xchg
imul
mov
mov
leave
pop
mov
fcmovnb
arpl
add
lods
add
orl
inc
mov
jl
xor
xchg
xchg
jnp
jns
and
and
scas
sbb
jbe
cmp
mov
cmp
adc
jb
daa
mov
in
ds
in
mov
lcall
pop
dec
gs
inc
aam
add
movsb
jns
imul
addr16
jg
add
in
iret
dec
fs
arpl
loopew
clc
popa
mov
xor
scas
push
into
leave
clc
jb
je
push
pop
cmpsl
into
leave
dec
xlat
jo
outsl
push
enter
scas
shll
add
aam
cltd
fisttps
add
lods
aam
rcrb
shrb
add
int3
cmp
js
jno
inc
mov
jbe
mov
add
ja
ja
scas
iret
mov
mov
pop
nop
pop
mov
iret
cmp
cmc
pop
jle
cmp
ss
into
aad
xor
add
and
into
xor
pop
dec
jg
or
das
add
adc
xorb
add
mov
cmpsb
or
inc
inc
push
data16
inc
push
test
test
subb
and
test
add
push
add
arpl
imul
sub
cltd
pop
adc
je
xadd
inc
stos
mov
adc
or
add
fwait
cltd
or
sqrtps
mov
sub
sbb
packsswb
add
inc
push
pop
roll
sub
cmovb
loop
inc
inc
mov
inc
and
xchg
xorl
mov
and
stos
adc
rcr
add
in
jb,pt
iret
inc
fprem1
pushf
shrb
add
sub
iret
inc
add
inc
or
add
push
xor
testb
cmpsb
push
mov
xor
xor
xchg
xor
pop
test
xor
jae
in
lods
lods
stos
nop
out
enter
xchg
xor
test
sub
jb
xchg
cmpsb
js
add
xchg
movsb
mov
fisubrs
ss
add
mov
lret
imul
sahf
das
sub
xor
xchg
xchg
aaa
xchg
sbb
imul
mov
mov
orl
cmp
cmp
push
in
adcb
dec
cmp
cmp
jg
cmp
scas
sub
adc
in
xchg
cmp
jp
add
arpl
cmp
nop
lret
ja
jbe
cmp
jne
cmp
cmp
jg
add
out
inc
mov
imul
insb
inc
add
mov
test
mov
mov
mov
dec
arpl
les
sbb
ret
dec
movsl
push
add
movsl
push
pop
test
scas
push
pop
cmpsl
push
outsl
int
ds
pop
push
stos
add
pop
pusha
sbb
test
push
dec
out
push
ljmp
scas
stc
push
lcall
mov
dec
push
insl
cld
mov
dec
mov
dec
mov
insl
inc
outsl
inc
sbb
int3
ret
call
inc
jg
and
jp
jl
popa
xchg
and
test
lret
xchg
outsl
test
cmp
mov
sahf
rolb
mov
in
and
cltd
lahf
lea
sahf
add
leave
xor
or
fs
lcall
jns
mov
iret
in
xor
cmp
add
iret
ds
and
mov
iret
inc
ret
mov
iret
bound
add
jb
sbb
fs
stos
mov
inc
dec
dec
inc
jb
xchg
iret
jp
add
mov
push
adc
cwtl
xor
add
in
xor
lods
loopne
filds
rorb
in
filds
fbld
cmp
push
loopne
fs
sub
or
addb
jmp
pop
and
inc
cmovo
mov
leave
pop
sysenter
or
cmp
push
jno
cmovns
mov
dec
iret
push
and
les
xor
movsb
xor
xchg
xor
mov
add
mov
mov
xor
xor
insb
add
xor
xor
lods
int
enter
xor
sarb
add
or
xor
hlt
add
jb
jns
mov
xchg
ss
stc
pop
sahf
xchg
aaa
popf
xchg
ss
fwait
sbb
sbb
hlt
add
jecxz
or
xchg
inc
hlt
lret
pop
mov
add
in
fldl
mov
sarb
cmp
cmp
pop
cmp
add
bound
or
add
daa
cmp
add
addb
inc
add
add
stos
adc
sub
sarl
add
jp
cmp
add
and
xchg
cmp
jbe
cmp
xchg
cmp
je
jae,pt
scas
mov
jo
inc
pushf
cmp
inc
outsl
fwait
inc
outsb
inc
cld
mov
inc
insb
pushf
inc
imul
push
sahf
inc
inc
push
repz
dec
dec
gs
dec
es
dec
jmp
pop
add
mov
push
outsb
fdivrp
cld
pop
movsb
push
pop
movsl
push
pop
movsl
push
push
pop
cmpsb
push
push
pop
cmpsl
repz
push
pop
cmpsl
pop
pop
test
push
test
pop
movsl
jnp
call
pop
push
stos
pop
push
adc
jl
push
lods
bound
add
dec
pop
push
jmp
aam
add
aam
add
clc
dec
mov
dec
mov
sbb
lret
out
add
inc
mov
jno
cld
xor
inc
pop
add
jae
inc
mov
fcmovne
cli
cld
inc
mov
inc
mov
pop
rep
loop
jp
and
jnp
mov
stc
jns
fwait
jge
cmp
mov
fsubs
cmp
jnp
xlat
pop
xchg
add
popf
lret
lock
call
aas
xchg
mov
mov
les
or
cmc
push
pcmpgtb
lods
iret
cmpsl
dec
and
and
xor
add
iret
cmp
pop
leave
adc
inc
imul
inc
push
inc
popa
xchg
nop
push
push
insb
mov
addb
fiadds
popf
aaa
add
add
and
aaa
xchg
xchg
aaa
fstps
or
mov
jl
sub
xorb
push
nop
add
aas
sti
inc
add
cmpsb
push
mov
ss
mov
mov
sbb
scas
cwtl
scas
xor
lods
lods
push
add
xchg
xor
in
mov
add
pop
mov
xchg
aaa
lahf
mov
jg
or
mov
add
aaa
cwtl
in
dec
rcll
int
lret
xchg
xchg
xchg
add
nop
xchg
push
imul
lea
mov
mov
cmp
data16
cmpsl
jb
roll
test
adcl
cmpb
leave
and
jg
leave
test
jge
add
and
xchg
jnp
gs
pop
add
cmp
in
ja
jbe
jne
daa
daa
and
mov
inc
jb
jno
inc
xchg
cmp
inc
jo
inc
outsl
outsb
in
ds
inc
inc
insl
pushf
insb
popf
inc
stc
sbb
sbb
imul
imul
addr16
dec
addr16
mov
mov
arpl
test
dec
bound
movsb
push
lahf
aaa
aas
lcall
push
pop
movsl
push
pop
movsl
push
push
pop
cmpsb
push
pop
cmpsl
repz
aas
pop
pop
cmpsl
pop
pop
test
pop
test
mov
out
add
push
stos
pop
push
stos
pusha
push
lods
jns
repz
push
lods
bound
arpl
gs
scas
dec
jae
cmpsl
addr16
mov
dec
dec
mov
imul
decl
insl
dec
mov
dec
mov
dec
mov
pop
inc
aaa
xchg
xor
jmp
mov
jns
jp
mov
aaa
push
cld
ds
cmp
mov
cmpb
js
gs
sub
adc
in
jecxz
ret
mov
jmp
mov
and
leave
add
cltd
test
inc
orb
adc
push
enter
iret
arpl
pop
push
jmp
scas
enter
sbb
iret
mov
dec
xor
sbbl
call
shlb
icebp
outsb
test
les
or
les
es
and
lahf
movsb
pop
stos
adc
inc
sahf
movsl
pop
push
lahf
les
mov
add
scas
arpl
add
dec
adc
pop
and
test
add
dec
add
push
pop
or
sbb
inc
stos
add
push
scas
sahf
and
jo
add
push
int
test
enter
aas
cmp
add
sbb
pop
cmpsb
test
xchg
nop
pop
xchg
lahf
nop
xor
mov
pop
and
addl
xor
and
push
adc
dec
xor
les
stos
xchg
sahf
lret
repz
test
cwtl
cmp
xchg
aaa
movsl
movsb
sub
pop
repz
adc
xchg
cmp
lcall
in
xlat
enter
cltd
adc
repz
data16
add
cs
xchg
cmp
add
cmp
pop
push
pop
mov
fstpt
mov
data16
xor
jae
add
cmp
xchg
scas
leave
jae
test
add
loope
cmp
dec
push
popa
add
push
popa
adc
jle
cmp
popa
adc
sbb
cmp
jnp
repnz
cmpb
ds
lret
ja
jbe
jb
nop
aas
jne
je
inc
sahf
dec
movsl
lcall
repnz
jno
inc
inc
jo
fwait
inc
nop
lahf
push
sub
pop
inc
dec
repnz
sahf
imul
add
jg
aas
xor
dec
mov
js
add
add
xchg
mov
pusha
movsb
push
pop
dec
ret
push
ds
cmpsl
pop
cmpsl
into
cmpsl
jg,pt
cltd
test
pop
enter
stos
pop
cld
out
incb
stos
pop
push
fldenv
push
lods
bound
sub
cld
push
lods
arpl
cmp
mov
add
dec
ret
aas
xchg
mov
outsb
dec
mov
inc
mov
or
jae
stos
mov
fistpll
add
inc
dec
mov
push
push
dec
mov
mov
mov
int
cli
iret
enter
cmp
test
rolb
add
mov
out
add
into
xor
mov
imul
mov
adc
movsb
xor
add
fwait
add
xor
jo
adc
add
adc
sub
add
mov
add
inc
orb
add
adc
inc
pop
pop
jp
or
test
iret
cmp
jmp
xchg
xchg
and
pop
test
or
adc
in
das
mov
add
das
iret
mov
pop
inc
xor
nop
xor
add
stos
andb
ficompl
inc
and
repnz
mov
adc
cmp
and
inc
inc
jo
and
inc
sub
scas
dec
movsb
push
and
inc
addb
rorl
aas
mov
add
add
scas
jb
leave
inc
repnz
mov
jb
xor
mov
and
ja
xor
mov
jne
add
sub
lods
add
mov
iret
jg
mov
add
jae
push
lcall
add
cmp
sub
pushf
lcall
sbb
out
ja
add
adc
inc
add
cmp
add
in
add
adc
mov
je
addb
add
add
add
cmp
add
cmp
cmp
into
adc
fcoml
add
add
enter
jge
dec
inc
mov
jl,pt
xchg
adcb
iret
add
sbb
add
jbe
inc
pop
and
add
push
js
iret
add
rep
add
pushf
inc
or
fildl
outsb
add
ror
mov
dec
add
mov
mov
fisttpl
add
mov
lahf
out
imul
add
push
pusha
movsl
adc
and
pop
pop
dec
jg
enter
addb
add
push
pop
add
aaa
push
stos
popa
push
lods
popa
push
iret
in
out
lods
arpl
push
scas
gs
push
scas
enter
int3
fwait
pop
push
dec
mov
mov
insb
dec
mov
insl
dec
mov
outsl
dec
mov
jp
jno
mov
inc
ret
inc
sub
cmp
add
test
xor
js
jns
inc
scas
mov
cwtl
jg
leave
add
fmul
cmp
cmpl
cmpl
push
or
roll
add
xor
jne
aam
add
rcl
mov
xor
jns
jno
iret
mov
dec
xchg
movsb
mov
scas
iret
mov
sub
fcmovne
sbb
in
aad
add
iret
add
repnz
fcmovne
pop
and
inc
inc
inc
inc
test
add
xchg
dec
movsl
movsl
nop
adcl
cmpsb
mov
mov
push
push
nop
jae
mov
mov
xchg
xor
mov
leave
adc
iret
scas
in
pop
bound
or
in
stos
test
adc
cmp
or
iret
cmp
out
add
add
or
xor
xlat
adc
add
bound
orl
pop
mov
ficoms
and
add
ret
jno
xlat
or
repz
pop
outsb
adc
dec
or
and
je
xor
jae
addr16
enter
inc
loope
push
loop
lahf
movsl
inc
lahf
mov
dec
push
dec
insb
iret
jmp
repnz
push
imul
push
add
shlb
mov
arpl
pop
push
jnp
cmpsb
into
push
adc
out
pop
test
pop
pop
test
xor
sbb
push
enter
pop
jne
push
iret
ret
pop
xchg
dec
gs
push
ja
int3
in
add
ds
add
addl
cmp
cmp
xchg
roll
mov
ss
outsb
shlb
inc
out
adc
shlb
aas
jle
and
cwtl
aaa
lods
iret
stos
pushf
push
nop
inc
aas
xlat
lret
movsl
add
into
cltd
test
add
pushf
fwait
sbb
adc
insl
add
add
sahf
pop
xchg
push
add
xchg
stos
roll
into
into
aas
popf
push
loopne
iret
aas
adcb
repnz
xor
ds
pop
cmpsl
add
repnz
dec
addb
add
jle
and
or
cwtl
add
jb
iret
jns
add
pop
aad
push
stc
cs
aas
aas
add
cmpsl
mov
jae
scas
add
add
movsb
jmp
into
insl
xlat
xlat
scas
jne
leave
iret
ret
lcall
mov
gs
iret
or
dec
lcall
cmpsl
add
pop
iret
pop
outsl
cs
and
iret
push
add
pop
out
and
fs
enter
std
scas
mov
mov
push
mov
push
into
ret
jo
xlat
push
dec
insl
lock
lahf
aas
iret
mov
shlb
push
aas
mov
rclb
mull
add
into
cmp
cmp
testb
xchg
mov
xor
xchg
ret
mov
add
les
leave
xor
pop
add
sub
mov
add
inc
add
pminsw
add
cmp
add
sbb
mov
rorb
push
add
adcl
jl
push
pusha
inc
add
in
ja
inc
jl
pop
pop
lock
adc
adcb
pop
adc
dec
jne
xor
lea
les
adc
into
xor
and
and
sbb
inc
xchg
mov
cli
add
iret
adc
xor
add
and
dec
sbb
and
sub
mov
or
aaa
pop
je
adc
inc
adc
mov
aaa
add
test
scas
iret
enter
lods
cwtl
cmp
cltd
cmp
mov
cmp
push
add
xor
movsb
cwtl
imul
add
lahf
sahf
loope,pn
mov
popf
xchg
fucomi
add
xchg
out
fdivrs
add
xchg
cmp
leave
in
fwait
xchg
xchg
xchg
cmp
iret
cmp
mov
mov
mov
mov
mov
and
add
test
fs
dec
inc
xchg
addb
jg
scas
cs
aas
add
jl
jnp
in
sub
js
out
es
jbe
inc
xchg
push
mov
add
ret
gs
xor
je
pushf
insb
lret
mov
inc
add
fldl
inc
and
out
sahf
outsb
sahf
inc
insl
lahf
pop
fsubrs
call
cmp
add
push
arpl
adcb
mov
gs
add
cmpsl
push
pop
test
jno
sbb
loop
stos
add
and
out
stos
pop
add
popa
cld
cld
cld
sub
push
lods
arpl
push
scas
data16
and
push
sub
in
gs
dec
mov
add
dec
mov
dec
mov
dec
and
mov
int
sub
inc
iret
inc
inc
data16
imul
xchg
js
mov
jmp
jle
add
mov
out
sti
xor
out
xor
add
dec
imul
add
pop
xchg
add
iret
adc
xchg
dec
and
sbbb
jp
add
outsl
dec
stos
inc
mov
addl
into
cld
adcb
or
mov
jg
lret
insb
insb
mov
add
adc
and
inc
inc
mov
inc
push
mov
cmp
iret
cmp
xchg
xor
repnz
scas
pop
inc
test
and
cwtl
cmp
cmp
je
stc
push
mov
or
and
sub
pop
aas
jg
aas
inc
jb
addb
xchg
inc
mov
add
push
mov
push
mov
push
or
pop
and
xor
testb
leave
gs
ds
mov
add
mov
les
out
add
lahf
fwait
aaa
add
nop
das
xchg
inc
lcall
jns
scas
lods
cltd
lods
stos
ficoml
dec
pop
add
pop
add
xchg
cmp
mov
iret
cs
gs
mov
popf
cmpsb
jne
and
add
pop
xlat
dec
lcall
imul
or
daa
cs
fstpt
add
lcall
movsb
jne
jno
cltd
push
dec
testl
and
sub
cwtl
jle
inc
jge
in
inc
cltd
aas
jl
in
lahf
dec
inc
jp
inc
jns
jb
cmp
inc
js
ja
lret
dec
jbe
inc
jne
push
inc
sahf
inc
je
jae
inc
jb
xchg
cmp
inc
jno
popf
inc
orl
outsb
lahf
insl
movsb
repz
mov
gs
add
dec
addr16
iret
lret
movsb
push
movsb
push
movsl
push
movsl
push
arpl
add
dec
push
bound
lods
lret
mov
add
pop
test
outsl
jns
pop
pop
test
stos
pop
pop
stos
pop
pop
pop
lods
pop
xlat
repnz
push
add
into
cmc
pop
outsb
push
scas
add
scas
gs
lcall
ret
push
aaa
xlat
imul
into
add
dec
mov
dec
mov
dec
fwait
pop
xlat
mov
jno
dec
mov
jae
xlat
in
mov
inc
mov
inc
mov
mov
push
cmp
jnp
mov
inc
inc
imul
aam
add
out
scas
cmpsl
cmpb
out
jp
cmp
add
mov
mov
aaa
ret
aaa
enter
add
xor
or
loop
adc
add
adc
inc
sbbb
add
add
lahf
inc
jbe
inc
mov
jno
inc
arpl
iret
aas
add
sub
mov
cmp
call
aad
addl
dec
pop
xchg
cs
push
and
sub
sbb
inc
iret
inc
repnz
test
lods
mov
iret
push
xor
mov
cmc
and
movsb
add
adc
xor
inc
add
cs
cmp
add
stos
test
or
and
and
xor
sbb
add
mov
inc
call
popl
add
mov
add
cmp
sbb
cmpsb
movsl
sbb
or
mov
test
cmp
jg
popf
xchg
cmp
cmp
add
cmp
jbe
xchg
xchg
xchg
add
xchg
xchg
in
imul
mov
adc
adc
xchg
pop
jb
lea
and
mov
sbb
leave
int3
mov
ds
inc
xchg
test
fs
addl
cmpb
push
cmp
mov
inc
jnp
add
inc
lcall
in
js
inc
jb
fsubl
jbe
popf
in
sbb
inc
jb
lahf
lret
inc
jno
jo
fwait
xchg
daa
stc
outsl
mov
mov
movsl
repnz
imul
imul
mov
popf
aas
pop
data16
push
movsl
push
fs
jg
decb
cmpsl
push
pusha
test
pop
test
pop
pop
test
pop
pop
pop
pop
stos
pop
pop
pop
pop
stos
pop
js
adc
pop
lods
pop
pop
xchg
pop
lods
leave
out
jmp
pop
fs
scas
push
mov
inc
aas
inc
mov
imul
insb
mov
pop
push
mov
mov
nop
mov
jbe
in
jb
mov
mov
outsb
sahf
insl
mov
inc
mov
jmp
mov
inc
sub
out
xchg
rorl
ret
add
mov
hlt
enter
xor
iret
add
pop
and
mov
inc
dec
dec
add
xchg
dec
je
push
sub
pop
imul
mov
or
or
lcall
xchg
xchg
cmpsl
cltd
cmp
xlat
and
cmpsb
sbb
xchg
xchg
and
and
mov
pop
repz
add
lcall
cmp
or
mov
cmp
mov
scas
iret
andb
lahf
test
push
add
adc
dec
fiaddl
inc
incl
or
add
lahf
xchg
loop
add
sahf
cwtl
mov
push
and
gs
clc
outsl
push
test
les
imul
jmp
mov
daa
xchg
int
xchg
cmp
imul
stc
cmp
pushf
cmpsl
adc
inc
add
out
cmp
scas
testl
mov
or
popf
aas
scas
mov
mov
inc
mov
inc
add
movsb
inc
addr16
clc
fistpl
scas
mov
xor
inc
mov
dec
lea
sbbb
ret
mov
jne
jge
jp
mov
mov
mov
jbe
add
lods
push
sbb
and
push
xor
cli
movsl
push
cli
leave
cmp
scas
lahf
inc
imul
sti
stos
mov
iret
popf
jmp
shl
lods
lahf
inc
mov
add
or
dec
aas
jmp
scas
lret
leave
add
mov
inc
mov
and
mov
add
mov
mov
lahf
aad
jns
rorb
jnp
enter
bound
mov
add
lods
leave
test
ret
enter
xor
loop
out
cmp
mov
aad
bound
or
subl
add
stos
and
inc
jbe
nop
inc
jo
or
push
push
jmp
enter
ret
nop
pusha
push
inc
push
xlat
iret
test
push
xor
arpl
xchg
leave
cmp
mov
or
mov
jp
jbe
add
aad
add
adc
lock
imul
enter
inc
iret
dec
add
mov
movsb
cmp
cmp
xchg
or
iret
aas
mov
cmp
scas
inc
jo
dec
iret
aam
push
xlat
in
popf
inc
cmp
inc
subl
cmp
mov
test
call
pushf
inc
into
xchg
mov
add
mov
add
dec
xchg
iret
sub
addb
pop
cmp
and
add
fcomip
data16
stos
lcall
mov
dec
sbb
dec
and
xchg
inc
mov
add
mov
out
mov
pushf
aas
lahf
cltd
cmp
cltd
cmp
repnz
cltd
cmp
cwtl
cmp
cmp
lcall
xchg
dec
fstps
xchg
xchg
xchg
push
dec
fisttpll
pop
add
cmpl
xchg
inc
mov
inc
ja
add
nop
jge
xchg
xor
andl
nop
and
xchg
cmpb
inc
jg
test
sub
jl
or
jnp
inc
jp
enter
jns
js
repnz
pop
ja,pt
inc
inc
popf
inc
jbe
stc
xchg
cmpsl
inc
jne
popf
inc
jae
movsb
in
inc
jb
repz
add
sbb
dec
imul
cmp
mov
stc
daa
stc
push
movsl
push
push
cmpsb
push
cmpsb
push
push
jo
shl
cmpsb
push
bound
cmp
pop
or
stos
pop
aam
mov
pop
pop
pop
lods
pusha
pop
lods
popa
bound
in
and
femms
and
jb
or
push
add
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
lcall
je
jne
jbe
ljmp
mov
inc
mov
scas
mov
inc
jge
mov
inc
mov
jmp
mov
addl
cmp
popf
jl
xchg
rorl
pusha
push
ret
add
nop
mov
pop
add
inc
gs
add
pop
cmp
jno
stos
iret
mov
mov
dec
mov
mov
add
push
lcall
popf
inc
mov
jbe
not
adc
fwait
fwait
aas
xchg
cmp
pop
vmovupd
dec
inc
leave
iret
dec
cmpsb
inc
push
mov
inc
lcall
leave
scas
insb
xchg
int3
inc
subb
test
in
and
lahf
add
or
sub
add
adc
rcl
mov
lcall
mov
lahf
fwait
inc
cmpsb
lahf
inc
scas
mov
fimuls
dec
scas
test
inc
mov
repnz
out
xchg
add
and
and
inc
xchg
inc
add
sub
or
or
pushf
cmp
add
jae
jne
into
pushf
add
scas
or
fwait
cmp
cwtl
xor
inc
jnp
add
leave
leave
add
rcll
inc
mov
mov
pusha
push
mov
sub
mov
sbbl
arpl
dec
lods
and
call
outsl
inc
add
mov
fstpl
add
add
add
cltd
inc
inc
sbb
addb
iret
inc
stos
push
imul
arpl
outsl
repnz
inc
inc
jb
inc
sbb
add
dec
outsl
sbb
push
add
outsl
add
outsl
popa
adc
and
lcall
in
outsl
dec
inc
push
lahf
movsl
jge
jle
in
or
ds
ds
xchg
add
or
dec
cmp
je
inc
iret
push
pop
mov
mov
dec
fsubrs
lcall
cmp
mov
xchg
sbbl
fwait
inc
xchg
popf
inc
xchg
sahf
mov
inc
mov
movsb
dec
sbb
lahf
mov
sahf
mov
sahf
inc
lea
jno
mov
dec
add
xchg
pop
lods
enter
movsl
mov
cs
add
xlat
iret
dec
add
lahf
scas
pop
add
mov
cmp
cwtl
cmp
adc
ret
add
mov
lcall
or
jbe
test
add
lret
clc
in
out
xchg
enter
test
add
jb
push
test
push
data16
imul
aam
mov
addl
iret
jb
or
fwait
inc
sahf
mov
mov
iret
add
cmpsb
dec
fwait
mov
lcall
iret
adc
dec
inc
cmp
cltd
scas
mov
enter
dec
add
and
mov
mov
xchg
dec
and
dec
scas
enter
je
out
ficompl
sub
xchg
xchg
inc
xchg
pushf
inc
movsb
mov
sub
dec
add
imul
add
inc
push
jo
xlat
test
or
je
test
add
xor
mov
push
xchg
dec
iret
cmp
add
jge
add
pushf
inc
mov
add
scas
add
iret
leave
outsb
data16
ret
inc
dec
test
pop
dec
aad
clc
pop
adc
out
jmp
add
lcall
and
inc
dec
jo
xor
jae
cmovnp
inc
push
sub
add
jg
and
xchg
nop
mov
push
scas
les
sbb
iret
popf
inc
jmp
scas
ret
lods
rcrb
cwtl
mov
pop
xlat
fucomi
dec
add
leave
dec
add
jge
cmp
dec
into
add
mov
mov
adc
mov
scas
xchg
lcall
ds
xlat
popf
adc
ret
inc
out
lahf
inc
mov
or
add
xlat
and
and
jne
dec
add
in
sub
into
lods
sahf
aas
mov
mov
hlt
dec
pop
test
adc
lcall
and
cmc
in
dec
movsl
cs
lahf
inc
jg
into
inc
or
inc
scas
xchg
mov
addr16
pop
aas
les
dec
add
mov
sbb
movsl
mov
out
test
add
xchg
dec
lahf
dec
mov
mov
dec
add
lcall
movsb
outsl
and
cwtl
jmp
xchg
dec
fs
loop
test
dec
test
aad
outsl
or
adc
sbb
adc
mov
scas
add
mov
les
add
mov
iret
add
pop
mov
dec
cs
out
fwait
sbb
iret
xor
dec
scas
adc
stos
and
dec
mov
int
cli
pop
enter
test
les
inc
int3
adc
and
iret
inc
push
xchg
add
pushf
xor
jge
pushf
cmp
scas
lods
inc
fst
push
dec
mov
push
nop
ja
iret
dec
add
mov
pop
fisttpl
adc
xor
mov
nop
dec
cs
mov
scas
dec
loopne
cltd
scas
dec
xchg
imulb
enter
js
inc
xor
outsb
fimuls
loopne
add
xchg
mov
addl
xor
les
fs
push
push
xchg
andl
dec
mov
pop
jno
or
xchg
xchg
lret
sarl
mov
cmp
clc
sahf
aas
mov
dec
iret
add
xor
dec
add
add
cmpsl
add
imul
mov
dec
ficoms
add
adc
scas
mov
mov
repz
mov
imul
inc
mov
add
xchg
inc
mov
cltd
inc
xchg
pushf
inc
stos
push
inc
xchg
movsl
dec
add
push
bound
sahf
mov
add
mov
pop
jl
inc
and
popf
pop
shlb
jns
add
es
add
sti
ja
inc
jae
in
add
sahf
inc
inc
lahf
dec
movsl
bnd
inc
lahf
jb
jno
in
repnz
mov
outsb
mov
ds
mov
mov
fs
add
imul
push
add
cmpsb
push
cmpsl
push
aas
aas
mov
bound
pusha
test
aas
pop
stos
pop
pop
pop
stos
pop
pop
mov
lods
pop
add
pop
lods
pusha
pop
fs
pop
stc
jns
pushf
pop
scas
fs
push
mov
push
mov
out
int
push
mov
push
push
mov
imul
pop
scas
push
dec
pop
enter
jae
jno
dec
enter
enter
mov
enter
ja
int
push
pop
jns
mov
inc
mov
out
jg
mov
or
cmp
mov
cmp
cmp
adc
add
add
cmp
fmuls
cmpsl
nop
xchg
xor
lds
xchg
mov
enter
add
popf
ds
dec
mov
loopne
iret
dec
add
fcoms
xchg
add
add
leave
insl
dec
add
jb
mov
mov
leave
and
nop
out
iret
stos
movsb
dec
aas
xchg
inc
out
cmc
inc
mov
inc
mov
mov
cmp
and
test
mov
push
sub
les
leave
mov
and
lea
pop
xchg
mov
mov
pop
inc
aam
jo
pop
inc
scas
iret
mov
popl
dec
stos
movsl
dec
dec
adc
dec
lahf
dec
test
add
test
add
mov
in
add
cmpsb
inc
xchg
mov
pop
iret
inc
add
adc
pop
dec
push
push
xchg
pop
ret
xchg
inc
mov
lahf
inc
mov
add
cmp
lahf
dec
add
mov
ficompl
inc
mov
add
dec
sahf
and
mov
mov
in
out
jnp
adc
xchg
sbb
enter
mov
adc
and
mov
enter
insl
je
dec
iret
add
xchg
mov
adc
xchg
outsl
mov
iret
sbbl
push
cmp
push
and
imul
inc
mov
enter
enter
xchg
pushf
cmp
mov
add
xchg
sar
xor
mov
stos
pushf
ds
cmp
dec
jbe
sahf
movb
push
popf
inc
lods
cmp
mov
iret
sbb
and
xchg
inc
and
leave
inc
mov
test
add
test
push
add
test
test
inc
pop
or
mov
mov
mov
sub
test
add
mov
mov
outsb
dec
shlb
sub
cltd
cmp
lods
imul
xor
cmp
call
inc
mov
pop
xchg
push
loopne
add
sbb
dec
and
and
ljmp
andl
leave
les
movsb
dec
iret
cmpsb
add
xchg
cwtl
stos
test
pop
incl
les
inc
iret
inc
dec
adcb
enter
nop
mov
mov
inc
mov
mov
stos
add
sbb
lret
cmp
or
add
into
add
mov
scas
mov
jne
push
add
sub
push
sbb
and
jb
mov
mov
add
jb
movsb
mov
pop
andl
lods
mov
add
inc
inc
dec
dec
dec
cmpsb
dec
xchg
fadds
push
repz
add
mov
test
dec
dec
lock
insb
sub
cmpsl
add
sbb
sbbb
iret
mov
leave
mov
enter
push
fsts
jno
mov
add
shrb
add
add
mov
add
mov
pop
incl
pushf
aas
mov
dec
iret
test
into
leave
mov
dec
test
add
jns
imul
cmpsb
mov
and
arpl
push
fcmovbe
xor
mov
iret
sbb
dec
push
inc
adc
test
cmp
fadds
das
mov
inc
and
jg
push
jae
mov
lods
lods
iret
add
lahf
add
mov
aad
mov
cwtl
sahf
inc
mov
aad
add
repnz
mov
xchg
insl
stos
iret
push
add
sub
ljmp
pop
fadds
sbb
into
bound
add
xchg
pop
enter
push
mov
nop
sbb
add
mov
inc
aad
jg
cwtl
test
inc
ja
add
cltd
add
add
push
mov
imul
adc
psubsb
xchg
pusha
jg
emms
mov
inc
jl
dec
mov
lret
pop
jl
add
sub
outsb
jg
cld
cmp
add
add
xor
inc
es
adc
jecxz
push
xchg
stos
lret
sub
iret
shl
add
fwait
cmp
sbbl
shlb
mov
iret
test
scas
add
movsb
dec
enter
int3
incb
mov
add
int3
push
test
jns
jbe
mov
pop
mov
test
dec
cmpsl
xchg
pop
pop
and
inc
pop
inc
and
dec
mul
xor
mov
push
add
xor
add
scas
push
and
into
add
mov
inc
lods
mov
mov
mov
es
mov
mov
mov
iret
push
test
cltd
inc
xor
iret
loope
cmc
add
add
test
sahf
inc
mov
pop
inc
add
daa
inc
test
lea
sahf
mov
enter
test
enter
add
scas
add
adc
sarb
mov
xchg
xchg
ret
mov
mov
sarb
imul
arpl
push
les
cltd
cmp
push
add
push
push
mov
mov
test
push
add
sbbl
iret
jmp
xor
mov
mov
xchg
scas
scas
push
mov
dec
lcall
pushf
inc
daa
ret
mov
mov
add
sub
xchg
xor
push
dec
push
repnz
mov
test
push
push
icebp
in
mov
lcall
lahf
jmp
stos
sub
mov
push
mov
inc
push
sbb
xlat
mov
xchg
sahf
movsb
and
movb
mov
mov
dec
iret
mov
enter
sahf
inc
lods
cli
daa
call
dec
xchg
lahf
dec
xchg
test
iret
loop
mov
out
lcall
dec
iret
shlb
sub
nop
into
inc
add
jp
inc
dec
pop
mov
push
mov
test
in
ss
add
nop
inc
pop
mov
cmp
add
adc
xchg
sub
add
and
mov
jno
pop
movsl
mov
mov
adcb
lods
push
lods
add
sub
xchg
pop
ret
iret
rolb
addb
sahf
xchg
push
push
test
add
sahf
dec
push
cmpsb
adc
cld
pop
add
lods
pop
mov
or
push
push
mov
jg
fistl
mov
jae
lret
into
mov
add
fbstp
xlat
mov
lods
lahf
inc
test
loope
scas
sahf
inc
cmpsl
test
or
dec
leave
mov
lds
or
cmpsl
push
aad
andl
mov
mov
add
enter
or
inc
mov
lods
add
add
cli
push
cltd
mov
enter
dec
lods
sub
iret
jnp
lret
xchg
add
or
pop
add
add
xchg
cmpsl
add
cld
iret
sbb
incl
insl
xor
scas
pop
mov
adc
cmp
sti
movsb
mov
mov
xlat
dec
stos
push
mov
pushf
ds
add
jnp
sbb
pushf
add
lahf
inc
mov
add
mov
cmc
inc
es
mov
mov
lock
test
ret
mov
dec
add
nop
loopne
xchg
jge
fidivl
add
call
scas
xor
lock
loope
into
pop
mov
sbb
jle
iret
xor
inc
and
push
inc
push
push
add
xlat
pop
sahf
add
iret
fstpt
stos
add
or
mov
mov
mov
push
enter
in
push
add
ret
sbb
mov
mov
out
addb
pushf
mov
and
and
inc
jl
push
add
lcall
enter
leave
cmc
mov
add
insl
inc
scas
bound
jne
cltd
mov
xorl
mov
popf
mov
test
and
pop
and
mov
test
inc
cmpsl
xor
das
aam
popaw
jg
shll
iret
jne
leave
push
xorl
movsl
dec
test
je
inc
iret
lahf
xchg
jmp
or
and
or
inc
or
lcall
mov
jp
add
inc
stos
cmpsb
push
pop
xchg
pusha
in
sbb
leave
mov
mov
push
add
pushf
inc
movsb
ds
test
shl
negb
pop
aad
inc
and
pop
xchg
sbb
ss
add
leave
and
adc
push
add
bound
dec
outsb
int
mov
adc
push
mov
mov
rol
or
push
push
fs
aaa
mov
push
add
or
cmpsb
iret
cmp
ret
jge
and
aad
xchg
or
or
in
mov
push
mov
loopne
push
dec
add
lcall
jle
movsl
push
mov
iret
ljmp
mov
pop
in
and
add
test
iret
inc
cs
dec
aad
cwtl
lods
iret
or
add
int
xchg
mov
mov
xor
and
mov
in
push
add
push
pusha
or
jp
enter
add
and
ds
mov
adc
add
dec
test
xor
add
stos
mov
mov
subl
mov
cli
cwtl
ds
jne
mov
pop
scas
pop
add
push
into
jg
test
lods
movsb
movsb
dec
mov
inc
lret
jg
into
outsb
movsb
add
mov
lcall
push
lods
test
add
ds
mov
inc
dec
aam
add
stos
mov
push
fs
pop
pop
add
enter
pushf
inc
add
xchg
lret
xor
pop
xchg
rcrl
jne
inc
pop
pop
dec
mov
sub
outsl
inc
dec
add
imul
push
insl
mov
fimuls
insl
gs
dec
push
inc
popf
sub
push
imul
cmpsb
push
add
lods
pop
pop
sbb
outsl
push
arpl
push
pop
pusha
test
push
add
pop
stos
imul
pop
pop
push
bound
ficompl
lret
push
outsl
push
push
mov
subl
dec
mov
mov
in
ret
call
xor
push
add
add
inc
pop
xchg
jbe
mov
sbb
call
add
mov
jg
test
imul
ret
ret
mov
iret
xchg
aaa
lds
lds
xor
nop
xchg
iret
and
inc
and
mov
lods
mov
outsb
mov
into
popf
lahf
pushf
inc
or
mov
movsl
push
or
loop
add
ljmp
scas
add
pop
push
lods
lahf
sbb
movsl
sbb
ret
mov
xchg
xchg
mov
insl
mov
push
ds
les
push
test
cmp
inc
jg
xor
inc
data16
es
add
push
dec
movsl
fmul
inc
scas
add
xorb
inc
inc
test
push
add
adc
lods
rorb
push
fs
sub
push
mov
cld
add
je
jle
mov
les
inc
mov
push
add
mov
mov
xchg
mov
mov
mov
push
mov
cltd
mov
push
mov
add
in
push
mov
mov
mov
mov
or
mov
sub
iret
mov
inc
sub
jg
ret
xchg
iret
and
xlat
add
mov
scas
iret
aad
nop
cs
into
push
fs
fs
mov
es
add
mov
mov
sbb
in
mov
cmp
sbb
add
mov
dec
iret
mov
add
repnz
shl
iret
pusha
xchg
popf
inc
pop
and
or
xchg
xchg
cltd
lahf
dec
mov
pop
lcall
inc
mov
add
add
popf
movsb
dec
into
inc
cmp
lcall
add
push
push
inc
mov
jnp
add
outsb
rclb
outsl
push
addl
add
mov
inc
ret
add
push
mov
in
ficoms
adc
add
inc
ret
pop
mov
xor
movsl
iret
lahf
mov
lahf
inc
mov
fcmovnbe
cmp
fiaddl
or
push
and
iret
cwtl
mov
dec
shlb
jb
cli
cli
sbb
fwait
mov
cmc
enter
add
xchg
popf
dec
and
outsb
inc
add
mov
lods
add
sub
xchg
mov
dec
adc
imul
pop
add
test
stos
push
pop
lahf
cmpsl
adc
sub
lahf
iret
sbb
lret
inc
dec
push
add
les
inc
push
iret
mov
rolb
dec
lahf
dec
add
gs
ret
mov
mov
add
and
or
inc
inc
cltd
lahf
xlat
adc
dec
mov
leave
jmp
dec
xlat
iret
leave
xchg
lahf
dec
mov
iret
lock
mov
jne
fwait
inc
iret
movsl
mov
movsb
dec
lret
inc
adc
mov
pop
mov
lods
push
add
nop
mov
adc
xchg
movsb
iret
pushf
fwait
inc
mov
xor
mov
inc
or
adc
aam
mov
rcrb
mov
inc
mov
push
jnp
cltd
mov
addr16
push
dec
outsb
add
scas
fwait
cwtl
movsb
iret
inc
lods
jmp
aas
mov
fcoms
lods
sbb
add
mov
iret
and
xor
popa
leave
push
adc
add
in
mov
nop
mov
subl
inc
outsl
lcall
sub
pop
jmp
pop
rcrb
add
fadds
iret
adc
gs
sbb
data16
push
add
inc
inc
loop
mov
xchg
xchg
pop
insb
inc
lods
add
enter
xchg
dec
ret
adc
xchg
cli
jg
inc
cmpsb
inc
inc
add
and
iret
xchg
add
inc
jo
fimull
xorl
pop
add
iret
pop
add
ljmp
jb
add
mov
or
orb
stos
lret
xchg
pop
lea
test
mov
add
ja
mov
stos
add
dec
inc
xchg
sahf
dec
push
add
insl
add
outsb
add
jb
adc
nop
mov
into
xchg
mov
xchg
add
add
iret
mov
pushf
inc
data16
pop
shrb
pop
xchg
out
add
sub
js
jne
je
mov
adc
lret
xchg
mov
adc
ljmp
mov
shlb
into
mov
test
or
add
xchg
iret
add
out
stos
mov
enter
sub
mov
mov
inc
js
mov
scas
fists
mov
iret
and
and
test
movsl
push
fwait
cli
imul
mov
dec
jg
iret
add
or
adc
mov
iret
lahf
outsl
push
xlat
adc
jp
inc
iret
add
pop
dec
nop
jne
adc
xor
test
add
stos
and
dec
dec
add
int
mov
and
dec
sahf
scas
arpl
pusha
pop
lahf
test
outsl
pop
add
lods
pop
pusha
jg
int3
orb
js
js
ljmp
jg
outsb
push
mov
scas
mov
dec
dec
mov
add
jg
mov
mov
push
dec
iret
stos
mov
dec
adc
jns
nop
xchg
iret
nop
and
mov
pop
add
in
mov
xor
add
mov
adc
rolb
jns
jbe
ret
sbb
push
pop
mov
cltd
nop
xor
inc
scas
mov
add
jle
cmpsl
push
lea
mov
xchg
sub
add
dec
ja
push
stos
test
loop
pushf
inc
cmc
add
push
jno
test
sbb
xchg
pop
repz
jo
mov
mov
add
jne
add
jbe
andb
pop
mov
mov
xlat
mov
pop
xor
sbb
lahf
sbb
sub
mov
iret
add
sbb
mov
lds
sub
les
mov
into
mov
mov
arpl
inc
aam
rcl
lahf
dec
push
xchg
mov
inc
and
mov
out
xchg
sbb
inc
stos
add
or
push
iret
inc
and
sub
lahf
test
inc
add
iret
sub
movsb
dec
mov
imul
cli
lahf
mov
push
adc
add
pop
iret
scas
mov
mov
cltd
mov
iret
lcall
cld
pop
fwait
ljmp
fucomi
cli
push
dec
cltd
xchg
leave
iret
adc
lods
loopne
mov
leave
movsb
cmpsb
push
mov
add
inc
sub
jmp
iret
add
and
mov
es
inc
iret
add
add
test
jl
call
mov
iret
xlat
nop
inc
mov
sub
pop
add
repnz
iret
add
idiv
xchg
lea
mov
roll
sahf
add
mov
lods
pop
mov
mov
xchg
ss
cmp
inc
mov
pop
mov
and
stos
add
jg
mov
jne
lcall
test
dec
adc
les
push
sahf
pop
add
test
push
jp
iret
mov
add
lea
add
lods
cwtl
mov
add
xor
dec
stos
inc
stos
or
or
add
mov
mov
add
pop
pop
mov
sub
jb
xchg
or
and
mov
je
ror
add
push
and
fwait
inc
mull
cmpsb
mov
add
inc
jne
dec
pop
iret
mov
cmc
adc
lahf
stos
add
push
andb
pop
movsl
les
es
xlat
jbe
inc
cld
or
pop
mov
jb
repz
test
jle
inc
mov
lods
ljmp
ret
mov
rol
add
sarb
mov
add
jno
movsb
mov
out
push
lcall
mov
mov
es
pop
add
add
dec
sub
iret
sub
pop
add
adc
nop
cmp
les
sahf
mov
add
push
enter
fidivrl
cmpsb
push
scas
faddl
push
xchg
mov
sub
iret
inc
shl
pop
xchg
mov
sub
stos
pop
add
mov
fs
loope
pop
mov
cltd
mov
movsb
dec
jns
movsb
test
pop
mov
loop
add
mov
mov
pop
iret
push
xlat
jmp
sub
add
mov
rcrb
xchg
sub
loopne
cs
test
pop
add
out
cmove
inc
ror
test
add
or
add
es
aas
mov
shrl
int3
push
repnz
mov
mov
lods
aad
xor
int
jb
cmp
mov
aad
lods
mov
pop
les
xchg
leave
loop
or
mov
push
sbb
movsl
cmpsb
push
mov
pushf
mov
xchg
je
enter
push
jae
lcall
push
jo
and
iret
jb
inc
xorl
or
data16
ljmp
lods
addb
bound
adc
enter
imul
pop
add
fwait
pop
add
lods
and
test
jne
push
dec
fnstcw
iret
aas
xchg
negb
add
dec
iret
lahf
lahf
dec
xchg
sarb
inc
decb
cmp
add
stc
mov
movsl
push
stc
add
test
fwait
and
out
mov
xchg
mov
xlat
scas
mov
dec
ret
jns
add
or
pop
add
mov
iret
pop
add
nop
dec
je
scas
mov
sbb
mov
les
out
pop
or
stos
pop
xchg
jge
mov
mov
stos
out
and
mov
inc
into
inc
sbb
inc
scas
stos
cs
xchg
adc
in
mov
iret
add
add
cmc
inc
lods
mov
add
or
xor
iret
inc
popf
movsl
push
lods
jg
sbb
push
jnp
inc
adc
push
pop
ret
mov
popa
jecxz
dec
mov
je
lods
iret
push
pushf
into
test
dec
pop
test
inc
popf
mov
dec
mov
pop
add
cmc
or
popf
dec
mov
add
dec
cmp
mov
add
mov
and
call
sahf
dec
mov
push
push
jp
lods
add
sbbl
mov
negb
scas
pop
add
pop
add
enter
scas
scas
mov
scas
mov
xchg
dec
jns
add
inc
push
pusha
sub
adc
data16
test
sub
adc
lcall
stos
pop
add
loopne
iret
lcall
in
adc
iret
cmp
pop
lahf
xchg
ss
jne
cmp
xchg
inc
sbb
pop
add
pop
ret
test
push
iret
movsb
xor
add
push
xorb
rol
add
ror
in
xchg
les
mov
dec
add
jno
mov
mov
cmp
aad
jl
pop
out
xor
repz
inc
mov
add
mov
in
inc
ret
mov
adc
sbb
cltd
mov
adc
out
mov
movsl
push
or
and
shll
iret
cmc
mov
mov
je
mov
dec
ds
mov
dec
iret
add
jmp
push
sbbb
mov
jg
add
mov
lret
addl
add
out
xor
iret
mov
cmp
aam
xor
mov
loop
mov
cmpsl
push
xorb
sbb
jmp
xor
inc
enter
mov
enter
test
pop
add
lods
roll
push
scas
inc
aaa
push
dec
cld
add
mov
sbbb
jnp
push
imul
push
popa
xchg
lea
ljmp
test
int
lcall
cmp
test
aad
pop
add
mov
inc
outsb
add
loop
mov
dec
repz
pop
data16
iret
mov
pop
push
xor
pop
pop
add
mov
mov
fwait
inc
iret
int
sbbl
cli
mov
mov
jl
jp
pop
add
xchg
imul
jo
push
in
pop
add
or
test
test
pop
add
cltd
movsl
push
pop
push
xorb
xor
inc
lahf
mov
adc
or
iret
lods
scas
adc
call
movsl
push
ret
sbb
dec
cwtl
in
in
sarb
pop
rol
push
pop
add
enter
cmc
add
enter
pop
add
repnz
dec
pop
subl
xchg
xchg
test
mov
inc
mov
sbb
sbb
scas
dec
ret
fwait
inc
ret
iret
jns
iret
inc
inc
mov
lods
push
xor
test
or
lahf
incl
push
jo
stos
dec
dec
xor
and
mov
ljmp
mov
lds
and
pop
push
pop
enter
roll
jg
call
popf
fwait
ds
cmpsb
sbb
popf
push
add
cmp
pusha
mov
adc
sub
lcall
mov
xlat
xchg
pushf
inc
mov
cwtl
push
inc
loopne
shlb
fwait
inc
fs
mov
flds
je
lahf
movsb
push
iret
add
push
mov
jne
add
iret
leave
lret
mov
inc
sahf
dec
leave
add
pop
add
pop
mov
mov
or
jmp
mov
lahf
inc
mov
add
test
mov
pusha
add
mov
and
rcrb
dec
mov
imul
pusha
add
into
sahf
sahf
inc
or
mov
xchg
and
add
mov
bound
iret
sub
clc
adc
pushf
inc
mov
add
mov
stos
pop
xchg
mov
or
xchg
mov
xchg
cwtl
movsb
test
xlat
add
dec
mov
cld
and
je
lahf
in
nop
and
test
pop
out
nop
push
cmpsl
add
inc
pop
movups
pushf
pop
push
and
dec
mov
pop
dec
add
adc
cmp
std
and
add
pushf
cmp
xchg
add
or
and
sar
ds
and
push
cmp
repz
cmpsb
movsl
push
into
and
mov
dec
cmp
mov
jp
iret
add
push
test
lret
in
jecxz
add
xchg
ret
pop
mov
data16
add
mov
xor
add
jb
leave
mov
cltd
test
xor
add
bound
enter
test
sbbb
inc
sbbb
call
add
pop
add
inc
sub
inc
jnp
daa
daa
xchg
mov
add
popf
jns
mov
lret
iret
add
mov
aam
ja
add
jne
inc
subb
mov
aas
add
sbb
in
fimull
add
aas
add
sahf
ja
fldl
add
push
mov
cmp
add
movsl
push
push
push
cmp
add
ret
push
add
ret
add
aad
cmc
mov
pusha
enter
push
or
pop
stos
aas
pop
add
cmp
pop
scas
add
mov
add
into
push
aad
inc
jg
push
push
mov
push
mov
stos
xor
dec
cmpsb
jmp
push
mov
add
enter
imul
imul
dec
sbbb
into
pop
xchg
add
add
inc
add
jle
and
rolb
cmp
outsl
add
cmp
mov
sub
lret
add
fnsave
lds
xchg
or
inc
pop
mov
iret
sti
add
sahf
ds
daa
mov
xor
add
ss
cmp
mov
lods
push
lahf
inc
push
iret
push
leave
filds
add
mov
insb
push
mov
xchg
and
nop
push
or
scas
add
iret
xchg
leave
imul
into
pusha
mov
xlat
lret
gs
mov
ret
and
add
lcall
test
inc
adc
iret
arpl
jb
xchg
popa
add
scas
ret
pop
stos
lods
pop
jb
int
iret
jge
jl
test
push
pop
and
and
test
xor
dec
xor
mov
push
inc
mov
mov
inc
inc
pop
mov
inc
mov
dec
sub
cmp
push
pop
scas
pop
cmp
push
mov
cmc
lahf
lahf
inc
enter
mov
cmp
pop
mov
add
mov
cmc
and
iret
data16
adc
mov
add
nop
movsb
inc
iret
ljmp
stos
pop
mov
in
scas
add
inc
and
sub
iret
outsl
dec
and
inc
and
add
mov
xchg
andb
mov
scas
adc
rclb
rolb
push
inc
stos
jl
cs
iret
cmp
les
inc
lahf
cltd
lods
pop
jo
enter
mov
movl
push
cwtl
mov
leave
iret
movsl
clc
xlat
iret
inc
mov
mov
jne
and
inc
iret
cmp
pop
mov
mov
pop
testb
stos
pop
xchg
insl
xlat
xor
arpl
jo
test
lahf
dec
iret
push
cmp
jp
or
xchg
or
outsb
push
push
test
aas
stc
adc
mov
mov
or
inc
outsl
inc
outsb
xchg
add
test
pushf
dec
add
mov
incb
movsl
dec
mov
dec
sub
in
roll
lods
add
in
mov
dec
adc
iret
mov
cwtl
jbe
xchg
leave
xchg
movsl
stos
mov
or
cmpl
inc
repz
loop
xchg
iret
mov
call
add
push
or
push
outsl
xor
ficoml
mov
scas
add
adc
iret
mov
inc
inc
mov
out
push
mov
je
mov
lcall
push
push
mov
dec
mov
inc
add
cmp
test
pushf
inc
mov
inc
repnz
add
push
mov
mov
mov
lock
das
enter
pop
mov
je
pop
cltd
add
popl
cmpsb
es
add
inc
xchg
mov
add
inc
or
mov
push
mov
add
mov
loopne
add
inc
add
imul
dec
or
cmp
push
push
subb
mov
mov
push
mov
push
dec
ret
cld
jne
aas
enter
bound
jge
add
scas
stos
pop
cwtl
iret
mov
push
iret
add
ljmp
mov
bound
inc
xchg
jmp
push
xor
adc
int
dec
adcb
iret
dec
adc
push
and
ret
add
fwait
iret
into
pop
dec
pusha
ror
movsb
lahf
dec
add
mov
mov
cli
pop
and
push
ret
je
jmp
iret
xchg
leave
xchg
xchg
popf
inc
xchg
lcall
scas
xchg
adc
pushf
inc
in
outsb
xchg
add
and
mov
fwait
dec
xlat
enter
movsb
push
lcall
hlt
adc
test
xor
popf
cmp
nop
xchg
adc
adc
stos
lahf
sbb
push
mov
add
sbb
lods
stos
sub
arpl
scas
nop
enter
cltd
jbe
mov
xchg
xchg
lcall
mov
add
shlb
iret
pop
mov
ficompl
cmpsb
push
xchg
test
loop
dec
movsl
stos
pop
and
into
test
inc
jno
or
ret
jns
fs
pop
jbe
add
fisttps
dec
daa
lock
mov
js
pop
call
or
lds
lss
andb
lds
xor
xor
jnp
xchg
add
iret
popf
sub
mov
push
ljmp
xchg
xor
cltd
iret
xchg
mov
mov
iret
arpl
inc
dec
nop
pop
cwtl
iret
lods
stc
sub
test
scas
jg
adc
mov
adc
dec
inc
orl
enter
xchg
mov
les
enter
bound
sbb
lods
es
pop
add
jecxz
push
and
enter
mulb
cwtl
loopne
mov
cmc
movsb
mov
cs
imul
hlt
and
iret
adc
in
mov
jbe
add
test
scas
les
test
xchg
lcall
cmpsb
stos
pop
mov
mov
jmp
cmp
ret
ret
gs
mov
andnps
imul
pushf
inc
cli
push
pop
mov
lcall
xchg
add
fwait
inc
mov
pop
iret
xchg
fwait
xor
ss
adcb
mov
gs
daa
jns
test
pop
xchg
mov
scas
inc
loope
mov
mov
inc
mov
lods
scas
bound
in
loopne
xchg
cmpsb
push
jne
dec
stos
mov
mov
pop
mov
andb
pop
mov
adc
jl
lahf
inc
pushf
add
nop
xchg
cmp
pop
mov
add
iret
push
push
std
or
cmpsl
pop
mov
add
and
mov
xchg
out
add
lahf
dec
lea
lods
ds
sub
test
rolb
xchg
iret
iret
gs
or
mov
push
fsubrs
lcall
add
push
imul
cltd
jl
cltd
std
into
movsb
movsb
push
mov
lcall
insb
iret
mov
test
mov
and
mov
add
les
add
sub
cli
lods
pop
jle
inc
iret
cmp
mov
add
pushf
inc
fistps
fldcw
popl
dec
pop
mov
xchg
stos
loop
iret
enter
mov
in
mov
cmc
mov
iret
ds
push
jae
enter
arpl
cmpsb
xchg
or
iret
sub
and
stos
pop
iret
push
adc
data16
adc
xchg
pop
data16
and
xchg
movsb
push
lcall
jnp
push
dec
inc
pop
add
push
dec
sahf
ja
inc
pop
dec
out
dec
add
adc
and
jno
pop
add
divb
dec
dec
jmp
adc
dec
pusha
fildll
leave
leave
arpl
adc
sbb
dec
in
rcpps
sahf
rorb
fucomip
add
push
pop
fildll
orl
lahf
dec
enter
cmp
aaa
xchg
adc
push
shlb
scas
xchg
jecxz
aas
test
ret
jp
jp
test
pop
iret
xchg
icebp
movsl
xlat
leave
xchg
xchg
fwait
inc
mov
into
sbb
cmp
inc
pop
push
movsb
iret
adc
stos
scas
bound
iret
leave
and
add
lahf
inc
inc
enter
pushf
jl
enter
mov
mov
test
jb
jne
fwait
ds
xchg
xchg
xchg
fisttps
add
test
mov
lcall
lods
jmp
movsl
movsb
test
aam
add
and
jno
inc
mov
mov
mov
and
dec
lahf
adc
mov
xor
call
xchg
push
aam
mov
lahf
nop
shl
mov
js
sahf
test
lahf
xchg
stc
mov
or
in
mov
dec
mov
xchg
ds
mov
pop
add
xor
dec
pop
das
mov
enter
jle
leave
iret
mov
fnstenv
add
jg
adc
movsb
mov
xchg
and
fs
addr16
cwtl
mov
scas
xlat
xchg
mov
iret
push
dec
sub
push
iret
xchg
mov
pop
iret
push
and
xchg
cltd
cmp
adc
dec
mov
push
pop
testb
mov
adc
mov
push
xchg
xchg
push
xor
iret
add
mov
cmp
popf
inc
xor
mov
outsl
add
movsb
cmp
mov
addr16
adc
jmp
xor
cmpb
cwtl
sub
xor
call
adc
jp
leave
mov
cltd
test
iret
add
icebp
pop
jnp
test
dec
in
push
sub
add
ss
les
enter
ror
xchg
lret
clc
jb
xchg
adc
scas
push
mov
lods
out
cs
shll
scas
pop
xchg
cmpsb
leave
movsb
pushf
inc
mov
stos
mov
scas
cmpsl
push
pop
stos
lret
or
iret
leave
and
add
pop
xchg
inc
test
enter
scas
iret
insb
test
decb
popa
iret
pop
ljmp
inc
jno
leave
call
adc
sahf
inc
mov
sub
mov
jmp
mov
pop
enter
add
jmp
leave
xchg
lods
test
inc
mov
pop
mov
xchg
cwtl
xor
iret
push
int
pop
mov
in
push
push
push
jb
mov
and
push
ret
idiv
test
movsl
push
mov
pop
add
in
cmp
mov
dec
pop
es
fcompl
mov
stos
bound
mov
arpl
test
push
outsb
add
test
cmp
xchg
xchg
test
and
add
mov
cmpsl
cmpsb
movsl
aaa
fbstp
cmpsl
movsb
cmpsl
data16
mov
in
add
es
xchg
sahf
push
xor
jae
pushf
fwait
addr16
and
push
cltd
and
xor
test
and
bound
and
stos
imul
lods
inc
push
cltd
in
lods
imul
cmp
insl
mov
xchg
xchg
dec
scas
mov
repnz
mov
outsb
push
nop
jb
mov
je
mov
jne
pop
fldcw
test
fdivr
lret
mov
xorb
jl
mov
jg
jge
mov
mov
mov
jnp
addb
cld
test
xchg
ja
mov
mov
outsl
pop
mov
mov
cld
pop
test
jb
ret
ret
nop
jno
xchg
jo
xchg
jae
stc
mov
outsb
lds
xchg
insl
insb
lds
lcall
fwait
imul
stc
dec
repz
lret
mov
mov
mov
int
sti
and
iret
test
or
lret
lahf
inc
push
outsb
push
or
dec
iret
fisubrs
mov
adc
dec
cmp
out
mov
mov
mov
mov
je
loopne
mov
dec
lcall
data16
pop
movsb
jns
scas
stos
scas
stos
test
mov
or
je
movsb
test
and
imul
mov
imul
sub
add
sub
pushf
push
xchg
or
pop
fwait
add
mov
inc
mov
xchg
xchg
stos
push
nop
or
xchg
xchg
lods
jns
addr16
insb
xchg
xchg
lods
add
nop
or
mov
pop
xchg
scas
nop
push
test
jo
mov
jno
xchg
push
inc
sahf
jmp
mov
mov
mov
mov
mov
xor
push
xchg
mov
test
mov
xorl
mov
mov
jne
pop
iret
cmpb
jle
test
mov
add
jnp
add
mov
add
mov
mov
iret
xor
mov
ja
lea
mov
mov
xchg
aas
int
cmc
je
jae
add
xchg
jb
xchg
data16
cmp
xchg
cwtl
jo
pop
fwait
xchg
outsl
cltd
lcall
pop
int
jl
pushf
leave
popf
insl
lret
imul
mov
int3
mov
mov
movsl
addr16
imul
daa
int
mov
test
pop
into
movsl
pop
iret
cmpsb
iret
int3
mov
add
rol
jb
inc
sahf
mov
add
in
mov
mov
mov
mov
xchg
out
imul
xor
xor
mov
xchg
arpl
out
push
lods
imul
lods
clc
stos
add
cmp
test
insb
cmpsl
adc
fisubrs
cmpsb
movsl
movsb
mov
mov
outsb
dec
insl
and
mov
insl
pop
sbb
pop
popf
add
lret
lcall
cwtl
sbbl
scas
or
cmp
xchg
scas
xchg
jo
dec
gs
jno
xchg
xchg
mov
jns
sbb
xchg
nop
inc
ss
inc
addb
mov
sub
int
mov
js
mov
jb
ficompl
xchg
mov
mov
xor
mov
jg
mov
xlat
dec
jae
add
test
jbe
test
test
stos
cmpb
fisubs
jle
jge
add
jns
cld
imul
stos
push
lcall
ja
rcll
ja
xchg
jne
mov
cltd
je
je
add
stos
jb
jno
popf
leave
xor
mov
add
mov
add
stos
add
stos
add
sahf
daa
iret
cmc
xor
int
insb
ds
cmpsb
cmc
pop
xchg
push
add
xchg
out
into
sahf
add
pop
pop
enter
fdivrs
les
push
imul
jns
and
sarb
mov
inc
cs
mov
xchg
xchg
insl
mov
mov
mov
je
in
outsb
mov
mov
add
adc
fs
pop
lods
lods
scas
jo
lods
xor
cltd
stos
test
xor
jb
jno
sbb
rcll
movsl
add
xor
dec
xor
and
xchg
xchg
mov
scas
mov
lcall
cwtl
mov
mov
jne
mov
sahf
xchg
dec
dec
mov
ja
ss
xchg
inc
mov
js
xchg
cld
pop
xchg
inc
mov
xchg
mov
lret
mov
nop
add
xlat
jns
xchg
mov
mov
cmp
mov
pop
iret
decb
mov
mov
fdivrs
mov
aaa
pop
test
mov
pop
mov
mov
add
xor
stos
add
jge
pop
dec
jae
add
movsb
add
lds
mov
cltd
jp
mov
add
xchg
sahf
jbe
lahf
sahf
jbe
add
jne
stos
add
pop
lret
add
sahf
add
int
cwtl
and
jo
test
pop
rorb
outsb
shrl
shrl
std
jecxz
ffree
iret
aam
xchg
mov
add
inc
les
fld
push
add
jo
outsb
cs
mov
mov
jb
test
mov
add
push
add
mov
enter
mov
jae
mov
push
cmp
mov
mov
mov
lret
adc
scas
scas
lods
mov
pop
mov
jl
je
stos
add
insl
and
add
cmpsl
cmpsb
cs
sbb
add
and
mov
mov
cwtl
mov
and
mov
in
add
jns
or
cltd
enter
xor
movsl
repnz
mov
mov
mov
jns
imul
xchg
imul
xlat
pusha
scas
out
xchg
addb
nop
popl
movsb
stc
cld
xor
lea
mov
jle
cmpsl
mov
mov
sahf
add
sahf
add
xchg
xlat
jae
rcrl
xchg
repnz
test
xchg
add
iret
adc
add
sbbl
movsb
add
mov
lret
jl
iret
je
cmp
add
mov
cmpsb
js
int3
mov
ja
xchg
add
xlat
sahf
jne
rcl
stos
stos
je
lret
lods
lods
jae
jb
in
repz
add
aam
aas
scas
setne
leave
xchg
enter
push
cmp
mov
gs
push
jb
dec
jbe
sarb
mov
mov
stc
mov
mov
mov
enter
mov
xor
mov
repnz
adc
mov
or
add
add
jnp
stos
mov
imul
pop
test
xchg
jnp
test
cmpsl
xor
adc
movsl
scas
in
or
dec
mov
xchg
cmp
jle
dec
push
inc
sub
push
sahf
xchg
dec
pushf
sbbb
mov
jns
cs
cwtl
mov
rcr
xor
jp
mov
iret
cmc
sbb
xchg
xchg
cmpsl
stc
xor
mov
xor
cwtl
popl
ret
cmp
ret
xchg
lea
out
xchg
mov
imul
mov
enter
lcall
jne
xchg
add
jb
jmp
addl
sahf
add
xchg
add
pop
int
cmpb
cmpsl
jle
xchg
fwait
cmpsl
jns
test
mov
add
xlat
in
jp
addb
repz
mov
mov
sahf
nop
inc
ds
jbe
ffreep
nop
fnstcw
iret
lret
mov
add
das
enter
jp
push
in
repnz
les
push
inc
mov
jb
leave
rol
jnp
mov
mov
jl
cs
xchg
lret
mov
imul
mov
mov
mov
jge
mov
outsl
jns
inc
mov
mov
adc
add
cltd
mov
scas
mov
scas
and
subb
stos
stos
mov
xchg
sbb
pop
cmpsl
cmpsb
and
xor
bound
and
repnz
out
pop
mov
dec
in
jns
sahf
mov
cmp
popf
mov
inc
sahf
sub
mov
iret
sub
mov
cmp
xchg
xchg
add
rorl
ret
sahf
jmp
adc
add
xchg
add
inc
lcall
add
sub
ja
xchg
add
lcall
mov
pushf
popf
mov
add
mov
lahf
mov
jae
jp
sahf
add
insb
xlat
jae
xchg
iret
add
iret
addr16
adc
addr16
stos
addl
shrl
jg
aam
mov
out
scas
int
add
mov
repz
mov
jnp
mov
adc
or
mov
loopne
lahf
shll
xchg
fldcw
rcl
ret
mov
mov
cltd
out
cltd
cs
add
and
mov
jae
mov
ret
jg
sarb
mov
add
and
mov
ss
enter
mov
mov
xchg
dec
mov
mov
and
adc
scas
lods
lods
int3
push
jb
stos
stos
mov
test
test
add
push
in
dec
cmpsb
mov
inc
movsl
mov
mov
dec
outsb
cs
xchg
cmp
push
cmp
lahf
rcrb
sbbb
scas
rcrl
xchg
lcall
add
xchg
cwtl
les
xchg
xchg
xchg
cwtl
cltd
xchg
out
cmpsl
mov
enter
mov
sahf
xchg
lret
nop
lret
lahf
mov
sahf
add
lea
sahf
add
sahf
add
xor
stos
add
mov
pop
sahf
add
xchg
mov
stos
add
stos
xchg
xchg
iret
dec
jae
add
test
mov
aam
mov
mov
aad
adcb
mov
dec
in
xchg
mov
add
mov
jg
fadd
lahf
fadd
ret
dec
push
pop
cs
mov
int3
mov
add
in
jb
int3
mov
insb
lret
leave
mov
sbb
mov
xchg
dec
mov
cmp
test
ret
rol
je
dec
mov
xchg
xor
sarb
xchg
xchg
lcall
jb
mov
mov
nop
or
mov
and
add
sub
lods
inc
enter
mov
stos
stos
nop
addr16
scas
mov
daa
cmpsl
test
cmpsl
push
add
sub
cmp
movsl
shlb
je
nop
mov
dec
mov
xchg
ret
pop
xchg
xor
les
lds
pushf
pop
aas
xlat
jae
fwait
xchg
add
int
sbb
add
leave
pushf
cwtl
cwtl
add
jne
mov
lret
xchg
xlat
xor
sahf
add
xchg
repz
xor
into
add
jmp
and
xchg
sahf
add
cmp
pushf
sahf
add
rcrl
sahf
add
scas
jmp
in
mov
movsl
mov
xchg
add
xchg
mov
mov
xlat
mov
xor
and
daa
stc
in
mov
test
xlat
jmp
xchg
mov
iret
mov
dec
fdivrp
add
xor
shlb
into
inc
mov
int3
rolb
lret
mov
xchg
or
enter
mov
mov
xor
cs
ret
xchg
inc
sub
mov
xchg
out
mov
jb
mov
mov
mov
mov
fs
mov
add
and
xor
mov
scas
scas
xchg
and
and
mov
and
shrb
pop
test
fs
dec
nop
cmpsl
out
xor
add
dec
ds
ret
les
sbb
lds
int3
cmc
add
xchg
lahf
xchg
into
add
pushf
popf
enter
lret
lahf
pushf
lret
fwait
lret
lret
mov
cltd
xchg
add
stc
pop
xor
add
push
mov
xchg
into
cmpsl
test
sahf
xchg
add
cmp
sahf
add
mov
lods
xchg
stos
add
sahf
je
sahf
lret
add
scas
in
int
mov
aad
scas
enter
add
push
in
add
mov
xlat
mov
fs
nop
mov
fidivrl
test
mov
int3
pop
bound
ret
lcall
mov
mov
fdivrl
lds
movsb
jb
iret
ret
into
int
push
nop
dec
int3
lret
lret
pop
xor
and
enter
mov
mov
mov
mov
jns
rclb
add
xchg
mov
sarb
mov
cmp
addl
mov
add
mov
iret
cmpsb
nop
mov
addb
mov
xchg
or
lret
xchg
xchg
scas
nop
lods
sarl
sub
enter
xchg
xor
ds
mov
enter
mov
rep
lds
cltd
movsb
xchg
mov
mov
lret
addr16
lahf
jb
xor
lahf
add
iret
xor
popf
pushf
sahf
add
mov
movsl
into
cmpsb
fwait
iret
cmpsb
lcall
pop
shrb
scas
dec
movsl
jmp
xchg
add
sub
daa
out
xchg
shrl
aam
repnz
into
je
xchg
add
push
movsl
jb
nop
stos
nop
sahf
sub
cmc
add
sahf
add
sbb
push
mov
jne
mov
sahf
add
aas
in
cwtl
add
ret
leave
mov
aad
sbb
jmp
cmpsb
mov
xor
in
cmp
ret
inc
fidivrl
in
add
add
call
out
int
out
and
int
and
in
jecxz
xchg
inc
repnz
jecxz
fbld
add
adc
ficoms
jae
fstl
rcr
fmull
or
shll
out
stc
rcr
iret
and
and
shr
aam
and
aad
xchg
inc
push
jns
jmp
dec
gs
aam
fldpi
gs
inc
push
fcmovbe
fcmovne
and
dec
in
fst
cmp
xor
in
in
fists
loopne
pop
inc
inc
mov
int
xlat
jg
xchg
jecxz
jbe
out
stos
into
mov
jge
subl
adc
lea
ret
iret
dec
mov
jg
mov
mull
int
mov
mov
test
ret
xor
xor
jae
idiv
pushl
add
jmp
mov
shrb
mov
cs
cs
cs
adc
movsl
fcomi
and
fildll
outsl
push
lret
adc
mov
mov
push
mov
std
scas
shl
mov
mov
xor
mov
xchg
in
mov
ljmp
mov
lret
int
lret
mov
mov
mov
mov
mov
jae
pop
cld
int
mov
rcl
mov
aaa
and
out
mov
mov
mov
test
add
enter
ret
xlat
out
shlb
rcl
ret
shll
popaw
xor
aaa
cmp
xor
arpl
push
arpl
dec
fcomi
xor
xor
xor
popa
or
push
leave
dec
outsb
sbb
add
mov
ds
rorl
movsb
xor
mov
sbb
mov
fmulp
in
mov
ret
or
mov
xor
adc
mov
dec
or
mov
add
xchg
cmp
ret
mov
sbb
mov
push
jb
jns
mov
pop
jbe
in
push
fs
xchg
mov
push
cmc
insb
outsl
addr16
repnz
arpl
gs
mov
xor
loopne
mov
pusha
sti
fs
jle,pn
insb
mov
ljmp
outsl
data16
inc
or
fnstsw
insb
leave
or
and
adc
lods
xor
gs
jbe
xor
insb
fsts
mov
enter
mov
jo
jo
and
sub
pop
xor
or
mov
das
cs
imul
pusha
mov
sbb
test
andb
or
or
and
push
mov
push
inc
sti
sbb
mov
jnp
sbb
push
pop
add
inc
adc
xchg
popf
or
jo
xorb
fdivrs
lds
loope
sbbl
cmpl
iret
aas
decl
add
jge
mov
test
xlat
inc
pushf
jge
lahf
mov
push
mov
pop
aas
test
imul
lret
xchg
orb
jle
mov
and
xchg
leave
scas
add
repz
push
inc
adc
mov
mov
inc
adc
jmp
add
adc
or
aam
push
add
or
pop
add
add
add
dec
fisttps
push
inc
fcmovnb
sub
or
pop
inc
and
push
mov
add
outsl
dec
enter
jnp
inc
outsb
cmovle
push
add
push
loopne
loop
div
pmaxsw
stos
add
movsl
add
sub
or
ljmp
xor
mov
push
cmpl
pusha
dec
and
inc
add
addb
pop
push
xor
insb
jmp
add
xchg
sub
jmp
mov
push
mov
nop
punpcklbw
or
add
xor
jnp
repz
ds
stc
int3
inc
pop
adc
push
mov
movsb
xchg
adc
out
sbb
add
fs
idivl
cmc
fs
ja
push
sbb
pop
adc
add
dec
pop
gs
mov
sarb
stos
sub
xorb
mov
call
xchg
or
mov
loopne
stc
adcl
popf
lds
mov
pop
andb
lea
fs
dec
ja
insl
mov
jns
movsb
rcr
nop
mov
insb
push
and
inc
and
nop
add
jp
mov
push
sbb
cmpb
inc
pop
sarl
xor
orb
fldl
jno
jns
mov
lahf
xor
add
fiadds
mull
jmp
aaa
ljmp
sub
cmp
clc
cltd
push
lea
int
cmp
inc
call
sbb
pop
and
fstl
popf
rcrb
sbb
lods
pop
std
stos
add
add
lods
and
or
and
pop
inc
mov
ds
cld
in
adc
int3
pop
sbb
mov
cld
cwtl
dec
leave
or
outsl
add
xor
add
test
xor
nop
or
xchg
adc
and
in
mov
mov
lods
ds
sub
orb
jb
cltd
nop
pop
dec
addr16
cmp
and
adc
or
dec
mov
sbb
mov
push
and
xor
xlat
adcl
inc
add
push
and
jno
jbe,pn
fistpl
adc
cmp
fs
sub
jne
xchg
mov
adc
mov
sub
hlt
lea
pop
test
xchg
adc
aad
test
leave
clc
iret
jne
imul
xchg
jne
sbb
dec
or
lret
imul
add
cmpsb
popa
ds
push
sysret
shrl
and
lock
mov
add
inc
cmpsb
repz
and
std
push
aas
cmpsl
je
adc
jno
xchg
and
jnp
in
test
outsl
pop
je
inc
lcall
and
pop
fmull
rclb
hlt
pop
loopne
xor
stc
insl
clc
jae
pop
call
mov
cld
nop
inc
jb
int
mov
xchg
xor
js
call
xchg
sbb
jge
mov
mov
jne
leave
xchg
xor
mov
inc
das
sbb
imul
rolb
mov
lods
pop
ds
xchg
icebp
jb
fidivs
or
dec
or
cmp
mov
aaa
leave
xchg
in
cmc
icebp
sub
ds
in
xchg
ror
icebp
movsl
sti
js
cs
adc
test
dec
out
adc
adc
testl
imul
insb
bound
nop
lock
in
sbb
sbb
icebp
int3
jno
fdivr
mov
inc
repnz
lods
jno
jno
mov
jmp
arpl
cld
push
sbbb
shr
lds
push
loope
lea
mov
daa
pop
lahf
mul
fcomps
adc
or
pop
dec
jne
and
inc
inc
mov
sti
hlt
rcll
mov
lea
jo
pop
cwtl
add
xor
sahf
or
loopne
mov
add
pop
push
add
enter
movsb
rclb
stc
or
or
inc
mov
ret
rep
in
and
push
mov
dec
add
add
add
and
cli
cmc
push
movl
lret
cmp
xorb
cli
or
push
sub
add
lret
add
pusha
push
movsl
repnz
or
inc
and
jge
sub
mov
andb
sbb
cmp
add
imul
xor
and
test
ds
xor
or
jge
es
lea
jge
fwait
lcall
pop
fwait
xchg
je
insl
sub
add
jmp
add
cmp
add
sbb
adcl
cmp
call
add
cmc
insb
mov
je
or
or
cmpsl
subl
in
inc
push
call
popa
add
pop
cmp
ret
lea
mov
and
outsl
insb
pop
filds
cmp
imul
inc
js
mov
jmp
sbb
aam
add
push
mov
add
push
icebp
adc
pop
sub
push
push
push
shl
lret
push
call
add
pop
adc
or
data16
ret
push
and
xor
xchg
push
xor
pop
mov
sarl
pushf
call
mov
jmp
or
and
jmp
mov
and
fistpl
popf
imul
and
xchg
inc
fiaddl
cmpsb
in
jmp
imul
and
popf
cmp
and
and
cmpl
xor
fildll
mov
mov
daa
dec
push
xor
xchg
xor
xchg
addr16
lock
inc
pop
and
or
scas
sbb
jb
adc
or
inc
ss
addr16
sub
sbb
xchg
pushf
scas
adc
or
sub
add
or
cmpb
scas
adc
insl
arpl
mov
int3
push
mov
sbb
inc
mov
jbe
dec
adc
push
out
pop
lea
jmp
fwait
push
add
call
pop
pop
push
mov
cld
mov
xchg
and
mov
push
in
gs
jno
cmp
pop
and
mov
out
sub
pop
dec
roll
xor
push
sti
dec
mov
into
push
nop
xchg
out
aaa
gs
cmp
push
add
in
scas
fs
andl
jecxz
sub
mov
mov
into
test
xchg
inc
adc
arpl
add
sub
repnz
arpl
adc
inc
inc
fsubrp
adcb
insl
ret
dec
arpl
mov
jno
loopne
xchg
clc
push
clc
movsl
shll
pop
inc
or
dec
or
bound
nop
add
or
lret
rcl
dec
or
mov
jecxz
in
xchg
pop
jg
pop
in
and
hlt
cmp
xor
jns
jmp
bound
mov
adc
sarl
cld
push
and
popa
push
xchg
nop
iret
cmp
in
push
xor
mov
xchg
sti
cltd
das
scas
nop
scas
mov
popa
xchg
ljmp
jae
cmp
jno
xchg
mov
js
pusha
repz
call
pusha
shlb
call
xchg
or
cld
bound
pop
pushf
ss
or
or
mov
adc
popf
mov
out
loopne
cmp
adc
adc
jmp
mov
in
scas
jns
hlt
push
or
test
lock
mov
clc
jae
rcrl
pusha
xor
xchg
or
jnp
dec
jns
enter
pop
cmpsl
data16
repnz
dec
adc
pop
and
mov
dec
dec
and
call
jns
dec
mov
js
arpl
std
mov
pop
inc
or
rcll
cmp
or
enter
movsb
sahf
push
xor
adc
jge
sbb
mov
pop
jbe
xor
hlt
insb
mov
les
add
in
jmp
bound
xor
mov
jae
jecxz
inc
adcb
ds
scas
add
rcll
std
jo
nop
sub
pop
cmpl
or
sub
inc
push
or
add
dec
cmp
xchg
lahf
mov
or
mov
fistpl
das
mov
data16
push
in
cmp
in
cmpb
ja
xchg
leave
sub
adc
jb
sub
mov
or
jmp
js
cmpsl
inc
push
jl
pop
enter
orb
xchg
jl
pushf
fcom
and
mov
and
xor
es
inc
adc
or
mov
std
mov
push
aaa
sti
mov
lret
dec
sub
jb
orb
cld
test
mov
enter
lahf
pop
loope
cmp
sbb
mov
arpl
dec
pop
mov
sbb
lods
stos
test
pop
pop
in
add
mov
leave
jo
jne
sti
and
xchg
cmp
xchg
push
sub
push
pop
inc
push
in
or
cmp
xor
enter
cwtl
or
and
adcl
mov
sub
jae
stc
pushf
sub
inc
push
xor
dec
push
movsb
inc
push
enter
sub
pushf
xchg
pop
mov
icebp
push
outsl
add
push
movsb
cmpsl
pop
pushf
xchg
mov
sti
call
scas
adc
pop
out
int
push
sub
out
add
rorb
das
movsl
cmp
push
clc
push
cwtl
addl
jns
mov
push
cs
shl
sub
add
push
addl
pop
in
push
out
rclb
mov
inc
sub
jb
push
adc
push
xchg
jnp
ret
int3
push
xchg
lods
mov
pop
push
andl
shlb
jns
mov
and
inc
ds
push
xchg
aad
pushl
pop
or
and
lods
aad
push
push
sbb
add
addb
and
xchg
add
icebp
push
push
enter
popa
push
dec
push
popf
shlb
cmp
inc
mov
add
sbbl
push
jns
add
fcmovnu
inc
push
sbbb
cmp
and
cli
dec
stc
je
xchg
dec
ds
repnz
xchg
sbb
in
mov
dec
les
xor
test
lea
mov
inc
es
dec
jb
repnz
test
inc
dec
push
ret
es
icebp
push
mov
jp
shl
mov
cmp
mov
mov
sbb
and
cltd
dec
mov
push
and
inc
jle
les
lds
and
adc
mov
and
fs
lods
push
jns
out
cwtl
shlb
adc
repnz
ficoml
xlat
dec
mov
xor
les
test
xor
dec
pop
pop
rclb
enter
gs
gs
hlt
mov
pop
and
cmp
add
pop
add
insl
movsb
in
push
insb
mov
dec
lret
out
mov
ret
mov
stos
ret
ret
popf
daa
add
pop
xchg
or
push
inc
test
imul
outsb
sub
or
in
and
sub
add
je
jecxz
dec
imul
jo
enter
jo
mov
xlat
xor
fsts
xchg
aaa
pop
insl
inc
and
dec
sbb
adc
or
sub
and
out
jno
nop
push
enter
loope
inc
push
leave
outsb
dec
pop
dec
jge
lds
xchg
pop
cmp
cmp
roll
leave
add
scas
inc
rolb
lea
sub
and
leave
push
adc
sbb
enter
call
or
fwait
sbb
call
mov
inc
pop
adc
inc
insl
mov
push
fs
dec
notl
adc
lock
and
inc
ror
xlat
js
idivb
xor
mov
or
sbb
inc
lahf
mov
jb
inc
outsb
hlt
push
add
sbb
lock
es
jno
sahf
jno
out
inc
fmul
add
inc
cwtl
and
cmpsl
mov
sbb
lods
in
inc
mov
sub
fcmove
test
cmpsl
push
cmpsl
fwait
sbb
inc
dec
cmp
movsl
shll
popf
enter
fildl
call
add
push
jb
push
inc
cmp
push
pop
jb
clc
add
inc
hlt
add
rcrb
lea
mov
jl
sbb
push
jg
mov
push
cmp
ret
fucomi
rclb
in
dec
scas
xlat
adc
inc
push
or
les
inc
inc
insl
sbb
hlt
hlt
inc
xchg
pushf
nop
mov
inc
clc
xchg
sbb
iret
mov
inc
mov
xchg
inc
insb
inc
xor
inc
dec
adc
mov
repnz
pusha
sub
inc
pop
test
lret
out
lahf
test
sub
and
push
mov
mov
lcall
xor
and
push
push
in
inc
xlat
inc
test
and
jmp
push
inc
lock
and
idivl
xchg
pop
iret
ljmp
sarb
enter
sbb
and
jns
call
call
leave
and
stos
gs
aas
in
mov
push
test
inc
fwait
mov
imul
bound
pop
leave
inc
pop
insl
fsub
add
ss
ret
popa
xchg
movsb
mov
fsts
ds
and
lret
call
mov
js
mov
xchg
jb
xor
fsub
fadd
mov
push
seto
sub
adc
sub
test
xlat
or
shll
inc
push
sbb
cmp
mov
and
fistps
push
inc
adc
repnz
repnz
pop
or
sub
inc
pop
popa
mov
sbb
insl
mov
shl
xorb
xor
popa
xchg
and
bswap
add
adc
orb
dec
inc
jae
cmpsb
cmp
mov
je
repnz
popf
cmp
sbb
mov
fs
or
js
sbb
dec
adc
rolb
stos
inc
mov
pop
popf
out
xor
or
cmp
or
mov
dec
jnp
nop
lret
in
aam
lcall
sti
mov
sub
add
daa
cmp
jae
xchg
jae
in
mov
subl
mov
call
and
fiaddl
or
cmpsb
inc
sbb
sahf
mov
repnz
aam
cli
cmp
and
mov
push
xchg
or
rolb
or
fiaddl
cli
sub
mov
add
fsubr
lds
pop
ja
add
loopne
cmp
gs
call
test
cld
add
fsubl
adc
test
mov
push
jmp
orb
lods
xor
sbb
cmp
orb
push
test
dec
mov
push
mov
or
addr16
or
jmp
loopne
mov
add
mov
or
cs
fimull
mov
cmp
andl
jne
cmp
js
ja
cmp
dec
lods
cmp
mov
push
and
lock
push
hlt
mov
sub
mov
ret
dec
xor
mov
xor
sbb
push
dec
lods
mov
aaa
fiaddl
and
adc
xchg
xor
xor
mov
lea
in
movsb
mov
adc
rolb
jns
mov
ss
rolb
fildll
lock
inc
sbb
mov
shrb
mov
mov
jno
jo
and
test
fisubs
ss
loopne
es
dec
xor
mov
dec
daa
pop
sbb
std
jmp
xor
xchg
add
imul
sahf
mov
mov
or
mov
push
mov
inc
repnz
shll
dec
xor
xor
xor
in
in
xor
jmp
jbe
push
jmp
mov
mov
in
pop
inc
inc
xorl
mov
mov
rolb
xlat
decl
imul
sbb
pushf
pop
ja
xor
push
fs
repnz
mov
mov
lock
mov
or
sti
jge
leave
mov
push
xchg
mov
inc
mov
rolb
je
pusha
push
insb
push
in
xor
in
sub
inc
push
leave
inc
rcll
daa
loope
or
das
xor
mov
fs
adc
ja
push
push
add
cmp
jnp
xchg
add
enter
xor
xor
xchg
sbbl
test
sub
test
add
rclb
insl
mov
mov
enter
insl
inc
out
dec
mov
jno
les
imul
stc
or
loopne
xchg
xchg
and
xor
jmp
mov
sbbb
scas
addl
imul
mov
lods
or
mov
xor
sub
inc
xor
xor
mov
inc
js
test
push
mov
daa
inc
sbb
pop
pop
addb
pusha
sbb
das
out
sub
adc
orb
mov
sub
mov
shr
dec
push
lods
mov
jns
dec
mov
mov
mov
or
mov
or
inc
mov
inc
mov
aam
push
push
jp
mov
dec
mov
lea
insl
mov
mov
mov
pop
mov
in
fiaddl
mov
mov
shlb
test
mov
xchg
pop
test
jb
cmp
adc
test
into
sub
or
mov
jecxz
push
push
lcall
into
push
je
sbb
dec
shrb
rorb
inc
sbb
fiaddl
or
mov
jns
adc
in
iret
sub
sub
pop
and
and
xor
mov
sbb
fldl
inc
out
inc
call
insl
add
fiaddl
jle
adc
flds
dec
pop
sub
mov
insl
inc
pop
mov
cmc
sub
add
insl
inc
add
add
xor
jnp
add
push
or
nop
das
hlt
js
mov
insl
add
test
insl
inc
lret
sbb
or
es
loop
test
and
subl
sub
lcall
add
leave
add
insl
inc
ja
mov
jae
inc
fs
and
mov
or
addl
daa
or
ja
lret
xchg
mov
add
inc
or
inc
andl
cmpsl
or
mov
scas
mov
ss
push
or
in
xor
add
or
leave
push
pop
shrb
test
loope,pn
push
pusha
test
adc
inc
mov
mov
and
push
push
xor
lahf
xor
and
mov
add
add
and
or
jne
dec
ja
add
outsb
addb
mov
popf
imul
mov
inc
xchg
sti
sub
nop
pop
pop
hlt
add
or
mov
inc
add
cs
and
push
add
mov
fiaddl
cmp
add
out
and
ljmp
add
add
dec
lods
and
xchg
xchg
or
add
push
pop
jo
mov
sub
das
sbb
and
popf
mov
xchg
cmp
and
cld
mov
mov
add
lods
mov
test
or
pop
shlb
dec
mov
sbb
hlt
push
fs
and
imul
ja
adcl
and
push
add
test
mov
sbb
test
insb
pop
jg
sub
sub
xorl
ficomps
leave
pop
test
cmp
nop
lret
mov
cmp
mov
jg
lret
test
cmp
push
enter
push
jmp
cmp
pushf
inc
add
or
add
daa
push
inc
movsb
dec
xor
jmp
stos
xor
in
adc
sub
movsl
sbb
lcall
inc
insb
push
mov
inc
push
add
daa
jbe
in
aam
or
adc
rolb
add
inc
lcall
mov
mov
xor
adc
jl
pop
lahf
mov
inc
fbld
lock
pop
or
and
inc
rclb
dec
and
not
push
je
mov
out
mov
add
inc
sbb
sbb
xchg
cmpsl
cmpsb
sbb
mov
and
enter
adc
add
into
arpl
ret
stc
mov
orl
add
mov
add
pop
jmp
mov
xchg
and
cmp
push
cwtl
lea
aaa
adc
imul
or
insl
add
out
push
movsb
add
add
out
sbb
nop
dec
pop
leave
fstps
or
clc
leave
mov
setnp
add
test
jne
adc
fwait
add
cmp
in
cmp
lock
fiaddl
adc
pop
push
inc
outsl
and
or
push
mov
rolb
and
pushf
xchg
push
std
pop
aad
xchg
or
inc
add
add
adcl
jns
rol
test
test
xor
aam
inc
inc
inc
lcall
pop
sub
and
in
push
repnz
fstpl
add
and
dec
push
imul
test
add
add
subb
push
cmp
adc
adc
je
xchg
dec
imul
test
add
jb
dec
shll
call
add
and
xchg
icebp
adc
movl
in
inc
pop
rcll
cmp
test
add
sbb
pop
push
je
inc
test
push
add
dec
inc
jp
adc
add
mov
cmpsl
adc
shrl
pop
ja
or
add
pop
js
mov
ss
mov
ss
mov
inc
shrl
push
push
and
fiaddl
mov
adc
cmpsb
rcrb
fiadds
or
popa
push
add
cmp
mov
inc
add
adc
or
arpl
add
and
inc
jecxz
add
add
loopne
dec
sbb
sbb
push
hlt
mov
sahf
jg
push
mov
aaa
xor
imul
dec
jo
mov
insl
inc
add
cmp
push
or
add
rcpps
inc
sbb
inc
xchg
dec
pslld
nop
pop
sub
sbb
inc
loopne
incl
movsl
pop
add
stos
rolb
push
and
mov
add
push
cmp
xchg
and
and
in
pop
mov
or
filds
add
or
sbb
jns
or
push
inc
push
test
add
sub
add
cmp
or
or
jns
rorb
lret
sub
outsl
inc
pop
or
push
test
sub
nop
inc
pushl
sub
repnz
xchg
push
mov
or
xchg
xchg
or
dec
fists
addl
sub
push
ret
cltd
aaa
pop
and
fiaddl
mov
lock
nop
pop
lcall
dec
test
mov
sbb
and
daa
hlt
jge
or
sub
or
and
push
hlt
scas
and
add
adc
push
push
or
or
out
hlt
fisttpl
ffree
bound
and
or
orb
xor
mov
jo
mov
add
shll
inc
inc
sub
pop
and
in
movb
pop
inc
sbb
xchg
and
es
mov
push
adc
and
adc
xor
cmp
sbb
out
push
sub
dec
loopne
push
popa
pop
inc
sbb
fwait
stos
push
add
add
push
jo
rolb
je
pop
sbb
mov
mov
leave
and
xchg
cmp
push
int
mov
in
add
and
je
int
add
cltd
inc
add
movsl
adc
sbb
insb
inc
sbb
ljmp
add
adc
or
add
subb
ficompl
rcrb
in
xchg
inc
add
out
test
cld
inc
jno
or
ret
inc
add
sbb
pop
int
arpl
sub
insl
inc
push
mov
pop
jmp
or
dec
enter
add
ja
mov
sahf
add
pop
in
jmp
cmpsb
jns
dec
outsb
or
add
cld
fdivrs
leave
lahf
pop
std
leave
dec
push
add
ljmp
out
add
mov
dec
adc
push
jp
das
pop
add
pushf
add
mov
or
in
clc
je
inc
inc
imul
mov
push
add
movsl
dec
add
add
int
imul
test
mov
add
pop
add
mov
add
mov
mov
movsl
je
jae
sbb
mov
mov
push
int3
shlb
mov
add
sarb
inc
xor
lcall
ljmp
push
test
add
pop
and
add
push
push
out
and
sub
pop
sub
sbb
mov
add
pop
push
ret
call
adc
dec
call
and
cmp
and
and
bound
mov
fldenv
pop
call
orl
ret
xor
cs
ss
enter
movsb
cwtl
in
mov
mov
lods
mov
enter
pusha
sub
mov
inc
pushf
out
cmp
inc
push
les
mov
mov
mov
clc
adc
adc
sbb
outsb
rolb
push
mov
sbb
mov
insl
mov
dec
lcall
inc
mov
pop
mov
push
xchg
or
mov
pop
fcomps
add
cmp
push
inc
or
sbb
insl
test
sbb
scas
dec
sbb
inc
fmuls
rolb
fidivrl
sbb
and
insb
lock
or
clc
push
mov
sub
icebp
stos
add
lea
adc
and
or
adc
popa
add
push
add
in
sbb
push
inc
movl
add
cmp
jge
sbb
lret
pop
push
jge
add
inc
std
or
pop
xchg
mov
std
mov
jle
inc
or
pop
adc
js
push
or
cwtl
adc
push
mov
inc
xchg
loopne
mov
mov
ss
enter
stos
inc
push
cmpl
pop
and
mov
fidivrs
sbb
adc
xlat
lock
push
xchg
push
test
clc
or
ljmp
movsb
xor
lea
addl
std
adc
sub
imul
lret
std
roll
ss
rclb
mov
nop
std
mov
fnstenv
add
sbb
popl
adc
mov
add
adc
std
sbb
or
out
cmp
orb
lret
pusha
std
add
mov
ja
mov
sbb
xor
ficoml
popf
ret
js
sub
popf
cmp
ret
and
stos
stos
mov
mov
inc
or
and
sub
xchg
lea
dec
and
adc
xchg
lea
scas
mov
popf
sub
add
mov
popf
loopne
test
dec
popf
aas
push
popa
fnstenv
xchg
lea
rcrl
pop
popf
xchg
push
and
lret
popf
inc
sti
or
xchg
call
lea
adc
cmp
and
fldt
roll
jmp
jnp
fcomp
jnp
sub
pop
mov
jle
loopne
dec
sarl
push
xchg
lea
add
sbb
popf
sbb
inc
sub
mov
arpl
push
xchg
push
adc
dec
ss
mov
popf
fs
push
sahf
addb
dec
sub
outsb
ret
dec
hlt
cmpsb
xor
dec
mov
call
mov
fmull
xchg
scas
sti
lcall
mov
mov
test
pop
je
lret
cld
mov
shr
jmp
cmp
rcrl
or
jle
dec
loopne
movsl
mov
nop
sarb
adc
ficoml
aaa
add
je
mov
sub
rcl
leave
inc
pusha
xchg
mov
jge
mov
lock
jp
mov
jecxz
push
xor
lea
add
mov
dec
cmp
jmp
inc
aaa
inc
push
dec
mov
leave
jge
jg
sbb
pop
add
ret
add
sub
les
pop
jl
daa
shlb
jge
adc
add
xchg
insb
or
sub
and
push
movsl
fs
sarb
jge
dec
cmp
mov
lods
inc
mov
pop
loopne
or
xchg
dec
push
popf
ds
pusha
jge
mov
pop
jmp
fs
sbb
inc
xchg
push
sbbb
lock
nop
xchg
dec
fstpl
or
inc
mov
push
xchg
inc
jbe
aas
nop
mov
fsts
mov
inc
sub
jp
push
sub
xchg
insb
or
jge
add
inc
lock
aas
fisubrs
adc
fwait
pusha
sbb
sbb
jge
inc
xchg
lahf
mov
push
push
in
out
outsb
mov
xchg
rcl
cmp
jge
push
jl
xchg
and
xchg
xchg
lea
cmp
or
xchg
xchg
lea
fsubrl
xchg
jge
aas
rolb
in
dec
leave
jge
es
js
inc
sub
das
inc
sub
lea
je
push
xchg
xchg
jge
test
leave
xchg
jge
mov
cmp
mov
cmp
dec
push
jge
cmp
cmp
adc
dec
ss
leave
xchg
push
movsl
fidivrs
add
es
and
dec
dec
pop
push
addr16
pop
and
inc
jge
insb
mov
and
sub
scas
push
mov
nop
push
arpl
movsl
fs
add
inc
movsl
fs
push
push
push
test
insb
fs
and
and
movsl
fs
sub
add
cmp
xchg
dec
sub
cmp
push
ss
pop
inc
jge
xchg
sbb
push
dec
jge
and
daa
sub
ret
pop
sub
jge
jae
jbe
movsl
fs
movsl
out
dec
leave
jge
or
push
dec
ss
notl
jno
jge
adc
sub
sub
push
adc
insl
sub
adc
dec
or
mov
pop
jge
xchg
insb
fsubrl
jl,pt
notl
jno
jge
adc
popf
fcoml
push
andb
xchg
jge
inc
cmp
push
dec
jge
xchg
inc
add
and
fnstcw
lea
adcl
jge
cmp
jge
arpl
pop
add
dec
inc
push
dec
jge
push
pop
push
dec
ss
mov
mov
test
add
fs
icebp
loopne
mov
mov
inc
ret
mov
adc
movsl
fs
jge
lds
mov
xchg
jge
push
movsl
fs
sub
test
shr
cmpsb
dec
inc
dec
movsl
fs
movsl
fs
xchg
or
sub
push
mov
inc
jns
out
mov
mov
fcoml
adc
aaa
adc
mov
enter
inc
mov
xchg
lea
sub
xchg
xchg
lea
call
mov
fldt
jge
and
imul
outsl
add
dec
outsb
sub
jbe
das
inc
push
jge
pop
jb
xchg
jge
stc
or
jmp
jge
xchg
cltd
sbb
leave
pop
sarb
xchg
add
mov
lea
add
sbb
jge
clc
inc
stos
mov
add
push
mov
jge
sub
pop
mov
inc
dec
dec
mov
movsl
jge
pop
xchg
or
mov
mov
mov
dec
adcb
lods
jge
xchg
lea
rorb
fs
dec
jge
and
push
add
xchg
lea
and
xchg
ret
add
fnstenv
addr16
sbb
push
sbb
jp
push
jns
in
push
dec
push
dec
ss
sbb
jl
dec
leave
xchg
jge
add
cmpsl
or
outsb
movsl
fs
or
mov
inc
and
or
inc
xchg
xchg
jge
mov
cmp
cs
jge
popa
add
mov
cld
mov
inc
jne
insb
mov
mov
xchg
jge
sub
pop
inc
sub
sbbb
push
cmp
and
adc
or
jae
and
push
jge
cmp
ret
xchg
lea
mov
jns
xor
jl
dec
leave
jge
leave
push
outsb
xorb
push
inc
push
jge
scas
mov
repnz
dec
ss
sbb
add
or
addb
sub
pop
pop
push
movsl
fs
jge
sbb
xor
push
inc
popf
sbb
fstcw
dec
jge
repz
jge
in
adc
test
dec
outsb
push
and
xchg
xchg
or
jge
jo
add
push
xchg
inc
sub
mov
cmp
xchg
sbb
jge
or
dec
and
inc
out
lock
push
dec
ss
std
ss
and
or
inc
or
dec
leave
jge
mov
fdivrl
sbb
mov
sbb
subl
dec
jo
sub
jge
adc
jge
inc
mov
int
xor
and
addl
mov
mov
pop
aas
jge
xchg
adc
mov
dec
jge
mov
je
dec
jge
out
lcall
dec
ss
jge
and
jge
xchg
lea
jmp
les
outsl
insl
adcb
leave
imul
add
mov
push
inc
xchg
jge
inc
push
pop
push
dec
jge
push
dec
push
dec
ss
dec
ss
pusha
jge
insb
cmp
test
test
aaa
add
inc
xchg
xchg
shrl
cmpl
inc
ss
inc
push
jge
aam
add
jge
sub
push
sub
sbb
jge
mov
test
xchg
lea
push
ret
jge
sahf
add
lock
sbbl
push
pop
inc
sub
pop
sbb
inc
pop
nop
jl
pop
sbb
dec
ss
ds
in
push
adc
jg
inc
adc
call
sarl
clc
call
sbb
nop
test
js
xchg
insb
mov
lea
mov
sbb
add
test
sub
pop
mov
cmp
leave
xchg
repnz
bound
push
mov
repnz
fstps
int3
nop
or
leave
mov
mov
or
inc
sbb
mov
sbb
arpl
sbb
xor
cmp
sub
sub
sbb
mov
mov
mov
dec
sar
cmpsl
fs
sbb
mov
sub
mov
dec
push
and
and
leave
xchg
xchg
or
sbb
test
cli
enter
and
sbb
xchg
fstpl
leave
cmp
inc
and
add
inc
inc
leave
xchg
fcomp
xchg
addb
jae
sbb
xchg
lret
enter
sbb
js
dec
fnstsw
jg
dec
ss
push
mov
cmp
xchg
insb
fmul
xchg
jg
xor
stc
lahf
xchg
and
loope
xchg
jno
js,pn
jo
lahf
pop
adc
pop
enter
fucom
cmp
dec
fnsave
es
scas
push
fnsave
in
leave
inc
adcb
loopne
inc
pop
js
jnp
sub
pop
je
push
test
and
sbb
or
or
xchg
xchg
loope
pop
inc
pop
push
pop
addb
inc
shrb
fs
xlat
inc
cmp
dec
call
and
ret
and
loopne
mov
xchg
or
jno
and
test
fiadds
test
mov
or
loope
sarb
pop
les
shrb
dec
sub
mov
xchg
ds
in
aam
in
faddl
mov
mov
mov
push
pop
and
jo
dec
ss
xchg
dec
ss
inc
mov
adc
jno
xorb
push
mov
fstl
pop
or
xlat
mov
stc
inc
cmp
pop
sbbb
sbb
or
push
mov
and
xlat
nop
xchg
xor
push
push
pop
jns
pop
inc
sub
pop
pop
sub
xor
pop
pusha
push
sub
sbb
test
pop
adc
dec
adc
sbb
fadds
push
mov
shl
sbb
push
sbbb
iret
mov
pop
sub
push
push
test
dec
mov
pop
adc
lock
imul
ret
pop
or
pop
xchg
insb
fadds
rorb
pop
or
add
testl
fwait
enter
cmp
cmp
fldl
shr
or
invd
and
test
pop
and
pop
mov
loope
jmp
cmovl
scas
lahf
clc
mov
sbb
pop
mov
xchg
fnstenv
jmp
sbb
insb
scas
xor
cmp
and
insb
fsubs
sbb
and
sbb
pop
sbb
and
xchg
insb
or
sbb
and
and
mov
adc
hlt
or
orb
pop
cmp
xor
pop
test
pop
lods
push
int3
push
call
sbb
pop
mov
out
xlat
and
xchg
je
sbb
dec
shll
add
movsl
insb
sub
and
fcomps
xchg
insb
mov
and
outsl
sub
or
icebp
inc
leave
pop
pop
dec
xchg
fs
mov
and
push
mov
ljmp
or
push
mov
dec
pop
rorb
cmpsl
add
cmp
test
push
adc
fstps
jo
mov
push
push
cmpl
imul
mov
push
and
mov
or
xchg
xchg
insb
fsubrl
sbb
loop
sbb
sub
xchg
pop
adc
xchg
pop
cmp
test
jl
mov
jo
iret
push
lea
shlb
add
pop
sbb
lea
sbb
pop
cmp
pop
pop
test
leave
xchg
pop
and
fsts
cmp
test
inc
pop
inc
sub
sbb
pop
adc
in
jg
into
pop
insl
sbb
inc
jecxz
xor
in
push
pop
jge
push
sbb
jbe
add
cmp
out
popa
jge
in
mov
std
push
mov
xchg
add
ss
sbbb
ss
push
adc
andb
pop
cmp
mov
inc
mov
pop
leave
push
pop
fdivl
add
fsts
or
xchg
insb
mov
popa
mov
or
push
pop
insb
mov
sbb
fsubs
add
mov
add
rolb
imulb
insb
sbb
sub
out
inc
sbb
jecxz
xor
jnp
mov
test
lea
dec
ss
ret
mov
xor
push
mov
les
stos
popf
rclb
andb
sub
pop
ja
mov
add
repnz
insb
fsubrs
insb
cmp
push
popf
push
fsubs
bound
mov
pop
popf
fstps
or
loopne
ret
popa
lds
popf
sbb
mov
test
add
popf
xor
in
sub
popf
mov
cmpb
sbb
shrl
popf
shll
dec
test
inc
test
sbb
popf
sub
test
sub
leave
xchg
adc
add
in
rorb
shll
call
loopne
inc
leave
std
out
je
fmuls
popf
fs
test
pop
and
jnp
mov
in
push
mov
add
dec
ss
adc
and
popf
mov
adc
ret
gs
xchg
insb
faddl
mov
xchg
dec
enter
popf
ret
push
enter
xor
xor
and
push
and
fwait
xor
sbb
cltd
pop
jmp
fstps
push
loope
cwtl
sub
mov
xchg
adc
cli
fnstcw
xchg
jno
shrl
imul
lea
adc
adc
leave
xchg
popf
xor
outsb
lods
push
popf
sub
pusha
add
push
nop
pop
cmp
cmpsb
inc
leave
popf
pop
fnstcw
cld
jmp
sub
xchg
insb
popf
imul
mov
test
inc
push
leave
popf
dec
fcoml
mov
lea
lahf
inc
adc
fwait
out
mov
pop
lea
xchg
push
sub
adc
daa
aas
rcrl
ret
lock
test
jp
adc
pop
jbe
sub
addb
popa
das
lcall
mov
int3
mov
cmpsl
xor
xchg
clc
sbb
rorb
call
cwtl
inc
push
mov
adc
pusha
bound
inc
leave
popf
xor
xlat
sub
push
adc
mov
nop
insb
sbb
outsb
test
push
lea
push
popf
inc
mov
xor
popf
jns
push
insb
mov
in
bound
dec
ss
dec
push
mov
xchg
aad
popf
lea
mov
popf
and
fwait
pusha
inc
leave
add
jo
mov
sbb
push
pusha
stos
push
popf
loopne
hlt
cmp
aaa
fstl
sub
enter
push
pop
sbb
mov
insb
mov
or
insb
mov
mov
popf
fwait
fmull
xchg
push
test
add
popf
sti
inc
fiaddl
movsb
pop
and
test
shrb
cmp
push
shl
call
inc
or
fisubs
repz
xor
jl
add
sbb
cmp
sbbl
iret
out
psraw
jecxz
iret
repz
in
cld
jnp
mov
push
inc
lea
or
sbb
push
shl
jns
out
hlt
add
out
sahf
out
jge
shl
iret
repz
stc
or
pop
and
jge
add
inc
or
repz
xchg
pop
lods
lahf
mov
sbb
pop
sub
call
fnstsw
adc
insb
or
sub
frstor
fnstenv
xchg
rcr
push
outsb
xor
xor
fldl
mov
dec
insb
fdivrs
dec
outsb
cmpsb
sub
sbb
frstor
mov
fucomp
push
pushf
xchg
xchg
loope
mov
xchg
movb
adc
sub
mov
push
dec
ds
popf
fstpl
add
xchg
lock
call
sbb
es
and
mov
out
fmuls
stc
add
inc
cmp
les
fprem
aaa
fisttpll
int
js
push
push
cmpl
sbb
pop
lock
fwait
icebp
shrl
fst
roll
cld
push
add
sub
mov
je
fnstsw
mov
dec
fldl
jmp
sbb
jbe
pop
outsl
adcl
mov
inc
mov
push
dec
inc
pop
loopne
leave
std
adc
inc
leave
push
std
mov
sbb
sbb
call
lret
dec
mul
out
fbld
and
and
popa
cmpsl
dec
mov
cld
outsl
sbb
test
mov
rclb
mov
adc
mov
and
mov
les
rcrb
fs
dec
lock
xchg
fnstcw
cmp
cmpb
add
arpl
stos
push
movsl
fs
and
xchg
adc
or
fiaddl
add
fs
fucomip
push
or
cmp
test
fcompl
mov
mov
push
jle
out
push
jns
les
cwtl
popf
popf
nop
add
and
in
in
mov
ss
cmp
xchg
or
adc
test
jns
test
stos
dec
leave
cmp
add
push
inc
sub
and
sbb
dec
cmp
sub
push
dec
ss
cmp
lods
mov
xchg
xchg
or
sub
dec
mov
fcoml
push
rolb
fmuls
xchg
xchg
or
leave
cs
or
dec
xor
nop
mov
mov
cltd
cmpsb
ret
stos
xchg
insb
cmp
cmp
stos
jmp
add
mov
xchg
sbb
xor
and
jg
leave
or
pusha
inc
fsub
mov
mov
outsb
call
cmp
test
scas
and
dec
lock
mov
cmp
xchg
insb
pushf
cwtl
cmp
jns
adc
in
inc
xchg
cmp
dec
push
dec
cmp
or
aam
xchg
or
mov
adc
mov
cmp
push
cmp
leave
cmp
icebp
sbb
test
cmp
clc
lods
sbb
in
int3
fstps
or
cmp
push
sub
lea
cmp
mov
cmp
mov
adc
int3
push
add
mov
add
push
les
repz
sarb
mov
xchg
je
xchg
cmp
movsl
fs
xchg
lea
je
ss
ret
ljmp
add
pop
pop
movsl
fs
mov
pusha
mov
cmp
lock
mov
cmpsl
sub
cmp
cmp
xchg
xchg
or
sub
outsb
in
lods
cmp
mov
vpshlb
imul
dec
movsl
mov
movsl
fs
lea
add
movsl
cltd
cmp
stos
cmpsl
push
inc
push
dec
ss
repnz
cmp
loopne
sub
inc
fnstcw
mov
sub
dec
ss
fs
cmp
dec
lcall
pop
ss
mov
add
cmp
movsl
jle
test
jle
lods
push
mov
pop
cmp
xor
dec
test
lret
sub
and
sahf
nop
mov
push
call
add
xchg
or
mov
fwait
mov
add
dec
fcomip
lea
mov
rclb
repnz
pop
xor
jge
shrl
fnstenv
lds
fnstenv
dec
ss
insb
out
adc
dec
ss
mov
dec
ss
mov
sbb
xchg
or
jge
xchg
inc
mov
xchg
pop
mov
inc
outsb
and
bound
mov
mov
dec
mov
sbb
jno
pop
and
and
mov
pushf
sbb
pop
lea
inc
leave
je
inc
leave
movb
sbb
jg
pop
sbb
insb
and
mov
jp
loopne
ret
stos
push
sbb
mov
mov
pop
sub
fcom
and
sub
sbb
sbb
push
das
jno
pop
xor
lock
insb
pushf
xchg
sbb
push
sub
sbb
bound
xchg
aam
push
mov
cwtl
roll
js
sbb
rcrb
push
pop
lea
test
pop
xor
pop
pushf
insb
fadd
sub
bound
and
test
pushf
or
es
insb
sbb
jecxz
sbb
sahf
mov
jecxz
xlat
and
xchg
insb
faddl
inc
dec
outsb
bound
pop
xor
inc
sahf
insl
dec
jg
sbb
mov
ss
sbb
sbb
xor
sbb
sbb
pop
dec
sbb
fisubrs
sbb
movsl
in
dec
jno
sbb
adc
or
iret
leave
inc
xchg
movb
adc
cmp
inc
enter
jmp
or
mov
add
std
and
movsb
dec
mov
and
push
sbb
dec
and
frstor
lret
dec
in
push
mov
inc
add
cmp
and
mov
mov
fsubs
fst
cmpsb
xchg
cmpsb
fiaddl
stc
ss
fs
addl
enter
movb
xchg
add
ja
enter
shll
sbb
frstor
sbb
jmp
out
sub
push
pop
sbb
and
add
or
fsts
push
sbb
sub
add
xor
cmpsl
lret
aas
sbbb
loope
xor
xor
movsb
lods
add
push
mov
mov
pusha
subb
arpl
mov
mov
mov
bound
push
adc
xor
enter
mov
mov
std
inc
test
adc
push
mov
pop
mov
sbb
xor
sbb
xchg
pop
orb
xchg
pushf
mov
push
adc
inc
mov
js
inc
mov
stc
sarb
jmp
sbb
nop
lea
pusha
add
or
je
mov
push
ret
cvtpi2ps
push
enter
sub
add
lea
rcll
sub
or
mov
sbb
sbb
out
or
outsb
mov
ds
mov
push
add
add
xchg
pop
mov
mov
push
enter
enter
mov
dec
mov
mov
add
add
sbb
jecxz
mov
mov
sarl
or
bound
popf
jg
push
enter
and
invd
mov
push
in
call
pushf
push
and
mov
mov
or
imul
add
and
mov
add
inc
ss
inc
in
or
push
xor
add
fs
sbbb
ss
add
mov
cmp
aas
testb
xor
cmp
fstps
add
rolb
loop
push
jmp
mov
xchg
dec
push
cmp
add
loopne
inc
ss
sarl
jne
je
xor
loopne,pn
add
enter
xchg
adc
ret
mov
enter
mov
push
mov
sbb
dec
add
ret
add
popa
sbb
cltd
jae
xor
ss
sarb
sub
mov
cmp
movsl
or
add
cmp
shll
adc
mov
fsubrs
push
enter
and
dec
cltd
xor
xor
add
add
mov
cmp
les
fnstcw
jecxz
add
cmc
mov
push
adc
push
mov
pop
xor
adc
mov
nop
or
cmp
mov
aad
and
loop
adc
add
cmp
mov
mov
repz
push
test
xchg
sbb
mov
lcall
mov
mov
jle
or
adc
mov
subb
and
xchg
add
inc
or
iret
add
nop
mov
popa
aam
pushf
sbb
ss
fnstcw
push
arpl
add
add
mov
bound
mov
xor
sbb
popf
mov
xchg
xchg
and
push
enter
dec
xor
mov
or
mov
adc
push
aas
rcll
or
and
mov
std
addr16
or
std
mov
xchg
dec
fdivrs
push
dec
les
std
clc
dec
sub
fmuls
std
rcrb
les
sbb
cs
dec
std
ja
int3
ds
test
xor
or
test
mov
pop
adc
dec
mov
xor
xor
add
or
push
inc
sti
pop
insb
pushf
mov
std
inc
xor
dec
add
js
rcl
pop
cmpsl
je
sub
stc
movsb
fcomps
test
jo
push
xor
xor
movsb
std
cwtl
mov
push
push
lock
rol
push
dec
andl
push
add
popa
jecxz
std
adc
fisubs
mov
dec
out
sub
mov
std
dec
cs
call
sbbb
cwtl
mov
push
lret
or
std
inc
and
std
inc
mov
lds
ret
std
inc
dec
fdivrs
insb
sub
dec
ljmp
decb
add
std
xchg
mov
sbb
xchg
inc
insb
fadds
dec
cmp
mov
std
adc
sbb
dec
fcomps
adc
sub
jle
fldl
es
scas
inc
jp
and
std
push
es
or
std
lds
sbb
jp
xor
lds
fmuls
test
pop
test
xor
mov
or
cmp
adc
add
std
mov
mov
std
lds
lds
std
dec
std
cwtl
mov
das
inc
mov
loope
scas
mov
mov
adc
push
cmp
fmuls
and
std
and
insb
std
cmc
xchg
stos
cwtl
mov
push
std
adc
dec
std
xor
dec
sub
adc
pop
push
out
adc
or
std
sbb
and
inc
ljmp
out
or
cwtl
mov
popf
mov
std
mov
sarl
adc
cmpsb
ret
inc
mov
std
popf
sbb
in
or
jecxz
hlt
cmp
popa
mov
dec
fdivrs
std
and
insb
fdiv
xor
and
es
test
adc
add
cmp
rorb
std
cmp
mov
sbb
dec
js
lock
aam
dec
int3
adc
nop
sbb
mov
mov
or
out
fbstp
adc
ret
jo
pushf
add
inc
ljmp
xor
std
inc
mov
popa
test
xor
adc
ss
adc
ss
fisttps
mov
popa
arpl
and
std
adc
cmp
das
inc
xchg
std
mov
into
push
mov
test
mov
xchg
ret
add
dec
pop
cmp
sbbb
xor
inc
or
pop
adc
insb
insb
push
jo
push
mov
movsl
fs
push
pop
mov
gs
and
leave
add
and
mov
pop
bound
xor
xchg
int
mov
xor
setl
mov
jno
or
sbb
mov
mov
insb
sbb
call
mov
sub
clc
mov
js
adc
ss
mov
roll
add
dec
lds
adc
ss
addb
and
jne
sbb
and
lahf
mov
fdivrs
pushl
in
fdivs
inc
sbb
mov
sbb
shlb
sub
lret
inc
jb
pop
call
stos
mov
pusha
arpl
stos
inc
iret
decb
or
cmp
lods
mov
cmp
push
cmp
pop
mov
pop
mov
mov
add
mov
sub
xchg
and
or
arpl
xchg
lahf
add
xorb
pop
and
lea
sbb
mov
cmpb
insb
mov
loope
jle
add
leave
mov
or
xor
cmp
aas
sub
inc
sub
pushf
in
fs
mov
mov
push
leave
add
jmp
pop
and
xchg
inc
cmpsb
jmp
xchg
test
push
inc
lds
adc
xchg
cmpsl
and
inc
or
popa
mov
mov
xor
mov
pop
mov
mov
jge
xchg
or
push
insb
lahf
stc
add
jno
inc
lret
lahf
inc
or
sub
cmpb
arpl
adc
or
xor
dec
cmp
mov
dec
lds
xor
insb
sub
js
and
jge
adcb
jge
push
insb
cmp
jge
loope
es
fdivrs
mov
jge
movsl
add
out
pop
dec
adc
mov
xchg
jge
inc
mov
jo
jo
les
orb
pop
push
sbb
dec
mov
mov
out
add
orb
mov
movsb
jge
pusha
ret
dec
fimuls
jno
push
or
sbb
cmp
inc
lds
pop
dec
xchg
repnz
loopne
pop
mov
ret
pop
or
adc
cld
cld
lcall
xchg
mov
adc
jbe
cli
xchg
and
xchg
mov
jb
mov
xor
inc
and
psubw
and
nop
mov
test
test
je
mov
pop
xchg
test
or
push
enter
pushf
cmp
adc
cmp
or
cmp
mov
sti
and
cmp
xor
inc
pop
mov
sbb
sbb
and
in
or
in
lock
movl
daa
cld
mov
add
add
cmp
or
xchg
dec
xlat
adcl
adc
and
movsl
cmp
stc
pop
sub
xor
cmp
inc
inc
dec
dec
repz
push
pop
testl
fs
jge
add
outsb
pop
movsl
jmp
pop
jo
je
js
dec
je
add
cmp
test
or
push
test
lret
mov
lcall
cmp
or
cmp
mov
popa
inc
aam
dec
imul
cmp
movsl
fidivl
mov
mov
dec
sarl
lea
adc
hlt
sbb
pusha
mov
and
ficompl
xchg
cmp
push
mulb
movsb
cmp
or
add
xor
cmp
cmpsb
data16
popa
push
cmp
outsl
push
jp
in
xchg
xor
shlb
arpl
cmp
idivb
imul
outsb
sbbb
push
cmpsb
icebp
mov
cmp
nop
cmp
sarl
cmp
rclb
arpl
shlb
xor
fdivrl
call
sub
imul
push
ret
jns
inc
adc
cmp
shlb
arpl
cmp
jmp
adc
fsubr
inc
test
adc
xor
in
adc
dec
arpl
cmp
test
and
jl
adcb
xchg
mov
movsl
inc
cmp
imul
and
cmp
test
add
cmpsl
xchg
lahf
push
cmp
movsb
imul
push
dec
sarl
cmp
faddl
test
jecxz
add
xchg
and
mov
or
and
lock
test
push
in
push
adc
pop
inc
inc
sar
lds
dec
ret
inc
jb
lcall
stos
cs
nop
outsl
mov
movsb
imul
xor
xor
jo
lret
dec
xor
cmp
xchg
adc
std
pop
dec
jp
pop
and
or
shll
mov
cwtl
cmp
push
jbe
inc
rcrl
inc
jmp
inc
std
add
mov
mov
rorb
lcall
in
mov
jl
mov
add
dec
jecxz
and
xor
subl
std
xchg
push
mov
push
adc
pop
or
jge
imul
std
inc
inc
sarl
std
push
pop
loope
xchg
imul
sbb
sub
cwtl
pop
sub
add
mov
or
push
and
add
dec
std
jae
adc
je
test
jnp
push
pop
pop
cmpb
push
push
add
std
int3
leave
dec
ret
xor
xor
pop
adc
push
std
xchg
push
inc
shll
dec
push
and
fs
mov
lods
popf
fisttps
cmp
cmp
les
cmpsb
popa
mov
jbe
add
jl
test
lods
cld
jle
xor
or
stos
pop
pop
xchg
pop
cwtl
cmp
mov
aaa
mov
mov
je
in
shrb
rorb
xor
fcmovu
loopne
insb
lea
in
ds
out
jb
push
cs
clc
cld
inc
pop
cmp
aas
rorb
aas
stc
push
mov
or
or
aas
dec
adc
push
mov
dec
sbb
and
aas
add
or
sub
dec
movsl
push
xor
cmp
fistpll
mov
dec
dec
xor
sbb
push
push
or
xor
mov
mov
push
pop
testl
and
js
xor
push
addb
nop
xchg
cwtl
pushf
mov
inc
sbb
sub
aaa
mov
mov
int3
rclb
fcomp
loopne
mov
in
lock
fbld
push
clc
cld
add
or
fldl
inc
inc
or
or
adc
jb
cltd
inc
sbb
sbb
xchg
xchg
xchg
dec
and
sub
xor
test
cmp
dec
movsl
jb
inc
inc
dec
dec
cmp
push
push
pop
jo
xor
cwtl
sbb
aam
sub
movsb
sbbl
sbb
shlb
sahf
shlb
rcrb
cmp
mov
push
xchg
xchg
jne
xor
int
cmp
sbb
xchg
xor
sbb
sbb
pop
sbb
cmpsb
jno
inc
sbb
test
or
rolb
cmp
mov
sbb
xor
mov
ret
inc
add
adc
repz
inc
sbb
sbb
fistps
or
sbb
xor
or
sbb
add
sbb
test
sbb
test
sbb
jo
sbb
andl
push
or
roll
addl
mov
xchg
push
ja
inc
rcrl
push
xor
ja
mov
call
ja
sbb
jnp
and
jo
mov
inc
sbb
xchg
lret
iret
fadds
push
imul
xor
call
xchg
jno
jno
sti
or
push
sbb
outsb
pop
sbb
insb
push
cmpsb
in
jnp
aas
pop
push
mov
fcom
inc
rcrl
sbb
sbb
insb
aas
sbb
roll
sbb
aam
movsb
mov
pop
dec
or
lcall
ret
mov
jp
xor
cmp
ja
sbb
addl
rolb
pop
in
sbb
lea
jae
xor
jae
add
cmp
sbb
push
pop
shll
mov
loope
inc
sbb
mov
lcall
sbb
sbb
or
push
push
add
mov
dec
ret
inc
sub
inc
shll
and
rolb
aad
scas
andl
xchg
rorb
vmread
and
lcall
adc
sbb
push
sbb
push
sbb
test
loop
imul
cmpsb
popa
js
lret
test
push
testl
and
fs
outsb
dec
jecxz
pop
sbb
push
pop
sbb
pop
xor
es
lahf
lcall
stos
pop
and
dec
sbb
sbb
cmp
push
lcall
les
inc
push
sahf
push
lcall
ret
subb
pop
sbb
pop
dec
jecxz
fcomps
mov
or
sub
push
xchg
push
les
dec
sbb
mov
push
lcall
push
cli
sbb
std
mov
loope
cmc
or
lea
adc
addb
inc
push
dec
movsl
mov
push
lret
ret
dec
rcrb
pop
pop
pop
sbb
jno
sbb
pop
sbb
ds
jl
lcall
fcompl
jno
fwait
push
ret
add
mov
pop
dec
jecxz
inc
jmp
xchg
pop
mov
push
sbb
lea
rep
adc
add
sbb
fldl
dec
jecxz
aas
fwait
sbb
iret
aas
jnp
scas
loopne
sbb
xor
xchg
shlb
jno
je
sbb
andl
mov
push
lcall
scas
adc
push
std
adcb
dec
loop
imul
sbb
cs
or
jne
daa
add
pop
popf
or
mov
add
fst
popf
cmp
jbe
popf
dec
pop
mov
les
push
jno
push
inc
mov
or
cmovl
mov
cmpsb
popa
push
cmpsb
call
cmp
mov
cmp
in
adc
push
cmp
in
sub
xchg
enter
and
adc
cmp
adc
sarl
add
or
xchg
dec
and
inc
cmp
pop
push
imul
filds
js
test
xor
rcrl
xor
jnp
ds
shlb
inc
fisubs
push
int3
and
xor
sbb
popf
dec
push
sbb
inc
pop
xor
arpl
cmp
shlb
pop
jno
push
popf
lds
mov
cltd
push
scas
push
lcall
jecxz
popf
imul
shlb
lcall
popf
adc
dec
jecxz
popf
or
jbe
xor
push
jp
ret
push
xor
popf
xchg
bound
popf
stos
andl
push
pop
test
or
cli
ljmp
sbb
cmpsl
mov
popf
cmpsb
mov
mov
sbbl
es
or
or
jg
dec
inc
add
pop
add
sub
popf
data16
ljmp
sbb
ja
push
jge
and
mov
push
lcall
rcrl
int
call
dec
or
and
out
xor
xor
test
shlb
sbb
les
xor
lret
aas
gs
gs
sub
adc
lcall
sbb
cmpsl
inc
pop
popf
push
adc
lcall
cmp
ja
or
inc
rcrl
inc
sarl
xor
jnp
dec
adc
xor
lea
pusha
mov
add
popf
sub
push
pop
or
lea
pushf
test
push
lds
xor
push
pop
or
lea
mov
aad
arpl
rorl
jb
pop
lcall
xchg
pop
push
push
mov
popf
shrl
or
je
push
lcall
les
xchg
lock
rcrl
push
je
inc
popf
enter
xor
popf
sbb
add
lcall
ret
xor
popf
mov
cmp
popf
out
popa
lret
out
sbb
sbb
sarb
mov
test
popf
or
into
popf
jno
push
push
push
fisubl
cmpsb
popf
add
adc
imul
sbb
jg
jo
popa
popf
iret
leave
in
les
pushf
pop
lret
adc
popf
rclb
popa
dec
nop
imul
sahf
js
xor
jnp
xlat
cmp
xchg
cmp
xlat
push
rolb
std
call
bound
andl
mov
cmp
push
aam
add
mov
pop
popf
mov
adc
shrb
test
rolb
out
dec
sbb
cltd
or
dec
lcall
imul
dec
inc
jmp
mov
pop
lcall
mov
shlb
clc
push
mov
sbb
and
popf
mov
lock
push
lcall
mov
push
mov
popa
aas
shlb
addb
lcall
mov
lcall
sbb
je
popf
push
lcall
push
loopne
iret
cwtl
jecxz
rolb
inc
ror
outsl
push
dec
popf
or
lea
imul
andl
movsl
popf
daa
popf
shlb
inc
and
popf
sti
inc
cmp
add
and
push
pop
or
lea
adc
jns
mov
pop
movb
jecxz
popf
or
popf
xchg
out
mov
adcb
xor
add
popf
inc
je
xchg
outsb
jge
pusha
mov
inc
add
xlat
int
movsl
xor
stos
mov
int3
or
pop
add
pusha
call
imul
cmp
xchg
xor
popf
xchg
sbb
popa
or
and
and
aam
call
jbe
cmc
pop
test
pop
or
sbb
scas
dec
sbb
adc
popf
cmp
out
outsl
sbb
pop
cmp
add
and
xor
dec
xor
sbb
xor
xchg
dec
test
dec
cwtl
xchg
mov
lods
aad
push
leave
xor
dec
ret
add
xchg
insb
enter
add
fwait
cltd
or
xchg
mov
mov
jne
push
or
in
call
in
and
inc
je
sbb
inc
lock
ds
sbb
mov
xor
roll
popf
jnp
dec
cmpsl
dec
jecxz
psubsb
pusha
mov
dec
pop
pusha
unpcklps
push
mov
add
add
test
or
dec
inc
insb
sbb
push
add
push
sbb
mov
incb
inc
and
cmp
push
jle
and
mov
xor
mov
mov
sbbb
sbb
or
call
jb
outsl
leave
loopne
aas
clc
inc
fadds
pop
popf
roll
lock
or
popf
push
orl
pop
divl
fadd
jmp
in
sbb
and
push
into
xchg
sbb
push
sub
aaa
cli
call
pusha
cmp
cmc
call
js
popf
test
popf
aam
add
sbb
imul
inc
rcrl
mov
mov
arpl
dec
in
repnz
mov
pop
pusha
leave
leave
in
push
rorb
xchg
lret
stos
cmp
and
daa
daa
adc
adc
pop
dec
push
popf
sub
andl
popf
fstpl
cmp
mov
mov
mov
pushf
pushf
push
sahf
testb
loopne
cmp
mov
in
jb
or
in
xor
mov
xchg
xchg
and
jb
pop
imul
push
pop
out
sbb
popf
inc
pusha
mov
test
push
clc
lcall
push
lcall
lcall
or
push
popf
mov
mov
sbb
in
jecxz
add
popf
xor
sbb
push
lcall
addl
aam
pop
or
jecxz
add
cs
lret
xchg
ljmp
push
roll
mov
sarl
mov
adcb
add
cli
shll
pop
jmp
xlat
inc
popf
push
pop
jmp
jecxz
popf
sub
sbb
popf
xlat
sub
aaa
shlb
sbb
inc
andl
mov
cmpsb
jno
or
cmp
add
sysenter
adc
popl
lcall
push
fistl
jmp
fadds
popf
orb
jns
sbbl
mov
mov
sbb
jecxz
jmp
lcall
xlat
das
mov
mov
pop
or
popf
lahf
push
popa
clts
lcall
andl
pop
add
les
dec
push
inc
cmp
sarl
xchg
ja
and
inc
popf
ljmp
xor
popf
xor
inc
shll
mov
popf
lcall
inc
push
sbb
push
popf
ror
in
sbb
push
push
push
fdivl
xor
jnp
fsubrs
imul
inc
outsb
sbb
call
pop
lea
push
or
stc
in
test
fstp
xor
cmpsb
loope
and
xor
cmpsb
popa
outsl
mov
inc
rolb
rolb
mov
inc
pop
andb
and
jge
pop
mov
popf
add
xchg
frstor
jbe
xchg
js
movsb
dec
adc
jno
xchg
push
aam
add
popf
mov
popf
add
mov
push
in
scas
mov
xor
xor
popa
push
popf
push
lcall
fldl
lcall
xor
popf
mov
pusha
mov
cmp
test
addr16
mov
movsb
les
dec
jecxz
xchg
and
roll
xor
or
popf
add
mov
repnz
jecxz
inc
add
ljmp
fimuls
popf
imul
popf
shlb
mov
push
pushf
cltd
cmpsb
jno
xor
mov
mov
sub
dec
imul
icebp
cmp
popf
push
cmp
andl
outsl
sbb
lds
pop
stc
or
dec
popf
inc
shll
andl
movsb
popf
lock
sbb
inc
sarl
popf
mov
jbe
div
bound
sbb
add
popf
mov
cmp
xor
popf
add
dec
loope
insl
fsubr
jno
mov
out
jno
pop
jmp
add
popf
jge
jo
add
dec
andl
and
add
add
leave
movsl
xchg
popf
imul
mulb
popf
jae
xor
int3
outsb
inc
daa
loop
inc
and
sbb
jnp
stc
fwait
push
lcall
popa
nop
fisttpll
jbe
jb
mov
or
enter
or
dec
and
sbbl
cmpsb
mov
and
sub
sbb
stc
adc
push
push
repz
nop
and
add
add
popf
xchg
fisttpll
xorb
push
or
imul
add
jo
push
popf
push
test
add
or
popf
pop
push
add
jne
insl
scas
push
lcall
dec
jecxz
popf
pusha
mov
popf
push
lcall
dec
inc
lea
push
add
lea
push
aad
or
pusha
adc
cltd
movsb
jno
xor
popf
cld
xor
call
sbb
push
popf
push
lcall
pop
push
imul
xor
es
fcomps
aaa
xor
add
cmp
xor
popf
mov
lcall
les
or
popf
or
or
popf
stc
mov
add
pusha
push
imul
sbb
out
mov
jno
mov
jl
jecxz
cmp
cmp
jno
dec
sti
xor
cmp
inc
dec
js
jns
imul
push
dec
push
lods
repz
out
pusha
je
cwtl
cmpsb
cmpsl
jge
out
jne
jbe
jbe
aad
sahf
out
pop
push
mov
adc
jnp
shll
pop
mov
je
test
int
jns
int3
jno
in
jp
lcall
bound
ffree
mov
lcall
push
sbb
push
popf
aad
add
push
add
arpl
add
push
xor
xor
nop
popf
sbb
push
mov
push
sarl
push
sbb
sbb
inc
rcrl
add
jg
or
jne,pt
popf
jb
repz
inc
or
lea
rolb
push
rcl
push
xor
popf
add
hlt
out
push
push
cli
push
push
mov
push
lcall
mov
sbb
cmpsb
jno
popf
arpl
sbb
cmp
sbb
sbb
sbb
popf
push
sub
popf
xor
xor
push
push
enter
or
popf
xor
add
mov
sub
xor
rolb
sub
mov
rcrb
sbb
repnz
adc
sbb
shlb
add
aam
sahf
cld
add
jns
lcall
xchg
mov
imul
outsb
cmpsb
popa
outsl
mov
cmpb
sbbl
xor
rcrl
popf
xor
rclb
inc
or
rcrb
sub
cmp
and
dec
arpl
dec
push
das
enter
popf
rolb
inc
rcrl
roll
add
shlb
push
popf
dec
rcl
cmp
popf
adc
popf
leave
insb
push
xchg
add
sbb
sahf
andl
fcompl
int3
sahf
ds
add
adc
xor
sub
push
popf
in
push
xlat
sbb
lret
lea
dec
ret
pop
or
sub
es
les
popf
jge
cmp
sbb
addb
mov
inc
rcll
loope
xor
rcrl
push
xor
jnp
add
add
out
addb
xor
xor
xor
or
imul
mov
cmpsb
popa
xchg
push
addb
or
or
sbb
popf
in
push
ret
je
int3
and
adc
dec
ret
popf
mov
add
popfw
adc
dec
sbb
push
add
shlb
xor
xchg
push
xchg
push
repz
sti
out
push
les
fisttpll
outsb
mov
mov
and
into
cmp
push
mov
cmp
rcrl
inc
fistpll
popf
iret
addl
imul
bound
dec
cmp
push
psubusb
call
sbb
popf
sub
add
movsb
popf
rcrb
lea
imul
call
sarl
mov
popf
inc
mov
push
popf
jne
arpl
xor
popf
inc
jb
pop
add
in
mov
push
popf
enter
fdivl
rcrb
enter
push
pop
sbbb
iret
mov
pop
fsts
add
inc
rcrl
arpl
in
shlb
mov
xor
movsl
sbb
xchg
aam
mov
ret
adc
push
lcall
xor
mov
or
popf
jmp
popf
adc
pop
addb
lcall
arpl
cmp
xchg
push
lcall
sbb
andb
cmp
inc
popf
add
cmp
xor
xor
push
mov
popa
ds
xor
adc
sbbb
sub
push
sbb
push
push
pop
scas
xor
push
xor
lds
xchg
fwait
add
xor
test
xor
or
inc
sarl
popf
sbb
rorb
push
les
cmp
sub
xchg
xchg
subl
push
lcall
mov
pop
add
cmp
popf
xor
sub
push
push
add
popf
lcall
in
pop
popf
in
dec
push
xlat
push
xor
insb
sysenter
xlat
imul
pop
mov
xor
sbbl
sbb
or
popf
push
push
xlat
inc
rcrl
push
pushf
popf
imul
inc
ret
mov
ror
jne
or
ret
and
popf
xchg
xlat
add
dec
popf
pop
fcomps
xor
popf
mov
jecxz
push
xchg
pop
push
xor
rsm
and
dec
popf
xor
xor
es
popf
rorb
mov
mov
loope
and
sbb
popf
mov
cmp
popf
aad
jno
shlb
jecxz
popf
rcll
out
sbb
popf
rcrl
xor
xor
aad
sarl
popf
xor
xor
sbb
xor
or
and
sub
popf
xor
jecxz
in
xchg
adc
pop
sbb
xor
mov
cwtl
popf
andl
push
sub
shlb
and
popf
stc
jne
jmp
adc
popf
inc
shll
inc
xor
cmp
popf
mov
adc
mov
rcrl
add
mov
sbb
jle
hlt
mov
xor
cmp
popf
push
jmp
addb
inc
add
inc
rcrl
xchg
xor
popa
ds
or
aaa
shlb
and
push
inc
inc
sarl
cli
xor
rcl
in
push
dec
pop
xor
popf
loop
inc
shll
popf
pop
mov
sbb
jl
push
lcall
popf
mov
mov
mov
xor
xor
sbb
dec
xchg
mov
add
nop
pop
rolb
xor
popf
xor
and
in
cmp
sbb
xor
popf
xor
dec
jecxz
insl
popf
add
bound
inc
popl
popf
push
dec
lcall
add
push
popf
mov
add
rcrb
rcrl
mov
add
and
lret
mov
inc
rcrl
mov
xchg
daa
xchg
mov
pop
add
push
popf
outsb
xor
xor
es
pop
push
cmp
pop
mov
fimull
popf
push
lcall
js
cmp
in
rcrb
push
shlb
bound
mov
ret
out
xor
je
shll
push
pop
and
push
aad
rcrl
lea
ss
pop
jmp
movsl
test
popf
push
cmp
shlb
repnz
ja
sbb
rorl
cmp
xor
popf
incl
xor
shr
les
sub
or
popf
xor
pop
adc
mov
push
popf
sbb
sub
mov
push
pusha
mov
xor
and
mov
addl
sbb
popf
call
add
sbb
push
daa
popf
sbb
fnstcw
inc
sarl
dec
ret
into
popf
add
popf
mov
inc
rcrl
popf
pusha
jo
pop
jecxz
popf
cmp
xchg
push
add
into
popf
in
shll
das
mov
fwait
inc
lahf
ret
inc
popf
xor
cs
mov
ss
mov
add
popf
fwait
and
or
push
push
lea
push
add
xor
aad
popf
cmp
popf
or
dec
ret
insl
mov
push
add
sbbl
cmpsl
push
or
push
rcrl
lahf
ds
xchg
dec
lcall
mov
jb
sub
sbb
jg
shll
test
es
sub
sub
icebp
aad
and
int3
andl
popf
xor
mov
inc
shll
jb
inc
rcrl
pop
adcl
add
shlb
or
cs
mov
cmpsb
loope
les
sbbl
xchg
xor
or
lcall
testb
popf
or
mov
or
or
lcall
jo
xchg
cmpsl
sbbb
push
lcall
test
sub
or
sbb
sbb
popf
push
lcall
push
xchg
pushf
mov
test
push
xor
xor
bound
dec
popf
cmpsb
jno
test
jns
cmpsb
icebp
cmpsb
sbbl
movsb
adcb
sbb
or
in
cmp
push
add
jmp
sbb
or
lea
call
rorb
rol
sbbb
pushf
stos
bound
sbb
push
inc
popf
add
pusha
outsb
aad
sbb
divb
push
popf
xchg
lret
rorl
aaa
fdivrs
cmp
jno
roll
lods
push
das
and
bound
shlb
popa
popf
andl
mov
lea
lock
or
ljmp
push
inc
mov
mov
dec
mov
popf
xor
xor
mov
cmp
adc
loopne
enter
xchg
popf
inc
ror
cmp
popf
sbbb
inc
rcrl
es
cmpl
cmp
dec
aad
jne
sbb
mov
add
popf
push
mov
popf
push
add
popa
popf
or
popf
push
lcall
test
inc
or
popf
xchg
lret
inc
rcll
popf
adc
xor
or
popf
mov
pushf
xlat
adc
push
popf
fnstsw
jns
test
pop
dec
arpl
sbb
popf
sbb
lods
and
popf
ss
sti
xor
pop
repnz
cmp
cwtl
stc
adc
xchg
movsl
push
lcall
popf
movsl
or
or
ljmp
push
dec
push
xor
inc
popf
adc
or
rcrl
lds
xchg
add
and
lcall
int
sbbb
sub
lahf
ror
pop
or
popf
fwait
test
sbb
lock
mov
inc
add
popf
inc
mov
sub
inc
rcrl
clc
jne
push
lods
jo
dec
inc
mov
inc
add
aam
mov
sbb
popf
js
add
lea
inc
add
in
popf
push
lcall
andl
mov
or
popf
mov
pusha
in
popf
repz
jle
push
jno
out
cmpsl
sub
sbbl
mov
stos
push
push
jl
and
out
or
lcall
icebp
ljmp
inc
shll
mov
lods
fwait
add
pop
ljmp
push
popf
jp
adcb
stos
rcrb
or
popf
pusha
mov
popf
in
fsubrs
and
call
add
sbb
popf
push
lcall
paddq
pop
push
jmp
push
inc
rcrl
jb
dec
arpl
popf
lock
add
add
add
test
popf
mov
out
les
popf
jge
jno,pt
shlb
mov
scas
push
out
addb
xor
xor
push
add
add
pop
adc
fildl
int
inc
repnz
or
daa
or
lea
popf
stc
mov
addr16
push
lcall
sub
pop
test
mov
mov
mov
fsubl
push
lcall
mov
xor
repnz
sbb
xchg
int3
add
sbb
movsb
inc
cmp
movsl
sub
popf
call
imul
aad
inc
fwait
sbb
popf
ret
or
or
jle
adcl
xor
insb
add
pop
or
sbb
pop
test
fs
mov
or
out
daa
stos
sbb
adc
dec
popf
and
into
push
xor
xor
shlb
cmpsb
movsb
sbb
sbb
popf
test
sbb
sbb
cmpsl
jl
pusha
mov
stos
push
lcall
shlb
or
icebp
mov
and
cmc
add
push
sub
sbb
push
lcall
inc
clc
jmp
xchg
scas
push
lcall
jecxz
popf
cmp
repz
and
adc
lcall
pop
bound
push
fabs
or
xor
xlat
inc
popf
nop
mov
sbb
push
mov
jno
mov
inc
rcrl
push
popf
inc
mov
popf
inc
sarl
add
or
popf
sti
cmpl
sbb
xchg
inc
bound
mov
pop
push
sub
inc
popf
pop
paddsb
lods
push
lcall
popf
shlb
pop
repz
push
imul
lods
adc
sahf
out
add
dec
sbb
jns
cmp
jo,pt
mov
sahf
leave
in
roll
popf
add
push
mov
dec
inc
or
rcrl
fldl
std
add
xchg
inc
popf
push
add
popf
sbb
imul
scas
xchg
lcall
xor
pop
mov
sub
inc
rcrl
sbb
cmpsb
sbb
adc
or
shrl
stos
push
xlat
lock
push
popf
lock
push
call
arpl
add
push
and
popf
mov
or
lods
push
fsubrs
popf
jne
scas
sbb
imul
mov
loopne
addb
mov
or
push
mov
push
pop
lock
pcmpeqd
aas
pop
bound
outsl
jl
testl
sarl
iret
sarl
inc
addr16
rolb
jle
imul
test
into
and
ret
jbe
push
popf
cmp
lcall
dec
testl
shlb
jo
addl
mov
or
push
sbb
or
push
adc
sbb
or
add
ret
pop
adc
ljmp
popf
inc
rcrl
fidivs
dec
dec
pop
mov
xor
popf
xor
xor
test
pusha
popf
sub
or
and
cmp
lock
push
push
lods
push
lcall
popf
mov
inc
rcll
push
in
stc
movsl
jb
ret
xor
or
push
fiadds
add
pusha
jle
sbb
adc
sub
cmp
jno
sahf
bound
push
push
movsl
push
jo
fsubp
push
xor
push
push
lcall
sbb
div
mov
xor
ret
hlt
mov
xchg
dec
mov
xor
cmpsb
addl
jb
leave
push
ss
sbb
fbld
out
sub
popf
jle
jno
inc
xor
xor
mov
jae
popf
xor
rcrl
popf
and
imul
sub
sub
movsl
fwait
mov
xor
gs
sub
xchg
jbe
movsb
push
or
popf
daa
push
or
push
popf
inc
sarl
pop
cmpsl
xchg
les
andb
sub
popf
imul
pop
mov
das
and
rolb
inc
popa
sahf
xor
xor
inc
popf
shlb
add
popf
int3
out
aam
adc
xor
xor
push
popf
sarl
aad
push
xor
inc
popf
iret
xor
inc
rcrl
sbb
rorl
popf
push
aaa
aaa
stc
jecxz
adc
cmp
add
xchg
cmpsb
jno
push
adc
sbbl
popf
rclb
popf
add
add
mov
sbbl
insl
data16
push
rol
pop
rolb
inc
mov
or
popf
mov
inc
rcrl
fcoml
adc
mov
popf
xchg
add
push
sysret
or
popf
add
mov
arpl
or
pop
popf
test
lods
pop
xchg
sbb
jmp
out
xor
sbb
adc
push
lcall
mov
mov
imul
mov
jno
mov
xchg
das
dec
or
add
pop
add
jg
jb
add
insl
es
sarl
iret
add
pop
jns
mov
or
or
loope
std
push
popf
andl
xchg
punpcklwd
andl
jo
popf
dec
add
inc
push
lcall
pusha
dec
jecxz
push
popf
enter
pop
add
cmpsb
jno
jp
jp
mov
push
lcall
cmc
rol
xchg
mov
sbbl
add
shlb
out
sub
xor
and
cmpl
sub
rcrb
sbb
mov
push
or
push
dec
sbb
jno
rcrb
mov
pop
cs
les
rolb
js
sbb
popf
jb
add
xor
jno
popf
inc
rcrl
rolb
xor
cmp
xchg
xchg
dec
pop
jno
stc
cmp
in
push
and
leave
pop
mov
jo
mov
xor
push
popf
pop
add
negb
push
mov
jbe
into
sbb
imul
mov
mov
push
popf
sarl
xorl
jg
cmp
fs
pusha
repz
int
mov
leave
mov
imul
sarb
dec
sti
push
lcall
daa
cmp
into
repz
data16
inc
xor
popf
cwtl
shll
inc
xchg
mov
inc
popf
or
adc
add
rolb
popf
andl
popf
jae
or
mov
daa
and
or
or
push
lcall
mov
adc
add
hlt
faddl
cli
sbb
shlb
sub
cmp
popf
andl
popf
xor
test
imul
mov
dec
push
enter
rolb
popf
inc
rcll
je
call
popf
imul
jns
pushf
enter
xor
out
daa
add
pop
mov
fs
ds
movsl
mov
push
jecxz
cs
jo
js
jno
add
mov
cmpsb
popf
mov
stos
iret
jne
sarl
and
fadd
inc
popf
outsb
xor
mov
mov
pop
sub
sub
out
sbb
mov
mov
inc
sarl
lcall
lea
adc
cmpsb
jno
or
outsb
push
and
push
in
add
inc
jnp
push
in
add
jnp
loope
add
and
orb
insb
xchg
sbb
push
js
xor
es
dec
leave
add
or
lcall
rcll
movsl
and
enter
lea
sbb
dec
adc
xor
roll
adc
shr
std
adc
adc
push
movl
sbb
jae
lret
inc
mov
lret
imul
push
je
or
add
filds
push
out
in
sbb
popf
push
bound
push
push
dec
xchg
xchg
popf
adc
xor
out
add
lea
jno
popf
sbb
notb
imul
add
outsb
popf
sbb
pushf
mov
popf
dec
ret
dec
jne
clc
jbe
and
popf
les
addb
pop
pusha
popf
or
pop
and
or
or
lods
andl
xor
add
mov
mov
dec
nop
lods
mov
push
adc
aad
rcrl
icebp
sbb
cmpsb
insb
popf
push
lcall
cmpsb
icebp
movsb
add
sbb
cmpsl
sbbl
je
rolb
push
lcall
imul
rolb
out
popf
push
andl
test
out
cld
call
xchg
and
jns
mov
cmp
mov
dec
add
bound
xor
xchg
pusha
sarb
and
movsb
adc
in
call
loope
sbb
sbbl
fwait
inc
rcll
push
cmp
adc
rcrb
bound
sahf
out
mov
push
or
jns
popf
adc
lds
popf
sbb
xor
mov
push
fsubs
imul
pusha
add
fldl
popf
and
or
push
out
test
lcall
xor
ja
shlb
into
popf
or
or
xchg
push
mov
popf
sbb
test
jle
insl
inc
mov
pop
jg
lock
mov
pop
jae
scas
adcl
sub
push
xchg
fsubr
inc
jge
sub
andl
js
jp
fsubl
insb
lea
push
popf
and
mov
push
inc
rcr
cs
aad
stc
mov
cwtl
pusha
mov
repz
cmc
nop
out
push
cmpsl
fisttpl
or
dec
jecxz
popf
mov
lea
add
adc
pop
rolb
inc
popf
jae
sub
jns
push
sub
jo
ficompl
aas
mov
shrb
popf
aad
shll
inc
popf
inc
sarl
mov
jg
hlt
js
popf
shl
ljmp
xor
roll
arpl
mov
adc
cmpsb
loope
popf
sbb
outsl
dec
inc
popf
mov
or
lahf
loop
pop
or
dec
inc
pusha
mov
out
insb
mov
popf
sarl
xchg
and
roll
inc
rcrl
popf
mov
xor
jl
jne
add
sbb
imul
xchg
mov
cmpsl
fnstcw
sub
push
insl
test
jns
mov
negl
fdivs
scas
mov
push
mov
mov
or
mov
sbb
inc
add
add
std
popf
add
andb
scas
call
and
push
and
aaa
insl
jg
jns
iret
repz
pop
out
sahf
out
mov
loopne
iret
repz
or
pop
xor
pop
jae
clc
add
pop
or
xchg
sbb
lods
andl
dec
ret
cmc
xchg
fmul
popf
sysenter
lea
pop
popf
xor
fnstcw
cwtl
xor
dec
xor
popf
sahf
in
xlat
adc
dec
popf
xchg
lods
pop
or
lea
push
ds
mov
les
adc
sub
jmp
imul
popf
push
pop
sbb
popf
inc
push
shlb
and
mov
xor
sbb
sbbl
sub
sti
pop
xchg
dec
rorb
or
cmpl
jb
pop
fs
pop
adc
stos
or
icebp
fcoms
loop
or
xchg
call
insb
push
lods
add
sahf
popf
out
pop
test
mov
mov
push
mov
andl
xchg
xorb
pop
dec
std
xlat
and
jmp
mov
add
nop
popf
xchg
pop
dec
push
cmp
xchg
xor
popf
nop
sbb
popf
jge
fmuls
pop
add
dec
add
mov
push
lcall
push
loopne
xor
pop
sbb
cmp
rcrb
push
xlat
inc
rcrl
popf
jp
andl
sub
xlat
adc
push
dec
roll
lock
popa
add
push
push
inc
jg
fdivs
pop
or
lock
je
xchg
xchg
or
ljmp
pushf
push
faddl
andl
daa
pusha
mov
sarl
das
mov
mov
les
test
push
bound
test
popf
xor
ret
imul
fimuls
adc
xor
xor
andl
int3
shlb
fdivl
je
bound
mov
cmpsb
xor
mov
sbbl
pop
mov
xchg
xor
xor
pop
push
or
lea
stos
push
add
sahf
pop
push
lcall
rclb
popf
xchg
out
push
or
sbb
mov
mov
loop
push
popf
mov
inc
enter
popf
stos
sbb
or
shlb
fyl2xp1
shlb
fildl
and
ds
mov
out
sbb
xor
rcll
mov
popf
sti
stos
add
push
cwtl
movsl
icebp
ljmp
insl
or
pushf
add
popf
cmp
andl
sbbb
lcall
sbb
jo
add
out
cmpsb
loope
popf
mov
lcall
rcll
call
lcall
arpl
fldl
dec
arpl
add
cmpl
adc
mov
sub
fs
sbb
shlb
mov
test
add
fldl
repz
icebp
mov
imul
cmp
mov
fnsave
fcoml
rcr
shlb
mov
add
push
fisttpll
sbb
ja
xor
scas
js
sub
push
pop
inc
rcr
jo
adc
xor
add
inc
shl
dec
scas
push
clc
or
fnsave
aas
adc
mov
mull
leave
push
push
jecxz
andb
add
or
arpl
fstpl
lock
sar
pushf
mov
and
fs
push
adc
and
out
cltd
push
sbb
push
dec
inc
adc
sti
movsb
ret
sti
inc
or
cmpl
add
pushf
jbe
or
into
repnz
add
jne
add
fstl
shlb
es
inc
pop
mov
scas
add
add
sbb
xor
stos
neg
ja
nop
push
sub
sahf
cmpsl
or
fisttpll
mov
fldl
jl
imul
and
adc
push
clc
and
stos
andb
add
and
loopne
mov
and
dec
arpl
negl
sbb
jmp
xor
dec
jecxz
frstor
dec
or
push
add
iret
sbb
or
pop
pop
mov
loope
or
mov
add
frstor
sbb
leave
ret
mov
ficomps
mov
fstpl
mov
in
dec
adc
jecxz
mov
jle
roll
and
cmp
imul
add
imul
cmpsb
popa
xchg
push
mov
arpl
test
test
jns
add
fdivs
adc
dec
arpl
dec
cmpsl
add
mov
andb
lcall
sub
jb
add
xchg
mov
mov
sub
es
xor
cmp
adc
pop
ja
inc
rcr
sbb
add
lea
ret
shll
imul
dec
inc
mov
fldl
xchg
add
imul
frstor
cmp
or
fmul
push
push
inc
rcr
xor
push
add
lock
cmpsl
mov
pop
inc
inc
rcr
add
vmaxsd
jo
inc
fisttpll
dec
add
mov
repz
push
es
add
push
jno
add
popf
js
mov
int3
add
push
fstpl
jp
out
mov
fnsave
add
sbb
fstpl
adc
mov
movsb
add
adc
xor
cwtl
bound
mov
dec
outsb
shrb
imul
cltd
or
sbb
jle
rclb
fstl
xor
fsubl
dec
add
or
add
and
mov
sub
sbb
cmpsb
jno
lret
andb
jecxz
add
adc
dec
fnstsw
scas
mov
or
xor
or
add
sub
adc
aam
push
mov
fnsave
add
mov
jecxz
mov
cmpsb
jno
inc
or
rcl
add
xor
adc
pop
add
or
xor
ret
xor
inc
leave
aas
ficoms
test
fnstsw
imul
mov
xchg
add
add
pop
lcall
pop
mov
mov
mov
fstpl
imul
movsl
fstpl
lret
push
jo
scas
lods
pop
push
cmp
push
adc
xor
jecxz
shlb
or
jbe
movb
fisttpll
jecxz
add
add
dec
fldl
xchg
sahf
or
frstor
pop
adc
fisttpll
add
pusha
or
fldl
lcall
cmpsb
mov
daa
mov
cmp
pop
mov
push
push
gs
and
mov
es
sarl
imul
sub
inc
rcr
dec
subl
or
fisttpll
push
mov
cwtl
push
lock
out
xchg
imul
sub
mov
fstl
sarl
mov
xchg
sub
or
or
adcl
frstor
xchg
cs
xchg
and
lcall
ja
cltd
sbb
and
cmpsb
jno
fisttpll
push
pusha
frstor
add
aaa
mov
add
xor
sub
frstor
mov
and
loope
push
leave
cs
test
or
or
dec
fstpl
sbb
xor
and
pop
inc
inc
rcr
push
inc
sarl
ffree
mov
fstl
shlb
inc
enter
jecxz
out
fisttpll
ds
daa
pop
sbb
aaa
add
sbb
or
lret
or
push
mov
fstpl
and
push
push
ja
jmp
xchg
or
and
cmpsb
xor
rcrl
ret
lahf
dec
dec
ja
inc
frstor
cmp
sub
inc
add
fisttpll
push
fstpl
dec
ret
add
mov
insl
aas
jmp
lcall
adc
push
mov
fisttpll
inc
sarl
dec
and
pop
jge
fst
xor
and
je
fucomp
loopne
mov
popl
lcall
ss
or
mov
jecxz
fldl
fucom
jo
pop
in
mov
inc
sbbl
ja
frstor
dec
jecxz
dec
popl
add
lret
cmp
test
fnsave
and
cmp
or
sbb
inc
xchg
mov
push
shlb
xor
xchg
add
shlb
dec
push
ljmp
movsb
fnsave
mov
mov
and
fnsave
push
sbb
sbb
inc
fstl
adc
inc
rcr
add
dec
arpl
frstor
or
push
and
mov
ds
add
call
shlb
add
add
dec
nop
mov
xor
test
adc
cs
add
adc
fldl
inc
add
or
in
das
push
pusha
fstp
enter
dec
ja
mov
shlb
push
cld
or
sbb
cmp
xor
pop
xchg
add
push
rcll
dec
fnstsw
add
lea
fst
xor
test
inc
or
cmpsb
jno
into
inc
dec
xchg
std
out
clc
or
shr
faddl
add
fnsave
loopne
sub
mov
enter
addl
mov
xor
shlb
inc
fucomp
push
mov
dec
mov
adc
xor
add
adcl
incb
adc
or
ret
push
push
fstp
in
call
fst
repz
dec
jecxz
insl
cmpsb
fnsave
js
add
les
sbb
cmpsb
fisttpll
inc
cmpsb
loope
scas
ss
and
lock
scas
shll
mov
fiaddl
mov
lcall
xchg
fstpl
add
add
add
in
out
jbe
or
fisttpll
sbb
fstl
add
lcall
les
add
sbb
mov
add
movb
or
dec
ret
neg
or
fldl
cmp
ljmp
fstp
dec
arpl
inc
adc
cmpsb
popf
pop
bnd
cmp
add
nop
ficomps
lcall
sbb
sbb
adc
xor
xchg
lcall
addb
cmpsb
popa
adc
test
scas
inc
push
dec
add
or
lcall
sbb
cmp
out
ljmp
testb
lea
inc
add
xor
shlb
pop
sbb
add
add
pop
es
ret
sbb
xchg
sub
ret
es
call
fnsave
ljmp
je
add
fldl
sub
push
andb
xor
pop
cmp
cmp
out
pop
add
xor
xchg
sub
fldl
jecxz
shlb
leave
sub
cmp
bound
lahf
mov
lcall
not
mov
push
jmp
xor
cltd
pop
or
cli
pop
imul
inc
sub
scas
sub
adc
cmp
push
shll
cltd
mov
push
inc
add
addr16
psrlw
jmp
adc
fucomp
lret
mov
inc
rcr
lods
mov
cwtl
stos
andb
dec
loopne
insl
or
frstor
fisttpll
addl
fldl
jnp
sbb
pop
push
push
dec
in
cmp
aas
pop
movups
dec
jecxz
sub
fldl
or
fisttpll
mov
lock
add
lret
pop
pop
inc
rcr
jnp
dec
loop
aaa
arpl
or
dec
movsb
lea
push
frstor
shll
xor
stos
inc
sub
or
rcr
and
popf
or
fnstsw
out
sbb
mov
scas
cmp
push
shlb
mov
and
movsl
dec
mov
pop
inc
add
fwait
inc
inc
shll
fucom
sbb
imul
cmpsb
popa
es
pop
lock
sbb
mov
xchg
ffree
mov
fisttpll
push
fst
xor
mov
test
add
cmp
shll
xchg
xor
fwait
lods
iret
xchg
push
xchg
dec
pop
or
shlb
cmpsb
popa
rcr
scas
sub
jae
dec
ja
push
pop
sbb
xor
inc
sub
cltd
sub
or
jbe
mov
cmpl
popa
mov
fstl
imul
testb
xor
pop
push
add
push
call
or
shrl
shll
ds
cmp
inc
inc
frstor
xor
mov
sub
push
add
fcoml
rcr
pusha
scas
das
sub
adc
mov
mov
sub
push
mov
add
dec
sarb
adc
xor
adc
add
cmpsb
fisttpll
jno
clc
dec
inc
sarl
lcall
jecxz
add
clc
and
fistpl
fldl
cmpsb
loope
adcb
dec
jecxz
sbb
test
fsubl
adc
xor
sub
int3
sub
dec
adc
dec
cmp
xor
sti
and
loopne
add
xor
adc
jo
dec
adc
pop
jecxz
push
inc
inc
rcr
push
loopne
add
frstor
or
ret
or
cmp
jg
ret
add
or
sub
testb
xor
inc
outsl
jg
xchg
push
ret
and
add
or
orb
rcrl
cs
push
add
dec
arpl
frstor
mov
frstor
lea
mov
frstor
frstor
imul
sub
add
fldl
or
ja
xor
mov
cmp
mov
inc
repz
sarl
cmpsl
outsl
dec
or
mov
fcoms
push
xorb
xlat
jb
xchg
gs
add
add
push
add
add
xor
mov
inc
inc
sub
jle
inc
add
push
je
test
test
pop
xchg
call
sbb
shll
add
pop
jg
inc
lock
xor
into
sbb
xor
jnp
jge
das
push
or
push
dec
rorl
sbb
inc
xor
or
adc
xchg
into
imul
add
dec
shlb
sub
sub
push
adc
or
push
adc
push
fldl
sarl
loope
xor
or
pop
scas
sbb
sbb
mov
sbb
jns
or
pop
inc
push
cltd
push
cmp
mov
imul
cmp
adc
xor
sbb
inc
sub
inc
jmp
pop
xor
fcompl
or
or
stos
cwtl
rcr
aam
ja
popa
call
sbb
mov
or
notl
push
fldl
dec
ret
add
xchg
and
roll
je
pop
in
dec
js
push
jo
mov
loop
sbb
adc
xor
add
inc
add
fldl
or
sub
lahf
adc
mov
or
stos
loopne
dec
cmp
fstpl
add
in
xor
or
ffree
cmp
lcall
rcrl
adc
aaa
and
fst
adc
mov
mov
and
push
inc
inc
frstor
mov
inc
add
frstor
cmpsb
jno
frstor
xor
mov
imulb
rcr
aas
adc
fadd
sahf
pop
call
cwtl
adc
add
or
jns
add
shlb
push
mov
xor
mov
popa
xor
xor
stos
sbb
addb
dec
inc
je
xchg
frstor
cmp
mov
dec
arpl
xor
adc
fstpl
adc
frstor
dec
fnsave
push
js
add
and
xor
and
hlt
daa
push
sbb
push
mov
fnstsw
sub
fldl
jo
jns
rcrl
dec
inc
enter
inc
fstp
jecxz
add
aam
adc
add
mov
movsb
shl
std
fmull
fst
xor
inc
xor
lahf
pop
andb
dec
loopne
fucomp
xchg
insl
jmp
inc
add
insb
fnsave
inc
shll
dec
jecxz
mov
fnsave
xor
rcll
fimuls
push
inc
test
lcall
lcall
mov
pop
mov
pusha
or
inc
add
mov
mov
fldl
lea
sbb
push
clc
push
cmpsb
popa
scas
or
addr16
movsl
je
sbb
jb
add
pop
pop
sub
and
rcr
cmpsb
outsb
sub
adc
xor
movsb
imul
add
jb
push
xchg
pop
mov
sbb
andb
cmpsb
jno
mov
test
into
ja
sub
jmp
cmp
fldl
js
sbb
push
sbb
out
push
inc
xor
adc
fstp
mov
sbb
ljmp
or
add
mov
xor
or
sub
in
mov
mov
call
pop
add
sub
popf
inc
inc
shll
lcall
xor
in
and
ficoms
das
add
xor
repnz
xor
aas
adc
fldl
lcall
sbb
sbb
shlb
pop
fcmovnu
or
cs
inc
sarl
sbb
sahf
fsubrl
or
adc
and
adc
fstpl
jnp
dec
fstpl
add
fisttpll
and
push
push
xor
add
jno
adc
pusha
pop
jmp
cld
push
jo
lcall
sbb
jns
mov
or
lret
test
sbb
mov
and
mov
xor
push
inc
sarl
andb
inc
sarl
add
mov
xchg
and
andb
loope
shlb
add
outsb
add
rclb
or
in
push
or
shlb
movsb
daa
cmp
sbb
jecxz
add
push
add
cmpb
xor
fstl
adc
push
cmp
pop
call
push
mov
add
pop
adc
adc
xor
jnp
sbb
and
and
add
frstor
dec
sbb
inc
shll
sbb
inc
inc
sbb
and
mov
push
addb
add
or
scas
jle
fldl
and
sbb
mov
add
les
xchg
mov
insb
or
andb
lock
nop
adc
les
or
aaa
xchg
adc
fisttpll
stos
add
pop
mov
and
adc
ret
lcall
shlb
or
out
cmpsb
jno
adc
sub
sbb
cld
loopne
sbb
lcall
xor
sarl
stos
andb
shlb
stos
movsl
inc
fisttpll
jne
and
hlt
punpckldq
movsb
push
push
stos
pop
fldl
xor
inc
inc
fstpl
cmpsb
popa
inc
fst
xor
les
les
fnstsw
out
das
push
sub
or
ffree
aas
or
out
fldl
js
int
imul
shrb
fnsave
mov
sbb
mov
lcall
pop
cld
ds
mov
mov
adc
ljmp
or
dec
add
dec
sbb
xchg
xor
inc
fisttpll
dec
mov
test
or
shlb
sub
imul
mov
xchg
mul
cli
outsb
cmp
loopne
addl
mov
xor
and
add
sub
and
mov
pop
sbb
sub
dec
sbb
or
sbb
lcall
fsubs
call
and
addl
sub
push
add
fst
mov
call
push
inc
lcall
rcrl
jo
lcall
push
out
stos
sbb
icebp
inc
dec
cmp
jo
push
adc
rcll
rcr
bound
fnsave
ret
pop
add
jl
inc
dec
sbb
add
arpl
add
and
add
pop
adc
jmp
jp
cmpsb
loope
sub
add
addb
loope
aam
dec
jbe
in
mov
aaa
adc
xor
js
loop
push
mov
ret
gs
pop
xor
sub
negb
and
xchg
sub
fstpl
and
add
inc
sarl
xchg
fcoms
sub
push
shll
xor
fwait
or
mov
add
mov
push
inc
rcr
movsb
add
add
jb
fstpl
sub
dec
sbb
std
xor
or
cmp
adc
adc
fstl
xor
sub
dec
arpl
or
arpl
add
inc
add
inc
inc
sarl
push
fst
xor
adc
adc
lahf
repz
dec
sub
add
push
inc
shll
sub
rorb
imul
inc
shll
pusha
lock
pop
push
jbe
imul
mulb
fucom
and
jecxz
orb
inc
jns
roll
fstl
fldl
cmp
loopne
fstl
in
mull
mov
add
jo
js
fisttpll
push
xor
xor
cmp
mov
ficoml
sbb
jp
stos
or
pop
je
or
dec
test
lcall
or
xor
fmuls
out
push
sub
or
dec
xchg
enter
or
dec
pushf
pop
shll
outsb
sub
fcoml
fisttpll
dec
stc
and
add
popl
lcall
cmpsb
popa
cmp
push
sub
dec
ret
mov
call
scas
inc
add
xchg
out
sbb
push
fldl
dec
jecxz
push
fldl
dec
jl
xlat
jle
xor
or
mov
repz
movsb
hlt
mov
das
ret
dec
xor
dec
push
imul
sysret
outsb
inc
jne
fisubl
outsb
pop
orl
mov
dec
inc
cmpl
inc
shll
xor
xor
clc
pop
or
mov
push
rcrb
sub
in
or
out
icebp
imul
sbb
fsubs
mov
or
insb
test
add
and
ds
loop
jo
rcr
mov
or
lcall
pop
gs
inc
fnsave
es
pop
xchg
adc
xor
lcall
adc
pop
rcr
xor
roll
fstl
loopne
rep
push
dec
fs
insl
outsb
test
arpl
js
dec
or
add
add
adc
insb
add
adc
inc
jle
test
icebp
sbbb
mov
lea
push
and
add
or
sbb
fldl
lcall
pop
cmpsb
dec
das
les
add
and
pop
add
test
orb
cmp
fsubl
add
cmpsl
fldln2
fcoms
and
daa
mov
xchg
ret
inc
rcrl
out
push
repz
fucom
xor
add
sub
mov
into
sbb
add
or
addr16
adc
xchg
push
adc
adcl
lcall
pop
wbinvd
mov
cmp
or
fldl
pop
out
sbbb
fstpl
push
dec
add
rorl
popf
ficoms
scas
add
movsb
andb
sbb
andb
scas
sbb
je
adc
dec
sahf
out
sbb
push
into
pop
dec
jle
dec
and
mov
add
scas
add
mov
popf
and
insl
inc
fstpl
cmpsb
sub
aas
jge
add
mov
mov
in
js
and
loop
lds
clc
sbb
jne
pop
fdivs
stos
andb
rol
dec
inc
inc
push
dec
sbb
mov
pop
add
push
out
rorb
lahf
pusha
mov
lcall
xor
fucom
inc
rcrl
mul
shll
loopne
out
jmp
data16
pop
movl
lcall
xor
das
fstpl
push
add
xor
xor
dec
ret
dec
push
clgi
and
add
shlb
adc
in
and
pop
or
shlb
imul
scas
sub
jg
jp
sarl
in
ret
push
dec
and
dec
neg
inc
call
inc
adc
fisttpll
jecxz
das
shlb
mov
mov
ret
ret
test
xor
jno
mov
pop
push
rcr
mov
sbb
push
inc
rcr
dec
inc
out
or
fldl
push
aaa
push
mov
imul
aaa
daa
int3
ret
imul
pcmpgtw
or
fstl
mov
popl
lcall
dec
and
xor
orb
fldl
add
es
andb
mov
adc
fldl
sbb
aad
fnstsw
shll
cmp
xor
push
inc
fnsave
hlt
aad
rcr
and
movsl
pop
add
enter
das
ret
cmpsb
and
xor
mov
mov
fstl
jecxz,pt
sub
sbb
fistpll
ret
add
rcr
or
addr16
dec
jecxz
add
or
pushf
pop
loop
add
test
cmpsb
popa
add
mov
push
fldl
push
shlb
adcb
andb
push
mov
into
push
or
add
fst
sbb
in
xchg
xor
push
inc
fldl
rcr
fs
sarl
dec
arpl
push
fldl
in
add
fnstsw
ds
add
sbb
adc
and
into
sar
call
or
xor
fldl
mov
leave
add
mov
mul
cmpsl
andb
xor
ja
xor
lahf
popa
pop
dec
push
xor
xchg
loop
insb
xlat
add
sub
sbb
xor
imul
dec
add
roll
jecxz
frstor
mov
fucom
push
cmpl
pop
iret
pop
add
dec
pop
and
or
shlb
ja
pop
and
fcoml
frstor
lcall
bound
add
xchg
pop
dec
inc
adc
or
sarl
cmp
fstpl
loope
fldl
mov
fldl
sarl
push
or
lret
dec
jecxz
jle
or
call
fldl
cmpsl
inc
inc
rcr
pop
push
aaa
loopne
or
roll
fldl
dec
jecxz
or
fisttpll
xchg
mov
in
dec
inc
inc
mov
add
aam
inc
mov
out
jae
push
jns
pop
jle
lock
push
dec
and
call
jecxz
push
fisttpll
xor
jecxz
inc
add
pop
sbb
dec
fldl
aaa
push
pop
xchg
dec
jmp
or
shlb
out
cmpsb
loope
xor
jp
xchg
mov
out
je
rcr
mov
cmp
fistl
addb
cld
mov
add
dec
ret
fnsave
inc
jle
mov
fisttpll
and
xchg
lds
stos
andb
inc
test
fst
sbb
adc
sbb
inc
inc
fnsave
xlat
push
mov
imul
mov
xchg
add
or
mov
sbb
inc
fstl
push
adc
xor
adc
shlb
push
cld
xchg
sbb
ficomps
loopne
sbb
jle
inc
inc
rcr
xchg
sbb
mov
mov
gs
push
add
ret
cmp
lahf
cmpsl
and
dec
jecxz
pop
jge
push
cmpsb
jno
add
mov
sbb
cmp
add
and
mov
cmpsb
jno
cmp
arpl
pop
mov
fcoms
push
call
adc
xor
in
jl
inc
dec
call
mov
xchg
push
ffree
dec
lock
mov
std
or
out
mov
add
aam
pop
out
in
loopne
fstp
sbb
or
pusha
les
or
dec
jecxz
add
adc
xor
cmp
or
fldl
into
cmp
push
push
mov
lcall
sbb
mov
ret
and
adcl
mov
add
push
aad
jo
or
fldcw
push
inc
rcr
flds
dec
fldl
mov
out
js
inc
fnstsw
ljmp
dec
add
fldl
lcall
loop
jmp
push
faddl
fstl
dec
jecxz
mov
pop
sbb
frstor
out
lea
mov
fcoml
fstl
sub
mov
push
inc
rcr
js
pop
lock
pusha
push
inc
fstpl
fstl
fcoml
shlb
mov
add
inc
shll
fst
cmp
negb
xor
fstpl
push
and
xor
add
fldl
fcmovb
mov
add
fcmovb
mov
cwtl
push
cmp
xor
mov
inc
cmp
data16
lcall
add
lcall
movb
add
adc
frstor
pusha
fnsave
sub
adc
or
andb
adc
xor
inc
cwtl
andb
in
adc
fidivrl
push
call
xor
push
and
add
dec
jecxz
add
add
nop
mov
lcall
push
addb
sbb
or
dec
and
xor
sbb
adc
ret
pop
adc
fst
aas
ja
add
cli
mov
int3
cltd
pop
in
push
mov
rcr
dec
inc
ja
shlb
push
push
add
fnstsw
cli
adc
dec
ret
loop
stos
adc
xor
dec
frstor
sbb
fstpl
push
cwtl
xchg
out
inc
je
mov
repz
in
in
xor
andb
mov
fstpl
jo
add
sti
mov
push
mov
loop
shlb
mov
mov
adc
adc
adc
fldl
lods
pop
add
aam
sub
push
mov
sub
cmp
dec
jecxz
fldl
dec
test
jecxz
push
fisttpll
add
fnsave
lods
or
sbb
jo
lret
inc
xchg
dec
add
mov
andb
sbb
fstpl
out
or
mov
xor
out
or
inc
sti
je
jecxz
adc
je
out
add
inc
pop
dec
jecxz
rcr
sbb
fstl
push
pop
add
fnstsw
adc
xor
push
fstpl
int3
imul
pop
jecxz
sub
inc
add
adc
mov
shlb
sub
push
js
mov
pop
sbbb
push
jb
addr16
dec
inc
adc
xor
test
pop
movsl
pop
mov
push
xchg
mov
add
shlb
imul
add
shll
pushf
sbb
lods
andl
frstor
jno
fstl
shlb
mov
fldl
push
in
sbb
lcall
xchg
fst
inc
movsb
sbb
xor
bound
lcall
jl
scas
dec
imul
and
push
and
push
add
aas
jae
xor
repz
dec
arpl
add
fisttpll
sbb
push
dec
mov
adc
xor
push
je
inc
shll
cmpsb
xor
push
fucom
mov
or
or
fstpl
inc
cmp
ja
adc
fldl
xor
mov
pop
out
inc
inc
rcr
and
dec
push
cmp
pusha
or
fstpl
rcr
push
inc
inc
shll
xchg
pop
jmp
add
mov
inc
rcr
sbb
xchg
sbb
les
fldl
fst
mov
das
dec
jb
xor
iret
xor
adc
mov
andb
add
sbb
mov
shlb
sub
and
or
in
push
add
ret
adc
xor
mov
push
dec
inc
movsl
mov
cmp
add
les
fisttpll
andb
sbb
pop
pushf
fstp
push
sarb
fsubr
cld
aas
jecxz
shlb
add
pop
inc
inc
sarl
fisttpll
push
fnsave
push
sub
adcl
sub
add
add
dec
fldl
sbb
sbb
dec
add
push
cmp
sub
pusha
shlb
xchg
pop
adc
push
js
mov
pop
adc
fbld
movsb
jle
add
or
or
xchg
in
sub
mov
fldl
fstpl
testb
cmp
and
push
sub
push
push
loopne
inc
jno
lods
or
ret
or
push
adc
xor
sub
fisttpll
add
xor
adc
push
or
rcr
dec
test
lcall
ljmp
movsl
push
sbb
lea
lea
loopne
cmpsb
xor
xor
xor
mov
arpl
xchg
sbb
adcl
sbb
jb
sbb
jbe
cmpsb
add
or
and
iret
clc
in
call
icebp
mov
adc
fldl
sbb
jmp
popl
call
inc
cmpsl
cmp
mov
mov
cld
mov
add
lcall
shrb
fst
cmp
push
fnstsw
inc
inc
rcrl
and
or
ja
xor
add
lea
xchg
push
adc
mov
call
or
add
lea
and
loope
imul
mov
decb
and
fsubs
mov
fs
dec
ss
adc
fwait
or
fidivrs
push
inc
push
arpl
loope
sbb
lcall
xchg
sbb
imul
sbb
xchg
adc
rcrl
pop
inc
fstpl
cmp
mov
push
sbb
dec
adc
xor
add
fmuls
or
bnd
in
stc
push
or
add
or
mov
cmpsb
jno
sub
cmp
or
push
lcall
fwait
add
int3
sbb
push
dec
add
adc
fstpl
cmpsb
fldl
fst
xor
sbb
ret
adc
adc
xor
lods
or
inc
fisttpll
rcll
dec
sub
inc
add
fstl
mov
lret
adc
fstp
das
sbb
aas
mov
imul
xchg
push
mov
add
lea
lcall
jae
test
dec
ret
push
dec
xchg
pop
pop
add
or
mov
lcall
jne
subb
add
push
mov
and
add
shlb
xchg
or
outsb
inc
add
jae
cmp
push
mov
sub
inc
rcr
out
sbb
sbb
fisttpll
adc
call
sbb
mov
cmpsb
loope
fldl
cmpsb
loope
out
fstpl
mov
dec
adc
push
dec
inc
lea
push
add
pop
xor
icebp
andb
mov
inc
cltd
popf
adc
xor
cli
add
jle
sbb
pop
mov
sub
rcrl
push
or
sub
lahf
or
or
xor
ss
aaa
or
daa
test
lea
inc
pop
nop
sbb
rcll
lock
xor
cmpsb
jno
test
mov
ret
push
sub
popf
jecxz
xor
in
imull
popf
ret
sbb
sub
sti
or
frstors
imul
cmp
lret
es
in
inc
xor
cmp
xor
in
sub
test
or
or
sbb
fs
jle
adc
cmp
lret
jo
jecxz
push
es
mov
add
add
xor
ss
imul
adc
das
es
aas
sub
inc
pusha
ljmp
sbb
mov
xchg
jns
call
movsl
add
add
sbb
push
orl
xchg
scas
and
pop
scas
dec
and
cmp
scas
mov
lods
les
repnz
or
inc
cltd
sbb
xor
or
sub
in
movsb
inc
pop
add
repnz
mov
inc
cltd
and
xchg
lods
pop
xchg
lods
lret
cmp
xchg
lods
cmp
test
sbb
fdivrs
sbb
and
sbb
mov
cmp
xor
movsb
inc
aad
stos
sbb
pop
xchg
mov
test
jno
sbb
sbb
mov
or
clc
shlb
cltd
xchg
sub
adc
lret
jecxz
and
mov
mov
xchg
imul
mov
push
call
and
sbb
cmp
jbe
pop
cmc
sub
sbb
lret
mov
imul
xor
or
inc
int3
add
cmpsl
decl
leave
and
add
or
and
xchg
imul
dec
jecxz
adc
je
mov
sub
jo
sbb
dec
sahf
mov
dec
jecxz
lods
test
or
or
pop
das
and
sub
or
idivb
and
sbb
mov
adc
jl
dec
and
sbb
scas
pop
cmc
movsl
data16
sbb
add
movsl
add
inc
or
cmp
pop
jb
test
aas
cmp
cmp
xor
js
mov
or
add
fs
inc
mov
pusha
adc
xor
mov
sbb
xchg
mov
inc
test
sbb
fists
outsl
cmp
pop
add
out
push
inc
sub
sbb
mov
add
movsb
sbb
adc
sbb
xchg
add
adc
adc
sub
sbb
dec
ret
outsb
sbb
dec
sbb
mov
sbb
mov
or
sbb
in
cltd
test
in
push
sbb
mov
add
sbb
pop
inc
sbb
cmp
adc
lea
imul
xchg
sbb
mov
push
mov
lods
jge
add
push
xchg
fstpl
sbb
sbb
sbb
imulb
sbb
adc
pop
sbb
push
sbb
or
pop
out
inc
test
sbb
or
sbb
sbb
add
sbb
cmp
mov
cwtl
xor
fistpll
inc
cltd
xchg
stc
xchg
xor
sbb
fs
or
lods
push
sub
mov
scas
push
aaa
push
inc
dec
cmp
cmpsb
jno
sbb
mov
mov
or
push
cmpsb
mov
mov
xchg
pop
or
imul
and
xchg
imul
jno
adc
mov
dec
xchg
add
sbb
out
sbb
mov
xor
or
orb
lret
push
sbb
xchg
sbb
mov
aas
push
cmpsb
jno
out
arpl
test
mov
mov
sub
imul
imul
xor
inc
cltd
sbb
flds
int3
rcll
sbb
inc
push
push
adcb
mov
jnp
imul
out
popa
add
xchg
sbb
bound
test
lea
xor
sbb
add
jp
js
adc
and
in
add
xchg
sbb
add
or
je
and
bound
mov
xor
ficoms
adc
sbb
inc
cltd
sbb
test
sbb
sub
sbb
sbb
and
sbb
imul
imul
mov
dec
jecxz
inc
sbb
push
mov
adcb
mov
dec
arpl
repnz
or
sbb
sahf
xchg
adcb
mov
mov
cmp
push
test
imul
pop
push
test
lea
inc
push
sbb
inc
sbb
mov
adc
sarl
mov
cmpsb
jno
push
sbb
stos
push
sbb
test
sbb
sub
mov
inc
adc
adc
mov
dec
ret
cmc
jnp
les
inc
outsb
inc
lock
push
adc
and
jle
sarb
dec
ret
mov
dec
inc
add
call
sbb
mov
pop
inc
jecxz
lret
jge
lret
jnp
adc
or
sbb
mov
push
test
lea
fistpll
sbb
push
scas
mov
sbb
sbb
sbb
sub
sbb
cmp
inc
jno
inc
sbb
add
lds
sbb
pop
pop
push
xlat
rcr
pop
push
ds
inc
cltd
xchg
pop
push
sub
jo
pop
xor
rolb
mov
unpckhps
dec
or
inc
sub
xchg
sti
adcb
int3
mov
leave
push
cmpsb
mov
pop
mov
pop
sbb
add
aad
cmp
add
loope
in
incb
xchg
dec
std
sarb
inc
std
cmpsb
xor
or
inc
cmpsb
fstpl
or
dec
inc
aam
pop
and
loopne
fnstsw
sbb
and
sbb
std
cmp
add
inc
jl
adc
shlb
xor
push
cltd
dec
jo
std
loope
test
inc
cmpsb
std
and
and
std
nop
lcall
pop
dec
je
xor
xor
repnz
sbb
mov
std
cmp
cmp
inc
cmpsb
icebp
adc
std
or
cmp
addl
std
sti
out
pop
xor
nop
imul
enter
notb
dec
ret
dec
std
sbb
or
sarl
sbb
cmpsb
nop
imul
sbb
faddl
cmp
cmp
fs
js
ja
dec
arpl
sbbb
cmp
mov
mov
or
lods
mov
fcomi
inc
sbb
mov
jo
jecxz
push
std
dec
mov
std
xor
sarl
adc
push
mov
mov
and
sbb
sbb
shlb
cmp
jno
shll
mov
cmp
lea
popl
sbb
push
rcrl
xor
sbb
enter
ss
pop
hlt
shlb
adc
std
sbb
jbe
std
jp
mov
std
imul
std
js
mov
pop
xchg
xor
add
movsb
jbe
push
orb
xor
jbe
xor
mov
sbb
and
sarl
xchg
lods
outsl
enter
std
jb
shll
bound
mov
or
sbb
std
pop
and
call
icebp
cmp
adc
movsb
repnz
lret
add
xor
inc
ret
mov
jb
or
test
or
nop
std
ljmp
push
cltd
mov
std
sbb
andps
and
mov
cmp
loope
std
or
dec
push
push
dec
outsl
repz
repz
movsl
dec
arpl
std
jne
inc
ret
push
xchg
inc
stos
add
push
cltd
std
ljmp
std
push
cltd
loopne
or
and
mov
inc
dec
aam
mov
std
int
cmpsb
loope
cmp
adc
enter
and
sbb
jno
std
mov
ret
add
inc
xchg
mov
jne
xor
dec
arpl
hlt
jecxz
inc
xchg
inc
ja,pn
xchg
jle
cmp
lds
sarl
cmpsb
and
push
stos
std
int3
and
push
cltd
std
mov
insl
cmp
or
xchg
std
xor
aaa
lds
pop
mov
std
cld
sbb
inc
sbb
loopne
inc
cmpsb
std
test
pop
jb
aas
insb
sbb
xor
ret
dec
sbb
sbb
test
hlt
and
dec
pushf
jo
and
std
enter
push
pop
fcompl
dec
sbb
dec
cmpsb
dec
fs
xchg
std
adc
xor
sbb
int
mov
lahf
sub
sbb
mov
mov
and
mov
sbb
dec
ret
out
dec
fsubrl
xchg
imul
push
mov
aaa
adc
xchg
js
andl
sbb
inc
xor
jp
inc
bound
sti
sub
sbb
or
push
adc
ret
and
sbb
xchg
imul
stos
dec
cmpsb
jno
sbb
xor
xor
cwtl
or
fs
adc
sbb
adc
cmp
adc
xor
fildl
in
sarb
fisubrl
int3
addl
add
cltd
xchg
sbb
in
in
jecxz
rorb
aad
mov
push
testb
cltd
sbb
mov
sub
xor
rclb
dec
jecxz
sbb
mov
xor
cmc
negb
dec
inc
xor
xchg
add
aaa
push
jmp
xchg
mov
xor
sbb
add
sbb
rorl
sbb
inc
xchg
sbb
xor
push
cmpsb
mov
mov
push
rol
js
imul
push
inc
rol
and
sbb
sbb
sbb
dec
sbb
add
inc
mov
and
pop
xchg
sbb
mov
in
es
es
and
lea
es
pop
inc
xor
and
pop
xchg
dec
sbb
dec
cmpsb
sbb
and
sbb
xor
cltd
dec
sbb
jecxz
sbb
jno
sbb
lds
sbb
inc
fisubs
sbb
hlt
frstor
sbb
loopne
sbb
add
aaa
dec
jecxz
sbb
lcall
pop
sbb
nopl
call
in
jl
ds
call
dec
and
nop
sub
call
in
sub
mov
fsubl
xchg
movaps
pop
fisubrs
call
dec
ds
call
sbb
stc
and
call
dec
jecxz
outsb
es
int
sbb
xor
dec
cltd
pop
inc
sbb
das
and
call
xchg
fistpl
lods
fistpl
call
cld
inc
sbb
mov
cmpsb
mov
and
inc
sbb
add
lock
xor
or
dec
arpl
repnz
jae
or
repnz
inc
xor
mov
rcrb
rcll
ja
xor
inc
xor
leave
xor
add
mov
repz
push
and
sbb
dec
cmpsb
sbb
xchg
dec
sbb
and
ja
xor
mov
ds
ds
mov
pop
dec
dec
cmpsb
jno
jb
fsts
stos
push
sbb
lcall
ret
mov
cmpsb
loope
orb
push
sbb
dec
sbb
inc
and
sbb
cltd
xchg
xchg
xor
rcrl
mov
sbb
mov
mov
cmp
and
cwtl
les
push
ficoml
push
push
push
xchg
sbb
adc
sbb
push
inc
xor
sbb
fs
sbb
leave
adc
xor
or
sbb
jge
or
push
arpl
call
inc
xor
jecxz
push
xor
adc
in
sbb
scas
and
mov
sbb
jno
and
cmp
jecxz
dec
sbb
adc
movb
sbb
cltd
sbb
dec
ret
sub
xchg
push
dec
popw
add
sub
lock
scas
dec
cmpsb
jno
lret
dec
cmpsb
jno
sbb
pop
or
xchg
dec
jecxz
sbb
mov
push
sbb
jge
jl
and
mov
cmp
std
inc
and
push
inc
xor
pushf
lock
xchg
pop
leave
xor
xchg
ljmp
sbb
sbb
shrl
in
inc
xchg
push
arpl
sub
xor
pop
add
dec
arpl
sbb
or
or
stos
sbb
and
add
sbb
popa
sar
xor
and
cmp
push
pusha
sbb
dec
push
test
out
sbb
test
cltd
jmp
mov
mov
sbb
push
and
popa
push
sarl
inc
cmpsb
jno
and
sbb
sbb
adc
leave
xor
sti
mov
sbb
or
mov
js
mov
xchg
imul
popa
inc
sbb
xchg
sbb
ret
sbbb
push
sbb
ds
les
hlt
dec
inc
lea
jno
inc
xor
dec
cmpsb
sbb
test
sub
adc
xor
js
and
sbb
jle
pop
jne
xor
fucomp
nop
imul
xchg
into
std
push
cltd
dec
outsb
frstor
sarl
inc
sub
sbb
or
fimuls
sbb
and
push
xor
pusha
sarl
jno
dec
sub
and
xor
and
cltd
xchg
fstl
js
jecxz
loopne
lods
push
popa
ret
frstor
fidivrl
mov
rcr
icebp
cmpsb
mov
jo
mov
push
jle
shlb
fnsave
mov
mov
sub
cltd
adc
mulps
mov
dec
lds
shll
fcoms
dec
mov
inc
cmpsb
mov
xor
aad
mov
cmc
and
pop
jp
mov
xchg
out
fs
adc
call
and
mov
sbb
push
hlt
mov
pop
or
cmp
nop
imul
cs
fsts
dec
xchg
mov
xor
push
cltd
mov
jne
mov
in
sarl
jb
pop
or
dec
inc
xor
sbb
mov
orl
xchg
cmp
nop
imul
mov
mov
xchg
inc
mov
imul
cmp
push
push
xchg
jne
mov
cmp
jno
enter
or
pop
sbb
inc
sub
psubd
faddl
dec
jle
inc
ss
pop
daa
leave
pop
jecxz
and
xor
xor
push
xchg
mov
pop
dec
mov
test
dec
jecxz
cmp
adc
mov
sbb
fcmovbe
aam
push
mov
xor
xchg
push
cmpsb
icebp
adc
xchg
pop
sbb
mov
inc
test
inc
or
add
cwtl
mov
dec
fsubs
cmp
mov
mov
loope
add
cltd
movb
imul
popa
pminsw
xor
lea
lock
xor
cmp
ret
sbb
push
pop
sbb
shlb
shll
cmpsb
jno
addr16
enter
daa
push
jo
pop
push
fs
adc
inc
dec
inc
pusha
add
add
frstor
xor
adc
dec
sbb
pusha
imul
and
enter
inc
cmpsb
mov
icebp
mov
xlat
add
cmp
inc
cmpsb
icebp
into
and
cmp
fldl
xor
fistps
add
mov
sbb
nop
fucom
test
fnstsw
enter
and
mov
jo
push
cmp
nop
imul
cmp
mov
pmulhuw
xlat
push
add
inc
push
jns
daa
stos
add
cltd
sbb
mov
and
fnstsw
lahf
shrl
das
pop
xor
test
test
test
xchg
adc
xor
enter
add
xor
ja
inc
cmpsb
xor
nop
imul
nop
imul
dec
fstp
cmp
and
sbb
add
rcll
mov
lea
frstor
cmpsl
cltd
pop
sbb
mov
ss
cli
pusha
cmp
nop
fucomp
pop
push
bnd
jl
jle
jl
jae
cmp
bound
dec
or
or
or
add
cmc
cmpsb
rcll
adc
rcr
lock
sbb
xor
cltd
xor
jecxz
in
and
nop
adc
sbb
and
aam
lea
dec
pop
sbb
fnsave
add
rcl
loope
bound
push
mov
je
cmp
inc
cmpsb
jno
test
cmpsb
mov
mov
add
sbb
cmp
pop
adc
in
mov
insb
or
push
push
sbb
cmp
xchg
cltd
frstor
push
xchg
sub
mov
push
dec
out
nop
imul
xchg
or
xor
lock
or
xor
shll
xor
rcrb
push
jg
dec
sub
fcomps
enter
mov
xor
push
cltd
fisttpll
ficoml
pop
push
jns
fcoml
and
xor
loopne
frstor
mov
jo
fstl
aaa
sbb
or
cmp
into
daa
nop
xchg
cmp
imul
iret
into
mov
nop
fstpl
lds
enter
and
cltd
mov
leave
popa
movd
pusha
and
out
fdivs
push
pop
into
xor
fnsave
repz
xchg
lret
inc
sub
fstl
mov
add
stos
jg
push
scas
pop
aad
loop
test
lahf
and
frstor
xchg
pop
aas
push
pop
adc
mov
cmpsb
fstpl
cli
ret
popl
dec
repz
int
sbb
cmp
sub
fucom
and
stc
and
push
cli
fstp
mov
fucomp
nop
imul
cmp
jno
push
fstl
ret
test
fstl
test
xchg
ljmp
jp
push
xchg
pop
xchg
fstl
cmp
dec
sub
cmp
sbb
push
or
enter
fnstsw
push
sbb
mov
push
in
add
cmp
mov
xor
jne
xor
aas
fisttpll
or
aas
pusha
mov
xor
loop
imul
push
and
lea
lock
xor
mov
ja
popa
fisttpll
cltd
pop
push
xor
inc
cmpsb
jno
xchg
sbb
lret
sbb
xchg
fcoml
fisttpll
inc
call
xor
gs
xor
cmp
sbb
mov
or
adc
xchg
cmpsb
push
shlb
daa
cmp
out
lahf
addb
xor
jne
xor
aam
fnstsw
sbb
mov
jo
cmp
sbb
xor
rcr
cmpsb
xor
add
loope
mov
mov
mov
push
cltd
movb
fisttpll
jo
adc
push
fs
in
push
push
movsw
popa
inc
sbb
ffree
dec
call
fstl
adc
cmp
xchg
push
mov
pop
dec
addr16
fs
mov
fsts
fnsave
out
dec
call
mov
xchg
xchg
push
dec
shlb
frstor
jmp
nop
frstor
lret
xchg
pop
icebp
imul
pop
mov
nop
fstpl
frstor
push
xchg
fisttpll
xchg
test
scas
inc
xchg
sbb
xchg
jl
xor
dec
or
mov
fstpl
lea
cmp
sub
sbb
sub
or
sbb
add
sahf
repnz
inc
xchg
push
xor
loopne
imul
or
adc
shll
shll
js
fnsave
in
push
out
out
dec
shlb
ffree
and
jo
fldl
andb
adc
cmp
push
xchg
cmp
jno
xor
pop
and
sbb
ja
xchg
inc
ss
cmp
frstor
lea
and
sbb
fs
jns
push
shrb
aad
cmp
jmp
shlb
jo
frstor
shl
dec
mull
push
testb
cwtl
imul
nop
fst
aas
inc
sbb
fnstsw
sbb
xor
xchg
rorl
leave
lea
aaa
sbb
pushf
dec
sahf
sbb
jecxz
imul
test
imul
xchg
xchg
cmc
sbb
shl
fstpl
sub
mov
pop
sbb
sub
cltd
adc
push
cltd
xchg
nop
imul
sarl
ljmp
shll
insb
mov
lds
frstor
enter
rcr
pop
shrb
enter
shll
sarl
jne
xor
push
push
nop
in
fisttpll
cltd
dec
sbbl
mov
cltd
or
in
rorb
mov
fistl
dec
ret
sub
xor
sub
inc
insb
jecxz
jo
fucomp
sub
xchg
fwait
sbb
jne
rorl
xchg
fstp
mov
and
leave
call
bound
jp
dec
ret
dec
inc
sbb
in
cmp
xchg
out
loop
jne
sbb
cmpsb
and
mov
arpl
frstor
xchg
mov
pop
mov
jne
xor
sbb
fsubl
sbbb
scas
cmp
jge
aaa
add
xor
xor
fldl
fnsave
push
cltd
and
adc
push
mov
lcall
xchg
and
mov
nop
imul
sbb
cltd
xchg
inc
jno
cs
fstl
jp
scas
inc
cmpsb
fnsave
cmp
pop
pusha
pusha
and
js
pop
xor
popl
adc
ljmp
sbb
mov
dec
xor
shlb
rcr
xor
insb
call
mov
xor
cmpsb
xchg
xor
test
into
fstl
xor
movsb
push
loopne
imul
frstor
sub
sbb
inc
cmpsb
loope
lahf
cltd
and
mov
cmpsb
popa
aam
xor
push
jle
or
cltd
frstor
sbb
fnstsw
fs
inc
mov
sbb
fistps
fnstsw
sbb
test
cmp
pop
sbb
sbb
cmp
scas
out
orb
mov
call
je
add
cltd
xchg
ds
jg
fsub
xor
mov
hlt
xchg
inc
cmpsb
testb
cmp
dec
mov
xchg
cmp
xchg
or
daa
mov
and
or
fisttpll
mov
cmpsb
fldl
movsb
mov
adc
fisttpll
or
dec
subl
xor
sbb
mov
push
cltd
xchg
sbb
mov
aas
or
cmpsb
cmp
push
das
repz
xchg
cmpsl
push
adc
test
sbb
fisttpll
xchg
frstor
and
movsl
mov
adc
xor
sub
sbb
fnsave
lea
pop
sbb
adc
dec
fldl
cltd
inc
mov
push
and
frstor
orb
fstp
cmp
fldl
lea
push
cmp
jb
xlat
inc
cmpsb
loope
or
roll
fstl
je
xor
les
sarl
frstor
rcrl
sbb
add
js
rcr
lret
shlb
xchg
movsb
fdivl
fldl
xor
mov
sbb
frstor
rcr
test
cltd
fstpl
pop
or
fcoms
pop
inc
ficomps
xorb
stos
pop
jle
fs
jae
fbld
mov
or
fst
fmuls
cltd
xchg
sub
mov
addb
fnsave
jle
or
fldl
popa
jns
add
xchg
or
cs
popf
and
push
loopne
frstor
xor
add
and
mov
mov
mov
cs
sbb
fnsave
pop
cmp
ret
inc
cmpsb
popa
inc
fstpl
lea
adc
push
mov
push
or
push
cltd
fstp
scas
rolb
cmpsb
dec
enter
daa
jle
jae
jp
lds
insb
into
out
iret
lret
dec
inc
imul
push
rorl
repnz
and
mov
fisttpll
cltd
imul
sbb
add
cmp
mov
fstp
push
cltd
xchg
frstor
mov
scas
jl
lea
cmp
int3
and
jecxz
sbb
lea
push
xchg
call
fldl
testb
or
mov
mov
cltd
lcall
push
lret
cmpsl
inc
cmpsb
push
cltd
xchg
xor
mov
jnp
aad
push
lock
and
fnsave
aam
mov
inc
adcl
xor
lcall
jne
frstor
cmp
sub
pop
sbb
imul
push
adc
dec
fstpl
lret
sbb
imul
fldenv
cmpsl
mov
cmpl
xor
jecxz
sub
ret
mov
je
push
call
shll
inc
jmp
or
sbb
imul
inc
cmpsb
jno
pusha
nop
imul
xchg
shl
repz
sub
jo
xor
loop
imul
sbb
rorl
enter
cmp
cmc
adc
push
xchg
ljmp
inc
cmpsb
jno
fnstsw
sbb
ljmp
or
cmp
push
fstl
enter
lods
aam
lret
fstl
or
and
cmp
dec
push
shrl
fs
or
cltd
xchg
cmp
shl
push
dec
fadds
and
sbb
push
cltd
fisttpll
sbb
es
fnstsw
call
enter
rorb
pop
pop
push
or
fstl
fstpl
dec
jecxz
add
cltd
xchg
imul
jg
mov
mov
inc
cmpsb
jno
sarl
pop
pushf
je
dec
cmp
dec
lds
fstl
sbb
hlt
fnsave
inc
adc
aas
pop
push
cltd
xchg
fadds
jecxz
ljmp
xchg
sahf
js
sbb
fnstsw
push
cltd
xchg
aad
out
push
inc
jp
sbb
fstpl
push
call
ja
xor
mov
sbb
push
jmp
push
cltd
xchg
xchg
cmp
mov
mov
call
addb
dec
sbb
ja
add
popa
pop
jle
ret
testb
inc
bound
frstor
fucom
nop
imul
sbb
rcr
int3
xor
sub
cmp
cmpsb
test
cmp
movsb
dec
fstp
and
fcomps
fldl
fstpl
or
mov
shrb
cmp
inc
cmpsb
mov
xor
rol
and
frstor
lcall
pop
xchg
fldl
and
mov
fstpl
or
fstl
data16
loop
shll
mov
stc
inc
sti
bound
and
js
fisttpll
xchg
sub
rcr
jb
push
sbb
mov
es
xchg
fs
testb
adc
xor
les
jno
frstor
sbb
push
cltd
jmp
lock
adc
xor
inc
xchg
sbb
fstpl
or
fnsave
lea
jnp
fstp
jbe
mov
in
inc
enter
jb
sbb
fstp
add
and
and
fwait
into
pop
xchg
sbb
lods
cs
cltd
cmp
sub
xchg
fldl
icebp
add
pop
nop
sbb
dec
ret
mov
ret
push
xchg
shlb
xor
xchg
aam
inc
cmpsb
loope
fldl
xor
mov
push
or
fisttpll
cltd
lret
xchg
and
sbb
or
movsl
dec
and
cltd
sbb
cltd
xchg
pop
mov
fldl
test
fcomps
xor
pop
pop
adc
xchg
loopne
frstor
pop
lods
aad
mov
and
clc
icebp
fisttpll
or
aaa
enter
xor
push
xchg
dec
arpl
xor
shll
jb
xor
aam
fst
mov
enter
push
cltd
xchg
rolb
jo
sbb
js
pop
pushf
mov
sbb
or
cmp
imul
nop
imul
mov
icebp
lds
fisttpll
and
enter
sbb
out
frstor
or
cmp
push
add
in
jge
cwtl
test
xchg
xor
dec
jecxz
add
jo
xchg
jb
cltd
frstor
fnsave
push
fnsave
ret
jns
sub
push
mov
cltd
fst
cmp
fstpl
mov
fucomp
sbb
test
ja
mov
push
cltd
fisttpll
xor
jns
or
fs
rorl
and
and
lcall
push
ret
adc
andl
sub
push
sbb
or
aad
mov
dec
mov
dec
jecxz
rcr
inc
mov
ret
mov
xchg
mov
dec
fstpl
mov
cmp
inc
out
enter
mov
pop
jle
cmp
push
popa
xchg
pop
fldl
jno
inc
sub
stos
fstp
xchg
popf
call
cmpsb
jno
push
adc
and
fstl
pop
jno
and
xchg
pop
enter
fstpl
xor
inc
enter
and
add
inc
enter
mov
out
fiadds
and
dec
cltd
lea
cmpl
aam
push
ret
enter
cmp
aas
add
ret
xor
or
imul
inc
lock
aas
iret
jnp
enter
pusha
push
arpl
sbbb
dec
sbb
lahf
roll
dec
dec
xchg
lret
in
mov
lock
inc
dec
push
fs
cmp
mov
mov
in
cmp
fnsave
dec
jecxz
sbb
nopl
sbb
fnsave
xor
and
fstpl
fnsave
xor
cmp
fnsaves
addb
mov
mov
fnsave
xor
adcl
cmp
jae
mov
stos
inc
cmpsb
fnstsw
icebp
xchg
or
xor
icebp
or
inc
fnsave
xchg
std
adc
push
xor
imul
imul
fst
adc
and
or
loop
pop
aas
add
and
mov
push
xor
sub
movsl
sbb
adc
out
mov
out
adc
cmp
enter
cmpsb
loope
and
push
fidivl
xlat
arpl
inc
out
inc
shll
lods
push
xchg
xor
xchg
mov
aam
jo
add
jae
and
inc
arpl
into
pushf
fisttpll
mov
sbb
imul
push
cmp
push
cmp
out
test
jmp
push
mov
fldl
add
adc
aas
dec
incb
add
sbb
pusha
xor
jno
push
mov
mov
and
add
enter
fnstsw
cltd
xchg
je
mov
sbb
fucomp
popa
cmpsl
sbb
into
xchg
mov
push
cltd
xchg
add
fnstsw
fs
icebp
mov
stos
or
jmp
imul
xchg
cmpsb
fstpl
and
dec
dec
ret
mov
push
and
sbb
xor
test
add
fnstsw
ffree
fdivr
mov
imul
xchg
xchg
jnp
fnsave
roll
mov
fstl
in
pop
xchg
mov
imul
and
xchg
push
jno
dec
nop
imul
and
call
add
xchg
jbe
xor
jl
sbb
xchg
sub
fstl
inc
fnsave
sbb
inc
cmpsb
and
mov
fnstsw
nop
imul
push
adc
fisubl
test
adc
sbb
jecxz
dec
xchg
mov
cmp
sub
xor
or
xor
jecxz
sbb
jbe
inc
xchg
inc
pop
loop
imul
cmpsb
popa
into
fldl
xor
mov
push
daa
loopne
jb
imul
xor
rolb
shll
push
push
loop
or
and
add
xchg
xor
or
lods
lret
sbb
dec
aam
sbb
addr16
pop
jo
xor
add
xchg
mov
and
fstpl
nop
imul
jecxz
fisttpll
das
les
imul
fisttpll
loopne
imul
sti
cmp
pop
fsub
fstpl
frstor
sbb
jno
xor
sub
popa
mov
fimuls
add
lods
push
fs
lret
nop
imul
cmp
pop
jmp
and
jg
test
push
xchg
sub
enter
fwait
and
imul
cmpsb
jno
fstpl
inc
cmpsb
jno
fstpl
jbe
fnsave
or
out
fsubrl
push
cltd
fucomp
pop
xchg
xor
nop
imul
test
add
nop
fnstsw
cmpsb
mov
hlt
mov
inc
and
or
xor
fsub
cmc
lods
insb
call
fnstsw
pop
dec
scas
cmpsb
lods
cmp
jno
and
fisttpll
lahf
outsb
cmp
es
mov
push
dec
movl
sbb
popf
push
and
and
lahf
xor
adc
push
xchg
inc
sbb
or
outsl
adcl
cmpsb
jno
jl
jne
push
adc
fadds
and
jbe
nop
fisttpll
cmp
test
mov
sbb
cld
mov
inc
xorb
inc
nop
mov
xchg
fnsave
dec
jecxz
push
frstor
sbb
adc
nop
imul
sub
push
push
arpl
dec
jo
in
add
rcrl
dec
ffree
dec
pop
sbb
sub
cmp
scas
movsb
imul
dec
pushf
loop
fstl
dec
jno
cmp
nop
mov
dec
data16
addl
dec
ret
jmp
imul
cmp
fisttpll
cltd
xchg
frstor
sarl
xor
rcr
mov
sbb
enter
dec
cltd
jmp
mov
cmpsl
push
fstpl
inc
and
or
pop
inc
cmpsb
jno
fisttpll
sbb
stos
jo
push
lock
mov
and
inc
cmpsb
fisttpll
pop
sbbb
cmpsb
mov
es
inc
fstpl
push
jns
jmp
cmp
loop
cmp
jmp
push
sbb
addl
dec
ffree
and
mov
cmpsb
popa
xor
scas
call
cmp
jg
xchg
push
popa
sbb
lahf
xor
or
sbb
insl
sbb
cltd
jne
pop
sbb
shl
scas
sbb
add
sarl
and
and
jmp
dec
and
cmpsb
icebp
mov
jbe
ffree
cmpsb
out
sub
fnsave
xor
scas
fmuls
popa
jnp
jne
stos
mov
mov
xor
xor
fstl
cmp
ret
ja
nop
imul
sbb
popf
sbb
inc
or
xchg
mov
add
enter
dec
mov
je
push
out
add
lcall
and
xor
decb
sbb
frstor
pause
imul
cltd
fstl
jl
xor
jne
xor
xor
ret
xor
adcb
sbb
in
xor
push
push
inc
or
add
in
push
cltd
xchg
loope
xor
sub
cmp
nop
fucomp
stos
mov
xchg
pop
cmp
sub
lahf
pop
and
cmpsb
dec
jo
xor
and
sbb
cmp
push
add
dec
xor
pop
push
inc
cmp
or
and
es
pop
adc
mov
and
mov
xchg
shlb
cmp
cmp
or
pushf
mov
xchg
cmpsl
mov
push
xchg
jg
or
sahf
lds
mov
push
int3
and
inc
jno
frstor
inc
inc
imul
in
adc
cmp
mov
dec
jecxz
subb
sahf
movb
xchg
lea
fnstsw
in
les
shll
fstl
mov
fstl
imul
repnz
addr16
frstor
xor
cmp
scas
xchg
fnsave
pop
unpcklps
or
inc
jo
frstor
les
shll
or
or
adc
dec
pop
movsb
in
fucomp
nop
imul
les
dec
sbb
push
cltd
fstl
mov
fisubrs
cltd
popa
mov
nop
mov
call
addl
lea
or
fisttpll
pop
pop
mov
fucomp
mov
xor
frstor
lret
daa
bound
xchg
cmp
add
adc
or
imul
shll
std
mov
adc
cmp
push
call
cltd
std
daa
sbb
repz
dec
push
push
push
and
mov
or
xor
push
sbb
add
std
mov
jle
inc
mov
cltd
std
jne
xor
pushf
std
cltd
xchg
add
inc
insb
jno
or
std
fmuls
std
mov
int3
sbb
nop
imul
mov
std
enter
loopne
dec
jecxz
jno
popa
mov
xchg
mov
imul
push
loopne
aaa
jbe
ja
xchg
add
or
fs
mov
xor
std
and
add
cmpsb
popa
sbb
adc
mov
dec
shlb
aam
push
cmp
dec
std
mov
cmp
adc
or
xor
stos
push
std
cmp
add
jo
std
adc
mov
jno
jb
xor
and
std
test
mov
call
inc
adc
insl
sbb
loopne
cmp
dec
jmp
enter
popa
idiv
dec
ret
push
jo
xor
push
xchg
xor
sub
out
les
std
inc
es
jne
std
sub
or
mov
push
pop
sbb
add
xor
stos
enter
flds
lahf
lds
imul
ljmp
ret
sbb
or
sbb
loopne
or
enter
test
std
push
inc
cmp
push
sbb
imul
push
sub
or
mov
jns
pop
mov
add
aas
cs
js
mov
nop
inc
cltd
cwtl
add
dec
push
push
jbe
fs
std
stc
push
mov
std
push
sbb
mov
cmp
std
subb
cmpsb
and
ds
cmp
es
xchg
in
push
lahf
mov
add
or
seto
xor
mov
fisttpll
xlat
je
adc
fucomp
jo
xor
dec
arpl
fldl
loope
push
add
test
pusha
stos
push
cltd
fnstsw
xor
cmpsb
loope
imul
mov
nop
imul
jecxz
pushf
rcrb
gs
inc
test
xor
enter
icebp
mov
cltd
fstl
cmpsl
inc
cmpsb
cmp
pop
andb
inc
cmpsb
fnsave
sub
push
mov
cmp
cmp
sbb
dec
jecxz
lret
xor
xor
adcb
addl
adc
cltd
loop
xchg
push
pushf
add
arpl
fstpl
push
mov
fldl
cmp
cltd
xchg
mov
mov
nop
imul
and
loopne
ss
cmp
aaa
push
adc
inc
lea
pop
xchg
jmp
int
shlb
cltd
dec
pop
mov
roll
mov
jns
ja
xor
cmp
lahf
fs
shlb
cmp
dec
call
frstor
inc
cmpsb
jno
ffree
push
mov
popa
push
fisttpll
cltd
sbb
xchg
add
jno
or
sbb
inc
cmpsb
xor
fs
in
dec
dec
fnsave
or
cmpsb
jno
sbb
testl
fisttpll
nop
cwtl
loop
imul
dec
push
pop
push
cmpb
into
add
lcall
or
fs
xchg
test
test
imul
fstp
rorb
jne
cmpsb
and
sbb
or
mov
push
cltd
bound
push
mov
sbb
push
shlb
fstpl
cli
frstor
mov
xor
sbb
inc
frstor
and
sbb
cmp
adc
fwait
cmp
les
stos
inc
cmpsb
mov
inc
cmp
push
fldl
mov
add
sbb
and
fnsave
fnstsw
sbb
or
data16
mov
sbb
cmp
aad
shll
xor
les
cltd
xchg
xor
xchg
and
dec
xor
sahf
sbb
loop
or
xor
cmp
inc
adc
enter
push
dec
std
xor
adc
or
fstpl
cltd
fisttpll
cmp
mov
sbb
enter
fstl
adc
adc
ljmp
inc
repnz
add
sub
addb
in
and
jo
fnsave
xor
int
fnstsw
sub
call
and
je
cmp
fdiv
and
cltd
fldl
dec
add
sub
jecxz
ljmp
xchg
mov
and
fisttpll
cltd
cmp
xchg
xchg
push
daa
push
in
or
jb
jne
xor
and
orb
fisttpll
xchg
sarl
ficomps
add
aad
push
cmpsl
cmp
or
frstor
adc
call
cmp
sbb
frstor
sbb
rol
cld
xchg
cmp
fwait
icebp
inc
cmp
dec
xor
loopne
imul
xor
rcrl
push
fldl
jne
xor
dec
jecxz
sbb
jno
xchg
cltd
push
frstor
adc
enter
sub
cmp
add
nop
imul
popf
xchg
enter
repz
add
incb
push
sbb
fisttpll
addl
jbe
call
call
cmpsb
jno
cltd
cltd
imul
fisubl
fstl
cltd
xchg
outsb
sbbb
and
jo
and
cmp
push
pushf
insl
popa
fucom
inc
sbb
dec
jb
ja
sbb
xor
fisttpll
push
jo
fs
insb
push
cmpsb
jno
stos
incl
or
addb
push
pop
ljmp
cmp
or
and
and
sbb
andl
ljmp
cmp
cmp
subl
jmp
and
cmp
or
nop
imul
shrl
adc
jle
inc
jno
fnsave
jo
xor
push
cltd
xchg
dec
jl
frstor
sarl
sbb
fnsave
adc
jecxz
cmp
push
adc
xor
fstp
lret
xchg
sbb
ljmp
push
inc
inc
sbb
fnstsw
fs
cmp
add
xor
les
scas
loop
jo
lcall
cmpsl
stc
cmp
sub
jnp
push
push
jns
jg
aad
rcr
xor
sbb
pop
lods
in
ds
incl
out
jmp
enter
fcom
or
mov
cmp
testb
loopne
push
test
jecxz
jl
jle
mov
fnsave
and
stc
push
repnz
mov
adc
mov
or
sub
mov
fs
fisubl
das
add
nop
imul
cmpsb
jno
sbb
mov
push
push
inc
fisttpll
add
and
inc
xchg
fstl
in
roll
loopne
pop
xor
icebp
push
sbb
fnstsw
sbb
push
cltd
or
xchg
in
fstpl
in
fstps
orl
sub
cltd
xchg
xchg
dec
cmpsl
fisttpll
adc
sub
fstl
cs
cltd
fldl
es
xchg
lods
inc
cmpsb
loope
fnsave
lea
push
sbb
lea
sbb
xor
fcoms
fldl
mov
pop
xchg
inc
dec
ret
mov
imul
xor
call
out
jno
ffree
xor
cmp
xchg
pop
add
nop
imul
xor
js
push
fnstsw
xchg
and
lret
cmp
add
cltd
fucomp
mov
stos
inc
cmpsb
popa
frstor
shll
add
imul
ret
hlt
sub
ljmp
nop
imul
loop
mov
xor
aas
jg
in
cltd
inc
push
and
xor
or
or
cli
jno
xor
jecxz
loope
jbe
pop
stos
push
xchg
fnsave
cwtl
inc
xchg
push
rclb
fnsave
pushf
fisttpll
loopne
mov
aaa
adc
mov
imul
call
rclb
stos
loope
inc
cmpsb
cli
fstl
fstl
dec
cmpsb
xor
loop
cmp
sbb
inc
fstl
jp
add
fs
shll
push
mov
or
inc
icebp
mov
sbb
inc
frstor
adc
dec
jno
xor
fdivr
adc
cltd
loopne
sub
shll
aas
inc
or
rcr
xchg
call
dec
not
mov
inc
or
imul
dec
fisttpll
fstl
inc
dec
ljmp
cmpsb
xor
fnsave
out
dec
mov
add
push
xchg
push
or
fadds
sub
frstor
sbb
xor
nop
mov
frstor
jmp
mov
pop
and
fnstsw
in
add
sub
pop
fisttpll
cltd
popf
je
xor
and
mov
xchg
xlat
ffree
sbb
sbb
push
fstpl
add
inc
cmpsb
jb
or
jno
mov
sub
xor
mov
icebp
cmp
pop
jo
frstor
sbb
mov
ja
push
xchg
fnstsw
jge
xchg
outsb
jmp
mov
fstpl
int3
cmp
and
jge
xor
and
fstpl
loop
imul
fstpl
or
popf
add
fldl
nop
adc
xor
dec
jecxz
fsubl
cmp
loopne
push
cltd
loopne
enter
jecxz
fldl
ljmp
add
xor
push
es
cmp
pop
fldl
loop
and
lea
fistpl
rcrb
mov
push
cltd
xchg
outsl
mov
mov
imul
add
jle
sbb
fnsave
in
ret
fisttpll
sbb
mov
sbb
pop
xchg
dec
sub
add
frstor
mov
xorb
fstpl
cmp
dec
fldl
pop
fnsave
jo
sub
dec
sbb
xchg
xchg
fnsave
dec
jecxz
push
dec
and
push
sarl
and
call
push
mov
fldl
js
xor
xor
in
and
or
xor
pop
sbb
stos
push
cltd
fnsave
mov
adc
popl
push
cltd
or
fisttpll
cltd
xchg
cltd
loopne
das
sarl
enter
and
adc
cltd
fisttpll
inc
cmpsb
and
push
cwtl
fldl
push
fstl
adc
loop
mov
out
or
or
pop
fnsave
out
pop
out
cmp
pop
cmpsb
fldl
inc
fisttpll
adc
add
loopne
nop
fucom
inc
jo
and
frstor
xchg
fisttpll
jmp
inc
xorb
xor
jne
sub
inc
cmpsb
fucom
cld
out
call
dec
pop
jne
xor
pop
jmp
dec
jmp
sub
fisttpll
rcr
jecxz
inc
cmpsb
loope
ffree
in
inc
cmpsb
popa
sbb
lds
dec
jecxz
xor
rol
shll
frstor
fisttpll
adc
xor
lods
shll
shll
fldl
push
fldl
icebp
dec
imul
and
mov
cmpsb
popa
rcl
fstp
pop
or
mov
xor
test
test
cmpsb
fstpl
nop
imul
es
xchg
dec
jecxz
sbb
rcll
bound
stos
call
sub
adc
inc
fnsave
cmp
and
fldl
sub
inc
jo
mov
inc
fisttpll
ret
push
jne
fst
loope
or
jle
dec
inc
insl
ret
jno
add
inc
out
xchg
jecxz
and
je
scas
fcoml
xchg
insb
mov
cld
out
je
push
pop
cmc
xchg
dec
test
pop
and
pop
and
sbbb
sbb
inc
cmpsb
jno
pop
pushf
sbb
mov
or
fnstsw
decb
cltd
xchg
daa
fnsave
outsl
lods
subl
adc
rcr
xor
xor
jnp
push
xlat
and
sbb
xchg
mov
fucom
sbb
and
es
nop
imul
pop
push
xor
inc
or
fnsave
in
pop
jno
mulb
xor
inc
cmpsb
ffree
hlt
xchg
cmp
ficompl
adc
out
fsub
popa
cmp
push
jecxz
push
cltd
fstp
sub
add
xchg
fstpl
arpl
repnz
aaa
and
cmpsb
icebp
cmp
push
mov
and
and
and
out
cwtl
xchg
lea
loope
sbb
addl
sbb
xor
mov
adc
mov
paddusb
xchg
shll
movsl
sbb
nop
pop
and
push
fstpl
sub
inc
sub
cmp
add
movsb
mov
nop
stos
cmp
mov
fs
fimull
mov
int
cltd
jns
inc
je
orl
fnstsw
stos
dec
or
nop
imul
and
icebp
xor
cmpsb
fldl
fldl
fnstsw
sbb
enter
push
frstor
lods
inc
cmpsb
jno
fstpl
push
push
mov
jmp
imul
movsb
orl
fabs
inc
xchg
add
sbb
loop
imul
xchg
dec
inc
dec
jmp
fisttpll
cltd
dec
mov
cli
inc
inc
sbb
or
xchg
add
sbb
xor
dec
frstor
cmp
fstp
int3
add
cmp
adc
addb
fcoms
sbb
sbb
cmp
shlb
js
fldl
jle
adc
push
add
lea
add
ret
pop
sbb
fisttpll
add
jnp
xchg
fsub
adc
xor
push
adc
mov
push
dec
jecxz
or
push
or
fnstsw
lods
xor
and
dec
cwtl
orl
add
xchg
sub
push
xchg
cmp
ret
rcrl
fisttpll
pop
dec
ret
mov
push
mov
xchg
cmp
or
das
push
fstl
xor
or
dec
fisttpll
jns
pusha
jnp
lds
mov
push
call
and
push
bound
rcr
jge
mov
les
movsl
orl
imul
mov
mov
popa
insl
pop
cmpsb
jno
xchg
rcrl
mov
mov
and
push
xchg
sarl
inc
or
lds
fstp
add
xchg
sub
add
adc
adc
pop
xchg
das
frstor
das
jbe
pop
ljmp
nop
movups
xlat
jmp
popf
in
out
in
outsb
xchg
push
cmp
sbb
pop
inc
and
mov
fstpl
stos
sbb
or
fldl
rcr
lods
push
cltd
pusha
rorl
mov
jae
dec
outsb
push
and
fnstsw
frstor
sahf
fstpl
hlt
rcr
cli
fs
add
enter
fisttpll
or
push
xchg
and
call
dec
arpl
jno
sbb
fadd
and
fnsave
fldl
icebp
add
sbb
lods
fstl
orl
fisttpll
jno
cmp
aam
addb
inc
cmpsb
jno
push
sbb
popf
insb
fldl
xchg
sub
sbb
push
cmp
xor
inc
arpl
inc
frstor
xchg
enter
adc
adc
out
nop
frstor
jne
jo
frstor
roll
push
or
push
fldl
fstpl
cmp
movsb
push
fstl
ljmp
fs
test
cmp
dec
sub
fs
and
xor
jecxz
scas
rcr
gs
dec
frstor
xchg
sub
addb
inc
cmpsb
xor
mov
test
bound
sbb
pop
movsl
mov
mov
jmp
loopne
mov
pop
sbb
je
fstpl
and
adc
shll
lea
mov
fst
gs
nop
fnsave
xor
inc
cmpsb
jno
jo
rcll
mov
and
and
add
shll
sbb
addr16
js
shll
adc
fstpl
stos
inc
cmpsb
jno
fisttpll
adc
shll
cmpsb
notb
push
ret
and
mov
xlat
and
fstl
cmpsb
fsubrl
call
fsubr
mov
lods
add
dec
movsl
add
cwtl
lea
push
xor
nop
insl
ret
push
cltd
xchg
enter
xchg
adc
jns
ja
cmpsb
jno
add
mov
insl
jmp
xor
shll
imul
sbb
call
jecxz
mov
nop
fnstsw
inc
call
mov
loop
mov
gs
inc
fstl
add
stos
mov
sbb
nop
or
cmp
inc
sbb
add
movsb
inc
or
jnp
xor
leave
lcall
add
stos
pop
dec
leave
inc
cmp
add
sub
push
add
sbb
mov
push
add
jecxz
fnsave
mov
shlb
mov
push
or
mov
xor
fisttpll
cltd
dec
ret
push
and
adc
xor
dec
fnsave
movl
adc
xor
xor
sub
xor
sub
stos
push
jo
jl
fwait
pop
aam
rcr
xor
in
icebp
sub
js
fstl
loopne
in
mov
jmp
sbb
and
cmp
add
xchg
fstpl
cmp
push
xchg
sub
cmp
dec
insb
fstpl
sbb
push
fucomp
jl
cmp
mov
adc
sbb
sub
hlt
jo
xor
pop
fldl
ret
inc
pop
sbb
xchg
fisttpll
add
aam
mov
push
ja
fst
add
adc
enter
push
popa
fnsave
and
xchg
movsb
add
je
fisttpll
fisttpll
cltd
shll
mov
inc
cmpsb
popa
mov
lea
sub
xor
adc
sbb
lea
or
rorl
inc
add
fnsave
test
ret
and
fstl
arpl
dec
arpl
cwtl
stos
inc
cmpsb
jno
fst
and
js
fnsave
mov
imul
inc
ffree
ficompl
xchg
lods
push
cltd
fstl
test
cmpsb
fisttpll
jo
xor
cmp
pop
mov
add
xchg
pop
rcr
and
fs
nop
imul
lds
cmp
pop
frstor
ss
test
fisttpll
loopne
imul
push
fucomp
inc
add
sbb
sbb
push
and
les
sarl
fldl
loope
sbb
movb
pop
pop
push
cltd
jnp
ss
xor
mov
mov
cltd
fisttpll
fnsave
or
andb
cmp
scas
addb
scas
popa
inc
xchg
nop
imul
xchg
fnsave
xor
out
xor
push
jae
rcll
fldl
xor
mov
dec
jecxz
dec
xchg
movsb
or
cmp
xchg
add
pop
lock
fs
cltd
lret
mov
pop
and
nop
imul
jb
mov
lcall
mov
mov
xchg
fidivl
push
in
lahf
inc
shlb
rcr
cmpsb
and
sbb
addb
cmpsb
mov
retw
addl
fnsave
lea
inc
sbb
dec
inc
sbb
xor
movb
add
jo
fstpl
dec
dec
push
fstp
sub
push
pop
inc
xchg
fstpl
test
ffree
and
mov
mov
jb
push
je
fisttpll
xchg
jo
xor
pop
fst
push
inc
pop
pop
inc
push
inc
les
adc
jo
xor
lods
sbb
frstor
inc
adc
cmp
mov
sarl
and
dec
shll
frstor
push
cltd
mov
sbb
and
cmpsb
mov
cmp
nop
imul
ror
les
enter
jmp
sbb
mov
xchg
in
nop
imul
ret
dec
frstor
outsb
imul
aad
fldl
mov
xchg
sbb
jecxz
loopne
fldl
fiaddl
aaa
inc
and
pop
jo
xor
push
fisttpll
cltd
sbb
popa
add
paddusw
mov
jo
fnsave
or
sbb
jl
call
imul
mov
xor
data16
cmp
and
mov
dec
cmpsb
mov
dec
cmp
add
stc
push
xchg
lods
or
inc
or
daa
pop
cmp
imul
fwait
sbb
fnsave
repz
sbb
cmpsb
jno
sbb
daa
cmc
inc
fstp
fisttpl
xor
or
sarb
sbb
cltd
xchg
fbld
fldl
popa
das
es
enter
fstp
pop
cmp
push
je
xchg
subb
xor
cltd
or
push
outsb
add
sbb
out
imul
fst
mov
mov
cmp
jne
push
mov
or
lock
fisttpll
pop
outsl
bound
xchg
cmp
fst
and
sbb
xchg
sub
push
fisttpll
fnsave
cld
add
movsb
fcoml
addr16
dec
xor
pop
psubsb
in
xor
mov
int
sbb
rorb
add
pop
sbb
or
dec
xchg
jmp
fstp
and
js
fisttpll
movb
dec
jae
push
fstl
arpl
frstor
insl
dec
jecxz
inc
fstl
cmpsb
jno
xchg
sbb
lea
pop
mov
rorl
enter
sbb
enter
cmp
inc
frstor
add
and
mov
inc
cmpsb
jno
fstpl
inc
cmpsb
jno
fstpl
jecxz
add
xchg
adc
nop
imul
jnp
cmpsl
jmp
outsb
jo
push
hlt
push
mov
inc
cmpsb
mov
cmp
bound
mov
sub
call
arpl
nop
imul
push
fmull
add
inc
and
push
xor
xor
out
pusha
jle
call
push
cltd
fstl
or
nop
imul
fnsave
adc
cmp
clc
or
sub
add
fldcw
or
and
add
rcll
cmp
bound
sarl
cmp
pop
cmp
dec
jecxz
fsubs
cmp
mov
mov
in
adc
cmp
cmp
inc
sub
ja
lret
inc
inc
mov
pusha
inc
rcll
loope
push
mov
pop
out
xor
add
mov
sub
jno
imul
mov
sbb
in
inc
sub
push
cltd
jns
xor
in
imul
mov
out
lcall
cmp
sub
cmp
jecxz
dec
sbb
cmp
adc
cmp
or
cld
mov
jnp
sub
add
xor
xchg
imul
lret
mov
mov
pop
cmp
push
cmp
or
inc
jecxz
das
inc
cmp
cmp
mov
es
mov
rcrl
cmpb
pusha
inc
cmp
pop
shlb
mov
fcoml
sbb
xchg
cmp
lahf
or
popf
test
cmp
jae
cmp
jle
rorl
add
inc
test
cmp
pop
lret
pop
jp
jg
mov
sub
loopne
pop
dec
loope
testb
in
test
cmpsb
jno
cmp
outsl
mov
pop
movsb
xor
lock
cmp
lea
sarl
std
sub
test
cmp
pop
push
mov
daa
filds
adc
lock
xchg
push
cmp
sub
cltd
je
jne
mov
sub
fcomps
cmp
sbb
nop
xor
lret
pop
test
call
into
hlt
push
add
cmp
sbb
cmp
push
mov
push
cmpsb
popa
out
mov
xor
stos
cmp
dec
adc
mov
dec
sbb
push
sub
or
sub
movsl
push
mov
imul
xchg
mov
stos
push
cmp
adc
mov
imul
dec
sub
sbb
es
sub
cmp
sub
cmp
mov
cmp
cmp
test
cmp
inc
cltd
cmp
lea
jno
cmp
test
or
adcb
rcrl
ret
call
cmp
sub
cmp
cmpsb
cmp
cltd
xchg
pop
add
mov
fsubrl
xchg
imul
push
pop
mov
cmp
imul
or
push
sarl
push
cmp
push
sub
cmp
jecxz
cmp
mov
cmp
jae
jmp
or
pusha
and
pop
jmp
jle
sub
mov
push
cmp
shr
test
lea
loopne
and
ds
scas
inc
cmp
add
lret
imulb
push
cmpsb
cmp
pop
cmp
add
icebp
clc
hlt
or
testb
cmp
and
gs
sbb
aas
dec
cmp
aaa
adc
gs
cmp
leave
pop
cmpsb
popa
inc
cmp
jmp
add
sbb
testl
jb
mov
add
pusha
cmp
cmc
or
sbb
orl
xor
lcall
adc
cmp
pop
mov
ja
sub
cmp
xchg
imul
imul
rolb
and
sbb
fcoml
inc
inc
popa
ror
loope
xchg
cmp
insl
bound
adc
fistpl
xor
icebp
push
or
data16
cmp
jo
imul
push
aas
nop
inc
pop
in
sbb
xchg
imul
sub
lock
push
es
mov
add
scas
push
cmpsb
mov
xor
das
cmp
inc
sub
bound
dec
sub
push
adc
sub
loopne
xchg
imul
or
in
xchg
out
mov
mov
das
xor
cmp
das
push
in
movsb
push
push
mov
cmp
scas
push
cmpsb
cmp
mov
and
fistl
hlt
push
sbb
fcmovnbe
das
adc
arpl
or
les
or
dec
cmp
and
insl
test
push
xchg
xchg
xor
push
cmpsb
and
cmp
sbb
js
push
jbe
push
cmpsb
cmp
jns
jg
cmp
cmp
inc
sub
cmp
xchg
imul
imul
lea
xor
mov
out
sbb
aam
inc
cltd
and
icebp
imul
imul
xchg
dec
mov
imul
xchg
imul
inc
imul
xchg
imul
push
imul
cld
mov
cmp
jecxz
cmp
jno
cmp
and
js
pop
mov
ljmp
ret
xor
or
mov
inc
cltd
xchg
push
cmpsb
popa
pop
adc
lds
cmpl
fsubrl
mov
jl
cmp
dec
sbb
mov
scas
push
test
lea
dec
push
daa
into
mov
jnp
pop
shrb
mov
or
sarl
mov
push
pushf
divps
shll
mov
ljmp
lods
adc
shll
pop
cmc
cld
sbb
jno
sub
pop
mov
stos
push
cmpsb
jno
cmp
pop
jg
cmp
inc
mov
cmp
push
add
cmp
cmpsb
popa
cmp
call
cmpsb
mov
sbb
popa
pop
jbe
inc
call
ja
mov
add
sbb
jp
cmp
push
dec
cmp
mov
cmp
or
dec
ret
push
test
jno
mov
and
jb
pop
sub
mov
add
xor
cmp
push
rorb
les
add
dec
push
js
xchg
imul
and
and
adc
mov
dec
cs
push
cmp
push
lock
cwtl
ret
pusha
js
aad
shll
rcrb
xchg
scas
cmp
rorl
mov
add
push
hlt
push
add
cmp
jmp
orb
adcl
cmp
xor
int
push
push
sub
das
inc
cltd
cmp
mov
sub
pop
cmp
sbb
lods
cmp
jno
cmp
imul
sahf
sub
push
adc
cmp
je
dec
cmp
mov
testb
sbb
jb
imul
lret
enter
imul
add
sub
inc
and
sarl
lahf
push
shrb
or
std
cli
mov
dec
adc
repnz
fmull
fadds
test
mov
out
and
jg
pusha
inc
adc
cmp
ret
or
iret
ja
or
cmp
or
cltd
push
cmp
add
pop
lcall
inc
cltd
cmp
or
sub
push
sub
cmp
or
fdivr
mov
push
test
cmpsb
cmp
fs
adc
sti
aas
call
and
add
xchg
push
je
inc
sub
cmp
cmp
shll
or
das
xchg
imul
push
and
jnp
cwtl
mov
flds
cmp
mov
and
xchg
cs
and
imul
sub
or
imul
and
shl
or
cmp
and
inc
xchg
cmp
sbb
adc
call
push
sub
nop
add
add
cltd
cmp
inc
xchg
or
shll
or
stos
das
mov
jnp
pop
push
sub
cmp
sbb
jns
lret
xchg
imul
push
xchg
imul
sub
lcall
jb
cmp
cmp
xor
push
imul
xchg
cmp
movsl
push
cmpsb
jno
jae
lret
mov
add
jo
inc
sub
sub
mov
ljmp
cltd
pop
inc
cmp
or
aas
push
arpl
cmp
fcomp
jmp
push
pop
mov
mov
mov
das
stos
arpl
leave
fstl
xor
add
pop
mov
aas
cmp
or
stc
inc
sub
pop
and
cmp
ret
sbb
xor
pop
sub
int3
jae
lret
adcb
cmp
sub
sbb
push
sbb
shrb
dec
jo
push
sub
or
pop
sbb
sub
jl
lahf
shr
or
push
push
adc
or
pop
push
inc
repnz
mov
xchg
js,pn
lods
fwait
cmp
jbe
pop
in
loopne,pn
pop
and
xchg
outsb
dec
adc
cmp
xchg
add
jbe
lret
dec
inc
sbb
std
inc
xor
loopne
pop
fwait
or
sub
push
mov
xchg
imul
cld
xor
xchg
imul
cmp
pop
adc
xor
cmp
rorb
sub
test
cmp
inc
sub
cmp
pusha
add
sbb
sarl
lret
inc
cmp
adc
adc
cmp
mov
or
add
rcll
xor
sub
cmp
cs
add
js
sub
lcall
pop
inc
sub
cmp
inc
cmpsb
cmp
and
jmp
adc
mov
ds
test
cmp
add
cmp
imul
ljmp
or
out
and
xchg
cmp
sbb
or
leave
enter
xor
outsb
nop
flds
test
in
sub
aas
push
sub
imul
sbb
cmpsl
cmp
cmp
mov
or
sub
xor
push
sub
cmp
cmp
mov
shll
mov
cwtl
sub
cmpsb
xor
sbb
movsb
mov
xor
inc
dec
into
push
das
fs
test
repz
movsb
cmp
clc
popf
sbb
ljmp
or
lea
lahf
xor
insl
adcb
cmp
pop
loopne
dec
arpl
mov
mov
sti
mov
sub
pop
adc
jecxz
cmp
cmp
aas
scas
sub
dec
cmp
popa
cmp
lret
dec
dec
adc
outsb
imul
enter
add
pop
mov
dec
adc
xor
add
add
test
jns
lret
pop
cmp
push
xor
push
cmpsb
cmp
or
cmp
cwtl
js
inc
xor
xor
rcrl
or
ja
push
pop
inc
sub
shll
in
popf
enter
or
add
test
dec
adc
add
or
adc
inc
cmp
jle
add
movsb
dec
or
xor
mov
inc
inc
add
daa
inc
cmp
xor
inc
ja
jmp
push
leave
mov
mov
cmp
iret
xchg
xchg
jp
adcb
dec
cmp
dec
pop
add
pushf
sbb
stc
or
add
xchg
out
outsl
inc
lret
dec
push
push
push
cmpsb
jno
cmp
jmp
repnz
cltd
mov
or
pop
sarb
xor
xchg
or
or
shll
sbb
sbb
dec
dec
push
sub
cmp
imul
outsb
xor
cmp
cmc
xchg
ret
je
inc
cltd
cmp
repnz
add
and
inc
pop
std
popf
scas
xchg
imul
in
dec
arpl
lret
test
inc
mov
jecxz
cmp
call
xor
cmp
sbb
lret
inc
call
xor
mov
cmpsb
icebp
xchg
jo
mov
inc
test
push
es
imul
scas
or
xchg
add
xor
addl
cmpl
sarl
frstor
dec
dec
repz
fisubrs
cmp
jo
sub
cmp
aad
jg
test
add
test
lea
sbb
pop
xor
test
sbb
push
xorl
mov
cld
sbb
subb
push
sbb
test
xchg
sbb
mov
test
dec
ret
dec
test
adc
mov
dec
adc
xor
sbb
ss
add
mov
inc
cltd
sbb
or
sbb
pop
and
push
mov
sbb
xor
test
xor
add
push
cltd
repnz
inc
or
jl
push
push
pop
pop
inc
mov
xor
cmp
lret
dec
and
sub
mov
inc
call
std
sub
cmp
popa
push
sbb
sub
pusha
enter
jle
or
inc
sub
inc
cltd
sbb
xchg
xchg
pushl
aam
pop
or
push
lds
inc
sub
sbb
test
add
sbb
mov
xor
push
sbb
xor
adc
mov
lret
repnz
xor
or
adc
jns
dec
jecxz
sbb
sbb
cli
sub
xchg
imul
movsl
push
and
push
pusha
insl
jp
or
mov
mov
dec
ret
add
lcall
mov
sbb
inc
cltd
sbb
cmpsb
sbb
sbb
adc
sbb
test
or
and
inc
cltd
xchg
push
sub
and
xor
and
xchg
inc
arpl
daa
sub
out
bound
das
or
or
rcrl
sbb
in
or
push
arpl
loopne
sbb
loopne
cmp
gs
ret
pop
sub
gs
add
sbb
push
js
mov
mov
inc
cltd
sub
and
clc
sub
movups
outsb
or
push
ds
mov
gs
and
xchg
xor
mov
sbb
sub
inc
cltd
sbb
cmp
sub
call
loopne
sbb
pop
inc
sbb
push
jno
sbb
call
loope
xchg
imul
dec
scas
js
sbb
loope
mov
or
xor
cmp
movsl
mov
arpl
cmp
rcrl
test
lea
inc
sbb
mov
xchg
pop
and
push
cmpsb
sbb
jo
rolb
sbb
xor
pop
add
addl
sarl
inc
sub
mov
sbb
or
cmp
sbb
in
or
dec
sbb
add
or
mov
cmpsb
popa
adc
xor
inc
xor
add
adc
push
mov
adc
xor
stos
push
cmpsb
popa
or
aam
sbb
push
ret
dec
sub
dec
sbb
mov
cltd
mov
or
daa
mov
jbe
fisubs
call
mov
inc
mov
or
les
sbb
mov
out
or
sbb
adc
sbb
rcrl
push
sub
imul
inc
pop
es
add
xor
and
rorl
fisttpll
pushf
xchg
pop
mov
inc
cltd
xchg
sbb
dec
sub
dec
xor
ret
cmpsb
scas
popa
sbb
popa
or
or
dec
dec
sbb
scas
dec
mov
repnz
xchg
sbb
push
mov
iret
dec
mov
int3
fcompl
popf
fbld
cltd
sub
dec
sarl
or
into
lahf
inc
add
add
call
inc
ss
dec
sahf
pop
adc
sbb
add
addb
pop
xorl
xor
in
mov
std
sub
leave
xor
ss
push
xor
mov
test
imul
sub
sbb
xchg
std
in
jb
orb
xchg
imul
loop
and
pop
mov
in
cs
std
jae
pop
jo
xor
xchg
shll
pop
cltd
pop
inc
scas
cwtl
mov
cltd
std
enter
push
cmpsb
xchg
xchg
std
ret
and
std
mov
mov
sub
fdivl
dec
jb
xchg
sub
call
call
inc
dec
sbb
shll
ret
jmp
and
pop
call
std
mov
std
and
jo
nop
rorl
cs
xor
mov
call
sub
cmpsb
mov
ja
xchg
dec
std
mov
xchg
mov
cmc
orb
sub
mov
cs
sub
pusha
fldl
mov
adc
popa
cmp
enter
lods
cs
aaa
push
sbb
pop
rol
jecxz
mov
js
xchg
dec
std
xor
sar
leave
jnp
rcrl
clc
sbb
xchg
inc
pop
xor
mov
leave
xor
cmp
xor
je
arpl
pop
xchg
std
cmp
leave
xor
cs
cmp
jle
cmp
hlt
shll
jo
xor
or
cs
xor
and
scas
sbb
sub
cltd
fs
dec
std
adc
jo
mov
shlb
lods
std
add
mov
jo
imul
sbb
cmpsb
cs
xchg
std
mov
std
test
pop
pop
jno
xor
adc
xchg
dec
ret
push
and
leave
xor
adc
sbb
std
adc
bound
mov
cs
in
std
les
das
xor
lea
roll
std
lea
mov
add
std
mov
std
in
ret
insl
stc
sbb
jno
pop
add
ss
mov
std
mov
xor
fadd
and
xchg
dec
ret
pusha
in
std
into
sti
enter
mov
push
jne
jno
xor
leave
xor
pop
outsb
test
push
pop
xor
xor
cltd
or
icebp
mov
stos
popf
mov
std
dec
data16
rcll
into
std
cmp
dec
shlb
jbe
testb
and
and
std
xchg
dec
arpl
push
std
fwait
or
xor
cs
std
icebp
test
cltd
xchg
je
xor
mov
xchg
imul
ret
std
insb
push
jne
xor
push
and
imul
loop
std
nop
out
xchg
cltd
std
xor
std
call
jmp
dec
sbb
sbb
jno
cmp
add
xchg
imul
andb
push
sbb
pop
sar
xlat
mov
mov
loopne
imul
dec
sub
xor
pop
mov
std
jp
shlb
xchg
imul
lea
test
rolb
and
push
xchg
dec
jecxz
std
jo
xor
or
leave
xor
push
mov
sbb
add
inc
pusha
loopne
imul
inc
jle
dec
cmpsb
icebp
inc
dec
leave
xor
mov
sbb
std
outsl
or
push
mov
sbb
lahf
xor
lea
sbb
std
pop
imul
xchg
std
push
pop
mov
pop
mov
std
and
add
sar
xor
pop
xchg
std
pop
xor
or
std
iret
or
add
std
cs
jmp
and
cs
stos
adc
les
mov
adc
xchg
dec
std
dec
aam
rcll
std
and
xchg
imul
inc
or
std
int3
sbb
adc
xchg
imul
pop
xor
xchg
dec
jecxz
std
xchg
dec
and
std
dec
ret
inc
pop
addr16
popa
add
jno
xor
push
std
xor
add
lcall
xchg
imul
jmp
nop
xor
add
mov
std
sbb
loope
mov
pop
mov
std
and
and
and
adc
push
mov
mov
xlat
lods
movsb
adc
icebp
loopne
cltd
std
or
inc
dec
jecxz
dec
std
push
cmpsb
jno
xchg
std
push
sub
adc
es
in
or
jo
xor
popf
push
std
mull
push
daa
call
out
add
sub
dec
std
cmp
xor
insb
std
cmpsb
popa
ret
push
es
adc
lea
dec
mov
pop
std
xor
ja
xchg
std
cmp
popa
pop
mov
inc
mov
jo
add
into
push
and
or
pop
jno
std
pop
es
jno
xor
hlt
jecxz
out
mov
pmaxub
push
aas
dec
and
dec
std
xchg
dec
jecxz
in
std
je
jo
mov
mov
xchg
dec
jecxz
dec
cmpsb
popa
sbbb
orb
ljmp
cld
std
arpl
or
xchg
dec
std
adc
mov
xchg
imul
push
dec
pop
scas
jl
sub
adc
push
sbb
mov
popa
std
jecxz
sbb
dec
std
pusha
dec
sbb
stc
ss
add
or
pop
xchg
dec
jecxz
loopne
dec
inc
or
test
dec
dec
pop
inc
movsl
or
sbb
mov
add
pop
adc
bound
xor
cs
and
cld
movl
cmp
sub
js
mov
add
xor
and
xor
xchg
pop
or
push
mov
sbb
sbb
pop
sbb
lret
aam
inc
sbb
cmpsb
mov
cltd
xchg
test
movb
mov
jecxz
inc
cltd
sbb
mov
lea
imul
test
sbb
cltd
xchg
divl
sbb
xchg
popl
push
lock
push
sub
stos
push
cmpsb
sbb
fstpt
call
or
push
adc
jp
loope
xchg
sbb
sub
sbb
inc
sbb
cmp
lret
add
cmpsb
and
add
push
sbb
adc
lea
sub
push
test
sbb
xchg
imul
mov
push
push
xchg
imul
and
inc
adc
pop
mov
sbb
imul
imul
xor
sbb
cltd
xchg
sbb
xor
mov
imul
add
xor
ljmp
dec
mov
xchg
imul
lcall
dec
arpl
sbb
cmp
push
sbb
cltd
sbb
mov
and
lret
and
jns
or
add
dec
jb
xchg
loopne
pop
or
les
sbb
enter
cltd
pop
test
sbb
xchg
jmp
std
xchg
je
pop
lret
sub
push
addr16
movsb
jmp
cmp
pop
cli
int
push
sarl
negl
push
sahf
negl
add
push
pusha
jl
sbb
jns
out
sbb
sub
sbb
push
ficomps
and
gs
and
xor
add
and
ret
hlt
mov
adc
sbb
popa
or
xchg
imul
pusha
outsl
or
jo
mov
jno
mov
nop
jae
lret
and
and
ja
xor
or
sbb
int3
not
cmp
imul
cmp
jmp
push
sbb
xor
jo
shr
pop
adc
jno
inc
cltd
sbb
mov
dec
arpl
sbb
mov
xor
fnstsw
mov
cmp
xchg
dec
jecxz
cmp
mov
cmp
ds
inc
inc
movsb
push
mov
lea
xor
pushf
jbe
test
cmp
inc
and
dec
and
inc
sub
cmp
js
cmp
or
mov
cmp
mov
push
add
cmpsb
jno
adc
adcb
or
sub
sbb
xor
add
mov
rolb
lret
adc
xor
pusha
cmp
fcoml
and
orb
insl
or
xor
ret
addr16
nop
cmp
cltd
xchg
cmp
cwtl
movsb
dec
jecxz
push
cmp
inc
mov
pop
push
sub
cmp
xor
add
jne
adc
cmp
add
cmp
inc
cmp
add
add
ds
sub
sbb
cmp
mov
scas
mov
mov
cmp
in
dec
sbb
xor
pop
clc
adc
adc
mov
push
cmpsb
mov
cmp
ds
inc
adc
mov
jecxz
adc
cmp
adc
negl
call
cmp
fimuls
sbb
cltd
xchg
adc
cmp
xchg
and
or
pop
and
xor
cwtl
lods
out
add
adc
imul
push
cmp
add
cmp
je
add
adc
cmp
push
cmpsb
xor
jp
inc
jno
mov
inc
mov
imul
cmp
xchg
cmp
test
cmp
sahf
xchg
cmp
inc
or
add
mov
xor
fnsave
or
or
add
cmp
sbb
lret
xor
or
or
mov
and
lcall
add
dec
ret
dec
pop
or
xor
cmp
push
mov
sbb
or
gs
or
cmp
iret
mov
andl
xchg
imul
xchg
or
adc
xor
xchg
push
andb
mov
cmp
jmp
lea
add
popf
lcall
fwait
dec
ret
mov
adc
or
inc
inc
mov
cltd
xchg
cmp
jecxz
cmp
pop
dec
and
gs
roll
cmp
ret
es
dec
add
mov
dec
or
push
sarl
dec
outsb
xor
add
ret
adc
cmp
lret
pop
inc
sbb
or
ret
sub
cmp
int3
cmp
mov
roll
lret
mov
cmp
sub
pop
add
cmp
mov
movsb
xor
sbb
push
cmpsb
jno
shrb
pop
adc
stos
adc
add
xor
faddl
inc
xorb
sarl
das
push
lea
and
mov
add
test
lea
test
xlat
call
cmp
mov
cmp
inc
cltd
cmp
push
in
mov
repnz
fadds
or
ljmp
cmp
adc
mov
cmp
lret
xor
xor
or
rcrb
add
cmp
or
gs
fsubl
cmp
ret
push
scas
mov
cmp
cmpsb
popa
mov
xchg
pop
imul
pop
and
xor
cltd
cmp
inc
cmpb
mov
cmp
mov
jne
lcall
and
imul
and
scas
add
das
cltd
xchg
mov
push
adc
std
adc
pusha
sti
pop
arpl
fstpl
lret
repz
sub
fstps
sbb
out
mov
ret
mov
gs
jmp
mov
cmp
adc
and
jno
mov
pop
test
cmp
lret
mov
insl
jns
pop
and
lea
xor
inc
add
inc
sub
mov
inc
cmp
mov
mov
cmp
inc
test
cmp
inc
sub
cmp
sbb
adc
adc
sbb
loopne
mov
xchg
imul
rep
out
pusha
mov
mov
lea
mov
push
cmp
jno
cmp
push
adc
test
loopne
adc
andb
imul
or
and
or
stos
fsubrs
xchg
imul
xchg
inc
fcoms
shlb
cmp
mov
mov
mov
sbb
cmp
aam
or
insb
or
cmp
imul
xchg
pop
jnp
mov
mov
sbb
rcll
inc
inc
add
inc
push
cmp
pop
or
imul
xchg
cmp
and
push
sub
xor
cs
mov
les
or
adc
dec
ret
mov
add
popa
cmp
mov
jg
das
loopne
mov
mov
jecxz
push
xchg
lock
mov
or
cmp
inc
mov
push
adc
xor
push
cmp
ljmp
lcall
or
aaa
mov
cmp
push
and
xchg
imul
inc
cmp
xchg
imul
and
sahf
jecxz
add
mov
imul
dec
add
lock
or
mov
mov
sub
lods
xor
call
adc
shll
outsl
or
pop
inc
sub
lahf
outsl
inc
test
push
cmpsb
jno
cmp
xor
cmp
or
call
enter
push
or
jb
inc
cltd
xor
and
lea
hlt
push
cmp
test
cmp
inc
sub
cmp
popf
or
shl
dec
jecxz
inc
cmp
arpl
mov
ja
mov
push
inc
loop
push
cmpsb
popa
cmp
sbb
or
mov
and
cmp
xchg
outsb
pushf
vpextrb
xchg
cmp
std
xor
sbb
cmpsb
fs
jne
std
jmp
sub
rcll
jbe
lcall
rcrl
std
js
sbb
push
push
aam
sar
add
or
cld
sbb
sarl
pop
fsts
clc
xor
sbb
pop
std
hlt
dec
popa
mov
mov
dec
cmpsb
std
imul
mov
std
mov
std
stos
loope
xchg
imul
or
out
cld
pop
jo
std
shlb
mov
mov
sar
lcall
jl
xchg
dec
jecxz
std
jne
xor
pusha
jecxz
mov
xor
mov
mov
mov
stos
dec
cmpsb
std
cs
bound
aam
arpl
sub
sbb
mov
rcll
sbb
les
pop
mov
add
movl
ret
and
mov
rclb
std
and
xchg
std
test
sbb
add
std
shlb
push
adc
test
sbb
push
pop
xor
jle
inc
inc
add
mov
sbb
mov
std
mov
std
xchg
push
lea
aas
lock
mov
hlt
push
jmp
std
ss
xchg
push
or
add
std
jge
or
xchg
push
std
xor
pop
xor
mov
pushf
push
mov
xchg
push
std
enter
shlb
sarb
xor
and
pop
xor
mov
shlb
inc
pop
mov
dec
sti
lahf
add
push
std
shlb
sbb
mov
into
into
jo
sub
movsl
inc
ret
cmp
mov
imulb
adc
mov
and
imull
sub
sub
sub
sarl
or
shll
xor
jo
push
imul
sar
sub
push
movsl
inc
ret
jae
mov
xor
jl
imul
inc
ret
pop
inc
std
lods
dec
lods
lods
dec
adc
imul
addl
std
loop
add
mov
sub
rcr
lods
add
sbbl
push
movsl
mov
cmp
pop
lds
cmpl
or
lds
xchg
pop
jo
xor
out
lea
mov
fsubrp
fstl
xor
adc
or
push
jnp
imul
in
dec
mov
jne
xor
ljmp
pop
imul
jbe
pop
js
or
addr16
or
cmpb
pop
into
imul
dec
jne
xor
cmp
jecxz
sub
sub
cmpsl
pop
xor
iret
fcompl
mov
jne
pop
lret
xlat
add
sbb
popf
push
lea
inc
arpl
jl
pop
loope
jo
and
mov
mov
push
xchg
shrb
dec
adc
je
add
cmp
xor
add
add
lcall
mov
mov
stc
pop
pop
xchg
in
or
mov
clc
test
cmp
xor
or
and
jne
enter
shll
lea
push
jnp
in
lock
push
popf
push
jge
into
inc
push
shll
sbb
leave
xchg
std
sbb
dec
xchg
or
jge
add
xor
rcll
loopne
out
lahf
clc
lahf
push
addl
cmp
pop
insl
inc
ds
jl
mov
fmull
add
mov
dec
mov
add
movsb
xchg
loope
mov
jbe
mov
test
adc
cmp
adc
jae
push
enter
sub
sub
popf
push
or
jge
les
js
cmpsl
inc
jge
scas
jo
xor
idivb
push
or
jge
xchg
test
shll
loope
sub
pop
cmpsb
inc
sbb
jge
add
xchg
jge
rcll
test
inc
ret
push
les
sub
lea
adc
es
pushf
push
jge
pushf
push
lea
jno
mov
cmpb
enter
dec
test
dec
pushf
push
jge
add
testl
sub
mov
fadds
xor
and
add
sub
in
cltd
movaps
xchg
popf
push
lea
je
ret
rol
call
adcl
loop
push
out
loop
adc
pop
pop
inc
add
jb
fwait
fcoms
jl
fs
popf
dec
inc
adc
cmp
jge
call
jge
mov
mov
mov
call
or
orb
mov
mov
mov
mov
jl
cmp
out
sub
inc
lahf
rclb
loopne
sbb
in
fadds
xchg
sub
and
or
je
dec
push
inc
push
add
cmovs
or
lods
mov
jge
repz
xor
dec
add
and
lea
enter
loope
pushf
jge
sbb
jge
stos
cmpsb
testb
pop
fs
inc
inc
rcl
fsubs
cmp
inc
push
std
adc
call
jne
xor
jle
jge
sub
jge
rcr
es
inc
xchg
psubusb
jge
lods
fs
xchg
inc
stos
push
pop
es
movhps
cmp
rep
mov
xlat
imul
repz
repz
dec
pushf
jge
cmp
jno
cmpsl
jge
mov
mov
add
loope
add
mov
xorl
shll
sbb
dec
add
dec
jo
xor
or
sub
lahf
mov
adc
shll
or
jge
in
inc
arpl
add
jge
mov
and
shll
mov
popa
call
jmp
sbb
push
insl
pop
mov
inc
jge
push
adc
push
popf
push
lea
repz
nop
sbb
push
mov
testl
add
mov
pop
stos
mov
loop
jge
xor
jge
push
adc
vhsubps
push
adcl
jno
or
nop
inc
or
stos
jge
sbb
orl
pop
and
xchg
cmp
in
leave
lahf
dec
call
sbb
mov
sbb
pusha
and
adc
jge
adcl
mov
inc
ror
jns
push
lock
cwtl
push
enter
icebp
xchg
push
add
sbb
push
jmp
pop
dec
jge
loopne
pusha
mov
jge
push
add
icebp
add
outsl
punpckhbw
mov
faddl
ficompl
xor
insb
in
popf
push
or
inc
xchg
adc
or
popf
push
jge
sub
xchg
jge
rcll
cmp
jge
dec
push
or
jge
push
lea
adc
loopne
jge
adc
imul
add
jge
test
test
jmp
loopne
movsb
adc
mov
movb
mov
push
xor
pop
add
inc
xor
jmp
in
sub
and
mov
fisttps
xchg
fbstp
and
pop
cmpsb
add
into
fists
and
push
add
xchg
dec
and
adc
pop
jne
enter
add
filds
insb
ja
and
flds
push
jae
mov
fucomip
add
subl
lret
xchg
je
addb
add
mulb
xorl
adc
cmp
pop
dec
push
adc
pop
add
push
mov
mov
sbb
push
inc
popa
pop
imul
xchg
sbb
push
lea
pop
xor
push
lds
adc
es
adc
xchg
fdivr
test
aam
nop
inc
dec
pop
addl
and
push
cmpsb
and
pop
std
cwtl
jb
mov
push
jmp
and
dec
pushf
dec
fs
xorl
sub
pop
or
pop
xchg
push
cmp
sub
sbb
mov
pop
call
push
adc
xor
or
mov
mov
cmp
adc
adc
repz
inc
scas
fldl
or
into
jmp
faddl
call
pop
and
push
fwait
mov
mov
xor
push
add
push
jne
call
cltd
inc
xchg
aaa
es
dec
pop
fildl
aam
ficoms
in
fsubp
dec
mov
add
lock
and
pop
mov
icebp
out
repz
subb
repz
pusha
sub
repz
or
add
or
faddl
mov
sub
repz
cmp
sbb
add
or
mov
subb
xor
inc
ret
add
xor
cmp
mov
rep
js
cs
lods
mov
subb
adc
repz
push
adcb
push
sub
mov
mull
and
repz
mov
repz
subb
repz
inc
xchg
je
xor
pop
adc
or
in
add
mov
mov
mov
repz
adc
and
arpl
pop
push
xor
cs
pop
je
repz
call
orb
mov
xrelease
sbb
aam
cmp
push
jns
or
pop
cwtl
xor
mov
sub
mov
iret
push
inc
xor
xchg
push
and
add
and
mov
add
add
ret
cltd
sub
leave
push
and
jb
mov
mov
pop
cwtl
push
push
add
mov
pop
nop
sub
adc
iret
rorl
orb
add
inc
xor
or
es
inc
add
adc
add
sbb
shrl
add
popa
js
orb
cld
stos
or
adc
xchg
aam
sub
push
orb
subb
xchg
adc
fwait
add
pop
push
push
std
cmp
pop
push
push
and
cmp
sub
sub
push
roll
xor
cs
out
or
and
and
outsb
mov
movl
xorl
sbb
dec
hlt
push
rolb
sbb
xor
mov
adc
xchg
mov
xor
insl
add
popl
lds
or
sarl
and
inc
xor
add
xor
xor
inc
iret
jg
pop
xor
pop
mov
pushf
call
jmp
scas
aad
cmp
xor
xchg
jb
dec
dec
adc
stos
testl
in
idivb
je
cmp
sbb
push
sbb
adc
add
pop
and
shll
loop
test
inc
rolb
out
daa
dec
add
sbb
insb
call
xchg
out
inc
jnp
pop
test
cltd
pop
jo
jo
jmp
mov
iret
out
ja
inc
ret
pop
iret
loop
xor
mov
mov
ss
pop
sbbb
push
mov
out
or
or
mov
jnp
popf
xor
sbb
and
sbb
std
push
mov
shlb
sbb
push
xchg
loope
enter
fmull
cwtl
enter
movsb
xor
adc
sbb
inc
add
push
mov
mov
pushf
or
inc
dec
scas
add
jle
popa
cmp
mov
xor
push
mov
or
call
enter
outsl
std
cmp
add
lcall
jmp
cmp
outsb
mov
loopne
or
icebp
jge
inc
xor
add
in
fstp
ret
jne
cmp
bndldx
adc
fistl
loope
mov
scas
or
pop
popf
jmp
mov
ret
cltd
les
mov
inc
adc
inc
icebp
mov
and
and
and
or
pop
loopne
cmp
lahf
adc
out
adc
pop
das
pop
dec
pop
jno
add
mov
pop
movsl
mov
repnz
add
dec
nop
je
mov
dec
fdivl
or
or
in
cmp
scas
xor
push
cs
jno
xor
mov
cwtl
call
adcl
insb
hlt
addb
mov
adc
push
loopne
popa
das
addl
jg
lahf
out
shrl
rclb
enter
int3
jg
sbb
stc
je
shlb
adc
mov
and
sbb
ret
inc
jge
push
sbb
in
lds
out
push
es
dec
jo
jge
pop
mov
lcall
mov
fs
inc
or
lea
std
mov
pop
mov
stc
dec
pop
and
xchg
jge
sbb
inc
push
js
orl
jge
and
mov
push
inc
cmp
sbb
dec
jge
and
jge
xor
push
loopne
xchg
mov
jne
idivb
jge
mov
cs
dec
jge
es
jmp
fimuls
pop
and
pop
and
es
xor
pop
shlb
cs
jp
negl
call
cmp
jge
ret
cmp
addl
sbb
mov
leave
jo
scas
jmp
adc
add
mov
mov
dec
jge
push
jg
stos
mov
jmp
add
sbb
sbb
mov
addl
rclb
jmp
sbb
dec
jl
cmp
jp
loop
fs
mov
lds
mov
or
sub
lret
inc
leave
jge
jbe
and
xchg
sub
imul
jmp
mov
jge
in
mov
jle
ja
inc
jge
loop
and
sub
push
loopne
cmp
sbb
dec
xchg
jge
fmuls
leave
mov
mov
cmp
jge
addr16
pushf
and
push
adc
movsl
js
addb
fdivl
inc
leave
jge
mov
call
cmp
push
sbb
jge
pop
ss
dec
pop
and
xchg
dec
jge
negb
pop
and
sbb
loop
adc
sub
leave
pop
addl
sub
adc
mov
test
or
dec
jge
push
pop
and
roll
aas
fidivrs
leave
sbb
sbb
sarb
push
jo
cmp
jge
imul
jmp
dec
xchg
jge
sbb
sbb
movsb
leave
mov
mov
and
leave
xor
pop
sbb
or
addb
jge
push
xor
dec
jge
dec
xchg
jge
fildl
or
in
inc
pop
and
ret
jno
xor
xor
sbb
mov
lds
sbb
sbb
pop
and
jo
dec
sbb
and
jo
add
xor
leave
xchg
xchg
or
or
adcl
xchg
jge
and
mov
xor
add
fs
popa
xor
xchg
sub
leave
mov
xlat
aad
push
xor
jge
js
adc
mov
inc
sbb
fldl2t
mov
and
lock
xor
test
mov
shll
dec
leave
mov
aam
fadd
inc
jge
es
shl
jge
lock
xchg
xchg
jno
add
mov
mov
xor
push
xor
stos
push
call
push
jno
lret
and
shlb
dec
pop
roll
fs
andl
ret
leave
xor
pop
jge
loopne
rolb
fbld
dec
xchg
jle
pop
jge
xchg
mov
dec
dec
andl
test
cs
dec
cmp
inc
dec
jl
mov
cmp
jge
nop
and
dec
push
jo
or
inc
jge
jo
push
dec
jge
insl
inc
dec
enter
iret
repz
or
push
aam
les
lods
roll
loope
jecxz
scas
adc
sbb
jecxz
adc
lret
xor
cs
push
adc
cmp
in
pop
nop
test
enter
cs
dec
popf
push
jo
cmp
jge
sbb
inc
leave
jge
iret
repz
push
push
pop
fs
xchg
mov
cmp
xchg
aas
mov
fisubrs
mov
push
jge
adc
cmpb
adcb
and
mov
and
add
dec
inc
cmp
xchg
jno
xorl
push
mov
cmp
es
xor
pop
ret
out
iret
add
call
mov
sub
mov
sub
cmp
iret
and
mov
xor
ret
decl
mov
lods
adcb
xchg
cmp
or
pop
mov
test
inc
leave
mov
add
pop
cmp
cli
fisubrl
leave
cmp
xchg
mov
add
es
xchg
out
pop
sbb
sub
das
sub
push
push
cmp
adcb
add
pusha
fsts
leave
cmp
mov
movsl
or
mov
lock
push
push
xor
pop
pusha
lea
inc
faddl
sbb
arpl
mov
daa
fimuls
mov
or
fcoml
cmp
mov
push
pop
insb
arpl
inc
xchg
mov
add
out
or
sub
cmp
xor
adc
push
bound
mov
adc
or
push
add
or
loopne
add
mov
stc
mov
andl
fs
push
xor
xor
addb
pusha
mov
adc
mov
add
jo
cmp
mov
inc
cmp
subl
dec
xchg
xor
cltd
aad
or
cmp
mov
xlat
leave
js
push
out
push
faddp
inc
cltd
add
out
inc
mov
in
adc
pop
push
push
mov
popa
jg
jmp
adc
outsb
and
aaa
push
push
cmp
je
mov
cmp
outsb
adc
or
leave
jo
cmp
cmp
es
adc
sub
adc
int3
xchg
icebp
sbb
pop
pop
xor
cmp
sbb
out
pop
push
cmp
sub
cmp
icebp
dec
cmp
jo
dec
and
jle
mov
cmp
adc
rclb
adcl
cmp
xor
adc
cmp
fistpll
sahf
push
cmp
jns
lods
push
lea
pop
jns
pop
mov
add
cmp
leave
mov
add
adc
push
cmp
xor
xchg
mov
push
or
mov
sbb
call
or
sub
orl
xor
test
cmp
push
cmp
lahf
mov
mov
test
int3
add
xor
cmp
int3
mov
push
pusha
mov
ja
inc
leave
cmp
xchg
mov
push
push
xor
inc
xor
pop
cld
cmp
int3
aas
sbb
lret
lret
pop
sub
sbb
inc
and
insb
adc
push
mov
xchg
mov
pop
cmpb
cld
out
push
in
test
repz
int3
pop
push
pop
push
sarb
jmp
push
mov
mov
pop
aas
push
and
jns
pop
pusha
pop
mov
push
pop
nop
enter
adc
add
aas
mov
mov
repz
jnp
insb
push
je
test
cmpsl
pop
aas
aam
mov
enter
pop
and
or
sbb
and
fnsave
nop
or
aaa
and
inc
inc
adc
jbe
jmp
and
cmp
add
mov
jns
jmp
and
add
in
sbb
add
and
fstpl
rorl
sti
insl
loopne
mov
mov
leave
xor
or
rorl
adc
and
push
xor
xor
adc
cmp
sti
aad
add
and
adc
outsb
dec
sbb
push
add
stos
or
test
adc
icebp
sub
test
jmp
enter
jo
jge
clc
lcall
pop
ret
jno
pushf
push
xor
jno
xor
and
cmp
xchg
icebp
push
mov
adc
xchg
or
pusha
jno
sub
nop
fmuls
jno
xor
and
mov
and
aaa
lds
cmp
adc
sbb
mov
test
adc
sub
inc
pop
xor
sub
xor
and
ror
rcll
pop
loopne
adc
in
adc
rcl
inc
pusha
leave
push
in
rcrb
cs
and
sub
push
jns
adc
enter
pusha
leave
mov
add
jno
roll
xchg
or
test
push
pusha
leave
jo
shll
mov
dec
inc
sub
sub
pop
pop
mov
adc
push
dec
sub
jmp
xor
mov
xor
or
jno
sub
ja
xchg
sub
pop
sub
nop
fs
pop
sub
mov
insb
or
sub
add
and
and
adc
loope
xchg
out
xchg
or
cmp
and
and
mov
xchg
sbb
dec
xchg
cmpsb
xchg
ret
xchg
jno
outsl
fs
popa
add
ret
xchg
pop
pop
push
arpl
sbb
xchg
xchg
cwtl
adcb
and
dec
xor
movsb
sbb
cmpb
xchg
push
xor
add
lods
and
mov
add
dec
add
repz
sbb
xchg
lods
sbbb
mov
and
rorb
ret
xchg
jno
xchg
fwait
es
mov
xchg
leave
sbb
push
dec
xchg
ret
xchg
and
leave
pop
add
lds
add
aaa
je
xor
sub
xchg
lret
jno
mov
into
xchg
or
iret
adc
and
in
test
setno
pusha
pop
xchg
xchg
sbb
adcb
xor
das
sub
adc
xor
mov
movsl
push
pop
cmpxchg
popa
add
xor
cs
xchg
popf
frstor
lods
add
jo
sbb
test
mov
push
mov
andl
outsb
sub
add
push
add
dec
shr
mov
imul
or
add
call
sbb
or
rcrb
pop
nop
mov
xchg
mov
outsb
inc
mov
and
xor
andb
dec
leave
in
mov
sbb
jle
xor
ljmp
inc
add
sub
mov
sbb
lds
lret
inc
xor
mov
mov
popa
adc
and
andb
mov
cmc
or
iret
and
out
mov
add
mov
imul
pop
and
aam
je
xor
addl
mov
in
adc
push
and
dec
mov
inc
test
in
cmp
stc
mov
or
lock
cmp
and
mov
pop
add
add
shll
call
pop
sbb
inc
xor
fsubs
jae
stc
or
adc
ret
je
nop
mov
bound
or
stc
mov
dec
repz
mov
inc
mov
leave
or
or
mov
pop
out
push
mov
dec
dec
loop
shll
mov
mov
mov
hlt
jae
rcrb
ret
sbb
and
fidivl
dec
fisttpll
movsb
bound
add
jae
pop
or
pop
xor
or
sub
rclb
movsb
pop
nop
mov
jae
and
movsb
ljmp
jno
pushf
sbb
sub
add
xor
or
nop
mov
mov
add
add
cs
jae
fistps
jae
lcall
loop
fs
jae
dec
xchg
daa
jae
jo
mov
pop
nop
mov
or
pop
nop
mov
sbb
jo
jae
dec
push
cmp
xchg
sbb
sbb
sbb
jae,pn
and
sub
jae
and
lods
xlat
in
mov
outsb
pop
jae
ret
pop
cmpl
and
lahf
xor
sub
or
or
or
mov
xor
ret
jae
call
mov
mov
andb
je
xor
inc
ret
xchg
push
push
mov
and
in
je
test
bound
or
mov
pop
jbe
inc
std
xorb
mov
mov
mov
pop
das
std
orb
std
sub
and
cltd
aam
dec
inc
data16
hlt
cwtl
xor
jecxz
shl
addb
and
lret
jae
xor
inc
sub
lods
adc
jae
jno
xor
jbe
xor
sbb
add
xchg
fdivrl
inc
cld
push
ret
dec
fidivrs
xchg
mov
nop
or
pop
jae
sbb
arpl
js
jae
or
and
pop
mov
icebp
mov
mov
jae
pop
nop
mov
and
jo
dec
jae
loope
out
sbb
pop
clc
and
push
call
nop
inc
cmp
rcll
xchg
cmp
push
cmp
dec
int
andl
xor
and
pusha
enter
lcall
pop
xchg
or
or
in
scas
shll
leave
xchg
push
xor
mov
inc
xor
popf
rcll
adc
inc
daa
cmp
ret
and
in
dec
jne
push
fisttpll
and
in
ds
pop
in
jp
sub
and
and
xor
cmp
inc
lods
inc
lahf
push
cmp
and
bound
jnp
sbb
lret
dec
flds
pop
xchg
jne
mov
mov
jo
cs
lret
dec
rol
gs
inc
pop
xchg
iret
jge
mov
outsb
loope
sbb
lret
aaa
aaa
mov
nop
lret
arpl
xchg
adc
shlb
lret
enter
arpl
sbb
or
lret
cs
xchg
lret
sbb
out
add
les
enter
dec
xor
lret
test
faddl
mull
lcall
lods
aaa
scas
icebp
cmp
jae
lea
cmpl
mov
inc
dec
movsb
xchg
bound
and
pushl
call
jno
pusha
lcall
test
push
push
add
xor
sbb
fmuls
pop
or
and
adc
andb
push
les
cmpl
jb
push
add
pop
fisttpl
add
push
inc
xor
cmp
push
daa
aad
nop
or
and
sbb
fdivrs
inc
pop
jnp
sti
mov
sbb
pop
or
mov
adc
cs
dec
cmpsb
or
sub
andb
dec
and
outsl
sub
imul
cmp
mov
add
pop
adc
pop
or
pop
mov
mov
pop
xor
shlb
dec
pop
push
add
sbb
stos
or
dec
dec
mov
inc
nop
mov
loope
inc
inc
nop
mov
jecxz
dec
outsb
aaa
das
adc
inc
and
add
cmp
or
push
pop
pushf
rolb
jo
pop
mov
or
pop
adc
inc
int3
sbb
and
out
dec
xchg
pop
add
nop
mov
pop
and
lods
inc
rclb
xchg
pop
fldl
insl
enter
and
bound
sbbl
es
xor
inc
enter
pop
jl
fwait
mov
imul
inc
jns
adc
sbb
lods
test
outsb
inc
movb
inc
insl
enter
hlt
and
roll
jmp
inc
mov
test
mov
cmp
xchg
bound
fistl
dec
sbb
inc
inc
icebp
inc
popa
outsb
test
popf
lods
pop
mov
nop
inc
imul
jmp
scas
test
and
adc
pop
lret
mov
xor
mov
loop
xchg
cs
mov
nop
push
movsb
cmp
std
aad
adc
cmp
aaa
sub
or
and
mov
mov
subb
mov
rorl
aam
adcl
jb
xchg
lods
pop
sub
mov
and
add
xor
sub
or
or
sbb
dec
xchg
sbb
xchg
lods
add
add
loope
add
xchg
or
loope
pop
jbe
movsb
test
mov
push
add
or
add
pop
and
mov
xchg
xchg
movsb
lcall
int
mov
or
das
and
xchg
aaa
imul
pushl
push
cmpsb
sub
adc
xor
xchg
or
ret
loop
adc
add
add
mov
sub
mov
xchg
cmpsl
mov
jo
or
sbb
out
xchg
iret
enter
pop
mov
xor
xorb
pop
xchg
xor
jno
mov
xchg
imul
xchg
xchg
hlt
add
xchg
stos
xor
pop
xor
dec
add
and
xchg
cmp
mov
xchg
add
je
jae
xchg
andb
xor
jecxz
and
push
add
and
inc
xor
dec
mov
add
jo
xchg
add
pop
pop
xchg
test
leave
push
add
js
dec
inc
push
add
xchg
xchg
sbb
jo
aas
jb
sub
xchg
inc
xor
aas
mov
xchg
xchg
daa
mov
nop
xchg
stc
xor
add
mov
sahf
pop
cmp
addl
sbb
xchg
and
or
xor
jno
adc
dec
orb
add
js
xchg
adc
cmpsl
xchg
add
xor
xchg
add
cmp
ret
inc
xchg
add
nop
mov
xchg
or
add
cmp
add
and
pop
mov
push
test
jmp
dec
cmp
adc
popf
ljmp
dec
in
add
xor
in
cmpl
cmp
add
insl
loopne
add
popf
xlat
add
and
test
fs
popf
incb
add
adc
and
pusha
or
inc
add
add
inc
xor
push
push
popf
leave
dec
mov
int
inc
inc
add
pushf
popf
mov
add
and
popf
or
sbb
inc
and
adc
adc
pushf
int3
popf
xchg
and
adc
call
popf
jmp
popf
push
dec
sti
sbb
leave
fldl
adc
or
outsl
and
jmp
lret
test
outsb
or
popf
in
jecxz
adc
add
sahf
mov
sbb
sub
fs
popf
add
sub
popf
mov
and
aad
jge
and
dec
jmp
sub
and
adc
xor
popf
sub
jns
fcomps
loope
add
repnz
inc
jl
add
jo
inc
stc
icebp
and
push
popf
loop
lods
add
and
popf
add
jmp
popf
pop
dec
test
sbb
leave
popf
int
add
jo
popf
xor
es
push
pop
adc
push
add
js
popf
jo
pop
ja
xchg
cmpsb
popa
icebp
rorb
and
addr16
and
mov
leave
mov
inc
xor
push
popf
xor
xchg
je
adc
add
or
andb
leave
cmp
sub
add
nop
mov
clc
popf
fs
add
sti
jmp
sbbb
nop
popf
xchg
jno
pusha
lahf
mov
add
in
mov
pop
dec
inc
pop
mov
inc
dec
dec
push
xor
popf
and
add
and
test
add
sbb
lods
push
popf
add
cmpsb
xchg
sub
mov
adc
gs
mov
jne
sub
and
or
add
jmp
and
inc
jl
insb
xor
adc
popf
mov
pop
leave
js
inc
popf
test
sbb
add
or
popf
lods
mov
cmp
add
popf
inc
add
lock
popf
add
ljmp
icebp
add
stos
popf
sarb
sub
add
popf
jo
inc
xor
mov
outsb
and
jl
popf
sbb
test
je
call
adc
popf
add
push
sub
jns
call
add
jo
add
mov
mov
popf
nop
sbb
aaa
inc
popf
lods
mov
fs
add
or
pop
popf
andb
js
movb
pop
inc
xor
mov
add
jns
mov
pop
mov
push
shrb
or
sbb
add
popf
in
lcall
sbb
push
add
imul
nop
or
rorb
arpl
add
push
add
dec
adc
ret
insl
inc
add
inc
add
aam
clc
and
adc
xor
out
dec
popf
add
inc
xor
popf
xorl
pop
jnp
jecxz
add
pop
add
lea
es
mov
inc
fxch
lahf
push
js
adc
out
shlb
add
popf
enter
insb
shrl
mov
dec
insb
lods
inc
adc
orb
jno
add
popf
dec
cmp
stos
add
in
pusha
inc
jge
out
dec
sub
adcl
cld
movsl
das
loopne
add
leave
mov
and
aaa
cmpsl
cmp
outsb
or
cmpsb
orb
dec
pop
out
pop
push
movsl
push
xor
int3
inc
and
leave
cmp
add
fdivr
dec
inc
jge
or
out
pop
mov
or
xor
int
jle
add
inc
xor
cmp
fcoml
mov
mov
and
imul
das
push
jo
adc
cli
push
into
inc
fimull
popf
adc
cmp
fcoml
mov
mov
jl
imul
das
add
cmp
push
inc
mov
push
popf
cmp
and
xchg
jno
popf
insl
enter
test
fcoml
mov
and
inc
mov
push
xchg
mov
add
and
pop
gs
push
sti
sub
lret
lret
fnstenv
popf
jle
incl
dec
pop
imul
sub
push
push
stc
std
cltd
add
dec
lret
imull
popf
add
xor
lods
or
jo
inc
popf
faddl
popf
in
andl
add
mov
xor
push
fnsave
daa
sti
sbb
or
adc
inc
sbb
adc
and
add
push
add
adc
outsl
inc
xor
inc
popf
fidivl
pop
enter
mov
and
add
call
adc
xchg
mov
and
push
and
lea
lret
pop
cmp
pushf
mov
sub
sub
push
and
adc
dec
cmp
imul
xlat
pusha
or
sbb
mov
jl
xlat
aad
jecxz
jbe
cmc
xlat
aad
pop
nop
xchg
jne
pop
dec
push
lcall
cmpsl
pushf
jne
loopne
rclb
xchg
popa
adc
jne
inc
sub
add
test
push
push
and
jne
add
mov
scas
daa
rorl
or
push
dec
jne
xchg
ljmp
push
jne
inc
sbb
sbb
inc
xor
xchg
jne
and
jo
xor
mov
inc
sbb
in
inc
or
mov
stos
and
xor
jne
out
sbb
sbb
sbb
mov
pop
mov
sbb
mov
xor
jne
outsl
cmp
jne
mov
adc
mov
insl
xorb
arpl
jne
sahf
xor
add
js
dec
xor
popa
mov
and
cmp
xor
add
adc
fwait
lea
insl
sahf
and
cmpsl
scas
add
bound
and
inc
cmp
dec
add
pop
cld
mov
jne
fs
hlt
nop
or
push
ja
sbb
jne
sbb
and
negb
and
mov
lcall
push
dec
xchg
mov
jge
xor
add
add
add
inc
jge
leave
js
or
leave
sbb
or
add
fdivl
xor
sbb
jge
fs
leave
push
push
pop
push
dec
jge
dec
inc
enter
jb
andb
or
mov
lea
jge
xor
inc
pop
xchg
fmuls
test
add
sbb
sbb
loope
jge
bound
sbb
jge
jmp
insb
fwait
clc
aad
push
push
add
cmpsl
lds
leave
mov
xchg
jge
nop
mov
xchg
jge,pt
leave
mov
xor
jge
cmp
mov
jge
enter
ja
cmp
jge
cld
xor
add
jge
or
mov
loop
das
decb
jge
dec
pop
arpl
mov
aam
bound
push
jge
add
mov
testb
jge
pop
cmp
ret
dec
and
roll
jge
out
add
loop
xor
jo
and
jge
adc
jge
adc
add
aaa
xor
jge
inc
push
sbb
sbb
pop
add
sbb
aam
leave
mov
cmpb
xor
movsl
lcall
addl
pop
sahf
xchg
icebp
push
test
nop
mov
or
xor
adc
jge
dec
nop
jbe
inc
jge
and
scas
push
dec
jge
orl
add
jae
and
cmpsb
jge
and
sbb
leave
mov
sbb
scas
mov
xor
test
lods
mov
cli
lds
std
xchg
jmp
dec
aaa
in
callw
push
imul
seto
sbb
add
lea
inc
pop
pop
lea
in
cltd
sub
call
add
jno
sub
add
mov
push
dec
xchg
xchg
mov
add
xchg
out
mov
push
xor
inc
jge
mov
jge
sbb
sbb
jle
or
mov
push
and
sbb
push
jge
roll
inc
or
jbe
insl
mov
or
ljmp
mov
jge
sbb
jmp
and
jge
mov
sbb
jge
add
mov
mov
lods
sbb
and
jge
push
dec
xchg
ret
nop
mov
pop
pusha
jge
sti
xorl
or
pop
dec
jge
inc
aaa
pushf
faddl
dec
jge
popa
xor
jge
and
sub
jge
add
cmp
fstl
inc
jge
scas
sbb
sbb
or
or
cwtl
jge
movb
mov
push
jge
ret
popa
xor
jge
adc
and
sub
and
jge
and
addl
jge
leave
jo
iret
leave
js
aam
nop
pushf
mov
add
cmpsb
pusha
xor
int3
sbb
or
pop
push
mov
jo
cmp
les
mov
push
sub
lds
mov
add
adc
popf
jmp
mov
or
jge
nop
xor
inc
xor
notl
test
pop
push
inc
aam
inc
cmp
sbb
xorl
cmp
and
jge
sbb
sub
pushf
pop
jmp
xor
jge
jmp
gs
and
jae
jae
cmovs
dec
sub
andb
les
leave
js
jge
pusha
mov
xor
jmp
adc
pop
jge
leave
jo
cmp
mov
jge
cmp
nop
jge
movsl
inc
xor
sbb
nop
mov
inc
sbb
ljmp
push
jge
dec
dec
ficompl
movaps
aad
jge
pop
and
fnstcw
xchg
icebp
add
or
orl
inc
pop
and
fidivrl
pop
add
mov
loope
xor
sbb
andb
xor
out
icebp
cmp
jge
into
mov
add
xchg
nop
jge
xor
push
dec
jge
add
xchg
xor
pusha
pushf
mov
and
cmpsb
xchg
das
inc
xchg
mov
add
nop
mov
fidivrs
mov
and
jge
sbb
adc
in
and
cmp
nop
sbb
cmovs
andb
adc
and
jge
pop
and
push
jge
or
push
je
inc
xor
add
jo
gs
xor
nop
mov
adc
pop
mov
jl
jge
leave
jo
or
xor
jge
xchg
add
test
and
dec
jge
pop
inc
dec
loopne
dec
sbb
and
sub
ret
cmp
cmp
ret
push
jge
pop
jne
xor
jo
xor
jge
fcoml
pushf
pop
outsl
xor
jge
je
jmp
dec
mov
leave
jo
aas
jge
js
in
add
add
xor
xor
sbb
jge
or
inc
mov
les
sbb
jno
xor
test
and
jge
or
push
or
mov
adc
jo
popf
dec
push
imul
adc
jno
popf
xchg
push
lea
mov
inc
in
dec
add
sbb
jle
nop
jno
push
roll
jecxz
or
inc
adc
cmc
roll
and
inc
push
jns
aad
popf
adc
xchg
add
mov
or
es
jns
jmp
test
fs
sbb
sbb
scas
es
inc
cmp
es
mov
jecxz
push
adc
xchg
jno
add
jns
testl
and
iret
add
dec
movb
lods
test
sbb
movl
inc
mov
sbb
scas
daa
nop
insl
ja
dec
nop
inc
in
cs
and
inc
or
nop
or
mov
adc
roll
orb
inc
and
mov
std
push
lods
add
add
inc
and
fcompl
inc
psubd
loopne
or
dec
incb
js
add
leave
adc
adc
inc
ljmp
inc
orb
xor
inc
xor
outsb
int3
xor
lcall
push
rclb
adc
jmp
xor
xchg
icebp
adc
out
orb
test
lds
inc
inc
dec
je
dec
nop
mov
xor
push
mov
es
sbb
and
scas
cmc
bound
nop
mov
pop
inc
insl
in
or
scas
aam
jmp
es
xchg
cmpsb
add
jnp
inc
xor
in
add
add
pop
pop
sub
andb
inc
sub
clc
je
jbe
or
sub
mov
jp
inc
dec
nop
inc
int
mov
test
ret
imul
mov
jns
data16
int3
add
pop
lret
arpl
out
outsl
ss
or
rolb
adc
mov
lods
repnz
mov
xchg
inc
jne
push
dec
nop
mov
jno
ret
or
sbb
leave
inc
or
mov
inc
jle
call
out
inc
or
andb
xor
inc
jns
or
cmp
dec
std
icebp
xchg
es
in
inc
lcall
inc
and
imul
cwtl
inc
and
push
call
xchg
jno
inc
lds
mov
and
aaa
sub
inc
xor
adc
leave
sbb
inc
or
in
aad
inc
shrl
jb
mov
inc
inc
push
aaa
xor
inc
inc
add
mov
nop
mov
js
sbb
es
movb
ds
xor
faddp
sbb
and
mov
and
pop
add
add
add
adc
jno
les
orl
sbb
iret
add
pop
pop
sub
push
mov
lret
pop
sbb
add
sbb
roll
das
add
imul
sahf
fisttpll
pop
mov
into
dec
xor
pop
jne
mov
add
je
xor
push
and
add
movsb
loopne
popf
or
xor
xchg
popf
inc
xor
inc
jo
mov
cmp
or
mov
fisttpll
mov
andb
dec
inc
icebp
adc
or
cs
stc
mov
add
or
sbb
inc
fs
xor
imul
or
jns
imul
andb
lcall
andb
push
or
mov
sbb
or
add
jp
dec
pop
rcrl
cs
xchg
add
jl
pop
nop
mov
pop
popf
sbb
imul
sbb
mov
mov
sbb
in
jl
mov
xchg
popf
andb
xchg
or
xchg
popf
sahf
push
sub
xor
or
jno
popf
xor
xchg
push
xor
sub
push
jno
popf
sub
dec
jmp
nop
mov
clc
arpl
mov
pop
and
loopne
fs
popf
pop
nop
mov
dec
xor
push
pop
pop
nop
mov
loop
pop
popf
and
out
fdivr
add
mov
or
orl
sbb
pop
nop
popf
push
lds
mov
cmp
and
inc
add
xor
mov
sbb
popf
mov
popf
add
and
fs
sub
jo
mov
mov
pushf
push
mov
dec
popf
pusha
add
orb
xor
les
inc
popf
cmp
andb
aas
jno
xor
jecxz
push
es
popf
rsm
jecxz
jge
fwait
push
xlat
jnp
add
jecxz
rcrb
pop
popf
rolb
push
or
iret
std
call
sub
nop
mov
mov
repnz
pop
popf
mov
add
fwait
jns
and
and
popf
pop
and
push
loopne
pop
add
mov
xor
push
loope
cltd
adc
jne
dec
daa
or
mov
mov
stos
popf
mov
popf
jge
std
jae
lods
mov
andb
mov
les
shlb
cs
popf
add
xchg
mov
repnz
sbb
rcrl
and
std
add
adc
inc
xor
pop
fcmovb
inc
xor
test
mov
leave
mov
sbb
ret
sub
loop
shlb
add
and
nop
mov
inc
mov
dec
mov
adc
or
mov
mov
push
dec
sbb
out
cmpb
data16
nop
aas
push
pop
mov
or
cs
and
leave
cmp
mov
xchg
loope
add
orl
es
scas
int
addr16
les
fs
aas
nop
mov
add
loopne,pt
and
aas
push
mov
aas
add
and
or
aas
fistl
xchg
xchg
mov
test
fisubrl
mov
push
adc
and
dec
xchg
mov
dec
push
sbb
cltd
pop
out
int3
test
das
inc
or
cmp
or
push
inc
int3
nop
mov
inc
in
pop
and
lds
sbb
adc
inc
mov
and
in
xchg
xor
rcrb
mov
push
pusha
cmp
mov
incl
nop
or
clc
sub
addr16
mov
jmp
call
enter
subl
inc
or
sbb
jno
daa
mov
jo
sub
add
mov
sbb
and
stos
sub
and
out
sahf
inc
stos
sub
mov
pusha
and
repz
iret
int3
or
or
adc
and
arpl
mov
dec
sub
or
jo
sub
sub
jno
xchg
mov
push
sub
sub
dec
sub
mov
push
push
in
outsb
test
xor
adc
sub
pop
xchg
xchg
sub
push
pushf
test
push
push
xchg
call
xchg
test
sub
fsubl
sbb
sub
xchg
jecxz
xchg
sub
push
pop
xchg
inc
xor
enter
ja
sub
adc
inc
dec
sub
sub
icebp
mov
ret
lea
sbb
fcoml
cmp
dec
sbb
sub
leave
mov
call
mov
xchg
xor
sub
nop
or
jmp
or
outsl
nop
or
test
mov
sub
test
mov
repnz
mov
mov
jne
adc
dec
cmp
and
sub
push
sub
inc
dec
sub
add
add
push
outsl
in
mulb
pusha
divps
adc
shll
or
dec
sub
in
jmp
cmp
add
nop
pop
or
push
or
jnp
pop
sbb
roll
outsb
orb
sub
mov
adc
xor
loopne
mov
test
test
and
orb
roll
mov
push
orps
and
add
test
sub
leave
jo
insl
or
lock
sub
sub
jmp
push
fsubl
adc
or
ret
sub
adc
ficomps
sub
mov
ja
pop
push
push
movsb
push
in
sub
jns
fs
out
cwtl
and
sub
pop
sbb
pop
push
je
push
enter
mov
int3
dec
inc
xchg
mov
ret
add
mov
shrb
sub
push
xchg
xchg
rclb
inc
les
mov
push
add
jae
and
adc
jae
adc
sub
add
scas
rolb
rcrb
push
scas
add
mov
lea
mov
or
mov
mov
ret
mov
scas
addl
lds
bound
dec
xor
rcll
xchg
jecxz
fcom
dec
sbb
inc
adc
les
ss
shll
insb
enter
mov
inc
pop
cmp
enter
cmp
jbe
adc
scas
xor
addb
rcll
sarb
mov
sbb
shrl
sbb
outsb
mov
push
cmp
dec
inc
ret
test
fisttps
cmpsb
call
xor
adcb
xchg
lock
add
pop
or
xchg
lods
jno
mov
ds
and
cwtl
mov
and
shll
xchg
rolb
enter
rol
xchg
fnsave
jb
add
sub
ret
imul
pop
mov
jecxz
shl
pushf
pusha
mov
jecxz
shll
clc
dec
insl
or
call
jmp
push
pop
adc
mov
enter
xchg
ss
rorl
outsb
xchg
es
jl
cmp
arpl
or
inc
xor
mov
je
mov
adc
nop
loope
xchg
imul
mov
inc
push
rorl
shll
dec
rol
xchg
insb
jne
mov
rol
pop
rorb
cmp
mov
out
fcoms
xchg
mov
ss
ja
and
movsl
and
leave
xchg
mov
jl
mov
inc
movb
and
push
js
jge
add
mov
das
jecxz
rcrb
push
call
call
mov
jge
fiaddl
mov
ret
hlt
push
jl
sbb
fdivrs
stos
xor
and
stos
fcoms
sbb
fcoml
push
int3
sbb
out
fdivrs
or
scas
xchg
inc
sbb
jge
or
sahf
mov
nop
xor
jge
or
sbb
iret
jecxz
movb
mov
jge
xchg
inc
les
in
mov
jge
mov
mov
nop
xor
lods
and
ss
pop
mov
fs
cmpl
and
bound
sbb
nop
pop
mov
loopne
sub
fs
nop
xor
xchg
and
mov
jge
adc
xor
pushf
jge
int3
les
in
adc
stc
repz
mov
push
cli
push
jne
cli
jno
cmpsl
stc
cmp
cmpsl
icebp
rclb
aas
cmp
fs
or
enter
fs
push
jge
fwait
les
ss
mov
sahf
repnz
mov
movsb
nop
rclb
pop
cmpsb
cmp
xchg
and
jge
adc
ss
fcoms
add
add
adc
and
insl
rorl
and
cmp
imul
mov
sub
push
sbb
mov
arpl
push
dec
xor
cmp
xchg
push
mov
sub
stos
imul
sbb
rorl
dec
xchg
ret
dec
inc
leave
mov
pop
sbb
dec
imul
add
mov
ja
ret
dec
das
cmp
xor
pop
cmpsb
adcl
pop
and
xor
push
xor
jne
fsubs
sbb
mov
popf
xor
int
sub
xchg
imul
jno
add
push
xchg
xchg
mov
adc
adc
mov
fildll
add
xor
xchg
push
lea
push
xchg
xchg
add
mov
sub
leave
cwtl
mov
dec
add
and
int
sub
adc
add
fstpl
jae
leave
push
add
jb
mov
inc
xchg
mov
adc
leave
clc
clc
iret
cmp
and
and
xor
push
adc
mov
or
add
dec
jge
lahf
mov
xchg
popa
mov
test
pop
pop
mov
adc
popa
leave
pop
mov
dec
pop
ret
and
cmp
jmp
and
and
stc
jo
test
xchg
cwtl
cmp
mov
pop
inc
push
stc
enter
nop
stc
push
and
mov
inc
add
mov
pop
pop
push
andb
and
inc
jp
nop
mov
and
std
leave
js
add
loopne
push
add
and
sub
ja
jnp
jns
dec
mov
push
pop
xor
or
push
lds
movsl
xchg
mov
cmp
jnp
pop
clc
dec
adc
inc
popa
leave
jnp
push
test
imul
sbb
or
xchg
cmpsb
xor
call
xchg
lods
adc
inc
dec
xchg
xor
aam
in
or
lods
iret
xor
sbb
mov
xchg
pop
push
add
sub
pusha
adc
test
or
inc
aam
sbb
inc
lods
aaa
incb
test
or
js
lods
inc
xor
lret
ret
ja
lods
mov
cmp
mov
or
test
fmull
add
or
cmp
pop
pop
adc
inc
xor
lods
test
hlt
xchg
jmp
mov
lods
fsubs
test
lods
inc
dec
xchg
shlb
lods
xchg
jae
and
cmpsl
inc
add
outsb
shrb
cmp
ret
inc
lods
bound
inc
xor
inc
dec
or
sbb
add
or
les
aas
cmp
inc
pop
loop
jecxz
fwait
loopne
cmp
add
and
test
lods
adc
pushf
push
push
subb
xor
push
loopne
sbb
lods
testl
lods
push
adc
test
lods
test
lods
and
je
jb
pop
xchg
push
and
jae
sbb
inc
mov
and
mov
and
sub
push
jae
sbb
sbb
push
xchg
add
shrb
inc
jae
add
jo
mov
add
pop
cmp
inc
sbb
dec
jae
push
xchg
add
mov
inc
or
or
adc
or
into
push
push
adc
jo
add
lock
xorb
push
out
adc
cmc
and
adc
sub
xorb
lods
xchg
mov
inc
add
jo
push
add
mov
and
xor
sbb
and
sub
scas
dec
and
lahf
xchg
lret
jmp
es
mov
movsb
xor
push
mov
inc
sbb
pop
or
or
sbb
inc
or
xlat
nop
inc
pop
insl
adc
push
or
pushf
mov
xor
mov
and
pusha
ja
xor
push
inc
dec
xchg
addl
dec
xor
push
and
lcall
mov
inc
dec
testl
and
pop
out
cmp
leave
pop
scas
and
mov
xor
sub
inc
xor
outsb
jmp
testl
movsl
nop
inc
xor
cmc
or
out
jbe
mov
repnz
les
xchg
and
cmp
cmp
push
orb
ljmp
data16
cwtl
mov
dec
jae
mov
mov
inc
xor
cmpsb
and
mov
cs
mov
fs
dec
pusha
mov
xor
shl
pop
fsub
cmp
enter
inc
mov
leave
rorl
cs
push
fs
or
nop
push
loop
rcll
inc
xor
sbb
mov
xchg
and
sbb
je
cs
xchg
cltd
mov
add
mov
aaa
rorl
sub
rolb
inc
jge
mov
sarl
shll
xor
inc
sub
jno
shll
out
mov
or
mov
or
ret
subb
add
test
add
jg
push
adc
aas
push
inc
push
and
xor
nop
mov
repz
fsts
pop
pop
shll
roll
jnp
or
loopne
add
xchg
mov
shrl
push
pop
and
addr16
in
pop
and
push
push
push
adc
xchg
icebp
mov
sbb
fstps
push
push
js
push
xor
scas
jl
push
inc
leave
movb
shll
mov
dec
test
sbb
and
rorl
xchg
in
je
and
jno
mov
nop
or
and
push
dec
ljmp
xchg
jle
adc
xor
inc
pop
nop
or
inc
rcll
ret
push
lcall
pop
outsb
negl
or
jno
xor
loopne
mov
sbb
push
sbb
add
sbb
mov
fcomps
add
jecxz
rorb
xchg
and
push
pop
shll
pop
shl
pop
pop
and
aam
adc
cs
sarl
dec
xchg
rcrl
add
or
sub
nop
mov
jmp
mov
mov
roll
and
dec
sbb
cmpsb
in
movsb
mov
fistps
xchg
or
add
inc
xor
inc
push
adc
push
jo
testl
rol
roll
sbb
test
mov
scas
arpl
xchg
les
or
fs
neg
insb
loopne
roll
dec
xchg
xchg
add
and
or
push
push
xor
pop
and
xor
jne
xor
bsr
cli
movsl
in
jp
xor
jbe
inc
mov
sbb
xor
jecxz
into
fdivp
sub
jo
je
addr16
mov
mov
jl
push
inc
ret
call
mov
inc
lcall
bound
xor
xor
mov
nop
or
dec
xor
pop
sbb
jg
dec
xor
pop
push
fisttps
xchg
rorb
mov
jae
repnz
add
hlt
jo
sub
xchg
lret
sarb
andb
adc
inc
mov
sbb
cmp
xor
push
jb
xorl
push
je
adc
xor
xor
inc
aaa
test
push
adc
leave
or
dec
nop
xor
dec
xor
xor
add
jo
xor
sub
aad
lods
loop
sbb
mov
or
or
jne
xor
cmp
sbb
add
add
orl
xor
inc
xor
pop
popf
nop
mov
pop
enter
out
leave
pop
pop
cs
inc
xchg
imul
push
mov
pop
sbb
lds
add
inc
xor
push
and
addl
stos
or
jmp
stc
jecxz
mov
xor
sbb
stc
dec
xchg
xchg
jl
jo
sub
xchg
push
test
add
xor
stc
ds
push
xchg
dec
call
jmp
push
aaa
mov
mov
nop
stos
stc
in
loopne
or
inc
xchg
pop
add
dec
stc
push
add
fsub
shlb
stc
in
mov
cmpsb
or
or
or
mov
add
jo
test
stc
pop
add
leave
stc
orb
loope
stc
sbb
clc
dec
push
enter
adc
add
adc
mov
cmp
ret
stc
mov
xchg
icebp
in
stc
sbb
js
xor
cmp
imul
mov
popa
mov
mov
inc
adc
mov
insl
dec
push
nop
mov
ja
out
rcl
xchg
mov
push
arpl
sbb
ficoml
adc
push
cmp
mov
fs
es
jbe
sub
adc
mov
or
pop
insb
add
aaa
pop
imul
loopne
jnp
ret
bswap
or
hlt
add
or
adc
xchg
sub
sub
inc
bound
fwait
cmp
dec
enter
fldcw
fwait
xorb
and
mov
or
push
repnz
push
xor
xor
add
stc
es
daa
pop
inc
outsb
ja
sbb
sbb
pop
inc
xor
stc
aaa
dec
adc
push
inc
stc
add
jl
test
test
sbb
scas
inc
andb
jmp
jg
xor
sbb
movsl
in
lcall
aam
fcoml
stc
mov
leave
mov
push
xor
add
add
stos
and
stc
cmp
nop
mov
arpl
ret
push
xor
jno
fcompl
inc
mov
pop
or
adc
push
nop
or
dec
andb
xchg
popa
adc
test
addl
xchg
pop
push
nop
or
xor
fs
cmpsl
leave
call
sub
add
push
push
mov
dec
or
push
mov
dec
push
mov
xor
rolb
leave
xchg
andb
push
xchg
xchg
inc
inc
and
dec
xchg
pop
call
clc
mov
repnz
sbb
inc
lods
mov
push
jecxz
fs
or
dec
movb
xlat
add
mov
stos
add
jno
xor
addb
loopne
fs
push
sbb
mov
imul
push
leave
ljmp
inc
xor
sbb
jno
pop
repnz
sbb
inc
js
popf
call
inc
rolb
dec
xchg
push
dec
mov
xchg
add
es
and
cmpsb
xchg
or
pop
ret
rcrb
sbb
adc
mov
insl
repnz
push
mov
nop
mov
push
faddl
popa
sbb
jne
nop
mov
mov
jmp
add
subl
test
push
movsb
inc
shll
adc
xchg
and
data16
fistpl
cmp
push
pop
xchg
xchg
loopne
fs
or
xchg
mov
bound
mov
je
xchg
loope
mov
add
jnp
and
jo
pop
mov
ret
push
insl
ret
icebp
hlt
fiaddl
jp
scas
sub
pop
and
test
pop
push
ret
filds
xchg
jne
xor
and
jno
sbb
cmp
addl
push
dec
mov
sub
scas
or
push
push
dec
mov
nop
iret
mov
leave
mov
jns
loop
loop
gs
inc
mov
outsb
inc
iret
arpl
jle
pop
popl
lcall
jnp
inc
push
inc
lods
movl
add
nop
icebp
cwtl
push
test
into
inc
xchg
hlt
mov
jecxz
mov
daa
sbb
push
mov
sbb
push
push
inc
pop
jb
ss
cmp
data16
jl
mov
pop
xor
rclb
xor
xlat
xor
shrb
xor
sub
sbb
add
push
fsts
ss
mov
push
add
adc
scas
shrw
insb
enter
notb
jecxz
and
mov
addr16
fs
xchg
inc
nop
inc
sbb
es
out
mov
jecxz
dec
mov
enter
lret
shrb
jp
adc
sbb
or
sbb
fwait
shrb
movsb
lcall
and
sub
mov
mov
insb
enter
rcl
xchg
enter
stc
loop
mov
add
or
fs
dec
sbb
mov
fadds
movw
adc
ss
xor
lds
add
ljmp
add
mov
std
xchg
ret
push
sbb
sub
repnz
fdivrs
dec
xchg
ja
in
mov
bound
movsl
repnz
add
xchg
xchg
test
lret
call
inc
stc
sub
enter
enter
cmpsl
push
or
les
ret
pusha
int
movl
mov
outsl
mov
add
fldt
insb
enter
fsts
mov
jecxz
int
cmpsl
subb
or
shlb
test
adc
xor
loop
cltd
pop
cmp
xorb
jl
mov
cltd
sub
sub
sbb
jp
pusha
ss
jge
clc
or
sbb
adc
cld
push
lcall
mov
jb
gs
sbb
orb
sbb
cwtl
or
ss
pop
pop
mov
insb
enter
sbb
shrb
pop
icebp
mov
pop
enter
ficoms
mov
sar
push
mov
mov
or
out
jnp
or
loopne
cwtl
cwtl
das
mov
stos
in
cmovnp
bound
das
imul
jne
arpl
insb
enter
xor
js
das
push
mov
nop
icebp
mov
dec
lock
loope
xchg
sbb
int
jnp
addr16
lock
das
cmp
pushf
mov
pop
add
pop
or
mov
lcall
inc
leave
adc
sbb
jmp
icebp
mov
or
fsts
inc
push
in
cli
push
xchg
mov
pop
or
mov
nop
xor
sbb
fisubl
mov
das
sbb
out
adc
sbb
and
ret
xchg
add
outsb
imul
cwtl
or
das
or
cli
nop
mov
lcall
fldcw
cmp
mov
outsb
push
nop
jno
data16
dec
pusha
mov
das
jnp
adc
inc
das
lds
mov
mov
arpl
punpckhwd
inc
and
enter
inc
xchg
scas
das
jo
cmp
add
das
sbb
sbb
inc
enter
ret
rcr
lret
popa
xorb
icebp
dec
jecxz
lock
sub
fldcw
shrl
movb
ss
cmp
xchg
inc
das
mov
das
faddl
jb
xchg
loopne
xor
mov
loopne
ficoml
push
imul
out
scas
pop
sbb
sbb
mov
test
add
inc
xchg
arpl
fdivrs
ss
insb
enter
xor
or
xor
lods
inc
das
outsl
xchg
xchg
add
das
cmp
inc
data16
hlt
mov
nop
xor
fs
das
inc
pusha
cmpb
test
mov
das
adc
sbb
inc
loopne
xchg
loope
push
sub
or
xchg
sbb
imul
iret
xchg
jne
dec
fadd
insb
enter
shrb
fs
lcall
fs
pop
jg
inc
push
fsubrs
push
jne
imul
das
add
xchg
fsts
enter
das
cs
aam
das
sbb
das
adcl
jnp
insl
gs
xor
cmp
loope
mov
or
rcll
mov
das
hlt
push
pop
insb
enter
je
push
les
xor
dec
bound
sbb
and
es
nop
xor
test
mov
pusha
ss
in
xor
xor
jp
das
cwtl
or
das
inc
xchg
sub
and
jb
das
enter
shlb
shrl
in
shrl
lods
jo
and
das
and
cmc
adc
outsb
test
nop
das
inc
or
xor
and
mov
ret
inc
das
pop
sbb
lcall
fs
das
sbb
sbb
out
mov
xor
xchg
int
add
shrb
inc
xchg
das
les
aad
or
sarb
or
in
adc
dec
adc
loope
xor
call
xor
ret
enter
das
pop
sbb
shrl
xor
insb
enter
ss
jnp
cmp
outsb
das
and
or
lahf
or
iret
insb
enter
or
jno
das
sar
and
int
das
and
or
xor
add
or
sbb
adc
daa
sub
jecxz
popa
xchg
adc
add
and
data16
insl
adc
movsb
mov
popf
nop
adc
pop
int3
xchg
je
pusha
xchg
insb
enter
and
neg
nop
mov
xchg
pusha
ss
das
insb
enter
xchg
fs
pop
int
out
pop
addr16
mov
call
enter
es
push
pushf
mov
and
daa
adc
fldcw
dec
ljmp
das
arpl
fmull
sbb
xor
jle
das
mov
adc
cwtl
or
and
repnz
insb
enter
lret
ret
fisubrs
adc
das
or
ljmp
in
cli
push
add
pop
sbb
mov
das
sbb
xchg
lcall
das
fld1
and
inc
das
daa
pop
in
lcall
mov
lahf
imul
or
cmp
ss
out
data16
jns
jp
or
xor
mov
mov
jbe
das
movb
stos
mov
dec
push
movsl
je
test
or
das
mov
insb
enter
adc
or
push
test
inc
or
dec
sub
sbb
das
push
aas
xchg
push
inc
pop
dec
call
dec
mov
sub
mov
jecxz
das
addr16
inc
push
fcompl
pusha
xor
inc
je
pop
lds
imulb
xchg
jno
das
push
sub
int
das
mov
pop
das
jbe
inc
jns
test
sbb
data16
sbb
ss
enter
insl
ss
dec
cmp
das
jo
sbb
dec
pusha
das
fsts
and
mov
push
mov
xchg
pop
mov
dec
cmp
inc
xchg
shrb
jns
jno
outsl
pushl
inc
das
jl
lahf
inc
scas
and
enter
inc
pop
xchg
nop
and
das
aaa
in
xor
fldcw
inc
push
das
enter
sub
push
sub
fwait
or
sub
or
repnz
sahf
sub
sbb
movsb
fldcw
add
lcall
nop
mov
xchg
push
test
sub
fnstenv
mov
jno
int3
xchg
cld
int
or
adc
js
xchg
push
fs
lds
add
push
push
inc
pop
movsb
cmp
mov
push
mov
test
push
lcall
mov
dec
ds
push
xorb
add
jge
adc
dec
jmp
push
fnstenv
add
add
dec
jp
movsb
jb
jl
mov
nop
out
push
mov
clc
or
mov
sbb
dec
stc
add
mov
dec
jp
sbb
call
clc
loope
or
jb
stc
test
mov
es
pop
out
sahf
xor
jge
mov
mov
sub
outsb
mov
nop
sub
cmp
xor
xor
and
enter
sub
insb
sub
or
movsl
icebp
mov
ret
add
sub
enter
sub
ja
insb
sub
cmp
xchg
xor
ret
sub
sub
ret
insl
sbb
xchg
mov
add
ret
inc
jl
sub
sbb
and
inc
push
sbb
cwtl
or
bound
or
rorb
sub
sub
add
pop
ficompl
sub
jl
cmp
into
insb
enter
and
cmp
inc
testl
cmpb
sub
cmp
push
sarl
jmp
andl
bound
mov
cwtl
or
pop
mov
call
sub
shll
pop
mov
lea
int3
xchg
ret
cwtl
xchg
push
subb
movb
mov
mov
sub
nop
popa
rcr
addr16
out
push
or
xchg
nop
lret
pop
jl
hlt
jecxz
jno
or
jle
out
or
out
sbb
rcrb
aas
xchg
pop
int3
sub
sbb
mov
and
sub
dec
fsubs
pop
pusha
sbb
fbld
fwait
pusha
ss
pop
ja
xchg
or
sbb
popa
sub
fs
xchg
xor
xor
pusha
xor
add
mov
insb
enter
xchg
xchg
pop
into
test
cmp
or
xor
sub
xor
add
xor
aaa
xor
sub
out
lcall
xor
sub
jns
dec
or
addr16
xchg
in
sub
insb
enter
sub
fs
sahf
sub
inc
sub
jno
sbb
push
out
pop
push
test
or
add
outsb
adc
xchg
sub
inc
xchg
or
call
xchg
mov
in
mov
sub
fs
sbb
inc
loopne
sub
mov
xlat
mov
sub
imul
ss
sbb
rol
adc
insb
enter
insb
enter
inc
xchg
je
mov
fsubl
pop
mov
sub
pusha
sub
insb
out
inc
imul
mov
or
scas
sub
xchg
push
inc
jbe
add
mov
jecxz
sub
xchg
and
int
pop
inc
popl
sub
jmp
mov
xchg
inc
rolb
int3
xchg
popf
cmp
bound
fs
sub
cs
xchg
test
sbb
scas
cs
flds
mov
push
sub
sub
mov
jecxz
shrl
subb
in
adc
jno
push
push
push
push
mov
and
sub
fsts
pop
cmpsb
lea
xchg
cs
popa
imulb
cwtl
or
or
jne
inc
sbb
cwtl
sub
add
scas
dec
subl
adc
inc
xor
sub
mov
aam
push
inc
shrb
xchg
cmp
sbb
mov
push
add
xchg
pop
arpl
je
push
cwtl
adc
pop
or
movsl
add
sub
add
sbb
sub
inc
xchg
mov
push
xor
ret
or
xor
mov
sub
adc
ss
mov
adc
fsts
int3
xchg
xor
xor
ret
sub
pop
movsl
inc
add
enter
cmp
xlat
sub
loope
aad
sub
cwtl
or
sub
push
mov
xlat
subb
nop
popa
xor
les
jmp
sub
xor
cmpsb
enter
sub
mov
push
sub
sub
push
sbb
cld
jno
pusha
ss
push
lret
fsts
adc
and
pop
sub
add
add
insl
sbb
sbb
sbb
into
cld
sub
push
mov
jecxz
sub
nop
loope
or
and
stos
sub
mov
test
pusha
ss
jo
orb
sub
sbb
mov
or
pushf
cmpsl
sub
pusha
jo
sub
jae
das
push
inc
inc
sub
fdivl
push
pusha
ss
jo
int3
xchg
xor
shr
sub
imul
in
aam
sub
or
ljmp
add
shlb
jle
cwtl
or
mov
je
fsts
xchg
add
fldcw
jnp
movsb
lods
out
scas
push
sub
mov
nop
mov
sub
sbb
outsb
mov
dec
mov
and
sub
and
cmpsb
sub
sub
sbb
out
ss
sub
in
shrb
mov
fdivrs
enter
ret
sbb
lods
sub
inc
push
add
sub
aad
incb
mov
or
push
insl
lret
push
push
int
sub
xor
popa
lods
les
ss
outsb
sub
adc
inc
mov
sub
sub
add
or
push
fidivl
push
mov
inc
and
mov
sub
subl
clc
add
push
cmp
into
add
or
mov
sbb
add
sbb
clc
xlat
cmc
stc
inc
subl
sub
and
mov
jecxz
push
sub
lock
cmp
xchg
xchg
sub
sub
xchg
das
jmp
sub
orl
xor
sub
xor
cmpsb
test
dec
xor
insb
sub
sub
or
xchg
or
fsts
sbb
push
stos
sub
dec
xchg
ljmp
ss
xor
sbb
mov
push
out
test
push
mov
sbb
add
hlt
adc
int3
xchg
ljmp
ds
fsubs
into
sub
pusha
ss
or
mov
or
bnd
pusha
ss
inc
and
inc
sub
cmp
out
mov
sub
mov
mov
adc
inc
push
sub
ficomps
jmp
loopne
adc
lock
movsb
or
sbb
sbb
sub
popa
ss
push
sub
fs
in
mov
test
mov
adc
enter
push
fsts
push
sbb
out
mov
fs
xor
fs
shrb
test
inc
hlt
sub
dec
lds
sbb
repz
imul
push
push
push
mul
cmp
es
or
out
cmp
cs
aaa
push
daa
aas
out
push
pop
pop
pop
jge
mov
test
mov
in
in
cld
inc
data16
mov
pusha
mov
jge
inc
gs
xchg
mov
filds
push
scas
push
sub
out
inc
pop
jo
mov
and
sub
int3
xchg
adc
mov
das
inc
xchg
shrl
data16
notb
xchg
das
mov
popa
aad
push
lods
jecxz
inc
das
popf
lods
and
and
add
cwtl
and
int3
xchg
xchg
pop
add
fiadds
lret
or
ror
add
shrl
dec
mov
das
or
das
das
ljmp
fs
ja
sbb
mov
bound
les
das
dec
and
xor
xor
call
sbb
rcr
jg
inc
das
push
jmp
sbb
jno
das
push
fcmovnbe
insb
sahf
arpl
mov
fildll
inc
xchg
and
and
cmpsb
das
sbb
cmp
push
fsts
nop
jno
mov
rcrb
mov
sbb
js
faddl
xchg
int3
bound
enter
or
out
bound
das
cmp
inc
imul
sbb
data16
iret
js
mov
ss
outsl
push
stos
fsts
fs
push
mov
mov
ret
hlt
add
out
cmp
inc
jnp
out
das
es
jle
hlt
and
push
int3
xchg
inc
pop
int
das
inc
xchg
cwtl
add
imul
mov
das
push
push
inc
xchg
aas
adc
mov
ret
and
adc
sub
xchg
sbb
xor
mov
das
dec
bound
fs
das
mov
jecxz
pop
data16
mov
push
into
movsl
pop
mov
add
adc
lcall
roll
and
out
and
cmp
sub
xor
xor
xor
dec
sbb
lahf
or
inc
adc
xchg
rcrb
in
jo
xchg
sub
mov
jecxz
das
xchg
ret
inc
add
inc
inc
popa
push
lds
jae
stos
fildl
bound
fs
rclb
das
insb
enter
fs
inc
fisubrl
daa
fsts
pop
push
lods
mov
xchg
or
call
mov
add
mov
nop
das
bound
xchg
sub
sar
cmp
das
inc
xchg
mov
xor
xor
add
das
sbb
data16
rclb
in
pop
dec
jmp
lahf
loop
cli
insb
enter
mov
shrb
shrb
push
fmull
mov
inc
insl
sbb
enter
or
adc
pusha
sbb
das
sbb
into
mov
std
loope
scas
sbb
cmp
pop
jbe
mov
sbb
out
loopne
or
xor
rcrb
das
mov
jecxz
jno
fs
bound
and
sbb
into
out
xor
jo
das
sbb
dec
ljmp
loope
adc
mov
fsts
insb
enter
fsubl
cmp
xor
xor
fsts
sub
das
out
or
xor
das
das
mov
ret
imul
lods
cwtl
das
test
scas
cwtl
or
int3
xchg
cmc
mov
and
pop
mov
stc
push
pusha
ss
shrb
xchg
movsb
fstps
sub
stos
lcall
das
test
int
das
bound
fs
sbb
insb
enter
mov
das
mov
ljmp
sub
scas
or
inc
jne
das
push
pop
popa
add
mov
mov
inc
das
or
xchg
pop
das
xchg
faddl
int3
das
ds
xchg
push
das
jnp
sbb
das
pcmpgtb
andb
shrb
into
mov
pusha
ss
das
ss
bound
cmp
das
sbbl
pusha
ss
lret
pusha
ss
aas
xchg
int
mov
rolb
or
call
or
das
sbb
push
inc
in
and
push
xor
fcoml
inc
sbb
inc
lea
data16
ret
or
enter
scas
and
push
enter
add
mov
mov
mov
jecxz
das
pop
cmp
nop
loope
add
and
faddl
jno
sbb
xchg
lods
sbb
pusha
and
lcall
push
das
lods
add
xor
lret
xor
xor
repz
inc
ret
enter
fsts
lea
sbb
roll
out
add
and
sbb
mov
sbb
es
testb
xchg
call
icebp
dec
das
into
insb
enter
das
call
or
int
mov
add
das
fdivl
and
mov
push
inc
push
int3
xchg
subl
sbb
das
int3
xchg
icebp
cmpsb
inc
ficoms
push
mov
das
enter
xor
lods
and
cmp
movsl
jb
mov
cmp
xorb
xchg
mov
xor
or
cmp
and
das
les
aam
insb
enter
fnstcw
mov
fwait
das
mov
pusha
ss
jbe
enter
lock
les
inc
insb
fistps
pop
mov
and
fsubs
adc
fcoms
xchg
mov
mov
nop
mov
push
mov
arpl
push
insb
enter
nop
loope
je
rorb
pusha
faddl
les
mov
enter
stos
or
sahf
mov
bound
les
xchg
mov
push
mov
mov
push
icebp
xor
les
popa
mov
xchg
and
cmpsl
ficoms
jecxz
mov
cmp
pop
jmp
popf
xchg
mov
imul
pusha
dec
popf
xchg
cmpsl
and
jge
imul
inc
push
orb
je
and
daa
push
mov
int
add
pop
adc
sbbb
adc
dec
dec
add
cmpsl
and
jnp
faddl
push
cmp
mov
and
sarb
xorb
inc
cmpsl
jnp
popa
mov
shrl
push
in
mov
sbb
jno
xor
mov
jne
fsubs
jecxz
pushf
jnp
and
pop
cmpsl
jnp
and
dec
jnp
or
xlat
ret
jnp
inc
fstl
es
dec
clc
lret
pushf
push
cmpsb
aam
sbb
fisubs
imul
cmp
jnp
dec
sub
mov
enter
sbb
into
out
test
xor
adc
and
xor
xchg
pop
mov
pushf
xchg
fsubl
jecxz
loop
fdiv
inc
add
jnp
je
pop
cmpsl
and
shrl
xor
jnp
and
jno
sbb
add
mov
add
jnp
cmp
test
nop
jnp
sbb
and
fnstcw
xor
mov
in
add
jnp
push
dec
pushf
xchg
adc
jmp
xchg
push
and
adc
jnp
and
mov
enter
fldt
inc
sarl
scas
cmp
xchg
pop
jnp
imul
enter
cmc
xchg
fcmovnbe
jne
sub
mov
mov
or
imul
xor
sub
cmp
and
mov
push
pop
add
mov
jnp
nop
mov
cmp
add
xor
jne
xchg
mov
xor
jne
cmp
jle
bound
loopne
iret
cmp
imul
sbb
push
lret
add
jo
pop
out
or
ret
xor
add
ret
cmp
push
inc
cmpsl
and
or
jo
xor
mov
nop
jno
jne
inc
popa
fs
lods
sub
push
pop
mov
orb
mov
mov
imul
xrelease
jecxz
lcall
je
fsubrl
mov
cmp
lea
dec
add
dec
adc
add
adc
lret
push
jnp
fst
out
or
call
push
lea
aas
out
dec
shll
pop
rolb
pusha
pop
jnp
popa
adc
sbb
sbb
das
mov
test
insb
sub
mov
mov
add
xor
adc
sbb
inc
and
add
adc
xor
in
rcrb
adc
je
or
popa
cmp
cmp
cmp
popa
jg
xchg
negb
sbb
cmp
std
lds
shlb
jno
xchg
xchg
mov
bound
xchg
or
adc
loopne
arpl
ss
in
or
nop
loope
push
mov
mov
cs
dec
push
insb
fwait
je
xor
call
mov
adc
add
int
ficoms
xchg
shlb
ss
leavew
and
inc
cmpsb
fwait
enter
sbb
push
insb
fwait
adc
inc
insb
enter
nop
xor
fwait
addb
and
and
fwait
insb
enter
mov
fwait
mov
ss
cli
jle
adc
xor
push
jmp
cmp
add
add
fwait
cmpsl
pop
push
mov
ret
lock
sbb
pushf
fimuls
aam
adc
and
sub
inc
xor
sub
push
icebp
pop
pop
lret
out
daa
cmp
sbb
inc
dec
mov
test
add
js
inc
add
cmp
or
cld
test
sbb
add
xchg
andb
dec
loope
sbb
rclb
mov
rclb
push
or
int
inc
inc
es
inc
xchg
les
addl
fwait
shrl
push
sub
xchg
or
mov
stos
inc
pop
imul
bound
jge
enter
dec
add
bound
shrb
fwait
imul
jb
popa
fmuls
add
shrb
fmull
bound
sub
fwait
jecxz
cli
mov
nop
push
fidivrs
sub
mov
sbb
out
mov
push
adc
nop
fwait
or
or
popf
push
jmp
and
fs
pop
fwait
fs
or
loope
sub
fwait
or
out
mov
push
repnz
sbbb
jb
aaa
pop
pop
pop
in
fs
outsl
xchg
pop
mov
scas
repnz
pop
cmp
cld
scas
call
imul
shrb
push
mov
shrl
push
sbb
nop/reserved
clc
imul
mov
fsubrs
divl
inc
popl
pusha
bound
lret
push
mov
lret
xor
faddl
rcll
mov
xchg
cmpb
insl
sub
aad
lret
out
pop
leave
ret
push
mov
dec
pop
mov
mov
pop
jo
sbb
jp
xor
leave
clc
enter
enter
inc
inc
mov
jmp
mov
or
and
sbb
fisttpl
fdivs
inc
inc
sbb
xchg
inc
inc
cmp
pop
cmp
movsl
sti
pop
shlb
or
popa
punpckldq
add
ror
and
into
cmp
mov
adc
xor
add
roll
jmp
xchg
dec
cmp
cmp
cmp
add
cmp
std
cmp
add
std
mov
test
mov
and
std
sub
add
int3
push
cmp
cld
dec
xchg
enter
dec
cmp
add
jo
cmp
lock
push
lret
and
add
adc
fcmovne
xor
adc
or
sbb
xor
mov
cmp
mov
rorb
xchg
mov
add
sbb
fmuls
inc
insb
enter
mov
sar
popl
dec
rcll
push
nop
mov
mov
mov
push
fstl
les
sbb
cmp
addl
bound
cmp
or
scas
adcb
scas
cmp
inc
mov
mov
mov
loope
nop
add
push
inc
mov
sbb
lds
out
bound
pop
in
mov
sarl
adc
push
insb
enter
fcoms
xor
stos
mov
adc
inc
xchg
inc
add
mov
inc
xchg
sbb
push
or
nop
popa
xor
data16
adc
sbb
btr
cmp
fcmovnb
inc
pop
enter
sbb
pushf
dec
pushf
cmp
xor
add
push
or
xor
ds
or
sbb
push
pushf
xchg
jno
and
xchg
mov
xor
push
mov
jle
int3
mov
xchg
enter
nop
xchg
ss
mov
mov
mov
sbb
mov
jno
mov
pushf
stos
jmp
mov
jecxz
ljmp
popf
jo
xchg
lods
dec
mov
shll
cmpsb
and
mov
mov
xchg
or
in
mov
xor
mov
les
pop
add
push
test
and
inc
enter
push
xor
xor
loopne
fmull
enter
dec
xchg
inc
xchg
adc
enter
cmp
or
pop
pop
data16
aad
enter
xor
fsubrl
mov
ja
or
xor
outsb
lds
mov
sbb
xchg
cmp
inc
xchg
sbb
mov
roll
jns
push
add
jecxz
pop
push
mov
sbb
xor
cmp
xchg
stc
jbe
mov
adc
dec
inc
mov
jb
aam
lret
xchg
cmpl
or
sbb
inc
add
enter
cmp
andl
in
sub
jno
rcll
addl
sub
ja
jecxz
fucomip
or
stos
inc
adc
adc
mov
and
imul
xchg
daa
adc
or
cltd
in
enter
xchg
ror
cs
xchg
mov
pop
mulb
pop
mov
aam
mov
mov
cltd
xor
pushf
xchg
add
xchg
inc
ss
call
out
push
dec
inc
mov
xor
cmp
cmc
incb
fwait
mov
sub
ss
jb
add
push
cmp
subb
call
push
repnz
in
sbb
loopne
cmp
adc
pop
adc
mov
jb
stos
rcll
mov
dec
dec
mov
cmpsl
and
pop
mov
and
push
testl
xchg
mov
adc
pusha
popa
dec
add
lock
xchg
rolb
orl
jno
mov
adc
out
cmpsb
rcll
call
loope
mov
mov
sbb
lods
push
js
xchg
jne
mov
pop
popf
mov
faddl
mov
loop
mov
rcll
shrb
mov
xchg
xchg
push
add
or
enter
jg
enter
fs
shlb
xor
mov
dec
popl
stc
lods
xchg
fistps
mov
xchg
dec
mov
xor
mov
xchg
inc
dec
mov
pop
or
sbb
and
or
fadds
jecxz
mov
pop
and
movsl
push
nop
jno
pushf
mov
adc
mov
enter
xchg
aad
xchg
mov
lcall
push
sbb
cmpsl
mov
cmp
imul
xchg
xor
add
mov
push
xchg
push
in
mov
in
add
jo
xor
and
mov
mov
adc
scas
mov
subl
notb
loop
and
cmp
mov
push
cmp
aas
scas
adc
mov
sub
nop
mov
in
xchg
mov
enter
mov
and
xor
jbe
xchg
adc
fs
hlt
push
aaa
loop
pop
inc
and
dec
inc
mov
cwtl
fmull
pop
pushf
xchg
jb
rcll
js
andl
mov
stos
shll
imul
lds
xor
ljmp
cmpsl
and
push
xchg
pop
mov
xchg
dec
inc
mov
jecxz
mov
in
loop
fdivl
xchg
cltd
mov
add
xor
ljmp
mov
pop
jo
mov
jo
xor
cmp
and
nop
popa
mov
lods
cwtl
mov
imull
bound
inc
jo
mov
or
dec
pop
xor
daa
ljmp
inc
jbe
in
sbb
sub
or
rcll
or
mov
pop
sbb
sub
dec
mov
pop
pushf
fs
imul
or
sbb
xor
faddl
bound
stos
call
cmp
sub
mov
jecxz
or
pusha
push
or
add
xor
sub
jl
sub
and
call
in
jl
dec
inc
sub
sub
xor
pop
cmp
testb
adc
cmp
sbb
aam
sub
dec
js
in
pop
call
sbb
bound
sub
xchg
loope
cmp
insb
push
fwait
mov
or
xor
jo
mov
sub
dec
je
loopne
add
cmp
mov
in
sub
jo
daa
inc
movb
sub
mov
fsubrp
loopne
sub
cwtl
sub
and
xor
imul
jns
dec
pushf
stos
inc
xchg
or
fs
or
ret
std
xor
aas
mov
sub
dec
into
add
or
je
dec
inc
xchg
and
sbb
adc
aaa
and
pushf
xchg
movsl
and
add
xor
shrb
cmp
rcll
or
arpl
sbb
add
adc
xor
xchg
sub
and
sub
ljmp
test
cld
xor
mov
add
jmp
xchg
jl
sub
dec
fs
adc
dec
ja
nop
outsl
dec
and
leave
and
mov
enter
or
dec
fs
loop
test
cmp
xor
jp
push
jo
xor
int
mov
in
sbbl
lahf
nop
loope
sub
xchg
mov
lcall
rcll
in
dec
mov
xlat
mov
cmp
nop
cmp
sahf
fsubrl
jmp
in
fs
fmull
mov
sbb
sub
and
enter
xchg
and
or
nop
and
and
shrl
inc
add
xor
sub
jmp
dec
adc
push
or
inc
add
pop
fisubrl
dec
fsubrs
cmp
scas
loop
fs
loopne
fs
sub
inc
mov
dec
inc
xchg
lods
dec
xor
xor
sbb
and
add
xor
ds
daa
imul
pushf
dec
mov
sub
sub
loopne
loop
sub
xchg
inc
popf
xchg
daa
rcrb
popa
xchg
cmp
rcll
jno
xor
mov
scas
xchg
sbb
jb
test
jle
sub
cwtl
outsb
jo
xor
lds
cmp
xor
lahf
sub
fs
fcomps
lds
xor
inc
test
in
or
jecxz
jecxz
sahf
mov
adc
or
pop
fmull
sub
or
xchg
clc
jns
push
fs
dec
sub
and
outsb
call
inc
call
jno
or
mov
shrl
lds
scas
orb
mov
adc
inc
cmpsl
and
sub
xor
fdivl
sub
cli
sub
lret
cmp
pop
or
dec
inc
sub
loopne
fcoml
xchg
push
loopne
test
lods
shrl
js
pushf
xchg
call
loope
jne
jo
sbb
inc
stos
cmp
insb
orb
push
mov
jg
mov
push
fnstenv
cwtl
adc
pop
std
dec
shrb
mov
fs
enter
rcrb
xchg
sub
dec
sub
call
sub
nop
ja
jg
insb
test
mov
push
sub
xor
jo
in
add
icebp
jae
pop
xor
out
adc
pushf
xchg
push
sub
arpl
adc
andb
sub
ljmp
dec
lods
mov
insl
lcall
jb
pop
leave
or
jb
rclb
inc
movb
dec
sub
imul
inc
dec
aaa
jl
out
add
or
adc
cmp
inc
call
push
jmp
imul
ret
pop
loop
mov
mov
jecxz
test
mov
js
shl
pop
sbb
xchg
mov
or
adc
adc
xor
and
pop
jo
dec
push
jecxz
sbb
lea
enter
rclb
aam
mov
repz
pushf
mov
repz
sub
repz
pause
jno
test
pop
nop
lods
shl
insl
arpl
pop
sub
sub
stos
shl
jnp
mov
imul
jne
enter
fs
ret
sub
out
xor
jg
jg
mov
mov
ret
sub
enter
add
xor
xchg
lock
and
or
ret
cwtl
add
inc
lds
adc
or
add
or
test
les
push
out
and
lods
mov
jmp
and
xorb
repnz
jae
or
in
and
push
mov
mov
push
or
rcrb
add
sahf
and
or
arpl
push
xchg
lret
in
enter
push
and
rcrb
inc
and
cmp
call
sbb
mov
imul
pushf
outsb
cmpsl
sbb
mov
jecxz
fs
mov
lea
icebp
cmp
and
xchg
push
push
or
dec
fmuls
push
sub
mov
adc
lods
push
sbb
fisttps
mov
pusha
adcb
jmp
lods
jg
sbb
fs
xchg
pop
xlat
xchg
add
push
xchg
jmp
sub
call
pop
add
mov
mov
jnp
pop
sub
addr16
xchg
call
test
push
movsl
insb
jno
test
fcompl
mov
xchg
xchg
hlt
mov
pop
push
cmp
subl
lahf
sbb
xchg
adcl
push
mov
nop
push
repz
hlt
or
nop
adc
pop
loope
cli
cwtl
pop
lret
adc
mov
inc
icebp
mov
pop
ja
or
clc
and
pop
dec
movsl
loopne
jbe
hlt
cmp
mov
jmp
sbb
dec
les
or
in
jge
mov
cmpsb
sbb
add
sbb
shrl
xor
movsb
loopne
ficoms
loop
fs
xor
cld
cmpl
xchg
iret
andl
jmp
cmp
jge
enter
mov
or
jge
clc
add
and
popa
enter
sbb
push
push
test
sbb
mov
mov
adc
decl
pop
jecxz
shlb
bound
dec
mov
shll
jge
xchg
iret
stos
testl
icebp
mov
mov
xchg
push
dec
test
push
aad
pop
ret
nop
jno
lea
mov
or
jge
and
je
xor
xor
jmp
std
mov
xchg
cld
mov
pop
adcb
movl
sub
test
or
std
adc
cmpsb
mov
nop
jge
aam
sbb
push
movsb
and
xor
enter
je
add
jge
adc
int3
ja
push
lcall
add
jge
nop
jno
enter
mov
sbb
mov
sbb
test
xchg
nop
jno
or
pusha
adc
mov
cs
inc
shll
xor
xchg
jmp
pop
fcoms
ja
sbb
xor
icebp
sarb
and
arpl
sbb
and
cmp
jge
sbb
or
cld
jge
fs
xor
jge
or
mov
pop
sbb
lods
test
enter
or
xchg
pop
ret
pusha
les
dec
ret
and
std
jns
ret
nop
loope
jge
or
inc
imul
mov
shlb
jno
xor
pop
inc
jp
or
bound
xchg
je
pop
sbb
cltd
dec
add
inc
pop
sbb
fcmovne
ret
cmp
jle
hlt
int
shrl
adc
enter
add
pop
push
add
sbb
jl
pop
xchg
addb
or
sub
inc
xchg
push
test
sbbb
inc
xchg
ret
add
mov
nop
loope
call
popa
enter
ret
nop
icebp
xor
xor
push
cmp
enter
push
sbb
lds
dec
cmc
xor
adc
pusha
push
inc
lcall
aas
call
xchg
call
xor
incl
add
pop
jno
push
lock
shlb
push
jle
negb
dec
aas
and
lods
rolb
mov
mov
sub
pop
inc
roll
adc
mov
pop
dec
dec
inc
xchg
push
mov
pop
xchg
inc
xchg
jno
pop
flds
xchg
and
pop
rolb
aas
js
sbb
outsb
enter
mov
mov
add
pop
jp
cmp
xor
or
enter
andl
pop
or
jg
icebp
in
les
and
ds
mov
enter
nop
jbe
sbb
xchg
xor
inc
xchg
xor
xor
cmpb
pop
xchg
es
jmp
gs
sbb
or
jno
xchg
repnz
pop
xor
adc
xchg
and
inc
xchg
cld
scas
dec
cmp
inc
xchg
xor
dec
and
popa
leave
xor
add
inc
xchg
nop
loop
and
fs
mov
sbb
mov
nop
jno
pop
test
xchg
mov
and
xchg
push
sbb
and
fs
pop
jne
xchg
push
jl
push
pop
sub
das
decl
mov
test
es
dec
sbb
call
cwtl
mov
fs
xchg
pop
mov
inc
jecxz
and
pusha
xchg
sahf
fcoms
cli
rclb
inc
push
ljmp
and
iret
dec
ss
pop
mov
inc
cli
movsl
imul
mov
test
das
fwait
inc
cli
inc
f2xm1
ja
fwait
popf
push
out
adc
xchg
bound
or
and
inc
xchg
inc
xchg
in
add
sbb
pusha
fs
js
movsb
enter
das
mov
pop
or
mov
sbb
cmp
pop
sbb
xchg
imul
and
inc
xchg
shl
push
fs
imul
leave
inc
add
add
and
lods
pop
int
popf
in
insb
mov
ljmp
lods
cmpsl
mov
cli
push
dec
pop
cmp
adc
pop
outsl
mov
idiv
movsl
mov
or
add
out
enter
out
adc
push
in
loope
mov
push
jo
adc
cmp
push
test
popf
lret
cmp
aad
out
insl
mov
jge
or
aam
pushf
ljmp
call
rorb
sbb
movsb
movsb
or
jbe
push
jns
xor
xor
push
push
add
fs
pop
mov
aas
push
push
and
sbb
xor
push
sbb
and
jne
xchg
lret
xchg
push
mov
push
xchg
jecxz
test
les
stos
sbb
sbb
jb
lods
cmp
xor
add
cltd
pusha
imul
xor
or
inc
push
sarb
jne
jle
clc
adc
add
mov
inc
xchg
inc
insb
push
test
cmpl
adc
and
sbb
sbb
jo
and
mov
dec
fwait
lret
push
jnp
pop
mov
and
sbb
fwait
nop
icebp
dec
and
sbb
mov
or
seta
and
cmp
sbb
cmp
and
enter
xor
mov
ret
and
iret
lret
push
push
xor
jb
sti
xor
and
es
int
push
cmp
mov
push
ficompl
xchg
insb
mov
loope
and
nop
mov
rol
mov
leave
popf
sbb
repnz
cmp
sbb
loopne
jno
sahf
push
dec
fnsave
divb
jmp
mov
or
push
mov
in
or
and
and
popf
inc
out
aam
jne
jp
shll
int
mov
dec
cmp
inc
scas
mov
popf
xchg
and
movsl
cld
loopne
enter
pushf
lods
imul
mov
popf
enter
hlt
les
es
shlb
cmp
and
cwtl
ret
sbb
popa
enter
nop
mov
xor
out
add
add
es
push
sbb
repnz
pop
push
ret
mov
dec
stos
sbb
test
and
loopne
adc
pop
mov
push
ljmp
into
call
dec
scas
fsubr
inc
xorl
push
cs
adc
and
adc
insl
lret
dec
popa
cmp
push
popf
loopne
pop
pushf
and
shlb
lahf
sbb
pop
xchg
or
ret
cmp
loope
pop
mov
jnp
fsubrp
pop
push
nop
call
mov
leave
js
xchg
or
dec
leave
fs
jo
mov
sbb
jge
leave
insb
call
scas
es
aam
cs
je
leave
leave
fsubr
mov
jecxz
add
fwait
xchg
xor
lds
ffree
mov
mov
push
inc
mov
sub
subb
pop
dec
fisubrs
in
sbb
mov
out
mov
dec
movsl
or
dec
fcoms
aas
in
aam
enter
pusha
and
jbe
cmp
pushl
xchg
loopne
inc
mov
daa
ret
test
push
add
mov
lret
fadds
mov
or
nop
push
sub
push
je
adcl
aas
fimuls
jns
clc
mov
outsl
pop
mov
sahf
scas
movsb
push
stc
mov
mov
add
mov
movsl
dec
clc
push
pushl
test
scas
out
push
sarb
test
lds
mov
jmp
jmp
ja
pop
mov
in
jmp
inc
sbb
push
sbb
mov
lret
cmp
mov
jo
jg
clc
lcall
jno
arpl
jl
in
jae
clc
aam
in
sbb
in
push
dec
vandnps
or
xchg
daa
in
push
ret
lret
push
xor
imul
decl
adc
push
fmuls
cmp
outsb
loopne
push
bnd
jg
mov
and
sbb
inc
xor
pop
movsl
adc
push
lods
jmp
in
jle
shll
cmp
xchg
lret
test
mov
fnsave
jb
jae
loopne
clc
fildll
mov
push
sub
roll
sub
cmp
ljmp
inc
enter
or
cld
cs
out
push
aas
nop
jmp
sarl
cli
adc
adc
cmp
or
cmp
ja
dec
rorl
mov
insl
stos
in
loope
adc
and
jmp
pop
pop
movsl
movsb
xor
fsubr
and
aas
ds
sbb
inc
fcomps
xlat
popa
hlt
sbb
dec
jmp
xchg
mov
jmp
dec
movsl
movsl
movsb
repnz
xchg
push
mov
dec
mov
sub
addb
lahf
lret
lock
insb
push
in
mov
pop
fdivrp
jl
stc
es
retw
push
jno
cmpsb
cwtl
inc
xlat
lret
lahf
call
cs
pop
xlat
sub
add
inc
jb
inc
push
xchg
pushf
or
xor
pop
out
add
in
cmp
push
lahf
mov
push
dec
in
jmp
test
jae
mov
insb
ja
lcall
xchg
outsb
inc
sub
push
mov
push
add
loope
sub
mov
add
or
aam
psubb
das
cmpsb
mov
js
mov
push
dec
scas
repz
mov
mov
subb
sub
das
jo
cwtl
xchg
xchg
pop
ja
pop
nop
psubb
ds
lods
jg
movaps
popl
pop
shlb
push
pop
push
es
or
cs
mov
push
aas
rorl
lock
movsl
fs
push
mov
in
dec
das
mov
add
fstl
dec
push
xchg
push
fidivrl
cli
addr16
lea
mov
jne
lds
rcll
test
inc
adc
outsl
cli
push
and
fistps
lret
rcrb
dec
sbb
xor
nop
xlat
fmul
fcompl
jb
sarb
lock
inc
scas
mov
xor
cli
and
mov
adcl
nop
lret
pop
pushf
jo
movsb
xor
test
push
sbb
popa
sub
sbb
imul
clc
outsl
sub
inc
fiadds
add
push
and
gs
lret
add
in
hlt
mov
push
sbb
stc
popf
fsubrl
mov
add
jno,pt
jl
je
push
and
sbb
mov
xchg
fldcw
sbb
cmp
les
lahf
pop
push
call
cltd
dec
dec
jmp
cmp
sbb
cmp
push
sub
push
mov
in
or
mov
aam
fmuls
push
test
lock
cwtl
push
mov
sbb
and
stc
xor
dec
gs
lret
pop
jl
sbb
push
push
test
inc
outsb
or
cwtl
aas
push
pop
fcomps
outsb
nop
lret
inc
fsub
clc
outsl
lret
xchg
or
mov
gs
lock
dec
or
sbb
push
push
test
dec
sub
aas
pushf
mov
push
outsl
in
leave
outsb
sbb
addr16
sbb
ja
fucomp
aas
je
outsl
mov
aaa
call
enter
bnd
cmp
add
sti
daa
mov
mov
dec
pop
inc
sbb
mov
enter
mov
push
in
icebp
add
mov
fimuls
stos
push
add
cwtl
pop
dec
fwait
push
scas
add
jae
negb
jo
into
imul
arpl
mov
rcrb
mov
sahf
pop
lahf
ljmp
fdivr
psubusb
jmp
es
sub
lret
popf
decb
inc
push
mov
dec
call
repnz
fisttpl
scas
decb
or
mov
loopne
inc
push
rcrb
lock
cmp
imul
decl
sahf
mov
push
and
pop
jmp
in
mov
sub
addr16
sarb
cmp
in
inc
sbb
shrd
enter
ret
mov
jb
popf
in
fstpl
xchg
xchg
mov
leave
scas
jb
sahf
lea
jl
nop
mov
sbb
sbb
adc
iret
mull
je
and
lahf
aas
and
shll
pop
fs
add
or
sub
and
xlat
jmp
pop
push
xlat
inc
add
adc
mov
pushf
std
mov
ficoms
into
lret
dec
mov
lahf
cmpsl
inc
mov
or
mov
inc
xchg
pushf
shrb
push
xchg
aaa
jp
cmpsl
outsb
mov
jb
push
sbb
mov
lahf
mov
lcall
aas
repnz
loopne
xor
jecxz
add
fucomp
sub
jmp
and
add
fld
je
scas
push
push
ret
lret
push
outsl
sub
in
aam
outsl
insb
iret
loopne
jg
pop
push
rorb
mov
mov
mov
pop
sub
xchg
push
fidivl
push
ja
sub
dec
xor
cmp
push
adc
mov
push
sub
push
mov
and
sbb
xchg
fdivr
inc
pop
ret
inc
rcrb
jmp
push
push
adc
lcall
cmpsb
stos
push
mov
mov
add
aas
test
add
dec
in
rorb
mov
out
clc
aas
cs
repz
ret
sbb
pusha
jge
sub
pusha
enter
jle
outsb
sub
fiadds
pusha
iret
lea
insl
lea
repnz
ret
jae
nop
cli
loopne
mov
fstpl
xor
cmpsb
fisttpl
sub
fnstenv
mov
lcall
cltd
xchg
adc
movsb
ds
xchg
pop
cmc
aas
iret
sub
pop
lea
mov
clc
bswap
aas
out
push
out
jecxz
aam
call
inc
jp
cmpl
aaa
xchg
cmp
lds
mov
xchg
pop
and
lcall
pop
in
dec
jae
cmpsb
push
adc
fnstcw
lret
test
xchg
les
cld
sarb
aam
icebp
adc
and
cwtl
pop
iret
dec
pop
jmp
xor
sti
fs
dec
jl
mov
sbb
sbb
inc
and
lods
mov
inc
pop
pusha
stos
sbb
pop
aas
add
dec
js
mov
nop
daa
sbb
mov
dec
outsl
pop
mov
test
lods
sbb
insb
push
xor
mov
lahf
scas
repnz
mov
cmp
scas
rcrl
and
sub
hlt
and
mov
fiaddl
mov
cmp
aas
mov
repnz
sbb
jg
icebp
dec
push
andb
xchg
cmp
push
scas
movsb
mov
aas
ds
mov
outsl
sti
pop
sub
cli
mov
dec
mov
mov
ljmp
mov
push
imul
scas
lock
pop
inc
repnz
mov
push
test
fdivs
scas
add
cs
push
lods
push
mov
outsl
js
lahf
fidivrs
push
adc
dec
mov
jo
js
call
lock
jmp
ds
fcoml
jmp
repz
xor
sti
popf
popf
xchg
repnz
mov
xchg
out
push
fiadds
js
loopne
iret
into
jo
aam
aas
inc
stos
sahf
stos
inc
pusha
and
sub
dec
in
popf
mov
push
mov
mov
jle
shlb
xor
inc
aas
and
mov
fcomps
pop
aas
push
es
in
push
das
in
out
adc
imul
jo
in
es
in
pop
mov
lahf
dec
xor
push
lock
xchg
aaa
adcb
lods
aas
cwtl
ds
push
jbe
daa
es
inc
sbb
jo
dec
sub
push
call
outsb
or
adc
call
add
test
test
ds
pop
adc
add
pop
dec
mov
ds
push
cmp
scas
mov
ds
stos
dec
in
jns
test
sahf
fnsave
outsb
or
into
sbb
sbb
dec
inc
add
int3
adc
jl
adc
cli
push
mov
xchg
out
xchg
sub
sar
mov
mov
mov
dec
add
lods
cld
sub
mov
xchg
je
push
sub
movsl
dec
in
ds
xor
sub
lret
mov
push
push
cs
adc
or
cmp
in
push
or
fildl
nop
lock
inc
enter
inc
mov
in
vmwrite
mov
mov
xchg
mov
jns
inc
push
xchg
cmp
and
cs
push
repnz
xchg
mov
jnp
jo
gs
cmp
and
mov
pop
mov
popl
jmp
push
iret
pop
mov
cwtl
jns
xor
adc
aam
mov
add
sbb
mov
test
les
add
push
jns
data16
and
js
push
push
test
out
inc
sub
sub
sbb
fisubl
loopne
sbb
aas
mov
inc
sub
pop
ficoml
rclb
xor
pop
dec
push
test
stc
mov
dec
pop
shrb
sarb
mov
lret
mov
sub
sub
iret
fsubr
gs
xor
inc
fs
jns
shrb
mov
push
lea
push
ljmp
jo
cmp
xchg
push
lcall
iret
mov
insb
adc
cmp
aad
jmp
in
int
jb
pop
mov
dec
clc
popf
and
sar
sub
jle
cmp
test
aas
mov
mov
sub
out
loopne
dec
aas
and
push
add
lods
sbb
sbb
dec
or
call
cmp
scas
scas
aam
imul
icebp
sub
out
add
adc
fs
test
std
dec
sbb
xchg
lret
or
ret
pop
jmp
mov
clc
stc
mov
cmp
insb
sub
scas
lret
add
icebp
hlt
adc
pop
add
fucom
sub
lret
xor
scas
add
out
cwtl
push
shll
in
icebp
fstps
inc
lock
cwtl
jne
pop
sub
adc
enter
test
orl
push
aaa
xchg
ds
dec
aas
pushf
mov
jnp
testb
dec
jno
mov
jae
leave
push
jg
loopne,pt
aaa
subb
leave
mov
pusha
dec
or
jl
clc
fwait
adc
call
mov
fldl
aas
movsb
pop
inc
dec
sub
dec
js,pt
in
xchg
mov
sub
push
jp
cmp
pop
insl
hlt
mov
pop
xchg
push
xor
out
fcomps
call
cmp
call
test
fdivs
prefetcht1
adc
mov
hlt
cmpb
xor
pop
mov
ret
xor
push
fiadds
out
dec
andb
aaa
out
loopne
ds
and
sarb
data16
stc
jb
mov
inc
inc
fbstp
xor
cmovs
pop
cmp
jo
pop
cmp
nop
dec
mov
xor
les
lahf
lret
das
dec
dec
out
sbbl
ljmp
mov
add
enter
scas
xor
mov
subb
das
dec
ret
xor
outsl
cmp
pop
aas
mov
and
mov
fimuls
pop
and
push
inc
mov
popa
mov
in
out
das
cs
and
and
clc
or
pop
stc
scas
mov
jmp
xor
sbb
sub
push
outsl
cmp
scas
xor
call
daa
fbstp
fwait
pop
in
sub
dec
jle
xchg
scas
dec
adc
pop
xchg
lret
fdivr
xchg
ds
ds
outsb
xlat
mov
cmp
xchg
jmp
or
adc
fnstenv
nop
cmp
xor
mov
mov
push
jb
mov
mov
call
jne
iret
lret
mov
cmpsb
push
push
xchg
rorb
push
jg
jl
pop
incb
dec
movsl
rclb
cmp
inc
push
sub
sbb
repnz
test
xchg
fcomp
mov
jle
inc
adc
stos
pop
je
cmp
add
pop
call
js
out
jo
inc
sbb
dec
pop
mov
cmp
inc
sub
cmp
fmull
movsb
push
mov
sbb
adc
divb
lahf
adcb
in
sbb
das
mov
out
mov
adc
pusha
xchg
sub
sub
adc
push
mov
stos
dec
dec
mov
sahf
mov
mov
imul
loopne
ja
dec
sub
repz
pop
push
hlt
and
xchg
or
shl
push
pop
aad
sbb
das
mov
sub
jo
das
push
xor
sahf
das
aas
test
int
xchg
ja
mov
rcrb
mov
clc
fildl
push
sub
pop
sbb
cld
ds
push
ret
xchg
cmp
rcr
add
call
fists
repz
push
push
dec
cltd
adc
aad
jae
std
je
cmp
dec
jns
mov
shrl
pop
rcr
loopne
sbb
pop
mov
scas
ret
push
repnz
push
ds
je
dec
xor
jbe
jb
das
pop
pushl
das
jns
dec
cmp
xchg
mov
lods
stos
dec
pop
repnz
test
and
stos
data16
pop
stos
xchg
xchg
mov
stos
cs
leave
dec
pop
repnz
test
test
das
jns
test
test
test
int3
test
ret
dec
jge
cmp
sub
inc
sub
ret
sub
and
sub
in
mov
pusha
sbb
lds
xchg
daa
push
les
sbb
add
sub
aas
addl
inc
shl
call
pop
pop
mov
adc
add
adc
inc
and
sbb
lahf
scas
xor
jns
in
inc
adc
add
xchg
jmp
lds
aas
push
into
out
xchg
inc
push
repnz
fnstsw
mov
insb
sub
xchg
nop
xor
movsl
cmpb
test
xor
sub
std
cmp
inc
sahf
fucomp
sti
cmpsl
aas
jmp
inc
mov
jecxz
call
ds
push
sub
es
and
mov
xor
mov
push
out
push
nop
jecxz
mov
push
xlat
sti
in
lcall
lcall
out
in
push
dec
xchg
jns
rcrb
incl
xchg
stos
push
imul
dec
and
pop
aad
stc
icebp
ss
sti
sbb
in
stos
adc
fbstp
mov
mov
xchg
adc
push
or
movsb
in
cs
sub
psubb
cmp
and
aas
scas
sub
xor
scas
sbb
decb
movsb
push
cmp
cmp
ficoml
aas
inc
or
inc
pusha
sub
mov
dec
push
hlt
pop
ss
xor
jmp
insl
sbb
adc
mov
ret
push
aas
outsl
xor
inc
inc
mov
and
leave
sub
xchg
cs
xor
pop
fsubs
nop
mov
je
sarl
mov
rclb
xchg
aas
pop
mov
cs
into
loopne
repz
push
mov
push
sahf
add
clc
inc
scas
fs
daa
mov
aas
inc
jmp
mov
lahf
pusha
pop
mov
lahf
addb
cmp
test
inc
loopne
bound
mov
cmp
mov
push
pop
jns
insl
mov
lret
push
xor
jae
outsl
aas
xchg
clc
and
mov
mov
es
and
adc
ret
and
repz
rsqrtps
jge
clc
push
cwtl
pop
into
mov
loop
and
pop
push
rclb
sahf
pop
sahf
xchg
fldcw
cltd
cmp
int3
xchg
cmc
ja
sub
inc
sub
nop
mov
push
sub
test
and
dec
lods
push
nop
add
mov
mov
lods
or
sub
nop
sub
push
test
cmp
mov
sub
mov
cmp
pop
add
testb
push
jns
movsl
bound
es
daa
shlb
mov
mov
push
popl
rolb
jbe
rolb
daa
adc
sub
sub
jo
push
sub
scas
and
divl
aas
jmp
cwtl
sbb
loopne
inc
and
movsb
shlb
push
jp
movsb
pop
sarb
shll
dec
mov
sbb
jns
jnp
sub
jmp
pop
and
mov
das
push
inc
shrb
add
xchg
in
notb
mulb
iret
sahf
addr16
daa
loop
jg
and
clc
jmp
xchg
mull
shll
ret
sbb
push
aas
lahf
sbb
pop
dec
scas
stos
mov
mov
mov
enter
xor
cmp
ret
rclb
sub
mov
cmp
cmpsl
jnp
pop
sub
mov
xorb
test
addr16
or
adc
dec
movsl
jb
sbb
sbb
mov
push
push
xchg
movsb
push
dec
fiadds
or
cli
pmulhuw
test
incl
or
mov
sub
xlat
add
fwait
lods
push
imul
sbb
inc
and
nop
mov
pop
add
push
xchg
push
dec
out
push
je
pop
sub
sub
iret
out
addr16
push
test
popf
sub
shlb
add
pop
testb
inc
andb
sbb
mov
outsb
call
lret
push
push
cs
enter
lahf
movsl
stos
xor
pop
inc
mov
mov
fisttpll
mov
daa
jbe
enter
add
bound
iret
nop
jne
add
in
jl
adc
push
lock
sbb
popf
orb
daa
insb
cmp
mov
xchg
and
xor
mov
loopne
fbstp
decl
dec
into
xor
pushf
sbb
xchg
lret
sub
das
test
lahf
dec
mov
xchg
push
outsl
sub
cmp
shrl
push
and
call
cmp
cmpl
scas
add
mov
and
mov
jne
and
xchg
fldenv
xor
fst
push
push
daa
push
out
sbb
cmpsl
pop
cmp
or
addr16
pop
sbb
sbb
ljmp
fstpt
pop
adc
into
imul
fadds
fnsave
cwtl
lcall
xchg
jb
inc
sbb
sbb
fcoml
or
push
test
dec
adc
outsb
cmp
jl
push
push
rorb
cmp
insb
adc
push
rcl
sub
sub
xor
in
sbb
push
mov
cwtl
cmpsb
dec
movsl
xor
xchg
lods
push
sub
and
jp
pop
outsb
outsl
xchg
cmpsb
adc
shlb
pop
lcall
xchg
clc
inc
pop
jbe
or
xor
sub
pop
clc
add
add
ja
jns
call
xlat
in
or
jne
hlt
hlt
loopne
sahf
out
sahf
sarb
jns
out
bound
es
out
add
repz
iret
repz
enter
xorb
cmp
push
inc
sub
jns
out
push
repnz
out
shrb
jbe
bound
jl,pt
out
xor
adc
icebp
repz
shl
loopne
mov
out
cmc
nop
push
xchg
js
iret
repz
pop
push
sub
adc
cmpsl
stc
cmp
hlt
add
into
mov
cmpsb
xchg
jl
pop
out
sahf
out
inc
and
out
aas
cwtl
or
cwtl
cld
mov
js
out
sahf
push
ss
add
sarl
loop
push
sbb
stos
out
sahf
negl
iret
sarl
push
cld
cli
out
fmulp
cmp
repz
mov
xchg
xor
iret
repz
dec
sti
cmp
push
push
add
stc
es
iret
repz
push
les
cmp
repz
push
inc
sub
es
adc
lret
lret
out
mov
cwtl
mov
jns
out
dec
inc
xor
jns
jnp
adc
cli
out
push
fadd
out
sahf
out
movsb
xchg
mov
jns
insb
dec
ds
sarb
repz
mov
lcall
jo
push
inc
cmpsl
stc
cmp
cs
cld
clc
in
sahf
out
sahf
mov
mov
or
cli
out
call
fadd
mov
sub
lcall
shlb
fimuls
pop
dec
cmp
popf
out
and
push
iret
repz
andb
pop
or
fidivrs
or
addr16
jle
add
cmp
repz
imul
pop
jb
and
sahf
out
mov
repz
fsubr
clc
add
adc
cmp
repz
inc
push
pop
outsb
repz
repz
jns
out
icebp
je
push
dec
xlat
jmp
sbb
lock
jns
out
push
mov
out
sahf
out
pop
ds
repz
push
cld
out
in
enter
repz
nop
js
pop
repz
repz
cmp
sbb
out
lcall
int3
sahf
out
sahf
shlb
sahf
out
dec
inc
xor
sbb
cmp
out
test
mov
ds
out
cld
or
into
push
es
xor
jns
out
push
jo
nop
lahf
divl
cmpsb
ret
in
push
decb
cmp
repz
sub
pop
repz
rep
adcb
lret
push
add
sbb
out
sub
push
pop
outsb
out
sahf
out
xchg
mov
iret
sarl
clc
cld
in
out
fmul
cmp
repz
lods
mov
iret
repz
pop
dec
cmp
adc
hlt
in
in
insl
ja
lret
notb
cmc
out
sahf
out
dec
pop
insb
jl
sahf
out
sahf
stos
mov
lea
cmp
xchg
out
test
in
or
je
sbb
into
gs
mov
cmpsb
into
repz
ficoml
xlat
ds
jnp
inc
push
cmp
add
push
push
in
dec
pop
pusha
add
dec
mov
aad
xchg
sarb
insl
sbb
in
push
clc
and
jnp
scas
push
inc
push
add
sbb
sub
sub
cmp
xor
cmp
cmp
repz
iret
repz
inc
inc
inc
inc
dec
push
cmp
repz
pop
pop
pop
pop
repz
repz
cmp
imul
iret
repz
jo
jb
repz
repz
jbe
js
repz
jns
jnp
jge
cmp
repz
addb
repz
repz
mov
cmp
repz
nop
xchg
mov
repz
out
sahf
out
sub
daa
aaa
inc
sahf
out
sahf
push
insl
xchg
out
mov
sub
cmp
rcll
and
cmp
iret
repz
push
gs
lcall
rcl
repz
cmpsl
stc
add
push
and
inc
out
sahf
out
arpl
mov
cmpsl
mov
sarb
out
jmp
std
repz
repz
sub
cmp
xor
mov
insl
mov
sub
popf
sub
add
mov
imul
insb
sbb
inc
pop
xor
gs
insl
gs
inc
pop
sbb
gs
add
add
cltd
popa
or
sbb
ja
outsb
jne
andb
mov
xor
jae
fcoms
push
outsb
inc
sbb
sbb
pop
adc
and
cmp
push
or
imul
adc
xor
sbb
xchg
dec
imul
adc
insl
mov
xor
out
lea
xor
das
jecxz
push
adc
insb
jbe
push
xor
add
mov
push
pop
push
rorl
sbb
jnp
pop
leave
pop
mov
add
sbb
and
cmp
jecxz
cmp
pop
ds
ja
adc
cmp
push
js
add
xor
fs
shrb
inc
xchg
push
nop
xchg
int
stos
xor
popf
push
xor
sti
xor
fwait
adcb
ror
sti
fdivrl
and
pop
and
test
ds
es
shlb
cs
rolb
push
cwtl
into
push
mov
mov
xlat
insb
sbb
lods
cmp
pusha
cmp
inc
mov
inc
adc
and
xchg
and
dec
or
ja
inc
loopne
sbb
and
pop
sbb
inc
add
or
xchg
lods
cmp
sub
or
sbb
dec
push
xchg
or
sbb
push
jle
ja
lcall
and
xchg
sar
add
or
divl
stc
outsl
adc
push
pusha
sbb
adc
push
out
int
lock
sbbb
push
inc
sbb
out
imul
mov
add
je
jo
jo
jb
inc
inc
jo
js
or
addb
out
mov
sbb
mov
mov
mov
xchg
xchg
sub
dec
inc
inc
and
push
inc
push
inc
insw
je
fidivl
and
add
and
inc
lret
ljmp
sbb
cld
cmp
push
push
push
add
fidivl
in
cmp
sbb
pop
repz
out
outsb
icebp
push
fistpll
mov
push
ret
addr16
and
iret
jnp
cli
add
add
add
vmovdqu
jbe
add
add
pop
add
xor
pushl
inc
incb
push
add
jno
faddl
jae
push
cmp
jbe
test
int3
std
xor
or
lcall
lcall
jmp
push
nop
cld
aas
add
in
fisttpl
scas
add
cld
lret
divl
or
std
addr16
mov
sbb
cli
add
std
fwait
add
inc
add
and
xor
xor
dec
ljmp
cli
xor
push
std
jo
call
add
add
mov
std
ljmp
inc
jecxz
stos
lcall
inc
add
add
mov
pop
std
imul
cmp
pop
add
add
add
add
add
incl
rolb
and
add
ja
call
or
or
add
dec
add
cld
dec
clc
mov
cli
and
mov
adc
jae
pop
add
sbb
std
aam
jbe
pop
incl
repz
add
clc
and
fcomip
scas
cmc
stc
pop
pusha
add
add
pop
sub
pop
xchg
push
add
stc
cmp
roll
jo
lods
pop
lock
das
push
inc
add
jg
lcall
xor
scas
std
mov
dec
add
aad
jge
popa
std
incl
sbb
mov
call
popf
xor
call
std
add
in
std
imul
cli
std
cmp
icebp
cld
mov
enter
cmp
clc
mov
ficoml
push
in
addl
add
mov
pop
add
decl
xchg
push
add
add
add
add
arpl
add
mov
push
call
stc
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
cli
mov
mov
add
add
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
ljmp
xchg
add
add
xor
mov
or
pop
iret
push
incl
dec
push
mov
add
add
decb
cld
and
shl
mov
out
fsubrp
sub
ljmp
divl
cmc
inc
cmc
jo
cltd
sti
mov
inc
add
adc
jmp
or
or
or
push
fimuls
lahf
pmaxub
adc
or
push
sbb
add
push
mov
sbb
sub
icebp
push
in
aaa
call
sub
mov
hlt
pop
cmc
dec
testb
fcomi
jmp
lods
negb
xchg
cld
fldl
inc
incl
ret
or
pcmpeqd
dec
adc
adc
xchg
adc
adc
adc
adc
adc
adc
push
jae
dec
mov
push
mov
jnp
enter
psubq
sti
imul
negb
repz
mov
aad
fstps
icebp
xor
in
push
incb
sti
and
xlat
cld
test
or
lcall
adc
ds
and
adc
adc
sbb
xchg
test
call
push
jne
inc
push
or
test
hlt
cli
repnz
adc
ljmp
jmp
fwait
loop
iret
into
shl
fcomp
loopne
repnz
fistpll
add
xor
test
sbb
pop
sub
outsb
push
bound
sub
decl
xor
or
push
push
or
pop
add
mov
decl
out
lahf
in
jae
je
jmp
in
ljmp
imul
decl
fadds
add
jle
add
or
pop
or
xor
sbb
cmp
pushl
fcompl
scas
sbb
push
sbbb
and
adc
or
incl
add
icebp
mov
jmp
out
shr
mov
adc
pop
in
fidivrl
test
stc
jo
or
adc
adc
xor
or
adc
fstpl
lods
sbb
decl
mov
movl
stc
jns
loope
mov
std
cmc
clc
jbe
add
inc
stc
incl
mov
ljmp
mov
cld
in
loope
in
in
aam
daa
pop
sbb
fimuls
xor
loop
jecxz
into
adc
adc
ds
adc
adc
push
daa
adc
adc
dec
or
rolb
cld
enter
xchg
clc
imul
jne
es
pop
cli
pop
stc
push
clc
sbb
sbb
out
mov
pusha
call
mov
fldenv
cld
js
lds
push
test
adc
adc
lahf
adc
imul
adc
movb
incl
or
push
sub
cli
in
xor
cld
idiv
loopne
add
repz
das
testl
dec
bnd
out
xchg
out
insb
out
mov
frstor
in
icebp
ljmp
clc
push
add
adc
adc
adc
adc
adc
scas
adc
lret
adc
adc
mov
stos
std
mov
stc
or
stc
sbb
push
sbb
out
jb
inc
repnz
stos
in
sub
jmp
jmp
adc
rcr
stos
ljmp
adc
push
pop
pop
loop
popa
adc
pop
jmp
xchg
adc
sbb
std
or
pop
femms
or
add
in
pop
and
or
xor
inc
cmp
mov
xlat
sti
outsl
imulb
icebp
decl
ljmp
movsb
fdivp
xlat
outsb
aam
fdivrl
add
ljmp
sbb
sbb
adc
mov
mov
adc
push
adc
out
clc
decl
or
std
mov
test
aam
movsl
std
cmpsb
sti
mov
decl
in
mov
xlat
loopne
fldl
aad
ror
xlat
popf
in
call
inc
repz
or
adc
push
lock
xor
pop
sub
inc
sbb
push
xor
or
call
and
or
int3
pop
in
add
loopne
lcall
jg
aam
jle
fcomip
inc
hlt
mov
jecxz
fisubl
sub
ljmp
mov
and
or
stos
pop
aad
bound
lds
adc
adc
call
jno
inc
btr
push
adc
orb
push
pusha
add
sbb
pusha
push
arpl
nop
jg
push
add
stc
and
out
out
loopne
fstps
push
push
ret
mov
out
and
sbb
ljmp
sbb
push
adc
je
or
mov
push
inc
adc
pop
mov
ret
or
or
call
or
sti
or
lock
mov
xor
int
sti
insl
lds
mov
or
adc
sbb
roll
lcall
rclb
adc
xlat
or
push
mov
and
scas
inc
lcall
outsl
call
add
test
xor
mov
lds
pop
or
add
mov
and
loope
cmp
test
lds
jb
and
add
lcall
decl
repz
adc
sbb
sbb
adc
xchg
or
push
sub
mov
add
add
add
or
or
or
or
mov
or
add
decb
in
loopne
fimull
jg
pop
loope
cmc
cmpsb
add
pmulhuw
xchg
cmovge
stos
or
psrlw
adc
sbb
lret
or
packssdw
add
pushf
add
add
ja
push
sbb
mov
and
or
or
add
ret
out
pushl
loope,pn
fscale
leave
dec
les
fimuls
adc
hlt
sbb
sbb
sbb
aaa
mov
incl
pop
push
bound
hlt
add
add
pop
call
add
push
ja
cmp
add
add
mov
pop
or
jle
xor
jbe
adc
call
dec
or
sub
loop
xor
fwait
jecxz
fsubl
les
aad
icebp
cmp
adc
lcall
enter
sti
sbb
xchg
sbb
xchg
add
or
popf
std
ds
push
add
and
pop
lcall
ljmp
push
test
pop
adc
call
or
lods
in
in
jge
incl
pop
int3
mov
jmp
jmp
sbb
pop
push
and
and
aam
pop
add
sub
stos
dec
add
or
jg
sub
add
paddw
std
mov
or
or
xor
mov
xor
inc
fsts
div
mov
jmp
cwtl
and
sub
add
sti
jmp
in
inc
repz
rorb
gs
or
or
dec
add
push
add
rorb
or
or
push
or
add
imul
outsl
loop
fucom
xlat
fmul
push
leave
pop
shlb
fcomip
mov
cs
pop
add
call
and
pop
sti
leave
add
pop
pop
push
inc
push
sub
sbb
add
dec
push
into
push
mov
jmp
loop
sbb
dec
sub
pop
hlt
add
fldenv
ret
jg
enter
neg
test
dec
sub
das
xchg
ss
clc
adc
out
rcrb
fldl
push
lock
stc
loop
and
out
faddl
cmpsl
add
pushf
inc
pushl
cld
decl
jmp
mov
out
dec
or
xchg
add
fst
inc
rol
stc
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
and
sbb
pushl
clc
aam
in
pop
loope
lock
cli
mov
push
add
push
add
inc
dec
incl
ss
fmull
js
cmpsl
adc
push
and
or
cld
mov
ror
ret
push
iret
repnz
sbb
daa
mov
ds
xor
loope
push
add
loope
call
ljmp
rclb
imul
adc
adc
xor
mov
mov
cmp
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
pushl
cmp
sub
call
fstpl
fcoms
pop
add
jmp
and
mov
les
cltd
adc
adc
push
clc
and
les
xchg
push
inc
mov
adc
push
shrb
leave
push
mov
dec
fiaddl
clc
and
call
adc
cmp
in
inc
xor
cmp
lds
or
mov
fucom
fdivrs
in
icebp
or
ljmp
in
xchg
and
and
sbb
adc
or
jecxz
pushl
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
xor
cmp
call
call
add
loop
in
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
lcall
and
adc
in
jno
gs
xor
test
inc
ret
ja
inc
pop
fiadds
arpl
or
das
ret
inc
inc
inc
inc
xor
sub
push
aas
or
adc
fnsave
fldcw
fldenv
and
sbb
mov
xor
jo
lcall
pop
or
sti
stos
call
ror
ret
aaa
mov
lods
in
std
call
and
inc
mov
xor
inc
aam
xor
pop
inc
call
cmp
fistl
lret
pop
iret
mov
fiadds
icebp
adc
mov
push
xor
clc
add
or
sub
push
idivb
incb
movsb
ljmp
fcomps
out
out
ret
or
into
lock
adc
cmp
inc
mov
out
subl
sbb
repnz
call
xchg
mov
roll
mov
add
adc
sbb
inc
pushl
das
xor
es
ja
int3
sti
sub
and
mov
adc
mov
jne
sub
sahf
add
stos
and
pop
ds
xor
push
xor
fldl
inc
incl
out
sbb
adc
rcr
aam
iret
push
shlb
xlat
loopne
das
add
xor
xor
cmp
xor
jmp
jne
insb
in
aad
enter
mov
mov
mov
daa
push
sub
cmp
sbb
rorl
idiv
mov
ljmp
jo
dec
xlat
mov
call
mov
pop
test
xor
aaa
lret
xor
in
call
ret
lcall
icebp
addb
cs
ds
dec
push
jmp
movsb
pop
or
shl
jmp
call
mov
sbb
add
outsl
mov
jge
fcomip
incl
jg
lods
sub
xor
bnd
xor
in
jns
ror
stos
aad
adc
xorl
sbb
jb
push
and
mov
jg
cmp
xor
push
push
add
leave
out
push
call
in
shr
into
pop
iret
filds
add
hlt
cmp
jp
sahf
ss
call
cmp
cmp
mov
repnz
dec
push
mov
aam
out
sar
incl
in
sbb
sub
and
fsubrs
ja
xlat
push
mov
stc
call
fdivl
xlat
cwtl
aam
rol
into
movsb
iret
adc
aaa
clc
push
adc
cmp
decl
add
es
int
mov
int3
or
sub
pop
pop
sub
add
jle
stos
aas
scas
cmp
ficompl
ret
std
stc
cmp
repnz
addr16
fiadds
loopne
fsubl
loope
stc
push
psllw
fsubrl
jne
fwait
ss
aaa
fildll
leave
sbb
dec
icebp
shl
sbb
scas
outsl
mov
shl
add
adc
into
sub
aaa
std
inc
test
sub
sbb
or
cld
loop
ljmp
cmp
fildl
neg
lcall
ljmp
jo
or
push
out
dec
ss
push
cmp
adc
pop
out
fstps
loope
mov
mov
jg
arpl
in
movsl
cmp
inc
je
mov
js
pushl
sbb
jb
test
imul
fmuls
lret
rcll
out
add
aaa
push
sbb
sub
fidivrl
inc
xchg
mov
icebp
adc
jmp
outsb
loopne
iret
xor
mov
scas
and
add
xor
inc
or
dec
pusha
jmp
jmp
xchg
jmp
pop
adc
add
out
jmp
filds
cld
fucomip
push
leave
test
fcmovne
insb
shlb
in
or
sub
call
es
inc
push
push
xor
mov
iret
pop
mov
mov
decl
add
xor
inc
mov
popf
sub
out
mov
mov
cmpsl
jmp
arpl
cmp
push
shll
adc
inc
aad
out
add
call
aaa
sub
xor
aaa
out
ss
xor
or
int3
adc
in
mov
loopne
pushl
in
std
cmp
das
xchg
sub
inc
fdivs
or
mov
out
sub
repz
xlat
popf
flds
call
sarl
pop
mul
push
xchg
push
call
decl
mov
test
hlt
sub
sti
std
or
or
lret
xchg
mov
mov
call
xor
test
ss
push
mov
push
notb
fmul
cmpsb
decl
loope
iret
add
xchg
fdivs
frstor
sub
daa
cmp
cmp
aas
dec
das
fcompl
repz
into
or
mov
test
mov
jnp
lds
cmp
dec
jns
repz
mov
cs
in
aam
int3
push
repnz
or
dec
into
aad
fnstsw
and
es
inc
dec
sahf
inc
es
pop
and
int3
call
test
mov
cmpsl
les
ja
pusha
sbb
mov
pop
sbb
mov
incl
es
fstl
jo
sbb
fs
data16
js
and
decl
sahf
inc
addr16
jo
xor
adc
aad
dec
add
sarl
dec
fdivrl
sti
sti
mov
jb
mov
dec
out
jmp
mov
repnz
jge
pop
lret
pop
shrl
mov
int3
jne
xchg
repz
or
stc
xor
cmp
inc
push
inc
mov
repnz
sbb
or
aad
into
in
mov
leave
mov
pop
mov
dec
sub
fldl
dec
sbb
pushl
jg
rcll
mov
loop
mov
rcll
ljmp
iret
lgs
out
xor
popa
aaa
test
add
rcrb
inc
out
fidivrs
test
cs
push
sti
push
jp
les
and
ljmp
out
cmp
cmp
dec
mov
js
aas
cld
loopne
sbb
popa
sub
lock
incl
cltd
dec
push
ds
xor
mov
sub
loope
int
iret
outsb
leave
xchg
ret
test
fisubrs
mov
notb
outsb
inc
cmpsb
push
inc
pop
int3
push
add
fwait
sub
inc
or
icebp
inc
stos
sarb
mov
ss
mov
dec
ds
dec
mov
iret
dec
jl
lret
sbb
pop
lock
loop
shlb
shufps
lcall
mov
sti
fistps
dec
inc
fmull
stos
pop
aam
les
pop
scas
clc
jmp
mov
stos
leave
ret
pop
loope
push
rcl
xor
inc
ljmp
push
dec
xchg
inc
mov
scas
sub
adc
add
fldcw
scas
rcrb
test
scas
clc
lcall
in
ret
popa
sti
mov
pop
dec
sbb
sarb
call
dec
lahf
ds
insl
add
jecxz
lret
int
mov
loop
lock
mov
decl
dec
pop
bound
mov
cmp
pushf
sub
sbb
and
arpl
add
popf
aad
rclb
mov
hlt
xchg
or
and
arpl
ret
inc
cli
dec
sbb
ljmp
sub
imul
jae
pop
pop
mov
mov
lcall
inc
push
clc
jmp
ss
fidivs
mov
jp
rcrb
adc
incl
xchg
sub
aam
pop
fdivrl
rorb
mov
es
ljmp
inc
ljmp
or
out
in
fimull
cmpb
leave
hlt
mov
call
in
add
cmc
sub
cmp
mov
xor
call
add
sahf
jmp
xchg
ficompl
mov
add
cli
fistl
lret
and
xor
roll
inc
es
and
adc
call
cmc
clc
fsqrt
movsb
mov
mov
mov
lret
stc
leave
adc
es
sbb
ss
add
xchg
cwtl
or
adc
or
cmp
jg
mov
je
inc
ficomps
xchg
aam
iret
nop
clc
adc
je
or
or
sbb
inc
and
pop
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
or
mov
xor
mov
ljmp
mov
rorl
cmp
mov
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
mov
mov
in
inc
es
jp
nop
and
fcmovne
mov
pop
mov
ret
pop
std
call
rcl
out
aam
addr16
add
xor
sbb
enter
call
aam
or
je
mov
dec
adc
and
cld
call
ljmp
fistpll
sti
sahf
adc
das
adc
cmpsb
xor
in
ljmp
and
xchg
fcmovnu
lret
inc
cmp
in
or
bound
mov
inc
and
sbb
pop
cld
sbb
pop
inc
push
mov
lret
add
clc
shr
fcmovnu
lock
call
mov
mov
fadds
stc
mov
fwait
sub
mov
cs
sbb
or
loopne
xchg
dec
out
pop
cli
stos
cld
decl
clc
sbb
sbb
inc
or
or
or
fwait
or
mov
xchg
hlt
ljmp
push
mov
sahf
ficomps
inc
iret
loopne
aam
push
add
push
out
and
ljmp
xor
das
jecxz
ljmp
mov
mov
sbb
sbb
dec
and
xor
cmp
add
add
add
push
adc
or
xchg
cmc
push
ds
mov
xchg
aad
rcl
int3
in
repz
popf
push
aas
sbb
push
outsb
and
jo
jb
call
clc
cmp
icebp
movsl
jmp
repz
divl
adc
xor
add
jle
mov
or
adc
cld
dec
push
out
ret
call
loopne
fldl
ror
rcrb
pop
cld
add
pushf
sbb
push
jbe
ljmp
or
insl
adc
or
aad
jo
cmpsb
icebp
enter
mov
xchg
loopne
mov
adc
call
pop
lods
add
call
adc
or
mov
jp
imul
cmp
out
pushl
loopne
loope
loop
fidivrs
lahf
jecxz
imul
push
dec
or
adc
shrl
pushl
xor
pop
push
xabort
insl
jmp
scas
in
ljmp
arpl
bswap
adc
push
push
adc
mov
add
cmc
stc
scas
cli
shl
jmp
mov
fimull
in
enter
enter
out
decl
mov
push
insl
sub
adc
dec
test
cmp
add
repnz
ljmp
push
into
and
add
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
inc
push
rcll
push
cmpsb
or
xlat
icebp
and
inc
aam
call
loopne
divl
pushf
iret
inc
in
test
xchg
push
adc
enter
test
mov
hlt
jmp
pop
pop
inc
and
add
jmp
shr
ret
sbb
jmp
cld
out
clc
incl
sbb
and
out
imul
push
pop
cld
sar
call
mov
mov
sbb
xor
popf
push
cltd
cmp
push
jno
mov
je
js
jo
push
pop
xor
adc
out
imul
int3
pop
jg
decl
sahf
sets
sub
ljmp
sbb
or
gs
pushl
adc
mov
and
jg
jno
and
sub
mov
dec
or
inc
lcall
outsl
push
jnp
jp
outsb
xor
push
or
out
into
dec
mov
xlat
test
fdivrp
pop
loopne
jmp
lods
sbb
ss
ss
xor
mov
mov
aaa
cld
or
pusha
ljmp
stc
mov
push
mov
mov
mov
lcall
pop
clc
add
pop
pushf
popa
inc
addr16
lcall
cmp
movaps
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
mov
call
xlat
xor
cmp
xor
sub
and
adc
add
push
fcmovbe
pop
inc
in
and
rcr
sbb
mov
cmc
inc
or
sub
jbe
mov
jg
or
inc
add
lcall
jecxz
fdivp
iret
fwait
jo
les
std
pushl
cmp
addr16
cmp
imul
dec
sub
sub
cmp
fstl
jns
xchg
push
incb
fnsave
int
insl
repz
sti
sub
adc
add
lcall
add
sbb
sbb
sbb
pop
repnz
xor
mov
pop
ss
or
jmp
lret
xor
pop
aad
in
lock
and
rcll
jne
xor
int3
pop
mov
sub
int3
ud0
js
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
aaa
or
repnz
jns
jecxz
imull
pusha
aas
test
jno
sbb
insb
push
mov
sti
call
stos
mov
mov
mov
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
pop
das
aam
popf
cmp
sub
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
sar
push
push
jmp
into
stos
ret
push
sar
push
xchg
ret
push
mov
jmp
jnp
ds
xchg
push
and
test
movsl
test
sarb
add
sub
decl
sarb
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
xor
jmp
jecxz
imul
add
mov
jmp
ljmp
sub
push
dec
pop
add
dec
imull
mov
mov
mov
call
jno
xor
xor
shrl
popa
aas
fists
bound
mov
dec
push
out
inc
decl
pop
ds
nop
mov
jae
mov
lret
cli
pop
loopne
std
adc
pop
insb
adc
add
ljmp
mov
adc
jmp
sbb
inc
dec
ljmp
lods
push
ret
add
and
sbb
mov
std
aas
loopne
aam
xlat
push
sbb
xor
decl
push
dec
or
cmpxchg8b
cwtl
aad
inc
loopne
call
ljmp
and
push
xor
ficomps
inc
clc
jp
jno
sub
sbb
cmp
cmp
xchg
es
or
enter
rorb
flds
in
add
arpl
repnz
xor
add
faddl
or
ljmp
mov
in
push
cli
cwtl
out
clc
out
jo
sub
mov
pop
add
xor
js
jg
pop
ret
add
not
repz
jl
sar
test
mov
xchg
fdivrl
xor
subb
aaa
std
and
mov
xchg
rcrb
std
jmp
cld
decl
xchg
decl
jae
mov
pop
dec
pop
jl
imul
sbb
adc
aaa
sti
testb
call
mov
mov
stc
rep
sti
push
cld
imul
jge
xchg
aam
in
hlt
mov
ljmp
xchg
push
fs
dec
push
call
hlt
and
das
int
incl
rolb
clc
mov
and
xor
sub
xor
and
ljmp
ljmp
adc
shr
inc
loopne
ljmp
jmp
cmpsb
rorl
mov
push
fmulp
sti
rcll
xor
pushf
imul
insb
fldl
sbb
clc
icebp
dec
mov
insl
popf
xor
inc
adc
es
lcall
adc
or
cmp
aaa
adc
push
ss
das
enter
xor
loop
aad
enter
inc
inc
sarl
lcall
loop
loopne
int
mov
pop
xorb
inc
cmpsb
push
bound
jg
jl
jo
inc
out
push
dec
jmp
push
xchg
mov
xchg
mov
inc
in
or
and
dec
fiaddl
cmp
stc
xor
and
or
roll
sub
lea
lret
mov
fs
mov
cmp
jmp
repz
or
inc
insb
dec
lcall
gs
sbb
jl
call
mov
sahf
ja
test
shll
incl
inc
dec
cltd
inc
inc
inc
dec
xor
pushl
std
jb
mov
rorb
inc
ds
leave
and
into
push
fildll
mov
clc
icebp
shl
lods
mul
adc
and
imul
adc
pushl
cld
and
lahf
nop
inc
hlt
inc
nop
xor
sbb
int3
out
sub
call
hlt
xlat
lcall
sub
daa
push
daa
pop
es
pop
cmp
mov
jbe
push
or
fcomip
add
stc
scas
pop
jmp
loope
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
jmp
or
jae
or
and
sub
es
sub
jecxz
je
nop
fistl
push
enter
loope
sti
mov
xchg
sub
cs
cs
pop
test
sub
and
sbb
fwait
lock
cmp
ja
cli
rcl
int
mov
outsl
mov
jl
fstl
inc
adc
or
aas
lcall
adc
mov
cltd
and
sub
arpl
inc
adc
add
dec
fcompl
int3
inc
lcall
loopne
jmp
or
stos
sub
and
pop
stos
sbb
pop
repnz
pushl
std
xchg
add
sti
cmp
sbb
roll
leave
daa
aam
call
sar
call
sbb
and
adc
and
ds
jae
lods
repnz
cli
xor
call
das
jle
pushl
std
sub
call
fsubl
dec
add
ljmp
or
add
add
add
pop
test
or
roll
mov
sar
lcall
hlt
mov
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
ljmp
pop
push
adc
push
fimuls
xor
sbb
add
into
sub
es
dec
xor
cwtl
out
stc
pop
push
pop
pop
or
sub
addb
fimull
or
xchg
aaa
cld
lcall
push
mov
std
jno
out
ffree
loope
ljmp
sbb
mov
clc
mov
add
test
stos
andl
clc
mov
shrb
dec
adc
mov
lods
inc
aas
push
or
rol
ret
aad
sbb
decl
sub
xlat
lock
add
jg
out
adc
clc
call
sbb
cmpsl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
inc
xor
popa
cmp
cmp
daa
push
mov
xchg
out
aam
mov
outsl
mov
cmpsb
dec
fcoml
push
jg
sbb
sbb
and
es
sub
lret
adc
or
dec
insb
add
mov
imulb
in
dec
in
loop,pn
fsubr
fisubl
fxch
push
int
in
das
lcall
mov
cmp
pop
or
sub
aam
shr
fcomip
call
sub
dec
mov
int3
lret
mov
addr16
iret
add
and
es
call
and
sbb
or
add
mov
loop
jb
lcall
std
cmp
pushl
stos
loopne
fistpl
pop
aad
in
cmpsb
pop
fcoml
scas
and
incl
push
inc
pop
out
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
mov
or
rcrl
push
lret
bound
sbb
ljmp
sbb
add
in
push
fdivl
enter
lret
into
rolb
js
push
out
jmp
or
pop
fisubrs
sbb
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
fcomip
ljmp
insb
mov
testl
adc
push
add
and
es
cwtl
cmp
inc
and
and
or
push
jle
mov
mov
mov
repnz
jmp
xchg
iret
in
mov
xor
fwait
pop
and
cmp
push
inc
pop
cmovb
and
or
ljmp
rol
fdivl
adc
call
in
test
jb
jb
sahf
sti
jecxz
lods
sbb
fildl
mov
xor
ds
sub
in
int
mov
data16
mov
mov
fucomp
divl
lods
mov
sti
mov
dec
add
sbb
daa
in
xor
xor
dec
mov
or
not
in
rolb
fdivs
xchg
mov
mov
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
push
cld
call
xor
push
cmp
lock
sub
cmc
mov
adc
sbb
popa
sub
std
add
cmp
insl
or
push
add
not
cmc
dec
or
adc
ds
incl
push
xor
sub
dec
add
jmp
fldt
pushl
int
out
mov
adc
clc
cmp
inc
inc
dec
in
dec
repnz
test
sbb
pushl
cld
add
pushf
loop
in
and
jecxz
fnstsw
mov
cmc
mov
inc
add
decl
cmp
mov
out
ljmp
jmp
sub
icebp
lcall
and
loop
shl
mov
mov
shrb
fcomps
bound
xchg
cmp
popf
inc
jge
fwait
sbb
clc
cmp
inc
clc
in
out
add
stc
jp
dec
cld
inc
stc
adc
mov
fdiv
movsb
std
stos
add
inc
jg
jg
add
add
add
jmp
clc
jb
or
cmc
pushl
leave
cmp
ja
insl
or
icebp
mov
scas
scas
mov
call
lcall
aas
xor
adc
add
out
aam
lret
cli
xlat
mov
orb
adc
add
std
ljmp
lcall
pop
adc
cs
cmp
pushl
jne
jbe
in
and
filds
push
adc
dec
loop
stos
and
adc
mov
jne
add
mov
filds
icebp
add
xor
cmp
sbb
iret
test
push
in
js
out
dec
add
or
adc
lock
lahf
repz
out
or
jge
pop
add
fildll
sbb
cli
mov
mov
in
push
mov
add
sbb
pop
cmc
ljmp
jg
daa
dec
into
dec
mov
sbb
jmp
mov
ss
nop
loope
repz
jmp
adc
test
test
cmp
stc
cmc
repnz
in
test
popa
sti
xor
iret
push
xor
and
clc
decl
push
push
sbb
movsbl
sub
mov
shl
xor
sbb
outsl
in
lcall
and
loopne
cwtl
into
movsl
lret
pop
idivl
movsl
sbb
or
mov
mov
call
sbb
sub
sub
test
sub
push
fisubl
in
push
fildll
adc
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
and
das
add
pop
stos
push
outsl
cli
add
dec
call
mov
imul
out
jmp
out
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
push
enter
push
ss
decl
xor
and
sahf
test
das
out
pop
out
fdivp
fbld
fidivl
jecxz
call
aaa
std
push
repnz
notl
or
mov
out
hlt
decl
push
sbb
sbb
clc
mov
loope
in
in
in
xor
lcall
fwait
hlt
xor
test
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
ljmp
push
push
in
pop
dec
arpl
aaa
jns
mov
add
mov
ljmp
enter
out
add
or
mov
pop
hlt
inc
sbbb
sbb
adc
int
cmp
mov
mov
add
add
incb
push
cmc
adc
aaa
ljmp
insb
out
jmp
push
fcmovne
fmul
dec
jmp
enter
movlps
and
cmp
jbe
add
inc
cmp
and
pop
inc
jmp
cmpsb
call
mov
mov
add
push
or
adc
sbb
push
mov
adc
decl
xchg
adc
xchg
and
jg
jno
and
mov
test
push
fsubs
out
into
mov
fstl
jmp
in
ds
out
iret
mov
ss
add
pop
dec
sub
jae
arpl
or
sub
scas
cmpsb
lds
lret
shlb
pop
fsubp
sbb
ss
sbb
xor
sahf
and
addr16
daa
mov
and
or
cli
jecxz
xlat
nop
into
mov
and
jg
dec
push
icebp
loopne
jmp
repnz
dec
fcomps
incb
sbb
daa
cmp
call
outsb
sub
dec
subb
push
ret
in
scas
sarb
test
dec
push
fiadds
pop
nop
sbb
sbb
and
sbb
jnp
adc
lcall
or
or
mov
push
ficomps
xchg
aam
shrb
or
pushl
jecxz
popa
jmp
out
and
pop
out
sub
lods
repz
push
repz
jp
dec
sub
cmp
mov
push
inc
xchg
cmp
and
or
jle
and
pushf
mov
mov
mov
rolb
imul
and
in
xchg
jecxz
in
adc
adc
cs
jbe
call
xchg
pxor
clc
ljmp
out
xor
and
xlat
iret
fldcw
mov
icebp
out
out
icebp
add
or
pop
loopne
pop
repz
out
and
sub
shlb
es
sub
fdivrp
pop
cld
cli
cmp
inc
flds
enter
shl
addr16
add
adc
sbb
ljmp
lret
es
jbe
out
adc
or
cmp
add
incl
test
ja
sbb
hlt
sbb
loope
and
mov
cmpsb
loopne
ficomps
in
sub
adc
or
fimuls
inc
or
jmp
or
add
int
jns
and
mov
pop
clc
int3
ljmp
decl
dec
in
in
icebp
ljmp
and
pop
adc
inc
lcall
inc
stc
push
adc
adc
push
add
hlt
jecxz
incl
shl
clc
rolb
jecxz
negb
mov
pop
pop
js
xchg
and
push
jns
mov
in
loope
in
icebp
cmpsb
push
and
push
pop
jmp
in
xchg
add
out
mov
into
call
data16
in
roll
nop
adc
and
jg
pop
and
lret
push
cli
sub
shl
repnz
mov
jmp
sbb
out
dec
adc
ljmp
into
and
lahf
loope
out
xchg
add
adc
pop
mov
adc
lock
inc
aad
aad
loope
cmp
xor
out
sub
push
stc
push
aas
aas
shrb
push
hlt
cmp
int
lret
fmul
sbb
push
lcall
xchg
mov
push
jecxz
int
imul
call
jmp
jmp
hlt
cwtl
add
or
daa
push
and
adc
sub
jmp
out
aad
mov
push
adc
dec
add
push
aas
sbb
adc
insl
bnd
mov
cmpsb
mov
add
fldln2
push
incl
mov
int
repnz
dec
aad
test
push
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
movb
add
add
sbb
add
jae
and
aam
add
push
adc
lcall
adc
or
or
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
icebp
adc
fsubp
jbe
int
ljmp
ljmp
and
incl
cmp
sub
sti
cld
jmp
fcoml
mov
test
gs
call
jb
into
jg
icebp
testb
push
jbe
pop
lret
add
stos
add
fcomip
or
scas
sub
lea
rcrb
push
adc
lods
pop
and
loop
dec
cmc
jmp
icebp
call
xchg
out
pop
in
jnp
dec
out
dec
repnz
out
xor
dec
in
mov
in
clc
add
movhps
mov
lret
inc
dec
inc
inc
xor
sub
cli
sbbb
mov
pusha
aam
int
pusha
frndint
sub
add
call
sbb
sti
or
push
call
std
push
pop
sbb
jmp
nop
sub
rcrb
mov
in
fcmovnu
xor
fcomip
call
pop
hlt
cld
gs
add
in
loop
sarl
stc
arpl
clc
lcall
xchg
push
jp
mov
sbb
add
lock
shrb
or
pop
iret
js
lahf
jmp
adc
or
sub
testl
lods
fidivrs
ljmp
out
out
fldl
mov
jg
inc
ss
dec
pop
push
repnz
cmp
mov
push
flds
mov
std
loop
testb
push
push
lds
or
out
fisttpll
repnz
or
and
mov
imul
mov
cld
mov
dec
lods
lds
iret
xor
loope
mov
and
sbb
fwait
hlt
dec
jmp
sub
call
loopne
or
sbb
or
ds
cmp
push
pop
orl
adc
mov
enter
into
inc
fldenv
mov
push
adc
adc
add
decl
xor
repnz
jp
or
inc
repz
or
and
cs
inc
incl
sub
ret
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
add
fcoml
fcoms
mov
mov
dec
sub
push
dec
or
add
fcomip
ljmp
sti
mov
out
push
adc
ret
cli
daa
cmp
push
add
rorl
or
pop
idiv
aaa
cld
decl
js
and
loop
loope
lock
popf
pop
sub
pop
mov
add
imulb
mov
or
xchg
sbb
or
sbb
mov
lcall
rcll
clc
sbb
push
lock
hlt
sahf
lock
inc
push
mov
out
out
imul
icebp
add
hlt
sti
aad
sti
in
out
lock
and
sbb
sbb
sub
in
cld
push
repnz
iret
addr16
pop
daa
fcompl
add
adc
xor
mov
pushf
or
jbe
in
in
out
repnz
es
or
adc
pop
loop
mov
cli
std
fdivp
test
push
in
in
jmp
add
push
std
or
repz
and
rclb
and
xor
call
decl
stc
lahf
add
bound
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
ret
call
cld
mov
mov
xchg
pop
ja
cmp
daa
sbb
push
lcall
jg
mov
and
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdivr
das
sar
loope
pop
out
out
stos
mov
std
dec
or
jg
lcall
outsb
pop
sti
sbb
push
cli
or
or
add
clc
mov
jl
mulb
jo
out
lods
out
mov
out
hlt
push
into
out
mov
jmp
out
cli
scas
cmc
push
imull
inc
add
fs
cs
xor
das
in
sub
and
xchg
add
incl
icebp
out
fists
fcomi
out
repnz
stc
or
mov
jmp
andl
add
or
adc
inc
sbb
sbb
call
fstps
insl
adc
lcall
jmp
insb
stc
add
enter
inc
incl
cli
pop
repnz
shl
inc
ror
leave
in
iret
or
sbb
inc
ret
out
clc
dec
lcall
add
push
stc
sarb
lcall
lcall
inc
pop
stc
push
adc
or
cld
mov
cli
aaa
std
jo
ss
pop
xchg
sbb
adc
or
std
xor
out
mov
call
in
div
xchg
hlt
xor
push
mov
repz
dec
out
fidivrl
shlb
jecxz
jmp
mulb
and
cs
xchg
sub
and
jp
jmp
loopne
push
sti
icebp
inc
ljmp
jecxz
push
add
pop
mov
in
std
add
std
sbb
mov
repnz
cli
adc
lahf
sbb
ljmp
jno
push
sbb
sbb
xchg
mov
mov
xchg
std
in
dec
testl
fisttps
hlt
add
ljmp
popa
out
sar
add
pop
cld
pop
lock
add
xchg
push
int3
or
adc
add
cli
imul
incl
push
adc
sbb
push
adc
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
push
insl
add
orb
adc
in
jae
cltd
or
add
jg
mov
cmpsb
out
clc
incl
inc
or
out
pop
push
mov
add
fs
outsb
in
loop
fdivrp
mov
inc
fnstsw
pop
outsb
push
adc
sbb
or
add
pushl
cmp
sub
in
fstpt
in
stc
sar
pop
cmpsb
jg
das
ljmp
stos
pop
sbb
js
lock
call
insl
xor
inc
add
add
push
cwtl
adc
sahf
ljmp
out
out
push
out
dec
sbb
cld
xchg
add
or
push
mov
das
sbb
pop
fbld
and
mov
lahf
out
in
mov
jmp
imul
cli
cmp
add
push
or
or
test
sbb
fbstp
je
out
test
ja
mov
fstpt
xor
js
xchg
push
push
or
decl
and
sub
sbbl
mov
daa
lcall
cmp
call
inc
divb
pop
cli
mov
loope
mov
repz
jnp
push
push
sahf
repz
clc
addb
loop
movlps
sbb
sbb
in
or
mov
xchg
out
mov
adc
push
test
std
mov
fwait
or
and
or
mov
mov
loopne
out
jmp
adc
leave
clc
daa
push
push
or
or
adc
jmp
push
pop
or
xor
out
clc
adc
out
jmp
out
or
mov
sub
repnz
clc
mov
movsb
in
add
ljmp
jp
or
pop
out
add
jmp
sub
cmpsl
add
dec
add
cli
or
pop
outsl
or
fdivp
pushl
push
sub
out
add
clc
gs
ljmp
ds
cltd
clc
push
jecxz
sbb
add
add
sarl
jecxz
in
mov
pop
add
xchg
adc
jmp
mov
sbb
adc
add
std
mov
xchg
out
fyl2x
pop
repnz
clc
sub
ljmp
cmpsb
add
push
add
divl
incl
adc
clc
cltd
std
cmp
cld
jno
rorb
sub
ret
sbb
sbb
adc
incl
xchg
incb
cmc
mov
sub
mov
inc
repnz
out
aad
mov
int
xchg
cli
scas
stc
js
mov
jp
sti
push
inc
icebp
or
out
push
cmc
lcall
ret
pop
sbb
and
inc
and
or
add
idiv
call
out
ljmp
pop
clc
xchg
jnp
inc
add
add
or
jle
and
std
mov
repnz
add
popa
add
sbb
pop
sub
and
mov
jmp
in
loopne
loop
jecxz
in
ljmp
inc
decl
sbb
jmp
js
test
xchg
fdiv
cmp
sarb
cmc
cmc
mov
add
or
repz
lret
adc
sbb
cmpsb
rcll
rolb
test
inc
neg
bnd
hlt
out
imul
mov
icebp
jmp
insl
out
mov
cld
in
pop
ret
cmc
dec
add
incl
shr
push
sbb
xor
mov
sbb
adc
jle
or
add
clc
adc
ret
out
mov
in
push
out
fucomi
outsl
clc
in
test
ret
std
inc
add
cli
adc
addr16
adc
or
scas
ljmp
ljmp
in
repz
mov
lcall
push
push
sbb
out
xor
into
add
adc
sbb
in
loop
fimuls
mov
sbb
clc
jg
in
add
add
xchg
adc
movhlps
push
fnstcw
or
push
sbb
fistl
aas
pop
loopne
iret
sahf
add
ljmp
push
cs
repnz
lock
outsl
repnz
inc
testb
call
xchg
add
pop
inc
push
test
adc
push
jo
std
or
pop
lods
add
cli
push
icebp
and
ljmp
cs
jge
mov
or
adc
clts
cmp
fdivr
int3
sbb
pop
in
dec
mov
call
in
icebp
jns
or
or
es
bound
adc
push
add
sti
jl
lods
mov
xchg
lock
jnp
std
repnz
aam
adc
adc
adc
orl
add
stc
idivl
clc
sar
stc
stos
jmp
or
dec
push
mov
sti
popa
stc
das
test
sti
in
dec
jmp
sub
aad
pop
push
add
or
adc
fistpl
or
movsl
adc
decl
jne
xor
sahf
mulb
mov
hlt
icebp
clc
repz
xor
pop
or
fwait
push
lock
cli
jmp
out
xchg
dec
cmp
shr
inc
cmc
add
pop
or
out
jbe
pop
adc
lds
nop
push
push
or
push
mov
out
xchg
pop
incl
cmp
jb
call
sbb
mov
test
icebp
out
jle
repz
add
outsb
pop
addr16
scas
clc
scas
add
cli
lock
mov
out
mov
ljmp
js
xchg
cli
cmpsb
clc
or
pop
xor
adc
movb
out
jge
call
cli
pop
repz
hlt
ljmp
sti
inc
sti
das
cld
icebp
cli
inc
idiv
ljmp
jb
jp
insl
idivb
or
or
sbb
pop
sbb
adc
imul
dec
out
shl
psllw
out
test
sbb
hlt
mov
jg
sti
jp
test
mov
jbe
sahf
cmp
int3
add
add
sar
and
lock
aaa
in
jnp
stos
in
out
xchg
testl
mov
inc
sbb
dec
and
in
adc
dec
std
pusha
hlt
sub
xor
jmp
push
in
in
call
movl
rolb
fucom
ljmp
negl
clc
jae
insl
pop
add
out
sbb
pop
loopne
jmp
ficompl
inc
pmulhuw
insl
icebp
lock
xchg
mov
add
clc
push
cmp
mov
stc
addr16
sbb
movsl
cli
std
test
in
ljmp
or
xor
imul
or
push
jo
sub
in
pusha
icebp
outsb
cld
adc
or
prefetcht1
cmp
jecxz
jle
call
pop
leave
pop
jp
dec
imull
jle
out
aam
jecxz
insl
sti
sub
adc
ljmp
push
faddl
inc
cld
mov
out
sub
cli
idivb
decl
jg
or
sbb
ds
pop
lcall
negl
ljmp
cmc
jge
repnz
in
cli
psubq
cli
xchg
stc
pop
mull
out
inc
repnz
or
mov
ljmp
or
sub
icebp
decl
jo
lods
test
out
test
repz
cli
std
incl
pop
adc
xchg
or
cld
dec
divb
repnz
add
cld
jmp
mov
dec
or
or
rclb
jnp
rorl
leave
add
add
sti
lahf
testl
ljmp
mov
cmp
adc
adc
push
mov
cli
dec
repnz
subb
or
sti
in
lods
lock
adc
negb
mov
test
inc
cmc
iret
stc
push
cld
pop
es
incl
ret
cmpsl
sbb
sbb
sbb
pop
das
stc
shr
filds
decl
xchg
out
iret
or
push
adc
into
adc
push
dec
push
mov
jle
push
clc
stos
sub
ljmp
sti
mov
push
out
sub
mov
testl
loopne
jecxz
jmp
hlt
push
std
or
jmp
sbb
sbb
adc
roll
roll
push
imul
std
or
xor
das
bnd
pop
imull
cli
dec
stc
push
stc
jg
fs
push
insl
or
or
push
push
ja
dec
mov
mov
push
repz
jmp
dec
fisubl
out
lock
incl
add
sbb
pop
adc
pop
or
in
call
out
iret
add
lods
push
and
jp
nop
pop
loopne
or
push
in
jecxz
in
jmp
add
cld
pop
cmc
aaa
or
pop
sbb
loop
lea
pop
add
test
or
scas
repz
mov
cli
push
jle
sbb
add
incl
idiv
cwtl
cld
movsb
cli
cmp
mov
rorb
pop
or
or
push
or
repnz
loopne
fiaddl
in
out
fs
daa
push
sti
cmpsb
add
push
or
pop
daa
fisubs
and
sbb
cmpb
jge
stc
lock
cli
addl
mov
insl
mov
inc
mov
movsb
loope
in
or
mov
push
and
mov
xchg
sbb
sbb
jno
xchg
setle
add
es
cmp
pop
add
jg
stc
add
add
add
add
add
push
clc
inc
hlt
loope
jecxz
out
in
call
out
push
hlt
sar
add
adc
adc
imul
mov
jns
jno
lods
fmull
clc
cmp
push
setno
rcrb
jo
push
clc
jg
call
or
cmp
std
push
notb
sar
std
insb
add
and
std
dec
cli
shl
mov
in
or
inc
jmp
push
push
lret
stc
pop
nop
add
adc
mov
call
sbb
push
mov
or
ja
lcall
sti
sahf
divb
in
push
jmp
in
out
jo
enter
mov
incl
pop
or
les
or
or
fcomip
pushl
mov
in
ljmp
movsb
hlt
inc
cltd
outsl
mov
mov
adc
pushl
test
ret
xsha1
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
stos
or
or
jmp
or
or
add
and
jo
loop
movsl
aad
aad
fldt
sti
ret
add
cld
pop
in
daa
pop
sub
push
pop
push
decb
idivl
mov
out
inc
std
jbe
loop
stc
pop
negl
and
and
mov
adc
sub
mov
adc
and
xchg
and
jmp
and
and
add
clc
jmp
cwtl
loop
fistpl
fisubrl
sbb
xchg
in
stos
mul
add
fcomip
mov
adc
mov
sbb
adc
pop
mov
jecxz
sbb
testl
fadds
pop
or
jmp
out
mov
ficoms
in
jmp
hlt
dec
add
sbb
sbb
push
out
int3
sbb
or
inc
adc
or
movb
add
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
out
out
add
inc
add
sbb
pop
jmp
mov
sub
pop
fcoms
pop
push
pop
add
mov
jecxz
loopne
fists
and
popf
nop
lock
dec
cli
sar
add
into
or
addr16
push
nop
push
fistl
sbb
inc
adc
rorl
add
mov
pushl
neg
out
dec
jmp
jmp
ljmp
icebp
lock
lcall
sti
cld
ret
sub
nop
push
mov
push
mov
mov
test
sbb
sbb
sbb
adc
std
incl
cmp
call
sub
add
repnz
test
cli
pushl
dec
or
or
mov
insl
adc
ret
adc
fimull
outsl
add
and
or
incl
test
in
push
add
pop
pop
xchg
push
js
xchg
int
xchg
js
out
adc
mov
iret
or
mov
testl
sar
in
lods
std
xchg
lods
incl
mov
negb
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
repz
cli
mov
pusha
or
sbb
pop
cmc
leave
sbb
sbb
dec
push
jg
ds
push
cmc
decl
imul
cld
push
adc
inc
testl
add
addr16
add
mov
pop
pushl
fs
or
or
orl
or
notl
repnz
jmp
incl
sub
sbb
mov
hlt
daa
sti
in
js
out
test
and
xchg
clc
xchg
lods
lahf
add
jb
pop
les
enter
out
and
mov
or
cltd
pavgb
pop
pop
add
decb
into
out
add
xchg
out
jmp
cmc
cmp
popa
sti
ljmp
sti
or
or
xchg
or
or
pop
or
aaa
add
cmp
aas
addb
or
cli
sub
push
hlt
jae
sbb
icebp
sbb
mov
push
std
or
stc
punpckhbw
sub
popf
push
jns
sub
cs
sti
ds
cli
das
push
dec
notl
repz
repnz
ljmp
dec
idiv
mov
call
inc
sub
scas
sbb
aam
andl
call
and
sbb
or
div
repnz
lods
out
imul
mov
cld
incl
dec
jmp
in
mov
cmpsl
in
pop
in
mov
out
cld
rclb
or
or
sbb
and
sbb
call
or
cmc
stc
scas
cmc
mov
insb
bnd
lock
mov
in
mov
cmc
outsl
mov
mov
hlt
or
adc
sbb
push
add
adc
xor
outsb
push
les
loopne
dec
add
lcall
call
shrl
jno
iret
aad
fst
out
repz
adc
cmp
inc
and
jbe
jecxz
and
sbb
mov
dec
add
mov
repz
gs
ss
stc
fisttps
loop
in
das
clc
fwait
sub
in
dec
repz
movsb
adc
mov
fcomip
jmp
outsl
and
inc
sbb
or
ds
outsl
hlt
dec
out
and
pop
out
jg
adc
xchg
ljmp
xlat
clc
xlat
mov
pop
adc
sbb
push
sbb
sbb
repz
add
mov
jg
adc
frstor
loop
mov
out
in
jne
fdivrp
cmp
pop
or
fcomip
cmp
push
inc
jns
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
decl
lock
add
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
incl
pop
cmp
cwtl
sbb
scas
sbb
sbb
sbb
push
sbb
adc
decl
scas
add
dec
cmc
jge
sub
xchg
call
sbbb
icebp
lret
testb
push
cmpsl
imul
sub
dec
adc
unpckhps
enter
aas
or
ds
mov
mov
jg
lods
xchg
jmp
jmp
out
jmp
lock
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
dec
sbb
push
adc
minps
push
xchg
xchg
std
arpl
push
test
out
sbb
test
hlt
xor
pop
filds
std
jmp
roll
or
in
outsb
pushf
push
mov
aad
fisubs
or
or
or
nop
scas
xchg
add
add
in
ljmp
mov
xchg
sti
in
or
nop
sti
mov
imul
negl
clc
ja
add
cld
std
cmpsb
push
fidivrl
push
add
add
lcall
or
or
pop
push
push
push
and
movl
lret
mov
hlt
xchg
repz
out
add
jp
push
jmp
out
sbb
cli
mov
std
pop
cmc
sti
cld
decl
rclb
stos
adc
adc
adc
and
cs
jg
or
sahf
or
or
lock
sti
jbe
mov
out
push
out
cmp
sub
out
ja
pop
notb
je
cmp
mov
pop
lock
sbb
sbb
sbb
push
mov
mov
out
in
repnz
in
xor
mov
jns
std
jecxz
loop
loop
in
call
stc
int3
add
mov
mov
dec
sbb
and
test
aaa
push
mov
lcall
mov
imulb
ljmp
add
push
jecxz
loope
loopne
loopne
in
ljmp
cmc
call
sbb
and
and
les
cmp
push
rcrl
lcall
adc
or
stc
out
jp
cwtl
ljmp
or
cmp
pushf
out
call
nop
jmp
in
push
out
mov
clc
xor
mov
fmull
adc
sbb
mov
sub
daa
or
dec
pop
pop
pop
repnz
dec
int3
in
das
jg
pop
jp
loopne
loope
outsb
out
jmp
mov
std
sub
hlt
jg
xchg
or
rclb
pop
adc
and
inc
jbe
dec
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
fisttps
fsubrl
fisubl
ficoms
in
jmp
jg
das
push
jnp
sbb
rcll
sti
ja
ret
lcall
mull
fsubs
jl
sbb
sbb
adc
mov
mov
jecxz
loop
jecxz
loop
loope
in
call
jg
push
cli
xor
cmp
or
adc
adc
ret
sbb
sbb
push
pop
xchg
sbb
sbb
add
jl
cli
jnp
aad
mov
fistpll
loop
out
jmp
out
xchg
testb
add
decl
lock
sub
sahf
adc
adc
adc
adc
adc
lcall
adc
fimuls
or
add
cli
xchg
bnd
push
sub
aad
inc
fnsetpm(287
add
sub
jg
dec
jecxz
out
jmp
out
pslld
clc
add
call
add
adc
sahf
es
cmp
scas
pop
leave
outsl
clc
lcall
lock
iret
add
cli
pop
rep
in
movsl
jecxz
loopne
loopne
loopne
dec
out
ljmp
movsb
repz
push
std
xchg
mov
add
call
decl
cs
or
pandn
outsl
adc
adc
adc
or
jg
xchg
stc
xor
cmc
push
aad
jmp
jmp
fcomip
xor
ljmp
rolb
or
or
jnp
add
adc
push
or
inc
or
or
or
or
or
mov
cld
dec
pop
icebp
inc
in
repz
pop
jmp
pop
in
mov
call
cld
out
push
repz
pop
mov
stc
mov
mov
xchg
add
add
or
ljmp
xor
and
pop
adc
decl
inc
add
cmc
jns
xor
inc
lock
mull
jne
dec
negl
dec
testl
icebp
out
hlt
xor
lret
sti
and
pushl
int3
pushf
or
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
push
pop
or
decl
outsb
add
cmc
mov
cmc
div
jbe
push
push
hlt
jecxz
cs
sub
pushf
testb
stc
cmp
sbb
or
add
call
ret
adc
push
bound
pop
xchg
add
std
jb
icebp
jg
out
cmc
in
icebp
shl
gs
icebp
out
jmp
mov
dec
in
fucomip
mov
out
xchg
sub
es
add
xor
adc
sbb
and
es
sbb
shll
loop
xchg
clc
adc
icebp
sbb
jmp
in
out
jmp
add
xchg
in
xchg
out
inc
repnz
and
jmp
cli
cmp
pusha
pop
ret
les
add
add
cmp
jmp
mov
fistl
xchg
or
add
std
in
cmc
mov
mov
jnp
sti
jmp
jmp
cmp
mov
push
xor
xchg
add
pop
test
nop
jg
or
adc
adcl
dec
push
nop
adc
les
mov
cmp
xchg
mov
fcomip
testl
call
icebp
in
in
out
shlb
mov
in
mov
out
ljmp
mov
push
sub
push
or
adc
sub
and
jnp
out
mov
cmpsl
hlt
or
in
jae
loope
push
fldl
test
or
jg
enter
in
fdiv
xor
sub
lock
push
push
add
inc
mov
decl
into
sbb
and
es
daa
decl
push
sbb
adc
mull
out
push
sub
jecxz
call
fdivrl
loope
out
jmp
mov
xor
cld
test
jle
or
call
mov
sbb
push
mov
sbb
xchg
in
idiv
mov
xchg
mov
adc
rcr
mov
inc
nop
fildll
insb
repz
cmpsb
mul
clc
popf
stc
pop
sti
jp
mov
adc
push
ret
dec
and
xchg
daa
sub
sbb
lcall
or
lock
in
fildll
aam
cld
fstps
call
in
js
stc
and
icebp
push
and
inc
adc
adc
adc
test
mov
pop
dec
cld
decl
adc
adc
adc
or
push
or
jecxz
sti
cmc
xor
bnd
loope
or
fnsave
insb
out
out
jmp
adc
mov
push
in
popf
ljmp
mov
push
push
movsl
sbb
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
outsb
cmc
outsl
repnz
jno
test
cmp
ljmp
mov
adc
push
incl
sub
popf
or
or
or
imul
add
ss
inc
clc
sar
dec
div
fcomip
dec
stc
daa
add
add
add
add
sti
fcomip
push
mov
hlt
repnz
lock
mov
clc
lock
or
mov
adc
decl
loopne
adc
out
testb
add
cli
in
hlt
sbb
fucomip
xor
fcomip
mov
push
cld
add
pop
inc
or
adc
or
or
push
sbb
adc
inc
cld
aam
dec
add
and
or
fisttps
repnz
jecxz
add
inc
repnz
cmc
inc
stc
push
cld
or
repz
clc
repnz
adc
cmp
adc
ljmp
jle
punpckhwd
or
sti
sar
xchg
negl
testl
cmc
rcll
sbb
repz
repnz
out
aam
jmp
call
mov
mov
div
sbb
sub
lock
or
in
sbb
hlt
jmp
add
and
and
and
inc
or
hlt
int3
in
mov
pop
lds
fucompp
push
ljmp
mov
cld
pop
cld
adc
sahf
cli
mov
cs
mov
push
iret
or
adc
pusha
sbb
sbb
and
and
adc
ret
add
clc
xor
adc
sbb
cmc
loop
jecxz
jmp
or
dec
out
scas
cmc
cld
cmp
mov
or
or
or
pop
or
or
cmp
mov
or
adc
pushl
mov
push
stos
add
stc
adc
pop
ljmp
loopne
loop
in
ljmp
jmp
test
or
popa
std
inc
std
in
sti
cli
clc
push
idiv
push
sbb
add
pop
test
xchg
cli
or
push
or
push
mov
adc
cmp
fistl
jl
cmp
aad
adc
xchg
cmc
fists
ljmp
jmp
mov
lock
das
sti
jb
insl
add
call
mov
repnz
mov
aas
mov
add
add
pop
icebp
incl
inc
or
or
or
or
mov
popf
testb
lock
icebp
xchg
cmc
pop
cli
add
mov
outsl
nop
lds
dec
pop
int
dec
adc
adc
stos
or
in
add
cmp
ljmp
cld
ret
cld
insb
jg
add
add
mov
pop
bound
add
add
insb
data16
out
mov
in
fldz
sbb
adc
test
add
or
adc
add
call
call
in
out
ljmp
push
add
decl
adc
adc
push
push
or
add
idiv
repnz
push
cmc
icebp
clc
mov
pushf
push
leave
or
sub
jl
jg
rorb
and
sbb
sbb
ret
cli
jmp
rcrb
jmp
fdiv
push
cld
inc
js
pop
lcall
xor
push
jl
xchg
mov
push
in
mov
pop
push
jae
rorl
dec
or
or
mov
lea
lea
mov
enter
movsl
cmc
mov
mov
test
inc
out
pop
out
cmpsl
lock
repnz
jg
insl
cld
dec
add
add
mov
sti
or
test
sar
cld
or
or
or
or
mov
outsb
decl
cli
sti
cmp
repz
inc
in
cli
call
in
in
in
in
ja
jb
ret
ljmp
std
jne
or
jg
sahf
sbb
clc
ja
ljmp
sbb
scas
and
push
sbb
add
dec
jg
and
sbb
cmp
in
or
out
int
in
scas
repnz
jge
cmc
cmc
negl
cli
mov
call
ljmp
repnz
cmpsl
or
lds
lcall
sbb
adc
or
add
pop
cmc
mov
inc
imulb
jmp
in
inc
out
mov
imull
cld
add
pop
incl
roll
add
add
add
add
mov
sar
testl
fiaddl
repnz
or
call
adcl
sbb
adc
push
popa
repz
clc
out
imul
test
dec
jmp
in
mov
clc
push
stos
pusha
ja
mov
aaa
add
mov
call
hlt
repnz
repnz
lahf
negl
idiv
add
ret
adc
pop
jo
mov
jg
add
add
add
std
xor
xlat
cli
and
sti
pop
mov
mov
std
mov
out
and
cld
inc
std
leave
cld
adc
lea
add
add
add
pop
adc
pop
or
add
jg
or
fimuls
mov
lahf
add
pushl
ret
std
sar
mulb
pop
stc
sbb
cmp
aas
stc
mov
and
inc
notl
clc
xor
pop
mov
add
mov
add
das
inc
rcll
or
mov
call
or
pop
xlat
add
ja
sub
xchg
ljmp
cmpsb
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
test
mov
mov
dec
jg
push
sti
push
pop
jl
dec
add
ss
add
add
add
stos
mov
inc
decb
push
data16
cmp
and
test
xor
sbb
mov
mov
testb
mov
lods
or
add
sar
sub
push
mov
sti
pop
jmp
add
push
jle
roll
cmc
std
push
cli
lcall
cmc
mov
pop
cmc
imul
clc
add
dec
add
or
ljmp
or
mov
data16
incb
sti
xor
call
icebp
jns
fwait
icebp
or
cmp
sti
stos
std
inc
incb
push
cmp
or
fwait
add
push
cs
add
add
xor
mov
std
push
std
std
cmp
mov
add
jge
sbb
sahf
add
add
add
dec
cli
jns
or
stc
xor
clc
ljmp
loope
call
dec
add
or
add
jb
jg
stc
adc
push
out
cmc
out
or
out
aad
jmp
out
js
adc
sub
outsl
pop
and
mov
or
test
or
test
movsl
or
testl
dec
or
test
add
into
fcomip
mov
mov
xor
daa
lock
and
cmp
clc
pop
sti
adc
mov
pop
inc
mov
jle
repnz
sub
jmp
xchg
add
add
add
pop
data16
rolb
ljmp
gs
add
mov
mov
call
cld
stos
sti
pusha
sti
sar
xchg
out
in
out
mov
out
add
mov
add
sub
int3
pop
adc
addb
add
ffree
push
mov
dec
dec
cli
gs
adc
pop
cld
out
jp
adc
and
pop
add
add
clc
push
add
add
add
add
add
roll
add
das
cli
ja
fdivr
dec
jmp
or
stc
pop
clc
ss
call
hlt
push
hlt
or
jle
mov
je
mov
js
mov
bound
mov
cmp
decl
push
jp
push
stos
or
out
loop
mov
add
inc
pushf
dec
std
pop
sti
clc
inc
notl
cmc
xchg
addr16
testl
stc
cmc
stc
int
stc
data16
sti
cmpsb
outsl
ljmp
dec
add
push
sub
rorl
xlat
jp
movsb
pop
push
dec
or
or
add
inc
cld
psubw
int3
hlt
arpl
push
loop
hlt
xchg
hlt
adc
cmp
enter
hlt
incb
cmpsb
lock
xchg
rolb
inc
add
clc
or
std
cwtl
std
or
cmpsl
add
stc
add
das
or
or
pop
cmpsb
std
pop
hlt
jg
add
push
std
xor
stc
insl
stc
add
mov
lcall
jbe
stos
add
add
cld
test
sbb
cmc
or
repnz
repz
lcall
call
push
add
add
add
or
push
or
shrl
or
add
mov
mov
sbb
lcall
lods
call
std
ds
mov
testb
repz
repnz
repnz
lock
bnd
in
xchg
clc
fcomps
into
add
push
add
daa
fimuls
aaa
inc
mov
pusha
or
pop
dec
push
dec
add
add
mulb
mov
fdiv
shl
jo
fimull
lock
mov
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
decl
add
or
or
or
aad
mov
push
std
or
or
add
add
decb
sbb
jle
cld
cmp
mov
cli
or
lcall
jb
cld
inc
std
test
sar
fscale
scas
std
jg
test
arpl
dec
std
inc
std
or
push
std
dec
aas
mov
or
loop
sbb
decb
ljmp
sar
cmp
add
add
add
add
jo
and
sti
incl
mov
add
add
xchg
cld
cli
push
cli
sbb
jmp
pushl
notl
divl
testb
pop
clc
mov
xchg
cli
push
xor
scas
ljmp
xor
fcomip
mov
dec
or
or
or
or
or
push
mov
loope
out
add
dec
out
ljmp
mov
scas
mov
sti
aaa
sti
movsl
cli
adcb
cli
xchg
cli
out
mov
out
cli
sbb
inc
add
or
cwtl
or
pop
fcmovb
cmp
and
adc
xor
add
clc
stos
add
cltd
add
sti
xor
gs
cmp
std
mov
sub
pushf
std
add
xor
sub
xchg
and
mov
add
lcall
inc
add
add
call
cmp
cld
pop
sti
aad
xbegin
mull
clc
jmp
das
or
pop
repnz
fdivr
lods
lcall
pushf
add
rclb
cmp
jne
in
aad
incl
xchg
and
add
sub
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
cmp
add
add
sti
add
push
stos
inc
mov
xor
fiaddl
movsb
add
add
lahf
add
dec
add
add
cmp
fisubrs
addl
sbb
sub
cld
sbb
and
outsl
cld
push
std
pop
pushl
lret
clc
fstpt
rolb
add
add
dec
add
xchg
add
mov
push
adc
mov
inc
loope
mov
add
jle
cs
or
add
add
add
mov
mov
sarb
pop
mov
add
dec
fdiv
ljmp
add
add
add
add
inc
add
clc
sbb
pop
imul
sti
pop
sti
mov
sti
imul
cmpsl
sti
loopne
fs
jle
std
fiadds
jbe
jmp
std
jp
in
xchg
daa
sti
cli
push
or
dec
cli
es
pop
ret
mov
data16
add
es
incl
ret
add
into
pop
mov
add
mov
sbb
push
add
mov
repnz
add
aam
push
pusha
cmp
mov
jge
mov
and
push
incb
aam
xor
add
push
push
cli
push
sub
gs
loope
or
dec
push
out
sbb
in
sub
aas
mov
jmp
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
fildll
push
pop
add
add
xlat
incl
movl
add
mov
add
add
sub
cmp
lods
xchg
test
pop
add
pop
sub
shl
sub
and
add
xchg
add
xor
add
push
ror
fcmovbe
decb
cld
cltd
sti
int
xlat
stc
idiv
push
sar
clc
cwtl
testl
mulb
test
fincstp
mov
sti
sbb
fwait
lods
stc
xchg
add
mov
xor
cmpsb
inc
es
or
pop
movl
insl
add
add
loope
call
cld
idiv
push
sti
push
sti
cmp
ds
push
lret
cld
jmp
or
incl
add
add
mov
clc
add
sub
sub
ja
add
loop
inc
add
sub
xchg
add
iret
add
add
push
jnp
fistps
std
pop
cld
push
sti
cli
jp
cmp
std
sbb
cmpsl
cli
pusha
sti
cmp
mov
cmp
hlt
pushl
mov
add
add
scas
add
fistps
lret
add
add
mov
add
add
push
sar
bound
aas
add
mov
mov
mov
std
aam
jb
in
adc
pop
add
data16
pop
cld
out
stos
add
cs
cld
mov
stos
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
inc
pushl
and
clc
cmp
stc
inc
cli
jo
mov
cld
std
cld
loope
fcomip
std
inc
jmp
xchg
add
push
outsl
pop
mov
jge
stos
or
std
lcall
push
out
push
mov
sub
out
mov
dec
xor
inc
mov
and
ficomps
pushl
lcall
sti
or
std
xor
mov
xchg
add
inc
xchg
push
add
and
dec
push
inc
push
out
add
jbe
mov
ret
decl
push
cmpsb
out
cld
add
push
sti
iret
cli
pop
cli
daa
dec
sbb
pop
inc
sti
out
sub
std
enter
lcall
add
add
add
push
push
add
faddl
test
fwait
mov
lcall
add
add
es
jnp
cmp
fsubrl
xor
pop
push
sub
mov
dec
mov
adc
inc
es
decl
mov
dec
lods
std
xor
sar
cld
in
sti
jl
sbb
sahf
aad
pop
cld
mov
cli
and
inc
sti
cmp
cld
nop
cld
sub
stc
push
inc
or
inc
mov
scas
push
xchg
add
add
add
rcr
incb
daa
add
xor
push
add
decl
ss
jns
idiv
jno
ljmp
sti
pop
mov
std
or
outsb
fsin
and
cmp
jmp
add
sbb
dec
enter
lcall
and
jb
xchg
add
or
add
add
add
fiadds
popa
fdiv
inc
add
or
dec
mov
subps
mov
bound
add
les
sbb
ret
mov
pop
insl
out
add
faddl
add
add
subb
mov
sub
roll
jne
ret
add
pop
push
call
fdivr
pop
rorl
lret
push
mov
fimuls
aas
fdivl
imul
fwait
inc
mov
pop
inc
jmp
incb
std
mov
std
fs
loopne
jecxz
std
xchg
testb
mov
add
push
roll
xchg
mov
lods
push
jnp
xor
ljmp
testb
sbb
sbb
xor
adc
test
loop
sahf
add
aaa
loopne
and
push
add
insb
cmpsl
add
inc
add
sahf
leave
add
inc
add
aaa
jb
push
mov
test
xor
mov
outsb
add
add
sbb
dec
add
add
iret
ljmp
out
cmpsb
push
jl
stos
std
fdivp
xchg
insb
stc
or
inc
add
mov
sbb
nop
push
outsl
cli
decl
loopne
xchg
add
movsb
add
jbe
inc
mov
add
xchg
sub
pop
add
add
push
mov
jmp
in
mov
ljmp
xchg
jmp
call
cmp
test
sub
nop
pop
jne
jle
outsb
cmpsb
pop
add
add
aaa
cs
add
add
mov
adc
inc
cmpsb
mov
std
fdivr
stos
cld
xchg
cld
mov
std
mov
push
mov
xor
mov
add
mov
ljmp
sub
add
sti
add
sub
test
insb
std
sbb
sar
mov
testb
std
xchg
decb
loop
lahf
outsb
push
add
adc
add
sbb
cmp
and
xor
inc
add
mov
es
xchg
cld
jg
dec
add
insl
add
addl
add
icebp
push
or
cmp
mull
das
pop
xor
daa
pushl
cmp
cmc
add
jg
popl
test
add
jo
mov
testb
scas
prefetch
sahf
ss
imul
scas
ret
xor
xchg
jmp
mov
sarb
sub
dec
adcb
add
outsb
dec
ret
sbb
xchg
add
pop
pop
lods
mov
add
jg
pop
mulb
add
add
bound
out
mov
push
out
lahf
cs
int
sahf
cld
push
cld
inc
cld
arpl
lcall
sahf
mov
sub
stos
ret
bound
fiaddl
mov
lcall
inc
incb
mov
into
test
std
inc
mov
add
cld
ss
sbb
out
push
xchg
stos
std
push
xor
out
std
cmp
out
add
test
lret
mov
add
loop
cltd
add
and
mov
inc
sbb
cmpsb
add
sub
add
inc
adc
cmp
mov
incb
in
std
mov
ja
sbb
stos
pop
and
dec
fbstp
pop
or
add
sbb
add
pop
mov
add
sub
inc
ljmp
ljmp
pushl
mov
sub
sahf
mov
xchg
dec
sar
and
outsb
mov
add
jmp
ret
dec
add
adc
push
filds
add
add
add
adc
dec
or
or
mov
push
mov
mov
aad
testb
std
pop
std
mov
decb
mov
add
push
out
add
xchg
loopne
fldl
fiaddl
jge
xchg
movw
bound
test
mov
inc
decb
lret
std
shlb
or
mov
loopne,pt
hlt
sti
pop
sti
sti
std
sti
xchg
cld
sbb
loope
sahf
lcall
ja
stos
incl
hlt
add
shlb
add
add
add
add
add
ret
lret
xchg
inc
cmp
rcr
xor
add
pop
push
sar
cs
scas
bound
ret
pop
mov
sar
pop
pop
es
cld
fbstp
lods
add
add
add
add
add
add
jbe
add
add
jmp
cmp
shll
pop
mov
add
test
adcb
lods
mov
lcall
xor
dec
add
loop
add
xor
and
mov
and
sbb
lods
decb
jg
clc
push
bound
ret
jmp
mov
shll
inc
lcall
push
lcall
jecxz
out
inc
or
lahf
or
mov
dec
std
jle
dec
std
push
hlt
addl
fidivs
bound
mov
fisubl
outsl
pop
mov
add
mov
lods
bound
pop
adc
cli
into
xchg
add
add
add
inc
ret
pop
call
add
jne
add
aas
mov
mov
push
bound
jnp
inc
pop
push
loop
xor
or
push
add
cmpsb
roll
mov
jle
andl
mov
and
mov
fisttpl
add
ljmp
ljmp
add
push
mov
inc
aad
nop
push
xlat
add
add
fdivs
push
add
pop
shll
cld
jg
adc
fsin
cmpsl
decb
push
mov
pop
movb
cs
out
scas
xchg
out
jecxz
cmp
cmp
scas
out
js
cmp
or
imul
add
addl
mov
std
jp
cmp
push
rcr
addb
adc
pop
cs
mov
mov
fildll
push
inc
jp
push
pop
add
ss
add
sbb
out
add
add
lcall
cmpl
inc
fisubrl
mov
addb
repnz
mov
adc
xchg
stos
pop
or
jnp
jl
jle
aam
out
inc
or
aas
rol
movl
push
mov
sarl
rol
stos
mov
ret
jbe
orb
xchg
add
sub
cmovge
sub
pop
inc
ret
jecxz
mul
add
add
dec
ficoml
cmpsb
sbb
mov
mov
out
xchg
mov
idivb
aad
or
xor
xor
pushl
jno
test
rclb
fdivr
add
xor
call
pop
incb
out
lcall
mov
loop
sbb
mov
or
jb
outsl
lcall
iret
jp
push
scas
or
or
push
cmc
sbb
out
cmp
data16
decl
hlt
add
add
add
pop
test
jmp
aam
xchg
cmpsb
mov
loopne
add
aaa
xor
add
sbb
cmp
mov
mov
xor
jae
and
cld
sbbb
push
lock
xor
out
pushf
aad
mov
adc
cmp
cmp
loopne
ret
mov
divb
jne
adc
cltd
add
push
repz
dec
outsb
pushl
decl
lea
mov
insl
lcall
jge
icebp
aaa
popw
decl
push
fsubrp
scas
cltd
decb
sahf
out
adc
std
ss
std
or
je
cmpsl
std
cmpsb
std
sub
rolb
push
dec
jp
test
jl
out
mov
test
push
mov
xor
arpl
mov
add
adc
push
mov
popa
rolb
push
and
inc
aaa
sub
cli
loop
in
ljmp
jg
out
adc
add
push
cmp
lgdtl
or
mov
mov
mov
sahf
rcl
ret
rcll
cli
mov
roll
sahf
out
aad
lret
loop
mov
movsl
ret
cmpsb
shlb
push
jecxz
dec
fiadds
lds
cmpsl
push
mov
jnp
and
dec
fsts
aam
rol
cmc
mov
inc
mov
je
stos
gs
xchg
jge
push
mov
ljmp
fcompl
inc
addr16
sbb
jg
aaa
and
bound
mov
xchg
dec
mov
sbb
jb
jbe
adc
mov
aaa
loope
ljmp
mov
roll
adc
incl
pop
outsb
ljmp
or
scas
pop
fs
repnz
imul
sarl
fldenv
or
lds
out
inc
pop
ss
cmc
icebp
dec
cmpsb
outsb
xor
fisubs
bound
in
iret
add
mov
scas
pusha
xlat
or
out
dec
jns
mov
aad
adc
mov
sahf
jns
insb
lret
sarl
cltd
lcall
and
push
popa
and
dec
stos
mov
mov
mov
stos
or
mulb
mov
mov
inc
sub
pop
outsb
cmc
jp
std
sbb
andb
xchg
dec
and
xor
cmp
adc
lret
mov
nopl
push
xchg
push
jle
push
mov
in
add
shlb
jnp
inc
xor
out
push
adc
outsb
push
andb
or
push
test
ret
jns
mov
add
inc
and
out
test
mov
mul
cli
mov
push
cmp
shrb
inc
movsb
xchg
xchg
jb
jge
xor
data16
es
xor
lret
out
adc
mov
jbe
ret
mov
jbe
mov
mov
mov
fcomi
inc
xchg
sbb
fidivrl
adc
fstps
ljmp
adc
cli
and
mov
dec
movsl
push
ret
test
fcoml
sbb
lods
cmpsl
cmp
lret
mov
adc
aad
lret
inc
mov
iret
andl
adc
pop
inc
mov
sbb
add
cmp
je
loope
push
push
jns
mov
jge
push
push
daa
repnz
mov
pop
push
push
xchg
mov
out
sti
jp
clc
xchg
push
push
add
push
push
dec
fimull
dec
dec
push
mov
or
push
scas
adc
add
sub
ds
push
sub
out
push
add
jp
cmp
neg
pop
out
jnp
popa
aad
sub
add
outsb
lock
push
lock
aam
in
hlt
ds
sbb
jb
outsb
mov
ds
push
repnz
mov
or
popa
ss
push
mov
adc
jno
mov
mov
sbb
and
push
mov
orl
jg
push
xchg
pop
stos
subl
jb
out
mov
xchg
movsl
fidivrl
mov
outsb
cli
data16
mov
dec
sub
mov
and
sbb
jbe
ret
mov
jge
pushf
pop
push
into
xor
cs
je
pop
push
test
xchg
divb
jne
lock
or
xchg
lcall
or
jle
lahf
inc
pop
add
stos
fadd
xchg
lret
ret
fidivrl
and
dec
push
or
or
mov
fiadds
jb
xlat
test
jg
cmp
push
push
je
js
imul
into
pop
pop
fs
adc
lcall
or
mov
cld
adc
ds
mov
cmp
test
mov
addl
dec
sbb
scas
inc
xchg
fidivrl
mov
jbe
inc
mov
pop
out
push
or
mov
in
mov
xor
push
pop
push
into
push
cmpb
shll
outsl
pop
addr16
push
push
insl
add
pop
add
cmp
jecxz
jl
addb
cmpb
cmp
mov
xor
sub
fistpll
cli
xor
adc
adc
clc
add
repz
xchg
mov
add
add
mov
or
push
sahf
cmpsl
scas
cmpsl
and
or
fldcw
push
sahf
lcall
sarl
loop
push
into
mov
sbb
jecxz
into
add
inc
lods
push
xchg
faddp
mov
rcrl
fbstp
mov
sub
jbe
cli
dec
out
sbb
fists
fiaddl
cmp
push
inc
rcrl
dec
mov
push
jp
ss
mov
ret
sbb
out
xorb
xor
sub
aaa
fidivrl
push
jo
ljmp
mov
sub
idivl
inc
jbe,pn
mov
or
roll
ljmp
es
vpslld
divl
cmp
or
adc
fcmovu
js
lods
mov
pop
jbe
ds
add
jbe
mov
loopne
jge
add
mov
out
rcr
ss
and
jle
arpl
icebp
dec
jmp
or
xlat
je
xor
scas
ret
enter
dec
mul
fbstp
subb
xchg
fmuls
cmp
or
repnz
sbb
into
add
lcall
pop
out
jp
add
into
iret
negl
pop
pop
inc
push
faddl
and
push
cmp
push
cli
ljmp
push
scas
fsubrp
ret
das
jle
jb
xchg
cmc
lret
mov
jnp
out
mov
adc
jb
add
mov
sbb
shr
add
adc
je
pop
push
idiv
sbb
movb
or
mov
push
mov
in
aad
out
mov
jbe
outsb
clc
mov
add
add
sahf
jmp
mov
push
aad
hlt
inc
sti
out
xor
and
mov
in
mov
lock
scas
lret
adc
adc
inc
repz
fisubrs
divb
in
in
out
inc
add
lock
mov
push
sbb
dec
cs
loopne
out
imul
mov
lret
push
mov
je
testl
stc
out
mov
bound
incb
sub
data16
out
fidivrs
in
sub
clc
dec
xor
stc
cmp
imul
xchg
mov
jnp
push
daa
pop
inc
fiadds
outsb
addr16
lcall
in
or
mov
in
mov
push
pop
hlt
lock
push
fsubrp
loop
out
xor
inc
idivl
sbb
mov
ret
mov
out
sub
sbb
imul
out
ds
inc
sbb
sarl
sbb
sbb
add
mov
adc
cmp
ss
loope
mov
push
out
pop
or
lock
sbb
sub
push
cli
out
push
clc
jmp
out
dec
loopne
not
cmc
add
add
or
and
or
push
pop
loope
jo
fwait
scas
add
add
mov
adc
adc
push
loope
jae
push
xor
out
loope
mov
adc
xor
mov
fistpl
frstor
mov
push
cmp
jo
push
pop
arpl
adc
ffree
testl
es
cmp
loopne
out
iret
add
lret
jnp
fcompl
fcomi
push
idivb
sti
mov
call
inc
mov
fst
fwait
add
sti
aas
testb
inc
mov
lret
std
add
add
lret
mov
push
xorl
es
enter
sub
adc
fcompl
add
jo
addb
mov
js
jl
test
mov
fwait
jge
jnp
jns
jle
addb
jle
add
xor
jle
or
cmp
inc
push
aaa
cmpl
xor
stos
addl
cmp
addr16
les
cmpb
jl
mov
mov
jl
cmpl
test
fnstcw
jnp
jl
mov
xlat
int3
scas
cltd
add
jp
test
rolb
ds
push
enter
fbstp
stos
ljmp
addb
push
shr
or
jl
jns
flds
jo
xchg
or
ljmp
mov
cmpl
pusha
pop
pop
pop
push
test
lea
lods
dec
mov
mov
inc
cmp
stos
cmpsb
popf
mov
jmp
pop
data16
mov
mov
pop
inc
cmp
sub
push
andb
call
inc
dec
pop
ja
movsl
mov
mov
mov
jbe
cmp
aaa
xor
xchg
lods
mov
mov
dec
dec
dec
pop
jno
cmpsb
ds
mov
imul
push
outsb
lea
clc
mov
fwait
jge
inc
push
bound
ds
stos
sahf
xchg
xchg
xchg
lea
cmp
outsl
xchg
stos
mov
stos
cwtl
jns
push
push
push
imul
test
mov
push
dec
dec
push
inc
dec
test
test
pop
popa
mov
lcall
notb
cmp
outsl
xchg
test
cmpsl
mov
pop
bound
cmpsb
pop
lock
mov
lods
mov
pop
dec
inc
dec
inc
dec
popa
sbbl
pop
pushl
adcl
xchg
xchg
xchg
jg
inc
aas
dec
inc
dec
bound
xchg
subl
pop
call
mov
ds
or
dec
inc
dec
data16
push
pop
popa
jb
xchg
movsl
mov
mov
cltd
jl
mov
inc
cmp
push
jne
cmpsl
lods
movsb
sahf
mov
divb
pushf
scas
mov
xor
cwtl
test
cmp
inc
popa
sbbb
ljmp
clc
lcall
addr16
movsb
mov
lods
mov
inc
cmp
dec
inc
push
jne
movsl
lods
cmpsl
pop
mov
ja
jo
mov
fwait
cltd
in
outsl
clc
lcall
mov
imul
mov
mov
xchg
xchg
cmp
pop
jle
scas
negl
mov
pop
jae
lcall
lahf
xchg
mov
cmp
inc
push
je
mov
imul
insl
adcl
inc
cmp
mov
push
pushf
test
test
imul
mov
mov
inc
cmp
popa
sbbb
jbe
ret
ljmp
pop
pop
gs
xchg
test
cltd
mov
cmp
dec
dec
pop
jp
mov
jg
xchg
jnp
pop
pusha
data16
clc
mov
dec
ds
stos
jo
cmp
xchg
mov
pop
pop
in
jle
ljmp
jmp
mov
cmp
outsb
mov
subl
jg
fwait
pusha
jl
fwait
stos
or
gs
inc
dec
dec
push
adcb
mov
jbe
lock
movsl
stos
movsl
mov
jae
dec
mov
push
dec
pop
jne
popf
mov
bound
sar
ret
mov
push
dec
push
push
pop
insl
adcl
out
das
or
insb
jp
cltd
mov
jbe
dec
push
pop
push
pop
jne
xchg
lcall
mov
addr16
movsb
ficoms
jg
pop
push
pop
pop
pop
push
lea
imul
jp
xchg
lahf
movsl
mov
xchg
xchg
mov
pop
pusha
pusha
orb
decb
insl
jb
xchg
sahf
mov
jle
pop
pop
bound
jb
mov
insl
outsb
jo
orb
mov
jnp
jbe
fs
popl
mov
js
das
clc
cmc
add
mov
imul
cli
orb
jbe
jl
lea
mov
cmpsb
push
jg
push
xchg
dec
fildll
js
xchg
in
mov
outsl
insl
adc
xlat
scas
call
lcall
jnp
mov
jbe
xorl
jg
lcall
orl
fistps
and
jae
push
outsb
jbe
xchg
xor
adc
xchg
mov
jnp
jno
insb
jae
push
mov
mov
lret
xchg
sahf
addl
mov
or
js
cmp
jbe
test
add
lods
mov
fiaddl
fistpll
addl
push
adc
add
imul
mov
andb
jle
imul
pop
insl
jne
mov
rcrb
jnp
or
jge
addl
insb
jbe
nop
cwtl
popf
fwait
xchg
lea
shlb
sbb
xor
adc
fidivl
add
jle
nop
xchg
xchg
mov
jl
cli
js
mov
outsb
outsl
je
mov
push
xchg
nop
mov
jnp
test
addb
sbb
xor
jbe
or
dec
or
testb
jg
test
cwtl
fisttpll
cmp
jae
and
mov
jmp
xchg
or
ja
lods
xchg
sub
fidivrl
add
into
jbe
fidivrl
insb
call
or
jge
mov
sub
jnp
jge
push
sbb
mov
mov
icebp
or
xorl
pop
sbb
loopne
xor
cmpb
fdivrs
jl
fadd
pop
cmp
add
aas
add
adc
add
mov
aas
jl
sbbb
inc
repz
jle
mov
and
xchg
arpl
negl
scas
jnp
and
pop
repz
fnsave
stc
and
ds
add
push
jl
mov
cmp
mov
mov
rcr
sbbl
arpl
or
xchg
xorb
fstpt
sbb
insb
add
test
xor
outsb
shrl
icebp
xchg
push
lods
lea
mov
lds
sub
push
and
mov
pop
mov
mov
shrl
aaa
fcmovbe
nop
cmp
mov
jnp
push
add
adc
lret
aas
adc
mov
jae
insb
mov
add
pop
pop
add
addb
xchg
addb
sbb
pop
in
movsl
testb
sbb
add
jmp
push
test
cli
jp
sub
andl
sbbl
dec
add
mov
fcmovbe
repz
sbb
push
mov
mov
inc
cmp
imul
insl
inc
outsl
adc
insl
sbb
pop
cmp
mov
dec
sub
push
or
adc
mov
mov
rclb
jae
fistpl
fistl
mov
andnps
mov
insl
push
adc
ret
and
mov
roll
test
sbb
jle
pop
cmp
mov
insl
sub
lods
test
xor
mov
mov
orb
mov
mull
push
pop
andb
cmp
or
ret
rorl
test
ds
or
push
loope
addr16
ss
sub
js
fmulp
pop
sub
fisubrs
xor
or
jnp
cmp
mov
lcall
adcb
jno
push
xchg
imul
adc
mov
dec
test
je
jae
or
jp
addl
test
mov
insl
pop
out
jg
insb
imul
jl
mov
push
std
mov
test
mov
fs
pop
call
mov
jne
jne
jnp
ljmp
mov
jb
pop
gs
lea
insl
mov
jl
jne
jb
jbe
orb
mov
js
pop
sti
fstpt
mov
jp
jae
jo
je
jle
mov
mov
pushf
mov
pop
bound
addr16
nop
and
sbb
jo
push
outsl
lcall
pushl
mov
xchg
pop
addb
pushaw
pusha
jb
mov
das
clc
in
xchg
lcall
gs
orb
xchg
mov
orb
pop
push
nop
xchg
cltd
cltd
xchg
xchg
jns
imul
and
jle
jno
test
outsl
in
decl
nop
xchg
imul
ret
outsl
push
pusha
mov
filds
pushf
jge
cwtl
mov
xchg
mov
ja
xor
pop
insl
roll
cwtl
movsb
cmpsl
cmpsb
lahf
and
xchg
pop
pop
push
imul
jle
lahf
test
xchg
mov
mov
push
dec
imul
or
push
push
pop
popa
test
mov
lods
mov
lcall
dec
inc
bound
test
dec
dec
push
pop
pop
data16
mov
sti
decl
xchg
pop
cltd
mov
dec
push
ds
jge
mov
shll
jg
push
inc
inc
dec
push
pop
inc
mov
mov
mov
std
jg
xchg
inc
and
outsl
mov
stos
xchg
je
dec
inc
inc
dec
pop
fs
xchg
cmpsl
decl
mov
xchg
aas
sbb
jo
ror
ret
mov
pop
dec
ds
push
pop
fs
xchg
lcall
xchg
xchg
fwait
xchg
dec
pop
sub
aas
xor
mov
lahf
andb
aaa
inc
inc
push
pop
je
xchg
stos
mov
mov
fwait
loope
lcall
adc
xor
jns
leave
fmul
mov
jae
inc
sub
data16
mov
mov
mov
mov
or
xor
sub
ret
fst
inc
cmpsl
andb
sub
aaa
dec
pop
ja
movsl
mov
rol
mov
movsl
nop
inc
or
sub
pop
call
mov
mov
inc
xor
aaa
dec
pop
jb
movsb
mov
rol
mov
test
cmp
sbb
sbb
mov
mov
imul
pop
js
stos
ds
mov
stos
test
or
sbb
pop
lcall
sbbl
xor
and
xchg
scas
mov
sbb
sbb
call
inc
subl
aaa
daa
sbb
cmp
mov
leave
mov
push
lods
int3
insl
and
sbb
popf
mov
lods
andl
sbb
xor
incl
popf
mov
enter
scas
lods
test
or
adc
cmovns
ljmp
gs
jo
xor
push
sub
push
outsb
scas
ret
ror
ret
jg
mov
cmp
dec
adc
sbb
pop
xor
out
into
mov
push
and
decl
movsb
mov
enter
mov
bound
adc
or
and
in
fnstenv
idiv
inc
sub
push
cs
popa
jge
mov
into
dec
lret
mov
push
push
pop
loopne
pop
lock
mov
jecxz
mov
push
xor
dec
inc
pop
jns
mov
imul
mov
mov
and
sbb
add
pop
mov
dec
jg
jg
xor
xor
jp
mov
fimuls
mov
and
sbb
mov
ljmp
mov
insb
push
xor
and
inc
pop
jl
mov
into
rcl
int3
mov
push
and
sbb
pushl
cld
add
mov
loopne
lods
mov
xor
xor
jl
mov
jg
es
xchg
push
pop
sub
add
das
arpl
mov
clc
in
scas
mov
and
aaa
dec
pusha
jge
leave
into
ror
xchg
mov
decl
sub
add
cmp
scas
lret
int
mov
xor
sub
xchg
scas
rol
into
lret
mov
mov
dec
and
mov
test
insb
push
xor
das
inc
push
arpl
lcall
mov
sub
cmp
jg
call
xlat
enter
push
cmp
ss
push
data16
mov
loop
std
ljmp
aaa
pusha
andb
sub
ss
inc
push
pushl
cmpsl
aam
enter
xchg
push
xor
and
pushl
jns
mov
aam
mov
andb
cmp
inc
pop
outsl
test
inc
lds
and
jno
lods
ror
mov
mov
inc
cmp
push
push
fwait
scas
jmp
leave
js
shlb
or
ss
jno
stos
loope
push
mov
je
xchg
or
xchg
stos
mov
mov
mov
cmp
push
insl
xchg
jns
dec
inc
inc
fucomip
fdivrs
test
mov
int
scas
mov
sub
sbb
push
ss
ljmp
mov
mov
pop
push
inc
inc
inc
dec
arpl
cmpsb
mov
in
enter
fisubrl
push
and
imul
cmpsl
cwtl
sub
fdivr
gs
inc
inc
inc
dec
pusha
jne
movsb
dec
or
leave
mov
push
mov
cmp
jg
lods
mov
pop
dec
inc
inc
dec
pop
outsl
xchg
rol
xchg
or
cmp
xor
jbe
movsb
fucomip
pushl
jp
lods
mov
inc
inc
dec
pop
insb
test
shlb
insl
inc
inc
ds
xor
je
lahf
mov
mov
mov
dec
inc
inc
push
addr16
cmpsb
mov
mov
lret
les
sbb
inc
push
push
adc
ljmp
pop
dec
dec
sub
sahf
mov
out
push
test
mov
popa
inc
dec
bound
push
sti
push
add
sub
jne
push
dec
inc
dec
pop
xchg
decl
adc
sarl
xor
pop
lock
out
sub
sub
popf
xchg
push
dec
dec
dec
je
lcall
push
int3
in
cltd
addr16
dec
inc
and
jmp
stos
stos
mov
push
dec
dec
push
fs
push
sarb
cmp
out
fstpt
dec
pusha
jae
popf
scas
mov
loopne
js
pop
push
dec
dec
pop
push
xchg
mov
add
push
dec
dec
xor
push
addr16
mov
add
ss
xchg
dec
push
pop
outsb
fdivs
in
or
mov
mov
imul
xchg
stos
cmpsb
xchg
test
pop
push
dec
push
popa
outsl
adcl
popf
insl
dec
push
dec
sub
dec
pop
insb
jle
movsb
xchg
test
cli
std
das
sub
jb
pop
push
push
pop
arpl
xchg
ret
push
insl
push
push
dec
sub
push
xchg
mov
xchg
xorl
gs
mov
mov
enter
pushf
insl
push
push
dec
sub
mov
add
call
pop
pop
pop
data16
mov
das
clc
jg
sahf
jbe
push
dec
xor
cmp
jp
pushf
mov
test
gs
pop
jmp
sahf
lods
fadd
mov
pop
push
or
imull
add
cmp
pop
push
lahf
xchg
xchg
pop
pop
dec
mov
lods
mov
pop
pop
adc
cmp
decl
pushl
cwtl
mov
mov
addr16
pop
pop
cs
scas
mov
mov
loope
lods
xchg
jno
push
dec
xor
push
cltd
lahf
lahf
mov
ljmp
add
push
jb
int3
mov
test
insl
pop
pop
dec
xor
ss
push
pop
imul
xchg
mov
pop
imul
jg
loopne
dec
mov
test
inc
xor
mov
cltd
fwait
sahf
mov
popf
xchg
xchg
fs
pop
arpl
xchg
test
mov
push
cmp
test
adcb
jns
sti
mov
pusha
les
pushf
mov
nop
outsl
pop
push
dec
cmp
jg
pop
push
test
xchg
mov
arpl
orl
test
jle
xchg
inc
ss
insb
jp
xchg
loopne
lcall
imul
mov
jl
pop
push
ds
jle
xchg
lock
outsl
addr16
mov
mov
push
test
dec
cmp
ret
jb
xchg
js
lcall
adc
gs
jg
fwait
lods
mov
jg
lcall
popa
pop
inc
cmp
push
pusha
push
lcall
lock
imul
repnz
sarb
inc
aaa
ljmp
aaa
aas
dec
push
bound
mov
popf
pushf
xchg
mov
gs
mov
pushl
popf
jge
pop
push
inc
inc
jp
imul
fnstenv
pop
xchg
xchg
dec
fwait
xchg
insb
mov
testl
stos
lcall
loopne
xchg
jnp
xchg
xchg
cltd
lcall
pushw
addb
mov
enter
inc
js
pusha
jnp
cmp
pop
addr16
dec
xchg
xchg
les
outsl
push
push
push
push
loop,pn
mov
cmp
jbe
js
dec
xor
xchg
popl
je
xchg
push
js
xchg
cmpsl
scas
cs
je
dec
cmp
dec
pop
orb
dec
outsb
insb
imul
mov
dec
or
mov
dec
addr16
dec
cmp
dec
cld
fbstp
xchg
dec
dec
xchg
xchg
xchg
xchg
mov
push
jb
lcall
push
movsl
lods
mov
add
dec
aaa
cmp
jae
mov
xchg
xchg
cs
lea
je
xchg
rorl
add
pop
dec
aas
dec
push
jl
pop
add
je
mov
je
push
jb
fists
lock
bound
inc
dec
push
add
mov
dec
xchg
cs
push
push
jb
mov
loopne
mov
fs
dec
cs
pop
fs
adc
cs
pop
notb
js
push
xchg
xchg
inc
or
movsb
out
bound
inc
negb
pop
fdivrl
nop
ficompl
xchg
jo
inc
mov
jp
mov
mov
adc
fcomps
outsb
xchg
cwtl
or
mov
push
fbstp
test
mov
mov
cltd
subb
ds
push
pop
push
test
jle
sbb
jp
inc
rorl
lahf
stos
scas
out
mov
adc
adc
cmp
dec
xor
orb
into
mov
add
jo
mov
ret
je
pusha
push
inc
inc
dec
in
push
in
clc
loopne
jl
xor
insb
xor
mov
mov
movsl
xchg
jl
bound
inc
in
jge
dec
out
pop
pusha
imul
xchg
bound
push
pop
pop
xchg
lahf
cmpsl
scas
mov
mov
popf
mov
pop
dec
aas
rclb
xor
jno
jbe
push
mov
cwtl
movsb
test
mov
addr16
inc
fldt
pusha
in
pusha
insb
inc
xchg
in
xorl
cmp
outsb
jbe
mov
cltd
mov
pop
dec
ds
push
push
pop
pop
cwtl
pushf
popf
pop
sbb
dec
js
imul
int
out
push
mov
mov
inc
push
or
mov
popa
insl
jnp
xchg
popf
cwtl
nop
mov
scas
pop
je
insb
jo
xchg
popf
movsb
adc
outsl
sub
sbb
dec
aas
inc
dec
cwtl
rcrb
inc
xchg
dec
jge
dec
insl
jae
mov
cld
mov
subb
dec
inc
dec
push
push
pop
int3
xchg
cmc
pushf
lahf
cltd
xchg
or
adcl
mov
mov
je
popa
push
inc
inc
dec
push
nop
outsb
jl
cwtl
sahf
cwtl
sbb
sbb
xchg
insb
inc
mov
cltd
xchg
add
xor
pushfw
arpl
mov
outsb
jne
lea
sahf
xchg
orb
pop
pusha
mov
inc
dec
push
push
pop
lock
lcallw
xchg
mov
adcl
mov
cwtl
ja
add
dec
inc
out
push
dec
out
xchg
mov
mov
fmuls
arpl
inc
dec
into
outsw
jle
aam
mov
out
loop
mov
shrb
mov
insb
bound
inc
inc
aaa
std
jns
dec
xor
jg
imul
mov
dec
xchg
popf
push
mov
movsb
fwait
test
icebp
push
mov
addb
pusha
mov
js
push
sahf
je
jb
jl
push
mov
mov
jg
gs
dec
inc
dec
dec
sahf
cli
xchg
push
jns
lcall
das
shrb
xor
dec
inc
inc
dec
push
pop
mov
out
imul
cmp
cmpsb
pop
mov
pushf
mov
arpl
inc
dec
push
mov
push
xchg
js
xchg
push
jae
push
jp
cmp
push
in
xchg
addb
mov
into
inc
dec
dec
outsl
scas
xchg
add
cmp
jp
outsw
jne
outsl
jg
inc
pushf
sub
jae
pop
push
inc
out
pop
gs
inc
stos
dec
in
cwtl
popf
cmp
pop
sub
insl
jno
adcl
out
outsb
add
or
sbb
add
cmp
xchg
mov
mov
mov
mov
push
inc
inc
into
push
or
dec
lcall
xchg
mov
sbb
mov
mov
and
pop
popf
dec
xchg
out
jb
mov
inc
rcrl
je
pusha
push
inc
inc
push
adc
and
mov
je
pushf
lock
xchg
test
mov
cmpsb
cltd
subl
dec
inc
sbb
add
test
jne
xchg
fwait
lahf
xor
jg
fbld
stos
mov
stos
into
or
inc
xchg
scas
mov
insb
jp
fwait
xor
std
pcmpgtd
jno
mov
subb
xchg
js
inc
dec
dec
xor
mov
lods
pop
xor
push
mov
or
push
sbb
cwtl
mov
loopne
mov
dec
inc
xor
mov
lcall
js
mov
cmpsb
nop
cltd
mov
test
dec
inc
inc
dec
ja
dec
arpl
mov
dec
pop
xor
outsl
xchg
insb
movsl
cmpb
gs
inc
inc
clc
xchg
dec
rorb
mov
popl
ja
fwait
jp
xchg
fwait
cmpsb
cmpsb
mov
shlb
outsb
fs
inc
inc
inc
les
mov
push
mov
cwtl
jno
lock
je
hlt
out
scas
mov
dec
subb
inc
test
addr16
adc
push
mov
jno
inc
cmc
mov
cltd
cmpsb
mov
mov
movsl
xchg
jge
loop
xlat
fwait
mov
les
pop
push
sti
push
jne
outsb
dec
jb
xchg
call
mov
lods
bound
push
inc
dec
push
pop
insb
push
shrl
decl
xchg
jo
jae
xchg
pushf
movsl
lods
shlb
mov
push
inc
inc
inc
dec
inc
jns
in
jle
sahf
cwtl
xchg
stos
ja
jo
mov
mov
jo
push
sub
call
pop
dec
jb
jno
fistps
mov
dec
mov
dec
inc
fwait
insl
dec
adc
jl
xchg
cwtl
xchg
xchg
inc
lcall
orb
mov
stos
mov
inc
inc
inc
js
or
lcall
push
std
cli
cmpsl
mov
cmpsb
lcall
dec
dec
fisubl
sbb
test
ret
loope
and
jno
fcompl
mov
jp
pop
dec
inc
dec
inc
dec
jb
pop
add
je
xchg
rcll
jbe
mov
mov
dec
inc
lcall
pop
rorb
cmpb
pop
mov
mov
nop
xorb
lods
fisubrl
xchg
dec
xchg
movsb
orl
jne
adc
jp
jb
mov
stos
mov
cmpsl
sahf
lea
fs
dec
dec
repnz
loop
cltd
loope
mov
xchg
mov
lods
mov
cmpsb
fwait
clc
pop
dec
dec
push
sub
cwtl
nop
mov
test
xchg
test
or
jnp
push
dec
dec
dec
mov
push
cltd
mov
jbe
je
orl
test
mov
dec
dec
dec
out
xlat
fwait
loopne
xor
dec
jne
test
movsl
cwtl
stos
movsl
xchg
sub
dec
cwtl
dec
dec
push
adc
addr16
xchg
mov
jne,pt
aam
cli
cmc
pop
lds
xchg
nop
mov
dec
mov
pop
addr16
call
cmpb
xchg
and
push
cltd
mov
dec
out
sahf
test
xor
push
inc
cltd
orb
jp
mov
stos
cmpsb
lahf
nop
add
push
push
cwtl
mov
stos
xor
sbbb
js
cwtl
js
sbb
jbe
mov
push
push
dec
cwtl
pop
enter
xchg
xchg
shlb
mov
pusha
cmpsl
lods
stos
xchg
pop
mov
or
lahf
arpl
mov
imul
add
orl
andb
dec
push
pop
loopne
les
sbb
loopne
or
mov
xchg
mov
push
mov
push
add
dec
add
sub
test
push
cwtl
or
jnp
jle
stos
sbb
xchg
pop
mov
fs
test
xchg
hlt
test
movsb
dec
push
js
push
dec
cwtl
lea
cwtl
out
xchg
mov
xor
mov
fiadds
sarl
subb
pop
and
inc
insb
js
sarb
cmpl
test
pusha
cli
aas
dec
sahf
xchg
mov
pop
push
dec
or
ret
in
push
cmp
sbb
dec
orb
rcl
fwait
xchg
test
pop
dec
inc
cmpsb
dec
pop
gs
cltd
hlt
inc
jo
test
outsb
jbe
or
popf
into
lcall
aad
mov
add
je
mov
inc
pusha
dec
inc
dec
insb
xor
mov
pusha
insl
add
notb
inc
dec
mov
call
push
nop
jae
mov
ret
insl
popa
shlb
in
lahf
lahf
mov
jle
std
mov
mov
rclb
pushf
jle
bound
pop
sub
push
loopne
jo
movsb
popf
mov
or
pop
je
fwait
mov
pop
mov
fiadds
in
clc
xchg
mov
sbb
test
cwtl
and
paddd
std
lahf
xchg
test
push
inc
inc
inc
push
pop
imul
cmpsl
shlb
nop
xchg
jno
mov
fs
imul
dec
pop
push
mov
js
sarb
insl
jno
mov
mov
cwtl
or
push
inc
aas
ds
dec
push
gs
or
jge
lods
cmp
cmp
mov
pushf
xchg
jb
push
dec
inc
inc
inc
pop
mov
lret
pushf
lods
scas
lods
cmpsb
cmp
outsl
add
cmp
add
cs
dec
inc
inc
dec
push
pop
insb
jnp
pop
xor
enter
outsb
push
xchg
insl
jo
fdivs
out
test
jo
push
dec
dec
scas
pop
addr16
xchg
mov
int
push
stos
add
js
outsl
jo
ja
xor
cwtl
movsb
sbb
loope
push
cld
dec
dec
push
pop
fs
and
test
movsl
mov
adc
lds
xchg
xchg
xchg
add
imul
push
pop
pop
arpl
sub
mov
xchg
adc
call
jae
gs
pop
pop
pop
fs
jl
xchg
or
lcall
push
xchg
rcr
aam
xchg
arpl
sub
cmp
pop
pushf
jb
add
ret
jne
and
sub
jae
add
imul
xchg
jb
dec
lods
mov
fwait
add
roll
jns
rorl
jne
fisubl
popa
lahf
push
xchg
xchg
add
dec
sbb
mov
ja
jns
and
sbb
xor
mov
pop
clc
das
ret
mov
jle
lcall
jl
mov
adc
xor
test
mov
imul
push
jle
jp
or
push
cmp
bound
xor
out
jb
adc
add
mov
dec
subl
loop
iret
ret
push
add
dec
cmp
cmpsb
test
sbb
pop
inc
test
adc
fs
fistps
xorl
out
inc
mov
mov
mov
jg
arpl
insl
mov
jne
add
xor
jmp
push
enter
or
and
shrl
jnp
sub
push
stos
cmp
xchg
or
adc
mov
or
inc
seto
adc
push
das
inc
xchg
inc
jo
jg
jb
testb
add
movsl
add
out
test
mov
mov
mov
mov
ret
add
xor
cmp
mov
cmp
and
mov
mov
ss
outsl
pop
shll
aaa
and
xchg
xlat
xlat
lret
aad
incl
clc
and
test
mov
mov
cmp
and
mov
cs
in
das
jo
xor
arpl
movl
mov
cs
ret
or
call
popa
sub
dec
int
mov
and
fnstsw
test
rol
mov
shll
sub
jge
fcmovne
mov
ja
nop
test
jge
and
shl
xor
mov
leave
stos
sub
stos
ror
mov
mov
jmp
icebp
mov
mov
mov
mov
fcomp
std
ja
jge
ret
mov
cld
shr
sar
int3
incl
outsl
jb
insl
imul
jo
jo
incb
cld
imul
int3
fdivs
jg
push
mov
mov
sub
jmp
enter
mov
cmp
xor
mov
and
and
fildll
cmp
cld
subl
je
xchg
aas
pop
je
xor
aaa
fdivrs
mov
or
testl
shll
sbb
xor
std
mov
mov
mov
cmp
mov
xor
sbb
movsl
pop
mov
mov
adc
mov
xor
xor
push
mov
cmp
push
push
outsb
mov
push
test
lods
cmpsl
stc
mov
dec
push
lea
stc
xor
int
addr16
sub
sub
cmpsl
arpl
mov
out
div
insb
push
insl
push
mov
xor
out
xor
lds
outsl
push
mov
jns
jo
jb
jne
push
hlt
insb
ss
out
into
jl
push
jg
adcb
movsb
xchg
mov
jmp
loopne
jg
inc
aad
rcl
push
mov
sbb
mov
into
std
sbb
test
aam
inc
sbb
pusha
cld
mov
scas
pop
push
jns
gs
ljmpw
xor
imul
pop
xchg
push
cmp
lock
xor
addr16
and
sub
bnd
outsl
jne
push
daa
cmp
repnz
mov
dec
addb
ss
xor
xor
arpl
das
imul
popa
jae
adc
sub
and
mov
dec
jno
stos
mov
inc
je,pn
je
je
outsb
addr16
aaa
stos
jbe
stos
mov
mov
idivl
fadd
in
aam
leave
int3
shlb
pmulhuw
or
cmp
test
xlat
insl
sti
cmp
not
fbld
rcl
sbb
and
dec
cmp
into
push
repnz
in
cld
enter
addb
mov
shr
xchg
jmp
mov
mov
dec
lea
hlt
mov
mov
push
cwtl
push
mov
lret
adc
loopne
jmp
repz
fisubs
mov
or
mov
out
mov
ror
repnz
into
mov
mov
or
mov
std
ror
rcr
addr16
mov
fldl
pop
add
sti
inc
mov
ret
sbb
lret
lock
das
fmul
in
push
xlat
aam
mov
mov
jne
les
sub
shl
inc
outsl
jo
loopne
lds
ds
sbbl
inc
lret
stc
rcl
and
shrb
xchg
push
xchg
mov
mov
in
sti
xchg
mov
jne
adc
das
pop
dec
adc
xchg
add
push
mov
or
fcmovu
inc
fidivrl
ror
out
insb
and
leave
aam
sbb
mov
out
stc
fidivrl
sbb
add
clc
adc
rcrb
ret
add
and
mov
pop
rcl
stos
mov
lret
imul
pop
shl
shlb
jbe
fmul
aad
sar
add
iret
enter
test
or
pop
stos
push
sahf
jb
mov
jnp
std
iret
in
mov
iret
ljmp
mov
push
xchg
test
adc
jno
pop
dec
adc
fcom
int3
aam
inc
test
leave
iret
shrb
mov
mov
fildl
shll
insb
lret
inc
mov
and
cmpsb
iret
ds
cmp
ds
jg
aad
scas
and
cmp
fs
xor
ja
cld
scas
jmp
je
mov
fs
push
push
aaa
mov
sarb
ds
jno
mov
ss
or
pop
xchg
ss
jns
lcall
and
mov
in
jae
and
jp
xor
jne
testb
fisubrs
sbb
push
shl
lds
inc
jne
arpl
cld
and
push
sti
ss
imul
and
push
fistpl
or
cmp
daa
pop
fidivl
fsubl
cmp
sub
insl
ljmp
push
mov
cmp
and
cs
outsb
jae
popa
loopne
jae
data16
inc
or
std
jmp
int
es
inc
adc
inc
popa
arpl
and
xor
out
add
cmp
fsubs
dec
fs
iret
pushw
or
jb
andb
xchg
iret
inc
test
add
push
inc
jg
in
add
ss
xor
inc
cmp
decl
inc
sbb
inc
xchg
xor
cmp
inc
xor
add
clc
decl
inc
dec
dec
add
xor
xor
inc
inc
inc
inc
inc
gs
and
lock
adc
ret
sub
mov
divb
lret
pop
rol
iret
add
mov
sbb
arpl
jo
cs
xchg
push
push
jmp
mov
and
insb
subb
fisubrl
jno
xor
je
dec
enter
in
jb
add
scas
gs
inc
cmp
or
hlt
mov
hlt
test
mov
push
mov
imul
xchg
pop
push
or
cltd
adc
pop
sbb
xchg
xor
or
or
pop
jge
and
test
loopne
fstpl
roll
and
push
decl
repz
lcall
sbb
mov
popf
adc
xor
and
xchg
adc
inc
arpl
mov
lea
addb
in
out
insl
rorl
jmp
fstps
add
cs
push
push
mov
jns
out
mov
mov
fwait
insl
ja
mov
addr16
push
xchg
push
and
imulb
and
in
mov
sahf
jl
inc
jbe
jge
and
mov
cltd
add
pop
das
aaa
add
aam
rcrl
inc
in
nop
aaa
push
dec
pushl
mov
call
push
pop
ficoml
sbb
mov
cmc
incl
das
adc
inc
cmp
ljmp
inc
push
inc
das
sub
add
add
mov
xchg
loop
sub
add
addb
and
adcb
add
lret
loope
mov
repz
enter
imul
mov
cmp
jno
push
mov
sbb
lret
into
int3
in
mov
add
int
clc
adc
std
jg
pop
mov
push
unpcklps
xchg
jle
add
add
fbstp
and
adc
mov
pop
out
adc
add
mov
fistl
add
add
pop
sub
dec
and
and
mov
or
xchg
sbb
add
xor
inc
and
sbb
xor
or
add
sbbl
sbb
scas
xor
pop
les
fldcw
test
stos
popf
mov
test
loopne
and
jo
in
inc
pusha
xchg
nop
push
pop
pop
inc
mov
mov
push
into
mov
rcrb
adc
mov
loopne
push
mov
add
jge
rolb
sti
mov
shlb
inc
ss
push
jnp
mov
lahf
inc
xor
push
dec
push
add
or
negl
push
mov
outsb
arpl
mov
test
imul
cmpb
ds
addl
mov
cmp
mov
lahf
clc
outsl
sub
into
add
xchg
push
sbb
je
push
in
mov
dec
fidivs
xadd
inc
and
and
push
int
mov
dec
dec
enter
roll
sbb
stc
or
into
loopne
pop
ror
inc
pop
in
and
and
push
out
nop
jbe
leave
cs
adc
sbbb
jo,pn
lret
enter
outsl
sub
mov
inc
jle
enter
add
push
cs
aad
pop
lock
jbe,pn
mov
imulb
cmp
dec
add
sub
jae
mov
push
mov
push
aad
mov
sarl
das
pop
and
xor
push
sub
shr
or
jmp
mov
jne
movsb
or
jmp
xchg
sub
pop
or
xor
loop
jb
shl
push
notl
enter
push
and
add
outsl
push
inc
adc
rcll
sbb
mov
das
pop
and
pop
jns
fidivrl
dec
and
rorb
xor
add
in
push
clc
adc
pusha
sahf
js
or
cwtl
sbb
add
add
jns
cmc
add
add
sbb
pop
insl
add
push
sbb
fisttps
jns
or
add
clc
lcall
stc
mov
aad
loopne
fisttps
push
bnd
add
sbb
push
lock
add
xlat
inc
rorl
pop
lcall
add
outsb
scas
or
cs
das
add
pop
add
or
push
sar
lahf
add
add
or
jno
push
pop
lock
cmp
jo
or
push
push
iret
sgdtl
add
xor
add
jecxz
enter
add
inc
cmp
pop
or
dec
and
loopne
xor
in
subl
in
jns
test
add
jb
jmp
adc
rcrb
dec
or
mov
add
pop
int3
push
es
or
xchg
in
dec
mov
pusha
sbb
mov
shlb
addb
andb
lock
lock
dec
xor
lock
daa
or
jo
adc
mov
nop
adc
mov
shlb
test
adc
push
xor
and
and
nop
add
or
and
repnz
cmpsb
lahf
pop
xor
shlb
das
stos
xchg
or
call
and
add
cmpsl
mov
pop
inc
fbld
out
daa
nop
adc
pusha
and
sub
add
dec
and
add
sub
inc
outsb
or
inc
iret
xor
out
daa
mov
push
daa
or
stos
xor
pop
lock
pop
andb
add
add
mov
and
adc
lds
pop
and
cmp
scas
xor
dec
jo
inc
add
xor
testb
pushl
pop
and
mov
outsl
and
enter
jo
subl
pop
and
adc
or
ljmp
dec
adc
rolb
addb
aad
push
dec
jno
dec
pop
push
or
dec
jb
jg
inc
pop
in
xor
and
out
fwait
lock
mov
add
nop
dec
iret
inc
dec
loopne
jns
scas
inc
dec
nop
inc
test
subb
jmp
subl
dec
jmp
ret
add
dec
outsl
dec
sub
dec
outsl
push
cmp
dec
mov
shll
pop
fsubrs
lods
pop
and
mov
mov
out
iret
scas
inc
add
daa
nop
sub
aaa
xchg
lods
cmp
sub
and
push
out
xor
push
mov
jbe
and
notb
push
add
xlat
es
fwait
int
fsubrs
adcb
pop
outsl
fs
push
xchg
sbbl
cld
xchg
mov
sahf
sbb
negb
cmp
pop
mov
cmp
cltd
push
fcomps
pop
push
shrl
out
jne
les
push
addr16
insb
fcomip
mov
bound
jns
loope
inc
fisubrl
push
shl
add
imul
sbb
xchg
loopne
jle
ljmp
rcrb
sbb
testl
sub
ja
sbb
out
xor
addb
push
jo
sbbb
push
push
xor
lea
pop
mov
add
fidivs
add
add
fs
dec
push
mov
fstpt
outsb
mov
and
out
icebp
imul
sarl
push
ret
mov
mov
insb
jno
loopne
mov
push
pop
subb
cmp
test
mov
push
imul
pop
adc
jo
pop
push
lock
or
push
or
jo
and
imul
bound
inc
mov
jo
aas
ljmp
cs
add
testb
sbb
pusha
lock
cld
cs
repz
and
aam
pop
icebp
nopl
stos
aas
icebp
push
das
push
xor
jo
push
lock
add
dec
adc
add
pusha
push
jb
in
aad
mov
out
xchg
js
adc
out
fs
test
test
in
gs
in
push
cwtl
jmp
push
pusha
xchg
cmp
je
inc
inc
in
push
inc
sahf
jo
add
out
push
mov
push
in
or
je
orb
in
inc
icebp
push
in
push
jg
data16
decl
loope
aas
nop
xor
call
push
xor
cmpb
iret
call
call
iret
movsb
add
xor
add
and
jae
ja
mov
or
add
cmp
mov
add
adc
rorb
dec
add
cltd
jge
lock
add
addb
and
mov
dec
push
push
add
push
lods
dec
outsl
subb
enter
nop
xor
pop
lock
adc
mov
mov
loope
pop
add
insl
xchg
je
add
das
push
add
shrb
pusha
push
pop
das
sbbb
fwait
pop
pop
aas
pop
inc
push
outsb
les
push
push
add
cmp
push
jo
cmp
leave
mov
mov
dec
inc
push
shll
pop
and
into
ss
dec
dec
sub
cs
int
pop
cmpb
cmp
cwtl
pop
rcrl
mov
mov
stc
push
nop
movsl
lock
mov
bound
repz
add
rolb
iret
pusha
mov
add
inc
les
xor
xor
ljmp
pop
rcl
ss
xchg
jl
add
leave
jmp
xor
aaa
mov
adc
pop
sbb
jmp
xchg
add
cmp
jns
loopne
loopne
add
aas
add
jo
lock
push
jg
add
inc
mov
mov
mov
pop
xor
or
std
scas
dec
sbb
decl
dec
in
push
add
pusha
mov
push
in
fistpll
cmp
ds
sbbl
xor
or
sahf
aas
push
adc
dec
sbbb
adc
sbb
pop
arpl
and
orb
and
add
setb
aad
mov
mov
mov
mov
mov
inc
push
orb
cmpsl
add
icebp
add
push
cmpsl
jge
lock
xor
scas
sub
lods
xor
add
scas
addr16
inc
repnz
jo
add
cmpsb
loopne
cmpsl
ret
inc
cmc
push
outsl
cmpb
sub
add
jg
add
pop
xchg
mov
pop
popa
addr16
daa
iret
inc
inc
loopne
inc
leave
leave
mov
inc
mov
dec
pop
dec
dec
cs
cmp
repnz
push
push
push
push
mov
ds
add
fisubrl
loope
aas
das
inc
xchg
out
xchg
inc
xor
xchg
xchg
out
pusha
dec
dec
nop
out
xchg
out
dec
rcrb
xchg
xchg
pop
lock
push
leave
leave
xor
and
push
push
push
jae
leave
jae
pop
mov
adc
cmpb
call
add
stc
popl
xor
cmpsb
and
aas
loopne
mov
push
scas
aas
push
add
cltd
mov
sbb
jno
mov
aas
stos
push
popl
push
fdiv
xor
call
cmp
jbe
cmp
loopne
rcl
mov
jl
pushl
out
cmpsl
dec
aaa
fnstcw
cmpsl
push
lret
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
repnz
call
daa
sarb
sar
mov
and
jnp
scas
inc
loope
test
aas
or
scas
pop
cwtl
out
rclb
scas
cld
push
mov
lock
das
jg
inc
adc
and
pop
pop
pop
adc
mov
aas
shrb
pop
mov
aas
pop
add
xor
bound
sahf
dec
jbe
add
out
loopne
pop
pop
lods
test
dec
nop
dec
xchg
inc
je
or
jg
xor
or
sbb
inc
sbb
lds
mov
mov
jns
cmpxchg
and
addl
das
shlb
in
outsl
push
lahf
pop
add
mov
test
add
dec
test
push
pusha
add
dec
xor
xlat
lret
add
adc
or
push
das
popa
adc
cs
es
loopne
push
pop
xor
das
add
in
add
xor
add
dec
adc
andb
push
mov
loopne
sub
nop
outsb
iret
ret
add
iret
sbb
inc
add
push
das
add
push
and
call
outsb
mov
subb
mov
mov
stos
inc
incb
ucomiss
subb
jp
mov
xor
nop
pushf
sub
xor
call
fisubrs
cmp
or
lock
or
pushf
dec
push
and
dec
mov
dec
subb
nop
push
push
rorb
push
into
es
test
mov
dec
add
or
adc
movsb
add
inc
adc
and
add
sbb
sahf
out
sahf
and
xor
and
xchg
out
js
cmpsb
or
xchg
mov
mov
pushw
cmp
sub
inc
push
nopl
and
repz
cmp
es
daa
cs
cmp
ss
aaa
xchg
repnz
jg
xchg
cmpsl
dec
push
mov
cmpsb
inc
dec
or
aam
aas
std
out
sahf
out
stc
icebp
loope
or
cld
clc
lock
xor
or
inc
lds
push
inc
dec
mov
adc
and
fwait
std
idiv
jae
push
xor
sbb
push
bound
mov
neg
data16
pop
push
sbb
push
and
mov
int
sub
or
ss
xorb
xor
daa
aaa
sbb
or
push
sbb
xor
outsb
push
ss
add
ljmp
cmpb
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
incl
shl
aas
aas
cmp
jmp
jnp
push
loope
pop
stos
mov
test
shlb
or
cmp
add
xor
bswap
aas
incl
dec
mov
jl
inc
mov
dec
mov
in
sbb
and
call
shrl
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
dec
mov
ja
call
adc
sub
jmp
lcall
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
lcall
cmp
shll
or
inc
mov
mov
jle
inc
mov
decl
jge
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
mov
pushl
insl
popf
pop
or
into
testb
cmp
add
decl
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
add
ljmp
xchg
push
test
gs
push
popf
add
mov
mov
jne
daa
inc
pop
sub
repz
aas
sbb
jle
dec
or
or
sahf
pop
enter
xchg
pop
jb
mov
add
int3
mov
outsb
mov
inc
pop
loopne
add
mov
add
movmskps
mov
jg
mov
das
xor
push
mov
xor
push
daa
fimull
rolb
dec
shrb
xor
add
dec
hlt
pop
cs
stos
mov
das
push
out
xor
decl
push
clc
sub
lahf
sub
add
fbld
sub
mov
lds
aas
out
push
gs
cltd
or
pop
adc
mov
or
or
pushf
xchg
xor
jb
pop
mov
nop
flds
xor
and
xchg
jg
setbe
pop
jo
add
dec
adc
adc
sbb
lahf
out
ljmp
rolb
inc
xchg
sahf
mov
adc
sbb
and
pusha
sbb
pop
aas
jg
rolb
clc
jnp
mov
add
cmp
bound
add
idivb
dec
cmp
test
xor
mov
mov
pop
mov
xor
pop
lahf
lahf
imulb
pop
pop
and
dec
ss
cmp
jb,pt
dec
and
sbb
loopne
pop
lods
inc
pop
push
cmovae
je
pop
fs
gs
pop
inc
add
cs
or
in
push
add
or
pop
push
call
out
int3
sub
pop
sbb
cmp
jns
test
scas
rclb
rorl
test
jbe
lods
ds
mov
cld
daa
das
aaa
ucomiss
es
popa
add
in
xchg
pusha
push
sub
and
int
in
jnp
movsb
cmpsl
mov
mov
push
push
xchg
push
jns
addr16
mov
sbb
pop
lahf
out
out
orb
lock
sub
xor
out
mov
call
adc
fs
fisubrs
adc
dec
adc
leave
mov
add
push
jg
sbb
das
push
push
addr16
pop
aas
push
popa
test
jbe
xchg
jg
dec
inc
imul
inc
adc
int3
add
jle
call
jne
push
pop
dec
fwait
pop
push
aas
cmc
push
pop
sahf
outsb
or
push
addb
pop
lahf
imul
es
adc
mov
add
loopne
xchg
imul
mov
rclb
or
xchg
or
inc
sub
ds
xlat
push
popa
push
sbbb
and
jp
test
mov
jns
push
fwait
pop
pop
pushf
out
ds
sarl
dec
xchg
jecxz
sahf
push
dec
repz
pop
ljmp
push
das
cmp
xchg
jl
repz
mov
and
push
adc
sbb
das
dec
js
fcoms
test
repnz
push
lock
cmpxchg
test
dec
ja
mov
add
out
cmpsb
pop
push
fiadds
push
pop
out
mov
mov
pop
loopne
out
pop
add
dec
clc
pop
jg
adc
scas
lock
pushl
add
loopne
jg
inc
insb
mov
les
add
imull
gs
push
push
das
xor
push
xor
dec
sub
lods
movb
fmull
add
lds
add
add
clc
add
sbb
push
repnz
testl
imul
jo
ret
fisubs
xchg
inc
xchg
push
bound
pop
xchg
dec
into
mov
push
sar
push
and
outsb
jae
loop
popw
sbb
inc
insb
addr16
loope
arpl
cmp
push
movnti
fs
pop
frstor
lahf
imul
pop
adc
outsl
jae
or
inc
dec
xor
xor
xor
sub
aaa
and
xchg
pop
cs
pop
xor
pop
push
shufps
in
or
and
sbb
add
pop
jl
pop
cs
sub
iret
mov
pop
cs
add
cmpsb
pop
lcall
adc
insl
adc
imul
nop
out
outsb
push
sub
das
out
push
cmc
push
mov
outsb
inc
in
push
jge
jle
mov
xchg
and
push
inc
jg
out
inc
data16
insb
fs
data16
xor
and
jae
fidivs
add
jb
cmp
dec
inc
dec
inc
jb
and
xor
fistps
sbb
sbb
mov
fldt
gs
and
into
rcr
aam
push
outsb
outsw
inc
inc
inc
fsubrs
sbb
cld
dec
fmuls
sbb
rcrb
iret
adc
dec
std
stos
mov
adc
inc
push
push
lock
mov
insb
jb
pop
inc
dec
addr16
mov
jg
xor
xchg
xlat
jo
jne
push
inc
add
and
stos
leave
dec
xchg
rorl
cmp
pop
add
mov
mov
push
roll
je
push
adc
inc
js
dec
aaa
dec
inc
orb
int
add
sbbl
lret
cwtl
sar
mov
movsb
jle
pop
mov
inc
stos
iret
add
jb
iret
jae
push
jns
call
jne
stc
outsl
lock
jl
mov
push
adc
mov
mov
mov
dec
dec
rorl
push
pop
roll
push
mov
pop
mov
mov
addb
nop
dec
add
andl
mov
mov
fistpll
xor
leave
and
cmpsl
loop
pop
pop
mov
dec
adcl
rorl
enter
or
pop
xchg
ret
mov
pusha
xchg
push
inc
sbb
add
jbe
lahf
pop
pop
addb
and
cld
sub
leave
mov
repz
sahf
decb
push
repnz
dec
mov
xchg
inc
les
das
xor
mov
inc
sahf
enter
sbb
push
jecxz
lahf
xor
sbb
push
xchg
lods
add
clc
data16
data16
negb
push
es
push
iret
jae
cmp
andl
inc
ss
fiadds
dec
sti
cmpsb
xor
push
and
push
inc
add
ficoms
push
push
je
mov
and
lock
sti
push
sub
outsb
addr16
add
cs
je
loop
mov
push
xchg
aaa
js
je
sbb
and
aaa
ds
jo
iret
mov
inc
mov
das
lods
fnstsw
inc
das
outsb
adc
pop
sub
insb
mov
pop
jmp
daa
pop
push
add
dec
and
push
daa
mov
jb
pop
sbb
popa
addr16
lahf
add
pop
loopne
fiadds
test
inc
pop
test
loop
and
jg
xchg
pop
mov
popa
mov
and
push
dec
into
pop
fbld
scas
adc
xchg
addr16
push
cmpsl
inc
mov
shrb
fcomps
inc
das
push
dec
sahf
addr16
add
push
lret
jg
push
iret
fisubl
dec
cs
outsl
push
mov
jnp
loopne
fsubrs
and
out
lds
imulb
nop
stos
mov
clc
outsb
lds
sbb
fyl2x
fadd
pop
or
das
or
push
push
jno
jle
mov
iret
cmp
dec
mov
dec
push
add
faddl
idivb
aad
jle
mov
push
xor
adc
jle
cmp
fcomps
sbb
sbbb
inc
insl
fs
and
pop
mov
into
push
ltr
shlb
and
cmp
out
push
sbb
sub
scas
incl
push
cwtl
or
pop
outsl
ja
bound
push
outsl
cwtl
jae,pn
lret
rcrb
aas
mov
xor
pusha
inc
test
push
cmp
sub
ds
dec
ret
outsb
pop
rcr
enter
mov
adc
mov
mov
fildl
mov
add
out
fimull
ss
sub
mov
jne
jae
mov
dec
or
inc
clc
cmpsb
and
adc
push
jbe
jnp
dec
dec
mov
mov
das
pop
mov
push
arpl
lods
inc
or
lea
pop
jmp
sub
cs
xor
add
ss
cs
cmc
das
pushf
push
sar
das
push
insl
lahf
add
hlt
lcall
jo
pop
fisttpll
test
iret
mov
xor
js
jl
xor
outsb
pop
das
jl
fstps
push
imul
push
insb
push
jnp
xor
add
jmp
add
mov
shrb
popf
and
cmp
push
es
inc
push
ss
scas
je
push
jo
pop
loope
shlb
adc
dec
je
add
inc
out
daa
inc
mov
sahf
cwtl
sbb
mov
push
outsl
xchg
cmpsb
loopne
sbb
adc
sbb
icebp
and
push
mov
pop
aas
mov
mov
sbb
dec
fildll
dec
dec
push
pop
mov
pop
or
aaa
mov
dec
or
pop
mov
push
and
fs
addr16
mov
push
inc
inc
pop
daa
in
pop
fcoms
inc
cmp
pop
outsb
inc
lret
push
andb
adc
lods
push
xchg
cmp
fisubl
lahf
das
dec
inc
ret
ss
mov
jae
add
ja
inc
cmc
ljmp
push
cmp
imul
dec
xor
lea
fsubs
pop
dec
pop
lock
xchg
mov
inc
unpcklps
add
add
loop
xlat
inc
mov
cmp
out
and
adc
add
fs
or
cmpsb
dec
push
inc
inc
adc
sub
shlb
mov
pop
dec
xchg
adc
jne
out
inc
addr16
dec
jne
orb
jmp
xor
inc
fmul
jle
mov
jb
push
inc
into
mov
into
mov
pushf
jae
popl
fcompl
into
ja
inc
push
jne
xor
mov
jae
push
adc
out
add
and
cmp
push
jne
xchg
pop
dec
jo
xorb
pop
dec
fs
in
sarl
insl
push
adc
pop
pop
inc
dec
dec
inc
inc
dec
ret
in
out
clc
pop
dec
inc
inc
push
mov
inc
inc
push
inc
inc
ss
addr16
mov
test
fildl
push
je
jp
push
sbb
lcall
inc
sbb
jbe
dec
inc
and
push
xor
cmp
sub
pusha
mov
and
loopne
rorl
dec
imul
repnz
xchg
jp
in
dec
xlat
jle
and
popa
arpl
out
push
ja
jno
enter
outsl
mov
outsl
xor
lcall
xlat
outsb
mov
arpl
insb
push
mov
inc
xor
cmp
mov
or
xor
out
outsl
jo
mov
lods
push
call
in
arpl
loop
ss
mov
xor
in
ret
scas
inc
aaa
insl
jne
add
test
inc
arpl
das
imul
pop
add
ss
fwait
inc
inc
jb
add
je
pop
push
bound
xor
lahf
and
push
dec
pop
pop
push
cmp
jne
jae
jo
mov
sbb
ret
mov
jne
dec
mov
pop
pushl
aam
inc
sub
and
push
mov
inc
lods
ret
mov
pop
pop
sub
push
add
cmp
xchg
test
cwtl
imul
outsb
mov
popf
mov
insl
sarb
inc
incl
loope
push
xchg
int3
jecxz
lods
mov
inc
in
outsb
mov
jnp
sub
add
decl
xor
xor
fimull
leave
ds
dec
into
ss
jg
sets
inc
cmp
insl
push
pop
jns
xor
data16
es
outsl
fs
push
sub
pop
xor
insb
fs
add
pop
idivl
aas
sub
bound
rolb
gs
test
test
ss
imul
nop
daa
popa
sub
nopl
pusha
mov
addr16
mov
out
sahf
cvttps2pi
mov
xor
mov
daa
jo
jo
add
add
mov
lods
cmp
loopne
es
mov
mov
aaa
jecxz
dec
xor
in
fwait
xchg
push
pushf
mov
js
fs
xchg
popa
testl
mov
fistl
outsl
fs
push
pop
sbb
sbb
push
add
pop
add
push
fadds
add
xor
cmp
ja
es
add
in
push
push
pop
push
and
add
jnp
stc
or
pusha
mov
fcompl
xor
sbb
mov
jne
add
adcb
cmpsl
outsb
subb
jb
mov
call
scas
push
cld
push
dec
iret
in
push
cmp
rolb
inc
push
cmp
addb
outsb
jl
rorl
mov
inc
inc
push
pop
add
inc
adc
adc
xchg
movsb
mov
mov
pop
mov
mov
je
fcoms
jne
faddl
daa
pop
or
adcl
dec
push
mov
je
pushf
pusha
pop
cmp
cmp
pop
cmpsl
int
cld
rep
xor
push
dec
inc
fmuls
dec
fbld
dec
inc
add
andb
jg
dec
sbb
scas
mov
sub
adc
aas
mov
pop
jnp
pop
or
and
in
pop
jb
sbb
dec
das
shlb
leave
jae
clc
add
mov
mov
imul
sbb
repz
js
add
pusha
mov
mov
das
xchg
fsubs
cmp
add
jnp
and
xchg
xor
pusha
mov
pop
jnp
bound
dec
iret
lahf
add
pop
mov
andb
mov
and
loopne
jnp
add
outsb
xchg
lahf
cwtl
clc
dec
jle
loopne
lahf
adc
fsubrl
and
mov
dec
jl
push
fwait
inc
pusha
lahf
xchg
push
inc
jo
aas
cwtl
cmpsl
sub
xchg
lahf
scas
nop
or
loopne
add
outsb
mov
xchg
daa
clc
lahf
sub
jge
cmp
lock
xchg
adc
nop
iret
add
mov
shrl
xchg
daa
dec
lahf
mov
adc
xchg
mov
mov
sbb
pusha
mov
mov
daa
js
nop
lahf
mov
mov
jle
push
xor
xchg
pushf
loopne
loopne
das
sbb
mov
xchg
dec
daa
or
add
mov
mov
sub
enter
psubb
enter
outsb
imul
das
xchg
sub
ja
mov
adc
outsl
dec
sbb
loopne
pusha
js
dec
nop
shl
adc
out
loopne
sub
enter
push
repnz
orb
add
and
enter
pop
enter
dec
cmpl
das
xchg
inc
jne
lahf
mov
bswap
lahf
shl
sub
mov
pop
jb
cmp
sbbb
xchg
and
daa
cmp
pop
jo
mov
xorl
push
xchg
andl
xchg
cmp
pop
adc
daa
xorb
pop
lahf
xchg
nop
adc
mov
enter
lds
pop
jb
jns
test
test
sub
fcoms
add
scas
jnp
repnz
out
mov
out
andb
daa
sbb
jne
dec
loopne
xchg
lahf
cmp
adc
add
test
test
fsubr
mov
inc
daa
pop
lahf
push
addb
lahf
addb
mov
aaa
inc
inc
add
xlat
pop
loopne
shlb
leave
sub
xchg
or
jo
popa
frstor
xchg
jb
dec
test
popf
pusha
js
xchg
daa
and
mov
movups
xchg
in
sub
pop
das
fcomps
push
outsl
frstor
xchg
cwtl
daa
js
outsl
lds
fcomps
xchg
daa
cwtl
das
sbb
jb
sbb
cmpsl
pop
sub
xchg
daa
fcomps
pusha
mov
lahf
mov
mov
clc
mov
ss
jno
ja
enter
fsubrs
add
adc
inc
adc
test
cmp
pop
xlat
dec
daa
and
in
mov
pop
adc
daa
inc
mov
push
pop
lahf
xchg
daa
pop
mov
decl
xchg
mov
lds
js
jb
fdivrl
mov
pop
enter
fcomps
loopne
mov
mov
sub
mov
or
push
fstl
frstor
in
lahf
xchg
repnz
daa
inc
mov
and
cmpsl
xor
bound
int3
js
mov
outsb
and
add
jo
js
adcb
mov
in
frstor
xchg
das
inc
mov
lock
ja
daa
mov
pop
popa
pop
fadds
jo
push
adc
dec
scas
nop
adcb
mov
rclb
clc
pop
sbb
dec
lock
pop
movsb
fildl
jg
xchg
test
mov
mov
iret
pusha
mov
cmp
sbb
cwtl
mov
dec
mov
inc
pop
iret
xor
push
pop
in
or
clc
push
pop
mov
mov
lahf
sub
enter
push
enter
mov
and
push
enter
aas
sbb
dec
xor
iret
add
pusha
outsb
pop
push
test
mov
nop
insl
faddl
pushl
adc
add
nop
rclb
mov
ljmp
adcb
xchg
lahf
pop
ret
leave
in
fisttpl
ss
mov
out
out
dec
scas
nop
addr16
mov
cmp
enter
inc
out
dec
out
sahf
add
in
jns
add
push
lods
test
dec
mov
in
cmp
mov
mov
jbe
jg
dec
or
mov
scas
sti
clts
call
push
add
and
mov
dec
inc
push
pop
dec
bound
jbe
das
arpl
pop
call
mov
scas
sbb
mov
call
enter
add
jmp
dec
or
pop
adc
mov
push
xchg
pop
xor
and
pop
lods
nop
xchg
dec
cwtl
adc
pop
push
push
out
imul
fildll
rorb
dec
scas
nop
nop
lock
mov
pop
and
push
cmpsl
and
fcmovne
repz
add
cmp
inc
ljmp
xchg
and
dec
and
add
fisubs
insb
leave
sub
push
enter
in
push
enter
xchg
adc
jmp
leave
adc
inc
jb
adc
mov
loopne
sub
dec
sarb
pop
mov
jb
mov
pushl
loopne
pop
or
jns
cmp
add
or
inc
fdivrl
iret
add
push
leave
leave
in
popw
pop
sub
xor
test
inc
jg
in
aas
mov
pusha
pop
push
inc
pop
mov
mov
xchg
dec
sar
cs
jo
or
clc
mov
adc
outsl
sbb
jg
adc
dec
add
dec
fdivrl
pop
push
cmpsl
outsw
and
fs
xor
cmp
xchg
push
add
iret
inc
out
push
add
cmp
faddl
ljmp
ds
out
or
and
xorl
jns
out
dec
cvtps2pd
sahf
out
sahf
push
adc
out
xchg
adc
adc
out
mov
out
sahf
fcomps
out
hlt
sbb
sarl
sbb
sbb
repz
sub
ds
lods
mov
dec
punpckhbw
pop
and
add
ret
sub
mov
out
ljmp
sbb
out
out
shr
loopne
in
xchg
out
out
out
cld
out
or
inc
mov
sbb
es
inc
lock
xchg
and
pop
lock
lock
jb
lock
xchg
lock
lock
mov
shl
lock
jb
fdiv
ljmp
sahf
out
adc
sbb
sbb
out
sahf
out
ds
dec
pop
xchg
out
sahf
pop
and
jbe
sbb
jle
das
lock
jg
cmp
rsm
pop
aaa
and
push
push
pop
rorb
add
add
js
sahf
add
fists
mov
pop
jle
mov
jge
test
mov
pop
fdivrs
jle
mov
pushf
aas
jg
shrl
xlat
dec
add
fisttps
bswap
popa
out
adc
iret
and
xor
dec
dec
push
fstpl
outsb
scas
pop
inc
punpckhbw
scas
iret
mov
jb
mov
jb
add
push
test
in
repnz
pop
sahf
ror
repnz
addb
mov
repz
in
xor
mov
lahf
inc
lods
mov
inc
push
push
das
pop
cmova
jmp
repz
repz
repz
and
hlt
outsl
imul
adc
je
jg
decl
sahf
or
outsb
movsl
jns
in
xchg
pop
lods
repz
mov
sahf
out
adc
adc
je
adc
sbbb
xchg
fisttpll
mov
xlat
fldl
hlt
ljmp
push
xchg
ss
and
xchg
addl
inc
dec
hlt
outsl
pushf
pushf
pop
mov
jo
xchg
mov
das
mov
cltd
hlt
movsb
hlt
cmp
mov
mov
adc
call
add
scas
or
cmp
fcmovne
adc
push
das
sub
pop
xor
lahf
daa
push
enter
push
pop
in
daa
daa
arpl
add
cmp
in
out
xchg
push
mov
iret
stos
or
nop
iret
add
mul
pushf
fmull
clc
call
mov
and
sub
add
ds
push
mov
push
pushl
jb
mov
mov
out
xor
jae
scas
outsl
mov
movsl
adc
jg
out
pop
mov
jmp
idiv
pop
add
xchg
pop
and
dec
enter
xchg
pop
and
mov
pusha
aaa
dec
xor
iret
scas
mov
push
enter
ljmp
rcr
cmpsl
jecxz
inc
ds
in
out
das
stc
add
psubb
cltd
in
nop
clc
or
xor
movsb
push
push
icebp
or
mov
mov
or
je
mov
mov
iret
sar
mov
add
cmp
repz
and
sbb
daa
movsl
iret
xor
outsl
nop
or
out
push
adc
je
cs
add
outsl
inc
movsl
aas
in
das
push
stc
sbb
aas
es
in
jmp
xor
out
cmp
add
inc
stc
xchg
sub
popf
nop
movsl
scas
stc
or
outsb
lahf
jae
mov
js
mov
add
iret
das
sub
dec
cs
cli
push
bound
out
sbb
jo
cwtl
or
dec
cli
jg
fsubrl
jo
add
into
adc
fwait
mov
cmpsb
pop
mov
adc
mov
cmp
dec
repnz
xor
iret
mov
push
xor
jno
je
loopne
mov
mov
test
mov
jo
push
push
femms
fucomi
dec
comiss
adc
jo
rorb
mov
scas
call
fisttps
clc
jg
xchg
scas
cwtl
jg
cld
sbb
pushl
test
iret
leave
adc
jb
pop
jo
js
orl
cld
fbld
dec
and
test
outsl
leave
addb
add
xor
leave
and
out
pusha
js
jb
pop
lock
in
inc
inc
jg,pt
xchg
mov
subl
stos
aas
pop
and
aas
sub
mov
push
push
dec
leave
xchg
sbb
stos
jo
in
pushf
dec
test
dec
lahf
xchg
sub
pushf
fsubrs
add
lods
outsl
pop
ror
ror
out
dec
pop
stos
lock
std
decl
in
scas
adc
lcall
pop
movsb
rcrl
jb
dec
imul
iret
fsubs
mov
lods
pop
leave
adc
mov
pop
rolb
test
xor
mov
ljmp
adc
and
sub
cmp
stos
add
cmp
pop
scas
inc
fldl
nop
dec
jo
fwait
lods
nop
pop
mov
iret
xor
mov
scas
packssdw
pop
jbe
cmp
push
add
add
iret
push
lods
pop
mov
repz
into
or
or
cmp
repz
out
or
push
pop
pop
fists
push
adc
out
sbb
adc
out
sahf
out
cmp
inc
adc
push
push
pop
pop
push
jns
jnp
ficomps
push
sbb
sahf
out
cmpsl
push
mov
mov
and
and
and
and
and
and
jmp
or
daa
adc
sub
sub
sub
repz
sub
dec
sub
push
bound
insl
jmp
js
xorl
rorl
pop
mov
cmp
repz
add
jecxz
iret
repz
add
iret
mov
pop
outsl
push
dec
push
pop
pop
sahf
out
lcall
jns
out
xor
aas
or
out
sahf
out
pop
push
imul
ja
test
xchg
adc
out
mov
out
sahf
out
lret
push
fsts
mov
pushl
mov
add
add
loope
and
xor
and
scas
push
dec
mov
cwtl
xchg
aas
sub
cmpsb
outsl
cmp
outsl
ror
pop
mov
pop
dec
pop
loopne
jo
xchg
mov
pop
and
xchg
pop
and
dec
cmpsb
nop
mov
cmp
pusha
rorb
dec
mov
sbb
mov
iret
jnp
dec
das
xor
out
push
add
push
add
repz
add
add
repz
inc
jg
iret
repz
or
arpl
outsb
cmp
repz
jns
test
push
lcall
aas
btc
mov
in
shrl
repnz
lock
std
das
or
dec
adc
jns
out
add
add
or
outsl
mov
in
jbe
mov
push
bound
pushl
push
ret
mov
pop
xor
mov
mov
mov
repnz
jg
pop
or
pop
daa
push
enter
and
dec
outsb
xchg
xchg
cmp
in
in
add
pop
das
shrd
mov
fistpll
mov
jo
daa
push
nop
cwtl
push
int3
sbb
jg
and
dec
decl
imul
rorb
cmp
mov
cmp
cmp
mov
pushf
xchg
sub
pusha
pusha
push
daa
pop
sub
test
in
test
adc
dec
push
mov
aaa
mov
pushf
fwait
pop
into
xchg
xchg
and
inc
push
enter
dec
or
insb
dec
xchg
orb
add
test
mov
daa
daa
enter
outsl
push
enter
dec
push
xchg
or
popf
out
dec
mov
lds
push
fistpll
sbb
shr
iret
call
leave
repz
in
fsts
ja
loopne
test
mov
leave
pop
mov
js
xchg
jecxz
pop
stc
mov
xor
nop
pop
outsb
sbb
repz
pop
aas
mov
inc
pop
xor
mov
mov
inc
fidivs
ret
xchg
ret
outsb
ficompl
fisttps
pusha
mov
sarb
xchg
in
sub
mov
in
lock
clc
lock
sub
es
jne
cmpsl
jne
and
mov
adc
dec
pusha
mov
mov
mov
in
fbstp
das
cmp
mov
dec
push
scas
leave
dec
jg
pop
cmp
sarl
dec
push
pop
ds
vmwrite
fmull
daa
mov
aas
ds
subb
xchg
sub
xchg
sub
xchg
nop
shlb
clc
rolb
mov
jbe
sti
scas
push
pop
cwtl
inc
pop
and
scas
js
or
or
push
enter
imul
enter
pop
es
push
enter
cwtl
leave
adc
mov
outsb
or
jg
xchg
sub
jg
enter
clc
add
fisubl
push
or
repnz
lds
leave
pusha
xchg
leave
in
jbe
decl
enter
push
enter
mov
movsb
or
pushf
xchg
popf
nop/reserved
push
jg
rcll
cmpsl
cmp
leave
pusha
or
mov
jg
push
mov
jns
dec
nop
add
pop
mov
bt
sysret
jns
pop
leave
rol
or
add
add
inc
sub
cwtl
mov
inc
dec
lock
push
imul
out
mov
dec
leave
stos
sbb
push
jne
cmpsb
sbb
loopne
inc
sub
lock
pinsrw
xchg
ja
add
and
das
lret
dec
fcmovu
cmp
scas
inc
pandn
lret
lret
lret
lret
pop
jns
lret
xchg
shld
mov
rorl
lret
lret
lret
iret
paddusw
jmp
stc
setno
adc
sahf
out
push
adc
adc
adc
pop
push
imul
repnz
adc
les
adc
lcall
movsl
into
leave
mov
inc
adc
mov
xchg
outsl
loopne
cwtl
push
pushf
adcb
xadd
das
xlat
outsb
xchg
sub
wrmsr
outsl
clc
pushf
out
pop
and
pop
xor
inc
dec
mov
mov
dec
mov
xchg
pop
mov
es
sar
jbe
leave
adc
cmovb
or
clc
and
cltd
mov
sub
and
pop
fmuls
sahf
pop
pusha
push
and
scas
subb
popf
test
push
loopne
or
xchg
ror
setb
dec
cmc
loope
jg
sahf
add
into
cmpsb
cmp
xor
lahf
adc
jecxz
and
out
adc
cmp
dec
adc
orb
scas
jo
orl
stos
pop
mov
xor
popa
das
mov
scas
dec
or
add
dec
scas
nop
xor
pop
scas
nop
dec
scas
inc
andb
jns
push
test
cmp
pushf
je
mov
mov
adc
enter
inc
fists
lods
nop
leave
dec
push
sub
decl
fstps
test
test
dec
shlb
js
pop
clc
adcb
and
cmp
mov
inc
push
outsl
fdivs
leave
adc
arpl
adc
jg
outsl
shrl
in
lock
loopne
push
incl
iret
push
dec
jno
push
dec
out
push
jb
pop
mov
jo
and
js
nop
nop
leave
adc
mov
pop
jb
mov
mov
jmp
int3
and
or
push
and
andb
pushf
pop
push
dec
mov
xchg
pushf
pop
jl
loopne
xchg
pushf
pop
mov
jo
cmpsb
int3
jecxz
mov
push
dec
add
add
bound
jg
pop
leave
inc
andb
add
inc
push
fldl
and
lock
xor
vpcomd
sub
into
clc
iret
fwait
loope
mov
iret
adc
imul
scas
test
dec
nop
dec
scas
nop
rolb
push
enter
and
push
dec
jl
and
cwtl
push
enter
sarb
int3
in
sub
adc
loopne
sub
xchg
sub
pusha
leave
adc
mov
xor
xchg
mov
rcr
into
adc
fdivrs
fbld
roll
mov
push
aas
pusha
xlat
sub
jbe
das
pop
add
shll
fimull
sub
iret
rcr
in
adc
enter
push
dec
or
sbb
xor
jg
push
adc
adc
call
jg
dec
mov
cwtl
pop
rolb
cs
and
jmp
lods
cmp
jb
or
sbb
xor
in
lahf
or
scas
pop
pusha
roll
add
dec
ja
jae
mov
shrl
shrb
mov
pushf
clc
pop
out
pushf
adc
shlb
adc
xor
pop
je
sub
push
aam
dec
js
pop
jb
cmp
dec
enter
test
sbb
repnz
inc
mov
jb
adc
mov
mov
dec
scas
fnstsw
paddq
inc
call
xlat
jno
pop
sbb
iret
pop
mov
xor
sbb
pop
pop
and
scas
xor
inc
sbb
pop
pusha
xchg
pop
and
xchg
pop
and
adc
xlat
inc
xlat
xor
les
xlat
push
jo
inc
scas
mov
push
sub
mov
mov
rcrb
sbb
clc
cmpsb
nop
xchg
pop
sbb
fsubrs
or
add
inc
scas
cmp
pop
js
sub
mov
pop
and
scas
cwtl
dec
shrb
shlb
dec
cmpsb
nop
dec
push
in
or
add
sbbb
mov
pop
sbb
sbb
scas
call
adc
scas
lods
sub
dec
inc
cs
inc
cs
adc
push
dec
rcr
ficoml
sub
call
pop
xor
fisttpl
inc
or
push
int3
nop
loopne
in
mov
or
or
push
fcoml
leave
and
dec
xor
cmp
push
jg
push
xor
fwait
in
jb
fsubl
test
ror
adc
inc
jo
pop
loopne
ljmp
push
enter
in
add
scas
pusha
sub
xchg
sub
rcr
pop
mov
js
dec
test
fst
xchg
push
daa
push
enter
fdivrp
pop
or
jb
pop
inc
ficoms
notb
pushf
push
add
cmp
loop
pop
xchg
push
ficoms
xchg
inc
xor
fisttps
aas
push
enter
mov
fsubs
call
fstps
mov
loopne
fldcw
cmc
and
fs
idivb
imul
pusha
scas
mov
cli
add
sub
fidivrs
ja
lods
jbe
mov
xchg
js
lahf
mov
idivb
ficomps
sahf
mov
daa
leave
shrb
ljmp
fs
dec
outsb
sbb
add
into
add
insl
add
lahf
or
imul
nop
ret
pop
lret
sbb
xor
push
or
add
xorl
inc
dec
int3
xor
add
es
xchg
adc
outsl
insb
push
mov
pop
add
imul
xor
push
mov
outsl
jbe
or
hlt
fmull
testb
mov
sub
dec
fists
xor
insb
push
outsb
cmpsb
lahf
mov
movsb
push
mov
cmp
add
push
inc
xor
sbb
icebp
add
jmp
in
test
mov
sub
data16
dec
lret
rcll
ret
mov
inc
xchg
scas
inc
js
or
push
arpl
inc
rolb
cs
cmp
dec
ret
pop
stos
xchg
adc
pop
nop
lret
add
xlat
mov
jne
jno
dec
insl
adc
popa
xor
dec
inc
dec
inc
or
push
ss
imul
sub
mov
push
gs
lahf
sbb
testb
popf
ja
pop
xor
jne
push
arpl
mov
loop
cwtl
gs
stc
add
popa
test
ret
stos
add
mov
movsb
xor
test
adc
mov
jb
mov
shll
das
mov
pop
nop
xchg
and
or
les
cli
jno
addb
dec
outsl
xor
cmpsb
and
xor
add
add
push
lahf
stc
mov
subl
pop
mov
xchg
mov
gs
adc
xchg
sbb
lods
bound
add
or
mov
adc
ret
jge
push
and
sbb
push
rcrl
jbe
test
add
or
jp
das
add
or
and
pusha
mov
sub
jae
or
sbb
mov
inc
int3
mov
or
lods
add
add
push
add
cmp
or
bound
jle
mov
add
add
rcrl
out
dec
and
movsl
mov
and
xchg
inc
add
cld
jnp
push
outsl
mov
mov
mov
ds
sbb
add
pusha
mov
xchg
and
xor
repnz
mov
pop
cmp
add
jo
cmp
outsl
pop
mov
pop
lock
imull
push
call
mov
add
push
in
lcall
sbb
or
inc
cmp
loopne
fcompl
pop
xor
mov
sbb
dec
inc
cmpsl
test
shl
inc
jl
xlat
lods
pop
ja
push
mov
test
sub
adc
std
mov
dec
inc
es
lcall
clc
sub
cmpsl
sbb
shrl
dec
test
pop
pop
adc
punpcklbw
addb
add
fs
ja
mov
test
pop
add
xchg
add
rolb
andb
mov
add
ror
pop
mov
pop
and
mov
jb
jae
or
addr16
xor
icebp
push
sbb
das
push
arpl
dec
addb
rcrl
push
sub
fwait
push
es
and
ret
sub
xchg
add
or
jb
and
add
push
iret
jae
add
sbb
pop
dec
pop
jo
cwtl
rcl
popa
push
xchg
les
sbb
dec
stos
cmp
mov
cmpsb
or
inc
pop
mov
andb
sbb
shll
push
push
sub
cltd
pop
xchg
and
iret
mov
popa
push
adc
dec
out
push
and
push
push
fldl
add
add
cmp
mov
and
or
lcall
xor
pop
sti
sbb
adc
adc
add
mov
incl
xchg
pop
inc
xchg
inc
lock
xchg
ficomps
in
dec
sbb
loopne
loopne
jne
leave
ss
sub
popf
cmpsb
adc
xlat
jg
mov
popa
or
out
dec
xor
mov
sbbb
add
sbb
fadd
add
lds
jl
sub
cmp
lcall
pop
mov
orl
jo
push
movl
dec
cli
ret
fistl
push
xor
test
and
imul
add
pop
push
or
adc
jp
pushf
mov
pop
push
aas
pop
mov
addb
loopne
pop
imul
loopw
adc
out
insl
cmp
fidivl
cmpsb
arpl
ds
xor
push
fisttpl
lea
jno
push
inc
mov
movsl
pop
or
lret
test
push
insl
orl
andl
test
ret
addb
inc
mov
jne
insb
insb
test
cmp
pop
sbb
js
and
sub
movsb
outsb
cmpsl
lcall
mov
push
mov
pop
or
mov
loopne
jecxz
popa
ds
repz
rcrl
dec
push
sub
mov
scas
add
ret
insb
xor
je
push
mov
add
mov
fildll
mov
fiadds
xchg
incl
dec
jb
xor
pusha
repnz
pop
inc
push
push
imul
pop
cmpsb
sub
pop
movl
or
dec
pop
je
and
repnz
jl
ljmpw
push
dec
scas
outsl
sbb
mov
cmp
dec
inc
xchg
and
dec
adc
andb
dec
adc
int3
push
out
and
sbb
mov
sub
add
pop
xchg
sub
push
xor
sarb
lret
cmpsb
call
push
xor
inc
imul
or
inc
arpl
lds
aaa
mov
lahf
lret
xor
imul
cmp
jmp
pop
xlat
out
dec
add
and
adc
cmpb
addr16
jns
arpl
and
in
rcl
cmp
dec
mov
and
shll
clc
repz
loopne
lods
push
popa
or
mov
enter
mov
and
cmc
filds
add
cmp
and
inc
inc
add
mov
ret
mov
aas
lds
pop
insl
shll
mov
cmp
mov
inc
out
adc
xchg
jno
roll
push
inc
fwait
add
das
inc
or
je
ror
mov
inc
mov
lret
cli
jge
fidivrl
dec
jne
imul
mov
push
fs
mov
imul
push
add
push
add
add
pop
jnp
bound
jb
pushf
pop
imul
push
lahf
int3
js
fistpll
outsb
jo
mov
xchg
sbb
dec
xorl
daa
jns
push
mov
bound
or
pop
test
aas
rcrl
mov
dec
add
dec
dec
lahf
sbb
adc
cmp
sub
mov
cmp
aaa
movsl
and
imul
dec
inc
jg
push
dec
dec
dec
cs
push
push
ss
and
mov
jo
cmp
sbb
mov
pop
mov
pop
mov
pop
jp
rep
movsb
ret
daa
and
and
push
lds
in
xchg
jbe
jns
mov
mov
push
dec
inc
and
fmull
adc
pusha
xchg
add
or
lahf
xor
push
hlt
addb
xor
pop
fnstenv
and
outsl
sbb
pop
mov
movb
push
xor
add
mov
mov
push
sbb
push
push
xor
mov
cli
les
adc
rcrb
scas
scas
lods
sub
jp
mov
rolb
pop
add
pop
dec
jbe
adc
add
int3
xchg
inc
mov
adc
mov
push
inc
cltd
xchg
movsl
sub
pop
sbb
ret
pop
dec
xchg
mov
inc
aaa
stos
inc
add
push
popa
add
push
add
movsb
jecxz
jb
stos
fisubrl
loope
or
inc
jne
pushw
inc
std
mov
add
sbb
mov
gs
repz
insl
jo
sbb
and
inc
pop
testb
and
sub
pusha
shlb
pop
and
xor
into
cld
jp
inc
xor
xchg
push
add
mov
add
mov
push
jbe
fwait
add
cmpl
movsb
mov
xorl
adc
insb
mov
stc
and
insb
mov
pop
add
mov
add
std
cmp
aaa
add
mov
xor
inc
dec
sbb
push
je
push
cmp
push
popa
pop
sbb
push
or
mov
lret
sbb
add
mov
sahf
add
icebp
push
xchg
xor
pop
aaa
mov
jmp
insl
jnp
ret
sub
push
pcmpgtb
adc
cmp
and
pushf
clc
roll
push
pop
dec
fwait
jnp
xor
movsb
out
xor
push
add
xor
aaa
push
pop
lahf
imul
add
add
arpl
xor
bound
push
mov
in
arpl
rcrb
mov
inc
jg
add
push
sub
sub
dec
pop
sti
and
popa
int3
and
lods
cmp
mov
and
hlt
jmp
and
xorb
arpl
mov
loopne
mov
ret
jae
add
and
shlb
push
push
xor
dec
push
sbb
insl
inc
or
jle
addb
mov
jo
xchg
lods
icebp
inc
jo
jp
scas
mov
adc
fldenv
jns
add
inc
mov
push
push
bound
stc
dec
mov
scas
outsl
mov
out
add
lods
aad
jl
xchg
cli
popf
pop
pop
push
and
nop
movsl
inc
arpl
fwait
test
or
loope
mov
dec
sub
sub
insl
test
loopne
mov
cwtl
push
push
inc
xor
mov
push
je
into
push
pop
aas
jae
adc
inc
sub
dec
inc
jmp
shll
ds
adc
bound
sub
dec
pop
pop
sub
ljmp
int3
and
mov
push
imull
adc
dec
push
add
inc
loopne
ss
cmpsl
std
add
cmp
and
and
sub
nop
loop
test
inc
mov
inc
je
sti
pop
jbe
leave
add
xor
cwtl
je
push
popf
cmp
loopne
popa
sbb
push
daa
xorb
mov
por
jns
imul
mov
adc
cli
pop
in
fistpl
add
je
mov
aas
stos
add
inc
jecxz
xor
loope
jbe
push
dec
enter
dec
into
xor
into
sub
add
adc
jmp
shr
adc
stos
repz
int
fsub
pop
fmuls
divb
mov
sub
cmc
push
inc
mov
gs
push
xchg
pop
fiaddl
stc
and
and
pusha
daa
sbb
cmp
xchg
cwtl
add
jne
and
xchg
mov
push
test
dec
cmp
push
push
dec
popf
je
xor
cmp
inc
push
jmp
mov
scas
cmpsb
jmp
cmp
add
cmp
fwait
sbb
add
das
or
pop
xchg
push
lcall
sbb
pop
or
daa
pop
xchg
sbb
push
arpl
dec
cltd
xchg
leave
jmp
adc
mov
mov
out
add
xor
iret
sti
mov
dec
push
push
jb
cmpsb
fs
mov
adc
sbb
sub
add
and
push
test
cmc
enter
lret
nop
lcall
xchg
fisttpl
mov
nop
lods
xchg
push
inc
fdivr
fistps
add
orb
push
xorb
cmp
push
movsl
insb
xor
divb
xor
jge
lods
movb
pop
mov
inc
dec
pop
insb
mov
repz
xlat
adc
cli
into
or
icebp
push
mov
scas
jg
outsb
mov
jno
push
dec
testb
adc
out
imul
das
stc
xor
dec
jbe
adc
imul
or
push
add
push
pop
or
dec
mov
jle
iret
repz
sub
inc
add
add
or
aam
pop
dec
adc
data16
scas
mov
cmpsl
lcall
fxch
repnz
ficompl
rol
jecxz
mov
lret
cmp
out
inc
into
in
stc
fbstp
data16
fcmovnb
stos
ud0
mov
popw
addr16
lret
ror
ret
loop
aas
dec
jecxz
mov
mov
sti
enter
lret
in
outsl
xchg
sbb
mov
pop
inc
subl
mov
fs
ljmp
lret
push
fldcw
ret
jmp
out
cld
mov
jno
cs
inc
push
xor
mov
aas
adc
pop
test
push
dec
dec
insl
sub
xlat
aas
adc
add
jae
leave
iret
jo
jmp
jg
push
sahf
jo
outsb
add
into
les
jbe
cmc
jge
sub
cld
sub
sub
sub
lock
inc
sub
mov
mov
mov
mov
aam
or
mov
push
movsb
test
in
cmp
in
dec
mov
dec
cmp
es
or
jb
inc
shlb
jmp
lods
jbe
repz
andb
mov
xchg
pop
dec
divb
daa
cmc
pop
pusha
add
dec
rolb
out
aas
dec
outsb
xchg
adc
pop
mov
dec
test
jmp
add
push
or
in
mov
cld
addr16
or
sbb
dec
and
cmp
jmp
or
stos
dec
stc
jg
mov
push
xor
xor
push
and
daa
testl
nop
adcb
add
or
push
lahf
out
add
cmp
and
adc
dec
sub
mov
add
cmp
lcall
push
imul
sub
or
imull
add
inc
dec
pop
and
mov
jmp
mov
test
addl
addr16
decl
push
ret
adc
das
ljmp
add
add
aad
inc
mov
daa
push
outsb
push
add
push
or
and
pop
or
hlt
and
adc
mov
jmp
out
dec
pop
pop
inc
cmpsl
pop
lods
ret
test
pop
in
dec
daa
rolb
ss
stos
ret
or
scas
addr16
rolb
iret
pop
shrb
mov
in
daa
push
jo
out
push
in
daa
test
dec
push
pop
rol
stos
mov
mov
add
sub
mov
stos
pop
add
add
push
jg
bound
push
out
add
mov
aam
es
ja
inc
add
aaa
xchg
adc
sub
shlb
adc
jg
testl
daa
push
pusha
aam
mulb
push
mov
rolb
mov
jg
and
pop
inc
jmp
iret
add
and
xor
mov
add
fadds
bound
dec
imul
lock
ja
roll
sbbb
sub
jmp
add
push
or
xlat
adc
pop
inc
add
mov
fs
test
stos
cmp
add
aam
add
shr
pmaddwd
push
subl
in
push
adc
xlat
mov
bound
jno
inc
inc
ja
das
ret
add
inc
xchg
sti
add
mov
add
sahf
popa
idivl
btc
out
imul
jnp
iret
mov
andnps
or
mov
jns
inc
push
adc
pop
mov
xor
mov
pmulhw
es
add
add
or
idivb
repz
mov
push
jns
push
mov
pcmpgtd
add
icebp
add
cs
imul
xor
and
add
rsm
add
lds
jbe
pop
cltd
add
jae
loope
insb
packuswb
in
pop
xor
push
jg
stos
cwtl
faddl
divl
sbb
ja
daa
adc
xor
dec
and
sbb
xlat
dec
cli
jnp
adc
xchg
pop
add
jg
cld
cmp
jne
lcall
jnp
or
jne
push
jge
loope
push
out
mov
xchg
mov
pop
push
emms
mov
int
repz
inc
jbe
mov
add
daa
data16
jns
jmp
cmp
push
flds
roll
add
push
mov
movsww
add
mov
ror
fmul
ja
jnp
ffree
mov
frstor
pop
or
fsubp
push
orb
xor
fs
sub
push
filds
les
add
inc
sbb
scas
mov
aas
add
inc
lods
adc
nop
adc
scas
cmp
sbb
or
test
les
dec
cmp
add
pusha
sub
push
and
cs
sti
sahf
out
fidivl
push
jne
jae
ja
add
lods
or
and
add
push
push
cli
testb
dec
bound
pop
decl
mov
adc
cmp
push
xor
dec
andb
push
pop
sbb
pop
scas
mov
inc
pop
and
and
add
imul
iret
adc
add
mov
dec
jo
cmovno
outsl
aad
ja
push
add
xor
jg
push
out
dec
lret
stc
int3
loope
test
inc
mov
data16
idiv
bound
iret
shrb
mov
fdivs
add
add
mov
sub
mov
mov
ja
mov
lret
mov
and
xchg
fcoms
push
or
lret
not
outsb
push
lock
mov
mov
ror
mov
jle
hlt
in
mov
into
pop
mov
mov
mov
sub
fdivl
scas
pop
jle
into
or
fwait
aas
dec
xlat
rcl
out
mov
out
jae
mov
mov
fsubs
aad
pop
scas
mov
rcrl
mov
mov
orl
aas
sbb
and
add
mov
repz
iret
mov
aad
addr16
into
cs
pop
xor
movsl
fiadds
fadd
in
and
jbe
ret
cwtl
mov
xor
das
inc
shll
jbe
stos
xor
shlb
and
aaa
mov
mov
or
sbb
and
outsb
jp
push
data16
ret
shr
sub
dec
out
callw
or
inc
inc
dec
push
sahf
mov
xor
xor
dec
or
in
pop
cs
push
inc
jne
adc
dec
xor
fcomps
or
sub
lar
add
pop
arpl
add
pop
out
sub
cmp
push
and
push
push
dec
inc
pop
pop
shrl
inc
aam
inc
mov
mov
sub
sahf
add
sub
add
cmp
in
mov
daa
xchg
fildl
repnz
invd
loopne
ja
fmul
jmp
mov
jne
fs
into
fidivs
lahf
mov
mov
or
or
jo
es
popf
cmp
leave
rcrb
imul
hlt
mov
inc
loope
cmp
lret
fmul
mov
sarb
insb
faddp
jp
and
sub
add
pop
pop
sub
push
mov
daa
clc
sbb
es
and
mov
fbld
shll
or
mov
dec
icebp
sbb
inc
add
dec
cmp
add
push
and
or
adc
enter
pusha
or
dec
inc
dec
dec
add
sti
test
hlt
cltd
add
sar
mov
and
gs
adc
mov
sbb
mov
dec
loopne
ret
push
jbe
mov
mov
mov
das
int3
call
stos
mov
jg
test
movsb
mov
nop
adc
jge
outsb
and
and
push
stos
push
xchg
aas
daa
inc
enter
pop
pop
push
inc
add
cmp
pusha
daa
out
push
add
stc
scas
nop
and
aas
jg
sti
mov
test
aas
and
mov
mov
aas
decl
sbb
ss
push
aas
fwait
das
stos
push
adc
iret
das
pop
clc
ret
pusha
or
outsl
pop
mov
mov
ss
idivl
sti
insl
inc
and
xor
or
sbb
mov
insb
jnp
arpl
push
push
pop
push
or
adc
push
xor
add
int3
dec
xchg
push
out
add
mov
sbb
adc
out
push
xor
inc
push
push
or
fwait
mov
pop
and
sub
push
and
ud0
sub
xor
gs
ljmp
sbb
addr16
loopne
adc
sub
mov
push
cli
jns
sub
std
fwait
adc
or
fbld
hlt
push
mov
mov
imul
fiadds
sbb
testl
and
mov
mov
test
data16
pop
dec
mov
push
jb
xor
int
push
inc
cmp
pop
cmp
ljmp
mov
loopne
add
outsl
push
cmc
dec
mov
cwtl
pop
and
out
inc
popa
cltd
rcr
and
sbb
bound
in
pusha
fwait
cltd
scas
sub
pop
and
shll
add
cmp
int3
repz
or
add
pop
jno
test
or
outsl
push
mov
pop
cmp
loop
ret
xlat
push
gs
negb
dec
das
mov
fidivrs
ja
mov
das
pop
repz
outsb
mov
repz
jecxz
cmp
or
and
push
pop
push
int
pop
data16
add
pushf
cltd
cmp
or
in
pop
pushaw
and
inc
pop
push
jnp
jo
mov
xchg
and
scas
mov
pop
outsl
xor
cmpsl
fadds
mov
push
xlat
es
xor
inc
lret
cmp
stos
pop
jp
mov
pop
movsb
pop
and
push
push
outsb
lahf
push
push
lcall
fwait
add
rolb
lock
cmpb
popf
push
jo
mov
ret
sbb
nopl
insb
mov
add
add
out
sahf
out
mov
jns
addl
mov
fimuls
xor
push
mov
mov
aad
push
mov
sbb
in
movb
repz
add
add
xor
xor
sub
repz
or
or
and
repz
sbb
sbb
adc
adc
or
repz
adc
adc
add
cld
cltd
adc
adc
hlt
push
lock
in
out
sahf
out
call
out
sahf
loopne
fcompl
sbb
aam
rcrb
int3
out
sahf
out
enter
sahf
out
sahf
shlb
and
and
lods
movsb
daa
mov
sub
jns
xchg
sub
sahf
out
mov
test
and
sahf
out
jl
js
sahf
out
sahf
je
jo
insb
xor
push
or
cmp
addr16
imul
sub
inc
lcall
cmpsb
adc
pop
or
add
or
pop
add
add
adc
mov
in
imul
gs
outsl
push
fstps
and
jmp
pop
sbb
sbb
sub
and
sub
xor
sub
sub
and
or
loopne
and
imul
jp
outsl
sbb
loope
sbb
sbb
and
sahf
add
sbb
and
fwait
adc
add
add
rorl
push
sbb
sbb
orb
addb
out
and
sbb
orb
wbinvd
or
mov
and
pop
sbb
or
push
or
sub
orb
sub
cmp
mov
fiaddl
in
and
adcb
push
adc
aaa
add
adc
in
jge
sbb
addb
sbb
insl
arpl
es
push
and
ret
mov
push
adcb
sbb
sbb
sbb
sbb
fidivrs
sbb
sbb
sbb
sbb
mov
add
adc
add
sbb
stc
mov
inc
sbb
and
and
add
insb
fidivl
add
pop
sub
xor
and
aaa
mov
sub
sub
push
sub
and
and
daa
push
and
sub
push
xor
sub
daa
pop
sbb
nop
pop
sti
in
xor
xor
add
jp
subb
add
jmp
jbe
sub
das
pop
sbb
pop
jae
sbb
and
push
sbb
dec
enter
xor
fsubs
mov
sbbb
imul
sub
xor
ds
pop
imul
add
or
aaa
cmpb
imul
adc
add
adc
mov
fstps
cmp
add
sub
add
cmp
addb
add
inc
orb
sub
in
inc
pop
pop
lret
jb
add
and
inc
or
dec
out
adc
sbb
pop
out
push
jb
inc
adcb
inc
insb
stos
fnsave
add
mov
add
or
sbb
cmp
add
sbb
popa
filds
dec
orb
add
dec
repnz
pop
add
xchg
sbb
pop
sub
aaa
push
sbbb
add
sub
push
or
and
sbb
fbstp
add
leave
repz
sbb
mov
and
push
push
push
push
pop
mov
daa
add
and
pop
add
pusha
insl
inc
push
sub
sbb
in
pop
adcb
pop
cmpsb
mov
pop
xor
pop
adc
pop
push
sub
pusha
test
sub
popa
push
add
in
inc
jb
bound
insl
pop
xor
fs
xor
rcl
push
adcb
add
pop
xor
push
roll
imul
gs
ss
insb
orb
rcrb
mov
and
repz
xchg
cld
outsl
adcb
pshufw
insl
jnp
jae
je
sub
das
in
lret
rorb
sbbb
js
jns
imul
outsl
add
jp
daa
add
pusha
stos
adc
das
add
aaa
subb
pop
xor
xor
jge
movd
add
testl
leave
mov
sbb
orl
sbb
sbb
sbb
outsl
pop
sti
addb
add
xchg
jb
imul
add
leave
and
sub
mov
orb
xor
fildll
mov
add
and
sbb
push
lods
jne
lea
sbb
sbb
rorl
jb
mov
xchg
or
fidivl
mov
add
add
jb
jl
xor
sub
mov
enter
adcb
fsubrs
add
daa
push
xchg
mov
add
sub
sbbb
push
cltd
sbb
sub
and
xor
lcall
jnp
fwait
orb
addb
add
imul
add
data16
in
mov
orb
cmp
dec
imul
mov
outsb
lods
jb
movsb
sbb
movsl
repnz
cmpsl
mov
adc
pop
sti
dec
test
das
xor
cs
and
jbe
stos
lods
push
add
aaa
ds
rolb
or
scas
subb
or
or
mov
sbb
sbb
sbb
imul
and
add
or
or
mov
sub
outsb
pop
and
sub
add
or
in
daa
sub
mov
ja
add
or
push
loop
add
add
add
add
test
mov
cmpb
and
sbb
dec
and
mov
jns
outsb
add
das
xor
xchg
or
mov
add
mov
rcrl
add
ret
adcb
repnz
jbe
add
movb
enter
ja
sbb
or
fmulp
aaa
xor
sub
orb
into
mov
movsl
sub
and
out
roll
sbbb
roll
xor
adc
add
jns
nop
daa
es
jb
fidivl
xorb
sub
lods
or
xor
xor
fsts
xor
adc
in
xchg
sbb
sbb
pop
push
bnd
sbb
adc
sbb
aaa
sub
aaa
fiaddl
sbb
orb
jg
jb
add
sbb
fdivl
and
sbbb
add
or
sbb
fistps
nop
and
sbb
sbb
and
mov
add
adc
and
fsubs
mov
sbb
ja
mov
in
in
pop
ss
orb
shr
out
call
mov
jmp
sbb
jbe
in
andb
sub
fidivl
mov
sub
push
sub
sub
sub
sti
ficompl
add
add
xor
dec
dec
cs
sbb
ja
orb
add
mov
add
and
and
adc
sbb
cmpsb
or
sbb
stc
pop
sbb
in
out
les
cli
orb
or
add
pop
enter
cs
in
xchg
daa
sub
nop
xchg
and
sbb
or
std
xor
xor
sbb
pop
and
sbb
add
sbbl
jb
xchg
mov
sbb
and
push
rcr
ss
add
imul
orl
adc
or
xor
outsb
pop
jnp
or
or
push
mov
and
fsubr
mov
sub
adc
cmp
mov
pop
das
add
addl
leave
add
jbe
adc
cs
in
mov
aaa
push
pop
aaa
or
add
or
sub
xor
jb
lods
push
xor
sbb
add
and
sbb
cmp
mov
cmpsl
and
add
mov
pop
ss
dec
mov
mov
xor
xchg
jl
pop
daa
and
sub
add
and
add
xchg
add
or
outsl
sub
xchg
mov
xor
xor
sub
sbb
sbb
in
add
subl
sbb
fisubrl
and
and
and
pop
adc
fidivs
subl
xor
xor
imul
sbb
sbb
xor
add
leave
adc
sbb
mov
xor
pop
push
cmp
sbb
xor
mov
add
sub
aaa
inc
popf
jbe
add
add
addl
in
sbb
aaa
xchg
jbe
cmp
mov
add
add
and
addl
inc
inc
cmpsb
add
out
insb
bound
sub
inc
orl
out
ss
orl
notl
xor
adc
aaa
pop
aaa
or
hlt
pop
add
test
add
orl
lea
jg
add
xor
imul
scas
or
outsb
dec
dec
popa
fbld
adc
adcl
adc
sbb
xor
add
and
add
xor
xchg
push
push
push
push
or
and
fimull
sub
push
jb
pop
pop
mov
test
or
sbb
push
aaa
adc
mov
lcall
sbbb
or
or
pop
mov
or
dec
or
mov
sarb
sbb
or
add
movntps
sub
iret
or
int3
or
inc
cs
mov
add
dec
addl
xor
or
pop
and
loopne
fwait
pop
rcrb
adc
push
push
stos
or
sbb
or
xor
add
jp,pn
sub
sbb
xor
adc
ret
push
fidivl
push
sub
mov
loopne
adc
ret
add
adc
add
stos
or
mov
mov
push
andb
push
repnz
adc
loopne
push
daa
push
das
add
sbb
imul
andb
mov
mov
and
outsb
push
orl
adc
xor
mov
adc
push
xor
xchg
imulb
popa
adc
out
and
inc
push
adc
hlt
xchg
incb
xchg
test
sbb
bound
inc
into
pop
ljmp
lcall
push
fisttpl
xchg
adc
into
or
mov
sub
out
push
and
push
push
sbb
fiadds
sbb
push
sbb
es
cs
inc
or
adc
stos
aaa
jp
das
push
pop
mov
sub
xor
jp
pop
pop
pop
or
adc
cmp
sub
mov
js
popa
adc
into
push
sub
sbb
insb
add
scas
add
mov
sbb
sbb
in
das
adc
dec
pop
rorl
adc
and
sub
sahf
add
bound
pop
mov
cmpsb
push
mov
push
sbbl
icebp
sub
sub
and
pop
addl
and
inc
or
pop
orl
add
xor
ficoml
jbe
sbb
adc
mov
sbb
cmp
sbb
pop
or
cmpsb
sbb
pop
pop
push
ljmp
mov
cmpsl
ret
sbb
cmp
sub
adc
and
mov
into
pop
push
pop
sub
ds
sbbl
adc
adc
xor
cmpb
and
mov
repnz
jp
mov
and
scas
adc
mov
orb
sub
and
mov
mov
andl
push
bound
adc
or
sub
ljmp
push
jbe
arpl
xchg
in
sub
sahf
ds
ds
pop
or
out
fiadds
push
enter
repnz
push
and
cs
gs
test
sub
andl
out
xor
jle
cmp
cwtl
shlb
and
xchg
or
push
push
test
push
sbb
mov
pop
xor
es
mov
mov
outsl
lret
add
push
shll
pop
cli
adc
rcrb
es
mov
add
add
dec
sub
sbb
or
or
mov
ret
adc
xor
mov
out
subl
ds
rol
sub
es
roll
xchg
mov
cmpsb
xchg
sub
sbb
scas
push
ficompl
mov
push
dec
cs
incl
aad
sub
mov
insl
orl
add
push
pop
or
scas
sbb
subl
pop
cmp
std
xor
pop
sbb
or
push
add
push
dec
das
mov
sub
jb
js
add
mov
sub
sub
sub
adc
mov
add
pusha
stos
sbb
shrb
mulb
and
sub
sbb
jno
sub
inc
adcl
mov
push
and
ljmp
pop
je
and
fisubrs
adc
xor
daa
or
or
pusha
xchg
push
jbe
sbb
inc
add
pop
xor
rcrl
push
jbe
or
push
cs
movb
jo
dec
push
mov
inc
lods
pop
push
add
fimull
sbb
dec
rcrb
and
ficoml
add
bound
and
xchg
imul
loop
cs
add
push
push
or
lcall
jp
jle
mov
mov
push
and
out
ss
fidivrs
or
ds
lcall
or
xchg
xorl
rolb
jle
negb
pop
bound
mov
and
adc
add
or
jmp
or
mov
lods
in
shll
jg
and
xchg
inc
push
divb
divb
xor
bound
add
mov
xchg
add
sub
xlat
addb
test
bound
push
sub
push
push
test
subb
pop
or
ret
xchg
push
push
or
lea
lret
xchg
xchg
or
push
sub
or
xchg
ljmp
mov
sbb
add
xor
loop
mov
add
scas
mov
andl
sbb
xorb
push
and
mov
sub
or
insb
push
xchg
cmp
push
pop
and
sub
mov
outsb
out
or
pusha
and
adc
dec
es
sub
mov
xor
out
or
cmp
pushf
cltd
inc
sub
lret
mov
cmp
add
ljmp
sbb
sbb
xor
adc
xchg
and
fadds
add
mov
repnz
mov
aas
fiaddl
mov
inc
ss
inc
gs
mov
mov
inc
cs
push
sbb
mov
ds
sbb
fimull
push
adc
dec
and
sbb
cmpsb
mov
push
jmp
shrl
mov
mov
sub
rolb
xchg
jecxz
xchg
mov
sbb
pop
pop
rorb
pop
lea
orb
push
add
mov
mov
cmp
outsb
or
inc
scas
or
fimull
xlat
ss
adc
scas
cmp
inc
mov
xor
push
or
xor
and
add
sub
cmpl
push
data16
dec
gs
xchg
jbe
or
out
fimull
addr16
jb
iret
add
dec
das
cmp
adc
ljmp
test
xchg
xor
adc
dec
push
mov
mov
outsb
push
dec
bnd
pusha
cs
rcr
adc
add
sub
xchg
scas
xchg
adc
push
cli
and
add
rcl
and
sbb
cmp
out
stos
mov
sub
adc
mov
mov
push
rolb
daa
jp
add
ss
adc
cwtl
negb
inc
pusha
pusha
jle
mov
fldenv
pop
sub
sub
pop
cwtl
mov
mov
push
lcall
push
cwtl
dec
dec
cmpsb
pop
sbb
loopne
push
xchg
sub
stos
lea
add
loop
rorl
fiadds
or
sbb
rcll
push
mov
sti
sbb
mov
push
rcll
outsb
adc
prefetch
jo
es
into
jbe
add
push
bnd
lcall
clc
jmp
push
push
add
cwtl
inc
push
pushl
lcall
mov
and
sbb
sbb
lods
push
cltd
lret
and
mov
pop
jbe
pusha
je,pn
or
inc
and
push
jbe
or
mov
subb
daa
scas
sar
mov
bound
xchg
and
imul
or
data16
or
inc
jnp
add
xor
adc
push
adc
pop
test
repnz
pop
push
xor
sahf
cltd
test
ds
fidivs
xor
pushf
mov
mov
shl
into
push
dec
popf
mull
bound
ds
add
rolb
es
or
aaa
fisubs
sub
dec
stos
xchg
sahf
pop
xchg
shlb
jo
sbb
into
mov
push
mov
jb
sub
negb
xor
sub
sub
adc
adc
and
jbe
jbe
push
fcomps
adc
mov
xor
adc
pop
add
sbb
sti
loopne
push
push
push
mov
mov
insl
inc
mov
add
or
sub
dec
or
and
xchg
or
push
xor
xchg
or
xchg
cs
mov
mov
and
outsb
out
jecxz
dec
xor
xorb
push
add
cs
lret
adc
repnz
push
shll
push
sbb
add
mov
or
lcall
and
xor
sbb
jp
xchg
les
dec
ret
test
mov
cmpsb
andl
lret
push
dec
sahf
ret
outsb
ds
test
bound
sbb
or
push
adc
add
or
mov
push
and
scas
xor
add
or
mov
adc
stos
and
je
add
inc
ret
mov
fisubl
into
add
adc
or
fs
push
lods
adcl
push
in
xor
push
stos
ljmp
fwait
data16
pop
mov
aam
jbe
adc
dec
or
cmp
rolb
mov
stos
mov
push
mov
inc
xor
push
or
adc
add
cltd
sbb
lcall
adc
and
sub
dec
and
xor
mov
jle
fiaddl
sbb
adc
ss
or
sbb
test
ljmp
sbb
dec
mov
cmp
dec
and
or
sbb
pop
sub
jae
or
gs
addl
sub
dec
out
ficoml
push
jo
in
add
xor
sbb
dec
add
repnz
shlb
sbbl
push
ret
test
push
jle
sbbl
cmpb
mov
and
sub
xorl
mov
push
mov
jge
mov
shl
inc
mov
push
sub
sub
xor
jmp
jbe
push
inc
add
cmpsb
out
stos
sub
pop
sbb
adc
aam
add
or
sub
sub
sbb
add
adcb
or
cmp
jbe
sub
add
push
mov
lcall
js
ds
xchg
or
rclb
sahf
incb
mov
cli
mov
mov
jecxz
adc
push
or
add
or
mov
cmp
mov
les
mov
xchg
out
outsb
sub
xchg
or
push
push
sbb
lds
sbb
xor
or
cmpsl
add
jle
xor
xchg
push
pop
mov
sbb
xlat
sub
pushw
aad
cmp
adc
addl
mov
int3
jge
mov
and
ss
pop
mov
subl
inc
xor
push
xor
push
xchg
fidivs
mov
xchg
pop
repnz
xor
stos
stos
sub
mov
aad
mov
bound
and
pop
mov
xor
mov
or
out
or
push
or
sbb
and
push
ret
sahf
sbb
mov
adc
mov
push
add
dec
xchg
bound
loopne
stos
sbbl
cmp
sbb
pop
fisubl
pushf
add
lret
xor
or
lods
test
cli
xor
sub
add
es
into
cltd
inc
mov
push
xor
pop
dec
shll
cli
xchg
faddp
push
mov
xchg
and
or
pop
push
sbb
push
enter
or
or
jp
mov
sbb
push
add
xchg
in
outsb
sub
push
add
add
and
cwtl
inc
and
mov
pop
push
push
xor
xchg
pop
int
or
les
pop
xorb
cmpsb
and
add
rorl
pusha
cli
sbb
mov
fisubrs
jbe
ret
sbb
push
xor
es
sub
stos
loop
add
push
or
ss
push
xor
push
sub
or
and
or
sbb
dec
or
dec
and
xor
and
das
dec
fisubl
jp
in
loop
sub
sbb
push
es
ret
push
iret
push
inc
add
xchg
sub
repnz
rolb
shlb
push
and
cltd
sub
push
pop
xchg
add
je
push
add
adc
rorb
nop
inc
jb
mov
sbb
adc
adc
inc
sub
mov
jle
pop
ss
fwait
add
sub
jle
jbe
test
cli
adc
or
inc
cmp
andb
leave
sbbl
test
mov
push
add
and
sub
push
xor
sahf
push
sub
pusha
sub
cmp
repnz
add
sub
sbbb
and
lcall
mov
add
jle
mov
add
iret
lret
or
push
sbb
call
jbe
adc
xchg
or
push
cmp
cmp
push
rclb
push
cmpsb
adc
xchg
push
or
std
fisubrl
sbb
jp
push
ret
ds
adc
and
and
jbe
pop
push
lret
aaa
roll
sub
adc
lret
shlb
mov
push
pop
inc
sbb
jp
stos
ret
xor
mov
mov
cmp
sbb
sahf
or
pop
push
cwtl
push
cmp
mov
daa
outsb
repnz
add
sbb
push
roll
es
adc
movsb
push
lcall
cmpsb
dec
dec
out
test
push
mov
add
lret
xor
push
jg
and
adc
and
sbb
not
pusha
and
inc
jp
push
or
xor
mov
inc
insl
and
into
pop
add
inc
das
sub
les
cltd
push
pop
cmpsb
out
push
popa
mov
fiaddl
adcl
arpl
scas
mov
popa
and
dec
and
cmp
cli
andb
dec
push
push
and
out
sub
push
cli
sub
sub
sbb
sbbb
pop
push
and
or
jmp
jbe
sbb
fiaddl
xchg
sbb
push
push
rcrb
xor
push
data16
inc
sub
xor
out
dec
dec
sub
adc
das
mov
lcall
sub
sub
and
adc
bound
push
ret
pusha
cwtl
or
or
and
xchg
mov
pop
js
cmpsb
ss
push
loopne
or
push
pop
cmpb
dec
cwtl
cmp
sbbl
sbb
loope
xchg
sub
fidivs
adc
repz
repnz
push
outsb
adc
adc
push
inc
pop
cld
inc
adc
push
xor
ret
adcb
loope
adcb
jmp
sbb
popa
cmpsb
xchg
push
jle
jb
sarb
xor
daa
xor
add
xchg
into
shrb
sbb
add
ljmp
and
movsb
push
add
sub
aaa
push
xchg
push
xchg
adc
jb
das
fiaddl
std
rcrl
or
or
ficompl
mov
push
push
sub
fildl
pop
add
add
xor
lods
xor
sahf
mov
sahf
bound
hlt
jb
jmp
push
inc
and
inc
loop
outsb
mov
sub
and
inc
scas
mov
push
mov
frstor
inc
and
or
pop
add
scas
sbb
add
dec
and
rcl
shlb
add
adc
push
and
lods
mov
xchg
adc
out
lret
in
stos
ficompl
pusha
sbb
adc
adcl
sub
or
cmpsl
add
or
out
push
lock
adc
add
push
sbb
mov
dec
movsl
popf
jle
and
xchg
mov
and
mov
jb
es
jle
out
add
mov
ret
sub
push
subb
push
xadd
out
sub
pusha
sbb
pop
mov
xor
outsb
xor
shlb
or
push
inc
push
dec
sbbb
sbb
cltd
add
sahf
mov
jb
jae
jno
out
push
adc
push
pop
inc
xchg
lret
and
sub
add
push
add
lods
or
ds
pop
ss
mov
cltd
loopne
out
add
out
or
out
negb
inc
in
cmc
add
cs
ss
pop
adc
mov
push
add
sbb
or
add
cs
mov
movsl
or
push
push
fidivl
or
pusha
fsubl
faddp
cltd
or
and
int
or
add
push
shlb
out
sbb
inc
sbb
dec
ror
ljmp
inc
arpl
out
out
sbb
or
out
xchg
out
je
add
and
addr16
cmpsb
push
fadds
out
push
or
push
or
out
jo
test
push
in
push
and
int3
cmp
or
sbb
movsl
jno
popa
lret
mov
cli
or
cmp
loop
aaa
push
or
sarb
or
cmp
pop
or
inc
or
and
pop
mov
cs
inc
iret
orb
sbb
sbb
rorb
aaa
iret
stos
inc
lahf
leave
mov
add
and
mov
xchg
and
cs
and
aam
daa
or
mov
scas
push
xchg
fisubrl
or
add
inc
rorb
sahf
push
mov
xor
and
rorb
ja
xor
push
bound
or
and
or
outsl
fdivl
cmp
or
pop
repnz
loopne
sub
cs
xchg
xchg
in
and
sub
or
das
or
aaa
and
jne
or
jae
dec
out
or
or
or
xor
lcall
ja
dec
mov
repnz
or
bound
push
stos
pop
idivl
or
pop
or
xchg
jnp
xor
cmpsl
jp
inc
or
outsb
or
and
push
sahf
or
or
or
adc
out
out
ficoml
mov
sbb
push
mov
or
xor
and
fldpi
shlb
or
and
cmp
push
or
addr16
mov
xor
mov
push
or
or
dec
test
cs
and
and
mov
mov
or
sub
and
sbb
or
or
jle
out
jae
adc
and
and
pop
and
jno
and
xchg
testb
mov
test
or
xlat
dec
dec
pop
or
aaa
or
cs
gs
loop
adc
arpl
ss
das
daa
mov
add
jno
mov
bound
scas
inc
ret
or
mov
xchg
out
aaa
imul
js
mov
or
adc
cmp
arpl
pop
push
or
scas
pop
lea
or
mov
add
addl
sahf
aaa
call
movsl
push
or
mov
loop
adc
and
inc
daa
add
inc
add
or
mov
into
lods
outsb
or
add
test
push
push
stc
xor
adc
add
lret
xlat
fnstcw
adc
outsl
push
jg
aaa
add
sbb
adc
ljmp
jb
adc
or
dec
nop
xchg
inc
xchg
xor
cmp
sub
or
push
jl
loop
or
push
dec
or
add
cmp
pop
or
xchg
or
popa
in
mov
xchg
ficoml
lret
or
inc
aaa
mov
xchg
lret
sub
outsl
cs
loope
pop
daa
push
pop
and
inc
add
cmpsl
and
adc
sbb
je
sti
push
push
das
add
loopne
inc
sahf
push
add
mov
out
cmp
cmp
pop
ja
mov
xor
add
data16
push
pop
ss
inc
addr16
or
out
push
or
and
fists
int3
sarl
adc
and
sahf
stos
in
or
push
and
fcmovbe
sub
push
mov
inc
jbe
into
and
sub
sub
adc
cmp
orb
out
jbe
adc
bound
add
add
les
push
addr16
or
push
aaa
ret
jbe
push
lcall
mov
adc
dec
mov
adc
cmpsb
inc
and
xchg
dec
out
push
aam
sub
xchg
cs
pusha
and
sbb
inc
push
rorb
sbb
js
insl
pop
or
cmp
push
out
je
out
xor
pop
ret
add
mov
inc
add
pop
push
dec
pushf
mov
loop
mov
push
push
sub
inc
ret
rcrb
adc
mov
pop
shlb
xchg
sbb
pop
call
and
adc
js
addl
push
sub
sbb
or
int3
jo
push
sbb
jp
add
mov
pop
xchg
out
andb
test
adc
loop
push
mov
addr16
popa
push
out
dec
stos
rcll
push
and
add
or
fbld
aam
je
jbe
add
cmp
es
ja
sub
cmp
or
or
aaa
jmp
add
ret
pop
pusha
adc
add
inc
cmp
xchg
add
icebp
push
ret
rolb
sbb
fildll
xchg
enter
cmp
xlat
loop
cmp
and
lcall
sbb
push
xor
xchg
es
jg
mov
out
pop
cmp
ret
dec
es
add
loopne
jmp
mov
adc
orb
push
aas
or
sub
pop
cmpsl
ficoms
les
shl
incb
add
jae
adc
rorb
xor
xor
loope
sub
rorb
das
scas
sbb
and
push
dec
mov
jbe
sbb
stos
cmp
add
xor
je
add
xchg
pop
ret
pop
inc
xchg
push
dec
xchg
in
js
dec
out
lock
loope
pop
loop
dec
adc
mov
xlat
push
popf
inc
out
add
idivb
negl
or
adc
jne
cmp
jns
imul
outsb
scas
repnz
imul
jnp
outsb
push
and
mov
pcmpeqw
fdivl
jle
outsb
es
sub
out
sahf
mov
es
pop
gs
mov
jae
jp
cmp
repz
jno
push
imul
push
outsb
je
sub
outsb
pop
mov
bound
push
jp
adc
neg
push
or
push
and
cs
mov
mov
iret
rcl
mov
and
sub
aas
and
pop
pop
add
imul
mov
push
cmpxchg
mov
mov
mov
xlat
mov
std
cmpsb
fidivrs
fstpt
repnz
mov
cmp
xchg
sti
lods
aam
rol
shlb
pop
push
pop
push
add
xor
leave
stc
shl
aaa
cmpsb
dec
dec
inc
inc
sbb
insl
in
adc
jl
dec
sub
outsl
pop
scas
testl
push
cmp
dec
xchg
rcrl
push
xor
dec
repz
adc
add
mov
repz
fcom
enter
iret
repz
iret
repz
nop
mov
iret
repz
pop
pop
push
push
repz
repz
dec
inc
inc
cmp
repz
cmp
sub
sbb
or
clc
lahf
lock
out
call
out
sahf
out
mov
out
sahf
jo
pop
dec
inc
xor
lahf
out
and
add
sahf
in
cmp
repz
mov
xchg
shl
iret
test
add
mov
push
inc
inc
iret
repz
inc
inc
inc
inc
dec
dec
cmp
repz
dec
dec
dec
dec
repz
repz
push
push
push
push
iret
repz
push
push
push
push
pop
pop
aad
aaa
cmp
jae
push
push
fnsave
mov
jns
cmpsl
fnstsw
pop
or
or
out
sahf
out
or
or
sahf
out
sahf
or
add
add
jns
out
add
add
add
jns
out
add
or
sahf
out
sahf
or
or
or
jbe
out
or
or
add
jp
and
mov
outsb
data16
inc
jp
push
push
inc
xor
pop
xor
cmp
cmp
mov
xor
or
cmp
push
jo
pop
push
jne
mov
leave
shrb
pop
pop
xchg
pop
jb
cmp
ss
xor
xor
loopne
in
aas
sbb
outsb
xchg
or
das
xor
dec
dec
dec
aaa
ss
dec
xor
xchg
add
mov
lods
mov
or
mov
pop
cmp
out
pop
mulps
cmp
cmp
push
push
cmp
cmp
push
push
push
push
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
inc
inc
inc
inc
mov
inc
inc
mov
test
stos
enter
sti
or
cmp
inc
dec
push
inc
dec
inc
push
clc
cmp
push
add
jae
lds
pop
out
cmp
insl
sub
jbe
negb
jl
mov
xor
ja
and
and
pop
loopne
push
sub
jg
aaa
and
jle
pop
push
lret
outsb
outsl
outsl
push
push
add
jo
push
add
pusha
mov
out
cltd
cmp
push
dec
push
pop
push
xor
sahf
pop
jne
lods
xor
xor
inc
inc
pop
punpcklbw
and
mov
imul
mov
sahf
mov
out
lods
push
sarb
out
std
sar
sti
out
sahf
out
cli
nop
stc
sbbb
negl
inc
jns
out
cmc
sub
adc
repz
out
repnz
stos
icebp
in
cmp
fdiv
fisttps
out
fisttps
out
dec
iret
repz
in
cmp
and
adc
clc
stos
jmp
sahf
out
push
out
out
push
in
jns
out
push
in
jecxz
cmp
sarl
loope
loopne
repz
repz
cmp
pop
fdivl
jg
ficompl
test
fmuls
out
mov
mov
insb
sahf
out
out
aam
push
rorl
cmp
out
shrl
rclb
repz
repz
cmpsl
into
in
ror
repz
int3
mov
cmp
repz
pop
enter
cmp
sbb
lahf
cmpsb
push
sahf
out
sahf
in
ret
push
movsb
adc
loopne
cmp
jnp
push
aam
les
mov
pushf
mov
idivl
mov
cmp
mov
scas
movsl
jns
out
push
mov
mov
mov
out
out
mov
push
mov
mov
pushf
out
sbb
das
push
mov
ret
fadd
jmp
or
outsl
sbb
loopne
loop
and
mov
cld
rol
push
loop
and
ret
ret
mov
push
mov
cwtl
sub
mov
repz
mov
or
sub
subb
mov
mov
mov
iret
insb
mov
std
xor
add
cmc
mov
popf
add
lock
lret
jnp
subb
jecxz
fsubr
sub
mov
mov
xor
gs
mov
mov
cld
and
lock
mov
aad
dec
push
icebp
out
rol
shr
adc
adc
push
jecxz
out
stos
iret
loopne
sbb
jmp
shrl
cmp
testl
dec
insb
shl
aas
push
sbb
addl
mov
jge
adc
inc
xor
lock
mov
daa
movsb
call
pop
paddw
lea
push
cmp
sbb
dec
adc
jg
mov
ret
sbb
and
shlb
sbb
pushf
dec
iret
out
rcl
sub
mov
test
mulb
orl
sub
bound
mov
jbe
xlat
jecxz
aas
cmpsb
flds
cmpsl
repz
adc
push
mov
ret
mov
jg
andl
or
add
mov
push
jbe
lret
daa
fldt
pushf
jae
daa
shll
daa
test
adc
fildll
pop
outsb
out
push
pop
idivb
inc
fists
add
out
mov
inc
sbbb
pop
push
cmp
lahf
ja
js
nop
jecxz
das
fcoms
jl
cmpsl
int3
stos
mov
das
jg
popa
push
scas
lcall
fwait
xor
jo
pop
push
push
dec
mov
pushf
arpl
lock
aaa
mov
adc
sbb
mov
mov
aas
inc
push
out
pop
or
scas
int
inc
xor
pop
add
mov
pop
and
pop
inc
cmp
fildl
or
jg
jg
mov
stos
cmp
mov
sub
orb
aam
bound
cmp
test
incl
xchg
xlat
mov
mov
pusha
test
and
gs
jmp
push
or
mov
shlb
cltd
pop
jbe
mov
lahf
pop
loope
push
fisttps
out
adc
jmp
push
mov
xor
push
sbb
fisubrs
inc
loop
add
fdivrs
cmp
pop
dec
lock
pushf
inc
pop
aas
or
sub
add
fwait
mov
mov
xchg
jo
lret
and
add
adc
fbld
ret
xor
daa
pop
orl
out
ret
mov
lds
dec
idivb
scas
jne
scas
pop
mov
cli
leave
cli
aas
cmp
int
das
shll
cmc
lock
mov
shl
repnz
mov
and
mov
fldl
cmpl
and
xchg
neg
lcall
pop
push
push
loopne
divl
daa
stos
outsb
and
emms
jne
push
push
add
push
pusha
cmp
rcl
leave
stos
mov
inc
inc
call
str
and
or
jle
loopne
les
jmp
pusha
out
mov
jmp
inc
and
and
mov
addl
jb,pn
fmull
sar
daa
mov
rcll
cmp
jne
js
ret
sbb
add
iret
mov
xlat
repz
mov
jb
out
out
sub
or
xchg
sbb
out
in
pop
lret
arpl
lds
jge
fsubrs
cmp
push
lock
mov
mov
pop
das
imulb
cmp
shl
jg
add
pop
pop
pop
pop
call
pusha
popa
aas
scas
ss
fmul
repz
aam
sarb
cmp
int
into
pop
enter
push
mov
cmc
jo,pn
xchg
push
push
lds
push
ja
unpcklps
lods
mov
push
out
pop
ljmp
push
aad
divb
push
das
inc
mov
adc
mov
inc
imul
sbb
dec
notl
das
outsl
iret
push
aaa
push
sub
loop
and
jecxz
stc
loopne
xchg
cmpsb
mov
mov
jecxz
std
aam
mov
orb
add
fdivl
adc
sbb
movups
mov
push
cld
mov
or
inc
jg
add
fbstp
movups
push
sbb
and
add
mov
movups
shrl
out
jg
push
pop
xor
clc
mov
ljmp
add
scas
call
loopne
test
sahf
out
fcomps
fcomp
shr
add
enter
jmp
nop
scas
rcrb
mov
pop
jne
scas
mov
pop
mov
imul
cli
scas
leave
out
mov
in
bswap
shlb
enter
loopne
mov
ret
in
adcl
iret
mov
pusha
insl
fsts
push
cmp
jg
fmuls
in
in
sahf
gs
jp
pop
shufps
or
rcr
orb
pop
mov
enter
rol
mov
fidivrl
jg,pn
mov
stos
pop
mov
rol
es
sahf
and
push
and
ret
mov
mov
lret
jle
clc
xlat
stos
aas
mov
lret
cs
insb
fs
scas
andb
dec
inc
dec
push
push
and
mov
shrb
mov
inc
mov
cwtl
adc
xlat
pop
out
sahf
out
cmp
xchg
mov
fdivp
sahf
aam
mov
xor
dec
insl
sub
mov
sbb
push
adc
shlb
aas
pop
mov
test
aas
scas
aas
shll
or
aas
out
mov
pop
push
mov
das
pop
push
dec
sti
pushl
mov
bound
inc
inc
pop
pop
pusha
mov
sub
movsb
jbe
xchg
das
add
sub
rcll
aaa
outsl
push
lret
movsb
jbe
das
lahf
mov
mov
mov
mov
xlat
pop
mov
imul
das
add
outsl
push
pop
rolb
dec
cmp
lcall
das
push
int3
das
or
pusha
or
in
add
xchg
sahf
push
dec
pop
jae
aaa
adc
andb
pop
sbb
data16
inc
inc
pop
pop
shrb
jle
pop
push
push
inc
push
inc
jg
cmp
mov
dec
add
and
bound
add
pusha
adc
adc
dec
dec
xor
cmp
dec
sbb
shrl
dec
imul
popa
sti
mov
das
push
dec
push
inc
filds
aas
cmp
dec
bound
xchg
aas
mov
mov
push
inc
fwait
lods
fnsave
add
into
fimull
xor
jg
scas
xchg
andnps
daa
orl
int
and
dec
out
adc
imul
stos
pop
fimull
cmpsb
das
xor
decl
iret
imul
aas
or
aas
enter
ja
shll
popa
test
in
pusha
adc
insb
fcomps
cmpsl
aam
cmpsl
cmp
sbb
add
les
and
pusha
dec
aaa
lods
out
push
cmpsb
xor
jle
outsl
dec
dec
dec
push
xor
cmpsb
aaa
mov
cltd
or
mov
inc
pop
data16
inc
sub
xorl
push
cwtl
pop
inc
loopne
lods
inc
cmp
dec
aas
push
add
outsl
imul
cmp
xchg
incl
push
in
mov
std
xchg
daa
pop
es
aas
pop
lods
jbe
mov
add
mov
or
outsl
mov
mov
ss
adc
add
add
aad
sbb
xchg
jle
and
mov
dec
repz
out
add
jb
hlt
lock
repz
call
mov
lods
test
pop
mov
out
xchg
nop
mov
test
cmp
cmp
push
push
dec
inc
xor
cmp
repz
adc
push
or
rcll
scas
add
mov
add
add
sahf
out
sahf
add
or
cmp
jns
or
aaa
or
or
daa
adc
dec
aaa
jns
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imull
cmp
out
and
jb
pop
jb
pop
jo
orl
repz
jo
pop
xchg
sub
mov
aas
pop
jns
in
into
aas
xlat
pop
sbb
add
add
jnp
int
stc
movsb
add
jns
and
pop
cmp
cld
inc
jle
test
or
fisubl
pop
mov
inc
mov
inc
mov
inc
jg
iret
mov
in
call
and
push
add
push
pop
fisubrl
xor
mov
aas
rcr
fsubp
stc
jb
jle
mov
jecxz
out
add
mov
mov
out
cmp
jne
push
inc
inc
push
adc
iret
jae
push
adc
je
shl
sahf
out
mov
pusha
sbb
sarl
sbb
jae
enter
repz
jns
pop
ljmp
mov
roll
pop
jne
mov
fdivr
jg
fsubl
jno
or
data16
divl
inc
or
sbb
xchg
std
aas
mov
mov
add
subl
xchg
rolb
test
subb
mov
or
push
pop
or
add
movsb
ja
jns
out
push
mov
out
sahf
out
mov
test
sahf
out
sahf
jl
je
insb
vmwrite
pop
add
out
push
adc
out
sahf
dec
or
or
adc
xor
sbb
out
sahf
out
sbb
adc
int
jns
or
add
cld
jbe
or
repz
and
out
repnz
incl
movups
xor
add
sbb
dec
sahf
in
jmp
inc
aas
mov
pop
loopne
or
add
filds
cmp
inc
push
dec
xchg
sbb
stos
js
jg
xchg
outsb
pop
push
pop
gs
cmp
repz
jl
sahf
iret
repz
mov
sahf
out
ds
cwtl
xor
jns
out
jb
sahf
mov
sarl
xlat
icebp
notb
cltd
sub
repz
inc
push
jbe
xchg
lcall
out
sbb
pop
cmp
pop
jb
jns
out
sahf
mov
ja
loop
fwait
movb
inc
out
sahf
out
addl
addr16
pop
mov
pop
mov
mov
mov
jae
mov
rcll
sbb
in
mov
pop
addb
sub
and
add
inc
addl
add
popa
or
push
aad
and
add
cs
pop
clc
scas
lock
push
add
lock
aas
sbb
push
cmc
push
inc
out
inc
ja
add
or
fildll
add
push
mov
push
push
push
inc
in
inc
or
xchg
addb
cmp
jmp
inc
pop
add
xchg
xchg
out
add
lea
mov
cs
xchg
xchg
andl
out
js
inc
pop
rclb
out
fidivs
ja
dec
repz
mov
repnz
das
dec
adc
pop
cmp
inc
test
pop
adc
pop
out
ljmp
xorl
add
mov
es
fisubl
cmc
push
push
sahf
jmp
or
pop
fisttpll
sbb
add
enter
in
ds
pushf
or
ret
mov
adc
stc
and
adcb
sbb
leave
sbb
dec
mov
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
jmp
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
inc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lds
mov
cmpsb
lock
mov
popa
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
add
mov
push
pusha
fiaddl
int
addr16
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
cmc
incl
gs
std
orl
pop
ficomps
frstor
arpl
or
idivl
inc
das
jb
add
insl
xlat
mov
in
xchg
dec
adc
push
cwtl
dec
adc
sti
imul
add
jae
fwait
dec
adc
je
mov
dec
adc
bound
imul
push
mov
jbe
push
adc
scas
jmp
scas
mov
pusha
mov
stc
add
je
loop
mov
jb
jns
add
cmp
or
mov
xor
jnp
and
jg
add
ss
add
enter
cmp
sub
ljmp
sub
jl
push
cmpb
aad
mov
push
or
xchg
push
jno
inc
movsl
push
adc
vmread
add
adc
ret
sub
into
push
add
mov
adc
popa
add
adc
xchg
push
xchg
adc
into
xchg
outsl
add
gs
xor
fadds
adc
pop
inc
sbb
pop
or
push
ficomps
stos
mov
cmp
add
insb
push
mov
les
data16
leave
cli
gs
and
push
sub
imul
xchg
jle
push
dec
and
shl
movb
outsb
and
cmp
and
ja
add
daa
and
pusha
jge
popa
popf
add
sub
pop
inc
jmp
and
sub
insb
loope
pushf
mov
sub
sbb
fcompl
inc
lea
inc
mov
dec
push
mov
dec
je
js
les
sub
incl
xor
add
sysenter
imull
daa
or
mov
ja
loop
adc
and
inc
push
pop
ret
add
cmp
push
jmp
imul
shl
shrb
sbb
sbb
insl
sbb
or
jo
xchg
add
add
imul
test
xor
jae
cli
js
pop
dec
test
mov
dec
xor
cltd
mov
mov
push
xor
into
and
test
xchg
in
or
adc
mov
mov
mov
pop
or
mov
addb
inc
das
aam
xchg
mov
add
dec
push
push
add
mov
orb
xor
push
clc
cmp
mov
out
add
push
adc
outsl
ss
mov
scas
enter
clc
dec
leave
xchg
popf
lea
call
add
add
in
enter
pop
push
ljmp
jo
pop
and
out
sahf
jb
jae
je
repz
jnp
jno
push
jbe
ja
repz
xor
jns
iret
sarl
js
jns
adc
adc
push
xchg
sub
add
cmp
lock
add
jnp
imul
mov
aas
negl
add
fistpll
push
ror
out
mov
mov
or
loopne
iret
repz
clc
outsb
adc
jle
dec
repz
add
add
push
fiaddl
jo
iret
repz
mov
mov
iret
repz
adc
sbb
pop
jns
out
sbb
sbb
sbb
adc
pusha
pop
decl
int3
loope
out
adc
or
nop
add
pop
add
repnz
shrb
and
cmova
jo
xor
mov
fimull
or
lcall
xor
push
pop
and
enter
enter
nop
mov
mov
pop
enter
loopne
cltd
inc
pop
and
or
nop
or
add
xor
mov
cs
or
pusha
jo
add
mov
sbbb
mov
sbbb
mov
das
nop
or
add
add
and
enter
enter
pusha
jo
pop
and
adcb
mov
jb
pop
and
loopne
push
enter
jb
sbb
das
adc
and
enter
push
jb
pop
push
pusha
fadds
subb
jne
mov
or
in
xor
sbb
xor
in
int
test
xor
into
dec
cmp
daa
in
iret
and
sahf
mov
out
ja
push
insb
aas
inc
rorl
movsb
mov
inc
int3
push
pop
daa
in
mov
aam
enter
sub
test
adc
dec
xor
mov
in
jo
mov
sub
xchg
jmp
fcmovnu
ljmp
jbe
daa
imul
out
pop
adc
pop
clc
repnz
mov
push
pusha
stc
or
push
notb
lock
ds
mov
mov
jp
ds
add
push
cmp
out
ljmp
notb
push
or
int3
sbb
aas
push
push
loop
or
or
sub
xlat
sahf
dec
mov
int
fimull
nopl
and
inc
fisubs
jle
lods
push
fs
adc
call
adc
adc
jnp
in
ds
xor
and
pop
repnz
insb
xor
pop
les
adcl
pop
or
daa
inc
test
mov
and
das
pop
adc
out
negl
push
push
sbb
and
inc
mov
or
inc
push
push
jp
mov
into
add
lcall
imul
sub
and
js
es
xor
or
and
xor
decl
dec
pop
jb
push
push
inc
push
pop
push
inc
push
dec
orb
in
push
push
inc
or
std
inc
adc
inc
dec
xorl
inc
push
pop
inc
arpl
in
das
dec
imul
cmp
ret
jl
and
out
in
add
push
inc
push
inc
mov
and
fildl
add
xor
sbb
inc
dec
inc
push
inc
inc
inc
and
xor
jo
insl
popa
mov
pop
jo
sub
sti
sbb
fdivl
imul
outsl
ss
imul
push
push
and
pop
and
aaa
sub
push
mov
mov
cltd
xor
dec
pop
inc
sub
mov
add
dec
sti
sahf
or
jb
nop
xchg
movsl
add
dec
jb
push
das
aas
enter
pop
mov
adc
inc
push
data16
lahf
out
jle
shlb
pop
in
sahf
cmpl
pusha
inc
mov
mov
clc
lock
aas
mov
popaw
mov
mov
mov
cld
ret
insl
sti
fcompl
das
and
adc
sbb
ds
imul
movntq
out
fidivrs
add
add
add
adc
popf
pop
cmp
push
push
imul
mov
or
sbb
mov
pop
out
cmp
sub
push
or
cmp
std
and
insl
dec
insb
push
pusha
add
ljmp
out
jo
push
clc
or
lock
fmull
ljmp
sahf
divl
pop
jg
or
insl
cld
out
es
repnz
inc
xor
push
shl
xor
adc
sbbb
rolb
mov
fildll
cmpsl
jbe
add
pop
pop
cmp
jle
dec
jnp
push
push
dec
push
rcrb
xor
rolb
sarb
xchg
es
push
lock
push
add
fsubrl
clc
sar
jp
loop
ret
xchg
movl
add
mov
fldcw
mov
clc
xchg
enter
test
cmpsl
xchg
sbbl
fs
rcrb
subl
or
adcb
sbb
pushw
pop
dec
cmp
clc
out
mov
testb
xchg
mov
xchg
sbbl
sbb
stc
je
das
add
fnstenv
out
orb
pop
and
fmull
and
aam
dec
and
mov
mov
decl
sbb
xor
or
es
js
vmread
mov
daa
mov
ret
lcall
mov
push
daa
dec
push
es
mov
rcll
call
and
js
jns
add
inc
lgs
add
lods
or
sti
dec
fmuls
add
sti
jnp
ds
add
mov
mov
testb
ds
mov
sbb
ds
pop
mov
cmpb
xchg
pop
pop
orb
pop
dec
ds
pop
or
jg
sbb
mov
rorl
movq
mov
lcall
dec
dec
mov
divps
pop
pop
js
lea
cltd
in
into
mov
paddusw
sub
mov
xor
mov
leave
fs
imul
or
cmpl
or
push
repz
add
jp
and
mov
xchg
mov
shl
mov
cmp
mov
daa
daa
rorl
jmp
aas
mov
daa
jl
lock
push
les
add
or
movsl
testb
out
pop
cmpb
adc
xchg
xchg
adc
sbb
arpl
shrb
inc
adc
or
add
rcrb
rclb
ja
sub
sbb
scas
rcrb
ss
pop
push
pop
mov
fdivp
sbb
sbb
pop
and
sarl
pop
ficoml
mov
mov
mov
adc
insb
pop
scas
sidtl
sbb
pop
lret
and
test
xchg
mov
inc
imull
pop
xor
scas
push
xor
adc
scas
push
in
test
sbb
pop
or
test
pop
and
pop
mov
movsb
sub
scas
inc
stos
and
scas
test
sahf
pop
stos
cmovbe
or
xchg
add
in
clc
sbb
rcrl
fisttps
js
jp
inc
inc
outsl
arpl
sbb
mov
mov
sub
inc
pop
jbe
dec
das
faddl
inc
imull
addb
xchg
pusha
push
insl
or
maxps
mov
add
jmp
dec
fistps
mov
add
jo
lock
out
int
adc
jg
push
mov
or
mov
lret
orl
xchg
mov
bound
lret
popl
fdivrs
pop
aas
ret
mov
call
clc
jmp
or
cmp
add
pop
jbe
and
jae
scas
jg
or
popa
in
mov
mov
jo
cmp
or
xchg
mov
xor
pop
test
or
dec
outsb
and
movsb
or
aaa
cmp
or
or
mov
xchg
dec
or
sbb
or
lods
lea
shr
pusha
in
pop
xlat
pop
or
js
pusha
xchg
mov
or
or
dec
imul
or
ja
xchg
add
ss
add
jg
or
inc
cmp
or
mov
add
or
push
add
xor
or
lods
ret
test
adc
lahf
xor
sbb
mov
insb
cs
inc
mov
cmp
inc
pop
or
mov
mov
jle
xchg
jg
mov
or
loop
scas
popf
imul
jo,pt
push
pop
and
or
loopne
or
xchg
or
push
int
scas
push
inc
test
jae
out
cld
clts
pop
psubusb
fildl
pop
lmsw
adc
xchg
mov
xorb
sbb
add
jle
popa
daa
movsb
dec
int
mov
dec
add
adc
push
mov
dec
dec
lahf
out
and
stos
aas
popl
push
pop
add
pop
inc
lods
mov
add
mov
lock
sahf
daa
int3
sbbb
cmpsb
es
or
es
daa
outsb
mov
in
mulb
lock
es
push
addb
sub
adc
iret
xchg
addb
inc
push
xor
sbb
sbb
repz
mov
jnp
or
or
sub
lock
jo
ja
jo
insl
in
adc
add
mov
add
or
add
or
into
jg,pt
popf
dec
inc
cmpsb
or
mov
movsl
and
add
lods
add
inc
cmpsl
cld
pop
addb
aaa
lock
sti
cli
sbb
adc
or
mov
movsb
add
movsl
fldl
stc
addb
rorb
xor
push
sbb
cs
outsl
shl
test
push
loop,pt
or
push
orl
push
dec
jle
xchg
ficompl
nop
sbb
push
and
push
addb
into
jae
jae
pop
nopl
xchg
pop
dec
jge
sbb
push
add
pushf
imul
push
and
mov
add
ja
jae
inc
add
xor
push
scas
dec
and
negb
dec
mov
data16
out
sbbb
push
push
pop
movl
outsl
mov
scas
clc
adc
data16
pop
mov
mov
pop
xor
push
push
addr16
fstpt
sbb
sub
xchg
clc
xchg
add
push
pop
add
lods
mov
lret
xchg
out
ret
pop
jno
push
jnp
fidivrs
testb
pop
inc
push
fnstcw
mov
pop
fsubp
loop
fldl
pop
data16
mov
pop
sbb
sahf
rorl
xchg
sarl
adc
pop
push
out
aas
test
sbb
jg
int3
mov
ds
mov
or
ret
xchg
mov
movsl
pop
and
pop
loopne
mov
pop
adcl
mov
mov
inc
pop
push
add
out
xor
push
mov
add
negl
insb
insb
jae
pop
sbb
fcmovnu
dec
insl
xor
sbb
mov
das
and
pop
mov
das
and
jnp
jae
mov
mov
mov
jbe
das
jg
call
outsl
mov
fnstcw
cs
dec
push
in
jge
das
mov
jbe
popa
lcall
insl
fildll
outsl
popa
das
repz
popa
das
addr16
popa
das
ja
imull
out
pop
inc
and
outsl
popa
das
jg
push
pop
fsubs
pop
das
mov
mov
jg
out
mov
jae
das
fldt
push
ret
adc
sub
lods
jg
add
or
push
sbb
fildll
test
lea
into
loopne
jae
das
push
and
jge
les
andl
jb
jmp
mull
xor
xchg
jnp
mov
mov
pop
lcall
mov
dec
xor
xchg
inc
test
lock
jg
cmp
dec
imul
imul
sub
cmpl
test
inc
imul
das
fidivl
das
fwait
adc
add
stc
add
mov
addb
xorb
stos
cwtl
cmp
dec
push
lret
dec
divl
or
cltd
daa
or
stos
and
popf
ljmp
add
lret
fwait
sbb
push
dec
ds
stos
xor
inc
fs
lahf
out
push
or
dec
xchg
and
pop
dec
or
or
daa
scas
sbbb
jo
out
outsl
pop
arpl
ret
dec
push
or
push
pop
mov
sub
sbb
cwtl
dec
daa
pop
dec
mov
ret
and
and
orb
jp
in
fs
orb
push
pop
je
push
not
xor
bound
push
inc
inc
out
das
xchg
movl
or
xor
sbb
jg
cmp
movlps
stc
iret
inc
sti
insl
mov
add
jae
fcoms
fs
mov
add
fistpll
iret
aaa
inc
dec
or
add
or
sub
push
scas
and
pop
jne
ret
nop
xchg
arpl
enter
lods
stos
jecxz
add
negb
mov
dec
push
inc
pop
pop
dec
jmp
xor
ss
xorb
icebp
mov
stos
andl
add
cmpl
add
ss
jnp
jbe
aaa
dec
add
outsb
cmc
aaa
cs
add
lds
out
out
sub
sub
mov
pop
pop
and
adc
add
push
mov
xor
dec
sti
hlt
popf
out
adc
lods
sub
sub
ret
jle
test
bound
push
jae
and
int3
scas
push
xchg
je
dec
push
lret
dec
inc
movsb
repnz
leave
xor
cld
pop
gs
dec
pop
dec
dec
mov
cli
dec
repnz
xchg
xchg
inc
add
dec
pop
pop
rclb
cmpsl
fmul
and
push
mov
orb
std
fsubp
adc
mov
pop
add
push
xor
out
mov
cmp
mov
outsl
fnstcw
xchg
add
mov
shrd
add
and
sar
add
jl
cmp
mov
ss
dec
movl
sbb
js
mov
dec
inc
or
mul
rcl
cld
pop
dec
cmpsb
pusha
mov
mov
adc
out
add
xchg
add
or
test
ljmp
outsl
sub
jecxz
mov
rol
mov
xlat
iret
xor
inc
add
xlat
ss
jg
push
and
xor
push
mov
pop
fisttpll
inc
push
inc
jne
mov
fistps
addr16
and
and
dec
aas
cmp
test
loopne
inc
in
jle
inc
add
xlat
push
jnp
mov
add
cmp
mov
out
fiadds
iret
xor
testb
mov
lods
dec
mov
pop
repnz
xor
mov
mov
mov
xchg
jne,pt
outsl
das
clc
cwtl
mov
push
push
dec
dec
lret
jae
cmpsl
cmp
adc
loopne
pop
xor
mov
mov
add
xor
inc
pop
and
pop
dec
adc
mov
jo
aas
fdivp
adc
jbe
and
xor
leave
or
fimull
ljmp
cmp
pop
out
mov
repnz
add
and
push
push
testl
repz
imul
testl
jbe
inc
clc
and
jg
gs
fsubs
xor
cltd
lcall
inc
js
inc
mov
inc
in
in
xchg
xlat
jle
inc
pop
sbbb
sbb
push
pop
jg
aaa
rclb
push
popa
ljmp
mov
das
xor
lret
jnp
pop
out
jle
push
push
aam
das
leave
ret
ret
enter
daa
cs
nop
je
pop
idiv
das
pusha
or
mov
mov
inc
aaa
add
xchg
cmpsl
jne
pop
jbe
mov
maxps
mov
pusha
ret
mov
les
mov
data16
mov
mov
cmp
jbe
inc
sbb
push
lock
out
push
dec
mov
sbb
cmc
xlat
fcmovb
xchg
scas
cmp
ja
lret
pop
mov
mov
andb
jnp
iret
push
enter
sarb
sarl
cmp
add
push
int3
aaa
pusha
adc
fisttps
dec
push
cmp
push
inc
dec
sub
ds
jno
cmpsb
idiv
dec
jo
sbb
bound
inc
shll
xor
dec
xchg
xchg
sti
mov
mov
stos
add
je,pt
mov
cmp
movsb
jecxz
push
jg
pop
jbe
or
jg
cltd
sbbb
sbb
and
aad
add
mov
clc
lcall
clc
push
test
int
or
pop
inc
push
jb
test
push
sbb
or
call
inc
sar
nop
add
push
jle
jns
lsl
ret
iret
imul
sub
push
xchg
les
sub
fbstp
sub
sbb
ficomps
bound
jb
mov
ficomps
cmp
pop
addr16
pop
adc
mov
dec
pop
add
mov
ret
push
add
xchg
repz
add
xchg
xor
jno
cmp
cmp
push
andb
jle
daa
lahf
adc
inc
ds
adc
mov
in
pop
orb
xchg
mov
insl
packsswb
les
or
testl
inc
xlat
add
imul
mov
outsl
pop
inc
sbb
pop
orb
enter
test
push
dec
jb
ret
addr16
push
mov
fld
sub
jmp
xchg
push
pop
xchg
lock
outsl
push
push
add
sub
add
jno
mov
aaa
out
sbb
push
decl
nop
mov
leave
jle
rcrb
jle
mov
cli
adc
push
push
add
sub
push
insb
arpl
enter
jnp
jb
push
dec
mov
loope
add
fs
sbbl
cmp
xchg
inc
aas
sbb
xchg
pop
xchg
sub
cs
test
dec
testl
cli
hlt
mov
fisttpl
aad
xor
mov
pop
or
mov
or
pusha
mov
jb
sub
xchg
push
xchg
imul
out
jbe
jbe
inc
cmp
insl
cmp
repnz
mov
push
js
pop
dec
push
xchg
lea
shll
add
jmp
outsb
add
xlat
xchg
mov
push
ljmp
cmpsl
cmp
aaa
dec
lcall
in
sbb
xchg
or
dec
and
dec
adc
data16
sub
mov
loopne
pop
push
sub
add
ret
jge
ret
and
xchg
iret
test
add
incl
dec
xor
push
sbb
add
or
push
inc
dec
bound
sti
jl
jle
das
bound
int
loopne
push
cwtl
cmpsb
ss
sbb
outsb
dec
or
insb
jbe
sub
test
push
mov
push
sahf
xchg
mov
xchg
in
dec
cmpsb
out
mov
pop
push
dec
gs
adcb
in
loope
jnp
sbb
xor
mov
sbb
inc
out
sub
cmp
push
sub
mov
mov
ficompl
jp
dec
inc
out
lcall
daa
pop
sub
out
inc
scas
cs
push
pushf
pushf
or
aaa
lock
pop
int3
ja
mov
nop
xchg
pop
jne
jp
pop
sub
pusha
loopne
mov
in
aas
inc
mov
mov
mov
pop
outsb
inc
nop
rol
inc
das
push
incl
insb
mov
cwtl
push
stos
jb
fs
jbe
adc
clc
in
into
push
mov
lcall
es
or
push
sbbb
or
pop
dec
mov
fcomps
shlb
pop
mov
mov
xchg
push
push
bound
std
nop
leave
cltd
add
mov
test
adcl
ret
adc
popa
orl
jle
fimuls
xor
jb
mov
xchg
fisubl
packssdw
jbe
pop
cmp
push
out
cmpsb
subb
pop
inc
jl
mov
sub
dec
lahf
push
mov
xchg
mov
lods
sbb
push
inc
sub
and
imul
mov
ja
push
or
push
dec
hlt
xchg
xchg
imul
mov
movd
jae
push
sbb
dec
lahf
scas
mov
es
adc
or
scas
xchg
add
subb
cli
xor
sbb
inc
arpl
adc
mov
pop
addr16
add
mulb
cmp
jae
sub
ds
lea
pop
das
fsts
push
xchg
mov
outsb
cwtl
jp
cmp
push
lret
shrl
sbb
fwait
loop
mov
rorl
lea
pop
fiaddl
es
sub
std
pop
mov
js
jbe
lcall
fsubp
outsb
xchg
pop
stc
pop
xor
call
sti
mov
cltd
jle
mov
sbbl
jle
jbe
dec
mov
jns
pop
pop
cltd
push
loopne
or
loop
push
cmp
jg
add
cwtl
sbb
fldt
shrl
sub
pop
jne
pop
jecxz
mov
in
or
arpl
inc
ljmp
and
jb
pushaw
flds
mov
sbb
pop
dec
or
mov
nop
mov
stos
mov
das
xchg
arpl
mov
sbb
and
nop
cmp
and
dec
cmpsl
sbb
fcoml
push
jb
scas
or
xchg
adc
adc
adc
xchg
push
pop
addr16
inc
push
sub
xchg
scas
push
add
das
mov
mov
add
roll
out
cs
movsl
cmp
aaa
cmp
out
add
push
xor
fnstsw
add
divps
push
dec
push
jb
push
push
andb
out
inc
lret
inc
lret
shrb
loope
sahf
adc
push
incl
and
adc
out
push
cli
pop
orl
mov
lahf
pop
xor
cmp
andl
adc
pusha
jp
lret
ret
dec
fimull
pop
movsl
bound
pop
ja
jno
stos
dec
fisttpll
add
cmp
aaa
ret
mov
out
jp
cwtl
and
mov
nop
pusha
jp
sbb
fdiv
or
push
xor
daa
fisubrs
or
stos
xorl
ds
mov
pushl
cwtl
sbb
mull
mov
or
data16
jmp
and
or
adc
and
jae
mov
test
sub
enter
add
jb
lods
and
mov
add
sub
in
inc
and
sbb
add
xor
mov
mov
inc
inc
inc
add
xchg
fistpll
add
push
scas
push
xchg
mov
dec
ja
rcrb
push
add
shlb
add
jnp
in
adc
add
mov
mov
jb
pop
inc
lods
ja
adc
mov
repnz
jl
cmp
xor
mov
out
inc
or
or
pop
push
ret
xchg
dec
mov
ficoml
incb
pop
mov
pop
call
jo
outsl
mov
pop
adc
mov
mov
data16
nop
push
das
mov
push
or
jbe
adc
push
inc
sub
lods
mov
mov
dec
dec
stos
dec
dec
adc
cs
aaa
cld
and
addb
add
addr16
filds
pop
int
jbe
jg
sub
imul
xchg
into
cs
jae
das
addl
or
jnp
daa
js
dec
push
jg
sub
push
jo
das
add
push
sbb
push
popa
jp
arpl
mov
add
jb
stos
and
lock
jae
popa
xchg
or
mov
add
mov
pop
pop
adc
cmp
sub
dec
shlb
fidivs
or
adc
inc
xor
xor
xor
xor
xor
xor
lcall
sub
xor
ds
xor
adc
sub
or
aaa
dec
aaa
gs
xorb
cmp
sti
cmp
cmp
cwtl
cmp
cmp
cmp
aas
mov
sahf
test
xor
xor
xor
cmp
pop
aaa
push
aad
out
fidivrl
jno
stos
cmp
cmp
cmp
mov
cmp
cmp
bound
cmp
outsl
cmp
cmp
idivb
inc
ds
ds
or
xor
cmp
push
aas
jge
or
lahf
aas
dec
les
xor
incl
pop
xor
xor
push
xor
xchg
popf
xor
xor
xor
xor
jmp
decl
pusha
xor
xor
xor
xor
xor
popa
xor
mov
clc
lcall
test
xor
xor
xor
xor
xor
aas
cmp
xchg
xor
push
ss
imul
ss
mov
ss
jmp
jmp
aaa
fs
pushf
aaa
or
push
cmp
cmp
cmp
cmp
jmp
cmp
pop
cmp
mov
cmp
dec
ds
je,pt
cmp
aas
and
aas
addr16
aas
sarb
ds
aas
les
dec
mov
xor
xor
les
shll
cld
adc
pushl
push
xor
xor
xor
xor
xor
xor
jg
ljmp
xor
repz
xor
jne
jg
mov
xor
xor
xor
sub
dec
push
outsl
xor
xor
inc
xor
xor
xor
xor
xor
jo
jl
xchg
leave
xor
ljmp
cmp
cmp
aas
sarl
in
sbb
aaa
ljmp
xor
das
xor
movsl
aas
xor
jne
ret
xor
xchg
xor
xor
cld
pushl
dec
xor
outsl
xor
xor
push
adc
aad
jmp
shll
xor
imul
sbb
call
add
sbb
and
pop
cmp
cmp
cmp
cmp
cmp
addb
cmp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
into
cmp
pop
ds
ds
ds
ds
xor
mov
das
xor
push
xor
jnp
mov
rorb
push
cmp
cmp
jg
cmp
xor
fnsave
lock
test
icebp
fbstp
xor
push
xor
xor
aaa
cld
lcall
jb
jge
mov
xor
xor
insl
xor
xor
xor
xor
xor
sar
pushl
xchg
xor
mov
shlb
aaa
sahf
aaa
test
cmp
icebp
cmp
cmp
cmp
cmp
cmp
xchg
ljmp
push
xor
xor
sar
sbb
xor
in
xor
xor
xor
ljmp
xor
in
ss
ss
aaa
aaa
cmp
insb
cmp
cmp
mov
mov
cmp
cmp
outsl
cmp
cmp
cmp
cmp
cld
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
ja
xor
aam
fdivrs
lcall
and
ds
arpl
jb
push
aas
pop
aas
pop
aas
pusha
mov
mov
nop
fldl
sub
dec
dec
xor
mov
xor
xor
pusha
xor
fs
int
cmp
cmp
repz
xor
xor
decl
aas
aas
mov
cmpsl
scas
mov
xor
mov
xor
push
loop
cli
jecxz
push
xor
pop
xor
push
sbb
dec
lret
mov
pop
xor
cmpsb
inc
xorb
je
js
cmp
pop
push
xorb
xor
mov
pushl
mov
xor
inc
ss
ss
cmpsb
ss
cmp
stos
andb
js
nop
ds
mov
push
mov
lcall
push
push
shlb
xorb
xor
xor
xchg
cltd
xor
call
xor
xor
xor
xchg
xor
jg
add
xor
cmp
inc
push
cmp
lock
cmp
enter
cmpsb
fcomip
xor
jo
je
js
jl
xorb
xor
outsb
das
lcall
mov
pop
push
dec
inc
cmp
add
jns
mov
ret
cmp
add
mov
cmp
or
cmp
cmp
cmp
incl
cmpsl
mov
adc
adc
sbb
sbb
and
inc
add
xchg
xor
xchg
pop
cld
aaa
loop
xor
xor
xor
mov
aaa
inc
cmp
push
mov
cmp
jo
mov
adc
cs
dec
aas
jne
out
aas
xchg
aas
scas
aas
hlt
aas
movsb
add
xor
ja
lahf
xor
xor
xor
dec
dec
jb
xchg
xor
xor
mov
cmp
cmp
inc
xor
xor
rcrb
push
xor
pop
add
xor
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
call
shlb
enter
shlb
xor
xor
jp
call
clc
xor
arpl
movsb
ss
testl
aaa
push
cmpsb
icebp
sbb
jg
aaa
mov
xchg
aaa
mov
mov
cmp
cmp
cmp
cmp
sbb
sub
outsb
adc
adc
push
arpl
ja
jmp
and
clc
mov
fnstsw
imul
ds
pop
dec
push
lock
lods
aas
sarl
xor
cld
push
loopne
out
xor
xor
pop
xor
mov
xor
clc
ljmp
sbb
push
add
and
dec
ss
mov
outsl
cmp
cmp
cmp
ljmp
and
push
cmp
cmp
imul
cmp
cmp
jmp
xchg
mov
mov
mov
cmp
jmp
mov
lret
ds
std
aas
push
push
push
xor
test
lods
xor
orl
leave
xor
cmova
sbb
das
ss
add
xor
cmp
cmp
inc
cmp
or
mov
sbb
sbb
mov
jbe
xchg
xor
jp
nop
sub
xor
xor
mov
jle
faddl
inc
xor
fcmovbe
xor
pop
pop
xorl
push
cltd
xor
fsubp
xor
add
cld
pushl
xor
call
ss
push
mov
cmp
cmp
jp
fidivrl
out
hlt
cmp
cmp
push
clc
lcall
cmp
cmp
cmp
push
aas
vxorpd
paddd
aam
jecxz
cmp
cli
decl
add
inc
cmp
lods
cmp
cmp
cmp
cmp
cmp
fisttpll
idivb
repz
nop
push
sbb
pop
xor
mov
ja
or
mov
sub
sbb
out
clc
xor
xor
xor
jo
stos
stos
mov
out
xor
xor
cmp
aas
sbb
dec
xor
pop
cli
imulb
mov
jle
out
xor
xor
xor
xor
xor
xor
xor
jg
bound
clc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
scas
scas
xchg
xor
push
sbb
lcall
fists
pop
dec
mov
aaa
jecxz
ljmp
cmp
cmp
cmp
test
mov
cmp
cmp
filds
xchg
cmp
cmp
jg
cmp
xchg
cmp
stos
cmp
fnstcw
call
mov
incw
fisttps
sbb
push
loop
pop
das
ds
cmp
aas
ds
lcall
sbb
ds
ds
mov
dec
imul
jns
cmpb
pop
loope
mov
ds
ds
ds
cmpsb
pop
mov
mov
decl
icebp
inc
aam
fidivrl
fistpll
in
jmp
add
pop
aas
or
out
ret
adc
sbb
and
sub
das
push
cmp
subl
aas
jns
jle
cmpl
rclb
push
out
aas
lcall
decl
aas
xor
aas
xlat
aas
fdivrl
jecxz
add
mov
aas
cmc
aas
cli
shl
sbb
xchg
cmp
mov
test
out
cli
and
sub
sub
xor
xor
push
xor
pusha
xor
push
inc
pushl
outsl
xor
jge
xorl
xor
loop
xor
cmc
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
jg
mov
xor
xor
mov
xor
cmp
xor
js
out
inc
and
xor
fidivs
add
xorl
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
ds
fdivrl
out
aas
add
add
sub
ljmp
mov
mov
adc
ss
cmp
cmp
cmp
cmp
mov
jmp
dec
mov
fidivrl
jno
aas
mov
popa
pusha
add
out
push
add
add
mov
lds
imul
mov
clc
jle
xor
xor
xor
gs
mov
les
pop
loopne
std
xor
aaa
ss
ss
ss
shll
aaa
inc
outsb
out
aaa
adc
cld
cmp
cmp
cmp
cmp
cmp
cmp
sbb
incl
clc
or
sbb
cmp
cmp
cmp
jne
mov
rorl
std
cmp
aas
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
imul
inc
jo
lock
or
stos
lock
jb
xor
jmp
cmp
jmp
cmp
enter
fdivrs
fdivrl
loopne
sbb
add
cmp
cmp
cmp
mov
cmp
cmp
lcall
lock
or
mov
and
and
sub
sub
xor
xor
cmp
cmp
or
inc
cmp
dec
adc
pushl
xchg
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
arpl
sbb
push
cmp
cli
cmp
aas
mov
mov
pop
xchg
pop
test
jmp
xor
xor
xor
mov
ud0
loop
lods
aaa
fidivrs
repz
cmp
and
push
jo
cmp
movsb
jb
mov
outsl
js
cmp
cmp
push
cmp
cmp
cmp
xchg
push
sarl
rolb
cmp
cmp
mov
sarb
aad
ds
jmp
aaa
mov
call
icebp
xor
fistpll
xor
aad
divb
sbb
js
loop
inc
mov
cmp
xor
ja
mov
ss
ret
jo
jp
mov
mov
aad
loop
cmp
push
mov
cmp
pop
cmp
orl
add
out
outsb
dec
cmp
repnz
fisttps
cmp
fnstsw
sub
adc
cmpb
push
aas
mov
insb
push
mov
push
xor
sahf
loop
xor
pop
jecxz
mov
pop
lret
mov
mov
inc
xor
mov
xchg
or
inc
jecxz
ss
pop
aaa
pusha
sub
insb
aaa
jo
je
xchg
add
aaa
push
cmp
cmp
cmp
cmp
sahf
cs
mov
push
lock
decl
jg
cmp
cmp
cmp
cmp
cmp
cmp
mov
xor
cmp
imul
ds
out
aas
fisubrl
mov
pop
push
and
jle
test
fisubrl
mov
sbbl
out
sarb
mov
nop
xor
movsb
xor
call
mov
add
enter
sar
fdivs
fdivl
loopne
in
call
lock
xor
scas
mov
stos
or
push
inc
xor
xor
pop
call
ss
ss
ss
ret
out
aaa
jg
aaa
push
cmp
int3
add
cmp
fidivrl
xorb
sub
sarb
dec
xchg
test
dec
je
loopne
mov
xchg
dec
js
jle
cmp
xor
jo
js
xorb
xor
or
sbb
jle
and
sbb
xor
scas
cmp
into
insl
cmp
add
ds
ja
sbb
out
xchg
xor
mov
xor
xor
pop
xorb
xor
xor
jbe
xchg
xor
push
xor
hlt
stos
push
mov
data16
adc
adc
cli
pop
aaa
in
aaa
pop
and
push
mov
je
js
jl
test
mov
pop
jmp
xchg
cmp
mov
cmp
mov
rol
shl
into
mov
cmp
lcall
cmp
cmp
sbb
nop
cmp
mov
cmp
icebp
cmp
les
enter
sarb
aam
fdivrs
fdivr
inc
xor
cmp
mov
out
xchg
cmp
adc
xchg
into
ds
aas
jbe
jge
jo
cwtl
pushf
ss
push
stc
sub
stos
xor
es
test
movsl
sbb
dec
sub
push
push
jbe
xlat
push
xor
xor
out
xor
xor
cmp
dec
mov
xchg
jle
ss
cmp
repz
aaa
sub
cmp
cmp
inc
cmp
clc
stos
call
inc
cmp
sarl
cmp
jp
cmp
cld
jg
mov
push
cmp
cs
cmp
dec
ds
pop
or
out
aas
push
ja
push
stos
push
add
in
add
incl
adc
inc
xor
test
inc
pop
pop
aaa
test
xor
add
jg
aaa
das
cmp
cmp
mov
sarl
cmp
movsb
decl
hlt
cmp
cmp
outsb
mov
aas
popf
aas
mov
dec
pusha
or
jo
sbb
mov
mov
cmc
xor
sbb
dec
xor
scas
xor
xor
xor
dec
shll
pop
das
sar
cmp
cmp
jne
stos
or
cli
fcomp
loopne
fcoml
call
ds
shrb
push
pop
dec
aas
or
outsb
aas
xchg
mov
inc
js
mov
cli
jmp
std
aad
inc
incb
xor
or
xor
xor
xor
xor
xchg
out
xchg
xor
loop
scas
xchg
inc
icebp
pop
adc
mov
in
cmp
push
add
aaa
cltd
push
dec
enter
xchg
or
push
xchg
mov
cmp
cmp
jmp
cmpsl
add
cmp
cmp
mov
cmp
cmp
cmp
cmp
and
pop
ds
dec
mov
into
and
je
jl
lods
xor
xor
lea
jbe
xor
push
xor
adc
add
inc
and
out
mov
ds
call
sbb
xor
outsb
cmp
adc
je
push
pop
cmp
push
cmc
lods
ret
or
cmp
cmp
repz
sub
add
pop
pop
dec
xlat
cmp
push
aas
loope
pusha
cmpsb
loopne
xor
insb
adc
das
jo
inc
xor
xor
dec
push
xor
mov
xor
add
bound
or
inc
xor
xor
xor
xor
push
xorb
jle
ss
cmp
idivb
mov
std
aas
xor
cmp
cmp
aaa
cmp
cmp
cmp
cmp
repnz
cmpsl
cmpsb
jecxz
inc
add
xor
outsl
cmpsb
mov
ljmp
shlb
xor
add
cld
sub
aaa
pop
cmp
aas
cmp
cmp
push
pop
jg
sub
ss
insb
ret
call
cmp
cmp
cwtl
adc
mov
cmp
cmp
enter
cmp
test
mov
stos
cmp
cmp
inc
pop
movsb
outsl
add
cmp
cmp
les
enter
xor
aas
fcomp
sbb
ds
outsb
rolb
out
xchg
xor
je
and
ret
xor
xchg
shll
je
mov
xchg
dec
mov
outsb
and
mov
pop
and
sub
outsl
inc
subl
mov
xor
pop
cmp
lods
cli
stos
add
cmp
cmp
jecxz
cltd
cmp
adc
mov
aas
push
cs
inc
push
out
cld
into
push
xchg
or
push
add
xor
xor
int
inc
xchg
shrb
mov
or
out
or
push
cli
leave
add
jge
mov
xor
inc
xor
rcr
xchg
ss
cs
movsl
rcrb
enter
clc
dec
aaa
aaa
fdecstp
push
cmp
cmp
stos
mov
inc
adc
cmp
cmp
cmp
mov
xchg
stos
aad
loop
push
cmp
jg
sub
xor
xor
xor
sub
xor
xor
cmp
xchg
adc
mov
aaa
dec
aaa
lret
pop
aaa
mov
sarl
add
push
lret
mov
fidivs
mov
lret
pop
aad
incb
out
gs
xor
and
lahf
sahf
mov
sub
xor
or
pop
pop
ss
ss
aaa
xor
popa
jg
icebp
mov
aaa
icebp
aaa
jp
out
or
cmp
movb
mov
int
fsqrt
pop
cmp
cmp
push
pop
lea
cmp
push
out
nop
dec
mov
dec
xor
inc
es
xor
xchg
es
xchg
movsb
push
jne
sarl
lret
scas
movsl
cmpsl
add
cmp
jb
jp
jmp
je
js
jl
test
xchg
ds
xchg
mov
and
xor
adc
pop
dec
sbb
xchg
repz
push
aad
cmpsb
mov
mov
push
xor
mov
jle
cmp
xchg
cmp
cmp
xchg
mov
cmp
add
push
push
jecxz
xor
outsb
push
imul
xor
xor
xor
xor
or
sbb
aas
ss
test
lea
lcall
push
add
out
push
das
aaa
cmp
ds
mov
add
inc
dec
and
rolb
call
adc
mov
xor
sar
aaa
scas
xor
ss
ss
aaa
mov
jae
pop
sarl
aas
push
inc
lret
dec
push
cmpsl
lcall
rolb
repnz
xor
xor
lods
xor
xor
jae
jno
jmp
mov
test
xlat
loope
cmp
dec
dec
addb
and
add
xchg
mov
imul
fdivs
loopne
jg
cmp
pop
fs
and
inc
cmp
cmp
add
cmp
push
xor
sbbb
xor
ljmp
adc
ljmp
mov
mov
out
xor
xor
arpl
sbbb
mov
icebp
push
pop
xor
fidivrs
jle
lret
aaa
mov
mov
sbb
add
cmp
out
cmp
stos
cmp
cmp
aas
push
push
xor
lret
cmp
adc
mov
xor
lock
into
xor
ss
stos
cmc
jg
inc
xchg
cmp
cmp
cmp
icebp
push
jecxz
cmp
cmp
pushf
hlt
cmp
ds
xlat
popl
jae
push
xor
xchg
in
inc
and
lcall
xor
fisubrs
cmp
cmp
mov
rclb
decl
cmp
push
sarl
loop
adc
daa
aas
push
scas
push
inc
jne
add
icebp
add
xor
pop
cld
inc
test
jno
leave
xor
xor
sbb
mov
sub
outsb
adc
mov
scas
int3
cmp
cmp
cmp
cmp
ds
scas
scas
les
pop
xor
cmp
cmp
inc
xchg
mov
out
jle
inc
roll
mov
testb
xor
cs
push
ss
lret
aaa
adc
ljmp
jae
rorl
orb
cmp
cmp
addb
pop
xor
loopne
cmp
inc
xchg
add
jns
ret
mov
sub
xor
jns
jg
ja
add
mov
inc
xor
xor
xor
fwait
rorb
xor
dec
xor
push
jg
scas
leave
xor
sub
jecxz
icebp
popf
mov
cmp
cmp
jp
sarl
sbb
mov
mov
jle
xchg
mov
iret
pusha
add
xor
jle
xchg
dec
xchg
mov
inc
push
sbb
ss
xor
xor
lcall
std
xor
lcall
sub
test
ljmp
sub
shl
nop
into
mov
pop
mov
xor
cli
xor
push
ss
mov
sub
out
clc
dec
cmp
and
cmp
cmp
jle
cmp
out
add
pop
cmp
cmp
cmp
adc
nop
ds
mov
add
sub
lcall
rolb
cmp
adc
xor
xor
inc
out
shrb
out
cmp
cmp
es
inc
add
xchg
push
add
lcall
inc
leave
cmp
test
push
fsubrs
cld
cmp
cmp
filds
adc
or
push
ds
or
ds
test
aas
bound
imul
jle
mov
loop
pop
cmp
dec
das
xor
daa
jle
jne
dec
sahf
fbld
cmpsl
mov
sub
or
push
pop
push
mov
push
test
and
idiv
sub
lods
push
xchg
aaa
mov
cmp
fwait
rorl
cmp
cmp
mov
ret
push
cmp
pop
cmp
push
ja
xchg
cmp
push
sub
mov
and
sub
std
cmp
mov
cld
jo
xchg
movsb
mov
cmp
test
into
aad
loope
pop
xor
lcall
outsb
xor
jle
sar
add
mov
dec
hlt
filds
ss
negb
aaa
push
aaa
insl
inc
adc
push
sbb
subl
inc
stos
jnp
je
or
cwtl
cli
ret
inc
xor
mov
rorb
scas
outsb
cli
cmp
cmp
movsb
ds
lods
ss
test
rolb
orl
bound
incl
ds
mov
pop
push
sub
push
cmp
push
aas
jnp
xchg
scas
inc
xchg
je
rorb
add
adc
sbb
mov
xor
xor
xor
xor
sub
xchg
xor
xor
pop
or
jmp
jmp
pop
lcall
ljmp
in
ljmp
xor
push
aaa
inc
mov
movsl
xor
xor
xor
xor
cmp
push
cmc
loope
nop
inc
incb
pop
mov
outsb
dec
jp
mov
lcall
aaa
pop
pop
aaa
inc
inc
clc
fwait
aad
jbe
xchg
cmp
adc
xchg
cmp
sarb
mov
test
jne
cmp
cmp
mov
mov
push
push
cmpsl
cmp
mov
push
ret
scas
inc
sub
push
cmp
adc
add
dec
aas
imul
xchg
inc
add
push
cmp
aad
add
das
cmp
lock
jecxz
vpcomq
xor
clc
dec
add
push
and
cmp
clc
das
xorb
inc
ss
ss
mov
mov
sarl
add
xor
dec
clc
dec
loopne
sub
xchg
jb
aaa
jmp
shll
or
push
sarb
inc
fbld
iret
cli
sub
ljmp
rolb
loopne
dec
xor
add
push
je
push
xor
idiv
pop
jno
sbb
and
aaa
sbb
and
xor
les
inc
ds
ss
mov
xchg
mov
fbstp
or
mov
arpl
sbb
pushf
cli
test
loope
jp
adcb
cmp
cmp
sbb
cmp
stos
fisttpll
je
cmpb
shrl
call
ljmp
orl
cmp
and
sub
xor
cmp
inc
dec
cmp
sub
lcall
pop
cmp
push
cmp
xchg
cli
add
js
jne
les
mov
add
mov
scas
add
les
daa
xchg
movsb
aaa
pop
cmp
pop
jmp
loopne
in
call
sbb
cmp
cmp
cmp
cmp
cmp
rcl
test
cmp
push
adcl
jne
ljmp
mov
roll
add
inc
pop
addl
xor
xor
movsl
xor
mov
push
add
loope
ljmp
xorl
push
stos
out
gs
movsl
push
and
sarb
aad
and
xchg
inc
addr16
mov
sbb
xchg
push
cmp
fsubl
cwtl
cmp
in
cmp
es
aaa
bound
dec
clc
clc
pop
aas
je
loop
enter
outsl
add
xor
test
jnp
jecxz
or
cmp
cmpl
movsl
sar
push
and
push
xchg
or
sbb
je
out
push
cmp
cmp
sub
stos
push
test
sub
outsb
add
aas
stc
movl
push
mov
jp
inc
aad
into
in
std
outsb
inc
dec
int3
xor
fimull
lcall
xchg
cmpsb
fldenv
sbb
jge
xor
fnsave
inc
test
fidivrs
sbb
out
pop
xor
sub
rcrb
ds
fisubrs
push
inc
mov
bnd
sahf
aas
movsl
hlt
inc
sbbl
out
mov
outsl
pop
xor
clc
cmp
inc
mov
lret
mov
mov
add
sbb
jp
mov
push
sub
mov
push
fwait
push
stos
jb
sarl
mov
into
es
pop
or
cmp
inc
and
cmp
lahf
sub
cmpsl
popf
jbe
sbb
je
ret
mov
push
cli
adc
cltd
xor
cmp
idivb
mov
cmp
mov
push
and
jge,pt
mov
cwtl
aaa
add
add
push
xor
dec
test
lcall
and
push
jae
shlb
cmp
dec
push
inc
push
sub
cmp
jae
mov
xor
xor
xchg
xor
mov
mov
mov
mov
xor
cli
in
xor
loop
sbb
daa
ss
ss
out
aam
pushl
test
lods
cmp
cmp
cmp
mov
push
test
or
mov
mov
or
lods
out
nop
jbe
aas
sahf
or
cmp
or
adc
xor
xor
lret
xor
ss
shlb
xor
sub
das
add
scas
lock
ds
xor
pop
sub
ljmp
mov
pop
fcmovbe
cmp
jbe
loop
mov
subb
xor
xor
xor
cs
mov
out
fdivl
ljmp
sbb
xchg
cmp
cmp
cmp
aam
test
pop
cmp
cmp
adc
pop
xor
cmp
and
pop
push
xor
sub
adc
xor
pop
loop
push
or
or
popf
clc
scas
mov
add
xor
push
cmp
ja
cmp
cmp
cmp
push
cmp
mov
jmp
mov
cmpsb
push
lds
lret
jbe
loop
add
andl
xlat
cmp
js
fdivrs
pop
and
mov
xchg
xchg
mov
xor
xor
mov
xor
xor
jb
xor
xor
jb
imul
inc
mov
outsl
push
cmp
repnz
daa
cmp
push
mov
or
ficompl
xor
add
dec
movsl
dec
xor
mov
jbe
je
lcall
aaa
add
and
das
xor
inc
xor
push
data16
sbb
xor
xorb
xor
lods
inc
push
mov
mov
mov
insl
xor
or
rol
ljmp
add
jg
mov
push
fisubs
test
xlat
pushl
mov
negb
scas
xorl
adc
fwait
repnz
xor
xor
xor
es
jne
inc
xor
orl
xor
pop
cli
mov
lcall
bound
loop
lock
ss
ss
push
aaa
mov
jo
test
shl
cmp
cmp
sbb
cmp
cmp
push
cs
adc
cmp
cmp
mov
cmp
inc
cli
sub
fdivrl
ret
push
or
xor
jp
xor
push
add
xor
pop
or
mov
imul
mov
out
ret
mov
imul
pop
push
jle
ja
ja
out
inc
test
repnz
clc
aaa
cld
aaa
add
push
jp
sbb
js
rorb
and
inc
add
pushf
or
cmp
mov
ss
lret
cmp
ljmp
pop
add
xchg
jmp
inc
pop
insb
aas
jp
xchg
aas
cmpsl
aas
lods
aas
mov
scas
aad
icebp
mov
les
cmp
sbb
aaa
inc
xchg
stos
push
lcall
mov
mov
and
mov
lcall
inc
or
lds
pop
pop
push
mov
shrl
mull
push
scas
fimull
lahf
cli
or
and
daa
out
cmp
cmp
add
mov
sub
fdiv
adc
out
cmp
lcall
out
imul
or
inc
cmp
jmp
dec
outsb
push
cmp
pusha
cmp
mov
mov
mov
leave
push
cld
inc
fistl
sub
pusha
xchg
cltd
out
mov
call
xor
xor
xor
push
das
add
push
push
bound
pop
pop
pop
dec
shll
adc
mov
mov
dec
sub
ret
aaa
jecxz
jne
rol
aaa
ss
dec
ss
mov
xchg
pop
lods
jle
pop
or
das
pop
fidivs
jecxz
out
ss
scas
pop
aaa
dec
fwait
push
icebp
push
mov
xchg
cmp
aaa
jmp
mov
sarl
jb
int3
cmp
cmp
inc
jl
lret
cmp
push
clc
pop
or
or
push
pop
jp
ds
pop
push
mov
sahf
push
mov
in
imul
divl
add
push
dec
daa
mov
push
sub
push
arpl
xor
test
testw
xor
test
mov
adc
mov
inc
xor
xchg
sbb
mov
cltd
cmpsb
adc
and
test
cmc
xor
lret
shlb
insl
xor
fwait
mov
mov
xor
cmp
xor
fisttps
push
ret
js
lods
push
fdivl
xor
sub
sbb
mov
shlb
push
fsubrs
push
ja
out
ss
ss
adc
add
push
insl
aaa
ja
mov
aaa
cmpsb
ds
or
adc
pop
push
add
mov
repz
cmp
push
push
add
sahf
cmp
pop
sub
cmp
loop
add
push
sub
pop
idivl
add
add
clc
cmp
jl
inc
cld
jae
jnp
mov
into
fnstsw
or
jae
movsl
call
int
clc
repnz
sub
pop
inc
je
push
out
data16
insl
aas
xchg
aas
mov
sbb
mov
ret
xchg
xor
xor
in
cs
xor
imul
popa
xor
push
loopne
mov
mov
push
cmp
jbe
mov
inc
pop
sub
into
cmp
adc
cmp
ja
cli
push
cmp
fucomp
ror
andb
push
jbe
loop
test
mov
sbb
scas
or
jg
push
stos
mov
fwait
xor
sbb
inc
cld
aam
mov
xor
dec
xor
icebp
xor
mov
sub
push
aaa
push
ds
aas
mov
mov
aas
xchg
sub
push
clc
push
std
mov
xor
xor
lea
push
aam
call
scas
stc
or
xor
dec
inc
adc
xor
xor
mov
stos
xlat
inc
je
pop
rclb
call
mov
jle
sbb
cli
std
cmp
cmp
cmp
mov
push
add
push
ret
and
xor
mov
xor
add
scas
xchg
jle
mov
lcall
loopne
adc
movsb
lea
xor
bound
out
or
imul
aaa
xchg
aaa
popf
pop
scas
stos
push
arpl
sub
pop
std
xchg
mov
stos
mov
cltd
cmp
scas
adc
inc
jle
cmp
cmp
cmp
sbb
cmp
cmp
and
cmpsl
push
push
in
lock
or
adc
push
mov
cs
ds
dec
ret
lea
cmpb
pop
adc
inc
add
inc
scas
xor
xor
xor
rcr
aas
xor
mov
mov
push
pop
xor
or
push
xchg
add
fwait
into
or
xor
rorb
mov
loopne
idivb
sub
icebp
out
dec
insb
aaa
ss
ds
rolb
fbld
add
call
rolb
dec
clc
inc
fnsave
sub
add
push
jl
mov
shll
xchg
add
mov
aaa
sub
or
cmp
cld
cmp
cmp
or
es
xor
call
push
cmp
cmp
cmp
jns
nop
mov
push
add
test
push
movl
or
adc
jb
jg
loope
aad
or
xor
inc
push
test
mov
repz
inc
push
test
inc
jb
shlb
out
sarb
jle
mov
sti
ss
aaa
pop
adc
stos
xchg
bound
aaa
xlat
add
dec
sbb
std
aaa
add
or
pop
cmp
or
xorb
jle
add
add
arpl
outsb
jbe
cmp
mov
jb
or
into
jne
popf
push
ret
faddl
bound
dec
loop
or
ljmp
loop
xchg
stos
outsb
cmp
cmp
push
and
stc
subl
push
cmp
mov
idivl
dec
cmp
jbe
mov
adc
ret
cmp
adc
and
into
cmp
cmp
push
mov
push
add
ds
aas
push
push
sub
dec
dec
cld
push
push
mov
add
add
pop
jno
inc
jp
mov
stos
es
jl
ss
shll
and
push
aaa
lea
shl
subl
push
xchg
cmp
cmp
inc
sub
cs
movsl
jae
pusha
cmp
add
push
push
test
loop
adc
ds
and
test
xor
ds
gs
sbb
add
jnp
ds
movsl
push
inc
inc
call
je
add
mov
mov
sub
mov
add
or
shr
mov
xor
xor
xchg
mov
mov
jne
addb
rorl
xchg
mov
ja
outsb
and
mov
or
jae
mov
mov
pop
cli
dec
push
cmp
inc
pop
outsb
add
fs
cmp
jne
fsubrp
adc
rcrb
add
xor
fisubs
xchg
push
mulb
iret
pop
add
shrb
push
mov
jbe
jp
outsl
aad
jb
xor
xor
test
and
push
xor
stos
dec
mov
cmp
ljmp
repnz
inc
movb
cmp
test
xchg
aas
pop
xchg
pop
xor
jne
sub
ret
inc
sbb
inc
ds
mov
je
inc
push
iret
ds
mov
loop
data16
out
or
rcrb
aas
outsl
aas
ja
pushf
outsb
loopne
push
push
xor
add
mov
inc
sub
add
push
mov
repnz
xor
xor
xor
int
push
mov
cli
adc
xchg
push
gs
mov
leave
aaa
loop
adc
xor
dec
and
fstpt
add
xor
arpl
push
add
lcall
mov
mov
push
pushf
pop
pop
sub
ds
cmp
or
shlb
xor
shlb
outsl
ljmp
inc
and
push
cmc
ss
mov
cs
xchg
loopne
push
ljmp
push
inc
ljmp
cmc
hlt
pop
cs
cmp
cmp
cmp
add
jo
or
xchg
mov
adc
pop
imul
rorl
sti
and
mov
loopne,pn
adc
and
or
cli
push
add
adc
add
xor
adc
lcall
adc
insb
inc
lret
aad
rorb
xor
sub
cmpb
scas
cmp
mov
and
dec
aaa
pusha
scas
fmull
or
push
jno
mov
sub
dec
pop
push
mov
lea
cmp
cltd
or
stos
cmp
push
ficoms
jae
test
pop
push
mov
cmp
sbb
out
ss
inc
loope
sub
push
push
stos
push
movsb
outsb
out
dec
aas
mov
pop
adc
or
xor
push
mov
mov
mov
sub
sub
jle
jbe
xor
jo
xor
mov
xor
lret
sub
or
bound
cmc
cmp
add
inc
outsb
cwtl
xchg
push
pop
pop
ljmp
sub
fisubrl
aaa
cmp
add
lock
js
lcall
popf
test
mov
add
je
pop
ds
ljmp
notl
pop
cmp
cmp
and
lret
pop
ret
mov
xchg
test
fisubl
out
xchg
push
push
pusha
int3
popl
push
sub
sbbb
cld
xor
shrl
jecxz
out
jmp
out
popa
and
add
xor
add
dec
leave
mov
mov
pop
ficomps
and
ljmp
cmp
aas
mov
dec
or
push
xchg
xchg
push
mov
dec
mov
push
jae
jnp
jno
dec
or
and
lods
and
jno
jbe
pop
sbb
sub
cmp
push
cmp
bound
cs
pop
sub
xchg
nop
sbb
or
psrad
pop
jle
stos
cmp
xor
and
shrb
xchg
push
lcall
push
push
ljmp
inc
mov
dec
jg
inc
xor
mov
sbb
addb
out
loop
xor
scas
stos
mov
mov
cmp
subl
cli
mov
or
aaa
daa
aaa
inc
dec
cmpl
fidivs
inc
cli
es
xchg
cs
push
rcrb
xchg
cmp
out
test
mov
aas
les
shll
rcrl
int
push
adc
add
push
xlat
cmpsb
inc
testb
push
adc
sahf
fdivs
fisubs
jmp
push
sbb
jno
inc
ljmp
pop
scas
jno
xchg
stos
add
sahf
int3
repnz
sbb
and
and
pop
jle
ss
push
jmp
add
xor
cmp
cmp
mov
mov
fisubrl
sub
sub
loopne
sbb
movb
or
je
mov
push
push
jne
mov
push
sub
nop
out
xor
cmp
xor
dec
mov
mov
xor
bound
push
aad
mov
xor
xchg
mov
xor
test
mov
clc
pop
ret
sub
out
xor
jecxz
mov
lcall
jbe
ss
shlb
in
ds
into
cmp
push
cmp
lahf
push
jo
sbb
adc
test
ss
ljmp
xchg
iret
cmp
mov
pop
push
data16
adc
cmp
scas
lret
inc
jecxz
andb
mov
push
cmp
mov
sbb
mov
pop
mov
xor
lahf
jle
xor
sub
jp
roll
cs
cmp
inc
inc
xchg
xor
aaa
or
xor
xor
xor
push
les
and
subb
and
xor
jo
adc
imul
jg
add
lods
cli
add
cmp
subb
jne
sub
fists
add
and
aad
data16
mov
mov
cli
and
outsb
xor
aas
sbb
xor
push
ror
mov
push
pop
aaa
mov
imul
sbb
imul
jg
jmp
mov
sub
or
je
inc
aaa
aad
dec
pop
cmp
repnz
mov
cmp
push
mov
test
xor
push
cmp
sub
int
add
cmp
xor
cmp
rol
add
push
ds
pop
xchg
repnz
fucom
rolb
dec
fsubl
push
mov
out
in
xor
stos
jle
pop
bound
dec
xor
loopne
mov
popf
sbb
push
sbb
ss
notb
xchg
dec
aaa
push
outsb
xor
test
xchg
mov
cmp
ljmp
filds
inc
and
sub
cs
out
mov
cmpsb
test
push
dec
sub
aaa
sahf
and
pop
jo
push
bound
jbe
scas
lcall
add
sbb
ret
xor
rcr
xchg
mov
cs
stos
adc
or
loope
mov
cmp
xchg
outsb
mov
jecxz
cmp
add
stos
jno
or
sub
es
push
and
movsl
or
add
sub
rcrb
add
sbb
xor
pop
popf
scas
add
ficomps
xor
push
xor
shlb
lods
out
fisttpll
jb
xchg
xor
push
lea
or
inc
addl
stos
adc
pop
pop
mov
pop
aad
sahf
mov
lock
test
jmp
in
mov
lea
cmpb
sub
cld
test
movb
cs
inc
mov
jbe
fs
mov
and
gs
and
mov
mov
cmp
stos
adc
add
scas
push
les
xor
cmp
cmp
cmp
xchg
push
add
addb
es
shrb
push
bound
jns
addl
sbb
test
push
loope
adc
clc
jle
incb
mov
xor
sbb
js
mov
jle
mov
shrb
dec
aaa
or
jecxz
and
jno
xchg
inc
std
push
push
cltd
pop
lods
xor
les
sub
out
xor
cmc
xor
xor
push
scas
xor
cs
xor
xor
xor
pop
xor
mov
js
fdivl
cmp
cmpsb
mov
or
push
xchg
cltd
pusha
or
dec
fstps
push
jne
mov
minps
ret
xchg
xchg
and
sub
cmp
pop
mov
push
cmc
rorl
xchg
mov
leave
jp
lock
icebp
ret
mov
leave
dec
push
inc
mov
xorl
test
adc
orb
roll
ss
push
inc
mov
jmp
add
mov
leave
xchg
sbb
sub
cs
mov
xor
cltd
out
or
sub
pop
mov
lds
cmp
jmp
fwait
pop
sub
mov
scas
stc
cmp
xor
fidivrl
push
add
lds
adc
jbe
pop
and
inc
add
cmp
jno
jae
mov
leave
or
or
add
mov
mulb
pop
stos
test
jmp
adc
mov
push
inc
stos
push
iret
shll
xor
adc
dec
leave
rcrl
push
cmp
icebp
leave
cmp
jb
inc
stos
cs
ljmp
subl
push
sub
sbb
pop
mov
jp
inc
pop
sarb
mov
je
iret
sub
adc
mov
adc
and
shrb
pop
sahf
scas
inc
xchg
scas
leave
xor
sbb
adcl
shlb
push
inc
dec
cmp
xor
cmp
inc
xor
sbb
push
pop
or
cmp
jno
cltd
xchg
mov
jmp
scas
adc
cmpl
scas
mov
aad
stc
cmp
lock
cli
push
sub
movsl
fiaddl
cs
rcr
rolb
cmp
and
sub
mov
mov
or
sub
mov
mov
lock
lds
lea
inc
inc
adc
jmp
ds
mov
jge
xchg
inc
lds
imul
and
mov
call
outsb
add
adc
lock
and
and
icebp
push
lds
mov
js
sbbb
orb
and
push
jecxz
aaa
mov
int3
add
mov
fsubs
xchg
clc
mov
aaa
hlt
imul
or
bound
sbb
and
jo
add
mov
push
mov
sbb
dec
mov
push
int
adc
inc
inc
cmp
adcl
pop
cmp
cmp
ret
ret
or
bound
les
icebp
and
je
mov
ds
push
xor
adc
sub
rolb
outsb
and
sub
jle
pop
js
insb
jb
stos
xor
adc
mov
daa
fs
and
jg
xor
cmp
mov
add
dec
cld
iret
inc
cwtl
xor
test
mov
insb
and
mov
enter
inc
add
pop
pop
sahf
jno
cmp
cmpsb
dec
scas
into
mov
mov
push
ret
es
xor
fldcw
sbb
fcmovbe
loop
add
xor
cmp
repnz
xor
or
or
jo
push
or
or
xor
mov
xor
dec
movsb
sub
add
jecxz
pusha
and
and
inc
push
dec
push
push
adc
loop
sbb
mov
pusha
cmp
mov
data16
and
cmp
push
lcall
sbb
xor
xor
popf
mov
les
andb
sub
push
and
push
hlt
xchg
mov
shlb
aam
sbb
mov
dec
xlat
test
ds
mov
in
adc
inc
rolb
hlt
add
jl
lods
jo
inc
adc
fcoml
and
xchg
pop
fimuls
mov
mov
cmp
jo
je
push
xchg
aam
or
xchg
inc
jb
cmp
test
cmp
lods
push
outsb
adc
addr16
mov
mov
mov
ljmp
sub
xor
push
adc
enterw
stos
mov
mov
fdivrp
push
out
fdivl
jno
push
sub
inc
jg
dec
loop
jl
lods
jnp
inc
push
ret
sub
divl
sbb
mov
ljmp
pushf
ljmp
lds
xor
fs
out
push
jp
pushf
push
xor
mov
add
sbb
dec
xor
inc
adc
push
fmul
or
jl
cmp
mov
in
xor
popl
add
sub
xor
fs
sub
inc
push
push
add
les
outsb
enter
or
in
sbb
push
pop
pop
push
pop
fcmovnb
movsb
sahf
aam
jp
mov
dec
cmp
je
loop
push
xor
inc
cmp
arpl
pminsw
mov
sub
cmp
inc
and
insb
push
pushf
cmp
sahf
lahf
and
pop
xchg
mov
mov
lahf
test
cmp
and
sub
or
mov
push
cmp
cmp
insb
or
xchg
incb
xchg
mov
nop
adc
mov
cmp
fisubl
mov
clc
clc
inc
sbb
cmp
mov
sarb
xchg
fdivl
in
mov
hlt
inc
xor
push
inc
cld
sub
test
pop
inc
js
andb
orb
mov
mov
test
push
shlb
orb
push
hlt
cli
cld
add
push
popa
outsb
ja
ds
popa
pop
jo
and
sub
dec
cmp
jl
mov
sub
nop
mov
ds
mov
fcomip
mov
mov
adc
cs
inc
test
popa
cmp
push
xor
sub
pop
repz
mov
movsb
dec
jl
cwtl
push
xor
inc
js
xor
push
fdivl
loopne
call
push
cld
test
mov
lret
stos
dec
mov
xor
sub
cs
movsb
test
cld
pop
rolb
push
add
arpl
out
mov
push
movsb
outsl
fsubl
or
cmp
decb
mov
inc
enter
xchg
or
xchg
fcomps
xchg
sbb
call
sub
sub
ss
test
ss
sbb
and
add
pop
fwait
xor
add
jl
test
scas
mov
aam
or
push
hlt
jbe
inc
ljmp
mov
lret
add
mov
jo
push
fwait
inc
mov
jmp
int3
cmp
rorb
adc
xor
ljmp
mov
dec
xchg
and
dec
xchg
mov
add
push
stos
rol
subl
add
mov
jo
aas
in
out
aam
sbb
addl
ret
xchg
sub
leave
test
je
dec
rclb
and
and
push
sbb
xor
or
adc
repz
push
aam
aas
adc
call
dec
ret
data16
add
add
push
xor
dec
adc
adc
dec
add
decb
mov
xor
inc
ja
sub
sub
adc
movsl
icebp
test
sub
or
dec
add
arpl
sti
sub
xor
scas
mov
cmp
inc
add
mov
push
push
adc
pop
pop
nop
lcall
dec
push
pop
xchg
loope
arpl
js
inc
cli
test
mov
mov
shlb
and
mov
inc
pop
je
movsb
cmpps
mov
xor
pushfw
cmp
mov
cmp
pop
pop
push
xchg
movsb
mov
test
inc
mov
imul
push
hlt
ds
adc
dec
pop
sbb
js
orb
nop
jle
stos
mov
inc
mov
push
pop
rclb
test
ss
mov
and
xchg
add
add
test
jp
or
adc
xor
jmp
and
and
sub
orb
dec
pop
inc
xor
inc
fidivs
adc
adc
mov
mov
insb
jmp
mov
and
sbb
sbb
add
movsl
sbb
adcl
sub
cmp
inc
add
push
scas
test
rorb
cld
adc
loop
rcll
and
pop
adc
setge
mov
inc
cmp
in
inc
xchg
mov
sub
sub
sbb
pop
cmovne
clc
movsb
orl
sbb
lods
bound
faddl
insb
lret
push
jmp
in
adc
jecxz
inc
push
je
adc
and
fwait
je
arpl
dec
push
dec
fdivrs
or
xchg
adc
cli
push
sbbl
jl
shrb
and
addr16
sub
lcall
or
adc
inc
lock
push
subl
add
sub
xor
jg
jle
xor
inc
xor
sub
insb
bnd
pop
xor
rcrl
mov
daa
in
xor
arpl
test
lcall
arpl
scas
inc
dec
je
fsubl
loopne
call
rorl
hlt
pop
adc
fildl
subb
shll
fsubrs
or
test
data16
add
mov
jnp
ljmp
adc
and
push
inc
xor
sub
inc
aaa
sbb
inc
insb
and
push
jmp
mov
mov
xor
mov
and
push
rcrb
arpl
mov
sahf
mov
xor
fisubl
mov
cs
jecxz
sbb
pusha
push
dec
test
outsb
push
daa
sub
add
and
stos
adc
mov
inc
cmp
sbbb
or
es
pusha
mov
xor
add
dec
pop
pusha
sbb
aaa
mov
and
add
arpl
inc
mov
fimull
add
out
addb
add
loop
pusha
cmp
sbb
mov
jmp
arpl
clc
icebp
xor
iret
pusha
bound
cmp
xor
shlb
add
mov
pop
jg
push
das
ja
clc
cmp
push
sbb
dec
fistpll
push
sbb
xlat
call
jae
xchg
test
shlb
aam
fcmovbe
ret
lret
js
aam
cmpsb
fistps
or
ja
imul
mov
lcall
push
arpl
test
xchg
lcall
cmp
cmpsb
or
xor
jecxz
mov
ret
mov
shl
iret
add
jp
sub
dec
xchg
aam
icebp
adcb
dec
mov
jne
adc
mov
push
sbb
lret
in
stos
or
rolb
xor
movsl
xchg
imul
adc
add
add
ret
push
xor
scas
test
sbb
sbb
or
sbb
dec
and
push
xor
mov
in
or
jne
pop
outsl
mov
sub
mov
adc
dec
dec
push
aaa
movsb
pop
add
loopne
dec
fsubr
add
adc
inc
pop
lcall
add
mov
in
jp
pop
dec
aas
sbb
andps
jo
movsb
cmp
add
inc
out
rcll
push
sub
inc
inc
pshufw
loop
mov
hlt
add
lahf
push
loop
and
jae
pop
lock
cmp
mov
jp
mov
mov
loop
inc
cmp
aad
nop
dec
mov
or
push
sub
cmp
push
rorb
ss
out
mov
mov
xor
add
les
mov
push
xchg
xor
mov
int3
dec
mov
enter
js
push
and
lcall
test
mov
cli
fdivr
in
js
or
add
stos
inc
pop
test
movsb
lods
xor
mov
faddl
add
mov
push
ljmp
jl
mov
pushf
idivb
sarb
jno
xchg
out
rolb
adc
ljmp
sub
mov
out
xchg
xor
jl
jmp
xchg
cmp
push
bnd
mov
out
push
in
dec
pop
pop
inc
clc
xor
inc
xchg
shlb
xchg
dec
lds
mov
movsb
es
pop
test
ds
push
lods
out
cmpsb
in
hlt
mov
sbb
xor
push
cmpsb
fs
je
test
cmp
test
les
push
xor
lcall
xchg
mov
loopne
sbb
cmp
jl
push
mov
xchg
mov
push
jl
mov
or
clc
xchg
lods
xchg
mov
and
mov
stos
mov
sbb
sub
rclb
jo
cwtl
or
adc
mov
jecxz
sahf
fsubrl
add
adc
mov
inc
xor
inc
lock
movsl
push
push
push
push
fs
aas
ds
cmp
mov
sbb
shll
ret
and
icebp
sarl
enter
clc
call
mov
adc
mov
mov
sbb
add
sbb
push
add
sbb
bound
scas
mov
sbbb
imul
cmpsb
sti
adc
jecxz
lcall
lea
jl
pop
add
mov
movl
out
aam
dec
test
push
fs
push
movsl
cmpsl
cmpsb
pop
adc
sub
jl
or
mov
mov
push
lea
movb
cld
xor
adc
cmp
cmpsb
xchg
orb
mov
aam
inc
or
sbb
cmp
dec
loopne
xchg
add
sbb
adc
testb
movsb
mov
and
lods
push
jae
aaa
rcll
je
shlb
add
add
adc
shrb
push
push
addb
pminub
mov
fmull
cmp
rolb
cmp
inc
pop
into
jl
and
sbb
adc
rcll
sbb
cwtl
mov
xor
enter
and
mov
or
and
mov
in
add
lcall
imul
cmp
out
sub
jl
sbb
mov
pushf
les
adc
cmp
push
jo
pop
mov
clc
jecxz
inc
xchg
inc
shll
mov
mov
pop
or
xor
jl
and
add
adc
and
lcall
mov
outsl
mov
cmc
mov
xchg
bound
lods
mov
int
add
adc
jno
mov
loopne
lret
sarl
aam
sub
mov
js
mov
push
add
fiaddl
push
jo
xor
adc
lret
jo
mov
clc
mov
xor
push
xchg
test
stos
in
scas
cld
scas
add
stos
mov
rcrb
dec
pop
insb
jmp
adc
test
mov
xor
fildll
xor
mov
aad
aam
in
hlt
addr16
ja
stos
or
and
push
shlb
stos
data16
movsb
jmp
mov
dec
sub
ss
xor
jecxz
pop
nop
aaa
lods
repnz
adc
pop
mov
jo
dec
xchg
aam
adc
sub
rolb
push
ljmp
fmull
inc
jecxz
repnz
inc
inc
je
mov
xlat
sarb
inc
add
add
rolb
js
lahf
call
add
pop
insb
push
bound
mov
fwait
add
adc
and
dec
dec
adc
cld
cmp
cmpsb
mov
jle
cmp
push
nop
add
cld
mov
rcll
je
mov
adc
adc
imul
xchg
mov
push
shlb
stos
hlt
jae
pop
dec
test
jbe
enter
arpl
inc
sub
dec
inc
mov
jle
dec
push
mov
mov
lock
or
sub
or
xchg
lcall
in
xor
xchg
inc
test
add
push
test
popl
js
dec
imul
sub
adc
mov
les
cmp
add
jae
jp
add
orb
jle
pop
dec
call
jae
adc
popa
xchg
pushf
add
xchg
jle
jbe
ds
mov
mov
mov
ljmp
add
int3
xchg
je
adc
or
jp
outsl
nop
loop
andb
mov
test
cmp
and
push
ds
addr16
mov
pop
data16
dec
pavgw
ret
pop
mull
lds
jb
je
ljmp
mov
call
inc
movsb
andl
mov
push
mov
sbb
mov
xor
adc
push
sar
mov
sbb
add
sub
dec
adc
js
test
mov
ss
jg
aaa
test
clc
cli
call
mov
sub
jle,pt
mov
test
rolb
lahf
cmp
popa
jb
mov
fsubs
add
outsl
test
jne
bound
ss
xor
mov
scas
pop
ja
fcomps
aaa
cmp
pop
dec
mov
lods
aam
sbb
mov
ss
push
test
mov
loop
lret
inc
or
and
push
xor
pop
das
xor
stos
aas
or
push
add
xor
stos
and
pop
loopne
add
sub
push
mov
cwtl
test
jp
or
inc
mov
mov
imul
push
jmp
rorb
clc
mov
or
xor
add
cli
add
jne
sub
call
and
pop
test
cmp
cwtl
subl
cmp
or
mov
data16
mov
jp
push
mov
clc
cmp
les
xchg
aad
out
push
mov
cmp
jl
inc
push
fisubl
add
into
ret
jl
orb
and
xor
add
and
sub
testb
mov
add
or
adc
adc
sbb
loopne
mov
arpl
pop
pop
and
mov
sbb
push
dec
push
aam
mov
mov
icebp
inc
xchg
mov
inc
aas
orl
mov
pop
loope
cs
pop
icebp
inc
pop
pminsw
xchg
or
adc
cmp
call
insb
sub
mov
sti
sub
mov
mov
scas
inc
imul
push
push
pusha
cmp
imul
hlt
out
fwait
shr
xor
call
sub
adc
pop
addr16
addr16
jne
sub
sbb
sbb
pop
out
add
je
lock
xchg
or
dec
addr16
dec
test
sarl
pop
out
out
cmp
sbb
clc
or
cmp
mov
push
add
push
cmp
sub
add
pop
arpl
rolb
pushl
cmpsb
add
iret
shr
mov
iret
rcrb
je
js
ret
cmovle
cmp
add
lock
adc
xchg
ret
sti
pavgw
out
js
pop
or
nop
sbb
push
scas
adcb
adc
sti
loopne
mov
lods
subb
fcmovb
sbb
push
jbe
aaa
mov
ficomps
mov
xor
or
push
xlat
shlb
pop
add
lret
add
mov
ljmp
adc
lock
sub
lods
arpl
jo
out
out
movsl
mov
fcmove
mov
cmp
or
add
inc
ret
rol
mov
xchg
mov
xchg
mov
loopne
iret
repz
inc
sbb
mov
cli
arpl
add
push
push
push
aam
mov
push
inc
shld
push
mov
inc
rolb
push
add
loopne
jo
xchg
xchg
mov
mov
cmp
jo
dec
adc
popa
sbb
imul
add
push
or
popa
and
testb
add
jmp
ret
or
mov
mov
mov
rcrb
adc
bnd
dec
pop
adc
shll
les
adc
push
fistps
subl
dec
sub
pop
push
add
dec
inc
outsb
add
add
outsb
sbb
imul
ljmp
adc
sahf
push
pop
pop
aam
cmc
dec
inc
mov
add
add
sub
dec
lock
adc
add
dec
dec
sub
repz
test
nop
jecxz
adc
or
loopne
clc
xchg
push
jmp
jns
cs
push
xor
pop
pop
jo
pop
sahf
out
cwtl
lods
cmpl
cmp
jl
psrad
icebp
inc
outsl
addr16
push
or
aam
stos
aad
push
push
les
stos
dec
sub
inc
pop
cmp
add
pop
es
mov
shrb
xor
mov
imul
add
pop
iret
dec
loopne
mov
scas
test
fwait
test
popa
and
sbb
pop
or
or
ret
and
push
push
inc
push
jg
xorb
pop
add
pop
push
andl
add
loopne
pushf
loopne
pushf
cmpl
les
adc
add
dec
es
pusha
inc
sbb
sbb
addr16
nop
cmp
pop
enter
push
cmp
dec
repnz
add
imul
push
adc
sub
pop
push
and
aam
js
push
or
xchg
xchg
dec
hlt
or
je
mov
rclb
mov
or
xchg
sub
sahf
ret
mov
lret
ret
adc
add
cmpsl
lock
push
js
or
ret
push
add
sahf
ret
jbe
push
xchg
inc
std
adc
rclb
fcomps
or
add
add
iret
aad
cmp
es
les
jecxz
cmp
out
mov
jecxz
add
push
iret
out
je
sarb
cmp
mov
jnp
and
adc
bound
icebp
dec
arpl
push
mov
push
xchg
nop
mov
or
xor
les
fisttps
icebp
inc
in
adc
push
cwtl
jmp
or
loope
and
sub
and
test
popa
and
hlt
adc
into
sub
inc
test
nop
loop
movsb
add
inc
adc
pop
push
les
js
push
cli
rolb
jno
push
es
adc
nopl
stos
into
ret
sbb
jecxz
mov
xor
mov
inc
cmp
jl
js
mov
bound
mov
out
push
mov
fbld
and
mov
jecxz
cli
div
xchg
push
and
mov
mov
and
mov
scas
pop
and
mov
xchg
enter
lock
cmpsb
adc
pop
lret
sub
adc
push
sbb
adc
inc
adc
sub
push
ret
add
xchg
jno
dec
push
or
push
sbb
and
loop
loopne
loop
xchg
pop
loop
je
lret
mov
and
out
sbbb
incl
inc
loope
aam
in
scas
loopne
adc
add
dec
inc
dec
inc
inc
popa
mov
lea
xchg
inc
outsl
cmp
mov
arpl
ret
push
dec
inc
sub
xchg
aaa
loop
xor
adc
les
out
jno
sbb
xlat
rorl
ret
out
shlb
and
dec
adc
jne,pn
xlat
sub
inc
call
mov
push
rclb
fsubr
mov
add
push
xchg
imull
mov
insb
test
xchg
bswap
add
pop
sahf
aas
dec
pop
inc
and
popa
dec
sbb
aam
push
jno
lret
addl
add
mov
iret
in
cmp
sti
push
push
mov
inc
call
add
mov
lock
mov
pop
or
xor
xor
je
jo
fdivs
lcall
jbe
or
and
inc
xor
sbb
cwtl
sbb
mov
mov
xor
js
rclb
ret
or
dec
xor
cmp
jbe
push
push
mov
cmp
fcomps
mov
pop
loopne
cmc
aad
scas
and
adc
test
push
cli
inc
jo
or
test
loopne
rorl
pusha
test
inc
or
test
daa
pusha
inc
ja
xor
les
filds
addb
jp
dec
inc
stos
xor
xor
xor
mov
xor
cmpsb
cli
xor
xor
xor
sub
push
xor
movb
sub
dec
xor
mov
dec
jb
cmp
inc
xor
push
mov
or
push
inc
xor
push
xor
push
sbb
jbe
jp
sbb
repnz
sub
repnz
notb
pop
scas
out
jne
aad
push
outsb
xor
dec
inc
push
aaa
mov
mov
lea
or
mov
push
cmp
xor
push
or
fists
loopne
pop
leave
add
adc
dec
cmp
pop
add
dec
push
inc
add
and
adc
dec
sub
push
push
xlat
mov
iret
sbb
push
xor
std
imul
mov
shlb
cmpsb
mov
dec
in
add
mov
push
sub
mov
cwtl
xor
adc
test
mov
or
push
push
cwtl
rorb
xchg
pop
stc
xor
bsf
or
arpl
int
mulb
ds
repz
in
sub
sahf
ja
out
push
mov
push
rcrl
imul
mov
sahf
in
sti
insl
es
jno
into
jo
arpl
sarl
jle
andb
scas
loopne
mov
test
add
add
out
mov
push
sbb
push
jecxz
sahf
sahf
lahf
mov
insb
ss
scas
repz
mov
fwait
int
mov
rcrl
sbb
ss
xor
shlb
lcall
shl
mov
adcb
jnp
xor
xor
or
xor
xor
xor
in
sysenter
ss
es
inc
jle
testb
ss
loopne
imul
jo
and
lds
mov
or
adc
or
int
cmp
and
cmp
and
pop
aas
pop
inc
or
add
insl
fs
inc
pop
jnp
arpl
fs
dec
les
pop
scas
cltd
dec
push
mov
js
cld
push
cld
lahf
pop
lods
ss
negb
pop
pop
cs
push
push
xchg
inc
mov
push
sub
adc
add
hlt
add
push
fstpt
and
mov
pop
stc
movsl
push
adc
gs
cs
jg
push
cld
and
push
push
dec
dec
dec
jo
sbb
inc
dec
dec
inc
and
cwtl
sbb
loope
test
lret
inc
xchg
mov
insb
mov
jno
push
sub
jnp
sbb
pop
push
inc
and
sbb
add
xor
inc
dec
dec
inc
dec
pop
cmp
loopne
jae
int3
fstl
cmp
xor
add
das
xor
and
dec
push
nop
and
jo
add
notb
push
sub
mov
aas
xchg
add
loopne
or
arpl
mov
pop
pop
dec
les
aas
pusha
sbb
aas
or
lds
rol
fidivl
or
addr16
pop
test
fisubl
je
ja
inc
ss
test
xor
mov
sbb
fcompl
xchg
aam
in
push
push
insl
stc
mov
inc
fs
je
mov
mov
and
pop
ja
ja
cwtl
xchg
push
rcrb
xchg
jo
mov
or
call
add
add
pop
or
popa
adc
jno
testl
ret
add
inc
add
inc
inc
lret
cmp
lds
fwait
add
lahf
int
cmc
rcrb
add
cmc
add
fldcw
add
sbb
mov
sbb
push
out
sbb
fdivrl
out
out
imul
push
mov
loop
rolb
xor
and
add
lahf
popf
cmp
invd
inc
sub
dec
dec
jne
mov
dec
dec
dec
dec
dec
sbb
lds
inc
pop
mov
push
fmuls
arpl
ds
sub
add
fbstp
dec
xchg
movsb
add
or
dec
rolb
or
movsb
inc
inc
and
sbb
test
shll
xchg
push
adc
pop
or
add
sbbb
andl
insl
push
mov
lcall
xchg
push
repz
insb
sub
cltd
add
fs
inc
mov
jl
inc
xor
lcall
out
int
jo
enter
push
xchg
lahf
out
jbe
adc
add
insb
ss
add
add
jge
int
or
enter
adc
add
and
scas
or
sbb
aam
movl
dec
mov
pop
sub
lods
fcoms
lea
or
cmp
inc
test
xchg
out
mov
mov
xchg
mov
fdivs
xor
push
push
stos
or
fbstp
jbe
or
das
or
or
or
mov
into
imull
ja
or
loope
or
xor
push
jnp
shrl
or
roll
arpl
sbb
pop
icebp
rorb
xor
jmp
bound
mov
xor
inc
push
adc
sbb
iret
xor
xor
mov
push
cmp
push
add
or
and
loope
fistl
mov
in
or
pusha
outsl
imul
insl
outsb
xor
push
imul
pop
sti
fistps
arpl
js
fs
js
sub
arpl
jne
imul
inc
inc
push
xor
and
dec
dec
and
je
jb
ljmp
push
insb
imul
sub
insl
jb
jae
shr
insb
push
jp
popa
mov
pop
jnp
popa
outsb
jp
popa
dec
jb
mov
sub
js
push
and
data16
bound
cs
sub
or
popf
and
push
and
lds
inc
call
or
or
ret
jno
lcall
sbb
fst
das
mov
mov
mov
xor
test
int3
hlt
aad
int
mov
shrb
arpl
leave
leave
sbb
fistl
or
adc
clc
dec
out
push
xor
fwait
and
lahf
mov
subb
xor
fldl
and
iret
inc
sub
inc
or
push
mov
ret
add
or
jo
jb
pop
and
add
hlt
scas
or
pop
nop
pop
push
inc
inc
pushf
xor
fists
and
jbe
jmp
notl
add
sti
mov
stos
inc
sarb
cld
and
lret
mov
mov
adc
call
sarb
sarb
lock
lahf
stos
xlat
aam
mov
mov
xor
std
out
add
and
ror
mov
int3
in
sbb
outsl
in
out
test
rol
jnp
rcl
mov
xchg
xor
xchg
iret
enter
sahf
xorb
jb
xlat
mov
cmp
in
push
std
divl
insb
xor
xor
and
out
and
fidivl
imul
imul
cmp
cmp
jmp
xor
sub
and
sub
mov
pushl
dec
pop
sub
js
arpl
xor
xor
ss
pushl
cmp
data16
sub
xor
cmpb
outsb
push
push
in
add
inc
js
out
clc
gs
ja
dec
push
loope
mov
sbb
and
push
adc
insb
pop
add
xor
and
adc
hlt
mov
add
mov
sbb
jmp
lods
jecxz
jnp
insl
add
lahf
loopne
mov
shrb
add
sub
mov
mov
jp
addl
repz
shrl
xlat
push
jne
int
fadds
pop
add
fiadds
cs
xchg
sbb
jl
sub
insb
and
inc
and
stc
cltd
add
add
inc
imul
xor
mov
adc
pop
add
and
add
mov
and
icebp
push
mov
aaa
sub
pusha
and
ljmp
test
adc
adc
movsl
cmp
aaa
addb
inc
mov
mov
xor
jl
add
inc
clc
xor
jne
mov
add
dec
repz
aaa
loopne
cwtl
add
pop
and
mov
pop
add
das
push
addb
or
das
inc
rcrb
and
inc
xor
xchg
and
cld
inc
or
add
pop
add
ljmp
push
cmp
sbb
pop
xor
xor
int3
smsw
cmpsl
imul
and
mov
das
xor
mov
cs
adc
mov
jge
adc
mov
jo
shlb
test
mov
fldenv
sahf
adc
inc
cwtl
inc
or
fidivs
or
leave
rcl
mov
outsb
scas
dec
sub
rol
mov
sub
stos
mov
adc
mov
leave
icebp
pushl
popa
fdivs
xor
jmp
lods
fidivs
iret
shl
mov
xor
insl
ss
mov
int
or
fcompl
pop
xor
hlt
ja
xor
mov
ror
aaa
inc
mov
pop
jl
leave
in
ret
mov
mov
leave
fnstenv
cmp
lret
jo
cmpsb
mov
popa
add
push
mov
jge
lret
in
push
inc
jo
add
mov
mov
xor
xor
mov
cmp
xor
and
inc
add
sarb
scas
xor
sub
xor
push
or
and
xor
sbb
adcb
jne
sub
addr16
outsb
add
mov
ret
cmp
dec
adc
pop
sbb
les
cmp
or
add
sub
fadds
rorl
imul
movsl
dec
es
push
sarb
inc
add
call
scas
jge
adcw
adc
neg
cmpsl
jge
pop
sbb
xchg
outsb
mov
or
idivb
call
mov
lock
cmovns
adc
sub
adc
fildl
or
cmpsl
lahf
pusha
push
pusha
cltd
and
add
sbb
xor
push
lock
xchg
push
cmpsl
add
sahf
rcll
pop
popf
adc
rcrb
add
jecxz
pusha
out
push
out
ss
adc
andl
rcl
xchg
cs
adc
rorl
je
add
in
inc
push
jno
jo,pn
push
adc
xor
jle
enter
fnop
mov
cs
push
mov
or
rcrl
jbe
cmp
ss
in
shr
mov
sub
cmpsb
jb
add
and
inc
add
push
sub
inc
gs
mov
mov
dec
xchg
enter
mov
push
nop
jne
das
rolb
fdivr
lock
enter
adc
pop
dec
and
and
data16
push
pushf
mov
cwtl
outsl
scas
sub
and
add
add
js
pop
add
inc
aad
jns
adc
mov
into
loopne
imulb
xchg
push
iret
push
adc
push
xlat
mov
int
div
xlat
jmp
adc
inc
jmp
daa
nop
add
xchg
addb
outsl
mov
mov
pop
dec
mov
enter
fisubrl
mov
rcr
push
fildl
mov
jb
inc
out
dec
and
mov
cltd
iret
fmull
mov
outsl
adc
je
fnstsw
mov
pushf
push
fisubs
adc
das
add
pop
add
test
shlb
insb
jae
cmp
and
mov
loopne
mov
pop
xchg
enter
lock
xor
leave
mov
insb
iret
out
fildl
add
das
mov
int
repnz
out
push
insl
pop
outsl
sub
add
call
dec
pop
in
push
cmp
rep
das
mov
jb
jmp
push
jo
cmp
adc
outsl
loopne
mov
and
sbb
outsb
shll
outsl
jbe
fimull
pusha
push
lahf
cmp
add
aaa
inc
test
mov
cs
leave
add
xor
inc
inc
push
nop
popf
pop
sbb
push
loopne
leave
cmp
jo
enter
lock
or
adc
pop
pop
das
mov
scas
jo
aaa
cmpb
inc
lock
aad
inc
roll
push
das
test
fldl
leave
lock
enter
adc
push
mov
mov
add
nop
adc
adc
pop
leave
mov
sahf
cmpsl
dec
dec
and
sbb
jns
xor
nop
sbb
cmp
jo
sbb
xor
out
push
inc
and
sbb
shrb
add
sbb
mov
outsb
stos
mov
dec
pop
add
push
xor
xor
pop
add
mov
pushl
test
pushl
inc
mov
ds
movsl
loop
jo
mov
and
mov
cmp
and
mov
bound
mov
jne
push
in
add
dec
outsl
mov
iret
adc
jo
test
sbb
test
incl
mov
dec
pop
adcb
or
inc
dec
inc
fiaddl
push
mov
pop
jb
pushf
and
dec
das
pop
ja
jbe
or
adc
loopne
lock
push
mov
adcb
cmp
xor
push
pop
adc
subb
insb
adc
lcall
dec
mov
rclb
mov
outsl
insb
addb
ja
push
outsl
push
jo
push
call
loopne
cmp
js
and
cmp
insb
inc
outsl
inc
jae
xchg
push
ret
or
je
pusha
push
fdivrl
les
test
push
inc
pop
and
push
inc
mov
cmp
lock
nop
ds
aas
loopne
adc
inc
outsb
or
insl
pusha
mov
dec
mov
aas
inc
pop
push
mov
add
pop
jnp
jp
pop
mov
fisttps
xchg
push
fdivr
cmp
fldenv
pop
in
repz
mov
mov
addb
sti
xor
xchg
xor
cmp
dec
popf
data16
inc
dec
divl
push
orb
jge
push
push
outsb
lret
cmp
cmp
xor
xor
pusha
mov
mov
jo
mov
cmpsl
xchg
adc
roll
mov
cmpsb
inc
loopne
jo
sub
mov
sub
xor
xor
xchg
mov
fwait
or
push
sub
pushf
sub
shl
jo
insb
adc
adc
outsl
inc
std
pop
push
jb
std
std
jecxz
rclb
lcall
xor
jmp
or
cmovo
inc
and
adc
stos
aad
xchg
ss
and
jno
es
daa
xorb
xor
loopne
add
inc
xchg
insb
push
pushf
add
add
xchg
rorb
pop
xchg
mov
repnz
sub
bound
mov
jle
gs
mov
lock
push
loopne
and
mov
iret
repz
push
push
jo
mov
es
cmp
pusha
jo
pop
xor
fidivs
add
adc
lods
sbb
sti
xor
out
xchg
scas
pusha
shlb
mov
mov
lahf
idivb
popl
lods
mov
cltd
xor
repz
pop
xchg
inc
leave
test
lret
loope
sbb
cs
jo
push
out
push
pop
push
mov
nop
push
mov
mov
inc
or
push
push
fdivrp
addl
icebp
or
xor
adcb
jo
jg
add
mov
rolb
and
cs
or
xor
es
sub
pusha
pop
bound
mov
inc
ljmp
inc
addl
push
push
shrb
inc
roll
xor
cs
mov
fs
pop
mov
jmp
fwait
out
icebp
or
int3
sahf
push
adc
pusha
jmp
inc
push
cmpsl
inc
sahf
or
lock
cmp
mulb
or
inc
and
nop
lock
sbb
incl
pop
nop
inc
in
mov
push
dec
and
and
add
pushf
cmp
add
test
cmp
pop
pusha
outsl
das
mov
add
add
cmp
rorb
inc
popf
ret
aas
pop
outsb
outsl
ret
pop
rclb
add
dec
mov
pushf
jmp
push
iret
rolb
sub
sahf
jnp
pop
jns
sub
pop
sub
push
ljmp
push
add
outsb
xlat
scas
or
xor
add
pop
das
jo
pop
das
popf
outsb
fwait
fs
arpl
pop
das
and
ja
mov
xor
jge
and
and
pop
mov
inc
mov
sbb
dec
and
and
add
and
andb
in
movsl
sahf
jo
int
xchg
jno
cmpb
fadds
push
movsb
jo
es
mov
mov
outsb
cmpsb
dec
test
inc
inc
into
lds
push
push
dec
push
mov
decl
push
out
ss
push
js
rolb
xchg
mov
rcrl
les
enter
inc
mov
and
outsl
inc
aam
out
iret
and
inc
aad
decl
pushf
push
inc
iret
loopne
inc
or
dec
inc
push
rorb
and
inc
cs
cmp
jo
out
lods
xchg
cmp
das
xor
icebp
push
inc
ficomps
mov
pop
or
push
mov
inc
inc
out
pop
xor
sub
rorb
and
push
add
incl
jne
insl
xor
mov
lock
test
pusha
stos
inc
out
mov
adc
hlt
adc
stos
das
pusha
scas
jg
cmp
and
dec
pop
mov
inc
lock
mov
mov
test
outsl
jns
movsb
mov
shr
pop
mov
inc
mov
push
and
sbb
xchg
xor
push
adcb
dec
out
xorb
pop
pushf
jbe
and
mov
mov
pusha
cwtl
inc
fiadds
sbb
mov
pop
or
xchg
scas
subb
inc
fidivrl
push
mov
add
sbb
icebp
lock
inc
mov
pop
pop
popa
pop
popa
xchg
daa
iret
xchg
inc
inc
inc
add
inc
inc
inc
inc
push
repnz
repnz
dec
dec
dec
dec
sahf
sub
dec
push
push
push
rclb
dec
jnp
xor
das
inc
inc
jb
pop
jb
dec
dec
rcrb
dec
dec
lock
jns
jns
dec
and
pop
pop
push
push
sarb
push
xor
in
jbe
pop
push
push
mov
repnz
pop
pop
adc
pusha
rorb
aas
xchg
bound
cmp
inc
xor
out
cmp
cld
mov
add
rclb
inc
mov
xor
sub
xchg
pop
out
roll
and
sbb
mov
fistps
scas
or
xor
sbb
enter
xor
sbb
pop
aas
mov
in
lahf
pusha
sbb
daa
iret
bound
add
xchg
out
push
scas
inc
pop
pop
loope
sub
daa
sbb
adc
and
inc
dec
mov
push
cmp
and
aas
sarb
adc
dec
rorb
inc
das
push
push
xor
das
xor
sbb
and
add
adc
pop
adcb
aam
out
out
add
pusha
sbb
outsl
dec
adc
push
sub
xor
test
mov
ja
es
loopne
repnz
enter
iret
test
xor
or
xor
pusha
jo
ss
into
roll
mov
xchg
inc
push
push
mov
sub
mov
ja
push
mov
mov
and
das
pop
cltd
add
pop
add
push
add
push
inc
scas
sbb
mov
adc
mov
cmp
mov
outsl
inc
pop
inc
adc
xchg
pop
pop
inc
enter
pop
loopne
mov
pop
lock
inc
pop
addb
sub
outsb
test
xor
inc
or
rorb
rorb
es
jmp
push
xor
cs
mov
xor
clc
mov
sub
push
sarl
inc
nop
sbb
mov
push
sarl
gs
and
push
cmp
push
push
rcl
cmp
or
das
fs
mov
mov
out
jg
mov
mov
sarl
mov
mov
das
out
shlb
add
lds
aas
outsl
or
or
hlt
mov
mov
inc
cs
pop
sub
inc
outsl
sub
enter
roll
inc
shrl
mov
mov
lahf
sarb
lds
out
inc
outsb
adc
push
inc
mov
arpl
dec
mov
nop
fwait
adc
xchg
pop
add
mov
mov
pop
enter
xchg
inc
inc
xor
add
dec
pop
jecxz
nop
adc
dec
subb
enter
add
test
push
push
lahf
jp
loope
out
pop
loope
stc
push
adc
scas
xchg
pop
iret
push
adc
imul
nop
push
push
mov
xor
inc
mov
out
shrb
test
loope
jg
orb
inc
mov
fildll
ds
dec
cmp
movsb
inc
pushl
outsb
shrb
psrlq
pop
pop
js
call
enter
add
jnp
pushw
fmull
or
sarl
pop
jmp
push
enter
imul
lock
dec
push
and
scas
fcoms
dec
cld
out
cmp
mov
xchg
enter
sbbb
xor
es
add
shrb
scas
nop
dec
scas
std
inc
outsb
sbb
adc
jmp
push
aas
jo
shlb
sub
fs
ljmp
into
cmp
push
xor
and
push
ret
mov
fucomip
push
mov
push
and
add
push
lahf
push
dec
or
adc
out
movsb
movsb
mov
mov
ljmp
mov
adcb
mov
jg
inc
jo
push
or
scas
int
adc
outsb
popa
stc
push
mov
xor
adc
mov
test
jno
or
sahf
adc
ror
cwtl
push
jo
adc
fwait
loopne
jno
pop
or
ss
cmpsl
in
movsb
pop
repz
push
dec
enter
inc
add
push
fsubrs
sahf
xor
test
scas
or
xchg
jno
out
enter
xchg
pop
dec
addb
jecxz
roll
js
imul
dec
cwtl
test
sub
cmp
pop
dec
and
sbbl
cmp
aam
mov
cmp
jge
iret
xor
push
xor
inc
iret
repz
push
mov
popf
xchg
stos
pop
jo
movsb
mov
add
jbe
mov
jo
add
jno
aas
adc
dec
les
mov
aas
mov
sub
jno
jg
or
sbb
sbb
pcmpgtw
aas
mov
or
xor
pop
jno
pop
xacquire
push
pop
jns
daa
add
lds
sub
add
jno
daa
pop
adc
adc
inc
clc
stos
out
add
and
mov
je
push
push
popf
shlb
je
push
cmp
iret
repz
inc
jbe
pop
jne
dec
repz
imul
jnp
pop
shl
push
notb
test
repz
out
outsl
mov
cltd
mov
popa
jl
test
adc
out
xchg
leave
jo
and
enter
pusha
xchg
clc
insb
js
cmp
cmpsb
repz
pop
cmpsb
cwtl
out
scas
add
lock
push
cs
out
cmp
mov
dec
ljmp
adc
sbb
add
aam
incl
lret
dec
add
mov
pop
popf
adc
jno,pn
xchg
insb
pop
in
mov
sbb
adc
call
and
add
and
dec
dec
add
inc
imulb
hlt
push
repnz
dec
ficomps
inc
add
dec
shlb
xchg
xlat
scas
loopne
mov
push
daa
sbb
pminub
dec
inc
jno
dec
inc
mov
out
clc
rolb
adc
inc
outsl
pop
nop
or
mov
das
xor
xor
sub
aaa
and
jnp
cs
pop
xor
ss
shrd
push
rorb
adc
arpl
pusha
sub
adc
jmp
mov
movsb
pop
ss
push
popa
lock
push
shrb
and
inc
cs
stos
xchg
sub
jno,pn
pop
push
mov
xor
dec
cs
jle
mov
test
xchg
orb
sbb
push
dec
xorb
pop
cmp
dec
test
push
add
xchg
lods
pop
cmp
ljmp
rorb
pop
jno
stc
cmp
enter
cmpsl
popf
jno
test
test
jg
add
iret
cmp
dec
daa
jno
pop
jg
jle
inc
pop
into
or
mov
adc
dec
aas
fadd
dec
inc
jno
dec
ss
add
into
dec
inc
and
in
adc
aaa
mov
test
push
inc
or
or
in
pop
jg
leave
test
iret
rcll
mov
xor
xchg
ds
add
pop
lahf
xchg
xchg
loopne
loopne
adc
add
pop
pop
scas
test
jns
and
bound
dec
stos
sbb
push
fwait
pop
in
cmp
pop
cltd
lahf
inc
pop
addb
cmp
repnz
jge
in
mov
pushf
cltd
out
xor
in
or
iret
xor
pushf
lcall
mov
mov
sub
popf
out
adc
xor
push
xchg
inc
cmp
cs
in
stos
mov
popl
scas
dec
sbb
out
div
mov
inc
mov
aaa
repz
cltd
enter
out
cmpsb
dec
mov
shlb
negb
fcmovbe
hlt
push
jmp
push
mov
cmp
push
lds
ficomps
fnstcw
push
xor
cmp
jecxz
or
lahf
mov
jno
in
repz
mov
pushl
add
icebp
and
inc
mov
mov
mov
mov
or
jno
adc
scas
in
xchg
pop
aam
dec
jno
cmp
nop
pop
shrl
or
icebp
fdivp
test
mov
sahf
mov
loop
or
lahf
push
pop
in
shlb
loop
push
dec
jbe
sahf
or
cmpsb
pop
cmovb
or
xor
mov
jecxz
lahf
push
clc
mov
inc
das
mov
adc
push
xor
push
iret
faddl
inc
out
outsb
mov
pop
fadds
xor
lcall
inc
repnz
addb
enter
nop
repnz
add
cli
mov
stc
loopne
dec
dec
ja
ds
pop
cmp
adc
iret
test
jno
rep
jbe
je
push
rolb
addb
test
out
daa
jno
jle
mov
pop
jp
push
iret
adc
pop
add
push
adc
xchg
adcb
aaa
shrb
jno
add
cmp
call
push
push
jo
mov
xchg
mov
push
pop
sub
add
cwtl
cmpsb
cs
mov
pop
loopne
daa
add
pop
mov
push
dec
lcall
sbb
push
lahf
jno
sub
ja
outsb
push
mov
xchg
add
pop
pop
xor
lea
push
out
loopne
pop
mov
inc
hlt
sub
ret
fmuls
push
rcrb
jno
sub
mov
dec
inc
mov
mov
mov
adc
cmp
addb
mov
pushf
adc
xor
pop
or
jle
add
out
lcall
add
stos
jmp
mov
lahf
call
mov
jno
rolb
lahf
aaa
call
pop
call
push
add
lods
jno
add
fcomi
ljmp
add
into
xchg
cmp
jmp
dec
sbb
sub
jle
cmpsb
imulb
ja
inc
mov
cmp
aaa
sub
test
rorl
das
scas
jno
mov
scas
add
popf
cmp
sub
lret
outsb
fisttpll
lahf
out
outsl
repz
push
nop
xlat
lock
sbb
jne
mov
mov
lock
loopne
add
sbb
scas
test
hlt
mov
repz
push
cld
dec
clc
push
lock
stos
cmp
in
aam
dec
dec
dec
dec
dec
out
mov
adc
pusha
or
sbb
push
push
add
enter
loope
xor
dec
push
push
xchg
notl
mov
ss
fadds
push
push
sahf
mov
cmp
mov
fistps
or
iret
pop
sub
add
iret
xor
and
mov
clc
dec
test
aaa
fisubs
inc
out
jl
fldl
push
xchg
cld
mov
xor
cmp
movl
xchg
out
sahf
cmpsl
adc
jbe
out
cmp
jnp
lcall
fwait
test
fidivs
pop
xchg
push
fimull
lahf
out
push
lret
jmp
dec
sarb
jo
pop
xchg
dec
stos
push
mov
sbb
es
pop
push
daa
xlat
inc
fmul
mov
shlb
cmp
jp
aaa
inc
lock
push
xchg
call
rolb
add
lahf
es
repz
sub
sti
pop
fwait
cwtl
mov
ds
push
mov
push
subl
xchg
jge
add
or
add
pop
lds
insb
add
pop
ja
fcmovu
add
pop
cmpsl
call
push
sbb
popa
or
inc
ret
mov
cmpsl
cmp
inc
xor
pop
sbb
dec
ret
pop
lret
pop
xchg
xchg
fistps
mov
mov
mov
push
dec
and
adc
pop
iret
sarl
incb
xchg
cltd
mov
push
test
faddp
popa
mov
aaa
sbb
sub
mov
push
inc
das
lock
or
push
scas
xchg
movsb
or
test
dec
scas
nop
or
out
or
adc
pop
dec
inc
scas
enter
pop
lock
ffreep
sahf
scas
or
mov
outsb
arpl
inc
add
or
ds
repnz
fbld
inc
pop
pusha
int3
inc
push
mov
loope
loopne
dec
xor
mov
dec
or
mov
vmovntps
add
mov
pop
inc
xor
inc
and
outsb
bound
sub
push
cmp
iret
repz
adc
add
add
cmp
repz
xor
jae
repz
push
ficoms
cs
testl
pop
push
sahf
adc
icebp
cmpsb
add
dec
push
ds
aas
add
sub
cmp
cmpsb
lods
push
dec
mov
sti
repz
out
mov
dec
mov
lcall
mov
rcrb
loope
in
insb
mov
mov
out
xor
scas
pop
mov
fnstcw
andl
push
icebp
sub
xchg
in
jo
repz
insb
call
pushf
idivb
iret
out
ljmp
iret
repz
sahf
jp
mov
repz
push
push
pop
popa
aaa
lods
rorl
push
divb
mov
in
rolb
mov
lcall
push
cmpl
jno
mov
lock
mov
mov
push
push
fisttpll
pmaxub
out
pop
cmp
into
in
iret
repz
or
outsl
dec
sti
push
mov
push
mov
iret
dec
ds
fstps
es
xchg
push
mov
cmpsl
fnstenv
das
fsubr
dec
in
movl
jbe
imul
or
push
ljmp
jnp
cmpsl
push
add
xor
sub
and
and
test
xor
aaa
das
xor
mov
mov
mov
das
adc
or
mov
adc
sbb
and
xor
popa
add
mov
jbe
fistpl
pop
fs
jg
sub
jae
xchg
ja
gs
out
int
ret
and
push
movsb
cmpsl
lcall
jecxz
call
test
cmp
mov
fisubrs
push
push
push
or
stos
stc
add
cmpsb
test
inc
dec
aaa
add
iret
rorl
lret
push
bndstx
cmp
mov
aam
mov
push
cmpsl
stc
dec
int
mov
pusha
mov
inc
jne
jne
fisttpll
pusha
mov
dec
inc
sbb
inc
cmpsb
test
xchg
out
add
add
call
mov
push
xor
pop
xor
dec
outsb
cltd
cmpsl
add
test
lods
pop
push
je
cmp
cmpsl
in
negb
bound
mov
dec
lcall
aaa
rcrl
cmp
pop
pop
cmp
sbb
arpl
push
mov
mov
inc
mov
ja
mov
sub
cmp
cmp
xor
pop
sbb
aaa
sti
das
inc
jne
imul
adc
pop
xor
xor
pop
lods
rol
inc
sub
aaa
sub
dec
imul
mull
arpl
xor
sbb
mov
cmpsl
movsb
addb
testb
mov
imul
repz
push
pushw
int3
out
sahf
out
sarl
int3
mov
xor
dec
sahf
aaa
rclb
push
insb
jl
fdivp
fdivrl
cmp
pusha
or
cmp
das
test
or
inc
in
mov
seto
sahf
ja
fbstp
pcmpeqb
sbbb
or
dec
pop
xlat
and
push
into
dec
push
out
push
push
testb
mov
dec
adc
clc
adc
fs
xchg
cmp
adc
adc
mov
push
add
jo
popa
insl
repnz
or
xchg
inc
pop
sbb
cltd
xchg
dec
ret
push
inc
and
inc
mov
sub
cs
mov
pop
cltd
push
mov
push
test
cmc
push
outsl
push
xchg
jbe
in
mov
sub
das
mov
mov
cmp
pop
outsl
and
push
and
push
pop
fcomp
mov
test
fcomps
imul
push
lods
push
outsl
scas
mov
mov
mov
dec
rcll
push
rcll
mov
rolb
inc
mov
iret
adc
inc
or
inc
call
dec
es
sbb
jmp
test
cmovno
and
push
and
fldcw
mov
pusha
nop
mov
int
pop
loop
lahf
out
lret
and
in
ja
int
cltd
in
cmpl
or
sub
mov
insb
push
fisttpl
ljmp
cmp
mov
mov
sbb
test
int3
xor
pop
mov
xor
sbb
mov
bound
aas
lahf
jnp
push
cld
adc
push
iret
fidivrs
or
js
pop
loopne
sbb
pop
dec
fs
shrl
test
mov
sarb
cmpsb
stos
fstpt
jecxz
push
push
jle
dec
mov
mov
mov
nop
push
ljmp
ss
aas
xchg
enter
das
add
add
add
enter
add
and
or
pop
enter
add
or
and
enter
enter
adc
sbbl
add
jb
pop
and
sbb
pop
enter
fs
pop
sbb
inc
cs
or
add
in
mov
cs
add
cmpsl
addr16
fbstp
jnp
iret
xlat
and
jnp
das
push
add
add
sbbb
push
out
lock
push
add
cmpsl
shrb
jns
inc
in
push
pop
test
lahf
adc
in
mov
in
das
xchg
jo
push
scas
mov
stos
in
mov
roll
enter
mov
addl
rorl
fistpl
daa
nop
das
inc
out
fldl
add
sahf
pop
xchg
mov
nop
lock
mov
or
enter
fnstsw
out
inc
sbb
xchg
out
mov
test
cmpsl
daa
outsl
insb
jnp
dec
ja
sahf
pop
clc
jb
pop
and
push
xchg
nop
sub
xchg
add
pop
clc
daa
sub
dec
iret
pushf
inc
ss
cmp
and
push
call
xchg
pusha
lahf
outsb
and
mov
mov
daa
mov
shll
sub
js
pop
jb
jns
jmp
and
cmp
nop
scas
pusha
jmp
js
xchg
xlat
clc
push
fbstp
mov
scas
xchg
loopne
and
dec
and
ljmp
daa
inc
push
jg
push
pop
adc
seto
adc
idivl
pusha
ljmp
xchg
shlb
sahf
cmp
cmp
outsl
pusha
clc
nop
push
add
test
fadds
jecxz
jmp
and
push
das
or
daa
enter
push
leave
mov
mov
das
or
loopne
add
repnz
clc
loopne
in
das
pop
mov
pop
xchg
daa
and
cmpsb
test
pusha
lahf
xchg
daa
sbb
daa
cmp
in
mov
scas
xchg
enter
stos
in
lock
pop
mov
insl
xchg
and
push
or
stos
in
mov
pop
mov
mov
decl
nop
and
out
add
fisubrs
and
rclb
sub
dec
out
pusha
lahf
xchg
lahf
fcomps
mov
shlb
push
dec
rcll
add
push
ds
xchg
jbe
outsb
dec
mov
out
cmpsl
cmp
daa
sbb
daa
xor
pusha
out
mov
lahf
xchg
in
mov
sub
pop
mov
fcomps
xor
sbb
xchg
dec
fsubrp
sub
cwtl
sahf
add
jns
add
add
jne
js
fcoms
mov
inc
mov
adc
fcomip
in
in
mov
or
xchg
daa
inc
push
lahf
inc
cmpsb
nop
adc
pop
adcb
fldl
pop
test
imul
outsb
nop
icebp
sub
fists
pop
in
cwtl
scas
add
outsl
js
sub
xor
mov
mov
lahf
and
sub
das
nop
aaa
shr
cmpsl
add
mov
shlb
sbb
and
repnz
adc
mov
push
decl
sbb
ja,pt
pusha
add
jbe
scas
xchg
js
cmp
inc
fiadds
pop
pushf
inc
test
xor
arpl
jg
inc
outsl
cmp
pusha
push
bound
and
lahf
cs
fiadds
push
sub
andb
jae
icebp
cwtl
push
push
hlt
or
sarb
mov
clc
adc
roll
pop
lahf
sub
cmc
pusha
mov
in
xchg
and
push
jb
pop
mov
mov
fsubs
pusha
pop
push
in
mov
sub
xchg
xor
adc
and
pop
lahf
pop
test
mov
jo
xchg
cmpl
adc
loopne
rcrb
jb
pop
div
xchg
out
jbe
daa
loopne
add
insb
sub
cmc
pop
jo
xchg
daa
pop
lahf
test
jbe
mov
neg
add
and
pop
push
iret
pop
sbbb
js
pop
cs
cltd
push
xchg
clc
push
adc
out
push
dec
add
outsb
mov
daa
xchg
jo
enter
adcb
clc
mov
sub
daa
daa
sbb
sub
inc
dec
and
xor
push
add
xlat
jbe
repnz
dec
stc
xchg
pusha
daa
inc
es
sbbb
loopne
sub
daa
cwtl
lahf
or
cmpb
fdivr
dec
repnz
xchg
cmp
hlt
jbe
daa
fcomps
dec
cli
lods
pop
insb
or
xchg
inc
test
enter
outsl
pop
in
or
cli
enter
xor
lods
fsubs
push
pop
lahf
add
fstl
xchg
test
push
sti
loopne
sub
js
nop
mov
in
cmpb
iret
enter
hlt
mov
push
mov
inc
xor
seta
cld
daa
call
pop
dec
aas
outsl
frstor
aas
inc
daa
ja
daa
or
adc
jo
mov
fdivrs
daa
xchg
adc
xor
outsl
shlb
mov
cld
lahf
mov
nop
push
adc
xchg
daa
inc
or
pusha
lahf
pusha
pop
lcall
push
jl
dec
std
pop
incl
xchg
outsl
and
pop
out
enter
pop
insb
mov
out
loopne
xchg
repnz
add
enter
and
push
pusha
outsl
outsl
mov
incl
iret
nop
out
cltd
push
mov
cs
repz
fistl
incl
xor
rcrb
pop
enter
andb
sets
pop
pop
test
mov
lahf
xchg
daa
and
pusha
or
pop
iret
inc
rcr
test
ljmp
jge
aaa
sub
add
xchg
into
add
fdivrl
daa
mov
mov
iret
enter
lods
pop
enter
lock
bound
or
pop
fistps
add
outsb
and
xor
daa
pop
add
mov
jo
bound
add
outsb
pusha
add
iret
or
insb
fldl
test
fsubs
fiaddl
pop
lahf
jo
or
add
or
iret
push
adc
or
nop
out
sbbb
daa
or
sub
push
pop
testb
aas
outsb
mov
test
pop
out
call
rorl
mov
insl
in
add
lahf
xchg
add
fistpl
adc
addb
mov
ja
daa
sub
inc
lods
adc
xorl
dec
jae
cmp
out
pop
add
mov
into
inc
mov
sub
dec
rorl
xchg
pop
rorb
pop
or
sbbb
pop
inc
das
test
mov
fcomps
popf
fcmovne
orb
ficoml
inc
pop
sbb
sub
inc
shrb
in
sub
nop
and
loop
mov
enter
loop
loop
push
repnz
nop
add
inc
and
pop
xor
pop
addr16
pop
and
in
mov
test
or
xchg
jo
push
pop
mov
nop
cwtl
lcall
enter
dec
adc
shlb
lock
push
enter
mov
in
sub
mov
sbb
xchg
push
xchg
dec
out
cmpsl
pop
add
leave
shrb
or
and
pop
nop
aas
push
test
repnz
inc
ljmp
and
adcb
popf
out
pop
rorb
ljmp
repz
pushf
popf
loopne
adc
lahf
sbb
es
jbe
mov
in
sbb
jg
cmp
xchg
push
pop
pop
push
dec
loopne
jbe
jo
jae
es
fwait
outsl
cltd
sahf
add
cmpsl
or
scas
cwtl
lahf
rorb
push
int3
xchg
psubb
in
in
call
push
enter
dec
or
xor
leave
lods
cmp
cmp
inc
dec
add
fs
ja
daa
iret
mov
lea
push
fdivr
inc
push
enter
in
fsub
mov
scas
pop
adc
jb
out
push
cmp
out
add
add
xor
mov
in
jbe
dec
dec
outsl
push
cmp
fmul
jo
seto
push
leave
xchg
sbb
or
rolb
nop
or
push
xchg
inc
fmuls
nop
lock
or
adcl
jbe
outsl
xchg
or
dec
aad
sub
or
filds
pop
and
out
xor
pop
aaa
jns
cmp
pop
and
scas
pusha
dec
lock
or
xchg
test
das
rorb
jbe
loopne
out
mov
mov
ds
inc
lahf
popf
in
bnd
push
out
je
mov
cmovs
push
push
outsl
jg
subb
xchg
jg
jnp
daa
push
in
fiaddl
test
adc
mov
scas
outsb
push
loopne
push
fdivp
push
fwait
pushf
pushf
pop
jmp
push
cmc
jbe
aas
xor
pop
inc
setl
leave
pop
movmskps
jo
xor
setg
pop
jmp
in
adc
mov
jne
dec
and
iret
aas
add
sub
xor
and
cmp
outsl
jmp
verw
or
mov
inc
call
das
popf
int3
inc
cmpsb
ljmp
and
js
pushf
pushf
pushf
adcl
adc
outsb
mov
rorl
fildll
out
out
push
push
lret
pop
iret
cli
pop
push
add
pop
mov
xor
inc
pop
jb
push
add
mov
sub
push
mov
inc
cs
xorl
pushf
in
scas
adc
dec
in
clc
adc
mov
adc
in
cmp
cmpsl
in
adc
inc
lcall
and
outsb
test
and
in
decl
mov
cwtl
scas
fmuls
dec
adc
xor
or
jae
repz
add
add
add
fsts
sbb
jg
mov
sub
push
pop
xchg
fwait
adc
push
jo
decl
cmp
cltd
inc
ds
scas
or
adc
cmp
mov
fs
in
clc
verw
or
pop
out
push
out
popl
fbstp
pop
cmp
incl
push
dec
fcomps
pusha
jb
das
push
call
cwtl
outsl
mov
cmp
pop
enter
nop
push
js
cs
pop
add
jg
out
pop
mov
dec
and
sub
cmpsl
pop
and
lods
outsl
and
push
popf
out
pushf
pop
pushw
add
sahf
xlat
out
push
add
add
sahf
push
lods
pop
mov
out
or
or
or
sbb
repnz
push
or
push
push
sbb
sub
cmp
repz
adc
push
repz
repz
jo
iret
repz
jle
mov
lcall
sbb
iret
repz
sbb
sbb
out
push
cld
pop
ds
sbbl
in
mov
pop
push
dec
sbb
iret
and
jo
cmp
enter
icebp
xchg
icebp
mov
sbb
icebp
mov
jb
enter
icebp
div
add
inc
mov
adc
and
cs
in
xchg
and
pop
repnz
jb
repnz
repnz
repnz
lods
repnz
cmp
repnz
repnz
jns
out
push
push
push
sbb
sub
sahf
out
cmp
bound
dec
push
out
jne
jp
push
call
scas
sbb
rcrb
cwtl
xchg
cmpsb
mov
repz
push
faddl
out
jbe
test
fsubr
mov
test
scas
cwtl
xchg
xchg
insl
daa
mov
pavgb
jg
call
add
lcall
dec
add
ja
and
sub
jp
mov
jg
test
dec
js
pop
jb
pop
mov
jp
mov
iret
lock
and
sbb
hlt
and
adc
cltd
and
lock
dec
js
push
lods
pop
xchg
lods
mov
cs
repz
fwait
pushl
leave
mov
roll
cmp
stos
xor
inc
jg
outsb
or
jns
out
or
jbe
sahf
pcmpeqw
cmc
cmp
repz
adc
adc
mov
lock
sbb
inc
in
push
jns
add
sbb
jb
cmc
push
notb
negb
repnz
inc
imulb
sbb
dec
notb
pop
punpckhwd
cmp
or
je
jg
xchg
sub
je
idivb
insl
dec
ja
dec
shl
scas
jo
sbb
fdiv
jecxz
das
stc
adc
add
lahf
or
and
sub
xor
inc
push
add
iret
add
dec
idivl
jns
dec
jo
jnp
xchg
xchg
notl
pop
out
mov
cmp
mov
bswap
mov
mov
mov
lock
daa
daa
mov
add
femms
sbb
mov
cmp
fucomi
jbe
mov
pusha
outsl
pop
out
mov
mov
iret
int
outsl
mov
nop
clc
lock
out
mov
clc
ficoml
rorb
xchg
sub
nop
lock
adc
loopne
imul
pop
repz
pop
pop
scas
cmp
icebp
mov
stc
jmp
pop
fs
repnz
mov
fistps
xchg
pop
pminsw
add
xchg
pop
and
dec
call
sub
and
and
jg
pop
or
mov
mov
cwtl
out
add
pop
xor
add
mov
add
mov
jo
and
pop
pop
je
inc
jo
jo
or
lahf
xchg
or
aas
test
aaa
xlat
add
mov
pop
sti
and
cmp
scas
sti
sti
insb
daa
and
inc
sti
dec
pop
jb
mov
enter
adc
jb
jb
enter
ret
outsb
jb
pop
cmp
subb
cld
jg
dec
sahf
fistl
dec
add
outsb
fnstsw
mov
fstpl
or
cltd
inc
pop
add
mov
cmp
mov
and
in
and
test
and
call
out
fmuls
test
mov
adc
push
ljmp
sbb
push
std
das
cmp
arpl
and
ret
mov
scas
mov
fisttpl
enter
and
jmp
pop
and
pop
add
dec
clc
and
mov
daa
cmc
in
rcpps
incb
repnz
daa
cmpb
xchg
cwtl
daa
mov
mov
lahf
sub
inc
sub
sbbl
mov
mov
in
sub
call
rol
sub
repnz
push
enter
cmp
sub
out
inc
sub
sub
cmp
sub
jo
mov
and
ud0
daa
push
in
or
fsubrs
fwait
and
daa
cmpsb
ljmp
mov
decl
mov
idiv
pop
ffree
mov
pop
push
out
pop
mov
ljmp
add
scas
mov
pop
lcall
dec
mov
jo
sub
dec
jb
pop
jb
jo
cmp
sbb
dec
pop
mov
inc
lock
clc
push
cmp
shrb
sbb
inc
pushf
xchg
and
sub
add
fildl
and
sub
in
xor
push
pop
add
dec
push
dec
cmp
jae
push
pop
push
add
add
jb
jge
mov
repz
or
cmp
repz
mov
mov
repz
pavgb
repz
adc
adc
adc
sahf
out
lcall
jns
out
and
sub
mov
dec
push
cmp
repz
ficoms
sbb
insb
repz
repz
iret
repz
lea
cwtl
and
cmp
and
iret
repz
iret
repz
in
lock
sub
add
adc
jns
out
sub
inc
js
out
xor
mov
lods
nop
iret
dec
dec
sbb
cs
push
hlt
ret
add
add
jb
enter
add
inc
mov
add
add
add
jns
enter
add
push
or
out
sahf
out
sub
cmp
sahf
out
sahf
inc
adc
arpl
jns
out
jno
jg
out
sahf
out
fwait
push
test
pushf
mov
das
iret
and
pushf
rolb
add
add
cmpsb
ljmp
add
jbe
lahf
and
adc
pop
dec
setl
into
pusha
femms
test
outsl
add
nop
or
add
adc
xchg
sub
fimull
shl
xchg
sub
pusha
lock
push
mov
adc
push
dec
cmpsb
cwtl
push
dec
scas
nop
sub
scas
mov
js
pusha
or
rorb
enter
out
push
scas
out
icebp
push
sahf
aaa
jb
cld
push
pop
pop
adc
pop
sbb
or
or
or
jns
out
or
push
add
jns
or
xchg
out
decl
adc
mov
scas
lods
iret
mov
ret
out
bswap
push
add
jns
out
out
add
adcb
pushl
pushl
add
sub
push
mov
jbe
mov
lock
subb
pushl
pop
pushf
out
pushf
dec
mov
mov
pusha
jg
sahf
fcmovne
rcr
pop
or
lock
invd
iret
jae
or
add
sub
int
outsb
das
aaa
cmovb
jg
push
outsb
sub
pop
push
pshufw
jg
inc
fsubrs
xlat
outsb
push
int3
decl
mov
pushf
pop
and
fmul
xchg
pushf
pop
and
clc
clc
inc
inc
pop
and
or
or
leave
adc
sub
mov
daa
pop
pop
push
cmovo
out
lcall
pop
js
mov
nop
dec
enter
test
pushf
pop
rcr
loopne
xchg
inc
mov
cmp
add
jnp
or
sbb
pop
xor
scas
cwtl
xchg
cmpsl
scas
push
pop
or
or
lods
jae
mov
loopne
iret
jg
aas
or
sub
pop
mov
dec
xor
sub
xchg
loopne
add
inc
cmp
dec
orb
dec
and
mov
cmp
dec
lea
mov
mov
iret
leave
repz
js
std
pop
loopne
ss
aas
adc
jmp
cmp
je
push
inc
dec
push
mov
cmp
out
nop
xchg
es
xchg
jnp
push
scas
aas
pop
xor
mov
inc
mov
dec
subl
pop
push
jle
ret
outsb
inc
push
fists
cmp
dec
leave
sub
mov
or
ds
in
and
jg
fbld
sar
mov
scas
ja
inc
aas
popl
iret
clc
adc
loopne
cmpsl
in
sub
out
add
test
pop
push
lcall
adc
jo
sub
inc
jno
xchg
loopne
enter
ficoml
lahf
xchg
fcompl
mov
xor
cmp
or
sub
jo
cwtl
sub
xchg
sub
xchg
mov
repnz
cmp
sub
loopne
dec
add
scas
in
xor
or
jo
push
in
in
cltd
cwtl
inc
dec
pop
leave
leave
adc
jb
or
lcall
xchg
pop
xorl
xchg
jg
xor
sbb
cmp
jo
enter
outsl
mov
outsb
mov
pop
pop
and
pop
adc
dec
enter
repnz
add
push
scas
popf
fcompl
iret
xor
and
push
or
dec
pop
pop
and
bswap
adc
loopne
pop
cmp
psubsb
mov
jnp
adc
aas
xor
je
cmp
xor
cmpb
jg
push
add
shrb
xchg
out
je
orl
jae
movsl
or
lock
lods
aas
insb
ljmp
and
adc
inc
shrb
les
sti
push
lods
in
scas
mov
shrl
call
loopne
and
pop
mov
repnz
fnstcw
inc
dec
xlat
incl
enter
inc
adc
jns
stc
pop
call
adc
adc
adc
jns
cmp
adc
jns
jns
jne
adcl
adc
jns
adc
adc
jns
in
repz
femms
sahf
out
sahf
adc
adc
nop
or
adc
inc
adc
cmpsl
cmp
push
lods
inc
pop
orb
xchg
adc
adc
pusha
rorb
insb
daa
push
enter
emms
test
outsl
shlb
push
imul
call
push
xchg
bound
push
push
inc
outsl
jb
pop
dec
dec
push
nop
pop
xor
decl
mov
mov
das
fnstcw
rorb
inc
lock
adc
push
enter
xor
mov
mov
adc
pop
push
scas
outsb
daa
push
enter
pop
push
out
or
nop
fwait
push
mov
mov
jg
or
xbegin
loopne
repz
lahf
xchg
and
adc
inc
and
and
dec
adc
xchg
adc
pop
out
insb
mov
aas
nop
mov
mov
mov
rcl
and
lock
sub
and
push
dec
pushf
mov
adc
jae
dec
push
addps
fnstsw
js
cltd
mov
fists
pop
and
dec
lock
dec
and
outsb
push
int3
inc
decl
clc
xor
outsl
js
jb
adc
xor
test
pop
das
fwait
je
data16
icebp
mov
iret
jmp
repnz
pop
push
out
push
add
daa
iret
repz
test
mov
jbe
les
daa
icebp
mov
jmp
pop
push
fisubrs
mov
dec
iret
scas
pop
mov
jo
lcall
sahf
dec
mov
pop
cmp
sbb
cmpsb
cwtl
lods
adc
adc
push
pop
cltd
pop
dec
pop
sbb
sbb
sahf
out
sahf
add
add
jns
popf
test
mov
jp
outsb
mov
outsl
rorb
add
lcall
lock
nop
inc
das
rorb
sub
inc
rorb
decl
sbb
popf
push
leave
int
punpcklbw
cmp
fcmovne
cmp
jg
adc
sbb
pop
sbb
cmp
add
cmp
daa
daa
xlat
loop
or
sbb
clc
add
push
sbb
jns
out
and
das
cmp
inc
jecxz
inc
adc
jne
add
test
decl
nop
push
call
add
dec
scas
out
and
push
sbb
push
ja
fdivs
lock
in
sti
pop
rclb
pop
mov
daa
lcall
sbb
sbb
dec
xchg
decl
je
mov
scas
pop
and
inc
cs
cmp
mov
dec
add
mov
sbb
fmuls
out
ret
dec
inc
mov
jb
out
sbb
and
pop
mov
ljmp
dec
test
cs
cwtl
bound
pop
mov
pop
ror
ror
pop
dec
adc
mov
sbb
dec
outsl
xchg
sub
das
sbb
adc
xor
sub
xchg
cmp
push
leave
adc
xchg
pop
sbb
leave
adc
nop
adc
sbb
leave
leave
leave
sbb
push
enter
push
shl
xchg
daa
daa
clc
add
push
push
aam
jns
sbb
add
jmp
adc
push
dec
push
lahf
xchg
sub
pop
pop
inc
js
pop
inc
xchg
jo
pop
pushf
dec
lock
test
pop
mov
lds
pop
jno
jbe
fnstsw
push
mov
fwait
movups
fistps
pop
and
leave
sub
je
sub
pop
in
sbb
push
push
push
lock
subb
pop
aas
adc
pop
mov
nop
sub
into
orb
outsl
loopne
mov
mov
cmp
sub
scas
pusha
or
sub
iret
and
sub
xchg
xchg
cmp
shrb
xchg
xchg
fs
lock
xchg
xchg
mov
iret
leave
mov
add
xchg
sub
push
in
and
fiadds
push
xor
or
push
add
stos
das
xchg
cmp
push
pop
dec
scas
popa
test
push
iret
mov
hlt
iret
cld
and
nop
imul
dec
scas
sub
push
cmp
push
enter
enter
pop
adcb
push
js
mov
mov
clc
mov
push
sub
xchg
sub
dec
xchg
sub
xchg
fdivl
xor
sub
cwtl
add
rclb
mov
rorl
enter
das
aaa
cltd
inc
push
xor
mov
pop
push
xchg
pop
inc
ja
push
or
or
nop
push
push
sbbb
dec
decl
lcall
inc
dec
call
cmp
cmp
sbb
pop
icebp
call
cmova
dec
xor
pop
jg
and
movsb
fwait
lcall
in
loopne
sub
fs
sbb
pushf
or
sub
pop
adc
xchg
iret
les
out
leave
mov
dec
jmp
pop
outsl
fcoms
lds
mov
daa
or
divl
pop
fsubrs
dec
dec
loop
dec
scas
sbb
decl
or
pop
or
dec
adc
mov
adc
dec
mov
pop
pop
sub
mov
lock
and
adc
lods
or
bsf
loopne
lcall
out
mov
ljmp
ficompl
nop
scas
pop
and
fdivs
sub
xchg
xchg
push
enter
dec
repnz
sub
fsubs
pop
out
leave
adc
sub
cmp
test
and
pop
lds
cmp
fcoms
xchg
cmpxchg
or
enter
sbb
push
or
ret
jns
inc
out
ds
cs
inc
push
sub
push
inc
es
dec
add
mov
jae
push
sub
dec
inc
pop
and
mov
jo
loopne
pushf
push
jb
pop
dec
dec
push
test
jb
pop
js
mov
ror
mov
out
lock
add
sub
xchg
jae
or
clc
je
sbb
ds
sbb
push
lock
sub
or
pop
mov
insb
sbb
pop
xor
pop
jb
push
pop
nop
mov
test
loopne
inc
pop
jb
or
je
inc
xor
iret
xchg
sub
pop
bound
js
add
iret
dec
faddl
bound
inc
out
cmp
or
jp
daa
pop
or
sub
pop
dec
xor
mov
mov
xchg
scas
pop
jb
pop
mov
adc
shlb
jns
mov
dec
decl
fs
fs
add
adcb
repnz
push
nop
and
fs
nop
fs
mov
arpl
adc
xorb
cmp
mov
mov
nop
adc
pop
mov
mov
push
enter
adc
sub
scas
loopne
shll
xor
mov
data16
clc
push
lahf
mov
or
or
call
outsl
in
imul
inc
push
icebp
dec
lods
xchg
jmp
scas
fsubs
or
push
or
add
sub
fisubs
rdmsr
sub
outsb
xchg
xor
mov
lock
addr16
enter
pop
mov
subps
cmp
jl
or
xchg
sub
nop
push
mov
mov
sahf
pop
mov
and
call
push
enter
dec
pop
imul
subb
sbb
xchg
std
inc
scas
mov
js
xchg
pop
fsubr
or
adc
daa
pop
sbb
push
mov
xor
scas
pusha
push
cmp
outsl
or
adc
jmp
inc
enter
mov
test
psubsb
aas
sub
imul
mov
dec
dec
inc
in
mov
mov
nop
mov
movsb
add
rcrb
shlb
ljmp
mov
clc
push
or
nop
in
jmp
mov
push
jb
loopne
mov
testb
xor
in
stos
add
addps
xchg
push
or
add
nop
xchg
ja
cwtl
insl
test
or
leave
shrb
mov
repnz
mov
and
or
pushl
mov
pop
or
sbb
or
js
loopne
mov
js
and
in
outsl
enter
repnz
lock
mov
outsl
pop
fwait
or
xor
pop
adc
leave
and
add
enter
jb
adc
lds
adc
dec
and
mov
pop
dec
nop
imul
sbb
and
fdivl
scas
cmp
pop
or
lods
test
test
outsb
pop
or
pushf
or
pusha
jno
or
scas
sub
je
xchg
iret
cmp
paddsw
out
mov
or
sbb
call
test
js
mov
enter
out
xchg
scas
adc
daa
push
or
in
add
lahf
out
in
and
pushf
pushf
fsubrl
mov
popf
pushf
pushf
pushf
fimull
jb
push
lsl
sub
dec
and
dec
sub
lcall
fs
fucomip
jb
cmp
jb
jb
jae
in
loope
out
pop
inc
jae
adc
push
jb
mov
enter
jae
arpl
sbb
scas
adc
and
and
fiadds
leave
and
pop
leave
nop
or
nop
shr
mov
lahf
and
jne
jne
and
pusha
cli
inc
push
and
pushl
cs
sbb
cmp
xchg
ffreep
jne
jne
cs
lea
lock
es
dec
cmpsb
in
arpl
dec
leave
xchg
mov
fs
mov
das
jl
sbb
xchg
daa
or
popf
xchg
xchg
dec
sahf
ja
xchg
mov
pusha
daa
nop
xchg
pushf
fisubrl
jo
lahf
clc
xchg
xor
jbe
sub
xor
lods
mov
pop
push
imul
inc
daa
nop
mov
dec
push
stos
sbb
push
push
out
or
test
or
inc
inc
xor
orl
movsb
and
adc
ja
mov
mov
imulb
int
sqrtps
cs
sahf
int
test
iret
mov
int
popf
test
mov
mov
sbb
xchg
mov
xor
aam
inc
sub
and
add
mov
sbb
daa
push
xor
cs
fwait
leave
cmp
inc
or
int
imul
lock
ss
adc
adc
movsb
push
sbb
push
sahf
out
ds
es
add
jge
mov
in
mov
add
outsb
cmp
out
hlt
sahf
out
fwait
jecxz
in
pop
lcall
add
aad
fwait
fs
xchg
mov
out
aaa
dec
mov
repz
add
push
mov
cmp
rorl
sti
mov
in
mov
repz
lret
loopne
mov
shrb
shll
cmpl
pop
int
push
sub
adc
xor
sar
mov
cmp
out
xchg
push
push
sbb
fsub
enter
repz
fildl
les
xchg
pop
jmp
daa
in
jmp
push
and
lahf
sbbb
daa
out
pop
dec
testb
ficoml
mov
jne
jmp
jmp
or
aas
dec
fsubrl
cmp
push
sub
daa
or
push
or
mov
xchg
sbb
cld
addr16
adc
xor
or
nop
or
aas
push
jno
aad
or
push
dec
stc
mov
push
add
lods
push
push
push
lods
inc
cmpsb
daa
testl
inc
or
cmpsl
icebp
add
add
out
or
ss
out
bound
push
sub
and
add
outsl
inc
dec
inc
test
decl
rolb
and
mul
inc
and
dec
pop
and
sub
icebp
adcb
mov
aad
mov
adc
mov
decl
aam
add
das
cmp
push
arpl
subl
call
test
push
add
add
adc
add
jne
aaa
clc
mov
jmp
out
rolb
jmp
ljmp
sbb
ljmp
lcall
or
in
daa
fiaddl
pop
sub
push
in
daa
sub
test
push
jo
mov
aas
mov
add
rcrb
test
sub
shrb
add
addb
mov
out
push
test
aas
out
pop
push
ja
and
and
xchg
adc
sub
shlb
adc
jg
testl
daa
push
pusha
aam
mulb
push
mov
rolb
mov
jg
and
pop
inc
jmp
incl
rolb
mov
ja
orb
mov
mov
push
dec
movsb
or
add
add
addb
data16
roll
sbbb
sub
jmp
add
push
or
xlat
andl
dec
pop
leave
dec
pop
inc
into
add
push
in
add
nop
test
dec
push
movsb
jmp
sub
daa
daa
push
push
add
pop
push
adc
xlat
bound
ret
adc
mov
das
sub
dec
add
shrb
add
inc
adc
jno
mov
mov
xor
pop
adc
mov
add
push
scas
and
sub
dec
add
lods
add
nop
adc
mov
push
or
outsb
les
pusha
inc
xchg
mov
in
nop
mov
xchg
push
cmp
xor
push
pop
sti
push
mov
adc
lahf
fmuls
sbbb
push
cli
adc
adc
notb
add
pop
pop
adc
adc
jne
daa
in
lcall
loope
mov
ret
add
adc
and
sub
pop
std
dec
sub
add
repz
push
test
pushf
gs
js
mov
mov
push
xchg
add
xor
rcl
repnz
xchg
inc
add
or
and
mov
inc
xchg
push
fs
stos
push
outsl
daa
add
inc
enter
pop
push
inc
out
pusha
nop
add
clc
mov
add
pop
jb
push
add
xchg
repz
inc
adc
mov
arpl
and
mov
orb
enter
pop
or
push
add
jns
out
add
add
sahf
push
rolb
or
or
sahf
out
or
or
sahf
push
mov
jns
out
adc
sahf
out
adc
adc
sahf
push
adcb
sbb
sahf
out
sbb
sbb
jns
out
sbb
sbb
sahf
push
pusha
pop
pop
and
sahf
out
and
and
jns
out
and
and
sahf
es
xor
sub
sahf
out
sub
sub
out
sahf
out
sub
sub
sahf
cs
adc
or
sahf
out
xor
xor
repz
out
xor
sub
iret
ss
aaa
lock
add
mov
leave
sub
mov
outsb
push
mov
out
sahf
test
cwtl
nop
mov
js
push
sahf
out
dec
inc
cmp
sahf
out
sahf
sub
sbb
or
cmp
sarl
lock
call
repz
fcom
ror
repz
int3
enter
mov
iret
repz
mov
cmp
repz
push
iret
repz
dec
cmp
and
or
mov
hlt
das
push
fmull
rcrb
mov
xchg
test
out
fs
inc
xor
call
add
cld
cs
inc
push
push
xor
sahf
test
fadds
in
rcrb
sahf
mov
adc
and
aas
cmp
jns
pusha
std
push
cld
inc
sti
jns
out
xor
and
adc
cmp
out
clc
cmp
call
iret
aam
mov
iret
repz
repnz
je
iret
cmp
out
fisttps
out
fdivrs
jns
out
in
enter
out
sahf
out
ljmp
mov
out
out
push
cmp
repz
outsl
push
in
jecxz
iret
repz
loop
push
loope
loopne
cmp
repz
and
add
out
cmpsl
stc
in
cmp
fstpt
out
out
fidivrl
fldcw
push
mov
inc
sbb
mov
cmp
cmp
imul
iret
repz
enter
movsb
iret
cmp
repz
into
je
pusha
repz
repz
dec
lret
and
out
sahf
out
aaa
leave
call
jns
mov
jmp
sahf
out
les
mov
out
iret
jo
push
rclb
out
inc
mov
jmp
out
add
out
ss
mov
cmp
enter
iret
repz
scas
push
mov
mov
mov
pop
idivl
mov
xor
jns
out
test
cwtl
pop
push
adc
and
scas
and
cmpb
out
sahf
inc
push
insb
fs
push
dec
or
cmp
fists
push
add
sbb
movups
add
adcb
clc
inc
pop
fnsave
jge
lock
mov
push
fcmovnu
addl
fcomps
and
inc
jg
cmp
enter
movups
sti
sbb
mov
add
rcl
imul
sbb
hlt
jg
scas
js
lcall
test
push
fcomp
pusha
jne
xor
add
nop
push
pop
mov
mov
push
dec
jg
outsb
inc
pop
pusha
cmp
xlat
mov
push
adc
pop
and
clc
add
sub
fs
je
push
inc
cmp
outsb
mov
fmuls
adc
sbb
and
dec
jno
or
or
pop
cmp
clc
xchg
jnp
nop
insb
movsl
dec
xor
sub
mov
movsb
sbb
sub
std
mov
push
jp
popa
das
xor
xor
sub
lgs
and
dec
inc
and
sub
mov
adc
dec
push
and
push
sub
inc
arpl
sub
aaa
add
xor
js
addr16
das
xor
test
inc
inc
sub
sub
aas
and
xor
inc
aas
xor
add
inc
mov
sahf
cmp
add
mov
jecxz
sub
shll
push
shlb
outsb
adc
push
ja
dec
mov
dec
dec
inc
sub
aaa
js,pn
add
enter
pusha
adc
pop
popa
outsb
push
insl
test
bound
popa
push
jp
and
pop
mov
jo
js
imul
bound
jns
fs
fistpll
inc
dec
push
dec
inc
inc
push
pop
and
jno
pusha
add
dec
outsl
fdivs
mov
add
ds
daa
int3
mov
mov
test
gs
push
inc
arpl
mov
xchg
popa
sub
fs
fnstsw
cmp
sub
xor
add
dec
push
leave
push
dec
scas
pusha
dec
fisubrl
into
icebp
mull
pop
call
sub
mov
aas
xchg
cltd
repnz
in
shll
clc
ret
sub
lea
and
jmp
in
fisttps
ret
jmp
mov
fiadds
pop
test
popf
out
cmp
daa
lock
dec
pop
mov
push
cld
dec
out
and
inc
dec
xchg
out
sub
adc
sbb
addb
jnp
adc
add
outsl
xchg
push
cmp
sub
dec
mov
jnp
add
lods
push
cmp
addr16
inc
jl
or
xor
sub
iret
int3
pop
enter
and
jg
insb
pop
int3
pop
or
daa
clc
dec
hlt
dec
jb
pushf
mov
in
in
repnz
enter
enter
jae
rep
mov
mov
fs
push
push
and
add
es
dec
rclb
int3
cmp
cmp
clc
pop
push
push
push
inc
sbb
mov
ljmp
lahf
or
inc
push
push
je
pop
not
fiaddl
popa
add
rolb
mov
fistl
and
mov
ljmp
pop
ja
add
add
inc
imulb
xlat
mov
lods
int3
cmc
jae
lcall
das
inc
mov
shrl
shlb
jne
dec
fwait
ret
and
cmp
sar
insb
sub
or
pushl
iret
aam
mov
jbe
mov
jmp
addl
xchg
ret
out
dec
inc
outsl
popa
mov
jb
pop
xor
hlt
rcl
sbb
lahf
inc
hlt
into
stos
aad
mov
fdivr
add
iret
mov
xchg
shr
or
stos
js
mov
mov
mov
sahf
in
pop
inc
dec
mov
mov
and
ljmp
lret
icebp
mov
mov
out
out
push
sub
mov
mov
ret
data16
hlt
out
fsubl
sbb
xlat
out
shlb
ror
mulb
adc
mov
lahf
ss
or
in
and
adc
out
mov
mov
push
xchg
sub
add
pop
fsts
and
add
outsl
add
mov
imul
addr16
mov
shll
fbstp
mov
push
insb
out
xchg
movsl
mov
pop
test
psllq
sub
ds
rol
mov
daa
shr
push
daa
inc
inc
cmpsl
scas
push
sub
mov
push
mov
jmp
push
or
lds
sbb
or
mov
cmpl
fsubrs
sub
mov
fistpll
push
push
mov
mov
pop
mov
lret
mov
sub
and
enter
ss
pop
xor
shll
push
roll
adc
xorb
fadd
rcrb
mov
iret
out
mov
call
pop
cwtl
ret
fistpl
inc
and
fisttpl
push
and
push
movq
jg
add
mov
stos
xor
enter
pop
sub
iret
and
fbld
ret
insb
cltd
into
cmpsb
js
inc
mov
sub
rcrl
int
mov
mov
adc
cmpsb
int
notl
mov
shrb
jo
ds
or
addr16
out
mov
mov
add
scas
and
cmp
aas
mov
fcompl
lods
inc
add
push
xchg
ret
push
sbb
iret
push
ljmp
mov
sub
std
mov
vpsubq
cmpsl
out
stos
adc
or
pop
push
mov
mov
push
or
push
dec
dec
loopne
rcr
daa
mov
ret
mov
cmp
rclb
xchg
int
push
and
enter
pop
inc
add
out
repz
push
rcll
or
xchg
rolb
aas
popa
ret
fistl
lret
outsl
movsl
and
nop
pop
das
lahf
fnop
sub
jae
xlat
lods
mov
loop
insb
sub
push
xchg
and
push
ret
sbb
out
in
mov
mov
xchg
xor
jmp
adc
cs
pop
mov
add
mov
ds
push
cmp
pop
roll
jae
mov
and
ljmp
pop
mov
push
scas
shlb
and
add
sbb
mov
scas
sub
xchg
fdivr
xrelease
test
inc
push
cmpsl
push
fsts
clc
outsl
sbb
outsb
jnp
dec
push
or
push
push
add
add
push
fwait
andl
jle
push
icebp
es
mov
fisttps
or
sub
das
mov
insl
push
ss
scas
xor
pop
aas
aas
leave
inc
fwait
sub
aas
out
aas
mov
xchg
fnsave
pop
cmc
push
dec
insb
mov
sti
call
xchg
dec
sbb
leave
lahf
xor
fldt
pop
cmp
xor
insb
jne
shlb
outsl
xchg
pop
gs
das
or
das
lds
cmpsl
xor
xlat
test
xchg
xor
dec
mov
aas
xor
stos
movsl
test
mov
jne
xor
mov
add
outsb
fs
cmpsl
or
xor
xchg
inc
das
insl
dec
or
das
push
loop
mov
fcmovbe
xor
push
cmp
xor
sub
das
pop
call
mov
imul
xchg
das
mov
cmpsl
or
insl
sub
pop
fcmovbe
dec
pop
push
imul
cmp
pop
add
mov
aas
xor
fiaddl
xor
xor
add
dec
adc
popf
lods
rcr
mov
jne
xor
shll
insl
xor
fisubrs
mov
push
add
cmp
pop
aas
adcl
jo
imul
aad
inc
sbbl
inc
aas
mov
adc
dec
sbb
push
imul
jl
push
dec
jg
test
ret
fisttps
mov
adc
outsl
cmp
mov
inc
mov
add
pop
imul
mov
ss
loop
aas
xor
pop
popf
sarl
rorb
data16
cmp
and
or
xchg
dec
cmp
jne
jp
or
adc
push
push
dec
sub
push
test
mov
pop
aas
push
xor
inc
sub
pop
lods
mov
push
rclb
mov
push
out
test
test
or
and
mov
aas
sbb
frstor
fistpll
incl
xchg
or
rcll
add
xchg
aas
shll
dec
arpl
outsb
jb
test
leave
dec
or
out
lahf
and
pop
rolb
push
mov
outsb
outsl
aas
and
push
jno
pusha
jno
push
and
out
and
mov
movntps
pop
xorb
pop
adc
mov
push
das
adc
inc
mov
push
add
addr16
add
aas
das
xor
das
pop
push
pop
inc
das
xor
cltd
lahf
repz
inc
xchg
pop
and
dec
dec
stos
sub
insl
into
movsl
cmp
mov
popf
lahf
inc
adc
push
jo
roll
insb
mov
aas
mov
cmp
test
cmp
xor
dec
mov
sub
dec
mov
jo
push
pop
inc
insl
bound
jae
cwtl
lods
sub
aas
sahf
out
and
insb
inc
push
jo
dec
insl
xor
je
add
xor
scas
mov
push
dec
dec
fistps
pop
dec
add
ret
outsl
popf
and
jbe
call
cmpxchg
adc
push
add
sub
out
add
adc
aas
or
enter
and
movsb
dec
adcl
inc
dec
insl
sti
dec
cld
inc
add
add
and
hlt
lcall
pop
xchg
das
push
fisttpll
fs
sub
pusha
mov
es
and
xor
adc
andnps
andb
pop
cs
mov
or
add
shr
pop
add
gs
cmp
fs
xlat
out
faddl
sahf
out
sahf
fcom
ror
enter
out
mov
pop
iret
repz
test
cmp
repz
push
cmp
repz
push
dec
inc
cmp
jns
leave
xor
push
and
or
repz
add
in
call
cmc
cmp
sarb
test
dec
xor
xor
add
inc
pusha
adc
inc
iret
rep
mov
test
or
stc
mov
or
adc
jns
cmpsl
adc
jns
push
sbb
sbb
fcomps
cmp
repz
sbb
js
lock
repz
jp
cld
out
lea
push
sbb
inc
pop
mov
and
ret
dec
or
insb
add
pop
or
inc
or
je
outsb
sbb
push
jo
insb
sbb
cmp
pop
pop
adc
cmp
repz
inc
or
iret
repz
sub
and
repz
push
and
sbb
sbb
repz
adc
or
mov
cmp
repz
sbb
push
repz
repz
shlb
int3
movsb
repz
and
and
mov
out
pop
lds
xchg
lcall
lods
mov
sarl
or
cs
repz
arpl
out
cmp
mov
jo
out
sahf
pop
and
inc
pop
jb
sahf
out
xchg
xor
out
push
jno
dec
iret
repz
dec
imul
repz
out
repz
out
xor
jb
out
sahf
out
mov
ljmp
inc
nop
int3
add
aas
fcomps
test
adc
jmp
dec
insb
pop
pop
add
add
insl
jle
cwtl
or
inc
xor
les
adc
mov
jmp
adc
scas
and
ds
mov
xchg
or
add
sub
xor
dec
es
and
add
push
rcll
insl
xchg
rcll
xor
xchg
mov
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
or
mov
adc
rorb
and
mov
roll
inc
add
filds
lea
push
nop
mov
push
ret
mov
scas
cwtl
mov
jo
adc
add
jecxz
sub
cwtl
cmp
mov
dec
jmp
and
test
fisubs
arpl
push
inc
popa
lds
das
xor
sub
sub
adc
pop
pop
pop
aad
test
add
fstl
fnsave
imul
add
ret
and
add
adc
add
xor
lds
outsb
push
adc
test
adc
ret
jnp
enter
sub
or
roll
arpl
dec
outsb
scas
sbb
xor
add
push
push
adc
mov
lods
lods
lea
dec
add
add
inc
add
add
inc
and
push
ret
add
jo
adc
add
add
fsubl
iret
push
sbb
mov
xchg
ret
jg
imul
adc
inc
or
push
and
arpl
jbe
mov
xchg
and
dec
popa
pop
adc
movsb
in
sub
push
inc
push
stos
jecxz
dec
ljmp
test
pop
adc
inc
and
xchg
jmp
or
or
and
stos
sub
pop
mov
movsb
fistl
sub
cmp
adc
ret
adc
cs
adc
pop
xchg
jne
mov
adc
pop
adc
pusha
add
xor
ja
in
pop
pop
sbb
push
push
inc
or
int3
jo
mov
lods
sbb
inc
mov
sar
sbb
pop
out
imul
imul
inc
add
pop
mulb
and
mov
pushf
ja
push
dec
jo
les
test
jno
sub
pop
movsl
add
loop
add
ss
xchg
sbb
pop
movsb
jo
xchg
cmp
xchg
subb
inc
popa
adc
pop
mov
flds
adc
xchg
jae
xchg
mov
push
pop
hlt
arpl
sub
push
pop
jge
jo
inc
mov
test
push
xor
movsl
sub
mov
dec
dec
or
mov
inc
fnstcw
lret
mov
sub
lods
cmp
mov
sbb
lret
mov
bound
sub
mov
sub
pop
adc
pop
pop
repz
inc
popa
jo
adc
push
roll
fstps
ret
or
sub
nop
icebp
mov
mov
add
inc
nop
inc
fcmovu
and
mov
xchg
push
dec
jge
inc
idivb
and
sub
adc
push
sub
push
cmp
push
mov
outsl
je
sbb
ret
push
test
add
add
xor
cmpsb
sub
push
add
jne
adc
add
mov
mov
sub
sub
inc
andl
movsb
xor
fldl
sub
bound
aaa
dec
popa
ljmp
popa
xchg
sub
or
sub
push
loope
xchg
ret
push
mov
nop
mov
add
rcrl
or
mov
sub
int
inc
dec
adcb
inc
xchg
or
jo
jbe
adc
and
ret
adc
add
sub
mov
or
mov
ret
cmp
dec
mov
mov
mov
add
imul
cmp
push
mov
add
aad
push
dec
add
push
xchg
dec
add
xor
dec
aad
ret
pop
insb
adc
lret
push
mov
cmp
xlat
dec
call
orl
shll
sbb
sub
sbb
push
andl
or
lods
dec
pop
aas
gs
pop
pop
pop
pop
push
test
pop
cmpsl
mov
and
and
mov
shll
or
dec
test
movsb
xor
inc
xorl
and
pop
sub
lods
rolb
aad
jg
and
adc
jecxz
inc
movsb
nop
imul
sub
and
add
pop
mov
test
test
shl
mov
sbb
imul
push
jae
sub
sub
add
outsb
jno,pn
add
pop
dec
roll
js
addb
dec
sbb
cmp
mov
push
outsb
xor
mov
add
jb
add
jbe
imul
leave
scas
fsubs
and
mov
in
insl
add
dec
jae
sub
mov
sub
add
insl
add
fisubl
xchg
shll
dec
rcll
inc
mov
push
xorb
iret
and
test
pushf
loopne
jbe
rcrl
pop
sahf
adc
shlb
pushf
or
or
imul
imul
imul
mov
jmp
ds
lock
push
sub
and
out
movsb
test
ret
adc
mov
add
and
xchg
subb
or
adc
cmpsl
push
inc
dec
and
dec
jo
add
cmp
xlat
jo
scas
shrl
or
addb
ret
leave
pop
and
mov
mov
jge
push
xchg
mov
movsb
clc
jne
andl
inc
xorl
sub
or
push
movsl
or
pop
dec
mov
dec
mov
lahf
add
dec
pop
popf
cmp
xlat
cltd
add
repz
sbb
mov
notb
and
loope
pop
push
or
dec
lea
pusha
xchg
ss
mov
dec
xor
or
rorl
or
and
xorl
dec
inc
outsb
jno
aas
out
pop
bound
je
call
jo
and
mov
or
imul
inc
or
xor
scas
add
loopne
xchg
and
movsb
pop
mov
adc
add
pushf
push
fdivs
ss
outsl
nop
ret
jno
add
or
mov
repz
les
push
cmp
lahf
lods
inc
nop
ret
popa
test
sub
add
push
and
and
or
push
push
cmp
mov
repz
aaa
dec
popa
cmp
dec
push
jae
cmp
loop
xchg
inc
pop
mov
and
inc
cs
stos
insl
icebp
adc
jne
imul
add
add
and
lret
loope
mov
add
dec
popa
sti
stos
jne
adc
mull
xchg
mov
push
jns
xchg
jbe
sti
pop
arpl
arpl
inc
pop
sbb
es
ljmp
add
xor
mov
movsb
cmpsl
xchg
inc
jb
scas
inc
inc
mov
xchg
ret
mov
mov
push
mov
clc
out
andl
movsb
nop
mov
and
sub
jae
xor
bound
push
dec
push
cmpsl
add
mov
add
push
dec
mov
xchg
adc
ret
push
mov
enter
mov
lods
das
mov
ret
sbb
pop
nop
jecxz
inc
dec
jnp
adc
cwtl
movsb
test
xchg
movsl
popa
sbb
xor
adc
pop
add
push
mov
icebp
or
scas
int3
lret
xor
or
imul
pop
mov
movsb
jo
mov
pop
movsl
movsl
dec
addr16
fwait
sbb
adc
popa
mov
adc
ret
cmp
or
mov
push
mov
sub
xchg
inc
xor
xor
xor
mov
sub
and
movsb
mov
outsb
push
aad
sbb
dec
and
xchg
sbb
xchg
dec
loope
pop
cs
ret
xor
lods
ja
data16
dec
or
or
adc
push
fsubl
or
and
mov
pop
stos
push
push
inc
inc
xor
and
popa
mov
add
popa
jno
lock
mov
xchg
dec
andl
jmp
insl
xor
int
sbb
daa
mov
add
add
pop
dec
or
xchg
adc
add
xchg
movsb
in
add
push
and
and
out
pop
loope
and
pop
add
sbb
and
pop
sbb
shrb
inc
popa
jne
dec
or
imul
ret
dec
push
pop
adc
stos
bound
ret
push
and
sub
hlt
je
insl
sbb
adc
incl
jne
add
add
add
pop
lods
inc
push
jecxz
add
or
and
add
outsl
in
je
adc
cli
push
adc
xor
pop
push
and
mov
push
jecxz
push
jbe
lcall
lock
lds
aam
dec
clc
pop
sub
push
or
sub
adc
jecxz
push
loopne
outsl
adc
jo
comiss
jecxz
inc
adc
sbb
prefetchw
es
xlat
out
fisubrl
ret
sbb
pop
pop
and
xchg
test
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
