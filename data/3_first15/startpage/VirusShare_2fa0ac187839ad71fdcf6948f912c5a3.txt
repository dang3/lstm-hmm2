outsl
dec
ljmp
push
mov
or
mov
les
sti
std
lea
mov
and
testb
call
pushl
pushl
leave
cmp
setne
cmp
jne
push
adc
pop
mov
mov
mov
call
mov
rclb
pop
lea
push
xor
push
dec
sbb
inc
mov
flds
adc
sub
das
inc
cmp
jne
mov
jge
out
out
cmp
test
lock
jb
push
push
push
movzbl
int
push
xchg
cwtl
xchg
mov
xchg
push
pop
xchg
push
push
push
mov
mov
dec
pop
pop
dec
and
mov
mov
adc
int3
add
mov
pop
int3
jge
in
xchg
push
lock
sbb
decl
pushf
add
fucomp
pop
sti
push
call
or
and
outsl
out
dec
test
jne
push
pop
ret
jmp
sti
add
add
sbb
aaa
mov
fmuls
and
add
mov
fcomp
outsl
fsubrs
or
rolb
sahf
inc
imul
out
and
ss
lea
adc
sti
xchg
jmp
insl
inc
pop
dec
push
and
out
addb
pusha
cmp
push
add
jmp
mov
inc
test
jne
std
sbb
ret
push
sub
lods
fnstcw
test
sbb
sarb
cmp
push
add
imul
cs
xchg
mov
imull
testb
mov
std
decl
mov
ja
les
ja
mov
inc
mov
iret
adc
or
lock
sub
jg
mov
mov
push
and
fstpt
add
fldenv
fwait
xor
movsl
adc
add
push
inc
repnz
and
add
and
and
or
and
scas
and
xor
movsb
adc
or
ret
add
aaa
nop
aas
lret
dec
lret
test
pop
ret
loope
mov
fidivs
jae
dec
sbb
pop
incl
outsb
adc
cwtl
icebp
orl
mov
cmpxchg
int3
push
mul
add
lret
in
push
mov
sar
data16
push
push
mov
mov
pop
pop
ret
push
push
push
mov
ja
divb
push
fistps
pcmpeqd
lea
add
add
mov
notb
add
jb
pop
pop
xor
inc
adc
imull
sbb
and
push
pop
jne
mov
or
jle
mov
je
inc
and
push
jp
outsb
stc
fs
pop
cmpsl
add
or
jge
das
fs
inc
adc
inc
mov
fidivrs
adc
mov
inc
test
jne
xor
jbe
inc
nop
ret
sub
push
push
add
xchg
in
mov
add
insb
mov
xorl
mov
shrl
push
mov
or
jge
outsb
lret
pop
jmp
fimuls
pushf
mov
cmp
aaa
push
dec
ss
cs
sbb
sbb
cmp
jg
mov
or
pop
lcall
add
add
int
push
xchg
sti
push
add
adc
mov
outsb
and
lock
into
or
add
or
mov
jbe
add
mov
outsb
xchg
dec
or
or
pop
js
pop
push
lea
adc
dec
or
pop
push
pop
inc
shrb
dec
stc
test
cmovno
sub
popa
xchg
mov
add
sbbl
push
ds
cltd
xor
adc
jo
stc
mov
adc
sub
nop
and
sub
xchg
je
test
repnz
xor
cs
jmp
xor
jmp
stos
test
shlb
ret
mov
incl
fistl
lods
push
mov
push
push
mov
aas
outsb
mov
xchg
push
clc
sbb
or
cltd
or
sbb
mov
sub
push
imul
popa
mov
cmp
push
pop
mov
adc
adc
jecxz
pop
adc
aad
mov
outsb
push
or
fdiv
std
fldt
push
cmpl
inc
lock
cmp
js
add
fidivs
jge
adc
add
movl
insl
push
addb
adc
imul
push
bound
mov
sub
add
mov
in
or
rclb
pusha
sbb
pushf
sub
clc
in
lods
jg
dec
add
jge
jmp
inc
out
pusha
mov
hlt
lea
push
dec
adc
clc
inc
mov
cld
fcmovnu
loopne
mov
test
push
lock
jp
push
jno
sub
pop
pop
cmp
push
mov
popa
adc
mov
mov
adc
cmp
mov
or
push
cmp
sar
into
or
add
bnd
jo
mov
and
pop
jle
mov
imul
dec
lret
cmp
das
cmp
add
push
jmp
add
adc
mov
pop
push
and
add
ret
movsb
ret
pop
mov
out
jo
shlb
sbbl
jb
mov
in
or
inc
or
pop
dec
add
sti
mov
ret
jecxz
cwtl
jl
adc
adc
sbb
push
jmp
clc
mov
or
fwait
mov
daa
push
cmp
ja
mov
jle
jno
or
out
mov
clc
in
adc
cltd
xchg
pop
cmpsb
mov
pushf
adc
xchg
sbb
leave
adcb
pop
adc
outsl
das
movsl
nop
pop
and
repz
xchg
lock
lahf
fwait
cli
or
or
aas
cmp
adc
movlps
pop
inc
lods
test
cmpl
sti
fwait
or
cmp
jne
ja
out
mov
addr16
add
adc
cmp
inc
add
inc
add
xor
ljmp
dec
adc
jg
pop
push
mov
stc
or
enter
popf
mov
xchg
adc
jmp
rorb
dec
or
xlat
mov
push
push
jmp
jmp
sbb
pop
adc
fisubs
mov
mov
ret
cs
push
add
insb
mov
jnp
test
xor
sub
adc
push
je
or
je
push
jnp
sbbb
in
xchg
or
adc
pop
mov
mov
inc
and
mov
add
or
setle
dec
jge
or
mov
fisttps
or
fidivrs
imul
aad
lcall
push
mov
add
das
push
pop
xor
inc
cld
cmp
ret
mov
orl
mov
out
mov
pop
sbb
xchg
int3
shlb
push
xor
cmp
je
mov
push
push
sbb
push
pop
sub
adc
xchg
sbb
pop
cmp
add
loopne
add
aaa
mov
push
pop
inc
pop
mov
repz
sbbb
adc
sbb
sbb
scas
jmp
mov
jmp
add
cmp
imul
dec
sbbb
div
mov
xlat
push
mov
push
pop
out
jmp
in
mov
sbb
dec
mov
pop
sub
and
xchg
stos
jo
orb
cld
cmp
enter
lret
add
xchg
fcomps
fdivrs
xchg
das
mov
cld
jl
lea
push
or
fs
ja
add
jmp
inc
push
push
lds
inc
jo
pop
and
or
cmp
sahf
pop
rcrb
int
pop
push
or
or
cmp
or
adc
xor
jp
mov
push
add
arpl
sbb
adc
sub
arpl
lds
sbb
scas
ror
push
lds
or
cmp
fsubrp
xchg
pop
pushl
push
in
test
jge
jne
call
and
mull
sbb
jge
inc
push
int
fstpt
cmp
add
and
sbb
jb
adc
mov
movl
add
in
add
loopne
cltd
push
push
ja
rorb
gs
or
or
push
push
rcll
add
jnp
dec
dec
pop
inc
dec
cs
inc
and
or
lret
fs
pop
test
cmp
je
cmp
lahf
fs
sub
pop
or
mov
out
adc
adc
jo
and
mov
cmp
jns
adc
push
jb
fiaddl
mov
dec
rclb
and
idivb
je
aad
popa
inc
sbb
scas
lcall
fsub
out
pusha
xor
rcll
mov
imul
cmp
orl
sub
lods
pop
add
jecxz
pop
stos
rcrl
gs
fsubs
sarb
mov
leave
inc
add
lret
adc
imul
mov
stos
add
mov
xor
shlb
loope
inc
filds
add
dec
push
xchg
jne
ret
mov
aas
js
out
push
into
je
mov
movsl
test
jl
jne
push
push
sub
into
lea
push
jg
sbb
ret
xor
pop
xchg
pushl
push
fwait
jp
push
inc
xor
insb
sbb
retw
jmp
fs
xchg
adc
in
jo
fwait
push
mov
add
jne
mov
mov
mov
sbb
out
dec
mov
or
push
ss
dec
inc
cmp
test
lods
insb
mov
mov
pop
cmp
test
sbb
repnz
lods
cmpsl
cmp
jmp
adc
jne
jne
lea
mov
add
inc
sub
gs
add
and
adc
mov
push
cmpl
imul
je
adc
mov
or
aad
adc
ret
leave
mov
fists
jne
cmp
jne
clc
je
push
pop
rorb
inc
pop
xchg
cmp
mov
mov
lret
mov
outsl
cmp
push
je
and
or
mov
inc
mov
in
mov
cld
add
loopne
std
mov
jge
mov
add
push
test
incl
adc
jne
mov
jmp
cmp
ret
xchg
add
hlt
push
push
cmp
jl
fstps
adc
out
add
sbb
fstp
lock
or
shll
or
inc
ret
inc
push
cmp
jne
loop
movb
sub
cmp
xor
jne
cmpb
out
movsl
mov
out
cmp
ficomps
pop
and
pop
cmp
insl
pop
sub
xor
jmp
adc
xchg
out
enter
call
jnp
pop
xlat
lea
pop
mov
pushf
xchg
xchg
loop
cmp
fadds
push
cmp
in
lds
and
jge
push
je
add
das
lcall
insb
das
adc
inc
adc
mov
sub
pop
mov
lds
push
xchg
adc
scas
rorb
mov
pop
in
into
popa
cmp
push
push
rcrb
mov
and
loopne
or
dec
das
fs
and
push
orb
ret
je
mov
adc
push
fsubrl
add
inc
push
mov
jle
push
in
in
push
jno
leave
push
push
push
loopne
test
xchg
inc
adc
jmp
push
es
pop
stc
or
or
fstpt
mov
lahf
andl
push
dec
cmp
mov
loope
sub
lea
push
dec
push
test
in
js
cwtl
std
cmp
jne
inc
fwait
or
setl
loope
adc
lods
sub
mov
sbb
dec
mov
dec
add
add
push
sub
idivl
push
test
adc
in
mov
fwait
sub
loop
cmp
add
cmp
add
push
pop
cmp
inc
cmp
jecxz
mov
dec
push
mov
popa
xlat
add
ret
mov
sbb
xor
push
int3
adc
mov
add
shll
add
into
sbb
or
or
sbb
aaa
bound
hlt
not
mov
add
sbb
add
dec
fdivrl
and
pop
mov
mov
sbb
xorl
inc
push
fidivl
in
inc
or
fiaddl
lds
mov
mov
push
pusha
xchg
jg
outsb
push
pop
cmp
add
mov
push
adc
mov
dec
xchg
in
sub
daa
mov
xor
pop
push
lods
ret
push
out
pop
repnz
shll
adc
fidivs
cmp
sbb
addr16
lds
ret
mov
cmp
cld
scas
xor
adc
xchg
mov
jle
adc
icebp
test
dec
scas
mov
jnp
ficoml
push
into
pop
xchg
imul
inc
das
and
sahf
or
cwtl
outsb
jno
push
mov
scas
pop
push
push
jb
ss
sbb
sahf
fdivrl
lock
push
sub
fs
pop
cmp
insl
pop
and
arpl
push
sbb
les
xchg
loopne
test
fimull
hlt
xchg
mov
jae
pop
cmp
sbb
out
leave
not
xor
inc
mov
outsb
mov
rorb
and
popa
daa
nop
pop
sub
dec
fbld
adc
lods
movsl
xlat
xchg
int3
cmpsb
rolb
stos
rcrb
neg
outsl
mov
or
or
iret
adc
int
adc
sarl
dec
lods
in
jae
jle
test
int3
in
inc
mov
jbe
pop
lret
test
scas
pusha
pop
inc
mov
xor
push
inc
push
push
rolb
mov
les
jo
sbb
daa
lea
and
test
daa
jbe
ljmp
cmp
aas
push
jnp
fwait
lds
insl
and
or
mov
or
sub
incl
push
xchg
inc
push
mov
inc
in
add
in
add
jle
mov
adc
or
push
xchg
imul
mov
cltd
mov
aam
and
mov
call
and
mov
pushf
mov
jl
fcomp
adc
push
aaa
pop
cld
pop
sub
sbb
adc
addr16
popf
cmp
mov
pushl
add
jle,pn
mov
cmp
inc
test
inc
in
push
outsb
sbb
dec
enter
xchg
mov
mov
inc
mov
pop
ret
clc
clc
cmp
je
push
and
jnp
push
jae
jae
mov
sbb
shlb
push
es
roll
test
pop
inc
lock
pop
pop
push
ret
mov
dec
cmc
or
adc
mov
jle
xchg
fdivrs
fists
and
dec
je
mov
push
pop
pop
add
inc
sub
or
lea
mov
mov
xchg
pop
fistpl
cmp
xchg
inc
inc
add
pop
xchg
fs
jnp
in
hlt
sub
pop
dec
mov
xchg
xchg
test
adc
pop
insb
movl
push
adc
add
sub
inc
ret
les
sbb
cld
add
lret
je
mov
jge
sbb
cmp
jne
mov
xor
or
in
aaa
xchg
pushf
adc
pop
imul
stc
rclb
pop
mov
bound
xchg
test
flds
mov
dec
inc
dec
push
rcrl
cmp
add
mov
add
push
or
enter
push
ja
pop
sub
push
push
jo
sbb
or
sub
ud2
push
inc
pusha
or
or
inc
add
sbb
adc
int
sub
inc
adc
inc
and
push
sub
jb
jge
jmp
and
push
movsl
mov
push
imul
push
cli
xchg
cwtl
js
inc
sbb
loope
popf
and
in
add
xor
or
aaa
mov
mov
inc
xchg
stos
pushf
push
sahf
sar
pusha
pop
inc
add
push
xlat
push
jae
rorl
add
mov
in
add
sub
ret
mov
or
imul
add
sar
cltd
bnd
mov
fwait
arpl
cld
loopne
sbb
push
arpl
gs
push
subl
inc
and
sub
adc
pusha
inc
ss
adc
xor
mov
fsub
mov
or
es
push
rol
pop
rcll
jmp
dec
sbb
mov
insb
push
xchg
mov
mov
add
sbb
ss
dec
int3
rolb
test
mov
into
fmul
xchg
push
push
mov
xor
les
inc
push
test
out
cld
popa
test
subl
cmp
mov
jne
ds
add
push
and
pandn
dec
and
dec
ret
lock
pop
xor
jno
shrb
stos
dec
push
pop
fs
mov
dec
adc
cli
push
xchg
or
mov
ret
aaa
mov
pop
std
push
cmp
je
jb
cmp
paddb
dec
pop
clc
or
push
sbb
or
jle
push
dec
push
push
push
add
push
or
mov
jmp
and
mov
stos
int3
inc
in
fldenv
mov
loop
in
jo
push
and
pop
push
pop
push
xchg
orb
xor
jno
mov
dec
pop
cmp
outsb
inc
mov
sub
lock
lock
loopne
addl
fsubrl
inc
fdiv
add
mov
dec
daa
sub
les
or
and
lods
aad
push
test
ja
adc
ret
push
xor
add
xchg
sub
and
rorl
or
xor
jg
inc
imull
loopne
lds
pop
mov
or
sub
or
mov
mov
fwait
xor
lock
fs
test
mov
dec
mov
scas
pop
xor
add
outsl
ret
ja
mov
jmp
push
sub
inc
ja
sub
push
inc
pop
or
shll
out
incb
or
mov
jne
stc
or
pop
mov
in
xor
outsb
sbb
loopne
aas
cmp
add
fdivrs
adc
push
rcl
andl
nop
push
add
hlt
and
lahf
lods
notb
icebp
inc
cmp
loop
pop
shll
push
or
flds
in
std
mov
and
mov
mov
notb
int3
jp
fcomi
xchg
cmp
out
add
enter
sbbb
push
bound
lea
andl
test
adc
add
outsb
xor
dec
sbb
or
push
mov
mov
sub
pop
ja
andl
xor
jl
fisttpll
mov
pop
lea
fimuls
push
fadd
push
push
push
add
sti
mov
push
mov
add
inc
lds
scas
clc
test
xorl
push
push
fidivrs
mov
xchg
fwait
hlt
or
pusha
test
pop
cld
sbb
mov
dec
shr
and
sbb
push
sbb
inc
inc
sahf
std
jnp
lea
or
andl
push
add
sbb
das
movsb
rolb
push
into
dec
lock
jo
or
or
int3
jae
cltd
int
xchg
divl
aad
xor
enter
cmpsl
mov
push
sbb
add
pop
mov
or
and
icebp
nop
int3
out
lea
cmp
mov
sbb
add
cmp
je
sub
test
adc
daa
sbb
or
xor
movl
pop
lods
mov
jp
inc
sbbb
fstps
int3
push
pop
mov
inc
mov
loopne
pop
lods
popa
rcrb
daa
adc
mov
mov
insb
jmp
mov
xlat
or
xchg
lret
enter
inc
fmull
add
jae
insb
inc
push
mov
jge
sbb
movsb
push
jmp
xor
les
rorl
subb
and
push
aam
mov
inc
add
dec
sbb
lea
dec
and
inc
in
lret
mov
add
sub
dec
jne
xor
add
push
add
pop
jb
add
or
mov
pop
cmp
sbb
scas
push
pop
xor
loopne
shl
pop
stos
mov
xlat
leave
or
jno
test
and
dec
daa
push
cmpsb
pop
sti
scas
cld
arpl
mov
lahf
push
cmp
mov
clc
shlb
mov
popf
xchg
xchg
xchg
mov
jno
or
insb
pop
jg
add
pop
jge
stos
lea
lods
mov
lea
or
mov
lea
or
ja
lret
test
call
ja
jmp
cmp
ja
push
pop
xchg
jbe
mov
dec
lret
add
mov
and
lea
mov
ficomps
loopne
jge
mov
in
pop
add
add
and
pop
rorb
mov
pop
pop
pop
xor
inc
add
push
adc
movsl
pop
adc
lcall
push
or
adc
mov
jmp
or
push
add
mov
or
push
push
add
daa
lds
sbb
ret
or
pop
or
popa
sbb
and
dec
stos
pusha
and
xor
mov
adc
sub
iret
sahf
cmp
adc
sub
test
adc
loop
sbb
sub
sub
test
or
jle
add
int3
in
lods
shll
cld
jmp
gs
test
mov
mov
int3
xchg
insl
sub
call
adc
enter
add
mov
and
insb
sbb
movsl
scas
sbb
ret
fs
mov
pop
jno
cld
sub
ret
push
js
int
jb
xchg
adc
dec
inc
ds
out
aaa
mov
or
out
sbb
sbb
push
ss
icebp
mov
and
cli
xorb
xor
les
bound
jp
mov
into
dec
sub
fdiv
adc
adc
int3
imulb
pop
mov
cs
cwtl
mov
sub
repnz
adc
inc
mov
sub
jb
ret
lods
ja
aam
sbb
pop
xchg
mov
push
xchg
in
lahf
or
test
cmp
je
mov
cmp
inc
lock
jbe
and
jno
push
jmp
cmp
jle
jmp
mov
add
orl
or
popa
inc
xchg
insl
jg
push
cmp
inc
push
sub
push
fcoms
sbb
std
sub
fbstp
dec
add
and
sbb
mov
imul
mov
or
adcb
xor
insl
push
les
xchg
int3
mov
pop
and
push
dec
test
leave
pushf
pop
sbb
or
inc
mov
sub
and
mov
jle
cmp
jge
mov
mov
add
push
rolb
xor
mov
ret
xchg
sbb
les
pop
xchg
mov
pusha
dec
inc
and
xor
sbb
aaa
in
add
sub
jecxz
push
sbb
sub
mov
stc
int3
mov
mov
push
jae
mov
pop
lods
push
push
fsubrl
xor
sub
adcb
jmp
cmp
fucomi
adc
push
jae
shr
sbb
and
andl
testb
hlt
sbb
addr16
in
leave
out
imul
mov
sbb
xchg
cmp
mov
stos
add
adc
push
pop
jl
shr
add
or
les
sbbb
adc
icebp
or
add
or
add
and
cmp
xchg
mov
add
ljmp
mov
push
popa
imul
data16
adc
incl
push
insb
dec
or
cmp
rcl
and
inc
and
and
or
jl
add
xchg
adc
jecxz
push
push
xchg
adc
sbb
xor
cmc
or
inc
scas
mov
cmpsb
fwait
sub
jle
jne
aam
decl
test
aas
hlt
push
or
inc
adc
sbb
inc
sbb
leave
push
mov
dec
icebp
pop
and
je
pop
in
push
loopne
mov
or
sbb
add
in
dec
ret
push
inc
inc
pop
shl
add
push
adc
xchg
ja
jb
stc
pushl
sub
jnp
push
push
push
imul
cmp
incl
mov
push
jmp
push
rcrl
xor
call
dec
pop
and
xor
fistpl
xor
sub
sub
daa
sbbl
or
ret
sub
sub
lahf
mov
pop
loopne
pop
xlat
nop
add
cmp
jne
lds
add
inc
xchg
xchg
or
fstpl
add
or
push
mov
icebp
shll
or
in
push
push
adc
xor
outsl
xchg
or
cmp
push
xor
dec
mov
sub
jns
fucomi
or
ja
push
movb
fidivs
sub
pop
in
das
pop
and
ret
push
mov
das
lock
out
je
push
jmp
push
inc
lea
fidivl
mov
lcall
sub
seta
cmp
jb
inc
lds
imul
mov
imul
leave
add
sub
adc
adc
aad
andl
popa
add
jo
fcompp
in
rorl
loope
aaa
add
mov
aad
js
or
and
or
cmpsb
fs
adc
and
sbb
fsubrp
mov
adc
out
or
push
sub
ret
or
mov
and
shlb
dec
out
push
mov
dec
inc
cmp
shlb
into
sarl
inc
sarb
aad
test
dec
or
ds
push
movsb
add
sbb
aas
push
inc
divl
cmp
push
rorb
int3
xchg
jge
hlt
sbb
add
push
and
cmp
sbb
lock
adc
lahf
fmuls
inc
dec
inc
jb
inc
je
dec
je
inc
aaa
or
or
mov
sub
incl
mov
inc
dec
decl
push
push
test
lret
mov
movsl
xor
popa
adc
mov
lahf
arpl
xor
add
sub
xchg
xor
mov
dec
pop
cmp
insb
ja
fsubr
or
cmp
or
jmp
add
jmp
jns
add
cmp
jle
ret
scas
pop
movl
push
pop
push
dec
mov
xchg
les
out
jne
cwtl
mov
fsubrs
repnz
add
adc
push
std
push
push
inc
jbe
ffree
out
adc
lock
push
mov
or
rclb
mov
jg
out
das
pop
sbb
dec
sbb
push
xor
jnp
and
dec
and
xor
hlt
pop
or
xor
lea
dec
insl
push
xchg
sub
insb
sbb
lret
sub
push
repnz
sub
je
push
adcb
adc
sub
shlb
daa
bound
test
stos
jmp
mov
int3
xlat
cmp
in
xor
cmpsl
push
xor
jb
adc
les
arpl
leave
xchg
insb
das
sub
daa
les
adc
fadds
popa
lds
or
mov
add
mov
mov
xor
sub
sbb
inc
sbb
mov
xor
shlb
pushf
dec
xchg
loop
inc
dec
cmp
push
sti
sbb
jl
cmpb
bound
es
mov
add
movsl
cmp
push
pop
push
mov
in
mov
adc
sbb
push
sub
jno
iret
shrb
cli
or
inc
arpl
jo
cmp
mov
add
mov
cmp
nop
inc
add
mov
call
push
sbb
pop
xor
cld
xchg
inc
fbstp
rorl
or
arpl
popa
shll
sbb
push
arpl
popa
mov
push
push
fsubl
xchg
dec
push
outsb
and
jbe
pop
leave
inc
or
jp
dec
jns
jnp
push
lock
aaa
cli
adc
inc
lea
pop
sub
js
pop
mov
hlt
jle
fmuls
adc
cmp
pop
sub
xor
lods
adc
cmp
cmpl
adc
push
test
out
test
push
mov
or
ljmp
call
push
cmp
xor
adc
fmul
xor
inc
hlt
mov
out
jne
mov
mov
push
or
stos
mov
dec
adc
push
push
push
in
shrb
or
or
incl
ret
and
movzbl
neg
sbb
mov
or
add
sub
stos
scas
mov
jge
add
shrl
pop
lret
sub
fcoms
out
cwtl
daa
adc
or
fimuls
fcoms
je
loopne
push
jmp
das
or
fidivs
mov
dec
je
dec
cli
idivb
sbb
add
outsl
add
dec
or
leave
mov
push
push
xchg
shll
jo
enter
in
jg
fldcw
in
push
aaa
lret
push
sub
add
pop
test
pop
push
sub
sub
mov
add
sub
push
mov
dec
test
int3
fcomip
inc
lcall
pop
sbb
sbb
mov
mov
push
fstpt
lret
movsb
pop
mov
or
jns
test
gs
mov
or
cmp
inc
mov
pop
sbb
cmpsb
cmp
push
push
xchg
add
mov
imull
fstpt
pusha
push
je
xlat
push
adc
push
mov
or
push
sbb
xor
fstpt
xor
dec
push
mov
dec
loop
adc
shl
rolb
xchg
faddl
int3
fiadds
mov
sbb
sub
add
ficoms
push
clc
or
push
mov
rdmsr
and
add
sub
lock
aam
aas
xor
cwtl
shl
mov
fdivl
nop
sbb
xchg
adc
add
fldenv
push
sahf
movsl
inc
inc
sbb
add
cmp
cmp
xchg
out
cmpsb
inc
sarl
jo
xor
xchg
in
or
pop
mov
shr
loop
xor
cmp
jne
cmp
adc
aas
cmp
jne
jmp
mov
sub
daa
dec
push
xchg
xchg
in
jne
pop
or
jne
or
xor
mov
cmp
fcmovnb
xchg
or
pop
inc
cmpsl
loopne
mov
clc
mov
aad
ffreep
or
clc
lea
xchg
insl
sbb
add
out
mov
addr16
adc
jne
push
imul
inc
adc
add
and
sbb
sub
stc
xlat
ret
invd
inc
fdivl
or
xadd
fwait
lods
lahf
loop
popa
out
jle
out
rcll
shll
ljmp
daa
jle
dec
mov
and
mov
adc
pop
lock
enter
cmp
gs
dec
mov
push
dec
call
jb
sbb
cmp
pop
xchg
and
add
mov
xlat
jl
loope
pop
dec
adc
insl
stos
pop
cmp
mov
push
sub
adc
pop
pop
lcall
enter
and
cmp
add
and
or
call
test
jg
pop
xchg
add
push
mov
mov
ds
pusha
xor
push
sub
and
sbb
pop
shlb
add
scas
lds
into
mov
mov
lea
lcall
cmp
mov
xlat
add
adc
pop
push
add
enter
push
or
mov
jo
and
adc
and
call
sub
clc
push
push
and
push
push
xor
add
pop
test
imul
dec
aad
cmp
gs
dec
iret
andl
jae
or
outsb
test
xor
je
dec
adc
and
mov
ss
pop
jmp
sub
cwtl
pop
push
sbb
movsl
mov
xchg
inc
mov
jmp
int
fcoms
mov
and
pop
or
and
stos
aad
and
xchg
xor
cli
add
in
jo
lret
test
popa
lcall
je
add
xchg
pop
outsl
mov
imulb
in
fadds
sbb
aaa
and
or
mov
cld
push
pop
nop
scas
mov
leave
or
add
clc
int3
cmp
int3
jl
add
and
sub
cwtl
ljmp
add
cmp
and
gs
int3
push
mov
jle
or
adc
fadds
add
pop
push
or
inc
outsb
stos
push
adc
adc
into
je
pusha
mov
push
push
or
mov
xchg
enter
push
repnz
or
lods
hlt
mov
sbb
les
lods
mov
dec
or
nop
inc
int
dec
mov
fisttpll
inc
sbb
mov
or
or
add
and
and
or
jge
sbb
adc
xchg
lcall
popa
mov
push
sub
or
cmp
repz
push
cmp
xchg
or
sbb
test
jg
mov
testl
rorb
adc
fistl
push
pop
and
xchg
bound
xchg
push
inc
mov
add
cwtl
outsl
add
inc
mov
add
fnstenv
aaa
enter
psubusb
js
sub
sbb
js
lea
pop
and
add
out
icebp
inc
pusha
cltd
orl
dec
je
fwait
inc
mov
xor
xor
xor
dec
cmc
sbb
mov
mov
add
inc
jge
cmpb
enter
pop
dec
mov
pop
shrb
pop
cmpsb
lock
aad
jo
push
and
mov
hlt
jb
mov
enter
insb
lock
je
outsb
inc
add
rorb
sbb
and
mov
add
dec
clc
and
lds
pop
sbb
mov
push
cmp
fidivrs
adc
enter
add
enter
cwtl
pushf
enter
mov
enter
mov
mov
rol
int3
enter
rcl
fcomp
enter
loopne
call
enter
cld
xchg
xchg
xchg
out
add
or
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
inc
inc
dec
dec
xchg
xchg
xchg
xchg
push
push
pop
pop
xchg
xchg
xchg
xchg
pusha
fs
xchg
jo
js
pop
push
cltd
xchg
addb
rolb
fsubrs
add
inc
xchg
mov
add
cmpsb
movsb
mov
fdivs
in
movsb
inc
in
loop
pop
test
xor
ret
adc
dec
jp
mov
sbb
add
push
adc
lods
cltd
xchg
push
and
shlb
stc
outsb
add
and
add
inc
ss
dec
cli
mov
and
in
cltd
fildl
inc
sbb
pop
push
movl
sub
fwait
mov
fstpt
aam
stc
dec
js
mov
add
and
cltd
add
xor
stc
and
test
test
outsb
add
or
xor
inc
mov
push
inc
leave
rorb
add
call
jne
push
fwait
je
fs
loope
or
js
xchg
inc
cmpsb
xor
ss
jl
sbb
loop
add
sbbl
add
mov
aad
stos
andb
nop
and
stos
add
ds
arpl
in
outsb
imul
push
push
bound
test
adc
pop
fistpll
cmp
jge
mov
pop
mov
inc
push
push
cmp
jge
or
mov
jmp
or
inc
es
aas
push
mov
stos
shll
mov
jbe
push
es
inc
or
inc
jnp
or
test
jmp
fsubrl
adc
add
mov
cmove
or
add
scas
add
popa
adc
clc
andb
xchg
cmp
mov
add
push
pop
sub
test
ds
push
push
pop
sarl
pop
and
jge
jp
sub
sti
jge
push
fcompl
mov
fistpll
adc
testb
or
es
mov
jl
out
push
inc
icebp
and
imul
sub
popf
push
and
je
subb
sbb
fisubl
pop
mov
inc
push
adc
push
xor
inc
test
mov
nop
clc
sub
aad
sub
shl
push
jl
mov
pop
lea
mov
stos
mov
into
out
out
jl
lea
push
mov
daa
sbb
xchg
push
push
adc
out
out
test
adc
stc
mov
ss
add
add
or
mov
or
sub
sarl
iret
ficoms
je
jae
push
mov
ja
cmp
mov
jmp
xchg
xor
mov
or
mov
jae
aaa
sti
ret
pop
xchg
mov
and
jmp
push
cmpsb
movsb
pusha
xor
mov
outsl
stc
shlb
pop
call
push
mov
jle
jge
cmpsl
pop
aaa
out
mov
adc
cmp
mov
aad
jo
test
and
push
outsb
jmp
jno
adc
inc
aaa
daa
cmp
mov
outsb
dec
test
rorl
lea
lods
or
mov
mov
call
les
icebp
push
xlat
push
pop
xor
inc
or
or
lods
push
fs
sub
jl,pn
rcrb
add
mov
inc
jae
inc
or
mov
mov
jne
jbe
cmp
push
mov
pop
dec
xor
sbb
mov
jb
xor
out
inc
sub
loop
lea
rcl
and
ds
ss
and
pop
fnstcw
dec
jl
add
dec
lret
insb
push
xchg
cmp
nop
sar
jp
mov
mov
out
adc
push
push
inc
sti
scas
push
inc
mov
mov
push
xchg
adc
dec
xchg
shlb
cltd
xchg
add
mulb
mov
ljmp
jne
mov
xor
setbe
imul
add
jecxz
lea
inc
fdivs
sub
clc
daa
add
mov
push
add
jne
ficoml
addb
out
fildll
lret
rorb
and
cli
or
into
xchg
ret
push
es
xor
adc
add
lock
test
mov
sbb
mov
fildll
pop
clc
push
jge
test
imul
repz
fdivs
insb
orb
cs
clc
pop
movsl
sar
dec
add
push
or
jle
mov
dec
sub
pop
sub
adc
les
pop
and
add
lods
pop
shlb
rorb
mov
push
and
xchg
es
or
or
std
push
sub
shlb
cmp
ret
call
cltd
mov
dec
sub
mov
push
jne
mov
xor
adc
jle
push
cmp
daa
adc
xlat
adc
or
adc
sub
popf
rcrl
test
or
push
sub
or
xor
xchg
inc
outsb
add
jp
jne
cld
fbstp
fcomps
push
push
sub
faddl
push
fidivs
mov
xor
movsb
jne
xchg
iret
je
stos
mov
jl
push
pop
cld
or
cwtl
fwait
mov
mov
fcmove
sbb
inc
add
mov
jmp
addr16
test
push
lcall
fstpl
xor
cmc
loope
fadds
or
mov
ret
arpl
not
test
pop
or
xor
inc
inc
adc
add
push
push
pop
orl
xchg
lret
or
adc
leave
notl
mov
add
stc
cmp
or
mov
test
jp
add
rcrl
ror
dec
rolb
test
inc
rcrb
or
mov
inc
inc
add
add
adc
push
lods
lds
andl
adc
push
xchg
sub
cmp
inc
mov
push
jmp
call
inc
fstps
push
arpl
outsl
mov
imul
stos
adc
in
sbb
add
jne
push
push
jg
lea
pusha
push
movb
inc
mov
movsl
xchg
sbb
lea
lods
pusha
mov
add
es
subb
test
clc
lcall
je
ds
jae
mov
cs
lret
shrl
dec
add
dec
xchg
and
std
pop
and
mov
shll
pop
push
or
and
cmp
xor
mov
lods
or
push
mov
adc
sub
or
xchg
mov
enter
icebp
cmp
lods
or
mov
adcb
into
test
sbb
subl
fldl2t
sub
insl
jae
sub
add
out
xor
push
add
inc
sub
shl
jb
nop
sahf
pop
or
push
insb
xor
ret
mov
sbb
sahf
adc
push
pop
outsl
mov
mov
fisttps
push
push
bound
push
and
std
add
mov
cmpl
inc
add
jb
test
jmp
and
inc
mov
mov
add
sbbb
mov
shlb
adc
or
ret
sbb
aas
inc
ljmp
mov
les
push
jo
pop
or
push
inc
or
sub
inc
and
jo
pushf
insb
adc
or
enter
pop
or
loope
and
or
xor
aam
lods
fwait
push
ret
movsb
pop
jp
stc
in
xor
dec
add
add
fisttpl
packssdw
mov
pushf
pop
push
test
push
hlt
inc
lock
adc
mov
insb
mov
mov
add
push
dec
movsb
or
cmp
lods
sub
and
or
pmullw
rclb
inc
sbb
loopne
cmp
shlb
sub
or
fcomps
inc
inc
and
add
lcall
mov
std
hlt
je
scas
aam
jp
pop
arpl
and
decl
and
ss
adc
sub
data16
lods
pop
dec
push
sub
xchg
js
mov
jnp
ret
xchg
cli
loopne
or
xchg
lock
clc
aaa
js
push
je
mov
mov
xchg
jae
stc
jg
imul
xor
insb
jno
add
xor
xchg
ljmp
sar
aam
dec
fsts
es
add
fnstsw
lods
std
mov
jecxz
push
pop
pop
inc
xor
jne
sbb
mov
sbb
js
mov
jne
js
or
mov
cwtl
and
add
sub
pop
bound
push
push
adc
mov
andl
shrl
outsb
rol
aas
sub
or
int3
sbb
inc
loope
mov
mov
inc
push
jbe
mov
adc
pop
mov
push
jle
mov
or
or
movsb
or
pop
adc
mov
cmpsb
jno
pop
adc
cmp
cltd
sub
fsubs
je
hlt
je
cmp
das
aad
popf
aas
push
push
mov
push
sbb
pushf
or
xor
iret
mov
push
pop
xchg
mov
pop
ss
and
pop
mov
inc
sbb
dec
push
xchg
mov
add
push
test
aad
loop
push
xchg
mov
push
xor
bnd
daa
iret
xchg
adc
inc
and
call
in
or
xchg
int3
dec
adc
push
inc
cli
fnstcw
movsl
jb
aas
adcb
push
and
je
jne
inc
movsb
pop
imul
push
mov
adc
push
or
test
sbb
scas
and
mov
scas
call
cmpsl
call
inc
and
test
mov
push
push
test
xor
xor
ficomps
pop
orb
cli
jb
xlat
stos
pop
jb
sub
pushl
in
enter
pop
idivl
inc
xchg
mov
in
mov
inc
cmp
je
jae
in
in
mov
push
in
pop
cwtl
or
mov
push
push
pushl
mov
sbb
arpl
cmp
mov
push
insb
ret
inc
and
jns
inc
push
test
cmp
rorb
subl
aam
jbe
jne
in
push
and
pop
inc
pop
lea
rep
mov
sub
testb
jle
in
and
ja
mov
adc
xchg
adc
fs
and
rcrb
bound
push
pop
add
adc
icebp
out
popf
popa
push
pop
into
push
jg
mov
int
lods
push
shll
dec
es
insb
add
push
inc
aam
cs
incb
push
push
push
or
mov
sub
cmpsl
jmp
in
dec
je
xchg
and
pop
orl
dec
fldl
notb
mov
cmp
mov
notb
adc
iret
jb
insb
cwtl
adc
xor
rcll
push
inc
orl
fxch
insb
nop
jmp
test
add
mov
ret
inc
pop
add
fwait
mov
inc
inc
jo
fst
mov
movq
aad
pop
pop
test
test
rol
push
out
xchg
je
lods
outsb
push
inc
adc
pushf
int3
xor
pushf
pop
lcall
push
lock
movsb
mov
notb
mov
outsl
adc
frstor
clc
ja
add
pop
in
sbb
filds
push
adc
sbb
xchg
ret
hlt
push
fistl
jmp
sbb
xor
in
lret
xor
jns
testb
sbb
rcrb
cmp
xchg
dec
mov
xor
add
add
imul
add
cmpsb
nop
cwtl
fimuls
pop
xchg
fsts
jne
sub
and
lods
sbb
rcl
cmp
adc
jp
in
sbbb
xor
jne
mov
or
mov
push
sub
mov
stos
add
cltd
jmp
push
inc
stos
stos
loopne
xor
xor
mov
adc
out
das
or
pop
adc
clc
push
out
je
jmp
xchg
icebp
mov
mov
or
rcrl
fs
sbb
push
fisubrl
movsl
mov
ds
jnp
mov
and
out
aam
mov
adc
sbb
cmp
push
fs
test
scas
xchg
rcrl
jo
or
add
pop
mov
pop
and
into
add
dec
pushf
add
ljmp
roll
test
test
jecxz
and
mov
add
addl
int
mov
sub
notb
add
and
or
dec
lret
mov
sbb
loope
enter
add
mov
mov
adc
js
sbb
je
pop
rcrb
aad
sbb
xchg
jb
mov
call
mov
cmp
push
sbb
push
or
xchg
push
shll
pop
push
xchg
ficomps
mov
rcrb
sub
inc
push
mov
jno
inc
es
or
ficompl
rolb
add
aas
push
lret
jmp
sub
pop
xor
cs
jo
inc
and
inc
dec
bound
aam
cmp
sub
jecxz
mov
outsl
adc
inc
stos
sbb
mov
sub
pop
pusha
sbb
jne
mov
mov
jmp
in
xchg
lcall
adc
adc
test
sbb
jns
imul
orb
filds
push
push
ret
out
dec
aad
adc
and
push
mov
or
enter
mov
cmp
je
sbb
jge
dec
add
insb
jmp
add
push
xlat
mov
mov
add
fmuls
popf
js
jo
mov
add
jle
dec
jecxz,pn
pop
pop
lea
cltd
sub
lea
sar
andl
jl
inc
mov
idivb
stc
cmp
jle
push
pop
cmp
pop
dec
cltd
out
pop
adc
jl
incl
add
inc
cli
shrl
mov
sbb
pushf
sbb
jo
mov
adc
mov
loop
shl
inc
lds
mov
out
dec
fld
jmp
scas
std
push
mov
dec
add
movb
adc
push
and
cmp
mov
sbb
jecxz
or
shl
insb
adc
push
pop
mov
pop
jge
rcll
shrl
push
je
add
cmp
cmp
scas
insb
js
cwtl
inc
pushl
les
mov
push
sbb
subb
add
push
sub
imul
sbbb
cmp
mov
jnp
jle
pop
push
pop
pusha
aaa
aad
sub
jne
mov
aaa
fwait
adc
and
jle
jns
dec
sub
out
mov
and
lds
adcl
lea
std
add
add
aas
sub
rorb
cs
cmp
inc
sub
dec
test
push
cmp
jae
or
je
inc
xor
add
jl
cmp
mov
lcall
add
push
mov
add
xlat
jbe
mov
push
test
adc
insb
cld
xchg
cmp
jb
mov
cli
jg
mov
out
mov
pop
xchg
push
cmp
mov
and
adc
inc
mov
xor
sub
inc
sbb
pushf
and
mov
stos
push
rorl
inc
mov
pop
xorb
adcl
aaa
inc
jge
dec
push
mov
push
addr16
rorl
hlt
out
in
and
loopne
mov
sbb
mov
pop
aam
jge
or
clc
lret
adc
add
fidivs
sub
lret
lods
sarl
mov
jno
out
fdivl
mov
jp
xor
sub
mov
cmp
add
data16
andnps
adc
clc
push
in
mov
jge
insb
xor
or
jno
adc
ss
and
push
adc
int3
scas
push
sbbb
xchg
pop
mov
xchg
shll
js
popa
mov
ret
add
jne
cmp
jb
js
add
mov
xor
jmp
mov
sbb
sbb
push
cmpsb
jl
je
dec
add
sbb
or
fs
cmp
dec
mov
dec
fsubr
add
inc
js
cmp
inc
je
xor
mov
sub
or
cs
cmp
or
gs
dec
ds
mov
dec
ss
or
rcrl
das
or
xchg
inc
add
add
mov
pusha
lahf
cmp
movb
jb
xor
das
sbbb
push
arpl
aad
cwtl
xchg
adc
cmp
push
arpl
pop
mov
pop
xlat
adcb
es
xor
sbb
sbb
pusha
in
iret
add
pop
test
popa
shll
testb
pop
adc
decl
push
xor
push
mov
push
dec
adc
enter
inc
sbb
adc
inc
add
sbb
das
adc
call
imul
push
xor
sbb
or
fdivrs
psubusb
xor
add
inc
add
add
add
jle
jne
and
push
mov
push
out
out
add
or
fldcw
clc
ror
fisubl
add
jp
sbb
bound
test
cli
add
lea
insb
dec
adcb
fcoml
sbb
or
sbb
or
shll
je
dec
inc
inc
cltd
sbb
mov
dec
jmp
adc
aam
and
add
cmp
mov
scas
fs
and
insl
and
dec
pop
insl
and
jne
mov
and
inc
enter
pop
dec
mov
or
xor
sbb
mov
je
pop
inc
dec
lds
mov
adcl
xchg
andl
cs
or
mov
movups
and
mov
ss
inc
dec
add
stc
inc
dec
rcl
dec
insl
push
pop
and
dec
and
test
mov
xchg
add
sub
addr16
inc
movsl
or
fcmovnbe
sub
and
movl
xchg
std
xor
dec
movsl
movb
sub
scas
dec
movsb
cmpl
ja
cmp
test
lods
arpl
lods
or
adc
std
mov
dec
arpl
cli
shr
or
pusha
jl
or
add
xchg
es
push
rolb
movsb
je
dec
pop
xlat
lds
movsb
inc
hlt
sbb
or
and
pop
aaa
cld
fdivrl
pop
sbb
das
xor
repnz
divl
fistpl
add
push
adc
insb
add
call
pop
pop
inc
shlb
pop
fadd
lock
adc
mov
pop
xor
mov
insb
ja
cmp
adc
cmp
push
je
push
adc
frstor
sti
xor
imul
lahf
mov
mov
mov
sbb
cmp
rcll
sub
movsb
mov
or
cmp
pop
pusha
dec
xor
xor
movsb
push
stos
cltd
in
jno
sbb
add
add
sbb
stos
xchg
divps
or
js
dec
addb
shlb
fsubrs
jno
mov
pop
inc
adcb
sub
sbbl
adc
insl
int
push
ss
mov
in
addb
mov
subl
adc
adc
stc
and
lret
sub
cmp
fstpl
fsubrl
sahf
inc
shll
adc
mov
jne
pop
inc
pop
cmp
dec
repz
mov
xchg
cwtl
mov
loop
inc
test
pop
sub
or
sbb
movl
mov
jp
push
stos
cmp
enter
adc
mov
adc
add
fucomp
and
sbb
add
mull
inc
xchg
push
fmuls
add
pop
xchg
ret
nop
insb
mov
shlb
out
xchg
and
aam
jnp
mov
pop
mov
xchg
addl
inc
xchg
add
scas
repnz
mov
push
inc
cmp
daa
jne
jmp
jge
inc
stos
jo
push
mulb
loope
or
jp
jecxz
sbb
inc
test
mov
jno
adc
push
mov
cmp
jle
je
push
push
or
or
shrb
inc
lea
in
or
insl
ret
dec
push
xchg
cmp
shlb
or
xchg
je
faddl
rolb
and
test
adcb
adc
add
iret
call
loopne
pop
jne
test
ja
int
pop
dec
sahf
aam
ret
call
sub
add
and
rol
mov
mov
mov
incl
xchg
push
out
add
xchg
jmp
je
sbb
mov
push
int
push
loop
cld
sub
pop
adc
push
or
push
push
add
inc
cmp
mov
les
loopne
jnp
jo
mov
in
fs
dec
pushw
push
push
push
in
inc
push
push
stc
xor
lock
jp
ljmp
mov
idivb
cmp
mov
enter
in
lock
mov
pop
mov
stos
sub
xlat
popf
xor
xor
cmc
jne
dec
or
add
sub
add
jle
icebp
mov
and
push
jge
pop
ljmp
add
lds
sub
in
sub
push
mov
or
and
jmp
pop
sbb
das
jmp
pop
sub
cmovo
pop
aam
jmp
das
fmuls
jl
inc
adc
mov
inc
loope
movsb
leave
insb
adc
js
lock
push
dec
jne
mov
notb
pusha
cmpl
jb
push
pop
push
push
sub
push
nop
add
mov
incl
mov
jnp
lea
insl
fcmovnu
lock
add
adc
push
jb
push
push
add
push
pop
int
mov
push
lcall
mov
fsub
cmp
jne
pop
bound
scas
inc
inc
jge
ficomps
cli
das
xor
out
sub
stc
add
insb
adc
push
push
push
ljmp
add
mov
jae
mov
orl
add
incl
das
adc
mov
jb
cmp
loopne,pn
dec
jae
dec
shrl
cmp
aaa
mov
jo
sub
push
xchg
mov
adc
sub
dec
jne
pop
sub
mov
or
sbb
adc
push
dec
addr16
loopne
sbb
sbb
mov
adc
adc
xchg
test
addl
inc
adc
fcomps
outsb
xor
addb
mov
fstl
ss
push
movsl
sbb
ljmp
inc
mov
aas
mov
mov
inc
add
mov
mov
int3
mov
pop
mov
sub
es
add
sub
jl
add
pusha
insb
mov
cmp
xchg
adc
jne
frstor
rolb
mov
leave
in
add
movzwl
test
pop
jmp
and
or
mov
test
xchg
mov
or
lods
fisttpll
jmp
addr16
and
int3
popa
jno
add
leave
add
imul
pop
mov
add
xchg
inc
mov
mov
dec
clc
sub
dec
add
inc
sub
xchg
push
dec
push
ds
hlt
int
xlat
xor
add
in
or
dec
or
pop
xchg
add
jmp
mov
sub
mov
sub
mov
add
je
or
or
mov
testb
adc
or
shr
mov
cmp
in
outsl
lods
lea
and
cld
jae
test
fcomi
inc
sahf
jl
cmp
popa
xchg
add
mov
cmp
jp
imul
xorb
cmp
inc
and
and
and
cmp
enter
je
sub
add
and
gs
dec
cld
cmp
mov
xchg
jno
pop
int3
jge
nop
and
pop
mov
out
jl
nopl
in
sar
lock
insb
jmp
jl
jne
js
xchg
and
push
jne
je
cmp
out
or
xor
jae
std
pop
loopne
in
push
jge
mov
scas
jno
test
sbb
fadds
jnp
adc
xor
or
out
insb
push
clc
pushf
lea
mov
cmpsb
fldcw
add
mov
dec
shll
mov
out
mov
cmpsb
pop
cmpsl
lret
out
pop
mov
lea
push
sbb
das
loopne
pop
les
pop
adc
sbb
sbb
cmp
adc
hlt
mov
clc
inc
mov
loopne
ja
cwtl
adc
cltd
xorl
cmp
jb
cmpb
inc
cmp
mov
mov
push
adc
add
or
into
pusha
iret
jnp
push
daa
dec
data16
mov
add
xor
or
and
pop
mov
mov
xor
xchg
inc
dec
dec
push
clc
jp
cmp
jmp
mov
fimuls
pop
mov
mov
mov
call
and
test
jnp
adc
push
and
xlat
push
aam
in
push
sub
test
shl
cmp
adc
xorb
sbb
or
orl
lock
rclb
xor
ds
das
or
call
arpl
inc
das
mov
fdivrs
iret
mov
jne
andl
dec
mov
add
je
or
push
adc
sbb
rcrb
push
in
sbb
icebp
cmp
jne
dec
or
mov
or
in
mov
ret
cmp
popf
xor
fdivl
in
int
sbb
scas
mov
subl
push
sbb
mov
pushf
or
mov
xchg
pop
xor
xchg
dec
icebp
ss
mov
add
dec
call
fmulp
adc
sbb
inc
xor
dec
mov
sbb
sub
xchg
sub
mov
mov
pop
jns
into
outsl
or
pop
inc
add
hlt
es
sti
bound
mov
cmp
aaa
lods
adc
push
popa
lds
popa
add
pop
test
fstpt
test
sbb
push
sbb
xchg
adc
in
push
sbb
sub
push
push
daa
and
and
in
sub
in
in
xor
in
in
cmp
mov
lret
and
and
or
sub
inc
sbb
inc
ret
dec
push
jb
push
and
cwtl
push
in
out
xchg
sub
mov
pop
and
dec
add
or
int3
lods
fs
pusha
xchg
or
cmp
mov
fsubrl
push
lock
sub
inc
cmp
loopne
push
mov
mov
test
scas
jp
icebp
cmp
cmp
test
inc
mov
pop
aam
inc
sbb
inc
xchg
cmpsb
adc
sbb
cltd
push
push
jno
pop
sbb
nop
jne
in
and
adc
add
sub
clc
inc
stos
or
inc
or
movsb
mov
push
sub
or
divb
adc
or
cmp
js
lahf
or
fldt
pop
add
and
pop
test
aas
xor
push
lret
mov
xor
cwtl
xchg
push
dec
add
fs
pushf
mov
clc
arpl
fs
cs
sbb
jle
jge
data16
arpl
add
sub
pop
aad
add
push
cli
push
push
cmp
adc
mov
or
ret
mov
mov
pop
in
adc
cmpb
cld
les
je
push
xor
or
inc
and
inc
or
mov
lock
mov
push
mov
push
les
add
mov
hlt
test
inc
inc
scas
add
xchg
test
pop
js
and
js
sub
pop
loopne
push
adc
mov
leave
popa
pcmpeqw
andl
mov
and
inc
lods
adc
orb
movsb
mov
push
rorl
push
dec
sbb
ficompl
cmpsb
inc
sbb
cmp
adc
add
fwait
stos
jl
rcrb
jbe
or
push
xor
adc
data16
push
adc
or
call
test
push
js
adc
mov
shlb
imull
jle
js
inc
test
dec
popf
pop
rcll
cmp
sub
mov
mov
inc
cmp
sbb
inc
icebp
jg
dec
je
jmp
movl
add
sub
add
xchg
or
lods
jnp
js
push
push
mov
xor
pop
add
push
mov
cli
je
stos
xchg
test
or
xchg
data16
test
pop
in
sbb
dec
dec
idiv
mov
shlb
sbb
pop
add
andb
inc
sub
aam
jne
push
repz
nop
add
in
sbb
dec
inc
sub
mov
repz
and
dec
cmp
mov
gs
sub
push
push
jb
in
test
hlt
js
xchg
pusha
xchg
mov
dec
or
pop
jae
int
jno
sbb
add
and
pushf
sbb
push
test
movsb
xor
adc
lods
push
test
mov
and
and
cmpsb
xchg
inc
mov
adc
dec
mov
enter
leave
adc
enter
test
ret
andl
inc
and
aam
pushf
mov
xchg
fcoms
xchg
or
sub
xor
push
pop
and
in
call
leave
int3
inc
jecxz
pop
and
jno
dec
and
xor
or
jnp
cwtl
mov
pop
test
jge
in
mov
pop
inc
dec
in
enter
add
les
pusha
mov
cli
ljmp
cmp
jmp
testl
int
aas
aam
push
or
in
ljmp
inc
in
nop
push
add
int
loopne
sahf
ja
lea
push
rorl
test
cmp
add
je
movl
and
lahf
mov
and
mov
sub
ja
mov
gs
insb
fcmovnu
pushf
or
jmp
adc
push
mov
or
and
cwtl
cmp
fdecstp
mov
bound
dec
inc
cmp
flds
mov
loopne
push
call
add
add
paddd
loopne
enter
push
in
clc
sar
sub
jl
rcr
pop
aam
inc
int3
add
jg
add
sbb
mov
pop
sar
and
lock
jle
sub
out
pop
sti
fildl
pop
push
lret
cmp
pop
jge
add
inc
jno
xchg
ljmp
aam
hlt
cmp
sbb
adc
gs
dec
push
lret
test
imull
notb
loopne
or
or
adcl
mov
enter
or
sub
mov
xchg
and
and
pop
inc
xchg
lret
push
pop
add
cmp
inc
mov
adc
sbb
adc
out
cld
sub
sub
adc
les
mov
setge
add
rorl
adc
mov
pop
pop
shr
in
loopne
xor
fcoml
shlb
pusha
push
int3
xchg
je
loop
aad
loopne
daa
in
sahf
add
mov
nop
gs
sbb
and
jo
sarl
fdivrs
loop
push
addr16
push
test
xchg
sub
iret
repnz
mov
xlat
shlb
xchg
mov
ss
dec
gs
mov
loope
pop
mov
mov
pop
xor
xchg
out
xchg
std
call
push
push
cld
fistpl
insb
lea
sarb
mov
add
mov
dec
inc
pop
mov
pop
das
and
and
adc
in
jb
and
adc
jl
sub
repz
lcall
xor
or
fildll
xchg
inc
sub
rcll
aam
leave
dec
sbb
mov
push
movsb
lods
xlat
rclb
adc
sbb
mov
ficoms
pop
and
movsb
and
leave
movsb
dec
lds
and
add
push
test
adc
icebp
lcall
sahf
mov
xor
dec
insl
or
mov
addl
shl
mov
dec
add
cmp
mov
mov
mov
pushf
adc
push
xchg
xor
add
sbb
cmp
jne
sbb
or
js
inc
jl
les
and
mov
and
and
add
and
dec
push
mov
add
xchg
scas
xor
jae
xchg
push
xchg
xchg
test
je
pop
pop
jp
ret
js
sub
shlb
push
inc
rclb
inc
and
pop
xorb
push
pop
add
add
or
fwait
rcrl
sub
mov
push
aam
sbb
fistps
push
mov
xor
and
cltd
dec
and
and
pushf
sbb
and
and
inc
or
and
inc
fistl
neg
jae
xor
mov
push
sub
mov
in
mov
jecxz
pop
sti
mov
lcall
fiaddl
xchg
stos
push
imul
inc
insb
ficompl
or
xchg
sub
popa
lcall
adc
dec
ret
fsubl
rcl
imul
dec
adc
std
fwait
lret
jle
sub
gs
xchg
scas
sti
push
lock
es
xlat
jmp
sub
sub
inc
rolb
stos
cmpb
int3
push
mov
pop
or
cmp
cmp
aad
lods
and
mov
mov
out
jne
fs
jo
lock
add
push
aad
shll
imul
pop
das
add
sub
or
popf
mov
mov
lds
mov
mov
cmp
pushf
ds
imul
push
or
push
int
push
inc
subb
adc
dec
inc
xor
cmp
lahf
shr
pop
push
jmp
push
and
pop
pusha
cmpsl
lea
shl
in
test
add
fsts
js
rorb
mov
clc
pop
inc
sarb
cmp
jle
fnstcw
dec
sbb
pop
xchg
or
adc
mov
pavgw
stos
add
das
imulb
jp
adc
adc
push
xor
push
fstpl
cmp
je
cmp
mov
imul
ja
and
adc
sti
cltd
fimuls
jb
sbb
subl
loop
aad
add
pop
in
or
pop
push
xor
jbe
inc
sbb
pop
jne
and
and
outsb
dec
addr16
aam
cmpsl
fdivrs
or
test
jns
jne
push
inc
syscall
cs
xchg
mov
lods
stos
daa
pop
jne
mov
inc
add
enter
mov
mov
clc
popa
add
lea
push
pop
or
lock
mov
fs
adc
jne
mov
pusha
push
mov
or
subb
incl
jne
dec
jae
movsl
mov
mov
mov
jge
call
sbb
or
aad
xchg
jbe
push
pushf
into
push
divl
inc
add
sub
inc
les
sahf
lods
jmp
cmp
jp
rorb
in
sub
icebp
lret
movsl
push
fwait
imul
mov
stos
lea
stos
jne
shlb
gs
pusha
lcall
cwtl
movsb
fistl
xchg
jne
ds
or
add
adc
inc
adc
jle
cmp
xchg
addr16
sbb
sbb
fwait
sbb
push
dec
inc
rcl
or
jae
cwtl
mov
inc
inc
xor
jo
loopne
ret
jne
add
mov
cmp
stc
or
je
out
mov
iret
insb
push
ficomps
test
xor
sub
add
xor
xchg
jmp
inc
mov
pop
or
and
or
adc
cmpsl
adc
add
adcb
arpl
xchg
cmp
xlat
push
mov
test
mov
xlat
stc
or
loopne
pop
push
lods
push
push
ss
xor
ss
mov
movsb
push
mov
or
adc
and
insb
je
pop
cmp
push
cli
or
add
andl
shlb
sbb
push
scas
and
adc
repnz
push
mov
dec
push
loop
aaa
lea
cmpsl
gs
popa
add
je
xchg
fadds
in
rclb
and
mov
push
dec
mov
fwait
push
in
push
test
push
rolb
xor
icebp
sub
or
cmpsl
push
jbe
jge
sub
pop
or
test
mov
sbb
mov
lods
add
xorl
add
out
and
bound
cmpb
sub
pop
adc
cmpsb
ret
mov
faddl
aad
push
xor
xor
sbb
incb
or
and
xchg
dec
xchg
aas
sub
xchg
or
xor
xchg
or
cmp
xorl
add
or
and
xchg
out
mov
enter
inc
lods
dec
leave
inc
leave
push
dec
push
gs
or
adc
nop
pop
sub
cmp
fimuls
imul
or
je
add
je
or
sub
jmp
pop
and
and
and
adc
aas
inc
cmp
adc
sbb
or
sub
adc
mov
subl
and
daa
add
adc
or
insb
xchg
sub
dec
and
sub
cmp
sbb
sbb
adc
inc
push
mov
outsl
or
enter
adc
mov
je
outsl
aam
movsb
test
and
dec
inc
dec
push
sub
sub
push
jbe
dec
sbb
out
pop
or
dec
or
or
sub
mov
push
sub
mov
lea
ja
movsb
cmp
push
cwtl
in
push
xor
add
jle
mov
fsubrl
push
hlt
shlb
or
add
xchg
sub
dec
cmpsb
testb
xor
sti
fs
sub
push
aam
das
push
push
or
lods
stos
push
rorb
push
test
sbb
ljmp
add
xchg
nop
js
rcll
mov
jmp
mov
push
dec
or
je
mov
cmp
aam
inc
push
and
in
or
out
in
fldcw
and
es
mov
push
adc
fsubl
mov
leave
popa
orl
xchg
or
lret
out
push
and
pushf
popl
movsb
mov
mov
lcall
jne
hlt
pusha
int3
test
push
lret
ja
mov
sub
into
insl
push
les
sbb
or
adc
add
dec
xor
adc
out
loope
dec
test
clc
push
dec
nop
and
scas
jnp
xor
sbb
pusha
add
xchg
imul
push
cmp
or
add
and
adc
dec
into
mov
adc
ret
inc
xchg
in
push
xchg
jne
pop
or
mov
inc
or
mov
jp
cmpl
jo
push
inc
inc
addr16
scas
bound
inc
je
add
lods
sbb
jno
je
inc
or
or
inc
mov
andb
push
jo
loopne
jne
pop
add
jne
adc
fneni(8087
xlat
push
xchg
jne
and
je
cli
sbbb
mov
xor
shrl
xchg
rorl
xor
lods
jmp
and
mov
mov
push
xchg
insl
mov
sbb
jno
fnstsw
push
aam
mov
out
test
lock
and
push
cmp
loope
outsl
pop
movl
jmp
faddl
shlb
or
adc
inc
imul
pop
adc
decl
lods
jno
pusha
adc
adc
or
jo
add
int
adc
subb
fucomip
and
adc
arpl
add
adc
and
or
or
dec
ja
inc
aam
xchg
jns
push
push
stos
mov
push
subl
je
push
push
bound
cmp
and
pop
aas
cmp
je
mov
mov
pop
and
jmp
jge
mov
push
pop
or
mov
lds
cmpl
pop
cwtl
popa
sarl
add
dec
or
sbb
cld
lcall
sub
fsubs
push
pusha
cwtl
mov
sub
stos
clc
jns
adc
and
inc
mov
add
cmc
mov
add
gs
das
nop
sub
mov
call
adc
jge
bound
sbb
jne
push
rorl
pop
inc
adc
inc
adc
lret
lods
mov
in
and
xchg
jae
addl
mov
shrb
cmp
or
sub
add
insb
jno
jmp
adc
pop
push
cmc
scas
jb
mov
out
add
jmp
ja
push
nop
pop
sbb
movsb
push
push
scas
cli
rorl
xchg
nop
add
data16
mov
aad
adc
dec
cmp
mov
cmp
flds
in
shrb
inc
dec
sbb
add
loope
mov
stos
or
mov
rorl
jmp
add
je
push
mov
fldt
push
xchg
push
cmp
mov
mov
mov
movzbl
cmp
mov
adc
inc
add
into
outsl
cmp
cmp
dec
push
push
fstps
push
cmp
bound
sbb
cli
pop
rolb
push
mov
or
or
cmc
mov
mov
movsb
adc
jns
push
jnp
sbb
cmp
aas
pop
pop
data16
call
ljmp
and
mov
or
mov
clc
mov
add
adc
jmp
pusha
adc
add
xor
mov
mov
lock
ljmp
inc
shlb
cmp
pop
lahf
lods
push
cwtl
add
add
push
mov
fistl
test
mov
loopne
or
std
xor
cmp
jp
sub
movsb
pop
call
into
pop
sub
mov
rclb
dec
rcrb
mov
cmp
cmp
ja
js
sub
adc
and
push
push
xor
xchg
mov
loopne
sbb
mov
inc
fdivrs
faddl
mov
sub
mov
adc
push
or
mov
and
inc
shll
lret
cmp
aam
stos
sbb
imul
inc
call
cmp
cld
clc
test
lock
arpl
and
and
dec
add
push
inc
and
pop
mov
sub
pop
cmp
lods
push
jecxz
and
jne
jb
pop
push
push
insb
or
mov
dec
rolb
aam
xlat
mov
fsubl
imul
sbb
xchg
pop
push
mov
fnstenv
pop
aam
sarb
jge
or
popf
call
sub
sbb
je
jno
jl
cmpsl
in
sub
mov
mov
jbe
out
push
push
mov
xorl
and
xor
sub
sub
sbb
xchg
stos
inc
push
mov
sub
cmp
ss
shlb
adc
push
cmp
xor
and
pop
xor
test
subb
aaa
dec
or
in
sti
dec
jne
hlt
divb
sbb
push
arpl
xor
cs
test
scas
push
jae
push
add
push
mov
hlt
adc
call
cmpsb
jnp
mov
mov
adc
dec
cmpsl
mov
mov
inc
xchg
sub
pop
aaa
dec
mov
sidtl
add
lea
jg
ret
sahf
lods
stc
sbb
push
mov
xchg
push
xchg
movsb
mov
sub
dec
xor
or
push
std
in
cmc
adc
jmp
xchg
imul
add
sbb
movsl
add
insl
popa
and
loopne,pn
ret
cmp
add
lock
pop
adc
je
rcr
js
icebp
popa
jb
adc
mov
sbb
or
cmp
push
pushf
test
lods
jae
scas
or
and
fisubs
mov
pop
push
dec
cld
push
call
stc
push
ja
lea
lea
lret
xor
iret
push
test
cmp
cmp
test
int
sbb
inc
push
jl
mov
adc
out
adc
fdivs
pop
ret
dec
add
or
ret
or
fisttpll
into
mov
or
rcll
loop
and
jmp
or
in
jo
lret
mov
jecxz
daa
push
cmp
pop
mov
add
pop
jl
push
shll
xor
push
dec
xlat
and
sbbb
out
adc
movsb
es
adc
xchg
leave
loop
call
jp
js
scas
fstps
movsb
loope
fcoml
and
adc
push
pop
dec
adc
sbb
outsb
out
inc
and
inc
cmp
in
mov
push
adc
push
push
popa
fldenv
fsts
jmp
out
in
mov
cwtl
dec
xchg
adc
jmp
xor
dec
inc
jg
ja
insb
inc
fsubrs
add
xchg
or
loopne
push
push
adc
pop
es
shll
negb
jmp
in
jmp
mov
pop
mov
xor
cmpsb
or
int
jmp
pop
rorb
sub
xlat
in
mov
push
push
in
or
push
mov
fbstp
lods
jns
in
inc
or
jbe
aaa
test
sbb
in
xchg
sub
mov
testb
sub
ljmp
inc
push
sbb
fdiv
push
call
push
and
mov
adc
xor
pop
cs
test
push
cmc
pop
adc
bound
sbb
adc
mov
lock
inc
ret
pop
outsl
xor
jge
or
fnstenv
enter
mov
pop
fmulp
setle
pop
imul
dec
lods
mov
add
add
movsb
fistps
cmpsb
imul
ja
imul
lods
xor
pop
mov
mov
dec
testl
sub
in
lret
cmpsb
sbb
lds
inc
rorb
popf
insb
push
lret
mov
xchg
add
cwtl
xor
lock
push
push
pop
sub
sub
orb
jbe
add
je
repz
jl
cmpl
mov
xor
push
imul
ret
mov
sbb
fldcw
jmp
push
sbb
mov
test
mov
jmp
cmp
adc
and
adc
orb
push
push
or
cli
mov
cmp
nop
into
mov
cli
push
ja
mull
pop
test
lcall
pop
jb
outsb
push
xor
aaa
pop
mov
js
and
cmp
add
push
adc
and
inc
aaa
lods
jae
dec
mov
xchg
push
imull
push
cmp
dec
push
xor
pop
adc
inc
pop
push
xchg
inc
push
in
add
push
inc
mov
xchg
xor
fs
int
mov
inc
orb
push
pop
sub
fmuls
les
ret
add
inc
pop
andb
jns
loop
xchg
and
inc
mov
hlt
and
sar
xorl
in
inc
xor
ds
lds
add
fs
mov
jle
push
pop
icebp
push
ljmp
mov
jmp
and
pusha
dec
outsb
in
rorl
cmp
inc
cld
roll
pop
fldl
arpl
xchg
add
rcrb
repnz
add
add
dec
out
ret
mov
pop
insl
sub
cld
mov
sbb
xchg
sti
inc
inc
movsb
sbb
mov
testl
push
adc
add
loop
insb
orb
test
cmp
jne
shrl
jge
push
xor
add
push
movl
jmp
add
js
test
sbb
ds
adc
jno
push
mov
mov
dec
push
movsb
imul
fists
test
or
les
hlt
pop
pop
data16
sub
xor
xor
in
mov
mov
xchg
sub
or
negl
cmp
add
mov
icebp
and
push
ss
imul
dec
push
pop
orb
and
xchg
mov
sub
rclb
add
add
mov
sub
push
jle
scas
pop
loope
or
or
int3
push
insl
or
add
mov
ds
shlb
cld
sbb
pop
pop
bound
mov
push
add
xor
xchg
or
dec
les
jnp
imul
ja
inc
xor
dec
sbb
in
and
jae
or
and
je
sbb
int
pop
ds
inc
rolb
and
sub
std
data16
add
and
jp
in
fnsave
and
pop
int3
xor
and
add
add
cld
daa
push
fdivs
sub
or
add
adc
aas
lcall
stos
lcall
or
shr
inc
leave
pusha
sbb
inc
and
and
xorb
add
mov
test
je
push
sbb
pushf
dec
mov
clc
sbb
adc
and
push
lods
imul
sbb
push
add
add
xchg
add
subb
jge
outsl
add
and
roll
add
and
adc
add
xor
xchg
adc
inc
sbb
mov
or
sub
icebp
inc
shlb
and
pop
sub
pop
add
ljmp
push
push
shll
pop
loopne
popf
hlt
xchg
sbb
push
xor
sub
mov
in
test
push
lods
push
leave
rclb
ss
test
jl
test
add
test
mov
ja
mov
cmp
lods
leave
insl
mov
test
and
jl
stos
mov
add
or
sub
add
sbb
and
inc
add
xor
ja
sub
mov
into
or
add
cli
je
push
ja
inc
aaa
popa
pop
pop
scas
add
inc
leave
daa
mov
cmp
sahf
sub
das
adc
dec
sahf
andb
imul
push
dec
in
push
pop
addl
aad
inc
pop
dec
aam
and
testl
pop
mov
xor
adc
or
sarb
call
jl
xor
fiaddl
pop
ds
aam
and
pop
inc
push
lret
add
cmp
shll
xlat
inc
lahf
pop
sbb
pop
sbb
popf
xchg
sbbb
mov
mov
push
cmp
adc
or
ljmp
sbb
xor
xchg
jnp
push
push
push
xor
popa
pop
push
popa
fdivs
or
enter
out
xorl
sbb
adc
mov
push
pop
xchg
fsubrs
sub
push
dec
pusha
xchg
sub
rcr
ja
mov
xchg
push
jo
xor
inc
shl
or
inc
int3
pop
cltd
stc
push
sbb
movb
jmp
cmp
and
and
mov
out
push
inc
cs
test
lcall
clc
pop
mov
stos
fisttps
fldt
push
xor
rcrl
lds
outsl
clc
sbb
sbb
ret
pushf
sbb
push
xor
cmp
or
dec
arpl
les
enter
inc
fmuls
cmp
mov
jmp
bound
adc
and
xor
test
and
or
mov
mov
jbe
leave
fstpt
and
add
dec
and
inc
push
mov
test
mov
mov
pop
adc
mov
hlt
cmpsl
or
adc
cmp
jge
push
sub
cmp
dec
das
iret
je
dec
adc
into
scas
cmp
mov
mov
iret
jmp
push
orl
gs
push
sub
xchg
insl
movlps
jnp
insl
or
push
and
pop
pop
test
push
sbb
or
and
push
stos
repnz
and
nop
or
dec
sbb
push
mov
push
addr16
mov
dec
push
out
mov
inc
add
ja
loopne
or
in
out
fucomi
orl
push
in
call
gs
rol
sub
mov
mov
inc
xchg
add
pop
popa
fadds
push
adc
out
stos
mov
pop
ret
pushf
lock
fildl
aaa
push
loop
nop
shl
or
push
dec
into
shrl
adc
loope
push
pop
sbb
adc
jp
xlat
mov
dec
fldcw
dec
adc
or
ljmp
push
fmuls
dec
lahf
inc
adc
push
add
int
dec
add
sti
mov
push
jno
adc
push
add
jmp
sub
cmc
popf
addb
ss
add
and
dec
divl
movl
jp
inc
iret
mov
shl
inc
or
and
inc
push
xor
ljmp
cmp
add
sub
aaa
cltd
insb
and
fcomp
divl
jmp
cmp
shlb
mov
xor
push
cmp
jmp
xor
repz
or
sbb
xchg
fwait
jbe
jg
test
xchg
pop
jne
inc
pop
and
dec
dec
cli
jb
addr16
ljmp
movsb
pop
or
repz
cmp
jae
fucomip
mov
nop
mov
push
or
rcrl
rcrb
js
push
jo
xor
sbb
sbb
and
call
adc
and
or
adc
imul
push
add
and
mov
xchg
mov
lea
adcb
leave
sbb
test
adc
std
repz
or
insl
loope
xchg
inc
adc
js
push
inc
adc
dec
mov
lret
inc
inc
inc
push
or
icebp
xor
or
or
adc
pusha
and
mulb
cwtl
bound
loop
xorb
push
xor
int
fisubrs
cmpsl
fdivs
or
and
aad
adc
mov
neg
mov
pusha
adc
pushf
dec
or
adc
es
in
cmp
cwtl
jge
pop
jge
fwait
adc
or
mov
inc
cmc
pop
adc
loop
stos
pusha
jbe
ficomps
iret
psubsb
pop
and
xor
mov
or
je
ss
fdivs
and
stos
ds
push
rolb
divps
xor
gs
mov
add
inc
xchg
lods
push
lock
insb
xchg
outsb
movsb
push
shrb
push
mov
push
xchg
clc
xchg
sbb
fnstsw
xor
pop
jne
into
pusha
mov
mov
and
and
mov
fst
mov
cmpb
push
aam
and
mov
mov
mov
and
pop
repnz
mov
inc
sub
adc
jmp
pushf
inc
mov
shll
adc
loopne
inc
es
or
pop
add
sub
fnstenv
sbb
xor
push
adc
jno
adc
jo
lret
push
lds
lea
pop
mov
rolb
cmp
and
and
int3
rcl
fdivrs
xor
fadd
dec
ss
add
xor
inc
icebp
loopne
outsl
movl
ljmp
mov
sbb
aam
or
cmp
pop
xor
pop
push
cmp
cli
add
inc
fcomp
loopne
cwtl
add
or
or
sbb
add
mov
dec
leave
mov
jns
lret
jmp
cmp
jo
dec
jne
mov
pop
pop
jmp
popa
mov
push
or
lret
ret
andl
xchg
xchg
aad
jge
ret
shlb
add
subl
dec
adc
push
lahf
daa
pop
mov
pop
mov
sub
stos
cmp
mov
loop
loopne
cs
xchg
lods
adc
cmp
in
aaa
aas
push
cmp
fimuls
and
adc
dec
icebp
sub
shl
mov
rorl
jae
add
pusha
push
or
inc
hlt
inc
sbb
push
add
or
pop
pop
rolb
jbe
dec
adc
flds
push
dec
dec
cld
fildl
ret
sbb
pop
or
ret
adc
adc
jbe
pop
adc
xor
cmp
addb
ss
and
push
addr16
push
rolb
or
or
push
mov
pushf
sub
pop
pop
sbb
or
or
adc
mov
pop
push
mov
js
in
add
sub
out
pop
lea
sysenter
or
adc
sbbl
push
adc
test
dec
dec
push
sbb
sub
or
pop
jl
pushl
and
mov
cmc
dec
mov
xchg
cmp
sbb
cld
jge
sub
pop
push
mov
push
fstps
add
int
ret
push
jo
aaa
inc
push
aaa
add
pushf
mov
push
mov
cs
or
imul
push
shrl
or
mov
fiadds
and
add
lds
adc
test
or
jae
mov
dec
xor
test
push
js
cmp
scas
push
dec
jmp
push
jle
mov
das
dec
cmpsl
aad
xlat
mov
or
adc
push
jle
mov
xor
inc
mov
inc
add
and
mov
adc
xor
and
sbb
jb,pn
aas
mov
xlat
dec
pop
cmp
xchg
pop
adc
ljmp
shlb
movsb
decb
push
mov
add
dec
js
lds
movups
ss
mov
jb
xchg
sbb
add
cwtl
jmp
pop
lods
ja
addb
out
ficompl
outsl
cwtl
in
insb
es
test
mov
popf
pushf
es
xchg
pop
nop
sbb
test
out
fstl
aas
add
insb
pop
int3
dec
mov
xchg
mov
leave
jl
ds
jl
dec
mov
sbb
dec
mov
push
shlb
ljmp
mov
mov
shl
xor
sub
push
dec
add
sub
scas
sub
loopne
push
jne
and
mov
and
shlb
push
hlt
mov
xor
in
sub
xchg
jg
sub
inc
fildl
insl
fs
insl
js
lds
data16
into
mov
push
and
xlat
in
dec
icebp
cmpl
mov
pop
hlt
outsl
outsb
mov
inc
lock
dec
je
dec
jne
sub
or
andl
sbb
pop
jp
loopne
push
pop
xchg
loopne
repnz
xor
je
xor
je
sarl
call
cs
push
sub
test
daa
rol
sbb
insb
aaa
pop
sbb
xor
inc
bound
negb
xlat
jmp
pushf
pop
mov
add
or
add
in
das
push
or
lea
xor
or
arpl
or
mov
jne
adc
jne
sub
add
xorl
shlb
xor
cmp
sub
rclb
loopne
mov
mov
mov
call
mov
cmp
xchg
mov
sub
mov
dec
call
or
lcall
iret
mov
incl
push
push
in
sti
pop
lock
add
out
or
outsl
icebp
outsb
mov
or
inc
xor
push
or
adc
or
adc
icebp
andb
inc
push
movsb
sub
test
push
hlt
rolb
cmp
hlt
mov
pop
jb
add
test
jae
add
push
mov
add
push
xor
lods
sub
mov
push
dec
ds
fldcw
and
andb
ret
adc
add
aas
ret
jl
andb
jge
gs
jl
lods
test
push
add
xchg
add
aaa
inc
xor
lret
jne
adc
add
and
push
push
pop
or
stos
pop
sub
addr16
aam
jecxz
jle
subl
push
push
pmuludq
xchg
clc
adc
add
jne
pop
mov
loop
add
sar
pop
add
adc
mov
shll
jmp
adc
push
pop
add
dec
ds
mov
xor
stos
xor
addl
adc
test
scas
rcpps
mov
mov
lods
mov
xor
sub
popf
and
inc
aad
inc
sub
mov
push
test
in
fldt
xor
pop
mov
test
js
mov
idiv
jmp
add
sub
push
xchg
add
sub
jne
jmp
sub
ffreep
ljmp
jbe
mov
sti
fistpll
sub
add
sub
xor
mov
sbb
in
inc
add
call
mov
rcrl
inc
mov
popa
lock
fdivs
enter
push
sbb
mov
jp
repnz
jno
dec
lods
and
jnp
je
mov
ror
fs
movsb
inc
dec
fadds
es
xchg
test
push
rclb
and
pushf
sub
xor
push
lret
sub
in
cmp
or
loopne
inc
js
push
mov
mov
jle
mov
call
xchg
or
popf
hlt
pushl
and
je
mov
cmp
jne
mov
cmp
mov
add
jae
inc
jl
cmp
jg
cmp
cld
arpl
mov
push
pop
xor
cmp
jge
inc
push
push
mov
or
clc
mov
adc
xor
imul
add
aas
mov
lahf
call
jg
sub
or
mov
dec
jae
push
dec
inc
inc
mov
icebp
outsl
jl
movb
inc
jmp
push
out
movsl
xorb
inc
inc
mov
arpl
xchg
ss
lods
mov
lahf
pop
mov
mov
mov
inc
inc
js
in
dec
inc
xor
cmp
mov
adc
enter
or
adc
push
pop
sub
lock
fucomip
xchg
sti
mov
xchg
add
cmp
inc
and
adc
daa
and
inc
adc
fucomi
dec
aad
bound
cli
outsl
mov
rcl
push
add
cmp
push
push
rorl
movsl
mull
jle
push
test
cmp
testl
push
mov
loope
adc
push
adc
mov
add
dec
adc
mov
scas
push
xor
test
shr
add
jmp
cmp
inc
sbb
rorl
enter
pop
jbe
xor
rorl
or
ret
test
sbb
shlb
inc
mov
sub
sbb
sub
mov
add
sarl
icebp
loop
ds
ret
jbe
sbbl
push
aaa
outsb
aaa
loopne
inc
and
je
pop
jle
lds
sbb
cmpsb
hlt
jb
mov
ds
adc
js
shr
xchg
jle
push
sbb
jne
pop
nop
test
rcll
mov
fwait
jo
cmp
loop
xor
mov
rorl
cmpsl
pop
and
movsb
gs
push
stos
sub
push
sub
push
movb
push
fcomps
or
inc
call
scas
mov
mov
push
push
fistl
push
mov
and
enter
and
bound
mov
dec
jno
sbb
push
or
jge
cmp
cmpl
jmp
adc
inc
sbb
shl
out
inc
lods
mov
pushl
sub
mov
push
xor
xor
mov
ror
add
jle
mov
xchg
pop
cli
icebp
pop
jns
pop
push
ds
lods
add
dec
add
mov
adc
les
jno
in
sbb
pushf
cld
push
out
add
sub
ja
je
mov
mov
int3
in
and
or
xchg
mov
push
pop
xorb
lret
imul
and
jo
scas
dec
and
xchg
in
lahf
popf
or
or
int3
mov
inc
fcmovu
cmpsb
dec
sub
inc
dec
jmp
adc
pop
mov
mov
ja
jb
and
pop
ss
aam
int
outsb
jle
jnp
daa
dec
arpl
add
jmp
adc
and
scas
jnp
je
or
pop
out
fistpl
jle
mov
dec
je
push
ja
je
cmp
mov
jp
xor
xchg
jp
jae
cmp
mov
sbb
popl
mov
std
test
sti
jae
xlat
das
mov
fsubrs
decb
pop
incl
push
test
fidivs
push
adc
test
jno
mov
repnz
lcall
sub
sub
mov
jecxz
mov
cmp
xor
je
and
push
pop
inc
lds
xlat
mov
mov
cmc
add
js
es
int
pop
add
jle
das
or
pop
das
sbb
pop
fsubr
cmc
add
cmc
push
shl
test
cmc
sbb
push
mov
lret
out
push
adc
or
xor
sbb
mov
xor
mov
add
mov
enter
xor
inc
hlt
xor
jle
inc
repnz
add
mov
in
fldcw
lock
sub
sbb
mov
shll
push
lret
in
inc
lock
les
sbb
cmp
push
aam
outsl
adcb
cmp
mov
jo
inc
or
xchg
stc
xchg
and
nop
andb
stos
sub
addb
push
pop
sbb
xchg
clc
jo
sbb
push
inc
xchg
push
call
inc
push
call
nop
mov
mov
pop
or
pop
dec
scas
xor
jnp
sbb
and
adc
in
lods
test
adc
mov
cmp
sbb
lcall
leave
pop
je
or
or
jge
push
aaa
lods
mov
rclb
mov
in
lds
adc
incb
add
inc
icebp
sarb
inc
or
add
in
out
jb
int
and
xlat
jns
push
aas
jb
adc
in
cmp
lret
or
add
test
cmp
mov
sbb
into
or
mov
add
pop
roll
pop
xor
adc
lret
stc
loopne
push
sub
mov
das
or
cmpsl
or
lods
ljmp
loop
sub
pop
sbb
sub
and
pop
xorb
mov
in
outsb
jnp
add
dec
aam
xlat
lods
or
xor
xor
pop
mov
push
sub
scas
cmp
or
or
test
cmpsl
fiadds
cmp
inc
jl
stos
or
push
lods
mov
inc
mov
push
adc
inc
jg
sub
push
mov
shl
add
xor
lds
mov
ja
das
ret
mov
jb
add
mov
pop
test
hlt
adc
adc
retw
leave
js
stos
in
cltd
pop
movl
mov
cmp
push
in
mov
jno
mov
adc
ss
mov
sbb
shl
arpl
test
sub
jbe
mov
sbbb
xlat
test
mov
insb
sub
mov
ja
jmp
sub
int
ret
sbb
mov
pop
cmp
iret
fmull
dec
shrb
sub
inc
pop
nop
mov
mov
sub
or
mov
lret
sbb
mov
xlat
int
xchg
test
movsb
jb
push
jmp
push
cmp
pushf
mov
in
scas
pop
gs
in
jae
loop
jge
add
push
mov
mov
cmp
add
push
jne
push
mov
mov
mov
xchg
scas
or
push
sub
aas
or
stos
and
jl
mov
mov
daa
xor
not
inc
aad
ret
je
cmp
pop
xchg
arpl
iret
ja
mov
inc
aaa
stos
pop
in
pop
inc
cmp
xchg
test
mov
loop
ljmp
add
out
push
imul
adc
pop
data16
int3
fistps
push
jae
imul
js
adc
js
lahf
push
cmpsb
sbb
dec
mov
xor
insb
push
jmp
mov
test
pushf
or
mov
cmp
mov
inc
xor
and
dec
cmp
loop
jmp
out
inc
incl
ds
push
into
dec
adc
mov
pop
add
jmp
add
dec
js
loopne
das
out
and
rclb
inc
icebp
add
push
or
inc
push
dec
inc
push
adc
push
push
and
out
jmp
push
adc
jbe
rcr
scas
mov
insl
xchg
or
ds
mov
push
pop
cmp
test
jb
push
mov
jg
sub
inc
hlt
scas
insl
imul
hlt
jmp
cmp
repnz
pop
loopne
or
xchg
and
jno
test
jne
repz
adc
int3
inc
test
mov
cmpsb
std
push
sbb
mov
and
es
out
pop
loope
addr16
clc
je
dec
sbb
and
mov
orb
and
mov
in
pop
xor
cld
xor
lock
loopne
mov
mov
pop
jmp
mov
fadd
into
cmp
stos
mov
dec
stos
icebp
cs
push
cld
rcll
loope
pop
dec
push
cld
mov
fdiv
pop
lods
pop
ljmp
daa
cmp
cmc
jne
fsubs
clc
mov
and
ss
pop
pop
inc
xchg
add
rcll
scas
jp
idiv
adc
ror
mov
mov
push
xor
jmp
and
dec
hlt
mov
shlb
ret
cwtl
movsl
push
xchg
in
clc
imul
or
psrlq
jg
fcompl
movsb
in
les
adc
inc
push
lcall
mov
sbb
addl
sbb
or
sarl
pop
aad
pushf
push
int
imul
xchg
pop
leave
push
aam
push
insl
and
fwait
add
lret
mov
mov
sbb
lock
sub
ret
insb
adc
push
cmp
mov
xor
jbe
leave
push
ret
loop
adc
test
ret
and
ja
xlat
add
rcl
orl
or
push
dec
cwtl
mov
stos
ret
mov
lret
rcll
or
idivb
cmp
jbe
adc
mov
push
lahf
or
jp
pusha
xchg
cmp
imul
sbb
lods
lock
cs
mov
adc
pop
cmp
and
or
xchg
inc
fadds
int3
js
les
sub
fldl
adc
or
mov
adc
dec
xor
or
fisubrl
adc
movsl
hlt
push
push
icebp
mov
test
and
rcrl
test
inc
mov
sbb
loop
rorb
push
subl
inc
cli
enter
rolb
push
testb
push
test
mov
pop
push
dec
jmp
fcomps
dec
or
stos
test
mov
add
xchg
inc
inc
ss
rcll
inc
push
mov
enter
inc
or
jge
nop
dec
test
and
or
add
pusha
xchg
cmc
hlt
jecxz
push
mov
mov
in
nop
jnp
inc
outsl
call
mov
loopne
sbb
nop
xchg
cld
cld
rcll
adc
shl
mov
push
je
cltd
xchg
xchg
and
dec
dec
and
push
push
ret
inc
cltd
fs
fcoms
adc
xor
push
faddl
sbb
mov
or
fildl
mov
mov
clc
cmc
rolb
out
pop
push
fwait
cmp
push
sub
jl
inc
test
mov
sub
in
pop
add
test
dec
ja
cmp
imul
or
or
adc
div
cld
rorl
fisttps
aaa
mov
fcomps
rcrb
xor
xor
mov
gs
jne
shr
std
xchg
push
pop
mov
push
add
push
mov
dec
jmp
pop
adc
mov
inc
hlt
jb
push
or
sbb
or
jno
ret
mov
dec
and
mov
lods
push
pop
dec
mov
push
jl
inc
xchg
cld
or
loopne
inc
fs
in
xlat
push
xchg
ret
pop
jge
push
test
xor
push
int3
inc
in
add
pmullw
fildl
pop
cmc
jb
adc
inc
add
jb
push
in
daa
cmp
lods
dec
mov
leave
or
lock
jb
jno
pop
push
sti
inc
pop
jg
orb
inc
je
sar
cmc
jnp
out
lea
imul
mov
ret
or
xchg
mov
pop
pop
mov
or
dec
xor
adc
push
pop
xchg
jp
insl
ja
inc
in
call
push
fs
dec
push
lahf
les
sbb
add
inc
push
cli
cmp
insl
js
xor
cli
daa
add
dec
pop
push
or
jmp
or
xor
push
sbb
pop
fs
lods
bound
sub
les
test
loopne
inc
push
cwtl
dec
rcrb
mov
xor
push
push
push
push
cmp
lahf
dec
dec
mov
addb
mov
jmp
ja
push
pop
ss
js
adcl
push
jae
out
xchg
xor
mov
int
cmp
imul
inc
ret
insl
adc
sub
adc
add
jecxz
jo
fcomps
or
lret
jne
pop
mov
fcmovnu
push
add
mov
push
sub
stos
sub
sti
xor
cmp
sbb
and
push
adc
xorl
add
pop
inc
insl
mov
mov
adc
jne
xchg
test
or
cmp
xor
and
imull
js
sub
sbb
adc
xorl
fnstsw
jl
pop
test
mov
popf
rorb
sub
adc
enter
jne
mov
push
sub
or
and
xor
push
adc
orl
xchg
rcrl
clc
jge
mov
mov
jnp
and
add
or
mov
cld
ds
outsb
std
out
iret
divl
jne
jne
clc
sbb
mov
pop
xchg
adc
sbb
adc
cmp
sub
sar
or
mov
jne
call
lcall
in
add
sub
mov
cmpsl
jge
sbb
mov
and
sbb
xchg
adc
ja
or
inc
dec
or
push
add
lds
adc
fs
in
inc
or
pusha
xchg
sarl
aas
pop
push
push
ja
pop
adc
std
ljmp
sub
pop
popf
push
mov
jl
out
shlb
pop
or
dec
mov
pop
leave
into
xchg
push
adc
add
cmp
push
cmp
icebp
mov
insb
mov
xorps
dec
pop
xchg
loope
dec
mov
ss
shlb
aad
movsl
inc
fildl
jmp
lods
mov
nop
cs
test
xchg
add
cli
mov
xor
sub
inc
inc
das
inc
xor
push
das
in
push
or
sub
js
jo
pop
stos
nop
leavew
pop
je
call
arpl
bnd
jle
mov
sbb
jne
subl
rcr
add
or
in
rorb
stc
jecxz
xor
and
or
aaa
rcl
cmp
mov
push
lods
std
sbb
add
popa
xor
pop
or
lds
add
sbb
imul
push
ljmp
shl
cmp
stos
pop
jne
mov
in
pop
mov
or
es
or
mov
mov
push
rolb
mov
cmp
xchg
scas
rcrb
push
sub
ret
or
and
sbb
inc
xor
pop
cwtl
xchg
out
stos
jp
call
popa
xchg
xor
xchg
add
in
inc
xchg
test
mov
in
je
pop
sub
and
adc
dec
mov
mov
pop
push
shll
cmp
cmpl
daa
sbbb
sbb
jbe
sbb
jbe
adc
pusha
sub
call
pop
movsl
sbb
cld
arpl
sti
in
pusha
test
out
popa
adc
cltd
dec
adc
xchg
testl
sbb
loop
jge
mov
inc
mov
arpl
add
lea
sbb
push
mov
mov
adc
push
mov
or
aad
rorb
pop
inc
sub
jl
mov
push
adc
xchg
js
fildl
add
or
fcoml
sub
sub
das
sub
jle
insl
push
pushf
cltd
xchg
sub
push
push
mov
mov
or
movsb
imulb
into
push
pop
pop
jae
sub
sahf
add
ret
ret
xchg
inc
mov
mov
xor
push
sub
sbb
insb
fnstenv
or
pop
xchg
sub
prefetcht0
add
push
push
mov
movsl
insb
imul
xor
int
jne
adc
mov
fidivrl
jle
rolb
add
add
xorl
test
inc
adc
mov
adc
pop
je
jmp
lea
sub
fstps
or
std
or
push
xchg
cld
ret
add
push
mov
cwtl
add
icebp
in
mov
arpl
jmp
icebp
pop
pop
xchg
addr16
imul
lds
xor
fiadds
adc
into
subb
clc
fs
pop
leave
in
jno
jge
bound
les
mov
mov
mov
push
dec
mov
push
cld
inc
mov
in
xchg
push
inc
xor
inc
test
sbb
jmp
jne
xchg
adcb
shll
andb
pop
popf
jbe
mov
cmp
sub
bound
loop
push
icebp
and
and
mov
mov
fcoms
xor
data16
loop
adc
mov
or
or
pop
inc
call
hlt
js
insb
inc
in
clc
or
or
fistps
fmuls
es
dec
add
and
adc
shl
add
bound
int3
fcos
xor
adc
lret
enter
xchg
xor
fmuls
pop
mov
int3
or
xchg
push
int
ret
jle
add
out
data16
sbb
inc
and
mov
jge
xchg
or
leave
and
mov
mov
rol
inc
xor
addl
add
loopne
out
rclb
dec
pop
cld
inc
jae
add
mov
cmp
mov
int
gs
insl
sahf
adc
ljmp
sub
fldl
xchg
imul
stos
or
adc
shrl
icebp
jle
and
ds
push
clc
jg
jge
or
adc
mov
or
jbe
inc
inc
mov
ficompl
sub
insl
and
or
and
add
add
cmp
movb
jbe
shrl
aas
jne
bswap
mov
cmovge
aam
mov
lret
shl
notb
icebp
push
jmp
or
loopne
shrb
call
insb
call
or
inc
pop
in
outsb
sub
call
mov
aam
sbb
add
push
jmp
roll
jmp
xor
add
xlat
xchg
imul
arpl
loope
in
insb
lock
in
in
outsb
jo
xlat
adc
mov
or
jmp
push
adc
ja
pop
mov
xor
jle
sbb
sub
pop
jp
sub
testl
add
push
mul
ret
add
int3
push
dec
gs
mov
insb
add
sub
sarl
xchg
addl
insb
insb
xchg
int
insl
lock
mov
int3
push
sub
movsl
xchg
jg
leave
xor
in
add
jnp
hlt
mov
add
iret
xor
xchg
int3
inc
popf
ljmp
repnz
div
test
adc
fcmovnbe
js
push
pop
mov
pop
jecxz
or
lea
add
dec
xchg
xchg
jo
mov
fmull
das
add
xlat
inc
lret
add
inc
adc
fcoms
into
xchg
or
push
je
popa
nop
cmp
cltd
ret
dec
fists
lock
mov
loopne
sub
test
add
sub
mov
or
push
insb
clc
pop
push
jnp
adc
add
mov
call
mov
pop
jno
lock
dec
roll
cmp
push
les
jae
push
lret
push
mov
in
inc
add
scas
iret
or
enter
add
xchg
sbb
or
xor
mov
gs
add
and
jae
in
jg
cmp
jb
lea
pop
adc
push
pop
inc
sbb
add
aad
jbe
sbb
sarb
outsb
push
mov
gs
or
adc
loope
dec
dec
push
mov
test
lock
test
and
fs
add
nop
fucomp
out
push
lods
nop
add
push
and
inc
bound
dec
sub
mov
add
or
and
jge
pop
adc
mov
inc
enter
or
mov
push
jb
fisttpll
shr
sahf
lods
dec
push
push
push
andl
inc
cltd
int3
cmp
inc
sub
mov
sub
pop
mov
jbe
roll
lret
dec
or
mov
test
mov
daa
negl
and
mov
inc
test
mov
push
and
sub
push
shll
jecxz
mov
xor
andps
movsb
pusha
inc
adc
dec
inc
sbb
push
bound
cld
test
cmp
xor
pop
ret
inc
mov
rdpmc
clc
push
jmp
cmp
lds
mov
call
xor
add
ss
je
lea
sub
rclb
es
pusha
jo
and
mov
lcall
call
fsub
mov
adc
mov
js
ja
fimuls
xchg
cmp
adc
cmp
jle
push
ret
or
adc
lahf
add
dec
push
and
lods
les
pop
jne
int3
mov
inc
pop
push
int
rolb
repnz
fdivl
jb
fidivs
inc
hlt
bound
mov
lods
push
out
sarl
mov
cmp
jb
xchg
cwtl
sbbl
cwtl
mov
push
or
jae
aam
push
lods
shrb
mov
rcrl
jne
test
sbb
push
sbb
sbb
jbe
mov
cmp
sbb
push
cmp
push
adc
adc
add
lahf
fadds
rolb
int3
jb
sub
add
enter
mov
adc
popf
pop
push
insl
or
mov
js
cs
xchg
movsb
leave
popa
ja
mov
add
cmp
mov
std
ret
cmp
je
or
pushl
sub
lea
call
push
adc
cmpsl
mov
je
push
imul
cmp
outsb
and
mov
jmp
push
punpcklwd
fmull
fdivrs
adc
sub
loop
testb
ret
or
jecxz
sbb
insl
add
pop
adcb
sub
popa
mov
femms
add
int3
inc
fsubr
fcomps
ds
iret
outsl
cmpsb
add
lods
mov
repz
loope
sub
jns
andb
sub
jecxz
or
mov
cmp
cmp
lds
push
inc
lret
ljmp
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
mov
mov
push
pop
shll
das
stos
jmp
fsts
mov
data16
andb
xor
jo
insl
orl
mov
jecxz
cli
mov
mov
jbe
int3
inc
cmp
fsub
pop
filds
neg
clc
add
adc
and
add
int
testb
mov
std
in
lret
add
rep
pop
or
ljmp
ret
add
xor
xor
cmp
fbld
sbb
and
ret
out
mov
mov
in
xchg
xor
sbb
mov
sbb
xchg
aam
xchg
cli
add
and
add
jbe
stos
mov
adc
add
mov
pop
push
push
inc
movsb
push
adc
pop
pop
add
pop
xchg
cmp
fiaddl
or
test
mov
testb
int3
sbb
adc
shll
inc
aaa
mov
lret
in
pop
or
sbb
or
inc
mov
cmpsl
push
pop
sbb
pop
push
je
loop
or
ficompl
dec
sahf
add
out
ss
divb
jbe
enter
aaa
inc
inc
cmp
jb
sbb
push
mov
or
dec
mov
dec
mov
or
pop
add
jecxz
fidivrs
jle
jne
decl
inc
adc
adc
push
sarl
shr
mov
loopne
movsl
or
stc
or
or
rclb
sub
or
idiv
fiaddl
dec
adc
push
lock
jge
inc
mov
insl
sub
andl
out
push
dec
push
push
push
testl
jmp
jmp
mov
hlt
or
mov
inc
cltd
add
ljmp
pushf
or
mov
add
out
sbb
xor
push
sub
sub
xchg
mov
cmp
mov
dec
push
ljmp
sub
js
and
in
push
add
fistps
adc
push
push
mov
das
jecxz
jnp
push
sbb
dec
inc
or
jo
add
rol
fcompl
adc
push
adc
jnp
dec
sub
push
addr16
xor
inc
mov
mov
push
sub
mov
bound
mov
sarb
cltd
push
test
cmp
rorl
in
mov
adc
adc
aam
not
imul
jmp
and
insb
xchg
fisttpll
sbb
xchg
mov
and
fwait
rcrl
mov
inc
adc
jg
jge
fiadds
fs
jle
sub
jmp
adc
ret
enter
mov
popf
push
or
ljmp
jmp
orb
sbb
test
pop
loop
push
leave
jnp
stos
dec
and
push
and
les
mov
push
js
jb
dec
mov
clc
orl
sbb
cmp
je
mov
xor
sbb
repz
insb
lahf
ret
lea
repz
in
test
imul
add
cltd
inc
lcall
nop
cmpsb
cmp
add
or
int3
xlat
out
mulb
cmp
outsb
stos
jno
jle
add
add
lea
dec
and
leave
mov
adc
popf
pop
popl
jb
add
xchg
or
or
es
out
dec
or
sub
dec
or
pop
cmp
nop
out
or
add
dec
aaa
mov
or
or
cltd
inc
mov
or
cmp
push
ja
cltd
inc
mov
adc
adc
xor
dec
sub
add
pushf
adc
and
xchg
adc
adc
adc
add
pushf
inc
lcall
and
enter
adc
leave
add
popf
adc
dec
and
push
push
push
pop
lret
enter
xor
sbb
xorl
adc
sbb
sbb
add
cltd
inc
lcall
iret
sub
je
add
je
sbb
inc
lcall
jmp
push
inc
sbbl
adc
movsb
pop
pop
add
mov
xchg
jae
std
inc
adc
add
cmp
xchg
mov
mov
xchg
pop
mov
lahf
out
notb
je
dec
repnz
push
in
repnz
lea
xor
push
adc
aad
sbb
add
xor
mov
xor
fwait
out
sub
push
xor
xchg
out
in
je
call
movsb
jmp
dec
dec
jmp
lcall
sub
in
dec
pusha
xchg
in
dec
mov
inc
in
and
sahf
dec
es
out
out
jge
gs
mov
pop
lock
or
nop
lock
cltd
inc
lcall
or
imul
hlt
push
add
dec
es
cmc
cmc
and
loope
add
pop
negl
sub
sub
popf
dec
pusha
xchg
dec
adc
data16
shlb
stc
lock
cli
jmp
iret
sti
mov
leave
lret
jae
stos
cld
cld
cld
je
stos
and
sub
stc
out
mov
sbb
sbb
adc
ret
inc
decl
sub
insl
filds
lahf
rorl
mov
pop
shrl
or
jecxz
jecxz
add
inc
dec
std
sti
in
in
nop
out
fsub
in
adc
dec
cld
adc
cmp
dec
cmp
add
or
sub
mov
nop
gs
jmp
jmp
adc
enter
in
add
in
cli
popf
cli
mov
cli
out
out
out
popa
popf
dec
pusha
dec
push
lock
cli
push
cli
enter
mov
stc
repz
in
jbe
dec
sar
sbb
inc
dec
push
stc
stc
cmp
mov
outsb
pop
stc
testl
testl
xchg
xor
add
stc
adc
xchg
inc
out
clc
push
mov
xchg
out
clc
sti
sti
sti
dec
add
dec
mov
insb
pop
addl
cmp
push
cmpsb
imul
jno
jle
dec
and
push
mov
add
enter
icebp
notl
or
sub
idivl
test
mov
or
nop
in
out
out
dec
leave
sub
notl
xchg
inc
and
mov
popa
xor
imul
ljmp
imulb
test
sbb
xchg
testb
out
out
test
imulb
jb
cmp
testb
mov
lret
jae
repnz
scas
mov
mov
sub
push
and
cmc
pop
sahf
push
pop
or
div
into
add
sbb
cmp
and
sub
and
clc
loope
jb
jecxz
stc
xor
es
jae
mov
leave
and
xchg
hlt
sub
inc
leave
sub
push
hlt
mov
das
data16
xchg
dec
repz
push
xor
hlt
idivl
push
jo
ret
sti
dec
xor
mov
stos
add
push
loope
dec
int
loope
loope
repz
push
pop
and
inc
scas
repz
mov
sub
imul
mov
popl
inc
and
popa
dec
push
and
fs
jmp
test
repnz
repnz
repnz
in
in
jp
push
repnz
repnz
inc
or
sub
icebp
mov
icebp
icebp
cmp
jnp
leave
or
leave
mov
icebp
push
es
jae
sub
cmc
cmc
inc
leave
and
gs
nop
lock
ret
cmp
stc
in
push
xchg
stc
jp
lock
mov
lock
push
lock
js
xchg
jl
fldl
add
mov
mov
ret
jnp
es
or
pop
inc
pop
int
add
push
add
int3
add
pop
pushf
dec
and
ret
add
mov
leave
mov
mov
pop
jbe
push
out
leave
push
testb
sahf
inc
and
jne
mov
pop
sub
jg
sub
mov
xor
mov
pop
fidivrl
nopl
dec
lret
in
fldcw
ss
pop
pushl
or
sub
ss
popf
cmp
loope
cmpsb
pop
ss
in
xor
jb
push
pop
cmpsb
imul
out
scas
and
in
mov
in
sti
call
out
xchg
roll
in
dec
lock
ljmp
mov
outsb
lahf
faddl
or
push
roll
rolb
cmc
shrl
sub
xchg
add
xor
jp
pop
mov
loop
pop
mov
lock
std
sbb
push
sub
and
ret
sbb
sbb
cmp
mov
and
add
jg
shrl
lock
fsts
inc
lock
and
fists
mov
mov
addb
jmp
dec
mov
orl
pop
mov
xchg
sub
adc
rolb
jmp
sbb
leave
fcomp
adc
test
pop
aad
loopne
push
add
pop
fisttpll
and
mov
enter
and
jne
mov
fdecstp
fisttpl
dec
fcomps
or
pop
lods
sti
loope
rcrl
int3
add
push
xor
fnstsw
adc
adc
push
fidivrl
jae
mov
mov
sbb
ja,pt
cs
pop
jne
jbe
adc
addb
pop
shr
inc
clc
mov
adc
jmp
ljmp
xlat
mov
pop
lock
sbb
inc
in
out
mov
shll
cmp
ja
jb
cmp
jbe
dec
dec
mov
pop
sti
mov
dec
jne
insb
jo
pop
pop
pop
mov
sbbb
add
xchg
outsl
jp
push
sbb
les
jb
cs
dec
push
pop
xchg
sbb
sub
jmp
or
jae
mov
test
adc
add
lock
pushl
inc
cmp
roll
and
loop
push
addr16
add
inc
je
imul
sbb
pop
or
adc
push
dec
repnz
sbb
push
cmp
inc
fsub
add
sahf
adcb
stc
or
adc
je
pop
push
test
add
cmp
dec
inc
ja
rorb
xchg
add
xchg
add
pop
and
mov
sub
pusha
push
dec
out
mov
jne
xor
adc
lret
push
push
mov
in
js
sbbl
add
inc
cltd
nop
adc
add
xor
cmp
or
adc
inc
adc
or
cmp
add
bound
sbb
stos
fldt
push
push
mov
add
sbb
stos
call
ja
xor
add
lea
sbb
ret
dec
into
push
jecxz
and
adc
mov
sub
mov
add
adc
int3
mov
ljmp
or
fidivs
fisttpl
sbb
add
adc
fists
lock
mov
xor
lret
inc
rorl
rorl
outsb
cs
sar
jne
mov
mov
inc
inc
mov
or
leave
push
or
dec
aaa
out
mov
add
cmp
mov
cmc
mov
xor
push
mov
pop
jmp
roll
sbb
inc
jno
mov
push
jae
mov
stc
add
cmp
pusha
ret
ja
mov
shl
cmpl
push
orl
rclb
cmp
in
push
shll
jle
jne
shll
jns
hlt
jmp
add
jmp
imulb
sbb
push
sub
push
mov
xorl
pop
sbb
cmp
fcmovnu
filds
sbbl
clc
xor
sub
test
mov
mov
test
pushl
add
jbe
pop
mov
test
orl
fs
stos
mov
push
xor
lret
insb
outsl
fstps
mov
adc
call
cmp
ret
push
jne
daa
or
shl
sbb
fldenv
jne
pop
xor
mov
test
add
pop
mov
inc
cmpsb
movl
repnz
xor
inc
lock
add
xorl
or
pop
cld
bndldx
psubusw
je
push
or
mov
stos
xchg
icebp
rcr
incl
xor
adc
out
out
mov
inc
mov
lea
outsl
iret
and
gs
cltd
popa
sbb
push
ljmp
loopne
sub
xchg
call
fsubrl
inc
fdivs
jge
xor
mov
push
adc
clc
cmp
pmaxub
push
inc
pushf
sbbb
jno
mov
xchg
inc
pop
pop
push
or
pop
add
or
xor
add
fwait
std
ds
or
clc
push
int
xor
leave
stc
inc
adc
mov
addl
sbb
sub
outsb
inc
aad
add
call
jne
cmc
xor
pop
pop
mov
popa
lea
mov
add
aam
jae
insl
add
mov
push
add
addr16
fdivs
frstor
stos
jge
ret
mov
movb
mov
ret
divl
mov
add
pop
or
mov
sub
adc
fldl
ret
and
or
lret
pop
cmp
mov
mov
loopne
in
in
pusha
pop
ret
xor
movsl
cltd
pop
and
sub
or
xor
xchg
movl
or
data16
jmp
icebp
push
sbb
es
xorb
sub
sbb
push
test
add
aaa
mov
andb
mov
or
jg
mov
cmp
rcr
stos
dec
dec
imul
pop
inc
jae
fbld
pop
mov
or
into
lea
jle
and
shlb
adc
mov
push
or
adc
jp
cmp
push
mov
or
jl
inc
jb
adc
test
mov
add
ljmp
lock
and
je
jmp
inc
cmpb
je
push
decl
or
jb
cmp
add
popa
mov
shlb
sbb
add
jmp
xor
insl
jnp
pop
inc
je
lods
xor
loop
pop
loopne
je
lods
aaa
je
sub
aaa
pop
mov
adc
jne
add
jmp
cmp
aad
pop
push
outsl
dec
inc
and
cmovo
jmp
test
jns
adc
cld
adc
mov
push
xchg
cwtl
repz
xchg
push
lds
pop
xchg
sbb
pop
or
mov
ret
fstl
add
movsb
ss
lock
cmp
addr16
dec
xor
push
popa
test
iret
lret
call
mov
or
jmp
xor
sub
cmp
pop
iret
inc
cmp
jle
cmp
or
sbb
adc
push
call
mov
mov
movsl
inc
ret
movsl
nop
add
mov
jne
or
inc
movb
int
nop
pop
add
add
das
or
sub
add
aas
mov
cmp
cmp
push
movb
pop
push
push
pop
lds
or
andl
addr16
push
repz
adc
cs
je
or
jns
xchg
pop
sub
push
cli
pop
or
dec
cmp
cmpsb
imul
insl
cltd
push
dec
mov
in
aam
push
ret
xor
aam
cltd
mov
std
add
dec
in
inc
pop
mov
adc
lret
iret
cwtl
push
add
sbb
hlt
jmp
ficoms
xor
or
addl
je
add
mov
fildl
not
das
stos
inc
push
add
or
pusha
or
mov
pop
pop
in
and
inc
test
jl
std
pop
sbb
decl
xchg
xchg
pushl
orl
sub
jle
imul
clc
sub
popf
sub
jo
sub
sbb
lock
hlt
jb
imul
mov
jg
cmp
jbe
and
shrl
stos
or
sub
ficoms
cmpsl
mov
cmp
addr16
stc
pop
push
push
push
pop
in
sbb
fistl
and
add
fsubrs
xor
sub
shlb
xor
test
insl
imul
dec
insb
push
mov
repnz
xor
outsb
pop
cmp
ret
and
xor
sub
inc
push
aam
mov
sub
push
sub
aad
fs
je
sub
outsb
jl
push
fildl
sub
or
xlat
sub
xor
adc
jmp
lcall
testb
sub
xor
lods
mov
xchg
movsb
adc
popa
push
jge
cmp
lcall
fucomi
ss
mov
push
es
insl
sti
icebp
pop
dec
xorl
inc
dec
push
into
pop
mov
and
ficoml
or
ja
or
addr16
ret
hlt
clc
outsl
inc
out
clc
mov
dec
cs
pop
xchg
das
sub
push
mov
repz
mov
inc
mov
adc
int
icebp
lds
insl
cmp
je
mov
sub
dec
js
lret
fstp
cmp
xchg
enter
jb
inc
aam
test
mov
mov
adc
mull
popa
jg
cltd
sub
adc
aas
sub
mov
xchg
adc
adc
pop
mov
and
stos
mov
jo
cmp
add
add
hlt
adc
into
xor
lret
add
movsb
push
fdivs
inc
or
or
je
testb
rolb
mov
pushf
dec
mov
and
enter
sahf
out
aas
or
jg
lcall
add
iret
add
sub
inc
mov
push
insl
xor
adc
ss
cmp
hlt
or
aaa
iret
in
add
mov
pushf
adc
sbb
inc
fisttps
mov
loopne
dec
pop
sbb
and
push
push
sbb
jl
out
stos
loopne
cmc
and
and
ds
jbe
call
push
push
or
adc
roll
addr16
pop
or
jl
fidivrl
push
add
jbe
pop
or
sub
dec
add
xor
stos
jne
outsl
mov
lods
cmp
loopne
jle
dec
add
or
xchg
sbb
push
test
outsb
or
push
neg
imul
mov
pop
ret
repnz
cmp
jne
mov
push
inc
daa
sub
ficoms
inc
cmpb
jge
pop
sbb
inc
enter
add
mov
jge
mov
int3
or
sahf
mov
ret
fs
pop
js
movsb
test
add
mov
sub
hlt
test
je
mov
mov
inc
xchg
test
or
jbe
sub
jae
cmpb
add
fcomi
pushf
inc
cmp
jb
adc
mov
hlt
push
movl
cmp
add
test
jb
adc
orb
mov
sti
add
xchg
imul
sbb
jns
es
sbb
mov
inc
mov
movsb
mov
cmp
mov
inc
cmp
jb
imull
sti
ss
jmp
xor
xor
shlb
add
cmp
cmp
lea
fsubrs
test
rorl
rolb
mov
and
js
add
push
retw
lds
insb
fsts
outsb
adc
outsb
push
enter
inc
daa
pop
push
or
inc
xor
test
or
or
sbbl
push
push
mov
push
or
bound
jne,pn
push
push
inc
or
aaa
andl
pop
push
les
mov
and
push
addl
repnz
test
xchg
shrb
add
xor
leave
rcr
roll
mov
pop
divl
out
xchg
add
xchg
or
cmpb
insb
inc
cmp
inc
push
adc
shl
arpl
stc
push
inc
test
jmp
sub
lock
jle
push
push
lahf
cmp
subl
aaa
paddw
jb
mov
dec
inc
insl
add
mov
push
insb
adc
mov
dec
loop
dec
stc
pop
jmp
bswap
adc
in
and
pop
mov
scas
dec
adc
push
adc
rcll
add
xchg
xor
decl
push
xor
push
push
jl
out
pusha
cmp
and
add
lock
xlat
push
popf
sbb
sub
and
mov
push
das
cmp
adc
push
mov
inc
mov
push
jmp
push
mov
sbb
or
mov
cld
inc
fwait
inc
jmp
fnstcw
pushl
xchg
lock
lahf
addl
test
push
fstps
dec
js
or
jmp
mov
dec
sbb
es
pop
inc
call
push
sahf
mov
hlt
and
mov
addr16
push
dec
mov
push
adc
aad
dec
dec
movsb
push
push
push
push
add
mov
inc
movsl
inc
pop
sbb
insl
jbe
outsl
movq
jl
cmp
jb
and
jl
jg
cmp
jbe
mov
pop
mov
mov
sbb
sub
in
adc
xchg
push
mov
jl
jl
xor
add
lods
stos
mov
sbb
push
hlt
mov
add
push
pop
test
push
mov
mov
pop
in
pop
xor
divb
mov
xor
push
or
iret
mov
and
stc
add
dec
push
lret
adc
xchg
inc
mov
push
xor
mov
ficompl
mov
adc
sbb
shrb
push
xor
mov
cmpl
mov
sbb
inc
pop
push
cmp
xor
insb
sub
fidivl
adc
int3
dec
mov
or
sbb
and
call
test
jl
jg
inc
mov
push
leave
jbe
jae
pop
cltd
pop
push
fisttpl
notl
add
jns
and
cmc
jl
out
pop
fwait
mov
xchg
and
movaps
rolb
pop
xor
sub
adc
or
fidivrs
push
mov
adc
pminsw
shl
pop
rcrb
shl
shll
outsl
pop
ja
pop
mov
in
add
adc
loopne
fsubl
adc
mov
das
sbb
repz
enter
int3
sub
popa
outsb
push
hlt
das
pop
add
clc
notl
icebp
mov
test
into
movl
mov
push
out
mov
sti
rcrb
or
mov
mov
or
jg
inc
jb
xor
adc
mov
les
rorb
cmp
and
push
add
push
and
fmul
aam
outsl
sbb
dec
fmuls
mov
loopne
inc
mov
cmp
mov
sub
mov
mov
xor
mov
das
dec
js
shr
lds
push
inc
mov
and
mov
add
add
adc
ficoms
cmp
and
or
xor
dec
adc
and
test
mov
sbb
pusha
mov
pop
loopne
add
inc
add
mov
pop
add
add
sub
stc
fmul
xor
pop
add
ret
ficomps
and
and
das
sub
jne
dec
adc
shll
hlt
and
cmp
andb
pop
push
sub
mov
mov
mov
adc
into
mov
fs
stc
or
pop
filds
rep
jmp
mov
push
or
xor
test
mov
lea
scas
stos
jmp
or
jne
mov
mov
insb
fstps
or
pop
xchg
popf
fs
lea
and
push
add
cmpsb
and
repnz
out
movb
mov
add
push
dec
rcll
mov
mov
call
call
lcall
clc
cld
cld
imul
dec
cli
sub
cs
lcall
add
clc
adc
xchg
nop
mov
ss
adc
and
sub
cmp
sbb
jecxz
popa
repnz
ja
pusha
neg
out
loopne
xchg
mov
stc
sub
sub
xor
nop
inc
or
nop
insl
add
repz
add
pop
out
add
and
out
sub
mov
sub
data16
mov
dec
pop
dec
shll
in
in
add
cld
add
mov
xchg
pusha
or
daa
pusha
fwait
sbb
xor
rcrl
sbb
dec
shll
or
adc
shlb
add
xchg
mov
mov
pop
insb
pusha
fwait
popa
mov
out
mov
ja
adc
jge
adc
pop
test
sbb
andl
fwait
dec
out
adc
xchg
add
pop
out
cmp
push
sub
push
push
out
fxch
sub
loopne
fcoml
iret
popf
aam
sarb
in
xchg
arpl
in
popf
enter
cmpb
movsl
shrb
and
imul
dec
cld
xor
test
or
adc
movsl
in
adc
lcall
push
pushf
push
test
lea
fwait
add
add
xor
ret
inc
les
push
daa
pushl
push
add
ds
jp
enter
enter
js
xchg
lret
out
je
clc
bound
bound
nop
inc
and
roll
arpl
push
dec
imul
lock
xorb
insl
mov
add
pushf
in
add
fs
fs
adc
cmp
pusha
and
outsb
mov
enter
mov
lcall
int3
aam
in
adc
mull
pusha
insl
mov
add
cmp
iret
loopne
mov
xlat
xor
enter
iret
add
add
pop
push
sbb
cmpsb
mov
inc
pop
jmp
mov
pop
push
or
or
pop
les
rclb
add
nop
inc
and
leave
add
jp
xor
push
fs
mov
pop
pusha
inc
add
xchg
insb
cltd
mov
add
and
insb
xchg
push
and
pop
add
fildll
jne
xor
xor
cmp
test
clc
mov
pop
popf
mov
add
lods
add
sub
rcl
test
dec
and
sbb
sbb
out
push
paddb
jo
xchg
inc
push
dec
add
test
aad
xor
pop
or
and
xor
push
lea
push
dec
insb
jnp
ja
jae
sbb
xor
add
dec
pop
push
adc
sahf
stos
and
and
pop
ret
xchg
mov
or
inc
and
ljmp
add
push
cmp
and
mov
sub
sarl
cmp
es
js
cmp
push
das
push
stos
into
add
notb
mov
sahf
lahf
addr16
inc
icebp
mov
sub
mov
lds
test
xor
push
mov
fs
or
es
inc
in
jo
es
pop
cmp
adcl
je
add
cmp
mov
push
movsl
pop
dec
dec
addr16
adc
cmp
inc
lds
pop
cmp
cwtl
or
lcall
push
in
mov
ss
adc
or
test
mov
mov
cld
inc
sahf
inc
aad
test
mov
xor
jb
inc
and
je
push
mov
or
xchg
gs
mov
movb
movl
and
lret
xchg
scas
cmp
int3
rclb
ficompl
adc
popf
or
and
iret
and
and
and
mov
sbb
fisubrl
cmp
inc
stos
sbb
push
dec
fnsave
roll
cmp
adc
sub
pop
jnp
and
adc
rcr
mov
inc
test
daa
cmp
push
pop
add
mov
test
xor
adc
lcall
jbe
mov
push
add
xor
repnz
adc
mov
jae
or
cmpsb
or
rcll
outsb
enter
adcb
fists
xor
cmp
mov
loop
int3
jmp
dec
cmc
enter
pop
bound
rclb
mov
lock
inc
cmp
jl
loop
and
test
jnp
clc
icebp
dec
push
mov
push
insl
je
and
hlt
rorl
mov
fsubr
push
push
cmc
call
sub
filds
les
or
jne
push
out
leave
ljmp
pushl
adc
pop
dec
movsl
mov
in
xor
dec
movsl
mov
xor
cmp
cmp
pop
or
outsb
push
pop
out
test
stos
setle
push
inc
popa
shlb
push
pop
or
dec
push
xor
pop
js
sbb
or
and
sub
jne
cwtl
cmp
fcmovb
dec
and
mov
shrb
and
jno
sbb
ds
or
add
leave
adc
sub
xchg
movsb
shrb
push
ljmp
adc
jmp
pop
inc
rol
mov
das
inc
cmp
imul
shr
xorb
jnp
orb
aaa
sbbb
push
dec
roll
ljmp
sbb
mov
mov
push
cld
mov
mov
or
pop
gs
sar
dec
cmp
push
push
pop
mov
jg
mov
inc
adcb
sbb
jmp
dec
add
shll
pop
mov
and
in
add
dec
loopne
pushf
mov
icebp
jmp
cmpsl
push
cmpsb
lret
ficompl
addl
push
push
scas
adc
pop
xchg
into
push
fstpl
jecxz
popf
shr
out
mov
popl
jne
adc
sti
add
insl
or
add
dec
pop
cmp
jbe
fiadds
dec
je
fwait
xor
cmp
fimuls
in
insl
push
jno
jno
mov
call
mov
shr
not
and
add
sbb
fwait
lea
mov
sbb
aas
inc
jb
rcll
scas
dec
jle
or
loope
lret
rcl
or
les
cld
int
pop
subb
pop
and
dec
xlat
mov
add
mov
mov
adc
dec
paddd
mov
inc
and
adc
push
dec
push
xor
je
sbb
pop
inc
cmpsl
or
jmp
mov
sbb
and
push
and
rorb
mov
or
out
bound
xor
test
imul
cli
fcoms
test
add
cltd
pusha
pop
shll
jb
dec
or
mov
mov
pop
xor
push
or
sti
sub
mov
insb
add
decb
or
cmpb
cmp
mov
call
push
pop
adc
pusha
and
mov
ljmp
out
fimull
outsb
inc
mov
adc
dec
adc
jne
sahf
test
sti
ljmp
jecxz
rorb
lahf
sub
insl
or
imull
jp
mov
sbbb
or
dec
ja
mov
xor
adc
sbb
mov
incb
stc
js,pt
add
testb
inc
jns
inc
cmp
out
adc
mov
push
cwtl
push
sbb
pusha
or
push
in
jmp
add
xor
int
add
incl
sub
dec
inc
orl
add
pop
lods
jno
in
arpl
rolb
movsb
pop
ja
mov
imul
jo
mov
inc
clc
pop
mov
add
test
mov
adc
sti
mov
or
lea
pop
ljmp
arpl
iret
shr
outsl
jo
mov
orl
mov
or
outsb
testl
inc
cld
lock
inc
lock
xchg
sbb
filds
lret
push
lea
mov
xchg
or
mov
mov
jno
sahf
das
mov
mov
roll
mov
sub
bound
ljmp
inc
and
lret
pop
outsl
push
xlat
sub
pop
shr
lock
je
mov
cmp
out
push
mov
push
mov
adc
into
jle
pop
xlat
test
inc
or
fldz
cmp
out
jb
jp
stc
add
pop
stc
sub
or
cmpsl
in
inc
stc
sbb
loopne
dec
sahf
xchg
add
loopne
jne
movsb
imul
dec
or
addl
sbb
mov
in
pop
in
mov
movsl
mov
dec
sar
dec
inc
add
pop
out
pop
hlt
mov
insl
mov
mov
add
aas
dec
inc
pop
dec
pop
pop
pop
sahf
pop
push
pop
adc
call
inc
sahf
gs
iret
cmp
xlat
mov
and
cmp
sbb
mov
adc
mov
mov
int
frndint
fists
lea
inc
adc
dec
cmp
movsl
and
test
lea
fstpt
sub
and
add
push
jne
xor
imul
orb
sar
in
andb
sbb
sbb
popf
cld
sbb
dec
adc
iret
and
into
je
outsl
test
dec
push
insb
adc
or
ja
mov
pop
mov
or
mov
insl
mov
jo
hlt
rclb
popa
jns
mov
pop
sarl
rcrb
push
cmovbe
and
push
decb
into
mov
jns
into
setns
push
dec
push
sub
inc
sbb
loopne
add
xchg
popa
add
icebp
pop
and
mov
mov
fxch
sub
addl
jno
xor
or
lods
push
enter
idivl
jne
fsts
push
enter
and
or
jne
insl
adc
add
or
mov
pop
and
not
jne
jmp
jnp
add
lock
or
xor
jmp
fadds
sub
adc
orl
les
cmp
adc
mov
popa
imul
mov
add
cs
jl
and
iret
jne
cli
sbb
jo
cmp
cmp
inc
rclb
lods
jbe
mov
or
lods
shlb
imul
aaa
shrb
mov
leave
inc
test
pusha
je
push
stc
cld
or
div
push
outsb
adc
adc
add
ss
pop
dec
movsl
cmp
iret
sub
cmp
in
and
mov
decb
jne
int3
hlt
int
mov
and
jmp
cmp
loop
adc
jae
xor
and
and
fnstenv
sub
sbb
loope
jbe
dec
jp
shrb
fsts
add
adcl
mov
and
mov
out
or
movsb
cld
or
pop
inc
divl
or
xlat
and
in
push
mov
cmp
or
insl
inc
sbb
jp
xlat
adc
testb
lea
ds
mov
outsb
fisttpll
add
out
adc
cmp
adc
mov
sbb
ret
pshufw
or
or
adc
sarl
std
lock
cmpsb
pop
xor
and
jb
add
cmp
jae
mov
jb
data16
fisubl
pop
push
or
add
es
sti
cld
call
pop
xchg
mov
pop
mov
test
mov
mov
mov
mov
fcomip
xorb
es
mov
loop
dec
lds
push
mov
cmp
cmp
out
cmp
stos
adc
mov
dec
mov
les
stos
pop
mov
jne
adc
xchg
bnd
or
stos
adc
enter
repz
iret
insb
lahf
push
mov
in
jmp
stos
stos
push
adc
mov
scas
and
pop
mov
stos
std
dec
sub
pop
xchg
mov
push
or
pop
test
gs
adc
ja
inc
push
clc
xchg
add
pop
mov
fwait
add
mov
push
pop
jb
pcmpgtb
add
mov
xchg
mov
inc
fdivl
subb
repnz
in
ds
incb
add
or
jecxz
cwtl
test
xchg
test
or
les
dec
mov
ss
enter
pop
inc
pop
cmp
push
adc
inc
orl
inc
leave
lock
pushf
popf
hlt
jmp
pop
lods
sbb
pop
imul
inc
ds
add
imulb
clc
cwtl
sti
jle,pt
push
push
cmp
adc
dec
jne
je
data16
jns
shll
add
xchg
stos
inc
cmp
add
nop
xchg
add
je
push
push
mov
scas
dec
call
push
mov
jne
pop
subb
cltd
xor
inc
enter
cmp
and
jmp
and
sub
ljmp
fnstenv
into
push
cmpb
and
push
jmp
mov
incl
iret
dec
js
inc
add
subb
sub
add
mov
jle
aad
add
mov
js
add
inc
loopne
or
pop
ds
mov
mov
inc
inc
inc
lock
call
inc
ror
sub
xor
and
mov
adc
test
sbbb
neg
pop
lret
sub
daa
mov
jo
fildl
sub
loopne
add
aam
fstl
mov
and
arpl
fsubrs
jae
mov
mov
mov
data16
mov
pop
frstor
and
popf
in
out
scas
mov
mov
adc
pop
ja
movsbl
add
mov
lods
test
xor
data16
stos
ljmp
adc
lods
or
fcmovnu
adc
fisubrs
mov
mov
int3
shl
inc
out
rorl
add
fisttps
ss
scas
je
int3
and
into
push
cmp
das
or
or
xchg
xchg
add
cmp
sbb
cmp
sub
movl
adc
decb
push
add
dec
stc
or
loope
dec
cmp
fiaddl
mov
sbb
xchg
lret
jecxz
xchg
mov
push
es
xchg
and
mov
push
xchg
rcll
dec
mov
push
add
je
insb
je
mov
arpl
iret
fs
int3
mov
cmp
adc
add
pusha
adc
jp
xchg
and
cmp
jne
jnp
xor
inc
push
fldt
xor
or
dec
pop
outsb
or
and
pop
cmp
mov
lret
mov
int
lds
add
mov
lods
push
test
popf
adcb
pop
ret
mov
test
jmp
test
je
mov
adc
lods
inc
jbe
dec
pop
add
pop
call
leave
sub
xchg
pop
sarl
push
push
repnz
add
cmp
je
pop
add
push
out
bound
xchg
add
test
test
mov
gs
hlt
cmp
mov
dec
adc
jns
sbb
push
pop
jae
testl
add
push
js
pop
mov
out
inc
sbb
add
xchg
or
adc
or
aam
mov
mov
pusha
mov
xchg
pushf
negb
fld
enter
jmp
fisubrl
jmp
adc
int3
jge
sahf
inc
bound
test
out
or
pop
mov
test
fdivp
and
adc
loopne
aaa
fwait
add
fadds
add
cmp
mov
into
je
add
aam
or
stos
jmp
add
or
mov
mov
lock
jecxz
add
fnstsw
movsb
mov
mov
fimuls
imul
arpl
lahf
mov
mov
aaa
mov
popa
sti
jmp
sbb
mov
lods
cltd
and
inc
adc
mov
test
ret
jo
data16
or
mov
or
mov
bound
jbe
add
fildl
jg
adc
imul
gs
call
mov
or
push
cmpl
mov
adc
pop
aas
or
mov
std
shr
cmp
sub
mov
mov
adc
xchg
or
mov
ret
and
call
inc
jmp
adc
adc
push
mov
or
mov
jnp
cmpsl
out
je
xor
sbb
fldt
or
mov
fucomi
sbb
and
inc
adc
das
cmp
xchg
or
js
sub
lret
sbb
and
jae
xchg
aaa
fidivs
sbb
add
adc
mov
mov
add
movb
iret
aad
aam
not
xor
mov
rorb
sbb
ret
roll
sbb
int
push
test
push
ret
cmp
cli
xchg
movsl
cltd
adc
rolb
cld
lret
and
cmp
jg
jl
jae
xorl
fcmovu
or
addr16
sbb
jne
sub
add
jge
push
sbb
incl
or
jne
and
jne
dec
pushl
mov
fiadds
push
push
enter
pop
clc
cltd
push
push
mov
pop
add
pop
sbb
and
jns
add
or
or
push
dec
jmp
lahf
repz
inc
cwtl
and
fisubrs
loopne
popa
aad
pop
add
into
cmpb
je
outsl
jmp
movb
inc
jmp
dec
popw
push
inc
inc
out
lds
hlt
sub
sbbb
test
pop
dec
cmpb
int3
ss
jl
cmc
push
cmp
xor
sub
sbb
pcmpgtd
or
jmp
test
je
jnp
push
imul
popf
loopne
shl
mov
adc
xorb
shll
sarb
enter
in
leave
sbb
aam
inc
cmp
lods
inc
je
mov
add
adc
ss
mov
xor
inc
mov
sbb
sub
jle
scas
rcrb
pusha
ss
push
or
push
adc
cwtl
inc
push
inc
gs
adc
jne
cmp
lea
testb
pop
mov
xchg
pusha
mov
shlb
dec
fsubrs
and
popa
stos
je
mov
mov
push
adc
jo
rclb
repz
xor
hlt
lea
fcoml
rcrb
insl
mov
add
mov
nop
adc
add
fnstenv
jg
sbb
or
ret
jg
and
dec
add
or
add
push
shlb
pop
push
sahf
push
ret
xchg
test
push
dec
add
aad
in
add
adc
or
pop
lock
or
enter
sbb
adc
test
mov
test
sarb
nop
scas
push
dec
sahf
mov
les
push
iret
and
adc
and
cli
sub
cmp
or
ljmp
or
test
push
cli
or
pop
push
mov
push
lock
add
xor
or
jp
push
xchg
int3
pop
sbb
cmpl
xor
sub
add
adc
push
push
or
xchg
aad
sub
xchg
add
xchg
add
ljmp
int
push
movsl
call
sbbl
jnp
nop
inc
pop
int
push
cmpl
cmpl
adc
and
cmpl
cmp
int3
les
orl
mov
mov
fistpl
rolb
push
mov
add
or
mov
inc
push
ljmp
sbbl
xchg
nop
and
sbb
or
jg
jge
xchg
inc
leave
out
test
cmp
aad
lcall
cmp
subb
cmp
xor
or
dec
pusha
xor
in
inc
inc
loope
xor
fwait
mov
push
sbb
andl
sti
xor
cld
fs
dec
jbe
addl
xchg
sub
sub
mov
xchg
pushf
daa
push
push
mov
jns
mov
dec
orl
and
or
test
mov
pop
enter
insl
add
mov
mov
jb
movsb
jg
stc
sbb
cmp
rolb
and
xor
movsb
bound
aas
pop
test
lods
scas
add
repnz
test
test
xchg
add
test
nop
add
mov
in
nop
nop
add
inc
push
nop
pushf
in
inc
push
lods
lods
lods
aad
test
mov
lock
daa
xchg
inc
lock
je
or
js
push
sub
outsb
je
lods
sbb
add
sub
cmpsb
stos
testb
dec
js
push
mov
ret
mov
pop
adc
lock
outsl
scas
push
sub
lea
xchg
mov
add
jmp
loop
push
adc
xor
mov
add
mov
sti
jmp
mov
sbb
cmc
sarl
jno
stc
loope
ljmp
stos
pusha
sub
ret
cmpb
jb
cli
imul
in
test
or
mov
jne
inc
cmp
add
pop
mov
mull
cmpb
jmp
shr
imul
insl
jmp
inc
sub
add
in
pop
mov
ja
sub
jg
jg
rcll
or
inc
and
and
push
jno
roll
icebp
push
sub
xchg
and
das
and
inc
insb
mov
xor
or
cmp
mov
scas
pop
cmp
or
jnp
iret
mov
call
pusha
leave
cltd
cmp
pop
insb
push
jne
sarb
movsb
or
movsl
mov
stos
inc
and
add
push
stos
lret
test
pusha
iretw
and
dec
in
and
sub
add
mov
shrl
pop
jns
lea
test
ss
testl
adc
scas
aas
push
ds
ss
ljmp
adc
cmpsb
push
dec
push
adc
movl
je
lock
out
data16
xorb
loopne
xor
and
mov
add
mov
dec
push
add
inc
adc
adc
cmp
enter
push
pop
sub
enter
sarl
shl
fldt
add
rcrl
cmp
inc
dec
jne
lea
or
add
or
pusha
inc
test
in
push
or
call
adc
cmp
mov
test
mov
out
sub
push
sub
jmp
inc
out
out
jmp
mov
ja
adc
xchg
or
inc
rcll
xchg
insb
pop
add
sub
outsb
cld
inc
cmc
mov
sub
mov
rcll
adc
fsts
push
xor
dec
lock
inc
bound
shll
test
and
mov
jl
aaa
and
push
sbb
dec
adc
adc
mov
inc
xchg
mov
ljmp
push
inc
sbb
inc
lahf
decb
mov
push
add
lea
lcall
or
push
shll
mov
mov
mov
and
and
or
mov
ret
sub
int
and
xor
or
clc
mov
cltd
inc
jo
sbb
push
and
pop
je
push
shlb
adc
mov
mov
inc
inc
cs
push
mov
mov
and
bound
rolb
mov
test
and
scas
sahf
cs
mov
xor
loop
or
in
outsl
xorl
cmp
std
jne
xchg
insl
jae
fsubr
fistl
cld
aad
jbe
mov
sbb
les
call
das
xchg
push
test
sahf
and
cmp
mov
add
pop
jmp
mov
mov
inc
in
xor
faddl
out
out
fnstenv
or
xor
sbb
cwtl
in
pop
cmp
pusha
adc
jl
dec
cltd
pop
adc
movsb
loope
dec
pop
lea
push
mov
cmpb
jae
cmp
jbe
icebp
mov
jne
mov
test
mov
and
fwait
add
dec
in
leave
xor
mov
fwait
jmp
rcll
push
sub
ds
adc
fidivrs
sbb
inc
cmp
das
push
pop
push
ljmp
xor
shll
mov
add
jb
aad
xor
or
mov
xchg
dec
mov
mov
mov
fs
pop
mov
cmp
xor
dec
adc
inc
addr16
add
in
lahf
mov
sbb
mov
fs
cmp
mov
jg
or
inc
dec
out
add
pop
test
out
pusha
sub
jnp
pop
ljmp
sbb
loop
rorl
mov
and
and
decl
cld
push
inc
orl
mov
inc
xor
out
repz
cwtl
sahf
test
ss
and
mov
push
mov
rep
mov
cmp
mov
cmp
rolb
es
repz
sti
mov
pop
push
xlat
std
jo
pop
cmp
ja
add
and
int
xchg
mov
mov
jo
movl
mov
gs
mov
pop
clc
xor
add
imul
cmp
fists
sbb
add
mulb
pop
push
out
mov
ficoms
mov
dec
xlat
int
pusha
jmp
lret
into
outsb
mov
sti
xor
push
xchg
sub
add
cmpl
xchg
lods
and
cmp
adc
ljmp
outsl
cmp
int3
pop
push
cmp
jne
or
dec
pop
adc
sbb
mov
push
and
or
cmp
insb
rorb
or
test
inc
adc
fnsave
adc
or
mov
mov
aam
mov
cmp
xchg
inc
popa
mov
sub
js
aaa
jae
push
popa
mov
push
sub
adc
orb
lods
xchg
cmp
adc
cmp
push
add
push
push
adc
mov
pop
in
jb
push
je
call
fildll
in
and
lea
ljmp
add
cmpl
cmp
xchg
xor
ds
cmp
sbb
lea
xchg
or
sbb
push
push
daa
xor
xor
lret
jbe
icebp
sbb
xor
pop
repnz
or
mov
xor
popf
cmp
lock
and
lods
jns
cmpl
jo
jo
test
mov
mov
mov
nop
shr
shll
add
roll
add
sub
and
add
xor
fistpll
and
popl
pop
inc
loope
cmc
add
adc
push
push
shll
lds
sti
lods
and
stc
mov
int
mov
mov
push
cmp
push
push
loopne
push
mov
push
push
imul
ret
stos
push
sub
push
xor
nop
xor
nop
mov
xchg
mov
add
fidivl
sbb
mov
je
mov
add
imul
push
fwait
cmp
mov
xchg
dec
js
cmp
cmp
jge
jle
test
enter
cmp
js
xor
sbb
sbb
cmp
jl
notb
gs
fs
icebp
lods
int3
or
inc
fs
in
nop
lahf
orl
xchg
jle
stc
cmp
push
cmp
inc
xchg
cmp
mov
adc
add
pop
in
mov
pop
in
or
jb
mov
sbb
js
orb
adcl
push
cmp
je
push
push
roll
add
bound
fsubrp
push
inc
push
daa
push
push
fldenv
out
cmp
inc
push
jmp
xor
fildl
pop
and
scas
inc
push
push
adc
jge
inc
push
add
jecxz
decl
loopne
into
mov
or
daa
add
es
mov
sbb
ss
dec
shrb
or
mov
and
dec
push
mov
mov
xchg
pop
fwait
mov
or
imul
adc
cld
mov
inc
popl
fidivs
icebp
cmp
stos
shlb
or
mov
ret
xchg
test
adc
les
push
mov
clc
and
or
call
mov
inc
pusha
outsb
test
je
out
fdivrp
cs
cmp
je
add
jne
dec
add
inc
mov
dec
sub
jmp
ss
add
and
repz
jmp
addb
jecxz
scas
jg
add
and
lea
movb
pop
je
lods
es
mov
pop
data16
cmpb
imul
and
lock
sub
les
push
in
ret
shr
mov
add
pop
inc
ror
jne
lret
ret
je
mov
je
dec
je
test
imul
sub
fmull
xchg
mov
jmp
jbe
into
sbb
push
inc
cs
imul
js
popa
add
xor
adc
sub
js
pop
add
inc
add
mov
adc
sbb
xchg
and
lock
mov
add
mov
mov
mov
addr16
subl
pop
scas
jge
inc
xchg
imul
imul
pop
inc
xor
jae,pt
movsl
cmp
dec
xlat
ss
dec
insl
add
stos
fistps
cmpl
push
push
inc
dec
mov
adc
or
lret
push
dec
aad
clc
cwtl
mov
mov
bound
xor
cs
nop
dec
call
add
outsb
js
add
inc
addr16
inc
clc
popa
addl
cmp
aaa
stos
cmp
xlat
stos
push
insb
cmp
call
insb
jmp
lods
inc
lds
push
sar
push
adc
cmp
adc
notb
cltd
mov
or
jb
ljmp
sbb
add
mov
sub
inc
adc
adcb
cs
iret
in
addb
or
sti
add
sub
jae
mov
cmpsb
cwtl
data16
scas
lahf
mov
loopne
and
roll
xchg
and
push
mov
leave
std
rclb
push
ret
jne
jno
orb
or
push
clc
and
stos
mov
orb
push
mov
loopne
jbe
mov
mov
push
and
add
pop
lcall
imull
movsl
aaa
add
jl
adc
jge
push
or
rcrb
pop
and
push
cmc
popa
sti
mov
sarb
mov
loopne
sbb
add
pop
fdivrs
call
lea
xchg
sub
jle
aam
pusha
and
xchg
pshufb
mov
add
push
shlb
cmp
or
bound
xchg
adc
or
mov
inc
aaa
push
mov
int3
dec
test
or
test
inc
mov
or
add
xor
lods
fcomp
cmp
aas
fcoms
adc
leave
push
inc
or
fidivl
inc
subl
in
xchg
xor
insl
add
repz
xor
dec
adc
or
orb
jmp
dec
adc
push
pop
jmp
ret
push
je
adc
xchg
in
repnz
shrb
xor
cmpsb
inc
dec
cmp
or
add
or
pop
xchg
pop
daa
movl
xchg
loopne
jl
push
popa
loop
lock
popf
or
push
fcomip
inc
inc
mov
add
cmp
shll
lcall
iret
jb
sbb
test
and
jl
inc
mov
scas
push
push
mov
cmove
mov
or
test
not
mov
push
aaa
inc
les
push
xor
add
pop
cmpsl
popa
cmp
lock
adc
or
inc
jnp
stos
mov
test
or
pop
arpl
jnp
les
pusha
pusha
nop
mov
inc
std
popa
add
cmp
sub
or
sbbb
mov
in
xor
jne
mov
cs
iret
daa
adc
scas
lock
pop
adc
sub
jo
cli
sbb
sbb
cmc
test
inc
lcall
push
test
push
mov
inc
adc
aaa
jo
int
cmp
push
aas
xor
scas
js
mov
test
pop
fwait
sub
mov
sub
cmp
cld
cmp
loop
sbb
sbb
sbb
adc
insb
fnstenv
xor
jecxz
lea
adc
adc
xor
xchg
adc
pop
dec
sarl
adc
jmp
loop
mov
clc
mov
xchg
inc
clc
outsb
push
pop
fidivl
and
add
push
ss
jmp
mov
rolb
mov
dec
movb
adc
jle
js
mov
bound
sub
push
gs
mov
hlt
gs
push
test
jnp
pop
or
movsl
cmp
push
cmp
mov
pop
mov
fimull
cmc
mov
das
sbb
adc
or
add
sar
push
or
xchg
inc
lea
cmpb
shl
rorb
je
inc
jbe
inc
pop
push
ret
mov
testb
shl
pop
cmp
push
inc
bnd
enter
push
mov
add
mov
push
add
je
ljmp
andl
dec
std
adc
jle
or
xor
adc
scas
mov
mov
push
push
bound
mov
add
ss
cmp
gs
cmpb
add
add
ja
shrl
pop
enter
xor
mov
adc
adc
push
pop
mov
add
mov
jnp
and
adc
mov
dec
adc
test
adc
jecxz
lock
iret
and
cmp
jno
cmp
xor
pop
and
and
and
mov
and
je
jo
adc
or
sarl
add
mov
or
lods
or
stc
sub
adc
mov
jne
lea
mov
test
cmp
lret
int3
ret
scas
ret
and
add
dec
add
jl
push
pop
mov
or
and
inc
lds
lret
push
jae
xchg
jne
aas
or
and
aam
movsl
push
lahf
jle
push
or
sbb
insl
lret
add
pop
jo
fstpt
lcall
les
fcomps
push
lret
jnp
cld
push
pushf
mov
add
jg
dec
out
fisubrl
xor
adc
ud2
in
adcl
jb
xchg
or
jnp
xchg
or
or
inc
and
call
scas
rolb
inc
sub
or
inc
fxch
add
inc
int3
add
inc
dec
sbb
pushw
mov
sbb
inc
movsl
mov
sbb
sbb
mov
nop
and
adc
les
arpl
shrb
test
mov
adc
imul
cmpl
jbe
push
mov
adc
cmp
sbb
ret
jae
jle
xchg
jbe
aaa
sub
rcl
jmp
scas
inc
sub
xor
nop
ret
push
or
ljmp
sub
push
jmp
jmp
adc
fcomps
fcmovnbe
jmp
rolb
jle
xorb
mov
incl
mov
and
pop
jge
push
xor
mov
popa
push
mov
dec
add
or
add
push
unpckhps
rclb
ficompl
jnp
fldt
test
or
dec
adc
into
divb
adc
sbb
faddl
add
or
sub
mov
std
jbe
clc
inc
idiv
ja
cmc
cli
es
add
bnd
loope
add
or
repz
sahf
scas
push
mov
xchg
lods
or
push
insb
addl
in
jmp
sbb
cli
mov
cmpl
test
and
xchg
pushf
cmp
out
sbbb
dec
je
inc
xchg
or
mov
jmp
push
in
cmp
sub
adc
add
mov
sub
cmpb
mov
push
outsb
mov
lcall
adc
dec
jns
pusha
inc
rcll
sbb
pop
jle
adc
adc
inc
repz
loopne
pop
mov
adc
xor
add
mov
xchg
mov
sbb
mov
lods
adc
add
notl
inc
stos
fdivl
outsb
xchg
mov
cmpsb
in
insb
push
push
sbb
loopne
aaa
bound
test
mov
fs
add
jge
pop
and
mov
inc
lahf
pushf
sub
pusha
sbb
xlat
leave
cmp
hlt
adc
add
movb
pusha
outsl
cmpb
negb
inc
ss
je
test
sbb
and
adc
cmovle
or
fwait
xchg
cmp
push
adc
push
jle
inc
cltd
pop
push
cmp
jl
fildl
inc
iret
mov
inc
sub
or
jl
pop
cmp
loope
testb
add
or
in
add
cmpl
call
mov
cmpsl
sbb
or
mov
shl
mov
icebp
ljmp
mov
pop
orb
enter
dec
fistpl
clc
cmp
xlat
mov
jp
mov
imul
sbb
test
push
daa
incl
sbb
cmc
add
push
mov
xchg
adc
imul
dec
jmp
jmp
test
jne
jne
insl
rcr
xor
mulb
push
xor
jno
sub
mov
sahf
icebp
inc
insb
fcomps
dec
popa
pop
jle
pop
ficompl
inc
dec
add
sbb
shr
add
and
or
scas
pusha
add
jo
lret
fmuls
outsl
xlat
cmp
in
lret
or
add
jle
xor
and
sub
xchg
test
vmptrld
pop
andl
sub
mov
push
dec
clc
sbbb
xor
lds
adc
daa
ficoml
add
xchg
xor
add
mov
in
or
outsb
add
or
push
test
outsb
in
cmp
fisttpll
or
repz
cmpsb
outsl
call
gs
hlt
leave
sub
cmpsb
sbb
shll
imul
outsb
add
insb
enter
call
sub
inc
dec
aad
subb
sti
pop
decb
sbbb
stos
in
xchg
cwtl
inc
cwtl
inc
lods
add
test
push
popf
and
jnp
cmc
mov
mov
nop
sbb
sbb
adc
or
push
sbb
aaa
clc
add
fs
scas
in
pop
jbe
mov
lds
cmp
push
lds
sub
and
push
lds
imul
push
repz
pushf
adc
jp
pop
call
cmp
je
cmp
and
and
aaa
sub
add
mov
imul
add
inc
and
bound
nop
in
jge
push
jmp
sbb
inc
dec
and
mov
lahf
pop
je
sub
fildll
pop
call
cmp
jbe
in
push
add
ljmp
fcoms
sbb
push
call
hlt
jmp
fildl
and
movsb
stos
sbb
inc
dec
push
push
pop
hlt
inc
lret
mov
pop
nop
loopne
mov
shr
pop
loopne
dec
pusha
xchg
and
mov
add
sub
add
aaa
adc
and
mov
dec
mov
test
mov
push
push
ret
xor
scas
insl
sub
sbb
dec
ret
pop
adc
jmp
lods
and
mov
cmpsl
push
ret
mov
aad
push
xor
adc
rcrl
jnp
push
push
sub
sub
lcall
sti
or
adc
xor
loopne
xor
adc
pop
mov
out
je
inc
movsb
cli
decb
lds
mov
or
or
jbe
jnp
ja
dec
aas
int3
std
or
and
mov
xor
xor
test
jae
inc
xor
mov
push
pop
mov
jo
add
enter
sbb
stos
clc
mov
fcomps
mov
outsb
sub
and
and
fwait
test
sub
sbb
aam
mov
outsl
rcrb
rcrl
mov
cmp
ljmp
cmp
sbb
call
out
mov
adc
push
gs
push
sbb
sub
push
je
mov
adc
push
pop
sbb
sbb
add
inc
cmp
adcl
adc
pop
rorb
sbb
xchg
scas
ret
add
push
filds
fbstp
enter
adc
add
mov
push
jbe
add
das
cmp
pop
cmp
jb
mov
pop
jbe
push
inc
or
fs
add
enter
dec
dec
adc
ds
push
and
mov
mov
leave
adc
xor
mov
mov
xchg
cwtl
gs
sub
or
outsl
add
shr
not
and
rorl
lea
and
lret
add
hlt
sar
nop
sub
xor
mov
orl
add
popf
and
inc
add
add
mov
or
and
push
inc
dec
adc
int3
mov
jne
push
add
hlt
pop
lds
pushf
mov
or
push
pop
sbb
stos
ret
sub
mov
lea
push
adc
push
cltd
lods
movsb
mov
stos
sub
push
add
add
mov
in
and
not
and
pop
loope
or
cmp
add
lea
ficompl
ss
inc
adc
xchg
fnstsw
pop
pop
das
or
adc
adc
ds
or
rclb
add
das
imul
adc
insb
insb
aad
sub
add
pop
push
filds
adc
repz
sub
dec
push
and
and
lret
dec
fsubrs
push
lds
int3
sti
or
loop
shrl
jo
pop
and
or
orb
inc
inc
jge
rcrl
repz
scas
in
mov
mov
jl
mov
lods
dec
adc
jmp
mov
sub
je
add
vunpcklps
mov
sbb
jmp
mov
out
out
push
mov
mov
ljmp
inc
je
pop
ja
test
sbb
jmp
pcmpeqw
xchg
test
rcll
in
inc
xor
mov
sub
pop
imul
ja
adc
mov
pusha
pop
ja
lret
mov
inc
or
fcoml
shlb
adc
or
fcmovnu
add
adc
push
fadds
mov
lods
push
pop
xchg
xchg
cmpb
fsubr
fcmovnb
pop
clc
pop
push
sub
fs
adc
jno
stos
movsl
jmp
mov
push
popf
arpl
push
mov
adc
xchg
shlb
cmp
test
xor
and
push
and
or
and
ror
inc
or
or
pushf
jmp
mov
xor
inc
movswl
add
dec
int3
leave
inc
xor
adc
jmp
mov
jmp
inc
nop
or
ljmp
inc
loopne
cmp
pusha
jo
push
pop
scas
lds
mov
mov
les
cltd
lcall
std
clts
test
roll
sbb
stos
cmp
lods
sub
rcrl
scas
dec
cmp
push
movsl
jbe
inc
add
lods
call
rep
sbb
mov
pop
jmp
pop
lock
or
adc
pop
xor
push
dec
xlat
test
enter
or
push
loopne
test
outsb
mov
shll
js
and
sub
addb
pop
inc
or
and
cmp
push
subb
push
pushf
pop
mov
cmp
push
pushf
pop
sub
je
push
popf
add
sbb
add
mov
xor
pop
idiv
sub
push
mov
inc
aas
inc
lret
and
adc
dec
clc
mov
mov
xchg
or
push
adc
mov
fadd
loopne
int
inc
pop
cmpsl
arpl
rcrb
leave
je
adc
jmp
fcoms
shl
inc
icebp
push
imul
or
add
xor
cmp
and
xor
push
xor
mov
xchg
sbb
cld
push
je
add
out
jne
les
inc
cld
incb
mov
bound
and
daa
test
out
adc
faddl
aam
xchg
sub
popf
xchg
into
aaa
push
std
cld
pop
enter
push
sub
and
fnsave
fildl
or
mov
jmp
pop
adc
mov
mov
adc
push
jne
adc
addb
cmp
pop
sub
push
scas
push
neg
fisubrs
lods
std
or
mov
loop
pop
jp
xchg
test
mov
stos
lcall
aam
mov
sub
dec
add
es
or
push
mov
jnp
xchg
add
jl
add
push
mov
mov
lods
add
jle
sub
and
loop
cld
fimull
and
xchg
add
fcoms
cli
aas
adc
std
mov
inc
jmp
cmp
and
mov
sub
adc
scas
mov
das
jl
dec
es
or
cmp
mov
dec
sub
xor
adc
out
sbb
jg
mov
cmp
je
cmp
adc
and
mov
ficomps
jne
jne,pn
and
mov
mov
push
test
sub
cwtl
lret
mov
or
adc
jmp
xor
sbb
roll
mov
sub
cmp
pop
ja
sbb
jns
push
sar
leave
cmp
jae
mov
pop
jb
push
scas
and
push
add
rcr
stos
dec
pusha
sbb
and
mov
add
pop
adc
outsl
cli
sbb
mov
les
jno
adc
jle
push
notl
in
jecxz
xor
mov
mov
inc
mov
sbb
jmp
adc
mov
add
test
dec
or
pop
jb
pusha
rolb
xor
loope
push
test
pushf
add
xchg
cmp
out
mov
add
xor
pop
adc
decb
mov
outsb
mov
shll
inc
jl
xlat
das
sub
jb
ljmp
xor
jg
jl
inc
mov
mov
mov
mov
sbb
es
xchg
ja
mov
call
xor
xchg
push
adc
inc
lea
mov
inc
and
stc
push
adc
push
pop
cld
scas
sub
xchg
rolb
pop
adc
mov
add
cmc
add
stos
lea
adc
shll
rcll
adcb
adc
mov
mov
xor
mov
sahf
inc
inc
add
ret
testb
adc
jge
jns
dec
pushf
cld
inc
jne
sbbb
pop
cli
in
pop
xor
add
aaa
jmp
ret
xchg
or
aaa
mov
movsl
push
sub
pop
loope
mov
pop
or
sbb
ja
mov
mov
hlt
jle
pop
loopne
xlat
daa
cmp
jge
mov
pop
sbb
jl
in
dec
roll
dec
sub
push
lahf
into
cmp
mov
pop
sbb
sbbb
cltd
jle
mov
push
jnp
push
mov
mov
icebp
call
push
lock
mulb
cmp
adc
xor
ds
jle
inc
and
insb
or
adc
mov
mov
cmp
mov
enter
add
add
lds
mov
in
pop
adc
push
dec
add
adc
gs
sbb
popa
loopne
shlb
cmpb
mov
in
ja
pushl
fcompl
mov
mov
mov
fdivs
inc
gs
loopne
sbb
loop
out
mov
test
sub
sti
stc
mov
dec
or
sbb
jl
js
fsubrs
aam
dec
fs
pop
sti
push
or
add
sbb
cmp
pop
mov
fisubl
push
xor
cmpl
pop
add
jbe
xor
or
jecxz
movsl
cmp
inc
popw
cld
or
jb
scas
test
sbb
sub
cmp
cmp
jl
jae
cli
adc
cmp
push
ret
rcrb
aaa
jne
sbb
add
push
ljmp
push
xchg
fldt
xor
pop
outsl
addl
or
insb
out
sti
test
pop
shrb
aas
jmp
or
xor
ja
cmp
adc
testl
sbb
aam
testb
and
mov
dec
lret
fmul
es
sub
add
mov
add
push
jo
sbb
push
roll
enter
into
enter
cli
xchg
adc
pop
imul
andl
jl
cmp
jg
inc
jmp
push
mov
or
mov
xor
in
fidivrl
cmp
xor
add
fucomp
or
sub
inc
cmp
jge
pop
sbb
insb
and
sbb
enter
push
cs
and
xor
adc
mov
mov
lret
cmp
mov
push
adc
daa
xor
push
adc
cmpsl
and
dec
dec
or
inc
push
aaa
mov
add
pop
lea
push
sub
in
push
inc
pop
mov
decb
pushf
push
imul
mov
arpl
sub
lea
mov
fcoms
inc
sbb
ret
xchg
pop
or
movntq
out
js
or
mov
call
imul
insl
sbb
push
pop
mov
jl
cmp
sub
push
movsl
sbb
push
sbb
xchg
adc
mov
inc
sub
add
inc
dec
es
adc
or
fdivrs
lock
mov
jmp
clc
dec
arpl
xor
icebp
pop
cs
jae
in
add
imul
dec
and
and
leave
call
xchg
gs
xor
sub
fwait
mov
pop
mov
inc
outsl
mov
jnp
dec
add
fdiv
test
add
sbb
cmp
jl
sub
incl
add
mov
test
cld
and
pop
ror
mov
inc
cmp
adc
jne
mov
das
xor
out
inc
stc
add
enter
in
sbb
shlb
iret
xlat
je
les
push
push
jmp
or
icebp
xor
push
push
push
push
pop
int3
mov
out
jp
fwait
pop
jns
sbb
js
insb
pop
imul
movsb
jo
fcomps
out
insb
push
or
and
dec
ffreep
pop
dec
jmp
cmp
dec
pop
std
adc
fcomi
or
clc
jge
dec
mov
lret
adc
fisttpl
push
fiaddl
clc
add
push
lods
push
adc
cmp
jmp
and
pop
push
dec
jle
inc
mov
lods
mov
sbb
push
cmp
lret
in
lea
icebp
sarb
pop
jle
jge
dec
adc
jl
cmc
aad
mov
or
call
js
add
mov
cmc
sbb
movsl
aas
ss
add
arpl
mov
jmp
into
cld
sub
adc
adc
sub
pusha
xchg
out
or
or
rolb
jmp
adc
scas
ds
sbb
push
enter
or
sub
mul
inc
fists
inc
add
fnsave
dec
out
xor
mov
sbb
adc
adc
adc
and
pop
lea
mov
add
dec
jmp
inc
lock
push
sbb
jge
nop
enter
xchg
add
mov
adc
pop
sub
sub
sbb
sbb
or
dec
adc
add
pop
jl
or
dec
add
mov
xchg
inc
int3
push
sub
arpl
in
xor
jmp
or
in
cmpb
shr
rcr
daa
leave
sbb
repz
mul
cltd
or
dec
mull
dec
xchg
adc
push
sbb
jmp
mov
leave
lret
jg
addr16
mov
push
push
or
in
dec
and
sti
push
adc
push
andl
vmulss
sbb
cli
mov
scas
add
and
sahf
pop
or
or
mov
mov
push
testb
cmp
inc
mov
int
and
cmp
call
inc
pop
inc
cmc
add
ret
mov
scas
cmp
je
add
sbb
mov
dec
fldcw
shll
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
cmp
clc
and
stos
pop
subl
je
sbb
loopne
les
and
push
add
push
xor
sti
jl
dec
inc
test
test
lahf
lods
stos
mov
adc
or
and
pop
xor
push
pop
pop
or
or
bnd
add
jno
insl
adc
adc
push
gs
and
lea
adc
xor
mov
adc
pushf
ret
push
inc
sbb
inc
and
inc
xor
fidivrs
orb
dec
sbb
lds
cmp
add
jle
mov
fwait
rorb
or
jmp
xor
outsl
fnsave
lahf
shrb
sub
loopne
add
sub
aad
ss
sub
sub
adc
jle
add
pop
in
sbb
cwtl
lret
push
add
pushf
push
jno
lods
jg
mov
fiadds
pop
jns
mov
mov
sub
add
push
lock
adc
push
inc
sbb
sub
lds
lahf
dec
data16
mov
inc
inc
jl
cltd
pop
bnd
pop
push
add
fimuls
or
inc
mov
add
mov
jne
scas
lea
push
inc
or
mov
xchg
popa
data16
push
push
bound
orps
push
addl
or
adc
enter
out
jmp
xor
jbe
mov
sbb
adc
jge
pop
sub
pop
mov
push
push
lock
mov
push
mov
sbb
enter
dec
xor
jl
daa
sbb
mov
inc
sub
call
push
stos
xchg
popf
mov
xchg
mov
xor
out
xchg
inc
lds
sub
and
add
mov
aaa
mov
xor
inc
and
jp
mov
mov
mov
je
in
lea
leave
jno
adc
lea
add
cmc
add
rclb
testb
adc
sahf
shr
mov
push
addl
jae
mov
xor
or
in
cmp
dec
sbb
adc
loop
mov
enter
lods
add
push
test
test
jnp
adc
and
mov
gs
dec
and
add
mov
add
sub
cmp
cmp
stos
xor
loope
add
mov
scas
push
adc
and
pop
xchg
or
xchg
or
pop
push
movsl
dec
fimuls
neg
sbb
loopne
add
jg
sti
add
int
daa
cli
or
jne
sub
imul
cmpsb
setl
xor
cmpsl
jmp
jae
jmp
dec
rcl
push
xor
out
sub
add
iret
and
jmp
imul
add
or
push
jbe
in
fisubrl
mov
push
les
imull
insb
fsubl
pop
movswl
and
loop
out
mov
data16
push
cmp
sbb
add
and
mov
rorl
xchg
xor
fwait
fs
or
push
push
sub
inc
clc
pop
xor
mov
scas
or
data16
inc
or
add
dec
jmp
les
adc
pop
add
adc
sub
lods
xchg
add
lods
add
cmp
shrb
mov
mov
inc
pop
jo
test
hlt
das
cld
mov
and
cmp
js
jg
lock
jb
push
sub
or
jno
roll
std
js
push
shr
shlb
mov
jb
lock
cs
faddl
cmp
cmp
push
or
jmp
mov
jg
push
jb
xorb
jnp
and
and
pop
or
or
ljmp
adc
test
shll
adc
stc
fmuls
bound
jle
add
push
int
pop
icebp
pop
fwait
lret
jbe
sub
mov
fsubl
ds
ret
mov
add
test
rclb
mov
pop
ja
or
inc
add
add
sbb
les
inc
and
sbb
call
jne
xor
add
rclb
push
lds
lods
and
pop
sbb
xor
adc
dec
frstor
and
fadds
into
push
adc
popf
gs
dec
adc
dec
mov
sbb
jne
add
dec
leave
leave
int
mov
rclb
cmc
ds
int3
adc
lret
jbe
test
add
mov
adc
or
shlb
enter
mov
mov
jmp
ss
push
in
cld
jl
les
stos
test
mov
inc
pop
loopne
stc
stc
mov
and
push
arpl
mov
mov
sbb
adc
rorb
outsl
aaa
cmp
inc
je
data16
das
andl
dec
lret
in
inc
popf
and
push
inc
je
mov
fstps
sbb
add
xor
jmp
cmpsb
test
cmp
sbb
int3
and
push
xchg
sbb
jecxz
or
adc
xor
fistpl
xchg
mov
sbb
in
inc
aas
mov
cmp
fldl
fcoml
test
mov
or
and
pop
adc
adc
push
dec
mov
push
jbe
movsl
rol
loope
adc
jno
inc
push
addl
fs
sbb
inc
pop
add
or
test
pusha
addl
mov
repz
daa
xor
js
mov
mov
push
xor
loopne
jno
or
ret
push
imul
dec
mov
push
xor
jns
push
jle
sbb
in
sbb
lods
pop
gs
lret
mov
sbb
jmp
push
add
pop
or
mov
or
or
add
orl
into
je
adc
loopne
and
in
push
mov
jnp
ds
pop
pushf
ss
push
ljmp
or
in
fmuls
add
add
adc
lods
mov
in
adc
aas
xor
push
mov
add
xor
mov
pop
push
jb
lea
fisubs
mov
push
jp
inc
sbb
ret
roll
scas
sbb
mov
out
imul
lea
or
leave
sti
dec
push
jmp
lea
mov
xor
loope
mov
test
xor
popf
or
push
add
xchg
pop
mov
sbbb
les
cs
xor
mov
in
xor
push
jo
sti
mov
adc
enter
jns
sbb
sti
rcll
in
add
test
in
add
mov
bound
subl
add
pop
subl
movsb
or
test
movsb
or
je
xor
mov
dec
push
bound
dec
cs
push
push
mov
movups
pop
xchg
pop
nop
pop
pop
inc
inc
cld
daa
sbb
inc
add
cmpb
adc
cmpl
jne
les
adc
jne
add
push
push
addr16
adc
sarb
dec
push
cmpsl
stos
das
fwait
pop
sbb
jl
add
push
pop
loop
dec
sub
cmp
xor
sbb
jmp
xor
xor
les
leave
xor
lock
add
iret
push
cwtl
adc
inc
jmp
test
arpl
and
fwait
or
add
mov
aaa
adc
rcl
add
loopne
inc
decb
push
loopne
dec
in
ret
jo
mov
loop
in
bound
int3
adc
adc
adc
mov
imul
fstpl
dec
cmpsb
jmp
sub
call
push
lret
jp
inc
repnz
stos
push
das
sbb
leave
or
fimuls
pop
adc
mov
orl
ljmp
mov
or
add
aam
punpckhdq
lea
imul
pop
sbb
mov
cmp
push
and
arpl
jmp
and
es
add
jl
sbb
mov
push
mov
push
jge
add
inc
es
ljmp
mov
mov
xor
pop
add
dec
push
repz
push
mov
mov
push
idivb
test
ja
dec
hlt
cmpb
jne
push
icebp
push
rorl
push
andb
lret
or
mov
scas
std
add
sub
pop
adc
push
cmp
jmp
add
aas
add
xchg
out
insl
das
dec
addb
add
pop
repz
mov
mov
inc
sbb
or
jne
mov
outsb
ja
insl
mov
insb
add
mov
add
push
imulb
pop
cmp
mov
inc
mov
push
add
sbb
pushf
pop
sbb
add
mov
das
add
popl
jb
adc
adc
and
pop
sarb
or
hlt
and
jg
jo
loope
sub
or
adc
mov
mov
xchg
pop
in
loope
jg
jl
push
dec
ud2
inc
mov
mov
mov
push
lret
mov
adc
sub
mov
adc
fsubr
inc
xor
inc
and
push
add
ret
pop
mov
adc
in
es
sub
addl
mov
pop
jo
xor
sarb
push
add
sbb
add
scas
adc
push
stos
aad
cmpsb
xor
inc
jo
pop
in
sub
push
jns
sti
ret
shl
mov
dec
mov
jmp
adc
arpl
push
dec
xor
or
stc
sbb
or
pcmpgtd
loop
stos
popf
data16
mov
arpl
sub
or
push
rcrl
push
loopne
stos
inc
ret
sub
adc
or
clc
pop
or
je
push
sub
insb
movsl
adcb
mov
js
push
lcall
and
aaa
push
jmp
cmp
sub
cmp
incb
inc
test
sbb
sub
lods
cmp
test
inc
push
push
lock
and
lahf
jge
jb
push
pop
jbe
lock
and
int
mov
insl
pop
daa
xor
xor
and
jmp
add
fmuls
fimull
adcl
add
sahf
cwtl
stos
ljmp
cs
inc
shlb
shrb
mov
shld
rcrl
lods
mov
das
adc
idivb
inc
pop
pop
sbb
adc
push
xor
mov
stos
in
test
inc
mov
xor
jnp
filds
inc
add
insb
daa
mov
test
push
jnp
add
add
push
mov
rorl
mov
fcmovnbe
sti
pop
sub
adc
daa
add
and
in
fisubl
stc
not
fsubl
mov
addr16
std
adc
jp
mov
rolb
push
dec
pop
add
push
push
aam
nop
out
insb
xor
adc
test
pop
mov
mov
mov
sbb
addr16
mov
test
data16
adc
or
popf
sub
inc
and
cmp
into
outsb
xor
xchg
push
inc
fisttps
mov
addr16
mov
xlat
sbb
sub
jb
push
mov
fwait
mov
adc
js
jae
xor
push
hlt
mov
push
jg
add
xchg
hlt
push
jmp
clc
mov
mov
sub
add
xor
cs
movsl
pop
lock
int
sub
inc
push
fistps
mov
dec
mov
pushl
adc
and
add
and
mov
jnp
sub
push
cmp
jb
pop
out
mov
in
inc
jmp
mov
inc
sub
pop
jne
add
mov
xor
sarl
cmp
test
out
ja
adc
rcr
push
sub
push
out
popf
mov
or
sub
into
out
add
or
xor
or
hlt
jl
lock
adc
sub
mov
insl
xor
mov
ja
jmp
sub
adc
sub
inc
pop
cmp
push
addr16
add
add
sub
xchg
lea
sbb
xchg
fidivrs
or
xor
out
js
fmuls
cmp
movsb
add
sbbb
rcr
lods
mov
pusha
xchg
add
and
loope
adc
push
cmpl
add
sbb
sub
jmp
jge
jae
mov
adc
cli
or
dec
clc
cwtl
lahf
movb
inc
fimull
sbb
cmpl
fadds
xchg
sub
jbe
xchg
adc
push
mov
and
ficompl
cmp
je
leave
cmp
xor
cltd
dec
in
sbb
nop
arpl
test
rorb
in
sbb
inc
cmp
fmuls
adc
lret
loopne
inc
loopne
fs
loopne
push
addl
pop
mov
xchg
fsubrs
sbb
sub
adc
cmp
mov
and
pop
add
cs
aas
sarb
sub
enter
pop
push
outsl
aaa
stc
lret
cmp
add
mov
lret
out
int
fucomp
cmp
push
mov
sbb
jl
addl
ss
sub
push
mov
push
popf
mov
rcll
pop
push
cmp
jp
inc
aad
adc
inc
shlb
sub
mov
lret
jmp
outsl
stc
adc
rol
std
sarb
mov
idivl
arpl
xchg
std
and
xor
dec
adc
jbe
pop
insb
cmp
insb
jne
sub
adc
inc
inc
push
mov
movsb
inc
daa
xor
inc
sbb
aam
sbb
xor
imul
inc
or
insb
sbb
loopne
nop
adc
mov
or
cmpsb
cmp
loopne
lods
and
aam
add
das
jmp
push
adc
xchg
pusha
popa
xor
negb
fwait
adc
push
sbb
mov
std
jle
pushf
add
loopne
push
and
jo
pop
repnz
fildl
int
rcll
dec
movsb
rcrl
fsts
ror
xor
pop
enter
data16
sbb
pop
push
xor
sbb
dec
inc
jl
add
mov
mov
pop
or
and
push
outsl
mov
pop
xchg
daa
test
dec
jbe
adc
jne
push
lret
dec
jae
add
mov
or
xor
jbe
push
pop
pushf
mov
sbb
push
mov
inc
push
or
and
mov
icebp
mov
jb
adc
or
ja
jmp
andb
mov
mov
add
sub
push
lret
jmp
popl
jecxz
inc
cmp
push
push
push
dec
adc
lods
sub
call
dec
push
dec
into
mov
dec
adc
ret
insl
aaa
mov
cs
mov
mov
or
sub
int3
and
jbe
and
and
ret
inc
outsb
clc
cmp
jp
movdqa
add
data16
adc
and
mov
dec
push
pop
outsl
inc
add
push
lcall
jo
outsl
movsb
enter
jg
lea
sbb
sbb
jno
push
data16
mov
insl
mov
lret
fmuls
push
push
add
movsb
out
mov
add
adc
dec
inc
adc
loop
jns
je
sub
loop
sbb
mov
ja
adc
sti
xor
add
sub
xor
cmpsl
jge
and
movsb
pop
mov
call
jne
call
xchg
sbb
add
sub
sub
repnz
push
push
popa
lahf
jmp
ss
cmp
or
push
mov
loop
iret
or
or
sub
xor
pop
cmc
sbb
xor
adc
or
inc
pop
jb
aad
adc
add
call
cmp
lock
je
mov
fcoms
inc
xchg
fistps
add
add
js
adc
cmp
sbb
fcoml
pop
sbb
mov
rclb
push
mov
imul
jnp
rclb
inc
sbb
lods
and
pop
xor
sub
mov
cmp
xchg
push
lcall
dec
fwait
add
fistpll
sbb
xchg
or
cmc
or
stos
cmc
mov
sub
shl
mov
mov
fs
repnz
inc
addl
jmp
mov
xlat
add
out
or
mov
xlat
bound
pop
test
leave
pusha
adc
and
mov
nop
std
dec
into
add
push
sarl
or
mov
inc
insl
jmp
push
pop
and
fmuls
pop
test
test
inc
adc
rclb
mov
push
divb
test
jmp
dec
mov
or
adc
lcall
adc
or
jmp
xchg
adc
pop
push
je
pop
ss
int
incl
jb
je
jne
sbb
adc
jmp
in
jne
inc
xchg
les
mov
inc
or
inc
into
push
loopne
inc
ss
int
push
loopne
inc
gs
inc
mov
movsb
mov
ljmp
loopne
mov
or
movl
jmp
or
lea
sbb
adc
adc
xchg
adc
push
mov
mov
and
xor
add
adc
and
das
lods
cmp
add
inc
adc
push
les
add
mov
int
adc
adc
inc
pushf
sbb
lsl
and
cmp
cmpb
jmp
lods
lock
mov
adc
pushf
xor
mov
imul
or
xor
fcoms
push
movsb
leave
pop
rolb
dec
xor
ja,pn
or
sub
xor
cmpsb
sbb
mov
jmp
arpl
and
pop
iret
push
inc
pop
or
add
adc
fisttpl
aad
adc
adc
ret
pop
pop
mov
mov
add
sbb
pop
adc
xchg
mov
mov
bound
aam
jmp
imul
and
push
subb
sarb
jno
shlb
outsl
push
pop
sbbb
cmp
add
add
testb
inc
aam
and
add
call
sub
jmp
inc
push
inc
jmp
cmp
adc
in
add
inc
roll
adc
xchg
test
fstp
push
or
add
add
push
push
pushf
icebp
repz
pusha
pop
add
call
push
xor
ret
sbb
loop
adc
cmp
adc
das
movl
nop
fbstp
dec
cmp
ja
mov
jne
sub
mov
xor
ja
mov
in
das
cmp
test
sbb
pop
test
add
sbb
mov
push
test
inc
and
push
cmp
cltd
mov
mov
push
add
adc
jle
ficoms
pusha
ja
pop
jb
push
aas
or
not
push
mov
les
sbb
sbb
dec
adc
es
sub
jl
xchg
hlt
hlt
hlt
push
data16
adc
push
mov
imul
sbb
xchg
xchg
mov
mov
cmp
adc
dec
sbb
in
or
cmpsl
mov
ret
mov
out
mov
icebp
cmp
mov
hlt
popf
push
push
mov
incb
rcll
jbe
lret
dec
popf
arpl
and
xchg
jne
push
push
sub
dec
out
push
fmull
push
fsubrl
cmp
inc
mov
lock
adc
inc
push
jb
je
add
fisubrs
cmp
add
push
sub
cmp
dec
mov
push
loopew
xor
push
adc
sub
loop
mov
push
pop
loop
inc
not
cmp
mov
cmp
adc
ffree
pop
pop
rorb
lea
lods
sub
mov
mov
or
pop
ss
push
jno
jmp
jne
ja
ret
lds
push
and
in
inc
scas
orl
add
inc
imul
sub
add
or
shrl
dec
mov
add
cltd
sbb
sbb
jge
mov
mov
insb
or
sub
lock
jge
jp
mov
lret
out
and
mov
out
rorb
loopne
pop
push
jmp
out
loop
enter
xor
dec
jp
or
or
nop
daa
movl
pop
xor
pop
sbb
adc
sbb
orb
notb
adc
stos
add
mov
and
inc
sub
pop
out
out
dec
test
sbb
dec
ss
ficomps
ficomps
ret
mov
ret
lds
aam
int3
js
adc
int3
and
sub
mov
adc
rorb
jmp
jae
mov
in
and
lret
or
lock
inc
pop
cmp
imul
or
and
orl
and
and
xor
and
sub
xor
and
addr16
adc
enter
pop
dec
dec
cmp
sub
pop
and
mov
pop
enter
subb
xchg
or
js
pop
xchg
dec
mov
or
cs
cs
mov
dec
test
sub
loopne
cmp
xchg
je
xor
pusha
dec
pop
inc
lea
mov
adc
jbe
and
roll
or
xchg
cmpb
add
nop
in
mov
adc
adc
pop
cs
xor
mov
and
movsb
or
sbb
cld
inc
push
mov
lahf
adc
push
jo
add
xor
stos
sub
add
es
inc
sub
popa
outsl
push
or
pop
cltd
adc
xor
pop
adc
inc
mov
add
rorb
insl
or
dec
lods
adc
or
jge
je
pop
daa
sarb
in
clc
inc
push
inc
cmp
mov
fidivl
pop
or
xchg
jnp
add
mov
std
lcall
jno
add
inc
cmp
and
daa
sub
sbb
xchg
or
aad
test
cmpsl
adcb
push
inc
dec
sub
mov
pop
mov
jo
adc
sub
pop
dec
cld
ret
pop
push
cwtl
add
add
pop
testb
adc
or
push
push
mov
test
cwtl
mov
out
pop
add
mov
jb
mov
sub
stos
push
shl
cmp
mov
adc
roll
or
jl
mov
inc
mov
mov
add
mov
stos
pusha
inc
sarl
in
ss
mov
cmpl
push
test
jo
or
add
mov
or
xchg
les
imul
inc
push
rolb
adc
and
cmp
jne
jns
mov
into
rcr
add
sbb
pop
and
lret
cmp
pop
inc
clc
mov
dec
mov
mov
mov
inc
sbb
xchg
clc
mov
mov
pusha
push
or
pop
test
rcll
sub
xor
cmp
jl
push
or
fprem
insb
or
test
lods
mov
xchg
imul
push
pop
mov
les
fstpt
adc
push
shrb
cmpl
lock
push
xor
cld
mov
enter
and
dec
inc
aas
rorb
xor
or
sub
call
and
je
pusha
adc
mov
enter
lea
call
ja
dec
call
dec
pop
xorl
adc
xor
add
mov
pop
mov
mov
movb
scas
test
add
or
sub
cmpb
inc
dec
daa
pushl
out
sbb
dec
adc
xchg
shl
sbb
leave
inc
cli
lock
jbe
and
sbb
dec
cmpsl
in
hlt
lock
out
mov
dec
jp
xor
arpl
cmpsb
fisttpll
cmp
mov
movsl
dec
push
and
push
adc
outsb
inc
mov
xor
lock
inc
hlt
cmpb
add
test
mov
jmp
out
sbb
pop
and
sbb
hlt
ds
pushf
test
aas
or
inc
or
xor
xchg
adc
mov
xchg
call
sbb
inc
pop
pop
push
iret
int3
mov
sbb
aas
testl
mov
adc
xor
cs
cld
std
mov
add
adc
xor
pop
dec
xchg
push
clc
push
push
push
and
insb
jo
aam
clc
enter
outsl
inc
mov
mov
add
shll
push
inc
lcall
outsb
lea
movsb
sbb
cmp
pushf
xchg
mov
cmp
sub
test
cmp
and
subb
push
out
push
cmp
dec
sbb
or
add
add
mov
shll
mov
sbb
ss
daa
add
call
sbb
fs
inc
popl
or
stos
pop
or
popf
inc
or
stos
ljmp
adc
push
std
xchg
push
aas
adc
jbe
out
push
jle
mov
inc
inc
insl
inc
mov
ja
pop
and
sub
or
inc
leave
inc
outsb
sbb
xchg
push
pop
push
dec
sbb
jmp
js
sbb
aas
xor
inc
outsl
aad
orb
adc
or
inc
lret
adc
test
or
mov
fsub
push
mov
inc
push
cmp
push
mov
idivb
out
mov
and
add
cld
push
adc
insl
cmp
sub
mov
and
adc
jne
xchg
adc
stos
gs
dec
add
inc
cmp
cmpb
enter
shl
mov
mov
into
xchg
notl
sti
sbb
hlt
flds
shl
or
add
add
inc
into
adc
shrl
push
or
mov
and
pop
mov
rclb
or
std
mov
adc
in
test
sbb
movsl
push
and
sbb
in
outsl
mov
mov
movswl
sub
and
mov
push
mov
pop
and
inc
or
test
dec
adc
rcll
push
enter
popf
xchg
adc
add
mov
adc
sbb
sbb
dec
add
les
pop
mov
add
cmpb
shr
ret
dec
push
adc
fmulp
call
push
sub
pop
loop
jmp
push
imul
cld
lock
push
loop,pn
add
je
nop
pop
xchg
add
add
insl
or
rorl
push
add
or
dec
add
push
push
add
fs
adc
add
lea
mov
jne
xchg
xor
mov
addb
loop
jo
add
jns
pop
sbb
xor
addr16
sub
in
push
xchg
loopne
pushf
push
dec
hlt
push
mov
adcb
push
mov
or
push
shr
sub
add
out
popa
lea
mov
or
cmp
jecxz
or
sub
or
jne
inc
loope
add
mov
inc
inc
movb
jp
sub
dec
push
xor
pop
rcrl
sbb
adc
mov
cmp
aam
push
insl
sarb
pop
pop
cmp
dec
iret
sbb
test
pop
xor
cmp
adc
xor
mov
sub
pop
inc
cmp
in
pop
lock
cmp
ss
popa
mov
push
je
sub
invd
cli
push
and
sub
ret
and
add
mov
arpl
inc
ja
push
je
outsl
add
add
xchg
xlat
aad
int3
or
jg
out
xlat
mov
int3
cmpsb
sbb
push
lods
jbe
loopne
mov
pusha
sub
mov
push
push
aam
add
shll
cmp
jne
xchg
or
mov
and
push
aad
and
adc
mov
push
mov
pop
test
add
or
rorb
mov
rolb
mov
sub
add
das
mov
add
imulb
lret
mov
adc
stos
test
pusha
sbb
popa
lea
int3
push
and
cmp
xchg
lods
arpl
adc
push
adcl
pop
inc
movsl
sbb
push
rclb
lock
mov
xchg
icebp
xchg
lods
jbe
insl
sub
movsl
inc
fsubrs
or
fdiv
xor
push
cmp
jbe
cmp
mov
adc
aam
inc
xchg
adc
repz
fnstsw
fwait
adc
or
dec
sbb
or
sub
and
ret
aas
bts
xor
push
mov
sub
add
dec
sub
pop
cmp
adcb
gs
xor
es
test
jg
push
mov
or
inc
lret
outsl
imul
repz
call
lea
decl
icebp
or
or
mov
xchg
in
mulb
jl
dec
cld
jo
out
dec
or
and
dec
inc
dec
push
add
sub
add
shlb
aad
aas
test
add
xchg
call
jns
mov
lods
pop
test
jne
inc
movsl
in
or
or
adc
stos
pop
psubusb
or
das
cmp
test
xor
sub
push
pop
add
mov
add
or
mov
and
jns
dec
or
inc
shrl
mov
pop
push
and
lret
loopne
or
outsb
pop
test
xchg
and
push
loop
rolb
js
adc
sub
test
jmp
in
sbb
ss
and
pop
and
or
dec
or
inc
subb
movsl
loopne
lods
fdivrs
lea
xor
repnz
push
cmp
adcb
sbb
clc
fcomps
sub
add
bnd
sbb
adc
sub
fmul
rcrb
pop
lahf
and
xchg
pop
jle
std
cmpb
pop
mov
push
xchg
sti
add
add
pop
cmc
cmp
and
and
stos
and
push
cmovbe
or
push
sbb
test
rol
loop
sbb
adc
gs
xchg
mov
loopne
out
and
mov
mov
xlat
popa
pop
popf
mov
pop
push
xor
ja
out
test
pop
dec
adc
xlat
push
rclb
push
call
pop
adc
repnz
xchg
jo
stos
lods
push
or
out
and
xchg
mov
jb
scas
pushf
push
cmpsl
pop
pop
jp
adc
adc
xchg
stos
mov
dec
xchg
stos
pop
lods
mov
insb
push
ja
mov
and
inc
push
scas
lock
test
inc
les
jecxz
mov
dec
jns
mov
lock
pusha
adc
xchg
aam
xchg
jo
pop
cmp
dec
sbb
cmp
lods
dec
xchg
push
ret
jae
andl
push
lea
and
gs
add
pop
into
push
mov
call
lea
and
pop
out
adc
push
adc
cld
subb
mov
rolb
cmp
scas
push
shl
fcmovne
shrb
neg
sbb
add
lods
test
or
call
pop
inc
push
push
hlt
pop
add
push
test
lcall
mov
inc
xchg
mov
pavgb
jo
mov
jns
push
jnp
cltd
sub
lret
add
fildll
xor
push
insb
orb
xchg
in
mov
add
pushf
sti
jl
mov
or
out
mov
add
mov
test
mov
sub
pop
jne
add
lds
sbb
fildl
lret
push
aad
add
or
cmp
mov
cmp
jne
inc
jmp
mov
push
inc
xchg
mov
das
add
out
mov
cmp
ja
sub
jmp
push
and
or
mov
add
decb
dec
dec
loopne
add
jl
push
jmp
mov
pop
push
jmp
mov
sbb
outsb
mov
test
jbe
push
add
cli
in
push
lods
cmp
sub
fstp
jle
cmp
jle
jle
cmp
or
aas
add
mov
jmp
dec
jl
out
dec
push
fsts
loopne
jbe
push
enter
adc
in
jbe
mov
data16
xor
scas
sub
loop
sub
lret
sbb
mov
jae
ret
mov
mov
ret
mov
jae
mov
cmp
gs
jge,pn
inc
pop
sahf
mov
pop
mov
test
cmp
dec
add
or
cmp
sbb
add
xchg
pop
and
sub
scas
mov
leave
lea
pop
lods
push
and
and
pop
push
push
pop
and
sbb
cmp
or
orl
idivb
pop
adc
lods
insl
push
mov
xor
mov
mov
push
jmp
fwait
insl
notb
inc
push
je
je
mov
mov
sbb
outsb
mov
popa
sbb
mov
add
add
testl
sub
cld
pop
push
add
inc
or
jge
jmp
jle
jmp
std
and
adc
je
sti
rolb
jg
jecxz
in
int
xchg
push
emms
pushf
jmp
sub
pop
pop
js
jae
sbb
cltd
subl
xor
dec
cmpb
hlt
movsl
mov
or
out
popf
pushf
fists
movsl
adc
jge
test
add
or
outsb
jnp
sub
and
cmp
or
cmp
fucomp
in
jae
lods
cmp
mov
sbb
push
push
adc
jle
lcall
or
outsl
je
sarl
add
fcomip
push
and
mov
inc
popf
push
inc
cmp
mov
mov
jb
mov
pushf
ljmp
lea
clc
dec
or
xor
lcall
mov
mov
ret
out
or
jnp
jle
lea
nop
int
subb
pop
andl
or
ljmp
iret
sbb
ja
jmp
jge
ja
pop
enter
sub
ljmp
testl
mov
jne
add
jne
aam
and
outsl
and
jne
inc
or
cmp
mov
and
jp
add
mov
arpl
fdivrs
test
push
add
add
scas
insl
imul
inc
add
inc
add
fistl
add
mov
lea
cmp
cmpsl
lock
add
ja
je
addb
cmp
arpl
add
dec
push
pushf
adc
xchg
lods
sbb
jl
xchg
add
fucomip
inc
mov
test
js
inc
test
shll
and
push
add
or
shr
out
shrl
cmp
xor
xor
add
add
jge
xor
jno
mov
lock
idivb
xor
fcom
insl
fmull
pop
shr
or
pop
shl
call
cld
inc
mov
jne
ss
add
je
xor
outsl
fisttpll
jae
insb
shlb
sbb
arpl
add
pushf
lret
sub
fimull
sbb
test
negl
imul
test
hlt
push
inc
add
fucomi
or
pop
inc
adc
and
int
sub
push
int
mov
or
fiaddl
dec
insl
out
jecxz
or
xchg
mov
mov
sub
andnps
xlat
fnstsw
rcrb
and
idivb
push
ror
xchg
lods
ret
sbb
cmp
int3
add
and
dec
inc
jne
push
lret
cmp
das
xchg
xchg
add
testb
jbe
add
or
push
mov
call
pop
xor
add
dec
xor
add
das
inc
adc
add
xchg
dec
rcrl
mov
hlt
jmp
add
je
push
push
sub
loop
lock
notl
cmp
and
mov
movb
add
rcl
aam
xor
rcl
xlat
fcomp
sahf
rol
fstpt
subb
out
aaa
inc
adc
add
lcall
jne
dec
scas
cs
sub
and
mov
in
adc
daa
sub
add
outsb
ret
lds
nop
pop
repz
loope
fcompl
mov
adc
lods
test
es
jmp
js
jnp
ja
mov
push
pop
or
xor
dec
lea
push
xchg
dec
sub
or
push
mov
add
mov
cwtl
sub
lods
cli
or
dec
mov
imul
pushl
cmp
mov
or
mov
sub
adc
mov
andl
sub
fldt
pop
pop
ljmp
push
loop
inc
push
js
pushf
mov
je
call
push
mov
fiadds
sti
add
outsb
mov
sub
addr16
cmp
mov
hlt
add
or
lock
aad
addb
int
jae
sahf
jg
add
daa
add
mov
xor
pop
outsb
adc
cmpb
pop
xchg
add
decb
daa
into
lods
in
pop
inc
mov
clc
xchg
xchg
ja
pop
andb
xchg
in
sub
addr16
inc
call
in
ljmp
fsubl
inc
or
jle
jno
sub
and
push
hlt
sbb
mov
call
add
or
inc
mov
push
or
sbb
push
pop
andb
enter
xchg
cmpsl
addl
cmpsb
pop
inc
xchg
movsb
inc
push
xchg
cwtl
sub
xchg
mov
ds
test
lret
mov
rorb
subb
inc
shrl
mov
stos
stos
addl
hlt
mov
mov
push
pop
ud2
ret
xorl
inc
xchg
lahf
out
mov
pop
loopne
sub
sbb
and
mov
pop
sbb
or
pop
shl
jmp
insb
rclb
and
lock
iret
xor
repnz
dec
xor
div
cli
xchg
out
cmp
inc
cli
div
cmp
inc
inc
aaa
adc
daa
mov
push
or
test
or
adc
push
gs
faddl
shlb
hlt
pop
insb
std
testb
mov
xor
pop
and
arpl
clc
pop
push
sbb
int
dec
jl
pop
rolb
dec
loop
daa
lock
sbb
insb
pushf
dec
pop
inc
push
sub
or
jge
loopne
add
xchg
out
jge
lret
and
shlb
adc
cwtl
enter
add
cwtl
push
je
adc
or
sbb
fsubrs
aam
adc
stos
je
fwait
jge
iret
repnz
lea
dec
insb
or
loopne
jb
sub
mov
mov
xchg
cmpsl
stc
sbb
cmp
fnstcw
inc
insl
movl
lods
lods
rclb
add
ret
mov
mov
divb
pushf
xor
test
mov
repnz
add
and
adc
mov
mov
add
enter
jne
mov
in
push
aam
loopne
add
movsl
outsl
pop
inc
push
mov
adc
add
xchg
das
bound
lods
sub
mov
mov
mov
mov
fwait
add
pop
int
dec
push
sub
adc
xor
icebp
dec
pop
out
adc
adc
mov
popa
es
aaa
or
add
or
inc
or
rcl
rorl
push
mov
neg
inc
xor
push
sub
xor
iret
call
xor
mov
lods
lea
out
push
rcl
movlps
jns
xchg
in
les
popa
fcmovnu
loopne
adc
ret
pop
test
lock
adc
sub
or
shr
enter
fbld
testl
or
jmp
loope
rolb
lock
movsl
mov
add
inc
xor
sbb
shlb
jns
mov
fiaddl
add
bound
cmc
inc
pop
lods
jne
push
sbb
shll
mov
mulb
fadds
lds
loopne
in
jmp
cli
aaa
jne
dec
dec
dec
mov
dec
cmp
jge
inc
jmp
call
mov
movb
dec
cmp
jae
incb
out
pop
inc
and
fadds
and
mov
or
xor
pop
cmp
xor
dec
pop
idivb
push
int
lcall
cs
adc
lret
or
add
push
add
inc
mov
test
fldl
or
mov
sbb
or
adc
adc
mov
and
stos
xchg
call
lock
jecxz
sbb
add
push
jp
cmp
or
mov
add
mov
or
add
or
xchg
pop
inc
lods
pop
push
add
outsb
stos
pop
and
add
lock
mov
cltd
sub
push
cwtl
dec
or
add
add
mov
xor
aam
mov
nop
pop
cbtw
lret
into
push
mov
add
xchg
pop
and
pop
pop
pop
xorb
popa
or
fsts
ja
xchg
xor
ret
or
and
jge
push
jo
imul
adc
in
sahf
in
lret
or
add
add
lret
data16
aas
shll
int
cltd
andb
pop
or
subb
push
add
add
cld
ds
mov
add
les
adc
jne
jge
jbe
push
js
add
iret
sbb
push
mov
fsub
and
sub
dec
sbb
or
cld
cld
jb
pop
xchg
shlb
inc
out
jae
push
and
mov
add
ret
mov
mov
rclb
xchg
mov
imul
stmxcsr
insb
mov
pop
test
or
jb
pushf
add
add
pop
loopne
out
add
mov
or
sbb
lea
sbb
inc
inc
push
imul
fildl
sahf
into
mov
inc
sub
ffree
jg
or
mov
pop
jnp
sub
call
not
push
or
xor
sbb
xchg
jb
bound
cmp
mov
cs
or
mov
iret
pop
test
cmp
or
or
or
mov
into
xchg
out
mov
and
inc
xchg
inc
jo
inc
mov
outsl
movsl
sbb
push
jg
sbb
iret
pusha
jmp
xor
lret
xor
loopne
push
stos
popl
dec
ret
mov
push
adc
push
mov
icebp
or
fbld
test
adc
jle
test
test
adc
push
and
or
dec
mov
mov
mov
mov
daa
es
mov
je
adc
add
and
cmp
jb
cmp
ja
add
cmp
or
cmp
and
inc
or
or
jb
flds
add
dec
or
or
adc
insb
push
add
pop
jo
pusha
push
fsubrp
mov
fisubrl
test
xchg
cmp
jo
jo
rol
push
push
dec
and
mov
movl
mov
adc
ja
std
clc
pop
inc
mov
sub
xlat
jle
pop
imul
ret
push
adc
in
and
fistpl
call
es
sarb
inc
imul
icebp
aad
jne
lods
add
je
sbb
push
xlat
adc
pop
inc
xchg
adc
mov
lcall
mov
pop
xchg
inc
add
jmp
xchg
sbb
lock
insb
cmp
xor
add
mov
out
je
mov
hlt
and
rorb
cmp
jbe
insl
popa
add
mov
xchg
mov
sub
or
loop
out
call
or
xchg
loope
into
mov
push
adc
or
add
cmp
mov
ficoml
sub
inc
mov
sub
mov
fmull
ljmp
movsb
add
sub
insb
push
test
dec
inc
cmc
adc
js
test
imul
xchg
in
in
lahf
jnp
inc
jg
mov
push
push
mov
xchg
pop
and
shrb
push
push
pop
ja
out
sub
fs
cmc
js
dec
daa
fcoms
and
loopne
pop
pop
add
pop
adc
jae
jge
adc
nop
sbb
cmp
dec
aam
and
je
fstps
xorl
fcoml
dec
fmul
cltd
fstps
and
push
add
and
ss
xchg
mov
out
push
adc
bound
push
das
push
xor
or
push
cwtl
lods
adc
out
sub
sbb
mov
gs
add
enter
sub
mov
hlt
dec
mov
adc
scas
fcoml
add
lahf
sub
push
aas
add
push
push
or
and
pop
push
add
nop
mov
adc
or
cmc
jmp
push
or
push
mov
mov
sbb
insl
nop
add
xor
fxtract
andnps
inc
push
ds
cmpsl
inc
cmp
and
inc
inc
cmpl
notl
scas
rclb
hlt
push
std
and
adc
int3
cmpsl
xor
rorl
fcmovu
scas
mov
push
push
push
push
adc
sub
jne
out
mov
outsb
fdivs
push
arpl
sbb
adc
stos
inc
add
inc
inc
movsb
cmp
xchg
out
pop
xchg
clc
mov
inc
mov
mov
mov
cmc
in
cli
and
sbb
lds
and
call
inc
out
test
push
icebp
inc
je
leave
fs
mov
ret
jg
lock
test
cmpsl
mov
gs
stos
or
jl
test
or
inc
cmp
add
out
or
andb
ficompl
inc
xchg
push
lock
daa
mov
cs
popf
aas
jae
insb
xor
pop
adc
aad
sbb
jmp
cmpsl
loop
cs
popf
fisttps
mov
xchg
ss
fldcw
cltd
adc
fsubrp
cld
clc
mov
xchg
rcrl
in
js
mov
mov
cwtl
call
sub
mov
ret
hlt
rclb
nop
movsl
popa
mov
add
push
daa
add
mov
jo
mov
sbb
push
rol
or
jmp
sbbl
clc
mov
sub
imul
fistpl
dec
add
lock
adc
les
leave
or
pop
mov
jo
xor
push
jmp
mov
add
mov
insl
sbb
push
xor
pop
lock
pop
sti
in
inc
cmpl
je
pop
fildl
inc
test
add
xor
add
lea
inc
push
xorb
cmp
and
inc
lret
mov
inc
jg
or
and
or
cmp
cli
mov
outsb
inc
fwait
cmp
xor
xchg
lods
pop
mov
fdivl
mov
mov
dec
and
mov
sbb
pop
ret
icebp
adc
or
xchg
xchg
mov
jmp
sahf
shll
or
cli
pop
test
cmpb
iret
shl
xchg
or
and
je
sub
inc
mov
rcll
xor
mov
lock
xchg
fimull
xchg
adc
shlb
sub
or
add
and
inc
jmp
cmp
fdivrl
adc
push
push
lret
ss
add
sahf
adc
mov
jmp
testb
ret
adc
and
mov
add
nop
je
or
jbe
push
adc
mov
jae
push
and
sbb
mov
fcoms
add
bound
sbb
shl
sub
sub
add
inc
cmc
push
add
mov
xlat
mov
xor
xor
outsl
xchg
add
and
loopne
jne
dec
pop
xor
mov
ret
cmp
jb
lock
push
push
adc
stc
sbb
cmp
push
mov
add
xor
push
and
loopne
sbb
popa
and
or
mov
jp
orl
or
add
sbb
sub
adc
fcoms
movsl
stos
adc
push
push
adc
xchg
dec
enter
dec
fcmovnb
push
mov
rolb
outsb
lds
inc
int3
stos
adc
inc
pop
push
lods
push
push
push
xor
shl
mov
adc
xor
xor
scas
inc
pop
sub
mov
adc
jmp
mov
jne
dec
pop
sbbb
mov
add
sbb
push
inc
xchg
cmpsb
rcr
and
andb
mov
and
push
dec
mov
inc
pop
pop
adc
test
inc
add
dec
fsub
cs
or
mov
mov
sarb
in
mov
adc
xlat
push
fs
xor
je
les
jmp
lods
mov
inc
cmp
jl
inc
shrb
add
dec
mov
add
sub
xor
cmp
js
xor
sbb
test
mov
scas
repz
push
ss
inc
cmp
pusha
add
pop
mov
sbb
les
lock
pop
push
ficomps
int3
push
adc
cmp
test
sbb
xor
add
test
dec
or
mov
dec
mov
dec
in
mov
cld
mov
jp
xor
jnp
inc
mov
add
int3
and
int
mov
mov
addl
mov
sbb
lds
cmp
inc
push
sbb
mov
repnz
andps
pop
enter
repnz
int
lds
sub
enter
cmp
pop
leave
and
xor
sbb
push
inc
pushf
and
push
in
pop
in
inc
and
and
test
inc
push
and
shl
nop
sub
leave
push
mov
or
mov
sbb
je
push
in
fs
test
outsl
mov
or
in
mov
or
gs
pop
dec
sbb
call
cmovo
xor
fistl
and
sub
adc
mov
mov
or
and
mov
pusha
divl
cmpsl
mov
mov
pusha
and
repnz
mov
ret
data16
xchg
insb
inc
dec
fdivr
or
flds
repnz
int3
incb
in
fsubl
in
pop
cld
insb
lock
pop
or
pushf
mov
in
es
and
add
push
fisttpl
mov
mov
inc
es
mov
mov
fs
xchg
or
call
enter
xchg
insl
mov
fsubrs
jge
setae
mov
cmpb
cwtl
adc
xchg
dec
cmp
sarb
popa
xchg
insl
or
sub
leave
push
jns
sbb
xchg
rol
in
shr
enter
push
ret
xchg
and
push
mov
cmc
sub
mov
dec
jb
fdivs
inc
adc
xchg
int3
mov
loopne
fmuls
dec
ret
fisttpl
lods
lods
loopne
xor
enter
add
xor
hlt
jg
sbb
or
inc
add
lret
dec
xchg
xchg
mov
dec
les
in
mov
xchg
ret
mov
leave
ret
xchg
loopne
and
call
sbb
sub
rcrb
adcl
fs
xor
int
mov
or
add
and
hlt
jmp
or
aaa
insb
js
pop
jbe
divb
or
mov
sbbb
pushl
sbb
xor
movsl
sbbb
cmp
cwtl
gs
stc
into
push
adc
dec
cltd
cli
inc
in
or
push
push
add
pop
popf
mov
fstps
mov
push
cmp
stos
push
push
in
and
adc
out
inc
jbe
mov
and
data16
push
mov
sbb
pop
jle
cmp
and
add
inc
adc
adc
ds
enter
mov
xchg
and
jl
mov
or
mov
adc
out
lds
push
jbe
inc
mov
ss
mov
xor
mov
sahf
addr16
dec
push
push
lea
jnp
pop
pop
pusha
pop
es
addr16
push
dec
pushf
or
out
insb
mov
sahf
out
mov
mov
rolb
addr16
fs
shl
imul
in
add
cld
add
idivb
add
or
sub
sbb
enter
sbb
sub
fsubl
cmovl
or
mov
push
push
pop
insb
dec
repnz
pop
pusha
fs
enter
push
sbb
les
mov
dec
in
adc
sub
std
mov
leave
adc
add
or
sbbb
push
lcall
dec
mov
or
mov
cmp
jp
jo
pop
leave
pop
and
push
xlat
cmp
xchg
rcrb
mov
add
jbe
call
push
fadds
sbb
inc
jb
xor
es
dec
clc
dec
dec
shll
adc
cmp
movsb
ficomps
sti
arpl
cmp
pop
shrl
mov
cmp
add
in
psubusw
inc
add
add
mov
cmp
mov
daa
or
decl
inc
dec
insb
gs
js
gs
imul
fsts
pushl
in
notb
add
pop
push
push
xchg
in
outsl
xchg
sbb
inc
dec
push
push
dec
inc
pop
dec
dec
outsb
jbe
insb
imul
addr16
addr16
outsl
je
jne
jo
jb
gs
dec
gs
adc
push
imul
xchg
adc
push
pop
or
cwtl
nop
and
ret
sbb
andl
in
pusha
mov
sbb
pop
push
jb
popf
mov
and
movsb
sbb
mov
jmp
and
pop
std
ret
add
mov
push
imul
je
stc
std
mov
push
jb
jbe
gs
popa
addr16
les
and
outsl
cmp
inc
ja
in
fsts
movups
adc
add
or
jne
pop
push
adc
jl
dec
testl
pop
pop
aas
ret
cmp
add
arpl
mov
push
pop
inc
je
imul
xchg
push
gs
and
xchg
mov
lret
sbb
dec
inc
dec
xor
xchg
push
outsl
data16
popa
and
arpl
jae
pop
or
outsl
ja
pop
inc
jne
pop
outsb
je
gs
cmp
inc
sub
pusha
jnp
fcomps
jbe
add
jle
jbe
jb
daa
jnp
je
push
pop
mov
gs
outsb
cmove
mov
fnstenv
or
and
arpl
lods
mov
mov
je
adc
mov
imulb
andb
push
inc
push
add
imul
or
lods
insl
fs
sbb
insb
imul
inc
popa
out
arpl
jne
inc
in
pop
jle
inc
imul
inc
add
pop
out
xor
cmova
jns
fdivr
pop
sub
insb
je
dec
dec
popa
push
jne
fnstenv
out
sbb
jb
add
imul
imul
insb
js
add
mov
or
sub
xlat
or
mov
xchg
es
and
outsl
mov
lods
pop
add
add
pop
lahf
es
shll
adc
push
sbb
xchg
xchg
popf
addl
push
int
mov
and
jg
repnz
cs
imul
xor
cmp
addl
je
andl
data16
lods
xor
push
dec
repz
mov
sub
js
sub
xchg
leave
movl
add
and
or
lods
lcall
imul
fs
jne
pop
repnz
sar
pop
fs
jbe
mov
imul
push
insb
insl
data16
jb
pop
ja
shlb
arpl
cs
dec
fwait
lock
pop
dec
dec
push
inc
dec
dec
mov
jno
jns
inc
jbe
popf
push
jne
je
subl
mov
sbb
lock
jo
adcl
add
dec
test
insb
inc
out
lcall
push
push
add
out
out
inc
inc
inc
or
push
dec
push
push
push
pop
test
push
add
xor
xor
shrl
sbb
adc
and
push
dec
jae
dec
jl
dec
mov
inc
lcall
ret
das
hlt
xchg
clc
fimuls
cmp
cmp
das
mov
mov
sbb
dec
xchg
or
fsubrp
cs
dec
test
mov
fwait
out
in
in
cmp
sbb
int
shrl
daa
enter
aaa
mov
fs
inc
daa
fadds
mov
dec
loope
in
fdivl
mov
or
aam
pop
mov
lcall
adc
mov
lcall
jge
sbb
insb
and
incb
scas
or
sbb
daa
dec
iret
shlb
dec
pop
or
ja
adc
loop
shlb
mov
push
shlb
test
mov
lods
sub
ds
push
push
popa
adc
inc
mov
inc
dec
cmp
insl
adc
add
xor
loopne
fmul
sarb
add
add
popa
pop
incb
imul
popa
je
inc
xor
push
cwtl
cmp
xor
gs
push
sbb
pop
lods
and
data16
push
cld
push
leave
push
or
pop
push
fs
hlt
pop
pushf
mov
in
popa
test
in
test
cmp
test
jmp
lcall
daa
clc
outsb
fwait
mov
and
in
aaa
repz
sub
jb
sti
jg
push
outsl
movsb
or
inc
fdivrs
leave
add
jno
mov
addr16
mov
loope
pop
xchg
push
xchg
lock
arpl
lea
mov
cld
iret
fdiv
add
out
mov
lret
or
test
mov
push
daa
pusha
jo
out
or
js
adc
push
sldt
xor
ret
xchg
mov
das
aas
enter
fnstenv
add
jae
jb
dec
add
pop
lret
cmpsl
fs
fisttpl
and
or
fcmovbe
inc
ljmp
test
and
pop
pop
movb
arpl
jnp
xor
popa
lret
add
or
add
stos
pop
pushf
js
or
fisttpll
xchg
int
fs
jg
stos
push
out
jge
shll
push
ja
popa
jo
jp
in
pop
movd
ja
js
shrl
push
dec
jp
movb
je
popl
daa
cmp
lcall
clc
xchg
push
pop
scas
sub
das
inc
arpl
pop
mov
push
data16
or
add
inc
mov
fdivl
inc
sub
pop
or
or
data16
adc
dec
inc
dec
stc
popa
insl
mov
adc
or
jb
and
add
outsl
fnsave
adc
xor
imul
jb
mov
out
push
aaa
dec
enter
jne
das
jne
ljmp
test
or
pop
cmp
imul
in
outsw
inc
and
jb
pop
mov
sar
mov
sbbl
adc
stos
aad
push
mov
and
adc
add
mov
mov
fcoms
imul
sti
jae
inc
pop
sbb
inc
dec
jmp
ret
dec
insl
orps
and
or
jo
mov
sarb
inc
xor
sbb
or
mov
jo
push
cmp
arpl
push
data16
jnp
sbb
mov
dec
push
cltd
iret
lret
push
iret
pop
inc
adc
lods
int3
jge
or
add
xor
and
add
mov
sub
cmp
addr16
fisttpl
sbb
xor
xchg
call
xor
lcall
shrl
stos
and
dec
mov
lcall
xor
mov
xchg
sahf
xchg
jmp
lahf
xchg
lret
cmpsb
pop
cmp
cmpsb
scas
jae
xor
jae
pop
pop
mov
mov
mov
mov
xlat
add
push
mov
jns
shrb
lcall
outsl
rclb
jmp
stos
ja
aam
jp
mov
jo
jl
or
iret
cmp
mov
xchg
movsl
aaa
daa
icebp
add
xchg
imul
sub
cmpsb
aam
push
xchg
inc
imul
dec
adcb
xlat
or
je
push
jb
aad
out
leave
lods
popa
push
mov
mov
xchg
neg
fnstenvs
call
inc
jbe
fsts
push
into
inc
jmp
adc
push
aas
pop
nop
inc
add
mov
xchg
cmp
adc
fwait
jno
popf
jge
mov
xor
subb
andb
cmp
sbb
xchg
adc
dec
je
insb
dec
fwait
outsl
lahf
mov
push
outsl
arpl
lret
cmpsb
pop
outsb
dec
loopne
add
and
xor
add
xor
addr16
pop
mov
fnstenv
xchg
fldt
mov
mov
mov
cmovge
cltd
cmpsb
mov
add
imul
shll
addr16
ja
add
or
es
pop
in
js
adc
test
add
xadd
add
inc
pop
pusha
inc
and
aaa
ss
imul
xchg
xor
cmp
jl
inc
mov
test
xor
inc
xor
in
xor
pop
add
ss
mov
enter
aas
mov
sub
mov
sbb
ljmp
lods
imul
lods
adc
sub
and
pop
test
and
fdivl
xor
adc
sbbb
das
sbb
pop
sbb
daa
mov
push
pop
in
sbb
inc
int
add
xchg
pop
cmp
test
cltd
ja
cmpsb
sbb
shlb
mov
sbb
pop
dec
add
cs
lret
dec
sub
dec
hlt
pop
push
jp
jae
scas
je
outsl
dec
pop
jo
inc
inc
jl
fdivrl
lret
scas
dec
inc
inc
call
mov
xlat
pop
and
add
add
aad
dec
cmp
pusha
jp
pop
mov
stc
xchg
pop
push
push
arpl
leave
fcoms
addl
mov
push
fmul
je
je
dec
popa
jo
notl
stos
out
add
and
outsb
in
jno
mov
stos
fidivrs
push
test
push
test
mov
xchg
mov
inc
mov
insb
push
or
inc
mov
mov
mov
ficomps
test
mov
sarb
xchg
movsb
adc
popl
leave
xchg
out
jecxz
jmp
cmp
mov
push
fwait
scas
imul
xchg
adc
adc
and
xor
xor
dec
push
dec
inc
or
or
jnp
sbb
mov
rorl
jo
mov
xor
mov
mov
push
enter
mov
daa
dec
mov
cmp
and
push
divb
jle
sub
out
pop
test
dec
popa
outsl
insb
or
push
insl
push
pop
and
pop
and
jnp,pn
sbb
sub
sub
in
xchg
sbb
dec
jo
outsb
add
mov
std
pop
inc
jne
mov
push
jns
pop
imul
cmp
dec
xor
ja
leave
mov
dec
pop
sub
dec
loopne
mov
xor
sti
push
fmuls
mov
pop
outsl
ret
scas
add
adc
push
sub
mov
mull
cld
pop
lods
and
cmp
mov
shll
cld
pop
jg
xchg
ret
imul
push
imul
mov
aaa
nop
aam
lret
mov
jg
inc
in
sbb
ficomps
sbb
orl
fstps
xchg
xchg
pop
and
or
pop
push
add
shll
test
call
sbb
add
jns
jb
jns
int
add
out
add
sub
mov
mov
repz
imul
movsb
cwtl
sarb
aas
and
pusha
push
jmp
jne
push
in
clc
je
imul
push
cmpsl
cld
int
cwtl
pop
jecxz
add
mov
mov
or
lret
addb
lahf
jbe
aaa
xor
sbb
dec
pop
pusha
out
add
sub
call
in
pop
sbbb
or
fwait
in
inc
xor
cwtl
add
sbb
dec
packssdw
arpl
xor
or
imul
aad
add
jmp
outsl
das
sub
pop
jge
cmp
ja
rorb
jns
jb
popa
and
push
and
push
fiaddl
xor
shrb
xor
sarl
add
stos
mov
sub
mov
add
enter
ds
pop
imul
jne
sub
imul
cmp
xchg
jmp
push
dec
dec
push
push
adc
add
dec
inc
sti
lret
fcmovu
outsl
dec
dec
inc
adc
push
xor
xor
lods
push
test
outsb
and
mov
shlb
popa
jae
xlat
xchg
adc
je
add
and
xor
inc
and
sub
dec
rorl
clc
push
xor
jns
or
pop
in
add
and
adc
daa
pusha
cmp
jge
int
jae
daa
insl
and
js
fldenv
inc
dec
lods
lahf
mov
mov
xor
pop
dec
fmuls
inc
out
mov
push
xlat
lods
aad
or
mov
lock
add
and
and
mov
jo
cmpb
das
dec
cmc
out
sub
bound
sub
shrd
jb
mov
popa
jmp
gs
into
mov
fcmovnu
lods
ret
outsl
pop
push
insb
test
sub
mov
sub
jb
sahf
sub
cmp
xchg
outsb
jbe
add
sbb
dec
fildll
imul
add
pop
add
push
inc
sub
insb
fdivl
test
inc
dec
das
xor
loope
xchg
sti
gs
sub
mov
mov
push
cs
test
lahf
pusha
pop
in
sbb
fs
xor
cli
outsl
data16
daa
nop
rolb
mov
jecxz
jo
or
in
aaa
ss
fs
or
aaa
xor
imul
jne
mov
and
xor
sub
scas
mov
push
fsub
pop
or
cs
xor
imull
jmp
in
adc
jl
cmp
push
shll
inc
jo
xor
or
aaa
nop
stos
and
insl
sti
js
jae
jne
add
or
pop
xor
test
push
imull
or
fiaddl
jno
mov
out
in
popf
insl
imul
je
out
sbb
movsb
shld
push
xor
adc
data16
xchg
gs
sub
push
js
jp
xor
jp
and
xchg
inc
fisubs
insl
mov
loop
and
mulb
push
imul
dec
hlt
mov
cmp
add
sbb
push
xchg
addr16
fbstp
ror
daa
imul
ja
cmp
push
push
inc
cmpsb
and
inc
jnp
sbb
outsb
dec
add
lock
enter
or
loopne
add
add
adc
pop
call
add
add
loopne
mov
and
push
pop
pop
mov
pop
push
out
jmp
and
add
pusha
push
xlat
les
or
adc
fnstenv
push
pop
addb
add
mov
jge
addb
add
pop
sti
adcb
sub
pop
fs
jne
push
push
adc
sbb
or
mov
push
pop
addr16
add
in
dec
add
add
or
adc
adc
push
pop
sbb
lcall
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
mov
or
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
adc
dec
push
test
pop
dec
pop
pop
pop
pop
pop
push
pop
mov
stos
lock
decl
jb
jne
ja
jns
jnp
jge
jg
mov
nop
dec
into
rorb
sbb
add
lea
push
fs
push
mov
inc
xchg
xchg
lds
pop
fs
pop
scas
daa
in
push
shll
lahf
imul
fistl
cmp
aam
insb
push
jno
jne
imul
pop
dec
pop
inc
bound
inc
lea
xor
add
lahf
mov
push
dec
outsl
jbe
pop
push
clc
dec
mov
pop
add
xor
add
jle
push
inc
or
lret
fwait
jecxz
incl
shl
sub
sub
push
mov
hlt
and
es
ror
sbb
add
sbb
and
gs
push
fistpl
pushf
jo
pop
inc
out
ss
mov
mov
pop
lret
cmp
mov
movsl
popa
xor
xchg
lods
imul
pusha
or
addr16
jne
test
sbb
jns
out
nop
sub
mov
and
jg
sub
push
jns
xchg
lods
and
push
pop
push
lret
pop
inc
and
sbb
pusha
gs
push
inc
sub
lret
xchg
es
dec
sbb
xchg
xor
test
add
sub
add
jae
push
pop
sbb
pusha
ss
es
pmaxub
inc
pop
mov
jno
pop
xchg
sub
lfs
fldl
dec
jnp
dec
add
jns
in
loopne
je
outsb
movsb
sbb
or
xchg
or
pop
and
xor
sbb
dec
fcomps
je
xchg
xchg
loope
popa
mov
xor
mov
roll
adcb
sub
aas
mov
adc
dec
pop
nop
push
lods
pop
je
jl
pusha
and
bound
xchg
lock
in
sub
add
cmp
add
ds
or
add
cs
pop
es
xor
inc
int
xor
xlat
inc
scas
jge
inc
ret
and
or
add
pop
pop
outsl
inc
mov
mov
je
cmp
fs
pop
pop
les
adc
mov
addr16
or
sahf
sub
pop
jo
ss
fucomp
cmc
pop
sub
sub
or
leave
sbb
jnp
or
push
cwtl
push
pop
mov
ds
jae
sub
xchg
shll
int3
rorb
dec
mov
mov
lcall
add
mov
ja
js
dec
mov
je
add
push
out
insb
fwait
push
lods
insl
sub
inc
imul
jmp
and
imul
into
insb
cld
nop
add
lock
cmpsb
imul
imul
cmpsb
imul
fsubs
cwtl
je
sub
into
insl
lcall
in
imul
jae
cmpsb
cmp
call
ret
lcall
push
and
pusha
pusha
xor
test
arpl
xor
out
push
sub
stos
cs
cmp
cwtl
lds
prefetchw
int3
add
adcb
add
test
xchg
cmp
xor
dec
add
dec
enter
adc
add
adc
orb
add
jecxz
cmp
add
pop
dec
push
add
add
xchg
dec
add
add
pop
gs
cmp
call
adc
adc
xchg
or
xchg
shr
adc
pushl
fildl
add
test
mov
xchg
call
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
ret
enter
int3
int
iret
rcl
sar
call
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
cmp
test
mov
flds
or
mov
test
sub
add
add
jg
dec
cmp
cmp
mov
addl
and
jns
fdivl
das
das
or
push
dec
sbb
add
xchg
mov
mov
add
or
push
cmp
mov
add
pusha
inc
jne
mov
dec
inc
pop
outsb
data16
in
pop
xor
dec
mov
fucomi
mov
addr16
push
push
fsubrp
fidivrs
inc
inc
aaa
jns
aas
pop
pop
mov
cmp
and
sbb
pop
or
lock
mov
pop
adc
jl
js
cwtl
sbb
push
neg
jnp
pop
pop
inc
cmp
das
in
out
mov
insb
mov
add
add
rclb
pop
jbe
out
pop
xor
push
dec
inc
dec
pop
dec
dec
inc
add
shrb
push
push
and
and
std
pop
mov
adc
mov
rcll
xchg
adc
push
or
mov
cmp
rclb
cmpl
cmp
inc
inc
inc
inc
jnp
popa
in
iret
sub
adc
add
cmc
outsl
sub
mov
shll
mov
ljmp
out
inc
inc
mov
mov
enter
shl
mov
shlb
test
arpl
imul
popa
push
outsl
outsl
cs
aas
mov
xchg
imul
imul
push
add
add
jne
mov
add
mov
popa
and
pop
jge
sti
xchg
cltd
test
adc
out
imul
orb
call
andb
leave
outsb
movsl
adc
ja
cs
mov
or
imul
dec
mov
jno
aas
and
sbb
cmp
dec
add
cmp
jmp
push
mov
test
mov
cmpxchg
inc
cmpl
frstor
pop
iret
jae
dec
sbbl
inc
mull
outsb
or
pop
fildl
pop
cmc
adc
aad
sti
jo,pn
bound
lock
inc
je
xor
hlt
adc
xchg
inc
daa
jg
sti
dec
inc
adc
cmp
sbb
add
add
pop
fsubs
mov
insb
testb
dec
push
pop
mov
popl
je
test
or
addr16
mov
cmp
pusha
les
data16
lcall
dec
push
nop
add
adcb
sub
inc
enter
test
imul
test
cwtl
repz
ret
mov
adc
outsl
add
pop
and
inc
pop
and
aaa
mov
lret
adc
lret
add
and
dec
shll
inc
fwait
scas
mov
add
or
jnp
aas
or
add
pushf
mov
mov
push
xchg
hlt
mov
pop
call
mov
mov
mov
pop
ret
add
mov
cmp
xchg
jo
and
add
xchg
nop
xor
dec
xor
nop
int
nop
adc
call
clc
push
xchg
sbb
pusha
add
sub
popa
fwait
outsl
daa
je
movsb
jg
dec
pop
or
mov
sbb
mov
lret
fcomps
xor
enter
mov
mov
movsl
mull
movsl
push
int3
stos
mov
movsl
jecxz
movsl
aaa
add
pop
and
jl
add
mov
dec
fmul
mov
daa
lods
sbb
in
mov
clc
aaa
lret
or
and
and
nop
cmpsb
sbb
inc
or
cmc
xor
imul
nop
pcmpgtb
xlat
dec
negb
pop
enter
bswap
add
pop
mov
cmpl
xchg
cmpsl
adc
fstps
cmpsl
cmp
dec
pusha
and
xchg
cmpsl
mov
dec
lcall
or
nop
xchg
mov
lcall
loopne
and
les
leave
inc
sbb
ljmp
mov
test
daa
cmp
pop
ss
sbb
pusha
sbbl
notl
cmp
adc
and
rcl
or
or
mov
add
adc
and
fwait
or
add
imul
insb
test
add
fwait
pushf
add
stos
and
loop
daa
cmp
ret
js
mov
test
pop
pop
add
fdiv
stos
xchg
and
and
stos
flds
clc
dec
push
xor
rorb
pushf
lods
ror
xor
rorb
lock
stos
xorb
dec
or
add
inc
xor
cmpb
sbb
mov
xchg
mov
cwtl
push
adc
xchg
insb
add
inc
lcall
dec
xchg
jl
ljmp
lods
inc
test
daa
ljmp
stc
lods
lods
lods
imul
dec
int
xor
lods
mov
rcrb
mov
dec
aaa
fnstcw
jg
add
insl
lcall
inc
shlb
in
adc
sti
sbbb
push
lods
aaa
pusha
pop
testb
fsubs
cli
mov
pop
pushf
aaa
inc
xchg
roll
inc
dec
push
add
mov
mov
push
jnp
fs
aaa
outsl
add
adc
dec
ljmp
scas
je
imul
test
or
scas
imul
cld
add
pop
leave
add
les
cmp
ja
aas
pop
enter
and
xlat
aaa
pop
add
mov
outsl
je
mov
test
adc
mov
ljmp
aam
scas
jecxz
popa
and
adc
inc
add
adc
xchg
lods
add
test
mov
jp
sbb
daa
stc
push
ss
push
cmp
sub
adcl
nop
int3
mov
fisttpll
popa
hlt
mov
add
mov
addl
mov
lret
push
mov
or
movsb
mov
pushl
or
mov
cwtl
movsb
add
inc
rorb
mov
aam
inc
enter
adc
xchg
lea
and
pushl
mov
cwtl
nop
or
sbb
mov
int
pop
add
int
mov
adc
mov
jmp
enter
pop
ja
outsl
pusha
or
add
or
scas
mov
nopl
cmp
jnp
add
ret
aaa
mov
jbe
push
mov
fs
mov
pop
lret
sub
stc
lret
in
js
add
insb
mov
leave
inc
shll
out
pop
inc
push
andb
negl
inc
dec
lahf
dec
mov
lcall
test
shll
out
sbb
bound
cmpsb
imul
shll
and
lea
shll
aad
fwait
cmpsb
imul
dec
shrl
pop
subb
in
dec
mov
mov
xlat
dec
call
repz
enter
mov
add
mov
or
sbb
or
add
pop
jg
pop
inc
sub
xchg
mov
fs
add
add
push
enter
sbb
sbb
mov
sbb
ret
push
pop
inc
mov
lret
inc
leave
cmpb
pop
js
in
inc
pop
add
scas
test
inc
adc
sti
cltd
out
shrl
mov
inc
inc
sbb
lcall
inc
repnz
sti
cmpsl
xchg
int
int3
pop
wbinvd
xor
pop
jb
fsubs
lahf
jmp
iret
sbb
add
js
fmuls
cmp
jl
and
xchg
cmp
shld
mov
pop
and
cmc
mov
push
jae
mov
xlat
in
xor
inc
leave
and
xor
inc
mov
idivb
arpl
jae
add
inc
push
sbb
ret
inc
xchg
call
inc
pop
arpl
mov
popa
ja,pt
or
cmp
mov
jno
inc
xor
inc
imul
add
fwait
or
cwtl
test
and
in
leave
or
inc
xchg
aam
and
xor
inc
jae
mov
mov
inc
pop
inc
mov
stos
sahf
insb
into
push
xor
cmpsl
pop
jl
inc
mov
pop
add
xchg
mov
jb
jnp
sub
pop
xor
into
pop
and
pop
repnz
les
mov
push
mov
xor
sub
stos
in
pmaxub
mov
pop
lret
nop
cmp
or
adc
inc
push
cmp
mov
mov
xor
arpl
mov
xor
dec
mov
pusha
push
pop
imul
sbb
cmp
push
enter
mov
xchg
aam
jge
xchg
xor
jns
mov
xchg
mov
mov
sub
stos
jae
fs
pusha
mov
mov
in
pop
out
pop
rcrl
sub
jecxz
into
dec
inc
sysret
sbb
pop
and
lret
jle
inc
mov
adc
sub
pushl
add
cltd
sub
xchg
sarb
mov
xchg
enter
lahf
fldt
inc
push
mov
add
mov
push
mov
dec
in
add
and
clc
dec
push
test
cmp
xchg
addr16
dec
jge
jae
mov
rol
mov
int
add
adc
les
cmp
rorb
add
ror
push
outsb
inc
mov
decl
in
add
stos
in
mov
rorl
fwait
les
sarl
mov
scas
fadds
cmp
adc
popa
dec
cmp
and
ret
ret
jb
lahf
js
data16
lds
xor
rolb
sub
xor
in
add
cmp
dec
js
cmp
sub
adc
jnp
ss
leave
dec
fildll
aam
pusha
xchg
mov
or
inc
enter
sbb
lcall
pusha
hlt
in
cmp
jo
and
iret
pushf
daa
or
add
dec
jo
or
mov
sti
scas
mov
repnz
dec
int3
les
xchg
inc
mov
out
std
add
repnz
sarb
call
lds
xor
or
sub
cmp
pushf
dec
clc
add
add
repz
and
pusha
xchg
pushf
mov
aam
or
nop
js
cltd
mov
mov
adc
cmp
aas
pop
in
mov
shrb
sbb
mov
inc
pop
mov
lahf
xchg
inc
dec
inc
jl
jg
inc
inc
mov
inc
leave
test
xchg
xchg
mov
sbb
inc
mulb
jns
dec
rorl
xchg
lock
rclb
loopne
pop
xchg
mov
inc
xor
in
or
push
addr16
push
xchg
inc
cwtl
mov
pop
lret
pop
fs
jl
pop
mov
lret
push
and
sbb
cmp
insl
and
inc
repnz
cltd
fs
jg
and
repnz
mov
test
test
pop
jo
or
out
mov
xchg
jne
sbbb
das
jns
lret
dec
lret
xchg
cs
mov
pop
stc
pop
dec
scas
cmp
pop
cmpsl
mov
add
or
pop
inc
mov
lods
pop
insl
push
aas
ja
xchg
mov
iret
or
divb
mov
outsl
ja
fmull
mov
pop
and
mov
nop
jo
pop
mov
xlat
testb
divb
rcrb
shlb
rcrl
movhlps
xchg
add
lret
outsl
enter
dec
rorb
rorb
xchg
mov
lock
icebp
push
repnz
inc
repnz
repz
stc
pop
call
pop
in
ds
add
aas
inc
or
dec
and
mov
int
jbe
sbb
dec
pop
shlb
xchg
xchg
or
or
ja
dec
lret
jp
nop
int
adc
add
lret
cmp
insb
adc
test
out
or
xor
das
and
push
xchg
mov
inc
push
jne
fildl
inc
imul
popa
dec
adc
push
xchg
inc
int
repz
mov
inc
and
jo
pop
repnz
add
cs
inc
push
inc
int3
or
add
gs
adc
sbb
and
leave
push
push
push
add
test
and
sub
movsb
mov
add
dec
add
push
rcr
mov
aas
stos
lods
nop
and
add
inc
and
lcall
xchg
nop
jo
inc
and
or
incb
dec
addr16
push
dec
inc
je
sbb
push
dec
pop
pop
addr16
repz
fwait
in
push
push
inc
hlt
sbb
popf
and
pop
arpl
shll
sbb
add
xor
aaa
push
lcall
fadds
out
push
hlt
pop
inc
andb
cmpsl
add
sub
rcll
aas
push
add
and
scas
dec
push
sub
aaa
adc
dec
or
sbb
xchg
sub
adcb
xchg
xor
push
insb
pusha
mov
add
imul
push
addb
fs
or
mov
inc
xchg
and
add
mov
jecxz
add
inc
inc
pop
pop
push
dec
push
es
push
push
xchg
or
insb
inc
jae
push
jb
mov
add
push
fmul
decb
inc
push
dec
inc
inc
daa
or
popa
leave
and
inc
inc
or
or
ficoml
jle
fisubrl
dec
cltd
daa
mov
push
dec
and
pop
mov
and
imulb
popa
fldcw
inc
inc
push
inc
test
dec
inc
add
adc
inc
addb
xor
push
pop
add
mov
add
fxch
inc
and
ss
imul
inc
fucomp
inc
inc
adc
js
ja
xor
roll
jbe
je
jb
shll
insl
insb
xor
shll
push
push
shll
loopne
hlt
add
je
imul
imul
imul
push
sbb
mov
addl
outsb
rcrl
mov
and
sarb
cmp
jmp
push
dec
push
dec
dec
dec
inc
dec
push
sbb
in
and
and
jge
imul
js
dec
lahf
inc
push
adc
ss
dec
add
shrb
shrb
pop
inc
xchg
adc
jecxz
pop
inc
push
or
iret
es
clc
mov
negl
outsl
jle
lcall
cmp
add
clc
test
mov
out
inc
xor
and
inc
and
jp
sub
mov
jmp
push
mov
pop
push
cmp
daa
mov
insb
cs
push
rolb
mov
movsl
mov
fisttps
stos
mov
loopne
imul
sub
gs
jae
cmc
xor
push
xor
inc
jae
lcall
fimuls
mov
scas
div
loop
shlb
jae
lea
jmp
decl
jg
sub
jne
test
sub
push
inc
adc
adc
xchg
dec
fwait
xorl
add
xor
out
inc
inc
or
add
xchg
add
dec
scas
pop
inc
movsb
int
mov
mov
int3
pop
sbb
jnp
mov
inc
pop
ud2
sbb
out
push
add
pop
cmpsb
imul
imul
push
or
or
or
xorps
adc
push
stc
xorb
and
cmovno
xor
push
push
pop
push
pop
push
pop
mov
jnp
pop
insl
stos
and
cmpsb
imul
push
sti
das
xorb
push
sbb
xchg
sub
push
sbb
sbb
mov
into
pop
xlat
mov
sbb
xor
iret
add
jae
enter
btc
jmp
mov
ja
popf
sub
pop
add
pop
xchg
das
pop
xchg
or
mov
xchg
cli
test
mov
sub
or
fsts
pop
or
push
insb
lcall
adc
xor
mov
sbb
sbb
xchg
imul
sub
cmpsb
or
adc
imul
mov
xchg
jmp
push
mov
xchg
add
scas
in
pusha
adc
orl
and
cmp
adc
add
push
and
ret
add
push
dec
push
inc
inc
add
or
test
outsl
ffreep
mov
add
movsb
add
pusha
cmpb
cmp
andb
filds
mov
sarb
jle
test
shll
in
adc
das
out
push
sbb
inc
mov
iret
mov
inc
sbb
in
call
push
add
add
pop
ficompl
fisubrl
xor
fcomp
loopne
or
dec
outsb
cmp
jle
xchg
adc
inc
test
inc
add
cwtl
mov
stos
pop
mov
and
xchg
stos
cltd
jnp
pop
outsb
add
lcall
inc
adc
jmp
fistpll
mov
cmp
orb
jo
push
gs
mov
mov
and
sbb
ds
xchg
testl
jo
jo
dec
lock
push
push
pusha
les
mov
aas
inc
mov
pushf
loope
or
arpl
rorb
push
cmp
ss
rorl
repz
ja
cmpsb
pop
xor
add
cmp
dec
shll
shl
test
add
dec
insb
enter
add
add
nop
or
add
xchg
fildl
sub
repnz
add
popf
sbb
lcall
or
xor
cmpsb
add
pushf
lock
dec
shll
mov
xor
lods
test
movsb
mov
pushf
cwtl
xchg
mov
js
push
xor
rorl
sub
mov
sbb
fwait
jecxz
ss
xchg
fstpt
cmp
mov
or
orb
add
xor
gs
adcb
or
inc
enter
jnp
jg
test
incb
dec
leave
dec
dec
mulb
add
xchg
cmp
pushf
or
ret
mov
adc
aas
in
adcb
sbb
stc
mov
mov
ret
inc
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
call
cli
ljmp
inc
or
addl
xchg
cmp
pushl
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
lcall
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
jne
int3
add
sti
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
and
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
outsl
lock
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
cld
jecxz
cmpsb
add
xor
mov
jne
fldt
cmp
jno
call
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
ljmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
mov
dec
dec
gs
std
orl
sub
enter
fmuls
sbb
sbb
inc
outsl
repnz
push
inc
stos
inc
lahf
test
lret
mov
and
dec
mov
scas
mov
and
inc
add
les
mov
mov
adc
cmp
cmpsb
imul
sarb
adc
sbbb
rorb
inc
addb
sbb
imulb
adc
sub
xchg
push
cmp
pop
push
dec
in
fxch
push
rcrb
pop
add
ss
cs
add
loopne
lock
imul
pop
mov
gs
sar
ret
dec
movl
jns
sub
xor
and
pop
and
addb
sbb
clc
xor
enter
test
int
fisttpl
andb
subl
pop
cs
add
add
cmp
js
xchg
add
sub
add
add
out
push
inc
jae
sbb
jmp
push
and
icebp
add
push
cs
fldt
push
sbb
dec
jns
neg
jnp
pop
movhps
daa
adc
out
das
aaa
xor
xchg
lret
adc
add
aas
cld
pop
push
cs
cs
xor
xor
out
lds
pop
and
xchg
mov
pop
sbb
loopne
xor
add
je
xlat
add
add
or
push
out
push
jnp
pop
dec
jb
add
adc
outsb
mov
xor
jg
cld
aas
out
mov
pavgb
les
jnp
mov
sbb
sub
inc
clc
fidivs
cmp
out
xchg
pop
jbe
pop
loopne
mov
neg
push
outsb
pop
popf
mov
pop
xchg
add
das
lods
or
sbb
adc
outsl
fs
movhps
add
and
sbb
ja
xchg
mov
mov
orl
loope
adc
movntq
out
add
add
mov
aas
add
push
or
rclb
xlat
mov
or
sbb
or
mov
sub
add
pushf
lret
gs
incb
cld
jg
aas
lock
sbb
cmp
add
xor
test
fidivrs
iret
push
jo
neg
loope
fwait
pop
add
adc
fisubrs
jmp
xchg
sub
movsl
sti
js
sbb
loop
mov
adc
mov
and
mov
inc
adc
inc
and
test
jb
inc
dec
xorb
add
add
movsb
idivl
mov
xor
cmp
xchg
adc
ret
loopne
mov
fldcw
dec
addb
mov
fistl
clc
jg
aas
cld
ds
cmp
push
cs
sbb
cmp
jl
aas
incb
clc
hlt
ficomps
add
jg
shlb
inc
and
loope
out
cs
data16
add
enter
jl,pt
outsb
mov
cmp
cmp
clc
and
lock
mov
add
loope
movl
cmp
inc
push
repz
add
mov
shrb
andps
dec
aaa
dec
addr16
dec
inc
dec
inc
jg
add
mov
mov
add
pushf
mov
jmp
mov
adcl
add
xor
pop
inc
pop
dec
mov
int
sub
clc
or
add
push
and
das
dec
dec
aaa
and
add
pop
insb
mov
int3
addr16
mov
or
roll
xor
sbb
xchg
inc
pop
arpl
inc
mov
cmp
push
ret
sbb
shlb
sub
mov
and
mov
xor
jle
xor
pop
xor
rclb
adcl
mov
orl
add
or
pop
cld
paddd
pop
inc
inc
xor
dec
flds
xor
push
inc
aaa
lsl
addl
nop
inc
ret
push
loopne
pusha
and
mov
dec
rolb
cld
ret
daa
pop
add
cvtdq2ps
cld
jg
clc
aas
decb
add
or
adc
repnz
cmovo
notb
add
cmpsl
bound
fcomip
add
int3
fidivrs
movhps
mov
or
sbb
sub
xchg
in
mov
fiadds
pop
movhps
int
test
out
cmp
movl
neg
movhps
addr16
outsb
pushf
mov
enter
sahf
dec
loopne
aaa
pop
movhps
in
or
aaa
mov
arpl
fs
movhps
sub
mov
fwait
outsb
addb
out
fldt
dec
nop
dec
movsl
add
in
mov
pop
enter
adcb
add
int
imul
mov
xchg
dec
shl
inc
out
inc
jg
push
push
outsl
sbb
add
lret
add
pop
and
adc
cmp
sub
sbb
cld
cmp
pushl
nopl
adc
xor
popf
add
push
mov
pop
aas
or
sub
addb
add
adc
stos
jmp
adcb
adc
aas
add
jg
lcall
outsl
pop
nop
fwait
add
pop
dec
mov
aas
dec
adc
cmp
add
btr
add
addl
jmp
add
or
mov
daa
pop
jbe
and
jg
aas
fwait
popf
ficomps
lds
mov
daa
loopne
pop
and
adc
inc
mov
nop
cwtl
adc
sub
xor
leave
pushf
daa
cwtl
sbb
and
test
or
pmovmskb
jnp
fwait
jge
add
adc
or
push
pop
adc
das
movsb
scas
lds
mov
add
pop
xchg
add
add
mov
jnp
or
sbb
sub
dec
xchg
shll
xor
cld
pushf
or
add
fidivrs
add
or
sbb
or
sub
sub
xor
mov
mov
js
dec
outsb
dec
ja
mov
in
jnp
or
sbb
add
arpl
sub
je
mov
popa
inc
idivb
adc
and
xor
shll
arpl
or
adc
pop
adc
add
inc
adc
or
or
dec
shll
add
aas
xchg
fldl
mov
and
ret
or
cmpsb
jmp
rolb
addb
xor
xor
sub
shll
fnstenv
inc
test
ljmp
outsb
pop
push
xor
ret
add
add
rol
out
aas
pop
and
jecxz
inc
dec
or
and
rcrl
adc
jcxz
js
outsl
ja
xchg
sbb
sbb
push
lock
addr16
pop
and
jg
subb
ds
out
adc
or
lds
push
add
and
outsl
mov
cs
add
test
dec
mov
out
xor
xor
fadds
nopl
outsl
sub
fcmovne
jg
add
add
push
iret
scas
dec
push
and
addb
or
mov
inc
dec
push
or
mov
mov
inc
add
mov
or
dec
adc
adc
or
out
mov
and
xor
pop
ljmp
icebp
dec
lods
shl
push
add
aas
clc
push
jo
lock
out
mov
pop
or
sbb
sub
xchg
lock
cmp
push
or
jnp
stos
inc
xor
inc
or
stos
adcl
and
hlt
dec
stos
rdpmc
fsubrl
adc
jg
inc
add
in
mov
inc
inc
inc
and
add
sbb
sub
mov
add
xchg
lret
in
aas
cld
aas
cld
jl,pt
cmp
sbb
jnp
mov
sbb
sub
arpl
or
add
out
mull
push
jo
pop
add
dec
lcall
push
inc
ret
arpl
mov
dec
and
xor
dec
mov
jl,pt
notl
or
or
jl
and
push
out
mov
addb
add
fnstsw
mov
add
mov
lock
add
xor
ja
xor
sub
incl
das
dec
repz
and
fimuls
test
mov
jl
cmp
mov
add
adc
mov
dec
enter
add
js
jb
stos
adc
inc
jbe
push
pop
adc
adc
lret
add
xchg
ja
fcomp
test
xchg
mov
adc
lock
rcrb
mov
icebp
mov
scas
add
dec
add
push
lahf
insb
or
add
jae
sub
inc
jnp
jno
aas
adc
sub
movsl
es
push
in
add
sub
out
mov
std
jge
xor
xor
or
push
cmpps
xor
fnstcw
pop
add
add
dec
ds
inc
loope
cwtl
stc
inc
mov
sarb
sub
and
pop
xlat
fnsave
outsl
add
xor
xchg
jne
xor
sub
mov
mov
mov
movsl
ja
mov
mov
sarl
lods
sub
add
inc
sbb
test
dec
xchg
aaa
add
sub
xor
ret
in
ja
sti
and
adc
stc
dec
and
pop
pop
aad
mov
ret
add
lods
mov
adc
sbb
lcall
test
daa
pop
mov
aad
pop
aad
lods
mov
ja
mov
test
ret
addr16
std
scas
xor
mov
pop
adc
dec
sti
neg
mov
sub
and
ffree
addr16
cwtl
mov
sub
imulb
enter
out
sbb
lods
cmp
sub
or
ret
nop
insb
popa
test
or
cwtl
lods
xchg
xor
cmp
inc
loope
jmp
daa
mov
sbb
icebp
pop
aad
adc
lock
ret
cmp
sarb
ja
jbe
sub
dec
scas
aas
inc
jbe
jbe
mov
adc
mov
arpl
xor
sub
into
xchg
test
inc
sub
xor
and
incl
push
mov
clc
lods
test
mov
incl
in
sub
aad
adc
mov
lds
mov
pop
shl
mov
lods
and
aaa
xor
cmp
jne
jo
inc
loopne
dec
jae
mov
test
adc
mov
aas
cmp
shrb
daa
add
pusha
fisttpl
aas
adc
mov
inc
je
and
xchg
mov
xchg
data16
adc
jns
rcrl
dec
adc
dec
inc
or
mov
mov
sahf
fistpl
in
xchg
or
sub
cmp
xchg
hlt
into
sarb
pop
in
call
jnp
pop
jmp
test
inc
cli
mov
imul
pop
cs
mov
repz
mov
ret
pop
jecxz
scas
cmp
and
or
das
pop
inc
loope
enter
sbb
nop
jg
mov
call
and
fst
lret
cmp
arpl
fstpt
push
xchg
lds
lock
mov
lods
xchg
std
enter
mov
push
aas
push
push
mov
insl
aaa
ret
pop
dec
jae
push
mov
add
jp
push
aaa
daa
pop
into
aad
sub
sbb
ret
cmp
adc
sbb
jno
sbb
in
pusha
aaa
push
inc
xor
and
fwait
insl
mov
data16
scas
jb
in
lea
rol
adc
jl
mov
insb
rclb
mov
iret
or
repz
scas
popa
jnp
outsb
lahf
cmp
push
sub
mov
sti
test
dec
jmp
push
add
repz
loope
bound
les
dec
aaa
fldt
mov
lods
cmp
cwtl
mov
pop
add
inc
lret
fnstenv
push
sbb
aas
shlb
lock
sbb
sub
xchg
add
ds
mov
lods
shll
ret
or
jg
negb
sub
jne
inc
add
add
insl
shll
or
cmp
shrb
cmp
arpl
xchg
lds
jb
insb
and
mov
mov
test
or
mov
or
adc
xlat
mov
or
das
cmp
popa
popl
adc
sub
je
ret
sbb
or
negb
lret
lds
adc
add
popa
pusha
icebp
loop
inc
mov
jb
adc
rcrl
dec
mov
adc
sbb
cmova
xchg
pop
sbb
lds
test
add
adcl
mov
adc
mov
dec
mov
dec
xlat
imul
push
dec
imul
adc
leave
pop
iret
mov
pop
sbb
jle
shlb
js
xor
cld
lods
cmp
pop
inc
and
mov
inc
xchg
mov
lods
xor
fcompl
mov
movsl
dec
jbe
pushf
idiv
sbb
sbb
sub
iret
mov
cmp
cmc
pop
sub
mov
mov
insl
jnp
int
dec
sbb
das
cmpsl
imul
jbe
lret
sbb
sub
jns
mov
enter
or
or
or
push
sbb
imul
mov
inc
inc
and
mov
orl
and
ret
mov
and
das
rorb
xor
shlb
pop
dec
lahf
sbb
mov
cltd
adc
pop
fdivs
mov
shll
or
or
js
xor
fsubl
push
pop
rclb
cmp
sti
aas
shlb
push
or
scas
jge
xor
add
sbb
sti
and
add
test
push
add
and
pop
or
xchg
dec
enter
add
nop
or
push
pcmpgtb
es
adc
mov
add
adc
inc
es
lods
xchg
cmc
adc
add
sbb
sbb
nop
and
push
nop
add
sbb
pop
and
nop
add
and
sub
adc
nop
add
sub
and
add
mov
sbb
push
je
push
outsb
call
or
jae
hlt
adc
stos
mov
movzbl
or
insb
gs
push
imul
mov
push
cmpsl
sbb
je
mov
or
inc
adc
or
dec
push
and
fbstp
jge
xchg
insb
insb
push
pop
jb
jle
lds
dec
jae
gs
or
adc
jo
push
out
adc
mov
adcl
inc
push
inc
push
fildl
inc
dec
dec
inc
pop
popa
sbb
lahf
cmp
mov
inc
xor
sbb
sub
push
dec
inc
dec
divb
jbe
jne
mov
push
aaa
popa
cmpsb
jo
add
push
add
fwait
jge
lock
arpl
fildll
push
add
aaa
ljmp
inc
jae
or
sub
push
add
lods
add
inc
jne
jo
aas
add
das
pop
pop
mov
pop
inc
xor
lods
or
in
int3
add
divb
fwait
and
bndstx
gs
inc
pop
cmpl
and
popa
ret
mov
mov
movsl
daa
popa
bound
rcr
lea
push
jne
push
enter
insl
sbb
or
jne
loope
pop
mov
jne
sbb
jnp
inc
mov
adc
lock
or
jp
loope
jae
or
data16
jae
inc
insb
ss
popa
fsubrl
fsubs
mov
je
push
inc
je
int
mov
fdivrs
js
fsub
lcall
je
jae
sub
jl
push
fcomp
pushf
arpl
adc
outsl
insl
sbb
adc
insl
jo
insb
divb
inc
sub
imul
shlb
xchg
outsb
ret
popf
std
sbb
or
push
push
push
or
ja
jle
dec
outsl
add
push
dec
push
cmp
data16
ds
fcomps
adc
push
sub
jae
mov
add
sbb
mov
push
inc
imul
dec
jg
xor
movsb
dec
xchg
pushf
mov
inc
adc
ret
loope
jmp
jbe
mov
adc
ss
xchg
inc
add
push
push
lret
adc
stos
sub
sbb
push
outsl
jae
xor
fisubrl
fs
add
sub
fdivs
xor
inc
xchg
out
add
push
lods
lea
adc
fisubs
pop
or
add
or
test
ss
mov
pop
inc
sbb
into
rolb
inc
lahf
mov
inc
ljmp
xchg
push
inc
cmp
add
ljmp
pop
insb
push
pop
cmc
decl
or
xor
xchg
rorl
jmp
xchg
cmp
inc
ret
popa
arpl
imul
push
cmp
insb
sub
outsb
xchg
and
icebp
push
xchg
dec
lret
data16
cmc
pusha
and
ret
xchg
cmovle
xor
and
mov
pusha
cwtl
mov
inc
bound
loope
mov
fisttps
gs
sbb
lock
gs
or
lcall
lret
data16
ret
sub
dec
es
or
sbb
insb
mov
mov
int
addl
xor
sbb
cwtl
inc
inc
dec
sub
xor
xor
push
pmulhw
bound
or
out
insb
adc
push
hlt
push
and
insb
cltd
mov
and
sti
mov
test
data16
dec
jb
es
push
adc
inc
jae
mov
insb
pop
jo
negb
ss
sbb
jae
and
cwtl
mov
inc
outsl
push
dec
mov
fidivrs
sbb
je
jo
jae
adc
pop
push
inc
ret
mov
cmp
jl
sbb
lcall
in
aam
push
dec
jae
sbb
push
sahf
insl
fldcw
decl
add
or
mov
hlt
cmp
mov
arpl
mov
push
jo
add
adc
push
dec
inc
inc
xor
pop
pop
mov
add
jb
cmp
dec
jne
push
mov
sbb
scas
xorl
arpl
mov
imul
adc
sub
pop
adc
addb
or
jle
lock
addr16
jne
sub
inc
rclb
int
test
sub
sbb
sub
sub
les
sub
adc
add
mov
cmp
enter
sub
sub
inc
in
adc
pop
jo
call
mov
mov
jns
leave
sbb
sub
add
es
insb
adc
sbb
sbb
xchg
mov
jb
push
mov
movups
imul
fwait
arpl
mov
and
inc
sbb
dec
rcrl
or
xchg
insb
and
sub
test
mov
cmp
mov
jle
bound
mov
push
jmp
jae
cld
repz
in
dec
ret
mov
arpl
imul
xchg
sub
mov
arpl
lds
in
rorl
cmpsl
push
leave
xchg
cmp
sarb
dec
pop
imul
rcrb
or
insb
adc
fimull
pop
sub
andl
shlb
push
ds
push
cmp
push
loopne
adc
or
pushf
jg
mov
mov
enter
adc
add
mov
or
mov
and
or
jb
mov
and
popa
aad
mov
xchg
nop
test
test
xor
or
adc
or
imulb
mov
and
inc
add
mov
push
mov
xchg
cmc
pop
jne
adc
out
adc
mov
or
outsb
dec
inc
xchg
adc
adc
lock
pop
cmpsb
pop
fs
pop
mov
callw
add
jno
push
lret
es
mov
in
mov
push
lods
mov
mov
fstps
in
add
mov
dec
mov
mov
inc
imul
nop
adc
jmp
mov
aam
imul
testb
push
mov
mov
pop
inc
add
add
mov
add
or
or
call
outsb
add
data16
adc
and
lods
fwait
or
add
imull
xchg
add
add
inc
subl
add
push
into
add
fcoml
add
mov
pop
mov
sbb
jne
jae
lahf
insl
xcrypt-cbc
cmpsl
push
cltd
pop
xchg
pop
add
je
cs
fldl
test
nop
jmp
and
pusha
dec
xor
inc
jb,pn
popa
mov
mov
mov
inc
add
pop
inc
cs
mov
jnp
shll
rorb
or
rep
xchg
int
add
dec
stos
mov
add
jb
je
mov
jnp
daa
inc
add
add
mov
aam
aad
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
adc
inc
add
