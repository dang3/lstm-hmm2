sti
idiv
pushl
rol
push
mov
call
mov
mov
pop
ret
sub
out
mov
cmp
xor
sbb
mov
test
add
jp
je
sbb
mov
add
sbb
push
pushl
ret
add
add
add
cld
dec
es
je
and
jmp
or
je
jmp
lea
sub
ret
or
fistps
roll
add
loopne
cmp
push
movl
add
or
push
sub
pop
add
mov
idiv
mov
add
dec
jne
pushl
add
xor
pop
lea
push
lea
adcb
in
or
ret
movsb
dec
cmp
pop
add
sti
sub
push
dec
push
jb
je
arpl
imul
add
lods
lea
movb
push
clc
mov
lock
sti
lahf
out
je
push
mov
add
test
jle
add
cmpb
mov
or
push
or
add
rcrl
adc
dec
sub
pushl
mov
adc
xchg
or
mov
test
pushf
lret
fcomip
jne
mov
xorl
add
pop
mov
mov
iret
andb
test
dec
push
cmp
loopne
adc
xchg
xchg
push
add
inc
adc
pop
jbe
out
jns
cmp
mov
sub
icebp
jmp
jmp
sub
add
cmp
mov
dec
and
test
jne
add
mov
mov
dec
and
jne
cmpb
pop
hlt
push
inc
ret
test
cmp
jne
or
and
popa
lcall
out
sbb
call
jne
sub
add
mov
leave
mov
cs
sarb
rcl
mov
je
mov
inc
jle
inc
push
jecxz
into
insb
movsl
add
aam
inc
dec
notb
mov
cmp
sub
push
mov
and
mov
cli
sub
stos
and
push
mov
cmp
jns
loope
sbb
add
xchg
hlt
mov
fildll
mov
push
mov
cltd
cs
cmp
or
cld
xor
jo
xchg
cld
xor
xchg
or
mov
mov
cmp
mov
or
xor
popf
lcall
and
cli
pop
push
inc
call
and
pop
mov
sub
sbb
add
mov
adc
mov
movsl
or
in
jo
call
mov
add
pop
push
push
mov
loopne
loope
mov
add
jnp
pusha
cmp
scas
pop
jmp
mov
cmp
or
adc
pop
xchg
jbe
test
mov
xchg
out
adc
into
or
cmpl
popl
add
cmp
push
pop
mov
jb
push
lock
and
jns
pop
push
cmp
inc
add
push
sarb
xor
and
fwait
call
add
inc
daa
sub
add
aad
loop
aam
shrl
sbb
clc
push
dec
je
or
rcrl
ret
incb
or
jg
pusha
fiaddl
mov
push
add
pusha
imul
pusha
sbb
push
test
jns
fwait
and
and
pop
mov
lret
addl
jp
call
cld
or
adc
push
mov
ss
test
hlt
add
hlt
pop
loope
inc
in
pop
in
pop
imul
and
and
push
leave
dec
scas
adc
pop
lret
mov
add
lcall
hlt
clc
rol
test
mov
lods
rorb
sti
and
sbb
or
shlb
stc
std
mov
hlt
xorb
mov
mov
add
nop
mov
hlt
sub
loopne
nop
dec
cmpl
pushf
mov
ret
add
inc
mov
push
mov
test
sub
mov
gs
inc
imul
cli
clc
push
dec
push
or
lock
mov
cltd
or
stos
adc
dec
inc
hlt
fnstcw
data16
push
sbb
or
pop
fldcw
fistpll
insl
decb
push
jg
mov
cltd
inc
shl
jnp
gs
adc
sbb
sub
lock
mov
push
mov
xor
mov
inc
mov
xchg
mov
sti
xor
loop
pop
cltd
pop
or
and
hlt
fldlg2
cld
push
jno
pop
mov
pop
jb
stc
add
insb
mov
mov
push
addr16
je
sbb
stos
add
or
repz
pop
insl
leave
lock
fildl
fstpt
loopne
inc
loopne
fsubs
insb
mov
fsubr
and
insb
inc
pop
adc
jo
aam
stos
or
aam
jecxz
nop
mov
mov
adc
sub
or
shlb
adc
add
adc
stos
lods
rcrb
mov
mov
and
loop
popl
mov
add
into
nop
jmp
xorl
sbb
enter
sub
lea
dec
dec
jb
les
inc
in
pop
ud0
dec
ja
mov
xor
rorb
pop
dec
rclb
mov
adc
shll
adc
out
inc
pop
mov
lock
lock
fcompl
cmp
fisubrl
or
arpl
jl
or
and
lcall
sbb
lahf
dec
sti
sbb
inc
xchg
lret
pop
dec
xchg
inc
cmp
pop
add
xor
xchg
xchg
push
or
lock
aam
mov
pusha
adc
shlb
or
sub
fmull
jg
cmc
lock
int3
xchg
xor
loopne
lcall
inc
and
xor
add
mov
lods
xchg
xchg
inc
xchg
faddl
inc
pop
fildll
add
dec
or
or
aaa
xor
pop
out
test
ret
dec
push
mov
dec
cmp
mov
loopne
je
dec
es
dec
hlt
mov
pop
mov
inc
fsubrs
adcb
mov
fmull
test
xchg
daa
xor
jmp
mov
and
in
in
jmp
pushf
mov
daa
je
call
push
cmp
fsubrl
xor
mov
rcrl
mov
rep
or
ficoml
rorl
add
decl
dec
frstor
jns
test
call
push
push
mov
push
loop
cmp
enter
xor
sti
dec
or
push
pop
pop
cmp
jl
out
das
jle
add
fmuls
add
pop
add
and
fdivrl
push
inc
sbb
adc
imul
xorl
mov
mov
aam
adc
test
inc
nopl
test
add
aad
push
test
fcmove
in
icebp
jmp
pop
push
mov
adc
rorl
push
adc
mov
call
or
pusha
inc
sbb
syscall
adc
je
xor
adc
mov
mov
xchg
pusha
add
cmp
xchg
in
aas
loopne
test
xchg
ds
dec
pop
adc
leave
sub
addb
push
test
fs
mov
lods
push
mov
add
sbb
cmpsl
or
adc
pop
adc
inc
jb
and
nop
add
sbb
mov
sub
sbb
in
push
cs
sbb
pop
mov
cmp
pop
mov
gs
pushf
adc
test
popa
and
or
push
cmp
jnp
mov
or
cli
mov
fs
mov
or
mov
test
xor
hlt
inc
add
imul
or
push
cwtl
jge
or
daa
mov
cwtl
jo
mov
or
in
adc
in
addl
ds
sub
es
sbb
push
push
sub
out
xchg
nop
fwait
rcll
and
test
push
push
ret
adc
push
pop
decb
jne
div
mov
loopne
cmpsl
movsl
or
xor
jmp
addl
mov
pop
sub
dec
rcr
and
xor
cmp
enter
xor
pop
sbb
cmp
fisubs
mov
xor
mov
or
xor
call
add
loop
loopne
rorl
loop
clc
lcall
mov
imul
mov
push
or
addr16
dec
add
cmc
inc
lock
mov
jge
movl
lock
roll
sti
je
repz
push
push
mul
ljmp
dec
lcall
in
movsb
push
push
mov
insl
mov
out
lods
push
ss
ficompl
fadds
lret
push
in
cmpsb
add
sti
pop
pop
stos
pop
pop
loop
adc
aad
dec
and
sub
xor
pop
sbb
adc
add
mov
cld
in
clc
sub
xlat
ljmp
rolb
call
fsubl
or
sbb
fcomp
pop
nop
dec
scas
fcomp
orb
insl
fsub
push
and
sti
movsb
loopne
push
repz
test
mov
adc
fsub
xchg
fsub
adc
mov
cmp
jbe
push
mov
nop
or
push
popa
and
xor
std
adc
dec
push
lock
and
mov
or
xchg
xor
add
xchg
es
push
jg
or
sarl
add
rorl
sbb
or
mov
clc
movsb
inc
aam
push
cmp
or
mov
dec
test
push
fildl
mov
out
push
mov
popa
and
stos
push
fisttpl
add
pop
push
pop
inc
adc
sub
fdivs
adc
add
mov
mov
or
or
dec
loope
fidivrl
sbb
jge
sub
push
call
sbb
unpcklps
js
xor
adc
or
push
xchg
and
add
rep
mov
shlb
fmuls
ret
cld
or
daa
hlt
fs
hlt
cmp
lret
cmpsb
imul
adc
and
in
or
sbb
rcrl
cmp
xor
dec
mov
push
out
push
test
or
adc
pop
std
mov
and
inc
in
faddl
and
or
or
add
xchg
das
xor
dec
clc
mov
les
aad
enter
or
adc
stos
les
fildl
dec
xchg
loopne
inc
adc
or
or
mov
push
inc
pop
xchg
push
dec
jge
push
in
daa
fmul
and
mov
xor
in
hlt
jne
aas
clc
ja
cmp
punpcklbw
jl
das
and
out
pop
cmp
or
cmpl
popa
popl
mov
mov
scas
inc
rclb
sti
cwtl
andl
test
ljmp
imulb
aas
xchg
fildl
inc
push
in
mov
push
inc
push
adc
pop
mov
fdivr
faddl
mov
mov
jo
sbb
in
and
xor
shll
repnz
nop
and
inc
push
pop
mov
inc
or
push
mov
mov
push
dec
sysret
inc
bound
lcall
loopne
adc
add
pushf
stos
or
out
xor
xor
add
push
aam
dec
dec
jae
int3
add
shrb
daa
push
rcrb
mov
aaa
daa
mov
push
xor
movsb
movsb
or
loope
xor
mov
lods
shll
pop
xchg
adc
mov
inc
mov
dec
test
test
push
in
mov
popf
insb
and
cmp
fnstsw
test
je
fchs
fcompl
mov
andl
sub
adc
stos
push
outsl
cmp
adc
add
ret
jl
out
adc
xchg
xchg
pop
jo
subb
jo
test
sbb
cld
push
sub
cmpsb
push
push
stos
rorb
xor
pop
pop
jne
rolb
clc
aad
sti
imul
nop
xlat
popa
mov
add
cmpsl
cmc
xor
shlb
sub
daa
pop
adc
jne
xor
xor
hlt
insl
xchg
in
jl
jne
jmp
pop
int3
adc
inc
inc
cmc
bound
test
or
sbb
fidivs
sbb
and
test
rorb
icebp
mov
push
mov
mov
cltd
test
stc
fcoms
xor
dec
sti
jmp
push
pusha
movsb
aas
inc
arpl
lock
arpl
enter
nop
and
shll
in
adc
add
and
jno
mov
es
lahf
sub
sbb
fadd
mov
cmc
mov
adcl
jne
push
adc
outsl
push
inc
mov
and
fwait
jne
jl
sub
out
je
cmp
add
loopne
or
mov
mov
xor
mov
xor
nop
and
nop
push
clc
std
jo
or
and
pushf
loopne
pop
aas
pop
stc
and
loopne
push
test
xchg
and
rcl
push
adc
adc
insb
add
std
xchg
or
mov
jecxz
inc
cwtl
xchg
push
push
jb
arpl
jg
push
and
das
sub
push
sbb
xor
push
loope
mov
pop
inc
rcrb
ja
cmp
and
xchg
pusha
stos
inc
or
hlt
add
dec
ret
push
adc
lock
and
dec
ljmp
lret
and
push
rclb
pop
inc
add
rdmsr
add
out
xor
stos
add
xor
in
movl
or
cmp
and
imul
popa
mov
rorl
and
mov
push
movsb
xor
sar
add
and
mov
inc
mov
xchg
xchg
mov
mov
out
hlt
dec
mov
dec
cltd
mov
sbb
lods
filds
sub
cmpl
leave
mov
inc
bound
push
push
inc
iret
and
repnz
imul
out
shr
hlt
popa
xor
sub
xor
dec
dec
and
adc
or
outsl
and
xchg
adc
add
int3
and
jo
xor
mov
enter
fildl
jo
adc
mov
or
pop
mov
dec
adc
sub
fmuls
and
shlb
icebp
jg
sbb
rolb
jge
add
sbb
and
or
adc
testb
cmp
mov
mov
add
or
addb
lds
in
dec
lods
xor
adc
xchg
mov
rol
push
insb
shll
cmp
add
sbb
bound
sub
stos
sbb
ret
jmp
push
pop
mov
add
ret
xor
ret
scas
test
push
adc
scas
lea
mov
pusha
imul
sbb
aam
push
repz
jmp
lock
mov
inc
jb
enter
xchg
fdivl
out
xchg
ss
jnp
in
popa
or
mov
sub
jo
les
and
and
int3
mov
push
popf
mov
sti
les
movsl
icebp
and
jecxz
dec
lock
sbb
pushf
stos
subb
or
pushf
popa
aaa
sahf
es
nop
std
or
push
and
add
call
lea
cli
daa
in
and
pusha
sbbb
and
and
and
lcall
and
and
les
cmp
int
xor
mov
outsl
pop
push
jle
lret
adc
xchg
push
call
fadds
mov
nop
add
sub
pop
sbb
lock
or
leave
mov
ss
fstpt
and
imul
lods
lods
data16
sub
mov
mov
addb
jno
ds
pop
pop
inc
test
dec
push
or
dec
mov
shll
movsb
cmp
adc
dec
enter
mov
add
stc
mov
sbb
movsl
sbb
or
push
mov
inc
les
out
shlb
fmull
adc
or
xchg
or
xchg
pushf
in
mov
mov
call
mov
fs
and
arpl
shlb
adc
es
int3
aam
jecxz
dec
cmpsb
loopne
enter
mov
aad
adc
mov
add
adc
pop
and
jae
sub
sbb
add
bound
ss
test
push
mov
and
popa
inc
cmp
lock
inc
jb
adc
hlt
lock
push
pusha
and
push
sbb
sub
nop
add
xchg
and
and
sub
leave
adc
pop
sub
xor
xchg
dec
cmp
add
inc
adc
dec
enter
mov
dec
and
inc
push
add
pop
and
add
jl
pop
pop
enter
cmc
add
leave
adc
insb
outsb
or
xor
lea
packuswb
fwait
pop
arpl
cld
je
or
or
or
xchg
rorb
push
pop
sub
das
mov
pusha
popa
sub
cltd
out
adc
adc
movsb
rorl
jnp
pop
or
and
xabort
cld
js
xor
leave
mov
mov
icebp
push
das
inc
out
loopne
mov
push
cmp
adc
xchg
sub
cld
mov
adc
in
popl
xor
dec
mov
inc
jo
sub
push
pop
in
ret
fsave
aam
adc
jb
or
add
adc
and
add
cmc
mov
fisubrs
cltd
cld
pop
jne
inc
es
ret
xor
inc
or
je
aas
fildl
fstpl
fisttpll
push
xor
mov
pop
inc
push
in
bound
xor
inc
pushf
and
sbbl
inc
in
cld
and
add
lock
mov
xchg
mov
inc
add
pop
cmp
mov
jmp
sbb
or
jge
add
je
push
add
out
scas
adc
adc
adc
fisttpl
ds
mov
cmovnp
sbbb
imul
adc
xor
fcoml
pop
sub
jne
inc
ja
in
pop
push
fdivrs
push
insb
ja
orl
mov
push
jmp
nop
or
adc
xor
pop
add
nop
push
jg
mov
cmp
decl
mov
cmp
add
inc
jg
pop
lock
subl
test
xchg
adc
sbb
cmp
ret
push
xor
cmp
in
sbb
lret
insl
adc
es
and
inc
nop
stos
xlat
aaa
cli
fwait
and
cs
jmp
push
push
shl
add
ljmp
aam
push
jl
mov
andl
in
jg
mov
inc
outsl
jo
dec
dec
sbb
sub
push
and
pop
push
or
pusha
and
movsb
mov
sbb
lds
cmp
sub
add
mov
xor
loope
ret
pop
ljmp
rorb
inc
add
sub
clc
add
and
sub
or
bound
pop
push
mov
mov
adc
push
inc
rcrb
fistpl
inc
cmp
test
pop
pop
pop
add
xor
and
movsl
push
ret
fistpl
or
lea
inc
sub
aaa
inc
bound
xchg
push
clc
roll
in
jne
in
fs
clc
sbbb
push
leave
clc
jne
xor
add
jl
push
andl
or
iret
mov
jecxz
in
pop
add
cmp
bound
and
add
popa
test
hlt
test
clc
adc
cmp
adc
cmpsl
push
outsl
hlt
out
rcrl
test
addb
fmuls
and
add
or
jecxz
or
adc
jno
add
pop
adc
push
sbb
stos
imul
sub
clc
add
xor
cmp
push
or
inc
sub
and
bound
mov
push
sub
xor
stos
or
mov
popa
or
or
add
adc
js
or
xchg
jbe
xor
rcll
and
rcrb
mov
xor
jae
in
sub
iret
lods
cmp
and
subl
sub
add
fs
stos
inc
ljmp
lret
or
sub
sbb
mov
adc
fildll
push
dec
mov
or
pop
in
push
call
lds
and
cs
or
dec
fsubrl
and
lods
pop
sbb
icebp
mov
mov
inc
out
cs
loopne
mov
in
in
push
call
test
sbb
inc
jo
pop
imul
add
adc
inc
and
das
jnp
inc
push
or
out
shrb
clc
xlat
jns
jne
insb
dec
push
or
push
leave
jns
mov
pop
push
xor
js
add
ljmp
jae
in
call
enter
lock
cmp
insb
or
mov
adc
stos
leave
or
sub
add
push
xchg
test
sub
add
xchg
xchg
pop
adc
push
inc
add
inc
in
inc
repnz
push
mov
inc
jo
inc
push
xchg
mov
cwtl
xchg
mov
pop
pop
or
jno
pop
jge
add
dec
sbb
mov
and
jmp
push
inc
in
les
and
lock
add
loop
inc
outsl
clc
nop
daa
cwtl
lea
clc
mov
mov
cmp
loope
out
ret
lods
jg
leave
push
xor
lea
push
add
fsubrl
shlb
xor
pop
sbb
aaa
mov
push
loopne
inc
add
pop
imul
je
loop
fidivl
fmuls
fnstenv
jo
mov
out
xchg
inc
mov
scas
mov
xchg
hlt
or
adc
inc
cmp
rolb
es
movsl
xor
js
inc
push
pop
hlt
test
lret
orb
jne
mov
or
daa
add
test
inc
sub
movups
or
hlt
ljmp
and
jne
ficomps
jp
push
pushf
add
mov
add
inc
lock
inc
loopne
xchg
lcall
push
in
in
test
adc
ja
adc
xorb
add
inc
into
ds
dec
cmpsb
add
and
loopne
vmread
push
inc
cld
push
je
mov
repnz
xchg
andb
fstpt
sbb
sbb
test
add
inc
inc
or
jbe
lods
mov
enter
jmp
inc
movsl
jns
loope
addb
adc
sub
cmp
outsl
loopne
mov
pop
ret
sbb
and
add
push
repnz
or
add
or
add
add
add
fadds
sbb
add
xor
pop
cmp
movsb
jo
add
add
jno
sbb
gs
and
mov
test
lea
inc
out
mov
push
insl
cltd
adc
pop
push
pop
das
mov
cmp
jl
jge
test
leave
inc
xor
or
rcll
inc
addl
into
push
add
call
movsl
imul
pop
call
imul
add
xor
mov
xor
or
or
and
insl
add
xor
test
dec
cmpsl
movsb
push
je
sbb
jmp
aam
jge
mov
mov
sbb
fs
or
cli
push
pop
aam
fcomip
add
sti
adc
add
je
or
outsl
mov
push
clc
test
cmp
pop
lods
rorl
xor
pop
add
mov
xlat
lods
sbb
adc
test
add
pop
adc
into
mov
xchg
call
inc
or
leave
adc
mov
add
test
inc
or
sub
sub
add
in
adc
or
add
jae
add
pop
aam
clc
xchg
shl
stos
cmpl
nop
cltd
movsb
out
mov
adc
inc
test
cs
sub
add
dec
subl
push
mov
or
cmp
add
lods
add
inc
in
dec
inc
or
in
test
jle
repz
add
push
cmp
mov
push
or
dec
push
or
cld
dec
sahf
adc
sub
push
xchg
cld
hlt
push
and
inc
and
insl
jo
cld
jns
xor
adc
incl
es
jp
push
or
push
pushl
jne
xchg
mov
cltd
pop
or
jle
inc
nop
lock
sub
lock
push
lods
outsl
or
mov
inc
mov
icebp
rcr
in
imul
fbstp
or
add
jge
flds
and
and
xchg
pop
cs
loopne
and
dec
sub
add
or
push
dec
lock
fcomp
push
xchg
lock
loope
xchg
stos
push
or
push
pop
push
add
push
rorl
aad
pop
push
push
lea
int3
mov
pop
test
add
rep
pushf
ficoml
out
clc
xor
cmp
adc
dec
adc
xchg
lock
shlb
cmpsb
imul
lea
hlt
sub
lds
enter
xor
fldenv
pop
push
cmpb
mov
push
jmp
push
cmp
pop
adc
inc
addl
mov
popa
pop
loopne
stos
push
pusha
xor
xor
idivb
dec
or
jmp
andl
aaa
arpl
push
xchg
gs
lahf
and
jbe
fsubr
fcoms
pusha
leave
mov
outsl
mov
aam
or
pop
sbb
in
xor
add
mov
sub
or
pop
add
popf
push
cmpsb
push
cwtl
in
orl
dec
push
add
sbb
add
add
shlb
or
xchg
out
aad
jne
dec
icebp
cltd
in
sub
or
fwait
mov
cld
sbb
sbb
xor
add
test
loope
fwait
mov
dec
dec
addr16
mov
dec
dec
pop
push
dec
aaa
inc
add
dec
xchg
mov
scas
xchg
icebp
lock
pushf
sub
hlt
xor
lea
in
mov
or
xchg
and
in
test
pop
or
pop
ljmp
mov
test
fdivrl
dec
push
xchg
add
and
jmp
sub
nop
sub
xor
jne
cmpsl
test
push
inc
pop
xor
and
aad
xchg
adc
lret
dec
int3
sbb
and
jmp
pop
rclb
adcl
cmpsl
lds
pop
push
adcl
ds
xchg
add
sbb
adc
sub
or
xchg
loope
shlb
loope
dec
and
mov
ret
add
inc
and
ret
or
mov
ds
and
or
rolb
adc
jnp
jne
jno
popf
pop
or
int
lahf
adc
add
inc
call
pop
and
push
push
int
lret
lock
enter
in
push
add
adc
sub
pop
jl
xchg
stos
and
or
add
add
push
sub
cmp
pop
fcompl
xchg
mov
xor
sub
std
enter
push
or
stos
add
sub
in
loopne
jle
and
push
push
imul
movsb
sub
aam
jo
ss
and
pop
rclb
mov
int3
or
xchg
int3
push
and
mov
sbb
dec
test
addl
nop
push
int3
in
rolb
sub
xchg
and
inc
or
add
sub
sbb
mov
xchg
outsb
and
test
dec
and
cwtl
or
addr16
sub
push
adc
push
addb
or
dec
sbb
cmp
add
adc
and
call
sub
pushf
fstpl
lcall
adc
xchg
sbb
mov
xchg
test
add
and
fwait
int3
rcl
inc
inc
dec
clc
in
es
mov
push
ret
xor
popa
adc
insl
push
or
insl
insl
test
or
cmc
pop
or
loopne
cmp
fsubrs
push
adc
mov
add
pop
sub
xor
clc
jle
mov
xor
cmc
ljmp
notl
ret
lret
dec
sub
mov
and
fldl
ss
add
xor
mov
addb
and
call
pushl
mov
sbb
or
test
or
mov
sub
ja
sub
lcall
add
les
aas
xchg
roll
add
push
add
cmpsb
push
jo
aam
sbb
mov
sbb
add
push
or
or
sbb
jmp
sbb
repz
insl
and
addl
or
xchg
pushf
in
in
fdivrl
aam
call
lea
mov
mov
stc
pop
cmp
sub
mov
popa
ret
fsubr
popf
and
jno
pop
dec
jecxz
adc
push
fiadds
or
push
arpl
or
js
les
xchg
fld
adc
xor
repz
jge
outsb
add
sbb
enter
out
shlb
adc
stc
or
sbb
mov
hlt
loopne
push
add
insb
pop
mov
in
fadds
cmp
jg
in
and
xchg
mov
shll
sahf
sti
or
mov
hlt
pop
push
popf
loopne
xchg
cmp
sar
add
roll
fstps
mov
pop
ret
mov
push
lock
adc
clc
insb
add
sbb
and
nop
jmp
push
push
std
fdivl
jmp
dec
shll
or
aam
out
inc
insb
ror
movsb
add
and
popa
mov
push
in
jno
les
adc
ss
xchg
mov
dec
cmp
popa
lahf
jp
andb
mov
fcmovbe
sub
dec
shlb
andb
xchg
sahf
xchg
fsubs
push
cwtl
movsl
addr16
es
jne
or
fdivrs
sub
adc
adc
scas
push
loopne
clc
jns
and
add
in
xchg
xchg
mov
inc
arpl
addr16
scas
and
arpl
ljmp
jne
leave
test
or
push
xchg
mov
test
aaa
lds
add
push
cmp
sub
and
pop
pop
stc
movsb
jl
adc
pop
pop
adc
jno
lea
jg
push
or
add
or
or
xchg
cmp
or
mov
mov
xchg
mov
sbb
add
sbb
adc
add
adc
mov
test
and
nop
mov
sbb
push
push
leave
and
iret
icebp
mov
daa
or
loope
pop
xlat
loopne
adc
lock
dec
add
in
or
fists
rol
aam
sbb
mov
roll
sbb
or
adc
ret
movsb
xor
test
popa
arpl
test
fyl2x
add
sub
stc
or
lods
or
xchg
xor
or
call
add
sub
inc
add
pop
inc
push
add
or
add
inc
adc
jmp
test
iret
add
jb
inc
add
adc
push
or
fs
bound
or
dec
push
leave
mov
push
add
or
inc
cmp
jo
daa
pop
and
push
xchg
xor
xlat
fisttpl
add
add
frstor
sub
cltd
test
loop
pop
xchg
sti
xchg
inc
add
sbb
sbb
mov
xchg
and
xchg
or
mov
hlt
add
cwtl
xor
or
movsb
and
xor
xchg
addl
pop
jns
dec
push
adc
rolb
test
es
dec
fimull
cmp
pop
lods
or
pop
inc
call
adc
daa
mov
add
sub
sub
in
ret
or
adc
roll
les
pop
xchg
jo
push
mov
jne
test
push
add
add
dec
adc
dec
repz
lods
dec
loop
inc
das
test
xchg
mov
add
aas
add
test
nop
and
sbb
daa
fsubr
adc
sbb
div
or
cltd
shrb
adc
jmp
mov
cmp
lods
daa
loop
in
in
jecxz
movsb
add
adc
push
xor
mov
scas
pop
sbb
dec
ja
bound
xchg
adc
cmp
cwtl
mov
mov
adc
inc
pusha
sub
cwtl
or
push
fwait
cmp
add
shrb
mov
sbbl
jne
sbb
pop
pop
add
add
mov
icebp
or
pop
mov
add
xlat
sub
xchg
in
xchg
push
dec
out
add
rorl
fs
enter
lea
pop
leave
adc
jb
enter
pop
add
push
sbbb
adc
add
sub
jb
jb
xor
mov
xor
inc
xchg
xor
loope
test
aam
in
sbb
imul
dec
sahf
add
pop
lock
in
adc
push
dec
add
outsl
mov
and
or
xor
or
mov
mov
dec
orl
fidivs
and
in
ret
ss
inc
mov
rcr
gs
xchg
adc
or
xor
outsb
add
les
push
adc
dec
push
inc
or
inc
add
jb
pop
loopne
mov
jno
push
loopne
cld
add
test
cwtl
inc
sub
push
and
jo
jne
es
or
xor
daa
hlt
call
in
or
and
enter
cmp
and
test
fdivs
mov
add
inc
repnz
scas
mov
push
imul
and
aas
lock
roll
lock
cmp
sub
add
cmp
rcrb
fnstcw
hlt
flds
mov
push
inc
fbld
sbb
lods
lds
test
rcr
add
cmpsb
jmp
dec
callw
dec
inc
push
rcrl
shlb
add
stos
add
sbbl
push
jg
inc
mov
xchg
mov
pusha
sub
mov
xchg
sbb
and
sub
nop
add
adc
jg
mov
test
mov
pop
push
call
mov
icebp
mov
inc
int3
int3
jns
ret
cli
adc
dec
pop
cs
dec
cmpsl
mov
rclb
xchg
stos
testl
add
lret
dec
dec
sbb
and
leave
adc
es
xchg
xor
adc
xchg
shll
or
pop
int3
fildl
and
popf
jo
movsl
fsubl
repnz
lea
movb
inc
mov
test
mov
inc
sarl
int
push
lods
mov
enter
mov
xchg
push
jb
enter
cmp
push
out
in
xchg
icebp
mov
or
sbb
jb
jb
mov
arpl
imul
pop
mov
loop
sbb
push
test
pop
and
les
fdivl
mov
sbbb
fmuls
xor
stos
mov
int3
aaa
int3
and
xchg
xchg
push
push
shrb
and
and
and
aaa
or
add
jno
pop
xchg
test
adc
xlat
adc
add
add
push
gs
mov
sub
and
cltd
push
dec
push
pop
add
cwtl
test
xchg
xor
icebp
and
push
sarb
je
cmp
fistl
in
int
add
cld
xor
pop
adc
inc
mov
repnz
fistpll
sbb
dec
imul
mov
insl
lock
inc
test
mov
mov
pushf
adc
int
xor
sub
cmp
add
and
dec
arpl
inc
push
adc
iret
dec
push
add
xchg
add
xchg
dec
dec
adc
mov
cld
xor
xor
mov
lcall
call
jbe
or
inc
lods
and
dec
dec
jmp
mov
xor
cmp
sbb
pop
and
sbb
int3
pop
pop
xchg
andb
inc
sbb
fcomps
shrl
lret
enter
mov
push
mov
data16
shr
push
and
or
pop
shlb
mov
mov
shrb
mov
add
pop
add
inc
jmp
jne
and
outsb
inc
mov
aam
xor
test
clc
or
push
jl
sbb
xor
cwtl
push
sbb
stos
adc
mov
add
roll
push
push
lock
sbb
lods
mov
rorl
cwtl
mov
mov
mov
lock
outsl
insb
xlat
fisttps
or
fisubrs
push
nop
fiadds
shl
sti
pop
nop
or
mov
test
sub
dec
push
hlt
cmpsb
loopne
and
xchg
mov
orb
cs
aas
nop
sbb
jb
dec
add
pop
dec
pop
sbbb
pop
test
jb
popa
dec
add
dec
or
in
sub
lods
or
test
add
call
ret
push
dec
push
ljmp
pop
lds
adc
subl
adc
adc
clc
mov
arpl
pop
pop
inc
sub
aam
xchg
push
dec
adc
mov
push
xchg
or
push
and
out
call
movsl
dec
push
call
jb
mov
mov
and
pusha
mov
cwtl
test
sub
push
adc
adc
mov
movsb
shl
stos
xchg
test
pop
mov
decl
insb
push
rcl
fstl
pop
inc
push
inc
pop
sub
pop
popf
xor
push
xor
mov
mov
fsubs
adc
aas
les
inc
mov
gs
popa
mov
sub
outsb
add
nop
incb
or
add
mov
push
out
in
fwait
loopne
dec
test
mov
push
push
pop
dec
xchg
sbb
lea
in
shl
test
sbb
int3
ret
movsb
or
enter
nop
shrb
les
bound
aas
xorl
inc
rcrl
mov
in
loopne
and
movsb
in
adc
adc
test
mov
xchg
stos
add
push
ror
fs
xchg
xchg
in
pop
leave
adc
lret
nop
adc
add
mov
inc
add
and
fs
push
ljmp
mov
sahf
inc
andb
lcall
or
and
in
andb
enter
mov
clc
and
xor
mov
sub
imul
mov
call
and
movsl
jecxz
cmp
sbb
or
or
add
lock
jecxz
imull
gs
jae
mov
add
icebp
push
and
ret
jg
sbb
push
or
sub
popl
and
xchg
sbb
stos
roll
aam
mov
out
push
sarb
push
xlat
ret
adc
sbb
inc
adc
sbb
add
inc
xchg
shrb
cltd
test
xchg
stos
push
and
pop
shlb
mov
sub
mov
call
call
mov
rcrb
in
sbb
int3
addb
fdivrl
out
daa
ljmp
push
cmp
and
add
mov
xchg
pushf
cmpsl
loopne
ret
in
loopne
in
test
sti
std
aam
add
and
mov
arpl
test
jne
in
loope
outsb
or
lcall
inc
sbb
jae
dec
inc
leave
inc
in
aaa
mov
std
cmpb
je
mov
rorl
or
pop
dec
xor
inc
mov
cwtl
xor
jne
stc
add
mov
lock
sub
sahf
inc
or
movsb
add
push
xchg
loopne
xchg
addb
inc
stos
or
mov
fdiv
fwait
add
adcb
mov
inc
push
lock
pop
pop
dec
push
bound
cli
xchg
xlat
sub
push
pop
ret
jmp
cmc
add
shrl
loop
sbb
mov
pop
sub
and
sub
add
in
sub
push
sbb
mov
push
test
inc
sub
push
call
add
test
sub
addr16
repnz
mov
imul
and
bound
mov
or
push
inc
scas
add
inc
in
push
sbb
mov
mov
sub
add
mov
dec
repz
jecxz
add
adcb
negl
rorb
adc
add
mov
push
loopne
inc
scas
fs
fmull
lock
movsb
or
xrelease
rorb
push
add
es
rolb
and
shl
outsb
or
and
loopne
mov
lods
add
or
sub
dec
daa
add
inc
es
fcomp
adc
sub
and
add
movsl
inc
add
and
push
mov
xor
sbb
xchg
mov
sti
push
add
or
ficoml
mov
andl
pop
call
loopne
push
adcb
rcl
stos
sar
pop
push
and
sbbb
xor
or
mov
pop
jg
and
adc
inc
bound
and
mov
xchg
sbb
mov
mov
mov
ret
mov
lea
or
imul
shlb
or
jle
mov
mov
inc
sti
stc
jns
sbb
cltd
repz
or
and
or
loopne
into
in
insb
adc
dec
or
sub
cwtl
fildl
mov
fisttpl
mov
rolb
je
xor
cltd
loop
data16
mov
ret
push
fldcw
mov
inc
inc
push
imul
les
in
cmp
repnz
sub
cmp
stos
fsubrs
add
and
sbb
mov
mov
mov
adc
mov
mov
mov
fsubl
fs
or
inc
cmp
or
cmp
stc
mov
lcall
adcb
fcomps
test
insl
rclb
nop
cmp
lock
xlat
mov
mov
nop
mov
mov
mov
mov
fmull
nop
outsl
nop
cmpsb
sub
dec
test
test
sbb
js
adc
pop
mov
dec
sbb
pop
jg
repz
cld
push
jo
inc
sub
or
fmulp
movsl
mov
stos
or
or
push
leave
inc
leave
add
pop
dec
xchg
mov
fldl
pop
mov
or
dec
xor
inc
leave
adc
testl
add
das
es
cmpsb
mov
or
std
mov
xor
add
xchg
jmp
and
xlat
xor
or
add
or
inc
inc
sub
add
xor
xchg
inc
and
xor
paddq
or
adc
sub
dec
pushf
test
lds
fnsave
lcall
push
xchg
test
sub
xchg
stos
test
inc
repnz
add
xor
and
add
add
jb
or
imul
incl
jmp
mov
sub
mov
sbb
test
fucomp
and
addr16
movsb
outsb
xlat
in
sub
nop
pushf
push
add
rolb
setl
dec
cli
adc
leave
test
in
imul
or
repz
sub
or
movsl
dec
and
push
or
test
add
pop
ret
and
addl
icebp
sub
sub
fcoml
mov
mov
jo
adc
or
sub
in
andl
sbb
mov
stc
add
aas
sub
sbb
movsl
sub
mov
mov
inc
pop
or
cmp
inc
adc
mov
in
in
in
popa
pusha
cmp
jne
cmc
insl
test
stos
jb
inc
pusha
std
imul
sahf
les
enter
or
mov
and
add
mov
repnz
test
loope
push
or
adc
push
push
sub
push
test
sub
inc
or
pextrw
or
pop
lahf
push
mov
add
addb
inc
add
cwtl
int
sbb
mov
xorl
jnp
shll
pushf
test
xlat
inc
fsubrl
inc
pushf
jns
xor
or
push
or
xor
mov
push
loope
push
sub
cltd
dec
mov
movsb
push
or
xchg
into
sbb
sub
test
jle
outsb
ljmp
and
jge
dec
lret
loopne
xchg
inc
sub
sbb
add
leave
pop
jp
add
inc
ret
nop
call
mov
int3
hlt
sbb
sbb
xor
xchg
imul
push
push
or
push
jb
and
ret
popa
and
hlt
outsl
nop
push
and
gs
or
sub
sub
push
xor
rcrb
sarb
jns
mov
jno
rolb
es
adc
jo
inc
xchg
push
add
xorps
push
and
add
or
push
or
jb
fcomi
add
cmp
aas
pop
ret
mov
adcl
lcall
icebp
leave
lahf
add
sbb
pop
imul
mov
sbb
and
dec
push
push
mov
and
movsb
or
add
popa
inc
add
or
pop
and
xchg
js
xor
inc
loopne
pop
insb
adc
sub
data16
sub
mov
nop
movsb
stos
in
add
push
pop
or
inc
shrb
xchg
stos
mov
and
dec
and
movsb
lcall
or
shrl
rclb
cld
cld
mov
sub
test
dec
add
test
les
leave
add
cmp
xchg
mov
push
mov
xor
lea
in
insl
pop
xchg
mov
fmull
icebp
inc
adc
mov
xor
adc
adc
pop
xchg
sahf
cltd
adcb
adc
inc
mov
adc
test
add
ret
pop
pop
roll
movsl
ret
test
cltd
daa
int3
pop
mov
jecxz
and
pusha
xchg
mov
inc
in
daa
push
push
mov
rcll
mov
xlat
dec
dec
les
jecxz
pop
les
xor
stos
or
ljmp
inc
nop
sub
scas
loopne
aaa
mov
mov
mov
icebp
fdivl
and
xchg
add
pop
cmp
pop
in
sbb
and
loopne
push
and
inc
pop
pop
and
mov
inc
das
jge
and
lock
pushf
shlb
insl
repz
add
jge
inc
push
dec
loopne
int3
aad
mov
int3
lcall
push
dec
fsubrl
cmp
movsl
jb
sarb
sub
inc
pop
mov
jle
push
inc
scas
or
lret
dec
add
mull
clc
imull
cld
fninit
push
sub
sub
mov
in
or
cmp
loope
hlt
aam
cmp
push
pop
inc
stos
push
push
xor
and
ja
or
sub
adc
or
pop
sub
cld
pop
add
or
dec
popf
lret
in
adc
mov
or
inc
add
inc
add
or
cmpb
into
mov
movl
nop
ret
push
mov
or
adc
scas
mov
pop
not
sti
bswap
mov
ss
add
or
or
arpl
add
je
adc
xchg
fdivl
cmpsl
jne
jl
movl
lods
ret
xor
mov
sarb
add
inc
jmp
sub
shll
jns
mov
push
add
nop
add
pop
xchg
fs
ret
addr16
dec
inc
stos
out
mov
xchg
xchg
int
roll
add
outsb
mov
add
ret
or
rolb
sbb
jne
enter
sbb
inc
jne
pop
pop
fstpl
pop
repnz
pop
push
je
addb
or
jl
adc
cli
or
sub
es
ret
sub
xchg
sahf
or
mov
roll
dec
mov
add
sbb
or
pop
pop
mov
add
pop
xor
push
inc
pop
mov
addr16
xor
mov
push
mov
pop
je
repnz
inc
jno
cld
pop
sub
leave
or
mov
mov
pop
mov
sbb
fwait
mov
loopne
mov
mov
jnp
jne
out
push
out
cmp
testb
push
push
add
das
je
lods
dec
and
xchg
add
or
outsl
dec
inc
add
add
es
iret
pop
loope
in
out
btc
lahf
or
lock
or
test
ljmp
push
xor
xor
clc
sub
sub
jne
out
push
push
mov
xchg
hlt
lcall
mov
push
lea
fldl
fcompl
or
inc
push
xchg
mov
lea
frstor
lea
and
stos
pop
xor
pop
and
fdivs
frstor
add
dec
or
fstpl
sbb
add
inc
clc
js,pt
fldl
or
lret
or
push
sbb
pusha
xchg
nop
sbb
addr16
popf
sbb
mov
jle
sub
mov
add
mov
mov
push
dec
je
dec
jne
xor
jmp
or
add
or
mov
cmpsl
lcall
addr16
xor
ja
push
push
push
fisubl
mov
dec
imul
and
cld
push
aam
les
addr16
mov
out
add
jb
rolb
jo
inc
cmp
imul
in
jmp
xor
jl
or
jmp
lahf
add
add
xlat
mov
sti
push
jne
data16
inc
add
shlb
jmp
push
add
cwtl
jmp
sbb
jle
jae
adc
neg
sbb
andl
iret
sub
sub
xor
mov
add
scas
mov
sub
mov
or
shll
push
cs
adc
loopne
xchg
xchg
jnp
and
cmc
dec
xlat
fsubr
ret
ss
xor
push
call
push
push
inc
lods
inc
and
mov
push
sbb
adc
jo
mov
pop
push
dec
mov
mov
mov
add
push
xchg
mov
sbb
xchg
movl
or
xchg
push
pop
cld
out
pusha
jl
sub
push
mov
or
dec
ja
or
cmp
adc
jne
xchg
push
sbb
mov
or
aas
push
pop
mov
cmpl
add
add
xchg
and
clc
or
aas
aam
jne
or
pop
add
push
sub
insl
fchs
jo
push
movsb
jb
push
dec
or
push
insl
pop
sub
and
mov
sub
rorl
push
sti
ljmp
push
scas
sahf
pop
mov
jnp
insl
adc
icebp
movl
loope
int3
imulb
push
sbb
mov
push
aam
pop
loop
pop
push
fmuls
enter
inc
inc
or
rclb
imul
sbb
xor
call
std
ret
rorb
mov
in
jmp
sbb
and
cmp
mov
jl
mov
lock
jle
sbb
cltd
xor
sub
push
cmp
idivb
jnp
cltd
xor
sub
push
stos
lods
lock
cltd
idiv
stos
add
cld
add
pop
push
test
jg
imul
add
mov
xor
mov
cmp
enter
dec
sub
lods
inc
test
add
jg
mov
inc
mov
xor
or
pop
orl
fists
icebp
sub
add
lret
or
lahf
push
sahf
sub
add
inc
scas
call
cld
outsl
push
sbb
jge
push
jle
lea
cmp
jle
sub
leave
lods
addb
in
fwait
mov
cmp
adc
mov
mov
test
mov
adc
test
mov
je
or
mov
inc
cli
mov
into
jae
fistpl
repnz
movsbl
mov
pop
pushf
insb
adc
adc
cld
sub
pop
roll
and
es
jb
insl
jb
popa
jg
test
jnp
push
in
cmp
ffree
jb
and
fld
mov
push
scas
stos
les
adc
xor
jg
jae
jl
sbb
fisttpl
inc
ret
dec
and
pop
insl
lret
mov
mov
sbb
sub
jl
fstp
addb
sub
sbb
lock
mov
push
jg,pn
jp
cwtl
daa
or
or
stc
stc
mov
popa
repz
aam
mov
pop
sub
pop
mov
cmp
and
cmc
idivl
in
add
xor
push
push
out
call
outsb
mov
and
pop
pusha
cmp
mov
sub
inc
cli
push
jmp
mov
dec
pusha
push
into
repz
dec
inc
das
outsb
filds
inc
inc
or
sub
mov
shlb
xchg
pop
cld
sbb
sbb
sbb
nop
pop
mov
leave
and
ds
dec
leave
add
push
mov
mov
and
jmp
insl
sub
fdivl
push
int3
mov
cmp
push
xor
and
lret
scas
nop
clc
fstl
movsb
push
inc
popa
insb
fadds
push
sbb
pop
xchg
push
inc
test
test
jge
stc
popa
jb
or
pop
sub
mov
or
rcr
mov
dec
add
jnp
push
inc
adc
jmp
cmpsb
sahf
dec
jnp
je
sahf
inc
pop
shll
xor
cmp
adc
nop
or
js
push
data16
imul
push
push
ss
pop
lds
sbb
inc
sbb
int
inc
jge
xlat
jo
add
push
pop
push
test
movl
gs
push
jb
adc
add
sub
pop
and
inc
addb
mov
jle
arpl
arpl
xchg
cmp
jecxz
push
xchg
inc
test
mov
push
jb
sti
nop
out
xor
sbb
mov
hlt
ja
gs
popf
mov
mov
push
jmp
fcmovb
jge
push
pop
mov
daa
bound
push
add
sbb
mov
dec
into
ffree
inc
inc
push
adc
lods
les
nop
subb
pusha
and
cwtl
dec
int3
pusha
cmp
addl
rcrb
sbb
mov
outsb
movzbw
arpl
out
arpl
push
sbb
ficomps
sbb
inc
je
push
cmp
or
adc
xor
lods
aaa
shll
xchg
out
dec
dec
fstl
sbb
xchg
pushf
sbb
or
packssdw
arpl
xor
fs
xor
movswl
jne
cmp
inc
cmp
sbb
jo
dec
dec
dec
sbb
andl
fistl
pop
cwtl
xchg
push
aas
push
sbb
push
lret
jecxz
mov
cmp
jecxz
push
mov
mov
stc
insb
leave
add
lea
and
and
je
cmp
jne
cmp
jne
test
fisubrs
xor
jne
fisubs
ucomiss
cmp
adc
mov
test
and
rcr
jl
cmpb
push
or
pusha
add
out
inc
out
push
pop
jnp
adc
addr16
jmp
cli
and
cmp
sbb
aas
cmp
xor
inc
lods
insl
jg
mov
mov
mov
pop
ss
call
loopne
out
pusha
push
inc
cmp
pop
inc
nop
or
mov
xor
ret
pusha
hlt
cmp
je
mov
inc
scas
ret
rol
adc
sub
cwtl
jmp
pushf
xchg
mov
lock
scas
mov
ficomps
mulb
lock
loope
cmp
in
push
je
mov
mov
cmp
call
lods
adc
push
adcl
clc
sbb
fs
jno
and
push
movntq
out
adcb
jg
fdivrl
add
hlt
sub
lods
loopne
sahf
dec
jle
push
sbb
or
sbb
push
adc
cmpsl
push
pop
pop
js
fisubrs
sbb
or
ss
popa
outsl
fcmovu
mov
adc
rorb
daa
lods
adc
inc
cmp
je
xchg
jne
inc
mov
outsb
cmp
xor
sete
shr
sbb
pop
loop
mov
add
inc
testl
popa
test
test
out
in
pop
mov
std
xchg
fists
cmp
jge
js
mov
mov
push
shrb
add
sub
call
xchg
sub
push
xor
dec
push
adc
cmc
inc
xchg
pop
mov
repz
repz
mov
sub
add
push
sub
cmpl
out
ljmp
and
mov
sbb
and
sub
add
jmp
push
sbb
sbb
cmp
aas
add
xor
or
sub
jmp
push
nop
cmpsb
or
jns
xor
push
test
and
sbb
icebp
push
jl
sub
mov
scas
dec
adc
aam
das
cs
loopne
rorb
mov
or
lret
adc
adc
lds
in
iret
jno
pop
inc
mov
mov
mov
sbb
mov
push
adc
jne
push
xchg
aas
repnz
mov
jl
xchg
jmp
adc
add
push
push
cmc
je
repz
pop
pushf
pop
push
aad
push
sbb
ret
je
lock
dec
testb
adc
dec
mov
xor
adc
insb
loopne
divl
jge
cmpb
je
icebp
jg
xchg
notb
shr
shl
js
ds
lods
mov
inc
mov
jmp
stc
cwtl
pop
push
aad
ss
ss
push
repnz
and
cmp
jb
loope
rep
pop
xor
sbb
lock
sbb
jp
push
test
nop
shr
and
xor
call
sub
sbb
mov
push
out
sti
jge
loopne
sub
imul
mov
push
pop
and
jne
cmp
fnstenv
fs
inc
shll
sbb
adc
or
sub
push
dec
pop
sbb
lret
mov
push
lahf
xor
push
sahf
push
popf
dec
add
sti
iret
and
into
mov
mov
mov
add
push
sbb
rcrb
stos
stos
mov
add
add
dec
lret
cmpl
sahf
inc
or
js
rolb
pop
sub
push
stos
add
or
adc
loopne
jmp
push
add
jns
add
add
test
add
cmp
push
push
sub
in
fidivl
add
out
hlt
add
movl
or
in
and
mov
aas
mov
sub
in
jl
mov
adc
and
sti
mov
outsl
rolb
adc
push
dec
jns
xor
jmp
or
cmc
sub
push
cmp
mov
push
sub
fdivrs
xor
cmp
jo
push
sbb
loope
stos
hlt
lret
mov
pop
out
lea
dec
sub
sub
push
pop
mov
repnz
cmpl
cmp
mov
mov
fucomip
call
or
pop
mov
int3
mov
jl
std
sbb
lea
and
stc
adc
mov
inc
or
add
lret
test
jge
icebp
in
shlb
push
push
sbb
and
mov
sub
js
xchg
adc
icebp
cmp
pop
fwait
lret
enter
loop
mov
or
lahf
mov
roll
es
int3
lea
iret
adc
inc
cld
cmp
mov
mov
pop
xor
xlat
xchg
jle
std
lret
xor
rol
push
add
push
ret
ret
mov
arpl
int
sbb
test
mov
push
mov
aaa
xor
jg
xor
imul
test
lock
jle
movsl
sbb
sbb
addr16
sbb
jno
loopne
add
jns
int
push
add
pusha
insb
insb
jle
int3
hlt
clc
jle
mov
out
jl
push
or
xchg
sahf
dec
int3
sbb
push
push
jns
rol
addb
dec
fwait
mov
sub
test
adc
sub
inc
adc
into
mov
jle
inc
dec
cmpsb
std
jge
cmp
mov
hlt
push
mov
stos
in
rcrb
sbb
inc
sub
inc
int3
pop
cmp
aas
fimuls
push
in
and
xor
mov
jbe
ret
push
push
dec
adc
mov
mov
enter
fstpt
push
shlb
sbb
cli
sbb
cmp
outsb
inc
jg
clc
mov
scas
sbb
mov
or
fwait
push
rorl
push
push
push
cmpsb
push
pop
pop
jmp
divl
mov
and
pusha
jl
adc
scas
rcll
xor
dec
rcrl
mov
pop
and
lock
lahf
jle
lea
push
addl
adc
shlb
push
jo
mov
and
add
mov
pop
dec
pop
push
xchg
into
pop
push
lods
dec
imul
nopl
in
je
xor
sbb
xchg
aaa
push
sbb
dec
pop
inc
lea
push
and
add
adc
sub
add
int3
push
mov
fwait
mov
push
push
addl
loop
arpl
and
jg
add
pushf
jae
fisttpll
or
sahf
fs
adc
xor
add
out
sbb
imul
test
xchg
inc
dec
adc
or
dec
mov
repnz
andb
mov
inc
je
xor
pop
rorl
rorl
movsb
stc
rclb
sbb
push
fs
dec
mov
jbe
pop
or
mov
adc
add
outsb
sbb
push
ret
fnstenv
jmp
shll
push
add
jge
in
jmp
xor
sub
sbb
cmp
rclb
jo
mov
nop
ss
jb
push
push
push
lock
shl
dec
add
inc
ret
pop
or
or
scas
mov
stc
repnz
inc
lahf
inc
hlt
roll
or
sbbl
js
loopne
ljmp
fs
adc
outsl
or
add
sarb
jo
and
cmpsb
sbb
adc
push
imul
xchg
sbbl
bnd
imul
pop
sbb
adc
and
xor
adc
push
add
inc
decl
loop
or
sahf
lock
jge
lea
push
dec
clc
mov
mov
sarb
into
popf
lods
push
dec
lds
pop
rcrb
fs
cmc
addr16
hlt
pop
cmp
sub
mov
rcrl
lods
adcb
push
test
wbinvd
jmp
nop
push
jecxz
rolb
aaa
add
push
jne
mov
mov
cmpsl
pop
ljmp
insl
out
or
push
dec
or
scas
pusha
pop
mov
lret
dec
xchg
adc
js
adc
subb
cltd
mov
cmpsl
in
loopne
enter
es
add
aam
rorl
mov
pushf
jbe
subb
mov
enter
mov
adc
fucom
adc
push
sbb
in
sub
sbb
push
ds
sub
mov
adcl
xor
shll
or
xchg
mov
mov
or
stc
dec
mov
pop
daa
mov
xchg
xor
lods
and
sub
push
rcrb
mov
jle
xor
push
mov
movsl
aaa
dec
fs
xor
mov
filds
add
push
in
lock
rclb
test
and
inc
sbb
push
repnz
mov
loop
rcrl
cmp
call
adc
je
adc
vmovhpd
inc
je
xor
cmp
je
ss
in
mov
adc
dec
cli
mov
ja
pop
inc
sbb
test
jbe
jo
sub
adc
je
and
addl
push
push
sbb
shlb
push
inc
sub
inc
cmp
stos
add
push
mov
jmp
mov
jns
in
jl
cmpsb
insb
sub
leave
sub
shrl
sbb
arpl
movl
push
jb
jle
jo
ret
mov
cs
push
add
test
adc
out
in
push
adc
test
addr16
lods
loopne
stc
mov
repnz
xor
pop
push
mov
xchg
add
add
xor
dec
cmp
shl
pusha
mov
js
repz
add
lea
push
in
push
inc
lock
sbb
and
inc
pop
xchg
popa
sbb
sahf
cmp
push
xchg
mov
mov
jno
lods
xorl
lds
insl
inc
add
xchg
push
add
xor
push
mov
je
dec
jne
insb
je
jmp
inc
shl
push
add
clc
outsl
mov
je
dec
jne
mov
mov
cmp
ret
das
add
loopne
xor
adc
xlat
adc
insb
pushl
lea
pusha
ret
lea
cmp
filds
cs
inc
push
pop
push
in
lcall
xor
or
clc
ds
push
sub
push
rclb
sub
jle
aas
jno
pop
cmp
jp
cmp
mov
movsb
push
sub
test
xor
test
shl
cmp
cmp
or
mov
sub
jae
outsl
inc
adc
push
push
jmp
push
pop
and
stos
push
push
popf
icebp
mov
xchg
mov
mov
pop
cmp
movsb
sub
not
push
repnz
pushf
jno
push
daa
pop
xor
sub
out
push
mov
mov
arpl
mov
push
pop
dec
sahf
mov
or
xor
repnz
cmp
mov
xchg
mov
cmp
aas
add
dec
or
jle
sahf
mov
mov
lock
mov
sbb
mov
xchg
dec
loope
pop
pop
adc
insb
and
ret
push
popa
dec
addl
adc
jg
xor
and
mov
or
mov
loope
jmp
adc
adc
add
sub
xor
sbb
imul
mov
pop
cmpb
rorb
sbb
cmp
push
lods
cmp
pop
push
inc
add
cmp
pop
jmp
fs
je
lods
sbb
pushf
jle
push
popf
stos
sub
and
popf
decl
jmp
push
xor
pusha
bound
popf
subl
iret
test
popf
push
pop
js
daa
fadd
sub
loope
or
add
sbb
insb
sbb
not
and
or
pushf
add
push
push
push
xor
pop
jbe
jne
out
push
adc
in
outsb
and
add
xchg
dec
pop
push
push
aas
sarl
jl
ret
pop
pop
roll
shll
pop
outsb
ret
mov
ja
scas
int3
arpl
jl
lock
inc
pop
add
sahf
sub
and
bound
push
mov
stos
jge
in
js
xchg
jo
aas
add
notl
xchg
je
icebp
inc
mov
push
jbe
imul
dec
bound
sbb
pop
jno
cs
push
push
mov
xor
inc
sti
icebp
sub
sbb
mov
adc
es
inc
call
test
pusha
sbb
sub
add
sbb
enter
jle
adc
sub
movsl
pushf
out
repz
xor
dec
adc
or
xchg
lods
fneni(8087
lahf
pusha
jbe
lea
pop
or
fldcw
mov
push
xchg
push
mov
push
imul
xor
mov
insb
xor
jo
shll
fisubl
mov
das
mov
dec
sub
mov
pop
lods
add
pop
icebp
add
push
test
ljmp
enter
inc
cld
loopne
pop
inc
adc
or
mov
cmp
push
or
mov
cmp
faddl
and
sahf
clc
push
add
lock
fs
sub
pop
mov
push
xchg
sbb
jle
mov
or
sbb
add
enter
lock
js
es
js
inc
dec
pop
or
or
movsl
testl
push
pop
mov
push
push
adc
in
xchg
inc
and
pop
mov
shl
mov
jb
sbb
jmp
push
fs
pop
push
ficomps
les
pop
xor
push
pop
mov
jge
test
adc
sbb
mov
int3
push
sbb
jbe,pt
shl
daa
adc
inc
add
mov
add
outsb
push
cwtl
adc
popa
je
add
push
dec
loopne
or
cmp
mov
mov
movnti
cmp
or
shrl
cmp
cs
or
pusha
test
in
pop
inc
add
das
lock
jb
inc
mov
mov
jb
scas
lcall
jno
adc
adc
shll
or
mov
mov
push
lods
lock
mov
inc
sarb
or
add
or
lcall
cld
jl
in
mov
jne
dec
popa
and
inc
pop
jnp
ret
addr16
push
sub
lea
cmp
shll
jb
add
into
aaa
cld
insl
push
lahf
idivb
or
int
sbb
int
shll
leave
jg
imul
sbb
sub
pop
lea
inc
inc
mov
jb
xchg
outsb
cmpsb
adc
jmp
sub
pop
add
cmp
enter
add
cwtl
and
call
mov
sbb
push
or
ret
mov
movsb
adc
jae
pop
push
pop
sbb
mov
xor
cmp
inc
or
je
mov
inc
clc
jb
lea
cli
jae
lret
sub
cltd
xor
clc
add
sar
xor
sbb
mov
pop
decl
or
mov
xor
outsb
lcall
or
rolb
adc
push
data16
and
xor
xor
dec
jbe
data16
cltd
test
sbb
notb
js
mov
mov
dec
scas
in
jne
pop
jno
filds
cmp
add
sbb
fildl
xor
add
cltd
popa
pop
test
inc
or
push
or
cmpsb
imul
push
or
dec
jno
xor
push
jno
add
shrb
stc
or
shrb
xchg
and
mov
icebp
push
mov
enter
or
pusha
and
mov
or
inc
dec
jle
mov
push
jbe
das
jae
iret
fdivs
inc
dec
sub
or
pop
xlat
sbb
xor
sbb
daa
push
mov
faddl
mov
xor
inc
jb
adc
or
cmc
pop
xchg
fsts
dec
loopne
inc
push
cmp
sahf
pop
mov
sbb
icebp
pop
loope
pop
push
jne
cli
out
xchg
stos
jne
ds
cmp
mov
jns
push
aaa
lds
cmp
je
lret
daa
cltd
jne
jmp
sub
sbb
pop
in
push
adc
addr16
jmp
inc
call
dec
in
subl
mov
add
into
mov
rcr
lahf
sbbb
cmc
test
fdivr
sahf
in
loop
jo
xor
mov
insb
jo
scas
push
mov
je
pushf
mov
push
aam
dec
adc
xchg
aas
enter
jl
leave
js
cltd
lock
cwtl
adc
notl
xchg
out
push
mov
pop
adc
xor
popf
xor
shufps
push
ret
lret
or
push
fistpl
mov
push
dec
pop
push
pusha
xlat
xchg
push
in
mov
call
push
aas
adc
pop
pop
stos
jle
cwtl
pop
pop
push
insb
mov
fidivs
jl
stos
add
push
adc
and
dec
inc
movb
xor
fldt
push
pop
lea
jge
sub
lea
stos
jl
cld
add
pop
repz
or
push
jo
iret
pop
insl
sub
or
loopne
fcoms
lea
jmp
mov
mov
leave
push
popa
outsl
xor
je
sarb
cmp
out
pop
push
jl
les
insb
imul
loop
outsb
fsub
stos
jge
or
xlat
jge
rcpps
ljmp
mov
shrb
ret
dec
fsubrs
ret
cmp
sbb
mov
std
push
inc
dec
insl
sub
xchg
push
push
fildll
cmc
and
repnz
push
dec
cs
sbb
test
inc
mov
inc
sti
or
ds
jge
inc
adc
push
add
push
push
inc
jb
jns
fistpll
aam
and
pop
test
rorb
sub
fs
push
or
mov
repnz
jne
adc
and
js
sub
gs
mov
mov
out
jo
or
jbe
pusha
and
je
inc
pop
mov
jge
fidivrl
add
cmp
jge
icebp
pusha
push
sbb
jnp
or
fsts
adc
rclb
add
into
push
and
push
or
mov
push
jg
mov
int3
and
cld
or
push
mov
sub
or
xchg
and
push
cmp
sbb
ret
mov
mov
push
pop
jle
test
and
pop
mov
add
adc
jge
cld
repnz
pop
mov
pop
and
test
pop
pop
or
in
fstps
jl
pop
mov
push
shlb
inc
ds
or
daa
mov
lea
jne
xchg
into
test
imul
xchg
ret
xor
add
push
inc
inc
lock
push
jl
in
or
xchg
es
cmp
xorb
call
adc
xchg
jns
in
mov
and
enter
cmp
insb
mov
iret
sti
push
je
test
enter
outsb
adc
mov
cmp
or
dec
aas
insb
push
les
into
popl
dec
lods
or
lahf
cmp
std
decl
mov
or
lret
xchg
out
add
push
ret
cltd
lods
hlt
push
leave
enter
inc
xchg
xor
add
mov
orb
xor
push
sbb
fwait
mov
push
fnstcw
and
sbb
mov
xor
push
dec
push
pusha
sub
jbe
ja
jo
sahf
std
pop
ret
adc
jmp
jne
adc
sbb
aaa
xchg
fisubrl
bound
fwait
mov
add
fsubr
insl
int
cmpsb
daa
sbb
push
div
repz
cwtl
cs
xor
into
inc
inc
and
mov
pusha
loopne
jg
mov
inc
xchg
in
dec
inc
sbb
stos
pop
addr16
push
pmulhw
inc
rep
sub
testl
sub
sub
add
xor
lock
sbb
pop
adc
aam
dec
jp
or
inc
jecxz
je
jmp
xchg
ret
xchg
push
daa
pusha
adc
and
nop
cmpsb
jl
push
jne
xor
lret
out
je
or
dec
mov
push
push
testl
and
jo
mov
dec
pop
sbb
xchg
jl
shlb
mov
inc
movsb
pop
ret
popa
pusha
inc
or
fists
orl
sub
lds
adc
adc
mov
adc
jnp
lods
and
add
mov
and
push
or
add
subl
xchg
inc
push
cmp
sub
ss
sbb
dec
add
lock
xchg
lahf
xchg
adc
adc
adc
sahf
adc
add
sub
sub
loopne
mov
mov
push
test
or
push
jecxz
push
adc
movsb
push
push
mov
hlt
or
pop
rcr
in
out
dec
cmp
paddw
push
addl
mov
aam
repz
push
cmp
xchg
sub
cld
xchg
pop
inc
mov
je
hlt
mov
movsb
inc
js
clc
push
mov
adc
loopne
loopne
loopne
jo
inc
movsb
pop
mov
test
addr16
pop
or
cmp
mov
mov
adc
and
aas
mov
cmp
or
push
or
mov
pop
xchg
jne
stos
mov
sbb
movsl
jmp
mov
push
mov
add
loopne
clc
sbb
xor
mov
add
add
cmp
dec
loop
fbld
xchg
mov
test
mov
mov
cmp
popf
rorb
and
push
push
fiadds
mov
mov
pop
and
adc
fbld
out
mov
push
sub
jo
loop
inc
sbbl
sbbb
dec
fs
jg
test
pop
push
mov
pop
and
daa
lea
jecxz
jno
mov
inc
faddl
jnp
add
push
mov
cmp
jne
cli
out
ss
pop
push
push
stos
pop
lods
sub
xor
mov
cmp
push
fdivr
bound
cmp
pop
jne
xor
sbb
aad
mov
mov
sbb
std
ret
pop
push
pop
call
xchg
leave
or
dec
lea
ret
and
pop
mov
test
add
push
stos
pop
pop
sbb
jmp
mov
or
or
jbe
and
popf
cmpsb
jl
dec
fadds
xchg
and
insb
outsl
lods
push
xor
cmp
aad
dec
fldcw
lahf
xchg
loopne
sub
fsubl
mov
sub
lds
mov
or
inc
ror
add
pushf
lahf
xchg
add
rcr
loope
cmp
xor
sub
out
xchg
cwtl
pop
add
or
cmp
mov
xor
inc
xlat
inc
repz
jo
lods
je
test
insb
xor
sub
push
cmp
imul
jmp
insb
sbb
cmp
outsb
js
mov
pop
jmp
mov
push
push
xchg
dec
dec
mov
sub
je
and
call
push
adc
js
cmp
fcmovne
mulb
lock
inc
hlt
xor
lea
int3
sbb
or
sub
mov
cmp
dec
pushf
adc
mov
sub
inc
jo
popa
sub
pop
pop
fisubs
or
mov
cli
add
sub
fists
pop
lods
mov
mov
xor
push
clc
add
dec
lahf
xchg
ja
pop
ret
pop
xchg
sti
push
enter
push
ret
rcrl
cmp
mov
or
call
adc
scas
mov
leave
cmp
sete
sbb
enter
and
in
add
shr
lcall
test
pushf
xchg
sub
pop
fldl
in
sub
or
ret
iret
push
es
inc
adc
dec
push
and
int3
setb
movb
out
into
movl
sbb
cmp
sub
inc
cltd
or
adc
pushf
insl
add
cltd
or
enter
mov
fadd
mov
jne
sbb
mov
xor
in
push
inc
mov
iret
add
lahf
push
xor
xor
sub
adc
loopne
lea
sub
sbb
aas
mov
push
add
fildl
add
and
and
shrb
push
out
dec
jmp
push
dec
mov
aas
sub
sub
sbbb
push
pop
dec
cs
add
push
xchg
test
push
sbb
js
or
mov
shlb
jl
sbb
aaa
lahf
int
jle
add
or
je
jne
sub
mov
or
je
xor
jbe
push
out
loopne
cmp
ja
shrl
inc
or
push
fwait
rorb
fcmove
sar
add
jp
das
hlt
data16
xorb
push
mov
cmp
push
jge
mov
xor
call
or
mov
push
jg
sbb
push
pusha
and
ljmp
mov
and
jle
or
es
ret
out
dec
pushf
jl
jb
das
std
jg
jl
or
lahf
movsb
cmp
push
and
adc
and
xor
jo
dec
or
jg
into
inc
jl,pt
jg
dec
or
mov
dec
out
test
cmp
das
in
dec
mov
addr16
jmp
jg
inc
fstps
cli
dec
sbb
dec
dec
or
int
mov
push
xchg
jbe
outsl
jp
pushf
inc
fimull
loopne
pop
cli
lea
jbe
jnp
popl
jne
icebp
mov
jmp
daa
jbe
adc
or
push
repnz
fcoms
add
inc
cmp
shrl
das
je
lds
inc
test
lret
adc
movl
jge
andb
and
pop
cmp
js
movhps
jb
and
movsb
je
loopne
inc
cmp
push
rorb
vmread
ljmp
push
cmp
or
bnd
pop
add
push
jmp
or
push
push
out
sub
mov
dec
jle
pop
adc
and
sbb
clc
imulb
inc
push
jo
lock
xchg
or
popaw
inc
inc
fldl
lock
addb
pop
pop
sub
shrb
stc
xor
mov
inc
mov
sbb
pop
jmp
sar
and
cltd
and
pop
mov
jle
je
pop
or
mov
cmp
imul
mov
jmp
pop
test
push
xchg
lea
dec
lea
call
pop
icebp
in
cld
cmp
roll
xlat
sbb
jge
jbe
sub
faddp
cmp
fcoms
push
rcll
mov
jge
xchg
mov
sbb
enter
adc
repnz
sub
push
adc
sub
ss
push
add
cltd
dec
lea
pushl
xchg
nop
rclb
pushf
xchg
push
push
xor
clc
stos
je
test
js
andb
call
mov
pop
orl
pop
cmc
ret
test
outsl
sbb
jl
xor
cmp
cmp
sub
xchg
fistpl
xchg
daa
push
jecxz
fcmovbe
sub
adc
push
mov
add
xchg
mov
leave
dec
js
pushf
pop
sbb
push
add
ret
fwait
jo
cmp
es
or
xchg
cmpl
push
jo
inc
pop
dec
fcoms
or
xor
inc
fisttps
aam
add
adc
or
push
sbb
adc
gs
scas
xor
fstps
mov
daa
outsl
andl
data16
sub
or
cmp
andb
sub
cmp
pop
out
orb
int3
and
push
mov
je
push
xor
jne
mov
push
repnz
orl
std
mov
cmpsl
push
add
fstp
pop
pop
xchg
nop
xchg
insl
xchg
pushf
test
enter
jecxz
mov
push
push
pop
ret
repz
cltd
add
mov
mov
sub
pop
fildl
outsl
repz
ret
xchg
mov
sbb
in
in
add
cmp
loope
into
sbb
cmp
scas
outsl
adc
xor
and
push
mov
lea
pop
adc
divb
mov
mov
add
movl
jmp
lods
adc
shlb
jmp
mov
out
adc
push
push
bound
mov
rcrb
sub
cmc
lcall
ljmp
ret
pusha
adc
jne
push
pop
aaa
sub
push
mov
call
in
sbb
inc
mov
push
xchg
cmp
mov
sub
adc
jo
scas
jmp
add
aam
or
cmp
xchg
fldt
xchg
or
mov
insb
lea
aaa
adc
adc
scas
pop
mov
jbe
std
movsl
mov
inc
sub
nop
sbb
push
mov
jmp
orl
dec
cmp
lret
mov
jge
orb
dec
push
mov
sbb
fs
and
jo
insb
loope
pop
jno
mov
inc
sahf
lea
shll
mov
lret
sub
sbb
push
mov
adc
cmp
in
inc
cltd
out
lods
adc
mov
fsub
push
pop
inc
ret
dec
push
and
push
add
inc
and
cmp
or
stc
fists
sbb
adc
inc
inc
andl
sarl
shr
fmuls
repnz
push
pop
push
xor
xchg
dec
fs
adc
inc
xor
cmp
push
adc
fs
pop
inc
xchg
cmp
mov
cmpsl
arpl
and
push
repnz
frstor
push
push
sbb
scas
cmp
lret
in
or
mov
ret
cmp
dec
pop
call
hlt
pop
adc
push
pop
out
push
fidivl
and
push
push
popa
and
jl
je
sub
pop
test
testb
push
test
and
leave
enter
add
xchg
add
pop
pop
cmp
cmp
xor
mov
mov
xchg
rolb
pusha
inc
add
inc
adc
mov
xor
xor
dec
inc
add
test
mov
cmp
jnp
push
mov
jecxz
inc
jns
sbb
jg
and
mov
dec
push
sbb
fs
sbb
adc
sbbl
cmp
jne
and
lods
pop
pop
pop
sbb
add
or
push
add
mov
inc
cmp
shlb
push
or
iret
xor
imul
jg
mov
int3
insl
lods
jge
inc
xor
inc
inc
dec
mov
adc
inc
inc
push
jg
loopne
nop
and
push
push
inc
dec
fldenv
mov
mov
push
and
push
add
jge
dec
cltd
adc
xor
inc
xchg
cmpl
fstl
inc
lods
push
pop
les
ljmp
adc
dec
fwait
add
orb
std
mov
mov
cmp
je
loop
jp
mov
or
sub
inc
les
and
xchg
mov
adc
push
cmp
sub
pop
dec
add
lahf
xchg
pop
loop
mov
cli
sbb
shlb
cmp
add
push
dec
inc
dec
or
nop
or
outsl
dec
xor
pop
pop
or
inc
mov
adc
xchg
mov
xor
test
pop
enter
xchg
in
jmp
sbb
sub
cmc
push
mov
xlat
cmc
data16
nop
subb
repz
mov
repz
out
mov
xchg
dec
outsl
cmpsl
stc
cmp
scas
push
xchg
insl
fistps
dec
ret
jl
add
stc
inc
jecxz
ljmp
and
mov
daa
aam
dec
mov
mov
and
dec
dec
orl
sbb
in
push
push
movsl
icebp
xchg
and
insb
hlt
adc
pop
push
push
xor
inc
ss
mov
jge
and
jo
je
repnz
ret
mov
andb
int
mov
out
test
add
sbb
jbe
test
pushf
mov
movsb
test
mov
out
adc
xchg
mov
sahf
out
sahf
je
xchg
cmpsl
fucomi
cmp
repz
cmp
repz
repz
insb
or
sahf
sbb
js
or
daa
jge
loopne
push
std
jmp
mov
dec
cmp
cmp
mov
inc
push
mov
pop
fsubrs
cmp
mov
sahf
dec
mov
call
int3
cwtl
sub
dec
fidivrs
jne
clc
xor
pop
lret
and
das
jl
out
pop
js
jbe
mov
push
dec
insb
xor
mov
dec
cs
jmp
mov
inc
jl
daa
add
mov
outsl
dec
sub
mov
or
imul
sub
cmpsl
arpl
lcall
test
insb
xor
pop
popf
js
jo
clc
add
jo
lret
movsb
add
cmp
xchg
xchg
sbb
and
sbb
and
and
push
or
dec
cmp
sbb
pop
and
inc
push
adc
sub
xchg
rorl
pusha
lods
cmp
mov
push
js
pop
xor
inc
cmp
dec
shrb
sbb
push
js
clc
mov
jns
js
sub
jge
arpl
mov
idivb
jl
lea
xchg
loop
imul
pop
inc
pop
test
je
lock
movl
or
dec
and
decl
dec
ja
add
jle
xlat
mov
insb
repz
add
xor
jl
loopne
adc
ja
mov
adc
lods
add
cmp
xchg
sbb
sbb
mov
sbb
iret
rclb
xchg
stos
add
imul
pop
jo
daa
lahf
lods
test
and
pop
pop
sub
sbb
jmp
jnp
pop
das
mov
or
adc
cmp
mul
movsb
mov
mov
imul
mov
pop
or
and
cmpsl
out
shrl
shll
sub
or
sahf
in
pop
dec
xor
add
dec
mov
sub
sbbl
out
push
cli
imul
or
ss
int
push
add
push
push
jg
lods
mov
pop
sub
ja
ret
sbb
xchg
dec
pushf
inc
mov
ret
lret
ret
push
mov
sub
jl
push
or
out
adc
sarl
ret
pushl
push
popf
cltd
add
add
or
push
in
jno
lods
mov
test
cs
mov
les
dec
lea
test
gs
fwait
jl
add
inc
rclb
xchg
pop
push
int
fbld
sahf
xchg
xor
push
xor
jns
cmp
pusha
cmp
cmp
mov
hlt
inc
cmp
fdivs
insb
xchg
pop
adcl
stc
out
pusha
sbbb
inc
ljmp
or
fsubrs
into
sub
xlat
or
dec
push
mov
and
push
mov
or
add
push
pop
inc
or
stos
mov
jg
out
sub
jnp
inc
inc
sub
clc
cmp
cmp
jg
mov
push
and
sub
cmp
lret
push
cmp
movsl
fistl
push
adc
icebp
or
cmp
int
test
je
xchg
fstp
fsubrl
popl
dec
fxch
fmul
jecxz
iret
fimull
sbb
call
cltd
lret
insb
cltd
dec
std
inc
jmp
sti
mov
shl
sbb
rclb
int3
mov
pop
push
mov
push
fsubs
inc
cmp
add
das
add
cmp
add
push
pop
push
ljmp
out
xchg
les
xor
mov
adc
jb
xor
push
dec
fmuls
xor
jg
push
sub
nop
ja
into
cmp
jge
cmp
sahf
clc
lea
cmp
and
push
add
add
mov
push
xchg
mov
cmp
test
lods
push
rclb
loopne
or
inc
xchg
xchg
and
cli
lock
xor
int3
icebp
xor
inc
cmp
or
add
mov
xchg
ficoml
insb
push
cli
je
repnz
add
cmp
sub
mov
push
mov
mov
or
sub
dec
fdivs
mov
rcll
adc
cmp
lea
lea
xchg
stos
popf
cs
rcrl
sti
inc
pushf
mov
jns
popf
loope
pop
call
cmp
into
jg
ffreep
sarb
das
loopne
lahf
cmp
pusha
dec
xor
push
pop
mov
cmp
dec
sbb
adcb
jge
pop
sub
lock
ret
mov
sub
out
sarb
dec
jle
dec
mov
in
mov
mov
mov
adc
scas
test
and
mov
daa
jl
pop
into
push
mov
mov
mov
rclb
adc
adcl
clc
inc
js
lds
int
jo
add
loop
xor
mov
xchg
imul
mov
iret
pop
mov
push
jb
mov
or
pushf
sbb
andb
add
mov
xchg
adc
sub
push
jmp
push
pop
fs
inc
cmp
inc
push
mov
sbb
mov
sti
cmp
je
cmp
xorb
and
shlb
push
rolb
sbbb
pop
outsb
jno
xor
xchg
jmp
stos
xor
pop
xor
xchg
inc
mov
lea
rcll
inc
fistl
mov
fidivs
int3
bnd
push
test
xchg
jge
in
xor
adcl
and
cmpsl
jb
pop
push
cmpb
int3
push
stc
cmp
je
ss
enter
xchg
adc
add
add
pusha
stc
insb
push
cmp
mov
test
inc
test
icebp
stc
mov
dec
add
mov
mov
ret
push
jo
addr16
adc
adc
into
add
pop
xor
pushl
loop
push
adc
jbe
push
fwait
and
xchg
stos
inc
inc
cmp
rorb
push
push
ds
or
je
or
call
cld
icebp
shlb
sbb
inc
lods
lock
dec
adc
jle
dec
sbb
mov
movl
adc
sub
or
add
adc
cmp
iret
adc
sbb
push
int
sub
dec
adc
lock
aas
mov
or
and
pop
cmp
add
sub
jmp
shll
insb
loop
lahf
sbbb
adc
into
pop
arpl
scas
lods
roll
arpl
dec
push
cmp
adc
sbb
sub
pop
das
xchg
fisttps
fsubr
dec
repz
jle
push
push
push
dec
inc
xor
dec
dec
add
push
and
inc
fcmovb
cwtl
dec
push
jns
add
push
leave
repz
mov
add
or
dec
pop
cmpsl
dec
setl
mov
and
pop
iret
sahf
push
rcrl
sbb
rolb
xor
inc
test
adc
out
es
or
div
sbb
sub
and
adc
inc
shrl
test
stos
mov
lods
add
mov
leave
mov
adc
or
and
or
xor
lods
inc
adc
orb
outsl
addr16
sbb
dec
cwtl
or
sbb
std
fdivrp
inc
jmp
dec
cmp
or
push
adc
add
movsb
test
mov
mov
fiadds
sbb
mov
xlat
and
stos
or
cmpsl
xor
add
push
pop
repz
sub
dec
or
test
inc
mov
adc
xor
sbb
or
test
adc
insb
sarb
mov
sbb
add
lea
or
pop
sub
rcll
sub
iret
cmp
add
je
cmp
inc
orb
add
sbb
add
cmpl
sbb
cmp
test
pop
int
arpl
fiadds
xchg
cs
push
pop
jbe
mov
xlat
mov
pop
xchg
loopne
mov
shrl
xchg
sbb
lret
arpl
pop
cmp
lea
scas
pop
clc
dec
add
mov
cmp
jo
jo
adc
pop
ret
sbb
cmc
jne
xor
add
sub
lea
pop
aas
jne
cwtl
lods
add
addl
xchg
data16
jle
or
jae
push
mov
in
in
out
add
and
add
iret
sahf
out
push
xchg
push
lahf
mov
cwtl
or
add
dec
sbb
push
test
sub
insb
pushf
add
pushf
sbb
mov
js
mov
mov
subb
or
rclb
mov
xchg
outsl
lret
jb
pop
scas
orl
or
push
jne
xor
push
push
movl
into
loope
aaa
add
xor
fsubrs
sub
mov
and
sbb
je
adc
arpl
or
loope
add
mov
test
add
mov
or
in
outsl
add
and
cmp
sbb
mov
sub
stc
and
add
movsl
mov
sub
pop
push
add
jecxz
pop
jb
dec
cmp
repz
mov
scas
arpl
movl
mov
adc
dec
dec
dec
lds
loopne
push
shlb
or
xor
sbb
and
lcall
push
or
pushf
out
test
jne
dec
pop
pusha
arpl
in
pop
lods
pop
cmp
sub
push
loopne
add
push
sbb
adc
mov
dec
mov
roll
mov
sub
dec
cmp
in
xor
push
jno
aaa
jnp,pn
jne
mov
xchg
add
ret
fsubrp
imul
and
sbb
test
out
xor
iret
cmp
repnz
lahf
push
shlb
sub
sub
sbb
xchg
dec
push
adc
cmp
rclb
shrb
scas
xchg
xor
or
outsl
insb
xor
and
mov
adc
mov
movl
rorb
pop
mov
cmp
mov
fadds
dec
adc
lea
lahf
movsb
sbb
movl
test
dec
fstps
xchg
push
add
nop
mov
and
inc
ret
inc
ljmp
rol
push
pop
cmp
bound
xor
add
mov
jle
test
jle
in
lea
xor
loopne
scas
push
add
lret
das
adc
jo
fisttps
in
repnz
sbb
sub
std
dec
pop
and
mov
mov
mov
lds
ja
pop
mov
xor
adc
xor
mov
test
adc
mov
push
mov
movsl
sbb
xchg
add
pushf
mov
loopne
adc
insl
movsb
cmp
jne
aas
aas
cmpsb
push
cmp
inc
outsb
pop
xor
pop
pop
add
pop
insb
pop
adcb
cmp
add
test
inc
and
sahf
xor
pop
dec
mov
test
pop
int3
pusha
lock
fadds
fs
pusha
leave
add
repnz
xor
mov
jl
jo
mov
adc
jmp
adc
mov
pop
and
pusha
out
mov
pop
and
pop
outsb
pop
stos
sahf
xchg
dec
push
push
mov
push
imul
in
outsb
pop
cmpsb
movq
adc
jp
jg
jae
cmp
je
mov
mov
jae
js
in
or
or
sbb
xchg
data16
insb
mov
aaa
mov
jno
rcrb
lahf
adc
ficoms
orl
ds
add
subb
outsb
xor
xchg
dec
outsb
lds
pushf
jl
subb
mov
arpl
push
xchg
add
leave
cli
pop
enter
movsl
mov
xlat
std
dec
pop
add
add
jo
outsb
fs
push
mov
pushf
push
ficompl
pop
les
shll
sub
push
sub
add
mov
mov
push
pop
mov
mov
inc
jle
lock
loopne
cmp
inc
dec
out
jle
daa
int3
pop
mov
push
push
dec
in
sub
xor
cmp
or
push
push
lret
imul
arpl
enter
dec
inc
dec
fadds
aaa
mov
xchg
shrb
add
out
mov
gs
dec
test
xchg
and
dec
push
neg
sbb
and
push
push
cmpsb
add
xor
sbb
jmp
arpl
and
lds
cmpxchg
rcrl
inc
xlat
aas
push
jmp
aaa
push
das
pop
mov
sub
xor
and
add
fadds
decl
pusha
outsb
jmp
or
mov
push
imul
sbb
outsl
ret
cmp
jl
jg
push
sub
sub
sub
push
lods
push
push
push
mov
cmp
out
cmp
cld
sub
sub
les
and
pushf
test
mov
cmp
jge
sub
and
mov
add
jbe
pop
pop
and
sub
xor
lds
add
or
subb
outsb
pop
aad
loope
int3
cli
pop
jmp
icebp
sub
mov
orl
or
mov
sub
or
out
xor
and
pop
add
sbb
cmp
ljmp
adc
mov
and
jnp
pop
ja
int3
push
jecxz
mov
dec
adc
adc
adc
push
inc
or
push
leave
adc
stos
add
fs
outsl
pop
mov
out
sar
mov
shr
add
pop
mov
imul
scas
lds
and
and
add
js
inc
jo
mov
jmpw
daa
ret
lea
mov
xor
fwait
test
lods
sti
jmp
ret
mov
fcmovnu
pop
mov
dec
push
adc
pop
fs
jle
sbb
dec
mov
mov
repz
mov
sahf
inc
dec
sahf
inc
inc
push
sub
in
in
pop
and
add
and
ljmp
jbe
adc
mov
push
mov
aas
xchg
push
xchg
shrb
pop
and
sub
jb
mov
add
xchg
rcr
add
stc
lea
out
movsb
or
xor
pusha
adc
xor
push
data16
aam
add
mov
dec
shlb
or
lock
sbb
mov
push
popf
cmpsb
adc
leave
jo
in
cmpsl
jp
adcl
mov
push
mov
test
adc
sbb
jg
sub
movsl
xor
lock
and
push
push
jle
and
adc
sub
mov
inc
and
jmp
imul
add
add
jmp
sbb
dec
adc
inc
xor
lahf
mov
add
loope
cmp
cmp
jo
or
inc
mov
push
out
cmp
dec
rclb
push
cld
adc
pop
add
ja
std
ljmp
cmp
lock
mov
jmp
sub
jmp
add
clc
out
in
or
adc
push
add
or
outsl
push
je
lcall
jb
adc
mov
push
push
jle
adc
push
add
movsb
inc
cmpsl
pop
mov
mov
mov
pop
jg
or
pop
fbld
je
ss
cmp
int
insb
jp
insb
cmp
icebp
adc
xor
popf
mov
cmp
cmpsl
lods
mov
xchg
cltd
ret
movl
cmpl
dec
mov
mov
cmp
shll
dec
adc
pop
add
and
push
mov
adc
dec
jp
push
xor
push
push
mov
ja
push
inc
cmpps
out
push
outsl
movsl
pop
leave
or
push
and
cmp
inc
lcall
das
sub
lahf
incl
add
punpckhbw
xor
iret
data16
pushf
jmp
adc
add
jns
int3
pushf
lahf
add
nop
add
frstor
pop
jg
mov
mov
or
sbbb
test
jb
and
cmp
lahf
orl
sbb
pop
mov
sub
sub
addb
xchg
into
into
mov
sub
cmpsl
push
cmp
mov
cmpsl
and
sbb
jecxz
or
jmp
dec
xor
adc
or
push
xor
cltd
xchg
sub
and
rolb
jg
mov
xchg
call
sub
jg
clc
fs
mov
jne
sub
mov
clc
mov
sbb
orb
repnz
cmp
mov
pusha
rol
push
mov
mov
in
or
or
scas
fistpl
mov
movsb
nop
mov
inc
or
mov
mov
sub
imul
cmp
sti
xchg
lcall
push
dec
mov
sbb
adc
cmp
shlb
pusha
lret
mov
stc
cli
xchg
and
fistl
xchg
ret
jne
sub
loopne
lods
push
inc
add
mov
jmp
dec
push
push
dec
dec
mov
clc
xor
iret
xchg
pop
in
or
push
mov
iret
inc
pop
pop
pop
pop
and
cmp
insb
adc
mov
je
mov
push
pop
lds
lahf
inc
dec
mov
push
jmp
xchg
push
inc
push
mov
or
insb
mov
mov
test
inc
jae
push
inc
push
test
imul
jo
pop
xor
xchg
ret
mov
dec
mov
mov
sbb
cmp
gs
daa
enter
lods
add
jns
jecxz
mov
and
leave
lcall
push
jg
push
adc
jl
lods
and
mov
je
mov
test
adc
pop
sbb
out
pusha
sub
add
sbb
inc
insb
cmp
add
dec
mov
add
mov
mov
mov
cmp
aaa
test
dec
xchg
and
test
sbb
push
xor
adc
jmp
xor
stos
outsb
mov
ficomps
mov
js
adc
xchg
push
mov
mov
xchg
add
adc
mov
or
andb
sbb
popa
pop
adc
dec
pusha
imul
or
pop
add
push
or
dec
xchg
sti
sbb
es
frstor
and
push
add
mov
sti
push
test
add
mov
out
mov
lods
push
lea
xchg
popa
jg
adc
sbb
pop
pop
lret
and
sbb
sub
push
mov
mov
pop
xchg
orb
xor
ja
mov
push
rolb
or
ret
cmp
ss
dec
xor
aas
out
dec
and
and
mov
add
pop
mov
cmp
jne
aas
mov
inc
xchg
outsl
cmp
xor
imul
cs
jnp
push
aas
push
enter
stos
arpl
add
ja
or
fisttps
cmc
pop
sub
or
pop
clc
push
push
out
test
je
push
jl
repnz
dec
push
rcll
mov
xor
fucomi
xchg
xchg
pop
add
jne
add
rcrb
sbb
jl
add
and
stos
add
pushf
jmp
popf
add
or
mov
mov
mov
fstpl
lahf
or
or
dec
mov
ja
mov
jno
xchg
dec
test
fistps
fistps
add
adc
jl
pushf
pop
leave
push
fs
add
sbb
xchg
jmp
movsl
inc
push
pop
push
add
fldl
push
or
jle
mov
jnp
outsl
inc
jmp
push
dec
jle
mov
xchg
test
adc
push
fmuls
sbb
xchg
lret
adc
or
rorl
inc
sbb
daa
jb
lea
push
or
aam
mov
inc
push
jle
mov
sub
pop
and
sbb
call
jo
inc
inc
jne
cwtl
lcall
adcb
mov
and
mov
xchg
dec
cli
pop
inc
ret
jne
and
and
pop
adc
or
mov
aad
testb
cwtl
dec
js
add
clc
add
push
add
xchg
push
jno
mov
xlat
pop
xchg
dec
lret
sub
jne
adc
subb
and
pop
add
test
addb
mov
sbb
jbe
cmp
and
das
adc
cmpl
push
or
lds
fists
inc
xchg
xchg
insb
addb
loopne
loopne
sbb
jmp
adc
cli
jo
movsl
popa
shl
push
push
es
xchg
cmp
mov
pop
cmp
loop
iret
in
inc
outsb
dec
xor
outsb
and
push
pop
clc
and
cwtl
and
inc
mov
inc
es
sub
imul
mov
mov
cmpsb
int
inc
addr16
mov
xchg
clc
les
push
push
adc
daa
out
fsubs
xor
push
scas
cmp
cmp
push
sbb
cmp
aad
es
xchg
rorl
push
loopne
push
bound
ret
and
xchg
loope
push
push
cmp
loopne
jo
je
xchg
les
out
sub
out
xlat
mov
rclb
aaa
enter
xchg
jle
leave
je
xchg
pop
sbb
adc
aaa
lea
fists
shll
mov
adc
inc
movb
mov
mov
fists
movsb
ficomps
insb
fdivs
rcr
lahf
ret
repnz
andb
jb
jo
xor
sub
in
add
cmpsb
mov
mov
adc
inc
aaa
leave
xor
mov
dec
sbb
add
lahf
cmp
inc
fwait
pop
aaa
jo
push
push
xor
aad
subb
xor
dec
add
cli
shrb
int
ret
in
xor
xor
cmc
or
rcrb
out
cmpsb
pop
mov
jecxz
stos
adc
or
inc
dec
je
or
dec
xor
adc
clc
mov
mov
adc
call
push
and
imul
mov
push
push
mov
pop
adc
int
push
shl
sbb
mov
adc
fimuls
lea
sbb
add
and
adc
and
lret
push
adc
xchg
aas
or
sbbb
mov
mov
adcl
inc
mov
mov
add
and
mov
leave
push
popf
ret
xchg
lret
mov
dec
mov
adc
add
lcall
inc
mov
push
jg
mov
cltd
call
push
push
add
jo
clc
mov
int
dec
add
ljmp
inc
sbbb
fldl
dec
leave
daa
ret
fstpt
adc
push
push
arpl
push
or
dec
pushf
scas
add
dec
ljmp
xor
lret
adc
mov
rorb
rcll
repnz
xor
mov
adc
dec
pop
mov
mov
sub
and
enter
call
es
xchg
fisttpll
dec
pop
sbb
adc
cmpb
add
shlb
mov
lahf
push
jns
pop
sbb
or
shlb
adc
add
inc
sbb
test
aas
andl
dec
adc
mov
add
in
cmp
jle
mov
adc
push
pushf
push
adcb
adc
xchg
jg
js
into
incb
push
pop
adc
lods
lea
sbb
xor
lahf
push
int3
lret
push
inc
ficompl
pop
sub
shl
enter
cld
inc
add
movl
ss
mov
jle
cld
or
jmp
sub
jns
mov
mov
xor
andb
insl
mov
ljmp
push
jle
cltd
ljmp
or
imul
mov
test
das
mov
arpl
push
xchg
das
jecxz
cmp
shrb
add
sarb
pop
imul
cmp
or
sub
mov
fstl
add
mov
nop
and
int
enter
nop
inc
movsb
mov
int
or
add
enter
jo
lcall
and
cltd
enter
sahf
add
pop
outsb
stos
sbb
xchg
mov
in
stos
or
push
sbb
sub
xchg
movsb
mov
mov
xchg
push
jo
pushf
pop
push
and
jae
dec
sub
pop
mov
mov
push
icebp
aad
mov
les
bnd
or
mov
sbb
cmp
dec
xchg
pop
movsb
sbb
cmpsl
add
or
orl
mov
shl
push
int
rorl
pop
in
or
push
dec
mov
pop
in
or
jp
inc
and
add
xchg
add
je
sbb
js
push
push
jp
push
lods
inc
inc
add
sub
inc
add
scas
dec
aaa
adc
int
push
push
or
add
lock
rclb
push
les
fistps
add
lahf
mov
add
shlb
add
insb
cmp
pop
outsl
test
sahf
sbbl
jae
cmpsl
dec
es
inc
fbstp
push
xor
jg
and
mov
decl
add
and
lea
sbbb
pushf
repnz
lcall
pushf
adc
jns
mov
push
xor
rclb
pop
loopne
in
inc
xchg
push
sub
add
insl
jmp
cmpsl
testb
or
cmpsb
push
in
test
test
push
adc
xchg
sbb
mov
inc
dec
popa
and
loopne
movsb
sub
or
xor
or
lahf
xorl
fmuls
mov
out
add
pop
movl
and
jmp
mov
cmp
pop
adc
sbb
inc
push
pop
enter
jl
mov
pop
add
mov
dec
aas
pop
cmpl
jb
cmpsl
jbe
mov
mov
xchg
mov
stc
int
push
pop
inc
cmp
xorl
jmp
or
notb
imul
aas
sbbl
inc
in
pop
sub
popa
je
mov
or
aas
movsb
jge
push
xor
test
outsb
imul
insb
dec
ret
pusha
dec
aad
fstpl
jl
loope
jmp
pop
push
pop
and
pop
cmp
inc
cmp
jl
rolb
jmp
pop
pop
push
pop
push
rclb
iret
push
inc
sbb
push
leave
inc
cmp
jne
movsl
mov
jl
pop
lcall
sbb
xor
and
test
outsl
sbb
out
ficoml
loop
jne
inc
mov
jmp
ljmp
movsl
addl
jl
shlb
xor
pusha
ja
sub
push
jmp
jne
push
aaa
sub
in
pop
lods
pop
sub
js
ret
jl
test
mov
test
outsb
and
scas
jl
mov
enter
add
and
push
add
pop
fisttps
mov
push
mov
jmp
mov
xchg
mov
mov
or
xchg
xchg
xchg
stos
mov
and
stos
lcall
pop
or
push
dec
xlat
push
jge
add
js
sahf
addr16
push
jl
xor
mov
xchg
scas
rorb
mov
push
jmp
cmp
fs
mov
and
aam
xchg
dec
movsl
fcomp
loopne
cmc
add
idivb
out
subb
mov
xchg
lock
clc
or
jle
outsl
idivl
xor
or
dec
or
js
sub
ficoms
or
pop
dec
jl
push
imul
shrb
incl
dec
test
or
push
ret
aas
sub
pop
popa
lret
xchg
test
lods
fildll
dec
pop
jb
adc
les
ja
inc
lea
adc
inc
sub
ss
clc
inc
jne
subb
jmp
sub
or
dec
test
inc
and
mov
jl
dec
call
xor
mov
lret
or
mov
bound
xor
popa
xchg
movl
out
sub
insb
push
dec
insb
and
push
jl
push
je
or
scas
inc
sbb
inc
in
jno
lods
jne
sub
adc
adc
stos
je
jae
imul
ret
mov
inc
push
mov
adc
inc
mov
ret
daa
inc
add
cmp
outsb
dec
shrl
sub
dec
cmp
nop
push
sub
cmp
aad
xchg
xchg
inc
pusha
lods
in
xchg
lea
test
sbb
xchg
jl
mov
pushf
mov
mov
mov
call
popa
cmp
pop
and
movsb
fbld
imul
sbb
sub
push
cmp
push
xchg
push
push
mov
mov
xchg
sbb
cmp
adc
push
ficoms
push
dec
fs
int3
in
adc
push
jae
push
mov
inc
insb
jo
xor
idivb
jmp
sub
sbb
iret
movsl
adc
fsubr
xchg
jne
adc
mov
pop
sarl
das
adc
dec
ret
jns
cmp
pop
pop
jg
push
mov
into
sub
test
pop
mov
push
and
sub
push
mov
jp
iret
roll
insl
push
cmp
pusha
fsts
mov
pushf
xchg
dec
rorb
xor
test
out
imul
dec
fsubrl
loope
sub
push
or
aas
dec
mov
add
cmp
xor
xorb
pop
es
or
rcr
pop
mov
xor
xor
push
jae
and
rclb
jmp
movsb
adc
dec
push
and
sahf
addr16
push
jo
lcall
fs
mov
sahf
or
adc
test
shrb
stos
xor
movsb
cli
ret
mov
out
bnd
mov
out
pop
test
dec
ret
xchg
mov
dec
mov
lahf
push
out
shll
notb
add
lahf
xchg
push
mov
nop
fs
or
jle
je
add
mov
data16
pop
je
xor
test
xor
in
call
inc
sub
jl
movsb
xchg
push
push
mov
adc
sbb
and
sbb
pusha
pop
mov
sub
jmp
lahf
push
callw
std
inc
push
or
mov
mov
imul
cmp
pop
repnz
add
pusha
push
call
xor
push
or
test
jo
fisubrs
ret
pop
jl
jle
lcall
sub
cmp
jge
mov
inc
mov
mov
loopne
mov
enter
pop
push
push
push
je
sub
inc
xchg
push
mov
call
dec
into
push
lea
mov
iret
cmp
add
gs
dec
aad
inc
pop
inc
or
mov
inc
sub
jle
test
out
sbb
inc
mov
imul
out
addb
mov
push
xor
lods
add
xchg
or
pop
cmp
adc
mov
mov
dec
add
xchg
push
push
push
pop
int
push
loope
xchg
adc
inc
dec
mov
and
adc
and
mov
cmp
js
loopne
and
add
ret
addr16
fsub
mov
sub
outsb
adc
mov
adc
and
or
mov
mov
mov
inc
movl
addl
or
inc
testb
adc
xchg
jmp
dec
jle
dec
xchg
mov
fadd
in
call
adc
sbb
sahf
mov
mov
push
jo
movl
addl
test
cmp
bound
sub
lock
dec
mov
pop
jnp
dec
cmp
pop
data16
mov
sbb
pop
push
mov
push
ret
jae
jo
sbb
or
add
cmpl
subb
pop
xchg
add
push
xor
xchg
xor
js
and
inc
adc
js
addl
lods
sub
add
pop
in
fisubrs
fcomip
sti
or
sub
sti
mov
sub
sbb
push
cmp
stos
pop
dec
mov
out
push
test
or
clc
cld
mov
xor
scas
or
stos
pop
pop
or
adc
push
sbb
jmp
pop
movsl
and
sub
xor
xor
test
sub
inc
dec
dec
in
jb
push
push
pop
out
insb
mov
arpl
data16
push
cs
xchg
iret
xor
sbb
addr16
jmp
mov
mov
stos
jl
nop
xchg
or
aaa
repnz
lods
stc
inc
pop
sub
mov
mov
xchg
xchg
fxch
or
popf
xchg
xchg
xchg
cs
push
push
push
jns
mov
test
fsubr
loopne
in
dec
in
push
in
lock
clc
mov
loopne
loopne
loopne
repnz
push
cmp
adc
sbb
sbb
xchg
dec
in
and
sub
push
test
cmp
xchg
lret
inc
dec
dec
push
push
test
pop
pusha
xchg
lret
fs
cld
inc
sub
inc
adc
movsl
push
test
xchg
lret
xchg
xchg
cwtl
pushf
mov
movsb
cmpsb
test
lret
enter
mov
mov
mov
int3
adc
mov
mov
sarb
dec
add
xlat
mov
pop
and
mov
mov
dec
test
shll
xor
and
jns
enter
cltd
dec
mov
jl
outsl
cwtl
mov
test
push
push
icebp
sbb
push
mov
loopne
pavgw
mov
xchg
or
inc
sahf
push
sub
xor
cs
mov
and
leave
sub
jnp
jne
das
hlt
pop
pop
mov
enter
fistpl
sub
lcall
imulb
mov
jae
ret
sub
aas
sbb
or
fistpl
das
pop
sub
mov
cmp
loope
sbb
imul
sub
cltd
dec
cmp
clc
loopne
pop
inc
mov
int
imul
data16
mov
mov
movl
or
jo
or
sub
incl
and
les
lahf
ds
pop
rorl
mov
add
dec
test
test
add
sub
insl
xchg
sub
jbe
and
pop
xchg
add
add
ja
mov
push
sbb
push
shrb
inc
xchg
mov
sub
jnp
add
xchg
add
push
add
xor
jo
sub
ss
cs
daa
and
je
je
subb
adc
mov
jle
cmpb
push
xor
inc
xor
pop
adc
pop
inc
mov
push
push
adc
orb
testb
sbb
in
cmp
je
stc
cmp
mov
push
jmp
inc
addl
or
push
imul
adcb
mov
rorl
dec
dec
cmp
mov
je
push
xchg
testb
out
jmp
cmp
pop
pop
pop
je
pop
push
push
sbb
loopne
and
add
in
sbb
inc
sub
adc
loopne
fildl
scas
xchg
cmp
push
pop
xchg
les
into
and
dec
mov
dec
mov
xchg
cmc
jne
aad
xor
cmp
ja
xorb
pop
xchg
xlat
adc
lods
xchg
sbb
mov
pop
jmp
in
jne
ja
push
out
dec
imul
into
jmp
jg
jns
enter
cltd
cmp
cmp
stos
inc
push
cmpb
and
cmp
arpl
dec
enter
sbb
inc
cltd
sub
push
pop
push
add
and
add
cltd
lods
movsl
pop
into
je
push
adc
je
push
jo
adc
pop
call
subl
add
mov
ds
shll
sbb
shrd
pop
sbb
pop
jg
cmp
mov
or
or
or
push
ljmp
xor
or
mov
inc
enter
lock
and
add
cs
ret
bound
sub
sbb
mov
inc
js
bound
hlt
pop
push
cmp
sbb
adc
sub
dec
ss
xchg
mov
push
mov
dec
pop
adc
xchg
rolb
adc
clc
test
xchg
adc
roll
mov
xor
fadds
stc
je
scas
inc
or
inc
imul
adc
pop
jo
addr16
sbb
sub
js
mov
push
push
jmp
push
mov
sahf
cs
int3
adc
cmpl
loop
cmp
fst
je
push
orl
add
pusha
cli
cmp
popa
lds
scas
sub
mov
or
popa
mov
jmp
dec
popa
fstl
mov
sbb
sbbb
sub
push
faddl
sti
gs
push
sub
push
jno
adc
add
add
adcb
jg
adc
sub
push
stos
cmpb
mov
ss
inc
dec
adc
loopne
lock
pop
push
jg
lock
add
jb
pop
ljmp
inc
mov
cmp
push
pop
cmp
mov
arpl
or
or
daa
and
push
inc
pop
test
adc
or
in
rolb
add
cli
xchg
rorl
mov
js
daa
push
stos
dec
mov
add
jo
adc
mov
add
or
sub
mov
lahf
inc
je
call
and
cmp
shl
call
mov
push
mov
inc
xchg
pop
dec
pop
or
enter
inc
and
and
pop
add
pop
adc
std
repnz
add
decl
pop
jne
cmp
xchg
push
mov
inc
xchg
dec
or
movl
add
push
dec
inc
sbbb
mov
cmp
aas
mov
cmp
sub
pop
mov
je
xor
outsl
ret
jg
aad
nop
jp
scas
dec
add
or
adc
dec
and
mov
adc
movsb
or
add
subb
pop
cmp
pop
lret
add
adc
sbbb
and
or
leave
adc
ret
sar
push
orl
adc
cmovo
and
sub
sub
inc
and
mov
ret
jp
and
and
faddl
add
sbb
and
xor
mov
rolb
xchg
fmuls
cmp
inc
test
inc
sbb
pop
dec
pusha
dec
sbb
sbb
xor
je
cmp
add
scas
test
inc
std
insb
bound
aas
loopne
pop
dec
pop
push
mov
and
rorb
dec
mov
jb
mov
and
jb
push
enter
xor
pop
push
and
cmp
mov
add
xor
xor
push
sbb
pop
mov
jl
or
pushf
jg
cmp
jl
adc
push
jbe
loopne
push
in
pop
dec
outsb
je
pop
or
fldl
pop
call
iret
subb
xor
mov
inc
js
pop
xor
push
adc
jle
jge
mov
pop
inc
lea
lret
jge
adc
clc
xchg
fnstsw
int
push
or
pop
inc
sbb
fsubs
add
mov
cmpl
enter
jbe
add
lods
movsb
push
dec
xor
xor
imul
inc
xor
into
inc
adc
cwtl
dec
jne
into
je
rcl
add
sbb
mov
fs
inc
sbb
jmp
stc
mov
push
lds
adc
or
shlb
sub
inc
shlb
daa
or
clc
adc
leave
call
mov
stc
cmp
js
add
inc
and
and
mov
xor
mov
mov
jne
push
cmp
xor
lods
jb
inc
jb
enter
stos
add
adc
scas
mov
push
mov
fcompl
pop
pushf
push
add
mov
dec
jo
nop
add
xor
xor
lahf
xor
lahf
or
test
adc
rclb
pop
insb
sub
jo
pop
sbb
orl
adc
mov
xchg
or
out
push
enter
add
test
inc
mov
mov
mov
je
rorb
add
nop
lret
add
cmpsl
pop
push
add
mov
add
jo
out
fcoml
pop
xchg
sub
or
pop
aas
ror
shrb
aam
xchg
push
mov
aam
push
test
cs
push
dec
insl
loopne
hlt
dec
cmpsl
xor
clc
cmp
mov
inc
roll
rolb
cmp
inc
adc
push
adc
test
mov
fistpl
fwait
jp
lret
scas
shlb
push
xor
adc
jl
jne
idiv
dec
adc
inc
sbb
test
mov
sahf
pop
pop
lea
sub
mov
sbb
int3
mov
inc
les
or
pushf
mov
lret
mov
inc
push
pop
rcrb
fwait
lahf
std
leave
test
jmp
rcll
aas
mov
jecxz
push
repz
push
xchg
dec
xchg
fcoms
nop
lea
xor
adc
hlt
and
ds
push
push
shrb
or
sub
push
sbb
pop
aas
pop
or
and
sbb
loopne
mov
dec
push
pop
pop
or
adc
daa
xchg
inc
dec
test
push
push
add
xor
sub
xchg
add
and
je
sub
cmp
lcall
je
jmp
ret
pop
mov
add
jle
xchg
aas
jno
or
lods
pop
unpcklps
sbb
inc
pop
imull
push
cmp
jne
pop
inc
stos
loopne
pop
ds
orb
and
pmulhw
dec
test
test
cli
inc
jne
push
es
xorl
push
xchg
dec
rcrb
mov
sbb
add
jo
mov
adc
ljmp
push
jno
push
pop
pop
push
pusha
pop
or
push
test
repnz
les
lds
and
or
out
pop
add
insl
mov
mov
jge
ret
adc
movsl
mov
lock
mov
jb
or
or
out
insl
mov
add
push
dec
adc
push
pop
push
daa
or
cmp
and
pusha
adc
sub
inc
js
cli
test
fsubl
cmp
lea
rorl
dec
ret
and
push
pop
push
pop
out
mov
icebp
dec
scas
arpl
inc
rclb
add
xchg
movsl
mov
inc
add
fisttpl
dec
push
add
testb
test
cmp
pop
or
push
and
je
sahf
rclb
jno
xchg
push
mov
mov
mov
adc
iret
mov
ja
or
mov
and
jmp
or
mov
xchg
sbb
aas
neg
inc
push
push
push
jl
out
xchg
ljmp
and
xchg
cmpsb
jnp
iret
push
pop
mov
push
jbe
mov
out
clc
pusha
push
lea
or
jg
ja
and
iret
push
sub
add
and
nop
popa
sub
bound
jl
mov
pusha
int
push
pop
pop
mov
jo
lock
or
xchg
popf
add
push
es
sbb
add
aas
sub
icebp
je
sbb
pop
ret
add
je
and
inc
xchg
add
pop
push
or
xorl
mov
dec
test
xchg
mov
add
popa
rcll
add
push
add
cmpsl
fsubr
push
fs
xchg
or
lds
popa
add
adc
mov
push
xor
lea
pushf
sbb
arpl
ret
cmp
insl
jmp
inc
bnd
lea
mov
dec
test
pop
adc
cmp
push
test
xchg
push
iret
flds
lds
push
cmp
sahf
pop
inc
cli
sarl
cmp
inc
out
sbb
cmpsb
push
adc
push
inc
sbb
push
mov
jmp
mov
ss
in
jge
inc
and
pusha
xchg
scas
mov
jl
and
sub
orb
daa
mov
cwtl
test
push
inc
dec
pop
mov
jae
pop
pop
mov
add
lods
dec
xchg
jno
adc
push
add
mov
push
dec
add
xchg
sub
push
push
mov
and
sub
lods
mov
out
jbe
ja
sbb
and
xor
ds
dec
cwtl
or
loopne
xchg
sar
dec
xlat
push
jne
dec
inc
daa
lock
repnz
add
iret
mov
jne
or
pop
push
test
je
jecxz
push
or
mov
push
pop
and
ljmp
jne
push
fwait
js
mov
push
enter
pop
shll
mov
arpl
jno
sbb
call
add
xchg
dec
cmp
xchg
sarl
sbb
and
call
dec
orl
loope
setg
sub
push
jle
out
add
cmp
jne
and
ljmp
pop
in
xor
ficomps
push
mov
sub
rorl
adc
iret
adc
add
faddl
rolb
inc
sbb
rcll
xor
adc
push
inc
add
inc
insb
fimuls
ret
inc
mov
jge
lea
cmp
push
adc
adc
rorb
cmp
insb
inc
jp
clc
cmpsl
ds
movsb
jle
adc
pop
sbb
test
mov
cmpb
lea
add
push
jno
enter
gs
mulb
and
add
dec
or
orl
iret
mov
jnp
adc
andb
mov
lds
fstl
cmp
mov
loope
push
ret
xchg
push
ds
mov
les
icebp
in
sbb
push
jne
pop
pushf
and
in
fmull
mov
fisttps
fmull
adc
mov
icebp
sbb
lock
ret
jp
cmp
setle
dec
pop
and
dec
dec
sbb
jbe
test
dec
push
mov
jb
addr16
mov
xor
mov
daa
push
sbb
test
mov
fmulp
es
cwtl
lcall
mov
in
rolb
or
mov
fwait
repnz
es
rcll
jmp
mov
dec
push
jnp
add
mov
cld
add
and
push
jmp
push
int3
mov
dec
test
jne
xchg
and
add
loopne
mov
incl
mov
je
xorl
and
inc
mov
rcrl
fst
sbbb
adc
push
pop
sub
push
mov
jecxz
shlb
sbb
dec
sbb
pop
dec
push
icebp
loopne
pusha
dec
sbb
and
mov
shlb
adc
add
push
test
lea
sbbb
sub
inc
dec
push
cmp
xchg
arpl
pop
loopne
fadds
in
cmp
test
mov
push
inc
call
cmp
sub
lock
sub
je
cs
or
iret
pop
sbb
int3
sahf
pushf
hlt
sub
add
into
je
aas
push
vxorps
dec
repnz
pop
pop
jl
sbb
jecxz
cmp
scas
aaa
andl
xchg
les
dec
rclb
sbb
js
bound
mov
inc
push
test
inc
xor
shl
scas
and
in
rol
cmc
movsl
es
push
mov
mov
adc
or
and
adc
dec
xchg
mov
adc
fisubs
and
sub
push
flds
or
push
sti
or
pop
and
mov
push
stos
add
inc
jmp
adc
push
rcll
push
sbb
je
sub
mov
dec
pusha
or
pop
leave
add
or
push
adc
jp
insb
shrb
int3
push
sbb
pusha
loopne
push
icebp
xor
mov
and
cli
inc
jmp
lea
repz
add
xchg
or
sbb
pop
mov
mov
push
cmp
mov
push
je
pop
cmp
and
repz
or
push
or
cmp
mov
pop
cld
pop
xchg
xchg
hlt
add
ss
add
fcomps
pop
push
mov
test
mov
inc
inc
mov
fs
into
daa
stos
xchg
fldl
fldcw
adc
sbb
aam
push
add
sbb
mov
iret
fidivl
imul
inc
enter
adc
push
mov
fwait
mov
enter
add
dec
faddl
mov
inc
and
mov
or
les
loop
push
or
mov
rcrb
lcall
test
pop
fwait
inc
or
push
enter
dec
adc
jo
test
inc
sahf
bound
mov
push
cmp
int
cmp
out
shlb
pop
push
gs
cmc
pop
add
je
mov
cmpsb
pop
aas
push
sub
inc
push
mov
sar
popf
jnp
scas
mov
push
lcall
arpl
lret
fimull
inc
and
jg
add
js
and
mov
and
push
das
xchg
mov
fisttpll
mov
test
jmp
dec
mov
or
mov
dec
mov
es
cmpsl
add
push
adc
and
push
call
inc
sbb
js
fists
jo
cmp
and
and
dec
pop
cmp
loope
pop
or
adc
and
sbb
adc
test
je
repnz
aad
and
shll
icebp
add
add
aad
jne
lock
push
mov
xor
repnz
mov
inc
sbb
loopne
data16
aas
mov
and
or
jmp
lea
jne
mov
inc
enter
push
movsl
cmp
pop
adc
leave
push
ret
inc
adc
sbb
fildl
sbb
insl
out
add
mov
pop
pop
mov
test
daa
mov
dec
adc
daa
lock
loope
cmp
nop
mov
pop
xlat
sbb
in
pop
cmp
adc
dec
outsl
fimuls
push
or
sbb
rcrl
movsl
repz
mov
adc
push
jp
cwtl
xor
mov
es
ds
push
scas
inc
ja
adc
dec
xor
dec
out
fstpl
mov
add
cmp
cs
mov
push
dec
pop
dec
jne
aaa
sahf
add
inc
xchg
pop
push
jl
xchg
rol
or
add
jno
loope
adc
inc
mov
mov
add
outsb
aas
ds
je
push
ja
inc
imul
lea
or
lret
sub
dec
les
jo
add
sbb
dec
fistpll
sbb
xchg
sbb
or
rorl
js
por
jle
testl
jo
inc
dec
jo
xor
in
gs
lahf
aam
mov
aaa
mov
shll
sbbl
lea
addb
add
enter
xchg
fimull
add
dec
pusha
orl
and
push
ffree
aas
jo
xchg
cmp
cmpsl
sub
icebp
inc
cmp
jno
mov
push
dec
add
aam
and
adc
cs
daa
in
xchg
subb
xlat
adc
and
dec
mov
pop
lret
sbb
lods
insb
and
dec
dec
pop
fs
cmpsb
fs
cwtl
fs
dec
cmpsb
lods
test
add
xchg
test
pop
fcoms
xchg
cwtl
clc
or
push
jb
add
outsl
bound
and
rorl
je
mov
cmp
sbb
fs
pop
sbb
xchg
and
mov
sub
pop
mov
mov
xchg
cmp
repnz
test
ds
mov
pop
push
push
stos
xchg
outsb
les
int3
rcrb
andl
mov
mov
incl
mov
jge
dec
je
loopne
and
and
xchg
lret
in
or
call
jns
sbb
jb
adc
or
cwtl
xchg
mov
lods
mov
mov
or
sbb
add
int3
xor
sub
aam
and
aam
bnd
adc
xor
pop
sar
push
cmpsl
mov
sbb
or
mov
xbegin
inc
sub
cmpsl
lds
loope
mov
mov
rol
fbld
repz
sbb
aas
shlb
out
or
nop
dec
stos
xor
loope
dec
cmp
inc
test
mov
in
fadd
fisubs
sub
fistps
sbb
xchg
pushf
inc
imul
sbb
xor
sti
cmp
les
std
imul
cmpsl
and
pushf
xor
add
test
pop
pop
push
xchg
pop
enter
mov
daa
pushf
inc
sbbb
pop
jb
jl
mov
nop
jmp
jne
dec
cmp
jno
sub
sub
jb
and
dec
jb
and
adc
daa
pop
and
or
add
jb
jle
adc
shl
inc
fmull
sub
in
jno
fmuls
cmp
jb
es
outsb
sub
or
inc
dec
push
jo
pop
inc
dec
push
in
dec
or
in
xor
and
dec
sbb
mov
jge
jne
iret
inc
and
pop
and
or
adc
in
add
cmp
or
pushf
fsubrl
aam
add
or
cmp
mov
or
jle
jp
ja
pop
xor
adcb
mov
push
aad
add
dec
out
pop
adc
sbb
out
add
mov
enter
adc
inc
adc
jno
or
inc
call
aas
test
cmp
jne
pop
and
nop
sbb
pop
mov
js
fisttps
mov
cmp
rcrb
addb
test
cld
lret
pop
scas
push
ja
inc
sub
test
daa
mov
xor
xor
lea
negl
sub
lea
aas
push
or
push
cmp
cmp
arpl
push
sahf
xchg
daa
mov
dec
add
push
sub
push
inc
inc
and
or
mov
inc
in
cmp
addb
sub
mov
ret
mov
mov
mov
ss
add
dec
daa
jno
scas
adc
xor
das
adc
pop
push
sub
add
push
les
fs
xor
xlat
bound
mov
mov
rorl
loop
add
mov
das
mov
jns
pop
inc
shlb
xor
je
xchg
push
push
inc
inc
test
xchg
ja
inc
sbb
insb
lret
xchg
mov
push
dec
xchg
pop
mov
inc
jle
lock
sbb
dec
insb
xchg
call
sbb
pop
sbb
sub
in
add
jne
ja
std
xor
rcl
fdivrl
clc
je
mov
out
xchg
daa
pop
push
lea
push
mov
arpl
fmuls
rcl
push
movsl
xchg
sti
test
add
xor
out
push
xor
push
icebp
pop
pop
mov
mov
inc
sbb
sahf
cwtl
dec
push
or
xor
les
outsl
pop
das
clc
pop
in
push
daa
xor
cmp
dec
pop
outsl
sbb
jg
stos
lahf
adc
dec
outsb
or
cmpsl
fiaddl
sub
int3
jne
and
pop
mov
push
adc
pop
popa
sbb
clc
and
sbb
xlat
shrl
adc
cwtl
outsb
xlat
pop
push
inc
sbb
push
mov
outsl
or
lods
js
stc
ret
xchg
push
pop
rcrb
imul
cmpsl
outsl
pop
mov
dec
push
or
ss
pop
scas
push
push
cmp
mov
push
add
push
cmc
cmp
inc
sub
and
push
rol
mov
int3
cmpsb
imul
push
jl
add
mov
cmpsb
add
decl
push
xlat
adc
xor
dec
incl
inc
and
bound
dec
mov
sarb
adc
xchg
ljmp
push
call
inc
out
adc
call
mov
pop
jne
sbb
sub
ss
test
mov
xchg
mov
outsl
mov
pop
adcb
mov
mov
mov
jp
push
sub
inc
aas
in
pusha
mov
ja
add
adc
insl
clc
mov
lock
pop
lea
sbbb
popa
pop
das
xor
sbb
mov
addr16
into
jno
aad
icebp
add
outsl
push
jle
test
pop
add
ret
lock
push
xchg
mov
inc
cltd
push
add
pop
stc
out
imull
mov
pop
or
push
jmp
outsl
dec
cmp
aaa
pop
lods
jo
stos
cmp
ja
adc
out
inc
push
sbb
sub
xchg
adc
es
adc
xchg
cmp
es
imul
sub
loope
test
lea
add
ret
pop
jle
pop
add
or
pop
ret
lods
pusha
enter
inc
ljmp
cs
out
notb
jo
push
or
ret
cmp
fistps
jo
sbb
sub
mov
out
fistpll
mov
cs
jg
loope
jae
lea
imul
in
mov
adc
jne
cmp
sbb
fsub
inc
out
push
pop
mov
cmp
adc
xor
cmc
ret
lods
rcll
mov
mov
cmp
and
scas
push
push
xlat
sbb
cld
or
fsubrs
jecxz
nop
pop
add
push
mov
and
test
and
xchg
addl
sub
cmp
sub
xchg
add
stc
xor
addr16
add
sub
sbb
push
sbb
daa
sbb
xor
js
in
jl
lock
in
or
pop
cld
insb
shl
mov
push
ja
ffreep
jmp
push
imul
pop
add
test
jecxz
fiaddl
and
fmuls
daa
es
mov
out
ss
dec
mov
outsl
cmp
js
inc
xor
push
call
or
push
js
lods
mov
pop
out
pop
or
xchg
and
loop
add
cmp
or
or
aam
shl
fnstenv
mov
mov
adc
xchg
scas
xor
jmp
dec
or
lods
and
in
fmull
jle
xchg
rorb
adc
es
fisttps
jecxz
sub
or
push
push
adc
jp
mov
lea
mov
lahf
rclb
sar
add
pushf
lock
clc
es
cmp
lea
adc
cli
xor
cmp
cmpsb
mov
xchg
imul
into
lcall
jb
or
adc
inc
adc
pop
add
adc
or
test
mov
fnstenv
cmpsb
lahf
inc
jmp
push
pop
adc
push
imul
jns
sbb
fs
sbb
nop
and
fwait
cmp
mov
xor
testl
inc
loop
push
out
lcall
xor
out
sahf
mov
in
cmp
enter
xchg
sahf
enter
fucom
jns
dec
pop
lahf
cld
dec
ds
sarl
push
mov
xchg
repz
push
pop
inc
and
aaa
repz
idivl
cltd
push
pusha
jb
stos
xor
neg
mov
clc
or
cmp
out
shll
sub
jne
lea
shrb
push
xchg
lock
push
sbb
mov
push
or
fs
and
lock
daa
mov
xor
adc
ficoms
arpl
out
add
shrb
and
lods
inc
push
push
pop
push
decl
push
mov
arpl
dec
mov
pop
xlat
or
fwait
das
push
lret
push
filds
jns
adc
pop
mov
aaa
arpl
sub
and
sbb
jno
sub
stos
cmpl
adc
cmpsb
test
add
int3
movsb
push
insl
mov
xlat
arpl
es
mov
add
sbb
testl
and
push
mov
mov
mov
xor
lret
movsl
pop
or
add
fistl
sub
cwtl
or
jmp
adc
sub
mov
jbe
gs
dec
cmpsb
xchg
in
mov
fwait
sub
xchg
mov
std
in
mov
pop
mov
dec
pusha
push
iret
push
dec
mov
mov
dec
mov
insl
and
aam
push
dec
hlt
ret
mov
mov
jo
mov
jo
dec
jnp
xor
jmp
test
int3
dec
or
mov
fs
cmp
cmp
cmp
adc
pop
addb
aas
es
insl
arpl
rorl
sbb
jb
rolb
sbb
addr16
imul
push
test
aas
add
push
icebp
pop
xorb
lea
das
ror
dec
adc
mov
int3
add
add
jl
mov
and
pop
jne
push
and
cmpsb
dec
insb
test
push
cmp
cmp
adc
cwtl
sbb
mov
push
adc
xchg
ret
adc
aas
mov
jns
jns
fmuls
insb
jmp
sub
jmp
add
aam
xchg
ljmp
cmc
aam
jne
mov
insl
sbb
or
pop
push
ss
pop
sub
in
mov
mov
push
xchg
scas
lea
mov
sbb
sub
sub
xor
xlat
rcl
lcall
addb
in
aam
je
adc
push
push
push
jmp
xchg
lea
pop
or
and
push
test
pop
sub
jo
ds
xor
loope
adc
push
cmp
mov
jne
mov
push
mov
pop
rolb
jo
dec
movsl
sbbb
push
pop
inc
dec
xchg
add
inc
push
and
pop
or
rcll
push
xchg
les
pop
or
adc
mov
jo
push
jne
lret
pop
les
lcall
pushf
and
dec
data16
pop
or
pop
bound
xorl
sub
mov
pop
push
out
sbb
or
fs
push
mov
sbb
je
mov
and
jns
sbb
xor
loopne
je
mov
mov
sbb
sbb
aas
int3
jle
sub
shlb
sti
push
push
out
add
scas
call
mov
jae
movsb
mov
aas
sbb
scas
or
mov
adc
ror
sbbb
pop
and
mov
sarl
dec
sub
int
and
mov
js
fcoml
push
dec
mov
adc
adc
cmp
adc
push
adc
shr
jb
jno
ljmp
stc
enter
or
sub
jbe
mov
xchg
cmp
out
push
mov
bound
imul
nop
mov
test
mov
rcrl
jmp
mov
jl
ret
cmp
sbb
cmp
sbb
jns
je
jle
and
add
or
movl
push
mov
jle
mov
push
or
es
jmp
test
push
imulb
je
pop
ja
and
stos
das
lods
subb
popf
enter
adc
and
fsubl
loopne
sub
push
rolb
sbb
sbb
insl
mov
mov
dec
pop
leave
xlat
and
jmp
and
ret
dec
xchg
fsubs
push
mov
cs
mov
sbb
push
push
cmp
push
orb
lcall
mov
pop
sub
pop
mov
xor
xor
je
xor
sbb
popl
loop
rcl
js
je
pop
and
push
or
dec
and
loop
or
dec
sahf
sub
in
add
lret
mov
movsb
and
and
shlb
lret
shll
out
push
sub
and
in
add
clc
inc
insl
je
outsl
jmp
mov
rorl
lds
loope
adc
mov
push
dec
inc
adc
push
shrb
jns
lods
iret
mov
fsubrs
jl
sbb
lock
push
lods
fcmovu
das
adc
movsb
xor
xchg
js
jg
fadds
lock
pop
repz
pop
sbb
jmp
leave
repz
push
insl
pop
sub
cmp
sub
pusha
fiadds
jmp
push
dec
cmpl
addr16
add
cmp
jg
jmp
and
and
inc
gs
aas
push
leave
loop
aaa
push
mov
xchg
movsb
js
ficompl
orl
mov
fdivs
jnp
cmp
fmull
and
jl
movsl
add
jbe
stos
sbb
pop
push
sbb
outsl
sbb
xor
inc
pop
jge
sbb
js
ret
and
ja
cmp
push
pop
jl
iret
mov
clc
and
fisttpll
push
push
or
or
mov
push
push
jmp
xor
adc
lahf
inc
lret
inc
test
and
je
lea
sti
sub
lea
pop
mov
inc
enter
sub
jmp
sub
jmp
mov
scas
adcl
push
pop
sbb
imul
push
dec
push
dec
sbb
rorb
mov
add
cmp
pop
push
xor
jo
jle
push
push
jge
mov
jge
jmp
lret
xchg
mov
add
inc
bound
xor
jmp
idivl
icebp
lock
loopne
pop
add
adc
mov
dec
neg
sbb
and
mov
push
inc
adc
push
cs
jl
lcall
add
dec
sub
fcmove
mov
push
loope
dec
das
push
scas
jns
add
jmp
fistpl
and
mov
mov
shr
rcrb
sub
rclb
gs
mov
jle
push
push
movsl
xchg
imul
xchg
orl
and
sbb
cli
push
pop
jmp
lret
mov
sahf
mov
in
or
les
dec
insl
adc
das
nop
test
popa
xchg
mov
pop
jp
imul
fidivs
lret
rcrl
xor
inc
loopne
arpl
test
cmp
mov
cmp
ja
mov
pop
jbe
dec
and
adcb
pop
pop
xlat
inc
cmp
jne
push
icebp
xor
cmc
les
push
and
dec
add
xchg
adc
push
jbe
sbb
leave
push
mov
adc
push
fidivs
push
rorb
pushf
pop
sub
xchg
mov
add
jae
icebp
xchg
nop
jg
push
and
or
icebp
jne
mov
mov
ret
std
or
mov
pop
inc
mov
lret
or
mov
add
movl
dec
or
and
add
jle
jne
cmp
daa
and
fsubrl
jge
pop
and
mov
ret
push
in
xchg
mov
movsb
shr
sub
out
test
loope
push
addb
xor
jns
aaa
pop
inc
sub
mov
sbb
xor
inc
cs
ja
inc
pushf
test
jp
les
dec
pop
pop
into
sbb
inc
cmp
jl
in
pop
and
adc
and
pop
pushf
mov
adc
xchg
popa
and
adc
or
dec
dec
aaa
aam
inc
dec
mov
lea
mov
int
outsb
mov
ret
mov
xchg
mov
add
or
in
sbbb
push
sub
add
xlat
jne
mov
jge
stos
dec
xchg
inc
xchg
adc
cmpb
pop
mov
push
pop
lods
jns
add
sahf
adc
cmp
jbe
cmc
pusha
jmp
or
jns
xchg
push
mov
adc
adcl
mov
lahf
testl
add
movsl
add
nop
mov
adc
in
sbb
test
pop
scas
mov
or
jg
xchg
adc
and
sbb
xor
fcomp
inc
adc
adc
adc
pop
jb
cmc
sarb
add
dec
fs
jecxz
fmull
jnp
testb
push
lea
sub
or
or
outsl
jp
push
addb
push
fiaddl
push
jle
xchg
adc
adc
loopne
xorb
out
add
jne
inc
call
pop
mov
inc
add
push
pusha
inc
rclb
dec
repnz
cmc
shll
or
lahf
xchg
je
jnp
inc
dec
inc
sub
or
pushw
sahf
incl
cmpl
je
mov
sub
inc
divl
sub
lods
lea
push
movsl
imul
stc
push
push
mov
pop
jne
call
sbb
jbe
xor
inc
push
push
cmp
fcmovbe
es
ljmp
or
enter
nop
xor
add
ficompl
add
xor
push
inc
mov
sbb
mov
andb
js
jo
xor
pop
pop
add
outsb
jl
cmp
and
adc
push
pusha
or
loope
xor
icebp
lock
or
loopne
inc
adc
push
std
call
or
inc
xor
mov
and
je
add
in
adc
and
jg
rcl
adc
imul
push
cld
cmp
add
inc
cmp
push
aam
mov
mov
stos
pushf
loop
pop
cwtl
cld
imul
add
push
cld
lds
dec
xor
xor
or
or
gs
js
mov
movsb
sbb
mov
sbb
push
mov
pop
push
sub
lock
add
xchg
and
mov
pusha
mov
movsl
movsl
sub
mov
adc
mov
xor
test
xorb
es
xchg
loope
es
xchg
push
jle
push
pop
outsl
push
xor
hlt
jne
and
mov
push
add
jle
cwtl
lds
ljmp
enter
fs
testl
xchg
cmpsb
arpl
xchg
sahf
scas
mov
inc
xorl
pop
push
addb
mov
push
add
lock
cld
adc
add
push
mov
dec
add
or
in
mov
cmp
ret
xor
or
jecxz
lods
dec
dec
loopne
jmp
cmp
adc
jmp
add
test
movl
rol
jmp
sub
push
push
aad
loope
inc
daa
mov
out
rclb
movsb
adc
pop
lea
xchg
push
out
mov
jge
jne
sub
add
add
fmull
stc
mov
rcll
ret
popa
xor
mov
sarl
outsb
mov
orl
cmp
xor
pop
pusha
test
sub
adc
fisubrl
scas
pop
sbb
sbb
cs
and
sbb
pop
push
inc
aaa
add
pop
pop
nop
fsubl
pop
loop
out
ret
aam
add
ss
sbbl
xchg
in
add
fmuls
pop
gs
cmpsb
xor
cmpb
jne
or
mov
in
push
les
imul
sbb
xor
roll
ljmp
xchg
or
les
lock
bound
and
ja
insb
pop
mov
dec
adcl
pop
pop
movsl
push
loopnew
nop
insb
mov
orb
pop
jl
add
inc
cmpb
cmovo
push
cmp
pop
mov
or
xor
push
sbb
notl
call
push
fs
mov
js
xor
enter
adc
movsl
loopne
bound
mov
inc
or
push
sbb
mov
cmc
mov
nop
dec
pop
jnp
aaa
inc
sub
pop
lret
push
add
cwtl
mov
push
or
lock
and
mov
pop
arpl
fisttpll
inc
push
and
adc
adc
push
faddl
cs
add
jl
ret
sbb
add
fidivrl
enter
cltd
jmp
mov
push
mov
daa
mov
or
data16
fsts
pop
jns
fnstcw
xchg
jns
out
in
fsubrs
and
cmpl
adc
enter
neg
movsl
mulb
jl
lret
pop
inc
cltd
fcmovu
daa
test
mov
sub
pop
cmp
jl
fcompl
push
push
push
or
push
icebp
xchg
push
inc
fwait
pop
xor
mov
lea
xchg
pop
jb
xor
adc
pop
and
repnz
js
loopne
xor
pop
mov
jnp
inc
adcl
in
fs
je
sbbl
or
pop
ret
mov
sub
clc
sbb
idiv
sbb
add
mov
inc
sarl
es
dec
add
sbb
or
incl
add
xchg
fcoml
mov
or
xchg
xchg
inc
inc
fcoms
lea
pop
test
subb
push
xchg
lea
mov
push
out
std
repz
rclb
push
push
or
stos
shll
and
pop
sbb
fldl
inc
dec
or
out
ljmp
es
ret
int
mov
or
cmpb
sbb
movl
sub
and
fists
cs
jns
push
xor
inc
cmp
push
cmpsl
mov
aam
rcl
dec
int
jge
mov
mov
aam
pop
ljmp
mov
jo
jge
mov
lea
mov
xchg
loopne
add
repnz
add
in
loope
xchg
or
icebp
fimuls
loop
push
int
jmp
push
rorb
pop
fwait
in
adcb
jg
je
cmpb
cld
add
mov
cmp
jmp
adc
jbe
fsubl
mov
iret
xchg
stos
inc
es
adc
call
jnp
dec
xchg
lahf
ret
xchg
ds
insb
sbb
and
das
pop
adc
xchg
xor
call
out
test
bound
rorb
lods
loope
push
or
rcrb
xor
and
push
sbb
xorl
sbb
pop
mov
push
xchg
push
repz
and
push
rclb
or
dec
jbe
scas
dec
jne
or
sub
pop
sub
je
push
dec
cmp
or
outsl
mov
fisttps
pop
aas
sbb
faddl
adc
mov
outsl
push
sbb
mov
sbb
movsl
testb
sub
aaa
mov
adc
push
add
orb
cmpb
jp
mov
in
and
push
stos
add
lods
and
or
insb
cmp
xor
sub
push
push
test
pop
and
cld
ret
inc
test
or
mov
aas
jne
aad
in
push
imul
push
or
xor
js
rcrb
into
dec
sbb
xor
push
add
loope
in
or
jne
push
imul
mov
lods
aad
jae
test
inc
xlat
int3
ret
aas
and
push
adc
call
dec
cld
sbb
and
inc
mov
call
mov
sub
mov
xlat
mov
or
mov
mov
out
call
mov
jmp
sbb
sub
andl
fcoml
shlb
pop
rcrb
mov
jns
repnz
adc
stc
cmp
out
movsb
add
mov
xor
ret
push
xchg
sbb
ret
andl
inc
dec
fstl
insb
pushf
jbe
xor
fmull
aas
mov
adc
cs
fadds
inc
xchg
add
outsb
xchg
fmuls
xor
addb
and
xorl
inc
ds
add
cmp
ret
lods
mov
mov
in
push
adc
cmpb
inc
testb
jl
mov
or
aad
mov
xor
repz
push
in
into
lock
jge
fs
or
bound
movsb
and
shr
xchg
clc
push
add
loope
loope
cs
bound
jl
in
add
push
sbb
jae
call
test
test
push
adc
push
and
adc
push
loop
testl
mov
hlt
sub
pushl
pop
test
les
or
aas
in
push
push
insb
or
jns
movsb
in
insb
sbb
shld
mov
adc
cld
cld
stos
jnp
jns,pn
add
mov
sub
scas
xchg
nop
ret
jl
stc
ret
outsl
das
mov
xor
mov
xchg
inc
out
mov
adc
mov
aas
lret
pop
int
sub
cli
addr16
mov
xor
adc
mov
mov
mov
or
ret
icebp
movl
sub
test
mov
fmuls
call
cmp
push
adc
es
js
add
dec
dec
xlat
adc
mov
or
clc
js
mov
aad
and
test
leave
mov
adc
mov
mov
xor
fidivl
sub
inc
and
and
enter
sahf
jp
jae
icebp
add
loop
dec
cwtl
inc
xchg
or
das
test
sub
and
sub
mov
adc
adc
mov
aaa
push
sbb
sbb
pop
mov
dec
out
aam
add
inc
or
mov
add
mov
and
adcl
or
daa
push
lock
in
push
inc
cmp
xor
cmp
hlt
jns
jp
add
arpl
call
cmp
dec
movsl
cmp
je
cmp
adc
lds
je
add
dec
fwait
jne
jmp
test
push
pop
mov
or
xor
mov
jle
xor
adc
ds
test
dec
add
ds
or
mov
pop
sub
adcl
xor
adc
ret
pop
cltd
js
push
lea
cmpl
aad
and
jp
or
add
or
je
pop
lods
lea
push
aam
shll
inc
mov
jne
add
sub
jne
push
push
ficoms
sub
mov
xchg
test
xchg
dec
jne
cmp
adc
sarl
iret
mov
push
roll
lds
adc
leave
jle
pushl
bound
test
movsb
pop
roll
push
pop
ss
or
xchg
add
addl
inc
sahf
lods
or
pop
testl
in
pop
in
mov
mov
pop
sub
ss
addr16
xchg
sbb
add
cmpsb
jae
lea
xchg
out
mov
cwtd
mov
mov
pop
xchg
jmp
and
cmc
movsb
cs
cmpl
mov
adc
jg
pop
dec
or
stos
lock
repz
jle
jno
adc
lods
jecxz
mov
add
pop
pop
push
outsl
sbb
adc
push
dec
ficoml
fcompl
cwtl
sbb
rcr
cmp
push
push
inc
or
pop
pop
inc
and
popa
cld
xor
push
push
push
add
into
pop
jnp
lock
dec
mov
xchg
aad
jb
pusha
in
pushf
sub
adcb
pop
gs
jo
jbe
aad
xor
repnz
stos
and
call
enter
push
icebp
push
and
pop
sub
jg
pop
push
sub
lea
ljmp
adc
pop
and
int3
jge
add
lret
add
gs
push
movsl
sbb
xor
sbb
cmp
xlat
subb
push
xchg
imul
and
addr16
aaa
or
mov
dec
mov
mov
loop
add
pop
push
fwait
mov
push
inc
outsl
in
sub
pop
sub
push
and
aas
push
in
cmp
int
or
pushf
movsl
sub
adcl
orb
add
addl
aad
shr
dec
or
dec
mov
xchg
test
test
pop
test
ds
push
jnp
inc
test
or
pop
cmp
movb
sbb
jb
cmp
push
test
cmp
out
movsl
xchg
xor
push
push
fmull
cmc
mov
mov
or
subps
mov
dec
add
rclb
push
sub
xor
mov
and
sub
call
mov
pop
fcmovb
jb
cmc
shrl
mov
adc
sarl
inc
sahf
stos
scas
testl
inc
dec
push
ret
ljmp
iret
out
enter
jae
inc
je
add
ja
sub
jne
jae
gs
outsl
push
cmp
aad
div
push
add
les
fisubs
mov
imul
or
push
push
mov
or
or
test
jmp
and
add
fisttps
testb
notl
xchg
jmp
add
cld
xor
sub
sub
pusha
mov
mov
inc
or
pop
pop
cmc
dec
popa
sbb
adc
or
xchg
mov
inc
aas
push
adc
pop
imul
push
mov
xchg
imul
in
cmp
pop
add
jle
or
sbb
das
pusha
inc
mov
add
pop
inc
push
xchg
loopne
imul
or
add
xchg
push
xor
xchg
inc
and
add
cmpb
mov
sub
bound
std
xchg
jne
je
lcall
lods
push
push
lods
dec
sub
cmp
adc
push
sub
movsl
jmp
iret
and
adc
push
push
inc
inc
inc
shrb
cwtl
cli
mov
mov
loopne
mov
and
or
add
mov
cmp
idivl
outsb
and
xor
mov
mov
sub
or
rcrl
and
in
ret
inc
mov
es
adc
pop
lods
sub
stc
sub
adc
in
stos
adc
jl
push
fldt
out
inc
dec
test
mov
cmp
dec
dec
mov
mov
mov
std
push
mov
ror
fidivrs
sbb
add
loope
imul
addb
adc
shr
or
shll
sbb
pop
loope
push
push
fwait
ss
push
movsb
mov
and
sar
adc
jmp
movswl
mov
fwait
mov
inc
loope
addr16
dec
cmp
adc
push
lahf
aad
sbbb
pop
bswap
in
fs
ja
out
cmp
push
insl
push
scas
push
sarb
js
iret
mov
add
add
add
add
add
add
into
sahf
inc
rolb
imul
jns
cmp
fildll
andl
cmpsb
cltd
stos
movsb
aaa
jno
add
fdivrl
inc
sub
xor
add
pop
pusha
sbb
xor
or
adc
cmp
subl
dec
inc
mov
adc
mov
pop
aam
cmpsb
push
dec
aad
clc
xchg
jecxz
out
insl
mov
cmpsb
push
pop
orl
xchg
bound
mov
xchg
sti
adc
jge
mov
adc
outsb
push
push
aam
xchg
stc
xor
popf
pop
mov
cs
or
cwtl
inc
stos
pop
mov
pop
sbb
mov
dec
ja
js
cmp
int3
inc
xchg
sub
pop
cmp
jle
sbb
loopne
add
aam
mov
je
dec
add
or
dec
push
mov
stc
push
jp
push
adc
shll
push
mov
lret
test
cltd
mov
adc
pop
and
lret
in
add
sbb
add
or
insl
sub
aaa
pusha
add
or
cmpsb
or
lock
adc
getsec
dec
ss
push
mov
scas
inc
pop
pop
jmp
push
aam
cs
push
maxps
aam
mov
out
cmp
or
pop
dec
cmp
pop
jns
popf
mov
daa
cmpsb
pop
inc
jl
mov
sbb
push
out
pop
mov
outsl
xchg
push
adc
sahf
out
sahf
xor
mov
jo
frndint
testl
add
ret
in
cmp
sbb
push
pop
movsl
loope
push
pop
xchg
and
ret
mov
mov
lret
jno
add
xchg
ds
mov
movsb
ds
test
cmp
jne
sub
out
incb
dec
cmp
movsb
subl
sbb
fisubrs
movsl
mov
mov
jmp
or
inc
roll
ret
test
push
xor
push
sbb
xor
adc
je
and
inc
cmp
jl
xchg
jo
push
push
dec
je
paddq
mov
movsl
xchg
jl
mov
push
xor
fs
adc
push
dec
stos
cmp
or
xor
clc
les
sbb
cmpb
inc
mov
daa
pop
adc
push
xacquire
xor
and
mov
add
pop
movb
mov
gs
cmp
xchg
ds
popf
shr
mov
inc
pop
movsb
into
test
xor
add
push
adcb
xorl
and
out
jns
mov
mov
sarl
imul
xorb
cmp
dec
cmp
xor
mov
std
push
xchg
adc
shlb
push
xchg
je
mov
aad
and
or
push
dec
cmp
adc
dec
push
outsl
cmp
cld
xor
sbb
lea
or
sub
xlat
lock
mov
pop
addb
sbb
push
frstor
rclb
in
std
jmp
and
repz
push
movsb
bswap
and
or
pop
int
add
pushf
mov
add
mov
sbb
jmp
lret
sbb
xor
jae
sti
sub
mov
ljmp
inc
std
push
lahf
rcr
add
mov
enter
sahf
cwtl
add
aaa
jle
add
inc
and
inc
or
call
dec
out
jp
nop
sub
sub
jno
push
aam
xchg
adc
lcall
or
push
adc
mov
jmp
dec
lods
out
sbb
dec
xor
adc
mov
shrb
push
sub
push
lea
or
fwait
sbb
out
or
lods
mov
push
test
insb
test
sub
sbb
fdivrs
push
sbb
xchg
adc
pop
clc
popa
xchg
inc
sbb
xchg
mov
cmc
cmp
test
pop
rcrb
in
push
cmpl
mov
xor
add
dec
sbb
sbb
pop
jp
sub
sub
xchg
inc
sub
push
loope
andl
mov
rolb
jge
scas
aad
test
aam
or
in
add
cmc
sbb
hlt
and
out
push
cwtl
add
cmp
iret
int
mov
push
mov
lock
cmp
or
push
mov
stos
adc
sbb
or
xor
aaa
stc
add
mov
or
test
push
inc
scas
adc
sub
lahf
rolb
add
int
xchg
mov
insl
mov
aaa
leave
ljmp
and
fidivrl
popa
leave
add
xor
mov
loope
xchg
ljmp
mov
lods
ja
xor
xchg
and
dec
lret
sub
xor
mov
adc
mov
in
push
pop
dec
cmp
pop
and
gs
jle
mov
xor
adc
sbb
addl
sbb
sub
lcall
popa
mov
pop
fmuls
xchg
popa
enter
popf
cs
fstpt
adc
jbe
sbb
pop
cmpsb
int3
cmp
in
mov
and
outsb
jle
mov
mov
lret
test
jne
pop
dec
push
icebp
xchg
or
fs
sbb
sbb
mov
adc
aad
in
fisubl
hlt
adc
addl
pop
aaa
adc
je
pop
inc
inc
mov
mov
shl
pop
mov
in
xor
test
ret
enter
je
jg
sbbb
pop
xor
push
insl
loopne
arpl
push
aam
ret
loope
pop
adc
lods
filds
adc
fsubl
cmp
inc
push
decb
xor
push
inc
neg
sbb
and
xchg
mov
stos
push
shlb
jle
out
pop
test
ret
inc
adc
pop
inc
adcl
or
mov
pop
xor
rolb
popf
add
sub
push
sarb
pop
test
sarl
mov
push
cmpsb
or
hlt
repnz
lock
add
sub
push
adc
pop
add
pop
jmp
movswl
add
mov
mov
pop
cmp
pop
test
cmp
mov
arpl
mov
pop
sub
push
inc
pop
imul
mov
sbb
dec
jp
ss
add
cmp
cmp
aam
xchg
cli
dec
inc
rcrb
bound
dec
inc
int3
loopne
add
push
cmpsl
mov
leave
mov
pop
or
pop
and
sub
xor
aam
push
cmp
pop
cmp
sub
and
adc
xchg
push
pop
scas
mov
mov
push
pop
jl
test
mov
cmp
pop
mov
sub
adc
sub
dec
pop
adc
dec
stc
cmp
adc
and
mov
sahf
pop
mov
cmp
push
mov
dec
push
cmp
add
sbb
pop
pop
lret
add
enter
dec
inc
cmpsb
xchg
push
push
cwtl
jl
dec
sub
cmp
cmpsl
adc
add
push
ret
js
ja
inc
cld
inc
mov
clc
add
pop
adc
push
std
hlt
aad
add
jle
dec
dec
dec
or
out
lds
cwtl
daa
fstps
dec
lods
pop
mov
inc
pop
dec
dec
xor
daa
cmp
sub
pop
sbb
stc
cmp
rcl
adcl
iret
mov
repz
jns
int
xchg
mov
mov
mov
inc
int
cmp
call
mov
cmp
mov
mov
mov
sbb
sub
and
sbb
and
sbb
or
xchg
and
adc
lock
shlb
int
cmp
add
adc
pop
fildll
add
sub
push
mov
inc
mov
lret
sub
xor
out
push
mov
xchg
pop
or
pop
pop
adc
or
add
enter
cmp
push
cld
adc
pop
xor
cmp
sub
push
movsl
push
pop
inc
repnz
dec
sub
jge,pt
mov
dec
xchg
arpl
mov
adc
fiadds
add
je
lock
cmpsb
test
inc
jecxz
jne
orb
mov
mov
or
fnsave
push
pop
inc
jp
mov
cmp
imul
addr16
shlb
jmp
mov
adc
lods
and
cltd
and
fwait
aam
loopne
add
pop
inc
imul
jmp
adc
or
lcall
jp
sbb
sbb
or
pusha
pop
xchg
push
out
push
arpl
mov
xchg
and
cmc
sub
xchg
test
dec
loop
xor
aam
jbe
movsb
or
adc
shlb
cmpsb
mov
mov
add
xor
add
cmp
dec
sti
inc
test
push
or
js
or
mov
or
adc
adc
call
add
add
or
sub
stos
aas
insb
add
inc
jmp
push
sub
nop
and
fisttps
xor
sub
fs
and
push
orb
div
add
push
in
jmp
push
cmp
mov
add
lea
dec
btr
mov
lahf
mov
fwait
add
xchg
outsl
es
addb
push
adc
bound
sbb
outsb
pop
jle
push
cs
xchg
sbb
jb
and
movsl
roll
sub
add
adc
sub
pusha
subl
push
or
fs
insb
jo
or
enter
in
test
adc
push
push
xlat
or
add
push
add
inc
cmpsl
mov
mov
add
repnz
fisubrl
pop
and
dec
cs
or
xchg
jg
aam
push
shll
and
pop
pushl
jnp
mov
ret
insl
push
or
inc
and
ret
in
sub
pop
clc
push
mov
mov
data16
movsb
and
xchg
inc
push
repnz
pop
jmp
jle
sub
aam
and
cmp
and
mov
movb
mov
lods
pop
fcmovne
cmp
push
jo
or
sbb
sub
test
lock
xchg
mov
dec
xchg
rcll
cmp
das
sbb
xorb
sub
fistl
test
ja
flds
out
enter
and
test
inc
popf
sub
sbb
inc
stos
push
les
mov
call
pop
sbb
rorl
clc
cmp
outsl
leave
fistpl
jmp
jb
dec
mov
mov
lret
imulb
inc
cmpsb
add
dec
shrb
and
movsb
hlt
push
les
add
movsl
rcrb
jo
mov
jnp
adc
pushf
pop
add
mov
lcall
push
adc
push
jle
cmp
jmp
mov
dec
je
cmp
jne
mov
xchg
pop
nop
out
push
sbb
cmp
clc
inc
and
xlat
push
jne
dec
xor
aam
xor
lock
push
insl
cmp
xchg
xor
sbbl
xor
add
sub
xor
mov
pop
loop
pop
dec
pop
outsl
insb
and
jno
leave
pop
leave
cs
or
or
in
dec
loope
dec
vandnps
pop
dec
in
fdivrl
cmc
sub
nop
imul
nop
adc
or
and
and
rolb
inc
dec
mov
jge
or
cltd
inc
xlat
add
mov
in
xchg
fisubrs
test
cmp
dec
inc
sarl
push
jno
cmp
loop
sub
ret
into
dec
adc
cmp
scas
adcl
sub
dec
push
or
inc
movsb
pop
into
jge
jmp
das
mov
xlat
out
jle
ja
rcrb
test
subb
in
adc
or
cmp
fs
and
xchg
sbb
sbb
xchg
in
jge
std
mov
add
dec
xlat
cmp
notb
cmp
and
test
jae
and
sub
test
inc
xchg
fs
clc
sar
sbb
addr16
fdivl
add
lea
push
jmp
scas
cmp
inc
push
imul
xchg
sbb
aas
lea
outsl
inc
pop
push
and
incl
pusha
in
sbb
pop
cmpl
mov
xor
pop
pop
dec
das
aam
adc
out
fimull
adc
inc
inc
bound
dec
xchg
test
loopne
sub
cmp
sub
ret
sub
push
aad
sub
pop
int3
push
adc
and
les
inc
imulb
cmpb
or
lock
es
add
out
loop
pop
adc
lret
adc
jo
jae
sbbb
cmp
je
adc
lahf
movsb
xor
out
or
hlt
dec
xchg
iret
mov
inc
insl
aam
cld
aas
ljmp
je
push
xor
mov
aam
loopne
sbb
xor
mov
or
pop
in
fs
xor
test
add
adc
xor
gs
mov
mov
pop
pop
push
and
push
lcall
adc
jns
jne
pop
fwait
inc
or
mov
ds
inc
adc
push
hlt
mov
mov
sti
or
cmp
inc
xchg
aaa
add
dec
jg
mov
push
or
movb
pop
into
fucomip
imul
adc
mov
push
ss
and
pop
push
mov
mov
mov
adc
xor
and
in
adc
pop
pop
xchg
test
js
mov
imul
sbb
or
cmpb
daa
xchg
mov
iret
push
sbb
dec
xchg
ss
sbb
shr
pop
jbe
push
push
mov
push
jle
jno
xchg
push
mov
dec
cmp
sbb
ret
xchg
ja
mov
in
add
inc
and
add
gs
pusha
lock
cs
fidivl
or
sub
nop
adc
and
data16
sbb
push
pop
es
sbb
bound
imul
inc
xchg
ret
insb
cmc
repz
add
or
cmpsl
add
xchg
ficoml
data16
cmp
or
sub
pop
rorb
jecxz
nop
and
push
or
divl
lock
push
dec
push
or
adc
cmp
xor
jl
lods
aas
adc
sub
call
push
sub
sub
cwtl
sub
popf
aad
and
jae
iret
mov
test
cmpb
les
adc
movsl
mov
or
push
push
into
jo
xchg
jl
iret
insb
jae
jne
cmc
or
or
push
aas
imul
cmp
aam
push
inc
push
add
pusha
adcl
icebp
ljmp
jl
popa
mov
jp
jp
inc
loopne
mov
pushf
adc
and
dec
negb
xor
pop
jbe
and
xchg
lods
add
fwait
mov
test
cmp
lahf
sbb
loopne
shll
stc
mov
sbb
stc
sbb
push
mov
mov
mov
push
gs
std
shlb
sarl
scas
sub
mov
xchg
test
mov
jne
add
lods
roll
and
sub
bound
scas
push
xor
mov
xchg
or
mov
inc
push
xor
addr16
adc
xor
gs
adc
push
dec
repz
sahf
insl
fistps
lahf
push
scas
int
repz
out
mov
iret
repz
mov
jl
out
and
push
mov
xchg
mov
pop
push
or
cmp
dec
sahf
pop
push
repnz
xchg
push
or
or
cld
adc
popf
loopne
inc
sub
inc
pop
mov
test
pop
xor
sbb
enter
jns
fcoml
xchg
sbb
idivb
cmpsl
push
das
jbe
add
pusha
mov
xchg
sub
aaa
and
jge
cmpsl
xchg
dec
mov
pop
lods
test
leave
fs
std
je
xchg
add
std
and
pop
sub
mov
xchg
sub
repnz
sub
lods
enter
jl
mov
or
add
xor
enter
and
repz
fists
arpl
jne
stc
cmp
xchg
sahf
out
sahf
cmp
popf
scas
icebp
cmp
sarl
sbb
inc
pop
repz
rep
test
cmpsl
test
cmp
rorb
pusha
pop
jmp
inc
scas
imul
movl
lea
cmp
lcall
cmc
jae
mov
mov
mov
mov
loopne
test
lea
push
push
push
gs
jbe
inc
pop
test
pop
dec
push
add
mov
in
sub
and
insb
mov
test
jne
or
addr16
or
out
add
mov
xor
scas
adc
mov
dec
inc
push
jmp
sbb
inc
ljmp
cmp
lea
lods
sbb
out
and
dec
or
or
jb
fmull
push
aaa
lods
orl
pop
cld
insb
push
test
enter
adc
adc
push
adc
inc
sbb
pop
push
nop
loopne
or
sub
out
cmp
mov
pushl
lods
lahf
nop
ficomps
cwtl
inc
add
mov
and
sbb
xor
sub
ljmp
aas
cmpsl
lods
cmp
xor
or
stc
das
es
inc
mov
dec
movb
pop
es
fcompl
outsb
dec
inc
in
pushf
xchg
sbb
xor
insl
jmp
or
mov
mov
dec
push
sbb
push
dec
sbb
push
cmp
jmp
pop
sarl
mov
pop
fcmovnu
add
enter
fs
cs
xorl
cmp
lahf
inc
cltd
pusha
cmp
add
dec
or
mov
pop
cmpsl
rorl
mov
pop
dec
sub
movsl
push
fisubrl
push
push
inc
outsb
adc
cmp
mov
mov
daa
movsb
and
jecxz
lea
jl
pop
cmp
pushl
add
imul
dec
mov
insl
test
add
je
xchg
out
inc
repnz
mov
loope
push
daa
sub
test
je
add
pop
push
adc
fwait
test
lcall
loopne
fsubr
fdivrs
dec
in
add
mov
repnz
call
loopne
mov
pop
mov
dec
push
stos
fcmovbe
and
xchg
fs
sahf
lods
mov
pop
add
inc
stos
mov
hlt
jmp
and
test
push
xor
or
and
inc
push
lahf
hlt
push
push
push
leave
xchg
aaa
pop
mov
push
nop
imul
sahf
je
push
int3
add
pop
and
mov
and
dec
add
dec
adc
pushf
push
je
or
or
ljmp
and
jb
rolb
test
arpl
mov
sub
lds
and
sub
and
cmpb
call
pusha
xchg
clc
arpl
mov
mov
fwait
scas
or
jle
or
rorb
insl
xor
ss
add
jae
aad
ret
stos
test
add
mov
xor
adc
mov
and
pop
arpl
adc
push
jp
add
or
cmp
cmp
das
jnp
inc
xchg
jecxz
insb
jo
mov
dec
shll
arpl
cmp
cmp
push
cs
lahf
pop
lods
outsl
and
jae
push
invd
rep
adc
pop
scas
movsl
or
push
test
sarb
inc
push
push
addb
pop
andb
adc
or
add
sbb
xor
cltd
fadds
cmpb
rorb
push
popf
xchg
aad
pop
test
sub
and
sbb
xchg
out
and
jle
adc
inc
adc
sbb
and
popa
pop
push
push
push
dec
cmpsb
inc
mov
jbe
jecxz
inc
xor
ret
push
lea
rclb
push
movsl
xor
push
js
or
sub
lock
sub
fidivl
add
fmuls
mov
mov
lods
sar
shrb
jle
and
mov
add
loopne
sbb
sbbb
dec
mov
mov
xchg
div
daa
ret
push
add
pop
add
sbb
jnp
in
sbb
pop
lcall
cmpsb
shr
cmp
sbb
and
xor
jmp
xor
lcall
inc
loopne
ja
sti
jne
std
repnz
daa
mov
das
dec
sbb
aaa
pusha
cmp
xchg
das
sub
test
xor
push
or
push
lds
add
enter
rorl
clc
add
jmp
push
push
and
sahf
popa
sub
dec
push
push
and
add
lret
sbb
daa
xchg
jno
pop
add
pop
sbb
inc
jmp
scas
adc
or
cmp
push
push
gs
js
or
les
cwtl
pop
cmp
aam
inc
leave
cmp
push
into
mov
std
scas
add
pop
clc
mov
xor
jecxz
xchg
clc
add
sbb
pop
call
dec
inc
add
push
xchg
add
lea
push
push
ret
xchg
fsubl
pop
push
fldt
add
pop
and
dec
clc
pop
push
leave
push
inc
push
cmp
daa
dec
incl
rorl
mov
xchg
outsb
lock
pop
pop
xor
mov
scas
adc
dec
dec
adc
cmpl
adcb
aad
jle
insb
mov
outsb
lret
addr16
cmp
leave
push
scas
mov
pop
push
rcrl
sub
xor
push
sub
xchg
dec
movsl
push
push
movsb
push
push
add
loopne
cmp
jne
xorl
ret
push
or
add
dec
add
out
pushf
or
stos
add
push
mov
rclb
test
cmp
and
enter
dec
push
mov
mov
out
cmc
xor
inc
inc
cmp
jmp
cli
dec
adc
imul
xchg
and
lahf
test
add
out
inc
mov
mov
pusha
sub
addb
xchg
arpl
fs
adc
mov
test
inc
mov
stc
inc
cmp
repnz
ret
call
scas
adc
jo
and
dec
cmpsb
in
and
xchg
cld
mov
pop
sbb
sahf
test
jl,pt
or
jecxz
sub
aam
lret
xchg
add
test
dec
leave
xor
repz
lea
push
jg
xor
rcll
and
sub
cmpl
xor
orb
cli
test
js
dec
mov
rcll
jno
or
inc
icebp
fwait
jb
nop
call
loope
or
adc
sar
lds
mov
mov
cmp
jg
mov
clc
sub
lock
sar
cmpsb
sbb
mov
push
cmp
jle
push
movsl
shlb
and
and
bound
shl
adc
ret
push
bound
in
or
xchg
inc
stos
inc
xor
ds
adc
add
add
cmp
mov
add
or
sub
mov
lcall
adc
sbb
mov
push
test
leave
mov
scas
adc
adc
je
std
mov
pop
cmp
bound
fmuls
push
aas
sbb
mov
cmp
into
rol
sbb
jo
je
mov
movsb
or
xor
jbe
daa
daa
adc
in
and
xor
fcompl
xchg
nop
push
mov
jecxz
inc
mov
loop
inc
filds
cmp
mov
jb
cmpb
in
arpl
addb
inc
lods
lock
fstl
xor
lock
in
sub
mov
mov
and
push
mov
adc
pusha
or
inc
cs
push
sbb
sub
sbb
mov
xor
or
cld
mov
xor
mov
inc
cmp
adc
movsl
mov
fmull
add
rcrl
add
lea
mov
mov
pop
je
add
test
push
je
cmp
dec
shrb
pop
bound
js
loopne
pop
push
adc
fcoms
cmp
push
insl
mov
mov
lea
mov
and
jno
sub
ficompl
mov
test
jb
push
test
ds
cmp
mov
add
push
andl
xor
sbb
in
jne
adc
cvttps2pi
sarb
sub
jp
sbbl
push
inc
das
push
jnp
loop
xchg
jmp
test
jne
push
push
jns
dec
sbb
adc
lcall
test
stos
cmp
dec
mov
xchg
xchg
or
loop
jo
xchg
and
adcb
pop
inc
jmp
fcmovnu
xor
add
sahf
mov
lea
push
inc
adc
push
dec
cmpl
jl
xchg
push
xor
xorb
mov
icebp
pop
push
inc
mov
dec
dec
js
push
mov
and
mov
xchg
push
popa
push
mov
add
fldenv
xchg
mov
mov
and
xchg
rcll
fsubrl
dec
push
pop
cmp
ds
adc
adc
ret
sbb
jae
and
test
push
sub
jae
adc
inc
add
ficompl
pop
pop
mov
add
or
and
les
cmpsl
pop
jb
mov
pop
mov
popa
test
das
push
adc
loop
and
cmp
push
je
xor
ret
cmc
xor
ds
mov
xchg
xor
lcall
scas
lods
jns
jnp
pop
mov
mov
mov
adc
movsl
pop
inc
call
sub
sarl
inc
pop
mov
adcl
shlb
loopne
and
mov
and
push
dec
jo
dec
and
xor
jp
pusha
in
jmp
in
loope
or
sub
cmpsb
sbb
lcall
fldt
mov
add
push
or
pushf
push
xchg
nop
inc
push
lret
add
pop
enter
sub
push
adc
cltd
cmpsl
dec
push
adc
push
add
pop
and
sub
inc
idiv
out
and
pop
ret
and
pusha
add
mov
hlt
outsb
test
push
cmp
and
pop
rorw
push
mov
sbb
pop
pop
mov
mov
rorb
add
xor
ret
jg
scas
or
addb
mov
mov
out
ret
adc
enter
xchg
adc
std
mov
add
leave
hlt
mov
add
pop
fcoms
pop
pop
out
add
aam
sub
bound
or
cmpsb
cmp
pop
dec
mov
mov
sbb
and
adc
push
in
lds
and
cmpsb
sub
xor
out
xor
rolb
nop
loop
daa
leave
or
mov
sbb
lds
inc
pusha
push
jno
mov
adc
xor
mov
add
pushf
ret
xor
xorb
aaa
inc
jmp
dec
rcll
lahf
aas
std
inc
and
sbb
fwait
rcrb
mov
mov
cmpb
insl
gs
cmp
fcmovnb
adc
or
sbb
add
and
xor
push
lret
scas
jl
lods
xchg
call
std
or
flds
sbbb
rcll
test
or
jmp
test
mov
inc
jae
sbb
jne
xchg
mov
fisttps
jae
pop
cmp
sahf
adc
dec
js
mov
or
cmp
jle
dec
sub
add
inc
in
decb
add
or
ficoms
es
adc
sub
or
cmpsl
sbb
adc
pop
in
popl
test
add
jmp
das
add
test
cmp
arpl
test
inc
xchg
add
inc
dec
xchg
and
orl
int
lea
sti
and
loop
jl
shlb
mov
dec
mov
mov
adc
out
mov
call
popf
test
dec
sub
loope
add
dec
outsb
test
sub
add
shll
test
sti
push
movb
mov
sub
jne
inc
loop
mov
cmovle
out
lods
inc
rorb
mov
pop
sbb
ss
xchg
add
xlat
negb
sbb
and
mov
ret
cmpsb
or
add
shrl
cmp
push
push
sbb
js
test
sbb
push
into
imul
imul
iret
in
data16
add
xchg
xchg
and
xor
pop
int
pop
sbb
push
and
ret
call
bound
pop
nop
outsb
pop
rdpmc
fstpt
outsb
pop
pop
or
cmp
icebp
mov
push
push
push
jne
ret
push
xlat
std
inc
movsb
popl
rorb
addr16
pop
xchg
mov
jo
add
sbb
cmp
lahf
sub
xchg
adc
dec
mov
lock
cli
add
ret
sarl
js
dec
cmp
lock
mov
push
push
or
xchg
pop
mov
add
js
pop
dec
pop
iret
adc
lods
mov
push
push
pop
outsb
mov
push
xor
std
xorb
or
cmpsl
xor
pop
lret
add
je
add
push
adc
add
inc
adc
jne
divb
or
je
push
jb
mov
and
pop
outsb
bound
dec
or
push
add
hlt
clc
inc
add
dec
pop
sub
mov
es
add
fidivrs
sbb
jne
jmp
shlb
dec
ljmp
mov
fidivs
pop
cmp
push
les
fmuls
or
mov
shl
mov
repz
mov
jno
jbe
rolb
aam
inc
out
hlt
sub
sbb
adc
pop
inc
xor
xchg
pop
outsb
mov
sbb
test
or
adc
jmp
xchg
sub
sbbl
jp
cmp
mov
sbb
push
iret
pop
cwtl
or
insb
cltd
addl
xchg
jbe
sub
insb
lds
sbb
lods
je
jle
jne
mov
in
xchg
push
mov
test
aad
xchg
sub
push
or
push
sahf
imul
xor
dec
push
imul
sub
jbe
rclb
movsl
push
push
add
xchg
pop
icebp
repz
sbb
movl
sub
je
or
jno
sub
sub
inc
cmp
jge
mov
push
mov
xor
sub
sub
inc
inc
mov
js
push
sbb
mov
cmpsl
mov
push
bound
inc
sti
aam
sub
xchg
imul
cmp
cs
inc
dec
and
and
inc
xchg
stos
mov
adc
sbb
bound
push
xor
dec
fwait
dec
xorb
iret
mov
icebp
and
push
sub
rcrl
leave
pop
pop
jns
xchg
or
je
sti
xchg
out
push
dec
jecxz
les
je
mov
cld
jl
and
sahf
pop
or
inc
stos
fisubl
mov
push
push
sbb
or
fildl
and
and
test
out
dec
lods
sub
cmp
js
or
aam
in
mov
sub
mov
sbb
sub
inc
pop
ret
dec
xor
pusha
insb
cmp
sub
push
pop
pop
invd
mov
lods
xchg
fwait
adcl
add
std
aaa
jne
stos
insb
xchg
gs
inc
mov
xchg
orl
test
xchg
lods
push
icebp
popf
or
dec
inc
push
inc
aaa
adc
je
adc
rolb
je
push
mov
mov
lock
in
cmp
test
xchg
mov
sbb
pop
cmp
icebp
push
je
jmp
sub
cwtl
jmp
mov
adc
sbb
mov
mov
inc
or
sub
test
repnz
test
jg
subl
mov
sahf
adc
pop
dec
inc
leave
test
fisttpll
jge
in
pop
push
les
in
test
es
add
sub
cmpsb
fstl
push
push
adc
xchg
daa
cmc
push
test
xchg
out
cs
sub
add
and
or
lcall
push
or
setl
add
sbb
int3
ret
and
cmp
jbe
loope
push
clc
add
fwait
repz
loope
mov
shrl
or
or
hlt
dec
mov
into
dec
cli
inc
mov
call
pop
jle
mov
mov
mov
sub
aaa
and
cmp
pop
aad
pop
pop
mov
sub
xchg
iret
jne
in
pop
dec
pop
inc
cli
cmp
jle
movsb
add
imul
xlat
fsubs
and
in
mov
sbbb
or
cs
inc
add
sbb
pop
jbe
cmp
roll
out
jb
mov
push
add
mov
mov
lcall
movsb
loopne
xchg
gs
push
out
es
cmp
or
sub
ret
adc
out
rcrl
cmp
mov
sbb
outsb
add
cmpl
push
inc
rolb
add
pop
or
sub
push
jle
mov
sti
xor
cmp
inc
jl
inc
les
pop
mov
adc
sub
xor
adc
and
mov
cmpsl
cmp
ret
push
loope
bound
imul
out
imul
scas
cwtl
shl
cli
mov
je
dec
xchg
movsb
xchg
mov
xchg
and
xor
inc
add
lea
add
iret
sub
cmp
inc
push
nop
cmpl
add
gs
or
push
adc
xchg
sub
add
xchg
sbb
adc
xchg
and
push
xor
cmp
inc
lods
jg
mov
xchg
xlat
shlb
lods
ja
push
adc
dec
sub
lock
sbb
daa
push
push
aad
orl
out
test
cmp
jle
sub
sub
push
pop
dec
add
mov
add
xor
add
lret
adc
sub
adc
push
sbb
mov
push
rolb
mov
fmull
and
imul
or
push
push
mov
adc
sbb
push
fwait
xchg
sbb
push
mov
divb
pop
xchg
cmp
sub
cli
enter
test
sbb
xor
mov
sbb
sbb
mov
pop
inc
mov
xchg
add
cli
push
arpl
rcrb
mov
fdivrs
and
pop
rcrb
inc
cld
scas
mov
xchg
add
std
repz
lods
roll
stos
or
jmp
sub
push
jl
inc
push
mov
mov
add
xor
mov
dec
mov
push
and
or
mov
mov
test
dec
inc
std
jne
mov
addl
push
mov
jecxz
ss
jle
add
push
es
inc
inc
fiaddl
add
scas
cli
sub
add
cmp
and
mov
and
mov
push
je
in
pop
call
dec
sbbb
or
push
inc
sub
xor
loopne
or
add
cmp
adc
inc
inc
fadds
movl
mov
add
push
testb
xorl
mov
movups
inc
inc
frstor
xchg
add
add
pop
sbb
lods
push
xor
jbe
push
jp
adc
dec
adc
popa
imul
jg
sbb
mov
or
inc
push
or
gs
and
or
xchg
jne
jo
enter
pushf
cwtl
popa
test
sbb
or
lret
mov
aaa
jne
pusha
add
push
in
mov
sbb
xchg
push
pop
es
cmp
and
pop
es
push
inc
inc
adc
inc
insb
sbb
push
rorl
push
sbb
xchg
add
jno
add
push
call
sar
push
jns
out
ret
push
ljmp
daa
negb
jg
or
and
inc
sbb
je
dec
jp
adc
lea
movsl
or
jg
jo
jae
in
loop
clc
aaa
mov
lret
mov
xchg
xor
test
into
push
inc
mov
sub
mov
insb
sub
or
movsb
hlt
filds
add
lock
test
sbb
pop
adc
loope
and
dec
push
adc
lcall
adc
out
dec
loopne
mov
sub
xchg
mov
and
lds
cmpl
adc
and
dec
pop
leave
shrb
popf
pop
insb
popf
cmp
mov
xchg
cmp
daa
cmp
das
icebp
lods
or
imul
add
pop
or
push
inc
shl
push
inc
or
adc
inc
sbb
xlat
dec
jo
rolb
jns
adc
mov
dec
cmp
dec
add
push
push
and
push
fldt
inc
mov
mov
add
test
jo
pop
gs
mulb
dec
js
clc
dec
xor
inc
sub
add
sub
adc
or
jno
mov
cmp
ret
or
xchg
add
xlat
and
out
push
movsl
hlt
pop
jno
sub
nop
push
push
push
xor
hlt
mov
add
dec
jns
sbb
cmpsl
gs
repnz
mull
cmp
lcall
mull
adc
int3
in
out
add
je
sti
xchg
and
push
test
add
shll
push
stc
pusha
test
decb
mov
sbbb
pusha
and
repnz
jmp
shrl
mov
jg
pop
dec
jg
jmp
adc
push
popl
cmp
addb
or
add
outsb
inc
cs
pextrw
sub
push
out
push
sbb
sbb
dec
dec
xchg
nop
add
movsl
pop
insl
test
adc
sub
or
mov
inc
or
in
pop
adc
orl
add
add
mov
imul
mov
bound
ljmp
cmc
dec
mov
add
or
xchg
cmp
or
mov
pop
add
add
js
movsb
adc
pop
pop
sub
pop
or
fcompl
pop
and
shlb
jl
add
add
or
rolb
fisttps
insl
add
inc
mov
mov
and
test
les
adc
jno
lods
adc
mov
cmp
sbb
mov
shl
fstl
mov
enter
into
sub
push
push
inc
inc
lock
es
mov
xchg
iret
xchg
xchg
xor
push
cmp
push
in
sahf
test
inc
and
mov
adc
out
adc
sub
ret
int3
push
sti
pop
sbb
test
push
cltd
pusha
insl
mov
pop
mov
or
dec
cmpl
mov
adcl
fistps
jmp
dec
cwtl
sbb
push
xchg
and
jge
mov
xor
xor
sbbb
outsb
add
mov
lods
sbb
scas
mov
loopne
push
jg
add
dec
adc
insb
pushf
mov
jg
lcall
movsb
lret
xchg
add
or
push
mov
pop
ds
loopne
jp
or
dec
std
or
movups
or
dec
sbb
test
inc
mov
rorl
addb
xchg
imul
les
or
dec
or
loopne
cs
xchg
push
mov
sub
cmp
pop
sahf
mov
add
jae
push
add
add
sbb
jmp
insb
or
cmp
sub
mov
lcall
push
cmp
movl
jae
and
pop
movl
mov
inc
stos
or
in
mov
adc
dec
or
ret
ret
in
in
divl
push
mov
inc
in
loop
mov
dec
push
push
jb
xchg
aam
sbb
loopne
mov
cmp
or
int
xor
add
in
sbb
sub
ds
hlt
jae
insl
imul
cltd
mov
in
xchg
add
or
mov
cmpl
je
mov
adc
aas
xor
jnp
orl
sub
in
scas
aam
cmp
mov
push
aam
es
cmp
in
jns
jne
or
pop
lcall
push
ja
stos
xor
and
scas
repnz
mov
xor
rol
hlt
and
int3
add
ret
in
and
inc
popf
or
call
movl
lock
push
int3
cmp
xor
cmp
mov
sub
inc
mov
ret
sbb
sbb
rorb
cbtw
fisubs
fdivrl
rcrb
aas
pop
adc
ds
pop
jle
push
push
pop
aas
adc
dec
cmc
js
scas
sub
sahf
out
into
popa
fdivrl
sbb
adc
or
in
call
scas
andl
les
lea
scas
in
mov
gs
or
test
aas
and
cltd
pop
cmp
add
push
mov
or
imul
addb
push
sarl
xor
xor
pop
dec
nop
push
push
jb
mov
push
test
mov
pop
mov
xlat
enter
ret
adc
sbb
xor
adc
addl
mov
adc
sub
out
mov
mov
push
scas
inc
rcll
and
clc
mov
push
rclb
in
and
lret
push
add
test
or
inc
adc
or
lods
mov
or
jb,pt
adc
in
and
adc
sbb
xchg
xor
dec
je
pop
je
ret
adc
pop
xchg
pop
das
inc
pusha
cmpsl
test
pop
lahf
pop
jle
and
mov
push
hlt
stos
fsubp
loope
cmp
or
decl
jmp
mov
inc
cmp
jl
pop
mov
or
lods
lds
and
push
ret
add
jo
mov
loopne
imulb
pop
stos
jae
inc
add
mov
inc
lea
dec
dec
daa
fmull
cmpsl
or
dec
xchg
mov
adc
dec
sbb
or
add
sbb
jg
ret
xor
cmp
popa
push
test
sbb
push
arpl
flds
lahf
add
mov
sub
or
add
push
ret
push
dec
shrb
mov
mov
cmp
gs
jg
mov
cmp
jb
or
dec
movsl
sub
into
int3
sub
adc
adc
xlat
in
outsl
std
sub
or
xor
jae
inc
adc
andb
insl
xchg
out
popf
fidivrs
cmpsl
xor
fwait
mov
push
push
inc
push
inc
jl
cmp
inc
add
or
enter
in
fs
stc
push
push
jl
jo
pop
scas
or
inc
inc
add
xchg
sbb
xor
mov
repnz
pop
xor
pop
repnz
jg
jb
push
xor
xchg
pop
pop
sbb
cmp
add
inc
and
sub
add
pop
call
sbb
and
or
inc
push
outsb
les
push
cltd
mov
pop
mov
pop
cltd
idiv
mov
ret
sbbb
lret
pop
cmp
pop
mov
xchg
test
adcb
lock
cmp
xor
lcall
dec
jne
mov
mov
cmp
jne
cmp
jne
es
jns
xorb
or
adc
push
jle
or
xor
dec
repnz
aas
add
in
fldl
fyl2x
fstpl
mov
sbb
decl
push
and
loopne
in
jg
mov
fmull
popa
mov
insb
add
rcll
sahf
pop
fstpl
flds
sbb
sbb
loope
fdivl
jmp
fmull
fcoml
push
xchg
adc
nop
mulb
nop
adc
sub
lods
jb
fs
mov
push
orb
cmp
lock
mov
fstpl
push
push
lret
pop
add
mov
ds
xor
mov
pop
dec
dec
mov
jo
leave
xor
pop
cmp
fdivrp
pop
inc
push
or
and
sbb
out
sub
xor
push
jns
mov
mov
inc
movsl
popf
sbb
insl
mov
add
and
orl
add
inc
add
pop
shll
dec
inc
cs
sbbb
push
adc
js
popa
andb
adc
mov
mov
jmp
in
aaa
rcl
push
sub
ret
inc
inc
xchg
inc
inc
xorb
repz
add
cwtl
xchg
cmp
dec
scas
fs
inc
mov
adc
and
nop
inc
inc
sub
add
outsb
idivl
adc
push
outsb
ret
mov
dec
lock
js
mov
out
dec
push
popf
insb
push
push
cmp
jecxz
pop
add
cs
push
mov
push
jns
push
jmp
pop
xor
xor
mov
push
sbb
pushf
inc
xor
lock
jg
inc
lds
jg
dec
rolb
subl
dec
lahf
adc
and
pop
adc
push
je
movsb
mov
inc
mov
sar
outsl
aam
and
cmp
jne
ds
call
push
push
in
mov
hlt
je
or
push
out
in
sbb
push
add
add
sub
inc
mov
loopne
pop
jne
mov
jmp
cmp
stc
ret
test
push
aad
pushf
or
xchg
push
jne
nop
cli
mov
sbb
lahf
dec
scas
cltd
daa
xor
add
dec
dec
loopne
bound
mul
dec
or
push
lcall
push
xor
aaa
add
or
loope
ficoml
and
sbbl
xchg
mov
jb
or
lods
lds
orb
jo
xchg
fists
fcmovbe
dec
sarb
sub
das
je
or
or
je
or
mov
fdivs
fdivr
ljmp
inc
mov
fwait
out
mov
xchg
fwait
roll
mov
daa
test
aam
or
test
and
or
outsl
adc
pop
sahf
mov
mov
into
out
dec
dec
movsl
repnz
xor
pop
mov
aad
mov
out
insl
sbb
in
jl
lcall
sbb
rcrl
mov
add
and
daa
and
test
pop
jle
xchg
add
je
imul
jmp
jne
mov
addr16
cmpsl
pop
sub
and
and
sub
sub
mov
fisubl
lea
cmp
jne
cmp
jne
add
pop
into
push
inc
mov
push
xchg
add
cmp
jne
add
shrb
and
icebp
jne
mov
lock
sub
test
cmp
jo
addl
jno
sbb
or
add
lods
sbb
dec
and
ret
dec
and
push
das
fsubl
sub
dec
mov
dec
and
push
cmp
ficompl
jge
sbb
adc
ret
pop
push
inc
lahf
inc
arpl
rolb
sbbb
adc
cli
adc
jl
add
call
out
pop
pop
pop
pop
lea
mov
cmp
mov
add
or
out
pop
out
jne
xchg
ret
mov
jbe
cmp
jae
test
ret
xor
adc
outsb
pop
in
sbb
adc
or
repz
xchg
push
or
aaa
mov
jle
push
lahf
lcall
test
lret
cli
std
jge
cmp
jle
xchg
repnz
mov
add
adc
inc
dec
push
or
pop
mov
push
adc
adc
dec
shrl
enter
mov
and
push
loop
jo
inc
xlat
rcll
mov
lea
ficoml
jae
into
xchg
pop
test
leave
jg
add
cli
or
inc
loopne
or
push
mov
mov
mov
les
aas
pop
jbe
inc
sub
add
cmp
sbb
fcompl
lock
xor
push
inc
jg
scas
pusha
cmp
inc
cmp
lock
in
cmp
jle
adc
push
push
push
sub
cmp
jle
rorb
test
outsl
arpl
test
and
add
mov
sbb
scas
and
pop
sub
lcall
dec
xchg
and
add
push
int3
push
rolb
dec
ret
dec
sti
icebp
test
in
bound
and
hlt
xor
daa
int
mov
je
movsl
fcmovb
and
mov
cmp
iret
sub
adc
orb
push
adc
xchg
jns
cmp
cld
push
dec
cli
call
add
jnp
mov
mov
cmpsl
jmp
hlt
xchg
cmpsb
nop
hlt
pop
stos
dec
xchg
fisttpll
nop
inc
leave
faddp
or
jmp
outsb
adc
inc
lcall
cmp
imul
xchg
adc
ret
sub
and
adc
outsb
aad
rcrb
not
clc
sets
dec
adc
rcrb
std
sbb
mov
lds
cmp
xchg
mov
sub
add
push
cs
mov
xchg
xchg
pop
dec
xchg
jo
and
pop
test
xchg
adc
add
imul
nop
or
ffreep
movl
mov
icebp
das
pop
adc
xorb
rclb
sbb
jg
push
inc
js
pop
je
ja
push
cli
inc
sbb
adc
leave
ret
mov
imul
fwait
rclb
shl
dec
in
lock
mov
mov
daa
call
rclb
adc
clc
cmp
je
inc
push
ret
or
fbstp
add
or
aam
or
sbb
ljmp
pop
or
js
push
or
lock
fs
xchg
pop
fcmovnbe
push
loopne
rolb
cmp
xorb
cmp
mov
or
loop
ret
rcrb
jne
sub
dec
cmp
imul
test
push
lods
pop
pusha
jmp
fidivl
aas
add
add
icebp
mov
sub
cld
push
addb
mov
ret
mov
mov
push
clc
es
and
xor
sahf
syscall
or
mov
push
xor
or
rclb
push
cmpsb
dec
je
jge
add
jbe,pn
jne
imul
addr16
push
dec
sbb
or
movsb
mull
pushf
test
pop
mov
sbb
xchg
mov
int
pop
pop
je
jmp
xor
push
je
out
push
decb
cld
bndldx
push
aas
test
jo
push
cmp
mov
out
add
xchg
test
and
loopne,pn
xchg
mov
jg
adc
mov
call
xor
push
rcrl
push
and
push
insl
lea
mov
pop
push
iret
push
popa
or
mov
sbb
adc
lock
js
add
xchg
xchg
insl
adc
addl
int3
add
mov
pop
mov
cmc
dec
adc
mov
or
cmovo
icebp
mov
loope
in
mov
push
add
or
push
add
test
test
mov
pop
fadd
mov
scas
adc
addr16
cli
push
xor
je
popf
pop
pop
cmp
cmp
sarl
cmp
loope
dec
lods
and
outsl
inc
jge
mov
push
stc
mov
push
loopne
ret
ror
adc
and
pop
xchg
pop
adc
inc
pop
insb
jne
cmp
jg
cmp
je
or
sbb
adc
les
js
jne
cmp
jbe
ret
cmp
or
dec
mov
cmpsl
sub
add
adc
rcll
add
adc
repnz
xor
daa
jle
in
pop
sbb
adc
test
sub
sub
pop
sbb
sbb
or
movl
lods
insl
add
in
stos
or
movsl
add
push
dec
pushl
push
jne
and
push
lea
inc
ret
fmuls
and
scas
or
lea
mov
sub
mov
mov
ret
mov
xor
cli
cs
fldt
je
cmpb
cmp
test
rclb
mov
testl
pushf
xor
inc
mov
push
sub
movsw
adc
sahf
lcall
dec
mov
in
pusha
scas
sub
daa
xchg
addb
movsl
bound
jbe
daa
test
clc
push
xor
add
add
imul
jle
mov
adc
mov
xor
fmulp
push
push
mov
pop
and
fidivl
or
jb
daa
xchg
xchg
mov
movsl
adc
sub
xor
lret
movsb
mov
push
pop
xor
dec
xor
or
jp
les
insl
pop
cmp
subb
xchg
jnp
mov
repnz
add
mov
xor
insl
insb
mov
push
in
push
mov
sarb
push
pop
pop
scas
mov
vpsllvq
mov
add
add
and
or
pop
or
and
jle
std
mov
sbb
sbb
cmpb
repnz
cmp
pop
add
addb
mov
or
jge
mov
push
inc
ljmp
mov
clc
push
decl
out
imul
sub
rolb
mov
jne
mov
ds
jp
int
fistl
ret
adc
fists
mov
cmpsl
push
dec
fmuls
sub
call
nop
sbb
or
push
xor
inc
cli
out
cmp
outsl
movsb
mov
mov
adc
add
cmpsl
loopne
insl
xor
decb
add
lea
jmp
lea
and
mov
shrl
sub
nop
lea
sti
ss
mov
push
adc
out
add
mov
xor
je
or
lea
lcall
lea
add
mov
xor
test
or
cld
or
add
push
add
lods
insb
es
dec
jp
cltd
push
sar
fisubl
xchg
int3
adc
iret
sbb
scas
xlat
mov
int3
jp
stos
and
sub
stos
lods
sbb
test
push
pusha
punpckhbw
lock
mov
je
lea
out
and
sub
or
pop
dec
cli
xor
push
push
rolb
insb
and
mov
rorb
xor
in
or
or
test
add
push
lea
cmpsl
xchg
gs
cmp
add
cmp
jo
xor
jb
and
sbb
add
push
lods
rol
and
push
push
dec
in
shr
popf
lods
pop
push
inc
in
fwait
push
jmp
push
mov
in
ja
push
in
sbb
sub
shll
out
or
shr
adc
push
and
inc
movsl
enter
orl
rcrl
push
test
mov
mov
je
and
xchg
pop
and
mov
sbb
adc
sahf
fadds
aad
lock
jg
jb
mov
es
clc
insb
mov
sbb
jb
jbe
cmpsb
jb
cs
jne
ucomiss
clc
clc
mov
mov
pusha
mov
push
xor
sbbb
jo
test
cmp
ficoms
dec
mov
jb
popa
aad
popa
xor
in
shr
hlt
scas
enter
fwait
mov
loope
dec
ljmp
imul
xor
subl
adc
hlt
mov
cmp
xor
out
inc
jp
movsb
cmp
cltd
mov
or
push
add
ja
add
sbb
mov
sub
mov
inc
push
rorb
sbb
dec
inc
add
pop
cmp
lret
push
add
outsb
lea
sub
mov
sbb
sub
add
movsb
mov
movsb
jecxz
movsb
and
cmp
xlat
insl
lods
fisubs
cmp
ret
sub
das
adc
xlat
xor
and
dec
fcmovnb
mov
inc
or
mov
jl
sub
push
js
jbe
cmpl
shlb
fsts
mov
pop
pop
lods
lods
inc
ret
mov
das
jns
push
pop
adc
push
and
aas
addr16
fistpl
add
call
test
inc
aaa
sbb
or
xchg
arpl
push
lods
push
add
repz
mov
xor
ret
add
jo
movsl
pop
je
flds
mov
xor
mov
aaa
daa
andb
mov
dec
inc
hlt
xchg
cwtl
les
mov
push
mov
sub
jne
mov
add
bswap
ret
cli
aam
sub
and
fimuls
popl
mov
adc
ljmp
jle
add
fidivrs
jb
fwait
sub
cmp
sub
adcb
in
and
and
sbb
dec
dec
test
dec
call
inc
cltd
inc
orl
dec
ljmp
jp
insb
adc
pop
dec
dec
push
cmp
and
adc
mov
add
add
shl
or
ds
rcl
lods
adc
rclb
fisttpl
add
pusha
cmpsl
out
sub
mov
fmull
add
and
roll
xchg
outsl
sbb
jge
xor
bnd
in
arpl
cmp
repz
arpl
inc
imul
xchg
movsb
repnz
pop
mov
mov
push
xor
dec
dec
stc
mov
dec
loop
xchg
push
sahf
nop
dec
shl
cmp
adc
xchg
call
push
sub
push
movsb
aas
add
pusha
xor
das
adc
ja
scas
cmp
jge
push
shrb
mov
shlb
inc
scas
jbe
rcr
push
sbb
inc
int
cmp
jo
les
push
ds
in
std
fwait
sbb
icebp
inc
push
js
lea
sub
xchg
cmp
insl
rcrb
pusha
daa
test
add
pusha
push
pop
or
dec
and
add
inc
lods
repz
and
dec
dec
dec
inc
aas
adc
outsl
dec
pop
jge
testb
add
inc
jb
xor
ds
aaa
pusha
push
pusha
loop
fiaddl
out
das
push
cmp
or
xchg
loope
aad
jne
inc
aam
cmp
and
adc
add
sbb
mov
faddl
pop
xor
mov
xor
push
je
cmp
mov
push
lea
pop
sbb
fldenv
sbb
pusha
ljmp
arpl
mov
inc
xor
push
pusha
add
add
sub
fcoml
or
jle
push
xchg
push
jnp
add
sub
push
ret
or
insl
pop
or
cmp
lods
cmp
mov
or
insb
mov
mulb
ds
mov
insl
cmpsl
fnstenv
add
cltd
icebp
jb
sbb
inc
shlb
mov
addl
or
or
rolb
cmp
push
add
test
rcrb
jmp
jno
fstpl
push
fs
pop
ret
jmp
fisttpll
or
jne
sbb
test
xchg
enter
inc
xchg
mov
sub
sub
mov
push
or
add
or
push
ljmp
lcall
neg
lods
mov
sub
pop
inc
insl
lea
or
arpl
or
and
sbb
sti
mov
add
insl
arpl
xor
cli
enter
sbb
daa
dec
rolb
imul
adc
jl
xchg
push
cmpl
sbb
jne
pop
dec
adc
sbb
sbb
dec
and
pop
rolb
ljmp
adc
dec
cld
mov
cmpsl
bound
or
bound
or
jmp
ret
lea
and
dec
xchg
jge
mov
aas
mov
loop
and
pop
faddl
mov
add
mov
mov
jl
push
or
imul
mov
repnz
movsl
aad
jne
fcmovbe
and
lcall
jmp
adc
ret
adc
in
push
lods
int3
sub
cmp
dec
add
push
call
push
xchg
rolb
lea
adc
aad
add
mov
stc
or
add
dec
js
xchg
es
jnp
add
mov
popf
fistl
push
jne
shlb
loop
xor
lock
mov
test
ret
ds
add
or
sbb
cmp
sbb
sub
fadd
in
ret
jne
push
add
lods
push
pop
sub
popa
int3
in
mov
mov
les
push
push
pusha
push
xchg
adc
pusha
dec
loop
push
ljmp
pushf
or
testb
and
dec
mov
and
xchg
dec
inc
mov
stos
dec
popa
dec
sahf
cmp
incl
shl
sub
pushf
xor
xchg
lea
push
sub
stos
mov
call
pop
cmp
sub
xor
push
popf
pop
adc
lea
enter
jp
or
mov
mov
or
dec
aam
push
push
ja
push
pop
pusha
out
push
push
push
inc
and
push
mov
adc
clc
and
ret
mov
adc
add
sub
or
xchg
push
adcb
mov
push
push
mov
ret
jle
das
push
jg
push
aam
lea
add
das
mov
dec
addb
mov
jae
fs
out
add
sbb
or
and
sub
test
mul
dec
cmc
imul
rcrb
rcr
sub
out
lea
cmp
pop
mov
stos
popf
mov
xchg
mov
push
scas
pushf
add
test
movsl
push
lods
and
and
aas
scas
adc
mov
add
adc
lods
mov
insl
add
les
jo
mov
jecxz
test
mov
lds
mov
mov
xor
je
fsubrl
fstps
add
or
imul
add
adc
and
das
xchg
out
aaa
xor
mov
scas
lcall
sysret
ficoms
in
jbe
jnp
push
in
ficomps
repz
adc
outsb
pop
pop
xor
inc
sbb
adc
mov
jl
cs
mov
add
cmpsb
jmp
inc
dec
add
sbb
or
mov
pusha
or
inc
roll
or
dec
nop
int
cmp
sub
push
and
je
int
mov
fldl
sub
mov
je
js
sub
fwait
push
cmp
and
insb
aas
fs
jp
das
push
jle
addb
mov
movsl
fs
add
cmpsl
push
pushf
clc
mov
add
mov
cmp
sub
mov
sub
xor
cs
push
xorb
dec
int
jno
or
mov
cmp
xor
ja
loop
mov
movsb
sahf
sub
dec
imul
sub
jo
xor
dec
push
xchg
dec
add
adc
int3
sub
aaa
xchg
repnz
mov
in
mov
add
in
sbb
xchg
add
or
pop
les
push
add
das
enter
xchg
cmc
lods
andl
pop
mov
popa
mov
shrb
push
jp
ret
adc
xor
mov
orb
inc
dec
add
pop
pusha
xchg
pop
lahf
nop
invd
and
fsubrl
mov
stc
pop
push
pop
test
sbb
in
jle
jle
mov
aam
push
push
ja
adc
leave
or
ret
mov
inc
inc
or
test
and
mov
jmp
add
mov
adc
cmpsl
sbb
and
mov
fistps
mov
xchg
ret
mov
jp,pn
stos
cmp
jg
test
xorl
push
cmp
mov
cmpsl
or
add
rorl
dec
sbb
or
jnp
push
stos
mov
inc
xlat
xchg
scas
inc
pusha
xchg
inc
loopne
push
fcmovnb
or
xchg
popa
shll
adc
add
xchg
adc
adc
or
ficomps
cmpl
popf
sbb
rcrl
js
push
pusha
jmp
je
movb
and
test
imul
push
jmp
push
clc
pop
lret
into
jp
rol
mov
push
add
push
sbb
xchg
or
dec
shrb
jae
adc
sbb
jl
lret
out
adc
bndstx
sub
stos
jmp
andb
or
pop
cmc
xor
dec
cmp
sub
movsl
lods
xchg
sub
ljmp
add
jns
cmp
andb
insb
or
mov
xor
fiaddl
dec
cwtl
add
ss
scas
xchg
dec
xchg
sub
cmp
mov
push
sbb
hlt
outsl
dec
sub
dec
loopne
mov
inc
adc
mov
and
and
es
mov
inc
inc
jbe
add
lret
cmc
clc
push
test
cwtl
adc
xorb
pop
pusha
ret
shrb
pop
or
add
les
loopne
inc
dec
inc
mov
pop
jo
and
adc
jo
add
mov
fsubl
pushf
xor
adc
sub
mov
sbb
test
movl
jo
repnz
outsl
push
test
inc
jl
lahf
js
or
jg
jns
call
aas
movsb
jne
sbb
add
sbb
aam
lahf
rorb
inc
mov
cs
pusha
mov
outsb
add
push
adc
or
inc
test
jle
mov
rclb
fisttpl
mov
or
sbb
cli
insb
sub
imul
mov
sti
sub
sub
xchg
addb
ss
sub
and
inc
clc
xchg
lret
cmp
jno
pop
push
sbb
push
popf
dec
mov
ljmp
ret
insb
push
aam
dec
lds
xor
testb
dec
dec
test
push
dec
add
cmp
loop
xor
mov
mov
add
xlat
sbb
xor
scas
mov
ret
cld
sbb
push
fdivrp
movsb
rolb
jl
mov
ficomps
adc
and
sbb
pop
pop
push
cs
pusha
mov
mov
adc
aaa
sub
test
les
addl
pusha
in
sbb
mov
xor
mov
test
les
mov
push
fstpt
push
pop
xor
lret
cmp
repz
lods
testl
adc
int
dec
adc
pop
stos
rolb
jg
enter
adc
mov
adc
ljmp
fistps
mov
stc
cmc
sarb
aad
jp
pushl
dec
shl
inc
aas
sbb
out
jle
or
int
loopne
mov
or
popa
fwait
popf
pop
dec
sub
je
adcl
filds
pop
cmp
jne
faddl
inc
adc
enter
nop
cmp
add
xchg
movsl
imul
push
fsubr
adc
cmp
lods
jne
popf
lock
ret
push
adc
and
or
mov
pusha
sub
sbb
cmp
clc
add
test
push
shlb
je
iret
rcrb
jae
movl
aad
mov
pushf
decl
js
ja
fs
add
adc
ss
loop
fcmovnb
sbb
or
dec
sub
pop
in
loop
push
xchg
cmp
je
mov
add
mov
pop
dec
adc
push
mov
push
push
sbb
push
nop
adc
movl
pop
andl
or
adc
mov
outsl
mov
mov
loope
cltd
add
and
or
push
pop
fsts
je
adc
aaa
and
sub
sub
jecxz
add
shll
add
lods
ljmp
sub
clc
ret
adc
or
lea
rclb
inc
insl
sbb
daa
neg
insl
mov
mov
mov
or
adc
or
lret
inc
push
dec
push
js
leave
and
dec
test
je
xor
rcrb
sahf
movsb
out
imul
cmp
fstl
rclb
aad
add
ficoml
inc
inc
add
inc
cmp
adcl
inc
inc
arpl
imul
xor
jmp
and
sbb
ret
push
sub
pop
dec
pop
cmp
push
arpl
mov
mov
insl
add
pusha
mov
lods
xchg
push
pop
pop
push
add
mov
bound
es
pop
jle
fimull
and
push
mov
pop
push
divl
sbb
inc
jmp
push
dec
or
loop
ljmp
sbb
mov
aad
cli
push
lock
sub
jp
push
jle
loopne
repz
cltd
mov
insb
xor
and
pop
xchg
lcall
jmp
mov
mov
je
and
pop
in
lea
pop
dec
ret
mov
adc
or
je
shrb
call
or
pop
xchg
sub
mov
jmp
inc
sti
imul
pusha
jne
sbb
dec
mov
test
rorb
mov
call
mov
dec
inc
adc
dec
push
mov
jmp
cmpsl
test
cmp
sbb
stos
inc
out
add
icebp
je
dec
rorb
push
jb
cli
cwtl
lea
inc
js
stos
movsb
adc
pop
pop
jmp
in
lret
ret
pusha
or
adc
aaa
test
inc
pop
je
data16
and
test
cmc
and
aaa
dec
pop
push
cs
add
lea
call
lret
jmp
mov
in
cmp
pop
flds
jne
or
mov
je
lock
sub
mov
jae
cmp
pusha
mov
or
sbb
sbb
mov
lret
mul
sub
pop
pop
out
test
mov
popf
mov
or
inc
pusha
adc
je
push
or
pop
ret
movl
push
mov
in
shrb
push
out
lsl
inc
and
jbe
xor
cmp
lock
shlb
pop
mov
rcrb
add
loope
or
or
sti
shl
enter
popa
lahf
fcomps
mov
sbb
adc
add
loopne
ret
mov
mov
cmc
addr16
xchg
sub
ret
adc
sbb
pop
mov
sbb
ret
sub
add
ja
out
lea
adc
pop
in
movsb
lret
fimuls
jmp
in
pop
xchg
add
je
add
lock
push
notl
jbe
dec
push
push
push
push
repz
fldt
loop
dec
lcall
out
add
inc
add
jle
add
mov
ficoms
shlb
jg
jno
in
inc
dec
lea
stos
cmovb
mov
mov
test
lret
push
incb
aad
push
dec
mov
cmpw
inc
subb
enter
push
jp
cmpsl
or
and
dec
sbb
push
aam
cmpsl
adc
imul
xchg
or
mov
ret
imul
clc
dec
jae
sbb
mov
cwtl
sbb
clc
push
pop
inc
mov
add
aas
or
pop
push
ret
pop
add
ret
aad
loopne
mov
sbb
add
xchg
cvtps2pi
cli
add
and
mov
add
mov
cmovb
pop
mov
cmp
xchg
mov
pop
and
cwtl
shlb
mov
pop
sub
dec
mov
mov
or
inc
xchg
xor
adc
ror
xchg
clc
push
and
mov
xchg
and
lahf
mov
dec
sti
inc
test
push
add
xor
sbb
cmovno
mov
push
pop
incl
dec
lods
test
movsl
loop
xchg
loopne
sbb
lea
adc
mov
adc
jne
and
je
and
icebp
xchg
aam
or
xor
in
or
or
aaa
mov
dec
les
mov
and
test
stos
sbb
cmp
call
ja
arpl
mov
push
leave
lea
xchg
jle
cli
xor
rolb
add
sbb
sbb
pop
movsl
pop
mov
jg
daa
lock
xor
sbb
ret
adc
call
mulb
cmp
je
push
lcall
dec
out
roll
push
and
dec
and
loope
or
addr16
loope
std
inc
push
xor
aam
cld
fisttpl
fcoms
ja
test
mov
or
add
adc
inc
stos
add
jge
dec
mov
in
add
push
push
test
pop
add
fcmovnbe
xlat
and
push
outsl
push
adc
push
inc
mov
in
std
aad
into
mov
call
sub
or
jbe
jle
jp
dec
ret
pop
add
vmwrite
bound
std
lret
sbb
sub
dec
cwtl
cmovs
nop
js
inc
inc
mov
adc
or
call
push
push
mov
je
sub
stos
add
and
pusha
pushf
int3
xchg
fnstenv
add
sub
stos
js
insl
pop
push
flds
push
fnstcw
sbb
les
add
inc
leave
mov
out
dec
loopne
jbe
jecxz
xor
cltd
stos
lahf
mov
add
adc
insb
dec
cmp
or
divb
mov
idiv
cmpb
movsl
pop
shrb
ljmp
sub
jne
push
push
clc
mov
jp
sub
pop
loopne
push
xor
sbb
imul
inc
sub
xchg
aad
fbstp
push
sbb
insb
icebp
cmp
mov
fs
or
cld
dec
pop
icebp
enter
sbb
inc
loope
and
push
mov
repnz
adc
out
fsubl
adc
push
pusha
and
les
fwait
out
dec
repnz
or
loop
push
lahf
loopne
lds
dec
xor
lods
push
cmp
push
xor
or
adc
divb
pushf
dec
add
inc
add
mov
fstpl
subb
jl
incb
xor
adc
subb
jbe
repnz
insb
hlt
cli
or
lea
popa
mov
shll
cmp
add
xor
shll
sbb
push
es
nop
push
mov
addb
mov
sti
push
in
jne
xchg
movsb
dec
adc
std
cltd
orl
out
loop
fwait
jnp
ficoms
adcb
xor
sbbl
jle
mov
loope
inc
popa
faddl
loope
clc
fs
mov
dec
push
shl
dec
jle
fnsave
mov
push
fadds
outsb
xor
push
pop
mov
push
inc
fisubl
or
push
loopne
adc
shlb
fwait
mov
dec
loop
cmp
loope
xchg
xchg
xor
pop
je
sti
ret
jg
or
jb
pop
pop
or
std
cli
rclb
mov
inc
cmp
adc
aaa
jo
in
sub
out
call
cmp
jne
lock
dec
or
jge
neg
cmp
jge
mov
pop
out
pop
push
push
fsubs
sahf
pop
dec
jmp
jge
neg
cmp
les
int3
fisubrl
in
mov
bound
in
xor
cmp
mov
and
les
cmp
sbb
push
push
fildl
mov
dec
or
popa
test
loope
add
xor
adc
xor
bound
pop
jge
push
lret
fs
add
push
cltd
or
jo
data16
cmp
jne
add
xchg
sub
cmpsl
fwait
lock
and
cli
rcrb
sub
cmp
sbb
xchg
dec
sbb
insb
dec
scas
jg
ljmp
lds
inc
adc
pop
addr16
enter
push
or
push
pushw
add
jno
push
sbb
pop
loopne
or
test
call
cmc
push
lock
xchg
jno
jns
sbb
push
addr16
mov
imul
pop
pusha
cmpsb
xchg
gs
data16
daa
pop
cs
pop
scas
rol
cmp
push
push
add
inc
sbb
lock
addr16
add
pop
jp
cmpsl
inc
sub
sarb
add
repz
mov
xor
adc
repnz
cmp
add
xor
cmp
cmp
or
cmpsb
and
jmp
dec
xchg
insb
lcall
fisttps
in
fisttps
mov
loopne
aad
dec
mov
cmp
repnz
jb
adc
cmpsl
and
and
cmp
shll
in
adcl
repz
add
and
cmp
pop
and
test
add
insb
rorb
push
addr16
je
ja
inc
dec
psubb
icebp
dec
mov
push
sbb
sub
mov
js
mov
push
fadds
xchg
sbb
ret
xchg
sbb
mov
filds
mov
inc
cmpsb
inc
xchg
addr16
je
cmpsl
push
pop
jle
ss
dec
loope
sub
mov
adc
inc
pop
das
in
xchg
fcmovb
pop
dec
loop
mov
dec
fstl
add
adc
imul
sbb
add
sub
lahf
or
lcall
pop
push
xchg
mov
mov
mov
dec
xchg
roll
mov
pusha
add
sbb
pusha
mov
xchg
ficoms
pusha
add
fcoms
push
add
pop
ds
call
insb
adc
pop
xchg
add
ret
div
inc
rolb
inc
sub
push
mov
movsl
aad
xor
sbb
adc
lret
test
aad
je
fwait
xor
add
mov
imul
test
imul
fmull
jae
push
and
insb
dec
and
fs
jp
adc
fcom
mov
ds
int3
mov
pop
iret
pop
ds
cmp
cltd
in
add
xor
dec
int
or
pop
imul
popa
add
outsb
push
mov
bound
jmp
push
pop
add
add
lds
inc
mov
push
mov
ss
inc
adc
and
adc
and
lds
sub
loop
lods
repnz
lea
pusha
mov
je
mov
mov
mov
clc
sub
mov
inc
ret
add
pop
push
sbb
pushf
into
popf
into
loopne
jno
fstl
daa
hlt
shl
push
adc
mov
or
mov
or
and
insb
adc
loop
andb
xchg
fs
mov
mov
adc
and
repnz
inc
je
mov
adc
pop
sbb
insb
sub
bound
mov
leave
test
inc
adc
sbb
outsb
ret
jl
cmp
loopne
push
insb
cmpl
jns
jge
subb
add
rcll
add
imul
or
cmp
out
testb
add
push
or
adc
push
push
add
jmp
lret
sub
jle
jg
outsl
mov
xchg
out
int
sub
lea
inc
scas
loopne
scas
sbb
lret
adc
je
adc
aas
sub
push
sbb
fildll
in
mov
pop
cmpl
cmp
sbb
cld
test
imul
insb
loop
test
push
xchg
cltd
lret
das
jl
mov
pop
sahf
xchg
orl
mov
push
ror
or
adcb
push
xlat
mov
sub
jmp
pop
mov
fdivrs
mov
xchg
ja
inc
inc
add
aam
ret
enter
push
dec
cwtl
inc
dec
sbb
aam
xor
inc
cmp
mov
jle
out
sub
lea
popf
add
flds
fmuls
inc
cmp
outsb
incl
fcmovbe
add
jno
add
mov
int
stos
lea
mov
aam
push
in
movsb
jbe
jl
mov
cmp
xchg
leave
ficoms
pop
fimull
xchg
fcoms
int
mov
mov
imul
out
add
pushl
roll
hlt
jo
inc
add
sbb
stos
inc
sahf
ret
clc
outsl
int
bsf
jnp
or
fmuls
repnz
inc
fmuls
inc
pop
inc
cld
mov
fstp
cwtl
rclb
or
in
test
mov
mov
out
nop
stos
jge
ds
out
or
adc
adc
rorb
jo
loop
ja
mov
inc
sbb
or
ret
sarl
inc
fcomps
ret
jns
xchg
jle
add
pop
je
sbb
pushf
push
sbb
mov
xor
cmp
inc
cmp
push
pop
xor
jl
leave
sbb
mov
fiaddl
stos
push
inc
and
adcl
test
jb
mov
cmp
stos
test
lret
pusha
sub
loope
adc
push
jl
test
sbb
or
arpl
sahf
xchg
subb
popa
xor
je
push
dec
or
and
push
lea
mov
iret
jne
lcall
nop
push
pop
inc
sub
inc
or
add
xchg
xchg
icebp
out
mov
mov
mov
in
cli
scas
lret
div
fincstp
pushf
mov
jl
std
inc
xchg
mov
out
push
and
xchg
xor
enter
add
inc
nop
jl
addb
test
nop
arpl
lcall
pop
push
push
push
ret
lret
sbb
out
jle
ret
shl
dec
jle
imul
fcompl
ds
pop
jnp
addl
pop
loop
mov
bswap
popf
mov
push
in
repz
lcall
inc
push
jecxz
test
lahf
xchg
pushf
pop
ror
in
push
les
cltd
lea
push
idiv
inc
jo
sub
push
iret
pop
pusha
fmull
adc
decb
mov
inc
inc
mov
aaa
jle
pop
cltd
cld
test
rcrb
add
js
ficoms
mov
pop
mov
and
push
dec
push
xor
mov
adc
add
add
fldcw
flds
or
movsl
fisubs
rcr
adc
pushf
std
or
fstp
dec
sbb
mov
loopne
inc
jb
mov
sbb
lret
das
sub
ret
les
add
cmp
xor
ds
test
adc
xlat
data16
push
push
add
pop
jge
jb
xor
mov
and
ret
push
aaa
mov
lea
jecxz
imul
pop
add
movsb
sbbl
or
fmuls
pop
test
sbb
adc
mov
test
and
pushf
xchg
dec
mov
jmp
lret
mov
inc
xor
push
and
xchg
icebp
mov
add
push
jmp
push
add
insb
adcl
xor
clc
xchg
push
mov
cmp
jne
mov
or
jne
iret
stos
test
mov
pushf
pop
add
cmp
inc
or
and
testl
jge
std
fs
mov
mov
or
imul
call
mov
je
out
add
push
outsl
push
cmp
mov
dec
dec
push
outsb
ret
insb
cmpsl
repnz
rcr
sub
sub
pop
cmc
addl
fwait
adc
cmp
lods
or
jge
call
adc
sub
mov
cmc
daa
dec
nop
adc
pop
or
jl
jge
rclb
sub
movb
xchg
sbb
rolb
mov
adc
xor
dec
or
mov
add
sahf
xorl
mov
sub
jo
ret
je
pop
ret
jg
or
dec
mov
lcall
adc
js
stc
push
mov
push
lea
jecxz
std
stos
push
push
push
cmp
sbb
jge
pusha
in
test
sub
inc
fidivl
push
push
jns
ret
sahf
sub
es
or
adc
mov
xchg
add
mov
cmp
adc
push
sbb
mov
jl,pn
lock
xchg
cmpb
js
js,pt
push
mov
shlb
mov
pop
adc
loop
jp
pop
sbbb
mov
loope
and
js
push
scas
mov
data16
add
cmp
lds
cwtl
inc
sbb
mov
test
and
dec
fs
fcmovb
xor
into
pop
test
loope
xchg
std
add
mov
stc
sub
out
sub
hlt
mov
xor
jmp
call
xchg
sar
or
orb
xor
cmp
inc
movsb
movl
push
lea
inc
jle
lea
add
jmp
mov
mov
les
loop
xchg
outsb
ret
or
sub
clc
xchg
test
dec
aam
lds
sbb
clc
mov
pop
and
inc
addr16
push
cmp
iret
cmp
dec
test
push
cmp
fiaddl
inc
xchg
sbb
add
adc
nop
cli
jge
ret
mov
mov
dec
bound
sbb
add
lods
mov
cld
inc
adc
push
mov
pop
and
jae
je
sub
adc
lods
sti
mov
xchg
jl
ret
cli
aam
and
inc
push
dec
sub
loop
cld
sbb
jp
and
das
roll
jne
inc
adc
out
dec
pop
clc
xchg
les
movups
and
and
cmc
and
push
inc
mov
bound
test
int
add
inc
sub
push
and
call
jne
daa
mov
repz
aaa
xchg
push
push
mov
mov
movsb
movsb
hlt
lea
jle
pop
mul
xor
cmp
ja
scas
inc
jl
mov
subl
mov
mov
pop
push
subl
push
or
dec
push
sbb
jne
xchg
adc
shr
imul
inc
jne
push
and
mov
adcb
movsl
test
mov
add
rcrb
mov
imul
ljmp
insl
xor
cmp
cmpsl
neg
ds
pusha
in
nop
jo
or
sbb
adc
add
jns
add
testl
test
lret
add
xor
push
add
cmp
cmp
add
or
rol
ret
pop
bound
push
rol
in
adcl
sbb
jmp
mov
xor
jl
add
mov
adc
imull
xchg
data16
inc
mov
add
out
lahf
addb
jmp
cwtl
insl
cmp
mov
sbb
negl
or
leave
repz
sub
push
push
xchg
and
inc
out
xor
push
in
cmpsb
sbb
arpl
add
loopne
and
jmp
popl
dec
popf
adc
inc
test
xor
cwtl
and
out
push
incl
insb
push
into
fadd
daa
pusha
add
push
lods
sbb
dec
and
dec
addr16
xor
inc
dec
sti
add
sbb
cmp
enter
cmc
addr16
xchg
jbe
jmp
cld
push
test
dec
lds
mov
sbb
jne
mov
mov
xor
inc
mov
push
push
jne
xlat
rclb
push
or
mov
or
test
mov
imul
orb
rcr
add
jecxz
shr
mov
sub
movsl
inc
lret
mov
pop
mov
int
jmp
imul
rep
mov
mulb
je
or
sub
adcb
dec
pop
cmc
stc
mov
mov
gs
cmp
jmp
or
inc
push
or
call
mov
pushf
imul
jg
xchg
cmpsb
push
or
add
fsub
add
fs
push
out
in
sub
test
pusha
jo
lock
jbe
and
addb
add
dec
ds
sub
in
xchg
test
and
sbb
scas
and
mov
pop
xor
push
xor
int
adcb
dec
cmp
in
sub
ret
sub
dec
jle
ret
mov
fimull
add
push
mov
sbb
add
push
push
test
popf
movsb
arpl
pushf
mov
sarl
ja
xor
push
push
adc
push
push
test
movsl
sbb
jo
mov
aaa
call
inc
cmp
pushf
jmp
ja
inc
or
cmp
in
or
add
out
push
jecxz
sbb
add
pushf
arpl
mov
mov
shl
dec
fdivrp
testb
outsb
push
jp
dec
pop
xor
lahf
fidivl
xor
push
sub
lods
adc
lds
push
pop
add
inc
push
fidivrl
fstl
or
mov
dec
roll
adc
push
mov
dec
dec
sub
inc
pusha
sub
push
and
or
dec
sbb
test
adc
dec
xchg
add
sbb
cs
xchg
add
push
push
mulb
pushf
negb
lods
mov
add
push
and
jo
rclb
cmp
dec
mov
imul
inc
sbb
out
movsb
ljmp
mov
push
in
or
push
sub
push
mov
in
sbb
sbb
sbb
push
and
ret
add
push
adc
fistpl
pop
push
dec
adc
int
punpckhdq
xchg
mov
lahf
sub
dec
js
xchg
xor
push
add
ret
scas
sbb
pop
arpl
andb
arpl
jnp
mov
push
mov
aas
movsb
fidivrs
out
sbb
inc
aaa
xchg
and
aam
mov
sub
popa
sub
sub
cmp
cmp
dec
sbb
inc
push
dec
add
pop
or
sub
call
push
adc
jp
lret
pop
fwait
mov
dec
mov
fwait
push
dec
mov
inc
clc
add
into
sarb
inc
fnstcw
ret
add
imul
insb
and
sbb
adc
inc
fisttps
mov
mov
pop
push
adc
inc
sbb
adc
inc
mov
rol
sub
cmp
cmp
imul
loopne
mov
sub
ret
adcb
mov
xor
xor
and
repnz
hlt
lock
mov
jb
add
inc
outsb
fadds
cmp
and
sub
push
pop
sbb
fwait
sbb
mov
push
jo
dec
inc
xchg
dec
pusha
push
or
fldl
push
jns
insl
xchg
xchg
xor
jge
push
adc
sub
mov
and
push
outsl
lret
mov
imul
int3
enter
pop
jae
aad
testb
insb
jae
xchg
xor
hlt
jb
jmp
jns
imul
mov
cmp
lods
and
into
xchg
push
pop
sbb
pop
and
aaa
bound
dec
js
fwait
sub
aas
push
lret
sbb
jecxz
cmp
dec
cmc
fs
adc
inc
testb
push
lahf
jle
cmova
push
push
push
inc
pop
sub
mov
or
sbbl
or
out
mov
dec
mov
push
jge
inc
in
jl
inc
pop
mov
or
xchg
adc
idiv
jp
cmp
mov
inc
jbe
or
add
movsl
xor
xchg
push
fistpl
jo
jo
and
add
lret
or
inc
sub
mov
cmp
ret
jp
lods
mov
cmp
and
adc
and
xchg
push
push
add
sbb
call
aad
sbb
mov
sbb
cmp
out
inc
lods
sub
nop
call
sub
push
cmc
ds
movsb
enter
push
lea
push
xchg
pusha
push
dec
imul
in
and
mov
or
mov
cwtl
cmp
add
call
cmp
xor
sbb
movsb
loopne
into
jl
cmp
das
or
imul
test
or
dec
or
inc
je
inc
sahf
enter
and
lret
jne
stc
test
mov
xchg
pop
push
arpl
xor
xor
xor
fdivr
jge
add
ja
loope
xor
push
pcmpgtw
sub
inc
loopne
in
in
pusha
push
sbb
popaw
cli
adc
and
jnp
test
add
inc
adc
inc
and
mov
outsl
popf
add
fs
mov
icebp
addb
lds
adc
shrb
adc
scas
aad
push
mov
adc
test
rclb
fistpll
inc
add
loopne
and
cli
jle
lea
jle
sti
add
jge
fisttpl
idiv
filds
pop
mov
sar
cmp
jne
sbb
mov
fsubrl
jnp
inc
cmp
jl
cmp
cmc
and
cmp
jb
dec
shr
xchg
push
inc
fs
ljmp
sub
out
mov
sub
inc
push
add
sbb
test
mov
push
sbb
push
sbb
add
mov
xchg
jge
ret
into
pop
pop
sbb
jle
mov
fldl
cmp
push
outsb
xor
inc
cli
dec
mov
add
pop
ds
dec
outsb
push
test
nop
mov
roll
rcrl
outsl
jmp
push
js
imul
cmpb
ret
shlb
mov
pusha
cmpsl
inc
das
stc
sbb
pop
sub
cmpsl
sbb
inc
add
ret
js
jb
incl
in
push
push
inc
shlb
adcl
mov
jp
enter
mov
divb
inc
sbb
pop
roll
movsl
rclb
dec
dec
xchg
pop
inc
pop
hlt
test
pusha
jo
mov
jle
fsubrl
or
mov
push
cld
xor
int
add
dec
push
pusha
lods
push
push
fisubs
pop
adc
push
sbb
jae
jno
icebp
push
xchg
cmp
and
ret
adc
add
or
pop
fcoms
jo
arpl
movsb
ret
sbb
push
inc
sub
jp
xor
xchg
test
inc
loop
rorw
movsl
out
adc
fsubrs
jp
add
xor
or
lea
push
ret
aad
push
and
push
jmp
add
in
sbb
xor
pushf
xor
adc
sub
add
mov
inc
bound
xchg
and
xchg
sbb
test
inc
adc
mov
les
sbb
xchg
aam
push
or
sub
mov
sbb
sub
sarl
dec
pop
and
push
and
std
push
and
and
in
dec
shll
sub
or
pop
sbb
adc
pop
jg
push
lea
push
sbb
insb
pop
outsb
int3
add
or
jne
and
dec
and
sub
test
inc
dec
xor
mov
add
insb
mov
sbb
and
sbb
imul
test
sub
addr16
test
jg
lods
push
sub
and
pop
aam
inc
mov
test
pop
les
xchg
inc
push
jg
lods
arpl
sbb
xchg
and
stc
cmp
add
in
add
and
out
inc
test
fsubr
jnp
fwait
and
or
and
popa
cs
jmp
sbb
lods
jle
imul
inc
xor
push
and
mov
adc
test
cmp
jne
test
jne
mov
mov
add
xchg
push
lock
es
data16
inc
or
jbe
add
ljmp
outsl
lea
jl
jne
fwait
sub
add
and
cmp
mov
stc
aaa
iret
sahf
fnstsw
filds
jne
add
ja
cmp
bound
cmp
sbb
lods
repnz
push
or
cmp
jns
and
jne
mov
or
add
inc
inc
sti
or
sbb
add
push
mov
fwait
jle
jo
sti
push
pusha
inc
jne
sbb
insl
mov
lea
push
jno
and
add
cld
pusha
adcb
pop
aam
cmc
sbb
arpl
jg
pusha
or
sub
lock
aam
dec
aas
fadds
mov
es
addb
xchg
fsubl
inc
lahf
test
out
add
mov
dec
fisubs
or
add
je
les
mov
dec
jle
push
pop
xchg
nop
stc
insl
adc
es
fiadds
xor
jge
jge
ret
fisubrl
shl
add
push
fsubl
or
les
sub
mov
mov
lcall
adc
cmpl
pop
dec
les
mov
or
inc
xchg
rclb
or
push
or
add
jge
adc
push
push
stos
sub
int3
push
push
ret
in
fiaddl
push
push
cmp
mov
mov
sbb
or
xchg
add
and
cwtl
pop
pop
lods
aas
xor
sar
jbe
mov
ljmp
mov
or
mov
in
add
jg
adc
test
fwait
ror
sti
adc
jne
sbb
cmc
jmp
mov
shrl
out
sub
loopne
sbbb
add
pop
sub
fdivrs
mov
stos
cmp
dec
push
adc
inc
mov
mov
inc
mov
in
jnp
imul
adcb
fistpll
popa
jge
clc
push
pop
dec
jne
fdivr
or
adc
test
dec
jp
loopne
test
lea
lret
int3
cmc
pop
sbb
add
pop
sti
mov
jl,pn
mov
jge
aas
cmp
jle
cmp
jmp
jecxz
je
jecxz
je
mov
inc
shll
adc
rol
daa
addl
add
fadds
pop
mov
fcoml
in
push
or
ja
rcr
push
sbb
mov
jecxz
imul
and
stos
adc
mov
push
cmpsl
inc
rorb
mov
and
pop
sbb
jl
dec
ficompl
and
sub
subl
push
cmp
push
jge
dec
cmp
jne
lods
jno
add
mov
sub
lcall
add
faddl
jecxz
out
pop
cmp
cli
cmp
jecxz
push
push
add
pusha
and
add
sahf
popf
loope
hlt
mov
sub
mov
das
sub
sbb
jbe
rolb
outsl
add
rcl
jno
ljmp
sbb
mov
dec
mov
int
adc
pushf
outsb
test
aas
ja
mov
add
insb
pop
fwait
mov
cwtl
out
repnz
mov
test
cmp
pop
and
adc
sub
dec
cmp
sar
cmp
jg
mov
aam
sahf
xor
jae
xor
cmp
add
jle
inc
dec
jl
lcall
sbb
addl
or
test
inc
out
adc
clc
ret
loopne
adc
jo
jmp
jmp
push
pusha
nop
cmpb
sub
sbb
pushf
pop
ret
inc
lcall
sub
test
adc
pop
movsl
je
mov
pop
sbb
mov
xor
push
push
pop
pop
or
repz
loope
sbb
shrb
pushf
int3
sbb
mov
push
fldcw
dec
loopne
std
ja
or
sbb
mov
dec
loope
cmp
jns
inc
lds
sbb
inc
movsb
add
mov
test
ficomps
push
lock
cs
inc
ljmp
iret
push
sub
push
push
int
test
adc
pop
fnstenv
sbb
pushf
lds
in
mov
or
inc
dec
les
in
add
pop
cmp
rolb
out
inc
js
sbb
outsb
xor
out
push
cmp
bound
test
in
data16
stos
sahf
sbbl
pop
push
xorl
jo
dec
or
add
pop
sar
insl
push
sti
mov
adc
xchg
jge
lods
add
pushf
add
add
cmp
imul
mov
or
aad
mov
jae
leave
shll
imul
pop
mov
or
adc
mov
add
movl
pop
sbb
out
jmp
sub
sbb
in
aad
shr
xor
xor
outsb
cli
push
out
pop
add
lds
adcb
or
ds
jmp
push
xchg
je
xor
pushf
adc
lret
insb
push
orb
insl
mov
mov
and
movsb
es
out
or
pop
mov
push
fcoms
pop
or
push
lahf
lock
je
adc
sub
rcrb
ret
push
cmp
fstpl
mov
in
push
inc
inc
or
xor
mov
jl
mov
cli
subb
xchg
inc
sarb
movsl
orb
jne
sarb
add
jnp
mov
lcall
jl
add
xor
and
inc
xchg
mov
and
dec
add
fs
inc
inc
cmp
mov
pop
and
push
jns
sbb
into
or
or
hlt
popa
int3
loope
sub
aas
ret
cmp
shr
scas
sub
mov
add
sti
pop
arpl
enter
aad
add
lea
lcall
testl
cs
inc
sbb
dec
nop
mov
inc
cmp
mov
std
fimull
jge
push
js
adc
lahf
pop
push
inc
adc
mov
fadd
jnp
data16
jge
inc
inc
and
and
movsl
mov
data16
mov
push
scas
cltd
cmpsb
frstor
outsl
sbb
and
fisttpll
stos
jo
rolb
mull
arpl
shl
jl
add
xchg
mov
sub
dec
je
jp
push
pop
cmp
xchg
sub
cmova
addr16
test
std
pop
mov
sub
add
jg
mov
jg
mov
mov
mov
shl
data16
repnz
scas
inc
loope
aam
ljmp
cmc
add
jmp
cmp
inc
testl
mov
shlb
and
and
sub
into
ret
pusha
pusha
aam
cltd
mov
add
sti
loopne
jo
push
dec
mov
jmp
mov
push
push
decb
es
add
mov
cli
adc
push
add
adc
or
movb
or
incb
dec
jne
cmp
add
sbb
fcmovnbe
call
and
add
jo
and
stos
test
stos
push
push
add
adc
ljmp
mov
inc
or
cmp
outsl
push
dec
pop
gs
push
sbb
adc
incl
and
pop
fidivrs
rclb
lret
clc
inc
je
inc
sbb
in
lea
subb
xor
sbb
ret
jae
icebp
xchg
inc
dec
inc
clc
inc
shl
popa
fwait
inc
mov
adc
and
rcrb
pop
inc
add
jle
mov
cmp
jbe
cmc
sub
cmp
and
mov
cmp
ds
mov
dec
and
mov
lret
and
lock
push
push
mov
inc
ljmp
mov
jl
fcmovnb
mov
xchg
dec
and
add
arpl
inc
iret
loop
ret
pop
adc
sbb
test
mov
cs
orb
adc
and
push
mov
dec
test
add
lods
mov
mov
js
movsb
idivb
mov
pop
or
dec
adc
lret
xchg
mov
cmp
ja
sub
enter
adc
clc
mov
adc
dec
or
sbb
rorl
pop
sbbl
sub
ss
mov
inc
push
push
xchg
adc
mov
cmp
cmp
mov
lock
call
cmp
add
dec
add
add
xor
mov
jle
mov
mov
mov
ljmp
js
or
pusha
jl
add
stos
xchg
loopne
sub
ds
push
nop
or
cmp
mov
xor
inc
jno
and
sbb
dec
rclb
gs
sub
inc
mov
movsb
xor
inc
out
outsb
imul
sar
ret
jb
xor
xorb
scas
sub
pop
or
outsl
push
inc
mov
xchg
and
or
xchg
pusha
adc
stos
inc
sbb
push
dec
add
ss
inc
into
pop
shlb
xchg
pop
imul
sbb
and
sub
mov
lock
inc
xor
push
cmp
fimull
dec
inc
inc
stos
adc
dec
test
cmp
pusha
bound
push
inc
je
mov
pmaxsw
push
and
and
push
jo
shrb
je
rolb
fcmovne
mov
pop
add
mov
adc
nop
test
gs
inc
outsb
mov
push
push
mov
mov
xchg
push
aaa
out
add
sbb
or
pop
popa
xchg
test
adc
mov
cmp
data16
insl
jmp
dec
loopne
loope
je
or
adcl
xor
and
xor
rolb
je
stos
or
ljmp
adc
or
adc
or
or
mov
xorl
jae
lea
mov
push
push
push
out
mov
rcrl
cmp
or
insb
mov
lea
xor
mov
mov
sub
ljmp
push
push
adc
or
sub
scas
jo
jnp
add
movsl
or
adc
xchg
pop
fcomps
fwait
cmp
mov
inc
dec
push
pop
adc
mov
insb
sub
mov
imul
adc
push
jg
shll
xor
shrl
push
mov
test
and
and
int3
cli
cmp
jae
mov
ret
sub
jge
lea
push
xor
fimull
xchg
inc
sub
sbb
push
ret
rcl
loop
xchg
cmpsb
rcrl
shl
lcall
push
or
mov
js
jl
testl
dec
mov
stc
and
orl
jmp
and
jbe
sub
add
pop
cmp
xchg
aaa
or
xchg
test
fmuls
cmpb
inc
jne
andb
or
xchg
mov
lret
jecxz
ret
mov
rcrb
sub
mov
inc
jns,pt
std
in
pusha
mov
cmp
gs
adc
sub
mov
adc
imul
jmp
jmp
jbe
push
inc
shll
sub
fiadds
xchg
neg
xchg
sbb
pop
or
mov
mov
andl
outsl
cmp
fwait
inc
push
adc
inc
and
aam
dec
dec
fildl
adc
add
add
loopne
test
inc
cwtl
add
and
sahf
fnstenv
push
push
mov
add
sbb
jbe
push
jle
jne
rcrb
mov
and
cwtl
ret
mov
clc
adc
fs
adc
cmp
addb
and
ret
lea
sahf
loop
jne
push
lea
jbe
jge
sbb
fdiv
addl
je
adc
idivl
or
imul
cwtl
push
xchg
je
sahf
ret
addr16
or
jge
ficoml
cbtw
and
sbb
shll
adc
and
lahf
addl
dec
fstpt
pop
or
mov
sbb
and
cmp
jbe
lret
incb
jo
add
pop
push
adc
lods
mov
push
or
push
sbb
cltd
mov
push
adc
xchg
pop
in
iret
fbstp
inc
sub
call
sub
sbb
add
insb
mov
and
inc
sbb
aaa
sub
jae
add
or
nop
xor
xchg
dec
cmp
stos
mov
push
ljmp
cmp
cltd
into
ds
xorl
pop
lcall
xor
xchg
mov
aad
cmp
movsl
adc
je
add
push
mov
es
cwtl
jne
idivl
xchg
pop
or
ja
ss
je
cmp
jmp
add
outsb
xchg
sahf
mov
adc
js
xor
and
movl
loopne
dec
fs
shld
lock
jae
or
or
pop
mov
lock
pushf
outsb
xorb
std
mov
inc
bnd
adc
out
or
mov
mov
fmuls
push
data16
mov
movsb
roll
or
xchg
dec
sbb
or
dec
lock
cmp
dec
ljmp
bound
add
fwait
xor
xchg
push
jno
xor
mov
daa
sti
jp
ljmp
inc
cli
mov
sbb
mov
cmp
fwait
mov
jp
or
dec
call
add
push
and
add
rclb
cmp
adc
lcall
sub
mov
mov
and
mov
cmp
movl
mov
and
add
sarb
xchg
mov
xor
pcmpgtd
push
push
cmp
mov
and
cmp
outsl
adc
lock
scas
adc
mov
lock
jbe
loopne
dec
dec
inc
add
xor
in
pop
lods
rorb
jo
dec
jae
lods
sbb
sbb
mov
test
sti
push
in
cmp
mov
mov
mov
je
adc
dec
aas
or
xor
and
inc
arpl
mov
fld
add
call
or
xchg
movsl
rolb
or
call
mov
test
jbe
mov
pushf
sub
push
sbb
fstp
xlat
mov
dec
lock
adc
cmp
inc
or
aam
cmpb
jne
jg
and
cwtl
push
jmp
and
addb
adc
enter
sub
aaa
push
push
or
fadds
insl
pop
arpl
cld
push
jne
std
dec
jmp
sbb
mov
imul
testb
mov
ja
adc
pop
push
adc
incb
iret
negb
or
lock
shl
or
testl
jl
lret
xor
mov
jmp
push
pop
jle
dec
mov
mov
add
add
dec
fsubr
lcall
sub
mov
jbe
cmp
je
ret
cli
in
or
movl
jnp
sub
mov
fwait
outsb
push
mov
scas
inc
sub
push
js
mov
fcmovnb
fistpll
je
mov
mov
xor
add
cmp
jmp
adc
dec
ja
jle
test
out
addb
jae
test
jo
std
mov
sub
lods
sahf
cld
sbb
mov
mov
ds
mov
pop
fcom
lods
sub
push
mov
jbe
mov
jnp
sub
test
mov
lock
pop
add
pop
mov
xlat
ljmp
pop
push
je
cmp
sub
lods
or
or
or
or
rorl
pop
outsl
dec
or
jns
adc
sbb
sbb
clc
daa
mov
mov
sbb
pusha
test
add
dec
ljmp
dec
ss
sub
inc
adcb
sub
ja
dec
or
sub
cmp
adc
xchg
lret
inc
jno
in
ja
lds
push
and
fwait
or
push
outsb
shl
mov
pusha
ret
mov
mov
sbb
pop
push
test
leave
test
pop
jnp
dec
ret
icebp
xchg
ds
lcall
mov
inc
iret
push
push
inc
outsl
es
inc
enter
or
ret
xor
add
push
lcall
arpl
outsb
int3
ss
push
push
pop
jl
xor
jbe
lcall
outsb
push
orl
outsl
mov
test
adc
xchg
push
int3
int3
add
clc
mov
mov
mov
sbb
int
push
mov
stos
mov
shl
clc
fstl
xor
aad
lret
cltd
fdivr
inc
mov
jb
int3
shrb
mov
dec
pushf
dec
aad
enter
outsl
ficoml
or
dec
or
mov
je
pop
orl
nop
push
xchg
inc
mov
lock
pop
add
movsb
fcoml
inc
cmpb
cmp
ret
and
mov
cmp
mov
test
mov
stc
mov
sbbb
mov
mov
push
inc
aam
push
les
popa
mov
dec
insb
mov
cmpsl
js
jb
mov
xchg
and
das
push
mov
push
xor
inc
or
in
sub
fmul
stc
add
jno
inc
add
mov
stos
cmovp
jnp
or
mov
sti
arpl
push
push
mov
inc
fadd
add
or
xchg
cmp
orl
aas
xchg
push
push
mov
add
dec
stos
insb
test
dec
inc
leave
ficompl
jne
add
sbb
adc
push
and
mov
jne
push
bound
std
pop
add
movd
sti
pop
dec
adc
add
add
inc
add
add
add
clc
adc
jge
xlat
push
pop
aad
jl
inc
insl
fidivl
loopne
je
inc
das
dec
adc
adc
test
mov
jl
ja
mov
jbe
jne
rol
jnp
dec
shrl
push
xor
dec
nop
jp
push
lods
cmpxchg
es
scas
or
and
inc
and
inc
mov
dec
or
cmp
aas
jae
mov
and
sbb
mov
add
jbe
dec
add
lahf
movb
dec
add
mov
xorb
call
jmp
call
mov
dec
add
add
pop
addl
inc
out
mov
cwtl
test
cmp
xlat
mov
or
pop
push
outsb
push
cmp
inc
std
adc
cmp
pop
lods
push
pop
mov
jg
cmp
mov
loope
ja
xor
sub
adc
mov
push
inc
pop
or
dec
cmp
jnp
pop
inc
xchg
sbb
cmp
test
imul
repz
xchg
jno
jge
and
test
mov
mov
or
lock
and
xor
xor
mov
mov
or
lret
mov
dec
sub
sti
add
out
sbb
inc
std
cmp
adc
sbb
inc
jge
sub
dec
xchg
sub
testl
pop
push
jge
mov
faddl
xor
andl
imul
mov
sub
add
add
outsl
pop
repnz
in
movsb
jbe
mov
xor
ss
add
clc
dec
dec
jne
cmc
mov
or
dec
insl
or
jae
cmp
cmp
lea
je
test
pop
push
jecxz
add
pop
fs
adc
popf
rorl
jmp
fistps
push
mov
stos
cmpsl
rcll
jo
test
into
inc
adcl
pop
ljmp
add
lea
sbb
adc
xor
popa
push
and
push
lret
mov
or
add
into
mov
fwait
repz
xor
pop
sbb
xor
adc
clc
jo
pop
ret
roll
or
adc
movsl
mov
sub
xor
outsb
lds
sbb
test
mov
inc
cmp
repz
rcl
mov
les
jne
in
push
dec
add
xchg
data16
cmpsb
roll
add
mov
mov
and
aad
dec
vpandn
ret
mov
sub
pop
sub
ljmp
icebp
jne
out
icebp
adc
xor
and
sbb
cmp
loopne
or
outsl
daa
incl
mov
enter
cmp
test
sti
lret
aaa
push
xchg
aad
jmp
dec
call
std
pop
push
cli
pop
enter
xchg
dec
cmpsb
rcll
push
cmp
js
add
add
testb
lret
push
push
jmp
dec
add
es
jmp
adc
mov
push
and
inc
adc
movsb
fiaddl
loopne
xor
shll
aad
loope
mov
mov
mov
dec
sbb
lea
mov
fistpll
mov
ret
es
je
rclb
push
and
xchg
dec
inc
stc
sub
rcl
xchg
stc
push
jmp
add
mov
lds
sub
sbb
mov
cmpsl
lds
inc
add
add
outsb
sub
inc
xor
add
clc
lret
xchg
shll
enter
mov
outsl
add
push
testb
push
add
dec
pop
push
pop
jle
cmp
mov
cmc
adc
jbe
adc
pusha
pop
dec
inc
lock
lods
mov
loopne
cmp
sbb
sar
mov
jo
cs
mov
stos
mov
jne
or
lds
sbb
lds
pop
les
and
adc
push
dec
adc
push
pusha
popa
insl
outsl
xchg
call
sub
push
loopne
push
push
gs
dec
pop
xchg
dec
xor
filds
pop
mov
orb
movsb
jmp
mov
add
stos
adcb
das
push
dec
jnp
mov
dec
jle,pn
in
mov
lods
lods
lds
dec
out
add
mov
loope
push
dec
xchg
addr16
filds
dec
jl
push
pop
and
adc
xor
mov
and
push
add
shrl
imul
xor
jae
mov
sbbl
sti
inc
adc
mov
mov
adc
jns
fdivl
js
inc
adc
test
mov
sub
inc
push
dec
inc
adcl
js
mov
sarl
inc
push
mov
pop
push
add
push
imul
das
xor
clc
xchg
ljmp
stc
adc
pusha
or
add
je
aas
nop
or
adc
mov
dec
ljmp
dec
clc
das
jnp
sub
dec
ficomps
mov
sti
jle
add
addl
out
sbb
adc
inc
shlb
lods
rcll
push
fwait
rcl
pushf
rorb
adc
js
arpl
sub
add
mov
aas
nop
and
and
test
sbb
orb
dec
jg
mov
ficomps
out
incl
cltd
push
cmpsb
test
and
or
xor
dec
lcall
test
loop
movsl
and
pop
or
and
fs
lcall
call
inc
cmp
ret
adc
cmp
mov
movsb
cmp
ret
and
pop
and
add
into
jge
xchg
mov
xor
das
xchg
mov
push
lods
push
push
xor
and
inc
push
mov
and
clc
les
xchg
xchg
xchg
push
sbbb
push
mov
inc
or
cmp
cmpsb
mov
jno
jo
rol
xor
push
andl
sbb
ret
addl
sub
out
and
jo
lods
dec
icebp
cwtl
xor
xchg
inc
jmp
xchg
cmc
rolb
pusha
xchg
rcrb
jmp
es
and
push
ljmp
and
sbb
and
or
and
std
mov
add
inc
pcmpgtb
mov
dec
sbb
stos
sahf
or
xchg
scas
fxch
sahf
les
in
inc
jle
cmpsb
adc
js
lcall
jne
je
dec
pop
jge
movsb
mov
push
adc
in
jne
arpl
outsl
arpl
push
inc
inc
pop
adc
adc
adc
mov
sub
addb
and
xchg
popa
lret
adc
shlb
icebp
jno
jo
pop
mov
movsb
inc
cmp
jmp
sub
or
push
les
pop
inc
jne
pop
movl
push
cmp
jo
inc
or
lods
dec
je
pop
adc
cmp
ret
pop
jmp
jl
xchg
adc
mov
lea
add
mov
xchg
jo
push
pusha
ljmp
dec
stc
xchg
cmp
mov
cmp
inc
fbld
adc
pop
ss
dec
rcrb
or
inc
rcll
dec
inc
mov
dec
push
out
jns
xchg
leave
mov
push
rcrl
mov
inc
lds
push
movsb
int3
in
addr16
and
sub
faddl
dec
js
ret
loope
leave
inc
inc
daa
mov
je
inc
push
enter
pusha
dec
xlat
roll
or
inc
fs
and
out
or
inc
add
scas
xchg
xorl
pop
push
add
lahf
cmpsb
lahf
mov
jno
aas
mov
or
adc
adc
xorl
or
jbe
mov
and
test
in
adc
popa
gs
subl
jb
fsts
dec
pop
and
mov
shlb
mov
mov
dec
mov
mov
sbb
lock
pusha
idivb
and
push
or
lods
imul
push
dec
scas
cmp
loopne
pop
jns
and
ret
push
adcb
aam
dec
imul
mov
jmp
pusha
filds
sub
and
inc
aam
lea
test
sbb
fimull
cmp
push
hlt
mov
xchg
mov
out
scas
lret
pushf
inc
bound
pusha
jg
mov
jge
add
add
or
pop
xor
test
pusha
jl
pop
enter
push
cmp
or
repnz
push
mov
xchg
mov
mov
lock
add
add
mov
insb
xor
xchg
scas
or
sbb
pop
xor
mov
cmpsl
movsb
lock
setl
xor
rcll
std
push
inc
push
int3
add
jl
cli
decl
flds
add
je
dec
push
push
push
data16
ret
dec
testl
jo
add
jnp
dec
mov
or
add
pushf
push
imul
test
movsb
insl
scas
orl
pop
imul
and
mov
cmp
mov
add
adc
sbb
inc
add
mov
adc
sub
clc
dec
je
push
pushf
mov
push
adc
push
roll
push
sub
or
jnp
cs
mov
dec
adc
enter
call
in
sbbb
mov
mov
push
imul
or
push
mov
adc
imul
dec
sub
adc
or
dec
add
push
pop
imul
or
jl
pop
or
inc
adc
cltd
pop
adc
setle
popa
pop
addr16
adc
mov
and
sarl
or
sbb
xor
add
add
push
rolb
push
lret
or
in
push
jg
shll
popa
add
les
or
lea
push
mov
mov
rol
adc
jp
test
adc
test
sbb
mov
dec
add
or
add
cmp
inc
lahf
push
add
cmp
lods
lret
mov
adc
jg
call
adc
imul
cmp
lcall
pop
sahf
iret
inc
lret
leave
sbb
roll
rcl
push
push
inc
imul
add
push
and
adc
pop
sub
mov
push
add
cmpsl
push
and
rcl
shr
imul
pop
enter
xchg
pop
scas
fcomip
nop
inc
jp
pop
and
loopne
dec
enter
out
dec
out
and
mov
xor
pushf
mov
test
mov
movsl
out
sub
inc
call
mov
test
mov
test
mov
pop
ja
inc
push
loop
ja
or
scas
push
inc
aas
xchg
xor
push
push
push
and
dec
or
cltd
or
cmp
lahf
int3
and
leave
sub
sub
xchg
aam
add
or
and
in
sub
or
inc
and
or
stos
int3
xor
lret
sbb
dec
inc
and
push
push
inc
mov
push
lcall
mov
fadds
rcll
add
xchg
pusha
adc
loop
lret
rolb
adc
sbb
pop
lea
push
add
or
cmp
les
inc
xor
mov
shrb
icebp
or
push
xor
mov
cmpsb
jmp
add
or
pushf
or
cs
pop
jns
test
adc
sahf
test
sbb
xchg
mov
add
sbb
repz
pop
xchg
pop
or
lods
sarl
sub
movsb
push
jecxz
lahf
add
pop
mov
push
js
inc
sarl
push
cmp
decl
mov
test
jns
out
pop
jl
push
cmp
mov
jg
jmp
push
jge
pop
pop
dec
lea
int3
clc
fsts
inc
mov
mov
std
adc
shrl
jo
mov
insl
cmpb
cmp
sbb
adc
cmpsl
jnp
into
xor
or
ret
popa
psubb
arpl
in
in
and
in
xchg
lea
inc
pop
bound
jbe
jle
and
mov
mov
movsl
movsl
imul
push
pop
fimull
push
sbb
jp
pop
mov
lahf
add
jmp
jne
xchg
add
push
push
adc
adc
mov
and
adc
adc
movsb
test
sub
and
dec
inc
pusha
shll
inc
in
call
mov
stc
and
add
mov
dec
dec
mov
pop
or
dec
adc
xchg
xor
push
push
lds
mov
jmp
push
jmp
push
movsb
enter
lcallw
jo
aam
cmp
dec
enter
cmp
js
fisttpl
pushf
inc
push
addl
mov
adc
mov
pusha
mov
jb
adc
fldcw
lcall
sub
cmp
adc
call
xchg
jne
cmp
and
in
mov
negb
pop
jle
decl
cld
or
incl
cmp
jle
insb
push
cmp
push
mov
mov
jae
mov
push
adc
je
pop
push
push
mov
jmp
decl
mov
xchg
aam
into
jno
pop
add
mov
xor
or
es
inc
mov
movsl
scas
push
les
or
test
mov
inc
arpl
adc
add
add
testl
data16
sbb
xchg
push
fimuls
iret
sub
mov
test
xchg
dec
push
cltd
push
adc
inc
ds
adc
mov
pop
adc
repnz
and
in
out
push
cltd
ss
cltd
fs
dec
push
xor
hlt
add
shll
or
xchg
inc
cmpsb
or
add
or
pop
ss
xchg
mov
add
daa
roll
fists
add
or
daa
add
mov
push
pushf
add
lds
aaa
and
add
shrb
add
sahf
loop
push
mov
sbb
shlb
or
loop
push
out
xor
mov
xchg
sub
mov
sub
sub
xchg
sub
push
mov
mov
mov
sbb
leave
aad
fistl
and
pop
leave
xchg
pop
push
sbb
xchg
sbb
shlb
push
sub
ret
pop
mov
cld
push
cmp
push
pop
aad
push
mov
inc
and
sbb
mov
pop
and
lret
mov
cwtl
mov
test
push
dec
in
pushf
pushf
adc
xor
xchg
adc
adc
ds
scas
enter
add
push
movsb
dec
dec
dec
dec
push
push
dec
dec
or
add
mov
daa
daa
daa
or
cmp
pop
mov
aas
or
pop
sub
aas
xchg
xchg
sub
les
sbbl
in
adcb
adc
shrb
adc
fildl
faddl
sbb
insl
shlb
shlb
and
push
sbb
les
leave
dec
mov
test
out
push
dec
adc
add
arpl
mov
and
fmull
iret
mov
sbb
cmp
dec
mov
clc
mov
push
lea
cmp
mov
or
cmp
push
fcompl
ret
xchg
xchg
push
add
xchg
mov
pop
adc
fimull
add
mov
sub
xor
leave
imul
and
cmp
sbb
add
add
rol
pop
mov
mov
cmp
inc
das
push
roll
xor
sub
jne
movsl
xor
insb
sub
xor
lods
mov
mov
mov
lret
insb
cmp
dec
mov
jl
fisttpll
jmp
mov
pop
sbb
out
push
push
sbb
xor
adc
mov
add
sbb
loop
jns
aas
icebp
mov
lods
es
je
sbb
ds
mov
sti
daa
test
cld
inc
xor
pop
test
bound
fnstcw
push
ds
or
xor
push
xchg
adc
in
jo
fimull
sub
mov
add
sarb
pop
xor
ds
pop
and
xor
xor
or
sbb
nop
pusha
js
push
inc
hlt
pop
fs
or
jnp
cli
push
add
popa
fisttpll
pop
rclb
sti
std
push
test
push
int
mov
and
sbb
mov
or
int3
sbb
xchg
shrb
rclb
dec
sub
insb
dec
dec
movsl
pop
inc
lock
jecxz
inc
sbb
push
lock
dec
and
lds
out
nop
and
sbb
inc
movsb
push
adc
mov
movsb
fiadds
and
mov
cmp
icebp
inc
xchg
or
or
dec
dec
inc
pushf
lea
pushf
sub
and
testb
andb
push
sbb
sahf
data16
push
rorb
add
add
cmpb
call
into
mov
stc
mov
pop
add
int
adc
fs
sar
or
lea
dec
popf
iret
loopne
jp
shlb
sahf
lret
fsubl
fdivs
int
mov
sub
idivl
flds
inc
xor
jo
cmp
xchg
push
xor
push
notb
or
add
gs
xchg
push
das
pushw
inc
and
div
repz
jb
in
adc
mov
sub
xchg
and
mov
shlb
jo
pop
or
imul
or
inc
push
and
es
or
in
jbe
popf
loopne
xchg
xor
lea
rcl
cmpl
jle
mov
js
fldt
nop
push
das
cmp
jl
mov
mov
add
cmp
or
push
push
data16
lods
sbb
aam
daa
into
jb
jl
push
inc
enter
jg
test
jge
push
xchg
dec
add
lock
xor
leave
dec
mov
mov
jle
cmp
jl
out
mov
mov
out
mov
cmp
xstore-rng
cmpsl
inc
lods
ss
add
cmpsb
xor
cmp
sub
cli
cmp
or
daa
sbb
mov
dec
dec
rol
push
jmp
test
shlb
repnz
add
and
lea
test
or
ret
sub
loope
inc
inc
inc
push
jb
add
mov
mov
lret
pop
xchg
adc
test
xor
push
rolb
lock
shrb
xchg
pop
aam
cmp
rcrb
mov
xchg
mov
cmp
cwtl
or
add
pop
rorb
fmuls
add
repnz
push
test
dec
sub
lea
mov
daa
mov
sbb
mov
or
dec
cmp
or
pop
add
out
or
mov
cmp
mov
xor
jle
or
or
icebp
test
and
dec
adc
xor
xor
or
inc
mov
add
pop
mov
stos
fnstenv
xchg
push
push
loop
mulb
out
jmp
jge
and
and
aad
icebp
aas
or
lock
cmp
mov
jg
push
and
mov
fmuls
outsl
xchg
scas
pop
imull
aad
daa
push
mov
xor
jns
and
je
sbb
loop
or
scas
and
in
inc
jo
mov
imul
xor
daa
fists
push
por
std
xchg
dec
faddp
cmp
arpl
subl
jmp
aam
adc
fisttps
insb
mov
icebp
jg
movsb
xchg
aam
and
fadd
jecxz
jmp
push
mov
out
dec
ljmp
sbb
shll
pop
mov
add
xchg
push
add
rcll
adc
pop
imul
lods
jb
push
or
bound
mov
shlb
jl
lret
mov
xchg
or
adc
xchg
mov
test
jo
outsl
adc
dec
or
mov
mov
sbb
push
into
std
orb
inc
xor
add
shrb
and
pop
xor
xor
mov
test
out
or
push
popa
adc
mov
sbb
in
pushf
fnstenv
lods
dec
mov
cmp
adc
pop
xor
loopne
imul
and
mov
push
add
or
push
cwtl
fs
and
aad
cmovs
jl
cmp
push
idivb
jge
mov
jecxz
or
jae
jle
sub
jge
or
pop
insb
sbb
or
test
mov
xor
push
add
or
xor
inc
push
adc
or
inc
sub
sbb
sub
mov
sbb
cmpsb
imul
sahf
imul
cmp
hlt
repnz
cmp
inc
rorl
add
sbb
ret
dec
xchg
dec
inc
xor
sub
data16
jbe
shll
and
ret
dec
pop
pop
pop
dec
and
sbb
int3
inc
or
add
add
test
js
pop
movl
mov
data16
sub
or
or
xor
dec
out
imul
or
jge
add
add
jae
or
inc
shrb
cmp
inc
shll
add
je
imul
adc
sub
or
shr
push
pop
and
cmp
ret
pop
push
clc
and
push
or
lea
push
jne
insl
add
dec
in
scas
pop
movswl
ret
pop
cs
ret
xchg
mov
adc
dec
ja
push
nop
andl
cld
lahf
orb
cmp
jne
testl
or
out
inc
lock
rorl
or
ljmp
fstpl
push
mov
cmp
cmp
jne
xchg
push
enter
dec
cmp
push
fdivrs
mov
hlt
push
adc
outsb
pop
add
dec
pushf
sbb
inc
and
outsl
xchg
fisttpll
movsl
add
pop
mov
xor
xor
sbb
es
push
or
aas
jo
adc
push
stos
js
sbb
ljmp
divl
xchg
xchg
pusha
sbb
cmp
pop
push
test
mov
xorb
outsb
xor
and
fdecstp
inc
adc
mov
popa
jno
lahf
push
and
movsb
jb
inc
mov
push
mov
adc
fs
or
sub
pop
jns
or
or
add
adc
call
sub
push
push
push
int
andb
cmp
out
adc
xor
mov
test
insb
dec
std
jle
xchg
xchg
fisubrs
rclb
mov
xchg
mov
leave
lds
test
dec
or
or
pop
add
dec
popa
mov
insb
xorb
push
inc
sub
rol
cmp
dec
xor
adc
fistps
sbb
int
mov
or
xchg
clc
imul
mov
std
sahf
popa
pop
jle
push
push
add
xorb
jge
jge
test
cmp
push
adc
inc
je
outsl
dec
push
or
jno
call
mov
loope
adc
cmpsl
xor
push
popa
rorb
cmp
or
lcall
out
sub
and
inc
and
fmull
popf
add
insl
adc
jmp
sbb
cmpsb
add
sar
test
push
push
movsb
lods
jmp
or
call
cli
jb
je
jne
out
lea
sbb
add
sub
mov
call
fistpll
pop
lret
sub
jl
cmc
push
push
xchg
push
int3
jne
push
stc
mov
pop
cmp
push
push
jl
imul
inc
push
cmpsl
mov
or
je
call
or
bound
and
jle
in
push
test
pop
pop
fs
sbb
outsb
mov
in
xchg
scas
lods
sbb
out
pop
push
and
push
cmp
or
das
out
pop
loop
push
inc
fcompl
or
mov
adc
pop
push
jecxz
call
sub
push
lcall
sub
fadd
test
inc
inc
clc
sbb
imul
pop
dec
jg
sub
enter
lods
movsb
fstps
sub
fwait
push
add
nop
nop
sbb
scas
add
mov
adc
insb
out
test
add
mov
sub
popa
add
test
jle
cmp
or
mov
test
lret
add
enter
cs
adc
sarb
jo
jl
cmp
cmpsb
push
push
or
dec
clc
pop
fsts
mull
aas
add
inc
pop
and
add
add
push
cli
push
adc
and
xor
push
movsb
or
addps
push
add
mov
nop
test
mov
dec
pop
clc
test
pop
dec
xor
push
fstps
gs
pushf
xlat
out
cmp
jo
xchg
or
mov
and
stos
pop
aaa
sbbl
dec
mov
dec
loop
pop
push
adc
xchg
xor
add
jo
pushf
insl
into
or
mov
fimuls
roll
loope
or
pusha
mov
jle
and
mov
mov
or
testb
jno
xor
xor
loop
mov
jno
and
scas
pop
add
or
inc
test
mov
leave
push
sub
add
xor
push
mov
inc
dec
rorl
jl
lods
rcll
mov
xchg
ja
ss
adc
repnz
insb
mov
xchg
pop
or
cmp
rcll
sub
enter
push
iret
imul
jp
jb
adc
sbb
and
jns
sbb
push
and
and
popf
andl
or
aas
push
adc
imul
in
inc
cmp
sbbl
iret
add
jl
xor
and
or
sbbl
leave
jae
jl
and
orl
adc
pop
adc
adc
or
sti
test
inc
push
cmp
fists
scas
mov
pop
cmp
subb
push
jle
incl
daa
cmpsl
add
rorb
jg
dec
or
mov
fwait
movsl
add
add
orl
and
sub
sub
lcall
xchg
dec
dec
rep
mov
test
sbb
add
adc
mov
jmp
add
or
mov
xor
lahf
test
push
sbb
cmpsb
sbb
test
aas
adc
insl
test
daa
or
push
jp
js
xchg
idiv
data16
cmp
cmp
lods
mov
out
jnp
pop
nop
stos
fcomps
dec
adcl
xchg
lock
lods
insl
aaa
add
jl
arpl
loope
mov
sub
ret
jle
jmp
or
push
rcl
cmp
push
out
ds
lcall
add
mov
pop
jmp
adc
test
or
lahf
jmp
nop
xchg
popa
scas
lea
inc
add
clc
push
insb
or
dec
push
or
les
stos
jg
dec
dec
and
int3
out
sub
dec
loop
movsb
pop
push
mov
test
bound
and
lods
sarb
into
push
pop
fcoml
pop
push
inc
adc
pop
add
jg
mov
push
xor
add
out
inc
insl
xor
mov
aam
push
push
fldt
add
rol
push
rcrl
ficoms
clc
mov
dec
jns
adc
xor
xorl
test
lods
adc
inc
lahf
addr16
loope
sbb
std
mov
jl
outsl
fstpt
add
jge
push
je
and
cmp
xor
dec
rcr
enter
in
sbb
in
sbb
add
leave
jl
mov
inc
adc
and
adc
lahf
ljmp
mov
test
mov
test
nop
xor
insb
sub
add
mov
clc
les
adc
pop
mov
lahf
sbb
or
je
push
test
rclb
rclb
insb
and
fwait
mov
push
push
lods
push
mov
add
leave
mov
adc
mov
jo
icebp
adc
xchg
je
les
je
testl
test
adc
nop
lock
jns
sahf
lret
fsubrp
xchg
jns
sub
dec
test
loope
clc
sbb
pop
sarl
fmull
push
sarb
lahf
or
repnz
out
out
loopne
dec
mov
dec
xor
lods
xlat
lods
push
jecxz
or
iret
and
dec
lahf
xor
test
add
daa
pop
movlps
ss
ret
bound
and
xchg
jae
push
outsb
sub
mov
insb
js
dec
movsb
and
sbb
dec
addl
push
dec
add
push
cmpsb
xchg
js
repz
je
fcoms
or
imul
ljmp
test
sbb
xor
add
mov
and
or
push
aas
push
or
sti
or
sbb
jnp
fdivrl
bound
or
iret
mov
lock
scas
js
addr16
xor
pusha
mov
or
out
jge
add
xor
mov
dec
dec
outsl
push
js
lea
push
lods
cli
adc
lret
fidivs
insb
cmp
xor
push
mov
in
mov
xor
test
into
shlb
orb
mov
repnz
js
hlt
addb
adc
dec
jecxz
sbb
cs
xor
or
clc
adc
sbb
loope
sub
jae
hlt
push
ss
mov
paddw
xchg
das
idivb
pop
lods
inc
insl
mov
pop
loope
call
dec
inc
cmp
daa
cmpl
add
fucom
sub
addb
and
gs
sbb
push
sub
lret
or
or
lea
jo
jl
test
orl
push
xor
lods
xor
jnp
xor
faddl
cmp
hlt
shrl
ss
stos
add
or
jno
imul
addl
adc
fiadds
xlat
cmpl
rolb
pop
mov
shl
sbb
or
sahf
rcrb
ds
jo
lock
outsb
lds
fwait
mov
insb
push
and
add
pop
mov
lock
dec
push
jge
inc
add
push
mov
cli
lss
mov
test
shlb
sub
and
xchg
or
mov
xor
test
dec
pushf
int
test
movsb
add
xor
push
jo
mov
test
ret
enter
addr16
pop
push
mov
add
sub
adc
mov
and
test
int3
jne
xor
or
inc
push
cwtl
gs
mov
and
lea
or
sub
outsb
cmpsl
jno
add
mov
out
push
lcall
mov
clc
mov
sbb
xor
lock
xor
pop
xor
cmpsl
inc
cmp
lahf
in
adc
pusha
aam
loopne
fdivl
stos
mov
rcr
iret
xchg
sbb
or
and
popa
je
fs
daa
fs
sbbb
inc
shrl
es
scas
enter
push
call
dec
push
mov
or
inc
add
xchg
jg
pop
test
jl
sbb
pop
jmp
aas
and
inc
pusha
test
es
inc
mov
mov
repz
cmpsl
orb
cmp
data16
mov
and
dec
fisubrs
sti
adc
shrb
arpl
cmp
aaa
nop
xchg
jbe
fwait
xchg
push
loop
mov
arpl
bnd
xlat
dec
sub
inc
jle
jge
roll
test
sub
adc
cmpsb
cmp
xor
adc
scas
roll
lods
inc
movsb
pop
mov
adc
jb
cmp
repz
add
ret
and
push
lea
adc
push
push
push
sbb
popl
push
push
inc
filds
pop
lcall
cld
cmp
je
rcl
sub
dec
stos
rcrb
jo
pop
xor
fnstcw
push
mov
pop
add
or
nop
cmp
push
add
inc
cmp
sub
fcoms
fadds
icebp
in
mov
aaa
or
loop
pop
cmp
sub
rclb
push
xchg
andb
or
mov
xorb
nop
cmp
or
xchg
add
cmp
mov
scas
andb
add
movsb
std
pop
aam
ror
out
mov
jo
pop
aam
dec
cmp
mov
movl
jns
scas
movsb
pusha
mov
arpl
jp
dec
je
cwtl
jae
push
testb
sarb
pop
sbb
push
inc
push
dec
push
sbb
nop
add
dec
mov
aaa
or
or
and
sbb
outsl
jbe
push
test
sbb
shll
aam
mov
roll
jmp
movsl
rclb
mov
das
mov
xchg
push
movsl
js
jb
mov
pop
sub
cmp
xchg
dec
sub
adc
in
stc
fsubrl
jge
dec
sti
sub
mov
sarl
mov
daa
sbb
sub
jno
enter
xchg
test
dec
mov
push
aaa
aam
dec
insl
jmp
dec
mov
and
pop
sub
dec
push
out
sub
pop
aad
adc
xor
sub
add
mov
int3
mov
inc
mov
test
xor
push
mov
jl
push
push
imul
and
test
mov
dec
jne
add
adc
cmp
mov
dec
pop
pusha
stc
cmp
leave
xlat
lods
aam
and
lret
inc
fsubr
call
add
dec
das
enter
mov
hlt
cmp
add
pusha
inc
pop
sub
sub
jmp
ljmp
rcrl
bound
inc
xchg
ljmp
mov
punpckhdq
jmp
and
dec
jl
ret
xor
subl
dec
sub
mov
outsb
adc
mov
loope
add
xchg
inc
data16
xchg
popf
mov
xor
test
shlb
adc
fimuls
outsl
adc
dec
push
test
call
push
arpl
repz
bound
xor
push
mov
dec
xchg
gs
test
jbe
mov
fists
mov
jne
push
lea
aaa
push
icebp
rorb
or
leave
cli
lahf
adc
or
sub
jne
add
cltd
imul
jno
insl
cmp
sbb
mov
pop
test
mov
rclb
mov
popf
lea
mov
push
and
mov
and
and
xorb
mov
notb
push
test
loope
lock
xor
add
push
lret
jnp
or
and
jmp
je
aas
shl
mov
pop
sbb
hlt
lea
and
push
inc
aaa
fsubrl
nop
loope
pushf
mov
push
sub
cwtl
scas
adc
pop
push
mov
test
cmp
iret
add
mov
push
nop
insb
lds
push
and
dec
pusha
sub
push
pop
or
sbb
xchg
cmp
inc
mov
lods
or
add
push
ds
sub
xchg
je
sbb
jae
lahf
push
cltd
clc
cltd
mov
aad
xchg
push
jns
jne
and
sbb
stos
jnp
pop
mov
mov
add
add
inc
mov
cld
fs
push
inc
rep
and
cmp
push
jle
lea
sbb
lods
xchg
mov
stos
and
dec
mov
push
ja
outsl
cmp
add
add
push
and
lods
adcb
mov
sbbb
je
cld
mov
push
dec
cltd
es
pop
jmp
mov
mov
adc
xor
or
xor
leave
enter
jo
out
bound
push
adc
in
je
jge
cmpl
fbstp
sbb
xor
and
sub
mov
inc
sbb
xor
add
jl
test
test
inc
je
or
std
xchg
cmp
sub
sbb
mov
mov
gs
addl
jb
dec
rolb
xchg
jne
inc
clc
inc
cmp
pop
mov
lods
adcl
daa
sti
je
push
add
imul
iret
sub
push
mov
or
pop
xor
push
push
std
inc
mov
adc
mov
sbbl
xor
push
call
rcr
or
mov
push
rcr
mov
lea
sbb
outsb
dec
sub
or
pop
adc
sbb
adc
fs
sub
jg
or
mov
add
cmp
push
fldl
enter
pushf
sbb
mov
sub
xchg
jmp
pusha
pop
inc
ljmp
push
sbb
mov
or
mov
and
imul
nop
movsb
xchg
cmp
out
push
aad
cld
xor
push
sbb
add
pop
lret
dec
cmp
iret
add
add
dec
call
test
js
cwtl
dec
cmp
lcall
sub
add
lods
or
mov
sub
sbb
adc
addr16
push
jb
add
mov
push
sub
and
ljmp
add
rcrb
out
sbb
div
xor
into
rol
adc
mov
lock
push
xchg
pop
cmpsb
mov
mov
push
xor
and
adcb
xchg
add
cwtl
enter
lahf
xor
adc
push
mov
imull
cmp
fildl
ja
test
push
pop
sub
inc
mov
aas
or
dec
xor
fistpl
xchg
mov
sbb
jo
pop
mov
xchg
mov
pop
jne
sub
mov
xchg
push
roll
dec
adc
xchg
test
xorl
and
in
xchg
lds
pop
inc
imull
mov
sbb
cmpsb
jnp
insb
mov
punpckhwd
mov
rorb
add
push
jmp
push
test
dec
and
call
nop
sbb
or
and
add
add
dec
jecxz
popf
mov
xor
mov
dec
mov
pop
pop
and
sbb
jg
ljmp
cmp
pusha
add
imul
sbb
add
add
jmp
fimuls
pop
push
arpl
add
out
movsl
xor
ret
out
or
mov
int3
or
jg
add
dec
mov
fs
repz
cmpsl
mov
cmp
adc
lcall
fidivs
aad
and
mov
insl
pushf
xchg
lods
push
push
dec
cmp
or
dec
mulb
addl
jg
push
add
ret
sub
jmp
mov
mov
and
pop
andb
lock
pop
andb
and
push
aaa
and
pop
xorb
inc
jecxz
push
dec
adc
rorl
addr16
add
dec
pop
ja
add
pop
jne
les
push
cmpl
mov
push
mov
push
fstpl
add
inc
jl
and
lods
dec
scas
add
daa
xchg
adc
pop
sbb
adc
mov
sbb
jge
out
insl
jecxz
inc
aam
test
xchg
shrb
inc
add
ficompl
inc
dec
mov
mov
mov
je
dec
rorb
dec
ljmp
pop
mulps
xorl
mov
and
shll
and
cmpl
add
test
mov
mov
inc
testb
sbb
inc
push
push
inc
ja
jp
call
add
or
test
mov
lea
iret
roll
pop
insb
int3
shll
dec
aad
or
or
xchg
mov
xchg
arpl
cs
mov
adc
cltd
into
push
fwait
or
insl
cltd
or
cmp
and
mov
mov
pop
or
sbb
inc
out
bound
xchg
loopne
outsb
add
mov
and
adc
or
dec
shrl
lret
mov
jne
jbe
ret
inc
jne
xor
adc
in
lock
mov
add
or
or
orb
push
es
or
adc
fmuls
xlat
jo
add
sbb
pusha
icebp
inc
mov
mov
jg
cmpsb
jo
or
mov
jbe
push
lods
or
pop
or
cmp
and
mov
mov
daa
adc
pop
xchg
out
adc
push
push
fidivrl
fwait
das
mov
push
mov
jg
cmpsb
clc
ret
jmp
adc
mov
pop
rolb
add
call
push
mov
or
sti
add
call
push
push
call
pop
cs
jae
pop
rolb
cmp
mov
int
push
or
bswap
dec
xor
out
jbe
out
enter
enter
cmp
ror
mov
cmp
add
ret
cmp
pusha
lea
add
add
pop
scas
pop
pop
xchg
bound
popf
mov
and
scas
push
sarb
inc
add
pop
lods
mov
or
mov
lahf
inc
loop
jo
push
rolb
je
ss
mov
or
and
or
or
xor
and
pushl
mov
push
dec
sti
mov
dec
lods
out
push
out
call
inc
js
cltd
add
jle
push
ret
loopne
and
or
add
add
insb
cmpsb
lcall
push
push
je
adc
popf
movsl
jae
push
stos
push
push
sbb
inc
je
mov
das
fsts
xchg
mov
add
inc
mov
xor
sub
sbb
scas
into
pushf
jp
lock
push
push
ret
fists
mov
out
push
adc
dec
cld
fdivp
sub
popa
clc
push
cmp
cmp
dec
inc
dec
mov
mov
sub
movsl
adc
sub
call
cmp
push
cmp
or
pop
xchg
int3
adc
ret
sbb
mov
sub
pop
jp
jmp
push
pop
enter
push
xchg
fs
mov
insb
xchg
push
add
ljmp
dec
cmp
jecxz
push
cmp
cmp
mov
pop
decb
cmp
adc
cmp
mov
sub
jns
fldpi
jge
push
sbb
mov
sbb
or
andl
push
arpl
je
jmp
dec
shll
xchg
xchg
lret
sbb
aas
cmp
cmpsl
fs
inc
jae
mov
mov
cmpsb
xchg
adc
inc
sub
cmp
call
mov
or
test
jge
add
push
jnp
rcrl
inc
dec
inc
sbb
cld
jl
jmp
jle
push
and
jb
rclb
dec
xor
in
jp
push
push
mov
push
cmp
adc
lds
les
fwait
inc
mov
xchg
jo
sarb
enter
cmc
nop
lcall
mov
push
and
dec
push
xchg
lds
andb
xchg
ljmp
pop
jg
xchg
dec
or
jge
js
test
pop
sbb
push
xor
and
sub
pop
js
add
cmpsl
and
js
push
test
cmp
clc
dec
mov
or
dec
pop
pusha
or
or
lcall
jecxz
fcmovb
out
mov
add
pop
adc
inc
inc
ja
dec
mov
or
loope
or
pop
mov
dec
jne
mov
and
lea
mov
test
adc
and
sbb
es
and
or
sbbb
adc
fwait
push
mov
fwait
js
pop
rclb
mov
shrl
aas
gs
sbb
jmp
xor
and
or
jmp
push
inc
add
enter
mov
cld
mov
push
push
enter
andb
pushf
mov
cmp
dec
clc
subb
or
mov
sub
add
lods
push
adc
ret
push
jo
xlat
fdivrs
scas
fidivrs
pushf
ja
jmp
mov
mov
idivb
fimull
push
and
add
clc
sbb
xorl
xchg
pop
dec
pushf
xlat
sbb
mov
sbb
or
call
dec
and
adc
loop
add
imul
or
or
into
fcom
mov
lock
adc
mov
push
adc
xchg
xchg
mov
xchg
cmpl
fdivs
lds
pop
mov
dec
push
add
adc
lret
pusha
cmc
sub
ret
add
xlat
push
sbb
xor
sahf
or
mov
rorb
pushf
rcrb
imul
ret
lea
inc
mov
lcall
cwtl
je
push
pusha
mov
fnstcw
sub
call
pop
dec
popa
nop
or
loopne
adc
das
pusha
cmp
in
mov
mov
pop
popa
adc
dec
sbb
dec
sbb
add
es
sub
jmp
out
fildl
jge
mov
and
stos
popa
cmp
je
je
mov
push
icebp
add
add
movsl
or
push
add
mov
dec
jl
push
jmp
mov
movsb
cmp
xlat
fadd
push
sbb
sti
arpl
fndisi(8087
pop
dec
mov
mov
in
or
or
sub
lock
lods
test
inc
or
pusha
push
mov
fcomp
repz
ret
and
cld
adc
sub
and
cmp
lock
xlat
fldl
cmpsl
test
lock
lret
loop
incl
xchg
pop
add
push
or
mov
push
sbb
mov
or
add
bound
scas
imul
aas
adc
pop
mov
or
or
or
add
mov
push
lea
sub
inc
mov
mov
orb
inc
sub
cmp
rolb
fiaddl
mov
dec
push
xlat
rol
mov
ds
mov
ret
test
lret
scas
sbb
into
push
and
push
movsb
xor
mov
pop
lods
mov
or
sub
add
enter
add
mov
mov
loopne
shrl
fwait
add
push
dec
or
sub
shll
orb
lods
fdivs
addl
ss
cmpsl
add
jne
loope
repnz
maxps
xchg
pop
pop
testb
mov
movsl
dec
pop
loopne
and
sbb
add
pop
mov
sbb
stc
sahf
out
push
fs
insb
es
sub
sbb
pop
sub
cmp
mov
bound
mov
sar
or
in
test
addb
sarb
jl
sbb
scas
push
push
lea
push
dec
je
push
mov
dec
push
mov
stos
or
je
adc
sbb
ss
daa
pop
sub
add
fs
add
rcrl
jp
add
dec
aaa
sub
cwtl
nop
dec
and
into
jo
inc
or
xor
xor
es
pop
outsl
and
pop
dec
mov
inc
lea
push
rcl
inc
xor
cwtl
lods
xchg
out
cmp
push
fidivl
push
jo
dec
movsl
pop
lods
sub
jge
jl
jne
fnsave
and
cmp
and
pop
add
pop
gs
filds
je
xlat
jmp
movb
mov
sbb
orb
das
lret
jl
xchg
pusha
mov
or
movsl
sbb
add
mov
and
ja
sub
push
xorb
jl
jmp
xchg
add
in
push
cltd
mov
add
test
out
add
mov
test
push
fs
xor
nop
pusha
or
lret
into
push
scas
sbb
leave
xor
aas
and
sub
adc
sbb
popl
inc
cmp
int
and
xor
cld
sbb
add
mov
xor
adc
jbe
mov
rolb
push
jo
stos
and
mov
or
inc
test
add
rorl
dec
cld
sub
in
mov
jno
ljmp
loopne
mov
insb
into
or
push
inc
cs
lods
sti
test
jne
xor
loopne
lods
push
jmp
outsb
pushl
push
push
cmpl
das
xchg
pop
jl
sbb
enter
add
popa
cwtl
jb
push
bound
add
das
and
xor
add
mov
cwtl
outsb
add
sbb
dec
mov
push
and
add
push
mov
cmc
dec
adc
push
or
xchg
jno
and
cmpsb
les
dec
and
or
inc
faddl
xor
sub
jp
mulb
push
cmp
test
xchg
push
or
sbb
adc
dec
daa
jo
lret
mov
or
inc
pusha
fwait
sub
pop
jle
stos
arpl
popf
sbb
shl
divl
jge
out
sti
pop
cld
pop
cld
push
dec
and
shl
and
mov
je
mov
lcall
ret
adc
enter
cmp
cmp
cmpxchg
push
mov
lret
and
xor
ret
mov
sub
push
mov
xchg
sub
arpl
movsl
adc
cmpsb
test
repz
mov
nop
push
xor
jnp
adc
scas
pop
or
jb
stos
or
push
and
sub
je
adc
jg
push
inc
sub
lahf
pop
inc
fldl
pop
lock
sub
mov
push
dec
ret
sbb
test
imul
adc
add
loopne
mov
mov
lret
pushf
push
sbb
add
rolb
xor
dec
movsl
push
sub
xchg
jb
andl
inc
xor
push
ffreep
rorl
aam
cmp
dec
addb
or
loope
sub
loope
jbe
iret
cmp
roll
fbld
push
jns
or
push
rcl
call
out
es
pop
imull
inc
mov
mov
cmp
and
pop
push
repnz
fisubs
pusha
inc
dec
push
and
in
xchg
add
xor
mov
mov
rol
xchg
jb
adc
adc
cmpsl
xchg
mov
or
test
pop
dec
jmp
ja
enter
push
or
jmp
inc
xor
sahf
out
add
or
sub
adc
mov
js
sub
rorb
adc
arpl
sbb
dec
aam
or
iret
repz
push
pop
pop
aas
lret
in
push
or
add
cmp
add
repz
repz
std
ret
mov
xchg
mov
add
mov
sbb
xor
and
inc
loopne
or
jge
push
adc
call
jmp
mov
lock
mov
sub
add
cmp
xor
push
push
or
daa
test
iret
addr16
add
sub
cmp
lods
sub
lods
adc
rol
push
sbb
dec
test
and
rorl
rolb
ret
jl
cmp
sbbl
cmp
sub
cmp
add
aam
nop
dec
cmp
rcr
inc
and
sbb
pop
addl
or
iret
loope
imul
or
jmp
nop
pusha
xchg
or
xlat
add
sbb
sbb
xorl
repnz
ljmp
xchg
loopne
jb
lea
jle
xor
and
and
and
push
je
adc
je
or
je
sub
out
out
je
and
je
and
pusha
inc
jecxz
jne
sub
pop
fidivrl
lea
sbb
push
cmp
dec
pop
inc
mov
sub
sub
ret
xor
jnp
or
orb
xchg
jo
xchg
dec
mov
orl
test
and
incl
subl
inc
push
shr
mov
cmp
push
sub
add
mov
loopne
outsb
inc
sub
lds
aaa
loop
adc
or
popf
add
stc
sub
fsubs
mov
adc
add
add
int3
inc
xor
add
and
jb
inc
fnstcw
xlat
push
dec
push
cmp
arpl
inc
add
mov
hlt
clc
and
dec
jg
xchg
std
push
push
jmp
inc
cmp
jmp
out
or
je
outsl
test
fcmovnb
imul
push
ss
divb
fiaddl
popa
inc
and
or
movsb
decb
push
xor
jae
xchg
jo
add
dec
scas
jne
out
adc
insl
xchg
inc
inc
push
cmp
and
repz
dec
push
push
cmp
adc
dec
negl
mov
sbb
inc
cmp
out
mov
push
stos
push
jecxz
push
inc
jnp
repz
test
mov
inc
loopne
add
push
pop
or
add
or
sub
sbb
xor
lock
dec
pusha
push
sub
xchg
inc
adc
test
cmp
xorl
pushf
xchg
rep
fs
lret
addr16
mov
inc
pop
pop
inc
add
add
je
shl
js
iret
mov
push
and
cltd
sbb
and
jo
inc
mov
adc
and
pop
add
inc
icebp
mov
movsl
in
jae
popa
mov
xor
inc
lcall
adc
loopne
mov
pop
cmp
aam
mov
jge
mov
add
sarb
add
dec
mov
cmp
fisttpll
sub
add
sbb
and
cmp
xchg
ret
stc
jl
jo
dec
les
adc
jne
add
xor
mov
dec
testl
add
or
icebp
mov
cmp
or
or
pusha
pop
scas
sub
jno
dec
add
cmp
push
dec
push
cmc
add
push
sub
push
pop
and
sbb
add
jmp
out
adc
sbb
call
sub
sti
pop
test
xor
jno
add
iret
fsubp
mov
enter
jmp
and
in
fsubrp
pop
sub
repz
pusha
pop
push
sub
dec
test
dec
pop
inc
sub
test
add
or
xor
inc
pop
cmp
adc
adc
or
negb
push
push
cmpsb
movsb
fimuls
mov
adc
dec
or
or
pop
adc
roll
pop
gs
add
add
loopne
jae
sub
pusha
or
xchg
dec
inc
shlb
and
in
dec
rorl
cs
dec
xchg
add
pop
dec
shrl
dec
pop
imul
add
dec
sbb
jne
gs
adc
lods
aas
or
xchg
mov
hlt
mov
sub
cmc
mov
push
je
and
push
and
pop
jge
insb
sbb
sub
add
xchg
push
lret
popf
adc
inc
lods
and
mov
mov
adc
mov
ret
or
es
rcr
ret
jge
push
sbb
ret
and
enter
lea
adc
ds
push
cmp
stc
jbe
popa
mov
aaa
ret
cwtl
cmpsb
daa
jg
push
outsb
out
ficomps
jge
dec
push
insb
pop
push
movsb
and
imul
sbb
pop
mov
jae
xchg
mov
fmuls
in
adcb
cmp
scas
xchg
gs
in
insb
xor
jecxz
dec
inc
and
or
and
push
dec
sbb
and
aam
enter
jbe
sub
xor
push
int3
add
jo
and
test
and
sbb
mulps
sbb
rclb
sahf
ljmp
pop
addr16
bndldx
push
push
shlb
mov
push
jl
and
sbb
jge
mov
inc
pusha
mov
jge
or
pop
sbb
les
iret
inc
pusha
pop
mov
ret
push
xor
test
mov
sub
out
mov
nop
add
push
dec
and
push
push
pop
add
push
mov
shrb
inc
sub
mov
mov
cmp
xchg
dec
sbb
out
and
xor
add
mov
aas
dec
pusha
push
movl
rolb
sub
test
cmc
xchg
test
mov
lods
fnstenv
add
fwait
and
push
mov
fisttpl
add
xchg
push
pop
push
and
mov
mov
loop
arpl
pop
fwait
lret
test
arpl
aam
cmc
mov
push
sbb
sbb
sbb
cmp
loope
or
lret
jl
jmp
icebp
jle
xchg
addb
and
xor
dec
mov
jmp
mov
mov
mov
sub
jb
cmp
cmp
daa
sub
and
add
test
pushf
aad
or
sub
mov
daa
je
jmp
pushf
jb
lcall
cmp
data16
sbb
sub
pop
sbb
in
mov
and
mov
xchg
rorl
adc
jns
mov
cmp
and
inc
inc
mov
in
push
fcomps
push
mov
mov
xchg
push
xchg
mov
sbb
movsb
inc
xor
adc
mov
lret
adc
negb
lock
sub
mulb
lcall
jnp
mov
pop
jp
push
and
or
inc
push
sub
rcl
add
mov
push
cld
cmc
jmp
xchg
xchg
enter
adc
push
xchg
dec
xor
ss
jne
insb
dec
sbb
jmp
cmp
pop
lret
nop
push
pushf
dec
adc
jp
mov
orb
call
sub
sbb
sbb
imul
jmp
aaa
inc
adc
das
sbb
dec
pop
add
xor
and
or
adc
pop
inc
cmpl
cwtl
pop
movsb
ret
or
adc
mov
repnz
iret
xchg
mov
add
adc
test
jecxz
xchg
ja
inc
jmp
mov
push
dec
imul
pop
sub
sbb
pop
popa
imul
inc
jl
test
push
dec
add
aad
out
mov
neg
push
push
cltd
mov
mov
sub
pop
jmp
jp
int3
rolb
orb
enter
adc
ret
mov
popa
pop
test
push
in
sahf
dec
shll
pop
pop
sbb
push
rorl
fistl
outsl
shrl
push
mov
outsb
push
mov
fsubs
and
push
fdivrl
movsl
lret
enter
adc
adc
xor
or
jg
push
iret
and
mov
je
push
dec
das
adc
repz
pop
and
cmp
mov
push
pop
or
sti
pop
adc
dec
and
inc
dec
push
lods
jg
xor
and
jno
dec
dec
decl
fidivl
cmp
movsb
xchg
rolb
sub
or
test
bound
push
ret
fucom
jne
pop
mov
pop
cmp
jbe
add
nop
imul
ja
lahf
sbb
mov
or
xor
dec
sbb
jecxz
xchg
pop
push
add
ret
bound
pusha
push
push
and
and
pop
fstp
or
loop
fistpll
inc
jno
outsb
int
mov
sub
aaa
xor
cmp
fwait
sbb
cmp
call
push
push
inc
ja
mov
pop
or
nop
jmp
ds
insl
loopne
xchg
sub
pop
pop
rolb
shrb
add
push
ret
pop
mov
js
std
popa
out
sbb
jl
sbb
test
pop
and
ja
push
sbbl
push
lods
and
adc
jmp
or
lahf
cmp
dec
mov
or
push
xchg
insb
scas
dec
ficompl
mov
subb
or
cmp
sub
ret
shrb
out
lods
cld
pop
push
adc
gs
int
shlb
mov
xchg
jg
jg
mov
icebp
jb
je
mov
inc
jb
sbbb
sbb
and
or
data16
aaa
and
or
movl
scas
sbb
mov
jnp
add
and
lds
dec
dec
pop
push
fisttpl
mov
cs
or
and
insb
inc
add
and
je
push
adc
shlb
adc
pop
add
inc
testb
jle
ret
add
popf
xor
sbb
push
lods
fs
cmpl
sbb
movb
push
je
shlb
cld
dec
imul
xor
sbb
repnz
adc
push
nop
mov
inc
push
pop
dec
dec
or
int3
push
push
fs
dec
pop
outsb
cld
testl
rolb
push
mov
test
and
lods
adc
push
or
in
pop
add
xor
imul
je
add
aaa
aas
push
shrl
mov
inc
arpl
add
add
pop
icebp
neg
push
push
aam
add
push
rcrb
and
inc
inc
sbb
rorb
call
pop
jne
es
jmp
mov
add
xchg
pop
add
cmpsl
popf
mov
imul
std
adc
sub
push
push
push
cmp
shl
add
pusha
sbb
push
ret
add
cmova
ret
add
xor
popa
rcl
xchg
jg
adc
les
add
jno
lods
push
fsub
and
shl
xor
gs
add
popa
sub
cltd
add
das
mov
rcll
push
lock
adc
add
cmpsb
xchg
test
dec
cmp
lret
add
add
add
mov
shll
scas
mov
cmp
lahf
or
lahf
shlb
mov
scas
inc
test
sub
lock
clc
dec
fdivr
jge
jbe
push
hlt
pop
pop
add
sbb
push
add
push
ret
in
fmull
movsl
add
pushf
outsb
inc
pusha
add
cltd
inc
pop
add
inc
add
cmp
sbb
xchg
movsb
mov
mov
clc
lea
sub
je
adc
movb
es
dec
decl
dec
inc
and
lret
mov
mov
mov
cli
mov
ljmp
mov
sbbb
fnsave
inc
out
es
add
lea
outsb
inc
and
jno
cmp
nop
add
insb
mov
cmp
add
imul
adc
je
mov
inc
cmc
mov
add
push
lea
mov
fucomip
push
add
push
push
test
in
mov
dec
add
out
or
mov
faddl
je
adc
pop
xchg
sub
pop
rorb
mov
mov
jae
adc
int3
dec
and
xor
mov
mov
daa
jmp
ss
xor
add
fildl
inc
sbb
or
xorb
mov
add
adc
mov
jge
add
xchg
jnp
add
dec
sub
test
mov
andb
movsb
inc
sbb
mov
push
mov
mov
fs
std
push
outsb
bound
mov
xchg
dec
pop
iret
jl
push
push
imul
dec
cmp
jl
mov
inc
or
cmp
je
add
dec
cmp
pop
ficomps
sub
add
or
bt
xchg
jmp
cmp
or
js
mov
add
aam
add
dec
cmpsl
sub
nop
ret
shll
sub
pop
pop
nop
xor
cltd
mov
repnz
fcmovnbe
inc
pop
loope
push
gs
adc
call
arpl
mov
je
je
js
cmpb
shll
cs
xchg
mov
inc
xchg
lods
iret
aam
xchg
push
and
lret
inc
or
dec
push
jg
inc
lea
inc
dec
rcll
into
sti
ficoml
adc
cmp
dec
push
add
or
sbb
mov
push
outsb
pusha
add
lods
add
push
dec
lret
jp
movsl
ds
pop
sub
lret
sub
sub
push
addr16
sub
imull
rclb
sbb
and
neg
push
lea
movsl
idivb
add
inc
jmp
add
push
mov
push
add
push
insl
pop
aas
loopne
lea
bnd
cmc
push
pop
sub
mov
dec
loopne
lcall
cmc
aas
mov
into
lock
dec
xchg
adc
push
and
add
lret
push
mov
lds
jne
sub
fsubl
xor
cmp
ljmp
repz
dec
test
add
ret
pop
fstps
test
aas
push
inc
and
fidivl
add
add
sub
cmc
xchg
lock
ret
push
push
push
loopne
push
movsb
xorl
movsl
cmp
inc
shrl
push
pushf
sti
dec
testb
mov
insb
or
or
pop
aad
pop
int
cltd
xchg
out
inc
add
xor
xor
lock
in
jnp
shrl
das
push
push
and
pop
mov
add
les
cmc
or
add
or
jl
cmp
dec
add
loop
les
imul
cld
jg
ret
adc
jo
pop
mov
cmp
stc
pushf
ljmp
dec
pop
pop
or
ss
xor
jnp
mov
cmp
outsl
in
sub
movb
movsb
test
nop
mov
xor
popf
jno
fcomp
cmp
sub
lods
add
popa
cmp
and
or
pop
sbb
and
mov
jg
jle
and
pop
pushf
jmp
or
enter
push
lahf
ret
sahf
inc
sub
bound
mov
dec
add
sbb
jnp
inc
and
mov
sub
jg
mov
das
cmp
adc
cmp
fistpll
pop
dec
or
mov
mov
aas
pop
addr16
add
xor
push
push
adc
add
add
add
cli
push
stc
pop
jns
sahf
xchg
clc
or
or
xchg
addr16
or
or
js
inc
sahf
or
or
test
inc
jmp
xor
roll
pop
jle
inc
xor
ss
and
cmp
xchg
or
inc
sti
and
mov
fisttpl
stc
or
mov
pop
push
or
lods
or
dec
adc
cli
loop
add
stc
mov
xor
ret
adc
adc
ss
cmpsb
repz
lea
xchg
jo
scas
inc
adc
ret
fucomip
lods
push
jp
push
mov
mov
je
or
or
shll
ja
inc
out
add
dec
push
js
mov
xor
mov
filds
pop
adc
pop
or
mov
jmp
pop
lea
in
jl
mov
scas
rolb
xchg
jmp
sub
xor
addb
ret
cmp
je
mov
ror
and
vprotb
clc
dec
inc
lea
jp
and
xchg
pusha
stc
or
pusha
outsb
mov
sub
adc
bt
inc
testb
sbb
adc
cmp
and
je
pop
or
add
les
lret
js
out
sub
xchg
add
mov
add
inc
mov
sub
mov
push
ss
dec
sbb
rcl
adc
das
sbbl
add
add
daa
inc
mov
pop
aas
popf
adc
xor
sar
push
inc
addr16
sub
xchg
js
push
inc
outsl
jp
scas
or
push
jecxz
sub
and
mov
ret
dec
sub
inc
pop
rclb
xor
xorl
lds
lds
adc
jecxz
cs
sbb
or
sbb
rol
and
inc
xor
ret
jmp
and
and
mov
test
mov
mov
lock
or
or
or
inc
xchg
aad
xor
fcmovnb
mov
pop
adc
dec
pushf
mov
sub
leave
aam
push
inc
sub
or
add
inc
push
ror
loop
push
or
fadd
or
jge
mov
push
cld
jne
ret
gs
or
ret
pop
add
ret
mov
inc
sti
mov
andl
scas
cmp
call
inc
push
jbe
add
aam
cld
cmpsl
cmp
adc
lods
jne
add
inc
fsubl
in
push
push
push
push
js
push
in
loope
jne
cmp
inc
pop
test
cltd
push
mov
or
cmpsl
ss
jge
aad
in
cmp
mov
fdivl
jne
aad
idivb
add
fsubl
jge
in
mov
mov
add
ljmp
dec
inc
or
inc
cs
sbb
outsb
rclb
xchg
push
cld
inc
or
mov
bound
cwtl
and
rclb
popl
and
addb
lret
lea
lods
ret
dec
sbbb
adc
inc
sbb
or
call
outsl
js
shrl
xchg
push
push
cmp
and
call
mov
fidivrs
stc
jg
cwtl
call
int3
ret
mov
lea
or
prefetcht1
or
dec
scas
pop
pop
lret
push
push
shll
mov
js
push
push
cmp
jge
fsubs
cltd
jns
dec
pop
push
frstor
mov
mov
cmp
sub
and
mov
in
loop
mov
xchg
jecxz
mov
test
hlt
fmull
jmp
mov
fbld
test
cmp
out
push
xchg
inc
cmp
pop
pushf
popf
inc
add
mov
add
lahf
ss
imul
adc
mov
lods
stos
lahf
sahf
or
lea
push
rep
xor
push
sti
mov
inc
inc
push
or
je
jo
or
jge
jne
jle
xor
repnz
negb
sarl
aaa
dec
fiadds
addr16
push
fldt
inc
movsl
add
dec
add
push
daa
movsb
fists
push
mov
fidivl
sarb
nop
mov
lds
inc
dec
sub
jle
or
push
jo
lods
shlb
or
aam
push
ja
and
cmp
push
or
repnz
out
int3
xorb
les
fstpt
jmp
mov
adc
sub
push
testl
shl
dec
js
inc
xor
es
call
or
in
call
addl
lods
add
adc
and
cmc
std
pop
mov
dec
mov
nop
js
out
shlb
int3
push
test
or
inc
pushf
xchg
adc
add
adc
daa
shll
cli
pop
mov
add
cmp
or
add
iret
xchg
sub
xor
icebp
cmp
pop
sub
jmp
mov
jno
ja
xchg
popf
add
inc
xchg
pusha
addl
xor
test
sbb
rcll
mov
push
sbb
adc
out
movsb
inc
and
xchg
cs
mov
das
dec
popa
enter
xor
push
mov
inc
mov
xor
mov
mov
mov
and
xchg
push
adc
daa
mov
insb
dec
stos
push
fcmove
fiaddl
les
outsl
push
push
shlb
rorl
push
push
cmp
sbb
insl
pop
dec
out
add
push
arpl
in
jbe
push
sub
mov
push
adc
cmp
xchg
mov
stc
dec
mov
sbb
loopne,pt
xor
fdivp
insb
inc
je
nop
add
or
int
push
push
pop
push
sbb
mov
sub
fwait
mov
pop
push
into
fs
aam
or
mov
sub
das
jge
push
pusha
ja
pop
jle
clc
shlb
mov
aam
mov
mov
pusha
cmp
les
sub
or
jmp
loope
sbb
or
xsaves
sarl
xor
sbb
out
add
fidivrl
push
sub
outsb
xor
inc
xchg
loope
loopne
int
cmp
push
cltd
ret
add
jne
mov
xchg
adc
sbb
addr16
sbb
lods
jge
inc
cmp
mov
dec
lock
ds
sub
cmp
jbe
cmp
stos
cmpsb
cmpsl
and
inc
sbb
dec
pop
in
inc
data16
push
sbb
das
push
cmp
lahf
or
mov
push
nop
push
into
cwtl
mov
jbe
xor
mov
cmp
adc
das
sub
sbb
mov
adc
mov
ret
cmp
and
pop
rolb
jmp
das
jg
push
inc
xchg
mov
rorb
jbe
xchg
or
inc
sbb
aas
sub
inc
cmpsl
xlat
mov
loope
add
mov
stos
test
and
test
pop
xchg
inc
fmuls
push
and
movsb
mov
mov
adc
mov
pop
sar
stos
push
cmp
xchg
xor
adc
dec
adc
lahf
cwtl
mov
les
mov
adc
or
ret
imul
mov
sti
inc
sub
mov
ja
lock
mov
sbb
loop
dec
pushf
outsl
add
fwait
rcl
xor
pop
or
das
push
test
adc
push
and
mov
es
inc
mov
mov
mov
xchg
ja
add
push
icebp
lea
fstl
into
cmp
add
test
sbb
in
mov
and
inc
addl
lcall
push
pop
pop
cmp
mov
dec
loopne
fistl
xor
xchg
ret
movsb
mov
inc
cmc
mov
or
test
and
scas
xchg
inc
mov
ret
test
sarb
rcll
sbb
dec
lods
inc
mov
cltd
dec
fldl
rcrl
jmp
test
cmp
dec
add
xlat
sarl
xor
mov
je
inc
dec
adc
adc
add
jle,pn
pop
dec
push
xor
leave
mov
adc
cmpsl
lcall
or
call
lods
popa
inc
in
sbb
adc
pop
or
sbb
xor
and
lock
xor
pop
push
inc
movb
add
fs
dec
outsb
cmp
stc
clc
add
sbb
mov
adc
sub
aad
les
shll
inc
push
pop
inc
push
sbb
and
pop
adcb
sub
cmp
adc
push
or
ds
ljmp
dec
cmp
sub
ficoml
les
inc
xor
fdivs
mov
xchg
xchg
jb
sub
mov
jne
xor
aam
daa
add
sub
dec
push
in
pop
inc
data16
movsb
loopne
sub
ficompl
clc
rorb
or
add
sbb
fisttpl
push
push
xlat
int
jmp
faddl
or
xchg
ljmp
mov
hlt
mov
testb
xor
inc
mov
int3
aam
add
push
shrb
cmp
mov
mov
es
shrb
in
sub
mov
xor
mov
inc
xor
nop
sarl
push
imul
loopne
fidivs
push
adc
dec
mov
mov
inc
cmpsl
add
dec
mov
test
pop
jo
les
push
pop
jl
mov
aas
sub
dec
pushf
jp
add
ljmp
loopne
js
aaa
and
xchg
add
enter
mov
push
dec
push
add
or
inc
or
xchg
rolb
xor
lret
rclb
adc
xor
pop
in
jecxz
inc
cmpsb
pop
sub
cmp
or
and
pop
or
shrb
and
jne
sbb
add
call
sub
inc
adc
adc
jns
clc
ja
mov
adc
ret
pop
enter
jmp
add
adc
jo
mov
daa
dec
js
pop
sub
pop
add
jo
push
mov
and
or
add
test
shlb
push
movsl
into
inc
jg
lahf
or
push
push
push
mov
jl
cmp
pop
and
cmpsb
xchg
mov
xchg
pop
or
add
pop
xor
in
movsl
imul
jp
xchg
sub
fadds
push
or
sbb
jno
in
dec
lcall
mov
inc
loopne
cmp
and
popf
imul
fiaddl
inc
mov
cmp
subl
add
dec
push
addl
loop
mov
ss
mov
mov
shlb
or
push
mov
mov
push
and
dec
loop
xchg
jmp
lods
loopne
in
cmp
dec
dec
dec
fdivrl
and
add
enter
adc
pusha
or
popa
mov
dec
cmp
or
mov
jmp
enter
lock
enter
stc
mov
jge
add
push
and
mov
add
dec
jecxz
jmp
push
push
xor
rcr
mov
sub
lret
xor
add
xlat
fidivl
stos
adc
insl
stos
add
adcl
or
rorb
pusha
pop
jno
mov
aas
dec
jo
xor
dec
lahf
adc
rcrb
int3
jge
mov
add
movsb
loopne
and
mov
mov
inc
rorb
inc
test
pop
sarl
pop
adc
rorb
and
mov
orb
adc
pop
add
cmp
rol
addr16
insl
mov
jb
int3
fisubrs
cmp
cmp
orb
out
add
cmpsl
std
jmp
push
inc
sub
lret
mov
jl
mov
jg
sbb
push
shrb
flds
fcomps
jae
insb
xchg
ret
sbb
xchg
fcoml
sbb
pop
std
mov
mov
insb
add
sbb
push
not
jmp
jb
and
push
pop
add
pop
popa
xor
jle
or
sub
xorb
into
mov
sub
dec
nop
dec
lock
jb
cmp
sbb
fcomp
add
cmp
jl
jg
add
add
xor
and
inc
xor
and
popa
ret
pop
lcall
xor
stos
movsl
out
cmp
inc
stos
dec
sahf
out
dec
and
jecxz
dec
cmp
pushf
out
mov
inc
push
cmp
xor
sahf
das
sub
imul
jne
testb
dec
add
iret
or
pop
xorb
test
mov
ss
jl
dec
mov
add
rcrl
mov
insl
insl
aam
inc
push
mov
ror
push
push
iret
add
sbb
push
inc
or
leave
rorl
add
adc
or
es
sub
inc
das
fldl
and
cld
lret
rcrb
sarb
lea
add
cmp
mov
inc
out
inc
dec
loope
add
inc
mov
xchg
xor
es
push
test
je
cmp
or
inc
push
sbb
in
jae
cmp
ret
std
jg
adc
cmp
jb
cmp
ja
add
jnp
mov
sub
loopne
xor
xlat
add
lcall
leave
dec
fcmovb
imul
cmp
and
clc
dec
mov
call
andb
adc
and
xchg
pop
push
decl
das
js
fs
shl
sub
and
or
push
xor
pop
sbb
ss
data16
push
cs
sbbl
les
jl
xchg
or
adc
outsl
jge
push
cwtl
cs
sbb
push
test
daa
pop
push
fsubl
mov
mov
rclb
lret
mov
clc
mov
ret
mov
fcomip
lret
pop
push
push
mov
jmp
mov
roll
push
setp
inc
xor
daa
push
mov
pop
sub
cmpsl
xor
mov
aad
adc
push
xchg
push
and
nop
mov
movsl
adc
data16
mov
pop
push
sysret
mov
movsl
add
fwait
add
adc
sarb
rcll
sub
in
aas
pop
sub
push
aaa
aas
mov
pop
frstor
cmp
iret
sub
in
push
add
pop
lea
movswl
les
loope
lret
mov
or
loopne
add
add
ljmp
in
cmp
push
xor
icebp
add
std
mov
mov
or
idivl
iret
xchg
pop
xor
pop
adc
or
inc
sub
pop
cmp
movsb
add
xchg
inc
mov
adc
mov
inc
mov
leave
cltd
xor
push
push
addb
imulb
sbb
dec
jo
ret
mov
or
inc
mov
sub
fildl
sub
daa
jo
add
adc
sbb
dec
cmp
mov
xchg
sbb
lds
xor
sbb
xor
mov
test
dec
sbb
adcb
test
cmp
adc
fsubl
add
daa
stos
sub
pop
cmp
xor
sub
jne
or
popa
rolb
push
inc
sub
add
sahf
cmc
or
ja
pop
rcll
inc
mov
in
dec
push
dec
imul
in
clc
pushf
adc
js
jno
aaa
bound
cmc
inc
je
cmpl
pop
rclb
mov
subb
and
jae,pn
push
mov
arpl
sub
mov
adc
addb
mov
je
push
add
or
and
test
imul
or
aas
push
leave
dec
stos
push
mov
je
jo
dec
dec
xor
js
lds
cmp
cmp
das
xchg
mov
icebp
ret
and
dec
shlb
push
push
lea
dec
in
lods
mul
sub
sub
or
push
sub
bnd
push
jbe
xor
push
loop
and
or
jo
mov
aaa
mov
dec
inc
inc
negl
sahf
add
lods
dec
movsb
sbbl
incw
imul
add
and
adc
jle
enter
inc
sub
mov
pop
mov
xchg
mov
dec
or
dec
adc
and
pop
nop
pop
push
inc
adc
push
lahf
push
das
insb
add
test
xor
push
mov
fmull
mov
loopne
lahf
das
adc
cmp
inc
xor
xor
lahf
sbb
dec
and
jge
js
lcall
ljmp
in
loope
dec
sub
lea
ret
push
jns
or
sub
pop
pop
test
push
ss
jns
mov
shrl
ret
inc
fidivrl
nop
jp
int
jns
sbb
sub
push
push
inc
pop
and
inc
mov
out
es
pop
mov
push
js
gs
sbb
and
push
mov
sbb
clc
sub
cli
sub
inc
sub
lock
in
mov
dec
push
cmp
outsb
sbb
xor
aad
mov
dec
jne
adc
les
das
loope
pop
and
mov
jmp
ss
jg
in
add
jne
xor
es
lods
shl
push
icebp
call
pusha
call
sub
dec
jns
lea
insb
mov
dec
js
or
push
push
pop
add
add
jmp
fnsave
jmp
inc
popa
icebp
fs
adc
dec
jno
jge
dec
push
xor
js
int
dec
rorl
gs
pop
xchg
sub
sbb
lods
je
add
das
lcall
popf
pop
or
pop
adc
add
xchg
add
mov
xlat
incb
xchg
pop
leave
mov
push
mov
sub
out
push
inc
mov
xchg
xor
pop
or
mov
sbb
add
sub
or
iret
mov
pushf
pop
or
insb
add
test
cmc
mov
test
lea
add
add
push
push
push
add
pushf
stc
popf
loope
clc
cmp
cmpb
xchg
mov
rcrl
sub
pop
or
pop
arpl
inc
inc
push
test
jnp
inc
cmp
lea
jl
mov
shlb
bound
pop
dec
sbb
adc
pop
mov
push
mov
and
add
mov
xchg
mov
or
mov
dec
sub
mov
mov
xchg
ret
call
fdivl
test
adc
test
sbb
push
and
jmp
in
mov
xor
or
pop
arpl
push
dec
pushf
repz
dec
outsb
fcomps
pushf
dec
xor
lcall
mov
inc
sbb
imul
ljmp
sbb
inc
je
mov
movsl
in
loop
push
push
stos
movsl
ss
scas
dec
push
adc
sti
jno
aad
test
imul
lds
push
popa
mov
jmp
aam
lods
loop
sbb
adc
iret
jge
xchg
dec
and
stc
inc
int3
or
xchg
std
inc
sbb
jb
lock
cmc
ljmp
add
xchg
addb
cmp
les
rorb
adc
cmc
fadds
adc
gs
add
sbb
rol
aaa
sbb
loopne
xchg
fwait
push
into
mov
cli
pop
mov
inc
push
mov
inc
push
js
mov
or
pop
fwait
cmp
imul
insb
in
jl
inc
inc
or
push
rol
mov
and
mov
test
test
push
ret
add
fiadds
inc
xor
bound
shrl
andb
jmp
xor
stos
dec
notl
shrl
stos
inc
xchg
sbb
mov
cli
lret
movl
and
movsb
hlt
push
ret
rclb
sbb
lods
push
andb
popa
dec
push
rorl
cmp
sbb
aas
push
mov
loope
mov
mov
out
inc
cmp
mov
dec
shrb
push
in
jo
inc
fsubrl
mov
iret
clc
add
mov
jg
ret
in
sbb
sbb
mov
in
in
sbb
rcrb
sbb
lock
adc
xorb
shrl
loopne
popa
int
or
and
std
mov
and
mov
mov
stc
push
out
mov
sbb
inc
in
inc
daa
mov
sbb
les
rcl
sbb
sbb
adc
sub
incl
icebp
cmp
xor
push
dec
int3
in
xor
mov
jl
icebp
js
je
adc
int
lea
int
or
xor
outsb
add
adc
imull
shlb
dec
cmp
xchg
loope,pt
movsb
stos
push
decw
and
mov
fwait
mov
notl
mov
jo
push
push
mov
repnz
cmp
pusha
shlb
sub
push
mov
insb
adc
mov
insb
dec
and
orl
add
orl
or
imul
push
popa
push
or
mov
inc
xchg
jbe
icebp
push
inc
sbb
and
jo
pop
imul
fildll
popf
dec
mov
shr
and
xor
push
push
daa
jbe
bound
loopne
dec
inc
std
and
inc
push
push
cmc
mov
test
inc
int3
dec
and
nop
syscall
dec
adc
adc
jle
cmp
dec
sahf
fiaddl
rolb
adc
mov
aas
lret
push
mov
pop
sarb
pop
xchg
push
rorb
inc
rolb
jbe
popl
adcl
inc
js
insl
mov
loopne
push
leave
pushf
mov
lahf
mov
sub
pop
push
mov
testb
cs
insl
add
cmp
cltd
call
loopne
outsl
add
das
enter
sbb
popa
lea
dec
pop
cmp
outsl
js
out
push
mov
nop
jo
push
cmp
dec
inc
insb
imul
movsb
xor
dec
xor
movsb
addr16
arpl
add
dec
inc
pop
dec
or
lret
cmpsl
jbe
data16
cli
push
sub
movb
in
add
sub
push
xlat
adc
sbb
lods
stos
xchg
push
sarl
xchg
mov
mov
push
jo
mov
jmp
dec
movsl
or
call
push
je
dec
xor
add
loopne
dec
sub
adc
out
inc
rol
pop
xchg
fmull
das
xor
fs
pop
ret
jb
adc
inc
ds
xor
push
jecxz
sub
pop
and
add
mov
lods
movl
inc
arpl
pusha
dec
cli
xchg
iret
sub
sub
or
bound
cltd
jb
hlt
mov
sub
cmp
xor
inc
add
xchg
push
inc
and
inc
xor
push
mov
cltd
push
sub
jo
or
dec
mov
mov
lret
push
mov
push
lret
push
add
adc
fadds
jg
addl
sbb
clc
mov
jns
and
dec
push
aas
inc
push
imul
stos
dec
add
mov
lret
rcrb
roll
ret
clc
pop
push
cli
shr
addr16
and
mov
dec
adc
mov
push
adc
loope
pop
addr16
aas
cmp
fidivrl
dec
pop
jp,pt
dec
add
inc
xor
enter
js
scas
fimull
push
push
jne
pushf
into
aam
psrlq
dec
in
gs
imul
adc
push
out
or
dec
inc
dec
mov
ret
push
loopne
jecxz
mov
push
hlt
cmp
mov
xchg
xchg
xchg
sbbl
pusha
add
sbb
xchg
fsubl
rorb
shrl
inc
lds
insl
adc
add
inc
or
dec
sbbb
stos
mov
lret
sahf
inc
ficoml
sub
sub
data16
push
sub
cmp
cmpsl
xchg
outsb
sub
mov
inc
inc
aas
cs
lea
inc
push
popf
repnz
gs
jle
adc
push
mov
inc
fstl
adc
add
rcll
sbb
cmp
test
scas
outsl
sub
test
and
loope
inc
movsb
dec
sahf
scas
lahf
cmp
gs
sub
sahf
test
cmp
lea
mov
xchg
add
test
or
jne
out
sub
mov
sbb
cs
push
cs
inc
inc
andb
pop
push
or
or
nop
add
pusha
xor
or
rcl
adcl
pop
inc
and
push
pop
xorl
lea
std
push
xor
dec
aad
mov
shr
adc
in
lret
inc
dec
bound
push
hlt
mov
jo
mov
arpl
bound
jmp
add
cmp
inc
cmpsb
das
pop
jne
inc
mov
and
adc
lods
jne
jbe
loop
mov
je
adc
adc
repz
jl
xor
loope
jecxz
pop
adc
add
xchg
pop
add
sub
sbb
aam
test
jge
add
or
push
inc
call
sbb
cmpsl
xchg
and
popl
lcall
das
add
xor
inc
sbb
sub
mov
inc
rolb
clc
repz
mov
das
out
mov
add
loopne
scas
inc
pop
mov
dec
add
jl
cwtl
sbb
pop
mov
cmp
xor
int3
fimuls
adc
mov
test
push
pop
gs
xor
outsb
jmp
inc
or
xchg
xor
pop
push
pusha
push
movl
cmp
mov
sub
fisubrs
lds
mov
inc
fcmovnb
pop
and
test
rorl
xor
insl
sbb
pop
push
and
adc
pop
dec
sub
jb
or
rolb
jmp
repz
leave
or
mov
mov
pop
and
mov
sahf
mov
push
test
out
aas
cmp
dec
in
imul
aas
imul
or
data16
jmp
aaa
imul
mov
add
popa
pop
lods
outsl
push
xor
xor
adc
pop
adc
adc
inc
jno
es
aas
jbe
dec
inc
imul
pushf
inc
mov
dec
shll
push
mov
roll
out
dec
mov
fbld
sbb
adc
es
xlat
push
sub
push
out
sbb
jo
stos
or
mov
data16
mov
push
insl
in
loop
outsl
je
sbb
mov
and
adc
sub
pushf
push
lock
sbb
sub
dec
push
mov
lods
je
lea
inc
xchg
xor
dec
aaa
dec
and
mov
inc
rolb
push
push
push
add
test
iret
mov
inc
mov
pop
ljmp
aaa
test
push
inc
mov
pusha
fadds
inc
shlb
arpl
int
bound
mov
push
es
insl
mov
push
mov
call
lret
jno
aaa
dec
pop
push
popf
bound
sub
aam
add
movsl
jl
pop
and
call
xchg
and
das
dec
jmp
out
inc
sbb
xor
adc
or
xor
push
and
mov
rolb
dec
sub
popa
loope
sarb
sub
rorb
push
mov
sbb
dec
sbb
add
lods
jne
out
jl
jo
cmp
mov
icebp
insb
cs
cmp
sub
inc
sub
or
lods
and
mov
lcall
inc
jmp
adc
push
cmp
xchg
sbb
pop
mov
mov
sbb
xor
add
shll
sarb
pusha
pop
es
stos
cs
and
addb
in
daa
pusha
xor
push
cwtl
xchg
pop
shrl
push
pop
sbbb
nop
sbb
cmpsb
adc
xor
xorl
loope
dec
push
adcl
popf
nop
and
inc
pop
jg
or
lds
lret
pusha
sub
gs
pusha
scas
lods
outsb
fbld
pop
aam
aaa
mov
dec
push
stc
cmpsb
xor
stc
add
cmp
rclb
push
rcrb
jp
pop
pop
cmp
add
clc
add
inc
adc
add
jnp
fisttpll
push
push
lret
daa
push
in
push
xchg
es
or
pop
ficomps
insb
adc
fimull
and
inc
jmp
movsb
aad
pop
add
adc
push
adc
nop
and
pop
in
inc
imul
mov
arpl
fistps
mov
ret
xor
jmp
lods
mov
dec
outsl
in
pop
mov
fisttps
pop
js
fbstp
movsl
mov
jp
pop
and
pop
xchg
cs
ror
or
pop
stos
mov
push
jbe
cli
adc
lock
cs
fisubrl
adc
cmp
dec
xchg
adc
push
movsb
jmp
ljmp
xor
jmp
pop
xchg
mov
pop
pop
xchg
sbb
mov
lret
inc
movsb
add
pop
xchg
and
mov
icebp
mov
sub
imul
andnps
jne
movb
sub
inc
cmp
cli
jo
sub
mov
int3
pop
sahf
outsl
pop
cwtl
add
ret
adc
lds
cltd
or
lret
add
shl
shlb
lret
or
xchg
negb
xor
cmpb
push
inc
and
inc
nop
inc
les
inc
jo
jbe
and
in
mov
add
sbb
dec
inc
adcb
gs
adcb
mov
or
add
testb
xchg
insb
xor
add
sbb
imul
pop
inc
arpl
inc
adc
pop
add
cmp
inc
lcall
out
cmpl
testl
movsl
push
add
loop
mov
pop
or
mov
rolb
cmp
push
in
fldenv
cmp
cs
test
push
xor
ret
cmp
and
ds
ss
call
push
push
cli
jl
mov
in
jg
pop
mov
sbb
punpcklbw
daa
daa
ret
jl
not
inc
fimull
je
popf
mov
fstps
not
xor
jb
pop
inc
cs
das
sub
imul
or
and
jecxz
xchg
fdivrp
add
mov
add
inc
pop
or
or
add
sub
enter
pushf
adc
or
fdiv
sub
pop
sub
dec
imul
dec
xor
call
inc
call
stos
mov
or
jg
push
xor
test
push
negl
xor
xor
pop
mov
add
roll
std
xor
adc
adc
dec
push
add
mov
std
lock
adcl
iret
call
sub
push
mov
dec
sub
sub
push
sub
push
xor
push
adc
sub
test
shlb
inc
pushl
xchg
push
mov
cmpsl
pop
cli
imul
dec
outsb
jmp
add
add
shl
iret
je
out
or
xchg
add
or
cmpsb
rorl
ds
rcrb
cwtl
mov
cmp
xchg
testb
aam
adc
dec
pop
add
add
mov
ja,pt
inc
and
xchg
sbb
pop
hlt
dec
adc
shlb
or
mov
cmp
call
popa
movsl
fimull
inc
jl
movsl
mov
add
aaa
mov
notl
adc
pop
ret
cwtl
gs
repz
sbb
fs
xchg
sub
cmp
xchg
add
loopne
shr
mov
test
jnp
push
mov
sub
ret
sbb
xor
inc
jmp
or
adc
sbb
lock
pop
scas
stos
add
sbb
cmp
enter
cmp
and
mov
mov
aam
mov
adc
mov
fs
push
or
jmp
sbb
adc
jle
mov
push
jmp
or
or
mov
push
cmp
je
call
hlt
or
insb
scas
test
sbb
adc
insl
es
xchg
adc
mov
sub
ja
je
mov
pop
xchg
push
push
mov
sub
out
push
xor
push
popl
insl
insl
jmp
lea
cmpl
xor
repz
adc
or
lcall
sub
sbb
bound
add
sub
and
lea
or
fstps
stos
lea
cmc
pop
mov
test
cltd
pop
cmp
add
mov
outsl
loope
mov
in
lock
add
and
jo
sbb
pop
sub
add
add
mov
mov
cmpb
pop
jb
xchg
mov
mov
adc
sub
pop
test
inc
mov
mov
outsb
dec
mov
andl
push
pusha
pop
mov
or
and
mov
sbb
leave
push
pop
mov
mov
lret
negl
or
enter
lock
ret
subb
sbb
enter
inc
bound
loopne
insb
rcl
cs
pop
in
loopne
xor
cwtl
icebp
or
push
push
inc
rclb
and
cmp
rcrb
iret
or
lods
sbb
and
fiaddl
jmp
cld
dec
pop
in
adcl
aaa
add
inc
arpl
pop
subl
shll
in
inc
mov
mov
inc
popf
mov
into
ret
dec
pushf
jb
enter
mov
aad
cmp
rorl
sub
mov
inc
sbb
adc
xchg
push
push
nop
rclb
popa
add
sbb
fcomp
lods
daa
add
xchg
push
jge
xor
add
mov
ficoms
mov
inc
cmp
adc
pop
out
xor
sbb
sbb
dec
sbb
test
mov
ret
mov
xor
xchg
pop
and
roll
inc
cmpsb
insl
orl
js
xor
jo
in
push
cmp
lods
sub
lds
cmp
mov
sbbl
mov
sbb
popa
cltd
insl
scas
das
xor
mov
sub
jmp
adc
imul
inc
cmpl
je
mov
dec
add
pop
andb
pop
addl
fistpll
scas
fists
filds
xchg
xor
dec
xchg
jl
mov
dec
lea
call
les
pop
js
notb
add
inc
enter
gs
sub
mov
pushf
xor
adc
in
mov
jmp
push
lcall
add
cmpsl
frstor
fisubs
push
mov
loope
push
mov
push
mov
pop
xor
jo
cmp
jmp
loop
daa
xor
jno
imul
sub
outsl
pop
rol
rcll
dec
gs
loope
jmp
out
icebp
inc
lea
add
cld
push
xor
mov
jl
push
mov
repnz
je
pop
divl
call
xchg
xor
adc
push
mov
pop
test
push
test
mov
or
and
adc
xor
shlb
or
inc
xor
cli
fisttps
pop
pop
imul
jg
add
mov
inc
push
xchg
rcrb
jp
push
mov
add
nop
dec
rorb
mov
in
neg
ret
sbb
cmpsl
dec
adc
pop
stos
punpcklbw
pop
imul
jp
push
enter
enter
sbb
js
add
mov
pop
adc
jmp
dec
movsb
pop
sub
mov
mov
cmp
add
out
mov
jno
dec
mov
leave
pop
add
xor
scas
test
mov
out
sbb
or
add
and
mov
inc
and
loope
jl
mov
sbb
or
out
mov
dec
inc
adc
sub
pop
sub
stos
popa
dec
adc
imul
pushf
rcll
sub
insb
or
pop
icebp
stc
stc
jae
shll
push
lods
sbb
pop
cmp
hlt
pop
push
pop
inc
push
imull
cmp
daa
mov
push
sub
das
jl
xchg
mov
xchg
adc
push
sbb
clc
mov
lcall
and
xor
sbb
mov
inc
sub
scas
movsl
fsubp
xor
sbb
je
mov
mov
push
pop
lock
pop
gs
pop
add
addr16
mov
dec
pop
adc
jo
mov
ss
mov
mov
addl
add
mov
dec
ret
sub
mov
jo
xchg
and
add
fsubs
push
and
sbb
add
sub
sbb
mov
rol
sbb
jle
fs
jno
xchg
or
mov
in
insl
ret
in
xor
sbb
add
add
stos
sbb
cmp
dec
sub
pop
pop
cmp
cmpsb
jp
pop
imul
enter
or
push
rorb
jb
loope
sub
inc
jmp
or
aaa
lock
cmp
inc
subl
add
sub
jbe
outsb
push
mov
add
addr16
dec
aad
popa
jne
scas
test
inc
stos
loope
dec
mov
pushf
mov
lock
rorb
push
movb
lock
pop
push
in
sub
imul
fldenv
push
or
andl
fcomps
cmp
loope
or
movsl
cmp
decb
push
shr
mov
jnp
lods
push
bswap
sbb
cmp
add
pop
lcall
cmp
imul
jne
sub
adcb
orl
push
sub
mov
mov
js
or
fnstcw
pop
call
and
inc
roll
push
sbb
add
add
mov
jno
adc
jg
xchg
rclb
mov
mov
jmp
lea
aaa
adcl
mov
lea
leave
ret
add
or
sbb
sub
lea
push
mov
in
dec
je
inc
or
xchg
or
hlt
shlb
xchg
mov
mov
mov
sbb
and
fimull
jo
outsl
pop
icebp
xchg
in
inc
sbb
out
movsl
sub
jecxz
test
mov
mov
dec
call
xchg
subl
mov
jp
icebp
xchg
mov
mov
mov
das
pop
push
jge
mov
xchg
xor
push
mov
mov
ffree
sti
pop
loopne
pop
and
mov
inc
xchg
mov
xchg
addl
xchg
cld
mov
mov
nop
fnsave
push
push
inc
dec
pop
cmp
in
pop
les
inc
inc
pop
mov
loop
mov
xchg
mov
cmp
adcb
test
lea
inc
add
mov
icebp
lret
mov
cmp
mov
je
mov
mov
arpl
add
add
xchg
or
mov
out
addl
push
sub
sbb
adc
rorl
cwtl
shll
enter
cwtl
mov
add
push
jmp
rorb
pop
adc
and
sub
rol
mov
mov
aam
jg
jmp
pop
arpl
push
cltd
std
adc
mov
inc
aas
mov
int3
sbbb
pop
jnp
mov
lods
cli
cli
mov
out
filds
add
add
fiaddl
xor
add
mov
or
xor
xor
add
xchg
mov
inc
mov
aad
mov
xchg
scas
mov
or
xor
mov
in
sbb
mov
and
jbe
icebp
and
sub
lret
push
lea
imul
insb
ds
pop
pop
add
adc
enter
pop
xorb
add
mov
cmp
xor
pop
adc
and
adc
pop
mov
add
xor
mov
cs
cmpb
inc
push
sub
xchg
movsl
test
cmp
neg
imul
ret
movw
dec
jnp
cld
pop
adc
sbb
jb
lods
dec
and
mov
mov
mov
jp
add
jo
pop
mov
ja
pop
jge
adc
insl
add
mov
fisubrs
mov
and
xchg
jg
sti
mov
arpl
jbe
or
dec
sbb
mov
enter
cmp
dec
cld
cmc
adc
xchg
lock
xlat
jne
jmp
dec
mov
and
dec
or
mov
adc
add
sbb
sbb
sub
adc
aam
inc
fadds
adc
std
dec
cwtl
xor
cld
inc
inc
sub
fmull
or
mov
push
dec
js
adcb
pop
dec
dec
or
jecxz
mov
pop
jl
pop
js
cmc
inc
sbb
out
push
inc
inc
push
or
fs
jge
jb
mov
add
cmp
add
jecxz
cmc
dec
jecxz
aas
mov
and
mov
shr
dec
mov
pop
inc
cld
cltd
jo
mov
mov
xorb
into
cmp
je
ljmp
sub
xchg
xchg
fcmovnbe
scas
gs
rclb
lea
cmp
dec
je
adc
iret
dec
or
mov
loopne
inc
and
mov
pushf
pushl
dec
dec
pop
xor
cmp
movb
inc
mov
addl
lret
shll
mov
lret
movsl
adc
push
sub
adc
ja
jo
mov
shl
mov
mov
pop
sbb
dec
push
mov
shll
shl
lock
jb
cmc
and
mov
lret
jns
addb
fsubr
movl
lret
dec
xchg
xchg
pop
sub
jmp
dec
adc
mov
or
mov
lcall
ljmp
and
cmpsb
sub
dec
or
test
mov
jo
pop
fimuls
pop
ljmp
adc
sbb
jl
sub
xchg
mov
cwtl
sbb
lods
fisttpl
pop
out
jecxz
sbb
addl
cmp
inc
xchg
pusha
cs
scas
cmp
fsts
int
icebp
sbb
aas
or
mov
pop
dec
pop
dec
sub
sbb
mov
loope
inc
inc
inc
pop
mov
gs
cmpsb
icebp
inc
fmull
xor
cmp
push
lret
sbb
cld
sub
loop
push
repz
fidivl
adc
cs
js
jmp
adc
dec
roll
ss
nop
cmp
adc
mov
or
push
sbb
shl
les
and
call
add
mov
call
sub
add
mov
icebp
adc
or
mov
cld
xchg
mov
add
je
jae
or
adc
dec
scas
sbb
dec
sti
cmp
add
inc
push
or
xchg
out
add
push
cmp
mov
pushf
jbe
in
test
js
mov
ret
add
and
cmp
cwtl
xor
shlb
jl
adc
mov
sbb
bound
cmp
addl
xor
cmp
push
dec
pop
dec
rorb
add
js
xor
sub
dec
push
add
add
jbe
mov
sub
dec
mov
dec
bound
test
xchg
add
lahf
sbb
sbb
inc
or
stc
stc
xchg
inc
push
stc
stc
push
xor
rcrl
decl
loopne
dec
repz
xchg
iret
or
add
lcall
sbb
ret
sbb
jo
lret
mov
rcll
dec
jg
cmpl
add
xchg
pusha
enter
push
and
push
xchg
clc
jo
mov
xchg
xor
mov
push
inc
and
inc
mov
lds
pop
xchg
sbb
or
mov
rorb
pop
mov
adcl
inc
imul
inc
dec
sbb
inc
and
rolb
sbb
out
loope
add
inc
and
push
addb
scas
add
je
xchg
lds
movsb
cmp
push
insb
clc
pop
pop
sbb
dec
mov
outsb
xor
mov
xchg
pop
push
xorl
xchg
mov
bswap
add
jle
and
and
es
pop
jmp
mov
sub
mov
lea
je
jge
xchg
cmp
cmp
cmp
inc
add
xchg
push
pop
popf
pop
xchg
jne,pt
fs
push
xchg
clc
das
rorl
add
add
dec
jl
dec
movsl
push
insb
sbb
and
push
mov
pop
jl
and
clc
fwait
inc
addb
and
add
pop
jno
das
sub
jbe
call
inc
mov
push
loop
push
adc
ret
addr16
dec
push
cmpl
sub
or
push
cmpsl
fsub
inc
dec
ljmp
dec
jg
mov
popf
test
inc
xchg
dec
or
cli
roll
sub
leave
stc
movsb
cltd
ficoml
aas
rorb
mov
lods
leave
jl
mov
mov
loopne
gs
or
add
test
lahf
and
pop
je
inc
or
mov
data16
ss
jg
shll
inc
orl
xchg
cmp
int
mov
je
popf
mov
jno
xchg
jae
jmp
pushl
mov
xor
lea
pop
pop
add
mov
sbb
in
fdivrs
outsl
or
sub
into
fistl
cmc
test
clc
push
sub
inc
adc
dec
xor
add
test
test
and
sub
push
jb
add
mov
push
ljmp
adc
sbb
inc
add
inc
mov
inc
pop
jno
mov
jle
sbb
daa
mov
inc
cmp
dec
xlat
sub
mov
imul
cmp
je
mov
sbb
cmp
jmp
lock
push
jo
ror
fnsave
enter
ret
aam
nop
jle
mov
lcall
adc
xor
add
add
insb
push
adc
mov
mul
imul
push
cwtl
decl
lret
inc
sbb
add
repz
mov
mov
add
pop
xchg
jne
add
stos
fdiv
xchg
push
mov
mov
jecxz
adc
int
push
in
fisttpl
inc
cmpl
lods
jg
push
push
fstl
les
aad
push
int3
fmull
movsb
int
sbb
adc
xchg
in
adc
mov
pop
mov
mov
jl
mov
mov
icebp
jae
adc
and
and
decl
aas
adc
jl
icebp
mov
xor
xor
addr16
lea
sbb
outsb
loopne
sub
mov
pop
adc
andb
je
out
lret
mov
push
mov
fsubrl
or
gs
insl
jl
or
xor
or
push
movsb
subb
mov
xor
add
nop
mov
scas
sub
in
lea
add
push
push
mov
or
push
push
pop
jne
inc
dec
imul
pop
cmpsb
cmp
pop
inc
cmpb
jo
test
loop
ja
movsb
mov
orl
iret
push
insb
cld
add
jb
add
fstl
aaa
cmp
aam
dec
jne
push
aaa
and
push
roll
ret
mov
cmp
adc
sti
mov
push
roll
cmp
pop
sbb
test
jbe
loopne
inc
sbb
xchg
sub
push
test
mov
cmpsb
imul
adc
sub
sub
push
jae
in
inc
sub
xchg
adc
adc
daa
shll
push
pushf
data16
add
ret
push
dec
aas
xchg
pushf
dec
add
push
adc
pop
and
push
enter
mov
and
xor
adc
or
lock
inc
and
xor
popf
push
xorb
mov
aam
and
jmp
push
add
lock
rcrl
decb
xchg
add
cmp
jne
pushaw
cltd
mov
das
pop
sub
negl
testl
inc
jo
jmp
roll
ffreep
testl
xchg
cltd
lods
test
add
sub
push
lock
fmul
into
jae
lea
loopne
or
gs
cld
ficomps
pop
lret
push
popa
push
sub
dec
pop
xor
dec
cmp
je
mov
adc
hlt
mov
out
loop
cmp
push
fwait
xchg
aaa
test
inc
or
cmpsb
dec
push
lea
and
push
and
sbb
mov
insl
mov
push
mov
push
cmp
sub
push
sub
dec
loop
rcl
adc
mov
lock
push
insb
sbb
and
adc
imul
sub
jmp
lea
push
in
mov
push
adcb
adc
pop
mov
jecxz
add
testb
xchg
dec
mov
js
and
pop
in
jo
enter
cmp
xor
jmp
shlb
push
mov
cmp
rorl
push
xchg
mov
adc
add
nop
push
mov
cld
imul
push
sbb
lea
push
jmp
jge
push
dec
mov
and
jo
push
jne
xchg
mov
xchg
orb
je
rclb
dec
push
jo
addb
and
cld
dec
push
or
xor
push
jnp
cmpsl
mov
loopne
push
push
hlt
lock
hlt
cmp
cmp
dec
push
adc
shl
inc
xchg
dec
push
push
push
inc
and
push
push
jl
jmp
dec
sub
js
dec
push
icebp
push
pusha
fisttpll
push
popa
sub
sub
or
dec
shlb
ret
cmp
je
inc
jmp
bound
inc
mov
popl
lock
fs
xor
add
cld
push
mov
inc
jl
faddl
xchg
push
out
or
jl
and
or
push
andl
or
push
mov
add
mov
jle
movsl
mov
add
sbb
cmp
jle
and
pop
push
xor
jbe
pop
cld
or
or
cmp
mov
or
mov
jae
pop
adc
jne
adc
mov
fdivr
rorb
sbb
sahf
mov
xor
add
outsb
jecxz
ret
push
or
les
pusha
aas
jbe
jmp
in
add
dec
jne
mov
cmp
pop
sub
lea
ret
adcl
pop
xor
cld
mov
pop
inc
mov
aam
mov
adc
out
mov
mov
daa
and
adc
in
mov
xchg
dec
aaa
mov
lea
dec
mov
cmp
add
push
bound
jmp
daa
push
int
mov
ja
lea
hlt
pop
andb
mov
inc
push
jmp
xor
sub
movsl
push
mov
ss
or
pop
loop
mov
inc
mov
sub
dec
xor
les
mov
test
movsb
addb
mov
cwtl
xchg
add
push
leave
push
popa
jns
dec
push
mov
or
sahf
les
mov
push
mov
adc
push
ja
cmpsb
mov
sbb
loopne
adc
jge
lea
fmull
loop
or
sbb
cld
cmp
dec
in
push
add
addr16
aas
clc
cmp
cmpb
ljmp
push
call
lea
cmp
dec
sub
mov
cmpl
jb
nop
cmpsl
imul
rolb
push
or
xor
movsb
pop
ret
or
mov
ljmp
or
push
les
lea
cmp
pop
adc
and
pusha
adc
xchg
push
push
pusha
adc
add
mov
fisubs
push
xor
cmp
push
dec
popa
cmp
mov
inc
je
sub
pusha
and
mov
ficompl
inc
dec
nop
lcall
ja
enter
adcl
ss
xor
cmpsl
pop
adc
loope
imul
insl
into
out
adc
into
mov
push
inc
sbb
cmp
push
adc
in
add
rcl
add
in
les
ds
push
in
test
xchg
mov
ds
repnz
adc
adc
inc
push
call
adc
and
ljmp
inc
xor
sub
push
inc
add
and
popa
data16
divl
inc
or
mov
adc
cwtl
scas
cmp
jne
adc
aas
enter
cmp
adc
sub
test
in
mov
inc
cmpsl
mov
sub
add
rcll
cmp
int3
jnp
inc
les
dec
xchg
push
sub
jne
js
stos
sub
movsb
push
mov
jmp
xor
xchg
popa
addr16
push
push
pop
jmp
loope
jo
aad
inc
mov
push
mov
pop
sub
mov
add
int3
filds
adc
and
push
inc
lods
das
dec
xchg
mov
shrb
sbb
imul
shlb
xor
jne
inc
mov
arpl
sub
add
insl
and
push
ret
push
mov
cmpsl
aaa
cmp
cli
or
mov
movb
int
setl
sar
fists
inc
push
add
out
cmc
mov
push
adc
and
jno
jmp
mov
cmp
test
pusha
out
es
inc
or
jno
insl
pop
cmc
iret
int3
add
push
pop
call
scas
xor
enter
shll
lret
or
xor
lcall
dec
aam
call
or
inc
mov
out
rorl
xlat
push
or
dec
das
sar
sub
lea
mov
js
shl
incb
in
or
add
and
not
and
or
add
or
pop
out
into
mov
push
shr
or
add
mov
sahf
pop
mov
push
lcall
call
sub
scas
cmc
loopne
pusha
dec
cli
cmp
clc
add
loopne
inc
mov
and
xchg
nop
or
push
xor
lds
test
xchg
or
bswap
cmp
push
test
push
mov
inc
pop
inc
lcall
pop
sti
sarb
repnz
xor
test
cmp
mov
mov
loopne
cmp
push
sarb
inc
mov
cmpsb
inc
lock
cwtl
subb
loop
out
push
or
xlat
add
nop
or
inc
rcll
mov
or
shrb
cli
mov
push
test
pop
cmp
pop
sbb
paddd
movsb
adc
dec
pushf
or
clc
subl
mov
mul
sbb
iret
cmp
sub
clc
pusha
push
lahf
fucom
and
nop
imul
xlat
adc
loop
xor
inc
mov
pop
push
cmpsl
test
cwtl
std
adc
andl
mov
stc
in
mov
cmpsb
movups
ljmp
and
xchg
pop
lock
lea
mov
pop
xorb
cmp
pushf
push
fnsave
jl
pop
popf
fstp
sbb
push
idivb
sbb
push
cmovb
fs
and
jmp
js
mov
mov
lret
pop
or
add
mov
and
out
dec
push
stc
inc
aad
push
pop
pop
adc
ja
adc
jo
cli
je
xchg
repz
jmp
jmp
out
int3
cmp
mov
add
das
mov
xor
pusha
xchg
iret
ret
push
ret
mov
dec
xor
push
adc
add
subb
loope
ret
pop
loope
or
jmp
cmova
pop
xchg
lcall
not
mov
aad
fisubrl
rcrl
mov
out
push
loop
dec
pop
push
adcb
ficoml
fwait
outsb
je
dec
in
call
mov
out
loope
out
dec
sub
xor
jns
insb
cli
imul
jno
pop
aaa
ret
dec
loopne
bnd
rol
xchg
testl
mov
jp
mov
xchg
cmpsb
adc
int
into
pushf
out
lcall
mov
push
loope
loope
and
pop
nop
das
fldenv
in
push
add
dec
mov
mov
dec
mov
mov
shrl
clc
mov
cmp
out
cli
stc
xchg
sti
pop
cld
loopne
jno
mov
flds
outsl
addr16
xor
sub
adc
and
cmp
inc
cmp
into
fnsave
loopne
push
addl
xor
ljmp
pushf
xor
xor
jg,pt
jmp
jmp
inc
push
cwtl
fbstp
fdivs
into
inc
mov
js
xor
adc
and
dec
inc
shll
shlb
roll
cmp
pop
and
insl
push
adc
shrl
or
cmp
inc
mov
loopne
push
adc
in
cmp
pop
or
xlat
test
ret
jl
ljmp
movsl
add
xor
cmp
test
dec
xor
jmp
push
leave
js
push
int
lret
lcallw
dec
mov
adc
lcall
mov
and
jo
jo
mov
inc
movsl
ljmp
xor
lcall
sub
ret
ret
or
jb
data16
xor
pusha
pop
push
cli
daa
mov
in
fcomip
jne
cmp
cmp
xor
aam
das
push
sub
fbstp
sub
loopne
ljmp
add
out
in
aas
xor
cmpsl
or
inc
out
sbb
int
fcomps
add
mov
sbb
cltd
test
dec
or
pop
mov
out
loopne
into
sub
cmp
push
in
mov
adc
push
lods
loopne
test
enter
ljmp
and
hlt
adc
push
push
xchg
or
sahf
test
cmp
ljmp
inc
push
add
sbb
sahf
or
push
in
sub
lret
add
wrmsr
inc
mov
lock
xchg
or
dec
add
push
jl
or
or
push
lods
add
pop
ljmp
dec
sbb
xchg
int3
or
nop
mov
ficoml
clc
inc
adc
fwait
ss
rolb
ljmp
adc
dec
cmp
or
subl
test
pop
pop
sbb
inc
pop
ss
jle
push
in
cltd
outsl
jmp
mov
loopne
sub
inc
sub
xor
repz
outsb
ss
adc
add
sbbb
into
cld
loopne
mov
and
shll
inc
cs
stc
cmpb
jmp
dec
bound
xor
nop
dec
addr16
pop
sbb
shll
mov
push
in
jmp
xor
clc
shll
xchg
roll
je
leave
sub
adc
sub
loope
xor
fisubl
pusha
cltd
pusha
dec
les
mov
test
aam
dec
cmpsb
push
mov
sbb
mov
cmp
or
aaa
shrb
adc
or
push
xor
repnz
jo
shr
push
loope
les
or
aaa
pop
aas
add
iret
shr
or
hlt
jmp
ficomps
push
mov
imul
andb
add
aas
es
mov
add
movl
or
mov
aaa
fists
mov
xor
es
mov
inc
rcrl
push
inc
add
repnz
and
push
decl
mov
movups
add
xchg
clc
dec
jmp
cmp
xlat
jb
pop
shlb
andb
lahf
add
xor
and
lea
add
test
pop
stos
fdivp
jg
cmpsl
cmp
and
cmp
jb
mov
subb
jl
packssdw
lods
daa
push
sbb
push
mov
adc
pop
aam
out
mov
cmpsl
mov
add
sarb
test
pop
or
add
jmp
cmp
ja
imul
loop
mov
sbb
enter
inc
aad
sbb
mov
addr16
dec
shll
fs
cli
cmp
movsb
jl
adc
scas
or
mov
loop
lea
adc
xor
into
cmp
push
mov
jae
stos
adc
cwtl
js
add
mov
fnstsw
ljmp
mov
push
mov
int
sbb
sar
fsqrt
lea
add
and
push
jne
cwtl
cmp
jae
out
andb
xor
push
cmp
add
out
cmp
sbb
inc
pusha
dec
or
push
mov
out
or
or
scas
lods
sub
cmp
and
js
xchg
inc
lea
insb
ret
push
sub
imulb
mov
bndldx
test
ret
loopne
sti
leave
xchg
in
xlat
std
push
sbb
pop
mov
or
cmp
push
cmp
xor
pop
or
mov
add
into
xor
cmp
test
or
cmp
pop
and
push
adc
and
xor
lods
cmp
insl
push
jecxz
xorb
lea
subl
cwtl
lods
sarl
ret
incb
out
mov
jmp
lock
inc
cmp
jae
xor
adc
insl
adcl
lods
ss
and
push
mov
mov
and
cli
pop
mov
cld
jmp
pusha
pop
xor
scas
dec
movsb
sub
pushf
andb
sub
mov
gs
dec
mov
shll
lret
add
insl
jge
push
dec
negb
xor
mov
aam
adc
mov
push
sti
add
mov
decb
shrb
inc
cmp
mov
pop
and
lahf
sbb
shlb
mov
inc
invd
pushf
or
inc
add
or
sbb
xchg
push
lock
jnp
lock
and
adc
ja
rolb
fistpl
ret
inc
jb
add
push
popa
lret
mov
sub
mov
insb
jl
lret
movsb
clc
lret
mov
in
in
add
mov
ss
add
cwtl
mov
or
adc
sub
mov
cltd
mov
xchg
xor
push
cwtl
sub
aam
mov
mov
stos
xor
sbb
repnz
push
sub
loopne
lock
mov
sbb
xchg
xchg
out
ja
xchg
pop
rcll
xchg
in
loope
pop
mov
call
mov
test
push
or
dec
cmp
mov
in
sub
mov
xor
add
mov
push
push
cmp
loopne
mov
aam
fcmovb
add
inc
xchg
in
pushf
ficompl
sbb
lods
test
loopne
lret
adc
sbb
add
divb
push
adc
jge
frstor
sbb
ret
inc
repz
je
rcll
js
mov
mov
sbbb
sub
and
xchg
and
inc
adc
dec
data16
cld
xchg
jne
dec
roll
pop
aad
popa
decl
data16
pusha
sbb
inc
data16
adc
jno
xor
ficoms
xor
rcl
mov
mov
test
push
ja
cmpsb
hlt
ss
jne
rol
sbb
pusha
xchg
sbb
je
ret
inc
dec
fs
das
push
test
or
adc
loope
sub
pop
mov
or
xchg
push
cld
in
inc
mov
ret
int3
pop
adc
pop
mov
mov
ss
mov
adc
dec
xorl
std
inc
addl
ror
and
bound
fwait
movsl
mov
mov
fs
bnd
mov
aaa
ret
imul
stos
roll
insb
xchg
mov
jl
ss
shl
ret
inc
rcrb
dec
push
aam
es
cmpb
lea
jle
mov
push
loopne
fcomps
push
mov
jle
ret
jne
js
dec
lds
fmuls
les
xor
ljmp
inc
lds
stc
punpckldq
arpl
andb
mov
jmp
rcrb
lods
jle
repnz
lea
mov
dec
sub
ror
fstp
mov
inc
mov
mov
mov
or
adc
mov
xor
cmpl
dec
jne
push
fcoml
popa
das
xchg
mov
xrelease
cmp
inc
xor
into
inc
ret
je
add
push
push
add
jmp
es
rorb
add
insb
sub
popa
lock
ret
and
popa
jmp
iret
adc
test
push
hlt
mov
mov
pop
add
subps
xor
jg
mov
pop
mov
and
ss
pop
xchg
push
enter
enter
cmpsb
and
cmp
dec
and
mov
mov
pop
cmpsb
negb
leave
aam
int3
rclb
mov
or
add
dec
add
mov
fcmovnb
adc
das
push
push
jns
int3
jbe
pop
dec
ret
dec
jbe,pn
pop
js
fsubrl
in
mov
lock
or
fs
sub
or
in
inc
dec
or
dec
loopne,pn
sbb
sbb
int3
aas
adc
adc
test
cs
pop
adc
das
test
adc
pop
ror
adc
mov
adc
aam
push
cmp
and
sbb
vfrczpd
dec
lcall
inc
xchg
inc
pop
cmp
in
and
add
pop
imul
hlt
add
pop
dec
repz
jbe
push
push
push
rcr
arpl
push
and
repnz
les
arpl
jnp
push
scas
push
pop
repnz
dec
mov
pop
cs
dec
repnz
jb
negl
scas
jmp
xchg
mov
dec
and
inc
inc
push
pop
jns,pn
ss
rorb
in
xchg
push
push
shl
out
adc
add
xchg
in
pop
add
dec
cmp
add
fstpl
addb
and
nop
push
push
push
ret
pop
or
push
repnz
dec
xchg
or
mov
sbb
jo
add
mov
inc
add
jo
nop
jnp
cmp
or
pop
pop
stc
inc
or
sub
mov
add
mov
dec
sbb
adc
rorb
aam
fmuls
push
inc
push
and
cs
divb
push
push
pop
sti
xchg
sbb
add
sti
pop
cmp
cmp
fcmovnu
jnp
mov
mov
sbb
add
testb
sahf
pusha
pusha
sbb
es
dec
cs
jae
push
loope
aad
cli
lea
outsl
xchg
jge
push
cmp
imul
cmpsl
jne
roll
adc
bound
sub
shlb
pop
pushf
les
and
mov
fidivs
sti
jo
and
test
push
mov
push
mov
and
jno
jmp
fwait
dec
loopne
pop
jne
imul
push
add
outsl
adc
mov
dec
push
pop
adc
frstor
and
and
xchg
add
call
pushf
xor
cmp
pop
nop
add
adc
cmp
test
sarl
ret
push
adc
sbbl
adc
fcmovu
pusha
jecxz
jmp
cmc
or
and
sbb
scas
push
dec
leave
sbb
sahf
and
icebp
dec
or
inc
add
mov
bound
pop
push
dec
inc
lcall
pop
sub
dec
fcmovne
add
and
pop
push
movsl
or
xchg
xor
or
inc
pop
imul
sub
ret
shll
push
in
clc
inc
les
sbb
pop
xor
xor
push
jns
lock
add
les
and
mov
pop
mov
loope
adc
enter
dec
add
mov
pop
cmpsb
rol
lea
mov
mov
repz
push
mov
add
push
push
add
push
xlat
sarb
or
ret
sbb
mov
pop
daa
in
sbb
xlat
or
cmp
mov
fs
fistl
sbb
icebp
mov
sbb
push
adc
movsl
cmp
xchg
test
ret
mov
push
imul
into
push
jl
mov
aam
jne
push
shll
push
sub
mov
adc
cld
add
or
mov
and
and
mov
adc
lock
inc
sub
sti
cmp
pop
add
enter
add
inc
add
jmp
ds
js
xchg
mov
push
xchg
pop
cmpb
and
jmp
imul
inc
enter
nop
or
xchg
rolb
add
add
arpl
push
add
shrb
sub
icebp
lret
mov
push
push
dec
and
in
push
daa
jmp
push
test
icebp
shl
test
je
push
push
sahf
jne
loopne
mov
arpl
mov
pop
fistl
repnz
clc
js
in
fistps
dec
pushf
pop
xchg
scas
sub
mov
xor
sub
jno
and
push
jo
push
jmp
xor
pop
and
ret
mov
add
adc
scas
push
or
mov
sbb
sub
push
and
test
pop
mov
jbe
rcrb
movsb
mov
pop
pop
popa
or
cwtl
jnp
jbe
cmp
std
xchg
and
sub
sub
dec
adc
inc
jo
movb
ret
sbb
xor
rcrl
daa
dec
jo
icebp
add
add
dec
aam
adc
xor
sbb
fldt
inc
jecxz
subl
ds
pusha
add
jae
jns
pusha
or
and
push
icebp
in
or
inc
jo
dec
js
jne
test
xchg
inc
fisubrs
js
outsl
pop
pushf
nop
xlat
jle
inc
mov
inc
pop
lods
loope
fstpt
inc
mov
bound
add
rcrb
in
sub
fs
and
cli
xchg
test
lock
cmc
jno
incb
sub
push
jmp
inc
add
sbb
sub
add
mov
dec
jle
leave
and
fwait
jge
pop
xor
or
loope
sti
add
insl
stc
add
mov
adc
mov
scas
mov
inc
xor
add
into
push
mov
imul
addl
pop
stc
jbe
pop
adc
imul
or
bound
sbb
bound
xchg
lods
cwtl
popf
or
mov
mov
nop
ja
outsl
and
test
out
add
scas
pop
push
dec
mov
dec
xlat
xor
outsl
rclb
lods
shl
mov
test
scas
lods
lret
cmp
mov
nop
sbb
dec
lock
push
jle
push
cmp
xlat
and
inc
xlat
jp
or
pop
fisubrs
mov
inc
shlb
dec
or
push
int
je
dec
or
and
call
mov
fisttps
or
pop
cmp
sub
add
aaa
xchg
mov
jle
enter
and
xchg
add
loopne
or
test
pop
sbb
push
push
nopl
adcb
push
push
push
fs
xor
daa
lods
xchg
pop
arpl
cltd
adc
mov
adc
ljmp
push
sidtl
mov
clc
add
loope
add
cwtl
lea
xor
test
cli
mov
or
in
sbb
rorl
xchg
rolb
or
xchg
sti
dec
xor
adc
test
pop
fmull
lods
ret
sbb
push
jo
sar
int
insb
enter
shlb
mov
outsb
xchg
jl
xor
xchg
mov
push
fsubs
xchg
dec
dec
iret
and
sbb
cmp
and
repz
push
cmpsl
push
fists
outsb
sub
sahf
testl
pusha
pop
lea
sahf
testl
lds
sarb
stc
in
push
fstl
sub
and
cmp
pop
xchg
jno
incl
cmp
ret
rcrl
pusha
push
aam
aam
push
dec
adc
fisubrl
push
fsubrl
sub
mov
sub
push
fdivl
inc
fstpt
sbb
sub
and
sub
and
dec
push
or
add
cmp
push
add
sub
dec
or
jge
xor
sbb
pop
or
xor
fsubl
fmulp
cld
adc
mov
pushf
mov
or
pop
sbb
add
ss
adc
mov
stos
dec
dec
rcrb
inc
sub
mov
bound
sar
xchg
inc
adc
push
and
and
xchg
lock
xorl
out
xor
or
xor
push
mov
std
cmpb
sub
mov
jbe
pop
mov
ss
sbb
cmp
adc
adc
sub
sbb
hlt
push
sub
or
sti
je
inc
dec
data16
cmp
das
dec
mov
or
sahf
adc
pop
pop
dec
cmpsb
movb
pop
aam
sbbl
adc
mov
sub
lcall
pop
pop
and
or
mov
pop
jnp
mov
sbb
movsb
rclb
sbb
mov
inc
leave
and
push
addr16
or
stc
push
and
xchg
xor
je
pop
dec
loopne
js
and
pop
daa
push
sbb
dec
inc
push
cmp
and
mov
and
add
lea
pop
and
add
outsb
add
or
xor
xor
ror
pushf
push
sub
jbe
cmp
lret
psubq
cmpsl
cmp
or
sbb
add
fdivl
sbb
push
aaa
mov
lahf
stos
sub
jge
cmc
out
jle
lea
xchg
aad
or
das
sbb
sbb
pop
lods
pusha
daa
push
pop
add
mov
xor
pop
popa
fs
leave
fistpll
sub
rolb
pop
roll
out
icebp
xchg
dec
mov
pop
mov
ret
movsb
or
add
mov
scas
cmp
add
adc
add
xchg
inc
lahf
mov
out
and
xor
add
add
addl
ret
jg
rorb
jecxz
or
push
push
cltd
loope
sarb
fstps
pop
inc
dec
xor
cmp
mov
std
cmc
fdivrp
inc
push
scas
jo
popf
andb
sub
sbb
aad
pop
sbb
xor
xor
xchg
cmc
lds
add
in
pop
xchg
out
enter
shrl
add
sti
sti
dec
inc
fists
push
lods
int3
jmp
adc
cmp
enter
mov
gs
xor
or
jo
jae
lcall
adc
mov
xor
dec
lea
inc
push
pop
pop
pop
shll
push
push
sbb
push
push
dec
scas
or
or
dec
inc
add
sbb
pop
push
je
add
test
ret
or
sub
mov
inc
push
mov
cmpsl
sub
shlb
bound
shl
movsb
fsubl
orb
cmp
add
sub
xor
clc
leave
sbb
cmp
adc
rclb
cmpsb
and
andb
icebp
movsb
pop
test
fistpl
mov
std
xor
jge
xor
aam
lock
add
add
rclb
inc
cmp
add
mov
ljmp
sahf
out
js
sbb
xor
mov
xchg
jl
add
mov
add
mov
adc
sbb
sbb
xor
mov
xor
ret
xor
add
cmp
mov
xchg
aas
or
sti
add
pop
je
jp
push
rsqrtps
sbb
enter
lret
push
mov
pop
sub
xchg
ljmp
iret
and
xchg
dec
insb
cwtl
cld
mov
pop
roll
rolb
and
or
adc
add
inc
push
imul
inc
cmp
lahf
cmpsb
lahf
fisttps
movsl
inc
lods
rorb
jbe
cmpsl
lock
or
mov
mov
sbb
jnp
add
jmp
dec
repnz
or
ds
cmpb
dec
jmp
inc
lock
movb
aaa
aam
movb
in
dec
cli
or
je
mov
adcl
cltd
es
pop
or
call
lret
int3
rcl
mov
mov
sbb
push
add
out
pop
and
add
into
jae
cmp
xchg
jp
ret
adc
push
and
mov
jno
loop
add
lea
adc
test
dec
push
call
call
push
orb
daa
leave
sbb
mov
rolb
rolb
add
jmp
push
mov
adcb
mov
cmp
loope
sbb
or
sbb
mov
add
xor
adcb
test
xchg
dec
fcomps
jns
lret
sub
es
shl
addb
mov
pop
es
mov
sbb
fstps
pusha
xchg
ss
push
repz
fs
add
pop
push
pop
je
push
cmpsl
movsb
push
je
xor
ret
arpl
test
sbb
xor
or
inc
adc
jnp
dec
lods
xor
popa
dec
lods
pop
pop
xchg
pop
lret
enter
xlat
imul
std
and
mov
enter
popa
addr16
js
data16
imul
and
adc
sub
imul
push
pushf
mov
lret
fs
ds
xor
jecxz
les
mov
mov
sbbb
iret
cmp
jo
movsb
sub
loop
stos
test
ret
mov
jns
dec
add
popa
insl
sbb
pushf
pusha
sub
insl
sub
in
nop
mov
lcall
mov
mov
mov
rolb
inc
dec
sbb
outsb
adc
adc
mov
outsb
pusha
andl
aad
insb
pop
jno
and
add
sbb
mov
fs
xor
fisttpll
pop
xchg
xor
sub
fidivl
ret
mov
xor
fisubrl
loope
jo
sahf
mov
sbb
call
es
mov
or
dec
call
dec
add
sub
push
cmp
movsl
xchg
xchg
stc
addb
add
inc
inc
xchg
mov
pop
nop
and
arpl
mov
xchg
stos
inc
popa
cmpsl
out
push
add
outsb
mov
sub
lcall
icebp
add
jo
mov
inc
sarb
inc
mov
ljmp
insl
dec
inc
inc
out
and
push
movsb
pusha
jne
in
negl
cmp
add
xchg
mov
lock
push
push
imull
mov
push
push
cmp
loopne
pop
dec
dec
pop
xor
add
or
pop
in
repnz
rcl
pop
inc
mov
sbb
fcompl
ss
pop
inc
es
and
or
jne
scas
adc
fsubrl
jl
cmp
je
cmp
adc
ficomps
pop
imul
sbb
lahf
pop
push
push
enter
insb
and
mov
inc
xor
jbe
pusha
and
push
hlt
cmc
inc
jle
movl
or
cmpsb
mov
mov
fcoms
les
mov
sub
push
pop
out
dec
add
or
add
push
pop
pusha
pop
and
dec
lods
lea
ret
push
push
dec
jg
ret
sbb
sub
xor
and
test
push
push
jecxz
out
ja
xlat
mov
cmpsl
aad
cmp
cmp
sbb
inc
decl
in
push
fiadds
push
push
insl
pop
push
hlt
and
cmpsl
js
mov
sub
loope
pop
and
pusha
daa
lock
mul
adc
enter
mov
add
fisttpl
popf
mov
jbe
aas
sbb
jne
lret
js
sbb
pop
mov
push
stc
jl
cmovae
sub
add
jge
fmull
jne
fstl
xor
pushf
test
lock
ror
xorb
repz
inc
cmp
aam
xor
or
je
cmp
and
pusha
push
add
cltd
rorl
xor
dec
mov
adcb
inc
sarb
push
fistl
push
push
movsl
pusha
add
lahf
cmp
mov
dec
inc
mov
sbb
push
or
or
lret
sbb
fiaddl
cmp
test
sbb
sbb
je
push
loop
xchg
jl
fisttps
mov
adc
enter
cli
or
or
daa
adc
inc
adc
jg
push
test
and
gs
or
rcll
scas
dec
enter
and
add
pop
xor
inc
inc
xor
dec
cmp
sub
pop
adc
push
pusha
rclb
jl
jmp
jl
xchg
inc
pusha
mov
je
fs
das
test
sbb
cmp
enter
out
jmp
cmp
cmp
add
loop
gs
rorb
incl
pop
scas
or
inc
loope
es
call
in
inc
pop
adc
jp
cmp
bound
icebp
adc
pop
or
add
sub
lcall
push
or
pop
adc
addb
test
push
shr
adc
and
hlt
movsb
aad
sbb
sub
incl
and
rorb
int3
mov
lret
jnp
xlat
adc
rcll
mov
jmp
test
adc
cmp
ss
dec
sbb
pop
divl
push
lods
rolb
sub
xchg
mov
xchg
cmpsb
adc
and
jp
hlt
lret
je
out
je
and
push
pop
inc
out
lret
int3
mov
push
sbb
pusha
sbbl
mov
or
in
out
mov
lret
nop
jmp
lret
and
es
jp
add
sarl
push
adc
movl
cwtl
add
lds
or
jae
or
out
add
into
push
sbb
dec
jne
or
pop
sub
xor
push
mov
imul
pop
adc
popa
dec
xor
jle
pop
aad
mov
xor
cmp
or
movsl
push
xor
leave
xor
mov
mov
pop
movsb
inc
adc
xchg
sub
add
outsb
adc
and
int3
shlb
pop
inc
inc
add
daa
xor
cmp
sbb
push
dec
add
ds
sahf
pusha
adc
jg
push
adc
popa
push
outsl
add
sub
or
inc
imul
in
xchg
lock
pop
imul
mov
jmp
popa
or
iret
hlt
shlb
xchg
test
add
inc
lret
mov
dec
mov
test
xchg
insl
jne
popf
loope
or
sahf
out
xor
jmp
cld
cmp
pop
push
loopne
testl
push
push
or
push
sarl
inc
dec
pop
push
fxch
cmp
lea
xchg
fsubrs
rcrb
loope
repz
cmpl
push
das
lods
add
fs
sti
call
lock
inc
xchg
pusha
mov
adc
cmpsl
add
leave
push
push
out
js
and
test
repnz
rcrb
pop
subb
sti
adc
test
sub
xchg
push
mov
out
xor
rclb
adc
adc
sbb
mov
adc
out
mov
and
mov
and
nop
enter
aas
sbb
add
mov
dec
sub
fmull
push
lock
sbb
cwtl
or
inc
pop
fldpi
insl
loop
sub
and
jle
mov
push
xlat
sub
and
mov
adc
and
and
imul
adc
sub
or
sub
and
cmp
push
or
jbe
out
pop
pop
mov
adc
push
jg
push
test
inc
pop
push
out
sub
iret
loopne
xchg
pop
inc
adc
mov
mov
adc
popf
inc
mov
aaa
sub
mov
sub
pop
pop
mov
pop
pop
sub
inc
mov
dec
or
fisubrs
jb,pt
jae
sub
sub
lret
inc
sub
dec
inc
add
and
push
pop
ljmp
cmp
mov
add
jecxz
or
mov
xchg
sahf
mov
sbb
push
lea
push
lret
pop
inc
or
push
dec
fs
int
fcomps
dec
sbb
jecxz
adcl
rclb
sbbl
or
pop
rolb
outsb
rorb
inc
mov
out
in
dec
cmp
mov
cmp
jb
sub
mov
lods
cmp
sub
call
push
call
fcomps
push
int
push
mov
cmpsb
inc
jo
cmp
adcb
sbb
pop
pop
inc
dec
cmp
jne
sbbl
jno
adcb
or
sub
pop
lcall
adc
loope
shlb
cmp
pop
andl
je
loope
cmp
jmp
jbe
jns
lods
sub
pop
xchg
scas
xchg
call
xchg
and
dec
idivl
push
adc
outsl
lahf
je
daa
je
push
sarb
sub
xchg
push
push
pop
loop
xor
jno
sbb
mulb
mov
insl
scas
lock
dec
cmpsb
pop
std
inc
add
mov
adc
jp
sub
sub
nop
xorl
add
and
stc
test
sbb
iret
hlt
and
test
and
sub
sarl
add
movsb
subb
or
add
jle
adcb
pop
shrl
or
pop
and
and
scas
dec
mov
lahf
ret
sub
xchg
les
fucomip
add
or
sbb
adc
sti
push
popw
dec
dec
pop
aas
xchg
and
ror
mov
mov
or
add
sbb
mov
sub
pop
fisttpl
and
xchg
push
call
test
xchg
adc
add
shrb
cmpsb
pop
mov
lret
mov
mov
cmp
adc
ret
jge
mov
xor
push
add
jecxz
sbb
notb
int
mov
add
jg
or
push
push
sbb
les
adc
int
jle
jne
push
push
and
sahf
and
nop
pop
inc
cld
adc
mov
mov
and
dec
push
shlb
dec
call
outsb
pop
cmp
adc
xlat
pop
push
jge
jle
pop
dec
dec
adc
inc
push
in
adc
sub
mov
mov
sub
fsubrl
in
pop
push
mov
mov
push
pop
inc
sarb
sti
data16
mov
dec
add
push
jle
mov
push
cmp
das
dec
aam
lods
push
stc
dec
clc
mov
jbe
push
inc
dec
jne
dec
push
scas
fs
inc
or
cwtl
jo
push
inc
and
inc
mov
lds
dec
xchg
aaa
mov
outsl
and
cwtl
sbb
sbb
sub
leave
sub
lret
movsl
push
jb
mov
pop
sbb
stos
mov
pop
sbb
and
leave
inc
sbb
add
int3
push
push
out
cmp
and
pop
sbb
cmp
add
mov
or
cmpsl
push
mov
lods
mov
decb
sbb
fcomps
out
dec
ljmp
ds
outsl
mov
arpl
add
daa
mov
sub
inc
or
outsl
or
inc
xor
add
add
pop
call
cld
sub
in
push
psubd
outsb
mov
dec
cmp
or
rolb
rolb
mov
lock
push
sub
cmp
inc
dec
inc
sub
insb
push
dec
mov
out
inc
adc
repnz
sub
pop
js
adc
sbb
mov
and
testb
mov
loope
inc
psrad
in
push
fsubrl
cltd
mov
dec
in
inc
push
das
stos
push
lea
push
push
lret
push
iret
adc
test
test
add
fnstenv
xor
jne
cmp
push
insb
rclb
adc
or
mov
or
out
inc
inc
pushf
insl
mov
std
jns
fdivrl
lea
sar
xor
decb
addb
jmp
es
lret
pop
push
cmpl
sbb
dec
push
insl
lock
cmp
push
subl
push
dec
leave
movsb
fwait
mov
hlt
shrl
xchg
pop
daa
jne
push
and
fisubl
mov
jmp
es
or
inc
dec
mov
inc
into
push
loope
sub
nop
or
pop
mov
or
sar
and
xor
adc
roll
or
adc
xor
inc
push
push
lock
push
jmp
add
jmp
lock
pop
inc
dec
adc
imul
das
mov
ficomps
dec
xlat
dec
fwait
lock
sbb
sub
stos
adc
clc
idiv
pop
icebp
push
lods
pop
xor
mov
pusha
xchg
cmp
xchg
pop
dec
inc
lods
or
ret
lcall
dec
in
push
jg
test
iret
sahf
incl
lcall
add
and
jg
xor
push
lret
std
inc
sbb
jne
add
popa
popa
loop
mov
dec
jnp
push
push
sub
mov
inc
pop
outsl
decb
pop
in
push
add
add
das
and
push
aam
les
mov
arpl
in
sbb
jl
mov
arpl
fsubrs
test
inc
gs
pusha
push
arpl
insl
into
add
pop
add
pop
push
leave
fistpll
inc
jo
push
std
xor
mov
sub
add
scas
mov
ret
push
mov
jl
cmp
jge
aaa
popa
mov
or
fldenv
loopne
in
pop
inc
mov
jno
aam
or
aas
cmpl
dec
push
add
test
loop
inc
clc
lea
push
push
lret
sbb
or
adc
into
add
jo
mov
pop
jg
cli
incb
mov
pop
sub
ss
pop
stos
bound
or
xchg
sarb
sbb
es
push
inc
in
cmp
jge
inc
inc
jmp
or
push
cmp
or
sub
push
sbb
fbld
adc
das
fsubr
xor
std
dec
aad
mov
pop
movsb
or
inc
pop
int3
jns
push
xchg
jb
xchg
pop
xchg
add
push
or
pop
insb
mov
mov
and
fstps
loope
push
shl
xchg
push
lea
adc
lock
je
mov
xorb
sbb
pop
xchg
adc
sbb
mov
es
xchg
mov
cmp
into
push
insb
test
cmp
push
jmp
test
cwtl
cmpsl
sbb
jo
adc
mov
adc
pop
test
inc
mov
fstpt
int3
test
cmp
push
lret
pushf
add
pop
inc
dec
jl
shrl
mov
das
mov
xor
push
pop
push
sbb
pop
movsb
mov
lea
jb
enter
mov
and
add
and
fsubr
mov
icebp
inc
add
andl
push
sti
ret
mov
lahf
js
popa
rolb
rorb
jne
movsl
push
mov
push
xor
xchg
nop
orl
push
pop
add
imull
push
loopne
lret
sbb
inc
cltd
in
pop
push
test
push
pop
mov
cmc
addr16
pop
inc
jle
inc
push
dec
shlb
sbb
in
out
sub
sub
adc
data16
pop
and
lea
ds
daa
nop
inc
add
inc
add
dec
cmp
xchg
and
xchg
pop
or
and
inc
inc
adc
or
cmpb
add
push
lcall
sub
adc
cs
out
ficompl
pop
shl
test
hlt
mov
pop
add
lds
pop
cmp
cmp
mov
or
sub
lods
fidivrl
or
pop
cld
scas
sahf
or
jmp
pmaxub
pop
lea
jle
fcmovb
flds
or
lret
sbb
push
mov
inc
dec
shl
xor
aam
xchg
jo
ret
pop
imul
or
xchg
mov
pusha
mov
ret
cmp
adc
mov
or
push
and
mov
in
imul
lock
jbe
ret
loopne
vunpcklps
mov
add
aaa
xchg
mov
mov
stos
ror
call
pop
testb
pop
aaa
cmp
xor
ret
fcoms
and
ret
pop
adc
sub
ds
sub
adc
jp
call
mov
fnop
push
arpl
add
mov
aam
sub
ljmp
aad
dec
clc
cmp
jnp
aas
adc
mov
inc
sbb
pop
in
mov
div
lcall
adc
sub
cmpsb
sub
stc
pop
and
loopne
add
jmp
popa
pushf
scas
inc
dec
adc
xchg
mov
jge
xor
jo
fimull
jle
adc
movsb
daa
repz
and
sbbb
dec
push
sbb
ret
adc
push
jmp
push
adcl
call
shrl
jl
int
popf
loop
inc
pop
xor
jno
cmpl
xchg
dec
pop
movb
fildl
pop
pusha
mov
adc
mov
inc
sbb
xchg
loopne
cld
add
je
cmp
inc
subl
mov
fildl
pushf
and
addl
orb
adc
xchg
dec
arpl
jnp
or
gs
mov
jecxz
pop
jmp
xchg
lods
or
xorl
mov
pop
xor
push
push
push
or
inc
andl
and
in
jo
add
aas
dec
fadds
sub
jo
xor
xor
cmp
leave
inc
rorb
arpl
push
in
lods
xor
push
add
cmp
addl
rclb
add
adc
call
aam
lret
dec
push
mov
pop
pop
insl
lcall
rorb
push
outsl
pop
mov
aaa
inc
jno
loope
mov
xor
arpl
push
and
pop
adc
xchg
rorb
dec
jmp
divl
mov
push
jne
in
jge
inc
cmp
push
mov
es
jo
lds
and
adc
mov
inc
adc
push
jbe
fsubs
test
insb
inc
push
shlb
fs
xlat
out
addb
and
pop
jo
pusha
jns
repz
loop
lea
popf
push
cs
or
add
sqrtps
cmp
into
mov
mov
pusha
daa
sub
dec
nop
pop
push
sbb
testl
aad
pop
cmp
push
pusha
add
lock
and
push
shl
and
dec
xor
loop
outsl
dec
clc
insb
pop
inc
aam
push
jl
xchg
test
aad
and
nop
es
push
test
push
roll
mov
les
es
jo
pop
pop
sbb
or
dec
or
pop
fsubrl
or
push
mov
xor
or
pop
push
dec
test
sub
iret
adc
mov
lcall
adcb
pop
cmp
push
pop
pop
pushf
cmpsl
ss
and
je
test
adc
arpl
sbb
dec
sarb
ljmp
pop
and
or
adc
adc
rcrb
imul
jmp
inc
adcl
mov
cmpb
repnz
dec
push
les
aas
pop
jg
add
push
add
jle
enter
std
inc
ret
cmp
push
loopne
in
shll
jnp
es
outsb
shrb
sbb
push
sbb
dec
cs
add
push
push
lret
test
adc
mov
and
roll
sub
add
scas
lea
imul
ds
inc
inc
inc
push
loope
sbb
adc
inc
and
push
rclb
inc
jno
push
icebp
or
push
mov
adc
lods
negl
xor
sbb
movsb
mov
adc
inc
and
or
ret
xchg
popa
loopne
movsl
push
pop
rcrl
push
mov
cltd
sbb
push
flds
inc
rolb
push
push
in
lock
sub
xchg
pop
dec
cld
jne
in
xchg
push
in
imul
addb
mov
push
push
jmp
pop
sarb
push
adc
add
and
cwtl
adc
sub
aas
jo
mov
and
pop
jne
add
lods
ficomps
mov
lods
or
pop
lock
jne
push
push
cmpsl
cmc
push
jle
insb
or
dec
mov
adc
sub
filds
gs
cmpsl
lock
pop
ret
call
jbe
xor
je
cmp
sub
in
sahf
adc
dec
je
mov
js
jo
daa
addl
dec
inc
ret
sub
mov
adc
inc
pop
les
blcfill
ja
lcall
rorl
mov
lods
hlt
adc
push
or
xor
sbb
mov
mov
daa
fmull
add
mov
fnsave
ds
jns
sti
outsb
push
sbb
xchg
lahf
jle
dec
out
movb
add
orl
sub
cmc
scas
mov
xor
add
adc
push
pop
and
lock
std
push
or
jmp
iret
and
sub
es
sub
pop
pop
or
jb
jmp
sub
push
and
cmp
xlat
sub
inc
and
cltd
repnz
fldt
mov
dec
lods
push
mov
imul
xor
add
test
loop
and
ja
clc
nop
xchg
sub
daa
cmc
push
sub
mov
push
jne
sub
adc
sub
adc
or
movsl
push
pusha
sub
or
xor
jbe
pop
adc
sub
aas
cltd
xchg
mov
aad
dec
and
xchg
xchg
lret
pusha
pop
sbb
push
mov
mov
push
xor
add
ret
imul
sbb
sbb
cltd
xchg
push
push
test
sub
stos
jae
pop
mov
sbb
shlb
iret
jno
pop
nop
shrb
dec
js
xchg
das
repnz
mov
in
lods
pop
and
jmp
aas
clc
push
sbb
stos
movsl
pop
cmpl
sbb
cmp
lahf
push
loopne
int
cld
sbb
andl
jl
adc
sub
iret
icebp
or
ds
lahf
xor
in
hlt
int
int3
jecxz
xor
push
jb
cmpsl
mov
cmp
xor
dec
cs
lods
push
dec
xchg
and
push
or
sub
imul
xchg
mov
cmp
pop
cmp
push
pop
inc
loopne
add
subb
fmull
pop
push
cmp
jo
pusha
adc
sbb
es
movsb
outsl
pop
out
adc
push
jmp
cmp
mov
jb
fbld
testl
scas
xor
add
insb
inc
adc
cwtl
call
nop
rclb
cmp
sbb
mov
pop
push
setns
lock
add
jbe
fidivs
mov
jnp
push
adc
jo
lret
xchg
push
sbb
cmpsb
mov
push
push
sbb
andb
lock
mov
cmp
fdivl
lods
loopne
adc
sbb
adcb
fcomps
mov
in
xchg
dec
pop
or
rclb
push
adc
es
test
jae
xor
and
xchg
ss
mov
adc
int3
mov
jno
test
mov
ja
ds
adc
dec
pop
push
jno
push
inc
cmp
add
push
mov
flds
add
fnstenv
dec
out
xor
jne
pop
movsb
mov
mov
daa
hlt
lock
cmp
adc
lock
sbb
and
shlb
into
subl
push
or
mov
imul
rcrb
add
xchg
xchg
ja
or
rcr
lcall
adc
jo
mov
jnp
add
jl
mov
mov
mov
sub
mov
test
and
ds
mov
add
add
les
daa
movl
inc
and
rcr
jmp
and
fimull
mov
sub
jae
and
mov
dec
xor
mov
sub
add
nop
mov
cmp
cmp
dec
pop
add
mov
nop
push
cmp
inc
or
sarl
adc
push
aaa
inc
lea
bound
adc
push
sub
or
mov
ja
mov
xchg
and
inc
and
inc
or
sbb
lahf
and
add
adc
cld
nop
add
adc
pop
pop
adc
lret
add
push
or
insl
inc
or
adc
push
js
mov
sub
sbb
pop
adc
xchg
pop
and
or
scas
lret
inc
adc
div
mov
add
add
outsb
cltd
cmp
pop
repnz
adc
xlat
mov
mov
rolb
sbb
adc
xchg
es
in
add
repz
cmc
xchg
mov
hlt
mov
out
xor
ja
aam
adc
mov
inc
xchg
mov
movsl
or
mov
push
jno
call
push
and
roll
mov
add
adcb
jns
enter
and
gs
and
test
into
into
aad
mov
dec
mov
and
sbbb
mov
or
rorb
pcmpeqw
loope
pusha
sbb
sbb
sbbb
test
jb
xorb
les
xchg
or
sub
add
push
lea
mov
movsb
or
jne
cmp
cli
jb
add
add
mov
jnp
pop
adc
xor
push
mov
jb
clc
aas
mov
lods
enter
cmpsl
daa
shlb
movsb
mov
data16
call
dec
push
out
rcrb
inc
mov
pop
mov
adc
ficompl
jbe
iret
push
scas
push
pop
mov
pand
fmuls
dec
dec
jne
dec
sbb
dec
xor
pop
pop
cwtl
mov
mov
imul
pop
push
xor
out
ds
inc
add
cmp
push
jecxz
jl
cmpsb
jecxz
data16
cmp
and
adc
je
fsubl
inc
sbb
add
or
dec
rolb
lock
cmpl
dec
pusha
push
mov
adcb
xchg
or
push
mov
push
lea
dec
roll
js
jle
out
jg
stos
add
popl
ret
inc
dec
testb
sbb
dec
dec
or
test
cmc
xor
mov
cmp
loope
jns
cli
leave
in
mov
pushf
or
sbb
sub
push
jp
and
cltd
sahf
popf
ret
dec
nop
sahf
or
xorb
scas
sti
and
push
xor
inc
in
xor
stos
push
push
add
and
add
xchg
sbb
loopne
mov
sub
xchg
or
or
ret
rclb
gs
cmp
ljmp
jl
fmull
add
out
out
lods
xchg
stos
add
or
jb,pn
push
je
mov
add
mov
dec
inc
mov
and
pushf
xchg
es
xor
mov
push
pop
sbb
push
jl
xlat
dec
cwtl
sub
dec
add
mov
lea
imul
bnd
mov
das
or
loopne
add
pop
rcr
les
mov
add
cmp
mov
cs
lcall
shrl
inc
das
add
into
dec
pop
movl
pop
cmpb
push
adc
inc
jmp
int3
push
or
xor
push
pop
and
cmp
jo
test
dec
pop
out
mov
call
mov
insl
ret
cmp
int
add
imul
cmp
stos
and
inc
cmp
fmul
adc
shl
aad
dec
push
mov
and
dec
nop
dec
pop
add
mov
jmp
pop
test
and
fnstenv
je
ss
inc
pop
ret
or
sbb
dec
mov
pusha
push
addl
cli
pop
dec
pop
push
roll
push
jbe
aaa
inc
or
and
and
cmp
insl
pop
shlb
add
xor
push
and
mov
push
sub
loopne
dec
sbb
flds
cld
dec
rcl
inc
dec
movsb
and
das
ds
test
add
push
call
mov
ss
daa
inc
in
add
cmp
inc
stos
fildll
cmovle
roll
orl
imul
repnz
sbb
shrb
mov
mov
pop
dec
mov
inc
inc
imul
and
pop
adc
jmp
in
fisttpl
dec
cmp
inc
cmp
sbb
jnp
std
pop
fidivrs
dec
adc
cmp
jle
pop
pop
adc
push
test
inc
mov
sbb
and
mov
sbb
call
sbb
jbe
or
dec
push
sbb
xorl
sbb
int3
sbb
jp
mov
ja
shrl
pop
mov
or
rclb
sub
adc
dec
xor
xchg
xor
mov
or
pop
fwait
sar
add
loopne
inc
rolb
pop
and
imul
push
dec
lods
loopne
daa
imul
inc
sub
popa
popa
popa
dec
pushf
jo
mov
adc
pop
adc
jmp
mov
and
popf
xlat
pop
out
cs
imul
and
push
jne
jae
cmp
sahf
rclb
add
or
mov
ja
sbb
lcall
cmp
mov
stos
dec
sub
pop
jl
jl
and
mov
sbb
iret
lahf
mov
jne
or
outsl
jne
pop
bound
sbb
js
jmp
push
cmp
outsb
daa
fisubl
inc
dec
jle
pushf
aad
pop
push
cmpsl
adc
lods
xor
movaps
add
adc
push
dec
xor
push
push
mov
add
mov
inc
push
test
ret
push
pop
and
sbb
jbe
lock
mov
inc
xor
cmp
jl
add
xchg
sub
mov
push
mov
jns
dec
out
mov
mov
mov
mov
sarl
out
add
fisttpll
jno
cmp
aad
cs
push
cmp
jne
shrb
mov
test
and
mov
mov
test
shrb
mov
out
add
mov
sar
je
push
push
push
push
jmp
add
jbe
xchg
push
add
test
sahf
or
xchg
lods
in
ret
sbb
mov
fistpl
pushf
std
cmp
jns
dec
cld
add
sbb
dec
enter
or
es
dec
fists
inc
cs
xchg
push
xchg
rolb
mov
sbb
push
das
inc
pop
insb
and
daa
je
add
mov
push
xorb
push
fcmovu
pop
andl
push
and
out
dec
js
sub
mov
push
push
xchg
push
es
mov
idivb
int3
push
lock
add
add
mov
and
push
loope
repz
sub
mov
add
or
or
or
bound
xchg
cmp
add
push
loope
jecxz
in
pop
push
je
mov
arpl
leave
sub
mov
inc
fcmovbe
cmc
mov
stos
mov
inc
lea
into
hlt
add
std
adc
mov
cmpb
sub
mov
pop
sbb
xchg
add
and
and
arpl
loopne
rolb
cs
push
out
aam
shlb
mov
cwtl
pusha
jecxz
xchg
mov
or
cld
aaa
add
sbb
roll
jbe
dec
dec
push
add
push
sbb
cmp
pavgb
sub
xchg
aam
push
sbb
mov
xchg
add
fstpl
fucomi
sbb
inc
sbb
stos
sbb
lret
add
add
or
inc
and
pop
pusha
jno
xchg
push
and
sbb
aad
jns
jbe
or
pop
mov
or
sti
nop
jne
push
ret
or
add
ret
and
sub
enter
lret
jp
xchg
mov
sbb
loopne
loopnew
dec
enter
jne
scas
stos
add
test
dec
add
pop
xchg
mov
xchg
xchg
loop
cmp
or
push
pop
push
ds
aam
mov
jmp
sbb
push
ss
xchg
cmpsb
popl
xchg
or
mov
cmpsb
inc
or
aad
push
gs
daa
inc
jp
jle
aas
dec
addb
or
xchg
loope
add
push
lret
or
std
jecxz
enter
inc
cmp
jno
in
inc
call
popf
stc
lret
dec
dec
rcrb
pushf
sbb
inc
push
ljmp
rorl
inc
in
std
lret
cmc
sub
inc
cmp
test
es
mov
lcall
adc
adc
inc
das
insl
subb
lahf
sub
push
and
or
mov
cmp
je
inc
inc
lretw
subl
jb
jae
add
shrb
fcom
push
sbb
test
xor
sub
jle
cltd
add
ret
sbb
mov
lds
je
aas
nop
pop
adc
inc
cli
enter
sbb
stc
fimull
push
test
test
hlt
xor
jecxz
dec
scas
inc
inc
dec
cmpsb
lods
pop
mov
adc
pop
test
jae,pt
pusha
jecxz
cmp
pop
movsb
adc
les
xor
sbb
push
mov
sbb
dec
mov
inc
sub
pop
add
add
mov
ret
add
inc
scas
push
arpl
xchg
rclb
pop
leave
shrl
xchg
ret
and
adc
shlb
pop
repnz
stos
addb
ficomps
pop
ss
std
and
push
loop
cli
adc
das
hlt
pop
daa
mov
sub
sti
add
xchg
das
add
fcmovnu
lods
das
cmp
adc
sbb
aam
sbb
les
add
adc
cmp
mov
cmp
jne
push
pop
pop
mov
fnstenv
sub
orb
add
sbbb
sbb
inc
in
roll
pop
dec
dec
loope
push
test
inc
lock
sbb
pop
fcomp
mov
xchg
push
mov
dec
push
adc
stos
or
mov
push
jle
xchg
push
ret
mov
clc
popa
clc
pop
cmp
or
mov
inc
add
ljmp
adc
add
inc
ljmp
rcrb
pop
scas
inc
ss
hlt
adc
jb
subl
push
inc
lods
jle
or
and
or
sub
sbb
xchg
dec
testl
inc
jg
jl
out
popf
popa
cld
add
sub
test
je
cmp
outsl
jbe
adc
fdivrl
mov
dec
jl
je
shll
or
cmp
and
adc
js
push
mov
adc
js
orb
cmpsb
aam
mov
mov
aas
scas
adc
and
sbb
xor
je
das
shrb
ss
cmp
dec
sbb
adc
push
push
push
jne
mov
push
cmp
arpl
jp
fimull
ds
cmp
adc
dec
rcll
daa
sbb
push
popf
push
icebp
mov
xchg
and
cltd
mov
lods
pop
andb
xor
push
dec
mov
inc
sarl
mov
and
dec
subb
data16
or
jmp
movsb
jne
ds
jge
inc
cld
and
test
cmp
mov
lock
and
push
jge
add
mov
inc
scas
sbb
add
rorb
fsubr
push
inc
mov
pop
shl
pushf
sub
sbb
std
dec
cmp
mov
jg
jecxz
jl
add
or
mov
rorb
hlt
outsb
jmp
inc
dec
jne
cmp
ss
sbb
sarl
push
or
mov
adc
and
fistps
mov
out
mov
push
mov
and
xor
xchg
or
and
sub
pop
jge
test
bound
push
mov
pop
add
adc
inc
mov
sbb
adc
pop
nop
add
inc
aad
dec
inc
push
mov
or
jmp
inc
pop
sbb
and
roll
pop
jmp
sbb
adc
movsl
xchg
cmp
push
lea
xchg
push
adc
jns
mov
insl
jle
add
adc
or
dec
adc
cmp
fsts
adc
pop
andb
cwtl
jge
mov
or
lahf
pop
mov
dec
pop
ret
lahf
inc
filds
add
and
sahf
inc
push
imul
aam
repz
push
jle
pushw
jo
notl
ds
cmp
inc
jl
stc
mov
rclb
addb
sbb
xchg
sub
sbb
inc
and
sub
push
inc
adc
sbb
clc
call
pop
int3
inc
push
sbb
push
adc
mov
mov
xor
loop
inc
lret
mov
adc
add
push
pop
pop
andb
popa
jae
loop
shrb
sbb
push
jae
sub
jae
mov
loopne
sbbl
nop
push
push
xorb
jbe
addb
or
mov
stc
mov
addb
cmpsl
xor
and
xor
outsl
insl
adc
add
repz
adc
subl
ret
push
sbb
mov
jg
mov
lock
cmp
jbe
sbb
jg
or
push
push
addr16
and
out
shlb
jae
add
jle
mov
mov
out
roll
sbb
adc
ret
rcrb
imul
or
pinsrw
repz
dec
rolb
add
les
and
adc
es
or
mov
pop
je
int3
mov
pop
pop
push
nop
mov
push
or
push
mov
ret
dec
loope
add
adc
and
psubd
xor
lret
dec
lea
push
jnp
pop
push
lcall
and
or
ljmp
adc
mov
pop
or
jns
xchg
fsubs
push
aaa
call
enter
arpl
xor
inc
das
cmp
mov
xor
xchg
jbe
push
sub
mov
fstpt
jae
gs
imul
mov
sbb
xchg
mov
pop
cld
out
xchg
ret
dec
jne
cmp
jb
adc
sbbb
add
shl
inc
addl
sbb
add
xchg
mov
inc
mov
test
pop
pop
push
fnsave
outsb
sti
add
mov
push
push
pop
lret
arpl
test
roll
push
and
sub
icebp
dec
shrb
dec
sub
mov
mov
arpl
enter
stos
mov
sub
inc
pop
adc
push
and
cmpsl
jb
sub
add
cwtl
add
cli
out
loope
or
dec
inc
and
sub
push
adc
jmp
adc
sub
xchg
loope
sub
jl
lret
jmp
mov
jae
nop
mov
xorb
inc
in
mov
xchg
mov
or
pop
mov
inc
cmp
es
mov
push
inc
aam
lea
or
mov
or
pop
pop
je
stos
stc
xchg
lea
dec
push
into
in
sub
mov
pop
xchg
mov
negb
mov
mov
inc
jo
push
add
imul
out
dec
lcall
push
xchg
in
inc
aaa
rcr
and
int3
imul
lods
mov
add
cmp
sbb
cmp
xor
out
insb
ja
cmp
ja
inc
push
pop
popf
adc
sbb
sbb
or
mov
cmp
jbe
push
sub
jbe
push
and
and
cmp
and
or
sub
iret
inc
cmp
jbe
mov
push
jbe
sbb
push
nop
test
or
add
test
hlt
sti
jae
cli
xchg
jae
sbb
mov
and
std
push
dec
inc
add
negl
cld
popa
jmp
xor
mov
sub
sub
outsb
test
add
shrl
add
jb
xchg
icebp
scas
and
scas
and
jmp
mov
outsb
clc
cmp
inc
lea
inc
jnp
inc
enter
xor
and
mov
or
xchg
add
mov
push
ds
add
hlt
mov
adc
add
sub
or
mov
mov
dec
pop
inc
je
in
or
sub
mov
gs
jl
xorl
xor
pop
push
stos
pusha
mov
lods
xchg
call
jmp
cmpsb
jo
xchg
pushf
bound
sub
outsb
in
xor
fsubr
faddl
push
mov
sub
push
lahf
std
jae
push
sub
iret
xchg
mov
fcmovnu
outsb
xor
push
sub
sub
cmpl
pop
sub
fcomps
pop
xor
and
cwtl
sub
inc
xor
cs
mov
mov
jno
nop
sub
iretw
add
pop
push
mov
leave
mov
xchg
insb
lea
in
clc
push
incl
jge
cwtl
leave
dec
dec
in
inc
xor
pop
sub
inc
dec
xor
pop
push
xor
cmp
sub
jne
inc
push
push
mov
push
xor
enter
cmp
cmc
dec
mov
icebp
sub
in
and
pop
adc
dec
icebp
mov
sarb
movl
cmp
adc
insb
xor
and
aas
cmpl
xchg
pop
fwait
cmpsl
aaa
jl
add
outsl
jecxz
jns
mov
or
jl
push
dec
adc
imul
dec
aam
je
es
mov
mov
or
sbb
loope
faddl
pop
pop
leave
lods
mov
stos
js
push
out
cmp
jle
scas
int3
cmpsl
xchg
adc
xchg
in
and
add
popw
sub
shld
or
inc
sub
jnp
bound
mov
cmp
shll
push
push
icebp
pop
and
cmp
adc
jo
mov
cli
add
scas
and
jle
test
test
cmp
ffreep
cmp
dec
jb
push
add
jbe
test
add
rcrl
or
das
or
jl
jae
xchg
xchg
mov
inc
xchg
es
or
jg
sarl
adc
mov
mov
or
shl
cmp
jg
je
adc
xor
call
and
pop
add
pop
jl
mov
lods
add
pmaxub
push
cmp
add
mov
or
dec
add
in
inc
int3
add
mov
mov
es
push
test
inc
or
add
dec
pop
cmp
mov
sub
scas
outsb
js
sbb
stos
adc
rol
mov
lds
add
or
push
mov
push
mov
mov
scas
ret
fimull
dec
fwait
push
adc
lock
scas
cmc
xor
jg
add
mov
subb
mov
mov
std
lcall
inc
and
cmpl
jne
adc
mov
mov
inc
mov
ss
pop
icebp
clc
jne
cmp
neg
xor
jg
cmp
jne
and
pop
pop
pop
jl
xchg
xor
cs
xor
or
xchg
cmp
pop
dec
pop
incb
icebp
push
jmpw
movl
mov
sti
loopne
jmp
call
mov
sub
cmp
mov
hlt
mov
cld
fs
jmp
jnp
add
push
mov
dec
jle
or
cmpsl
xchg
jle
and
je
mov
imul
insb
dec
mov
adc
jmp
pusha
pop
adc
dec
sbb
sti
insl
stos
shll
mov
adc
insb
push
adc
aaa
mov
push
sbb
and
test
sub
cmp
jl
pop
ljmp
insb
pop
jb
xor
jl
push
mov
jmp
repz
jmp
popa
fsubr
add
inc
lock
mov
jp
out
loope
fidivl
mov
aad
xor
or
inc
sub
xor
sub
push
sbb
pop
ja
xor
dec
iret
je
orl
mov
int3
jecxz
hlt
pop
and
mov
pop
cmp
and
push
and
shl
xor
or
dec
and
out
popa
enter
xor
push
add
cld
inc
mov
xor
or
xchg
clc
push
ret
mov
ret
adc
push
loope
and
mov
stos
mov
inc
jo
leave
ds
dec
or
in
cltd
mov
inc
pop
push
out
insb
negl
sbb
add
mov
pop
pop
mov
divl
icebp
or
mov
inc
mull
lods
adc
push
cltd
movsb
adc
out
loope
aas
jg
je
loop
movsb
popa
xor
jnp
or
mov
sbb
fcmovb
add
or
adc
das
xchg
lds
mov
fisubrs
push
rcl
icebp
jns
ret
push
push
shlb
icebp
mov
jge
adc
or
pop
mov
sbb
mov
mov
inc
inc
adc
rclb
mull
leave
push
sub
in
sarb
cmp
or
mov
dec
sarl
push
lret
xchg
lret
loope
sbb
sbb
mulb
push
addl
mov
add
jg
aas
dec
and
xor
rcrl
mov
mov
pop
or
shlb
js
push
add
jge
fimuls
cmp
sub
xor
xor
mov
jne
dec
lcall
mov
mov
jl
jg
or
arpl
push
out
fldenv
adc
pop
shrb
mov
sub
and
mov
push
daa
mov
push
sbb
es
add
sahf
test
inc
push
sub
cmp
pop
loope
cmpl
arpl
sub
cmpl
and
mov
in
cmpsb
addr16
sub
mov
and
popa
sbb
clc
push
in
jmp
popf
rorl
push
add
pusha
dec
cwtl
push
outsb
or
rol
fnstsw
add
mov
or
adc
in
xchg
repnz
cwtl
and
inc
cmp
mov
and
sbb
sbb
push
and
pop
cmpsb
push
pop
aas
or
cmp
clc
scas
xchg
aam
sub
ficoml
je
mov
xchg
sbb
and
mov
fildl
or
scas
push
mov
ljmp
iret
je
xor
add
sub
sbb
sbb
sarl
sub
imul
into
lret
scas
xor
adc
push
mov
adc
push
mov
xchg
fstpt
xor
dec
sbb
lods
push
push
pop
inc
je
or
push
imul
mov
xchg
xor
inc
pop
or
je
add
stos
sub
add
or
int3
xor
sbb
dec
and
inc
add
cmp
dec
mov
ss
pop
dec
out
pop
sub
or
cwtl
dec
jo
aam
das
mov
jle
add
lea
data16
push
push
clc
lea
mov
mov
adc
sub
push
icebp
pop
mov
test
inc
xchg
or
sub
jecxz
xor
xchg
push
ret
push
cmp
sub
pop
push
rcrb
mov
jne
sub
movsl
inc
and
jmp
or
out
jl
test
and
push
andb
push
sbb
lea
addr16
push
daa
sub
outsb
or
lock
aaa
fists
push
aas
loopne
xchg
scas
imul
addr16
push
push
insb
ljmp
cmp
pop
jb
jb
ss
add
inc
jg
adc
and
imul
pop
mov
in
push
or
inc
dec
pop
push
dec
xchg
adc
sbb
inc
push
pop
adc
dec
je
dec
ja
mov
xchg
mov
inc
inc
adc
xchg
pop
aad
cmpl
enter
sub
add
jb
cli
sbb
cmp
jae
sbb
adc
rorl
nop
cmpsb
into
mov
jne
push
jb
dec
arpl
imulb
jmp
inc
xchg
inc
jl
and
cltd
inc
cltd
jge
pusha
dec
dec
arpl
aad
push
fdivl
loopne
icebp
inc
outsb
add
stos
shl
ret
cltd
mov
xor
xlat
rcl
mov
sub
jl
orl
push
dec
loop
push
jp
xor
outsb
push
and
movsb
dec
cltd
out
mov
fs
lods
adcl
mov
mov
rorl
add
dec
fiaddl
clc
inc
mov
mov
scas
pop
push
pushf
mov
sub
lcall
sub
sub
jbe
lcall
xor
push
xor
cmp
mov
leave
adc
inc
xor
test
or
pop
pop
push
loope
ucomiss
setle
out
test
sbb
or
adc
dec
out
push
push
add
xchg
clc
mov
mov
repnz
icebp
adc
inc
or
mov
sbb
in
insl
ret
or
push
pop
nop
cmp
test
adc
push
test
loopne
mov
jno
xor
test
arpl
das
push
call
xchg
mov
push
adc
sahf
adc
lods
mov
lahf
add
adc
push
loope
mov
in
lcall
pop
jbe
or
sbb
imul
push
inc
leave
mov
daa
orl
dec
negl
fs
pop
jle
je
pusha
mov
movsb
les
and
test
add
js
sbb
sub
xchg
inc
call
inc
mov
loop
orb
pop
xor
dec
dec
push
add
pop
sbb
push
lahf
pop
dec
adc
lods
or
or
xor
ss
push
rcrb
mov
movsb
push
dec
idivb
add
mov
movl
pop
jg
sub
dec
push
mov
outsb
sbb
movsb
jae
popa
imul
mov
in
sbb
xchg
push
dec
sub
pop
ss
or
cmpsb
push
sbb
add
inc
lcall
adc
stos
and
cmp
and
push
push
rcrl
pop
xor
jo
lock
push
sub
add
nop
push
sbb
sbbb
add
movsl
sarb
cmp
pushf
cmp
out
testl
adc
lea
pusha
outsl
adc
inc
les
sub
lea
or
mov
jl
and
adc
inc
sarl
sbb
jecxz
enter
xchg
cmp
sbb
or
mov
or
dec
cmp
cli
dec
test
push
mov
push
mov
jae
push
xor
add
cwtl
faddl
add
and
mov
sub
dec
pop
sbb
sub
js
scas
sub
add
pop
addr16
jl
cmp
icebp
scas
jg
pusha
jb
dec
cmp
jge
jmp
lods
inc
jecxz
je
cli
sub
pop
mov
inc
dec
push
push
sub
decl
push
inc
pop
xorb
nop
cli
xor
pop
into
arpl
aam
sub
xor
outsb
pusha
outsl
mov
xchg
out
push
mov
test
push
dec
cwtl
mov
nop
sahf
pop
aam
sub
mov
je
cmpsb
outsb
pop
sbb
sub
and
mov
xchg
addr16
pop
jle
repnz
cmp
int
push
mov
lods
cmp
mov
inc
inc
mov
sub
pop
and
dec
out
dec
sbb
cmp
lods
mov
insl
adc
sbb
rcrb
xor
pop
add
jg
or
loopne
ret
adcl
loop
fstpl
and
pop
outsb
repz
mov
add
push
lock
in
add
ret
orl
and
cmp
dec
divb
mov
adc
pushf
mov
pop
add
mov
imul
mov
xchg
mov
sub
mov
xchg
or
xor
adc
or
mov
mov
sbb
pop
mov
sbb
scas
xor
cmp
jl
fadd
dec
pop
sbb
ljmp
enter
or
outsb
add
insl
and
sub
cltd
js
les
je
sbb
add
in
sbb
inc
mov
sub
mov
sarl
iret
dec
jne
and
call
mov
pop
mov
test
pop
incl
xchg
add
or
jne
jno
popa
mov
pushf
add
arpl
fsub
xchg
scas
fs
inc
lcall
xor
dec
inc
dec
daa
sub
dec
xor
inc
cmp
adc
pop
test
ss
cltd
adcl
cwtl
icebp
jl
jne
and
movsl
inc
or
in
xor
add
jmp
cmpsb
fidivs
add
movsb
sbb
shr
lret
js
add
int3
xchg
roll
in
or
mov
jo
add
push
jmp
clc
call
add
mov
push
or
cmp
rolb
test
push
mov
loop
push
cmp
fwait
jle
cmp
inc
les
mov
sub
xchg
sbb
xor
pushf
icebp
mov
aad
sbb
dec
rolb
loop
fistpll
jb
in
xor
loopne
inc
adc
lock
fadds
mov
les
sub
or
ja
jl
add
push
mov
mov
push
test
lret
divb
les
ss
inc
dec
lods
jno
mov
test
test
pop
xchg
mov
ss
sub
adc
mov
fdivl
inc
xchg
daa
xor
pop
int
imul
jo
jbe,pn
xchg
movaps
dec
sbb
add
push
aaa
sbb
and
adc
xchg
adc
lcall
and
jno
inc
inc
jno
js
gs
lret
dec
pop
jl
pop
inc
xchg
sub
in
fnstsw
sub
or
or
adc
cmpsl
xchg
jns
or
inc
or
jmp
fnstenv
addr16
xor
lcall
sbb
dec
inc
mov
adc
sbb
dec
je
xchg
jo
xchg
xor
and
loope
mov
add
mov
shlb
jne
cs
scas
mov
lahf
adc
les
push
xchg
gs
scas
add
mov
mov
xchg
scas
xor
test
mov
dec
cmp
push
repz
inc
or
add
push
mov
push
or
sbb
cmpsl
sbb
inc
inc
ss
mov
cld
add
or
lock
clc
jo
sbb
xchg
shr
imul
cmp
lcall
aam
jo
shl
mov
dec
loop
mov
adc
dec
loopne
cli
fldl
mov
dec
jmp
jo
faddl
call
test
xchg
jo
mov
sbb
cmovo
mov
repnz
fimuls
adc
and
mov
xchg
je
mov
sbb
pop
sub
fldenv
mov
and
adc
in
sbb
rol
push
pushf
pop
mov
or
push
in
dec
add
xchg
jbe
add
aam
je
xchg
out
sahf
xor
push
dec
push
sub
xchg
lock
xor
adc
add
dec
xor
mov
imul
or
jo
inc
je
call
fs
cmp
push
in
mov
std
test
fcom
dec
push
mov
inc
xor
mov
mov
into
shlb
xchg
fidivrl
adc
fldenv
sbb
and
mov
scas
sahf
dec
lods
and
push
insb
fcmovb
and
ficompl
mov
lds
add
cltd
shl
ret
ret
add
dec
shl
dec
mov
inc
jmp
sub
addr16
push
add
out
inc
dec
data16
lret
lock
or
ret
jb
addr16
mov
push
jl
test
in
push
dec
dec
or
mov
jno
in
je
add
push
lock
or
int3
add
mov
subl
shll
or
in
jle
pop
adc
orb
lds
cmp
sbb
pushf
data16
pop
outsb
mov
andb
pop
pop
loopne
pop
pop
loopne
xor
push
jo
xchg
dec
jo
xchg
push
call
sbb
sbb
dec
out
inc
pusha
outsl
lods
jne
add
ret
movsb
out
mov
adc
es
mov
pop
call
stos
pop
fs
push
imul
pop
lea
pop
nop
jo
sbbb
iret
mov
test
daa
sub
jne
clc
mov
add
icebp
faddl
test
jae
les
ret
sarb
daa
push
sbb
inc
inc
test
or
xchg
mov
xchg
sbb
cmp
test
or
ss
nop
add
in
add
or
push
pop
xor
push
mov
mov
mov
outsb
sbb
rolb
or
mov
jl
and
ret
es
mov
mov
hlt
add
mov
cli
adc
movb
scas
mov
andb
movsbl
je
or
or
test
sbb
cs
insb
add
lret
mov
das
cs
cmp
je
mov
loope
pop
jne
xor
cmpsb
mov
jecxz
pushf
dec
cmpb
lods
fdivrs
mov
push
mov
dec
sbb
hlt
jle
js
pop
incl
inc
xchg
outsb
mov
or
int3
movl
pop
lock
aam
pop
aad
ficoml
inc
mov
xchg
test
ds
sub
lock
mov
xchg
test
nopl
shl
ret
pop
xchg
jge
lcall
sbb
sahf
cli
rorl
rep
ret
adc
mov
xor
mov
mov
roll
pop
bound
ret
inc
mov
notl
aam
add
clc
mov
sahf
pop
add
lea
sbb
insb
jbe
adc
xchg
jno
out
lods
dec
inc
mov
cld
pop
or
je
dec
bound
inc
dec
daa
fdivs
je
mov
lock
add
fistpl
and
mov
push
das
push
sub
jp
jbe
jle
lds
rcl
mov
dec
mov
jo
sbb
rorb
test
push
fs
sbb
cs
or
cmp
or
push
shr
imul
or
and
ret
inc
dec
pop
add
inc
into
push
inc
dec
jno
ret
jg
lds
sar
mov
shl
outsl
lods
mov
mov
sub
inc
shl
mov
sahf
push
push
pop
dec
push
fwait
je
mov
data16
std
jge
mov
or
inc
dec
jp
jg
bound
cmp
bound
mov
push
or
inc
sub
xchg
cmc
add
std
xchg
mov
loopne
cld
xor
inc
xor
in
dec
xor
sbb
pop
in
sub
lock
push
fildl
sub
jl
in
adc
and
and
mov
scas
jg
hlt
fcomps
decb
jne
addb
mov
or
push
lcall
rclb
fadds
lret
mov
adc
scas
js
dec
nop
cmp
pop
adc
mov
imul
lea
sti
sahf
fists
lea
std
nop
rcr
push
fmull
cmp
adc
and
inc
les
xchg
fisttpl
je
icebp
lods
xor
stc
mov
inc
rcl
repnz
mov
add
shlb
pop
mov
jns
std
add
inc
lahf
push
pop
mov
adc
sahf
sbb
incb
dec
pop
lret
sar
popa
xor
push
xchg
roll
movsl
sub
popf
inc
ja
cmp
or
inc
pop
jnp
testb
or
add
push
arpl
and
out
xor
test
mov
sub
mov
cmp
sahf
or
int3
leave
cmc
jno
sti
lods
pop
sbb
jg
add
adc
je
mov
jge
mov
scas
pop
stos
dec
xchg
xchg
cmp
imul
push
mov
adc
inc
adc
and
call
test
mov
scas
push
mov
xchg
inc
or
fmuls
sbb
int3
test
js
int3
pop
mov
fsubl
inc
mov
push
push
add
push
add
add
jb
mov
xor
sar
mov
mov
cmp
pop
xor
cmp
sub
pop
inc
xor
xor
orb
incl
xchg
or
out
inc
adc
pop
inc
push
inc
pop
sub
es
std
decl
or
je
add
daa
mov
call
cmp
xor
jmp
push
inc
mov
add
or
inc
sbb
rolb
int
sbb
or
sub
arpl
pop
cmp
or
inc
and
andb
sbb
ljmp
add
cwtl
mov
or
jae
call
pop
bnd
scas
dec
pushf
and
and
imul
sbb
repz
pop
lods
jmp
push
inc
xor
sbb
mov
movsb
pop
hlt
pop
sub
and
lea
pusha
mov
fildl
pusha
pushf
dec
adc
push
pop
push
add
enter
pop
ss
add
pop
out
arpl
mov
inc
add
lea
pop
pop
push
or
add
dec
sbbb
mov
addb
dec
and
or
stos
jne
push
xorl
push
jb
or
dec
push
movsb
and
push
jg
cmpsb
rclb
imul
push
test
xlat
push
inc
shrb
clc
xor
mov
cli
inc
sub
fsts
scas
insl
xor
xor
cmp
add
add
xchg
ret
loop
in
xorl
pop
jmp
das
jo
sbb
add
lret
ss
rorl
lret
add
ret
pop
xchg
mov
or
cmp
xor
pop
jmp
shlb
inc
add
sbb
inc
out
mov
jo
daa
add
adc
or
movb
mov
imul
lods
push
lret
or
pop
aaa
outsb
loop
fdivrs
lea
mov
cmpl
adc
mov
dec
cmc
inc
mov
insl
out
mov
icebp
fdivrs
or
mov
sbb
jae
push
or
test
bound
daa
fstl
xor
jl
push
inc
aam
and
nop
ja
fcomip
notb
add
adc
jnp
testb
fcompl
mov
cltd
xor
call
or
inc
test
sbb
adc
xchg
jmp
sahf
sub
lret
and
jne
and
repnz
mov
inc
pop
mov
or
push
shr
sbb
sbb
xor
mov
subb
mov
mov
fxch
fadds
pop
sbb
xchg
cmp
mov
imull
push
pop
test
xchg
and
push
add
cld
inc
sub
fs
loopne
loop
cmp
inc
test
ret
lea
addr16
cld
pop
dec
clc
xchg
mov
push
xlat
push
pop
pop
pop
pop
cmp
push
cmp
cmp
adc
pop
or
adc
ss
lea
dec
test
add
in
push
mov
in
inc
push
pop
shll
push
inc
push
test
pusha
nop
pop
push
notl
push
loope
into
dec
inc
sti
and
iret
cmpsb
js
xlat
mov
cltd
pop
sub
sub
inc
shl
push
inc
pop
loope
bound
sarb
xchg
rorl
inc
loopne
mov
clc
loopne
or
cld
lea
mov
pop
pop
push
sub
mov
lea
mov
xor
mov
sbb
adc
xor
xor
xor
jo
adc
lea
shrb
aas
ficompl
or
sub
jne
or
dec
sub
or
push
push
cmovnp
mov
mov
imul
es
pop
xchg
stos
mov
sub
push
cmp
imul
push
and
test
and
cmp
add
decb
jg
nop
cmpsb
adc
cmp
inc
cmpsb
xchg
sub
mov
jae
mov
ret
imul
sarl
adc
and
cmp
shll
lret
subb
fdivr
push
add
mov
mov
ljmp
add
andb
out
je
push
les
xchg
add
stos
mov
xchg
sub
dec
and
add
dec
mov
push
xchg
insb
popf
hlt
push
cmp
and
lret
sub
push
inc
or
xchg
mov
mov
and
xlat
enter
fbld
xor
rcrl
lret
push
popa
shl
loopne
xchg
hlt
js
and
pop
sub
call
in
adc
lcall
push
sub
adc
mov
push
inc
mov
mov
sub
and
jae
xchg
dec
shl
shll
shrb
ffree
pop
mov
or
insb
jl
add
fcmovu
mov
shlb
adc
sbb
sbb
cli
add
adc
mov
outsb
dec
and
cmp
mov
sbb
or
jae
mov
mov
inc
inc
jns
pop
jns
mov
xchg
xchg
inc
sbb
jge
lret
shrl
push
in
je
xchg
mov
fsub
inc
loopne
gs
addb
movsb
ficoms
cmp
movsb
es
push
or
cmp
sbb
scas
jle
rcrl
cmp
je
add
xor
faddl
ds
xlat
dec
ljmp
lea
and
jp
sar
and
stos
pop
sub
ljmp
xchg
fnstcw
sbb
call
or
in
sub
adc
mov
add
mov
mov
xchg
rcl
pop
lret
xor
pusha
cmc
push
fstl
push
adc
out
and
inc
inc
inc
xor
xlat
shll
lods
cmp
mov
je
sub
shrl
or
lods
imul
jp
test
jne
insb
pop
push
xor
lods
jb
add
jo
xchg
adc
fsubs
mov
cli
sub
test
dec
push
push
or
nop
mov
das
cmpsl
xor
sub
lret
push
les
arpl
insl
fnstcw
sbb
inc
adc
shlb
adc
and
out
js
cmp
or
adc
sbb
shl
fcom
rclb
dec
and
inc
pop
jmp
jnp
mov
push
add
fsubrl
mov
cs
sub
dec
mov
dec
jle
add
je
or
imul
mov
test
sbb
dec
loop
push
or
ret
inc
ja
dec
dec
nop
and
push
pop
shrb
jb
sub
push
pushf
incb
lods
lcall
inc
lahf
add
cld
mov
lret
inc
or
outsl
xchg
dec
inc
mov
movsl
xor
mov
add
jo
fidivrl
push
push
mov
addb
cmpb
sub
ljmp
push
push
test
jecxz
add
movsl
jno
inc
clc
pop
cmp
pusha
add
adc
fdivrs
mov
ret
jle
adc
lcall
and
ret
push
xchg
cmp
jo
hlt
lret
pop
jo
mov
and
not
lret
inc
jae
push
mov
and
daa
xorb
and
nop
mov
int
jb
jb
adc
jae
ror
ficompl
dec
lcall
xchg
add
mov
jmp
loope
mov
dec
pusha
ret
sub
mov
fs
mov
daa
inc
movsl
pop
push
fdivrs
loopne
ret
add
jge
rorb
cld
jbe
sub
rol
inc
sub
sbb
pop
lods
popf
popf
mulb
or
lahf
sub
mov
movsl
mov
mov
pop
add
dec
sbb
cmp
cmp
cmpsb
or
jl
mov
fmull
fstps
jl
and
and
and
fnstenv
pushw
dec
adc
ret
mov
rclb
pop
adc
add
mov
sar
pop
cld
cmp
lahf
mov
mov
mov
sub
cld
dec
jne
movsl
sbbl
lahf
mov
pop
dec
sbb
scas
bound
int
jb
aam
mov
sbbb
jp
loope
sbb
cmpb
sub
mov
sbb
popa
imull
dec
mov
inc
adc
dec
je
movsb
push
lods
or
lahf
push
js
jo
push
dec
loop
rorb
dec
xchg
pop
les
cwtl
cltd
push
push
rolb
xor
sub
mov
or
xchg
mov
insb
fiaddl
xchg
lret
loope
push
outsb
adc
or
jmp
in
adc
insl
or
cwtl
stos
test
mov
mov
push
xor
inc
addb
xor
xchg
sbb
xchg
mov
pusha
das
lea
and
sbb
pop
les
xchg
bound
inc
xchg
and
xchg
add
fadds
push
cmp
arpl
mov
adc
sub
pop
rol
jno
adc
lods
add
cmpl
arpl
mov
inc
mov
or
adc
xor
jecxz
inc
insb
inc
leave
push
and
addb
sub
sub
push
fldt
push
sbb
pop
insb
shr
jbe
mov
sub
call
push
in
dec
out
dec
or
test
or
enter
clc
jae
xchg
popa
push
pushf
adc
lods
rcll
mov
push
insb
movsb
sbb
pop
inc
add
dec
stos
cltd
jle
pop
sub
adc
inc
das
sbb
jbe
divb
ret
xchg
mov
lea
mov
xchg
orl
jecxz
add
or
inc
pop
fistpll
lock
frstor
pop
dec
pusha
add
push
push
hlt
push
xchg
cmp
shr
push
xchg
push
xchg
jmp
sbb
cmp
push
mov
jle
je
or
ret
sub
mov
mov
scas
push
mov
pop
std
xor
stos
fistl
fiadds
ret
lock
lret
icebp
insl
mov
lcall
adc
sub
imul
and
sub
mov
pop
inc
dec
ja
sbb
lret
xorl
ljmp
pusha
out
add
dec
jge
add
mov
mov
adc
mov
push
mov
mov
jo
jne
sub
adc
or
mov
pop
out
mov
cmp
dec
adc
pop
lcall
stc
jo
push
je
and
add
bound
repnz
cwtl
dec
les
pmuludq
jmp
inc
inc
ffreep
cmp
ret
js
stc
roll
add
inc
and
xor
dec
mov
das
pop
fwait
les
mov
pusha
xor
mov
mov
pop
and
pusha
ret
pop
icebp
rcl
test
dec
adc
add
and
and
push
mov
inc
pop
or
inc
pop
jae
mov
mov
mov
mov
cwtl
push
sub
mov
les
adc
jnp
cmpsl
mov
lret
mov
pop
ljmp
repnz
pop
hlt
cmp
cmp
cmp
icebp
fwait
popf
roll
jb
je
xchg
jae
adc
adcb
inc
mov
or
into
mov
les
mov
mov
pop
jl
xchg
hlt
adc
jmp
mov
fcomps
mov
pop
cmp
das
sbb
jo
dec
push
adcl
das
inc
push
sub
mov
les
xchg
scas
push
xor
xor
xor
sbb
push
and
push
mov
aad
mov
sub
addb
sbb
neg
je
xor
popf
push
scas
cmp
ret
add
and
lahf
mov
adc
jge
imull
imull
insb
pop
dec
inc
test
jo
add
xor
jne
cmc
mov
aam
sti
daa
add
ret
inc
push
sbb
pop
pop
or
and
inc
push
mov
push
sub
pop
aaa
mov
cmpl
stos
add
adc
shll
cmpsb
das
into
icebp
push
dec
inc
jae
mov
inc
mov
add
test
fcomps
jb
push
fdivl
and
ret
mov
addl
and
or
stc
ficoml
into
push
push
ret
ljmp
int
inc
cmp
ljmp
push
lods
dec
jns
adc
test
and
rorl
in
mov
xlat
push
jl
sbb
add
inc
adcb
xchg
mov
add
fldt
mull
add
xor
scas
xor
adc
sbb
rol
adc
cmpsl
push
push
cmp
pop
ljmp
ljmp
push
decb
fnstenv
xor
sub
gs
dec
jne
mov
movsl
mov
pusha
push
xchg
lea
sub
push
cmpsl
mov
filds
push
cmp
xor
loop
mov
testb
insl
inc
pop
lret
mov
xchg
sbb
das
jmp
or
push
and
call
mov
int3
cmp
or
mov
mov
add
add
loopne
sbb
add
jbe
repnz
inc
pop
mov
inc
andb
out
push
imul
mov
push
jo
push
push
push
pop
and
sbb
pop
sub
jmp
je
sbb
mov
mov
jnp
popf
xor
jbe
pop
adc
xor
jle
fcomps
inc
dec
jbe
insl
jne
mov
es
sbb
inc
push
adc
nop
test
add
clc
or
inc
add
inc
aam
xchg
stc
sub
adc
test
mov
imul
sbb
push
push
xchg
les
xchg
dec
and
mov
int
je
jle
sub
and
add
in
andl
add
adc
xchg
jmp
inc
jge
dec
cmp
je
xor
cli
mov
outsl
bound
sbb
dec
and
sub
lea
popa
and
jle
fdivr
popa
sub
ss
je
out
xchg
jle
inc
insl
mov
sbb
imul
addl
jne
and
jmp
jnp
mov
push
jo
mov
je
jp
xor
orl
cmp
pusha
loopne
ret
sarb
cmp
mov
mov
jmp
xchg
adc
pop
arpl
cmp
out
or
loope
adc
mov
and
test
mov
mov
or
push
ret
push
shlb
aad
sub
or
mov
and
aam
dec
or
pop
push
pop
adc
and
xchg
xor
insb
xor
dec
jg
push
adc
fisttpll
pop
and
or
mov
outsb
pushf
fcmovb
sti
or
sub
filds
and
fiadds
add
push
jmp
mov
ret
mov
xlat
push
or
lret
aam
imul
add
aaa
push
jo
mov
mov
xchg
inc
and
push
pop
aaa
pop
shlb
lret
call
or
mov
adc
cmp
push
mov
jb
dec
inc
inc
orb
lahf
xchg
shrb
or
push
stos
add
dec
mov
push
js
pop
or
rolb
dec
cld
inc
xchg
xor
xchg
add
mov
sub
push
bound
dec
sbb
sarl
rcrb
adcb
or
add
mov
jne
stos
add
mov
adc
mov
rcrb
std
and
cmp
cmpsl
mul
in
push
bound
add
gs
sub
repz
push
aaa
xor
jne
jnp
jns
sbb
sar
push
xchg
dec
adc
xor
xor
loope
ss
push
add
das
jecxz
cmpsb
int3
subb
or
push
xchg
into
pop
dec
ret
sarb
mov
jge
or
ret
add
mov
inc
mov
loopne
push
sbb
negb
mov
test
aam
or
ret
rorl
mov
and
pop
loopne
ret
add
dec
jo
rorl
add
inc
cmp
sbb
and
pop
fbld
fisttpll
jns
rorl
cmp
jae
sbb
adc
sbb
enter
lods
push
push
pop
loopne
sub
add
sbb
push
fisttpl
fistps
or
cwtl
lds
mov
dec
mov
cmp
cld
cld
xchg
leave
inc
cmc
scas
jns
fmul
mov
cmp
clc
push
mov
or
adc
pop
dec
in
add
sub
sub
mov
orb
and
dec
ljmp
out
mov
jecxz
push
pop
fisubrl
pop
mov
loope
mov
fwait
jnp
mov
and
dec
and
xor
int3
sbb
adc
inc
dec
dec
add
inc
sbb
popa
fists
pop
cmpsl
push
xor
sbbl
xchg
add
cli
dec
lods
dec
jo
cmp
popa
sbb
jbe
dec
inc
mov
je
out
pusha
xchg
jp
mov
push
orl
in
and
rclb
push
addb
pop
jb
adc
xchg
pop
and
adc
pop
xor
sbb
inc
or
into
hlt
pusha
insl
addl
xchg
pop
and
pop
ret
pop
jmp
bound
pop
out
push
sbb
and
in
test
es
inc
dec
mov
add
shrb
imul
aas
lods
pop
jmp
sub
test
jae
jg
outsb
xor
add
xchg
mov
clc
sub
sub
add
inc
notb
jbe
sub
mov
aad
loope
sub
xchg
dec
sbb
push
jg
shlb
testb
mov
pop
xchg
sub
push
push
faddl
jle
push
add
inc
jmp
shrb
xlat
sub
sub
push
sbb
sti
sahf
inc
mov
pop
inc
stc
out
push
jp
jg
and
xchg
pop
stos
fmuls
inc
mov
sbb
dec
or
imul
jl
sub
xchg
adc
adc
pop
mov
jo
shr
call
out
xor
sahf
push
inc
add
add
or
adc
sbb
fs
stos
fildl
and
ds
ljmp
xor
xor
pop
mov
jg
jmp
add
sar
mov
pop
cli
lea
xor
push
adc
or
cld
push
inc
dec
push
cmc
cmp
push
into
sub
loopne
lret
or
movb
ljmp
jo
pop
out
loopne
je
xor
decl
pop
scas
lods
adcl
sub
sbb
sbb
and
sub
es
or
adc
or
or
push
and
mov
or
adc
cmp
xchg
outsl
rorb
inc
ret
jnp
add
push
rcr
jno
test
sub
jbe
lods
xchg
lahf
or
push
jo
sbb
popl
jl
mov
lcall
add
dec
pop
pop
jo
mov
mov
iret
mov
add
sub
into
add
repz
lcall
cs
addr16
sub
add
cli
adc
sti
pop
add
push
mov
adcl
push
std
enter
cmp
test
xor
pop
pop
xorb
push
add
pop
push
or
daa
je
in
rcrb
pop
dec
iret
or
sbbl
xor
push
mov
mov
addr16
shl
cli
push
sbb
adc
add
cli
out
mov
outsb
rclb
mov
and
mov
add
xor
dec
and
inc
xor
dec
fldenv
lret
dec
fisubs
cmp
add
xor
jae
sub
and
or
lods
int3
and
clc
test
dec
xor
inc
cmp
cmp
dec
inc
mov
or
fisttpl
imulb
ja
nop
sti
push
sbb
jl
lcall
xor
mov
or
sub
or
dec
adc
push
and
sbbb
add
xchg
jb
rorb
add
xor
cmp
adc
dec
pusha
mov
push
jo
shlb
cmp
xchg
add
rol
mov
push
inc
pop
pop
adc
add
popf
sub
enter
or
int3
aad
mov
clc
out
add
dec
dec
mov
xchg
adc
jo
lea
mov
sub
fildl
cli
insl
xor
and
inc
add
xor
movb
jecxz
mov
sub
jg
push
push
xor
cmp
sub
mov
inc
push
add
adc
and
xchg
cs
or
inc
or
inc
cs
sbb
xor
dec
icebp
inc
pmullw
lret
adc
adc
push
pop
sahf
mov
and
push
je
jg
mov
sbb
sbb
dec
shl
fbstp
fildl
and
push
mov
out
daa
fmuls
cmc
add
sbb
pop
es
cmp
out
imul
mov
jp
adc
pop
mov
jmp
mov
and
pop
push
bound
adc
loopne
jnp
xchg
or
repnz
add
shr
call
add
add
push
sbb
inc
shrb
movsb
fs
test
ja
dec
and
ficompl
xchg
adc
mov
dec
jle
xchg
add
sub
mov
sub
or
in
pop
loop
push
jo
cmc
roll
fwait
outsl
push
sub
push
push
ljmp
inc
mov
shlb
cmp
insb
push
mov
inc
shlb
cmc
aam
sbb
inc
push
stc
mov
test
mov
push
out
loopne
cs
push
or
jnp
in
cli
shrl
mov
dec
mov
inc
mov
lods
and
sti
add
xchg
and
mov
push
or
or
sub
sbb
sbb
rcll
or
inc
cmc
jp
sar
nop
aam
nop
std
add
insb
and
mov
add
cmc
add
mov
bound
shl
das
add
cmp
mov
lea
push
test
cmp
sbbl
pushf
mov
and
pop
adc
cltd
sub
sub
and
xchg
rolb
mov
push
lea
je
mov
xorl
shl
mov
mov
lret
sbb
fadds
xor
xlat
loope
lahf
add
test
aaa
inc
pop
sub
inc
clc
cmp
push
scas
or
jnp
ret
mov
ror
dec
add
inc
aaa
pop
jecxz
rolb
das
xchg
cli
pop
inc
pop
das
mov
or
out
test
sbb
sub
fcmovnbe
cmp
in
jp
cmp
ret
mov
and
pushf
adc
jmp
lds
fidivrs
popa
std
xor
mov
shl
imul
mov
sub
push
inc
out
cmp
push
shl
sub
daa
push
sbb
adc
ficomps
fimuls
or
pop
push
sbb
mov
jmp
cld
jg
xchg
mov
jmp
cmp
jle
cmc
iret
mov
mov
pop
lods
sub
add
testl
je
cmp
jge
bound
cltd
pop
mov
push
mov
pop
pop
sub
jmp
cmp
jg
call
sbb
or
sub
sbb
arpl
div
pop
or
jg
adc
sub
frstor
adc
and
lds
loope
mov
int3
mov
mov
lds
and
fstpt
mov
or
inc
inc
imul
gs
cmc
sbb
add
push
mov
sub
jl
rep
cmp
icebp
insl
jmp
and
add
dec
enter
adc
mov
mov
dec
mov
push
ficoms
pop
imull
mov
js
and
js
and
xor
sbb
inc
fiadds
pusha
pop
cmp
outsl
aad
push
inc
stc
add
or
lea
scas
pop
movsb
adc
and
push
fs
dec
lea
inc
xchg
mov
pusha
ds
pop
cmpsb
imul
xor
fs
lcall
xchg
fwait
push
clc
inc
dec
jne
imul
xchg
sti
adc
xor
sbb
mov
add
dec
add
cld
shl
lea
enter
xor
pop
add
shlb
enter
cmp
xor
pop
push
sti
mov
add
aaa
flds
cmp
cmp
or
cmp
add
je
cmpl
stos
insb
xor
push
les
sub
xchg
jecxz
cmp
inc
sbb
and
push
or
data16
outsb
dec
jo
xor
shlb
std
push
mov
dec
std
dec
push
setnp
adc
dec
add
add
call
outsb
and
mov
call
push
push
rclb
pop
mov
mov
lods
mov
aas
lret
movsb
sbb
xchg
push
movswl
push
lcall
sub
out
cs
faddl
lret
shlb
add
jl
mov
or
cmp
pop
cli
push
clc
or
mov
mov
pop
dec
incl
mov
enter
ret
and
enter
aam
xorb
cmp
add
sbb
cli
dec
pop
dec
xchg
or
clc
cmp
jne
test
lret
adc
js
mov
int3
mov
dec
mov
adc
repnz
add
cmp
ss
sub
push
mov
jne
popa
and
lcall
sbb
addr16
adc
les
pop
xchg
cmc
mov
daa
xchg
cmp
jl
add
sahf
push
inc
push
testb
es
inc
dec
and
jo
shl
loope
shll
jl
cmp
jbe
sbb
gs
and
xor
popf
sarl
or
sbb
sub
add
inc
add
fisubrs
inc
mov
std
inc
hlt
sub
cmp
mov
inc
push
sahf
adc
lods
xchg
or
sbb
mov
or
ret
adc
mov
xor
adc
and
mov
pop
jbe
aas
adc
cmp
mov
cwtl
fdivl
cmp
jle
push
and
mov
and
fnstsw
mov
in
adc
sbb
and
pop
sbb
imul
jecxz
inc
pop
mov
adc
cmpsb
push
dec
rorb
dec
addps
or
leave
adc
in
jl
sbb
jg
lds
or
inc
sbb
andb
dec
mov
lock
mov
je
sub
push
mov
loop
inc
add
idivl
adcl
and
push
sub
and
shl
add
scas
mov
test
push
xor
rolb
jle
sbb
cmpsb
mov
pop
inc
dec
dec
rorl
aad
push
xor
mov
adcl
add
sbb
sub
or
dec
loop
inc
inc
divl
jne
jg
adc
stos
aaa
push
add
shl
xchg
pusha
mov
rol
stos
nop
sub
insb
int
jl
push
add
jg
out
ja
pop
sbb
jne
inc
cmp
pop
cmp
add
xor
adc
push
pop
and
or
push
aaa
adcb
push
ja
or
or
jns
sbb
lock
add
adc
dec
rcll
mov
adc
out
or
add
push
inc
inc
or
or
jbe
and
jo
dec
mov
aam
stc
jg
xor
arpl
iret
shl
aam
or
ret
push
jns
nop
jle
jne
cmpsb
inc
push
bnd
movsl
inc
push
fidivl
mov
xchg
xchg
ret
movsl
js
push
mov
push
fnstsw
mov
repz
ficompl
cli
testl
pushf
lods
jge
sarb
lret
mov
lds
sub
adc
je
dec
fldl
test
outsl
dec
mov
out
sub
mov
ss
movsb
ds
add
lock
mov
lret
push
scas
jo
xchg
addb
or
loope
pop
mov
xor
jg
cmp
arpl
add
xor
mov
stos
pop
add
dec
fistpl
dec
dec
jne
dec
loope
andb
push
arpl
mov
xchg
addr16
cmp
add
inc
pop
jno
add
add
aas
mov
pushf
and
mov
je
es
cmp
push
jg
addr16
add
add
ficoms
pop
or
lea
loopne
mov
push
sbb
push
rorl
or
xchg
sub
cmp
js
xor
sarb
rcrl
or
std
add
out
mov
and
and
clc
aaa
jl
pop
xchg
xlat
jle
mov
xor
push
call
ds
imul
daa
cmp
dec
in
inc
push
add
ffree
jae
cld
js
sub
mov
push
add
xchg
mov
cmp
push
daa
push
or
add
sbbl
pop
jl
sahf
popf
repnz
pop
sub
sbb
push
pop
adc
dec
and
add
test
adc
fisubs
dec
cmp
mov
inc
in
repnz
movsb
xchg
sahf
xor
and
out
xor
sbbl
test
inc
adc
std
in
pop
push
xchg
push
or
adc
popa
or
fadds
enter
outsw
jmp
jae
add
enter
jmp
inc
mov
mov
fdiv
push
cmpsb
lods
dec
fdivrs
add
sub
add
dec
dec
sahf
rclb
mov
mov
in
test
add
or
cmp
xor
inc
add
mov
or
adc
sbb
sub
inc
sbb
and
pop
and
daa
adc
mov
xchg
daa
jno
mov
adc
adc
daa
lock
jbe
jbe
sub
dec
inc
push
and
pop
shlb
mov
dec
mov
jae,pt
jp
scas
fimuls
pinsrw
xchg
cmc
adc
scas
pop
xchg
out
into
popf
test
and
pop
inc
test
inc
mov
pop
inc
jno
ret
xchg
aas
pop
pop
clc
sbb
enter
mov
xlat
les
inc
dec
inc
add
cli
dec
enter
jle
pushf
jp
jle
add
pop
or
int3
or
or
sub
cmp
cli
and
loop
repz
outsl
and
mov
sbb
js
adc
or
lods
sbb
pushf
aaa
inc
inc
and
icebp
ret
enter
rorb
loope
jo
sbb
jg
stos
or
aaa
aas
sub
or
pushf
std
roll
fcoml
daa
and
sahf
cld
sbb
and
and
inc
cmp
enter
sub
xorl
mov
push
adc
adc
add
test
mov
ret
mov
sbb
pop
push
mov
sub
enter
pop
mov
ja
xchg
shrl
adc
ja
push
pusha
scas
adc
adc
mov
push
rorb
inc
ret
dec
jne
in
mov
inc
pusha
loopne
add
sahf
push
jle
jecxz
adc
andl
icebp
or
mov
gs
cmpsb
shrl
fwait
cmpl
or
and
xor
repz
mov
lds
out
or
pop
fildl
pop
daa
and
cmp
or
or
shr
jae
xor
lods
jmp
mov
cmpsb
pop
lods
mov
dec
adc
or
pop
hlt
or
lret
add
sub
pop
rcrb
arpl
fmuls
or
int
sbb
or
and
nop
cmp
add
jle
push
push
mov
cmpsl
jecxz
js
adc
adc
cli
sti
rol
dec
cmp
xchg
inc
in
rol
inc
mov
lahf
xchg
mov
shl
push
cmp
mov
or
push
mov
and
and
jmp
test
icebp
jle
outsl
inc
cmp
movd
into
sub
jmp
xor
enter
test
mov
iret
int
lret
add
adc
sbb
lahf
fadds
xchg
add
cmp
jno
inc
add
rolb
add
mov
cli
mov
lret
push
leave
mov
pop
lret
jmp
or
fisubrs
cmpb
lea
add
or
lock
or
adcb
js
ret
pop
xor
bound
inc
pop
sub
mov
dec
adc
push
jmp
stos
mov
cwtl
pop
aam
add
and
cmp
sub
outsl
push
adc
xorb
xor
shrb
add
js
jno
push
add
inc
mov
adc
add
jmp
add
xor
movsb
xor
andb
jp
mov
xor
daa
sbb
inc
mov
dec
mov
mov
insb
adcb
stos
enter
pop
cmp
push
lea
adc
cltd
les
lea
adc
jb
add
movb
test
jg
scas
mull
push
addb
or
leave
pop
sbb
popl
mov
or
cmp
sahf
jmp
mov
lret
sbbb
arpl
shl
shlb
add
cs
mov
xchg
or
or
mov
iret
pusha
push
lret
lret
sarb
push
js
and
outsb
jge
pushf
clc
dec
sbb
test
lock
rcll
sub
jecxz
imul
adc
loopne
lahf
and
dec
je
inc
imul
add
push
rorb
adc
inc
xchg
int3
test
mov
inc
jae
pop
loope
inc
pop
movb
je
cmp
in
pop
je
or
mov
adc
cmpl
test
inc
add
iret
add
in
flds
js
in
pop
lret
push
sub
sbb
and
add
inc
outsl
jb
int3
push
sti
jb
adc
adc
sub
popf
sub
mov
mov
xor
cmc
pusha
movsb
xor
mov
dec
fwait
aas
test
xorb
jle
nop
jno
ret
jmp
xchg
mov
in
xchg
repz
xchg
sub
push
in
mov
loopne
or
mov
xor
sub
cmp
mov
ret
xchg
mul
push
lea
repnz
popf
movsb
xchg
or
pop
mov
adc
sbb
aas
fsubrs
mov
js
inc
sbb
sbb
jge
das
jbe
add
mov
mov
fst
popf
and
ret
inc
inc
or
sub
xchg
addr16
lcall
jb
add
jl
jmp
cmp
subl
and
arpl
loop
add
xchg
pop
dec
jo
clc
and
inc
inc
sbb
pop
or
jo
fistl
repz
adc
or
adc
or
xor
stos
xchg
push
jo
dec
mov
mov
push
fistpl
sbb
jb
shl
add
add
test
and
jmp
and
jbe
push
popf
sbb
sbb
xor
sbb
mov
js
mov
mov
arpl
jae
lods
insl
pop
dec
lret
inc
xor
jo
lock
mov
dec
pop
dec
mov
test
ret
mov
scas
test
cmp
bound
in
ret
or
pusha
cwtl
add
add
jo
xchg
pop
and
int
fimull
or
xor
in
mov
dec
sub
icebp
and
rcrl
lcall
adc
xor
je
inc
movsl
mov
dec
cmp
das
fsubrs
mov
sub
mov
cmc
pop
lock
lock
iret
mov
or
out
and
mov
dec
mov
je
xchg
cmpsl
lcall
cmp
or
jo
cmp
and
outsl
or
xchg
adc
push
jnp
cmp
mov
dec
mov
mov
cmp
int3
add
pop
or
push
xchg
rorl
xchg
cmc
ljmp
and
mov
gs
lea
fucom
or
cmovl
arpl
dec
imul
jne
and
push
lahf
in
test
sti
xor
cmp
fnstenv
mov
or
push
push
sub
outsl
sbb
mov
lcall
push
xchg
pop
add
adc
push
dec
pop
sub
and
xchg
sbb
xlat
push
xor
pavgw
sbb
stos
ja
mov
dec
aaa
or
jnp
data16
inc
adc
xor
and
inc
mov
push
aas
into
xor
incb
sti
jnp
movsl
cmp
sbb
pusha
and
cmpb
add
popa
inc
and
sarl
and
sub
mov
cwtl
loopne
sub
adc
xor
stos
inc
sbb
addb
add
push
cs
ret
push
testb
sub
adcb
inc
adc
lock
test
sahf
lea
add
dec
sub
push
add
out
push
pusha
lea
dec
clc
or
sub
xchg
fimuls
dec
mov
in
cmp
pop
lcall
scas
cmpsb
or
ds
pop
in
data16
scas
xor
sub
mov
xchg
fisubs
mov
or
popa
orps
orb
nop
mov
jge
sbb
adcb
ds
cmp
cs
gs
add
int3
insl
aad
divb
adc
or
push
and
fnstsw
fwait
ljmp
xchg
sbb
or
cmp
movsb
ja
sbb
shlb
leave
adc
sbb
lahf
jne
test
imul
push
fstl
or
sub
or
jmp
call
inc
add
xlat
inc
lock
sti
push
ret
pop
imul
add
rcr
xchg
dec
xor
pushf
clc
adc
fistl
adc
shl
sub
push
cmc
aaa
loope,pn
insb
stos
inc
dec
and
insb
mov
pusha
xor
cwtl
bound
mov
fmuls
push
sbb
fiaddl
dec
push
cs
fwait
sar
sub
and
movb
cmp
loop
sub
sti
or
dec
mov
jmp
mov
mov
jl
movb
decl
dec
jns
das
in
fdivr
sar
add
mov
inc
dec
cwtl
andl
dec
stos
adc
add
or
andb
jno
dec
inc
or
repz
hlt
sbb
pop
sbb
xor
sub
mov
or
mov
inc
adc
xchg
es
xorb
mov
mov
add
sti
aam
dec
add
push
pop
adc
shr
ljmp
adc
adc
mov
mov
mov
mov
cmp
fisubrl
sub
jmp
push
sbb
movsb
xchg
mov
xchg
add
mov
inc
xor
insb
sbb
cmp
call
inc
add
sbb
test
push
adc
push
inc
dec
insl
orl
pop
inc
mov
ja
sbb
cmp
xor
mov
mov
push
jp
push
test
mov
scas
cmp
mov
adc
sbb
jecxz
lds
sub
movsb
adc
out
sub
scas
push
pop
lea
mov
push
aas
and
inc
and
push
bound
shr
jecxz
cmp
jmp
add
int
xor
add
movb
xchg
push
cs
out
xor
add
add
xor
pop
test
sbb
and
std
lret
scas
fdivl
rol
xor
or
dec
push
jb
adc
mov
shl
add
lret
mov
add
movsl
mov
push
push
jns
addr16
sbb
sub
and
and
xchg
std
ds
out
mov
pop
pusha
adc
or
jmp
cmp
and
cmp
add
inc
ret
ljmp
sti
jge
dec
push
mov
mov
lock
inc
cmp
pop
and
fimull
fmull
adc
std
add
adc
cltd
jns
add
sub
lods
jecxz
xlat
dec
xor
repz
test
sahf
push
shl
mov
lret
push
mov
add
sub
test
mov
and
outsb
xor
aam
jge
inc
or
mov
loopne
jle
adc
xchg
pop
adc
sub
call
xor
or
testb
mov
xchg
orb
push
pusha
pop
or
scas
or
call
or
adc
add
pop
add
mov
imulb
add
sub
xor
inc
push
jp
rcrb
or
pop
inc
into
jmp
loopne
xor
cwtl
aas
subl
clc
lret
xchg
shll
nop
xchg
cmc
roll
push
dec
mov
add
mov
ret
mov
ds
movl
push
fcoml
and
and
inc
daa
mov
dec
test
test
dec
push
sbb
cwtl
mov
jb
fcoms
pop
push
adc
sarb
filds
or
push
dec
or
subb
outsb
adc
adc
fimull
xor
pop
pusha
lcall
daa
flds
mov
nop
jp
sbb
add
pop
sub
xor
mov
push
lret
and
dec
inc
sbb
int
xorb
flds
out
out
adc
inc
jecxz
pop
cmp
jecxz
fnstcw
sub
fstps
lds
mov
lret
or
cli
sub
sub
xchg
jne
shl
inc
mov
sub
dec
and
in
pop
stc
xchg
mov
imul
jecxz
sbb
jl
xor
out
mov
xor
fistpl
push
cmp
mov
xor
pop
inc
cmp
push
pushf
dec
add
add
cmp
add
sub
or
push
add
sahf
jge
sub
daa
sar
sub
in
dec
dec
pop
push
sbb
inc
xor
and
inc
and
inc
adcb
dec
xor
jb
push
mov
call
cwtl
or
imul
cmp
rorb
and
mov
and
inc
adc
push
or
or
divl
and
lahf
or
fmull
fsts
fsts
add
pusha
fsts
daa
in
test
int3
mov
adc
and
mov
mov
enter
xchg
insb
sub
fsts
ret
insb
rcrb
rclb
jp
lret
popf
push
xor
rcr
push
xor
dec
test
loope
adc
jge
jge
fadds
fsubs
rcrb
cmp
pop
xor
out
out
out
cmp
daa
and
fadd
push
pop
inc
inc
inc
lock
push
clc
inc
pusha
adc
mov
sbb
cmp
sub
push
adc
in
mov
fsts
adc
mov
or
int3
lea
shlb
enter
pminub
sub
leave
arpl
sub
adc
loope
popf
loopne
fnstcw
mov
in
sub
and
test
or
in
test
js
rolb
adc
sahf
pop
pusha
loop
mov
dec
inc
adc
cmp
lret
dec
inc
ja
or
imul
in
sbb
clc
or
fsubs
jae
cs
sub
add
adc
pop
jl
ds
push
je
pop
sbb
inc
stos
or
or
cltd
mov
jae
push
ds
adc
fdiv
jge
sbb
shll
mov
cmp
jmp
stos
fistps
stos
pop
cmp
mov
adc
mov
cmp
int3
mov
pop
icebp
shll
aas
mulb
or
dec
add
pop
insb
das
push
push
cmp
adc
sti
insb
insl
fadds
cmp
xor
scas
add
or
dec
or
fs
sbb
sub
sub
inc
pop
add
and
mov
mull
dec
lret
movsb
sub
ds
loope
iret
xor
pop
xchg
jp
or
xchg
pop
ffreep
or
inc
ljmp
jnp
pop
sarb
push
rclb
mov
dec
add
sbb
and
sbb
push
insb
shlb
or
sub
jne
push
mov
xor
push
push
sti
mov
add
repnz
fwait
dec
not
mov
lock
mov
or
lock
pop
pop
xchg
fisttpll
cmp
sub
add
movsb
outsl
shl
lea
lcall
push
sub
jo
push
std
or
addr16
mov
xchg
fstl
push
or
add
pushf
into
lret
dec
imul
ds
shll
mov
int
xor
sub
mov
sub
imul
int
mov
stos
sub
pop
add
js
jo
jmp
or
inc
insb
in
add
sbb
rolb
shlb
sub
sub
sbb
int3
rclb
fs
xchg
popa
xchg
ret
rcll
push
push
adc
inc
mov
test
cli
stos
and
mov
jmp
xchg
xor
jl
mov
cli
or
and
push
jns
call
add
cmpb
and
rorb
jg
insl
xchg
jnp
push
add
xchg
or
loop
and
les
pop
sbb
sub
mov
aam
into
test
notl
enter
and
repz
cmp
add
adc
aaa
fdivr
and
subb
shl
aam
mov
mov
les
dec
push
shll
add
pop
sub
cmpsl
test
add
or
mov
out
xor
jl
sub
ds
xchg
jmp
cwtl
jecxz
out
sub
dec
icebp
mov
push
dec
and
enter
push
sub
push
loop
push
sbb
fcmovnb
adc
dec
pop
add
imul
fucom
rolb
cmp
cmp
push
jle
mov
stc
adc
or
push
and
adc
sub
cmpsb
cli
sub
cpuid
push
push
repz
loopne
aam
clc
push
sbb
and
stc
pop
cli
js
and
push
add
cld
gs
pop
dec
push
and
shrb
pop
xor
iret
add
push
mov
andb
jle
or
fisttpll
sahf
aaa
lea
fldenv
cmp
add
das
xor
roll
lret
adc
push
testb
or
mov
sbb
xor
jle
mov
sub
pushf
cmpsb
add
mov
pop
loopne
iret
rolb
jl
mov
aad
shrb
test
test
mov
or
cmp
fs
pop
lcall
mov
sbb
sub
ljmp
inc
push
adc
lea
push
push
pop
pusha
test
or
xor
mov
or
push
mov
sbb
jns
inc
xor
rcrb
pop
lods
push
inc
adc
jno
push
dec
cmp
ret
or
add
or
adc
loopne
shrl
mov
dec
pop
subb
add
cmp
icebp
sbb
xor
cmp
sbb
imul
sbb
fimull
push
sahf
inc
es
andb
lods
cmp
fcmovu
cmp
cli
ret
pushf
dec
jnp
adc
mov
sub
or
inc
add
pop
mov
jne
mov
lock
scas
xchg
mov
mov
bound
sahf
orb
cli
aam
repnz
lret
add
add
lock
dec
rol
mov
xchg
sbb
mov
add
push
into
inc
adc
mov
aas
rcrb
insb
std
cmp
push
jmp
mov
inc
sbb
xchg
out
dec
push
xor
sub
xor
test
or
js
into
arpl
sarb
inc
arpl
loope
push
outsl
push
push
ja
mov
ss
cmpl
pop
push
fstl
mov
dec
out
stos
mov
jg
sub
mov
or
into
jge
push
xchg
lods
mov
add
push
int3
repz
mov
jb
jns
mov
sub
aas
lock
mov
adc
nop
mov
outsl
invd
inc
xor
clc
in
push
mov
push
or
xchg
call
imul
leave
jne
pop
pop
mov
add
movlps
int3
or
out
ret
pop
mov
hlt
xor
cs
sbb
dec
dec
and
push
push
outsb
jge
test
adc
andl
xchg
pop
shrl
call
pop
xchg
and
pop
mov
add
sub
pop
das
push
test
xorl
or
pop
pop
dec
fdivr
cmp
pmuludq
movlps
nop
lcall
mov
repnz
xor
xchg
adc
negb
subl
popa
push
push
fisubrl
aas
cld
xchg
ret
sbb
push
imul
fildll
enter
push
sbb
and
sub
push
push
or
lcall
add
pop
push
mov
add
pop
fisubs
faddp
dec
mov
pop
mov
dec
sti
insb
fwait
add
rcrb
mov
dec
rcr
clc
nop
mov
out
or
pusha
or
mov
pushf
lahf
push
movsb
sarl
push
dec
mov
mov
mov
xchg
imull
hlt
adc
add
and
daa
push
int3
inc
popa
mov
movsl
enter
lds
dec
jecxz
pop
pop
push
pop
mov
fnstsw
out
add
mov
mov
shrl
sub
add
sub
mov
adc
ret
pushl
ds
mov
mov
push
push
iret
sub
fsubl
push
sbb
mov
outsb
mov
nop
test
inc
fldl
fnstsw
movl
rclb
mov
pop
and
push
pop
dec
ret
sub
loop
and
add
inc
movl
les
imul
ret
cmp
adc
aas
cmp
inc
test
cmp
mov
jb
pop
mov
lahf
imul
adc
or
or
pop
icebp
lahf
icebp
pop
push
popa
or
outsb
push
icebp
lods
cwtl
or
rol
inc
addr16
or
mov
xchg
jnp
or
aas
dec
mov
cmp
cld
addr16
xchg
lcall
xor
jg
aas
add
mov
test
addl
push
and
pop
jne
lahf
pop
or
fwait
mov
in
cwtl
fmull
xor
push
push
add
cmp
imul
popf
mov
lret
out
mov
jbe
sarb
cltd
jp
cmp
jp
loop
jne
pop
scas
push
sar
push
jle
mov
lock
push
add
sbb
ret
loopne
pop
lea
sahf
and
or
add
ljmp
hlt
push
pop
es
fmul
pop
cld
loopne
and
cmp
add
mov
mov
xchg
shll
xchg
or
pop
sti
push
mov
inc
ror
sbb
and
add
gs
les
or
xchg
pop
mov
push
nop
sbb
mov
js
imul
xchg
add
shlb
dec
mov
into
mov
push
pop
fsubs
cs
pusha
or
push
js
cwtl
sub
fs
add
mov
roll
popf
adc
pusha
mov
outsl
add
add
mov
inc
push
lahf
push
ljmp
cli
sti
add
fwait
idivb
sbb
sbb
mov
sub
inc
or
mov
mov
add
lret
fucomip
clc
push
push
lds
add
lcall
xor
mov
pop
xor
and
and
push
mov
mov
out
push
lret
sbb
adc
and
ror
insb
sahf
pop
mov
mov
and
shlb
add
inc
dec
das
adc
cwtl
inc
xchg
mov
push
push
add
and
cmp
aad
sbb
ret
jge
mov
hlt
jmp
jp
iret
loopne
xor
jns
std
dec
xorl
inc
movb
scas
adc
or
pop
mov
iret
cmp
cmp
leave
das
add
push
and
mov
or
pop
or
sahf
lods
pop
mov
push
push
orb
dec
sbb
jns
mov
push
rol
repz
imul
pop
lret
cmp
daa
mov
sahf
sti
pop
addr16
test
mov
daa
push
arpl
cmp
mov
sti
lds
mov
and
gs
jg
mov
insl
or
decl
js
loopne
std
add
adc
test
add
mov
outsl
sbb
icebp
add
lret
pop
add
lahf
clc
ret
pop
jl
pop
pop
cmpsb
mov
fisttps
int3
xchg
in
pop
inc
into
or
xor
push
lret
dec
insb
push
mov
jge
push
in
push
shr
cwtl
lcall
xchg
dec
clc
xlat
pop
cmp
jb
jmp
inc
cwtl
inc
aas
push
xchg
mov
push
clc
movsl
and
sbb
inc
sbb
xor
xor
sbb
pop
jae
inc
and
sbb
or
pop
mov
pop
add
adc
shrl
mov
add
xor
adc
push
and
dec
lret
add
sub
pop
mov
xor
shll
push
dec
mov
je
fadds
mov
inc
adc
or
push
sbb
dec
add
pop
pop
or
mov
lret
insl
clc
andl
push
lea
scas
add
sbb
sub
ret
mov
test
inc
pop
adc
lcall
xor
inc
mov
push
jge
inc
fnstsw
nop
and
enter
rcrb
or
lret
lea
or
mov
pop
mov
sbb
in
add
sahf
movl
les
mov
adc
cmpsl
and
and
mov
mov
add
mov
xchg
inc
jge
mov
dec
or
push
adc
sbb
pop
xor
loopne
pop
xor
shlb
or
adc
xchg
test
lock
clc
shll
jle
xor
and
in
ret
clc
mov
insb
lea
addr16
pop
arpl
xchg
popa
aad
pusha
pop
pop
xor
dec
roll
pop
addr16
push
in
mov
and
sub
je
dec
pop
dec
add
dec
add
cmp
insl
push
mov
stos
inc
loope
icebp
fwait
arpl
seto
push
sub
dec
ljmp
je
dec
je
cwtl
scas
loope
adc
rcr
lsl
cmp
jl,pt
mov
fwait
pop
aaa
mov
adc
push
inc
push
jo
add
and
pop
test
sbb
jo
add
mov
and
cmp
or
cld
lcall
or
divl
inc
outsl
or
sub
scas
int3
lock
or
add
mov
inc
xchg
add
jns
rclb
sbb
add
xchg
cmpb
addb
or
cmp
and
fldcw
in
jno
and
mov
sarl
cmp
mov
movl
sub
xchg
push
arpl
push
inc
insb
cmp
push
xor
clc
sub
faddl
fcoms
push
mov
fdivs
movl
xchg
mov
add
jecxz
add
ss
add
rcr
mov
clts
aam
sbb
mov
xchg
mov
daa
daa
shrb
pop
add
cmp
mov
fstpl
add
cld
push
push
imul
adc
add
orl
adc
in
es
jo
ret
mov
and
insl
or
sub
and
or
mov
or
and
mov
add
jne
roll
cli
lock
or
daa
cmp
shlb
xor
push
lea
push
icebp
add
and
push
pop
pop
push
mov
cmp
push
mov
insb
sub
push
push
sbb
cmp
xchg
xchg
push
inc
adc
sti
mov
hlt
xchg
adc
pushf
cmp
sbb
cmp
or
cltd
sub
loope
mov
aaa
adc
aas
mov
add
iret
add
or
lods
mov
fadds
add
add
mov
pop
push
push
test
add
push
out
fnstenv
add
leave
inc
push
ficomps
and
jle
test
nop
xchg
mull
push
cmp
in
xor
sub
xchg
inc
dec
add
add
lods
jmp
and
xchg
mov
out
dec
xchg
rcrb
addr16
leave
fsubrl
rcll
lods
or
mov
icebp
mov
and
es
xor
xor
cmp
rcrl
jmp
sbb
add
fs
daa
idivl
pusha
fwait
push
roll
inc
add
es
loopne
fnstenv
lahf
push
mov
add
and
shll
mov
dec
cmpsl
fstl
xlat
add
fwait
leave
cld
push
xor
xlat
js
sbb
xchg
add
cwtl
adc
add
cmp
mov
stos
adc
repnz
xor
pop
ss
adc
mov
or
mov
frstor
lret
fdivp
andb
shlb
adc
mov
loope
mov
ret
jo
js
mov
scas
insb
mov
add
daa
mov
pop
push
fcmovb
add
or
mov
push
mov
jecxz
add
icebp
jae
rcl
loop
cmp
jmp
hlt
in
bound
and
push
out
inc
fstl
push
outsl
sub
je
mov
or
add
mov
incl
cmp
movb
jne
push
xchg
orb
or
sbbl
inc
pop
je
rcrl
std
adc
sbb
hlt
pop
cmc
imul
add
push
ds
sbb
fs
adc
cmpb
mov
movsl
iret
stos
adc
and
jmp
bound
and
push
cmpsb
ss
fmuls
call
inc
pop
adc
daa
dec
xchg
imul
cmp
cs
cmpsb
add
mov
mov
sbb
and
and
or
add
xchg
sbb
add
mov
adc
adc
add
clc
mov
sbb
jbe
cmpb
ja
dec
adc
cmc
mov
pop
xorb
mov
sub
adc
inc
mov
push
xchg
xor
cmp
and
xchg
jno
cmp
adc
push
cld
cmp
xchg
push
add
inc
mov
inc
and
push
fisubl
or
inc
jbe
xor
mov
aad
jbe
lea
in
f2xm1
lret
add
jae
jne
cld
and
ja
dec
js
dec
fistpl
and
pop
push
leave
sbb
pusha
pusha
mov
dec
pop
cwtl
icebp
mov
daa
push
adc
jb
pop
int
adc
xlat
jbe
ljmp
dec
mov
rcll
sbb
fsubs
scas
std
scas
xchg
mov
ds
sub
in
pop
push
and
jmp
xchg
shl
cwtl
adc
or
push
rcll
xor
mov
inc
sub
test
sbb
loopne
xchg
mov
mov
cmc
bound
daa
xchg
fldt
into
inc
mov
inc
adc
nop
mov
push
sbb
jmp
push
push
je
mov
adc
int3
push
pop
push
pop
sub
dec
scas
mov
pop
enter
int
pop
jle
cmp
and
nop
lret
ud1
sub
jne
aam
xorb
jmp
inc
dec
movsb
adc
lcall
in
pop
pop
or
or
adc
adc
pop
or
je
push
icebp
pop
pop
inc
mov
flds
insb
mov
dec
shr
sub
xor
fiadds
jp
push
inc
mov
inc
jne
adc
pushf
dec
repz
hlt
insl
fisubrl
pop
pusha
inc
fiaddl
add
xchg
ds
int3
fwait
dec
sub
mov
xor
fs
testl
push
adc
lods
jg
fcomp
mov
mov
push
mov
push
dec
inc
sbb
add
jle
xorb
xorl
test
dec
mov
and
arpl
ljmp
les
aad
pusha
dec
mov
and
mov
jp
or
xorb
cmp
sbb
cmp
cmp
push
subl
add
cmp
mov
jno
add
inc
sbb
add
outsl
lock
push
mov
adc
add
push
inc
fisubrl
mov
sbb
incl
mov
mov
push
jno
push
aas
mov
inc
lods
in
and
repnz
into
loopne
pop
push
adc
outsl
lods
push
add
rcll
add
inc
add
hlt
and
jmp
lods
popf
push
rcrb
adc
mov
jne
push
jg
call
popa
out
subb
pop
inc
repnz
jb
test
rorl
shrl
pushf
or
xor
xor
stc
filds
in
pop
dec
mov
push
dec
test
les
sub
into
sub
adc
add
fmulp
movsl
or
push
lahf
shll
cmp
cmpsb
push
push
xchg
lea
push
cmpsl
mov
dec
js
cmpsb
in
xorl
push
insl
sub
aad
adc
jle
mov
and
nop
out
push
lods
sbb
sbb
xchg
ret
or
push
repnz
lret
cwtl
cmp
sahf
push
ljmp
arpl
dec
sub
mov
add
out
mov
mov
mov
ljmp
add
rorb
pop
mov
and
pusha
and
mov
adc
adc
mov
push
cmp
push
sub
movl
mov
sub
jne
dec
and
jnp
mov
jb
nop
pop
shll
inc
cwtl
cmp
stc
mov
sbb
mov
cmp
sbb
push
mov
popf
add
jb
adc
jecxz
movsl
pop
xchg
je
popf
je
dec
shll
into
jbe
cmp
mov
adc
mov
or
xchg
push
mov
inc
and
mov
mov
nop
dec
push
sub
pop
scas
pusha
xchg
and
aas
add
dec
clc
jno
cmp
aam
lret
sub
rolb
lret
inc
shrb
test
adc
sti
push
shlb
xchg
scas
push
popa
sarb
and
je
push
movsb
and
jge
xor
test
or
mov
rcll
subb
mov
cld
mov
xchg
and
shrb
push
xchg
or
arpl
lods
add
push
fwait
movsl
or
addb
and
loope
add
push
mov
add
movsl
jns
fdiv
mov
jp
hlt
icebp
push
cmc
sbb
sub
rorl
push
loopne
jns
clc
clc
out
dec
jmp
rclb
ret
mov
adc
push
and
adc
call
dec
cmp
or
mov
aas
and
xchg
push
and
mov
xchg
cmp
aad
sbb
dec
xchg
arpl
add
aaa
pop
jmp
xor
jge
dec
sbb
cmp
dec
shlb
and
js
xor
aas
mov
and
int3
push
int
mov
lods
pop
jp
inc
adc
sbb
dec
push
aas
push
popa
shlb
jno
rcrl
orl
nop
mov
pop
imulb
pusha
and
xchg
call
push
lds
push
stos
rcll
jae
xlat
pop
mov
pop
push
dec
mov
ret
ret
scas
adc
js
and
xor
call
loopne
aaa
and
adc
mov
aas
fsubl
dec
movsb
add
cwtl
aam
sti
push
mov
in
add
nop
cmp
sbb
cs
repz
ret
in
and
push
push
int3
dec
jns
or
cmp
sub
push
and
adcl
rorb
mov
or
loopne
xor
insb
mov
bound
pop
xchg
popa
enter
sbb
fs
adc
push
scas
xor
and
ror
xchg
sub
ret
ds
lds
clc
adc
pop
jl
dec
or
popa
shrl
push
ficompl
push
adc
nop
dec
xchg
fcmovnbe
jmp
xor
test
loope
pop
lahf
in
push
or
popl
cld
leave
and
dec
sbb
aaa
pop
shr
cmp
add
xor
sahf
in
roll
and
fidivrs
or
mov
rolb
mov
mov
pusha
jmp
add
jno
push
and
inc
mov
add
pop
sbb
push
dec
push
hlt
cli
or
cmpsb
es
pop
dec
jecxz
mov
decl
push
mov
ret
or
movb
gs
xchg
cmpsl
fwait
jo
or
pop
pop
dec
pop
andb
nop
sbb
xor
mov
xchg
inc
jl
add
cli
nop
push
cmpl
iret
inc
orb
dec
sbb
jp
jge
popf
inc
pop
lds
pop
and
push
mov
notb
dec
dec
jne
pop
inc
xor
jne
cs
mov
push
nop
cs
adc
add
fcom
sub
enter
xchg
and
or
lock
addb
inc
cmc
push
lods
sub
sbb
rcrb
lret
add
nop
stos
rclb
and
sub
out
push
pop
inc
das
and
ret
in
sbb
lcall
lahf
mov
mov
cmc
jge
and
hlt
or
inc
mov
leave
sbb
addl
adc
lahf
cltd
shlb
or
pusha
push
lods
nop
mov
and
mov
fistl
inc
popa
or
sbbb
inc
mov
repz
mov
add
out
pop
cmp
jo
cs
dec
sbb
xchg
sbbl
cmp
push
lret
mov
gs
loop
cli
fisttpll
cmp
mov
cmp
xchg
loope
sub
jno
sbb
add
xor
and
dec
inc
jo
cmpsb
insl
pop
pop
repnz
and
jne
enter
icebp
jbe
aad
enter
push
je
inc
mov
and
jle
add
dec
mov
mov
adc
add
clc
call
pop
adc
fidivl
push
sbb
movsl
or
push
rorl
cmpl
dec
and
shlb
sahf
lock
aas
and
dec
and
fsubl
push
outsl
sbbl
cmpb
or
add
add
popa
test
add
lret
sti
filds
and
aad
pop
add
jno
icebp
mov
xor
lea
dec
sub
xchg
sbb
mov
pop
repnz
int
and
sbb
add
dec
sbb
dec
test
and
adc
pop
inc
mov
mov
lcall
sub
dec
ret
test
out
mov
add
lahf
sbb
or
mov
add
or
inc
sub
and
cmpb
mov
mov
push
sub
xchg
xchg
cld
xor
arpl
dec
or
sbb
or
es
add
mov
adc
aas
xor
xchg
call
xchg
adc
or
jl
and
aaa
push
sbbb
es
dec
and
mov
cmp
out
push
adc
addr16
addr16
fdivs
inc
jmp
and
jecxz
adc
lea
loopne
fisttpl
push
jg
test
add
cmc
pop
adc
push
xchg
mov
cltd
adc
frstor
inc
shlb
and
adc
xchg
cmp
sarl
and
dec
shrl
adcb
in
and
dec
ja
add
mov
roll
or
add
clc
and
xchg
outsb
and
jg
sbb
push
push
es
dec
adc
std
ret
lcall
inc
sub
push
ret
jnp
or
repnz
sub
scas
xchg
inc
dec
addb
lret
movsl
mov
mov
and
pop
inc
and
cltd
rclb
push
or
or
cltd
data16
push
and
sbb
sbb
lcall
mov
or
dec
popa
cmpsb
in
sub
mov
movsl
stos
add
lret
and
fs
pop
shlb
sub
jl
jb
add
jns
popa
loop
pop
jo
cmp
out
push
filds
mov
xchg
push
insb
sbb
xchg
iret
push
mov
aas
sub
ret
and
add
test
cmp
in
adc
fsubrs
mov
test
jb
jg
shlb
js
push
test
or
and
or
sbb
rclb
test
mov
nop
inc
mov
lds
rcrb
mov
add
push
mov
cmp
aas
dec
aam
sub
insb
dec
das
aam
pop
sbb
inc
inc
mov
and
aaa
push
push
cmp
stos
xchg
dec
mov
addr16
stos
cmp
les
and
push
sti
pop
push
push
lret
and
std
fsubl
jo
and
adc
xchg
inc
inc
inc
sbb
add
in
jge
dec
in
push
mov
jecxz
or
pop
xchg
iret
pop
jb
add
adc
pusha
mov
addb
xor
push
stos
push
lcall
adc
inc
add
test
mov
mov
repz
push
sbb
cmp
dec
fimuls
insb
xor
lret
sahf
mov
shll
cmp
ss
lock
cmp
mov
icebp
jl
cmpl
js
xchg
scas
jne
pushf
mov
or
loop
push
sub
xor
or
in
mov
cmp
lds
andl
xchg
jne
jl
mov
add
and
push
or
lcall
mov
mov
adc
mov
push
mov
sbb
pop
roll
data16
loope
jns
rorb
cwtl
and
popa
js
jae
xchg
adcl
mov
pop
xchg
loope
cmp
mov
fsubl
pushf
rolb
ds
dec
jge
fcmovnb
add
sbb
sarl
cmp
push
add
out
mov
or
xchg
add
push
jnp
decl
sub
ret
and
ret
adc
gs
push
nop
add
push
and
jns
push
addr16
xor
push
or
jp
sbbb
rolb
sub
jg
jl
shlb
or
daa
movsb
jge
add
or
into
sub
and
outsb
nop
cmp
push
or
insb
sub
repnz
add
lods
adc
or
add
pop
dec
or
sbb
loopne
bound
pop
sbb
mov
repnz
sbb
dec
cmpb
add
mov
insb
adc
mov
pop
mov
jle
shrl
aam
adc
sbb
test
dec
jnp
lcall
pop
pop
cmp
jne
and
push
or
lock
pop
mov
mov
in
aas
adcb
push
dec
and
xor
rclb
repnz
mov
cmp
or
cmp
inc
push
cmp
mov
dec
sub
rcll
enter
call
popa
push
pop
sbb
xchg
sti
lret
sbb
ret
fimuls
push
push
xor
cwtl
es
call
popf
inc
push
push
xor
push
or
lock
popa
push
cmp
loope
jnp
mov
add
mov
push
jae
xor
add
sub
add
sub
nop
dec
inc
pop
enter
inc
mov
xor
dec
xchg
push
imul
mov
popf
mov
cltd
mov
adc
addr16
pop
mov
xchg
lahf
inc
sub
xchg
addl
dec
sub
adc
or
adc
lcall
or
mov
mov
sub
in
outsb
orb
mov
push
cld
jmp
add
jae
xor
dec
popl
imul
add
pop
pusha
lods
and
pop
and
dec
push
or
push
test
mov
mov
stos
lret
push
pop
pushf
movsb
push
inc
stos
imul
xchg
dec
pop
cmpsb
add
xchg
dec
or
push
add
add
je
movsb
mov
movsb
jmp
and
xor
xor
xor
push
xor
rorl
inc
jmp
cs
cmp
sti
and
add
jae
mov
push
jb
cmpb
mov
add
movsl
popa
jno
mov
add
xlat
fidivs
sbb
lods
aam
jae
rorl
xchg
pop
int
mov
mov
adc
xor
rorb
scas
inc
loop
adc
inc
loop
mov
jg
les
cwtl
test
cmpsb
incl
or
mov
mov
mov
sbbb
fucomp
push
andl
sbb
les
or
mov
cmp
fwait
aam
les
pop
dec
push
push
and
jno
inc
ret
jg
or
add
jle
push
popa
inc
mov
shll
int
add
inc
int
jbe
mov
sbbl
mov
adc
dec
and
rclb
pop
fs
push
cmp
dec
sub
movsb
aas
sub
pop
sub
jp
addr16
pop
dec
adc
clc
scas
push
add
inc
enter
outsb
adc
cmp
pop
aam
mov
icebp
dec
sbb
push
jle
and
add
sbb
adc
push
xchg
adc
filds
stos
adc
out
adc
and
faddp
pop
add
dec
or
sub
cmp
in
push
jge
push
addb
mov
je
pop
pop
adc
inc
sub
mov
dec
xor
sbb
adc
enter
or
add
add
mov
insl
mov
add
push
dec
inc
daa
mov
shl
daa
add
mov
fcoml
std
cmp
push
push
lock
xor
vprotw
popf
pop
gs
cmc
sbb
int
lret
out
std
or
fcompl
addl
sub
mov
pop
adc
addr16
xor
negl
cmp
fsubrl
inc
test
sahf
mov
sub
popa
jge
mov
aad
inc
mov
stc
mov
mov
in
sub
cmpl
insl
pop
je
je
cmc
cmp
stos
mov
es
mov
inc
pop
mov
js
adc
mov
sub
repz
fiaddl
adc
inc
andl
and
in
notb
iret
stc
gs
or
insl
push
jp
inc
test
test
mov
add
mov
or
or
add
pusha
adc
sbb
clc
in
das
lcall
inc
jbe
push
or
inc
jl
dec
sbb
pop
aas
jno
push
adc
sub
push
pop
into
sub
jo
push
inc
push
into
sub
sub
movb
add
push
fs
dec
test
stos
jo
insb
mov
xor
inc
insl
xor
pop
or
sbbb
mov
inc
push
xchg
pusha
mov
and
in
push
decl
push
repnz
clc
les
mov
sbb
sahf
rcrb
jne
out
pop
ret
sbb
add
cmp
and
fnstcw
pop
aad
test
and
fstl
lea
icebp
xchg
loope
hlt
insb
push
or
inc
mov
push
cmp
jmp
cmp
cmp
push
dec
cs
movsl
mov
vorps
cltd
push
mov
popa
cmp
add
mov
mov
xchg
pop
pop
or
inc
call
fdiv
inc
dec
add
or
mov
je
mov
mov
out
loopne
insl
lret
sbb
mov
cmp
adc
push
movb
mov
inc
or
arpl
cmc
aad
inc
daa
cmp
adc
adc
add
ja
test
int3
pusha
imul
pop
mov
mov
rcrb
sbb
cmp
lret
fs
adc
adcb
out
dec
fcoms
pop
insl
cmp
adc
add
loop
xchg
icebp
adc
pusha
and
lock
cmp
add
rcrl
jb
and
fldt
pop
lcall
lods
test
jg
jmp
jno
cmpsl
push
and
js
inc
pop
roll
lds
sub
lahf
cmp
in
lahf
mov
sbb
jg
adc
sub
add
shll
leave
inc
mov
sbb
sub
or
cmpb
stos
in
movsb
pusha
pop
inc
insb
mov
inc
jb
push
push
pop
shrb
nop
jg
push
cs
outsb
fistl
clc
xor
xchg
in
pop
xor
ss
xor
jne
jle
adc
into
rcrl
push
sbb
push
addl
push
fs
add
inc
and
push
sbb
add
or
push
sub
inc
xchg
jg
mov
xor
mov
and
mov
hlt
xor
lds
fldl
aas
cwtl
aad
add
adcb
or
and
test
gs
adcb
adc
inc
cmp
add
mov
sub
xchg
and
push
arpl
leave
shrd
sub
lods
test
cld
push
and
push
movsb
sbb
push
jbe
ret
into
dec
pop
and
mov
nop
pop
test
inc
inc
add
push
lods
lret
hlt
or
shlb
lock
mov
int3
xchg
cs
rolb
add
lock
sub
inc
or
outsl
enter
aad
add
rorb
xchg
mov
xor
and
add
and
sub
mov
jecxz
inc
dec
sbb
fcom
pop
lahf
xchg
mov
jle
dec
xor
mov
imull
clc
out
add
xorl
cmpsl
sub
or
rcrb
xchg
xchg
int3
mov
sbbb
popa
push
sub
add
push
mov
add
push
xor
xor
push
pop
in
xchg
movsb
pop
jno
jns
cmpsl
xor
or
push
cmp
xor
jg
fs
and
and
sub
mov
push
sti
and
pop
pop
or
nop
cvtdq2ps
or
outsb
dec
inc
out
sub
add
dec
dec
sub
sbb
sarb
dec
xor
movsl
pop
dec
add
xor
sbb
lret
imul
xor
push
in
imul
jo
in
dec
push
pop
inc
sub
and
imul
sarl
cmp
or
push
std
idivl
arpl
and
mov
mov
or
xor
insb
mov
sub
dec
pop
dec
fiadds
sub
insl
loope
inc
jecxz
push
outsl
dec
aaa
add
je
mov
loopne
sub
shr
xor
jno
push
pop
shr
js
pop
jge
mov
mov
adc
ret
dec
pop
and
and
out
loopne
nop
xchg
pushf
in
xor
xor
xor
xor
mov
fmulp
add
loopne
inc
cs
in
cs
cs
in
lock
inc
cs
aam
xchg
mov
or
and
inc
negl
xor
sub
mov
adc
adc
out
jb
inc
cmp
inc
or
adc
iret
jno
jge
cmp
xchg
enter
jmp
pushf
outsl
ljmp
cmpsl
pusha
and
daa
ja
xchg
push
fcomps
push
int3
es
out
subb
stc
andl
push
pop
or
sub
push
dec
push
push
jne
rcl
out
inc
push
jb
jmp
inc
sbb
mov
adc
add
fisubrl
sub
cmp
or
xor
dec
aad
pop
mov
jp
es
test
adc
add
pop
sbb
jmp
or
or
jmp
xchg
xchg
test
or
and
aaa
or
cs
mov
mov
push
and
or
adc
sub
xor
fsubrl
inc
cmp
add
and
sbb
lock
inc
mov
push
or
jo
shr
xor
xlat
cmp
movsb
add
orl
xchg
xchg
andl
pop
mov
decb
adcb
cli
xor
cld
lahf
pop
testb
jne
movzwl
push
cltd
pop
jnp,pn
idiv
in
sarl
adc
adc
xor
outsb
mov
gs
and
xor
pop
std
mov
mov
or
adcb
add
sahf
add
jae
cmp
in
nop
adc
int3
cmp
sbb
ja
insb
mov
in
sti
neg
insl
mov
enter
insl
es
cltd
pop
idiv
cmp
iret
std
push
ja
push
je
dec
lds
lock
inc
adc
sbb
cmp
sub
inc
mov
pop
mov
fildl
add
lea
sbb
mov
fadd
fstpl
pop
fstp
inc
test
xor
sbb
int3
adc
inc
sbb
imul
and
or
in
subb
sub
push
sub
shr
pusha
aam
fs
fcomp
inc
add
fstpt
add
push
push
pop
or
push
cmp
push
js
lock
dec
lods
hlt
fsubrl
pop
pop
ds
enter
les
mov
mov
fists
jg
xchg
push
sbb
hlt
sbb
mov
mov
loope
xor
xor
inc
lock
mov
mov
inc
es
or
cmp
mov
fs
mov
push
addl
int3
insl
test
insb
push
lock
and
push
xchg
rorb
pop
or
xor
push
cmp
pop
or
sbb
repz
in
pusha
divb
cmp
sbb
rcr
scas
pop
inc
sbb
das
xchg
loop
mov
fsubs
rolb
dec
push
mov
add
clc
add
xor
outsl
jle
lock
xor
out
or
lods
outsb
sub
out
or
or
int
pop
add
jmp
pop
addr16
sbb
fildll
lock
jo
xchg
xchg
rcrb
push
loopne
incl
inc
cmp
jbe
mov
orb
incl
cmc
nop
mov
xorb
cmp
push
add
mov
jae
push
cld
dec
mov
xor
loope
fsubrp
test
and
cmp
xchg
pop
lea
sub
mov
fadds
fstpt
jno
push
fldl
ret
or
mov
mov
nop
adc
jnp
fstpt
dec
push
jo
push
add
call
iret
push
in
push
loopne
cmpsb
fsub
repz
pusha
rorl
andb
push
jmp
fiaddl
aaa
push
adc
ret
orl
sbbl
sbb
sbb
faddl
push
js
mov
loope
cmp
hlt
fisttpl
je
sub
or
or
or
push
inc
adc
inc
add
push
call
daa
mov
inc
popa
or
mov
pop
or
ficoms
xchg
cwtl
add
pop
clc
fldl
xor
gs
and
sbb
and
imul
in
daa
idiv
jne
add
add
rcrl
inc
pushf
push
mov
das
pop
inc
or
sti
daa
pop
jmp
loopne
adc
push
fmull
sub
adc
mov
mov
test
dec
dec
mov
push
enter
in
je
cmp
test
sbb
sbb
rcll
test
jo
outsl
pop
adc
bound
icebp
cmpsb
das
popf
ret
add
jmp
pop
rcrl
push
mov
and
cmpsl
push
xchg
cmpsb
push
push
je
mov
adc
lock
add
or
imul
sbb
sahf
pusha
das
jp
pushl
clc
nop
dec
xor
sti
lret
sub
ret
cmp
jo
push
mov
enter
sub
stos
dec
sub
pop
ret
data16
jmp
test
push
cwtl
sub
xchg
fmul
in
loope
dec
das
addb
in
mov
pop
adc
pop
add
nop
adc
stos
cltd
add
lcall
or
add
pop
adc
add
inc
xchg
outsb
mov
add
pop
aaa
cmp
lcall
inc
stos
int
into
cmp
sbb
and
push
adc
testb
cmp
nop
push
jmp
rcrl
outsb
and
xor
xor
repz
push
pop
insb
xchg
sbb
xchg
xor
adc
sbb
xchg
cmc
dec
and
cmp
or
ds
cmp
add
xor
add
push
xor
mov
fisubrl
test
mov
testl
and
sub
xor
jb
xor
push
xchg
loopne
xchg
inc
cmp
inc
mov
xor
xor
xor
outsb
mov
cmp
lea
imul
cli
xor
sbb
cmp
cmp
loopne
jle
or
push
pop
inc
movl
jge
cmpsb
lock
clc
push
inc
add
pop
adcb
push
mov
lock
jmp
adc
pop
scas
sub
notb
jp
xchg
mov
das
cmc
push
pusha
or
ucomiss
push
and
adc
sbb
add
daa
scas
xor
xchg
sub
aad
fnstenv
push
mov
outsb
jle
add
or
pop
mov
add
jle
fcomps
cmp
jb
mov
loop
jmp
xor
dec
dec
add
cmp
or
or
pusha
mov
in
push
jb
adc
jne
movsl
add
movsl
pop
mov
or
dec
sub
sbb
mov
and
and
popa
stos
jecxz
lcall
inc
ret
rorl
jmp
push
or
aaa
push
movzwl
or
mov
ss
pop
addr16
daa
add
mov
stos
xor
clc
int3
xor
ror
stos
dec
xchg
outsb
lock
ret
sub
sbb
out
adc
sbb
loop
pop
inc
movswl
sbb
sbbl
sbb
and
dec
ja
nop
push
sbb
adc
ret
adc
invd
add
adc
je
or
dec
xor
bound
dec
roll
and
pop
ret
out
dec
pop
cwtl
sahf
and
mov
daa
mov
pop
pop
mov
test
mov
push
add
inc
loop
cwtl
push
in
dec
clc
subb
pop
jle
clc
push
hlt
mov
lret
into
lcall
aad
cmpsb
cld
and
sbb
js
dec
call
xor
add
je,pt
push
sub
sub
in
xor
xor
cmp
xor
push
subb
push
pusha
fimuls
sbb
mov
dec
push
adc
shrb
jg
mov
insl
mov
push
mov
add
or
inc
pop
shrb
cli
inc
mov
add
jmp
aas
loope
jmp
add
je
mov
xor
das
pushl
or
adc
shrb
outsl
add
jp
aas
inc
je
int3
jbe
mov
inc
fadd
mov
lret
lods
ret
mov
push
inc
or
je
pop
addl
push
mov
adcl
js
mov
orl
push
inc
add
test
mov
push
jl
mov
pusha
mov
dec
mov
mov
pop
movsb
imul
imul
and
inc
add
inc
lea
lret
sub
mov
xchg
xchg
mov
push
pop
mov
mov
cmp
cmp
or
sub
add
pop
cltd
jbe
add
fwait
sub
fsts
mov
jbe
push
inc
jl
jns
xorb
adc
lret
push
iret
push
lret
mov
sbb
sub
xor
in
sbb
dec
sbb
jl
cmp
mov
je
out
js
jne
push
fldcw
inc
jp
pusha
xlat
in
dec
jne
jmp
test
sub
xor
pusha
pop
cmp
fstpt
push
into
xor
adc
add
test
nop
dec
cli
mov
mov
push
mov
or
adc
push
mov
xor
add
push
and
cmp
xbegin
and
hlt
xor
and
mov
fidivl
mov
xchg
movsl
xor
clc
jmp
mov
nop
icebp
stos
or
xchg
xor
and
xor
pop
adc
or
aam
adc
pushf
and
xor
jl
cmp
adc
push
cmp
jle
push
cli
les
outsw
adc
sbb
sub
cmpsb
leave
push
jns
test
nop
push
add
adc
andl
xorl
fs
call
loope
incl
sbb
jbe
dec
adc
inc
mov
es
inc
or
dec
or
jnp
scas
sub
sub
sub
or
mov
scas
push
loopne
or
out
and
pop
add
xor
mov
sbb
and
sbb
shlb
lea
fs
sbb
sarb
es
ss
shl
dec
or
mov
push
pop
jbe
outsl
xor
push
fisubrs
jbe
lret
inc
xchg
pop
mov
jnp
insb
mov
push
fisttpll
idivb
mov
pop
sbb
xchg
pop
xorb
mov
call
jl
pop
cld
inc
jecxz
add
add
push
and
sarb
push
push
ss
pop
sbb
and
adc
addb
rol
cmp
dec
in
push
cmpsb
adc
sub
xchg
cmp
xchg
add
sarb
insb
mov
mov
push
push
shlb
add
adc
or
mov
inc
repz
push
xchg
inc
adc
push
mov
lea
adc
mov
test
add
test
js
mov
cwtl
icebp
aam
pop
pop
sbb
fdivr
adc
pop
push
imul
jo
sbb
lock
push
push
mov
enter
and
mov
pusha
repnz
inc
mov
sbb
add
pop
mov
dec
jmp
bound
jne
dec
stos
xchg
add
push
cmp
sub
sbbb
mov
clc
je
cld
and
sub
cmp
mov
push
dec
inc
movsb
mulb
pop
jge
loop
sub
dec
jecxz
outsl
popf
inc
push
xor
lods
cli
imulb
mov
dec
cmp
inc
popa
mov
pop
jne
add
jo
sub
std
adc
mov
jo
adc
add
popa
pop
sub
pop
les
dec
aad
or
adc
jg
jnp
or
adc
iret
dec
and
js
inc
jmp
leave
push
inc
and
aam
push
cmpb
mov
loopne
push
icebp
sbb
push
je
dec
mov
xlat
mov
and
call
cmp
or
xchg
lcall
leave
js
out
add
push
imul
into
jnp
mov
jo
inc
mov
and
xchg
and
pop
sub
mov
xchg
jp
jbe
push
push
xor
test
push
sub
cmp
push
test
fidivs
mov
je
mov
push
or
push
scas
je
jmp
sub
rol
xchg
push
sbb
stos
enter
adc
adc
mov
addr16
out
popa
xchg
sbb
cmp
sub
ret
lret
mov
loopne
faddl
mov
sbb
jnp
adc
std
pop
add
popf
enter
cmp
cmpb
add
add
push
dec
cmp
dec
xor
insb
or
cmp
lock
push
iret
dec
push
popa
lods
push
ljmp
or
cmp
and
or
pop
clc
mov
adc
adc
fisttpll
inc
jge
imul
adc
sbb
push
and
outsb
and
sbb
or
pop
push
add
add
jl
pop
cld
pop
and
gs
in
inc
loop
mov
xor
mov
pop
and
fnstsw
ja
add
orb
xchg
cmp
adc
or
push
aas
cmc
or
cwtl
lock
and
mov
jne
push
sub
jbe
mov
fsubrs
es
sbb
mov
jno
pop
xor
inc
incb
inc
rorb
mov
or
xchg
lahf
jle
inc
mov
add
xor
and
pop
mov
adc
xor
adc
cli
sbb
cmpsb
sbb
jmp
loopne
sbb
cwtl
in
pop
rorb
rolb
testl
aad
push
sbb
lcall
push
mov
es
test
nop
jne,pn
test
fcmovne
sbb
add
push
in
jmp
push
dec
sbbl
fdivrs
rep
xchg
cmp
add
cmp
shr
add
adc
and
mov
loopnew
xchg
sub
mov
leave
push
lea
xor
sbb
cwtl
rorb
cmp
jbe
jae
pushf
pop
cmp
arpl
in
sbb
cmp
aad
inc
ret
cmp
push
inc
pushf
addr16
sbb
lds
xchg
divb
adc
addr16
push
call
daa
call
pop
stos
add
jns
push
sbb
pop
add
sub
sbb
add
adc
xchg
or
push
pop
addr16
add
mov
mov
sti
pop
add
cbtw
ljmp
hlt
pop
add
test
je
xchg
push
inc
movsb
xor
adc
movl
jl
lods
fnstcw
sbb
or
pop
jne
or
mov
add
js
add
jmp
daa
add
lret
hlt
add
inc
sbb
adc
movb
dec
test
movsb
lahf
icebp
test
or
movsb
dec
arpl
insl
enter
test
xlat
popa
add
dec
push
inc
add
jg
je
daa
imul
scas
and
gs
add
cld
pop
lret
adc
sbb
push
jne
or
call
pop
bound
insb
and
adc
adc
sub
jne
fmuls
cmp
sub
movsl
mov
add
clc
cld
lea
push
mov
hlt
mov
movsb
in
jle
cld
andl
clc
data16
dec
mov
les
or
jnp
inc
hlt
dec
mov
add
fisubrl
dec
lods
jne
dec
jle
or
xlat
push
xor
inc
sti
test
pop
mov
icebp
push
in
cs
sahf
ss
fwait
adcb
repz
or
data16
sub
adc
or
add
xchg
push
test
cmpsl
addl
pop
mov
bound
sub
push
push
fdivs
into
push
mov
stos
push
push
add
jb
hlt
jne
aad
loop
xchg
inc
pop
or
cli
ret
pop
je
and
jo
jno
add
xor
push
insb
mov
mov
mov
sbb
pop
push
adc
das
xor
adc
sbb
push
call
lea
push
cli
push
inc
mov
sbb
clc
sub
push
clc
ss
les
add
push
or
xor
add
or
lahf
add
push
adc
cmp
sub
dec
inc
inc
sbb
or
mov
popa
sub
jbe
push
je
adc
shll
ja
jnp
js
es
lods
add
or
mov
inc
xor
sbb
outsb
insb
pusha
and
xchg
jmp
and
ds
mov
dec
jo
adc
ret
add
add
dec
jb
sbb
mov
sub
cmp
and
add
roll
and
repz
int
ss
sbb
sub
cmp
sahf
addl
lock
pop
andb
adc
push
loopne
push
adc
push
adc
rolb
test
mov
pop
inc
in
mov
test
cltd
ret
dec
mov
fisubl
mov
dec
or
cmp
or
clc
rclb
mov
das
fs
cltd
sarl
pop
xchg
add
push
aad
rclb
jg
jge
pushl
cmp
imul
rcrb
imul
movsb
add
cmpb
aas
pusha
jo
or
into
adc
jecxz
add
mov
call
cmp
mov
andl
pusha
add
aam
loope
notl
adc
adc
shrl
pop
lds
adc
outsb
add
pushf
adc
imul
enter
pop
iret
adc
inc
adc
sbb
icebp
mull
sbb
lea
testb
push
or
inc
push
dec
shlb
or
or
add
clc
sub
inc
imul
shl
les
test
dec
cld
and
loop
adc
jb
mov
subl
cmp
adc
lods
add
fldt
cmp
pop
and
adc
sbb
and
xor
in
fdivl
mov
push
mov
sbb
orb
push
ficompl
xchg
sub
ret
cmp
cmp
inc
fdivrl
jne
pop
jp
lea
jae
fmull
mov
pop
enter
pop
ss
add
push
sub
jecxz
sbb
insb
pop
add
fmuls
js
movsb
bsf
lcall
incl
andb
sub
addl
loopne
sahf
mov
push
insl
cmpsb
cmp
movsb
or
push
pop
pusha
popa
lahf
adcb
loop
push
adc
sbb
xor
shlb
inc
add
data16
adc
orl
mov
and
lret
loope
out
adc
or
jb
test
and
and
mov
mov
loop
aaa
push
das
jb
xor
std
dec
dec
lret
mov
xchg
leave
xor
adc
jp
and
and
xor
loop
ror
xlat
mov
lea
sub
repz
loopne
xchg
mov
cmp
fcompl
dec
call
movsl
mov
inc
add
jl
mov
dec
and
ret
pop
and
ret
lods
rcrl
ja
mov
aam
add
rcrl
or
cmp
nop
arpl
push
pusha
add
call
icebp
inc
dec
and
add
xor
add
add
jecxz
or
adc
push
insb
add
jnp
adc
in
mov
lea
pop
dec
mov
sahf
jno
out
mov
fsub
lea
ja
jle
movsl
sbb
js
aas
inc
pusha
pop
pop
xor
mov
cmpsb
test
pop
nop
adc
scas
push
push
mov
lods
and
dec
cmp
sub
cli
insb
dec
or
nop
pop
pop
sbb
lods
xor
dec
leave
ret
mov
mov
add
nop
dec
sbb
sub
out
cwtl
mov
pop
ret
inc
dec
or
mov
inc
sub
adc
sbb
test
aad
mov
add
xor
add
push
add
in
int3
scas
pop
aam
pusha
loopne
pop
dec
add
lahf
lock
dec
add
dec
adcb
popa
adc
and
pminub
and
fsub
add
adc
inc
shll
addr16
cmp
aaa
add
js
shll
ja
jo
leave
push
xchg
int
mov
and
push
scas
jnp
mov
adc
cmp
cmpsl
enter
aas
iret
in
sarb
sahf
test
sahf
out
adc
adc
xor
dec
fdivs
push
sub
mov
shlb
inc
pop
dec
cli
or
inc
or
shrl
lds
mov
lahf
mov
sbb
push
insl
mov
or
inc
scas
pusha
lock
aas
aas
pop
jecxz
fs
sub
sbb
sbb
and
xlat
inc
cli
push
push
add
scas
adc
mov
inc
stc
mov
xor
push
dec
push
aam
out
xor
mov
sbb
dec
mov
or
loop
daa
gs
push
or
adc
ret
xchg
pop
push
faddl
dec
pop
and
loopne
cmp
js
cmp
sub
sbb
inc
mov
push
sahf
pop
mov
dec
out
xchg
sub
sub
and
bound
in
push
fcmovnb
loopne
push
and
dec
mov
cmp
mov
fmuls
jl
sub
jl
scas
push
add
fs
aas
add
sti
adc
xor
scas
adc
cmp
inc
pop
dec
stos
repnz
fnsave
sbb
mov
mov
jae
in
or
add
add
dec
cmp
in
jne
xor
add
shrb
pop
or
mov
enter
addb
xor
or
jne
push
and
lock
xchg
repnz
pusha
and
mov
dec
jno
je
lea
lea
or
clc
dec
loope
faddl
ret
sbb
sub
jl
inc
js
fs
paddsb
mov
jmp
imul
ljmp
xchg
js
shr
movsl
hlt
jo
inc
pop
pop
fisubs
inc
cmp
push
add
add
icebp
mov
sbb
out
cmp
and
mov
jmp
je
lea
push
lea
outsl
jnp
pusha
sub
jns
sub
mov
and
pusha
hlt
jo
enter
cmp
test
vmovlps
mov
inc
pop
adc
push
add
cwtl
push
push
sub
push
nop
sahf
in
mov
and
sub
mov
and
push
mov
and
sub
jp
arpl
push
jo
inc
stos
and
jne
or
dec
mov
pop
mov
pop
add
xchg
aaa
pushl
inc
lret
jae
pop
cs
int3
or
xor
mov
cs
pop
sub
or
push
mov
aaa
sbb
nop
sub
xchg
orb
sub
jno
or
fcomps
loop
xor
negb
sbb
adc
pop
popa
xchg
mov
mov
sub
inc
xchg
ret
ret
es
jge
jne
pushf
fimuls
adc
outsb
jl
sub
int
push
dec
pop
sbb
push
pop
call
inc
repnz
mov
xlat
insw
lock
cmp
cld
xor
add
and
sbb
push
cltd
lods
adc
ja
cld
sti
loopne
add
xor
loope
push
loopne
sbb
mov
push
pop
test
push
pop
adc
add
lcall
int3
xchg
xor
mull
movl
add
mov
cmovae
xor
mov
push
cli
js
cwtl
mov
add
cld
stos
icebp
aaa
mov
nop
xchg
cmc
in
out
add
adc
cwtl
fiadds
add
xorl
outsl
mov
pushf
cmp
inc
mov
sbb
aas
sbb
and
mov
inc
push
movsb
push
mov
add
sbb
jge
mov
adc
les
test
rcl
mov
lods
rcrb
in
enter
pop
jnp
iret
jo
rorb
pusha
aam
fiaddl
adc
outsb
jecxz
mov
inc
pop
or
mov
xchg
mov
dec
loopne
loopne
or
dec
add
sbb
pop
sbb
or
and
inc
loope
push
xor
loopne
cs
fstpt
mov
jle
testb
je
es
lds
or
mov
mov
arpl
and
or
pop
and
ret
call
add
push
cli
push
push
adc
lcall
addr16
pop
push
jbe
je
mov
mov
stos
jb
insb
mov
push
lock
push
in
xchg
jb
jmp
push
inc
nop
push
push
cmp
aam
cld
sbb
pop
scas
sbb
arpl
or
imull
nop
jo
ss
sbb
xchg
in
shlb
jns
ficompl
xor
inc
or
shrb
mov
adc
push
add
movb
lock
in
les
lds
icebp
or
rcll
cli
add
in
lahf
adc
notb
cwtl
mov
mov
and
lock
in
cs
aam
sbb
cs
pusha
push
or
pushf
mov
inc
adc
daa
js
sbb
arpl
sub
push
cs
rclb
in
call
pop
call
add
jns
push
and
testb
test
iret
jne
rcll
and
mov
mov
cmp
fucom
mov
outsb
sbb
pop
in
inc
scas
sti
push
call
rolb
ffreep
or
stos
xchg
aam
sub
cmp
or
xchg
lods
cmp
fcmovnbe
adc
out
and
add
cmp
push
sub
and
mov
jl
test
mov
ret
and
add
test
and
push
loopne
out
and
rorb
test
add
inc
lock
data16
xlat
andl
pop
jle
aaa
push
sbb
pop
cmpsb
mov
push
or
lock
inc
clc
xchg
addb
add
xlat
inc
mov
cld
es
and
scas
cld
push
hlt
gs
mov
lock
dec
xchg
leave
sbb
pop
pop
dec
mov
mov
fnstenv
sbb
sub
jge
push
lds
insb
aam
jmp
hlt
rcl
or
sbb
cmp
adc
xor
negb
mov
test
repz
in
enter
or
push
inc
or
mov
cld
sub
add
cmp
sbb
mov
mov
or
je
dec
jnp
inc
movzwl
jb
jmp
fcomip
sahf
notb
lret
pop
and
lcall
cmp
in
clc
call
jl
pop
cs
ja
cmp
jo
push
dec
dec
cmpsb
popa
jnp
mov
test
adc
and
popa
mov
xor
daa
lahf
inc
ja
push
aaa
lock
adcl
mov
push
adc
push
and
mov
mov
mov
lock
mov
mov
mov
dec
imul
jmp
int
int3
cmp
pop
and
mov
pop
jbe
jo
pop
clc
xchg
add
add
xor
incb
inc
outsb
or
pusha
ljmp
mov
and
cmp
lahf
insl
shrb
in
andl
or
push
lret
jmp
sub
sub
dec
jl
pop
pop
shl
inc
jmp
dec
xchg
jno
roll
cmc
inc
inc
dec
jae
outsb
adc
pop
mov
pop
ja,pn
mov
pusha
cmpsl
adc
sbb
or
push
and
or
push
cmp
into
and
and
and
push
lods
or
lock
divb
mov
cld
nop
data16
cmpl
xor
daa
mov
dec
scas
cmp
or
pusha
and
jnp
xchg
mov
xlat
fwait
pop
mov
xchg
cli
mov
push
sub
clc
enter
adc
push
in
pushf
or
mov
enter
in
rolb
decb
jns
add
mov
jne
push
sub
cmpsb
jo
or
movsl
push
mov
adc
into
fistl
into
adc
bound
pop
and
out
mov
inc
push
pop
mov
mov
push
imul
jno
mov
adc
push
cmp
inc
add
xor
push
stos
stos
push
dec
sbb
push
addl
xor
loopne
add
push
movsb
lock
pop
pop
ret
push
adcb
in
add
adc
cmp
test
faddl
push
pop
ret
push
mov
notl
jnp
test
add
ret
push
mov
pop
sbb
pop
pushf
and
sahf
mov
mov
mov
loop
add
test
fsubl
jo
jmp
push
and
lock
outsb
push
push
push
js,pn
in
faddl
inc
dec
sbb
fadds
loopne
and
cs
daa
cmp
sahf
fiadds
push
push
sbb
xchg
fs
js
cmpb
dec
out
xorb
pop
mov
xchg
jecxz
jl
adc
adc
pop
adc
xchg
iret
lret
add
pop
mov
movl
rcll
jo
sub
cwtl
jne
ja
pop
in
sbb
and
or
or
mov
leave
test
nop
test
cmp
xor
xchg
push
das
arpl
sub
jle
fidivrl
or
mull
fcomps
clc
pusha
insb
popa
and
add
rorb
add
jg
add
push
and
push
movsb
push
shrl
xor
or
cmp
fwait
and
int3
shll
stc
or
and
in
enter
or
ffree
xlat
fsubrs
bnd
push
das
or
decl
and
jbe
pop
or
fsts
insb
xchg
int3
sub
call
pop
loope
fucomi
push
add
mov
inc
ja
fstps
in
xor
in
and
push
jo
out
ljmp
icebp
pushf
adc
adc
negb
inc
lcall
cltd
nop
mov
inc
pop
lcall
shll
pop
sub
adc
in
cmpb
loop
orb
cmp
jo
call
or
inc
rorb
push
ret
inc
or
inc
add
inc
or
add
cmp
and
addr16
push
push
push
stos
gs
and
insb
lea
xchg
and
sti
pusha
popa
lods
cmpsb
je
adc
pop
enter
insl
outsb
or
or
inc
js
dec
xchg
jne
push
loopne,pn
cwtl
pop
cmp
jmp
jbe
pop
adc
sub
xchg
xor
sub
push
inc
add
not
sub
nop
or
dec
push
jbe
xchg
xchg
loopne
sbb
rorb
add
insb
push
insb
lret
add
push
test
shrl
push
clc
jle
subl
and
dec
xchg
aam
popa
ljmp
jge
ret
jmp
push
pop
rcr
pusha
aaa
push
lods
and
mov
dec
lret
push
aam
mov
sub
sbb
aad
ss
xor
cltd
aad
divl
mov
jmp
push
sbb
or
inc
mov
lcall
test
out
adc
rcl
mov
or
sbbb
roll
ret
arpl
mov
insb
push
or
push
push
push
jge
xchg
loopne
pop
sub
cmpsl
or
and
jg
inc
mov
add
stos
jnp
das
daa
pop
cmpsb
and
stos
add
and
cmp
popf
mov
addb
inc
xor
xlat
outsl
dec
movsb
mov
xor
loopne
pop
testb
push
add
popa
lret
fistpll
sbb
jae
fstpt
cmp
imul
sti
or
lret
mov
push
add
in
ficoms
bound
and
pop
das
stos
das
add
test
sub
push
jmp
mov
pop
lock
iret
cltd
fcomp
and
cmp
inc
adc
icebp
cli
cmp
jne
jbe
or
es
mov
imul
scas
push
or
pushf
pop
dec
pop
jo
push
mov
mov
jne
js
and
pop
add
add
sub
pop
loop
push
adc
push
flds
inc
inc
test
mov
dec
or
pop
fwait
inc
or
fsubr
pop
or
dec
inc
dec
pop
icebp
inc
xor
mov
cmp
cli
sbb
sbb
testl
out
cmp
mov
pop
sbb
pushf
pop
sub
or
nop
push
ja
loopne
scas
lea
pop
ret
inc
mov
test
push
jmp
mov
jo
push
out
pop
sbb
sbb
jae
testl
jno
aad
pop
push
adc
inc
jcxz
adc
mov
pusha
or
push
pusha
add
sarb
xchg
push
push
mov
push
test
addl
insb
sbb
push
cmpl
mov
xchg
in
dec
shrb
sub
jbe
sbb
daa
inc
sub
inc
xchg
adcb
and
dec
push
xchg
lods
repnz
xor
xor
push
pop
sub
mov
shrb
or
jmp
inc
je
add
adc
rolb
and
lcall
jno
cs
rcr
push
mov
xor
dec
clc
adc
fisttpl
mov
fstps
dec
jmp
sbb
push
adc
adc
clc
fstps
inc
inc
imul
sub
push
ficomps
inc
mov
adc
loopne
les
mov
xchg
or
mov
aam
lods
adc
xor
repnz
fs
push
mov
seta
cld
test
adc
mov
pusha
add
add
aad
call
std
add
pop
outsb
imul
xchg
je
sub
ljmp
adc
rcll
ret
jle
jbe
cltd
js
cmp
lock
jmp
in
or
mov
sub
iret
lods
mov
add
mov
add
or
add
dec
rorl
test
pop
loopne
imul
rolb
mov
nop
bound
fsubl
xor
push
push
inc
xchg
es
cwtl
push
in
mov
movsb
xchg
aam
sbb
stos
icebp
mov
sbb
pop
push
or
stos
xchg
xchg
sbb
and
sbb
sbb
push
sub
mov
aam
aam
fadd
mov
lret
dec
and
jl
movl
icebp
push
mov
fcomps
sbb
cmp
or
and
lods
addb
loopne
daa
dec
shll
in
hlt
clc
cld
hlt
fcoml
add
mov
inc
fsts
xor
jno
ljmp
mov
or
lock
adc
pop
pop
adc
loopne
sbb
sbb
sbb
bound
xchg
leave
sub
lret
sub
enter
push
push
and
sahf
push
mov
adc
pop
xor
cli
mov
jle
mov
push
xor
ret
lcall
sub
movl
push
jge
aaa
pop
loop
scas
mov
enter
mov
adc
mov
mov
xchg
rcrb
aaa
add
push
dec
sbbl
add
push
movsb
xor
int
scas
add
lahf
push
mov
loope
inc
adcb
js
ud0
mov
mov
jle
jmp
mov
mov
pop
adc
add
inc
inc
fimuls
sbb
inc
inc
xchg
rclb
cmp
jl
push
cmp
cmp
jnp
data16
push
inc
inc
pop
les
pop
sub
je
movsb
subl
jo
pop
jbe
cmp
push
inc
pcmpeqd
mov
cltd
adc
push
dec
dec
pop
pop
cmp
sbb
test
ljmp
sub
cmp
jl
idivb
loope
jge
add
xchg
pop
push
sbb
adc
jmp
and
mov
add
pop
xchg
mov
mov
push
loope
adc
cltd
jbe
cmp
and
nop
enter
dec
lock
addl
sub
xchg
mov
push
das
sbb
in
add
pop
push
push
rclb
cmpsb
lock
lods
add
sub
jno
mov
jp
pushl
xchg
rolb
add
jmp
mov
sub
and
in
pop
push
arpl
jno
mov
loop
mov
dec
test
loope
add
mov
xor
or
frstor
cmpl
adc
es
xchg
pop
fstps
cwtl
jl
aad
leave
mov
sbb
xor
mov
mov
push
add
lahf
popa
cli
or
mov
add
cmp
popa
mov
jmp
sbb
pop
adc
arpl
fistps
inc
loope
jne
mov
sarb
aas
in
jmp
clc
mov
xacquire
sbb
push
fmuls
xchg
mov
sbb
cmp
push
mull
int3
fcoms
inc
rorb
ss
inc
aam
int3
pop
adc
cmp
aam
add
pop
dec
test
cmc
fs
fldt
pop
adc
lcall
sahf
mov
mov
cmp
rclb
sbb
mov
sub
loopne
outsb
adc
xor
aad
sub
add
jnp
xor
sub
je
pop
shrb
push
sub
hlt
jno
add
orl
and
push
inc
mov
sub
popa
inc
sarb
jl
push
add
xor
and
jnp
ss
repz
ret
pop
push
mov
pop
dec
in
dec
out
mov
or
inc
inc
push
mov
iret
nop
add
cmp
xchg
clc
xchg
clc
cld
subb
add
add
bound
repnz
lcall
or
sub
or
test
sbb
xchg
je
xor
adc
and
push
xor
xorb
loopne
mov
leave
inc
jle
pop
xor
cmpsb
push
pop
or
shlb
add
add
les
aad
fdivrs
je
imul
jbe
pop
loope
outsl
jle
jno
bnd
pop
sub
je
pop
shll
or
adc
inc
mov
push
pushl
xchg
ja
sbb
loop
daa
xchg
mov
pushf
push
in
popf
push
adcb
mov
push
mov
lods
adc
add
lock
sbb
pop
sub
div
fcoml
in
or
dec
movsb
clc
andl
cmp
jg
sbbl
lea
outsb
pop
xchg
lods
mov
sub
inc
jbe
or
sbbb
pusha
mov
scas
das
xorl
lcall
mov
push
dec
movsb
sbb
adc
int
mov
adc
push
jge,pn
jb
nop
loopne
imul
enter
addl
push
jl
add
add
int3
mov
mov
push
pop
jmp
push
jnp
cmpsb
push
mov
enter
pop
or
adc
pop
test
ds
sub
in
cwtl
ja
mov
push
push
add
int
inc
sub
sbbb
shrb
lods
je
xor
dec
adc
and
lods
xor
pusha
sub
lods
push
fistps
xchg
pop
test
xchg
sbb
dec
call
or
adc
inc
push
sub
dec
call
and
xlat
cwtl
inc
mov
lret
jno
cmp
mov
jle
ret
add
mov
es
test
push
add
fadds
arpl
pop
or
xchg
push
hlt
aad
loope
movsl
or
jp
sbb
push
fnstcw
inc
or
out
push
or
test
push
popf
out
inc
test
dec
sub
xchg
mov
ljmp
mov
xchg
mov
pop
lods
stos
int3
and
not
sbb
stc
xor
jmp
pop
inc
movsb
jecxz
inc
enter
aas
add
adc
lcall
ss
fdivrs
in
adc
xor
and
and
push
inc
outsb
lcall
lcall
fdivs
loope
or
pop
push
or
adc
clc
fbld
pusha
sbb
cmpl
xchg
inc
adc
or
gs
outsb
test
mov
or
in
daa
jnp
mov
mov
int3
adc
push
push
lret
test
push
shll
into
xchg
nop
or
add
add
inc
sbb
pop
mov
imul
xchg
jne
cmp
aas
jmp
mov
lret
jb
push
push
xchg
jecxz
or
fistps
pop
cmp
pcmpgtw
ss
and
inc
ja
inc
or
xchg
out
adc
je
xorb
into
aam
lret
int
add
rclb
mov
push
aam
jge
cmpsl
scas
dec
clc
mov
js
add
fsubr
int3
inc
jo
movsl
lret
lods
addl
xor
fsts
add
loop
adc
jp
or
or
sub
subb
xchg
js
iret
pop
scas
mov
xchg
iret
add
mov
ret
and
push
push
jae
mov
mov
outsb
add
or
push
in
dec
xor
xor
xchg
cli
aad
dec
cmpl
or
jns
adc
mov
xor
int3
sbb
inc
add
cmp
lods
andl
push
inc
or
adc
jnp
ret
pop
add
and
mov
mov
mov
push
add
ficoml
pop
inc
xor
outsl
sub
mov
cmp
scas
incl
push
pop
and
ucomiss
push
sub
jecxz
adc
jle
add
data16
jg
add
mov
gs
andb
jge
xchg
xor
dec
popf
ds
xchg
cs
push
adc
rolb
xor
xchg
call
dec
pop
jne
mov
dec
mov
cmc
rolb
push
adc
nop
sub
pushf
testb
sub
mov
push
xor
fiadds
sbb
sbb
mov
push
sbb
add
pop
and
push
xor
not
mov
ds
adc
sub
outsb
sbb
cmp
jo
test
sbb
xor
or
sub
in
sbb
add
or
insl
movsb
cmc
adc
cmpsb
in
add
dec
sbb
or
add
sub
mov
gs
in
push
lret
movb
mov
out
xor
mov
push
sbb
rolb
test
popa
dec
js
shlb
repz
pop
sbb
repz
push
jne
mov
push
cmc
push
rcl
push
or
jge
adc
cmp
addb
pop
dec
fidivs
lock
mov
adc
xchg
add
orl
pop
inc
sgdtl
cld
or
repz
aaa
lret
aam
neg
pop
sbb
inc
xor
sub
dec
jp
adc
adc
adc
inc
stos
andl
incl
je
add
sahf
mov
mov
jl
or
clc
jle
jmp
mov
sbb
hlt
shr
jp
dec
cli
add
push
in
rolb
aad
inc
and
fisttpl
mov
push
xchg
mov
mov
add
adc
cmp
push
push
inc
jbe
pop
inc
dec
jae
sahf
jne
ljmp
sub
dec
outsb
sbb
dec
push
mov
add
push
xchg
jle
lock
adc
cmp
jb
xor
or
mov
mov
xchg
je
xor
out
add
fcoms
pop
je
test
ret
add
das
xchg
loopne
daa
popa
je
addl
and
popa
enter
ljmp
sub
adc
bound
pop
test
inc
push
jg
jnp
fcmovnu
xchg
mov
sub
je
or
jle
push
xchg
mov
dec
imul
or
jbe
inc
mov
push
ds
test
stos
es
mov
ficoml
add
dec
mov
mov
sbb
test
les
aaa
or
mov
push
jl
mov
add
or
inc
add
pop
xor
dec
or
add
andb
mov
sti
outsb
fnstsw
sbb
inc
andl
adc
xchg
xorb
cli
decl
and
inc
cmp
push
mov
lods
jmp
test
cwtl
cld
inc
hlt
shll
push
mov
ret
cmp
push
cmp
dec
sub
nop
sbb
or
adc
adc
lock
and
mov
jg
xchg
jae
sub
lods
bound
inc
bndstx
lret
insb
xchg
push
mov
cmp
adc
lret
inc
push
pop
push
or
ret
ds
dec
push
cmp
dec
pusha
call
pop
lea
push
push
push
sub
push
cmp
call
xchg
cmp
pop
ret
dec
inc
jbe
inc
lock
adc
jns
les
add
xlat
ja
jecxz
icebp
push
dec
push
les
cli
or
jge
add
dec
movsb
mov
out
fisubrl
xchg
jecxz
clc
bound
sbb
adc
xorl
mov
into
push
test
sub
ja
or
dec
dec
push
rorb
xchg
lret
roll
inc
loope
addl
into
fbld
nop
dec
xor
or
mov
loopne
out
cs
sbb
sub
xchg
jl
incb
sub
add
popf
inc
or
xor
insb
mov
in
daa
pop
xor
push
xor
repz
addr16
push
ret
stos
xor
bound
pop
xchg
pop
lods
mov
es
dec
xor
or
add
je
or
mov
mov
pushf
adc
push
fstps
bound
sub
or
jne
ficoml
or
jb
in
lret
mov
or
insb
fnstsw
fs
jo
or
lea
mov
rolb
adc
and
jmp
mov
mov
add
fstps
push
mov
daa
mov
lcall
daa
dec
nop
pop
shll
dec
cmp
cmp
rcrb
add
add
rclb
or
jl
decl
pop
add
xor
dec
mov
imul
mov
je
aas
add
aaa
pop
fnstenv
addb
and
inc
outsb
push
inc
and
or
add
nop
add
loopne
aad
jge
sbb
sbb
mov
test
into
jne
movswl
sub
push
in
es
movsb
imul
leave
and
dec
xor
sub
add
push
outsb
sub
js
xchg
pop
fldl
fsub
jo
add
cmp
pop
int3
inc
data16
add
negb
push
push
push
push
sub
inc
int3
es
fs
pop
and
adc
sbb
add
jecxz
adc
psubb
sbb
xor
or
mov
cmpsb
push
adc
je
cmc
popf
add
xchg
inc
mov
pop
jb
mov
aad
ljmp
inc
enter
fildll
mov
mov
dec
test
dec
sbb
leave
jbe
fld
xchg
fstp
jmp
cmpb
insl
push
into
and
loopne
out
mov
jl
ud0
xchg
or
mov
and
daa
rolb
rcrb
xor
pop
dec
loopne
test
ret
mov
inc
mov
hlt
push
jns
roll
roll
add
ror
xor
xchg
inc
movsb
add
les
orl
add
leave
nop
leave
cmp
dec
sub
xor
push
cmovs
push
push
or
jle
ret
call
cs
mov
xor
push
aam
add
xor
jo
ret
add
fadds
push
cli
sbbb
pop
pop
pop
dec
xorl
inc
push
xor
mov
pop
inc
xor
cmp
test
add
fmull
pop
mov
iret
inc
dec
sub
ja
jmp
xor
and
mov
mov
ds
daa
xor
push
xor
jb
dec
andl
out
add
mov
pusha
mov
xchg
adc
enter
adc
add
and
or
dec
jno
sbb
scas
mov
ret
addr16
es
lea
cmpsl
sub
mov
les
dec
sbb
rcrb
and
sar
sbb
adc
add
inc
add
adc
xor
mov
sbb
loopne
xchg
fwait
sub
jo
sbb
bound
adc
cmp
imul
call
push
jne
pusha
pop
out
mov
lea
lahf
jno
call
movsb
sbb
in
or
or
adcb
mov
or
mov
jo
xchg
test
rolb
jp
fisubs
icebp
add
ja
data16
dec
push
loopne
xor
adc
aad
push
fstpt
xchg
jl
xchg
or
ret
leave
lock
orb
mov
adc
adc
adc
adc
mov
cmp
cmpsl
inc
xchg
out
cmp
xor
xchg
inc
and
add
sub
or
loope
mov
les
int3
add
imul
in
sbb
xlat
lcall
cmp
rorb
subb
daa
xor
adc
popa
inc
imul
ja
sbb
xchg
mov
test
add
dec
repz
fsubs
fcoml
adc
add
testb
xchg
mov
mov
inc
mov
mov
xchg
dec
push
into
sub
mov
xor
and
xchg
sbb
adc
sub
cmc
add
lcall
mov
data16
adc
aam
cltd
imul
jle
mov
mov
mov
pop
and
lret
mov
push
fisubs
rcrb
mov
movsl
movsl
mov
fsubr
mov
cmp
and
add
mov
imul
pop
adc
jb
push
int3
and
sbb
push
sbb
daa
stos
sub
add
xor
or
test
sarl
push
dec
bound
dec
loope
js
mov
mov
cmp
repz
pushf
mov
sbb
repz
mov
ljmp
cwtl
mov
pusha
inc
movsb
lods
mov
add
ret
jge
lods
jne
sti
clc
jbe
rolb
xlat
movsb
jmp
xchg
inc
ret
push
adc
sbb
outsl
fsubr
add
dec
sub
sbb
in
mov
js
jg
inc
gs
ds
inc
inc
mov
ret
mov
pop
xorl
jge
cmp
jge
dec
inc
subl
aam
adc
cmpsb
iret
cmp
sub
inc
or
add
andl
or
jl
loopne
loope
sub
or
int3
or
xor
and
mov
sub
push
notb
or
sar
fiadds
or
sub
adc
call
sbb
push
mov
xor
test
pop
or
sub
lds
neg
and
xor
add
lea
sarb
mov
pop
scas
pop
aas
mov
fisttps
or
push
mov
loop
lcall
or
mov
add
es
sub
sbb
jne
mov
fiaddl
and
cmp
add
test
sub
lods
addl
cmp
jle
repnz
or
ret
push
iret
fidivl
jl
cmp
and
sbb
sbb
jle
inc
inc
cmp
xor
test
loop
lock
add
push
sbb
popa
insb
sub
roll
test
push
adc
mov
sub
ja
in
adcb
testb
mov
mov
push
fnsave
add
push
jo
fisubrl
loop
sbb
fbstp
jns
loopnew
lcall
sbb
push
inc
jb
and
pop
ficompl
add
pop
bound
push
std
lret
loopne
add
mov
ret
push
addr16
sarb
xchg
or
and
add
test
mov
pop
or
ss
out
jle
outsb
lret
insb
inc
sbb
out
xorl
jae
pushl
push
lock
inc
fdivr
decl
or
and
mov
push
dec
or
pop
dec
test
lods
mov
je
loop
int3
test
lret
cmpb
push
xor
imul
call
add
out
push
inc
sbb
or
cmp
jo
xchg
cmpl
dec
and
ret
lock
push
push
push
fsubrs
loopne
jl
push
sub
add
jge
or
sahf
sub
jmp
fs
mov
sbb
or
hlt
dec
adc
cmp
adc
push
or
fiaddl
data16
adc
ss
and
dec
insl
push
mov
cmp
je
call
iret
xchg
es
inc
sbb
repz
push
ficoml
shrl
jo
push
nop
sbb
lea
add
enter
push
push
add
push
mov
pusha
pop
rclb
lods
cld
popf
mov
mov
push
pop
cmpl
cld
mov
jbe
ficoml
imul
xchg
cs
and
add
lret
cmp
xor
popa
jl
or
pop
mov
or
mov
jecxz
enter
jns
cmp
sub
cmp
adc
and
out
sub
mov
xor
add
jb
adc
ffreep
adc
inc
xor
or
inc
call
loopne
adc
iret
sti
mov
jg
ss
je
or
pop
jae
je
add
pop
loopne
or
push
decb
pop
adc
mov
or
xchg
push
add
cs
inc
testl
and
adc
and
sub
and
roll
add
push
mov
ja
divb
jle
divb
xor
sub
cld
and
sub
mov
jp
jne
push
dec
sbb
add
rorb
or
mov
in
fst
scas
or
jbe
and
sbb
mov
dec
inc
sub
sub
arpl
lcall
sub
imul
clc
popa
jo
dec
dec
ja
movzbl
ret
dec
or
and
ret
adcb
fnstsw
jmp
adc
adc
ja
andb
and
jmp
insb
push
sub
jle
pop
add
mov
lock
iret
ret
fcoml
test
xchg
lret
ds
cmpsl
test
iret
repz
fcmovb
into
inc
shrb
jnp
into
push
and
add
adc
add
add
push
mov
jne
leave
push
and
add
mov
sub
and
sbb
sbb
jmp
add
or
aam
jne
fiaddl
cld
in
push
add
jmp
es
sub
adc
loope
fdivl
es
nop
and
rolb
jo
sub
and
push
jp
aam
cwtl
shll
sub
and
or
push
call
in
adc
cmpl
dec
or
inc
sub
pop
je
sub
je
push
or
push
or
push
fldpi
or
lock
repnz
das
aad
mov
xchg
data16
xchg
xchg
mov
push
push
sbb
jne
push
pop
imul
xchg
cmp
inc
or
or
or
add
jne
add
xchg
sbb
shll
fsubrs
sbb
sbbl
cmp
inc
mov
insb
popf
jo
loopne
cmp
adc
ja
push
cmp
xor
or
lcall
or
rorb
or
add
mov
mov
add
ret
xchg
adc
sub
loope
fists
xchg
push
inc
mov
arpl
jmp
adc
cs
inc
mov
imul
test
add
and
xor
andl
imul
mov
js
inc
push
popf
sbb
mov
repnz
popf
xor
rcl
jl
add
or
aas
cmp
jl
or
or
or
adc
lret
insl
or
inc
inc
scas
fistpl
lret
gs
dec
and
push
cmp
cs
pop
mov
test
push
mov
jbe
add
pushl
dec
cmp
push
pop
ja
jbe
jo
outsb
add
fmuls
xchg
mov
in
outsl
jmp
stos
out
or
xor
inc
out
sub
popf
inc
xchg
push
xchg
and
int
out
in
pushf
xchg
lods
subl
rolb
xor
dec
rclb
inc
pusha
out
das
sarl
and
mov
lock
shrl
je
mov
divb
pop
inc
shlb
pop
into
adc
ret
or
adc
mov
jp
jl
add
sarb
mov
enter
xor
xchg
shld
or
pushf
int
adc
mov
jge
or
orl
stc
js
mov
inc
sbb
pop
push
popf
or
cmp
cmp
loope
push
sarb
pop
rcl
ficompl
or
test
fisttps
bound
js
jne
into
dec
in
js
cmp
mov
popa
and
aad
push
fisttps
cmp
loop
pop
and
pushf
jbe
fisubrs
jne
mov
sahf
jne
into
rcl
js
pop
dec
adc
mov
inc
pop
je
inc
pop
ret
or
test
xchg
jb
xor
fmul
inc
and
in
das
xchg
test
adc
dec
jbe
sbb
sub
fiaddl
xchg
push
xlat
sti
les
xchg
je
je
sub
inc
inc
loopne
fimuls
push
imul
or
push
dec
and
pop
mov
dec
lahf
sbb
cmp
or
ret
pop
jne
jbe
mov
test
lea
inc
push
xor
jbe
je
push
nop
push
push
push
setl
cmp
je
dec
les
cmpb
xor
add
xor
cld
push
jmp
or
sbbl
in
or
xchg
test
push
xchg
sahf
inc
and
jb
sbb
popf
rol
mov
je
lahf
pop
or
mov
sub
pop
repnz
add
inc
mov
pop
mov
pop
in
hlt
inc
inc
js
add
jg
mov
sti
add
in
and
inc
test
pushf
cltd
adc
pop
pop
xchg
sub
mul
jmp
or
rorl
push
rolb
and
sub
addb
inc
dec
pusha
jl
jle
test
mov
enter
adc
push
jns
testb
pop
cli
xchg
hlt
pop
xchg
mov
push
inc
cld
cmpl
loopne
stos
push
je
jmp
push
push
movsb
adc
shrb
pop
dec
fs
js
test
sbb
adc
jo
movsb
fildll
test
and
xchg
stos
mov
sbb
dec
pop
ret
and
xor
xor
mov
add
popa
in
jmp
and
subb
gs
xchg
or
add
mov
add
lahf
inc
adc
das
and
inc
cmp
push
push
jb
and
mov
jbe
ds
adc
pop
cmp
orl
pop
jmp
mov
dec
int
adc
cmp
mov
adc
xor
mov
add
jo
push
xor
call
scas
sub
loope
ja
jo
rep
add
mov
and
outsl
or
xchg
add
xchg
repz
test
mov
out
adc
mull
mov
cmp
aaa
and
pop
lock
jae
add
or
push
add
adc
push
adc
mov
sbbl
scas
leave
add
xchg
adc
pop
mov
inc
adc
addl
ja
xlat
es
xchg
orb
mov
push
int
fcoml
and
call
adc
jle
cmp
imul
sbb
and
pop
adc
cmp
push
jmp
lahf
or
push
int
adc
cmp
mov
iret
sbb
mov
jge
insb
test
dec
sbb
and
adc
nop
push
push
loopne
jl
es
and
dec
mov
fs
push
push
pop
jb
ljmp
and
jb
add
or
mov
push
or
lods
mov
sub
xchg
adc
sbb
fnstcw
pop
lea
push
or
fisttpll
xorb
add
push
out
ljmp
dec
aaa
clc
xor
ja
lods
fs
mov
or
push
testb
sbb
adc
je
jmp
repz
pop
testb
push
sub
loopne
test
pushf
lea
das
push
insl
jl
and
cmp
push
or
add
inc
gs
mov
or
and
sbb
dec
ja
add
inc
or
stc
shrb
js
int3
pop
stc
or
sub
lock
push
and
sbb
lahf
in
rcr
inc
rorb
adc
push
loopne
rorb
inc
xchg
sub
xchg
dec
or
sbb
fmuls
sbb
adc
sub
add
xorl
movsb
add
sbb
pusha
test
lods
add
pusha
imul
rorb
sub
sbb
mov
inc
pusha
mov
inc
adc
fwait
and
cmp
sbb
xor
loopne
xchg
xor
xor
push
daa
inc
rcrl
mov
adc
mov
stos
loopne
in
rclb
fsubs
cld
es
fldenv
add
mov
jbe
cs
dec
popf
jmp
pop
pop
les
pop
and
mov
adc
mov
push
imul
xor
add
push
jecxz
in
sub
inc
jo
pop
pop
lods
test
pop
pop
outsb
outsl
hlt
mov
mov
dec
rol
in
and
push
pop
dec
loopne
jg
xchg
sub
test
xor
sti
pop
add
aas
or
and
adc
pop
push
xchg
push
add
push
mov
cmp
repnz
adc
in
push
clc
into
dec
addb
loopne
inc
pop
fisubl
loopne
stos
aas
sub
jae
bound
cmp
xchg
pop
xor
insb
pop
lds
sbbb
add
paddsb
adc
call
shlb
pop
test
pop
xchg
and
imull
sbb
adc
add
xor
cld
pop
mov
repnz
sti
addr16
sti
sub
fimuls
mov
dec
scas
enter
lea
push
push
xor
sub
dec
testb
sub
cmpl
pop
cli
push
push
push
popf
in
mov
dec
je
out
mov
gs
push
dec
cwtl
push
push
xor
shl
push
ret
mov
cmpl
pop
push
mov
repnz
add
mov
mov
pop
dec
jge
movsb
ret
lcall
dec
pop
adc
and
fnclex
ret
ret
mov
les
sbb
sarl
insl
adc
adcb
int3
clc
push
sahf
out
ret
shrb
ret
int3
inc
xor
push
sbb
mov
test
fnstcw
addw
sbb
dec
daa
inc
adc
jg
or
std
inc
or
push
xor
ljmp
adc
xor
adc
xor
icebp
dec
sub
push
pusha
xchg
mov
jl
pop
test
add
push
lea
mulb
cmp
popa
sub
xchg
lret
or
pop
aas
or
push
or
inc
jmp
faddp
xchg
xlat
mov
push
lock
pop
mov
mov
sbb
and
push
rorl
std
shlb
lahf
add
pop
cmp
mov
bound
push
dec
xchg
lea
push
fnsave
or
dec
outsl
shrb
or
add
je
inc
dec
decl
xchg
mov
or
sahf
mov
jg
xor
stos
xor
pop
imull
jl
roll
mov
test
je
mov
cmp
and
mul
jl
xor
lret
pop
fld1
mov
int
daa
dec
or
leave
ljmp
lods
inc
js
cmp
rorb
fucomip
ret
push
into
jne
fmull
sub
fldenv
add
insb
lahf
push
mov
push
js
mov
insl
jp
push
xor
popl
and
add
in
xchg
test
add
sbb
pop
pop
je
adc
fidivrl
push
enter
and
fcompl
rolb
fisttps
pop
lcall
jne
jge
mov
mov
lods
jmp
adc
je
jo
push
jmp
inc
shll
push
xor
clc
imul
xorl
jmp
shl
sub
adc
jne
jnp
mov
sbb
jmp
pop
push
dec
sar
push
xchg
xchg
xor
aaa
fsubl
in
call
ss
jo
adc
ja
push
cld
mov
mov
jbe
fprem
jmp
and
mov
sahf
jp
fstp
mov
push
lods
lock
mov
and
hlt
adc
rcr
pop
jge
mov
in
repz
mov
je
inc
push
add
ja
lcall
pop
mov
and
jo
mov
cwtl
push
pop
adc
pop
push
sub
pop
mov
push
sub
xchg
dec
gs
jo
loopne
jmp
lret
xchg
pop
jmp
mov
xchg
mov
mov
xlat
push
fcompl
lahf
push
jg
mov
ret
and
push
jge
and
xchg
sub
mov
fwait
and
mov
outsb
icebp
js
adc
inc
jg
adc
loopne
fstpl
inc
clc
mov
fldt
and
data16
pop
insl
jmp
sbb
cmp
pop
sbb
jmp
in
cmc
mov
sbb
pop
daa
sti
addb
jne
idivl
inc
or
fsubrl
or
nop
add
xorl
xor
or
loopne
js
add
scas
jp
dec
xor
sbb
adc
std
mov
test
sahf
add
jle
repnz
mov
sbb
add
in
daa
and
push
push
lock
cmpsl
pop
dec
push
sbb
xor
dec
inc
idivl
pushf
sbb
aad
cmp
jnp
cmp
cmp
push
movsl
ds
fcomps
clc
fwait
mov
push
sbb
or
outsl
and
bswap
jle
mov
xchg
sti
add
rol
inc
cmp
cmc
or
movsb
sti
push
inc
in
xorl
push
aaa
mov
loop
sahf
arpl
mov
loopne
or
data16
pop
pop
xchg
sbb
pop
pop
mov
int3
mov
lret
adc
adc
daa
pusha
std
shrb
stos
movsl
mov
aaa
fs
sahf
and
out
add
cld
sbb
cwtl
shrb
fcoml
subb
push
mov
loopne
cwtl
add
ret
xor
lock
lock
cmp
dec
fstps
enter
sbb
test
pushf
or
and
repz
push
divb
nop
push
bound
rcll
shlb
fmuls
dec
shrb
roll
push
test
and
push
hlt
clc
xchg
sbb
pop
lock
mov
insl
clc
cmp
imul
and
aas
rcrb
pusha
jge
loop
fidivl
repz
dec
inc
es
int3
add
pop
pop
inc
sbb
mov
inc
rclb
sbb
popf
int3
cmp
cmp
and
pop
mov
sub
lock
push
pop
bnd
cld
or
and
lret
add
jmp
and
daa
jo
stos
or
out
scas
lods
mov
imul
cmp
pushf
jp
mov
add
out
ja
pop
pop
push
dec
and
in
or
cmpl
pop
inc
push
push
jbe
mov
dec
addl
jmp
or
add
sbb
dec
push
scas
lret
adc
in
add
xor
lock
xchg
subb
in
sti
jo
ljmp
inc
xchg
inc
rcl
mov
adc
mov
jge
inc
add
add
andb
push
mov
movsl
negl
pop
hlt
push
jne
ror
cs
and
sub
sbb
decl
mov
dec
mov
dec
incl
imul
js
sub
push
sub
ret
popl
enter
movhps
pop
idivl
shl
push
push
or
addb
test
aaa
adc
fidivl
push
mov
adc
dec
dec
pop
push
or
pop
mov
or
mov
xchg
sar
add
movzbl
sbb
int
mov
mov
ja
pushf
push
int
jmp
cmp
push
lods
rclb
adc
lock
fldl
mov
cmpsb
inc
ficomps
test
pop
pop
inc
jo
push
sub
inc
sub
mov
pop
xor
xchg
add
pop
xor
jns
jnp
dec
shlb
mov
shlb
iret
cmp
dec
inc
or
jne
rcrl
loope
popf
test
inc
push
roll
xor
sub
or
addb
out
add
out
incl
enter
xor
mov
scas
and
or
sahf
push
xchg
insl
test
adc
in
sbb
mov
sbb
or
pop
add
outsb
popf
cmc
dec
ja
enter
and
loope
push
or
xchg
sahf
dec
cmp
push
add
loope
cmp
pop
mov
push
xchg
push
add
xor
and
pop
sbb
mov
roll
outsl
mov
testb
push
jg
ret
outsb
gs
xor
inc
xor
imul
daa
inc
push
push
ret
inc
dec
adc
adc
adc
mov
mov
pop
sbb
pop
into
push
jnp
mov
mov
sub
add
pop
and
xor
adc
jl
xor
fwait
ret
sbb
frstor
hlt
lea
clc
xor
rclb
adc
aam
pusha
testb
inc
add
mov
cld
addb
orb
mov
add
ss
fists
cld
jmp
jmp
out
adc
pop
or
mov
jbe
push
clc
mov
push
mov
call
lds
mov
push
enter
fwait
inc
hlt
testb
cmpsb
in
adc
add
lods
mov
jne
or
out
or
jmp
or
mov
cmp
or
push
jne
lcallw
cmp
jle
inc
in
pop
sub
jae
sub
inc
jno
sub
add
mov
sub
xchg
add
movsb
call
test
sbb
imul
jne
call
jg
add
out
mull
push
shr
inc
push
xor
shr
rcr
shr
rcr
or
sbb
lock
add
test
sbb
out
shll
or
fistpll
jb
cmp
add
mov
dec
dec
pusha
fs
int
loopne
fiaddl
mov
xchg
pop
xchg
dec
out
and
and
movsl
ss
adc
adc
pop
sbb
jae
loopne
pop
pop
add
sbb
fcmovnb
push
dec
jns
jmp
out
pop
add
adc
popa
enter
jbe
mov
push
cmp
or
mov
push
inc
pusha
iret
or
lcall
sbb
inc
cmp
incb
dec
ret
mov
adcb
pop
lcall
add
cmp
adc
movsl
jb
lret
sub
adc
cltd
fwait
add
mov
jo
fdivrp
fidivs
push
in
sbb
orb
push
rolb
jge
roll
xlat
aam
cwtl
or
lods
adc
mov
int3
lea
nop
dec
sarl
add
cmpsb
add
fsubrp
nop
inc
inc
inc
inc
jg
jns
out
dec
or
push
xor
and
pop
jno
out
or
inc
mov
sbb
cmp
call
lock
repz
hlt
clc
clc
cld
cmpsb
or
cmc
cld
pop
xor
sbb
adc
loope
push
jl
dec
in
sub
jbe
nop
fcoms
lods
sbb
pop
repz
shll
sbb
dec
jb
in
lea
jl
cld
jmp
or
cld
out
lock
neg
adc
mov
xchg
pop
stc
sub
lret
fldt
sub
push
ficoml
je
add
dec
lods
mov
push
test
xchg
aas
inc
out
add
add
xchg
je
mov
roll
pop
add
jns
bound
or
push
mov
jns
out
int3
aam
lret
jns
out
das
sbb
sbb
adc
jns
out
adc
or
and
jns
or
add
icebp
jns
xor
mov
or
sbb
sub
push
add
inc
pusha
mov
pop
pop
daa
outsl
add
xchg
jb
dec
hlt
jl
lock
sub
mov
xchg
out
pushf
les
ficoml
cmp
mov
dec
out
push
ret
push
inc
or
mov
inc
test
ja
andb
dec
adc
adc
dec
test
jb
cmp
inc
mov
idivb
or
or
cmp
out
push
cwtl
sub
or
push
mov
mov
push
in
in
or
or
jae
popf
mov
addr16
mov
xchg
mov
mov
movb
inc
out
scas
dec
adc
xlat
or
jmp
push
mov
mov
xchg
cmp
or
pop
jl
sub
orl
add
faddl
add
mov
adc
push
je
lret
clc
jle
int3
ja
andb
dec
fimuls
or
mov
dec
inc
lret
in
mov
adc
cmp
jae
jecxz
lock
and
shrd
shr
ret
sbb
loope
shr
or
or
outsb
adc
push
or
inc
popa
sub
xchg
inc
or
inc
int3
pop
xor
add
cmp
pusha
and
dec
or
adc
xchg
enter
and
mov
mov
sbb
jo
pusha
mov
out
or
cmp
pop
ds
popa
jmp
test
pusha
fs
fsubrs
jl
sub
mov
mov
js
jmp
daa
add
mov
cmp
mov
aaa
sbb
out
inc
push
add
or
mov
ret
or
xchg
cmp
pushf
jp
jb
or
mov
xchg
nop
sub
outsl
jmp
clc
inc
test
les
addr16
jmp
cmp
jecxz
je
push
cmp
dec
loope
enter
add
je
jne
imulb
out
push
xor
aam
mov
scas
xchg
dec
pusha
daa
fisttps
dec
sub
adc
leave
out
xchg
xor
mov
sub
push
push
pushl
adc
push
add
jb
pop
rol
sbb
adc
mov
cmpsl
adc
fdivs
add
pusha
jne
inc
and
or
mov
and
add
pop
cld
sub
and
and
cmp
out
pop
test
xchg
or
cmp
push
aam
mov
xchg
rcrb
xlat
mov
push
arpl
cmpsb
ret
push
jg
lea
xchg
notb
aad
inc
das
inc
fsubl
sub
sub
test
sub
loopne
movsb
xor
cmp
insb
shrl
xor
faddl
jnp
dec
push
shll
loopne
and
push
xchg
or
xor
cmp
adc
enter
cmp
fidivs
cmp
inc
inc
loope
inc
add
sbb
mov
cmp
cmp
ret
mov
mov
ret
mov
pop
pop
aaa
aaa
add
out
ficoms
pop
mov
loope
mov
sahf
push
add
andl
mov
lock
pop
jne
push
dec
mov
mov
add
and
shrb
xchg
shlb
dec
mov
js
and
in
sbb
jne
pop
in
xor
push
negl
and
test
and
push
or
adc
mov
mov
mov
mov
std
insl
leave
push
es
cmp
fildll
push
incb
jge
or
cmp
add
ret
orl
fadds
pop
xchg
and
jno
rcrl
jo
xchg
hlt
leave
cmpb
cmp
adc
pop
adcb
lock
ja
sub
rcrb
inc
js
add
push
pusha
loop
or
cmp
orl
inc
lds
fs
mov
xlat
add
ficomps
mov
adc
or
and
add
push
sbb
inc
js
pop
pop
int
and
sub
sub
popf
popa
sub
loop
xchg
sub
xlat
add
pop
je
cmp
loopne
std
ret
lods
or
pop
or
mov
xchg
pusha
adc
mov
mov
xor
adc
push
test
mov
mov
clc
inc
clc
jp
push
sub
xchg
mov
js
push
push
inc
push
cld
fimuls
cmp
movsb
adc
adc
fildl
mov
add
mov
mov
cmpl
aaa
nop
loopne
mov
jmp
lcall
lcall
test
push
pop
pop
xchg
and
out
push
xchg
daa
adc
in
inc
dec
sbb
xor
push
andb
mov
mov
jne
rcrl
mov
mov
lsl
pusha
dec
inc
mov
fisubl
adc
mov
mov
dec
mov
not
jmp
loopne
push
mov
lahf
add
add
in
jb
jle
adc
aas
call
mov
enter
cmp
cmp
cmp
je
mov
adc
add
test
inc
loope
sub
lock
sub
sti
add
cmp
jne
mov
mov
cmpsb
xlat
dec
mov
shll
fucomip
mov
push
mov
xor
ret
or
inc
push
or
xchg
pextrw
lods
dec
cmp
add
sbb
jg
test
out
clc
mov
clc
pop
cmp
ret
je
cmp
ja
push
pop
or
inc
xorb
mov
lret
dec
cmp
loopne
cmp
push
arpl
jbe
cmp
sbb
in
or
push
add
and
movlps
test
lea
lea
mov
dec
mov
push
xlat
xor
xor
inc
cmp
je
jle
and
xchg
push
and
push
rorb
mov
push
jecxz
push
adc
or
daa
pop
lret
ds
xor
adc
adc
jle
xor
sbb
loope
sbb
sbb
or
out
push
inc
sbb
loope
adcb
inc
cld
cmp
je
and
jo
outsb
insb
fdivl
out
fmul
repz
adc
xchg
pop
lret
adc
outsb
or
cld
fidivs
mov
fildll
jl
inc
testl
std
icebp
daa
add
pop
je
cld
push
iret
add
sbb
or
lods
mov
push
xor
fs
testb
push
mov
je
es
xchg
push
sub
test
cmc
xor
icebp
inc
jne
add
cmp
dec
mov
pop
cltd
negl
pop
xor
enter
fstpt
sub
loope
and
int3
cmc
addr16
mov
jg
jge
push
rep
test
mov
lret
mov
shl
lea
sbb
and
fsub
mov
hlt
dec
push
adc
dec
mov
andl
enter
loopne
mov
pop
sub
jmp
fiaddl
ja
int
push
inc
push
dec
pop
shl
dec
shll
xchg
test
inc
xchg
push
lcall
jmp
insb
lods
mov
pop
rorb
lea
pop
and
call
adc
and
cs
or
out
int3
jb
mov
xchg
add
or
outsb
jmp
pop
adc
loope
adc
pop
ds
jne
nop
dec
jmp
ret
xchg
stos
fwait
xchg
xchg
adc
push
sbb
jp
cld
push
and
jmp
sbb
mov
or
enter
and
xor
cld
fwait
add
add
cltd
cmp
pop
sub
adc
inc
and
xor
or
sbb
sub
and
xlat
inc
andb
jmp
dec
and
repz
cmp
push
mov
sbb
and
adc
je
mov
fidivrs
and
mov
push
das
sub
add
sub
jo
out
test
inc
and
sbb
lea
push
in
popa
jge
push
popf
or
sbb
push
lock
and
pusha
shr
insb
dec
add
imul
add
adc
mov
arpl
dec
pusha
cmp
popf
aam
adc
fs
scas
iret
mov
sub
fidivrs
loopne
inc
pop
test
pop
add
lret
loopne
inc
xchg
jbe
pop
cltd
out
dec
nop
add
lock
inc
insb
add
loopne
jle
inc
punpckldq
sub
mov
push
and
bound
mov
or
aam
mov
mov
or
hlt
ljmp
clc
les
inc
cmp
sbb
and
add
jno
push
fcmovnu
xchg
sbb
inc
inc
in
pop
fimull
mov
les
jl
cmp
jmp
cltd
mov
popa
je
or
test
scas
out
into
daa
pop
fcomps
rolb
cmp
jecxz
adc
cmp
je
shll
fsubrl
or
rol
cmc
jmp
in
int3
scas
movl
loopne
cmp
ljmp
add
call
test
loop
sahf
cmpsl
repnz
pusha
pop
mov
jg
jmp
lea
and
loop
sbb
add
icebp
enter
pop
out
and
add
test
mov
push
jmp
cli
clc
not
mov
repnz
arpl
call
sbb
leave
hlt
pop
and
fstpt
push
add
fbstp
loop
loopne
or
mov
testl
test
xor
inc
ljmp
icebp
jecxz
mov
aaa
fcomps
inc
loop
ficoms
ja
push
mov
mov
aaa
jbe
push
jmp
cmp
test
cld
dec
pop
cmp
adc
nop
test
into
pop
call
fldenv
sub
out
clc
jne
sbb
push
rolb
inc
dec
add
aad
fsubl
pushf
scas
lods
fldl
lahf
adc
mov
mov
add
enter
push
lods
mov
shlb
fstpt
cmp
and
cwtl
xor
cmp
vhsubpd
pop
mov
push
jl
adc
pop
mov
shl
or
shlb
loopne
inc
int
enter
mov
and
push
stos
cmp
add
mov
arpl
pusha
jmp
fs
xor
add
insl
rolb
insl
insb
test
pmulhuw
add
ret
mov
rcll
sbb
punpckhdq
or
push
lea
adc
pop
pop
add
icebp
mov
lods
je
pusha
inc
add
movsl
jecxz
cmpsl
or
enter
mov
push
inc
pop
xchg
sbb
arpl
nop
xchg
mov
adc
movsb
decl
inc
xor
pop
inc
xor
and
mov
fsubs
testl
test
gs
pop
ret
jmp
inc
inc
jae
or
inc
lock
inc
mov
imul
push
push
pop
pop
subb
sbb
dec
push
or
or
insb
sti
add
sarb
add
stos
dec
clc
out
pop
or
or
mov
jmp
mov
xor
dec
js
jg
sub
sbb
sub
add
dec
ja
jecxz
dec
xor
pop
mov
pop
xor
rep
mov
jecxz
add
loopne
add
adc
push
sbb
insb
outsb
inc
add
std
sub
add
add
pop
inc
bts
jmp
fdivr
and
inc
mov
sub
mov
jae
mov
cmp
ficoml
ss
std
mov
std
iret
jbe
dec
push
stos
add
mov
add
pop
xchg
mov
pop
xor
push
adc
out
and
rcl
or
mov
add
or
rcl
data16
or
enter
add
leave
cwtl
push
cltd
or
outsb
sub
jae
arpl
cltd
sub
nop
bound
shrb
movsl
popf
push
jge
out
aas
in
jg
outsb
mov
cmp
and
or
cltd
jle
push
mov
scas
or
pop
enter
mov
inc
mov
push
xchg
scas
nop
daa
lock
xchg
push
fcomip
add
push
enter
mov
cmp
push
pop
lock
inc
in
and
dec
loopne
popf
fisttps
sahf
imull
jg
or
push
movsb
pushf
add
test
xchg
loope
add
scas
loopne
in
add
fisttps
cmp
stos
pusha
out
out
mov
pop
nop
js
cwtl
push
shl
mov
daa
fists
add
cmp
fstl
mov
or
push
and
add
iret
repz
inc
push
out
or
loopne
aas
jo
js
dec
loopne
push
mov
xchg
mov
cs
xchg
mov
inc
inc
inc
pushf
jle
xchg
imulb
rcl
dec
mov
push
dec
mov
add
mov
cmpsl
dec
stos
adc
xchg
mov
jbe
orb
xor
je
mov
mov
test
lret
sub
scas
xchg
and
gs
je
jmp
xchg
lock
push
ret
lcall
insl
adc
push
jmp
pop
pop
jmp
and
cmp
sub
test
xchg
movl
sbb
sub
mov
cmp
push
lods
cli
mov
movsb
mov
lcall
cli
mov
das
or
js
sbb
xchg
pop
jo
push
inc
dec
push
inc
loope
imull
mov
lock
mov
add
xchg
sub
xor
pop
pop
xor
inc
sub
addb
loope
pop
lcall
push
loopne
cli
ret
adc
std
add
loopne
xchg
or
or
cltd
inc
ds
jne
mov
xlat
add
push
clc
test
adc
jne
inc
inc
dec
dec
rcl
add
inc
pop
mov
mov
adc
sub
push
ret
enter
repz
mov
repnz
cld
dec
adc
cmc
sub
orb
sbb
int3
add
pop
shlb
and
les
push
mov
jne
sbb
out
jne
or
cmp
dec
or
lcall
jg
lds
push
mov
push
mov
mov
mov
sbb
jg
dec
push
je
ja
sbb
sbb
add
std
cmp
dec
and
cmp
adc
add
sbb
jp
push
pop
adc
pop
pop
xor
dec
push
pusha
jae
inc
push
dec
cs
stos
test
rclb
jge
ds
cmpl
xor
or
cld
jg
pop
cmp
jge
sub
jp
pop
cwtl
sbb
jmp
xor
cwtl
add
add
jecxz
hlt
imul
pop
sub
jb
inc
pop
ds
lret
cwtl
sbb
mov
push
sub
loop
iret
pushf
push
mov
int3
insl
fsts
cmp
pop
cltd
roll
jo
scas
mov
inc
outsb
insl
mov
sub
es
sub
inc
add
out
jg
inc
adc
push
add
or
push
mov
pop
inc
or
inc
mov
cltd
insl
xchg
orb
inc
mov
insl
arpl
fcoms
jle
cs
and
std
ficoml
sbb
add
or
xchg
ficomps
ret
jge
inc
sbb
inc
xchg
jg
lock
in
push
decl
sbb
or
insb
or
xchg
je
mov
sbb
mov
xlat
or
sbb
fidivrl
rorb
mov
sbb
andb
pop
adc
notl
push
cmpsl
enter
xchg
mov
add
into
sbb
mov
push
adc
cmp
loop
cmp
add
mov
mov
push
inc
decl
pavgw
jmp
andl
test
inc
or
add
xor
dec
xchg
pop
js
je
jl
mov
roll
adc
fwait
shlb
pop
inc
aaa
pop
and
bound
adc
loop
jbe
xchg
push
adc
dec
aad
sbb
repnz
push
mov
mov
jg
dec
sbb
xchg
push
imul
sbb
push
push
je
test
xlat
ljmp
mov
movsb
js
mov
and
pop
dec
inc
fbstp
pop
fdivrs
xor
jle
and
sub
mov
mov
push
subl
repnz
sbb
into
into
in
jl
xchg
enter
das
fsub
mov
pusha
push
jle
mov
or
aaa
jns
add
xchg
add
dec
xor
js
add
dec
ret
and
hlt
add
add
mov
mulb
icebp
js
in
insl
loope
nop
icebp
add
push
pop
arpl
jne
fisubl
call
sbb
sahf
cmpb
adc
push
jo
nop
cmp
add
std
sbb
incb
cltd
pop
mov
mov
clc
or
inc
ficoms
xor
jae
insb
sub
popa
adc
pop
mov
lcall
fiaddl
orl
add
mov
sarl
pop
sbbb
jge
and
mov
cmpsl
cmp
jns
xchg
xor
cli
imul
roll
add
decl
dec
add
jne
xchg
dec
cmp
add
xor
sub
or
gs
out
jo
mov
xor
xchg
dec
sub
movsb
out
add
push
decl
pusha
adc
out
repnz
jbe
mov
mov
sub
jl
push
sub
cmp
movsb
sti
jmp
inc
cmp
pusha
fsubs
xor
jmp
mov
xor
sub
lods
sarb
cwtl
push
mov
loope
xor
adc
xor
jbe
sbbl
mov
test
cli
xchg
sahf
cmp
jne
sbb
mov
xchg
adc
loop
clc
xchg
xor
cmp
inc
ret
and
pop
loopne
cs
sahf
or
ret
add
sbb
add
push
loopne
lods
add
fstpl
in
es
int3
push
sub
rorb
add
jge
ficompl
add
mov
sbb
lods
fisttpl
ret
fnstsw
dec
fcoms
mov
dec
sbb
add
test
and
lock
inc
sahf
mov
cmpsl
jo
imul
cmp
out
or
or
or
cmp
je
dec
shll
movsbl
jo
je
sub
aaa
or
adc
add
adc
mov
je
cld
add
or
adc
inc
xor
sbb
cld
lods
mov
push
unpcklps
inc
adc
hlt
and
push
and
pusha
inc
lea
in
pop
loopne
repnz
or
and
divb
insl
gs
dec
ret
pop
push
add
and
pop
rolb
push
xchg
mov
dec
push
adc
push
add
jle
dec
add
xor
pop
lock
mov
adc
daa
je
mov
nop
mov
xadd
inc
push
push
pusha
mov
mov
jecxz
xchg
or
cmpsb
pop
test
adc
inc
popa
sbb
push
push
push
inc
add
sub
popf
jbe
xchg
nop
mov
xor
enter
cmp
daa
cmpsl
xor
call
movsl
cltd
mov
mov
sbb
cmpsl
mov
push
mov
inc
push
cs
adc
stos
jne
and
jns
xchg
jmp
sbb
jp
and
push
jmp
cmp
or
jmp
dec
and
stos
push
push
jne
pop
lea
or
pop
xor
inc
sub
icebp
je
add
inc
cld
test
aam
adc
pop
pop
test
cmc
pop
jmp
loopne
push
out
pop
or
push
or
inc
fisubrs
stos
jmp
add
fstpt
pop
orl
xor
push
rorb
or
jo
xchg
push
sub
add
mov
icebp
cmpsb
inc
mov
sub
inc
mov
nop
ret
adc
std
add
dec
mov
test
test
leave
push
fistps
jae
pop
push
jmp
push
fildl
shrl
pop
test
lods
mov
aad
out
adc
and
movsl
adc
jnp
ret
insb
popa
cmp
inc
cwtl
or
mov
loop
inc
cltd
inc
sbb
mov
jbe
call
sub
cmp
add
fcoms
xchg
stos
push
xchg
icebp
out
outsb
mov
add
xor
xor
jecxz
sbb
addl
push
data16
add
popa
clc
sbbl
rol
rorb
cmp
mov
sbb
xchg
sub
push
aas
aaa
lock
pop
shr
les
jmp
sbb
dec
pusha
pop
orb
pop
shlb
dec
cmp
insb
and
test
push
loopne
bnd
push
or
shl
mov
rcll
ja
dec
or
lret
inc
xlat
les
push
xor
push
mov
dec
call
pop
xchg
or
inc
in
dec
mov
mov
sahf
cmp
cmc
or
adc
adc
add
fisubl
sahf
popa
sahf
ja
xor
ret
adc
sbb
mov
idivl
add
rolb
dec
adc
fdivl
cs
jle
push
xlat
mov
rolb
movaps
pop
dec
dec
and
xor
adc
xor
je
cmp
and
pop
xchg
mov
add
pop
push
jne
aas
add
ja
add
inc
mov
xchg
mov
or
or
repz
pop
jno
or
mov
loopne
repz
cmp
push
push
mov
push
dec
mov
les
push
fldl
aaa
cmp
jae
clc
adc
jle
hlt
jb
push
pop
cmp
jbe
xor
sbb
icebp
outsl
jb
mov
add
clc
xchg
ljmp
inc
das
push
lret
cmp
push
jmp
mov
add
push
jne
mov
ds
cmpl
or
inc
xchg
push
cmp
jmp
notb
and
xchg
cli
test
scas
and
neg
mov
cmp
cmp
sti
lock
push
mov
xor
or
xchg
scas
or
xor
add
pop
testb
sbb
or
mov
outsl
outsl
push
add
inc
cmp
icebp
cmp
rol
adc
stc
and
sbb
testl
cmc
sbb
testb
mov
push
testb
or
add
out
and
add
or
xchg
xchg
mov
cs
dec
cmp
inc
lods
leave
sbb
inc
jbe
rclb
xor
movsl
ja
daa
sbb
ss
push
push
mov
imul
sub
jge
leave
ja
adc
dec
adc
jb
cs
add
sbb
js
cli
add
mov
insl
cmp
lock
add
and
pop
mov
jb
lahf
mov
cmp
sub
sbb
cmp
push
cwtl
inc
adc
adc
subb
inc
loopne
ret
xchg
fstps
iret
leave
xchg
rolb
shl
jns
pop
mov
cmp
add
pop
push
add
pushf
jmp
test
pop
test
jbe
mov
or
or
add
push
ds
sub
fiadds
add
cmp
jg
jge
jle
push
shll
sub
push
add
loope
popa
subb
pop
test
xor
or
shlb
push
push
or
les
clc
pop
out
mov
inc
push
push
mov
mov
jmp
push
add
inc
lcall
push
lret
pop
xchg
cli
shrb
and
test
clc
add
mov
mov
xor
jl,pt
sub
inc
or
mov
sub
pop
add
ficompl
xlat
fcoml
test
cmpb
incb
sub
in
xor
fistpl
daa
add
xchg
push
push
jp
add
adc
hlt
fstpt
aam
mulb
push
adc
sub
xchg
mov
xchg
or
or
push
inc
adc
int
mov
xor
sbb
mov
dec
cmp
aaa
lock
pushl
and
addl
jb
add
pop
mov
cmp
mov
mov
sbb
cmp
jb
mov
ret
xor
jmp
addb
cmp
push
xor
js
test
imul
mov
fimuls
mov
andb
xchg
mov
dec
xchg
inc
mov
jnp
mov
jge
add
lea
mov
pop
and
adc
incl
and
inc
add
loope
add
jmp
inc
lods
lahf
or
mov
stos
das
rolb
clc
sub
mov
je
inc
sbb
and
dec
cli
cmp
push
push
cld
mov
cmpsl
or
cmc
inc
inc
and
sub
ret
add
les
add
rcll
push
mov
mulb
icebp
lret
jbe
push
push
movsl
movsl
pop
mov
sbb
incl
roll
cwtl
mov
inc
or
scas
loope
push
push
jno
mov
jne
jmp
and
xchg
jge
stos
add
cmp
mov
or
test
and
fld1
fsubrs
dec
lret
inc
adc
jge
dec
push
popa
and
dec
movsl
sub
mov
fisubrl
loop
xchg
sub
xchg
je
or
push
add
cmp
jb
adc
or
and
jl
jo
lock
aas
mov
add
pop
aas
daa
roll
mov
test
jg
mov
js
fstp
insl
add
hlt
mov
movb
mov
aaa
push
push
repz
test
adcb
push
sbb
call
pop
cli
gs
add
xor
pop
call
xchg
and
lods
push
mov
pop
stc
inc
std
cmp
push
xchg
jl
xchg
push
mov
test
in
mov
jbe
jecxz
fcoml
pop
adc
nop
sbb
xor
je
and
inc
out
dec
mov
jecxz
mov
movsl
or
dec
sub
jb
shlb
xchg
add
pop
cltd
push
mov
sti
fistl
xchg
ja
popf
cmp
and
loopne
cmpsl
dec
loopne
xchg
mov
icebp
inc
xor
or
push
sub
and
pop
dec
sub
out
cmp
pop
mov
popa
das
inc
and
adcb
out
xchg
lcall
sub
push
and
aaa
or
inc
sub
adc
mov
dec
sbb
dec
je
adc
or
mov
mov
mov
es
push
ret
or
push
jmp
or
sub
idivl
add
mov
loopne
addl
add
orb
push
xchg
jne
xor
mov
jle
lea
add
cwtl
lods
negl
cld
and
ret
out
lods
sbb
or
inc
and
push
inc
cmp
pop
or
fisubrs
mov
mov
or
lock
shlb
and
mov
sub
inc
loopne
xorl
pop
xor
mov
insl
insb
cltd
call
sub
pop
aaa
test
and
xor
ds
std
push
bound
push
push
ja
ljmp
test
add
std
or
dec
or
lret
jmp
or
loopne
push
pop
jbe
and
sbb
rcrb
mov
in
xor
pop
cmp
je
sbb
mov
pop
xor
mov
enter
dec
ret
cmp
pop
pop
xor
orb
inc
jnp
mov
movsl
aas
call
sbb
pop
add
xchg
orb
div
imul
lahf
mov
jle
jl
adc
iret
rol
mov
imul
test
jmp
jns
imul
cmpsl
inc
clc
sbb
out
xchg
arpl
xor
sbb
xor
dec
pop
jae
pop
jb
pop
sar
mov
add
or
sbb
scas
addb
push
insb
adc
adc
movb
push
cmp
jmp
dec
xor
xor
cmp
idivb
pop
enter
ljmp
sub
inc
in
dec
lret
jmp
or
leave
data16
add
pop
mov
fdivrl
xchg
movsb
xchg
cs
pop
nop
mov
sbb
movb
int3
stc
testl
sbb
add
xchg
or
dec
add
addr16
mov
jbe
or
sbb
sub
daa
popa
loop
xchg
bound
pop
fcmove
dec
xchg
fs
inc
cmp
dec
test
nop
mov
xor
lock
push
dec
dec
dec
mov
subl
jbe
add
cmp
xchg
test
cmp
inc
scas
cs
pop
push
mov
xchg
pop
mov
aam
xor
rcrl
lock
andl
or
push
sbb
fcmovb
outsl
bound
sub
xor
jmp
mov
cmp
fisubl
pop
adc
dec
add
inc
cld
es
cmp
jne
inc
mov
mov
rcrl
pop
popl
inc
add
je
push
enter
or
and
jbe
aad
add
jno
stos
mov
insb
gs
ds
or
shlb
push
cmp
ja
pop
sbb
jmp
adc
and
sub
dec
cmp
mov
je
inc
xchg
or
dec
ja
adc
dec
and
cmp
xchg
xor
mov
mov
cmp
cmp
je
push
push
addr16
xchg
and
or
cli
pop
in
dec
sbb
test
outsb
jne
in
call
or
push
sbb
sbb
movl
jnp
loopne
and
adc
loopne
inc
add
mov
out
xor
cwtl
out
push
aas
or
xor
push
or
mov
or
dec
xchg
cld
jp
mov
loopne
mov
cmp
push
andl
cmp
add
and
adc
adc
jp
sub
test
inc
fiaddl
test
sub
push
or
jl
mov
pop
aad
into
fistpl
sbb
inc
cmpl
mov
inc
mov
testb
sbb
je
or
or
movsb
jle
xchg
push
add
xchg
jmpw
sbb
stos
mov
dec
add
das
mov
adc
dec
push
incl
jmp
push
jg
or
add
inc
jmp
and
xor
inc
inc
or
lea
and
fxch
add
xchg
sbb
or
adc
or
jmp
mov
inc
adc
push
pop
inc
add
add
adcl
dec
push
jne
adc
mov
push
sbb
xlat
xor
push
aas
aaa
jno
jbe
add
cli
arpl
dec
sub
mov
andl
cmc
push
xorl
in
pop
mov
push
pop
sbb
mov
aad
pushf
ret
xor
xchg
testb
inc
hlt
mov
lret
sbb
inc
ja
lret
adc
mov
cld
or
fildl
dec
aas
pop
cmp
out
iret
stos
imul
sub
mov
mov
or
mov
add
push
shll
ljmp
dec
in
or
and
push
nop
popa
testl
sahf
mov
push
or
push
inc
push
push
cmp
ret
jmp
addb
or
or
cmp
dec
push
mov
insl
inc
cmp
sti
or
sub
inc
aam
popf
xor
or
ss
mov
jp
ds
pop
cmpsl
dec
rol
lret
lods
xchg
daa
inc
fcomps
jne
pop
dec
mov
inc
mov
mov
lcall
jo
pop
in
mov
mov
aas
jmp
bound
mov
sarb
adc
add
adc
stos
push
mov
fidivrl
idivb
fdivrl
mov
jbe
clc
or
addl
lea
int
jae
andb
inc
mov
add
ss
int3
add
rcr
fwait
jl
add
and
jne
cli
dec
sbb
mov
dec
rorl
xor
or
push
lcall
stc
adc
add
movsl
test
and
add
out
mov
inc
inc
cmp
mov
push
dec
push
or
cmp
adc
dec
test
sbb
push
mov
jmp
ret
and
adc
js
add
out
mov
pop
push
loope
shrb
leave
push
orb
push
ljmp
push
push
clc
or
sub
insb
insb
sbb
mov
lds
mull
aam
xor
in
mov
xchg
xor
pusha
jo
movsb
pop
loope
fmulp
icebp
sbb
insl
xor
cmpl
sbb
cmp
add
cmpsl
push
push
fs
fldenv
add
dec
xchg
cmp
sbb
xchg
cwtl
sbb
jg
inc
outsl
inc
test
mov
dec
xor
add
mov
mov
mov
test
add
sub
addr16
das
cmc
lea
paddb
aam
sbb
pop
mov
adc
add
inc
inc
jb
pop
add
add
insb
push
in
push
inc
inc
push
dec
pop
dec
mov
enter
popf
or
cmp
jl
cmp
jg
fcmovu
incl
and
jne
subl
push
jbe
aad
jg
xor
dec
push
or
and
jae
lea
dec
or
mov
jne
mov
or
bsr
push
mov
enter
cmp
jg
into
mov
jmp
repnz
or
jmp
cmp
lds
ss
shr
adc
out
jge
push
pop
and
test
dec
loop
sbb
dec
shlb
or
daa
loopne
xchg
je
call
rcrl
sbb
adc
cmp
out
sbb
jo
sbb
maskmovq
idivl
sub
xor
mov
loopne
or
pop
xchg
jp
push
pop
mull
add
pop
sub
or
or
or
imul
pop
lods
cmp
fsts
loopne
push
jo
dec
icebp
cmp
les
pop
add
mov
in
gs
cmp
jmp
loopne
pop
fdivs
cltd
jmp
sbb
call
clc
push
cmp
add
adc
in
int
push
sbb
xor
cmp
push
cmpsb
sub
fistl
jae
mov
pop
jmp
adc
popa
cs
subl
mov
std
sti
adc
jp
push
repz
add
add
ficoml
adc
jne
test
orl
sbbb
enter
cmp
pop
push
lret
xchg
lock
push
sbb
sub
ret
int3
add
add
cmp
sub
test
xor
or
mov
aam
cltd
jmp
and
inc
mov
mov
mov
adc
inc
and
fdiv
push
mov
cmp
or
fadds
or
or
hlt
in
fbstp
popa
and
stc
xor
add
or
in
fsts
cmp
je
cmp
sbb
or
jle
mov
adc
fldl
in
jmp
sbb
lods
dec
xor
fdivs
add
mov
in
pop
adc
xor
xchg
data16
inc
adc
sbb
dec
jae
dec
loop
add
push
add
add
or
mov
std
lret
rcrl
dec
insl
xadd
dec
push
loop
call
sbb
sbb
test
cmp
leave
xlat
or
or
mov
mov
ds
and
sbb
push
sbb
test
xchg
sub
or
or
insb
lea
mov
roll
loopne
push
ljmp
insl
rorb
enter
inc
mov
test
inc
mov
dec
jns
das
ljmp
fs
mov
dec
inc
cmpsb
mov
push
add
or
add
xchg
inc
dec
inc
xchg
xor
inc
add
sbb
pusha
nop
xor
mov
pop
mov
incb
pushf
inc
addl
adc
ljmp
xor
and
repz
pusha
test
and
fcoml
pop
xor
jmp
or
add
inc
das
mov
pop
pop
pop
jbe
inc
clc
ret
outsl
jge
leave
add
pop
push
addl
xor
xor
adc
gs
adc
push
pop
adc
xor
or
xchg
xchg
add
fsts
mov
ficoml
cwtl
cmp
inc
insl
xchg
dec
mov
fmuls
sarl
dec
inc
add
or
mov
stc
and
pop
jge
popa
sbb
inc
or
daa
mov
push
or
xlat
je
bound
data16
adc
add
je
pop
cwtl
push
add
add
add
out
inc
rcll
sbb
sti
push
add
adc
xchg
xchg
movsl
fistpll
or
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
test
dec
add
fwait
clc
fld1
faddp
testb
data16
pop
mov
pop
add
ret
aaa
add
xchg
mov
test
push
or
outsl
lea
call
add
aad
loope
lahf
cmp
pop
or
lea
push
adc
loope
ret
fldln2
inc
in
fst
je
shll
es
inc
popa
ljmp
ficoms
in
inc
gs
mov
inc
mov
mov
push
fldz
push
xchg
rclb
xchg
cmp
cmp
xor
jmp
add
movsb
pop
add
adc
add
lea
cmp
loopne
add
adc
fcompp
mov
sub
fisttpl
cmp
lock
push
dec
mov
sub
js
and
cwtl
mov
or
and
and
icebp
push
enter
adc
aam
movsb
jbe
negb
data16
push
je
test
pop
jo
mov
jo
or
jp
int3
mov
push
or
and
mov
jmp
mov
in
sbb
pop
sub
pusha
mov
pmulhw
scas
adc
add
loope
stc
rolb
shll
sub
loope
adc
loopne
or
fsubr
call
int
iret
iret
mov
lods
icebp
in
std
rol
mov
mov
and
shl
add
les
out
ficoml
ret
adc
pop
xchg
jmp
test
ret
fstpt
adc
fldt
je
aad
mov
faddl
pop
insl
add
dec
pop
sub
add
pushf
test
sub
or
je
jb
cld
add
js
cmpsb
ffreep
loopne
add
jnp
or
jmp
sub
adc
pop
adc
rclb
in
jbe
and
ret
jbe
jp
mov
mov
jno
sbbb
insl
icebp
je
push
fiaddl
adc
and
lret
dec
push
push
or
xchg
xor
ror
jle
mov
insb
push
ret
loope
add
or
adc
jae
add
or
aam
inc
outsb
fldl
and
or
ljmp
or
movsb
enter
or
or
fldt
or
jl
sub
clc
and
outsb
cmp
pop
pop
sbb
cmp
xchg
jmp
adc
sahf
popf
adc
or
dec
push
gs
into
insb
mov
les
in
in
je
xlat
pop
mov
jne
shrb
sbb
cmp
je
mov
cmp
faddl
jb
lcall
int3
push
test
mov
in
and
mov
or
les
jbe
in
or
xchg
jae
pop
xchg
push
xor
push
lcall
mov
mov
cmp
jne
cmp
jne
xchg
mov
sbb
js
jo
insl
in
jo
cmpsl
add
pusha
and
or
sbb
movsl
jo
push
inc
pusha
paddq
xor
or
xchg
adc
dec
lods
jmp
sub
shrl
loopnew
gs
adc
ss
and
fstpl
in
jnp
adc
daa
lahf
pop
cmp
push
dec
out
adc
sahf
divb
pop
shrl
and
incl
scas
or
test
pop
jne
and
sbb
xor
addb
inc
pop
lea
add
add
mov
xchg
loope
andb
bound
andb
push
push
and
movsb
arpl
pop
sbb
movsb
jo
les
fisttps
scas
pop
and
add
sbb
testl
and
gs
push
adc
lock
pop
and
add
cmovnp
adc
sub
add
mov
sbb
addb
into
shrb
dec
add
cmp
push
mov
pop
dec
adc
pop
or
jo
adc
add
test
je
adc
repz
pop
or
xchg
and
add
das
sarb
test
and
dec
add
mov
inc
lcall
cmp
or
and
fisttpll
inc
mov
sbbl
sub
andl
xor
cs
shr
xor
ja
insl
cmpsl
push
and
sub
add
pop
sub
repnz
xchg
jle
or
test
adc
decl
push
add
hlt
push
adc
jns
test
push
inc
adc
cli
pop
aam
mov
xor
imul
or
test
sub
mov
xchg
loop
push
iret
ficoml
sbb
mov
jmp
andl
add
ja
and
and
jecxz
sbb
mov
jmp
or
jmp
sbb
sbb
test
mov
insl
sbb
and
push
addl
ffreep
or
icebp
dec
and
jecxz
push
in
fs
xchg
dec
add
cmp
lret
push
mov
inc
and
pop
cmp
push
shlb
cmpb
jmp
inc
or
lret
cmp
sti
add
jl
sahf
testl
fisttps
repz
pop
lods
dec
loop
sbb
pop
dec
je
jp
sub
add
dec
sbb
or
xor
scas
sahf
push
and
or
or
divl
or
push
push
push
lcall
pop
sub
adc
and
inc
dec
mov
add
inc
inc
fstpl
cmp
jno
push
jb
pop
bound
add
adc
xorb
mov
insl
fwait
pop
sub
sbb
repz
push
test
pop
out
or
add
xor
test
cwtl
std
add
push
inc
mov
mov
jno
jle
cmp
sub
inc
imul
mov
lock
cmp
fcomi
fnstsw
sbb
stos
subb
or
push
jb
dec
inc
pop
dec
dec
push
and
fisttps
repz
jo
sbb
dec
cmp
xchg
add
dec
adc
mov
pop
loope
pop
or
lcall
push
lea
mov
clc
into
sti
or
lret
pusha
lahf
mov
jmp
test
shll
lods
aas
dec
orb
cwtl
inc
or
cli
mov
orl
pop
sub
test
adc
sbb
shrl
sbb
roll
add
clc
adc
rolb
add
outsb
addl
push
pop
pop
je
dec
jo
sub
lcall
cmpsb
adc
push
sub
pop
ljmp
pop
push
xchg
xor
dec
xchg
sub
cmpsl
inc
fsubrs
js
and
orb
xor
lcall
or
adc
es
jnp
loopne
xchg
iret
pop
push
xchg
je
push
movsl
push
scas
dec
aaa
popf
xor
push
int
or
outsl
mov
jb
bound
and
test
mov
mov
test
clc
pop
clc
ret
xchg
lods
jl
pop
add
je
lock
pusha
mov
push
call
jmp
push
and
ret
dec
pop
or
fimull
add
mov
shl
and
les
xchg
push
push
sahf
adc
xlat
add
jo
subl
incb
stos
pop
rcrl
out
or
hlt
or
lcall
loopne
inc
lds
xchg
mov
pop
sub
sub
stc
push
add
pop
push
adc
push
mov
push
mov
sbb
ret
push
fimull
push
or
incb
push
xchg
xlat
push
push
dec
jb
andb
popf
add
lock
outsl
scas
mulb
adc
shll
adc
and
or
loop
mov
sbb
dec
jmp
adc
out
hlt
ret
adc
jno
jnp
fdivrl
daa
sub
sub
loopne
add
jp
mov
divb
loope
mov
fstsw
ss
lret
or
sbb
fnclex
sbb
cld
ror
notl
dec
cld
or
fldcw
inc
fcoms
int3
test
fwait
mov
or
sub
or
nop
cmp
and
sbb
jecxz
ret
and
jo
jo
dec
icebp
fstp
sbb
fldpi
xor
add
aam
adc
xor
push
adc
decb
jae
fwait
sub
arpl
aam
cmp
push
pop
js
xchg
jp
mov
push
sbbb
lahf
sbb
cld
add
test
mov
jns
sbb
fsubrs
sbb
iret
mov
xchg
add
test
sbb
mov
mov
fbstp
mov
out
lcall
je
cmp
je
push
xor
les
jb
jl
xchg
push
stc
xchg
mov
mov
jp
lods
daa
ret
push
push
push
out
push
ss
cwtl
insl
pop
into
or
jmp
push
add
sbb
sbb
out
data16
mov
fmull
pop
add
leave
test
jbe
sahf
aam
pushf
shl
popf
inc
lock
adc
call
cli
mov
pusha
add
cmpb
and
or
mov
cmp
cltd
push
push
orl
hlt
pop
pop
ss
sbb
pop
lods
fcoms
jecxz
xchg
hlt
xor
data16
or
insl
hlt
push
fsubrs
push
and
fidivrl
push
pop
mov
mov
push
testb
fldt
insb
jp
or
fcomi
push
add
dec
loope
pop
add
jae
ds
je
fdivrp
ret
pushf
sbb
mov
loopne
pop
sbb
push
addr16
mov
or
xor
in
push
sbb
pop
fmuls
inc
sbb
dec
dec
fisubl
in
fs
jmp
js
xor
insb
jae
sub
jb
into
xorl
ljmp
loope
es
out
sbb
cmpl
out
dec
fdivs
push
int
fdivr
adc
sub
and
ret
mov
cmp
adc
xchg
jno
fs
fnstenv
mov
pusha
jnp
insl
iret
fildl
mov
mov
lahf
pop
lret
mov
out
cmp
das
lds
subb
nop
lret
test
lret
cltd
jbe
or
in
movsl
cwtl
adc
jge
or
das
jb
nop
and
lret
int3
and
cmp
mov
mov
jge
mov
imul
pop
jb
inc
int3
int3
int
fcmovb
inc
or
xchg
bound
rcl
insl
out
xor
and
int
cmp
enter
or
push
int3
xchg
adc
jge
fisubl
das
pop
enter
into
into
imul
cmp
or
mov
pop
mov
xor
push
push
cmp
aam
stos
cs
push
sub
fmulp
orb
xor
loopne
cmp
ja
adc
xor
repnz
rorb
outsl
sub
mov
or
fcomps
push
jne
cmp
xchg
fisttpll
fisttpll
fisubrl
cmp
xchg
push
push
movzbl
add
mov
push
add
adc
cmpl
jl
and
enter
ljmp
push
xchg
sub
push
adc
push
xor
fsubrl
or
cmpb
inc
testl
cmp
es
cs
gs
and
test
pop
adc
mov
sarb
adc
mov
ja
push
enter
or
mov
xor
je
sub
mov
xorl
or
sbb
addr16
pop
sbb
push
dec
inc
push
rolb
into
adc
xchg
push
ja
inc
cmp
jne
aaa
es
xor
add
cmp
mov
out
inc
aas
jbe
add
add
outsl
and
and
out
je
fabs
or
fcom
popa
add
pop
push
lock
push
and
mov
jne
jns
jne
or
push
sbb
sub
jb
push
dec
rolb
xor
je
cmp
cmpsl
jbe
add
fnsave
push
mov
jg
rclb
insb
xor
cmp
int
sbb
xchg
aaa
scas
fnstenv
andl
or
fxch
shll
sbb
pop
xor
xor
xor
jbe
test
jb
jnp
adc
pop
ret
mov
jl
fimuls
jb
jns
out
enter
add
jge
iret
sub
cmp
dec
add
mov
adc
jmp
jns
es
jb
je
sbb
into
nop
andb
or
inc
ret
cs
and
cmc
cmc
and
dec
add
inc
test
sub
mov
sub
jne
imul
mov
xor
add
or
sbb
xor
jb
jbe
call
push
and
hlt
jp
adc
adc
lock
jmp
jne
add
mov
sahf
clc
pop
test
mov
jl
out
sbb
cli
add
sbb
les
ret
mov
jmp
stc
add
aaa
rcrl
ss
and
xlat
ljmp
mov
test
rclb
jno
xor
loopne
pop
cmc
or
jmp
shlb
sbb
or
push
xorb
rclb
sub
push
add
les
inc
push
adc
out
inc
mov
enter
das
cmp
test
inc
xchg
lahf
adc
into
sub
push
jnp
pop
push
jne
ret
ret
arpl
test
cmc
sub
hlt
or
enter
aaa
push
out
divl
cmp
cmp
sub
sahf
pop
add
inc
add
ret
cmp
mov
pop
mov
xchg
adc
pop
mov
inc
push
minps
sarb
test
inc
xchg
add
jno
fisttps
cmp
adc
cli
xchg
int3
add
mov
daa
xor
sub
jl
inc
test
dec
xorb
xor
lea
push
sub
daa
aam
inc
inc
adc
adc
ret
cld
and
int3
int
cmp
xor
sub
jp
arpl
lea
push
and
mov
pop
push
mov
fs
cmp
sbb
mov
rcrb
jge
inc
mov
push
sub
rcrb
pusha
add
lret
shlb
mov
sbb
add
ds
sbb
cmpsl
mov
sub
pop
sub
or
jne
mov
sub
mov
sub
int3
sub
dec
mov
in
pop
hlt
maxps
pop
leave
sub
xor
cs
push
dec
orb
add
mov
movsl
icebp
mov
aad
mov
ds
and
mov
add
movsb
es
mov
fists
shr
push
imul
daa
fldenv
imulb
push
jns
or
int3
int
or
jmp
fmuls
lahf
add
push
mov
inc
jo
lock
out
jmp
daa
inc
dec
ds
add
xor
fnstenv
lcall
xor
sti
insb
std
adc
lods
lods
fcmovnbe
clc
sbb
mov
and
mov
and
mov
add
daa
push
add
pop
xor
lds
and
outsb
adc
jle
rcll
test
cmp
insl
loopne
sbb
xchg
pop
js
jbe
xchg
and
movzbl
push
dec
pop
iret
inc
push
insl
jb
dec
pop
mulb
jmp
das
xor
scas
sub
or
adcl
dec
leave
sbb
faddp
inc
lock
dec
inc
add
push
subl
test
add
dec
pushf
jle
pusha
mov
jle
jne
adc
push
fs
xchg
sarl
add
pop
xor
cmovo
add
in
mov
jnp
aam
dec
mov
mov
jb
or
fldt
inc
cmc
add
pop
xchg
mov
imul
adc
pop
mov
insl
or
sbb
fmuls
fldl
jl
jnp
jg
into
or
dec
mov
cmp
inc
dec
or
js
dec
and
jle
xlat
and
je,pn
fcmovnb
addr16
sbb
dec
clc
inc
cmp
loope
hlt
cmpl
mov
jg
jmp
and
and
sbb
jecxz
jnp
cmp
mov
das
test
adc
or
adc
sub
xor
ret
sub
mov
and
lret
jle
call
jecxz
push
rolb
movsb
imul
clc
cmp
lock
jae
cmp
jl
test
ds
push
pushf
dec
add
jae
or
bound
lock
jnp
lret
fnsave
rol
adc
test
mov
std
ja
cmpb
push
or
xor
add
mov
jle
xor
push
fnstenv
pop
dec
mov
out
or
test
or
pop
in
adc
jne
loopne
clc
adcb
sub
sbb
rolb
add
test
mov
inc
sbb
adc
lock
or
fdivrs
cmp
mov
pushf
ss
lea
push
or
jge
out
add
test
mov
cmpsb
mov
xor
movaps
add
jne
call
xchg
add
adc
jno
adc
scas
lods
add
ds
mov
push
sub
subl
or
and
add
out
nop
jne
pop
jbe
xor
mov
push
push
jg
and
popa
xchg
pop
lock
push
nop
sbb
in
dec
mov
int3
shrb
jns
adc
das
or
jo
mov
add
push
dec
jo
les
add
push
pop
cmp
mov
insb
aam
bound
int
push
imul
sbb
pop
test
inc
cmp
pusha
outsb
cmpb
in
loopne
mov
push
sub
jg
push
or
arpl
sub
lahf
adc
or
xchg
cld
cmp
outsb
adc
in
sub
xchg
or
push
jbe
xchg
stc
fldl
hlt
ret
or
jl
adc
add
inc
mov
psubusb
jbe
das
pop
dec
xor
mov
push
cmpsl
inc
loope
jnp
adc
jecxz
fldenv
dec
jo
and
dec
or
push
cmp
pop
in
jae
add
push
push
scas
xor
dec
push
in
xor
cmpl
pop
pop
inc
mov
add
jmp
xor
add
jne
scas
mov
jnp
shll
cmp
jmp
jae
rol
je
imul
sbb
sub
add
lods
jne
mov
scas
stos
pop
in
cmpsb
jmp
xor
pop
sub
scas
jl
or
icebp
sbb
mov
xchg
lock
ret
iret
sbb
adc
pushf
iret
lgs
jo
ret
lahf
sarl
or
int
imul
mov
mov
mov
mov
push
add
pushf
and
or
inc
dec
cwtl
pop
ret
cmc
pop
mov
sahf
xchg
insl
mov
mov
jl
rorb
xor
jg
sbb
cld
add
pop
pop
dec
push
push
adcl
cmp
dec
sub
aad
pop
gs
pusha
stos
ss
gs
xor
int3
out
adc
in
jle
roll
sarb
xor
shr
pop
stos
or
scas
lcall
add
xchg
cmpsb
push
sub
adc
data16
xchg
push
sub
imul
jmp
ds
xchg
or
popa
inc
js
pop
add
aad
ret
dec
rcrb
iret
popa
cmpsl
lock
inc
xor
sbb
enter
popf
inc
push
ja
xchg
sub
mov
mov
das
lret
sub
xlat
push
add
sbb
incb
mov
mov
or
sbb
mov
hlt
or
sbb
stos
add
add
push
and
outsb
cmpsb
inc
or
rolb
jbe
push
in
imul
cs
xchg
out
sbb
push
add
mov
sti
xor
mov
repnz
cmpsb
mov
or
lret
lock
insb
jmp
aas
pusha
rorb
xchg
out
cmp
pop
push
inc
mov
pop
pusha
adc
mov
int3
out
xlat
outsl
or
inc
pop
imul
mov
clc
push
out
movl
or
repz
mov
adcl
xchg
fsts
sbb
mov
xor
mov
inc
fistpll
out
jle
adc
dec
or
shlb
adc
roll
lock
jbe
push
nop
aam
and
in
iret
jmp
push
xchg
andl
adc
push
push
adc
ret
cltd
cmp
jmp
inc
sysret
dec
adc
test
out
xor
inc
or
lock
jno
stos
jg
jl
mov
pop
cmc
add
pop
gs
shlb
xchg
fsubl
adc
add
cli
fbld
push
enter
pushf
push
push
sub
mov
jne
push
jmp
sbb
sbb
mov
push
outsl
inc
je
inc
cmp
icebp
jecxz
outsb
mov
sbb
pop
scas
cmpb
dec
push
repz
inc
add
sub
ret
sbb
jle
popa
dec
xchg
add
sbb
imul
sub
test
fistl
leave
repz
inc
fs
int
pop
jno
push
frstor
rorl
jmp
pushf
imul
mov
or
pop
pop
sbb
adc
and
or
cmc
ss
cmp
push
in
jmp
add
add
cmp
inc
imul
add
cmp
mov
mov
das
add
call
push
cltd
jo
mov
ja
dec
inc
xor
push
or
and
adc
jmp
add
pop
call
mov
add
jecxz
mov
aam
jo
iret
imul
pop
hlt
xor
sub
mov
dec
int3
sbb
jg
out
mov
lea
sbb
rolb
sub
adc
jne
loop
cmp
jbe
xchg
lock
pop
in
ljmp
jae
mov
jg
pusha
lea
inc
jmp
mov
or
sbb
and
push
jnp
es
cmp
xchg
ja
inc
push
add
push
xchg
hlt
inc
jmp
rcpps
mov
or
pop
sub
xlat
cmp
mov
adc
rcll
adc
cmp
jecxz
pop
hlt
fmull
clc
and
xor
les
mov
fidivs
mov
ror
shrb
xchg
and
cmp
movsl
or
sar
cmp
or
sarl
sbb
lret
shr
not
and
add
sbb
xor
mov
in
loopne
outsl
aas
jae
xchg
or
dec
pop
add
enter
or
xor
adc
sbb
dec
ja
pop
roll
es
sbb
pop
outsb
or
in
sbb
jmp
jo
pusha
mov
mov
rorl
mov
push
adc
sbb
pop
or
dec
adc
dec
pop
jl
push
stos
push
mov
or
push
sarb
loop
inc
and
pop
testl
inc
stos
and
or
xor
sar
loope
add
movsb
pusha
push
xor
fidivrl
test
jge
gs
push
or
and
mov
scas
push
decb
adc
dec
adc
xchg
jle
sub
and
fidivl
mov
adc
mov
sbb
xor
sahf
lret
stos
or
gs
outsl
cmpsb
push
dec
adc
push
adc
sub
push
xlat
inc
or
jbe
rcl
pushw
or
mov
cmp
in
adc
pusha
lret
pop
test
pop
push
dec
pop
and
add
and
inc
enter
jge
adc
es
imul
mov
not
call
mov
mov
sbb
cmp
push
and
xchg
outsb
ret
adc
xchg
out
inc
mov
mov
cmp
dec
adc
fucomi
out
jne
dec
jae
xor
outsl
nop
lret
outsb
jmp
es
jl
out
mov
adc
stos
je
push
sbb
ret
fs
sbb
jne
cmp
shlb
dec
sub
out
loope
cli
pop
mov
stc
jl
inc
adc
mov
jo
push
mov
ss
or
sub
leave
test
pop
cmpsb
test
jo
loop
and
or
scas
inc
ss
shll
sub
cli
int
xchg
cmp
enter
shl
inc
jmp
testb
push
stc
out
sbb
sub
icebp
pop
mov
add
pop
scas
jbe
aas
jle
pop
rorb
inc
dec
inc
dec
popa
cmp
sub
adc
cmp
dec
ss
movsb
and
mov
adc
pcmpeqw
adc
and
jmp
dec
cmp
mov
cmp
or
push
insb
xor
push
rolb
mov
rolb
int3
ljmp
xchg
push
jl
jle
int
dec
dec
inc
mov
push
inc
or
cmp
aad
jle
decb
jge
cmp
mov
mov
les
or
mov
shufps
das
push
addl
sti
or
push
jnp
arpl
sub
or
inc
add
movups
mov
data16
jne
imul
and
mov
mov
outsl
mov
fnstenv
xchg
cmp
pop
sbb
inc
or
push
gs
outsl
mov
add
bswap
hlt
adc
leave
pop
mov
shrb
add
les
je
xor
xchg
jnp
push
mov
cld
mov
data16
and
shl
sub
xor
sub
mov
repz
inc
xor
dec
repz
push
imul
add
xchg
pop
sbb
mov
rorb
out
dec
adc
loopne
adc
outsb
imul
bound
add
inc
add
dec
cmp
cmpsb
push
addb
pop
pusha
or
push
aad
mov
lea
sti
dec
sub
ja
lea
dec
in
ds
lret
push
lea
cld
lock
adc
jo
sbb
xchg
rcl
testl
add
das
stos
or
sbb
add
lods
imul
lea
adc
aaa
add
inc
test
jne
mov
roll
add
js
mov
and
ret
imul
add
ret
xlat
lea
sub
test
in
or
jle
add
mov
idivb
xchg
mov
push
movsb
sahf
or
push
cmpsl
add
cmpsb
jg
rcl
lock
sbb
pushf
pop
push
mov
mov
dec
pop
dec
or
pop
cmpsl
pop
mov
jecxz
mov
jo
sub
inc
jnp
movsb
or
nop
dec
or
xchg
enter
ret
mov
dec
cmp
insb
test
jle
sar
dec
mov
cs
pop
mov
fsubs
sti
adcb
mov
or
dec
pop
dec
subb
pop
pop
pop
pop
add
or
imul
inc
xchg
and
repnz
jmp
inc
mov
push
mov
jae
in
fisubrl
mov
mov
movsb
push
or
lret
mov
sub
add
or
inc
mov
lea
pop
pop
and
mov
dec
add
xor
and
aam
sub
and
int3
popf
inc
xchg
adc
pop
jne
push
push
xor
mov
sub
repz
mov
push
xlat
dec
push
dec
pop
sbb
in
in
repz
dec
or
ja,pn
pop
shlb
mov
or
push
pop
xchg
fstpt
aad
or
and
shl
movnti
pop
xor
or
ret
inc
or
test
ret
or
dec
mov
add
inc
xchg
hlt
cmpl
adc
cld
out
loopne
jmp
adc
push
mov
mov
pop
pop
and
rorb
sub
dec
xor
add
xor
jl
loope
push
dec
add
aam
lret
mov
and
push
loop
ja
int
cwtl
mov
mov
je
sbb
mov
mov
pusha
sar
lea
mov
nop
sub
es
out
inc
cmpb
cwtl
std
adc
add
rorl
insb
cmp
add
lods
xchg
mov
sub
jecxz
xchg
test
jmp
nop
clc
jae
orb
js
mov
movl
jmp
daa
jnp
pop
inc
jo
cld
cmp
adc
add
mov
cs
int3
fsubl
xor
andb
test
mov
mov
push
xchg
mov
and
test
ret
insb
pop
popa
mov
sbb
into
lock
lods
aas
jae
adc
lods
ret
cltd
add
repz
or
push
jmp
decl
mov
push
ljmp
mov
lods
or
out
xchg
ret
jmp
add
xchg
mov
xchg
xchg
and
or
mov
cli
out
punpcklbw
in
pop
cmp
or
add
sbb
aam
jle
rcll
jmp
lret
adc
inc
adc
and
icebp
out
test
lods
lock
cwtl
and
and
mov
gs
cmp
ret
sbb
arpl
mov
push
push
or
jge
dec
scas
stc
mov
fimuls
mov
mov
adc
loopne
mov
incl
inc
mov
inc
mov
sub
call
xor
mov
mov
loopne
hlt
xchg
fs
add
add
and
cmp
fidivs
mov
in
test
add
jl
pusha
xchg
in
dec
jbe
xor
test
adc
iret
or
add
popa
outsl
jb
mov
push
jle
or
nop
dec
test
xorb
adc
inc
jl
cltd
adc
adc
es
xorl
jb
mov
push
jl
cmp
adc
sbb
pop
dec
js
roll
dec
add
inc
or
aas
fisubrl
inc
pop
mov
aam
sub
sub
mov
out
add
cld
adc
test
add
jge
mov
out
movsb
movsb
scas
xor
jo
add
popl
cli
mov
filds
test
rorb
sbb
jno
je
mov
leave
push
sbb
mov
jl
adc
inc
cmp
or
and
mov
jne
mov
test
insl
cmp
jae
xchg
add
pop
repnz
lods
jo
add
outsl
xor
or
add
mov
xor
mov
or
sub
pop
xor
jo
addr16
jmp
jmp
shll
inc
shrl
push
sbb
jae
push
push
adc
lea
loope
dec
add
or
pop
add
sub
popa
clc
sub
js
sub
add
or
and
insl
sbb
notb
lea
lock
pop
or
pop
add
cmp
mov
pop
or
sbb
adc
cltd
sbb
ret
jmp
aam
xorl
lods
pop
jno
lea
divl
hlt
push
data16
jae
xlat
add
inc
mov
inc
inc
scas
pusha
subl
push
sbb
xor
xor
ret
divl
sub
jb
fsubrp
scas
or
iret
dec
jnp
lock
outsb
push
ret
adc
fsubrs
femms
mov
and
lock
inc
mov
test
pop
aad
xor
jle
add
or
inc
jl
and
sbb
push
push
cld
xor
add
sahf
shl
add
gs
add
stos
mov
movsb
adc
adc
fsubrs
push
inc
mov
push
test
inc
jbe
push
jae
ret
mov
push
lret
cmp
mov
addl
inc
add
ljmp
inc
fstpl
cmpsb
mov
mov
dec
loop
mov
fwait
mov
jbe
xchg
cli
add
or
arpl
or
push
daa
push
decb
mov
inc
or
or
sbb
daa
dec
mov
inc
mov
test
js
mov
jo
push
ret
mov
cmp
pop
push
test
js
jp
mov
sbb
cltd
sti
adc
pop
shlb
and
add
shl
inc
loope
je
aam
push
cmc
xchg
mov
fldt
cmp
add
fnstsw
je
sbb
cmpsb
test
jnp
adc
and
and
sti
sub
push
idivb
pushf
mov
int3
or
jge
popf
lret
jp
dec
mov
lret
push
rcrb
sbb
jmp
imul
push
clc
pop
pop
xchg
fwait
pusha
xorb
outsb
andb
outsl
dec
jbe
push
adc
adc
push
mov
xchg
adc
arpl
ss
cmpb
jne
rcr
roll
std
orb
les
adcl
ret
sbb
cmp
subb
sti
push
test
inc
push
sub
xchg
sbb
cmp
mov
pop
in
pop
push
xchg
mov
faddp
addl
in
push
insb
inc
fbstp
aad
or
imul
xor
addb
add
aaa
push
add
imul
or
or
insl
or
add
dec
shll
aam
mov
dec
ja
and
cld
lock
mov
dec
add
push
call
inc
lea
das
sbb
outsl
stos
repnz
pop
add
push
stos
jmp
mov
cmp
add
xorb
enter
stos
xchg
adc
ds
cli
imul
mov
pop
mov
sub
filds
mov
test
je
ucomiss
call
loop
int
popa
sub
sbb
loope
or
cwtl
push
add
cmp
addr16
and
jbe
or
mov
and
mov
pop
jmp
in
rorb
sbb
into
fs
js
lret
add
lret
push
or
clc
es
mov
icebp
je
mov
mov
and
lret
test
out
mov
rolb
mov
mov
pop
adc
adc
push
and
aas
sub
and
add
push
sub
test
mov
mov
or
jno
sub
loopne
shll
cs
inc
mov
or
int3
daa
cmp
enter
xor
and
stos
scas
shll
fiaddl
and
pop
inc
mov
sub
jg
mov
movb
add
and
mov
cld
jmp
inc
inc
addr16
mov
test
or
cmpsb
arpl
or
jmp
push
popf
jbe
push
or
cmp
jecxz
insb
sarl
or
clc
je
jne
pop
jmp
lret
in
jnp
and
inc
leave
or
dec
insb
push
mov
and
cmp
repnz
or
loopne
xor
xchg
or
jg
jl
sub
cmp
je
and
neg
leave
and
mov
sbb
divl
test
jno
inc
jge
cmp
inc
push
ds
fnstsw
inc
dec
pop
xchg
cli
loopne
inc
in
faddl
call
cmp
pop
pop
add
cmp
or
mov
inc
sahf
mov
das
xchg
mov
xor
jl
mov
mov
jnp
push
dec
outsb
xchg
rorb
sub
enter
add
add
pusha
cmpb
call
xchg
cmp
xor
inc
iret
add
loop
shlb
test
enter
inc
sub
sub
or
inc
iret
mov
and
ret
ficompl
add
xor
pop
shlb
gs
arpl
and
ljmp
sub
pop
bound
js
stos
mov
cmp
scas
xor
xchg
js
add
adc
inc
mov
fstpl
push
xor
das
mov
insb
pop
cmp
dec
mov
jmp
mov
sbb
sbb
sbb
out
mov
add
and
sbb
in
or
mov
push
sub
sub
iret
sarl
pop
inc
add
pop
push
xor
mov
outsl
sub
lds
dec
add
les
adc
pop
jmp
adc
add
xor
cmp
push
adc
pop
frstor
adc
dec
pushf
andl
aas
add
jg
iret
mov
xor
ret
dec
jo
or
bound
jmp
jl
inc
jno
push
add
popf
aas
dec
insb
loop
fcomps
loope
add
sbb
mov
sbb
cld
cmp
imul
cmp
add
in
add
push
shlb
xor
or
jl
mov
test
inc
rol
cmp
cmp
cmc
jl
clc
push
sub
and
imul
cmp
nop
cmpsb
pop
call
rolb
es
cmp
push
sbb
scas
loopne
ljmp
sbb
inc
push
adc
outsb
bound
aad
inc
xchg
pop
push
pushf
inc
pop
and
xchg
orb
cwtl
rcrb
jnp
mov
mov
mov
jle
test
lret
mov
jbe
mov
cmp
jl
push
inc
add
sub
cld
jecxz
sbb
push
push
test
jl
pop
sub
or
sub
adc
adc
or
push
pop
rclb
movsb
push
call
pop
rolb
xor
test
mov
push
std
and
or
lods
rol
popa
adc
aas
mov
cmp
ret
aaa
add
add
mov
and
mov
pop
shr
cmp
xchg
ficoms
mov
pop
and
cmp
sub
or
jbe
add
jle
push
adc
mov
lds
sub
push
dec
aam
or
movsl
or
outsb
pop
lar
or
cmpsl
andb
xchg
mov
sbb
clc
cmpsl
cltd
jne
mov
mov
mov
jg
lock
mov
or
mov
je
sbbb
push
mov
jns
cmp
ja
add
cmp
adc
cmp
jne
dec
jne
imul
mov
sub
addr16
bound
fwait
cwtl
sub
sbb
push
mov
or
mov
je
or
nop
out
push
adc
mov
aad
push
mov
int3
jmp
add
mov
push
mov
sub
push
scas
call
adc
cmpb
mov
lock
push
add
xor
or
and
or
mov
gs
pop
or
cmp
add
or
es
inc
push
mov
or
fistpl
sub
xor
rcl
outsb
push
es
cwtl
push
dec
push
cmpb
vmread
and
adc
mov
push
mov
and
lcall
mov
repnz
ljmp
sti
add
ret
hlt
movb
rorb
adcb
mov
fidivrs
loopne
inc
rorb
cmp
add
cmp
jg
push
or
sti
inc
jne
pusha
dec
mov
pop
lea
inc
jmp
ss
dec
mov
mov
inc
and
fucomp
dec
or
sub
jmp
inc
bnd
xor
lcall
ja
or
icebp
int
push
mov
push
sti
jmp
decb
sti
cmpb
mov
push
adc
pop
rcll
mov
push
adc
aam
add
sti
mov
sbbb
fdivs
push
mov
xchg
pop
xchg
add
inc
cltd
faddl
add
sub
cmp
outsb
push
arpl
jnp
inc
mov
fucomip
dec
nop
roll
dec
in
mov
loopne
or
fmull
outsl
jg
push
jge
lret
adc
fs
add
mov
mov
cmp
imul
nop
mov
jle
xchg
ret
popa
imul
cmp
dec
jmp
add
cmp
xor
push
mov
adc
sub
sbb
pop
dec
push
dec
into
ss
jb
and
insb
shrb
xor
jle
adc
rcr
and
and
pop
scas
in
xchg
adc
mov
mov
mov
pop
inc
mov
inc
movb
rcr
add
xchg
es
mov
or
sti
or
push
gs
pop
xor
inc
sbb
add
cmp
push
and
mov
sub
or
stos
xchg
and
aas
push
daa
mov
mov
add
mov
dec
adc
andb
mov
push
test
dec
mov
insl
outsb
dec
pusha
hlt
mov
out
mov
into
inc
and
loope
call
mov
pop
outsb
mov
pop
repnz
or
shlb
int
andl
ret
xor
and
add
clc
aas
push
jmp
ja
imul
push
rolb
rcl
xchg
jge
aas
pop
dec
xor
call
jecxz
and
jecxz
xor
mov
jmp
hlt
mov
adc
imul
test
dec
inc
xor
push
sbb
das
push
pop
je
in
xor
mov
pop
mov
or
ret
je
push
xor
lock
jmp
add
mov
jmp
lds
cs
pushf
mov
fbld
xchg
inc
js
aas
pop
jne
mov
inc
push
cmpsl
lret
or
push
lret
mov
cmp
je
lea
and
cs
inc
stc
push
ss
cmp
or
fisttpl
shr
ret
cmp
ja
test
sub
xchg
add
inc
stos
test
clc
mov
sbb
push
adc
pushf
or
xchg
push
sti
cs
xor
jmp
inc
enter
jne
sarl
add
add
mov
xor
pop
ret
rcl
push
test
and
push
pop
or
fadd
mov
push
pop
call
mov
shll
or
shll
jne
or
push
aam
mov
ds
sub
call
lods
sub
dec
push
xchg
push
ret
mov
ret
es
es
xor
and
daa
adc
insb
push
pop
pop
push
mov
aam
sub
jg
popa
jo
xor
les
inc
push
sub
pop
mov
scas
setl
xchg
add
jne
mov
fwait
in
lea
out
cld
cmp
jp
dec
jo
adc
sub
or
and
leave
test
dec
add
sbb
jne
add
push
xlat
add
and
xchg
fstpt
lahf
add
and
call
sub
xchg
cltd
add
adc
add
sbb
std
pop
jmp
jmp
fsubl
roll
lods
neg
mov
mov
cltd
sbb
jo
cmp
jbe
insb
shl
jmp
or
fisubrs
shl
jmp
fwait
imul
jb
add
mov
or
jl
sarb
pusha
insl
je
neg
push
inc
mov
push
sub
sub
js
add
adc
pop
data16
inc
mov
push
or
inc
ret
lods
jns
nop
cmp
clc
cltd
sub
sbb
push
enter
insl
les
jne
add
outsb
orl
mov
divb
lea
add
ljmp
das
dec
mov
or
bndstx
lcall
js
push
jle
hlt
iret
bound
fmull
pop
xlat
adc
jo
je
pop
out
pop
call
dec
add
or
outsb
jmp
ret
push
push
mov
test
lock
incl
nop
rolb
iret
mov
je
cmp
inc
clc
push
inc
shlb
mov
or
mov
jns
test
insb
pop
sbb
and
pop
push
clc
xchg
xor
cwtl
test
gs
or
mov
pop
lret
aaa
call
out
or
cmp
loope
adc
cmp
push
shlb
mov
test
daa
addl
dec
or
push
xchg
dec
push
lock
imul
mov
dec
sub
shlb
and
repnz
lods
outsl
sbb
push
shrl
dec
adc
call
imul
push
pop
pusha
fnstsw
adc
sub
stos
and
push
xor
rorb
cmp
or
push
rorl
pop
enter
xlat
das
mov
cmpsl
cmp
xchg
add
xor
adc
add
fisttps
pop
or
inc
jb
shlb
ret
or
sub
adc
cwtl
lods
pop
call
add
mov
adc
adc
les
enter
sbb
sbb
cmp
aaa
stos
inc
jle
jge
lea
mov
and
push
ret
cltd
je
test
nop
ret
dec
ret
add
cmp
or
xchg
frstpm(287
adc
inc
pusha
das
jecxz
and
push
adc
dec
pop
and
push
dec
add
nop
mov
dec
outsb
and
test
das
xor
and
add
into
ss
ds
xchg
icebp
orl
cmpsl
aam
xlat
and
adc
cli
sbb
inc
push
xchg
push
xor
mov
mov
scas
add
xchg
add
enter
push
insb
data16
sbb
push
pop
push
sbb
inc
inc
sub
dec
push
push
push
movsb
pop
pop
cmp
std
hlt
out
push
sbb
loopne
xor
push
dec
pop
sub
mov
xor
jno
cmp
mov
adc
xchg
push
and
xchg
or
add
or
xchg
icebp
pop
push
movsl
mov
adc
adc
pop
cli
mov
dec
dec
movsb
or
mov
mov
mov
inc
dec
cmpb
inc
cld
ret
sub
xor
sub
pop
fstpl
push
insl
sub
xor
sbb
sub
jge
sbb
call
or
enter
sub
xchg
scas
out
mov
push
xchg
cmp
cmpl
test
daa
lds
cmp
jmp
popa
pop
mov
imul
mov
ffree
loop
sub
mov
jmp
lods
jle
mov
addr16
ret
ret
or
add
xor
xor
inc
or
mov
jecxz
inc
cmp
lods
fcompl
sub
mov
andb
adc
dec
jae
jo
add
xchg
imul
rolb
scas
xor
pop
adc
sub
xor
xchg
mov
arpl
xor
lea
push
pop
mov
sub
cltd
push
sahf
xor
inc
add
push
and
fisubl
pop
les
repnz
ds
test
test
hlt
popa
mov
imul
adc
jnp
or
ret
jl
push
mov
sub
out
push
push
notb
loopne
xor
enter
insl
push
cltd
repz
adc
add
xor
insb
fidivs
je
jge
adc
and
dec
or
adc
sub
xor
xchg
push
inc
imul
xor
imul
rorb
or
push
sbb
add
jnp
cmpsl
sub
mov
ror
push
or
sub
in
mov
push
dec
je
outsl
in
jne
adc
inc
mov
xor
daa
fistpl
fistl
dec
push
mov
insb
and
je
out
ret
push
and
hlt
push
dec
outsb
psadbw
jne
adc
and
repnz
out
mov
popf
mov
movsl
mov
push
aas
push
inc
push
jmp
movsb
fs
dec
inc
sti
and
in
add
xlat
xchg
jge
inc
negl
mov
jge
adc
cmp
mov
mov
les
jle
enter
ret
adc
add
dec
push
xchg
mov
push
loope
pop
nop
or
dec
or
cs
shl
mov
ss
xor
rcrb
ljmp
out
pop
nop
lcall
cmpsb
hlt
mov
mov
stos
or
adc
pop
jmp
adc
mov
and
nop
push
sub
movsb
mov
pop
add
cmp
add
inc
sbb
push
sbb
push
adc
fiadds
sub
stc
jmp
sbb
sbb
repnz
mov
mov
sbb
jmp
push
pop
sbb
adc
fimull
testl
dec
and
jle
jbe
sub
scas
int3
loope
sub
enter
jne
add
adc
mov
fmul
lret
sbbb
repz
stos
dec
mov
pop
es
lcall
sbb
imul
loopne
inc
and
fs
rol
push
test
inc
inc
or
insb
push
repz
lret
sbb
ret
add
bound
nop
sbb
inc
popa
cmp
lcall
or
sbb
ss
cmp
lds
sahf
dec
mov
mov
mov
mov
add
push
andb
adc
add
movb
dec
test
int3
push
sub
push
pushl
jle
call
je
inc
dec
and
rorb
push
nop
adc
and
mov
test
popa
pop
sbb
in
pop
mov
bound
push
out
lock
out
push
test
xchg
test
mov
jne
or
jmp
and
mov
xchg
pop
scas
clc
cmpsb
adc
jae
aas
popa
mov
cmp
data16
cmp
je
push
out
mov
dec
sub
out
fbstp
inc
inc
cmpb
data16
jmp
movb
inc
or
and
xchg
push
adc
adc
lahf
or
push
inc
and
testb
mov
scas
and
cmovae
add
test
pop
adc
add
mov
or
ret
filds
aas
mov
je
out
js
js
jle
jb
pusha
and
inc
enter
pusha
adc
mov
sbb
arpl
push
dec
pop
and
mov
cwtl
test
lock
jo
or
pusha
out
pusha
sbb
add
and
fstl
ficoms
insb
xor
mov
inc
mov
orb
xchg
pop
in
adc
and
cwtl
jns
mov
adc
sub
pop
or
adc
inc
mov
enter
sub
mov
jmp
ja
mov
sbbl
cmp
push
jl
adc
enter
add
inc
test
jns
lea
xchg
loop
pop
les
pop
inc
sti
push
xor
adc
lea
movsl
and
mov
hlt
xor
loop
mov
pop
pushf
or
mov
push
leave
dec
andl
movsb
rorb
fisttps
inc
popa
or
fbstp
test
pop
fistpll
or
sub
push
sbb
or
cmp
adc
lret
stos
sahf
xchg
push
xor
fiaddl
into
and
insb
dec
add
lods
andb
loope
add
cmpsl
add
sbb
inc
and
enter
add
push
pop
stos
mov
pop
sub
cmp
fcom
inc
fiadds
lods
pusha
lds
xchg
lods
inc
sbb
pop
call
dec
push
xor
sbb
fs
mov
cmp
add
jae
push
aam
sub
loopne
movsb
adc
lds
repz
xlat
imul
cmp
std
or
xchg
mov
je
mov
call
mov
jns
add
filds
xor
jp
andw
mov
xchg
push
push
add
or
popa
mov
rolb
dec
jne
sbb
into
test
daa
aam
into
insb
and
test
mov
pop
pusha
fldl
cwtl
call
aam
repnz
push
mov
mov
jl
push
xchg
in
jbe
sbb
fsubrl
lods
loope
mov
inc
out
add
rorb
xor
clc
bound
rorb
add
je
sub
shrb
or
push
mov
sub
pop
in
fldcw
cmp
arpl
ss
test
cmc
push
call
je
test
mov
ret
mov
sub
add
or
cmp
sarl
adc
and
xor
je
or
into
or
lock
lret
hlt
sarl
mov
lret
mov
mov
scas
push
adc
mov
jne
or
jmp
or
stos
int3
scas
pop
frstor
pop
test
int
fidivrs
jp
add
cwtl
insb
pop
pop
test
pop
mov
in
shlb
cmc
jb
pop
xor
adc
sbbl
inc
mov
mov
bswap
mov
jb
and
pop
or
in
cmpsb
clc
testb
or
or
xor
dec
or
pusha
cmpsb
jno
xor
loopne
cmp
ret
add
dec
adc
sub
popa
pop
mov
sar
mov
inc
mov
lret
pop
ret
not
test
outsb
xchg
xor
scas
jge
cwtl
mov
call
bound
jl
cmp
pop
add
stc
faddl
popf
cltd
adc
and
sub
pop
push
mov
out
aaa
cmp
ss
mov
into
fisubrs
cmpl
lcall
pop
push
cld
mov
scas
pop
add
ret
pop
cltd
addr16
push
jmp
sbb
pusha
mov
and
repnz
add
test
test
inc
push
mov
fcmovb
insl
push
push
sbb
shlb
or
adc
cli
add
enter
icebp
add
insl
inc
mov
pusha
fists
ss
xchg
sub
add
and
add
clc
test
in
and
loope
dec
or
movsl
les
in
mov
pop
call
push
pop
adc
or
inc
outsl
or
sub
testb
enter
and
or
push
mov
mov
dec
push
and
fidivl
xchg
hlt
orb
or
mov
enter
orb
les
and
insb
xor
push
push
mov
loopne
pop
pop
insb
cmpsb
imul
or
fstps
push
dec
push
mov
hlt
add
adc
out
sti
sub
and
bound
and
add
testb
daa
and
dec
jbe
cmp
and
xchg
jbe
lods
pop
push
lock
cwtl
sbb
imul
and
gs
and
add
lret
fmul
sub
loopne
jge
push
push
cmp
cmp
aas
sub
popf
das
lods
adc
ljmp
inc
inc
out
std
daa
xor
divb
cmp
jl
movsl
pusha
insb
inc
mov
sahf
dec
sub
aaa
jbe
xlat
sub
loop
and
add
add
adc
cmp
movsl
fdivs
jg
es
mov
or
or
ds
mov
incl
sub
clc
adc
fmull
hlt
jne
mov
mov
xlat
push
adc
cs
ja
sub
mov
movsl
loope
fdiv
and
ss
je
js
adc
and
aam
popa
xchg
aas
xchg
dec
or
inc
mov
push
push
mov
jle
or
fucomi
out
sbb
inc
xor
lds
jmp
pop
ss
jl
cmpb
jl
sub
aaa
mov
xor
cmc
out
xor
mov
inc
bound
or
xor
mov
push
cmpsb
push
add
inc
pop
adc
push
je
jne
nop
push
adc
cld
cmp
mov
mov
push
or
mov
fimull
sbb
pop
ljmp
xchg
nop
xor
out
andl
mov
adc
dec
jo
aam
dec
rcl
iret
sbb
cmp
sahf
adc
ret
xor
xor
movsl
sbb
cwtl
mov
int
jo
or
mov
in
xor
data16
sti
and
jmp
dec
add
lret
jne
or
mov
inc
dec
loop
cmpsb
test
fcmovnb
pop
and
adc
leave
mov
push
pop
cs
or
mov
mov
ficoms
fists
iret
mov
icebp
add
es
xor
rorl
cli
push
dec
dec
je
dec
adc
sbb
mov
outsl
outsb
push
jmp
loopne
imul
bound
xor
enter
sbb
push
push
out
mov
or
inc
inc
inc
rcr
lcall
sbb
pusha
xor
fldl
pop
inc
mov
jecxz
pop
rolb
push
lea
jle
lea
adc
add
push
shrb
xor
adc
outsl
xor
xchg
or
dec
pushf
push
fidivrs
xchg
ss
aam
lahf
ffreep
and
enter
call
adc
fucomp
pop
jne
push
mov
mov
loopne
adc
cmp
xchg
mov
cmp
lds
movl
out
adc
push
lea
inc
jge
push
mov
sub
mov
imul
mov
xchg
cwtl
cmp
xor
test
subl
cwtl
pop
xor
fldl
mov
mov
jb
iret
adc
mov
and
cmp
adc
sub
js
inc
add
jb
cmp
cmp
pushl
add
ror
adc
add
sbb
clc
cmp
jbe
inc
pushf
jl
stos
cmp
popf
ret
mov
xor
imul
push
ret
or
inc
push
or
out
xor
inc
cmp
push
cmp
adc
test
add
pop
aam
mov
mov
xor
jg
loop
out
jp
xor
repz
popa
sbb
daa
jo
dec
popa
jo
daa
out
int3
dec
fneni(8087
mov
or
sub
push
test
mov
aad
inc
sbbb
shlb
add
lds
psadbw
imul
popa
push
fadds
sub
daa
insl
pop
jo
add
pop
hlt
out
sub
pop
pop
push
call
ss
loopne
fmul
xchg
push
push
insl
in
mov
cmc
sub
inc
loop
or
dec
adc
pop
sub
inc
aam
rolb
popa
mov
adc
sti
xor
cmp
hlt
xchg
imulb
cmp
add
sbb
sub
push
inc
pop
sbb
jmp
add
adc
cmpsl
push
pop
adc
mov
inc
sub
out
xor
jle
xchg
fistps
mov
or
push
inc
mov
xchg
sbb
adc
jnp
jg
mov
push
cmovnp
dec
cmpb
pop
push
lcall
jbe
sub
mov
pop
shlb
in
inc
clc
jmp
icebp
lcall
dec
in
xor
xchg
and
test
hlt
lds
clc
push
jmp
adc
or
sbbb
in
add
sbb
loopne
flds
inc
pop
ja
movsl
cmpsb
or
mov
ljmp
mov
dec
pop
hlt
in
bound
pop
inc
je
cmp
test
push
add
fsub
xchg
push
inc
push
or
pop
dec
adc
lods
mov
cmpsb
je
mov
add
pop
mov
mov
sub
pop
pop
pop
adc
cli
fmuls
or
mov
adc
push
push
loop
cs
or
sbb
mov
adc
decl
push
adc
test
test
mov
outsl
rorb
repnz
pop
xchg
pop
gs
cmp
add
adc
jl
incb
cmp
jecxz
hlt
jbe
inc
dec
adc
test
dec
xchg
xchg
out
push
and
xor
movsb
scas
dec
xchg
sub
add
mov
sub
js
xor
sbb
sub
cmp
and
lret
push
dec
imul
pusha
cmp
cmpsb
mov
test
xor
dec
in
add
cmp
push
shr
jae
mov
mov
push
test
lret
ss
adc
out
xchg
jmp
dec
mov
add
push
cltd
aam
cvtps2pi
push
les
jno
push
inc
push
mov
movsl
or
jns
xlat
and
je
push
lret
nop
out
ds
cld
inc
xchg
and
sahf
xchg
pusha
adc
jb
jmp
mov
lods
dec
push
push
or
or
push
mov
test
enter
or
sub
xlat
add
dec
xor
leave
imul
mov
sbb
scas
add
mov
pop
push
sub
mov
gs
aaa
lock
lea
dec
jp
mov
sub
xchg
hlt
inc
and
push
ficompl
rorl
add
sub
jg
sbb
adc
add
inc
adc
and
test
or
adc
mov
inc
add
or
test
mov
xor
fistl
pop
cmp
xchg
rorl
add
mov
shrb
push
incl
jp
fsubl
daa
add
ss
loope
pushf
mov
xchg
mov
cltd
push
and
in
inc
mov
roll
jae
shl
loope
jne
push
jb
hlt
in
les
jmp
cld
jge
sbb
dec
mov
roll
addr16
jg
and
sub
mov
xor
add
cmp
jp
mov
test
xor
add
sbb
test
adc
and
xchg
outsb
addb
insl
adc
push
cs
sbb
add
ret
and
add
out
mov
mov
push
loope
call
es
subb
pushf
fadds
ja
cmp
inc
cli
cmp
sub
sbb
xchg
dec
mov
jmp
sbb
sbb
loopne
gs
cmpb
orl
jb
loopne
jbe
jmp
push
aam
pop
mov
les
shr
add
shl
sub
push
and
dec
add
push
es
mov
or
popa
cmp
incl
mov
or
sbb
les
push
js
push
and
dec
push
jne
xchg
test
testb
pushf
or
sbb
push
aaa
mov
mov
pushf
push
push
jle
mov
fs
or
iret
test
dec
fsubl
jl
lcall
jmp
fisubl
add
fucomip
addb
adc
dec
testb
ret
pushf
mov
xchg
ret
scas
jb
mov
mov
cmp
hlt
enter
mov
mov
push
push
mov
lret
rcr
js
into
mov
pop
mov
inc
dec
mov
dec
rol
clc
xchg
or
dec
imul
xor
push
outsb
or
push
or
cld
fcmovbe
mov
push
add
add
aam
aas
movb
add
or
jl
lret
dec
shr
shl
mov
push
and
pop
lods
fcomp
mov
cmp
scas
out
or
mov
or
out
shr
or
push
mov
sahf
jp
pop
lods
cld
mov
inc
dec
inc
std
adc
pop
je
xchg
push
or
push
push
sbb
mov
movsl
sub
jmp
mov
jmp
inc
xor
inc
insl
imul
mov
pop
cmp
or
ja
adc
xor
shr
pop
ljmp
dec
dec
and
xchg
inc
add
jle
jmp
mov
adc
cmp
lods
adc
data16
inc
or
lea
enter
pop
mov
mov
inc
in
push
sahf
out
sahf
in
out
jmp
jns
in
in
out
sti
out
aas
outsl
xor
xlat
sarb
add
mov
fsubrl
andl
add
and
xor
add
push
add
insl
add
jo
push
pushw
jp
testb
clc
dec
call
movl
fdivrs
inc
pushf
mov
jp
adc
out
jne
in
push
and
sbb
push
mov
mov
into
add
pop
shrl
sarb
arpl
outsl
sub
movzwl
push
add
mov
rclb
adc
or
xchg
and
dec
xchg
cli
imul
mov
lea
roll
adc
pop
mov
cmp
ret
jbe
cmp
jb
in
xor
in
testb
mov
je
dec
push
sbb
les
add
add
imul
mov
cmp
je
pop
lret
add
add
rclb
clc
cli
push
sbb
mov
push
loopne
jne
int3
pop
neg
cmp
mov
test
dec
xor
dec
add
sbb
mov
data16
dec
push
xor
pushf
sub
jnp
xchg
dec
or
inc
sbb
or
jle
inc
sti
mov
push
fiaddl
out
xchg
add
adc
add
dec
adc
stc
xor
fimull
mov
fwait
dec
mov
movsb
or
incl
incl
incb
sub
sub
mov
lds
add
pop
mov
jne
pop
hlt
flds
push
xor
mov
pop
dec
test
in
xor
in
inc
or
mov
rolb
out
int
test
or
les
cli
push
cld
dec
lods
cli
std
mov
aas
ja
adc
mov
xchg
sbb
test
push
sahf
add
test
mov
fdivrl
dec
ljmp
cmp
cmp
stos
sti
adc
insl
mov
dec
ja
mov
loopne
cs
push
or
push
adc
cli
pop
pop
sub
lahf
add
dec
loopne
jno
testb
dec
xchg
call
push
add
or
es
jo
sub
push
pusha
add
in
insb
push
add
lcall
adc
pushf
mov
push
cwtl
or
rolb
and
shl
mov
rorl
std
mov
outsl
cmp
or
sub
test
add
fadds
faddl
xorb
lcall
inc
mov
mov
pushf
fsubrl
adc
jl
push
jmp
dec
or
inc
insl
xchg
inc
inc
fisubs
push
loop
push
es
or
dec
jne
test
roll
push
xchg
push
jmp
insl
jno
push
loop
fisubrs
jae
mov
or
sbb
popa
dec
sti
and
dec
add
in
sbb
inc
adc
jmp
xchg
dec
mov
push
outsl
dec
push
insb
andb
or
bound
nop
cmpsb
or
jmp
lcall
in
mov
or
adc
add
xchg
cwtl
inc
inc
mov
ret
push
dec
add
aam
pop
bound
es
mov
add
xor
cmp
loopne
movsl
hlt
sbb
mov
mov
jl
jg
mov
and
lahf
sub
dec
es
mov
daa
jbe
int3
add
push
inc
or
aas
mov
and
inc
jmp
add
mov
cli
loop
add
xchg
mov
push
mov
sbb
add
lahf
inc
ds
dec
mov
sbb
cli
jg
clc
inc
xor
rcr
popf
rcl
inc
scas
mov
sub
mov
or
xor
cmpb
cmp
mov
or
add
daa
hlt
std
sub
outsl
pop
lret
or
or
ret
ja
mov
push
inc
sub
out
aaa
testb
or
test
adc
pop
add
rolb
test
lcall
fcompl
repnz
xchg
push
int3
test
data16
and
pop
and
insb
or
jge
push
jle
mov
add
and
paddsw
ret
mov
mov
sti
or
jmp
push
push
xor
bound
mov
or
cs
aas
flds
inc
mov
adc
callw
aaa
data16
xchg
cmpsb
sub
dec
and
ffreep
sbb
mov
cwtl
daa
xor
loop
jmp
addl
out
mov
sbb
lods
push
pop
push
cmpsb
push
in
mov
xor
pop
ret
gs
add
ds
test
jl
iret
mov
rorb
mov
daa
pop
sbb
inc
adc
out
jne
add
push
xchg
jle
adcb
clc
jl
dec
xor
sbb
outsb
inc
cmp
add
imul
ret
push
hlt
sahf
sar
pop
mov
xchg
dec
cmp
out
sarl
imul
xlat
testl
push
cmp
loopne
aam
cmp
push
in
icebp
out
sub
sub
mov
adc
jg
cmp
lahf
jl
adc
push
inc
clc
lock
je
mov
test
mov
ficoml
dec
add
aam
in
fisubl
cld
or
movl
inc
cmp
pop
dec
loopne
lret
cmp
shlb
add
mov
cld
jmp
cmp
je
xchg
cmp
aam
or
hlt
xor
lds
les
xorb
and
out
and
sub
daa
adc
add
dec
inc
je
xor
es
mov
aas
jne,pn
xchg
loopne
pusha
lea
cld
push
mov
or
cmp
pusha
xor
jne
pop
adc
and
cltd
cmpl
int
cli
insl
leave
mov
inc
je
ficomps
inc
sti
add
adc
adcb
fldenv
inc
xchg
add
adc
add
or
arpl
cmc
dec
jmp
ja
xor
push
pop
sub
xor
xchg
xchg
pop
outsl
jmp
lock
and
push
push
mov
nop
adc
xor
je
pop
ficoml
and
or
add
or
pop
dec
xchg
push
sub
shrl
pusha
adc
sbb
insb
movsl
loop
pushf
outsl
insl
in
iret
mov
subl
daa
sbbl
test
fsubl
sub
add
xorb
mov
xchg
fwait
js
insb
push
pop
lea
cld
cld
jle
cld
and
mov
insb
popa
movsb
int3
ret
push
fldl
mov
mov
out
push
mov
cli
lret
push
sahf
adcl
adc
jno
je
sub
add
call
es
push
jmp
outsl
and
rorb
cmp
jl
mov
testb
ja
in
js
rclb
sti
stos
mov
jmp
add
clc
add
push
shll
add
lret
push
xor
gs
add
mov
or
adc
pushf
mov
lret
lds
mov
test
orb
jecxz
xchg
xchg
pop
rolb
pop
arpl
pop
sub
repz
mov
push
ja
sub
cmpsl
mov
add
call
cmp
or
cwtl
mov
pop
mov
iret
mov
adc
mov
jp
xchg
push
jb
cmpsb
je
mov
and
mov
pop
xchg
enter
lods
sbbl
xchg
xchg
movsl
push
lret
add
imul
inc
test
lock
pop
sub
ja
add
mov
clc
pusha
mov
or
lahf
or
sahf
hlt
sub
scas
or
jle
adc
test
roll
add
push
pop
jnp
inc
xor
daa
and
lods
imul
pop
loope
sbb
std
xor
push
push
adc
scas
inc
popa
or
stos
push
add
jecxz
insb
cs
and
sbbb
mov
lds
push
add
pop
mov
push
sub
pop
mov
fidivs
sbb
gs
inc
sub
push
add
or
js
dec
lcall
js
add
movsb
mov
and
idivl
lcall
aaa
pop
sub
nop
inc
adc
xchg
push
pop
sub
pusha
cs
mov
dec
testb
dec
hlt
jae
fucomi
cmpl
jne
cs
or
ds
or
xor
mov
xor
outsb
xchg
rcrl
fmull
int
in
add
roll
dec
jecxz
inc
dec
mov
loopne
testb
arpl
cltd
lods
add
or
jmp
bound
lea
fadds
dec
shlb
cmp
jge
hlt
stos
test
pop
movsl
icebp
inc
jmp
sbb
pop
push
xor
jo
mov
popa
stos
xchg
ss
add
js
mov
int
jle
sbb
dec
push
pop
mov
jmp
addl
inc
and
ret
ret
sbb
add
daa
lea
jmp
lret
out
dec
mov
cmp
es
xchg
je
cmp
movsl
sub
push
pop
cmp
cmp
imul
push
pop
in
adc
sub
fwait
jb
mulb
sub
push
inc
inc
pop
fidivs
and
sub
pop
jmp
das
sub
pop
cmp
mov
inc
clc
jp
push
mov
sbb
jg
pop
movl
pop
dec
ret
pusha
or
jne
in
rorl
nop
adc
movl
or
scas
clc
jle
push
push
repnz
pop
cld
mov
dec
outsl
pop
cmp
movl
dec
iret
mov
insb
dec
xchg
xlat
in
or
push
jo
cmp
ficoms
add
dec
jo
push
xchg
cli
push
out
and
jne
and
push
add
int
inc
and
xchg
push
mov
inc
inc
dec
pushf
sahf
mov
cmpb
sub
inc
mov
les
jae
mov
mov
enter
push
aas
movsl
sbb
or
insl
mov
inc
lretw
call
xchg
dec
adc
add
adc
andl
sbb
lock
push
sub
add
dec
outsb
sub
xor
adc
add
clc
jmp
movzwl
push
push
or
dec
or
or
push
inc
mov
sbb
popf
aam
cmp
sarb
xchg
pop
sub
adc
sub
cmc
cmp
dec
adc
mov
icebp
and
mov
push
xchg
sahf
sbb
fiaddl
dec
cmp
mov
and
mov
inc
sbb
ret
or
gs
and
and
push
fdivrl
lods
add
test
mov
adc
xchg
push
repnz
dec
sub
dec
mov
mov
sbb
std
test
dec
mov
mov
mov
mov
push
adc
test
push
nop
or
cld
fstps
movsb
rclb
jl
insb
hlt
sub
xchg
lret
dec
in
pop
loopne
fs
adc
mov
leave
add
scas
cmp
and
xchg
mov
push
add
loopne
or
orb
xchg
hlt
jo
mov
or
jne
sahf
sub
mov
shr
sub
rol
ss
and
repz
push
popf
ljmp
adc
push
xlat
sbb
mov
mov
roll
push
fmul
sub
xor
das
stos
hlt
jg
outsb
in
jp
cld
jnp
pop
sahf
sub
test
sub
cmp
and
jo
jmp
or
fst
cltd
add
rcrb
sarl
dec
pop
lea
sbb
mov
adc
push
jno
or
dec
lret
nop
push
sub
adc
mov
addl
stc
call
loop
int3
adc
xchg
sub
mov
mov
mov
add
jmp
dec
sub
sub
ud1
lock
in
pop
dec
scas
adc
insb
add
shll
ret
push
sbb
fisttpll
std
fstl
add
sbb
xor
or
in
mov
sbb
cmp
or
shr
add
adc
xor
push
es
fsubrs
xchg
daa
xchg
or
lock
add
in
cmp
and
in
fdivs
or
mov
arpl
in
rcll
orl
int
lods
enter
sub
inc
pop
clc
adc
ret
fcoms
pusha
add
sbb
popf
xor
aas
and
mov
add
movsl
mov
lock
pushf
cmp
adc
cmp
mov
fstpt
adc
outsl
pusha
leave
addr16
data16
dec
or
incb
popf
pusha
imul
insb
incb
fdivrs
add
into
inc
sub
in
sub
push
mov
stos
aad
and
xchg
das
and
roll
fsts
jle
push
movsb
fdivrs
jge
mov
push
push
mov
push
subb
push
mov
mov
enter
xchg
push
mov
inc
test
leave
xchg
sbb
pop
pop
push
jnp
add
rolb
dec
or
xchg
loopne
jb
popf
loopne
popa
test
movsl
in
mov
adc
dec
and
or
mov
or
xchg
rcl
daa
rcl
add
hlt
xor
sbb
fs
mov
shlb
xor
or
cmpb
sub
mov
inc
and
mov
int
es
shrl
ret
or
cmp
cmp
mov
jmp
dec
push
push
insb
scas
or
addl
push
dec
test
cmpb
mov
or
push
ja
jae
shl
inc
rolb
inc
andb
lea
imul
and
ficompl
fsubp
scas
mov
sub
or
jge
rep
mov
and
ss
jne
bnd
sbbb
clc
je
fidivl
jmp
jl
js
push
imul
mov
dec
fdivrl
or
cmp
call
int3
push
push
std
adc
add
pop
lret
inc
xor
xor
or
lods
loop
or
subl
jne
lea
js
lock
in
and
or
mov
sub
push
lods
fs
inc
mov
mov
pop
or
inc
sgdtl
mov
aam
and
rcll
mov
test
stos
jo
mov
adc
rclb
sbb
dec
daa
clc
pop
outsl
push
push
lcall
sub
inc
and
or
adc
add
cmp
push
xchg
test
cmp
xorl
pop
mov
cmpsl
mov
pop
jge
lcall
jae
fcoml
loope
xor
mov
xorl
xchg
and
daa
lods
mov
jnp
insl
popf
jle
xchg
fwait
test
sub
scas
and
mov
mov
add
popf
mov
jae
mov
xor
scas
nop
loopne
loopne
call
sub
push
ljmp
sub
cli
jb
and
add
dec
adc
lods
enter
and
dec
call
cmp
inc
mov
or
insl
and
psubb
push
xor
mov
mov
pop
xor
inc
in
cmp
pop
gs
lds
fnstcw
xchg
push
insb
xorps
inc
dec
cmp
jmp
xor
gs
push
ret
mov
pop
js
adc
pop
enter
stos
lods
dec
fsubrs
jecxz
pop
aam
enter
int
dec
ljmp
mov
and
lret
insb
sarb
imul
push
dec
sbb
filds
adc
push
push
icebp
arpl
mov
int
sub
or
les
pop
push
xchg
int3
ret
jl
push
pop
out
mov
fdivrs
jb
mov
push
in
iret
ret
sar
cmpl
imul
pusha
rol
push
mov
icebp
mov
lods
ds
add
lods
fucompp
jg
movsl
in
int3
or
lods
jl
adcb
pop
adc
xor
dec
ss
andb
sub
subl
out
pop
mov
and
sarl
lods
mov
popa
sub
pop
sbb
insl
ss
mov
stos
jg
sub
add
sub
push
push
jmp
jle
and
neg
sub
push
and
and
and
int
lock
les
xchg
pushf
xor
call
pusha
fsubl
xor
in
dec
fwait
add
pop
lea
and
xor
dec
rolb
or
mov
in
fs
dec
dec
addb
sub
sub
inc
and
xor
ja
and
int
add
cwtl
adc
loopne
add
add
sub
rclb
mov
loopne
popf
mov
or
xor
pcmpgtb
or
addb
and
push
pusha
in
jbe
sbb
sub
insb
jno
scas
mov
mov
jns
cmp
int
or
fnstsw
dec
or
jge
and
inc
and
and
js
stc
arpl
sbb
push
pop
xor
dec
nop
xorb
subl
pusha
clc
ret
sbb
idivb
push
or
scas
sub
add
pop
sub
mov
push
fmuls
and
pusha
insl
roll
sahf
insb
cmc
jge
and
enter
xor
add
sbbl
loopne
xchg
lea
add
addl
rcl
add
sbb
jo
rolb
loopne
add
clc
mov
std
fiadds
mov
nop
sub
repnz
push
mov
adc
fistpll
add
add
sub
inc
icebp
sbb
dec
sbbl
scas
add
mov
sbb
imul
mov
out
xchg
pop
push
mov
ret
push
sbb
inc
icebp
adc
mov
aas
test
cmp
jecxz
or
arpl
aad
sub
loopne
lods
mov
adc
movsb
testb
xchg
mov
push
adc
frstor
lahf
stos
fwait
incb
adc
mov
sub
push
adc
push
and
push
push
add
sbb
add
mov
dec
push
sbb
rorl
add
and
adc
subl
adc
fs
or
cmpsb
sub
andl
sbb
cs
mov
jns
mov
jnp
clc
and
jl
push
lea
insl
inc
inc
cltd
inc
imul
mov
addb
es
pop
sti
pushf
popa
mov
ja
adc
cmpb
dec
mov
nop
add
xor
or
adc
es
mov
pop
jo
fnstenv
insl
mov
loop
xchg
fdivrs
movsl
syscall
or
jne
test
dec
and
lret
jl
or
in
xchg
or
sbb
pop
mov
sub
mov
lock
je
stos
add
rclb
movl
mov
lds
mov
xchg
mov
pop
shlb
push
add
push
test
cmc
and
loope
leave
mov
pop
inc
sub
mov
ret
ret
mov
fildll
add
divl
xor
dec
xor
cmp
les
sbb
mov
loopne
repz
imul
cmp
and
jae
pop
ret
js
xchg
in
cmp
in
insl
outsb
xchg
inc
push
dec
sub
icebp
outsl
cmp
push
insb
push
xchg
das
sbb
rclb
jle
mov
js
shrl
imul
add
mov
mov
hlt
add
clc
xchg
sbb
js
push
out
xor
xor
jecxz
sub
and
or
jle
clts
xor
mov
mov
inc
cmpb
inc
adcl
js,pt
mov
xor
repz
or
dec
lret
popf
inc
inc
sub
mov
dec
movsl
pop
inc
rcrl
mov
bound
pop
pop
adc
or
movsl
pop
int
add
rorl
adc
fs
add
mov
in
int3
add
scas
add
icebp
cmc
add
xor
or
or
cwtl
je
scas
icebp
inc
lea
mov
jmp
inc
cmp
pop
test
pop
cmpsb
or
cmp
mov
add
or
mov
add
fsubrs
jbe
sbb
add
xchg
pop
repnz
adc
inc
addr16
mov
mov
push
addr16
sbb
fdivp
mov
pusha
test
and
xchg
cmp
ret
add
out
add
and
mov
push
adc
nop
imul
or
ss
cmp
jae
inc
dec
adc
mov
je
mov
pop
inc
or
into
push
rclb
dec
or
mov
or
ja
iret
pushl
or
nop
mov
cmp
mov
inc
ljmp
push
sub
xor
or
add
adc
ret
sub
fs
jo
mov
cmp
outsl
sub
jmp
jne
dec
inc
mov
add
neg
sub
lahf
add
push
loopne
cs
adc
adc
and
and
cmp
in
jno
das
cmp
mov
mov
adc
dec
rorl
push
jmp
negb
ljmp
mov
sub
xchg
out
jns
or
lret
jb
lret
sarb
cwtl
pop
jl
and
cwtl
in
mov
dec
in
adc
or
add
push
loopne
adc
xcrypt-ecb
cmpsl
dec
xor
mov
pop
iret
nop
rolb
inc
jmp
pop
mov
xor
rcl
mov
nop
push
push
or
xor
jp
mov
add
xor
inc
je
into
mov
test
push
shl
jbe
insl
in
sbb
jne
int
xor
pop
and
dec
and
cld
fmull
and
push
jmp
mov
sbb
in
xor
push
push
or
mov
addr16
scas
jg
ds
adc
push
pop
dec
or
add
xor
hlt
loop
aaa
sub
cltd
mov
add
pop
aaa
xlat
cmp
imul
push
lcall
and
cld
jle
xlat
jo
out
test
jb
xchg
sbb
push
push
add
stc
lahf
xorb
sbb
aam
push
and
adc
xor
ds
movsl
and
add
push
jp
cmp
mov
or
sub
jmp
push
xchg
add
loopne
popa
push
push
les
dec
imul
or
ret
or
add
test
sar
pop
cwtl
js
xchg
xchg
dec
mov
and
mov
cmp
add
cmp
push
mov
push
arpl
xchg
or
rcll
lock
lret
sub
add
push
imul
stc
out
fmulp
jo
push
add
jnp
and
rcll
and
ror
jno
or
popa
dec
jl
push
xchg
test
inc
and
mov
loopne
push
sbb
sbb
sbb
aam
add
call
addb
xchg
jo
inc
sarb
cmp
or
pop
into
ljmp
pop
or
call
push
inc
mov
add
lcall
dec
lods
add
pop
push
notb
hlt
push
out
nop
add
in
or
filds
push
out
les
mov
cwtl
dec
push
lea
jg
shl
pop
lret
ficoms
cmp
jg
enter
push
push
or
aad
adc
daa
shl
sbb
pop
adc
out
movsl
and
sub
aaa
add
and
pop
mov
bound
pop
xor
sub
fcom
dec
sbb
inc
pop
adc
negb
pushf
push
cmpsb
push
test
inc
sbb
out
enter
pop
mov
jae
mov
push
sbb
shll
sbb
sub
or
inc
ror
pop
xchg
test
mov
dec
xor
xor
push
push
adc
test
sbb
js
and
xchg
push
je
mov
xchg
cmp
test
xor
das
mov
push
scas
jb
cwtl
test
xor
xor
andb
mov
test
adc
notl
add
adc
jge
or
fists
jle
add
lea
add
ret
lea
clc
mov
daa
icebp
rcll
shlb
pop
cmp
cmp
pusha
mov
stos
mov
jmp
cmpsb
xor
aad
push
clc
mov
lock
jl
push
sarl
jno
aaa
dec
pop
inc
loopne
push
cmpsl
cli
cmp
dec
mov
adc
xchg
lcall
inc
mov
xchg
nop
out
sbb
xchg
pop
enter
xlat
cmp
pop
or
mov
test
adc
shl
dec
xchg
or
cmp
lds
mov
xor
lods
mov
mov
or
fisttpl
lret
add
add
orl
jbe
test
outsl
add
and
xor
add
inc
or
enter
call
cmpsb
mov
fimull
dec
movsb
lea
sbb
mov
movsl
lods
inc
dec
jecxz
mov
mov
addl
jp
jo
nop
or
xchg
mov
sub
or
inc
jmp
sub
fwait
loopne
and
jo
imul
pop
rorb
je
xor
push
mov
inc
and
ret
add
xor
xor
push
xchg
icebp
fists
rcll
jge
mov
xor
mov
loop
inc
out
inc
inc
mov
mov
mov
hlt
cmp
lock
movsl
dec
mov
sub
je
push
jnp
hlt
adc
movsl
and
inc
pop
push
insl
rcrl
push
push
mov
in
sub
sub
cltd
add
adc
or
mov
fcoml
sbb
jne
mov
bnd
jbe
prefetcht0
js
es
sub
or
pushf
or
shlb
cmp
push
mov
sbb
add
fsts
loop
hlt
xchg
int
push
nop
add
int
mov
and
cs
xchg
sbb
adc
lret
add
or
roll
lret
pslld
add
lods
add
dec
in
sti
xor
rcr
push
pop
push
adc
pop
or
ficomps
cmpsl
add
push
roll
sbb
sub
push
push
ljmp
movsb
rorb
pusha
pushf
push
test
push
pop
sbb
mov
jmp
pop
sbbb
jge
sub
mov
das
xchg
call
out
lahf
enter
mov
or
push
mov
inc
mov
inc
divb
lahf
dec
js
add
push
add
add
xchg
xchg
stos
sub
test
lea
aam
pop
xchg
cmpsl
push
test
and
popa
jmp
sbbl
call
jns
sub
push
das
lock
mov
cmp
inc
pop
addl
popf
mov
sahf
std
mov
jmp
stos
dec
inc
inc
adc
fdivrs
jmp
out
pop
pop
push
mov
jmp
fwait
pop
push
ret
dec
int
testl
fstp
out
or
mov
adc
cld
adc
test
and
ret
xchg
xor
xor
or
ljmp
inc
ret
cli
add
aam
xor
xor
dec
pop
movsl
mov
addr16
loopne
ror
add
insb
jns
js
adc
dec
ret
stc
loopne
shll
push
mov
test
nop
xchg
mov
and
jmp
pop
sbb
sbb
popl
dec
lods
sub
test
int
in
mov
inc
inc
hlt
jp
dec
icebp
dec
divb
dec
das
or
pop
lock
in
ss
or
sub
add
sbb
ss
add
mov
xor
push
mov
dec
scas
inc
jae
mov
adc
sbb
sbb
jnp
jbe
aaa
add
aaa
sbb
in
and
fsubs
insb
or
les
mov
inc
jl
stos
aam
dec
cmp
pop
outsb
pop
or
pop
push
inc
fdivl
and
hlt
insb
or
adc
add
lods
mov
les
stos
call
add
add
push
pop
ret
and
jmp
mov
pop
ret
int
popa
ret
mov
aaa
fdivs
mov
jecxz
add
inc
pop
fsubp
cmp
sbb
xchg
jno
loopne
sbb
rcr
mov
jge
iret
mov
push
push
daa
mov
adc
push
sti
mov
add
push
nop
pop
enter
dec
stos
loopne
sub
jo
xor
sbb
addr16
sbb
sub
sbb
cmp
cmp
cmc
jmp
or
lock
sub
push
jno
add
imul
mov
mov
je
je
pushf
dec
call
cmp
ficomps
dec
xchg
mov
add
daa
lcall
xchg
lods
sbb
and
gs
ds
jp
sbb
fldcw
push
movsb
inc
adc
inc
jno
adc
in
jo
out
pusha
bound
hlt
adc
call
das
dec
push
push
sbb
mov
or
fstps
insb
fsubrl
cmc
mov
outsb
shlb
cltd
icebp
dec
jecxz
jo
stos
or
mov
test
fs
jle
dec
test
sub
mov
xor
mov
push
daa
sbb
popa
ja
lods
mov
push
add
add
dec
mov
mov
addl
rcrl
xor
pop
fistpll
or
push
sbb
push
aam
inc
sub
xor
or
sbbb
sbb
mov
dec
sarl
xchg
cmc
push
push
arpl
or
lret
jmp
push
sbb
dec
pusha
sbb
lock
daa
pop
fbstp
pop
inc
loop
mov
adc
push
mov
insl
mov
add
nop
es
or
xlat
jp
inc
stc
cs
je
push
lock
add
sbb
das
daa
sbb
jo
jl
or
add
adc
lea
jne
xor
add
sub
pusha
xchg
cmp
inc
sbb
mov
je
frstor
out
and
xor
cwtl
sub
adc
mov
inc
mov
test
pop
add
xor
cwtl
xchg
lods
in
shll
inc
hlt
leave
cmp
inc
sub
push
dec
add
mov
push
mov
arpl
inc
xchg
pop
inc
mov
push
sbb
xchg
dec
adc
pusha
xchg
add
cmp
xor
push
popa
mov
daa
push
dec
clc
push
dec
add
gs
dec
fwait
mov
cmp
mov
imul
js
dec
sub
mov
neg
sub
and
sub
ret
xor
sbb
adc
push
mov
and
lds
pop
cmc
cmp
add
mov
aam
ja
nop
pop
push
roll
xor
ja
cwtl
add
pop
mov
sub
aaa
xchg
mov
cmpw
ds
push
mov
inc
xor
add
cmp
and
or
test
or
rcl
push
or
ret
add
cmp
mov
dec
jp
mov
sub
pop
adc
pop
or
in
jg
into
sub
mov
addr16
sub
push
xchg
imul
loopne
dec
repz
adc
rolb
shll
mov
loop
xorb
daa
in
add
orb
dec
jmp
testb
fidivrl
push
push
cmpsb
mov
lea
and
jnp
add
dec
mov
mov
sub
push
sbb
jnp
mov
pminub
push
repz
xor
pop
xchg
or
add
jl
rcr
repz
jge
sbb
push
dec
movsb
rolb
xlat
adc
enter
or
mov
dec
sub
loopne
call
mov
adc
push
push
add
movsb
add
loop
or
jg
pop
sub
pop
xor
xor
push
add
pop
and
inc
daa
andl
push
xchg
out
roll
or
jne
adc
es
call
aas
sub
jne
push
jns
mov
hlt
or
test
pop
cmp
mov
clc
jb
fsincos
mulb
aas
cmpsl
divl
inc
jne
sbb
jmp
pop
pop
ja
push
cmp
test
mov
rolb
pop
push
jcxz
outsl
outsb
cmpsb
push
es
xor
idiv
mov
gs
test
adc
or
jbe
cld
ljmp
outsl
lret
fimull
and
popf
int3
mov
and
loopne
cmpsl
push
dec
cld
leave
cwtl
jge
roll
in
mov
ljmp
push
jp
lea
imul
and
outsb
rep
mov
lock
inc
push
adc
inc
cmp
add
cmp
sub
or
pusha
xor
into
push
pop
outsb
fld1
lea
mov
shlb
rcr
sub
dec
iret
lahf
nop
pop
sbb
pop
ss
dec
inc
fisttpll
add
xor
push
or
imul
sbb
pop
xor
and
dec
add
nop
or
inc
dec
or
je
mov
dec
rclb
adc
inc
add
lret
cmp
inc
icebp
dec
dec
sub
or
sub
fildll
inc
inc
xorb
cmp
dec
push
sbb
and
fmuls
and
mov
jb
sbb
adc
xor
push
add
aam
jb
adc
add
mov
dec
xchg
aad
addl
in
and
clc
hlt
inc
out
rcll
dec
push
mov
inc
xchg
sbb
mov
ret
mov
xchg
cmp
loopne
push
or
inc
dec
xchg
xor
xchg
out
ljmp
sbb
dec
inc
lcall
pop
push
cld
int
jp
hlt
adc
xor
sub
xchg
sbb
rcll
mov
pop
mov
cwtl
pop
scas
out
das
dec
sub
adc
mov
shll
mov
add
leave
dec
in
push
push
or
call
cwtl
add
jae
xor
clc
or
pop
push
push
fstps
xchg
push
or
icebp
inc
outsl
lahf
cmpsb
push
in
jmp
in
adc
cmp
jp
mov
loopne
jnp
sbb
cli
inc
sbb
push
aad
inc
xor
mov
push
or
xor
fsubrs
insl
mov
mov
cmp
sbb
cmpsb
cmp
scas
call
mov
cwtl
fwait
jmp
test
cwtl
lock
pushl
add
ss
repnz
xor
jo
xorl
or
xchg
insl
push
mov
loopne
out
cmp
nop
jmp
daa
push
push
pop
sub
bound
xchg
push
add
and
or
pop
and
push
pushf
subb
fcomp
out
add
test
pop
jo
cmp
jo
adcl
or
les
and
adc
popa
sarb
dec
push
inc
add
push
inc
or
inc
or
loop
xchg
dec
mov
in
data16
or
mov
loopne
sbb
jmp
stos
clc
sbb
dec
mov
xlat
bound
push
int
imul
mov
xor
jo
inc
and
cmpl
add
add
fisttpll
lock
add
or
xor
add
xchg
push
sbb
mov
or
lock
add
push
push
cld
inc
jae
loope
mov
fucomip
add
mov
and
add
add
jne
mov
xor
daa
daa
cmp
fnstsw
dec
cmp
cmpsb
adc
movsb
cs
add
xchg
add
sub
jge
inc
mov
push
jo
fld
push
sub
add
add
loope
jne
pop
lods
je
and
sub
pop
int
leave
fs
shlb
lcall
push
ja
cmp
ss
loopne
adc
jb
testb
mov
or
xchg
daa
cmpb
and
xchg
inc
sbb
pop
or
and
pop
pop
arpl
aad
push
imul
hlt
or
and
push
sub
jb
pop
test
pop
sub
das
xor
shlb
push
lcall
push
fldl
movsl
rolb
adc
pusha
lods
fdivs
int3
mov
add
test
mov
xchg
dec
and
cmp
sub
test
adc
and
and
shll
rclb
jne
and
and
sbb
sbbb
push
or
xchg
push
or
sub
jns
sbb
cmc
inc
sub
stos
hlt
rcl
js
stos
and
sbb
test
push
sbb
jmp
dec
scas
mov
and
add
add
bound
inc
mov
xor
push
lock
xor
fs
sub
jge
bound
inc
cmp
jne
adc
jbe
or
dec
in
add
fimull
push
and
pop
and
xor
push
mov
mov
in
pop
push
add
in
loopne
test
cmp
mov
cmp
add
push
aam
push
mov
push
jo
xlat
sub
sub
add
test
adc
sarl
cld
inc
mov
lods
pop
dec
movsb
stos
pop
data16
cs
in
inc
or
aaa
or
sti
inc
inc
cmp
pop
jns
xor
das
sub
mov
imul
test
mov
or
loop
nopl
shlb
add
add
pop
int
jmp
jne
and
pusha
mov
and
and
aaa
adc
push
adcl
sub
stc
dec
push
mov
xorb
fsubrp
jb
pop
rolb
xor
lock
cmc
mov
mov
test
push
inc
pusha
lahf
and
leave
push
mov
jno
dec
cmp
mov
cmpsl
mov
fmuls
mov
int3
mov
fsubl
push
outsb
xchg
xchg
pop
test
push
sbb
sub
scas
pop
mov
add
add
xlat
or
lock
xorl
cli
jp
ret
sbb
sbb
mov
bsf
push
fmull
xchg
pop
pop
push
push
pop
push
inc
mov
je
loopne
dec
add
pusha
push
jo
ret
aam
or
adc
leave
popf
push
test
add
lahf
xor
pop
out
rcll
stos
mov
mov
testb
imul
lea
gs
pop
or
inc
xchg
and
xchg
je
cmp
xchg
movsb
inc
add
and
xchg
cmp
cltd
cmp
fdiv
fucomip
inc
imul
loope
sbb
sbb
cmp
or
ds
xor
popa
ss
jmp
sub
xor
dec
push
pusha
add
gs
jg
loope
xlat
data16
bnd
adc
lods
fldcw
or
xchg
nop
je
enter
fmuls
rclb
inc
xor
cmpsb
ds
cmp
pushf
add
imul
xor
pop
inc
pop
pop
add
fldt
push
imul
pop
or
js,pt
lods
fbstp
xchg
mov
or
mov
push
sbb
and
fldt
xor
es
adc
mov
pop
test
js
pop
mov
fadds
ficomps
or
adc
je
push
out
and
push
aaa
fmuls
nop
in
add
ret
inc
lahf
add
pop
xor
int3
sub
push
add
push
loopne
xor
js
or
pop
lock
hlt
bound
sar
loop
je
aam
lock
or
and
pop
out
loope
fistl
nop
cmp
sub
push
fcoms
push
push
testl
mov
xor
ret
jmp
cld
jb
outsb
int
pop
in
hlt
je
mov
add
pop
pushf
inc
lret
movnti
sbb
decl
scas
outsl
or
xor
dec
mov
xchg
add
shlb
add
mov
adc
cli
sbbl
push
and
cs
push
push
es
ret
push
pusha
popa
add
adc
add
faddp
sbb
icebp
inc
xchg
push
add
negb
adc
xchg
js
or
in
mov
ret
pusha
mov
cwtl
lea
inc
lods
pusha
fimull
or
pop
nop
daa
movsl
jne
lahf
push
sub
sub
adc
mov
flds
or
cmp
jge
mov
push
pop
popa
js
push
adc
or
lods
inc
cmp
rclb
iret
aas
mov
pop
cmpsb
push
notb
pop
test
add
xor
dec
orl
jbe
mov
xorb
xchg
sbb
adc
fsubl
inc
cltd
shll
les
loopne
inc
mov
dec
loop
sub
and
push
xor
jmp
sub
and
pop
cmp
mov
outsb
or
push
mov
cmp
jne
rclb
daa
xor
pop
movsl
push
je
in
cmp
lock
mov
dec
cmp
mov
je
int3
movsb
lahf
or
pop
mov
push
pop
jo
lods
icebp
or
in
add
insl
jmp
cmp
fwait
dec
add
cmpsl
sub
test
sar
adc
dec
jo
mov
push
jne
lret
xchg
stos
bswap
sub
mov
sub
cmp
mov
inc
add
ds
pop
fs
sbb
clc
scas
jne
cmp
lret
inc
loopne
loope
dec
cwtl
ja
sti
jne
inc
add
fldl
call
jmp
fucom
aas
sbb
ret
jmp
fs
das
loop
jl
mov
orl
add
add
adc
leave
add
or
testb
mov
ljmp
mov
add
movsl
lock
pop
add
mov
loopne
cs
or
sub
pushl
xchg
jg
jo
pop
test
cmp
cmpsl
mov
test
jnp
mov
cltd
loopne
in
pop
paddsb
push
ja
inc
push
aaa
pop
into
xor
push
jmp
pushf
push
and
insb
push
and
fwait
test
andb
mov
stc
xchg
sbb
jmp
pusha
stos
mov
xchg
xor
push
mov
or
add
push
adc
cmpsl
into
stos
aas
mov
cltd
sbb
imul
cmp
pop
sbb
ret
and
mov
maxps
jmp
scas
rclb
jmp
loope
jge
sub
jne
or
addb
or
sahf
mov
leave
sub
js
addr16
dec
imul
and
test
leave
sub
aaa
xor
fisubl
stc
cmp
call
mov
mov
mov
clc
daa
stos
push
push
cli
mov
sarl
push
leave
stc
loope
pop
jns
out
pop
add
pop
sub
sahf
out
arpl
repnz
xchg
sahf
jmp
es
nop
fsubrs
popa
cli
pop
push
push
into
lea
dec
iret
mull
cli
lock
push
pop
lock
adcb
push
add
mov
and
pop
cmpl
insb
add
ret
int
cmp
dec
test
mov
jb
or
data16
fisttpll
or
push
adc
push
xorl
sbb
pop
mov
ds
jbe
add
mov
sub
shll
daa
pop
test
ds
imul
lret
sbb
out
lds
int3
js
push
push
xlat
rcrb
inc
or
or
inc
or
xor
test
or
leave
push
inc
adc
dec
addb
lcall
pop
stc
pop
fildll
addr16
js
xor
sub
iret
les
mov
or
push
adc
cltd
repz
pop
shlb
xor
addb
and
push
xchg
push
test
scas
or
or
rcll
mov
xorl
pusha
ja
movsb
push
mov
mov
sbb
movd
and
or
push
aam
sbb
or
jp
lods
or
adc
mov
je
mov
dec
push
or
mov
lods
sbb
scas
test
inc
lods
loope
add
xor
dec
cmp
jne
mov
mov
xor
inc
mov
jno
arpl
lss
ss
icebp
or
jno
arpl
jo
push
fbld
add
and
sbb
or
sbb
movlps
ljmp
cmpl
mov
and
je
dec
pusha
shlb
into
jmp
mov
pop
lret
sbb
loope
mov
fwait
add
fldl
mov
add
and
in
jmp
fsubrl
frstor
aad
and
mov
xor
add
add
orb
imul
dec
xor
cmp
outsl
xchg
lock
inc
orl
inc
dec
movsb
sbb
mov
daa
sbb
jae
jmp
jno
shlb
mov
movsb
mov
and
push
or
jle
ret
or
xor
inc
leave
mov
dec
sub
or
mov
mov
jmp
inc
fmuls
push
jno
test
sub
ret
sarl
je
xor
ljmp
push
popf
add
outsl
sbb
mov
aam
je
ja
xchg
adc
sbb
push
jge
test
ja
jbe
jecxz
inc
clc
sub
and
das
jbe
or
sbb
dec
jne
loop
inc
mov
push
movsb
cmp
sbb
jl
mov
adc
icebp
mov
cmp
fldt
mov
mov
into
pop
je
push
cmp
or
or
pop
cmp
imul
and
pop
xchg
ret
jmp
cmp
shll
mov
lods
addb
test
push
loopne
push
daa
subl
pop
into
data16
adc
pusha
ud1
addb
add
or
fsubs
pop
inc
inc
mov
cmp
js
mov
popa
mov
sub
out
and
dec
sbb
call
jo
push
or
push
sbb
adc
jg
add
enter
sub
pop
ds
js
shlb
cld
int3
pop
mov
xor
sbb
lahf
adc
inc
lock
mov
add
lret
aas
fisubrl
adc
pop
fs
or
jmp
das
cmp
in
addr16
jl
push
adc
push
lea
sbb
sbb
aad
loope
adc
or
xor
enter
jmp
cli
pop
adc
inc
push
movsb
daa
cld
inc
sbb
mov
shlb
sbb
adc
int
push
lods
sub
jmp
mov
inc
mov
mov
sub
push
lods
les
cmp
xchg
cmp
into
faddl
arpl
push
into
in
lock
incb
insl
add
xchg
cmc
adc
test
lret
leave
arpl
je
add
push
rolb
loopne
push
xchg
jecxz
insb
or
clc
xor
cmpsl
xor
sahf
and
push
adcb
dec
inc
sbb
cwtl
or
imul
dec
xchg
xlat
and
lock
aas
mov
dec
clc
and
adcb
orb
push
rcrb
rorb
dec
cmpsb
repnz
nop
aam
sbb
jg
mov
add
cli
and
test
sti
push
pop
cwtl
out
mov
imul
addl
xchg
push
and
int3
les
pusha
xor
adc
push
pop
pop
xor
inc
incl
xor
dec
xor
or
stos
adc
imul
xor
mov
shll
scas
push
xor
lea
sub
sbb
push
pusha
fnsave
cltd
pop
or
and
jp
inc
loop
adc
push
fisttps
lock
mov
inc
lret
or
add
mov
xchg
push
hlt
mov
adc
jmp
imul
in
or
fimull
scas
movsb
sub
push
jb
jge
push
pop
mov
orl
subl
rorb
sub
add
fmull
outsb
or
adc
adc
les
ret
jb
and
add
pop
sub
cmp
add
adc
out
stc
aaa
xorl
jp
jne
scas
add
jbe
or
idivb
pop
hlt
jle
pop
and
mov
in
daa
fldt
mov
mov
out
ret
inc
lcall
lea
cwtl
sbb
jl
pop
cmpsb
mov
stc
add
mov
push
popa
add
popf
bound
xor
fs
sub
pop
dec
mov
xadd
push
or
cmp
push
adc
rcrl
popa
cli
xorb
add
loopne
jae
mov
dec
fdivr
xor
mov
mov
adc
add
adc
push
or
add
pop
jne
pop
cmp
pop
lock
out
adc
sbb
pop
lret
and
sbb
fwait
xchg
adc
pop
dec
mov
push
jl
repz
lods
adc
stos
test
invd
push
or
addr16
xchg
pop
push
ret
and
or
or
je
inc
adc
pusha
jecxz
orb
fldl
test
lds
arpl
mov
cmp
je
inc
push
jne
sub
sahf
ret
lods
cmp
movsl
out
out
repnz
shl
insl
inc
call
push
xor
sub
and
push
ds
add
mov
fisttpl
and
push
and
mov
pmaxsw
ds
jo
cmp
push
mov
dec
add
adc
loopne
cmp
enter
push
stc
adcb
inc
clc
inc
adc
andl
push
xchg
inc
add
jl
and
mov
sbb
adc
push
and
sbb
mov
nop
js
push
mov
sbb
add
mov
and
insb
cwtl
adc
popf
xchg
add
insb
jne
cmp
and
sbb
cmp
sub
je
adcb
inc
bound
enter
dec
xlat
push
push
push
add
repz
xor
cmpsb
loope
aas
add
jne
in
je
inc
or
call
imul
dec
jmp
stos
or
xor
or
enter
dec
mov
sarb
xchg
inc
sbb
shlb
sbb
adc
aad
sub
int3
push
push
cld
mov
or
fwait
lods
add
roll
shlb
call
mov
bound
ss
push
add
add
and
push
fbld
pushf
and
mov
pushf
and
rolb
test
into
idiv
inc
add
mov
dec
or
cld
dec
aad
mov
dec
add
and
jp
or
dec
ds
mulb
decl
test
flds
in
aaa
movsl
test
mov
sbb
repz
fsubrs
dec
push
dec
out
and
inc
decb
lock
or
rolb
push
mov
push
aas
adc
fs
xor
bnd
mov
lods
test
inc
fidivs
jb
dec
clc
xor
adc
fnstsw
out
dec
mov
ss
cmp
mov
mov
cmp
add
lea
inc
adc
add
and
add
clc
test
sbb
and
or
cmp
add
mov
rorl
jno
sub
jge
rolb
and
cmp
add
adc
je
jle
push
and
sub
pop
es
or
pop
sbbl
mov
or
jne
les
mov
test
dec
fdivrs
fcoms
pop
sti
cltd
add
push
test
or
imul
andl
mov
mov
les
cmp
or
inc
jae
in
lar
dec
ret
push
xor
icebp
lret
cmp
cmpsl
out
adc
xchg
sub
xorl
inc
test
sub
adc
cmp
pop
popa
push
test
lods
adc
xchg
rcrl
jo
ds
push
ljmp
jo
or
adc
xabort
add
mov
pop
sbb
movl
das
sbb
adcb
and
inc
loop
and
loop
or
or
lock
pusha
ret
sbb
jo
in
je
pop
ret
cmp
inc
pushf
mov
stos
adc
push
js
cltd
bound
popa
int3
xchg
jl
jnp
xchg
and
sub
inc
adc
pop
test
or
push
dec
xor
aaa
sub
sbb
popa
cmp
cmp
mov
fld
adc
outsl
xchg
movsb
xor
shll
pushf
sbb
xor
bound
mov
in
sub
fs
or
test
mov
clc
and
sbb
add
mov
push
pop
add
ljmp
jno
cmp
xor
pusha
add
je
mov
test
and
cmp
pusha
aam
adc
aas
push
add
push
inc
or
xor
sbb
jl
cmp
add
jo
movsb
ret
leave
jecxz
lea
xor
inc
in
adc
cmp
aas
add
or
pop
inc
pusha
sub
test
out
sarb
mov
adc
outsl
add
fistpl
jl
pop
leave
add
mov
inc
xor
sbb
mov
insb
inc
mov
popa
mov
daa
cmpsb
test
movl
ja
add
xchg
adcl
add
sbb
push
dec
bound
xchg
cmp
xchg
mov
test
fimuls
outsl
jl
mov
cmpl
andb
and
bound
cmc
out
mov
les
inc
pop
dec
fcomps
in
rcrb
inc
or
call
mov
mov
pushf
inc
push
arpl
xchg
xor
and
sti
arpl
test
clc
pop
dec
pop
cmp
aad
test
or
ja
imul
sub
jp
xchg
mov
pop
add
test
xchg
std
fwait
sbb
mov
dec
je
sub
je
dec
xchg
fisubrl
push
cmp
lret
pop
lock
pop
ja
loop
adc
inc
shlb
xchg
shlb
sahf
fdivl
sahf
adc
dec
xchg
imul
push
xor
add
or
xchg
hlt
sbb
push
cmpsb
pop
std
or
inc
push
ret
test
ds
je
xor
leave
int3
sub
out
or
inc
push
pop
ret
es
iret
and
cld
sbb
xor
sub
adc
push
and
decb
loope
roll
xchg
sub
sbb
shr
mov
fwait
cli
outsl
jo
inc
das
in
aam
je
jbe
je
or
xor
idivb
aam
hlt
icebp
lods
popf
lret
sahf
or
stos
rolb
push
adc
push
iret
cmp
out
sbb
pop
sbb
rorb
or
ret
mov
add
push
ss
ret
addb
ret
and
add
je
xchg
inc
sub
add
cmpb
or
pop
pop
ficoms
sub
in
mov
je
push
jnp,pt
xor
into
or
dec
test
push
xor
adc
test
dec
lods
repnz
jmp
ds
inc
pop
jmp
sbb
fdivrl
je
fisubs
add
loopne
lahf
pop
sbb
loopne
pop
cmpsb
adc
sbb
and
inc
shlb
cmp
xchg
and
pop
das
jmp
int
add
or
fcomps
roll
mov
cmp
test
and
sub
or
add
xchg
jmp
mov
jnp
cmp
add
mov
cs
or
ret
pop
rcll
popl
cmp
jp
addl
or
and
dec
pop
jnp
inc
lcall
rorb
mov
inc
push
xchg
aad
loop
push
mov
mov
add
lret
cld
fwait
test
pusha
jle
add
push
or
sub
jne
adc
xchg
jmp
and
loop
jo
or
movsl
push
cmc
mov
mov
sbb
ret
jge
imulb
cmp
adc
sub
mov
fmulp
push
or
loopne
mov
adc
sbb
mov
shlb
jae
clc
testl
ja
adc
add
dec
cld
xor
and
adc
sbb
adc
add
mov
jl
inc
sub
inc
dec
std
hlt
add
or
mov
jp
push
dec
push
jl
fadds
jle
inc
stos
or
mov
ja
rolb
pop
jo
rolb
or
mov
into
enter
dec
and
shlb
andl
adc
outsl
or
adc
popa
sub
fadd
test
xchg
les
mov
out
aaa
adc
icebp
pop
pop
dec
cmpsb
cwtl
cmp
test
jns
jle
sbb
data16
in
xor
cmp
pop
mov
pusha
push
sbb
xor
xchg
mov
adc
cmp
inc
mov
mov
fists
push
or
or
and
mov
push
pop
mov
cmp
mov
inc
int3
popf
mov
adc
movsb
adc
add
aad
jg
iret
push
sbb
or
icebp
adc
cmp
add
adc
push
aam
adc
push
fsubs
cmp
xorb
pop
cmp
cmpb
dec
cmp
fwait
jb
add
daa
popf
decl
and
roll
fidivrs
cmc
push
mov
jge
sarb
lret
add
in
mov
push
dec
xor
popa
popf
inc
jno
push
incb
sbb
jle
jno
pushf
movsl
sbb
stos
call
cmp
jne
cmp
rorb
fs
sub
mov
lods
lock
sti
stc
ret
inc
xchg
push
or
enter
fmull
xchg
and
addr16
mov
mov
cmp
push
mov
sbb
xchg
push
jmp
dec
cmp
push
xchg
push
push
push
sbb
js,pt
lods
add
xor
mov
push
add
sub
sbb
push
pop
cmp
mov
sub
jl
aam
xor
adc
add
jo
cmp
push
xchg
int
xor
jmp
adc
cmp
add
nop
or
mov
adc
xchg
mov
mov
rolb
inc
and
adcb
icebp
and
mov
xor
jae
push
push
push
cmp
jne
ss
xor
outsl
fwait
add
push
push
das
je
xor
mov
sbb
cmp
inc
sub
push
inc
dec
in
xchg
push
and
mov
fs
adc
lret
pop
test
mov
into
xor
aaa
test
movsb
push
mov
bound
xlat
out
and
lods
int
loope
mov
push
das
pusha
fnsave
flds
lock
addl
add
mov
push
pop
in
aaa
mov
jne
mov
adcl
jmp
cmp
or
cwtl
jo
and
cmc
cmp
cmp
test
aam
jns
js
aaa
mov
jo
inc
jl
pop
or
mov
pop
pop
push
adc
push
xor
inc
fisttpl
and
add
test
mov
sub
xorb
mov
sub
pushl
jle
enter
aas
in
adc
dec
or
fnstcw
movb
je
lret
and
mov
xor
in
or
add
push
adc
sbb
int
jge
cmp
pop
popa
xchg
sbb
test
imul
les
cmp
ficomps
je
push
in
insl
movsl
fs
sbb
add
fadds
cmpsb
or
les
pop
movl
fisubrl
sbb
pop
loopne
mov
lahf
mov
scas
arpl
pop
pop
andl
loope
jp
lahf
or
nop
pusha
daa
sbb
es
loope
inc
dec
sahf
xor
xor
cmpl
jle
rol
push
sub
fwait
rolb
mov
loopne
dec
cmp
iret
sbb
or
adc
add
inc
dec
out
sub
stos
cs
adc
push
rclb
add
dec
mov
dec
insl
xchg
push
jb
fs
mov
mov
pop
adc
pusha
fstl
test
jo
ljmp
mov
movl
inc
dec
and
bound
adc
add
stos
loope
orl
mov
fiaddl
in
and
lods
xor
and
mov
gs
scas
pop
mov
push
loopne
insl
shl
in
lock
js
pop
adc
pop
mov
dec
add
cld
xchg
daa
sbb
cwtl
movsb
mov
sub
jns
add
add
push
xor
mov
add
mov
or
lret
push
ds
add
ja
je
sub
mov
cmpsl
push
and
push
or
dec
mov
dec
insb
frstor
ja
je
xor
rcrl
popa
leave
movsl
leave
add
testb
push
or
cmpb
insl
jmp
inc
and
add
push
lods
dec
fwait
dec
stos
repnz
push
sub
int3
adc
imul
mov
and
imul
push
in
inc
je
or
jbe
cmp
xor
es
pop
push
mov
jmp
push
mov
jbe
ret
lock
cltd
fsubs
cs
clc
mov
sub
je
insb
jne
mov
je
popa
xchg
lcall
inc
scas
push
jmp
push
ret
cmp
outsl
lret
imul
sti
and
adc
enter
fisubl
push
cmp
bound
xchg
cmp
or
jne
mov
fisttps
adc
or
int3
jp
andb
push
lock
aad
sub
jecxz
gs
or
xchg
enter
jae
fimuls
xchg
out
push
insb
push
sub
and
fldcw
aaa
pop
pop
lds
jae
in
mov
pop
cmpsl
scas
fcmovnu
aaa
pop
scas
mov
or
push
xchg
inc
xor
sub
loop
fsubl
imul
fisttpll
xor
inc
or
mov
xchg
ret
rclb
adc
dec
or
scas
dec
fwait
add
in
cmp
addb
jg
sub
xchg
adc
dec
test
icebp
jecxz
aad
rcrb
mov
push
popa
gs
dec
sbb
mulb
inc
ljmp
mov
and
inc
and
rcrl
cmp
jl
xor
sub
jp
ffree
repz
inc
outsl
jo
pop
lods
nop
loopne
mov
call
das
icebp
xor
and
inc
add
mov
xlat
mov
or
pop
add
or
adc
add
mov
mov
adc
scas
mov
sub
push
or
push
rorb
adc
adc
outsl
sub
and
js
push
arpl
xor
popa
test
mov
and
into
and
sub
cmpl
mov
jg
loopne
repnz
pop
pushl
mov
sbb
sub
pushf
cmp
sbb
pop
rorb
xor
push
les
ds
clc
iret
mov
and
iret
pop
fs
lock
add
rorb
or
sti
adc
rcrb
inc
sub
bswap
pop
adc
push
lods
fmuls
xor
sub
pushf
dec
or
push
movsl
push
add
shll
push
sbb
or
cmpsb
cmp
mov
mov
sbb
jmp
insl
cmp
in
jno
xor
fisubl
pop
add
andl
push
adc
or
lcall
jle
pop
ret
or
jo
rolb
or
cmpsb
sbb
ficoml
inc
and
shlb
mov
mov
sub
shr
sub
mov
adcb
test
inc
daa
xor
leave
adc
sub
mov
xchg
or
sbb
sbb
pop
push
xchg
sbb
mov
andb
icebp
push
sarb
nop
fs
shll
dec
sbb
push
xchg
and
shl
ss
inc
push
xchg
xchg
and
pop
sub
xor
ss
rcll
into
dec
cld
add
adc
jp
adc
inc
sub
mov
and
xor
add
sbb
test
in
ret
idivb
mov
push
lods
addl
and
cmc
lret
pop
dec
or
roll
dec
iret
jb
mov
inc
lea
push
sub
inc
add
out
cltd
insl
mov
or
movsb
pop
mov
mov
inc
sbb
inc
add
push
cmp
inc
inc
pop
adc
or
inc
jmp
dec
outsb
sbb
shlb
xchg
jo
in
mov
add
jle
jo
popa
sbb
push
movl
xchg
pop
pusha
test
xor
push
jo
dec
pop
add
xchg
sbb
dec
sub
push
pusha
orl
xchg
jns
mov
in
rorb
or
xchg
or
shlb
fldl
mov
je
xchg
add
mov
call
sbb
dec
loopne,pt
and
test
add
out
push
cmpsb
jno
pusha
cmp
add
gs
inc
or
scas
and
inc
inc
loope
sub
fwait
sbb
push
cmp
sbb
aaa
push
testl
xchg
mov
mov
out
pop
push
sub
or
call
jbe
js
fadds
pop
add
push
dec
pop
xchg
dec
push
and
lcall
into
inc
jne
int
insl
pop
jge
dec
sub
dec
mov
add
sub
add
pusha
or
adc
js
mov
add
ljmp
add
cmp
pcmpeqb
adc
scas
and
cmp
cmp
push
push
call
xchg
add
push
lea
push
dec
cmp
pop
cmp
sbb
pop
pop
sub
push
mov
inc
rclb
mov
jne
inc
sbb
xor
xor
sub
cltd
out
sahf
sub
xor
xor
xchg
cmpsw
dec
lock
cmp
and
pop
and
mov
or
xlat
pushf
push
js
fsubl
jmp
xor
sbb
sbbl
lret
popa
dec
push
rcrb
xor
cli
push
sbb
sbb
inc
or
adc
imul
hlt
test
or
add
push
ret
aam
ret
jno
and
scas
add
pop
cmc
or
cmp
pop
adc
mov
or
xchg
push
adc
aaa
dec
sbb
adcb
sbb
je
ficompl
mov
push
inc
sbb
push
mov
push
and
xchg
fmuls
loopne
inc
js
mov
cmp
call
mov
sub
int3
dec
adc
clc
pushf
mov
and
ret
mov
xor
and
add
sbb
pop
je
push
sbb
rcll
xor
popa
lea
rol
pop
test
or
add
mov
pusha
sbb
or
cmp
movl
dec
inc
in
test
fldl
push
je
push
xorb
xor
pop
and
testl
xlat
inc
pop
test
arpl
dec
rcrl
ja
mov
adc
outsb
ret
cwtl
ss
push
cmp
or
outsl
test
jo
inc
add
jne
pushf
pop
mov
std
sub
les
sbb
ret
sarl
xchg
and
sbb
rclb
mov
and
addb
add
add
and
int
mov
pop
test
and
je
or
dec
inc
xchg
or
nop
daa
mov
sbb
add
inc
or
mov
adc
xor
push
add
adc
push
sbbb
add
or
xor
push
add
std
jnp
or
mov
add
mov
push
adc
enter
mov
cmp
xchg
nop
cwtl
inc
mov
xchg
mov
cwtl
and
xchg
outsb
push
jb
ljmp
lock
cmp
lods
push
repz
add
jbe
movsb
ret
sbb
xor
rolb
lods
roll
push
sbb
faddl
call
or
mov
outsb
mov
inc
mov
hlt
roll
inc
fs
orps
xchg
sbb
inc
adc
and
daa
cs
aas
adc
jno
push
add
mov
dec
fstpl
dec
ret
xchg
testb
adc
hlt
xchg
cmp
loop
ljmp
mov
fcomi
adc
add
test
jmp
lock
mov
pushf
xlat
cmp
adc
mov
mov
loopne
sub
jl
les
push
inc
sub
std
dec
sbb
mov
in
xor
jecxz
push
test
mov
les
into
popf
mov
loopne
adc
les
nop
pop
repnz
mov
neg
inc
push
nop
call
mov
addr16
shrb
lcall
fs
addr16
sub
loope
loope
loopne
fists
pusha
lret
popa
xchg
popa
fsts
fcoms
and
lahf
and
xchg
test
mov
and
sub
sbb
sbb
xor
dec
mov
sub
jne
adc
arpl
sbb
fildl
lock
mov
push
sub
aam
sbb
jb
mov
pop
or
sbb
push
push
xchg
and
hlt
popa
stos
xor
mov
jmp
sbb
jge
and
enter
inc
sub
jns
mov
xchg
sub
add
lods
sbb
push
je
and
add
adc
enter
xlat
cmp
push
jl
mov
jmp
xchg
loopne
xor
xchg
cmp
sbb
jl
inc
add
sahf
faddl
rorb
add
dec
mov
add
fs
xchg
xchg
push
pop
and
shlb
js
add
int3
orl
adc
mov
jmp
xchg
add
rolb
or
or
cmp
inc
push
push
cld
and
and
mov
push
lret
and
fsubrl
jo
mov
sarl
rcrb
mov
divl
lods
es
or
sub
xor
popa
test
push
sbb
xor
outsb
loopne
xor
pop
int3
test
scas
or
leave
andb
pop
or
pop
xor
pop
sarb
adc
jle
outsl
or
aad
or
add
push
out
pushf
ror
inc
sbb
adc
sbb
repnz
in
push
push
push
add
les
jbe
shrl
scas
sub
sbb
stos
add
sbb
mov
push
rclb
and
inc
pop
mov
adc
rcr
push
add
cs
or
pusha
je
mov
push
or
push
or
inc
les
jle
addb
mov
mov
sahf
or
jl
mov
hlt
inc
xlat
les
and
push
das
insl
xchg
sub
rolb
mov
es
lret
fidivl
idivb
sub
inc
ret
shlb
int3
cs
sub
cmp
adc
sbb
or
and
clc
sub
sbb
push
imul
test
adc
sbb
mov
cwtl
cmp
mov
fdivs
movsb
jns
in
mov
clc
mov
mov
jbe
fcoml
jne
jle
lea
bnd
bound
mov
adc
mov
adc
inc
es
and
jne
push
inc
sbb
sti
rol
fwait
jp
jne
adc
jb
or
into
rolb
push
lahf
adc
push
ret
subl
cmp
inc
cmpsb
add
fstpt
add
or
sti
add
push
ret
daa
xor
rclb
jge
jecxz
out
je
mov
ret
call
bound
jmp
ss
sub
js
sarb
xor
shrl
jmp
and
test
mov
or
les
pop
daa
mov
sbb
dec
and
pop
xor
pop
mov
add
fdivl
add
popf
cmpsb
ss
xchg
insb
mov
int
push
push
fldenv
sub
addb
ret
add
pop
xchg
mov
fcomps
adc
lahf
lds
shlb
cld
jo
sub
push
lcall
aad
neg
das
test
mov
push
mov
xchg
rcll
jl
pop
and
and
leave
lods
push
xorb
les
loope
adc
loopne
dec
sbb
popa
shl
fisubs
jmp
lods
ret
xor
faddl
push
and
in
and
fcoml
adc
nop
and
or
in
xchg
incl
insb
mov
sbb
mov
rclb
push
lds
or
push
xor
dec
stc
pop
sbbb
hlt
push
add
and
and
push
inc
and
in
imul
inc
pusha
cwtl
iret
add
out
inc
push
cmp
mov
aaa
adc
sarb
lock
ss
lods
test
inc
inc
sub
push
ds
outsl
push
add
mov
or
insl
sbb
jo
push
adc
je
inc
mov
scas
pop
mov
add
dec
pop
cmp
push
aam
inc
pop
bound
shrl
and
pop
jbe
insl
ret
dec
and
in
je
xor
xor
pop
xor
or
jb
push
movsl
loopne
adc
clc
cmp
clc
rol
rcr
dec
mov
cmp
mov
lock
sbb
add
push
push
fisttpl
negb
add
aas
in
jo
push
cmp
inc
rcrb
cmp
mov
stos
sbb
leave
or
rol
es
push
sub
add
or
pop
dec
sarl
rorl
call
inc
adc
nop
dec
add
and
sbb
jno
xorl
inc
push
ja
out
mov
not
rol
and
mov
scas
call
mov
jmp
jnp
inc
addr16
ret
add
and
and
and
mov
xlat
ret
sbb
push
adc
pusha
push
add
mov
push
xchg
iret
pop
lret
outsb
mov
aaa
mov
xchg
addb
jne
xchg
loopne
jo
popa
xchg
mov
mov
or
mov
outsb
adc
popa
nop
add
imul
or
ss
cmc
in
cmp
add
loop
jbe
jmp
push
or
clc
clc
cli
mov
js
sbb
test
les
inc
mov
sub
pop
push
lret
cmp
jbe
insb
jecxz
dec
dec
dec
adc
jae
ret
sbb
mov
fdivrs
pusha
push
enter
mov
movsl
cli
rclb
sub
push
inc
add
jp
pop
or
add
dec
adcb
add
orl
adc
push
add
ficomps
int
stos
push
ret
js
mov
xor
into
andl
or
push
ja
sub
shlb
movsb
or
mov
add
jp
sahf
pop
das
mov
mov
pop
dec
pop
jne
mov
inc
mov
or
and
and
or
mov
cmp
push
cltd
adc
gs
iret
or
add
pusha
loopne
into
add
les
or
jo
dec
loopne
pop
adc
sub
pop
push
push
adc
mov
pop
xchg
dec
enter
adc
jmp
jnp
clc
xor
push
call
mull
dec
sbb
add
dec
sub
repz
or
add
shrl
aam
mov
adc
xchg
pushw
cltd
mov
dec
rol
sbb
enter
mov
adc
pushf
or
ficompl
push
fadd
xor
fwait
insl
mov
cld
je
add
inc
rcrl
push
lea
repz
push
mov
sbb
mov
mov
xor
lock
push
adc
ret
call
pushf
fs
mov
pusha
xor
stos
pusha
cmp
jmp
arpl
fdivrl
sub
lahf
lea
hlt
or
repnz
mov
or
pop
xchg
mov
push
sub
xchg
rclb
enter
leave
and
adc
or
jae
sub
dec
lea
and
jbe
and
mov
and
push
or
add
or
ds
xchg
xor
lea
xchg
movsl
cs
jne
fistpl
out
loop
in
push
adcl
adc
or
ret
or
cmp
and
push
jne
sub
dec
push
sub
pop
lods
inc
insl
loope
popf
call
xchg
push
loopne
les
iret
imul
outsb
scas
lea
push
pop
stc
lahf
sub
loopne
andl
jecxz
pop
dec
add
cmpb
add
es
jle
pushl
xor
and
jp
imul
add
mov
lret
dec
popf
clc
mov
xchg
dec
cmp
in
and
test
data16
add
push
pop
es
xor
and
or
popa
or
mov
xchg
or
sarb
inc
lea
xorb
adc
push
js
inc
jle
or
insl
inc
mov
push
movsl
xor
jecxz
ret
les
mov
call
adc
pop
jo
stos
cmp
pusha
or
mov
lret
imul
rclb
cmp
sub
add
test
jp
decb
jne
movl
and
cmp
or
inc
cmp
imul
bound
add
lds
sub
nop
sbb
cmp
add
push
icebp
cmp
pop
jmp
jnp
mov
orb
add
imul
and
jge
aaa
push
repnz
adc
cmp
xor
imul
nopl
pop
xchg
sub
cmp
jl
cmp
xor
filds
cmp
jg
push
push
add
pop
ret
sub
push
rdtsc
inc
inc
cmp
jge
dec
or
pop
testb
xchg
add
mov
sbb
add
inc
add
mov
test
and
sbb
mov
fisttpll
inc
jp
leave
xor
inc
inc
jl
mov
ret
inc
jmp
jmp
test
push
stc
clc
jmp
shrb
pop
inc
inc
inc
jnp
adc
cmp
push
fs
push
pusha
and
or
ljmp
test
test
mov
push
leave
arpl
gs
mov
jne
sbb
mov
sbb
xor
stc
push
mov
arpl
adc
and
lods
xchg
inc
sarl
pop
and
xchg
lcall
add
adc
gs
xor
cmp
ds
clc
dec
and
andb
sbb
shll
psrlq
adc
dec
sub
movsl
or
push
shlb
xor
hlt
pop
push
sub
jmp
insl
adcb
or
push
sub
in
xor
adc
aas
pop
push
jns
add
dec
jns
jg
out
inc
mov
in
dec
add
mov
ds
xchg
das
fdivs
movsl
xchg
add
xor
loopne
negl
shr
xchg
cld
pop
or
inc
fadds
lahf
adc
add
pop
push
inc
cmp
cmp
mov
push
test
cltd
add
or
xchg
mov
lods
add
add
push
xchg
andl
les
fwait
adc
test
fidivs
dec
cmpsl
mov
jne
js
xchg
rclb
xchg
dec
out
lcall
or
fsub
cmp
adc
mov
lods
loop
cmp
fidivl
dec
push
push
js
xor
pop
adc
inc
ret
or
or
cmp
enter
daa
adc
ljmp
mov
pop
jecxz
xchg
pop
test
das
test
xor
jg
add
loopne
jg
inc
mov
push
inc
dec
and
daa
clc
lods
leave
cmp
inc
or
test
xor
xchg
les
jl
xor
repz
insl
arpl
sub
aaa
mov
jecxz
jmp
adc
hlt
and
adc
push
mov
push
loop
push
mov
cld
ds
ja
aam
enter
dec
inc
mov
dec
inc
ret
jge
add
stos
lea
inc
inc
out
lahf
dec
push
jo
fistl
jge
lret
outsb
jne
cld
xlat
shlb
lock
call
xor
lahf
cs
mov
sbb
enter
in
mov
and
push
xchg
jbe
push
rcr
mov
jae
fbld
dec
jp
or
stos
int
push
push
push
mov
aas
rol
aaa
mov
rolb
mov
out
shlb
in
xor
lcall
mov
xchg
pusha
or
shll
or
add
jp
mov
push
into
push
mov
jno
add
clc
add
push
test
inc
pop
mov
mov
push
pop
pusha
push
add
into
pop
xchg
push
or
lods
dec
xchg
and
dec
bound
push
adc
xchg
or
mov
faddl
cmp
push
ret
xchg
pop
xlat
pop
push
jmp
xchg
cwtl
icebp
pop
arpl
adc
jbe
sbb
push
sub
sahf
andl
sbb
iret
dec
sbb
push
push
push
or
mov
pushf
cwtl
xchg
jne
add
push
add
push
push
lds
movsl
popf
lahf
insb
push
jg
les
add
je
fcomp
pop
or
rcl
cmp
std
mov
outsb
xor
cltd
xor
adc
add
push
mov
jmp
add
fsts
add
ljmp
mov
pop
xor
push
dec
adc
mov
add
fsubr
sbb
inc
mov
mov
add
les
add
sub
cmp
cmp
js
cmp
mov
push
enter
scas
push
mov
adc
push
scas
jne
dec
repz
rorl
ret
or
inc
js
add
dec
movsl
addl
pusha
scas
xor
loopne
pop
xchg
adc
in
or
jl
fimuls
fcoms
or
add
mov
and
adc
and
addb
xchg
mov
mov
fs
mov
mov
push
mov
enter
pusha
loope
add
imul
sbb
ffreep
mov
push
mov
xlat
test
inc
sbb
rorl
push
jae
dec
cmovae
xlat
ljmp
adc
stos
and
push
sbb
popa
les
push
gs
jg
inc
push
decb
push
pop
dec
testl
pop
push
dec
mov
mov
and
mov
cli
sbb
daa
pop
jg
or
dec
dec
jb
add
or
or
nop
mov
clc
push
fsts
in
or
pop
stos
test
pop
inc
nop
or
es
sar
adc
sbbb
or
add
add
outsb
and
xchg
or
sbb
add
push
imul
outsb
pop
outsb
pushf
dec
sbb
mov
mov
mov
add
mov
dec
jl
outsb
bound
mov
add
pop
ljmp
push
sub
push
shlb
sub
nop
popl
or
adc
add
add
andl
xor
icebp
xor
idivl
fdivrs
adc
dec
lret
aaa
mov
sbb
or
fstps
push
js
mov
arpl
xchg
add
andb
sbb
pop
dec
stos
sub
sub
push
inc
loope
xor
mov
rorb
xchg
and
mov
or
dec
je
clc
nop
jno
dec
and
scas
pop
cmp
jbe
pushf
and
sub
rolb
and
push
dec
dec
aad
add
sbb
ds
add
mov
ret
push
stc
xchg
ret
sub
outsl
imul
inc
xchg
inc
int
sbb
inc
push
inc
pushf
aam
cmp
fisttps
push
adc
and
dec
or
mov
fsubr
push
and
mov
sti
jae
out
xor
mov
dec
es
mov
xor
ss
dec
xor
lret
ds
jg
mov
jae
mov
mov
or
jp
add
xchg
stc
filds
adc
push
xor
adc
in
jns
mov
test
mov
rcrb
stos
js
scas
js
or
inc
dec
cmc
or
dec
in
adc
jmp
test
loopne
test
jbe
xor
mov
lea
sub
cmp
jne
inc
aad
jne
push
test
adc
imul
in
mov
adc
jg
repnz
sbb
lock
inc
add
dec
jg
xchg
mov
mov
inc
add
cmp
inc
xchg
jnp
mov
and
or
aad
je
ret
sub
js
sub
inc
subb
or
daa
cmp
push
shlb
in
jns
dec
sahf
rclb
cmp
push
ficomps
clc
mov
orb
insl
lds
mov
loope
pushf
pop
pop
push
ljmp
sti
gs
sbb
or
das
or
pusha
inc
inc
pop
jmp
and
outsb
outsb
bound
pop
mov
mov
sbb
mov
and
or
lret
or
pushf
and
sub
jecxz
mov
fimull
and
inc
adc
cvtpi2ps
inc
aaa
xor
in
adc
add
push
adc
jbe
rcll
xor
dec
ss
sbb
insb
jl
loop
call
test
lea
cwtl
repnz
mov
dec
pop
pop
add
dec
sbb
push
ret
shll
sub
ror
mov
out
data16
adc
jge
push
adc
mov
jp
loope
addb
mov
inc
push
add
cs
jle
xor
sub
push
sbb
insb
sahf
sub
lea
test
rolb
mov
or
xor
xchg
lds
das
add
sub
lret
ret
sbb
push
scas
cwtl
test
test
cmpl
fmull
loop
cwtl
cmp
push
dec
sbb
pop
dec
cs
and
pop
inc
pop
les
aaa
sub
mov
push
mov
cwtl
mov
or
or
xchg
or
jmp
cmp
fldcw
dec
adc
push
push
js
push
pop
sbb
dec
push
sqrtps
int
push
je
ret
sbb
jo
dec
sbb
adc
push
insl
jne
mov
and
cld
or
ret
pop
adc
or
dec
inc
push
dec
test
jne
push
add
shrb
ret
push
cmpb
fsub
stos
xor
shrl
adc
cmpsl
xchg
mov
add
jo
adc
in
mov
clc
add
test
adc
xor
repz
push
or
inc
dec
add
sub
push
inc
pop
and
inc
dec
sub
das
test
cmp
in
pop
repz
add
mov
psrld
mov
dec
fadds
xchg
loopne
push
repz
sbb
add
pop
sub
cwtl
add
pop
pop
imul
adc
test
xor
mov
fwait
jp
arpl
push
sub
jno
leave
fcompl
icebp
pushf
dec
js
push
add
aaa
rcrl
repnz
adc
xchg
pop
dec
rol
inc
bound
cs
add
aas
ret
movsl
nop
mov
inc
jecxz
mov
outsb
jl
sbb
and
std
jge
xchg
testb
add
ficompl
es
push
mov
adc
dec
in
jl
aad
je
aam
inc
xor
enter
popa
and
push
lret
sbb
lods
addr16
lds
andb
jmp
mov
bound
mov
sbb
mov
aaa
scas
rcll
sbb
and
sbb
add
stos
xchg
mov
sub
sub
jl
into
cmp
cwtl
outsb
shlb
sub
pop
clc
daa
or
test
xor
enter
cmp
adc
mov
push
xor
repnz
shlb
jge
mov
adc
dec
push
and
inc
outsb
sbb
ja
fldl
push
sub
jbe
fdivr
fdivrs
js
ss
shlb
loope
in
xchg
add
mov
cmpsl
or
gs
jmp
mov
add
jae
addr16
pop
ljmp
lods
add
daa
fcomps
je
adc
cmp
imul
jb
mov
xchg
add
into
inc
popa
lds
mov
xchg
js,pt
repz
mov
icebp
movl
inc
in
mov
nop
or
lods
jo
mov
cmpb
jmp
stos
sbb
or
cmp
fcmove
cmp
mov
bnd
mov
cmp
les
in
mov
push
adc
dec
mov
stos
add
imul
rolb
dec
adcl
pop
sbb
xchg
sbb
test
push
xlat
jmp
add
aas
or
or
sub
pop
push
repz
sahf
or
cld
shlb
pusha
in
iret
ret
push
sbb
adc
fidivrs
mov
mov
and
jl
out
pop
mov
pushl
add
push
mov
sub
pop
sbb
mov
push
add
dec
outsl
aas
add
mov
pop
mov
dec
pop
adc
push
test
lret
xchg
pop
stc
mov
cmp
pop
adc
pop
sbb
sbb
push
nop
push
mov
push
lcall
loopne
cmpl
xor
pop
add
mov
cmp
inc
or
or
or
jmp
lods
pop
mov
jbe
test
pop
sub
xchg
jo
cmp
bound
jo
inc
mov
cmpsl
and
cmp
push
popa
push
cmp
addl
sti
dec
push
iret
push
loop
ja
xor
jle
pop
jbe
daa
rcr
lea
jno
lock
mov
test
lods
ret
popf
push
sub
jle
dec
cmp
pop
jle
push
add
mov
rorb
mov
jo
jb
push
fs
lea
mov
mov
inc
lret
add
sbb
pop
lret
xor
sarb
pushf
adc
adc
orl
adc
push
testl
add
and
mov
aad
mov
add
xorl
fisttpl
mov
mov
and
xor
cs
or
pushf
sub
cs
out
in
inc
fisubl
cwtl
data16
inc
sbb
jo
fsubl
test
iret
sbb
mov
movsl
iret
or
stc
adc
dec
js
push
mov
scas
shld
mov
xor
int
mov
adc
jb
xor
inc
mov
or
adc
inc
pop
adc
jge
pop
ss
test
push
jo
cmpl
cld
mov
mov
dec
mov
rol
inc
xchg
je
pop
popf
or
push
aaa
ja
inc
aad
lock
jp
pop
outsb
and
xchg
cwtl
mov
pop
xchg
pop
xchg
movsl
imul
enter
inc
rorb
lret
cld
std
cmp
xchg
mov
shlb
and
daa
stc
mov
fcmove
mov
push
out
or
sar
loopne
sbb
fcoms
ret
outsl
add
xchg
pop
lods
cmp
pop
lea
and
sbb
setns
aam
ljmp
inc
pop
clc
mov
sub
movb
add
test
push
or
cmpsl
push
inc
xchg
or
lret
xor
dec
dec
lret
out
rcr
jbe
push
sbb
add
and
inc
push
adc
add
mull
and
incb
mov
add
ljmp
stos
mov
adc
lock
enter
push
dec
out
rcrl
sub
push
push
imul
push
test
push
enter
pop
test
or
or
lods
and
ljmp
and
fs
adc
push
or
cmc
js
pusha
xor
popa
add
xchg
xchg
xchg
pushf
fmul
pushw
test
sub
or
jns
and
xor
inc
int
push
ret
add
sbbb
sti
jb
lret
out
bound
testl
inc
in
scas
fdiv
add
sti
out
adc
pop
push
mov
arpl
push
push
lods
jle
xchg
or
into
stos
mov
arpl
pop
inc
xchg
push
jae
icebp
in
adc
push
sbb
imul
insl
js
mov
adc
ret
scas
mov
mov
xlat
dec
bound
sub
mov
das
popl
push
loopne
pop
mov
aam
xor
push
cmp
adcb
gs
xchg
xor
and
test
inc
cmp
or
adc
mov
subb
fisttps
jae
or
jo
adc
inc
scas
push
icebp
out
inc
push
pop
daa
adc
and
inc
pop
mov
sub
push
dec
and
jmp
nop
shlb
cld
dec
clc
pop
or
xchg
cmp
cs
sub
insl
jmp
cwtl
cmp
xchg
ja
pop
cld
repz
arpl
jb
pop
sahf
xor
push
popf
roll
js
scas
mov
ja
and
fsts
mov
push
and
push
xor
add
dec
pop
dec
push
test
mov
mov
cmp
jg
xor
frstor
ds
or
adc
xchg
adc
and
pop
iret
mov
adc
adc
xchg
or
lock
shlb
aaa
mov
mov
or
or
movb
jg
push
lods
and
dec
aam
cmpl
mov
outsl
xor
jbe
insb
xlat
sub
adc
in
jge
xchg
xchg
pop
cwtl
imul
mov
daa
push
pop
inc
jecxz
mov
es
and
mov
or
mov
sar
add
loopne
js
jl
ss
adc
dec
andl
inc
addr16
popa
jecxz
adc
lods
cwtl
add
mov
adc
loop
push
ds
pop
cmp
adc
call
inc
sahf
add
or
inc
loopne
inc
xor
lods
cmp
test
push
outsb
shll
mov
dec
add
pop
xlat
movzbl
dec
xchg
xchg
shlb
pushf
pop
push
add
pop
setne
xor
mov
insb
add
out
adc
add
es
mov
or
aas
test
les
test
xor
push
jne
addb
ret
mov
jae
adc
jae
cmp
sub
ja
dec
loopne
adc
push
push
xchg
fsubl
inc
decl
iret
sbb
jne
pop
or
xlat
mov
push
int3
adc
pop
lock
shr
inc
cmpsb
mov
add
addr16
mov
aaa
jne
xlat
cmp
movsl
push
xchg
jne
push
mov
ret
call
add
add
iret
mov
lret
sub
push
push
lahf
xor
xchg
pop
adc
add
inc
arpl
mov
movsl
dec
lret
mov
xchg
loope
jnp
cmp
inc
js
popa
out
hlt
adc
imul
inc
or
nop
sub
mov
mov
pop
jl
jl
pop
or
xor
cmp
lcall
mov
jmp
repnz
rorl
jo
push
fcomps
pop
and
mov
loopne
arpl
mov
and
lcall
or
push
sbb
or
jnp
add
xchg
xchg
and
adc
sbb
dec
outsl
cld
loope
sti
push
push
fdivrs
call
xor
sub
in
mov
and
and
ss
xchg
xor
aas
sub
xchg
arpl
movsl
jp
lret
mov
js
push
jp
cmc
mov
push
mov
fdivp
incl
int3
fidivrl
rorb
adc
adc
cs
adc
pop
sahf
adc
sbb
in
cmp
inc
and
and
insl
pop
test
sub
sub
fs
in
pop
xor
int
xchg
mov
inc
lahf
or
aad
jmp
lcall
jge
cli
imul
push
movl
fwait
js
and
jl
test
sbb
inc
and
addb
lods
jbe
pop
insl
dec
xlat
enter
cmc
and
xor
and
cmpsl
pop
sbb
adc
push
dec
pop
jle
push
or
clc
or
comiss
fisubrl
je
or
add
cmp
lcall
sub
insl
in
mov
pop
scas
incl
dec
mov
vmread
add
mov
arpl
xchg
popa
xchg
and
sbbb
mov
mov
dec
into
mov
or
adc
cmp
and
dec
jp
sub
les
roll
push
and
testl
xor
ljmp
add
insl
and
xor
and
ret
push
imul
inc
push
lock
or
out
and
rcrb
mov
cmp
or
pop
push
ret
mov
push
lea
mov
push
mov
push
rolb
cmc
lcall
sbb
rolb
xchg
push
push
or
in
xchg
rcrb
sub
mov
incl
das
add
xor
adc
add
add
jmp
cmp
jns
or
and
mov
and
dec
ss
inc
or
xorb
arpl
imul
or
sub
push
cld
sarb
adc
or
scas
cmp
jne
iret
ss
repnz
in
jne
sahf
dec
jmp
jmp
or
ljmp
shl
bound
es
push
movsb
jmp
int3
nop
xchg
sahf
inc
js
cwtl
mov
cmp
mov
and
rcll
mov
push
push
dec
push
negb
xor
push
sub
xor
les
add
sbb
or
sub
clc
outsl
adc
adc
shlb
mov
adc
add
add
fildll
push
out
mov
iret
and
ds
push
cmp
outsl
adc
xchg
incb
icebp
mov
pop
rorb
pop
sub
jmp
outsl
jo
or
imul
adc
loop
push
push
jmp
mov
xchg
lea
fnstcw
shll
jne
pop
pushl
jge
or
bound
dec
scas
shll
or
inc
jbe
jno
sub
or
add
arpl
pop
sub
je
cmp
fs
or
or
mov
jo
jg
sbb
adc
test
test
dec
loopne
add
xchg
mov
enter
insl
shl
cwtl
pusha
mov
clc
adc
add
add
cltd
dec
aam
mov
imul
sub
add
push
xor
pop
sbb
cmp
pusha
test
mov
xchg
scas
xchg
adc
push
dec
sbb
sub
dec
or
push
xchg
dec
pusha
jo
mov
jno
mov
jno
rcr
jecxz
jno
fs
dec
and
ja
inc
add
repz
test
test
sub
dec
sub
sbb
mov
ja
push
test
push
jae
flds
inc
sub
push
push
sub
ret
adc
and
andl
dec
ret
xlat
bswap
xlat
mov
sbb
fs
mov
subl
int3
or
sbb
adc
inc
sbb
xor
or
pop
insb
sbb
add
shl
and
pop
les
push
mov
jno
add
push
lea
roll
test
sub
sub
and
dec
push
push
or
fstl
pop
adc
mov
fiadds
add
cmp
push
jmp
int
push
subl
and
ss
mov
mov
jle
adc
jo
adc
sbb
out
add
push
fmull
xor
lea
inc
mov
es
xchg
lret
xor
subl
jo
inc
lock
popa
cmp
mov
js
pop
push
xor
test
sbb
out
std
hlt
enter
and
loope
xor
ret
pop
xor
add
adc
cld
incl
add
lea
push
dec
cmp
insl
or
xchg
shlb
mov
add
mov
jp
add
cmp
add
add
shrb
icebp
jno
out
push
mov
nop
xor
dec
xchg
or
int3
and
xor
adc
lar
sub
sub
pusha
pop
push
mov
ret
bound
add
adc
and
add
xlat
push
popa
aam
lods
mov
add
add
and
popa
lret
clc
test
pop
leave
dec
aam
add
jge
mov
iret
and
cmc
xor
ljmp
mov
nop
or
adcb
js
ficoms
icebp
js
jne
dec
push
rorb
or
aam
aam
jp
mov
push
cwtl
push
ret
push
and
pushf
ja
mull
call
shll
mov
sbb
daa
or
pop
jle
add
push
les
icebp
dec
sti
inc
xor
and
test
out
adc
pop
popa
jl
pop
push
push
aas
push
inc
xchg
imul
les
cmp
inc
cmp
idivb
ja
sbb
cmpsb
ss
pop
in
outsb
push
shlb
sbbb
je
jp
sbb
mov
fcmovnbe
add
movl
push
addr16
insl
aas
add
cmp
add
js
imul
andl
rol
cmc
jmp
adc
rcrl
and
popa
push
xchg
or
mov
add
xchg
xchg
dec
push
or
xchg
daa
push
and
lods
popf
push
inc
js
cmovb
mov
pop
ret
add
loop
sbb
or
cmp
js
clc
out
je
jl
mov
jge
dec
lods
pop
mov
or
or
pop
xor
sub
data16
in
aad
pop
dec
mov
lret
cltd
sbb
lock
sbb
pop
mov
scas
and
adc
addr16
inc
dec
dec
or
jnp
sbb
dec
popa
and
pop
add
clc
out
pop
dec
jl
popf
sbb
std
and
and
or
and
or
jle
pop
outsb
loopne
xchg
sub
pop
lret
mov
mov
mov
add
mov
jp
sbb
mov
xchg
int
pop
xchg
or
push
in
scas
movsb
or
fldl
fstps
and
xor
add
xor
mov
xor
xor
addr16
mov
popa
sbb
cmpsl
mov
int3
dec
dec
pop
pop
dec
mov
lods
mov
loopne
testb
sbb
pop
or
inc
fsubr
call
push
push
mov
rcl
ud2
xor
push
mov
xor
jmp
iret
pusha
movsb
jns
inc
gs
mov
jge
ljmp
fcomps
xor
imul
push
or
lea
movsb
push
stos
xchg
cli
sar
inc
sbb
mov
out
adc
pop
dec
push
mov
rolb
sbb
je
test
inc
adc
mov
cli
jne
leave
subl
test
mov
sub
pop
jnp
aam
push
adc
xchg
jnp
jne
push
adc
jg
or
mov
divl
pop
or
je
push
add
or
push
cmpl
sbb
adc
push
sti
xchg
mov
jbe
loop
inc
jg
fistpl
jge
rolb
popf
dec
cmpl
or
ds
add
dec
inc
lods
je
ds
or
sub
push
lods
dec
xlat
adc
fdivl
dec
adc
push
pop
test
daa
cbtw
mov
mov
mov
pushf
movsl
jb
je
pushf
or
mov
mov
rorl
push
add
ljmp
ds
sahf
add
loopne
mov
je
push
xchg
in
fidivl
dec
test
push
fwait
sub
mov
ja
pushf
inc
stos
mov
adcb
mov
dec
adc
js
inc
cmp
cmp
dec
add
int3
sbb
pop
add
pop
int3
cmpsb
add
fs
bound
xchg
jnp
add
nop
cli
hlt
lea
xchg
negb
push
pop
jp
mov
ja
mov
popf
emms
jnp
in
mov
pop
dec
pop
pop
in
insl
mov
pop
push
inc
pop
xchg
daa
insl
mov
test
push
scas
insb
daa
out
fisubl
mov
imul
push
push
jge
dec
push
mov
push
enter
fs
movsl
pop
push
push
or
or
push
aam
cmp
jmp
inc
fadds
rcll
and
mov
sub
mov
mov
mov
insl
push
rcrb
daa
push
cmp
sbb
les
dec
fldt
mov
ds
add
loope
add
mov
jne
add
or
add
pop
mov
add
cli
notb
or
pop
sub
ret
and
pop
call
or
adc
mov
adc
shll
lcall
mov
adc
cmpsl
ljmp
int
sub
test
add
outsb
fidivrl
inc
js
mov
popa
pop
test
hlt
sub
clc
stc
or
jmp
test
sahf
push
inc
lret
aad
push
pop
lock
or
fdivrs
push
out
stos
test
mov
push
outsb
sbb
push
imul
subb
dec
jne
addb
xor
lea
cmpsb
jmp
or
and
add
aas
fsubrl
or
mov
pop
in
mov
sbb
out
adc
jge
or
loope
xchg
out
cld
sbb
or
push
jle
aam
ret
adc
push
cmp
mov
outsl
sub
jne
ret
mov
add
pusha
add
mov
test
pop
cmpsb
or
or
sbb
test
aas
cltd
push
sub
push
mov
jmp
push
out
sbbb
popf
adc
add
orl
or
push
rolb
mov
push
shlb
xchg
jp
adc
jge
mov
je
and
fstp
xor
pop
cltd
xchg
ja
in
mov
mov
pop
fldl
mov
andb
leave
inc
sub
sbb
push
enter
jne
out
push
cmp
mov
or
or
push
jle
movb
add
and
lods
pop
repz
adc
mov
mov
or
incl
add
adc
mov
adc
sbb
xchg
sbb
out
jmp
sbb
xchg
faddl
and
push
mov
pusha
add
or
repnz
adcl
sbb
cwtl
cmp
mov
std
insb
push
das
aad
pop
mov
cli
mov
cmp
call
xor
add
in
mov
and
das
adc
push
fdivl
jmp
cmp
and
cmp
jmp
sbb
xchg
pop
ror
fwait
or
sbb
fcoml
cmp
in
mov
ret
add
lock
pop
dec
adc
mov
dec
and
rcl
adc
cmc
xchg
mov
cmpsl
fstpt
sbb
popa
and
lods
lock
jbe
sub
fs
cld
pop
sbb
push
fisttpll
cmp
out
push
add
dec
inc
lea
mov
cmp
movsb
and
xchg
aad
push
mov
dec
loope
pop
dec
aad
xlat
mov
push
inc
popf
mov
push
sbb
mov
jo
push
jae
mov
mov
jnp
pop
xchg
push
fbld
iret
lds
inc
mov
push
xor
inc
movsb
cs
and
rcll
sub
leave
xchg
or
mov
leave
pop
mov
inc
popa
hlt
push
xchg
daa
sbb
in
ret
xor
jo
dec
mov
daa
rclb
cmp
sbb
gs
xchg
lea
or
hlt
add
fnstsw
cmp
mov
nop
dec
sbb
cmp
cmc
inc
pop
mov
clc
cmp
lahf
mov
push
int3
push
xor
into
add
rolb
xchg
push
mov
clc
or
cmp
mov
or
add
inc
aam
ret
push
mov
push
xorl
icebp
xchg
and
arpl
adc
fcoml
stos
mov
jne
or
xor
in
or
push
and
adc
push
jo
test
scas
movsb
adc
mov
adcb
je
add
loop
sub
mov
sub
and
inc
inc
add
dec
test
nop
popa
push
push
fs
cmp
sub
std
lea
push
lret
aad
xchg
sub
mov
sbb
adc
rcrb
or
add
fsubl
rolb
jmp
addb
rorb
add
insl
icebp
enter
add
incl
push
sub
jg
adcb
dec
popf
aam
sub
pop
xchg
or
sbbb
inc
pop
pop
pop
add
xor
or
scas
xchg
mov
test
jo
shrb
mov
cltd
fstl
ds
pushf
adc
adc
jl
add
shlb
or
inc
repnz
push
nop
sub
nop
xchg
into
mov
xor
rcll
and
sbb
mov
jbe
inc
sbbb
in
dec
sbb
mov
in
dec
call
das
mov
or
push
push
add
test
push
mov
icebp
xor
jne
jbe
mov
jne
rorb
in
pop
mov
add
pusha
mov
bound
push
jno
xchg
mull
cmp
and
mov
adcb
sarb
xchg
ds
insb
ret
fsub
jns
or
push
mov
inc
jo
mov
fcoms
roll
sbb
in
xor
dec
or
addl
xorb
jae
insb
jl
fs
xor
cmovo
cmp
push
cmp
dec
and
fisubrl
pop
and
mov
cmpsb
mov
shr
adc
sbb
lock
pop
add
test
lds
cmc
mov
xchg
xor
in
pop
movsl
insb
loope
clc
sub
jmp
push
pop
xchg
and
push
inc
jo
mov
push
add
adc
xor
xchg
pop
lcall
sub
xchg
xchg
jo
cmpsb
push
pop
pop
sbb
stos
sbb
add
jmp
pop
mov
scas
mov
xor
fsubr
roll
repnz
call
dec
mov
mov
jb
or
mov
mov
iret
fmulp
call
in
pop
int
mov
lods
aas
js
jmp
and
pop
cmc
mov
lods
fsubp
ror
cmp
lods
dec
aas
in
xor
ljmp
fimull
inc
mov
sub
sub
mov
xor
inc
repnz
clc
adc
adc
in
out
sbbb
dec
aas
xor
inc
enter
lcall
xor
ret
xchg
push
pop
dec
call
pop
mov
xor
stos
inc
int3
loopne
xchg
mov
mov
cmp
cmp
gs
and
adc
mov
inc
xchg
cmp
arpl
push
adc
in
mov
pop
nop
in
in
xchg
pop
and
mov
test
movsb
jbe
xchg
enter
ficomps
mov
jno
jg
adc
popa
dec
or
rcl
push
push
pop
mov
lea
jnp
sarb
cmp
jbe
call
mov
in
loopne
push
adc
fadds
cmp
and
adc
adc
sahf
les
cmp
adc
pop
nop
fldcw
pop
js
cmp
movsb
iret
mov
xor
mov
or
fmul
aas
jg
and
xchg
mov
push
addr16
mov
imul
adc
je
nop
xor
push
sbb
in
pop
das
leave
insb
adc
adcl
push
fisttps
pop
je
dec
aad
fiaddl
mov
add
mov
mov
incl
std
rcrb
js
insb
call
jo
inc
cmpsb
loope
shll
jb
push
call
fcoms
inc
pop
int3
jbe
addl
leave
mov
sbb
test
jbe
pop
jo
mov
leave
inc
sti
fstps
add
int3
xorb
pop
paddq
setns
add
sbb
mov
imul
or
pop
out
add
push
test
out
pop
fcmove
dec
mov
adc
cmpsb
pop
cwtl
pop
nop
js
pop
clc
aas
in
adc
scas
ds
sub
sub
push
sbb
fisttpll
inc
pop
iret
pop
js
and
sbb
sbb
daa
rorb
fsubrl
cmpsb
or
subb
cmp
mov
out
test
sbb
push
sbb
xchg
test
fadd
fwait
in
or
mov
adc
sub
lods
std
pop
or
add
pop
adc
pop
in
push
in
aam
fsubrl
mov
jb
ds
push
xchg
out
add
pop
sbb
aaa
sbb
jb
pop
dec
pop
jo
pop
jb
test
lods
rolb
fadd
push
push
push
sbb
outsl
cmp
sbb
cmp
cmp
add
nop
je
mov
cltd
shlb
add
add
jl
in
cs
mov
xchg
fmul
push
fcompl
lahf
lahf
and
rcr
add
pusha
push
nop
das
inc
out
pop
aas
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
leave
mov
in
sbb
in
sub
sti
pop
xchg
ret
movsb
enter
pop
pop
xor
inc
pop
ror
scas
sub
aam
and
and
xchg
push
mov
andl
and
insb
es
lahf
call
fmuls
and
nop
lahf
movsb
aas
mov
loopne
and
xor
and
dec
es
inc
and
dec
inc
pop
loop
or
aaa
stc
sahf
add
xchg
icebp
leave
pusha
or
inc
pop
ror
movsb
push
mov
imul
and
mov
popa
pop
fs
mov
pushf
pusha
push
inc
into
dec
pop
push
mov
filds
and
insb
stos
xchg
fildll
shrb
push
sbb
js
xor
pop
pop
bound
cs
lahf
pop
pop
xlat
push
sub
icebp
aam
lds
sbb
fldl2t
mov
je
loopne
jg
fimuls
test
aad
adc
icebp
aas
cs
and
cli
lea
pushl
xor
jl
and
sbb
fisttpll
xchg
dec
sub
push
pop
add
outsl
test
test
outsl
pop
js
mov
test
adc
push
sarb
clc
mov
pop
cmpb
mov
loope
and
mov
push
inc
inc
dec
mov
push
push
cltd
jg
dec
mov
adc
stos
mov
or
add
add
fbld
into
in
out
ret
ss
outsb
movsl
dec
or
das
popa
or
insb
js
inc
pop
dec
enter
push
dec
add
rorb
sub
xor
jbe
dec
mov
ds
add
insb
adc
pop
adc
fnsave
hlt
ds
xchg
les
in
lods
adc
sub
mov
pop
sub
fsts
outsl
jb
sbb
xor
cwtl
pop
mov
loopne
out
subl
aas
shrb
pop
pop
xor
mov
mov
lcall
lahf
hlt
movsb
mov
lea
adc
aam
xchg
les
clc
dec
mov
cmp
pop
sbb
inc
aas
or
mov
or
mov
mov
push
or
enter
out
and
pop
pop
movsl
mov
and
nop
int
sbb
sub
sbb
fcomps
and
fists
cs
jg
sub
inc
in
cmp
iret
inc
insb
fnstsw
pop
pop
adc
mov
addr16
insb
test
fdivrl
or
inc
daa
mov
cs
add
lods
add
cmp
xor
jg
insb
or
pop
aas
loope
mov
jg
aas
dec
mov
flds
adc
or
jns
pop
sbb
push
dec
cmpsl
push
imul
pop
dec
aas
mov
in
push
xchg
notb
pop
ret
adc
or
add
push
mov
fcoml
aas
cmp
jecxz
fwait
test
mov
mov
xor
inc
mov
daa
fmuls
call
rclb
cld
in
cmpl
cli
pop
jb,pt
cmp
cmp
xchg
popf
or
inc
dec
sti
loope
daa
imul
cld
cmp
dec
cmp
and
adc
xchg
sub
mov
fdivr
pop
sbb
scas
push
popa
xchg
imul
or
push
shlb
sub
dec
sbbb
lods
mov
dec
test
das
pop
jmp
stos
add
mov
aam
adc
mov
add
sbb
sbb
in
testb
aaa
sbb
push
in
push
js
lock
push
in
sbb
push
movsb
loopne
add
or
add
xchg
aaa
fadds
jns
rcrb
or
dec
add
sbb
inc
lret
fsubrp
pop
fwait
mov
ret
leave
hlt
adc
shlb
and
xor
inc
dec
ss
xor
rorl
mov
frstor
cltd
inc
adc
sub
mov
ss
jbe
xorb
js
je
das
xchg
mov
repnz
aaa
pop
and
leave
inc
push
mov
test
mov
dec
xor
mov
enter
std
push
popa
xchg
inc
rorb
popa
pop
in
ret
mov
dec
sbb
pop
mov
and
or
adc
push
loopne
test
mov
fdivr
sub
shl
insl
out
movsl
sub
andl
in
or
stc
push
mov
enter
dec
adc
jecxz
bound
mov
or
pop
or
aas
or
out
push
mov
inc
cmpsb
sub
pusha
adc
cwtl
lahf
movsb
out
mov
aas
mov
popa
adc
mov
adc
adc
inc
mov
pop
in
adc
rorb
push
in
cmp
and
or
pop
les
jg
test
mov
or
aas
mov
cmp
lahf
push
popa
out
in
or
pop
jle
or
outsl
mov
pushf
inc
mov
fsubrl
mov
movsb
pop
ja
inc
xchg
dec
arpl
or
cmovnp
out
in
xchg
clc
adc
insb
ljmp
inc
mov
lcall
fsubs
cmp
or
jno
dec
xor
dec
fistpll
push
sarb
movsb
pop
sub
xlat
mov
or
mov
pop
mov
push
aas
call
call
dec
sarb
mov
dec
shrb
aas
pusha
inc
jg
xchg
mov
mov
pop
sbb
add
sbb
dec
fisttpl
sub
add
jo
pop
inc
orb
sbb
jg
fadds
cmp
add
inc
aas
xchg
mov
and
jl
dec
push
pop
push
test
cmpsl
xlat
cmpl
bound
sbb
test
aas
cmp
leave
mov
pusha
mov
imul
and
fcoms
pop
js
jb
ret
pop
and
imul
roll
ficomps
pop
or
xor
rcrl
fdivl
les
add
pop
in
aas
sti
test
fs
in
mov
adc
testl
fwait
xchg
push
adc
call
mov
sbb
insl
ficomps
pop
or
mov
mov
dec
add
fs
mov
push
fadds
adc
mov
lahf
inc
add
push
dec
lahf
push
adc
es
jg
sbbl
jg
jne
insl
or
mov
fsubrs
js
lea
add
bound
lcall
mov
adc
pop
mov
addl
rcl
add
aad
in
cwtl
and
add
sub
pusha
add
str
xor
cmp
jnp
cmpl
loopne
lock
mov
jnp
push
push
push
pop
js
test
pop
adcl
pusha
and
mov
imul
cmpsb
leave
xor
inc
mov
xor
mov
in
in
in
dec
pop
jb
in
ja
sub
pop
mov
inc
pop
push
lret
dec
pop
orb
mov
testb
pop
aas
cmp
inc
adc
jmp
das
lods
sbb
pop
ret
inc
add
mov
mov
xor
or
int3
cltd
enter
not
add
dec
sub
lock
popa
repnz
mov
test
pop
xor
sub
xchg
mov
fisttps
enter
add
sbb
fildll
in
repnz
stos
test
in
dec
repnz
adc
adc
insb
xor
es
inc
pop
fmulp
daa
pushf
sub
das
pop
xor
pop
imul
add
ss
xchg
setg
imul
lock
pop
sarb
ret
popf
nop
or
mov
sbb
xchg
in
sub
xchg
jbe
adc
inc
adc
xchg
stos
push
and
sub
xchg
insl
sbb
loope
mov
xchg
inc
std
scas
push
aas
xchg
aas
mov
lods
ds
mov
aas
adc
sub
inc
fidivl
loopne
in
pop
test
fs
je
push
scas
cmp
xor
out
jl
cltd
pusha
xchg
pop
push
mov
pop
pushl
cmp
jg
in
mov
lea
pop
lods
ss
push
fwait
add
sarb
push
add
xchg
rcll
loopne
and
sbb
loop
das
mov
add
pop
lahf
orb
rclb
in
sbb
jg
rclb
mov
push
adc
jl
aas
adc
or
nop
xchg
fiaddl
xchg
mov
leave
or
call
imul
in
jge
and
lods
cmpsb
pop
push
aas
rclb
mov
adc
mov
mov
fmull
dec
loope
inc
push
mov
push
fdivs
sub
jg
and
test
pop
stos
add
stc
and
test
mov
inc
add
in
test
add
test
sbb
notl
adc
jge
pop
push
jl
popa
leave
cmp
push
repnz
sbb
pop
xchg
add
fdivs
mov
and
sub
push
movsl
pop
xchg
adc
sbb
pop
jg
dec
pop
ja
fidivl
cwtl
sub
and
adc
daa
cmp
add
je
pop
pop
push
fcompl
and
bound
mov
imul
pop
daa
or
fadds
sub
cmp
sbb
mov
add
negb
stos
js
xchg
push
lret
jg
xor
sti
scas
out
adc
fidivrl
fsubrl
pusha
add
mov
mov
pusha
lea
adc
daa
pop
mov
sub
mov
dec
pop
lock
leave
xchg
dec
in
sbb
inc
push
nop
nop
arpl
inc
call
sub
dec
dec
sbb
pop
or
inc
bound
jmp
sbb
daa
pusha
js
int3
cmp
test
lock
sbb
inc
arpl
cwtl
arpl
push
pop
clc
arpl
or
ljmp
fs
pushf
mov
push
or
mov
iret
xchg
add
shlb
and
sub
stos
push
push
ret
andl
in
push
xchg
out
gs
dec
test
arpl
stos
push
daa
xchg
pop
in
andb
dec
cwtl
ficoml
cmpsl
shlb
daa
dec
push
xor
push
jb
insl
pusha
dec
daa
mov
fadd
adc
and
xchg
dec
push
or
push
push
bound
aaa
fcoml
imul
sub
mov
aam
push
jo
push
or
dec
jle
mov
dec
ja
lds
arpl
test
push
je
mov
sub
in
mov
imulb
sub
jle
sbb
or
add
movups
in
fisttps
loopne
insb
daa
dec
insb
jno
jbe
nop
inc
daa
loop
enter
sub
xlat
sub
dec
inc
dec
push
push
insl
ror
lret
arpl
arpl
popf
shlb
mov
dec
adc
je
outsb
iret
subb
shrl
test
dec
outsl
aaa
jo
dec
push
fidivrl
pop
pop
xchg
jo
loop
dec
add
adc
push
xor
jno
lds
aaa
pop
daa
ljmp
jno
mov
daa
clts
lcall
pushf
clc
pop
jbe
das
dec
fdivs
jb
enter
mov
pop
pop
das
xor
xor
push
push
jb
xchg
xlat
xchg
pop
sub
aad
add
sub
leave
mov
jne
imul
es
sbb
loopne
rol
mov
xchg
jge
inc
lods
es
adc
jg
out
cmp
xor
fsubl
dec
pusha
aas
jg
jbe
mov
jg
shrb
xchg
push
ja
in
mov
inc
and
lods
insb
andb
xchg
pushf
adc
jl
test
dec
rorb
push
fiaddl
jge
cmp
dec
repnz
mov
es
pushf
jge
jecxz
call
aaa
cwtl
js
inc
outsb
xchg
rcrb
mov
inc
xchg
enter
push
popf
mov
pop
jns
cmpb
push
xor
test
jns,pn
notb
fdivs
jnp
imul
out
mov
mov
orb
mov
jl
adc
insb
fcomps
jns
movzbl
call
idivl
sbb
les
add
jns
cmp
pop
mov
sarl
pop
inc
xor
pop
iret
repz
push
inc
cs
push
lahf
cmpsl
stc
cmp
lock
in
lret
iret
repz
out
cld
adc
and
mov
inc
pop
es
sbb
or
out
push
test
jns
negl
test
int
jns
into
fsubr
testb
or
iret
repz
sub
inc
pusha
idivl
repz
nop
sahf
aam
cmp
repz
subb
repz
push
shl
hlt
sahf
out
or
jns
out
pusha
jo
mov
int3
xchg
mov
push
xor
sbb
jbe
cmp
mov
out
ds
repz
push
mov
cs
push
push
sbb
negb
sahf
out
mov
out
sahf
out
push
inc
cs
repz
and
add
cltd
out
cmp
repz
mov
mov
fdivp
dec
inc
mov
mov
stos
pushf
mov
dec
xor
out
cmp
adc
mov
repz
repz
mov
cmp
xorb
cs
out
cmp
or
mov
jns
out
mov
out
sahf
out
insb
pop
dec
inc
int
jns
sub
push
add
mov
jns
out
les
mov
nop
and
sahf
out
fs
inc
xor
cmp
or
repnz
int3
cmp
repz
mov
mov
sahf
out
push
fwait
data16
out
sahf
out
movsb
mov
lret
jl
fdiv
push
pushf
sub
cmp
repz
jl
movsb
mov
cmp
repz
cli
or
sbb
dec
pop
outsb
fnstcw
dec
scas
add
orb
repz
or
adc
iret
repz
adc
sbb
stc
cmp
repz
pop
push
movsb
add
mov
cmpsl
mov
xchg
stos
out
pop
cwtl
out
out
sahf
push
push
nop
jns
out
push
es
dec
pop
out
sahf
out
jbe
nop
lcall
lret
clc
cmp
sarl
push
ss
push
iret
repz
fs
mov
pushf
cmp
repz
jl
pop
dec
repz
repz
adc
jns
out
mov
fmul
mov
cmpsb
xchg
xchg
mov
iret
jnp
jl
les
mov
lcall
pusha
dec
cmp
out
lcall
mov
cmpsb
xchg
xorb
push
out
sahf
out
inc
sub
fidivrs
adc
lea
jns
out
mov
out
sahf
push
and
hlt
mov
shl
cmp
repz
cmp
ds
push
push
scas
mov
fsub
hlt
add
repz
test
out
cwtl
cmpsb
mov
lahf
out
hlt
or
cmp
inc
pusha
jl
sahf
outsb
sahf
out
ds
into
fsubr
clc
cmp
sarl
push
and
inc
repz
repz
push
xchg
scas
out
cmp
cli
or
sahf
out
sahf
sbb
cmp
jo
inc
outsl
ja
adc
nopl
iret
ds
data16
jns
loop
ret
sti
into
out
hlt
test
into
test
test
incb
jb
or
gs
out
cmp
adc
je
add
jl
jae
addr16
push
test
out
mov
sahf
negl
pop
push
scas
push
loopne
repz
repz
cwtl
outsb
idivb
push
xor
cmp
pop
add
cmpsb
and
inc
and
push
stc
xor
push
adc
xchg
and
mov
iret
repz
js
push
or
or
iret
repz
and
ds
repz
repz
gs
je
repz
jne
ja
addl
xchg
cmp
xrelease
repz
lea
cmp
repz
xchg
xchg
xchg
xchg
repz
repz
cltd
lcall
popf
sahf
lahf
mov
repz
movsb
movsl
cmpsb
cmpsl
repz
repz
stos
stos
lods
iret
repz
lods
scas
scas
mov
mov
iret
repz
mov
mov
repz
repz
iret
repz
mov
ret
repz
repz
repz
int3
iret
repz
int
iret
rcl
rcrb
in
sti
pop
cld
adc
push
xor
gs
sahf
out
mov
jns
rcr
in
stc
or
pop
cmp
repz
cmp
repz
repz
xchg
movsl
mov
repz
in
add
sahf
out
sahf
adc
jns
out
ja
xchg
mov
out
lret
hlt
iret
repz
std
push
decl
sbb
sub
repz
cmp
dec
push
repz
repz
imul
iret
sahf
scas
ror
lock
push
and
mov
and
sub
jns
out
push
gs
xchg
out
sahf
out
mov
enter
jns
fucomp
cld
adc
and
cmp
repz
push
imul
out
into
repz
scas
add
gs
xor
popa
fs
jo
inc
mov
imul
sbb
imul
gs
mov
jg
jb
popa
je
push
outsl
outsl
insb
push
outsb
xchg
div
pop
loopne
push
outsl
arpl
jae
inc
imul
loopne
insb
outsl
fmuls
outsb
les
dec
gs
pushw
dec
jae
imul
je
arpl
jbe
jnp
pusha
gs
outsl
outsb
je
inc
sub
jp
gs
int
pop
push
aam
jae
daa
pop
imul
sbb
lret
lock
std
ja
gs
push
popa
jb
insl
and
outsb
fmuls
sbb
add
and
and
scas
pusha
orb
jecxz
leave
dec
insl
pop
lods
mov
sbb
gs
inc
je
imul
imul
sbb
outsb
arpl
jns
je
popa
fcomps
in
mov
fs
add
inc
jne
mov
ds
and
xorb
aaa
inc
and
jne
aaa
fcmovb
push
push
inc
outsl
xor
rcll
push
stos
jp
mov
mov
fwait
or
and
push
sbb
mov
in
fldt
push
fistl
je
adcb
cmp
sbb
sbb
push
push
imul
enter
jbe
in
outsl
xor
cmp
fs
outsl
add
xor
adc
lds
leave
jo
sbb
and
fdivrl
xor
adc
gs
sub
push
outsb
insl
pop
shll
in
popa
in
cmp
fs
push
cmp
testb
mov
sbb
ljmp
push
fs
sub
jne
ljmp
inc
cmp
push
mov
or
push
rorb
shll
imul
adc
jno
bound
mov
sub
in
and
dec
push
rorl
lock
dec
arpl
sub
sub
gs
sub
insb
mov
dec
outsl
sub
insb
pop
xor
push
ret
add
dec
subb
dec
movd
addr16
jo
test
in
cmp
inc
mov
and
dec
lods
lcall
loop
in
jb
adc
add
hlt
js
fnstcw
test
push
adc
gs
jns,pn
sbb
inc
push
add
lds
add
rclb
jb
out
pushf
push
dec
dec
aas
aam
daa
outsb
xor
shlb
lea
rolb
icebp
testl
sbb
test
cmpsl
pusha
fsubs
adc
pop
pusha
into
inc
lock
pop
cs
outsb
add
push
pop
mull
js
into
sub
add
pop
in
cs
add
stos
in
add
jb
adc
xor
add
aas
inc
sahf
rcrb
xor
data16
xor
cmp
cmp
xor
xor
ss
popa
data16
arpl
mov
int
mov
loope
mov
cmpsl
mov
mov
fldcw
push
inc
bound
lock
mov
xor
out
dec
rclb
inc
push
push
jo
push
jnp
mov
jo
push
push
and
add
iret
imulb
push
inc
pop
inc
ss
loopne
push
addb
neg
ja
jbe
dec
push
inc
xor
ss
and
inc
jo
xor
push
push
push
imul
inc
ss
fidivrs
xchg
pusha
pop
mov
mov
popa
out
xor
dec
mov
add
push
mov
jns
xchg
sarb
push
addb
inc
xor
xor
inc
add
es
cli
xor
xor
inc
xor
add
cld
fbld
jo
inc
add
cmpsb
rol
mov
sbbb
dec
inc
mov
xchg
lock
aaa
lcall
fidivrs
sbb
xor
xor
add
clc
imul
mov
adc
fs
xor
scas
push
mov
and
ss
test
mov
out
sarb
inc
cmp
ss
dec
jnp
popf
sub
movsb
xor
add
jg
inc
jo
lods
into
les
sarb
vdivpd
ret
pop
and
dec
jmp
sbb
clts
mov
add
test
cs
inc
add
inc
and
es
insb
inc
sbb
sbb
dec
inc
inc
cwtl
mov
popa
ret
test
sbb
sbb
inc
orb
sub
ficompl
push
sbb
pop
sbb
push
or
punpcklbw
add
loop
adc
xor
jge
or
mov
push
andb
loopne
pop
enter
outsl
int3
push
fstps
sarl
in
xorb
push
in
add
mov
fiaddl
ja
add
add
sbb
in
lods
jbe
jb
repz
in
xchg
andb
stc
mov
scas
icebp
ja
dec
hlt
inc
sbb
mov
inc
xor
imul
sub
repnz
jmp
or
inc
clc
aas
jmp
pop
jmp
push
test
pop
pop
xchg
adc
std
dec
mov
add
arpl
js
xor
xchg
stos
or
ljmp
inc
push
adc
gs
mov
and
test
aad
cmc
mov
testb
mov
adc
or
rcrb
add
jne
jno
jmp
cli
into
mov
lds
loopne,pn
pop
icebp
scas
ret
adc
dec
stc
ja
cli
pop
ret
negl
jae
mov
add
insb
and
add
test
insl
insb
jb
popa
adc
pop
pop
leave
add
in
add
push
pop
and
in
dec
loop
pusha
out
mov
adc
push
mov
out
lret
loopne
inc
es
arpl
jae
ret
jae
sbb
gs
inc
push
les
push
gs
push
outsl
jb
fs
imul
std
data16
pop
imul
je
jo
das
das
ja
cs
data16
insl
arpl
das
aas
ja
push
dec
push
dec
jae
xor
pop
nop
xorb
push
rorl
outsb
jl
mov
mov
mov
int
mov
imul
push
outsb
stos
and
outsb
outsl
outsl
call
cmpsb
hlt
and
outsb
and
inc
dec
push
and
in
or
or
aas
sub
cld
std
mov
pop
cld
push
sbb
cli
mov
clc
dec
out
scas
stc
ds
jp,pt
sti
push
inc
shl
ja
imul
push
sbb
push
push
push
imul
lahf
lea
dec
add
ror
adc
cmp
add
pop
or
adc
mov
fidivs
sbb
and
pop
mov
sbb
push
mov
prefetch
les
aaa
mov
or
jo
inc
icebp
sub
aaa
push
sub
psrad
call
pop
and
test
jb
leave
addb
test
pop
or
out
inc
cs
and
xor
in
dec
outsb
dec
or
sahf
jae
arpl
push
lods
jbe
xlat
inc
inc
or
mov
dec
notl
lahf
push
push
add
les
and
lcall
jb
adc
or
adc
inc
and
dec
jl
jne
sub
sub
and
mov
sub
jns
icebp
jbe
call
call
loop
and
adc
dec
in
push
add
push
sarb
push
in
cmp
adc
push
mov
adc
jp
or
shll
subl
cmpsl
fisttpll
and
and
andb
xorb
mov
and
or
mov
pop
mov
push
cld
daa
cmp
add
sti
mov
xor
cmpsb
cmc
fs
call
push
push
aam
jp
mov
call
jb
sti
sub
push
daa
aas
enter
add
add
push
aaa
mov
fdivrs
test
in
add
push
in
adc
cwtl
test
int
or
sbb
or
sbb
mov
cmp
shl
xchg
cwtl
and
push
adc
push
mov
dec
sbb
jns
loope
adc
inc
pop
repz
push
cmpl
jae
xchg
in
or
fsub
cs
subl
jmp
xchg
enter
insb
xchg
rolb
insb
or
outsb
sarb
adc
pop
and
jne
add
lds
lahf
int3
int3
push
sbb
insb
inc
adc
clc
mov
or
cmp
sbb
lret
xchg
pop
inc
add
pop
add
aaa
cmp
loopne
repz
or
sahf
add
cmp
repz
xor
lcall
sub
add
xchg
int
mov
adc
adc
mov
dec
icebp
jmp
loop
adc
jbe
xor
rcrl
cmp
or
pop
andb
daa
rclb
cld
inc
dec
cmp
add
gs
mov
pop
imul
insl
add
add
xchg
lock
test
add
fs
jae
outsl
ficoml
push
dec
pop
inc
jo
pop
arpl
fcomp
and
icebp
and
arpl
pop
push
aaa
jb
lods
inc
push
data16
imul
outsb
dec
mov
add
inc
imul
mov
les
hlt
fs
dec
inc
push
dec
inc
dec
jnp
mov
inc
mov
inc
das
rorb
fiadds
add
cmp
repz
push
daa
fimull
outsl
mov
or
or
enter
dec
cs
call
mov
and
inc
sub
xchg
mov
inc
mov
pop
push
push
repnz
lods
outsb
add
out
lret
lock
popa
add
imul
push
push
sub
and
add
cmp
and
push
add
fdivp
fidivrs
jae
imul
ds
out
lret
mov
adc
imul
inc
jnp
mov
and
outsl
sbb
push
insl
out
jnp
mov
jb
jae
jne
arpl
and
xorl
jae
sti
fcmovb
imul
jl
shll
je
push
jecxz
mov
dec
je
out
pop
jb
jbe
subb
aaa
insl
lahf
jbe
push
pop
iret
jnp
sub
add
pop
sar
cmp
inc
sub
add
jbe
xchg
pop
data16
rep
dec
stos
or
xchg
sysret
adc
jae
jb
sbb
and
out
sbb
outsl
fimuls
subl
popa
xor
pop
push
sbb
pop
daa
out
shlb
arpl
push
cld
push
notb
rcrl
push
sub
hlt
jle
jbe
dec
repz
push
divb
inc
fimuls
sub
xchg
xlat
jmp
cmp
jle
sub
xor
mov
outsl
xorl
daa
mov
sub
scas
xor
pop
outsb
adc
outsl
insb
imul
arpl
data16
call
ja
pusha
or
sub
arpl
jecxz
sbb
jp
stos
mov
pop
hlt
loope
lret
popa
scas
arpl
or
cmp
or
pusha
adc
xchg
pop
outsb
jns
shrl
mov
adc
je
cmp
cmp
in
sbb
iret
sub
xchg
jp
mov
mov
push
pop
cmp
stos
push
notb
jns
scas
inc
sahf
push
arpl
subl
mov
sub
xchg
daa
push
dec
adc
sbb
das
call
push
daa
pop
test
sbb
jne
inc
jae
pusha
jp
lods
das
fs
push
sbb
ja
es
sub
lock
fisttpll
lea
xor
xor
xor
xor
cmp
inc
xor
push
xor
data16
jge
mov
xchg
xor
mov
xor
xor
xor
xor
movsb
xor
xor
xor
xor
repz
xor
xor
ja
test
xchg
xor
xor
xor
sbb
sahf
inc
xor
push
xor
mov
add
lret
mov
mov
rol
sub
out
sti
mov
mov
test
sti
in
inc
push
mov
into
repz
jmp
fcom
ret
pop
mov
fimull
fnstcw
mov
or
iret
mov
ret
mov
lea
int
shlb
enter
cmc
mov
jg
in
ret
mov
xchg
push
mov
xlat
mov
aad
mov
fstpt
outsl
mov
jo
mov
lods
pop
mov
cld
enter
ret
xlat
daa
sbb
mov
idivb
mov
inc
dec
dec
and
mov
cli
test
mov
push
ds
and
hlt
daa
mov
iret
shll
int
ret
sarb
cmp
push
outsb
pop
mov
hlt
inc
inc
aad
cmc
outsl
clc
outsl
push
clc
mov
mov
test
mov
xor
loope
add
js
shrb
mov
jle
mov
cs
cs
adc
jle
popa
xor
aaa
cmp
outsl
lods
call
bound
arpl
xor
add
mov
xor
popa
mov
leave
dec
outsb
and
or
movsb
xor
pop
into
rcl
sarl
ror
aad
enter
testb
and
ror
push
sti
add
into
test
fidivrs
insb
mov
lock
aad
xor
adc
sarl
and
jp
ja
mov
mov
sarl
or
rcr
xlat
jo
or
pusha
xor
dec
imul
inc
loopne
adc
jne
in
and
and
jbe
ds
or
and
add
add
xchg
xor
add
mov
movsl
add
mov
xchg
xlat
jnp
out
shll
push
xor
xor
xor
and
mov
shl
mov
xor
aaa
sub
pop
and
xchg
xlat
xlat
sub
and
test
lret
mov
mov
mov
adcb
gs
xor
stos
xchg
subl
iret
les
pop
mov
mov
imull
mov
rorl
sub
dec
mov
jp
mov
and
cmpsb
test
rol
mov
orb
shll
sub
mov
orb
and
jge
and
xor
mov
cmp
int3
leave
stos
sub
mov
enter
mov
enter
push
mov
shll
mov
pop
or
ret
mov
shr
jg
inc
mov
std
sub
outsw
jb
insl
cmp
js
imul
jo
data16
cmp
mov
sub
fdivs
xlat
outsl
lock
mov
sub
jmp
enter
mov
ret
xchg
bound
rol
data16
add
and
sub
ret
jbe
je
clc
repz
je
xor
aaa
fdivrs
mov
or
add
rorb
fnstcw
lds
mov
out
mov
les
ret
pop
pop
movsl
pop
fiaddl
negb
mov
mov
xor
call
cli
or
sub
fsubrs
and
test
sti
addb
clc
jg
scas
mov
ds
cmp
mov
enter
push
adc
mov
add
add
je
pop
cs
imul
and
xor
or
sbb
es
and
nop
add
xchg
test
lods
or
ss
popa
jne
pop
shrb
add
pop
add
push
jbe
nop
or
es
mov
lds
loope
sbbl
jge
cli
mov
stc
add
jge
mov
test
xlat
inc
pushf
jge
jecxz
fdivr
jnp
push
mov
pop
aas
test
imul
lret
xchg
cld
push
rorb
jle
in
sbb
mov
stc
mov
sarl
cmpb
pop
das
inc
push
inc
push
nop
mov
adc
add
mov
and
out
js
mov
fwait
add
jmp
pop
push
or
in
outsl
mov
pushf
push
inc
push
inc
frstpm(287
sub
xor
add
sbb
add
lock
xchg
movsb
or
or
ja
cmpsl
or
out
ret
or
add
mov
push
shlb
add
pop
test
test
lock
dec
xchg
adc
pop
out
mov
lock
test
pusha
xchg
adc
cmpsb
fsts
fs
mov
int3
das
mov
ficomps
sbb
adc
aam
sti
jmp
and
adc
push
in
subb
add
cmp
jns
jo
push
jb
fs
aad
ret
xchg
xchg
cmp
cmpsl
jge
cmpsl
dec
push
and
adc
cmpsl
or
or
and
rolb
loop
adc
push
leave
sub
jb
xchg
and
call
fcoml
pop
or
xor
inc
sbb
in
push
xchg
adc
ret
lcall
fsts
pop
pop
push
test
aad
adc
mov
adc
mov
or
sbb
push
mov
add
pop
sbb
mov
popf
xor
sub
sub
ret
push
or
mov
popl
nop
pop
adc
xor
mov
pop
insb
cmpsl
push
ficoms
and
adc
sub
push
ljmp
mov
push
mov
fwait
jae
mov
pop
cmp
and
xchg
imul
fld
in
gs
insb
loope
lcall
jns
xchg
sub
test
and
call
xchg
mov
xlat
das
xor
sub
insb
xlat
in
mov
stos
dec
mov
xchg
loop
sub
mov
mov
imul
call
gs
inc
fmuls
lock
stos
pop
inc
xorl
dec
fs
mov
xchg
daa
push
gs
push
out
inc
sti
lahf
mov
je
roll
push
xchg
gs
mov
fwait
dec
gs
dec
stos
mov
gs
xor
add
add
lahf
jmp
sbb
jns
data16
sub
jmp
nop
xchg
push
mov
mov
clc
adc
call
mov
dec
clc
aas
in
lock
and
popf
mov
mov
cs
inc
dec
gs
scas
adc
ror
xchg
popf
push
or
je
gs
cmpb
hlt
out
and
fldenv
mov
jne
push
gs
stc
loope
and
lods
or
push
xchg
insb
gs
xor
cmp
push
div
aad
and
gs
push
outsb
inc
xchg
cmp
add
divb
imul
inc
adc
imul
andb
cmp
in
popa
fcompl
insb
adc
push
xchg
insb
loope
add
pop
and
adc
pop
adc
adc
jbe
adc
lcall
popa
xor
xor
inc
outsl
daa
insb
in
cmp
imul
ret
sbb
jno
add
ret
mov
lcall
jle
imul
imul
call
xchg
xor
lcall
mov
push
inc
jle
hlt
imul
add
clc
jb
pop
jecxz
cmpsb
das
lcall
add
ss
lea
inc
clc
cltd
shll
jecxz
fdivs
jle
push
rcrl
add
mov
xchg
addl
add
inc
test
mov
cs
sbb
ret
sbb
aad
jbe
and
mov
sbb
iret
call
xchg
in
jmp
lret
aaa
ljmp
mov
aaa
repz
cltd
andb
inc
call
aaa
rol
fstl
add
mov
shlb
call
push
add
fwait
ret
xchg
push
push
push
inc
sbb
or
iret
push
add
lock
sbb
or
cmp
dec
pop
test
fstl
in
je
add
movsl
leave
add
les
test
nop
or
add
and
xchg
fs
pop
leave
call
xchg
sbb
es
dec
cmp
aad
adc
nop
sub
pushf
xor
sbb
sub
sub
add
mov
je
les
jmp
add
cmpsb
jmp
xor
or
jle
popa
xorl
in
nop
inc
jb
mov
out
cmp
xor
mov
test
movsb
cmp
xor
cmp
or
ja
aam
stos
adc
mov
add
inc
dec
xor
or
cmp
popf
cmp
call
jp
in
out
in
sbb
dec
xchg
in
in
push
lret
in
mov
xchg
and
xchg
mov
or
xchg
xchg
jns
int3
xchg
mov
push
add
mov
cmovg
sbb
jb
test
xchg
push
jl
dec
out
add
sbb
test
in
addl
test
push
mov
mov
jns
stc
icebp
sub
gs
inc
repnz
dec
xor
nop
xchg
adc
scas
out
mov
aaa
arpl
imull
or
add
pusha
sbb
sub
ret
nop
adc
mov
sbb
or
mov
gs
add
dec
push
call
cmpsb
push
pop
and
lock
dec
fnstsw
cwtl
adc
ret
dec
arpl
dec
dec
mov
call
nop
mov
hlt
or
cmp
nop
fstl
int
sub
and
scas
and
nop
xchg
nop
clc
mov
hlt
xchg
adc
stc
fs
inc
or
sbb
or
in
ljmp
and
inc
sbb
nop
insl
sub
movsl
clc
leave
test
lds
cld
mov
cmp
xor
les
or
cmpl
cwtl
fsubrp
orl
jnp
ds
xor
scas
xor
xchg
or
ss
sbb
cwtl
scas
inc
mov
sbbb
stc
popf
or
int3
sub
cmp
or
fisubl
mov
fsubl
lahf
lret
lock
aad
fwait
xchg
xchg
pop
dec
in
adc
lcall
mov
mov
out
mov
popf
push
shrl
rorb
xchg
stos
dec
or
xchg
cmp
mov
mov
call
pop
mov
sub
push
negb
mov
add
mov
jge
xchg
lods
pop
addr16
push
data16
pop
inc
ss
cmc
mov
enter
out
mov
cmp
cmp
and
call
popf
pop
mov
pop
mov
mov
push
or
fnstenv
pop
sbb
stos
push
hlt
loope
out
lods
xchg
ret
scas
arpl
cmp
sbb
leave
sub
mov
mov
ficoml
in
popf
mov
jp
mov
loope
xlat
adc
enter
inc
mov
and
aam
cli
mov
xchg
cmp
rorb
adc
lds
mov
jb
roll
bsr
jno
mov
xchg
sbb
movsl
mov
pop
jno
fisubl
push
mov
jnp
call
adc
fldl
lret
mov
sbb
mov
xchg
xchg
inc
jbe
orl
movsl
das
jecxz
xchg
and
fwait
push
xor
xchg
xor
daa
fwait
pop
pop
dec
adc
sbbb
jle
adc
cmp
incl
adc
add
lods
inc
loopne
jnp
cltd
xchg
test
sahf
dec
or
leave
dec
mov
add
inc
loop
test
cmp
pop
test
jb
add
add
out
test
sbb
mov
enter
stc
add
test
mov
sub
push
adc
sub
adc
sbb
add
jae
mov
orl
sub
shl
inc
or
mov
xor
push
dec
inc
mov
sub
jno
call
imul
jo
sbb
lcall
add
orl
inc
sub
dec
sti
xchg
bound
adc
mov
or
and
hlt
cmp
cltd
or
jns
fistps
adcb
aad
enter
jnp
cld
sub
pusha
inc
push
inc
and
in
and
xor
push
xchg
incl
repnz
mov
subl
orl
mov
lahf
xchg
pusha
sbb
sbb
insl
outsl
push
repnz
addr16
or
xchg
jl
push
cld
cld
mov
popa
jmp
xor
mov
push
jl
mov
ds
or
mov
nop
dec
add
out
mov
add
cmpb
add
pop
jbe
mov
jl
push
xor
inc
imul
jne
and
ret
lock
jns
data16
lret
enter
jo
shr
sbb
xor
cmpsl
in
in
dec
push
enter
mov
push
test
cmpsl
mov
jmp
gs
jg
pop
enter
add
loop
jg
inc
cmpsl
jl
sub
into
jle
mov
or
inc
push
es
std
pushf
jle
or
sbb
daa
mov
insl
adc
inc
push
iret
inc
push
sbb
jl
insb
sub
rcl
dec
rcrl
pushl
lock
mov
sbb
es
mov
jnp
add
fs
adcl
stos
add
add
jge
mov
sbb
pop
sbb
and
sbb
movsb
imul
mov
push
sub
cmp
adcb
es
xchg
or
rorl
in
daa
add
jo
ss
scas
aad
or
and
in
gs
adc
add
push
mov
sub
mov
ja
outsb
mov
inc
sub
js
fs
push
and
add
cmpl
cmc
enter
lods
jecxz
js
rolb
jl
orl
into
jnp
inc
inc
dec
subb
push
repz
insl
pop
xchg
pop
push
movsb
addr16
rcrl
push
jne
add
push
pop
and
mov
enter
pushf
jp
and
das
test
movsl
inc
dec
mov
ss
mov
mov
das
mov
push
and
mov
daa
push
adc
addb
xchg
xchg
and
popf
fwait
sbb
jns
add
repnz
xor
adc
lock
js
lret
mov
mov
sub
mov
pop
or
js
adc
in
mov
imul
dec
and
mov
movsb
shll
fdivr
jbe
jne
and
arpl
jbe
push
xchg
pop
movl
jbe
fs
or
push
loopne
and
jne
inc
sbb
mov
adc
subb
in
cmp
shlb
sub
push
jne
mov
mov
cli
xchg
jl
in
stc
jb
notl
nop
xchg
enter
jb
cwtl
push
je
nop
dec
push
inc
je
xchg
fwait
lcall
nop
movb
add
leave
add
jae
bound
sahf
mov
in
sbb
addl
xor
sbb
inc
mov
or
push
add
pop
dec
aam
test
pop
pushl
and
js
and
mov
cmc
pushf
pushf
dec
dec
sbbl
repnz
movsb
push
jb
jb
inc
push
sbb
xor
mov
nop
pop
xchg
movsb
lret
and
test
fwait
or
lea
xchg
dec
sub
dec
xrelease
in
add
push
and
cmpl
and
nop
inc
lods
lcall
mov
lret
or
mov
pop
push
sbb
mov
test
and
adcb
jb
xchg
pop
outsl
dec
outsl
rol
sahf
jmp
pop
xor
mov
add
push
adc
enter
repnz
outsb
pop
nop
inc
sub
sbb
inc
and
lods
sbb
and
or
add
shrl
push
cmp
or
mov
push
repnz
les
inc
jl
add
inc
divb
adc
inc
inc
out
mov
or
add
movsb
out
sub
scas
sbb
es
mov
mov
inc
cmpl
add
clc
enter
testb
lods
imul
fs
test
nop
add
and
clc
pop
fnsave
or
cli
orb
jae
out
int3
adc
and
das
int3
shlb
pop
cmp
jge
aam
imul
int3
shrb
push
fdivr
adc
sti
push
aam
and
repnz
addb
sub
jp
insb
and
and
stos
pusha
add
das
mov
push
and
inc
jno
pusha
mov
and
rorb
jb
and
fcomp
inc
push
orl
jb
loopne
imul
in
fdivl
inc
into
push
test
xchg
push
sbb
addr16
movsb
jb
and
or
cmp
inc
cmp
in
mov
pusha
mov
rcl
jmp
mov
mov
sbb
popa
cmp
in
cmp
inc
xchg
or
and
cmpsl
jo
pop
cs
push
loopne
sub
test
loop
push
nop
rcrl
or
add
jb
jg
jne
stos
adc
popf
insb
data16
or
cmp
imul
push
or
or
adc
sbb
adc
inc
adcl
jecxz
add
and
rcrb
xor
push
mov
or
scas
loopne
pop
adc
popf
jle
adc
add
enter
add
ss
push
lea
or
aaa
pop
mov
test
xchg
add
sbb
sbb
sbb
and
lock
cmpsb
hlt
lds
inc
lock
dec
add
sbb
pop
movsb
clc
and
cld
mov
and
jg
adc
ss
adc
popf
cld
add
adc
test
test
or
mov
cmp
adc
and
data16
push
adc
enter
popf
insb
add
rcll
ss
popf
mov
loop
jb
scas
and
push
and
and
enter
clc
loop
pop
adc
bound
add
imul
xor
leave
add
enter
cld
bound
mov
les
sbb
bound
addr16
mov
add
jl
lock
push
or
add
cltd
jb
xchg
add
adc
sub
cmp
add
popf
mulb
mov
loope
pop
insl
push
or
enter
xor
mov
adc
jmp
mov
dec
test
mov
add
ja
sti
add
jmp
push
test
jno
or
adcb
push
add
push
cmpsb
push
xorb
pushf
xchg
inc
add
sbb
bound
push
pop
inc
pushf
fcoms
sar
pop
adc
xor
adc
negl
ror
repnz
out
sub
popf
ret
sub
adc
and
sbbb
pop
outsb
fadds
pop
pop
pop
sarl
pop
or
adc
lods
jns
dec
dec
cmpsb
mov
or
add
roll
ret
pop
fcmovb
in
xchg
and
add
mov
mov
push
test
adc
aam
lea
and
cwtl
mov
jns
dec
or
in
pop
das
and
pushf
jge
lcall
push
xor
es
xchg
mov
lret
inc
add
push
and
ret
adcl
pusha
lahf
insb
and
add
in
xchg
imul
popf
mov
inc
and
push
jb
jo
popf
movsb
mov
jb
addb
icebp
pop
xchg
add
and
jb
stc
mov
loop
add
dec
pop
lea
rolb
test
inc
push
dec
pop
xor
push
pop
cltd
fadds
pop
and
test
movsb
adc
adc
inc
test
and
cwtl
pop
popf
enter
mov
in
add
mov
popf
outsl
jno
les
lock
or
xor
loopne
fmull
es
ret
mov
or
and
mov
pop
or
pop
adc
cmp
aad
cmp
pop
je
jg
imul
inc
mov
push
in
sbb
sub
aas
and
mov
in
jmp
and
hlt
repz
ss
add
cltd
and
or
jl
insb
and
mov
inc
add
loope
test
and
test
adcl
leave
and
insb
pop
lahf
jno
xor
and
adc
and
mov
or
add
and
lahf
pop
or
ja
jge
xor
sub
and
or
mov
notb
adcb
xchg
push
or
pushf
cli
mov
push
and
bound
or
add
or
and
leave
add
add
and
popa
jb
test
or
dec
fimull
and
jne
dec
fisubrs
push
shrl
or
push
push
int3
and
les
and
sbb
cmp
scas
inc
test
test
loopne
or
les
dec
and
or
leave
push
aam
dec
lods
int3
js
add
and
inc
inc
ficoml
lds
movsb
es
cmpsl
and
lea
clc
js
mov
popa
pop
mov
outsl
imul
andb
jnp
or
loopne
inc
pop
loop
add
shlb
fabs
mov
xchg
push
or
loop
and
and
adc
add
nop
dec
and
verr
add
push
sbb
and
and
sub
sarl
add
jnp
sub
mov
add
and
push
arpl
and
mov
mov
sub
rcl
cli
add
out
out
fildl
and
das
pop
xchg
dec
sbbb
or
adc
sbbb
out
dec
mov
cmp
add
shl
orl
dec
fldenv
adc
add
mov
sbb
push
das
ja
insb
mov
dec
out
dec
mov
add
movsl
pop
fs
mov
jg
adc
and
fnstcw
dec
rorb
cltd
nop
lret
xchg
and
push
mov
mov
jmp
fs
adc
out
je
and
rorb
cmpsl
lret
test
nop
addr16
dec
pushl
andb
enter
dec
mov
and
inc
enter
rorl
dec
push
and
cmp
xchg
jl
stos
data16
xor
mov
pusha
gs
cmp
repnz
and
ss
loopne
xor
sbb
adc
test
sahf
jbe
xchg
sbb
adc
movsb
jg
or
add
and
sbb
sub
enter
adc
add
shr
add
loopne
inc
and
or
sbb
or
add
or
jge
fs
sbb
adc
add
test
cmp
add
add
aaa
or
and
and
rorl
add
test
mov
cmp
es
dec
mov
scas
shll
jge
fisttps
add
or
aam
sub
dec
cmpb
add
enter
dec
inc
mov
add
popa
add
add
lea
mov
xchg
pop
push
lea
in
fs
scas
in
inc
ljmp
inc
jne
cmpsl
xchg
inc
cs
xor
and
push
dec
repnz
mov
pop
clc
mov
rorb
add
pop
iret
bound
les
add
pop
inc
and
sub
and
in
fiaddl
inc
ret
inc
xchg
adc
xchg
and
and
add
push
fbld
test
sub
add
aam
faddl
movsb
cmp
aam
inc
rorb
xor
and
cmp
jnp
data16
js
add
enter
inc
push
jb
inc
fs
and
mov
add
add
inc
in
push
push
lea
mov
and
test
xor
dec
and
std
or
mov
mov
ror
inc
lcall
add
aaa
sahf
xor
xchg
das
pusha
add
scas
inc
add
and
and
in
inc
xor
or
mov
xchg
dec
les
add
pushw
into
and
cmpsl
inc
jae
sub
les
andb
inc
test
pop
bound
pop
ja
xor
inc
push
lods
mov
push
mov
add
mov
push
xor
mov
xor
jne
sbb
adc
adc
and
leave
out
les
and
add
and
inc
lcall
sub
or
push
and
add
scas
and
inc
mov
add
scas
icebp
call
adcb
mov
and
test
xchg
push
adc
or
and
inc
jnp,pt
daa
ret
test
pop
jae
mov
mov
cmp
and
inc
and
enter
and
mov
cmp
out
mov
and
cmp
enter
mov
les
xchg
mov
add
and
or
push
mov
and
sbb
cmp
xchg
jg
add
and
mov
cmp
xchg
sbb
pmulhuw
sbb
sarb
cmp
in
dec
sub
xor
and
push
and
sub
cmp
cmp
cmp
mov
lds
pusha
repnz
sub
push
or
adc
cmp
cmp
sub
cmpsb
movsb
imul
xchg
pop
jb
fsts
dec
cmp
xchg
add
in
out
aaa
xchg
sbb
scas
jno
mov
xchg
push
pop
and
sbb
xor
andb
pushf
and
xor
inc
popf
mov
lock
add
ss
lods
xchg
insl
xor
and
lods
push
stos
filds
cmpsb
fbstp
dec
xchg
test
enter
ss
hlt
push
data16
xor
add
xor
add
aam
lods
bound
movsl
add
add
push
and
and
cmp
sub
and
xchg
xor
add
mov
sbb
and
sti
xor
add
inc
and
inc
adc
xor
xor
mov
xchg
and
and
push
sbb
lock
hlt
pop
add
nop
push
push
pop
fwait
inc
push
sbb
xor
push
pop
hlt
stc
xor
faddl
out
bound
dec
test
les
enter
xor
inc
xor
es
xor
inc
clc
xchg
adc
dec
jecxz
int
xor
iret
xor
mov
adc
mov
ret
repz
ja
daa
jge
enter
js
sbb
test
cmp
adc
rorb
cmpb
mov
cld
inc
adc
mov
or
xchg
pusha
mov
and
xchg
xchg
push
pop
inc
lret
fld
inc
loopne
xor
pop
add
or
jmp
pusha
and
add
and
outsb
xor
and
enter
xor
mov
add
in
xor
cld
and
cmpsl
lahf
mov
jno
lods
popa
cli
ja
adc
enter
movsl
or
mov
or
clc
in
jp
and
test
repnz
hlt
das
lods
bound
mov
movsl
aad
shrb
int
inc
imul
mov
mov
inc
iret
insl
clc
adc
mov
or
or
call
and
add
and
das
fstl
and
sbb
iret
cs
add
in
xorb
sti
loop
pop
movsb
push
call
push
and
and
push
mov
mov
inc
fsubr
shll
or
and
add
lea
mov
jae
adc
add
xorb
sbb
add
psubb
rep
sub
adc
or
pop
hlt
addr16
mov
mov
arpl
inc
pop
out
lahf
rorb
add
sbb
sbb
inc
adc
mov
mov
lock
mov
xchg
push
sub
cmc
jp
out
rcrl
dec
or
sbb
in
inc
idivb
cld
inc
movsl
inc
cmp
xchg
push
and
inc
pop
jbe
ss
popa
sub
call
test
mov
pop
sub
add
fildll
add
cmpsl
or
hlt
push
inc
or
fdivp
inc
aaa
add
ret
sub
sbb
push
mov
add
dec
add
fwait
jno
sub
mov
aad
dec
push
xor
inc
pop
nop
cmp
mov
jno
lret
dec
dec
push
hlt
pop
andl
mov
push
add
test
test
popa
lret
sub
or
inc
mov
and
icebp
mov
stos
jns
clc
mov
inc
pop
cli
or
mov
jno
jmp
mov
or
cwtl
pop
lret
dec
out
mov
pop
in
sub
sub
mov
les
arpl
in
int3
push
pusha
xchg
pop
nopl
add
test
addl
or
push
or
adc
cmp
adc
jo
std
sbb
cltd
nop
push
les
jmp
adc
or
dec
inc
into
cmp
push
jmp
pop
mov
add
fwait
or
ret
xchg
sbbb
popf
pop
inc
and
push
jae
dec
adc
jne
cmp
and
xor
adc
push
inc
cmp
aad
ds
xchg
in
adc
lods
dec
mov
fldt
daa
xchg
sbb
push
jbe
int
pop
int
lods
push
hlt
inc
pop
test
mov
or
rolb
fidivrs
daa
jl
xor
and
mov
push
div
mov
add
jns
es
or
push
mov
push
push
mov
call
pop
jl
push
sbb
hlt
and
mov
ret
out
mov
lahf
dec
mov
lea
mov
adc
hlt
arpl
or
call
and
dec
and
outsb
and
aaa
or
les
or
or
fld
sub
cmpsb
add
pop
in
je
and
add
popa
xlat
leave
sub
aam
mov
jo
xor
mov
popf
aad
mov
mov
adc
jo
cmp
mov
pop
test
js
mov
or
imul
pop
or
push
fs
enter
cmp
cmp
ljmp
rorb
xor
js
adc
fmull
push
das
jb
bound
out
scas
js
pop
jae
dec
ja
mov
adc
loop
and
in
and
imulb
cmp
movsl
pop
les
movb
or
or
sub
nop
push
mov
movsl
aas
and
cmc
and
or
test
dec
nop
lea
in
sbb
and
and
push
sbb
jge
dec
jno
test
xchg
adc
addb
pop
jb
shrl
adc
push
inc
nop
pop
mov
and
and
sbb
sub
and
xchg
imul
je
movsb
xchg
ret
inc
sub
sbb
xor
insl
push
das
sbb
sub
add
add
push
xchg
in
iret
pop
xor
inc
dec
and
pop
cvttps2pi
mov
xchg
cwtl
lock
add
hlt
enter
jbe
add
sbb
inc
jne
xorb
inc
sub
rorl
sub
xor
call
loop
add
pop
pop
xor
push
xor
pop
fcoml
or
ficompl
pop
in
inc
pop
adc
add
shll
popl
push
sbb
or
push
imul
jg
jne
pop
mov
mov
fists
fwait
push
loop
adcb
pop
pop
push
jne
cli
shll
sti
imul
mov
call
ret
inc
cli
xor
jp
in
dec
fwait
aas
push
sub
scas
mov
pusha
xor
or
test
sbb
add
movsb
in
stos
add
dec
enter
mov
movl
dec
shl
imul
pushf
or
xchg
jmp
sbb
test
dec
and
xor
push
xchg
test
arpl
mov
or
cmpsb
loopne
cmp
cmp
inc
adcl
sbb
and
mov
jecxz
xchg
sbb
xor
jb
sbb
lds
push
orb
or
fstl
jl
ja
hlt
movsl
xchg
and
dec
clc
ret
sub
clc
cmp
push
and
sub
mov
add
dec
adcl
es
xchg
in
inc
mov
rclb
lods
sbb
rorl
pop
inc
in
mov
add
out
imul
add
jl
push
jp
popf
and
dec
push
push
jmp
jne
inc
or
inc
enter
lahf
aas
sbb
bound
push
add
mov
add
fwait
cmp
das
movsb
orl
adc
add
stc
adc
push
imul
push
rcrl
mov
rorl
adc
xchg
sar
lcall
pop
add
and
add
push
cwtl
cmpsb
jmp
cmp
dec
xchg
jl
cmp
push
sub
and
push
push
add
outsl
fisubrs
or
jo
add
fcomp
or
inc
movsb
mov
xor
and
ret
scas
sbb
xchg
jo
and
sbbb
test
jnp
nop
push
rclb
sbb
or
les
cmp
jno
sbb
pop
add
dec
inc
adc
roll
pop
sbb
mov
outsb
dec
add
daa
or
and
pop
add
sbb
call
shrl
and
or
xchg
sbb
pop
call
or
adc
dec
stc
inc
sbb
fs
cltd
pop
test
stc
test
sub
popf
subb
mov
add
movsb
movl
mov
and
push
cmp
ror
stc
add
in
sub
test
jmp
fadds
push
ret
xor
jmp
add
and
sbb
es
pop
mov
mov
inc
lds
jmp
adc
and
mov
lods
mov
es
adc
rcll
jb
mov
outsb
stc
rorb
mov
add
rol
hlt
or
sbbl
aas
jne
movsb
pop
stos
adc
lods
ldmxcsr
in
fwait
or
loope
and
push
sub
jmp
xor
xor
pop
repnz
dec
adc
jnp
xchg
pop
push
adc
sbb
jns
adc
mov
addr16
push
jne
out
adc
int3
lock
jmp
or
sbb
or
push
pop
repnz
mov
dec
adc
dec
xchg
gs
jl
adc
adc
outsl
repnz
pop
xchg
xchg
adc
outsb
shl
arpl
inc
push
cmpl
push
xchg
mov
hlt
adc
lock
mov
mov
pop
test
or
xchg
lea
xchg
in
sbb
pop
adc
and
repnz
pop
movsb
and
inc
in
pop
and
shrb
add
push
repnz
inc
js
or
adc
jo
push
pop
adc
add
dec
adc
or
add
adc
adc
xchg
imul
add
mov
mov
adc
xchg
xchg
sub
scas
mov
mov
sti
add
rorl
inc
addb
cvtps2pd
adc
dec
adc
popf
add
push
adc
lret
fsubrl
cmp
call
sbb
inc
lods
xchg
xchg
and
mov
jg
fcoms
aaa
and
addr16
mov
addr16
push
push
test
add
arpl
sub
add
dec
rcll
aam
xlat
pop
rcl
adc
sub
int3
cltd
jbe
roll
pop
les
sub
jno
fwait
rorl
dec
int3
and
sbb
mov
mov
fcompl
ret
mov
outsb
call
or
dec
add
jge
jns
push
xorb
in
insl
xorl
in
jno
ljmp
or
push
jo
test
repnz
int3
loope
adc
fwait
rolb
pop
cmp
lock
or
mov
push
mov
xor
pop
ja
or
cld
dec
or
cwtl
mov
pop
lods
call
and
test
jge
cltd
lcall
or
pop
push
cltd
fsubrl
pop
cmp
clc
into
and
in
dec
cwtl
cmp
rorb
jmp
int3
popf
push
mov
push
add
xchg
js
bound
imul
cmpsb
push
cmp
int
mov
mov
jne
loope
mov
fmull
adc
frstor
scas
pop
insb
mov
and
pushf
push
sbb
into
mov
cmpb
out
imul
test
xchg
push
aam
outsl
and
jnp
gs
adc
nop
or
or
jg
loopne
mov
mov
add
adc
push
mov
lods
mov
rclb
or
sbb
cmp
ja
push
leave
sub
add
pop
sbb
add
fs
push
xchg
or
flds
int
add
or
fs
sahf
sub
ss
pop
pushf
sub
gs
test
mov
adc
and
ret
xchg
cmp
adc
lods
lcall
popa
fisubs
shl
sbb
xchg
add
cmp
cmp
add
scas
mov
pusha
loope
leave
adc
aas
jbe
xor
adc
cmp
leave
adc
mov
and
mov
stos
xchg
jecxz
push
repz
pop
gs
inc
and
rcl
pop
push
adc
add
cwtl
cmp
std
es
iret
in
call
aam
mov
lock
out
push
push
add
call
das
ret
movsb
loopne
in
mov
inc
cmpsl
stos
xchg
popf
insl
rorl
imul
xchg
pop
aas
cmp
rcll
or
jbe
or
mov
push
shll
inc
push
cmpsl
jno
inc
xor
roll
or
adc
add
loop
inc
test
mov
test
call
or
push
rcll
push
dec
fs
jne
pop
push
and
leave
add
mov
shl
shrb
leave
cs
jb
add
xchg
mov
gs
pop
loopne
add
int3
add
jbe
xchg
stos
mov
inc
jmp
and
jl
ja
xor
dec
int3
adc
adc
add
int
add
push
pop
outsl
bound
xor
in
test
ss
lods
jmp
fsts
xchg
xchg
cld
in
ret
call
lods
add
add
subl
sbbl
stc
cld
push
stc
pushf
sarb
jmp
push
dec
fs
sbb
in
shrl
dec
test
gs
inc
push
rcl
clc
nop
mov
dec
aaa
fildl
push
dec
fiaddl
cmp
dec
pop
icebp
add
or
and
mov
cmp
enter
movsl
call
test
mov
or
and
push
cltd
and
sub
lcall
and
add
or
loope
inc
insb
fnstcw
mov
mov
imul
xchg
dec
adc
add
std
int3
pop
shll
daa
in
test
pop
sub
arpl
repz
loopne
add
popa
pushf
adc
add
and
dec
jae
sarb
or
ret
aas
mov
adc
ret
mov
int3
lea
sbb
stos
loope
adc
cmp
mov
in
push
sub
xchg
movsl
enter
daa
pop
sub
sub
dec
out
pop
movsl
dec
push
rolb
jne
mov
jg
out
mov
test
adc
push
or
enter
cs
lret
mov
test
mov
mov
or
jnp
pop
push
dec
sub
inc
add
sbb
addb
gs
in
add
scas
adc
je
push
xor
scas
and
lret
add
sbb
inc
jne
scas
inc
cmpsb
pop
or
sbb
scas
cmp
aam
pop
pop
sbb
out
or
rolb
movsb
inc
loope
lcall
out
out
push
inc
mov
shrb
imul
sub
lcall
ret
syscall
xor
jo
add
xchg
mov
add
push
mov
bound
add
add
test
add
inc
inc
or
ret
insl
push
adc
sub
rcrl
scas
mov
scas
or
fsubr
dec
in
cli
test
scas
cmp
cmp
add
movl
into
jmp
rorl
cltd
hlt
or
add
xchg
mov
iret
cmp
fistl
iret
cmpsb
mov
lods
addl
movd
fisubrl
out
add
sub
push
adc
jb
sbb
sbb
push
adc
push
andl
iret
push
insb
iret
mov
cmpsl
fistl
enter
inc
xor
popf
mov
iret
mov
jo
data16
iret
fs
cmpsb
iret
fldenv
push
inc
mov
inc
sub
je
repz
sbb
sub
adc
xor
out
cmpsb
outsb
sbb
stos
sbb
loop
je
dec
loope
mov
and
pop
mov
mov
mov
lret
nop
add
add
xchg
xor
sub
out
call
sbb
dec
xor
push
xor
iret
pushf
inc
xor
jbe
insb
dec
sbb
sub
push
cmp
mov
sub
sbb
mov
dec
mov
fcomp
push
fstpl
cmp
mov
es
sub
testl
fldt
call
jge
add
add
add
adc
lods
mov
subb
cmpsl
sub
add
into
lret
add
jl
sub
adc
lcall
add
out
mov
das
fistl
mov
pop
adc
lds
dec
lock
nop
push
vmwrite
inc
shl
mov
jno
push
cmp
orl
pause
je
ss
sub
push
psubusb
jno
xchg
push
xor
pushf
xor
adc
loop
push
or
add
dec
sar
push
jno
orl
test
cmpsb
mov
pop
das
adc
push
prefetchw
push
inc
mov
orl
stos
pop
imul
fidivrl
dec
push
or
mov
scas
imul
loop
ret
scas
enter
mov
xor
orl
dec
aad
fstpl
cmpsb
scas
lds
test
and
push
aam
scas
mov
dec
roll
movzbl
add
jo
mov
xor
push
jnp
dec
push
scas
int
rcrl
test
cmpsb
mov
scas
dec
push
xor
dec
jo
scas
out
lcall
cwtl
shrb
sbb
and
cld
mov
in
jmp
imulb
out
pop
xchg
movsl
dec
loope
hlt
scas
cltd
sbbb
push
aaa
add
scas
pop
inc
xchg
xor
or
sub
sbb
push
xor
and
scas
test
add
scas
pop
sahf
xorb
leave
sahf
lret
xor
sub
loope
aad
dec
push
push
xor
mov
clc
push
rcl
pushf
dec
stc
push
cld
xchg
sub
cmp
fildl
jecxz
and
call
sbb
test
fs
gs
shl
inc
push
xor
popf
dec
pop
fdiv
lock
jo
mov
lock
mov
mov
dec
and
inc
push
cmp
mov
ljmp
je
pop
pop
pusha
or
add
popa
xchg
sub
xor
xor
lock
sub
stos
dec
cltd
loop
xchg
inc
xchg
add
pop
loopne
xchg
sarb
fisubrs
add
xor
xchg
sub
jecxz
div
outsb
jb
cmp
outsl
mov
mov
ret
dec
push
inc
outsl
dec
shlb
sub
push
adcb
outsl
mov
or
inc
incl
out
lcall
push
les
repz
xor
mov
dec
cmp
cmp
xor
sub
inc
jl
test
adc
orb
push
insl
pusha
adcb
pusha
cmp
pushf
cli
andb
nop
mov
lret
arpl
jo
sbb
xor
loop
enter
rolb
sti
xchg
mov
outsl
adc
inc
push
mov
or
mov
outsl
mov
push
iret
imul
iret
out
test
or
jbe
mov
or
mov
push
adc
adc
decb
je
outsl
pop
stos
inc
dec
jp
outsl
lret
inc
imul
pusha
adc
push
inc
cltd
ret
inc
dec
sbb
xor
rcl
and
push
repz
out
iret
xchg
dec
loope
out
dec
mov
adc
sub
or
sub
sub
lock
hlt
add
adc
or
and
cltd
cmpb
push
adc
adc
add
rorb
iret
stos
mov
mov
iret
jnp
push
fmuls
hlt
ret
and
rolb
addb
iret
dec
popa
orb
mov
mov
out
add
pop
les
lret
jb
lret
push
iret
push
cmpsb
mov
xchg
leave
mov
pop
jo
cmp
xchg
dec
jnp
iret
add
test
push
sub
iret
pcmpgtw
aaa
push
inc
iret
add
add
movl
lock
mov
sub
test
test
adc
push
push
xchg
xchg
cmovae
push
pusha
test
adc
cwtl
loope
jo
pop
adc
xor
mov
mov
iret
sbb
inc
mov
or
aaa
je
iret
cltd
add
and
inc
test
inc
iret
mov
jo
mov
mov
jmp
push
iret
stos
stc
or
ljmp
mov
sub
xchg
iret
in
mov
push
sub
pop
add
mov
push
iret
fsts
inc
push
xchg
mov
test
sbb
aaa
add
inc
sub
iret
or
stos
icebp
inc
iret
or
pusha
add
iret
subl
mov
iret
int
jbe
xchg
sub
test
sub
or
iret
inc
cltd
ret
iret
adc
cltd
les
and
cmpsl
mov
add
adc
push
push
add
xor
and
push
add
jmp
xor
or
out
fnsave
movsb
adc
cmp
push
js
js
or
out
cwtl
into
cltd
cmpb
cmp
test
add
sub
subl
dec
add
es
bnd
xor
pop
cs
cmpsl
inc
cltd
out
fsub
sub
stos
push
cmpsb
out
popa
or
xor
test
and
mov
lock
mov
fisubrl
push
xor
push
cmpsb
jo
out
lcall
cmpsl
cwtl
scas
push
mov
ret
dec
xchg
add
call
jmp
dec
loopne
pop
mov
jnp
sub
ja
ret
mov
out
rolb
adc
mov
push
fsubrs
out
add
mov
rorl
scas
add
dec
scas
ljmp
scas
jne
cmc
push
arpl
jo
gs
ret
cmpsl
scas
dec
lar
repz
js
repnz
lock
loope
adc
inc
xchg
test
in
jnp
xor
pop
lea
scas
mov
dec
popa
mov
popf
mov
scas
or
shll
orb
scas
and
mov
xchg
cmp
cmp
jno
mov
in
mov
sbb
scas
xlat
popa
push
cmpsb
jo
lahf
iret
push
xchg
pop
xchg
xchg
scas
mov
lahf
sbb
out
das
lret
pop
mov
dec
loope
xor
int3
sbb
stc
adc
adc
or
xchg
xchg
das
and
push
inc
call
test
cmpsb
das
and
test
mov
test
das
or
ret
jo
cs
pushf
or
test
sbb
mov
sub
push
leave
fiadds
lods
sub
or
pop
mov
mov
outsl
pop
fs
sbb
aas
push
stos
fidivrs
pusha
push
rcrb
or
sub
add
adc
out
xchg
sub
mov
bound
mov
or
mov
xorb
sbb
aam
jmp
call
leave
xlat
aad
fsubs
cmp
sub
or
push
sub
sub
das
leave
sub
imul
pusha
xchg
das
mov
or
das
rorb
sub
outsb
xchg
sub
das
mov
xchg
sub
das
inc
cltd
ret
mov
mov
int3
cmpsb
push
sbb
inc
cltd
ret
das
xor
adc
cmp
lock
xchg
dec
and
dec
das
cmpb
roll
xor
adc
pop
sbb
add
sar
cmpsb
jo
adc
test
in
add
stc
xor
adc
jmp
add
push
xor
and
sub
dec
shrl
clc
pop
outsb
sbb
das
mov
or
cmp
out
or
jo
sbb
xor
dec
fsubrs
push
cs
pusha
xchg
sub
leave
scas
mov
jmp
fwait
lahf
enter
dec
mov
sbb
mov
mov
out
es
pusha
xchg
das
xor
setl
sub
add
push
hlt
mov
mov
bound
das
add
and
sbb
cmp
sbb
das
insl
loope
cmpsb
or
and
adc
cmpsb
and
test
xchg
and
das
loope
mov
sbb
sub
call
mov
or
pop
sarb
int3
fimuls
xchg
add
and
jmp
lock
push
das
add
sub
test
xor
out
push
das
shll
push
ret
das
fwait
dec
push
or
jmp
xor
cmpsb
jo
lea
jle
or
push
das
push
dec
mov
sbb
adc
mov
lock
cs
lret
push
adc
jnp
sub
sbb
sub
xor
push
andl
add
in
insl
push
push
xor
dec
aam
and
dec
inc
or
sub
call
lret
sbb
lods
xor
das
inc
cltd
ret
das
das
sub
popf
inc
push
jne
cmp
das
out
xor
repz
cmpsl
push
popf
es
fs
push
push
sbbb
jg
cmpsb
jo
cmp
push
xor
subb
cs
lods
addb
xor
inc
stos
inc
sub
or
sbb
jbe
aam
das
inc
cltd
sbbb
test
or
ret
adc
jo
sub
sbb
rorb
gs
xchg
jle
popa
jmp
shlb
cmpsb
in
mov
push
adcb
das
sbb
mul
stos
ss
sub
test
loope
les
jo
jle
adc
subb
jb
pop
mov
test
fisubrs
push
das
mov
xor
add
push
or
sti
aad
push
sbb
stc
adc
pop
adc
rcl
inc
popl
das
mov
gs
loopne
jle
loope
jo
das
test
xor
das
xor
sahf
pop
xchg
xchg
mov
test
or
pop
mov
repnz
mov
jle
das
dec
shrl
stc
and
push
mov
mov
pusha
xchg
sub
and
fisubrl
cmp
pusha
xchg
das
cmp
or
xor
das
test
sub
gs
bound
cltd
sbbb
dec
loope
mov
das
dec
inc
pop
add
add
adcl
or
andb
sbb
sub
inc
shll
xor
adc
sub
inc
dec
xchg
sub
shrl
and
inc
pop
pusha
das
add
dec
je
clc
popa
push
sbb
das
sub
sub
push
mov
adc
push
mov
pop
aam
test
xor
das
test
out
xchg
dec
shll
jo
or
push
cmpsb
das
add
push
xor
rcll
dec
rorl
sub
dec
sbb
or
sbb
push
rorl
mov
int
inc
cmpsb
dec
and
push
cwtl
shl
xchg
cmp
adc
movsl
mov
sub
lea
test
ret
xchg
das
push
sbb
or
bound
dec
loope
jo
jns
adc
rolb
das
lret
test
adcb
mov
test
fs
push
fdivrs
xor
xor
subl
lret
or
dec
xor
out
push
daa
sbb
add
sub
rclb
mov
push
xchg
das
into
fisttpll
dec
loope
ret
adc
mov
sub
inc
mov
mov
xchg
das
sub
xor
or
test
fsubs
pop
out
mull
inc
cltd
das
fmulp
bound
dec
lret
add
outsb
pop
mov
das
jmp
jb
sub
sarb
shrl
push
xor
roll
adc
cmp
inc
in
scas
inc
dec
cmp
cs
cs
mov
insl
scas
or
adc
inc
push
js
mov
das
sar
scas
push
cmpsb
mov
mov
xor
lahf
add
add
xchg
sub
test
lock
inc
dec
popa
lock
dec
popa
insl
mov
push
mov
mov
das
dec
mov
or
xchg
sub
cmp
sbb
fstpt
das
or
lods
xchg
and
add
xor
adc
push
lea
shl
jmp
push
lea
pop
test
rcll
sub
mov
push
mov
xchg
sub
popf
add
xor
mov
shlb
arpl
mov
test
sbb
das
mov
mov
cltd
add
inc
das
pop
push
js
roll
or
or
repz
pop
jns
mov
and
ds
cmp
repz
and
outsl
scas
into
repz
repz
push
cld
inc
push
lea
sub
sub
call
iret
stos
js
push
std
mov
cmp
repz
movsl
mov
sti
jns
cmpsl
stc
or
sbb
jns
out
lods
rcl
push
cs
std
adc
aam
sub
mov
js
shlb
das
orb
dec
popa
pop
sub
pop
mov
add
dec
cmp
jo
inc
cltd
sbbb
sbbb
aam
inc
das
mov
push
cmpsb
das
nop
and
push
dec
inc
inc
or
inc
mov
mov
test
or
sub
int3
mov
das
push
pushf
aaa
mov
add
inc
es
dec
sub
or
jae
das
and
sub
mov
les
inc
neg
bnd
add
jo
sbb
test
xor
xor
jne
shll
nop
xchg
push
jb
or
hlt
push
clc
lock
les
das
into
into
arpl
or
push
js
das
pop
sub
fsubrs
fwait
xor
adc
arpl
mov
dec
aam
xchg
sub
push
pushf
inc
das
add
test
push
jg
sub
jg
dec
lahf
cs
cmpb
or
sub
mov
and
xlat
xor
push
pop
cltd
and
popl
das
inc
sbb
call
in
sbb
pop
iret
and
xchg
sub
dec
cs
ret
mov
inc
cltd
sbbb
sub
mov
ret
jge
inc
sub
dec
cltd
sbbb
push
enter
inc
dec
ja
pop
push
and
adc
push
sbb
dec
fs
sub
add
push
mov
dec
push
inc
push
js
out
push
and
aad
pop
out
push
mov
xchg
pusha
xchg
sub
je
pushf
testl
push
pusha
xchg
sub
fnstenv
adc
fsubr
or
xchg
sbb
add
add
mov
add
stos
add
repnz
std
add
paddb
jp
xor
push
cmpsb
mov
xor
fcomps
and
into
stos
sub
push
xor
sbb
sbbb
add
jo
and
jmp
push
cmpsb
dec
ds
les
push
pop
jp
push
cmpsb
loopne
sbb
xchg
push
js
orb
xor
je
ja
mov
dec
xor
adc
adc
xchg
sub
push
rorb
add
cltd
ret
dec
mov
inc
dec
jmp
dec
cmp
dec
sub
dec
jnp
test
rorb
ficoml
pop
lea
cmpsl
popa
shrl
stos
icebp
mov
adc
and
adc
dec
cli
sahf
mov
pusha
dec
pop
jb
ret
dec
test
scas
lcall
dec
rcrl
jle
lret
inc
shll
xor
dec
push
mov
adc
pop
jo
mov
dec
imul
cmpsb
loopne
push
call
push
dec
mov
test
push
xlat
addb
mov
dec
inc
mov
dec
xchg
sub
add
xor
sub
dec
xchg
cmpsb
lock
dec
xor
push
dec
lret
sbb
mov
sub
or
sub
or
dec
rorl
dec
aam
int3
or
xor
cmpsb
sbb
sub
cmpsb
jo
insl
sbb
loope
adc
xchg
mov
lret
mov
test
push
add
mov
nop
and
enter
add
push
js
xorl
sbb
mov
adc
lcall
sbb
lret
push
dec
and
test
dec
dec
inc
sub
adc
add
sub
outsb
xchg
sub
test
cmp
sarl
mov
adc
dec
dec
jmp
dec
xchg
sub
push
mov
cmpsb
jo
rorl
or
push
add
xchg
sub
and
jmp
mov
dec
or
add
sbb
cwtl
or
add
cmpsl
sbb
mov
cmpsb
pusha
jle
push
inc
clc
cmpsl
icebp
andb
cmp
or
ret
xchg
in
sbb
imul
inc
dec
adc
xchg
popf
adc
je
pop
pusha
loopne
adc
das
pop
mov
das
mov
jle
mov
jle
xor
mov
aaa
fisubl
psrld
mov
or
dec
push
inc
push
rclb
or
add
iret
test
sub
pop
add
adc
mov
insb
inc
pop
inc
outsl
ret
jne
mov
mov
add
inc
daa
mov
pop
adc
fwait
mov
add
mov
xlat
int3
lahf
add
int3
mov
sarb
cmpsb
lock
add
subb
notb
scas
add
adc
cmpsb
pusha
cmpsl
scas
cmp
pusha
xchg
sub
subl
cmp
scas
mov
int3
repnz
outsb
int3
addr16
add
outsb
idivb
push
adc
movsl
add
sub
adc
enter
cmp
pop
xor
lods
repnz
and
cmpsl
cmp
cwtl
ret
inc
add
scas
add
xchg
scas
or
ja
pop
scas
add
test
popa
jne
or
loope
push
add
dec
scas
movsb
pusha
or
dec
push
rclb
scas
sub
scas
cs
jmp
aaa
push
das
ret
addr16
push
xor
add
mov
cwtl
scas
or
jo
out
addr16
dec
add
mov
and
mov
cmpsb
scas
sbb
subb
aam
add
scas
add
mov
inc
inc
mov
adc
call
sub
pusha
or
scas
ret
mov
or
mov
pusha
push
in
fcomps
dec
push
in
pop
or
inc
scas
loopne
mov
hlt
movsb
js
add
adc
addl
xor
mov
xor
scas
add
scas
notl
fisttps
lahf
stos
sbb
dec
loope
mov
adc
push
dec
loope
add
inc
add
mov
adc
inc
add
pop
adc
scas
aam
xchg
out
sbb
pop
add
xor
add
cmp
push
repnz
decl
add
in
and
mov
pop
add
add
inc
scas
dec
popa
dec
sbb
mov
mov
scas
sbb
sub
subb
call
xor
andb
add
push
movb
sbb
add
movsb
lock
dec
sub
orl
xchg
xchg
fiaddl
lahf
into
fs
cmpsb
stc
inc
add
ret
scas
rclb
add
push
scas
mov
dec
and
sarl
dec
or
jge
cmpsb
cmp
repz
xchg
jno
test
cli
jns
iret
aas
adc
xchg
sub
sbb
icebp
movsb
lahf
aam
add
dec
mov
fs
ja
fucomp
loop
out
testb
lahf
out
rcr
sbb
mov
dec
mov
adc
adc
scas
add
dec
mov
scas
sub
sub
add
and
nop
sbb
push
mov
lahf
stc
rclb
xchg
out
outsl
jmp
scas
push
mov
scas
jo
shlb
mov
cmp
jp
add
xchg
mov
pop
orb
mov
pusha
clc
pusha
and
pusha
xchg
cmpsb
scas
inc
into
sbb
stos
add
adcl
push
pop
or
push
add
and
dec
or
int
bndldx
rclb
and
push
add
sub
mov
add
xchg
cmp
subb
adc
adc
imul
clc
in
cwtl
ret
scas
cld
adc
add
add
xor
pop
mov
scas
les
mov
cwtl
scas
add
pop
sbb
clc
sahf
mov
scas
cmpsb
mov
scas
push
xor
xchg
xor
leave
mov
add
test
das
add
loop
sarl
scas
mov
add
push
mov
js
adc
scas
or
inc
add
push
addb
jo
scas
sub
xchg
and
or
mov
mov
push
add
subb
hlt
sub
add
int3
scas
jl
lock
or
push
xor
sbb
mov
aas
push
or
mov
fstpt
insl
sbb
scas
sbb
sbb
add
scas
repnz
jmp
mov
adc
adc
dec
scas
ret
xor
loope
adc
mov
insl
cmp
jo
push
clc
mov
je
adc
push
add
adc
scas
and
pop
inc
add
mov
cmpsb
and
add
add
mov
fcoml
pusha
pusha
or
lds
sub
sub
and
ret
sub
dec
loope
scas
and
int
fwait
mov
cmp
movsl
sbb
xor
push
js
scas
call
sub
and
scas
cmpsb
and
scas
cld
xchg
addb
jo
enter
scas
push
add
dec
dec
add
subb
push
add
jecxz
add
and
scas
push
out
adc
add
pop
adc
pop
je
add
xor
cmp
fidivrl
aad
and
subb
mov
push
add
pushf
subl
lahf
add
pop
jnp
lahf
add
add
jle
cmpsb
loopne
mov
sbb
push
adc
scas
scas
sub
add
scas
cwtl
addb
iret
push
imul
scas
pop
mov
scas
pushf
xor
inc
inc
subb
add
xor
and
mov
scas
add
xchg
push
adc
scas
add
sub
je
xchg
subb
or
adc
cmp
push
scas
jecxz
mov
cmpsb
and
mov
lahf
add
nop
dec
stc
jno
push
rclb
add
sub
or
scas
push
rcrb
popa
dec
test
or
outsl
pop
add
outsb
dec
and
imul
pop
and
adc
add
dec
popa
aam
cmp
add
xor
push
rclb
ret
shrb
cwtl
scas
jo
test
sub
jge
add
or
xor
and
inc
scas
sub
dec
popf
pop
and
insb
imul
push
adc
sub
push
xor
jo
push
pop
test
aaa
adc
addb
pusha
scas
rol
xor
add
adc
adc
loope
adc
dec
add
push
add
pusha
or
cs
call
mov
xor
lret
adc
cwtl
ret
scas
inc
mov
loope
add
adc
push
das
and
pop
adc
adc
in
dec
roll
pop
loope
jl
mov
test
pop
scas
subb
subl
and
inc
push
scas
neg
add
or
jnp
push
js
outsl
ret
data16
in
xor
inc
cmp
add
push
mov
add
aaa
push
add
or
jmp
push
jp
pusha
or
bound
and
js
rclb
test
pushf
mov
sbb
movsb
xor
and
add
mov
push
or
scas
mov
shll
ret
xor
add
scas
mov
add
xor
mov
mov
scas
push
push
push
adc
adc
push
sub
sub
xchg
xor
push
add
outsb
stos
add
or
scas
int
and
les
xchg
ret
and
xor
repz
xchg
and
add
sbb
mov
nop
cmp
adc
dec
or
popa
shlb
or
fcoms
call
adc
sub
loope
rcr
scas
add
xor
mov
add
add
pusha
sahf
or
ret
add
nop
add
or
and
or
xor
adc
push
cmp
aaa
add
push
dec
or
inc
sub
mov
enter
jno
push
in
arpl
sub
rclb
stc
push
mov
es
sub
sbbl
sbb
mov
popa
test
lods
dec
inc
add
test
out
cmp
es
decb
mov
add
sub
out
and
movsl
add
dec
or
jo
sub
js
sbb
sbb
inc
adc
mov
add
xor
cmp
and
adc
out
stos
mov
add
inc
xor
out
pop
mov
mov
nop
xchg
jl
enter
mov
xor
es
cwtl
pushl
mov
mov
mov
nop
mov
jecxz
in
out
add
mov
add
jo
lret
pop
or
add
sub
cmp
and
xchg
test
out
roll
and
dec
add
shll
jmp
inc
add
stos
test
mov
push
jns
adc
adc
dec
out
sub
pop
shll
sub
cwtl
xchg
xchg
pop
sub
in
xchg
aaa
mov
pop
movsb
rorb
jb
mov
in
inc
pop
mov
lret
in
jbe
mov
xchg
mov
jmp
lahf
lret
or
xor
adc
adc
mov
mov
aam
cmp
jge
add
inc
call
adc
mov
and
fs
mov
inc
xchg
cwtl
inc
out
repz
lahf
add
add
stos
add
int3
cwtl
stc
xor
dec
sbb
add
add
or
adc
out
or
pusha
out
ret
pop
push
fisubrs
adc
add
sbb
or
fildl
das
cs
or
pushf
mov
call
inc
dec
repnz
and
les
push
push
fadd
and
push
inc
add
mov
test
decb
pushf
test
mov
jo
cmpsl
adc
cwtl
bound
push
push
shrb
push
mov
lds
pop
jl
add
sub
fcoms
xchg
lahf
stc
push
push
and
mov
lahf
aas
leave
mov
cmp
jg
push
or
push
jbe
push
xchg
sbbb
cmp
push
test
imul
pop
aas
loope
shlb
add
iret
subb
or
push
or
pusha
iret
leave
ja
rclb
rorb
sbb
iret
subb
adc
rclb
iret
xor
xor
jge
pop
add
sbb
iret
filds
movsb
std
aam
push
xor
jae
dec
ja
mov
or
add
dec
sub
insl
lods
inc
inc
adc
push
cmp
push
cwtl
ret
out
iret
subb
add
es
jno
add
test
iret
dec
loope
push
orl
add
cmp
push
repnz
leave
xchg
mov
inc
ret
xchg
add
cld
nop
lea
mov
or
or
ss
xchg
cmp
js
adc
xchg
pop
out
insb
sti
and
jns
sub
add
xchg
leave
ljmp
xlat
add
pushf
pop
or
loopne
mov
or
pop
sahf
sbb
mov
adc
pop
push
lock
sbb
inc
pop
mov
nop
sbb
std
xchg
and
mov
in
add
mov
hlt
or
jbe
test
add
add
cmp
jnp
idivb
adcl
adc
xchg
xchg
scas
push
and
pop
sub
sbb
cmp
inc
enter
dec
dec
push
push
push
test
pop
pusha
fs
addr16
insb
cmc
add
outsb
mov
jo
je
js
sbb
mov
dec
idivl
dec
mov
and
pushf
or
pop
or
mov
dec
loope
gs
or
iret
mov
subb
mov
adc
add
jno
mov
and
xor
xchg
gs
dec
add
iret
dec
insb
sbb
dec
loope
iret
adc
adc
enter
rcrl
dec
cwtl
ret
je
or
add
and
subb
jb
iret
push
sbb
sub
ds
add
iret
rorl
adc
dec
subb
stos
iret
dec
test
iret
dec
push
dec
fdivl
xchg
sbb
pusha
or
or
iret
movb
addb
iret
subb
mov
outsl
orb
imul
ret
or
loope
lods
add
loope
iret
add
iret
dec
out
xor
and
adc
out
sbb
jge
call
adc
iret
test
adcl
iret
ret
pusha
or
add
andl
iret
fdivrs
xor
or
lock
sti
scas
add
adc
xor
or
jl
subb
mov
stc
mov
in
or
sbb
cwtl
inc
sbb
iret
dec
inc
lock
insl
fdivl
cmpsb
fs
add
or
shrb
fmuls
sbb
or
pusha
or
iret
sub
and
lock
test
push
aas
iret
add
sub
mov
mov
or
inc
ret
xor
shrb
pusha
add
jo
push
xor
addb
pop
lret
es
jns
repnz
add
adc
adc
add
imul
mov
cmpsb
iret
add
add
iret
nop
inc
shrb
imul
cwtl
subb
iret
scas
mov
iret
xchg
pusha
push
add
iret
cltd
inc
add
popa
xor
subb
dec
in
dec
jp
or
test
add
iret
test
mov
add
iret
mov
cwtl
ret
and
cld
iret
jo
push
mov
call
add
into
and
popa
sbb
adc
enter
push
add
xchg
cmpsb
jo
xchg
add
pusha
or
insl
add
popa
jo
jo
pusha
movl
mov
cmpsb
iret
or
cvtps2pd
dec
rcll
pop
rclb
add
fdiv
xor
push
sbb
push
dec
push
add
or
adc
adc
in
int3
mov
jne
sub
shlb
push
sub
subb
jl
iret
mov
and
add
stos
addl
int3
leave
dec
ret
fcomps
xor
pop
add
iret
aaa
add
push
mov
jno
push
iret
pop
push
push
ret
aaa
pop
je
mov
popf
filds
cwtl
iret
jo
cmp
lods
cmp
add
ja
stos
iret
jbe
mov
jle
addb
or
xlat
xor
cmp
stos
movsb
or
mov
or
enter
xor
rcl
fcmovu
in
lea
pop
arpl
pop
test
out
lock
clc
mov
and
lahf
cmpl
or
lods
adc
adc
xchg
push
dec
sbb
popa
movsl
stos
sbb
and
add
or
movsl
jb
inc
sub
xor
mov
cmp
mov
xor
dec
dec
push
push
or
data16
mov
addr16
test
mov
pop
pop
pusha
sub
push
push
test
addb
nop
xchg
cwtl
mov
mov
fisttps
push
test
mov
aaa
mov
mov
dec
movsl
jb
rcl
fsubrs
loopne
call
sbb
hlt
clc
cld
push
mov
add
adc
pusha
xchg
xor
stos
je
adc
dec
in
and
sub
push
and
xor
in
xor
inc
inc
inc
and
xchg
dec
dec
dec
push
cmp
jo
pop
test
scas
or
js
xor
outsb
sub
push
adc
adc
icebp
arpl
dec
loope
iret
mov
adc
dec
rcll
or
cmpsb
cmp
add
popa
loopne
subb
push
iret
int
lock
iret
sahf
adcb
add
jno
loope
adc
iret
lahf
out
inc
ret
dec
iret
loopne
xor
add
or
cs
add
add
or
xor
or
push
iret
loopne
add
scas
pop
or
xor
add
lods
out
push
xor
jno
xchg
adc
inc
add
shr
xor
adc
iret
mov
cmpsb
xor
iret
cwtl
orb
jo
cmp
add
sub
iret
js
add
iret
mov
push
and
shlb
dec
jo
push
adcb
xor
int3
addl
or
add
iret
add
je
mov
iret
pop
xchg
mov
call
popa
mov
xchg
xchg
and
mov
push
and
cmp
push
iret
movsl
mov
push
ror
jae
inc
cmp
subl
addb
ret
pusha
iret
inc
cmc
or
sbb
jb
inc
inc
add
js
cmpsb
pusha
pop
add
fdiv
mov
and
xchg
xchg
int
aas
cmp
or
lret
add
cmpsb
jo
mov
xchg
aas
shll
inc
push
inc
add
jp
xor
add
add
je
or
lea
das
jnp
add
mov
mov
push
iret
repz
add
sub
aas
jno
add
or
sub
or
adc
push
xchg
iret
and
and
iret
in
adc
dec
rorl
bound
xor
out
mov
iret
adc
inc
lock
ret
adc
dec
iret
lds
sbb
andl
adc
adc
sub
or
or
or
pusha
iret
outsb
mov
sbb
adc
adc
add
push
iret
adc
mov
mov
pop
sub
iret
es
add
cwtl
in
inc
jl
xor
js
add
iret
subb
adc
sub
pop
lret
cld
and
add
xchg
push
rclb
aaa
jne
or
lods
add
imul
iret
cmpsl
sub
scas
add
fmull
in
or
inc
and
sub
nop
insl
push
adc
sahf
repz
cmp
pop
or
add
ret
or
add
or
fidivrs
lret
mov
dec
adc
or
fwait
mov
xor
pushf
fildll
iret
push
jb
in
in
stos
test
popf
pop
cmp
and
iret
add
pop
mov
rclb
shrl
cltd
push
cmc
std
inc
push
or
or
pop
in
push
loope
or
in
add
in
or
pop
subb
mov
sub
mov
add
dec
push
or
inc
iret
imul
iret
inc
add
iret
cmp
iret
pusha
or
xlat
inc
cmp
fdivl
or
add
inc
add
test
add
xor
sbb
rorl
iret
lret
mov
lahf
fs
xchg
movsb
mov
xchg
adc
mov
aas
inc
ret
jne
pop
aas
and
or
rol
jbe
clc
mov
jne
ja
daa
dec
pushf
mov
sub
xchg
shll
test
mov
mov
mov
fdivrp
cmp
lods
dec
jl
dec
xchg
ret
or
add
dec
sub
adc
or
add
dec
and
push
ja
dec
out
sbb
lods
push
ljmp
pop
and
addr16
mov
or
dec
enter
ret
ljmp
dec
xchg
movsb
pusha
imul
dec
loope
dec
data16
add
pop
sub
mov
daa
dec
shl
daa
dec
rcrl
xchg
dec
dec
push
or
push
sbb
outsl
adc
sub
outsl
call
or
mov
or
testb
cmp
and
fadds
adc
and
mov
scas
andb
in
inc
scas
punpckhwd
xchg
fsts
adc
and
cmp
pop
dec
push
scas
movsb
xor
nop
scas
test
out
add
scas
pop
push
mov
inc
xor
sub
inc
xchg
ret
dec
rorl
add
adc
add
dec
push
cmp
jbe
push
shr
add
dec
scas
push
arpl
scas
std
and
pusha
scas
nop
movsb
jo
and
lock
pop
daa
mov
call
xchg
adc
push
add
popa
xor
sub
and
inc
push
and
dec
or
es
fwait
dec
sbb
or
bound
jnp
outsb
adc
or
inc
push
push
dec
adc
xchg
ret
shrb
push
xor
inc
scas
or
jp
sbb
pusha
mov
ret
dec
or
in
and
sbb
stos
mov
scas
inc
sub
or
int3
movl
enter
dec
adcl
add
cmp
gs
pop
std
xchg
outsl
int
int
cmp
cmp
and
or
inc
scas
fucomip
test
sub
adc
mov
inc
and
inc
push
test
js
testl
push
or
adcb
mov
dec
scas
pusha
xchg
movsb
jo
xor
pop
push
adc
adcb
adc
inc
dec
push
scas
jo
mull
and
scas
std
lret
les
dec
loope
clc
push
cmc
scas
and
faddl
sbb
lods
and
sub
in
aad
lret
jl
ds
xchg
inc
nop
and
aad
adc
adc
pop
lcall
inc
xchg
andb
push
dec
push
mov
ss
sbb
je
dec
push
xor
dec
push
scas
repz
scas
lock
scas
push
dec
push
xor
inc
scas
xor
test
cmp
scas
lret
test
scas
and
sub
fldenv
scas
loope
jns
push
test
inc
dec
scas
mov
and
push
ficoml
fsubs
fsubs
loope
adc
scas
jns
sub
inc
and
or
cmp
jg
inc
dec
push
jo
scas
ret
fcomps
inc
mov
and
inc
sub
and
in
js,pt
fdivrs
mov
push
xchg
dec
or
pushf
cmp
mov
pop
and
dec
bnd
mov
cmp
and
cmpsb
jecxz
push
scas
add
push
mov
xchg
scas
hlt
shrb
sub
scas
scas
or
imul
dec
scas
std
dec
dec
fwait
adcb
test
push
jo
scas
inc
xchg
ret
rorl
ljmp
enter
adc
scas
in
mov
stos
insb
lods
dec
mov
or
and
scas
push
sbbl
lock
push
mov
or
enter
sub
scas
or
inc
xchg
ret
push
dec
or
inc
push
dec
push
pop
jle
and
cwtl
jno
lcall
sbb
aam
lret
loope
scas
les
scas
sub
jo
iret
cwtl
jo
sub
mov
nop
movsb
scas
outsl
pop
inc
xchg
ret
mov
xchg
adc
out
push
mov
scas
dec
push
cmp
xor
nop
movsb
loopne
scas
daa
dec
or
mov
sti
and
and
das
inc
xchg
ret
dec
out
xchg
cmp
xchg
inc
mulb
scas
inc
xchg
ret
scas
inc
inc
call
push
and
inc
subb
dec
or
add
mov
dec
mov
add
cmp
mov
idivl
cltd
dec
and
aaa
nop
or
sub
out
add
xchg
and
pop
cmp
and
rorl
sbb
xor
push
test
push
clc
jmp
inc
xchg
pop
adc
xchg
scas
cwtl
insb
fidivs
adc
mov
cwtl
sub
mov
call
and
scas
pusha
push
aaa
test
leave
dec
test
xor
dec
dec
inc
es
dec
pop
loope
in
xchg
jo
test
cwtl
test
xchg
lcall
fs
lds
or
add
or
scas
pop
cltd
inc
cs
pop
or
and
mov
dec
cmp
in
xchg
jbe
call
pusha
push
je
test
pushf
lock
add
push
inc
push
mov
stc
mov
xchg
adc
mov
mov
dec
or
push
push
fadds
or
movsb
push
movsb
jo
adc
or
pop
test
scas
rcr
adc
push
mov
push
adc
mov
inc
fdivrl
xchg
xor
xchg
stos
xor
and
pop
and
scas
cmp
and
push
enter
or
scas
fisttpll
test
xlat
mov
pop
test
fisttps
inc
into
aas
clc
and
sub
and
js
scas
out
ret
scas
inc
pop
imul
xorl
mov
lock
jne
and
sbbb
xor
push
jecxz
xchg
adc
sti
aaa
pop
and
cli
fidivrs
outsl
test
adc
call
adc
test
adc
add
and
add
jnp
test
dec
push
cmp
add
scas
aas
push
scas
aaa
lods
dec
mov
pop
dec
dec
cs
xchg
pusha
push
cmpb
push
jb
cmp
adc
and
in
in
ds
sub
test
sub
dec
shrb
cmp
lods
mov
or
or
jb
cmp
in
in
or
leave
or
cs
daa
xchg
pop
xor
dec
and
sub
nop
scas
jne
pop
das
and
div
jb
mov
add
inc
dec
push
scas
test
dec
test
xor
lds
add
test
and
je
push
scas
and
pop
cli
int3
push
scas
je
aam
ljmp
and
shrb
xor
push
adc
and
and
pop
test
dec
or
xchg
subb
ljmp
aad
mov
jo
scas
nop
movsb
lock
mov
adc
xor
int3
push
cmpsb
nop
movsb
scas
push
inc
xchg
ret
jmp
xchg
adc
sub
and
fs
xlat
sub
sbb
loope
das
scas
arpl
add
add
inc
jecxz
scas
cli
dec
loope
or
xlat
inc
ja
and
lods
push
add
dec
or
xchg
scas
daa
adc
test
mov
mov
push
jmp
xchg
loop
mov
je
xchg
outsl
mov
push
mov
and
out
push
dec
scas
lock
scas
dec
in
jmp
test
jge
das
mov
mov
test
push
rcrl
and
aad
push
fcoml
dec
scas
into
dec
movsb
jo
insl
inc
pop
addb
push
inc
cmp
movsb
jo
out
push
and
nop
scas
ljmp
dec
or
movsb
pusha
cmp
inc
dec
push
mov
test
jo
adc
pop
test
xchg
scas
dec
push
inc
mov
jnp
mov
dec
push
scas
aaa
loopne
ja
dec
push
scas
inc
outsb
cmp
sbb
pop
lea
push
add
stc
in
test
fstp
adc
cmpsb
loope
and
adc
movsb
pusha
das
and
pusha
out
inc
rolb
push
dec
push
mov
add
addr16
and
or
je
scas
add
xchg
frstor
mov
xchg
pop
test
push
and
push
mov
add
or
xchg
scas
mov
or
pop
sbb
push
out
adcb
adc
inc
out
push
dec
jmp
push
cltd
dec
dec
push
scas
mov
in
add
ret
mov
mov
les
xchg
adc
aaa
mulb
inc
or
dec
adc
mov
loope
or
add
inc
pop
and
repnz
adc
mov
fsubrp
push
mov
adc
pusha
scas
nop
movsb
scas
cmp
scas
nop
movsb
scas
stos
push
pushf
cltd
inc
dec
push
cmp
xlat
xor
dec
sub
jmp
nop
scas
ljmp
ds
inc
test
push
cmp
adc
mov
or
in
jae
push
sbb
cmp
pop
stc
nop
movsb
lock
jbe
scas
sbb
xchg
adc
or
test
push
and
sbb
dec
or
pop
scas
and
and
pop
test
sbb
and
push
mov
scas
jne
stos
adc
test
or
add
shll
test
lcall
mov
scas
dec
orl
and
and
pushf
loopne
and
fmuls
jmp
into
cs
fstl
jmp
test
xchg
movsl
xor
fldcw
popa
and
xorb
jnp
and
dec
scas
enter
xchg
jne
push
cmp
and
inc
xchg
ret
and
cmp
les
xchg
scas
and
sub
and
test
mov
mov
scas
out
bswap
cs
faddl
sub
and
ss
and
jae
or
in
or
jo
and
mov
sub
dec
scas
and
inc
aaa
or
scas
lock
xchg
adc
jb
scas
popf
push
dec
or
scas
test
dec
loope
or
add
scas
xchg
fucomp
push
adc
scas
aas
sbb
dec
fcomp
in
or
ljmp
and
scas
rolb
add
cli
and
scas
cld
aad
call
lds
push
adc
scas
mov
inc
dec
scas
jecxz
pop
nop
and
cwtl
fcmovnbe
xchg
adc
sub
sbb
scas
push
cmp
mov
and
movsl
les
inc
dec
push
scas
or
testb
or
or
scas
jnp
iret
jnp
or
dec
sahf
out
lcall
in
cmp
mov
push
dec
repz
xchg
mov
push
cmp
jae
test
pop
mov
cmp
iret
repz
repz
push
pushf
enter
imul
push
cmp
jns
jmp
pop
xchg
sub
jnp
jns
inc
push
push
mov
xchg
push
movsb
push
mov
cmp
fsubr
cld
mov
sub
push
and
xchg
adc
vmovapd
enter
stos
jb
loopne
sub
aad
adcb
adc
js
pop
or
jmp
daa
nop
scas
adc
push
mov
xchg
scas
in
rcll
movsb
stos
push
push
inc
adc
adc
xchg
ret
scas
and
fadds
dec
sbb
repz
adc
dec
loope
and
test
mov
and
and
xor
mov
xor
xchg
loope
sub
push
push
and
ja
dec
or
jg
dec
push
mov
test
dec
scas
and
adc
test
test
adc
sub
inc
xchg
and
and
fcom
push
enter
add
rorb
or
scas
movb
xchg
dec
scas
icebp
sub
addl
inc
scas
jo
pop
in
cmpsl
in
jl
nop
movsb
scas
hlt
rorl
adc
mov
nop
scas
into
std
add
clc
mov
in
adc
scas
jae
cs
scas
xor
add
pop
adc
or
dec
xchg
push
or
mov
xchg
andb
and
xchg
pop
test
cmpsb
sub
jbe
and
dec
gs
cmpsl
or
mov
dec
push
scas
jnp
pushf
cmp
push
scas
in
xchg
adc
push
popf
mov
push
cmp
scas
adc
scas
leave
insb
push
xchg
add
sbb
sahf
andl
fsubrl
int3
sahf
pop
and
es
mov
xchg
xorb
sub
inc
scas
movsb
and
fsts
scas
xchg
sbb
mov
and
fwait
subb
test
les
scas
jge
cmp
push
cmp
nop
scas
mov
nop
movsb
jo
scas
dec
push
adc
fcoml
pop
cs
rcrl
scas
cmp
inc
and
and
pop
ret
and
scas
aas
ss
and
scas
xor
add
dec
or
inc
xlat
pop
scas
dec
or
push
lea
sbb
and
and
imul
xchg
ret
pop
sbb
and
scas
jbe
popa
cmp
and
mov
adc
inc
and
adc
adc
insb
adc
push
and
dec
popa
scas
or
inc
xor
int
xchg
push
imull
mov
push
sti
cmpsb
sbb
or
fstl
xchg
adc
scas
test
scas
nop
movsb
mov
les
scas
mov
dec
push
scas
lea
dec
or
xchg
inc
sbb
pop
addl
or
or
jbe
and
jnp
and
cmp
dec
scas
dec
shll
dec
ret
psubusb
sbb
dec
or
out
movsb
nop
stos
rorb
sbb
sbb
scas
jbe
adc
nop
movsb
shlb
ljmp
movsb
jo
scas
jae
test
sub
push
jne
xchg
ret
scas
inc
jb
jae
inc
scas
adc
or
pop
test
clc
sahf
aaa
lock
inc
xchg
ret
dec
nop
movsb
loopne
test
jl
test
mov
test
mov
orl
push
pusha
test
xchg
scas
in
test
dec
or
cmp
inc
hlt
inc
xchg
ret
scas
xchg
cwtl
movsb
add
mov
sbb
sub
dec
push
scas
roll
cwtl
scas
jmp
scas
xchg
adc
push
adc
sbb
add
scas
rcrb
or
dec
push
scas
xor
sbb
data16
xchg
fs
push
dec
push
scas
bound
dec
or
jp
xchg
add
inc
and
push
scas
pop
pusha
mov
test
insb
enter
xor
mov
repz
xlat
ds
sbb
push
push
dec
jmp
jne
cmp
in
add
inc
mov
mov
adc
dec
jmp
sub
scas
add
scas
dec
out
sub
xchg
scas
dec
jb
inc
std
dec
sub
or
leave
dec
xor
daa
sbb
xor
dec
scas
insb
test
dec
or
push
scas
mov
in
xor
in
sbb
loopne
adc
lds
and
mov
push
mov
scas
in
or
add
push
push
imul
pop
mov
xchg
scas
xchg
push
nop
movsb
scas
fbstp
push
cmp
scas
jmp
test
or
scas
cwtl
xor
dec
or
xorb
sbb
or
or
pop
aas
jne
int3
mov
scas
xchg
sbb
pop
inc
dec
push
js
scas
fsubp
adc
mov
pop
ds
cmovp
xchg
adc
and
cmpsb
es
scas
ffree
mov
push
mov
jle,pn
addb
scas
mov
mov
push
and
loopne
sub
pop
scas
and
scas
adc
dec
loope
scas
inc
xchg
ret
xor
scas
nop
movsb
pusha
cmpsl
fsubrs
xor
ret
mov
lock
pop
fidivs
fcoml
adc
adc
pushf
adc
dec
or
inc
iret
int
loopne
scas
adc
add
pop
test
sub
inc
dec
scas
stc
dec
or
jne
jmp
add
in
add
scas
div
push
pop
inc
adc
scas
mov
cwtl
scas
dec
loope
loope
bound
push
and
and
xchg
movsb
call
jb
and
fsubl
fldt
das
add
scas
out
adcb
in
add
dec
xor
push
les
and
xchg
jne
js
test
test
ret
scas
es
jmp
push
loop
dec
or
inc
nop
movups
test
test
and
ja
ret
and
subb
xchg
scas
pop
and
xchg
jecxz
adc
fcoml
scas
movsb
inc
xchg
ret
xchg
subb
clc
and
sbb
mov
xor
and
sbb
scas
xchg
rolb
enter
xchg
adc
fmuls
dec
or
scas
dec
or
outsb
dec
add
mov
add
sub
mov
adc
inc
inc
sbb
daa
jno
dec
or
test
pop
scas
in
loope
xchg
mov
and
faddl
scas
inc
xchg
ret
es
mov
mov
clc
test
and
test
outsb
movsb
lock
test
nop
scas
out
out
pop
and
fmul
lcall
and
adc
insl
xchg
ret
pop
jg
xor
push
lahf
lock
and
scas
nop
movsb
and
lods
cmp
jmp
and
outsb
or
xchg
adcl
push
cmp
repnz
inc
adc
mov
test
shl
or
pop
adc
or
mov
and
mov
xchg
adc
seto
and
jp
push
dec
test
fcompl
scas
sub
pop
in
dec
mov
mov
and
test
sbb
push
dec
push
cmp
dec
scas
movsb
mov
dec
shl
scas
daa
dec
and
scas
jns
aaa
add
scas
nop
jl
fmuls
dec
scas
add
add
push
or
int3
jecxz
and
scas
cmp
sub
nop
push
xchg
js
xchg
scas
in
add
cmpsl
mov
push
xor
push
and
fwait
mov
inc
push
cmpsl
mov
addr16
popa
xor
dec
scas
jno
and
nop
movsb
lock
or
pop
adc
and
mov
scas
pop
xchg
sbbb
daa
mov
enter
cmp
sarb
dec
scas
pop
mov
faddl
pop
xchg
adc
sbb
pushw
jp
mov
and
dec
cmpsl
fcompl
and
xor
pushf
fldenv
sub
in
andl
sahf
xor
sbbb
ret
inc
scas
mov
xchg
scas
nop
movsb
lock
or
add
scas
push
sub
scas
iret
ret
push
scas
sbb
aaa
and
scas
roll
and
scas
mov
xchg
adcb
and
nop
movsb
lock
xchg
cmpb
xor
andl
mov
add
dec
scas
inc
inc
dec
push
pop
sahf
scas
push
xor
push
aaa
fidivrl
or
test
push
dec
push
scas
sub
cmpsb
nop
movsb
scas
sbb
pusha
add
dec
scas
push
dec
push
js
scas
xchg
adcb
pushf
inc
xor
mov
or
xlat
scas
cmp
push
scas
adc
and
int3
lcall
or
and
sbb
adcb
or
inc
test
cmp
jmp
sbb
cmp
dec
push
scas
daa
sub
orb
cmp
scas
cwtl
stos
movsb
pusha
cmpsl
sub
push
xchg
pusha
pop
xchg
scas
aad
push
cmp
mov
call
mov
and
shrl
scas
xchg
adcb
or
sub
mov
fwait
sub
cmp
in
add
and
xchg
stos
pause
movsb
pusha
xor
int
and
mov
lret
movsl
mov
pop
call
dec
or
scas
and
cmp
and
addl
push
sbb
and
enter
nop
movsb
pusha
scas
adc
lahf
scas
xchg
sarl
es
adc
outsl
ljmp
inc
inc
xchg
addb
add
test
lods
inc
xchg
ret
dec
or
dec
scas
test
dec
or
and
xchg
scas
mov
xor
xor
mov
test
cmp
adc
scas
jnp
xlat
test
xchg
adc
push
fnstsw
cmp
adc
in
and
dec
adc
scas
cmpsl
jmp
or
lods
in
ss
je
scas
scas
mov
pop
repnz
lcall
push
mov
dec
or
movsl
inc
scas
sub
scas
movsl
pop
and
pop
xor
mov
lock
scas
inc
xchg
sub
scas
inc
pop
inc
mov
xchg
adc
scas
and
or
lea
orb
sub
sub
scas
lahf
shl
and
scas
adc
loop
loope
sbb
xchg
ret
scas
mov
or
or
js
sbb
data16
inc
xchg
orb
cmp
xchg
adc
mov
lods
jo
adc
adc
mov
scas
sub
pusha
xor
ja
fs
ret
jo
and
add
dec
or
xchg
sbbb
js
addb
cmp
push
dec
push
scas
and
xor
or
test
push
cmc
ret
out
ret
orl
inc
and
pop
scas
cmp
xchg
cmp
scas
push
push
scas
inc
out
ds
sub
scas
ljmp
push
sbb
adc
orb
scas
sbb
jne
pop
sbb
push
push
adcb
inc
add
movsl
cs
mov
cmp
and
ss
daa
and
ret
jle
shr
pop
pop
not
cmovns
lret
cmpsb
adc
dec
jle
push
mov
cmpb
ret
scas
dec
or
adc
pusha
pop
push
jle
stos
orb
jo
inc
xchg
scas
mov
lea
test
lods
sbb
fimuls
jo
test
sbb
mov
or
scas
nop
movsb
xor
sub
fisttpll
jg
out
sub
scas
mov
and
pushf
xchg
push
dec
addr16
and
adc
adc
jg
and
mov
push
repnz
add
jl
inc
add
mov
xor
and
scas
and
adc
add
jns
test
dec
inc
xchg
out
mov
cmp
jns
push
scas
test
fiaddl
inc
and
bound
push
push
mov
push
mov
inc
scas
sub
fadd
and
mov
adc
dec
scas
and
scas
push
nop
movsb
lock
inc
mov
popf
and
scas
mov
and
push
scas
mov
jns
daa
and
push
mov
movb
add
push
mov
into
scas
push
js
pop
cli
or
inc
dec
scas
js
cmp
and
scas
cmpsl
adcb
dec
or
or
or
add
or
jmp
dec
scas
shufps
inc
xchg
scas
cmc
add
sub
movsl
fwait
and
ret
xor
mov
pop
or
inc
inc
or
out
scas
test
and
mov
sub
or
out
jle
pushf
pop
mov
pop
bound
sub
inc
or
cmp
scas
shlb
push
push
or
scas
jno
and
xor
push
scas
inc
xchg
ret
sub
xor
call
test
push
inc
scas
or
push
adc
push
inc
bound
jl
jnp
test
pusha
test
ja
and
scas
test
stc
imul
pop
xor
jns
jmp
fs
dec
push
xor
sbb
jg
mov
inc
mov
jns
iret
in
sbb
cmp
and
mov
nop
movsb
scas
and
or
shlb
mov
scas
std
add
add
or
dec
test
or
in
loope
dec
push
scas
pop
mov
movsl
add
dec
scas
sub
mov
cmpsl
fwait
and
adc
sub
outsl
scas
dec
or
pop
or
call
mov
sbb
inc
ja
dec
or
scas
aad
or
stos
or
dec
scas
xchg
jbe
xchg
dec
or
or
scas
daa
scas
xor
push
cmp
daa
xchg
and
sahf
pop
xor
cs
outsl
xchg
push
xchg
sarl
push
hlt
adc
and
and
repz
xchg
fld
add
inc
xchg
cmp
subb
ljmp
inc
xchg
scas
mov
and
scas
adc
jns
fs
push
and
pop
jo
sub
scas
orl
or
scas
add
sbb
pusha
jb
pop
push
movsb
jo
and
adc
inc
xor
sub
add
test
inc
test
xorb
dec
dec
pop
add
xchg
adc
test
dec
push
mov
pusha
scas
pop
jno
leave
movl
add
and
shll
cmp
sub
and
popa
adcl
shll
cmp
test
and
cld
scas
or
movsl
rorl
fisubrs
and
cmp
scas
xchg
adc
inc
jle
xor
adc
cwtl
sub
cmp
scas
mov
inc
scas
test
jmp
repz
xor
scas
test
scas
adc
push
scas
dec
loope
js
outsl
outsl
jmp
sub
and
mov
xchg
mov
sarl
sub
add
dec
scas
mov
movsb
scas
xchg
adc
pop
test
fbld
sub
and
scas
jle
adc
scas
dec
loope
inc
mov
pop
and
inc
test
imul
or
sub
mov
nop
movsb
scas
cltd
pushf
lret
pushf
sub
xchg
jbe
cmpsl
or
scas
push
outsb
dec
or
jo
or
nop
scas
pop
and
mov
sub
mov
fcompl
and
push
and
inc
sbb
popa
xchg
adc
rcl
and
rcll
scas
xor
inc
and
ljmp
and
pop
cmc
jmp
add
rorb
push
adc
adc
iret
scas
popa
dec
sbb
inc
je
and
ds
aaa
daa
add
cmp
inc
dec
push
cmp
sbb
or
and
push
xchg
and
dec
subb
imul
imul
or
jb
or
push
cmp
or
dec
inc
scas
xor
xor
and
inc
scas
inc
xchg
and
xchg
mov
sbb
scas
mov
scas
ret
push
inc
dec
push
mov
add
scas
movsb
jo
ja
pop
fmuls
mov
dec
loope
jno
ds
hlt
xchg
ret
scas
mov
push
inc
addb
dec
push
pop
mov
subl
push
xor
loop
scas
add
or
xchg
scas
repz
inc
xchg
ret
imul
lea
imul
pop
insl
push
and
pushf
out
cmp
pop
and
sub
xorb
inc
push
scas
dec
push
mov
scas
insl
xchg
js
mov
mov
subl
push
mov
scas
idivl
and
mov
push
lds
sub
inc
scas
mov
sub
test
cltd
adc
ret
hlt
xchg
and
aaa
mov
pusha
scas
xlat
add
and
fdivp
rorb
or
scas
adc
adc
sti
add
jl
les
mov
and
in
inc
xchg
outsl
sbb
cmpl
sub
test
jo
scas
dec
push
cmp
jbe
mov
jmp
scas
loopne
pop
repnz
ja
dec
loope
xor
orb
or
cmp
dec
or
js
and
faddl
jb
xchg
adc
sub
and
shrb
or
xor
in
mov
adc
dec
jle
psubw
push
and
subl
and
fs
dec
scas
xchg
adc
pop
mulb
mov
scas
pop
into
sbb
out
test
scas
inc
dec
or
int
inc
xchg
subb
cmp
mov
adc
push
and
dec
popa
scas
xchg
aam
aad
mov
jl
nop
rcr
ja
mov
dec
stc
loop
and
enter
andl
adc
xchg
sbb
ds
push
push
insb
adcl
and
int3
mov
adc
imul
inc
movsb
jns
fldenv
loope
inc
scas
mov
add
mov
ret
and
mov
fistpll
or
aad
or
pop
adc
scas
dec
mov
lahf
jbe
mov
xor
dec
inc
or
into
js
faddl
scas
addl
sub
pop
ja
dec
push
scas
sbb
mov
dec
or
or
scas
xchg
adc
cmp
adc
jo
and
adcb
sbb
lds
pop
and
xchg
cs
push
dec
scas
nop
movsb
mov
and
call
scas
sbb
faddl
imull
and
jecxz
subl
adc
out
int
xor
cmp
lods
push
xchg
insb
xchg
jo
js
and
push
subb
es
dec
push
mov
movsb
jo
scas
inc
sbb
mov
dec
push
mov
sbb
push
scas
pop
pop
imul
xlat
sub
pop
aad
or
sbb
add
push
mov
add
cmp
scas
cmpl
inc
xchg
scas
lret
sbbb
dec
push
mov
xchg
or
scas
jnp
mov
mov
push
push
pusha
pop
adc
sti
sub
nop
sub
add
add
xlat
loope
push
jb
dec
scas
jo
enter
js
add
and
test
cmp
test
loopne
pop
enter
test
sbb
subl
push
aam
or
scas
in
jmp
jle
jge
adc
jge
mov
adc
jo
inc
push
sbb
test
pop
xor
push
mov
and
xor
cmovb
test
movsb
pusha
je
das
add
cmp
or
in
mov
test
test
jo
push
scas
and
rcll
xor
xor
scas
or
dec
scas
mov
sbb
adc
pop
enter
adc
negb
sbb
pushf
and
insl
lcall
clc
push
dec
push
jo
scas
and
lods
mov
loope
add
scas
pusha
dec
adc
dec
scas
in
and
add
mov
and
pop
rolb
adc
dec
or
aad
and
sti
inc
mov
les
scas
orb
pop
xchg
adc
fcoms
test
adc
dec
loope
scas
adc
push
add
scas
dec
loope
add
sbb
test
and
shlb
and
je
adcb
xlat
mov
push
scas
push
sbb
inc
push
dec
scas
adcb
adc
or
dec
loope
scas
and
sub
jo
out
cld
mov
mov
sub
js
fnstsw
dec
add
and
scas
loope
add
es
sarb
dec
scas
les
mov
call
pop
mov
movsl
or
adc
dec
popa
push
scas
test
mov
dec
rorb
xchg
adc
adc
scas
xor
add
cmp
inc
dec
push
or
adc
scas
sub
sub
xchg
adc
mov
dec
or
into
sti
jne
lock
aaa
push
and
push
scas
or
ja
lret
sub
sub
mov
or
xchg
adc
call
or
dec
bound
scas
sub
or
scas
push
inc
cmp
mov
jns
lock
xlat
rcll
scas
adcl
cmpsb
sub
scas
push
daa
test
je
test
xor
incb
test
adc
scas
cmc
imulb
test
inc
push
scas
and
adc
dec
inc
and
dec
or
add
mov
xor
dec
adc
push
adcb
scas
inc
xchg
ret
scas
or
out
sbbb
popa
enter
pusha
aas
adc
jl
adcb
repnz
add
push
sub
movsb
pusha
xchg
lock
fisubl
shlb
push
dec
push
xor
inc
movsb
jo
stos
scas
imul
and
ljmp
dec
add
imul
ljmp
scas
insb
inc
js
adc
inc
dec
push
scas
lahf
and
add
scas
dec
push
mov
cmpsl
jge
sbb
jmp
scas
iret
js
test
xchg
ret
imul
mov
mov
sub
dec
adc
scas
jns
lahf
out
mov
dec
mov
iret
repz
stos
jecxz
icebp
cmp
shrl
test
out
jmp
repz
or
dec
repz
hlt
fbstp
out
repz
cmp
cli
sub
xchg
adc
out
and
push
shl
scas
jo
push
add
rorb
movsb
jo
scas
out
popa
mov
ss
push
push
int
jns
addr16
scas
icebp
push
negb
cmp
repz
cmp
shll
sti
xor
and
cmp
jns
mov
pop
and
add
inc
pop
and
push
dec
push
js
outsl
dec
push
push
ljmp
dec
outsl
dec
pop
outsl
test
out
cmp
push
mov
test
out
jecxz
jne
dec
push
outsl
int
and
lods
outsl
xchg
adc
aam
ds
adc
mov
movsb
adc
push
ret
insb
cwtl
xchg
sbb
icebp
mov
rcll
push
outsl
mov
sbb
outsl
movsl
push
and
adc
outsl
dec
or
push
inc
fstps
outsl
aaa
sbb
sub
push
mov
jo
cmp
aam
mov
pop
sti
pusha
sub
sbb
cltd
nop
unpckhps
adc
fcoms
mov
inc
outsl
fcomps
pop
call
sub
push
insl
add
cmp
pop
add
mov
xchg
repnz
outsl
daa
adc
adc
aaa
add
mov
sbb
nop
out
dec
cmc
rcl
lock
in
repnz
stos
and
in
fs
ds
nop
cmp
xchg
outsl
cmp
or
sub
imull
dec
outsl
sbb
xchg
lea
xchg
adc
inc
mov
pop
adc
jo
inc
dec
outsl
enter
mov
das
inc
and
outsl
dec
inc
xchg
ret
fldt
and
mov
xchg
ret
sub
dec
loope
pop
scas
outsl
xor
cmp
xchg
sbb
adc
repz
and
mov
lret
and
inc
sti
fistpll
sub
mov
adcb
jne
xchg
adc
adc
pop
adc
or
and
outsl
testb
sbb
inc
test
and
xchg
outsl
rcl
movsb
loope
dec
push
outsl
lds
or
and
mov
add
dec
dec
push
js
outsl
push
dec
push
lock
or
ret
adc
mov
dec
or
adc
loopne
or
dec
or
inc
xchg
outsl
loope
push
dec
call
addl
dec
push
js
outsl
adc
jg
jp
or
lods
push
or
jg
push
call
or
ret
and
or
or
mov
adc
or
jmp
pushf
or
push
inc
and
call
and
or
fbstp
stc
push
and
push
outsl
vpshufhw
sbb
mov
inc
xchg
ret
or
dec
jmp
lds
mov
scas
dec
cmp
adc
movsb
pusha
and
or
push
scas
add
loope
or
push
js
add
dec
scas
sbb
in
insl
fisubrl
dec
scas
hlt
add
dec
shll
push
add
pop
je
add
dec
scas
jo
add
or
xchg
andb
dec
or
iret
jbe
or
jle
adc
pop
sub
fadds
adc
xchg
sbbb
mov
cmpsb
scas
and
test
add
add
push
test
xchg
addb
pop
mov
adc
sbb
popa
sbb
test
scas
and
faddl
bound
outsb
sub
adc
scas
insb
pop
adc
push
scas
int3
mov
adc
sub
scas
jo
sbb
mov
push
scas
adc
push
scas
cmp
dec
dec
dec
sbb
inc
dec
push
scas
les
mov
test
test
add
sub
or
and
inc
dec
pusha
adc
adc
sub
andb
jne
test
sub
and
data16
mov
mov
les
andb
adc
test
scas
cmp
shll
cmp
dec
or
push
scas
jp
fsubs
fstpt
pusha
decl
inc
adc
pop
xor
test
xchg
andb
or
inc
adc
scas
cmp
mov
adc
xchg
inc
xchg
or
dec
loope
inc
scas
insl
addb
xchg
push
test
dec
or
or
sahf
movsb
pusha
cmpsl
or
fwait
mov
mov
and
and
sbb
pop
xchg
or
adc
movsb
mov
pop
clc
and
jge
stos
nop
scas
jmp
dec
push
js
scas
dec
popa
mov
cmp
or
sbb
push
sbb
mov
and
and
lods
shrl
or
xor
iret
pop
lods
and
pop
sbb
and
adc
or
test
orl
mov
cwtl
mov
scas
idiv
inc
xchg
orb
scas
add
adc
notl
mov
jge
sbb
scas
dec
and
in
inc
xchg
ret
cwtl
adc
scas
out
cwtl
popa
jl
sar
pop
sbb
or
xchg
adc
lods
and
sub
xchg
sub
cs
js
xor
push
mov
xor
push
inc
dec
scas
xchg
and
scas
cwtl
int
je
or
ret
push
jl
ret
sub
scas
ja
mov
sub
fadd
gs
xchg
adc
cmp
or
adc
or
cld
mov
testb
sub
or
scas
and
or
sub
adc
scas
addb
or
scas
inc
and
push
inc
xchg
ret
mov
test
mov
ret
adc
and
inc
xchg
ret
loop
jecxz
add
or
scas
arpl
and
mov
push
je
mov
adc
arpl
and
scas
icebp
pop
push
fwait
or
scas
jge
push
test
adc
and
push
and
fcoml
loopne
sub
adc
and
int3
adc
dec
sub
dec
scas
dec
arpl
and
enter
add
mov
lods
inc
xchg
scas
dec
or
and
mov
subb
pusha
xchg
scas
mov
nop
movsb
scas
cmp
push
and
scas
inc
push
cmp
shlb
faddl
and
sub
or
scas
cmp
fwait
xor
or
and
inc
dec
push
cmp
pusha
mov
or
scas
xchg
adc
sbb
dec
inc
cmp
outsl
sbb
out
inc
push
mov
inc
mov
scas
inc
xor
inc
dec
push
mov
sub
mov
or
add
xchg
adc
scas
adc
adcb
nop
movsb
pusha
shrb
js
scas
and
mov
and
scas
sub
andl
sub
fmul
pop
sub
dec
addr16
scas
adc
mov
test
je
mov
mov
scas
push
ds
inc
xchg
ret
scas
add
lods
lods
lods
div
xchg
or
or
inc
pop
scas
ret
sub
pop
leave
push
stos
dec
mov
dec
push
cmp
and
fdivrl
scas
dec
push
adc
dec
rcrl
cs
or
pop
inc
mov
and
sub
mov
adc
dec
inc
dec
push
scas
in
and
or
scas
or
mov
dec
push
adc
push
lods
cmp
dec
jne
scas
insb
sub
cs
xchg
scas
adc
sbb
and
lods
nop
movsb
lock
sub
sub
subl
pop
add
scas
sub
mov
and
mov
mov
xchg
sub
add
xchg
and
push
shll
icebp
shrb
and
scas
fsubrl
adc
xchg
adc
test
nop
movsb
jo
or
test
mov
rorl
scas
repnz
jp
adc
scas
mov
ja
jns
cmp
xchg
scas
and
dec
push
scas
dec
push
pusha
push
test
loopne
test
xchg
scas
adc
xchg
ret
mov
xchg
scas
or
ja
sub
imul
adc
movsb
scas
mov
and
or
scas
shl
xchg
imul
and
push
scas
dec
push
cmp
outsb
dec
or
push
scas
and
adc
mov
mov
ss
xchg
mov
dec
push
scas
pop
pop
sbb
push
dec
push
scas
jmp
movsb
scas
stos
cmpsl
cmp
xchg
inc
xchg
ret
mov
scas
cmp
cmpsl
mov
ja
xor
and
dec
or
jnp
test
scas
jl
movsb
adc
sub
pop
repnz
ret
dec
scas
jp
push
cs
xchg
scas
xchg
mov
scas
shlb
cmp
mov
incl
and
add
adc
test
test
movsb
jo
scas
inc
xchg
inc
jbe
jge
scas
and
pushf
mov
dec
ljmp
or
int
lock
scas
notl
lret
mov
movsb
rdtsc
cmp
scas
stos
nop
movsb
jo
scas
test
or
sub
dec
popa
inc
pop
scas
dec
cmp
dec
mov
cmp
and
fcoml
mov
sub
push
scas
loopne
cmpsl
mov
pushf
add
shll
std
add
mov
and
mov
push
mov
js
scas
scas
xchg
adc
push
scas
xchg
push
mov
adc
das
dec
ljmp
mov
xchg
scas
mov
push
mov
imul
and
insl
sub
testb
addl
scas
xor
adc
dec
rorl
and
sub
add
adc
scas
push
lods
sahf
adc
or
sub
pop
das
add
dec
adc
test
dec
scas
std
adc
test
mov
xor
pusha
adc
inc
test
jp
xchg
scas
cmp
xchg
adc
enter
rsqrtps
cld
adc
push
inc
push
and
adc
int3
add
dec
scas
sahf
das
inc
xchg
sub
dec
mov
es
xchg
ret
dec
inc
inc
mov
test
add
mov
pop
dec
xchg
std
out
clc
xchg
push
dec
push
scas
call
scas
sub
fdivl
loopne
pusha
ss
les
nop
movsb
scas
xchg
adc
dec
sarl
inc
inc
scas
lcall
add
or
scas
cld
data16
fstl
loop
call
sub
scas
and
cmp
call
scas
mov
add
scas
xchg
adc
inc
stc
sub
adc
push
out
mov
push
scas
inc
dec
xor
add
dec
shll
lock
mov
adc
je
dec
push
scas
mov
js
sub
jo
test
sbb
and
and
sub
inc
lock
out
jbe
out
mov
fcoml
xchg
scas
push
pop
fmull
jmp
pushf
and
scas
mov
inc
faddl
cmpsl
cmp
cmp
nop
movsb
scas
mov
insb
imul
jle
dec
xor
aaa
adc
out
or
scas
sub
adc
or
sub
ficoml
push
add
and
sbb
xchg
sbb
je
add
cmp
scas
push
and
rcrl
scas
mov
test
and
scas
sub
pop
push
scas
sarl
scas
and
adc
dec
scas
mov
scas
xchg
cmpb
je
inc
xchg
ret
inc
adcb
sbb
clc
int3
or
push
sub
insb
sbb
and
call
mov
and
mov
scas
mov
xchg
add
pop
or
pop
fwait
call
scas
ss
test
cmp
dec
je
add
and
sbb
mov
scas
aad
dec
stc
mov
pop
sbb
ljmp
mov
test
adcl
sub
xorl
mov
push
add
mov
pop
and
lcall
imulb
push
cmp
loop
call
jb
push
dec
push
sbb
adc
inc
sub
and
add
mov
sub
sub
test
adc
in
xchg
xor
scas
addr16
fmull
adc
dec
push
movsb
mov
sub
mov
scas
lods
sbb
and
dec
push
scas
movsl
movsb
nop
mov
push
xchg
dec
or
adc
adc
scas
mov
sbb
aam
rcr
push
pop
sub
sub
jns
xor
mov
sub
pop
test
and
and
pusha
jp
and
rolb
mov
sub
scas
dec
or
or
scas
shll
xchg
int3
or
nop
scas
inc
cmp
dec
or
scas
nop
movsb
pusha
xchg
popa
subb
dec
scas
pop
inc
mov
adc
or
xchg
adc
and
dec
adc
mov
dec
and
adcb
xor
inc
or
addl
mov
xchg
scas
adc
adc
popa
sub
in
push
add
cmp
mov
or
es
nop
movsb
scas
sbb
bound
mov
push
scas
stos
adc
xchg
cld
dec
pop
mov
and
scas
inc
and
sbb
js
lock
jmp
dec
push
scas
sbb
dec
loope
and
pushf
mov
sub
and
or
and
sub
xchg
jo
inc
xchg
scas
divl
dec
push
scas
dec
negb
or
nop
movsb
xor
scas
test
dec
popa
jno
mov
nop
movsb
jo
jae
dec
or
mov
addr16
cmpsl
lea
scas
inc
xchg
sbbb
test
loopne
test
mov
push
xchg
xchg
imul
inc
mov
and
scas
inc
and
loopne
test
and
scas
push
or
and
scas
enter
sar
adc
or
aaa
fsubs
scas
or
mov
pop
cmp
ret
dec
scas
iret
push
xchg
scas
mov
push
rorl
push
dec
scas
mov
scas
or
adc
sti
add
out
pop
push
xor
test
cli
pop
ret
xchg
mov
pusha
adcb
xchg
adc
push
mov
cli
gs
add
inc
add
push
and
adc
scas
inc
dec
jle
test
loop
push
test
push
and
cmp
and
xchg
cmc
movsb
outsb
push
xor
and
sub
scas
test
and
pop
push
push
jo
push
test
movsb
scas
cmpsl
orb
test
push
xchg
fstl
cmp
aam
adc
test
movsb
scas
mov
mov
dec
or
out
mov
dec
jmp
xor
and
jbe
inc
leave
push
pop
jle
dec
scas
gs
and
jae
jg
jb
push
inc
test
ret
orl
add
inc
pop
cmp
dec
scas
push
addl
mov
mov
je
pop
aas
test
xchg
out
sti
call
dec
scas
jns
sbb
lret
jmp
js
stos
cmpsl
sbb
mov
or
subb
cmp
and
pop
mov
repz
push
test
and
scas
or
add
inc
push
pop
mov
or
inc
dec
dec
or
cltd
lock
scas
and
or
xchg
cmp
stos
or
dec
or
lods
ljmp
and
scas
leave
dec
or
sub
sbb
leave
add
fwait
cmp
add
pop
test
cltd
push
js
push
dec
push
scas
test
add
pop
push
test
sbbb
test
movsl
pop
cmc
cld
nop
movsb
scas
adcb
nop
adc
dec
popa
shrb
popa
call
inc
lret
and
scas
push
or
inc
push
scas
and
or
sbbb
leave
and
shrl
je
pop
in
dec
mov
mov
loop
sbb
cmp
test
sbb
popf
push
fadd
push
pop
test
mov
rorl
push
and
clc
adc
sub
scas
mov
dec
scas
mov
test
xchg
scas
ljmp
adc
mov
rcrl
adc
loopne
dec
scas
rolb
cmp
xchg
scas
out
cmc
pop
inc
dec
push
sbb
adc
add
dec
sub
push
scas
sbb
push
adc
scas
out
and
ja
dec
scas
ret
mov
dec
scas
movsb
cmp
and
and
dec
push
scas
and
mov
mov
jg
mov
mov
dec
lock
imull
sbb
and
rclb
jecxz
repnz
scas
shlb
push
push
adc
dec
scas
shlb
and
insb
xor
in
enter
or
cltd
jo
add
dec
scas
outsb
xchg
and
cmp
inc
dec
push
mov
adcb
xchg
ret
mov
and
insb
xchg
ret
scas
and
inc
scas
out
dec
or
scas
mov
popa
pusha
mov
dec
subb
lea
scas
dec
push
mov
movsb
loopne
push
scas
movsl
jns
xor
dec
mov
dec
cmp
inc
xchg
ret
sub
subl
test
fcoml
scas
sub
adc
add
outsl
pop
dec
rorl
or
mov
push
and
xchg
adc
cmp
adc
lcall
or
push
adc
scas
js
ret
pop
nop
movsb
xor
dec
xchg
cmpb
and
mov
and
cmp
dec
mov
test
pop
dec
or
push
adc
and
or
dec
mov
inc
xchg
scas
cmc
push
scas
or
scas
jge
adcb
movsb
movsl
je
jae
sub
mov
inc
dec
push
pop
pop
xor
inc
xchg
adc
push
scas
mov
pop
adc
dec
xorl
add
or
nop
movsb
jo
adc
pop
scas
pusha
mov
out
ja
jl
ljmp
and
sbb
or
pop
int3
inc
sbb
out
jo
lahf
imul
and
adc
cwtl
insb
scas
dec
or
push
mov
push
or
scas
es
xchg
ret
aad
and
or
scas
sbb
pusha
mov
call
and
scas
in
nop
dec
mov
inc
xchg
subb
scas
xchg
adc
or
add
xor
scas
in
and
xchg
scas
mov
add
test
xchg
testl
ljmp
push
scas
popf
imul
je
movsb
nop
fstl
jo
scas
in
mov
mov
test
push
sub
add
dec
shll
xchg
adc
pop
scas
cltd
inc
dec
push
mov
movsb
pusha
js
dec
push
sub
loope
and
pop
push
aaa
add
pop
scas
or
scas
pop
daa
and
pushf
cld
scas
enter
jns
scas
fadds
fsubrp
out
cli
mov
push
xor
test
xchg
adc
inc
scas
cltd
and
ja
scas
xorb
test
dec
or
test
or
xor
sub
and
or
and
or
adc
add
dec
push
adc
pop
xchg
scas
cmp
sub
mov
cmp
or
cmp
adc
mov
dec
or
sbb
scas
mov
adc
dec
or
mov
xor
insb
pop
adc
and
scas
cmpsl
add
adc
sub
or
enter
scas
jge
push
mov
popa
sbb
or
sub
inc
dec
scas
pop
inc
inc
loop
and
mov
or
jo
scas
test
dec
or
and
cmp
scas
andb
jno
test
add
arpl
sbb
int3
push
or
adc
andb
call
fmull
dec
or
adc
dec
stos
inc
xchg
subb
call
or
xchg
adc
mov
lcall
movsb
jo
dec
scas
out
test
adcb
test
mov
xchg
adc
jno
mov
sarl
test
movsb
jo
scas
dec
push
push
popf
lret
or
pop
hlt
adc
or
jne
push
js
scas
xchg
adc
and
adc
inc
jnp
lock
inc
scas
cwtl
mov
and
scas
movsb
jo
push
sbb
popa
adcb
ljmp
pushf
aaa
mov
outsl
and
ret
dec
scas
int
xchg
scas
enter
and
and
out
jns
scas
and
push
mov
sbb
xchg
cmp
adc
rcrb
inc
sbb
push
scas
jns
ret
test
mov
or
cwtl
mov
cmp
ficoms
and
scas
and
mov
sub
int
out
imul
dec
int3
xor
sbb
cmp
sbb
push
dec
push
scas
add
scas
movsb
jo
push
inc
adc
nop
scas
sub
test
test
adc
inc
test
dec
scas
xor
xor
and
cmp
cmp
push
sbb
in
push
dec
scas
and
out
dec
loope
sub
scas
and
dec
sub
inc
fsubs
add
sub
int3
mov
jecxz
dec
lods
pop
cmp
mov
hlt
lea
stos
sahf
imull
inc
mov
dec
sar
mov
dec
scas
jnp
dec
push
xor
ds
dec
push
mov
push
scas
adc
inc
scas
sbb
lock
dec
push
mov
dec
loope
into
les
loop
out
jns
inc
xchg
addb
dec
or
add
inc
sbb
test
gs
in
adc
and
aaa
adc
loop
dec
scas
scas
gs
adc
stc
out
sub
nop
cmp
add
popf
pop
and
xchg
insl
arpl
pop
and
dec
test
dec
mov
test
or
sbb
push
xor
scas
and
dec
clc
xor
rolb
mov
pop
xor
adc
push
scas
mov
pushf
out
sub
mov
std
dec
loope
nop
scas
jns
adc
add
scas
push
xor
mov
dec
or
dec
push
pop
or
scas
mov
dec
scas
push
inc
adc
ret
loope
scas
and
aad
fcomip
xchg
imul
adc
xor
scas
sbb
and
out
sbb
dec
rorl
inc
xchg
addb
scas
xchg
adc
orb
and
pop
leave
sbb
pop
andb
or
loopne
or
or
xor
adc
test
in
jnp
and
adc
xchg
ret
and
or
sub
ret
aaa
xchg
xchg
adc
inc
scas
jp
test
push
adc
in
jp
push
test
cli
jae
inc
xchg
ret
call
and
or
fcoms
inc
xchg
ret
scas
and
push
lea
ret
inc
ljmp
and
pop
inc
pop
dec
or
jge
sbb
scas
ljmp
or
and
dec
loope
scas
imul
mov
cmp
xchg
adcb
sub
xchg
adc
sub
call
loopne
adc
shr
sbb
pop
test
movsb
jo
scas
loop
push
dec
push
push
jl
sahf
out
mov
loop
dec
pop
shl
fmulp
idivb
inc
pusha
cs
adc
xorb
push
cltd
mov
fistl
int3
mov
pop
rorl
pop
jl
and
scas
and
inc
sbbl
scas
or
pop
je
cld
push
push
xchg
adc
jg
fildll
and
scas
hlt
mov
lds
mov
loopne
adc
scas
mov
xchg
adc
aaa
fidivrs
mov
scas
insl
insb
test
push
adc
or
scas
xchg
orb
cmp
cs
scas
mov
and
and
scas
imul
adc
dec
popa
mov
jne
dec
push
mov
es
dec
push
js
push
dec
rorl
scas
sbbb
sbb
sbb
jo
dec
scas
or
push
push
mov
pop
and
xor
xor
pop
into
notb
sbbb
repnz
insb
add
pusha
cmpsl
inc
xchg
scas
xor
andb
scas
jmp
cmp
mov
mov
insb
adc
push
pinsrw
insb
mov
fsts
xchg
xorb
lds
mov
add
and
fists
lods
push
ja
xchg
andb
xchg
ret
enter
and
popa
mov
daa
mov
dec
scas
xchg
ret
dec
sub
dec
scas
or
outsl
cmp
mov
adc
add
repz
dec
loope
adc
and
scas
into
in
and
add
mov
scas
cmpsl
push
adc
sarl
xchg
sahf
repnz
and
dec
push
scas
ja
test
cmp
jnp
and
inc
icebp
sub
dec
pop
adc
popf
and
pop
aam
add
inc
xchg
scas
dec
loope
xchg
sbb
push
and
push
dec
scas
jb
push
test
ss
dec
push
push
sub
xchg
adc
push
or
sbb
adc
push
push
push
jge
cmpsl
stos
into
lock
imul
imul
dec
and
out
imul
and
push
pop
insl
scas
lahf
in
sub
adc
pushf
cmpsb
sub
add
scas
and
cmp
daa
repnz
jo
clc
sbb
scas
pop
test
mov
or
nop
movsb
scas
push
dec
sub
dec
test
and
mov
and
int3
dec
inc
mov
insb
add
insl
scas
and
jo
pop
scas
adc
ljmp
adc
out
xor
jg
add
pop
aam
sub
movsb
sbb
add
add
fcomps
xor
and
test
dec
adc
xchg
dec
or
add
scas
add
pushf
sub
inc
scas
call
xor
inc
and
scas
ret
popa
ljmp
scas
push
movsl
fwait
jnp
dec
and
jo
filds
cmpsb
cmp
mov
push
jns
add
hlt
mov
scas
int
mov
test
add
or
cmp
scas
icebp
ret
dec
scas
mov
inc
xchg
scas
nop
arpl
addl
inc
dec
push
scas
and
push
sub
dec
mov
sub
inc
daa
int3
pop
inc
and
cmovb
scas
adc
jo
adc
mov
jp
xchg
scas
dec
out
or
scas
adcl
scas
inc
rolb
xchg
es
popa
je
and
test
jo
and
xchg
es
dec
mov
ret
xchg
sub
lods
dec
scas
inc
xchg
sbbb
movsb
pusha
xchg
hlt
and
lods
cmpsb
scas
and
push
push
and
rcrl
sahf
aaa
cmpsb
and
inc
rcll
addr16
xor
scas
xchg
add
mov
scas
and
or
mov
popf
and
add
inc
scas
cli
add
push
scas
or
dec
jl
out
add
mov
lods
outsl
loop
add
jb
inc
test
lock
or
mov
mov
push
adc
sub
dec
push
mov
shlb
jo
push
inc
scas
lods
popf
adcb
inc
xchg
xor
dec
push
sbb
out
push
scas
lcall
scas
fstl
push
mov
dec
popa
xor
scas
add
jb
lds
test
mov
xchg
scas
cmpsl
and
add
mov
in
hlt
lods
pop
test
mov
adc
inc
add
adc
xchg
subb
inc
mul
cmp
popf
inc
scas
jae
sahf
xor
scas
push
xchg
push
sbb
loop
dec
inc
dec
scas
dec
sub
mov
sbb
mov
dec
scas
stos
shlb
cmp
lret
test
jge
repnz
jnp
push
int3
jle
iret
push
test
data16
xchg
orb
sti
pop
and
xchg
adc
push
scas
and
fsubl
scas
inc
xchg
sbbb
pop
fldcw
adc
movsb
ret
and
or
dec
push
jo
shlb
loope
scas
rcr
nop
movsb
rorb
incb
dec
push
mov
imul
scas
and
push
dec
or
jle
xchg
addb
ja
cmp
pop
inc
scas
out
pusha
pop
jle
js
outsb
push
jmp
mov
add
movsb
scas
or
call
mov
je
mov
xchg
adc
cmp
aam
inc
sub
xchg
adc
cld
jae
scas
jns
and
orl
cs
xor
dec
and
call
nop
movsb
jo
nop
movsb
jo
jecxz
movsb
and
cmpsl
sub
pop
aaa
jmp
dec
pop
test
pop
test
dec
scas
out
and
scas
inc
dec
push
xor
pop
scas
add
fsubrp
and
pop
pop
outsl
dec
sar
arpl
cmpsl
jo
and
sub
xlat
out
add
subb
adc
mov
jno
dec
pusha
sbb
mov
dec
loope
scas
dec
dec
push
xor
bound
or
xchg
xchg
scas
jae
push
orl
or
xor
xchg
add
or
scas
dec
jp
faddl
lea
pop
or
xchg
scas
dec
or
lock
or
stos
nop
scas
mov
out
or
scas
mov
adc
push
and
inc
scas
jne
nop
movsb
jo
scas
cmp
mov
push
test
hlt
in
lds
decl
ret
and
int
imul
xchg
scas
lcall
fadds
push
push
push
scas
dec
push
pop
sbb
aam
pop
jo
scas
cmp
jo
and
into
and
inc
jl
push
call
fisttpll
cmp
dec
call
cli
fimull
xor
or
push
scas
lahf
les
dec
push
scas
loopne
arpl
fstpl
jmp
nop
movsb
scas
cmp
loope
popf
cmp
xor
xor
fcmovnb
push
and
inc
les
test
mov
push
jo
scas
aad
inc
xchg
ret
inc
and
cmp
add
and
sti
dec
push
scas
xchg
adc
outsb
aas
inc
mov
adc
testl
add
scas
nop
aad
inc
adc
movsb
loopne
scas
dec
or
dec
dec
loope
or
add
scas
or
pop
and
xchg
adc
movsb
jo
sub
sbb
nop
scas
pop
pop
push
dec
push
scas
jmp
dec
loope
js
or
aaa
dec
cmpsb
scas
xchg
test
insl
mov
adc
and
push
lods
scas
xchg
ret
adc
push
fdivrs
jae
xchg
inc
adcb
xchg
adc
mov
shll
scas
adc
pop
mov
scas
cmp
and
pop
pusha
outsl
test
fwait
jnp
or
loop
sub
cmp
or
and
sbb
pusha
test
mov
scas
xchg
ret
pop
dec
jne
inc
scas
push
push
add
pop
add
loope
mov
jle
adc
and
andl
dec
inc
and
dec
loope
subb
or
and
dec
scas
mov
pusha
scas
cmp
or
ret
dec
push
dec
push
scas
adc
dec
or
cmpsb
scas
dec
push
mov
or
scas
inc
cmc
lock
test
int
ret
push
pop
sub
inc
xchg
scas
push
mov
cmp
shlb
push
scas
nop
mov
sbb
nop
adc
xor
nop
movsb
loopne
scas
and
sbb
scas
push
xor
stos
jno
adc
fcoml
aas
ja
xchg
adc
adc
repnz
push
mov
xor
dec
inc
and
roll
dec
xchg
ret
scas
test
movsb
pusha
pop
inc
scas
cmp
loop
orl
out
or
mov
cmpsl
jnp
xchg
adc
mov
sub
test
jae
xor
inc
je
dec
adc
adc
repz
jge
test
mov
pop
call
inc
dec
scas
in
cmp
pop
mov
add
stos
loop
adc
push
movsl
jg
mov
adc
xchg
adc
sbb
arpl
push
push
mov
adc
dec
loope
cmp
push
dec
test
loope
push
dec
scas
dec
add
dec
scas
mov
outsb
lret
sarb
pusha
add
dec
sbb
and
lods
cmp
test
inc
test
cmp
jno
scas
negb
adc
adc
scas
cmp
adc
adc
cwtl
fstl
adc
sbb
push
faddl
ret
in
ret
sub
inc
xchg
scas
mov
or
dec
or
call
adc
invd
sbb
ret
adc
inc
xchg
scas
xchg
sub
mov
loope
dec
mov
and
faddl
and
fwait
and
push
test
inc
xchg
scas
mov
adc
nop
pop
leave
cltd
pusha
pop
pushf
bound
jmp
jmp
icebp
vpmacssww
xchg
cmpl
mov
xchg
and
sub
add
and
dec
scas
and
fdivl
xor
sbb
fiaddl
test
xchg
dec
and
cmp
scas
jae
movsb
out
adcb
adc
ret
mov
addl
and
adc
dec
scas
xor
mov
or
shll
cwtl
fadds
or
scas
pop
sbb
or
sub
inc
dec
push
cmp
cmp
dec
ss
dec
push
mov
icebp
inc
cmp
ret
scas
cmp
scas
les
inc
dec
push
cmp
scas
xor
in
jl
add
xchg
adc
cmp
faddl
scas
push
movb
inc
and
push
scas
inc
xchg
ret
out
jo
cmp
popa
pop
push
push
dec
push
scas
lcall
addb
and
xchg
scas
jmp
sub
loope
roll
adc
add
sbb
scas
xor
and
scas
add
mov
test
int3
out
pop
xchg
push
push
add
ret
xchg
add
and
pop
or
dec
add
inc
xchg
scas
sbb
scas
addr16
movsb
loopne
and
test
adc
push
test
push
adc
sub
pop
mov
cwtl
or
adc
scas
jnp
pushf
mov
and
or
adc
dec
loope
xchg
scas
cmp
movsb
jo
and
mov
push
adc
mov
or
sub
fbld
adc
add
dec
scas
adc
xchg
jne
add
test
or
mov
and
scas
xchg
adc
add
lock
adc
movsb
scas
adc
adc
fildll
je
test
push
inc
scas
mov
adc
or
scas
dec
push
push
pushf
repnz
inc
scas
aas
insb
cvtps2pi
scas
dec
mov
inc
inc
adc
adc
adc
adc
fnstsw
in
adc
rclb
jo
adc
mov
dec
or
scas
adc
scas
test
dec
test
xor
adc
xchg
jp
or
scas
ret
test
xchg
scas
ret
js
push
push
push
sbb
test
test
xor
scas
xor
add
pop
dec
addr16
push
sbb
push
or
jb
or
loope
scas
cmp
js
clc
in
xchg
mov
jmp
add
sbb
jmp
popl
cmp
and
xor
push
cmp
mov
test
and
aaa
add
dec
scas
xlat
push
scas
or
scas
and
add
stos
pop
xchg
cmp
dec
popa
lock
add
scas
outsb
xor
outsb
and
test
push
adc
or
or
add
scas
push
xchg
scas
rorb
in
push
or
call
adc
sbb
and
mov
adc
and
jae
scas
cmp
out
dec
jge
mov
xchg
cmpsb
mov
dec
push
cwtl
scas
and
pop
imull
movsb
scas
dec
roll
ss
sub
scas
pop
or
push
xchg
adc
adc
or
and
scas
sbb
and
scas
dec
push
sbb
cmp
adc
xor
adcb
adc
scas
inc
es
leave
jnp
dec
push
pop
push
adc
dec
push
pop
sub
loope
inc
scas
lcall
dec
dec
test
dec
push
js
imul
inc
scas
adc
fcoml
scas
int3
sbb
inc
sub
fidivrl
cwtl
outsb
inc
test
sub
movsb
pusha
rolb
xchg
lods
mov
lcall
adc
sub
dec
stos
lcall
dec
scas
lods
adc
nop
movsb
xor
scas
loope
and
pop
jl
not
push
xlat
jg
adc
or
scas
xchg
addr16
and
mov
dec
mov
scas
and
cmp
ret
xchg
mov
dec
scas
or
xchg
adc
cwtl
or
and
or
sbb
mov
and
or
and
inc
dec
push
scas
inc
dec
push
xor
add
scas
jae
enter
sub
mov
ret
mov
call
mov
call
and
pushf
mov
ljmp
xchg
ret
scas
aad
inc
mov
mov
or
mov
subb
outsb
add
jge
push
test
fildll
scas
dec
push
sbb
pop
xor
adc
js
insl
int3
add
adc
inc
js
or
and
or
outsl
movsb
loopne
mov
subb
or
loop
movsb
jo
jo
movsb
inc
lea
dec
adc
add
mov
dec
imul
nop
sbb
push
or
outsl
dec
andb
mov
orb
or
xor
stc
sub
sbb
ja
push
lea
xor
xor
movsb
test
or
popf
pop
inc
push
add
andb
sub
mov
inc
push
mov
inc
and
inc
outsl
das
repz
ja
adc
outsl
andb
xor
outsl
cwtl
pop
adc
dec
or
into
inc
outsl
adc
repnz
add
jmp
andb
inc
in
mov
cmp
pop
or
add
pusha
cmp
dec
or
and
and
outsl
fisubs
loope
push
movsb
aas
mov
dec
outsl
push
cmp
jbe
into
movsl
jg
scas
and
sub
scas
jo
mov
jb
jg
scas
mov
mov
bnd
cmp
outsl
shll
outsl
and
pop
mov
inc
add
and
fs
xchg
xor
repnz
mov
pop
inc
inc
push
outsl
lods
lods
xchg
xchg
mov
loopne
movsb
jo
cmp
add
cmp
addb
test
push
mov
xchg
inc
adc
pop
push
cmp
andb
inc
outsl
ljmp
xchg
pop
out
xchg
push
repnz
stos
lcall
adc
dec
rorl
dec
lods
mov
push
add
rcrl
outsl
mov
add
stos
dec
or
dec
pusha
imul
or
andb
xchg
cmp
pop
adc
xchg
ret
test
add
repnz
sub
and
cmp
outsl
and
push
lods
push
add
orb
outsl
add
int3
outsl
leave
push
adcl
nop
inc
jb
pop
add
jg
es
adc
pop
or
outsl
xchg
sahf
test
outsl
sub
mov
jo
and
sahf
mov
loop
jmp
pop
incl
into
mov
add
cmpsb
movsb
sub
dec
jl
stos
andb
push
outsl
lcall
dec
outsl
sbb
jo
pusha
adc
cmp
in
adc
or
mov
jmp
mov
nop
xlat
jno
movsl
add
sbbb
cmp
ret
mov
pusha
pop
or
js
mov
or
outsl
add
outsl
and
faddl
inc
shlb
mov
outsl
lods
or
inc
mov
jo
imul
andb
jo
loop
xchg
repz
add
in
andb
es
mov
add
add
sub
mov
and
outsl
ja
movsb
and
mov
xor
push
addl
dec
or
or
inc
inc
push
js
outsl
dec
inc
inc
dec
idivl
outsl
mov
push
or
or
and
mov
stos
pop
adc
or
or
or
movsl
mov
sbb
addb
add
test
sub
sub
mov
add
mov
cs
sub
add
data16
stos
inc
lret
push
mov
inc
push
push
add
add
outsl
ret
in
in
idivb
hlt
pusha
lar
or
andb
nop
adc
add
add
scas
pop
out
dec
shll
sbb
outsl
push
xchg
addb
nop
outsl
aas
enter
xchg
outsl
mov
pop
lcall
or
fisttps
ret
add
dec
outsl
cmp
add
sub
es
xchg
lods
mov
inc
add
push
shll
dec
cmp
out
push
add
into
xchg
lret
add
mov
mov
addb
xchg
sbbb
xchg
movsl
test
add
and
and
outsl
nop
adc
push
movsb
jo
adc
outsb
jmp
mov
dec
inc
gs
add
cmp
and
fcompl
outsl
and
pop
push
cmpl
test
push
add
add
or
outsl
pop
data16
adcb
sbb
add
pop
out
outsl
push
xor
push
xor
inc
outsl
es
or
dec
outsl
outsl
aaa
add
inc
cmpsl
or
outsl
out
mov
outsl
inc
inc
push
mov
inc
orb
sbb
or
test
or
lods
or
add
sbb
dec
loope
outsl
mov
out
outsl
sbbb
jae
xor
add
add
nop
adc
add
pushf
outsl
sbbb
push
sbb
and
in
into
fadds
add
sub
and
outsl
dec
popa
and
push
push
add
outsl
mov
ret
add
or
adc
and
subl
dec
es
adc
outsl
cld
cs
inc
inc
outsl
or
ja
inc
push
outsl
add
and
dec
or
sub
mov
outsl
mov
xchg
outsl
mov
jo
and
outsl
mov
outsl
ja
add
add
movsb
loopne
mov
outsl
push
inc
add
popa
gs
xchg
xchg
xorb
imul
inc
adc
lock
outsl
cmp
dec
add
dec
adc
add
dec
outsl
cmp
sub
sub
sub
sub
xor
xchg
ret
mov
test
in
fcoml
and
inc
mov
sub
sub
test
dec
inc
pop
outsl
movsb
xor
pop
mov
add
mov
push
add
outsl
or
aaa
ss
outsl
adc
scas
sub
adc
stos
andb
add
outsl
xchg
ret
int3
gs
and
outsb
adc
add
nop
adc
sbb
inc
adc
adc
outsl
xchg
call
outsl
adc
mov
nop
adc
cwtl
lea
jnp
adc
adc
nop
adc
fwait
add
gs
and
roll
loop
add
push
and
xchg
outsl
push
movsb
pusha
add
sub
mov
lcall
pop
dec
inc
add
sbb
add
shll
xor
push
push
add
repnz
mov
cmp
sbbb
outsl
aas
push
addb
outsl
scas
andb
mov
inc
test
and
xchg
ret
outsl
and
fwait
add
xchg
sbb
aad
leave
pop
mov
outsl
insb
add
jns
fwait
add
dec
sub
xchg
ret
or
ret
push
adc
fs
ret
scas
add
add
iret
loop
push
push
adc
popa
xor
dec
and
add
push
out
orb
adc
inc
push
insb
inc
mov
movsb
mov
push
pusha
mov
orb
lds
mov
sub
jo
faddl
pop
xor
sub
dec
or
mov
lock
push
sub
sub
bound
or
and
sub
loope
dec
inc
sub
mov
dec
loopne
sub
cmp
mov
and
sub
pop
fmull
dec
dec
popa
cmp
or
pusha
push
xchg
ret
mov
or
xchg
or
in
mov
adc
adc
push
adc
mov
push
sbb
and
sub
mov
xorl
or
les
fcomi
in
movsl
and
sub
xchg
in
mov
rorl
and
imul
in
adc
sar
repz
inc
or
lret
pop
movsb
lock
in
mov
ret
cwtl
in
lds
insb
in
mov
xchg
pop
movsb
mov
or
sub
cli
add
jmp
adc
mov
shlb
or
sub
popl
aam
jo
xchg
bound
movsb
je
cmpsb
or
arpl
testb
xchg
outsb
mov
out
sbb
adc
adc
cmp
lds
test
nop
and
sbbb
movsb
mov
or
pop
fwait
out
adc
jb
arpl
stc
sub
or
test
xchg
ret
push
push
rorb
bound
bound
push
sub
mov
dec
sub
jns
mov
mov
repz
add
cmp
mov
fmulp
push
adc
aad
jne
cs
inc
lds
inc
or
or
js
add
ja
sub
popl
or
incb
in
jns
add
sub
and
bound
push
les
push
fisttps
xchg
popl
scas
inc
cs
sub
mov
ret
popl
pop
cmpsl
movsl
sub
mov
push
lds
add
ror
pusha
xchg
test
adc
push
adc
or
sub
push
pop
movsb
jo
xor
push
sub
mov
test
sub
inc
les
movsl
in
sbb
and
sub
cmp
jbe
sbb
add
bound
vfrczss
dec
xor
test
inc
mov
adc
bound
scas
int
or
sub
sub
push
sub
jo
scas
bound
scas
and
out
mov
faddl
push
sub
pop
mov
fmull
add
aam
mov
adc
dec
aad
mov
pop
scas
movsl
out
lcall
aaa
dec
push
lds
test
inc
fisubrs
dec
fcmovnb
and
xor
fcoml
scas
xor
outsb
and
scas
jp
sub
mov
and
sub
cld
and
mov
adc
loope
adc
fstl
mov
sarl
xchg
ret
rcl
scas
sub
add
jno
add
xor
dec
fcmovbe
in
fsin
cmp
push
scas
push
cmp
pop
fbld
pop
inc
sub
scas
xchg
pop
mov
rcr
and
bound
push
sub
pop
sarb
scas
mov
notb
xor
cmc
negb
sub
xor
rclb
hlt
jo
sub
nop
push
sub
scas
sub
adc
and
scas
add
push
adc
mov
mov
mov
or
pop
sbb
loope
adc
push
xlat
or
push
sub
xor
inc
and
push
inc
imul
les
or
xchg
ret
sti
loopne
pop
movsb
jo
scas
push
sub
movsb
jbe
mov
and
ja
scas
dec
and
es
ret
scas
es
loope
bound
pop
mov
outsl
es
mov
es
inc
sub
inc
es
and
scas
xor
or
mov
mov
inc
push
dec
mov
scas
inc
sub
js
scas
and
sub
sbb
scas
adc
scas
mov
ja
es
bound
es
pop
movsb
jo
ljmp
scas
mov
inc
scas
cli
daa
rorb
and
adc
int
sarl
imul
inc
adc
scas
xchg
dec
addr16
cmp
xchg
push
push
addr16
fcmovnu
rcl
xor
addr16
repnz
cs
leave
xchg
call
scas
call
xchg
fsubrl
call
cmp
stc
nop
jl
daa
call
adc
in
repnz
call
cltd
xchg
outsb
es
loope
bound
pop
mov
out
call
frstor
stc
nop
jl
call
add
xchg
inc
repnz
call
lcall
call
mov
push
scas
movsb
jo
push
pop
cmpb
lds
pop
adc
dec
lock
dec
roll
mov
sbb
jns
lcall
or
dec
loope
bnd
ret
push
scas
lds
test
dec
popa
jo
clc
scas
bound
scas
lds
test
inc
or
pop
scas
adc
push
scas
sub
sub
fstps
scas
push
sub
mov
scas
pop
movsb
jo
scas
loope
mov
loope
scas
cltd
mov
scas
sarl
lds
test
inc
or
mov
add
scas
mov
push
scas
nop
mov
das
mov
sbbb
ret
sub
and
lock
sub
dec
inc
mov
pop
fstpt
and
adc
add
and
jle
sbb
sbbl
ret
cmp
js
and
xor
jne
popa
adc
or
loope
sbb
push
clc
xchg
cmp
dec
inc
movsb
lock
push
pop
push
and
cmpsb
push
pop
inc
and
pusha
add
je
xor
jne
and
mov
je
mul
lods
pop
scas
das
callw
out
mov
scas
adc
mov
call
sub
mov
bound
sbb
lds
test
inc
or
nop
mov
jo
scas
mov
inc
and
js
scas
push
dec
mov
dec
dec
xchg
cmp
fwait
bound
popf
bound
daa
bound
or
fisubrl
and
cmpsb
jle
scas
sub
sbb
ja
scas
je
jo
repnz
inc
and
stos
pop
movsb
scas
adc
add
es
rclb
ret
shlb
nop
pop
and
dec
shl
inc
das
in
mov
adcl
cmpsb
and
sub
lods
scas
mov
cwtl
or
cmp
scas
out
mov
and
scas
mov
add
inc
adc
or
iret
std
push
xor
sub
cmp
push
scas
scas
or
inc
push
dec
jo,pt
mov
mov
inc
ds
sub
sub
xchg
inc
scas
push
adc
mov
inc
sub
ret
in
mov
adcl
lcall
sbb
add
fwait
sbbb
sbb
and
pusha
or
into
loope
inc
sub
dec
xor
mov
scas
sbb
adc
sub
pop
popa
mov
scas
push
add
sub
mov
or
pop
or
loope
mov
adc
scas
mov
fcoml
scas
mov
and
sub
and
and
inc
or
lds
cmpsl
mov
inc
or
scas
adc
scas
loope
pop
js
lret
std
mov
popa
and
scas
push
sub
push
cmpsb
faddp
jl
sub
or
sub
sub
push
mov
ret
mov
scas
push
inc
scas
push
sub
pop
movsb
xor
scas
inc
or
mov
push
cwtl
xor
scas
mov
sub
movsb
pusha
shrb
les
out
adc
loop
sti
cmp
mov
mov
scas
sub
sub
add
jbe
adc
push
adc
adc
or
sub
push
popl
cs
inc
mov
in
lret
adc
jnp
mov
adc
and
sbb
movd
mov
xor
pop
sbb
aaa
call
push
sub
lea
call
popa
mov
or
mov
mov
movsb
pop
push
inc
lds
test
fs
popl
loopne,pn
mov
mov
dec
popa
jnp
aad
xchg
mov
mov
inc
or
mov
popf
outsb
inc
xor
jbe
pop
mov
inc
dec
adc
adc
rorl
push
sub
mov
inc
or
inc
sub
mov
mov
inc
das
std
or
add
std
sub
add
and
cs
fcomps
pop
inc
or
inc
push
test
mov
inc
sub
jle
or
push
pop
daa
dec
pop
adc
xor
push
adc
adc
mov
ret
pop
movsb
mov
sahf
cwtl
mov
mov
dec
adc
sub
cmpsb
and
pop
movsb
xchg
push
and
sbb
ret
popa
inc
jo
or
fwait
out
or
xchg
add
cwtl
nop
push
sub
sub
push
mov
rorl
sti
mov
sub
inc
mov
xlat
inc
inc
cmp
push
xchg
orb
mov
divb
inc
or
push
mov
mov
aas
push
add
cmp
add
jo
les
fcompl
rcpps
imul
les
test
push
outsl
dec
ljmp
mov
xor
es
mov
testl
sbb
daa
sahf
or
push
adc
mov
inc
jo
adcb
mov
mov
mov
ret
xchg
adc
add
mov
and
add
das
in
arpl
inc
enter
aaa
push
sub
xchg
xor
rorl
bound
inc
enter
test
cmpb
pop
movsb
loopne
pop
xchg
out
cwtl
mov
and
sub
dec
shrl
rorl
or
adc
adc
jecxz
sub
sbb
mov
jno
mov
cmpsl
out
sub
sub
mov
pop
xchg
ret
pop
push
mov
loope
iret
xor
mov
lret
out
xchg
cmpsl
jl
push
sahf
sbb
jb
or
and
inc
adc
xchg
inc
dec
push
sub
mulb
sub
pop
adc
mov
ja
sub
and
ret
inc
sub
mov
push
sub
loopne
mov
mov
mov
shlb
out
repz
test
lock
mov
adc
mov
push
sub
mov
and
xor
jg
dec
loope
bound
push
mov
push
sub
mov
push
add
push
dec
inc
ret
js
inc
and
rorb
pop
scas
pop
movsb
loopne
sets
pop
movsb
jo
bswap
rorl
insl
sbb
xchg
addb
fdivrs
xor
push
fsubrs
dec
mov
pop
adc
sub
sub
fwait
and
bound
movsb
loopne
push
sbb
dec
loope
pop
or
mov
aam
ja
or
in
and
lds
add
rorb
outsb
xor
push
mov
mov
or
pusha
inc
dec
dec
pop
cs
not
cs
cmp
sahf
pop
fidivs
adc
cmp
data16
inc
shlb
mov
mov
push
call
mov
push
scas
aad
ljmp
gs
bound
xor
inc
leave
pop
adc
out
cmp
mov
jl
loop
jns
mov
lahf
mov
cmp
add
mov
pop
fcoml
push
adc
frstor
fdivrs
xor
mov
ja
cmc
push
push
sub
test
ss
mov
inc
lods
ljmp
lcall
pop
mov
loope
push
sub
cmp
dec
sub
mov
out
mov
or
enter
cmp
mov
push
in
add
mov
andl
adc
or
or
aas
pusha
mov
adc
call
or
push
mov
cs
fadd
and
adc
popa
pop
lds
add
xchg
ret
lea
pop
mov
loope
aaa
lret
rorb
in
adc
mov
das
inc
call
lds
les
or
cwtl
sbb
bound
loope
or
nop
dec
push
mov
insb
in
jmp
js
adc
and
push
mov
inc
or
xor
les
test
push
cmp
dec
out
and
ret
popa
inc
loopne
push
push
sbb
jp
orl
lock
pop
movsb
jo
mov
popa
or
loope
or
push
push
cli
mov
out
lock
adc
sbb
sub
dec
jge
bound
cwtl
ret
aad
pop
movsb
push
and
mov
addr16
push
push
pusha
jb
sahf
dec
adc
dec
call
in
pop
mov
add
insl
xchg
push
fiadds
and
push
call
xchg
pusha
out
lret
dec
rorl
xchg
test
or
lds
jae
push
adc
push
sub
ja
mov
sub
sub
movsb
pusha
jl
push
movsb
jo
mov
adc
jne
popa
pusha
movsb
jo
mov
xchg
sub
mov
sub
sub
mov
add
push
or
fwait
dec
test
push
xchg
push
aaa
in
les
and
sarb
pop
pop
mov
xchg
loope
or
sbb
out
out
dec
or
mov
sub
or
jns
pusha
sbb
and
dec
mov
loope
pop
bound
dec
loope
sti
xchg
inc
cmp
js
mov
sub
sbb
pfsub
push
mov
loope
rorb
aad
push
mov
icebp
mov
add
mull
adc
sbb
push
dec
cltd
test
jmp
and
movsb
jns
jb
in
mov
dec
lock
leave
add
xchg
iret
mov
cmpsb
pop
movsb
cli
jbe
leave
jae
sbb
les
test
jo
mov
xchg
xchg
pop
movsb
xor
cmc
call
mov
loope
sub
inc
mov
repnz
push
sub
cli
call
sbbb
test
test
add
ljmp
gs
push
sub
mov
fsub
and
mov
and
xchg
mov
incl
sbb
add
inc
or
das
cmp
mov
sub
rcr
mov
sub
or
addr16
push
bound
and
sub
loope
cmp
jne
rcrl
mov
in
mov
sahf
xchg
add
stos
push
leave
call
inc
sbb
inc
adc
cwtl
mov
bound
mov
outsl
push
push
adc
push
je
push
or
jb
mov
pop
sbbb
inc
or
popl
mov
push
lds
jge
bound
and
bound
js
pop
movsb
lock
xor
adc
scas
orb
adc
movsb
jo
fst
popa
mov
pop
pop
xchg
adc
and
dec
or
mov
mov
fdivs
cmpsb
and
and
mov
and
ret
nop
addr16
es
loope
push
in
jg
add
inc
dec
adc
pop
movsb
nop
xor
mov
xor
jbe
xor
scas
dec
xor
pop
movsb
jo
cmp
mov
mov
inc
jbe
pop
scas
bound
les
aam
movsb
pusha
push
push
xchg
pop
sbb
insb
pusha
push
sub
add
pushf
push
lahf
cltd
loope
bound
push
mov
cmp
mov
mov
sub
sub
push
mov
push
popl
cs
in
and
cmp
sub
push
scas
out
add
and
movsb
pusha
mov
popf
je
cli
inc
loope
iret
lahf
sub
les
adc
mov
bound
push
sub
cmp
or
xlat
pusha
xchg
cmp
adc
shrb
popa
lea
push
add
add
inc
or
xchg
mov
and
sub
orb
test
les
test
sbb
out
andb
sti
rorb
push
jbe
push
les
in
xchg
stc
mov
push
adc
xchg
bound
sbbl
sub
rolb
adc
and
jae
cmp
sub
lods
dec
popl
or
adcb
mov
bound
and
add
popa
rolb
mov
popl
sbb
mov
cmp
push
or
movsb
and
inc
mov
sbb
adc
adc
sub
js
xchg
and
bnd
add
sbb
mov
ret
xchg
sbb
pop
mov
push
mov
mov
inc
cmp
fcoms
imul
push
pop
mov
ret
or
mov
jle
sub
push
and
inc
or
xbegin
xchg
or
sub
sub
test
add
xchg
cmp
xor
xchg
ret
popf
daa
sbb
cmpsb
bound
pop
movsb
adc
xor
sub
sub
mov
les
mov
imul
push
sub
jo
pop
and
push
sub
adc
and
adc
cmp
mov
call
and
jns
and
mov
in
leave
movsl
lds
jnp
cs
call
dec
inc
sub
cmp
stc
push
mov
mov
bound
adc
mov
add
mov
adc
sub
nop
xor
sub
fisttpl
sub
ljmp
jl
fsubl
fsubl
imulb
pop
movsb
jo
call
popl
dec
rcrl
push
mov
aad
pusha
mov
ds
scas
cwtl
adc
fwait
and
pop
movsb
jo
cmp
mov
lock
and
mov
push
bound
mov
push
add
adcl
or
notl
loopne
insb
dec
sub
pop
sbb
push
sub
and
inc
mov
sbb
push
pop
in
sbb
fld
push
loope
mov
and
icebp
dec
movb
and
dec
jle
add
imulb
push
sub
mov
lods
bound
push
sub
sub
mov
outsb
cmp
xchg
shl
mov
loope
repz
sub
xchg
ret
sub
fiadds
bound
mov
cmc
lods
bound
loope
push
ljmp
add
adc
xor
mov
sub
dec
inc
and
push
stos
or
push
cmp
mov
lds
test
push
shrl
fs
sub
sub
test
or
sbb
adc
mov
inc
les
ss
scas
and
pop
xor
pop
adc
sub
and
jnp
aam
mov
sbb
dec
jecxz
inc
sub
xor
lret
jg
ja
les
mov
adc
push
adc
cmp
adc
pop
movsb
mov
lret
hlt
dec
push
cmp
pop
movsb
loopne
mov
popl
repnz
mov
mov
xchg
push
scas
js
add
inc
or
add
ret
out
push
xchg
jno
push
sub
cld
adc
out
lahf
cmpsb
mov
push
lock
mov
loope
mov
cmpsl
xchg
pop
dec
adc
add
ficomps
mov
push
sub
js
sbb
add
adc
and
ret
adc
adc
ds
push
mov
movsb
int
push
cmp
adc
movsl
sbb
sbbb
mov
adc
add
and
cmp
test
add
into
add
mov
lds
pop
cs
and
adc
nop
jnp
pop
movsb
mov
sub
mov
dec
xor
mov
lcall
lcall
dec
mov
les
pop
jne
pop
inc
sub
aaa
das
bound
je
pop
movsb
pusha
es
out
incl
bound
xchg
cs
outsl
or
test
pop
or
popa
bound
movsb
lock
jmp
stos
ret
pop
popl
mov
popl
push
js
arpl
scas
sub
push
dec
lock
test
adc
or
clc
outsb
add
adc
bound
bound
je
sbb
cmpsl
adc
inc
mov
outsl
rorb
ljmp
fwait
pushf
mov
xchg
scas
cmp
push
sub
and
xchg
ret
mov
loope
js
rorb
and
rorb
ret
bound
jmp
les
popl
mov
sbb
test
sub
and
adc
and
sub
jp
popl
sub
adc
and
loope
and
inc
or
cmc
jo
push
mov
dec
adc
lds
call
sbb
cs
xchg
xor
lcall
pop
movsb
mov
and
sub
loopne
or
orb
or
or
sub
xchg
ret
xor
or
outsl
popf
mov
adc
mov
sbb
push
test
bound
xor
and
inc
dec
sbb
pcmpgtd
mov
pop
movsb
xor
xor
add
orb
adc
rep
rolb
xchg
cmc
mov
adc
mov
push
cltd
scas
and
cmc
push
sub
lds
sub
sub
mov
push
xlat
mov
push
sub
mov
mov
loope
icebp
sbb
test
cmc
inc
mov
push
xchg
push
inc
mov
jg
popf
mov
add
test
imul
lcall
push
mov
icebp
lock
jo
and
sub
lods
mov
and
mov
push
mov
pusha
cmpsl
mov
rcrb
mov
mov
cmp
repz
inc
sahf
jne
pop
mov
and
jo
popa
insl
sub
mov
insl
jg
push
out
cwtl
popf
call
cmp
rcrl
and
mov
mov
daa
mov
cmp
push
sub
hlt
pop
enter
pop
inc
lds
inc
or
xor
or
out
fidivs
push
das
aaa
bound
mov
mov
or
jns
and
and
sub
pop
add
leave
xor
sub
cmpsb
ret
pop
movsb
xor
mov
rolb
enter
jp
pop
push
sbb
mov
inc
add
mov
mov
dec
push
or
mov
int3
xchg
and
mov
lcall
aam
inc
sub
mov
mov
pop
xchg
mov
nopl
sbb
and
pop
bound
mov
push
ret
adcb
jo
bound
dec
rorl
fcoml
pusha
loopne
xchg
pop
mov
mov
xor
inc
mov
push
adcb
popl
mov
loope
pop
and
sbbb
xchg
xor
xor
pop
jnp
popa
dec
call
mov
sub
rcll
pop
and
mov
pushf
adc
jl
pop
add
or
and
sub
sbb
movsl
sbb
movsb
pusha
or
mov
inc
pop
cmp
xchg
push
jo
into
push
imull
push
xor
arpl
pusha
and
lret
stos
test
mov
out
add
xchg
outsb
push
into
add
inc
arpl
inc
pushf
cwtl
sub
xchg
orb
mov
push
jnp
out
ds
pop
in
push
adc
iret
jnp
push
xchg
push
lret
adc
mov
mov
add
dec
xor
adc
mov
sub
js
jno
fldt
daa
and
adc
sbbb
sub
mov
inc
or
and
mov
or
loope
repz
xor
movsb
mov
mov
or
and
sub
icebp
mov
mov
scas
cs
jmp
movsb
ficompl
sbb
popa
dec
xor
es
fwait
mov
jo
push
sub
popl
outsb
ljmp
mov
pop
fdivl
inc
orl
vpmacsdql
and
bnd
or
pop
xchg
mov
sub
adc
and
push
adc
or
inc
and
mov
dec
mov
into
test
dec
movsb
pusha
das
mov
popa
mov
mov
push
cmp
adc
push
mov
mov
push
sub
push
adc
ficoml
repnz
pop
adc
mov
adc
or
mov
out
pop
xlat
stos
adc
movsl
pop
movsb
jo
mov
rcll
sub
mov
inc
or
push
pushf
inc
sub
orl
lods
mov
pop
into
or
fcoml
js
imul
loopne
les
repnz
bound
test
xchg
xor
lea
and
sub
lret
aam
xor
mov
movsb
xor
orb
sub
cwtl
mov
rorl
xor
popl
aaa
inc
pop
jl
jo
mov
cwtl
push
mov
xchg
ret
push
cltd
inc
add
bound
mov
cwtl
pusha
test
cmp
roll
sub
mov
cmp
sub
sub
dec
and
out
add
movsb
mov
xchg
pop
lret
sbbb
ja
push
sub
sbb
xchg
and
out
orl
xchg
mov
cmp
fwait
and
jno
pop
sub
xor
ret
movsl
pop
add
ret
and
sub
out
or
out
movsb
jo
mov
shlb
pop
movsb
lock
sbb
or
orb
xchg
ret
and
or
adc
sbb
add
sub
cmpsb
lods
movsb
jo
cwtl
cmp
mov
mov
lahf
dec
loope
xor
dec
dec
mov
int
or
mov
rorb
mov
mov
lahf
xor
add
push
xchg
addl
jl
outsl
xor
adc
sub
pop
movsb
jo
adc
push
sub
orl
jbe
adc
adc
mov
bound
inc
or
test
mov
popa
sub
pop
movsb
loopne
aaa
sub
mov
or
or
or
mov
adc
les
test
pop
pop
push
fmuls
dec
mov
sub
enter
xchg
ret
pop
movsb
lock
orl
xchg
dec
nop
mov
fmull
cmovge
mull
push
mov
mov
mov
or
and
mov
ljmp
mov
pop
dec
pop
movsb
jo
arpl
sub
test
sbb
and
sub
mov
mov
dec
add
adc
movsb
sbb
lea
mov
popa
adc
or
mov
fwait
call
jns
jmp
adc
adc
cmpsb
mov
jle
mov
loope
mov
jo
mov
shll
sub
sbb
push
pop
sbb
and
push
sub
lea
ss
aaa
sbbl
ljmp
gs
pop
movsb
jo
popa
lock
and
mov
repz
mov
repnz
cmpsb
dec
cs
dec
adc
scas
and
sub
sbb
test
orl
pop
and
sub
pop
js
stos
mov
shrb
pop
mov
loope
js
inc
mov
loope
popl
jg
ja
popf
mov
sahf
sbb
cld
repnz
sub
push
int3
repz
and
lds
add
or
add
lock
adc
xor
cwtl
incb
sbb
sub
pop
xor
sub
adc
bound
adc
push
mov
xchg
xchg
ret
dec
add
movsb
loopne
bound
pop
out
mov
mov
xchg
fsubp
push
sub
xor
pop
mov
test
push
inc
les
mov
adc
fiadds
mov
popa
xchg
mov
popa
std
jmp
bound
or
inc
pop
lods
or
and
sub
lea
push
inc
mov
or
es
mov
adc
cwtl
sub
xchg
shlb
call
and
rorl
jb
or
cmpsl
neg
addr16
cmpsl
pop
jo
repnz
ret
xchg
jg
add
dec
lds
nop
or
xchg
mov
inc
mov
xchg
and
mov
push
mov
adc
and
dec
loope
inc
cli
sahf
ret
mov
lea
jl
sub
jl
sub
xor
jecxz
adc
push
cmp
add
push
mov
and
ja
xor
mov
adc
or
dec
popa
and
xchg
inc
les
lcall
je
mov
dec
mov
ret
mov
and
sub
xor
rclb
mov
sub
mov
pop
sbb
mov
push
popl
mov
popa
add
add
inc
or
mov
inc
mov
sub
inc
mov
daa
movsb
or
and
shll
scas
lahf
add
adc
or
jnp
dec
sub
xor
xchg
cmp
sub
sub
out
push
daa
mov
sub
and
movsb
scas
jo
xchg
inc
test
sub
lods
and
sub
add
mov
mov
sub
pushf
add
test
scas
std
inc
insb
inc
adc
test
rorl
int3
scas
and
pusha
les
les
pop
movsb
scas
popa
mov
or
arpl
dec
adc
add
mov
sub
mov
test
push
rolb
les
xor
push
scas
adc
lds
scas
jg
inc
or
scas
push
sub
or
lahf
push
fwait
pop
pop
sub
imul
sub
sub
adc
scas
mov
loope
cmp
scas
nop
inc
xor
adc
xlat
jb
test
sbb
add
scas
jns
xchg
adc
in
dec
mov
insl
ss
cmp
adc
rorl
in
add
je
les
test
mov
inc
scas
adc
sub
push
sub
xor
stos
mov
imul
xor
xchg
addb
mov
bound
mov
fcmovnu
add
repnz
and
repnz
pop
inc
adc
inc
lock
dec
xchg
sbb
les
mov
repz
adc
pusha
mov
push
std
lcall
adc
scas
mov
add
push
cmpb
push
les
icebp
movlps
inc
sub
mov
or
push
rclb
movsb
jo
xchg
movl
inc
mov
cmp
in
pop
push
add
pop
or
loope
mov
and
sub
push
push
ss
cmp
inc
adc
scas
mov
loope
stc
cmp
mov
filds
pop
scas
cwtl
adc
push
mov
enter
or
scas
call
sbb
inc
and
mov
pop
jne
inc
or
mov
popa
or
nop
mov
pop
es
les
test
inc
and
test
subl
sbb
xchg
jo
scas
cltd
pop
mov
loope
scas
mov
es
and
cs
sbb
jmp
push
or
inc
sub
push
ret
inc
scas
push
sub
jecxz
orb
pop
adc
outsb
lea
sub
scas
and
sub
scas
lds
test
lret
xor
push
jl
or
scas
addl
adc
bound
mov
xchg
mov
movsb
jo
fcoms
arpl
scas
sub
push
and
scas
add
mov
scas
sbb
jo
scas
sub
mov
cld
fnstenv
scas
push
or
dec
scas
fwait
int
mov
sbb
push
lahf
mov
push
or
lcall
imul
incl
sub
scas
imul
or
push
sub
scas
and
and
scas
bound
scas
push
push
sub
adcb
inc
or
push
push
cmp
ret
pop
scas
inc
cmpsb
xchg
add
mov
in
dec
add
pop
movsb
loopne
sub
adc
stos
scas
cmp
dec
loope
adc
js
mov
or
test
push
sub
pause
or
and
adcb
stc
mov
add
pop
shll
lahf
fists
add
and
sub
test
and
test
adc
scas
aam
lds
scas
jne
mov
xchg
scas
pop
movsb
jo
cmp
mov
test
andl
adc
adc
dec
popa
xor
jo
mov
lds
scas
xchg
xorb
bound
bound
ret
xlat
inc
mov
loope
scas
push
sub
jno
or
xchg
mov
scas
add
movsb
scas
inc
stc
add
ret
mov
add
scas
mov
pop
mov
xchg
ret
scas
or
data16
sub
scas
roll
scas
mov
push
loope
add
mov
and
xchg
js
pop
scas
and
scas
stos
rcrb
scas
or
bound
and
sub
scas
test
leave
sar
std
jnp
lds
scas
loope
ficoms
and
ret
ret
mov
bound
les
add
xchg
adc
xor
mov
cs
inc
scas
mov
inc
scas
in
add
push
sub
nop
iret
sub
cmp
scas
in
popa
xor
mov
mov
scas
jb
and
xchg
mov
int3
mov
fsubl
jg
adc
das
and
push
adc
bound
mov
and
dec
enter
mov
insb
jmp
push
in
or
dec
popa
pop
inc
mov
and
cwtl
mov
scas
dec
add
and
sub
fisubs
stos
mov
mov
scas
rcrb
scas
gs
sub
mov
jle
mov
aaa
push
loope
inc
scas
xchg
ret
mov
bound
inc
sub
scas
push
sub
sub
loope
scas
push
scas
push
sub
add
sbb
ret
scas
xchg
push
or
bound
mov
into
or
push
sub
inc
or
and
cmp
rclb
push
sub
mov
movsb
lock
scas
add
scas
or
pop
pop
or
mov
incb
ret
pop
dec
jmp
mov
xchg
scas
and
sahf
call
cltd
roll
scas
call
test
fisubl
inc
int3
in
push
sub
scas
shll
add
stc
push
cltd
outsb
jmp
cmpsl
push
xchg
pop
xchg
lahf
jo
pushf
mov
mov
xor
push
dec
shl
call
daa
mov
scas
stos
push
mov
inc
fs
ret
cmp
out
push
xchg
test
or
and
jns
mov
or
push
scas
and
lods
sub
sub
and
dec
dec
mov
sbb
shrl
push
adc
and
sub
dec
jle
push
sub
lea
ret
test
shlb
and
pop
movsb
scas
xor
push
andb
adc
bound
scas
adc
inc
add
jo
adc
test
movsb
scas
and
push
xor
cli
mov
inc
scas
fdivl
adc
sub
scas
mov
repz
push
ret
loopne
xchg
sbb
imul
pop
scas
sub
push
push
and
xor
in
ds
incl
out
jmp
mov
or
cmp
negb
movsb
xor
dec
mov
add
sub
mov
and
xor
or
leave
or
and
sbb
sub
push
scas
sbb
sub
push
sub
cmc
cmp
cltd
push
inc
pop
outsb
cmp
pop
xor
pop
inc
or
loope
xor
push
sub
adc
sbb
scas
or
pusha
add
aam
movsb
cmpsb
cmp
adc
xchg
ret
pop
xor
push
js
bound
sub
or
inc
mov
scas
pop
movsb
xor
mov
scas
mov
mov
xchg
int
adc
pop
movsb
jo
dec
cmpsl
movsb
jo
mov
sbbb
adc
mov
scas
add
sbb
xlat
sub
sub
scas
dec
popa
sub
inc
mov
loop
mov
mov
out
inc
sbb
xchg
sub
inc
or
pop
xchg
inc
push
xor
and
inc
sub
insb
xor
aaa
sub
inc
les
scas
lds
bound
cmp
add
or
scas
push
mov
pop
mov
aas
and
adc
sbbb
out
mov
push
sub
pushf
mov
adc
scas
mov
mov
movsl
test
mov
scas
pop
movsb
mov
arpl
jb
popa
mov
xor
and
inc
aas
jg
nop
pop
leave
mov
dec
xor
inc
repnz
cli
jno
dec
rcrl
inc
jbe
pop
stos
push
sub
lock
nop
xchg
push
xor
scas
mov
push
sub
pushf
scas
sub
xor
dec
inc
scas
pop
lods
sbb
sub
mov
dec
or
fs
scas
sub
xor
stos
jo
sub
scas
test
movsb
scas
xchg
cs
xlat
mov
inc
dec
scas
push
sub
cmp
xchg
sbbb
adc
add
out
inc
adc
pop
movsb
jo
scas
popf
pop
push
mov
cltd
mov
scas
mov
loope
or
mov
pop
neg
mov
inc
scas
test
or
sub
mov
aas
jo
mov
scas
mov
and
das
mov
cmp
lock
mov
loopne
scas
lds
test
scas
xchg
ret
in
daa
test
sbb
or
bound
push
sub
mov
sub
lds
add
adc
pop
scas
mov
rorl
mov
fs
mov
xchg
sub
movsb
scas
xchg
adc
adc
or
jns
in
out
clc
sbb
out
push
sub
je
xor
pop
adc
mov
sbb
adc
test
pop
hlt
scas
or
add
fistpl
aaa
cmp
les
test
jo
scas
sub
jo
and
inc
scas
mov
dec
xchg
pusha
out
mov
mov
lods
sub
adc
inc
lds
test
jge
scas
xchg
orb
sbb
outsb
and
daa
stos
mov
movsb
or
and
sub
add
xor
add
adc
sub
loopne
mov
sub
inc
adc
adc
pop
or
es
jo
mov
pop
jo,pn
sbbl
loop
and
invd
testl
mov
loop
sub
test
push
scas
lds
push
sbb
test
and
bound
pop
adc
pop
adc
out
fcompl
push
sub
push
push
mov
orb
cmp
outsb
add
mov
push
scas
pop
clc
jmp
pop
dec
loope
mov
pop
mov
sub
cmpsl
imul
flds
jbe
loope
sub
pop
mov
scas
push
es
inc
and
pop
sub
scas
dec
push
adc
add
push
js
les
add
scas
add
cld
add
lds
scas
pop
stos
bound
and
scas
test
rclb
or
cmp
cs
bound
bound
ret
sub
adc
pop
scas
dec
pop
movsb
and
pushf
and
cwtl
dec
popa
xor
scas
push
sub
inc
mov
and
shlb
scas
andl
dec
shll
ret
pop
scas
mov
and
out
or
adc
pop
cmpsb
dec
loope
mov
adc
faddl
mov
scas
mov
loopne
push
sub
js
scas
mov
popa
jo
add
xchg
scas
loop
scas
jmp
inc
adcb
and
movsb
jo
scas
out
push
sub
scas
adc
dec
scas
dec
jmp
pop
pop
jmp
mov
orl
push
mov
movsb
loopne
jecxz
pop
movsb
pusha
scas
mov
loope
scas
lds
scas
adc
rclb
mov
adc
push
sub
scas
or
push
les
test
adc
dec
popa
xor
cmp
dec
mov
imul
push
mov
push
pusha
rclb
scas
ficompl
scas
pop
movsb
scas
mov
add
movsb
jo
scas
push
sub
sbb
test
xchg
loope
lds
scas
loope
rcll
scas
bound
stos
pusha
shl
mov
sub
ss
sbbb
jne
sub
adc
adc
sub
xchg
mov
adc
mov
scas
or
push
adc
loope
mov
rorl
shrl
loop
jp
mov
and
add
pop
movsb
scas
das
out
and
daa
das
xchg
je
scas
adc
push
sub
test
scas
je
push
mov
cmc
xchg
dec
mov
inc
test
sub
scas
outsb
mov
mov
sbb
scas
pop
pushf
inc
loopne
pop
scas
or
or
cmp
or
daa
in
outsl
lods
bound
sbb
mov
push
fdivs
adc
scas
jnp
push
sub
scas
sbb
xchg
inc
sub
sbb
push
mov
push
sub
repz
mov
cmp
adc
inc
adc
adc
scas
xor
ret
push
fistps
in
inc
mov
loope
xor
ret
hlt
repz
paddusw
lahf
fdivp
out
fcoml
adc
jecxz
lds
test
icebp
push
scas
bound
scas
xchg
ret
jo
ret
bound
xor
jno
mov
stc
adc
out
pop
movsb
jo
scas
sbb
cs
out
mov
adc
dec
popa
xor
add
jne
mov
push
sub
and
xchg
ret
rcrl
sbb
orl
das
and
das
pop
and
add
das
fisubl
xlat
dec
adc
or
xor
pop
das
push
test
or
dec
mov
pop
jmp
in
and
adc
pop
cmp
das
ficomps
sub
and
dec
xchg
ret
sub
sbbl
sub
nop
addl
push
das
andl
dec
loope
push
das
sbb
pop
sbb
das
inc
mov
inc
push
fimuls
ret
sub
leave
push
dec
xchg
cmpb
mov
pop
repnz
mov
and
test
xor
sbb
xchg
and
mov
sbb
sub
das
mov
jo
das
movsb
nop
rclb
or
add
es
lcall
push
mov
adc
xor
sub
dec
test
mov
push
cld
xor
pop
xchg
and
test
andb
das
insb
xor
repz
mov
das
pushf
adc
add
das
fcoms
push
mov
int3
sbb
mov
movsl
dec
loope
das
xchg
and
inc
cmpb
mov
out
xor
adc
test
rolb
and
adcb
les
push
ss
xchg
sub
fimuls
mov
xor
adc
ret
les
popa
or
mov
and
das
dec
jbe
inc
or
fcomps
adc
inc
or
dec
xchg
ret
das
or
and
push
pop
scas
push
mov
cwtl
adc
int3
or
iret
push
das
sbb
movsl
adc
rclb
sub
das
sub
inc
pusha
sbb
in
in
lds
pop
mov
cmpsl
push
call
jno
mov
mov
dec
loope
adc
push
sub
imul
xor
mov
push
cmp
das
inc
pop
sub
inc
sub
das
es
mov
sub
push
mov
or
add
mov
sbb
mov
xchg
mov
movsl
dec
loope
lahf
xor
inc
jbe,pn
pop
jmp
push
movsb
mov
sbb
cmp
sbb
mov
fidivrs
cwtl
scas
xchg
adcb
das
xchg
and
mov
xchg
stos
das
and
sub
mov
shll
adc
hlt
cmp
arpl
jae
dec
loope
outsb
das
sub
pop
mov
das
jo
adc
inc
movsl
das
or
rclb
push
pop
inc
jmp
adc
out
dec
xchg
and
sbb
ss
jno
pop
cmc
test
inc
or
dec
xchg
ret
inc
das
push
movsb
loopne
adc
test
or
xchg
and
adc
inc
sub
ljmp
das
sub
xchg
das
or
or
cs
mov
insb
adc
push
sub
xor
push
mov
loope
mov
pop
push
mov
stos
mov
test
das
test
xchg
and
pop
mov
das
inc
push
cmp
mov
sub
dec
ficoms
mov
xchg
cmp
ja
roll
jbe
test
sub
mov
das
sub
push
incb
jb
dec
xchg
and
aam
dec
popa
xchg
or
pop
dec
shrl
das
dec
or
inc
or
pop
das
sub
xor
sub
test
push
adc
stos
adc
add
push
push
mov
push
mov
xchg
das
icebp
add
push
mov
xchg
pop
push
movsl
dec
inc
mov
xchg
decl
jmp
and
aaa
and
inc
cwtl
dec
das
fsubs
imulb
inc
or
insl
test
popf
sub
das
les
and
push
shrb
push
movsb
shlb
dec
add
push
cwtl
inc
add
dec
das
adc
push
movsl
dec
das
xchg
and
or
add
mov
adc
adc
das
aam
push
sub
add
movsb
jo
mov
sub
adcl
test
push
mov
test
loop
sub
das
call
mov
mov
enter
add
pop
sub
mov
das
lods
es
xchg
ret
test
xchg
ret
bound
adc
cltd
mov
adc
mov
ja
mov
inc
aaa
mov
das
insl
xchg
and
das
xchg
ret
test
inc
test
dec
das
dec
mov
inc
movsl
dec
das
sbb
dec
loope
das
jno
dec
inc
fisubrl
push
movb
adc
dec
shrl
test
fdivs
aad
jecxz
adc
sbb
decl
test
dec
adc
add
sub
stos
adc
je
xchg
leave
popa
xchg
dec
stos
mov
addb
fadds
pop
or
xchg
adc
pushf
sub
mov
jns
or
enter
insb
jecxz
push
mov
sub
adc
inc
xor
add
inc
or
adc
or
mov
jne
mov
pusha
push
das
push
sub
bound
mov
push
clc
ljmp
movl
scas
adc
push
aaa
mov
das
div
pop
scas
pop
inc
movsl
das
xlat
lods
or
mov
and
out
adc
mov
das
gs
inc
cmpsl
repz
sub
and
mov
shl
push
mov
iret
xor
jmp
add
sub
mov
push
movsb
das
jns
xchg
ret
jno
xchg
sub
sub
dec
insb
mov
push
mov
outsb
or
mov
ljmp
rolb
adc
movsb
inc
mov
pop
pop
jo
add
pop
inc
inc
or
inc
pop
sbb
xor
scas
sub
sbb
adc
in
jle
push
setno
adc
dec
das
imul
popa
sub
pop
push
das
pop
icebp
add
adc
adc
das
xchg
and
and
das
movsl
dec
shll
or
add
das
and
xchg
subb
inc
or
hlt
das
and
add
xor
lldt
scas
mov
xchg
and
cwtl
sub
lods
dec
xchg
das
das
clc
dec
movsl
dec
das
loopne
sub
pop
faddl
inc
inc
mov
adc
das
inc
or
gs
pop
xchg
inc
mov
das
push
push
js
dec
das
dec
or
sub
cmp
test
inc
das
pop
xor
lds
imul
sub
push
das
stos
push
movsb
loopne
das
push
mov
lds
lods
push
push
mov
xchg
rorl
add
das
movsb
mov
mov
push
das
push
sub
push
movsb
das
sub
test
rorl
dec
mov
dec
das
clc
mov
and
cmp
adc
addb
nop
ret
mov
push
and
das
adc
das
xchg
and
das
push
movsb
jo
jne
movsb
pusha
scas
subb
jp
pushf
mov
push
das
pop
jo
mov
jnp
push
test
subl
or
sub
push
jae
xchg
ret
add
dec
das
movsb
ficoml
jo
xchg
sbb
and
dec
loope
cld
das
adc
sbb
or
push
mov
sub
fwait
xchg
mov
dec
lcall
push
pop
push
sub
jae
sub
xchg
lret
aam
lahf
cmp
test
das
mov
jl
nop
add
sub
das
rolb
push
jo
das
loope
and
dec
das
das
sub
push
sbb
scas
add
xchg
and
inc
sahf
push
adc
mov
fisttps
ret
das
sub
push
push
adc
fcoml
mov
stos
das
test
mov
add
das
mov
xchg
and
movsb
jo
das
inc
or
mov
sub
pop
inc
and
inc
or
sbb
lods
cld
sub
stos
dec
das
adc
test
mov
adcl
test
sub
movsl
dec
loope
mov
add
outsb
pop
add
sbb
notb
push
das
fmul
mov
sti
or
loopne
in
ret
or
leave
repz
mov
dec
or
inc
das
lds
imul
popl
or
mov
mov
insl
jmp
inc
adcb
das
xchg
and
adc
push
sub
push
xor
mov
or
inc
sub
enter
sub
shlb
inc
or
sbb
lock
cmp
push
das
mov
das
push
stos
lcall
and
dec
adc
adc
mov
adc
sub
data16
xorl
cmp
xor
dec
lods
dec
xchg
ret
and
sub
or
daa
push
sub
or
sahf
lock
mov
into
aaa
push
mov
sbb
sbb
adc
dec
xchg
ret
jge
outsb
stos
adc
das
or
adc
fsubr
pusha
cmp
mov
xchg
mov
das
jl
movsb
jo
xchg
das
jnp
dec
cwtl
mov
dec
xchg
ret
adc
or
sub
adc
jo,pt
push
das
fs
dec
push
sub
movsl
dec
loope
das
rorb
mov
cmp
jne
push
mov
add
lock
das
dec
inc
imul
xor
pop
movsl
das
fwait
call
das
subl
xchg
addb
loope
insb
sub
cmpsb
jo
adc
into
rolb
push
pop
push
call
add
call
subl
das
aas
mov
dec
addl
inc
jmp
inc
das
gs
push
push
inc
or
mov
mov
sub
in
mov
ficoms
dec
call
mov
das
push
adc
mov
lods
lret
das
pop
insl
mov
adc
faddl
push
das
sbb
scas
mov
inc
movsl
dec
loope
das
xchg
and
and
addb
sub
sbbb
dec
das
cmp
das
xor
sub
mov
pop
sub
adc
pop
add
sub
scas
das
sub
das
jns
push
into
cmp
or
fildl
addl
sub
pusha
xor
test
das
dec
fldl
dec
push
mov
sub
das
pop
sub
jge
dec
ljmp
jp
das
inc
or
out
jbe
dec
sarl
mov
mov
jle
call
dec
push
mov
pop
sub
xchg
das
cmc
pop
movsl
dec
and
stos
adc
lds
mov
and
nop
mov
fcoml
decb
sbbb
movaps
mov
xchg
fs
adc
cmpsb
push
sub
mov
sub
movsb
push
jo
mov
push
and
pop
movsb
mov
mov
cmovl
seto
pop
push
mov
addl
push
mov
mov
inc
or
inc
cmove
and
test
call
mov
les
in
xor
adc
add
push
cmp
sbb
andl
sub
inc
popa
mov
mov
sub
mov
inc
or
mov
xor
test
sahf
lcall
scas
inc
or
mov
sbb
jo
shrl
test
ffreep
pop
mov
pmulhw
loope
push
paddq
or
dec
bswap
mov
scas
stos
inc
dec
aaa
add
sbb
and
test
nop
and
push
jo
minps
loopne
xorps
push
mov
pop
wrmsr
cmp
pop
movsb
bswap
xlat
es
mov
push
push
sub
nop
popa
inc
cmpsl
mov
mov
call
xchg
popf
stos
inc
or
movsb
lret
xchg
subb
ja
pop
push
js
ljmp
test
adc
add
cmp
lods
push
mov
push
jb
xchg
cmpb
mov
cmp
mov
add
push
xchg
jl
outsb
inc
aad
orps
pop
sbb
jno
xor
sub
cwtl
pop
xchg
js
orb
push
mov
jnp
mov
not
cmp
je
movaps
dec
mov
idiv
push
sub
xchg
sbbl
xor
sti
mov
and
xchg
mov
add
pandn
xorl
cmove
cmovbe
jbe
pop
or
xor
push
or
or
pop
movsb
jo
movhps
ss
test
fcoml
bswap
dec
fwait
stos
push
sub
mov
test
jp
pop
movsb
jo
andnps
punpckhdq
rsqrtps
dec
test
sub
loope
rsm
push
sub
mov
pmullw
test
movsb
jo
imul
dec
sbb
push
push
push
inc
sub
xor
xchg
and
inc
jl
and
test
or
sbb
xlat
and
inc
or
dec
loope
test
mov
je
and
ret
push
test
cld
mov
pop
push
mov
fistpll
mov
push
cpuid
push
sub
cvtps2pd
sbb
jo
add
call
inc
or
and
ret
stos
push
sub
pop
sbb
sub
add
movsb
pusha
das
push
and
sbb
jnp
aam
pop
movb
and
adc
mov
push
ret
xor
pusha
dec
shrl
pop
jmp
pop
movsb
mov
xchg
addb
test
in
aam
andps
add
push
push
hlt
fs
setno
sbb
push
push
ret
cmovs
pusha
or
aas
or
pop
mov
notb
push
sub
adc
pop
ja
jl
adc
enter
stos
inc
setns
mov
inc
sbb
imul
mov
adc
dec
dec
add
dec
rcll
inc
or
pop
pop
cvtps2pd
or
cmp
add
pop
xlat
je
lods
mov
inc
sub
stos
inc
or
pusha
movaps
push
xchg
movsb
loopne
scas
fs
sub
inc
ret
push
bts
xor
or
scas
pop
movsb
btr
inc
sub
cvtps2pi
pop
jle
cmpsb
addl
inc
sbb
push
mov
push
rsqrtps
popa
push
enter
sub
or
les
inc
pop
lds
mov
stos
inc
bt
and
int3
test
add
cwtl
adc
repnz
push
inc
pop
leave
pop
mov
push
sub
adc
push
mov
pop
repnz
in
loopne
and
lret
jae
aam
or
inc
or
cmc
pop
das
scas
pop
movsb
nop
paddusw
cmp
imul
cmp
scas
pop
movsb
setne
or
dec
popa
jns,pn
scas
pop
js
gs
jns,pn
or
das
or
sahf
xchg
imul
das
push
xchg
dec
movsb
push
in
push
test
aad
js
and
mov
inc
or
movsl
pop
xchg
cmp
xchg
or
jns
das
adc
mov
push
minps
push
jo
and
inc
pop
test
and
outsb
das
push
sub
bnd
js
and
push
xor
add
mov
add
invd
out
jg
mov
nop
jb,pt
push
loope
push
and
mov
pinsrw
sbbl
mov
mov
mov
sub
mov
dec
popa
mov
loope
mov
push
dec
loope
mov
pop
imul
pop
mov
inc
imul
lock
and
sub
mov
mov
sub
in
and
inc
sub
out
mov
imul
inc
or
mov
out
stos
inc
or
movsb
imul
xchg
rorb
push
js
sub
jo
sub
mov
and
xlat
inc
sub
js
popf
pop
jo
add
push
sub
inc
or
andb
sub
pop
adc
and
mov
pop
mov
mov
xlat
pushf
fcoml
dec
setl
jb
mov
sbb
mov
cmove
jo
psubq
pushf
out
mov
sub
push
mov
or
enter
push
pop
pop
por
sarb
or
pop
mov
cvtps2pi
mov
ss
jge
mov
aad
mov
mov
aam
push
xor
mov
in
inc
sub
test
mov
in
jg
bound
and
add
inc
inc
pop
push
paddsb
pop
push
mov
sysenter
dec
sub
cmp
mov
mov
xor
test
push
psadbw
paddq
add
movhps
faddl
fs
dec
loope
mov
fcoml
unpcklps
xor
and
jnp
jle
jle
cmp
and
inc
aam
add
les
orb
pop
sub
jns
sbb
lock
inc
mov
dec
xor
push
cmp
test
sbb
xor
in
dec
mov
pop
movsb
prefetcht2
sub
xor
sbbb
dec
cs
rorb
test
lock
dec
mull
and
pushf
mov
push
mov
push
setae
and
daa
pop
mov
add
adc
inc
or
or
adc
inc
jnp
sub
xchg
test
mov
sub
test
or
adc
mov
popa
fldenv
mov
sub
sub
sbb
mov
sub
mov
pushf
xchg
push
subps
sahf
sub
mov
push
mov
and
aad
test
stc
aam
push
sub
add
mov
test
les
or
push
dec
inc
push
enter
cmpsb
and
push
flds
int3
lret
imul
lahf
push
sub
sub
sub
push
jge
stos
cmovnp
dec
fisubrs
test
mov
jo
aam
test
punpckldq
inc
sub
adc
push
sub
mov
mov
ja
sysexit
push
and
test
mov
movsb
jo
inc
or
push
lock
mov
hlt
adc
mov
push
dec
adc
pop
push
jns
mov
clc
sub
es
push
rdmsr
lods
push
ds
sbb
mov
adc
mov
loope
movd
out
xchg
push
push
shll
push
push
mov
cmp
or
adc
shll
or
xchg
int3
push
test
pop
sbb
xlat
cwtl
mov
fsts
into
jmp
push
sbb
cmp
je
sbbb
cmovb
and
xchg
cmovs
sub
push
sub
and
mov
dec
getsec
push
and
push
push
insb
xor
add
aam
test
ldmxcsr
sub
mov
sbb
loope
enter
stos
fwait
jae
or
out
add
stos
jnp
pop
jb
xchg
cmp
aad
sysexit
stos
out
cmp
dec
add
cmp
pavgb
jp
cmpsl
push
sbb
inc
add
ret
stos
push
sub
jae
imul
sbb
ss
sub
cmp
int3
cmp
add
enter
push
push
cmpsb
cmp
xor
loope
ja
mov
movsb
jae
fcoml
pop
stos
push
sub
xchg
das
xchg
pusha
rorb
and
pusha
push
loopne
loopne
ljmp
mov
int3
push
adc
pop
es
fcoms
je
jo
mov
js
enter
adc
or
inc
ret
arpl
mov
enter
andb
pop
movsb
scas
cmp
cs
or
mov
out
pop
jo
ret
test
or
pop
push
psubusb
add
bound
or
lods
ret
sbb
rclb
sub
mov
jae
jo
sarb
or
outsl
push
sbb
test
popa
pusha
add
dec
cwtl
addr16
sub
mov
sbbb
nop
std
daa
push
mov
sub
outsl
mov
in
fcomi
jecxz
pop
sbb
iret
repz
out
push
bound
dec
mov
outsb
daa
xchg
pop
mov
push
sub
and
outsb
xor
push
mov
jo
push
sub
mov
loope
cmovl
shrb
fs
xor
loopne
mov
pop
movsb
movaps
mov
in
setno
mov
dec
rorl
cltd
scas
push
ret
mov
push
sub
and
aam
setno
fcompl
icebp
mov
mov
dec
push
mov
test
xor
out
inc
aam
test
or
sbb
rcrl
mov
fwait
add
sbb
imul
out
pop
popf
add
push
xchg
mov
mov
rolb
inc
push
pop
test
or
iret
imul
nop
xchg
lcall
mov
loop
push
sub
or
imul
mov
test
adc
stos
push
sub
aaa
ds
sub
xchg
cmpl
ret
nop
lahf
in
sbb
dec
loope
out
out
jge
int
add
fiadds
test
xchg
pop
ret
adc
sub
test
in
mov
push
mov
into
sub
inc
or
xchg
nop
xchg
stos
aas
xor
inc
cvtps2pi
pop
cmpsl
cmp
add
mov
add
ret
ss
femms
aad
movswl
add
cmp
push
mov
shll
adc
imul
adc
pop
aad
arpl
punpcklbw
mov
and
add
or
or
push
movsb
jnp
popf
adc
aam
psubusb
adc
pop
ss
aas
push
and
movsl
aam
test
push
inc
push
pop
movsb
pusha
lret
sub
insl
cmpsl
pop
ud2
xlat
sbb
pop
adc
pop
push
ret
or
ret
and
outsb
push
shrb
adc
mov
and
push
inc
adc
xchg
inc
nop
pop
stc
add
cmp
push
js
or
test
push
sub
or
sbb
push
xor
mov
inc
cmp
sub
or
js
pushf
out
xchg
push
sbb
mov
dec
popf
mov
and
nop
ret
push
movsl
cmp
sbb
mov
popa
and
sub
fdivp
test
sets
insb
call
or
inc
sub
sbb
jle
rcll
sahf
add
cmp
pop
mov
and
dec
loope
or
movsb
jo
mov
cltd
sub
repnz
lods
xor
adc
or
mov
push
lret
dec
sahf
out
pop
popa
dec
dec
daa
push
ret
push
xchg
mov
fsts
sbb
in
xor
repz
lret
sbb
es
cmp
or
mov
in
push
js
mov
loope
inc
sub
add
pusha
ss
dec
xchg
test
mov
cmpsb
and
stos
push
sub
dec
shll
and
or
pop
or
hlt
outsb
mov
es
push
mov
mov
or
xchg
push
push
sub
cmovae
sub
and
xor
push
test
sub
cmp
ss
popa
icebp
test
dec
pusha
inc
push
push
push
mov
psubsb
or
inc
or
popf
cmovae
inc
syscall
xchg
sub
pusha
rorl
and
ret
jo
mov
xadd
lock
jbe
push
inc
test
fucom
cmpsb
push
sub
in
pop
add
mov
add
sbbl
add
push
mov
cmp
push
dec
cmp
mov
andb
in
loopne
xor
or
punpckhwd
mov
aam
sub
add
push
mov
or
dec
push
sub
setle
das
dec
sub
sbb
inc
in
lahf
add
and
scas
out
pop
cld
xchg
fs
lcall
xchg
subb
pop
rolb
xchg
test
in
aam
push
out
cltd
lcall
popf
inc
dec
xchg
inc
add
dec
fisttpll
out
pop
inc
outsb
mov
mov
sbbb
fadd
add
push
cmp
adc
les
arpl
pop
mov
out
popa
push
sub
inc
xor
inc
add
fwait
int
cltd
jl
push
sub
shlb
jg
sbb
or
testl
insb
jecxz
mov
int3
and
mov
inc
imul
xchg
std
pop
movsb
jo
aas
inc
movsb
jo
mov
test
inc
xchg
ret
out
out
mov
push
jg
push
inc
ret
mov
add
sbb
and
shrb
mov
ret
cld
adcb
sub
mov
stc
cs
dec
xor
xchg
ret
adc
inc
mov
add
cmp
or
or
lds
out
int
test
in
out
xchg
ret
push
mov
mov
adc
pop
mov
movsb
jo
push
cmpsl
inc
enter
sub
sar
xchg
push
add
out
fsubr
jne
test
or
fmull
iret
fisttps
dec
popa
sub
add
aad
mov
pop
pop
cs
mov
das
cmp
dec
das
jns
push
sub
loop
push
mov
push
and
dec
addb
loope
push
sub
and
in
adc
dec
das
add
cmp
push
mov
pop
add
jmp
cmp
pop
addl
and
mov
sbb
sub
test
mov
pop
dec
mov
popa
das
mov
cwtl
mov
lcall
test
repnz
movaps
jb
icebp
mov
imul
icebp
push
mov
rcrb
shll
xchg
cmpb
fimuls
adc
or
push
dec
add
mov
cmp
and
iret
adc
push
pop
aas
mov
inc
sub
push
mov
sub
adc
inc
sub
sbb
push
mov
test
mov
das
lret
add
subb
mov
push
jecxz
pusha
sub
call
punpckhdq
adc
roll
mov
adc
pop
das
xchg
ret
jo
stos
push
xchg
das
inc
inc
adc
push
inc
js
mov
loop
loopne
jo
xor
pop
mov
mov
adc
inc
sub
cmpsl
stos
inc
das
pushf
rorl
movsb
das
mov
mov
das
xchg
ret
push
hlt
dec
loope
push
icebp
sub
enter
aam
das
rcl
push
scas
inc
or
xor
inc
dec
minps
push
push
adc
push
mov
mov
sbb
inc
sub
cmp
push
mov
mov
mov
popa
dec
in
das
push
jo
adc
push
inc
push
sub
adc
mov
scas
pop
movsb
das
pop
hlt
add
and
inc
inc
das
mov
loope
imull
mov
push
xchg
movsb
pusha
adcb
or
jle
sub
inc
das
stos
push
sub
dec
pop
das
push
pop
imul
jbe
or
test
mov
test
das
push
sub
or
call
pusha
cmp
stos
inc
or
aam
inc
das
pop
movsb
mov
les
das
jbe
push
mov
rcrb
sbb
jne
sbb
inc
das
add
push
or
add
inc
push
sub
mov
es
repz
mov
daa
xchg
or
and
cmpb
pusha
or
mov
das
sbb
and
addl
add
xlat
xor
or
and
sbb
scas
dec
das
in
mov
mov
inc
imul
cmp
std
push
jg
test
add
in
xor
jmp
pop
outsl
fbld
xor
xchg
into
adc
inc
das
cltd
and
ds
addb
cmp
aas
pusha
nop
dec
push
adc
das
movsb
jo
scas
ja
add
das
and
pop
pusha
aad
test
adc
mov
shrl
adc
aam
inc
aam
test
ss
inc
or
stos
inc
or
or
pop
sub
sbb
test
in
xchg
or
mov
or
das
adc
mov
cld
rorl
test
or
mov
test
inc
scas
cwtl
inc
sbbb
das
push
test
stos
inc
or
xchg
das
aam
test
inc
mov
aaa
cmp
paddusw
add
sub
call
test
les
pop
call
test
aad
cmp
xchg
cmp
das
sub
loope
dec
mov
push
sbb
push
sub
jnp
add
and
mov
xor
mov
sub
sub
mov
jns
push
ret
push
and
and
add
push
orb
push
adc
sbb
loope
add
in
aam
das
pop
or
jo
mov
sbb
cmpsb
pop
movsb
das
test
and
dec
das
push
aam
xchg
subb
push
sbbb
mov
mov
inc
das
xor
push
das
leave
clc
dec
loope
mov
xchg
or
adc
push
sub
xchg
pop
aad
test
arpl
push
jo
das
cmp
das
cmp
test
cmp
and
movsb
jo
aam
or
test
into
dec
push
mov
scas
lea
ret
mov
sub
das
and
ret
push
mov
fildll
xor
mov
das
cmp
mov
call
inc
test
das
adc
rolb
test
push
mov
adc
and
test
xor
adc
and
cmpsl
sub
ret
push
or
out
xor
adc
adc
out
leave
int
push
repz
add
int3
and
mov
push
lods
lea
mov
or
and
push
add
mov
sbb
or
xlat
add
sbb
and
movsb
jo
int3
out
inc
ds
pop
out
mov
xchg
out
in
negb
push
mov
jo
inc
jge
jne
add
movsb
xor
sub
add
test
pop
movsb
lock
out
xor
out
movsb
and
push
clc
pop
adc
aad
push
push
add
pop
add
mov
shrb
out
dec
mov
out
xchg
ret
push
out
test
adc
push
mov
and
icebp
push
int
add
mov
js
in
sbb
out
sub
scas
push
sub
pop
movsb
loopne
mov
fstpt
mov
cltd
out
les
out
nop
out
int
test
xor
out
sub
mov
es
sbb
decb
sbb
mov
mov
nop
out
sub
add
push
mov
push
push
pop
shrb
xlat
adc
push
sub
pusha
jge
out
inc
or
adc
lcall
out
lret
ffree
sub
adc
jnp
fimuls
movsb
and
inc
sub
mov
pop
out
push
mov
loope
out
xor
mov
push
cmp
lea
xor
bound
push
sub
das
lcall
and
movsb
jo
and
push
js
out
outsl
and
xorl
aaa
int
mov
and
rcrl
push
mov
int3
and
mov
mov
add
mov
imul
add
sub
inc
out
and
bound
sub
loopne
inc
or
out
pop
movsb
pusha
mov
and
mov
in
push
int
mov
xor
int3
and
mov
lret
mov
inc
or
or
int
test
test
or
pop
adc
pop
xor
ret
out
push
sub
add
sub
mov
mov
out
mov
xor
ret
in
sahf
pop
push
xor
dec
loope
fstl
and
push
cmp
or
add
lds
movsb
inc
and
push
lahf
dec
pusha
pop
xchg
ret
popa
nop
mov
sbbb
push
lods
out
and
or
mov
add
out
inc
push
push
cmp
sbb
xor
test
sub
or
inc
out
sub
xor
mov
sub
shr
fldt
arpl
out
shrb
leave
push
ss
sbbb
push
out
adcb
mov
call
cwtl
jp
fbstp
mov
and
dec
inc
push
or
mov
aad
sub
jge
rol
test
call
out
push
xor
out
int
test
cmp
out
sub
mov
fwait
xor
push
pop
vmovmskps
xchg
ret
cmp
out
xchg
ret
pop
es
aam
out
push
pop
sub
cmp
out
push
cs
dec
shr
int3
sbb
sub
out
mov
nop
jle
adc
sub
pop
mov
push
push
inc
sbb
ljmp
cld
adc
push
sub
and
push
addb
int
xor
add
inc
pop
add
adc
adc
jb
adc
outsl
out
mov
add
and
popf
push
daa
pusha
out
inc
push
add
ja
in
or
push
ss
or
sbb
sub
push
xchg
add
out
push
push
imul
aam
out
insl
cli
add
iret
inc
incl
aam
incl
mov
jno
movl
scas
out
in
pop
fidivrs
jo
add
iret
jmp
mov
int
test
adc
out
xchg
ret
mov
out
test
pop
or
and
inc
or
out
or
add
xor
jle
pop
jbe
inc
or
jo
or
lcall
int
test
cmp
pop
and
adc
imul
jnp
xchg
lds
out
jne
inc
or
outsl
jno
inc
or
cmp
insb
and
mov
xor
adc
sub
out
xchg
ret
jp,pn
sub
bound
out
sbbb
inc
out
inc
or
add
sub
pop
movsb
out
and
add
pop
movsb
out
xchg
aaa
xor
sub
lcall
int3
and
fsubl
push
inc
or
and
mov
lcall
push
pop
adc
pusha
push
out
fs
out
pop
inc
mov
popa
mov
pop
orb
out
xor
pop
movsb
loopne
out
add
xchg
cmpb
sub
jo
xor
mov
out
xorb
jbe
xchg
ret
out
jo
mov
and
xor
out
mov
jp
or
push
call
xchg
or
dec
xor
cmp
inc
out
out
outsb
bound
sub
pop
and
pop
and
pop
or
and
sbb
nop
xchg
inc
jb
cld
add
and
mov
sbb
enter
lcall
dec
loope
enter
sub
adc
imull
xchg
jmp
std
xchg
je
fdivl
mov
mov
inc
mov
add
nop
jns
popf
js
mov
leave
clc
movsb
test
out
in
inc
roll
adc
xor
pushf
out
dec
jo
subb
push
imul
out
adc
sub
sub
call
addb
adc
xchg
mov
orb
jne
xor
int
fmul
and
imul
frstor
pop
lock
and
lret
or
mov
lret
lret
into
inc
or
sbb
pop
pop
mov
and
xchg
sub
loope
xchg
out
int3
sahf
inc
or
imul
mov
inc
or
xor
les
or
cltd
out
clc
testb
testb
repz
loopne
shr
pop
adc
loope
int
out
int
incb
mov
out
pop
sub
stos
inc
add
sub
out
xchg
sbbb
ds
and
out
mov
shrb
out
cmp
mov
shrl
arpl
pop
test
push
sub
push
inc
xor
push
mov
out
leave
pop
movsb
pusha
adc
scas
mov
imul
inc
pop
loopne
outsl
sbbb
lcall
pop
movsb
out
mov
mov
popf
push
sub
aad
xor
mov
and
add
ret
xor
out
mov
adc
lcall
sub
js
out
xchg
ret
push
out
adcb
inc
and
push
sub
shlb
push
mov
out
xlat
sub
jo
out
pop
xchg
jo
out
das
inc
test
movsb
pusha
ds
sub
adc
out
cwtl
fs
sub
out
mov
in
mov
arpl
sub
mov
add
stos
cwtl
inc
or
xchg
ret
pusha
mov
or
inc
cmp
shrl
les
cmp
ds
xchg
fstpt
push
jo
jne
jle
cwtl
inc
or
ljmp
pusha
fwait
adc
adc
push
aas
adc
xor
pop
movsb
mov
in
or
push
push
xchg
out
mov
out
mov
pop
xor
adc
loop
imul
les
fadds
imul
out
icebp
xor
adc
push
sub
add
call
xchg
sub
dec
inc
test
xor
xchg
sub
xchg
out
inc
or
and
test
sub
cld
dec
inc
mov
nop
pop
adc
adc
mov
cmpsl
sbbb
xor
adc
jo
ret
xchg
push
adc
andl
lock
dec
add
sub
push
sub
and
inc
or
and
out
mov
jbe
or
movsl
or
mov
xlat
sub
sbb
movsb
jo
out
sub
sbb
scas
bound
out
loopne
add
push
sbb
ja
or
or
add
inc
out
lock
xorb
and
sbb
sub
out
pop
sub
push
push
lcall
mov
adc
mov
cs
inc
or
add
push
add
mov
loopne
out
push
xchg
cmpsb
sub
adc
adc
ret
fcoml
xor
pusha
push
sub
or
adcl
inc
out
xor
out
lcall
js
rorb
out
int3
and
add
roll
and
dec
add
int3
and
push
cmp
sub
xor
nop
sbb
movsl
sub
lds
pusha
push
sub
and
test
inc
int3
out
cmp
add
and
daa
adc
shlb
or
mov
out
stos
pop
movsb
lock
and
popa
xor
out
dec
mov
out
pop
movsb
xor
sub
cld
and
adc
lods
cmp
shlb
adc
ret
out
int
test
add
pop
mov
sarl
out
cwtl
pusha
sbb
sarb
sub
test
dec
loope
out
ret
adc
xchg
out
das
mov
adc
sub
add
out
mov
push
pusha
push
out
lods
nop
es
push
sub
rorb
jbe
adc
xlat
adc
mov
sub
out
ljmp
jge
xchg
adcb
and
vcvttss2si
ljmp
out
inc
or
cltd
adc
jo
lcall
out
push
xor
sub
push
arpl
rclb
shr
cs
rol
inc
shrb
mov
out
add
lock
int3
and
push
out
mov
out
mov
popa
xor
pop
out
dec
shrl
sub
fisubrs
out
xor
add
mov
adc
push
xor
inc
dec
push
and
xor
sub
ret
and
shll
out
jno
add
mov
popa
or
and
pop
or
adc
aas
mov
push
pusha
sbb
jnp
add
arpl
push
int
add
inc
mov
dec
sub
xor
sbb
xor
add
inc
shr
mov
rorb
shrl
out
pop
in
adc
cmp
xor
lcall
int
test
sbbb
dec
sti
ds
scas
loop
dec
int3
push
repnz
sub
sbb
inc
inc
jne
out
mov
mov
out
or
push
sub
jo
xchg
ret
rorb
sub
mov
push
adc
out
rcl
xchg
ret
add
or
add
add
aam
mov
rcl
out
dec
loope
pop
lock
cmp
adc
xchg
adc
sub
test
inc
or
int
nop
je
or
lcall
push
out
adc
sbbb
shll
ffreep
mov
out
xchg
sbbb
or
xchg
ret
out
in
add
mov
rcr
mov
loope
and
out
nop
faddl
in
movsb
lock
jmp
pushf
out
out
imul
test
dec
mov
mov
and
jge
add
mov
pusha
adc
mov
addl
inc
int3
and
sbb
sub
mov
inc
or
int3
out
adc
lods
fisttpl
inc
or
loopne
push
sub
cmp
cs
inc
fnstsw
out
inc
loopne
orb
pop
movsb
pusha
mov
add
push
inc
mov
adc
out
js
add
add
mov
or
dec
add
out
lcall
add
aas
pusha
out
out
mov
rorl
mov
mov
cmp
in
xor
push
push
xchg
xchg
ret
mov
out
lcall
mov
add
dec
loope
and
push
adc
mov
xor
dec
roll
sub
push
adc
out
mov
cmp
pop
test
pop
adc
and
sub
out
lar
dec
out
shrl
out
xor
add
cmp
and
je
lods
fcoms
sub
cmpsb
or
daa
stos
pusha
out
inc
cld
add
rorl
and
mov
xchg
ret
mov
mov
push
xchg
out
xor
xchg
ret
push
sub
jle
and
or
adc
adc
or
aaa
shrb
xor
or
addr16
ret
out
mov
shlb
dec
rorl
mov
mov
mov
add
lock
mov
imul
std
test
out
xor
cmp
and
add
cwtl
inc
or
xor
out
sub
bound
out
mov
push
sub
sub
adc
push
inc
shr
lcall
and
leave
push
add
out
add
or
add
cwtl
inc
or
out
dec
adc
add
or
sbb
ss
lcall
jo
out
cmp
roll
fsts
and
test
int
test
sbb
mov
pop
movsb
pusha
mov
sbb
lods
mov
mov
sub
out
sub
pop
ret
mov
out
stos
inc
or
push
mov
dec
out
sahf
cmp
xorb
int3
and
movsb
jo
out
xor
out
xchg
ret
cmp
push
sub
loop
out
testb
movsb
mov
outsb
ret
stos
out
cs
mov
or
or
sub
lcall
and
and
in
pop
add
addb
sbb
movl
push
sbb
and
cs
sub
mov
das
push
and
pop
xor
das
adc
mov
sbb
push
sbb
add
jle
ja
sbb
das
sbb
mov
and
das
and
xor
std
mov
das
aas
lock
dec
das
adc
hlt
mov
and
das
mov
das
dec
adc
cwtl
ss
add
lcall
push
push
shlb
push
adc
das
xchg
xor
ret
inc
inc
inc
or
mov
shll
push
sbb
cmp
ja
jle
test
or
jle
add
loope
inc
imul
or
push
xchg
aas
je
cmp
dec
sti
and
inc
lahf
or
shrb
imul
xchg
and
into
addb
push
das
adc
es
adcb
dec
das
fdivs
ss
popw
mov
mov
xchg
das
and
xor
ret
cmpsb
das
sub
lea
mov
nop
das
outsb
stos
push
mov
adc
das
mov
add
jae
dec
sbb
xor
and
mov
xchg
das
sbb
add
das
push
mov
dec
shlb
roll
sub
push
xchg
push
add
cmpsb
adc
das
jno
cmpsl
arpl
xchg
movsl
mov
push
loop
inc
sbb
test
add
les
negl
adc
xchg
cmp
or
scas
addr16
xor
call
loope
inc
mov
jle
cld
mov
lea
fadds
sahf
xchg
jbe
scas
jo
sub
es
scas
call
scas
mov
dec
adc
in
popf
or
mov
sub
scas
mov
cmp
and
mov
pop
scas
lahf
mov
mov
cmp
lret
scas
dec
adc
pop
adc
pop
insb
rolb
adc
pop
inc
scas
add
mov
pop
dec
pop
sbb
je
mov
fwait
add
jg
add
inc
popa
das
sub
mov
aas
sbb
pop
rcll
cmp
push
mov
adc
cmp
icebp
jg
cs
xchg
lock
fildll
xchg
into
sub
push
call
mov
sbb
add
test
inc
sbb
mov
lahf
or
inc
loop
sub
and
outsb
lds
push
scas
xchg
cmp
scas
inc
shrl
sbb
push
inc
xchg
dec
sub
push
adc
adc
jecxz
and
out
adc
repnz
jle
inc
add
sub
loopne
sub
fsubrs
push
in
stos
adc
out
dec
push
sbb
xchg
sbb
add
mov
pop
jge
scas
and
jbe
nop
cmp
rolb
cmp
or
jge
mov
scas
and
test
add
loop
insb
dec
shrl
mov
mov
test
fdivrs
aaa
rorl
outsb
dec
push
scas
push
in
fwait
cltd
icebp
pop
test
cwtl
dec
push
adc
testb
dec
mov
mov
pop
scas
nop
sub
adc
push
sbb
loopne
notl
nop
sub
sub
xchg
add
jl
xchg
into
pop
add
and
push
xor
les
lock
js
loope
leave
es
test
xor
fisttps
shlb
scas
fs
cmp
scas
and
bound
shrb
jg
xchg
lldt
sbb
push
or
call
scas
lret
mov
scas
mov
jno
call
inc
in
xor
ds
ds
add
ss
add
add
mov
push
xchg
pop
fcoml
dec
add
mov
cld
aad
dec
inc
or
stos
dec
add
add
shll
mov
xchg
xor
inc
mov
mov
xchg
cmp
jnp
dec
pop
mov
pop
scas
je
adc
mov
inc
mov
and
stos
scas
std
adc
xor
scas
mov
mov
mov
push
scas
cltd
inc
scas
push
mov
scas
jge
xchg
jl
lods
fs
and
pop
es
cmpsl
cmp
or
lea
out
int3
in
pop
loop
scas
int3
repz
mov
sub
jnp
and
ja
adc
aam
scas
ffreep
and
mov
and
pop
ja
pusha
fcomps
adc
mov
es
sbb
scas
and
je
xor
ret
shrl
loopne
push
mov
inc
mov
outsl
ljmp
dec
ja
adc
push
push
mov
inc
in
xchg
xchg
fadd
and
ljmp
sub
sbb
enter
leave
or
inc
loope
sbb
sbb
fldl
or
sub
xor
out
adc
xor
scas
pusha
sbb
repz
repz
xorb
adc
sub
jecxz
xor
and
scas
inc
mov
nop
jo
or
xlat
and
adc
addr16
lods
test
or
mov
scas
insb
dec
les
lcall
andl
lods
scas
test
adc
add
xchg
cld
lret
pop
out
add
add
cmp
adc
inc
out
push
sarb
inc
cmp
scas
roll
push
pop
xchg
mov
push
add
dec
mov
cmp
cmp
mov
pusha
scas
push
mov
pusha
cwtl
push
scas
add
add
lock
nop
sub
pop
aas
fsubrl
lcall
adcl
test
cmpsb
int3
scas
and
xchg
pop
movsb
lret
test
scas
arpl
cmp
scas
adc
adc
scas
sbb
add
or
add
push
inc
add
scas
or
scas
imul
nop
sub
fcoms
push
scas
shlb
pop
add
jmp
stos
cltd
incl
adc
stc
sahf
ret
xor
lahf
call
lahf
enter
adc
add
ret
cwtl
adcl
cmp
stos
cs
or
xorl
inc
leave
test
add
repnz
popl
mov
loope
dec
mov
add
in
cmc
rcrb
shll
add
iret
cmc
inc
add
cmp
and
pop
push
add
and
iret
xchg
loope
inc
push
div
or
sti
inc
inc
and
sbb
iret
mov
sub
xchg
std
sub
cli
adc
push
mov
movsb
test
add
push
adc
movsl
jl
xor
or
inc
stos
mov
ret
or
mov
test
insb
test
push
stc
mov
add
xor
xchg
daa
fs
enter
pushf
add
imulb
xchg
add
sets
jo
aam
pop
pop
and
adcb
mov
lods
das
jmp
sub
sarb
jo
imul
add
adcb
push
mov
pop
call
outsl
and
xor
cmp
or
and
clc
inc
adc
push
cmp
adc
and
movsb
mov
jbe
sarb
jmp
fsub
call
adc
loope
cld
adc
pop
push
mov
call
nop
call
push
jne
in
into
in
adc
imul
lcall
pop
inc
mov
test
xorb
adc
imul
add
mov
sbb
mov
pusha
mov
int
push
lds
adc
add
lds
je
mov
enter
pop
mov
addr16
mov
and
mov
mov
and
pop
mov
pop
lds
shrb
add
jae
adc
adc
pop
outsb
add
pop
lds
js
test
add
push
lds
shrl
mov
inc
lds
sub
imull
mov
in
loop
push
lds
add
pop
mov
push
push
adc
or
add
sbb
add
fcmovnb
pop
jo
adc
mov
add
or
xchg
mov
lds
sbb
push
jbe
sub
mov
outsb
add
or
loope
jne
sub
mov
out
loopne
sub
popf
and
or
mov
add
aam
mov
add
js
iret
in
push
xor
push
xlat
mov
and
adc
sub
or
xor
cltd
lahf
xchg
push
enter
pop
mov
push
sarb
jb
push
cltd
push
enter
fcomps
dec
mov
sbb
inc
loope
sahf
push
add
sub
add
test
inc
add
add
hlt
inc
sub
push
bound
xlat
and
or
inc
pop
and
or
fildll
push
sub
dec
mov
jne
inc
push
cs
call
xchg
add
inc
loope
mov
push
push
push
das
mov
pop
je
push
push
push
mov
cmp
in
cmp
push
push
or
xchg
xlat
xor
xor
int
xor
cmp
jo
in
add
inc
sub
and
sbbl
jne
ficoml
xlat
push
arpl
bound
push
jo
std
adc
xlat
mov
popa
jno
dec
xlat
addl
xlat
push
or
and
or
xlat
pop
fsts
xlat
mov
loope
add
xlat
sub
xor
and
push
inc
xlat
test
add
cvttps2pi
nop
fsubs
adc
jmp
xlat
ljmp
loopne
fxch
push
out
insb
jb
bound
nop
inc
aad
ds
lods
inc
add
jbe
mov
je
cmp
inc
lea
sub
mov
mov
dec
and
and
and
stos
pop
mov
dec
add
and
xchg
cmp
add
out
daa
pop
and
in
add
cmp
cmp
test
mov
adc
pop
or
and
out
fimull
ja
sub
xor
mov
xchg
lock
pop
loop
or
frstor
jnp
out
mov
or
mov
adc
xorb
cmp
fsubr
push
std
stos
fwait
xchg
and
fst
dec
dec
jo
fucom
cmpsb
and
aaa
sub
mov
mov
and
xor
jg
fnsave
test
add
pop
ret
mov
mov
jle
popa
cmp
and
mov
push
in
pop
and
and
testb
mov
adc
mov
mov
call
add
pop
mov
lods
sub
dec
bound
mov
inc
or
inc
loope
push
hlt
xor
add
fidivrl
cmp
bndldx
sbb
push
call
mov
call
pop
add
bound
shlb
rorb
add
jge
or
cmpl
push
sub
and
or
and
adc
out
xor
pop
inc
xchg
jno
add
mov
pop
movsl
mov
repnz
add
dec
nop
je
mov
or
and
and
cmp
out
add
push
cs
xor
mov
cwtl
call
rcll
pop
pop
in
xchg
mov
jl
divl
pop
jno
xor
mov
lods
pushf
adc
sahf
jbe
enter
dec
xor
in
mov
cmp
rcll
nop
pusha
xchg
push
sbb
fmuls
xchg
nop
jo
popf
dec
lcall
int3
xor
and
dec
sbb
jo
or
mov
dec
pop
push
cmp
call
dec
xor
mov
ret
je
adc
js
sbb
push
adc
inc
cmp
dec
pusha
push
inc
dec
or
js
dec
inc
ret
xlat
imul
sbb
push
mov
push
in
mov
mov
cmp
es
jmp
add
aaa
orl
cmp
rcll
or
jp
imul
sbb
jecxz
inc
cmpb
ja
mov
jmp
xchg
pop
sbb
push
or
rcll
xchg
push
cmp
jmp
imul
ja
dec
sbb
loope
cmp
in
popf
lsl
adc
mov
dec
ja
adc
adc
cli
xchg
fistpl
les
rcll
ret
dec
xor
dec
dec
inc
xchg
pop
jmp
mov
dec
out
push
cmpsl
and
in
add
dec
je
adc
pop
loop
sbb
in
inc
xor
add
inc
jo
mov
popf
xchg
aaa
ljmp
sbb
rcll
pop
sbb
shl
dec
es
cmpsl
dec
call
dec
fcomp
xor
fbstp
sbb
je
call
shrl
cmp
adc
out
jp
and
je
loopne
sbb
outsb
call
stc
inc
je
or
adc
cmp
ljmp
dec
mov
nop
dec
mov
test
cmp
test
and
dec
xchg
pop
fimuls
or
add
or
dec
jecxz
push
push
cmpsl
and
imul
dec
imul
rcrl
or
cmpsl
dec
xchg
mov
cmp
and
push
or
aaa
inc
cmpsl
dec
test
sbb
imul
or
dec
test
push
and
jmp
adc
popf
xchg
inc
sbb
rcll
jecxz
and
in
out
aam
dec
dec
cwtl
sbb
jae
adc
jo
mov
imul
lret
jo
outsl
add
lods
popa
or
shrl
jns
or
sbb
sub
and
xor
or
dec
inc
ret
xor
sbb
pop
sub
push
and
xlat
aad
add
inc
dec
or
ret
enter
sbb
ret
mov
call
or
push
cmp
insb
dec
cmpsl
and
movsl
dec
dec
or
aam
test
repnz
dec
arpl
jno
add
repnz
add
pushf
dec
aaa
jo
pushf
xchg
ret
rcll
inc
ret
das
sub
sbb
fsubrl
lret
xor
fdivl
loopne
sbb
pop
call
sbb
adc
jae
outsb
dec
xor
mov
push
jecxz
or
fcompl
cmp
bound
pop
shrl
xor
mov
nop
jo
dec
shrl
mov
test
mov
cmp
outsl
mov
cwtl
out
mov
sbb
faddl
add
add
adc
rcll
add
fmull
repz
or
push
fs
test
cmp
push
dec
inc
cmp
add
lock
loope
push
lods
rolb
dec
dec
and
btc
neg
lret
mov
sub
pop
and
mov
pop
push
andb
adc
loopne
dec
push
insl
adc
iret
repz
faddl
in
hlt
cld
imul
push
mov
aas
xor
cmp
pushf
out
dec
pop
or
add
sub
or
jb
mov
inc
push
sbb
or
bsf
sub
cmp
xchg
push
mov
push
int3
mov
movsb
ret
scas
iret
aas
nop
mov
sub
inc
test
rsm
push
push
sbb
setne
or
js
out
stos
jmp
hlt
mov
je
dec
adc
add
or
adc
push
and
nop
jo
mov
lahf
pop
mov
add
mov
mov
cmc
mov
cmp
lods
ret
ljmp
cli
gs
mov
sbb
mov
cmp
sbb
clts
inc
lods
mov
or
bt
unpckhps
rclb
popa
stc
mov
sub
movsl
xchg
dec
shl
push
inc
test
and
cmpxchg
sbb
shlb
mov
sbb
in
inc
imul
in
ficoms
sbb
sub
xchg
dec
push
push
sbb
mov
insb
xchg
in
dec
inc
ret
xchg
sbb
into
out
jo
or
ja
push
fimull
mov
orb
stos
rclb
dec
leave
or
mov
xchg
xchg
cmp
out
push
xor
andl
movsb
punpckhwd
call
or
stos
out
nop
loopne
aam
pusha
stos
adc
rorb
loopne
xchg
rorb
jo
and
xchg
xadd
and
add
pop
gs
psubb
or
fists
sarl
rorb
sarb
and
push
xor
adc
xorl
sub
and
inc
pop
jle,pn
bound
add
hlt
and
pop
adc
jo
adc
or
sbb
mov
and
movsb
xlat
mov
punpcklwd
or
fimuls
jg
cli
and
imul
pop
cmp
and
int3
xchg
xchg
rclb
and
iret
xchg
rclb
mov
shlb
js
sbb
inc
mov
test
imul
xchg
cmpsl
mov
push
fimull
adc
pmuludq
fcoml
loopne
sbb
fsubrl
or
jle
or
push
call
or
sub
and
push
xorl
dec
inc
ret
cmovae
or
lret
cwtl
dec
pcmpgtw
xchg
or
rclb
subl
cpuid
mov
loopne
and
jmp
daa
push
dec
test
sub
and
push
shld
loope
lahf
mov
and
inc
bound
push
add
dec
inc
ret
add
or
or
cmove
lock
popf
rclb
push
pop
inc
imul
and
sub
bswap
cmpb
aas
test
stos
mov
mov
shlb
xchg
adcb
push
and
mov
aas
dec
aas
sahf
imull
jg
or
push
test
out
je
fs
jne
ds
aas
adc
loope
stos
sbb
jns
int3
loopne
aas
sbb
repnz
ja
jbe
xor
mov
nop
pop
push
js
mov
mov
push
aas
mov
mov
iret
repz
cld
push
add
or
adc
and
add
push
lahf
mull
push
or
push
and
aas
dec
add
add
xor
aam
les
adc
adc
cmp
pushf
mov
dec
add
mov
and
in
sbb
dec
dec
scas
adc
adc
scas
adc
test
push
dec
ret
insl
mov
and
mov
inc
ret
push
mov
mov
nop
inc
jo
and
insb
fsts
int
loope
add
jo
inc
xchg
int
cs
ret
int
xchg
scas
push
push
stos
push
call
push
ret
sub
bound
jl
out
dec
inc
inc
sub
adc
mov
in
inc
jmp
add
push
adc
arpl
xchg
test
pushf
arpl
mov
leave
xor
and
test
mov
imulb
push
rcrl
and
mulb
push
adc
sub
arpl
adc
cmp
or
arpl
frstor
scas
nop
or
xor
nop
pop
or
adc
pop
xor
lret
sub
xor
insb
cs
sub
cmp
loopne
nop
test
in
inc
adc
ljmp
call
repz
sahf
cmpsl
and
loop
loopne
adc
lret
mov
fcoml
call
and
and
adc
adc
and
sbb
lret
push
xchg
mov
xchg
cmpsl
bound
or
adc
lahf
dec
xor
nop
and
scas
sbb
out
movsl
cwtl
sbb
pop
outsl
mov
or
stos
pop
test
mov
xchg
lds
insb
fldcw
or
cld
loope
xchg
lods
push
cmp
arpl
push
daa
and
cmp
ljmp
xor
arpl
adc
jmp
and
arpl
and
arpl
push
arpl
add
pop
and
or
imul
adc
cli
movsb
in
push
fisubs
cmp
or
int3
inc
add
lods
and
repz
lock
pop
int3
inc
pushf
nop
arpl
loope
adc
adcb
test
dec
arpl
popf
arpl
push
pushf
nop
arpl
je
adc
test
jne
xor
adc
call
jno
arpl
arpl
pop
pushf
nop
arpl
dec
arpl
and
xor
dec
xchg
pop
pop
inc
call
lds
dec
arpl
xlat
pop
pop
pop
mov
arpl
pop
fsubl
or
lods
bound
arpl
dec
cmp
daa
das
sub
adc
xor
or
or
pop
cmpxchg
adc
adc
adc
add
rcrl
outsb
loop
add
scas
sub
or
xor
push
inc
dec
js
mov
jne
and
pusha
popa
fstpl
add
push
cltd
mov
xor
rolb
xchg
add
dec
add
pop
lea
xchg
inc
mov
sub
cltd
or
add
loope
adcl
cmp
or
fisttpl
xor
push
or
nop
xchg
sbb
cmpsl
mov
dec
adc
push
add
xchg
jns
mov
jne
lret
sbb
inc
ret
adc
xchg
pop
test
or
test
pushf
ja
cmc
stos
iret
cmpb
and
add
mov
test
out
xchg
or
or
inc
add
lcall
and
xchg
cmp
add
in
add
popa
dec
push
xchg
xchg
adc
test
inc
outsl
cmp
inc
test
xchg
add
ja
test
and
pop
xchg
pop
add
sub
or
and
xchg
xchg
sbb
adc
nop
sbb
xchg
dec
repnz
jae
or
or
jns
repz
adc
push
repnz
and
adcl
mov
add
and
add
or
sbb
inc
dec
xchg
roll
pop
je
and
or
in
jbe
and
push
add
fdivp
and
and
gs
sbb
sub
gs
xor
inc
dec
mov
aaa
adc
push
xorb
adc
ret
movsb
inc
loopne
adc
movsb
or
dec
adc
gs
cmp
jns
xor
or
dec
mov
or
pop
mov
adcb
test
pop
inc
dec
mov
inc
ret
add
sbb
adcb
sub
andb
add
and
lcall
xor
jo
push
xchg
or
movsl
push
test
aaa
add
gs
ret
or
cmp
sbb
inc
add
add
sbb
adc
adc
lods
xlat
pop
sub
add
inc
mulb
orl
or
and
pop
jae
add
pop
lahf
adcb
mov
mov
mov
add
pop
test
ret
pop
mov
jbe
rcrb
and
or
mov
gs
fstl
gs
push
push
mov
cmpsl
fimuls
or
in
je
add
jns
loope
bound
call
and
jbe
aam
or
inc
jle
add
test
pop
gs
cmp
popa
cltd
pop
das
adc
sub
ret
and
or
inc
mov
loopne
addb
and
shlb
add
lods
adc
adc
adc
lea
adc
jl
inc
dec
enter
fdivrl
push
inc
inc
cld
ret
push
dec
fimuls
or
push
cmp
xchg
pop
or
arpl
or
nop
loopne
inc
cmp
pop
mov
lock
or
nop
mov
andb
test
popa
jo
gs
dec
loope
out
add
ficompl
and
push
call
inc
ja
and
stos
mov
sub
in
dec
jae
sub
mov
sub
dec
xchg
addb
mull
js
rorb
add
or
push
ror
out
sub
inc
leave
mov
sbb
fcomps
sbb
test
cmp
imul
imul
xchg
sub
jne
push
adc
pushf
and
in
jp
mov
leave
mov
lods
or
mov
sbb
inc
jmp
or
or
inc
mov
pop
loope
mov
rol
or
mov
mov
or
dec
pop
in
jo
push
adc
les
daa
mov
dec
mov
fsubl
arpl
adc
enter
or
push
and
add
int3
les
pop
and
loope
adc
cmp
test
push
jg
push
jb
gs
scas
icebp
cmp
jae
andb
cmpl
push
mov
pop
push
inc
add
xor
adc
pusha
inc
jb
pushl
call
mov
lcall
sarb
push
shll
ret
add
xor
inc
dec
int
xor
sub
inc
pop
adc
icebp
xor
mov
dec
mov
loope
dec
fcmovnb
sub
sbb
je
push
cmp
cmp
daa
les
adc
and
cmp
push
mov
jnp
sti
inc
ret
pusha
adc
rcll
dec
sbb
adc
dec
lcall
inc
ret
ds
inc
orb
bound
cmpsb
dec
pop
imul
fwait
pop
dec
or
push
and
lcall
dec
jo
mov
and
orb
push
push
and
hlt
dec
aad
dec
mov
xchg
xor
adc
dec
inc
sbbb
dec
xor
dec
dec
mov
mov
aaa
add
cmp
xor
adc
dec
push
and
push
test
fs
cmpb
dec
xor
or
sub
arpl
scas
cwtl
add
adc
and
lods
add
dec
pop
mov
nop
xor
cmp
inc
inc
adcb
dec
cmp
inc
lods
adcl
or
lods
mov
fwait
mov
xor
mov
xchg
mov
lock
xchg
test
push
nop
jo
dec
hlt
inc
ret
cmp
inc
cmp
ja
cmp
xchg
bound
mov
or
roll
lods
movhps
and
imul
dec
xlat
add
cmp
aas
lret
mov
push
and
mov
loopne
test
aad
test
lret
xchg
nop
mov
cmp
std
aad
adc
cmp
aaa
sub
or
and
mov
mov
push
sub
mov
call
andl
push
sub
mov
adc
mov
mov
orb
mov
and
sbb
sbb
test
or
jge
sarl
shrb
mov
jo
or
les
dec
mov
lock
mov
clc
mov
and
jl
sub
iret
in
ficoml
xor
pusha
and
test
mov
mov
cmpsb
sub
lea
sbb
shr
js
adc
mov
mov
sub
cmpb
loope
mov
or
ret
dec
pop
or
xor
les
and
int
push
and
outsb
adc
cltd
fs
mov
into
push
popa
adc
mov
mov
and
add
push
inc
ret
mov
mov
add
push
adc
sbb
mov
xor
add
push
and
scas
sbb
push
mov
push
nop
mov
push
nop
jo
mov
mov
mov
sahf
test
adc
mov
and
pusha
ss
xor
mov
push
and
mov
add
mov
sbb
sbb
popa
pop
mov
xor
push
inc
cmpsb
xor
push
mov
mov
or
es
mov
lock
mov
push
nop
mov
cmpsl
daa
imul
adc
add
mov
shrb
xchg
jp
cs
pusha
aas
or
mov
notb
pusha
insb
and
adc
jmp
cmpsb
sahf
int
or
mov
pusha
in
sbb
nop
xor
mov
mull
or
inc
mov
mov
lea
and
mov
nop
jo
adc
sbb
add
xor
push
pop
xor
fcomi
popa
xor
pop
mov
mov
inc
ret
add
into
rorb
pushf
loope
or
mov
and
and
dec
sbb
sbb
rorb
dec
loopne
inc
orb
popl
cmpsb
add
ja
mov
sbb
in
call
or
add
xchg
jne
and
sbb
add
mov
jb
hlt
addb
cmp
lods
pushf
dec
shrl
loope
lods
daa
out
ja
sbb
sub
pop
sub
push
and
mov
inc
add
add
mov
jmp
sub
pop
sbb
push
and
test
lahf
pop
sub
dec
and
sub
fmull
outsb
bound
inc
stc
add
sbb
bound
in
xchg
dec
jle
or
or
inc
ret
or
inc
int
and
inc
push
nop
mov
pop
ret
orb
pop
xchg
shll
sarl
and
popa
dec
sbb
inc
inc
ret
nop
pusha
xchg
push
adc
push
adc
mov
dec
sbb
xchg
in
mov
popa
xor
ret
jmp
mov
push
pop
les
cmpsl
mov
sub
sbb
in
dec
sahf
inc
pop
dec
and
dec
push
push
xor
mov
add
loope
sbb
dec
and
nop
loopne
xor
push
lods
push
outsb
push
and
xchg
sub
xor
adc
jo
ret
adc
inc
gs
sbb
stos
popl
icebp
sub
mov
sub
ficompl
xchg
inc
inc
ret
pusha
adc
cmp
mov
xor
adc
cmp
aaa
adc
pop
mov
or
shrb
ret
mov
sub
mov
and
and
sub
or
es
sbb
dec
pop
ret
pop
or
call
sub
nop
mov
sbb
popl
loop
lods
mov
orb
sbb
aaa
push
jecxz
clc
imul
add
add
mov
lock
repz
pop
loopne
push
add
or
shrb
insb
pushl
add
imul
and
add
test
mov
in
push
fcmovnbe
sub
sub
orb
push
nop
jo
clc
test
nop
jo
dec
addb
jo
mov
mov
or
orb
add
jo
mov
leave
lahf
push
arpl
test
xchg
arpl
mov
dec
das
jge
bound
shr
adc
insb
test
inc
push
fwait
bound
dec
cmp
lea
mov
arpl
popa
sbb
das
lea
inc
inc
ret
xor
cmpsl
cmp
xor
aad
orb
jb
out
pop
push
movsl
orb
int3
inc
inc
inc
ret
sub
cmp
pusha
cmp
fdivr
dec
inc
jge
xorl
push
orb
push
int
mov
push
nop
jo
pop
cmp
pusha
insb
stos
cmp
mov
and
pop
or
addb
push
into
inc
mov
push
nop
jo
mov
stos
xchg
mov
pop
xorl
inc
ret
das
push
stos
in
xchg
cmp
and
sbb
and
inc
addb
mov
and
xchg
mov
mov
sbb
add
lea
or
sub
mov
add
loope
cs
mov
adc
decb
adc
sub
imul
sub
nop
push
stc
std
mov
jne
dec
xor
adc
fmull
push
sub
or
xchg
or
ret
sbb
inc
ret
fnsave
sbb
sbb
pop
test
adc
or
inc
inc
ret
adc
shrl
adc
or
mov
outsl
inc
inc
mov
loop
or
push
call
push
add
addr16
xor
adc
mov
jns
jae
unpcklps
in
mov
pushf
in
out
pusha
fdivrl
cmp
sub
push
and
adc
imul
xlat
pop
ret
gs
or
daa
fbstp
aad
cmc
xlat
stos
adc
mov
js
shlb
sbb
test
dec
cmpsl
pushf
mov
rclb
sub
mov
or
addr16
test
popa
or
push
movsl
addr16
insl
mov
mov
sub
sbb
push
cmp
inc
notl
adc
out
addr16
js
or
xor
push
sub
subl
sub
adc
or
addr16
nop
pusha
movzwl
mov
inc
sub
sbb
dec
jo
movsl
ficompl
aaa
mov
sub
or
push
or
adc
sub
fsubrp
push
nop
addr16
xor
movsl
and
dec
mov
add
sub
addr16
nop
pusha
das
call
jbe
addr16
mov
sub
dec
or
stos
push
adc
add
nop
jo
or
and
scas
push
addr16
mov
mov
inc
imul
cmpl
cld
inc
ret
mov
addr16
aaa
stos
adc
addr16
xchg
addb
mov
sub
sub
or
mov
sbbb
or
int3
add
add
xor
outsl
adc
mov
stos
mov
sub
add
sub
roll
ret
sbb
mov
leave
push
outsl
add
pop
ret
outsl
xor
lea
push
inc
sub
pop
xchg
inc
movsl
and
fsubrs
xor
fs
push
outsl
push
or
dec
jo
movsl
and
xor
inc
and
mov
outsl
gs
dec
inc
outsb
push
add
sbb
xchg
and
sub
and
mov
cmp
xchg
addb
add
test
jmp
fwait
scas
sub
inc
outsl
dec
inc
ret
cld
outsl
and
test
push
add
incb
mov
scas
adc
orb
movsb
ret
or
lock
cmpsl
dec
inc
outsl
bound
adc
addb
addb
pop
dec
rcrb
pop
and
and
sub
outsl
aas
loop
loope
adc
xor
or
scas
movsl
outsl
sub
adc
addb
dec
xchg
outsl
cmp
add
outsb
sbb
in
inc
sub
xchg
addb
lock
mov
adc
sbb
sahf
adc
add
jne
inc
sub
out
sub
outsl
or
or
sbb
add
and
outsb
cmp
and
or
cmp
outsl
into
dec
jae
dec
inc
ret
and
xchg
addb
sbb
outsl
cmp
scas
jbe
mov
outsl
cli
mov
mov
lds
std
xchg
jmp
call
fstl
dec
movsl
and
pop
outsl
pop
sbb
shlb
mov
inc
pop
lea
push
add
test
xchg
sub
call
inc
xchg
outsl
jmp
dec
inc
ret
add
mov
or
js
or
add
inc
ret
inc
sub
mov
outsl
addb
movsb
xchg
outsl
data16
outsb
mov
mov
jge
int3
inc
and
xchg
popa
jg
adc
adc
into
out
dec
push
or
dec
ljmp
mov
ret
adc
test
dec
xchg
adc
mov
push
or
or
sub
xor
add
dec
je
nop
aas
add
hlt
popa
je
ret
xchg
subb
pop
imul
xchg
addb
mov
movsl
mov
adc
mov
or
mov
push
nop
loopne
outsl
cmp
nop
cmpsl
sub
adc
add
addb
xor
ret
xchg
outsl
mov
inc
outsl
scas
popa
push
or
outsl
adc
sub
add
dec
jo
sub
js
push
sub
mov
dec
outsl
and
enter
hlt
pop
notl
stos
das
mov
mov
daa
dec
mov
add
out
clc
out
push
fs
sbb
dec
add
push
fs
mov
loope
mov
jmp
mov
xchg
das
cmp
loope
sbb
xor
or
and
add
or
lock
push
lea
mov
scas
cmp
scas
jne
adcb
push
nop
loopne
sti
ret
mov
lods
dec
inc
scas
aas
mov
subb
jae
sti
adc
mov
dec
inc
ret
dec
pushf
addb
adc
aad
adc
out
nop
loopne
scas
push
and
mov
fsubrl
scas
pop
cmp
or
dec
jo
mov
adc
scas
nop
loopne
jne
iret
add
popf
addb
aaa
ficompl
and
loopne
movaps
push
cmpsl
scas
fsts
addb
inc
ret
or
pop
ds
ficompl
popf
addb
jne
popa
sbb
test
xor
jne
adc
nop
jo
and
scas
xchg
into
adc
dec
scas
repz
jno
scas
cmp
inc
subb
scas
xorb
inc
add
cwtl
push
cmovae
inc
cs
addb
mov
scas
jne
adc
mov
pushf
addb
scas
sub
push
mov
push
test
mov
and
mov
sti
adc
fcoml
scas
adc
addb
and
add
push
inc
fsub
cmp
add
add
cmpb
popa
mov
test
push
cmpsl
and
adc
inc
scas
sbb
stos
cmp
add
sub
test
pusha
dec
or
loopne
add
and
dec
scas
aad
dec
mov
or
hlt
lret
test
scas
lods
push
nop
mov
scas
aam
dec
pop
ss
sub
sbb
push
shrb
push
scas
insb
je
jmp
shl
xchg
sub
in
sub
scas
mov
loopne
scas
adc
or
ljmp
scas
xor
cmpsl
and
inc
scas
adc
scas
dec
cmp
sbb
scas
int3
int3
push
inc
and
inc
sub
mov
cvtpi2ps
outsl
jp
or
std
and
inc
mov
andb
inc
ret
pop
nop
adc
aaa
int
test
sbb
lcall
adc
or
mov
data16
adc
xchg
into
addb
adc
mov
and
jmp
xor
out
sbbb
push
sbb
or
jne
jg
adc
in
add
push
adc
add
mov
push
int3
jne
add
adc
xor
adc
jmp
and
add
jne
or
out
dec
jne
data16
sub
and
les
mov
dec
xor
mov
jne
pop
xor
adc
ret
sub
sbb
jne
sub
adc
add
or
pop
je
cwtl
add
mov
cli
sahf
push
push
int
jne
shlb
adc
sarb
inc
jmp
and
lcall
sbb
pop
jne
push
int3
addb
jne
mov
loope
jne
loope
sbb
js
mov
jne
add
pop
and
push
cwtl
jne
dec
pop
dec
add
shrb
jne
add
push
and
sbb
or
out
cmc
bound
mov
jne
and
mov
call
or
jp
mov
rol
clc
shrb
in
jne
test
push
sub
inc
ret
jne
sub
mov
data16
je
enter
adc
sub
mov
dec
jne
push
and
jmp
jne
addb
loope
test
jne
and
dec
xchg
jns
pop
push
adc
push
ja
or
mov
cmp
iret
pusha
setp
cmp
xor
adc
bnd
nop
jo
jne
enter
jne
pushf
mov
shrb
addb
iret
jne
dec
adc
sub
das
shll
sar
sub
cmpsb
out
inc
mov
sarl
inc
arpl
jge
mov
push
cmp
in
shlb
std
icebp
xchg
int3
addb
in
dec
mov
jne
adc
test
test
rcrl
loope
add
nop
nop
jo
mov
adc
pop
jne
cmp
and
xchg
jo
and
stos
pop
nop
lock
jne
push
and
cld
sub
insb
push
and
push
jne
or
mov
lahf
je
js
sbb
and
int
mov
inc
ret
dec
fidivs
dec
test
push
and
adc
faddl
jbe
and
loope
fs
and
movsb
sbb
xor
lock
inc
inc
dec
pop
lret
popa
add
popa
push
xor
pusha
imul
sub
or
and
popa
dec
dec
stos
outsb
jecxz
sbb
subb
outsb
inc
andb
sub
sbbb
sub
dec
lock
sub
sub
outsb
inc
iret
shrl
mov
cmp
adc
rorb
cmp
mov
sti
pop
inc
mov
adc
out
sub
mov
sub
inc
test
inc
sbb
adc
popa
inc
dec
xchg
pop
push
jo
iret
and
loope
push
push
stos
in
dec
cmpl
push
push
and
adc
sbb
jo
push
inc
iret
add
or
pop
cmp
iret
outsb
inc
ret
iret
faddl
iret
and
je
and
ljmp
jo
iret
into
mov
stos
pop
nop
iret
lahf
push
mov
lods
fwait
addb
jo
inc
ret
into
mov
dec
inc
mov
inc
iret
fstpt
and
mov
jl
sub
add
pop
inc
fsubs
sahf
push
sub
addb
addl
pop
enter
adc
or
adc
adc
push
and
lods
cwtl
test
mov
popf
xorb
pop
nop
xor
iret
je
adc
dec
xor
push
nop
mov
push
pop
jg
adc
adc
pop
iret
std
add
and
arpl
loopne
push
or
jle
cmp
mov
pop
nop
jo
iret
je
adc
cmp
push
and
push
cmp
jmp
and
sub
push
mov
adc
sub
addl
add
jo
sbb
mov
mov
loop
pusha
test
push
pop
dec
les
adc
iret
sub
and
scas
fmulp
not
aas
or
iret
dec
out
mov
add
push
xlat
stos
rcrb
loopne
and
outsb
inc
sbbb
pop
frstor
sbb
sbb
sub
sub
cmp
punpckldq
iret
xor
and
add
add
out
jns
mov
outsb
inc
ret
inc
ret
mov
rorl
pop
pop
nop
jo
pop
sub
or
mov
loope
cmp
ljmp
data16
sbb
adc
test
iret
mov
iret
jge
std
loopne
and
jae
iret
sub
xchg
mov
iret
xor
mov
testl
sub
je
or
jg
loop
push
and
mov
sbb
add
push
sbb
inc
add
adc
iret
test
iret
xor
or
mov
mov
adc
out
lret
mov
xchg
xchg
stc
sbbb
dec
xor
mov
add
push
mov
dec
and
mov
mov
and
jnp
adc
adc
test
out
dec
dec
adc
fbstp
outsb
push
les
or
mov
jmp
jno
push
fldl
jno
add
mov
insl
jo
loop
push
xchg
mov
jno
sub
add
pushf
push
push
mov
jne
adc
jo
adc
call
inc
stos
or
adc
jne
lret
sbb
push
or
rcrb
dec
jge
dec
lret
adc
push
and
ret
or
mov
adc
test
mov
jo
adc
mov
insb
pop
lcall
inc
adcb
clc
nop
jo
es
inc
adc
mov
int
dec
mov
popa
rol
inc
pop
push
fcomps
sub
lods
cmpsb
push
idiv
add
inc
dec
cmp
lret
idivl
enter
add
fs
xchg
xchg
or
imul
sbb
pop
mov
mov
sub
adcb
out
push
loopne
adc
cmc
dec
jo
sbbb
stos
ja
push
inc
pop
es
ret
mov
jo
pop
adc
or
xor
iret
test
sbb
sbb
push
pop
inc
icebp
jmp
fisubrs
inc
adcb
mov
pop
cmp
and
add
sub
and
or
pop
sub
jb
aam
push
add
adc
ss
inc
sbb
xor
call
and
push
insl
add
cmpb
pop
aaa
sbb
add
sahf
pushf
fdivrs
pop
rclb
adc
call
adc
loope
adc
pop
fsubl
loope
add
cmp
adc
pop
push
pop
xchg
test
enter
pop
add
movsl
adcb
ret
adc
sub
and
jge
test
adc
add
mov
ret
jle
mov
les
mov
test
and
cmp
js
dec
adc
adc
cli
pop
dec
xor
outsl
dec
lock
inc
pop
mov
pop
into
sbb
sub
sub
dec
jns
int3
push
lret
sbb
adc
pushl
inc
sbbb
and
sub
add
jmp
fadd
insb
push
dec
outsb
out
push
and
jbe
jne
cmp
notl
jo
xor
and
mov
push
aas
test
and
pop
nop
pop
loope
add
faddl
mov
and
mov
or
inc
ret
inc
dec
xor
insb
jbe
adc
dec
pop
mov
fstl
pop
jo
push
mov
adc
pop
inc
dec
jo
add
adc
inc
inc
scas
inc
pop
loope
dec
mov
dec
mov
sbbb
pop
push
or
sbb
xor
pop
inc
pop
sbb
add
mov
and
inc
inc
push
addb
enter
inc
addr16
aaa
mov
addr16
push
je
push
fxsave
out
jge
mov
addb
xchg
sub
fwait
pop
dec
stos
inc
xchg
push
out
test
and
mov
pop
push
or
xchg
or
nop
push
xchg
push
adc
sub
stos
inc
mov
xchg
cli
stos
inc
or
outsb
mov
stos
or
adc
xor
adc
push
and
push
xor
test
in
and
ret
and
adc
inc
mov
sub
bound
test
sbbb
inc
insb
mov
push
fs
pushf
mov
imul
adc
and
push
pop
xchg
and
mov
sbb
mov
adc
sub
mov
nop
jo
outsl
pop
push
or
outsb
mov
ja
add
xchg
scas
addb
aam
addb
nop
jo
add
inc
xchg
and
xchg
inc
ret
push
add
push
cmp
dec
inc
add
fadds
ja
inc
xlat
andb
xchg
and
or
add
mov
call
in
jge
add
pop
test
inc
ret
add
outsb
push
inc
loop
cwtl
and
xchg
popf
pusha
adc
sub
inc
add
push
or
imul
dec
arpl
cwtl
add
add
add
stc
pop
add
push
popf
push
add
or
cmp
add
mov
pop
testl
inc
lcall
cmp
movsl
mov
jl
pop
imul
add
inc
add
addb
sub
adc
outsb
jmp
nop
jo
stos
or
outsb
mov
jo
add
add
add
add
pop
xchg
and
add
fldl
push
xchg
jmp
roll
add
add
xchg
and
or
les
nop
sbb
ja
or
js
shrb
add
nop
aaa
movsl
aas
nop
or
je
or
arpl
push
call
pop
ljmp
es
xchg
sbb
adc
xchg
lock
cmp
sbb
jmp
inc
pop
and
dec
ret
add
xor
pop
out
dec
nop
jo
pop
rorb
xor
adc
ja
or
pop
sbb
or
add
xchg
mov
mov
xor
sbbb
les
pop
nop
test
test
adc
and
int3
pop
adc
mov
xor
xor
pop
aad
mov
pop
shll
rcrl
xchg
sub
orb
mov
jo
jno
pop
outsl
and
mov
pop
inc
push
aam
dec
in
stos
dec
nop
mov
ret
pop
xchg
fwait
cmp
es
pop
lahf
and
xor
rcrl
cmp
and
pop
pop
out
mov
push
add
sub
cld
xor
jl
loopne
xchg
and
cmp
pop
inc
ret
lock
movsb
es
push
es
xchg
and
pusha
bound
inc
lods
hlt
div
lret
add
movsl
mov
pop
xchg
and
cmpsb
cmp
adc
and
xchg
and
pop
lcall
rolb
out
in
xor
adc
insl
test
adc
adc
push
push
or
add
scas
push
sbb
mov
ja
push
cmp
push
dec
cmp
add
add
loopne
mov
mov
push
rcll
xor
cmp
loopne
ret
test
aad
lods
mov
jg
sbb
mov
ret
xor
mov
call
rcll
out
cmpsl
and
or
fsubs
sbb
and
jne
fldt
pop
pop
xor
popf
xor
sub
jo
sbb
mov
movsb
add
xor
dec
adc
add
faddp
jl
test
adc
test
xchg
push
xchg
adc
add
mov
mov
or
add
inc
add
imul
and
fildll
cmp
bsf
and
and
test
iret
cmp
push
push
inc
adc
sub
test
dec
xor
xchg
out
push
adc
subb
js
push
sub
out
negb
or
sub
and
push
aad
and
jo
movsl
dec
addl
add
xchg
sahf
aad
and
lods
lods
mov
xchg
ror
lahf
adc
nop
xlat
les
sub
adc
enter
xchg
and
xorl
xlat
out
pop
nop
lock
mov
add
test
rolb
adc
fcmovu
addb
ret
nop
lock
pop
shll
nop
xchg
sbb
dec
or
adc
out
jns
inc
lahf
nop
test
or
ljmp
dec
dec
ret
sub
dec
dec
ret
or
stos
mov
or
test
lahf
inc
pop
sbb
mov
mov
push
push
xor
pop
or
sub
sbb
rorl
into
pop
add
lahf
push
push
or
sbb
or
sbb
or
inc
ret
je
add
pop
mov
or
mov
sbb
lahf
inc
or
inc
lahf
push
inc
ret
lahf
adc
inc
stos
rcll
adc
test
ret
lahf
loope
iret
lds
or
xchg
add
lahf
jo
or
push
callw
and
jl
pop
add
pop
test
add
lahf
loope
aaa
add
lahf
hlt
xchg
sub
or
lahf
adcl
lahf
or
jo
test
clc
push
test
sub
sbb
or
into
mov
outsb
shrb
cmp
ret
adc
dec
mov
sub
lahf
or
mov
icebp
sub
add
lahf
adc
and
fs
push
and
aas
cmp
les
adc
or
loopne
cmp
add
and
outsl
data16
adcl
lahf
shlb
push
xor
inc
dec
xor
dec
sbb
lahf
testl
lahf
push
xor
adc
jnp
or
lahf
and
je
jb
pop
xchg
push
add
jae
sbb
inc
mov
and
mov
and
and
push
add
or
cmp
push
dec
add
pop
cmp
dec
add
pop
incb
jb
inc
cmp
cmp
jno
adc
ret
stos
push
cmp
adc
jo
cmp
pop
sub
arpl
adc
mov
stos
adc
xor
dec
mov
stos
lods
sub
roll
les
push
popf
adc
pop
cmpsl
inc
stos
adc
xor
push
xor
sub
jno
stos
sbb
xor
loopne
stos
scas
dec
orl
loopne
and
inc
jl
push
inc
ret
cmovs
sub
or
sub
gs
mov
test
cmova
inc
and
pop
inc
addr16
add
pop
cli
les
jb
xchg
mov
roll
mov
nop
sbb
fstl
push
sbb
or
or
rcrl
jo
nop
jo
push
or
sbb
mov
mov
fsubr
jae
dec
jnp
inc
dec
or
and
or
test
out
popf
pusha
and
scas
and
or
dec
fwait
out
sbb
or
cmp
xor
xor
or
addr16
mov
loope
sbb
movsl
nop
or
add
cmc
test
or
out
jbe
les
bound
and
mov
sbb
sub
sbb
or
cmpsb
push
add
inc
or
inc
jnp
adc
or
es
or
add
sbb
mov
or
or
test
mov
and
push
or
adc
xor
or
sub
out
loope
and
movsb
inc
mov
and
push
push
sbb
or
nop
xor
xor
or
aam
dec
jo
or
and
or
and
je
sbb
or
mov
aam
data16
xchg
mov
inc
or
and
aaa
or
or
mov
or
jge
outsb
and
cmp
popa
popa
and
push
or
inc
mov
or
inc
ret
lds
mov
add
xor
rolb
push
inc
ret
or
add
movsb
or
test
or
or
xor
adc
loopne
or
adc
push
pop
clc
mov
mov
bound
and
inc
or
and
or
or
mov
mov
xlat
adcl
das
inc
dec
mov
or
or
stc
les
out
push
adc
push
pop
push
mov
pop
sahf
push
js
push
or
or
add
add
icebp
mov
sti
pop
and
add
push
push
dec
pop
pop
push
or
dec
or
inc
inc
fisttpll
inc
and
adc
add
std
cmp
movsl
xchg
cmp
rorb
adc
lock
inc
pop
or
sbb
or
rolb
or
xlat
cwtl
pop
popa
or
gs
sbb
rolb
movsb
mov
out
push
or
aaa
js
adc
or
movsb
aas
push
xor
fwait
dec
lock
inc
ret
or
inc
sbbb
orb
not
test
add
jo
or
jo
or
mov
lods
mov
or
inc
or
mov
loope
das
mov
push
add
add
add
test
shll
fistps
xchg
mov
inc
or
fwait
sbb
push
adc
adc
insb
sbb
adc
add
rcrl
dec
xor
dec
jo
push
lds
movsb
xchg
inc
call
adc
popl
ss
mov
insb
xlat
mov
mov
or
adcl
inc
mov
or
inc
add
or
nop
or
mov
jp
pusha
and
sub
and
cli
movsl
in
push
scas
leave
test
add
mov
adc
out
jecxz
into
fmulp
sub
jo
xor
sar
fdivrs
mov
jl
push
movsl
ret
call
mov
inc
lcall
jecxz
pop
mov
test
jns
push
and
clc
outsb
jns
or
lret
sbb
pop
xchg
mov
sbb
or
movsb
or
sub
xchg
lret
sbb
or
dec
pop
sahf
and
xchg
xchg
add
nop
adc
mov
and
popf
inc
cmp
mov
push
in
xchg
jle
and
and
jns
mov
push
jns
sub
inc
inc
jns
add
push
and
test
nop
loopne
mov
mov
stos
push
pop
loope
xor
mov
and
out
call
sbb
sub
add
adc
and
adc
push
pop
sub
mov
xchg
mov
mov
or
shlb
enter
imul
inc
inc
das
cmp
lds
and
cmp
inc
sbbb
and
xor
xor
or
adc
or
or
sbb
sbb
inc
inc
ret
xchg
movsb
dec
jo
add
push
test
inc
inc
mov
inc
pop
dec
ret
movsb
addr16
pop
out
adc
stos
movsb
sub
mov
pop
add
nop
or
ret
addb
pop
add
inc
inc
push
inc
dec
clc
ret
out
jno
inc
inc
in
mov
cmpsb
adcb
adc
nop
loopne
adc
ffreep
add
outsb
add
and
and
or
inc
adc
adc
arpl
mov
xchg
clc
add
test
add
cmp
cmp
xor
adc
adc
in
inc
sbb
jnp
jo
js
into
push
mov
loope
nop
jo
and
sbb
mov
rcll
and
cmpsb
add
push
xchg
xchg
push
sbb
add
add
fadds
jo
pop
ror
cmp
or
xlat
addb
sbb
or
mov
dec
xor
add
aaa
pop
rcll
inc
lock
inc
cmpsl
mov
push
sbbl
ficoml
test
inc
add
sub
test
push
or
adc
out
dec
pop
cmp
push
mov
pop
sbb
or
ds
pusha
cmp
fidivs
fisubl
mov
push
add
inc
es
sub
xchg
ja
and
pop
adc
adc
push
inc
and
jo
dec
or
push
and
adcb
cmp
enter
or
adc
push
xor
test
daa
jg
push
and
lcall
inc
dec
xor
lds
nop
jo
inc
inc
jl
and
mov
ret
inc
sbbb
push
or
inc
aad
add
inc
inc
xor
inc
dec
inc
sbb
and
push
inc
or
or
inc
or
or
pop
test
fwait
mov
cli
fstpl
pop
or
or
inc
dec
loope
and
dec
add
inc
dec
mov
adc
inc
dec
add
and
or
mov
xor
xor
addb
test
add
lahf
ss
push
xchg
dec
adc
frstor
fcoml
fstp
out
out
and
fstpl
inc
dec
mov
or
xor
out
jo
or
pusha
stos
pop
push
popa
stos
bound
xchg
mov
bound
cmp
adc
mov
call
adc
fnsave
icebp
repnz
test
bound
pop
jg
loope
daa
xchg
jp
push
push
inc
les
sub
or
jno
pop
mov
inc
push
insl
rorl
and
insl
xor
mov
mov
loope
fisttpll
bound
fcmovu
sbb
push
icebp
xlat
or
ds
sbb
adc
mov
loope
jno
push
fldl
bound
test
mov
xchg
fnstsw
repnz
mov
inc
js
daa
mov
mov
mov
mov
das
bnd
xchg
loope
inc
outsl
xor
rclb
pop
adc
dec
inc
push
xchg
jns
mov
xor
push
or
cmp
loopne
movsb
sub
scas
mov
xor
push
dec
fisttpll
mov
mov
adc
jbe
mov
mov
je
aaa
jne
mov
les
and
jge
icebp
pop
xsha256
cmpsb
adc
stos
push
xor
xor
jns
and
filds
adc
lds
nop
pusha
jns,pn
sub
adc
test
fnstsw
push
inc
adc
cmp
or
fstl
push
sub
js
fisttpll
aas
loopne
sub
push
push
outsl
jb
test
sbb
jnp
cmpl
lds
mov
imul
xchg
jo
pop
inc
mov
dec
clc
jl
adc
popa
addb
pop
ret
movl
add
cli
movlps
add
xor
lock
call
test
into
or
or
inc
test
loope
mov
inc
daa
sbb
push
mov
adc
inc
addb
or
cltd
cmp
and
mov
mov
stos
add
call
orb
xor
and
push
xor
adc
ljmp
push
cltd
and
jp
jae
jnp
ss
xchg
cltd
cld
mov
cltd
lods
xchg
in
pop
inc
push
and
stos
dec
nop
adc
cs
ret
testb
loope
and
xchg
bswap
and
xor
and
es
into
xchg
ucomiss
pop
dec
mov
nop
lock
or
and
and
adc
or
adc
fwait
mov
pcmpeqw
adc
jns
cmovno
push
dec
mov
adc
push
iret
call
loope
rdpmc
je
adc
sub
xchg
and
push
stc
loop
seto
mov
or
cmpsl
dec
cmovg
stc
mov
inc
cmovnp
dec
push
push
push
mov
cmp
das
inc
inc
inc
lldt
inc
loopne
add
mov
add
sbb
jle
xchg
ret
out
ss
scas
sub
and
lret
jnp
sahf
bound
mov
dec
fisubrs
add
xchg
lret
cmp
enter
push
sub
mov
push
sub
sub
add
bswap
pop
xchg
and
seta
loope
cmpsl
push
wbinvd
adc
inc
addb
sgdtl
outsb
pop
bsr
mov
jl
mov
sbb
aaa
cs
bswap
cmpsb
mov
orb
adc
adc
add
sub
or
dec
cmp
lss
push
and
nop
int3
cltd
jle
mov
pop
adc
addb
lock
pop
setns
inc
dec
dec
nop
xor
or
cwtl
pop
addb
and
cmove
push
subb
jb
gs
sbb
pop
adc
inc
pop
movnti
je
movhps
fsub
adc
icebp
push
sbb
jmp
js
and
push
adc
add
inc
faddp
jecxz
sar
push
mov
cmp
or
push
addb
ja
jo
dec
mov
or
add
dec
xorl
xchg
and
pop
jmp
jp
or
in
add
and
push
pmaxub
push
mov
and
out
adc
xchg
in
adc
adc
cld
loope
and
cmp
dec
xchg
ja
sbb
and
sub
xor
lds
ja
add
dec
sub
add
dec
nop
mov
leave
adc
dec
mov
push
cmp
sub
dec
insl
test
and
adc
jns
cli
push
arpl
in
push
loop
or
mov
xchg
cltd
mulb
mov
ja
test
hlt
sbb
ja
and
xchg
and
ret
inc
and
inc
cmpl
imul
sub
pop
push
ja,pn
ret
pop
cli
and
cwtl
sub
ja
sbb
jo
and
sbb
dec
ja
xor
mov
inc
mov
ja
or
pop
mov
and
xchg
ret
push
ja
rorb
sub
push
or
push
sahf
ja
rol
inc
add
and
inc
ja
cmp
push
and
adc
ja
adc
mov
pop
cmpsb
jbe
sub
xchg
push
lock
push
ja
ficoml
push
pop
xchg
ja
add
push
or
add
push
xorb
test
dec
fbstp
dec
cwtl
les
stos
imul
int
sub
or
pop
xchg
sbb
mov
js
ja
add
adc
xor
cmpb
test
xor
sub
add
stos
adc
add
ja
and
ret
outsl
adc
or
test
lods
bound
ja
mov
sbb
ja
mov
add
and
push
addb
push
call
push
or
xchg
push
ret
or
or
shrb
add
dec
pop
ja
nop
pusha
fidivs
dec
and
nop
xchg
adc
mov
mov
or
mov
ja
and
ret
push
ja
xchg
push
inc
popa
mov
inc
ja
xchg
and
fidivl
stos
add
inc
pop
ja
mov
jnp
insl
dec
nop
jo
adc
xchg
leave
dec
dec
mov
sub
push
lock
addb
pop
in
push
pop
push
je
subb
ja
xor
inc
mov
rcll
je
sbb
sub
and
sub
nop
jo
xchg
ja
sub
mov
data16
rolb
in
imul
dec
xchg
rcl
stos
add
popf
sub
insb
ja
cmc
mov
inc
xorb
stos
add
stos
enter
push
orb
adc
inc
push
addb
data16
add
outsb
dec
inc
ja
and
ja
and
xchg
and
and
adc
adcb
ja
int
test
pop
push
addb
ja
nop
pusha
test
ja
or
and
pusha
sub
sbbb
dec
dec
sahf
sub
pop
push
add
nop
loopne
les
xor
ja
call
lock
mov
repnz
mov
and
and
adc
jmp
lret
xchg
and
hlt
ja
les
push
or
add
lock
sbb
pop
push
ja
aas
ss
and
lahf
mov
fucomip
pushf
sbb
or
dec
cld
add
xchg
jo
ja
adc
cmpsl
adc
data16
mov
jo
test
ja
xchg
testl
pop
push
xorb
popa
pusha
ja
or
out
pop
adc
dec
cmp
rclb
rorl
stos
dec
ja
jp
mov
out
dec
and
loopne
in
test
imul
test
leave
adcl
int3
mov
dec
push
xorb
loope
add
ja
and
je
xchg
sub
xchg
ja
sbb
xor
sub
adc
test
dec
ja
ljmp
popa
push
adc
xor
or
adc
and
pop
or
ljmp
fs
test
mov
pop
ljmp
in
addl
and
pop
xchg
or
inc
ja
nop
call
fld1
dec
push
xchg
and
addb
test
or
ja
test
imul
push
ss
ja
and
sbb
or
inc
stos
or
aaa
inc
inc
stos
add
sub
pop
or
ja
test
scas
dec
nop
ja
fwait
adcb
movb
mov
adc
xchg
outsb
ja
and
ja
cmp
rolb
add
cmpsl
sbb
inc
add
push
push
inc
fs
cmpsl
pop
dec
call
xchg
test
jmp
jo
and
scas
dec
ja
pusha
xor
ja
adc
xchg
ja
push
addb
ja
ret
add
push
aam
mov
inc
ja
clc
dec
nop
pusha
or
repz
mov
data16
push
xchg
ja
adc
push
or
dec
and
push
or
xor
test
aaa
adc
lcall
or
xchg
pusha
ja
inc
push
loope
push
scas
nop
pusha
pop
sub
orl
sbb
dec
jne
pushl
xor
jo
jne
inc
xor
jl
dec
cmp
test
push
and
push
or
jne
in
sub
cli
jne
and
jne
inc
ret
jnp
addb
out
sub
push
sbb
ljmp
sub
imul
fs
nop
lock
add
or
stos
jnp
mov
push
ret
pop
out
push
adc
inc
jnp
sbb
ja
adc
inc
push
jnp
les
or
jnp
xchg
and
add
jnp
adc
sub
and
mov
sbb
add
ljmp
mov
imul
fiaddl
testb
dec
jmp
inc
dec
jnp
mov
loop
sbb
xchg
addr16
dec
movsl
repnz
movsb
sbb
xchg
lret
add
dec
push
jns
mov
mov
dec
in
and
or
jp
jl
xor
inc
and
and
add
decb
jle
pushf
das
bnd
xchg
xor
and
mov
jnp
addb
mov
inc
inc
push
cmpb
sbb
addb
call
cwtl
cld
mov
stos
add
insl
inc
lock
xchg
and
orb
loope
rolb
sbb
sub
sbb
push
cmpb
and
dec
nop
mov
pusha
and
test
popa
mov
push
jnp
jno
xchg
and
push
addb
jnp
scas
sbb
add
and
cs
cmp
cmp
cmpsl
jnp
sub
imul
add
push
cmp
repnz
or
sub
mov
mov
ret
shrb
jnp
push
jmp
call
mov
xchg
and
mov
insl
js
cmp
add
jl
mov
repnz
int3
inc
inc
inc
ret
xor
insl
loope
xchg
and
clc
jnp
iret
add
xor
or
jl
sbb
xchg
jecxz
mov
push
clc
jl
aas
pop
pop
cs
or
mov
jnp
and
jnp
sub
dec
lret
and
fbld
or
and
mov
out
test
jnp
push
nop
pusha
pop
or
sub
jnp
test
data16
push
cmpb
push
or
jnp
xor
das
and
and
cmp
imul
xchg
fdivl
pop
into
sub
jnp
sbb
and
xchg
stos
jnp
popa
xor
nop
roll
jnp
adc
xchg
and
mov
jnp
dec
adcb
xchg
testl
paddsw
push
addb
inc
ret
sahf
jnp
xor
push
adc
cmp
or
pop
adcl
xor
outsb
mov
sub
sub
xchg
and
jl
addb
jo
lret
jnp
out
mov
or
jnp
adc
adc
push
jnp
mov
imul
out
mov
jnp
cmp
lcall
je
je
dec
xor
pusha
addb
push
jnp
cmp
jnp
mov
mov
ret
push
out
push
call
jnp
sbb
addb
inc
ret
jnp
and
push
sbb
jnp
daa
mov
mov
rcll
jnp
and
push
cmpb
inc
xchg
and
xor
rolb
addb
jnp
and
cmp
or
outsb
mov
test
push
jnp
in
xor
push
jnp
jno
es
or
cs
fldenv
and
stos
jnp
nop
jo
xchg
jnp
and
adc
jnp
adc
cmpb
shr
jno
mov
inc
je
and
jnp
dec
nop
and
push
add
cmpsb
lea
xor
pusha
mov
pusha
cld
jnp
add
push
pop
jnp
or
jmp
call
jnp
add
scas
dec
orl
adc
inc
push
or
push
dec
pop
hlt
mov
cld
mov
jnp
imul
test
test
hlt
jnp
rcrb
je,pt
push
mov
mov
xor
addb
push
jnp
add
orb
inc
sub
add
jnp
add
push
xor
rorl
push
jnp
scas
adc
xchg
and
adc
ss
or
movsb
add
dec
nop
jnp
mov
mov
inc
orb
into
jnp
inc
inc
loope
push
or
xchg
jnp
sub
push
cmp
sbb
test
push
inc
and
push
addb
enter
add
stos
adc
jo
xchg
and
pusha
nop
mov
jge
adc
cmpsb
jge
nop
xor
or
cmpl
jge
mov
jge
inc
addb
dec
nop
jo
cld
inc
ret
jge
push
lret
sbb
jge
outsb
add
inc
push
jge
fcoml
push
cmpb
lea
cmp
mov
and
sub
push
sub
adc
into
jne
or
jge
in
and
inc
fldl
xchg
push
jge
dec
and
pop
mov
dec
nop
jge
xchg
push
addb
mov
aad
xchg
cmpsl
pop
or
cmpb
rolb
dec
jge
and
das
das
inc
ret
jge
addb
jo
push
jge
jo
add
push
addb
jge
add
pop
xchg
loope
jo,pn
pop
inc
and
mov
loopne
arpl
or
int3
repz
cmp
and
mov
add
andl
jge
outsl
pushf
loopne
push
or
je
aam
adc
cs
addb
inc
mov
cmpb
dec
nop
rcrb
xor
decl
pusha
jge
insl
sub
add
idivl
jge
inc
and
adc
aad
and
aaa
adc
pop
jge
add
push
stos
jge
loopne
add
adc
stos
mov
inc
and
mov
push
hlt
nop
pusha
add
sub
bound
mov
les
mov
aaa
adc
call
and
orb
stos
jge
mov
or
lock
push
add
pop
or
dec
push
or
jge
stos
adc
cmpl
lahf
rcl
aas
call
xchg
inc
ret
jge
or
adc
jge
in
jo
enter
xor
mov
jge
sub
test
pop
ret
jge
lock
out
adc
and
push
jge
sub
push
mov
mov
mov
inc
or
fwait
dec
push
jge
add
push
or
push
fwait
stos
add
jge
sub
push
addb
jge
pusha
adc
dec
jge
cmp
push
or
xchg
and
jge
add
lock
push
insb
or
push
jmp
call
aas
push
jmp
jmp
dec
adc
add
sbb
jge
addb
ljmp
ds
jge
nop
pusha
stc
into
sub
inc
cwtl
cmpb
or
push
or
ljmp
ss
jne
add
push
addb
lods
lods
stos
out
xor
push
and
and
data16
adc
ds
jne
jmp
into
dec
call
push
mov
and
sub
sbb
mov
adc
push
or
in
mov
pop
push
or
aas
mov
ret
jmp
mov
test
ja
and
or
add
jge
and
and
mov
xor
dec
dec
xor
lds
and
jg
out
inc
lods
ja
jg
sbb
ds
andb
push
sbb
sahf
out
push
mov
mov
mov
hlt
adc
jns
out
push
sub
dec
push
gs
idivb
mov
xorl
sub
dec
ret
out
jg
mov
push
adc
sbbb
add
inc
push
or
ja
adc
push
adc
lret
mov
add
push
xchg
ja
push
push
mov
into
pop
push
or
test
adc
or
push
iret
test
addb
test
adc
push
cmp
inc
push
or
pop
cwtl
movb
orb
lds
adc
shll
popa
or
addb
aaa
push
ja
mov
ja
ljmp
sbb
mov
jo
and
add
dec
or
xlat
sbb
cmp
enter
add
aaa
rcr
ja
ret
pop
jmp
or
mov
sub
arpl
xlat
add
outsb
push
ja
addb
add
push
ja
out
dec
nop
mov
inc
ret
mov
popa
and
inc
ja
add
inc
ret
push
or
outsb
pop
push
ja
nop
jo
lods
sub
call
pusha
pop
ja
cmp
mov
pusha
cmp
mov
jo
ja
inc
adc
ja
mov
push
push
addb
adc
mov
fisubrs
in
push
or
and
cmp
mov
in
inc
and
mov
push
or
inc
arpl
adc
nop
pusha
dec
inc
sbb
add
scas
ja
cs
ret
ja
inc
addb
ja
inc
and
inc
ja
or
push
push
ja
inc
loopne
cli
adc
or
xor
push
addb
xor
sbb
mov
push
ja
cmp
in
and
stos
adc
cmpsb
ja
pop
dec
mov
in
lahf
push
or
int3
mov
xorb
in
sub
xor
fmull
dec
ja
sbb
and
dec
adc
mov
sbb
or
push
inc
jmp
push
ja
pop
sbb
pusha
inc
push
push
inc
add
scas
or
sub
test
stos
fidivrs
adc
aad
outsb
pop
push
xorb
lods
stos
add
ja
nop
jo
loopne
lahf
rcrl
mov
ret
push
xor
or
call
sub
loope
call
dec
jg
pop
pop
inc
call
cmp
and
fnstcw
ja
and
scas
adc
in
ret
lock
cmp
in
mov
sub
or
loope
cli
xchg
mov
test
in
shrb
push
addb
testl
popa
xor
ja
enter
and
inc
outsb
mov
mov
or
ja
addb
adc
push
cmp
push
andb
adc
leave
sbb
or
and
and
mov
sahf
jo
adc
dec
nop
ja
or
mov
ja
jae
mov
xor
add
ja
add
mov
xor
int3
mov
pop
and
and
push
push
ja
lea
xchg
test
or
loop
ja
xor
add
cmp
and
or
adc
nop
loopne
stos
ja
test
and
test
push
addb
xorb
data16
pop
mov
dec
sbb
push
inc
ja
mov
cs
movsb
call
and
ficompl
test
adc
cmp
ja
or
inc
ret
mov
push
mov
mov
jp
or
pop
rorb
push
push
addb
roll
clc
and
adc
decl
adc
adc
add
cmp
or
stos
dec
outsl
jae
imul
int
add
sub
push
orb
sbb
nop
loopne
scas
or
pop
mov
nop
and
push
outsl
mov
cwtl
orb
mov
orb
inc
xchg
or
outsl
inc
mov
jmp
mov
inc
andb
test
nop
pusha
xchg
push
movsb
xchg
and
mov
fisubs
pusha
movb
dec
gs
shll
sahf
dec
mov
nop
nop
xchg
stos
lods
add
mull
ss
orb
cmp
dec
jo
sbb
add
outsb
inc
gs
and
nop
lods
addb
adc
push
mov
or
or
mov
add
sbb
dec
push
or
gs
icebp
dec
add
fcomip
in
mov
inc
mov
gs
pop
adc
ds
call
or
gs
shrl
pop
pop
push
addb
dec
aaa
movsb
and
pop
add
aaa
push
gs
inc
and
lods
test
adcl
sbb
or
push
or
xor
add
adc
adc
movsb
bound
lods
cmp
inc
push
gs
cmp
add
dec
in
jb
jo
stos
gs
xor
faddl
gs
addb
push
inc
mov
gs
daa
mov
flds
imul
out
test
xor
jns
lahf
mov
fs
pop
xchg
fidivrs
mov
subl
outsb
push
and
stos
add
add
dec
mov
rorl
dec
mov
inc
xchg
add
xor
test
add
insb
stos
dec
nop
add
cmp
and
inc
ret
add
sub
je
fs
adc
mov
and
xchg
js
rcrl
movsl
sub
inc
ret
dec
leave
inc
lock
inc
ret
movsl
dec
js
sub
xor
and
movsb
jecxz
shll
mov
and
dec
xchg
movsl
nop
jo
rcll
pop
inc
sbbb
cmpsl
jne
adc
sub
ficoms
cmpsb
adc
fsubrs
mov
and
jg
jge
inc
es
dec
mov
movl
mov
xchg
inc
add
ljmp
jmp
add
leave
mov
pushl
nop
mov
cmp
adc
adc
adc
test
mov
dec
sbb
and
xor
lods
ljmp
sbb
aaa
push
and
and
mov
push
and
js
ret
scas
dec
nop
lock
loope
mov
adc
test
movsl
imul
mov
inc
lret
rorl
xchg
push
in
cmp
dec
sub
xor
adc
and
pop
je
push
das
add
adc
cmp
or
mov
ja
inc
addb
inc
inc
cmpsl
cld
and
scas
and
sub
mov
mov
add
and
shlb
shl
or
pop
push
mov
xchg
pop
mov
fwait
and
clc
mov
inc
or
xor
add
addl
xchg
and
and
pop
cmp
dec
cmp
adc
adc
clc
fnstenv
loopne
and
xor
and
mov
adc
mov
jg
push
pop
inc
xorb
adc
cmp
dec
sbb
inc
mov
and
mov
and
and
pusha
mov
adcb
push
xchg
faddl
mov
sbb
mov
mov
pop
bound
adc
adc
les
pop
fwait
inc
push
fisubl
add
add
adc
out
loopne
leave
dec
js
add
lahf
add
and
add
add
leave
dec
jo
pop
mov
adc
mov
sbb
nop
stc
testl
or
out
sub
test
jo
inc
leave
jo
sbb
out
add
jo
inc
or
rcll
leave
orb
addb
push
leave
dec
nop
jo
inc
mov
dec
lods
or
mov
imul
dec
dec
pop
bound
pop
or
scas
and
lea
leave
roll
aas
pop
rcl
dec
cmpsb
jmp
xchg
and
fs
push
adcb
adc
adc
adc
cmp
inc
mov
dec
sbb
push
adc
add
out
rolb
sub
add
jnp
fucomp
inc
or
call
xchg
cmp
in
dec
add
or
add
and
inc
js
fistps
jge
and
or
mov
or
aad
aaa
jmp
add
xor
xor
shlb
dec
jecxz
dec
cmp
nop
loopne
shl
mov
orb
mov
jecxz
and
push
or
cmp
fdivr
adc
loope
mov
ljmp
xchg
sarl
jecxz
repz
cmp
test
jecxz
shl
es
jecxz
loopne
scas
xchg
pop
adc
jecxz
sbb
jmp
loop
or
xor
and
jo
push
adc
aad
jne
cmpsl
es
je
call
cmpsb
cmpsb
es
inc
ret
lret
stc
add
loop
cmpsl
fsubp
sub
inc
jecxz
pop
insl
pop
sub
into
sub
push
and
in
add
dec
add
rcrl
xor
mov
dec
fstps
and
add
es
ret
jecxz
fistpll
call
dec
cwtl
jecxz
es
orb
jecxz
rcll
jno
jecxz
push
test
jecxz
ss
movsb
jmp
cmp
add
sbb
mov
cmpsl
bound
and
ljmp
or
dec
adc
bound
and
enter
adc
and
jecxz
outsb
loopne
or
push
icebp
pop
pop
lret
out
daa
cmpsb
cmp
iret
std
inc
dec
mov
test
add
mov
call
or
jecxz
scas
adc
jae
in
cld
test
jb
movsl
and
adc
fwait
dec
adc
add
cmpsb
sbb
dec
addb
or
adc
mov
outsl
adc
or
into
xchg
inc
dec
and
mov
inc
ret
addb
test
or
push
pop
shrl
push
je
lcall
scas
jl
test
dec
cmp
pop
cmp
jae
addb
add
dec
jecxz
scas
jmp
dec
addb
lock
or
stos
mov
pop
xchg
jecxz
sbb
mov
adc
cwtl
lods
push
fidivs
mov
add
adc
xor
cld
lock
and
jecxz
ret
rolb
push
and
jecxz
push
or
out
or
fs
adc
cwtl
jecxz
scas
lcall
push
xchg
stos
popf
fdivrs
out
in
das
pop
fsubrs
aaa
pop
pop
aas
paddsw
fisttpl
mov
and
pcmpeqd
mov
aaa
pop
scas
call
ror
push
push
inc
ret
add
push
lock
mov
cmp
ror
push
sbb
leave
xor
je
std
mov
mov
cmp
js
mov
test
xchg
inc
and
les
adc
push
inc
add
into
and
pop
inc
adc
mov
adc
lods
mov
sbb
xchg
stos
inc
nop
jo
adc
stos
mov
xchg
inc
cmpb
addb
xchg
jp
adc
adc
rorb
ret
and
add
jbe
and
cmp
adc
fcomps
pop
jo
gs
mov
and
clc
dec
xchg
fldt
xchg
mov
push
inc
adcb
pusha
pop
sbb
push
jbe
sti
pop
cld
mov
les
dec
xor
push
inc
ret
rclb
push
dec
loop
dec
repnz
dec
xor
andl
and
add
adcb
jmp
dec
xchg
orl
sbbl
addl
push
adcl
cmpsb
pop
nop
nop
addl
mov
ficoml
or
push
mov
add
xor
add
rcrb
sub
inc
insl
test
imulb
add
mov
out
lds
add
mov
loope
inc
inc
dec
addb
lret
lea
adc
addb
xlat
and
js
lods
or
rcl
lock
pusha
test
and
xlat
dec
nop
xor
mov
adc
dec
lds
or
add
xlat
and
adc
add
add
or
fs
push
or
xor
add
js
and
xlat
shll
fst
dec
nop
jo
xor
dec
nop
xor
and
mov
nop
pusha
punpckhdq
cmp
dec
xlat
sbb
push
addb
mov
fimull
adc
xlat
mov
xor
or
lcall
test
dec
ret
dec
xlat
push
in
adc
inc
xlat
clc
adc
push
or
sbb
lcall
push
xchg
xlat
es
ret
dec
xlat
dec
pop
pop
and
cmp
and
xchg
inc
mov
mov
shll
popa
xlat
add
shlb
cmp
and
loope
js
jmp
xor
nopl
pushf
xchg
iret
push
cmp
ret
sbb
sbb
and
pushf
and
jbe
rcl
dec
nop
jmp
pushf
test
inc
outsb
daa
sbb
push
pop
inc
sub
dec
cmpb
push
mov
xor
and
rcrl
jle
cmp
jmp
add
enter
mov
sar
addb
jmp
nop
nop
ss
push
adc
mov
push
or
fs
cmp
nop
pusha
push
ss
call
orl
mov
add
into
ljmp
popf
jo
and
enter
mov
mov
dec
push
movsb
lret
pop
add
dec
shr
or
into
inc
pusha
ret
in
bound
or
pusha
pop
inc
push
inc
push
pop
pop
or
and
sub
test
push
outsb
stos
add
jmp
pop
add
add
or
dec
xchg
inc
and
mov
mov
in
nop
cmp
pop
push
adc
xor
out
sub
and
sub
push
adc
adc
stos
dec
nop
loopne
jmp
test
sub
add
and
jmp
ret
sub
and
ret
jmp
and
call
mov
pminub
pop
ja
fld
loopne
sbb
push
cwtl
add
inc
jmp
xchg
lock
jmp
pushf
js
loope
fisubs
mov
push
leave
and
pop
adc
jmp
loope
mov
cmp
mov
xchg
jmp
clc
pop
and
cmp
ret
hlt
ret
fcmovnb
test
leave
inc
rol
inc
push
addb
xor
mov
add
test
adc
xor
jmp
sbb
cltd
movsl
imull
and
dec
jmp
in
and
inc
xchg
push
movsb
je
fucomip
or
cmp
fst
aam
loopne
adc
jl
inc
pop
shlb
out
sbb
adc
push
addr16
fwait
in
enter
xchg
nop
jecxz
and
mov
mov
addr16
imulb
movsb
jle
loope
and
xor
and
in
addr16
in
cmc
add
xchg
and
dec
mov
add
enter
pushf
xchg
jno
cmc
into
inc
cs
iret
jle
mov
sub
lcall
xchg
add
cmp
cmpb
call
push
repnz
in
sbb
cmp
jo
pop
cmp
test
jp
jecxz
cmp
shll
jo
push
xor
mov
call
dec
movsb
inc
dec
pop
lcall
or
push
mov
mov
ja
lahf
orl
in
xchg
mov
sub
add
and
inc
ret
sbb
fsubrs
and
test
adc
adc
push
and
fstl
jmp
inc
pop
call
or
jmp
and
dec
jmp
xor
jmp
inc
adc
out
dec
nop
pusha
scas
mov
mov
jmp
or
addb
push
inc
inc
jmp
or
adc
jmp
and
or
addb
ja
push
jmp
dec
js
cmp
push
add
jg
sbb
push
and
loop
adc
mov
and
sbb
adc
int3
mov
scas
cmp
or
mov
xchg
and
jmp
cwtl
cmp
cmp
inc
rclb
mov
divl
sbb
mov
xchg
cmp
adc
es
and
cs
movsl
push
test
and
jmp
rcrb
add
lret
or
mov
dec
adc
dec
push
and
les
and
push
fs
sub
and
push
mov
add
adcb
jl
stos
mov
or
inc
ret
jo
mov
adc
dec
nop
ljmp
sub
aas
add
adc
add
es
or
jmp
cmp
or
mov
movsl
mov
or
and
jmp
in
mov
imul
sub
rorb
inc
sub
jb
adc
in
mov
cmp
call
ret
inc
jmp
imul
inc
jle
loopne
inc
adc
push
add
jmp
mov
rcrb
push
cmp
cwtl
mov
ds
lock
jle
sbb
and
jmp
fcoml
inc
mov
adc
and
js
adc
jmp
or
or
nop
mov
jmp
or
imul
and
cmp
push
jmp
adc
push
dec
nop
lock
andl
xor
adc
push
jmp
add
ja
jmp
and
cltd
or
push
jmp
addl
ds
sti
pop
pushf
mov
jmp
mov
sbb
adc
stos
adc
jmp
mov
add
jmp
imul
test
mov
and
push
or
stos
jno
jmp
sbbl
inc
cmp
xor
push
stos
xchg
and
rcrl
jae
pop
rorb
rcll
jl
dec
inc
xorb
ret
dec
jae
mov
loopne
jae
inc
ret
pushf
fs
mov
loope
and
jae
bound
xchg
and
mov
sbb
jae
fsubs
mov
or
add
jae
and
adc
mov
cld
jl
adc
add
das
sub
push
adc
jae
and
imul
adc
push
and
jae
mov
cmp
and
mov
xchg
lret
movb
adc
mov
js
pop
add
hlt
cmpsb
sti
adc
dec
jae
push
and
adc
scas
sub
jo
mov
push
mov
jae
or
in
movups
cmp
js
sbb
and
jae
adc
clc
jae
inc
addb
or
ds
add
pop
xchg
and
sub
and
push
cwtl
jae
cmp
lock
mov
jae
dec
cmp
dec
pushf
mov
movb
lret
aam
inc
ret
imul
cmp
dec
nop
jo
jge
je,pn
and
mov
and
mov
jae
lret
and
jae
inc
and
pop
push
jae
fwait
push
jp
inc
inc
add
xchg
or
jae
nop
mov
icebp
add
cmpsl
stos
jae
rclb
arpl
sbb
orb
add
or
jae
and
adc
js
or
test
push
and
mov
ja
inc
xorb
adc
clc
jmp
or
adc
mov
mov
dec
add
dec
sub
enter
mov
add
cs
outsl
jb
test
and
in
mov
add
sbb
jae
and
test
or
in
add
adc
cmpl
leave
mov
xchg
pushf
xor
add
pop
mov
and
add
cmpsl
or
adc
mov
push
inc
sahf
mov
test
pusha
push
or
mov
shrb
mov
into
cmp
frstor
adc
ds
nop
jae
ja
inc
mov
jae
or
mov
inc
insb
sbb
les
and
jae
ljmp
push
adc
mov
adc
mov
jae
mov
adc
jae
jp
pop
inc
and
jae
inc
and
sbb
jae
test
inc
shlb
adc
inc
addb
out
mov
fmuls
shll
adc
lods
pop
mov
xchg
and
out
inc
das
ds
daa
and
pop
mov
mov
add
sub
loopne
and
and
aaa
xchg
inc
inc
addb
shrw
or
faddl
ss
and
and
mov
pop
daa
xor
ja
or
adc
inc
fsubl
adc
lds
sub
and
lahf
jae
or
movsl
push
dec
jo
mov
mov
or
nop
jae
dec
sbb
loopne
add
in
or
inc
inc
and
push
mov
jno
xchg
jae
nop
jo
imul
mov
xorl
push
jae
add
adc
jae
xor
sbb
push
aas
or
mov
mov
pusha
mov
sarl
mov
adc
faddl
and
push
mov
jne
sbb
xlat
dec
nop
jo
lret
cmp
jae
fmull
and
lcall
fimull
mov
and
inc
xorb
pop
jne
or
jae
or
loope
jo
sbb
subb
mov
dec
insb
jmp
push
push
mov
cli
flds
cwtl
or
jae
std
dec
mov
xor
shrl
adc
and
and
mov
and
inc
jae
addb
mov
jg
or
nop
ja
jle
sbb
inc
ret
rolb
jae
adc
adc
adc
add
xchg
or
pusha
sub
inc
push
sub
mov
jae
inc
ret
add
add
or
push
push
and
jae
mov
dec
lds
adc
push
enter
addb
and
jae
inc
addb
ja
fwait
mov
jl
inc
addb
jle
mov
aaa
inc
adc
inc
call
fwait
jmp
test
gs
loope
pop
loop
imul
mov
dec
test
adc
test
cmp
js
inc
nop
cmp
inc
and
xchg
mov
sbb
adc
or
or
test
orb
dec
and
dec
jo
push
jecxz
xor
adc
push
and
jg
sub
pop
cmp
mov
inc
cmp
push
or
cmp
cmp
adc
in
adc
push
cmp
nop
lods
inc
nop
cmp
add
pop
arpl
inc
add
and
push
stos
cmp
lret
cmp
xchg
loopne
mov
sub
xchg
add
mov
iret
xchg
mov
xchg
xchg
and
jb
jl
test
xor
and
cmp
dec
lds
je
dec
cld
xor
out
loopne
or
clc
ja
and
jbe
and
lods
shrb
xlat
mov
push
shrb
jl
pop
and
mov
or
fcomip
lahf
sub
fs
mov
ss
scas
mov
push
jae
pushf
or
pusha
cmp
cmp
fldl2e
insl
pop
or
add
xchg
out
in
test
adc
jbe
shlb
nop
push
push
xchg
sbbb
add
mov
sarb
sahf
sbb
sbb
xor
dec
mov
rclb
dec
dec
mov
pop
ja
dec
inc
xchg
mov
mov
arpl
lea
lea
enter
xchg
jp
mov
testb
daa
sbb
push
sbb
push
mov
mov
cmp
adc
xlat
jg
filds
or
xchg
jg
add
outsl
nop
dec
add
dec
jmp
sbb
scas
mov
push
sub
or
test
jge
adc
mov
push
mov
and
js
or
dec
fstps
add
iret
cltd
lahf
inc
icebp
dec
xchg
push
testl
push
lods
imul
sbb
sub
les
rcl
dec
xor
stc
or
sbb
and
dec
mov
in
cli
rolb
lds
inc
icebp
enter
and
out
or
into
and
jmp
out
xchg
pop
pusha
mov
and
mov
lcall
cmpsb
add
cwtl
roll
mov
and
sbb
push
adc
adc
rcll
push
push
fadds
cld
addl
pusha
rclb
cwtl
and
insl
call
adc
out
rcll
and
es
mov
lods
and
inc
std
add
push
ds
mov
adc
adc
jo
xchg
mov
jmp
inc
nop
fistl
adc
xor
lods
xchg
lret
dec
addr16
add
add
or
adcl
adc
bound
es
pop
cmpb
or
add
push
add
repnz
sbbl
xlat
jno
arpl
inc
fildl
jmp
pop
pushw
mov
mov
push
or
outsb
lea
add
pop
and
sbb
sub
fcmovnu
cmp
jns
test
xor
cmp
les
push
lds
or
nop
xchg
lods
pop
ds
mov
std
data16
stos
pop
test
or
adc
cs
pop
adc
rclb
int3
xchg
mov
dec
test
fisttpl
add
xchg
je
and
or
cwtl
and
pop
dec
mov
push
and
mov
and
and
shrb
add
call
pop
add
les
inc
inc
inc
loope
popf
adc
add
pusha
adc
adc
sub
sbb
js
push
adc
add
and
fcoms
rcrl
sbb
and
arpl
pop
and
sbbb
inc
sbb
add
cld
add
fisttpl
add
cs
fistl
and
mov
fstpt
fisttpl
dec
add
fisttpl
jo
and
add
jns
shrl
adc
imul
inc
sbb
jnp
and
and
addl
pop
fildl
jbe
xor
cld
inc
sub
sbb
jbe
pop
cmp
jle
push
enter
adc
std
enter
add
gs
add
cmp
loope
xchg
sub
inc
ret
inc
nop
pusha
nop
sub
cmp
pop
push
test
and
sbb
adc
rcrb
or
push
insb
pop
xlat
and
mov
pusha
adc
xor
mov
sbbb
imul
pop
push
jo
add
pop
insb
adc
cwtl
inc
nop
pop
pushf
push
bound
call
and
addb
push
or
push
lock
jle
mov
and
lock
sbb
inc
push
lods
adc
adcb
xor
cmpsb
push
inc
mov
je
or
add
inc
ret
ljmp
incb
mov
inc
pop
nop
sub
dec
js
test
fstpl
or
incl
das
test
fstpt
icebp
adc
arpl
and
sbb
mov
mov
or
les
pop
int3
in
stc
mov
nop
mov
dec
mov
jbe
sbb
and
pop
test
push
inc
icebp
xor
adc
loope
cmp
jmp
gs
sbb
addb
aad
repnz
pop
adc
push
adc
xchg
pusha
icebp
xor
icebp
cld
scas
dec
cmp
inc
icebp
add
dec
and
popa
leave
pop
test
icebp
in
fmull
add
test
pop
pusha
adc
and
movsb
and
mov
mov
mov
movsb
and
and
mov
icebp
push
sbb
pusha
adc
xorb
hlt
inc
mov
pop
pop
jl
add
adc
cmpsl
jb
push
rol
sbb
pop
jo
andl
adc
push
adc
cmpsb
icebp
inc
sbb
stos
ljmp
inc
inc
andl
mov
xor
mov
push
repnz
mov
pop
adc
mov
xchg
int
sub
enter
jb
sub
es
imul
mov
xor
push
stos
repnz
movsb
pop
add
cmc
adc
jne
das
adc
stos
mov
out
or
inc
mov
rorl
and
and
pop
andl
or
out
sbb
andl
add
addr16
adc
add
jl
xorl
mov
daa
mov
mov
lods
pop
jl
inc
aam
mov
mov
xorb
adc
sbb
popa
jno
push
inc
sbb
cmp
inc
jecxz
and
lock
jg
dec
add
popf
cwtl
mov
andl
fstpt
fwait
xchg
loopne
dec
xor
pop
int
popf
in
call
repnz
pop
add
push
jb
dec
xchg
mov
inc
push
jmp
inc
jae
mov
aam
cltd
xor
and
popf
cld
pop
nop
xchg
jne
adc
xor
and
movsb
in
push
pop
adcl
fsts
pop
fstps
and
daa
xchg
push
test
out
outsb
popf
aaa
xchg
nop
stos
or
inc
xchg
jge
clc
shrl
or
cmpsl
shr
dec
outsb
inc
call
inc
dec
sbb
sub
movsb
jbe
add
test
or
test
or
test
add
mov
test
stos
inc
test
push
and
or
dec
mov
addb
xchg
or
add
push
or
dec
stos
inc
nop
and
xchg
jb
pusha
xor
jl
xchg
or
andl
fs
mov
push
xor
sarb
jne
aas
jle
clc
adc
mov
inc
ret
inc
addb
mov
add
inc
popa
add
adc
les
test
jns
inc
ret
sub
hlt
call
push
jnp
inc
ret
pop
mov
js
sbb
and
push
jns
xlat
mov
sbb
mov
nop
loopne
gs
ret
movsl
jns
mov
sbb
jns
inc
xchg
cmp
xor
rorl
push
xor
jns
dec
pop
outsl
mov
push
push
mov
inc
ret
jns
addb
jns
or
cmp
add
enter
and
inc
icebp
nop
insb
pop
mov
addl
sbb
orl
icebp
test
cmp
fwait
repnz
rclb
cmp
cld
inc
jno
jmp
pushf
pusha
inc
mov
xchg
sbb
ljmp
sub
push
divb
push
or
add
xchg
out
out
jle
inc
adc
add
and
cmp
fcomp
dec
dec
pop
dec
adc
test
mov
inc
push
or
cld
push
or
out
inc
nop
mov
lods
cmp
inc
xlat
out
adc
dec
out
inc
nop
jo
les
je
sbb
cmpsb
jo
mov
inc
xchg
je
andl
add
or
xchg
and
add
xor
cwtl
or
repnz
add
pop
mov
xchg
addb
testl
xchg
addb
adc
aad
cld
pusha
ret
popa
add
xchg
cmc
call
adc
inc
test
in
js
fdiv
and
dec
jmp
loop
xchg
and
cli
sub
inc
and
je
mov
adc
test
dec
or
cmp
je
adc
and
or
insb
call
adc
cld
jns
aad
out
sbb
test
push
cmp
adc
leave
lret
push
push
adc
mov
adc
push
push
mov
roll
adc
ds
dec
in
test
xorb
fisttpl
mov
cmp
and
dec
fucom
mov
aas
in
sbb
dec
in
jmp
testl
incl
mov
lret
jle
jmp
adc
repnz
or
mov
cmp
ds
xor
bound
jle
aas
sahf
mov
test
fdivrs
repnz
mov
and
mov
test
xchg
mov
scas
insb
rorb
subb
mov
cs
push
mov
add
mov
movsb
fdivrl
fnstsw
push
aad
jmp
jmp
addb
sbbl
and
mov
mov
jo
aas
subl
leave
pop
decl
testl
xor
mov
in
push
inc
in
leave
and
int3
push
cwtl
dec
aaa
lds
pop
mov
call
into
dec
shrb
aad
js
cli
decl
inc
mov
ss
outsb
adc
dec
jg
das
push
jle
xor
push
imul
stos
dec
fldt
mov
and
je
jns
cs
mov
enter
loopne
mov
sub
mov
xorb
js
push
or
sbb
lahf
pop
lds
popf
ret
inc
clc
sahf
dec
adcb
push
scas
mov
sub
lret
cltd
pop
cmp
xor
scas
pop
je
lret
sbb
mov
incb
adc
jbe
mov
out
ss
mov
mov
fcoml
into
call
aas
push
pushl
mov
or
or
mov
psubsw
pinsrw
shr
jns
dec
in
push
sahf
mov
in
mov
call
fcoml
xchg
pop
sahf
mov
lcall
push
test
or
fadds
lods
xor
cld
xlat
movsb
shlb
jmp
repnz
sbb
frstor
pop
js
int3
xor
ja
dec
movsl
jle
scas
jg
dec
ljmp
pop
dec
ja
aas
mov
xorb
outsb
xor
lcall
enter
scas
mov
mov
dec
push
cmp
aas
push
cmp
out
push
sbb
and
cmp
jne
inc
push
pop
cmp
ds
xchg
scas
shll
sub
loopne
mov
sub
mov
loop
roll
repz
jmp
jo
out
inc
ds
test
ret
outsl
rcl
add
cwtl
xor
pop
rorb
insb
mov
ffreep
stc
pop
mov
xchg
scas
jg
push
popl
cmpsl
shlb
mov
cmpb
out
filds
inc
std
cs
into
push
aas
push
repnz
imul
rcrb
sarb
pop
dec
testl
dec
rolb
dec
adcb
dec
jo
mov
addr16
jge
stc
inc
mov
das
je
movsl
jb
loopne
push
aas
lods
inc
jle
jmp
adc
cli
outsl
aaa
stc
insb
push
mov
jmp
or
lret
aam
fmuls
fsubrl
sbb
cmp
xchg
jns
and
test
lcall
jo
gs
lret
jo
sbb
rorb
push
fcomps
rorl
xorl
clc
outsl
sbb
inc
sub
and
and
mov
in
gs
lret
je
mov
outsl
mov
mov
sbb
cld
jl
push
push
jmp
jb
xor
test
mov
mov
inc
dec
add
addr16
jle
mov
jp
mov
sub
jecxz
and
cwtl
lret
daa
cmp
out
in
test
sbb
ja
imul
mov
lock
jnp
je
cli
sbb
sbb
xor
dec
push
test
insb
jo
sub
xchg
lret
cwtl
inc
lods
xor
test
sbb
out
cmp
mov
clc
outsl
cld
mov
or
xor
out
sbb
loopne
adcl
dec
lret
inc
pusha
mov
mov
nop
test
lcall
mov
outsl
in
xor
xchg
pusha
addr16
sbb
into
aas
adc
outsl
mov
xchg
cmp
les
push
test
push
cs
mov
bound
mov
ror
mov
xchg
add
aad
repnz
mov
inc
xor
rcrb
push
cmp
or
pop
sbbb
in
enter
into
xor
sub
push
and
mov
lock
sub
add
sahf
push
lahf
ljmp
fisttpl
fdivr
psubusb
pop
jns
mov
outsb
pop
out
aas
xchg
sbb
sbb
inc
sub
clc
scas
shrb
call
rorb
shrl
shll
xchg
lret
loopne
rorb
pop
pop
inc
ret
inc
inc
sub
inc
cmp
imul
decl
fisubl
fstl
sub
and
addr16
mov
mov
shlb
sahf
dec
bnd
or
scas
icebp
leave
mov
hlt
sti
scas
pop
mov
sbbl
scas
int
leave
leave
and
push
scas
cmpsl
jl
into
leave
lahf
xor
rorl
jl
nop
mov
sbb
sbb
adc
pop
shll
scas
inc
fwait
ret
jle
ret
inc
pop
fs
rolb
inc
sbb
adc
daa
stc
sbb
gs
ljmp
lahf
je
jmp
xchg
xchg
addr16
je
or
or
sahf
cmp
inc
insb
enter
mov
inc
sub
push
jns
lods
ja
loope
jp
sar
cli
cmpsl
out
mov
jb
in
mov
pop
insl
out
sbb
mov
sti
pop
jns
aam
clc
fucomp
pop
sub
repnz
inc
cmc
lods
ljmp
lods
outsl
push
push
ret
mov
dec
lahf
cmp
jbe
jg
pop
push
lock
icebp
movsl
popf
push
aas
call
dec
dec
sub
js
cmpsb
scas
push
sub
stc
fisttpl
jns
xor
cmpsl
subb
fwait
fs
int3
xchg
xchg
lods
je
test
inc
push
sbb
mov
pmaxub
push
insl
and
stos
mov
cmpl
jnp
inc
fistpll
test
jae
add
lds
lcall
push
andb
add
dec
test
adc
fsubrs
xchg
out
add
inc
add
push
xlat
cmp
out
inc
adc
jne
pop
mov
scas
call
sub
insl
lea
adc
outsb
mov
push
rcrb
lcall
sub
dec
bound
adc
in
adc
pop
pushf
fs
call
lret
daa
pop
out
mov
fiadds
or
outsb
test
enter
stos
push
aas
push
ret
adc
incb
xchg
je
pop
mov
iret
pop
pop
iret
push
aas
jmp
jnp
xchg
fsubrs
sub
mov
dec
test
jp
mov
imul
jmp
lods
bswap
xchg
es
testb
lcall
out
gs
push
adc
notl
sub
inc
test
xchg
les
insb
notb
xchg
shrl
or
popa
repnz
gs
mov
adc
fstl
adc
dec
jb
xchg
scas
repnz
sub
aas
cmp
sahf
inc
jns
add
stos
ds
jle
enter
aad
cmp
jb
dec
xchg
test
shrb
mov
cld
cmp
push
test
jo
ds
fidivrl
mov
xor
mov
jo
movsl
mov
fsubr
mov
mov
adc
jmp
mov
mov
rolb
and
rcrb
inc
push
jle,pt
test
stc
ds
add
jmp
sub
xchg
sbb
inc
cs
cwtl
push
sbb
mov
aas
test
mov
inc
enter
adc
outsb
or
enter
adc
iret
idiv
inc
fdivrl
imul
dec
cmovo
sahf
int
and
cmpsb
lahf
sub
push
stos
je
orb
sti
std
push
or
mov
dec
push
clc
and
and
test
jg
lcall
jmp
sub
out
int3
ficomps
sub
sub
sahf
push
aas
incb
fidivs
mov
jle
popf
icebp
adc
push
sbb
pop
pop
mov
cmpsl
mov
mov
daa
mov
jle
call
dec
jo
push
mov
mov
lods
mov
mov
xor
cmpsl
sbb
jle
xchg
mov
and
pusha
jmp
aas
mov
ficomps
inc
mov
int
enter
jmp
and
dec
pop
pop
adc
out
mov
pop
ja
aas
test
sub
je
dec
mov
je
int
aas
add
rcrb
shrb
add
adc
call
adc
mov
ss
imul
sar
aas
cmp
xchg
push
scas
movsb
push
push
ds
push
nop
dec
nop
outsb
les
stc
mov
or
jns
test
sbb
dec
fucomip
jle
mov
xor
aaa
mov
xlat
mov
push
ds
or
sbb
out
pop
lret
test
lods
pop
sahf
xchg
mov
mov
out
push
test
inc
mov
cld
add
cld
sub
lret
mov
in
aam
jb
pop
sub
leave
fs
mov
sbb
in
mov
nop
jns
xchg
dec
push
int3
or
incl
ja
adc
xchg
xor
inc
inc
xlat
mov
nop
mov
and
jns
stos
mov
nop
xchg
xor
enter
fidivrl
in
vmwrite
mov
daa
mov
jns
inc
push
push
mov
shlb
orps
enter
lret
cmp
and
cmp
sbb
popa
adc
push
mov
dec
gs
jge
loopne
in
movsb
jb
rolb
add
xchg
popa
mov
cmp
aaa
js
outsb
nop
lret
lcall
mov
jle
or
sbb
ds
test
mov
push
jmp
xchg
aaa
mov
jmp
popf
dec
xchg
sub
cmpsl
test
repnz
inc
js
in
sbb
out
shll
push
orb
fsts
jmp
ss
dec
sub
inc
cmp
sbb
mov
pop
lahf
stc
cwtl
push
aam
push
dec
mov
sub
mov
pop
aas
fimuls
fstp
rolb
ds
xchg
adc
mov
jno
fisubrs
imul
dec
subb
and
and
cmp
stos
add
stc
cmpb
push
jns
and
call
lret
rorb
fnstcw
popa
push
push
clc
aas
out
cmp
and
into
add
scas
push
nop
dec
in
jo
jle
and
xor
test
sub
mov
call
xchg
out
jb
jmp
imul
sub
or
ret
dec
movsl
in
lods
lods
mov
mul
jmp
xchg
mov
faddl
xchg
ja
sub
adc
add
xor
sub
jns
adc
shlb
pop
bnd
jnp
lds
pop
dec
movsl
mov
sbb
repz
mov
loopne
aam
sarb
adc
push
push
mov
rclb
imul
push
popf
mov
notb
xorb
jno
add
enter
aaa
into
pushf
out
add
push
jle
ds
push
imul
hlt
pop
lahf
mov
into
mov
push
mov
push
or
xor
jg
out
test
out
rcll
fnstsw
stos
push
loopne
and
cmc
adc
pop
inc
dec
cmp
xor
adc
out
notb
call
push
shrl
sbb
cs
push
xor
repnz
dec
fnstcw
cmpsb
ss
loopne
test
ss
dec
testl
mov
xchg
into
cs
ds
test
aas
loopne
iret
out
jbe
jg,pt
aas
adc
es
stc
jb
push
mov
fnstenv
lcall
jmp
pop
or
add
push
inc
xor
dec
jl
mov
dec
dec
cmpsb
and
das
call
push
push
cltd
push
fstpt
orb
jmp
dec
rorb
pop
push
ret
and
push
incb
push
sub
dec
pop
mov
shlb
mov
lahf
js
push
add
out
das
out
fdivrs
inc
or
inc
add
xchg
cmp
jne
scas
xor
sbb
pop
inc
ds
jns
xchg
subl
js
fbld
mov
fists
push
cmp
pop
xlat
scas
movsb
jmp
mov
movsl
ds
movsb
xchg
enter
sub
in
mov
dec
fst
pop
xlat
sbb
sarb
mov
je
mov
mov
ficomps
pop
fidivrs
cmp
add
xchg
call
xor
inc
filds
jle
test
lock
push
jg
popw
push
xchg
fisubrs
xor
push
jmp
push
and
call
jns
sahf
enter
or
fidivrs
sbb
stos
mov
xor
sub
ds
push
mov
dec
dec
aaa
nop
xor
xor
and
addr16
ss
or
adc
push
or
xchg
mov
ficompl
in
sbb
adc
jno
dec
push
stc
enter
jmp
push
sub
inc
or
pusha
test
mov
mull
loopne
bnd
xlat
adc
in
xor
int3
lock
mov
lcall
stos
add
imul
xchg
mov
in
dec
mov
fwait
sahf
aas
int
jecxz
sbbb
xor
xchg
enter
fcoms
sub
rcr
sahf
push
pop
lock
pop
dec
cs
sahf
aas
sub
mov
pop
leave
push
sahf
lods
sti
ds
push
xor
rcrb
or
jmp
repnz
pop
je
xor
mov
pop
and
shlb
cld
sbb
or
adc
jle
cmp
mov
test
mov
dec
or
dec
cwtl
ss
cmpl
aaa
and
repnz
stos
shrl
das
jns
test
repnz
xchg
mov
push
stos
jns
dec
pop
or
mov
stos
shrb
xchg
xchg
inc
test
das
jns
dec
sbb
fdivrs
fidivl
out
wrmsr
xchg
sub
in
ror
xchg
out
mov
cmp
lock
aad
jne
ror
in
pop
sub
add
sub
and
fadds
out
addl
fnstsw
out
dec
insl
pop
das
push
mov
push
xor
push
outsb
adc
add
add
dec
push
adc
xor
pusha
sub
call
push
lahf
inc
xor
push
push
jo
push
mov
cwtl
mov
add
or
xchg
pop
jle
rcrl
out
insb
sub
xchg
shlb
andl
nop
int
loop
mov
sub
jne
insb
xchg
aas
jle
cmp
push
std
sbb
call
out
lds
push
das
adc
pushl
sub
and
push
shlb
cmc
xlat
sti
in
lcall
pop
stos
popf
cld
xor
push
sbb
cmp
les
fidivs
adc
cmc
or
and
nop
add
lahf
pop
sub
test
adc
inc
ljmp
pop
sub
pop
mov
adc
hlt
mov
daa
xchg
xchg
in
push
in
out
adc
push
imul
movaps
nop
mov
loopne
inc
out
push
and
add
outsb
sub
nop
ds
dec
lret
dec
decb
push
nop
cs
push
sub
adc
jmp
xor
xchg
sub
mov
in
out
pusha
or
js
cmp
in
dec
das
inc
push
mov
cmpsb
aas
add
lret
in
inc
cmp
or
and
in
sub
pusha
dec
cmp
test
cwtl
paddusw
mov
mov
ljmp
xchg
je
push
aas
mov
imul
out
sub
pop
mov
jle
inc
aas
mov
enter
aas
inc
lcall
out
or
nop
pop
jle
mov
inc
enter
and
add
jg
xchg
cmp
mov
sbb
mov
and
aaa
xchg
push
repz
sub
mov
mov
pop
jns
mov
and
nop
repz
movaps
enter
xchg
xchg
mov
mull
add
arpl
les
inc
or
jp
ja
cmp
inc
add
and
add
aaa
jmp
and
enter
and
push
cs
test
lahf
movsb
pop
insb
inc
test
xor
pop
and
lods
or
and
imul
je
mov
push
push
stc
sub
cld
faddl
notw
je
sbb
cmp
outsl
mov
xchg
dec
mov
es
pop
dec
dec
push
ljmp
mov
cmpsb
mov
add
xchg
push
subb
rolb
push
test
test
sbb
test
push
nopl
clc
xor
ds
mov
and
pop
pop
mull
jo
inc
ja
and
xor
cmp
push
pop
inc
ja
mov
repnz
pop
jns
je
lods
mov
and
pop
loop
and
mov
cmc
cs
and
or
cmp
jo
shl
mov
movsbl
jno
jmp
out
and
cmp
mov
daa
xor
push
jo
incb
rcr
jns
loop
inc
pop
mov
cltd
aas
rorb
clc
pop
ds
or
pop
push
adc
push
neg
sbb
sub
daa
inc
pusha
push
mov
adc
add
jmp
xchg
dec
mov
incl
les
filds
clc
push
test
adc
test
in
ds
inc
inc
jmp
sub
cli
unpcklps
mov
add
mov
pop
sbb
stc
sub
aam
out
xchg
push
adc
bound
push
inc
xor
add
pop
push
inc
pushf
inc
mov
or
pop
sub
push
push
mov
fisttps
mov
filds
add
add
ret
in
mov
pop
mov
xchg
jno
ret
cld
push
mov
movsl
jb
inc
inc
mov
and
pop
loopne
pop
jb
cmp
xor
and
inc
movsl
xor
daa
repz
addr16
push
mull
pop
enter
test
push
lock
sub
mov
scas
xchg
mov
sbb
sahf
int
jmp
add
or
mov
pushf
mov
pop
sbb
sub
cmpsl
das
inc
pop
pop
shr
cmp
xchg
push
cmp
mov
inc
out
inc
xchg
idivb
lock
add
in
lcall
daa
or
jns
out
push
cmp
jnp
imul
es
push
pop
mov
js
daa
fdivrp
cmpsl
pop
mov
daa
lret
in
jp
mov
es
ret
mov
cmp
push
xchg
and
rcll
js
sbb
mov
ja
hlt
add
enter
push
push
loopne
inc
int3
lock
add
push
xor
sbb
adc
mov
dec
fwait
cmp
in
xchg
xchg
add
je
mov
mov
daa
fimull
mov
or
jae
sbb
cmp
fldl
mov
addr16
inc
mov
sbb
jmp
adc
pop
out
addr16
add
and
popf
loop
xchg
inc
push
adc
push
ss
cs
pop
dec
rcll
add
sbb
movsl
jb
sub
mov
popl
repnz
std
mov
and
add
cmpsl
push
test
lret
sbb
int
push
test
pop
pop
ret
out
push
mov
nop
subb
sahf
out
inc
ss
repz
or
push
loop
les
stos
xchg
xorb
cmp
repz
dec
cmp
or
jns
iret
add
adc
out
sahf
mov
outsb
jns
out
pop
dec
inc
cmp
jl
out
push
add
adc
iret
repz
loopne
ret
mov
rcrl
cmp
xchg
dec
cmp
lcall
out
and
jns
out
fadd
mov
sahf
out
push
inc
sub
repz
push
push
add
and
fidivrl
pop
pop
fiadds
cmp
lcall
call
cmp
mov
xchg
sbb
cmp
repz
outsb
pusha
push
push
cmp
push
jns
cmpsl
stc
in
sbb
out
sahf
out
xchg
push
lahf
out
sahf
inc
sub
push
add
sbb
iret
repz
rol
mov
or
repz
xchg
jp
dec
ds
repz
ss
or
sahf
out
repnz
ret
jns
out
mov
push
sahf
out
sahf
cmp
push
push
mul
jns
not
ljmp
out
sahf
pushf
mov
dec
repz
mov
repz
repz
cmpsl
stc
cmp
sub
add
sbb
sahf
out
sahf
int3
shlb
out
jo
dec
ds
repz
push
into
decb
push
in
loopne
mov
adc
cld
sbb
lock
mov
xchg
cmpsb
mov
jp
push
pop
dec
cmp
jl
xchg
adc
sbb
mov
ds
mov
push
jnp
imul
sbb
cs
fcoms
sahf
out
iret
inc
push
push
fs
xchg
jns
out
mov
repz
out
repnz
adc
iret
repz
xor
push
data16
sahf
out
cmp
cwtl
push
push
dec
jge
out
sub
or
adc
push
mov
sahf
out
fs
dec
cmp
repz
out
add
adc
iret
repz
mov
pop
cmp
repz
cmp
push
push
jns
cmpsl
stc
cld
adc
call
sahf
out
scas
mov
jns
push
push
lcall
in
insb
pop
jle
sahf
out
xchg
movsb
mov
int3
fidivrs
out
ljmp
imul
push
push
setp
repz
mov
ret
out
add
out
lcall
repz
out
push
sahf
int
jns
mov
fsubr
add
adc
iret
repz
xor
jbe
cmp
xrelease
out
cmp
repz
mov
pop
dec
cmp
sbb
testb
jbe
jns
mov
repz
or
sub
dec
iret
repz
pop
jbe
sahf
mov
cmp
xor
cli
or
sbb
xchg
sbb
data16
xchg
adc
or
cmp
repz
je
cmpsl
out
in
repz
data16
push
mov
scas
add
add
inc
sub
enter
imul
and
ret
add
dec
es
push
aam
push
dec
push
lods
dec
cmp
repz
scas
scas
mov
repz
repz
iret
repz
enter
int3
int
iret
repz
iret
rcl
shl
cmp
repz
fsubp
out
repz
out
jmp
iret
repz
out
out
lock
repz
repz
cmc
test
cmp
idiv
stc
cli
sti
cld
test
pushl
out
sahf
cmpsl
push
add
add
push
pop
or
or
jns
out
or
push
movups
jns
out
adc
adc
sahf
out
sahf
push
pop
sbb
sbb
jns
out
sbb
push
pop
and
jns
out
and
and
sahf
out
sahf
es
xor
jns
out
jp
xchg
movsl
mov
jns
out
int3
in
add
repz
push
sbb
cmp
cmp
repz
xchg
repz
out
jmp
jns
out
dec
and
xor
sahf
pop
outsb
jl
lahf
scas
jns
out
ror
in
cld
repz
repz
dec
adc
xor
iret
repz
inc
dec
push
pop
outsw
cmp
repz
orl
mov
ds
ljmp
out
sahf
dec
pop
gs
lcall
in
repz
repz
dec
sbb
cmp
iret
pusha
jae
loope
in
ja
outsb
insl
insl
adc
inc
adc
xchg
mov
and
adc
std
add
jnp
test
pop
je
insl
gs
gs
pop
or
stc
sbb
add
loope
or
outsb
jne
fwait
jae
or
imul
push
das
cmp
adc
sbb
popa
jae
dec
add
mov
popa
push
inc
cmp
add
push
sbb
imul
add
loope
imul
dec
inc
inc
cmp
out
insb
stos
sbb
test
mov
add
aad
in
push
outsl
imul
or
jo
imul
addr16
popa
insb
jne
inc
or
jns
inc
xor
xor
cmpsl
insl
je
sbb
adc
outsw
aas
in
inc
js
xchg
mov
jb
push
and
jae
or
dec
or
dec
or
and
cmp
jae
movl
adc
dec
xchg
sbb
fisubrl
xor
aam
adc
xor
push
and
mov
and
cwtl
dec
or
subb
push
push
inc
inc
mov
dec
or
sarl
mov
addr16
push
jg
xor
in
add
pavgb
mov
sub
dec
fwait
pop
adc
daa
or
ret
addr16
or
inc
or
jbe
add
mov
sbb
int
lret
xor
ror
push
inc
mov
popf
ret
addr16
xor
lock
loopne
push
add
cltd
out
jl
cmpb
idivl
outsb
mov
add
xchg
push
pusha
inc
neg
ja
push
mov
shll
jo
xchg
iret
les
push
inc
adc
pop
flds
mov
loopne
adcb
sar
add
push
inc
mov
adc
lods
pop
pusha
pusha
incb
jl
mov
fildll
pusha
add
dec
add
pop
adc
sub
ret
scas
bound
push
jl
mov
fistpll
sub
add
mov
pop
adc
and
inc
inc
or
inc
xor
addl
sub
sahf
cmpsl
std
daa
add
mov
add
xor
push
inc
adc
lcall
aaa
add
shl
and
push
push
daa
inc
inc
sub
sub
mov
jo
loopne
bound
jb
inc
inc
and
inc
push
adc
inc
mov
out
mov
mov
lret
mov
mov
jno
sub
dec
inc
inc
and
push
inc
ss
push
inc
insw
je
adc
add
push
push
inc
ret
and
test
add
xchg
cmc
push
add
lock
icebp
scas
jge
pop
sbb
pop
repz
out
out
pop
mov
outsb
icebp
push
out
sub
push
jns
jnp
addr16
push
cli
add
add
add
das
xchg
test
cmp
or
xor
pop
add
add
fstpt
and
add
test
inc
add
pushl
faddl
jae
push
cmp
mov
std
and
int3
std
xor
push
add
add
mov
clc
and
jmp
push
nop
xor
add
decl
outsl
cs
stc
scas
add
cld
lret
divl
or
std
addr16
mov
outsl
cli
add
std
fwait
add
inc
add
and
xor
xor
dec
xor
mov
jo
call
add
add
mov
std
movsl
incb
add
add
cltd
add
sbb
mov
pop
std
imul
cmp
decl
add
add
add
add
add
add
lcall
add
add
mov
sub
fadds
jmp
lret
add
cld
dec
clc
mov
cmc
in
cld
mov
adc
jae
out
decl
sbb
std
aam
jbe
pop
add
add
add
clc
and
push
scas
cmc
stc
pop
pusha
add
add
pop
sub
add
stc
cmp
shr
incl
jo
lods
pop
lock
das
push
inc
add
pop
ljmp
xor
scas
std
mov
dec
add
incl
jne
aad
jge
popa
std
adc
sub
xchg
mov
call
loopne
lcall
std
add
in
std
imul
cli
std
cmp
icebp
cld
mov
enter
decl
mov
inc
ficoml
push
in
addl
add
mov
mov
xchg
push
add
add
add
add
arpl
add
lcall
mov
out
push
call
stc
jmp
clc
mov
cwtl
stc
pop
cld
jae
xchg
in
lcall
cli
mov
mov
daa
stc
sti
ss
movsb
cld
push
mov
ljmp
jnp
pop
add
je
or
xor
mov
or
incl
iret
push
les
dec
push
mov
add
add
decb
cld
and
shl
mov
sub
out
fsubrp
sub
ljmp
divl
cmc
inc
cmc
jo
cltd
sti
jmp
add
adc
jmp
or
or
or
push
fimuls
lahf
pmaxub
pop
adc
mov
adc
push
sbb
add
push
add
call
icebp
push
in
aaa
call
sub
add
add
mov
pop
cmc
dec
idiv
incl
clc
fcomi
jmp
lods
negb
xchg
cld
fldl
inc
pop
ret
or
pcmpeqd
dec
adc
adc
xchg
adc
sub
push
adc
adc
adc
adc
push
jae
dec
sete
add
aaa
sti
psubq
sti
imul
negb
repz
in
fsubrl
faddl
jge
xor
in
push
push
incb
sti
and
xlat
cld
test
or
adc
ds
and
sbb
rcll
adc
sbb
xchg
test
or
or
test
hlt
cli
decl
ljmp
loop
iret
into
shl
fcomp
loopne
repnz
sub
pop
jp
add
xor
test
sbb
sbb
sbb
outsb
push
bound
sub
pop
or
push
push
or
jg
push
pop
add
mov
repnz
out
lahf
in
jae
je
jmp
jmp
in
ljmp
imul
fadds
add
jle
add
call
or
pop
or
xor
sbb
cmp
sbb
push
dec
and
adc
ljmp
mov
cmpb
iret
add
add
add
add
icebp
mov
jmp
jmp
out
shr
mov
adc
pop
fidivrl
test
stc
jo
or
call
adc
adc
xor
repz
xchg
adc
sbbb
push
mov
or
add
incl
stc
jns
loope
lret
std
cmc
clc
jbe
incl
inc
stc
inc
repz
ljmp
mov
cld
in
loope
in
in
aam
daa
pop
lcall
or
or
jecxz
into
adc
adc
ds
adc
adc
push
daa
adc
ffreep
adc
or
rolb
cld
enter
xchg
clc
imul
jne
es
pop
cli
pop
stc
icebp
decl
clc
sbb
xchg
out
mov
pusha
call
mov
fldenv
cld
js
lds
filds
test
adc
push
lahf
adc
imul
adc
movb
adc
or
push
sub
cli
in
xor
cld
idiv
loopne
add
repz
push
das
testl
fsubrp
xchg
out
insb
out
mov
frstor
in
cmpb
icebp
add
adc
adc
adc
adc
adc
pop
lock
scas
adc
lret
adc
adc
mov
lcall
std
mov
stc
or
stc
sbb
push
sbb
out
jb
inc
repnz
stos
mov
in
adc
pop
jecxz
fcoml
rcr
stos
ljmp
adc
push
pop
pop
jmp
jmp
pop
popa
adc
xchg
adc
sbb
std
or
pop
femms
or
add
in
pop
and
or
xor
inc
cmp
mov
xlat
sti
outsl
imulb
ljmp
out
shr
sbb
cmp
cs
or
movsb
fdivp
xlat
outsb
aam
fdivrl
add
incl
ljmp
push
pop
sbb
adc
mov
mov
adc
mov
call
push
adc
or
or
std
mov
test
aam
movsl
std
cmpsb
sti
cld
mov
mov
in
mov
xlat
loopne
fldl
aad
ror
xlat
popf
incl
je
repz
or
adc
adc
push
lock
xor
pop
sub
dec
or
inc
sbb
push
xor
or
cld
jmp
or
int3
pop
in
add
loopne
lcall
pushl
aam
jle
fcomip
inc
hlt
mov
jecxz
fisubl
sub
fisttps
lock
enter
xchg
stos
pop
aad
bound
lds
adc
adc
pop
cld
pushl
inc
btr
push
adc
orb
push
pusha
add
sbb
loopne
arpl
data16
incl
push
add
stc
and
out
out
loopne
fstps
push
push
ret
mov
out
and
pop
cmp
call
mov
sbb
mov
rorb
ret
or
scas
stc
push
inc
adc
pop
mov
ret
or
or
decl
lea
cltd
add
or
lock
mov
xor
int
sti
insl
lds
std
ja
xchg
or
adc
sbb
rcrl
mov
call
pop
adc
xlat
or
push
mov
and
scas
inc
pushl
cld
fucomip
pop
cltd
or
test
xor
mov
lds
pop
or
add
jg
stc
cmp
cmp
test
lds
jb
and
add
or
mov
lret
adc
sbb
sbb
adc
xchg
or
push
sub
mov
adc
or
out
add
or
or
or
mov
or
add
decb
in
loopne
fimull
lret
pop
loope
cmc
cmpsb
add
pmulhuw
xchg
cmovge
decl
push
or
adc
iret
or
packssdw
out
cli
incl
fildl
xchg
add
sbb
mov
and
or
or
pop
jp
nop
add
ret
out
push
loope,pn
fscale
leave
dec
les
jmp
sbb
sbb
sbb
sbb
aaa
pop
pop
push
bound
hlt
add
add
pop
call
add
out
adc
or
add
add
mov
pop
or
out
cli
adc
xor
jbe
adc
adc
adc
repz
xor
fwait
jecxz
faddl
jmp
les
aad
icebp
cmp
adc
push
adc
cld
sub
add
ds
push
add
and
hlt
ljmp
movsl
add
std
pop
lcall
push
test
pop
adc
call
lock
decl
cmp
clc
lods
in
in
jge
xchg
fsts
int3
mov
jmp
jmp
cld
decl
push
and
and
add
decl
cli
stos
dec
add
or
and
add
std
idiv
mov
cld
add
or
or
filds
outsb
mov
jecxz
loopne
incl
xchg
into
jle
leave
div
mov
and
sub
add
sti
jmp
in
inc
repz
rorb
gs
or
add
push
add
rorb
or
out
or
push
or
add
imul
out
fmul
push
leave
pop
shlb
std
call
adc
stos
cs
pop
add
call
sar
in
and
leave
add
pop
pop
push
inc
push
sub
sbb
add
dec
push
into
push
mov
jmp
loop
sbb
dec
sub
pop
hlt
add
fldenv
rolb
neg
test
dec
sub
das
xchg
ss
jmp
mov
clc
adc
sbb
inc
loop
lock
stc
loop
and
out
faddl
ret
ljmp
add
adc
push
dec
or
xchg
jg
sbb
addr16
inc
sar
sub
ror
add
pop
sti
xor
scas
and
sahf
xor
cld
sbb
sbb
dec
std
clc
aam
jg
lds
clc
cli
mov
push
add
push
add
add
push
fdivr
ljmpw
cmpsl
adc
push
and
or
add
fnstsw
ror
ret
push
iret
repnz
sub
ja
lcall
jmp
inc
xor
loope
push
add
loope
fistl
ljmp
sub
or
adc
imul
adc
adc
xor
mov
mov
cmp
ss
negb
jmp
jecxz
fnstcw
mov
cmc
jmp
shlb
call
inc
mov
cmp
sub
call
fstpl
fcoms
pop
add
and
mov
les
insb
ljmp
jmp
and
sbb
xchg
push
inc
fcomip
mov
in
fcmove
shrb
leave
push
mov
dec
fiaddl
clc
adc
cwtl
es
xor
adc
cmp
in
inc
xor
cmp
lds
or
push
sbb
mov
cmc
fdivrs
in
icebp
or
sub
ljmp
es
and
and
sbb
adc
or
jecxz
stc
leave
les
popa
jmp
add
push
icebp
daa
loope
in
test
xor
cmp
call
lcall
loop
in
fists
xlat
stc
fimull
add
cli
cld
pop
pop
sub
cmpsb
pop
inc
and
pushl
mov
mov
mov
loop
xor
test
inc
ret
ja
pop
fiadds
arpl
or
das
ret
inc
inc
inc
inc
xor
sub
push
aas
or
adc
mov
xlat
rcr
fldenv
and
sbb
mov
xor
jo
pop
decl
sti
stos
call
ror
ret
aaa
mov
lods
in
std
call
and
xor
xchg
aaa
xor
pop
inc
call
out
adc
fistl
lret
pop
iret
mov
fiadds
icebp
adc
out
cli
incl
xor
add
or
sub
push
idivb
insb
ljmp
pop
iret
out
out
ret
or
into
lock
ljmp
push
lcall
cmp
xor
sub
lods
repnz
xchg
lcall
mov
roll
mov
add
adc
sbb
inc
aaa
das
pushl
shlb
jno
ja
int3
sti
sub
and
mov
adc
mov
jne
sub
sahf
sbb
pop
loopne
jmp
popa
sub
ds
xor
push
xor
fldl
inc
incl
ljmp
jno
push
shlb
xlat
loopne
das
add
xor
xor
cmp
xor
mov
pop
mov
jne
insb
in
aad
enter
mov
mov
jg
adc
daa
push
sub
cmp
ret
or
cld
mov
ljmp
call
std
dec
xlat
mov
mov
pop
test
xor
aaa
lret
ss
lcall
adc
push
in
adc
ret
lcall
icebp
addb
cs
push
ds
dec
push
sub
shl
jmp
call
mov
sbb
add
fcomip
pushl
out
inc
pop
jg
lods
sub
xor
bnd
xor
incl
in
jns
ror
stos
ret
ds
in
lcall
and
jg
mov
lret
xor
push
push
add
leave
out
push
call
in
incl
pop
iret
call
jmp
xor
cmp
pushl
push
and
in
dec
push
mov
aam
out
sar
mov
in
sbb
sub
and
fsubrs
ja
xlat
push
mov
stc
xchg
cmc
shl
mov
fdivl
xlat
cwtl
aam
rol
into
movsb
iret
adc
aaa
clc
push
adc
cmp
xlat
push
sti
mov
cmc
es
int
mov
int3
or
sub
pop
pop
sub
stos
aas
scas
fildll
cmp
ficompl
ret
stc
cmp
push
jecxz
in
fiadds
loopne
fsubl
loope
stc
push
psllw
fsubrl
pop
pushl
fildll
leave
sbb
dec
icebp
shl
sbb
scas
outsl
mov
shl
add
adc
lea
pushl
std
inc
test
sub
sbb
or
cld
loop
ljmp
cmp
fildl
neg
lcall
cld
jg
or
push
out
dec
ss
push
cmp
adc
pop
out
fstps
pushl
int3
mov
mov
jg
arpl
in
movsl
cmp
inc
je
mov
js
sbb
incl
imul
fmuls
lret
rcll
out
add
sbb
sub
jmp
inc
xchg
mov
icebp
adc
outsb
loopne
dec
xor
mov
scas
and
add
xor
inc
or
dec
pusha
inc
xchg
jmp
add
jmp
pop
adc
add
out
jmp
filds
add
jg
leave
test
fcmovne
insb
shlb
in
testb
lcall
inc
push
push
xor
mov
iret
pop
mov
mov
jecxz
ljmp
imul
addl
xor
add
inc
mov
popf
sub
mov
out
cmpsl
jmp
arpl
cmp
push
shll
adc
inc
aad
out
add
aaa
sub
lcall
divb
sub
out
ss
xor
or
int3
adc
in
mov
mov
cmp
mov
cmp
das
xchg
sub
inc
fdivs
or
decl
in
repz
xlat
popf
flds
call
sarl
pop
mul
push
xchg
push
call
pushl
sub
sti
std
or
or
lret
xchg
mov
mov
adc
jge
adc
test
ss
push
mov
push
notb
fmul
dec
fwait
jmp
rol
iret
add
xchg
fdivs
frstor
sub
daa
cmp
cmp
ljmp
fcompl
repz
into
or
mov
test
mov
jnp
lds
decl
push
repz
mov
cs
in
aam
int3
push
repnz
or
into
call
sbb
mov
and
es
inc
dec
sahf
inc
es
pop
and
int3
roll
shll
les
ja
pusha
sbb
mov
pop
sbb
mov
fldl
cld
jmp
mov
fstl
jo
sbb
fs
data16
js
and
pushl
cld
ja
ds
inc
addr16
jo
xor
adc
aad
int3
cmp
inc
pop
sarl
dec
fdivrl
sti
sti
mov
jb
mov
dec
out
lea
mov
call
repnz
jge
pop
lret
pop
shrl
mov
int3
jne
xchg
repz
or
stc
xor
sub
incl
inc
mov
repnz
sbb
or
aad
into
in
mov
leave
mov
pop
call
add
dec
sub
fldl
dec
sbb
xor
rcll
mov
loop
mov
rcll
ljmp
decl
mov
out
xor
popa
aaa
test
add
rcrb
mov
clc
fildll
cs
push
sti
push
jp
les
and
cmp
mov
int3
mov
mov
aas
cld
loopne
sbb
popa
sub
inc
cmp
cltd
dec
push
ds
xor
mov
sub
loope
int
iret
outsb
leave
xchg
ret
test
out
jp
shll
sub
cmp
inc
cmpsb
push
inc
pop
int3
push
add
fwait
sub
or
call
icebp
inc
stos
sarb
mov
ss
mov
dec
ds
dec
dec
dec
jmp
cmp
xor
dec
loop
shlb
shufps
lcall
mov
sbb
and
adc
dec
inc
fmull
stos
pop
aam
les
pop
jmp
call
jecxz
mov
stos
leave
ret
pop
loope
push
rcl
xor
inc
je
cld
mov
xchg
inc
mov
scas
sub
adc
add
fldcw
scas
rcrb
test
mov
shlb
in
ret
popa
sti
mov
pop
dec
sbb
rclb
decl
decl
ds
insl
add
jecxz
lret
int
mov
loop
lock
mov
decl
bound
mov
cmp
pushf
sub
sbb
and
arpl
add
popf
call
mov
lds
sbb
xchg
or
and
arpl
ret
inc
cli
dec
sbb
mov
xchg
push
jmp
pop
mov
mov
lcall
and
mov
ljmp
fidivs
mov
jp
rcrb
adc
clc
sbb
xchg
sub
aam
pop
fdivrl
rorb
mov
es
ljmp
inc
ljmp
or
out
in
fimull
cmpb
leave
in
das
cli
call
pop
adc
sub
cmp
mov
xor
pushl
enter
out
sahf
jmp
xchg
ficompl
out
incl
psubd
adc
and
xor
roll
inc
es
and
adc
cmc
clc
clc
fsqrt
movsb
mov
mov
mov
lret
stc
leave
adc
es
sbb
ss
add
cwtl
or
adc
or
cmp
fdivr
pushl
aad
pop
ficoml
nop
clc
adc
je
or
or
aas
pushl
incl
notb
xchg
cmc
sbb
cmp
test
iret
repz
hlt
fwait
or
subb
xor
ljmp
mov
rorl
cmp
push
pushl
hlt
xchg
jmp
jecxz
pop
loope
fnstsw
fcmovbe
aad
into
popf
into
push
jmp
add
mov
sbbb
inc
jp
nop
and
fcmovne
mov
pop
mov
ret
sar
hlt
call
fs
aam
addr16
add
xor
sbb
enter
call
jmp
push
sub
clc
lock
out
je
mov
dec
adc
and
ljmp
iret
inc
sub
cmp
sahf
adc
das
adc
cmpsb
xor
pushl
and
xchg
fcmovnu
lret
inc
cmp
in
or
bound
mov
inc
and
sbb
das
clc
sbb
pop
inc
push
mov
lret
add
clc
shr
fistl
jmp
sarl
fadds
stc
mov
fwait
sub
mov
incl
cld
cs
sbb
or
loopne
xchg
dec
out
pop
cli
stos
cld
les
clc
popa
add
lcall
fistpl
inc
or
or
or
lcall
movsb
or
inc
push
mov
xchg
hlt
repnz
sahf
ficomps
inc
iret
loopne
ljmp
add
push
out
and
cs
add
das
jecxz
ljmp
ret
lock
mov
mov
sbb
sbb
and
xor
cmp
add
add
add
push
call
adc
or
xchg
cmc
push
ds
fidivs
aad
rcl
int3
in
repz
popf
push
jecxz
aas
sbb
push
outsb
and
jo
jb
cmp
icebp
movsl
jmp
repz
divl
sahf
mov
pop
mov
xor
add
jle
mov
or
adc
or
push
out
xchg
jecxz
fbld
xlat
fldl
ror
rcrb
decl
lcall
add
pushf
sbb
push
jbe
or
insl
adc
or
aad
jo
cmpsb
icebp
enter
push
stc
mov
xchg
loopne
mov
adc
pop
lods
add
call
adc
jmp
outsl
add
idivl
imul
cmp
out
loopne
loope
loop
fidivrs
lahf
jecxz
testb
out
push
dec
or
adc
shrl
and
pop
push
ljmp
jbe
repnz
out
in
ljmp
arpl
bswap
adc
lock
call
push
push
adc
mov
add
cli
shl
mov
mov
fimull
in
enter
enter
out
mov
mov
enter
dec
test
cmp
add
repnz
loopne
aad
call
and
add
cld
sbb
cmp
in
push
push
sti
pop
gs
mov
push
sub
das
adc
push
cmpsb
or
xlat
icebp
and
inc
aam
call
loopne
divl
pushf
iret
inc
in
test
xchg
push
adc
enter
test
mov
mov
lcall
inc
and
add
jmp
shr
ret
sbb
jmp
cld
add
lcall
sbb
sbb
and
out
imul
push
pop
cld
shr
fcomip
aam
leave
rol
cltd
mov
sbb
xor
popf
push
cltd
cmp
push
jno
mov
js
jo
push
pop
xor
adc
out
imul
int3
pop
or
sets
sub
ljmp
sbb
or
gs
sar
fcomip
mov
and
jg
jno
and
sub
mov
dec
or
inc
pop
dec
ljmp
jnp
jp
outsb
xor
push
or
out
into
dec
mov
xlat
test
fsubrp
or
pop
cmp
ljmp
xor
ss
ss
xor
mov
or
pusha
ljmp
stc
mov
push
mov
mov
mov
add
ljmp
sbbb
inc
cmp
popa
inc
addr16
fwait
pop
call
push
pop
cmp
movaps
xchg
sub
cmpsl
jo
fwait
mov
lret
adc
int
mov
icebp
call
xor
cmp
xor
sub
and
adc
add
push
fcmovbe
pop
in
mov
push
int
fcompl
in
repz
or
sub
jbe
mov
inc
add
adc
lcall
jecxz
fdivp
iret
fwait
jo
les
inc
mov
icebp
cmp
imul
dec
sub
sub
cmp
fstl
call
out
arpl
mov
xchg
leave
jp
int
insl
repz
sti
sub
adc
add
incl
jmp
xchg
adc
sub
xor
mov
pop
ss
or
iret
cmp
xor
pop
aad
in
lock
and
rcll
jne
xor
int3
pop
mov
sub
int3
push
or
ljmp
sbb
js
decl
cli
lock
arpl
mov
idiv
out
dec
jmp
decl
ret
repnz
jns
jecxz
imull
pusha
aas
test
jno
sbb
insb
push
mov
sti
xchg
fcos
pushl
mov
mov
mov
enter
in
hlt
sti
fimull
fs
sbb
cltd
and
call
cmp
push
xor
clc
rdtsc
decl
hlt
dec
in
shll
dec
ret
sub
xchg
shll
into
fisttps
stos
ret
push
rcrl
xchg
ret
push
mov
bound
cld
jnp
ds
xchg
push
and
test
movsl
test
sarb
add
sub
aas
sarb
dec
jbe
push
dec
jmp
dec
dec
inc
jle
je
pop
out
mov
mov
xchg
jmp
scas
imul
add
mov
std
and
in
cmp
lcall
dec
imull
mov
mov
mov
mov
ja
das
sahf
jno
xor
xor
shrl
popa
aas
fists
bound
mov
dec
push
out
incl
out
ds
nop
mov
jae
mov
lret
decl
lock
std
adc
pop
insb
adc
add
ljmp
sub
icebp
cmp
aas
jmp
sbb
inc
leave
ljmp
lods
push
ret
add
and
lcall
mov
std
aas
loopne
aam
xlat
push
sbb
xor
and
mov
xchg
cmpxchg8b
jg
cwtl
aad
inc
loopne
call
adcl
xor
ficomps
pushl
jmp
inc
clc
jp
jno
sub
aas
cmp
xchg
es
or
jmp
out
rorb
flds
in
add
shrb
daa
dec
and
faddl
or
in
push
scas
adc
cli
cwtl
out
clc
out
jo
sub
mov
repnz
mov
pop
ret
add
not
repz
jl
das
sar
sar
test
mov
xchg
fdivrl
xor
std
and
decl
aad
fiadds
cld
decl
xchg
or
adcl
pop
jl
imul
push
sbb
cld
sbb
aaa
sti
testb
jmp
sub
mov
mov
stc
rep
sti
push
cld
imul
jge
xchg
aam
in
hlt
mov
in
stos
call
cmp
push
call
hlt
and
das
int
lds
incl
rolb
clc
mov
and
xor
sub
xor
and
das
adc
mov
std
std
repnz
inc
loopne
ljmp
cmpsb
call
bsr
mov
les
leave
sti
rcll
xor
pushf
imul
insb
fldl
sbb
mov
add
xchg
insl
popf
xor
inc
adc
es
jg
aas
or
cmp
aaa
adc
push
ss
das
enter
xor
loop
aad
enter
push
std
inc
aas
lcall
loop
loopne
int
mov
pop
xorb
jmp
jg
jl
jo
inc
out
push
dec
jmp
push
xchg
mov
xchg
mov
ljmp
and
dec
fiaddl
cmp
stc
xor
and
push
shl
push
roll
sub
lea
lret
mov
fs
mov
jmp
out
clc
push
xchg
or
inc
insb
dec
lcall
gs
sbb
jl
shll
mov
ja
test
shll
incl
inc
dec
cltd
inc
inc
inc
dec
xor
jb
std
fcomip
mov
rorb
inc
ds
leave
and
into
push
fildll
mov
push
mov
clc
icebp
shl
lods
mul
adc
and
imul
adc
and
lock
cmp
nop
inc
hlt
inc
nop
xor
sbb
int3
out
sub
push
xlat
lcall
sub
daa
push
daa
pop
es
pop
cmp
mov
jbe
push
or
jg
sbb
scas
pop
jmp
loope
fimull
xlat
cld
fcom
scas
fisubrl
fisubl
decl
sbb
jae
or
and
sub
es
sub
jecxz
je
call
test
inc
lds
mov
sub
or
sub
sub
jg
and
sbb
fwait
lock
cmp
fcmovnb
sar
fbstp
mov
outsl
mov
jl
fstl
inc
adc
or
aas
lcall
adc
mov
cltd
and
sub
arpl
inc
adc
add
dec
fcompl
int3
inc
lds
jns
pop
loopne
jmp
or
stos
sub
and
pop
stos
sbb
pop
repnz
add
fcomip
aad
cmp
sbb
roll
leave
daa
aam
call
rclb
lcall
lret
and
adc
and
ds
jae
lods
repnz
cli
xor
call
das
jle
cltd
fcomip
pop
xchg
add
call
fsubl
dec
add
test
ljmp
add
add
add
pop
test
or
roll
mov
rcrb
call
cli
pop
pop
daa
sbb
and
sub
sbb
call
shl
inc
fsubr
jmp
ljmp
xor
dec
je
xor
into
add
into
sub
int3
xor
inc
loopne
xlat
cwtl
out
stc
pop
push
pop
pop
or
pop
sub
or
sbb
call
mov
std
jno
out
ffree
loope
ljmp
sbb
mov
mov
test
stos
andl
clc
mov
shrb
dec
adc
scas
cli
push
pop
lods
inc
aas
push
or
rol
ret
aad
sbb
xlat
lock
mov
push
pop
jg
out
adc
aad
loope
pushl
pop
cmp
jle
fdivr
push
add
inc
stc
aad
push
out
sbb
out
mov
inc
add
pop
repnz
out
fistl
sub
imul
cld
mov
shlb
inc
mov
fs
push
cmp
daa
push
cmpsb
pushl
aam
mov
outsl
mov
xchg
ljmp
int
lcall
ss
and
es
sub
lret
adc
mov
fs
repz
lods
hlt
cld
divb
cmc
in
dec
in
ljmp
loop
fsubr
fisubl
fxch
push
int
in
pop
adc
lea
pop
push
das
fiaddl
push
aam
shr
shrl
ret
jg
pop
int3
lret
mov
addr16
iret
fcomip
add
and
shlb
repnz
or
add
mov
push
jmp
or
lcall
std
cmp
jmp
mov
fistpl
decl
rcrb
add
cmpsb
pop
fcoml
scas
and
add
pop
out
push
dec
inc
pop
sub
adc
sti
je
cli
leave
divb
lcall
hlt
or
and
sbb
push
lret
bound
pop
or
sbb
sub
adc
adc
push
fdivl
inc
gs
lret
into
rolb
js
push
out
in
mov
sub
fwait
inc
mov
popa
inc
sub
xor
sbb
ret
loop
lds
stos
mov
lcall
jbe
testl
adc
push
add
hlt
lcall
cmp
push
cwtl
cmp
inc
and
and
or
mov
das
adc
lcall
into
push
repnz
jmp
xchg
iret
in
mov
pushl
or
cmp
push
inc
pop
cmovb
and
or
ljmp
add
sbb
out
fcompl
cli
jb
sahf
sti
jecxz
lods
sbb
mov
lcall
ds
sub
in
int
mov
mov
inc
jne
fucomp
divl
lods
mov
sti
mov
int3
add
sbb
daa
in
xor
inc
xor
dec
mov
or
not
in
rolb
fdivs
xor
addr16
jns
sahf
ficomps
and
xor
test
iret
inc
or
sbb
xor
push
cmp
lock
call
test
sub
cmc
mov
adc
sbb
popa
std
add
cmp
insl
or
decl
or
cmp
shl
dec
or
adc
ds
jmp
inc
dec
sub
dec
add
jmp
fldt
mov
mov
int
out
cld
pushl
cmp
inc
inc
dec
in
dec
repnz
test
sbb
add
pushf
loop
in
pushl
push
and
jecxz
fnstsw
mov
cmc
mov
inc
add
push
lods
or
or
out
ljmp
jmp
sub
and
lcall
shl
mov
mov
shrb
mov
cmp
popf
inc
jge
fwait
sbb
shrl
clc
in
out
add
stc
jp
dec
cld
inc
stc
mov
repz
jg
mov
fdiv
movsb
std
stos
add
cs
cmc
add
call
idiv
jb
or
xor
cmp
ja
insl
pop
cmc
decl
sbb
mov
scas
scas
mov
call
xor
xor
mov
and
adc
add
out
aam
lret
cli
xlat
cld
orb
adc
mov
pop
jle
out
out
jmp
mov
hlt
pop
adc
cs
cmp
jbe
pushl
mov
pop
push
adc
dec
loop
stos
and
adc
lock
add
mov
mov
and
ljmp
pushl
lcall
iret
test
push
in
js
out
dec
add
or
adc
aam
decl
sar
lahf
repz
out
or
jge
pop
add
add
add
cli
mov
mov
in
dec
push
mov
add
sbb
sub
daa
dec
into
dec
mov
sbb
jmp
mov
jg
aam
push
nop
loope
repz
adc
test
test
cmp
stc
cmc
repnz
jmp
sti
xor
iret
push
xor
and
mov
imul
adc
mov
cli
mov
mov
xor
sbb
outsl
in
lcall
outsb
cwtl
into
movsl
lret
pop
idivl
pop
icebp
call
movsl
sbb
or
mov
mov
sbb
sub
sub
test
sub
push
jmp
in
push
stc
stc
call
push
fiadds
movsl
stc
pop
cli
fs
sub
fprem
aas
lods
or
sbb
decl
daa
pop
das
add
pop
stos
push
outsl
cli
add
dec
call
mov
imul
out
cmp
es
das
out
pop
repz
out
and
pop
loopne
loop
hlt
pop
add
push
push
enter
push
ss
incl
and
sahf
test
das
out
pop
out
fdivp
fbld
fidivl
jecxz
call
ljmp
push
test
or
mov
out
ljmp
dec
and
sbb
sbb
clc
mov
loope
in
in
in
xor
ljmp
nop
fwait
hlt
xor
test
pop
icebp
dec
out
xlat
dec
shl
loopne
cmc
fiaddl
icebp
call
pop
dec
arpl
aaa
jns
mov
add
mov
incl
enter
out
rolb
or
mov
incl
sbbb
sbb
adc
int
cmp
mov
mov
add
sti
push
cmc
adc
aaa
ljmp
insb
out
jmp
push
fcmovne
fmul
dec
in
repnz
decb
adc
and
cmp
jbe
add
inc
cmp
and
pop
inc
jmp
cmpsb
mov
mov
cmc
mov
cmc
push
or
adc
sbb
push
mov
adc
adc
lcall
adc
adc
xchg
and
sbb
jmp
add
fsubs
out
into
mov
fstl
jmp
in
fnstsw
iret
out
iret
cli
pushl
adc
pop
dec
sub
jae
arpl
or
sub
out
fsubl
mov
add
pop
fsubp
sbb
das
push
sbb
xor
sahf
and
and
sti
daa
mov
and
or
cli
jecxz
xlat
nop
into
mov
and
iret
push
icebp
pushl
cld
loopne
jmp
repnz
dec
fcomps
incb
sbb
daa
cmp
call
jmp
outsb
sub
dec
subb
push
ret
in
scas
sarb
test
dec
repnz
lcall
pop
nop
sbb
sbb
and
sbb
jnp
adc
call
adc
out
ficomps
xchg
aam
shrb
or
jo
jecxz
jmp
mov
out
sub
lods
repz
push
repz
jp
dec
sub
cmp
inc
push
inc
ljmp
and
or
jle
and
pushf
mov
mov
mov
rolb
jno
imul
jnp
or
inc
sub
jecxz
in
adc
adc
cs
jbe
xchg
pxor
incl
clc
ljmp
out
xor
and
xlat
iret
fldcw
lcall
sbb
shl
out
out
icebp
add
or
pop
loopne
pop
repz
out
and
out
mov
es
sub
je
cmp
inc
jg
flds
enter
shl
addr16
add
adc
sbb
and
jmp
adc
or
cmp
add
test
ja
cld
clc
sbb
hlt
sbb
loope
and
mov
cmpsb
loopne
ficomps
in
sahf
scas
add
add
or
fimuls
inc
or
mov
mov
mov
adc
sbb
vmwrite
jmp
add
ljmp
dec
in
in
icebp
ljmp
and
icebp
stos
ret
adc
inc
imul
testl
adc
adcb
pop
jae
push
or
push
jecxz
push
fisttpll
shl
clc
rolb
jecxz
idiv
lcall
mov
pop
pop
js
xchg
and
push
jns
mov
in
loope
in
icebp
cmpsb
push
and
out
clc
subb
xor
es
xchg
add
out
mov
into
call
data16
in
sar
push
fdiv
add
pop
and
lret
push
cli
sub
shl
mov
divb
add
pop
ljmp
into
and
movsb
jg
lcall
add
adc
es
je
ljmp
and
aad
loope
cmp
xor
out
sub
push
stc
jg
add
push
aas
aas
shrb
push
hlt
jp
int
lret
fmul
sbb
lahf
call
xlat
inc
adc
jmp
cmp
jecxz
int
imul
call
ret
lcall
testl
ret
and
adc
sub
jmp
out
aad
mov
adc
dec
incl
adc
insl
bnd
mov
cmpsb
mov
add
fldln2
push
add
ljmp
repnz
dec
aad
test
push
cmp
xchg
repz
in
fnstsw
loope
in
xlat
clc
incl
movb
stos
add
lcall
add
jae
and
aam
add
push
adc
and
lcall
xor
loop
aaa
or
mov
adc
cld
sti
stc
xchg
sti
mov
out
cli
push
push
adc
fsubp
jbe
int
ljmp
ljmp
and
bound
cmp
ljmp
mov
sti
cld
jmp
fcoml
mov
test
gs
call
jb
into
push
fiaddl
jbe
push
adc
pop
lret
add
stos
add
or
scas
decl
adc
adc
lods
pop
and
loop
dec
cmc
push
out
xchg
out
mov
in
jnp
dec
out
dec
repnz
out
xor
dec
in
hlt
ftst
xchg
clc
add
movhps
mov
lret
inc
dec
inc
inc
xor
sub
cli
mov
pusha
aam
clc
push
in
push
int
pusha
frndint
sub
add
or
mov
sti
or
push
call
std
push
pop
sbb
nop
sub
aaa
mov
push
mov
in
fcmovnu
xor
fcomip
call
gs
incl
add
in
loop
sarl
stc
arpl
pop
cmp
jp
mov
sbb
add
lock
shrb
or
pop
iret
js
lahf
out
cmpsb
xor
or
sub
testl
lods
fidivrs
out
decl
fldl
mov
jg
inc
ss
dec
pop
push
repnz
cmp
mov
push
flds
mov
cwtl
iret
std
loop
testb
push
push
lds
or
out
fisttpll
fchs
repnz
or
and
mov
imul
mov
cld
mov
lret
sbb
dec
xor
loope
mov
and
sbb
fwait
hlt
dec
jmp
sub
or
sbb
jg
xor
inc
pop
ds
cmp
push
pop
orl
adc
stos
enter
fwait
dec
ret
fldenv
mov
push
adc
adc
repnz
cmc
shl
loop
jp
or
inc
repz
or
and
dec
cs
inc
sbb
pop
jmp
loop
rcll
roll
fcomip
fdivl
push
lock
add
pushl
fcoml
fcoms
mov
mov
dec
sub
push
dec
or
add
ljmp
sti
cld
out
clc
jmp
out
push
adc
ret
cli
daa
cmpsl
cld
push
add
lcall
or
testl
in
icebp
lcall
aas
loop
loope
lock
popf
pop
sub
pop
mov
add
push
test
and
adc
mov
or
xchg
sbb
or
sbb
mov
adc
incl
dec
clc
sbb
push
lock
hlt
sahf
lock
inc
push
mov
out
out
imul
sbb
hlt
sti
aad
sti
in
out
lock
and
sbb
sbb
add
cld
push
repnz
ljmp
iret
addr16
pop
daa
fcompl
add
adc
xor
sub
lcall
or
jbe
in
in
out
repnz
es
or
adc
or
std
fcomip
fdivp
test
push
in
in
jmp
add
push
std
or
inc
and
mov
adc
xor
call
stc
lahf
add
decl
pop
or
aam
jecxz
outsl
icebp
daa
out
inc
in
shl
fcmovnu
xlat
mov
mov
xchg
mov
ja
cmp
daa
sbb
push
sbb
ljmp
sbb
cwtl
push
add
xchg
stc
in
hlt
jl
jg
fdiv
loope
pop
out
call
loopne
out
stos
mov
std
dec
or
sbb
sti
sbb
mov
cli
or
or
add
lret
jl
std
jl
mulb
jo
out
lods
out
mov
lock
push
into
out
mov
jmp
cmc
push
imull
mov
add
fs
cs
xor
das
in
sub
and
xchg
pop
jge
push
out
fists
fcomi
out
repnz
insl
pop
ja
or
or
jg
rclb
or
adc
inc
sbb
sbb
pop
fstps
insl
adc
fsincos
xlat
repz
jmp
insb
stc
add
enter
inc
incl
cli
pop
repnz
incl
ror
leave
in
iret
or
sbb
inc
ret
inc
subb
pop
xorb
add
push
stc
sarb
fldcw
das
pop
sti
testb
push
adc
or
cld
mov
add
add
decl
pop
xchg
sbb
adc
or
std
xor
out
mov
div
xchg
hlt
xor
ljmp
mov
push
mov
repz
dec
out
shlb
fcomip
jmp
pop
jmp
mulb
and
cs
xchg
sub
and
jp
loopne
push
sti
icebp
mov
call
out
out
push
add
pop
mov
add
std
sbb
mov
icebp
pop
out
push
repnz
cli
adc
lahf
sbb
push
sbb
es
pushl
sbb
xchg
mov
mov
xchg
std
in
dec
testl
ljmp
ja
add
ljmp
popa
out
sar
add
add
add
decl
das
xchg
push
int3
or
adc
add
cli
imul
adc
aas
sbb
push
adc
addr16
icebp
pop
out
fbstp
cmp
mov
pop
in
rep
add
orb
outsl
pushl
sbb
adc
or
add
jg
mov
cmpsb
add
fcoms
pop
pushl
out
pop
push
mov
add
fs
outsb
in
loop
ficoms
in
sbb
pop
icebp
repnz
pop
outsb
push
adc
sbb
or
add
pop
ljmp
fstpt
in
stc
sar
pop
cmpsb
ljmp
daa
imul
cli
js
lock
call
insl
stc
inc
add
add
lcall
push
sahf
notb
call
out
dec
sbb
cld
xchg
add
or
push
mov
das
sbb
pop
cmp
and
mov
push
adc
lahf
out
in
in
out
sub
cmp
dec
ja
incl
or
or
or
test
sbb
lcall
incl
cmp
inc
fstpt
xor
js
xchg
push
push
dec
pop
pop
and
sub
sbbl
push
cld
insl
or
push
cmpb
divb
push
lret
cmc
pop
cli
mov
loope
mov
repz
jnp
push
repnz
repz
clc
addb
loop
ud0
call
add
pop
sbb
in
or
mov
xchg
out
mov
adc
test
std
mov
fwait
or
stos
call
and
or
mov
iret
loop
loopne
out
jmp
ljmp
clc
daa
push
push
or
or
adc
sbb
push
pop
or
scas
add
pushl
add
clc
adc
out
jmp
out
or
mov
repnz
clc
scas
xor
loopne
cli
movsb
in
add
jp
or
pop
sar
out
add
jmp
sub
cmpsl
add
dec
add
imulb
or
lods
sub
out
add
clc
gs
lcall
sub
or
jbe
cmc
cltd
clc
push
call
inc
fwait
add
add
cld
cmp
cmp
int3
jecxz
in
mov
incl
adc
inc
pop
xchg
sbb
adc
add
incl
cmc
xchg
out
fyl2x
pop
repnz
clc
mov
push
add
pop
hlt
sbb
idivl
imul
and
cltd
std
cmp
cld
jno
rorb
das
call
ret
sbb
sbb
adc
inc
adc
incb
push
stc
outsl
cmc
mov
sub
out
aad
mov
outsl
adc
cli
scas
stc
js
mov
neg
sub
incl
or
out
push
cmc
lcall
sbb
and
incl
xchg
pop
xor
push
or
add
notb
out
ljmp
pop
clc
xchg
jnp
incl
lret
add
or
jle
and
mov
repnz
add
popa
add
sbb
pop
sub
mov
and
js
push
jmp
in
loopne
loop
jecxz
in
ljmp
decl
incb
inc
decl
sbb
test
xchg
fdiv
cmp
cli
ljmp
cmp
cmc
mov
pop
dec
or
repz
adc
adc
sbb
ljmp
adc
add
fdivp
jl
hlt
out
imul
mov
jmp
decb
mov
cld
in
pop
ret
cmc
dec
add
clc
ljmp
in
push
sbb
xor
mov
sbb
adc
jle
jnp
loope
fbld
clc
adc
ret
out
mov
in
push
out
fucomi
fucomp
test
incl
das
std
inc
add
cli
adc
addr16
adc
or
ljmp
mov
cli
in
repz
mov
lcall
push
push
sbb
pushl
into
add
adc
sbb
in
loop
fimuls
mov
sbb
clc
in
add
std
pop
loopne
add
xchg
adc
movhlps
push
fnstcw
or
push
xchg
or
sub
aas
pop
loopne
iret
sahf
add
sar
push
push
imul
repnz
lock
outsl
repnz
inc
testb
jg
add
pop
inc
push
test
adc
push
jo
std
or
pop
lods
add
cli
push
icebp
and
jne
mov
jmp
jge
mov
or
adc
clts
cmp
fdivr
int3
idivb
pop
in
dec
dec
imul
in
icebp
jns
ljmp
push
es
bound
adc
push
add
sti
jl
lods
repz
lock
sbb
bnd
std
repnz
aam
adc
adc
adc
cmpl
add
stc
idivl
clc
sar
stc
stos
ljmp
ret
or
dec
push
mov
sti
popa
stc
das
test
jmp
jmp
adc
sub
aad
pop
push
add
or
adc
fistpl
or
movsl
adc
jne
xor
clc
sahf
mulb
mov
hlt
icebp
clc
repz
xor
pop
or
fwait
push
lock
cli
scas
lcall
xchg
dec
cmp
shr
inc
cmc
add
pop
or
jbe
std
call
pop
adc
lds
nop
push
push
or
push
lcall
or
pop
incl
cmp
jb
call
imulb
jmp
icebp
out
jle
repz
add
outsb
pop
add
mov
jp
cli
lock
mov
out
mov
cmc
xchg
cli
lock
push
push
pop
xor
adc
gs
pushf
pop
std
dec
pop
out
jge
pop
repz
hlt
jg
mov
cmp
sti
inc
sti
das
cld
icebp
cli
inc
divl
jp
push
insl
idivb
or
or
sbb
pop
sbb
adc
ljmp
dec
out
shl
psllw
out
test
sbb
hlt
mov
jp
jmp
sti
mov
jbe
sahf
cmp
int3
add
add
cmp
push
cld
lock
aaa
in
jnp
stos
in
out
xchg
testl
movq
jg
inc
sbb
dec
and
in
adc
dec
std
pusha
hlt
sub
out
call
sub
pushf
call
movl
rolb
movb
ljmp
negl
clc
pushl
insl
pop
add
out
sbb
and
sbb
inc
pmulhuw
insl
icebp
ljmp
shl
xchg
mov
add
cmp
mov
stc
addr16
sbb
movsl
cli
std
negl
push
lock
testb
push
testb
lcall
add
xor
imul
bnd
sub
in
pusha
icebp
outsb
cld
adc
or
ud0
adc
sbb
cmp
jecxz
jle
leave
pop
jp
dec
imull
jle
push
std
jmp
cmc
insl
sti
sub
adc
faddl
inc
cld
mov
scas
out
adc
sub
cli
idivb
ds
or
sbb
ds
pop
lcall
xchg
std
shl
lcall
repz
in
cli
psubq
stc
sar
xchg
stc
pop
mull
out
inc
repnz
ljmp
ja
or
or
sub
add
cmp
test
in
outsb
jbe
repz
cli
add
pop
adc
xchg
or
cld
jg
decl
xor
or
add
cld
jmp
cli
inc
add
pop
or
rclb
jnp
pop
call
or
add
add
sti
lahf
testl
xchg
add
adc
mov
call
adc
push
mov
cli
dec
repnz
or
sti
in
lods
lock
icebp
mov
negb
mov
inc
cmc
iret
stc
push
cld
pop
decl
ret
cmpsl
sbb
sbb
sbb
adc
das
stc
shr
filds
fsubrl
out
out
iret
or
push
adc
lcall
xchg
sbb
adc
push
dec
push
mov
jle
push
clc
sub
pushl
test
out
sub
mov
dec
lock
shl
loopne
jecxz
jmp
hlt
push
std
or
adc
sbb
sbb
adc
roll
roll
push
imul
fcomip
divl
cmc
das
bnd
pop
imull
cli
dec
stc
push
stc
incb
cmp
decl
repz
push
push
ja
dec
push
int
mov
push
repz
jmp
ja
decl
fmull
loopne
out
lock
or
mov
pop
pop
gs
adc
pop
or
sbb
dec
add
lods
push
fcomip
fbld
nop
or
add
jp
nop
push
in
mov
jecxz
in
jmp
add
pop
add
or
pop
sbb
loop
lea
jg
adc
pop
add
scas
repz
mov
aaa
std
cli
push
jle
sbb
add
cwtl
cld
movsb
cli
cmp
mov
decl
or
movhps
mov
push
cli
outsb
repnz
loopne
fiaddl
fstps
or
jno
fs
daa
push
sti
adc
push
or
pop
daa
fisubs
and
in
ljmp
sbb
cmpb
shl
cli
addl
mov
cmp
add
repnz
jmp
movsb
loope
in
lcall
add
and
mov
xchg
sbb
sbb
jno
xchg
loopne
lcall
es
cmp
pop
add
add
add
add
add
add
decl
push
clc
inc
hlt
loope
jecxz
out
in
cwtl
out
push
hlt
sar
add
adc
adc
decl
add
in
fnstsw
jno
lods
fmull
clc
cmp
push
inc
mov
decl
xchg
pop
rcrb
jo
push
adc
or
mov
push
notb
sar
std
insb
add
mov
dec
cli
shl
mov
in
or
inc
out
lcall
push
lret
stc
pop
nop
add
adc
fucomip
pop
xchg
sbb
sbb
push
mov
or
sbb
sahf
divb
push
adc
push
jmp
in
out
jo
enter
mov
cli
incl
jg
or
mov
or
or
or
jo
mov
ljmp
in
in
ljmp
movsb
hlt
inc
sti
mov
or
adc
ljmp
popa
jp
ret
xsha1
cmpsb
or
or
add
pusha
cli
cmp
sar
rolb
adc
stos
or
or
or
or
add
and
jo
loop
movsl
aad
aad
fldt
loop
out
xor
ret
add
in
daa
pop
sub
push
pop
push
decb
dec
or
aam
add
sti
inc
std
jbe
incl
loop
stc
pop
negl
and
and
mov
out
mov
mov
sbb
and
and
add
clc
jmp
cwtl
jp
jmp
call
fisubrl
sbb
xchg
in
stos
mul
add
adc
aaa
std
outsl
mov
sbb
adc
pop
mov
jecxz
add
add
push
pop
or
decl
add
std
lcall
loopne
ficoms
in
jmp
mov
dec
add
sbb
sbb
push
out
int3
sbb
or
incl
add
add
decl
cld
leave
clc
fdivp
aas
repnz
in
dec
ljmp
call
add
inc
add
sbb
pop
and
mov
sub
pop
fcoms
pop
push
pop
add
dec
clc
ljmp
out
lods
jmp
fcomp
push
filds
out
ljmp
hlt
dec
cli
sar
add
cmp
addr16
push
nop
push
fistl
sbb
cmp
mov
or
add
or
fsubrp
dec
jmp
jmp
ljmp
out
loopne
icebp
lock
cld
cld
ret
jg
cld
cmp
mov
push
adc
push
test
sbb
sbb
sbbl
mov
sub
adc
mov
lahf
out
jmp
out
add
repnz
test
pusha
dec
or
or
mov
insl
adc
cmc
adc
sub
rclb
push
fimull
ljmpw
sar
add
loope
fcoml
in
in
push
aaa
std
jg
add
xchg
push
js
xchg
int
xchg
js
mov
iret
or
mov
loopne
incl
not
clc
in
lods
std
xchg
lods
incl
lcall
negb
icebp
iret
in
inc
in
xor
aam
pushf
out
inc
repz
cli
mov
pusha
or
aas
pop
sub
leave
sbb
sbb
dec
push
jg
ds
push
cmc
decl
std
push
imul
hlt
adc
inc
testl
add
addr16
jg
jo
add
add
pop
fs
or
or
ljmp
or
notl
repnz
jmp
sub
sbb
mov
hlt
push
or
jmp
sti
in
js
out
test
and
xchg
xchg
lahf
add
clc
add
std
jb
pop
les
enter
or
pavgb
jecxz
pop
add
decb
into
out
out
jmp
or
lock
cmp
pop
sti
or
or
lock
or
pop
or
or
push
cmp
aas
outsl
jg
addb
or
cli
hlt
jae
sbb
mov
idivb
push
std
or
sub
popf
push
jns
sub
jmp
dec
cs
sti
ds
dec
notl
repz
repnz
ljmp
out
in
in
imul
adc
fucomp
in
lock
or
add
scas
sbb
aam
andl
and
sbb
jg
mov
div
repnz
lods
out
imul
add
dec
jmp
in
mov
cmpsl
in
pop
in
sbb
out
cld
rclb
or
dec
lcall
lcall
mov
and
sbb
rorl
lcall
stc
scas
cmc
mov
pushl
lock
mov
in
mov
cmc
aad
data16
hlt
add
idiv
or
adc
sbb
push
add
adc
xor
outsb
or
adc
pop
inc
jl
in
insl
jecxz
mov
shll
push
aad
fst
loop
jmp
test
lcall
adc
cmp
inc
and
jbe
test
mov
adc
sub
nopl
mov
dec
add
imulb
repz
gs
ss
stc
fisttps
loop
in
lret
in
dec
repz
xorb
sbb
and
outsl
and
inc
sbb
lcall
ds
outsl
hlt
dec
out
and
pop
out
sbb
lret
pop
xchg
ljmp
xlat
clc
repnz
add
jg
push
pushl
lcall
sbb
repz
add
mov
adc
frstor
decl
loop
mov
out
in
jne
fdivrp
cmp
pop
or
or
push
inc
jns
call
mov
pop
sbb
sbb
sbb
inc
push
out
sbb
or
add
mov
fildll
fcoms
push
fcompl
sbb
icebp
mov
pop
cmp
cwtl
sbb
lcall
scas
sbb
sbb
sbb
push
sbb
adc
add
dec
cmc
jge
sub
outsl
in
xchg
call
sbbb
icebp
lret
testb
add
bound
xchg
cs
adc
adc
unpckhps
enter
aas
or
ds
mov
mov
jg
lods
xchg
jmp
jmp
jmp
arpl
out
jmp
lock
icebp
and
xchg
cli
mov
or
jbe
jo
jecxz
push
sbb
stos
push
adc
minps
push
xchg
xchg
std
arpl
push
test
out
sbb
sbb
hlt
xor
clc
insl
sti
pop
jmp
roll
or
in
outsb
pushf
loop
idiv
push
mov
aad
scas
or
or
nop
scas
xchg
add
add
jp
ljmp
jg
lcall
sti
in
or
nop
sti
mov
imul
negl
clc
ja
add
mov
in
cld
cld
std
ds
add
add
ss
or
or
pop
push
push
push
and
movl
lret
decb
xchg
repz
out
add
jp
push
jmp
out
sbb
push
clc
lock
mov
cld
decl
rclb
stos
adc
adc
adc
pushl
jge
or
or
or
lock
sti
jbe
decl
adc
imulb
push
out
cmp
sub
out
ja
pop
notb
ljmp
push
lea
lock
sbb
sbb
sbb
push
pop
mov
push
mulb
out
in
repnz
fcomip
pop
in
xor
cmp
std
jecxz
loop
loop
in
call
ljmp
add
dec
sbb
and
test
aaa
push
mov
inc
or
mov
in
out
ss
add
push
jecxz
loope
loopne
jmp
xchg
in
ljmp
cmc
call
sbb
and
and
les
cmp
dec
call
mov
push
or
stc
out
jp
cwtl
ljmp
jp
or
cmp
pushf
out
call
push
out
mov
clc
pushl
pushl
adc
sbb
mov
sub
daa
jge
dec
pop
pop
pop
repnz
cld
test
stos
dec
int3
in
das
jp
loopne
loope
insb
clc
call
outsb
out
jmp
mov
std
sub
insl
mov
mov
inc
call
rclb
pop
adc
and
jg
adc
jmp
cwtl
clc
and
mov
xchg
jecxz
fisttps
ficoml
push
cld
jmp
gs
jmp
jg
das
push
jnp
sbb
rcll
sti
push
mull
fsubs
jl
sbb
aaa
or
mov
adc
add
mov
call
dec
jecxz
loop
jecxz
loop
loope
in
call
xor
cmp
cmp
and
xor
adc
sbb
decl
push
pop
xchg
sbb
sbb
add
jl
jnp
aad
mov
fistpll
loop
stos
jmp
cmp
mov
xchg
testb
add
sub
sahf
adc
adc
adc
mov
adc
lcall
or
or
add
cli
xchg
call
cld
push
jbe
push
sub
aad
inc
fnsetpm(287
add
dec
jecxz
out
jmp
out
pslld
mov
ret
jle
icebp
cmp
jg
adc
adc
sahf
es
cmp
scas
pop
leave
sbb
adc
iret
add
cli
pop
rep
incl
insb
loopne
loopne
loopne
dec
out
ljmp
push
std
xchg
mov
clc
mov
decl
insb
or
or
or
pandn
outsl
adc
adc
adc
or
jg
xchg
stc
adcl
pop
out
cmc
jmp
jmp
fcomip
xor
ljmp
sar
cmp
or
or
or
or
or
inc
or
or
or
or
out
jp
decl
mov
pop
add
cld
dec
pop
icebp
inc
in
repz
pop
jmp
ljmp
push
repz
pop
mov
stc
mov
mov
xchg
add
cmc
mov
ja
ljmp
xor
and
lcall
pop
adc
inc
add
cmc
jns
xor
inc
lock
mull
jne
dec
or
clc
dec
testl
xor
lret
sti
and
filds
pushf
or
scas
adc
push
mov
xchg
sbb
sbb
sbb
adc
push
pop
decl
sub
push
add
clc
js
mov
cmc
div
jbe
push
hlt
jecxz
cs
sub
pushf
pop
hlt
push
inc
negl
cmp
sbb
or
ret
adc
jmp
or
pop
xchg
add
std
jb
imul
cmc
in
icebp
shl
test
jmp
icebp
out
jmp
mov
dec
in
fucomip
mov
out
icebp
cmp
cs
add
xor
adc
sbb
and
es
decl
and
sbb
shll
loop
xchg
clc
adc
out
out
in
mov
jmp
mov
call
xchg
out
inc
repnz
and
testl
mov
inc
add
ret
les
add
add
cmp
es
adc
or
add
std
in
cmc
mov
mov
jnp
lds
cs
in
jmp
cmp
mov
push
xor
xchg
add
pop
test
nop
fisttpl
lea
paddsw
push
ret
call
stc
push
dec
push
nop
adc
les
mov
cmp
xchg
testl
jg
jae
and
in
in
in
out
shr
mov
out
ljmp
and
push
sub
push
or
call
sub
and
jnp
call
cmpsl
hlt
or
in
jae
loope
push
fldl
test
enter
clc
mov
lock
sub
lock
inc
test
fcmovne
or
aaa
rcl
dec
sbb
and
es
daa
and
mov
mov
sbb
add
and
push
sub
jecxz
call
fmull
push
jg
jmp
mov
xor
cld
test
jle
or
adc
ljmp
sbb
sbb
jg
mov
lods
push
xchg
adc
std
dec
cmc
in
fdivrp
pop
mov
mov
adc
rcr
mov
sub
push
sar
and
cmpsb
mul
clc
popf
stc
pop
sti
fs
inc
or
adc
pushl
ret
dec
and
xchg
daa
sub
sbb
sbb
aam
cld
lock
in
fildll
aam
cld
fstps
in
js
stc
and
icebp
push
and
inc
adc
adc
adc
test
mov
push
adc
mov
adc
adc
or
loopne
jecxz
sti
cmc
xor
bnd
loope
fnsave
pushl
insb
out
out
jmp
adc
mov
push
in
popf
repnz
in
jg
mov
sbb
mov
lods
push
mov
std
sahf
sti
in
cli
scas
clc
ljmp
outsl
repnz
jno
test
cmp
ljmp
mov
adc
push
add
push
popf
or
decl
or
or
imul
add
ss
inc
clc
sar
dec
div
stc
daa
add
add
cmp
nop
push
mov
sti
fcomip
push
popa
lock
cld
push
fwait
mov
clc
lock
or
mov
adc
adc
filds
out
testb
add
cli
in
hlt
sbb
fucomip
xor
jmp
out
lcall
push
push
cld
add
pop
inc
or
adc
or
or
add
mov
adc
inc
cld
aam
dec
add
and
or
jmp
xchg
add
cld
jecxz
add
inc
repnz
cmc
inc
stc
push
test
repz
clc
repnz
adc
cmp
adc
lcall
fimull
imul
push
sti
sar
xchg
negl
testl
cmc
enter
lahf
outsl
cli
mov
aam
jmp
call
loop
jmp
cwtl
in
div
sbb
sub
lock
or
in
sbb
and
and
and
and
and
inc
or
hlt
int3
in
mov
pop
inc
out
or
loope
push
ljmp
pop
outsl
clc
addr16
pop
cld
adc
sahf
cli
mov
cs
mov
xchg
push
iret
or
adc
pusha
sbb
sbb
and
and
ret
aaa
adc
call
jmp
sbb
cmc
loop
jecxz
out
ljmp
cmp
mov
or
or
or
out
clc
decl
pop
or
or
cmp
or
adc
pushl
out
adc
or
stos
add
stc
adc
pop
ljmp
sub
jmp
loopne
loop
in
jmp
int
or
popa
std
inc
push
sbb
std
in
sti
cli
clc
push
neg
add
pop
test
mov
cli
or
push
or
push
push
adc
adc
cmp
fistl
jl
push
add
aad
adc
xchg
cmc
push
out
mov
rcll
fistpll
ds
das
sti
jb
mov
add
push
pop
aad
pop
mov
aas
mov
xchg
cmp
add
add
or
or
mov
or
mov
cmp
pusha
push
lock
lock
icebp
xchg
cmc
pop
cli
outsl
mov
or
or
ljmp
adc
stos
or
in
add
add
mov
ret
cld
insb
jg
add
add
add
fbstp
push
std
insb
data16
in
je
inc
in
fldl2e
out
sbb
adc
test
add
or
adc
add
das
fmuls
push
testb
in
out
ljmp
cld
notl
adc
adc
adc
push
push
or
add
imulb
repnz
icebp
clc
mov
pushf
push
leave
or
ljmp
cmp
adc
or
pop
sbb
ret
cli
jmp
jmp
scas
rcrb
lock
push
cld
inc
js
pop
adcb
xor
ficoml
add
jl
xchg
cli
push
stc
push
stc
outsb
in
pop
push
pushl
rorl
dec
or
or
lea
mov
enter
movsl
cmc
mov
mov
test
inc
out
pop
out
jg
jmp
cmc
cld
dec
add
add
mov
sti
jmp
cld
decl
pop
or
or
or
or
or
or
or
mov
mov
jg
outsb
aaa
cli
sti
cmp
repz
inc
in
cli
call
ja
lcall
sbb
jo
xor
jb
ret
ljmp
std
jne
or
jg
ja
mov
sbb
scas
and
push
sbb
outsl
clc
pop
push
add
lock
cmp
in
or
jge
cmc
out
int
in
scas
repnz
negl
cli
mov
pushl
out
push
add
repnz
cmpsl
or
lds
lcall
sbb
adc
pop
cmc
lcall
or
add
inc
imulb
jmp
in
inc
out
mov
push
mov
add
add
add
add
add
add
mov
sar
testl
fiaddl
repnz
adcl
sbb
adc
call
jae
xor
popa
repz
out
imul
test
dec
jmp
in
mov
clc
push
stos
add
lods
add
add
call
notl
lcall
repnz
lahf
negl
idiv
or
mov
mov
pop
or
mov
ljmp
inc
jo
mov
or
or
push
mov
fdivr
movsl
std
xor
xlat
cli
and
cli
push
cli
jno
pop
pusha
cld
mov
std
mov
out
and
std
dec
cld
sar
inc
std
leave
cld
adc
mov
add
std
add
pop
adc
pop
or
or
fimuls
mov
lahf
add
push
sbb
ds
std
sar
mulb
pop
stc
sbb
cmp
dec
push
std
aas
stc
mov
and
inc
notl
clc
xor
sar
fs
sub
add
stos
cmpsl
pop
dec
push
or
incl
or
or
pop
xlat
add
ja
sub
xchg
call
ljmp
push
aam
push
cld
sbb
dec
cli
mov
out
cs
sbb
std
imul
out
fdiv
ret
clc
mov
push
pop
jl
dec
add
icebp
or
rolb
push
add
add
inc
decb
push
data16
cmp
and
push
push
pop
add
xor
sbb
mov
mov
testb
jbe
dec
or
insb
add
sar
sub
hlt
lcall
push
mov
jmp
add
push
jle
roll
fucomip
les
cmc
std
push
cli
pop
sbb
mov
pop
cmc
imul
clc
add
xchg
cli
jg
dec
add
or
or
or
mov
add
xor
loop
dec
icebp
jns
fwait
icebp
or
cmp
pop
or
loop
stos
std
inc
cmp
loopne
ret
or
or
cs
add
add
sarb
sbb
inc
jbe
push
std
std
cmp
mov
add
fldl
jp
add
add
loope
ljmp
jns
xor
clc
ljmp
loope
mov
add
or
ljmp
cli
add
stc
adc
push
out
cmc
out
or
out
aad
cmpsb
jmp
out
js
adc
sub
mov
or
test
decl
pushf
or
or
or
or
or
dec
or
test
add
into
sti
dec
jg
decl
xor
daa
lock
and
cmp
sbb
sti
adc
mov
and
mov
rorb
jg
add
fiaddl
cmp
pop
data16
call
rolb
sbb
lret
add
mov
mov
decl
dec
cld
stos
sti
pusha
sti
sar
xchg
out
jmp
add
add
mov
add
sub
int3
pop
adc
addb
add
loope
fnsetpm(287
cld
dec
dec
cli
gs
adc
pop
ja
add
add
jmp
add
add
add
add
add
add
roll
add
mov
decl
cmpsb
mov
lcall
pop
clc
mov
pushl
test
hlt
or
jle
mov
je
mov
js
mov
bound
jp
mov
mov
jp
push
stos
or
out
loop
mov
add
lcall
xchg
sti
clc
inc
notl
cmc
xchg
addr16
inc
jg
fdivp
test
cmpsb
inc
test
cmc
stc
int
stc
outsl
cli
idiv
data16
sti
lods
cld
hlt
std
js
dec
add
push
sub
rorl
xlat
incl
jp
or
or
add
inc
cld
psubw
and
push
int3
hlt
arpl
xchg
hlt
adc
cmp
enter
hlt
incb
nop
lock
xchg
lds
inc
add
cli
std
xchg
std
cwtl
std
or
jg
add
or
or
or
or
pop
inc
call
cmpsb
std
add
push
std
xor
stc
insl
stc
add
mov
cld
std
pop
jmp
add
add
pop
xchg
pop
hlt
cld
test
subl
bnd
test
xchg
test
es
push
add
add
add
or
push
or
decl
inc
or
add
mov
mov
fildll
sbb
cmpsb
aad
ds
mov
decl
cmc
sti
repz
repnz
bnd
js
lock
sub
notb
add
push
add
clc
fnstenv
addr16
mov
pusha
or
pop
and
dec
push
dec
add
add
mulb
lock
clc
xor
not
divb
fidivrl
hlt
mull
stc
pop
cli
push
sti
xchg
mov
add
movb
movb
or
inc
inc
or
or
aad
mov
or
or
or
add
push
add
dec
std
sbb
cmp
mov
cli
or
cmpxchg
cmpsb
sti
mov
cld
inc
std
test
sar
fscale
inc
mov
ljmp
std
arpl
dec
std
inc
std
or
push
std
dec
bound
or
std
sbb
decb
cmp
jmp
cs
add
add
lret
pop
add
jo
and
mov
add
add
std
mov
cli
push
cli
sbb
jmp
testl
pop
cmc
pop
pusha
pop
clc
mov
xchg
cli
scas
ljmp
fbstp
xor
xchg
push
rorb
iret
or
or
ljmp
lret
or
push
mov
add
dec
out
ljmp
std
xor
cld
mov
aaa
sti
movsl
cli
mov
lcall
xchg
cli
out
mov
xor
inc
add
or
sbb
or
sbb
or
or
add
les
add
cltd
add
sti
fucomip
jo
jbe
gs
cmp
lcall
add
xor
jne
xlat
sub
xchg
data16
test
jg
or
add
mov
add
add
add
call
cld
pop
sti
aad
xbegin
sar
jbe
divl
clc
jmp
das
repnz
fdivr
lods
lcall
pushf
add
add
stos
aad
incl
jne
in
aad
incl
xchg
jmp
std
ret
cli
mov
idivl
inc
test
stc
jno
nop
sti
js
push
aad
fstpt
incb
add
add
sti
add
mov
call
mov
xor
fiaddl
movsb
add
cs
cmc
sbb
lahf
add
dec
add
add
sbb
addl
sbb
fwait
push
sbb
and
outsl
cld
push
std
pop
pushl
lret
in
filds
rolb
add
add
dec
add
xchg
add
add
add
call
adc
lcall
in
jle
sub
add
or
mov
mov
jmp
pop
clc
lcall
mov
add
test
add
add
add
add
inc
add
cs
pop
es
ja
imul
sti
pop
sti
mov
sti
imul
fs
cmc
decl
fiadds
std
jp
in
xchg
daa
sti
cli
pop
gs
push
or
dec
cli
es
ss
mov
or
inc
add
add
add
pop
jno
sahf
into
pop
mov
sbb
pop
add
and
mov
xor
decb
pop
data16
jge
mov
and
movb
fstl
incb
aam
add
inc
and
adc
sub
gs
jo
add
add
mov
dec
push
jae
inc
movsb
in
sub
aas
mov
hlt
jle
dec
pushl
cmpsl
push
jecxz
scas
xchg
dec
and
outsl
aad
imulb
push
pop
add
add
jmp
jg
fcmovb
add
add
inc
add
das
add
add
daa
add
add
inc
pop
pop
add
pop
sub
adc
jo
sub
and
add
rorb
cli
xchg
add
ljmp
pop
mov
decb
cld
cltd
sti
int
xlat
cld
stc
idiv
push
clc
cwtl
testl
mulb
test
fincstp
mov
sti
sbb
sub
mov
ljmp
or
outsl
pop
test
addl
jno
insl
add
add
jmp
nop
std
movsl
cld
idiv
push
sti
push
sti
cmp
ds
push
lret
in
aas
ds
std
or
incl
add
add
mov
clc
add
ret
add
add
loop
inc
add
mov
push
xchg
add
out
jnp
fistps
std
pop
cld
push
sti
rcr
icebp
cli
jp
cmp
inc
cli
cmpsl
cli
pusha
sti
cmp
mov
cmp
outsl
sbb
add
add
add
add
inc
dec
mov
lret
add
pop
in
sub
add
sbb
aas
add
das
mov
adc
std
mov
cmp
std
adc
in
adc
pop
add
push
add
pop
add
jg,pn
lcall
cli
leave
stc
xor
stos
clc
jb
insl
clc
ja
and
clc
cmp
pop
lcall
cld
stc
inc
cli
jo
mov
cld
std
cld
loope
inc
jmp
aas
add
pop
mov
jge
stos
or
or
pop
out
push
mov
sub
jl
pusha
cli
out
mov
mov
and
fimuls
lcall
sahf
js
jb
lcall
sti
or
std
xor
loopne
outsb
loope
notb
xchg
stos
jg
add
and
dec
push
inc
push
out
add
jbe
mov
or
lods
fisubs
cld
push
sti
iret
cli
pop
cli
pusha
jnp
xchg
dec
jae
pop
inc
sti
out
sub
std
pushl
xor
add
add
add
add
push
push
add
ss
push
faddl
mov
lcall
add
add
es
js
fstpt
jnp
cmp
pop
push
sub
mov
dec
and
testb
lcall
pushl
outsb
jbe
lods
std
xor
sar
cld
in
sti
jl
sbb
ljmp
clc
add
cli
into
cli
and
inc
sti
cmp
cld
nop
cld
sub
jmp
pop
stos
stc
push
inc
mov
decl
or
cmpsb
add
test
add
push
add
fcomip
mov
sub
add
add
decl
ss
jns
idiv
jno
or
cmc
sti
pop
cli
jg
mov
std
or
outsb
fsin
and
cmp
lcall
add
mov
inc
sahf
mov
mov
pop
add
add
xchg
add
add
add
or
add
fiadds
popa
ss
sbbb
decl
addr16
outsl
pop
and
paddd
arpl
mov
xlat
mov
add
ret
mov
push
out
add
and
or
add
add
cmp
inc
add
add
add
xlat
mov
jl
add
pop
data16
fdivr
pop
icebp
test
xor
jge
cmpsb
pop
ja
push
mov
fimuls
add
add
sbb
fwait
inc
mov
pop
incb
mov
std
fs
pop
pop
dec
ss
xchg
testb
add
mov
mov
xchg
push
xchg
mov
lods
push
dec
add
stos
sub
jp
loopne
outsb
decl
mull
ficomps
std
xor
test
mov
mov
adc
fldt
push
add
insb
inc
add
cmpsl
add
sahf
leave
add
add
aaa
jb
out
clc
inc
xchg
push
xor
mov
outsb
add
add
sbb
dec
add
add
iret
ljmp
out
cmpsb
push
jl
stos
std
fdivp
xchg
insb
stc
or
inc
add
mov
sbb
nop
push
outsl
cli
decl
loopne
xchg
add
movsb
add
jbe
inc
mov
add
adc
fdivr
or
sub
pop
add
sbb
inc
mov
jmp
in
pop
cld
int
mov
sahf
push
call
push
cmp
test
rclb
sub
add
outsb
jno
jg
pop
add
add
add
add
mov
add
inc
cmpsb
mov
std
faddl
stos
cld
xchg
cld
mov
cld
xor
out
or
push
mov
ljmp
sub
add
fcmovbe
decl
out
sti
es
sub
test
insb
std
sbb
sar
pop
clc
das
js
cld
ljmp
dec
jmp
lcall
and
add
add
add
sbb
cmpsb
loopne
aam
sbb
mov
decl
xchg
lret
push
add
jp
addl
inc
or
jb
push
push
fiaddl
jmp
mov
daa
pushl
cmp
repnz
xchg
add
add
test
clc
mov
mov
cmpsb
mov
out
data16
xor
scas
ficoms
pop
jo
scas
ret
jle
add
dec
outsb
dec
push
adcb
add
jb
add
lods
cli
fwait
pop
add
add
add
lock
pop
mov
pop
test
ss
inc
clc
mov
out
mov
lahf
or
int
sahf
cld
push
cld
inc
cld
arpl
lcall
bound
mov
add
mov
lcall
mov
add
mov
into
test
std
inc
mov
ss
sbb
out
xor
inc
jmp
cld
xchg
stos
out
std
cmp
std
push
divb
add
test
lret
add
fists
add
sbb
dec
cmp
mov
add
sub
adc
loopne
add
loop
mov
mov
ja
loopne
push
lds
xchg
incl
dec
call
cmp
cmpsb
add
add
sbb
add
add
add
jbe
lods
loop
and
sti
mov
ljmp
pushl
push
sub
lahf
sbb
or
dec
push
outsb
mov
decb
add
test
vmovntps
dec
add
adc
insb
pushl
push
mov
add
add
adc
dec
pop
xor
or
or
mov
frndint
mov
loopne
or
cld
idiv
sbb
pop
std
mov
decb
push
ret
add
add
xchg
call
add
push
ficoml
push
cmpsb
bound
inc
decb
lret
std
shlb
or
mov
ds
pop
sti
sti
std
sti
xchg
cld
sbb
loope
mov
lcall
inc
add
add
mov
and
add
add
ret
lret
add
push
dec
xchg
fisubrl
and
push
adc
adc
ja
cs
pop
mov
sar
scas
push
sti
std
pop
pop
es
inc
out
pop
add
mov
add
add
add
add
add
cs
jmp
add
jmp
mov
mov
call
mov
add
xchg
cs
popl
mov
lcall
xor
dec
add
cmp
add
xor
push
rorb
lods
decb
cwtl
or
push
bound
ret
clc
sub
jmp
ror
movsb
cs
mov
lcall
push
lcall
icebp
pop
pop
out
jecxz
out
inc
mov
mov
out
push
test
jle
dec
std
push
hlt
cld
enter
jg
mov
loop
xor
and
call
cmp
add
xor
lds
bound
push
jno
pop
into
xchg
add
add
add
add
shl
int3
add
dec
xchg
decl
cmp
bound
jnp
movsl
fisttpl
rclb
xchg
mov
mov
arpl
loopne
push
add
loopne
jmp
mov
ljmp
add
push
lods
or
and
inc
adc
mov
jle
push
mov
add
push
outsb
andb
push
nop
push
xlat
add
add
fcomps
mov
rcll
inc
scas
or
pop
xchg
fsin
cmpsl
decb
push
add
mov
inc
out
pop
orb
jecxz
cmp
pmaxsw
bound
or
imul
add
mov
lock
mov
std
jp
cmp
add
aad
cld
adc
xor
jg
or
xchg
jno
lds
sarb
jp
push
pop
add
sbb
out
add
add
bound
and
ficoml
out
mov
mov
ret
psrld
push
mov
stos
movsbl
mov
aam
clc
js
and
inc
or
add
js
addr16
hlt
push
mov
add
jp
xlat
or
jbe
add
imul
ja
sub
jl
loop
jb
bound
mul
add
add
mov
js
ficoml
cli
pop
movsb
outsl
or
loop
mov
push
aam
adc
jnp
aad
xor
jmp
sub
sar
jno
lods
mov
adc
cld
add
xor
mov
pop
incb
out
outsb
lahf
add
mov
push
out
mov
push
dec
xor
jb
jb
push
adc
ret
repnz
lock
scas
or
mov
sbb
dec
cmp
data16
dec
jle
loopne
jg
add
add
add
pop
loop
icebp
stos
add
xchg
inc
nop
aam
xchg
ja
hlt
jno
cmpsb
mov
aaa
xor
jbe
dec
cli
add
sbb
cmp
pop
test
push
push
mov
xor
jae
rolb
cld
test
sbb
add
ret
pop
pop
js
sbb
pushf
adc
cmp
loope
push
ss
push
shrl
into
divb
scas
cltd
add
sarb
ljmp
xchg
decl
sbb
pop
bound
decl
push
fimuls
xchg
mov
cltd
decb
test
cmp
ss
std
cmpsl
std
cmpsb
std
sub
push
aaa
and
push
dec
rolb
test
jl
pop
push
mov
ret
cmp
add
sub
arpl
adc
push
mov
xor
call
lret
loop
jmp
mov
out
adc
jl
jbe
add
push
out
lgdtl
scas
pop
inc
xor
es
shlb
pop
mov
pop
test
cmc
jno
sahf
rcl
cli
mov
call
push
mov
cmpsb
push
pop
dec
jae
loop
mov
pop
stos
dec
cmpsb
jecxz
dec
ficoms
push
call
cmp
push
mov
dec
fld1
loopne
loope
ret
lret
cmc
mov
push
push
cli
inc
mov
adc
js
mov
xchg
mov
in
or
sbb
jg
aaa
and
clc
mov
xchg
dec
mov
or
push
jbe
lock
mov
or
iret
inc
cli
mov
roll
rol
shr
incl
pop
outsb
xchg
mov
or
inc
repnz
imul
data16
xor
call
aam
mov
scas
sub
mov
out
inc
pop
ss
cmpsb
outsb
out
xor
mov
out
bound
in
jno
pop
ror
add
ja
ja
pop
scas
pusha
dec
jns
mov
imul
inc
aad
mov
sahf
jns
testl
mov
loop
mov
push
clc
add
dec
stos
mov
cmp
gs
or
notb
xor
sub
pop
outsb
and
test
sbb
bound
fldl
lret
xor
mov
mul
lret
or
push
add
inc
sbb
pop
jle
jb
test
out
add
mov
shlb
scas
test
outsb
mov
outsb
push
mov
mov
test
mov
lcall
inc
dec
push
xchg
imul
test
into
mul
call
mov
push
inc
movsb
xchg
xchg
sbb
push
jb
jge
lahf
es
cli
push
lods
outsl
lret
adc
mov
mov
mov
out
testl
repz
rcl
fcomi
inc
xchg
pop
fidivrl
out
fstps
mov
push
ljmp
movsl
xchg
je
mov
adc
rcll
ret
repnz
cld
shrl
inc
sbb
lods
xchg
sti
test
ror
loope
fadd
adc
push
sbbl
js
cli
repnz
andl
and
push
sahf
or
mov
call
add
cmp
push
push
jns
ds
lcall
lahf
repnz
mov
xchg
cmp
cmp
mov
out
xchg
jge
fisubs
push
add
push
dec
test
dec
adc
sbb
or
sahf
cli
add
sub
ds
push
add
jp
jnp
adc
ficomps
adc
popa
pop
xor
sbb
clc
ljmp
jle
or
hlt
lret
pop
pop
pop
movd
repnz
inc
xchg
inc
mov
jmp
xor
ss
mov
cs
mov
xchg
sbb
inc
mov
out
inc
lea
push
mov
xchg
push
lea
arpl
incl
add
jb
lret
not
xchg
movsl
fidivrl
lds
jno
outsb
cli
dec
sub
mov
rcrb
jbe
ret
ds
fsubrp
mov
push
xor
xor
cs
push
xchg
mov
pop
dec
or
mov
dec
mov
adc
sub
add
shlb
test
in
lcall
aaa
xchg
cmp
and
push
pop
mov
lcall
dec
mov
jb
xchg
ret
jnp
test
jg
je
js
inc
push
inc
imul
inc
adc
pop
fs
lret
cmp
lock
adc
loope
adc
ds
ret
pop
test
push
push
out
mov
adc
cs
sbb
divl
xlat
scas
mov
cli
clc
cmp
jbe
inc
and
push
and
inc
iret
jnp
inc
push
or
pop
in
mov
ret
ret
push
cmpb
clc
mov
outsl
pop
addr16
mov
push
imul
mov
arpl
inc
addb
cmpsl
loope
addb
jo
fistpll
cli
xor
add
adc
lods
mov
sahf
div
cli
sbb
add
rclb
add
push
mov
hlt
cmc
je
loop
push
and
or
fld
ret
shl
scas
mov
cwtl
push
rol
mov
shl
loop
push
add
into
mov
into
add
inc
ljmp
sbb
mov
lds
stos
cmp
scas
push
sub
jbe
cli
xlat
out
pop
mov
out
lcall
ds
jbe
mov
das
push
mov
adc
push
mov
xor
mov
and
xor
out
pop
mov
or
pop
or
negl
sub
ss
inc
scas
inc
adc
mov
addl
out
scas
adc
add
repnz
dec
loopne
out
mov
or
adc
mov
push
inc
fcmovu
push
leave
daa
pop
pop
rol
out
jbe
sub
jbe
test
add
out
sbb
rcr
ss
and
push
cs
jle
dec
jmp
or
jne
dec
xor
scas
ret
enter
hlt
outsb
ljmp
pop
pop
mov
not
inc
xchg
fsubs
add
or
jnp
loop
repnz
cs
add
lcall
fisubs
jp
add
mov
aam
iret
inc
push
faddl
in
ficomps
dec
and
loop
ljmp
add
push
out
ret
das
jle
movsl
faddp
jb,pn
lret
mov
xlat
jo
pop
cmc
inc
add
ss
jb
add
mov
add
add
mov
push
xchg
cld
jo,pn
lcall
or
hlt
outsb
jo
std
push
mov
cmp
in
aad
push
fidivrs
jecxz
clc
mov
cld
and
inc
mov
cmp
stos
faddl
push
aad
mov
inc
sti
repnz
sbb
push
pop
mov
faddp
aad
mov
or
adc
adc
jnp
push
jp
inc
and
ss
in
push
fidivrs
out
inc
add
mov
push
sbb
negl
fiaddl
dec
out
imul
mov
lret
lock
inc
push
mov
push
inc
sbb
pop
testl
stc
push
or
fnstsw
mov
jmp
in
sub
clc
dec
cmp
add
adc
or
sarl
xchg
mov
pop
inc
jo
add
fadd
sti
addr16
lcall
xor
cmp
sub
faddp
mov
loop
out
xor
inc
ss
lock
or
out
sub
scas
sarl
imul
out
js
sarl
push
inc
sbb
sbb
sbb
add
daa
add
cmp
ss
push
out
pop
or
push
ds
std
imul
sbb
sub
loop
out
push
clc
or
jmp
out
not
cmc
loopne
bts
ja
popl
ja
lock
or
pop
jp
push
push
pop
pop
push
push
mov
mov
or
jmp
and
or
add
pop
mov
xor
scas
dec
push
dec
adc
cmpsb
push
or
cmc
scas
sbb
pop
mov
shl
testb
cli
pop
arpl
adc
push
or
add
dec
les
std
cmp
or
out
cmpb
sbb
fcomi
push
idivb
sti
sub
adc
fstpt
fwait
add
sti
aas
or
stc
mov
std
add
or
mov
dec
inc
ret
int
add
and
ja
in
sub
adc
dec
outsb
scas
andl
pusha
and
jl
test
mov
jnp
jns
jle
sbbb
addl
jg
mov
adc
orl
push
aaa
cmpl
jl
addl
jns
jge
cmp
sbbb
pop
jge
cmpb
jl
test
fucomp
idivb
jl
cmpl
test
orl
jl
mov
add
imul
jp
test
rolb
ds
push
enter
fnsave
jg
inc
push
addb
enter
testb
idivb
fsts
jo
xchg
or
mov
pop
cmpl
pusha
pop
pop
pop
push
test
lea
fisttps
cltd
mov
dec
aas
inc
inc
cmp
stos
cmpsb
popf
mov
pop
pop
data16
mov
lcall
mov
pop
inc
cmp
sub
push
andb
push
dec
inc
dec
pop
ja
jmp
mov
jbe
cmp
aaa
xor
xchg
lods
mov
pusha
dec
dec
dec
pop
jno
cld
mov
ds
mov
imul
push
outsb
lea
jge
sbb
push
bound
ds
stos
sahf
xchg
xchg
xchg
lea
inc
ds
decl
xchg
stos
mov
stos
cwtl
jns
push
push
push
imul
test
jns
dec
dec
push
inc
dec
lods
pop
lock
fwait
lahf
lahf
xchg
test
pop
popa
mov
notb
xchg
outsl
push
cmp
outsl
xchg
test
cmpsl
mov
pop
bound
cmpsb
mov
lods
mov
jg
xchg
jle
dec
inc
dec
inc
dec
popa
sbbl
pop
pop
arpl
xchg
mov
jg
inc
aas
dec
inc
dec
bound
xchg
subl
scas
call
mov
ds
dec
inc
dec
data16
outsl
jp
subb
popa
jb
xchg
movsl
mov
mov
cltd
xchg
inc
sbb
jne
cmpsl
lods
movsb
sahf
mov
divb
pushf
scas
mov
pop
push
xchg
cwtl
test
cmp
inc
popa
sbbb
pop
push
pop
addr16
movsb
clc
call
cld
mov
lods
mov
inc
cmp
dec
inc
push
jne
movsl
lods
cmpsl
popf
ja
cld
or
jo
mov
fwait
cltd
lcall
divb
insb
dec
mov
imul
mov
cwtl
xchg
xchg
sub
push
pop
jle
scas
ljmp
pop
pop
jae
lcall
mov
cmp
inc
push
je
mov
imul
sti
sbb
movsb
mov
inc
cmp
push
pushf
test
push
push
ucomiss
mov
call
xchg
cmp
popa
sbbb
jbe
pop
pop
gs
xchg
test
mov
mov
dec
cmp
dec
dec
pop
jp
mov
imul
data16
clc
mov
dec
ds
cmp
push
jg
and
pop
pop
in
jle
mov
mov
ret
xchg
jp
cmp
outsb
mov
subl
jl
mov
or
gs
inc
dec
dec
push
adcb
mov
mov
jbe
lock
movsl
stos
movsl
mov
jae
dec
dec
push
dec
pop
jne
popf
popa
fbstp
mov
bound
jbe
loopne
pop
adc
push
pop
insl
adcl
or
insb
jg
jp
cltd
mov
jbe
dec
push
pop
push
pop
jne
xchg
lcall
imul
sbbb
xchg
ds
pop
push
pop
pop
pop
je
ljmp
lea
imul
jp
xchg
lahf
movsl
mov
out
mov
pusha
pusha
orb
insl
insb
insl
jb
cld
das
outsb
push
xchg
sahf
mov
jle
pop
pop
bound
jb
mov
or
fistl
insl
outsb
jo
orb
jg
push
pushl
addr16
popl
mov
js
dec
std
pop
cld
cli
lcall
push
jnp
mov
ja
jne
ja
xchg
outsb
mov
jg
movsl
jp
cmp
push
insl
cmpsb
outsl
xchg
pop
jns
js
xchg
test
or
cmpb
insl
adc
mov
aaa
xchg
jmp
cmpl
mov
test
xchg
jae
jg
lcall
orl
or
cmc
outsl
or
jae
push
outsb
jbe
xchg
mov
xchg
pop
hlt
jnp
jno
insb
jae
push
mov
sahf
addl
imul
int
test
jo
loopne
jge
lods
mov
es
jle
orl
jle
outsb
cld
push
imul
mov
outsb
in
add
andb
jle
imul
jne
add
lock
rolb
jnp
dec
pusha
or
jge
arpl
jbe
nop
cwtl
cwtl
inc
cmp
fwait
xchg
lea
shlb
into
cmc
or
jnp
jne
fidivl
jle
nop
addb
pop
xchg
xchg
mov
jl
cli
adc
outsb
outsl
je
mov
fnsave
mov
jnp
test
sbbb
js
mov
jbe
or
dec
xchg
sbb
jl
jbe
or
mov
int3
outsb
cmp
jae
and
mov
addl
push
lods
xchg
mov
add
add
jle
call
cmpsb
inc
jge
mov
or
adc
push
jnp
jge
push
mov
pusha
and
jg
mov
ds
pusha
lcall
push
cmp
pushf
cmp
aas
popf
adc
fimuls
inc
jl
or
scas
add
aas
add
scas
insl
jge
jle
mov
fdivrl
pop
inc
mov
mov
add
arpl
mov
and
mov
fldz
out
sbb
js
sub
pop
pop
or
sbb
fwait
pop
mov
push
sahf
mov
xchg
inc
mov
sbb
arpl
pop
ficompl
lret
mov
rdtsc
mov
faddp
mov
cltd
pop
pusha
sbb
jne
sbb
xchg
push
jo
push
adc
mov
fisubl
sub
push
out
mov
inc
sub
cmp
aas
enter
int
cmp
insl
push
pop
mov
jnp
or
fisubrl
lods
aas
adc
inc
xchg
jae
sub
pop
mov
orb
cmpb
add
jnp
mov
inc
and
sbb
add
pop
loopne
test
jb
jge
add
mov
sbb
and
repz
insl
jg
mov
and
sbbb
stos
inc
cmp
imul
insl
inc
outsl
adc
insl
sbb
pop
cmp
mov
dec
sub
push
or
adc
mov
mov
rclb
jae
fistpl
fistl
mov
andnps
mov
insl
push
adc
ret
and
mov
roll
test
sbb
jle
pop
cmp
mov
insl
sub
lods
test
xor
mov
mov
orb
mov
mull
push
pop
andb
cmp
or
ret
rorl
test
ds
or
push
loope
addr16
ss
sub
js
fmulp
pop
sub
fisubrs
xor
or
jnp
cmp
mov
lcall
adcb
jno
push
xchg
imul
adc
mov
dec
test
je
jae
or
jp
addl
test
mov
insl
pop
out
jg
insb
imul
jl
mov
push
std
mov
test
mov
fs
pop
call
mov
jne
jne
jnp
ljmp
mov
jb
pop
gs
lea
insl
mov
jl
jne
jb
jbe
orb
mov
js
pop
sti
fstpt
mov
jp
jae
jo
je
jle
mov
mov
pushf
mov
pop
bound
addr16
nop
and
sbb
jo
push
outsl
lcall
pushl
mov
xchg
pop
addb
pushaw
pusha
jb
mov
das
clc
in
xchg
lcall
gs
orb
xchg
mov
orb
pop
push
nop
xchg
cltd
cltd
xchg
xchg
jns
imul
and
jle
jno
test
outsl
in
decl
nop
xchg
imul
ret
outsl
push
pusha
mov
filds
pushf
jge
cwtl
mov
xchg
mov
ja
xor
pop
insl
roll
cwtl
movsb
cmpsl
cmpsb
lahf
and
xchg
pop
pop
push
imul
jle
lahf
test
xchg
mov
mov
push
dec
imul
or
push
push
pop
popa
test
mov
lods
mov
lcall
dec
inc
bound
test
dec
dec
push
pop
pop
data16
mov
sti
decl
xchg
pop
cltd
mov
dec
push
ds
jge
mov
shll
jg
push
inc
inc
dec
push
pop
inc
mov
mov
mov
std
jg
xchg
inc
and
outsl
mov
stos
xchg
je
dec
inc
inc
dec
pop
fs
xchg
cmpsl
decl
mov
xchg
aas
sbb
jo
ror
ret
mov
pop
dec
ds
push
pop
fs
xchg
lcall
xchg
xchg
fwait
xchg
dec
pop
sub
aas
xor
mov
lahf
andb
aaa
inc
inc
push
pop
je
xchg
stos
mov
mov
fwait
loope
lcall
adc
xor
jns
leave
fmul
mov
jae
inc
sub
data16
mov
mov
mov
mov
or
xor
sub
ret
fst
inc
cmpsl
andb
sub
aaa
dec
pop
ja
movsl
mov
rol
mov
movsl
nop
inc
or
sub
pop
call
mov
mov
inc
xor
aaa
dec
pop
jb
movsb
mov
rol
mov
test
cmp
sbb
sbb
mov
mov
imul
pop
js
stos
ds
mov
stos
test
or
sbb
pop
lcall
sbbl
xor
and
xchg
scas
mov
sbb
sbb
call
inc
subl
aaa
daa
sbb
cmp
mov
leave
mov
push
lods
int3
insl
and
sbb
popf
mov
lods
andl
sbb
xor
incl
popf
mov
enter
scas
lods
test
or
adc
cmovns
loopne
xchg
jo
decl
and
sub
push
outsb
scas
ret
ror
ret
mov
cmp
dec
adc
sbb
pop
pushl
out
into
mov
push
and
dec
andb
mov
idiv
lcall
adc
or
and
in
fnstenv
push
push
cs
popa
jge
mov
into
dec
pop
lock
lret
mov
push
push
pop
nop
mov
jecxz
mov
push
xor
mov
inc
pop
jns
mov
sub
lret
sarb
sbb
pop
add
idivl
clc
pop
mov
dec
dec
xor
xor
jp
mov
fdivrp
jg
mov
pop
sbb
mov
mov
insb
push
xor
and
inc
pop
jl
cld
lcall
ror
mov
push
and
sbb
mov
loopne
lods
ret
es
decl
and
dec
pop
jl
mov
mov
clc
in
jg
push
pop
sub
add
das
arpl
scas
mov
and
aaa
dec
pusha
jge
pushl
into
ror
xchg
mov
sub
add
cmp
scas
lret
int
mov
dec
xor
sub
xchg
scas
rol
into
lret
mov
das
sbb
cmp
jg
ljmp
test
insb
push
xor
das
inc
push
arpl
int
mov
dec
out
lea
dec
or
aad
enter
push
cmp
ss
push
data16
mov
mov
xor
add
aaa
pusha
andb
inc
mov
aaa
sub
ss
inc
push
js
cmpsl
aam
pushl
mov
push
xor
and
xchg
mov
aam
mov
andb
cmp
call
inc
pop
outsl
test
lds
and
jno
lods
aaa
ror
mov
mov
inc
cmp
push
push
fwait
scas
mov
mov
push
jmp
and
adc
push
jno
stos
mov
je
xchg
ds
mov
jl
stos
mov
shll
or
ss
insl
xchg
mov
les
dec
inc
inc
dec
fs
test
mov
int
fucomip
lock
mov
sub
sbb
push
insb
xchg
movsl
xchg
jnp
push
inc
inc
inc
dec
scas
fidivl
cld
arpl
cmpsb
mov
in
enter
and
jg
push
imul
cmpsl
cwtl
andb
inc
inc
dec
pusha
jne
movsb
dec
hlt
mov
leave
mov
das
push
sbb
cwtl
lods
mov
xchg
inc
inc
dec
pop
outsl
xchg
or
aaa
cld
pushl
cmp
xor
jbe
movsb
jp
lods
mov
inc
inc
dec
pop
fucomip
insb
test
shlb
and
xor
je
lahf
mov
mov
testb
popa
push
dec
inc
inc
push
addr16
cmpsb
mov
mov
add
sbb
inc
push
push
adc
test
dec
sub
jg
push
mov
mov
dec
cmp
decl
mov
mov
jne
push
dec
inc
dec
pop
mov
je
adc
sarl
std
dec
xor
sub
sub
popf
xchg
push
dec
dec
dec
je
lcall
push
int3
in
cltd
addr16
dec
inc
and
fists
cltd
enter
xchg
jnp
pop
push
dec
dec
push
fs
mov
ror
mov
cmp
jg
das
sbb
pusha
jae
popf
scas
mov
loopne
js
pop
push
dec
dec
pop
push
xchg
mov
loopne
mov
jle
dec
dec
xor
push
addr16
mov
filds
dec
dec
push
pop
outsb
fdivs
lret
sarb
das
and
imul
xchg
stos
cmpsb
xchg
test
pop
push
dec
push
popa
outsl
adcl
popf
insl
dec
push
dec
sub
dec
pop
insb
jle
movsb
xchg
test
mov
jb
pop
push
push
pop
arpl
xchg
ret
push
cmp
insl
push
push
dec
sub
push
xchg
mov
xchg
xorl
gs
mov
and
mov
push
dec
sub
mov
jmp
jbe
popa
pop
pop
pop
data16
mov
add
jbe
push
dec
xor
cmp
jp
pushf
mov
test
pop
mov
jo
pop
pop
pop
dec
sahf
lods
fadd
mov
pop
push
incb
cmp
pop
push
lahf
xchg
xchg
pop
pop
mov
lahf
out
dec
lea
lahf
jbe
pop
adc
cmp
sar
push
ja
cwtl
mov
mov
addr16
pop
pop
cs
scas
mov
inc
mov
pop
push
dec
xor
push
cltd
lahf
lahf
mov
decl
pop
pop
push
mov
nop
insl
pop
sti
outsl
lcall
xor
imul
xchg
mov
pop
imul
cld
fstpt
test
inc
xor
mov
cltd
cmp
lcall
xchg
fs
pop
arpl
xchg
test
mov
sbb
xor
stos
adcb
aaa
pop
cld
cmpb
pop
pusha
les
pushf
mov
nop
outsl
pop
push
dec
cmp
ljmp
push
pop
push
test
xchg
mov
arpl
orl
fdiv
mov
test
inc
ss
insb
jp
xchg
loopne
lcall
imul
mov
xchg
add
ds
jle
xchg
pop
lock
pop
sub
xchg
nop
outsl
addr16
mov
mov
push
test
dec
cmp
ret
jb
xchg
js
pop
add
xchg
mov
jae
mov
mov
insl
popa
pop
inc
cmp
push
pusha
push
lcall
xorb
imul
repnz
sarb
in
jmp
inc
aaa
aas
dec
push
bound
mov
popf
pushf
xchg
mov
gs
inc
add
mov
mov
jge
pop
push
inc
inc
jp
add
fildl
dec
fwait
xchg
insb
cmc
fdivp
iret
mov
xchg
mov
stos
lcall
mov
xchg
xchg
xchg
cltd
lcall
pushw
fdivl
sub
mov
enter
inc
pop
insb
das
js
inc
push
pop
addr16
dec
xchg
xchg
les
outsl
adc
addr16
ja
loop,pn
mov
pop
inc
jbe
js
dec
xor
testb
jl
insl
xchg
push
js
xchg
cmpsl
scas
cs
je
aaa
in
dec
cmp
xchg
cwtl
cwtl
xchg
test
insb
imul
jp
xchg
or
mov
dec
addr16
dec
cmp
dec
push
ds
dec
xchg
xchg
xchg
xchg
mov
push
jb
or
mov
movsl
lods
mov
add
dec
aaa
cmp
or
pop
addr16
xchg
xchg
xchg
cs
lea
je
xchg
jp
add
pop
dec
aas
dec
push
in
inc
rcrb
test
jge
dec
push
stos
or
insb
jb
xchg
bound
inc
pusha
divb
inc
dec
push
dec
xchg
cs
push
push
jb
mov
cld
pop
mov
fs
dec
cs
pop
fs
fiaddl
xchg
lea
push
xchg
xchg
push
es
out
bound
inc
dec
push
pop
fdivrl
nop
ficompl
out
adc
rcll
mov
mov
adc
fcomps
outsb
jo
push
adc
mov
push
push
std
push
xchg
mov
mov
cltd
subb
ds
push
pop
lds
adc
push
test
jp
inc
jp
adc
stos
scas
out
mov
add
dec
cmp
dec
xor
xorb
push
sub
std
pop
loopne
inc
jo
mov
ret
je
pusha
push
inc
inc
dec
sbbl
jl
xor
insb
xor
jg
lds
inc
mov
movsl
xchg
jl
bound
inc
scas
mov
pusha
imul
xchg
bound
push
insb
pop
xchg
lahf
cmpsl
scas
mov
mov
popf
mov
pop
dec
aas
rclb
fsub
jno
jbe
push
mov
cwtl
movsb
test
mov
addr16
inc
in
pusha
insb
inc
xchg
in
mov
xorl
xchg
mov
aad
jg
cltd
mov
pop
dec
ds
push
push
pop
pop
cwtl
or
push
lds
cld
xchg
mov
mov
mov
inc
popa
fidivl
mov
mov
popf
cwtl
nop
mov
mov
loopne
jo
xchg
popf
movsb
adc
outsl
ljmp
inc
dec
cwtl
rcrb
and
dec
jge
dec
insl
jae
mov
pushl
or
mov
pop
dec
inc
dec
push
push
pop
int3
decl
xchg
pushf
lahf
cltd
xchg
or
adcl
jmp
je
popa
push
inc
inc
dec
push
nop
outsb
jl
cwtl
sahf
mov
mov
sbb
xchg
call
xchg
mov
scas
sbb
arpl
loopne
popa
jo
outsb
jne
lea
sahf
xchg
and
or
into
inc
dec
push
push
pop
lock
aas
push
jmp
xchg
mov
adcl
mov
cwtl
add
lock
dec
inc
out
push
pop
ds
xchg
mov
jnp
lds
arpl
inc
dec
into
mov
jle
out
loop
data16
fwait
pop
cmp
xchg
mov
insb
bound
aas
paddsb
inc
dec
xor
jg
ja
shl
imul
xchg
popf
push
mov
movsb
fwait
test
or
orl
sbbb
sub
jl
push
mov
stos
lcall
pop
dec
inc
dec
dec
sahf
cli
xchg
sub
cwtl
push
test
lcall
add
mov
xor
dec
inc
inc
dec
push
pop
adc
lret
mov
out
imul
xchg
hlt
sub
pushf
mov
arpl
inc
dec
push
mov
push
xchg
js
xchg
push
jae
push
inc
loop
jp
xchg
inc
aad
inc
or
dec
dec
outsl
scas
pop
scas
sbb
jp
outsw
jne
outsl
and
and
fs
push
inc
out
mov
gs
cwtl
popf
cmp
lock
out
push
xchg
sahf
cmpsb
lods
mov
out
outsb
add
add
pusha
mov
outsb
lret
dec
mov
mov
mov
push
inc
inc
into
push
or
dec
lcall
push
mov
mov
sbb
aam
push
aam
mov
and
mov
jb
mov
jg
cwtl
mov
je
pusha
push
inc
mov
dec
into
and
lcall
out
xchg
xor
mov
cmpsb
cltd
subl
dec
inc
sbb
addb
xor
fwait
lahf
xor
jg
add
jne
mov
stos
into
or
idivl
popa
push
out
popa
insb
jp
fwait
mov
xchg
lea
mov
jo
fsts
dec
xor
push
mov
mov
andl
cwtl
mov
cld
push
mov
dec
inc
xor
mov
xchg
sbb
cmp
pop
cld
jg
cwtl
cmpsb
nop
cltd
mov
test
dec
inc
cs
cmp
inc
dec
dec
arpl
mov
incl
xchg
insb
movsl
cmpb
gs
pushl
fiaddl
dec
push
andb
mov
mov
fwait
jp
xchg
fwait
cmpsb
cmpsb
mov
popa
xlat
pop
rolb
inc
inc
les
mov
in
dec
mov
cwtl
jno
push
cwtl
mov
mov
subb
inc
test
cmpsb
push
mov
test
push
fnsave
dec
xchg
cltd
cmpsb
mov
mov
movsl
xchg
jge
pop
cmc
jp
mov
les
stos
push
push
jne
outsb
dec
jb
xchg
call
loope
push
in
mov
push
inc
dec
push
pop
insb
js
in
lahf
push
dec
xchg
mov
jo
sub
das
shrb
push
inc
inc
inc
dec
inc
jns
fisttpll
sahf
cwtl
xchg
stos
ja
jo
mov
aaa
dec
movsb
xchg
jge
push
sub
call
jmp
jb
jno
mov
mov
add
dec
inc
fwait
imul
mov
lcall
orb
mov
stos
mov
inc
inc
inc
btr
or
dec
jno
add
stos
pop
cli
cmpsl
mov
cmpsb
lcall
dec
dec
fisubl
mov
jg
xchg
mov
test
stos
fcompl
mov
jp
pop
dec
inc
dec
inc
dec
jb
sub
incb
and
mov
mov
dec
inc
lcall
sub
mov
jnp
adcb
and
stos
insb
mov
mov
xorb
xchg
dec
xchg
movsb
orl
adc
jb
push
mov
mov
cmpsl
sahf
lea
fs
dec
dec
repnz
cmp
mov
dec
xor
xchg
aam
les
lods
mov
cmpsb
fwait
clc
pop
dec
dec
push
jae
aam
sub
loopne
clc
add
sbb
sub
xor
jnp
push
dec
dec
dec
mov
push
cltd
mov
jbe
je
orl
test
mov
dec
dec
dec
out
jp
fmull
xor
dec
jne
test
movsl
cwtl
stos
movsl
xchg
sub
dec
cwtl
dec
dec
push
inc
loope
inc
ljmp
push
or
jne
aam
mov
lods
xchg
nop
mov
dec
pop
insb
sarb
call
cmpb
adc
mov
rclb
movsb
cltd
mov
dec
out
pop
out
stos
sahf
test
orb
jne
orl
nop
add
push
push
cwtl
pop
xchg
es
sbbb
fwait
cbtw
js
sbb
scas
scas
notl
push
dec
cwtl
pop
enter
mov
sbb
sbbb
or
xchg
lods
stos
or
imul
scas
mov
cwtl
xchg
sbb
xor
loopne
andb
mov
push
pop
imul
jns
int3
xchg
mov
lds
mov
push
add
dec
add
mov
mov
cwtl
cwtl
jnp
jle
stos
clc
xchg
inc
mov
js
pop
mov
fs
test
xchg
hlt
test
movsb
dec
or
decb
dec
cwtl
lea
cwtl
out
push
shlb
mov
mov
jle
subb
xchg
lods
jl
pop
push
dec
inc
insb
js
shrb
pop
sub
cmpl
add
test
mov
pop
push
dec
or
cwtl
sbb
push
cmp
sbb
outsb
dec
orb
ljmp
jno
pop
dec
inc
cmpsb
dec
pop
gs
cltd
or
jle
jbe
loope
adc
popf
into
lcall
push
mov
dec
add
je
mov
or
test
push
cltd
mov
imul
inc
inc
dec
mov
sub
jecxz
call
mov
mov
popa
shlb
in
lahf
lahf
mov
jle
testb
fisubs
rclb
pushf
jle
bound
test
jo
movsb
popf
mov
mov
jns
je
fwait
mov
sub
ficomps
inc
dec
or
mov
sbb
adc
ds
and
pop
movsl
mov
jbe
push
inc
inc
inc
push
pop
imul
je
jmp
nop
xchg
jno
mov
fs
imul
dec
pop
push
push
out
js
sarb
insl
jno
push
cld
pop
cwtl
mov
cwtl
or
push
inc
aas
ds
dec
push
gs
xchg
cmp
lcall
mov
bound
mov
in
cli
inc
inc
inc
dec
push
lret
pushf
lods
scas
lods
cmpsb
cmp
add
outsl
mov
mov
mov
fwait
xchg
xchg
pop
dec
inc
inc
dec
push
stos
push
loopne
insb
jnp
stos
jb
pushf
or
jae
insl
jo
fdivs
sbb
push
dec
dec
scas
pop
addr16
xchg
sarl
add
js
outsl
jo
ja
xor
cwtl
movsb
sbb
or
dec
push
pop
fs
and
test
movsl
mov
add
lds
add
pop
jecxz
xchg
xchg
jb
arpl
pop
pop
arpl
adc
mov
add
xchg
lcall
sbb
mov
pop
pop
pop
fs
inc
shl
jae
xchg
bound
cmp
xchg
cli
fwait
cmp
xchg
arpl
and
pop
pushf
jb
pop
clc
or
jne
and
push
inc
jl
es
inc
aas
mov
jo
out
xchg
xchg
mov
aam
or
and
xchg
inc
jno
jns
cmp
sub
in
mov
xchg
xchg
add
add
testb
add
add
xor
mov
or
inc
cwtl
dec
scas
mov
iret
inc
push
fmul
jle
jns
jl
icebp
push
sahf
fsubs
loop
data16
xchg
popa
sub
jl
out
inc
pop
or
push
pop
inc
ret
jno
adc
mov
das
add
loope
clc
add
push
and
mov
cmpsb
test
and
pop
fdivrl
and
dec
or
sbbb
nop
fisttps
imul
sub
sbb
sub
inc
cwtl
das
xchg
mov
jg
mov
jne
sub
dec
mov
jmp
test
inc
sub
sbb
push
jnp
sub
dec
xor
add
and
adc
nop
xchg
repz
cmp
cmp
mov
mov
addb
pop
imul
add
bound
xor
dec
repz
repz
insb
insb
lcall
cld
outsb
mov
outsb
outsl
mov
adc
push
js
dec
mov
andl
fildl
mov
insb
iret
lret
mov
push
mov
jbe
push
addr16
adc
nop
lahf
out
jl
add
mov
cwtl
in
fistpl
inc
inc
sahf
mov
xchg
cmpsb
mov
insb
ss
test
stos
pop
mov
mov
int3
and
mov
iret
mov
mov
aad
jae
mov
mov
ret
jo
sub
out
or
mov
aam
inc
sbb
mov
mov
loop
cmp
push
jns
adc
xor
xchg
and
push
ret
je
pop
xchg
test
jae
xchg
arpl
addr16
push
ret
add
and
jno
jns
jne
bound
push
mov
mov
iret
sub
push
sbb
cmpb
pop
xor
inc
or
push
arpl
das
imul
jae
adc
sub
shll
push
outsb
addr16
in
jg
in
jne
push
das
xlat
test
out
je
je
test
outsl
mov
clc
pushl
addr16
mov
idivl
mov
int3
shlb
imull
dec
xchg
mov
mov
fsubs
or
leave
ljmp
and
not
fbld
rcl
push
and
and
notl
mov
cld
enter
addb
mov
add
mov
mov
xchg
sub
leave
into
stos
mov
mov
loope
mov
xchg
aam
lods
adc
repz
fmul
fisubs
mov
fldt
dec
mov
mov
jb
loopne
fstpt
mov
ror
repnz
into
mov
mov
out
int
or
std
ror
rcr
addr16
mov
frstor
incb
inc
mov
ret
mov
mov
lret
lock
dec
push
cltd
cmp
xlat
aam
mov
mov
jne
adc
inc
rol
jnp
xor
ds
inc
lret
stc
rcl
and
sbb
shrb
xchg
mov
sub
addr16
xchg
pop
sbb
sti
inc
or
loopne
or
jno
int
mov
rorb
sahf
mov
sub
inc
dec
enter
add
mov
ror
out
mov
or
outsl
es
lock
mov
cltd
pusha
xor
mov
clc
fnsave
push
adc
rcrb
ret
mov
testb
push
ret
das
rcl
stos
mov
in
dec
mov
mov
shl
mov
fmul
aad
rol
xorl
enter
xor
push
sahf
jle
adc
std
iret
in
mov
iret
ljmp
mov
iret
mov
nop
and
add
enter
cli
mov
rol
aas
dec
rcr
rcl
leave
iret
shrb
movsb
mov
clc
push
and
jae
cmp
mov
dec
lahf
sarl
fnstsw
ds
sub
cmp
sub
cs
idivb
fs
xor
ja
and
and
insb
xor
fs
push
push
mov
sarb
imul
push
mov
xchg
or
insb
push
mov
jns
lcall
and
push
cwtl
inc
out
and
jp
into
xor
xor
adc
pusha
or
fmulp
jbe
nop
dec
je
das
ds
and
insb
scas
pop
inc
jne
arpl
and
in
jne
outsl
shrb
sub
and
inc
and
push
es
mov
jbe
push
and
sbb
and
popa
sbb
and
in
rcll
insl
sarb
jnp
mov
imul
gs
sub
dec
outsb
aaa
rcr
out
popa
loopne
jae
data16
xor
pop
xor
sbb
es
lods
adc
ss
adc
inc
popa
neg
and
or
aaa
add
cmp
popa
ja
fs
ds
cmp
jb
outsb
or
inc
test
push
push
inc
aas
push
jb
xor
inc
inc
inc
inc
cli
ljmp
aaa
inc
cmp
inc
xor
aaa
xor
inc
xor
xor
inc
inc
xor
in
mov
dec
dec
add
xor
xor
ss
cmp
testb
ret
fcomi
aas
adc
fidivl
js
jne
fs
push
add
les
xchg
test
loope
pop
or
mov
sbb
test
mov
gs
repnz
push
orb
loope
or
sub
divl
pop
jb
mov
inc
out
adc
mov
js
roll
and
pop
mov
xchg
lock
sbb
inc
bound
mov
stc
mov
mov
add
test
sbb
lds
mov
xchg
imul
inc
jno
or
xchg
or
sub
or
rorl
sub
xorb
inc
sbb
push
inc
mov
sub
xchg
xor
gs
js
and
subl
xor
or
dec
xor
cmp
jbe
scas
push
push
mov
mov
mov
mov
mov
mov
dec
mov
insb
push
xchg
push
and
in
mov
shrl
sahf
jl
inc
and
mov
scas
dec
mov
push
add
pop
das
add
lds
add
ss
push
xchg
push
dec
pushl
pop
pop
and
call
insl
leave
repz
sub
mov
imull
mov
mov
hlt
incl
stos
addb
add
imul
and
das
insb
movsb
add
leave
fs
push
add
mov
jno
adc
das
pop
or
dec
inc
andb
iret
add
sub
sub
pop
inc
ret
jne
repz
xor
ror
or
repnz
ret
or
add
cmp
jns
xor
cwtl
mov
idiv
dec
into
int3
in
mov
add
adc
std
jg
pop
mov
out
dec
mov
add
mov
pause
adcb
int
inc
rcll
incl
inc
sbb
out
adc
aam
jle
add
fistl
add
or
sbb
fsts
sub
jge
aaa
adcb
or
xor
pushf
mov
xor
add
nop
inc
repnz
in
sbb
sbb
in
dec
push
xor
pop
add
push
or
jecxz
mov
arpl
cltd
scas
xor
pop
scas
cmp
push
sub
lods
inc
inc
cmp
mov
inc
and
dec
loop
xor
into
push
mov
or
and
push
push
push
cmpb
pop
push
fcomi
xor
sahf
cltd
push
and
pop
push
xchg
pop
xlat
fsubp
imul
fstps
pop
pop
push
outsb
lock
into
jnp
mov
addr16
push
es
xchg
xor
aad
shrb
fcomps
and
mov
aaa
mov
xchg
es
sbb
add
inc
jecxz
sarl
ja
and
or
jmp
inc
and
push
mov
jo
fistpll
pop
enter
inc
inc
mov
pop
and
adc
fimuls
addb
in
je
test
mov
aaa
or
shl
mov
test
and
cmp
test
nop
test
in
aam
and
adc
dec
cmp
pop
shl
jo
cmpsl
sub
out
push
mov
fdivr
mov
nop
icebp
add
inc
data16
mov
nop
out
jbe,pn
loopne
cmp
adc
repz
in
add
sub
in
push
cmc
pop
xor
mov
cs
mov
out
shlb
lock
icebp
add
cmp
mov
movsb
dec
push
jl
inc
add
jo,pn
xchg
xor
mov
xor
or
pusha
pop
cwtl
incl
nop
add
adc
mov
fwait
inc
pop
pop
nop
cmp
adc
pop
cmp
sarb
scas
sub
add
mov
cmp
fidivl
push
mov
das
pop
push
pop
loopne
jl
in
mov
jmp
xor
push
sbbb
add
sbb
add
ds
rcrl
loopne
adc
subb
nop
cs
inc
push
push
pop
inc
aas
loopne
inc
push
loope
js
aas
or
adc
jnp
and
das
clc
inc
stc
add
jl
and
add
jns
enter
jo,pn
lock
sahf
sbbb
sbb
inc
inc
adc
xlat
inc
inc
aas
xor
add
dec
clc
scas
or
das
add
and
pop
jo
mov
jo
pushf
and
mov
std
aaa
inc
lock
and
adc
sub
xchg
enter
and
mov
leave
nop
inc
iret
sub
das
xchg
test
das
add
mov
add
sub
repnz
cmp
inc
or
sub
mov
in
subl
mov
mov
mov
mov
add
jmp
xor
inc
dec
nop
xor
xor
jae
inc
adc
outsl
push
cmp
imull
sub
mov
push
pop
cmp
cmp
mov
and
outsl
test
cmp
inc
scas
sarb
add
adcl
enter
orps
cmp
cmp
or
add
sbbl
cmp
cmp
dec
push
adc
inc
scas
loopne
inc
cs
or
inc
pop
enter
addb
push
pushf
and
jo
lods
mov
pop
nop
aas
pop
daa
sub
call
inc
jg
cmp
pusha
cmp
xchg
jl
cmpsl
inc
out
add
sbbl
adc
inc
out
outsb
das
add
iret
addb
and
xchg
cs
pop
dec
inc
dec
scas
push
dec
fs
push
imul
pusha
dec
pop
add
add
stos
pop
inc
lcall
aas
push
add
fiaddl
inc
mov
pop
push
sub
add
or
pop
dec
pusha
les
in
pop
lock
ljmp
mov
jo
iret
loopne
ror
testb
bound
pop
clc
jae
pop
and
push
scas
nop
or
xor
test
hlt
add
jo
incl
andb
jae
cmp
adc
add
gs
jb
mov
dec
cmp
lds
inc
cwtl
fistps
loopne
mov
pop
inc
cwtl
loopne
scas
add
hlt
push
nop
push
outsl
ljmp
xor
dec
bndldx
and
mov
bound
pop
daa
jo
jg
outsl
addl
pop
mov
scas
lock
pop
dec
jg
mov
or
je
push
or
imul
adc
push
xor
stos
icebp
es
ds
pusha
loopne
pop
jo
rorb
fmuls
push
ds
inc
jecxz
pop
sti
or
and
push
mov
adc
es
add
int
fistpl
sahf
push
and
repz
jg
jmp
outsb
mov
mov
test
xor
jns
out
jns
aaa
jne
sti
cmp
mov
push
xor
incl
fs
js
jl
push
xchg
pop
sub
mov
dec
notl
dec
mov
push
pop
xchg
push
dec
jge
sbbb
adc
mov
mov
push
xchg
pusha
data16
test
adc
and
mov
es
loopne
adc
sub
in
and
int
xor
inc
out
mov
in
sarl
jo
push
pusha
mov
fyl2x
cmp
and
in
hlt
loopne
sbbb
mov
dec
rorb
push
rclb
cmpsl
push
imul
mov
or
imulb
push
es
rolb
sub
push
push
xchg
iret
sub
shll
xchg
mov
and
loopne
push
adc
test
jge
mov
imul
jl
push
and
pop
sbb
popa
jbe
push
lret
sbb
mov
jle
push
adc
cwtl
push
push
add
jae
imul
push
pop
add
jb
or
sbb
push
lahf
mov
cs
add
or
xchg
xor
loopne
or
and
rolb
icebp
push
scas
mov
das
or
lahf
mov
add
int
aad
add
xchg
fiadds
ficoms
fs
mov
add
aad
pusha
outsl
pop
jne
and
adc
xchg
xchg
jl
repnz
add
add
test
push
cmpsb
sbb
rorb
test
inc
icebp
push
in
repnz
jl
clc
inc
cmpsb
jns
inc
push
inc
cs
nop
outsl
push
filds
jnp
lock
or
push
push
mov
rorb
push
push
jae
das
lock
pop
jg
into
mov
aas
lock
pushf
call
or
insb
add
addb
inc
push
mov
dec
push
insb
and
xorb
add
dec
mov
push
push
mov
jbe
pop
sub
das
add
je
and
pop
das
mov
fldcw
push
pop
das
sarb
cmp
js
in
mov
outsb
push
mov
popa
test
and
add
in
dec
pop
mov
popa
int
divb
outsb
mov
sarb
fs
push
mov
pop
enter
cmpb
pop
push
test
lods
push
sahf
cs
xor
out
push
addb
roll
lock
push
jno
cmp
and
mov
mov
nop
pop
in
test
outsl
and
dec
and
mov
pop
jns
cmpb
adc
xorb
in
call
clc
scas
add
in
rorb
pop
pop
aas
sbb
stos
jne
push
outsl
mov
das
push
pusha
adc
xor
incl
push
add
iret
mov
inc
loopne
push
add
pop
add
repnz
or
push
pop
add
push
adc
pop
add
bound
jg
insl
mov
jae
pop
push
mov
dec
push
xchg
icebp
movsb
sub
mov
or
jnp
ss
pop
jl
nop
addl
pusha
pop
sbb
mov
paddq
pop
push
mov
sbb
mov
adc
and
sarb
int3
jb
arpl
cs
mov
imul
pop
or
add
lock
aad
nop
scas
in
das
and
das
xchg
jo
mov
mov
add
loopne
add
mov
or
aad
mov
xchg
nop
lds
sarb
adc
test
and
cmp
dec
ja
call
lret
sub
shll
stc
pusha
call
sar
notl
adc
pop
pop
add
jns
std
test
pop
iret
xchg
mov
inc
inc
xchg
addr16
daa
mov
inc
inc
ja
leave
mov
dec
pop
pop
leave
mov
dec
push
xchg
cmp
repnz
push
push
xchg
mov
inc
add
jns
dec
sti
out
sbb
inc
inc
add
cmp
dec
dec
xor
cmp
pusha
dec
dec
cmp
cmp
cmp
push
push
lock
cmp
cmp
push
and
pop
pop
pushf
cmp
pushf
andb
and
rclb
add
pushf
push
or
xchg
lock
aas
mov
nop
pop
xor
lcall
mov
add
aas
aas
stos
push
popl
push
fdiv
xor
push
ds
ret
mov
inc
shl
aaa
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fnstcw
cmpsl
push
fdivr
dec
xor
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
rcrb
pushl
rclb
arpl
jo
jnp
scas
inc
loope
test
jmp
pop
jp
dec
out
nop
sub
iret
mov
inc
pop
sub
jg
cmp
jl
adc
enter
aas
subb
imul
das
pop
pop
mov
aas
lahf
shrb
nop
das
bound
fldcw
add
mov
ret
pop
pusha
dec
loope
adc
and
add
add
adc
into
xchg
mov
cs
icebp
push
inc
mov
sub
psubusb
sbb
les
das
sub
push
and
das
add
jl
pop
pusha
inc
add
ret
push
lea
add
jbe
adc
out
cmp
jg
mov
push
adc
inc
lahf
rolb
mov
xor
push
and
dec
iret
enter
add
inc
pushf
and
inc
and
inc
add
pop
mov
rol
jp
cmp
mov
push
stos
xor
call
out
out
aas
push
xor
or
mov
dec
jae
add
inc
adc
and
inc
jecxz
cs
adc
out
add
or
xor
push
je
addr16
fisubrs
rorl
inc
adc
imul
in
push
imul
imul
inc
cmpb
sbb
add
adc
xchg
or
push
inc
rolb
adc
lea
adc
repz
lea
push
and
repz
sub
sub
sbb
repnz
cmpsb
or
pop
je
dec
sbb
mov
roll
cmp
sub
popf
cmp
push
push
and
out
cmp
xor
es
sahf
out
daa
cs
sahf
cmp
aas
ret
xor
ret
add
mov
test
fscale
push
iret
repz
stc
icebp
loope
addl
cld
clc
lock
push
jns
cmp
testb
inc
lds
push
inc
dec
fmuls
mov
and
jae
push
push
mov
sbb
sbb
push
bound
mov
inc
sub
mov
push
sbb
push
and
mov
jle
xor
outsb
push
ss
andb
sbb
or
mov
push
sbb
mov
mov
ss
add
decl
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
jmp
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
ljmp
xor
or
cmp
add
xor
bswap
aas
incl
dec
mov
jae
decl
jg
loopne
shrb
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
ljmp
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
dec
mov
incl
ja
call
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
jmp
push
add
xor
push
into
incb
shll
or
inc
mov
mov
jle
inc
mov
decl
jge
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
mov
pushl
clc
insl
popf
pop
or
push
leave
cmp
add
decl
inc
mov
mov
jns
inc
mov
sub
sbb
es
sub
sbb
and
add
ljmp
xchg
push
test
gs
push
popf
add
mov
mov
jne
daa
inc
pop
sub
repz
aas
sbb
jle
outsb
or
or
repnz
mov
pop
outsb
mov
in
and
inc
das
jg
out
nop
sbb
sbb
xor
mov
jg
mov
das
adc
add
mov
bound
jle
bound
add
add
call
popf
and
hlt
and
dec
das
xor
xor
pushl
ss
xchg
outsl
gs
std
sub
out
mov
sub
inc
mov
xor
aas
out
fcoml
enter
arpl
fs
mov
mov
and
or
cwtl
das
xchg
mov
loopne
mov
sub
mov
xor
inc
inc
xchg
adc
xchg
loopne
inc
inc
sub
mov
scas
cs
mov
cmpb
mov
cmp
jle
jle
xchg
out
jne
or
pusha
sub
push
push
daa
aaa
add
push
out
pop
pushf
mov
fldenv
xor
lahf
or
mov
mov
loop
mov
outsb
xor
mov
adc
xor
orl
mov
xor
sbbb
loopne
mov
add
add
jno
shl
inc
inc
jmp
push
dec
ss
pop
dec
jecxz
call
push
jg
inc
je
inc
add
into
add
push
cmovae
je
adc
sub
jb
gs
ss
adc
stos
pop
mov
add
call
das
jns
add
and
mov
push
sbb
pop
dec
in
iret
jae
fwait
xor
pop
xchg
inc
test
scas
clc
adc
and
mov
jbe
and
dec
adc
sub
and
mov
push
bound
and
jl
adc
jge
daa
xchg
test
xchg
sub
enter
and
inc
int3
jge
or
cmp
mov
int
and
mov
into
lods
jnp
repz
add
sahf
cmc
push
cmpsb
loope
fiadds
inc
sub
cmp
test
pop
ljmp
imul
mov
mov
popw
push
or
movl
cmp
dec
add
aas
inc
imul
inc
cld
or
push
jle
jb
jae
lret
or
push
xor
pop
into
pop
scas
loopne
pop
dec
push
push
lahf
mov
push
orb
and
add
sub
fdivs
dec
inc
insb
in
loopne
imul
pop
xor
out
push
in
xor
adc
push
fsts
mov
push
mov
inc
mov
repz
das
mov
int
imul
jns
std
dec
mov
imul
imul
dec
pop
dec
mov
rorl
out
dec
sbb
push
dec
into
inc
and
out
push
add
adc
rcrb
pop
loope
stos
lock
addl
pmaxub
loopne
ljmp
inc
xor
in
aaa
and
mul
shll
flds
or
andb
pop
and
imul
scas
sbb
es
decl
push
jg
sbb
jg
and
cs
pop
mov
fwait
adc
cmpsb
fs
data16
inc
pusha
adcl
sub
add
inc
mov
dec
inc
mov
bound
test
xor
pop
popa
push
xchg
sub
inc
lods
push
and
xchg
dec
mov
dec
push
and
outsb
jae
loop
data16
mov
and
out
jge
pushf
cmp
push
cmp
xchg
cmovnp
outsb
fs
cmp
insb
xchg
int
in
lea
sub
andl
inc
cmp
jnp
pop
int3
popa
das
xor
xor
pop
and
enter
fisubrl
cs
ds
cli
push
cvttps2pi
aas
aaa
jns
and
sbb
add
loop
push
shrl
mov
sahf
out
out
popa
mov
cs
add
pcmpeqd
add
orb
iret
cs
inc
lcall
pushf
out
sahf
ljmp
or
icebp
jne
outsb
jae
cli
scas
lods
out
jle
mov
dec
enter
adc
xchg
mov
inc
data16
insb
fs
or
xor
daa
and
jae
add
pop
cmp
push
or
mov
inc
dec
inc
jb
or
jnp
push
sbb
ss
insl
outsl
scas
gs
test
outsb
into
outsl
jb
add
movsl
mov
in
sbb
pop
pusha
popa
les
imul
push
rcrb
inc
enter
mov
scas
lret
dec
adc
inc
push
rcrl
lret
insl
insb
jb
pop
inc
dec
adc
inc
insb
mov
xlat
mov
pop
fisubrs
add
xlat
lods
and
xchg
add
sbb
add
cmpsb
cmpsb
sbb
sbbl
dec
scas
xor
je
push
test
jae
or
jl
js
dec
dec
les
inc
inc
enter
pusha
jle
pop
out
and
enter
nop
sub
loopne
iret
or
incb
push
jns
or
mov
pop
and
adc
into
sbb
and
cmp
mov
int3
xor
dec
sub
lcall
cmpb
mov
add
inc
sub
rcll
loopne
add
jbe
mov
inc
cmp
repnz
and
xchg
push
add
dec
pop
sbb
js
mov
ficompl
inc
push
sets
add
adc
push
faddl
jno
dec
jp
fldl
push
sti
push
cwtl
lahf
ret
pop
addb
cli
xchg
out
cmp
fisubs
jecxz
fisttps
mov
leave
mov
loopne
mov
mov
fwait
add
inc
out
aas
es
cs
lods
push
jmp
mov
push
xchg
lock
loopne
or
icebp
lcallw
lahf
popl
iret
sarl
and
pop
inc
addr16
out
pusha
sub
cmpsw
jle
sti
pop
mov
scas
cmpsb
ret
cmp
mov
jns
mov
push
shlb
test
xlat
ja
pop
dec
push
es
mov
sahf
or
jmp
push
repz
imul
mov
movsb
in
sbb
ficomps
repnz
aaa
shrl
rorb
fdivrp
nop
mov
jo
mov
and
xchg
fnstsw
lret
cmpsb
leave
outsb
adc
pop
sub
sbb
das
pop
adc
out
imul
jb
jbe
push
popa
test
or
cmp
test
sub
jmp
push
pop
lock
lea
iret
fcoml
jp
dec
repz
pop
movsl
push
mov
push
mov
pop
vmwrite
ss
push
cmpsl
inc
pop
fimuls
dec
mov
inc
dec
sbb
imul
das
mov
sahf
adcb
test
js
jecxz
jg
push
iret
push
pop
dec
xchg
out
outsl
nop
ljmp
subb
add
xchg
arpl
dec
loopne
mov
sub
outsb
xor
and
push
adcl
pop
sub
add
mov
ficoms
enter
in
jge
dec
iret
mov
leave
test
jne
popa
insl
sub
xchg
aad
lods
jle
andl
pop
mov
xchg
loop
lret
loop
shrl
inc
insl
fs
and
mov
and
into
push
sldt
out
lds
mov
add
mov
pusha
sbb
sbb
rolb
inc
daa
js
xor
push
push
pop
outsl
ja
lds
fildll
outsl
shrb
addb
mov
dec
jnp
cmpsb
mov
mov
dec
sbb
push
sbb
pushf
dec
push
loopne
idivl
add
dec
addb
mov
dec
inc
movsb
cmp
cmp
pop
testl
es
outsb
pushf
imul
dec
test
lods
ss
push
dec
js
stc
flds
mov
mov
packuswb
inc
xor
push
enter
ljmp
dec
xor
adcl
add
sub
dec
das
in
lcall
or
aas
add
push
outsl
or
shl
outsl
lahf
xchg
dec
pop
fsubrs
test
pop
das
add
jo
fisttps
push
insb
iret
dec
inc
sub
push
testb
add
add
xlat
inc
push
scas
bound
inc
mov
outsb
movsl
add
inc
pop
movb
addl
nop
ret
jae
pop
mov
pop
xchg
add
inc
insb
cmp
shlb
lahf
fnstcw
outsl
adc
leave
cmp
push
stos
jle
cmp
in
bound
inc
xchg
cmp
scas
mov
dec
dec
dec
fnstsw
jo
mov
pop
mov
xchg
inc
mov
sarb
push
movsl
sbb
setp
mov
icebp
addr16
fs
addr16
mov
pop
xchg
arpl
dec
pop
jne
jbe
pop
shlb
mov
push
xchg
cmp
push
dec
inc
ret
cltd
mov
push
ja
push
xor
pop
iret
ljmp
lea
cmc
or
push
push
cmpsb
mov
addr16
imull
push
orb
test
inc
pop
adc
inc
and
cmp
fs
xlat
cmp
and
adc
add
fs
or
sub
push
inc
inc
adc
gs
roll
mov
pop
dec
ds
subb
sub
addr16
je
daa
xchg
dec
jne
orb
incl
add
inc
fsubl
sarl
push
inc
jae
fnsave
push
into
mov
mov
outsb
jns
jg
out
or
inc
push
jne
xor
jle
push
push
adc
jle
loopne
sbb
and
jae
cmp
jbe
inc
xchg
adc
cmpb
adcb
test
pushl
daa
jns
test
xchg
inc
dec
dec
inc
inc
dec
pop
dec
inc
or
movl
inc
push
inc
inc
ss
pusha
mov
addr16
js
pusha
push
and
pop
jle,pn
push
push
sbb
es
mov
fstpt
fnsave
dec
inc
and
push
xor
cmp
sub
test
testb
lcall
out
cmp
outsl
dec
aaa
sbb
xchg
xor
and
jo
arpl
out
push
ja
jno
inc
cmpsb
sbb
xchg
sub
add
jo
add
jbe
data16
sbb
xor
xor
adc
cwtl
add
mov
inc
lock
out
outsl
jo
mov
popa
lods
inc
dec
sbb
fs
arpl
adc
mov
mov
xor
fistps
scas
inc
aaa
insl
jle
mov
pop
mov
mov
pop
das
imul
add
lret
fadds
insl
add
jl
mov
jbe
adc
cmp
fnstsw
sbb
pop
pop
push
cmp
jne
sbb
jne
jae
push
sub
sbb
add
out
or
dec
movb
enter
sub
inc
sub
and
xor
cmp
pop
push
sub
push
sub
push
es
fcompl
mov
cwtl
imul
outsb
mov
add
dec
push
mov
stos
inc
xchg
shrb
sbb
sub
insb
inc
int
mov
jle
iret
clc
incl
ret
mov
inc
mov
pushf
insl
out
jg
sets
inc
jbe
jns
xor
data16
es
outsl
fs
push
or
bound
fs
mov
gs
cmp
aas
sub
js
invd
jb
fldl
fistpl
pop
in
inc
xor
imul
pop
daa
popa
sub
xadd
ficomps
inc
cmovs
fidivrs
sub
les
dec
loopne
xor
jo
add
inc
adc
pop
cld
enter
or
leave
add
jae
das
ror
lds
fs
push
outsl
and
sub
or
leave
mov
and
cs
push
das
pop
out
push
fcmovnu
dec
push
dec
pop
outsl
hlt
rclb
lcall
lods
push
cs
insl
and
pop
add
push
add
add
xor
cmp
sub
xchg
add
cld
push
push
pop
push
and
notl
jmp
pusha
add
jo
add
inc
ja
or
lock
sbb
push
jne
add
pop
adc
push
outsb
nop
insb
adc
and
or
shr
pop
lock
jbe
dec
hlt
push
pop
push
dec
das
add
add
dec
fiadds
inc
push
add
sbb
bound
or
rorb
inc
push
pusha
outsb
mov
orb
mov
cmpsb
mov
lods
andl
iret
dec
add
adc
call
mov
jne
daa
pop
sbb
and
sub
insl
in
push
or
mov
pop
cwtl
adc
push
pop
outsb
loop
mov
adc
push
dec
inc
call
push
dec
dec
inc
add
andb
jg
les
cld
pop
dec
sbb
scas
sub
adc
minps
fimull
pop
or
and
mov
sbb
jp
rcl
fmuls
sub
add
add
rorl
repz
test
add
insb
mov
insb
lock
xchg
or
cmpsl
xchg
pop
xor
outsl
mov
pusha
daa
pusha
sarl
mov
lahf
add
xchg
fcomps
testl
xor
xchg
lahf
lahf
cwtl
sub
insl
leave
outsl
adc
xchg
or
fistpll
add
lahf
xchg
enter
mov
and
aas
loopne
lock
loopne
inc
pop
and
mov
fstl
lahf
outsb
and
push
xchg
jg
aam
xor
mov
push
xchg
daa
dec
lahf
fistl
cmp
mov
daa
mov
pusha
js
pop
adc
test
and
xchg
daa
js
clc
fldt
sub
mov
in
xlat
loopne
das
dec
mov
pusha
scas
xchg
js
or
or
dec
jo
jne
shlb
sub
jg
aad
and
les
push
clc
mov
jns
mov
iret
lds
nop
jo
andl
add
ja
scas
shrb
mov
fsubr
das
xchg
daa
mov
xchg
push
leave
or
movsb
cmp
push
daa
enter
lock
and
not
sub
mov
fcoms
clc
lahf
sbbl
insl
sub
xor
nop
xchg
aaa
scas
pusha
cmp
mov
add
push
jb
clc
xchg
adc
scas
push
mov
push
cmpsb
xchg
push
sub
cmp
lahf
addb
fldl
iret
mov
adc
loopne
clc
lahf
xchg
cmpsl
lahf
shlb
outsb
mov
cmpsl
dec
cmpsl
xchg
fcoms
add
cs
cwtl
outsb
addb
push
lock
sub
shlb
sbb
jb
cmp
iret
clc
cmpsl
adc
xchg
daa
cmp
nop
test
xchg
mov
cwtl
out
sub
lahf
addb
mov
mov
fisubl
adc
rclb
scas
xlat
scas
cmp
bound
fisttps
test
xchg
mov
fcomps
adc
enter
jg
fadds
add
sub
mov
daa
pop
scas
pop
insb
stos
jmp
stos
mov
and
enter
outsl
lock
in
mov
adc
stos
xchg
daa
add
cmpsl
outsb
fldl
add
fsubs
add
or
outsb
mov
lahf
xchg
push
je
loopne
ja
ret
adc
xchg
adc
cmpsl
xor
das
and
daa
pop
pop
popl
xlat
js
sub
add
and
mov
mov
lahf
xchg
daa
inc
fcos
xchg
pop
and
lods
lods
pop
push
mov
pop
fcos
lods
outsb
mov
repnz
lahf
xchg
daa
mov
nop
lods
outsb
fldl
test
mov
mov
xor
sub
loopne
leave
sub
xor
subb
daa
fcmove
subb
scas
xchg
mov
or
ljmp
lahf
xchg
scas
outsl
fisubl
nop
pop
push
pop
sub
inc
scas
cmpsl
pusha
daa
pusha
xlat
mov
add
fidivrs
sbb
mov
daa
shrb
pop
je
clc
das
inc
mov
sub
ja
daa
or
into
rol
mov
jge
mov
add
adc
mov
fadds
add
mov
dec
shlb
pop
loope
outsb
adc
pusha
call
jl
stc
aad
test
nop
mov
jae
push
enter
adc
xlat
xchg
out
enter
subb
jmp
daa
push
and
lcall
sub
ficoml
sub
xchg
pusha
test
in
sub
shlb
sub
and
loopne
dec
mov
add
jns
inc
or
pop
add
nop
lcall
dec
pop
adc
nop
and
testb
fadds
testb
movq
pusha
packssdw
mov
xchg
in
subb
lahf
stos
mov
mov
sarl
jg
sub
ret
in
call
mov
outsw
xchg
add
adc
fistps
push
add
xor
iret
or
push
dec
xor
daa
fnstsw
js
scas
nop
imul
mov
adc
lret
mov
mov
aaa
jnp
cld
pop
add
adc
pop
sbb
sub
xor
sbb
pop
pop
pop
cmp
sub
das
pop
jo
or
jae
test
cmp
repz
add
pop
jo
das
iret
dec
ficompl
in
nop
rcrl
add
nop
dec
cmpsb
and
inc
out
jns
add
into
push
scas
push
pop
vmread
adc
cwtl
push
enter
rol
test
push
call
jb
repz
add
or
xchg
xchg
pushf
add
push
cmp
push
mov
dec
repnz
mov
dec
in
mov
pop
xor
cmp
pusha
push
pop
jb
mov
dec
mov
test
push
pop
lcall
dec
mov
dec
jo
js
cmp
push
mov
daa
push
sub
decl
out
pop
or
repz
pop
push
jns
pop
add
pop
clc
str
loopne
xor
or
mov
xor
or
push
enter
mov
pop
and
pop
jo
bound
lcall
bound
enter
pop
shl
jns
js
sbb
mov
or
dec
mov
mov
push
cmpsl
outsl
and
test
push
pop
fists
mov
idivl
fcoml
orb
push
add
sahf
push
lods
pop
mov
or
or
or
popf
test
cmp
repnz
out
push
or
out
sahf
out
adc
adc
out
sahf
adc
adc
jns
out
adc
out
sahf
out
sbb
jns
sbb
sbb
sbb
jp
out
sbb
lods
nop
xchg
cmp
or
mov
dec
add
push
dec
and
dec
jo
enter
js
xchg
xchg
or
jb
mov
or
or
or
or
or
jb
enter
or
or
or
inc
mov
or
or
or
jb
enter
or
or
or
mov
sahf
or
or
or
or
enter
or
or
or
sahf
aaa
jb
or
pop
in
sahf
out
and
add
icebp
dec
or
ja
pop
ja
pop
push
push
outsl
ror
dec
sbbb
inc
cmpsb
xor
add
sti
cmp
jle
mov
cltd
add
inc
test
sbb
imul
or
mov
rcr
cmpsb
or
rcr
pavgb
mov
pop
jg
insb
lcall
mov
sub
pop
mov
push
dec
loopne
pop
jb
jo
sarl
mov
xchg
mov
shll
leave
mov
rcll
mov
lock
loopne
ret
stos
xchg
or
sbb
push
mov
push
das
bts
pushl
push
add
sarl
out
add
or
inc
jg
outsb
or
or
gs
insl
pcmpeqw
cmpsb
fisubrl
mov
adc
repz
xchg
adc
adc
call
mov
push
jns
mov
incl
adc
psubq
push
adc
orl
mov
lds
push
out
mov
das
pop
punpckhwd
add
cmp
repz
xchg
mov
iret
mov
shrl
and
dec
rclb
scas
jo
sbb
fcoms
jecxz
das
stc
or
int3
pop
pop
add
lahf
or
les
adc
adc
adc
mov
out
add
dec
gs
push
out
sahf
out
pop
jnp
xchg
out
xchg
add
leave
mov
bswap
mov
iret
popl
jg
dec
dec
scas
lock
add
femms
addr16
dec
dec
sbb
adc
adc
out
jbe
pop
pop
jg
outsl
add
outsl
pushf
pop
mov
scas
outsl
mov
out
push
lods
daa
push
mov
adc
or
dec
clc
sub
mov
das
es
enter
dec
xor
adc
pop
test
lahf
scas
mov
adcb
scas
mov
test
mov
mov
leave
repz
fucomip
adc
adc
enter
push
and
mov
inc
jg
fsubl
push
adc
or
dec
pop
push
pop
or
mov
add
adc
dec
add
jns
ret
cmpsl
and
iret
xor
fisubs
pop
inc
dec
push
arpl
je
jle
jo
jo
jo
lahf
xchg
or
aas
test
aaa
xlat
add
jle
adc
ror
adc
addr16
inc
adc
jb
test
pop
rcll
cmp
rcr
scas
pop
aaa
cmp
pop
mov
push
loope
pop
sbb
jg
dec
or
adc
mov
lret
pop
imul
pop
or
jb
mov
leave
adc
xor
mov
in
loopne
clc
lret
cs
lret
mov
js
xor
lret
iret
mov
and
add
rcr
push
pop
dec
jae
bound
divb
push
mov
mov
test
enter
out
bound
cmp
xor
mov
dec
pusha
sub
ret
leave
and
dec
outsb
xchg
sbb
push
pop
imul
int3
call
in
sbb
int
in
arpl
sbb
dec
int
mov
push
jb
leave
ss
test
iret
test
in
mov
xchg
aam
mov
jp
sub
aas
shlb
dec
add
xchg
sbb
pushf
xchg
and
out
test
ror
sbb
sub
xchg
fmul
cwtl
mov
or
nopl
push
in
or
das
inc
outsl
nop
jbe
daa
daa
fwait
cmpsb
out
js
bound
mov
loopne
pop
sarb
push
scas
add
out
or
pop
sbb
sub
stos
call
xor
mov
mov
cmp
pop
push
dec
enter
pusha
jo
push
enter
mov
es
enter
dec
leave
xchg
popf
pop
add
and
lock
adc
inc
clc
sbb
ror
leave
mov
sbb
add
push
pop
adc
sbb
bound
or
iret
xor
rcl
scas
sbb
inc
sbb
pop
sbb
xchg
xchg
xchg
sbb
jge
mov
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
jns
jne
sbb
dec
sbb
push
push
sbb
jns
out
sbb
sbb
sahf
push
sbbb
and
and
jns
out
and
and
sahf
fisubl
in
lock
out
sub
sub
sbb
repz
sub
iret
xor
cmp
and
mov
push
enter
das
sbb
outsl
sbbl
cmp
lods
sbb
xlat
sbb
in
repz
repz
or
iret
repz
inc
adc
repz
adc
jno
jg
iret
repz
lea
iret
repz
cmp
aam
rcrb
fistpl
xchg
and
out
icebp
push
cld
push
push
sub
rolb
lcall
imul
and
femms
adc
pop
pop
mov
add
pop
ljmp
adc
pop
js
pop
and
scas
mov
mov
xchg
enter
xor
and
sbb
sub
xchg
sub
inc
xchg
sub
xchg
push
push
in
nop
mov
mov
loopne
mov
shlb
pushf
jmp
icebp
and
and
enter
and
and
jb
and
and
and
pop
pop
ds
push
and
push
inc
push
icebp
orb
outsl
xchg
shr
mov
iret
mov
ret
jns
ja
push
add
jecxz
addl
out
and
and
call
push
rcr
int
inc
and
cmpsb
sub
fdivrs
dec
mov
dec
subb
add
pop
mov
ja
mov
fucomip
in
pop
enter
pop
pushf
pop
and
or
lock
cmp
mov
verr
ud2
push
add
in
jbe
and
aaa
cmovb
jg
sbb
fmull
fldcw
loope
mov
push
push
int3
sbb
pop
jg
scas
pop
sub
and
add
rcrb
pushf
fdivs
lock
and
and
mov
nop
pop
push
cmp
push
xor
pop
push
cmovo
fmuls
jo
and
or
scas
nop
imul
xor
pop
fstpt
and
and
repnz
sub
mov
scas
nop
sub
sbb
int3
lret
xchg
daa
pop
and
dec
mov
jno
fcompl
pop
outsb
pop
and
in
adc
dec
cwtl
cmp
xchg
sub
rcr
leave
lret
inc
cmpsb
es
outsb
nop
dec
es
fstp
inc
sbb
iret
call
xor
in
subl
loopne
jne
mov
out
in
inc
dec
push
sub
fcmovnb
incl
repnz
add
pop
seto
testl
add
fnstsw
repnz
sub
fisubs
sub
cmp
and
xor
mov
lret
xchg
xchg
popa
fistpll
mov
test
es
dec
ret
push
mov
in
cs
cmp
ror
cmpsl
imulb
and
out
xlat
xchg
fldcw
js
fsubrp
xchg
iret
pusha
fucomip
mov
loopne
nop
adcb
iret
sbbl
mov
repnz
incl
daa
or
or
lcall
pop
ja
inc
jno
xchg
filds
ds
and
aas
fdivr
pop
xchg
add
inc
enter
dec
scas
nop
dec
scas
inc
fsubs
push
enter
addb
jbe
adc
dec
scas
mov
loopne
xchg
xor
or
scas
or
cmp
sub
sub
loop
in
or
pop
xor
loope
adc
pushf
xchg
sub
add
sbb
pop
sahf
sub
cmp
mov
rcrl
scas
nop
sub
lock
cmpsb
cwtl
lock
clc
or
iret
sub
xor
adc
rclb
xchg
pop
imul
enter
push
nop
cwtl
orb
and
sub
dec
xchg
jmp
dec
loopne
scas
popf
je
call
jb
dec
jnp
sub
xor
jmp
pop
call
inc
sub
dec
mov
dec
fsubl
xlat
das
pop
cmp
jmp
jae
cmpsl
xchg
xchg
fsubrl
popl
in
sub
add
in
dec
push
and
cmp
in
sub
in
incb
dec
fdivrl
addr16
addb
mov
adc
and
pinsrw
push
cs
add
rolb
bnd
dec
sbb
pop
leave
sub
call
sub
sub
pop
pop
das
sub
sub
pop
pop
sub
subl
sub
pop
pop
lahf
sub
sub
pop
pop
xlat
sub
sub
sub
sahf
out
femms
adc
adc
out
cmp
push
inc
sub
xor
pop
pushf
pop
mov
daa
pop
orb
xchg
sub
jo
pop
mov
popf
pop
and
lock
add
mov
call
lahf
dec
movntps
ljmp
outsl
xchg
dec
popf
push
mov
enter
dec
mov
es
in
jbe
leave
mov
outsl
ret
bswap
das
lods
sbb
inc
cs
cs
nop
dec
mov
mov
push
insb
add
pop
push
dec
scas
nop
imul
push
dec
push
sahf
adc
ljmp
mov
jecxz
iret
fwait
jg
sahf
add
pusha
ljmp
cs
and
cs
or
sbb
mov
das
dec
das
xchg
xchg
and
das
pop
das
insb
push
sbb
jp
mov
nop
das
jmp
xlat
push
enter
pop
and
dec
pop
and
dec
scas
nop
mov
push
fcomps
addps
inc
outsl
mov
punpckhbw
jo
js
incl
je
fbstp
xlat
scas
fcoms
dec
addb
and
ljmp
lock
clc
scas
fsubs
xor
in
xor
scas
nop
dec
sub
jns
das
out
push
in
push
js
sub
jae
jo
shrl
add
in
dec
mov
call
rorb
shrb
xchg
loopne
add
cmpsb
cmp
xor
nop
inc
push
enter
xor
shlb
push
test
mov
pop
nop
and
nop
dec
outsb
sub
push
nop
dec
dec
scas
rcr
adcb
mov
xchg
and
loopne
xchg
xchg
sub
lock
leave
adc
xchg
into
leave
adc
dec
push
dec
add
add
bound
jg
pop
leave
inc
andb
add
nop
jo
ljmp
xchg
aaa
xchg
pushf
push
ds
inc
mov
push
enter
imul
dec
fmul
in
adc
fdivr
dec
cltd
in
repnz
adc
or
in
mov
mov
pusha
enter
or
test
pop
jb
pop
inc
mov
test
les
fdivrs
pop
loopne
xor
sahf
dec
dec
and
repz
or
hlt
adc
aam
mov
in
or
das
scas
pop
or
mov
add
mov
push
call
push
jb
iret
lock
scas
or
fsubl
inc
dec
repnz
cmc
loope
and
pusha
sbb
insl
push
fwait
dec
and
jmp
and
movsb
mov
add
pop
jno
adc
and
cltd
inc
jl
testb
mov
mov
jnp
pushf
cmpsb
nop
adc
divb
outsl
shlb
mov
negl
pop
or
add
shrb
out
pop
xchg
push
nop
inc
sahf
sub
add
xchg
mov
dec
or
shlb
xchg
pop
and
cmpsb
nop
xchg
pop
xor
clc
inc
dec
scas
nop
dec
dec
pop
nop
dec
scas
nop
jo
cwtl
or
scas
addb
pop
mov
pushf
shld
mov
test
decl
scas
js
inc
cmpsb
mov
adc
inc
pop
and
das
mov
decl
cli
adcb
inc
push
test
iret
pop
cli
jo
sub
out
dec
icebp
mov
addb
jmp
aaa
pop
add
pop
and
push
dec
sub
adc
cld
dec
in
add
fdivrs
sbb
dec
adc
pop
loopne
adc
cmp
inc
cmpsb
psubusb
add
inc
cs
inc
jl
mov
push
movsb
sub
out
mov
pop
mov
dec
aam
fdivrl
add
jl
mov
and
pop
push
in
jo
ds
sbb
out
lock
daa
daa
stc
add
ljmp
enter
dec
js
and
inc
pushf
stos
push
enter
dec
lock
and
sbb
sub
adc
and
jo
mov
and
rclb
push
mov
les
fdivrs
in
fbld
mov
or
xor
cmp
nop
pushl
lds
fsubr
sbb
adc
sub
cmp
add
iret
adcb
dec
cmp
in
subb
dec
insb
pcmpeqb
nop
mov
mov
jno
je
clc
jb
or
push
xor
xlat
adc
inc
pop
jo
addb
in
or
scas
jb
jb
enter
mov
push
incl
or
cmp
jle
nop
dec
jo
in
add
add
mov
daa
lret
mov
mov
inc
insb
ss
fldenv
inc
je
xchg
xor
xchg
dec
sbb
inc
mov
ds
inc
jbe
fsubl
sub
imul
sbb
imul
dec
mov
dec
pop
jo
out
pop
jnp
lahf
jp
sbb
idivb
scas
and
leave
push
xor
sbb
and
dec
int
add
cmpb
insl
add
inc
add
movsb
imul
pop
adc
mov
push
call
fmuls
pop
mov
push
inc
loopne
js
nop
addl
mov
sub
adc
push
scas
push
outsl
insb
and
jb
jecxz
pop
add
mov
mov
pop
fnstsw
fwait
push
leave
or
push
adc
into
and
loopne
pusha
mov
jl
fildll
xor
insb
push
outsb
out
movsb
lea
sbb
or
add
push
data16
xor
add
add
sbb
mov
loope
dec
nop
fucomp
sub
data16
shlb
add
ret
in
adcl
or
rcl
push
add
inc
outsb
ss
pop
orl
add
add
add
loopne
xor
cld
inc
cltd
add
sbb
push
ret
mov
sub
mov
sbb
insb
push
loopne
mov
aaa
popf
int3
mov
hlt
xor
xor
addl
or
sahf
imul
stc
add
cld
sub
and
subb
mov
andb
das
mov
and
roll
andb
imul
cli
aad
dec
shlb
bound
pop
aad
pop
insl
subl
mov
pop
mov
mov
xchg
gs
adc
xor
int3
add
and
and
inc
push
xchg
lods
test
testl
fistps
dec
dec
mov
rcrl
jbe
push
pop
mov
add
rcrl
das
add
sub
xchg
loopne
loope
mov
es
sub
outsl
inc
int3
mov
bound
push
jnp
cld
add
cmp
or
lock
cmpsb
bound
jle
mov
adc
into
popa
fimull
add
dec
and
inc
and
push
pop
sub
xchg
inc
add
add
jnp
push
ja
push
mov
push
pop
scas
jbe
movsl
add
adc
push
insb
inc
mov
jb
xorl
pop
push
inc
push
adc
mov
mov
add
sbb
aaa
in
outsl
jo
xor
ret
sbb
imull
jo
aam
lret
jp
jbe
adc
imul
sahf
and
lcall
ret
cs
mov
or
gs
mov
inc
cmp
pop
xor
add
pop
lea
and
sbb
mov
inc
jl
xlat
cmpl
test
mov
mov
adc
std
inc
es
lcall
clc
sub
pusha
ss
cmpsl
sbb
mov
dec
rcrl
pop
mov
pop
mov
push
or
add
fs
fmuls
ret
pop
je
pop
or
jo
add
rclb
jbe
data16
lods
ds
pop
mov
and
andb
repz
pop
jae
cmp
xor
sbb
icebp
inc
das
push
arpl
or
push
stos
dec
pop
push
mov
sub
sbb
outsb
je
in
sbb
mov
mov
cwtl
sbb
add
sbb
out
pop
jo
cwtl
rol
sarb
inc
std
sbb
xchg
mov
jns
mov
sub
add
arpl
outsb
sbb
dec
inc
push
rcll
pop
orl
cltd
pop
add
sbb
inc
mov
arpl
mov
push
fisttpll
xor
fldl
mov
enter
mov
and
inc
in
or
fdivr
imul
mov
sti
sbb
adc
out
pop
add
push
inc
inc
add
jae
xchg
pop
or
xchg
ficomps
in
adc
dec
sbb
push
jne
leave
or
popf
cmpsb
xchg
cltd
jg
sub
insb
or
out
rcl
push
dec
nop
mov
lock
rcrb
pop
cwtl
loopne
mov
lds
test
gs
ljmp
mov
orl
add
jne
movl
dec
outsb
dec
inc
dec
add
push
push
pop
bound
imul
ss
es
sbb
sbb
lea
stos
scas
mov
pop
and
lods
push
aas
pop
lea
mov
imul
sub
cmp
loop
sbb
out
insl
cmp
cltd
ss
and
push
and
and
add
pop
cmpsb
inc
lea
inc
mov
dec
mov
inc
fs
test
push
lods
mov
push
insl
cmc
and
push
lcall
sbb
in
sbb
loope
scas
jnp
and
and
mov
pop
cmpsl
sub
add
sbb
push
mov
or
das
push
add
add
dec
clc
outsl
dec
push
sub
adc
pop
popa
jle
mov
mov
inc
insb
push
fadd
insb
mov
ljmp
jge
incl
dec
jb
test
pop
inc
mov
roll
xor
cmpsb
pop
movsl
frstor
pop
push
aaa
mov
xor
popa
cmp
es
or
adc
xlat
je
push
dec
mov
sub
dec
adc
jb
bound
xor
jnp
test
es
xor
xchg
add
dec
inc
ret
inc
int3
fcoml
dec
mov
inc
or
adc
and
imul
or
or
pop
dec
pop
sbb
jns
rolb
pusha
xchg
pop
cmpsb
add
or
dec
push
xor
inc
imul
pop
flds
or
inc
imul
pop
dec
push
out
dec
cmp
push
xchg
push
fistl
ffreep
and
xlat
and
adc
cs
pop
jl
add
cmp
jb
dec
jns
in
ss
xor
daa
jnp
sbbl
and
loopne
xor
sbb
arpl
xchg
enter
in
addb
sti
inc
cmp
xor
arpl
inc
inc
ds
xor
mov
aad
adc
aas
cmp
addr16
ds
cmp
mov
push
jno
dec
xor
ja
add
int
das
inc
cmp
dec
or
je
imul
lret
mov
pop
jg
and
mov
xchg
jbe
jbe
fs
test
and
jbe
fisttpll
arpl
movsb
mov
adc
push
add
repnz
push
xor
pop
sub
int
mov
lahf
jg
outsb
jo
sti
into
mov
mov
push
mov
mov
dec
adc
mov
jns
mov
jnp
pop
test
aas
rcll
mov
repz
xor
cld
push
dec
dec
dec
dec
lahf
sbb
pop
imul
rcrb
rolb
imul
jl
dec
inc
jg
add
call
dec
dec
dec
cs
push
push
sbb
lea
add
pop
sbb
or
outsb
xchg
cwtl
dec
dec
imul
lds
inc
inc
push
inc
push
lds
add
xchg
or
mov
jbe
jns
pop
sub
push
dec
inc
dec
test
push
push
lret
dec
push
and
mov
adcl
dec
jmp
add
and
outsl
sbb
cmp
add
push
mull
add
les
popf
pop
iret
fsubrs
adc
push
xor
mov
fsubrs
jge
and
fs
add
jae
lods
mov
insl
xor
cmp
add
inc
imul
in
and
pop
dec
movsb
xchg
mov
mov
xchg
jo
push
das
pop
sbb
xchg
add
dec
jbe
inc
sbb
mov
outsb
stos
mov
notl
addl
outsl
stos
fisubrl
lock
in
daa
inc
jne
cs
mov
mov
data16
fstps
popa
jnp
dec
popw
xor
add
imul
mov
out
movsb
push
and
stos
outsb
xor
and
pop
and
je
into
cld
inc
cmp
xchg
lret
xor
mov
add
mov
sub
inc
pop
add
cmp
pop
test
inc
adc
xor
arpl
xchg
mov
or
imul
loop
sbbb
xor
mov
sbb
lcall
sbb
add
push
popa
pop
or
jo
or
fimull
pop
jecxz
add
test
inc
xchg
or
aas
js
dec
sbb
pop
sti
mov
scas
add
jge
adc
stos
push
shll
sbb
jo
cmp
adc
mov
push
or
or
push
fcoms
jae
xor
bound
add
xor
sbb
scas
lret
fwait
sbb
bound
pop
mov
bound
mov
pop
pusha
pop
loop
pop
cli
mov
cmp
add
and
mov
dec
mov
and
push
and
icebp
lods
jne
mov
adc
dec
pop
bound
and
xorb
lret
push
mov
in
add
ret
jae
add
pop
mov
gs
je
cs
add
cmp
dec
push
fmull
jle
adc
in
sbb
jae
xor
xchg
xchg
insl
lea
cmpb
scas
dec
flds
mov
jns
add
push
mov
mov
adc
mov
pop
mov
jge
stos
jnp
popf
mov
xor
loopne
cli
popf
pop
pop
push
and
insb
subl
adc
scas
outsb
or
lock
subl
in
add
or
lcall
inc
add
xchg
mov
aas
jae
adc
inc
push
popa
ror
dec
inc
jmp
mov
xor
adc
adc
fisubl
dec
pop
pop
push
ljmp
nop
and
mov
test
cli
aas
dec
jecxz
iret
ss
fcmovne
dec
sbb
and
mov
xchg
mov
add
mov
jno
daa
pusha
and
stos
movsb
jbe
xor
or
popa
cmp
lea
add
push
daa
mov
movsb
push
push
jns
imul
lock
js
cli
pop
in
cmc
enter
lcall
add
je
loope
test
mov
aas
pop
inc
in
stos
movl
add
sbb
xor
xchg
sbb
sub
jmp
testl
outsl
repz
loopne
inc
cmp
pop
fmuls
loop
imul
mov
sbb
lds
pusha
jae
shll
gs
push
add
cli
push
pop
stc
and
pop
mov
jae
daa
sbb
ss
pop
add
xchg
pushf
loopne
jne
and
mov
cltd
mov
push
test
push
dec
popf
sbbl
js
roll
aas
push
jne
mov
mov
jmp
inc
cmp
cmpsb
mov
sbb
mov
das
adc
push
xchg
or
or
ret
pop
adc
daa
xchg
mov
sbb
xchg
leave
jmp
icebp
push
sub
pop
stos
mov
iret
mov
push
cld
push
add
hlt
ret
or
sub
cmpsl
cwtl
or
and
gs
bound
push
stc
cmp
mov
loop
adc
insb
ds
inc
pop
in
test
push
call
push
ljmp
mov
mov
push
repnz
push
mov
imul
mov
shlb
push
pop
push
lock
cmp
add
add
jo
pusha
ljmp
mov
scas
imul
repz
jle
loope
gs
add
fistpll
push
stos
scas
in
xchg
not
insl
push
mov
pusha
insl
xchg
in
mov
das
aaa
into
add
orb
push
addb
add
cmpsb
pop
andb
popa
aam
shll
test
push
sbbb
dec
xor
add
das
add
add
stos
fstps
push
fsubp
scas
mov
cmpsl
int
ud0
pop
fcom
ficompl
rol
jecxz
mov
lret
into
in
stc
fbstp
lret
mov
mov
stos
pcmpgtd
pushl
mov
into
jmp
mov
mov
pop
sub
mov
mov
mov
pop
mov
mov
into
sbb
mov
stc
adc
jne
fs
ljmp
enter
lret
mov
ret
jmp
sbb
pop
pop
xchg
dec
cs
mov
inc
movb
inc
inc
add
mov
push
mov
adc
push
xchg
cli
rol
iret
xchg
pop
jae
leave
iret
jo
push
sahf
jge
out
jo
outsb
add
into
les
sub
es
or
sub
sarl
adc
lcall
fcmovbe
mov
mov
mov
mov
aam
out
movsb
test
movsb
int
jns
test
in
imul
dec
push
adc
mov
pop
scas
dec
xchg
in
add
jmp
lahf
imul
in
andb
pop
dec
and
xchg
idiv
daa
cmc
add
outsb
pop
jmp
jmp
rcll
sub
jo
dec
pop
mov
insl
xor
fmull
jmp
push
mov
or
xchg
sbb
pop
cli
cld
rclb
mov
inc
adc
and
and
xor
aas
adc
aad
xlat
or
jmp
stc
jg
adc
imul
jg
inc
mov
lret
inc
incl
icebp
add
imul
sub
stos
jae
dec
verr
add
adc
mov
mov
stc
jmp
ret
imul
testl
inc
addl
xlat
inc
icebp
mov
add
push
orl
jmp
daa
pop
dec
dec
adc
add
or
mov
dec
ljmp
outsb
push
add
add
add
addb
aaa
clc
mov
jmp
dec
sahf
adc
push
jmp
pop
in
dec
daa
lcall
sub
add
xor
movntps
mov
in
daa
out
mov
add
daa
jno
aam
dec
xchg
lods
adc
mov
inc
fbstp
or
or
test
dec
cmc
pop
sbb
nop
mov
push
add
push
and
mov
ja
inc
add
ja
inc
mov
inc
xchg
add
mov
add
lahf
mov
pop
lods
daa
testl
push
add
aam
mov
mov
subb
mov
jg
dec
mov
fists
rclb
add
fimuls
or
xorb
sbbb
dec
dec
lcall
cmp
data16
push
xor
dec
inc
or
add
pop
jne
add
or
out
inc
je
out
adc
mov
sub
loope
push
jg
xor
subb
xor
pmaddwd
mov
daa
and
xor
dec
cmp
ret
jne
andl
inc
inc
xchg
add
or
adc
or
add
dec
xchg
out
jns
mov
filds
paddw
out
incb
rclb
out
push
mov
stos
add
andnps
push
testb
pop
inc
push
adc
loopne
pop
adc
mov
mov
verr
add
roll
inc
in
xchg
or
idivb
out
mov
jns
adc
cwtd
addb
add
jp
hlt
fidivrs
mov
jecxz
clc
xor
and
add
fadds
add
fldt
jbe
pop
cltd
add
jae
mov
out
pusha
addr16
mov
pop
imulb
addb
jg
pop
pop
jb
sbb
adc
stos
enter
dec
insb
cld
out
mov
adc
cmp
pop
add
jg
cld
cmp
divl
add
aad
fdivrs
jne
push
jge
loope
mov
cli
std
xchg
mov
push
test
fmull
ja
ja
repz
mov
inc
jbe
add
pop
adc
mov
cmp
ss
mov
add
add
sahf
mov
add
mov
int3
ja
add
ret
jmp
fidivrs
fiadds
frstor
jecxz
andb
inc
mov
pop
mov
add
add
mov
add
out
inc
add
das
add
loop
dec
mov
add
lods
and
decl
xchg
test
xchg
stos
push
and
dec
pop
mov
jecxz
rorl
addl
sahf
jbe
in
sti
jb
push
jne
gs
out
jae
ja
inc
inc
inc
scas
xor
mov
cli
push
movsb
sub
testb
inc
inc
add
mov
mov
mov
xor
es
dec
out
add
test
stc
pop
stos
mov
push
push
inc
in
decl
cli
addb
cmp
repz
push
xor
and
or
sahf
xorl
mov
inc
cmp
inc
jmp
add
inc
xor
dec
lret
stc
dec
call
mov
data16
pop
inc
bound
iret
shrb
mov
fdivs
test
in
and
fldl
into
lods
sub
and
divb
mov
lret
mov
and
xchg
mov
not
outsb
jnp
add
outsl
mov
mov
ror
mov
mov
into
fsubp
ja
pop
mov
mov
mov
fadd
fcompl
lcall
inc
setnp
dec
xlat
rcl
out
mov
int
into
mov
mov
fsubs
aad
pop
scas
mov
sbb
dec
push
int3
mov
ret
subl
daa
mov
sub
cmp
iret
mov
aad
iret
lock
xor
movsl
lds
and
jbe
ret
xor
ss
jmp
ds
inc
subb
push
es
jbe
stos
xor
shlb
inc
lock
mov
mov
adc
xor
and
outsb
jp
sbb
mov
ret
shr
sub
dec
out
or
rcr
adcl
inc
dec
push
sahf
sbb
xor
pop
cs
push
inc
jmp
sub
dec
daa
and
or
mov
dec
and
iret
add
add
mull
addb
aaa
sub
mov
movaps
outsl
cmp
push
aam
push
push
dec
inc
pop
pop
shrl
inc
aam
inc
sbb
addl
in
fldt
cmp
push
pop
pop
daa
or
adc
not
mov
aam
enter
mov
into
fidivs
shlb
sbb
mov
mov
or
insb
iret
rolb
es
shr
ficomps
or
hlt
mov
inc
lret
faddl
or
inc
mov
jg
sarb
adc
cmp
push
bound
pop
push
lock
es
and
mov
add
and
mov
or
push
add
mov
ss
sub
inc
add
imul
daa
push
and
add
xor
dec
push
pop
dec
inc
mov
lods
loope
dec
add
sti
add
xchg
cwtl
ds
mov
and
mov
sub
add
mov
dec
loopne
ret
dec
int
movsb
dec
jle
cmp
mov
dec
mov
das
fcmovbe
stos
mov
mov
add
jge
subb
enter
or
int3
inc
aad
aas
daa
add
cltd
xchg
pop
nop
stos
mov
mov
or
pusha
and
mov
pop
inc
mov
out
shrb
cmp
aas
jg
or
pop
loopne
test
aas
and
into
fidivs
sbb
stc
ss
aas
fwait
das
stos
push
adc
outsb
out
pop
mov
pusha
or
mov
int
cmpsl
xorl
inc
and
fucomp
in
jmp
add
lods
daa
pop
dec
cltd
sbb
arpl
push
push
in
int3
ss
push
or
adc
push
xor
add
into
fsub
outsl
or
dec
xchg
push
pop
or
inc
sbb
adc
out
pop
or
push
or
dec
pop
and
divb
adc
popl
pop
pminub
sub
xor
pushl
loopne
gs
ljmp
sbb
addr16
sub
mov
fwait
insl
cmpb
cli
jns
sub
or
std
imulb
fbld
hlt
push
mov
test
sbb
cwtl
sbbl
cmp
sub
ret
mov
cltd
cmp
int
fistl
or
dec
mov
push
jb
push
inc
cmp
repnz
scas
pop
cmp
ljmp
clc
rorb
jae
cmp
lods
inc
push
cmc
dec
mov
cwtl
pop
xor
fiadds
xchg
rcll
out
inc
popa
and
data16
jnp
or
pop
bound
scas
sub
cli
and
pop
and
add
pushf
xor
lret
fistpl
repz
or
adc
sbb
or
outsl
lds
outsl
push
add
cmp
notl
add
and
fstpt
vxorps
xchg
jnp
xchg
mov
aas
out
ja
ror
das
mov
xchg
mov
jecxz
xor
mov
or
and
dec
data16
jne
data16
add
sub
and
or
and
inc
cltd
ret
mov
pop
push
jnp
xchg
and
rcrl
into
pushf
bound
ljmp
push
ret
or
es
ss
inc
cmp
ret
pop
data16
stos
lds
mov
mov
add
push
mov
mov
mov
dec
push
push
pop
add
mov
int
sub
and
cmp
push
lock
sbb
nopl
sahf
out
mov
jg
add
add
mov
jns
out
test
pmulhw
fimuls
xor
adc
test
out
call
or
ret
out
mov
repz
inc
mov
repz
cmp
cmp
repz
pop
sub
sub
cmp
repz
and
iret
repz
sbb
sbb
repz
adc
repz
repz
add
out
sahf
out
mov
sahf
out
sahf
push
lock
in
sbb
jns
out
sbb
sbb
sbb
jns
out
sbb
sbb
sahf
push
rcrb
int3
and
jns
out
and
and
and
jns
out
and
and
sahf
movsb
daa
mov
out
sub
jns
out
sub
sub
sahf
test
xorb
jns
out
xor
je
out
sahf
out
xor
xor
sahf
ss
pusha
pop
shr
andb
push
sub
mov
xchg
addb
or
clc
cmpsb
adc
pop
or
add
or
test
mov
pop
adc
popa
pusha
fs
out
mov
outsl
outsl
push
jg
gs
and
pop
sbb
sbb
sub
add
jmp
xor
sub
xor
sub
sub
and
out
xchg
mov
jb
jp
outsl
sbb
sbb
sbb
push
pop
and
and
or
and
popa
pop
mov
and
add
fisubrl
add
add
and
push
sbb
sbb
syscall
addb
sbb
idivl
orb
or
or
add
sbb
or
jnp
add
add
and
daa
xchg
imul
pop
adc
add
mov
add
adc
mov
arpl
sbb
addb
sbb
es
jns
lea
push
and
and
adc
sbb
sbb
sbb
ficoml
sbb
sbb
jnp
cmpsb
and
sbb
sbb
adc
pop
jnp
movl
sbb
outsb
in
mov
add
and
xlat
add
pop
sub
sbb
and
aaa
add
add
es
sub
and
push
and
and
xor
imul
sub
mov
xor
sub
or
sub
lods
mov
add
sub
lods
sbb
add
pop
sbb
sbb
imul
and
push
sbb
fidivrl
rdmsr
xorb
in
pusha
xchg
sub
sbbb
add
das
add
push
daa
add
sti
and
or
aaa
cmpb
adc
or
cmp
sbb
out
roll
add
sub
xlat
cmp
addb
add
mov
or
add
pop
pop
lret
fistpl
and
inc
orb
inc
sbb
inc
cmp
sbb
leave
inc
jb
pop
sbb
lcall
inc
aaa
add
mov
jbe
add
fdivrs
repnz
add
sbb
or
add
in
push
sbb
cmpb
add
dec
dec
sbbb
cmpsb
das
dec
pop
add
sub
inc
jb
sbb
dec
push
sbbb
add
sub
push
push
or
add
orl
push
xor
xor
push
and
sbb
ss
pop
push
orb
sbb
negb
push
push
push
push
pop
pop
daa
add
in
fwait
pop
push
and
pop
add
sub
dec
sbb
arpl
pop
xor
pop
jmp
into
adc
pop
push
sub
pusha
sub
popa
push
leave
adc
sub
bound
cmp
mov
add
ss
in
dec
dec
sub
dec
fildl
fisubl
xor
push
and
add
adc
add
xchg
add
inc
imul
outsb
ss
sub
jns
mov
jo
adc
jb
push
je
and
in
jne
add
jbe
sbb
cmpb
xor
or
add
das
add
and
sbbb
mov
cmpsb
xor
xor
int3
dec
jge
movd
add
adc
pop
or
and
add
add
mov
sbb
sbb
test
xchg
xchg
sub
xchg
leave
sbb
test
sub
mov
mov
xor
add
and
sbb
lea
enter
sbb
sbb
fimull
mov
xchg
or
add
imul
and
pop
enter
or
and
add
dec
push
nop
xor
cs
mov
sub
sbb
aaa
xchg
sbbb
xchg
sbb
add
xor
fisttpll
or
pushf
imul
add
popf
cmp
add
cmp
sahf
adc
add
mov
add
in
aaa
mov
out
push
mov
add
movsl
push
cmpsb
adcb
leave
pop
sahf
cmpsl
test
sub
orb
repnz
in
sub
das
xor
cmp
push
and
inc
mov
sbb
aaa
add
and
mov
mov
sbb
mov
ss
add
or
and
add
or
sbb
ss
sub
and
push
mov
mov
das
add
or
fildll
xchg
sub
add
or
iret
fidivl
push
loop
add
add
inc
sbb
mov
xor
mov
and
xchg
pop
sbb
mov
adcb
add
mov
in
das
xor
mov
outsb
add
add
sbb
sti
rolb
add
pop
les
adc
jbe
sbb
push
add
es
lret
nop
fsubrl
xor
sub
in
sub
orb
into
sbb
shlb
and
sub
cld
fisubl
das
roll
cs
lcall
imul
cmp
cs
xorb
stc
push
leave
add
xlat
orb
fmuls
lods
xor
fsts
xor
adc
sbb
and
mov
adc
sbb
sub
sub
xor
xchg
and
fildl
imul
leave
sbb
fdivl
and
addb
add
or
sahf
fildl
sbb
fbld
sbb
pop
jnp
mov
loopne
loope
sbb
in
stc
mov
adc
and
ds
pusha
xchg
sbbb
add
and
lret
frstor
out
movntq
mov
dec
jmp
and
push
sbb
sahf
fsubr
andb
sub
pop
cs
imul
add
lock
sub
sub
xor
ds
in
imul
lsl
xor
sub
fbld
cmp
cvtpi2ps
jb
jl
sub
jl
testb
adcb
ss
sbb
sbb
clc
jle
fwait
ss
add
pop
sbb
cli
imul
mov
sbb
ss
cs
and
sub
mov
sbb
aaa
sub
cld
orb
std
xor
xor
in
fsubs
pop
and
sbb
lcall
sbb
add
or
and
andl
inc
pop
add
add
and
push
add
push
ss
add
and
add
ss
orl
fimull
cmpl
or
add
mov
push
sub
push
push
add
testb
and
sub
cmpsb
pop
jae
adc
pop
das
pop
in
mov
add
addl
inc
jb
daa
adc
cmp
add
aaa
push
pop
aaa
push
ss
or
add
and
mov
enter
sbb
add
leave
sbb
add
and
repnz
sbb
push
xchg
and
fcmovbe
outsb
lahf
sbb
add
ss
or
add
pop
in
and
add
mov
repnz
and
sub
adcl
sbb
or
aaa
add
push
ss
outsl
sub
subl
xor
xor
sub
xor
enter
and
sub
out
adc
sbb
orl
scas
and
and
and
pop
adc
sub
sbb
subl
xor
xor
sbb
push
scas
add
xor
sbb
sbb
nop
sbb
sbb
xchg
and
dec
jbe,pn
add
sbb
pop
in
ss
insb
test
sub
aaa
inc
sub
cmp
and
sbb
push
fdivrs
subl
add
jmp
cmp
add
and
sbb
xor
mov
add
fcmovnu
mov
orl
orl
add
sub
ficomps
orl
aaa
pop
aaa
or
or
add
and
rcrl
inc
orl
incb
xor
xor
or
fisubrl
dec
sbb
jbe
push
sub
and
adcb
wrmsr
adc
and
inc
add
sub
std
mov
xchg
push
push
rcrb
or
and
push
mov
sub
push
jb
adc
je
daa
add
sub
adc
sbb
orb
push
pop
mov
pop
or
and
push
aad
pop
mov
dec
or
mov
add
int
sbb
or
add
movntps
sub
cmp
or
inc
cs
mov
pop
xor
ja
dec
addl
xor
or
popf
and
pop
orl
rcrb
adc
push
push
stos
or
test
add
sub
cs
sub
sbb
xor
push
mov
addl
xor
push
or
push
sub
mov
adcl
sahf
add
push
push
sbb
or
dec
xor
addb
push
or
das
adc
loopne
jbe
sub
comiss
sbb
lods
sbb
and
and
sbb
pop
outsb
push
orl
adc
sbb
xor
aaa
push
xor
xchg
notb
sub
and
ljmp
xchg
incb
and
pop
cmpsb
pop
fcomps
adc
iret
push
cmpsb
add
inc
into
pop
ljmp
lcall
push
insb
sub
adc
into
or
mov
sub
out
push
and
push
push
sbb
fiadds
sbb
imul
es
cs
inc
or
push
cmp
ret
aaa
jp
das
push
jo
fisubl
sbb
pop
pop
or
push
xor
cmp
sub
mov
loopne
xchg
sahf
or
out
into
push
sub
sbb
add
mov
sbb
adc
sbb
push
adc
and
lds
bound
js
mov
push
sub
push
jmp
xchg
pop
or
sub
enter
sub
and
pop
addl
xchg
inc
or
pop
orl
add
xor
ss
ficoml
jbe
sbb
pop
dec
je
mov
add
or
or
push
cmpsb
sbb
aas
push
ja
ljmp
sbb
shlb
push
cmp
sub
adc
and
mov
into
pop
push
ds
mov
pop
into
adc
adc
sbb
int3
sbb
dec
testb
ss
jp
mov
or
add
ss
adc
jne
push
push
or
out
push
mov
pop
sar
push
xor
pusha
andl
stos
aaa
mov
inc
fwait
push
into
add
xor
pop
ljmp
push
jbe
arpl
push
mov
dec
sahf
ds
adc
sub
adc
add
repnz
push
and
fadds
and
cs
cmpb
push
push
sub
andl
out
xor
jle
jb
push
pusha
add
or
push
adc
stos
adc
dec
push
sbb
bound
sub
inc
push
pop
xor
xor
mov
mov
mov
and
jle
add
test
pop
cli
adc
rcrb
es
mov
add
add
sbb
or
or
inc
shll
xor
orb
adc
out
cmpsl
sbb
ds
rol
sub
add
mov
cmpsb
xchg
lods
inc
or
scas
push
ficompl
sub
jb
dec
cs
cs
andps
sub
mov
insl
orl
or
or
scas
pop
ja
cs
outsb
subl
pop
xor
rdmsr
or
sbb
or
push
add
mov
dec
das
mov
mov
mov
pop
adc
lcall
push
or
cli
adc
pusha
jle
add
jo
pop
subl
shrb
testb
adc
or
jno
xchg
mov
add
add
jb
and
lods
test
push
pop
jae
pop
je
and
jnp
or
xor
jle
xor
daa
or
or
mov
sbb
inc
sbb
or
scas
push
mov
jnp
jbe
or
push
cs
movb
rorl
mov
adc
outsb
cmp
jp
fimull
sbb
and
or
lods
bound
and
adc
sub
into
aaa
scas
add
push
push
or
cmpsb
filds
xor
cmpl
daa
xor
dec
out
cs
add
fidivrs
and
ds
lcall
or
sbb
ss
jge
xor
or
xchg
jle
adc
pop
bound
mov
and
adc
add
push
sub
into
mov
jg
mov
inc
push
add
popf
fdivs
xor
bound
adc
mov
dec
or
roll
or
test
bound
push
sub
sbb
movl
adc
or
or
or
pusha
xor
lret
xchg
dec
cmp
mov
lcall
ljmp
mov
sbb
pop
bound
add
xor
loop
mov
mov
scas
mov
andl
sbb
xorb
mov
outsb
mov
mov
push
or
test
inc
inc
inc
xor
pop
and
mov
out
or
orb
inc
loopne
cltd
xor
sub
mov
test
loop
fisubl
cmp
mov
jo
push
movsl
scas
push
jbe
mov
cmp
mov
cmpsb
ss
adc
dec
xor
into
loopne
mov
rsm
sbb
ror
push
cmp
popa
pop
adc
mov
repnz
dec
mov
mov
std
push
outsb
sbb
sbb
add
push
mov
mov
subl
push
sbb
xchg
mov
sbb
fimull
push
adc
dec
orl
cmpsb
mov
cs
lods
testl
xor
ss
rcrl
xchg
mov
mov
mov
sbb
pop
pop
add
xor
rorb
es
push
add
mov
sub
loopne
outsb
or
xchg
xchg
fidivl
xor
adc
push
or
int
push
and
push
add
sub
sub
subb
adc
sub
adcl
out
fisubrl
xor
pushf
shll
add
shrb
mov
push
mov
xchg
sbb
and
sub
sahf
mov
je
cmp
add
mov
pusha
cmpsb
sub
dec
repnz
insb
subl
xchg
adc
xor
lods
imulb
ficoml
xchg
cmp
and
add
insb
inc
and
sbb
mov
add
add
add
mov
push
and
pop
rolb
daa
jp
add
fsts
dec
je
cwtl
negb
add
cmpl
mov
sahf
sbb
jle
xchg
mov
sbb
mov
lcall
dec
push
popa
cs
cmpsb
pop
sbb
cmpb
sub
stos
ss
adc
loop
sub
lcall
adc
sbb
add
or
mov
out
arpl
xor
inc
pop
cwtl
outsb
adc
sysenter
fadd
movsl
es
into
jbe
push
push
mov
push
bnd
pop
adc
xor
cmpsl
addl
push
push
add
pusha
adc
ss
mov
bound
adc
and
mov
pop
jbe
cmpb
repnz
test
push
jbe
or
xor
jge
sub
daa
scas
sar
out
pushf
sahf
into
bound
xchg
and
inc
cmpsb
int
pop
rolb
dec
cmpsb
push
or
repnz
or
or
or
icebp
or
xor
adc
push
adc
mov
pop
push
xor
sahf
cmpsb
and
bound
ds
fidivrs
jle
mov
xor
add
into
push
dec
popf
add
xorl
repnz
cmp
cmp
aaa
fisubs
cmpsb
inc
xor
rolb
xchg
test
push
into
mov
imul
cli
jb
sub
inc
lahf
pop
sbb
movsl
adc
push
and
jbe
push
popa
jg
push
sub
sbb
shl
adc
pop
add
sbb
subl
cmpl
or
sbb
xchg
mov
and
dec
es
xor
xchg
sub
jo,pn
inc
xor
push
xchg
mov
xchg
popa
outsb
out
jecxz
sub
adc
jbe
add
test
js
or
push
pop
repnz
sbb
or
add
add
int3
push
pop
and
push
lret
adc
inc
add
bound
cwtl
sbb
adc
dec
ret
adc
sub
sbb
cmpsl
sbbl
add
push
dec
sahf
or
add
andl
mov
jp
push
or
adc
js
enter
stos
scas
xor
adc
test
cmp
adc
stos
and
mov
or
inc
ret
cmp
pop
and
sub
daa
into
adc
or
inc
pop
adc
and
jge
push
push
lods
adcl
pop
mov
rclb
sbb
lcall
daa
pop
mov
mov
dec
or
aad
adc
add
mov
scas
ret
mov
inc
xor
push
or
inc
and
pop
push
adc
bound
data16
sbb
lcall
adc
and
sub
xor
bound
xchg
cmpsb
inc
leave
add
repnz
sbb
sbb
in
mov
sbb
mov
push
or
or
dec
mov
call
xchg
xor
mov
push
add
and
inc
sub
add
xchg
ficoml
push
rcr
nopl
imulb
sbb
push
and
repnz
rorb
inc
out
bound
cmpsl
or
cmpsl
inc
push
jle
aaa
add
pop
or
cmpb
mov
and
mov
xorl
mov
push
ret
sub
jne
ficoms
fimuls
rcl
add
mov
xor
cmpsb
xor
jbe,pt
push
mov
add
sub
out
mov
adc
cmp
xor
push
mov
push
stos
sub
sub
insl
or
pop
adcb
or
cmp
jbe
sub
or
loop
sub
push
mov
or
sub
mov
xchg
or
inc
inc
test
cli
mov
push
lds
adc
push
or
out
add
or
mov
cmp
mov
adc
mov
xchg
mov
xchg
sub
pop
push
sbb
addr16
sbb
xor
into
xor
jp
jle
es
dec
lods
pop
fiaddl
pop
mov
sub
int
lcall
xchg
push
jecxz
lods
mov
pmaxub
or
test
xor
mov
and
cmpsl
jecxz
divl
repz
xor
js
mov
xor
mov
xchg
xchg
fidivs
mov
xchg
pop
repnz
sub
sub
mov
pop
add
sbb
mov
xor
bound
mov
cmpsb
adc
sbbb
mov
push
xchg
aad
xor
and
pop
push
or
sbb
add
les
ret
sahf
sbb
sub
fwait
add
lret
and
push
add
bound
mov
adc
and
aad
push
adc
sbb
fildl
lret
xor
decb
outsb
xchg
adc
cli
xor
add
es
xchg
enter
or
sub
dec
sub
xchg
faddp
push
je
pusha
cmp
xchg
and
xor
pop
push
sbb
or
cs
dec
push
adc
jle
push
add
push
test
sub
push
add
add
add
fs
mov
dec
push
mov
push
sbb
xor
or
les
pop
xorb
cmpsb
lds
in
out
mov
add
sbb
push
daa
fisubrs
jbe
ret
push
or
scas
out
push
jbe
es
sub
push
cmp
add
adc
xor
or
ss
push
das
ret
inc
inc
xor
or
inc
add
and
dec
or
dec
cmp
xor
sub
ret
das
dec
fisubl
mov
sub
sbb
ret
fs
ret
push
iret
sub
xchg
xchg
sub
repnz
cmp
jb
adc
xchg
xorl
push
and
movsl
int3
mov
push
pop
xchg
rolb
adc
cmp
mov
pop
sbb
adc
adc
loop
cmpsb
jle
adcl
xor
ss
pop
repnz
sub
outsb
xor
out
mov
adc
or
pop
shlb
and
int3
test
test
mov
mov
or
fisubs
add
push
add
sub
cmp
shl
dec
add
fiaddl
push
jbe
lret
addr16
add
xorl
bound
pop
pop
mov
bound
push
sbb
fstl
inc
add
add
pop
mov
sbb
push
xchg
add
and
subb
adc
xchg
push
shll
aaa
int
aam
js
ds
adc
and
and
jbe
pop
push
std
es
lret
sub
adc
sbb
int3
bound
add
jp
stos
ret
rol
xchg
mov
mov
cmpsb
sbb
sahf
or
or
roll
cmp
adc
aad
mulb
outsb
test
inc
sub
shlb
push
adc
cwtl
adc
xor
das
lcall
cmpsb
dec
dec
xor
outsb
xchg
xchg
mov
das
or
or
xchg
cmp
fwait
push
push
add
ljmp
sbb
mov
inc
jp
push
or
mov
into
out
adc
push
dec
test
and
into
pop
add
call
arpl
sbbb
push
pop
cmpsb
test
int3
icebp
out
fiaddl
adc
loop
and
push
xchg
inc
jb
sbb
sub
mov
dec
and
mov
add
pop
call
and
out
sub
push
cli
sub
cmp
sbb
push
popa
fisubs
loop
rolb
out
mov
cmp
sbb
ficoml
fwait
push
cmpb
sbb
or
pop
adc
sub
inc
inc
inc
sbb
out
dec
dec
sub
push
mov
movsl
push
push
rcrl
xchg
pusha
mov
adc
bound
bound
or
or
fs
xchg
mov
or
xchg
cmpsb
ss
pop
push
sar
push
pop
cmpb
or
xor
sub
mov
push
push
pushf
enter
or
fisubrs
fimuls
adc
xor
and
addl
repnz
lods
loopne
test
outsb
adc
adc
lret
pop
inc
adc
add
js
cli
movb
adcb
fadds
sub
aam
push
jle
jb
pop
xchg
stos
data16
adc
arpl
push
xchg
into
aad
jo
shlb
push
add
in
cmp
ljmp
cwtl
je
push
add
xor
and
push
neg
inc
and
adc
jb
das
fiaddl
aas
cwtl
roll
cs
lcall
loopne
or
rcrl
dec
xchg
and
lret
cmpl
or
add
xor
adc
sub
bound
mov
push
or
or
into
outsb
mov
push
add
xor
mov
jb
mov
adc
mov
frstor
test
or
inc
or
inc
add
out
push
shlb
pop
jge
scas
sbb
add
dec
and
xor
add
and
mov
xor
notb
mov
out
cltd
pop
outsb
adc
pop
or
push
adc
nop
ret
jb
movsl
shrb
divb
or
and
inc
or
out
or
lods
bound
sbb
jbe
add
sub
mov
test
and
xchg
mov
push
push
and
add
xor
es
add
pop
out
ret
gs
into
push
subb
ljmp
sub
outsb
pop
mov
push
outsb
xor
push
rorl
rclb
push
dec
mov
adc
pushw
sub
sahf
mov
jb
push
aaa
push
inc
out
push
adc
push
call
xchg
ss
sub
dec
xchg
xor
jp
push
add
xchg
pop
ss
jno
adc
out
add
add
aam
sbb
es
push
mov
push
ss
pop
mov
cmp
push
add
sbb
dec
pop
popf
cmpsb
or
add
cs
mulb
push
push
ss
sub
and
push
int3
xchg
push
pop
aaa
or
cmp
cmpsb
add
scas
fld
or
loopne
push
shlb
or
adc
inc
sbb
or
cmp
insb
pushf
push
out
mov
or
or
out
popf
dec
jnp
add
and
mov
adc
jnp
xor
mov
jae
mov
out
out
sahf
adc
push
and
jbe
or
sbb
sub
pop
mov
mov
cmp
jb
sbb
or
mov
lret
loop
push
add
or
inc
or
and
or
cs
call
and
jbe
sbb
rorb
aaa
iret
stos
inc
xor
xlat
fisubl
or
or
xchg
and
or
push
and
mov
push
lea
out
or
add
or
mov
or
movb
or
or
lret
mov
adc
xchg
jno
mov
push
loopne
mov
or
cmp
or
ds
sbb
pop
or
dec
push
cs
push
bound
xchg
xor
mov
enter
xor
das
pop
aaa
les
push
or
inc
jmp
data16
data16
mov
or
xor
lcall
dec
test
push
cmp
adc
sahf
jmp
bound
cmc
loopne
addr16
or
pop
or
xor
xor
push
dec
imul
xor
dec
mov
or
jo
testl
or
in
mov
mov
mov
cmp
and
push
xor
les
or
and
add
push
or
int3
mov
mov
data16
or
push
mov
test
sbb
xlat
adc
sbb
xor
or
sub
pop
inc
sahf
shll
or
jle
out
dec
loop
out
or
or
and
xchg
loopne
xchg
testb
cmp
or
cli
sub
push
aaa
or
add
sbb
ss
das
daa
mov
into
dec
xchg
imul
testb
push
aad
cmp
stc
adc
fnsave
adc
shrl
or
adc
cmp
popf
or
or
lret
movsb
xor
scas
je
cs
loope
mov
add
cmc
or
rcrb
xor
or
mov
or
adc
add
cmp
and
inc
add
or
addr16
mov
jmp
les
jb
jbe
add
test
lcall
daa
add
in
pop
pop
das
xchg
cs
pop
adc
in
jg
aaa
add
outsb
xchg
aaa
add
sub
sbb
int3
shr
sub
sbb
adc
or
enter
xchg
xor
cmp
sub
jno
sbb
push
dec
popf
add
or
add
ret
jno
push
pop
xchg
out
xor
mov
or
in
sbb
or
and
or
outsl
lock
or
fisubs
push
pop
and
mov
and
mov
adcl
popa
lock
pop
test
push
pop
or
add
cmp
lods
cmp
or
and
adcb
in
or
sub
or
ds
jp
neg
or
and
push
out
mov
jle
push
adc
leave
adc
sahf
pusha
test
in
ljmp
push
add
cmp
ds
jae
xchg
mov
push
out
cmp
add
cmp
or
sub
loope
rorb
push
jbe
mov
stos
adc
mov
adc
cmpsb
inc
ret
add
xchg
and
xchg
push
lcall
and
adc
cs
or
ret
cmp
ss
mov
or
cmp
sub
xchg
mov
push
xor
pop
adcb
ret
add
addb
mov
into
pop
sub
push
push
push
sub
add
es
imul
mov
loope
push
xchg
je
sbb
and
rol
add
sbb
and
scas
inc
mov
xor
inc
test
xchg
int3
iret
jp
rorl
or
pop
adc
pop
cmp
out
jo
ret
sbb
test
mov
rol
mul
and
pop
jae
jl
dec
stos
xchg
pop
hlt
rcll
or
rcll
fidivs
repz
and
daa
add
dec
lea
adc
pop
push
push
jb
mov
sub
and
ret
or
aas
ret
sbb
jb
stos
cli
mov
loope
mov
rol
add
or
sub
cmp
adc
xor
jmp
add
mov
pop
sbb
push
or
popa
push
xor
addr16
sbb
ret
jg
das
out
jp
and
or
lock
cs
adc
or
mov
ret
push
aas
addr16
jnp
test
cmpsl
pop
cmpsl
ficomps
lock
incb
cmp
cmpsl
adc
push
push
xor
xor
xchg
sub
insl
pop
jo
shlb
das
scas
ret
adc
divb
sub
pop
ret
jbe
sbb
and
mov
out
add
xchg
or
push
cmp
loope
xchg
dec
mov
add
loop
cmp
xlat
mov
pop
lods
add
adc
mov
push
imul
fnstsw
outsb
outsb
gs
jne
imul
outsl
dec
outsb
push
and
dec
push
adc
aas
pcmpeqw
inc
push
popa
pop
jle
outsb
xchg
addr16
es
mov
es
out
dec
out
pop
mov
jae
out
sahf
arpl
js
push
jne
jns
imul
push
outsb
rol
jp
je
data16
repnz
repnz
pop
mov
arpl
jp
jnp
fmul
push
or
aaa
pop
adc
mov
mov
or
sarb
sub
sub
aas
and
pop
pop
ret
push
sahf
jbe
pop
sub
mov
std
and
cmpxchg
mov
mov
jl
xlat
mov
fisubrs
mov
mov
mov
cmp
nop
ss
rol
shlb
pop
push
pop
push
add
ja
nop
xchg
xor
leave
stc
shl
aaa
mov
inc
or
cmp
dec
dec
inc
mov
fwait
jbe
sbb
aaa
jl
mov
sub
mov
and
xor
xorb
lahf
mov
test
xor
scas
out
sahf
out
and
adc
add
repz
clc
shl
loopne
sarb
repz
sarb
repz
iret
repz
js
push
iret
repz
push
dec
dec
inc
repz
repz
cmp
xor
iret
repz
sub
sbb
or
sahf
out
ds
mov
jns
out
les
jns
out
jl
fs
sahf
out
sahf
dec
inc
xor
adc
cmp
sarl
in
les
xchg
test
jnp
into
insb
xchg
or
inc
push
inc
inc
cmp
repz
inc
inc
inc
dec
repz
repz
dec
dec
dec
dec
iret
repz
dec
dec
push
push
push
push
cmp
repz
push
push
push
pop
pop
jne
repz
pop
jae
aad
push
sbb
ja
jns
jns
pop
fwait
jnp
pop
or
or
or
or
or
out
or
add
add
jns
out
add
add
sahf
out
sahf
add
add
or
jns
out
or
or
or
jns
out
or
or
xchg
lods
pop
add
cmp
pop
les
sub
pop
lahf
dec
mov
push
push
inc
xor
pop
xor
mov
add
aaa
or
push
or
insb
add
jne
cmp
pop
pop
leave
and
ss
xor
push
or
xor
aas
sbb
leave
rcl
das
xor
pmulhuw
in
cmp
ss
xor
xor
sarb
lods
mov
rcrb
in
into
pop
fs
out
pop
mulps
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
inc
inc
inc
fwait
xchg
xchg
xchg
inc
inc
inc
inc
mov
hlt
into
fisubs
aas
mov
adc
push
inc
cmp
inc
dec
push
inc
dec
inc
sbbl
ja
insb
add
jl
xchg
mov
jl
sub
or
insb
iret
mov
sub
and
ljmp
or
lret
mov
sub
pop
sbb
and
cli
and
sub
outsb
outsl
pop
mov
mov
mov
add
pusha
ret
repz
test
dec
push
pop
ret
cwtl
cmp
push
pop
sahf
pop
int
push
pop
jne
xor
dec
inc
inc
cmc
add
add
mov
lods
jne
mov
shlb
mov
decb
iret
repz
sar
sar
sti
cmp
repz
cli
nop
stc
xor
iret
repz
push
repz
inc
cmc
sub
adc
sahf
out
cmp
repnz
lret
icebp
in
out
jnp
fisttps
out
fisttps
out
dec
jns
out
in
cmp
and
repz
out
ljmp
repz
decl
out
out
push
cmp
repz
outsl
push
in
jecxz
out
pop
mul
dec
push
loope
loopne
out
sahf
test
xchg
fidivs
sahf
out
pop
fdivl
jg
jae
sarl
fmuls
iret
xlat
mov
mov
insb
repz
cmp
dec
ror
repz
cmp
sub
adc
sahf
out
ds
into
in
sarb
out
int3
mov
jns
out
leave
pop
enter
jns
xor
sbb
lahf
sarl
push
in
ret
push
movsb
xor
sahf
out
iret
loopne
push
aam
les
mov
pushf
mov
out
je
out
push
mov
jns
cmp
repz
lds
mov
mov
mov
cmp
cmp
mov
push
mov
xor
iret
mov
mov
mov
incb
fadd
jmp
fildll
mov
mov
cld
rorb
cmp
ret
loop
lret
mov
xchg
mov
das
push
in
popa
in
push
mov
out
xor
mov
mov
repz
rolb
xorb
mov
mov
std
xor
add
cmc
sarb
xor
mov
lret
inc
add
jnp
lret
int3
inc
add
dec
das
popa
mov
iret
in
mov
xor
nop
andl
mov
mov
xrelease
daa
sar
mov
aad
rol
loopne
loopne
rorl
mov
mov
add
inc
fcomps
stos
iret
loopne
enter
pushf
jmp
aas
addr16
insl
shll
mov
jnp
xor
push
sbb
ret
push
leave
call
lret
mov
adc
inc
xor
adc
daa
mov
hlt
inc
jbe
daa
enter
std
test
sub
cmp
jecxz
dec
adc
fsubrs
aaa
jg
or
popa
mov
push
mov
or
xchg
inc
mov
dec
iret
out
rcl
sub
sbb
pop
or
sarb
push
adc
sahf
mov
mov
adc
xchg
aas
ret
cmp
xor
or
mov
pop
push
mov
push
inc
xchg
shlb
pop
mov
outsl
cmp
adc
jbe
lret
pop
into
mov
shll
mov
fbld
pop
outsb
orl
and
aad
in
inc
filds
and
lahf
inc
daa
jb
mov
push
into
stos
inc
mov
cmp
cmp
enter
xchg
or
mov
das
cmpsl
int3
stos
mov
das
xor
mov
das
and
cmp
into
mov
push
push
dec
lret
lock
aaa
mov
inc
lds
push
adc
in
aas
inc
push
mov
add
out
scas
int
inc
xor
mov
in
lods
and
cmp
fneni(8087
add
inc
das
dec
mov
xchg
xchg
mov
pop
clc
pop
push
test
getsec
pop
sbb
rcl
bound
test
test
mov
ret
sti
adc
or
and
mov
sbb
stos
mov
mov
gs
pop
dec
mov
pop
sti
int3
sub
sarb
mov
jo
mov
lahf
addr16
lds
subb
pop
xor
lock
adc
jmp
std
mov
xor
xchg
and
sbb
jecxz
roll
mov
lahf
js
dec
outsl
pop
inc
pop
aas
push
add
daa
or
fwait
scas
add
jl
movsb
mov
pop
lret
lret
adc
ret
and
out
cmp
outsl
adc
xor
daa
cs
ret
mov
shr
sahf
dec
idivb
inc
xlat
imul
mov
fdivrs
lock
leave
cli
ret
int
das
shll
or
lret
cs
into
or
jp
mov
test
and
mov
xlat
divl
sub
sbbl
pop
sti
insl
dec
sub
aas
addr16
mov
sub
dec
divl
xchg
stos
smsw
aaa
daa
jne
push
bound
lret
aad
stos
mov
hlt
inc
push
nop
loopne
push
punpckhdq
push
nop
loopne
mov
mov
les
mov
mov
mov
or
adc
inc
addb
cli
out
movsl
add
sti
daa
mov
or
mov
jmp
or
jne
jo
add
iret
mov
xlat
mov
xor
ja
jbe
iret
ret
sub
ss
add
xor
out
sbb
mov
jbe
lret
cmp
push
pop
fcmovnu
ds
lock
pop
das
out
jnp
imulb
jg
add
pop
pop
sahf
out
sahf
pop
pop
pop
pusha
popa
bound
mov
aas
into
ss
out
push
enter
jl
out
test
int
into
add
pop
pop
enter
in
mov
cmc
push
push
lds
out
ja
psubusb
pop
out
adc
out
pop
push
jnp
push
push
pop
dec
push
lcall
iret
push
das
mov
insb
sti
inc
mov
adc
adc
and
inc
sbb
sub
iret
push
adc
jno
aaa
cmp
pop
jl
xchg
sub
xchg
cmpsb
mov
mov
jle
mov
mov
movl
leave
jo
adc
sbb
jae
sbb
and
fidivrl
or
pop
and
jnp
jg
add
inc
movups
jnp
mov
and
add
mov
wrmsr
jge
ficoml
or
push
pop
xor
scas
jge
cmpsl
lock
ljmp
push
sarb
pusha
fcomps
fcomps
fcomp
fnstsw
rcl
in
add
enter
rcrb
je
imul
jg
outsb
mov
pusha
ds
mov
shrb
adc
pop
sarb
leave
out
mov
neg
mov
shlb
loopne
ljmp
int3
aas
in
pop
xlat
iret
jbe
in
mov
clc
mov
gs
sbb
jg
fdivrs
out
jp
pop
bswap
into
sub
mov
or
rcr
orb
jb
addr16
outsb
pop
rol
mov
das
insb
lock
mov
nop
testb
jg
stos
pop
mov
fnstcw
dec
and
ret
cmp
adc
xchg
or
lods
mov
out
jle
clc
xlat
stos
add
cs
loopne
clc
and
dec
push
inc
inc
dec
inc
dec
adc
and
push
mov
adc
pop
hlt
mov
jnp
js
push
xchg
push
cmp
xchg
idivl
mov
xor
or
jbe
dec
insl
lcall
cmp
test
shlb
mov
or
aas
scas
mov
pop
aas
fbld
pop
mov
out
aas
jb,pn
sub
mov
das
sti
in
popf
fcoms
pop
pop
in
sbb
das
test
das
inc
dec
and
addr16
out
adc
xor
push
pop
pop
in
or
into
push
call
lds
outsl
mov
ret
inc
pop
mov
ret
adc
es
push
int3
adc
push
das
cmc
shl
cmp
push
dec
pop
aaa
pusha
pop
jnp
je
lahf
push
xchg
inc
pop
cmpsl
mov
xchg
scas
pop
inc
or
inc
pop
pop
testb
inc
push
inc
jg
insb
mov
addr16
push
jo
sub
xchg
fidivl
mov
es
dec
addr16
das
dec
inc
mov
adc
xor
jne
aaa
mov
jmp
push
addr16
lods
loope
add
sti
sub
insb
xor
pop
sbb
push
dec
push
inc
inc
popa
aas
cmp
dec
dec
inc
push
dec
inc
lahf
aas
mov
iret
inc
inc
push
inc
fwait
jbe
es
mov
dec
jmp
mov
mov
jg
sbb
popa
fisttps
push
inc
sahf
add
popa
popa
adcb
decl
xchg
lea
bound
out
push
mov
pop
stos
das
inc
sbb
shll
aas
sub
xor
pop
stos
ss
daa
add
incl
outsl
adcb
mov
xor
mov
sbbl
fbld
inc
outsl
sub
adc
insl
aas
cmpsb
xor
dec
xchg
dec
xchg
inc
pop
add
or
ja
outsl
dec
dec
dec
push
add
add
sbb
or
xor
inc
call
cmpsb
jne
repnz
adc
push
sub
inc
loopne
push
and
add
mov
push
xor
add
push
fcomp
mov
mulb
push
mov
pop
in
jbe
psadbw
aas
pop
adc
jbe
add
ds
and
pop
jp
outsl
or
add
adc
loopne
xchg
adc
pop
add
add
adc
add
adc
bsr
scas
repz
call
push
sub
iret
repz
sbb
adc
add
sahf
out
lcall
jns
out
enter
mov
mov
pop
lods
test
pushf
fmulp
repz
mov
sahf
out
push
out
sahf
out
xor
sbb
les
dec
ds
cmp
repz
sbb
iret
repz
or
or
sub
or
fucomi
imul
daa
adc
adc
leave
leave
in
movsb
and
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sub
jbe
leave
cmpsl
mov
into
aas
xlat
scas
mov
add
push
movsb
add
cmpb
cmpsb
fisttps
mov
xlat
mov
jle
test
shll
leave
in
add
mov
mov
mov
sbb
in
call
dec
and
adc
push
ficompl
mov
xchg
das
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
jo
pop
aas
or
push
sbb
adc
mov
push
in
or
mov
push
adc
adc
cmpsl
stc
cmp
call
jns
out
mov
push
sbb
repz
out
lock
js
jns
loope
iret
sarb
jmp
mov
add
aas
testb
jg
fsubl
jno
or
dec
and
divl
inc
or
sbb
xchg
std
inc
imul
xchg
lea
adc
mov
push
bound
mov
mov
mov
movsb
or
jns
nop
mov
aam
iret
repz
sbb
sbb
cmp
repz
mov
cmp
rep
push
movsb
or
iret
sete
mov
cmp
adcb
and
cmp
repz
jo
push
adc
push
cmp
repz
dec
sbb
repz
repz
xor
sub
repz
and
and
out
cld
inc
jmp
out
clc
jmp
fildll
test
xorb
cmp
or
aas
mov
or
add
filds
or
mov
sub
sbb
jg
mov
ljmp
cmc
cli
int3
push
push
or
sahf
out
adc
xor
out
sahf
out
jp
sahf
mov
ret
fucom
add
repz
bound
xchg
cmp
repz
mov
out
sahf
cmpsl
or
out
sahf
jbe
stos
scas
leave
into
cmp
repz
add
cmp
repz
insl
jb
cmpsb
out
cmp
mov
mov
push
ss
bound
dec
inc
inc
add
aas
mov
aam
mov
loopne
js
imull
leave
and
mov
rolb
dec
push
add
addl
add
add
bound
xorb
dec
aaa
cmpsb
stos
add
dec
incb
clc
or
lock
pop
subb
add
dec
lock
test
adc
push
push
inc
and
push
out
inc
pop
popa
mov
or
outsb
incb
add
push
mov
push
xchg
es
push
inc
jg
sbb
lods
dec
mov
push
push
rorb
dec
dec
sahf
sbb
in
dec
dec
mov
mov
xchg
js
or
dec
inc
dec
inc
lahf
cmp
pop
and
push
pop
ja
cmp
repz
mov
repnz
or
sahf
cmpsl
das
dec
insb
inc
test
mov
push
add
mov
testb
adcb
dec
xchg
es
outsb
js
push
push
sahf
or
out
jbe
pop
jg
sbb
jb
mov
add
and
inc
pushf
or
ret
mov
adc
pop
stc
and
mov
push
incb
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
call
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
adc
decl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
lcall
cwtl
pop
mov
and
stos
xchg
clc
repz
mov
subb
sar
dec
leave
fwait
xchg
and
fiaddl
int
out
aas
xor
sti
aas
jno
or
mov
pop
fs
dec
call
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
pushl
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
ljmp
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pushl
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
call
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
pushl
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
lcall
adc
xor
push
scas
into
imul
faddp
jge
call
mov
idiv
call
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
fdivrs
or
pop
add
jb
and
loopne
scas
insl
mov
dec
adc
push
cwtl
dec
ficompl
imul
add
dec
add
fwait
dec
adc
adc
add
bound
jp
xlat
add
adc
jbe
push
adc
jbe
push
add
adc
pusha
mov
hlt
add
je
mov
cmp
insb
xor
jns
add
push
rcrb
cmp
push
jge
add
or
movq
push
daa
jecxz
add
jg
cmp
sub
jl
push
cmpb
gs
or
xchg
push
adc
sub
enter
mov
scas
adc
inc
data16
ret
and
jl
jbe
jns
add
adc
xchg
push
xchg
adc
into
xchg
outsl
add
gs
xor
fadds
adc
pop
inc
sbb
pop
or
push
ficomps
stos
mov
cmp
add
insb
push
mov
jl
imul
incb
and
inc
outsb
and
push
sub
and
dec
and
add
and
insb
add
sub
daa
daa
popa
popf
loope
and
pusha
add
sub
inc
and
pop
inc
jmp
push
sub
mov
add
fmull
sahf
das
bound
inc
rcll
mov
outsb
inc
mov
dec
mov
dec
les
sub
je
inc
jae
add
sysenter
daa
test
imull
add
ja
in
and
add
and
loop
adc
push
inc
push
out
loope
pop
cmp
push
or
or
mov
int3
pop
addl
popa
or
push
sbb
adcl
test
sbb
or
sub
add
aaa
and
push
imul
inc
mov
gs
jmp
fnstenv
test
insb
xor
and
jne
push
xor
mov
jbe
push
xor
cmp
add
cld
cmpsb
jmp
test
xchg
mov
mov
loopne
loopne
loopne
push
dec
push
and
or
sub
push
add
popf
add
and
xlat
movsl
inc
sub
cwtl
and
out
clc
dec
popf
out
lods
add
push
adc
add
scas
enter
xchg
and
add
dec
or
mov
call
add
add
pop
add
mov
ljmp
cmp
jnp
mov
push
mov
cmp
jae
je
jne
add
sahf
out
push
jbe
ja
js
jl
out
jns
addr16
jns
out
jns
adc
adc
and
xor
outsl
fadds
add
or
enter
add
cmp
jnp
jg
push
mov
aas
or
mov
sbbb
cwtl
push
sub
mov
jns
jnp
or
loopne
iret
sarl
outsb
adc
jle
add
add
mov
js
jo
mov
out
sahf
out
adc
jns
adc
sbb
pop
sbb
cmp
repz
xor
sbb
pusha
pop
decl
adc
or
loope
push
iret
nop
add
out
loop
repnz
shrb
and
push
sbbl
add
aam
lcall
xor
nop
or
inc
push
pusha
in
mov
cs
or
mov
cs
shl
lock
add
adc
xor
enter
push
pusha
jb
pop
and
adc
add
int3
test
mov
and
in
cmpb
sbbl
adc
xor
add
cs
or
or
add
cs
mov
in
shl
sbb
nop
or
subb
and
mov
mov
or
push
pusha
add
cs
jo
subb
scas
mov
add
cmp
in
push
sbb
xor
and
imul
dec
fimull
cmp
out
and
sahf
mov
ss
mov
inc
repz
add
cmc
inc
int3
negb
pop
cmp
daa
in
clc
jl
aam
inc
dec
enter
test
rorl
fdivr
xor
pop
mov
add
add
ds
scas
lahf
sub
or
or
imul
call
daa
jbe
das
call
pop
clc
adc
push
pop
and
test
sbb
cwtl
and
sbb
jp
push
ds
mov
and
ljmp
xchg
out
sub
pop
repnz
aas
rcrb
loop
sub
fildll
dec
ficoms
jg
dec
fimull
cs
clc
das
push
sub
xor
xor
dec
ret
dec
fisubrs
fsubs
adc
xor
fidivrl
xor
pop
repnz
jnp
pop
insb
xor
pop
les
and
pop
or
push
and
xchg
test
and
das
mov
pop
mov
push
push
sbb
and
out
imul
inc
es
inc
push
push
jp
into
add
mov
int
push
add
imul
js
imul
xor
and
and
xor
mov
pop
dec
dec
pop
jb
push
or
in
call
pop
push
inc
push
dec
push
push
inc
or
inc
jae
push
cmp
dec
dec
dec
imul
mov
inc
dec
imul
jge
mov
pop
ret
jl
and
add
cmpl
mov
add
jno
and
xor
sbb
inc
es
inc
inc
inc
and
and
jo
popf
add
jl
popa
stc
pop
jo
xchg
fdivrl
ss
imul
outsl
inc
insb
arpl
pop
push
andb
add
and
jo
sti
mov
aas
mov
aad
mov
cmc
and
add
test
pop
and
enter
adc
nop
xchg
movsl
mov
cmp
das
rcr
jnp
aas
enter
addb
stc
cmp
cmp
inc
push
data16
jg
repz
fidivs
jg
jl
js
out
and
pusha
inc
add
push
clc
dec
add
aas
mov
clc
idivb
mov
cld
ret
das
and
fst
insb
adc
sbb
jl
insb
mov
lcall
add
push
add
cmp
rcr
add
adc
int3
xorl
pop
jns
ret
xor
sub
push
or
notl
add
insb
push
fs
dec
sahf
pusha
add
jmp
in
stos
outsb
push
clc
mov
pop
lock
in
mov
add
pop
push
fildl
in
sub
cmp
imul
rclb
sbbb
pop
enter
cs
mov
scas
not
into
adc
add
pop
pop
repz
push
push
dec
push
adc
push
add
add
push
and
inc
out
jg
push
lock
xor
dec
push
add
fsubrl
clc
push
mov
pop
ret
xchg
movl
push
scas
aaa
adc
lods
or
cs
mov
clc
xchg
enter
divl
dec
test
andb
mov
fstps
subl
mov
nop
jl
add
pop
pop
fistpll
testb
xchg
daa
and
sub
in
sbb
daa
and
das
add
sar
pop
lret
orb
jnp
rolb
and
jmp
add
push
sahf
lock
mov
or
jae
xor
or
daa
push
inc
js,pn
daa
mov
ret
lcall
xchg
dec
push
fdiv
fidivl
dec
mov
lock
dec
adc
js
aas
xchg
shrl
adc
pavgb
fwait
punpcklwd
or
orb
jnp
xchg
fldl
fdivr
jnp
ds
mov
fdivp
add
mov
mov
push
fdiv
daa
mov
jmp
mov
lcall
mov
mov
jg
orb
and
jge
pop
or
jg
ficompl
movq
mov
jmp
pop
vmptrst
pop
pop
js
jbe
lea
jle
movd
fldl
push
or
mov
xor
fs
popa
mov
lfs
and
repnz
add
sbb
or
push
repz
add
out
and
dec
daa
pop
gs
imul
movb
ficompl
test
out
jnp
daa
xchg
movb
daa
out
jmp
js
loopne
aas
daa
fsubl
xchg
xchg
push
mov
out
sub
push
xor
out
add
adc
insl
pop
repnz
js
or
sbb
rorb
pop
bound
push
inc
inc
and
xchg
rclb
ja
or
pusha
das
pop
scas
setnp
push
roll
push
push
jnp
pop
sbb
sbb
sub
js
dec
xor
jge
out
pop
in
mov
pop
adc
adc
das
pop
popl
test
scas
xchg
inc
mov
sbb
pushf
lret
pop
mov
dec
rcll
ret
sub
xor
shrl
scas
test
test
ds
adc
test
pop
pop
mov
add
pop
mov
movsb
adc
adc
xchg
andb
iret
iret
scas
aad
cmovbe
dec
and
and
addl
jmp
dec
mov
js
jp
mov
in
xchg
inc
mov
clc
pop
mov
mov
out
pop
rolb
faddl
add
sbb
jnp
xchg
or
maxps
mov
add
and
mov
add
fwait
add
jo
adc
mov
lods
insb
lock
sub
jg
push
mov
addl
xchg
xor
popl
and
pop
aas
ss
xor
mov
add
jmp
pop
jno
sbb
mov
mov
mov
xchg
or
jae
jg
or
adcl
cmp
cmp
or
xchg
in
mov
mov
test
or
cltd
or
cmp
sbb
or
or
idiv
inc
jp
jp
dec
or
shlb
ficompl
xchg
inc
leave
push
push
xor
pop
xlat
pop
or
ret
mov
mov
or
mov
aaa
scas
or
or
ja
xchg
cmpsl
inc
mov
sbb
mov
or
rcr
or
mov
or
insl
mov
loopne
or
lods
mov
popa
aam
int
inc
adc
lahf
pop
repnz
xor
sbb
mov
inc
loope
bound
push
ss
iret
xlat
into
mov
movsb
inc
inc
nop
mov
dec
jnp
or
and
inc
jg
loop
adc
xchg
add
das
xchg
xor
jo
push
in
test
or
lcall
mov
nop
push
inc
fidivs
test
cld
clts
pop
comiss
pop
pop
cmovbe
add
inc
or
sbb
cwtl
fwait
lock
es
xorb
movsb
push
ficompl
dec
dec
add
add
test
dec
dec
dec
lods
adcb
out
aas
pop
add
popl
sub
lds
mov
xor
mov
arpl
imul
lret
lock
sahf
daa
cmpsb
es
daa
clc
es
daa
fcomps
pop
mulb
lock
pop
roll
sbb
lock
aas
popl
bound
xchg
and
in
add
or
push
add
jo
test
pusha
pop
sbb
movswl
and
ja
or
fisttpll
cmp
mov
outsl
ja
testb
jo,pt
ja
cmp
fiaddl
mov
or
add
imul
pop
or
into
jg,pt
and
dec
popf
hlt
mov
inc
lcall
add
inc
and
inc
mov
xorb
adc
add
cli
and
xorl
inc
call
push
jae
push
fisubrl
addb
rorb
add
and
inc
out
add
outsl
shrb
test
in
loop
or
push
sbb
dec
push
out
out
daa
loope
es
dec
jle
lods
lods
outsl
jl
push
shr
dec
cmp
push
addb
cmp
cmp
add
nopl
and
pop
dec
imull
add
cltd
out
pusha
or
push
decl
push
out
or
add
cmp
sbb
inc
add
addr16
push
scas
dec
and
mulb
xchg
data16
out
andb
add
outsl
addr16
add
jmp
addr16
sbb
pop
mov
mov
pop
xor
push
xchg
sbb
ja
xchg
clc
xchg
add
push
pop
ret
ja
cmp
lret
xchg
sub
out
dec
pop
jno
addr16
mov
inc
pop
fistps
mov
mov
cs
fcomps
data16
cmp
mov
sbb
clc
fmull
test
dec
rcrl
out
or
mov
push
int3
dec
rorb
clc
ds
mov
or
loopne
jge
jecxz
insl
sbb
mov
pop
sub
pop
xorl
and
push
pusha
xchg
and
imul
push
sbb
fcoms
add
ss
negl
pop
sbb
mov
das
sbb
mov
and
pop
das
ja
mov
dec
mov
imul
scas
mov
add
das
jbe
popf
fnsave
jmp
dec
mov
ja
push
das
mov
jbe
popa
jmp
testb
popa
das
repz
pop
fidivrl
popa
pop
js
das
nop
out
pop
inc
dec
fistpl
outsl
popa
das
insl
mov
das
pop
sbb
pop
scas
das
jg
out
mov
jae
das
in
loop
insb
pop
movups
sbb
mov
das
lods
jg
lret
fmull
ljmp
mov
test
add
sub
test
lea
xor
push
and
xchg
or
push
sbb
push
or
dec
jb
push
ja
arpl
xor
mov
das
mov
jmp
clc
pushf
fstpt
sbb
jnp
sub
add
cmpsb
adc
mov
cs
sub
mov
gs
mov
inc
das
out
jmp
mov
sbb
fwait
push
subb
pusha
mov
addb
xorb
dec
push
sti
repz
lret
push
pop
pop
or
cltd
daa
adc
je
aad
mov
mov
add
push
push
dec
ds
mov
add
outsb
pop
push
out
nop
cld
jns
or
dec
xchg
and
sub
pop
dec
or
jns
push
jne
or
or
inc
jo,pt
out
outsl
pop
arpl
lods
cld
mov
mov
push
orb
push
out
pop
dec
mov
ret
or
dec
inc
cli
fs
and
dec
push
add
lock
je
push
bound
mov
sbb
das
xchg
xchg
mov
leave
daa
es
sahf
or
clc
jo
call
jg
aas
paddusw
sahf
pop
and
movlps
insl
mov
push
jp
jo
add
sti
cmp
push
jbe
xchg
mov
add
inc
dec
or
jle
cmp
add
or
mov
inc
mov
add
cmp
mov
in
push
xchg
arpl
enter
jmp
jecxz
add
pop
lods
ja
push
dec
dec
push
inc
xor
ss
xorb
adc
inc
sub
subl
aaa
aam
fld
mov
ss
aaa
sarb
outsb
cmc
aaa
add
loopne
pop
mov
lds
out
and
mov
mov
or
int
ljmp
add
ja
adc
or
gs
adc
lods
movsb
xor
shll
sub
pushf
orb
pop
pop
push
bound
push
sub
mov
scas
push
push
daa
inc
sarb
lret
dec
inc
xor
cmp
gs
dec
pop
sbb
cmp
add
dec
add
lret
repz
xchg
inc
add
dec
pop
pop
jb
fcmove
rclb
cmpsl
fcoml
xchg
cmp
push
mov
push
inc
mull
add
std
ficomps
pop
addb
push
xor
out
idivb
or
mov
mov
sbb
xchg
add
es
jmp
xchg
and
sar
add
cmp
lock
mov
cmp
cmp
adc
outsb
js
mov
dec
movsl
add
idiv
roll
loopne
cltd
xor
add
add
jmp
push
mov
add
or
in
and
pop
outsl
sub
xchg
mov
lea
xlat
adc
pop
iret
xor
xchg
adc
and
leave
add
bound
mov
pop
fisttpll
push
sbb
hlt
sbb
addr16
and
jo
adcb
clc
cmc
rolb
into
test
add
adc
add
shll
sbb
into
inc
dec
iret
mov
xchg
testb
dec
enter
mov
cli
shll
cmc
lcall
push
loop
and
xor
mov
sub
dec
xchg
jne,pt
mov
xor
mov
dec
lret
jae
cmpsl
add
adc
sub
xor
mov
push
faddl
ds
inc
add
jae
jp
and
insb
push
pop
incb
aas
jbe
jnp
push
mov
imul
pop
leave
and
in
sub
xchg
mov
pop
jnp
dec
leave
dec
add
idivl
repz
mov
lret
xchg
imul
testl
jbe
subb
loope
ds
cltd
inc
popa
mov
lcall
mov
jle
pop
ja
jle
inc
pop
add
test
push
pop
push
push
cld
movsl
fstpl
push
popa
ljmp
loope
cmp
movsl
cmpsb
das
push
pop
out
and
lock
jle
push
push
aam
das
and
jno
pslld
cs
divl
shl
das
pusha
or
xchg
sub
mov
add
adcb
xchg
cmpsb
scas
lahf
ds
inc
pop
jbe
mov
mov
mov
inc
mov
or
or
cmpsb
fsts
jecxz
mov
or
add
out
cmpl
push
xlat
dec
roll
arpl
shlb
ret
cmp
jp
mov
mov
shl
andb
xchg
xchg
iret
push
rorb
mov
pop
addr16
enter
push
int3
push
sub
addb
and
lcall
cmp
fists
xor
inc
push
jb
mov
and
inc
inc
sti
push
and
dec
mov
xchg
stos
add
ds
mov
lods
jecxz
jg
lahf
jmp
xchg
push
jg
es
fsubs
xchg
cltd
sbbb
ret
movsl
pusha
xchg
or
lcall
sub
test
int
jnp
loope
or
pop
inc
push
push
sbb
call
xor
push
inc
add
add
sbb
mov
mov
in
cmp
insl
mov
call
inc
sub
push
lods
sub
fnstsw
sub
adc
inc
adc
mov
ficomps
inc
enter
add
or
adc
flds
test
xchg
dec
pop
push
hlt
pop
mov
ret
repz
les
aas
adc
pop
ret
pop
and
cwtl
loopne
cmp
daa
lahf
inc
nop
inc
push
jno
adc
pop
xor
enter
addr16
lcall
inc
mov
insl
packsswb
push
das
sbb
testl
pop
loopne
outsl
dec
push
adc
sti
sub
pop
inc
addb
jo
lcall
mov
pop
fwait
or
jae
push
sub
ret
shll
fs
xchg
push
push
outsl
push
pop
sbb
push
sahf
lods
sbb
or
mov
and
shrl
out
cmp
xchg
cmp
or
test
cmpsb
mov
das
mov
cli
mulb
push
adc
cmp
push
insb
es
lea
lahf
outsl
xchg
pop
push
dec
mov
xchg
adc
cmp
pop
mov
xchg
inc
aas
pop
loopne
push
inc
loope
xchg
push
faddp
cs
test
or
ret
mov
cmp
hlt
mov
sbb
repnz
and
shlb
arpl
pop
sub
or
push
mov
das
pop
enter
xchg
push
out
jbe
rorb
jbe
inc
cmp
pop
add
xchg
dec
push
adc
pop
dec
push
xchg
fs
outsl
xor
add
jg
fisttpl
jg
add
pop
sbb
outsb
icebp
cmpsl
jb
pusha
xchg
cmp
aaa
dec
repz
push
pop
add
in
or
push
and
pop
cmp
push
repnz
sub
or
xchg
gs
push
sub
push
ret
add
dec
cmp
xchg
iret
test
mov
sub
add
xchg
pop
or
dec
xor
push
sbb
add
or
out
pop
int3
bound
sti
jl
jle
das
pusha
mov
cmpsb
flds
pop
pusha
sbb
outsb
push
aad
jbe
and
test
mul
data16
mov
push
sahf
xchg
mov
xchg
in
dec
mulb
insl
cmpsb
out
mov
pop
sahf
dec
gs
in
mov
outsb
pop
pop
sbb
mov
imull
pop
and
dec
mov
cwtl
sti
pop
cmp
push
sub
push
lcall
pop
lret
jp
dec
xor
mov
sub
pop
addb
mov
cwtl
cs
push
cmpb
jae
cs
pop
aaa
ja
add
nop
xchg
pop
jne
jp
pop
and
into
in
aas
repnz
roll
pop
pop
outsb
jecxz
jle
inc
push
das
push
push
call
cwtl
int
sbb
fs
jbe
adc
clc
jbe
push
and
mov
dec
into
push
push
xor
incl
fwait
in
push
sbbb
or
pop
dec
fildl
sbb
shlb
pop
xchg
adc
push
push
bound
std
nop
mov
add
xchg
xor
mov
and
fimuls
movsl
arpl
xor
subb
xchg
fisubl
pop
pop
cmp
cmp
out
cmpsb
subb
pop
inc
jl
mov
sub
dec
ja
jge
in
inc
cs
mov
mov
mov
mov
and
imul
adc
mov
test
cltd
fstl
dec
hlt
xchg
xchg
imul
mov
push
pop
dec
movhps
pop
mov
mov
mov
es
and
nop
fstl
jmp
xchg
add
incb
cltd
or
or
imul
jg
gs
addr16
add
aam
adc
cmp
jae
lea
pop
das
sbb
fidivs
dec
outsb
cwtl
jp
cmp
sbb
lret
outsl
mov
xchg
mov
push
push
out
lea
enter
push
sub
inc
xchg
pop
and
js
jbe
lcall
insl
loope
xchg
pop
stc
pop
xor
mov
cmp
sbbl
jle
data16
sbb
dec
mov
fwait
or
cltd
push
loopne
or
ljmp
sti
fidivrl
stos
aaa
add
neg
rcll
jne
mov
add
arpl
arpl
adc
or
lahf
add
add
push
data16
jns
daa
mov
and
mov
dec
or
or
lds
jnp
and
lods
sub
xorb
mov
out
mov
cmp
js
dec
cmpsl
push
push
pusha
pusha
jo
subl
inc
ret
or
mov
addr16
mov
das
outsl
push
add
mov
mov
sub
inc
mov
add
or
mov
xchg
out
sti
jbe
push
xor
fnstsw
jo
jle
add
pinsrw
mov
jb
push
push
addb
xor
pushf
add
ret
adc
add
pop
addl
es
mov
ret
pop
xor
cmp
jmp
insb
js
cmp
jo
or
das
pop
movsl
bound
decl
and
ja
fisttpll
add
push
add
cmp
mov
mov
out
jp
or
inc
scas
sbb
sub
arpl
or
and
cltd
push
xor
daa
and
stos
and
lret
sarl
dec
pushl
shlb
mov
insl
popa
mull
mov
or
push
fs
test
and
jmp
sub
jge
sbb
inc
mov
mov
add
mov
jo
add
sbb
incb
sub
in
xchg
in
into
jle
and
sbb
add
xor
ret
andl
inc
add
xchg
xchg
stos
icebp
jle
inc
add
push
scas
pop
or
lods
dec
nop
adc
cmpsb
fdivl
pop
incl
add
adc
xor
ja
add
into
rclb
out
inc
adc
inc
and
mov
outsb
fisubrl
jl
pop
pop
ret
mov
or
or
sbb
pop
push
fadds
push
push
mov
jb
or
sar
push
pop
inc
dec
ret
pop
arpl
jo
outsl
adc
mov
mov
test
mov
inc
adc
xor
or
mov
cs
imul
inc
pop
negl
dec
dec
stos
inc
push
mov
cmp
mov
mull
push
orb
addr16
fwait
lock
or
pop
int
jbe
jg
sub
imul
loopne
sarb
rolb
jae
das
outsl
jo
pop
xchg
loop
addr16
push
call
sub
jns
into
das
add
push
jne
mov
jp
arpl
xchg
mov
jb,pn
stos
and
aas
sbb
cmp
ds
xchg
add
mov
cmpsl
and
inc
insb
inc
push
mov
pop
pop
adc
jg
inc
test
cmp
pushl
jbe
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
in
xor
cwtl
inc
xor
jge
incl
xor
xor
xor
xor
xor
inc
xor
xor
xor
cmpsl
aaa
adc
ds
int3
pushl
pop
imul
ret
aas
or
mov
popf
add
in
hlt
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
ss
in
mov
pushl
sbb
es
pop
aaa
jno
jl
and
jns
scas
cmp
decl
xor
xor
xor
call
stos
adc
push
data16
xorl
push
cmp
fistpll
inc
bound
cmp
cmp
cmp
cmp
popa
cmp
cmp
cmp
aas
cmp
cmp
popf
cmp
mov
or
cmp
cmp
cmp
inc
cmp
xchg
cmp
loop
cli
cmp
mov
ds
idivl
or
icebp
add
ljmp
aas
cmp
dec
aas
jp
xchg
aas
pushf
aas
lret
call
xchg
outsl
mov
xor
cmp
xor
jg
xchg
xor
loop
inc
imul
scas
sahf
adc
sbb
push
inc
aaa
push
aaa
js
xorb
pop
pushl
in
pop
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loop
in
cmp
cmp
adc
xor
cmp
dec
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
add
or
sub
xor
inc
ds
clc
je,pt
mov
mov
int
xlat
adc
xor
aas
lods
aas
decl
aaa
jp
dec
xor
je
test
lods
xor
mov
xor
xor
jns
xor
xor
mov
push
xor
test
mov
xor
out
clc
sub
xor
xor
nop
xor
xor
xor
xor
bound
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
ss
ss
mov
test
aaa
jmp
cmp
cmp
mov
loop
out
cmpsb
cmp
cmp
cmp
mov
pop
inc
mov
inc
jmp
cmp
or
adc
ds
aas
data16
jns
mov
lahf
aas
mov
hlt
incl
gs
dec
inc
xor
ss
jo
cmp
pop
cmp
mov
scas
xor
call
daa
xor
xor
jl
xchg
divb
pop
xor
jns
xchg
xor
xor
xor
cmp
inc
xor
movsb
xor
fidivl
repz
xor
lahf
xor
xor
xor
xor
xor
pushl
aad
loopne
iret
aaa
test
sarl
fidivrs
sub
arpl
outsb
cmp
cld
cmp
cmp
cmp
cmp
cmp
mov
aas
mov
aas
call
xor
xor
mov
xor
xor
ds
ljmp
xor
das
ss
add
dec
mov
mov
cmp
inc
cmp
bound
push
inc
jg
aas
adc
cmp
cmp
cmp
nop
mov
lds
ljmp
push
negb
mov
jb
xchg
xor
pop
sbb
std
sbb
cmp
pop
cmp
cmp
mov
xor
xor
fwait
dec
sub
or
pop
ss
mov
cmp
mov
jecxz
or
cmp
cmp
cmp
cmp
ljmp
cmp
mov
mov
aas
jbe
mov
pop
push
add
pushf
ljmp
icebp
mov
ljmp
cli
pop
in
sub
mov
cmp
cmp
pop
push
pushf
cmp
ljmp
mov
cmp
cmp
cmp
cmp
pop
lock
pop
cmp
cmp
rclb
sbb
cmp
cmp
mov
cmp
and
adc
cmp
xor
pop
xor
mov
dec
xor
jbe
jge
in
cmp
cmp
shlb
and
add
mov
jg
add
xor
mov
xor
xor
or
decl
xor
xchg
sbb
xor
jle
mov
xor
xor
or
pushl
divb
aaa
cmpl
cmp
cmp
cmp
cmp
ljmp
pop
jnp,pt
mov
stc
xor
dec
xor
xor
jmp
aas
jl
push
xor
xor
jb
xor
xor
stc
xor
add
cmp
aaa
das
cmp
cmp
sub
cmp
cmp
call
push
inc
cmp
cmp
jle
cmpl
push
aas
mov
nop
aas
loopne
movsb
pop
pop
movb
icebp
xor
xor
xor
cli
jmp
in
inc
aaa
adc
and
cmp
xchg
inc
cmp
clc
xchg
cmp
cmp
sbb
cmp
lds
lock
aas
cmp
bound
cmp
cmp
cmp
cmp
pusha
cld
incl
cmp
cmp
cmp
cmp
cmp
sbb
cmp
data16
cmp
cmp
pushl
cmp
adc
sbb
dec
cmp
xor
cmp
cmp
inc
aas
jg
inc
aas
dec
aas
dec
mov
aas
pop
aas
pusha
aas
fs
push
aas
je
js
xchg
sahf
hlt
jl
cmpl
aas
test
mov
mov
pop
pushl
jecxz
and
aaa
xor
ja
test
xchg
push
mov
xor
xor
push
xchg
adc
xor
into
adc
jb
and
pop
xor
add
mov
xor
ret
xor
xorl
aaa
pop
cmp
jg
cmp
lret
fwait
inc
or
jg
scas
xor
jns
xchg
cmp
pushf
cmp
jmp
js
cmp
cmp
sub
pop
loopne
push
scas
add
arpl
addl
pusha
add
xor
xor
xor
xor
xor
incl
xor
pop
ss
shlb
out
ss
push
cld
lcall
movsb
cmp
cmp
cmp
mov
cmp
pop
cmp
cmp
or
aas
inc
add
aaa
mov
cmp
insb
cmp
cmp
jl
cmpb
dec
xor
lock
inc
inc
repnz
hlt
pushl
jecxz
cld
xor
push
ss
shll
aaa
sub
push
aaa
mov
movsb
clc
pop
xchg
data16
cmp
cmp
dec
and
jecxz
jae,pt
xchg
ds
ds
pop
and
xor
ds
push
cli
mov
loop
ljmp
pop
into
add
and
dec
xor
xor
xor
xor
xor
fwait
push
sub
xor
jmp
outsl
testb
ss
cli
ss
xchg
xchg
aaa
cmpsb
out
leave
aaa
add
adc
ja
pop
loopne
cmp
cmpsb
jecxz
idivl
cmp
into
test
and
inc
iret
mov
mov
inc
xor
ss
mov
inc
cmp
cmp
cmp
pop
mov
mov
dec
sar
jbe
cmp
mov
ret
aas
cld
cmp
pop
inc
insl
cmp
cmpl
decb
cld
cmp
stos
cmp
mov
cmp
jge,pt
push
call
into
add
sahf
push
test
mov
out
es
ret
pop
jp
ds
ds
ds
cs
cmpb
pop
push
lock
ds
aas
xchg
scas
aas
fldcw
xchg
add
lock
add
xor
xor
xor
clc
pushl
and
xor
push
mov
xor
xor
xor
xor
lods
xor
ljmp
imul
ss
pushl
push
aaa
arpl
int
or
push
je
inc
cmp
call
dec
cmp
pop
cmp
data16
cltd
cmp
incl
lcall
rcll
cmp
cli
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
test
sub
jbe,pn
cmp
dec
dec
ljmp
cmp
outsl
cmp
jp
jg
test
mov
lcall
cmp
cmp
cmp
cmp
cmp
cs
mov
in
ljmp
push
or
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
push
pop
cmp
incl
cmp
jnp
cmpb
cmp
dec
filds
cmp
cmp
cmp
shlb
cmp
cmp
xchg
mov
cmp
mov
cmp
sbbb
inc
adc
les
sub
dec
cmp
ss
cmp
cmp
cmp
cmp
cmp
cmp
sbb
mov
cmp
cmp
cmp
cmp
push
mov
mov
call
aas
std
ret
cmp
sbb
pushf
cmpsb
xor
lahf
cmpsb
lods
ds
push
add
push
xor
popf
clc
mov
xor
jp
shll
xor
xor
mov
or
inc
xor
cs
aaa
lods
aaa
cwtl
or
jecxz
aaa
loope
push
ljmp
mov
adc
cmp
push
std
lret
jo
jg
xchg
xor
xor
data16
call
aaa
dec
aaa
repz
adc
lea
mov
in
or
jo
scas
pop
jo
mov
mov
xor
cmp
cmp
fwait
ds
jecxz
out
push
loope
aas
in
ds
adc
mov
xor
xor
rorl
xor
push
inc
inc
mov
mov
dec
mov
cs
xor
xor
sbb
xor
xor
mov
xor
xor
cmp
pop
xor
or
and
aaa
ss
arpl
jns
movsl
ss
pop
pop
shlb
sub
aaa
test
lcall
aaa
xchg
sub
cmp
cmp
and
movb
imul
xlat
pop
loop
pop
xor
xor
xor
call
xor
and
or
movsl
fs
ficoms
mov
and
and
sub
pop
jge
fidivs
ss
cmp
inc
ss
ss
ss
les
pop
ss
mulb
ljmp
jo
je
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
add
lods
pop
mov
das
cs
and
cmp
push
daa
mov
in
sbb
mov
add
test
push
cmp
cmp
cmp
icebp
das
cmp
cwtl
lods
xor
xlat
dec
push
xchg
xor
inc
mov
xor
xor
or
push
xor
jno
rsm
icebp
ss
adc
cmp
dec
aaa
popa
aaa
mov
ret
std
pop
out
aaa
out
icebp
aaa
cld
repnz
sbb
cmp
out
cmp
sbb
icebp
test
mov
loope
sbb
sbb
cli
cli
push
cmp
and
or
test
ds
rol
pop
aad
loop
hlt
daa
add
push
cwtl
lahf
xchg
mov
jmp
jg
mov
xor
xor
xor
xor
xor
xor
xor
inc
xor
sahf
xor
mov
fnstenv
pop
ss
jae
jg
fnstsw
sub
xchg
cmp
cmp
cmp
cltd
scas
scas
inc
rcll
cmpsl
out
test
into
test
cld
cmp
cmp
cmp
mov
in
rolb
push
aas
sub
add
pop
rolb
xor
fdiv
clc
adc
sbb
popa
mov
xor
xchg
mov
nop
dec
mov
pushf
xchg
test
adc
push
cld
pushl
xor
xor
xor
xor
xor
ret
ja
sbb
sbb
and
and
sub
sub
xor
cmp
cmp
inc
pop
out
mov
cmp
add
jp
scas
rorb
inc
cmp
test
mov
nop
cmp
cwtl
loop
cmp
cmp
cmp
sarb
aam
fdivrs
jmp
mov
outsl
cmp
les
enter
sarb
aam
fdivrs
fdivrl
xor
jmp
ds
call
ds
ds
push
ret
fdivrl
or
or
adc
adc
sbb
sbb
and
clc
mov
pop
jb
mov
rolb
ja
push
adc
into
xor
lea
xor
xor
scas
xor
cld
xor
jb
cli
push
adc
or
cmp
lods
sahf
xor
push
mov
push
pop
cmp
movb
cmp
push
jp,pt
mov
ds
mov
mov
and
js
scas
pop
loopne
pop
bound
cmpsb
pushl
call
cmp
cmp
stos
cmp
cmp
cmp
adc
mov
cmp
push
loopne
and
movsb
push
outsb
cmp
lds
sbb
mov
jne
fstpt
sbbb
inc
rcll
and
push
xor
dec
mov
sub
mov
sbb
add
inc
mov
pushf
xor
xor
xor
xor
mov
mov
mov
fmulp
outsb
shlb
xor
inc
pop
push
bound
xor
xor
xor
xor
clc
push
adc
add
or
sub
es
aaa
dec
aaa
shlb
aam
fdivs
fdivl
loopne
in
jl
cmpsl
call
aaa
hlt
aaa
clc
add
add
or
adc
jle
adc
cmp
in
dec
cmp
ficoms
cmp
cmp
loop
cmp
mov
pop
cmp
cmpsb
cmp
jno
scas
les
sahf
add
xchg
mov
mov
fisubl
bound
sub
loope
add
test
aas
cli
push
push
or
xor
jno
mov
lret
xor
xor
inc
xor
mov
leave
xor
into
xor
xor
xor
test
test
imul
ljmp
enter
cmpsb
push
pop
pop
sub
sbb
push
and
mov
repnz
cmp
pop
dec
sbb
cmpsb
cmp
push
aas
insl
aas
jge
mov
xchg
jp
mov
add
adc
xor
lcall
xor
xor
xor
fbld
fnstsw
or
cmp
cmp
or
ret
or
movsb
mov
cmp
cmp
push
cmp
loope
imul
imul
push
push
shrl
out
xor
xor
xor
loope
lock
repnz
mov
pop
addb
cmp
sarb
xor
xor
push
fsubl
scas
into
push
mov
pop
mov
cmpsb
std
lcall
adc
out
cmp
sarl
and
xor
test
fisubrs
fisubs
xor
xor
mov
add
stos
cmpsl
add
mov
hlt
xor
xor
xor
and
and
aaa
pop
aaa
jnp
je
dec
push
pushf
or
adc
pushl
push
fidivrs
inc
cmp
into
ljmp
cmp
test
imulb
cmp
testb
xor
dec
pop
push
mov
sahf
data16
xchg
cmp
movsb
aam
call
pop
ds
cmpl
push
dec
fcompl
add
dec
push
inc
xor
push
xor
mov
sub
xor
xchg
lods
ss
aaa
mov
xorl
ret
push
mov
sub
push
lea
leave
call
xorl
mov
imulb
loopne
dec
dec
ret
xor
cmp
cmc
cs
jecxz
pop
and
mov
stos
jecxz
lods
mov
out
ds
js
push
pop
ficoml
pop
jecxz
dec
out
cmpsb
xor
xor
inc
pop
xor
je
shlb
mov
cmp
fs
cld
cmp
xor
cmp
add
cmp
xor
mov
cmp
sahf
fldt
push
test
adc
xchg
out
adc
xor
pusha
pop
push
xor
cli
fists
xor
xor
pushf
out
clc
scas
shlb
mov
mov
xor
push
loope
xor
sar
ljmp
sub
mov
ss
aaa
push
cmp
cmp
sub
lea
cmp
inc
mov
jecxz
aas
ds
jno
pop
jo
dec
adc
ja
jo
or
mov
in
xor
jmp
lea
fimuls
push
xor
xor
xor
scas
pop
xor
std
mov
aaa
sbb
inc
cmp
cmp
jmp
es
ja
push
sar
nop
xchg
test
mov
ss
inc
inc
addl
xchg
fnstcw
out
ds
push
mov
aam
aaa
jb
aas
leave
out
add
mov
data16
fidivs
call
ljmp
xor
xor
xor
push
and
xor
je
mov
in
cmc
xor
dec
xor
push
movsl
arpl
movsb
out
into
xor
xor
cmp
rcll
aaa
inc
jle
inc
cld
dec
pop
cmpsb
loope
and
cmp
fistpll
ds
ds
xor
fildll
cwtl
xor
sub
or
lods
mov
cmpsl
ss
nop
bound
psllw
aas
mov
aas
cmp
cmp
mov
std
jo
mov
xchg
imul
fsubrs
adc
shlb
aam
fdivl
loopne
in
ds
mov
xor
pop
xor
cmp
add
repnz
xlat
xor
xor
xor
xor
aaa
mov
mov
push
loope
sbb
movsl
out
fidivl
sbb
mov
cmp
mov
cmp
movsl
inc
das
cmp
push
jb
fwait
cmp
fcmovu
add
fildll
xor
xor
xor
mov
and
sahf
sub
stos
cmp
outsb
xchg
xchg
les
aam
pop
enter
aam
stos
cmp
test
jle
add
loop
push
add
aad
cld
xor
xor
rol
adc
inc
push
mov
xor
xor
xor
xor
into
xor
xor
icebp
ss
push
test
insb
aaa
jo
je
rolb
lods
jg
daa
das
filds
push
xor
pop
jle
xor
xor
mov
sub
add
outsl
push
push
xor
push
aaa
fwait
aaa
lahf
or
stos
aaa
scas
add
ds
icebp
cmpl
loop
ret
mov
mov
mov
fdivp
stc
xor
cmp
pop
cmp
bound
frstor
outsl
cmp
scas
idivb
mov
fs
xor
cmp
hlt
aaa
pop
ss
ret
xor
jmp
lock
and
ss
ss
ja
les
xchg
cmp
bound
ret
int
fs
fnstenv
pop
xor
lods
inc
out
cmpsb
les
test
je
or
fs
shll
inc
xor
jns
jbe
pop
sub
cmp
je
dec
cmp
pop
cmp
adc
mov
jo
mov
ret
ds
adc
push
aas
pop
aas
mov
ds
dec
jbe
xor
mov
mov
xor
jp
or
inc
movswl
mov
movsb
push
mulb
push
cmp
call
dec
xchg
cmp
cmp
cmp
lret
ds
ds
sbb
xor
xor
xor
test
lock
add
xor
xchg
add
cmp
mov
ljmp
mov
fwait
cmp
jbe
cmp
je
sbb
or
addr16
aaa
push
add
outsb
xor
xor
mov
sahf
lret
xor
test
cmp
adcb
cmp
je
orb
mov
push
cmp
push
cmp
and
cld
dec
in
ds
sub
outsb
ds
xor
outsb
inc
aad
xchg
mov
push
sub
xor
xor
push
imul
je
push
cmp
movsb
repnz
sub
or
adc
ds
cmpsb
aas
xchg
sub
push
mov
jg
in
loope
sbb
icebp
push
mov
fldcw
inc
repnz
ret
push
inc
xchg
aaa
mov
cmp
mov
cmp
cmp
mov
add
xchg
cli
dec
aas
gs
aas
fwait
xchg
test
cmp
push
mov
dec
decl
ret
xorb
lret
xor
xor
mov
xorb
xor
cmp
push
cli
xchg
xor
mov
xor
add
cmp
std
sbb
cmp
jle
cmp
cmp
cmp
push
pop
lods
divb
mov
out
sub
lcall
cmp
jo
push
xor
xor
cmp
bound
cmp
lds
loope
lret
ss
movb
mov
adc
xor
pop
mov
sub
xor
cmp
inc
dec
cmp
test
cmp
icebp
mov
mov
jo
add
cmp
mov
out
mov
mov
mov
xor
mov
lcall
stos
cmp
cmp
imul
js
push
test
ret
cmp
sar
xchg
cmp
cmp
cmp
mov
push
lcall
sarb
push
hlt
cmp
inc
cmp
xchg
xchg
test
lea
dec
pop
cmp
push
xchg
sbb
fadds
sbb
inc
lods
ds
cmp
out
xchg
mov
xor
sbb
sbb
add
dec
cli
pop
xor
clc
xor
fidivl
cli
mov
xor
inc
xor
xor
xor
ror
aas
and
xor
xor
xor
pusha
ss
mov
mov
pop
loope
sbb
adc
cmp
call
subl
mov
in
cmp
adc
insb
bound
sub
mov
aas
inc
aas
jne
sti
mov
rolb
add
or
xchg
xor
sub
ss
out
cmp
test
and
idiv
and
pop
pusha
icebp
push
push
js
mov
adc
jmp
xor
xor
push
xor
xor
xor
xchg
in
xor
xor
add
stos
rorb
aaa
mov
jb
rclb
in
call
mov
cmp
loopne
out
and
daa
jbe
or
cmp
push
sub
je
jle
mov
pop
push
ljmp
xchg
add
add
rolb
add
sahf
lret
or
and
gs
bound
lea
shll
cs
jbe
fisttps
stos
fwait
push
aas
aas
outsl
dec
cltd
aas
mov
adc
test
lock
mov
nop/reserved
and
pop
xorl
lea
cmpsl
jb
or
sub
jae
subb
xor
push
in
xor
xor
pushl
dec
xor
pop
xor
xor
xor
xor
xor
ret
push
push
dec
loop
ss
jo
aaa
scas
xchg
inc
out
ss
sub
sub
adc
jge
pop
ja
pop
aaa
imul
aaa
mov
mov
repnz
ja
pushf
cmp
outsl
sbb
cmp
cmp
aas
je
iret
adc
cmp
scas
lret
call
pop
add
hlt
int
ret
pop
jno
aaa
cmp
cmp
pop
mov
cmp
repnz
adc
xlat
cmp
xor
ds
xor
jg
lcall
xor
xor
xor
xor
xor
pop
in
adc
mov
mov
xor
icebp
jae
inc
fidivs
outsb
popa
xchg
xor
out
fidivs
nop
aaa
mov
push
cs
cmp
mov
cmp
int3
cmp
stos
sti
xor
dec
cmove
mov
push
scas
push
sub
fidivrl
ds
insl
aas
xchg
les
and
cmp
rolb
dec
or
xor
nop
push
inc
fildl
out
add
popa
and
xor
cs
mov
shll
fidivs
jmp
test
ds
rolb
add
sahf
pop
push
js
xchg
pop
add
scas
lods
jb
cmp
cmp
cmp
aaa
push
jne
xchg
push
lock
and
inc
inc
clc
lcall
cld
sbb
cmp
cmp
sbb
sbb
and
sub
sub
add
cmp
cmp
inc
cmp
push
mov
addb
negb
test
mov
movb
mov
outsl
repnz
push
xor
sahf
pop
jmp
pop
xor
xorb
xor
dec
jbe
cmpsb
jge
push
mov
stc
cmp
jae
inc
dec
test
jl
inc
scas
pop
out
mov
dec
sarl
adc
pop
rorb
push
jne,pt
cmpsb
pop
test
add
cmp
add
out
mov
dec
xor
outsb
xor
push
xor
xor
rcrb
imul
xor
xor
cli
mov
mov
aam
mov
mov
lcall
push
mov
mov
mov
cs
mov
and
cmp
dec
jge
mov
sarl
ljmp
sbb
jg
add
arpl
test
cld
push
mov
xchg
pop
incb
mov
mov
call
xor
sbb
pop
cs
or
adc
loopne
jge
es
cmp
cmp
pop
mov
stos
cmp
add
les
dec
mov
jg,pt
jo
stos
sahf
pop
mov
mov
data16
push
jne
ds
adc
mov
cmp
mov
xor
sbbb
pop
repnz
dec
xor
jl
mov
pop
cmp
cmpb
outsl
pop
or
mov
ja
cmp
jne
mov
mov
mov
mov
jo
mov
xor
xor
xor
xor
outsb
pop
xchg
or
adc
loopne
icebp
mov
push
cmp
cmp
cmp
cmp
xchg
xchg
pop
mov
mov
add
push
inc
xchg
mov
incl
std
icebp
pop
ret
and
sub
pop
dec
jo
mov
outsl
push
push
add
out
adc
scas
insb
add
ss
ss
add
cmpsb
mov
outsl
jle
mov
lahf
sbb
xor
xor
popa
xor
ficomps
hlt
ja
imulb
add
cmp
cmp
test
adc
sub
xor
call
imul
xor
xor
cmp
pop
hlt
cmp
sti
cmp
or
cmp
jl
shlb
lods
cmp
cmp
pusha
sub
test
decb
mov
mov
jecxz
daa
or
adc
mov
xor
xor
lock
adc
push
insl
cmp
repz
cmp
das
push
pop
push
les
cmp
cmp
cmp
ds
fiadds
bound
sbb
or
adc
xchg
push
loop
aaa
mov
cmp
xchg
cmp
xchg
or
cmp
and
add
mov
mov
xor
pop
inc
aaa
dec
mov
fstpt
in
push
cmp
hlt
cmp
or
mov
add
xchg
xor
xor
sarl
xor
cmpsl
xor
xor
imull
icebp
xchg
orb
mov
cmp
xlat
xchg
jbe
push
mov
and
orb
sub
mov
test
push
xor
xchg
ja
sub
xor
xor
cmp
ret
push
jg
aam
es
push
ret
stos
xor
add
push
xchg
incb
mov
dec
jb
inc
aaa
jbe
orb
ficoml
mov
sbb
mov
cmpsl
cmp
std
lock
cmpsl
sbb
push
push
sarl
pop
movsl
das
pusha
pop
out
stc
cmp
in
xor
fdivl
aas
push
xchg
cld
das
stos
sbb
push
push
and
push
add
inc
adc
xor
adc
pop
mov
je
adc
inc
push
gs
or
ss
ss
aaa
push
pop
inc
pop
push
lahf
mov
stos
mov
dec
xorl
jae
lahf
cmp
pop
test
andb
mov
or
aad
ffreep
mov
cmp
scas
or
and
mov
mov
or
push
cmp
in
cmp
std
cmp
movsb
ds
or
test
push
hlt
aaa
add
jmp
aas
int3
dec
mov
test
adc
xor
ds
xor
mov
xor
add
ja
jle
xchg
add
push
pop
dec
cmpsb
push
movsl
sub
mov
xor
out
lret
and
push
sbb
fistpll
or
sbb
scas
push
lcall
pop
mov
jb
push
pop
xor
mov
or
sbb
push
xor
sub
add
divb
push
aaa
ljmp
sub
jg
add
out
sahf
push
cmp
cmpb
mov
subb
outsb
mov
mov
ds
aas
cmp
mov
jbe
test
cmp
mov
sub
push
cmp
lcall
movsb
xor
xor
xor
loope
rorb
cli
movsl
jle
fcompl
and
jnp
lods
pop
std
adc
inc
sbb
sbb
inc
shrl
sbb
lret
mov
jne
add
adc
scas
mov
loop
cld
cmp
lds
cmp
push
dec
cmp
adc
cmp
cmp
cmp
cmp
jb
bound
stos
add
xor
movsl
push
xchg
cli
mov
sbbb
idivb
inc
jne
cs
cmpsl
push
or
iret
jo
pop
add
mov
mov
mov
xlat
cmc
xor
xor
xor
dec
xor
pop
xor
push
mov
add
fwait
ss
stos
cmc
pop
into
fdivs
fdivl
loopne
call
jo
cmp
aaa
dec
aaa
dec
fisubs
cmp
cmp
das
mov
incb
imul
cmp
xorl
xchg
inc
dec
dec
xchg
inc
jns
mov
mov
ds
push
ljmp
fcompl
aas
mov
push
xor
xor
repz
or
pop
idivb
push
dec
adcb
es
mov
jle
xor
jae
jg
pop
fistps
xlat
cmpsl
xor
xor
mov
sub
je
push
ds
mov
mov
or
clc
mov
pop
aaa
push
or
cmp
mov
add
mov
push
xchg
rorb
mov
clc
xor
pop
xor
add
inc
pushf
pop
or
jg
mov
mov
stc
cmp
adc
sub
xor
jb
and
les
xor
mov
xchg
jae
push
aaa
ficoml
aas
les
std
cs
jo
or
push
repnz
xor
jno
ja
mov
push
mov
or
and
out
xchg
ret
mov
outsb
xor
push
sahf
mov
push
clc
das
push
les
sub
dec
xor
xchg
loop
sbb
xor
xor
mov
jo
jle
push
pushf
xor
xor
xor
adc
popa
or
inc
movsl
xchg
subl
push
cs
inc
pop
pushf
push
cld
pop
inc
orb
cmp
cmp
cmp
or
and
mov
cmp
ret
mov
loope
or
or
sbb
sub
aaa
push
mov
mov
ror
xchg
inc
or
pop
cmp
scas
mov
outsb
out
in
push
std
cmp
cmp
add
test
mov
and
ljmp
pushl
xor
xor
xor
test
push
dec
jns
mov
mov
movsl
call
cmc
xor
push
ss
ss
stos
cmpl
jmp
rorb
ret
mov
cmp
cmp
sbb
inc
xor
test
cmp
rcr
cmp
mov
mov
clc
out
jecxz
sbb
dec
adc
filds
leave
out
xor
xor
data16
pop
pop
mov
loopne
in
sub
or
xchg
outsb
inc
cmp
jmp
fnsave
rolb
aaa
repnz
sahf
xchg
insb
xor
mov
xor
xor
xor
pop
test
repnz
xor
push
push
xor
pop
les
mov
xor
mov
sbbb
lea
jo
fnstenvs
fwait
or
dec
push
ljmp
cmp
inc
cmp
ds
idivb
add
call
dec
push
xor
cmp
inc
sub
mov
lea
movsl
sahf
sbb
outsb
data16
mov
aam
clc
data16
mov
xor
test
call
cmp
je
push
xor
push
jp
cltd
push
mov
jbe
ss
or
sub
inc
subl
xchg
push
adc
push
push
test
js
push
cmp
jno
lods
test
sahf
fcmovbe
mov
sub
cmp
cmp
cmp
and
das
sbb
jbe
adcb
jle
ret
push
push
adc
xor
shlb
rol
enter
xchg
scas
sub
inc
sbb
out
pop
inc
pop
inc
or
xor
inc
mov
aaa
mov
inc
ss
test
clc
mov
cmc
cmp
push
ds
dec
popa
scas
mov
ds
addb
xchg
rclb
dec
xchg
inc
lock
or
mov
cmp
daa
cmp
ret
rolb
sub
mov
divb
pop
out
add
ds
jb
aaa
cmp
mov
into
test
or
in
pop
push
xchg
mov
add
sahf
daa
xor
popf
jg
ss
xchg
jmp
or
xor
cmpsb
pop
clc
adc
pop
xor
mov
popa
andb
mov
mov
mov
add
rorb
cli
push
sbb
pop
dec
jmp
repnz
xor
xor
jmp
aaa
jbe
loop
xor
cs
pop
ja
xchg
lds
lock
xor
xchg
mov
adc
sbb
mov
cmp
js
cmpsb
xor
rcl
push
sbb
and
sub
jp
ss
mov
les
ss
mov
aaa
xor
int3
xor
dec
cs
adc
aaa
mov
mov
push
mov
push
cmp
aaa
test
pop
or
cmp
cmp
and
lret
pop
lods
mov
cmp
jnp
mov
xchg
dec
adc
fistps
movsl
cmp
stos
scas
adc
test
jle
mov
lret
dec
mov
es
or
or
pop
mov
xor
xor
xor
xor
subb
in
mov
xor
jo
jg
cs
xor
push
ss
ss
cltd
je
js
xor
popa
aaa
sbb
add
cmp
pop
cltd
cmp
inc
fisttpll
mov
adc
lock
xabort
cmp
cmp
sub
movb
add
cmp
cmp
lds
call
mov
and
ds
inc
aas
iret
push
aas
pop
mov
adc
dec
or
push
xchg
shrl
add
push
xchg
inc
call
hlt
sarb
mov
lds
or
lcall
outsl
adc
hlt
inc
xor
pop
lret
jb
xor
xor
shll
in
dec
sbb
loopne
pop
cmp
jno
pop
testl
cmpsb
in
ds
adc
ja,pt
addl
lretw
jno
adc
aas
inc
jp
aas
ret
push
pop
ljmp
sub
sahf
cmp
je
add
push
fiadds
pop
mov
fldl
xorl
push
rol
or
rorl
push
inc
int
shlb
mov
push
mov
out
mul
push
cs
stc
ss
jmp
dec
dec
cmp
data16
inc
xor
addl
add
push
jb
cmp
sbb
cmp
inc
sub
mov
inc
into
hlt
call
inc
push
and
popf
adc
adc
inc
mov
test
andb
adc
out
rolb
out
xor
pop
push
xor
pop
xor
xor
add
mov
xor
push
adc
outsb
or
dec
aaa
enter
push
movsb
fstps
cmp
out
cmpl
aaa
shrd
xor
xor
pusha
xor
fidivs
ret
sub
sahf
es
aad
jl
xor
arpl
jp
xor
fiadds
cmpsb
rorb
dec
xor
xchg
jp
cmpl
dec
test
and
dec
push
movsl
cs
ss
loop
ss
ret
aaa
add
cmp
push
inc
xor
push
xchg
mov
je
scas
push
cmp
mov
out
jmp
aad
call
jg
or
dec
and
cmp
or
scas
pop
push
cwtl
pop
mov
push
in
cli
push
lds
jbe
aas
ja
mov
cmpsb
ret
lds
pusha
enter
js
adc
pop
push
jg
dec
jl
rcrb
cmpsb
mov
fdivl
popa
test
cs
push
jae
xlat
cmp
xchg
mov
int
push
adc
loop,pt
in
jle
rol
sarb
out
cmp
addb
mov
dec
xor
test
repnz
punpckhdq
test
dec
xchg
outsb
cmp
xchg
push
jbe
push
lods
or
push
add
mov
push
scas
jl
or
cmp
cmp
outsl
push
stos
and
push
sbb
xchg
loop
aas
fisttps
or
sarb
out
mov
mov
mov
jbe
xor
mov
adc
pop
sub
sub
insl
pop
scas
stos
add
lock
push
loop
xor
jb
xor
xor
adcl
ljmp
and
stos
or
jecxz
lds
push
fisubrl
or
pop
ret
jl
push
push
pusha
cmp
mov
cmp
cmp
mov
sar
or
pusha
dec
jl
mov
popf
push
adc
aad
hlt
sbb
int
mov
lcall
addb
test
rcrl
inc
inc
cmp
aaa
loop
or
pop
mov
ret
jo
jo
cld
xor
xor
bound
sub
shlb
shlb
aam
add
fmul
in
call
or
cld
ljmp
xor
xor
repnz
xor
xor
xor
imul
dec
test
sub
loop
jle
scas
mov
or
pop
cmp
cmp
pop
cmp
mov
or
pop
bound
inc
js
inc
xchg
push
mov
xchg
daa
mov
inc
cmp
inc
divb
or
jp
aas
int
stos
loopne
scas
nop
jl
sub
sub
xor
mov
jne
sbb
sbb
shlb
in
inc
adcl
cmpsb
push
push
test
and
push
xor
xor
push
mov
mov
divl
dec
aaa
pop
repnz
cmp
xchg
or
mov
jmp
sub
mov
push
and
std
adc
adc
push
lret
rcrb
data16
ljmp
nop
xor
xor
inc
lds
stos
les
ljmp
inc
xchg
icebp
xor
xor
mov
lock
jp
stos
add
sub
dec
addr16
sub
ss
cltd
ss
mov
loopne
mov
or
adcl
dec
jno
cwtl
out
or
inc
jl
fstpt
push
scas
pushf
add
dec
and
shr
mov
mov
cmp
and
add
mov
pop
scas
faddl
push
mov
cmpsl
dec
xor
test
xchg
jbe
jle
mov
xor
outsb
jnp
mov
xor
je
cmp
sahf
fstl
mov
inc
xchg
cmp
stos
ljmp
ss
outsb
cwtl
popw
movsl
mov
pop
mov
cmpsl
cmp
stos
xor
pusha
test
je
xchg
mov
cmp
xor
cs
push
sub
mov
out
outsb
xchg
and
mov
loop
add
or
fwait
jmp
mov
mov
aaa
mov
sub
loope
or
aam
idivl
sub
inc
xor
xorl
sub
mov
xor
mov
lcall
scas
js
cmp
aas
cmp
push
add
mov
dec
loop
push
test
pop
sarl
and
push
test
inc
mov
dec
jp
div
ja
loop
xor
jnp
fdivs
fidivs
push
xor
loop
xor
jg
cli
push
mov
lds
cmp
or
loop
lahf
dec
jmp
ret
or
inc
into
mov
sbb
sarl
and
inc
das
es
cmp
cmpl
jo
enter
push
jge
sub
mov
testb
ds
and
cltd
mov
in
xor
jge
mov
push
ret
add
or
lcall
shlb
mov
nopl
xor
scas
jmp
or
jmp
xor
push
xor
xor
xor
xor
cmp
ss
adc
xor
sub
ret
jne
mov
stos
jbe
add
loop
mov
sbb
es
int
push
xchg
ss
cs
mov
cs
xor
movsb
dec
push
push
lock
jne
mov
out
adc
or
bound
outsb
cmp
push
xor
cmp
jns
loopne
push
mov
imul
push
dec
xor
repnz
push
mov
cmp
cmp
add
mulb
mov
test
inc
mov
mov
and
adc
ljmp
sub
scas
aas
mov
xchg
push
call
add
rol
shlb
xor
cmp
dec
lods
add
call
int
out
pop
mov
or
xor
fwait
sbb
push
scas
mov
ret
xor
in
xor
xor
out
pop
and
xor
xor
aam
mov
or
xor
dec
out
sub
or
push
push
test
rcl
cld
push
out
loopne
cli
aaa
push
cmp
mov
test
mov
cmp
jp
jle
cmp
inc
rcrb
cmp
pop
dec
ss
rol
aaa
push
jp
in
clc
add
cli
adc
inc
and
test
or
add
fldl
push
cwtd
ds
mov
jecxz
cmc
add
xor
fidivl
scas
cmpsb
push
ss
mov
adc
jg
les
mov
scas
adc
cs
jl
sbb
aad
push
sub
inc
push
ljmp
xor
jl
push
aas
es
dec
lcall
or
ret
imul
push
xor
sbb
imul
push
xlat
dec
ds
inc
push
and
ss
std
cmc
inc
pop
stos
jns
or
test
push
and
cmp
sbb
push
push
push
inc
push
lea
mov
xchg
mov
out
pop
mov
adc
cmp
inc
inc
pop
adc
inc
xchg
sub
fidivl
ret
xchg
outsb
outsb
sub
cwtl
adc
popf
ds
mov
dec
rcl
cli
mov
es
jo
notb
sub
adc
and
mov
sti
xor
lea
leave
push
pop
inc
xchg
dec
or
orl
testw
cmp
stos
ds
jp
add
leavew
mov
cmp
scas
stos
push
xchg
xchg
ret
call
cmpsb
cmpb
or
test
fnstcw
stc
and
idivl
xor
cltd
js
dec
ljmp
adc
lock
mov
xor
das
mov
cs
push
sti
push
lcall
jmp
loop
ss
outsl
mov
adc
imul
mov
pop
lock
cmp
cmp
shll
je
cmp
test
or
icebp
cmp
jno
mov
push
cmpsl
and
cmp
loop
and
test
add
xor
cmp
add
or
push
out
xor
xor
ret
es
dec
or
push
xchg
cltd
mov
aad
shll
cmp
repnz
lock
ljmp
sbb
jge
ret
mov
loop
lea
mov
push
sbb
adc
jno
test
movsl
data16
scas
sub
movsl
jno
out
fisubrl
push
mov
gs
pusha
je
pushf
fstl
add
out
ds
cmpl
cmp
mov
push
mov
add
cmpl
push
pop
xor
dec
xor
int
jecxz
stc
jle
pusha
rolb
pushf
sub
sbb
fidivrl
imul
jne
jb
stos
fstpl
fldl
push
sbbl
push
pop
aaa
pusha
ljmp
jl
xorb
add
xchg
sbbb
lods
aaa
mov
mov
mov
mov
cmp
sub
sub
push
xor
xlat
ss
push
inc
pusha
xchg
push
pop
sub
out
mov
nop
lcall
mov
pop
mov
sarb
aam
dec
cmp
and
mov
pop
pusha
adc
loop
cmp
sub
test
mov
nop
lcall
mov
or
aas
mov
call
push
push
je
or
and
xchg
loopne
inc
sub
mov
clc
xor
xor
jle
xor
or
sbb
and
sub
xor
xor
jge
push
and
inc
xor
dec
jb
mov
pop
xor
into
shlb
aam
and
mov
sub
decb
or
cmp
mov
mov
adc
test
push
mov
mov
and
ljmp
sbb
xor
xor
push
xchg
push
pushl
loop
out
ljmp
push
lods
outsl
fiadds
xor
xor
adcb
sbb
sub
xor
scas
sub
js
cmp
dec
inc
sub
stos
xor
push
xor
push
bound
xchg
fidivl
adc
out
jle
xchg
rol
adc
jle
loopne
pop
into
mov
mov
shl
jle
mov
ds
xchg
out
sub
sbb
mov
push
dec
test
mov
in
cmp
pop
jg
sbb
xor
imull
fsubl
cld
sbb
aad
mov
je
lods
mov
fsubrl
xor
push
movsb
aam
in
ret
sub
insb
cmp
aad
pop
mov
adc
ljmp
jl
cwtl
rorb
mov
stos
inc
pop
sbb
adc
aam
add
sbb
and
pop
movsb
rorl
aas
in
xchg
sub
xor
cmp
add
mov
jo
jl
mov
push
add
push
pop
mov
xchg
xchg
and
mov
jbe
inc
movsb
mov
aam
or
sub
inc
lea
xor
shlb
inc
xor
cmp
add
jg
hlt
xor
xchg
rorb
mov
mov
inc
xor
sub
inc
add
loop
outsb
sub
pusha
add
jbe
dec
mov
mov
rcll
push
aam
hlt
mov
mov
fimuls
int3
dec
cld
cmp
adc
adcb
push
int3
cmp
push
sbb
ficomps
adc
mov
lds
icebp
fdivrl
sbb
sbb
cmp
ja
lds
jb
ds
sbb
cs
mov
jnp
test
mov
das
or
aas
dec
push
jmp
mov
movsb
test
mov
mov
sub
enter
pop
ja
sub
jp
aas
in
lock
inc
movsl
into
clc
ja
xor
outsb
lock
add
or
fldl
push
adc
sbb
scas
pop
in
pop
into
sub
sub
add
inc
ljmp
push
xchg
pop
mulb
pushf
push
stos
js
inc
push
or
xchg
mov
adc
inc
rcl
test
mov
or
lret
shlb
add
stos
add
fdivs
fdivrl
test
test
push
push
xor
add
test
mov
mov
mov
mov
iret
les
enter
in
inc
shl
clc
xor
push
leave
call
inc
adc
push
xor
sub
xor
mov
xor
lcall
dec
aaa
ljmp
pushf
movsl
jno
xor
dec
loop
xor
mov
xor
xor
pop
call
repnz
iret
out
int3
push
pop
inc
pop
nop
ds
mov
mov
pop
xchg
dec
repz
sbb
int3
incl
or
xor
fs
roll
lods
or
mov
ret
rcl
adc
cli
xor
movsb
inc
test
stos
test
push
sbb
pop
je
call
cmp
jp
xchg
and
lods
lret
hlt
cmp
push
pop
cmc
mov
mov
aad
ss
bnd
imul
adc
adc
push
and
and
xor
lea
cmp
inc
ds
sub
lods
dec
call
pusha
sub
jo
js
xor
push
mov
daa
mov
daa
cwtl
test
rcrb
xor
jl
rol
subl
sbb
cld
loop
dec
pop
scas
movsb
inc
aam
in
xor
mov
push
xor
add
adc
sarl
cmp
sbb
dec
jl
and
loop
insb
jnp
add
fsubl
je
push
mov
movsb
aam
mov
xor
and
ljmp
jmp
popa
test
push
dec
call
jge
sbb
push
pushf
cltd
lcall
mov
push
add
inc
sbb
or
sub
xchg
and
or
inc
rorb
adc
out
stos
inc
sub
sub
pop
repnz
andb
mov
mov
xor
xor
andb
sub
sbb
add
jne
cmpl
cmp
rclb
mov
push
into
jo
pusha
jbe
xchg
sbb
xor
inc
inc
xor
call
je
ds
mov
inc
js
sbb
lea
push
add
adc
mov
pusha
sub
xchg
ljmp
lahf
aas
add
cmp
or
mov
and
pop
out
push
lea
js
subb
or
mov
imul
xor
fmuls
jo
jno
and
adc
subl
lds
clc
dec
add
and
add
inc
mov
dec
mov
cmp
cmpsl
jo
je
adc
push
push
nop
sbb
add
testb
dec
or
sub
jp
imul
mov
orl
int
xor
hlt
adc
daa
mov
add
out
adc
data16
mov
xor
inc
cmpsl
jg
loopne
dec
and
xor
add
cmc
aad
dec
adc
xor
pop
adc
je
js
pushf
xor
repz
lcall
enter
fdivs
fsubl
mov
inc
addr16
popf
call
xor
ds
adc
out
adc
sbb
cmp
xchg
push
push
pop
test
mov
push
sub
js
xorb
add
xchg
cli
xorl
nop
and
xor
rolb
sub
fsubl
or
cmp
arpl
insb
stos
pushf
mov
call
xlat
test
es
test
jle
cli
lcall
clc
ljmp
mov
push
fsub
adc
pusha
adc
aam
scas
mov
repnz
dec
push
mov
push
lcall
lcall
sbb
inc
outsl
clc
cmp
jno
add
fcmove
add
push
fs
mov
fcmovne
mov
sbb
outsb
shlb
xchg
mov
jmp
fs
mov
rorb
add
xor
dec
mov
inc
xor
test
mov
iret
nop
add
cwtl
push
inc
imul
nop
jg
aad
inc
and
rolb
pop
call
jo
adc
sbb
subb
test
cmp
js
adc
movsb
xchg
scas
push
sub
xchg
cmp
add
or
pop
lahf
aam
cmpsb
nop
push
shrb
sub
imul
test
xchg
xor
xchg
into
fdiv
or
int
std
aaa
sub
pop
push
inc
mov
lods
mov
js
pop
fs
mov
inc
popf
mov
sbb
mov
mov
mov
xor
inc
and
xchg
mov
xchg
mov
test
jae
pop
fdivrl
inc
cmp
sub
mov
xchg
test
sbb
mov
sbb
adc
sahf
dec
loope
in
fs
lret
pushf
lock
sbb
mov
xchg
cmp
mov
js
les
test
out
xor
mov
jg
push
and
pop
loopne
push
push
sbb
jecxz
movsl
push
aam
ret
nop
jmp
loopne,pn
jle
addr16
pop
inc
das
dec
xor
fs
mov
xor
and
pop
lcall
outsb
sub
dec
adc
jl
cwtl
inc
faddl
mov
enter
sbb
cmp
sbb
dec
setg
dec
and
adc
mov
add
sub
and
cmp
mov
repnz
aam
ljmp
mov
loopne
test
dec
pop
jne
inc
mov
iret
aam
pusha
insl
pusha
xlat
lock
and
xor
cmp
into
pop
xor
je
pop
inc
roll
mov
fs
aad
xchg
adc
fisubl
push
xchg
cmp
imul
adc
inc
call
pusha
and
sbb
adc
xor
ds
lret
lcall
fsubp
data16
hlt
sbb
sub
and
lods
sbb
xor
cmpsb
or
mov
outsb
xor
push
inc
push
mov
call
or
sbb
xor
mulb
mov
test
fsubrl
inc
mov
gs
repnz
inc
div
shll
pop
scas
out
pushf
ljmp
mov
out
dec
call
out
and
movsl
scas
pop
addr16
test
inc
cmpl
mov
faddl
sbb
pop
add
fidivrl
pop
clc
clc
call
fiadds
aas
pop
lret
aaa
cld
out
or
jl
loope
and
cmp
insb
xchg
inc
adc
test
rolb
jne
out
clc
ss
cmp
push
mov
mov
sbb
call
out
push
and
dec
es
mov
test
push
push
out
mov
cmp
jno
add
sbb
inc
xchg
repz
jl
xchg
mov
cmp
adc
sbb
mov
jl
pushf
bound
mov
mov
xchg
in
adc
ret
push
cmp
xchg
adc
and
rolb
jp
dec
call
lcall
or
sub
push
mov
cld
mov
sbb
sub
push
inc
dec
push
pop
mov
insb
mov
aad
push
mov
ret
mov
jb
push
pop
rolb
ljmp
push
movsb
mov
inc
jl
and
mov
ljmp
stos
push
test
xchg
fisubl
test
mov
cmp
lock
into
inc
dec
pop
pop
lds
pop
mov
mov
mov
repnz
ret
loop
rorb
xor
inc
mov
push
je
jl
inc
xor
mov
test
mov
repnz
hlt
out
add
mov
push
cmp
mov
push
insb
xchg
add
int3
or
in
adc
inc
pop
aam
inc
adc
adc
mov
sbbb
lods
inc
sahf
cld
imul
jo
test
jl
push
lock
sbb
mov
cli
cmp
inc
aam
sub
pop
cli
in
in
xor
pop
or
movsb
mov
rcl
in
sbb
add
push
mov
test
xchg
adc
mov
test
push
fcoml
stos
adc
jbe
push
sbb
je
mov
lods
xchg
cmp
sub
outsb
push
cmp
iret
rcll
push
mov
xchg
mov
dec
cli
mov
add
scas
int3
pop
push
xchg
mov
ds
and
dec
add
jo
lcall
sti
sbb
pop
orb
and
icebp
jecxz
jb
int3
hlt
loop
xlat
inc
je
lock
lret
nop
jle
sarb
rolb
cmpsl
lock
adc
sub
dec
bound
cmpsl
mov
les
aas
add
mov
push
add
cmpl
loopne
mov
orb
mov
cwtl
push
lods
xor
fcompl
pop
insb
cmpsl
pushf
ljmp
les
int3
sahf
fdivrl
dec
cs
movl
add
add
shr
into
cld
push
push
pop
cmpb
jno
test
rcl
clc
adc
dec
loop
sub
push
jo
pusha
mov
fmul
push
test
inc
mov
cmpsb
jno
ss
push
xor
inc
push
dec
add
jl
or
stos
orb
and
inc
cmp
sbb
movsb
cmp
sbb
ljmp
or
bound
mov
push
mov
jmp
bound
or
jmp
shlb
lock
sahf
xor
add
xor
add
inc
loopne
add
pop
or
add
repnz
ljmp
push
out
je
movsb
or
mov
lock
sub
pusha
ret
lock
cmc
add
jo
mov
inc
adc
xchg
fs
xchg
clc
add
and
add
jae
xor
loopne
sub
fwait
xor
lock
xor
mov
or
lods
inc
add
jno
clc
negl
jmp
fisttps
jno
lock
sbb
inc
imul
loope
inc
test
rorb
inc
movsl
cmp
ljmp
mov
pop
clc
test
inc
pop
ret
test
daa
je
psubd
scas
adc
push
xchg
test
sub
push
ss
xor
pop
mov
call
and
jbe
ja
mov
xor
adc
adc
imul
sub
stos
xchg
mov
push
jb
or
lock
jg
jae
call
xchg
cs
addb
jg
jae
adc
je
cwtl
jg
inc
cld
push
out
jmp
cmp
jo
cwtl
adc
push
and
sbb
je
cld
mov
push
jle
jae
pushw
icebp
cmp
pop
adc
push
std
push
inc
cwtl
les
push
sub
adc
mov
dec
pop
js
test
jno
loope
sti
push
and
sbb
adc
adc
inc
sti
lock
cmp
sub
ljmp
dec
push
sbb
aad
dec
and
sbb
ss
dec
mov
es
cmp
fadds
mov
xor
stos
enter
xlat
cmp
jp
std
sbb
rorl
aad
mov
lcall
fdivl
fadds
sbb
sbb
out
adc
fadds
add
lock
xchg
nop
jae
adc
je
cld
xor
pop
mov
outsl
or
cmp
inc
test
pusha
inc
mov
jne
pop
rclb
or
pop
das
or
mov
neg
add
sub
adc
ds
lods
lret
push
add
mov
pusha
or
and
mov
mov
add
cmp
mov
aad
pusha
xchg
clc
push
adc
xor
pop
fiadds
mov
fsubs
loop
mov
cmpsl
hlt
adc
mov
add
mov
stos
les
lcall
pusha
scas
pushf
rorb
dec
adc
mov
pop
or
xor
pop
add
mov
and
orb
dec
fdiv
ljmp
call
or
adc
pusha
or
out
loop
addb
mov
jo
or
mov
andb
popl
jg
add
mov
addb
ja
jmp
cmp
dec
pop
adc
addl
cmp
ljmp
movb
lret
ljmp
push
push
or
or
lods
imul
cmpsl
lahf
xor
jo
mov
xchg
shlb
mov
xchg
mov
lea
push
mov
sub
cmp
xor
lods
inc
jmp
dec
inc
or
icebp
xchg
pop
jno
ds
scas
adc
les
stos
mov
xchg
mov
movsl
mov
xchg
push
cli
imul
out
push
add
cmpl
das
adc
mov
and
xor
or
bswap
xchg
lcall
push
jb
push
sbb
and
pop
rorb
out
loopne,pn
clc
out
xlat
cmpsb
adcl
test
push
test
push
sbb
cmp
lods
mov
test
xorb
mov
out
shl
sbb
and
dec
pop
rorb
repnz
js
das
loopne
into
ret
rorb
stos
stos
add
add
mov
rcrl
and
sub
sbb
ret
pop
imul
jo
lcall
jmp
daa
popa
test
rorb
or
jne
push
rcl
jp
daa
sub
add
pop
ret
cmp
aas
cmpsb
or
sub
bound
loopne
hlt
inc
ss
jle
sub
or
pop
pop
popa
test
xlat
sbb
arpl
fimuls
aam
jo
lods
or
or
cli
pusha
ffreep
pop
sbb
pop
arpl
push
dec
jmp
ljmp
ret
notb
mov
push
cmp
sahf
pusha
sti
js
xor
or
outsb
arpl
mov
add
pop
aas
jle
add
push
insb
add
xorb
xor
rclb
or
push
pop
xor
adc
cli
jl
mov
xor
pushf
cmpsl
pop
pop
rorb
cmpsl
dec
xorl
push
mov
and
add
xchg
mov
jmp
or
mov
add
xchg
jb
push
push
ret
or
add
jle
push
jl
loope
pop
or
notb
push
mov
sahf
cli
out
jp
mov
lret
dec
loop
clc
ret
mov
adc
pop
fwait
aam
add
add
icebp
or
mov
dec
and
dec
sbb
or
aam
pop
adc
out
xor
loop
mov
test
mov
jae
and
or
sub
dec
ret
sbb
push
jge
cmpb
lods
subb
jp
xorl
mov
loopne
lods
sbb
adc
les
pop
push
xor
jb
imul
push
aad
ror
call
call
push
ffreep
aaa
push
dec
addr16
stos
push
jne
imul
stos
scas
push
pop
push
push
stos
add
pop
push
jo
push
push
push
dec
dec
pop
add
ret
cli
adc
scas
adc
fldt
loopne
rcl
cmp
adc
add
or
lret
adcb
add
test
sbb
sub
ret
dec
rcrb
cwtl
nop
sbb
push
add
adc
mov
icebp
add
sbbb
jnp
ss
les
sub
add
inc
dec
add
test
dec
outsl
push
stos
psrad
xlat
jae
adcb
outsl
fcomps
adc
test
pop
mov
push
mov
data16
add
call
or
pop
outsl
repnz
js
pop
scas
repnz
add
out
mov
das
loope
lret
or
aaa
mov
ficomps
pusha
mov
push
dec
push
in
dec
je
or
loopne
into
daa
mov
push
jbe
and
fcmovbe
pop
icebp
inc
cmpsl
lahf
add
addr16
fidivs
es
mov
cmp
imul
data16
or
pop
ja
sub
mov
ret
or
jbe
pop
rclb
lcall
fninit
popa
and
and
sbb
or
adc
xor
sbb
or
pop
mov
sahf
stos
jle
nop
cmp
imul
dec
pop
push
xchg
mov
js
inc
aas
jb
dec
ret
andl
das
loopne
cmp
scas
pop
xor
inc
fisttps
sbb
out
inc
ret
push
cwtl
jmp
les
loopne
sub
inc
ds
popa
pop
sbb
sub
jbe
cmp
rcll
push
push
and
test
xchg
out
sbb
inc
bound
pop
test
xchg
adc
sub
scas
jo
pop
loop
into
ret
sbb
push
and
mov
mov
pop
and
adc
dec
mov
lahf
js
mov
out
out
sub
clc
js
div
iret
adcb
test
adc
js
fwait
dec
scas
adc
setnp
push
aas
mov
dec
cmp
push
xchg
pop
jo
add
add
and
xor
js
scas
mov
xchg
mov
xchg
mov
dec
mov
push
lods
add
xlat
loop
cmp
mov
jmp
pop
loop
ret
je
inc
mov
cmpsl
lock
mov
pop
scas
lods
adc
adcb
outsl
loop
cmp
dec
xor
rolb
push
pop
dec
xor
cmp
mov
push
adc
aaa
stos
movsb
fwait
mov
mov
jecxz
pop
jg
repz
mov
xor
dec
pop
adc
push
dec
imul
pop
inc
xchg
aaa
lods
es
mov
sub
xor
add
or
stos
orb
fucomip
movb
jmp
sahf
sub
mov
pop
sti
movsb
xchg
push
xor
and
pop
inc
mov
jle
lahf
xor
popa
sbb
lea
inc
xorl
sbb
test
insb
mov
sbb
fcom
push
pushf
push
shlb
mov
mov
sbb
lock
rolb
cmp
sti
and
xor
call
mov
inc
xlat
mov
mov
xorb
clc
adc
xor
mov
int
inc
mov
loopne
adc
dec
jle
rolb
jo
or
dec
lcall
mov
call
inc
add
push
stos
adc
sahf
sbb
pop
push
sarb
bound
dec
pop
jmp
stos
inc
adc
icebp
inc
pop
adc
test
mov
add
adc
push
mov
inc
or
popf
test
cli
push
adc
inc
add
and
cmp
call
rclb
xchg
mov
or
xor
bound
sub
cs
jmp
ss
add
mov
cmpsb
pop
gs
dec
scas
push
mov
mov
push
ret
test
test
out
mov
sbb
loop
out
ljmp
mov
sti
sarl
sbb
sub
mov
or
loop
and
xchg
pop
pop
adc
sub
mov
movups
mov
xchg
sub
mov
pop
push
inc
es
loopne
inc
pushl
mov
aad
enter
or
cwtl
dec
sbb
mov
mov
leave
test
ret
insb
mov
add
test
data16
call
movsl
dec
push
jg
imul
repz
imul
out
push
loope
insl
jno
fldcw
insl
outsb
fwait
jo
jae
into
adc
cmp
jp
jae
iret
subb
mov
rolb
pushl
fwait
in
sarl
sahf
mov
fldcw
xor
cmpl
push
dec
enter
jecxz
out
stc
std
cld
or
or
inc
mov
add
add
xor
or
xor
xor
mov
push
xor
xor
sub
shll
inc
shrb
cmpsb
movsl
test
pop
or
jo
incl
add
mov
push
cwtl
pop
push
pop
inc
sub
push
out
mov
stc
cmp
rcr
in
add
popa
xchg
cmp
movb
fcomps
pop
add
lods
jge
adc
fs
and
insl
jno
fisttps
je
inc
js
ror
and
bound
ss
jns
or
pop
pop
cs
push
push
jp
adcl
fs
inc
jo
mov
mov
xorl
adc
fwait
adc
pop
inc
and
push
mov
lods
and
sub
add
setno
add
and
push
push
dec
dec
dec
jo
or
dec
or
inc
and
cwtl
sbb
loope
orl
xor
inc
addl
inc
insb
mov
jno
push
sub
jnp
popf
pusha
call
inc
and
sbb
add
xor
inc
dec
dec
inc
dec
sub
gs
mov
inc
cmp
xor
cmp
mov
and
das
xor
and
dec
push
nop
and
add
and
mov
aas
xchg
add
mov
mov
ret
call
mov
mov
jbe
inc
pop
into
imul
xor
fidivl
sti
pusha
dec
dec
gs
subl
je
mov
test
mov
fimuls
imul
cmp
fs
je
push
mov
repnz
mov
ja
ja
loopne
ja
or
leave
insb
mov
ret
xchg
push
outsl
adc
mov
or
inc
orl
mov
add
shll
add
out
mov
jl
arpl
add
movsb
mov
test
sub
imul
fwait
sub
lods
loopne
cltd
push
das
daa
xchg
mov
jl
roll
add
ss
int
sbb
xchg
sbb
sbb
fld1
and
shlb
push
or
mov
fdivrl
lock
xor
add
mov
adc
xor
inc
dec
dec
dec
dec
dec
dec
dec
dec
adc
push
ficomps
pop
sub
add
jnp
ds
cmp
sbb
inc
das
add
or
ss
dec
dec
jmp
or
and
sub
xchg
xor
adcb
inc
or
aam
std
inc
dec
movb
cs
or
or
xchg
adc
inc
xor
inc
mov
jae
shr
out
sti
push
mov
pusha
addr16
data16
push
inc
lcall
mov
int
push
icebp
push
lcall
mov
jb
jno
jns
outsb
enter
adc
data16
into
xchg
jae
inc
push
push
inc
dec
insb
ss
int
pop
in
xchg
data16
lcall
push
or
and
data16
or
push
xor
sub
add
or
pop
rcrb
add
pop
daa
pop
test
or
pusha
jmp
adc
popa
out
ljmp
jnp
mov
inc
inc
adc
and
add
or
aam
das
adc
sbb
popa
jecxz
out
or
scas
and
cmp
sbb
sub
cmp
mov
scas
xorb
add
or
repz
loop
pusha
sar
lods
cmpsb
mov
mov
mov
nopl
test
pushl
sbb
rcl
or
sbb
jp
cmp
mov
xor
out
and
and
push
and
cs
or
mov
std
cmp
mov
push
sbb
adc
idivb
loope
out
pushf
mov
pushl
and
and
or
in
out
hlt
mov
mov
pushl
in
adc
jb
mov
mov
xor
or
adc
add
xlat
fcomp
jbe
addb
sub
ljmp
cld
cli
sub
jecxz
in
adc
push
sub
cmp
loopne
add
sti
incl
dec
into
aad
fldt
pop
and
mov
xor
test
shrl
sub
adc
jae
xor
adc
cmpsl
stos
mov
dec
dec
push
sbb
sbb
outsl
ljmp
fsub
and
loop
jmp
mov
pop
jl
rcl
fcmovu
or
cmp
ds
pop
testb
stc
xchg
xchg
cltd
sbb
es
sbb
arpl
adc
loopnew
mov
mov
mov
repnz
cli
insl
jo
xchg
xchg
xchg
scas
mov
jp
xchg
and
or
sub
fldt
sub
push
pop
inc
rcl
decl
fmuls
or
stc
cli
std
scas
xor
jecxz
or
push
and
adc
ret
mov
sub
fildl
adc
and
inc
push
je
push
sbb
fsubp
cmp
inc
hlt
and
push
adc
jp
add
or
repz
ss
sub
push
cs
scas
cli
sbb
sub
dec
sbb
sub
dec
notb
movsb
movsl
sbb
sbb
std
xchg
outsl
inc
sbb
push
or
adc
ds
push
aam
adc
mov
dec
loop
jmp
and
push
mov
jg
pop
or
jbe
mov
xor
inc
cwtl
fwait
mov
adc
das
lods
and
in
in
sub
cmp
xor
cmp
inc
aaa
cmp
or
iret
aam
sub
sbb
sbb
xor
adc
into
mov
jle
fistpl
push
adc
in
cwtl
mov
push
push
cmp
int
pop
fstl
incb
sbb
popf
hlt
jge
mov
or
push
stc
add
or
sub
ljmp
daa
add
sbb
mov
in
test
mov
add
sub
pushf
lcall
mov
xor
inc
mov
mov
stc
loope
or
jmp
mov
xchg
or
mov
sub
push
test
pop
push
stos
or
jecxz
xchg
cmp
in
add
test
jg
dec
jecxz
mov
xor
mov
pop
cmp
lock
push
adc
cmp
mov
or
pushl
insb
imulb
fsubrl
pop
and
jb
push
sbbb
pushl
cld
inc
in
xchg
lret
xchg
xor
fmul
and
mov
adc
popa
mov
call
gs
out
pop
lcall
mov
push
jmp
int
aaa
out
fnstsw
jg
pop
dec
mov
and
insl
in
daa
lcall
les
and
inc
pushf
cmp
fmull
stc
xchg
mov
dec
movsl
sbbl
jne
dec
ljmp
inc
cltd
dec
pop
into
mov
cmpl
cli
jge
test
fidivrs
pushf
jno
decl
or
jno
sub
adc
adc
xchg
xchg
inc
add
push
jmp
js
adc
sbb
sub
or
add
dec
movsb
mov
mov
mov
add
popf
test
jg
popf
and
push
and
cmp
push
inc
mov
inc
sbb
aam
and
or
dec
or
pushl
call
sub
pushf
je
jmp
xor
add
jle
push
xor
sub
decl
into
mov
sbb
pop
andb
ftst
pop
push
cmp
xchg
fiadds
out
clc
call
cmp
test
js
movsl
scas
lcall
push
mov
push
jp
ficomps
lret
scas
mov
mov
in
lret
sahf
mov
adc
into
aas
aam
mov
and
mov
test
sahf
mov
xor
add
jecxz
mov
adc
inc
or
mov
insl
mov
mov
xor
inc
sbb
lock
mov
clc
sbb
jmp
jo
outsb
or
pop
push
mov
call
and
mov
pop
fcompl
or
mov
and
addb
mov
outsb
lcall
jecxz
adc
ja
mov
rdmsr
enter
jbe
aad
sahf
push
inc
inc
xor
clc
jmp
or
mov
add
xor
rolb
jg
inc
push
jns
jae
add
or
fildl
xor
pop
rorb
stos
pushl
insl
mulb
sub
or
sub
fcmovnbe
in
fstpl
dec
ljmp
inc
fmull
and
into
mov
push
out
mov
push
mov
mov
push
sahf
pop
xor
nop
fwait
cmp
lcall
sub
pushl
mov
jns
scas
cmp
loop
cmp
ret
mov
or
xchg
out
sti
ljmp
jmp
xor
test
lock
aaa
and
fimuls
das
sub
cmp
insl
mov
jb
incl
dec
adc
add
aas
and
or
call
mov
ljmp
pushl
mov
ljmp
adc
test
inc
in
jb
xchg
add
xor
mov
andb
cs
push
mov
sub
repnz
or
in
inc
jno
push
jp
jg
pop
push
inc
pshufw
loop
movb
lock
cld
incl
rcll
pop
or
dec
pusha
sbb
add
xor
ljmp
ljmp
test
insb
dec
lods
push
cmpsb
cwtl
mov
mov
incl
xor
add
rolb
mov
icebp
test
call
pop
pusha
jmp
dec
jp
cmp
outsb
cltd
jae
jo
push
sbb
adc
aas
push
repnz
fildl
mov
hlt
dec
jae
mov
lds
mov
or
lret
pop
dec
push
adcl
push
lcall
adcb
xchg
mov
and
xor
iret
sbb
inc
lret
popa
or
add
inc
inc
pop
loopne
sarl
ljmp
adcl
ja
es
imul
or
imulb
mov
insl
enter
pop
adc
sbbb
cs
mov
push
gs
ljmp
lds
sbb
inc
jle
ljmp
ja
sbb
inc
scas
out
mov
call
mov
cltd
push
inc
xlat
ss
cmp
mov
hlt
adcb
adc
lret
jg
push
in
insb
cmp
fidivrl
sbb
loope
inc
fdiv
aaa
mov
arpl
loope
pop
std
aas
xchg
and
push
rcrl
sbb
dec
incb
mov
xchg
push
movsb
cmp
adc
dec
cli
shl
cmp
popa
dec
movsb
int
jecxz
xchg
mov
mov
sbb
mov
add
adc
dec
stos
pop
popa
pop
shl
jns
jge
test
in
inc
leave
fsubr
hlt
sub
decl
js
cmp
mov
cwtl
inc
add
popa
add
sbb
jg
jmp
pop
sbb
xor
and
xchg
je
movsb
jb
xor
sub
adc
cmp
in
cmp
adc
mov
or
push
dec
stos
xchg
adc
subl
ss
in
leave
addr16
push
cltd
xor
arpl
and
ja
and
pop
imul
aam
dec
mov
insb
cltd
mov
dec
enter
sbbl
in
decl
xor
pop
loopne
pop
mov
sbbl
loope
push
or
dec
cmp
dec
inc
xchg
mov
daa
movl
and
fldt
lods
pop
pop
cld
push
test
jbe
iret
lods
xor
cltd
fisttpll
roll
jl
or
fcmovu
ljmp
push
push
aam
add
mov
mov
insb
aaa
shll
xor
ds
pop
dec
xor
out
cli
jmp
sbb
out
mov
xor
adc
cmc
jnp
mov
js
sbb
in
clc
sarl
ror
das
push
loopne
sbb
sar
adc
aam
mov
cmp
fmull
lock
and
call
xor
outsl
push
mov
out
sub
loope
jns
ja
dec
outsl
in
or
scas
or
mov
loop
cli
je
xchg
int
gs
enter
sar
adc
push
idiv
mov
jno
cmpsl
imul
lods
mov
add
shlb
sbb
mov
insb
push
lods
jmp
xchg
pop
sbb
xor
dec
xor
mov
mov
int
push
and
insl
icebp
mov
in
cmovb
rcrb
js
lcall
enter
inc
sarl
loope
pusha
lock
sbb
ljmp
movb
and
xchg
roll
daa
dec
bound
xlat
mov
pushf
ljmp
jbe
in
call
xchg
imulb
cwtl
xor
movsl
mov
lcall
mov
in
mov
test
push
dec
mov
das
add
xchg
daa
fs
call
dec
imul
jo
jge
gs
or
pop
lcall
lods
mov
roll
xchg
lahf
adc
jl
add
ret
xor
pop
sbb
and
loopne
jae
decl
insb
pusha
arpl
clc
jo
add
xchg
adc
enter
rolb
les
lret
dec
mov
mov
xchg
jg
out
ja
sti
fstps
js
das
push
mov
add
out
pop
mov
aas
outsl
mov
jp
js
adc
xchg
aas
jno
inc
mov
les
fcomip
cmp
inc
jg
nop
lock
shr
aas
jp
inc
push
insl
jl
call
dec
xor
or
dec
sbb
fisubl
andb
rcll
inc
inc
sbb
add
xchg
mov
rclb
lcall
jmp
mov
push
arpl
pop
push
jp
adc
inc
decl
out
icebp
mov
lcall
scas
movsb
and
push
mov
mov
ret
mov
std
sub
das
jnp
iret
test
fcomip
pushf
incb
cs
ja
push
ret
addl
aaa
jg
out
gs
sbb
cmp
jb
arpl
jne
sbb
sbb
setne
jp
xchg
jg
call
aad
jno
daa
push
sbbb
std
incl
int
push
aas
push
cmpl
xor
lahf
loopne
lahf
and
int
add
push
jo
idivl
add
add
rorb
lock
mov
push
jmp
or
sti
call
or
inc
jbe
add
sub
dec
mov
dec
movsb
rolb
xor
enter
jge
call
lcall
test
xor
sti
daa
jg
xchg
sbbb
pop
inc
loopne
mov
xchg
orb
mov
cmp
xchg
sbb
add
in
mov
les
sbb
sub
or
push
push
incl
cmp
mov
mov
aam
test
push
and
adcb
mov
idiv
lcall
aas
js
int
or
rorb
xor
add
call
adc
jl
add
shrb
add
jo
scas
add
decl
psubw
xchg
mov
test
mov
pop
mov
push
out
mov
adc
lahf
mov
aas
pusha
cmp
jb
xchg
pop
decl
or
pop
nop
pushf
inc
nop
xchg
jg
in
sub
mov
or
lcall
xchg
fwait
pop
xchg
lods
push
sbb
adc
xchg
sbb
push
mov
or
scas
clc
in
lcall
jmp
adc
test
stc
or
lahf
add
sub
mov
fisubrl
or
ljmp
je
rorb
leave
notl
roll
scas
xor
mov
add
sbb
idiv
addb
pop
stc
push
add
jl
ss
ljmp
dec
incl
cmp
cltd
xchg
inc
jno
and
xor
xchg
bound
mov
incl
mov
test
je
push
cmp
addb
ljmp
jo
lahf
pusha
cwtl
pop
jns
sub
xchg
nop
orl
pop
test
mov
mov
jo
nop
pop
sbb
dec
xchg
test
cmpsb
or
outsb
push
cwtl
cli
sbbb
mov
mov
mov
cltd
lea
test
sub
cwtl
daa
mov
jg
sub
xchg
cltd
lcall
jecxz
mov
pushf
int3
sbb
pop
call
mov
mov
mov
jo
lret
mov
xor
xchg
xor
mov
or
push
xlat
lock
stc
jo
mov
xchg
jge
xchg
or
mov
xchg
and
idiv
mov
xor
cld
mov
repnz
pop
xchg
repnz
xorl
inc
cs
aas
clc
mov
or
jb
stos
int3
call
mov
test
add
mov
stos
add
mov
push
mov
call
cld
jmp
mov
sub
cltd
sub
mov
mov
mov
sub
or
sub
fstpt
xchg
jno
rcrb
mov
fldl
push
pop
xchg
loop
xchg
fwait
lahf
rorb
mov
xor
mov
mov
addb
loopne
cld
push
xchg
imul
cltd
cmpsl
xchg
mov
xor
cmpsl
das
sbb
pop
test
sub
stc
cwtl
sub
stc
xchg
xchg
test
xchg
or
xchg
jns
mov
incl
pop
fwait
mov
lcall
stos
test
cltd
stos
sub
mov
and
jp
inc
stos
dec
mov
cld
mov
mov
and
insb
rorb
cli
adc
sub
mov
push
mov
lods
mov
mov
lods
sub
movsb
jg
ljmp
mov
mov
xor
lods
outsb
mov
lcall
shr
or
add
and
int3
stc
add
add
jo
sub
fidivrl
cld
ljmp
jle
jbe
mov
and
push
pusha
outsb
pushl
mov
push
add
mov
pop
xor
stos
movsb
sub
lods
mov
fldenv
push
pop
cltd
dec
lret
movsb
and
ljmp
clc
mov
mov
sti
mov
sti
mov
mov
and
mov
mov
cmp
test
lret
mov
or
push
lods
mov
incl
scas
add
mov
sub
outsl
mov
cmp
pusha
mov
inc
int3
stos
lods
imul
rcr
mov
pop
fwait
mov
jmp
jo
mov
sbb
or
ljmp
movl
cmpsb
cmpb
inc
inc
cmp
jl
lret
or
jae
pop
lods
mov
jno
add
fldt
data16
add
mov
lret
rolb
leave
pop
inc
jb
scas
out
mov
mov
mov
adc
mov
mov
mov
mov
cmp
mov
lret
les
mov
sub
ret
mov
mov
jns
sub
inc
stos
scas
sbb
loopne
jnp
and
add
in
mov
jnp
inc
insb
ret
lret
mov
pusha
add
or
fs
pop
mov
push
sbb
stc
stos
cli
fcomip
pop
into
negl
rolb
rclb
sbb
insb
jo
mov
mov
cmp
pop
adc
mov
or
cld
pop
lock
pop
sbb
push
pop
mov
mov
in
and
add
mov
cld
scas
cli
push
mov
mov
and
add
jno
and
into
lods
mov
popf
add
data16
add
loopne
or
xchg
nop
add
subb
inc
dec
mov
sar
jmp
js
pop
push
in
pop
sbb
add
add
mov
adc
jp
call
adc
nop
xchg
outsb
mov
lcall
stos
js
mov
mov
dec
sub
jnp
cmpb
mov
int3
mov
mov
jecxz
xor
or
push
push
mov
sti
setl
lret
fwait
stos
mov
xchg
lods
leave
insl
stos
hlt
mov
sbb
cld
shrl
sub
fs
mov
mov
inc
mov
lret
mov
lret
fisttps
rcrl
rcrl
shrl
cmc
jnp
out
or
push
and
push
dec
ror
push
or
mov
stos
es
or
int3
and
inc
cmp
js
add
ja
or
sub
pusha
pop
hlt
decl
in
pop
hlt
addb
stos
pusha
nop
sahf
mov
movb
outsb
shl
pop
test
lcall
clc
mov
stos
leave
std
sti
iret
sbb
mov
pop
shlb
lret
mov
fst
mov
sub
add
iret
bswap
or
iret
jl
mov
lret
mov
or
add
popa
sti
jmp
shll
mov
sub
jge,pn
push
adc
xor
dec
sub
shll
in
add
pop
mov
mov
lea
ss
aam
sub
xor
rorb
mov
cmpsb
hlt
pop
sub
add
push
and
sbb
pushf
data16
pop
push
cld
add
sub
or
nop
or
xor
mov
add
ds
mov
adc
stc
mov
adcl
scas
clc
mov
xchg
je
rolb
out
add
sbb
or
int3
lret
dec
push
ret
pop
and
insl
into
cmp
xor
lea
jge
stos
sub
mov
shll
mov
shrl
sar
orb
mov
xchg
test
inc
fisttpll
sahf
pop
inc
mov
fdivrs
mov
jo
addr16
lods
fisttpl
fstpt
shll
rol
or
incb
cmp
nop
aad
pop
aam
add
fst
popf
or
int
ret
cmp
pop
icebp
in
fnstsw
fdivrl
repz
int
or
or
test
std
xor
lret
pop
mov
incl
push
mov
or
lock
adc
add
sub
push
adc
outsl
dec
setno
and
outsb
ss
xchg
push
sbb
xchg
in
jo
pop
lock
pop
or
xchg
dec
into
or
in
fcoml
sub
and
or
int
inc
cmp
sub
lret
pusha
jnp
pushl
fisubrl
push
sarb
mov
inc
pop
in
add
jle
idiv
mov
outsb
in
mov
aaa
lods
rcr
lods
fcoml
pop
hlt
push
dec
fistps
in
frstpm(287
hlt
push
cmc
or
dec
dec
in
ds
cs
jle
test
add
add
push
jmp
pop
mov
ret
fistpl
sbb
outsb
shl
pusha
or
mov
cmp
jns
push
decl
insb
add
fisttps
psubq
or
out
dec
shlb
or
in
outsb
mov
fisubs
out
shll
fstpt
enter
js
pushf
pushl
loop
pop
lret
mov
jmp
lret
loop
ds
push
aam
jecxz,pt
jle
arpl
inc
pop
aam
jmp
mov
sahf
in
loope
in
inc
ds
mov
cs
or
aad
pushl
insb
adc
fcomp
in
fdivrl
ds
push
dec
out
aas
cs
into
in
test
es
out
sbb
and
out
and
mov
mov
adc
in
jnp
add
loopne
adc
aad
pop
or
mov
cmpsb
and
or
mov
push
lds
dec
test
shl
cmc
lcall
sub
mov
and
and
repnz
push
rcl
std
fsubrl
xchg
movsl
fbstp
sub
fnsave
jle
stos
dec
in
lcall
divb
push
lcall
lahf
rep
mov
sysret
ror
fcompl
sbbb
loop
cmp
inc
lahf
hlt
dec
iret
jmp
dec
int3
lods
out
imul
call
in
push
scas
out
push
jg
push
dec
cmc
int3
pop
or
lock
call
cld
mov
fucomip
in
cli
ret
cmc
pop
mov
pop
dec
add
fisttps
shr
mov
in
push
outsb
jo
in
std
scas
out
inc
aam
out
incl
pop
shl
sahf
sub
stc
or
icebp
adc
sarl
in
ljmp
lock
xchg
pop
es
stc
jl
out
stc
into
mov
xor
cltd
aas
cli
outsl
pushl
cli
cmpsb
psubd
mov
fs
cli
mov
cli
mov
xchg
pop
sti
mov
ljmp
xchg
jg
mov
sti
mov
es
loopne
gs
mov
sti
pop
in
outsl
cld
mov
out
cld
lcall
cld
les
outsl
cld
stos
pxor
lahf
std
outsl
call
dec
cli
sar
cld
jnp
std
scas
das
cld
fsubrp
std
cmp
out
stc
lret
mov
or
outsl
outsl
in
mov
in
pop
push
pop
cli
les
cli
loopne
jecxz
jmp
movups
push
pushf
inc
mov
or
xchg
pop
adc
cli
lcall
loop
jae
sbb
mov
jno
cmpsb
es
jb
decl
cmpsb
mov
shl
movsl
xchg
sub
inc
mov
lods
dec
and
icebp
ret
dec
das
test
pushl
into
fadd
int3
sub
fst
aam
push
test
push
cwtl
shlb
adcl
jg
sub
and
mov
sub
in
xchg
mov
lret
mov
aam
ljmp
mov
es
insl
pop
dec
imul
fsts
popf
movsl
sti
xchg
xchg
loope
push
sbb
or
fnstenv
pop
int3
adc
sub
mov
loop
pop
sub
inc
aad
nop
loopne
shlb
cli
ljmp
mov
cs
sbb
jbe
xchg
jg
xor
cmpb
dec
push
xchg
pop
jge
pop
loopne,pn
lahf
clc
cmp
jmp
jb
cld
clc
ljmp
in
sti
notl
inc
cmpsl
pop
push
std
or
ljmp
call
sahf
jge
clc
aam
jo
jmp
decb
lock
cli
inc
sbb
repnz
cmp
mov
aam
inc
jmp
mov
das
clc
push
push
mov
or
dec
xchg
push
inc
add
lods
dec
mov
cmp
jo
shl
decl
bnd
outsl
jo
sbb
sbb
icebp
stos
mov
push
mov
lahf
lret
dec
lcall
inc
and
repz
push
aas
sbb
sub
xchg
or
jl
sarl
das
dec
popa
mov
int3
jmp
mov
loope
jg
xchg
adc
data16
ljmp
jle
xchg
cmp
int3
repz
inc
add
jae
dec
divb
lcall
pop
sbb
mov
push
cmp
dec
lret
clc
push
pop
and
mov
dec
and
dec
push
ljmp
fwait
xchg
call
cmp
rolb
add
insl
xchg
mov
fstpt
push
or
shll
xor
pop
addb
inc
shll
jne
push
pop
inc
or
stc
inc
pop
pop
insb
cltd
xor
push
pop
pop
adc
jmp
adc
aad
pop
push
rcll
shll
cmc
addr16
outsl
jg
xlat
aam
ljmp
dec
jne
xor
dec
loope
xchg
push
inc
std
mov
pop
orb
xchg
and
popa
popa
imul
mov
movsl
or
sarb
add
cmp
jns
sbb
es
mov
scas
js
jmp
push
pop
bound
xor
cmp
push
jo
fcomps
pushl
and
push
mov
lcall
ljmp
stos
decl
lea
out
push
sahf
pop
gs
pop
xchg
cltd
pop
outsb
mov
movsb
pop
jg
mov
mov
or
sahf
outsb
scas
cmc
idiv
loop
jg
push
les
or
sbb
in
aad
fwait
loop
xchg
jg
sub
outsb
xor
mov
cld
in
pushl
std
out
insb
into
inc
aaa
std
jae
push
mov
sbb
mov
jbe
addr16
ja
sbb
out
shrl
pop
out
cmpsb
sbb
jp
mov
clc
hlt
push
inc
mov
js
jne
pop
mov
idivb
pushl
add
fiaddl
mov
jge
mov
imul
mov
popf
repz
cld
aas
jge
push
outsl
fadds
fidivl
jno
pop
cmc
jb
cmc
adc
pushl
sahf
sti
lahf
leave
xorb
pop
clc
or
push
dec
fs
cwtl
mov
mov
and
mov
inc
stc
mov
push
adc
pop
decl
bound
jbe
andl
sub
mov
jns
jge
jmp
add
inc
adc
jnp
ret
std
gs
jge
dec
sbb
sub
adc
aas
mov
and
iret
cmpl
jg
adc
ds
dec
js
pushf
mov
and
jge
stos
lahf
daa
int3
fdivr
incl
dec
dec
inc
sbb
ret
imul
adc
xchg
mov
cmp
inc
mov
repz
xchg
call
push
ja
mov
push
idiv
cmp
mov
popa
adc
and
mov
or
lock
add
arpl
repz
or
sbb
add
insl
js
and
and
xchg
push
xchg
xor
jmp
dec
data16
mov
cwtl
add
mov
inc
dec
xchg
lods
movsb
arpl
mov
dec
fdivs
xor
in
mov
outsb
stc
xor
cmpsb
adc
or
cmp
jno
ficoml
leave
pusha
incl
call
leave
mov
iret
fwait
and
shlb
inc
jge
je
pop
fildl
and
mov
incl
mov
sbb
adc
mov
out
jb
or
xchg
ret
aad
roll
incl
sbb
popa
mov
insb
cwtl
negb
mov
fcompl
adc
orb
decl
enter
lock
arpl
push
lret
and
and
pop
in
decl
push
jb
fldenv
roll
adc
fsubrs
and
or
insb
push
push
inc
or
decl
popa
push
xchg
mov
test
pop
push
sahf
and
test
dec
test
ds
jmp
stos
dec
pop
mov
cli
test
cmpsl
cmp
cmp
xchg
ds
iret
jl
mov
xor
mov
sub
loop
sar
adc
mov
push
cwtl
adc
inc
repz
mov
sbb
xchg
icebp
incl
pushl
xor
sub
pop
add
mov
sbb
ljmp
xchg
subl
fdivrs
out
call
ret
nop
mov
in
outsl
jge
pop
loopne
push
mov
cmp
mov
imul
outsb
jne
jnp
in
push
mov
aas
cmpsb
jbe
dec
je
mov
int
pop
hlt
cmpsb
push
mov
and
mov
mov
xchg
in
jnp
cld
out
std
cs
pop
std
push
pop
rolb
jo
or
incl
or
insl
out
sbbl
test
cld
leave
xchg
ret
jo
cmp
add
loope
clc
ret
dec
jl
adc
fbld
ret
push
adc
pop
xor
pop
loop
cmp
jmp
jno
fucomi
fstl
xchg
fadd
inc
es
lea
dec
jmp
mov
popf
cld
fs
fdivr
inc
cmp
add
cwtl
leave
pop
out
xchg
mov
stc
mov
int
pop
sub
clc
int3
imul
inc
sub
lods
push
ljmp
cmp
cmp
sbb
xor
incl
cli
lret
mov
xor
inc
daa
lcall
test
dec
inc
pop
movb
decl
ret
mov
in
gs
cmp
jno
hlt
cmp
sbb
lcall
inc
jp
xchg
sahf
xor
loope
pop
out
xlat
fsubs
mov
push
out
fwait
mov
test
divl
or
std
in
mov
sbb
lods
jge
ret
mov
xor
adc
push
xchg
fcmovbe
into
sbb
sub
jmp
dec
mov
repz
mov
shll
fdivr
insl
ret
pop
bound
pop
sar
out
movsl
sarl
int
orb
loope
jle
rcll
mov
add
mov
pop
sar
divb
adc
xchg
int3
mov
mov
inc
jb,pn
xchg
mov
lret
mov
cs
lret
insl
push
jae
negb
add
mov
in
pop
mov
xchg
push
lock
pop
pop
lcall
jmp
je
repz
dec
aas
cmp
lods
jle
add
pop
ficoms
mov
stc
jmp
jg
pop
popf
pop
daa
sti
xchg
repnz
addr16
in
and
jnp
fcomip
fisttpll
pushf
cmc
es
push
mov
fucomip
sti
cmc
mov
mov
jnp
add
aaa
and
std
jle
jecxz
lret
icebp
popf
cmpsl
frstor
jg
loopne
push
popf
fs
sbbb
jo
in
pop
pop
enter
mov
jl
sar
mov
int3
daa
mov
sbb
out
fsubrs
scas
jns
inc
and
cmp
mov
daa
mov
jle
clc
lret
xchg
fcomip
in
sbb
jbe
cli
mov
jg
fistps
clc
in
ret
jle
xchg
jge
jmp
incl
mov
jg
mov
addr16
lret
fistpll
jae
std
pop
jg
jg
std
in
sti
enter
cmc
lahf
jmp
testl
mov
or
add
loopne
push
add
push
repz
aas
lds
or
mov
or
push
add
mov
xor
mov
shl
shr
ds
mov
call
sub
adc
inc
sarl
pop
arpl
hlt
mov
fildl
fadd
fdivrl
and
push
and
and
dec
ret
rcr
inc
lret
pop
inc
out
jg
add
mov
rol
sub
add
pop
in
inc
ret
jmp
mov
inc
sti
inc
xor
aam
xor
inc
and
mov
mov
cmp
aaa
lods
inc
xlat
inc
cmp
cmp
ret
xor
or
cs
mov
inc
cmp
mov
and
inc
insb
inc
mov
cld
mov
inc
lods
inc
ds
dec
jl
fadd
mov
movsl
dec
les
adc
xor
mov
mov
inc
xchg
jg
inc
mov
or
push
or
xor
and
pop
mov
pusha
sahf
pop
fadd
aam
popa
push
ljmp
test
fs
mov
mov
pushfw
inc
push
fcompl
pop
mov
mov
inc
arpl
inc
ljmp
mov
sbb
outsl
xchg
inc
or
popa
hlt
inc
jne
inc
je
ret
inc
jbe
inc
xchg
arpl
mov
mov
jge
mov
in
movl
test
dec
xorl
dec
jge
incl
jg
enter
mov
jo
lds
enter
push
in
ja
mov
push
and
addl
leave
subb
lcall
aam
push
hlt
ss
pushf
dec
sbb
cmp
arpl
leave
jp
leave
sub
ljmp
dec
pop
cmp
inc
lret
inc
fs
ret
movsl
test
dec
mov
ljmp
dec
push
stos
sub
mov
push
aam
pop
xor
fldt
pushl
lret
mov
lret
lret
lock
fsubrl
mov
lret
lods
mov
mov
mov
ja
inc
mov
mov
movsb
mov
test
jmp
dec
cmp
stos
in
dec
dec
enter
or
mov
cld
dec
dec
fmul
stos
fs
movl
repz
shr
dec
xor
test
dec
int
adc
test
je
fstpt
jp
inc
dec
pop
xor
add
sub
stos
pop
pop
inc
int
int3
mov
mov
mov
std
pop
int
cmp
aaa
es
mov
mov
jl
decl
cltd
dec
dec
sub
test
in
xor
in
int
nop
test
sub
icebp
hlt
mov
lret
sub
cwtl
into
cmc
cmp
rcrl
push
divb
mov
lock
cld
incl
cli
dec
cld
or
das
repz
hlt
iret
in
inc
push
std
xchg
mov
jg
pushl
or
cmc
movsb
int3
cli
iret
iret
movsb
push
cmp
scas
in
mov
ret
dec
stc
adc
xor
sub
fisttpll
lds
pop
shll
dec
mov
sbb
add
push
mov
push
push
jge
push
adc
lret
mov
in
lcall
shlb
inc
shlb
jne
and
sub
sbb
adc
mov
sub
push
daa
xor
and
inc
mov
xor
into
jl
pushl
std
push
cs
xor
aad
add
push
jge
and
rcll
xor
sarl
xor
rcrl
ljmp
adc
es
inc
in
aas
dec
adc
inc
push
rorl
push
ljmp
lods
dec
mov
popf
les
les
push
dec
rcrl
enter
stos
ljmp
add
scas
lods
lcall
lods
lcall
aad
jp
mov
aad
mov
sti
jmp
stc
or
pusha
dec
push
arpl
sub
push
mov
mov
jg
push
imul
sahf
popa
sbb
push
jge
std
and
inc
ljmp
push
mov
push
cmc
add
mov
inc
inc
cltd
fistps
jg
je
std
mov
adc
ds
setnp
xchg
test
xor
push
inc
inc
lods
xchg
sbb
and
jg
ljmp
sbb
test
mov
or
stos
stos
push
das
push
icebp
fisttps
pushf
leave
sbb
ret
dec
mov
xor
lcall
inc
fistps
xchg
sub
xchg
lods
jno
stos
popf
mov
lahf
lods
and
sbb
mov
pop
movsb
test
clc
jmp
jg
pop
pushf
sbb
ds
jg
xchg
fisubl
movsl
mov
clc
leave
pop
stos
aad
mov
fldt
incl
mov
pop
int3
shrb
pop
pop
mov
pop
mov
in
mov
sbb
fadd
adc
sbb
aad
mov
pop
mov
sahf
or
fcomip
and
jecxz
push
test
push
pop
dec
call
push
sbb
loopne
mov
lcall
add
aam
add
jge
xlat
push
add
pop
fiaddl
out
gs
fcmovne
fstp
insl
fstp
loopne
pop
loop
in
in
or
dec
fsubp
pop
pop
fisubl
jecxz
pop
in
pop
call
fsubrp
outsl
outsl
imulb
in
fstpl
or
sbb
pop
inc
add
pop
fcomip
ljmp
xchg
pop
fld
pop
fnsave
lds
inc
in
out
popf
fdivrp
in
std
pop
fisubrl
add
ljmp
pop
cld
cmc
inc
fs
or
repnz
pop
cmc
sub
or
dec
lcall
mov
add
xchg
xchg
stos
iret
pop
pop
and
push
lods
es
repnz
sbbl
cwtl
popa
sahf
dec
add
nop
popa
sbb
popa
mov
or
loope
push
loop
out
push
into
popa
and
bound
dec
bound
mov
jmp
sbb
daa
xchg
popa
daa
pop
bound
loop
scas
loope
out
push
loop
cmpsb
bound
dec
loop
idiv
ljmp
push
bound
xchg
loop
cmp
xor
arpl
jecxz
testb
loop
fsubp
and
push
fsubp
and
or
jecxz
bound
loop
jecxz
jle
push
sbb
in
negb
or
in
pop
fs
pusha
or
sub
bound
loop
pushl
mulb
mov
inc
testb
popa
call
sbb
xorl
push
sahf
cwtl
orb
push
push
xchg
test
and
stos
lahf
dec
pop
int
mov
dec
loope
lcall
pop
out
in
loop
xor
out
sbb
and
out
inc
and
mov
gs
data16
out
sub
pop
push
out
cmpsb
imul
sbb
arpl
imul
cwtl
adc
pop
mulb
test
lods
inc
pushf
incl
jp
out
mov
jno
out
xchg
fldt
addr16
xchg
in
push
fildl
pop
xchg
add
mov
push
lods
xor
ljmp
add
nop
push
mov
clc
dec
negb
mov
sar
jge
out
jo
pop
and
xchg
adc
cld
adc
jg
adcb
and
andb
out
imul
mov
ljmp
dec
ljmp
cmpsl
jle
test
push
sahf
xor
push
mov
lods
fdivrp
ljmp
es
pushf
dec
xchg
imul
cmpsl
ljmp
mov
andb
push
or
test
cmpsl
inc
gs
js
lahf
es
add
add
rcll
insb
les
xchg
push
jmp
xchg
add
outsb
insb
ret
jle
leave
jmp
incl
enter
fisubrs
out
in
mov
in
jg
insb
shrl
insl
aam
iret
pop
insl
into
test
insb
into
add
pushf
in
cs
fistl
fisttpl
insl
ret
into
insl
call
rolb
outsb
fnstenv
insl
xlat
xchg
insl
jmp
in
out
jecxz
out
frstor
jmp
in
aam
out
filds
in
call
fcmove
add
je
ds
mov
into
lea
push
sub
in
ljmp
push
sub
outsl
jmp
fidivrs
ficoms
cli
cs
std
mov
in
outsb
int3
outsb
clc
push
lock
insb
add
or
outsl
jg
lcall
sti
es
out
xchg
push
jo
cmpsb
push
sahf
lock
insl
sti
ficoms
out
shrb
pushl
xlat
out
push
out
in
push
out
rcll
jno
ss
or
or
jno
dec
push
ljmp
pop
shl
outsl
push
lock
pop
lock
push
outsb
out
imulb
pop
add
cmp
popa
push
push
iret
inc
sbb
outsl
and
out
mov
incl
fdivr
icebp
sub
sub
stc
xchg
or
icebp
pop
fildl
jb
repnz
or
xor
xor
jb
jg
mov
xor
sub
jae
daa
in
adc
aaa
dec
jae
mov
das
jmp
push
cmpsl
jb
addr16
mov
inc
outsl
je
xlat
lock
out
sub
jae
pmuludq
jg
imul
incl
hlt
add
push
sub
movsb
adc
aas
cli
jg
adc
cmpsb
hlt
dec
fildll
mov
dec
aaa
hlt
adc
jno
daa
jae
push
inc
out
cmc
inc
mov
sbb
hlt
popa
pushl
aaa
lock
addr16
add
outsl
cmp
lock
icebp
push
out
jb
iret
icebp
arpl
das
xlat
icebp
incl
cmc
repnz
das
jbe
das
testl
pop
test
bnd
push
jg
push
std
dec
xchg
add
mov
inc
add
insb
dec
push
pop
pop
negb
negl
incl
pusha
daa
jbe
aaa
repz
mov
dec
xlat
cmc
xor
ja
outsb
fbstp
cmc
fcomip
xchg
je
cmp
repz
push
imulb
mulb
fsubr
testl
ss
je
divb
scas
clc
mov
insl
xchg
js
lahf
hlt
dec
xchg
idivb
pop
jbe
add
addr16
repz
int3
inc
and
mov
popf
sahf
jne
out
jae
aaa
jp
rol
ljmp
clc
sbbl
xchg
divl
jg
pushl
jno
fcomip
pusha
mov
je
mov
ja
pop
cli
jg
jbe
mov
fwait
scas
push
cld
cli
cmp
icebp
cmp
stos
mov
insl
scas
jbe
lcall
jp
aas
jp
push
jp
xchg
push
ja
cmp
pushf
outsl
push
xchg
sbb
lcall
incl
pop
push
fs
dec
ja
xchg
scas
repz
mov
call
xchg
daa
divl
hlt
inc
jg
or
cltd
pushl
jg
fdivr
or
ljmp
mov
cmc
mov
out
iret
cli
test
jl
xchg
std
inc
xchg
sti
lcall
cld
push
xor
daa
in
fbld
ja
iret
std
mov
jge
dec
pop
in
fcomi
daa
mov
sub
add
clc
and
push
sbb
scas
jb
scas
hlt
fcomp
cld
jg
mov
push
jp
lahf
jno
out
fisubs
gs
std
or
insl
decl
lcall
pushl
dec
inc
jns
iret
call
pop
mov
or
mov
or
and
mov
daa
and
fdivr
call
mov
outsb
movsb
test
and
adc
mov
rcll
repnz
dec
jge
and
cmp
sub
into
push
xor
enter
movsb
inc
clc
fidivrl
push
and
clc
lock
push
xor
scas
xor
jg
add
ljmp
fcomi
imul
in
lods
sar
ljmp
jecxz
mov
iret
lcall
jno
adc
mov
loope
jg
repnz
sub
xor
adc
jae
sbb
jno
mov
xor
cli
mov
jl
repnz
mov
cltd
xor
daa
sbb
dec
cld
sbb
test
call
loop
scas
sub
out
cmpb
gs
inc
imul
fdivs
mov
jecxz
jg
mov
jbe
out
push
xchg
mov
cli
dec
hlt
jecxz
rorl
mov
lods
movsb
mov
jg
dec
ss
in
cmp
xor
pushf
dec
cmp
inc
sbb
xchg
adc
mov
insl
test
xchg
inc
xchg
jge
push
fs
push
aad
sub
enter
xchg
xlat
call
shl
test
arpl
stc
mov
jbe
fadds
xchg
mov
loopne
call
cmp
into
call
jmp
ja
cs
fcoms
push
dec
and
ljmp
rcr
outsl
or
sbb
in
test
shlb
sub
push
jmp
mov
mov
out
cmp
xchg
insb
mov
push
inc
call
fiaddl
xchg
call
std
call
mov
cmpsl
sbb
mov
imulb
push
call
dec
rcrb
fxtract
es
inc
stc
add
xchg
add
jno
xchg
call
cltd
or
sub
test
movsl
lea
sahf
scas
pop
es
lcall
sub
and
cmc
mov
test
pop
cltd
push
mov
mov
ljmp
test
ficompl
test
mov
mov
sbb
fldt
add
adc
pop
or
jp
pop
cld
ficompl
cltd
subb
pushl
sub
sbb
mov
mov
ljmp
sub
xor
xchg
stos
add
aaa
cmpsb
sarl
sbb
icebp
xchg
scas
jg
push
pushf
ljmp
mov
out
enter
xchg
jnp
ret
and
aam
ljmp
fsubs
jge
fisubrl
jge
fsubs
int
fsubl
daa
leave
fdivl
mov
fdivrp
fcomip
jns
mov
aaa
mov
fldcw
sbb
mov
in
cmp
mov
sahf
cmp
xchg
pop
jle
out
fwait
mov
sub
lods
loop
sub
push
mov
sub
pop
movsl
inc
pop
lods
inc
jecxz
mov
mov
cmp
scas
or
ljmp
adc
lods
ret
ja,pn
dec
ds
lds
jg
icebp
leave
and
out
cmp
int3
add
fcomip
iret
cmp
mov
dec
jg
hlt
addr16
mov
mov
jnp
sbb
out
mov
std
popa
xlat
lret
cmpb
jecxz
pop
lahf
cmp
decl
scas
aas
idiv
xchg
or
inc
adc
nop
test
outsb
inc
xchg
jg
jl
in
jg
bound
mov
pop
jecxz
dec
inc
or
mov
mov
dec
addl
and
push
test
adc
pusha
xchg
sti
inc
pop
xor
cwtl
into
dec
adc
shll
jg
cld
inc
jo
sbb
adc
cwtl
rcrb
xor
xchg
js
or
adc
loope
xor
call
addl
loop
adc
cmp
sub
sbb
sub
push
jno
incl
scas
cwtl
lds
sbb
sbb
mov
mov
and
enter
fists
jl
mov
cmp
mov
xchg
and
cwtl
inc
push
and
ret
mov
add
ljmp
fucom
cmp
or
aas
lods
popa
lea
rclb
call
and
rclb
sub
lret
xacquire
andb
mov
es
call
xchg
scas
or
sub
mov
pop
push
rolb
lods
cld
and
popa
adc
cs
inc
pop
std
fidivl
xchg
mov
sub
gs
cwtl
stos
sub
cs
cmp
adc
pop
jg
and
push
rcll
shrl
lcall
fs
fiadds
xchg
scas
das
mov
and
adcb
add
mov
cmp
xor
dec
push
out
adc
mov
outsl
leave
push
sbb
ljmp
movsb
inc
test
shll
mov
fiadds
push
or
ljmp
add
sub
sbbb
ss
or
test
cmp
jge
or
es
cmp
ret
xor
data16
hlt
mov
dec
mov
aad
lcall
mov
jg
pushl
adc
sbb
mov
fildll
rclb
cmp
xor
pop
iret
test
ljmp
mov
push
fwait
pop
popf
es
push
int3
push
popf
or
mov
jge
arpl
icebp
jmp
or
lret
mov
jmp
cmp
leave
bound
xor
adc
xchg
adc
decl
lock
ds
xchg
insl
mov
adc
aaa
add
xorb
in
ljmp
ljmp
or
ss
xor
loopne
pop
mov
xchg
sub
in
jmp
mov
int
sub
add
je
ror
mov
push
pop
xchg
mov
test
sub
xor
and
sbb
inc
ja
lods
push
in
sub
fisttps
popf
out
jge
stos
xor
cmpl
jbe
jb
inc
in
xchg
xor
and
in
jmp
sub
shrb
mov
sbb
and
xchg
and
inc
test
mov
or
sbb
xchg
push
inc
insb
mov
add
sbbl
js
mov
outsb
sbb
ss
fs
aad
decl
ds
pusha
lds
lcall
ret
sub
xor
xchg
xchg
insb
outsb
insb
adc
call
adc
adc
push
out
pop
ret
xor
pop
stc
les
or
ljmp
dec
outsb
mov
add
fdivs
loop
ljmp
in
call
enter
mov
movl
lock
mov
pusha
add
call
stc
add
arpl
dec
es
nop
xor
les
inc
ja
jne
loopne
dec
push
ss
xor
xchg
inc
sub
es
nop
lock
decl
jns
loope
test
pop
addb
add
jl
call
dec
inc
xor
cmp
and
dec
sbb
shl
test
sub
rcrb
mov
daa
xor
lcall
ljmp
lock
sub
shr
xor
push
and
adc
ljmp
inc
sbb
xchg
lret
xor
ret
dec
adc
les
cli
dec
xor
insb
incl
push
loope
mov
dec
jmp
addr16
xor
and
mov
negl
loop
dec
or
mov
pop
jns
mov
pushl
les
in
sti
leave
loope
mov
push
inc
fsub
mov
je
cmp
out
jmp
mov
repz
jne
outsb
jae
and
xchg
adc
jg
xchg
mov
lret
mov
push
lods
adc
xor
or
add
call
cmp
lahf
lds
shlb
shll
ret
fcoms
call
fcmovnu
jl
scas
imul
popa
or
adc
lods
clc
jmp
and
loopne
fisttps
push
pop
xor
repnz
jl
sti
mov
lds
icebp
add
xor
ljmp
cmp
sbb
jb
inc
cld
out
ss
dec
mov
mov
or
mov
sbb
aam
xor
mov
loope
mov
mov
jmp
sub
mov
sbb
pop
pusha
push
jp
mov
in
xor
lock
sub
fsub
fnstsw
push
hlt
sbb
pop
lds
mov
mov
pop
int
sub
add
fdivrs
pushf
daa
insl
mov
out
mov
inc
or
pop
shlb
mov
sbb
mov
mov
sbb
sbb
dec
pusha
aad
lea
sub
jg
inc
test
jmp
push
cltd
in
pop
adc
sub
sbb
and
popa
add
dec
ret
mov
cwtl
xor
pop
xchg
sub
aaa
std
in
loope
data16
cld
fcoml
jno
inc
test
inc
or
jb
add
mov
push
addb
lcall
ljmp
mov
adc
or
or
and
and
bound
pop
add
fbstp
sbb
and
pop
and
mov
add
bound
es
repnz
mov
loop
xchg
add
loop
xchg
bound
pop
addb
outsb
loop
push
mov
insl
sti
ljmp
mov
fisubs
sub
out
xor
dec
mov
dec
loop
and
pop
push
push
in
inc
lcall
xor
mov
inc
aaa
push
and
in
fwait
std
in
jecxz
out
push
loop
xor
aaa
cmpsb
xorb
bound
push
stos
cmp
jmp
xor
ret
rcrb
std
sub
ret
pop
cmpl
stos
loop,pt
xor
lcall
and
js
inc
mov
inc
movsb
pop
dec
in
mov
inc
jp
inc
pop
fs
dec
and
and
ljmp
inc
bound
movsb
inc
mov
xchg
movsb
inc
xor
orb
inc
pop
movsb
push
cmpsb
and
sbb
and
into
jo
and
mov
xchg
pop
mov
and
lret
es
in
and
inc
inc
in
push
dec
lret
ret
out
movsb
inc
push
clc
pop
mov
sahf
and
pop
sahf
movsb
push
xchg
movsl
push
push
push
inc
movsb
push
filds
dec
in
jle
push
stos
and
lcall
ss
inc
or
add
in
push
inc
mov
mov
add
and
and
incl
push
fs
popa
dec
xchg
daa
or
mov
pop
pop
and
gs
mov
in
in
jecxz
cs
ljmp
sub
gs
inc
es
cmpsb
push
push
cwtl
ret
lret
into
loope
xchg
dec
fstpt
add
lcall
test
cmpsb
addr16
data16
push
imul
pop
cmpsb
outsl
outsb
gs
daa
add
jo
mov
daa
inc
mov
rclb
sbb
outsl
fstpt
gs
pusha
data16
cmpsl
js
daa
js
es
es
cmpsb
cmpsl
pushl
cmpsb
jnp
out
out
scas
daa
jge
out
addr16
and
es
cmpsl
nop
cli
ljmp
daa
jp
test
out
out
dec
addr16
daa
addl
decl
pusha
orl
test
jno
push
lds
dec
hlt
mov
inc
sub
mov
add
es
jle
test
add
cmpsb
adc
mov
mov
outsl
sub
mov
mov
test
xchg
push
incl
decl
jmp
imul
cmp
xchg
imul
jbe
xchg
jle
xchg
jp
cwtl
mov
cltd
push
test
jg
cltd
push
test
es
arpl
rorb
dec
jmp
ljmp
lahf
ljmp
out
ljmp
sbb
mov
test
mov
stos
mov
sub
sub
pop
push
ss
cmpsb
jbe
mov
push
push
ljmp
ljmp
stos
lods
into
sub
or
xor
inc
faddp
mov
into
ljmp
clc
jecxz
into
imul
call
ss
and
dec
sub
sub
xor
mov
sub
pushl
push
cld
push
inc
mov
mov
mov
dec
in
in
mov
stos
mov
loop
sub
mov
ret
dec
jmp
clc
stos
mov
sub
lods
ret
ds
inc
lods
les
mov
lods
out
or
ljmp
test
jle
enter
add
into
sahf
fwait
movsb
lods
enter
mov
sti
decl
ljmp
pop
leave
scas
sub
and
iret
out
imul
mov
loope
add
int3
imul
in
xchg
pop
or
imul
sub
repnz
inc
sub
in
in
cmc
sub
sub
int3
mov
cld
inc
mov
xorb
sar
ljmp
rclb
insl
aad
insb
fdivl
xor
out
lods
fdivp
ljmp
fucomip
insl
fisttpll
outsb
fcmovnbe
sub
ljmp
out
fists
outsb
shr
test
cs
jg
jg
scas
sub
push
lea
lods
test
in
cmp
jg
ljmp
pop
lods
jmp
scas
and
imul
ljmp
and
decl
fcmovnb
scas
in
stos
scas
jmp
rolb
lret
inc
mov
or
ljmp
mov
cmpb
inc
xchg
xor
cmc
sbb
push
outsl
sub
xchg
incl
cmp
xor
xchg
scas
stc
ss
jle
cli
std
in
adc
clc
mov
cli
das
mull
outsl
loopne
std
push
out
not
add
repnz
cld
cmpsb
cs
push
jo
adc
outsl
cli
sub
push
inc
mov
dec
mov
or
add
add
sub
add
sti
ljmp
cli
xchg
cmc
cli
push
cli
cli
ljmp
fldt
lock
in
sbb
std
jg
or
out
mov
fdivl
mov
adc
pushl
dec
scas
or
xor
push
xor
lock
ljmp
ud0
lock
cmpsl
outsb
das
sub
stc
jle
add
gs
sbb
mov
fadd
adc
incl
mov
sbb
add
icebp
sub
push
jmp
sbb
xor
xor
mov
pop
jb
pop
jb
adc
icebp
and
repnz
sbb
and
push
imul
xchg
mov
out
sbb
sbb
dec
xor
ja
cmp
adc
and
mov
in
jg
sbb
jb
xor
sbb
xor
mov
jb
arpl
sub
fucomip
repnz
cmpsb
outsl
in
sub
jb
aas
repnz
repnz
xor
mov
fildl
pop
mov
pop
or
xchg
dec
mov
fisttpl
adc
repnz
icebp
sbb
shll
sub
pop
mov
xchg
xor
repz
outsl
sbb
repnz
jg
pushl
ss
xor
pushl
cs
xor
xchg
cmp
mov
subb
xor
popl
cli
lock
mov
aas
or
inc
and
sti
stos
add
inc
aaa
xor
add
inc
cmp
testb
inc
daa
mov
push
outsl
hlt
inc
pop
xchg
push
jg
loopne
out
xor
aaa
add
xor
mov
inc
lfs
je
inc
je
outsl
pushl
add
mov
je
divl
aaa
je
test
pop
cli
pushl
add
movsb
cmpb
inc
sbb
cld
inc
push
idivb
push
dec
push
dec
mov
push
xor
pop
add
push
std
pushl
push
fildl
xchg
mov
cmpsl
mov
ja
pop
xchg
mov
mov
mov
cmp
push
pop
jne
imul
pop
inc
pop
lret
jne
addr16
push
or
mov
negb
mov
jmp
pusha
ret
ljmp
in
xor
cmc
pop
jae
pop
aas
ss
mov
sub
fs
notb
testb
jne
ja
pop
das
mov
ljmp
daa
adc
decl
ss
pushl
dec
je
fwait
jbe
xchg
addl
ret
jg
jbe
insl
divl
shl
push
outsl
add
addb
daa
sbb
jae
into
xor
cmc
in
jmp
loopne
lahf
cmc
push
xor
adc
sub
mov
cmp
cmpsl
mov
xchg
ja
mov
jp
mull
jne
mov
adc
mov
jge
ja
mov
das
aaa
jg
ja
jl
jle
ja
or
cld
mov
jbe
stos
mov
imul
jecxz
test
idivb
call
adc
xlat
sbb
test
or
jno
ss
cmp
stos
addb
xorl
jl
mov
hlt
push
cmpsl
add
clc
daa
push
ret
mov
cmp
add
nop
into
jns
idivl
xchg
pop
cmp
cmp
mov
outsl
call
pop
mov
sti
cmp
xchg
sbb
adc
xchg
xchg
mov
xchg
cmp
pop
cmpsl
jns
fwait
and
cmp
fwait
lahf
mov
imul
and
lahf
scas
jns
adc
cli
popf
pop
jns
push
js
repz
mov
sub
lcall
lcall
in
dec
mov
cmp
lock
add
test
pop
inc
aam
mov
jp
mov
outsl
mov
cmpsl
cmp
lods
xchg
cli
lods
xlat
or
cli
test
orb
decl
mov
cli
lods
pop
cmp
cmp
cli
mov
jp
or
cmp
sti
stos
lret
cmp
cmp
jnp
adc
mov
mov
clc
mov
enter
mov
mov
dec
mov
nop
lock
stos
aaa
jnp
fstpt
out
pop
lahf
mov
xor
test
fbld
imul
ds
jp
jmp
les
les
add
mov
xchg
fists
mov
arpl
cld
les
stos
dec
add
cld
mov
jl
dec
mov
enter
mov
add
cmp
pop
jnp
fs
iret
cmpsl
mov
in
bsr
or
shl
jl
imul
mov
lods
pop
ret
dec
std
ret
int3
cmp
test
out
jnp
out
push
sti
leave
jnp
mov
mov
repz
xchg
cld
lods
mov
cmp
add
pushf
add
mov
sub
jge
jmp
fiadds
sub
lock
loopne
ds
addl
fisubs
lock
aaa
das
clc
mov
jmp
loop
cmp
pop
mov
in
ds
ficomps
loop,pt
loopne
lcall
add
jl
mov
inc
jle
pop
out
jge
pop
add
loop
jbe
aam
jb
call
ds
jae
mov
fists
jle
dec
mov
jg
test
arpl
mov
std
in
jge
repz
ds
cmp
inc
jl
outsl
repnz
push
jg
loope
mul
idiv
jmp
repz
faddl
and
jg
hlt
jnp
outsl
jg
xlat
jg
dec
mov
sub
ds
mov
sub
or
incl
sub
nop
xchg
lea
pop
sub
mov
push
test
jo
inc
mov
incl
add
inc
clc
push
jecxz
nop
sbb
mov
dec
xor
inc
xchg
sub
in
xchg
mov
rorl
jecxz
xor
div
sub
arpl
xor
std
pop
adc
mov
test
cmp
je
adc
sbb
stos
jmp
mov
xchg
inc
pop
mov
fnstenv
sbb
jae
shlb
pop
outsb
pop
mov
jg
hlt
lods
cmp
scas
lods
or
dec
mov
xor
mov
mov
aaa
std
fs
jb
cmp
cmp
inc
xchg
imul
push
push
sub
aad
loop
mov
aam
inc
rcrb
mov
push
push
idivl
cltd
push
ret
aaa
jle
cmp
je
xchg
aaa
mov
shrl
cmp
hlt
ljmp
sti
insl
in
loope
das
dec
push
js
hlt
enter
ja
cmp
mov
mov
clc
loopne
jo
xor
jg
and
add
mov
data16
push
and
cltd
push
cwtl
nop
ret
inc
adc
ret
push
sub
xchg
les
dec
cmp
rcll
push
inc
sbb
xchg
or
imul
roll
jne
icebp
inc
adc
pushl
xchg
dec
adc
jecxz
or
in
leave
shll
push
rorb
setl
lret
clc
ljmp
inc
push
dec
and
lods
ror
and
sub
dec
es
mov
and
lahf
or
gs
add
adc
lods
movsb
sub
mov
sbb
mov
ret
and
test
imul
add
jns
push
ljmp
sub
pop
and
lcall
sbb
and
ret
pop
movsb
xchg
add
lret
mov
xor
shr
out
add
div
cmp
mov
fbld
adc
push
add
sbb
cld
dec
in
cld
add
mov
add
iret
add
out
sti
add
loope
add
fcmovnb
dec
es
js
jp
jle
lods
mov
mov
jns
loope
popf
ficompl
mov
lock
add
dec
enter
outsl
mov
inc
xchg
in
es
add
mov
lods
add
loop
add
testb
cmp
sbb
fadds
fbstp
add
into
loop
add
add
sarb
testb
xor
mov
push
movhps
mov
in
add
add
faddl
ficompl
fwait
push
hlt
fstpt
aaa
cmp
pop
add
div
fiaddl
pushf
leave
pop
insb
or
cltd
mov
movsb
fdivs
mov
add
lods
jmp
addb
push
jne
push
mov
shr
jecxz
fcomps
out
push
popf
enter
mov
add
fbld
cmp
scas
cmc
push
jecxz
jbe
xchg
add
jns
roll
xor
or
stc
mov
repz
and
fwait
into
mov
ret
mov
jg
or
add
shr
cs
xchg
push
jbe
mov
test
push
leave
lock
ljmp
push
add
jle
xchg
push
add
sbb
outsb
xchg
push
add
xchg
leave
push
stos
retw
mov
loop
nop
lret
mov
add
shlb
popa
pop
or
shlb
ret
pop
or
add
add
pop
push
jle
ss
inc
lds
pop
cmpb
xchg
fcmovbe
imul
test
adc
cmp
adc
dec
xchg
sahf
jns
fildl
push
and
ss
clc
push
sbb
decb
sub
cmpsl
lcall
xchg
aad
pop
test
mov
scas
mov
and
jmp
adc
pop
sahf
add
mov
cld
ficoms
adc
jge
sub
loopne
push
mov
or
ja
push
cld
subb
xorl
lock
push
adc
sbb
scas
add
mov
insb
into
mov
pop
inc
sbb
mov
cs
shrl
ss
fucomi
scas
call
inc
cltd
add
add
mov
test
pop
inc
jb
mov
add
jmp
shl
call
pop
lret
loop
dec
aas
cld
cs
pop
cld
cmp
mov
ds
mov
sub
xlat
mov
ret
mov
or
mov
mov
int
xchg
int
jbe
mov
mov
test
jb
into
dec
add
cmp
subl
xor
mov
ja
mov
pop
mov
dec
jbe
pop
outsb
jle
mov
or
aas
mov
out
ss
lods
mov
push
mov
or
out
sbb
mov
fiaddl
add
aas
mov
les
fwait
subb
into
popa
dec
cmp
dec
jo
cmp
dec
repnz
jg
fwait
mov
fbld
popa
popa
shrb
xor
pusha
xchg
andb
xchg
dec
pop
cmc
pop
sti
sub
rolb
addb
decl
fwait
pushl
frstor
push
lods
sub
dec
insl
pop
popa
xor
lods
clc
decl
add
ffreep
repz
into
fdivrl
lret
cmp
xchg
lods
filds
mov
push
xchg
xor
xchg
sub
cmpb
sarl
das
cwtl
add
xchg
or
ljmp
mov
mov
inc
popa
xorl
jmp
mov
outsl
fwait
inc
sti
outsl
decb
hlt
call
xchg
cmp
dec
and
mov
mov
lcall
aas
xchg
dec
in
shr
inc
push
out
mov
jmp
lock
xor
pop
fists
cltd
outsb
pop
sub
and
enter
int
dec
sbb
jecxz
mov
xchg
mov
ljmp
stos
repz
pushl
iret
out
popf
js
aas
xchg
lret
lret
mov
ret
and
inc
dec
rcl
pusha
stc
decl
cmp
xchg
ret
cmpsl
jp
lods
sbb
stos
sbb
mov
stc
mov
aad
push
test
lcall
movsl
or
jg
pop
mov
imul
clc
jg
sahf
ja
xchg
pop
adc
cmpsb
adc
loope
std
das
sarb
xor
nop
ds
mov
push
xor
push
adc
mov
mov
orl
pushf
jl
adc
mov
fisubl
insb
scas
fadds
addb
outsl
shrl
mov
or
push
outsl
sub
aam
outsl
repnz
jbe
add
leave
arpl
cmp
ja
xor
les
xor
or
add
in
mov
mov
push
mov
adc
pop
sbb
les
and
mov
sbb
sbb
jmp
add
arpl
adc
cwtl
adc
dec
inc
cmp
sti
sub
out
inc
fldt
add
add
add
or
pop
pop
push
or
das
nop
aam
or
or
or
adc
adc
in
fidivrl
adc
sbb
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
xchg
push
lret
ror
or
add
and
add
sahf
add
xchg
popa
inc
mov
lods
fwait
sub
dec
pop
push
sarb
adc
jb
cltd
cmp
ds
pushl
add
push
adc
pop
and
xor
inc
mov
adc
add
xor
bound
js
jl
sbb
sub
cmp
jge
adc
add
cmpsl
and
xchg
xchg
xchg
xchg
xchg
xchg
and
cmp
movsl
cmpsb
cmpsl
test
stos
mov
mov
mov
mov
enter
shl
call
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
adc
xchg
scas
push
lods
loopne
adc
cld
pop
pop
idivl
ja
adc
push
adc
pop
popa
jno
and
das
adc
or
mov
or
xor
adc
add
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
add
adc
dec
mov
cld
out
sarb
lret
dec
shrl
push
xchg
push
repnz
dec
add
mov
pop
adc
decl
pop
add
clc
pop
insb
int3
loope
mov
fistpll
jge
or
xor
mov
add
aaa
in
and
fiaddl
out
sti
popa
lock
pop
xchg
push
mov
cld
fsubr
sti
inc
fnstsw
jge
sbb
xchg
lcall
clc
jns
cld
xor
inc
out
mov
lods
pop
mov
lods
movsb
cmp
and
pop
in
psrlq
cld
sub
sub
imul
xchg
fsubrl
pop
int3
fdivl
mov
mov
cld
fbld
xchg
cmpsb
cwtl
sbb
clc
imul
sbb
jns
xor
adc
nop
sbb
in
dec
and
fcomps
jl
loop
xchg
cmp
loop
in
pushl
sbb
das
inc
cmp
jge
addr16
xor
mov
ljmp
fsubr
xlat
into
push
jns
add
adc
sub
movsb
sub
inc
leave
adc
xor
and
and
pop
or
adc
add
pop
inc
push
jmp
ss
sti
adc
pop
sarb
cmp
sahf
ret
ret
ficomps
mov
inc
push
mov
xchg
out
daa
decb
ret
icebp
ljmp
clc
inc
sbbb
fists
in
xchg
xchg
dec
jge
push
lock
pop
or
dec
pop
icebp
outsb
xchg
ficoml
mov
mov
mov
add
sub
pop
lcall
cltd
ja
test
mov
mov
ljmp
lahf
mov
leave
inc
icebp
pop
dec
pushl
and
mov
push
jno
daa
xlat
jne
sbb
push
imul
mov
mov
inc
sar
call
mov
adc
add
lahf
movb
cs
pop
xor
and
lret
dec
and
xor
mov
inc
scas
pop
and
in
insl
mov
gs
sbb
and
sub
and
mov
pusha
enter
mov
mov
cmp
mov
or
add
fbstp
push
mov
jle
push
loopne
add
andb
rclb
mov
dec
mov
movsl
iret
sti
lret
mov
dec
mov
fdivrp
or
hlt
mov
mov
sub
in
xchg
fs
fildl
mov
inc
xor
xor
data16
loopne
mov
clc
idiv
mov
cmpsl
cli
faddp
sarb
cld
and
xlat
aam
mov
mov
mov
daa
into
fidivs
xlat
stc
shll
push
mov
leave
stos
inc
bound
fbstp
in
enter
xlat
mov
rcr
inc
fidivrl
in
jnp
andl
leave
int3
in
imul
aas
jae
outsl
imul
insb
imul
insl
arpl
cs
sub
jbe
outsb
std
jmp
or
inc
gs
outsl
jne
jno
xor
pop
popa
popa
sti
fwait
out
pop
adc
and
aad
add
lock
inc
add
nop
das
mov
or
jns
dec
lret
mov
and
xor
add
adc
add
inc
sbb
cmp
mov
insb
cmc
add
xor
in
xor
dec
and
sub
jns
ja
cmp
inc
insb
mov
jmp
sbb
fildl
or
add
adc
clc
adc
sub
add
insl
adc
cmc
rolb
iret
rep
fcomi
es
roll
push
mov
sahf
out
cmp
mov
push
es
jle
add
add
adc
sbb
mov
sub
inc
ret
mov
push
mov
test
adc
inc
lds
nop
or
and
xchg
mov
adc
or
inc
push
or
or
imul
lahf
leave
adc
add
ror
jg
gs
dec
inc
mov
mov
sub
or
ret
pop
fucomip
fs
test
inc
push
add
ss
out
orl
or
sub
xchg
sub
rorl
or
xchg
and
mov
lret
and
or
mov
int
aaa
addr16
mov
and
shll
out
mov
lret
and
xor
lds
leave
dec
push
dec
sub
jb
xor
shlb
clc
push
xor
push
add
dec
mov
add
xchg
mov
add
pusha
cltd
xor
and
test
stos
mov
repz
mov
cmp
out
add
iret
rorb
popf
or
push
in
xchg
jl
shlb
cmp
les
add
push
gs
sbb
inc
add
adc
push
mov
es
sbb
flds
jmp
mov
cmp
add
loope
jnp
inc
bound
mov
xchg
xchg
or
aas
cmp
ljmp
pop
test
push
cmp
or
sbbb
bound
mov
push
test
iret
sahf
or
add
mov
xchg
or
and
ret
scas
push
inc
iret
pusha
das
add
sarb
and
addl
dec
insb
mov
dec
shrb
test
jge
xchg
or
and
inc
iret
jo
push
nop
cmp
dec
jnp
adc
cs
fiaddl
xor
jp
jo
cmp
sarb
nop
enter
in
test
push
bound
daa
lock
pop
inc
xchg
pusha
cmpsb
and
test
mov
shrb
push
movsb
inc
decl
icebp
movsb
mov
mov
sub
jp
nop
sbb
stos
adc
cwtl
jmp
das
mov
pusha
jo
mov
cmp
rcrb
add
jo
pop
jne
and
xchg
clc
or
add
call
and
mov
and
lock
mov
add
pushf
mov
sub
mov
inc
cwtl
jae
sbb
jo
sub
outsb
iret
cs
and
mov
aas
add
push
push
mov
enter
add
dec
sahf
mov
push
mov
dec
inc
repnz
mov
cmp
aas
and
roll
outsl
adc
lds
adc
jns
jne
outsl
fsubrs
rol
xor
mov
loopne
sbb
rclb
lds
add
add
and
cs
cmp
dec
xor
mov
sbb
mov
add
jbe
push
nop
out
aad
lahf
adc
cs
outsb
stos
adc
jmp
push
test
fstps
push
lahf
mov
int3
inc
das
enter
push
daa
pop
nop
adc
das
lock
xchg
ja
into
add
mov
loopne
add
jbe
inc
lock
add
jbe
enter
cmp
js
outsl
adc
xor
cs
adc
dec
mov
jne
mov
leave
add
aam
rorb
outsl
inc
nop
into
inc
nop
inc
nop
insb
or
outsb
jne
pusha
or
aas
loopne
pushf
call
adc
mov
xorl
ja
in
rcr
lahf
nop
cs
nop
add
push
icebp
mov
add
adc
dec
sbb
add
sbbl
filds
push
cmp
jnp
or
nop
or
in
nop
test
jecxz
pop
or
cmpl
jo
loop
dec
push
cmp
jecxz
inc
dec
and
shl
loopne
xchg
jl
loopne
sahf
cmpsl
in
sbbl
add
adc
or
nop
cs
and
fstps
ret
enter
jo
shr
scas
push
mov
add
in
pop
add
pop
push
and
xlat
jmp
push
adc
loopne
inc
mov
mov
idivb
scas
add
push
out
xor
add
rolb
inc
add
lds
addb
enter
lcall
add
inc
inc
cmp
pusha
nop
add
jmp
outsl
mov
aas
push
inc
out
nop
testb
jno,pn
or
xor
or
or
js
cwtl
fadds
xor
pop
and
call
fwait
inc
adc
scas
cmp
mov
or
pusha
push
call
incl
mov
or
push
or
xorb
jo
or
pusha
xchg
nop
pop
sbb
dec
sub
pop
pop
pusha
outsl
sub
jae
jae
sbbb
sahf
je
into
aas
lret
cs
or
add
pop
call
sub
aaa
xchg
mov
out
dec
dec
sub
iret
mov
adc
push
daa
sti
or
shlb
cltd
aas
add
push
and
jo
out
inc
jbe
push
mov
adc
push
pusha
xchg
pop
neg
sti
cmp
faddl
push
pop
mov
neg
arpl
push
insb
mov
cmp
jp
inc
aaa
pop
jnp
divl
data16
repnz
add
idivb
ja
add
leave
push
ds
cmc
movl
fisubrl
lods
dec
xlat
push
xchg
adc
sub
fidivs
ss
mov
or
sub
inc
lock
sub
js
imul
mov
lock
mov
push
xchg
in
xor
xchg
sub
adc
and
and
xlat
divb
xlat
rclb
pop
mov
testb
and
or
lahf
inc
rcrb
sub
and
add
das
push
sub
push
adc
push
add
outsl
out
add
add
add
cmpsb
out
shrb
fcmovnu
mov
adc
outsl
xlat
and
push
push
mov
aaa
es
repz
push
push
aad
repnz
data16
dec
mov
xchg
xor
jns
push
or
daa
mov
rcrl
sub
push
inc
xor
mov
mov
add
jo
or
mov
decl
pavgb
dec
nop
mov
das
mov
cs
mov
xchg
add
push
sarb
adc
loope
sub
loopne
inc
mov
fildl
ret
cmp
inc
xchg
cmp
scas
dec
mov
jo
or
loopne
add
push
cs
pushl
aas
mov
cmp
hlt
jecxz
and
test
inc
mov
loopne
inc
add
or
sarb
jns
int
lock
pop
or
dec
fmuls
sbb
lea
cmpsb
jo
add
inc
push
mov
mov
push
scas
shlb
xchg
jns
ja
outsl
das
adc
adc
adc
scas
or
pop
rorb
out
or
adc
add
out
sbb
shlb
pusha
sbb
ljmp
push
js
add
iret
loopne
jb
lahf
lock
xor
push
sbb
and
shrb
push
and
fisttps
in
fcmovb
das
add
in
jbe
xor
lock
pop
cmpxchg
insl
pop
das
addb
pusha
dec
adc
insb
into
sbb
inc
test
and
and
loopne
repnz
dec
pop
mov
flds
loope
data16
sti
push
mov
outsb
arpl
push
loopne
mov
fcos
loopne
cmpsl
pop
sahf
shlb
repz
xchg
push
xchg
jo
jl
mov
nop
pop
rorb
push
rolb
jne
fisubl
xor
inc
outsl
mov
cmp
rcrb
xorb
xchg
inc
xor
xchg
loopne
push
iret
inc
inc
jns
dec
and
fcoms
inc
lcall
cwtl
scas
jmp
ljmp
push
dec
adc
inc
jg
mov
das
or
rorb
xor
wrmsr
or
adc
ror
jo
inc
mov
mov
add
cmp
popl
inc
push
loop
inc
pop
lock
inc
dec
out
mov
and
push
and
xchg
and
addb
xor
scas
inc
fisttps
outsl
push
cmpxchg
lock
outsl
inc
mov
aas
js
adc
rcrb
and
sete
jg
shrb
int
mov
inc
jns
and
cmpsb
lock
fs
push
or
je
jl
pop
inc
mov
scas
fcoms
dec
pop
jo
inc
testb
nop
outsl
scas
in
das
fcoms
jmp
lds
lock
add
push
pavgb
inc
and
mov
outsb
cmp
inc
ja
jnp
and
adc
xchg
jno
adc
jg
cmpl
inc
out
inc
sbb
fdivl
mov
lds
cwtl
sahf
sbb
pop
ror
inc
ficoms
pop
popa
pop
popa
leave
xchg
out
inc
inc
and
in
leave
xor
inc
cs
pop
leave
mov
dec
dec
sub
in
dec
push
push
sub
sahf
push
push
leave
xor
push
pop
inc
into
das
inc
inc
leave
leave
jae
jo
dec
mov
dec
dec
rorb
in
dec
add
pop
pop
in
mov
pusha
mov
push
nop
pop
in
in
pop
lock
pusha
stc
mov
out
mov
inc
je
adc
pusha
in
sub
mov
inc
or
inc
pop
mov
mov
lcall
mov
pop
sub
xor
das
jg
scas
inc
inc
mov
adc
add
adc
das
pop
pop
pop
add
aad
aas
lahf
inc
loop
xchg
out
jo
bound
jae
sub
pop
scas
and
and
lcall
push
adc
pushf
push
mov
adcb
add
iret
sub
xchg
lock
inc
cmovae
inc
mov
add
mov
pop
in
push
push
scas
and
sahf
das
mov
in
das
add
icebp
shl
ucomiss
scas
inc
inc
pop
nop
out
add
bound
and
nop
icebp
push
push
and
inc
test
inc
ret
dec
jle
into
add
mov
xchg
push
test
mov
or
testl
or
orb
inc
cs
into
add
je
invd
inc
outsl
xor
fadds
mov
sub
mov
jmp
jo
mov
and
push
ret
push
call
fldl
fisubrs
push
push
push
test
push
pop
and
xchg
cmp
pop
inc
rcrb
add
sub
sub
shrb
and
inc
add
add
sahf
loopne
mov
mov
roll
shl
cmpsb
and
mov
mov
in
push
push
cmpsl
push
fisttps
nop
out
add
clc
in
cmp
mov
and
das
fs
outsb
call
imulb
hlt
inc
inc
jecxz
inc
pshufw
das
inc
xchg
mov
adc
outsl
xchg
jno
mov
add
push
lock
inc
outsl
out
pusha
jo
add
addl
movsb
cmp
scas
sti
outsl
cmp
fmuls
cmp
or
mov
lcall
inc
rcl
aas
sti
outsl
push
sub
pop
test
fucom
into
out
pusha
lds
mov
lahf
add
test
jecxz
mov
out
add
enter
pusha
das
arpl
fs
inc
mov
lds
rclb
xchg
adc
xor
fcmove
cmp
add
sti
pop
add
pop
push
xchg
jg
add
je
inc
xchg
add
inc
ja
mov
xor
mov
pop
ret
lldt
lahf
inc
les
sahf
aaa
mov
xchg
and
mov
xchg
mov
push
shlb
ds
xchg
push
adc
sbb
andb
xor
pop
iret
pop
pop
rcrb
jo
dec
nop
ret
jo
jg
and
call
ucomiss
or
scas
lds
lret
sbb
push
mov
xchg
data16
pop
push
or
xor
jmp
inc
xchg
out
cmp
imul
push
dec
lock
jbe
adc
xor
jno
orb
int
and
inc
cli
fisttps
dec
scas
fcoms
jo
aas
and
sub
sub
xor
nop
dec
dec
add
jo
and
push
in
lahf
loopne
inc
outsb
dec
insb
sub
fs
lsl
leave
test
and
dec
mov
ss
jnp
inc
sub
sub
pusha
sub
mov
sub
shlb
cmp
pop
adc
inc
push
sub
daa
inc
pop
sarb
lahf
outsb
inc
jp
aas
adc
and
adc
mov
sbb
mov
mov
aaa
adc
popa
push
or
scas
int
adc
loop
popa
stc
push
mov
xor
inc
cli
fstps
test
adc
xlat
mov
mov
mov
pop
and
adc
add
out
repz
push
push
cmpsb
pop
dec
push
add
or
cs
mov
cmp
adc
pop
ljmp
roll
popf
jbe
fs
sahf
mov
test
and
xor
mov
enter
xchg
sbb
jmp
mov
push
inc
inc
dec
ja
dec
ljmp
jp
aam
iret
in
mov
cmp
lock
jmp
adc
push
in
loope
cmp
xor
jnp
mov
pusha
mov
push
mov
xor
sbb
popl
shr
pop
mov
sub
popl
popl
mov
pop
aas
and
es
fdivrs
aas
and
add
int
sbb
dec
aas
imul
push
popa
sbb
outsl
into
pop
pop
sbb
push
pop
inc
dec
mov
rorb
inc
dec
and
dec
or
mov
inc
aas
imul
mov
adc
dec
ret
push
lcall
mov
pop
loop
in
cmpsl
mov
repz
idiv
enter
fnstcw
ret
push
xor
mov
dec
xor
jle
xchg
jb
inc
pushw
xchg
mov
sahf
out
xlat
cmovno
pop
cwtl
out
and
sbb
call
arpl
cmp
imul
pop
fs
xchg
sbb
sub
push
scas
js
fwait
mov
sar
fstps
out
data16
out
pusha
and
hlt
data16
mov
out
add
or
mov
mov
out
pop
lahf
sbb
and
aam
mov
leave
scas
mov
xor
xchg
cs
pop
or
data16
int
stc
pop
aad
add
cltd
xchg
add
inc
jle
addr16
dec
rol
push
mov
rolb
flds
lret
add
and
mov
jecxz
or
push
mov
adc
sub
inc
add
sub
icebp
outsb
xchg
lret
inc
pop
push
mov
outsl
adc
pop
enter
add
xor
push
enter
mov
cs
repnz
clts
test
punpckhbw
das
jo
sbb
jmp
movsb
mov
add
adc
pop
lcall
mov
mov
mov
dec
out
cs
mov
sbb
add
call
fldt
xor
or
es
pop
or
push
push
cmc
stos
scas
sub
mov
cmp
stos
pop
push
jle
mov
andb
test
sbb
dec
cmp
addb
sbb
inc
cmp
push
xlat
pop
push
inc
pop
leave
addb
arpl
add
les
ret
clc
ss
insl
push
aaa
into
mov
jbe
bound
nop
push
test
and
iret
jecxz
cmpsb
orl
mov
outsb
pop
cmp
dec
and
adc
aas
test
les
mov
and
inc
dec
vpmacswd
mov
push
sbb
mov
inc
inc
mov
dec
mov
das
pop
dec
jle
dec
xor
dec
leave
test
enter
push
movups
xchg
push
cmpb
dec
adc
or
and
les
push
push
dec
or
push
dec
dec
sbb
imulb
pop
lahf
add
addb
push
repnz
cmp
out
and
mov
mov
orl
push
pop
lcall
pop
pop
cs
jno
das
mov
mov
negl
push
rcll
lods
mov
sbb
fimuls
repnz
repnz
aas
negb
cmp
roll
dec
mov
push
fcomp
lea
mov
dec
mov
push
cmpsl
stos
push
ret
shrl
enter
cli
push
jmp
lahf
out
fs
das
push
imul
clc
fidivl
push
pop
push
cld
imul
adc
in
add
and
aaa
xor
mov
add
nop
scas
push
rcrb
test
xor
xchg
hlt
pop
jo
sti
fisubrs
cld
push
unpcklps
test
add
pop
adc
lret
xchg
push
mov
push
dec
popf
adc
inc
adc
mov
fnstsw
in
enter
push
pop
mov
dec
popf
outsl
pop
pop
dec
mov
inc
das
inc
and
enter
sarb
adc
iret
shll
outsl
inc
or
push
iret
sbb
addr16
outsl
fnsave
cmpsb
jo
xchg
lahf
and
xchg
ljmp
shlb
xor
cmc
jp
inc
adc
pop
jo
pusha
rcll
mov
push
xor
dec
and
addb
inc
mov
cltd
sub
xor
mov
aaa
or
push
jno
filds
add
lret
sahf
in
pop
mov
and
adcl
pusha
add
call
push
mov
xchg
mov
lds
outsl
call
cmp
mov
inc
pop
adc
call
cmp
out
sbb
mov
push
dec
inc
push
setg
xor
enter
xchg
add
xchg
inc
sbb
jmp
mov
ja
dec
lahf
ret
stos
push
iret
jo
add
pop
int3
aas
jmp
jb
int
cmpsb
sbb
int
fidivrs
inc
shlb
inc
mov
adc
addl
das
and
orb
iret
rcrb
mov
or
jae
rorb
or
mov
lahf
and
aas
and
adc
sbb
aam
xlat
sub
add
into
nop
push
add
sub
orl
mov
jns
testb
das
rolb
push
or
cmc
cmp
outsl
outsb
das
pop
mov
and
sbb
imul
sbb
cwtl
iret
push
add
adc
and
adcb
xor
lock
xchg
jecxz
lods
xchg
add
outsb
lods
shl
test
mov
lods
jg
add
adc
adc
scas
fmul
stmxcsr
or
out
lret
out
ss
outsb
push
and
lahf
out
adc
add
dec
dec
dec
dec
dec
and
xor
mov
cmp
adc
xchg
push
push
fldcw
sub
inc
dec
inc
xor
mov
xchg
add
pop
ffreep
std
jns
imulb
inc
clc
mov
sbb
push
ds
loopne
push
add
fistpll
mov
push
iret
xor
dec
pop
push
add
push
aaa
in
dec
sub
mov
add
mov
dec
repz
xlat
cs
sub
mov
iret
out
xor
insl
sbb
repz
cmp
mov
adc
cmp
push
push
jp
imul
mov
xor
out
pusha
out
repz
pop
push
das
pop
jg
mov
and
daa
jp
lock
or
outsl
pusha
add
sbb
fimuls
lcall
xchg
inc
addb
mov
loope
mov
mov
es
push
call
pop
push
pop
mov
out
push
ja
jo
add
rclb
dec
fsubrl
push
or
mov
insb
add
add
push
add
add
ja
pop
fcmovu
or
cmpsl
sbb
adc
test
inc
mov
cmpsl
push
mov
clc
sahf
cmp
push
mov
cs
andl
je
inc
pop
outsb
icebp
pop
inc
sahf
jge
push
add
push
idivb
popf
pop
push
jbe
jmp
out
jle
mov
pop
jbe
mov
mov
adc
inc
cmpsl
adc
loopne
scas
sbb
imul
mov
add
xor
data16
cmpsl
add
dec
sbb
test
pop
pop
or
adc
push
fcoms
push
rorb
inc
xchg
sub
not
add
xchg
pop
push
push
pop
daa
rcrb
inc
pop
and
add
outsl
mov
call
cmp
cli
test
xchg
lcall
and
and
pop
inc
push
scas
outsb
bound
out
push
cmp
adc
add
out
sahf
out
aaa
or
sahf
ds
ss
adc
mov
xlat
push
jo
mov
mov
ficoms
scas
les
test
rorb
xor
lock
pushf
movsb
fcoms
or
loop
jae
cmp
repz
insl
fisubrl
imulb
outsb
cmpsl
shrl
jecxz
dec
outsl
add
idivb
iret
sti
dec
jno
jle
jb
ds
sahf
lea
lcall
xor
out
push
mov
mov
push
inc
test
jbe
push
jmp
push
xchg
push
and
or
movsl
push
and
jns
int3
xor
ds
jnp
negl
push
sub
shlb
jl
jge
pop
and
out
stc
push
add
popf
fs
js
fdivrs
jnp
cmp
lea
jnp
outsl
cmpsl
push
loopne
lcall
adc
es
jns
and
cmpsb
inc
push
and
cmpl
movsb
push
jg
xchg
mov
fstp
pop
out
add
fistps
scas
push
rolb
or
jge
mov
add
cmpsl
pop
dec
push
data16
xsha1
cmpsb
iret
js
addl
push
pop
cmp
or
ret
call
jnp
mov
jbe
loopne
ret
push
out
ds
mov
popa
cmpl
inc
pop
add
xchg
and
mov
ds
jnp
das
jmp
mov
xchg
nop
pop
das
shrb
lods
and
sbbl
xchg
cltd
push
push
and
fsubl
cwtl
sbb
mov
lahf
fstpt
xchg
ja
gs
add
add
aad
cli
jbe
outsl
loopne
sub
out
dec
adc
ss
call
cmpsb
mov
add
pop
mov
out
popf
cmpsl
push
push
push
or
cmpsb
test
adc
xchg
jl
jbe
test
leave
aad
test
fidivrs
out
rcl
mov
push
jg
dec
in
dec
repz
xchg
rcr
jbe
and
inc
jne
jns
aaa
jae
cs
mov
dec
inc
dec
or
addb
mov
add
or
dec
pop
repnz
fsubs
push
xor
mov
pop
dec
andl
mov
cmp
aaa
or
inc
xchg
rcrb
fnsave
enter
pop
jbe
bound
add
dec
lcall
lods
rcrl
or
mov
lea
or
ror
fbstp
jge
subb
loopne
fldl
aaa
push
cmp
rcl
test
aaa
xor
aaa
sti
or
inc
jne
mov
inc
pop
xor
dec
push
ljmp
and
add
push
cmpb
and
dec
mov
ficompl
or
cmpsl
adcb
testb
popa
jae
and
sub
and
pop
mov
fsubr
push
cld
dec
in
sbb
push
fmuls
ss
push
dec
cmpsl
mov
push
pushf
mov
push
jnp
negl
insb
nop
xor
push
fisubrs
fcoms
inc
ja
sub
push
inc
outsl
push
xadd
in
jo
cmp
fwait
jne
fisttps
movsb
push
mov
aam
jmp
dec
mov
cwtl
or
mov
xchg
out
push
loopne
call
rolb
jb
xchg
sbb
mov
int3
dec
dec
lahf
fsubrp
stos
sbb
popa
das
jo
popa
insl
jns
stos
push
testl
dec
rorb
scas
add
int
pop
out
inc
add
iret
lret
inc
pop
test
push
mov
dec
add
inc
arpl
insb
inc
outsl
dec
inc
xor
cmp
das
sahf
mov
ret
outsl
xor
push
push
pop
call
shrb
fs
gs
fsubs
lcall
repnz
mov
lea
push
xchg
lea
push
rolb
popa
push
insl
dec
scas
movsb
les
mov
test
hlt
push
movlps
test
cmovno
and
push
and
fldcw
mov
pusha
pop
enter
cmpsl
dec
int
pop
loop
and
enter
in
ja
int
cmp
test
or
sub
mov
insb
push
fisttpl
dec
cmp
mov
mov
sbb
test
and
jg
lahf
sbb
sbb
jg
lds
jbe
aas
lahf
adc
push
iret
bound
mov
or
aas
cld
loopne
sbb
push
inc
add
mov
lds
loopne
std
sarb
cmpsb
stos
fstpt
jecxz
dec
mov
push
rcr
nop
push
ljmp
out
lahf
pop
inc
sub
aas
sub
das
add
add
add
enter
enter
push
pop
sbbl
add
jb
pop
and
add
sbbl
adc
push
pop
sbbl
add
dec
xor
add
cs
or
add
add
add
jbe
or
mov
xor
iret
mov
cmc
mov
das
push
add
cwtl
test
xor
inc
pusha
out
cmp
repnz
pop
add
jp
iret
xchg
cwtl
add
push
into
repz
push
push
inc
sub
mov
xchg
mov
fdivrs
mov
daa
loopne
nop
and
and
dec
fldt
and
daa
add
or
imull
inc
fiadds
sahf
mov
stos
loopne
and
inc
fidivrs
xchg
daa
xor
and
or
adc
sub
adc
outsb
dec
xchg
daa
dec
aas
repnz
fcomps
cmpsl
add
push
xchg
push
enter
inc
pop
and
repnz
xacquire
daa
nop
iret
add
iret
push
nop
repnz
daa
enter
lods
pop
enter
daa
or
repz
nop
pop
or
sbb
loopne
inc
repz
xchg
clc
fwait
inc
pop
adc
loopne
jmp
xchg
sub
repz
scas
in
xor
xchg
adc
scas
mov
hlt
fldt
test
daa
or
add
test
jg
clc
sahf
or
push
nop
hlt
jne
cltd
and
fcoms
mov
ja
sbb
loopne
fistpl
sub
clc
bound
ja
cmp
arpl
push
cmc
out
pop
mov
add
das
xchg
shll
out
mov
mov
scas
xchg
call
pop
enter
notb
divb
dec
and
xchg
ljmp
testb
lods
pop
insb
nop
lahf
xchg
test
loopne
pop
and
mov
pushf
dec
cmp
xchg
push
push
leave
add
js
and
scas
call
shr
or
daa
fs
mov
clc
das
xchg
or
mov
js
outsb
frstor
nop
lahf
xchg
mov
pop
shrb
add
xchg
mov
ja
lds
out
xchg
insl
leave
dec
stc
cmpsl
push
push
enter
test
mov
mov
sub
or
lahf
sub
add
fsubrs
dec
cli
xchg
gs
or
outsl
cmpb
add
push
repnz
cwtl
xchg
test
lahf
or
sub
mov
adc
and
fistpll
sti
xchg
fsubr
dec
daa
sbbb
mov
jo
pusha
jg
gs
push
lcall
fisttps
ss
scas
xchg
cmp
shlb
pop
dec
cld
mov
pusha
daa
clc
outsl
mov
fsubrs
xchg
fsubrl
data16
cmpsl
mov
sahf
lock
std
add
sub
outsl
fldt
xchg
inc
xchg
mov
ds
insb
mov
ja
nop
scas
xchg
repnz
mov
add
sbb
and
inc
fsubs
pop
sbb
daa
xlat
in
rcr
adc
mov
outsl
das
mov
push
lahf
xchg
shlb
pop
adc
lahf
inc
jno
push
xchg
push
enter
lahf
add
cmpb
insl
leave
sub
sub
inc
incl
push
lahf
inc
js
jne
mov
pusha
and
in
add
test
incb
push
xor
enter
imulb
push
dec
xchg
xchg
pusha
daa
cmp
and
dec
mov
lahf
fidivrs
xchg
fadds
adc
mov
insb
or
mov
mov
je
push
mov
ja
sahf
pusha
cli
pop
leave
jae
add
fwait
and
lahf
xchg
jb
fsub
cltd
mov
mov
cmpl
mov
xor
imul
inc
sub
add
xchg
mov
xchg
add
fiadds
mov
bound
mov
inc
push
outsb
fldl
add
adc
cwtl
pusha
js
imul
mov
add
iret
js
or
push
xchg
nop
daa
call
mov
popf
pusha
ret
mov
lahf
and
sbb
add
push
or
cmp
pushf
pusha
jp
xchg
push
daa
inc
push
js
sub
xchg
in
scas
loopne
cs
outsb
outsl
clc
iret
mov
or
pop
jnp
sbbb
and
pop
daa
fdivrs
addb
lahf
xchg
aad
push
sbb
xor
enter
call
call
push
xchg
add
lock
daa
push
imul
ja
add
in
ret
pop
js
jo
fbld
sub
test
add
clc
test
dec
push
mov
sub
lahf
inc
pop
jno
fsubrl
push
lahf
test
push
lds
dec
nop
outsb
js
pop
pop
mov
mov
iret
xchg
mov
out
sbb
push
xor
outsb
loopne
add
adc
add
outsb
dec
xchg
sub
dec
insb
das
cmpl
push
outsb
mov
orb
or
sbbl
and
enter
call
xchg
iret
call
pushf
inc
cmp
and
in
jbe
jb
or
cltd
inc
ds
mov
add
add
lahf
push
fmuls
pop
lock
or
or
xchg
or
mov
clc
cs
mov
outsb
sub
outsl
mov
cmpsl
xchg
call
seto
test
inc
pop
shrb
outsb
enter
cmp
loopne
fistl
and
push
outsb
fisttps
add
push
repnz
ja
daa
rcr
jb
pop
fsubrs
and
add
rolb
daa
ja
clc
mov
or
outsl
pushf
bound
sbb
or
dec
or
mov
daa
and
shl
dec
inc
iret
cwtl
orb
mov
add
iret
xchg
daa
ret
mov
cs
sbb
sub
ss
xchg
out
test
pop
out
sbb
mov
daa
mov
iret
pusha
or
js
xchg
jecxz
jo
mov
enter
bound
ja
daa
pusha
mov
mov
xor
jnp
lcall
mov
inc
xlat
pop
add
pop
pusha
sbb
jmp
inc
xchg
lock
dec
push
das
jmp
pushw
lods
pop
inc
daa
push
enter
orb
maxps
outsb
cmpxchg
adc
jo
in
sub
cwtl
loope
xor
adc
xchg
and
adc
enter
pop
fwait
and
and
stc
dec
call
push
adc
pop
jb
jo
mov
test
dec
outsb
mov
mov
in
sbb
pop
call
mov
push
enter
lock
push
enter
nop
sub
xchg
sub
mov
push
loopne
xor
sbb
xchg
adc
popf
out
add
add
xlat
fs
pop
mov
leave
pop
sub
and
mov
push
enter
syscall
dec
shl
or
popf
dec
pop
mov
add
adc
adc
dec
add
popf
int3
inc
fcmovne
inc
push
jg
jg
outsb
daa
push
jo
pop
push
pop
pop
add
cwtl
bt
jns
leave
scas
mov
jo
sub
lahf
loopne
lock
jl
and
sahf
dec
prefetchnta
sub
iret
xor
out
jns
dec
or
push
out
mov
data16
add
test
in
push
pop
lods
mov
xchg
and
adc
sahf
je
cmp
test
aas
cmp
popf
sub
pusha
dec
and
sub
outsl
add
adc
lahf
pop
enter
mov
cmp
mov
push
popf
fcmovne
adc
mov
pop
rol
sarl
mov
int3
add
lahf
add
test
and
int
out
push
cmpsl
xor
xchg
dec
push
das
pop
dec
push
jne
or
mov
das
pop
pop
push
fs
dec
xor
pop
rolb
xor
clc
mov
add
xlat
scas
nop
imul
jle
pop
and
sahf
sbb
pop
xor
stos
mov
out
add
pop
jb
mov
mov
cwtl
sbb
incb
nop
sub
sbb
rcrl
dec
mov
sbb
and
nop
dec
scas
inc
push
dec
nop
adcb
loopne
enter
or
loopne
test
add
jns
cmpsb
vpmacsdqh
scas
fdivs
mov
adc
pop
or
pusha
push
cmpsl
out
push
pop
pop
mov
nop
or
daa
cwtl
mov
xchg
sub
sbb
ffreep
enter
bound
jo
xchg
imul
out
movsb
wrmsr
sub
shrl
rcrb
iret
call
leave
push
movsb
add
cmovb
dec
add
sbb
subb
cs
ja
nop
cvtdq2ps
adc
cwtl
push
add
bound
aaa
jg
fcomps
jae
pop
enter
js
cmp
pop
clc
adc
lahf
and
push
sbb
dec
dec
scas
pusha
push
iret
jmp
test
xchg
push
add
add
scas
push
mov
cmp
or
or
or
sahf
cmpsl
stc
cmp
add
sahf
out
push
push
sub
cmp
jns
out
dec
adc
sahf
out
sahf
adc
adcb
push
pushf
pop
stos
out
sahf
out
mov
out
sahf
aam
loop
lock
push
or
pop
sub
je
fisubs
sbb
dec
cmovs
and
in
mov
dec
and
in
sbb
cmpsl
decl
sbb
jb
cmpsl
mov
shlb
inc
fsubl
sbb
jb
push
test
test
test
test
and
ds
test
test
jb
enter
test
test
test
inc
mov
test
test
test
jb
enter
test
test
test
iret
sbb
add
push
repz
repz
cmp
dec
push
andb
add
and
dec
jp
and
outsl
js
popf
add
mov
and
mov
insb
popl
fadd
aas
fdivrl
dec
inc
pop
or
into
jae
mov
cwtl
or
jmp
jb
cltd
and
loopne
push
sub
js
test
lds
stos
decl
fidivrs
cmovs
iret
mov
dec
fcoms
sub
dec
adc
sub
in
jmp
and
dec
push
and
and
xchg
inc
cmpxchg
stos
push
fcoms
sbb
and
inc
ss
aad
ja
das
btc
out
sahf
add
dec
dec
pop
fnstcw
rep
push
call
outsb
or
or
jne
jge
test
in
xchg
pop
lea
out
sahf
out
adc
adc
dec
ljmp
mov
add
in
sub
push
sbb
and
mov
pop
iret
mov
outsb
vmwrite
add
cmp
repz
popl
xchg
pop
mov
repnz
lds
in
rorb
popf
pushf
pop
jo
scas
call
adc
lods
lahf
xchg
sub
mov
in
xchg
xchg
lods
inc
lods
push
add
jns
in
insl
dec
jne
push
addb
iret
repz
mov
out
xchg
or
cmp
rcl
insl
pop
out
fmul
iret
and
fdivs
daa
aaa
inc
call
sub
outsl
daa
daa
xor
pop
dec
scas
jb
lds
push
jo
ljmp
adc
cmp
outsl
cwtl
scas
in
and
out
shrb
lcall
dec
pop
and
dec
lock
sbb
and
cmp
push
inc
add
sub
jae
imull
and
ja
scas
mov
cmpsl
ret
pslld
mov
das
flds
in
or
js
scas
scas
and
leave
adc
dec
xor
push
mov
sub
mov
or
call
setl
lcall
xchg
mov
cmp
xchg
mov
and
lret
push
shrl
or
jmp
add
iret
mov
adc
pop
pop
inc
xor
je
outsl
push
sub
scas
mov
mov
push
out
sbb
add
jo
pop
jle
mov
sub
xchg
fxch
adc
mov
push
inc
dec
xchg
pop
insb
mov
add
loopne
mov
pop
jo
scas
das
push
dec
shrb
fcoms
out
cld
mov
pushf
loope
dec
and
cmpsb
pusha
sub
dec
rclb
jae
push
dec
add
jo
fldt
xchg
xchg
iret
in
mov
cmp
pop
dec
pusha
sub
xchg
sub
mov
sub
xchg
lock
mov
xor
inc
ljmp
sub
inc
pop
cmpsb
xchg
mov
mov
xlat
xor
cmp
push
mov
push
pop
push
pop
fucomi
in
add
dec
orb
bound
rorb
outsb
push
in
push
dec
shrb
fisttps
fdivrs
in
adc
sti
xor
adc
mov
pop
cwtl
or
adc
in
mov
arpl
and
in
jns
sub
loopne
nop
mov
mov
in
sub
sub
pop
and
mov
cs
dec
jb
jbe
mov
sarb
in
pcmpgtd
pmulhuw
clc
mov
xchg
dec
and
adc
add
nop
aas
push
das
mov
mov
xor
mov
out
mov
mov
cmpsl
in
shrb
fsubrs
mov
mov
pop
inc
fs
cmp
loopne
in
stos
mov
jo
push
js
outsl
shlb
daa
push
lock
pop
enter
adc
mov
scas
ljmp
bound
pushf
inc
mov
mov
jb
pop
mov
pop
jb
pop
andb
rcl
fldcw
loopne
clc
xor
xor
daa
in
add
dec
dec
xor
push
xor
cwtl
dec
pusha
xor
and
cwtl
pop
mov
pop
push
sub
lods
dec
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
in
lock
mov
mov
adc
mov
mov
push
mov
pop
mov
jno
iret
repz
jl
xchg
repz
repz
pop
popf
and
and
cmp
repz
aam
fbld
fstpt
iret
repz
ret
mov
push
repz
repz
sub
sub
aaa
cs
das
dec
xor
xor
and
das
inc
mov
mov
enter
mov
mov
jb
mov
adc
pop
mov
sbb
jb
dec
mov
jae
xchg
and
cmpl
stos
mov
outsl
mov
adc
push
mov
iret
idivb
push
sub
rclb
lcall
imul
and
femms
or
mov
and
pushf
pop
mov
pop
and
scas
rorb
dec
pop
and
dec
scas
nop
call
enter
cmp
push
enter
enter
mov
push
rcrb
loopne
adc
out
mov
cmp
mov
pop
mov
and
add
jb
mov
mov
outsl
mov
outsb
daa
iret
adc
mov
loopne
mov
out
rorb
fisttpll
sahf
or
das
call
mov
or
arpl
add
mov
dec
outsl
aaa
cmovs
push
mov
lods
cwtl
aas
dec
xchg
mov
nop
scas
cwtl
pop
add
xchg
sub
xorb
pop
rcl
shlb
bound
call
and
push
cmp
mov
pop
bndstx
add
in
jbe
xor
inc
rsqrtps
sbb
pushf
pop
cmp
popf
fcmovne
jo
jo
adc
mov
dec
sarb
mov
pop
xor
or
pushf
pop
and
int3
adc
sahf
cmp
dec
mov
pusha
mov
push
rorb
cmp
mov
dec
sub
pop
jo
scas
push
dec
loopne
call
lock
pop
add
rcrl
decl
test
ror
shl
movsl
nop
ljmp
lock
roll
jg
pop
shrl
mov
push
outsb
out
dec
nop
cmpsl
pop
jb
lock
enter
cmp
xchg
sub
jnp
inc
ljmp
pop
jns
sahf
out
in
pop
loopne
jbe
out
incl
push
push
pop
push
pop
add
test
cwtl
seto
dec
repnz
pop
aas
mov
das
aas
mov
jo,pt
aas
mov
sbb
nop
enter
pop
xor
pop
rolb
fmuls
push
fbstp
or
ds
or
ss
in
dec
inc
or
fistpll
dec
rcr
sbb
jo
push
testl
and
inc
out
jo
add
jbe
iret
mov
addr16
iret
jmp
dec
mov
loopne
pop
in
xchg
fists
ret
inc
outsb
nop
cmp
ret
pop
and
into
insb
pop
jmp
inc
pop
in
push
sbb
dec
fbld
mov
pop
dec
aas
fcompl
aaa
jmp
xor
or
shl
or
mov
inc
mov
sbb
sar
and
scas
js
leave
xchg
push
enter
sbb
cltd
in
xor
xor
clc
jns
in
push
pop
pop
sub
in
or
or
cmp
add
les
int3
aas
aam
in
sbb
outsb
push
enter
test
and
lds
push
mov
jg
dec
pop
mov
in
push
outsl
pop
outsl
jo
divb
pop
adcb
nop
dec
cwtl
mov
dec
scas
pop
stos
call
fmuls
popf
fmull
loopne
iret
add
scas
nop
imul
scas
nop
dec
push
inc
popf
sub
xchg
dec
pusha
or
jo
mov
adc
fdivs
or
inc
push
ret
mov
int
mov
das
adcb
dec
ud2
repz
dec
dec
out
filds
je
push
inc
and
inc
and
and
inc
fadds
adc
sbb
paddsb
cmc
mov
inc
mov
push
leave
js
mov
pop
outsb
les
shlb
ret
outsl
mov
inc
inc
inc
mov
inc
inc
mov
inc
inc
enter
inc
inc
inc
inc
enter
inc
inc
inc
inc
enter
add
enter
sub
dec
lahf
enter
ud0
enter
ja
sub
push
pop
push
leave
imul
jno
or
inc
dec
scas
nop
xor
outsb
pop
pop
xor
vmread
adcb
and
outsl
nop
mov
sbb
scas
loopne
lds
iret
fmuls
inc
lock
and
fwait
pinsrw
add
dec
and
lret
mov
jbe
das
pop
aaa
mov
jo
js
mov
cwtl
lock
lock
mov
lret
xlat
push
or
scas
dec
dec
movsl
or
lock
clc
lret
test
mov
lret
out
lret
idivl
sub
add
leave
adc
enter
iret
leave
push
or
pushf
pushf
lcall
fs
fsubp
in
in
in
cli
pop
or
aas
adc
scas
pop
mov
mov
cs
inc
cs
dec
and
sbb
push
jmp
rorb
fdivrs
call
int3
xor
dec
int
and
int
shlb
mov
push
dec
push
inc
lods
fisttps
int
pop
mov
jb
mov
jb
test
and
imul
sbb
pop
int
out
xor
xlat
outsl
leave
adc
mov
mov
pop
push
push
or
push
js
mov
repz
rep
add
add
iret
push
int
das
loopne
call
outsl
lock
clc
incb
iret
xchg
inc
enter
iret
movsb
cmp
push
dec
inc
pop
dec
add
cwtl
iret
mov
push
scas
seto
cmp
cmp
push
out
scas
iret
adc
xor
dec
jg
push
add
add
add
cmp
leave
enter
sbb
pushf
pushf
xor
dec
or
pushf
cmp
push
or
loopne
notl
fiadds
cmp
ror
sub
add
mov
xchg
xchg
xchg
rcl
rcr
and
enter
rcll
fisttps
enter
push
minps
xlat
push
dec
push
sbbb
scas
js
mov
inc
scas
scas
test
dec
rolb
clc
jns
fdivrl
sarb
pusha
inc
leave
and
rclb
sub
mov
jae
inc
ljmp
sub
push
rcrb
push
add
outsl
jo
mov
nop
or
dec
and
fisttps
pop
fcomps
xchg
sub
pusha
lock
rcpps
or
mov
push
btc
loopne
rcrl
lock
pop
cltd
inc
pop
jb
and
mov
push
mov
stos
add
cld
cmp
enter
push
outsb
jb
jb
rcl
push
ss
movsb
sbb
push
clc
push
sbb
cltd
inc
aam
aam
prefetcht2
aam
jg
aam
dec
mov
call
js
cmp
test
subb
cmp
in
in
loopne
lock
scas
pop
sub
adc
fbstp
push
mov
ret
aad
dec
aad
aad
pushf
scas
push
sub
jo
iret
mov
jb
mov
inc
clc
fidivrl
jg
cs
out
loopne
pop
cmpxchg
mov
pop
mov
jmp
decl
pop
and
jo
mov
dec
cmp
nop
imul
xor
enter
dec
dec
pusha
clc
xchg
push
enter
sub
push
enter
pop
in
cmp
sti
ja
inc
enter
inc
jnp
sarl
ds
or
push
jns
mov
iret
xchg
enter
das
and
push
in
jnp
push
xor
push
popf
mov
cwtl
pop
lds
sub
decl
push
mov
xlat
lcall
enter
dec
sbb
and
insb
enter
push
and
and
mov
or
sub
xchg
sub
pop
leave
sub
xchg
clc
orb
leave
adc
adc
clc
daa
xchg
popf
into
dec
das
sbb
pop
push
rorl
ds
push
inc
pop
mov
pop
rcrb
xlat
mov
mov
inc
add
pusha
aas
enter
sub
int
lahf
faddl
iret
or
rcll
fsubs
hlt
fisubrs
inc
inc
dec
push
pop
pusha
js
ret
out
inc
adc
out
jg
pop
dec
aaa
cltd
inc
movsb
call
pop
enter
clc
test
ljmp
pop
and
xor
push
pop
pusha
pop
repnz
nop
adc
les
or
dec
test
fadds
mov
dec
dec
pop
icebp
scas
fcos
pushf
in
shll
fnstenv
pusha
daa
movsb
inc
mov
pop
xor
scas
int
dec
enter
pop
roll
mov
cmp
dec
rclb
enter
in
sub
adc
cmp
in
sub
mov
sub
mov
fcos
cmp
jg
sbb
outsb
paddsb
bound
scas
nop
imul
cmc
mov
fisubrl
jbe
adc
nop
call
mov
in
jo
scas
movsl
cwtl
hlt
adc
dec
cmp
mov
adc
pushf
pop
jo
mov
add
sub
ljmp
adc
pop
call
clc
lock
nop
imul
inc
scas
nop
dec
scas
xor
fistpl
adc
decl
fldt
pop
rorb
lock
sub
mov
dec
sbb
in
sub
inc
fsubrs
in
sub
nop
into
adc
decl
and
inc
in
add
cmp
and
ja
xchg
adc
movsl
lahf
decl
cmpsb
fsubs
cmp
fsubrl
insb
add
nop
dec
scas
nop
nop
je
scas
nop
dec
scas
mov
pushf
and
addr16
and
pop
push
enter
sub
push
enter
fucom
xchg
sub
clc
cmp
pushf
sub
aaa
outsl
fwait
call
and
jb
cmp
mov
adc
incl
mov
mov
leave
mov
xchg
imul
xlat
jo
popl
xchg
dec
inc
jo
pop
push
sub
loope
push
enter
imul
enter
dec
push
ljmp
sub
dec
imul
nopl
fidivrs
mov
jb
pop
dec
fimuls
lock
imul
pushf
or
imul
inc
lcall
test
imul
cltd
loop
lahf
fimuls
mov
mov
xchg
dec
inc
xchg
sub
mov
cltd
inc
mov
enter
fisubrs
jg
pop
loopne
punpckhbw
inc
pop
js
nop
insb
sub
out
shrb
sub
incl
insl
adc
adc
pop
inc
xchg
pop
orl
xor
dec
insl
sub
jo
pop
sbb
dec
push
nopl
insl
insl
loopne
cmp
clc
mov
repnz
dec
xchg
sub
push
ja
jl
xchg
xchg
sub
sbb
pushf
mov
jg
pushf
stos
push
loopne
scas
enter
cmp
daa
inc
lock
scas
pop
inc
xchg
mov
mov
shll
in
imul
jb
mov
scas
repnz
in
clc
adc
loopne
push
rolb
pop
push
jo
mov
test
iret
dec
jno
notb
scas
cwtl
jo
cmp
mov
outsl
enter
sub
sub
xor
adc
maxps
dec
js
in
sub
mov
xchg
sub
lock
enter
add
sbb
andl
mov
dec
js
inc
cs
mov
loope
cmp
jb
lock
jae
jae
adc
sub
outsl
inc
iret
dec
add
and
scas
movsb
movsl
in
stos
mov
pop
mov
lods
sbb
xor
jae
pop
test
iret
in
jo
je
je
adc
and
jg
xorb
sar
jno
pop
mov
pop
mov
xchg
cmp
mov
dec
test
outsl
jns
repnz
jne
jne
arpl
pop
mov
subb
pushl
in
push
sub
call
xchg
sub
sub
push
enter
push
jbe
pop
and
and
dec
sub
xchg
out
mov
mov
push
sahf
sbb
imul
loop
push
fdivs
icebp
push
gs
scas
pusha
ja
xor
xor
jo
push
out
push
sbb
sub
ja
mov
mov
mov
mov
mov
ja
out
mov
test
adc
das
icebp
jbe
unpckhps
dec
sbb
jbe
cmp
pop
hlt
dec
jmp
leave
lret
or
daa
daa
mov
das
ret
inc
ds
adc
pop
xchg
push
pop
jo
js
lcall
popf
xchg
sub
nop
xor
xchg
dec
leave
dec
jns
mov
nop
outsb
dec
and
dec
mov
aam
call
or
jns
imul
mov
jp
sub
pushf
dec
jp
jo
jb
xchg
cwtl
mov
adc
cmp
jp
fdivs
popa
sub
inc
scas
js
xor
push
jnp
js
jb
jp
pop
add
xchg
in
cmp
dec
jns
fadd
dec
in
clc
jnp
jl
inc
leave
and
sub
in
rcrl
loopne
mov
scas
xchg
sub
pop
dec
add
aas
mov
nop
inc
mov
dec
fisubrl
cltd
ficoml
daa
out
mov
pushf
push
mov
pop
xchg
xorb
dec
cmpsb
adc
xchg
dec
push
or
rorb
and
leave
and
jo
popa
fcmovu
push
jo
push
dec
dec
hlt
cmpsl
mov
push
int3
sbb
push
sub
mov
sbb
adcb
sbb
push
leave
sub
and
push
inc
push
push
add
add
mov
cmp
jno
cltd
gs
add
mov
outsl
dec
scas
push
cwtl
popa
int
mov
arpl
popa
or
jb
out
imul
jno
cmp
push
jbe
sub
mov
arpl
dec
out
push
xor
adc
mov
stos
inc
data16
xor
cltd
mov
pop
cmpsb
das
inc
add
mov
push
iret
push
call
push
add
loopne
repnz
pusha
repz
pop
push
push
pop
cmpsb
call
cmpsl
stc
push
cmp
jp
lahf
pop
outsl
push
jns
data16
test
mov
jmp
sahf
mov
and
or
add
inc
aam
in
xlat
je
imul
les
repz
shlb
cmpb
movsb
hlt
add
pop
sti
mov
mov
jbe
lahf
pop
repz
lret
orb
add
sub
and
mov
repnz
aas
rcrb
mov
dec
gs
xor
fstps
lret
adc
aam
or
in
xor
daa
adc
push
sbb
in
in
cmp
sub
jmp
rcll
cmpsl
push
leave
adc
stos
pop
sbbb
in
popf
mov
pop
dec
in
push
jb
stc
daa
cmc
shrb
jmp
pop
pop
aas
dec
mov
mov
mov
add
ja
daa
adc
and
push
or
push
jb
pop
cli
cld
add
cmp
add
nop
dec
ret
mov
jmp
add
jno
movl
sbb
push
dec
stc
jg
subb
pminub
push
daa
lds
testl
cmpsl
icebp
or
add
and
out
mov
out
dec
sub
push
aad
dec
pop
and
adc
sub
mov
add
decl
or
scas
test
sub
mull
cs
dec
pop
jmp
mov
sbb
push
pop
sbb
or
mov
xchg
or
dec
inc
inc
or
jmp
stos
nop
push
daa
outsl
je
mov
add
bound
out
pop
aad
stos
mov
push
and
notl
add
adc
aaa
clc
mov
jmp
or
popa
aam
pop
pop
in
dec
add
andb
xor
jg
imul
push
in
daa
add
test
addr16
daa
dec
sub
sbb
aas
mov
inc
adcb
adc
inc
adcb
pop
adc
xchg
jg
sub
add
adcl
aas
out
shrb
ja
add
mov
aaa
sub
inc
xchg
pop
adc
and
daa
jno
stos
movsb
testl
daa
es
test
les
or
mov
inc
sub
add
sub
adcl
adc
sahf
add
push
adc
add
bound
rorb
pop
inc
dec
add
add
test
jg
pop
add
arpl
jmp
add
xlat
inc
pop
jo
out
pop
adc
sub
dec
xchg
mov
sbb
mov
jg
push
xor
add
add
pmaddwd
pop
mov
daa
mov
test
cmpsl
adc
mov
test
sub
nop
adc
das
pushf
push
je
inc
xchg
inc
dec
add
fs
pop
stos
cmpsl
out
test
adc
mov
add
scas
pop
add
test
dec
add
aas
xor
add
or
lcall
pop
scas
cmp
addl
inc
xchg
pop
jne
add
cmp
dec
push
gs
leave
test
dec
xor
sbbb
push
and
adc
and
bound
push
and
insb
dec
sbbb
or
push
push
pop
inc
dec
mov
xlat
push
clc
daa
in
push
inc
adc
incl
dec
inc
mov
dec
out
stc
and
mov
pop
enter
std
dec
incb
int
mov
mov
push
movsl
repz
pushf
mov
pushl
push
sbb
in
push
je
add
mov
sbb
and
daa
add
adc
pop
or
stos
and
cwtl
clc
mov
and
adc
out
jae
sub
push
pop
movsb
adc
dec
insb
jecxz
xor
push
inc
cltd
out
imul
loop
adc
sub
mov
cmp
repz
repz
add
cmp
test
movsb
or
cmp
or
iret
repz
or
cmp
mov
test
adcb
iret
repz
adc
je
cmp
repz
adc
cmp
push
sbb
repz
sbb
push
repz
repz
sbb
cmp
dec
pop
inc
and
cmp
repz
and
and
cmp
repz
and
cmp
sbb
sbb
adc
cmp
repz
sub
or
cmp
repz
sub
sahf
out
cmp
clc
xor
sahf
out
sahf
xor
xor
xor
jns
out
xor
xor
sahf
out
aaa
fcom
add
pop
movsb
ljmp
adc
cmp
lods
inc
outsb
push
cwtl
nop
iret
repz
mov
cmp
repz
push
dec
inc
cmp
cmp
repz
and
adc
imul
inc
lock
loopne
aam
int3
enter
jns
sarb
mov
test
cwtl
sahf
out
sahf
nop
mov
sahf
out
pusha
push
dec
cmp
repz
out
sbb
hlt
aas
iret
repz
call
lods
cmp
repz
mov
repz
repz
cmp
sbb
sarb
out
ds
call
xchg
dec
push
sbb
sahf
test
rolb
rcrb
sahf
mov
jo
jmp
iret
dec
push
sahf
out
sahf
dec
std
cmp
sub
jl
out
sbb
or
clc
dec
repz
sar
loopne
shl
iret
repz
mov
repz
repz
repnz
icebp
pop
ds
cmp
out
fisttps
out
rorb
out
in
mov
pushf
jmp
jns
out
ljmp
mov
out
out
push
cmp
repz
outsl
push
in
jecxz
iret
repz
loop
push
loope
loopne
lcall
in
dec
fucom
sahf
out
aam
lods
fstpt
out
out
fidivrl
fsts
push
mov
sub
add
mov
dec
repz
imul
iret
repz
mov
mov
iret
repz
into
pop
int
repz
repz
xor
or
out
sahf
out
inc
leave
ror
mov
test
nop
lds
push
les
mov
ret
out
jns
pop
rorl
sarb
cmp
mov
add
pop
inc
out
mov
out
int3
mov
out
out
mov
push
mov
mov
dec
stos
cmp
push
mov
adc
cmp
repz
nop
mov
stos
mov
push
ljmp
cmp
xor
push
push
dec
inc
cmp
sub
sbb
and
and
add
fistpll
add
or
call
negl
push
sbb
fmuls
add
mov
fidivl
jnp
rolb
pop
and
jge
fidivs
add
sbb
cwtl
xlat
fidivs
lar
adc
mov
js
jo
mov
jmp
loopne
push
pusha
pop
dec
repz
push
fcomp
dec
cmp
inc
scas
nop
cmp
mov
xor
outsb
sub
pusha
ds
jmp
pop
and
sbb
push
adc
pop
loop
movsl
shrl
or
xchg
test
sub
je
push
outsb
bound
xchg
or
add
pop
add
sub
add
nop
push
mov
cld
dec
mov
sub
inc
mov
sub
bound
out
aaa
or
popa
jae
imul
aas
xor
inc
aas
cli
and
fadds
es
fwait
xchg
cs
cmp
jae,pt
or
add
mov
or
data16
sub
push
cmp
and
dec
and
sub
fs
outsl
inc
cmpb
xchg
das
dec
popa
outsb
cmp
arpl
push
xchg
ss
and
stos
stc
inc
pop
js
imul
popf
add
inc
dec
push
dec
inc
inc
push
pop
inc
imul
in
gs
adc
fdivs
or
sub
in
pop
daa
push
jne
xorb
add
inc
popa
es
xchg
arpl
dec
repz
imul
bound
cmp
outsl
push
and
sub
xor
inc
push
push
dec
push
leave
push
dec
push
or
ror
mov
icebp
notl
hlt
popa
push
pop
fisubl
and
mov
cmpsb
es
aas
iret
in
shll
ss
add
clc
ret
push
nop
pop
pop
add
mov
bound
add
dec
dec
pop
sub
sbb
pop
mov
push
mov
popa
out
mov
push
mov
shr
enter
add
hlt
pop
in
mov
and
push
xchg
daa
lahf
cmp
fsubs
dec
call
das
in
push
pop
mov
and
movb
notl
pop
or
pushf
ja
mov
cs
pop
lahf
mov
cs
nop
mov
or
pusha
pop
in
cmp
jns
push
dec
jmp
cmp
in
xor
repz
out
adc
call
add
push
rolb
mov
dec
sahf
testl
cmp
fucom
jns
clc
les
push
lods
outsb
addb
ja
repz
push
push
mov
not
fisubl
dec
cmp
rclb
mov
mov
testb
jg
mov
int3
loop
add
sbb
lret
daa
add
nop
std
mov
mov
lods
int3
cmc
jae
scas
popf
push
sub
das
mov
loop
xchg
inc
mov
mov
ss
xchg
ss
cmp
or
sbb
or
mov
fs
iret
aam
mov
mov
nop
dec
xchg
ret
out
insb
testl
pop
decl
adc
xor
hlt
rcl
add
stos
aad
mov
rcl
jnp
in
pop
sub
mov
stos
xlat
aam
mov
mov
mov
xorb
les
mov
sarl
out
out
dec
sub
or
cli
insb
mov
mov
iret
fbld
scas
ljmp
ror
or
jge
ja
adc
mov
push
pop
sub
int3
in
dec
loopne
cld
mov
daa
mov
push
gs
mov
loop
sub
adc
and
outsb
pop
mov
mull
mov
and
jbe
pop
adc
lret
addr16
mov
pop
xorb
fbstp
je
push
mov
xchg
mov
mov
mov
pop
test
sbb
xorl
ss
fbld
stos
dec
rol
mov
pusha
or
aas
daa
shr
pop
mov
fsubs
mov
icebp
mov
lret
sahf
push
or
cmpsb
shr
shr
loope
movsl
clc
outsb
mov
and
cmp
adc
mov
inc
xchg
cwtl
or
iret
push
push
mov
mov
mov
adc
xchg
cmp
sub
outsl
pop
adcb
push
ds
inc
or
lret
int
pushf
loop
outsl
cmp
mov
push
pop
lret
shr
adc
adcb
push
into
fstl
insl
out
mov
sub
popa
jb
and
or
fisttpl
loopne
xchg
push
outsl
mov
xchg
pop
dec
or
ret
jnp
ret
shrb
xor
xchg
lcall
sub
lods
pusha
imul
out
and
mov
mov
xchg
ljmp
xchg
adc
cmpsb
int
notl
sahf
dec
daa
out
fidivl
inc
cmp
shrb
mov
sub
xor
out
mov
mov
movsl
mov
and
aas
mov
fcompl
xchg
push
mov
scas
loop
push
loop
push
mov
leave
ljmp
cltd
push
mov
vpsubq
cmpsl
out
pop
inc
fs
stos
xchg
pop
push
mov
mov
mov
jo
push
daa
add
jb
mov
push
mov
fdivrp
pop
pusha
sub
ljmp
dec
in
push
aas
bound
adc
add
push
jo
and
dec
pusha
dec
adc
loope
or
mov
mov
pop
das
imul
scas
dec
mov
xchg
or
push
imul
pop
sub
jae
jbe
mov
imul
fwait
out
mov
fdivrl
and
xlat
cmpsl
adc
pop
cs
jecxz
mov
mov
mov
and
lods
pop
push
rcr
sbb
ljmp
aam
ret
mov
mov
xor
and
arpl
test
xchg
scas
push
xchg
xchg
test
push
xchg
mov
sbb
imul
add
pop
js
push
push
add
add
arpl
push
mov
xlat
mov
push
iret
fisttps
insb
mov
pop
addl
add
das
pop
push
movsl
mov
pop
mov
in
scas
aas
aas
fiaddl
aas
out
aas
adc
mov
rdmsr
movsl
rcll
bound
pushl
das
rclb
cmpsl
lahf
add
add
das
lar
loopne
stos
movq
das
sub
das
fisubrl
pusha
imul
xchg
xlat
aas
movsl
roll
dec
dec
pop
push
jg
sub
dec
vpshld
or
outsb
fs
imul
push
sub
das
push
adc
sub
pop
xlat
das
lar
dec
pop
mov
aas
add
add
das
pop
fiaddl
unpckhps
sub
or
sidtl
test
push
repnz
pop
push
addr16
stos
add
pop
pop
cmp
movsl
sub
rclb
mov
or
cmovg
sub
pushf
dec
adc
add
data16
and
pop
fidivrl
adc
mov
xchg
mov
cmove
dec
pop
aas
lfs
push
sub
pop
dec
adc
lods
or
iret
pusha
imul
test
movq
dec
push
rcl
inc
lret
mov
outsl
sbb
and
xchg
xlat
jg
dec
lds
fs
leave
jb
adc
movsl
push
inc
scas
outsl
imulb
push
sub
movsl
push
mov
aaa
lahf
dec
fldt
sub
mov
mov
pop
adc
rorb
pop
jge
mov
pop
mov
push
push
lea
or
mov
jp
or
dec
outsb
pop
xor
ret
in
push
dec
xor
mov
sub
pop
aas
push
xor
sub
adc
insl
gs
inc
out
in
or
jo
mov
pop
cs
movsb
sub
cwtl
dec
jnp
and
push
adc
mov
aas
mov
addl
orl
aas
xchg
push
lds
aas
dec
arpl
outsb
dec
adc
mov
outsl
out
push
aam
and
data16
push
fisubrs
mov
sub
push
jno
sbb
dec
pusha
loopne
or
push
movntps
scas
sub
lods
or
push
and
iret
test
lds
bound
pop
push
add
andl
dec
arpl
das
xchg
lcall
inc
pop
mov
cltd
lahf
repz
inc
movsl
mov
shrl
aas
test
xor
mov
les
inc
lahf
push
pop
sub
add
xor
and
push
jo
filds
or
xor
mov
scas
pop
dec
mov
sbb
ret
inc
inc
insl
bound
jae
sub
and
push
and
insl
add
xor
and
faddl
aas
push
dec
dec
das
pop
pop
adc
das
ret
mov
jbe
mov
cvttps2pi
push
cmp
aas
push
addb
popf
out
adc
test
aas
sbbb
mov
xchg
adcl
mov
mulb
mov
push
mov
or
mov
outsb
rcll
pop
cmp
mov
aas
mov
pusha
shrl
rcr
inc
or
mov
push
xor
outsl
xchg
mov
cs
sbb
mov
push
ficompl
jg
and
mov
fcomps
push
push
es
out
or
or
cmp
sarl
clc
lock
repz
shlb
test
pop
mov
out
xchg
nop
mov
out
jo
pusha
pop
push
iret
repz
push
dec
cmp
sub
adc
pop
sbb
lock
incl
dec
mov
inc
das
xor
mov
cmp
das
in
push
popf
out
sahf
mov
mov
fs
xlat
dec
cmp
adc
adc
jecxz
repz
adc
lcall
call
out
sarb
mov
jp
mulb
push
insb
sahf
decl
pop
sbb
xor
lahf
mov
sub
pop
stos
or
sbb
push
addb
out
sbb
repz
pushf
sbb
repz
and
repz
repz
iret
repz
pop
add
cmp
repz
and
inc
repz
repz
adc
cmp
sub
and
sbb
cmp
repz
push
or
add
out
and
in
clc
and
and
hlt
bsf
outsb
lcall
movsl
stos
mov
mov
ret
stc
sbb
sub
dec
outsb
jae
sahf
out
lea
cmp
out
adc
xor
iret
repz
push
push
xchg
mov
lcall
push
sub
jns
pop
pop
jns
out
sahf
out
mov
fdivrp
iret
repz
add
sbb
cmp
repz
mov
iret
repz
adc
inc
lock
adc
add
fdivrl
cmp
or
ja
ficoml
pop
in
inc
into
jnp
pop
add
rolb
sysenter
jmp
pop
clc
inc
inc
sbb
cvttps2pi
sbb
dec
test
add
ss
sbb
push
movlps
adc
nop
movsl
push
and
movsl
testl
mov
and
add
xor
push
subl
adc
mov
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
sub
add
dec
stos
or
shrb
adc
test
inc
dec
inc
add
add
add
adc
push
adc
or
faddp
pusha
pop
clc
xchg
loope
add
shlb
or
or
add
add
mov
ret
or
adc
cmpsb
push
add
cmpsl
test
or
add
popa
loope
mov
push
dec
pop
pop
aaa
jnp
inc
mov
or
or
in
insl
dec
sub
add
test
push
push
andl
popa
xor
mov
push
inc
or
aaa
insb
push
pop
mov
sbb
push
outsl
loope
ret
push
stos
add
and
ret
dec
add
cmp
sbb
lds
outsb
mov
xchg
popa
xchg
fadds
mov
xor
sub
mov
sub
subl
xchg
lea
or
imul
add
add
or
adc
inc
push
xchg
cmp
or
add
shlb
pop
cmp
leave
addl
lds
leave
inc
addb
or
or
pop
cwtl
sub
add
int
movb
ret
insl
add
fs
mov
push
arpl
jbe
or
leave
ret
sub
xchg
test
dec
arpl
pop
mov
leave
lds
mov
jecxz
out
pop
pop
leave
ret
ja
pop
sub
fucomp
or
fs
push
cs
ret
and
push
push
mov
sarl
imul
dec
and
jae
cmp
lea
imul
ret
pop
jmp
adc
pop
jo
fisttpl
jmp
nop
jo
es
ret
pop
or
rcrl
inc
sbb
pop
mov
jne
xchg
test
fs
lea
push
cwtl
fcomi
arpl
sub
fadds
xorl
add
inc
sub
aad
test
sub
push
mov
ret
mov
and
dec
adc
sbb
pop
add
test
mov
aaa
nop
sbb
sbb
mov
mov
daa
popl
pusha
dec
xchg
out
inc
jns
push
jl
test
jnp
push
jnp
insb
xor
das
sbb
outsb
shrl
lahf
dec
dec
test
insb
lea
push
sbb
push
in
mov
xor
shrl
inc
jae
dec
xor
les
pop
mov
xor
push
addr16
sbb
adc
xor
stos
or
and
mov
nop
add
adc
pushl
popa
popa
adc
adc
sbb
and
push
pop
ficompl
jge
inc
and
out
call
cmp
inc
nop
popf
cmp
push
test
xor
or
xchg
add
sub
iret
add
add
xor
xor
push
mov
or
add
pop
pop
test
sbb
push
popa
popa
ret
push
lahf
add
and
mov
leave
inc
roll
dec
and
sbb
xor
adc
mov
mov
add
movsb
inc
mov
dec
push
outsb
nop
lret
add
xor
daa
dec
test
roll
add
loope
sub
das
cltd
cmp
cltd
inc
sub
mov
shll
jge
dec
inc
cwtl
and
and
imul
or
pop
popa
loope
or
add
push
push
xchg
mov
stc
cmp
pop
sbb
adc
pop
or
faddp
push
add
std
mov
and
test
sub
sbb
add
nop
pop
mov
or
mov
sbb
and
lds
pop
push
push
mov
jecxz
inc
sbb
fsub
nop
cmp
dec
das
xchg
adc
pop
aas
or
shll
push
jnp
jnp
and
outsb
push
sbb
dec
and
xor
sub
inc
xchg
fs
bound
dec
pop
andl
xchg
rcll
lods
fisubl
and
inc
inc
insl
adc
adc
add
movsb
test
aas
sbb
sub
cmp
adc
nop
mov
jno
jo
sbb
imul
push
jae
test
sbb
pusha
mov
cmp
xor
inc
sbb
outsb
lret
out
out
jecxz
aad
add
into
inc
and
dec
imul
push
outsb
fisubs
pop
or
mov
mov
and
shll
fsts
outsl
imul
lods
dec
loopne
xchg
add
sub
jae
sub
repz
jno
imul
stos
adc
insl
outsl
andl
shll
and
pop
add
mov
mov
sbb
and
or
push
cmpsl
shr
adc
jecxz
or
lcall
adc
cmpsb
imul
add
mov
pop
rep
add
mov
out
adc
enter
ret
test
lret
jne
adc
sub
add
inc
push
cmp
loopne
sub
add
inc
xchg
inc
cwtl
sub
lret
xor
add
adc
and
jecxz
das
dec
or
pop
insl
adc
sbb
sbb
or
adc
adc
clc
jne
inc
pop
jo
or
add
xchg
push
mov
mov
gs
sub
add
mull
add
inc
xchg
test
adc
jmp
fldcw
mov
gs
dec
outsl
and
or
or
fstps
sub
fsts
xor
notb
bound
lds
mov
fwait
xor
movsb
sti
shrl
lock
loop
mov
sub
lock
and
fs
sub
gs
adc
pop
dec
in
push
out
pop
test
dec
adc
or
dec
movl
inc
cs
fisubrs
ret
in
and
mov
adcl
push
scas
pop
addl
xor
and
xlat
bound
sbb
inc
pop
aaa
push
sub
outsl
incl
and
test
push
subl
fs
loop
sub
daa
jns
mov
je
add
mov
sub
enter
sub
stos
sbb
jg
sub
rorb
xor
push
push
mov
xor
and
cmp
adc
test
imul
or
mov
loope
stc
add
cmp
xor
jne
ret
in
sbb
lret
pop
sub
or
dec
pop
aad
mov
pusha
push
mov
sti
pop
arpl
jecxz
mov
das
inc
es
andb
mov
mov
or
imul
mov
mov
mov
inc
popa
in
dec
and
inc
pop
sbb
pop
push
les
out
pop
dec
push
stos
andl
push
dec
or
jb
push
add
lret
push
xor
sub
xor
add
xchg
test
add
imul
jb,pn
andb
cmpsb
sub
xchg
xchg
in
sub
sbb
xchg
and
popa
pop
dec
dec
pop
enter
lcall
movsb
cltd
mov
repz
mov
push
test
lret
inc
or
es
sub
pop
adc
push
bound
imul
add
and
push
sub
add
dec
push
lods
rolb
test
mov
jecxz
jnp
test
mov
and
mov
cwtl
mov
xor
test
mov
mov
xchg
mov
aad
sub
scas
test
mov
xchg
cmpsl
add
mov
pop
xor
lahf
ja
sub
cmp
fcoms
or
mov
mov
fs
push
lods
popf
cmp
sub
or
add
inc
dec
pop
out
add
xchg
mov
daa
dec
pop
js
rcrl
lret
jecxz
fists
pop
mov
or
lcall
inc
or
popa
jne
loop
pop
add
jbe
push
jb
cmp
push
push
push
or
push
pop
popf
xchg
and
movsb
and
fisubrl
sbbb
jmp
int
mov
add
adc
inc
shll
lds
test
or
add
add
add
adc
ljmp
push
inc
enter
lock
pusha
rol
leave
sbb
pop
sarb
bound
outsb
clc
push
aam
adc
jge
lods
pop
daa
and
scas
mov
aam
fildl
adc
rorb
mov
test
stos
inc
adc
dec
les
pop
xlat
push
pusha
mov
lahf
and
mov
aad
sbb
add
dec
xchg
incl
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
