lods
pop
add
add
or
lods
pop
add
add
add
add
notl
mov
rorb
fwait
xchg
dec
es
imul
jb
daa
sbb
dec
sti
arpl
and
push
xchg
bswap
jge
inc
sbb
ljmp
xor
mov
jnp
and
leave
into
cs
data16
xchg
xlat
push
mov
pushf
cmp
mov
xor
mov
xchg
xchg
out
jmp
stc
stc
jle
inc
in
pop
adc
and
loope
add
cltd
cmp
adc
push
loope
sti
rcrb
pop
mov
clc
addb
sbb
pop
cmp
ss
pop
aam
push
call
dec
aam
mov
cli
mov
shrl
jmp
jp
aam
fcoms
out
pop
xorb
pusha
dec
jo
pop
or
adc
mov
sbb
push
jp
das
test
mov
rcl
insl
xchg
mov
cmpsb
lret
xlat
mov
pop
sbb
je
xchg
cmp
mov
adc
adc
or
mov
shlb
sub
jne
scas
and
cmp
testl
mov
xchg
xchg
xor
xchg
movsl
pushf
adc
mov
adc
scas
jne
mov
xchg
xor
mov
jle
dec
add
xlat
sub
mov
data16
divl
fs
and
pop
mov
jp
jp,pt
cmp
inc
jno
jae
or
and
nop
sub
icebp
lods
mov
test
mov
sbb
or
xor
lret
mov
and
push
lret
lods
lea
or
xchg
enter
add
lret
push
scas
faddl
mov
jbe
outsl
test
sarl
cmp
aam
lock
dec
ret
mov
jae
rolb
pushl
mov
inc
gs
call
in
mov
sahf
sarl
out
mov
lock
jno
fcmovnu
rol
sarb
mov
and
add
jb
arpl
mov
jnp
or
lods
les
into
shr
sbb
mov
dec
or
int
les
inc
mov
jl
hlt
and
xchg
arpl
or
sbb
sub
in
imul
adc
mov
sub
fmull
lods
bound
call
pop
xchg
insl
stos
je
movsb
bswap
out
mov
jmp
jo
outsl
add
xor
int
lods
fidivrs
jnp
push
fwait
lret
popa
ja
mov
pop
inc
xchg
daa
xchg
cmp
popa
je
xor
pusha
fstl
cmovae
jno
cmp
xchg
jle
push
cmp
rcr
int
shrl
mov
mov
je
push
inc
ljmp
adc
pop
sbbb
mov
das
mov
adc
xorl
push
rcrl
fstpl
aaa
mov
or
out
add
ja
inc
xchg
sahf
cwtl
xchg
pop
cmc
popa
or
sbb
push
sbb
adc
sub
call
mov
jp
xchg
mov
cwtl
or
sbbb
popf
inc
jbe
xchg
xchg
lock
cmp
xchg
jno
fs
fnstsw
mov
fcmovu
push
cmc
enter
push
mov
or
inc
loop
sti
inc
idivb
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
inc
pop
lahf
push
in
push
push
cmpsb
jae
imul
jo
out
xor
mov
shrl
jmp
lock
adc
mov
cmpl
mov
js
rol
mov
outsb
mov
mov
push
xchg
push
pop
popa
cmp
iret
shlb
adc
cmp
lods
sub
jecxz
int3
in
fisttpll
cmp
or
xchg
fsubp
out
cwtl
xchg
in
sub
outsb
xchg
push
push
maxps
cld
test
dec
fidivrs
sbb
pushf
imul
jae
int3
pop
push
fsubr
or
pop
je
sub
in
paddsw
dec
pushf
ss
leave
xor
pop
xor
mov
pop
mov
mov
stos
and
lret
jbe
dec
fistl
xor
rorl
jo
sbb
mov
mov
jge
sbb
repnz
out
dec
cmp
sti
sbbl
scas
popa
fcoml
and
xor
in
or
xor
hlt
and
mov
pop
mov
call
pop
inc
repz
lock
sub
hlt
sub
out
daa
dec
or
push
pop
xchg
mov
mov
int
enter
int
jle
xchg
push
cmpb
push
dec
notb
call
or
scas
mov
iret
or
das
cs
lahf
stc
adc
lret
cmpsl
lea
arpl
imul
pop
scas
xor
repnz
fs
push
outsb
imul
in
fs
aaa
mov
pop
pop
scas
push
cmp
sbb
cmp
adc
xor
cmp
fstps
mov
adc
inc
sub
ljmp
leave
xor
std
push
test
nop
sahf
xchg
fcomi
test
test
movd
ficoms
addr16
sahf
add
push
xchg
fbld
arpl
inc
mov
cltd
xchg
fsubl
xchg
mov
scas
xor
jl
das
fidivrs
stos
xor
das
dec
pop
stos
push
mov
imul
xchg
inc
add
pop
inc
lahf
jecxz
cwtl
and
sub
lods
pushf
icebp
pop
negl
mov
add
in
and
fstps
xchg
fwait
aad
add
hlt
pop
std
push
pop
arpl
popa
xor
or
push
xchg
xchg
cmpsl
mov
inc
dec
stos
push
inc
xchg
fs
mov
mov
fmuls
xchg
pop
aaa
and
xchg
or
fcomip
push
incb
mov
xchg
push
ret
adcb
cltd
add
std
sub
pop
jns
push
and
adc
ret
xchg
xchg
stos
int3
adc
inc
fistps
pop
cmova
ljmp
mov
pop
and
or
sbb
xchg
pop
lock
je
xlat
sbb
ljmp
mov
enter
add
inc
fstl
mov
cld
in
inc
jl
shl
or
inc
cwtl
adc
aas
push
test
cmpsl
xor
in
push
pop
arpl
imul
lods
aad
inc
cwtl
lock
ljmp
pop
or
mov
bound
les
mov
lods
sbb
push
and
das
aas
jns
insb
mov
pop
cmc
in
add
pop
push
xor
adc
adc
and
xchg
shr
aam
stos
or
push
xor
sbb
jns
add
ja
xchg
mov
xchg
sub
fst
js
push
insl
add
std
mov
outsl
in
lods
je
mov
fildl
or
mov
lret
and
dec
push
jecxz
pushf
popa
cmp
loopne
sbb
ret
in
sbbl
mov
cmp
or
shlb
inc
or
sbb
mov
icebp
fidivrs
aas
aad
les
movsl
dec
or
lods
enter
xchg
push
pop
adc
jne
mov
js
inc
sub
add
loopne
xchg
lret
insb
push
xchg
dec
icebp
xchg
push
pop
lea
shr
jae
mov
popf
jae
test
push
bound
or
sbb
in
dec
sub
jecxz
incb
mov
lds
lret
aad
clc
mov
xchg
jmp
rclb
adc
push
popf
xor
int3
add
add
sahf
xor
push
pop
std
cmpsb
cs
xor
mov
push
sbb
pop
and
mov
divb
test
mov
mov
shrl
sub
or
sub
rcll
lahf
aad
orb
and
jmp
jno
push
xor
lcall
ficoms
mov
sbb
shr
dec
push
dec
pop
scas
and
notb
fisttpl
and
orps
push
lea
in
jae
ljmp
lcall
enter
sti
adc
push
ds
mull
lock
popa
stc
sbb
jne
loopne
popa
push
ret
and
mov
jb
dec
add
cs
in
lcall
gs
or
repz
jmp
jns
mov
cltd
lock
xchg
mov
fucomip
mov
xchg
mov
or
mov
cld
xor
or
xor
cli
jns
scas
xchg
sbb
daa
or
daa
imul
int
insb
ss
int
mov
push
push
add
add
out
xchg
test
xor
out
mulb
jo
imul
xor
jl
aaa
xchg
mov
cmpsb
clc
push
dec
push
mov
ror
add
repz
aam
sbb
lea
sti
mov
inc
gs
dec
scas
adc
and
nop
mov
push
repz
or
xchg
and
in
jb
addr16
out
push
jl
pop
adc
jne
xchg
ljmp
movsl
add
fst
jbe
arpl
sbb
inc
ret
push
fisubs
lods
pop
pusha
stc
or
cmpsl
and
adc
or
xchg
outsb
cmc
es
and
xchg
insl
jge
shll
fwait
repnz
loopne
pop
mov
icebp
xchg
and
pop
jns
ss
sti
xor
push
out
xchg
fcomip
rcll
stos
inc
aaa
xor
push
repz
stc
mov
or
fstpt
filds
xchg
test
popf
pop
dec
adc
ja
push
cmpsb
cmc
nop
fcomi
xorl
mov
repnz
loop
xchg
loopne
mov
add
adc
xor
inc
dec
push
or
arpl
sarl
out
rep
sahf
and
mov
imul
cmp
sub
sub
or
pop
mov
lcall
insb
add
sub
es
andb
pop
add
lock
sbb
imull
mov
adc
insl
loopne
jp
in
fldenv
adc
xor
test
mov
lods
daa
arpl
imul
jecxz
jo
pop
imul
lds
xlat
pop
fs
cmp
add
sub
cmp
xor
rorl
cmp
bound
das
imul
rolb
int
adc
add
out
movsb
aaa
mov
mov
bound
std
mov
dec
test
dec
aaa
movsl
add
push
shlb
jge
inc
pop
mov
inc
xchg
addr16
in
pop
pop
pop
mull
and
out
fildll
fiaddl
inc
arpl
or
jnp
insb
clc
jge
jae
nop
jmp
sti
in
lods
adc
sbb
test
push
cmp
push
xorb
into
clc
leave
pop
stos
push
scas
repnz
jmp
aas
pop
pusha
aaa
sub
mov
ja
and
adc
xchg
fstpt
fistpl
sbb
mov
aam
jl
push
cli
xchg
shrb
pop
cmpsl
in
and
call
lods
sub
mov
pop
add
cmp
adc
testl
jmp
lahf
cltd
testl
sub
fldenv
stos
fwait
cmp
incl
dec
js
pop
adc
push
sub
jp
cmp
jge
loope
sub
mov
pusha
sbb
and
fcmovnbe
aam
dec
imulb
shrb
arpl
sub
subl
movsl
lock
sub
xor
fwait
xlat
lcall
mov
ret
and
repz
mov
push
or
cmp
mov
sbb
fildll
adc
jmp
jbe
test
aas
subb
push
push
cs
jle
jns
mov
or
fistps
jp
lock
add
push
jg
jbe
xchg
out
mov
cwtl
out
sbb
les
pop
rolb
inc
outsl
repz
adc
shl
pop
dec
lret
pop
leave
inc
and
mov
mov
xorl
xchg
imul
adc
out
xchg
jle
add
or
adc
icebp
or
repnz
xor
cmpsl
adc
insb
push
clc
mov
mov
fdivrl
mov
dec
data16
loop
imul
cs
mov
and
push
daa
mov
dec
decl
lea
lahf
cmp
outsb
or
fcoms
jl
scas
xor
cltd
add
sbb
mov
xor
xor
lods
scas
and
sbb
mov
jne
cmp
cltd
xchg
bound
sub
loopne
jecxz
mov
das
jl
mov
jecxz
testl
movsb
pop
cmp
hlt
adcb
lods
imull
mov
bound
stos
add
push
pop
icebp
fnstcw
sbb
scas
push
std
push
in
test
mov
data16
fisubl
fldcw
push
xor
push
push
in
iret
push
xor
sbb
std
std
or
sub
pop
cltd
xor
and
xlat
inc
lret
out
cmp
fmull
jle
sbb
rol
mov
shrl
in
jns
sub
sub
mov
cwtl
xchg
cmp
out
mov
jmp
mov
jmp
ss
lret
sbb
dec
sub
add
das
lock
and
aad
leave
jge
lret
mov
and
push
pop
cmp
cmc
xor
jecxz
mov
ja
in
in
shl
add
ret
ss
jne
push
stos
fdiv
jno
and
ss
and
clc
lock
mov
rorl
shrb
or
push
push
bound
test
dec
rcrl
push
imul
adc
mov
mov
jo
dec
and
xor
inc
mov
fwait
cmpsb
addr16
cs
pushf
sarb
jo
ja
push
xor
mov
imul
xchg
dec
pop
adc
nop
or
outsl
mov
stc
inc
subb
dec
negl
shlb
xor
ss
aas
cmp
sarb
push
jno
jns
and
or
outsb
mov
cwtl
pop
rcrb
push
into
cld
fsubr
fs
insb
add
xor
xor
mov
xor
mov
shll
jl
clc
stos
mov
rcll
pop
jle
inc
insl
in
sub
sbb
insl
cmp
xor
ret
out
mov
loopne
pop
inc
xor
jge
rcrb
mov
lds
popa
adc
and
lret
xor
mov
cltd
sbb
dec
push
cld
mov
cmp
scas
fsubrl
inc
dec
xchg
lods
ja
int3
jg
or
mov
cmp
fwait
jle
pushf
xchg
mov
and
test
arpl
paddusw
stc
pop
test
mov
ss
into
out
int
sub
or
pop
jne
lret
or
imul
dec
leave
negb
inc
cmp
test
fisttps
fwait
bound
xchg
jns
adc
fyl2xp1
dec
fisubrs
mov
add
jnp
xor
xchg
inc
loopne
pop
pop
js
test
inc
das
sub
in
cli
iret
arpl
inc
jecxz
sub
cld
dec
push
aas
xor
sbb
sub
mov
jl
rclb
or
mov
fwait
les
sbb
test
mov
or
fistl
mov
and
out
jae
jb
call
inc
mov
mov
movsb
cwtl
inc
mov
xchg
cmp
cmc
lods
xchg
mov
lods
sub
ret
pop
mov
out
add
adc
cmp
fadds
repnz
mov
inc
push
mov
jge
dec
inc
adc
aad
pushf
mov
and
jbe
arpl
or
int3
rcr
cwtl
popa
mov
lods
int3
and
mov
fildl
adc
pop
push
jo
jnp
inc
pop
or
fdivrl
les
jl
fcmovnb
add
sub
ret
add
push
test
mov
loopne
push
cli
cmc
jmp
sarb
mov
fmull
mov
fs
adc
shll
into
sbb
lret
rolb
call
lahf
jge
jnp
mov
fnstcw
andl
fucompp
popa
pop
pop
test
pop
shlb
add
sbb
test
shll
jae
add
leave
pop
xchg
std
mov
mov
stos
jl
test
inc
sub
je
adc
xchg
leave
pop
mov
push
sbb
dec
jo
gs
push
ljmp
push
xor
icebp
jnp
cmc
mov
iret
push
mov
dec
adc
shrl
cmp
out
lcall
inc
mov
jns
sarl
xor
cmp
inc
or
xchg
jb
jge
add
dec
xchg
test
lods
leave
push
inc
stos
cmc
jg
sbbb
jae
cmp
and
mov
xchg
in
ss
dec
and
loopne
and
ret
mov
sbb
pop
cmp
xchg
add
pop
repnz
mov
mov
adc
sub
popa
pop
loope
and
xor
mov
dec
adc
inc
or
ret
xchg
ss
inc
out
sbb
jg
cmc
insl
addb
stc
xchg
push
fcoms
xchg
orl
xor
inc
or
pop
cltd
pushf
out
les
cmpsl
loope
or
jmp
je
rorb
outsl
lds
fcompl
sbb
jae
insl
or
inc
pop
clc
lea
jo
push
repz
push
mov
test
loope
xchg
je
int
xor
push
cmp
dec
cmp
imul
scas
sub
test
mov
xchg
jae
pop
push
cmp
outsb
imul
daa
add
lcall
mov
and
mov
or
mov
sbb
and
clc
movsl
jle
mov
dec
es
hlt
jmp
mov
cmp
mov
mov
add
push
popf
and
xor
sub
out
data16
insb
pop
lods
fidivl
add
inc
xlat
and
fnstcw
enter
mov
jmp
fidivs
ds
int
imul
gs
xorl
dec
and
jle
addl
cwtl
outsl
inc
in
daa
clc
out
sub
mov
dec
mov
or
popa
dec
cmpsl
mov
fs
movsl
in
jno
or
jne
jmp
cmp
mov
into
aas
sbb
decb
inc
enter
xor
jmp
subl
out
pop
mov
xchg
fistps
dec
pop
or
add
push
sti
push
jo
test
test
adcl
mov
mov
adc
jmp
lock
pop
adc
adc
sbb
lret
xchg
or
push
mov
mov
shlb
in
jge
adc
xchg
lahf
mov
add
unpcklps
push
mov
pop
sub
adc
shll
das
jb
or
xor
dec
std
cmc
jnp
or
xor
stc
push
dec
pop
cmp
sbb
add
stos
leave
mov
jmp
je
jl
cmp
testb
movsb
inc
xor
movsl
mov
aas
lahf
lret
stc
stos
ljmp
scas
sarl
xchg
jbe
push
daa
add
out
push
inc
xchg
shll
mov
xor
cmp
lret
test
cwtl
xor
jae
dec
sbb
fadds
adc
lret
pop
ja
divb
add
shr
push
inc
sub
cmp
or
mov
jnp
mov
and
movb
mov
or
pop
jnp
daa
popf
dec
pop
jno
mov
outsb
push
movsb
add
ficoml
mov
daa
sub
nop
cmp
divl
inc
xchg
sub
std
and
loopne
mov
inc
adc
or
pop
sbb
or
add
in
sbb
decl
aaa
xlat
mov
add
shlb
adc
das
and
mov
lea
adc
or
mov
add
mov
fidivs
lock
in
adc
shlb
jge
sbb
jp
xor
cmp
stos
dec
mov
dec
jp
add
sbb
xor
push
fwait
in
cmp
sti
in
sbb
pop
cmpsl
add
push
sarl
std
shl
int3
je
or
es
push
push
push
mov
add
pop
std
mov
mov
cmp
repz
decb
cmp
jp
aaa
xchg
dec
testb
shll
jno
rorb
hlt
add
popf
call
movsb
adc
aaa
sahf
jecxz
ret
addr16
aaa
mov
andl
clc
subl
jae
pop
add
loope
jns
jle
dec
inc
add
adc
jnp
ss
test
push
inc
jmp
fistps
sub
out
cmp
sahf
iret
push
popa
add
rorl
and
inc
test
sbb
dec
mov
or
cmp
adc
push
mov
pop
movhps
addr16
pop
dec
sbb
js
shrl
dec
fstpl
popa
mov
add
adc
adc
jp
jo
ret
lcall
lock
and
cmp
dec
mov
sbb
dec
mov
adc
pop
mov
mov
dec
pop
ret
hlt
mov
mov
insb
sbb
out
loop
fcomps
pop
xchg
pop
les
gs
push
outsb
sarb
inc
test
pop
sub
xorl
dec
sub
iret
push
cld
divb
repz
sarb
jecxz
mov
push
sub
lock
repnz
mov
or
mov
std
in
cld
shlb
in
sbb
popa
inc
xor
cld
pop
or
mov
pushf
lods
dec
ds
push
movsb
cmp
jle
mov
pop
or
xor
xor
out
xchg
rol
hlt
lret
lret
test
stc
or
idivb
pushl
cmp
js
nop
add
cltd
mov
dec
xchg
adc
mov
add
xor
leave
stos
sbb
push
push
or
aad
insb
add
mov
push
imul
adc
lcall
xchg
add
sbb
add
rorb
push
addr16
cs
adc
mov
ret
inc
mov
outsl
cltd
imul
jae
mov
and
sub
jno
movsb
mov
sbb
fstpt
mov
mov
cwtl
mov
mov
and
ret
push
adc
fsubl
andb
insl
sbb
hlt
scas
inc
dec
xor
jmp
mov
sbb
adc
in
mov
sub
dec
jle
push
jge
orl
push
pop
out
setns
pop
stos
call
js
pop
test
loopne
add
or
aam
imul
jne
push
and
int3
out
or
insl
adc
rcl
mov
lock
mov
ret
xor
mov
arpl
cmp
das
mov
mov
push
orb
dec
int3
add
mov
out
mov
mov
mov
xchg
shrl
imul
dec
or
leave
lret
push
fdiv
xor
faddl
test
in
mov
lock
cmpsb
in
xor
lds
xchg
fidivs
outsb
inc
jbe
jb
push
dec
inc
cmp
sbb
and
stc
mov
xor
add
jno
int
frstor
movsl
adc
mov
pusha
push
cld
jg
pop
push
ret
add
nop
pop
add
inc
push
cmp
or
cmp
pop
or
popa
sbb
mov
lea
mov
sub
xchg
pop
mov
fldenv
pop
lcall
push
iret
cld
jnp
lret
push
movsl
sar
xor
or
sbb
fdivp
cmpsl
sahf
sbb
ret
lret
inc
outsb
sbb
imulb
loope
loop
sub
sbb
jnp
imul
jecxz
sbb
and
ret
dec
outsl
lods
push
mov
jmp
ja
adc
sub
add
imul
pusha
pop
xor
into
jno
and
mov
js
cltd
jno
das
pop
mov
out
adc
js
xor
pop
out
lods
test
mov
pop
sub
jne
lahf
sbb
fwait
loop
mov
push
subb
mov
pop
xor
test
or
cltd
mov
mov
movsb
mov
or
sbb
fistpl
sub
lret
cmp
insl
scas
loope
fistpl
test
or
ret
ror
add
dec
cltd
add
add
scas
xchg
orl
into
xorb
or
call
gs
outsb
sti
movl
add
ret
inc
stos
jne
arpl
xor
mov
addr16
fs
mov
sbb
jmp
imul
insb
dec
lret
mov
lcall
sub
mov
dec
mov
push
pop
sahf
loope,pn
jp
mov
mov
xor
mov
rorl
ret
inc
xor
adc
sub
lret
add
add
repnz
push
dec
enter
pop
add
dec
leave
out
xor
in
jne
repnz
or
add
mull
in
rorb
cmp
xchg
imul
adc
enter
sub
lret
xor
inc
inc
je
cld
divb
fdiv
push
xchg
nop
pop
test
jmp
pusha
in
inc
xor
add
shll
mov
push
cmpb
add
lods
xor
mov
repz
cld
inc
pop
inc
jge
add
sub
std
fwait
mov
insl
cltd
mov
dec
cmp
jecxz
mov
xor
movsl
and
lods
stos
pop
gs
jae
loopne
ja
push
out
inc
mov
mov
and
mov
sarb
ret
inc
inc
scas
dec
out
rcll
int3
lret
push
xchg
jl
fisubrs
movl
lock
inc
test
and
xchg
cmc
pop
scas
iret
lock
xchg
jl
imul
inc
lods
jae
cmc
sbb
or
or
add
cltd
mov
jne
mov
push
test
mov
xchg
xchg
movsb
cmp
adc
enter
xor
stos
call
nop
xorb
pop
inc
test
pop
sub
aas
mov
in
fldenv
dec
inc
test
inc
or
xchg
pop
lock
adc
pop
sbb
mov
sbb
xor
aam
mov
pop
je
push
push
popa
jae
scas
jae
aam
mov
inc
scas
xchg
fiadds
sub
pushf
les
data16
fwait
xchg
xchg
js
inc
cmp
insb
fwait
aam
out
stos
add
adc
stos
pusha
mov
mov
jb
scas
lahf
fsubr
xor
and
mov
jmp
les
sbb
out
push
ljmp
and
icebp
mov
test
add
and
cmp
insb
inc
pop
filds
sbb
cmp
push
jl
adc
push
and
scas
sub
inc
dec
mov
subb
pop
out
xor
sbb
mov
call
stos
cmp
mov
stos
out
mov
pop
inc
mov
push
dec
xor
sbb
popa
dec
inc
fucomi
mov
dec
cmp
jmp
jg
mov
mov
lahf
fiadds
jp
in
lds
sub
nop
push
xor
insb
scas
lret
jnp
adc
push
add
xchg
pop
sub
dec
lret
stos
jecxz
mov
fxtract
enter
aaa
xor
sub
sbb
ret
outsl
dec
sub
insb
and
movsl
push
dec
jno
mov
adc
mov
pop
jne
jmp
fisubrs
addl
loope
mov
mov
or
sahf
push
mov
mov
cmp
or
cltd
push
lds
cmp
cwtl
ret
and
xchg
dec
adc
pop
ret
pop
cli
mov
insb
lret
push
push
mov
in
sub
loop
loope
dec
clc
inc
ds
mov
lret
data16
fmul
pushf
jge
leave
adc
lods
lret
mov
nop
and
aas
adc
push
loope
sahf
in
mov
inc
mov
daa
insb
insb
dec
or
mulb
jne
les
cltd
dec
add
rcll
data16
xchg
divl
in
jbe
scas
sbb
push
pop
mov
int3
push
aad
out
out
out
ret
lret
imul
pop
bound
or
jg
fs
inc
inc
clc
push
outsl
dec
mov
movsl
push
xor
push
pop
or
xor
rorb
xchg
shrl
xchg
sbb
jne
shrb
outsl
push
and
insl
cmp
xchg
adc
lods
fisubs
loopne
mov
cmpsl
mov
mov
jecxz
pop
dec
fldenv
bound
mov
mov
cld
pop
js
add
mov
and
jecxz
add
clc
pop
jns
out
stos
stos
mov
mov
out
and
fsubl
push
dec
cmpsl
mov
or
xchg
jp
orb
out
ss
push
stos
outsl
xchg
pop
stos
repnz
mov
push
cmp
arpl
repz
icebp
push
push
sbb
lods
cwtl
pminub
fwait
fs
subl
push
push
mov
or
cmpsb
add
pushf
xchg
cmpsl
cmp
dec
das
pop
iret
and
test
jno
sub
stos
in
xor
pop
jno
mov
inc
daa
cmpsl
aam
lret
and
mov
mov
inc
fstpt
or
or
pop
mov
adc
jno
addr16
mov
mov
push
xchg
popa
loopne
add
iret
popf
cltd
cmpsb
out
cmp
cmp
sbb
aad
bound
jle
faddl
cmp
into
pop
mov
sub
or
adc
sarl
push
test
popa
jne
rol
push
or
inc
les
cld
imul
adc
loop
outsb
mov
clc
cmp
shrb
imul
popf
lahf
ljmp
lds
or
sti
and
sbb
shlb
mov
jne
cmp
jp
rolb
aaa
enter
inc
mov
pop
jg
cmp
cmc
pop
xor
repnz
jmp
adc
mov
scas
sahf
ja
mov
ret
lret
sub
std
arpl
xchg
fldt
xchg
mov
movsl
push
cmp
sbb
cmpsl
movsl
je
movsl
fstp
rclb
bound
inc
jno
in
jge
pop
jge
sub
aad
rorb
aam
lock
or
mov
add
jb
lcall
shll
cltd
jno
pop
lock
test
xchg
pop
cmp
into
mov
sub
push
movsl
popf
mov
incb
test
test
or
das
cli
notl
mov
insl
add
test
sub
jg
dec
es
outsl
mov
push
jmp
jns
nop
pusha
jmp
dec
jecxz
or
cmp
mov
pop
sahf
and
lcall
mov
das
mov
push
popa
mov
out
hlt
into
sbb
loopne
shll
in
mov
lock
adc
sub
add
cmp
jno
lret
mov
xor
mov
shlb
mov
jae
cwtl
ss
push
mov
xchg
mov
mov
aam
cmp
or
pusha
adc
mov
add
push
mov
addr16
les
orb
rclb
adc
faddl
sub
shll
push
push
cld
negb
sbb
les
cmc
adc
outsl
fdivl
enter
fidivrs
and
aaa
inc
ret
dec
cltd
jnp
cmpsl
and
cmp
loop
mov
xchg
cmp
cli
scas
iret
sub
sahf
mov
divb
lea
insb
stc
and
dec
lods
add
pop
mov
rcrb
fstps
cmp
mov
addr16
iret
mov
pop
pop
filds
mov
and
add
mov
cwtl
xchg
in
pop
xor
fldenv
xchg
sti
xor
push
dec
fs
scas
dec
add
xorl
push
test
fs
push
ja
add
adc
mov
pop
stos
xor
nop
or
jns
inc
mull
imul
sub
push
nop
push
adc
push
sub
out
cwtl
jo
inc
bound
mov
subb
mov
mov
inc
fs
in
xchg
sbb
cltd
repnz
dec
xchg
out
pop
popa
shll
fstpl
and
dec
aas
jo,pt
std
add
xor
fists
push
push
faddl
mov
and
mov
ljmp
es
dec
jg
cmp
lea
mov
mov
stos
jecxz
mov
mov
std
xor
lret
or
enter
adc
scas
mov
push
aam
enter
sub
stc
mov
inc
dec
jno
jns
sti
pop
pushl
xchg
or
mov
std
das
dec
ret
sub
ror
inc
sub
xchg
or
loop
mov
mov
add
add
lret
stc
into
ja
jmp
ljmp
fstpt
js
dec
xor
pop
lods
push
orb
mov
adcl
adc
testl
addr16
lret
aas
pop
and
adc
test
sbb
jle
je
pusha
adc
cld
or
into
outsl
movsb
pop
rcll
mov
scas
adc
lcall
sbb
jns
mov
and
sbb
mov
outsb
addr16
mov
aad
push
dec
pop
dec
cmpl
dec
mov
jmp
popa
pop
inc
push
int
pop
das
sbb
into
jmp
in
push
jns
adc
outsl
push
aas
xor
scas
mov
stos
adc
out
dec
addb
dec
cld
xchg
xchg
sub
out
add
stos
ljmp
scas
test
push
std
add
int
mov
inc
or
sub
add
lea
out
mov
xor
push
push
aas
mov
call
dec
mov
cmp
mov
outsl
leave
repz
cmp
pop
and
adc
jle
cmp
cmc
iret
mov
loope
dec
nop
clc
sbb
jge
loopne
ljmp
clc
mov
pop
adc
dec
insb
arpl
pop
cmp
push
fstpl
sbb
sub
cmc
mov
sarl
sbb
mov
or
xchg
jns
das
mov
or
jns
push
add
xchg
dec
or
dec
adc
adc
ficomps
orl
cld
xchg
ret
cmp
vrsqrt14pd
adc
push
imul
clc
adc
icebp
mov
cmc
cltd
shlb
fildl
inc
adc
leave
dec
fwait
jno
and
pop
in
mov
call
jle
xor
ss
aad
ror
scas
xchg
cmpsb
sar
and
arpl
add
inc
sub
xlat
jae
ret
scas
or
cli
fcoms
in
ret
add
push
bound
push
sahf
rcr
push
leave
or
and
inc
xor
sub
les
mov
inc
lods
mov
dec
je
xchg
dec
daa
shlb
pop
es
push
jae
mov
mov
sbb
and
push
mov
mov
sbb
jo
test
push
cmpb
add
add
out
mov
push
cmp
dec
inc
pop
cmc
pop
push
icebp
outsl
outsl
cmp
loop
shlb
push
lods
movsb
mov
dec
push
imulb
jne
ror
push
inc
xor
mov
repnz
test
jnp
mov
imul
outsl
repz
dec
popa
lods
pop
cmpsl
push
stos
mov
out
mov
pop
mov
xor
sti
jbe
ljmp
add
jns
pop
inc
fnstsw
mov
push
cmc
shrl
sbb
sub
cltd
xor
add
sub
call
dec
bound
test
sbb
imul
jns
cmp
dec
cmp
frstor
jbe
xor
sbb
pop
jecxz
dec
fisubs
aaa
cmp
mov
mov
jo
cmp
insl
gs
pop
cmp
push
sub
and
loope
sbb
fnsetpm(287
or
push
adc
pop
jg
fcompl
ljmp
pop
xor
stos
std
fstpl
arpl
pop
inc
aas
jae
popf
cmpsb
fadds
mov
fistps
cwtl
xor
popl
cmpsb
or
sub
xchg
inc
pop
dec
jb
sbb
push
testl
add
mov
fldt
sbb
out
mov
mov
jae
pop
out
jbe
push
sahf
movsb
arpl
aam
das
xchg
xor
pop
gs
mov
stos
jmp
aad
call
pop
adc
inc
add
fldl
ftst
insl
inc
in
jb
dec
xchg
fcompl
adc
xchg
das
or
lret
cmp
jl
add
cmp
fsubs
sti
iret
push
enter
pop
push
insb
mov
clc
hlt
insl
divl
iret
sbb
out
xchg
push
lahf
fnstsw
inc
out
jecxz
aam
loop
or
ja
fucomi
faddp
iret
ljmp
cli
insl
das
mov
and
std
pop
jne
leave
test
add
mov
push
xor
shll
jno
call
stos
mov
push
cltd
adc
mov
jg
in
or
push
outsb
add
inc
adc
loopne
adc
call
mov
xor
test
ljmp
movl
mov
dec
ret
sbb
sub
outsb
int
sbb
enter
jb
insl
lahf
daa
addr16
repz
dec
jmp
xchg
orb
sub
sahf
fbld
mov
ljmp
mov
fldt
decl
hlt
jnp
lods
add
pop
das
les
dec
lock
cwtl
mov
scas
outsb
mov
adc
sbb
mov
mov
xchg
pop
leave
xor
cmc
shlb
int3
insb
add
sbb
or
cmp
push
dec
cli
ja
out
and
adc
push
inc
sbb
and
or
mov
repz
adc
in
or
cmp
in
aas
fstps
xbegin
add
sbb
ja
popa
into
cmp
sbb
imul
outsb
xorb
sub
cmp
cli
sbb
jns
xchg
stos
mov
mov
aam
cli
test
inc
shlb
lods
pop
outsl
jo
adc
push
xor
xor
xlat
out
dec
idivl
xchg
and
push
sbb
mov
xchg
sbb
cmpsb
test
pop
push
pusha
je
mov
in
xchg
loopne
add
in
mov
jo
subb
addr16
daa
mov
les
xor
push
mov
aam
mov
and
cwtl
inc
cmpps
sbb
jecxz
dec
pop
lcall
popl
loopne
jle
cmp
lret
movb
sbb
push
cltd
xchg
roll
and
out
filds
or
dec
cmpsl
pop
mov
cmpb
nop
nop
dec
sub
mov
stc
hlt
sub
ret
scas
dec
dec
dec
lret
fs
mov
rcll
mov
inc
mov
push
mov
xor
int
and
cwtl
pop
sub
cmp
jno
rcrl
rcll
outsb
sub
fsubs
inc
jl
arpl
pushf
mov
insb
mov
push
push
push
stos
into
mov
push
cmpsb
jae
js
lret
out
push
or
jb
xor
jns
test
inc
mov
out
test
movsl
mov
inc
push
gs
call
pushf
mov
mov
bnd
or
or
xchg
sub
inc
mov
out
dec
jg
cmpsb
sbb
and
adc
add
mov
arpl
mov
push
mov
inc
sbb
and
sbb
repnz
adc
testl
movsb
ss
cmpsb
lret
psrlq
jae
scas
jno
enter
mov
or
sbb
pop
mov
adc
pop
xchg
sub
dec
test
test
sub
sbb
dec
add
lret
std
into
pop
xchg
and
sbbl
push
mov
push
xor
and
mov
cmpl
shll
push
xchg
mov
xchg
push
add
das
jns
mov
dec
xor
mov
jg
dec
dec
jp
jge
jg
jmp
jl
test
out
cmp
testb
add
xor
outsb
xchg
scas
je
jno
mov
in
sbb
jp
fiaddl
icebp
xlat
sub
pop
cmp
mov
pop
mov
mov
and
fsubrs
rcrl
lock
aad
sbb
sub
lcall
das
mov
and
cltd
cltd
arpl
nop
xchg
xor
mov
pop
popf
je
pusha
movsb
aam
sahf
subb
test
push
mov
in
stos
dec
mov
cmp
cltd
out
xlat
pop
xchg
adc
or
scas
nop
pop
sub
insl
mov
xchg
dec
test
cwtl
mov
adc
adc
sbb
lret
jl
fyl2x
jg
mov
dec
xchg
ds
cld
cmp
clc
pushf
xchg
scas
lcall
call
inc
xor
mov
or
inc
or
pushf
popf
insb
imul
int
add
pop
jmp
mov
sub
mov
push
scas
jae
mov
call
jb
and
jne
mov
ss
insl
pop
stos
sti
scas
add
mov
sar
mov
mov
scas
dec
pop
mov
in
and
dec
lods
cmp
push
cmp
cmp
hlt
pop
inc
dec
out
scas
xor
out
cltd
sub
data16
mov
jne
push
ds
fwait
pushf
call
loope
aam
in
push
mov
addb
mov
lods
xchg
adc
cltd
mov
jecxz
jno
pop
dec
push
inc
cmp
jae
dec
gs
mov
or
pushf
dec
xorl
pop
stos
inc
pop
mov
and
imul
inc
jmp
add
shlb
jmp
fsubrs
std
mov
mov
pop
dec
or
mov
cmp
lods
and
test
dec
ret
mov
out
pop
inc
mov
test
sub
cmp
out
fadd
imul
lcall
jbe
mull
cmp
jg
movsl
cwtl
stos
adcl
jb
sbb
aas
xchg
stc
dec
jecxz
cld
push
adc
out
adc
cs
push
lret
mov
and
fwait
clc
push
ftst
sbb
popf
test
push
push
je
inc
stos
std
xor
ret
mov
cmp
push
sbb
mov
leave
int
pop
aam
or
and
outsl
adc
frstor
pop
mov
push
int
cmc
lods
pop
jns
mov
incb
jno
dec
or
mov
dec
pop
lret
stc
mov
sti
fsubr
sub
pop
js
xlat
push
inc
in
mov
dec
xchg
movsl
and
stos
mov
inc
lds
xchg
addr16
adc
clc
pop
cmpsb
pop
stc
dec
dec
adc
fildll
movntps
out
or
fdivrp
mov
test
insl
stc
movsl
pop
mov
shlb
loop
testl
cld
add
mov
aaa
xor
cltd
jmp
jo
xchg
gs
jb
jecxz
mov
orb
psubusw
jno
lods
sub
mov
repnz
push
mov
push
mov
jnp
sbb
push
ficomps
push
dec
mov
stos
xchg
pop
in
out
inc
sub
push
ja
movsl
cmp
pop
mov
outsl
int
jne
fsubr
dec
es
hlt
mov
pop
mov
and
jecxz
mov
sub
xchg
repz
pop
int
jb
mov
and
lods
cmp
scas
cmpsb
repnz
je
clc
pop
ljmp
push
push
or
jns
je
stos
push
adc
add
add
rclb
out
pop
lock
dec
adc
jae
mov
mov
out
xchg
pop
xchg
jl
decb
out
lds
dec
add
inc
dec
sbb
mov
movsb
shll
daa
mov
xor
incl
pop
stos
int
push
cmp
stos
push
jno
scas
jne
dec
test
and
ficoms
mov
roll
mov
and
or
fdivl
test
stos
lods
bound
in
das
xor
pushf
fs
fcoms
add
lcall
scas
cltd
mov
lret
pushf
mov
shlb
push
pop
sub
cli
int3
push
mov
in
mov
mov
pop
cmc
sbb
data16
pushf
push
add
nop
mov
pop
xor
and
cmp
or
lods
jne
dec
xchg
sub
lret
insl
add
je
adc
scas
push
out
push
rolb
xchg
mov
push
dec
fnstcw
pop
push
imul
cmp
sub
push
dec
test
jmp
dec
or
or
xor
inc
fstl
cmc
cmpsl
or
scas
mov
xchg
dec
xchg
lret
adc
add
xor
mov
test
sbb
xchg
cmpsb
mov
jno
xchg
cli
xchg
cltd
adc
movsb
cmpsb
push
jbe
jl
cmp
adc
aam
adc
pop
mov
push
std
bound
aaa
out
or
mov
sub
push
test
aas
mov
push
lds
inc
arpl
int3
jnp
test
fsts
fldt
mov
aam
shll
push
sbb
push
aam
outsl
lock
jb
dec
loopne
sbb
int
jl
call
pop
mov
ja
or
pop
fnsave
shll
pop
or
out
scas
mov
lock
pop
stc
dec
call
pop
ja
pop
js
out
or
jbe
fucomip
jno
mov
push
jo
sbb
mov
outsl
imulb
sub
in
jl
stos
push
jg
push
icebp
mov
pop
mov
out
push
fadds
addl
fdivs
mov
lods
sub
lahf
and
mov
mov
iret
loope
iret
jle
add
jno
pop
fsubrp
mov
mov
jmp
jge
xchg
pusha
push
jp
push
ja
hlt
insl
jo
imul
cmp
push
dec
sbb
fildll
xor
or
cmp
jge
pop
mov
std
in
jno
push
cmp
cltd
lea
in
pop
aaa
popa
and
and
loopne
and
int
push
inc
pop
test
shrl
shrb
imul
adc
sti
js
out
xor
ficoms
gs
jae
scas
push
lds
repnz
mov
stos
lret
jne
call
sub
inc
xchg
out
ret
sub
mov
insl
xchg
or
pop
inc
sbb
mov
adc
push
call
in
cmp
mov
jb
outsb
cmp
jle
mov
inc
sub
jbe
push
dec
cld
test
cld
jmp
cmp
test
mov
jge
mov
inc
adc
lret
js
adc
sub
jmp
aam
mov
daa
mov
sarl
xor
dec
lahf
xchg
xor
and
jnp
jl
cli
add
jns
sbb
das
xchg
xchg
out
push
lea
int
out
push
cltd
rcrb
fsubl
lods
fbstp
test
fst
mov
fcompl
cmp
imul
mov
sbb
and
jge
or
cmp
pop
dec
sub
ficompl
inc
cmp
int3
sahf
ss
daa
inc
dec
push
inc
fisubs
cmp
mov
lods
xadd
rorb
push
mov
negb
in
push
daa
mov
xor
mov
and
ret
scas
test
andl
mov
cmp
xlat
icebp
dec
or
mov
push
divb
lods
dec
jns
fwait
call
and
in
orb
xor
dec
ss
outsl
out
clc
add
sbb
pop
fnstsw
xor
add
rcrl
cmpsb
xchg
lods
push
pop
test
outsl
jne
mov
xchg
cltd
mov
scas
gs
ror
lret
jmp
and
mov
dec
pop
fs
pop
ret
inc
pop
mov
inc
sbb
xor
lahf
movsb
adc
roll
push
sahf
ljmp
cmpsl
sahf
xchg
ljmp
js
addb
push
push
lods
je
and
outsl
mov
mov
sbb
jne
faddl
lock
cmp
inc
dec
mov
dec
mov
push
sbb
mov
jmp
stos
pop
repz
inc
fisubrl
shlb
arpl
lahf
outsl
std
xchg
insb
subb
mov
fcomps
or
pop
jae
mov
je
movsb
test
push
jo
icebp
jle
sbb
in
jmp
add
adc
out
mov
push
lcall
add
out
sarl
xchg
mov
mov
lcall
xchg
or
mov
adc
xorb
pop
pop
push
lods
add
pop
fmulp
leave
sbb
sbb
aaa
sbb
lea
jecxz
stos
inc
mov
add
inc
mov
inc
dec
sub
test
popf
mov
xlat
mov
pop
pop
lds
lds
dec
mov
push
imul
and
or
inc
cmp
pop
jl
push
mov
int
or
mov
dec
cwtl
mov
lods
push
dec
repz
or
pop
push
int3
inc
mov
rorb
les
out
fnstsw
inc
daa
movsl
mov
cmp
push
fidivl
mov
xor
add
inc
push
adc
push
enter
add
dec
xor
push
rcrl
lea
add
pop
ffree
mov
ja
mov
lret
inc
data16
fisubs
sub
outsl
iret
sbb
shrl
fnsave
cltd
mov
inc
int3
pop
inc
pmaxsw
xorb
int3
mov
movsb
les
jg
mov
stos
test
fsubrs
in
cmp
fildl
mov
sub
or
lea
mov
and
push
inc
cmpl
pop
iret
hlt
mov
pop
xchg
cmp
sbb
jb
mov
fnsave
adcb
lret
clc
sbb
inc
cmpsl
fstpl
loope
mov
push
popf
out
adc
repz
adc
clc
clc
ss
dec
jnp
fst
cmpl
je
xchg
lahf
imul
jmp
xchg
adc
movswl
testb
mov
inc
or
cmpsb
mov
xlat
ja
test
push
shll
mov
lcall
and
scas
lret
fs
and
mov
loope
inc
sbbb
add
aad
dec
arpl
ret
das
das
xchg
decl
lods
xor
bnd
test
enter
js
out
xchg
sbb
add
stc
test
mov
add
push
outsb
adc
mov
repnz
cld
push
ja
mov
adc
and
pushf
add
jo
scas
pop
addb
sbb
out
syscall
xor
dec
pop
sbb
in
lods
xor
inc
in
stos
sbb
inc
clc
ja
lea
loopne
jns
adc
mov
mov
and
mov
jle
jno
fmul
push
cmp
mov
jns
out
int3
aam
or
iret
sbb
cli
outsb
jo
sub
fadds
mull
lahf
cmp
add
and
pop
xchg
dec
add
push
ret
loop
addr16
add
fmull
jae
daa
daa
mov
popf
mov
stc
cmpsl
mov
and
xchg
lods
xor
call
dec
fsubrs
jl
dec
xor
pop
jp
out
cmp
mov
movsl
xor
popf
fistl
inc
push
dec
xchg
mov
dec
insb
push
mov
sbb
dec
mov
les
ret
lcall
mov
js
jae
in
sbb
fidivrl
arpl
repnz
pop
mov
std
inc
enter
cli
daa
mov
mov
sbb
or
fdivr
enter
and
or
andb
sbb
xchg
push
lock
cltd
cmc
call
push
xchg
fdivrp
or
movsl
scas
cmc
mov
xchg
jbe
xchg
xchg
pusha
sbb
inc
sbb
xchg
fldcw
out
xchg
mov
cmp
xchg
cmp
cmp
and
aaa
scas
pop
stos
jmp
mov
test
sbb
dec
cwtl
push
jecxz
jbe
jns
mov
add
icebp
mov
add
push
call
int
sti
mov
call
pop
and
pop
repnz
xchg
lahf
xor
mov
mov
aas
inc
and
test
stc
push
lea
dec
dec
addb
sahf
inc
jge
sbb
aas
sub
insl
negl
int
jp
mov
enter
gs
xchg
inc
rcr
aaa
mov
mov
daa
push
xlat
jae
adc
pop
outsl
cmpl
xchg
sbbl
fimuls
adc
pop
push
insb
ficompl
push
pop
cmp
mov
hlt
jp
test
das
xchg
lret
scas
insl
fidivl
and
xor
hlt
fcmovbe
xor
dec
in
cmp
lret
arpl
push
xchg
loopne
int
hlt
add
dec
pop
and
inc
sbb
dec
movsl
fisttpl
or
lock
mov
testb
push
pusha
les
sti
cwtl
xor
cli
xor
inc
cltd
push
test
mov
ja
faddl
mov
jbe
lret
push
xchg
repz
out
xchg
mov
lret
push
test
pop
cltd
pop
sub
and
mov
or
sub
stos
inc
xlat
fsubr
decl
cmp
sub
dec
pusha
or
mov
cltd
sbb
imul
sbb
call
arpl
pop
imul
xchg
inc
and
test
loopne
adc
push
sbb
mov
rorl
dec
pushf
push
out
dec
mov
or
es
cmpsb
xor
movsl
aam
sbb
repnz
xchg
xor
cmp
fwait
mov
ljmp
fcmovu
scas
int3
jl
fildl
or
cmp
jae
sti
push
pop
inc
fdivrl
iret
pop
ret
cwtl
pop
mov
pusha
movsb
pop
dec
sub
mov
subb
mov
daa
lret
xchg
dec
sub
idivb
cmp
ds
xor
rolb
call
xchg
push
push
sub
push
outsl
jl
ss
push
cwtl
pop
push
je
filds
jmp
lahf
push
ja
loopne
in
ljmp
cmp
rclb
push
cmp
jg
lcall
cmp
jecxz
es
test
or
add
lahf
jns
and
fcomp
stc
adc
mov
add
dec
sub
rcl
fldt
jb
xor
int3
out
add
and
jge
sub
arpl
clc
call
push
cmp
or
lods
mov
in
cli
adc
stos
mov
add
add
pop
sub
sti
xlat
test
jmp
and
inc
xor
cltd
ds
outsl
push
out
rcll
fisttpll
jbe
jecxz
sbb
adc
jg
push
fdivrs
in
pop
adc
int
hlt
repnz
sub
mov
stc
push
xor
mov
dec
xlat
cmp
push
cmpsb
and
mov
aad
dec
int3
jle
fldcw
inc
rorl
or
fwait
int3
xor
arpl
sti
pop
addr16
test
push
pusha
or
iret
cld
push
sbb
es
aam
mov
pop
movsl
jmp
or
xor
or
cltd
xchg
push
int3
mov
fisubrs
pop
jle
jno
and
stos
jbe
mov
or
push
call
out
cmp
mov
cwtl
arpl
jb
repz
cmc
or
enter
jae
push
xchg
mov
loop
icebp
adc
mov
iret
enter
test
iret
push
xor
mov
mov
enter
stos
pop
cmc
fwait
pop
xchg
jne
mov
xlat
loopne
out
aaa
repz
and
mov
mov
pusha
pop
outsb
or
faddl
cmovnp
dec
mov
pop
jno
or
cld
pop
xlat
int3
inc
dec
push
or
inc
cmp
lret
dec
jl
pop
xchg
dec
int3
fs
lock
pop
stos
cmpsl
loopne
cli
cld
add
mov
shlb
pushl
fcomp
cli
xor
push
cwtl
ljmp
add
pop
or
xchg
movsl
mov
sbb
jmp
jl
sbbl
js
mov
pcmpeqb
shll
jge
mov
mov
lahf
lret
insl
mov
int3
insl
add
rcll
in
fstps
sub
cmp
scas
fcmovnu
cmp
movsl
les
inc
mov
call
mov
cs
inc
outsb
push
leave
enter
dec
lods
hlt
lds
out
jmp
sbb
pop
mov
cs
lds
repz
cmp
stos
inc
leave
or
loop
pop
jnp
arpl
mov
ljmp
mov
call
add
push
xchg
cmpsl
enter
popa
ret
xor
test
shll
cmpl
js
sub
out
loop
lock
stc
xor
and
add
mov
decb
or
nop
stos
stos
xor
aam
loop
inc
push
add
gs
cmp
aad
mov
pop
leave
pop
cli
pop
xor
pop
aaa
pop
lret
sbb
adc
ds
mov
rcrl
jg
or
and
add
dec
pop
push
sbb
rcl
or
in
in
add
loopne
dec
fisttpl
cs
mov
scas
sub
cmpsl
pop
jo
outsl
icebp
loop
dec
adc
mov
fwait
push
push
cld
mov
sbb
add
push
lock
ss
and
repz
in
int3
push
push
jnp
push
rorl
mov
sub
out
sbb
outsl
lock
js
fidivrl
incb
sub
idiv
call
adc
xchg
loope
pushf
push
test
jg
cmpsl
arpl
xchg
daa
sbb
popa
out
hlt
das
jnp
shr
push
loopne
lock
push
sbb
test
xchg
mov
lret
sti
xor
aam
fdivr
inc
sub
aas
bound
imul
jo
push
cmp
jl
mov
loop
sysenter
mov
outsb
mov
fs
negl
int3
dec
or
xchg
das
mov
push
lock
push
sbb
and
jl
sbb
stos
pop
addb
jb
xor
jmp
ljmp
int
test
push
imull
repnz
or
adc
in
add
mov
enter
jb
pop
jle
adc
call
cli
test
cmp
and
fistps
push
loopne
sti
sbb
jp
ficompl
and
popf
mov
les
jp
xchg
fcoms
jp
ret
sub
arpl
pushf
push
test
cltd
popf
xchg
jp
xor
je
movsl
gs
cltd
stos
lods
and
cmc
mov
and
sub
ret
ljmp
iret
xor
lods
mov
imul
or
dec
push
mov
push
inc
sbb
adc
inc
sbb
loop
pop
cs
add
cmp
push
xchg
pop
inc
adc
enter
cltd
dec
stc
push
ret
les
lea
pop
clc
test
mov
outsl
add
in
pop
stc
adc
mov
xor
addr16
popf
aaa
jp
mov
mov
mov
test
mov
and
xor
out
idivl
adc
jle
push
adcb
pop
in
lea
sbb
sti
push
aaa
push
xor
sbb
adc
jmp
mov
ret
xchg
test
mov
rorl
and
dec
dec
mov
inc
pop
jg
dec
pop
lret
in
sub
and
movsb
aaa
mov
adc
add
dec
jne
lcall
adc
outsl
cltd
push
pop
sbb
jo
shl
adc
add
jle
mov
mov
loopne
sbb
pop
aas
add
out
outsl
aas
pop
insl
stos
or
pop
mov
out
dec
dec
push
add
inc
cmc
push
sub
xchg
call
int
stos
shrl
fnsave
pop
fildl
ret
pop
xlat
test
ret
lret
rcrl
cmp
pop
xor
lret
icebp
or
fisubs
pop
sbb
add
xchg
push
push
jne
push
iret
sti
mov
dec
insl
cltd
or
add
data16
dec
mov
or
add
jns
mov
cmpsb
aaa
cmpb
notl
cltd
inc
ret
popa
insb
dec
and
nop
cmp
jae
sbb
push
mov
lock
pop
insl
daa
divl
fildll
mov
jmp
mov
xchg
clc
out
pop
mov
pop
sub
xor
stos
fwait
arpl
mov
mov
pop
inc
lahf
xor
xorb
mov
clc
cmp
xor
xchg
xor
rorl
mov
dec
dec
outsl
les
xor
pop
jg
stc
ds
enter
jnp
sub
test
wrmsr
push
test
dec
std
jmp
and
mov
insl
lock
jle
in
leave
test
push
mov
jecxz
sarl
clc
test
jb
mov
out
xchg
out
push
add
xor
shr
loope
push
arpl
mov
mov
scas
push
pop
adc
cmp
inc
cli
push
cltd
aam
es
xchg
test
mov
lea
cmp
pop
test
inc
fistpl
xor
aam
dec
in
inc
inc
xlat
mov
idiv
insb
cmp
es
push
enter
repz
xchg
and
pop
xchg
jp
stos
test
jns
xorl
adc
lcall
fistl
testl
adc
in
lret
test
mov
sub
xchg
ret
ror
movsb
mov
sahf
add
push
add
popf
arpl
and
in
dec
push
and
push
lret
mov
or
mov
mov
daa
into
roll
imul
jne
cmp
push
lea
lea
xchg
inc
push
cmpsl
push
sub
gs
mov
sbb
outsl
leave
rclb
pop
incl
cmpsb
jl
outsl
into
inc
cmp
xchg
xchg
xchg
cmpl
xchg
sahf
sub
lahf
cli
dec
sahf
sub
xor
fisubs
stos
hlt
cmpsb
roll
in
jnp
outsb
lret
icebp
xlat
pop
lea
dec
rcll
into
out
stos
xchg
jnp
dec
adc
inc
dec
call
xchg
stos
mov
rorb
shr
sub
sub
pop
popf
push
vsqrtpd
add
sbb
xchg
scas
sbb
xchg
xchg
aaa
inc
lods
and
fcompl
mov
adc
icebp
ja
enter
mov
pop
ret
xchg
sub
push
sbb
aad
ss
add
add
jecxz
mov
adc
push
xchg
mov
icebp
pop
mov
loop
xchg
jae
adcl
ljmp
popf
jnp
dec
mov
xchg
inc
dec
mov
and
sub
loope
cmp
mov
arpl
mov
xchg
aas
sub
stos
std
cmp
loopne
mov
cmp
xor
xlat
insb
in
outsl
and
pop
xlat
imul
outsb
xlat
jmp
insl
je
sti
push
fcmovnb
sbb
adc
xchg
cmpsl
shll
inc
mov
adc
sub
cltd
adc
cmp
mov
adc
mov
jp
outsl
stc
xchg
idivl
fsub
jmp
fmuls
dec
xchg
imul
xorb
xorb
movsb
sbb
ss
iret
iret
xor
stc
cmp
mov
lahf
xor
mov
sbb
fstps
adcb
pop
push
or
jb
dec
mov
xchg
ss
scas
mov
mov
bound
mov
mov
jo
or
lea
xor
loopne
repnz
addr16
xor
and
pop
outsl
xchg
test
push
in
mov
xlat
shll
dec
dec
stos
in
cmp
jbe
out
cmp
jecxz
filds
les
dec
idivb
lcall
aaa
inc
out
cmpsl
mov
push
nop
cld
lret
cmpsl
pop
das
negl
mov
xor
flds
fnstsw
jns
test
mov
outsb
xlat
sub
sub
and
daa
movsb
pop
dec
test
scas
xchg
jecxz
pop
lock
testl
mov
cmp
jbe
in
dec
mov
push
inc
mov
cmp
jae
out
pop
lahf
pop
mov
adc
jp
xor
clc
pop
in
mov
mov
push
int3
push
in
mov
sahf
daa
lods
or
jg
mov
or
imul
push
jb
subb
pop
das
push
mov
or
cmp
add
jbe
mov
mov
add
xchg
and
hlt
inc
add
sub
jae
shr
addb
xchg
dec
xor
lcall
push
push
das
std
scas
pop
inc
cmpsl
out
je
hlt
rcl
push
leave
bound
mov
leave
mov
mov
out
test
xchg
jmp
sbb
mov
imul
xor
mov
orps
add
outsb
out
adc
mov
in
cwtl
sub
pop
sub
mov
pop
pop
or
dec
insb
fs
mov
dec
jnp
outsl
xor
pop
ficoml
and
sbb
push
sub
push
dec
mov
imul
dec
push
lods
lret
je
in
vmaxss
test
push
pop
ud1
dec
or
scas
lahf
mov
stos
data16
aam
cmpsl
in
cmpsb
xchg
mov
cwtl
or
mov
cs
sar
fcmove
out
dec
inc
cmp
jns
push
pop
or
jp
pop
pop
fcoml
fdivp
sub
and
jmp
xchg
add
push
push
fldl
xchg
lcall
adc
sbb
out
xor
mov
sbb
hlt
repnz
pushf
enter
sub
out
pushf
jmp
mov
in
inc
pop
loope
cli
and
fadds
std
stos
mov
stos
jo
fldl2e
inc
pop
xor
cli
jo
sub
sti
insl
lret
dec
addb
repz
pop
cmp
or
or
divb
sbb
test
push
mov
jno
xchg
int3
pop
rorb
lods
inc
stos
lods
imul
arpl
icebp
testb
pop
inc
cmc
adc
test
decb
in
xchg
insb
sub
ret
mov
enter
jmp
jmp
stos
cmp
adc
cltd
jl
inc
adc
subl
add
out
xor
scas
sub
add
mov
and
push
sbb
js
adc
mov
sysret
inc
sti
sbb
add
lret
into
xor
lahf
add
ss
cmp
lcall
mov
push
enter
sbb
addr16
or
fldcw
cmpsb
rolb
dec
jle
dec
xor
inc
mov
or
shl
shrl
and
out
imul
out
xorl
lods
lods
iret
add
and
xchg
pop
mov
add
sbb
or
xchg
sbb
aaa
add
ljmp
push
movsl
push
lock
pop
sbb
xchg
jecxz
and
sahf
fs
mov
orl
stc
fisubrl
sub
faddl
dec
repnz
movsb
xchg
adc
mov
xchg
pusha
cmpb
push
out
aad
dec
cmpsl
insb
pop
jmp
jbe
mov
repz
repnz
dec
xchg
into
in
jecxz
in
sahf
jmp
gs
or
pop
and
ljmp
imull
andb
cmp
out
adc
daa
pop
jnp
pop
out
dec
jge
lahf
sub
popa
pop
jp
lds
add
sti
rcll
mov
sub
sub
int
sbb
dec
xchg
popa
iret
mull
jecxz
test
mov
dec
mov
cs
bound
push
push
dec
lret
mov
jno
mov
out
in
loop
cli
inc
ds
test
je
or
jge
inc
cmp
jne
outsl
mov
pop
cmc
or
mov
fwait
mov
cmpb
int
or
sub
mov
mov
sub
movsb
gs
adc
subl
mov
enter
cmp
iret
loop
jnp
shr
mov
out
divl
pop
dec
lahf
jl
cmpsl
adc
mov
mov
in
lret
in
cmp
cmpb
push
ja
in
jecxz
fcmovbe
jbe
movsl
xchg
or
dec
mov
popf
das
lds
add
adc
mov
hlt
mov
cmc
or
pop
and
fldenv
sub
push
jb
aam
int3
adc
mov
ret
mov
insl
fs
ss
leave
lock
cmpsb
in
push
sub
jnp
and
inc
jo,pt
jo
jno
scas
lcall
mov
jp
cld
cmp
lcall
fcoms
pop
pop
nop
lods
arpl
xchg
inc
fbstp
push
pusha
enter
ss
pop
xchg
fs
pop
cmpsl
add
xor
add
addr16
into
and
adc
jle
and
fidivrs
loopne
inc
cmpsb
xor
cltd
xchg
sbb
fs
and
out
mov
out
and
jecxz
sbb
pop
jg
and
dec
push
into
or
sbb
adc
xlat
pop
loope,pt
shrb
dec
pop
add
xchg
and
add
mov
test
pop
lcall
inc
dec
cmp
sahf
divl
mov
pop
sbb
or
into
push
and
pop
dec
pushf
xor
lock
js
adc
loopne
xchg
adc
or
mov
stos
sub
inc
sub
pop
stc
mov
lahf
mov
xchg
test
jbe,pt
aam
aam
jnp
testb
mov
test
rep
in
rclb
jns
push
decb
dec
push
incl
stos
imul
cmpsb
push
xor
cmpsl
bound
xlat
ret
adc
in
add
jge
test
mov
and
divl
inc
lahf
sbb
pushf
outsb
icebp
add
cwtl
rol
adc
or
pusha
es
pop
movsb
mov
jge
ds
mov
sbb
scas
mov
out
add
push
pop
fistpll
mov
mov
shlb
mov
jo
mov
sub
shll
pop
inc
cmp
data16
cmpsb
pop
repz
inc
leave
subb
and
jecxz
out
or
nop
jge
les
repnz
sub
pop
stc
out
fidivrl
aam
xlat
dec
mov
jmp
cmpl
xchg
xor
fs
xor
pop
sbb
pop
mov
rol
jp
jb
enter
or
pop
and
xchg
roll
mov
pop
enter
push
pop
jns
adc
sbb
les
dec
test
mov
mov
add
ficomps
bound
sub
and
push
rcrl
jnp
push
iret
mov
jg
or
dec
mov
gs
out
test
add
fadds
sub
in
lods
mov
rclb
jmp
jns
lds
adc
sbb
mov
add
mov
add
or
pusha
or
mov
adc
in
dec
adc
push
les
test
adc
xor
adc
jecxz
sbb
xchg
andb
dec
xchg
and
popf
sbb
mov
mov
adc
mov
push
and
mov
lods
and
inc
mov
dec
mov
sbb
loop
lcall
or
cmpsb
aam
lds
decb
pop
sub
sbb
push
dec
lret
cli
sbb
mov
call
xchg
jo
adc
pop
cli
pop
adc
ret
jb
inc
sbb
mov
xchg
sbb
push
mov
data16
fcoml
out
sub
lcall
push
mov
mov
hlt
add
sbb
addb
fucomp
bound
es
inc
cmp
pop
loope
aaa
mov
inc
jecxz
mov
sub
dec
ds
in
imul
mov
cmp
cwtl
and
fs
xchg
ds
loop
add
cmc
xchg
imul
lret
jle
mov
or
jle
ret
and
call
adc
push
daa
push
or
outsl
or
inc
in
adc
sbb
aaa
outsb
imul
icebp
lcall
push
inc
cmp
test
daa
cwtl
loope
push
push
inc
add
or
shl
fcomp
push
bound
or
adc
popf
insl
jp
popa
add
sub
jge
add
test
cmc
and
dec
add
sti
jmp
divb
scas
sarb
lea
fwait
sbb
loope
fs
or
inc
ss
push
addr16
insb
xchg
and
push
xor
mov
push
test
jb
push
push
push
movsb
adc
sub
xchg
sbb
xor
mov
mov
jae
lcall
and
inc
bound
jno
int3
mov
or
xchg
jp
stos
lods
inc
sbb
dec
pop
jbe
mov
or
mov
sbbl
ror
push
xor
jp
data16
popa
sbb
jl
incl
push
leave
inc
ret
mov
inc
fs
mov
mov
mov
mov
jae
mov
mov
pop
xlat
call
cmpsl
jno
pop
fwait
inc
jne
sbb
or
stos
sub
pop
jb
ds
push
popf
jp
and
cmp
xchg
jle
or
rorl
push
inc
imul
mov
ds
iret
mov
test
adc
imul
inc
icebp
jne
dec
cli
call
mov
mov
cmp
inc
lret
je
xorb
mov
adc
mov
xchg
cwtl
push
loopne
addr16
cmp
icebp
sbb
adc
add
push
ja
add
add
dec
clc
iret
mov
xor
loope
lds
sbb
or
adc
mov
int
push
movsb
xor
push
cmp
lcall
subb
fists
xchg
and
fisttpl
push
lret
mov
mov
pop
adcl
in
jno
shrb
ficoml
loopne
aad
sub
mov
dec
xor
insb
vmread
jp
pop
sub
mov
dec
fdivrl
push
sub
dec
std
add
cmpsl
adc
jp
lret
xor
cwtl
leave
sbb
and
mov
mov
inc
xchg
hlt
ffree
inc
mov
and
js
scas
out
push
dec
mov
mov
jmp
and
int
std
cmp
push
inc
and
push
stc
stos
aaa
lds
fidivrl
xchg
jle
cs
insb
mov
or
and
cs
and
arpl
stc
sbb
xor
pop
std
xchg
out
dec
jb
mov
pop
repnz
cltd
cwtl
jbe
or
xor
or
shll
push
pop
ret
movsl
dec
jns
punpckhwd
fdivl
pop
dec
js
or
mov
das
dec
xchg
mov
gs
fbld
and
fisubl
sub
cmpsb
push
dec
ficoml
popf
inc
aam
lods
cmp
jne
xchg
clc
dec
and
arpl
mov
push
inc
iret
mov
pop
das
xor
jbe
out
fidivl
inc
mov
repz
hlt
data16
mov
inc
popa
fwait
shl
jle
jb
jnp
jae
mov
es
mov
mov
xchg
test
push
push
std
lock
les
push
sub
leave
or
jno
jns
push
lret
loopne
popf
cmc
daa
inc
or
dec
sub
and
inc
inc
sbb
push
cmp
push
iret
rolb
pop
jl
sub
mov
fisubs
pusha
rorb
mov
aas
sbb
out
push
cmp
xchg
pop
jns
jg
dec
and
jp
xchg
shlb
and
rorb
xchg
mov
dec
or
sbb
in
dec
mov
in
outsl
fisubrl
cmp
xor
mov
lods
lds
fdivrp
call
xchg
imul
xchg
lea
mov
leave
mov
cmp
fs
iret
dec
cmp
pop
aaa
xor
fnstcw
push
jbe
mov
pop
and
fldl
adc
dec
dec
or
test
pushf
and
xchg
enter
jb
je
dec
pop
into
jmp
sub
push
into
loopne
ficompl
movsb
imull
repnz
adc
fldt
dec
xor
and
inc
jb
lret
jle
cmp
jne
fs
ficoml
xor
imul
xor
xchg
nop
mov
adc
pop
rcrl
mov
outsb
inc
xlat
fwait
in
inc
inc
out
jle
xchg
aaa
iret
outsb
xor
dec
jg
stos
in
mov
mov
or
in
fldl
mov
fsts
mov
dec
shl
mov
repnz
jl
rorb
lods
test
push
push
push
dec
pop
ret
inc
add
mov
dec
rorl
in
stos
mov
cmp
int
nop
xchg
js
and
sbb
cld
stos
or
fisubl
pushw
je
test
ds
outsb
cmp
ss
mov
cmp
pop
cmp
aas
or
out
ficoml
mov
sbb
out
mov
sub
sahf
sbb
add
sub
or
fiaddl
xor
xchg
dec
pop
pop
mov
les
pop
and
imul
negb
fs
mov
mov
dec
sub
push
push
repnz
add
inc
inc
mov
mov
sbb
and
jo
jp
xchg
inc
pop
inc
lods
fisttpl
adc
data16
scas
int
cld
clc
xor
stc
sub
xchg
add
jne
push
mov
stos
push
ret
pop
mov
fstl
jecxz
xor
pop
lods
aaa
dec
adc
test
pop
fistpl
ror
push
lods
mov
pushf
pop
push
testb
fdiv
and
cmc
stos
or
je
lahf
add
adc
cwtl
lahf
dec
cmp
xor
shrb
js
pop
mov
mov
mov
rcrl
inc
mov
fistpl
in
jp
mov
add
fsubs
and
mov
mov
scas
adc
push
les
stc
fldt
jne
adc
pop
inc
faddl
sub
mov
ljmp
rcll
jo
adc
adcl
pushf
fnstenv
pop
loopne
and
jge
imul
testb
mov
subb
sub
scas
scas
push
stos
jne
and
arpl
add
leave
xchg
shl
adc
gs
and
lret
ret
pop
es
stos
test
or
pop
add
jbe
push
rcr
imul
xchg
mov
and
sub
or
dec
mov
ljmp
jg
add
movd
jecxz
mov
xchg
inc
aas
pop
lds
xorl
xor
arpl
cli
movsl
mov
mov
push
pop
fisubrs
repnz
popa
les
stos
xchg
fcmovu
shrb
mov
add
mov
in
lret
gs
arpl
ret
pusha
jg
and
jno
xor
pop
xchg
negl
cmc
adc
cwtl
pusha
and
cmpsb
mov
int
mov
mov
mov
shrl
mov
push
sti
push
ss
push
in
adc
pop
out
jbe
pop
jg
sarl
xchg
jp
out
mov
mov
out
dec
stos
xor
gs
sub
xor
jmp
push
add
pop
into
jge
bnd
mov
xlat
xchg
idiv
sub
mov
sbb
pusha
in
jge
mov
push
loope
xchg
adc
fstl
sub
inc
push
and
loopne
push
call
dec
sub
sbb
sub
dec
or
das
sbb
push
xor
movsb
xchg
test
inc
and
pop
dec
stos
icebp
into
in
mov
cmpsb
push
hlt
xchg
inc
mov
andb
dec
in
repz
loope
xchg
in
mov
push
mov
xchg
adc
pushf
in
or
test
sub
enter
stc
mov
pushf
nop
in
shlb
in
mov
fwait
insb
jecxz
mov
loopne
push
ljmp
jno
in
mov
je
or
jecxz
push
fiaddl
shrb
mov
cltd
loop
xchg
ljmp
leave
aas
ljmp
popa
aad
xor
rclb
imul
dec
in
movsb
xchg
stos
mov
repz
dec
subb
dec
loop
out
pop
push
adcb
pop
lods
ss
inc
mov
mov
negl
sub
test
and
mov
dec
jb
pop
push
mov
mov
rol
mov
jb
fadds
xchg
cmpl
pushf
mov
ret
lock
add
stos
cmp
inc
push
dec
sahf
pop
xor
sub
inc
mov
loop
mov
jl
je
jb
push
push
mov
xchg
dec
iret
repz
ds
cmc
adc
dec
mov
repnz
mulb
sub
fists
dec
adc
or
xorb
mov
adc
in
adc
pop
rep
fidivrs
dec
test
mov
jge
jbe
jg
jbe
push
test
fstps
cmpps
push
cmp
lahf
xchg
aam
iret
mov
inc
lahf
ret
and
add
shll
pop
push
push
jbe
push
xchg
mov
xchg
cmpsl
mov
popa
scas
add
sbb
xchg
shll
into
lret
and
push
loope
hlt
in
sahf
out
xor
mov
repnz
add
test
or
or
pop
xor
mov
sti
lds
xchg
mov
ja
adc
push
repnz
rcrl
fisttpl
xchg
in
shl
mov
jnp
addr16
iret
cmp
out
das
mov
fdivrl
push
or
pop
popa
push
and
xor
mov
adc
gs
movsl
cmc
push
ficoml
adc
ljmp
xchg
cmp
push
xorb
pop
testl
ds
push
add
in
cmc
cltd
ds
rcrl
outsl
dec
cmpsb
shrb
adc
loope
jmp
mov
test
jmp
pushf
arpl
mov
mov
push
push
and
mov
pop
rcrl
loopne
jo
or
mov
xchg
stos
dec
fisubrs
xchg
or
loop
insb
and
or
scas
lret
xchg
push
inc
int3
das
inc
push
call
hlt
sub
push
daa
lds
dec
pop
jns
cmp
cmp
dec
sub
stos
jmp
jo,pt
inc
nop
dec
or
xchg
push
mov
pop
int
push
int
pusha
mov
inc
pushf
and
ret
jecxz
imul
mov
push
into
xchg
pop
push
mov
and
rcll
and
jno
lret
or
std
cmp
and
lea
and
pop
mov
push
loopne
ffreep
cli
add
cmc
in
sub
dec
fistps
cwtl
mov
das
out
loope
pop
sbb
pop
ret
and
lea
movsl
push
xchg
sbb
mov
sbb
test
scas
inc
lods
pcmpeqd
mov
scas
call
mov
push
cmp
mov
rcl
adc
sub
sub
aas
fxtract
in
inc
rcrl
sbb
cmp
jb
pop
cmp
imul
popa
arpl
adc
setne
dec
sbb
mov
gs
lret
mov
xlat
imul
cmp
pop
cs
aas
mov
xor
inc
inc
add
adc
lahf
lcall
or
cmp
fmull
test
cmc
lcall
cli
enter
add
push
xor
jns
mov
mov
xlat
loope
mov
mov
inc
cmc
sbb
inc
add
out
xchg
icebp
mov
mov
imul
dec
mov
cmp
nop
xchg
pop
cltd
js
jne
or
test
loopnew
sbb
shrb
mov
cmp
dec
pop
lods
dec
and
pop
xor
icebp
lds
cmpsb
decl
aas
sahf
into
outsl
mov
fwait
xchg
setl
flds
faddp
mov
imul
iret
mov
nop
sub
push
das
sbb
mov
jnp
stc
jecxz
dec
adc
pop
notl
dec
or
mov
cmp
add
faddp
pop
imul
jle
sbb
dec
call
iret
in
dec
insl
test
xor
testb
pop
mov
pop
rorl
cld
jl
mov
stos
mov
push
inc
xlat
dec
pusha
and
lret
es
fnstsw
or
push
jecxz
sbb
push
mov
addr16
push
push
mov
gs
sbbl
test
outsb
add
out
push
aad
jbe
daa
xorb
cli
xlat
mov
cmc
cmp
lock
push
xor
gs
mov
aaa
andl
cmp
pop
cs
test
loop
add
roll
xchg
sbb
xor
pop
push
xchg
xchg
xor
jne
popf
loopne
out
clc
jno
and
fsubl
fmull
into
sub
mov
mov
int
fiadds
dec
xchg
aaa
add
dec
bound
mov
aad
in
inc
sbb
sub
cmp
xor
adc
add
pop
mov
aam
addr16
dec
in
and
loope
adc
adc
mov
sbb
in
mov
roll
fisubl
fdivr
pop
mov
push
sbb
daa
fs
sti
and
mov
orl
mov
xor
js
fstp
bound
jnp
stos
pop
xor
mov
adc
stos
mov
je
jmp
mov
inc
inc
push
sti
pop
lahf
push
fadd
inc
add
adc
cmp
fistpll
add
sub
add
or
add
mov
mov
fwait
ljmp
add
pop
cmp
js
xchg
mov
push
stc
push
jmp
out
std
fs
adc
mov
adc
push
mov
xchg
inc
decl
pop
movsb
cmp
ss
jae
or
stos
pop
out
je
popf
cld
shll
loopne
xchg
in
push
cmp
xchg
pushf
cs
loopne
sub
mov
jecxz
add
lret
out
scas
sbb
xor
loope
or
pusha
mov
mov
je
cmp
shr
xchg
insb
pop
int3
add
stc
pop
mov
into
xchg
push
cmp
push
jecxz
popa
or
lods
jecxz
ss
outsl
xchg
hlt
fldcw
pop
cmc
hlt
lods
lea
ret
fdivp
fistpll
sbb
xchg
test
mov
cmpsb
dec
pop
inc
inc
jo
leave
pop
sub
pop
adc
repnz
insl
nop
lcall
pusha
sub
out
lea
jae
cmpsl
jmp
aas
mov
pop
call
inc
pop
inc
sbb
ret
test
xor
inc
jge
fidivrs
dec
xchg
mov
fnop
dec
xchg
rorb
popa
negl
scas
cltd
inc
xor
test
inc
cli
sub
xchg
inc
dec
fwait
dec
mov
decl
or
dec
or
mov
xor
push
ds
in
enter
sub
sub
mov
pop
lcall
and
or
xor
cmpsb
test
cmc
push
jl
inc
jns
jge
cmp
mov
xor
lods
push
cmp
iret
adc
cld
or
inc
aad
xor
inc
mov
jns
push
sub
int
jmp
xor
dec
loope
dec
sbb
out
jns
int
imul
pop
cmpsl
xor
mov
and
mov
mov
lret
mov
js
xchg
pop
pop
into
lahf
adc
lea
in
clc
imul
or
aas
or
push
inc
call
mov
mov
mov
ds
lret
insb
negb
loop
out
loop
dec
fsubr
cmc
mov
pop
in
mov
pop
shlb
std
fldl
sub
cld
add
pop
lcall
dec
cmc
mov
popf
loope
jb
sub
mov
inc
mov
pop
sub
add
pop
or
pop
scas
add
dec
in
cmp
pop
cli
adc
das
and
sbb
dec
inc
and
push
sahf
mov
arpl
mul
push
roll
rolb
dec
sbb
dec
int
jnp
daa
movsl
fnstcw
stc
sub
adc
lcall
sub
in
xchg
sub
xor
gs
inc
adc
lock
daa
and
xor
pop
jb
mov
lock
add
jne
mov
xchg
ljmp
xorl
push
sub
scas
je
nop
jg
ss
in
dec
sbb
movsb
jbe
or
jno
jl
out
pushf
mov
les
mov
xor
pop
adc
cmpsb
mov
pop
stos
xchg
les
sub
andb
aam
fisubrl
pop
lea
stos
popa
adc
loop
int3
arpl
jnp
clc
fadds
sbb
xor
lcall
insb
outsb
fstps
adc
dec
or
mov
mov
mov
ds
push
bound
out
inc
les
mov
bound
push
adc
daa
and
and
mov
dec
mov
jns
mov
iret
jge
and
call
pop
loop
add
stc
push
adc
cmpsb
mov
fcmove
adc
jae
inc
jg
push
mov
hlt
adc
popf
sbb
imul
or
cmp
icebp
pop
rcrb
adc
sub
ljmp
xor
cmpsb
inc
out
cmp
and
out
mov
int
jnp
pop
test
loop
xlat
daa
adc
out
lret
inc
out
cmp
andl
xchg
sub
push
add
pop
inc
push
out
xchg
rcrl
cmpsl
mov
loopne
adc
sub
repz
xchg
rcll
inc
mov
sub
push
dec
sbb
push
stc
stos
jmp
cmp
shl
imul
pop
push
jmp
enter
cmc
ss
aas
repz
ret
adc
insl
sub
jmp
mov
ds
lret
daa
aad
cmpsb
xchg
dec
and
xlat
adc
sub
jae
mov
mov
mov
cmp
and
movsb
out
jb
adc
inc
add
jne
dec
xor
rorl
inc
cwtl
rep
pop
jns
jecxz
xor
pusha
pushl
xor
mov
cli
out
gs
in
push
gs
sti
enter
test
les
adc
ss
jns
inc
jnp
xchg
mov
pop
pop
idiv
jae
lahf
orb
bound
movsl
push
add
neg
xor
adc
mov
adc
ja
int3
mov
jno
ret
add
test
pushl
in
mov
xor
enter
cmpsb
notl
sub
push
sahf
hlt
mov
lret
cli
dec
push
in
stos
push
divb
lret
mov
fstl
shrl
sbb
push
test
push
pop
fwait
enter
je
hlt
add
les
cwtl
out
jno
outsb
add
add
mov
daa
dec
and
push
push
mov
add
ret
pop
cmc
out
xor
lea
in
inc
push
adc
ss
pop
test
or
sub
out
clc
outsl
int
push
and
inc
lret
sahf
xchg
sbb
das
sbb
call
and
push
fcompl
jl
in
cmp
lret
stc
into
and
xor
dec
fs
xlat
ds
push
imul
out
in
out
and
stos
sub
pop
lahf
loop
enter
push
hlt
jo
sahf
ficompl
xchg
xor
in
push
xchg
rorb
leave
pop
ret
push
aaa
enter
push
jno
sub
dec
ret
aas
add
xor
test
inc
lret
jo
jbe
into
fs
ja
pop
ja
mov
mov
and
mov
xchg
lock
das
push
sbb
mov
insb
pusha
pop
cmp
ja
dec
cmp
movsl
or
jge
inc
pop
pop
jecxz
dec
movsb
xchg
in
push
mov
mov
mov
les
or
mov
std
pop
lods
cli
ret
and
stos
testl
lods
jne
mov
jp
stos
je
cltd
mov
sub
push
arpl
push
iret
rorl
sub
lods
das
mov
pop
fsts
shrl
inc
fwait
push
push
adc
adcl
xor
mov
out
shlb
cwtl
popf
shrl
adc
dec
jne
pop
pop
cld
pop
pop
mov
mov
inc
scas
pusha
test
push
mov
mull
je
mov
test
mov
fistpl
mov
jp
imul
push
mov
mov
or
dec
lods
psrld
es
add
lea
lret
in
mov
and
dec
ds
adc
adc
and
adc
sbb
inc
sti
dec
mov
imul
ljmp
and
jg
mov
pop
jp
sbb
shrl
lret
popl
pop
lock
xor
loop
ss
fmull
test
dec
test
insl
and
add
mov
outsl
pop
mov
adc
repz
arpl
inc
test
add
gs
pop
and
dec
pushf
cmp
lods
lods
pop
cmp
fwait
jl
mov
loop
adc
out
push
nop
mov
cmp
mov
pop
dec
mov
jnp
mov
es
dec
xor
adc
popa
xor
sbb
dec
add
mov
mov
cmp
aam
or
jne
sub
sub
stos
cmpsb
sbb
inc
lods
xchg
shl
adc
dec
jns
pop
cmp
inc
test
lds
adc
shlb
jge
sbb
fstl
push
nop
jmp
out
sarb
loope
popf
mov
outsb
sub
mov
insl
mov
fistpll
dec
inc
stos
mov
mov
and
andps
jecxz
test
sbb
lcall
cmp
mov
xor
xchg
mov
push
je
insb
adc
jns
cli
ds
sub
je
fstl
divl
push
lods
dec
cmp
push
sbbb
test
insl
push
int3
fcompl
push
rcrb
rclb
push
xor
push
in
cmc
cmp
icebp
mov
dec
mov
and
or
les
mov
pop
push
sbb
int
xor
push
inc
mov
daa
enter
cmp
lods
push
faddp
pop
hlt
scas
sub
sti
xor
shl
sbb
xchg
cmpb
test
loop
stos
les
push
insb
adc
cmpsb
dec
add
add
leave
sarl
clc
sub
int
cmp
in
mov
aam
push
mov
lods
std
es
mov
fistps
pop
sub
shld
cmc
push
cmp
lods
xor
xchg
xchg
mov
push
xor
stos
xor
addr16
test
push
in
push
jbe
jg
call
mov
mov
out
inc
imul
jo
xor
mulb
ret
xchg
sahf
mov
adcb
int
stos
outsl
push
sub
push
push
pop
imul
sub
ja
lret
nop
mov
cmp
sti
roll
sub
lds
cwtl
xchg
or
mov
inc
sbb
xlat
xor
xchg
push
pop
stos
push
mov
xor
adc
sub
nop
test
adc
xchg
inc
lret
idivb
and
jmp
inc
setae
sub
out
dec
pop
ret
adc
test
repz
stos
mov
outsb
das
je
add
mov
addr16
xlat
cmp
mov
dec
mov
dec
loopne
jnp
cmp
ret
add
mov
mov
cli
push
lahf
scas
push
mov
lea
lret
outsl
cmp
lock
inc
js
int
mov
xchg
orl
daa
movsb
bound
ret
or
add
inc
mov
in
fs
jne
push
mov
jecxz
scas
mul
adc
inc
pushl
jge
and
stos
pop
cli
pop
in
das
sub
add
add
mov
pop
pop
in
push
sbb
aad
xorl
mov
mov
std
into
clc
dec
mov
dec
inc
dec
dec
push
xchg
notl
leave
out
loope
iret
cmc
enter
add
dec
sub
out
popf
inc
add
sbb
mov
mov
xchg
cmp
imul
inc
adc
movsb
push
cld
cwtl
scas
mov
test
inc
test
ror
dec
sbb
pop
fs
ret
gs
shlb
std
push
cmp
out
movsl
movsb
add
sbb
movsb
mov
adc
rorl
into
lret
push
add
push
insl
negb
push
lea
in
xchg
mov
ss
sub
cmp
test
jmp
dec
lods
shlb
mov
cmpsl
cmpl
pushf
out
cli
sbb
xchg
das
pusha
les
mov
and
and
xchg
call
ljmp
pop
xchg
inc
movsl
mov
insb
push
in
lock
pop
clc
leave
push
cmp
cmp
fisubrl
daa
mov
stos
add
jo
bound
aad
dec
outsb
mov
lret
mov
jo
icebp
sub
cmp
mov
shrl
outsl
dec
xabort
hlt
ljmp
pop
dec
lock
adc
out
inc
cmp
jmp
xchg
push
inc
je
sbb
inc
scas
arpl
mov
imul
adc
sbb
sbb
insb
sub
add
cmpsb
xor
je
dec
jecxz
dec
shr
clc
xor
int3
dec
xor
pusha
movsl
dec
into
jmp
push
sbb
sub
jns
jnp
cwtl
adc
and
jge
cmp
jp
xorb
test
pop
push
enter
or
rcr
sub
or
jl
arpl
inc
pusha
xor
scas
jg
sbb
pop
andb
adc
push
adc
cwtl
pop
xchg
xor
sub
movsl
outsl
push
cmp
add
pop
int
jmp
shll
sbb
pushf
fcoms
xchg
test
cmp
ds
imul
stc
jecxz
sbb
push
out
cmp
cmpsb
pop
pushf
mov
idiv
mov
cltd
lret
pop
inc
adc
jmp
lcall
xchg
push
aam
nop
daa
fwait
or
out
inc
add
sti
and
lret
test
in
shlb
xchg
xor
mov
or
std
inc
inc
je
mov
push
mov
insb
push
cmp
jecxz
stc
jno
jne
cltd
ja
adc
lods
pop
mov
dec
mov
sub
push
jle
lcall
cmpsb
iret
add
xor
out
lods
aad
sub
pop
jecxz
fistps
ret
out
jno
pop
mov
or
vpor
sub
dec
pop
inc
js
call
pop
das
pop
jne
repnz
jno
jae
and
pop
lods
andb
add
push
pushf
addr16
dec
sub
daa
dec
in
pop
lahf
das
mov
push
mov
add
pop
fwait
mov
jge
jo
push
add
aam
or
das
mov
rorb
jae
cwtl
or
xchg
pop
ja
aas
sbb
and
loop
jb
loopne
cmp
lcall
cs
mov
push
pop
stos
pop
sbb
cli
mov
out
imul
movsb
adc
push
xchg
test
lcall
loope
and
xlat
leave
call
shrb
xchg
sbb
xchg
xchg
out
jmp
rclb
mov
je
jb
movsb
xlat
lret
mov
or
push
mov
mov
lock
push
out
pop
sarl
nop
sub
fsubl
cmp
andl
out
cmp
rolb
aas
push
mov
dec
sub
cmp
sub
or
repz
mov
fldz
jg
aas
enter
push
iret
mov
outsb
pop
sarb
xchg
mov
cmp
insb
pop
inc
popa
in
test
sub
cltd
push
in
add
sub
lcall
xchg
xor
adc
mov
or
sbb
inc
pop
shr
sbb
jno
out
xorl
in
mov
or
add
int
cmp
xor
insb
and
and
push
cld
jl
or
les
adc
clc
inc
mov
sbb
out
pop
mov
jb
ja
lods
push
movsl
mov
pop
daa
pop
mov
mov
mov
pop
jnp
inc
xor
lret
popa
adc
rol
test
push
push
ds
es
cld
in
or
jge
hlt
stc
mov
scas
ret
jns
pop
dec
lcall
or
fbstp
cld
aam
jle
fstpt
jle
xor
jmp
outsl
addr16
xchg
shll
ljmp
arpl
xchg
jge
and
adc
in
pop
loopne
popf
shll
and
movsl
cs
mov
sub
sbb
arpl
mov
paddusb
fldenv
imul
out
int
sahf
mov
repnz
decl
out
test
inc
test
push
or
xchg
xchg
je
cltd
sub
testl
jne
dec
mov
sbb
enter
push
dec
setl
ljmp
int
xlat
pushf
xchg
push
jle
repnz
cmpb
pop
cld
sbb
mov
insb
sbb
dec
xor
xor
cli
push
fstpt
outsl
cmp
das
xor
imul
mov
lock
fnstsw
cmp
push
gs
push
mov
aas
daa
stos
mov
or
xchg
and
test
dec
adc
xlat
pop
test
fdivrs
push
cmpsl
push
mov
shrb
mov
out
mov
iret
push
cmpsb
shll
mov
xchg
subb
push
pop
repnz
iret
adc
pushl
ja
dec
sub
ljmp
shlb
stc
xor
pop
in
cld
cmp
jl
repz
hlt
mov
rcrl
andb
lahf
push
inc
push
test
or
mov
outsl
imul
pop
pop
cmovge
sarb
add
in
add
sbb
add
fmull
repnz
out
stos
sub
jl
cmp
negb
pushf
call
or
mov
in
je
adc
fwait
enter
adc
sub
ss
out
sub
ds
das
aam
shrl
mov
push
ret
cltd
aam
mov
xor
jae
ds
and
sbb
arpl
push
dec
shrb
scas
clc
outsl
mov
movsl
sbb
xor
lds
or
sub
cmc
or
jle
dec
mov
jl
loop
adc
xchg
mov
aaa
fnstcw
or
jge
lret
add
lcall
push
lock
mov
mov
insb
roll
add
fistpl
lret
data16
jl
push
push
loope
and
and
jg
inc
test
inc
cmp
adc
add
popf
cmp
sub
or
cmp
test
push
insb
mov
icebp
outsb
leave
xor
aam
pop
mov
and
adc
js
mov
dec
movsb
cwtl
jae
pop
dec
cwtl
dec
ret
adcb
std
inc
lods
sbb
fldcw
pop
and
leave
popf
ja
mov
push
cmp
xchg
inc
adc
cmp
mov
jnp
hlt
adc
inc
lea
fsincos
sarl
push
dec
sub
sarb
stc
cmp
jmp
xchg
and
pop
xchg
pusha
loopne
insl
cwtl
ljmp
and
xchg
mov
mov
lret
lods
pop
nop
jb
sti
out
jo
sub
daa
sbb
in
outsb
jb
notb
dec
scas
sbb
mov
pop
daa
dec
loope
and
sbb
insb
xchg
adc
fs
dec
or
mov
mov
adcb
hlt
dec
call
imul
aad
inc
mov
mov
mov
stos
aaa
mov
mov
into
pop
mov
xchg
inc
aad
xor
mov
pop
inc
mov
call
in
sub
jl
xor
adc
pop
push
int
dec
inc
sti
std
pusha
and
ljmp
pop
dec
rcll
mov
outsb
inc
cli
sub
imul
insl
imul
pop
js
aad
mov
pop
js
rorb
xchg
repz
push
xchg
push
cmp
jmp
push
jae
test
dec
mov
adc
shl
fdivrp
mov
or
movb
add
push
cmpsl
mov
stos
xchg
xchg
lahf
rcr
std
stos
leave
les
fimull
xchg
mov
sub
push
int
xchg
out
jmp
daa
jecxz
inc
dec
pop
mov
subl
and
jbe
push
fdivrs
cmp
in
push
dec
dec
jle
cmp
pop
scas
jmp
inc
popa
fnsave
popl
cmp
push
dec
pusha
popf
jle
jb
cmpsl
jno
push
in
out
pop
mov
fldenv
add
mov
in
jnp
daa
mov
jns
pop
leave
lods
ljmp
cmp
or
mov
jnp
push
mov
lock
loop
adc
mov
add
leave
fwait
adc
cmp
sub
inc
adcl
mov
pop
sbb
insb
aam
push
jmp
xchg
add
pop
mov
popf
icebp
sbb
sbb
adc
and
imul
mov
imul
pop
enter
push
subl
xchg
mov
aad
idiv
mov
data16
pop
pop
fdivrp
cmp
mov
loopne
pop
test
dec
sti
cli
mov
lods
bound
lcall
dec
call
testl
sbb
pop
pop
lods
sub
shrl
add
lahf
cmp
cs
mov
push
push
lods
cmc
push
cmp
add
or
cmp
call
imul
xor
cmp
adc
mov
xlat
icebp
jb
repz
jae
scas
mov
xor
jmp
cmp
mov
scas
cmp
jne
loope
sub
arpl
and
cmp
and
fwait
popf
jns
cmp
popf
jno
sbb
xchg
dec
pop
adc
rorb
jns
sbb
in
rolb
imul
sub
jge
iret
dec
in
in
xchg
ss
inc
xor
enter
sub
ss
or
out
jae
shr
or
popf
mov
repnz
testb
jecxz
push
addr16
stos
sbb
lds
jl
sub
hlt
loop
ds
lahf
pushf
adc
cltd
fsubp
add
fistps
xchg
xlat
fdivl
ljmp
pop
xchg
sbb
mov
pop
outsl
fistpl
outsb
cld
arpl
pop
leave
and
fists
pop
cmp
mov
and
cltd
loop
pop
fs
sub
jae
std
lahf
adc
and
pop
sub
lret
mov
stos
pop
bound
pop
push
stc
mov
and
sahf
movsb
adc
jle
shrl
leave
scas
into
add
nop
or
xchg
inc
sub
sbb
frstor
outsb
in
jg
push
int
jge
mov
mov
orb
sti
ficompl
xor
js
popa
mov
mov
xor
rorl
repz
addr16
push
mov
xchg
fistpll
lahf
mov
loopne
pop
inc
pushf
xor
pop
xchg
popf
aad
jge
and
leave
sub
jae
adc
push
jb
xor
shlb
xchg
mov
or
jmp
inc
pop
pop
jo
push
scas
and
dec
js
arpl
add
ds
mov
xor
mov
mov
and
jbe
inc
or
clc
sbb
adc
test
cltd
adc
icebp
pop
push
call
cltd
and
rorb
push
inc
outsb
sbb
pop
sub
push
push
in
and
push
mov
scas
cld
movb
call
push
adc
or
dec
mov
fdivp
push
popf
in
jns
or
fwait
mov
das
hlt
ficomps
and
jl
adc
push
lcall
dec
lret
insb
das
popa
in
rcr
mov
mov
or
push
cmp
pushf
lret
ss
add
cmp
inc
sbb
xor
sarb
add
fwait
xor
fneni(8087
cs
pop
and
dec
mov
add
aas
out
and
push
ds
mov
shlb
fisubrs
mov
inc
out
movsb
sub
mov
inc
arpl
xor
aam
lahf
out
daa
pusha
cmp
stc
fldcw
in
pop
cmp
or
dec
imul
ficoml
insb
pop
sub
pop
push
add
sahf
push
lea
scas
pop
subb
ret
addb
leave
cmp
xchg
sbb
or
pop
bnd
aas
jmp
lahf
shlb
movsl
out
in
ficoms
lods
mov
adc
inc
pop
sub
sbb
push
xchg
mov
fimull
xchg
and
ret
adc
shrb
cmp
add
jo
into
xchg
lods
sbb
inc
jl
push
jnp
sarl
mov
inc
nop
push
or
out
mov
fwait
jne
or
push
bound
xchg
mov
cmp
movsb
jns
sub
aam
andb
cmp
adc
in
sti
or
movsl
dec
jecxz
xchg
add
in
fwait
add
dec
sti
cmp
push
lcall
xor
ds
mov
stos
jo
cmpsb
push
cmp
jge
mov
add
xchg
jl
jbe
popa
push
push
fs
add
shl
jle
or
cmp
es
sarb
test
push
jbe
roll
jb
jb
mov
or
incb
stos
jo
sahf
call
sbb
ret
stos
stos
icebp
or
in
dec
inc
cmp
adc
aas
sub
jp
neg
sub
mov
fwait
cli
shrl
ljmp
cmp
add
jmp
divl
push
dec
decb
mov
lods
aas
inc
dec
ret
xor
mov
das
and
popf
push
sahf
xchg
loop
push
sbb
loope
xchg
sub
lds
cmp
add
push
popf
incl
cli
sti
fbld
and
lcall
or
or
aaa
jecxz
je
mov
or
inc
mov
pop
sub
iret
mov
jnp
ljmp
jo
and
test
cli
pop
xor
push
lret
rclb
cmp
mov
out
mov
out
mov
repnz
std
xor
test
ret
leave
mov
pop
push
mov
jecxz
dec
xchg
leave
lock
inc
mov
sub
add
pop
add
pushf
gs
insb
lret
and
lret
daa
pop
sbb
pop
lret
xchg
push
ret
push
bound
inc
pushf
into
cmp
add
add
sub
dec
push
out
inc
mov
scas
dec
inc
push
shl
stos
xchg
test
xchg
xchg
ss
setl
lcall
cmpsb
mov
sub
pop
stos
push
xlat
push
testl
aaa
rcrl
cmp
jl
sahf
rcr
setnp
popf
aad
shrb
pushf
mov
das
add
test
mov
outsl
mov
add
scas
adc
sbb
pop
adc
sub
frstor
popa
cmc
and
adc
push
mov
fs
cmp
add
out
pop
ret
jg
xchg
and
push
fiaddl
cmp
cmp
sar
int3
movsb
mov
mov
in
pop
jg
or
sti
sbb
xor
sbb
arpl
faddl
sbb
dec
cmp
dec
subl
xchg
cmpsl
xor
or
icebp
add
inc
xor
dec
mov
movsb
jmp
cmp
jb
jecxz
lods
pop
imul
push
ret
push
icebp
cs
pop
insl
shrl
add
mov
nop
sbb
ja
jg
and
lcall
shll
sub
repz
xor
or
les
test
mov
pop
lret
imul
cld
xchg
mov
xchg
sub
fcoml
cltd
xlat
push
inc
data16
jb
popf
pop
xchg
sbb
sbb
xchg
lret
in
movsb
cltd
and
mov
dec
repz
cmc
xor
aad
jae
add
in
mov
sbb
hlt
add
cmpsl
sbb
mov
xor
dec
lods
filds
inc
mov
or
fld
das
adc
push
adc
xchg
add
imul
jb
add
out
es
or
fwait
mov
mov
mov
pusha
inc
cmp
outsb
int
daa
jmp
push
mov
add
in
adc
ds
orb
lods
xchg
lret
stos
int3
or
adc
mov
dec
mov
int
loop
repz
xchg
int
loope
mov
aaa
or
mov
aam
lods
dec
scas
sub
popf
mov
adc
inc
fcoms
mov
dec
xchg
stos
in
rclb
lods
das
ljmp
pop
cmpsb
or
in
loope
pushl
mov
ss
imul
pop
jmp
xor
push
arpl
fwait
dec
adc
push
insb
mov
mov
pop
push
mov
sbbl
leave
gs
add
sbb
sub
jge
mov
add
pop
mov
cmp
sbb
jo
sub
xchg
mov
test
dec
movsl
testb
add
pop
movsl
dec
or
lcall
or
cli
xor
addr16
pop
in
jo
mov
into
cltd
lds
movl
or
mov
xchg
les
js
jnp
pusha
and
ljmp
jb
jle
nop
cli
cld
dec
push
inc
or
insl
push
xchg
aas
push
push
adc
mov
xchg
call
orb
std
jp
pop
or
sub
sub
mov
xor
dec
and
xchg
mov
cwtl
ss
push
iret
or
lret
dec
and
es
mov
adc
imul
into
dec
das
cmp
leave
test
clc
push
mov
mov
jge
pop
ds
out
dec
sub
add
mov
push
cmp
add
xlat
cmp
inc
push
fbld
xor
leave
add
call
lds
or
mov
pop
xor
ror
push
xchg
sbb
adc
xchg
inc
int
cwtl
mov
cli
xor
xchg
mov
lret
das
xor
rcrl
sti
ffree
fistpl
xor
lock
daa
jb
loope
lret
idivl
cli
dec
cld
push
mov
popa
jbe
cmp
inc
repz
mov
stc
sub
aam
mov
add
mov
movsl
aas
push
fsubp
cmp
roll
pop
add
lds
sbb
subl
push
lods
mov
inc
jg
mov
adc
push
lods
outsb
nop
addr16
or
cmc
fsubl
pop
sbb
js
sub
in
and
inc
cltd
sti
push
icebp
or
inc
arpl
or
ret
cs
imul
add
aaa
push
jmp
push
or
bound
push
dec
nop
repnz
sti
lret
push
stos
fwait
inc
xchg
pop
arpl
jns
lods
sub
hlt
jmp
and
adcb
scas
xchg
xchg
movsb
sub
gs
jno
ficoms
cmp
gs
arpl
ret
les
mov
mov
mov
out
inc
xchg
mov
xor
stc
into
pusha
sbb
scas
cltd
out
jo
sti
pusha
mov
push
nop
inc
and
mov
sub
imul
add
mov
inc
jae
sub
add
loop
stos
sub
outsl
insl
out
mov
push
test
jbe
loopne
or
xor
and
inc
jne
fistl
cmp
cwtl
out
dec
jecxz
pop
jb
fcoms
xorl
cltd
lahf
fwait
ret
sahf
or
stos
loop
popa
cmp
rolb
rol
and
or
sbb
ret
push
xor
popf
stos
lock
out
dec
rcrl
cmp
subb
subb
sbb
cmc
jecxz
cmp
jno
push
xchg
stos
mov
out
daa
fnstcw
ret
aam
cmp
mov
mov
dec
lds
int
xor
push
dec
fdivr
repz
lock
inc
or
sbb
rolb
sub
mov
rolb
in
loopne
stos
je
mov
jmp
mov
sarb
repnz
pop
jl
or
insb
and
jo
subb
jno
test
adcb
xchg
xlat
mov
jmp
xchg
lcall
xchg
pop
inc
ret
rcl
xor
popa
in
cmpl
pop
hlt
jns
xor
fsts
cmpsl
push
cmp
pop
cmpsb
sbbb
sbb
incl
lahf
mov
outsb
push
enter
inc
lahf
imul
std
loope,pn
xor
jbe
fsubp
pop
mov
jge
cmp
es
xchg
dec
lret
xchg
mov
cmp
arpl
sti
pop
mov
dec
cli
mov
pop
mov
ljmp
pop
push
mov
mov
int3
and
xor
in
flds
cmpsb
jl
test
mov
jb
aas
and
out
push
xor
push
adc
aaa
es
push
mov
sbb
sbb
cmp
add
in
aam
dec
fstpl
and
mov
out
test
bound
cwtl
enter
xchg
mov
outsb
test
in
push
rorb
dec
xor
clc
pop
pop
mov
and
hlt
adc
lods
jg
inc
stc
rclb
mov
add
lods
cli
loop
int
insb
scas
fnstenv
cli
push
xor
mov
cmp
shl
add
xchg
jmp
or
mov
repz
leave
lahf
loope
push
cmp
sbbl
push
ret
jge
adc
inc
js
test
adc
lock
loope
push
adcb
pop
jp
decl
ds
inc
fistpll
and
and
les
test
jge
xchg
jmp
dec
xchg
lea
pop
mov
fs
jns
cli
push
cmp
cli
mov
cld
mov
pop
jge
lret
add
mov
push
sub
mov
ret
mov
icebp
shl
daa
shrb
ja
out
dec
inc
sbb
sub
call
or
xchg
das
mov
cmc
fwait
test
inc
and
pop
jg
jb
jp
dec
mov
xor
mull
pop
sbb
insb
lods
outsl
push
imul
xlat
cmp
dec
adc
cld
add
inc
lahf
or
adc
shlb
addr16
xor
hlt
lret
icebp
dec
mov
jno
inc
ret
ds
inc
test
xchg
popa
inc
mov
rcll
add
pop
sub
int
popf
notb
dec
sub
dec
xchg
aas
enter
inc
andb
pop
or
js
sti
nop
sahf
into
rcr
xchg
aas
insb
out
int
mov
cmp
cmpsl
cmp
mov
rclb
out
push
mov
inc
popf
hlt
data16
cmpsb
push
jle
stc
out
es
repz
shrb
push
gs
insb
lea
sub
iret
aam
jne
add
xchg
jmp
mov
xor
aas
or
jl
xor
jecxz
daa
sbb
stos
adc
jae
in
dec
call
mov
pushf
cmp
shrl
popf
sbb
adc
and
xor
jl
sbb
and
pushf
popf
jl
push
or
mov
sbb
fnstenv
adc
dec
cli
push
pop
repz
cmpsb
int
in
ljmp
sbb
mov
ja
push
decl
jmp
xchg
adc
mov
or
and
test
and
int3
push
sbb
push
jae
out
jae
aas
cmpsl
adc
scas
js
cmp
adc
mov
push
adc
sbb
inc
jae
lock
add
push
scas
dec
pop
cmpsb
lods
sub
add
in
popa
mov
pop
dec
dec
sbb
enter
cmp
test
push
out
jns
jne
gs
js
loope
fistps
clc
fwait
out
mov
pop
dec
cmp
popa
push
hlt
pop
ret
dec
scas
mov
sub
xchg
push
sti
mov
dec
mov
pushf
push
mov
sti
xor
dec
mov
lahf
stc
into
push
pushf
cli
test
aas
mov
mov
push
enter
or
lods
dec
aad
mov
daa
mov
shll
cmpsb
jbe
sbb
jp
push
lods
jmp
adc
push
pusha
imul
scas
es
shll
dec
dec
mov
dec
repnz
insb
stc
jno
xor
sub
cltd
sbb
sahf
mov
frstor
push
mov
ljmp
xchg
ds
out
jg
push
or
add
adc
and
into
push
adc
adc
lds
sbb
fldcw
leave
add
xlat
xlat
push
xor
mov
add
pop
mov
movb
push
mov
outsl
loope
lea
cli
sbb
xor
adc
push
hlt
or
outsl
andl
cmp
cmpsl
mov
movsl
sbb
mov
nop
xchg
push
mov
cmc
clc
xor
test
inc
scas
cld
lret
enter
push
xor
cmc
cmp
mov
rorb
mov
pop
sbb
loop
mov
jecxz
cs
push
or
xchg
in
fcmovbe
sub
mov
fimull
std
mov
mov
and
addb
pop
es
mov
mov
xor
mov
in
or
pop
add
mov
and
ljmp
pop
xor
repnz
iret
cwtl
jmp
cli
lods
push
pop
repnz
xor
out
out
pop
sub
jne
pop
std
jg
add
or
addr16
jns
fstl
cmc
mov
shr
cmp
or
pop
pop
pop
test
or
sbb
cmc
icebp
cmp
mov
jnp
mov
and
xor
bnd
out
pop
jne
in
ret
loope
orl
ljmp
mov
xchg
je
test
jne
leave
mov
lods
xor
mov
movsl
mov
cmp
in
inc
lret
inc
mov
sarl
sahf
sbb
or
dec
push
push
or
jge
ds
aas
jg
xor
fsts
sbb
subb
lret
icebp
cmp
insb
push
sahf
dec
ljmp
jg
dec
sub
outsl
mov
lds
pop
cmpsl
outsl
outsb
add
adc
loop
dec
dec
adc
sub
inc
stos
icebp
pushf
push
cs
jo
inc
mov
add
mov
xchg
clc
les
out
push
cmp
shrl
ss
jge
fiaddl
adc
mov
cmp
call
add
stc
jo
jnp
popf
cs
lock
pusha
adc
ss
loopne
xchg
and
aas
loop
mov
cmp
ds
jbe
mov
xchg
push
bound
popa
out
dec
bound
dec
push
xchg
movsb
in
lret
nop
push
add
inc
push
pop
push
push
xor
push
dec
or
mov
dec
dec
jnp
les
fldcw
ficoms
std
iret
mov
out
mov
sbb
mov
cmpsl
sub
sub
sub
loop
or
push
in
rorb
inc
push
mov
lock
jae
add
push
sti
mov
pop
sbb
xchg
mov
xor
mov
adc
ja
das
cmpsb
int
inc
jae
add
dec
sti
ffreep
adc
stc
adc
sbb
sbb
sub
pushf
xor
mov
or
push
into
mov
push
ja
mov
push
imul
xor
mov
fcomps
lret
mov
and
mov
add
rolb
cmp
or
pop
lds
outsb
cs
cmp
mov
xor
rorl
cmpxchg
adc
stos
jmp
imul
addr16
imul
mov
add
ljmp
xchg
mov
add
jae
int
mov
and
mov
push
fistl
stc
popa
lds
jno
ret
repz
insb
lahf
cmp
sbb
arpl
clc
lods
in
dec
push
lret
jne
jmp
dec
and
add
add
mov
mov
imul
xchg
sbb
icebp
lahf
mov
incb
icebp
adc
call
aas
sbb
loopne
fcompl
aaa
cmc
std
lock
xlat
dec
adc
mov
push
mov
imul
mov
icebp
mov
lods
jg
pop
jae
in
ss
test
nop
dec
dec
into
mov
sbb
cld
mov
shrb
lret
or
loopne
outsb
pop
push
or
mov
adcb
rol
pop
lods
xor
dec
ret
clc
and
test
inc
pop
and
cmp
push
in
inc
xchg
mov
push
lods
adc
push
mov
and
fwait
sbb
jmp
dec
cmc
or
pop
iret
es
stos
out
jmp
out
mov
or
cmp
adc
shl
sbbl
sbb
pop
and
aam
xchg
push
lea
and
clc
iret
and
mov
lcall
jge
pop
test
xchg
sbb
xor
in
shlb
adc
imul
sbb
dec
xchg
mov
loopne
or
pop
xchg
out
sbb
mov
add
pop
stos
jbe
stos
daa
test
ljmp
mov
cmp
clc
pop
movsl
jae
xor
jbe
cld
addr16
popf
mov
push
sbb
cli
ljmp
adc
push
in
push
mov
aam
inc
icebp
and
pop
fcoml
subl
int
ds
lcall
xchg
mov
inc
lcall
xchg
cmp
cmpsl
inc
test
cmpsl
sbb
fldt
or
mov
fiaddl
cmc
popa
sbb
inc
shlb
xchg
jno
jl
scas
fsubl
lods
enter
or
out
add
aaa
das
or
loopne
ret
xor
faddl
xchg
or
sub
lahf
in
adc
adc
out
mov
popf
cmpsb
repnz
dec
mov
add
xor
lods
cmp
sub
fucomip
or
and
cmp
test
adc
imul
xchg
sti
or
fisttpll
dec
dec
sahf
pop
outsl
ss
es
sbb
insl
mov
adc
mov
and
scas
and
and
insb
dec
cmp
inc
jecxz
mov
dec
xor
xorl
and
mov
hlt
mov
mov
movsb
pusha
dec
inc
js
cmp
out
sub
clc
push
faddl
add
push
out
mov
sbb
into
sub
adc
and
sbb
add
xor
sti
mov
lods
fisubl
jnp
ds
mov
js
in
testb
mov
imulb
fs
cmp
loopne
jns
lods
mov
sarl
pop
fwait
push
imul
out
lds
bound
cs
je
outsb
adc
add
jnp
lahf
fsubl
push
rorl
cmp
inc
xchg
add
pmulhuw
or
mov
pop
in
xchg
movsb
shl
add
cmpsb
cmp
test
aam
and
mov
fs
mov
test
mov
arpl
loop
cmpsb
jne
orb
repnz
inc
lods
repz
mov
adc
imul
sub
pusha
mov
jbe
push
rol
cltd
les
fld
aas
out
adc
jecxz
fistpl
test
jbe
xchg
add
cmp
fs
mov
sbb
stos
lahf
xor
push
ret
shrb
movsl
fimuls
or
movl
in
je
mov
imulb
xorb
cmpsl
insb
lods
sub
mov
pop
lret
push
add
pop
cmpsl
in
insb
sahf
es
cld
test
arpl
sub
push
sbb
push
data16
jns
xchg
jnp
and
or
out
mov
jmp
fldenv
out
std
dec
mov
xchg
ss
xchg
mov
in
mov
push
and
xchg
cmpsl
push
and
push
push
jb
xor
movsb
inc
shrb
push
addr16
and
cltd
dec
and
icebp
jb
jbe
scas
pop
movsb
stc
or
subb
aaa
and
sbb
push
scas
push
jge
sbb
mov
jmp
fisttps
roll
movsb
out
pop
shll
xchg
mov
push
push
sub
sub
pop
fstpt
gs
repz
push
movsl
loopne
xor
jg
test
xlat
mov
xchg
dec
mov
test
fidivs
hlt
xor
sub
mov
inc
dec
inc
mov
test
mov
popa
and
push
faddp
add
inc
cmpl
xor
in
mov
int3
int3
cmp
xor
push
push
fwait
cmc
pop
mov
add
jecxz
mov
pop
test
sbb
pusha
sbb
les
push
xchg
cmp
gs
sub
or
mov
gs
xor
notb
int3
std
leave
loopne
cli
sub
xor
mov
mov
in
mov
out
xor
insl
in
call
imulb
pop
ds
scas
rcrb
outsb
cli
dec
and
lcall
pop
and
shll
xchg
rorb
daa
mov
inc
mov
jo
cs
bound
push
outsb
out
sub
addb
mov
push
adcb
in
das
and
es
in
sbb
push
ret
jns
test
or
push
stos
cs
push
inc
mov
fnsave
cli
out
adc
pop
insb
loope
adc
and
mov
sub
icebp
nop
sub
inc
or
or
inc
imul
fadd
mov
ret
into
je
add
aad
loop
or
lods
lret
mov
adc
ljmp
faddl
push
ljmp
loope
xor
cmp
aam
sahf
inc
xchg
cmp
iret
leave
pushf
mov
inc
cmp
rorl
lods
xchg
pop
call
pop
jb
pop
mov
mov
mov
movsb
stc
dec
adc
push
dec
in
arpl
in
mov
mov
hlt
mov
pop
ss
lods
mov
inc
cwtl
dec
arpl
or
inc
test
xchg
sub
ret
dec
and
xchg
jl
insb
and
lahf
mov
mov
jne
jge
repz
sbb
and
jo
inc
lahf
jg
jne
add
jne
jae
fdivs
cwtl
fstp
add
sarl
mov
insb
sbb
xor
and
rol
adc
pusha
mov
cmp
loopne
mov
xor
sbb
pushf
push
mov
inc
inc
nop
xor
ljmp
loop
jmp
adc
push
sub
ja
mov
mov
mov
jecxz
dec
aad
pushf
rclb
mov
in
mov
dec
cmp
lret
out
mov
push
cmp
rcr
sub
adc
mov
pop
int3
int
cmpsl
push
sbb
in
into
jb
imul
dec
push
fsub
adc
andb
add
outsb
frstor
mov
out
fcmovb
inc
xchg
jae
int3
mov
pop
addr16
enter
push
xchg
clc
dec
lds
test
cli
lock
inc
fimuls
nopl
inc
stos
inc
lcall
mov
aam
or
dec
ja
test
cltd
subb
xchg
lcall
imul
es
mov
repnz
je
in
cmp
pop
adc
push
int3
jmp
push
xlat
push
cmp
push
nop
pop
cwtl
add
pop
aaa
push
mov
je
jo
lret
mov
movsb
cmp
xchg
and
mov
push
mov
cmp
ss
inc
scas
jnp,pn
push
cmp
push
test
lds
cld
ljmp
mov
sbb
shrl
aas
fnstsw
fwait
inc
out
shlb
pop
inc
incl
push
fisubs
cmpsb
push
outsb
cwtl
sbb
or
sub
cwtl
pop
js
pushf
mov
push
jns
lds
pop
stos
in
cmp
adc
dec
loopne
out
sub
gs
mov
repz
adc
pop
fmulp
sub
or
cmova
test
cmp
xor
outsl
fs
xchg
sti
mov
jno
rcr
pusha
cli
nop
lret
jcxz
mov
xchg
in
sahf
pop
mov
idivb
lret
cmp
jmp
pop
clc
pop
hlt
dec
and
sub
push
xlat
js
cmpsb
xchg
pop
xor
ffreep
aas
and
inc
in
scas
inc
test
into
jg
jg
les
xchg
movsl
or
rorb
and
popl
push
subb
mov
jnp
lret
popa
icebp
mov
push
mov
push
sbbl
mov
gs
jno
fstpt
mov
mov
inc
jns
rolb
or
and
sub
dec
cmp
jb
xorl
in
ficompl
insl
mov
xchg
test
sti
js
shrl
cmc
movsl
cmpsb
leave
cld
xchg
aaa
mov
insl
clc
jno
mov
push
mov
test
subb
scas
mov
mov
dec
jnp
push
add
push
push
sbb
mov
ss
jle
divb
pop
aas
pop
sbb
stc
sub
or
ss
pop
mov
lds
and
xchg
dec
into
jecxz
cmp
fbld
cmp
dec
sub
or
or
xor
or
mov
into
sahf
jnp
shll
sbb
std
push
xor
subl
repnz
mov
mov
inc
test
and
push
push
scas
inc
dec
stos
addb
xor
insl
sbb
int
mov
daa
jo
dec
push
mov
sbb
xor
mov
dec
andb
mov
jns
es
cmp
shlb
jne
mov
fmulp
dec
sub
pop
outsl
int
and
xchg
adc
adc
cmc
cld
add
stos
vmread
push
mov
xchg
and
mov
test
xchg
xchg
test
lahf
xchg
cmp
iret
cmp
mov
push
lahf
int
fidivrl
les
daa
mov
loop
call
inc
dec
xor
mov
pop
sbb
loope
inc
outsl
iret
pop
push
sub
mov
dec
add
fistpll
in
sti
repnz
cwtl
sub
popa
mov
push
cltd
cwtl
ss
jb
out
or
nopw
pop
pop
pushf
hlt
aam
push
mov
xchg
enter
lea
push
int
cmp
sub
xchg
jl
addb
xor
fists
sub
xchg
add
dec
xchg
and
aam
xchg
or
lea
mov
ficomps
dec
stc
mov
in
mov
stc
scas
rcrl
in
mov
fidivrl
mov
cmp
leave
add
test
lds
mov
lret
in
arpl
test
cmp
sub
loopne
lea
add
dec
leave
mov
das
sbb
cmp
int
divb
rcrl
test
cli
sub
rcll
sbb
mov
jp
aaa
test
roll
cmp
dec
sbb
outsl
stc
sub
aaa
cwtl
dec
or
sahf
mov
xchg
mov
pusha
mov
lahf
dec
adc
push
scas
mov
popf
dec
arpl
adc
popf
sub
sti
jg
mov
cmp
inc
adc
mov
scas
pop
cmpsl
mov
test
xchg
xchg
jo
fmul
add
jecxz
loope
add
in
jo
shl
outsb
ret
aaa
cmp
pop
jo
enter
jae
in
pusha
cmp
stc
hlt
dec
jne
mov
inc
add
popa
sbb
jp
lahf
and
cmpsl
pop
sub
and
jno
test
in
or
inc
subb
test
notl
pop
inc
or
jle
test
int
jbe
mov
ss
or
adcb
shlb
je
push
dec
cmp
sub
sbb
xor
mov
movsl
fildl
jns
sahf
xchg
movsb
out
faddp
mov
pop
cmpsl
mov
jle
in
sti
or
sahf
xorl
mov
xor
cmp
jno
xor
cmp
adc
push
cmpb
imul
dec
bnd
in
inc
xor
inc
stc
ret
push
ds
pop
pop
sub
fcmovne
xchg
or
dec
mov
ret
std
stos
je
xchg
adc
adc
outsb
fs
mov
dec
leave
add
lret
loopne
sub
mov
mov
mov
dec
scas
rcl
cld
inc
test
xor
inc
cmpsl
div
or
fiaddl
lahf
inc
push
out
je
or
inc
out
lods
jl
inc
pop
ljmp
cmpsb
jp
xlat
nop
fidivrl
imul
test
ret
cwtl
sbb
int3
loop
loopne
scas
shlb
std
mov
loopne
pop
pushf
sbb
sarb
scas
sub
icebp
xlat
cmpl
mov
sbb
insb
arpl
imul
or
jo
call
aad
inc
inc
dec
lret
jo
popf
sbb
mov
mov
mov
fstps
pop
sbb
sub
cld
iret
scas
push
pop
adc
xor
adc
xchg
mov
pop
sbb
icebp
pop
insl
push
push
mov
xchg
js
sbb
xor
std
idivl
jns
push
aad
lods
dec
mov
sub
jle
daa
loop
add
loopne
iret
repnz
rcll
xor
sub
pop
mov
mov
loopne
mov
xchg
mov
fcomps
jecxz
lods
ret
test
sub
sbb
mov
xor
out
cld
ret
jns
insb
imul
out
gs
mov
in
ja
jnp
adc
xor
pop
out
mov
lret
mov
stos
stos
inc
mov
scas
fidivrl
or
jmp
aas
mov
mov
mov
les
jb
cmpsl
stc
jl
nop
es
cltd
pop
xchg
out
cmpsb
fdivrl
jmp
gs
mov
or
lea
test
popf
test
sub
xor
adc
std
cs
push
add
jg
stos
scas
xor
sahf
mov
shrb
mov
pop
dec
lcall
in
clc
pop
xlat
popa
mov
cmp
jae
or
sti
sbb
jo
in
cmp
aad
or
lods
and
scas
repnz
addr16
sbb
mov
mov
add
insb
pushf
dec
bnd
scas
sar
bound
movsb
add
inc
inc
xchg
jnp
aam
cmp
shrl
inc
je
out
shlb
mov
add
sub
adcl
test
in
cmp
pop
in
aam
inc
push
mov
cmc
and
cmpsl
and
mov
inc
mov
push
mov
push
sbb
nop
adcl
fldt
imul
and
je
nop
ficomps
push
push
repnz
and
scas
insb
out
int3
lods
jge
cli
adc
call
jecxz
cmp
repnz
push
daa
mov
subb
push
inc
xchg
aad
ljmp
jecxz
jno
stos
test
fcoms
mov
js
inc
push
mov
dec
sarl
cmp
xchg
ror
jb
dec
jge
mov
nop
fucomp
mov
addr16
outsl
aaa
cli
andl
fucomip
sub
and
stos
in
sub
and
lea
push
fimull
or
xchg
stos
push
jl
and
dec
pop
dec
orl
jle
xchg
push
ret
pop
mov
lret
sub
fs
and
addl
daa
push
cld
add
and
lcall
icebp
lods
cmp
dec
push
lahf
out
dec
xor
sbb
negb
ret
ret
xor
pop
xor
cmp
and
push
pop
loopne
loopne
movsb
cmp
clc
lods
dec
out
fcmove
sub
push
mov
jo
imul
inc
sbb
arpl
push
nop
push
adc
in
std
pop
xlat
and
cmp
adc
dec
iret
mov
repnz
out
outsl
sbb
push
icebp
cmp
xchg
je
mul
mov
cmpsl
shlb
jmp
loop
add
outsb
ret
int
lret
jno
jle
push
push
lss
mov
lret
push
add
pop
sahf
dec
xor
repnz
out
aam
cmc
xchg
imul
fwait
andl
test
dec
fs
cmp
pushf
add
cmp
xchg
xchg
jge
insl
add
in
sub
sbb
in
nop
stos
or
test
pop
xor
inc
shrl
insb
mov
aaa
je
sarb
out
pusha
and
dec
or
lcall
sbb
cs
add
push
ljmp
adcl
dec
cmp
mov
xchg
sub
add
sub
xchg
pop
mov
outsl
lret
stos
mov
jecxz
ret
js
sbb
leave
ljmp
mov
call
push
movsl
rep
sub
dec
movsb
xlat
dec
dec
aas
rcrb
ret
js
cmp
jns
lahf
outsl
jecxz
jne
add
imulb
out
in
jp
js
dec
and
mov
xchg
js
sub
xchg
pop
inc
jo
mov
and
loopne
adc
xchg
dec
push
int
or
add
rorb
into
add
out
push
cmp
outsb
movsb
into
lds
stos
aaa
insb
aam
icebp
fadds
push
jp
std
fneni(8087
push
mov
push
push
adc
imul
popa
lds
aaa
in
mov
repz
stos
pop
mov
mov
gs
sbb
lret
jns
pop
hlt
dec
fidivl
cmp
fs
jmp
fcmovnu
into
ja
idivl
dec
jno
rcll
dec
xorl
mov
stos
adc
bound
mov
arpl
sbb
xor
xor
into
adc
jp
pop
aad
daa
and
inc
xor
push
cld
test
push
addl
pushf
push
mov
loope
rclb
sar
fcoms
test
dec
fidivrs
mov
test
lock
idivb
je
ljmp
jnp
jg
int
gs
xorl
push
push
jbe
out
bsr
jg
fcomip
dec
ficoms
xor
sbb
std
lock
push
xchg
fs
icebp
lret
push
sub
out
push
cltd
mov
iret
pusha
lods
xor
jo
mov
mov
addr16
je
cmp
pop
inc
cmp
dec
insl
or
add
enter
gs
into
insl
das
cmp
mov
or
mov
and
sub
inc
test
dec
lods
repnz
in
xchg
in
adc
dec
push
dec
es
repnz
js
adc
cmp
jecxz,pn
jecxz
push
jne
cmp
stos
mov
cld
add
int
outsl
push
pop
cltd
test
add
dec
or
adc
mov
pop
in
rorl
rolb
jge
fldenv
pop
dec
jno
daa
mov
mov
mov
dec
repz
sbb
out
mov
xchg
adc
xchg
jae
cmp
mov
sub
mov
sti
addr16
jns
sbb
pop
inc
insb
cmp
hlt
and
test
push
push
popl
mov
lods
sbb
jecxz
call
adc
adc
subb
dec
jns
or
inc
sti
pushf
mov
add
jge
pop
sub
lods
pop
add
fstl
sub
leave
inc
push
pop
int
jno
mov
adc
rclb
nop
jb
add
iret
rorl
imul
pop
ret
mov
add
pop
jns
iret
mov
inc
sbb
jg
mov
js
push
jmp
push
add
cmpsb
push
mov
cmc
shlb
cltd
pushf
mov
dec
jg
fistps
arpl
and
xlat
fsub
dec
flds
cs
lret
sahf
gs
aas
cmpsb
mov
fnstenv
aas
adc
push
mov
inc
lret
pop
mov
aad
dec
cmp
popa
shrb
inc
les
cwtl
and
xor
rclb
or
dec
sbbl
test
aad
jge
lret
or
call
sti
push
bound
pop
add
cli
ljmp
rorl
movsl
movsl
inc
mov
jge
adc
aam
daa
test
imul
inc
mov
jbe
jle
sbb
xor
hlt
les
sbb
pcmpgtw
and
mov
ljmp
and
or
ja
sbb
sub
jecxz
push
push
jnp
sbb
shl
cmp
dec
jb
stos
jecxz
stos
xor
push
fnstsw
cmpsb
mov
enter
clc
aaa
ja
outsl
jo
stos
lcall
subl
mov
fbld
fcompl
popf
mov
das
xchg
pusha
bound
sub
add
dec
jb
dec
lahf
movl
jne
push
mov
inc
pop
push
jecxz
cmpsl
xor
bound
call
test
adc
es
out
cmpsb
and
cmpsb
lds
popf
pop
xchg
push
mov
cmp
jmp
addr16
cltd
movsl
adcb
add
jb
push
enter
ret
hlt
push
in
add
cltd
jp
jmp
dec
pop
fsubl
ja
test
enter
into
pop
sti
clc
sti
inc
negb
rol
movsb
lods
mov
aas
xor
arpl
rcll
stos
ret
or
or
add
sub
cwtl
js
addr16
dec
xchg
leave
and
dec
xor
fst
lods
mov
loop
or
or
incb
xor
dec
sar
add
jb
push
test
inc
xchg
rcrb
dec
popa
scas
arpl
adcl
ret
pushf
push
mov
sub
daa
jmp
int
pop
data16
outsl
mov
add
ret
ss
add
das
dec
movsl
jge
ficoms
in
in
icebp
dec
push
inc
fbstp
sbb
dec
push
cmc
pop
sti
dec
leave
mov
xor
aaa
scas
stc
push
lds
cmp
sbb
mov
cmpsb
add
repz
sub
imul
mov
ja
jo
mov
mov
xor
shrl
jns
test
jp
lock
test
adc
and
adc
mov
movsl
mov
lret
filds
xchg
mov
lret
xor
jne
mov
inc
dec
orl
mov
sbb
loope
and
rcll
pop
jnp
sahf
clc
jecxz
adc
push
icebp
and
jae
mov
mov
les
sub
push
popa
lods
push
xchg
xchg
pusha
movsl
loope
pop
push
pop
mov
repz
jne
pop
shll
adcb
imulb
and
test
lock
fwait
arpl
movsl
jg
pop
test
push
xchg
icebp
lahf
jmp
aam
xchg
add
pop
xor
orb
jmp
dec
xchg
movsl
cmpsb
movsb
push
dec
aam
clc
jbe
cltd
loopne
fsubrp
jb
into
adc
dec
push
inc
or
push
mov
ss
mov
fs
pop
jae
adc
dec
push
mov
sbb
nop
push
sub
mov
cmp
lds
jae
pop
adc
xrelease
pop
or
xchg
add
dec
idivb
cmc
out
clc
out
jo
xchg
popf
in
insb
push
cmp
sub
int3
xchg
ret
mov
xchg
sub
loop
lahf
sahf
cmp
pop
lock
fs
push
xlat
adc
pusha
xor
lahf
mov
xchg
dec
pop
out
adc
test
test
inc
mov
push
mov
or
cltd
xchg
cmpsl
inc
cld
out
out
stc
mov
push
pop
mov
jne
inc
adc
lret
addr16
xor
mov
out
inc
out
xchg
xor
fmuls
cmp
adc
xchg
mov
loope
in
jne
stc
cwtl
or
or
dec
mov
inc
cmp
adc
pop
icebp
movsb
vaddpd
and
mov
push
pop
jmp
test
mov
inc
or
xchg
sbb
jns
flds
lock
add
mov
jno
outsb
and
mov
jbe
pop
shll
jae
cmc
pop
pop
sub
or
mov
adc
insl
add
insb
pop
xor
roll
icebp
outsl
std
call
add
insb
dec
jmpw
inc
add
lods
jg
add
testl
sub
jno
pop
jp
lods
sahf
xchg
es
shl
bound
pop
stos
jns
jmp
out
xor
dec
mov
test
xchg
sub
push
add
jb
mov
fs
mov
ja
sbb
fs
push
dec
les
cmp
pop
inc
dec
dec
pop
jb
mov
inc
lahf
cmpsl
xlat
pop
mov
jmp
add
mov
mov
daa
dec
mov
sahf
xchg
bound
adcb
mov
inc
dec
and
scas
sub
sub
and
inc
aam
icebp
mov
in
jb
inc
push
mov
jbe
aas
inc
lahf
push
mov
sbb
fs
rep
pop
ja
and
mov
pop
cmpsl
mov
ds
out
push
xor
sbb
cli
or
fmull
or
call
lds
push
mov
dec
test
sbb
pop
sbb
std
jbe
fmul
push
in
push
and
mov
stos
adc
aaa
cmp
jae
repz
pop
sub
push
xchg
movsl
cmpsb
lods
nop
xchg
out
out
adc
mov
xor
inc
gs
push
sub
push
and
cli
add
cmp
icebp
xchg
push
idivb
xchg
aam
notb
ret
idivl
shll
push
int
stos
cmp
xor
into
insl
js
pop
mov
jecxz
jecxz
jb
aaa
mov
out
mov
mov
mov
push
xor
scas
mov
xor
xchg
lret
lcall
out
in
lahf
lret
add
dec
dec
enter
add
sub
ss
out
out
lea
lahf
or
test
add
fidivs
gs
and
mov
jecxz
stos
jp
pop
cmp
push
push
jl
adc
add
cmp
sbb
push
nop
ret
cli
sarb
dec
dec
xchg
pop
push
push
subb
xor
and
jg
out
xchg
adc
mov
jnp
stos
jg
lcall
mov
rcrb
loop
cld
mov
lahf
mov
arpl
shlb
sub
dec
mov
std
inc
addl
sbb
push
inc
cmp
jbe
stos
ret
cmp
subb
pusha
into
dec
adc
int
mov
push
sub
adc
lcall
push
outsb
rep
mov
rorl
push
pop
jmp
jg
xchg
fisttpl
adc
sub
cmc
xor
pop
mov
xchg
icebp
stos
add
mov
in
inc
rcrl
cltd
movzbl
clc
push
outsb
icebp
lds
push
std
rcrb
dec
sbb
jo
out
mov
push
gs
fimuls
fiadds
outsb
push
lahf
rorb
fiaddl
dec
pop
and
hlt
mov
xor
jbe
mov
adc
cltd
adc
icebp
cld
mov
repnz
sub
jg
ljmp
inc
ss
into
and
push
and
push
sarw
test
lods
add
mov
xor
inc
jp
dec
loop
hlt
scas
push
in
jle
aas
jns
jno
ret
and
in
mov
sti
or
inc
getsec
push
stc
inc
push
rorl
sti
leave
scas
pop
mov
jnp,pn
push
xlat
pop
mov
orl
std
jmp
les
rolb
and
aaa
xor
mov
cmpsb
lahf
jecxz
pop
xchg
mov
cmp
nop
les
in
psubsw
testb
rcll
dec
or
pop
jne
or
cltd
fldenv
sbb
push
sub
or
ja
sbbb
pop
popf
xchg
jge
inc
movsb
shrl
cmpsb
mov
pop
jae
test
mov
repnz
mov
pop
push
lds
add
sti
aas
pop
nop
adc
xor
leave
or
xchg
xchg
aas
std
mov
adc
inc
dec
inc
push
cld
ja
sub
jl
lods
add
ja
popa
lret
lahf
imul
addr16
sbb
xor
push
or
mov
rcrb
xor
or
fwait
dec
jg
adc
outsb
call
sbb
xor
fidivrs
mov
sub
lea
rcrl
sub
add
mov
loope
xchg
lds
mov
lret
mov
xlat
jg
adc
cmp
jae
cmp
lock
aad
xchg
loope
pop
adc
pop
or
and
mov
fs
cli
pop
out
cld
in
xchg
and
cs
test
hlt
lret
sub
hlt
jae
adc
lods
xchg
lret
cld
mov
lcall
inc
scas
mov
xchg
cld
jle
arpl
jb
sbb
and
ret
and
ds
add
arpl
das
sbb
push
pop
and
mov
jmp
fidivrl
add
and
jmp
fs
mov
dec
adc
adc
jb
mov
mov
ljmp
cmp
loop
mov
hlt
nop
fistpl
xor
jg
mov
and
and
sub
call
pop
add
in
aaa
mov
xorl
inc
and
jmp
mov
and
mov
adc
push
push
dec
sub
mov
data16
shl
shl
test
out
ja
test
ret
sub
out
sbb
imul
leave
addr16
sarl
sti
sub
add
inc
adc
bound
ja
inc
icebp
insb
dec
lock
je
out
bound
cmp
and
xchg
loopne
dec
jb
push
in
xchg
add
mov
ja
outsb
lahf
and
imul
lcall
push
fiaddl
lods
or
push
push
add
les
adc
add
cmp
fiaddl
clc
enter
adc
and
xchg
mov
loope
push
adc
movsl
mov
jns
mov
mov
sahf
lret
cmp
and
inc
in
orb
pop
jno
repz
cmp
andb
adc
mov
xor
cmpsb
test
or
sbb
and
inc
dec
das
test
ret
mov
imul
jl
or
in
test
cmp
test
addr16
mov
dec
and
add
lret
je
cwtl
lretw
out
inc
xchg
js
cmp
mov
mov
scas
je
pop
push
sbb
cs
inc
push
dec
and
add
mov
mov
cmp
mov
pop
sahf
inc
jne
cli
pop
adc
jecxz
xchg
jp
repz
jl
je
out
aas
rcll
jp
leave
inc
in
mov
sbb
outsl
les
and
mov
mov
pop
sbb
int
sbb
lock
mov
inc
mov
push
sbb
jnp
fildl
shl
sbb
sbb
sub
push
movsb
jecxz
jb
adc
dec
inc
ljmp
cmp
loope
push
scas
mov
mov
cltd
cmp
jg
mov
mov
adc
pop
sbb
mov
pop
mov
lea
ss
aaa
add
leave
cmp
lret
add
add
fmulp
xor
and
sbb
push
and
mov
jmp
iret
push
jne
pop
lcall
dec
xorb
lods
adc
dec
insb
xor
les
and
mov
push
pusha
sub
out
les
movd
daa
add
jl
inc
adc
test
sbb
jne
loopne
xor
enter
mov
jge
inc
inc
imul
xor
cwtl
sbb
cltd
adc
xchg
ja
cmp
or
pushf
mov
mov
fsub
iret
xor
add
push
jmp
lret
loope
ficompl
or
jecxz
lea
inc
int
ss
scas
rolb
and
jmp
sub
enter
fdivs
or
mov
push
mov
pop
popa
sub
cmc
scas
pusha
pop
mov
pop
pop
inc
mov
dec
flds
ja
jle
sbb
arpl
lds
inc
imul
arpl
push
sub
mov
add
and
out
sub
push
lds
sub
xchg
inc
insb
out
pop
pop
pop
into
fwait
mov
mov
je
add
adc
call
in
push
jecxz
popf
inc
leave
adc
ss
and
dec
push
adc
gs
leave
jg
mov
mov
sub
mov
mov
xor
in
loopne
mov
xchg
add
and
or
daa
mov
sbb
ljmp
shll
sbb
cmc
int3
in
test
cmpsl
xor
xchg
sbb
jnp
or
repnz
jecxz
sbb
loope
and
lcall
insl
pop
es
cli
out
je
cmp
cwtl
ljmp
stos
adc
or
movsb
aaa
arpl
adc
arpl
sbb
cmpsl
or
adc
and
mov
dec
and
push
andb
pop
jae
scas
adc
xor
xchg
aad
jnp
mov
push
into
test
or
jmp
push
in
or
xchg
mov
arpl
inc
dec
mov
mov
repz
sbb
jp
xor
mov
jle
pop
fwait
movsb
shl
cmp
mov
xor
cltd
inc
dec
frstor
sahf
scas
mov
lcall
fadd
inc
ret
xlat
aaa
rorb
lahf
push
std
sbb
or
sarl
pop
inc
out
fwait
adc
or
mov
ror
xor
cmp
adc
mov
xor
cmp
mov
rorb
adc
dec
jle
mov
add
mov
jge
sti
xor
fsubl
xor
fidivrs
pop
daa
js
and
aas
and
sub
mov
sub
loopne
cmpsb
cmpl
je
ss
push
popf
sub
idivl
test
je
aam
lds
inc
in
les
or
mov
sbb
repz
sbb
frstor
xchg
aaa
cli
cmc
ja
aad
sti
insl
xchg
jnp
stos
call
clc
std
pop
int
sbbl
into
push
push
scas
jecxz
outsb
adc
pop
sub
pop
mov
popl
and
push
adcb
or
lret
mov
inc
mov
int3
stos
insb
lds
shrb
mov
xor
scas
xor
outsb
daa
jl
xlat
ret
fistpll
xor
pop
orb
enter
mov
and
cli
in
jo
push
sbb
pop
dec
out
push
xchg
out
iret
mov
add
std
mov
mov
std
in
pop
inc
cs
cmp
scas
pop
jg
cmp
push
inc
sub
dec
sarb
fidivrs
or
xchg
cmp
insl
ja
imul
push
testb
jns
mov
in
es
inc
cmp
mov
inc
add
mov
pop
lret
inc
jg
mov
xchg
jl
and
xlat
stos
cmp
jo
lods
bound
shrl
inc
lea
push
not
scas
sub
push
dec
cltd
cmp
push
xor
scas
add
sbb
jecxz
nop
push
add
xlat
mov
xchg
pop
jno
call
mov
dec
cwtl
fs
hlt
into
and
xchg
orb
out
push
sbb
pop
ret
loop
xchg
inc
mov
fcomip
sbb
and
sbb
and
mov
and
or
adc
out
sahf
add
cmp
insl
mov
jg
dec
bound
inc
test
xor
xchg
mov
pushf
mov
mov
mov
sub
test
lods
hlt
into
mov
xchg
imull
pop
in
data16
push
test
pop
sub
xor
or
sbb
cmp
mov
cltd
xchg
iret
nop
std
jae
pop
pop
adc
mov
xor
stos
movsl
jmp
jmp
adc
fnstcw
adc
rorl
outsb
pop
movsl
rorl
popa
inc
cmp
jne
hlt
xchg
inc
and
jge
mov
jl
insl
lock
jge
mov
cmp
push
sbb
mov
cmpsb
mov
fwait
mov
push
fsubs
subb
insl
daa
gs
lea
aaa
lret
rorb
lods
or
and
into
test
mov
pop
fisubrs
out
jne
imul
push
sbb
out
push
movsl
xor
stos
xor
test
or
mov
push
ja
pop
lahf
fcmovnb
out
xor
test
pop
push
push
mov
testl
adc
cltd
roll
sub
push
pusha
mov
jp
inc
mov
add
sub
imul
xor
sahf
out
clc
orl
and
in
sarl
repz
and
fisttps
std
push
inc
cmpsl
test
test
push
pop
jg
mov
iret
jmp
sbb
sub
inc
cld
in
push
out
mov
xchg
pop
jbe
mov
cmp
adc
cld
mov
fstps
jae
lahf
repz
lret
or
daa
mov
shl
jecxz
shll
add
les
inc
out
cmp
fiaddl
popa
outsb
xchg
xchg
shll
jecxz
push
lret
jbe
xor
sub
xchg
les
lret
and
iret
enter
lret
add
mov
hlt
andb
das
loopne
sub
orb
std
shl
popf
add
pop
jne
data16
push
and
inc
dec
fstpl
mov
sti
xchg
fidivl
ret
lods
cmp
in
sbbl
leave
testl
push
sbbb
movsb
sarb
es
mov
sbb
sti
psubusb
neg
cmc
data16
sahf
daa
inc
cwtl
xchg
dec
clc
xchg
pop
insb
sbb
push
pmovmskb
add
icebp
jg
repnz
xchg
dec
mov
xor
jle
outsl
push
xchg
nop
push
mov
sub
in
inc
mov
mov
sarl
jp
fisubl
xor
mov
shlb
add
pop
inc
add
xchg
out
push
xor
popa
xchg
mov
pop
ret
mov
lret
adc
cs
sub
out
xor
mov
cld
shrb
test
iret
jecxz
divl
sbb
aaa
xchg
cmp
push
inc
dec
sarl
es
mov
imul
xchg
add
add
xchg
mov
pop
sub
pop
jmp
mov
pop
repz
jg
mov
stos
clc
jo
shlb
enter
and
dec
xor
mov
sbb
mov
dec
push
push
sbb
xchg
jno
jnp
in
popf
cmp
out
mov
add
stos
nop
xchg
mov
or
testl
jl
xor
mov
jge
shlb
push
xchg
push
sbb
inc
mov
pusha
lods
std
out
pop
fs
in
or
cs
dec
fwait
mov
sbb
ret
test
or
fmull
out
enter
mov
cmp
mov
mov
and
cmp
sbb
mov
cs
sub
mov
data16
fbld
sub
rolb
mov
loop
mov
xchg
sub
adcb
leave
outsb
lret
and
adc
jle
xchg
xlat
shl
jmp
inc
inc
cwtl
fdiv
jle
jae
push
push
cmpsb
push
jecxz
dec
xor
aam
test
lret
cltd
sub
push
icebp
mull
dec
call
stos
jno
repz
xchg
cli
stos
jbe
pop
xchg
fcmovbe
in
and
ljmp
movsl
xchg
mov
mov
push
aaa
aaa
or
add
stos
test
sbb
mov
push
ret
lods
mov
push
int
and
andb
cmp
inc
push
cmc
outsb
dec
int
inc
mov
sub
or
dec
dec
adc
jne
push
call
pop
insb
mov
dec
mov
push
fsubrp
inc
test
cmpsb
mov
jne
cmpsl
add
mov
lods
rorb
lret
xchg
shrb
bound
frstor
hlt
mov
loopne
std
pop
mov
dec
imul
xchg
or
lret
ds
mov
add
xchg
mov
stc
cmpsb
and
jbe
cmp
or
dec
cmp
loope
xor
add
ds
add
fwait
mov
sub
mov
into
mov
popa
aad
je
push
and
and
push
sbb
jp
movsb
mov
jge
int3
hlt
loop
mov
sbb
push
xor
ss
push
dec
jmp
es
stos
fidivrl
in
and
insb
xchg
inc
add
jb
imul
lods
mov
or
jns
lods
shl
add
and
fsubr
jg
push
out
popa
push
fdivrp
ljmp
mov
jl
in
jmp
and
mov
mov
enter
stc
cmp
or
dec
add
sti
test
mov
mov
dec
mov
push
ljmp
dec
cmp
jnp
mov
loopne
xchg
addl
jmp
mov
mov
pop
fmul
push
leave
inc
sub
xor
cmp
add
rolb
pop
jno
insl
test
mov
add
sub
sbb
sbb
test
cmp
or
pushf
insb
xchg
add
loope,pt
xor
xor
insb
xchg
or
pushf
jb
lcall
pop
repz
and
and
ja
xor
adcb
cli
sbb
outsb
or
fs
fsubrl
sbb
fldenv
dec
inc
push
out
loope
test
andl
mov
test
push
or
xchg
mov
nopl
lahf
test
and
xlat
xchg
mov
and
dec
sbb
cltd
cmp
leave
jg
push
inc
dec
xchg
int
stc
jecxz
lret
jmp
repz
ljmp
mov
andl
or
lods
jg
mov
and
inc
stos
and
sbb
fiaddl
push
andb
repz
mov
lret
xor
or
fdivs
add
push
fdivr
ds
movsb
shll
inc
push
shr
cld
add
pop
cmp
add
or
subb
pop
stc
testb
push
jae
xchg
ret
ds
icebp
test
mov
push
and
mov
aas
inc
fdivrl
mov
call
std
mov
xchg
xlat
ljmp
testb
push
icebp
mull
dec
lods
or
jp
sahf
stc
push
sub
aaa
jo
pop
rorl
cmp
inc
jno
jns
mov
xor
fucomi
dec
dec
adc
and
pop
pusha
sbb
lea
int3
cmpsl
jecxz
jecxz
stos
pop
repz
mov
adc
outsl
sub
cld
lcall
mov
arpl
adcb
mov
push
in
dec
cwtl
jecxz
in
jne
out
push
fwait
cmc
icebp
nop
shll
jns
jl
cli
int
ret
enter
push
cltd
loop
insb
shlb
es
cmp
sub
repz
or
movb
xlat
into
cmpsb
pop
add
mov
inc
fld
jne
xor
fstps
ret
dec
mov
mov
hlt
mov
dec
pop
mov
in
js
push
and
aaa
add
stc
fwait
xchg
cltd
insl
push
sub
and
push
outsb
sub
sbb
adc
out
loop
or
cmpsl
out
xor
inc
lods
mov
mov
sub
dec
out
cwtl
fwait
leave
and
add
or
ret
fbld
outsb
dec
das
mov
sub
shr
sbb
loop
fistl
imul
mov
push
jle
jb,pt
lock
fidivs
pop
fsts
push
stos
ffreep
pop
mov
add
cwtl
sub
loope
mov
fcompl
and
loop
mov
sahf
data16
imul
and
dec
out
sbb
xor
loopne
sub
or
dec
aas
sbb
in
lods
xor
pop
pop
fs
lret
bnd
test
cmp
out
idivb
hlt
push
adc
rcl
inc
test
int
cmp
nop
pop
xor
sbbl
stos
push
jecxz
xchg
xor
nop
push
inc
ucomiss
lret
sub
jo
aad
je
jge
aaa
mov
xor
lahf
aas
aam
mov
rolb
stc
mov
je
insl
sub
mov
fmul
rcll
mov
enter
sbb
hlt
popa
adc
push
dec
decl
pop
push
push
rolb
sbb
sub
xchg
jp
sub
xchg
testl
mov
test
scas
mov
xor
iret
push
out
shrl
mov
jg
adc
outsl
call
aam
mov
mov
ret
rorb
cmpb
out
bound
mov
or
shll
mov
bound
sub
mov
fcmovbe
faddl
and
std
cwtl
dec
cmp
mov
iret
adc
jne
loop
lds
fwait
push
xor
pop
sbb
or
sub
adcb
scas
mov
mov
pop
fsub
adc
std
add
xchg
aam
fbstp
int3
out
repz
mov
popf
sti
jl
mov
adc
jg
adc
push
and
fisubs
jb
ds
sbb
ret
daa
mov
sbb
push
adc
aam
adc
movsl
xchg
icebp
loopne
or
mov
out
ja
aaa
cmp
dec
fmulp
mull
enter
or
cli
pop
sbb
shll
stos
lock
add
xlat
mov
lds
jno
repnz
inc
and
sub
lahf
add
clc
pop
idivl
mov
pop
in
dec
stc
ss
gs
mov
push
pop
fstpt
dec
out
es
dec
inc
andl
pop
icebp
pop
adc
fnsave
mov
cmpsl
aaa
mov
orb
data16
jmp
jmp
inc
push
pop
inc
rol
or
sti
cld
aam
mov
cltd
lods
call
movsb
lds
push
inc
loop
or
push
fwait
loopne
jg
cmp
dec
xchg
aam
daa
ljmp
cmp
pop
loope
stos
cmpsl
push
fnstenv
mov
out
mov
arpl
rcrb
dec
lret
cli
shl
or
nop
lods
movsb
adc
cli
lahf
repnz
enter
mov
mov
mov
xor
popa
sti
fs
clc
and
mov
pop
stos
and
aaa
cli
cli
cmp
push
dec
outsb
cmc
outsb
xchg
inc
add
mov
insb
stc
inc
and
jl
cmp
xor
shr
gs
lcall
add
nop
fdivrp
ret
cmp
xor
mov
loop
xor
xchg
xorl
mov
ja
lods
into
mov
cltd
test
inc
insb
xchg
dec
mov
popl
int
pop
jecxz
xchg
cmp
ror
mov
jl
scas
pop
adc
aaa
xchg
sub
popf
stos
pop
mov
sub
push
lods
sbb
out
ret
test
cmp
adc
cmp
ljmp
inc
mov
sbb
sbbl
test
test
xor
push
mov
addl
xchg
loope
dec
jg
ret
call
fs
or
mov
adc
pop
and
test
outsl
jmp
insl
test
sbb
sarl
and
adc
sub
leave
xchg
int
inc
movsl
popf
test
addb
mov
int3
fwait
xchg
mov
es
push
xor
pushf
adc
xchg
test
mov
push
sub
pop
sub
pop
andl
push
and
test
loop
leave
imul
hlt
push
fsubrl
movsb
jge
loopne
in
xchg
out
rorl
cmc
jno
imul
insb
or
scas
push
les
mov
sbb
pop
jg
roll
or
lds
xchg
test
pop
pop
test
fcoms
mov
pushf
pusha
loopne
lret
jbe
add
inc
pusha
jno
add
jo
push
filds
sbb
sbb
rcrb
ret
mov
es
mov
in
neg
loope
mov
scas
rclb
rcrb
dec
mov
dec
icebp
jg
jg
xchg
sbb
stos
push
xlat
adc
or
or
cmp
stos
mov
mov
push
add
jo
and
xor
xor
cmpsl
test
sub
adc
out
outsl
mov
mov
sbb
sbb
enter
push
lods
pop
push
pop
jle
mov
dec
jecxz
or
aas
inc
fdivs
int
stos
mov
push
cmpsl
cmp
out
lret
inc
mov
dec
fdivr
push
ficoml
dec
mov
mov
add
and
lea
pop
cmpl
aaa
mov
sti
in
xor
mov
repz
ljmp
enter
fwait
jnp
mov
pop
iret
ret
jne
push
adc
mov
mov
mov
loope
xlat
cli
push
xchg
jmp
fwait
inc
lret
popf
cli
lds
dec
mov
test
sub
mov
sub
nop
les
setg
xor
test
and
sbb
cmp
add
adc
xchg
sbb
ret
fcoms
cmp
arpl
push
in
mov
jecxz
inc
add
out
out
stc
jecxz
jnp
lods
ljmp
jns
stos
in
sbb
and
adc
les
clc
push
mov
mov
outsl
repnz
fs
fwait
mov
or
and
xlat
sub
jmp
add
lcall
daa
dec
adc
inc
jae
pusha
push
mov
dec
lea
repz
cmp
aas
test
push
incl
add
arpl
icebp
push
cmp
push
sub
cwtl
out
jp
push
fsubl
adc
push
jp
mov
data16
mov
inc
rol
call
test
popa
inc
jnp
stos
cli
lods
pop
push
shr
add
pusha
pop
shrl
ss
dec
jbe
outsl
jp
adc
xchg
or
jmp
jmp
rclb
inc
push
mov
movsb
adc
push
aad
lea
dec
dec
mov
push
push
fisttpll
mov
sub
mov
mov
cltd
adc
roll
sub
jb
in
cmp
in
add
cmp
and
push
mov
jae
push
sub
cmp
in
cmp
test
out
xchg
and
xor
inc
mov
xor
lds
pop
push
loop
xchg
pop
mov
stos
in
mov
les
testl
jge
jp
lcall
sub
iret
int
ja
scas
cmp
lods
insb
mov
mov
test
out
cmp
push
std
and
mov
aam
and
push
pop
sti
sbb
push
mov
jp
and
leave
sub
pop
aam
bswap
iret
js
lods
push
push
pop
cmp
and
insl
in
cmp
jno
imul
aaa
pop
mov
pusha
jo
aaa
das
or
adc
arpl
inc
lods
mov
and
roll
ljmp
mov
jp
bound
lds
jnp
lock
add
sbb
sub
mov
push
out
lret
jbe
pop
push
aaa
inc
stos
out
xor
mov
cwtl
fisttpll
pusha
or
lret
hlt
test
ss
dec
out
pop
in
ds
mov
mov
stos
js
paddusw
adc
jo
aam
lods
adc
je
add
mov
adc
sub
dec
xor
loopne
cmp
xlat
inc
jb
sub
xchg
jge
imul
or
pop
jg
push
scas
lret
and
and
rcrl
dec
push
ljmp
xor
jno
cld
dec
xchg
mov
push
jg
push
out
xor
xchg
imull
pop
lret
in
mov
push
jae
dec
ud1
adc
sub
lret
or
mov
pop
jae
je
cli
fiaddl
jns
dec
stos
jno
push
sti
into
cmc
scas
pop
add
test
add
push
pop
popf
dec
push
pop
mov
pop
mov
sub
cmpsl
movsl
mov
sub
and
mov
jmp
aad
sub
pop
ds
cmp
adc
pop
ljmp
cmp
push
int3
popa
adc
mov
inc
imul
or
popa
insb
orl
lods
repnz
sti
pop
addr16
xchg
int3
mov
sub
dec
jp
add
fcoms
or
lds
shll
sbbb
dec
sbb
int
jecxz
insb
lret
popf
les
or
mulb
loop
test
pusha
insl
sub
xor
out
test
lret
xchg
xor
bswap
aam
iret
lret
cmp
in
add
popa
andb
pop
fildll
xor
pop
xchg
fmull
dec
mov
dec
scas
outsb
mov
sbb
inc
ja
inc
push
loopne
test
call
mov
pop
inc
loopne
mov
lock
mov
data16
dec
mov
mov
cmp
out
popl
mov
loope
pushf
sahf
test
push
cltd
shrb
mov
jnp
test
and
add
ret
add
cmp
aam
sub
idiv
sti
adc
xchg
and
sti
imul
sbb
xor
hlt
popf
xor
push
test
stos
pop
sbb
cld
push
cltd
cmp
lret
andl
ss
or
cltd
stc
or
pop
inc
xchg
jae
popf
mov
mov
movsl
xor
sarl
add
xchg
popa
cmp
jg
mov
lahf
cmp
sub
repnz
mov
mov
test
cwtl
push
inc
inc
mov
sar
xchg
sub
fdivs
fimull
ret
aas
jecxz
repnz
call
sbb
cld
decl
inc
sbb
je
fists
push
cmpsl
mov
movsb
pop
imul
fsubr
or
aas
adc
jno
or
cwtl
push
mov
mov
pop
loop
sub
adc
lds
arpl
lea
pop
jecxz
cwtl
mov
rol
aam
fs
xchg
stc
xor
pop
or
mov
sbb
aad
mov
sub
into
xor
pop
fs
adc
add
gs
in
mov
insb
xchg
int
jbe
jmp
roll
sbb
test
cmpb
ds
sub
pop
pushf
mov
enter
xchg
mov
jo
xor
pop
fisttpl
arpl
cwtl
cmpsl
push
mov
jns
jnp
sub
cltd
pop
jge
in
xlat
lock
mov
xchg
outsl
lock
pop
mov
lods
es
cmpsl
rolb
xchg
shll
stos
mov
inc
pop
leave
mov
pop
ficomps
push
cmpsl
push
dec
std
addr16
ret
test
psllw
lock
adc
sub
decb
xor
mov
jne
xchg
imul
push
inc
test
cmp
xchg
sbb
movsb
mov
and
std
and
clc
or
xchg
pop
inc
sbb
dec
or
sahf
cmc
inc
mov
jae
cmp
les
inc
jo
xor
mov
aaa
mov
in
jnp
mov
ljmp
icebp
xchg
mov
and
or
lret
sbb
jb
orb
mov
jb
cmovb
repnz
sub
sbb
mov
daa
popf
mov
xor
mov
push
insb
sahf
lret
mull
data16
mov
cmp
shlb
scas
test
pop
repnz
div
jo
dec
lret
fdivl
mov
sub
xor
or
outsl
frstor
dec
and
mov
inc
mov
aam
push
mov
inc
dec
dec
push
sub
aaa
aaa
mov
mov
or
cli
xchg
outsl
sbb
mov
dec
push
adc
jle
in
fldcw
aas
xchg
pop
mov
mov
mov
fcmovnu
dec
inc
mov
xchg
hlt
fnstcw
int3
aaa
repnz
std
movsl
idivb
ret
cmpsl
xchg
pop
leave
add
jge
test
pop
pop
mov
pop
add
mov
std
lods
push
mov
xchg
mov
loope
iret
cld
xchg
push
cs
lods
cmc
xor
test
loopne
fldcw
adc
aas
xlat
icebp
imul
sub
dec
lret
mov
push
bound
lock
icebp
pusha
pop
push
push
inc
pop
lods
adc
jnp
aam
bound
rcrb
inc
push
sbb
jb
cltd
sub
push
or
mov
push
jl
add
pop
and
arpl
push
int3
call
in
inc
enter
into
jecxz
jmp
daa
sub
call
xor
jecxz
out
and
ret
xchg
jmp
popf
mov
daa
mov
jl
stos
or
pop
aas
mov
insb
push
push
push
jle
mov
mov
pop
test
scas
sub
decb
jb
jns
leave
imul
adc
jo
hlt
cmp
add
jns
and
mov
or
push
pop
test
bound
sbb
jae
lods
and
jns
or
xchg
adc
cld
jo
jmp
push
mov
mov
pop
lret
pushf
push
jle,pn
scas
mov
xchg
xorb
std
cli
mov
in
xor
aad
cld
xor
and
jo
movsb
mov
push
add
sbb
dec
call
pop
icebp
pushf
mov
imulb
mov
dec
or
xchg
rcrb
xor
bound
movsb
popa
push
push
jb
test
addb
jns
icebp
xchg
adc
cmpsb
push
shlb
adc
pusha
mov
movsb
jmp
inc
loop
add
mov
push
lcall
push
in
fwait
pop
sub
insl
inc
ja
mov
add
fsubl
xor
cmpsb
xor
in
xchg
cmc
out
and
jge
inc
call
xor
and
xchg
popa
mov
scas
stos
jge
pop
cmp
mov
and
inc
jae
shll
pop
push
icebp
test
iret
std
push
cmc
daa
test
dec
es
repnz
pop
inc
push
sti
sbb
push
jns
sub
dec
imul
cmp
movsb
in
xor
or
scas
scas
and
es
out
daa
cmc
mov
mov
lods
test
or
or
mov
sub
ja
xor
sbb
roll
popw
cmp
aad
and
pop
push
clc
add
ds
jg
lret
mov
loope
fisubs
dec
mov
xchg
mov
cmc
das
lahf
sti
lea
push
lds
jmp
push
mov
mov
push
dec
dec
xchg
pop
incb
nop
add
rol
out
lea
inc
jnp
insl
rolb
rclb
mov
push
sbb
repnz
inc
xchg
xchg
pop
pop
icebp
fmuls
shl
mov
outsb
rcrb
outsl
sarb
pop
mov
sub
fsubs
cmp
loopne
xchg
lret
pop
pop
mov
xor
jno
or
insl
sub
scas
mov
hlt
adc
aas
pop
and
cwtl
arpl
mov
jg
dec
popa
shrl
clc
jno
jne
sbbl
dec
mov
jle
mov
jns
jmp
jle
aas
pop
std
mov
mov
cltd
cwtl
test
xor
xchg
mov
and
stc
es
out
xchg
push
inc
mov
or
mov
icebp
or
aas
jnp
insl
in
pop
clc
jo
adc
jo
push
mov
mov
xlat
or
in
jp
in
push
rcrl
xor
rclb
lret
jne
xor
xchg
fistpll
js
cmp
jne
adc
rolb
sub
jb
mov
dec
xor
rol
les
pop
cltd
ja
mov
je
pop
cmpsl
pop
fsts
push
rcr
xchg
ss
mov
push
or
push
js
adc
cmc
pop
in
insb
fsubrl
les
repnz
enter
pop
ret
mov
fdiv
rorb
aam
mov
in
and
cmp
ja
xlat
mov
adc
xchg
pop
arpl
cmc
popa
adc
mov
imull
lds
push
movsb
outsb
repnz
pushf
mov
pusha
dec
mov
cwtl
sar
jl
jb
movsb
mov
sub
jno
rcrl
mov
cmp
or
push
loope
fidivrs
les
xchg
insb
cwtl
int
scas
mov
mov
add
dec
stos
jge
and
adcb
dec
mov
cs
cli
jne
add
mov
out
fwait
fwait
add
jge
lret
lret
into
ret
sbb
mov
jl
dec
adc
scas
outsl
pop
dec
lods
mov
rcl
rol
cmp
test
icebp
inc
ja
subb
push
lock
or
and
mov
or
ret
sub
pop
mov
mov
incb
in
out
into
add
jmp
fisttpl
lds
stos
xor
pop
mov
jg
js
cwtl
and
mov
cli
lds
push
pop
dec
in
xor
mov
add
mov
fcomp
outsl
popa
or
leave
arpl
mov
icebp
fistl
jne
popa
push
add
and
pop
inc
mov
in
sti
and
mov
test
outsl
push
adc
jae
jae
xor
xchg
and
jecxz
int3
js
es
scas
js
std
push
mov
xor
jne
mov
insb
movsb
lods
stos
push
bound
mov
mov
push
jg
sub
mov
stc
pop
jl
jg
jo
and
es
insb
xlat
outsb
dec
stos
jmp
mov
pusha
stos
mov
sub
orb
sti
out
xchg
xor
out
jmp
scas
sub
cmp
int3
or
xor
push
add
sahf
imul
out
sahf
cmc
pushf
mov
aas
outsb
mov
xchg
push
nop
cmp
sbb
push
out
outsl
pop
ror
adc
pushw
and
pop
inc
cmpsl
ss
adc
loope
lds
jne
dec
add
push
mov
jmp
pop
mov
cmp
inc
sahf
xchg
jmp
insb
inc
adc
icebp
repz
pop
xor
pop
pop
jge
je
ljmp
int3
mov
and
adc
add
mov
xor
dec
loop
push
lods
jae
sbb
xchg
sbb
add
test
jns
insl
insl
cmc
push
scas
sti
sub
sbb
aas
push
sahf
xchg
mov
jle
stos
in
sbb
movsb
pop
sbb
jge
test
scas
cmpsl
xchg
rcll
aam
enter
inc
jmp
xlat
out
push
cmp
das
cs
jmp
cltd
stos
dec
and
test
sahf
cmp
push
je
gs
mov
mov
addr16
out
incl
lods
mov
xchg
ficoms
adc
aaa
sbb
lea
in
out
add
dec
cmp
subb
rorl
jne
cli
add
gs
fcompl
loop
in
imul
pop
push
dec
fst
pop
and
test
stc
fiaddl
jp
sbb
sarb
sbb
add
fcomp
or
push
lea
lret
pop
lahf
adc
and
add
test
jmp
mov
outsl
out
pop
add
adc
add
adc
jge
fdiv
loope
xor
mov
fisubl
mov
cmc
mov
lods
xchg
xchg
fstpl
jecxz
or
repnz
xchg
dec
sub
fs
mov
sahf
es
and
sbb
cmp
stos
push
rorb
lods
cmpsl
push
test
inc
and
rcrl
dec
jnp
addr16
xchg
cmp
inc
repnz
cmp
sbb
add
xchg
mov
xlat
lds
lods
std
divl
mov
in
jp
ret
bswap
inc
cmp
not
jno
lea
jb
jns
pusha
jae
fsub
or
sub
imul
jl
xchg
das
movsl
pop
dec
rorl
pop
in
add
or
pop
jecxz
fldenv
test
daa
pop
or
xchg
push
mov
jbe
inc
mov
xor
cmp
push
add
xor
cld
dec
cmp
loopne
fildl
ret
cmpsl
enter
mov
je
les
cli
pop
cld
loop
insb
mov
loopne
mov
cwtl
mov
in
cld
adc
and
lret
stos
ljmp
jle
mov
sub
negl
mov
inc
xchg
in
and
push
push
push
or
shrl
fsubrl
xchg
in
ret
ficomps
sub
dec
add
cmp
mov
lods
cltd
scas
popf
aam
inc
xchg
stc
mov
jl
jnp
fs
mull
mov
fwait
iret
addr16
and
out
icebp
jns
mov
aam
or
lods
stc
lods
mov
fisttpll
out
or
aaa
adc
fstl
cmp
push
aam
push
adc
adc
jmp
pop
xchg
iret
and
xchg
mov
lret
cmpl
and
outsb
xchg
sbb
push
lahf
ja
fs
and
adc
cmpsb
push
mov
es
xchg
je
mov
in
push
and
pop
filds
jne
add
leave
les
icebp
sahf
repz
add
aam
stos
mov
aam
in
xchg
and
lcall
mov
push
mov
jecxz
sbb
arpl
loop
ja
dec
fs
add
xor
icebp
pop
pop
sub
push
int3
or
pushl
insb
mov
mov
ret
adc
cmp
popa
int
sti
imul
mov
cltd
xor
mov
or
mov
addr16
bound
fadds
mov
cmc
sarl
xchg
pop
icebp
sbb
mov
jo
subb
sub
imul
xchg
imul
sub
jmp
stc
aaa
sbb
enter
push
test
cmp
rclb
xchg
lea
les
mov
push
mov
xchg
pushf
push
mov
mov
ljmp
mov
cmp
js
dec
fisubs
push
add
mov
adc
inc
repnz
inc
add
and
jle
into
test
seta
shrl
or
add
or
add
insb
fisubl
out
xlat
cmp
mov
mov
xchg
mov
imul
rcll
sub
xor
pop
xor
mov
dec
adc
loope
insb
adcb
xor
and
push
arpl
sar
mov
data16
xchg
mov
std
lock
cmp
dec
mov
aaa
aaa
jmp
in
and
out
icebp
cmc
into
jp
repz
mov
mov
and
or
sub
xchg
out
mov
fimull
sub
in
push
dec
dec
test
fstp
mov
cmp
push
fldenv
adc
pcmpgtb
sub
pushf
inc
jno
ret
out
enter
add
fxch
dec
mov
mov
repnz
pop
pop
xor
mov
mov
xchg
mov
or
outsb
fistps
sbb
repnz
leave
loop,pt
push
adc
adc
xor
movsl
adc
adc
lcall
cli
mov
xchg
mov
imul
lea
adc
das
jo,pt
mov
iret
pop
in
jbe
pop
adc
fs
lret
test
fs
stos
mov
xchg
add
pop
xchg
rcl
and
loop
xchg
mov
xchg
or
nop
mov
or
inc
out
xchg
aaa
inc
fdivs
or
iret
cmp
movsl
add
and
and
stos
scas
jmp
popa
lcall
cmp
dec
inc
les
out
cmp
hlt
nop
mov
xor
out
sbb
les
mov
loope
stc
test
xor
cmp
cmpsl
loopne
mov
mov
shlb
lods
jb
test
insl
sub
imul
xor
imul
push
jmp
mov
fisubrs
and
fstp
dec
dec
mov
jns
cmpsb
scas
push
decb
shr
sbb
cmp
jne
xchg
test
push
dec
loope
bound
repnz
mov
push
mov
pop
xchg
dec
and
pop
ds
je
add
sbb
cltd
popf
mov
dec
mov
push
mov
into
enter
or
iret
scas
sub
dec
fucomp
hlt
loopne
xchg
mov
push
icebp
sbb
add
lret
fwait
push
sub
pop
cmp
dec
ds
lahf
cmp
xlat
jmp
push
xchg
push
mov
lret
mov
iret
test
int3
jmp
andb
adc
add
mov
pop
rorl
ret
mov
sti
mov
pop
fisubrs
movsl
repz
sub
into
jb
push
sub
push
movsb
and
daa
push
dec
mov
rorl
pop
rclb
hlt
push
loopne
cmpsl
aaa
dec
sub
xor
or
jnp
mov
xor
popa
jge
sub
repz
ret
cmpsl
xor
xor
push
push
or
xor
imull
push
xor
add
jno
enter
adc
push
mov
cwtl
test
movb
pop
cmp
and
ss
mov
ss
pop
xor
mov
repz
sbb
xorb
xor
push
sub
and
fincstp
mov
scas
mov
movl
ja
fstpt
fimull
pop
cmp
rorb
xor
data16
pop
pushf
testb
insb
mov
stc
fdivrl
iret
arpl
push
push
insl
pop
int
pop
dec
shrl
ret
pop
std
pop
fsubs
and
xor
lcall
loope
arpl
push
push
xor
je
insb
cli
shll
push
cmp
jo
lock
fisubrs
xorb
adc
mov
cmp
pop
pop
cs
lret
mov
cwtl
cmpsl
sbb
xor
hlt
lock
ret
das
sahf
lret
inc
movsl
addr16
shl
imul
out
adc
cmp
xchg
stos
pop
in
mov
lods
sti
or
call
mov
jp
add
loop
or
cld
outsb
jmp
or
mov
jge
and
dec
jge
dec
in
imul
xchg
leave
cld
sub
sbb
cmpb
ret
idiv
adc
mov
out
xchg
sub
imul
lahf
shl
push
ret
sbb
xchg
pushl
xchg
daa
aad
xchg
pop
xchg
dec
arpl
test
adc
femms
clc
xchg
test
test
inc
neg
and
call
pop
sti
or
and
mov
jnp
cs
movsl
xor
lret
sub
jg
push
ret
sbb
cli
aaa
adc
jl
scas
push
jge
sub
insb
adc
push
mov
sub
test
mov
out
dec
scas
jecxz
sub
outsl
push
xor
mov
mov
lret
jnp
mov
jbe
push
mov
xchg
or
jb
cmpsl
jae
mov
jecxz
inc
and
ljmp
cmp
xchg
mov
int
inc
pushf
out
aaa
inc
pop
flds
mov
add
push
inc
push
xor
push
push
insl
fsqrt
lock
and
cwtl
jnp
cltd
fs
add
push
negl
cwtl
cmp
sub
loop
arpl
stos
pop
stos
leave
fdivrp
mov
mov
rcrb
push
mov
repz
cli
push
jmp
push
or
lret
dec
inc
cmp
repz
test
mov
push
adc
lret
notl
dec
inc
pusha
add
jno
mov
xor
int3
scas
sub
sub
jne
cmp
and
jge
arpl
and
aaa
adc
int
enter
sub
pop
cmpsl
cli
into
in
shlb
sbb
addb
mov
into
mov
xchg
push
inc
sbb
ds
stos
jge
adc
shlb
cmp
cmp
into
std
pop
insl
imul
pop
ljmp
jmp
mov
lods
sarb
fwait
adc
dec
mov
sub
scas
push
jae
dec
in
aaa
cmpsl
ffreep
adc
addb
jmp
lret
and
sbb
je
xchg
or
cli
loope
pop
fdivl
imul
adc
dec
repz
cmp
push
dec
push
nop
insl
ja
sub
cli
repz
cmpsl
push
test
push
int3
add
pusha
mov
pop
or
mov
inc
adc
sub
cmp
sbb
or
lea
push
or
pop
xor
sbb
cltd
inc
sbb
out
cmp
xor
mov
loopne
div
je
add
fdivr
jge
movsl
push
stc
out
push
cmp
aaa
xchg
movsb
sub
js
gs
add
cltd
int
movsb
xlat
fidivs
pop
lods
das
pop
dec
out
jo
adcl
cmp
pop
jbe
mov
or
inc
mov
insw
and
dec
iret
int3
repnz
dec
ja
add
fwait
lret
adc
or
mov
mov
add
mov
fistps
mov
cmp
fwait
adc
cmp
fldenv
in
pusha
nop
sbb
test
jg
jge
add
leave
jbe
or
aaa
xchg
fmul
inc
das
pshufw
stc
gs
mov
fidivs
jae
andb
add
sbb
cmp
orb
lock
xchg
mov
lock
cltd
xchg
ds
or
xlat
iret
cwtl
out
js
lret
mov
scas
loopne
nop
add
or
push
test
enter
rcrb
mov
stos
jge
decl
mov
sub
enter
push
adc
jl
fcom
lret
imulb
les
inc
into
test
sub
xchg
adc
cmp
fstpl
xor
mov
pop
aad
add
push
iret
sub
lock
inc
ret
jp
loope
imul
inc
out
cmp
scas
xcrypt-ecb
cmpsl
mov
cmp
enter
pop
push
cmp
push
icebp
sub
cmpsb
outsl
cmp
andb
mov
xchg
es
pusha
in
cmp
insl
lret
xorl
in
addr16
jo
and
cmp
repnz
int
fwait
cwtl
test
pop
clc
imul
lock
xchg
stc
sbb
or
stos
out
mov
xchg
jnp
xchg
int3
adc
push
mov
and
pop
call
push
sti
pop
and
mov
dec
lret
pushf
jne
xchg
cmp
mul
rcl
cli
jecxz
xchg
mov
push
stc
and
lods
add
mov
dec
and
mov
xor
and
dec
and
xor
enter
dec
loopne
add
pop
inc
dec
es
dec
mov
stos
xor
call
test
frstor
movb
xchg
mov
outsb
rcll
adc
stos
pusha
push
and
add
push
dec
outsl
into
sti
bound
out
mov
int
adc
adc
lahf
sub
push
imul
xor
sub
or
movsb
push
jp
adc
xchg
add
imul
mov
loopne
nop
mov
incb
cmp
mov
pusha
push
pop
test
add
push
xor
ds
sub
sbb
mov
add
in
mov
cmp
stos
cmp
cmpl
lods
rcrl
jle
dec
xchg
xor
repnz
xchg
int3
mov
adc
mov
xchg
fdiv
loop
lahf
mov
ljmp
lret
mov
insb
sbb
sub
and
pop
std
inc
and
lcall
sti
iret
nop
lret
pop
ret
dec
xchg
dec
xor
push
pop
xchg
subl
dec
cmp
popl
int3
jmp
inc
mov
fistl
inc
adc
xor
outsb
lahf
push
aas
mov
xchg
xchg
enter
test
idivl
sub
in
cwtl
in
aam
push
xor
xor
jmp
sar
xor
add
sub
dec
sti
inc
sbb
dec
sbb
xchg
xor
leave
adc
push
cld
clc
outsl
cli
pusha
je
push
sahf
enter
sbb
movsb
sahf
pop
insb
ja
clc
daa
clc
rcl
jp
push
adc
mov
push
adc
mov
hlt
push
dec
fiaddl
idivl
arpl
lret
es
and
push
jle
fsubrs
adc
ret
push
mov
pop
aaa
clc
xchg
sti
pop
adc
fidivs
jmp
test
fidivl
test
push
add
stos
pushf
outsl
fwait
jae
mov
cli
sbb
fcompl
sub
jle
cs
xchg
sub
xchg
ljmp
inc
lcallw
lcall
mov
js
mov
xchg
mov
xor
sub
jp
lahf
push
mov
dec
mov
add
lods
ja
dec
test
push
xor
clc
iret
mov
mov
mov
push
int3
mov
push
out
iret
mov
dec
jmp
rorb
dec
hlt
and
push
dec
hlt
lret
lret
sub
dec
xchg
push
repz
xor
add
ljmp
fsub
bnd
iret
dec
pushf
nop
test
negl
xor
lods
imul
cwtl
mov
sbb
cmp
sbb
loopne
out
xor
test
sbb
xchg
push
sahf
in
fucom
repz
xchg
lahf
loop
pusha
inc
out
fsubrl
jmp
xchg
icebp
jecxz
shll
cs
cmpsl
fcoms
xor
cmp
pop
cltd
sbb
mov
pop
add
in
testb
test
xchg
inc
sub
pop
pop
repz
pop
sbb
bswap
jg
shll
sbb
clc
inc
jmp
sbb
jbe
fisttps
pop
and
or
mov
pop
mov
iret
pop
mov
fmuls
add
cld
xor
adc
test
ret
scas
inc
push
add
and
cmp
iret
aaa
sbb
xor
cs
push
das
clc
jl
out
push
or
jmp
rcrb
in
imul
mov
cmp
mov
sbb
pusha
call
mov
mov
add
lods
inc
arpl
lods
sbb
das
add
sbb
adc
int
push
sahf
push
cmp
xchg
sub
mov
jae
pop
rcl
add
push
and
lret
icebp
mov
adc
test
call
pushf
pop
xor
and
ret
sub
ret
dec
stos
mov
lret
loopne
jb
xchg
xor
fsubr
dec
dec
xor
fwait
push
test
imul
imul
push
les
mov
lret
cwtl
mov
cmp
cli
mov
jmp
mov
mov
inc
add
mov
cmp
bound
lds
call
xlat
divl
je
or
xchg
out
fs
mov
mov
in
cmp
sbb
stos
xchg
adc
sub
aas
ror
clc
fsub
fmul
addr16
imul
pop
aaa
sub
pop
cmp
cltd
cltd
pop
call
mov
test
sbb
and
jp
sub
cmp
push
xor
mov
mov
xor
jb
imul
jae
enter
add
ret
or
sbb
scas
ficompl
sub
sahf
mov
dec
out
jno
pop
xchg
cmp
mov
ds
pop
cmp
mov
bound
mov
adc
add
daa
fnsave
int
dec
xor
repnz
sti
shll
imul
fwait
cld
xchg
dec
insb
mov
mov
or
movsb
xchg
in
sbb
xchg
lods
stos
test
fcoms
stc
push
and
repnz
push
mov
cmpsl
mov
ror
shl
cmp
fwait
int3
sub
inc
inc
stc
es
dec
daa
jl
aad
sbb
dec
ret
sbb
fisubrl
icebp
insb
mov
push
addr16
jno
shl
dec
mov
add
jmp
fsubs
xchg
mov
out
mov
scas
jg
popf
sub
mov
sbb
cltd
adc
out
sub
pop
outsl
mov
cmpsb
push
xchg
xor
pop
nop
and
cmp
loop
dec
add
rorb
lods
xchg
ss
push
jno
push
and
stc
in
and
xchg
mov
mov
es
imul
in
pop
popf
ja
sbb
add
jnp
mov
ret
adc
add
push
shlb
pusha
mov
int3
dec
lret
lcall
cmp
or
popa
cmp
or
in
push
jb
pop
movsl
or
mov
test
dec
fstl
fidivs
dec
mov
popf
adc
add
fwait
inc
ds
jle
je
pop
stc
ss
lods
insl
out
jns
lea
jle
daa
pop
xchg
out
push
dec
jno
bswap
or
mov
push
mov
divl
scas
insl
ret
lret
mov
sbb
jo
lret
and
mov
fsubrs
dec
add
ficoms
xor
fcmovnbe
xor
shll
dec
sarb
xchg
adc
rcll
mov
dec
shrb
aam
test
pop
jmp
out
test
pop
js
cltd
xor
add
sti
and
sub
lds
xor
sbb
scas
shlb
ss
rcll
cmp
jnp
mov
inc
mov
pop
popl
adcl
out
xor
add
sti
insb
mov
adc
rcrb
mov
mov
fs
add
pop
sub
dec
sub
pop
cmp
mov
out
shll
repnz
fadds
nop
add
sbb
jp
lret
sarl
daa
pushf
push
push
cmp
add
lahf
sub
push
outsb
and
cmp
xchg
mov
mov
pusha
faddl
mov
dec
fbld
in
cli
ss
in
add
and
and
mov
inc
add
adc
in
outsl
mov
push
sahf
mov
ja
lods
mov
mov
xor
add
testb
push
jmp
sbb
fwait
adc
xor
xchg
push
ret
xchg
sbb
andb
sahf
ret
mov
ret
inc
cltd
outsl
lret
lahf
or
and
out
or
or
mov
insl
ljmp
rclb
cs
adc
lods
jns
inc
cmc
dec
push
scas
pop
cltd
out
lahf
adc
aas
je
mov
outsl
add
adc
dec
mov
ja
insb
sbb
icebp
repz
sub
add
adc
lcall
sbb
inc
cmp
dec
mov
mov
xor
sub
cmp
scas
and
loope
jnp
push
out
shrb
or
and
call
out
sub
and
xor
and
xchg
cmp
inc
fsubrp
jl
dec
dec
mov
stos
mov
pop
stc
clc
lods
arpl
cmp
sub
mov
mov
imul
inc
jae
jae
jmp
ror
aam
hlt
mov
adc
adc
leave
push
mov
or
repnz
add
int3
and
add
inc
inc
and
fs
inc
mov
out
rolb
imul
outsl
repz
mov
inc
sub
popl
xchg
and
pushf
or
jg
dec
cmc
sahf
jno
lahf
int3
jecxz
pop
shrb
or
std
out
mov
pusha
sbb
sub
clc
hlt
add
insb
in
sub
leave
pop
call
dec
xor
xor
pop
bound
sub
jl
pop
lods
mov
fxch
xchg
fwait
dec
lea
lahf
pop
mov
mov
mov
insl
popf
sarl
cwtl
inc
dec
stos
movsb
jle
mov
mov
fucomi
xchg
inc
ja
ljmp
in
addr16
ja
push
pop
push
dec
rol
fcomip
div
into
leave
out
movsb
sbbl
add
dec
or
notb
sahf
popf
icebp
or
add
xor
sbb
fists
cwtl
and
ficomps
loope
and
xchg
mov
jno
cld
or
rorl
or
sbb
mov
scas
out
testb
lock
xor
mov
testb
xor
shrl
out
addl
xchg
filds
imul
jnp
push
loop
mov
js
ds
popf
mov
out
negb
pop
test
mov
jns
inc
sub
jmp
add
sub
ja
push
shl
or
inc
aaa
dec
sbbb
stos
add
jae
mov
adcb
sbb
fs
rcrb
sub
out
lods
stos
rcrb
pop
xchg
sub
movsl
mov
adc
pop
xlat
and
adc
xlat
and
pop
sti
dec
sbb
test
lea
mov
inc
xchg
jge
dec
pop
jl
fs
dec
loop
shll
push
sub
ljmp
pushl
imul
adc
stc
aaa
lret
imul
icebp
shld
xor
or
push
mov
out
jnp
scas
imul
test
into
loopne
andl
mov
jmp
cmc
ret
pushf
inc
enter
push
fbld
cmpsb
test
pop
fisubrs
mov
mov
fwait
lcall
bound
add
inc
inc
pop
inc
mov
jb
cmpsb
repz
fxch
mov
mov
sbb
fdivrs
xchg
jg,pt
jp
fcomps
shr
xchg
daa
ret
adc
notl
xchg
fcmovbe
call
aaa
shr
pushf
in
out
dec
les
lret
vxorps
rorl
movsl
pop
out
clc
jle
and
xor
insb
pop
dec
mov
mov
mov
push
push
ret
iret
push
dec
xchg
and
fcoms
push
sbb
xor
cmp
mov
in
lret
xchg
movsl
jle
adc
divl
addr16
add
gs
dec
and
jmp
inc
xchg
ljmp
outsb
in
lret
stos
stos
cwtl
shrl
and
push
nop
mov
mov
push
stos
ja
fildl
test
pusha
mov
fisubl
aas
scas
or
push
cmp
pop
xchg
loopne,pt
cwtl
xchg
aam
out
xor
scas
gs
mov
mov
mov
dec
les
inc
mov
pop
ja
data16
and
ja
in
dec
cwtl
scas
xchg
lret
cmp
cmp
pop
movsl
inc
cmp
cmp
pop
push
sbb
cmp
mov
pop
xor
dec
out
mov
mov
rcll
pushf
js
shrl
cmp
repnz
jmp
insl
jb
pop
dec
mov
push
mov
mov
add
out
imul
adc
fs
jl
adc
sub
pop
xor
mov
adcl
jecxz
or
and
mov
lods
push
aad
inc
dec
push
mov
mov
add
dec
ret
sub
inc
or
push
int3
mov
aaa
pop
jmp
mov
mulb
test
dec
xor
aas
push
jae
cltd
mov
test
sub
sub
pop
lret
lds
dec
testb
pop
insl
add
out
sbb
andl
xchg
mov
mov
jmp
insl
sub
lock
insl
cmpsb
nop
ja
jp
addr16
popf
sbb
mov
cmp
rcl
push
mov
sahf
shlb
sbb
inc
xor
fnstsw
xchg
and
jmp
push
mov
mov
sbb
fadds
adc
nop
loop
in
insb
mov
cli
js
mov
in
inc
in
mov
adc
xor
or
int
int3
arpl
mov
or
fsubs
stc
pop
xor
movb
xchg
divl
imul
jecxz
data16
andl
negb
mov
loope
jno
dec
mov
aaa
mov
inc
adc
scas
jge
jp
lcall
out
in
and
dec
test
movsb
dec
fcoms
or
ds
jecxz
pop
sbb
fisubrl
out
add
push
inc
cmpl
mov
pop
cmp
out
fisttps
lods
dec
ret
fmull
int3
lret
xorb
sub
jecxz
insl
sbb
into
out
sbb
out
jle
mov
shrl
jnp
xor
cmpl
rcrl
int
cs
inc
cltd
inc
lahf
lret
dec
push
adc
and
push
fstl
sub
jle
dec
and
xor
sbb
es
push
and
cltd
daa
mov
jp
dec
jecxz
mov
pop
mov
out
or
sub
sub
pop
cmp
out
mov
fcomps
mov
add
das
or
mov
outsl
xor
adc
add
dec
inc
aaa
xor
rclb
add
mov
js
outsb
sub
nop
cmp
dec
ljmp
mov
clc
inc
fldcw
dec
sub
and
aam
clc
or
or
cmpl
mov
xchg
clc
cwtl
sub
fwait
jno
inc
pushf
cmp
dec
jno
lahf
mov
inc
xchg
loopne
mov
xchg
ljmp
and
inc
dec
lea
cmp
xchg
push
adc
jge
sbb
pop
sub
pop
cmpsl
mov
mov
pop
pop
imul
jbe
insl
aad
es
das
mov
dec
adc
mov
faddp
sbb
cli
ret
sbb
lods
fdivs
ds
dec
cmc
mov
mov
shr
sub
dec
mov
pop
adc
xchg
add
or
roll
in
ss
imull
and
aam
lds
lods
adc
stc
xchg
xlat
ret
xor
xchg
push
dec
leave
aaa
mov
or
and
lock
push
aad
mov
adc
aad
jg
lret
popa
cmp
pop
test
jnp
movsb
ror
mov
in
pop
or
lods
lahf
bound
enter
std
pop
sbb
mov
sahf
jecxz
es
fimuls
popa
imul
xor
test
mov
sti
push
cmpsl
inc
fsubl
out
and
sbb
fsubrl
dec
decl
inc
push
mov
rcl
cmp
stos
inc
sbb
sub
movsb
decl
int3
arpl
outsb
cmp
and
cmp
pop
fimull
loop
push
push
mov
mov
add
stos
out
test
jp
cmp
jecxz
push
fstps
mov
popf
in
jmp
inc
loopne
jb
or
push
ds
cli
ss
push
jg
jmp
add
jo
pop
addb
jns
dec
lea
fdivrs
push
and
dec
mov
fisubs
mov
inc
mov
loop
sbb
imul
das
mov
jo
into
adc
xchg
shrl
sahf
sahf
movsb
sti
sub
std
mov
std
dec
jle
test
sub
mov
in
loop
adc
fimuls
ret
cmp
mov
repz
aad
ljmp
mov
cli
mov
push
fiaddl
dec
rcrl
popf
mov
sub
pop
push
inc
lcall
xor
lds
hlt
pop
stos
outsl
xor
cmpsb
fstpt
loop
stos
cmp
out
or
imul
mov
inc
xor
inc
aad
call
hlt
dec
mov
not
jno
sbb
ss
lock
adc
and
nop
shrb
mov
in
pop
rcll
lods
lds
fdivrs
mov
xorl
pop
add
cld
mov
movsl
insl
or
ror
xchg
ss
pop
jmp
pop
fimuls
mov
call
ror
addb
mov
cmp
xchg
test
xor
imul
inc
pushf
shl
jae
jl
test
repnz
jnp
cld
cmp
and
mov
xor
jb
xchg
popf
push
repnz
push
cmp
jmp
dec
movsl
and
sbb
bound
insl
loope
data16
adc
std
adc
cli
pop
xor
mov
mov
mov
cmpl
xor
cld
xchg
sbb
jo
fiaddl
pop
scas
fcmovbe
dec
mov
jb
sub
daa
add
mov
mov
add
jno
movsl
push
push
add
inc
shl
js
mov
idiv
dec
mov
cmpsb
and
push
lods
cltd
inc
ljmp
pop
inc
outsl
pop
insb
mov
mov
lds
shll
fnstcw
cld
cmp
std
mov
or
les
addr16
lahf
cmp
fcomps
adc
inc
add
idivb
mov
mov
jo
lcall
mov
dec
push
or
inc
pop
add
out
ds
jno
cwtl
xchg
fiadds
push
sbb
mov
lods
pop
sbb
add
push
repz
loopne
or
iret
xchg
movsb
adc
and
inc
imul
add
dec
es
enter
cmp
insb
dec
hlt
add
pop
bound
test
outsl
jecxz
adc
cwtl
rol
test
fsubrp
or
cmpsl
adc
add
idivl
mov
lahf
fstl
rclb
mov
push
orl
fstpl
xor
xor
pop
dec
in
mov
mov
imul
xor
stos
jmp
sub
inc
mov
fisubl
rolb
xor
int
aad
movsb
add
add
pushf
or
gs
divb
push
es
pop
test
mov
ret
mov
sbb
pop
xchg
in
es
inc
rcrl
adc
pop
mov
mov
mov
lret
icebp
fs
mov
mov
xor
inc
add
jge
mov
arpl
mov
nop
loop
iret
mov
je
loope
xchg
xor
and
push
sub
xchg
repnz
jp
shll
jne
mov
add
jle
inc
dec
inc
xchg
push
dec
cmpsl
mov
pop
inc
xor
pop
enter
mov
scas
shll
push
mov
lods
orb
aad
cs
jl
pusha
out
lahf
cltd
push
in
test
cmp
imull
sarl
insl
mov
fistpll
nop
or
add
lret
add
es
mov
inc
cmp
lods
or
imul
call
out
sbb
sbb
jns
cmp
sbb
icebp
ret
arpl
jmp
rcll
add
sahf
in
stc
insb
push
push
jns
inc
test
ss
and
fs
movsl
mov
pop
aad
outsb
daa
pop
int3
jmp
insl
push
hlt
insb
pop
mov
loopne
pop
pop
push
push
sbbb
push
lods
jmp
push
xchg
stos
cmp
jne,pn
scas
popa
ja
arpl
xchg
mov
jecxz
push
sub
adcl
dec
data16
aam
js
notl
ljmp
imul
loopne
xchg
fdivrl
fucomp
call
add
mov
add
jmp
sti
shll
jecxz
push
popa
or
fldcw
sub
xchg
adcb
sbb
and
pusha
daa
xchg
aas
movsb
lret
call
xor
pop
inc
jbe
sub
sub
scas
in
addr16
lret
outsb
add
in
enter
icebp
xchg
dec
mov
cmp
sub
cmp
lahf
lods
pop
rol
pop
jp
stc
xchg
cli
loop
outsl
outsb
nop
sub
jecxz
xchg
dec
dec
lret
xchg
add
adc
push
xor
pop
push
fbstp
xchg
ja
mov
dec
insl
adc
mov
iret
jne
xchg
cmp
push
daa
mov
aad
dec
mov
push
shll
mov
lods
jge
sub
je
test
clc
ds
scas
xchg
repnz
ror
dec
pushf
in
repnz
push
icebp
vpaddusb
outsb
adc
mov
add
mov
iret
enter
cli
sbb
sbb
sti
dec
cmp
lret
pop
inc
cmpsl
and
in
adc
cli
cmp
sub
adc
and
stc
cs
aaa
pop
push
inc
rorb
icebp
lock
pushf
lcall
or
out
mov
cmpsb
ret
aas
and
filds
pop
test
xchg
xchg
ds
sub
int
jp
jg
test
loop
arpl
jno
or
push
dec
rcll
sbb
lds
pop
mov
jecxz
or
mov
push
addr16
es
cli
jmp
mov
bound
insb
xchg
sub
clc
push
sub
scas
arpl
dec
enter
push
inc
sbb
xchg
mov
popf
pop
orl
popf
lock
negl
sbb
pop
subl
cmp
xchg
pop
xchg
xchg
mov
xchg
or
shlb
xchg
pop
lods
mov
jb
push
test
rcrl
in
push
es
dec
ret
cltd
cmpsb
xor
pushf
xchg
out
lret
cmp
mov
addl
mov
lds
leave
dec
scas
mov
arpl
dec
push
mov
pop
inc
leave
pop
mov
mov
sahf
pusha
and
incl
sbbl
fs
jns
inc
pop
mov
inc
out
pop
pop
mov
andb
sysexit
xor
adc
jb
in
or
loope
adc
int
add
mov
rorb
popf
test
add
outsl
testl
scas
add
subl
mov
sbb
test
mov
repnz
cmpsb
cli
xlat
pop
mov
sarl
fists
repnz
dec
inc
mov
inc
add
subb
psrlw
stos
sbb
or
sbb
push
imull
lds
out
and
loope
add
cmp
jns
enter
int
les
mov
jl
add
cltd
cmp
sub
bound
sbb
mov
sub
xor
sub
inc
inc
ret
sbb
push
std
pop
in
inc
and
dec
idivl
repz
mov
cltd
out
scas
push
adc
adc
dec
xchg
shr
fiaddl
push
scas
sti
or
pop
xor
frstor
push
xchg
push
jecxz
add
pop
test
icebp
nop
call
dec
push
mov
jnp
outsb
jns
cs
dec
cmp
cwtl
xor
ret
xchg
push
loop
les
jmp
mov
xchg
mov
xchg
inc
lods
pop
test
xor
mov
mov
ret
mov
inc
cld
data16
mov
call
das
jno
dec
mov
sbb
addb
xchg
push
mov
cs
fadd
xchg
fidivrl
push
inc
movsl
and
mov
mov
push
sti
xlat
movsl
cmpb
stos
lds
cmp
or
sbb
xchg
push
jne
mov
pushf
push
xchg
sbb
and
pop
xchg
cltd
mov
hlt
mov
je
or
push
cmpsl
sbb
cwtl
dec
nop
loopne
test
sbb
or
jecxz
lock
gs
sbb
push
sub
push
mov
inc
pop
lods
loop
stc
sbb
mov
mov
jmp
shrl
in
movsb
mov
je
test
stos
mov
daa
ret
outsb
roll
pop
pop
pop
ljmp
sahf
fistpll
cmpsl
pop
aad
clc
inc
lods
ret
inc
jecxz
mov
cmc
outsl
fistpl
test
lret
and
pop
fsubl
xchg
aad
sbb
addb
stc
cmp
arpl
inc
and
or
cs
sub
les
pop
sbb
inc
clc
insb
sbb
lock
or
cmp
jp
push
adc
push
lahf
mov
add
insb
jne
sub
jge
inc
repz
aaa
sub
ss
repnz
pop
pushf
dec
adc
add
jae
or
pop
loop
cmp
stos
mov
pop
dec
sti
inc
loope
imull
cmpsl
leave
pop
push
pop
data16
js
mov
ss
ljmp
faddl
aaa
jle
mov
push
fmul
in
subb
je
mov
xor
xor
stos
mov
jo
ljmp
lahf
pop
mov
subb
xlat
movsl
inc
push
lret
adc
loope
cmpsb
in
sub
test
lret
out
mov
leave
pop
lret
push
and
mov
sub
mov
jg
pop
push
xor
das
add
jle
daa
inc
sub
mov
stc
adc
scas
jmp
fs
mov
mov
jp,pn
inc
xor
jmp
or
cld
jns
iret
ljmp
cmc
adc
cmpl
pop
jmp
aaa
push
dec
jo
scas
inc
cmp
pop
jnp
sbb
sub
mov
jge
or
or
je
mov
sub
sub
out
lods
xor
push
ljmp
xchg
dec
dec
xchg
lret
inc
fsubrs
mov
mov
push
test
mov
mov
enter
scas
data16
test
mov
fdivrs
add
or
dec
out
insb
stc
xchg
mov
iret
imul
jbe
add
lea
push
data16
dec
in
loop
test
stos
jmp
cmpl
lret
gs
ljmp
in
xchg
xchg
mov
cltd
xchg
cmp
sub
or
addr16
jns
addr16
mov
loope
or
sbb
pop
test
insl
push
jge
cmpsl
add
sbb
jnp
mov
push
lret
mov
xor
ds
dec
lds
lret
aam
xor
cmp
lea
mov
pop
loopne
stos
ret
fwait
cmp
push
pop
mov
insl
sbb
lock
aam
push
lcall
jae
lret
mov
lea
cmpsb
sub
pop
add
mov
orb
rcll
and
popl
xchg
mov
sbb
dec
sub
cmp
jno
stc
push
pop
jg
sbb
loope
add
xor
mov
push
or
add
pop
mov
jmp
adc
inc
sbb
or
imul
mov
int3
add
shrb
xor
cmp
dec
mov
dec
mov
mov
int
mov
jns
mov
cs
inc
push
jns
in
add
sbbl
jl
in
mov
fsts
in
xchg
idivl
test
aaa
test
shrb
in
and
cmpsl
mov
vxorpd
imul
sbb
pop
cmp
inc
test
subl
adc
rcl
int3
lods
jecxz
sbb
adc
cmp
and
jo
iret
fxtract
mov
jae
orl
xor
lods
fmuls
mov
mov
mov
sub
outsl
mov
push
jo
dec
mov
jne
aaa
pop
mov
ljmp
std
sub
clc
sbb
cltd
dec
push
push
lret
jle
or
mov
mov
xchg
or
pushf
fwait
mov
adc
lahf
xor
cmp
jno
cmp
sbb
out
pop
scas
imul
mov
insl
jnp
add
push
mov
stos
daa
mov
int
sbb
sbb
cli
das
cmpsl
imul
jne
jbe
inc
push
lock
jge
or
cmp
test
and
dec
lret
push
inc
sub
andb
lods
mov
and
arpl
outsb
ret
test
pop
jge
xchg
loopne
ds
or
es
pushf
pop
scas
nop
dec
scas
cld
adc
fistpll
lret
inc
js
test
outsl
add
icebp
mov
adc
sbb
in
dec
js
les
fsubrl
loop
adc
idivb
mov
cmp
and
push
cltd
icebp
dec
lods
push
arpl
cwtl
adc
in
pop
je
fsubl
pop
addr16
inc
ja
daa
mov
inc
pop
mov
ret
xor
or
lret
shrl
loopne
mov
hlt
xchg
gs
dec
test
pop
testb
pop
aad
es
mov
leave
jbe
dec
xor
fs
inc
mov
mov
sbb
xchg
adc
frstor
std
mov
dec
fistpl
mov
xlat
pusha
inc
sbb
cltd
mov
in
jbe
fcoms
or
aaa
shrb
jl
sbb
out
add
aas
dec
jecxz
rorb
out
mov
cli
sahf
lods
jg
and
push
fnsave
cmpsb
dec
push
jmp
gs
cmp
dec
or
inc
add
hlt
sub
data16
int3
pop
dec
mov
aam
mov
xchg
lret
inc
xor
mov
xchg
or
adc
stc
out
in
adc
test
sbb
adc
mov
repz
mov
mov
clc
fldcw
pop
inc
push
adcb
xor
push
call
hlt
aaa
xchg
xor
rcrb
cltd
icebp
cmpsb
push
loope
testb
push
push
test
dec
cmpsl
je
sub
call
in
xor
and
push
ret
mov
lcall
push
or
addr16
repz
mov
fnstenv
sub
lret
loope
imul
pop
bound
mov
mov
dec
sbb
pop
inc
jp
insb
fbld
sub
or
popf
out
out
and
ljmp
push
or
movsb
shlb
mov
pand
jecxz
sub
into
push
or
xchg
cmpb
inc
aad
mov
sahf
pop
add
mov
movsl
pushf
lods
cmp
jns
std
adc
or
sub
inc
sahf
cmp
fnsave
sbb
jne
mov
in
cs
rcrb
lods
adc
add
cli
fcmovbe
xor
pushf
das
inc
add
xchg
sub
adc
adc
xchg
lods
mov
in
jns
sbb
mov
lds
pop
jno
cmpsb
int3
push
sub
lock
ss
es
mov
sbb
sbbl
popf
cmp
icebp
adc
inc
ljmp
int3
dec
xor
pop
pop
shl
and
jle
popf
cmp
int3
jmp
jge
sub
lcall
mov
xor
inc
sbb
xchg
loope
pop
int3
pop
jo
push
mov
sbb
add
sbb
outsl
aaa
pop
in
int3
enter
les
aam
jecxz
pop
jb
stos
push
int3
cmp
xchg
arpl
nop
mov
out
insl
hlt
test
sahf
push
or
add
sub
adc
xchg
dec
jmp
push
mov
lods
std
inc
fsub
ljmp
push
je
or
lock
sub
xchg
das
mov
test
adc
loop
std
mov
jg
rcrl
cwtl
mov
subl
stc
mov
sbb
mov
xor
xchg
fs
jmp
fdivrl
aam
dec
in
jnp
push
add
xlat
cwtl
inc
mov
push
xchg
and
xchg
notb
adc
jb
loop
fists
outsb
lds
jmp
data16
push
xor
hlt
stos
test
cmpsb
jno
sbb
or
jns
test
std
js
adc
jns
adc
ja
out
jo
ja
jb
into
add
mov
scas
xlat
sub
test
or
inc
lods
adc
jl
imul
adc
jp
pop
pop
addr16
pop
sti
mov
in
mov
fadd
dec
das
pop
or
mov
dec
xchg
lret
aam
fldenv
pop
stos
aam
inc
mov
mov
push
cmpsb
aaa
test
add
inc
inc
sbb
repz
sbbl
mov
or
shrl
sti
popa
inc
inc
jp
push
push
sbb
pop
stos
lods
sub
mov
in
div
xor
jp
inc
andl
imul
test
dec
sahf
pop
stos
lahf
nop
out
adc
jl
sub
aas
ja
mov
mov
movsb
lcall
mov
mov
int3
jge
iret
ret
lret
test
xor
test
sbb
imul
pop
xor
lods
sub
cmp
pop
roll
jae
insb
jnp
fiaddl
rorb
mov
lahf
sbb
push
push
or
add
sbb
jo
push
sub
outsb
in
pop
fists
sbb
and
inc
cmp
mov
fldenv
jne
cltd
js
jo
mov
int
inc
lcall
cmp
jmp
jp
loop
sub
mov
in
por
inc
cmp
jnp
cwtl
and
in
xchg
loope
pusha
out
cltd
out
xchg
out
icebp
outsb
dec
adc
sahf
jae
push
xchg
xchg
pushl
mov
test
sub
cs
mov
push
adc
push
ret
cli
pop
shrl
ss
sbb
jl
cli
lret
adc
ds
out
adc
mov
cmpb
xchg
and
cmc
divl
pop
push
and
adc
sub
shrl
xor
push
mov
jbe
mov
xlat
lock
mov
mov
aad
test
pop
xchg
stos
jmp
or
mov
cmc
xor
adc
xor
int3
or
jecxz
mov
add
mulb
in
pop
mov
cmc
jbe
std
mov
inc
lcall
jno
shr
scas
or
popa
mov
xor
loope
xor
jp
pop
mov
inc
inc
add
testl
jle
add
and
cmc
jp
sbb
lret
and
aad
or
dec
hlt
sub
out
cmp
ja
mov
push
popa
xchg
cltd
xor
out
repz
ror
movsl
mov
cmpsb
ror
ds
and
push
dec
or
or
ss
jp
daa
push
lret
lret
stos
ficoml
mov
xchg
sti
cmp
sub
shlb
mov
in
testb
icebp
pop
xlat
and
fs
cld
iret
fdivl
mov
adc
inc
test
daa
pusha
pop
and
dec
fadds
push
sub
push
inc
test
pop
out
inc
jae
xchg
pop
sub
outsl
mov
cmc
loope
sub
ja
inc
mov
mov
es
addb
shlb
adc
into
es
dec
mov
xchg
clc
or
call
pushf
lds
cmpsb
divb
jno
sbbl
hlt
in
lret
push
call
xchg
mov
jno
jne
cmp
in
mov
adc
inc
jo
xchg
mov
mov
hlt
je
and
adc
cmc
push
call
xchg
stos
push
mov
jae
xchg
inc
leave
sub
jno
xchg
in
xor
mov
mov
pushf
scas
nop
jo
fldt
into
sbb
roll
cmp
inc
rcrb
bound
add
popa
ret
mov
jge
xchg
outsb
xor
sub
mov
mov
lcall
dec
mov
or
inc
jno
or
lods
add
mov
pop
call
cmpsl
cmpsb
loop
mov
sahf
push
pusha
add
fildll
adc
clc
into
vmread
negl
bound
mov
and
in
sti
xchg
sub
push
add
xor
pop
mov
mov
and
cmpsb
xchg
mov
adc
gs
sub
and
icebp
aaa
add
pop
pop
mov
inc
cltd
pop
in
dec
push
mov
mov
mov
mov
aad
push
push
jg
sub
push
cld
gs
mov
test
inc
cld
dec
aam
in
out
imulb
jne
mov
or
push
adc
jns
ds
mov
stos
pop
sub
jno
loope
je
lret
pop
jne
jnp
repnz
neg
add
inc
imul
dec
push
mov
cmp
lods
xor
mov
ja
xchg
rorl
jl
xchg
lahf
cmp
add
inc
pop
shlb
dec
push
popf
mov
mov
popf
adc
xchg
addb
mov
jecxz
fwait
sub
ficomps
fisubrs
jne
ret
sbb
dec
jne
jbe
or
loope
adc
ret
adc
out
or
outsb
cmp
nop
leave
xchg
sbb
adc
leave
mov
sub
inc
mov
jge
dec
sahf
sbb
aas
mov
or
popf
loop
pushf
pop
hlt
xchg
push
push
cmpsb
xlat
xchg
idivb
push
mov
fldt
cli
repz
imull
inc
lods
cmp
jge
and
hlt
jns
in
xchg
es
dec
sbb
pop
mov
rclb
push
pop
fcmovbe
dec
rclb
sarb
subl
in
in
mov
gs
cmp
lret
add
mov
nop
cmp
dec
in
cmp
loope
dec
pusha
mov
and
xchg
cmpsb
cmp
sbb
in
lret
push
push
sub
mov
fsincos
in
or
popa
notl
xorb
repnz
and
movsb
neg
pusha
jmp
scas
sub
cmpl
sbb
dec
adc
pop
xchg
ja
stos
lds
pop
cli
data16
es
xchg
adc
inc
xchg
pop
add
pusha
pusha
in
or
inc
je
mov
fnop
add
mov
stos
pusha
int3
jne
and
test
dec
xchg
imul
add
lret
lret
outsb
adcl
jge
cmpsb
popf
dec
jge
mov
cmovb
out
in
insl
fldenv
fwait
jmp
push
ds
fsubrs
adc
add
cli
cmp
jecxz
ss
inc
push
clc
pop
mov
sbb
movsl
int3
je
cs
dec
in
cmp
mov
jno
adc
jno
sti
dec
mov
test
pop
add
cld
inc
fidivl
sub
shrb
stc
dec
shlb
sub
pop
xchg
add
inc
std
push
idivl
cmc
add
push
or
call
andb
mov
loopne
test
cmpb
or
mov
in
enter
sub
push
not
xchg
je
sbb
sbb
adc
sub
icebp
cs
in
int
inc
aam
lea
cmpsl
xor
icebp
cmc
repnz
aad
ficoms
push
or
pop
push
inc
pop
push
call
inc
push
pop
xor
dec
jnp
xchg
inc
decl
pop
aad
repz
sub
sbbl
jno
add
leave
mov
ss
in
inc
lahf
fs
sbb
out
test
xchg
arpl
rcrl
subl
fcmovbe
sti
sub
sub
ret
test
aam
xchg
inc
mov
dec
mov
inc
sub
cmc
in
xchg
cwtl
dec
push
sub
xchg
mov
nop
lcall
mov
inc
pusha
xchg
ja
test
mov
ljmp
js
sarb
idivb
test
dec
dec
add
test
add
arpl
push
ret
dec
xor
mov
cmc
test
jo
sar
cwtl
jle
or
fwait
clc
ret
pop
mov
mov
xorb
arpl
mov
ljmp
jle
outsl
sub
aad
add
mov
mov
mov
loopne
sbbl
inc
mov
divb
aaa
scas
cmc
mov
xor
fmull
inc
bound
xchg
outsl
sub
jp
mov
out
pop
add
pop
aam
sbb
pusha
cwtl
jmp
mov
jne
imul
push
push
pop
cmp
pop
or
pop
test
mov
inc
mov
sbb
push
inc
cmp
std
or
dec
push
js
addr16
mov
mov
lods
push
nop
sbb
mov
jp
mov
repz
test
js
adc
mov
push
and
icebp
cld
mov
or
mov
push
xchg
lock
shrl
adc
fs
loop
jg
lret
clc
dec
mov
sarl
inc
dec
cmpsl
loope
popf
imul
test
iret
enter
push
cmpl
dec
pop
sub
mov
and
icebp
add
hlt
add
xor
lret
jl
cmp
pop
std
fstpt
jb
mov
imul
mov
je
pop
adc
xlat
pop
adc
xor
push
push
mov
out
dec
outsl
mov
lcall
hlt
adc
push
jns
xchg
mov
out
fwait
and
jae
mov
fstps
inc
push
mov
jge
jge
stos
jp
push
rcl
iret
jnp
pop
push
pop
nop
lea
push
and
mov
cwtl
jg,pn
lahf
push
loope
jne
jbe
mov
xchg
jg
inc
cmp
jns
mov
xchg
jno
xchg
lods
out
decl
lret
bound
dec
mov
or
shlb
popl
mov
test
jmp
mov
dec
jl
clc
and
mov
cmp
xchg
pushf
add
inc
sub
cmc
jae
fld
push
jge
sbb
add
stc
lds
out
in
lea
daa
mov
pop
test
loope
pop
loop
sub
loop
push
in
jle
push
xor
pop
cltd
call
sbb
mov
jmp
andb
shl
aad
out
sub
lahf
fs
cmp
adc
adc
push
mov
pop
mov
cs
stos
faddp
adc
mov
or
inc
aad
mov
and
in
sbb
jg
stos
mov
mov
pop
xor
dec
fdivl
mov
xlat
inc
aad
mov
lcall
lea
je
mov
jg
lods
mov
pop
and
xor
or
cmpsl
icebp
repz
mov
lds
xchg
cmp
adc
sarl
push
pop
sbb
mov
mov
mov
cmp
insb
xor
mov
and
add
push
inc
mov
int3
xchg
or
push
mov
ftst
jno
jae
xchg
filds
repz
cmp
pop
and
cwtl
inc
sbb
jecxz
popa
loope
mov
shrb
ja
or
and
stos
mov
sbb
mov
cmpsb
test
mov
pop
xchg
adc
dec
mov
outsl
int3
pusha
sti
push
mov
xor
rol
jl
mov
and
push
js
fwait
pop
cli
xlat
push
cmpsl
add
lret
pop
hlt
js
pop
mov
xchg
sub
fucomp
or
or
xchg
sbb
arpl
push
sub
and
call
ficomps
xchg
repz
push
push
mov
or
adc
pusha
lret
aaa
push
jb
pop
mov
mov
insl
andb
add
push
cmp
push
cmp
repnz
stos
pushf
fistl
mov
jae
nop
sbb
sub
xlat
lds
stos
mov
movsl
push
dec
icebp
push
add
fld
out
mov
daa
orl
adc
fstps
pop
dec
mov
mov
aad
test
mov
pop
out
xchg
dec
sbb
dec
lret
stos
pop
inc
push
js
push
fcompl
in
repnz
es
aad
loop
rcl
loope
out
adc
xor
dec
std
hlt
jb,pt
inc
shlw
and
inc
cmp
movb
dec
out
les
add
insl
fisubrl
cli
test
pop
cld
orl
sbb
mov
hlt
sub
or
lret
fucom
adc
ret
popf
icebp
mov
ss
mov
pushf
repnz
in
push
sti
call
int
test
sub
divb
dec
add
imul
xor
and
jb
sub
mov
repnz
in
dec
mov
fisttpll
cmp
or
stos
js
push
adc
sbb
sahf
les
idivb
push
js
lea
stos
pop
mov
enter
or
in
push
loop
lcall
test
dec
jo
pop
mov
pop
cmc
sahf
addr16
lret
push
iret
std
cwtl
dec
sbb
pop
push
inc
add
lret
xchg
and
ja
idivb
jmp
pop
sahf
lret
outsl
decb
pop
pop
out
inc
xchg
fidivl
fcompl
movsb
out
outsb
push
adc
inc
sarb
call
xor
jg
pop
das
mov
sbb
xchg
popf
andl
xor
fs
fmuls
sub
lock
xor
cmp
insb
mov
xorl
add
push
or
inc
cmp
mov
orb
mov
mov
das
and
aaa
xorl
push
dec
cltd
pop
nop
add
sbb
out
mov
dec
stos
out
cltd
inc
push
mov
pusha
lret
inc
mov
add
dec
addr16
dec
xchg
cld
loop
aas
inc
fbstp
mov
pop
cmpsb
sbb
sub
and
imul
xor
dec
mov
jl
pop
into
cmpsl
fstpt
sbb
jnp
jmp
adc
test
fadds
jp
pop
adc
je
lds
xorl
icebp
inc
mov
pop
lahf
xor
pushf
mov
push
bound
fbstp
test
lock
mov
dec
andb
mov
push
dec
and
mov
xchg
push
xchg
outsb
nop
sub
jb
mov
out
and
jge
cmc
adc
sub
bt
xor
lret
sub
sbb
xchg
dec
dec
sti
inc
cmp
gs
test
jo
mov
lods
pop
cmp
add
popa
iret
stos
aam
loop
repz
cwtl
lret
cmp
leave
es
int3
insb
outsb
pop
lcall
fstp
jg
jecxz
or
rcl
jmp
iret
testb
into
mov
and
out
xchg
xchg
clc
ja
rolb
loopne
sbb
add
mov
inc
sarb
loopne
dec
aaa
xchg
int
pushf
js
stc
sbb
roll
movsb
ror
pop
sub
jge
fildl
jmp
add
add
dec
popa
xor
lods
orb
fs
ss
sahf
loop
pop
cmc
lods
lea
fsubl
xor
fs
in
pusha
icebp
test
xor
cmp
insb
xchg
dec
out
stos
sub
out
dec
or
shlb
inc
scas
add
jo
inc
cwtl
inc
pop
pop
in
mov
mov
push
bound
dec
inc
aad
push
mov
ja
pop
mov
pop
outsb
xor
push
fisubrl
fdivr
lcall
or
or
lock
jg
lret
sub
lret
mov
negb
adc
push
jns
cmp
push
aaa
cmpsb
inc
pop
lock
jae
cli
scas
or
lods
xor
jne
or
jmp
push
xchg
dec
aad
cmp
mov
daa
xor
mov
in
and
movsb
add
imul
cmp
cmp
add
jns
cmp
sub
mov
sub
out
adc
in
cltd
icebp
jae
jne
cmp
pop
stos
jg
adcb
test
out
pusha
dec
mov
in
aaa
sub
cmp
mov
xchg
aad
cmp
aaa
sbb
mov
xchg
cli
filds
test
dec
inc
cmp
cmp
pushf
iret
repz
fisttps
push
push
in
mov
in
adc
inc
inc
nop
loopne
jle
mov
and
clc
daa
mov
loopne
jg
cmp
pop
fistps
xor
orb
movsb
bound
shl
push
mov
je
gs
mov
fs
dec
dec
aam
ret
xchg
iret
std
sub
push
push
mov
test
inc
out
dec
repnz
leave
fs
sub
aam
xchg
pop
pop
outsb
xchg
ret
into
mov
or
xchg
push
frstor
mov
xchg
std
aas
lcall
fmuls
push
adc
mov
cmp
inc
mov
mov
mov
push
jecxz
stos
mov
repnz
shlb
xchg
sub
add
fldt
cli
int
cs
in
push
pop
add
add
jns
add
cmp
rolb
test
dec
mov
cmp
lea
imul
insb
std
jbe
mov
test
lret
movsl
clc
fstps
push
xchg
add
push
leave
lock
sbb
ret
mov
icebp
mov
fsubs
das
sbb
imul
test
sub
xorl
mov
sub
mov
xlat
push
sbb
dec
data16
push
test
add
xchg
xchg
insl
in
sub
mov
stc
add
loopne
cli
sbb
negl
add
inc
in
jle
shrb
cmc
and
or
ja
pop
push
and
loopne
jns
shr
push
jp
repz
clc
daa
dec
les
xchg
and
in
repnz
cwtl
cmc
popf
xchg
fucom
add
in
xchg
add
scas
mov
out
pop
dec
sub
mov
inc
es
push
adc
add
push
jno
test
mov
sub
imul
fldlg2
aam
es
ss
and
sub
in
or
mov
or
and
int
leave
sbb
aas
push
mov
pop
jbe
loope
sbb
lahf
dec
sub
push
pop
cwtl
ficoml
aas
mov
fidivl
xor
sbb
jno
push
outsb
push
add
enter
adc
roll
mov
js
inc
sub
in
aad
es
mov
int3
ds
stos
lahf
mov
shrl
xor
loope
push
push
mov
jecxz
lret
pop
arpl
repz
cmp
dec
inc
dec
cmp
add
loopne
out
ljmp
xor
fstpl
ret
dec
lcall
lret
roll
aam
lods
loope
or
jmp
push
sub
xorl
fsub
scas
or
jle
jae
add
cs
lock
addr16
les
pop
jbe
push
nop
cmp
jne
ret
adc
or
push
faddl
cmp
push
imul
mov
cmp
sarb
jnp
pop
or
arpl
cmp
sbb
int
mov
dec
ljmp
xor
mov
adc
xor
sbb
out
mov
mov
inc
ret
sbb
outsl
adc
fnstenv
push
jp
mov
pop
insb
dec
mov
dec
push
xor
sti
vmptrst
adc
jbe
mov
fxch
popf
das
roll
rcll
mov
ljmp
aas
scas
inc
dec
gs
pushf
mov
push
pushl
sarl
std
mull
data16
mov
test
add
push
imul
add
push
sbb
and
out
mov
add
xor
out
gs
bound
in
lds
outsl
mov
dec
cs
test
pop
pop
xor
in
imul
inc
push
mov
push
pusha
fisubs
fwait
out
sbb
cmp
pusha
addr16
ficoms
insb
and
std
lret
js
adc
flds
loopne
out
add
sub
dec
shll
adc
call
push
les
ja
loope
adc
push
adc
jo
jmp
mov
jae
push
mov
aad
xor
mov
sub
cmpsl
hlt
fs
mov
push
out
int
and
in
out
mov
rcrb
ljmp
push
cmp
leave
xchg
jb
sar
pop
nop
in
dec
aas
and
pop
aad
cmp
nop
in
bound
jmp
sub
and
cmpsb
dec
insl
mov
aad
mov
es
sub
inc
pop
pop
into
ja
leave
mov
push
push
xchg
cltd
test
mov
fs
fildll
fdivs
jg
xor
push
xor
sbb
push
inc
faddl
mov
cmp
lock
ret
mov
xchg
mov
insl
adc
mov
hlt
out
cmp
divl
out
jg
xchg
xlat
bound
movsl
std
add
jge
out
xchg
push
fmul
scas
add
cmc
imul
out
mov
pop
bound
test
mov
sub
stos
sarb
mov
add
out
jle
mov
stos
pandn
push
push
or
aad
in
add
cmpsl
bound
mov
cmpsl
jmp
mov
inc
mov
scas
mov
inc
fcoml
out
inc
movmskps
and
jns
dec
rcr
mov
dec
out
jbe
xchg
lcall
xor
rcl
inc
push
sbb
ret
jne
or
nop
pop
cwtl
and
dec
ljmp
cs
sbb
arpl
rolw
jl
mov
xor
push
int3
mov
mov
and
mov
fs
add
hlt
push
push
mov
push
xchg
sub
bound
pop
loope
mov
stos
cmpsl
lods
movsl
add
adc
in
jg
pop
mov
mov
rorl
mov
add
push
pop
push
xchg
int
popa
aas
pusha
xchg
sub
cs
jp
xchg
mov
pop
cld
aad
addr16
lods
hlt
fwait
movl
popf
jns
mov
das
pop
cltd
arpl
xor
sti
je
push
stos
mov
cmc
add
andl
pop
daa
lock
lret
aad
mov
xchg
cmc
je
mov
xchg
das
addr16
fwait
xchg
dec
lret
xor
sub
cltd
sahf
jge
dec
gs
mov
sbb
cmp
xchg
rorl
ret
jno
xchg
xchg
xlat
test
mov
add
cmp
rcll
repnz
cmp
cmpsb
cld
cmp
mov
xchg
or
fdivrl
dec
pop
pop
dec
rclb
fucomip
ja
mov
lret
inc
fcompl
lods
stos
imul
adc
dec
cmpsb
or
in
mov
push
pop
jp
js
std
repz
data16
aad
push
lcall
ds
dec
add
and
mov
pusha
pop
addr16
cmpsl
sub
fsubp
xchg
cmp
add
xchg
push
and
add
mov
std
movsl
sub
les
lret
out
mov
sub
cmp
in
dec
jmp
in
ja
sub
jp
jne
pushf
add
out
dec
popa
push
iret
xor
mov
jg
push
repnz
mov
sti
mov
sub
lea
shl
or
xor
aam
adc
test
mov
inc
hlt
inc
into
push
jl
data16
dec
add
pop
mov
icebp
xlat
push
or
dec
shrl
sbb
xor
and
jo
mov
mov
inc
jg
jne
fisubrl
sbb
inc
flds
mov
xchg
fmull
imul
sbbb
mov
adc
dec
in
xchg
lods
pop
aaa
dec
mov
pop
mov
push
or
push
hlt
icebp
jmp
jne
adc
fldcw
adc
and
lret
sub
mov
mov
or
ficompl
mov
jle
pop
hlt
je
adc
add
mov
mov
pop
clc
cli
stos
inc
mov
lahf
test
mov
enter
or
sub
clc
outsb
jmp
jnp
movsb
jp
mov
or
decl
iret
fisubl
lock
nop
jg
pop
jge
popf
rorl
mov
adc
rcll
adcb
xor
adc
or
xor
repz
rclb
stos
je
mov
bound
jl
xor
test
mov
int3
sub
or
push
call
adc
lods
cld
xchg
push
adc
xchg
cmpsl
dec
push
jae
loop
test
pop
mov
mov
mov
add
cmp
pop
mov
jl
fdiv
mov
stos
and
push
xchg
xchg
stos
cmpsb
loope
daa
fildll
dec
pop
lcall
stc
fdivr
fcoms
imul
mov
xor
dec
inc
outsb
mov
leave
je
out
jle
xchg
scas
rorl
and
sbb
dec
and
jmp
fisttpll
subb
pop
cld
push
cmc
into
add
data16
cmp
push
or
mov
ficoms
sub
cltd
mov
jmp
adc
fwait
hlt
mov
ljmp
fildl
mov
add
movsb
sub
dec
inc
das
mov
bound
inc
adc
pop
gs
in
jmp
fdivrs
or
sub
loop
jbe
addr16
cmp
push
and
pop
std
pop
mov
lods
xchg
jae
adc
outsl
sbb
adc
cltd
andl
or
lods
int3
jns
jle
add
outsl
mov
pop
dec
js
sbb
rcll
jp
sub
popf
xchg
xchg
fnstcw
repz
sahf
lret
and
into
cmp
xlat
nop
pop
mov
mov
adc
arpl
test
pop
mov
sbb
sbb
lods
testl
mov
cltd
ds
movsb
push
xor
or
and
xor
fistps
and
cmpl
dec
sti
cmpsb
mov
stos
inc
jne
and
dec
ret
xor
lret
mov
out
cli
daa
cmp
lods
cmpsb
jl
jg
sbb
and
aad
fists
aaa
mov
xchg
mov
xlat
in
push
pop
fldt
jno
pop
in
fmulp
mov
xor
pushf
mov
aam
fdivl
xchg
pop
cli
pop
cmp
mov
inc
bound
or
jb
mov
xlat
mov
or
dec
xchg
cmc
xchg
stos
and
cmc
insl
inc
add
rcll
ret
mov
sahf
je
test
xor
add
fsubl
or
hlt
adc
rcll
jle,pt
leave
sub
cmpsl
xchg
pop
imul
cmp
test
push
dec
lret
inc
xchg
xchg
jmp
adc
xchg
or
bound
test
mov
xchg
add
xchg
clc
and
jle
and
dec
inc
div
popl
push
mov
or
loop
sbb
sbbb
cld
daa
push
test
pop
mov
pop
ficomps
fbld
adc
pushf
ljmp
mov
out
pop
push
mulb
cmp
mov
test
pop
int3
ret
push
test
inc
fdivr
add
mov
dec
mov
movsl
nop
jle
sbb
and
xor
movsl
add
cmp
addr16
mov
das
jg
adc
int
jl
add
xchg
call
jae
outsb
rcr
dec
sub
mov
mov
sub
ror
js
jle
pop
cmp
adc
lods
mov
iret
pop
and
or
cmp
xchg
sbb
add
adc
inc
js
push
and
cld
push
sub
imul
lcall
clc
inc
je
sbb
cltd
stos
ja
pop
cmp
push
jmp
movl
aas
andl
xchg
loop
shrb
out
jmp
ljmp
xorl
cmpsb
call
pop
clc
adc
sbb
sbb
inc
cld
in
sbbb
jns
cmp
iret
daa
mov
ret
xchg
dec
inc
xor
dec
jg
stc
sub
push
stc
mov
pop
mov
stos
fcmovne
filds
lret
cld
jmpw
jmp
repz
mov
cmpsl
mov
sbb
test
clc
jmp
nop
sub
push
rcr
imul
hlt
mov
inc
ret
or
mov
inc
push
cld
sub
idiv
xchg
mov
cmpsl
stc
mov
enter
popa
mov
out
lods
adc
and
dec
mov
cmp
out
ja
xchg
mov
adc
jne
repz
nop
cmp
in
cli
clc
loop
push
inc
pop
leave
mov
arpl
ja
orb
mov
mov
adc
test
jne
lds
mov
stc
push
or
mov
cmp
sbb
mov
shll
cmpsb
in
ss
jo
mov
pop
inc
xchg
jmp
stos
movsl
xor
or
cmp
scas
inc
lret
cmp
cmp
jne
arpl
pop
es
mov
mov
xor
loop
cmc
pop
and
lds
inc
aas
jmp
jbe
add
jecxz
fsubrl
jge
pop
add
test
push
xor
cmpsb
pop
inc
loop
lcall
inc
in
scas
push
jae
jo
xchg
push
pop
mov
jecxz
jo
mov
cmp
dec
inc
cmp
jo
dec
stos
adc
arpl
andb
mov
scas
xor
decb
and
push
xor
adc
popa
arpl
int
pop
mov
notb
and
gs
sahf
cld
sub
rcrl
in
test
clc
mov
inc
push
imul
push
and
mov
push
popa
sub
clc
mov
cs
scas
pop
pop
ds
out
cmp
mov
sub
sub
and
leave
testb
shll
rcrl
iret
adc
lea
lret
aas
ljmp
adc
inc
push
orl
xchg
leave
lods
jmp
xor
shrl
cmpsb
dec
sub
jae
mov
test
sub
je
cmp
push
xor
inc
push
out
je
push
jmp
gs
rcrl
jg
inc
and
add
pop
pop
sbb
pop
mov
dec
fidivrs
add
fcoms
or
add
dec
mov
jecxz
imul
stc
shlb
dec
sub
mov
clc
subl
sbb
in
pop
divl
or
aaa
in
test
roll
inc
clc
pusha
lds
xor
or
sub
inc
lea
leave
push
mov
arpl
test
stos
add
sahf
dec
adc
cli
shlb
imul
in
ret
cmp
xchg
loope
push
mov
dec
mov
adc
pop
push
xchg
outsl
add
jns
call
dec
loop
jno
das
push
sub
jo
xchg
lret
addl
xor
xor
fildll
aaa
pop
adc
addb
pop
adc
push
jmp
xor
daa
test
push
add
xchg
xor
cmp
or
push
lahf
aas
lock
xchg
xor
movsl
and
xor
cltd
loop
jmp
popa
enter
les
mov
pop
dec
cmp
fcoml
pushf
sbb
jb
imul
add
cltd
aam
rorl
jb
mov
roll
push
dec
push
mov
mov
push
sub
shl
out
sbb
cltd
or
repnz
dec
adc
xchg
stos
or
dec
mov
in
and
sbb
clc
aam
mov
xor
in
lcall
add
fildll
popf
scas
les
out
inc
jo
adc
lods
add
inc
insb
mov
inc
mov
rcll
cmp
inc
addl
stc
ret
lahf
lahf
mov
jne
outsl
cmpsb
and
insl
xor
lahf
mov
ror
addr16
fstpt
cmc
mov
cmp
stos
pop
addr16
xor
daa
int3
adcl
push
aas
jp
mov
sbb
mov
xor
pusha
adc
ficoml
dec
and
scas
xchg
ja
outsl
lret
cltd
rcl
add
add
mov
dec
xor
push
mov
jbe
imul
cmpsl
add
dec
into
lods
and
ja
cmp
notl
sbb
jg
push
fidivrl
dec
mov
sbbl
xor
test
jle
jbe
stos
xlat
rcrb
jmp
jbe
aas
jns
outsl
inc
aad
shr
cmp
icebp
adc
hlt
outsl
mov
push
cmp
sahf
dec
inc
sbb
lret
pop
push
loop
sbb
mov
jbe
data16
push
int
pop
daa
pop
xor
into
gs
dec
dec
sub
jmp
add
sti
mov
shll
pop
mov
xlat
cmp
push
mov
xchg
daa
dec
subb
inc
and
mov
inc
cli
imul
scas
loop
sbb
dec
pushf
jns
ret
ret
lds
pop
cmpsl
jbe
sti
or
shrb
in
or
sub
lods
jne
inc
mov
roll
inc
jnp
mov
out
xor
push
dec
scas
fidivl
sbb
nop
mov
mov
aaa
lock
and
push
adc
sarl
or
ret
dec
mov
je
lret
pop
inc
add
xor
push
in
mov
inc
sbb
sbb
sub
test
pop
push
mov
rcll
stos
fstl
lods
mov
cmp
dec
leave
sub
call
lret
adc
push
ds
cwtl
jnp
in
sbb
adc
xchg
in
and
cmc
mov
int3
mov
mov
jo
aas
scas
xor
jns
sub
icebp
frstor
cwtl
mov
shl
jp
sahf
repnz
call
lods
insl
xchg
pop
lret
mov
sub
dec
cld
scas
or
xor
mov
mov
adc
int
das
scas
mov
adc
xor
test
pusha
bnd
adc
push
mov
mov
add
icebp
cmpsb
jp
jle
mov
fs
mov
je
fs
xor
cmp
mov
test
jo
mov
or
dec
push
or
shrl
push
subb
jmp
add
lea
sub
adc
mov
js
cmp
sbb
pusha
cld
rolb
jl
aam
dec
enter
out
push
and
sub
aaa
mov
jno
pop
xor
xchg
and
repnz
clc
fs
push
jmp
aaa
xchg
adc
jmp
scas
scas
idiv
mov
jp
aad
sbb
pusha
es
or
pop
mov
sbb
cmpsb
test
test
or
or
addr16
pop
mov
push
cltd
ja
into
or
js
inc
pop
test
rcrb
std
dec
and
fwait
insb
popf
rcrb
pop
cld
mov
stc
les
and
and
fmull
lods
jno
push
lret
aam
mov
xor
aas
sti
mov
bound
fwait
out
jae
fidivrs
hlt
xor
cmc
pop
cmp
into
ss
lock
cld
pop
sti
mov
shlb
in
into
and
jg
leave
daa
xor
adc
mov
hlt
mov
pop
call
pushf
lea
test
sub
pop
inc
scas
and
pop
jge
mov
mov
and
aaa
xchg
scas
out
cld
add
ja
repnz
enter
ret
mov
add
adc
jge
add
sbb
popa
add
sub
mov
push
cmp
push
push
scas
sbb
xor
movsl
les
aam
mov
mov
lods
lahf
sub
in
lahf
test
push
mov
xchg
mov
mov
sbb
push
fcoms
adc
into
xchg
shlb
or
add
shrl
leave
rclb
push
pop
es
mov
fsubrs
je
pop
lcall
mov
testl
sub
mov
rolb
cld
cmp
int
add
sbb
adc
sbb
in
ja
sub
push
or
aas
sub
jno
or
mov
sub
or
mov
mov
push
test
test
adcl
push
adc
shl
addl
jge
jbe
orb
xchg
iret
or
pop
mov
in
xchg
mov
and
movsb
out
inc
jns
daa
mov
pushf
jmp
jl
add
adc
loop
icebp
pop
pop
lods
jp
repnz
pop
xchg
mov
dec
cld
mov
push
divb
jbe
mov
mov
sub
jae
pop
xchg
aam
das
push
mov
mov
push
jge
xlat
stos
loopne
jp
mov
jl
popl
jnp
mov
stc
adc
ret
les
ret
dec
outsl
iret
and
mov
std
xorb
and
mov
push
push
mov
mov
cmp
jecxz
pop
lods
xchg
icebp
xor
add
shrb
pop
pusha
sar
loop
dec
repnz
jb
mov
mov
test
fstpt
movsl
lock
cmc
mov
jno
add
add
mov
cwtl
xorb
inc
enter
and
sbb
dec
or
out
dec
jle
jns
outsb
jb
jl
sbb
sbb
xchg
mov
subb
fs
add
push
add
add
arpl
pop
inc
cmp
lahf
dec
fimuls
xchg
pop
mov
movsb
negb
jmp
rorb
xlat
push
in
adc
push
fs
mov
das
nop
dec
sub
lods
das
sbb
jp
jbe
sbb
sub
and
shlb
ljmp
fcmovbe
pop
ja
xor
movsb
add
pop
sub
inc
sahf
or
subb
lods
test
into
sbb
adc
rol
push
xor
xor
sbb
in
mov
xor
xchg
sub
hlt
xchg
push
push
pop
clc
mov
pop
cwtl
push
insb
adc
lea
insb
pop
stc
xchg
cmc
xchg
cmp
mov
add
outsl
add
mov
dec
and
dec
outsb
adc
popa
mov
push
in
pop
adc
push
fst
mov
xchg
jno
mov
and
sub
mov
sahf
daa
scas
fdivrs
leave
mov
movsl
sbb
or
cmp
negl
pop
cmp
imul
std
pop
scas
sub
lahf
jbe
cmp
scas
jne
ss
or
cwtl
or
mov
jae
ret
rolb
push
jns
sbb
mov
jnp
push
mov
push
pusha
jmp
addr16
out
std
test
hlt
jmp
in
xlat
push
pop
inc
push
fnstcw
xchg
xlat
mov
cmp
add
addr16
push
push
mov
add
mov
add
xor
cs
inc
out
mov
push
jns
jbe
out
cmpl
add
icebp
xor
inc
nop
es
scas
insl
add
sub
dec
xor
sub
int3
jg
ret
pop
sub
xchg
sub
scas
dec
add
push
aaa
pop
jbe
int3
cmpsb
lods
dec
popf
push
dec
jmp
cmp
imul
or
daa
lcall
popa
cmp
xor
xchg
cmc
gs
insb
inc
fidivrs
push
mov
mov
imul
shrb
pop
sub
mov
mov
and
or
mov
fstl
and
inc
clc
xchg
pop
mull
loopne
aam
mov
or
leave
and
and
xor
xor
dec
jb,pn
ss
xchg
outsb
cmp
sbb
cmp
inc
mov
lds
aas
or
push
xor
into
sbb
imul
lea
fnstsw
inc
leave
repnz
push
insl
inc
fs
or
repnz
mov
xor
or
cltd
jg
sarl
sbb
out
push
shrl
jg
push
and
int3
bound
iret
mov
lods
fidivl
lods
cmp
and
push
sahf
mov
cltd
jmp
xchg
int3
lcall
or
fldenv
orl
xchg
dec
adc
and
lods
test
cmc
out
dec
mov
in
lds
push
xor
cmpsb
into
inc
aad
push
insb
int3
xor
mov
aad
ret
adc
bound
mov
and
hlt
std
imul
mov
pushf
data16
cmp
ds
sarb
into
mov
mov
inc
lahf
test
sarb
adc
rorb
out
lock
loope
pinsrw
inc
cmp
mov
mov
adc
outsl
lock
dec
jne
and
pop
sbb
cld
mov
jg
mov
adc
mov
and
sbb
imul
subb
jecxz
ret
aam
movl
mov
daa
das
and
xchg
ret
or
sbb
adc
ljmp
mov
xor
inc
cmp
lcall
push
scas
test
pop
sbb
jmp
xchg
or
inc
adc
mov
xchg
jo
mov
enter
pusha
iret
jne
iret
stos
cltd
and
xchg
js
cmp
and
adc
mov
mov
add
mov
xor
lret
sbb
insl
xchg
mov
ja
jecxz
fdivrl
push
cwtl
jge
call
hlt
sbb
sbb
push
negb
test
aam
into
pop
out
adc
lret
loope
call
pusha
adc
fld1
push
je
pop
push
nop
xor
loopne
or
pusha
test
xor
add
cld
pop
jecxz
sub
xor
or
pop
pop
js
loope
jae
arpl
mov
add
test
or
test
pop
sub
mov
adc
and
cmp
push
push
fadds
and
ss
shll
push
scas
mov
adc
mov
mov
xchg
in
or
mov
cli
and
jbe
repz
jp
adc
inc
cld
inc
scas
ret
pop
test
sbb
sti
mov
fwait
test
sub
int
jae
pusha
add
xchg
into
imul
stc
out
stc
in
xor
or
jns
mov
test
cli
and
testl
sub
pop
enter
in
inc
or
pop
lcall
xchg
out
sub
dec
or
ret
sbb
lcall
push
into
out
xchg
sub
mov
and
repnz
push
xor
inc
push
push
fadd
jae
cmpsb
js
test
enter
inc
clc
daa
adc
mov
orb
pop
sbb
inc
mov
push
mov
and
xor
fs
adc
xchg
sub
jge
pop
adc
ret
rcrl
push
lcall
sbb
into
out
sbb
daa
add
shll
push
sub
add
jne
sub
data16
in
dec
arpl
mov
sub
aaa
add
loop
inc
mov
dec
les
je
mov
clc
cld
push
xchg
mov
sbb
hlt
xchg
fbstp
mov
or
in
loopne
add
lods
cmc
xlat
int3
insl
cmp
mov
cmc
mov
push
adc
xchg
lds
imul
repnz
push
push
adc
mov
pop
clc
jle
movsb
movsl
mulb
pop
fdivrp
aam
sti
fimuls
mov
sti
out
jo
test
jecxz
pop
ret
mov
arpl
loope
push
cs
push
xlat
jge
mov
jecxz
mov
sbb
xor
iret
or
sub
fs
pop
cmp
test
or
xchg
andb
in
addl
bound
fstpl
out
jmp
mov
ljmp
out
fsubl
rorb
or
cmp
fucom
or
fidivs
mov
jp
aam
aam
pop
ljmp
arpl
dec
insl
mov
popf
lret
mov
pop
and
add
jns
xor
mov
ds
test
fimull
xchg
std
mov
pushf
add
cli
mov
idivb
and
cmp
xchg
pushf
pop
push
push
lret
mov
and
inc
xchg
rcrl
movsb
and
mov
cmp
test
add
add
pushf
cmc
xchg
pop
cltd
call
xchg
outsl
sahf
jne
clc
loop
shll
inc
jecxz
jecxz
aaa
movsl
dec
incb
ljmp
sbb
rorb
inc
inc
add
push
jns
int
mov
test
and
in
out
sub
movsl
enter
xor
or
sar
push
rcll
jae
xor
ljmp
popf
aas
mov
cmp
dec
jnp
imulb
fs
jle
inc
dec
and
add
mov
jecxz
xor
outsl
dec
jo
push
xchg
stos
insb
mov
movsl
dec
lock
mov
cwtl
loope
inc
xlat
and
ror
mov
push
test
hlt
mov
rolb
lods
daa
inc
sbb
jmp
movsl
pop
jmp
mov
cmp
inc
test
mov
push
add
xor
mov
rclb
aam
cli
maskmovq
testl
cmpsl
ret
jno
sub
or
std
dec
mov
xchg
in
in
pop
pop
fs
mov
jns
or
imul
push
jae
addr16
mov
pushf
or
imul
inc
lds
jge
dec
pop
stos
cmc
push
mov
fimuls
jmp
stos
push
loopne
sub
mov
lds
lretw
and
into
jecxz
pusha
pop
mov
xor
adc
into
xor
xchg
repz
sarb
sbb
dec
cli
cmp
push
jae
mov
in
out
xor
mov
mov
sub
scas
out
ja
push
mov
xchg
mov
mull
nop
lds
hlt
pop
hlt
add
sub
mov
pusha
mov
dec
push
push
xchg
in
imul
or
mov
xor
ja
idivb
xor
out
mov
shll
jbe
test
mov
pop
repnz
shrl
cli
inc
xor
and
icebp
lock
out
movsl
cld
inc
push
sbb
xchg
std
outsl
mov
push
loope
dec
inc
cmp
xor
pop
or
and
pop
negl
cmp
fildll
dec
cmp
mov
bts
mov
push
xchg
repnz
std
mov
popf
imul
sahf
rorl
stos
push
imul
jno
cmp
jmp
jo
mov
push
adc
scas
stos
or
dec
jns
mov
jae
mull
ret
arpl
pop
push
gs
xchg
add
lds
sbb
push
or
int
fistl
sarl
cmp
mov
test
mov
les
loopne
adc
xchg
data16
inc
sub
add
jo
adc
stc
dec
and
push
int
lods
dec
dec
dec
mov
out
cmp
stc
adc
mov
jp
or
sub
or
cmp
fs
rcr
pusha
lock
add
cld
fnstcw
add
sub
out
sahf
shl
call
popf
mov
fisttpll
stos
insb
cld
and
mov
shlb
cli
fcmove
xchg
sub
jge
jmp
sub
in
pop
sub
push
outsl
mov
js
cmp
fsubs
xor
roll
cmc
mov
push
cmp
xchg
dec
dec
jmp
jne
and
cmp
leave
call
mov
and
cmp
pop
out
insl
int
push
sub
mov
sti
fldt
or
mov
mov
adc
pusha
or
stc
inc
shr
sahf
test
dec
and
inc
jg
mov
je
test
or
dec
test
aaa
arpl
imul
pop
jmp
notl
stos
mov
sub
aas
jle
mov
mov
jle
sbb
mov
bound
push
push
aad
dec
xor
mov
aas
stos
jns
je
stos
xor
pop
sub
push
dec
xchg
mov
fisttpl
into
dec
jle
pop
nop
fnstcw
jl
mov
jge
pushf
sbb
loop
fldcw
add
xchg
bound
inc
out
repz
sbb
jp
imulb
mov
mov
gs
aas
adc
das
sahf
stos
ljmp
stos
lret
cmc
xor
scas
push
mov
rcrb
lcall
mov
lahf
cmp
jg
ret
mov
push
mul
pop
int3
xchg
mov
orl
mov
or
inc
xor
mov
ljmp
cs
iret
adc
xchg
in
outsl
lahf
jbe
pop
popa
xor
push
mov
call
jb
cwtl
das
sub
test
loopne
shrd
sbb
lret
mov
add
aaa
ss
sbb
nop
mov
dec
xor
cmp
pusha
cwtl
inc
push
pop
cmp
mov
and
pop
stos
fldl
adc
mov
sbb
dec
sub
lret
daa
repnz
cltd
inc
mov
test
pop
aam
mulb
es
push
push
sbb
lcall
mov
inc
sti
aaa
dec
lea
add
jnp
ljmp
sbb
push
pop
gs
or
adc
mov
xor
xchg
push
fs
jmp
push
inc
enter
in
mov
mov
mov
mul
xor
inc
or
add
mov
push
mov
mov
aam
mov
pop
xorl
sbb
lods
lds
int
jge
fwait
and
inc
dec
pushf
andl
cmp
addr16
sub
push
xlat
repz
dec
lods
jbe
inc
and
fcmovu
adcb
out
jecxz
sbb
cmc
daa
adc
mov
jno
dec
out
push
inc
mov
and
add
loope
daa
jp
push
mov
sub
pop
sub
cmpl
and
call
adc
inc
addr16
bound
ss
sti
cmp
mov
cli
inc
add
fwait
adcb
sbb
mov
sub
and
sub
pop
mov
or
fstpt
fsubrp
stos
dec
test
push
xchg
repnz
fst
stos
outsl
out
jno
inc
sub
sbbl
out
notb
movsb
testb
cmpsb
push
mov
adc
lret
lahf
inc
cmpsb
mov
jge
pushf
ss
xchg
insl
in
jecxz
xor
dec
shrl
cltd
hlt
push
out
rclb
roll
pop
xor
movsb
jle
pop
adc
cmp
push
sbb
ja
sub
rcrl
inc
mov
leave
fsubs
mov
incl
imul
jne
pop
js
mov
cmp
movsl
js
inc
cmpsb
sub
bound
jmp
push
sahf
adc
jb
mov
jge
jge
mov
loopne
inc
and
dec
and
and
cmp
mov
jmp
mov
cld
cmp
call
dec
jne
das
push
push
mov
mov
and
jp
in
cld
cmp
or
fwait
cmpsb
cwtl
lret
xor
ficoms
inc
ret
insb
clc
mov
push
fnstenv
mov
shr
rcl
dec
xchg
inc
int
in
inc
adc
dec
jnp
nop
cmpsl
rcrl
lahf
push
or
sti
cs
aam
stos
push
fdivrs
xchg
in
or
adc
sub
cmc
pop
dec
jae
sbb
push
push
stos
rorb
adc
xchg
into
inc
xchg
lock
sub
stc
arpl
mov
pop
imul
roll
dec
sbb
stc
inc
ja
mov
je
add
outsb
mov
xor
cli
lcall
mov
sbb
je
jnp
mov
test
je
pushf
inc
mov
mov
inc
stc
loopne
in
mov
out
in
cmp
jecxz
lret
popa
lods
in
pop
mov
fmull
ret
jb
pop
lret
sbb
das
testb
incb
or
dec
mov
pop
loop
or
test
inc
mov
sub
cwtl
nop
adc
ja
push
lret
out
repz
mov
scas
pop
shll
call
xchg
cmpl
push
call
jae
ret
cmp
cltd
push
hlt
sub
mov
mov
or
xchg
scas
sahf
mov
or
sbb
pop
fnsave
push
push
xchg
dec
push
cmp
mov
je
sti
shll
lds
lahf
ret
ss
andb
leave
out
mov
testl
fisubs
sbb
fs
cmp
add
sbb
dec
xor
cmp
pop
mov
daa
jb
dec
xlat
loop
mov
dec
xchg
xchg
or
std
and
adc
pop
sbbb
sbb
pop
adc
stc
repz
xchg
test
jns
loope
or
or
cmp
sub
pushf
div
add
mov
mov
loop
outsb
repnz
jo
sbb
nop
or
sub
xchg
xor
clc
int3
data16
test
cmc
xchg
mov
int
mov
sbb
push
mov
aad
loop
std
imul
sub
lret
arpl
push
dec
jmp
rol
popa
rcrb
xchg
push
dec
add
push
jo
pop
outsb
lahf
sbb
inc
add
pop
out
and
je
inc
mov
in
add
mov
sbb
mov
mov
mov
mov
mov
xor
inc
pop
es
repnz
and
bound
repnz
pushf
ret
out
add
lret
stos
cmp
inc
orl
ret
inc
lods
push
out
pop
cmp
cli
aaa
or
sbb
nop
sti
push
pop
stos
int3
in
mov
fs
add
jg
jmp
mov
addr16
xchg
inc
sbb
jp
shll
pop
sub
repz
fwait
loope
icebp
jno
or
jge
scas
mov
adc
inc
mov
pop
scas
bound
das
out
test
mov
mov
rcll
div
mov
dec
fnsave
mov
mov
mov
xor
leave
mov
cmp
rcl
mov
and
mov
xor
fdivrs
jno
shrb
mov
adc
imul
mov
jmp
mov
mov
fld
es
icebp
and
cmp
and
scas
mov
fisubs
pop
std
sub
aad
mov
out
push
loop
js
xor
sub
pop
scas
out
loopne
sahf
jge
or
push
hlt
das
out
xor
adc
sti
fcmovnbe
push
inc
cmc
adc
fwait
or
or
jl
ss
roll
insb
dec
dec
push
dec
or
dec
nop
and
icebp
push
ret
adc
cmc
fs
mov
cs
nop
pop
cltd
pop
push
xor
and
and
rcll
fwait
sub
push
dec
sahf
inc
mov
add
fwait
adc
add
fstps
cmp
pop
mov
sub
and
xor
fcoml
push
cwtl
daa
stc
cmp
stos
sbb
je
lods
xor
rcrb
inc
das
daa
and
xchg
jecxz
xchg
es
fnstcw
fdivrp
in
xchg
pop
ds
jl
pop
mov
pop
pop
mov
cmp
test
cmpsl
in
and
mov
outsl
inc
movsb
pop
mov
xor
orl
mov
jmp
jo
and
mov
ljmp
aas
ret
jp
cmpsb
inc
lcall
loop
imul
cmovge
cmpsb
mov
xor
cmc
rcll
repz
rclb
fbstp
out
mov
jbe
add
dec
test
in
lcall
ret
shl
sub
xor
sbb
sub
inc
popf
push
or
in
push
outsl
imul
sub
sti
dec
outsb
lock
push
push
xchg
inc
les
rolb
sbb
scas
mov
jge
mov
scas
xor
cmp
mov
lods
out
jb
jg
pop
ret
cmpsl
push
xchg
or
and
ss
call
jle
sub
fcomps
cmp
xchg
outsl
rol
mov
cld
stc
aaa
mov
add
mov
push
clc
js
push
das
xchg
outsl
nop
es
ret
inc
cwtl
mov
push
incl
cmc
nop
mov
std
bound
xor
push
lret
jnp
jge
mov
int
mov
pushf
stos
mov
or
mov
rdpmc
out
and
cmp
dec
xchg
jae
xchg
mov
inc
ret
std
stos
inc
xor
arpl
pop
add
sbb
jns
push
je
inc
and
or
call
mov
aas
sbb
mov
sub
daa
push
shrb
cmp
imul
push
push
insb
or
outsl
cmp
jae
mov
inc
jbe
xchg
int3
jae
icebp
sti
adc
loope
test
stos
mov
frstor
ret
mov
push
out
cmc
inc
and
inc
lods
pop
out
ljmp
fiaddl
xor
add
out
out
sbb
sbb
xor
xor
pmulhuw
stc
dec
dec
cmc
xchg
cs
loopne
mov
fcomi
popf
addr16
fmuls
stos
adc
lahf
jp
or
pop
mov
mov
or
mov
and
add
dec
outsl
ja
aam
test
ljmp
lahf
loope
out
outsl
add
addr16
mov
cltd
movsl
fsubl
jecxz
dec
and
jb
hlt
sbb
mov
iret
or
xlat
cmpsl
pushf
jne
inc
test
popf
push
ss
inc
subb
addb
jbe
jl
mov
andb
lea
ss
add
jge
mov
xor
lea
xchg
xchg
rcrl
jnp
clc
jl
adcl
dec
in
inc
loop
andb
push
sub
push
loope
ret
int
dec
and
shl
inc
xchg
mov
xor
imul
in
mov
or
testl
mov
cmpsb
cmp
jns
mov
inc
and
arpl
popf
dec
sti
push
mov
jbe
adc
push
or
jge
movsb
ret
sub
fbld
sbb
pop
push
xor
ljmp
jnp
scas
mov
xchg
frstor
sbb
insl
add
pushf
aaa
mov
mov
mov
mov
in
jmp
xor
xchg
out
in
adcb
mov
movsl
inc
test
scas
and
movsb
add
pop
push
mov
xchg
fdivs
shlb
sbb
sar
inc
xchg
adc
and
test
jg
cli
fsubrp
shrl
mov
add
popa
clc
jecxz
sysret
mov
icebp
shlb
xchg
loopne
ds
fs
push
sub
loopne
rol
push
xchg
data16
lret
mov
mov
xchg
pop
and
fwait
data16
stos
cmp
push
jge
lds
xor
es
and
test
in
mov
inc
lahf
into
dec
sbb
sub
push
jne
aad
rcrl
sub
scas
pop
and
xlat
stc
ja
inc
and
nop
xor
test
xor
enter
push
ljmp
and
ffree
push
movsl
stos
mov
jle
out
cmp
test
outsl
xchg
xchg
aas
sub
push
mov
xor
std
imul
xlat
lock
aam
inc
fwait
dec
push
jo
outsl
xchg
andb
ret
ljmp
mov
cltd
lret
mov
pop
scas
push
mov
arpl
or
mov
adc
sbbb
loopnew
repnz
sub
mov
js
mov
jno
outsl
in
outsl
pop
and
fsubrs
pop
pushl
inc
idivl
mov
lds
daa
ss
sarl
repz
inc
jno
int
adc
negb
arpl
cmp
pop
dec
imul
cmpsl
mov
xchg
repnz
lea
mov
lods
pop
das
mov
jno
mov
arpl
sub
sbb
in
mov
xchg
cmp
cmc
mov
cmp
adcb
adc
rolb
jbe
je
sbb
jo
sub
cmp
out
or
jnp
ja
test
dec
inc
mov
lds
push
je
jp
mov
fnstcw
push
or
mov
pop
dec
data16
lods
cs
sbb
pop
andb
popa
data16
int3
in
pusha
push
xchg
shrl
ja
pop
xor
pop
daa
jp
out
xorl
mov
fistl
sub
push
gs
shll
jnp
out
mov
or
jmp
and
cltd
scas
mov
sbbl
out
out
ja
cld
push
and
lods
adc
je
sub
inc
push
lods
adc
mov
fistpll
lea
sbb
xchg
iret
enter
andl
stos
cmpsb
sbb
mov
mov
in
cltd
mov
outsb
lret
xchg
pop
test
cmpsb
mov
xchg
in
inc
cmc
sbb
leave
lcall
mov
mov
push
pop
jmp
dec
push
bnd
test
lret
out
cli
pushf
rol
loope
das
push
mov
jmp
test
aas
cmc
cwtl
loopne
pop
jno
addr16
repz
cmpsl
imul
adcl
bound
and
bnd
inc
xchg
mov
mov
add
mov
push
cmpsl
mov
stos
xor
dec
mov
movsb
outsb
cmp
sub
in
push
add
scas
xchg
and
test
ja
fildl
addr16
and
movsl
mov
adc
xor
and
mov
cmp
pop
xorb
xlat
mov
push
out
cmp
das
add
dec
out
cmp
add
lret
inc
inc
clc
seta
push
lods
and
and
jb
out
push
daa
cmp
ror
lahf
mov
pop
cmp
mov
sarb
bound
and
pop
pop
dec
xor
loopne
int3
xor
jg
pop
data16
xor
fucom
leave
bound
movsb
pushf
and
xchg
xchg
push
dec
aam
pop
sar
dec
sub
testb
in
sub
inc
rcl
dec
jl
es
pop
adc
jge
mov
fidivs
bsr
mov
dec
cld
adc
imul
test
mov
in
and
sti
push
sbb
out
popa
or
and
testl
fnsave
dec
ljmp
mov
or
call
or
shlb
mov
mov
lods
leave
in
out
jge
cmc
lods
xor
mov
jp
inc
fwait
pop
test
jae
dec
push
adc
loope
and
lea
xchg
repz
sarl
pop
cmp
push
out
stos
mov
pop
jnp
fdivl
xor
mov
arpl
mov
cvttps2pi
inc
or
inc
sbb
mov
and
cmp
fdiv
or
fimuls
xor
cmp
rclb
lods
cmp
fwait
pop
pop
mov
neg
fildll
fimull
enter
fcmovnu
mov
or
lret
cltd
adc
jno
lds
hlt
icebp
mov
dec
inc
les
pop
push
dec
push
dec
cmp
and
rcrl
adc
mov
inc
jmp
sar
daa
pushf
mov
adc
mov
jecxz
movsl
mov
fisubl
bts
mov
dec
push
ficoms
sbb
sub
aam
mov
shrl
sarb
nop
sti
iret
test
inc
int3
rorl
fisttps
jp
cmp
and
notl
aad
sbb
or
iretw
or
add
addr16
jae
and
push
int3
iret
aad
dec
imul
out
mov
adcb
test
insl
es
mov
outsl
push
jmp
cltd
dec
lcall
ss
sbb
ret
cmp
bound
and
popf
jno
push
ret
xchg
push
inc
add
shll
shl
and
inc
sti
gs
aam
mov
insb
lea
jo
pop
in
sub
or
test
jp
mov
jg
xor
test
pop
mov
out
add
cmpsl
xlat
into
inc
mov
je
adc
mov
les
rcr
lock
push
insl
cltd
loope
fistpll
mov
jge
sti
jmp
arpl
sbb
xor
pop
add
inc
and
cli
pop
fwait
inc
repnz
adc
in
jg
or
mov
dec
push
cmp
sarl
div
jmp
rcrb
push
lret
ret
call
add
cmc
stos
xchg
movsl
lods
int3
lret
icebp
pop
rolb
arpl
iret
icebp
adcb
movsl
lcall
and
ja
push
out
jp
xchg
push
push
cwtl
notb
sbb
cmp
sti
je
test
adc
adc
pop
test
mov
push
cmc
in
cmpsb
lcall
add
lret
sbb
shlb
sub
jp
lret
jae
out
adc
ss
mov
or
sbb
push
inc
dec
aaa
mov
fistl
fst
mov
in
aad
jecxz
adc
cmp
movsl
sub
inc
rcl
ds
xchg
xlat
hlt
or
aam
inc
dec
mov
inc
popa
cmp
fldl2e
outsb
xlat
and
shll
loop
in
pop
or
mov
dec
out
mov
mov
es
mov
aam
mov
ficoml
xchg
ja
add
add
inc
pop
sarb
push
hlt
fmull
add
jnp
pusha
sti
dec
adc
jb
test
lods
lret
xchg
jo
cld
cmc
pushf
inc
roll
push
shll
lahf
pop
push
or
ss
icebp
gs
push
pop
ret
cmp
cmc
push
add
cmpsl
shll
in
popa
hlt
cs
notb
cmp
xor
fisubl
adc
stc
mov
or
cmp
push
pop
pushf
add
and
imul
cli
sub
shr
jb
iret
stos
inc
stc
data16
mov
jle
data16
aas
arpl
lret
jmp
adc
aas
icebp
test
sbb
scas
push
inc
sbb
fisttpll
out
jg
jg
add
xor
int3
movsl
jne
into
inc
dec
sub
xor
aas
cmp
xchg
mov
ja
push
pop
adc
cwtl
fidivs
mov
out
mov
xchg
fmuls
stc
stos
es
stos
std
lods
adc
jnp
sbb
pushf
cwtl
xchg
daa
mov
jae
pusha
stc
xor
mov
fwait
jg
aam
enter
inc
mov
push
mov
imul
fwait
xor
jge
mov
pop
mov
rol
roll
fwait
hlt
fwait
and
xor
sbb
leave
sub
loope
lods
pop
inc
or
pusha
in
popa
test
push
mov
fisubrs
or
push
mov
stos
test
sbb
cwtl
cmp
cmpsl
mov
in
adc
pop
pop
sub
xchg
add
and
cmp
dec
cmp
and
jge
sub
cwtl
loope
inc
and
mov
cmp
and
xchg
jb
test
xchg
adc
cmp
xchg
test
lcall
test
in
es
sbb
repnz
lods
lea
sbb
xlat
push
mov
sbbb
rclb
jmp
inc
sub
jae
add
jecxz
out
es
jnp
mov
mov
std
aas
mov
xchg
fisttpll
loopne
loope
testb
jno
or
adcl
pop
addr16
aas
mov
cs
mov
sti
shrb
dec
and
sbb
or
sahf
sahf
lods
pop
popf
pop
xchg
stos
inc
jp
shrl
mov
aad
out
push
mov
daa
stc
or
inc
ss
mov
xlat
inc
arpl
rcll
out
lock
mov
outsb
das
lahf
jecxz
sbb
mov
dec
incl
adc
or
cmp
adc
lock
jo
jg
mov
jns
int
fdivl
mov
rcrb
rol
sub
xlat
or
cmpl
jl,pn
shlb
inc
das
push
les
fiaddl
repz
in
xrelease
mov
sarl
stc
mov
into
sbb
mov
cwtl
or
jns
push
fnstsw
rol
mov
rorl
ret
pop
jg
push
int
outsb
imul
push
lea
add
sub
jg
addr16
addb
and
dec
jne
in
pop
stos
mov
lcall
mov
jbe
lret
mov
popa
insb
mov
test
xor
aas
les
rcrl
push
mov
or
es
fwait
arpl
mov
test
dec
lahf
pop
fcom
jae
lcall
mov
pop
mov
mulb
inc
test
or
loopne
add
data16
inc
sub
mov
pop
add
inc
pop
daa
repnz
xchg
ds
jo
or
mov
mov
cmpb
in
lret
mov
xchg
fmuls
cli
sahf
inc
xor
pushf
fcomps
jl
jno
or
adc
cmovl
jge
mov
cmp
push
imul
pop
cli
add
idivb
inc
add
jmp
jmp
out
movsl
test
mov
sub
hlt
pop
gs
bound
pop
mov
sbb
wrmsr
sbb
sub
adc
arpl
sbb
inc
je
ret
rorl
loope
mov
push
lods
sbb
ss
movb
push
pop
in
pushf
xchg
fcmovnbe
data16
incl
jl
cli
push
pop
aas
ja
cld
daa
cmp
cmp
sub
icebp
nop
movsl
inc
das
jae
test
ret
xor
xchg
nop
jo
cmp
scas
icebp
jno
and
pop
mov
sarl
xchg
pop
imul
cmp
es
scas
inc
jecxz
mov
pop
push
push
fistl
int3
cmpsb
js
xchg
mov
imul
call
dec
mov
stos
pop
cmpsl
test
roll
adc
cmc
cwtl
adc
jnp
pusha
cmp
mov
xchg
inc
notb
jo
test
push
out
test
sbb
add
cs
sub
xor
daa
inc
arpl
push
mov
cmp
aas
adc
sti
dec
add
or
dec
pushf
bound
jbe
mov
jg
adc
sub
mov
adc
js
loop
shl
xor
jb
inc
lahf
gs
dec
les
and
cmp
leave
div
xor
push
jne
sbb
jne
nop
daa
push
inc
shlb
mov
mov
dec
adc
loope
enter
packuswb
adc
xchg
jae
xchg
ss
or
dec
jle
xor
test
bound
pop
adc
jecxz
inc
lret
adc
cld
push
dec
ss
push
push
shlb
ret
sub
lock
aas
add
in
add
outsb
pop
add
or
adc
xlat
pusha
out
dec
dec
cmpsl
dec
leave
fcoml
mov
jne
add
shr
fmull
cmpsb
sub
jecxz
dec
jno
jg
rcll
sub
push
inc
jbe
in
mov
ss
loope
xor
and
sub
or
xchg
push
andl
xchg
jp
pusha
xlat
mov
fimull
js
xchg
cld
jno
pop
mov
adcl
repz
daa
pcmpgtd
lods
test
lcall
insl
icebp
fisttps
cltd
ficoml
or
ret
add
sub
les
stc
fs
cld
mov
fiadds
cmp
pop
popf
mov
sbb
lea
clc
inc
in
and
push
mov
push
cld
inc
fwait
je
stos
or
sbb
lret
push
mov
cwtl
mov
loope
sti
mov
mov
aas
pop
pop
dec
sbb
cmp
fidivrl
jmp
mov
jnp
popf
xchg
fnstcw
xrelease
stc
in
jb
sbb
js
lods
std
lods
mov
ja
inc
xchg
lods
sbb
add
je
sbbl
mov
gs
or
cmp
ret
andl
rorl
mov
insb
mov
cmp
mov
clc
dec
add
pop
sub
mov
fnstsw
iret
hlt
cmp
rcrl
arpl
hlt
push
shrl
call
pop
add
out
pop
pop
pop
cwtl
mov
lret
dec
xor
fwait
inc
sub
sbb
adc
cmp
xchg
and
mov
es
mov
pop
mov
aaa
inc
enter
push
loopne
push
xor
bound
adc
sub
fisubs
or
imul
imul
movsb
ss
xor
mov
ja
jne
mov
mov
sub
mov
push
fidivl
cmp
sbb
dec
hlt
pop
xor
sub
outsl
xchg
in
fstl
adc
int
inc
pop
xor
jb
cld
negl
jbe
or
fs
or
dec
fcmove
aad
jecxz
lods
adc
pop
nop
xchg
clts
xor
mov
ja
ret
sub
das
lds
xchg
mov
filds
mov
cmc
shr
jl
pop
and
sub
jno
test
testb
push
in
inc
divb
movsb
stos
ret
movsw
incl
push
dec
loop
lds
jge
rcrb
nop
mov
mov
inc
mov
dec
cwtl
jns
subl
pop
aaa
cmpb
lcall
sbb
sbb
jbe
addr16
xchg
push
dec
lea
xor
add
inc
jmp
cs
shll
sbb
ret
inc
call
scas
movsb
loope
icebp
mov
adc
add
mov
or
sub
and
mov
ja
out
call
out
jge
pop
pop
sbb
xor
fsubr
leave
je
dec
pop
sahf
pop
xor
jns
mov
push
pusha
popf
push
cmpsl
mov
fstpl
push
jp
jbe
push
pop
mov
and
mov
fisttpl
mov
and
inc
bound
or
repz
cli
push
inc
xlat
outsb
and
repnz
cmp
mov
bound
dec
shl
loopne
xrelease
xor
ss
repz
ds
outsl
jg
mov
data16
mov
xchg
iret
fsts
push
scas
xchg
add
mov
mov
ret
cmpb
pop
mov
add
add
sub
imul
arpl
scas
or
add
mov
data16
out
push
jecxz
ss
out
scas
or
orl
or
jmp
cmp
sub
inc
popa
fsts
mov
and
mov
enter
inc
push
sub
jp
add
scas
lcall
out
mov
addr16
std
pop
mov
and
lcall
cmpsl
shrb
popf
out
adc
dec
pop
scas
aaa
rep
sbbb
mov
jge
cmc
cmpsb
push
mov
mov
inc
pop
xor
or
push
addr16
stc
gs
lock
cs
pop
insl
shl
stc
dec
dec
jmp
jle
fbld
aaa
nop
shr
or
cmp
or
lea
and
maxps
xchg
aas
mov
cmp
lock
in
mov
mov
push
aam
mov
dec
inc
lret
fsubs
and
or
jecxz
loop
jp
mov
adc
xlat
loope
inc
mov
bound
dec
xchg
mov
dec
or
hlt
lock
mov
jo
ds
ret
notl
cmp
mov
jb
xchg
pop
mov
dec
loop
cmc
push
xchg
int3
sub
push
fs
andl
mov
inc
sbb
inc
hlt
ss
mov
add
das
pop
fwait
iret
jne
pop
inc
popf
test
popa
inc
ja
mov
adc
jl
loop
mov
add
inc
dec
or
or
sbb
in
fisubrl
enter
jg
sbb
sbb
iret
mov
push
cli
test
lret
mov
cli
test
mov
cs
inc
mov
adc
stos
adc
cmp
mov
enter
cwtl
rol
sub
cmp
jl
jg
jl
mov
in
mov
outsl
clc
cmp
jl
icebp
cwtl
dec
mov
dec
mov
fstps
xchg
mov
add
xor
sub
lahf
jge
mov
pop
ret
mov
in
pusha
iret
in
pop
cs
inc
and
sub
insl
and
xchg
pop
mov
cmpsl
fs
sub
inc
inc
das
push
pop
mov
popa
adc
inc
xchg
int
xchg
or
pop
add
adc
aam
sarb
movsl
add
cmp
jecxz
mov
jmp
int3
test
push
cmc
xchg
arpl
hlt
lds
mov
shr
or
lret
jg
std
or
mov
fldt
cmp
call
fistps
cmp
mov
fstpt
aam
fs
ret
mov
mov
lret
mov
stc
adc
popf
loopne
mov
pushf
adc
test
imul
jle
leave
xchg
jge
fildll
pop
insb
mov
jge
imul
or
lds
loop
lret
pop
out
or
jge
scas
ss
imul
cli
out
call
int3
sbb
jp
and
mov
shll
lods
inc
insb
inc
add
mov
dec
sbb
lods
sub
mov
lods
xor
mov
and
jne
pusha
out
stc
mov
lods
or
xor
xchg
negb
cmp
mov
rolb
mov
bound
lahf
jg
pop
div
jae
sbb
ror
push
out
mov
adc
jl
xchg
jmp
push
fiadds
aas
je
popa
inc
mov
inc
shrl
or
jns
mov
push
pop
cli
jo
arpl
add
aad
dec
mov
loop
push
nop
adc
or
cld
test
stc
inc
or
das
pusha
fsubrs
push
sbb
popa
xchg
push
add
popa
xchg
pushf
cmp
insl
das
out
mov
inc
sahf
into
iret
xchg
mov
fnsave
mov
mov
mov
jmp
mov
sub
xlat
xchg
sbb
mov
fs
xchg
mov
mov
xor
xchg
sbb
enter
mov
icebp
cltd
movsb
inc
test
pop
rolb
inc
rcl
push
adc
sub
pop
iret
jae
or
mov
addl
lock
or
adc
sub
jge
cmp
lea
je
xchg
mov
fidivl
inc
out
cmp
pop
jae
push
fbld
jecxz
das
jae
data16
mov
test
in
inc
inc
mov
add
loop
and
inc
pop
mov
mov
fisubs
mov
shl
pop
scas
shrl
push
clc
jecxz
das
jl
in
pusha
xor
lret
fsubrp
ret
test
cmp
dec
xor
push
mov
in
xchg
popl
aaa
fcomps
push
lods
xor
jno
cmp
cmp
in
adc
inc
andb
in
pop
aad
inc
pop
push
fcomps
push
scas
xchg
mov
inc
adc
rcrb
dec
sub
pop
lret
nop
inc
into
or
mov
sbb
dec
sbb
mov
fsubs
xor
mov
dec
mov
cld
stos
dec
dec
gs
pushw
add
in
ds
dec
xor
shll
and
add
lock
dec
cmp
pop
push
cmp
or
lea
popf
movsb
add
popa
xchg
xlat
push
insl
jne
out
adc
jg
dec
mov
das
jne
divb
cmc
push
repnz
stc
les
mov
mov
out
xor
das
adc
cmpsl
fmull
scas
loopne
or
fwait
ljmp
lret
lea
aam
mov
je
fcmove
sbb
faddl
inc
mov
loop
decb
gs
out
ret
sub
std
add
mov
mov
enter
xchg
xor
inc
sub
orb
pop
push
lcall
cmpsb
gs
outsl
adc
hlt
add
fcompl
push
xchg
and
hlt
adc
outsb
or
jecxz
push
or
not
icebp
mov
dec
and
test
popf
shr
loopne
or
fdivrl
push
mov
stos
xchg
mov
loopne
in
cs
sbb
cmpsl
neg
push
into
stos
mov
lret
adc
test
inc
cmp
lret
in
jb
inc
out
aaa
xor
cmp
cmp
gs
arpl
push
cmp
push
fs
mov
dec
cmc
pop
or
jge
repnz
inc
xchg
xchg
jp
in
lret
jge
or
mov
pop
jno
sti
mov
push
xor
xchg
dec
js
fistpl
mov
mov
leave
jmp
insb
xor
popf
mov
flds
shll
incb
cli
das
shll
dec
call
adc
mov
add
or
inc
pop
push
dec
dec
adc
shl
lods
pop
bound
arpl
out
push
cmpsb
xchg
out
sub
sarb
dec
mov
cli
fsubrs
xor
mov
mov
inc
pop
pop
fimull
popa
in
xor
loope
pop
push
pop
fwait
push
andl
xchg
jnp
cmp
pop
inc
ret
stos
rorl
jl
aas
bound
jbe
jge
gs
and
sub
jbe
les
xor
pop
pop
jne
movsl
sub
je
lret
cmpsb
test
shrb
mov
fs
dec
dec
dec
fbstp
or
mov
nop
lret
cs
push
jne
or
jle
sub
dec
pop
dec
imul
mov
inc
xchg
daa
cli
fldenv
movsb
xchg
push
out
and
in
push
pop
es
imul
cli
test
push
fdivr
rorb
jae
jg
xor
lods
movsb
cmpsb
adc
mov
mov
inc
add
or
es
loop
pop
mov
jle
xor
cmp
ljmp
sub
dec
repnz
mov
fists
fwait
clc
popa
lea
cmpb
sbb
adc
lods
aas
mov
popa
aam
or
and
js
and
inc
lock
sub
loopne
addr16
and
xchg
cmp
daa
dec
popf
test
movsb
ret
xchg
and
fldt
xor
imul
dec
pop
scas
and
ljmp
xor
xchg
into
idivb
mov
je
in
sbb
out
lret
test
jge
xor
sub
mov
addr16
lods
das
fistps
push
mov
or
das
nop
les
dec
xor
out
sbb
xor
repnz
fiaddl
sbb
xchg
lret
mov
jp
pop
and
sub
jecxz
repnz
adc
ljmp
sqrtps
dec
inc
cli
js
xor
add
stos
scas
add
out
nop
sahf
jnp
rclb
mov
cld
or
mov
aas
xchg
jp
pop
sti
push
push
and
popa
ret
lret
sti
pop
fnsave
mov
aas
fcomp
sub
cmp
mov
xchg
jne
daa
lods
sub
mov
dec
mov
mov
mov
and
pushf
push
sbb
add
fstl
fs
mov
dec
xchg
out
inc
mov
sub
jne
les
roll
inc
mov
pop
sar
loope
jbe
mov
xchg
inc
mov
xor
inc
pop
pusha
popf
or
call
add
in
and
cmp
dec
lret
fs
xchg
mov
adc
fidivl
pop
jo
loopne
add
mov
jmp
mov
or
mov
repz
push
sub
loopne
dec
mov
je
adc
jmp
fwait
add
sahf
fadd
jle
push
popl
test
imul
sbb
inc
rolb
sahf
mov
lcall
mov
mov
das
push
fadds
lods
inc
js
lahf
xchg
int
sub
bound
sbb
ss
jo
fidivs
enter
pusha
xchg
out
adcl
test
ljmp
ds
inc
dec
cmp
jl
cli
stc
push
xlat
adc
inc
scas
es
mov
dec
std
jnp
test
add
es
adc
dec
jle
stc
or
mov
je
xor
nop
repnz
xor
imul
sbb
jmp
mov
add
movsb
fidivs
call
mov
mov
or
fadds
push
popf
jle
xor
or
addb
push
push
mov
sahf
xchg
nop
stos
and
mov
pshufw
adc
mov
mov
test
cmp
jae
and
mov
jl
mov
dec
imul
mov
jno
push
or
cld
sub
jp
adc
fwait
sub
push
shll
xor
aaa
mov
mov
std
pop
shll
mov
mov
in
bound
pop
ljmp
stc
inc
xchg
js
sub
scas
ret
xchg
pop
push
jbe
jmp
lea
je
and
call
inc
inc
in
hlt
inc
orl
cltd
stos
push
std
not
into
sub
imul
ret
in
inc
dec
icebp
pusha
mov
push
inc
push
cmp
je
popf
xchg
dec
cmp
push
sbb
js
sbb
fisubl
fucomip
mov
cwtl
inc
xchg
enter
push
movsb
mov
cmp
add
jbe
jnp
andps
pop
jae
cwtl
fsubr
mov
sbb
mov
xchg
int3
insl
sti
jmp
clc
fbld
push
lds
push
sub
sbb
and
xor
sub
dec
loope
ret
ret
cmp
push
dec
xchg
and
or
fstpt
aad
mov
mov
imul
adc
cmc
xlat
dec
aaa
out
add
push
outsl
xor
cmp
push
insl
jno
xor
leave
inc
out
mov
les
pushf
xchg
mov
ret
in
sub
mov
ret
sub
fcoml
cmpsb
or
lcall
rcl
mov
cs
rcr
stos
xchg
orb
loopne
mov
sub
inc
jecxz
lods
jge
jbe
in
aam
lret
add
in
sbb
test
mov
test
bound
sub
push
adc
aas
cmp
test
cmp
add
pusha
adc
aam
jge
dec
out
divl
ret
shrl
ds
mov
movsb
mov
fnstcw
adc
test
xchg
fcoms
gs
js
pop
sub
mov
rorb
mov
fisttpl
inc
inc
repnz
push
ffreep
hlt
or
xor
sub
pop
sbb
sub
shrb
push
push
lcall
and
push
scas
push
pop
mov
and
insl
insl
sti
leave
out
outsb
cmp
repz
pop
sub
insb
rclb
dec
mov
cmpsl
xor
or
xchg
mov
aas
xor
lock
insl
cmpsb
jne
xor
or
dec
jbe
pop
popa
push
dec
pop
pop
jno
call
pop
sbb
cmp
stos
inc
test
pop
sbb
mov
or
arpl
and
ja
mov
int
push
clc
sub
xchg
sbb
leave
negl
or
and
xlat
lock
inc
mov
sub
loop
icebp
jae
movsb
adc
shll
xchg
hlt
jb
pop
icebp
fisubrl
repz
mov
jp
insl
dec
fs
addr16
cmpb
xchg
adc
test
mov
lea
jge
xchg
fbld
shlb
xchg
xor
adc
ja
sti
ja
cmp
add
adc
xchg
jns
hlt
sbb
into
aas
sbb
rolb
mov
xchg
xchg
jle
pop
dec
inc
xor
out
out
pop
sahf
jp
or
cmp
inc
ret
push
adc
sbb
xchg
scas
pop
pop
mov
adc
out
test
cwtl
orb
sbb
and
sub
clc
fistl
dec
xchg
pop
sbb
mov
sbb
push
sarb
inc
in
jns
sub
ffreep
mov
pop
jge
cli
stos
rolb
std
xlat
mov
test
sbb
imul
pop
jne
lcall
aam
inc
lock
pop
or
insl
aad
cli
jmp
push
push
xlat
sahf
sub
jmp
mov
xor
pusha
fisttps
or
int3
push
in
adc
cmp
popf
jae
mov
leave
mov
jle
xchg
into
and
je
and
mov
je
in
jne
adc
mov
xchg
dec
jnp
xchg
loope
lds
inc
je
xlat
xlat
iret
xor
dec
icebp
inc
push
add
and
xchg
mov
sbb
enter
and
jge
push
ds
xchg
js
js
lods
icebp
clc
sbb
fstpl
shlb
xchg
xchg
inc
mov
pop
and
mov
adcl
jp
cmp
pushf
jle
push
xchg
mov
ss
jnp
dec
cmp
xchg
xchg
add
or
stos
fcom
inc
push
jae
sub
jne
iret
rclb
push
jg
xchg
and
lods
or
stos
add
jo
pop
test
mov
sbb
aas
test
out
nop
push
loopne
enter
adcb
lcall
movsb
cwtl
pop
mov
inc
adc
leave
pop
pop
pusha
pop
sub
cmp
outsl
aas
fstps
cltd
push
int
icebp
iret
loopne
jb
imul
dec
ret
or
sahf
clc
out
adc
push
add
scas
aam
loopne
mov
xor
in
cltd
cmovl
jae
sbb
push
push
dec
subb
dec
pop
or
or
ds
idivb
bound
in
or
movl
sbbb
fnstsw
mov
mov
sub
addr16
add
mov
jge
cmpsl
ret
test
dec
mov
lods
xchg
xor
cmpsb
subl
inc
add
lahf
add
lret
lock
pop
jbe
clc
dec
adc
cmp
cmp
orb
adc
les
add
mov
xchg
ficoms
imull
sub
rcrb
ret
jg
pop
imul
and
sbb
bound
mov
int
daa
sbb
int3
inc
mov
ds
xor
setno
test
inc
cmp
jb
jno
nop
fcompl
jmp
pop
iret
cmc
mov
lret
cmp
xlat
mov
loopne
sub
xchg
jb
addb
pop
fnstsw
push
xchg
aam
fwait
inc
rorl
movsl
lock
sbb
or
xchg
outsl
and
adc
lret
dec
out
pop
gs
or
push
push
push
cmp
or
setno
mov
adc
mov
or
hlt
ret
scas
insl
cmp
in
jmp
repz
push
pop
jno
jp
aam
inc
push
jnp
in
jmp
pop
jmp
jno
enter
adc
addr16
mov
cmpl
push
push
dec
sub
xchg
mov
mov
inc
sbb
fnstenv
imul
out
mov
pop
cmp
mov
push
add
cltd
out
push
lock
adc
cmpsl
mov
adc
mov
or
sub
mov
dec
test
mov
xchg
xlat
cmp
xor
or
ljmp
mov
bnd
mov
in
sbbb
dec
adc
mov
xchg
fs
mov
icebp
fstp
insb
lahf
shll
and
fstps
sahf
and
mov
popf
stos
push
xchg
or
filds
shl
xchg
lcall
cmp
lret
mull
pusha
sbb
jp
int3
mov
cmpsl
outsl
pop
test
fidivrl
int3
sub
add
out
dec
ds
sub
lahf
pop
sti
add
mov
ljmp
push
loope
jmp
ror
and
pop
ja
or
or
imul
nop
inc
adc
xchg
push
repz
jle
pop
lret
mov
cmp
mov
and
mov
lods
je
push
push
xchg
cmp
test
inc
mov
inc
ja
push
pop
pop
lods
insb
cmp
divb
xor
rcrb
mov
xchg
sub
push
xor
mov
frstor
decb
ds
out
js
mov
cmc
daa
mov
or
lds
or
aaa
stos
adc
pop
sub
cmp
xor
fcoms
inc
sbb
push
and
push
out
push
dec
popf
dec
popa
test
push
xchg
jecxz
sub
stos
stc
sbb
add
insb
push
fadds
dec
jg
mov
fs
mov
lods
nop
adc
aaa
jle
int3
inc
fnstcw
pop
fistpl
ret
adc
xor
xchg
mov
cmpsb
test
bound
add
dec
pop
dec
mov
clc
xor
adc
xor
ds
int
dec
pop
inc
nop
cwtl
lahf
mov
out
mov
jge
out
mov
or
sbb
repnz
out
and
loope
and
xchg
jecxz
cmp
pushf
lahf
adc
fwait
pop
jg
aam
mov
cmp
enter
xchg
mov
pusha
sbb
jecxz
pop
inc
xchg
cs
sbb
in
mov
xor
push
mov
sub
add
mov
test
push
jmp
push
ja
add
loopne
scas
test
ja
and
in
das
rcrb
lret
fmuls
rcll
icebp
sti
scas
pop
add
inc
xchg
sub
aaa
jge
dec
pop
fldt
inc
aam
cs
lret
inc
mov
adc
fidivl
in
add
dec
daa
out
fbld
mulb
lret
ja
leave
sub
in
sbb
addr16
jge
push
and
fisubrs
or
std
cmp
and
push
test
inc
fadds
pop
pop
cmpsl
hlt
xchg
ds
cmp
add
movsl
sbb
gs
test
adcl
xor
clc
int3
subb
std
jno
push
mov
cwtl
bound
addl
sbb
pop
loopne
into
cmp
pop
mov
addr16
out
or
and
out
pop
add
into
jb
lcall
jl
rolb
lahf
xor
arpl
test
xlat
push
mov
cmp
xor
add
popf
mov
mov
jmp
pop
pop
daa
rep
xlat
add
ljmp
in
push
popf
cmc
or
nop
ja
loop
push
push
adc
fldenv
out
fwait
js
sbb
xchg
fdiv
out
mov
andl
cli
add
push
in
pop
outsb
inc
mov
dec
xchg
enter
cwtl
pop
out
jmp
mov
fidivrs
pop
xchg
sub
sbb
mov
es
mov
bound
popf
mov
mov
movsl
enter
popf
push
dec
out
jmp
aas
imulb
jbe
lea
es
orl
push
mov
test
sbb
lds
cmp
cltd
fldcw
jecxz
sbb
push
mov
mov
xchg
stc
adc
pop
inc
sbbb
daa
pop
inc
pusha
rorb
cmp
ret
shlb
jb
mov
mov
pusha
scas
das
pop
mov
ja
add
inc
and
ja
leave
es
in
push
loopne
cmp
mov
shl
adc
lds
pushf
inc
mov
out
jge
mov
orl
leave
stos
mov
jbe
sti
repnz
mov
xchg
jnp
movsl
daa
adc
jo
xlat
add
popa
mov
mov
adc
and
incl
push
xor
call
inc
mov
addr16
xchg
scas
xchg
xchg
mov
bound
ja
idiv
and
lea
ret
sahf
mov
jno
sub
sbb
int
mov
and
inc
cmpl
lds
dec
inc
sub
enter
aaa
xlat
jl
rolb
addl
jg
js
xor
clc
cmp
mov
mov
jp
jge
add
mov
xchg
push
es
sbb
inc
mov
aaa
pusha
jbe
mov
push
sbb
sahf
fdiv
mov
outsl
fwait
sbb
push
push
cmpsb
or
divl
add
cli
jg,pt
pusha
add
mov
jb
push
mov
xchg
popa
inc
enter
cmp
add
mov
inc
mov
aaa
dec
fiaddl
fsubr
in
jg
int
sub
cs
mov
mov
popf
popf
sub
xchg
push
das
cmp
loop
cmp
sub
jecxz
hlt
fisubl
out
xor
out
xor
lahf
cmpsl
test
adc
add
pop
sub
fisubrl
xor
fsubrl
sahf
cmp
dec
jns
adc
mov
lock
sbb
lcall
pushf
in
insl
scas
js
aas
popl
movsb
mov
jge
addr16
sbb
and
inc
arpl
shr
xchg
mov
xor
fnsave
or
arpl
shlb
cltd
jnp
aaa
nop
jl
push
adc
lret
pop
std
pop
loop
pusha
adc
mov
idiv
sub
jbe
mov
dec
cmp
cld
in
loop
out
sbb
pop
sbbl
jg
jecxz
jp
mov
loop
cmpsl
add
push
add
sbbb
lods
sbb
jle
dec
lods
push
int
or
push
push
cmpsb
mov
enter
sbb
mov
mov
pop
mov
add
popa
jno
pushl
mov
xor
push
mov
movnti
mov
repz
add
fisubl
add
xchg
dec
nop
fwait
addr16
cmc
cmp
mov
je
push
lret
movsl
div
lret
dec
or
mov
jecxz
sbb
pop
fbld
dec
pop
lahf
jae
or
enter
xor
jecxz
lods
push
mov
dec
mov
inc
nop
mov
cmp
push
ds
ret
inc
add
mov
xor
push
test
incl
xchg
pop
das
imul
dec
in
dec
sbb
sub
enter
jmp
sahf
jle
pop
rcll
mov
and
or
jg
mov
leave
out
subb
test
das
gs
call
incl
bound
insb
pop
sbb
mov
add
adc
pusha
xchg
movsl
cs
lret
xor
lock
sub
gs
sub
lcall
xchg
xchg
clc
mov
ucomiss
adc
mov
xor
dec
or
jns
mov
rcrl
inc
repnz
dec
fidivs
push
push
popa
icebp
dec
inc
cld
mov
mov
fistl
and
dec
xchg
push
jbe
cmpsl
lret
inc
aaa
cmpsl
insb
inc
jl
in
and
mov
out
pop
dec
and
test
out
imul
jae
icebp
and
mov
xor
mov
push
xor
mov
sbb
adc
imul
int
dec
sub
pop
and
mov
insl
test
lds
je
fimull
cvtps2pi
movsb
or
inc
stc
sbb
jl
cmp
sahf
popf
dec
in
and
lcall
cmp
stc
xor
mov
sti
inc
jnp
sub
xlat
out
fs
leave
xor
mov
in
inc
arpl
pushf
adcl
cmovl
push
sub
inc
jp
pop
push
xchg
sbb
sbb
push
pop
addr16
jb
pop
inc
mov
lods
outsl
push
jg
jg
adc
movsb
xor
inc
dec
pop
and
popf
mov
inc
push
lods
nop
mov
fxch
dec
enter
pop
shll
fstpt
pusha
mov
push
xchg
dec
push
mov
gs
fwait
or
cs
xor
xchg
in
sub
shl
push
outsl
mov
jno
pop
push
scas
or
xor
add
in
lods
daa
es
outsl
iret
xor
inc
fcompl
out
mov
mov
nop
cmp
test
push
xor
sub
dec
stc
pop
movsl
push
sbb
loopne
or
xchg
ss
pop
aam
lods
cmp
in
push
jp
push
or
mov
mov
pop
sbb
rcrb
inc
insl
cmp
xor
loopne
xor
add
rorl
adc
inc
rcll
mov
xchg
gs
dec
adc
ret
mov
ss
jle
icebp
xorl
leave
push
aas
add
into
shrl
xchg
les
scas
lds
cmp
sahf
pop
inc
sbb
inc
leave
mov
movsl
in
sahf
xchg
cmp
xchg
std
sbb
sarl
imul
mov
mov
hlt
ficoml
jns
out
ja
adc
push
or
outsb
mov
nop
dec
or
fsts
lcall
cmp
xor
pusha
inc
cld
pop
popf
mov
repnz
loopne
fwait
inc
adc
test
shrl
jns
xor
incb
test
out
add
inc
add
out
dec
jl
mov
sbbb
fld
inc
xlat
dec
int
jb
cwtl
xchg
or
pushf
pop
sbb
adc
xchg
mov
inc
leave
int
in
push
push
in
aam
fsubl
mov
add
inc
cmpsb
ja
cmp
lods
adc
or
jmp
xchg
jae
outsb
mov
mov
aas
pop
in
xor
aas
cli
jb
scas
inc
test
jae
mov
inc
mov
pop
iret
sbb
arpl
pushf
sbb
mov
decb
mov
adc
push
out
dec
add
mov
adc
leave
and
mov
fmulp
nop
nop
lea
stc
and
adc
lahf
rol
test
mov
sub
sub
pop
into
outsl
and
sbb
ret
adc
sub
lea
cmp
xor
and
int3
aam
mov
push
mov
sbb
jl
push
and
jle
mov
sbb
cmp
jge
or
into
cs
fisubs
test
into
movsb
mov
mov
pop
daa
scas
idivb
inc
add
js
fsubl
test
cmp
inc
ja
stc
lcall
xchg
aas
jecxz
mov
fildl
lock
lret
in
xor
xchg
insl
cs
data16
mov
jne
jne
out
push
add
nop
pop
lret
inc
mov
popa
ss
cli
les
cs
fildl
jp
cmp
stc
rcll
mov
xchg
repz
sub
js
repnz
pop
adc
clc
ficoms
std
xor
push
xor
roll
lock
jae
push
into
imul
xchg
enter
push
inc
fdivrs
mov
out
push
int
dec
out
out
xor
sahf
xor
push
lret
arpl
cld
push
dec
scas
lahf
in
pusha
mov
xchg
mov
cmp
outsb
xchg
out
push
mov
sti
xchg
add
or
sbb
xorb
orb
aam
push
jmp
movsl
mov
test
fcmovu
stos
sub
loop
mov
pop
leave
and
lds
in
inc
out
lods
cmpsl
inc
jnp
inc
call
in
lret
mov
adc
xor
imul
sub
js
shrl
out
stos
xchg
hlt
lcall
sti
push
sub
lret
scas
les
mov
sub
pop
pop
and
int3
movsb
jae
movsb
and
aam
xchg
leave
sub
xor
shlb
mov
data16
push
std
sub
test
test
aaa
mov
enter
sti
jo
or
sbb
add
das
rol
popf
cmp
xor
int3
nop
sub
shlb
in
add
movsl
inc
dec
sbb
mov
pop
mov
xchg
out
push
aas
das
fwait
add
xor
icebp
pop
std
jg
mov
adc
outsb
daa
sbb
cmp
or
cli
stos
pop
movl
loop
mov
pop
sub
jmp
or
daa
inc
test
iret
mov
icebp
xchg
mov
inc
fildll
jnp
adc
and
jg
rcrl
sbb
sbb
lcall
ret
jno
pop
cld
les
sub
push
shrl
jecxz
fildll
ss
jg
aam
gs
push
pop
popa
push
cmp
mov
fisubs
lea
lods
xor
xchg
lods
shrl
ja
js
test
mov
lcall
xchg
add
cmp
cld
dec
stc
leave
add
movsl
leave
mov
add
imul
sti
cmp
cmpsl
cs
arpl
mov
cmpsl
mov
cmpw
stos
pusha
xchg
repz
jno
sub
inc
jnp
out
cmpsb
repz
mov
iret
add
rorl
imul
test
sub
lcall
loopne
outsl
mov
add
lret
iret
out
hlt
pop
cs
sub
gs
xchg
mov
ss
jne
push
inc
mov
jns
mov
inc
xchg
sbb
ja
daa
out
xor
rolb
jns
cmc
sbb
jnp
lea
and
test
adc
jge
sbb
jmp
mov
insl
xchg
pop
sti
scas
popa
enter
stos
aaa
lods
xchg
rorb
lock
jno
adc
add
orl
dec
bound
rorb
fmulp
push
sbb
xchg
sbb
add
arpl
jae
dec
cmpsb
ret
sub
or
cmp
loop
push
daa
pop
rol
sbb
xor
sub
cmp
fs
sahf
jns
xor
xchg
insl
bound
mov
jp
pop
test
cmp
aad
push
inc
stc
sbb
and
xchg
xchg
sbb
idiv
or
mov
mov
orb
rcr
icebp
mov
sbb
jmp
les
roll
fptan
add
or
hlt
or
xor
sub
sbb
add
lods
in
out
mov
cmp
fdivr
or
and
sahf
add
mov
mov
ljmp
subl
je
mov
fwait
inc
mov
lret
dec
or
neg
inc
repz
test
andl
mov
jo
mov
les
cli
sub
cmpsb
into
push
mov
adc
push
nop
mov
mov
into
fldl
adc
push
push
xchg
ljmp
daa
mov
in
push
jb
arpl
popa
pushl
sbb
mov
push
lods
sub
cwtl
je
popa
xor
shll
imul
push
cmpsl
fcoml
dec
mov
je
sub
outsl
loope
inc
xor
add
loope
push
icebp
sub
mov
xor
icebp
int3
fcoml
and
lret
je
aad
push
or
mov
popa
aad
sbb
lock
loopne
test
add
cmpsb
fstpl
sbb
mov
nop
push
outsb
cltd
sbbl
xor
imul
pop
iret
fsubrs
leave
rcr
mov
movsl
outsl
mov
push
sbb
jnp
test
out
cmp
mov
js
clc
jle
jmp
adc
mov
into
leave
and
push
push
scas
dec
dec
jo
fxch
mov
out
lcall
sbb
fcomi
xor
push
and
cli
fst
mov
loopne
mov
xlat
sub
mov
push
insl
cmp
mov
fildll
scas
sahf
mov
sbb
xchg
stc
sbb
sbb
and
je
insb
popl
inc
hlt
xchg
daa
cmp
mov
out
inc
dec
loop
xchg
jg
cmp
mov
xchg
js
dec
inc
ds
cmp
push
xchg
iret
outsl
mov
das
adc
add
mov
jne
cmc
and
popf
not
jl
incl
sbb
int3
push
dec
fistpl
xchg
cmpsl
xlat
lret
aam
xor
sbbl
in
push
adc
jno
mov
ss
jecxz
pop
sarl
stos
pop
cld
cmp
sahf
cmp
cmc
int
ret
outsl
ret
mov
mov
xor
in
enter
sbb
cmp
shll
mov
into
and
jno
sbb
fistpll
fidivrl
shlb
insb
and
push
scas
imul
jne
scas
cltd
cwtl
nop
sbbl
test
jp
nop
test
pop
dec
jae
jecxz
in
shll
rcl
dec
inc
push
test
jae
jbe
nop
insb
out
xorl
fsub
clc
rcrb
mov
cmpsb
jae
outsb
mov
aam
sub
ds
cs
bound
sbb
push
jmp
hlt
into
mov
xor
scas
pop
loope
xor
jo
scas
outsl
ret
xchg
xchg
inc
mov
adc
sub
mov
rcrb
aam
xorl
sub
jns
mov
push
out
popa
shld
in
or
push
push
cmc
lods
adc
mov
push
xchg
sbb
jae
scas
jge
inc
pop
pop
out
mov
jle
popf
movd
scas
dec
adc
mov
sbb
and
push
push
jmp
daa
xor
adc
push
jecxz
jne
out
dec
xchg
jmp
je
mov
mov
lret
inc
fs
movsb
test
aad
xor
sti
or
push
or
outsl
or
jbe
scas
push
sarb
jo
mov
andl
cli
jmp
and
fstl
mov
adc
test
dec
xchg
dec
dec
nop
pop
aaa
sbb
jo
cmp
inc
ret
jae
push
pop
pop
xor
movsb
pop
jae
mov
sub
lret
dec
push
jl
hlt
addr16
in
push
out
aas
pop
xchg
jle
inc
test
and
addr16
outsl
jns
dec
mov
cld
sti
icebp
sarb
js
loop
sbb
xchg
das
push
test
faddl
mov
and
mov
push
pop
jecxz
lods
xchg
icebp
jns
pop
call
sbb
push
fbstp
in
daa
or
and
sub
popf
inc
push
aam
mov
and
cs
icebp
aaa
add
push
mov
adc
cmp
pop
and
out
add
lcall
add
xchg
pop
loope
movsb
je
std
or
xor
mov
jb
shrb
jmp
dec
pushl
push
ss
xor
xor
push
out
arpl
xor
cltd
out
into
or
mov
add
pop
and
mov
push
nop
or
clc
jg
mov
loopne
cmp
outsb
insb
movb
dec
aaa
mov
jo
daa
mov
mov
push
scas
add
out
inc
clc
clc
into
dec
adc
out
stos
rorl
xchg
xchg
push
inc
ljmp
movsb
pop
into
cmpsb
movsb
inc
sbb
jge
or
xchg
clc
sbb
push
fisubrs
in
push
inc
and
jo
lods
jo
push
pop
xchg
mov
jns
fstps
and
scas
mov
xchg
and
repz
bound
push
xchg
scas
dec
loopne
out
inc
sbb
nop
aad
ljmp
out
jg
inc
mov
adc
jle
and
hlt
iret
fnstenv
and
cmp
xor
sub
xor
cmp
int3
pushf
fiadds
sub
mov
and
fnsave
cli
xchg
adc
je
cmp
xchg
in
xlat
adcb
pop
sti
arpl
sti
jle
outsl
stc
add
lock
inc
add
xchg
std
mov
aas
popf
mov
xchg
sub
test
imul
push
imul
loopne
jae
iret
ljmp
xchg
movsl
mov
or
in
rcrb
stos
sub
enter
loope
pushf
cmpsb
mov
jb
or
mov
mov
ret
stos
adc
mov
lds
dec
aas
test
loope
jb
shrb
shrl
xchg
pushf
insb
cwtl
xchg
std
adc
loop
out
sub
or
or
push
dec
test
cmpsl
popf
mov
pop
mov
dec
shrl
mov
clc
lahf
out
push
pop
ds
imul
pop
into
jno
or
cmp
insl
or
dec
rolb
push
pop
in
lea
cmc
jle
cmp
push
xor
xorb
xchg
sbb
loopne
insb
xlat
push
jbe
or
fistpl
shr
inc
cmp
cltd
gs
adc
xor
stos
mov
pop
loopne
and
das
sahf
push
adc
popa
adc
jnp
push
rol
jo
adc
cmp
cmpsl
mov
adc
imulb
cli
rcl
pop
cltd
inc
mov
dec
jmp
pop
loop
int3
ja
in
lcall
xor
lods
adcl
fsubl
mov
imul
mov
rorl
jmp
xor
dec
in
stos
dec
js
cmp
or
lret
dec
rcrl
in
lock
rcrb
gs
sbb
jmp
push
shlb
push
pop
cmp
pop
fidivrs
mov
inc
jb
lsl
orb
mov
mov
repnz
inc
repnz
dec
inc
or
sar
lret
stos
repz
pusha
adc
dec
ja
sbb
adc
cmc
ret
adcl
stos
pop
push
jp
cli
in
fsubrs
lcall
or
lods
popa
das
hlt
cmp
shr
adc
shll
pusha
mov
xor
push
fs
clc
jge
cmp
jg
outsb
aad
sub
out
lea
test
mov
cmp
notb
jo
dec
xor
mov
imul
xor
mov
jns
notl
imul
sti
jnp
loopne
fistps
cmp
fisubl
add
jo
cmc
mov
mov
fs
adc
mov
jmp
push
lods
pop
je
test
adc
out
xchg
in
and
sub
cltd
test
mov
inc
jge
js
les
outsl
addb
sub
rolb
push
mov
mov
fstpt
data16
jae
jg
xchg
rcrl
shrb
adc
jns
sub
mov
sbb
push
sbb
insl
fdivrs
loope
sub
adc
jne
xchg
and
shr
sub
movsb
and
cmpsl
xchg
mov
adc
xchg
push
mov
dec
loopne
gs
lock
mov
pop
les
std
xchg
xor
pop
pushf
sahf
pop
lods
pop
inc
add
mov
adc
or
lcall
mov
jno
ja
ds
sub
into
outsl
inc
iret
outsb
push
idivl
cld
xlat
stc
dec
fcomp
inc
pop
out
mov
in
ja
loopne
enter
cld
rcrb
mov
out
mov
lahf
mov
or
xchg
adc
push
sahf
je
mov
stc
push
adc
sahf
mov
dec
daa
je
sbb
cmp
rclb
pop
mov
das
pop
sbb
fildll
mov
aaa
xlat
fwait
ret
enter
sbb
or
mov
pop
ret
popa
in
sub
hlt
sub
push
movsb
ret
shl
into
shll
xor
cltd
xor
pop
and
aam
mov
rorb
popa
xor
add
in
jp
mov
test
mov
inc
daa
call
push
mov
mov
sub
mov
rcrl
mov
call
xor
jae
xchg
out
cmp
mov
out
ja
iret
dec
fisubrl
jle
mov
fs
shll
subl
mov
adc
mov
dec
movl
dec
cmpsb
add
pop
fsub
popa
mov
rcll
xchg
or
inc
push
insb
push
inc
subb
ret
sbb
cmpsb
or
in
dec
je
jne
loope
cmp
cmp
and
jo
jbe
mov
out
xchg
mov
cmp
jae
movsl
pop
mov
in
push
jge
jb
mov
inc
out
mov
test
inc
inc
xchg
mov
dec
sub
lock
test
pop
jge
outsl
outsl
adc
outsb
jbe
test
push
mov
or
jle
inc
push
cmc
rorb
adc
mov
js
push
pop
push
and
pop
ja
rcl
loop
add
loop
jg
mov
mov
testb
mov
cmc
and
outsb
inc
dec
cmp
mov
roll
cmpl
jns
sbb
adc
fdivr
aas
popf
int3
pop
out
mov
and
pop
adc
les
call
cmc
lahf
xchg
sbb
inc
filds
or
inc
mov
xor
xchg
icebp
add
dec
mov
out
les
ffreep
rcll
push
xlat
ds
lods
out
lods
iret
addb
dec
sti
out
or
out
xchg
nop
mov
mov
ffreep
repnz
in
inc
push
jecxz
pop
lods
xor
loopne
outsl
or
or
int3
dec
ja
mov
sbb
cmc
outsb
xchg
les
sbb
lock
fcomps
inc
adc
scas
sti
sti
arpl
mov
sub
mulb
fstp
sbb
pop
test
pop
lret
fsubs
push
arpl
cmp
dec
pop
sbb
fidivrl
push
nop
jbe
cmp
xor
mov
scas
jns
cmpsb
imul
dec
mov
cmp
andl
mov
jmp
out
mov
test
repnz
lea
lea
fnstcw
bound
out
sbb
fistps
push
pop
jo
jge
push
repz
aas
lea
pop
pop
dec
inc
or
pop
lret
sbb
jge
mov
push
adc
xchg
mov
ss
mov
sbb
pop
mov
dec
mov
fcomi
mov
les
mov
rolb
add
aad
add
xchg
jae
jge
pop
sahf
xchg
xor
sbbl
inc
rolb
inc
cli
pop
enter
mul
pop
xchg
sub
lods
cmpsl
adc
mov
mov
leave
inc
and
orb
iret
fstl
dec
int
pushfw
and
arpl
xor
jl
pop
jo
cmp
dec
js
push
cvtpi2ps
popa
inc
add
out
cmp
xchg
inc
ret
addb
push
cmpsl
fwait
xor
loopne
lcall
dec
into
ss
pop
cmp
mov
ret
aad
sub
out
or
ret
aad
xor
cmp
dec
rcl
or
cmp
push
aad
loop
inc
and
bnd
push
rorl
mov
leave
jno
mov
inc
loopne
lds
leave
sbb
jmp
insl
aam
or
mov
iret
pop
cmp
in
cli
arpl
sbb
cmp
dec
stos
mov
ss
push
inc
cmp
jbe
cli
push
fcoms
sbb
enter
lea
lretw
ja
mov
movsl
idiv
dec
stc
mov
insl
fidivrl
ffree
popa
cmc
popa
sub
inc
xchg
sub
mov
pop
or
sbb
scas
ror
push
xor
xchg
aaa
xchg
jmp
cli
fdivp
std
xchg
cmc
xchg
aam
pushl
xchg
out
sbb
cmp
dec
mov
sub
sub
or
sub
mov
ds
call
and
xlat
jo
xchg
ds
mov
es
xor
filds
jno
push
in
pusha
or
adc
push
xor
outsl
in
stos
ror
jle
dec
pop
mov
and
andb
movsb
movsl
sub
js
in
jp
mov
jbe
sub
mov
ljmp
std
ja
lret
mov
lret
ljmp
lahf
cmp
and
imul
mov
sub
aam
in
hlt
aad
mov
pop
lods
in
jns
pop
loope
pop
xchg
xor
xchg
into
call
stos
mov
xchg
incl
sbbl
movsl
inc
jno
ss
pop
cmp
call
inc
xchg
jne
adc
flds
fisubs
xor
jle
dec
leave
or
inc
clc
mov
fwait
pop
and
fmuls
dec
push
mov
leave
mov
dec
not
jge
lret
jle
out
xor
incb
push
pop
shrl
data16
inc
sub
push
call
loope
inc
sub
movsl
movsl
add
push
arpl
sti
cmpsl
loopne
push
push
repz
add
fs
call
iret
ret
cmp
lods
push
mov
inc
clc
or
test
sbb
in
pop
cmp
mov
aam
bound
add
out
sub
add
test
mov
jnp
push
and
cmp
outsb
loop
fsubl
jmp
fnsave
add
mov
insl
mov
mov
ret
mov
out
cs
push
imul
out
js
and
jnp
jle
aad
adc
or
fistl
xchg
fstl
jo
fstps
pop
fsubr
pushf
push
sbb
pop
dec
outsb
mov
lret
push
loopne
adc
js
pop
lods
andb
adc
in
jbe
cli
loopne
and
bound
addr16
movzbl
pop
mov
fcmovbe
dec
rolb
shrl
and
leave
test
or
pop
popa
es
inc
imul
inc
pop
or
pop
sbb
xor
jne
xor
push
fidivrl
dec
das
hlt
mov
das
jecxz
jnp
add
aad
lcall
pop
xor
imul
cmp
inc
jmp
push
mov
and
jge
mov
neg
in
mov
loope
ret
add
push
and
xchg
enter
test
arpl
adc
jno
xor
lods
fmull
sub
sub
dec
mov
xchg
dec
mov
push
fsub
or
jbe
xchg
ljmp
loopne
aas
lcall
mov
es
jecxz
std
loopne
fstps
clc
xchg
lret
test
pop
sbb
jae
test
test
mov
outsl
xor
pusha
mov
push
xchg
pop
pop
xchg
cmp
dec
stos
mov
int
mov
cs
fldenv
adc
in
and
aaa
and
cwtl
inc
popf
sub
xlat
sbb
add
leave
mov
daa
mov
sarb
cs
pop
and
fs
jmp
jne
dec
aad
dec
push
gs
mov
inc
repnz
fcoml
jns
xor
xchg
test
int3
dec
inc
enter
inc
idiv
add
hlt
out
sub
mov
pop
pushf
roll
xchg
xchg
push
dec
je
pop
pop
cmp
paddusw
clc
or
pop
andl
cmp
shrb
fistpl
aam
es
jge
xchg
nop
add
ret
add
repnz
cwtl
pop
pop
xlat
in
aas
sahf
or
movsb
popf
mov
push
addr16
jno
je
cmp
mov
and
mov
ret
mov
mov
mov
mov
div
call
cmp
rorb
fildll
push
dec
cmp
mov
scas
and
mov
fisubrs
sub
scas
imul
xor
jb
mov
sub
cmp
ficoms
mov
mov
pusha
sub
jle
cltd
xchg
jae
jp
inc
cmp
xchg
dec
sbb
rcl
mov
xchg
xlat
inc
adc
adc
add
jg
push
fildl
dec
rolb
push
jge
cmp
pusha
imul
popf
int
push
dec
das
sbb
xchg
or
pop
mov
rcll
hlt
cs
mov
pop
sub
dec
fucomp
andb
in
dec
mov
daa
sub
imul
repnz
mov
outsb
jg
mov
or
sahf
mov
enter
imul
imul
cmp
inc
mov
outsb
sbb
mov
mov
bound
and
lcall
mov
popf
jne
inc
push
jo
out
out
fdivs
scas
mov
cmpsl
xor
fstpl
enter
pop
jno
dec
daa
jns
shll
popa
push
mov
outsb
hlt
jp
push
stc
fldcw
daa
lret
cmpsl
adc
jns
pushf
arpl
add
pop
pusha
test
and
xchg
and
sbb
arpl
cmp
inc
add
hlt
push
ljmp
lea
orb
imul
add
ret
fcmove
inc
sbb
jecxz
dec
xor
pop
push
imul
mov
xor
clc
test
lods
xchg
xchg
pop
mov
adc
pop
push
iret
mov
data16
leave
xor
add
adc
das
inc
aam
jecxz
mov
adc
ss
dec
push
movsl
add
cwtl
xchg
cld
mov
les
xchg
inc
mov
movsb
xchg
inc
lods
mov
lods
cmpsb
pop
imul
push
in
aad
imul
add
push
or
xchg
mov
clc
lret
push
jge
nop
dec
nop
jo
mov
cltd
adc
or
xor
ljmp
mov
popf
aaa
pop
pop
or
cmp
es
movsb
cltd
iret
scas
cmp
mov
pushf
pop
inc
subb
xor
fcmove
insl
out
into
dec
cwtl
cmp
ja
fsts
push
imul
loope
xchg
lcall
aas
fimuls
and
pusha
pop
iret
dec
cmc
jb
and
mov
mov
xchg
push
jns
fs
fistps
cli
pop
aad
mov
xor
jp
data16
xchg
clc
loopne
in
testb
push
xchg
popf
inc
and
push
cmpsb
pop
orb
and
push
pop
inc
out
scas
xor
scas
lahf
lret
xor
cmp
adc
jb
icebp
hlt
rol
push
mov
mov
imulb
andl
es
outsb
inc
jne
xor
add
cmpsb
mov
ljmp
les
cmp
jno
ljmp
shr
invd
add
rorb
push
div
notl
push
lods
sub
movsb
arpl
push
aam
push
mov
inc
dec
jbe
fcoml
les
test
movsl
dec
xchg
or
jecxz
jl
mull
push
faddl
xchg
jae
jmp
mov
clc
outsl
mov
push
adc
ds
out
shl
xor
or
sub
or
hlt
add
dec
adc
fsubrs
or
mov
aam
mov
shlb
cmp
push
pop
mov
or
adc
jb
jmp
stc
jbe
rclb
lcall
stos
mov
xchg
mov
das
pushf
cmp
lret
xchg
bound
ljmp
fwait
insb
xchg
cld
inc
inc
scas
mov
sbb
arpl
mov
aad
adc
mov
mov
xchg
inc
inc
and
cmp
daa
int
dec
pop
testl
sti
aas
inc
fmul
jae
jmp
cmp
loope
repz
je
lea
pop
mov
push
pop
xor
adc
orl
lcall
adc
cmp
lds
aad
and
lods
rorl
mov
inc
mov
scas
xchg
sbb
cmp
cmp
dec
popf
gs
hlt
mov
mov
out
cmpsl
adc
xor
adc
pop
roll
mov
mov
dec
push
add
jns
jmp
gs
xchg
repz
mov
sub
push
mov
pop
dec
push
jmp
push
popa
push
lods
in
add
fstpt
mov
stos
rol
repz
sbb
dec
loope
adc
dec
pop
repnz
lret
cmp
or
mov
xor
loopne
sub
pop
mov
jns
in
jns
jp
enter
mov
jo
dec
cmp
in
add
jg
push
pop
movsl
lds
movsb
and
mov
loope
push
mov
divb
iret
imulb
les
aaa
sub
inc
xor
dec
shlb
data16
jge
push
loope
or
clc
out
jl
inc
pop
and
ljmp
mov
mov
fldcw
out
aas
repnz
lret
test
shrl
les
icebp
xchg
into
inc
adc
ret
jns
jmp
and
addr16
mov
sbb
pop
xchg
inc
hlt
or
ret
mov
clc
or
dec
loop
aaa
shrb
or
and
push
repz
into
cmp
pop
bound
dec
out
out
sbb
mov
and
addr16
cmp
aad
hlt
fs
mov
loopne
inc
repz
cld
xchg
mov
push
fistl
lock
lret
testl
mov
push
push
repz
push
push
fisubl
cs
cmp
mov
outsl
jae
sti
push
popa
popf
jle
cmpsl
pop
xchg
dec
lret
sub
xchg
dec
loope
orl
insb
fs
xor
aam
notb
iret
adc
sub
ja
insb
shll
cmc
enter
repz
in
pop
xor
push
cltd
movsl
cmp
fcom
pop
imul
mov
push
into
sub
cmp
and
in
add
add
push
pop
add
pop
in
dec
jns
scas
xchg
and
stc
lcall
icebp
or
outsb
push
adc
xlat
in
jp
push
cmp
into
ja
sub
mov
ret
xchg
sub
or
jmp
mov
mov
cli
jbe
push
rclb
fs
enter
push
dec
jbe
cwtl
outsl
cs
add
pop
lods
adc
xchg
xor
repnz
dec
ja
pop
inc
in
dec
cwtl
push
divl
cmpsl
mov
in
push
ret
dec
imul
lahf
shl
mov
push
hlt
or
in
and
adc
push
pop
mov
stos
sbb
fists
sbb
and
xor
lret
fisubrl
fsubrs
imul
dec
push
sub
push
addr16
dec
pop
lret
or
push
push
xchg
test
aas
fcoml
sub
jns
xlat
sub
jno
sbb
lahf
pop
cmpsl
fnsave
inc
sbb
cli
add
repz
add
inc
dec
jns
fidivrl
cmp
cmpsb
fidivl
xor
lcall
adc
jnp
jle
xchg
dec
flds
fists
adc
xor
je
imul
add
mov
and
loop
loope
jb
lret
fnstcw
push
loop
mov
sub
test
arpl
mov
into
aaa
popf
xor
stc
inc
out
pop
shlb
jno
pop
sahf
insl
pusha
hlt
aad
imul
lret
nop
shl
mov
mov
inc
lock
ficoml
loopne
xlat
rcrl
mov
ret
push
test
es
mov
out
push
sbb
and
mov
dec
and
mov
mov
fs
cmpsl
mov
mov
inc
cmc
sub
insb
jle
movsl
adcb
fs
mov
fdiv
icebp
jge
into
sub
fistps
pop
fmul
fstp
fdivs
repz
xlat
mov
inc
repz
leave
int
pop
scas
xor
or
mov
inc
stos
fldl
mov
loop
and
add
mov
popf
aam
mov
mov
imul
push
sub
push
mov
jne
cltd
test
popf
jecxz
jg
dec
lret
and
sub
jb
jmp
ljmp
dec
pushf
imul
cs
xor
test
dec
or
fs
mov
sbb
scas
add
out
dec
mov
jl
enter
jae
sbbb
mov
mov
ret
cmpsb
mov
jecxz
sbb
xchg
rcr
pop
xchg
and
xchg
lea
xlat
fidivrl
inc
jl
nop
mov
and
icebp
test
xor
mull
repnz
nop
pop
add
stc
adc
pushf
out
stc
push
inc
or
jne
cmpl
inc
cs
jg
cld
mov
in
cld
int
pop
scas
mov
loop
popl
fs
xchg
lods
xor
jmp
imul
cli
loopne
sub
dec
mov
jno
mov
sbb
jecxz
xor
cmc
cmp
xchg
xchg
and
jno
ret
mov
nop
push
jmp
imull
pop
ss
sub
sub
cmp
dec
xlat
add
cmp
hlt
shll
rcr
into
push
fsts
xor
dec
insb
aas
xchg
out
mov
out
je
sub
inc
xchg
stc
stos
mov
jmp
loopne
jne
pop
outsb
and
push
adc
ret
imul
mov
lahf
add
movl
inc
cmp
fwait
test
pusha
push
sub
xchg
in
lret
pushf
movsl
push
and
ret
mov
mov
xchg
mov
jp
aam
xchg
dec
xchg
push
xchg
jl
scas
pop
push
ja
pop
mov
iret
stos
cwtl
ret
insb
gs
fiadds
or
ret
push
jmp
sti
xchg
jle
sbb
out
lea
sbb
in
jg
sbb
pop
in
popf
lcall
mov
roll
jmp
fisubl
pop
mov
ret
jle
imul
in
pop
stos
leave
pop
inc
ja
inc
mov
adc
sbb
lock
mov
xor
mov
push
repz
jle
ja
loopne
dec
insb
int
dec
jno
xchg
cmp
out
xor
dec
addr16
sub
inc
jb
dec
pop
into
in
xor
and
lahf
insb
ja
cmp
subb
nop
mov
push
jmp
pop
cmp
pop
mov
insl
push
sub
rcll
orl
mov
out
ds
mov
mov
hlt
ja
and
push
std
xor
jae
xchg
pusha
fcomps
lds
jne
pop
xchg
mov
sti
xchg
xchg
pop
pop
pop
dec
data16
lahf
inc
sbb
ds
cmp
je
ja
outsb
out
xchg
sub
xchg
and
inc
lahf
push
ret
mov
push
daa
lcall
out
dec
das
stc
lahf
pop
cmp
lahf
add
sbb
test
mov
jmp
mov
rclb
and
outsl
test
pop
mov
mov
lea
imul
push
dec
push
hlt
insl
sub
and
lock
fldl
cmp
cs
xchg
adc
inc
out
mov
dec
cmp
ljmp
sbb
push
and
enter
mov
jecxz
repnz
and
jne
push
xor
decl
xchg
aaa
xchg
inc
cmpsb
lods
repz
repz
push
mulb
push
cs
push
sahf
int
push
lock
lods
jge
sub
fdivrl
mov
fistpl
mov
xchg
xchg
shr
movsb
aad
mov
xchg
xchg
out
lock
jg
cmp
ljmp
mov
fidivs
bound
popa
int
loope
pushf
xor
push
dec
ja
ds
fwait
test
xor
shrl
repz
pushf
ljmp
mov
mov
adc
in
movsb
cwtl
in
les
mov
push
divps
sub
or
push
ljmp
into
inc
cmp
nop
jmp
cltd
hlt
int
shl
adc
fmul
les
lds
js
sbb
mov
sub
movsb
adc
pop
pop
pop
fcompl
add
jg
loop
fdivrs
push
fildl
inc
adc
hlt
sub
mov
inc
push
bound
lret
sahf
jp
aaa
xor
sbb
loope
test
mov
add
je
mov
sbb
xchg
sbb
inc
jle
in
inc
icebp
imul
dec
fidivrl
into
push
stos
sbb
dec
pop
mov
fs
cmpsb
adcl
rorb
lea
cmp
mov
sti
and
pop
fistl
xor
mov
jb
cmp
mov
cmc
xor
jmp
mov
call
nop
xor
add
pop
or
fldl
add
enter
lcall
fstp
fstpl
push
mov
fcomps
inc
jge
dec
bound
sub
ss
lods
adc
cmp
sub
aam
cmp
pushf
repz
lods
mov
xchg
mov
dec
mov
and
sub
cld
insb
add
int3
mov
call
insl
inc
pusha
lret
test
test
xor
fwait
add
outsl
cmp
dec
mov
aad
jle,pn
ljmp
emms
cmp
pop
dec
pop
inc
pop
mov
mov
xor
jmp
lcall
jl
cmp
dec
loop
stos
fcmovne
sbb
insl
sbb
mov
sub
leave
adc
inc
notb
iret
mov
nop
stc
mov
outsb
ds
out
push
leave
inc
adc
mov
sbb
cmp
xor
mov
xor
adc
jns
lahf
icebp
sbb
leave
jge
mov
lsl
mov
sub
insb
push
pushf
call
xorb
lret
imul
inc
movsl
repnz
mov
cmp
sbb
or
xchg
lods
loopne
filds
add
jecxz
cmc
jl
add
arpl
test
dec
stc
mov
lea
adc
lret
jns
or
pop
jbe
enter
dec
inc
in
fildll
and
fistpl
sbb
in
dec
dec
int3
cmp
jp
push
fidivs
in
mov
and
rorl
subl
mov
sub
lds
andb
lcall
insl
sbb
int3
lret
push
in
mov
xor
ljmp
jo
push
xchg
movsl
sub
sbb
dec
scas
jle
je
mov
popa
addl
iret
mov
ja
pusha
mov
dec
jp
mov
gs
and
sbb
rorb
and
add
add
sbb
pop
push
push
int3
push
dec
je
jo
push
xchg
repz
dec
cmp
leave
jp
shr
cmpsl
fisttpl
jb
push
mov
jg
mov
inc
out
test
or
adc
fsubs
cmp
in
and
repnz
test
mov
xor
fisttpll
push
sub
aad
dec
idivb
dec
rcrl
add
xlat
test
jmp
xor
hlt
adc
filds
div
lods
mov
and
jns
nop
orl
inc
test
cld
cvtps2pi
or
jle
lret
pop
add
inc
int
into
stos
and
jno
jmp
lcall
or
push
inc
fdivrl
les
pop
fiaddl
and
loope
pop
xor
lods
or
in
stos
sbb
in
mov
inc
sbb
xchg
lods
mov
add
xchg
adc
dec
std
pop
and
inc
mov
pop
jns
xor
dec
dec
adc
xor
nop
cs
outsb
negb
addr16
negb
inc
imull
scas
popa
mov
cmp
sbb
ja
push
clc
inc
xchg
test
xor
fcomp
sub
mov
jle
pop
xor
mov
ficoml
addr16
sbb
add
or
call
or
mov
loop
int3
mov
ret
shl
or
add
mov
jbe
mov
and
push
rcl
cs
jl
pop
out
push
lahf
std
out
iret
rcll
es
cwtl
pop
insb
or
xor
loope
jns
sub
and
insl
stos
push
adcb
jecxz
mov
and
pop
mov
xor
and
pusha
adc
lcall
fistpll
push
loopne
jmp
mov
into
cltd
je
sub
mov
fnstenv
sub
les
mov
out
outsl
loop
xchg
xchg
mov
mov
mov
xor
repnz
fcmovnu
aaa
sub
mov
mov
inc
into
nop
dec
adc
xchg
test
seta
lock
pop
adc
xor
das
ja
cltd
xor
insb
or
dec
pop
bound
cli
cmp
xor
push
mov
and
pop
sub
aam
lcall
xor
jmp
incb
js
dec
into
jl
sub
lret
jg
inc
shlb
push
popf
movsb
mov
fiaddl
mov
pop
push
xchg
adc
mov
pop
mov
dec
inc
push
cmp
mov
mov
inc
or
pop
jbe
lcall
or
pushf
sub
sbb
xchg
xor
mov
jecxz
mov
cmp
push
adcb
push
xor
pusha
jge
fdivs
sahf
pop
rclb
imul
push
pop
cltd
adc
mov
xchg
lds
mov
xchg
loopne
mov
movsb
arpl
cmp
lcall
jle
repz
mov
lret
dec
int3
and
repnz
aam
ds
in
pop
insb
andb
cmp
out
in
push
lret
shlb
pop
cmpsl
and
jp
or
enter
cmpsb
cmovo
mov
sbb
out
sahf
fisttpl
or
ja
sbb
push
sub
repz
iret
inc
lahf
stos
xchg
dec
mov
pop
mov
test
jne
inc
sub
ljmp
testb
add
xchg
push
scas
orl
cmp
mov
pop
shrb
mov
repnz
and
ret
hlt
sbb
sub
push
adc
and
pop
push
lcall
imull
cmpsb
xor
mov
or
jp
in
mov
jns
push
outsb
cmpl
stc
arpl
popa
lret
mov
jnp
sub
mov
scas
call
push
and
xchg
jnp
ret
or
mov
mov
sbb
in
shlb
mov
dec
sbb
pop
pop
fidivs
cltd
mov
daa
cs
xchg
mov
pushf
into
subb
mov
lods
pop
and
out
jecxz
shrl
fisttpl
jnp
sarb
movsl
leave
sbb
adc
cmovge
out
jl
jecxz
jp
xor
pop
sub
mov
shr
jecxz
and
push
in
and
push
loopne
xchg
test
pop
scas
xchg
mov
movsb
out
leave
cmp
ud0
sbb
xchg
andb
out
push
jmp
fwait
cmp
xchg
lret
mov
daa
rorb
mov
in
push
add
pop
sbb
sub
mov
dec
dec
pop
loope
jnp
sbb
mov
int
push
clc
jge
sbb
xchg
dec
movl
inc
sbb
ret
int
lret
dec
mov
jbe
push
orl
dec
inc
mov
mov
pop
lahf
daa
pop
lea
dec
out
pop
rclb
sub
or
bound
inc
cmp
fs
cmpsl
pusha
das
movntps
test
outsl
cmp
sbb
lods
aaa
push
sub
loopne
push
sbb
imul
insl
dec
cmc
jnp
sbb
pop
jne
lret
sub
and
and
dec
dec
test
fwait
ret
push
stc
pop
and
mov
fistpl
scas
push
aad
notl
pop
pop
sub
jb
dec
sar
push
adc
cmp
xor
pop
mov
cli
sub
push
ror
push
aam
or
call
pop
js
mov
push
mov
sbb
pop
call
aas
dec
ss
jae
les
cmp
push
arpl
xchg
inc
cmpsl
ds
xor
pop
mov
push
pop
or
mov
jmp
push
sbb
sbb
add
flds
mov
pushf
pop
scas
ss
cmpsb
cltd
mov
ja
push
test
pop
out
movsl
push
dec
mov
sub
loop
push
dec
fs
lret
lods
pop
stos
and
pop
cmp
jno
jecxz
out
repz
int3
jne
int
lahf
lcall
into
aam
mull
push
fimuls
cmp
int3
jle,pt
mov
push
daa
inc
decl
test
lcall
jbe
xchg
stos
out
jnp
fbstp
sti
push
dec
or
in
shlb
jmp
out
mov
lock
xchg
iret
fildll
xor
stc
lahf
push
pop
push
es
or
ja
test
test
je
jecxz
and
outsb
stos
cmp
data16
cld
roll
or
repz
push
das
mov
and
into
jg
cli
cmp
sbb
mov
push
sbb
mov
jnp
jns
lcall
addl
or
inc
out
xorl
clc
cltd
loop
ds
xlat
fmuls
movsl
add
cwtl
cmpb
int3
jb
test
test
push
stos
adc
cli
inc
data16
adc
push
xchg
xor
ret
iret
cltd
stos
shrl
mov
mov
mov
in
sub
jg
mov
clc
lock
clc
sub
xor
ljmp
or
mov
inc
xor
xchg
xchg
stc
push
les
add
lds
in
pop
movsb
jae
sbb
hlt
cwtl
mov
add
popa
add
out
xchg
jle
out
adc
inc
inc
mov
rcrl
ret
xchg
pop
hlt
pushf
sub
rcll
sub
jg
add
adc
data16
jle
test
and
jb
les
aad
xchg
inc
lods
in
push
sub
jo
mov
jmp
push
or
dec
dec
cli
in
jmp
lcall
mov
jo
inc
stos
xchg
jge
shll
sub
test
xchg
pop
bound
repz
xor
xor
testl
cmc
lcall
pop
scas
pop
bound
dec
and
pop
jb
sbb
xchg
movsb
addr16
aaa
ret
cwtl
pop
adc
mov
jge
movsl
xchg
aaa
cld
pop
jge
cltd
inc
sub
push
xor
cmpsl
pusha
sbb
dec
leave
xchg
leave
mov
sahf
fwait
sahf
cmovg
fwait
in
lods
loope
xchg
insb
mov
cmp
pop
add
and
enter
pop
jge
int
fcoml
aad
bound
mov
cmp
sti
popf
outsb
fisubrl
mov
shll
scas
in
je
enter
dec
cmpsl
pop
fs
sbb
xchg
inc
xor
jecxz
les
cmpsb
mov
cs
jno
subl
out
jns
sub
add
xchg
sbb
lods
cbtw
in
scas
or
adc
pop
xchg
outsl
sahf
pop
stos
out
out
sbb
movsb
lret
inc
and
xlat
scas
hlt
test
sub
int3
jnp
mov
push
push
sub
sti
cmp
push
mov
fwait
xor
lret
ja
push
js
iret
dec
insl
fsubrl
pop
push
sub
lahf
xchg
cmpsl
sub
pusha
xchg
jno
addr16
mov
sbb
aad
pop
xchg
cmp
es
imul
push
jl
movsb
imul
and
int3
lcall
cmp
pop
mov
repnz
add
push
sbb
xchg
xor
cwtl
dec
fdivl
cmp
in
mov
or
lea
lods
ja
push
imul
jnp
outsl
mov
es
in
add
jge
cmp
fisttps
sbb
das
pusha
cmpsl
sub
outsb
push
adc
mov
imul
and
xor
add
aad
xchg
mov
push
sub
ljmp
cs
xor
jp
test
xlat
es
in
stc
jg
xchg
daa
lods
jb
lcall
sahf
adc
aam
testb
fnstsw
pusha
sbb
xlat
mov
xlat
inc
js
fcoml
and
mov
enter
dec
sbb
fildll
inc
xchg
add
stos
aad
push
lcall
pop
dec
inc
fsubs
xor
adc
mov
mov
ljmp
shl
ss
arpl
scas
lea
outsl
push
push
add
dec
xchg
js
enter
lds
lods
xchg
xchg
push
and
mov
mov
icebp
iret
rorb
lret
clc
dec
pop
jle
es
cmc
leave
pushf
xor
mov
fs
push
fwait
gs
cmp
loopne
mov
hlt
and
movsl
adc
lods
movb
iret
pop
cmc
pop
sub
inc
pop
dec
sbb
rcl
inc
pop
mov
mov
cmc
sbb
xchg
cli
ds
dec
daa
popf
stos
nop
shlb
cmpb
aam
pop
sub
inc
push
fstpt
movsb
adc
mov
sub
push
daa
xchg
dec
adc
dec
cld
cs
jp
mov
xlat
ds
mov
push
cmp
ret
jp
sub
mov
jb
xchg
mov
repnz
jae
outsl
or
mov
xchg
bound
jmp
movsl
jb
popf
ds
and
push
push
xchg
mov
in
cmp
js
mov
dec
cli
mulb
pop
pop
xchg
mov
add
jne
test
sbb
and
jg
mov
xchg
das
pop
xchg
xor
call
cmp
mov
push
scas
push
add
aam
cmpsl
outsb
lods
inc
cmp
les
cmpsb
movsb
lret
dec
adc
scas
jb
cmpl
testl
pop
enter
add
cli
cmovo
js
sub
fs
stos
lea
add
ficompl
inc
xor
fstpt
cld
jecxz
mov
nop
sbb
mov
cmp
mulb
aad
bound
xchg
pop
mov
and
cli
mov
add
inc
sub
mov
push
push
pushf
push
xor
xchg
xor
add
ret
or
imul
pop
lock
lret
xchg
push
int
jno
cwtl
dec
and
push
and
out
inc
or
push
aas
cmp
jecxz
out
ds
mov
test
inc
jbe
aad
mov
cs
pop
and
out
int3
mov
jbe
dec
mov
xchg
pop
dec
lret
mov
cmp
lcall
cli
dec
push
dec
dec
aas
cmpsl
jno
les
pop
inc
decl
aaa
jno
mulb
sti
ds
inc
mov
icebp
mov
aad
sbb
mov
popa
decb
mov
nop
imul
fnstcw
repnz
stc
fists
test
rolb
mov
fwait
sub
cmp
dec
idivb
cmp
xchg
mov
mov
jns
jle
pop
stos
mov
add
fbld
icebp
adc
clc
es
and
loop
adc
mov
push
dec
inc
cli
xor
adc
adc
or
icebp
lods
or
sahf
sub
cmp
pop
xor
xlat
jp
xchg
inc
jle
int
leave
xor
pushf
adc
ljmp
xor
or
sbb
loope
adc
mov
mov
stos
sar
xor
jnp
xchg
dec
frstor
ja
loop
inc
xchg
jp
test
inc
les
aam
fdiv
clc
mov
fwait
mov
js
scas
xchg
cs
popf
pushf
shlb
dec
jp
sbb
xchg
aam
bound
pop
cmp
cmpsb
pop
inc
inc
sbb
mov
dec
push
jbe
mov
inc
dec
test
insl
pop
fstl
sub
adc
fdiv
loope
call
jg
cmc
jg
pop
sarb
pop
mov
lret
fldl
incl
in
lock
push
add
dec
das
mov
outsb
int
lret
mov
inc
sbb
xchg
xor
aaa
pop
insb
rol
cmpsl
call
loopne
cmp
add
pop
orb
fidivs
add
shr
jo
pop
inc
fwait
out
test
pop
sub
es
adc
mov
mov
push
adc
mov
sbb
mov
jb
popf
out
mov
mov
jge
shrb
stos
arpl
imul
aam
jbe
push
add
sbb
insl
xor
adc
enter
lock
sub
sbb
sbb
add
cmp
xor
iret
adc
jb
popf
add
xchg
jne
scas
adc
mov
inc
outsb
jnp
sahf
dec
out
mov
sub
and
clc
xor
mov
insb
jg
mov
xchg
fstpt
loop
mov
in
fs
add
pop
and
pop
xchg
gs
dec
cltd
sbb
pusha
mov
pop
jo
dec
mov
test
add
xchg
jmp
push
xor
fstpl
insb
lret
jl
ss
fbld
test
aad
add
push
cmpsb
insb
adc
xor
xchg
mov
addl
push
pop
cmp
push
xchg
push
sub
stos
and
push
bound
rcrl
xchg
xorl
in
leave
popf
aas
jns
adc
mov
pop
xor
pop
scas
jecxz
mov
pop
clc
jnp
or
sbb
cmpsl
lahf
outsb
insl
sbb
in
xchg
test
pushf
cmp
add
pop
subl
mov
addr16
xchg
jl
sbb
ror
mov
mov
pop
jecxz
jo
push
outsl
sub
dec
pop
je
fisttps
or
fxtract
sbb
xor
call
outsl
lcall
rcrb
sbb
pop
rcrl
mov
mov
aaa
mov
dec
enter
sarb
pop
and
mov
loop
fidivl
scas
sub
xor
pop
js
std
dec
out
inc
outsb
bound
jecxz
pop
movsl
adc
lret
jo
cmpsb
int
pop
sbb
xchg
cli
mov
out
push
in
aas
push
add
add
jb
jnp
sbb
aad
fnstenv
add
cmp
mov
jp
jl
hlt
scas
push
lods
ss
mov
jp
hlt
fidivrs
adc
clc
inc
xor
adc
rcr
sbb
sub
inc
fmul
xchg
push
cmp
xchg
addl
jo
adc
adc
mov
push
aad
xchg
mov
mov
mov
out
in
ret
sbb
jp
dec
pop
jnp
sarb
clc
out
cld
lret
push
and
fidivl
mov
mov
jecxz
inc
push
repz
mov
shrw
add
scas
xchg
pop
shrb
mov
jmp
sub
xor
nop
cmpsb
or
mov
repz
mov
cmp
xlat
nop
xor
xchg
mov
pop
or
mov
xchg
sub
adc
dec
in
mov
ss
pop
fdivs
adc
jp
stc
in
nop
sub
stos
dec
rcr
pop
add
mov
sub
rclb
jnp
inc
inc
push
into
pusha
inc
mov
dec
xchg
push
mov
nop
xchg
dec
push
sbb
push
add
jp
in
add
nop
add
sbb
gs
jle
sbb
ficomps
jmp
mov
ja
dec
pushw
out
gs
stos
xchg
inc
jmp
push
enter
sub
mov
sbbb
jns
es
dec
js
sbb
xchg
inc
pop
mov
or
mov
dec
les
and
xlat
cmp
dec
jle
or
xor
negl
insl
loopne
sub
call
cltd
icebp
leave
dec
push
xor
lret
ss
jecxz
sbb
addr16
out
pushf
xlat
mov
int
shll
lds
cmpsl
fimull
adc
leave
jne
sbb
push
scas
pop
arpl
test
and
out
xchg
js
sbb
push
ljmp
out
pop
pop
inc
add
adc
push
scas
inc
repz
dec
adcl
pushf
push
push
cltd
mov
lahf
inc
stos
xchg
lret
cwtl
push
xlat
jp
sub
scas
push
out
cmp
popa
xchg
xchg
mov
or
sbb
add
pusha
pop
out
repz
or
sub
mov
rorb
mov
into
adc
adc
or
ret
seta
lods
decl
test
sbb
inc
inc
jge
lock
mov
fildl
into
push
mov
mov
movntq
shlb
mov
std
mov
cltd
xor
mov
pop
ror
push
pop
out
ficompl
inc
ret
fstpl
push
sbb
ss
push
popf
xor
outsb
vmovaps
hlt
mov
pop
pop
mov
inc
mov
pusha
pop
fdivs
mov
sub
inc
insb
mov
cs
stos
fs
lret
jne
or
add
dec
repnz
and
aas
seta
mov
add
xchg
jnp
and
add
jns
repnz
jns
xor
dec
int3
cmpl
sub
or
outsb
dec
aam
or
pop
inc
push
cld
cwtl
hlt
mov
rorl
stos
cmp
test
les
push
insb
popf
scas
loop
mov
dec
add
dec
inc
jp
into
dec
notb
and
loope
out
faddl
lods
call
sbb
lods
in
dec
and
add
pop
int3
insb
enter
mov
scas
add
call
test
sub
pushf
insl
jns
mov
movb
lock
push
pop
inc
movsb
mov
xor
pop
dec
push
jne
lret
jp
rorb
lcall
shlb
rorb
push
ret
mov
ds
dec
lods
int3
loopne
mov
or
aaa
mov
sbb
dec
arpl
addr16
inc
push
addl
mov
mov
testb
aam
cmp
out
xor
mov
dec
pop
xchg
push
daa
push
pop
scas
rcrl
adc
mov
js
mov
popa
and
insl
xor
ja
enter
stos
adc
jb
shlb
stc
lods
push
sub
subl
je
adc
rcl
mov
lret
add
cltd
scas
sbb
mov
dec
jle
in
cs
aam
jmp
jns
sub
inc
pop
lods
adc
mov
out
jge
or
daa
popa
xchg
pushf
lahf
test
push
call
stos
add
jns
adc
mov
mov
add
xor
test
stc
sub
jl
sbb
sub
in
shll
int
xchg
in
cwtl
mov
pusha
or
or
ret
call
mov
orb
or
incb
adc
mov
mov
pop
icebp
orl
fwait
jge
mov
and
dec
dec
pop
inc
cld
cmp
loope
dec
jecxz
inc
lahf
aas
test
sub
fcmovne
and
or
mov
or
pusha
sbb
sar
icebp
push
dec
mov
ffreep
lret
sub
adc
push
divl
test
ds
cmp
mov
scas
in
and
movsb
jp
enter
out
add
sar
fs
jg
dec
cmpsl
pop
outsl
mov
popf
pop
es
jge
popfw
jbe
lahf
lcall
fwait
ret
stc
in
push
iret
jg
mov
and
mov
outsb
lcall
arpl
ss
lds
int3
xchg
rorb
jmp
xor
subl
dec
lret
lds
les
lods
sub
mov
mov
jmp
and
cmpsl
ret
xor
stc
int3
icebp
pop
push
mov
mov
rorb
and
loopne
sub
imul
fldl
xchg
adc
xor
mov
mov
xchg
dec
or
dec
push
pop
dec
jo
out
xchg
jne
bound
or
jnp
and
jle
loop
push
jle
xor
test
rcrb
ds
clc
loope
jnp
and
iret
mov
add
int
cli
dec
sub
xchg
lock
ficompl
mov
dec
icebp
cld
roll
gs
and
push
cmpsb
push
ss
int
lret
dec
ret
movsl
mov
dec
fidivrl
shrl
mov
fcompl
lods
adc
push
loop
ja
cli
insl
inc
addl
test
lcall
or
lret
jnp
roll
test
push
inc
repnz
pop
adc
jae
jno
push
pop
loope
xchg
mov
sarl
xor
es
adc
cmp
adc
pop
test
imul
and
inc
mov
imul
jmp
fdivs
dec
pop
push
and
mov
mov
cltd
jle
xchg
mov
cmp
inc
les
push
adc
cli
adc
xor
push
adc
sbb
dec
fnstcw
pusha
lcall
lock
adc
mov
pop
mov
lret
pop
and
push
aad
mov
adc
xor
inc
or
rorb
cmp
outsb
outsb
in
jnp
cld
cmpsl
push
sarl
xchg
add
cmpsb
mov
adc
sti
icebp
in
ret
divb
fsubs
ret
arpl
iret
mov
add
lahf
xchg
fadds
push
sub
jne
cs
addr16
mov
aaa
adc
insl
scas
bound
or
fs
fisubrl
sbb
adc
mov
int
fldcw
inc
sar
xchg
inc
jo
aam
stos
inc
push
mov
add
and
out
dec
jecxz
daa
mov
sbb
mov
lahf
in
cmp
jmp
in
jns
jecxz
outsb
cli
push
sub
push
movsl
fisttpll
ret
fwait
sbb
add
inc
jmp
sbb
mov
mov
lods
mov
fs
mov
cmp
cmp
aad
insl
jno
int3
lcall
jl
inc
pop
testb
lock
xchg
push
or
js
lea
inc
lds
cmp
cwtl
and
rcrb
sub
fistl
mov
arpl
sub
mov
add
insb
outsb
and
push
lock
inc
cmp
dec
lock
shrb
and
fsubl
push
push
pop
jno
adc
jmp
xchg
adc
js
test
lret
push
int
push
pop
arpl
pop
shr
xor
je
ret
into
ljmp
imul
les
push
adc
mov
cmpsl
rcrl
inc
sub
mov
scas
and
es
inc
rol
adc
pop
inc
fcomip
and
jl
stos
inc
and
insl
dec
pop
sub
mov
in
dec
add
and
cmpsb
mov
sbb
repnz
inc
fildl
aaa
xchg
bound
mov
lcall
pushf
mov
and
stc
jo
dec
lds
xchg
push
inc
or
xchg
imul
or
inc
or
cmp
cmp
imul
mov
in
push
sbb
sbb
push
addb
sbb
insb
dec
mov
sbb
sub
ljmp
adc
add
jecxz
aad
or
mov
cmpl
test
in
xchg
inc
xor
sahf
repnz
mov
decl
and
mov
cmp
push
les
fcomps
stc
jmp
jo
jmp
out
out
dec
shrb
out
jo
hlt
sub
test
jbe,pn
gs
sbb
dec
rcr
push
mov
roll
test
out
inc
lods
out
adc
jno
sub
arpl
mov
aad
xchg
push
mov
repz
insl
push
dec
sbb
cmc
js
notl
clc
movsb
xchg
int
sub
sbb
sbb
cmpsb
cmpsb
lahf
jo
mov
cmp
es
ss
sub
xchg
adc
dec
push
xor
in
xchg
les
into
lods
clc
cmp
lds
mov
and
inc
or
push
sub
fdivrl
inc
jle
sbb
xor
dec
stos
ja
arpl
jmp
pushf
cmp
mov
jmp
jp
sub
movsbl
mov
imul
insl
jl
mov
sarl
out
das
outsl
cmp
decb
je
cmp
mov
mov
mov
ss
shlb
jmp
xchg
and
popf
xchg
add
jle
mov
pop
add
and
fidivrs
iret
sub
rorl
je
mov
cmp
mov
cli
pop
ja
outsb
test
nop
outsl
xchg
test
jb
mov
lds
fadd
int
dec
lods
mov
push
ret
xor
push
sbb
and
xchg
stos
dec
sbb
iret
mov
lret
fmuls
cmp
push
sti
pop
daa
xor
lds
sbb
mov
add
imul
insl
ret
outsl
mov
push
pop
int3
sbb
pop
clc
jle
ja
mov
xorl
loopne
mov
out
jle
loopne
or
test
fcmovu
mov
orl
daa
mov
leave
mov
roll
test
sub
fildl
mov
xchg
jb
cmpsl
mov
outsb
or
dec
mov
sub
hlt
int3
cmp
push
xor
mov
push
ja
mov
scas
hlt
ljmp
adc
lcall
lods
add
and
je
adc
xchg
stos
push
xor
imul
mov
daa
clc
xlat
mov
pop
xlat
pop
mov
ficompl
lahf
xor
ror
pop
pop
stc
std
push
lcall
dec
scas
lret
mov
add
jns
addl
jns
add
lock
mov
stos
add
std
in
clc
addr16
push
aad
xor
gs
dec
ja
int
loop
lock
dec
cmp
inc
jbe
cmp
fcoms
in
mov
test
fsubl
inc
call
movsb
mov
out
jl
mov
push
in
sbb
call
mov
in
dec
adc
call
cmp
sbb
mov
jle
jb
sahf
popl
jg
addl
or
aam
xchg
imul
mov
lea
fists
sub
stc
cmp
push
aam
or
jmp
add
push
sbbl
dec
and
ds
mov
mov
enter
adc
and
sbb
js
mov
test
fsubrs
cmp
xchg
mov
aas
ret
mov
mov
popa
movsb
fisubrs
aas
push
add
scas
repnz
hlt
mov
jl
mov
jae
adc
iret
mov
in
loop
bound
mov
mov
sub
add
into
lods
shrb
das
pop
ror
add
sbb
popf
mov
sbb
jne
add
mov
loopne
pop
cmp
and
pop
insb
adc
sbb
push
xchg
out
clc
add
pop
fcoms
jle
mov
and
sbb
test
adc
xor
xorb
repz
push
pop
scas
or
call
mov
subl
push
pop
fisubs
repnz
mov
icebp
shll
sub
in
mov
movsl
decl
jb
fistpl
js
loope
daa
idivb
pop
cmp
movsb
push
xlat
lds
cmp
lods
sub
cmp
out
fisubl
shlb
mov
mov
dec
mov
ret
loop
xor
scas
push
repz
pop
scas
jge
lahf
pop
xor
add
scas
xor
out
or
cmp
adc
mov
jnp
fmull
inc
xor
call
adc
add
fistpl
repnz
dec
inc
nop
jns
and
js
lods
in
mov
movsl
xchg
push
add
test
xor
jecxz
scas
and
fisubrl
xchg
ds
rclb
and
dec
pop
push
mov
ret
xor
mov
sbb
fdivs
fistps
sti
mov
jo
dec
mov
scas
dec
out
dec
jnp
cmpsb
mov
mov
gs
pop
bound
push
mov
loope
and
in
ss
je,pn
gs
lret
and
jg
pop
cmp
mov
sub
sub
jbe
push
dec
mov
in
push
lock
fs
andb
sbb
dec
dec
xchg
ljmp
inc
push
or
lods
jne
mov
les
push
fwait
popf
lcall
aas
inc
inc
mov
push
mov
inc
stc
cmp
test
mov
int3
sub
mov
pop
scas
in
xchg
stos
mov
lret
mov
pusha
mov
lret
incl
lret
out
adc
int3
dec
popf
lret
push
cltd
icebp
in
mov
inc
inc
pop
lea
mov
inc
pop
sbb
inc
xor
push
and
cmp
insb
test
addb
inc
xchg
data16
lds
mov
xchg
nop
push
outsl
test
cmp
outsb
push
xchg
outsl
lea
les
jecxz
stos
shlb
das
stc
stos
sub
pop
jne
cmpsl
andb
and
fstps
jns
adc
popf
lret
pop
or
daa
not
mov
fxch
pop
addl
pusha
pop
push
testb
mulb
scas
sahf
push
mov
lods
daa
xor
hlt
fstps
jae
jae
mov
mov
xchg
ret
push
dec
mov
cmp
stos
sub
adc
scas
addl
mov
iret
lret
sti
adc
fisttpll
movsl
aam
fists
bound
lock
jb
pop
jbe
xor
aam
fistps
xchg
out
cmp
je
enter
popa
push
cltd
or
cmpsl
rcr
lods
xor
leave
fisubrs
mov
mov
ljmp
jmp
xor
daa
jo
addr16
rcr
push
xlat
push
xor
mov
iret
cmpsb
pop
aad
mov
nop
or
mov
add
lcall
jecxz
cmc
push
add
mov
dec
xchg
movsb
shll
cmp
mov
fmulp
cmp
inc
iret
add
mov
cmc
sub
lcall
sbb
test
mov
jae
jl
adc
iret
xchg
mov
popa
mov
mov
xchg
jge
xchg
sub
jne
scas
mov
jne
and
into
into
lock
cltd
pop
push
cmp
pop
data16
push
dec
push
shrb
imul
dec
pop
repnz
push
dec
movswl
fs
pop
xor
in
ret
loope
mov
and
mov
sbb
xchg
imul
sub
movb
push
fisttpll
jno
das
adc
push
push
pop
cmc
lock
mov
js
loop
in
pusha
push
pop
cwtl
inc
ja
insb
sub
aad
pop
adc
adc
mov
test
and
jle
mov
pop
in
cwtl
push
mov
movsb
sti
xlat
nop
adc
add
hlt
and
scas
jo
sbb
ja
out
xchg
lods
jne
fldt
ss
pop
mov
clc
sbb
cmp
sub
xor
out
icebp
and
lods
or
addl
mov
jp
in
movb
dec
mov
xor
and
repz
je
dec
xchg
loopne
mov
mov
push
jbe
and
insl
je
outsb
out
ss
jnp
xchg
add
add
xor
sbb
adc
loop
xor
lahf
out
add
lret
inc
jno
mov
outsb
cmp
mov
push
mov
adc
xchg
inc
lock
pushf
xlat
cmp
fldcw
mov
jb
out
push
jmp
push
outsl
and
loope
mull
xor
fs
popa
dec
cmp
insb
jle
jge
scas
adc
or
jns
fdecstp
stos
pop
fistpll
shll
push
aaa
pop
scas
lret
push
xchg
push
jmp
xchg
mov
adc
jp
imul
sub
add
ljmp
inc
cmpsb
push
mov
ret
aam
mov
or
or
inc
mov
jmp
movaps
xchg
shrb
cli
sti
ds
bound
bound
gs
imul
cmp
jl
jne
mov
jns
pop
outsl
xor
arpl
jmp
imul
test
fst
push
cld
or
inc
cs
into
or
add
jne
mov
sti
pop
jne
adc
and
cmp
xor
js
adc
lret
rorb
xchg
xchg
mov
push
lret
stos
fmul
cmp
pop
pushf
push
jecxz
jge
fisubrs
sub
push
mov
cmpsb
xor
inc
mov
xor
add
inc
repnz
lret
arpl
ss
sub
cld
ljmp
or
add
pop
cmp
popa
pop
mov
xchg
push
mov
inc
outsb
out
pop
dec
sbb
xchg
xor
sub
loopne
gs
xchg
fdivl
pop
push
popf
lcall
dec
adc
adc
in
rorl
inc
popf
repnz
sbb
sarl
arpl
pop
xchg
in
jmp
jne
adc
rol
shll
cmp
lock
hlt
lea
inc
fldcw
repz
pop
rorb
daa
test
lods
jbe
fadds
fnstcw
mov
sbb
sbb
cwtl
sbb
push
fisubl
adc
leavew
lahf
sub
lret
mov
and
push
xchg
inc
jb
cmp
dec
xchg
and
xor
arpl
pop
mov
gs
xor
fs
das
push
enter
mov
cmp
push
push
in
inc
and
pop
add
mov
sahf
adc
gs
rol
andb
inc
add
or
sbb
outsb
jge
and
sbb
jg
scas
shll
iret
lods
sub
inc
cmc
cwtl
icebp
dec
loope
cmpsl
pop
ficoml
lcall
push
cmp
movsl
mov
jb
sarl
xchg
mov
ds
cmp
and
mov
xchg
sbb
mov
jmp
inc
shll
cmc
lahf
rcll
cmp
mov
shlb
jns
push
mov
js
sbb
cli
int3
inc
mov
jge
xchg
fs
rcll
add
addl
cmpsb
andl
sbb
mov
loope
fsubs
push
or
xor
or
lahf
imul
jae
ds
stos
mov
dec
mov
and
mov
adc
jl
xchg
pop
aaa
pop
out
popa
xchg
xchg
ja
out
jecxz
xchg
lret
or
or
hlt
in
stos
or
hlt
cmc
int3
xchg
sub
cmc
push
add
aaa
xor
mov
dec
dec
push
out
mov
push
add
adc
or
gs
add
inc
jle
orb
push
stos
or
and
jl
fmull
loop
lods
dec
mov
sub
mov
xchg
jnp
dec
testb
mov
and
fdiv
ficompl
fcmovnbe
jge
dec
add
or
aam
sub
testb
mov
pop
xchg
sub
cmp
aam
enter
stc
inc
xor
gs
ficoml
orb
or
cld
or
pop
movsl
test
or
fmull
loope
data16
mov
pop
data16
out
dec
mov
push
push
dec
fnsetpm(287
jmp
int3
mov
enter
sti
push
mov
xor
cmc
xor
dec
dec
movsl
add
push
push
xchg
dec
xor
aad
or
xchg
js
xor
negb
ljmp
in
or
stos
xor
stos
jno
imul
sbb
xchg
ret
sbb
rorb
cmp
sbb
pop
ljmp
loop
mov
mov
fnstenv
adc
xor
inc
in
mov
or
fcoml
pop
shrb
stos
cltd
jbe
mov
xor
mov
cwtl
adc
mov
scas
jbe
pop
in
dec
orb
inc
mov
inc
push
aam
icebp
cmp
jmp
cmpl
fimull
call
adc
jae
rcrl
sbb
cld
out
and
bound
dec
mov
aaa
cli
xchg
mov
out
aam
adc
in
mov
jae
xor
ror
loopne
or
dec
andb
cmpsl
mov
inc
or
in
out
fwait
and
xchg
push
adc
fldenv
cmpsb
xchg
daa
dec
call
testl
pushf
add
ja
pmulhuw
xchg
dec
loope
cmp
outsb
xchg
sbb
lea
dec
jmp
popf
mov
pusha
push
mov
mov
shlb
xor
js
outsl
pop
jo
xchg
dec
inc
or
xchg
mov
adc
dec
mov
cmp
scas
fsub
mov
push
xor
pop
cmp
or
cmp
cli
push
es
adc
mov
pcmpgtw
mov
xlat
ret
xchg
adc
rorb
lds
cmp
adc
out
pop
mov
push
movsl
jecxz
and
cli
or
repnz
xor
aad
jns
data16
jno
ljmp
into
fcomps
shll
jle
sbb
mov
mov
adc
or
and
sbb
dec
inc
jecxz
xor
mov
mov
mov
outsl
push
decl
xchg
movsb
mov
hlt
dec
pop
and
inc
mov
cmpsl
stos
inc
jmp
shlb
push
test
aaa
jns
icebp
push
pop
sbb
push
cmp
pushl
out
pop
sub
test
mov
dec
xchg
shlb
aad
fistpll
mov
scas
mov
imul
popf
sub
mov
movsb
add
mov
mov
out
cld
xor
inc
cli
pop
icebp
mov
cmp
icebp
sub
push
mov
sbb
bound
fisttpll
mov
xchg
outsb
mov
push
sahf
jno
mov
or
xor
mov
and
mov
jns
jecxz
pop
jb
sbb
xchg
lock
jno
push
jg
or
mov
mov
jnp
addr16
lret
push
jmp
adc
pop
cmp
cmpsl
repnz
inc
in
scas
xor
jae
aad
dec
shl
mov
popf
je
xchg
cld
dec
mov
mov
mov
cmp
incb
hlt
jmp
ds
je
mov
insb
push
cmp
sub
test
sbbl
sub
xlat
jns
lods
lods
xchg
fdiv
dec
jbe
bound
lods
jle
test
jge
je
and
add
mov
icebp
push
mov
ds
movb
adc
adc
lahf
push
xchg
test
xchg
xchg
or
lcall
sarb
adc
mov
cmpsl
scas
insb
inc
xchg
data16
nop
dec
lds
fwait
and
mov
into
out
or
sub
sti
fnstsw
dec
inc
js
adc
stos
mov
mov
cmp
ret
jbe
xchg
push
fldenv
fwait
xchg
sub
mov
inc
xchg
divl
idivb
cmc
movsb
adc
hlt
or
pop
xchg
jp
dec
arpl
inc
xchg
in
js
jbe
jg
cmpsl
loopne
and
sub
int
jnp
sarl
das
sbb
jbe
cmpsl
cmp
cltd
lcall
test
das
das
dec
push
jbe
xchg
shll
frstor
and
jbe
pop
cmp
or
or
mov
cmp
jl
or
test
es
inc
clc
cwtl
outsb
aam
int3
lea
adcl
xchg
aam
or
lock
loopne
sub
out
inc
pop
cmp
or
movsl
lds
aam
push
jmp
dec
sub
push
test
cmp
xor
jecxz
or
mov
cmp
filds
lods
insl
data16
out
xchg
aam
adc
clc
xor
inc
rclb
out
cltd
lea
mov
dec
pop
jge
dec
mov
pop
test
adc
imul
lea
add
inc
nop
xor
sarl
cmp
cmp
stos
das
mov
jns
mov
es
push
pop
and
test
cmc
call
jb
xchg
and
xchg
mov
in
popf
das
ljmp
mov
lcall
loopne
clc
mov
push
mov
jae
mov
in
push
int
inc
andb
push
push
fsubrs
mov
aad
subb
sub
insl
or
xchg
adc
test
loopne
add
subl
std
jecxz
and
lods
mov
decb
ja
fsubs
js
sbb
repnz
mov
pop
xlat
mov
stos
scas
and
xchg
mov
js
mov
rcl
out
test
lcall
mov
add
push
pop
cmpsl
or
fnstenv
ja
jg
aaa
cmpsb
fs
add
das
or
lds
adc
and
mov
int
icebp
push
jne
mov
dec
jbe
xor
cmp
cmc
mov
jle
xchg
stos
icebp
imul
mov
std
xchg
addb
bound
nop
push
lret
fmull
mov
mov
push
aam
xor
rclb
adc
or
mov
jb
push
imul
dec
fsubs
lahf
jp
dec
sbb
addr16
xchg
aaa
cmp
adc
xchg
mov
xchg
ds
sub
fldcw
xchg
xor
push
fstp
hlt
leave
cmp
cld
addr16
popf
jl
je
jbe
jge
pop
push
push
scas
ret
cwtl
dec
xchg
inc
loop
movsb
fidivs
sub
push
insl
add
jne
adc
xchg
pop
fcomi
pop
jne
jmp
and
fists
cmp
mov
pop
insl
enter
rcl
out
das
and
jmp
rcr
mov
push
outsb
ljmp
jnp
and
inc
sbb
and
les
or
mov
xchg
or
je
mov
cmp
mov
sbb
push
adcl
pop
lret
xchg
mov
daa
inc
inc
ljmp
aam
sti
push
inc
mov
pop
xor
fstp
sbb
jnp
jg
push
mov
pop
xchg
jp
adc
inc
outsb
xchg
data16
gs
cmpsl
mov
mov
push
lret
lahf
pop
jl
push
add
mov
jge
sarb
repnz
lahf
enter
nop
add
push
movsl
stos
pop
and
jle
dec
mov
iret
outsb
es
xor
enter
arpl
arpl
or
push
test
jle
cmovno
enter
push
cwtl
adc
nop
or
mov
xchg
dec
mov
adc
xchg
jg
push
cltd
jno
fstp
mov
fwait
stos
sti
stos
stos
inc
nop
lock
cmp
push
lea
ja
insb
fdivs
addr16
xchg
adc
jb
inc
jo
adc
dec
xchg
stc
adc
jp
mov
iret
mov
cli
popf
xchg
jns
xchg
sbb
pop
shlb
mov
scas
mov
cld
sbb
repnz
xchg
test
cld
inc
mov
or
or
cltd
cmpl
sbb
pop
fwait
push
xor
test
lret
outsb
and
add
xchg
subb
sub
or
pop
js
mov
jnp
push
call
jge
lcall
push
in
mov
xchg
scas
pusha
or
push
add
inc
pusha
push
inc
add
test
ret
popa
sbb
or
mov
lret
gs
je
popa
int
int
imul
int
or
xor
neg
or
xor
xor
jge
mov
imul
stc
pop
iret
aam
or
jno
lea
push
cld
je
add
rcll
sti
aaa
test
shll
jmp
nop
lcall
pop
imul
orl
loope
dec
sahf
call
shl
push
xor
insb
add
inc
loopne
mov
lret
shll
imul
mov
aaa
inc
xchg
sbb
scas
mov
jmp
pop
fstl
lret
mov
pop
push
dec
push
pop
push
xchg
ss
jmp
outsb
loopne
pop
mov
and
divb
adc
mov
sub
mov
inc
push
iret
pop
ret
test
loop
and
and
femms
icebp
jl
xchg
mov
fdivrs
fidivrl
push
aam
fdivr
lods
adc
sub
lea
jnp
push
testb
add
cltd
push
lcall
mov
mov
push
fs
jge
xchg
dec
push
fsts
std
adcb
or
cmp
cmpb
push
cmc
cmpb
cmpsb
cmp
out
add
lcall
dec
scas
xchg
int
repz
jb
sbb
pop
and
in
scas
stos
fiadds
imul
push
sbb
mov
aaa
cmp
add
in
add
pop
sti
push
cltd
or
pusha
mov
add
mov
xor
mov
fsubrs
push
ljmp
out
or
out
shll
jno
jp
loopne
popa
and
inc
sub
jno
mov
cmp
in
in
adc
cwtl
repz
adc
inc
mov
push
push
mov
add
push
mov
shrl
les
mov
mov
hlt
and
lahf
or
scas
loopne
dec
insl
mov
ss
addl
ficoml
pop
inc
lea
jmp
mov
arpl
nop
mov
bound
ret
shll
cltd
ret
adc
jno
mov
sbb
sub
mov
fcompl
dec
push
xor
sub
test
inc
mov
cmc
rcrl
loop
stos
mov
lds
in
cli
lret
fwait
push
adc
pusha
repz
addb
sti
jle
js
pop
and
and
inc
jle
loopne
xor
sub
pop
sti
dec
cmpsb
lock
mov
je
dec
push
int3
cli
pop
icebp
xchg
mov
aam
mov
fs
popa
mov
sahf
les
mov
out
sub
pop
jae
sti
cmp
inc
pop
sbb
or
xchg
in
inc
arpl
lock
jecxz
jne
and
testb
fdivl
adc
inc
or
fs
dec
loope
jae
cmp
sub
popa
add
lret
and
pop
mov
xor
hlt
cmp
popf
sar
lahf
xor
mulb
xchg
loopne
jg
jbe
pop
fiaddl
loop
jp
cld
out
ret
cmp
mov
sbb
test
mov
hlt
pop
xor
cmp
dec
mov
inc
sbb
or
rcrb
sub
or
faddl
add
leave
sub
adc
sbb
xor
mov
addr16
pop
mov
mov
dec
out
inc
inc
xor
adc
push
push
bnd
lds
mov
out
push
xor
pop
mov
sti
xchg
pop
clc
dec
mov
aad
jb
xchg
cmp
fcoml
mov
pop
pop
mov
sub
xchg
mov
test
jae
dec
inc
fdivrs
push
xor
jmp
lods
and
cmp
scas
shll
dec
dec
push
sbb
or
push
cmp
push
pushf
jmp
cmpl
lods
imul
sub
popf
negb
out
mov
and
sub
inc
call
js
pop
fldenv
mov
push
pop
inc
sbb
xor
addb
ljmp
rolb
push
lahf
mov
push
push
popf
jp
add
das
stos
js
ds
xchg
inc
xchg
hlt
jle
or
push
xlat
inc
adcl
aas
insb
rcll
xchg
and
shlb
jmp
and
pop
loope
push
loope
inc
xor
dec
push
dec
imul
shll
push
xchg
mov
jecxz
movsb
dec
xchg
adc
sub
push
push
inc
outsb
cmpsb
in
sbb
arpl
push
push
jno
xor
mov
pushf
fld
dec
sub
lods
ds
outsb
daa
add
and
aaa
inc
mov
pop
in
push
andl
or
push
xchg
jns
add
push
negl
xor
arpl
imul
inc
orb
mov
movsl
cmp
cmpsl
push
in
pop
xor
pusha
cmpsb
insl
scas
mov
sbb
sub
aas
stos
adc
out
cmp
mov
push
clc
inc
fnstsw
jle
ret
fwait
dec
jne
movswl
pushf
arpl
push
rcll
and
aas
leave
mov
lods
fistps
sub
aas
orb
repz
in
inc
adc
bound
movsl
pop
dec
lcall
jo
cli
jo
out
rcll
push
sbb
insl
sti
jle
arpl
lods
xchg
lahf
xor
sub
add
xchg
ljmp
pop
in
sbb
insb
xchg
pop
repz
xchg
mov
lahf
out
dec
cmp
push
adc
cmpsl
mov
inc
xacquire
movsl
test
loop
and
pop
lods
pop
movsb
add
mov
cmp
sbb
mov
inc
adc
cmp
notb
fucom
scas
scas
mov
sbbb
mov
jno
inc
popa
adc
adc
in
mov
adc
jecxz
cmp
xor
insl
and
pop
mov
xchg
pop
mov
push
xlat
dec
xor
popf
inc
fstl
mov
pop
adc
cmp
xchg
in
test
pop
ljmp
rclb
ljmp
and
mov
data16
xor
scas
mov
sub
ret
andb
stos
insl
roll
popf
fldcw
pusha
sub
scas
imul
sub
mov
rcl
arpl
imul
pushf
mov
pusha
decl
cmpsl
jl
inc
sbb
test
clc
jp
icebp
lret
lods
loope
cld
add
xor
mov
sbb
and
mov
das
sub
and
imulb
pop
out
inc
mov
loope
mov
fldl
add
dec
xor
mov
test
xchg
or
push
jp
xchg
in
std
xchg
nop
jns
sbb
gs
lret
fsub
push
pop
test
adc
mov
data16
push
push
inc
mov
movsb
dec
push
out
repz
mov
xchg
and
out
mov
test
add
out
iret
cs
inc
xorb
or
push
mov
sub
mov
mov
push
sbb
orl
jle
pop
inc
jl
sbbb
inc
loop
andb
sarb
lret
shr
and
mov
cmp
sti
xor
pop
cmp
xor
movsb
jg
out
leave
push
dec
push
jge
int3
imul
idiv
enter
pop
adc
adc
mov
mov
mov
add
adc
push
push
pop
and
cs
popa
mov
inc
popl
pop
cmc
cwtl
xchg
jns
inc
stc
or
pop
pop
xor
loop
add
loop
and
push
std
mov
xor
dec
mov
out
dec
cmp
rcrl
push
and
add
fsubr
insl
xlat
mov
leave
imul
mov
scas
scas
cmpsl
xchg
mov
fwait
xchg
mov
lea
popa
mov
sbb
pop
and
and
mov
or
movsl
fs
sti
sbb
mov
les
mov
fdivs
daa
sbb
andb
in
inc
adc
dec
scas
sbb
jmp
add
nop
stos
jmp
movsl
mov
dec
cmp
lea
xlat
and
pop
mov
push
mov
and
mov
mov
std
xor
mov
pop
or
popf
dec
data16
mov
out
xchg
xchg
mov
push
jb
imul
fsubrs
sti
das
cli
jmp
jae
add
cmc
inc
adc
xor
push
sbb
mov
push
adc
nop
and
leave
dec
or
add
inc
sub
lahf
iret
mov
xchg
movsl
gs
ds
jno
dec
pop
shlb
jecxz
inc
mov
lock
aam
jl
movsb
xor
and
xchg
inc
mov
insl
andb
dec
arpl
pop
iret
mov
fidivrs
pop
push
dec
icebp
in
mov
adcl
sbb
mov
in
push
loopne
xchg
adc
movsl
sub
ret
lock
adc
push
push
in
inc
jne
sbb
or
cs
push
lods
xchg
push
js
or
xchg
cmpsb
xchg
repz
aas
lds
jl
fs
and
test
mov
pusha
jle
sub
jbe
cmpsb
cs
pop
cli
and
inc
add
loope
insl
xchg
lret
sbb
bound
xor
orb
sahf
ret
subl
ds
mov
jae
jo
add
cmpsl
jmp
rcrb
pop
fnstsw
sbb
or
push
cld
cwtl
xchg
cwtl
sub
push
sbb
sbb
sbb
lods
rcrb
into
clc
adc
aas
loopne
fidivs
adc
pop
mov
nop
and
stos
pusha
jne
ljmp
push
sahf
ret
js
fsubr
scas
fstps
ret
adc
test
mov
ljmp
in
jno
mov
inc
push
dec
cwtl
rcr
lds
cmc
decl
xor
push
pop
pop
cmp
inc
call
stc
sahf
or
mov
test
or
xchg
add
dec
pop
jge
icebp
adc
arpl
mov
mov
int
lcall
or
mov
int3
ret
push
out
popa
in
cwtl
movhps
scas
dec
aam
mov
mov
repz
mov
jb
test
cmpsl
and
pop
es
data16
rcr
adc
sbb
mov
inc
daa
sbb
cmc
cmc
mov
leave
sbb
push
mov
jae
add
jo
popf
push
mov
sti
inc
ds
imulb
test
ret
mov
xchg
mov
jae
idivb
divl
mov
mov
adc
sub
and
pop
jl
add
mov
mov
test
mov
inc
loop
test
in
cmc
call
scas
jo
xchg
xor
xchg
dec
xchg
mov
pop
pop
sbb
push
jmp
ret
pop
xor
adc
add
push
jle
nop
jge
in
xor
cld
shll
cld
rorb
pop
lret
pop
inc
pop
or
push
sub
fistps
js
xlat
cmp
mov
add
les
sbb
es
dec
aas
lock
push
mov
cltd
movsl
cmp
sub
add
cltd
ds
dec
or
dec
push
dec
loopne
js
xchg
les
sti
mov
mov
arpl
dec
js
push
in
dec
push
jb
std
and
xor
cld
popa
js
pop
inc
orl
addl
fstl
jge
out
adc
aaa
push
lds
ret
dec
pop
push
xchg
pop
sbb
cmp
std
adc
xor
subb
jbe
or
in
cli
test
add
pushf
fwait
adc
inc
leave
call
scas
scas
loope
loopew
push
fistpll
add
jbe
inc
mov
mov
ja
repnz
cmp
into
fimull
mov
out
out
icebp
cmp
imul
mov
or
rorb
in
or
ds
jmp
dec
xchg
xchg
add
xor
mov
repz
call
mov
push
and
add
pop
inc
jae
xchg
lods
cwtl
jle
push
push
adc
pop
inc
adc
pop
insb
stos
cmpl
outsl
aam
out
notl
sahf
std
test
adc
mov
insb
sbb
mov
lret
aad
in
sarb
enter
nop
out
fwait
jns
jl
sbb
repnz
pop
shr
jnp
scas
mulb
rep
pushf
add
ret
lret
dec
mov
and
cmpb
jae
lock
mov
mov
pop
pop
pusha
fiadds
out
jns
pop
mov
mov
bound
dec
fs
jo
hlt
jg
push
call
popf
xor
movb
dec
movsl
and
mov
push
mov
sbb
add
add
in
stc
sub
inc
dec
lcall
add
add
sbb
fidivl
mov
jbe
fsubl
jbe
or
adc
xchg
jo
cmp
dec
jecxz
push
rclb
dec
mov
mov
adc
imul
cmp
xchg
addr16
add
and
push
data16
or
test
mov
in
test
push
inc
pop
dec
sbbl
aas
in
cmp
ficomps
mov
jb
mov
fidivrs
dec
sarl
rol
test
adc
jl
dec
adc
cmp
or
outsb
int
cmpsb
inc
adcb
repnz
jnp
fwait
jle
addr16
jecxz
in
mov
lods
mov
stos
inc
jbe
call
push
mov
int
js
mov
dec
cmp
sbb
lret
or
jno
xor
shl
jle
ficoml
fbstp
xor
cmp
and
out
shr
or
ja
movsb
mov
jnp
es
sbb
dec
roll
or
jbe
mov
dec
cwtl
mov
test
jge
adc
test
jae
test
cmc
ficompl
sub
daa
mov
cwtl
out
mov
aas
xlat
inc
sbb
dec
stos
push
int3
adc
push
aam
jle
orb
mov
sbb
bsr
je
adc
stos
cli
loope
je
mov
mov
movl
daa
lea
pop
jge
arpl
xchg
scas
and
nop
in
jge
imul
mov
jl
mov
lea
imul
sub
push
xchg
cmc
pop
mov
in
push
inc
mov
insb
cmp
cmc
xchg
cli
or
ds
adc
push
rcll
or
scas
sti
andb
mov
repnz
lcall
dec
js
inc
dec
jnp
pop
xlat
in
pop
jo
lds
mov
mov
xchg
jge
fwait
jae
mov
test
mov
adcl
loopne
xchg
and
fwait
aad
mov
clc
xchg
adc
sbb
pop
mov
and
dec
inc
adc
xor
xchg
inc
sbb
push
iret
mov
imul
fwait
push
aam
or
xorl
fimuls
mov
xor
loopne
ja
adc
sbb
or
call
lret
shll
arpl
out
mov
sub
shrl
sahf
rcll
cmpsb
shlb
out
outsb
push
cmp
std
push
imulw
and
out
jnp
out
inc
rclb
mov
clc
cld
jp
leave
or
add
repz
das
ret
test
mov
sbb
iret
sub
stc
adc
imul
jl
bound
test
xchg
shrl
mov
imul
push
std
cli
neg
jg
gs
xchg
aad
mov
sbb
adc
sbb
sahf
pop
mov
mov
pop
cmp
ficoms
jnp
cld
pusha
ljmp
push
dec
xchg
lods
jo
loop
xor
fdivr
adc
nop
push
xor
cwtl
jo
adc
repnz
sub
sub
push
nop
stos
in
dec
sti
sahf
cli
and
dec
nop
cwtl
inc
push
mov
enter
sub
adc
movsb
push
data16
in
push
or
xchg
xorb
pop
aas
dec
mov
and
mov
gs
adc
in
mov
sub
inc
clc
cmp
sbb
pop
stos
cs
movsl
data16
aaa
jmp
ficompl
sub
sti
push
iret
fcmovnb
ljmp
pop
std
add
aaa
xlat
mov
frstor
icebp
dec
out
iret
xchg
dec
roll
popa
popa
xlat
push
aam
movsl
lret
cs
and
daa
push
inc
push
mov
cld
mov
pop
pop
sbb
cld
adc
add
pop
xlat
sub
cmp
mull
push
lret
jge
jmp
sub
xchg
fidivrs
loopne
xchg
je
push
jo
push
ds
sbb
mov
ret
mov
mov
scas
xchg
xor
sarl
adc
dec
std
jno
daa
mov
iret
subb
loope
push
mov
adc
pop
xchg
cmc
shlb
xchg
jl
loop
aad
rorl
rorl
shlb
inc
lea
mov
cmp
rcrb
insb
mov
in
sti
adc
jns
ja
loopne
mov
adc
fildll
mov
outsb
inc
jbe
sti
sbb
pop
orb
movsb
mov
cltd
adc
add
xchg
inc
lds
aam
mov
fidivl
or
pushf
add
test
sbb
nop
push
push
and
cs
divl
xor
ljmp
and
push
mov
fdivl
movsl
push
mov
scas
scas
cmp
mov
lds
mov
fcmovu
dec
add
stc
xor
jge
add
popf
ja
sub
jno
jecxz
inc
sbb
imul
sti
aam
cltd
cmc
cmp
pop
xor
jg
jge
ljmp
movsl
aam
hlt
cld
in
dec
subl
inc
fisttps
out
inc
push
inc
loopne
jl
ds
xchg
stos
aam
int3
data16
xchg
mov
enter
ds
js
xchg
inc
push
push
xchg
sahf
insb
pop
jns
mov
push
fmuls
rolb
in
sbb
cmc
mov
fsubl
enter
and
dec
adc
push
jae
dec
in
mov
mov
mov
jl
cmp
lds
adc
jbe
xlat
sub
mov
bound
sbb
or
stos
mov
sub
ret
push
mov
cmp
out
mov
in
mov
inc
sub
fwait
cs
inc
or
ss
pop
jo
jl
dec
cmp
cwtl
pop
shlb
mov
push
cwtl
mov
scas
adc
in
lods
push
xor
and
fcmovnbe
imul
xor
and
cmpsl
mov
lret
sub
psubb
xchg
icebp
shlb
hlt
xchg
f2xm1
in
iret
sub
mov
loopne
std
fisttpll
mov
inc
mov
in
or
sar
pop
insl
pop
and
add
and
outsl
lret
popa
jae
add
mov
popf
jbe
idivl
repnz
mov
adc
arpl
mov
js
adc
push
dec
insb
adc
lret
push
aaa
ror
mov
dec
push
pop
lods
imul
sbbb
fwait
lahf
and
aaa
sub
sbb
mov
and
insb
roll
adc
xorl
or
rcll
das
fs
xlat
repz
aaa
add
xor
jbe
test
sub
lds
sub
fistpll
rcrl
test
fdivrl
xchg
jl
adc
aad
insb
jb
sub
orb
mov
pop
ret
and
fcomp
mov
pop
int
sti
out
faddl
cmpsb
jg
out
mov
dec
inc
xchg
sub
pushf
jmp
mov
aaa
fmuls
call
imul
int
pop
or
jne
cvtps2pi
sub
jae
and
mov
xchg
sbb
into
dec
rclb
cld
icebp
push
sbb
sub
jno
push
xchg
jae
cmpsb
in
fldl
cmp
mov
lods
push
inc
xor
xlat
mov
xor
outsb
sub
or
inc
xor
in
sahf
mov
cmpsb
lahf
pop
xorb
lock
cmp
scas
hlt
jae
push
push
push
mov
dec
cmp
push
popa
fidivs
push
loope
push
fcoms
fsubl
addr16
pop
mov
xor
mov
mov
shrb
bound
cld
jmp
mov
sbb
pop
movsb
or
fnstsw
push
add
aam
outsl
mov
mov
mov
push
andl
dec
pop
inc
movsl
pop
lcall
test
daa
sub
fimuls
xchg
nop
pop
ja
mov
addr16
fs
dec
test
add
mov
loopne
pop
das
and
fs
sub
lock
or
movsl
outsl
mov
xor
xorps
jg
mov
and
leave
cmp
jno
xchg
outsb
insl
les
fsubr
xchg
lea
xchg
dec
call
testl
jae
cld
repz
es
lds
rorl
pop
adc
xchg
clc
dec
xor
xchg
int
or
mov
xchg
insl
cmpb
add
mov
mov
aad
mov
add
jb
lea
push
movsb
cwtl
dec
addr16
cmpl
add
inc
cltd
lds
inc
mov
pop
sti
es
lock
mov
clc
movl
rorb
rorl
dec
sbb
mov
ja
movsl
sub
test
stos
xchg
stos
call
leave
in
into
push
mov
jae
xor
jnp
loopne
inc
ret
xchg
mov
and
dec
mov
pusha
cmp
dec
sub
ret
sub
fsubrp
ds
xchg
ljmp
imul
mov
cs
push
fisttpll
dec
rcrb
aad
leave
pop
mov
adc
mov
pop
pop
dec
in
in
adc
dec
mov
cmp
ret
dec
loopne
imul
sub
mov
sbbl
stc
mov
and
lahf
mov
adc
addr16
add
xor
jmp
xor
jg
loopne
mov
lock
icebp
xlat
test
stos
fidivrl
ret
jnp
adc
fsubrl
repz
adc
loopne
and
lock
imul
jb
sub
aas
adc
dec
xorl
mov
rep
sti
sbb
rorl
lret
aam
jl
pop
ret
mov
mov
fsubs
bound
fcoms
mov
mov
into
call
push
dec
lcall
stos
lods
mov
jae
nop
aas
xchg
mul
xchg
inc
stos
js
test
adc
lcall
sub
and
push
arpl
ror
and
jno
mov
inc
call
aam
cmp
jl
jmp
fcmovnu
mov
pop
cmp
and
nop
bound
lea
or
jge
shl
sub
mov
lret
scas
mov
shll
pushl
test
push
pop
inc
ljmp
dec
dec
cmp
negl
mov
out
jp
cmc
mov
stc
mov
push
push
out
loopne
and
int
out
pop
pop
dec
aad
xchg
dec
or
insl
lahf
push
and
pop
mov
lret
xchg
mov
in
lds
arpl
repz
push
mov
and
or
stos
push
and
and
mov
loope
ss
lea
lods
sbb
insb
cltd
jg
out
dec
push
cmp
or
dec
out
sub
mulb
xor
push
hlt
int
and
mov
mov
mov
xlat
std
sub
jge
rorb
jp
jmp
mov
adc
cmp
nop
stos
sbb
cmpb
add
jae
and
xor
sub
mov
mov
pop
add
mov
sub
int3
movsl
sbb
mov
setle
xor
pop
je
mov
sub
jne
push
filds
mov
xor
and
add
add
sub
clc
adc
outsb
sahf
dec
xchg
push
push
clc
test
pop
arpl
sub
pop
pop
bound
stos
mov
xchg
push
leave
arpl
outsb
push
hlt
pop
outsb
mov
or
xchg
test
sub
cmp
adc
sti
mov
inc
cmpsl
and
daa
cmp
push
adc
dec
xchg
mov
int3
sahf
lahf
sbb
add
sub
mov
inc
or
add
push
adc
jmp
test
arpl
stos
shrb
cmp
mov
jmp
fidivrs
dec
mov
mov
notl
cltd
pop
inc
cltd
pop
hlt
es
pop
push
dec
inc
mov
mov
inc
jae
mov
iret
addr16
add
pushf
insl
pop
outsb
xchg
cli
in
push
in
in
aaa
cmp
mov
mov
pop
ds
cmp
stos
jnp
dec
cmp
xor
loop
lea
testb
push
inc
out
imul
es
pop
pop
pop
lcall
pop
sbb
push
into
dec
outsl
inc
xor
outsb
loop
ss
test
xchg
jno
inc
fwait
mov
lods
mov
jno
mov
jmp
mov
mov
adc
rcl
enter
or
mov
nopl
jns
adc
adc
insb
xor
dec
xor
aas
subl
ja
sti
sbb
mov
xchg
std
and
add
jge
shlb
insl
movsl
mull
inc
aaa
gs
or
mov
test
xchg
mov
cmp
bnd
jge
in
pop
cmpsl
cmp
or
hlt
or
repz
pop
cmc
js
and
sahf
jge
adc
sbb
dec
icebp
xchg
mov
in
dec
imul
rcrb
mov
cmp
mov
loope
cmp
loop
sub
xchg
xor
push
dec
and
inc
add
inc
dec
mov
mov
sub
rolb
push
xchg
out
add
andnps
jmp
push
lods
cmp
jp
scas
shr
int3
jbe
out
add
xorl
jle
dec
nop
popa
xor
cmp
mull
ucomiss
mov
pop
cs
or
fs
inc
inc
jo
addr16
adc
outsb
cmp
jecxz
scas
dec
jle
jecxz
nop
xchg
popa
into
push
ret
inc
add
js
xchg
adc
stos
test
mov
jo
cmpsl
push
jne
cmpsb
test
cli
pop
or
in
shrb
fnsave
jmp
lods
mov
sub
icebp
shlb
lret
fstps
sti
stos
lds
inc
jae
mov
ljmp
out
dec
lods
ja
push
jmp
jl
inc
rcrb
aam
mov
add
adc
push
lret
out
jnp
mov
dec
ud1
jmp
das
fwait
incb
dec
fistps
or
cmp
jno
push
mov
mov
jne
and
loopne
lea
out
mov
in
movsl
dec
inc
in
aam
mov
cmp
inc
call
testb
icebp
push
add
jno
xchg
js
push
addr16
sub
das
lods
dec
mov
pop
xchg
outsb
int
inc
out
mov
call
repz
out
insb
push
inc
cmp
pop
xchg
gs
push
inc
sbb
add
popl
sub
and
nopl
lret
int
daa
dec
fdivrs
fcomps
rolb
ja
fwait
mov
and
add
mov
hlt
cmp
out
pushf
mov
loope
sarb
adc
cmp
pop
dec
inc
or
sti
call
adc
push
sbb
pop
shlb
sti
jl
mov
cmp
push
mov
push
pushf
dec
inc
adc
jecxz
test
adc
xchg
fisttps
cltd
mov
leave
insl
add
mov
xor
cld
jecxz
imul
ficoml
push
icebp
xor
into
mov
loope
inc
jo
mov
cwtl
scas
cmp
mov
ljmp
sub
jno
adc
les
jae
sbb
es
and
and
pop
cmp
inc
into
out
push
xlat
pop
and
add
aam
sub
mov
gs
mov
mov
mov
roll
addr16
pop
xchg
in
adc
cmc
add
sub
movsl
mov
test
pop
rcl
cld
sub
in
bound
inc
mov
lea
xor
mov
mov
shll
jmp
mov
jns
dec
mov
mov
inc
mov
dec
xchg
scas
cmp
inc
ret
xor
inc
xor
xchg
js
sub
lret
shl
sbb
xor
jge
jmp
xor
sub
dec
cmp
mov
leave
pop
ljmp
sub
xchg
gs
add
mov
adc
cld
cmc
adc
mov
push
daa
xchg
imul
pusha
and
lock
imull
inc
and
and
pop
adc
add
mov
sbb
dec
call
mov
or
jno
xor
pop
mov
cmp
subl
add
add
or
cmpsl
outsl
inc
aam
xchg
jno
repnz
out
mov
orl
mov
add
cmp
lock
dec
scas
jns
in
mov
mov
jae
pop
xor
cmc
adc
and
mov
xchg
call
jle
incb
aaa
sub
and
dec
mov
hlt
xchg
push
call
lds
dec
jmp
lret
fistps
sub
cmc
stos
cmpsl
insb
gs
mov
pop
mov
xor
add
fldl
nop
add
pop
dec
shll
insl
dec
test
rep
sub
xor
mov
mov
loop
in
inc
dec
inc
mov
shr
stc
fdivl
cmc
inc
sub
out
pop
xchg
pop
xchg
ret
shlb
xor
imul
inc
jg,pn
inc
push
lods
jae
pushf
cmp
mov
fimull
cmpsl
add
repz
jne
pop
xor
cmp
mov
ljmp
inc
jne
xchg
xchg
mov
cld
sahf
cwtl
mov
in
pop
xchg
popa
jg
or
sub
add
rclw
sbb
mov
mov
fs
out
popf
push
cs
stos
gs
test
pop
data16
sti
mov
mov
pop
inc
jmp
dec
aas
push
jp
xchg
add
ret
cs
mov
mov
iret
sub
addl
cld
in
loope
ljmp
popf
mov
cmp
insl
stc
inc
sub
xlat
mov
xchg
push
std
dec
cmpsl
xchg
push
mov
in
sub
stc
and
call
jbe
das
mov
movsb
dec
cmpl
popa
shrb
js
scas
dec
aas
outsl
sub
and
popa
jae
lea
into
xchg
sbb
ret
xor
clc
imul
inc
in
ret
mov
xchg
push
cld
jle
xlat
aam
mov
nop
adc
push
in
repz
mov
jg
pop
lret
test
jnp
jle
mov
push
push
out
push
sbb
cmp
pop
xchg
adc
mov
test
fistpll
int
pop
mov
sub
dec
cmp
cmp
inc
xchg
or
mov
pop
jp
lea
lods
jb
es
cmc
daa
das
clc
adc
push
dec
jb
xchg
addr16
gs
scas
into
or
and
and
xchg
cmp
adcl
inc
jg
jb
fcomip
mov
push
leave
imul
fs
mov
outsl
push
xchg
jmp
xchg
out
cmp
sti
add
ss
push
mov
xchg
sub
cmc
sub
cmp
test
popf
pop
cmc
mov
insb
sbb
aam
cmc
in
adc
push
add
popa
jge
mov
sub
cs
ret
sti
jbe
dec
jnp
mov
xchg
jns
pop
outsl
hlt
xor
pop
jl
push
and
and
xor
xchg
leave
hlt
xor
dec
data16
gs
adc
adc
nop
out
jp
in
inc
xchg
sub
fistpl
out
sub
mov
gs
jmp
out
cmp
push
and
push
lds
jmp
mov
loopne
mov
outsb
cmp
jbe
in
pusha
mov
mov
ret
inc
stos
or
mov
orl
mov
push
or
inc
or
and
fcoml
das
add
test
sub
adc
loope
xchg
sub
adc
ss
adc
adc
cmp
xchg
loopne
lret
sarb
fs
push
push
ds
cld
mov
bound
jge
loop
push
pop
scas
or
lds
adc
negl
add
jnp
lret
fsts
out
rcll
mov
sub
mov
popa
movsl
fidivl
dec
push
orl
rcll
cli
jl
lock
adc
mov
jno
cmpsl
dec
fdivl
in
pop
sub
xchg
jnp
adc
cmp
std
dec
neg
cmp
das
cmp
bound
or
xor
cmp
push
adc
adc
std
xor
call
sub
and
xchg
mov
pushf
sub
xchg
and
fcompl
lea
xchg
and
fsubrl
inc
or
loope
inc
jae
pop
sub
repnz
xchg
lea
mov
xchg
movl
in
mov
push
in
and
enter
push
shll
dec
sub
popa
sub
push
testl
mov
daa
aas
jno
adc
daa
cmpsb
push
cmpsb
sbb
ja
aam
and
push
insl
in
push
jge
loop
jge
ret
dec
lret
inc
add
push
and
pop
imul
test
ret
or
std
fidivrl
enter
push
cmp
or
fldcw
fcoml
sbb
jae
cmp
rorb
cld
idivl
or
bound
es
ljmp
leave
in
jmp
jno
and
or
or
fwait
dec
loope
lods
xchg
xor
mov
inc
add
mulb
mov
push
jbe
in
jb
cwtl
aam
xchg
jg
rorb
ds
add
imul
sub
xor
pop
test
call
arpl
cli
aad
push
aaa
sub
mov
dec
and
xor
icebp
sti
push
and
fwait
fwait
outsl
lock
aas
les
mov
stc
sbb
adc
mov
or
adc
dec
mov
add
in
rorl
ljmp
cmp
cmp
or
addr16
sahf
and
xor
dec
pop
xchg
mov
pop
sub
cmp
or
leave
push
or
pop
jg
out
scas
in
fisubs
nop
out
sahf
outsl
jb
pop
push
add
ja
sbb
add
scas
fdivl
push
les
cwtl
daa
ja
jg
mov
aam
fbld
mov
idivb
int
nop
jne
sub
mov
outsl
aam
ret
sbb
std
es
lds
lret
stc
fdivl
into
push
ret
push
xchg
repnz
cmp
movsl
push
sbb
shll
add
mov
ds
notb
xor
mov
xor
in
add
add
ljmp
lods
cmpsl
out
cmp
fldt
or
popf
lret
inc
and
push
fisubl
xor
ljmp
outsb
or
test
pushw
push
dec
dec
es
shrb
mov
cmpsl
cmp
jae
mov
jg
mov
in
inc
pop
xor
fistps
pop
mov
mov
push
lcall
xchg
jge
and
xchg
and
push
int3
outsl
push
xor
hlt
rcrb
fistps
and
iret
fxch
jecxz
pop
mov
in
or
ret
movsb
sahf
add
dec
cmp
inc
dec
cwtl
loop,pt
push
fdivl
mov
arpl
mov
shlb
lret
xorb
adc
fisubs
dec
cmpsb
add
int
test
arpl
ds
dec
test
sub
push
mov
or
adc
pop
add
enter
insb
push
or
sahf
movsl
add
inc
xchg
insb
iret
je
addr16
mov
cwtl
jmp
fidivs
pop
pop
lea
lret
xchg
pop
lea
andb
xor
das
jne
pop
or
pop
adc
mov
mov
xchg
shrb
lcall
movsl
adc
dec
mov
push
xor
ret
sti
xchg
or
xchg
or
lret
mov
nop
lock
jb
mov
mov
jl
ret
cmp
sti
into
dec
push
divl
push
je
enter
ret
leave
ja
in
adc
insb
mov
int3
mov
lcall
mov
adc
push
fldenv
in
mov
cltd
push
pusha
stos
leave
shll
add
fwait
cltd
les
das
out
adc
inc
and
subb
orl
adc
loopne
xchg
fs
int3
loope
or
jge
mov
icebp
call
pop
dec
mov
pop
xor
add
sahf
cmp
pop
stc
or
or
and
dec
xor
fisttps
in
call
sbb
call
xor
out
insl
add
jmp
fidivs
cmp
sti
outsl
jb
add
cld
repz
andl
into
mov
nop
in
pop
add
pop
cltd
js
aam
mov
jmp
cmpsb
mov
dec
mov
jg
xchg
mov
adc
testl
xor
jnp
add
repz
cmc
push
lret
add
outsb
pop
pop
das
js
add
dec
lods
imul
push
dec
mov
sahf
mov
xor
push
pusha
les
out
mul
or
mov
mov
ljmp
push
mov
outsl
push
sub
dec
fidivrs
xchg
imul
pop
xchg
test
femms
mov
btr
hlt
aas
push
dec
das
sar
ret
aaa
shlb
mov
mov
add
dec
fstpl
inc
mov
popa
and
aaa
push
hlt
push
adc
xor
addr16
cmp
mov
jo
fcmove
jno
fstps
push
ljmp
xchg
enter
sbb
cld
call
daa
xor
cmp
lcall
mov
imul
mov
vpshaw
inc
sbb
adc
fiaddl
out
jmp
popf
in
and
cmpsb
into
add
cmp
in
fldcw
mov
ja
xchg
dec
adc
push
xchg
hlt
and
aad
xchg
faddl
jbe
leave
sub
mov
sbb
cmp
mov
or
bound
jns
fs
daa
cmp
mov
call
inc
mov
nop
push
and
sub
mov
mov
icebp
jmp
mov
xor
mov
add
push
mov
pusha
xor
push
lea
sub
pop
das
xchg
aad
xchg
mov
aam
xor
xchg
push
out
cmp
test
jnp
or
mov
cld
rcl
xchg
shr
inc
loopne
pop
arpl
cli
fsubl
xorb
xor
mov
push
ja
dec
sbb
push
in
lods
xor
or
pusha
pop
adc
insl
js
stos
fdivr
mov
pop
inc
mov
jno
push
int3
adc
jns
xchg
dec
lea
stos
repz
clc
pop
aaa
jnp
jge
cmpsl
and
fs
push
std
xchg
aaa
pusha
jmp
pop
insl
push
test
ja
dec
pop
repnz
test
cmp
rcl
jae
adc
xchg
sub
dec
sbb
add
repz
add
sub
add
in
mov
lods
inc
outsl
aaa
lea
test
and
sub
aaa
add
mov
pop
pop
jecxz
jecxz
aam
xchg
cltd
clc
loop
or
pop
mov
cmc
jecxz
lret
stc
arpl
push
inc
popa
jle
mov
rclb
sarb
adc
enter
cmp
mov
bound
mov
inc
das
cmp
or
push
cmp
movb
jae
pop
mov
dec
test
or
mov
push
and
popa
inc
push
xor
jl
test
test
sub
scas
daa
inc
andb
xchg
and
movsb
dec
cli
pop
cmp
sbb
sub
mov
push
out
cltd
push
arpl
aaa
jecxz
mov
in
mov
xchg
repz
push
push
mov
mov
cmp
lahf
in
or
sbb
push
pop
xchg
xchg
jle
pushf
push
neg
ljmp
imul
pop
mov
dec
push
xchg
ret
imul
sbb
test
mov
into
gs
push
push
pop
cmp
stos
fimuls
imul
pop
lahf
add
cmp
fnsave
mov
rorb
icebp
testl
or
insb
lret
cmpsb
xchg
testb
jbe
ss
lcall
cwtl
dec
add
inc
fldcw
enter
pop
dec
das
sub
adc
sbb
sub
cmp
ss
dec
scas
pop
lods
das
dec
and
in
and
xlat
dec
mov
incl
or
fwait
negb
mov
sbb
push
daa
and
cmp
inc
gs
paddsw
mov
lods
jne
lret
mov
lahf
push
sbb
mov
mov
lock
popa
pop
lock
xor
xchg
jge
dec
push
xor
fdivrl
shlb
pop
mov
arpl
scas
arpl
jmp
pop
add
js
cmc
push
aad
lahf
repz
into
loopne
int3
sub
xchg
sub
ret
inc
xchg
hlt
mov
movsb
add
jl
leave
lcall
sub
js
movsb
aas
fdivr
dec
dec
sti
adc
inc
fs
rcr
and
sub
pop
or
push
xor
add
cltd
xor
cmp
mov
sub
ljmp
shll
aad
sub
push
mov
mov
mov
pop
mov
cmp
insl
jmp
mov
dec
incl
and
inc
addr16
test
in
cmp
mov
dec
xor
push
fiaddl
sub
adc
cwtl
imul
adc
in
aaa
sbb
mov
into
mov
jo
int
shl
pop
scas
and
ficoml
fiaddl
and
ja
mov
leave
adc
adc
call
sub
aad
ljmp
mov
pop
in
xor
pop
out
push
jp
jmp
outsb
xor
cmp
mov
imul
adc
fisttpl
std
adc
mov
ljmp
and
shl
jb
adc
push
xchg
aaa
pop
xor
xchg
mov
insb
cs
out
mov
rorl
mov
push
arpl
sbb
adc
inc
mov
popf
mov
stc
cs
mov
popa
andb
cs
loop
cmpsl
mov
cli
jmp
push
xchg
xchg
jmp
push
pop
pop
xchg
test
add
cwtl
stos
lock
dec
push
dec
jo
cmp
out
daa
add
sub
dec
aas
xchg
es
xor
jno
fildll
mov
sarb
ljmp
cmpsb
xchg
jl
shll
lcall
sbb
into
mov
adc
pop
cmpsb
mov
jnp
jne
mov
jl
mov
push
push
fcompl
xorl
inc
jecxz
loope
lea
scas
fwait
in
add
shrl
cmp
and
daa
int3
pop
repz
mov
arpl
lods
and
shrl
inc
rcrl
mov
xor
add
and
xchg
inc
xor
adc
icebp
setae
movsl
movsl
aad
mov
adc
cmpsb
or
and
xchg
lds
fdivp
faddl
inc
fdivs
or
pop
xlat
mov
rcll
inc
fimuls
add
mov
mov
cmp
mov
icebp
mov
mov
add
into
imul
inc
jp
push
mov
imul
fmul
fwait
les
pop
mov
lock
fsubrs
jecxz
outsl
push
pushf
cmpsb
push
mov
xchg
fmull
idivb
jns
imul
sub
aas
es
inc
jecxz
xchg
outsl
mov
mov
and
or
test
sbb
lds
xchg
clc
mov
and
sbb
jb
aam
push
fnstenv
adc
into
sub
add
arpl
int3
in
cmpsl
fnsave
mov
cmp
std
dec
mov
jg
and
sbb
dec
lods
or
stc
repz
mov
push
adc
mov
mov
add
mov
loopne
fisubrs
add
icebp
cltd
jno
sub
cmp
jb
fcmovb
test
pushl
divb
mov
loopne
inc
add
out
sbb
sub
push
test
dec
push
outsb
and
mov
ljmp
or
in
int3
fwait
sbb
popf
scas
dec
or
and
xchg
test
outsl
in
out
push
test
or
cs
xchg
mov
hlt
mov
jae
shr
sub
leave
pusha
mov
sarb
adc
negl
fldenv
push
jbe
cmp
loop
addr16
sub
mov
scas
repnz
xchg
scas
inc
mov
inc
pop
cltd
pop
fldcw
push
mov
sub
pop
push
or
xor
or
add
fildl
adc
aam
test
sub
mov
fsubrs
in
add
fdivs
mov
in
ja
adc
call
icebp
imul
mov
mov
cmp
xchg
fsubs
pushf
pop
hlt
push
gs
sbb
in
xor
rcrl
xchg
ss
jb
popa
repnz
pop
dec
sahf
add
and
dec
mov
or
aas
cmp
push
adc
movsl
ret
lods
sbb
fildl
pop
fucom
ljmp
cmp
mov
jmp
js
ja
and
call
inc
and
std
jecxz
icebp
ret
test
dec
mov
test
sti
fmul
push
shlb
mov
repz
adc
leave
dec
sub
pop
push
popf
sub
inc
roll
xchg
jno
or
push
bnd
jne
jmp
sub
out
dec
jecxz
push
arpl
ds
mov
mov
leave
mov
arpl
data16
fstpt
jecxz
and
or
cmp
fwait
sub
ljmp
cmp
adc
xchg
int
into
jno
cltd
mov
stos
adc
pusha
add
imul
adc
cwtl
xor
sub
xor
pop
cmp
cwtl
push
test
inc
xor
lea
add
sub
stos
daa
cmp
cmp
inc
mov
ja
nop
xor
arpl
sbb
test
cltd
lret
jmp
mov
rorb
bound
movsl
jns
call
mov
test
popf
sub
fwait
jnp
dec
test
cltd
scas
out
xchg
add
loope
rcl
xchg
lea
mov
add
inc
nop
out
cmpsl
jge
or
mov
daa
jp
push
test
ret
loop
add
ja
cs
lret
sarl
rep
out
fsubs
mov
out
mov
loop
or
ja
push
js
xchg
ljmp
mov
cld
rcrl
cmpsl
and
mov
mov
mov
sbb
test
jbe
outsb
popa
daa
push
enter
insb
xchg
test
add
jle
or
sub
mov
or
in
inc
adc
nop
daa
popf
jae
inc
jo
es
add
iret
xchg
ljmp
fistpl
push
in
mov
loope
mov
push
test
inc
xor
aaa
mov
mov
test
pop
jb
scas
sbb
sbb
insl
xchg
shll
mov
add
test
adc
ret
jo
lret
addb
ja
int3
fmull
leave
xchg
sahf
sti
ret
push
getsec
push
push
dec
fsubr
mov
movsb
cltd
add
or
ljmp
pushf
xor
fcomi
faddl
es
daa
imul
mov
cmpsl
cwtl
add
mov
fmuls
mov
mov
mov
xor
fisttpll
and
adc
lcall
push
icebp
arpl
test
adcl
push
test
mov
cmc
cwtl
lretw
lods
popa
and
das
hlt
clc
push
cmp
mov
cmp
in
rorb
push
clc
jns,pt
xchg
push
xor
shrb
into
js
leave
inc
push
xor
xchg
mov
fsubl
sti
sbb
xchg
jmp
sti
movsb
or
jmp
and
push
cmpsl
aaa
mov
mov
dec
cmpsb
push
andb
mov
dec
and
fisubrs
sbbb
nop
xchg
mov
mov
outsl
cmp
stos
xor
dec
adc
inc
pop
cltd
popf
inc
xor
scas
cmp
es
adc
scas
das
jne
mov
shlb
lds
lds
iret
sbb
test
ret
jl
sti
xor
inc
sahf
push
inc
jnp
dec
mov
sbb
adc
loop
or
clc
es
mov
ja
push
push
xchg
dec
jge
cmp
jno
push
lock
mov
mov
sub
arpl
mov
jbe
xlat
mov
jge
stos
imul
lret
mov
dec
in
out
mov
xchg
ljmp
mov
mov
pop
cltd
movsb
call
cmp
ret
cmpsl
jno
jbe
dec
mov
mov
sub
xchg
fsin
ljmp
fildl
not
sbb
xchg
sbb
sbb
fwait
loope
jmp
mov
scas
cmp
dec
mov
xor
sbb
xor
xchg
dec
mov
sub
and
pushf
mov
lods
xlat
das
in
push
out
jnp
jbe
cmpl
mov
xor
rcr
xchg
jge
aaa
fidivrs
xchg
daa
pop
dec
mov
dec
incl
dec
out
dec
fcoml
mov
inc
cmp
adc
push
add
cmp
test
cmpl
mov
adc
xor
test
add
pop
es
sbb
adcb
push
xor
std
lret
out
xchg
imul
mov
scas
jno
push
sbb
in
xchg
stos
cmpsl
or
out
push
and
clc
xchg
mov
or
into
xchg
in
es
mov
or
scas
jle
test
int
or
fcompl
sub
cmp
sar
fwait
sub
inc
clc
add
icebp
mov
adc
pop
pushf
mov
jno
test
inc
xchg
or
shll
xchg
clc
mov
mov
xor
sbbl
in
dec
xlat
mov
pop
jnp
jo
lret
shrl
fucom
pop
fcoms
aaa
frstor
pop
cmpsl
xlat
aas
rorl
loopne
pop
ljmp
out
repnz
jmp
add
test
jecxz
negl
aaa
ret
sub
pop
adc
sahf
lahf
dec
xchg
dec
pushf
cmp
xchg
push
pop
mov
push
daa
lret
ja
mov
adc
repnz
pushf
imul
cmpsl
xor
push
nop
xchg
in
in
ror
mov
loope
push
test
jno
mov
xchg
repnz
addl
popf
test
test
cmpsb
shlb
pop
xchg
fistps
lcall
arpl
cmp
ljmp
push
int3
push
and
es
in
cwtl
jp
test
aaa
add
lea
mov
sub
adc
inc
scas
in
push
out
cmp
jg
daa
adcl
ret
xchg
hlt
inc
jle
add
push
fmulp
xchg
mov
mov
inc
stos
popa
cmp
xchg
sbb
adc
jno
pop
rorb
push
xorl
iret
stc
sbb
and
jns
mov
imul
push
or
mov
test
jb
fdiv
and
lcall
pop
mov
lret
imul
mov
sbb
rcl
sarl
mov
std
stc
lods
xor
shl
push
sbb
mul
cmpsb
jp
pusha
xchg
pop
mov
lods
dec
xchg
out
add
repz
ror
dec
insl
stos
jno
cmp
push
pusha
xchg
mov
sub
pop
fmuls
jbe
jecxz
icebp
dec
xchg
adc
jmp
divl
aas
and
fstl
in
stc
fs
out
push
ret
testb
xchg
insl
lret
addr16
xchg
fcoml
fisttpl
scas
jne
or
test
aam
and
pop
xchg
scas
or
ret
lahf
lahf
mov
mov
shlb
movsl
adc
pop
jl
movsl
rolb
or
mov
mov
cmpsl
push
out
pushf
pop
pop
push
std
xchg
mov
ljmp
mov
cmp
insl
mov
fs
and
dec
push
idiv
xor
pop
sbb
stos
inc
aam
sbb
sbb
lahf
adc
gs
sub
fiadds
rorb
dec
int
sbb
test
mov
mov
xchg
xor
add
lcall
sti
popa
xchg
sbb
call
stos
mov
or
in
jb
in
jae
jns
inc
stos
imulb
test
loop
inc
out
cwtl
jne
cwtl
insb
dec
jecxz
push
jno
sarb
rclb
int3
lcall
dec
or
dec
push
xchg
inc
mov
or
mov
mov
filds
movsl
clc
mov
dec
jae
scas
fldz
push
lret
js
pop
or
cmc
or
daa
push
sbb
jnp
pop
sub
cli
jns
mov
mov
mov
nop
xor
xchg
cmp
and
test
xchg
fdivrl
pop
popf
mov
pop
sbb
add
daa
jp
daa
fwait
pop
cld
scas
sub
nop
xchg
in
aaa
push
icebp
mov
lods
push
add
aas
push
push
cld
mov
cwtl
and
dec
es
cli
icebp
movsl
popl
or
hlt
das
shl
inc
pop
adc
cmp
shll
push
pushf
mov
inc
jnp
pop
test
push
cmp
sbb
xbegin
addr16
fwait
push
sbb
xchg
xchg
into
sub
cmpsl
jne
mov
fisttpl
clc
jmp
scas
inc
pop
int3
lds
jo
ret
jb
nop
mov
fsubs
cwtl
jae
rclb
aam
sarb
dec
fsubrp
sub
xchg
iret
xchg
jge
test
in
pusha
xchg
dec
pop
sub
sbb
jo
xchg
xchg
mov
and
mov
mov
lret
clc
adc
pop
sub
data16
jp
subb
fbld
je
inc
mov
push
int3
and
lcall
je
aas
lcall
mov
scas
cmp
out
add
insl
daa
nop
out
jae
xor
ljmp
popa
mov
imul
and
js
rolb
mov
int
test
jle
out
and
aaa
push
ds
inc
call
lods
inc
lods
insl
test
cmp
sub
pop
add
cmpsl
xchg
cmp
and
aam
sub
loope
jnp
jae
xchg
lock
lret
cltd
xchg
int
pop
mov
loop
fldt
inc
xchg
out
xchg
addb
push
mov
add
rcrb
mov
repnz
add
push
or
enter
fwait
add
rcrl
mov
pop
in
or
xchg
add
and
mov
push
cmc
mov
insb
dec
fists
adc
aas
mov
sbb
mov
adc
enter
mov
sbb
aad
sbb
mov
dec
adc
andl
std
sbb
cmp
popf
mov
dec
push
pop
xlat
mov
daa
sahf
and
insl
adc
icebp
xchg
or
jmp
imul
jnp
cli
xor
pop
dec
insb
daa
sub
and
cli
movsb
nop
jecxz
pop
push
pop
push
sub
test
leave
data16
mov
mov
loopne
dec
arpl
aam
dec
jg
jnp
rorl
xor
mov
sbb
xor
mov
cltd
or
mov
pop
in
sub
repz
mov
test
mov
pop
push
xor
jbe
call
or
xor
inc
xchg
pop
jl
push
mov
dec
or
mov
xchg
filds
add
mov
pop
xor
cld
jle
push
loop
pop
mov
jecxz
aam
fmuls
mov
pop
sub
sbb
pop
push
and
test
sub
or
loope
jae
test
sahf
mov
aam
lcall
std
sbb
std
mov
outsl
ret
push
inc
cmc
push
in
cmc
divl
jl
sub
inc
call
push
cltd
or
out
or
mov
imul
call
push
jecxz
ret
scas
sub
lahf
adcl
out
mov
cld
call
mov
lret
xchg
movsb
hlt
rep
aas
stos
and
mov
leave
xlat
or
xor
loopne
mov
dec
cmc
mov
cld
scas
loope
push
test
loopne
enter
mov
push
xbegin
call
xchg
add
test
push
and
lea
adc
push
add
jb
xlat
mov
cli
stos
inc
adc
sbb
mov
jnp
sub
js
rcrb
fsubr
xor
xor
inc
xor
pop
inc
add
jns
or
idivb
jp
lods
inc
or
mov
inc
jno
jle
sbb
fnsave
ret
push
leave
loop
pop
cltd
sbb
mov
out
lret
imul
enter
adc
xchg
mov
fbld
push
pusha
mov
mov
ret
ror
call
xor
rcrb
std
sub
test
ret
mov
push
ja
push
or
jb
xchg
mov
xor
mov
insl
bnd
dec
mov
ljmp
dec
jne
xlat
jp
out
mov
jl
ja
jnp
les
mov
iret
stc
jae
rcrb
dec
mov
lret
rorl
cmp
ficoms
xor
mov
add
out
push
cmc
fadds
adc
dec
mov
data16
cmp
mov
cmpsb
out
mov
aad
aam
pop
roll
sbb
or
jbe
arpl
push
mov
sub
sti
jnp
enter
xchg
and
and
xor
stc
pop
jecxz
outsb
fldcw
es
cmp
cmp
and
enter
dec
into
jl
insl
mov
lock
js
xchg
xorl
or
jecxz
mov
cmpsb
popa
adc
dec
je
and
sub
or
stc
fcompl
out
mov
push
gs
mov
pop
jbe
out
xor
jns
shld
loope
scas
jl
add
and
jo
push
sbb
sbb
testb
lea
ljmp
clc
mov
and
popa
addb
popf
sbb
insl
sub
xor
add
add
or
cltd
push
inc
push
ds
inc
popa
pop
gs
fildl
or
test
aaa
mov
je
pop
out
dec
inc
jbe
inc
add
add
cli
pop
data16
jnp
cmp
mov
jmp
aaa
sub
inc
push
or
add
adc
dec
lcall
fdivr
sbb
popa
cmc
cmc
fcoml
mov
popl
test
sbb
testl
fsubrs
lahf
sbb
inc
push
pop
mov
shl
cmp
in
stos
or
add
mov
xor
inc
dec
lods
pop
in
loop,pn
inc
jg,pn
add
cmp
jo
movsb
lock
push
pop
xchg
inc
jge
outsl
cwtl
data16
ljmp
jl
bound
fistpl
shr
fsubrs
push
xchg
cmp
cwtl
mov
lock
dec
test
sub
int
and
and
cmp
adc
xchg
sahf
das
sub
push
mov
rclb
inc
test
bound
dec
outsl
in
jns
adc
int3
jne
push
cld
fisttps
add
gs
adc
push
aaa
fisubs
add
jle
pop
xlat
out
pop
leave
xorl
dec
test
mov
sub
js
xorl
pop
xor
sub
cwtl
sarl
int3
add
and
lcall
dec
mov
xor
jnp
cmp
sub
fimull
or
inc
mov
jp
iret
stos
loop
lods
mov
sbb
fidivrs
mov
mov
xchg
sbb
mov
rorl
nop
dec
mov
mov
jns
and
or
xchg
pusha
or
in
js
iret
cmpsb
cld
call
xchg
and
sbb
xlat
push
or
xchg
sbb
sbb
adc
sbb
sarl
xchg
jg
gs
out
out
jle
call
ja
sahf
outsl
sbb
adc
mov
mov
cmp
sub
addl
in
jns
mov
popf
arpl
int3
aam
push
jb
cmp
jmp
pop
and
fmul
mov
pop
mov
xor
jbe
movsl
sbb
int3
out
repz
add
dec
pop
aaa
add
in
into
adcl
pusha
push
jge
fcomi
lcall
push
cmpsl
mov
xchg
leave
lods
scas
pop
inc
out
repnz
dec
and
imul
aam
xor
and
dec
jmp
pop
sbb
stos
or
aam
inc
scas
jg
scas
mov
mov
shlb
lea
add
xorb
addr16
outsl
shl
call
adc
add
pop
mov
xor
jecxz
sbb
mov
cmpsb
lds
mov
and
arpl
inc
push
sub
sub
jbe
arpl
jle
les
and
add
ret
nop
add
cmp
pop
jb
fldcw
scas
repnz
bnd
xor
adc
pop
sbbl
les
fldl
add
and
adc
ror
hlt
js
adc
xchg
mov
lods
xchg
out
inc
jl
dec
into
pop
icebp
ds
xchg
in
xor
sbb
lea
clc
jge
ret
pop
lret
fs
cmp
mov
mov
mov
push
scas
mov
mov
and
mov
cltd
imul
mov
enter
mov
mov
or
arpl
sahf
jge
out
cmp
into
dec
popa
sub
or
scas
jo
cmp
push
imul
push
mov
sbbl
mov
add
mov
push
ss
ret
push
es
jecxz
stos
sbb
aam
or
add
sbb
mov
mov
push
dec
adc
jp
jg
cmp
pushf
jp
clc
jbe
mov
in
mov
jmp
mov
es
and
arpl
fadds
stos
add
mov
and
cmp
lds
fsub
jno
orb
sub
xor
and
jl
lret
jl
incl
xor
jno
inc
mov
mov
subb
lods
jmp
push
stc
sbb
and
mov
push
repz
notl
adc
rcll
sub
adc
ljmp
sti
imul
pop
incb
cld
dec
dec
mov
enter
xor
dec
push
cmp
iret
inc
and
movsb
xchg
xchg
fdivp
pop
dec
lahf
mov
xor
push
cmpsb
shlb
xchg
xchg
out
test
xor
jmp
aaa
cmpsl
std
pop
or
flds
hlt
daa
fmulp
or
jne
pop
movsb
xchg
shll
ret
fmull
scas
jmp
js
enter
and
push
jne
pop
fildll
lock
push
mov
sarb
leave
dec
jecxz
mov
scas
cmp
mov
jle
cmpsl
pop
push
das
push
xor
sbb
dec
mov
mov
add
lea
jle
push
stc
out
inc
sti
in
ror
sbb
xor
and
push
pop
fcoml
out
ret
sbb
inc
movsl
es
sbbb
pop
dec
add
cmpb
pop
stc
ja
scas
jno
cmp
push
roll
aas
hlt
or
adc
xchg
pop
pop
sbb
shr
in
clc
outsb
loop
mov
and
or
gs
loop
or
push
add
into
dec
shlb
mov
jg
outsl
jle
shr
mov
loop
xor
pushf
push
out
add
or
test
adc
sub
inc
pop
flds
cmp
xor
rcr
jp
add
cmp
addl
cmp
add
inc
or
lods
push
insl
add
inc
testb
cmp
xor
push
shl
movsb
mov
popa
push
xchg
sbb
lcall
mov
je
xchg
cld
pop
xor
imul
jecxz
sub
xchg
in
je
mov
add
pop
jl
push
mov
jns
pop
test
js
push
iret
outsb
mov
and
fcmove
or
ljmp
mov
lods
enter
xor
testb
xor
push
insl
in
adc
fdivr
cltd
in
cli
ja
cmc
stos
fdivrl
leave
pop
aam
sbb
and
outsl
xchg
add
sbb
shlb
out
leave
ret
stos
sbb
lret
inc
flds
cmp
ds
test
movsl
mov
sysenter
aam
push
xchg
xchg
sbbl
jle
testb
jecxz
push
pop
outsb
stos
push
shl
sar
pushf
jne
std
outsb
call
mov
cmpsl
or
mov
in
cmp
ds
in
jb
xchg
repnz
cmp
inc
push
cmp
gs
lods
divb
or
sub
fs
test
mov
jno
movsl
test
decl
dec
rolb
push
xor
ljmp
sbb
stc
sub
mov
push
fiaddl
rol
popa
cmp
repnz
lds
arpl
push
clc
jns
aas
mov
xor
daa
mov
pop
mov
mov
xchg
cli
int3
out
mov
loopne
arpl
mov
iret
cmp
enter
sbb
and
sbbl
in
cmp
mov
aad
mov
and
push
movl
mov
outsb
adc
jne
in
mov
dec
std
aas
mov
xchg
enter
daa
movsl
test
or
push
xchg
mov
out
jns
push
mov
mov
lea
or
test
adc
jle
jmp
dec
xor
jle
das
xor
inc
out
loopw
mov
mov
inc
xor
jbe
into
out
stc
xchg
pop
and
sbb
sub
fidivrs
sar
jns
mov
icebp
daa
stc
dec
lods
es
sub
mov
ja
pop
pop
into
dec
push
scas
sub
filds
test
add
add
xchg
push
jp
mov
push
push
idiv
pop
xchg
sub
rolb
jmp
jmp
pop
adc
mov
or
leave
out
push
xchg
cmpsl
xchg
insb
addr16
xchg
mov
sub
sub
jp
mov
add
mov
xor
xor
pop
jbe
fcmovne
lea
out
into
mov
sti
jle
adc
ljmp
movsl
cmc
sub
cmp
adc
push
inc
adc
mov
outsl
mov
mov
jp
mov
repnz
outsb
lea
aas
cs
mov
xchg
mov
xchg
adc
add
sbb
ret
xchg
icebp
mov
or
jbe
hlt
sbb
sbb
mov
inc
sbb
lret
xchg
inc
dec
push
mov
dec
add
jmp
nop
das
mov
mov
lods
stc
inc
incb
sub
addb
pop
xchg
in
out
dec
pop
add
xchg
in
jle
xor
cmp
aaa
and
mov
pushf
and
scas
dec
adc
rcll
sub
push
xor
cld
mov
in
push
lock
cmp
movsb
jb
cmpsb
cltd
xchg
leave
jge
and
dec
or
mov
xor
cld
fstl
ret
fdivrs
dec
jb
clc
mov
sti
js
loope
inc
repnz
jbe
daa
lods
bound
out
movsl
adc
in
xchg
stos
adc
mov
xor
inc
jecxz
cmpsb
push
push
arpl
inc
sbb
push
fstps
pop
mov
xchg
xchg
mov
scas
pop
jb
jl
or
or
cmpsb
sub
popa
outsl
adc
pop
push
inc
inc
lret
lods
cmpsl
inc
inc
sbb
movsl
mov
mov
push
jmp
jnp
testb
das
jecxz
sbb
cmp
lock
mov
mov
cmp
adc
add
movsl
jmp
imul
shl
pop
mov
or
adc
sbb
jle
in
inc
cmp
test
jo
jmp
cltd
adc
adc
pop
xor
testl
mov
and
push
xor
cmp
lahf
jge
stos
sub
mov
and
xor
outsl
or
xor
or
or
push
sbb
jnp
out
jae
pop
out
and
mov
cmp
adc
cmp
hlt
in
rcll
jl
je
imul
xchg
flds
xor
jno
mov
push
ja
jge
lods
xchg
cmp
negb
les
xchg
pushf
lods
push
loope
push
dec
call
xchg
pop
or
sti
sub
xchg
out
pop
or
int
sarb
pushf
pop
mov
pop
xor
mov
mov
xchg
inc
pop
mov
push
repz
xor
mov
mov
and
xchg
mov
adc
push
cltd
and
arpl
xor
hlt
xor
jmp
faddp
dec
jg
movsb
xor
add
add
mov
pusha
int3
xchg
pop
dec
fdivs
mov
scas
int
xor
sbb
arpl
adc
das
rcll
punpckhbw
movsb
dec
sbb
pop
push
imul
pop
movsl
lret
push
cwtl
lahf
xchg
sbb
dec
js
daa
mov
adc
mov
mov
push
or
dec
lcall
push
xchg
inc
fistl
lret
stos
std
fstpt
push
enter
cmp
jle
and
or
out
ret
cmp
pop
jne
popl
inc
test
pop
or
lock
cs
mov
push
push
dec
hlt
mov
jg
movsb
and
jmp
sub
lret
cmp
in
in
mov
mov
push
js
add
cmp
mov
in
push
movsb
out
test
sbb
xor
jo
mov
add
sub
stos
pop
ret
dec
insb
mov
rcr
cmp
xchg
inc
orb
pushf
pop
push
dec
loope
or
cmp
sarb
xor
adc
sbb
mov
push
mov
xchg
clc
push
in
push
inc
out
add
aam
mov
fadds
push
scas
sub
mov
ficompl
adc
xchg
pop
or
jb
jl
jle
sub
leave
popf
popf
mov
cmp
pop
mov
add
or
rolb
inc
xor
clc
aas
mov
lret
pop
mov
cmpsl
orl
add
sbb
cs
sub
ret
and
mov
adc
iret
movsl
cmp
leave
aas
lcall
movb
mov
or
xlat
and
inc
loopne
repnz
ljmp
jne
cmp
xchg
mov
mov
xorl
pop
cmp
or
mov
sti
arpl
loopne
pop
cmp
sub
sub
or
lahf
push
aas
mov
fs
lea
nop
imul
jo
sarl
inc
das
or
push
jle
push
push
test
fmuls
adc
or
ret
mov
push
cmp
sub
ljmp
sub
arpl
jne
repz
fnstsw
movd
mov
jo
clc
cmp
inc
lods
sub
into
sbbb
into
js
inc
mov
pop
or
outsb
cmp
jae
xlat
rcll
jae
xchg
cmpsl
lods
jne
out
mov
ljmp
stc
jg
xchg
pusha
xor
pop
popf
aad
cli
jo
or
jle
and
cld
push
mov
cmp
adc
lock
cmc
lret
outsb
arpl
jbe
out
cwtl
inc
fmull
movsb
mov
loope
ret
mov
mov
in
push
dec
lods
nop
test
cmp
loop
pop
rolb
push
shr
inc
jmp
mov
pusha
enter
sbb
xor
dec
xchg
gs
push
fwait
xchg
and
and
mov
or
out
push
push
les
iret
notb
sub
add
enter
pushf
xchg
mov
cmpsl
cmp
jmp
pop
scas
jge
aad
pop
es
cmp
jo
shll
push
pop
ret
cltd
jnp
aas
sub
and
adc
sub
xor
lods
xorl
mov
inc
jae
jns
pop
mov
fadd
fisttps
scas
adc
outsl
mov
fnstsw
cmpl
and
inc
and
or
scas
mov
sbb
push
fmuls
inc
jmp
stos
cli
sbb
inc
push
lcall
loope
push
fistl
outsl
in
xchg
mov
repz
mov
jno
cmp
ret
dec
repz
mov
inc
push
jae
mov
movsb
cmp
hlt
call
mov
mov
xchg
fs
pop
pop
sbb
outsb
adc
shrb
xor
call
sarb
cltd
jecxz
pop
mov
movsb
fnsave
xor
jl
xchg
mov
aad
sbb
movsb
je
sbb
or
xchg
cmp
movsb
and
ret
pop
mov
mov
mov
notl
mov
ret
rorb
and
ljmp
arpl
aad
push
out
jle
insb
fisubrs
shlb
add
xchg
clc
je
movsb
xchg
outsb
inc
pop
cltd
mov
add
inc
pop
mov
leave
cmpsl
aam
inc
stos
mov
mov
xchg
xchg
cmp
push
cmp
mov
sub
popa
sub
push
push
jnp
mov
xor
in
sarb
mov
das
out
sti
stc
cwtl
repz
push
lock
cltd
repz
mov
adc
cs
jl
sub
out
lea
testl
cmp
pop
cmp
pop
mov
xorb
or
addr16
adc
mov
xor
scas
out
or
arpl
ss
jge
ret
pop
and
aam
mov
data16
mov
pop
popl
cli
scas
ja
inc
lret
xchg
add
pop
movsb
jno
fwait
pop
pop
mov
stc
shl
sbb
xchg
pop
pop
lds
push
pop
jb
sti
push
adc
sub
stc
sti
mov
ds
xor
lods
sbb
cmp
jnp
shrb
push
and
sbb
jno
fs
mov
cmp
nop
popa
or
push
int
arpl
pop
lret
inc
xchg
loop
sub
push
mov
jae
movsb
mov
testl
mov
xchg
sub
sbb
loop
pop
push
add
jecxz
sbb
divl
clc
mov
and
enter
sub
leave
ret
mov
and
leave
push
push
clc
inc
lods
lods
mov
add
sub
rorl
dec
or
adcb
mov
lret
sub
gs
push
scas
xchg
push
inc
mov
mov
out
je
loope
xchg
outsl
repz
or
mov
addb
pop
xchg
lret
sbb
xor
jle
jp
pop
mov
mov
push
hlt
outsb
fstpt
rolb
ficoms
cmpsb
aaa
pop
mov
repnz
mov
sbb
push
add
je
lcall
adc
outsl
dec
hlt
scas
add
jno
lods
mov
xchg
mov
pop
push
or
cmpsb
stc
repnz
wrmsr
sarb
out
dec
mov
insl
sbb
cltd
mov
pop
sub
xor
cwtl
inc
mov
mov
call
ret
icebp
xchg
sti
lcall
divl
mov
lret
xchg
mov
call
iret
das
or
push
push
mov
dec
bound
mov
cmc
cmpsb
push
fstl
push
jno
pop
ret
lods
jmp
or
dec
add
sahf
ljmp
sbb
jnp
sbb
lods
mov
pop
orb
dec
push
jp
jmp
lods
stos
les
pop
sti
das
rcr
imul
test
adc
cmp
icebp
cwtl
jnp
scas
cmc
test
shl
xchg
imul
in
inc
mov
mov
or
add
bound
jp
cmp
add
cmpsl
imul
mov
rorb
test
or
push
mov
xchg
mov
enter
mov
icebp
jp
out
ja
pop
scas
fcmovne
dec
mov
or
pop
incl
adc
cltd
dec
out
mov
xchg
test
iret
aad
or
and
xchg
daa
inc
cmp
clc
push
pusha
mov
jmp
rcll
stc
addr16
stos
inc
adc
pop
push
stc
imul
loope
xchg
add
sbb
outsb
inc
aas
in
test
and
xchg
or
or
lret
fwait
or
inc
jle
push
hlt
cs
lret
insb
dec
frstor
cmp
scas
mov
enter
popa
insb
popf
push
mov
popa
enter
shl
aam
jo
imul
sbb
xchg
dec
mov
xchg
rclb
dec
jmp
pop
lods
jo
sub
test
int
dec
pop
pusha
xchg
xchg
lcall
ljmp
jb
iret
imul
das
insb
jp
push
mov
jae
jmp
mov
enter
sub
repnz
lahf
in
pop
loope
pop
xchg
jge
dec
dec
mov
or
adc
inc
int3
ljmp
pop
and
add
adc
jne
add
jno
stc
xor
cmp
movsb
push
sub
mov
xchg
mov
daa
pop
mov
jle
outsl
scas
xchg
mov
popa
mov
movsb
mov
inc
mov
fmul
lcall
js
cmp
jg
mov
and
in
lcall
decb
insb
mov
xchg
add
test
jecxz
mov
mov
cmp
sbb
ret
int3
mov
cmp
movsl
xchg
popf
dec
mov
adc
push
das
xchg
lret
add
sbb
stc
bound
int
xchg
cmp
in
inc
jae
prefetch
push
fcompl
and
lods
rcrl
add
push
scas
int
scas
les
and
xchg
orb
jecxz
inc
loopne
std
lret
arpl
es
lret
dec
dec
and
aam
imul
or
sarl
jl
movsb
dec
mov
incl
mov
sbb
cmpb
push
pusha
dec
int3
lds
cmp
pop
xchg
jge
imull
pop
mov
cmp
pop
nop
adc
jl
cltd
addl
repnz
lods
or
pusha
mov
je
das
cwtl
jecxz
push
mov
sbb
mov
ficoms
jp
cs
loop
into
sbb
pusha
mov
cld
ljmp
lds
inc
pop
xor
xor
and
mov
stos
lods
adc
in
sub
and
dec
call
mov
and
dec
jns
dec
jge
and
push
mov
sbb
out
js
fiaddl
movsl
xor
imul
int3
test
inc
arpl
or
fcoms
nop
push
leave
sbb
adc
cmp
mov
or
movsl
test
out
push
mov
cmp
and
dec
clc
cwtl
cmp
cmp
sbb
xchg
cmp
or
mulb
lds
das
inc
ja
fadds
clc
je
mov
pop
mov
loopne
xchg
dec
mov
enter
test
mov
scas
push
mov
and
pushf
adc
dec
leave
adc
ss
or
fsts
mov
out
bound
cld
divb
fwait
jb
jecxz
into
xor
fidivl
lcall
push
cmc
jp
and
lret
dec
adc
aas
aad
add
in
sub
xchg
or
shr
inc
fisttps
imul
xchg
xchg
imul
jno
jmp
xor
mov
lods
xchg
ss
ds
pop
xor
das
cmpsl
dec
bound
icebp
nop
xor
push
mov
ss
daa
out
mov
sub
out
mov
add
aam
mov
inc
or
sbb
mov
push
jmp
add
adc
leave
and
ja
mov
push
andb
adc
mov
icebp
xchg
push
inc
cmp
xchg
mov
dec
xchg
adc
push
mov
sub
mov
and
push
cmp
mov
daa
xor
mov
pop
inc
std
lock
push
xlat
lock
out
push
std
jbe
insb
test
sti
jno
sub
pop
mov
jle
fnstenv
xchg
enter
cli
xchg
aas
add
push
scas
cmc
clc
pop
cmp
rclb
mov
rol
in
test
dec
or
cltd
jae
mov
movsl
mov
lcall
sysret
lcall
cltd
dec
scas
xor
pop
mov
mov
loop
mov
stos
pop
lea
pop
xor
dec
xlat
or
or
mov
popf
shr
add
and
inc
mov
or
or
xchg
inc
sub
jae
in
pusha
or
std
fnstcw
inc
sbb
push
mov
mov
inc
adc
xor
mov
push
repz
xchg
sbb
int3
dec
addr16
mov
cmpsl
psadbw
aaa
pop
dec
test
pop
cltd
inc
pop
adc
xchg
inc
mov
mov
bound
sub
fcoms
push
cli
bound
push
dec
pop
loope
mov
sbb
inc
loope
icebp
add
adc
or
sub
cmp
jns
dec
sbb
fcomp
test
inc
cs
fnsave
orb
loopne
stos
negb
scas
scas
call
inc
jbe
daa
inc
stc
into
mov
lcall
mov
xor
and
test
and
mov
mov
imul
sahf
mov
cmp
and
pop
ja
cmp
push
mov
xor
jb
xchg
push
or
dec
cmp
xchg
fst
adc
int
scas
add
xor
jb
mov
pop
pop
xchg
or
lret
daa
arpl
push
pop
push
lret
mov
xchg
dec
or
and
std
cmp
scas
or
scas
push
ret
stos
cwtl
shrl
jg
fbstp
fstl
hlt
dec
pop
mov
clc
mov
or
xchg
cmp
push
bswap
es
mov
xchg
clc
in
jb
sbb
fiadds
sti
pop
cmp
sbb
sbb
sub
dec
fldt
lret
xchg
lret
and
les
lock
testl
shrl
jbe
in
in
es
pop
iret
call
sarl
xchg
xchg
mov
out
sub
sbb
pop
jge
or
nop
mov
les
pop
adc
pop
ss
lret
or
fsubr
inc
mov
jo
dec
xchg
lahf
sub
add
push
aaa
sub
and
cmp
popa
lods
inc
ret
and
or
pop
push
out
ds
test
xchg
adc
scas
inc
in
or
or
dec
add
test
or
mov
jmp
pop
or
push
xchg
mov
fimuls
add
mov
adc
push
push
push
ja
ret
xor
cmp
jmp
decl
mov
jle
iret
dec
sti
pop
lret
sub
push
add
stos
xor
mov
in
mov
sti
mov
dec
and
leave
nop
dec
dec
pop
addr16
pop
add
stos
ret
lds
mov
xor
je
mov
push
lret
loop
inc
in
rorl
add
shr
xor
or
pop
es
fistl
sub
cld
fcmove
int3
mov
dec
mov
xchg
dec
cmp
aam
mov
out
lods
mov
sahf
dec
add
sbb
icebp
mov
sbb
xor
shlb
pop
cmp
into
out
enter
cmp
xchg
mov
loop
adc
daa
mov
or
stc
fucom
fbstp
movl
cmpsb
push
mov
push
jmp
lods
inc
pop
lods
xlat
mov
out
shrl
les
mov
pop
aas
xchg
dec
mov
in
popa
ljmp
mov
xor
adc
out
cmp
imul
xchg
daa
jnp
mulps
cmc
ss
push
mov
or
aad
mov
aam
test
iret
test
xor
fwait
out
add
sbb
push
jmp
in
outsb
adc
sbb
lds
jg
stos
das
pop
mov
mov
in
inc
mov
ljmp
enter
xor
push
adc
sahf
sbb
xchg
jbe
mov
push
in
sub
orb
add
or
mov
pop
or
leave
pushf
inc
or
imul
js
inc
cli
mov
repnz
cs
int3
sub
mov
cwtl
sbb
or
sar
xor
adc
cmp
xor
cli
dec
pop
add
push
pop
aam
jl
mov
add
stc
in
mov
xor
pshufw
mov
xor
sub
mov
mov
out
mov
xchg
ficoml
idivl
movsl
gs
add
aaa
loopne
adc
pop
pop
fucomp
lock
sets
mov
cmp
cltd
push
or
orl
int3
cld
dec
clc
mov
in
arpl
sub
xchg
sahf
outsb
mov
xor
xor
cmp
mov
lahf
lahf
jae
andl
or
mov
fwait
cmp
cmp
xor
xor
ds
insb
jp
repnz
pop
cmpsb
mov
sbb
mov
xor
pop
xor
mov
pop
dec
mov
out
cmp
hlt
in
jmp
adc
pop
sbb
push
xchg
test
sti
popf
mov
test
pop
dec
icebp
out
jae
mov
and
mul
xchg
nop
in
xlat
nop
push
addr16
out
inc
mov
call
cli
push
in
xor
mov
or
sti
inc
call
mov
loop
ss
adc
push
mov
fwait
cmp
jne
cs
xor
xorb
pop
jge
push
rcrb
jo
pop
or
ljmp
in
mov
insl
mov
test
je
je
lret
adc
std
jae
pop
dec
mov
jbe
loopne
paddusw
push
inc
inc
dec
je
push
call
sahf
popa
and
mov
aad
in
test
aad
int3
xlat
mov
xor
sub
cmp
push
push
push
mov
adc
insl
insl
mov
jbe
mov
mov
sub
sahf
cvtdq2ps
mov
movd
repnz
in
xchg
lcall
ret
mov
enter
xor
jnp
lock
in
mov
js
inc
xor
imul
enter
cmpsb
fwait
adc
mov
in
sub
lods
and
into
sbb
push
scas
int
in
clc
mov
btc
cmpsl
sbb
loop
sti
mov
mov
pop
std
add
and
lcall
aas
ss
inc
or
dec
adc
ret
test
nop
outsb
pop
mov
add
mov
pop
dec
dec
int3
dec
loopne
leave
scas
pop
fs
fldenv
pop
cwtl
cltd
dec
xchg
nop
insb
cmc
cmp
int3
lcall
test
inc
sub
push
cmp
add
push
sub
push
dec
movsl
popf
into
push
movsb
daa
sbb
fs
repz
pop
push
lock
aaa
out
out
and
in
push
mov
ja
pop
inc
jge
loopne
push
test
enter
mov
test
fisttpll
sub
shll
or
stos
scas
jl
cwtl
adc
outsl
fstpl
pop
mov
dec
pop
stc
adc
ja
cmp
ret
sbb
inc
movsl
ret
mov
xchg
sub
mov
pop
leave
cld
sar
push
idivl
repz
mov
loope
int
cmp
mov
jb
lods
push
loopne
mov
int3
ss
or
rcr
idiv
dec
or
pop
in
push
jnp
addr16
jle
mov
lret
dec
mov
jge
je
sub
sub
in
stos
mov
dec
mov
inc
xorl
or
aas
jb
outsb
aam
lock
inc
mov
lret
shl
out
hlt
shll
rorb
fstps
gs
mov
std
fs
rclb
sbb
daa
jne
ljmp
inc
mov
push
push
jb
fisttps
jmp
mov
mov
and
inc
lret
rol
mov
lea
inc
arpl
push
jbe
outsb
xchg
xlat
aam
call
and
inc
or
pop
pop
ljmp
xor
in
add
in
push
repnz
lods
hlt
lcall
or
sub
add
in
lods
dec
cmp
or
add
push
or
idivl
adc
push
sti
and
inc
outsl
fnstenv
mov
pop
jo
mov
arpl
fidivrs
imul
dec
iret
dec
mov
shl
in
aad
push
imul
int3
xchg
or
lods
cwtl
xchg
cmpsb
stos
adc
pushf
mov
adc
push
add
xchg
loop
adc
movsb
push
sub
std
ja
mov
arpl
repnz
loopne
ljmp
shrl
cmpl
push
push
and
pop
adc
pop
mov
ror
stos
or
jne
rcll
inc
cld
cmc
test
rorb
movsl
xchg
gs
es
and
mov
out
inc
loop
flds
call
scas
idiv
addr16
cltd
xchg
mov
adc
adc
mov
add
ss
pushf
popf
push
jg
push
aas
add
adc
ror
lods
aaa
cli
xchg
fsubrs
int3
mov
arpl
adc
imull
adc
lahf
push
les
add
aaa
aaa
movsl
lret
imul
aam
jmp
gs
push
mulb
inc
popf
lret
les
and
std
mov
popf
test
mov
lock
inc
popa
cld
xor
outsl
loop
into
push
stos
jne
popa
test
mov
test
jl
sub
bnd
lret
pop
out
mov
hlt
pusha
fldcw
dec
iret
addr16
movsl
mov
in
daa
out
jle
ljmp
xor
adc
mov
and
xchg
or
aaa
daa
dec
xchg
ror
fstpl
pop
lret
add
stc
lods
dec
sub
loop
call
jp
lret
insl
sbb
cmp
sbb
or
clc
push
or
loopne
push
and
arpl
fwait
cmpb
dec
jg
js
bound
std
add
sbbl
cwtl
sub
repz
mov
xor
push
inc
rcrb
push
add
jl
cs
cmc
mov
xchg
int3
iret
cmp
scas
add
and
jge
pusha
out
xor
lds
xor
push
outsl
mov
and
cs
xor
insl
testl
inc
fs
mov
inc
jl
xor
mov
mov
adc
jno
and
shl
adc
jne
dec
xchg
mov
inc
cmp
cmp
test
sbb
fsts
cwtl
push
cmp
test
loop
xchg
xor
mov
adc
sbb
clc
out
push
ret
cmp
mov
aaa
insl
mov
jno
int3
ljmp
pop
daa
jb
out
in
pop
add
adc
mov
mov
jg
aam
mov
and
repz
mov
jne
and
ret
cld
jns
iret
pushf
into
pop
popa
ja
out
cli
jnp
push
adc
icebp
dec
ficoms
loop
in
pop
pop
sub
dec
dec
pop
inc
sbb
or
and
out
das
mov
cmpsb
jmp
dec
int3
dec
scas
pop
sbb
mov
push
stos
cmp
pop
fisubs
fs
xchg
arpl
jo
pop
andl
push
popf
push
test
mov
mov
and
popa
pop
lea
jg
test
add
gs
jne
and
insl
add
push
test
xor
popf
out
sbb
adc
sti
cmp
mov
scas
dec
in
mov
aas
les
stc
mov
enter
ret
and
arpl
jl
push
popa
mov
clc
pop
ffree
mov
mov
push
popa
cmp
sbb
and
adc
outsl
lock
jl
sbb
lds
insb
add
push
je
inc
cld
mov
inc
stos
pushf
adc
popf
cmp
mov
or
cltd
lahf
jl
xor
repz
sub
inc
lods
pusha
test
aad
push
push
rolb
imul
sub
shll
adc
mov
pop
jmp
popf
push
mov
jle
mov
sub
adcl
mov
dec
xor
aas
mov
and
fildl
daa
sti
mov
into
out
and
cmpsl
cltd
push
ja
int3
test
dec
jb
loope
mov
mov
inc
inc
pop
scas
insl
pop
pop
inc
jne
shlb
test
inc
inc
add
scas
cmp
adc
sub
stos
stc
mov
hlt
data16
mov
insl
lret
rclb
pushf
int
mov
test
test
jo
movsb
inc
mov
fmuls
sbb
lea
in
mov
add
outsl
jl
adc
xchg
add
push
js
lods
outsl
cmp
jmp
ss
sbb
and
and
add
push
jo
sub
and
int
mov
dec
ss
ja
out
jnp
stos
sub
jb
add
pop
add
push
push
push
sub
adc
dec
hlt
xchg
mov
sti
inc
je
push
aas
jae
in
imul
and
xchg
int
add
rcl
ljmp
leave
mov
inc
in
fsubrs
jl
lcall
daa
out
adc
dec
xor
push
jmp
pusha
aad
inc
addb
gs
push
jg
ja
cs
xor
inc
inc
rclb
cmp
scas
std
mov
lods
mov
cmp
or
sub
dec
jne
fs
mov
inc
test
xchg
shl
arpl
leave
mov
lret
push
addr16
test
jb
scas
and
scas
jb,pt
pop
cmp
dec
dec
dec
push
fbstp
adc
addb
lock
in
push
ja
hlt
popa
adc
pop
jg
orl
scas
add
cmp
xchg
inc
loope
sub
cld
ja
jecxz
lods
push
sub
push
sub
jle
adc
lret
lret
inc
adc
xchg
mov
mov
js
push
mov
xchg
push
fwait
adc
movsl
mov
cmp
sub
fstpt
sbb
or
pop
push
add
pop
jl
roll
rcll
mov
jno
mov
sbb
add
sbb
mov
imul
loope
ret
dec
repnz
shrl
test
xorl
cmc
cmp
sub
pop
dec
mov
jg
inc
ror
shlb
mov
add
cltd
or
shl
aad
inc
push
push
lods
leave
mov
dec
xchg
push
leave
dec
xor
pop
push
shrb
jne
mov
repnz
cmp
sarl
setns
and
pop
ret
sahf
arpl
jecxz
mov
mov
pop
xchg
add
fnstsw
aam
aaa
jecxz
mov
outsl
aad
push
sub
xor
in
or
cmp
mov
or
fs
jb
add
push
push
dec
and
adc
ds
insb
decl
popa
adc
addr16
out
call
jg
inc
xchg
push
pop
loop
fdivs
push
fwait
fisttps
xchg
jecxz
cmp
clc
test
adc
push
cli
mov
xlat
adc
adc
push
cmp
cld
shll
mov
push
je
mov
or
cmc
add
jg
out
int3
popa
pop
rcr
push
pusha
jbe
or
or
test
hlt
xchg
clc
daa
enter
push
or
xchg
sbb
imul
sub
aad
dec
jle
in
mov
clc
push
int3
dec
fwait
push
jmp
push
lcall
jnp
leave
xchg
mov
sbb
fbld
movsb
scas
aad
lcall
cli
inc
mov
aam
outsl
pop
xor
cmpsl
pushf
xchg
test
sub
xor
fistl
mov
dec
and
fwait
xor
out
ret
cmc
add
push
cmp
inc
repnz
sbb
push
cltd
sbbb
popa
sub
bound
jp
cli
add
fwait
jns
push
lret
int
mov
enter
xchg
in
push
jmp
out
xor
lret
jo
dec
push
sbb
cmp
push
out
add
lods
mov
pop
inc
lods
add
xor
adc
aad
inc
jmp
jbe
jecxz
jbe
fsubrs
xchg
mov
mov
adcl
fisubs
adc
lock
adc
das
and
mov
fldenv
das
adc
jmp
adc
xchg
loop
in
cmc
lds
aaa
mov
je
jmp
sahf
adc
insb
inc
insl
xor
loop
inc
inc
push
shr
vmaxpd
int3
movsb
xor
mov
adc
fldt
popw
lods
add
test
add
inc
fmuls
fdiv
pop
dec
lods
scas
pushf
push
fimuls
out
add
or
call
out
jo
ficomps
stc
mov
repnz
test
mov
ficomps
mov
iret
lods
push
xor
xor
mov
cmpsb
lret
dec
icebp
dec
jns
out
lods
aad
adc
daa
push
xchg
sbb
xchg
jecxz
dec
hlt
jp
mov
lret
fidivl
sbbb
sbb
and
icebp
adc
fs
test
xor
mov
aaa
fistpl
xchg
mov
leave
mov
repz
xchg
jns
mov
jae
cmp
sbb
stos
popa
inc
xor
rcll
cwtl
jnp
inc
in
pop
add
add
test
js
push
lahf
xchg
inc
add
bound
xchg
mov
inc
mov
pop
rcrb
mov
shll
out
test
mov
xchg
lea
sub
mov
xor
jle
leave
inc
jp
xchg
movhps
lahf
xor
loope
mov
sub
leave
add
lods
sahf
xchg
loope
bswap
lea
lahf
push
cmpl
xchg
cli
inc
add
mov
xor
rcrb
js
loopne
andb
sahf
movb
sbb
subl
mov
inc
fistl
shll
push
gs
or
or
inc
push
push
inc
out
lcall
adc
adc
dec
lods
xchg
shrl
cmp
xchg
rorl
test
arpl
aad
mov
int3
cmpsb
dec
mov
dec
mov
xor
push
movsb
hlt
imul
jb
jb
xchg
test
das
lea
cmp
popl
aam
mov
imul
filds
xor
xchg
ficoms
jne
gs
inc
xlat
cmp
pop
inc
dec
lock
cmp
sub
faddl
divb
dec
jge
aam
jnp
adc
sbb
push
sbb
clc
jecxz
add
cs
pop
sbb
xchg
clc
fstps
inc
jb
cmp
ss
addr16
xchg
clc
or
faddl
mov
dec
xlat
stos
push
jmp
rorb
push
sub
mov
sub
icebp
gs
dec
adc
sub
or
sub
and
addr16
test
adc
and
repz
nop
aam
fs
leave
out
insl
shr
mov
sub
mov
popa
jp
cmp
mov
pop
mov
and
ja
lea
dec
push
stos
icebp
les
imul
pop
orl
loope
jle
jecxz
or
jmp
enter
sbb
push
jno
mov
pop
cmp
cltd
outsl
xchg
fstps
sbb
adc
fcompl
dec
cmc
cs
mov
lcall
mov
jmp
sbb
mov
addr16
sub
popa
ret
fisttpl
fcomps
int
mov
jl
pop
daa
sbb
in
arpl
adc
mov
pop
xchg
icebp
push
fimull
lcall
rcr
lock
mov
push
ror
in
int3
xchg
mov
test
in
cmp
daa
adc
sub
subl
cmp
orl
lods
xor
adc
cltd
sbb
leave
fwait
mov
push
cmp
es
mov
inc
call
pop
scas
data16
fistpll
daa
arpl
les
add
mov
pop
loope
sub
pop
call
rorb
sahf
das
dec
dec
sar
mov
push
pop
xchg
xlat
mov
jae
jmp
mov
cld
aad
nop
test
imul
jmp
lcall
inc
xor
push
dec
lea
inc
mov
leave
and
jne
insb
inc
push
insl
decl
pop
inc
lock
stc
mov
dec
bound
mov
fwait
stc
mov
call
shll
outsb
jbe
scas
mov
sub
push
mov
mov
mov
aad
movsb
mov
jns
imul
rolw
mov
mov
subl
xlat
cs
stos
xchg
add
imul
aad
mov
clc
pop
incl
mov
loopne
mov
cmp
mov
out
jbe
icebp
dec
sbb
cmpsl
pop
lods
inc
inc
ret
mov
cmp
add
movsl
jg
int3
mov
pop
push
loope
data16
cmpsl
cmpsb
mov
mov
push
jle
cltd
shrl
add
xor
movsl
xor
aas
int
mov
fwait
insb
jbe
test
outsb
cmc
cmc
arpl
inc
sub
mov
lods
push
xor
lock
movsb
lods
pop
mov
cmp
mov
push
in
lods
inc
clc
push
pop
addb
push
xchg
lahf
daa
xor
cmp
outsl
int
cmp
mov
jno
lock
mov
jno
pop
test
test
popa
adc
test
cmp
lods
jmp
mov
cmp
mov
test
xor
aas
jne
mov
cmp
call
or
xor
jge
into
sbb
jg
jae
loope
add
jo
cmp
cmpsb
in
scas
repnz
lea
adc
push
push
ret
or
pop
in
mov
cmp
lds
xor
jl
xchg
xchg
arpl
rcll
iret
lods
clc
cmp
jne
lock
add
in
dec
xchg
cwtl
jl
stc
pop
push
inc
dec
stc
stos
add
and
call
fmuls
sarb
rcl
outsl
cmpsl
fimull
out
xchg
fldt
je
sbb
xchg
mov
les
cmp
test
add
aam
inc
mov
dec
inc
xchg
test
stos
out
xor
insl
adc
mov
shll
mov
imul
fnstsw
mov
push
aam
nop
int3
addb
xor
bound
or
ljmp
adc
in
lcall
loope
fs
inc
sbb
shlb
mov
scas
push
jbe
js
cmp
fcoms
andb
sarb
dec
mov
dec
test
jge
in
sbb
add
sarb
inc
jge
mov
jle
push
leave
inc
mov
jbe
cmpsb
pop
loope
movsb
mov
lret
pop
ret
popf
lahf
push
xchg
cmp
push
aam
adc
mov
adc
or
jae
insb
mov
mov
or
sub
sub
nop
outsb
cmp
mov
sub
mov
sub
xchg
outsl
push
std
in
daa
mov
enter
mov
imul
je
lahf
mov
out
mov
jne
jg
insl
arpl
aad
mov
and
ja
push
test
nop
cwtl
sarb
pop
add
sub
cmpsl
sub
enter
or
fcoms
dec
xchg
sbb
dec
lret
adc
sbb
mov
add
sbb
push
outsb
scas
xchg
lock
inc
inc
in
pop
ret
push
fbld
xchg
mov
stos
sub
sti
mov
jno
mov
in
jmp
mov
aad
inc
imul
fs
flds
inc
fdivrl
ror
movsb
jle
push
or
and
inc
inc
sub
lods
daa
or
dec
pop
lock
sbb
xor
outsb
sbb
push
adc
mov
andl
xchg
subb
ja
jmp
or
ss
shlb
sbb
xchg
mov
pop
popf
xchg
inc
lds
gs
adc
pop
dec
push
repnz
xor
outsb
sbb
orb
les
sbb
scas
and
in
inc
ret
pop
and
stos
push
inc
in
mul
negl
jbe
jp
xorl
cmp
jne
jge
xorl
push
jno
add
aam
aas
jle
loopne
jp
fs
fwait
bound
adc
lea
mov
popa
mov
stc
sub
mov
push
dec
jecxz
xor
pop
adc
inc
push
and
sub
ljmp
inc
dec
scas
les
adc
xchg
sub
insb
sub
mov
idivl
imul
add
and
scas
bound
fldt
xchg
shrb
pop
sti
cmp
dec
imul
es
mov
insl
sahf
pop
mov
push
daa
lea
repz
mov
adc
push
push
fsubrl
cwtl
rcrl
cmp
mov
pop
aaa
in
jecxz
mov
mov
pop
jbe
shlb
mov
es
sbb
jo
sti
mov
xor
pusha
jl
or
mov
jns
nop
imul
jb
mov
xchg
std
insb
data16
das
cmp
cmp
iret
fildl
jo
insb
scas
mov
insb
imul
sbb
and
pop
test
enter
aad
scas
pop
rcr
push
les
inc
mov
mov
aas
pop
push
dec
icebp
xor
push
cmp
mov
add
stos
push
xor
into
outsb
xchg
shrl
data16
shll
push
dec
mov
pop
mov
mov
popl
jns
test
stos
lods
orl
in
pushf
sub
inc
dec
mov
add
call
xchg
aad
hlt
and
lock
addr16
cld
loop
not
and
fs
arpl
or
nop
int
xchg
rolb
insl
xor
sahf
rcr
push
andb
hlt
fdivrs
pop
dec
scas
clc
jns
repnz
xor
cld
adc
mov
sub
sbb
mov
loope
into
add
addr16
mov
and
jae
adc
sbb
or
pop
cmp
push
cwtl
lahf
repz
hlt
sub
out
sub
imul
xchg
mov
sbb
push
sub
mov
jnp
add
or
pop
jge
and
les
mov
insb
mov
ret
cmp
push
sbb
sub
or
xchg
adc
xchg
ljmp
jne
clc
dec
je
and
cmp
pop
jae
inc
mov
jns
add
pusha
fdiv
pop
mov
sbb
rclb
ja
or
jl
sub
mov
mov
out
ds
jg
out
lds
pop
cmc
shll
cmp
outsl
ret
cmp
int3
fstps
mov
push
mov
jge
cmp
mov
push
rorb
jno
xor
push
movb
sbb
pusha
or
adc
or
xor
outsb
in
lock
cmpsb
in
stos
fsts
fwait
sbb
je
shll
inc
pushf
ja
cmc
iret
repz
add
and
cmpsl
inc
dec
xor
sarl
js
jle
out
test
andl
mulb
mov
lahf
mov
sbb
les
aam
lahf
push
lret
sahf
fwait
repnz
pop
jl
lds
insl
jp
test
addr16
data16
into
adc
cli
pop
imul
out
mov
dec
cld
cwtl
lds
fcomps
mov
jne
sub
es
idivb
rcll
mov
subl
sub
mov
adc
pop
add
or
mov
jae
and
xchg
sbb
push
das
and
rol
in
or
mov
mov
in
or
push
fs
dec
fnstcw
je
add
lds
lret
fmuls
insb
cld
in
adc
lahf
outsl
stc
out
fisubl
mov
push
xor
dec
adc
out
jne
mov
push
inc
pop
stos
inc
fiaddl
lret
fnstsw
mov
dec
pop
adc
jno
mov
jb
and
cmp
mov
pop
and
ret
jb
sub
inc
and
dec
sub
clc
mov
sbb
dec
pop
outsb
shll
and
and
ss
add
fldenv
jbe
xor
cmp
push
xchg
mov
cmp
jecxz
push
add
js
xchg
and
lahf
push
fnstcw
int3
mov
out
dec
pop
pop
cld
push
add
adc
ja
push
cmp
popa
adcb
add
or
les
and
push
lret
pop
cli
jnp
push
test
pushf
and
jle
jbe
and
bound
cmp
push
pop
jae
adc
mov
add
push
sub
in
mov
push
test
repz
xchg
pop
test
mov
or
idivl
xchg
jbe
or
mov
scas
enter
mov
inc
xorb
xor
les
cld
arpl
jne
jne
mov
cmc
sub
leave
lahf
shll
insb
out
mov
push
cmp
outsb
les
xor
cld
xchg
jle
enter
push
ret
xor
add
addr16
push
pop
push
daa
xchg
mov
mov
roll
jmp
or
dec
in
xchg
leave
lret
ja
ret
addb
int
mov
cmp
subl
mov
mov
test
idivb
cmp
roll
es
scas
fwait
mov
xchg
push
push
add
pushf
scas
in
out
bound
dec
adc
int
and
aaa
sub
jp
pop
inc
mov
icebp
xor
mov
arpl
ds
push
mov
inc
int3
mov
in
jbe
xchg
out
xor
mov
mov
imul
scas
cli
push
shll
aas
push
lahf
enter
sub
mov
pop
push
add
mov
pop
or
cli
mov
imul
push
stc
testb
xchg
dec
mov
xchg
mov
jecxz
or
mov
call
jle
sub
xchg
in
dec
inc
adcb
mov
ja
adc
cmp
mov
es
in
lret
lret
jo
pop
das
int3
adc
popa
add
loopne
loope
test
in
outsb
std
leave
iret
mov
and
fimuls
adc
jmp
jne
aas
lcall
or
and
mov
inc
add
repnz
or
test
imull
mov
ljmp
test
push
jne
cmp
leave
sbbb
ficompl
stc
sbb
add
scas
mov
mov
cmp
mov
fsubl
push
pop
xlat
mov
test
mov
adc
inc
cmp
mov
mov
jo
mov
jb
xchg
fs
pushf
sbb
outsl
ss
and
fldt
cltd
int
mov
lss
cltd
dec
outsl
cmp
adc
icebp
aas
xor
and
loop
dec
mov
cmp
rcll
das
push
addb
mov
mov
js
cmp
jmp
jbe
int3
add
es
dec
pop
sbb
shr
or
jle
test
jp
fwait
sub
lock
cmp
push
cmpsb
divb
mov
ja
shlb
pop
push
and
sub
das
outsb
cmp
mov
stos
and
dec
clc
cmpsb
rol
movsb
cmpl
adc
mov
xchg
popa
mov
pop
mov
push
xor
mov
jbe
mov
mov
dec
inc
adc
addl
jo
and
xor
cs
sbb
jl
dec
push
leave
push
cwtl
pop
inc
or
fnstcw
mov
int3
inc
cmc
and
lcall
pop
int3
pop
pop
push
jae
cmp
cmpsl
jns
fnstcw
pop
cs
ds
pop
pop
pusha
fisubs
es
lea
rcrb
mov
mov
lock
jb
xlat
enter
jo
and
cmp
mov
inc
scas
movb
add
aas
or
scas
aam
pop
sti
xchg
lods
jnp
jl
ljmp
sbb
inc
bound
popf
dec
mov
leave
enter
jns
lahf
stos
or
inc
nop
mov
filds
mov
add
xchg
xor
std
bound
adc
lahf
lcall
daa
push
out
inc
mov
sar
or
aam
into
mov
xor
xor
cwtl
xchg
std
lret
cmpl
dec
mov
rclb
in
loopne
xor
inc
sbb
scas
shll
jmp
push
and
dec
cmpsb
imul
mov
xchg
mov
xorb
xchg
repz
ror
cs
or
mov
fnsave
test
sti
jp
sbb
dec
sub
ficoms
mov
cli
and
int3
sub
mov
mov
and
sarl
cmpsl
jl
mov
jg
into
sbb
dec
cwtl
sbb
push
jno
pop
push
jnp
mov
lds
xchg
mov
cmc
xchg
push
dec
jecxz
cmp
outsl
and
out
jmp
sbbb
jle
iret
das
fsubl
cmp
lods
lret
nop
hlt
div
jae
add
push
mov
ss
testl
pushl
notl
push
push
inc
or
or
sbb
sbb
popf
icebp
mov
out
rcr
aaa
imul
cmp
fmul
pop
adc
xor
imul
jbe
mov
xchg
mov
pop
sbb
insl
sub
mov
mov
loope
dec
pop
or
inc
in
ret
push
push
cmc
mov
xchg
inc
outsb
sbb
sub
sbb
and
mov
mov
adc
mov
sbb
cmc
ficoml
cmpsl
mov
test
push
outsb
popf
divb
mov
cltd
testb
sub
inc
loope
adc
inc
inc
pinsrw
int3
out
pushf
add
push
fwait
add
pop
xchg
mov
repnz
mov
ret
add
insb
sbb
and
xchg
dec
js
sbb
inc
mov
jbe,pt
test
and
cmpsl
fnsave
std
or
and
popf
xchg
sub
mov
orb
ss
dec
inc
and
pushf
jae
push
pop
xchg
imul
in
sub
test
inc
cmp
inc
cmp
icebp
jmp
jle
add
repz
lret
daa
pop
jno
popf
and
insl
test
xchg
popa
cmp
out
shlb
xor
shl
dec
sbb
movsl
lcall
nop
imul
sbb
shr
pop
leave
loopne
inc
loopne
push
aas
pop
insl
add
bound
and
mov
enter
scas
rolb
sbb
in
sbb
jecxz
lods
sbb
cs
cmp
in
add
pop
jae
btc
sti
mov
mov
andb
pusha
cmpsl
xor
mov
adcb
scas
cmpb
dec
sub
shll
out
and
scas
mov
mov
ds
xor
cmp
pop
add
dec
lods
nop
cmp
sub
mov
mov
push
push
pop
push
mov
call
lds
and
jle
cli
cwtl
add
sub
pop
dec
push
repnz
jne
sub
adc
push
popa
cltd
pop
scas
movsl
push
mov
fwait
jecxz
cltd
xor
addr16
mov
aas
jnp
popa
pop
adc
out
xor
xor
inc
fs
xor
lods
xchg
mov
jecxz
daa
or
inc
test
mov
add
push
sbb
jge
mov
movl
imul
dec
cmpsl
jle
mov
mov
push
dec
cmpsl
add
test
arpl
and
scas
pop
sbb
leave
jbe
pop
pop
es
pop
jg
popl
shr
arpl
insl
lods
pop
cwtl
and
dec
dec
mov
xchg
sbb
std
jno
jo
fwait
popf
mov
inc
scas
or
dec
xor
add
inc
sahf
sub
jne
push
xor
mov
sbb
fwait
mov
dec
pop
add
add
dec
bound
rorl
sub
in
repz
test
insb
mov
mov
mov
xor
lds
mov
add
fmul
ljmp
xchg
aas
jecxz
and
xorb
nop
dec
push
push
push
or
adc
mov
popf
mov
adc
and
call
add
pop
push
or
insb
cs
imul
outsl
addr16
mov
jns
mov
repnz
pop
mov
xchg
sub
pop
push
fwait
scas
mov
jno
push
xor
dec
int
in
insl
xor
shl
pushf
pop
adc
dec
jno
aas
push
push
enter
rcrb
mov
xlat
dec
pusha
sub
and
sub
lret
movsb
mov
push
inc
pop
dec
dec
std
and
mov
stc
inc
sbb
dec
int3
cmp
push
and
repnz
subb
shll
and
push
adc
into
sbb
or
push
in
adc
andl
pop
add
cmp
mov
pop
mov
sbb
cwtl
mov
xor
imul
sub
push
inc
sub
imul
adc
inc
inc
sahf
cmc
es
pop
js
popf
pop
pop
adc
xchg
mov
push
xor
jbe
dec
lea
mov
adc
fsts
push
dec
int
imul
pop
pushl
call
aaa
mov
repz
aad
push
xchg
out
pop
sub
popf
lods
ljmp
lret
xchg
test
xchg
sub
add
xor
enter
ret
mov
sub
arpl
lahf
mov
and
and
and
xor
test
mov
adc
cmp
test
push
subb
or
jmp
popf
outsb
loopne
jl
or
xchg
jb
push
addr16
inc
ds
pop
scas
inc
std
hlt
pushf
jmp
unpcklps
or
out
dec
pop
lods
jmp
or
add
arpl
outsl
nop
jnp
fadd
lret
fsubr
jp
mov
out
or
mov
dec
adc
insb
loope
cli
fnstcw
sbb
xchg
pop
orl
popa
sarl
std
psubd
pop
lock
push
xor
subl
test
sub
xor
jmp
xor
ja
into
inc
xor
out
fs
mov
fs
cld
inc
jecxz
or
insl
pop
popf
stc
fcmovnu
stc
popf
sub
or
push
xor
test
insb
lret
jecxz
fmul
scas
repnz
sahf
adc
push
sarb
fucomp
dec
ffreep
fucom
pusha
mov
pop
sbb
ja
jge
pop
mov
sbb
or
xor
popf
fnstenv
sub
cld
mov
lret
pusha
cmp
in
scas
rdtsc
mov
mov
clc
xor
lret
or
or
mov
or
sti
aam
frstor
sub
dec
aas
cmc
cmp
imul
jmp
xor
int
dec
mov
repnz
mov
pop
roll
ja
cmp
add
aas
lret
mov
adc
fisubrl
adc
insb
sub
push
or
fucom
pop
push
adc
movsl
xor
test
push
fistps
inc
xchg
mov
inc
leave
dec
cmc
call
mov
leave
ljmp
inc
adc
push
cs
rol
mov
fcomi
fstps
int
dec
notb
repnz
sub
pop
dec
mov
mov
aam
fldl
lds
mov
imul
mov
jge
sub
fwait
xor
mov
ds
add
popa
sub
push
or
in
pop
jle
lret
ja
js
jne
dec
clc
sub
inc
fbld
repnz
into
popf
repz
mov
push
xchg
movsb
mov
out
xchg
or
dec
xor
sbb
stos
adc
test
jnp
js
insb
loopne
subb
sub
lcall
adc
aam
jb
xor
add
pushf
frstor
jns
jb
cmc
not
or
adc
popf
cmp
sub
sahf
lods
jl
gs
ret
jl
jp
add
push
jno
dec
xor
sub
dec
mull
decb
cmp
cs
dec
fcomps
mov
inc
cmpsl
int3
inc
push
sub
xchg
jbe
pop
loop
mov
aas
add
mov
mov
xor
test
fadds
pusha
fsubrs
stc
stos
cmpsb
cmc
cmpsl
sbb
mov
mov
pop
daa
mov
int3
pop
mov
pushf
mov
outsb
jmp
xchg
les
xorb
xchg
and
je
or
rcr
inc
xor
imul
cmp
fdivs
fwait
sbb
sub
rol
dec
jge
aam
sahf
mov
shrl
jne
mov
xlat
scas
dec
and
sbb
mov
les
mov
cmp
dec
mov
test
loop
and
and
pop
cmp
adc
lret
mov
in
pop
inc
fwait
sbb
sub
rol
pop
fdivl
and
sbb
push
and
mov
es
lods
cs
pop
push
sub
cltd
mov
dec
add
and
mov
push
xor
or
fsub
movsb
mov
push
cmp
xchg
dec
js
sbb
cmp
fstps
jb
add
pop
jmp
daa
push
jno
xlat
aas
dec
insb
lahf
fdivrs
pusha
cmp
std
mov
out
and
iret
cmp
les
add
stc
sbb
xchg
add
mov
jo
fnstcw
loopne
adc
out
hlt
push
outsb
enter
mov
push
dec
test
fbld
add
sbb
sub
pop
jl
mov
add
jae
mov
and
arpl
pop
lods
cmp
sub
fadd
pop
pop
and
mov
xchg
or
xchg
cmp
cmpsl
out
cmpsb
push
sbb
mov
mov
adc
pusha
lret
or
pusha
jge
adc
pop
sub
lods
and
xor
imul
mov
js
xchg
iret
out
xchg
insb
cwtl
or
adc
scas
lock
dec
jmp
mov
hlt
repz
notl
mov
jmp
rorb
in
cs
movsb
stos
jno
orb
ja
push
jnp
inc
jnp
leave
xchg
mov
pop
out
clc
or
lret
sub
add
xorb
push
cwtl
pop
pop
sub
mov
jge
mov
cli
sbb
cmpsb
lret
shrl
inc
cmp
add
outsb
mov
and
sub
sub
mov
add
shrl
insl
pop
loopne
push
xchg
inc
pop
fisubrs
rcrl
jns
and
pop
sub
cmp
cli
cmpsb
xor
repnz
aad
out
inc
daa
mov
aam
out
fcomp
popa
jb
sarb
loop
xchg
icebp
mov
out
fwait
ret
xor
test
adc
cmp
pop
add
xor
data16
pushf
inc
loope
push
mov
adc
inc
pop
push
out
mov
iret
jns
fldenv
notl
sub
ficompl
push
push
jno
dec
push
xchg
sbb
sahf
stc
sbb
test
jbe
push
rcr
popa
bound
jbe
je
adc
iret
out
arpl
dec
push
fistps
rolb
fists
fsts
es
adc
fildl
in
lock
aaa
sar
iret
jne
xor
out
sbb
xchg
decl
dec
cmp
loope
mov
lahf
call
mov
and
mov
or
aaa
scas
mov
push
inc
and
sbb
jle
es
inc
ja
stos
xlat
sahf
jle
fsubrs
call
xor
es
cs
int
mov
mov
jle
dec
cli
neg
ljmp
lret
mov
lods
add
or
adc
std
pop
rorb
xchg
fwait
sub
jge
cmp
inc
lea
jbe
dec
fadds
cmpsl
sub
insl
outsl
bound
add
ds
xlat
fldcw
lcall
or
adc
dec
sbb
adc
or
mov
jg
mov
shll
cmp
leave
sbb
leave
lret
jae
sbb
test
mov
jno
xor
sbb
enter
jmp
pavgw
insb
addr16
cmp
or
sub
xor
inc
dec
add
dec
addr16
cmp
or
xor
stc
test
lds
sbb
mov
add
inc
and
lods
sbbb
push
mov
data16
xchg
dec
xor
xor
push
push
add
push
xchg
mov
xor
test
out
aam
in
lds
mov
test
dec
outsb
mov
sub
imulb
xor
fcoml
cmp
cmp
cmp
mov
xchg
dec
hlt
adcb
add
sub
call
adc
xor
hlt
mov
sbb
mov
mov
pop
lcall
stc
mov
mov
insb
arpl
call
loop
cmp
and
cmp
pop
loop
mov
insl
lret
add
popf
push
cmc
xor
in
sbb
daa
push
dec
push
and
push
cld
je
cltd
pop
test
loope
push
and
xchg
push
cli
test
and
daa
mov
les
popf
cmpl
test
imulb
push
pop
cmpsb
mov
pop
cwtl
xchg
sbb
cmp
inc
sbb
test
adc
mov
ds
loop
adc
dec
xor
add
sti
inc
mov
mov
das
fmuls
add
outsb
aaa
inc
lock
nop
arpl
lret
fs
imul
daa
rcrb
nop
sub
cli
cmpsl
xor
gs
test
sahf
cmp
push
or
jle
jp
mov
and
lret
adc
push
jo
icebp
aam
add
xor
mov
rorb
cmp
mov
fdivrp
mov
stos
jne
push
sub
mov
xchg
cwtl
out
out
mov
sub
sarl
cld
bound
ljmp
fcmovnu
jmp
psrlq
jmp
popa
fiaddl
rclb
push
rorl
leave
add
and
lods
jb
andl
dec
pop
xchg
fsubs
idiv
xor
or
and
loope
xchg
out
das
pop
mov
and
and
ja
cmpsl
dec
jo
adc
lcall
jp
insl
and
sbb
call
xchg
imul
inc
mov
shlb
sub
cmp
mov
aaa
jnp
sti
shlb
xlat
sub
add
cmc
add
lock
iret
jno
rclb
push
pop
and
jmp
cwtl
dec
popa
push
and
sahf
rorb
shlb
mov
dec
pop
adc
mov
test
jns
and
test
mov
push
push
clc
add
adc
pop
das
ljmp
test
ret
ds
jmp
std
pop
jecxz
sub
and
cmp
pop
bound
jnp
dec
gs
fnsave
jmp
jmp
jle
subl
pop
adc
int3
mov
xor
sarb
out
push
mov
stc
pop
je
aas
sub
pop
push
repnz
push
push
jg
movsb
mov
add
into
lret
out
push
adc
mov
movsb
and
cmp
cmp
add
mov
pop
fsubl
push
pushf
rorb
addl
outsl
ret
mov
movsl
in
adcl
and
and
and
mov
inc
sahf
jg
mov
out
aas
lcall
int
outsl
inc
pop
inc
xor
cmp
xchg
fwait
dec
pop
lods
and
or
ret
idiv
cld
sarb
mov
add
or
loope
aaa
out
pop
aam
xor
sti
loopne
xorb
lret
xor
sahf
loopne
pusha
xor
jg
dec
inc
subb
repnz
in
shr
js
mov
int3
mov
cmp
inc
cmp
pop
mov
cmc
add
adc
in
jl
sub
sub
adc
sbb
xor
adc
xchg
cli
lods
testl
das
rorb
test
pop
inc
ja
test
jns
inc
outsb
out
xor
mov
jge
or
rcl
sub
call
xor
ljmp
cwtl
dec
or
jbe
dec
loopne
cwtl
pop
mov
push
inc
dec
mov
in
std
push
xor
sbb
mov
adcl
sbb
jb
pop
cwtl
dec
xor
xchg
das
push
or
mov
outsb
xor
xchg
int
jmp
cmp
pusha
dec
lock
mov
dec
mov
lea
or
enter
dec
adc
les
xchg
ror
seta
subl
inc
lret
fisttpll
jecxz,pt
incl
das
push
popf
rcll
xchg
add
mov
mov
push
pop
shll
js
cmp
and
imul
xor
mov
xchg
lods
ljmp
ss
test
xchg
insl
pop
movsb
xorb
rcl
sbbb
mov
push
ljmp
ljmp
rcrb
cmpsb
and
in
ficomps
adc
sub
add
out
data16
sbb
mov
sbb
cli
xor
loop
lods
scas
adc
push
test
sub
adc
add
lds
pop
mov
aaa
nop
shlb
adc
repz
int
add
fists
lcall
aam
addr16
fcmove
jge
or
pop
jge
decl
aas
or
aas
leave
jnp
test
jle
push
push
pop
movsb
in
mov
cwtl
mov
pop
pusha
add
mov
mov
sub
cmp
jns
sub
jle
xor
jmp
cmp
or
push
nop
push
enter
loope
jns
xchg
mov
push
sbb
jg
leave
les
daa
push
push
sbb
lods
repz
fcmovu
leave
sub
lds
cmpsl
xchg
pushf
iret
fcmovbe
fstl
inc
mov
mov
mov
out
cmp
es
jo
mov
mulb
aas
cwtl
mov
ret
fs
xlat
fidivl
sbb
insl
inc
jg
mov
aad
sbb
jmp
cmp
push
sub
pop
mov
mov
dec
xor
inc
movsl
divb
lret
cmp
cwtl
adc
inc
mov
push
lea
in
js
enter
lret
fs
cmp
into
sahf
xlat
inc
xchg
leave
sub
repz
pop
frstor
xchg
adc
add
jns
test
stos
mov
jg
jne
and
sti
mov
stc
je
xor
ss
mov
inc
insb
out
pop
int3
pop
movsb
sbb
sub
mov
and
lods
lcall
add
push
mov
mov
cmpsb
into
cmp
adc
imul
mov
test
inc
or
mov
xchg
in
andl
in
sub
rclb
xor
sub
jb
jnp
stos
pop
cmp
scas
jp
xor
ret
rcrl
mov
sbb
dec
fmull
and
std
inc
cmp
movl
pop
sbb
sub
add
mov
adc
cwtl
xor
add
sub
xor
sub
test
iret
cmpsb
mov
jns
xchg
pop
scas
add
sbb
rcr
stos
jmp
jp
shrb
out
mov
filds
pop
push
pop
add
iret
xor
dec
cmp
idivb
mov
add
movsb
xchg
jnp
push
lahf
stos
push
lods
mov
sub
or
js
xchg
dec
pop
pusha
jmp
or
push
inc
aam
sub
mov
or
ja
push
aaa
sahf
je
loopne
fldenv
and
dec
xchg
int3
jns
xchg
insl
cmp
dec
shll
sub
xchg
bound
cs
out
sahf
orl
outsb
out
leave
xlat
aad
adc
lods
jnp
add
test
setne
push
mov
std
dec
das
scas
mov
mov
mov
pusha
push
shr
mov
mov
ja
out
cmpsb
dec
dec
sbb
xchg
and
incl
ror
push
mov
xchg
shlb
ficoms
lods
daa
dec
sub
repz
jbe
sub
mov
sahf
jae
movsl
xor
fs
inc
sbb
lods
inc
jmp
ja
mov
rcrb
jl
pop
mov
push
les
pop
fcoml
stc
mov
test
rorb
xor
mov
int
sub
pop
fnstsw
js
inc
push
stc
push
cmp
inc
iret
adc
js
imul
inc
std
in
imul
pushf
mov
movaps
mov
cld
inc
fdivs
xor
sbb
jnp
or
lods
sub
pop
daa
pop
and
fs
cmp
arpl
nop
xchg
and
lds
xchg
add
inc
je
sub
sub
fcomi
mov
ja
orl
js
adc
mov
es
scas
stos
movsl
jg
push
enter
mull
in
jnp
outsb
add
enter
hlt
mov
xchg
test
bsf
fwait
aam
cmp
jecxz
push
add
daa
xchg
cmpsb
inc
lret
aad
icebp
mov
xchg
xchg
mov
ss
jp
insb
sbb
mov
push
mov
or
popa
out
fnstsw
mov
sub
xchg
xor
out
das
insl
sub
or
dec
clc
add
or
int
inc
ret
jns
iret
xor
push
imulb
cli
ret
and
push
adc
jmp
sub
pop
fisubrs
je
mov
rorb
mov
mov
xchg
sarl
bound
push
shll
je
cmp
cld
dec
cltd
sahf
data16
fscale
fidivrl
les
rcrl
out
mov
mov
jmp
das
insb
repnz
xchg
dec
data16
mov
shlb
and
jno
xchg
jg
cmp
mov
sbb
cli
sti
or
ljmp
lret
pop
or
fildll
pushf
dec
jg
fdivp
jecxz
lods
push
daa
mov
in
cmp
rorb
sub
sbb
test
inc
push
lret
stos
push
hlt
xor
shlb
push
mov
aad
push
add
push
push
adc
inc
adc
mov
and
pop
adc
add
fists
ss
filds
aam
das
lret
aaa
cmpsl
sbb
ds
pop
pop
inc
gs
pop
push
dec
push
push
out
pop
jae
pop
jae
adc
adc
cld
mov
push
scas
and
push
lods
loopne
or
cmp
stos
mov
cmp
aaa
mov
stos
cmpsb
xchg
inc
xchg
or
mov
dec
sub
not
add
add
fwait
addr16
adc
out
das
je
aam
fnsave
mov
and
cli
into
or
push
lock
pop
mov
add
pop
mov
mov
jg,pt
out
and
out
xchg
or
hlt
push
jo
push
ljmp
add
ds
negl
push
inc
cmp
mov
mov
and
fwait
roll
fld
mov
imul
sub
rcl
pop
xchg
xor
lret
cmp
and
outsb
incb
and
add
out
popf
pop
mov
mov
mov
mov
in
jg
mov
push
dec
icebp
in
cli
movsb
aad
mov
popa
lock
pop
cmpb
fwait
xchg
xchg
call
lcall
mov
lea
jne
jb
mov
cmpsl
nop
dec
mov
pop
stos
or
fimull
cwtl
hlt
pusha
cltd
sbb
cltd
adc
push
in
xor
or
jb
push
mov
jb
pop
scas
mov
stc
cwtl
sbb
pop
mov
inc
jg
dec
dec
cli
dec
mov
cwtl
loopne
push
adc
push
pop
bound
scas
lds
jp
in
cmp
cmp
sub
add
sub
ljmp
std
push
mov
inc
insl
mov
mov
sti
xchg
xchg
pop
mov
addr16
push
adc
out
scas
lahf
in
cmpsl
and
popl
stos
inc
dec
cmp
shll
loopne
out
into
jns
mov
mov
cmp
clc
sub
jl
sbb
mov
arpl
mov
mov
dec
loope
mov
mov
xchg
push
xchg
stc
mov
mov
and
faddl
cmpsl
and
ljmp
and
and
or
sub
push
jmp
xor
mov
ret
cmp
mov
push
movsb
rcrb
mov
lcall
cmp
les
repnz
pop
adc
xor
xchg
add
mov
sbb
sbb
pop
ljmp
cmp
xchg
xchg
push
inc
inc
push
sbb
hlt
int3
mov
popf
test
cltd
and
pop
divl
xor
jle
and
ja
shl
or
ret
mov
andb
push
adc
dec
fsub
mov
jp
lret
jno
stc
jno
mov
mov
sti
push
lcall
jo
dec
sti
pop
xchg
subb
pslld
ja,pn
sub
iret
sub
cmpsb
push
sbb
xor
pop
shrl
and
jns
notb
push
inc
pop
inc
popa
clc
cmp
sti
xchg
xor
ret
sbb
mov
sahf
pop
pop
dec
sbb
cmp
mov
sub
push
jne
cli
sbb
pushf
repnz
sbb
xor
in
popa
test
mov
mov
enter
in
sub
xor
and
addr16
cld
imul
lods
and
jg
int3
gs
add
mov
sbb
adc
imul
add
fbld
lods
jmp
call
stos
mov
mov
aaa
aaa
rorb
xchg
ret
movsl
loopne
decb
jle
and
and
in
cli
mov
inc
lock
add
aas
sub
mov
ret
iret
dec
push
lods
stc
stos
xlat
xchg
cwtl
dec
xchg
cmpb
cmp
cmp
cmc
clc
in
mov
imul
dec
xchg
mov
mov
or
in
push
test
and
ljmp
cmpsl
movlps
inc
int
aad
adc
sub
int
pop
jecxz
lret
repnz
pushf
nop
lcall
je
in
and
into
loope
push
push
mov
cwtl
mov
dec
push
dec
popa
in
scas
rcrb
push
nop
das
stc
adc
stos
xchg
sub
jecxz
bound
push
test
cmc
or
sub
iret
divl
loop
push
adc
sbb
xchg
lcall
mov
and
pop
lret
mov
pop
mov
dec
pop
ss
ret
rcrb
xchg
lea
adcb
movsl
movsb
in
bt
stc
pop
xor
dec
int3
gs
and
fnstsw
fldcw
fwait
paddq
add
jl
sbb
ds
dec
or
add
mov
out
repnz
xchg
mov
popa
in
mov
cmpsb
cmp
testl
jbe
into
pop
xchg
icebp
xchg
mov
test
gs
ret
ds
mov
xchg
inc
imul
test
xor
neg
int3
sbbb
pop
push
lods
out
mov
xchg
sub
cmp
mov
xorb
mov
mov
mov
hlt
xchg
shlb
sbb
jge
push
adc
rolb
adc
xchg
push
sbb
xchg
mov
andl
inc
sub
sub
xor
sub
sub
xchg
dec
push
addl
jge
lahf
sub
gs
jb
inc
xchg
or
out
mov
inc
cmc
adc
ret
push
mov
inc
cld
test
mov
jns
xchg
adc
in
ds
fsts
aad
sahf
mov
sub
jg
push
adc
pushf
jns,pn
rcrb
adc
push
push
inc
or
xchg
stc
cltd
pop
imulb
jecxz
stos
xchg
inc
dec
cmp
outsl
push
mov
push
xchg
cwtl
mov
stc
cwtl
mov
cmp
dec
jge
dec
sbb
sub
test
inc
jmp
setp
iret
mov
pop
adc
popa
inc
arpl
negl
std
pusha
imul
lock
and
sbb
push
std
lock
cmc
inc
cld
shl
loopne
cmp
loop
lahf
aas
adcb
insl
pop
jae
aam
mov
or
mov
and
pusha
loopne
lods
test
movsl
jnp
jmp
adc
jo
push
mov
add
ret
sub
adc
nop
and
scas
inc
pop
loopne
into
mov
jnp
inc
mov
stc
ds
and
add
test
and
bound
pop
pop
adc
inc
xchg
sub
mov
jg
call
xchg
mov
cmp
inc
adc
xchg
test
aas
fldenv
lock
out
cmc
je
loopne
test
push
cmp
inc
mov
into
push
dec
inc
iret
sbb
mov
xchg
pop
cmp
sbb
jmp
cmp
popw
addl
js
push
adc
lods
pop
pushf
rorb
jmp
shlb
hlt
xor
inc
or
fldenv
mov
and
notl
aas
ret
lods
outsb
daa
mov
or
and
stos
xchg
adc
cwtl
fildll
mov
push
jp
mull
cmp
data16
mov
inc
xor
ret
lahf
sti
dec
and
sbb
repnz
addr16
lcall
lcall
pop
xor
popa
pop
and
clc
sti
pop
and
cmp
inc
push
aam
les
xor
pop
arpl
sbb
pop
aam
mov
jo
sbb
cmp
mov
adc
cmpsl
mov
cmpsl
dec
loope
in
lahf
jnp
mov
jmp
add
dec
or
cmp
lea
in
outsb
xchg
pop
pop
adc
xor
dec
movsl
aad
xchg
or
or
xor
jp
sti
dec
pop
inc
sub
jae
lock
or
mov
cld
jg
jle
call
mov
mov
sahf
xchg
popa
push
mov
std
mov
out
ja
fldl
in
xchg
xchg
daa
movsl
jne
adc
xlat
xchg
std
and
movsb
xchg
xor
stos
rclb
jns
jecxz
filds
cmp
stos
movsb
rolb
shlb
sub
pop
mov
dec
mov
dec
mov
jb,pn
scas
bound
push
addr16
and
cwtl
int3
dec
cmp
jno
xchg
pusha
sbb
inc
cmp
and
scas
push
jecxz
cwtl
mov
jb
idiv
jns
cmp
pop
jmp
ret
das
insl
imul
inc
and
movsl
das
pop
ljmp
lret
in
inc
inc
nop
jbe
loop
dec
dec
mov
xor
ljmp
out
push
insl
sahf
out
nop
les
sub
sbb
mov
mov
pop
mov
mov
sub
mov
sbb
pop
add
ljmp
cmpsl
cld
repnz
inc
lods
fldenv
loop
push
inc
loopne
enter
jl
push
mov
sbb
fwait
dec
cmc
popa
dec
xor
pop
lods
mov
jmp
lea
daa
out
mov
out
jge
jmp
js
lock
arpl
das
xorl
mov
loop
cmpsl
mov
pop
mov
imul
aaa
test
xor
push
shrl
cmp
stc
xchg
pop
pop
incl
inc
jmp
mov
jno
mov
mov
dec
ds
cltd
or
pop
cwtl
rclb
or
pop
test
jmp
xchg
lock
ss
jmp
pusha
push
mov
mov
cvtpi2ps
xchg
jp
sti
inc
sbbl
imul
cmpsb
pop
xlat
pop
jno
inc
sbb
inc
lahf
inc
adc
inc
sbb
data16
movsl
pushf
push
cltd
xor
dec
scas
bound
mov
adc
dec
sub
pop
repz
and
mov
ljmp
dec
outsl
sub
sbb
rcrb
dec
mov
negb
aas
dec
pop
popf
cs
cmpsb
mov
outsb
lahf
das
rclb
out
inc
pop
mov
or
mov
je
das
out
jns
inc
pop
ds
mov
imull
push
mov
call
mov
mov
xor
inc
daa
imul
cltd
lods
popf
xchg
inc
inc
std
ret
jno
outsl
popa
ja
add
ljmp
and
xor
mov
xor
cld
xchg
xor
inc
sbb
sti
xchg
and
sub
add
mov
ficompl
repz
inc
xchg
std
movsb
xlat
lds
int3
imul
sbb
mov
nop
enter
sbb
imul
dec
rol
push
out
jnp
lret
mov
jmp
mov
je
jno
mov
std
adc
mov
inc
leave
sahf
out
add
mov
pop
sti
mov
mov
push
cmp
and
mov
adc
pop
int
cltd
gs
pop
sarl
and
cltd
sub
arpl
sbb
add
adc
xchg
xor
sti
lahf
fwait
int
add
jecxz
pop
das
shlb
cld
pop
jno
add
lret
in
and
pop
sahf
mov
es
adc
xchg
mov
fldt
fistpl
add
repz
or
adc
or
mov
mov
push
xchg
adc
xorb
sti
xchg
imul
inc
jmp
repnz
lds
cmp
jge
add
clc
push
test
lret
cmpsb
outsb
sbb
nop
out
add
in
sar
mov
push
fs
push
faddl
inc
sub
movsl
sub
dec
sbb
jo
inc
scas
popf
inc
das
cmp
jnp
pop
clc
movsl
out
xchg
cwtl
leave
imul
push
int
nop
dec
add
xor
lahf
mov
lret
daa
mov
push
jmp
lret
pop
pop
mov
mov
xchg
lret
into
es
enter
push
test
dec
sbb
push
fistpl
mov
rclb
mov
jnp
cmp
loopne
ret
lahf
adc
pop
enter
pop
mov
inc
cmc
jae
shlb
mov
inc
dec
cli
ss
pop
push
in
mov
push
lahf
push
push
jge
fisttps
lret
cmp
sti
mov
rcll
loop,pn
ds
dec
dec
add
adc
aam
jne
xor
xchg
mov
or
lock
mov
jg
int
mov
dec
cs
loop
mov
fisttps
ja
jno
ja
dec
or
and
out
lea
scas
add
jmp
and
icebp
add
push
js
push
dec
pop
mov
mov
lret
addl
mov
arpl
mov
clc
ja
adc
add
sbb
inc
insb
jae
mov
cwtl
mov
aam
lcall
ficompl
dec
js
test
ds
int
mov
pop
add
fwait
adc
xchg
icebp
loope
or
mov
insl
xor
inc
out
or
cs
dec
in
mov
and
push
int
pop
or
and
pop
nop
into
adc
jns
mov
iret
sub
push
inc
movl
test
icebp
jmp
inc
add
push
clc
mov
imul
fistps
sar
pop
mov
push
jns
loopne
jae
mov
fildll
repnz
pop
scas
dec
mov
fs
fs
adc
pop
push
xor
cmpl
or
push
adc
cltd
les
pop
lds
ss
aaa
jnp
jno
fnsave
cmp
or
inc
stc
rorl
sbb
in
xrelease
mov
out
pop
pop
mov
mov
add
cmpsb
dec
jle
gs
lret
push
add
loope
push
inc
inc
lods
aad
xchg
shll
int
movsb
sbb
shrb
stc
gs
dec
hlt
add
mov
sarl
sub
or
pusha
jl
repz
cmpsb
fnop
lods
dec
inc
jge
mov
testl
push
inc
decl
test
cld
pop
sbb
fmuls
push
nop
jecxz
cmp
mov
lock
loop
cmp
xor
xchg
out
daa
inc
adc
sbb
roll
outsb
scas
shrw
cld
xchg
mull
jbe
leave
add
cld
pop
movsl
push
dec
inc
jg
mov
inc
sub
in
inc
and
or
mov
adc
out
or
dec
jae
out
aad
xchg
push
mov
mov
jno,pn
adc
ljmp
stos
ljmp
dec
dec
cmc
std
rcrb
dec
lods
test
push
ja
xor
adc
pusha
rclb
in
sbb
ret
ds
adc
jle
xchg
add
adc
dec
cmc
inc
jae
xorl
cld
out
jmp
ds
aad
add
inc
add
lret
cmp
outsb
jecxz
cs
mov
or
push
jmp
mov
jne
imul
repz
mov
push
lods
dec
cmp
cmpsb
jg
test
pop
jg
pop
dec
cmp
xor
pop
das
adc
xor
pop
dec
adc
push
cs
push
je
dec
mov
push
fwait
xor
xchg
cmp
jp
outsl
aaa
and
sub
out
aad
roll
lret
fidivrs
mov
jae
mov
sub
orl
xor
in
ret
fbld
fcompl
shrl
enter
lahf
xor
sbb
in
aas
and
outsb
add
ljmp
sbb
pop
add
xor
fldln2
lods
stos
jmp
cmp
or
loop
add
jp
lretw
mov
mov
orb
jmp
add
xchg
jno
out
repnz
sub
lahf
into
xchg
jae
pusha
enter
insb
daa
call
fsubrl
jl
jnp
insl
inc
lods
hlt
sub
push
in
dec
imul
in
std
jge
xchg
cmp
jle
lds
jle
xchg
jg
xor
adc
adc
dec
aas
add
movsb
xchg
pop
in
fidivrs
cmpsl
push
xchg
mov
push
pop
xchg
mov
mov
add
mov
test
dec
sub
aaa
mov
stc
xchg
pop
mov
mov
fimuls
aas
cli
pop
aas
aad
pop
push
cmp
fsts
mov
sarb
push
jp
xor
dec
imul
sub
lds
rep
add
push
daa
data16
fstpt
pop
mov
pop
clc
faddl
mov
test
js
mov
fwait
jg
pop
ret
aam
int3
sub
nop
repz
mov
in
cmp
pop
and
ds
push
or
or
xchg
pop
inc
je,pn
lods
jno
out
and
fldt
je
sub
mov
mov
jne
arpl
push
push
iret
addr16
in
cli
and
jns
movsb
sub
call
or
inc
and
push
out
out
fdivrp
sub
int3
mov
loope
push
int3
adc
cmpsl
jo
xor
insb
lds
ret
adc
and
mov
jp
and
dec
mov
les
int
xchg
jae
sti
stos
xchg
or
cmp
sub
jle
lods
adc
pop
sbb
fmull
pop
inc
inc
mov
xor
sbb
test
mov
test
mov
mov
fdivrs
ss
cli
sbb
or
xchg
pop
in
loopne
fldcw
scas
imul
lret
sbb
xor
jg
push
jg
scas
ja
add
fidivrs
add
test
pop
pop
mov
push
mov
ret
js
test
push
aaa
packsswb
mov
lods
dec
jmp
adc
push
fstl
cld
out
lock
arpl
mov
insb
aad
mov
mov
sub
int3
aas
insb
inc
or
bound
jne
ret
hlt
xor
stc
aas
out
aam
mov
fidivs
fwait
loopne
jo
mov
jl
adc
scas
xchg
jno
jg
xorl
push
loopne,pn
in
xor
das
iret
les
pop
into
jo
cltd
aaa
iret
sub
xlat
xchg
jmp
insb
inc
sbb
imul
mov
push
loop
data16
and
ds
cmp
dec
push
push
mov
inc
mov
rolb
jge
dec
adc
out
pop
dec
aad
out
xchg
fldt
bound
jnp
sbb
dec
adc
xchg
arpl
add
cld
and
ja
sahf
fcompl
push
cld
cwtl
js
lcall
cmp
jb
clc
xchg
lods
ljmp
adcl
mov
mov
pop
out
mov
jae
loope
fcmovnu
dec
xchg
pop
lret
test
sahf
cltd
in
dec
fnstsw
lea
push
jle
cmp
xor
ljmp
lahf
jecxz
pop
fistpl
daa
pushw
and
push
hlt
aaa
or
ret
add
rcll
repnz
pop
xlat
dec
xchg
sub
pop
jle
push
jb,pn
fiadds
and
ror
scas
pop
ret
mov
ret
sti
pop
pop
pop
mov
leave
cmpsl
or
mov
sbb
dec
icebp
push
lret
mov
fidivl
iret
xchg
inc
mov
test
das
repnz
cwtl
loope
fstpl
or
cli
call
sub
pop
fwait
mov
cmp
pop
jno
or
jle
outsb
sub
popl
lret
out
gs
addr16
out
jne
int3
and
jp
and
sub
pcmpeqb
je
pop
mov
movsl
in
mov
mov
movsl
out
pop
fstpt
popf
adc
rol
into
push
xchg
add
orl
jecxz
or
fmuls
add
xchg
test
les
cmp
call
or
adc
xchg
xor
jns
mov
js
addr16
les
fisttps
inc
mov
and
sub
jl
test
cltd
repnz
sbb
leave
sub
dec
inc
and
jg
adc
dec
or
cmp
dec
fwait
int3
jg
rcrb
pop
mov
xchg
mov
or
dec
test
cmpsb
outsb
pushf
stc
test
sahf
mov
inc
ret
aam
lret
push
jmp
cmp
push
push
cmpb
test
ficoms
inc
loop
mov
fisttps
add
push
jb
cli
push
mov
pop
sbb
push
aas
mov
aas
scas
cmpsl
xor
stos
sahf
mov
in
mov
jmp
mov
and
add
mov
imul
sbb
icebp
dec
and
xchg
jbe
jp
add
or
test
loope
adcl
xchg
rcrb
stos
jne
iret
adc
shlb
mov
sahf
xchg
inc
pop
outsl
mov
mull
insb
sbb
dec
and
stc
ss
sbb
cs
lods
and
adc
movsl
movsl
pop
int
push
mov
or
jmp
sar
mov
sar
xor
mov
mov
xor
adc
jae
sub
xlat
mov
lahf
iret
pop
jl
leave
leave
nop
mov
and
mov
mov
mov
dec
xchg
mov
mov
enter
sub
mov
dec
fadds
mov
test
fnsave
jae
sbb
and
in
jbe
pusha
cmp
shll
sbb
mov
pop
pop
js
aas
mov
mov
fcomip
sbb
lcall
mov
orb
jp
pop
dec
push
fldenv
mov
jnp
popf
jne
pop
and
cmpsl
mov
sbb
mov
aaa
movsl
push
push
sub
test
cmc
pop
fmull
stos
mov
jge
sti
sbb
xor
mov
and
xchg
int
pop
mov
sub
test
insb
lock
mov
pop
int
xor
les
jnp
pop
sub
xor
mov
popa
push
inc
lea
inc
cltd
mov
es
sub
or
mov
push
lahf
mov
mov
jo
ja
aad
out
inc
sbb
mov
cmp
sbb
mov
xor
ds
mov
or
lock
sbb
jnp
jbe
xor
mov
stos
movsl
add
lret
sub
cltd
mov
push
jp
stos
and
ret
in
mov
adc
cs
shl
mov
sub
push
xchg
cmpsb
xchg
ret
cmp
lret
sub
repz
and
inc
jno
daa
adc
xchg
mov
xchg
je
test
xchg
or
repz
mov
js
mov
outsl
aaa
icebp
cli
inc
flds
xor
inc
jne
mov
imul
pop
mov
adc
repz
lds
adc
data16
jns
xor
movsl
sub
ficoml
and
inc
scas
aad
out
sbb
cmpsl
and
sbb
and
arpl
mov
pop
xchg
push
inc
fwait
ror
rcr
shrl
cmpl
sbb
pop
jae
push
imul
xchg
lock
mov
inc
and
outsl
mov
inc
rclb
lret
icebp
cmp
das
mov
aad
fsubrl
jbe
cmp
lcall
xchg
outsl
push
jb
iret
cmp
lock
or
test
cmp
and
xlat
and
imull
enter
insb
jno
mov
out
mov
icebp
and
mov
push
lcall
sahf
mov
jo
xchg
push
xchg
jne
jns
adc
outsb
push
or
mov
xor
push
inc
dec
and
scas
jmp
xor
sbb
fwait
pushf
pshufw
mov
sub
sarb
outsb
adc
inc
hlt
sbbl
test
dec
or
mov
inc
xor
mov
inc
xor
mov
loopne
enter
and
orl
clc
mov
fldpi
pop
xlat
repnz
pop
iret
loop
imul
pop
sub
dec
add
adc
xchg
mov
shl
scas
aas
int
add
pop
bound
push
jecxz
xor
out
dec
rcll
cwtl
incl
int3
call
sbb
dec
movsl
pop
shlb
cltd
jo
pushf
shl
sub
call
sarl
inc
xchg
imul
iret
and
notb
jno
andb
or
mov
call
rcrl
pop
sarb
pop
das
and
jp
test
adc
or
add
pop
lcall
fstps
dec
popf
mov
inc
ret
ret
adc
aad
lret
bound
lods
mov
adc
jno
push
js
dec
xchg
mov
xor
xchg
stos
es
and
jg
jle
xor
push
mov
add
mov
stos
cmpl
nop
jge
nop
imul
mov
push
lods
enter
push
sbb
addl
pop
ljmp
xchg
pushf
and
lahf
sti
pop
and
push
mov
xchg
pop
pop
shlb
mov
and
mov
mov
mov
xlat
popa
shll
imul
popf
pushf
mov
scas
jns
les
pop
das
shlb
or
dec
lds
je
xchg
int3
mov
dec
add
add
push
aam
inc
mov
popf
fadds
in
jl
push
std
ja
mov
dec
mov
mov
imul
mov
cmp
xor
adc
jl
add
mov
cmpsl
outsb
sub
notb
fwait
xchg
and
dec
adc
movsb
inc
lds
sti
add
dec
fldl
mov
add
rorb
rclb
dec
pop
fwait
pop
mov
xor
xor
and
dec
test
sbb
orb
push
inc
xor
dec
scas
ret
outsb
xor
xchg
repnz
fwait
pop
dec
push
cwtl
iret
scas
adcb
stc
iret
pop
lods
inc
push
aad
insb
adc
add
dec
mov
xor
mov
mov
sbb
sbb
xor
add
xchg
cmc
mov
stc
popa
test
cmc
push
rclb
imul
cld
push
stos
call
pusha
xor
pop
ss
loope
imul
add
mov
mov
add
and
in
in
sub
and
out
repz
ljmp
movsb
std
sti
lods
jae
scas
jae
movsb
cmpsb
out
iret
fmulp
xchg
stos
in
xchg
push
xchg
sub
ja
cmp
pop
inc
addr16
in
pop
ja
push
push
in
or
dec
or
mov
faddl
dec
idivl
pop
sti
mov
js
sub
std
leave
cmp
cmpsb
test
fs
pop
sub
in
fiadds
push
pop
in
shr
mov
lea
adc
stc
or
sub
xchg
fs
inc
mov
and
xchg
cwtl
xchg
xor
pop
lods
shrl
lea
scas
xchg
je
inc
int
ret
outsb
lds
sahf
add
sti
lds
jae
and
stos
data16
mov
mov
xor
pushf
test
adc
mov
push
lods
test
xchg
push
testl
pop
pop
pop
fadd
negb
fistpll
jns
jo
xor
mov
movsl
das
call
sbb
cld
cmp
mov
mov
sarb
ljmp
inc
xor
arpl
lds
cmp
stc
and
adc
mov
adc
or
scas
inc
add
inc
stos
daa
push
or
mov
jnp
xchg
xchg
fidivrl
daa
xor
rorl
xchg
mov
xor
rcll
or
add
mov
xor
sahf
cld
loop
stos
loopne
mov
arpl
dec
xor
dec
sbb
pop
push
fs
fistl
in
inc
es
sti
sub
aad
fiaddl
adc
arpl
add
mov
pop
xchg
cld
push
insb
push
loope
leave
insb
mov
aaa
add
in
add
inc
aas
insb
stos
test
inc
cmpsb
shll
rcrl
insb
in
jecxz
cmp
adc
mov
jb
movsl
push
pop
dec
iret
in
adc
push
inc
xor
xchg
mov
xchg
nop
pop
test
push
push
and
or
lcall
sbb
push
aas
xchg
test
inc
stos
xor
pop
daa
andl
fs
scas
push
dec
out
inc
fnstenv
dec
stos
inc
imulb
cmpsl
inc
or
and
lret
jecxz
dec
xor
pop
xchg
and
fs
rorb
notl
rolb
jge
fstpl
clc
cli
add
ja
cmpsb
pushf
jb
xchg
cltd
popf
push
fdivrs
out
sar
test
jmp
loope
lret
lock
je
or
fbld
dec
addl
and
rcrl
jmp
push
xchg
cmp
push
or
es
ffreep
push
les
pmaxub
pusha
lods
jge
enter
cmpsb
andl
pushf
shrl
test
decl
test
test
jbe
xchg
cli
inc
outsl
jne
jecxz
das
or
inc
arpl
mov
pop
pop
addr16
loopne
mov
jge
xor
pop
push
cmc
cmp
pop
add
push
les
or
cmp
mov
insb
sarb
pop
or
sbb
shr
mov
test
jo
add
cld
popf
fdivp
insl
pop
pop
cltd
sbb
pushf
or
jmp
pop
adc
ret
mov
lahf
std
jecxz
aaa
inc
popf
imul
pop
dec
cwtl
mov
jmp
or
orb
hsubps
or
in
xchg
mov
outsb
lahf
cmp
mov
cmc
dec
je
pop
cmpsb
lahf
mov
pop
sahf
mov
decl
push
int
fs
rcrb
and
mov
out
pop
sub
cwtl
xchg
aad
and
push
or
mov
or
test
mov
mov
jne
gs
push
cmp
cmp
popa
push
out
imul
mov
fwait
mov
fnstcw
inc
pop
sub
and
lock
loop
cltd
enter
dec
jecxz
adc
scas
mov
mov
pop
inc
and
daa
xchg
sbb
add
enter
cmp
mov
mov
mov
repz
lea
cmp
js
and
rcll
adc
sarb
sbb
into
rcll
mov
add
inc
mov
fsubrs
dec
jns
insl
mov
movsb
and
push
popa
loope
jecxz
out
or
lret
push
push
ss
mov
shl
int
mov
inc
into
jl
filds
jle
mov
pop
push
jb
push
es
rclb
jnp
pop
scas
xchg
add
xor
lock
negb
xor
fsubrs
add
subl
cmp
cmpsb
imul
jb,pt
loopne
mulb
and
jge
xchg
fdivs
cmp
inc
sbb
sbb
and
insl
es
pop
sub
stos
ficoml
outsb
sub
notl
std
dec
dec
lcall
jb
cltd
pusha
sub
test
push
jnp
jge
cli
test
mov
test
jb
stc
add
push
lds
sub
repnz
pop
cmp
inc
lahf
enter
xor
xor
pop
jns
pushf
incb
ret
ret
pushf
imul
decb
or
mov
in
and
test
pop
add
cltd
incb
jmp
and
push
pop
adc
jnp
cmp
mov
test
or
dec
in
cs
data16
lock
and
ret
sbb
cmp
and
icebp
testl
stc
mov
inc
mov
mov
xor
push
mov
pushf
jnp
lods
push
loope
jbe
xor
lods
leave
jb
insl
pop
data16
pop
clc
ss
or
xor
inc
push
push
xor
pop
push
inc
movsl
xorb
out
ror
iret
aas
sbb
and
rep
mov
or
or
push
das
cmp
adc
outsb
scas
inc
jb
pop
int3
test
leave
clc
jo
hlt
ljmp
mov
and
pop
add
inc
lret
add
cmpsb
add
or
pusha
insl
mov
test
loop
xlat
jb
or
into
push
sub
lock
xor
sbb
adc
test
pop
in
dec
movsl
mov
fwait
clc
push
mov
sbb
lahf
data16
and
sub
xor
std
repz
mov
out
leave
ret
cmp
and
out
aas
inc
sbbl
push
je
call
mov
mov
rcll
xchg
pop
xchg
xchg
mov
jg
out
adc
sbb
and
push
outsb
cmp
aas
lock
lahf
or
or
or
xchg
setnp
int3
mov
mov
pop
mov
pop
std
dec
adc
mov
add
mov
and
rcrl
mov
mov
inc
pop
jle
mov
mov
stos
pop
aam
xchg
xor
sub
push
insl
dec
scas
cltd
add
and
jmp
pop
pop
and
enter
js
jns
es
jle
adc
sbb
in
jb
or
and
data16
pop
data16
inc
pop
ficompl
dec
aam
mov
pop
push
test
mov
idivl
mov
mov
mov
xchg
adc
add
or
inc
inc
movsl
lds
lret
pop
cmc
fdiv
movsl
jbe
call
push
xor
pop
mov
cmpsl
shlb
or
mov
loope
ret
aam
inc
insb
cmp
fincstp
lods
pop
sarl
sub
xlat
cmp
dec
popa
mov
dec
out
inc
mov
jns
and
mov
push
roll
pop
add
fistl
filds
and
xchg
jge
shrb
stos
xchg
and
sahf
xor
ret
push
fwait
sbb
mov
cltd
insb
mov
cltd
std
jno
fiaddl
in
and
ljmp
out
add
test
jle
loope
push
test
sbb
out
xchg
iret
dec
addl
add
mov
in
jnp
mov
rcr
and
mov
pop
mov
xchg
mov
xor
inc
clc
cmp
sub
repnz
jmp
pop
test
pop
xchg
or
pusha
std
mov
das
inc
into
leave
cmp
xlat
dec
mov
gs
xchg
push
sbb
sbb
jle
jnp
inc
xor
inc
push
stos
or
xor
imul
cli
sbb
mov
pop
mov
fs
push
scas
inc
xor
aad
pop
icebp
shlb
movsl
lods
pop
ja
out
and
and
call
and
dec
xchg
shlb
inc
rcrb
les
mov
push
sbbb
in
and
cmp
mov
adc
sub
mov
sbb
imul
call
cld
mov
orl
jge
sub
insl
sbb
pushf
notl
mov
repnz
jp
ret
pop
faddp
mov
outsl
sub
dec
cs
sbb
add
mov
pushf
jns
cvttps2pi
add
xor
inc
mov
imul
sahf
xor
jb
int3
inc
cmp
xor
movsl
or
or
mov
lods
mov
jp
pop
bnd
mov
fdivr
jmp
mov
arpl
mov
adc
lods
sbb
imul
inc
aas
pop
sbb
in
mov
lret
test
xchg
xor
and
lret
and
add
add
sbb
test
jl
clc
mov
in
jp
adc
or
rcr
mov
ja
jmp
int
loopne
sbb
or
movsb
out
cmpsl
ja
in
xor
xchg
mov
fs
psubsb
inc
mov
dec
cmp
sti
mov
jo
or
je
cmp
mov
adc
outsb
mulb
or
mov
mov
fdivs
popf
inc
and
popa
push
cmpsb
fwait
call
testl
push
ret
jae
cmp
dec
jae
lcall
jp
stos
out
cmp
cmp
inc
sub
imul
gs
xchg
push
xor
stos
aad
in
call
lock
std
ror
push
pop
out
mov
xchg
test
mov
dec
inc
xor
dec
addr16
and
mov
gs
pop
adc
in
hlt
jnp
mov
or
rorb
adc
jle
mov
inc
mov
lcall
mov
sbb
xorb
test
cmpsl
jae
cmp
lret
nop
xchg
or
lock
push
popa
pop
js
addr16
xchg
cmp
push
mov
pop
std
cld
shrl
xor
stos
lods
imul
mov
cmp
pop
nop
dec
inc
mov
out
mov
in
clc
push
iret
lea
sahf
icebp
sbb
adcl
fisubrl
out
push
sub
fnstsw
xchg
cmp
cmpsl
xchg
jle
jg
loope
jne
cmc
insl
mov
xor
pop
rclb
sbb
fcomp
movsb
dec
nop
push
sub
repnz
lret
adc
addr16
dec
and
sub
ljmp
jecxz
push
or
dec
mov
and
xchg
adc
mov
dec
push
call
imul
inc
pusha
lods
mov
shll
inc
jg
repz
inc
repz
bound
pushf
adc
push
in
adc
push
mov
mov
fidivl
dec
add
jmp
mov
add
ucomiss
xlat
lock
sub
jmp
jl
and
inc
mull
xchg
andl
lcall
out
and
jbe
and
sahf
inc
jmp
jecxz
pop
xchg
push
xchg
xchg
sub
das
pop
pop
cli
cltd
pop
incb
adc
lods
cmp
push
mov
mov
xchg
sbb
cli
mov
ja
in
lds
jecxz
shl
shl
movsb
fcmove
dec
push
lahf
shr
lret
or
subb
shll
push
sbb
mov
mov
or
push
sarb
xchg
cmp
out
lret
lock
mov
mov
mov
mov
xchg
pop
mov
lahf
ud0
notw
mov
adc
outsl
dec
jp
in
sub
dec
push
ja
outsb
add
insl
stos
adc
movsb
cmp
cmp
or
call
leave
or
push
cmp
sbb
bound
nop
ljmp
cmp
shll
cmp
fwait
cld
add
jle
add
add
jae
js
push
mov
aad
fsubs
test
jmp
int3
lock
aaa
adc
cld
dec
jecxz
sbb
shlb
jp
push
add
cmp
inc
imul
jae
in
dec
xchg
jg
dec
xchg
xor
jns
mov
dec
pop
aas
call
imul
divb
dec
sub
dec
push
mov
xlat
scas
mov
imul
sbb
xor
cmp
test
inc
add
mov
lock
jne
xchg
cmc
pop
cmp
add
xor
pop
notl
xor
movl
lods
xchg
repnz
lahf
mov
xchg
cmp
or
inc
dec
cmpsl
pusha
fidivrs
sub
aam
call
xlat
lods
sub
add
cwtl
in
roll
int3
pusha
push
or
fidivl
stos
pop
test
cld
xchg
push
dec
sub
or
mov
mov
pop
sbb
dec
fcomps
js
jae
mov
pop
cltd
divl
jge
in
jmp
mov
fwait
out
ja
std
ljmp
cli
jae
adc
dec
mov
pop
cmp
out
popf
or
cs
xchg
fisubs
pop
popf
and
jns
clc
inc
orl
js
push
xchg
cltd
xor
fisubrl
stos
sub
pop
push
daa
cmc
clc
scas
push
iret
mov
fmuls
divl
push
jne
outsl
sahf
xchg
jns
cmp
shlb
sbb
repz
jne
bound
sbb
add
hlt
sbb
adc
xchg
arpl
xchg
loopne
fnstcw
testl
stos
lret
jbe
adc
lahf
add
in
lods
dec
aad
and
xchg
aad
int3
in
mov
dec
fiadds
popf
fisubrs
pop
sbb
dec
sahf
inc
cmp
jle
sub
lds
cmp
pushf
enter
sub
pushf
cli
and
cmc
lods
dec
call
mov
imul
jne
popf
loope
les
push
dec
sti
pop
pop
pop
dec
ret
jl
rorb
and
mov
pop
xchg
xchg
push
into
inc
out
adc
push
inc
std
xchg
xchg
aad
fisubrs
mov
repz
cmc
jns
stos
shlb
sarl
pusha
dec
sub
test
mov
cltd
sbb
int
scas
inc
lret
fcoml
int3
xchg
and
inc
mov
push
jle
mov
mov
mov
or
jae
bound
and
pop
imul
pop
adc
push
pop
decl
add
xorl
lret
jl
rorl
in
hlt
repz
les
jge
test
jmp
xor
mov
mov
ljmp
adc
mov
xchg
rep
outsl
mov
jo
mov
mov
imul
jp
test
xlat
stc
sti
mov
xchg
mov
daa
leave
xor
add
mov
out
cmp
sub
adc
lods
and
mov
fnstsw
stc
arpl
scas
push
int
les
loop
dec
jle
sahf
cltd
mov
and
jl
das
sub
addr16
push
xor
in
push
sbb
out
push
in
adc
hlt
or
jg
idivl
lods
and
and
es
or
sbb
into
int3
scas
cmp
outsb
mov
fdivrs
dec
push
das
hlt
and
hlt
jae
ljmp
addr16
les
ljmp
cmp
aam
mov
mov
push
mov
repnz
orb
inc
inc
in
adc
mov
push
test
push
push
pop
test
mov
pushf
lahf
out
dec
loopne
inc
xor
xchg
push
mov
xor
into
jnp
push
mov
pop
mov
add
psubb
bound
add
jl
les
sbb
pusha
cld
pop
adc
in
sbb
jecxz
jb
adc
xchg
mov
dec
or
mov
not
and
rcll
push
pop
mov
jo
xchg
pop
lcall
aam
jp
out
lret
int
dec
fistl
jnp
add
sbb
push
mov
aam
or
daa
inc
ret
cli
push
xchg
jno
xchg
add
cmpl
xor
ds
mov
dec
aam
int3
cmpsl
nopl
ljmp
cwtl
and
and
jmp
test
mov
cltd
std
jne
cmp
and
test
xchg
mov
push
dec
insl
sarb
lods
mov
scas
push
or
mov
jo
mov
pop
mov
cli
daa
xor
icebp
pop
jb
jecxz
jae
rorl
mov
jp
imull
lea
xor
or
push
jecxz
push
xchg
dec
loope
inc
xor
mov
mov
cs
inc
test
test
dec
dec
add
sar
repnz
rcrb
lcall
ficoml
std
cmp
je
jg
jo
addr16
mov
in
cmp
pop
mov
movb
pushf
iret
cmp
xor
pop
lret
cwtl
imul
stos
test
jae
in
movsl
test
into
dec
push
adc
imul
jo
adcl
loopne
push
jl
push
sbb
inc
sti
pop
rolb
das
hlt
push
cmp
test
xchg
loope
daa
inc
divb
data16
fsubs
dec
das
out
ret
push
push
mov
push
push
aaa
and
dec
mov
leave
adc
and
dec
jmp
rolb
xchg
jg
out
loop
push
rcll
sbb
pop
dec
ljmp
and
out
in
aam
ljmp
cmpsl
and
ljmp
out
mov
out
xchg
movsl
mov
andb
sub
sbb
and
xor
leave
adc
add
sbb
cmpsb
ret
inc
add
in
mov
gs
je
xlat
push
push
das
lods
pushf
mov
shrl
lods
xchg
loope
rorl
add
out
xor
adc
cmp
ds
mov
cmp
push
mov
mov
out
cmp
call
cmp
insb
dec
mov
leave
pop
mov
cld
aas
xchg
pop
and
push
aad
call
or
jb
test
faddl
xor
dec
jno
jne
repz
jle
xor
icebp
xchg
std
aaa
cli
pop
xor
jmp
imul
mov
fcmovne
or
add
mov
mov
xor
out
xchg
loopne
rorl
test
std
fnstsw
pop
movsb
test
imul
push
inc
lods
add
push
insl
test
je
xor
test
stc
fistpl
fs
ja
add
movsb
cld
ds
imul
int3
notl
divl
fimuls
lds
xor
fld
jecxz
aam
inc
add
or
inc
mov
dec
push
out
mov
mov
pop
or
mov
notl
std
gs
into
fwait
out
aad
popf
push
bound
dec
push
jns
pop
mov
mov
adc
flds
in
push
mov
cmc
adc
and
add
mov
mov
push
mov
inc
inc
dec
orl
movsl
cmp
fsubrl
mov
or
movl
test
jbe
push
mov
add
and
jnp
fwait
or
inc
xor
or
cmc
cmp
jmp
xchg
ljmp
mov
inc
and
daa
ljmp
dec
sbb
xchg
rol
push
mov
and
mov
jl
pop
jae
bound
std
loop
test
lret
or
mov
sub
dec
xchg
movsl
mov
out
sub
sbb
pop
jb
shll
add
outsl
dec
mov
stos
call
pop
in
dec
repnz
jno
cmp
push
sub
xor
pushf
fists
cli
cli
inc
js
das
stc
jl
aam
xchg
cmp
fstpt
fcoms
pop
jmp
pusha
jbe
in
insb
fs
insb
iret
outsb
roll
jmp
test
mov
xchg
pusha
aad
push
dec
xor
push
mov
inc
and
xchg
dec
movsl
stos
mov
fld
sbb
out
cmp
clc
xor
inc
lret
push
sahf
sbb
xor
add
add
push
sbb
or
lds
lret
sub
push
mov
jns
call
out
jb
sub
les
xchg
loope
bound
jmp
adc
jne
mov
mov
out
popa
mov
and
arpl
cmpl
sbb
and
jle
push
mov
push
cmp
xchg
xlat
fsubl
push
add
or
ret
push
testb
cmpsb
mov
subl
sub
jecxz
ds
mov
lods
inc
add
popf
out
pop
test
pop
inc
out
sbb
jne
add
into
cmp
rclb
andb
in
lea
mov
inc
iret
mov
mov
rolb
mov
aas
subb
jp
cmc
gs
xchg
sub
and
imul
inc
ljmp
push
hlt
lds
insl
xchg
fnstenv
ljmp
xchg
scas
and
sbb
mov
xor
and
xor
mov
pop
adc
mov
fsubp
cld
mov
pop
popa
push
js
pop
inc
xor
int
mov
fldenv
add
xchg
repnz
dec
adc
sbb
push
adc
lock
jg
and
lods
push
inc
dec
lods
int
jp
cwtl
add
cltd
mov
sbb
int3
dec
cmp
stc
jnp
lahf
loop
mov
add
icebp
cvtps2pd
dec
pop
test
loop
mov
shlb
call
xchg
mov
int3
stos
inc
inc
mov
out
dec
pop
fiaddl
jns
leave
lea
push
sarb
adc
xor
fdivl
data16
pop
jo
repz
jnp
pushf
inc
pusha
loopne
dec
and
jmp
pop
push
test
out
and
inc
movsb
mov
dec
mov
fisubs
adc
into
sbbb
mov
leave
xchg
sub
mov
push
dec
sub
inc
inc
adc
insl
loope
leave
fnsave
leave
into
cltd
icebp
clc
stos
movsb
mov
call
pusha
mov
push
imul
and
movups
insb
cmp
rcrl
cmp
fisttpll
mov
adc
push
imul
fdiv
push
repz
inc
mov
xchg
movsl
xor
push
push
sub
sarb
mov
enter
pop
test
movsl
iret
dec
dec
inc
cltd
test
cmp
incb
enter
mov
pop
imul
jno
push
mov
mov
shlb
mov
pop
mov
mov
xor
lahf
jne
adc
pushf
xor
and
leave
std
call
movsl
cmp
mov
adc
push
in
xchg
dec
daa
and
pop
cmc
adc
or
xor
jl
cmpb
mov
les
imul
loopne
jmp
aaa
push
adc
repnz
cmp
daa
rcl
pop
push
pop
scas
xor
loopne
lock
mov
bound
test
xor
xor
xor
adc
inc
xor
icebp
sbb
dec
and
xchg
insb
and
shrl
cmovae
jnp
hlt
fcmovbe
mov
std
movb
out
divb
into
ret
pop
pop
pop
mov
push
in
inc
cmp
stc
pop
xor
sbb
pop
and
or
rol
test
test
les
jp
cmpsl
push
fbld
and
stos
sbb
jg
popa
jecxz
xchg
in
arpl
test
loop
or
pop
lds
pop
pop
cmp
fdivrl
sub
and
outsb
test
jbe
cmpsl
jb
ret
push
inc
pop
adc
cltd
dec
dec
and
cli
push
xchg
mov
adc
aam
xorb
xchg
xchg
mov
mov
dec
add
jg
pop
and
cltd
mov
rdtsc
inc
mov
sub
mov
jge
insb
mov
lock
mov
inc
add
add
adc
cmp
cmc
xchg
jns
leave
mov
out
loopne
sahf
incl
and
xchg
dec
testl
in
sahf
mov
push
icebp
sub
lods
cmc
pop
mov
jg
xchg
xchg
push
lods
add
cld
adc
lods
out
out
into
mov
mov
inc
movsl
dec
dec
push
pop
push
imul
xchg
adc
dec
cmpsl
add
pop
into
inc
loop
imul
jmp
jmp
mov
pop
fildll
dec
adc
push
outsb
fadd
enter
push
mov
and
and
popa
daa
xchg
pop
xlat
or
or
mov
xchg
jns
mov
inc
and
pop
inc
xchg
mov
outsl
popf
cmp
xor
mov
push
dec
pop
push
xchg
jmp
int3
pop
and
push
sub
jbe
add
mov
pop
jl
mov
pop
ja
inc
lock
ds
mov
ss
dec
stc
inc
movsl
cmp
mov
aaa
stos
divb
test
adc
lea
scas
push
ret
lds
cmpsb
jge
out
push
pop
pop
jae
adc
aaa
pusha
bound
fsts
popf
icebp
xchg
mov
dec
mov
test
inc
adc
dec
fcmovbe
and
fcompl
sub
in
adc
push
adcl
mov
mulb
push
iret
mov
cli
rol
mov
xor
xor
bound
mov
push
inc
dec
js
fdivrp
lea
push
sbb
cmp
lods
cmpsb
nop
jae
inc
shrb
shll
mov
lods
pop
xchg
jmp
ljmp
jno
das
and
mov
xchg
or
outsb
sar
add
inc
ret
push
mov
out
jb
jg
jae
push
or
fldcw
fildl
mov
fisubrs
xor
lods
pextrw
or
lret
mov
and
gs
xchg
add
std
testl
pusha
cmp
rcll
push
arpl
cmpsb
subb
test
sub
push
cli
leave
jnp
ja
mov
xor
adc
sbb
mov
jo
dec
adc
ja
ret
sbb
rorb
lcall
pop
ret
test
int3
push
mov
cwtl
jp
jb
fwait
sahf
scas
pop
mov
mov
push
jno
bound
pmuludq
lahf
loop
fistl
dec
addl
loope
mov
je
jne
cmp
inc
xor
jmp
and
call
mov
sti
bound
dec
bound
popf
jb
outsl
arpl
mov
inc
or
add
cs
mov
fldcw
movl
mov
stos
imul
sub
out
cmp
mov
push
xor
sbb
fwait
mov
pusha
imul
or
pushl
push
call
or
cwtl
and
jl
ss
enter
xchg
push
or
lcall
dec
ror
inc
cmp
in
xchg
lods
cmp
test
or
jo
cwtl
inc
fwait
loop
movsb
add
scas
in
pop
lahf
mov
sbb
mov
cwtl
das
pushl
cmpsb
inc
aam
fsubrs
cmp
lods
adc
xchg
sub
popf
inc
lcall
jle
adc
mov
xor
xchg
cmp
cmp
ljmp
mov
and
sarb
movsb
rcr
push
in
add
jp
cmp
repz
lods
or
mov
jb
cmp
repnz
ret
lret
mov
outsl
jne
out
mov
xlat
push
add
xor
dec
sub
out
shl
arpl
daa
gs
bound
stc
sbb
push
mov
jno
sbbb
popf
bound
ret
mov
test
lds
push
out
or
inc
jl
cli
push
mov
fcoml
mov
insl
xlat
orl
sub
xchg
jno
scas
popa
shll
or
mov
mov
je
hlt
sbb
int
or
cmp
dec
pusha
test
cmp
dec
bound
dec
rolb
ds
xchg
outsb
pop
mov
push
inc
cmpl
out
sub
pop
add
fwait
test
mov
pusha
sbb
pop
jle
movsl
and
fildl
jae
dec
dec
cmc
xlat
lahf
ret
xor
lock
push
dec
je
adc
pop
insb
sub
loopne
lods
push
leave
xchg
mov
sub
adc
and
xchg
xchg
lahf
movsl
pshufw
pop
mov
and
or
loope
movsb
insl
and
ffree
cmp
dec
push
sbb
ljmp
mov
cwtl
mov
cmp
sub
xchg
stc
ss
test
sbbl
sbb
dec
cli
jp
adc
mov
cwtl
mov
scas
addr16
movsb
dec
ljmp
mov
ja
fistpll
jmp
sti
inc
jg
ljmp
xor
cmp
insb
mov
int3
dec
mov
sub
mov
sbb
xor
std
adc
insl
xor
fnsave
sar
scas
in
outsl
cmc
add
inc
xlat
jae
scas
lahf
fildl
mov
ja
xor
dec
dec
aas
dec
pusha
dec
cmp
jmp
push
jmp
xchg
jmp
es
pop
mov
fwait
aas
pop
sbb
jnp
xchg
stos
mov
subl
gs
std
fldl
mov
sub
cltd
adcl
cmpsl
test
out
aad
movsl
inc
mov
pop
leave
stos
jp
mov
sbb
into
cmpsl
call
movups
out
xor
gs
push
shrl
push
stos
pop
lret
or
loopne
ret
test
push
inc
push
test
mov
inc
hlt
cmp
popa
xorl
and
outsl
les
or
in
jnp
lds
dec
cmp
pop
andl
xchg
add
aam
int
sub
lock
scas
sub
push
jg
jo
ss
call
or
test
add
fisttps
sti
iret
xchg
xchg
js
push
negl
je
pop
xchg
and
dec
sub
in
mov
stos
jb
out
stos
xor
push
adcl
push
cltd
jmp
hlt
or
aad
jns
mov
inc
add
inc
push
add
add
mov
push
xchg
adc
mov
adc
std
or
cmp
fimull
adc
xor
mov
push
adc
les
fstps
fdivrl
out
bnd
add
and
xchg
jb
pop
cmpsl
das
cmc
cld
filds
jecxz
mov
add
xor
cmp
dec
inc
leave
sar
adc
push
xlat
cmp
cmc
jne
jge
mov
mov
pop
push
jmp
sbb
xchg
jl
repz
sbb
cmp
push
and
cs
je
insl
inc
xor
push
sub
cmp
jle
xchg
xchg
cs
jmp
outsb
adcb
aam
xor
or
lret
cwtl
mov
arpl
std
dec
dec
sub
pop
mov
cltd
pop
xchg
sti
jne
or
mov
jae
in
mov
test
fldenv
scas
ss
fwait
mov
lea
cmp
pop
nop
fsubrl
adc
add
sub
ds
mov
add
xchg
test
ljmp
mov
jle
and
stc
fadd
fsubl
mov
sub
and
gs
push
mov
imul
test
adc
lods
sbb
sub
sbb
test
xor
mov
cmp
add
inc
out
xor
dec
rorl
ret
gs
mov
lahf
sbb
mov
fimull
adc
iret
jmp
stos
jns
push
xchg
sbb
add
pop
outsb
xchg
and
and
or
inc
aad
xchg
aam
in
test
inc
dec
pop
imul
pop
popa
ffreep
xchg
push
or
cmp
lods
or
push
add
dec
and
push
in
jecxz
es
inc
adc
movsl
testl
mov
mov
sub
mov
out
mov
xchg
xchg
inc
pop
inc
enter
pop
add
push
fwait
rorb
testb
mov
push
imul
or
je
mov
outsl
fisttpll
ret
fbstp
in
inc
js
aam
in
mov
mov
inc
cmp
insl
movb
sbb
lea
aad
jl
add
mov
mov
sbb
fsub
int3
scas
rcr
sub
jbe
clc
movsl
pop
xor
dec
add
xchg
and
adc
fwait
dec
push
inc
jmp
mov
xor
loope
pop
jmp
loopne
inc
fbstp
mov
adcl
insb
xor
movsb
movsl
lods
adc
dec
adc
rcrl
jnp
pushf
mov
lahf
in
pop
jne
jl
movsb
push
adc
xor
in
or
popl
out
and
mul
jnp
ret
sbb
rcll
jge
jl
shr
ss
pop
mov
popf
mov
aam
lcall
or
scas
cmp
out
cltd
adc
das
jg
fidivl
enter
into
sbb
pushf
clc
lcall
xor
or
dec
cwtl
mov
cltd
hlt
test
sub
outsl
daa
mov
fildl
dec
mov
pop
in
cmp
jns
stos
sti
cmp
aam
inc
popa
xchg
adc
les
and
fbstp
mov
xchg
xor
inc
bound
addl
push
mov
xchg
dec
fs
pop
mov
inc
sahf
pop
sahf
aas
adc
sbb
or
jp
ret
cwtl
fmull
rcrl
add
fimull
aam
and
pop
jle
aaa
or
inc
movsb
pop
ja
hlt
mov
mov
jmp
mov
or
in
mov
mov
das
stos
shll
int3
or
inc
cmp
xchg
lods
into
mov
add
mov
mov
out
sbb
mov
stc
push
xlat
lret
insl
sub
call
jne
sub
push
sar
stos
dec
push
scas
mov
sahf
pop
lahf
jl
fadd
pop
sti
and
aam
mov
inc
fcmovnb
clc
test
loopne
sub
xor
or
negb
xchg
std
ret
out
nop
test
pop
repz
dec
cli
and
mov
fimull
cld
sbb
xchg
ds
loope
pop
pop
push
sbb
add
jno
cli
jl
cwtl
inc
leave
jne
test
aam
ret
ret
hlt
and
incl
pop
fwait
mov
mov
enter
clc
push
or
aaa
cltd
pop
dec
push
mov
lea
mov
pop
mov
push
lds
cmpsb
xchg
mov
rcr
test
mov
int3
popa
xorl
sarb
test
orl
or
ds
fisttps
jbe
dec
sbb
cmp
pop
inc
mov
jns
repnz
iret
ss
add
cli
mov
sub
int3
xchg
push
or
in
jae
fwait
mov
pop
into
pop
std
dec
and
push
les
fs
jo
mov
insb
adc
inc
lds
sub
pop
cmp
addr16
arpl
jb
push
addb
lret
pop
or
add
ds
pushf
inc
xor
gs
repnz
dec
dec
jle
into
adc
rclb
aaa
push
dec
and
push
repnz
xchg
addb
dec
ffreep
jmp
lds
jb
fs
sub
enter
add
cmpl
dec
movsl
lds
xchg
mov
mov
bswap
nop
cli
test
xchg
inc
stos
and
sub
pushf
add
sarl
jg
mov
and
out
jns
sti
cmpsl
outsb
or
inc
adc
ret
cmpsb
pop
push
in
lods
xor
and
jle
mov
push
cmp
in
ja
fs
std
test
sbb
and
mov
mov
adcl
lods
mov
aad
jl
lock
aad
jnp
divb
fsub
stos
mov
sbb
mov
aaa
and
bound
lea
rcr
push
cmc
push
stos
jecxz
aam
jecxz
mov
mov
adc
je
mov
jmp
fsubs
add
rcrl
xchg
mov
ret
call
push
hlt
adc
call
xor
or
aaa
lret
outsl
and
leave
mov
sbb
call
imul
cmp
enter
stos
push
fnstsw
xor
lret
and
sbb
mov
jo
inc
jmp
into
mov
fucomip
pop
lret
ss
mov
mov
cmpl
movsb
gs
lock
hlt
and
arpl
fs
out
insl
inc
sbb
js
imul
lahf
mov
push
aad
dec
mov
or
into
jg
jl
jl
jmp
mov
inc
cs
cmp
mov
arpl
jne
sti
jbe
jp
repz
iret
mov
rcl
out
fsts
sbb
inc
lcall
or
xor
popa
lea
jbe
sbb
std
js
daa
aas
lret
outsl
adc
mov
sub
sbb
cmc
hlt
rcrb
xchg
xchg
mov
add
xchg
sub
push
or
jmp
loope
daa
push
ret
sbbl
dec
sahf
or
mov
in
inc
test
sub
shlb
aam
rcrl
dec
std
arpl
pop
adc
or
es
adc
bound
cwtl
mov
xchg
cs
dec
cmpsb
leave
push
add
cld
adc
add
shr
test
xor
mov
cmp
js
cmpsb
mov
rcll
xchg
pop
and
xchg
push
mov
sbb
in
sbb
add
mov
out
sub
xor
fstp
push
xor
xchg
imul
push
mov
fisubs
xor
gs
cli
jmp
and
fisubs
ret
jl
mov
mov
enter
div
and
in
pop
sahf
jb
ds
and
sbbb
cs
mov
rorl
push
jp
sti
sub
cmp
and
add
ret
pop
dec
jle
mov
addr16
bound
dec
jb
dec
shrb
or
icebp
movsb
xor
pop
and
xchg
lods
sti
dec
xor
fmuls
mov
xor
and
jo
loope
imul
in
bound
xchg
scas
xchg
cmc
ret
and
sarl
mov
flds
insl
leave
stc
xor
and
cmp
in
push
push
mov
fnstcw
adc
xchg
pusha
dec
sub
repnz
lock
and
jb
mov
push
mov
jns
sbb
insl
rcrb
jne
push
enter
stos
xor
mov
adcl
and
mov
mov
sbb
or
pop
inc
adc
rcrb
scas
dec
mov
jne
repz
cmpb
out
cli
sub
and
mov
ja
inc
jno
cmpl
and
fsubrs
push
add
and
mov
int
and
xor
mov
mov
inc
xor
cmpsl
in
push
sub
push
sub
xor
pop
lods
mov
cmp
aad
xchg
std
inc
or
lret
clc
rclb
jbe
xor
pop
add
aam
clc
cmc
pop
lods
mov
adc
sub
mov
pop
cmp
test
jns
cwtl
fdivrs
out
ret
mov
jecxz
shlb
jno
mov
frstor
movsl
fdivr
and
inc
mov
test
int3
sub
test
into
cli
add
push
out
les
add
cmp
jns
xchg
xchg
cmp
inc
add
fadd
push
test
je
dec
in
fcomp
pop
aam
or
into
addr16
shrb
pop
stos
ret
sbb
pop
mov
sbb
fcmovu
int
cwtl
psubsb
mov
xor
pushf
mov
test
pop
mov
or
mov
xchg
loope
adc
jp
lcall
inc
pop
pop
push
rcrl
mov
pop
sub
lea
aad
cmpsl
jbe
mov
mov
fcoml
dec
xchg
subb
or
outsl
lret
clc
xor
fsts
push
adc
sbb
xchg
lds
push
add
and
imul
sub
cmp
cli
or
scas
sub
lea
push
push
xor
ret
leave
mov
movsl
xchg
sub
mov
mov
or
ljmp
sub
lods
mov
or
loopne
arpl
xor
jns
push
out
mov
push
sbb
xlat
mov
xchg
and
cmpsb
jno
push
mov
adc
cmp
jmp
int
pushf
pop
sub
mov
and
repnz
mov
mov
out
mov
int
xchg
faddl
xor
data16
pop
mov
or
push
popf
mov
xchg
push
frstor
add
dec
jecxz
cmp
orl
fsubp
shll
adc
xchg
popa
or
shlb
jmp
pop
lret
insb
cmp
cmp
outsl
arpl
add
mov
push
fwait
scas
lret
jno
aaa
enter
ss
fs
xor
jno
dec
mov
jo
lahf
push
inc
stos
sbb
dec
push
sub
jecxz
dec
loope
adc
mov
push
xor
out
lret
fdivrl
mov
icebp
mov
xchg
mov
adc
adc
jne
xchg
sti
or
xchg
dec
push
mov
icebp
or
decl
jbe
pop
cmp
ss
testl
call
in
popa
movsl
or
mov
pop
mov
adc
cmpsb
dec
sti
roll
mov
dec
sbb
in
pop
sub
sbb
push
mov
mov
add
in
icebp
js
inc
mov
rcr
xchg
mull
sbbl
mov
sar
lds
push
jmp
jns
lcall
bound
push
sbb
scas
lahf
inc
mov
repz
ljmp
in
inc
lss
stos
xchg
or
lcall
je
xor
es
lds
pushf
icebp
faddl
push
xchg
icebp
xchg
imul
jmp
cmp
dec
jb
or
jo
ret
sub
push
nop
pop
loop
pop
push
inc
inc
sub
roll
repz
jmp
adc
movsl
push
xchg
ljmp
mov
test
insb
ret
out
adc
or
dec
sbb
inc
mov
push
arpl
aam
ret
call
sbb
add
mov
lds
xchg
dec
int3
sbb
and
push
mov
push
dec
sub
jp
icebp
hlt
push
aam
cld
adc
jmp
bnd
sbb
or
das
jno
popf
ds
jl
xchg
dec
sbb
mov
fnstenv
mov
add
sub
in
movsb
adc
ds
jmp
ss
xlat
mov
xchg
sbb
es
sbb
xchg
in
insl
lods
xor
jb
out
repnz
into
sub
lcall
nop
in
mov
enter
or
or
jno
jmp
into
out
fwait
into
test
jo
mov
mov
cld
clc
rcll
rcll
jge
mov
mov
mov
cmpsl
aas
cmc
loopne
aas
into
loope
mov
and
insl
cli
and
out
adc
mov
out
incb
adc
loopne
mov
or
data16
aas
or
cmp
cmp
sub
dec
pop
push
add
fsubp
out
mov
push
jbe
and
lods
jle
and
fldl
imul
adc
mov
sub
push
imul
int
cmpsb
movsb
mov
dec
adcb
mov
sarl
mov
adcb
fsts
dec
test
sbb
out
pop
pop
daa
mov
ret
add
add
mov
aas
mov
addr16
iret
cltd
adcl
scas
and
insl
in
aad
icebp
cmp
push
pop
pop
or
mov
call
lcall
mov
into
fs
adc
pop
sub
pop
fcomp
popa
jnp
in
js
adc
cwtl
pop
dec
pop
mov
push
test
dec
or
add
faddp
fs
jg
call
outsl
mov
ss
dec
cmpsb
into
cmp
imull
popf
xchg
dec
sub
pop
stc
out
inc
cmpsb
jae
ja
jle
ficomps
jl
mov
push
movsb
and
mov
rorl
xor
mov
movsl
jmp
in
popa
jne
mov
add
mov
xor
pop
and
fstl
fs
cmpsb
xor
jle
call
movsb
xchg
push
cmp
push
mov
or
and
add
sbb
mov
cmp
out
test
jp
pop
ret
mov
jne
ss
mov
add
push
mov
xchg
fildl
in
fmul
pop
cmp
adc
sbb
lods
cltd
inc
xchg
shl
sbb
push
and
shlb
stos
cmpsb
pop
daa
mov
cmpsl
loopne
ljmp
sahf
xchg
out
int
add
shl
adc
ljmp
shll
fs
inc
mov
push
push
fwait
call
mov
xchg
movsl
and
fisubrs
pusha
inc
mov
fucom
adc
cmp
or
sub
pop
dec
orl
inc
dec
push
mov
outsl
jp
stos
stos
push
lods
sbb
call
lahf
push
mov
mov
sbbl
lock
rcl
pop
or
outsl
sub
xchg
stos
add
mov
and
mov
testb
arpl
or
icebp
js
inc
push
pop
and
sub
pop
push
pop
clc
mov
addr16
and
mov
je
enter
mov
les
pushf
hlt
iret
push
or
out
stos
dec
lods
and
pop
sar
mov
jecxz
sbb
xor
pop
punpckhdq
jo
inc
xchg
add
hlt
pusha
jmp
fs
fidivs
outsb
leave
ficoms
cltd
jl
inc
xchg
jno
fwait
scas
movsb
add
jnp
push
xchg
test
mov
lcall
and
insb
ds
mov
xchg
add
mov
or
and
mov
repnz
rcrl
push
out
out
adc
xor
pop
jnp
ror
out
inc
xor
test
fidivl
lds
jae
dec
cmp
mov
dec
data16
mov
pop
add
mov
push
jbe
adc
roll
dec
inc
inc
add
into
inc
nop
jmp
dec
sti
cli
popa
lret
mov
inc
stos
ds
in
scas
pop
movsl
shrb
sbb
shll
pop
xor
mov
iret
or
daa
mov
loop
outsl
pop
imul
shl
push
mov
or
add
and
push
sbb
xor
sub
gs
cli
xor
mov
sbb
inc
push
mov
push
nop
jae
push
xor
mov
shr
shrb
xchg
xchg
pop
xchg
mov
pop
xor
jmp
jae
int3
mov
fdivrl
xchg
push
jl
bound
xor
push
test
fadd
jo
sub
jae
jge
outsl
add
xchg
mov
fidivrs
dec
or
inc
mov
pushf
sbb
stos
fildll
fwait
out
jnp
push
xchg
int
cmc
scas
add
shl
gs
lcall
mov
inc
pushl
mov
cld
aad
into
pop
fwait
repnz
jmp
bound
push
and
and
sub
stos
iret
mulb
or
out
add
push
lea
ljmp
cmp
or
mov
inc
cmp
ret
mov
outsl
call
sbb
fists
test
clc
dec
sbb
mov
inc
out
pop
xchg
mov
mov
decb
aaa
ss
fs
push
out
push
dec
sub
popa
ret
and
dec
mov
rcrb
and
jns
push
jge
pop
jp
loop
dec
loopne
jge
mov
xchg
sarb
cltd
jns
mov
popf
pushf
lds
sarl
xor
add
dec
sub
mov
inc
lods
sti
jge
jmp
jecxz
test
and
sti
in
insb
adc
hlt
test
outsl
xlat
mov
test
fildl
cld
xchg
push
arpl
imul
mov
fiadds
subb
lret
sbb
push
xchg
mov
test
mov
push
movsl
mov
in
mov
inc
dec
mov
xlat
jg
or
add
xchg
mov
arpl
fs
aad
daa
into
sub
or
mov
push
or
mov
cmp
test
mov
movsb
sbb
call
insl
adcl
nop
pusha
xor
mov
mulb
lcall
push
mov
dec
mov
mov
jno
pop
sbb
int3
addr16
jb
push
xor
xor
test
mov
and
pop
push
rcrb
test
inc
xor
stc
cmp
out
mov
bound
mov
mov
sbb
roll
inc
inc
leave
cmp
push
faddl
aad
sbb
push
xlat
xchg
mov
push
aas
je
push
mov
push
mov
ds
rep
sub
dec
loop
push
test
es
ret
out
pxor
mov
dec
addr16
pop
shll
or
mov
iret
cmp
mov
dec
sbb
mov
jnp
adc
pusha
mov
out
outsl
or
mov
xor
arpl
and
jne
sbbb
pop
dec
in
stc
push
mov
sub
add
push
loope,pn
cmp
nop
test
or
xchg
aas
jge
xchg
add
jo
mov
xchg
test
jle
sub
jmp
push
xor
inc
mov
xchg
das
fidivrl
iret
xchg
xchg
rol
xorb
fsubs
or
cwtl
testb
jno
mov
addr16
pusha
imul
insb
cmp
sbb
sbb
je
push
sub
jno
xchg
push
or
jl
jmp
dec
lock
xchg
dec
push
outsb
fists
and
scas
push
inc
iret
sub
mov
sbb
ficoms
mov
mov
aaa
xor
cld
mov
xor
dec
adc
out
cmpsl
xchg
xor
sbb
xlat
cmpsl
bnd
or
mov
lret
add
mov
mov
add
or
add
mov
cmpsl
repnz
or
adc
cmpsl
add
push
enter
ror
out
test
mov
xchg
xlat
ja
add
cmp
cmpsl
out
or
inc
jb
and
dec
nop
sbb
dec
lahf
dec
cmp
lds
cld
test
push
cwtl
lahf
add
jmp
daa
pushf
sbb
xor
out
xor
into
icebp
xor
test
mov
or
fsts
push
loop
imul
arpl
stc
mov
sbb
test
adc
pushf
dec
dec
mov
fst
mov
cltd
jle
push
lret
mov
sbb
loop
fcomps
sub
mov
cwtl
shll
lahf
popf
leave
imul
jo
es
pop
out
xlat
mov
or
mov
cld
jo
jge
aam
xchg
loopne,pt
xchg
mov
shll
scas
inc
add
xor
iret
sbb
pop
xchg
push
push
jae
ret
inc
repnz
jbe
adc
mov
push
pop
fwait
shll
es
mov
pop
push
ja
out
adc
cwtl
dec
aas
xchg
push
repnz
push
mov
or
mov
jp
push
add
xchg
lret
dec
scas
hlt
jle
and
add
push
outsb
dec
or
movsb
insl
pop
aaa
inc
sbb
in
arpl
mov
or
sarb
aas
mov
iret
sbb
bound
inc
ds
sub
jo
pop
es
xor
lcall
jnp
xor
cmp
xlat
push
inc
or
inc
test
scas
popfw
xor
ja
or
cmp
insb
std
inc
movups
mov
clc
dec
into
test
ljmp
imul
pop
lods
cmp
std
js
mov
shll
or
jmp
mov
and
push
add
sbb
push
sbb
mov
ret
mov
adc
enter
mov
popa
loope
int3
loopne
jbe
jb
test
pushf
or
ja
dec
xchg
into
repz
pop
test
or
scas
inc
lods
pop
out
dec
mov
mov
in
inc
xor
jge
pop
mov
ficomps
fnstsw
jmp
out
outsl
aaa
test
dec
sbb
jl
lods
daa
and
jle
mov
dec
adc
cmp
lds
sub
inc
js
ror
loopne
xchg
mov
jnp
gs
push
add
adc
shrl
add
aas
xchg
pop
imul
icebp
mov
mov
mov
insb
sub
loop
std
pop
lock
in
inc
jb
and
fstl
jle
pop
mov
sarb
aad
ja
xchg
test
cs
pop
push
dec
dec
inc
xchg
fadds
or
pop
das
xor
scas
mov
and
ficoml
jnp
js
ljmp
inc
lahf
add
lods
jecxz
mov
in
push
inc
mov
scas
or
dec
jle
stos
pushf
xchg
daa
add
dec
sbb
xor
daa
fidivrs
pop
xchg
enter
push
mulb
arpl
mov
lcall
mov
mov
and
add
xor
sbb
out
push
xor
jge
sbb
popa
or
xchg
adc
inc
adc
jmp
inc
sub
scas
addl
sub
iret
push
lahf
fucomi
mov
les
add
and
cmpl
daa
gs
popf
mov
in
xchg
imul
dec
push
mov
cmp
mov
mov
inc
arpl
stos
mulb
mov
or
cmpsl
insb
push
in
es
call
shll
sbb
dec
leave
jmp
flds
jl
jb
addr16
mov
stos
sub
and
popf
pop
sbb
shr
addl
repz
cmp
inc
jmp
in
in
inc
mov
and
xchg
ja
dec
push
cmpsb
test
lret
arpl
push
fdiv
adc
and
aaa
inc
movsb
lret
cmp
into
push
arpl
ret
btr
mov
gs
jbe
mov
into
xor
inc
jle
cs
mov
call
cmp
mov
sub
jbe
je
xchg
mov
fisubs
push
cwtl
jno
mov
out
movsl
mov
and
popa
sahf
jge
cld
out
mov
les
jp
push
movsb
xchg
int3
in
jg
or
sarl
sub
xchg
lds
repz
push
shll
or
hlt
dec
or
popa
jno
hlt
jle
out
adc
mov
data16
aad
mov
xor
mov
bound
add
lea
loopne
movsb
xchg
ficoml
scas
inc
int3
jmp
cmc
data16
dec
imul
push
cmp
push
mov
imul
inc
inc
pop
rclb
jb
movsb
mov
lds
rclb
in
or
cmp
inc
cs
pop
sbbl
popa
add
pop
andb
inc
adc
jae
in
adc
push
dec
dec
cmp
les
int3
fldt
cmpb
or
lods
repnz
cmp
movsl
pop
imul
gs
cli
dec
js
sti
dec
xchg
rcl
test
pusha
pop
adc
jne
pop
mov
aam
in
std
sbb
jo
mov
mov
inc
popf
fnstcw
fistl
sub
test
cltd
mov
push
xchg
inc
repnz
pop
or
sub
adc
arpl
out
and
inc
int3
sub
inc
lock
adc
jnp
mov
push
xlat
loop
sbb
call
mov
dec
pop
fidivl
mov
add
ret
and
pop
pusha
jl
xorl
dec
repz
arpl
mov
not
shlb
jg
fld
dec
inc
pushfw
fcoms
das
pop
nop
xlat
jbe
sbb
fwait
mov
movsl
rcrl
pop
rclb
jnp
pop
push
shlb
mov
adc
fisttpll
out
lods
mov
aas
fs
test
or
lahf
adc
jno
inc
jecxz
stc
pop
mov
mov
dec
add
stos
das
outsb
insb
inc
xor
leave
fistl
jo
andl
pushf
push
iret
cmp
popf
jo
mov
rorl
pop
jns
stos
cmp
sbb
jae
fs
push
out
inc
aaa
sub
mov
rcrb
dec
out
push
inc
mov
dec
fiaddl
cmc
push
mov
loope
ret
scas
xchg
mov
test
pop
and
xor
in
xchg
lock
scas
jecxz
add
scas
les
mov
inc
js
divl
xchg
movb
fwait
xchg
inc
cmp
xchg
loope
dec
mov
pop
data16
daa
push
jp
dec
fucomi
arpl
hlt
xchg
fwait
jbe
mov
mov
push
lret
inc
cmpsb
inc
sarl
jmp
pop
jne
push
stos
loopne
test
sub
add
xor
sub
cmp
stc
mov
jne
call
ja
dec
insl
repnz
xor
jo
stc
pop
jg
adc
lahf
lock
scas
clc
ds
orl
mov
mov
xor
ds
movsl
sbb
or
dec
rcl
es
or
mov
pusha
lcall
adc
adc
cmp
xchg
scas
xor
out
cwtl
adcb
aaa
cmpsl
lret
pop
test
outsl
cmc
pop
pop
pushl
subb
repz
add
test
cld
shll
stc
ffreep
dec
cmp
cmp
fstps
xchg
jno
cmpsl
cmp
sarl
out
xor
xchg
lods
imul
xor
iret
cmp
sub
cmc
pop
inc
mov
jg
lahf
jnp
orl
xor
and
jecxz
lea
pop
jb
jbe
and
andb
arpl
xor
pop
out
das
in
mov
sub
cmp
cmpsl
outsb
and
sub
cli
jae
sbb
sub
adcb
enter
in
inc
mov
enter
js
jae
mov
mov
ret
aad
mov
add
mov
dec
ds
xchg
mov
adc
pushf
add
mov
jae
mov
stos
mov
sbb
out
vcvtsd2si
or
mov
mov
cmp
lds
lret
push
fwait
insl
inc
iret
lret
aad
mov
scas
arpl
and
repz
mov
mov
sarl
sub
fsubrl
jecxz
test
xchg
mov
mov
dec
pop
shl
iret
cmp
sub
outsb
jp
mov
push
mov
and
lock
xor
inc
repz
push
shrl
pushf
mov
sbb
lahf
sub
mov
insl
cmp
mov
addr16
shlb
xchg
in
push
iret
jecxz
test
jo
lods
jnp,pt
std
inc
int
das
orl
push
sub
push
outsl
mov
movsl
insl
mov
and
adc
xlat
pusha
sub
dec
fwait
outsl
mov
aas
inc
lret
mov
insl
push
lcall
jecxz
out
pop
shll
mov
sub
sbb
js
popa
or
cltd
adc
testb
jo
leave
cmp
clc
or
mov
mov
ficoml
pop
jle
mov
insb
sub
cmp
pop
push
test
mov
mov
ss
push
inc
mov
jle
leave
add
scas
nop
inc
notl
arpl
fsubs
ret
sar
inc
add
add
and
stos
sbbb
adc
fnstsw
sahf
lahf
fistpl
push
lea
jbe
mov
jle
arpl
in
addr16
push
stos
lret
es
cli
pop
bound
lret
cmc
mov
push
and
in
pop
jae
pop
dec
fs
mov
and
popf
shlb
imul
clc
rep
lock
sti
adc
jnp
jle
push
adc
movsl
jo
rcrb
lcall
mov
movsl
cmp
inc
addps
cli
inc
dec
and
mov
sahf
filds
pop
jno
fdivs
push
cmp
rorb
aad
cmpsb
xchg
jl
std
js
loope
or
xor
inc
push
dec
nop
xchg
movsb
sbb
iret
xchg
aad
mov
outsl
push
aaa
test
cs
iret
xor
mov
push
out
mov
popf
int3
outsl
push
or
push
adc
push
imul
mov
inc
dec
pop
dec
stos
push
pop
insl
push
repz
popf
add
adc
cmp
dec
mov
nop
test
testb
mov
or
clc
add
loope
fadd
sbb
mov
daa
in
dec
pop
cmp
xor
mov
cmc
bnd
dec
xchg
in
int
mov
cmpsb
in
jnp
ds
out
or
std
jle
adc
imul
cs
repnz
push
nop
mov
movsb
into
xor
jo
loopne
mov
sbb
xor
ss
xchg
pop
inc
jecxz
jle
xlat
aas
ds
pop
rcrl
test
cli
scas
jo
aaa
xor
fidivrl
sub
out
daa
jno
add
scas
or
jno
dec
shrb
sbb
shlb
aad
cwtl
mov
std
lds
inc
cmp
mov
push
sar
or
mov
jmp
outsl
insl
push
lods
rcpps
or
and
out
add
adc
mov
in
add
clc
jno
jle
lods
adc
lret
test
xchg
ja
inc
sub
push
xor
pop
ret
xchg
negb
stos
mov
add
and
repz
xchg
std
in
sub
aas
cli
and
push
push
stc
cwtl
repnz
sbbb
xor
push
xchg
sub
loop
jae
adc
adc
pop
movsl
outsl
mov
adc
dec
mov
imul
xchg
push
mov
sub
test
mov
imul
mov
stos
dec
fs
repnz
lods
movsl
call
inc
and
mov
sbb
xchg
fstpl
rcll
jne
sub
pushf
jno
xchg
fists
sbb
and
mov
push
push
jno
es
mov
lret
mov
jmp
test
fwait
xchg
rolb
into
pop
or
stos
out
or
out
filds
jmp
add
stos
insb
mov
aad
add
xchg
scas
xor
or
pop
cs
insl
sub
imul
shrb
inc
fsubrl
inc
fstps
pop
into
xchg
cmpsl
xor
push
cld
jns
out
hlt
mov
pop
mov
mov
cltd
out
pushf
scas
leave
jo
pop
jl
lret
inc
sbb
stos
movb
sub
out
pop
xchg
idivb
testl
nop
jne
std
jnp
ds
sbbl
popf
or
cmp
mov
mov
xchg
and
jns
ret
sbb
or
and
sbbb
pushf
aad
and
inc
into
test
mov
inc
mov
mov
xchg
and
hlt
movsl
jnp
scas
push
lods
cs
xchg
mov
mull
nop
mov
loopne
sub
dec
shlb
in
gs
pushf
enter
ds
in
cmp
mov
sub
sti
scas
shlb
or
ds
inc
mov
mov
iret
sub
xchg
mov
sbbl
aad
aam
jg
xchg
pop
sahf
lahf
or
sub
and
jnp
pop
pop
xchg
test
add
int
add
lcall
idiv
mov
test
pop
lock
neg
sub
and
hlt
lock
test
lods
inc
pushf
push
clc
aad
insl
jnp
lahf
push
jge
mov
ret
inc
jp
je
xor
pop
push
add
pushf
and
pusha
cmpsb
push
sub
or
mov
adc
rcll
jno
push
cli
aaa
sbb
jp
ror
mov
inc
fcoml
lock
cmp
sbb
dec
inc
jae,pt
or
out
dec
mov
ss
pop
or
jp
aad
fisttpll
ret
rcll
lds
std
xor
decb
cmp
mov
enter
rorb
fidivl
stos
mov
loope
xchg
xor
ds
sub
mov
fsubs
or
pushf
adcb
fld
inc
inc
outsb
xor
fs
pusha
pop
sbb
ja
sbb
sarb
jns
dec
adc
fsubrl
loope
cmp
inc
ds
arpl
dec
cmp
sub
sbb
or
adc
sbb
test
jns
bound
daa
cmp
divl
inc
mov
cmp
mov
jecxz
sub
adc
in
fnstsw
sbb
imul
fs
int
dec
adc
pop
mov
aam
std
lds
inc
stos
dec
jnp
pop
leave
mov
xor
sar
and
aaa
popf
pop
cltd
sub
ficoml
ljmp
divb
lods
mov
mov
mov
ja
mov
cmp
inc
mov
push
test
fmul
jle
cmpsl
fstps
add
cmp
outsb
popf
insl
cmpsl
cmpsl
lret
adc
xchg
add
in
sub
pop
lret
or
pop
xor
incb
inc
scas
pop
mov
movsb
mov
sti
loop
lret
aam
push
ss
sub
adc
push
pop
imulb
nop
push
push
lret
mov
inc
rcrl
mov
push
lahf
je
and
addr16
jmp
lea
test
movsb
or
adc
repz
pop
imul
inc
adc
and
scas
pop
stc
or
pop
sahf
dec
popa
sbb
lods
sahf
sub
repz
xor
call
decb
lret
sbb
jae
lret
fsubrs
int3
jmp
mov
fidivl
std
cwtl
ljmp
in
aad
cmc
lcall
daa
cmp
adc
xchg
sub
iret
sbb
test
mov
mov
scas
orl
xor
cmpsb
sbb
lods
mov
loopw
adc
jmp
roll
pop
das
fiaddl
dec
add
in
stos
movsb
mov
push
addr16
stos
cmp
insl
push
sub
cwtl
pop
lcall
jno
les
lret
cs
sub
lahf
call
pop
add
add
clc
inc
imul
in
pop
push
mov
mov
mov
into
cmp
jge
inc
cli
push
mov
pop
nop
cmpsb
sti
pop
lret
mov
push
xchg
push
jecxz
dec
or
cmc
outsb
aas
cmp
loop
xor
cmp
cmpsl
sbb
fisubs
xchg
jb
dec
pop
mov
clc
cwtl
pop
bswap
sbb
cmpsl
outsb
popa
dec
xor
mov
sbb
sti
fisttpll
mov
fnstcw
dec
and
inc
adc
xchg
mov
or
cmpsl
les
cld
dec
push
es
mov
jl
inc
sub
in
add
push
lret
mov
lcall
push
xor
aad
sub
sub
xor
aaa
cli
movsl
psubusb
sub
inc
push
jp
adc
mov
addl
sub
mov
cld
or
pop
jp
repnz
push
inc
push
jno
sbbb
fists
mov
mov
aad
test
arpl
hlt
xchg
iret
lcall
imul
push
or
sbb
pop
imul
pop
fwait
xchg
xchg
sub
and
pop
cltd
mov
push
lret
sub
push
or
adc
xlat
pusha
out
pop
mov
inc
std
jne
aam
jmp
push
cli
sub
int3
repnz
sbb
push
loop
lcall
jb
xchg
xor
cmp
sub
adc
fcoms
push
and
push
ret
add
movsb
fld
inc
mov
xchg
push
cmc
fcomps
or
mov
outsl
imul
pop
push
or
sti
dec
cmp
test
jne
sub
rcll
adc
pop
out
bound
out
pop
cs
sbb
or
jne
add
xchg
sbb
js
pop
pusha
mov
shlb
mov
adc
sbb
mov
nop
push
or
repnz
sbb
jecxz
push
add
pop
lods
andl
inc
adc
subl
jae
cmp
or
fistpl
scas
jne
xchg
or
cmp
sub
stc
gs
scas
arpl
fucom
or
and
out
in
jbe
test
mov
jbe
add
popa
pop
pop
jle
cmp
test
xor
mov
lock
xor
fcoml
dec
ficoms
mov
jmp
fildll
ds
push
int
mov
jo
enter
xchg
pop
jp
shll
repnz
jbe
dec
push
les
mov
hlt
mov
push
lcall
loope
loopne
lds
dec
inc
hlt
rcrl
subb
mov
lods
arpl
shrb
sbb
fstl
push
movsl
imul
mov
add
outsl
fwait
cmp
pop
cld
xorl
mov
nop
or
mov
sbb
adc
ret
mov
dec
pop
ss
lock
loop
loope
insb
add
shrl
xor
jb
std
adc
push
dec
xchg
lds
into
jl
rcrb
das
adc
daa
push
arpl
jb
loope
mov
dec
and
out
xor
in
sbb
jnp
mov
inc
xchg
mov
jb
out
lcall
std
or
and
jge
adc
add
into
inc
aaa
sbb
push
xchg
das
cmp
cmp
and
nop
dec
ret
adc
inc
loop
pop
call
iret
ficoml
mov
jmp
mov
sbb
clc
out
lea
notl
xlat
out
cmpl
pop
inc
shlb
add
pop
lds
rcrb
andb
out
sub
jl
cltd
lret
je
test
add
cld
sbb
and
sahf
frstor
sub
popa
out
or
faddp
pusha
push
lahf
and
xchg
mov
inc
ret
fdivrs
add
pop
outsl
ds
push
add
xchg
rcrb
cmp
addr16
push
mov
fsubl
in
data16
das
lea
mov
pop
push
xchg
ret
imul
daa
cs
mov
call
jnp
jae
push
pop
push
xchg
sti
pop
jle
cmpsl
xor
int3
push
imul
or
fsubp
cmc
xor
shl
mov
mov
incb
pop
and
jle
loop
cmpsb
push
in
mov
push
lcall
jmp
inc
and
mov
lods
pushf
jb
jne
and
test
or
xchg
and
ss
push
xchg
push
mov
push
xor
pop
add
fstpl
sub
popf
andl
push
cltd
or
lret
xchg
movsb
jb
mov
mov
cmp
fs
lock
in
imul
mov
daa
sub
fwait
jg
ret
clc
sahf
add
fildl
mov
dec
shl
push
imul
xchg
fcomps
jne
les
pop
cmpsb
fimuls
fdivs
ja
push
lret
jo
push
dec
lret
adc
bound
dec
call
push
in
add
cwtl
xor
pop
pop
repnz
cmp
cmpsl
out
xor
icebp
jecxz
xor
mov
push
inc
nop
xor
jbe
jge
add
aad
icebp
pop
repz
lahf
movsl
inc
mov
test
jnp
sbb
cmp
int3
out
nop
xchg
in
insl
sub
mov
sbb
pop
imul
or
cmpsl
jg
lahf
adc
enter
pop
fisubs
fwait
fs
aad
mov
jnp
dec
adc
push
imul
dec
loope
mov
cmp
dec
ljmp
out
pop
clc
push
jb
fldl
iret
nop
nop
xchg
dec
into
xchg
out
lahf
xlat
aam
loopne
and
xchg
ret
insl
cs
stc
jno
cmpsb
addr16
or
pop
loope
fcoms
mov
adc
sahf
or
mov
adc
pop
cmc
pop
imul
fcmovnb
ret
icebp
int3
fs
insl
fcompl
cmp
mov
adc
arpl
insl
cld
jmp
mov
xchg
aas
pop
push
insb
cmpsl
ds
xor
xchg
adc
pop
icebp
xor
dec
sbb
adc
lods
fisubrs
xchg
mov
mov
cmp
add
lret
int
out
lea
jb
stos
inc
cmp
mov
add
mov
in
inc
sbb
stos
xchg
pop
out
add
popf
xor
sbb
lea
mov
sub
pop
cmp
dec
rclb
insb
sub
mov
jecxz
pusha
and
out
icebp
loope
pop
data16
ret
pop
negl
mov
out
aam
jge
add
cmc
popa
mov
mov
in
mov
test
popf
dec
std
mov
fs
sbb
out
imul
cs
and
pop
mov
pop
lret
cld
or
test
repz
aaa
lea
jg
jg
add
jle
jle
loop
pop
lcall
lret
stc
cmpsb
push
xchg
int
xor
js
inc
ja
mov
cs
mov
xchg
subl
cmp
lret
xor
mov
bnd
test
arpl
or
and
jb
jnp
xor
icebp
mov
mov
pop
sbb
ljmp
adc
adc
pop
nop
xchg
push
loope
insb
fisubrl
and
in
mov
aas
adc
test
inc
inc
cltd
mov
adc
movsb
pop
dec
push
inc
dec
jl
ret
dec
inc
ret
mov
je
cmp
push
or
das
mov
test
gs
and
add
fdivrs
movl
pop
lods
mov
sbb
das
loopne
cmpsb
fstps
ret
das
mov
dec
xor
sbb
jmp
jnp
add
ljmp
arpl
repz
sbb
ret
insb
mov
aas
adc
inc
add
popl
inc
mov
aad
in
pop
call
in
sub
testb
cmp
xor
jg
fsubs
xor
scas
add
daa
sbb
or
pop
adc
or
sub
frstor
or
cli
xorl
mov
inc
test
pop
fisttpl
cmp
lods
orb
jmp
fs
iret
scas
loopne
add
sahf
jecxz
jne
loope
pop
jnp
xor
push
xor
mov
sbb
mov
add
shrb
or
adc
push
push
mov
popa
xchg
shlb
mov
pop
sti
push
or
xchg
fstpl
mov
and
sub
cmp
insb
mov
xchg
xchg
in
bound
fcoml
icebp
lahf
addr16
xor
repz
leave
xor
mov
ja
adc
loop
jne
xchg
adc
in
loop
insb
sbb
mov
mov
pop
cmp
ja
sahf
pop
dec
adc
jne
out
push
out
mov
push
sbb
cli
repnz
test
push
pop
repz
ror
mov
int
mov
aaa
pop
pop
xor
xchg
std
cmp
or
pushw
lgs
mov
lds
mov
push
xchg
or
mov
mov
push
lret
inc
rep
sbb
aas
in
hlt
enter
xor
aas
rolb
fwait
test
sbbl
outsl
mov
jnp,pn
fwait
icebp
mov
or
jge
lcall
fs
pop
call
sub
inc
scas
inc
sbb
ficoms
push
dec
mov
dec
fcomi
sub
xor
mov
test
out
aas
xchg
cmp
icebp
lcall
mov
lcall
dec
scas
xchg
mov
xchg
adc
xchg
mov
stos
adc
loope
mov
sbb
je
mov
lahf
cmpl
adc
and
aam
push
xor
mov
call
rolb
push
arpl
mov
call
ljmp
mov
dec
out
icebp
fiadds
pop
xchg
add
call
push
adc
cmp
aaa
shll
idivl
xchg
insl
and
jecxz
out
out
mov
outsb
mov
mov
loop
pop
adc
mov
add
cmp
mov
dec
dec
xor
add
mov
sbb
stc
movsl
pop
sub
mov
std
xor
jb
lcall
sbb
lahf
stos
dec
aaa
xlat
out
imul
enter
adc
add
mov
mov
lock
fwait
mov
and
push
das
dec
dec
jno
cmp
nop
mov
dec
inc
shll
loop
sti
lods
sbb
jnp
cli
mov
inc
scas
pop
pop
xchg
mov
mov
adc
sbb
clc
test
and
fcompl
sti
or
mov
notl
mov
pop
jg
nop
je
cmp
and
sbb
mov
lods
inc
xor
stc
jbe
in
fwait
cmpsl
leave
pusha
add
jmp
jo
pusha
push
shl
mov
imul
pop
jb
mov
movsl
je
ret
mov
iret
dec
out
and
dec
into
insl
cmp
test
cli
pop
mov
pop
addb
sbb
loopne
sub
and
cmc
and
inc
aaa
aad
inc
out
aad
xchg
ret
mov
mov
sub
ja
rcll
push
inc
in
sbb
xchg
xor
popf
jmp
fists
cmp
test
jb
int3
push
cli
mov
pop
cmp
xor
sbb
pcmpeqd
xchg
inc
jnp
aam
nop
xor
mov
pop
and
add
dec
lret
sbb
cli
jns
jmp
daa
fwait
movd
cmp
push
pusha
pop
pop
lahf
dec
inc
inc
insl
cmc
add
sahf
pop
stos
out
es
push
lods
xchg
cmp
cwtl
cmpsb
out
mov
loope
jb
adc
dec
es
jmp
cmpl
cmp
movsl
mov
cmc
negb
sbb
es
push
xor
xor
inc
xchg
fs
call
mov
push
les
mov
bound
push
jmp
mov
add
setnp
push
mov
sbb
jecxz
inc
dec
cld
push
add
jo
out
mov
mov
sub
cmp
pusha
mov
stos
xchg
rorl
roll
lods
test
add
xchg
repz
xchg
adc
sbb
stos
or
sbb
out
out
popf
das
loop
sub
pop
cmpsl
and
in
sbb
mov
mov
lea
pop
ljmp
mov
jo
cld
test
arpl
sbb
sbb
mov
push
rorl
repnz
sub
cmp
or
pop
xchg
xchg
shll
xor
adc
iret
lret
jno
mov
loopne
arpl
or
and
jns
loopne
push
mov
cli
push
rorb
pop
push
popf
mov
jle
loopne
sub
hlt
cmpsl
dec
mov
in
test
movsl
in
loope
push
or
sti
adc
fildll
sub
daa
xchg
inc
bound
jnp
cmpsl
sbb
insl
inc
popa
sub
cwtl
gs
cmp
or
test
cmc
popf
idivl
sbbb
sahf
xchg
push
mov
es
mov
es
and
and
cmpsb
cltd
les
and
jmp
test
ret
lods
lock
subb
out
orb
cwtl
stos
pop
cs
imul
popa
jl
js
icebp
jmp
fwait
xchg
test
cmc
out
aaa
fwait
ss
pop
xlat
je
bswap
pop
mov
or
movsb
imul
sbb
mov
inc
mov
mov
add
mov
push
mov
pop
add
pop
cmp
fs
jmp
sub
mov
enter
adc
cs
xor
pop
mov
mov
lcall
inc
push
xchg
mov
hlt
inc
int
xchg
stos
dec
xlat
mov
pop
xor
pop
cmp
cmp
sbb
popf
arpl
xor
ds
inc
push
outsl
stos
mov
test
icebp
mov
arpl
xchg
daa
and
or
pop
stos
mov
out
xor
cmp
test
mov
shr
stos
dec
dec
xchg
pop
insl
jo
call
imul
pop
sahf
out
mov
stc
mov
mov
inc
ds
dec
hlt
mov
jno
lcall
xor
in
push
cmp
mov
xchg
push
cltd
mov
pusha
dec
push
out
sbb
mov
pop
add
pop
lcall
cmpsb
push
sub
xchg
andl
mov
int
mov
fdivrp
ret
es
lds
ljmp
jge
sbb
cmp
xchg
loope
pop
pop
sbb
inc
xor
dec
pop
xchg
insl
sbb
mov
hlt
mov
fucomp
or
inc
push
push
cmpsb
sbb
cmp
lock
or
lret
dec
stc
lret
sub
adc
mov
in
repnz
in
les
out
push
pop
das
and
rcll
push
fidivrl
icebp
or
jae
pop
je
sahf
aam
movsb
mov
fcmovnb
dec
ljmp
mov
mov
or
or
test
sbb
sub
adc
inc
mov
in
push
ja
loope
cmp
mov
push
and
adc
in
aad
arpl
lea
es
call
ret
xor
sbb
jp
adc
xchg
mov
add
jns
mov
dec
lock
je
xorl
adc
mov
or
adc
data16
lods
mov
adc
mov
xchg
hlt
daa
sub
outsl
mov
inc
iret
cmp
xor
ja
jp
cmpsb
stos
jg
cmp
sbb
cmp
jo
inc
addb
add
add
or
or
fstpt
dec
sbbl
gs
xor
cmp
shll
xchg
test
cwtl
or
movsb
stc
stc
dec
adc
popa
and
mov
sti
push
lret
in
daa
ret
pop
mov
int3
orb
jp
gs
mov
outsl
push
std
aas
xor
ss
pop
test
lods
insl
mov
add
jp
mov
mov
in
dec
std
jle
xor
or
xor
sbbb
sbb
inc
outsb
sbb
std
outsl
aas
jno
hlt
mov
dec
movsb
and
aad
pop
sub
ja
jno
popf
jmp
lock
mov
pop
pop
popa
inc
hlt
sub
mov
mov
sbb
ret
push
clc
pop
add
mov
push
fscale
repz
das
mov
in
lods
add
imul
fldenv
mov
ret
xlat
stos
mov
xchg
pop
adc
or
arpl
mov
cmp
or
mov
jle
cmp
test
adc
fiaddl
clc
mov
aas
push
jmp
in
gs
push
and
es
dec
das
cmp
and
shll
sub
dec
scas
ret
dec
in
loope
push
mov
and
dec
call
mov
lret
lods
aaa
lcall
nop
inc
or
shl
jbe
inc
out
xchg
test
aas
cmc
faddl
xchg
mov
sub
mov
out
mov
cld
mov
adc
mov
shlb
mov
jl
cmpsl
std
inc
mov
in
pusha
mov
iret
push
movsb
or
lcall
popf
call
leave
cmp
jb
mov
arpl
sbb
and
jne
movsb
cmp
xchg
mov
incl
in
outsb
mov
jo
jge
mov
cmovle
xor
out
jmp
pop
cli
and
daa
adc
add
bound
mov
or
push
mov
lcall
push
test
imul
xchg
sarb
pop
add
movsl
sub
leave
inc
in
aad
adc
push
loopne
pop
in
aas
dec
inc
rcr
xchg
in
ja
lea
and
loop
and
arpl
test
sbb
pushf
jae
cmpl
or
jl
adc
inc
or
push
xor
dec
xchg
jb
out
jge
mov
adc
popa
push
dec
rcr
inc
lahf
jb
test
sub
cmp
in
push
push
jg
test
ja
mov
mov
mov
sbb
into
mov
or
jl
or
in
popa
xor
cmc
push
mov
mov
call
xchg
clc
out
pop
xor
and
add
pop
andl
jge
sahf
push
mov
ret
xor
cli
mov
jmp
or
push
cmp
pushf
xchg
pushf
clc
loopne
je
inc
or
xchg
xor
orl
sub
push
push
add
loopnew
xchg
es
outsl
imul
aas
push
in
mov
lods
mov
ljmp
pop
testl
jge
arpl
lock
das
mov
andb
data16
adc
xchg
mov
in
cmp
jbe
dec
sbb
add
pop
mov
lret
and
flds
mov
aam
pop
sbb
adc
xor
out
xor
ljmp
fwait
xor
cmp
xor
push
fnstcw
daa
loopne
call
adc
in
dec
lcall
inc
inc
outsl
jno
ss
pop
inc
xor
xor
inc
dec
cmc
out
stos
lds
das
mov
inc
test
nop
mov
pop
dec
pop
or
fcmovnu
andl
pop
int3
imul
jne
lds
lea
pusha
cmpb
push
or
lock
mov
mov
mov
push
jne
outsl
jnp
pop
dec
jecxz
scas
out
loop
lock
leave
push
xor
xor
mov
addr16
popf
fisubrl
leave
lds
push
lock
jmp
mov
mov
aad
or
jns
iret
sbb
or
and
push
push
mov
xchg
mov
and
out
sbb
cmp
jp
pop
or
jbe
jge
int
push
push
orl
dec
fisubl
pop
pop
and
fscale
or
pop
pop
inc
test
sbb
fsubl
loope
cltd
subb
adc
call
out
xchg
dec
lds
xchg
ss
push
es
inc
fwait
and
add
lods
mov
out
pushf
cwtl
inc
aas
outsb
push
inc
push
dec
mov
pop
inc
les
jp
adc
xchg
adcb
mov
sbb
adc
xchg
out
add
aas
jmp
adc
add
inc
sub
icebp
or
push
daa
int
daa
xor
sbb
xor
rol
sbb
out
xchg
cmc
js
add
in
js
enter
adc
jmp
adc
mov
aas
push
les
loope
daa
mov
dec
addl
pop
jge
jno,pn
mov
in
nop
andb
push
mov
add
inc
test
pop
xor
and
mov
icebp
xor
jge
and
jl
lahf
cmp
out
pop
lea
int3
lea
insb
arpl
in
lock
and
nop
movsl
jl
imul
adc
scas
cmp
mov
fsubs
fwait
jmp
dec
dec
pop
add
hlt
loop
or
xchg
dec
inc
mov
xchg
mov
imul
mov
dec
fcomi
push
popa
and
lods
pop
shlb
inc
popa
mov
mov
lret
js
test
mov
sbb
cmp
cwtl
jno
cmp
jne
push
xchg
or
mov
jnp
mov
bound
ret
xchg
ja
pop
sbb
mov
test
add
rcrb
frstor
sub
decl
into
and
cli
sub
pop
pusha
lret
add
push
inc
lret
mov
xor
pop
xchg
rcrb
test
mov
push
lea
mov
mov
lock
cmpsl
and
popf
ret
sub
push
and
or
fidivrl
adc
sub
inc
subb
mov
popl
push
ss
cmp
ljmp
fs
jge
call
arpl
test
jge
imul
adc
push
and
inc
mov
in
pop
fistpl
mov
gs
xlat
xor
xlat
jo
push
lea
int3
mov
aam
xor
pop
push
sub
mov
ja
stos
add
gs
pop
pop
cli
add
xor
int
lcall
xchg
out
add
and
push
pop
sbb
cwtl
fidivl
lods
or
int
jp
stos
cmp
sbb
adc
inc
cmc
inc
fists
icebp
ret
adc
out
jo
sbb
lock
out
cmp
jb,pn
ds
pop
adc
cmp
lahf
dec
push
mov
inc
addr16
mov
adc
cmp
stos
xchg
jbe
mov
aaa
mov
lret
or
inc
adc
inc
add
shrl
and
pusha
jnp
xorb
cmpsl
shrb
mov
outsl
in
mov
sub
js
pop
push
jne
sub
std
push
repz
mov
and
mov
aam
mov
jg
adc
mov
sub
test
and
dec
insb
das
xchg
insb
daa
mov
movmskps
lcall
mov
outsb
flds
mov
das
sbb
inc
cmpb
sti
inc
fldenv
or
data16
les
psubsw
mov
xchg
sub
adc
shll
sub
test
out
push
push
xchg
stos
pop
insl
mov
std
or
cs
mov
dec
mov
cmp
js
out
cmp
cmpsl
clc
ror
push
pop
and
pop
popf
push
repz
sbbl
jae
cmpb
aaa
jne
adc
mov
mov
mov
and
add
mov
sbb
mov
mov
cmp
inc
mov
test
pop
fdiv
andb
pop
clc
ljmp
sub
jne
enter
mov
push
add
rorb
sub
lahf
xchg
in
xchg
mov
ds
gs
sbb
push
int
dec
adc
and
rclb
mov
push
pop
push
lea
sbb
insb
jno
pop
cmp
jb
dec
push
cmp
add
sti
rcrb
push
cltd
sbb
xchg
lahf
cmp
xorb
pusha
lret
inc
and
in
sahf
dec
dec
or
sbb
cmp
sub
push
cmp
mov
insb
mov
pop
cmp
idivl
cmp
out
xchg
shrl
jecxz
xor
cli
aas
pop
adc
in
mov
jno
lods
mov
ja
push
inc
int
icebp
aam
sahf
pop
push
xlat
aas
jp
int3
sbb
lea
outsl
jns
fisttpll
adc
inc
mov
insb
adc
in
mov
adc
jnp
shlb
std
out
cmpsl
cmpsl
test
and
filds
fnstcw
mov
jo
loop
rclb
out
je
popf
pop
mov
nop
cs
ss
stos
pop
aas
stc
xchg
adc
and
pop
orb
pop
sbb
add
and
cmp
xchg
repz
idivb
cmc
jg
mov
add
sub
fstps
inc
pop
cmc
out
clc
out
pop
out
orl
add
xor
add
aas
mov
sbb
push
test
call
imul
scas
mov
mov
or
std
stos
xchg
and
cmp
xchg
ljmp
lock
dec
xchg
enter
push
or
sbb
popf
xor
add
mov
sti
sbb
rcr
xor
movsb
test
mov
sub
lea
dec
les
jmp
and
xchg
in
test
xchg
enter
ds
mov
loopne
aad
out
movsb
jne
cmp
add
das
cmpsl
out
cmpsl
jne
adc
loopne
test
jg
cmp
add
rol
imul
lea
push
jae
inc
jl
fadd
bound
shrl
or
and
mov
sahf
daa
lahf
mov
call
stc
xchg
or
ffree
repnz
and
in
aaa
xor
cmp
push
fbstp
push
sbb
vphaddubd
jbe,pn
shrb
mov
xor
test
fstpl
cld
pop
adc
xor
iret
ret
pop
test
leave
inc
test
mov
push
push
stc
jo
add
pop
in
or
outsb
lcall
or
leave
pop
out
inc
cmp
iret
lods
mov
mov
cmp
or
push
cmp
and
jbe
call
popf
std
frstpm(287
jle
add
mov
mov
jb
or
dec
push
fidivs
push
push
ret
cld
mov
adc
bound
sub
test
jge
aam
cmp
xchg
sub
pop
or
ret
cmp
and
fistpl
inc
jne
inc
cmp
ja
mov
cmp
cli
dec
dec
jp
call
adc
lods
subb
je
ror
int3
sti
scas
sahf
inc
flds
or
arpl
and
inc
popa
adcl
mov
lahf
sub
push
mov
data16
pop
mov
sbb
inc
rolb
out
shlb
xchg
jg
das
inc
mov
bound
sub
sbb
jp
xchg
add
and
lds
sub
lods
mov
cld
in
mov
lods
out
inc
loopne
mov
jmp
jnp
cmp
repnz
fcoml
pusha
cmp
sub
fwait
test
dec
xor
aaa
shlb
mov
pop
or
mov
inc
push
sub
dec
push
fmulp
pusha
mov
daa
fildl
dec
imul
push
ret
popf
dec
cwtl
nop
iret
lret
negb
adc
loope
dec
mov
adc
sbb
test
xchg
sub
inc
loopne
in
mov
outsb
jmp
inc
jo
inc
mov
mov
lods
es
nop
movsl
mov
lret
ljmp
jb
jp
xor
stos
fwait
jle
pop
fs
shr
mull
das
sub
cmp
mov
gs
dec
pop
inc
jb
fstpl
jle
mov
fistl
dec
push
sub
mov
jg
cmc
sub
subl
xchg
div
mov
inc
pop
cli
pop
xchg
inc
pop
lcall
rcll
adc
and
jno
rol
mov
int
pop
push
push
pop
mov
mov
xchg
cmc
fisttpl
out
sbb
add
add
sbb
scas
push
mov
icebp
dec
lret
xchg
jno
loope
ret
or
sub
comiss
push
xchg
cwtl
mov
lock
push
sbb
andb
push
fisttps
mov
mov
cmp
sub
cmpl
add
orl
loopne
jmp
or
sub
int
push
loop
outsl
pushf
pop
xchg
add
test
mov
stos
and
loop
dec
rcll
fldt
scas
inc
aam
inc
and
push
incl
je
scas
shrl
das
je
sbb
rcll
push
mov
cmp
cltd
sbb
pop
stos
shr
sub
jl
xor
dec
xchg
icebp
pop
loop
dec
test
ja
ss
insb
mov
inc
xor
fsubs
jecxz
pop
lea
aaa
rcrb
lret
xchg
mov
lods
jge
adc
cmpsb
and
mov
inc
sub
out
out
sti
or
jl
xor
ds
pop
jne
out
out
lahf
aam
jne
push
repnz
adc
out
and
pop
movsl
jbe
movsl
test
out
and
pop
jge
and
dec
pop
mov
fcoml
jmp
or
enter
mov
adc
or
out
jl
pushf
int
faddl
mov
mov
xor
rol
nop
lods
call
jo
loope
cmp
popf
xchg
sub
push
sub
cmp
das
add
adc
pop
xor
xchg
lcall
in
lret
or
int3
loopne
push
fistl
leave
cmp
sbb
cmp
outsb
sahf
sub
in
xchg
xor
cltd
add
push
icebp
mov
xchg
push
add
test
mov
mov
arpl
mov
out
mov
addr16
cli
faddl
int3
mov
xor
imul
cmpsb
addr16
mov
idiv
jp
stc
jl
jnp
inc
sti
jae
and
sbb
icebp
cwtl
push
or
pushf
in
sub
jb
daa
push
fwait
jle
xchg
cmp
jbe
aaa
mov
sti
jo
cmc
xchg
insb
xchg
das
addr16
cwtl
mov
aam
jge
mov
cmpsl
out
sub
pop
lcall
inc
jp
std
lret
xchg
ljmp
cmp
fnstenv
xor
fs
mov
xchg
scas
lea
rcrl
in
xlat
pop
leave
jb
shrl
lret
pop
or
or
and
adc
outsl
and
sub
pop
xor
repnz
mov
movsl
push
push
filds
pop
scas
mov
subl
adc
insl
and
aad
lret
and
sbb
adc
imul
inc
lock
cs
xor
aam
lea
popa
ret
xlat
pop
inc
leave
and
inc
movsb
hlt
stc
push
push
int
inc
movb
cmp
pushf
or
lret
pushl
stos
fnstcw
mov
mov
out
xchg
mov
or
mov
loop
gs
add
mov
push
push
xor
jecxz
adc
pusha
adc
sub
rolb
mov
lahf
mov
dec
push
es
outsb
and
addr16
cmpsb
xchg
jl
sbb
xchg
push
pop
out
mov
ret
and
outsb
jne
mov
filds
mov
pop
or
inc
inc
mov
loope
aas
fisubrl
pushf
imul
sbb
lahf
or
dec
int
and
mov
mov
pop
push
test
dec
xor
mov
nop
push
mov
pop
fs
shrl
xchg
push
dec
push
mov
dec
inc
out
mov
aas
sub
mov
shlb
jns
or
jge
adc
loope
jo
pop
rcll
jo
cld
sbb
sti
push
pusha
ljmp
add
pop
stc
ret
fcoms
lret
jmp
nop
sti
repnz
inc
xor
cmp
repnz
push
push
test
or
adc
bound
pushf
dec
mov
repnz
dec
cmp
out
add
adc
nop
add
push
pop
adc
pop
or
pop
xor
test
out
xor
cmp
lahf
xor
add
sahf
mov
ljmp
push
add
mov
xor
sub
outsb
lods
push
lcall
fmull
pushf
int
rol
lds
sbb
loop
pop
sbb
add
in
fs
lea
outsl
repnz
mov
fs
mov
leave
out
add
std
push
mov
dec
cmp
cltd
icebp
jmp
mov
sbb
in
and
bound
push
das
mov
inc
mov
cld
sbbb
int
push
mov
jnp
pop
jmp
int3
stc
mov
js
fsubrs
mov
clc
cmp
mov
adc
hlt
mov
cmp
and
mov
jg
sub
cmp
adcl
stc
dec
xor
fs
popf
xchg
das
fdivr
push
or
aam
cmp
adc
dec
mov
cmp
dec
fdiv
and
aaa
xchg
jb
xor
or
rcrl
fwait
mov
mov
out
mov
mov
rcrl
cltd
cmc
push
jbe
dec
sbb
or
inc
jmp
nop
std
or
sbb
jnp
dec
sub
sahf
pop
dec
inc
adcb
xor
scas
add
lea
pop
sti
adc
pushf
sbb
cmpsb
aam
inc
ljmp
shll
adc
inc
jecxz
mov
xchg
ja
test
aaa
gs
inc
inc
lret
inc
outsl
xor
and
ds
in
inc
sti
pop
fcomps
inc
sbb
and
jbe
mov
add
sbb
das
xchg
mov
cmp
inc
pop
pop
loop
cmp
push
int
push
jae
dec
push
nop
mov
sbb
sub
mov
jmp
das
js
jl
adc
jns
sbb
dec
mov
popf
pop
rorb
sbb
push
sahf
pop
stos
andl
mov
aam
loop
imul
faddp
cli
jl
cmp
pop
cltd
nop
arpl
pop
mov
imul
jecxz
comiss
dec
pop
mov
jne
mov
sbb
inc
push
push
lcall
jecxz
les
push
sahf
insb
sbb
clc
daa
sahf
js
mov
arpl
loopne
or
fisttpl
imul
jnp
ss
in
or
push
cmc
shrl
sub
js
sar
ja
loopne
fs
or
lret
push
push
sub
fwait
mov
mov
mov
sarl
cmp
push
popf
ret
repnz
add
sub
jecxz
xorl
pushf
xchg
xchg
or
mov
add
inc
sbb
out
add
notl
bound
add
not
imul
mov
pop
dec
int3
xchg
or
sbb
or
cli
adc
sbbl
in
lods
cmp
sub
decb
int
dec
dec
push
jmp
popa
pop
mov
push
xchg
scas
jecxz
sub
daa
fs
pop
mov
popa
rcr
jge
dec
rcrb
pushf
mov
add
sbb
inc
xchg
aaa
dec
cmp
mov
fstl
jns
sarb
sbb
cmp
add
fimull
inc
test
xlat
sub
lahf
in
cld
push
nop
mov
xchg
mov
mov
push
jne
jae
int3
inc
and
ljmp
into
sbb
inc
mov
lock
out
mov
push
pusha
add
mov
popf
scas
movsl
mov
fisubrs
sbb
aam
mov
adc
xchg
and
sahf
pop
insb
rcll
xchg
insl
adc
ss
add
mov
movsb
cmp
sub
filds
jnp
jle
loope
or
mov
sbbb
cli
gs
aas
into
out
ret
mov
or
jno
dec
and
cmp
and
loope
out
push
jae
pop
xor
jmp
push
in
popf
mov
add
icebp
roll
mov
ljmp
and
fsubrs
pop
push
push
push
jmp
fistpll
pop
jp
arpl
xor
mov
push
inc
fnstsw
sub
adc
clc
mov
pushf
movl
aam
bound
cmp
push
pop
jmp
adc
popf
ret
shrb
stc
lds
rorb
in
cld
push
cli
movsl
sub
in
sti
dec
pop
repz
pop
sti
lret
or
dec
cmp
dec
mov
mov
cmp
scas
cmp
pop
add
negb
push
or
inc
push
popf
popa
mov
sbb
push
push
xchg
mov
sub
add
ret
shll
outsb
sbb
xor
outsb
mov
xor
test
fs
xlat
mov
fsubrs
lds
inc
xchg
test
fidivs
jge
xchg
mov
into
sub
push
ljmp
xchg
gs
daa
dec
pop
insb
enter
pusha
mov
push
loop
cmp
pusha
mov
idiv
xor
xchg
cli
nop
out
cmp
mov
les
push
push
aaa
push
mov
iret
dec
inc
dec
fisttpll
sbb
dec
daa
sbb
jbe
mov
cmp
sahf
xor
xor
xor
ljmp
jne
push
cs
clc
int3
hlt
roll
sub
or
add
mov
adc
mov
dec
pusha
adc
pop
ror
inc
loop
push
inc
xorl
ret
xchg
pop
dec
jbe
mov
fiaddl
mov
sub
aas
ret
sbbl
or
push
scas
in
sti
fwait
xchg
incl
xor
insl
lods
pusha
out
inc
cmp
xchg
std
cli
jg
dec
mov
mov
jmp
jbe
setl
sub
sub
ret
push
scas
or
imul
insl
xchg
outsb
add
mov
jmp
inc
xlat
mov
cmp
inc
in
es
push
jbe
inc
push
dec
fistps
mov
dec
jo
xchg
or
lock
fadds
ficoml
loope
push
lods
mov
pop
add
je
and
cmp
jns
daa
pop
cmpl
negb
push
outsl
out
jg
dec
rorl
les
dec
mov
push
addr16
xor
cltd
movsl
jle
imul
mov
xor
mov
test
dec
divb
jnp
js
mov
leave
pop
addr16
mov
add
outsl
lcall
stos
lock
dec
mov
imul
divl
mov
jns
shr
es
sub
stc
outsl
ret
mov
or
mov
jg
cltd
jg
mov
mov
stc
xor
popl
mov
xor
adc
jmp
or
fisttps
stos
push
inc
rol
jno
cmp
jb
or
jge
ds
mov
fnstcw
push
sbb
adc
or
aad
ror
data16
call
push
iret
gs
sub
aas
sahf
into
and
js
pop
je
mov
imul
arpl
out
sub
dec
in
mov
gs
shrb
mov
jge
pextrw
push
pusha
ficompl
mov
into
push
jecxz
mov
xchg
mov
cmp
test
push
roll
data16
gs
rolb
movsl
daa
stos
in
je
xor
xchg
xchg
or
scas
jne
or
cltd
ds
cli
push
mov
push
xor
lret
mov
jne
xchg
mov
mov
jbe
popf
pand
xor
mov
push
enter
arpl
mov
stos
in
or
fnstcw
ficoms
sbb
ja
aaa
inc
sbb
popa
pop
mov
push
jg
add
inc
xchg
orl
push
inc
sub
push
dec
or
inc
cmp
and
xchg
dec
ret
sub
mov
push
and
mov
and
fbld
fimuls
sbb
sub
iret
and
dec
cmpsb
rolb
pop
jno
cmp
jno
inc
mov
bound
movsl
adc
sti
jecxz
nop
popa
insb
pop
cs
repz
push
xchg
push
fcmovnbe
cmc
sbb
lret
imul
mov
push
test
mov
arpl
jo
cmpsb
sbb
les
lds
das
xchg
sub
fistps
xor
es
outsl
js
push
call
push
inc
and
or
inc
push
sub
pop
imul
pop
sub
lds
adc
cltd
ljmp
inc
push
ret
add
fstps
in
int3
pop
jmp
mov
fisttpll
ret
scas
sub
vpshaw
jg
xchg
insb
mov
out
push
cli
sub
icebp
mov
mov
popa
insl
movsb
dec
and
or
or
aaa
les
inc
js
jp
rclb
or
sbb
shrb
pop
or
jp
in
popa
xor
dec
mov
fwait
and
and
out
mov
lcall
loope
or
int
js
test
push
pop
int3
aam
sub
jno
testb
lcall
outsb
lea
lds
and
das
mov
dec
stos
cld
add
fstps
or
into
js
add
pop
cmp
leave
je
aas
inc
and
jns
outsl
sbb
sbb
cwtl
cmp
mov
in
outsb
mov
xor
or
lret
dec
push
pmaddwd
mov
movsl
lods
push
shrb
das
scas
js
or
mov
ficomps
mov
int
iret
adc
or
mov
out
pop
or
add
xchg
jmp
xor
call
repnz
enter
ficoms
dec
pushl
adc
jbe
push
out
mov
lds
cld
pop
jo
xchg
lret
pop
les
daa
jle
jb
daa
sub
shl
mov
dec
sub
xchg
stos
es
mov
push
es
sub
inc
jns
or
aaa
fistpll
testl
fdivs
pop
mov
mov
lahf
mov
pop
xor
fbstp
mov
lock
inc
adc
pop
out
ror
mov
cmp
sets
dec
into
inc
jno
xor
mull
psubsb
push
push
out
jno
push
mov
test
mov
fdivr
pusha
push
jmp
out
cmp
lret
xor
add
fwait
xor
popaw
dec
mov
pop
and
push
xor
and
xchg
and
add
cmp
sti
xchg
mov
ret
dec
sbb
stos
out
lds
nop
push
sub
mov
ss
orb
sub
decl
dec
dec
push
jnp
mov
out
mov
xchg
clc
cwtl
movb
and
repnz
xchg
fisttps
mov
cmp
jge
xchg
jmp
imul
in
add
mov
cmc
lods
scas
shrl
mov
sbb
mov
pop
sub
pop
insl
jne
aas
jle
imul
jl
fsin
pop
ja
loopne
sub
test
adc
and
ja
mov
mov
add
inc
inc
pusha
lret
push
flds
fdivrs
inc
adc
nop
test
jmp
repnz
jecxz
mov
jmp
ss
aam
pop
sbb
ja
mov
mov
dec
push
notb
in
push
push
mov
adc
mov
movsl
xor
gs
ret
nop
das
sub
mov
out
push
and
insb
push
test
filds
xor
loop
je
inc
xchg
jle
or
into
mov
pop
sbb
in
mov
scas
pop
or
push
cmp
pop
fiaddl
stos
fistpl
dec
mov
push
jle
in
add
lahf
add
fnstenv
sbb
jp
adc
mov
and
mov
call
jl
test
rcrb
in
bnd
fcomps
cmp
aad
popf
enter
sbb
pop
ljmp
lods
cmpsl
jo
test
test
dec
jne
addl
cld
or
inc
imul
outsb
imul
jb
lcall
pusha
cmpsl
mov
adc
pcmpgtb
and
jnp
ja
addb
cs
push
and
repz
pop
stos
fisubs
mov
les
out
inc
jmp
aad
sub
lret
sbb
sbb
add
rclb
mov
xchg
mov
rcrb
adc
cmp
inc
clc
cltd
testb
nop
pop
push
push
mov
xlat
pop
pop
cmpsl
lret
lahf
leave
pop
or
xchg
sub
enter
sub
or
push
inc
lahf
add
je
pop
mov
pop
add
cmp
imul
imul
push
scas
scas
and
push
in
ljmp
push
aas
xchg
sub
mov
push
pop
ficoms
js
andl
sbb
mov
pop
aad
ret
jns
outsb
negb
push
imul
fstps
xchg
add
add
or
jno
jno
fldenv
mov
adc
jmp
mov
int
sti
jnp
adc
mov
dec
aad
or
scas
jnp
fiadds
push
stos
adc
das
shll
dec
jnp
inc
and
movsb
inc
or
loop
fs
sbb
ds
inc
cmpsb
popf
lcall
lahf
mov
pop
aam
sti
inc
jne
lds
popf
pop
icebp
out
je
es
cmp
jno
addr16
and
stc
inc
rcll
and
fs
gs
hlt
jmp
out
loope
movsb
pop
xor
shrl
loopne
sbb
pop
loop
pop
xchg
jmp
leave
aam
jnp
xchg
lock
fbstp
add
pop
cmp
loope
stos
adc
aam
stos
mov
xchg
js
inc
and
je
adc
and
mov
outsl
scas
in
xchg
sbb
jno
aas
in
sub
decl
stos
daa
cltd
cwtl
jg
das
outsl
or
inc
adc
mov
sub
in
ss
cmc
rol
and
xchg
andb
scas
into
pop
add
sbb
mov
add
lods
loope
sbb
add
leave
xchg
push
add
mov
in
push
ds
jl
push
test
push
or
mov
enter
add
push
pop
stc
out
mov
sub
or
mov
mov
cmp
sahf
test
aam
dec
mov
sub
sti
xorl
jb
push
xchg
cmpsl
push
cltd
js
sub
ss
shl
iret
xchg
sub
push
xchg
pop
push
fimull
ret
jnp
je
testb
mov
sub
shrl
xchg
fistpl
adc
dec
sub
out
fdiv
sbb
mov
test
pushl
arpl
push
fstl
incb
lcall
jmp
adc
and
rcrb
jno
jg
aas
in
mov
idivb
aam
mov
andl
repnz
daa
xor
and
jne
mov
out
mov
negl
and
rolb
hlt
cld
ficompl
lahf
push
jl
jp
inc
xlat
pop
mov
mov
inc
lcall
aas
pop
mov
push
mov
mov
jns
mov
nop
pop
push
stos
dec
add
dec
inc
ljmp
cs
es
pop
rcl
aam
xchg
inc
sub
adc
faddl
push
jnp
mov
inc
lcall
push
lea
mulb
shlb
pop
shll
stc
jle
xor
cld
push
adc
jbe
jns
mov
arpl
sub
sub
xchg
es
or
cli
mov
adc
int3
mov
inc
sub
cld
ret
outsl
repnz
icebp
test
fs
fucomip
ror
xchg
inc
adc
and
or
mov
jge
and
ss
xlat
and
mov
insb
movsb
ds
in
dec
mov
aam
xchg
dec
dec
push
mov
orl
test
icebp
out
aad
sahf
sub
pop
push
sti
and
add
mov
notl
xchg
ja
push
mov
or
ficomps
ficoml
je
xchg
mov
adc
mov
xor
and
iret
xor
sub
lods
dec
test
cli
jo
imul
inc
cmp
jb
fxch
jmp
sbb
adc
xchg
sahf
in
xchg
insl
lahf
and
xchg
fcom
fld
and
xor
push
icebp
and
mov
clc
push
or
in
inc
push
mov
mov
into
pop
pop
arpl
mov
les
insl
jp
fdivs
and
mov
jnp
mov
jge
sbb
add
std
movsl
pop
jmp
and
sub
and
call
fwait
out
cld
jo
sub
push
adc
cmc
ss
add
fcompl
sub
iret
jno
jnp
sarb
loopne
xchg
push
and
cmp
inc
sub
ret
cltd
stos
iret
or
out
push
leave
adc
inc
out
bnd
xlat
inc
push
scas
pop
clc
loopne
push
cli
test
push
js
jnp
lods
sbb
int
lods
inc
sbb
mov
jge
sahf
paddsb
sbb
xor
add
dec
pop
decb
xchg
stos
dec
data16
fstpt
fcomps
shrl
sbb
push
xor
les
test
iret
cmp
push
xor
xchg
scas
push
pop
ret
dec
and
push
cmp
inc
es
dec
xchg
dec
mov
test
xchg
stc
out
adc
cwtl
ret
xchg
or
pop
add
fldt
mov
sahf
scas
test
push
sbbl
pop
cmp
jae
mov
push
push
dec
aam
bound
jg
push
rcr
or
inc
rcrb
hlt
cmp
or
xchg
mov
push
jnp
mov
adc
les
shl
out
add
arpl
movsl
jae
dec
jmp
in
pop
les
dec
cli
pop
jp
jno
lcall
or
inc
or
loop
mov
mov
push
movb
insb
add
cli
mov
sti
out
fcmovne
imul
pusha
in
pop
add
pusha
inc
inc
cvtps2pd
loop
lcall
push
mov
sub
jg
add
push
lcall
cmp
add
lods
jmp
push
mov
mov
pop
push
stc
jnp
into
mov
je
sbb
jg
or
push
jns
and
js
stos
inc
enter
insl
inc
add
push
mov
mov
popf
inc
jo
loopne
int3
fsubl
aas
pop
arpl
sbb
out
mov
in
mov
jno
push
rcr
xor
add
pop
mov
add
xor
gs
ljmp
sub
sub
push
mov
testb
add
loopne
std
pusha
rcrb
pop
jb
fildll
mov
ja
push
sub
dec
sahf
jbe
andl
popa
lods
mov
mov
lock
mov
pop
jne
pop
jle
mov
xchg
imul
outsl
jbe
test
testb
jnp
nop
mov
push
jl
in
xorl
dec
aam
repz
test
js
out
cld
out
rorb
lahf
lods
imul
xlat
push
or
or
addr16
jns
or
push
into
jno
add
mov
ret
adc
mov
push
dec
cmp
lods
push
jae
fs
or
push
cli
cmpsb
cmp
mov
stc
and
mov
push
or
adc
lock
pushf
out
mov
jno
inc
adc
insb
cmc
jb
mov
xlat
out
and
mov
adc
cs
push
lret
mov
add
push
sbb
xchg
mov
jg
insb
lds
push
test
mov
stc
mov
jp
jp
add
mov
rclb
jb
mov
cmpsl
fstpl
subb
mov
add
xor
inc
add
mov
mov
and
sarb
mov
into
cmp
sbb
fldt
cli
mov
insl
sbb
out
and
jnp
sub
jp
xchg
xchg
loope
xor
fiadds
sbb
cmp
sub
fdivrs
sub
jne
repnz
lahf
xor
fcmovu
cwtl
pusha
inc
add
pop
ljmp
or
pop
mov
popf
fcmovu
pop
in
jecxz
hlt
js
sbb
sbb
scas
mov
cmc
stc
nop
int
cltd
cmp
mov
scas
adc
stos
pusha
xlat
mov
adc
addl
ret
fstps
sbb
mov
stc
cmpsl
clc
xchg
nop
adc
dec
ljmp
or
leave
cld
pusha
inc
enter
and
mov
loope
jp
shll
inc
sti
add
shll
push
jl
sti
test
jae
fsubrl
jge
push
stos
dec
test
xchg
add
push
jecxz
out
mov
cwtl
std
int3
xchg
jle
or
dec
cs
cmp
push
ret
stos
fnsave
jnp
inc
lret
sub
pop
mov
js
xchg
xchg
cli
mov
sbb
imulb
cmpsb
es
push
mov
pop
leave
inc
nop
pop
and
dec
push
mov
loop
cs
shlb
or
pop
mov
dec
stc
and
xor
dec
imul
pop
arpl
stos
idivl
movsl
shl
push
xchg
inc
roll
addl
cmp
and
jp
ret
add
scas
pop
mov
pop
push
add
jp
or
bound
inc
sahf
sahf
filds
pushf
in
rolb
mov
sbbb
outsb
pop
dec
add
fadds
push
cmp
int
test
aaa
out
insb
aaa
dec
adc
inc
mov
jle
out
cmc
pop
sbb
jge
sub
jae
xchg
or
or
mov
pop
testb
mov
pop
repz
test
adc
mov
and
xor
fistpl
pusha
fistl
cmp
push
popa
loope
sub
lcall
out
cmp
call
jae
xchg
fdivr
add
push
popa
lea
ficoml
mov
mov
or
mov
and
mov
add
ja
cmp
pop
mov
cmc
xchg
js
fiaddl
into
mov
jg
jb
jo
ss
lcall
mov
stos
js
cmp
fs
mov
das
sbb
adc
shlb
add
paddb
cwtl
push
je
jae
add
xor
test
pop
jne
into
pop
add
push
and
sbb
xchg
add
lods
mull
fcom
sarb
imulb
adc
push
cmp
xlat
pop
sub
pushl
cmpl
cli
xor
ja
les
js
and
outsb
xor
pop
mov
outsb
imul
scas
mov
pop
push
add
pop
pop
xor
aas
sbb
out
push
dec
cmp
mov
jnp
jge
js
mov
pop
jb
xchg
es
jno
jecxz
ret
fidivrl
mov
hlt
inc
icebp
insb
rcr
jle
lods
push
jg
cld
xor
sti
jne
dec
mov
in
lret
mov
lret
pop
ja
lods
hlt
imul
fs
cmp
add
lods
dec
push
pop
sahf
jbe
sbb
adc
in
arpl
inc
lds
divl
les
pop
xchg
push
dec
ret
data16
xchg
fwait
add
lods
dec
test
or
sbb
loopne
mov
jecxz
out
and
icebp
sbb
shrl
pop
les
xchg
dec
push
mov
cltd
inc
jno
xor
mov
imul
int
sbb
mov
ljmp
mov
cmp
lret
adc
cmp
loopne
sbb
add
pop
dec
cld
repz
stos
icebp
loop
xchg
in
xchg
test
scas
xchg
sub
adc
sub
dec
xchg
push
aas
sarl
xor
test
call
and
loope
sub
sbb
xor
jl
out
sti
dec
das
xchg
xor
xor
cwtl
sub
mov
scas
dec
adc
and
sub
and
repnz
outsb
in
mov
jno
vmulpd
sub
push
xlat
lock
test
mov
imul
rol
repz
pop
and
cmp
cmp
dec
ret
pop
xlat
xchg
sahf
xchg
pusha
cwtl
jnp
out
mov
mov
mov
mov
insb
xchg
sub
add
pop
data16
cmp
dec
xor
mov
stos
push
addr16
and
fidivrs
mov
push
push
in
lods
adcl
repz
xor
iret
or
imul
jne
push
pop
pop
shll
test
fs
arpl
ja
mov
push
inc
push
mov
cmp
mov
inc
sub
fbld
push
jb
mov
lcall
pop
mov
pop
jno
sub
scas
idivb
pop
jae
test
adc
cmp
test
out
popf
aaa
daa
xchg
dec
push
add
xchg
mov
adc
loop
movb
xlat
stos
lret
std
pop
push
test
xor
enter
int3
xor
add
cli
mov
or
lods
imul
sahf
das
push
insl
ljmpw
rcrb
mov
push
iret
pop
fwait
insl
and
aam
pop
and
xchg
mov
shlb
clc
mov
lret
jl
push
ljmp
pop
movsl
loop
sbb
mov
jp
sbb
dec
pop
mov
test
inc
jne
add
add
in
jg
or
adc
adc
in
hlt
inc
push
cltd
jb
shlb
shll
add
xor
aaa
fistl
sub
fdivrs
jge
popa
xchg
adc
add
adc
sbb
aad
lods
gs
out
icebp
or
push
lfs
push
sub
dec
jb,pn
std
int
mov
jae
mov
nop
mov
rcrl
movsb
ss
lcall
mov
or
pop
xchg
jp
test
cmp
push
xor
cltd
xor
jb
inc
lahf
xchg
stc
jecxz
fidivrs
xchg
mov
jne
inc
mov
gs
test
dec
rcrl
iret
dec
lahf
cli
jnp
sbb
xchg
mov
mov
nop
mov
jge
inc
add
in
mov
jmp
rorb
faddl
mov
jle
sub
mov
hlt
or
ljmp
pusha
lahf
enter
push
sbb
ret
mov
repnz
push
sbb
push
inc
xchg
call
mov
ds
inc
dec
aas
test
mov
fmul
repnz
adc
loopne
sbb
jae
test
push
lock
jle
xchg
jne
sub
sbb
jecxz
fldl
rclb
or
aaa
inc
mov
test
pop
dec
and
sti
data16
bound
das
test
leave
and
das
mov
loope
inc
mov
dec
scas
aaa
pushf
repnz
cmp
xlat
dec
or
mov
cmp
lahf
inc
lea
in
cmp
pop
mov
cs
repnz
lds
mov
lds
mov
filds
sub
sbb
rolb
mov
or
mov
mov
in
das
popa
fs
dec
mov
jl
adc
and
or
inc
pusha
js
repz
mov
cmpsl
jmp
rolb
cmp
and
cmc
pop
pop
and
or
jo
mov
repz
xor
into
mov
fs
adcl
xchg
and
inc
mov
push
test
dec
xor
xchg
jg
pop
out
scas
xor
orb
push
orb
rorb
inc
add
scas
or
mov
stos
iret
cwtl
add
push
outsl
filds
fisttpl
add
add
movsl
push
dec
and
movsl
mov
in
jne
rdtsc
lret
and
xchg
or
add
es
daa
scas
cmp
mov
or
stos
fcomps
aam
fs
jmp
int3
test
clc
ljmp
dec
aas
cmpsb
inc
mov
loop
jns
mov
in
mov
insb
jl,pn
or
jo
fcmovbe
xchg
dec
mov
jbe
mov
push
shll
cmp
sbb
insl
jae
jp
ds
push
push
push
mov
push
dec
cmp
cmp
gs
mov
push
mov
fmull
fldl
cmpsb
les
jns
adc
sub
loope
jmp
addl
test
inc
xchg
mov
sub
jae
arpl
sub
imul
adcl
roll
add
inc
mov
in
imul
std
in
mov
scas
sub
mov
sbb
sbb
xor
enter
std
sbb
pop
pushf
mov
repnz
mov
lret
jo
jmp
ds
dec
push
lock
inc
mov
fildl
cmp
fsubrs
nop
cmpsb
loop
mov
mul
jo
mov
mov
pushf
xchg
dec
mov
sub
rcrb
in
hlt
mov
test
xchg
jb
or
popf
xor
in
xor
mov
cmp
add
mov
cmpsl
or
sbb
incb
and
je
adc
jnp
sbb
aas
pop
inc
add
dec
sbb
jnp
daa
sti
insl
jo
jl
pop
mov
jns
mov
xchg
add
push
not
xchg
das
adc
cmp
xor
and
inc
and
aaa
ds
jecxz
cmp
adc
or
shrl
nop
push
push
or
and
bound
fadds
inc
lret
dec
sbb
pusha
jp
pop
cld
xchg
sub
mov
push
inc
cs
sbb
mov
movsl
pop
out
call
hlt
or
adc
push
jle
pop
cmp
inc
xor
scas
call
jp
push
add
xchg
lcall
rolb
bound
pop
pusha
stos
cmpsl
xchg
fisubrs
mov
inc
mov
mov
mov
jecxz
rcrl
push
out
test
cltd
cmp
data16
outsb
sahf
xchg
addr16
jnp
pusha
andl
js
lds
test
fcoms
mov
jecxz
or
lea
dec
jl
adcl
mov
repz
jae
and
or
pop
add
xchg
xchg
mov
sbb
cmp
in
xor
clc
push
cmp
cmp
mov
and
adc
in
mov
xlat
shl
sub
popa
test
cmpsl
mov
pushf
cmp
in
subl
loope
fsubl
dec
cmp
fwait
hlt
or
or
outsl
pusha
scas
pop
mov
fsubrl
add
mov
lds
adc
out
xchg
inc
lcall
cmp
mov
fidivrs
cwtl
xor
jb
dec
sti
aad
inc
pusha
fistl
xchg
ret
mov
inc
xchg
jnp
and
xlat
data16
push
lods
mov
mov
mov
xor
rorl
xchg
sub
mov
dec
aas
cmp
mov
mov
push
insb
xchg
mov
fimuls
xchg
mov
or
fisubrl
mov
add
pop
lret
pop
les
jge
mov
and
add
into
test
mov
and
outsl
je
insb
push
xor
xchg
hlt
test
repz
sub
or
mov
xchg
cmc
icebp
js
pushf
mov
ds
cli
loope
fwait
mov
pop
dec
add
pop
sub
out
ficoml
mov
lods
movsb
xor
jnp
xor
fistpll
pop
mov
jecxz
mov
notl
in
roll
xor
xor
maskmovq
testl
pusha
and
mov
pop
fs
xor
cmpl
push
loope
or
sbb
mov
bound
xor
data16
pop
cmp
ss
cmpb
mov
les
dec
fdivrl
out
lret
mov
std
dec
leave
adcb
mov
sub
lahf
out
fs
inc
fsubs
mov
js
xor
dec
jno
push
sbb
fs
mov
add
dec
xor
fmull
sahf
push
lcall
int
mov
add
je
aam
push
lret
cmp
xchg
jae
jne
clc
sbb
test
ja
aam
sbb
xor
jo
dec
pop
inc
xchg
push
shll
sti
pop
enter
pop
scas
dec
js
lret
lea
movsb
in
xchg
ja
test
inc
push
or
pop
popf
and
mov
mov
cmp
mov
lock
push
pushf
and
into
lods
sbb
xchg
testl
addr16
xchg
sbb
stc
xor
adc
mov
lods
call
out
enter
lods
subb
mov
jb
std
mov
bound
xor
stos
jae
lret
cmc
out
mov
push
scas
iret
sbb
in
test
pop
fcomi
outsl
lea
test
cld
add
push
pop
stos
popl
out
adc
lods
adc
adc
push
shrl
dec
mov
addb
push
stc
loopne
adc
cwtl
sbb
push
stos
mov
leave
xchg
out
aaa
inc
or
lret
cld
or
clc
mov
mov
mov
and
jmp
or
hlt
xor
je
xchg
xchg
push
and
pusha
ret
mov
xlat
sbb
mov
mov
movsl
aam
lods
push
inc
push
pop
push
xchg
push
pop
sub
mov
mov
nop
adc
pop
sbb
aaa
jbe
push
movlps
andb
dec
stos
jne
lea
mov
xchg
shll
int
dec
repz
lahf
push
xchg
jge
adc
aaa
mov
pop
xlat
je
testb
adc
inc
fildll
loope
aaa
push
lret
pop
mov
les
outsl
call
sbb
cmp
pop
repz
aaa
sbb
cwtl
jmp
dec
cmpsb
sbb
aam
lds
jne
sub
stos
sbb
sub
subl
ss
jp
rolb
dec
adc
sahf
aam
xchg
cmpsl
adc
jp
std
jecxz
out
mov
dec
or
xchg
shll
mov
aaa
mov
das
dec
jecxz
or
and
add
mul
outsb
test
rorl
jg
enter
pop
int3
inc
xor
dec
pop
pop
xchg
es
push
std
lcall
decb
jb
dec
inc
ret
mov
add
xchg
ljmp
lahf
mov
lahf
mov
jb
negl
sbb
popf
inc
mov
insl
or
push
fldt
lret
lds
imul
jae
xchg
pop
fs
jbe
js
xor
repz
add
xchg
scas
pop
mull
mov
push
jae
fstps
ljmp
stc
cli
aas
sub
shll
aam
imul
mov
arpl
mov
dec
jmp
int3
pop
adc
iret
pop
ss
iret
fiadds
xor
fs
fwait
out
xlat
xchg
mov
ret
lods
jne
ja
mov
arpl
in
fs
fs
and
cmp
loopne
gs
leave
sahf
mov
addr16
pusha
add
cmp
ss
iret
sbb
mov
dec
dec
daa
mov
lret
dec
stos
xor
cmp
sub
lret
fisttpl
bound
sbb
and
mov
push
mov
shlb
mov
sti
aas
jp
insl
mov
push
adc
cmp
adc
xchg
xchg
call
push
lret
movsl
cmp
insb
sti
jmp
jb
rorb
iret
sub
mov
aaa
inc
pop
test
sbb
arpl
das
mov
int3
or
add
cmpsl
nop
jge
ret
add
es
test
icebp
stc
test
clc
lret
sarb
lods
outsl
popf
sbb
add
dec
dec
aas
popa
icebp
add
mov
sbb
fs
lock
xchg
sub
cltd
mov
out
sub
out
push
push
inc
imul
inc
jbe
xor
stos
jo
xor
cwtl
inc
jg
icebp
xchg
lock
jne
jle
negl
repz
jbe
pop
jno
jae
xor
cmc
bound
mov
pop
mov
mov
out
dec
shr
push
popa
mov
lds
fs
stos
rorb
push
in
lcall
dec
cld
dec
shlb
cld
push
shlb
add
add
hlt
xchg
sar
mov
es
stos
out
pop
test
and
mov
rclb
mov
push
imul
loop
in
inc
xlat
mov
in
ljmp
mov
push
pop
adc
jge
ss
add
cmp
inc
push
push
pop
in
or
pop
cmp
push
jl
idivb
cwtl
xor
inc
icebp
pop
push
adc
lods
dec
test
iret
int
repnz
arpl
adc
loopne
std
ror
nop
inc
pop
aad
xlat
ds
jle
push
sbb
std
or
stos
pop
ret
test
pop
and
jl
push
sahf
xchg
add
ss
sub
mov
cwtl
adc
clc
lea
mov
mov
cmp
sbb
fsubs
add
mov
pop
sbb
push
cmpsl
xor
push
and
loopne
xor
out
in
add
mov
cwtl
aaa
and
dec
fwait
inc
out
xchg
mov
add
fmul
imul
sbb
sahf
cld
sarb
movsl
es
add
mov
sbb
subb
and
and
test
sbb
leave
sbb
addl
cmp
clc
mov
out
cmp
inc
enter
sbb
popa
insb
stos
mov
les
ss
sub
mov
pop
jmp
or
lahf
push
cli
or
pop
mov
and
mov
addl
aad
psubd
mov
push
cmp
adc
shlb
in
pop
jg
rolb
mov
fdivs
or
mov
jo
iret
lds
ret
pop
add
fsub
cltd
out
daa
add
mov
cmpsb
or
shr
movsl
std
jne
movsl
aaa
push
popf
fcmovnbe
jbe
jg
ljmp
fdivrs
out
dec
pop
sbb
push
cmp
loope
lret
sub
imul
pop
cmp
xlat
adc
mov
or
shrb
mov
sahf
dec
xchg
nop
push
and
inc
lds
jb
loop
mov
int
mov
int
pusha
dec
mov
and
stos
lcall
movsl
inc
pop
daa
or
mov
enter
mov
mov
add
mov
fdivr
cmpsb
mov
std
aaa
mov
cmp
cwtl
jle
ja
push
decb
cli
cli
movsl
pop
xchg
fstpt
dec
add
sbb
mov
inc
test
ficomps
in
test
mov
jp
pop
ss
les
nop
jno
in
push
fadds
jb
mov
leave
inc
insl
and
xchg
adc
jns
add
shlb
fwait
mov
movsb
pop
orb
scas
add
out
into
add
xbegin
outsl
vaddsubpd
cltd
fistpll
xchg
sub
lea
jnp
fsubrs
rorb
das
cwtl
dec
mov
mov
and
push
push
enter
push
pop
in
mov
add
jge
mov
sbb
rcrb
cmpsl
out
cmp
inc
xchg
test
xchg
pop
pop
pusha
sti
and
inc
pop
ds
jle
jbe
pop
pop
js
cmpsl
inc
add
call
adc
and
iret
stos
and
int
lock
clc
cmpb
lea
lea
push
ret
mov
std
and
cmpsb
mov
call
pop
lahf
and
lea
dec
xchg
outsb
stos
sub
cmpb
pop
and
notl
add
mov
sti
mov
mov
insl
pusha
je
inc
ror
imul
sbb
mov
pop
test
pop
fists
stos
mov
fwait
and
bound
flds
mov
rolb
ret
sti
or
stos
enter
test
cmp
lea
les
lods
shl
mov
xchg
and
int3
jb
repnz
adc
cld
aam
sbb
or
add
sbb
xlat
nop
popl
xor
out
xor
xor
jo
shrb
push
dec
sub
sbbl
sbb
or
sarl
shll
or
jnp
xchg
scas
push
push
jl
lea
push
daa
pop
les
hlt
repz
mov
lcall
negb
or
xchg
add
jnp
adc
xchg
mov
fsubl
mov
xchg
rcrb
in
push
arpl
adc
ret
jg
jg
fldcw
dec
ja
outsl
sub
into
pop
and
lods
imul
aas
jl
pop
pop
pop
push
inc
ds
les
push
sbb
dec
push
imul
sahf
xchg
sbb
mov
arpl
sbb
shrl
xor
push
jno
fiaddl
lea
lods
mov
push
lret
dec
test
xor
mov
xchg
pop
aad
xchg
test
lods
cmp
add
jge
ds
hlt
lea
sbb
sbb
push
xor
addr16
insl
cmc
mov
test
mov
loop
dec
jo
and
or
mov
jmp
push
mov
nop
nop
pop
mov
add
loop
addr16
dec
xlat
or
sbb
jmp
or
add
nop
rolb
enter
ljmp
adc
dec
sahf
pand
sub
sbb
hlt
leave
scas
mov
mov
dec
ds
and
and
and
mov
push
push
and
mov
lret
or
push
nop
dec
cmp
lcall
add
sbb
push
stos
cmp
lock
add
xchg
jno
insl
fcmovu
enter
sbb
xchg
stc
movl
rorb
dec
mov
xchg
push
jge
sarl
push
push
rorl
cmpsl
xlat
dec
jo
dec
add
inc
cmpsl
xchg
push
loop
test
push
mov
mov
iret
add
xchg
xorl
insb
sbb
mull
jecxz
lds
mov
mov
lret
in
add
cmp
pushf
repnz
scas
ret
jb
add
sbb
js
cmp
outsl
mov
xchg
inc
leave
mov
rclb
popa
sbb
lds
shr
pop
cmpsb
notl
sarl
xor
int
push
jns
fnsave
push
add
mov
shl
outsl
mov
adc
jl
or
mov
cmpsb
pusha
add
std
jecxz
cmpb
lret
mov
inc
mov
cmp
scas
in
jmp
add
inc
stos
push
inc
aaa
js
inc
jo
push
add
or
lcall
fisubrs
rep
lods
mov
das
dec
ljmp
in
push
in
rclb
fcompl
inc
mov
mov
in
cs
hlt
push
fidivrl
adc
aaa
adc
roll
adc
loopne
mov
ja
push
pop
jo
dec
in
mov
pop
pop
adc
xor
mov
outsb
xor
pop
or
cwtl
inc
jbe
dec
data16
fidivl
out
mov
mov
push
insb
dec
lock
mov
pushf
lods
movsb
in
push
test
jl
fs
mov
mov
mov
cli
lods
push
add
xchg
stos
ret
pop
adc
or
mov
mov
das
jg
sub
inc
movsl
int
adc
jmp
xlat
in
xchg
and
es
jl
test
mov
mov
mov
sbb
test
and
dec
scas
cmp
scas
rcrb
ffree
or
pop
ret
ret
xchg
movsb
sub
data16
push
cmp
loope
enter
sub
mov
mov
push
jo
mov
in
fcomps
mov
mov
xor
mov
mov
jnp
add
sub
mov
imulb
inc
cmp
cld
ss
or
scas
push
mov
stos
mov
arpl
add
fwait
sub
inc
pop
jns
mov
lock
test
mov
dec
ret
shrb
aam
push
jns
scas
xchg
loope
sbb
inc
xor
mov
inc
or
inc
sahf
repnz
fcomps
in
inc
imul
pop
test
push
loope
stos
mov
push
int3
test
shlb
jl,pt
hlt
jne
js,pt
jle
lock
inc
aad
or
jae
or
loope
add
add
or
push
push
jbe
test
jbe
push
loop
imul
inc
repnz
rol
mov
arpl
add
aad
scas
enter
enter
xchg
aam
xchg
adc
enter
movsb
sbb
jne
jmp
subl
inc
mov
pop
andb
imul
sar
mov
fsubp
loop
push
inc
pop
add
mov
dec
mov
mov
das
loope
inc
add
rcr
aam
shll
insl
sbb
and
xor
outsl
mov
cs
jecxz
mov
xlat
pusha
loopne
pop
sbb
add
cmp
pushf
sahf
add
cmp
pop
out
dec
jbe
stos
stos
jp
cmp
lods
push
sub
mov
jl
fs
rcrl
orb
sub
push
std
shll
mov
clc
jnp
frstor
sbb
or
and
insb
mov
xor
std
or
fldcw
call
lock
out
int3
jl
xor
fmuls
mov
xor
inc
ret
cmc
add
adc
fisubrs
sbb
mov
add
lock
movsb
ret
cwtl
insb
cmp
lea
jbe
mov
and
adc
pop
call
mov
add
and
test
decl
lock
test
nop
lcall
sbb
pop
mov
rorb
inc
les
aaa
mov
add
sahf
pop
pop
mov
out
stc
and
and
shrl
ds
dec
mull
incl
inc
xor
fwait
xchg
imull
mov
sahf
daa
out
sbb
push
and
notl
sbb
push
mov
std
mov
decb
xchg
je
movsb
adc
mov
xchg
push
sbb
lods
hlt
sub
adc
ljmp
and
xor
push
xor
cli
enter
jmp
int3
aaa
add
mov
xchg
aad
ss
jae
stos
cs
mov
enter
stos
in
push
xchg
jns
neg
addl
lcall
fsubrl
popa
mov
jmp
push
jg
imul
es
test
ret
add
icebp
push
sahf
xor
mov
pop
lods
lock
dec
cmp
mov
daa
jb
jp
push
xor
lret
add
sub
sbb
mov
jne
cwtl
jmp
lret
cmp
cld
mov
jg
in
test
roll
scas
push
mov
mov
mov
xor
xor
xchg
inc
icebp
cmp
fcoms
jne
cmp
movnti
imul
aad
jns
jo
push
xor
ljmp
or
mov
xor
lods
inc
pop
lcall
adc
bound
pop
test
lods
subb
stos
lret
inc
dec
xchg
leave
rol
jns
shr
add
jb
and
xor
es
jbe
movsb
sub
pop
aaa
outsb
mov
pop
js
xchg
sub
pop
cli
iret
jbe
adc
fimull
lret
xor
dec
push
stc
int
les
sahf
push
fcmovu
insb
in
stos
sahf
data16
sbb
gs
shll
cmpsl
stos
loope
jno
movsb
jge
and
negl
mov
pop
sub
mov
das
push
das
cwtl
xorb
push
mov
cmp
jno
mov
add
inc
aam
add
hlt
sub
sahf
inc
fwait
cmp
cmp
adc
lahf
inc
fwait
shrb
mov
jp
push
mov
push
push
dec
mov
pop
mov
and
insb
inc
pop
fwait
push
inc
leave
aam
pop
xor
mov
push
jmp
js
jge
push
add
aaa
inc
sbb
pop
add
mov
mov
aad
fcomi
xchg
imull
sub
cmpsl
mov
add
sbb
mov
jnp
lock
lret
into
xchg
pop
xchg
test
mov
and
sub
call
ret
leave
xlat
add
and
pop
cmp
jg
pop
je
mov
movsl
imul
push
leave
or
cmp
adc
addl
fdivs
inc
jl
iret
push
mov
gs
mov
inc
fldenv
test
or
out
jmp
xor
test
pop
xchg
call
xchg
xchg
mov
push
push
in
xchg
and
cmp
test
lcall
jns
mov
jno
sub
movsb
jle
aad
adc
adc
testb
fcmovne
mov
movsl
adc
xor
icebp
or
ret
addr16
scas
mov
adc
jo
je
sub
das
xlat
lret
cmp
sbbl
xor
mov
adc
lret
cmpsb
daa
aas
aam
sarl
fdivr
mov
loop
mov
sub
mov
incb
xor
or
enter
aad
repnz
xchg
push
hlt
inc
mov
decl
rcr
movsb
fists
xchg
jp
daa
imul
jle
xor
xor
out
mov
jp
ffreep
adc
mov
or
leave
bound
hlt
mov
int3
sar
orl
sti
repz
das
cwtl
add
pop
lahf
mov
sub
lods
or
leave
cmp
fcomps
jmp
jo
iret
or
mov
rclb
vrcpss
cwtl
mulb
add
dec
pop
add
popa
jno
inc
jg,pt
aaa
inc
lock
push
adc
cli
mov
or
shrb
call
je
fbstp
push
jl
pop
pushf
push
lret
inc
jns
jns
mov
and
add
pop
imul
int
jg
dec
mov
cmp
mov
push
mov
stos
mov
add
xorb
ret
sarb
imul
add
sbb
lea
jmp
sbb
sbb
popf
hlt
sbb
pop
adc
sti
imul
jbe
in
jge,pt
testb
out
adc
icebp
pop
sbb
enter
sbb
sub
inc
insl
add
flds
xor
dec
add
jne
ret
push
insl
loopne
lock
xlat
cmc
arpl
inc
leave
es
add
mov
insb
dec
pop
pop
jns
aad
add
fwait
xlat
popf
fldl
cmc
jp
jae
push
sbb
sbb
xchg
mov
add
mov
adc
insb
es
mov
nop
or
cs
cld
xchg
pop
test
dec
xor
inc
enter
pop
pop
mov
js
or
nop
lea
xchg
jbe
inc
add
jno
cmp
stos
fs
mov
gs
xor
push
sahf
loopne
idiv
stc
sbb
xchg
decb
insb
je
inc
pop
add
mov
pop
dec
cld
fwait
repnz
xchg
inc
hlt
aaa
xchg
add
loope
push
xchg
adc
ljmp
call
pop
cmp
out
mov
cmc
enter
lock
out
and
dec
push
in
sahf
jecxz
inc
das
andl
test
xchg
push
jb
pusha
xchg
jo
xor
dec
mov
lahf
rorl
icebp
imul
fwait
clc
xor
ljmp
rcrb
sub
jnp
ret
icebp
test
test
inc
testb
lahf
rcrl
das
cltd
or
jp
xchg
sbb
out
and
mov
add
lock
jb
fisttpl
pop
enter
sahf
sub
push
and
sbb
mov
movsl
stos
je
pop
adc
in
daa
imul
cmpb
add
popa
adc
mov
data16
dec
dec
loop
sarl
push
or
loopne
lods
jp
incl
xchg
inc
ficoms
or
into
add
lcall
jno
mov
int
mov
pop
dec
imul
mov
dec
addr16
into
or
jb
and
popf
jne
cmp
jno
repnz
mov
idivl
js
fbstp
sarb
mov
cmpsl
xchg
pop
and
pop
or
aad
hlt
cmp
fs
fcomi
clc
test
imul
xchg
dec
sub
ja
add
loope
fildll
dec
jbe
movsb
repnz
jns
dec
cltd
mov
sub
fs
fcompl
mov
push
xchg
dec
adc
pop
repnz
ss
cmp
popa
stos
js
cmovb
daa
adc
fisttps
adc
pop
mov
inc
push
lret
push
push
jno
xchg
fistps
imul
in
rclb
cmp
ljmp
mov
arpl
dec
mov
cwtl
adc
xchg
ja
in
jb
sti
inc
or
ja
mov
add
mov
add
insb
adc
mov
mov
mov
fidivl
pusha
xchg
int
cmp
push
push
push
or
cmp
ja
call
cmp
stos
sbb
sarl
cmp
fisubl
sub
inc
shrl
fstp
fmul
sbbl
aam
dec
mov
insl
out
and
pop
adc
fiadds
pop
cwtl
sbb
dec
push
std
shlb
add
fildll
sbb
ds
xor
repnz
rorb
push
rorb
xor
xor
pop
sub
cmpsl
int
inc
mov
outsb
adcb
xorb
adc
sub
adc
clc
das
lret
popf
test
jb
cmp
and
push
sub
repnz
mov
pop
iret
fisttps
jge
xchg
mov
mov
fistpll
push
mov
imul
cmpsl
lods
rorl
push
aad
loopne
nop
sub
mov
into
mov
out
icebp
fisttpll
mov
aas
push
sub
leave
jne
mov
mov
add
leave
jp
lret
dec
insb
mov
stos
add
das
mov
in
or
fidivs
roll
jmp
data16
add
stc
outsb
test
add
je
test
push
push
lods
sbb
push
ljmp
lds
shlb
insb
or
cmp
xchg
cwtl
shr
stos
cmp
xor
bound
fs
lods
aam
test
stos
nop
rclb
xchg
mov
add
xchg
adc
push
iret
stc
adc
dec
pop
xchg
mov
es
xchg
bound
adc
daa
fbstp
dec
add
js
lods
adc
ret
rolb
dec
pop
mov
jnp
sti
gs
aam
xchg
pop
and
pop
aam
js
mov
fstp
leave
xlat
dec
icebp
nop
js
jle
addr16
std
out
pop
or
in
clc
xchg
push
xchg
pusha
mov
xor
gs
aam
loop
sbb
cmp
jb
and
jbe
xor
xchg
push
pop
mov
mov
insl
jae
xchg
fsubr
adc
ret
cmp
jno
sub
in
hlt
aam
xchg
dec
mov
pop
dec
mov
sbb
aas
mov
xor
sub
mov
sbb
pop
xchg
ljmp
xchg
jge
pop
cmpsb
cwtl
inc
jns
jge
ss
inc
or
repz
pusha
xchg
lcall
and
rcll
stos
stos
iret
jmp
adc
stos
fistpl
hlt
adc
or
in
xchg
adc
adc
adc
stos
sbb
jecxz
out
fldl
les
mov
push
mov
rorb
aas
sub
and
iret
cwtl
repz
outsl
adc
in
and
mov
daa
jbe
aad
aad
mov
dec
std
daa
adc
sti
mulb
inc
popf
lcall
add
mov
sub
and
lret
in
hlt
iret
bound
rclb
xlat
xchg
jl
sahf
jns
stos
into
bound
cli
cmp
mov
or
fcoml
rclb
xor
mov
pop
idivb
and
add
femms
fldl
sub
sub
xchg
fstpl
dec
mov
ret
mov
fidivrs
loop
jae
cmp
cmp
adc
push
mov
cmp
mov
das
push
mov
cmpsl
rcr
pop
cmp
add
adc
int
lahf
pop
cli
pop
adc
sub
mov
sub
push
mov
xor
pop
mov
jns
sbb
in
cltd
jle
out
jl
pop
cwtl
adcb
sti
ljmp
das
cmpsb
dec
xchg
ja
fdiv
sub
sahf
nop
cmp
in
pop
mov
jne
sub
daa
pop
subl
and
in
insb
push
ret
aas
xchg
repz
repnz
out
mov
and
das
xchg
pop
dec
enter
lcall
fdivrs
rorb
pop
mov
fsubs
adc
fisttpl
mov
adc
out
test
hlt
jb
das
out
push
cmp
and
sbb
pop
aad
xchg
lret
mov
mov
enter
cmc
fwait
pop
movsl
xor
or
xchg
loope
xor
lds
mov
into
andl
arpl
sbbl
push
or
xor
mov
out
pop
push
bound
xor
sti
and
test
xchg
fsubl
mov
pop
bound
push
push
test
add
jmp
sbb
and
jg
mov
push
push
test
ja
mov
xchg
repnz
inc
xchg
std
or
sub
pusha
and
cmp
jne
in
push
or
mov
cmp
cli
mov
lcall
cmovnp
sub
fsin
ss
arpl
lret
and
hlt
fcomps
xchg
lret
pushf
xor
cmpsl
popa
adc
notb
out
xor
adc
xorb
push
cmp
pop
jo
mov
push
mov
pop
jo
popa
push
sarl
add
insb
imul
xor
lea
js
daa
lods
cmp
stos
bsf
mov
sub
arpl
iret
repnz
xchg
sarl
or
lods
mov
mov
cmpsl
negb
je
mov
xor
cmp
pusha
adc
lock
jmp
jne
xor
inc
out
aad
pop
xor
push
mov
xchg
adc
popf
jae
mov
dec
xor
lahf
sbb
fildll
sub
xchg
outsl
fwait
mov
loop
xchg
dec
movsb
adc
inc
stos
push
jo
inc
sahf
xchg
cmp
or
ret
aam
fwait
lds
int3
add
insl
cmp
subb
add
sub
mov
fldcw
cmpl
pop
popf
and
mov
sbb
rclb
cmp
jecxz
in
les
je
xor
call
mov
sub
nop
xchg
pop
clc
cmpsb
jl
dec
mull
hlt
rcll
cmpsb
sbb
stos
adc
imul
push
stc
adc
jnp
aad
sub
mov
mov
gs
inc
mov
and
lea
jp
fisttpl
arpl
sbb
ficoml
andl
sub
aad
xor
in
pop
push
out
das
cmc
inc
adc
dec
shlb
clc
or
ss
mov
jg
push
sub
mov
aam
les
loope
popa
adc
test
push
loop
sti
lods
sub
dec
call
hlt
and
add
or
push
inc
in
sbb
pop
or
mov
stos
push
jne
sub
adc
xor
lock
outsl
lret
ret
pop
sbb
mov
adc
dec
insl
xchg
pop
adc
std
lods
in
jg
push
cmpsl
lret
add
cmp
cmp
push
sub
addb
sbb
js
js
sub
push
jl
arpl
and
pop
cs
cmc
lret
or
mov
pop
aas
jo
mov
lcall
pop
movsb
push
cmp
xchg
ss
inc
cmp
add
push
mov
je
enter
aam
or
adc
js
xor
add
mov
iret
imull
lock
scas
xchg
dec
test
shrl
ret
into
sub
lods
mov
jbe
mov
inc
cmpsb
or
ficoms
out
jbe
sub
scas
outsl
pop
cmpsb
inc
mov
mov
and
rclb
dec
or
sub
push
mov
aas
lock
pop
xlat
adc
jp
xor
addl
ds
jae
xlat
push
mov
lret
jbe
push
push
sub
in
and
push
inc
cmp
xor
mov
xchg
addr16
xchg
loope
push
aas
xor
lods
mov
ss
mov
mov
decb
jb
jmp
lahf
in
add
mov
adc
loop
xchg
and
push
cmp
aaa
dec
push
ja
xor
sub
xchg
cmp
pushf
jnp
fmuls
cwtl
in
sti
or
jmp
icebp
cli
mov
cmpsl
mov
ficomps
imul
lcall
imul
adc
rcll
cmp
cmp
mov
pop
xchg
lea
push
pop
pop
pop
leave
stc
mov
in
ror
cld
aam
jle
and
mov
sbb
stos
xchg
mov
mov
int3
push
adc
mov
scas
movsb
adc
dec
gs
cmpsb
in
pushf
es
popl
xor
cmpsb
jb
ret
mov
cmc
xor
push
outsb
pusha
xorb
into
push
mov
jg
cs
std
inc
fisubrs
mov
ja
cmp
sub
icebp
fs
in
shll
lahf
sti
cs
ret
push
es
sbb
inc
imul
xchg
sbb
fcmovnbe
xchg
mov
subl
adc
jg
mov
dec
in
mov
mov
pop
mov
mov
jae
push
fimull
enter
mov
dec
mov
or
pminsw
sti
loop
mov
outsb
or
pushw
dec
jmp
insl
inc
inc
mov
or
test
rcr
mov
mov
movsb
es
cmp
pushl
popf
in
mov
or
aas
adc
jmp
jp
pusha
add
mov
pop
push
jo
imul
or
cmp
imul
pop
std
mov
pop
pop
dec
pop
inc
ret
sbb
cmpb
push
xlat
add
mov
adc
andl
lds
dec
xchg
add
outsl
pop
pop
sahf
mov
push
std
negl
sbb
and
dec
scas
bound
push
frstor
shll
jne
xorb
inc
iret
adc
sbb
in
into
fbstp
stos
cld
into
rcl
imul
pop
cmp
inc
push
inc
and
pushf
xchg
adc
mov
ret
dec
adc
movsl
ljmp
pop
mov
and
loop
sbb
fisttpll
jne
push
clc
mov
mov
cli
rclb
push
pop
cmpsl
stos
movsl
test
mov
pop
ja
sub
push
in
icebp
xchg
iret
adc
push
pop
jne
sti
stos
push
inc
in
ret
adc
rcrl
jns
sbb
das
pop
imul
stc
mov
sahf
pop
inc
push
cmp
dec
push
lahf
dec
ljmp
mov
push
imul
gs
xchg
mov
mov
push
jno
lcall
xchg
into
lahf
std
sbb
lods
fnstsw
mov
stos
inc
add
jnp
jp
xchg
das
adc
out
push
inc
cmp
cmp
jge
in
mov
or
repnz
mov
loope
ss
add
mov
aad
int
push
andb
mov
aad
cmp
cmc
xchg
cmc
xchg
dec
xor
fdivrl
rcl
imul
bound
push
xchg
add
stos
push
andl
or
mov
std
popf
xlat
mov
jmp
cli
out
dec
mov
sub
adc
mov
lods
fnstenv
mov
ljmp
sbbl
add
cs
mov
dec
inc
add
sub
lcall
leave
stc
leave
mov
adc
popa
dec
adc
jno
sbbl
std
fisttps
lret
jecxz
xor
aaa
jge
call
cmp
cs
xor
and
fdivr
mov
pop
shr
into
pop
jecxz
mov
dec
mov
mov
shll
xchg
stos
ja
xor
adc
pushf
mov
lcall
lcall
mov
pop
pop
ds
push
sarl
movsl
mov
inc
mov
sahf
or
shrb
aad
js
mov
push
xor
movsl
jecxz
fdivs
cld
mov
mov
jnp
xchg
data16
fst
mov
mov
xor
out
movsb
bound
push
sbb
call
and
or
xchg
iret
inc
and
dec
or
inc
mov
daa
enter
cmp
push
scas
cmp
adc
loope
adc
ss
xor
mov
je
sarl
addr16
inc
inc
scas
test
ret
std
adc
pop
mov
dec
xchg
dec
lcall
ret
mov
sti
or
jmp
sbb
mov
xor
dec
jno
in
outsl
add
xchg
cli
insb
out
out
inc
xchg
cmpsl
add
in
jne
ret
sti
xchg
adc
mov
addr16
mov
and
sub
push
stos
adc
lcall
mov
imul
dec
cli
movsb
cmpl
popa
mov
and
or
fsubrs
sarl
jmp
xchg
shr
xchg
popf
loopne
out
lea
push
xor
je
dec
out
fwait
mov
std
sbb
sbb
dec
shlb
xchg
test
add
aad
cmpsb
cwtl
outsl
pop
popl
lret
fidivs
cmp
outsb
jecxz
push
xor
std
mov
push
pusha
ljmp
lret
mov
jge
test
hlt
xchg
out
negb
sbb
adc
fistpl
lods
mov
mov
and
fmul
cmpsb
or
fcoml
xor
arpl
mov
andb
jbe
mov
test
push
jo
pop
mov
lock
adc
mov
pop
enter
sbb
and
xor
mov
or
in
add
adc
lret
cwtl
scas
cmp
mov
xor
cs
sbb
pop
xchg
sbb
ss
inc
add
lret
push
adc
lods
stos
repz
inc
xor
dec
and
cmp
sbbl
cmpsb
call
or
sbb
pushf
in
out
les
inc
out
sarb
inc
inc
mov
adc
push
cmp
push
shll
add
xor
lret
insl
inc
mov
insl
mov
mov
lcall
ret
or
call
mov
sarl
out
popa
loop
rclb
int3
fstl
pushf
dec
push
popf
pop
sub
dec
jb
xor
mov
das
add
jo
icebp
sbb
push
xor
lods
jo
mov
out
popf
test
dec
mov
cld
scas
or
pusha
stc
mov
arpl
pop
sub
pop
sbb
fidivrs
fstl
cs
outsl
sti
pusha
and
or
hlt
popa
adc
ds
pop
xlat
add
testb
sbb
sbb
lcall
xchg
mov
scas
xor
jmp
std
out
adc
jge
fs
popa
xorb
sbb
jae
rol
ret
leave
sbb
mov
mov
jno
cmp
mov
dec
push
pop
inc
leave
dec
sbb
push
js
insl
pop
cltd
pop
lock
xor
movb
test
sahf
fwait
jge
test
fimuls
test
mov
cld
loop
mov
jecxz
in
fcomip
scas
es
xchg
xchg
fstps
mov
lods
and
icebp
das
mov
pop
sti
shrl
push
add
pop
xchg
ljmp
sbb
mov
leave
sbb
push
adc
nop
icebp
cltd
sub
inc
cwtl
test
insb
pusha
and
cmpsl
cmp
stos
in
inc
in
jle
call
notl
out
add
dec
imul
outsb
iret
adc
xchg
movsl
int
push
pop
out
dec
inc
add
or
add
int3
sub
fsubrp
pop
cwtl
js
nop
repnz
lret
xlat
notb
sbb
popa
jns
sub
pusha
cmc
and
addr16
or
jge
sbbb
mov
je
lcall
push
aad
outsl
icebp
jnp
lods
sub
es
stos
sbb
xor
dec
fadds
mov
adc
push
subl
pop
and
jmp
shlb
stos
repnz
sub
adc
jo
and
insl
fisttpll
dec
or
sar
das
in
pusha
call
xor
xlat
mov
inc
cld
es
mov
push
lret
mulb
mov
aas
mov
add
mov
mov
adc
int
adc
xchg
xor
cmp
jle
jge
cmp
adc
cli
cmc
mov
out
sub
jecxz
mov
push
ja
dec
fdivl
into
jnp
cltd
pop
mov
sar
cmp
sbb
add
add
loop
int3
mov
inc
test
mov
sub
outsb
stos
test
adc
cmpsb
push
imul
in
in
jbe
rolb
push
aam
sahf
dec
jo
mov
daa
subb
adc
mov
xor
gs
inc
sbb
mov
lock
inc
sbb
mov
cmpsl
push
jae
cmpsl
cs
adc
in
push
out
sbb
mov
or
out
xchg
xor
jb
pop
mov
out
add
fdivp
pop
pop
mov
pushf
pop
mov
sbb
jbe
out
mov
into
icebp
inc
leave
fisttpll
pop
add
shrl
pop
jne
insl
call
andb
repz
push
jo
adc
jae
rorl
out
mov
add
aam
mov
jmp
mov
adc
push
push
cmpsl
addr16
hlt
xchg
xor
cli
imul
add
idivb
sbb
shrb
adc
push
and
jno
adc
push
adc
cltd
xor
leave
adc
push
cmpsl
repnz
fwait
jg
mov
arpl
cld
mov
inc
aaa
xchg
cmp
movsl
outsb
js
mov
add
inc
sub
push
pushf
cmp
cmc
push
inc
pushf
push
xchg
adc
popa
fdivs
out
sub
loop
cmp
push
mov
mov
ja
xor
xor
push
test
adc
mov
jl
test
or
lret
fs
and
mov
filds
jge
rorl
out
dec
mov
lret
lahf
fwait
enter
cwtl
push
push
add
scas
cmp
cmp
sub
enter
scas
dec
rcl
icebp
xor
pushf
inc
dec
cmp
rorl
mov
les
imul
jge
dec
adcb
repnz
sub
enter
cmpsb
fldcw
jns
pop
adcl
mov
push
std
dec
push
inc
mov
or
pop
in
cwtl
ds
cmpb
andb
jp
pop
pop
lock
lock
mov
sbb
pop
cld
xchg
cld
add
loope
jnp
test
dec
cltd
mov
in
add
pshufw
xor
add
ss
les
push
imulb
imul
lods
icebp
in
mov
push
mov
sbb
out
ja
push
scas
mov
scas
pusha
sub
inc
nop
scas
xor
jl
lcall
je
dec
mov
lods
es
sbb
test
mov
xchg
shl
mov
dec
insb
aas
out
jge
aas
shl
mov
js
cltd
mov
xchg
cmp
in
repnz
sub
hlt
imul
sbb
dec
rolb
jle
sarb
mov
lods
mov
test
sbb
add
cs
stc
xchg
sahf
pushf
jb
sarl
push
stos
ds
inc
add
or
fsts
xchg
lods
les
jge
roll
sti
addb
dec
push
push
sub
lret
cmp
pop
xor
and
into
aas
dec
imul
push
cmp
push
mov
mov
pop
into
push
push
into
cmpb
mov
imul
testb
inc
xchg
pop
mov
mov
and
test
outsl
cmpl
loope
daa
jne
ljmp
das
push
lods
mov
fadd
push
mov
push
push
inc
imul
add
mov
movsl
sbb
outsl
inc
mov
jbe
movsl
stos
and
cmp
mov
mov
adc
sbb
adc
in
subl
scas
pop
mov
pop
out
aad
xor
push
xchg
fadd
in
dec
cmpsl
je
int3
mov
inc
jnp
dec
sub
mov
cmp
xlat
push
ljmp
mov
aad
mov
dec
dec
push
lods
push
sub
jnp
cs
sbb
in
or
test
aas
test
cmpb
sahf
lods
jle
push
dec
pop
scas
mov
and
mov
rorb
mov
inc
push
sahf
mov
add
bound
and
add
pushf
cmc
xchg
xor
lahf
cmp
dec
pop
stos
lods
push
popa
mov
std
lock
sahf
mov
aad
rol
ljmp
adc
cmpsb
shrl
pusha
ds
aaa
arpl
movsl
pop
test
cmpsl
aas
insl
dec
pop
cmp
pushf
lock
lahf
jb
lods
pop
cld
aad
cwtl
mov
xchg
xchg
xchg
adc
aam
sub
and
hlt
jo
cmp
and
out
in
dec
inc
push
mov
cld
mov
push
stos
daa
or
jl
jo
mov
lahf
add
stos
adc
dec
sbb
rclb
xchg
jmp
mov
inc
jle
andl
push
outsb
imul
repnz
push
mov
rcrl
inc
cmp
or
cmp
call
add
mov
xchg
rorb
insb
xor
mov
cmpsb
call
add
cmp
addr16
test
ss
sub
cmp
sbb
xor
sub
ret
pop
daa
cmp
fstl
cmp
jnp
popa
sbb
enter
ret
cwtl
and
jbe
into
gs
push
mov
in
lds
sub
outsl
insb
cld
mov
mov
sti
inc
mov
cld
faddl
and
pop
pop
mov
mov
pop
mov
int3
imul
xchg
xor
jae
pushf
stc
test
jg
mov
and
pop
jle
sub
in
test
jns
jno
push
push
sbb
inc
cmp
add
pop
push
out
jecxz
sub
inc
jmp
xchg
shll
and
bnd
das
sti
add
mov
add
cli
subl
pop
stos
fwait
bound
and
xor
sbb
adc
shll
pop
add
pop
lahf
movsb
leave
add
xchg
popf
loope
jl
loope
push
fidivs
gs
imul
inc
mov
mov
cltd
nop
lret
xchg
cli
xor
push
adc
mov
jne
pop
xchg
pop
jo
cmp
out
jno
mov
mov
pop
mov
pop
mov
pop
cmp
cmp
push
je
je
sub
inc
pop
lahf
cmp
push
push
lcall
fidivrl
add
sbb
fdivr
fs
pop
cmc
sbb
jg
popf
xchg
scas
rcrl
pop
popa
imul
ja
addr16
push
inc
add
loopne
repz
jg
adc
cmp
sti
and
push
aas
xchg
int
daa
cli
ja
insb
xchg
fsubrp
mov
ja
push
sub
add
cmp
lret
cmpsb
cmp
mov
in
xchg
adc
out
out
push
orl
testl
mov
aas
inc
xchg
inc
pop
cmp
cwtl
mov
jbe
mov
xor
push
and
jle
xlat
aas
loope
mov
add
mov
sbb
js
inc
cld
outsl
push
cs
shrl
movb
popa
movsb
sarb
std
xchg
jecxz
mov
hlt
cmpsb
jg
xchg
shrl
ljmp
cmpsl
lahf
pusha
mov
mov
and
adc
aad
loope
jne
pop
flds
dec
inc
fnstenv
icebp
mov
mov
popf
sarl
data16
mov
out
xchg
xor
cmpsl
push
xor
jae
sbb
pop
jp
jmp
aas
xchg
push
test
inc
stc
sarb
xchg
ja
jecxz
or
push
repz
in
push
and
enter
pop
or
jns
gs
movsl
sub
push
ficomps
test
cwtl
xor
das
sub
jo
mov
jge
ret
cmc
push
and
jle
ljmp
jb
cli
sub
dec
push
push
movsl
outsb
ljmp
mov
scas
out
xor
cmp
jp
clts
or
jo
cld
leave
xor
cmp
test
mov
push
stc
imul
pop
pop
inc
xchg
pop
sbb
les
je
sbb
call
pop
mov
cmc
adc
dec
inc
add
jg
sbb
add
pop
jbe
shrd
xor
and
aam
pop
ficomps
mov
fucomip
mov
shl
stos
hlt
jbe
rorl
scas
or
das
push
rcrl
fidivrs
pop
js
fwait
push
adc
jecxz
into
adc
or
fldl
and
cmp
and
leave
mov
cmpsb
lahf
nop
and
xchg
cmp
stos
addr16
sbb
and
jb
aas
jmp
daa
orb
ja
add
jecxz
lret
popf
jnp
or
push
sbb
mov
and
fdiv
dec
loope
scas
sub
xlat
out
mov
sbb
dec
inc
and
and
or
xlat
mov
push
mov
jb
xchg
push
and
cmp
les
cmp
dec
xchg
repz
bnd
push
mov
test
push
aaa
in
add
mov
lcall
inc
test
inc
fcmovnbe
stc
stos
dec
or
dec
mov
add
lds
mov
or
and
out
fstpt
and
mov
es
xchg
scas
jg
leave
pcmpgtb
or
lock
sbb
loopne
push
ror
loope
xor
push
lods
dec
jmp
mov
aad
movsb
xor
jg
ljmp
and
inc
addr16
jg
fldcw
hlt
pusha
push
add
pop
dec
shll
or
pop
test
fmuls
sbb
or
rol
inc
xchg
cwtl
mov
cmp
iret
sbb
pop
add
cmpsl
cmp
shll
adc
mov
push
pop
sub
mov
mov
lahf
sbbb
pop
cmp
lods
fmul
sub
adc
rol
xchg
pop
push
insb
repnz
add
sbb
outsl
jae
jg
js
out
lret
or
sbb
dec
mov
or
loopne
out
add
pusha
inc
ret
mov
dec
rcrb
sub
movsb
mov
and
test
dec
push
or
fstp
push
add
in
ds
mov
mov
pop
in
push
pop
mov
sbb
inc
ds
sub
dec
in
jo
fadds
add
add
dec
jnp
insl
cmp
mov
adc
jl
jb
in
mov
pop
jne
fwait
sarl
and
sub
add
mov
add
cmp
push
xlat
push
cltd
gs
test
test
arpl
out
mov
xchg
adc
test
pop
movsb
popf
mov
pushf
push
ja
push
sub
repnz
fldenv
mov
nop
push
int
push
push
mov
jle
xchg
popf
enter
in
xchg
or
dec
mov
outsl
pushf
mov
push
pushf
push
outsl
ja
test
decb
mov
fildll
out
iret
mov
jg
popa
mov
lds
or
sbb
dec
sbb
mov
xchg
add
in
pop
mov
loop
cld
in
ss
adc
xchg
sub
ds
inc
rolb
jle
and
call
andb
push
jl
mov
xchg
mov
mov
push
fdiv
test
cmp
loopne
add
add
push
mov
pop
stos
jb
mov
and
xor
jne
sub
xchg
cld
push
xchg
adc
insl
mov
ret
jge
inc
insb
lahf
jo
sar
jae
add
in
mov
lcall
lods
lahf
sbb
fwait
or
mov
andb
xchg
xchg
cmpsb
push
test
sahf
cmp
and
cmp
add
jl
fwait
sti
mov
cmpsl
stos
inc
xor
and
xor
sub
dec
addr16
mov
mov
mov
pop
je
xor
insb
xchg
jp
les
pop
cmp
and
ret
fists
jns
mov
lods
int3
sbb
push
mov
std
sbb
dec
pop
lods
into
mov
push
clc
sbb
push
jle
sti
flds
mov
int3
std
pushl
jl
dec
or
and
xchg
xor
mov
adcb
mov
cmp
xchg
fmul
pop
xchg
daa
push
lcall
icebp
lea
leave
jmp
pop
and
mov
lds
inc
ret
test
push
aad
mov
jae
inc
and
jmp
in
jl
mov
cmp
jmp
and
pushf
xchg
and
int3
adc
xor
xchg
push
cwtl
dec
mov
and
imul
dec
and
jne
cmpl
mov
push
push
into
xor
sub
mov
xor
adc
push
int3
mov
sbb
xchg
or
das
popa
cwtl
pop
stos
inc
mov
sub
xchg
sub
pop
or
mov
or
push
mov
jb
into
and
jae
std
popf
hlt
or
add
and
inc
inc
cwtl
rcll
aad
push
add
sbb
hlt
dec
sub
xlat
in
sub
push
push
cmp
das
sub
jns
test
je,pn
cltd
into
data16
fstpl
fcmove
icebp
inc
xor
lahf
xlat
popf
xorb
or
bound
jae
inc
jmp
stos
cmp
dec
out
mov
jle
jle
lret
in
mov
pop
mov
mov
pop
jne
movsb
rcrl
push
adc
cmp
fsubl
mov
xor
adc
imul
subl
aaa
dec
popf
jb
repz
and
icebp
shlb
pop
mov
lret
cmp
push
in
mov
imul
xchg
add
cmp
out
ret
stc
cmc
inc
out
or
add
js
adc
sub
adc
out
daa
repz
jecxz
lds
roll
sbb
ljmp
leave
lahf
cmp
scas
mov
jb
push
xchg
pop
mov
popa
sbb
pushf
sub
or
in
inc
jb
cli
arpl
add
ljmp
dec
adc
lods
add
clc
or
enter
sub
in
imulb
sub
lock
xchg
push
pop
imul
adc
xchg
daa
cmp
aad
xchg
rcrl
leave
fs
xchg
ds
xchg
and
insb
enter
push
pop
rcrl
xchg
and
insl
gs
add
jbe
outsl
sbb
or
xor
sbb
dec
sub
out
xor
repz
fistpll
xor
dec
pop
jmp
jae
push
or
shll
mov
and
insb
lds
fsubrl
sti
sbb
pushl
sbb
xor
out
jp
pusha
stos
popa
in
xor
xor
fidivrs
iret
movsb
mov
cltd
mov
cs
rcr
stos
leave
out
xor
lahf
insb
push
pop
inc
xor
sub
ds
jl
pop
in
scas
shl
rcr
mov
cmp
and
scas
cli
ret
int
out
cmc
or
xlat
fcompl
pop
daa
sub
test
testl
out
cmp
jmp
ret
adc
movsl
inc
mov
dec
cmovle
add
shr
icebp
cmp
pop
sub
push
shlb
aam
arpl
jmp
out
jno
out
pop
bound
mov
jle
lock
fdivs
xchg
sbb
inc
lcall
mov
mov
or
mov
aaa
popf
pop
in
fs
xchg
lods
pusha
fcomp
jns
xchg
aam
aaa
inc
jmp
mov
sbb
xchg
xchg
dec
test
in
dec
mov
pushf
jge
pop
push
in
xor
mov
clc
pop
push
scas
mov
fdivrs
fnsave
add
addr16
lods
lds
push
test
int3
shr
sub
loopne
outsb
repz
xor
jle
and
sub
ljmp
mov
fildll
outsb
jg
or
ffree
xor
push
mov
lret
lahf
dec
sub
mov
xchg
repz
xor
cmpsb
add
adc
iret
fbstp
gs
jne
movsb
xchg
and
pop
cmp
sub
add
clc
sbb
out
xchg
pop
inc
inc
repnz
sub
lods
movsb
in
push
int
and
movsw
mov
outsl
xchg
mov
or
mov
mov
pop
lods
jns
ljmp
inc
dec
test
into
push
push
xchg
inc
fwait
pop
out
xor
inc
mov
xchg
push
sbb
cmp
fs
shl
scas
imul
lds
dec
js
stos
mov
add
pushf
test
test
jo
xor
jbe
pop
inc
leave
pop
je
push
inc
dec
and
out
or
xchg
dec
rcll
mov
cmp
iret
lcall
dec
stc
fs
or
clc
pop
sbb
push
inc
sub
pushf
jmp
or
into
mov
outsb
test
inc
stos
push
cmp
or
popf
mov
repz
and
and
mov
jb
jnp
aas
push
xchg
and
xor
cmpsl
sbb
in
and
std
shr
sarl
lds
loopne
mov
daa
add
pusha
jp,pt
int3
repz
xor
sahf
scas
lea
xor
fdivr
das
pop
inc
fistl
arpl
leave
outsb
arpl
imul
ja
mov
aas
jno
ret
sbb
adc
jo
jg
cs
setp
sbbb
out
push
mov
addb
fisubrs
gs
mov
lahf
sbb
pop
add
mov
mov
mov
push
ljmp
lods
push
pop
not
std
xchg
xchg
imul
mov
je
cmp
mov
shrb
imul
and
mov
imul
insl
pop
xchg
inc
inc
rcrl
dec
ret
push
outsb
sub
jo
fucomp
cmpsb
gs
stos
icebp
shrl
adc
xchg
cmpb
add
shlb
add
jne
adc
pop
push
test
xor
mov
add
fstpl
cmpsb
movsl
cmc
sbb
outsl
enter
data16
and
adc
dec
cmp
insb
push
scas
pop
mov
xchg
push
ret
and
or
test
and
stos
popa
inc
idiv
subb
fisubrl
ficomps
cmp
push
cmc
add
movsb
sbb
lods
fs
jle
stc
dec
outsl
ret
shll
jge
or
cld
push
rcrl
push
mov
push
xchg
dec
mov
adc
jl
iret
mov
mov
test
add
sbb
lcall
fiadds
loop
sbb
mov
and
pop
ja
xchg
adc
pop
mov
rorl
mov
addr16
mov
out
dec
stc
out
sbb
push
jp
jmp
fsub
jmp
add
dec
lahf
fs
mov
scas
out
and
sbb
rcrb
jbe
or
into
or
push
push
add
xor
jo
aam
inc
ss
mov
movsl
mov
and
sbb
inc
push
pop
dec
or
push
xchg
push
pop
adcb
dec
xchg
mov
outsb
stc
pop
cld
cmp
lahf
push
inc
std
pop
xchg
xlat
lods
je
pop
and
aad
push
rorb
push
push
jb
cmp
mov
xor
dec
fwait
outsl
xchg
rcr
lods
push
and
mov
push
call
mov
jecxz
adc
and
xor
adcb
imul
int3
lock
lock
xchg
enter
dec
mov
pop
xor
mov
in
sub
ret
adc
cmp
clc
js
adc
push
outsl
xor
jno
aas
push
push
aaa
lahf
pop
out
mov
mov
jg
scas
sti
add
shrb
mov
hlt
jbe
inc
push
into
xchg
mov
dec
loopne
out
push
sub
adc
nop
mov
push
mov
outsb
jecxz
fsubr
lds
xlat
mov
dec
movsl
lods
ret
sbb
ja
test
nop
ja
or
push
sbb
lock
jge
dec
mov
sarl
dec
mov
sti
out
idiv
mov
xchg
add
aaa
stos
jp
flds
leave
sub
sahf
jb
or
in
cltd
mov
push
ret
mov
loop
inc
push
jns
mov
or
jmp
dec
mov
jnp
scas
sub
call
add
cli
clc
int
xor
cmc
cwtl
rcrl
aam
leave
loope
add
pop
ficoml
loop
ret
popf
mov
cmp
ficoml
jp
mov
mov
add
push
mov
jge
add
jns
dec
adc
dec
or
add
dec
xchg
fistl
shrb
pop
xor
vpcmpeqw
out
scas
fildll
loopne
mov
fidivs
add
icebp
mov
nop
test
push
add
mov
fisubl
call
stos
adc
subb
daa
sahf
or
sbb
loopne
jge
daa
jb
dec
push
lcall
xor
dec
stos
jns
xor
xchg
mov
mov
daa
loope
cltd
test
mov
adc
fsubrl
pop
push
int3
mov
scas
sbb
sub
jl
jno
pop
decl
mov
int3
sahf
mov
jl
pushf
cmpsl
pusha
add
sub
lds
dec
xlat
cmc
or
dec
pop
inc
in
push
jb
popa
jle
ja
cmp
cli
test
add
jnp
inc
mov
mov
and
add
pop
inc
cmp
xor
cltd
adc
inc
sahf
jl
repz
adc
mov
pop
pushf
xchg
clc
add
jecxz
push
pop
mov
pop
and
sbb
fnop
xchg
repnz
sbb
mov
mov
xchg
testb
add
outsl
outsb
sahf
repz
xor
es
push
lods
push
or
test
jns
leave
cmpsb
pop
gs
and
idivl
movsl
imul
sub
cmpl
xchg
aam
fisttpl
jmp
ljmp
loope
or
and
xchg
inc
jae
or
push
ljmp
repnz
addr16
ja
in
or
mov
sub
lock
scas
ret
xchg
mov
test
shl
sahf
clc
into
icebp
jbe
shll
data16
frstor
jb
or
push
inc
adc
dec
punpckhwd
lods
insl
jg
sub
sub
je
sti
mov
push
jp
fists
call
fidivs
les
andb
push
dec
test
cmp
ljmp
jae
inc
iret
jnp
push
fisubrl
adc
pusha
mov
mov
push
cld
cwtl
add
fcoms
andb
sbb
repnz
mov
ret
or
insl
mov
sbb
aaa
mov
fucomp
jno
out
mov
fs
add
subb
imul
rcll
addr16
cli
scas
adc
mov
xchg
imul
lock
mov
dec
adc
in
pminsw
popa
imulb
out
fcompl
mov
push
sub
adc
or
ficoml
jbe
leave
xchg
loopne
add
cmp
jns
jbe
add
add
daa
out
push
mov
adc
xchg
push
mov
cmp
test
jae
jg
xor
or
sbb
jb
jno
jae
aam
or
jmp
xor
cli
sahf
mov
out
inc
mov
add
pop
cwtl
or
push
cmp
sub
subl
pop
add
mov
fstp
jae
cmp
push
dec
outsl
out
in
inc
lock
push
popa
pop
idivb
or
sub
stc
sub
dec
imul
add
push
mov
or
push
clc
add
and
inc
inc
mov
jbe
aaa
lret
fimuls
or
cmp
outsb
mov
bound
mov
or
mov
or
cmpsb
dec
or
xchg
push
insb
scas
out
lds
test
sub
xchg
in
jne
mov
fisubrl
in
pop
hlt
movsl
cmp
xor
cltd
mov
xchg
out
mov
push
rol
cmp
sbbl
xor
pop
notb
or
popa
mov
sbb
in
cmp
inc
loop
std
mov
outsb
inc
add
inc
mov
lahf
jo
mov
jo
jno
jne
adc
mov
lds
mov
mov
jno
outsl
andb
dec
ficoms
outsl
add
push
jnp
js
or
outsb
mov
in
dec
insb
inc
mov
bt
sub
sbb
push
mov
push
push
mov
repz
or
int3
loope
ss
rolb
mov
xchg
int
sub
in
push
insb
pop
lret
lock
xor
sti
out
mov
mov
mov
or
inc
inc
movsl
and
xchg
and
mov
and
loopne
cmpsl
fwait
aas
xor
mov
pop
test
mov
fwait
jle
pmulhw
jns
std
enter
leave
dec
ljmp
mov
aad
mov
push
inc
and
test
cwtl
pop
sar
mov
mov
mov
rolb
nop
lods
pop
sbb
or
cmp
inc
adc
sbb
adc
pop
mov
pusha
pop
or
and
cmp
cmp
or
shlb
adc
mov
int
push
dec
push
sub
mov
adc
daa
addr16
push
sbb
cmp
mov
rcrb
repnz
sub
pop
lods
jae
cmp
ret
and
mov
aaa
lret
pop
outsb
in
add
inc
push
dec
lea
pop
stos
aad
mov
lea
xor
inc
cmp
or
push
dec
insl
sti
jle
ljmp
add
aas
dec
fdivs
pop
subb
cmpsb
ss
outsb
mov
cwtl
xchg
mov
pop
movsl
add
jae
xchg
sub
sti
xorps
fistl
adc
pop
xchg
in
stos
hlt
orb
push
test
sbb
popf
faddl
iret
ret
testb
cmp
lcall
push
jb
fisubs
lret
push
lret
leave
in
mov
add
inc
nop
mov
movsb
push
xchg
aam
dec
push
add
and
out
or
and
int3
adcl
js
mov
push
popa
sub
shll
imul
out
out
fsubrp
imul
dec
loope
adc
scas
pop
jge
pushf
jae
push
or
shrl
testb
adc
push
aaa
xchg
xor
lret
lret
adc
sbb
mov
mov
rcl
push
pop
test
jae
clc
sti
and
push
mov
nop
jmp
stos
pop
outsl
sbb
jmp
jge
shlb
icebp
jmp
adc
data16
in
popa
cli
xchg
jbe
das
adc
sbb
inc
jb
bound
cmp
orl
shl
dec
pop
inc
icebp
in
sbb
popl
and
loopne
adc
imul
adc
lea
std
push
pusha
enter
jo
jp
cli
inc
sub
sbb
enter
xchg
mov
sti
jg
push
shlb
mov
pusha
cld
dec
arpl
inc
jp
or
pop
sbb
xchg
mov
push
adc
cmp
arpl
andb
and
inc
push
push
aad
aas
sbb
cmp
sbb
fmull
into
roll
stos
xchg
repz
aaa
push
stos
pusha
or
fs
and
mov
and
lods
jp
movsb
clc
dec
sti
in
sbb
ret
or
jne
cmp
pop
inc
dec
jnp
mov
mov
adcl
ljmp
loop
push
mov
jmp
inc
xlat
clc
jbe
jbe
pop
enter
shrb
push
icebp
cmp
jne
and
loope
dec
jno
addr16
loopne
sbb
mov
and
icebp
jg
jo
into
mov
and
xchg
outsl
ret
and
iret
test
outsl
jnp
jp
xchg
iret
xor
ret
test
fsubrs
mov
push
loopne
fcmovb
or
add
jnp
add
je
pop
imul
fwait
icebp
fdivl
lods
xor
cmpsb
and
adc
jg
cld
or
das
xor
lock
aad
mov
pop
cmp
jle
cmp
movsb
fiadds
mov
ja
fiadds
mov
jle
dec
out
cs
outsb
in
mov
cli
mov
xchg
fsts
fs
cli
mov
test
and
movb
jle
lock
lea
push
rorb
or
sub
popf
push
cmp
outsb
out
mov
mov
xor
push
cmp
and
add
push
leave
in
fcmovne
std
xchg
hlt
fnstenv
or
incl
pop
jl
xchg
xor
mov
jo
jp
call
data16
inc
xchg
movsl
scas
shlb
dec
lcall
xor
test
and
imul
ret
cli
sbb
test
cmp
lock
mov
pop
jecxz
fwait
sbb
test
push
sbb
push
rcll
push
jmp
insl
push
jp
xchg
pop
ss
mov
addr16
test
mov
dec
xorl
movsb
push
out
daa
push
je
lret
int3
imul
dec
xchg
dec
cmpsb
jl
in
call
add
cwtl
mov
xchg
lahf
sahf
xlat
cwtl
lahf
or
jne
fstpt
or
hlt
pop
pop
cwtl
or
ficoml
xlat
mov
sbb
cmp
adc
jl
cmp
sbbb
aas
in
daa
ficoml
jmp
dec
repnz
cld
adc
mov
mov
test
push
xor
adc
sar
shrb
cmc
fwait
and
sub
ss
iret
insb
or
cli
add
xchg
popf
inc
lds
mov
or
jno
cmc
cmp
inc
ficoms
sbb
xor
int
mov
xchg
cmp
jno
imul
sahf
cwtl
pop
inc
mov
mov
es
sub
iret
fdivr
xchg
ret
out
mov
popf
pop
push
in
push
xor
iret
shll
sub
pop
add
xchg
ljmp
mov
mov
das
push
cmp
push
adcl
fsub
sub
sub
adc
push
mov
je
push
leave
dec
imul
mov
jo
add
push
out
int3
js
jmp
jge
pop
sub
mov
xor
sub
mov
mov
imul
or
sbb
scas
fstp
fistps
xor
sub
add
pop
call
push
pop
dec
in
loop
cmp
xchg
and
or
pop
push
push
xor
aaa
in
xor
cwtl
dec
push
jl
push
pop
pop
mov
aad
in
inc
cmp
das
xlat
fcompl
in
enter
jns
xor
mov
ret
rcrl
mov
xchg
mov
gs
bound
cmp
sub
out
movsl
sbb
lahf
mov
in
jl
cmp
pop
and
cld
int
mov
jl
xchg
lods
outsb
lahf
or
jmp
lret
into
jno
adc
mov
rol
movl
std
mov
cmpsb
inc
movsb
sub
rep
in
ss
xchg
add
cs
sti
and
mov
add
pop
cmc
push
cmp
hlt
fdivr
mov
stos
pop
mov
pop
daa
in
dec
and
cmp
cli
andl
jb
insb
les
sub
push
lock
iret
nop
push
pushf
dec
mov
int
cld
idiv
xor
adc
rcrb
ljmp
outsb
fcomps
xchg
lret
or
test
pop
jg
xchg
stos
ljmp
enter
mov
js
jmp
adc
mov
or
aas
outsb
pop
push
cwtl
pop
mov
jg
mov
xchg
test
icebp
lcall
insb
in
test
sub
sti
push
ret
stos
mov
lods
lods
jne
push
jo
xor
xchg
mov
in
rclb
mov
pop
je
pop
and
cmp
adc
pop
stos
cwtl
lods
mov
cmpsb
sub
inc
dec
arpl
test
ss
mov
icebp
sub
xor
mov
inc
je
ljmp
lods
cmp
push
xorl
sub
jle
pop
sbb
add
cwtl
addb
or
cmp
dec
pop
sub
push
ret
jle
test
mov
ljmp
aas
fstps
and
ret
mov
fisubs
jp
xchg
add
les
pop
in
xacquire
dec
test
int3
js
inc
scas
mov
add
decl
inc
rcrb
loope
ljmp
mov
mov
mov
sub
jp
mov
inc
lods
xchg
dec
out
sub
or
inc
mov
dec
aad
mov
repnz
inc
xchg
dec
lods
xor
jle
jp
push
add
in
scas
fwait
or
adc
add
cltd
ret
fldcw
and
xor
fstp
mov
push
jns
test
ds
addb
xor
das
mov
inc
nop
mov
jp
mov
xor
jg
iret
movsb
in
cmpsl
arpl
jge
add
xchg
cwtl
pusha
shrl
sbb
shrb
xlat
js
xor
jp
push
leave
cmp
push
adc
pop
inc
inc
sub
mov
mov
stos
iret
push
inc
push
add
xchg
pop
pop
sub
test
or
fmuls
xchg
mov
or
xlat
mov
clc
sbb
loop
jno
inc
lock
sub
adc
sub
enter
fldcw
cwtl
aas
imull
inc
cmp
js
imul
ss
lea
rcrb
lcall
xchg
adc
push
cltd
or
fmull
push
jo
pop
ja,pn
jo
scas
or
jb
pop
orb
pop
aam
lahf
cmp
push
das
scas
hlt
icebp
js
lret
jne
scas
pop
outsl
ficoms
aaa
add
add
and
cmc
fldl
popf
mov
mov
xor
jo
and
dec
pop
aad
push
or
dec
cmp
dec
call
mov
lahf
rol
xor
or
xor
inc
push
mov
push
and
rcr
push
push
addl
in
lret
decl
and
aas
and
mov
xor
or
xchg
push
in
ss
mov
icebp
inc
or
add
jnp
cmp
les
inc
inc
push
jno
sysret
leave
mov
daa
or
and
mov
fwait
addr16
ljmp
ret
xor
rol
add
stc
and
cmp
stos
xor
cmp
mov
or
pushf
jno
cltd
mov
js
call
and
jecxz
inc
aas
es
mov
mov
stos
mov
push
jo
and
lods
mov
js
push
dec
mov
loopne
jae
cli
sar
into
nop
mov
test
add
fdivrp
cli
mov
adc
lods
pop
repz
gs
out
icebp
mov
repz
sub
add
int
test
jae
nop
xor
push
pop
std
ljmp
hlt
or
inc
xor
mov
and
add
arpl
or
out
mov
inc
and
jnp
pop
sti
repnz
fstps
mov
xchg
xchg
pop
mov
lea
xor
js
jle
ficompl
aam
out
dec
inc
test
icebp
dec
xchg
adc
add
cmp
adc
ret
mov
outsb
push
leave
jns
cwtl
jp
cmc
lock
inc
sub
cs
faddp
pop
ss
outsb
roll
dec
pushf
mov
sahf
addr16
xchg
repz
pop
jmp
stos
fsubrl
arpl
rcr
xlat
in
into
repnz
cmp
push
divb
addr16
mov
and
dec
mov
pushl
repnz
add
arpl
xor
mov
sbb
xchg
pop
add
or
nop
shlb
pop
push
mov
cmpxchg
mov
dec
clc
pop
testb
stc
sbb
pop
adc
or
jne
mov
pop
cmp
das
push
pop
sub
cs
stos
jecxz
int3
sahf
sbb
ret
iret
mov
jns
inc
fadd
jl
fadd
negb
sub
sub
xchg
sub
das
add
or
mov
clc
mov
fisubrs
cmp
cmpsb
cmpsl
repz
in
jmp
add
mov
xor
ror
xchg
insb
push
and
pop
dec
imul
repz
pop
add
in
push
dec
pop
xor
ss
mov
cmp
popa
xor
inc
cmpsl
push
pop
adc
pop
out
test
je
cmpl
aad
and
jecxz
xor
add
mov
fsubl
mov
lret
fs
jb
mov
xor
jecxz
fdivs
sbb
fidivs
xor
mov
mov
iret
push
jo
icebp
push
in
call
repnz
cmpb
jecxz
cmpsb
gs
fldenv
sbb
xlat
test
dec
movsb
aad
out
inc
sub
push
mov
mov
mov
xchg
aad
mov
add
in
ficompl
ss
cs
adc
cmp
sbb
and
fwait
jl
daa
daa
add
out
notl
push
pop
sbb
adc
pusha
jnp
ljmp
sbb
dec
or
das
push
pop
inc
out
movsl
add
shrb
call
pop
jecxz
data16
in
adc
push
and
or
push
push
aad
fistpl
cmc
inc
sub
cmp
push
lret
xor
dec
loop
mov
repz
add
cmp
lea
add
fcomp
aam
loop
divl
outsb
ret
pusha
pushf
aam
adc
or
mov
push
inc
stos
jae
push
addr16
mov
int3
fidivrs
sub
cs
jle
outsb
lods
xchg
cltd
add
test
lcall
or
cld
test
ffreep
frstor
cli
jo
sub
and
add
mov
mov
fwait
call
push
inc
pop
push
cmp
push
jecxz
aaa
and
sub
test
ret
lods
es
popa
or
inc
or
xchg
dec
or
sub
loop
iret
mov
addr16
pop
nop
or
mov
pop
jl
dec
jae
xchg
push
in
rorb
xchg
fbld
ss
and
xchg
sbb
ret
add
scas
inc
mov
push
in
or
jbe
xchg
sub
sarb
in
bound
add
mov
jg
mov
faddp
add
cmpl
push
ret
je
loop
out
test
adc
pop
in
stc
fbld
push
insl
mov
hlt
dec
push
push
inc
loope
leave
push
bnd
jge
lea
inc
or
fstenv
add
pop
into
pop
or
and
dec
cmp
jp
movsl
push
push
outsl
cwtl
pop
rol
and
inc
fmuls
stos
insl
insb
or
ret
test
pushf
sub
popa
sti
mov
pop
int
inc
ret
lds
sahf
div
cli
push
outsb
mov
daa
ret
lret
mov
into
mov
fnstcw
sub
push
push
and
aad
idivl
mov
pop
inc
mov
xchg
je
add
inc
mov
adc
shll
mov
push
rep
xchg
loopne
pop
xchg
cmp
sub
xchg
lea
repnz
jg
mov
inc
jae
lahf
xor
stos
jae
mov
lret
mov
pop
add
icebp
leave
imul
and
mov
repz
dec
mov
push
mov
lea
aad
outsb
shrb
addl
cltd
add
push
xor
pop
ret
adc
dec
dec
jbe
pop
dec
and
or
lahf
xor
push
hlt
out
js
push
dec
repnz
loop
adc
pop
popf
stos
ret
jg
test
gs
xchg
stc
sbb
dec
js
push
cmc
push
push
jb
adc
ds
hlt
jo
push
cmp
dec
adc
ficoms
pop
popf
fidivrs
xchg
test
iret
cmp
push
sub
sub
iret
lods
imul
sub
jmp
add
inc
stc
rolb
push
pop
and
das
jns
test
push
dec
out
xchg
mov
shrb
out
nop
push
int
lret
cs
aas
sbb
jl
pop
xor
pop
inc
cmp
mov
pop
cmpsb
cmpsb
mov
jmp
dec
popa
ja
mov
pusha
xchg
lods
loop
loopne
or
pop
push
shrl
out
lret
cmp
sbb
push
dec
int
loopne
inc
mov
jecxz
pusha
cmpsb
pop
push
bound
xchg
je
loopne
push
outsb
push
push
and
jne
es
sbb
cmp
adc
adc
subl
repz
sub
cmpsb
push
or
fcoms
outsb
test
jb
push
xchg
lods
inc
decb
insb
sub
aas
nop
jge
sarl
mov
in
fldenv
jg
sbb
and
mov
test
testb
ljmp
push
add
bnd
mov
sbb
and
mov
cmp
and
ret
leave
push
aam
jge
test
sub
aad
xlat
repz
xor
mov
push
add
mov
or
xor
insb
mov
int
and
mov
dec
xlat
jmp
xchg
adc
stos
int
jbe
lock
inc
nop
ja
fs
push
xchg
subb
xor
in
rclb
mov
sbb
hlt
xorl
jmp
xor
pop
dec
adc
inc
mov
xchg
pushf
xlat
sti
jge
push
out
sub
ret
cmp
clc
int
leave
mov
test
cltd
push
jne
lods
sub
push
std
pop
jl
aaa
sub
faddl
xor
popa
mov
pop
jecxz
push
scas
andb
daa
stos
dec
in
lss
xlat
movsb
pop
push
or
pop
out
mov
cmpb
jmp
and
les
movsl
fmuls
lds
push
push
sbb
jl
rolb
dec
inc
add
sahf
fnclex
lret
addr16
ret
mov
clc
call
xor
pop
loope
scas
movb
and
add
sbb
adcb
call
mov
add
imul
adc
dec
sub
shl
movsb
and
shrb
and
xlat
mov
xchg
into
mov
fldenv
ss
sub
add
mov
and
mov
gs
cld
inc
in
mov
jo
push
insb
lock
xchg
jbe
mov
push
cmp
dec
xlat
jb
xchg
pop
call
addr16
cmp
imul
adc
hlt
sub
enter
jge
clc
and
dec
negl
pop
divl
xchg
or
dec
cs
andl
pop
dec
adc
fstps
mov
push
mov
cmp
inc
movsb
sbb
out
mulb
pop
pop
sti
insl
aas
paddb
imul
in
insl
dec
sub
pop
in
in
xor
popf
sub
lea
repnz
hlt
jnp
xor
add
jo
mov
iret
sub
divb
loop,pt
rcrb
sti
mov
pop
fcomip
and
lea
push
push
jle
xchg
inc
lret
sbb
xor
push
insb
scas
jl
add
std
fisttps
divl
add
xchg
and
fistpll
clc
jbe
xchg
pop
xor
and
inc
sub
inc
in
and
nop
sarb
leave
movsl
es
inc
push
out
popa
mov
push
mov
sbb
jmp
sbb
movsl
call
push
clc
mov
int3
rorb
and
scas
cmpsl
pop
mov
das
mov
leave
into
cld
enter
repnz
pop
mov
sub
cmp
je
dec
daa
nop
push
mov
fwait
arpl
sub
fsubl
mov
decb
jle
mov
cmpsb
sbb
lds
in
sbb
sahf
sbb
or
cmp
xor
inc
jbe
ret
imul
in
push
cmp
dec
stos
aad
pop
mov
inc
cli
xor
divl
das
mov
test
cmp
xchg
pop
add
int3
mov
ja
fdivr
mov
flds
jbe
cmp
cmp
daa
sti
sub
js
pusha
fs
cmp
lss
shl
pop
add
popa
sub
cli
mov
pop
les
in
jle
notl
inc
fidivs
mov
xchg
icebp
stc
jae
ss
stc
call
insb
push
xchg
pop
std
mov
xchg
pop
icebp
xchg
mov
aas
mov
clc
stos
jnp
scas
jae
stos
sub
fildl
or
or
repz
xchg
jmp
in
ret
xchg
inc
and
sub
ds
inc
insl
fcompl
jge
mov
push
test
lods
popw
jge
and
mov
xchg
sbb
dec
decl
inc
lahf
out
ds
and
mov
mov
aas
dec
shll
fwait
xor
dec
add
push
mov
sbbb
enter
push
pop
pop
xchg
xchg
mov
xchg
movsb
add
dec
sub
fcmovnb
lret
jle
loop
or
mov
and
and
imul
mov
div
sub
jp
sbb
stc
lcall
jl
fwait
and
mov
test
xor
xor
inc
or
mov
pop
scas
lods
sub
mov
pop
push
cmc
stos
xchg
enter
lds
aaa
bound
mov
in
movsl
ret
cmpsb
jle
and
xor
sti
mov
jmp
imul
out
mov
idivl
insl
or
xchg
rorl
adc
add
ja
xchg
addr16
push
int3
push
clc
scas
nop
push
fdivrs
sub
das
xor
or
pop
les
cs
out
pushf
sub
insb
std
cs
jmp
shl
jns
insb
lock
mov
outsl
xchg
jge
jnp
and
push
sbb
in
mov
out
or
faddl
xor
fcomps
sbb
insl
push
nop
or
xchg
mov
push
lods
inc
adc
or
inc
repz
pop
mov
cmp
xor
ss
stc
in
or
movsb
cmpsl
push
push
jle
rcl
mov
into
test
int
jnp
es
xchg
pop
push
sbb
jp
sub
addr16
inc
sub
jbe
popf
inc
aas
or
pop
mov
into
pushf
ret
outsl
mov
and
xchg
mov
pop
push
push
fldl
mov
inc
dec
daa
cmp
mov
add
mov
movsb
xchg
jbe
or
sub
push
sbb
sbb
push
add
and
jbe
out
jbe
add
insb
ds
gs
movsl
lods
push
je
insb
xlat
jbe
loope
inc
add
inc
divb
push
push
subl
and
aaa
sbb
popa
cltd
sbb
dec
pop
enter
xor
in
pusha
add
xor
enter
or
dec
aad
int3
sbb
inc
sub
scas
dec
das
dec
push
stos
mov
pop
aas
cmp
bound
pop
mov
mov
sbb
loopne
les
xchg
cmp
iret
sbb
icebp
popf
arpl
jo
pop
pop
sub
jl
and
js
sub
mov
push
pop
test
mov
sbb
in
ret
sub
lea
push
arpl
jmp
fwait
jne
jmp
jo
sbb
mov
sub
into
inc
lods
bound
sub
fnstsw
jmp
push
push
inc
cmovne
cmp
fdivs
aad
push
out
sub
mov
push
mov
pop
negb
sub
sbb
sub
pop
loope
push
pop
xor
stc
aaa
push
pop
xor
dec
scas
inc
cs
and
mov
sub
mov
add
mov
idiv
loope
ror
pop
xor
sbb
sbb
sti
fidivrl
xchg
pop
or
cmpsb
aam
mov
dec
add
xor
dec
pop
cmc
gs
call
mov
loope
push
repnz
scas
ret
and
nop
adc
adc
and
sub
in
faddl
mov
adc
mov
cmp
jle
mov
lcall
je
lea
cli
cmp
imul
test
dec
xchg
or
inc
in
sub
and
xchg
mov
shrl
ret
cmp
fwait
adc
mov
pop
pop
and
and
stc
pop
push
or
add
mov
outsl
add
mov
outsb
push
and
xchg
or
repnz
adc
push
pop
aaa
aam
arpl
cmp
ljmp
sub
cmp
lods
push
out
adc
adc
icebp
mov
pushf
jb
mov
jb
add
sub
adc
mov
pop
das
xchg
dec
adc
hlt
mov
xchg
sub
mov
inc
jp
or
iret
insb
jg
sarb
icebp
pop
pop
mov
outsl
insl
inc
pop
dec
push
sbb
jo
xor
insb
aam
xchg
pop
add
push
ljmp
adc
frstor
repz
outsl
inc
add
popa
inc
scas
ljmp
sbb
pop
ljmp
icebp
hlt
mov
dec
and
fcomip
not
and
nop
sbb
xchg
pop
jae
ret
xchg
xor
xchg
pop
add
popa
adc
push
sti
leave
jo
icebp
sub
add
mov
mov
cld
icebp
cbtw
or
mov
shl
dec
cmp
push
loop
dec
insl
push
addl
dec
rorb
inc
sub
jne
inc
ljmp
cmc
sbb
pop
mov
adc
in
push
call
or
sbb
mov
shlb
and
jecxz
cmp
insb
aas
jo
or
fadd
lret
sub
dec
sbb
sti
roll
push
out
out
fs
jne
lds
int3
es
imul
outsb
add
dec
push
aam
xchg
mov
push
fsub
pop
add
out
push
mov
lret
lret
es
adc
xor
mov
adc
mov
jb
pop
inc
aam
and
dec
xchg
push
lods
cmp
test
and
push
dec
in
test
and
xchg
lods
les
addr16
sbb
enter
push
mov
and
push
mov
push
sub
xchg
pop
xorl
ret
out
pop
mov
out
or
ror
dec
cmp
fnstsw
and
jge
or
sbb
es
xchg
fwait
inc
movsb
sbb
mov
ret
pop
test
or
ljmp
ret
movsb
lcall
jle
imul
push
std
inc
mov
mov
data16
mov
ja
push
shrl
mov
push
dec
iret
adc
xor
es
adc
adc
addb
lds
outsb
or
or
out
lcall
lods
imul
cmp
sbb
imulb
inc
push
xor
mov
xor
test
jmp
mov
fbld
dec
xchg
mov
ret
test
dec
xor
jge
call
call
mov
jp
loopne
mov
aad
icebp
mov
inc
jb
maxps
jg
jno
mov
mov
cmp
leave
mov
stc
xor
shlb
lcall
lods
ficompl
adc
in
shll
and
das
out
dec
fldt
adc
das
into
xchg
das
insb
inc
xchg
xchg
out
cmp
sbb
inc
ljmp
mov
inc
arpl
imul
shrb
xor
imul
mov
or
out
sub
int
sbb
jmp
push
dec
push
jp
xchg
sbb
je
pop
mov
jmp
push
inc
sbb
pop
fldl
fldenv
xchg
jns
cmp
inc
in
rcl
ret
clc
and
mov
mov
pop
adc
shll
sub
push
dec
addr16
bound
mov
mov
fisubrl
rcrl
adc
pop
sub
ffreep
test
aas
data16
sbb
inc
adc
mov
lfs
jecxz
mov
and
sbb
cs
loop
sahf
mov
inc
sub
and
xchg
mov
das
mov
pop
sub
xchg
in
inc
jmp
xor
jnp
push
cmpsl
mov
or
xor
imul
ds
mov
sub
add
lea
xorb
mov
cmp
sub
mov
lods
xor
out
adc
scas
sub
push
sbb
ss
pop
les
mov
sub
adc
arpl
stos
jl
sbb
mov
imul
fnstenv
or
hlt
push
lcall
mov
fstpt
add
icebp
ficoms
and
pop
stos
mov
stos
push
inc
add
cmc
dec
or
in
leave
adc
xchg
loope
sbb
mov
dec
insb
xchg
test
inc
push
out
jl
shl
cmpsl
repz
push
out
popa
dec
adc
adc
add
sbb
js
jne
add
ljmp
scas
adc
psubb
sbb
test
mulb
cmc
cmp
push
mov
gs
mov
cmp
daa
rcll
test
push
xor
sbb
sbb
push
clc
std
jg
add
push
sti
rclb
mov
jecxz
sub
repz
fidivl
push
cmp
pop
or
loop
push
mov
push
sbb
jge
jp
mov
mov
mov
test
das
cmp
dec
in
nop
xchg
or
dec
push
and
js
jp
movsb
mov
stc
fdivrs
cmpsb
xchg
sbb
fldenv
dec
gs
and
lahf
adc
adc
dec
je
ficomps
cmpsl
icebp
jecxz
sahf
sbb
push
mov
out
sub
mov
mov
jae
test
sbb
test
inc
idiv
xor
int3
imul
rcrl
xchg
test
lds
cmp
sub
iret
int
call
lods
push
dec
jbe
mov
in
aam
mov
inc
xchg
sbb
repz
mov
xchg
xchg
cmp
pop
mov
pop
adc
mov
dec
je
add
inc
jo
std
lea
push
fdivrs
leave
jle
lds
mov
sub
das
inc
fdivrl
sub
and
mov
aad
mov
and
aas
inc
movsb
andl
cltd
adc
push
dec
cmp
pusha
sub
pop
fdiv
xchg
iret
sub
xor
mov
lahf
pop
out
mov
mov
add
mov
sti
xchg
pop
lahf
jmp
adc
repz
mov
mov
mov
mov
movsb
lods
inc
jnp
pop
inc
jl
mov
enter
shrl
popa
jb
cmp
shrb
test
aas
cmpsb
jne
stos
test
pop
dec
negb
xchg
sahf
test
sarl
fbld
clc
and
cltd
inc
dec
shrl
pop
adc
push
shll
jmp
adc
cmp
add
scas
sub
cld
int3
jl
mov
sbb
stos
loopne
iret
mov
sbb
jae
lds
movsb
popf
jo
mov
or
mov
push
fstps
aas
cli
pushf
and
add
incb
test
in
loopne
fadds
cmp
mov
sbb
in
mov
jo
sahf
cmpsl
xchg
adc
rcrb
std
or
fs
jnp
bound
pop
dec
into
mov
sub
out
and
cmp
add
aad
iret
cmp
roll
mov
stos
rolb
cli
push
into
push
sub
pop
xchg
scas
jge
imul
or
jp
add
movnti
xchg
aas
adc
mov
stc
stos
add
push
cmp
xchg
pop
jmp
fsubl
xlat
fidivs
xor
dec
les
movsb
sub
lock
inc
push
sahf
push
mov
push
out
cltd
sahf
loop
mov
lahf
sbb
movsl
in
xchg
mov
xlat
xor
dec
out
scas
cwtl
mov
sbb
sbb
int
ds
push
mov
sbbb
cmpb
pop
fistl
inc
fisubl
push
shrb
mov
push
adc
add
dec
sbb
inc
lock
or
inc
je
nop
nop
jbe
xchg
insl
outsb
lret
lea
fdivl
lcall
mov
and
jnp
pop
or
xor
cltd
loop
movsb
mul
jge
mov
outsb
jne
std
jp
xchg
outsb
std
subl
js
imul
jl
cmp
inc
stos
movsl
or
push
xchg
insl
adc
xchg
push
mov
push
shll
cli
dec
outsl
dec
cmp
pop
jmp
loope
pusha
mov
imul
popf
and
leave
fwait
ror
out
mov
mov
xchg
lret
fadd
stos
stos
out
jg
adc
mov
sub
jbe
mov
and
cmp
ret
add
push
push
add
mov
dec
inc
add
rolb
jbe
inc
sub
inc
xchg
test
jmp
adc
rcrl
in
lret
jae
mov
mov
pop
into
aas
jb
sbb
pop
xlat
loope
or
pushf
pusha
imul
and
imul
loope
jo
lods
mov
aaa
adc
mov
outsl
rdtsc
jno
cltd
pop
jnp
cmpsb
out
lahf
and
mov
or
scas
fsub
sub
adc
rcll
hlt
leave
adc
stos
sub
popa
mov
dec
hlt
inc
mov
out
test
add
adc
sbb
fcmovb
and
leave
adc
lods
lret
fdivs
dec
pushf
adc
lods
adc
add
adc
data16
ret
roll
data16
int
push
jecxz
stc
fidivl
push
mov
mov
jnp
add
mov
mov
lea
or
shrl
fsubrs
mov
dec
sbb
stos
mov
adc
into
dec
dec
jo
and
scas
lds
lahf
in
jg
cmp
add
sub
gs
addr16
push
adc
jl
cli
jg
fistpll
dec
fistl
xchg
clc
insb
and
xor
cmpsb
dec
scas
in
inc
cmp
jge
xor
outsl
inc
pop
subl
or
mov
inc
lret
sbb
ja
cmp
sbb
dec
lea
jne
mov
shll
repz
mov
mov
jns
xchg
mov
pop
push
jno
nop
ret
lods
dec
mov
mov
ret
adc
pop
pop
cmp
mov
imulb
cmp
xor
cli
out
adc
pop
addr16
in
xchg
andb
out
lods
in
jne
mov
cs
add
or
les
adc
test
ffree
les
cmp
js
gs
xchg
lea
ficompl
jg
jl
fwait
xchg
mov
dec
cltd
pop
mov
leave
push
std
mov
scas
mov
jno
out
dec
xchg
jns
ljmp
sub
inc
sahf
bswap
mov
inc
call
or
mov
inc
and
mov
cmp
mov
add
lcall
cmpsb
pop
das
mov
push
mov
pop
mov
mov
pop
cwtl
inc
push
inc
inc
mov
push
outsl
and
lret
jge
xchg
xlat
mov
xor
sub
daa
loop
push
mov
and
aad
add
loopne
xor
stc
and
cwtl
pop
dec
lahf
andl
cmp
fisubrl
mov
mov
arpl
int
pop
push
mov
inc
or
push
mov
mov
jle
fnstsw
fnsave
sbb
push
mov
fists
sahf
imul
mov
sahf
cld
xor
add
in
cmp
inc
iret
adc
arpl
pop
xchg
imul
mov
xchg
jg
and
xor
mov
xchg
mov
adc
rcl
mov
xor
repz
xor
cltd
loopne
test
lret
push
fsubs
jmp
mov
fwait
out
addr16
sub
mov
pop
das
repz
push
in
jmp
mov
jmp
bound
test
and
movsb
subb
xor
jnp
or
mov
mov
mov
mov
rolb
test
adc
int3
mov
aas
jbe
or
scas
cld
mov
mov
cwtl
ljmp
in
sub
call
xor
loopne
js
dec
add
stos
cmp
xor
and
pop
push
inc
into
cmp
inc
arpl
push
jno
leave
xchg
sbb
mov
int3
into
rcl
test
or
cmpsl
dec
xor
and
call
xchg
std
movlps
add
mov
adc
dec
lods
add
insl
mov
aaa
xor
adc
pop
call
lahf
adc
aam
jmp
shll
loopne
in
mov
rol
or
frstor
adcl
bsr
sti
mov
jne
inc
dec
dec
xor
xor
cmpsl
nop
sbb
fs
push
and
jne
adc
xor
pushf
mov
daa
mov
or
mov
repnz
shrb
jp
cmp
push
pop
inc
stos
adc
fisttpll
test
adc
inc
or
adc
xor
pushf
xor
pop
mov
xor
in
mov
sbb
and
adc
arpl
sbb
mov
push
pop
fsubrs
add
jbe
inc
fsubrl
bound
push
push
and
pop
push
xchg
leave
mov
push
pop
jb
or
in
aam
and
mov
enter
xlat
add
testb
dec
pop
cmc
adc
les
mov
mov
sub
or
dec
fistpl
ljmp
lods
inc
ret
xor
rcr
ss
test
inc
insl
inc
pop
gs
rep
cmp
rorb
xor
scas
jl
adc
gs
push
rclb
or
mov
xchg
loop
int
dec
mov
leave
sbb
insb
imul
pop
les
jmp
cmp
fistps
mov
lds
or
push
push
loop
or
add
mov
inc
pop
jge
lds
int
pop
lret
xchg
das
cli
fistpll
or
testb
inc
push
bound
pop
pop
out
inc
lock
sub
fstpt
jnp
scas
mov
xor
popa
outsb
es
and
int3
sbb
rclb
push
mov
jb
mov
shlb
ds
pop
push
add
xor
subb
mov
pop
in
sub
cmp
cmpsl
adc
hlt
sub
mov
lahf
mov
xchg
repz
push
push
scas
test
push
in
xchg
ljmp
adc
or
mov
dec
das
icebp
subb
mov
scas
xchg
push
jo
lods
iret
xor
sbb
dec
loopne
adc
sbb
sbb
xchg
inc
inc
xlat
mov
mov
aas
repz
jo
sbb
mov
ficoml
repz
enter
scas
rcrb
jge,pn
dec
sti
repnz
ljmp
pop
clc
mov
loope
pop
sbb
add
sahf
clc
add
ret
jp
es
fimuls
stos
pop
aad
shrb
push
movsb
cs
add
bswap
arpl
test
dec
jae
dec
adc
imul
aas
loop
add
push
ljmp
gs
adc
lret
gs
imul
lret
inc
data16
lods
sar
push
inc
cmp
xchg
movl
into
xchg
pushf
int3
sub
cmp
fdivrl
jo
inc
adc
jo
out
push
sbb
xchg
int
or
cli
dec
addr16
cltd
cmp
pushf
or
repnz
cmp
pop
adc
and
add
pop
cwtl
inc
jbe
mov
fcompl
pop
cmp
pop
adc
dec
loopne
sbb
leave
fdivrs
dec
and
jl
mov
xorl
mov
adc
ficomps
inc
insl
sbb
and
aaa
jbe
divl
cmp
jl
ds
push
ret
jecxz
jb
dec
push
or
xor
sbb
outsl
cmp
test
adc
in
xchg
int
pop
inc
jnp
rol
test
push
pop
incl
fdivl
iret
lods
fwait
pushl
xor
inc
fdivl
sub
or
dec
ljmp
mov
sbb
mov
sbb
fcom
mov
aad
xor
jp,pt
pop
jnp
lods
dec
mov
aas
test
or
jmp
jbe
lock
mov
cltd
mov
jns
rclb
sub
or
and
movsl
mov
xchg
jle
adc
xchg
sbb
mov
fxch
jnp
and
fistpll
mov
fwait
dec
ljmp
cmpsl
icebp
inc
mov
cmp
aad
enter
mov
ret
data16
pop
je
xchg
sub
cwtl
addr16
xchg
gs
test
aaa
fstpl
jge
lds
popf
xor
mov
repz
add
inc
repz
sbb
int
repnz
add
cmp
sub
mov
sahf
insb
add
data16
or
sbb
pop
adc
loop
push
test
jo
ljmp
lcall
pop
pop
leave
add
cmp
cli
jno
mov
cmc
std
dec
dec
leave
inc
sub
lods
jge
aas
call
xchg
mov
mov
xor
dec
lea
in
xchg
add
test
lret
sub
jmp
mov
scas
cmp
pop
insb
jge
pusha
sub
cmp
dec
pop
sbb
adc
pop
sub
and
pushf
adc
arpl
sbb
daa
loop
adc
mov
sub
jo
sbb
into
dec
sub
dec
xlat
pop
sub
sub
dec
addb
sbb
dec
pop
inc
int
sbbb
nop
xor
insl
das
jl
inc
pusha
mov
jns
push
adc
sbb
flds
push
nop
je
pop
les
stc
in
adc
xchg
es
test
cmpsl
mov
dec
sbb
adc
inc
mov
xor
lcall
fyl2x
mov
cs
and
fdivr
cmp
mov
lods
ret
push
rclb
popf
decl
add
jmp
jle
aad
dec
lods
inc
cltd
sti
mov
insb
and
int
mov
icebp
push
dec
aaa
inc
cmp
inc
in
and
clc
mov
lret
and
jns
pop
daa
push
bound
pop
das
test
out
add
jo
or
cmc
ljmpw
fdivp
ljmp
pop
hlt
jge
sahf
cmp
jg
mov
dec
jns,pt
add
mov
mov
movsb
pusha
mov
jge
xchg
push
pop
out
in
addr16
int3
jne
mov
in
rorl
pop
cmp
shl
pop
subb
loope
mov
push
mov
stos
sbb
sbb
inc
aas
add
enter
and
in
dec
ret
scas
inc
mov
and
je
pop
sbb
and
jmp
push
pusha
fistl
or
pop
arpl
sbb
mov
xchg
dec
mov
mov
in
push
push
lock
aaa
mov
subl
adc
xchg
mov
xchg
aas
mov
pop
jg
lcall
cmp
push
shlb
stc
xchg
insl
sub
jne
nop
inc
nop
inc
ds
dec
xchg
jo
and
push
into
jo
lods
xchg
inc
pop
cmp
scas
jnp
outsl
xor
cmp
and
push
jae
jg
cmp
ja
cmp
lods
jbe
movsl
lock
push
shrl
pop
cld
je
les
sahf
pop
inc
sbb
dec
in
sub
xchg
dec
in
sub
mov
sub
enter
adc
sbb
pop
dec
rcll
fs
leave
in
xchg
shlb
lea
mov
je
dec
test
cld
dec
or
mov
popa
sbb
ljmp
enter
cmp
dec
xchg
pop
sub
scas
fisttpl
call
and
lcall
cld
cmp
sbb
cmp
bound
jl
or
pop
outsl
mov
mov
pop
cld
dec
je
jo
imul
sub
int3
cmp
jl
push
mov
and
sbb
xchg
push
call
mov
test
dec
mov
pop
bnd
add
sarb
pop
mov
cmovb
jbe
and
cld
out
sbb
mov
dec
mov
and
xor
dec
cmp
daa
nop
add
pop
jge,pt
xchg
push
jge
je
in
dec
dec
lret
add
sub
fmull
insb
mov
sbb
and
les
out
iret
pusha
sbb
lds
pop
push
or
stos
int3
pop
aas
rcll
sahf
mov
add
leave
push
dec
mov
push
pop
lret
and
xor
pop
mov
push
movsl
mov
fidivs
jge
dec
in
sub
sbb
cmp
bound
ss
aad
mov
ret
ficomps
stos
mov
mov
jle
jge
mov
aaa
jo
fidivrs
nop
fistpll
jmp
sub
add
push
dec
dec
xchg
lret
fwait
jmp
pop
sbb
test
push
int
pop
cltd
shrl
and
mov
lea
lcall
not
or
jns
and
mov
xchg
mov
xchg
ja
mov
rolb
jne
push
inc
pop
push
stc
xlat
xchg
rolb
in
or
adc
idiv
jae
mov
lock
mov
ja
or
push
scas
mov
mov
xchg
repz
mov
test
mov
xor
ficoms
icebp
scas
adc
pop
insb
sbb
inc
inc
sbb
pop
das
add
inc
mov
es
popf
jae
fs
in
mov
aam
addr16
nop
xor
pop
dec
fcoml
mov
and
jmp
icebp
adc
pushf
or
lahf
addb
int3
mov
pop
insl
sbb
dec
mov
lea
es
mov
push
push
mov
mov
je
mov
and
push
sub
lret
xorl
jno
and
lods
xchg
fnstsw
mov
std
mov
push
mov
fstpt
cmpsl
sbb
cmpsb
adc
xchg
mov
in
int3
xchg
pop
xor
push
out
cmc
sbb
out
mov
xchg
roll
or
lahf
sub
jo
clc
push
inc
packuswb
add
sahf
pop
xchg
cltd
enter
in
adc
bound
loope
mov
dec
into
iret
sub
dec
jne
gs
lcall
mov
gs
test
mul
sub
cmpsb
pop
jnp
popa
pop
mov
es
and
xor
ret
push
mov
loop
cwtl
int3
push
repz
sub
movsl
sub
mov
jbe
adc
jl
or
inc
popf
rolb
xor
fiadds
outsb
xchg
mov
xchg
dec
fldl
xor
fimull
sbb
fdiv
fnsave
sub
push
jbe
xchg
fbstp
mov
negb
imul
test
pop
pop
xchg
mov
push
std
testl
cwtl
jnp
inc
add
test
in
addr16
stc
ds
mov
js
jbe
lods
pop
cltd
mov
pop
and
arpl
ss
cs
out
nop
mov
lock
and
fisubrl
lret
imull
aas
scas
inc
fcomp
dec
mov
or
mov
xor
sbb
mov
xlat
or
mov
and
xor
imul
or
dec
cltd
call
nop
sarl
or
push
movsl
push
dec
out
inc
inc
mov
nop
xchg
adc
pushf
ret
ret
add
cmp
ljmp
jmp
ss
add
loope
int3
inc
fildll
adc
mov
xchg
cmp
movsb
and
jmp
in
add
sti
movsl
pushf
fsubr
mov
add
xor
push
fucomip
lret
jle
pop
adc
enter
ret
mov
mov
out
test
jg
aas
addr16
fcompl
pop
xchg
mov
aam
mov
jae
fcmovnu
mov
add
out
dec
fs
cld
xchg
loop,pn
aaa
xchg
push
lea
rcll
jmp
inc
ret
pusha
mov
sub
cmc
xchg
mov
push
std
mov
test
sbb
cmpsl
icebp
mov
int3
hlt
cli
add
jecxz
push
cmpsl
movsl
adc
shrl
xchg
insb
gs
loope
dec
pop
ss
mov
push
bound
sbbl
shrl
mov
cmp
jnp
mov
add
dec
xchg
fnsave
data16
fucomi
jnp
dec
jmp
gs
imul
loop
shr
outsl
divl
js
add
push
outsb
inc
ret
stos
mov
test
imul
push
outsl
jno
jbe
jno
andb
fcmovne
inc
sti
repz
push
in
mov
xchg
mov
mov
sub
outsb
fimuls
pop
rorl
cmpsl
mov
ss
dec
je
iret
out
push
dec
dec
rorb
fisttps
mov
pop
pop
inc
int3
jne
cltd
aad
jae
ljmp
arpl
test
inc
xor
fsts
xor
jecxz
cmpb
std
adc
sub
jo
sub
movsb
inc
and
pop
icebp
adcl
push
es
pop
not
adc
inc
fxam
pop
fiadds
das
scas
adc
xor
sahf
fs
in
mov
daa
fwait
jb
sbb
xchg
pop
clc
xchg
add
add
xor
cmp
cmp
inc
insb
mov
push
decb
lea
addb
mov
insb
cs
pop
push
in
loop
sub
xchg
call
adc
movl
adc
mov
jp
movsl
adc
jle
insl
arpl
mov
dec
into
inc
movsl
pop
xor
dec
dec
adc
jnp
fimull
dec
pusha
jae
roll
mov
mov
add
movsl
jmp
push
inc
inc
mov
pop
js
mov
or
inc
scas
cmp
lock
sub
jno
mov
loop
sub
lret
insl
dec
push
or
imul
dec
inc
decl
int
aad
inc
fmuls
mov
lcall
mov
sub
pop
divl
jnp
sub
shr
mov
jb
jge
jbe
xchg
pop
jnp
out
dec
fmuls
imul
adc
adc
pop
xor
cwtl
sbb
mov
and
sub
mov
cwtl
xchg
scas
and
inc
lods
pop
in
fcmovbe
push
sub
fldenv
cmpsb
xor
stc
cmp
xor
adc
mov
js
dec
jle
xchg
mov
or
mov
aad
shll
push
pushf
push
and
push
ss
inc
sub
outsl
mov
jle
sub
push
hlt
js
inc
into
sub
inc
mov
jp
cmc
xchg
mov
frstor
mov
sbb
repz
push
sarl
cmp
cmp
mov
pop
xrelease
dec
lock
nop
repz
icebp
addr16
inc
stos
xor
xlat
and
dec
mov
mov
jb
test
daa
fwait
int
jo
jmp
cwtl
mov
mov
add
push
sub
fisubs
int3
shll
push
lret
int
pop
in
lods
mov
mov
js
push
divb
add
xor
movsb
movsb
in
pop
pusha
mov
stc
test
mov
push
sbb
cld
pop
sbb
sub
or
jp
stos
leave
and
loopne
sub
push
data16
dec
leave
mov
and
les
out
or
das
enter
or
inc
xchg
sti
push
adcl
in
cmp
dec
aam
inc
sbb
xchg
xchg
xchg
imul
out
and
xchg
mov
push
std
scas
mov
or
xchg
fldl
insb
xor
testl
pop
scas
jae
sub
mov
dec
sti
xchg
mov
pop
mov
mov
sbb
inc
push
pusha
cs
fistps
jl
mov
stos
push
lock
or
aaa
mov
add
sbb
and
xchg
enter
xchg
cwtl
cmpsl
sbb
cltd
arpl
inc
dec
push
mov
mov
mov
push
mov
das
and
daa
dec
inc
jnp
orl
pop
pop
pusha
pop
cmp
jecxz
push
push
mov
rclb
pushf
cwtl
lret
push
neg
das
je
ss
add
sub
sub
lcall
add
xor
push
sbb
and
pop
popa
jbe
xorb
jnp
inc
push
insb
neg
mov
mov
out
std
nop
hlt
push
js
jg
int3
in
sub
sub
jmp
inc
sub
fmuls
mov
mov
js
sti
or
fdivrs
push
cld
sti
mov
arpl
pop
or
fcmove
mov
jbe
in
push
es
loopne
fsubrs
mov
je
and
adc
pusha
es
mov
std
and
movsb
jl
pop
sbb
push
mov
icebp
jge
sahf
add
lock
xchg
push
inc
or
xchg
sub
js
jae
sub
push
imul
jns
shlb
outsl
jg
js
in
cmp
mov
dec
inc
and
xchg
dec
loop
pusha
sub
gs
int
and
mov
aam
cmp
leave
jne
add
jmp
inc
aad
adc
xchg
mov
subl
cmp
int3
ss
inc
push
fildl
pop
popa
rcl
mov
sahf
mov
and
sbb
lret
out
sbb
loopne
pop
xor
or
cmpl
das
dec
imul
cmpsl
rcrb
bound
add
fs
pop
mov
lret
xchg
ret
fistps
mov
movsb
jmp
mov
mov
lret
cld
out
enter
or
add
dec
xchg
test
out
je
xchg
inc
or
int
and
cwtl
aas
jge
xchg
pop
pop
test
lret
mov
jp
sbb
pop
push
cmpsl
lock
sarl
out
adc
inc
aam
fistpl
or
sarl
xor
data16
mov
cld
sti
pushf
in
int3
lret
fnstenv
arpl
movsb
cmpsl
lret
pop
adc
gs
sub
pop
dec
or
cmp
inc
mov
xor
xor
outsb
fcoms
push
in
xchg
ret
adc
push
or
jne
cmp
fisubrl
sub
or
mov
jg
jb
mov
mov
mov
cmc
sub
pushf
mov
mov
mov
xchg
aam
dec
pop
lret
xor
or
rcll
jle
lret
flds
jbe
lret
call
repz
mov
inc
mov
adc
aam
jns
bound
jmp
or
repnz
outsl
mov
push
clc
pop
mov
push
or
call
mov
mov
add
jnp
mov
push
fildl
outsl
sbb
scas
andl
adc
addr16
jmp
cmp
xor
jbe
add
fists
insb
sub
gs
mov
sarl
aam
in
jge
pop
xor
lcall
int
push
std
cmpb
push
jg
insl
push
lea
push
push
mov
fs
and
pop
aaa
test
lock
and
loope
inc
push
mov
push
fcoml
aad
loope
adc
insb
cmp
sub
and
inc
lods
iret
int3
cmc
and
xor
jmp
stos
xor
ds
sbb
cwtl
mov
scas
addr16
in
mov
aam
fldcw
xor
mov
push
mov
lock
or
xor
ret
inc
dec
xchg
xchg
cltd
xlat
rorl
xor
in
roll
xor
adc
xchg
jo
dec
xchg
fisttps
hlt
inc
fbstp
xchg
test
mov
and
push
iret
popf
push
int3
mov
mov
scas
mov
ret
mov
stos
sbb
fwait
or
push
mov
mov
std
sbb
sbb
pop
rclb
data16
or
dec
and
test
fcompp
mov
out
cmovp
movsb
cs
mov
rcr
xchg
mov
inc
aam
inc
sub
lret
mov
jge
repnz
mov
xlat
aaa
xchg
push
cmp
push
clc
ficompl
orl
push
pusha
es
jg
gs
or
stc
sbb
mov
rcll
adc
lret
inc
mov
cmp
cmp
jae
cmp
es
pop
push
inc
push
or
sti
xchg
jg
int3
pop
and
repz
data16
inc
faddl
xchg
xchg
mov
pop
nop
mov
mov
nop
fstl
or
add
ss
out
in
pop
dec
jo
repz
add
outsl
xchg
pop
sub
and
test
inc
or
sarb
push
jnp
ret
mov
pop
jmp
inc
data16
xchg
xor
jne
push
mov
movsb
inc
daa
shl
loopne
jne
xor
cmp
inc
adc
clc
or
hlt
shlb
movsb
push
fs
jg
xchg
mov
jge
and
ror
out
push
dec
xchg
aas
clc
ja
mov
clc
adc
pop
xchg
pop
repz
cwtl
mov
lods
jno
cltd
jge
cmp
cli
pop
xor
in
daa
xor
cmc
fsubs
hlt
rep
mov
test
call
sub
xor
lahf
push
subl
jl
or
les
popf
sbb
mov
int
daa
xor
cmpsl
pop
add
std
aaa
jnp
sahf
ja
mov
cmp
ficoml
push
repnz
outsl
pushf
test
test
mov
pop
ljmp
mov
jle
push
out
and
lea
imul
cmc
mov
mov
jns
imul
ljmp
cli
jp
jno
xchg
inc
pop
imul
mov
dec
jge
sbb
sub
in
fs
jnp
in
cmp
orb
xlat
int
pop
xor
mov
xchg
and
flds
lret
in
popf
sbb
int3
int3
iret
pop
xor
or
mov
mov
push
sarb
out
dec
mov
rclb
pushw
xchg
push
imul
in
cwtl
mov
addr16
adc
testl
cmpb
mov
sti
dec
pop
push
xchg
fimull
inc
jo
pop
and
jns
jmp
pop
cli
enter
mov
clc
ja
cli
lret
or
pop
in
int
hlt
mov
pop
rclb
mov
aaa
fs
pop
push
aas
insb
pop
scas
pop
sub
lcall
hlt
cmc
aad
popf
and
lahf
xor
pop
iret
icebp
pusha
xchg
es
cmp
or
mov
jg
stc
test
ja
mov
xor
lds
ljmp
mov
mov
inc
scas
pop
and
insl
push
or
test
testl
pop
sub
shll
jge
push
cmp
cmp
repnz
das
into
inc
arpl
push
jb
jg
and
xchg
xor
mov
push
sarl
dec
in
or
inc
pop
das
inc
sbb
cmpsb
xchg
out
jl
int
aad
out
test
stos
pop
or
in
leave
jb
ds
xchg
mov
lock
mov
dec
iret
movsl
mov
std
dec
test
scas
pop
fiadds
mov
dec
data16
and
lahf
test
insl
jp
aas
cmpsb
inc
in
pop
pop
mov
clc
jmp
mov
outsb
fs
shrb
and
adc
leave
ljmp
xchg
lods
cwtl
ret
outsb
dec
jmp
jns
mov
dec
test
mov
mov
mov
repnz
icebp
and
and
push
jne
jp
adc
test
sti
test
cmpsl
adc
xor
shr
data16
popa
jae
cltd
fdivs
je
mov
shl
mov
sub
add
imul
dec
or
xor
ljmp
gs
iret
adc
repnz
out
int
pushf
loope
xor
xchg
scas
nop
sbb
call
repz
inc
xorb
lods
jecxz
cmp
pop
sbb
xchg
mov
sub
in
filds
jecxz
jne
push
adc
add
lods
cld
scas
xor
popf
movsb
push
push
sub
inc
out
pop
dec
pop
add
add
mov
lods
arpl
and
dec
pop
rorb
fmuls
stos
shlb
loope
jae
dec
inc
xchg
es
loopne
ret
inc
mov
jmp
test
mov
fnstcw
cltd
jae
cltd
mov
rorl
mov
jmp
or
xor
mov
or
ret
push
jmp
jmp
mov
in
addr16
sbb
lret
mov
adc
cmp
imulb
push
fildl
call
jp
mov
jo
dec
lcall
push
jle
xchg
stos
inc
enter
mov
mov
xchg
ljmp
repnz
inc
and
jo
cwtl
in
test
adc
sub
jns
jno
cmp
popa
inc
mov
sbb
mov
int
mov
or
pop
ds
and
and
imul
fildl
jne
sub
push
repz
mov
scas
push
cmpsb
mov
pusha
imul
pop
cmp
mov
loope
mov
arpl
pop
mov
jno
imulb
jecxz
and
ficompl
imul
popa
sub
cmp
jp
and
fists
mov
outsb
insb
and
inc
jns
mov
cwtl
int3
inc
cmp
sahf
jmp
out
and
pushf
jp
js
mov
popa
ret
sbb
xchg
pop
or
inc
adc
mov
ljmp
ljmp
nop
xlat
pop
shl
lock
adc
imul
mov
scas
xor
in
mov
jns
lret
push
mov
cmp
sbb
pop
cld
adc
fcoml
cmp
jg
sbb
ljmp
out
les
pusha
aam
mov
or
inc
sbb
fstpl
cmp
and
repz
add
rcl
sbb
stos
fs
jg
xchg
enter
imul
inc
add
loope
jnp
dec
fcompl
push
fs
ret
dec
and
jns
push
mov
xchg
mov
mov
inc
ja
pop
jbe
out
pop
cmpsl
jmp
lods
fists
xchg
insl
or
lods
outsl
and
inc
dec
jns
ret
xor
xor
dec
xor
cli
test
adc
nop
dec
push
pushf
adc
int
shll
inc
sbb
subl
pop
out
or
adc
inc
rorl
movsl
pop
xchg
loop
cmp
pusha
movsl
dec
xor
cmpsb
iret
push
test
adc
ja
loopne
push
movsb
call
jno
or
pop
jp
out
rorb
rorl
loopne
maxps
push
js
shll
out
jo
lds
xchg
fnstcw
pop
and
leave
and
imul
test
dec
mov
add
dec
les
and
or
pop
fcoms
sarb
addl
push
ret
cli
adcl
jne
inc
ljmp
sub
sahf
inc
jmp
push
cmp
mov
pop
cmpl
pusha
jns
je
xor
repnz
stos
or
icebp
mov
xchg
sub
jne
insb
cmc
push
mov
fistl
cs
ljmp
sbb
stos
aad
mov
jne
sub
mov
stc
sub
cs
add
jp
hlt
test
lea
or
repnz
jbe
subb
das
adc
push
fmul
push
dec
movsl
imul
sbb
shl
pop
shr
scas
or
ret
cmc
jae
insb
push
inc
or
cld
clc
mov
in
and
or
sub
push
cmp
mov
xchg
sbb
mov
movsb
je
daa
xchg
dec
adc
add
imul
adc
pop
lock
jo
in
mov
cmp
and
addb
das
in
pop
xor
push
cli
sub
fstpl
add
or
sarl
int
lds
adc
and
pop
lret
pop
popa
sti
adc
mov
push
jl
add
sti
sbb
cmpsb
jbe
pop
in
pop
sub
je
sub
mov
jl
loope
subb
dec
cmc
sbb
jns
repnz
sub
xor
xchg
int
arpl
fldcw
in
jno
movsb
xchg
and
movsl
mov
sbb
aad
or
repz
xchg
fs
jp
and
or
mov
loope
aas
insl
add
adc
fs
shrb
test
popa
cmpsb
xlat
or
fildll
and
xor
adc
inc
jl
xchg
adc
sti
nop
stos
ret
add
cli
add
adc
jns
lahf
xchg
mov
imul
mov
lahf
scas
cs
shlb
mov
hlt
pop
xor
inc
int3
dec
les
out
cmpsb
addr16
shrb
notl
fists
ds
leave
shlb
mov
jmp
xor
test
and
inc
push
pop
and
cmp
cli
ja
dec
adc
les
arpl
out
pop
pop
das
arpl
push
jns
sbb
es
sub
cmc
mov
insb
cmp
out
push
xor
fmuls
dec
and
hlt
and
inc
in
pop
inc
push
or
dec
mov
pop
aam
pop
imul
sbb
mov
cmp
adc
mov
push
sbb
imul
xchg
xchg
jae
jge
stc
dec
add
in
lahf
xor
and
cmp
sti
sbb
pop
test
jmp
sbb
xchg
and
cmp
hlt
dec
mov
or
in
jno
js
jae
push
lcall
das
jmp
sahf
mov
or
iret
jmp
push
inc
aam
lcall
pop
jns
jmp
jmp
mov
sbb
repnz
aad
mov
out
in
jne
mov
pop
mov
or
aaa
pop
dec
push
mov
xchg
inc
js
cmp
lock
fisubrl
test
push
bound
xchg
cmp
lea
sub
xor
xchg
sbbb
mov
and
and
mov
xchg
out
mov
out
dec
cmp
xor
mov
adc
inc
shlb
cmpsl
pop
lret
push
dec
out
jmp
lret
ds
jecxz
mov
dec
enter
ret
push
mov
add
or
les
ljmp
mov
or
ja
fs
lods
repz
sahf
cmc
popf
pop
addb
push
cmp
sub
outsb
fistl
sbb
std
je
inc
lods
lods
cmp
in
sub
testl
jo
jbe
inc
xchg
pop
in
sbb
rcr
mov
js
adcb
add
lahf
movsl
pop
lods
test
sub
push
and
push
xor
push
stos
pop
mov
pop
outsl
mov
mov
jnp
out
cwtl
push
ss
rcrb
cmp
gs
xor
add
movsb
sub
loope
add
shr
out
and
sub
add
lods
jle
bound
jnp
rcrl
xchg
mov
push
inc
add
out
fs
imul
dec
jae
or
imul
lcall
lcall
pop
xorl
and
dec
int
add
pop
out
hlt
call
mov
pop
repnz
pop
lds
mov
inc
lret
inc
adc
imul
inc
push
jb
mov
in
adc
sarb
push
jmp
push
ret
jnp
jae
in
mov
clc
inc
shlb
adc
lock
iret
test
inc
dec
jno
and
lret
and
movsl
fmull
lds
inc
add
adc
enter
fnstsw
daa
loopne
sbb
pop
lds
arpl
cwtl
pop
push
jbe
mov
fwait
in
xor
dec
add
jge
outsb
and
lret
lcall
shll
fistps
cmp
pushf
pop
aad
rcrl
adc
mov
dec
inc
leave
jmp
popf
push
popa
jne
mov
jne
lods
sub
adc
fisubrs
xor
filds
idivb
adc
and
in
cwtl
insl
mov
pop
icebp
pop
or
imul
sbb
mov
push
iret
xchg
scas
xchg
push
push
inc
jge
xor
leave
lea
in
std
aam
dec
add
stos
adc
imul
cmp
sbb
push
push
xchg
mov
pushf
sbb
xchg
into
mov
sbb
sahf
dec
add
ret
push
pusha
pop
mov
mov
fsts
sbb
lret
fmulp
lods
sub
lret
cmpsb
fdivrs
cli
ss
mov
kandnw
jl
inc
daa
shrl
mov
dec
arpl
sbb
dec
xor
movsl
sbb
push
xchg
cmp
xchg
mov
mov
sbb
cmp
mov
mov
ss
sahf
mov
jbe
test
jmp
lods
mov
in
ss
ds
mov
push
outsl
je
aam
mov
fnstcw
cld
mov
xlat
mov
fnstenv
inc
repz
out
andps
sbb
pushf
mov
add
popa
loop
loop
adcb
fs
pop
push
test
adc
adc
push
int3
jb
enter
sbb
lea
mov
sbb
cmp
jmp
cltd
adc
cli
cmp
mov
mulb
in
adc
lods
aam
mov
cmp
ja
leave
data16
test
pop
xchg
sbb
lods
pop
xor
xchg
mov
adc
in
mov
pop
push
push
xor
lea
in
test
movsl
je
jmp
test
sbb
imul
loop
xor
enter
mov
jmp
int
xor
jb
mov
mov
pop
mov
pop
dec
and
out
scas
inc
xor
jno
inc
cmp
pusha
pushl
mov
es
pop
subl
or
test
xchg
out
push
aas
and
add
sbb
pop
mov
adc
lret
gs
inc
lock
rclb
cmpsl
pop
push
mov
push
mov
jo
sbb
xor
aam
xor
push
mov
rcrb
ds
inc
xchg
lds
mov
cmp
jns
xchg
icebp
sub
cmp
adc
arpl
xlat
adc
fbld
mov
push
nop
addb
test
or
xchg
push
xor
mov
daa
cmpl
call
or
pushf
and
popa
inc
stos
push
stc
xor
xchg
outsl
mov
mov
xor
enter
lods
push
nop
mov
andl
mov
enter
movsl
xchg
push
jns
fstl
loop,pn
pop
sbb
addr16
fstps
dec
jo
cmp
sbb
push
jecxz
xor
dec
pop
sub
or
cs
in
push
push
lahf
push
fnstcw
push
call
or
push
xchg
loope
xchg
xor
dec
int3
mov
xor
dec
push
gs
pop
arpl
imul
in
inc
movsb
in
or
mov
call
outsb
lea
cmp
out
or
cmpsb
lcall
ret
into
aas
pop
cmp
arpl
das
ljmp
call
dec
push
je
mov
mov
popa
lock
jo
mov
jl
mov
and
xchg
test
dec
xor
dec
fsubr
cmp
loopne
sbbb
or
push
xchg
mov
or
dec
push
stc
ret
pop
std
in
inc
enter
dec
xor
jae
pop
fisubrs
je
inc
sub
jo
inc
pop
xor
add
xor
popf
mov
std
add
unpckhps
movsb
in
test
fisttps
jns
mov
sbb
insl
popf
lahf
mov
adc
push
cmp
add
lret
sti
or
mov
pop
xchg
syscall
mov
dec
xchg
mov
mov
mov
scas
push
out
push
test
inc
outsl
xchg
popf
sub
inc
fwait
rcrl
sub
dec
test
imul
out
mov
mov
das
jns
popf
icebp
jne
cmp
xor
dec
inc
jecxz
mov
fwait
inc
iret
dec
jmp
jmp
scas
pusha
cltd
push
mov
add
fldt
sub
jno
pop
pop
mov
and
fstl
jge
or
setbe
sbb
movsb
push
xchg
xor
shlb
jno
cld
cwtl
jle
pop
cmpl
jl
adc
add
push
shr
and
xor
bnd
data16
pop
test
pushf
dec
cli
jno
mov
popf
pop
lods
inc
aad
repnz
mov
pop
add
iret
push
lret
fcoml
fwait
dec
jle
fimull
pop
call
inc
fcmovb
incb
test
fwait
mov
dec
int
rcr
rcrl
loope
mov
mov
xor
and
setg
push
xor
out
sub
mov
jno
and
jle
adcb
pop
into
mov
mov
iret
enter
or
lahf
mov
sub
dec
pushf
stc
adc
xorl
imul
outsb
scas
addr16
mov
or
jge
jg
test
or
stos
pushf
insl
mov
cmp
pop
fdivrs
pop
rcrb
jno
fidivrs
pop
js
mov
xchg
adc
adc
movsl
xchg
fistps
in
and
adc
mov
sub
in
jae
adc
sbb
leave
pop
push
sub
out
mov
push
add
lret
aaa
ja
mov
inc
pop
test
jnp
add
add
xchg
sbb
xor
test
bound
scas
add
imul
jbe
adc
aad
lods
adc
inc
mov
sbb
je
jns
dec
ss
testb
dec
mov
movups
push
jae
dec
loopne
jne
cmc
ret
icebp
ret
jp
inc
push
sbb
mov
xlat
adcl
aaa
pop
jmp
and
dec
push
add
cmp
xor
or
sbb
es
rcrb
mov
pcmpgtb
pop
add
jno
cwtl
popa
fistl
lock
cmp
shll
jne
in
sbb
sub
pop
sub
test
pop
dec
jle
pop
insb
jae
jae
pop
pop
scas
jae
mov
jo
mov
push
fs
frstor
repnz
xchg
inc
mov
dec
testb
mov
cmp
sahf
jne
xchg
insb
push
in
fstl
fisttpll
popa
xchg
lret
push
fbld
pop
movsl
ss
insl
out
test
push
jl
push
sub
jnp
mov
das
movaps
pop
negl
push
mov
and
sub
jl
and
inc
jo
xor
xchg
cmc
cmpsl
test
out
inc
fcomps
in
pop
aaa
cs
enter
jmp
hlt
insb
pop
add
adc
outsl
stos
not
std
pushaw
xchg
dec
mov
cs
aam
mov
fwait
push
lds
into
aaa
add
add
pop
lds
and
sub
add
test
push
adc
inc
jae
orb
repz
movsb
movsb
adc
hlt
push
pop
ror
icebp
mov
sbb
lcall
cmp
mov
push
enter
adc
dec
hlt
pushf
and
in
dec
pop
cltd
rcr
das
loop
jmp
jae
aam
inc
ret
icebp
popf
push
sub
cs
pop
addb
jb
test
stos
add
imul
push
adc
adc
flds
sub
fs
std
add
inc
loopne
inc
popf
loope
cmp
ficoml
fwait
std
adc
inc
push
cmpb
jl
data16
mov
je
sub
pop
add
jb
aad
adc
imul
fdivl
push
or
add
mov
inc
pop
arpl
sbb
lock
adc
popa
jb
xchg
hlt
jl
pop
fisubl
aad
mov
xor
insl
mov
jbe
in
or
push
and
movsb
mov
mov
adc
movsl
and
jnp
aad
leave
xchg
dec
daa
clc
into
test
repz
loopne
mov
mov
enter
pop
loope
xchg
das
scas
out
push
ss
scas
sub
xchg
movsl
adcl
cmpsb
fisttps
xor
pop
sbb
pusha
mov
adc
push
pop
xchg
dec
or
dec
aam
adc
pop
negl
call
mov
inc
or
pusha
int
jmp
fistpl
or
cld
jmp
dec
cmpsl
int3
adc
sbb
call
jns
bound
into
clc
xor
mov
call
dec
cld
cmp
or
lods
fldt
sbb
data16
test
scas
inc
outsb
repz
jne
mov
jg
sbb
sahf
mov
das
pushf
sarl
inc
loope
dec
ljmp
addb
clc
lock
inc
sub
ds
inc
hlt
nop
nop
adc
shll
dec
stc
aad
push
clc
fisubl
push
adc
pop
add
sub
pop
jecxz
dec
mov
add
sbb
or
mov
je
dec
imul
rcrl
enter
iret
fistpll
aaa
add
cltd
hlt
cmp
add
sbb
add
repnz
or
or
inc
sub
push
mov
xor
inc
cld
and
das
pop
stos
icebp
dec
inc
popf
jmp
xor
xchg
int
clc
lcall
jb
mov
test
xchg
nop
push
aad
pop
sbb
negl
jmp
pop
sub
ss
jp
aaa
push
lock
inc
add
sub
pop
jb,pn
or
cmp
cmp
into
fcomi
rolb
push
cmp
in
or
add
jne
add
ret
xlat
pop
cld
adc
out
push
sahf
fbld
sahf
dec
dec
xchg
cmp
xorb
mov
xchg
or
inc
inc
loop
inc
adc
xor
pop
stc
fstpl
sahf
dec
loopne
sbb
mov
sbb
in
popa
add
aas
xchg
dec
lcall
jo
lock
jns
xor
mov
repz
aad
jb
mov
cwtl
lods
fisubs
aas
lcall
jo
sub
das
shlb
dec
dec
loope
push
xor
ss
add
ret
mov
rorl
iret
adc
cmc
add
addr16
leave
mov
fs
stc
fdivr
or
xchg
in
add
mov
pop
pop
xorb
cmp
or
jecxz
cltd
pusha
movsb
dec
inc
test
cmc
pop
mov
mov
and
fs
sbb
pop
pop
or
and
and
jle
add
or
loop
test
xorb
shl
cmp
jb
cmp
into
mov
xchg
sub
ljmp
shl
rorl
jae
add
push
aaa
cmp
cmp
popf
adc
cmp
inc
xchg
or
lea
mov
das
push
test
stos
jmp
xchg
aam
mov
cmp
lcall
imul
mov
int
jne
out
xor
push
mov
jmp
mov
imul
mov
pushf
inc
push
and
jge
mov
xor
cmc
ja
cli
aam
imul
pop
cmp
aad
cld
sti
mov
cwtl
add
pusha
jg
rorb
loope
sarb
rcll
jge
insb
xor
in
shlb
mov
dec
lock
sbb
insl
cmp
sbb
push
pop
push
test
mov
adc
lret
jge
xchg
add
imul
fs
scas
fcompl
dec
pop
aad
nop
sbb
es
pop
add
sbb
mov
inc
sbb
imul
mov
xor
lret
stos
lds
test
jp
mov
add
std
jle
scas
xchg
adc
out
pop
js
stos
push
scas
sti
int
out
push
icebp
pop
lea
jns
les
mov
addr16
adc
fsubr
pop
jns
aaa
movsl
fwait
push
pusha
in
sub
scas
stos
nop
test
es
leave
loope
sub
cs
and
or
pop
mov
and
adcl
scas
js
daa
jns
aaa
push
mov
mov
push
insl
iret
rolb
test
movsl
fsubs
out
push
movsl
adc
add
stc
insl
fstps
jbe
roll
mov
icebp
pop
xchg
mov
xchg
fwait
cld
sarl
cli
or
lret
jecxz
leave
cwtl
mov
inc
in
cmpsb
push
clc
xchg
and
mov
lret
je
fnstcw
jecxz
daa
cmp
adc
pop
inc
xchg
sbb
stos
iret
inc
dec
xchg
and
outsb
mov
xor
int
xor
shrb
push
push
fidivs
pop
lret
shl
insl
scas
lods
pop
push
out
or
inc
or
and
lods
jns
xorl
test
sub
cmp
xchg
dec
inc
js
jae
add
or
xor
adc
jbe
mov
cmp
lahf
sbb
sbb
cli
adc
mov
sbb
pop
movsb
or
pusha
xchg
sub
mov
or
mov
sub
xor
lea
lea
loop
pop
push
js
adc
cmp
xchg
cs
jo
add
andl
dec
gs
call
sbb
pop
mov
adc
xchg
ret
popf
jae
ret
push
imul
xchg
leave
sbb
add
cmp
mov
ja
rorb
jbe
aam
lods
push
xor
andl
into
mov
adc
stos
out
cli
xchg
inc
pop
xor
loop
dec
js
pop
or
dec
lods
inc
je
out
jle
jl
or
xchg
pop
push
pop
xor
xor
loopne
sbb
cmp
inc
out
out
cmp
in
dec
dec
enter
ja
into
mov
xor
in
mov
movsb
fcomip
pop
push
mov
cmp
add
xor
push
data16
aad
lret
int3
sbb
pop
sbb
sbb
je
test
mov
aam
jbe
repnz
int3
mov
and
aaa
push
push
cmpsl
xchg
inc
icebp
mov
mov
jg
incl
pop
xchg
jle
push
cmp
dec
and
mov
andl
add
jo
out
fsts
shll
int3
pop
mov
add
lret
ficomps
sbb
sti
push
dec
or
or
lods
ret
xor
mov
pop
mov
rorb
fcomp
lret
jle
mov
movsl
dec
mov
add
into
popf
push
les
adc
call
lea
cltd
jnp
mov
test
push
add
lahf
rorl
or
enter
sbb
sbb
out
and
imul
lcall
aam
enter
dec
push
arpl
pop
jmp
mov
daa
pop
sub
jp
jo
mov
inc
ficoml
inc
add
gs
leave
std
cld
or
movsl
scas
bound
jle
in
icebp
lods
dec
aad
repnz
in
fbld
int3
aaa
leave
imul
rcll
sti
pop
stos
enter
je
les
mov
pop
sbb
inc
and
decl
cmp
scas
dec
into
sbb
dec
ss
adc
dec
or
dec
dec
pop
jno
fnstsw
fucomp
push
notl
jns
adc
icebp
insl
adc
mov
stos
in
cli
mov
pop
jecxz
loop
std
push
lret
xor
pop
jo
mov
mov
or
sbb
adc
xchg
mov
mov
ret
stos
faddp
dec
clc
sbb
pop
movsl
and
ds
xor
imul
push
jne
push
jle
popf
mov
enter
xlat
mov
call
pop
mov
add
cmc
sbb
repz
sbb
pop
push
and
sub
dec
or
mov
dec
pop
inc
push
or
xor
inc
pop
xchg
test
call
js
and
pop
mov
dec
and
ret
and
jg
in
scas
fwait
data16
loop
je,pn
xlat
adc
mov
insb
in
mov
dec
xchg
outsl
insl
dec
insb
mov
dec
push
cs
sbb
lret
xchg
das
dec
xchg
jge
addl
sti
cltd
repz
xchg
xchg
int
xor
cld
pop
mov
dec
push
aad
fidivrs
sbb
cmpl
xchg
xchg
inc
jg
ja
xchg
jb
xchg
iret
movsl
jecxz
adc
fldt
sbb
pop
mov
jo
push
inc
shl
imul
jo
ficoml
add
ret
inc
mov
xor
sahf
pop
jle
vmread
sub
insl
int
leave
mov
or
add
data16
mov
loope
push
ljmp
pop
fwait
outsl
mov
add
cwtl
sarb
rolb
cmp
xor
jne
repnz
call
andb
andl
movsb
inc
jl
mov
sub
cmc
mov
push
dec
cmp
dec
jnp
lods
fsubrs
push
into
lds
mov
je
dec
inc
and
imul
sbb
sbb
fdivr
or
push
mov
add
pop
fstp
add
inc
outsl
in
and
sbb
roll
scas
das
in
movl
mov
les
pop
es
inc
fsub
dec
enter
inc
insb
push
test
fwait
pop
js
cli
mov
or
mov
shrl
push
mov
insl
sbb
test
lock
imul
add
sahf
int
test
push
fsubrl
jns
subl
movsl
or
ficoms
lcall
adc
lds
sti
stc
divb
inc
pop
sbb
xor
dec
icebp
scas
jo
ret
loopne
notb
lret
xchg
popa
test
lret
push
cmpsl
bound
out
jecxz
cmp
mov
sub
in
leave
sub
or
sub
lock
xlat
push
scas
sahf
add
loope
movsl
icebp
jne
sub
inc
mov
imul
sbb
aas
cmpb
and
lret
inc
fnstenv
shl
repnz
jo
add
bound
dec
xorl
ret
cmp
mulb
lcall
fcomip
andl
ss
dec
sbbb
cmp
rol
mov
sub
call
mov
xchg
jbe
js
dec
sbb
push
cli
push
push
imul
fsubr
cmpsl
fnstcw
adc
xchg
lahf
lock
push
cmc
and
xchg
mov
push
fwait
repnz
jecxz
cltd
jnp
dec
cmp
inc
dec
mov
lds
mov
data16
arpl
addl
mov
sub
ret
rorl
stos
xor
ror
enter
and
out
add
std
pop
mov
pop
in
push
adc
mov
mov
sbb
jns
adc
lahf
push
inc
pop
adc
jl
imul
xchg
scas
xchg
pop
cmpsb
aam
mov
and
ljmp
filds
cld
mov
imul
lret
push
pop
or
in
jo
mov
mov
xchg
inc
xchg
cmp
dec
lahf
mov
dec
cli
push
mov
shll
xchg
mov
aam
stos
jae
xor
scas
stos
sbb
incb
jo
nop
adcl
ja
dec
pusha
sbbb
repnz
or
add
mov
sbb
clc
ja
aad
into
scas
icebp
xor
dec
and
ljmp
push
cmp
inc
fwait
push
xchg
mov
fbstp
xor
scas
xchg
std
xor
and
adc
inc
repz
mov
or
push
jo
movsb
inc
jne
cmc
cwtl
lds
stos
adc
lret
cmc
loope
inc
icebp
fldenv
dec
movsb
rclb
mov
mov
cwtl
jb
sub
cwtl
mov
pop
jnp
enter
and
adcb
outsl
push
leave
popf
mov
shll
mulb
pop
xor
pop
xor
or
imul
inc
mov
fdivl
push
int3
lods
bound
dec
mov
or
and
pop
jecxz
aaa
hlt
dec
push
popl
data16
jge
jecxz
push
pop
mov
ret
loope
fst
mov
shl
inc
ljmp
icebp
out
mov
xchg
mov
mov
pop
xor
pop
test
test
testl
outsb
aam
push
or
pop
pop
lcall
fidivs
add
cmp
mov
mov
pop
jbe
push
call
pop
push
jl
sahf
push
mov
sub
arpl
mov
hlt
inc
xchg
xchg
sbb
mov
jno
sarb
push
mov
mov
pop
movsb
pop
mov
das
sbb
push
lods
mov
mov
inc
xlat
sub
out
push
test
xchg
stc
test
cmp
cs
bound
xor
xorb
bound
pop
sarb
fwait
aas
push
sbb
jl
jb
lret
in
shll
test
lcall
xchg
pusha
cmp
pop
outsb
mov
nop
sar
adc
adc
dec
iret
in
lret
adc
mov
push
loop
dec
xchg
insl
mov
adc
lret
mov
fmull
sub
imul
mov
pusha
sti
mov
sub
mov
push
scas
add
fstps
push
ret
mov
sub
fsubrs
or
mov
inc
roll
jbe
fwait
dec
adc
cmpsl
xchg
xchg
lahf
out
xchg
mov
pop
lea
ljmp
pushf
adc
fwait
imul
sbb
test
push
xchg
inc
pop
push
mov
jp
jp
repnz
cli
xor
push
jg
mov
cmp
sbb
lea
icebp
enter
jge
jl
adc
jg
jo
mov
xor
or
add
fcomps
pushf
push
jl
mov
push
fs
gs
scas
and
push
xchg
dec
or
fildl
cmc
mov
push
mov
xchg
fwait
pop
test
push
jg
ja
insb
cli
sbb
add
jl
fwait
loope
negl
ret
scas
mov
xchg
dec
decb
imul
hlt
jle
and
xor
hlt
loopne
out
ja
sbb
xor
or
orl
icebp
pop
pop
xchg
dec
fwait
ja
xchg
test
mov
adc
cmpsl
push
adc
adc
lcall
and
pop
fisttps
pop
adc
dec
pop
mov
fistpll
xchg
cmp
add
jns
inc
adc
cs
in
iret
pop
xor
and
enter
es
inc
sub
mov
roll
aam
stc
lcall
xchg
lret
shrb
xchg
nop
add
push
fisubrl
mov
and
cmpsb
in
xchg
hlt
ret
rol
push
adc
test
add
addr16
push
and
sbb
mov
in
int
cmc
in
or
sahf
dec
sbb
lds
inc
incl
push
movb
clc
sbb
out
das
sub
sbb
mov
aam
jb
pop
cld
cwtl
jp
outsb
fsubrl
lock
cmp
ds
mov
sbb
push
jg
in
xchg
xor
repz
cmpsb
imul
sar
jmp
mov
pop
repnz
dec
or
insl
loop
mov
insl
jne
sbb
or
stos
cwtl
bound
repz
push
inc
push
cmpl
in
ret
fstl
mov
sti
pop
scas
xchg
ret
xor
ja
cmpsb
sub
popf
ljmp
insl
pop
adc
cs
cltd
in
jecxz
pop
loopne
jo
arpl
add
push
cmp
push
js
in
dec
xor
mov
pop
ss
push
xchg
movsl
aad
lcall
mov
call
out
xchg
adcl
sbb
enter
cmp
cld
cmpsl
rorb
dec
aas
scas
in
imul
js
or
pop
in
and
test
mov
cltd
loope
loope,pn
mov
xor
sti
cs
or
subl
push
adc
inc
or
xchg
xchg
mov
jg
jmp
jns
test
mov
mov
xor
push
bsf
rorb
imul
fldt
mov
push
repnz
lods
mov
insl
push
jp
inc
mov
pop
addr16
lret
sahf
inc
rorb
js
add
out
pop
insl
rorb
pop
xlat
dec
les
and
add
and
sti
inc
mov
loopne
ja
jae
push
hlt
push
arpl
sbb
adc
xchg
cmpsb
shlb
inc
popl
adc
cmp
push
xchg
mov
adc
sarb
push
pop
and
inc
mov
icebp
out
dec
test
push
loope
or
and
pop
mov
fiadds
icebp
adc
mov
mov
ja
pop
into
popa
mov
xchg
shr
pop
stos
or
into
or
jns
add
cmpsl
sub
mov
shrl
dec
fs
mov
je
xchg
fwait
in
inc
cwtl
mov
mov
jbe
mov
aaa
test
mov
mov
xchg
mov
mov
push
addr16
xchg
call
mov
lahf
sbb
aas
aaa
roll
mov
fimull
push
jmp
stc
jne
mov
add
rcr
adc
aad
in
punpcklwd
aas
imul
int
sub
mov
cs
jge
mov
lcall
cmp
jg
xchg
arpl
lea
cltd
cmp
inc
int
lret
out
cmp
cmpsl
and
orb
mov
loop
sbb
xchg
pop
jge
ljmp
xor
dec
cld
stos
xchg
and
rcl
int
mov
idivb
loope
dec
dec
add
sbb
or
in
sub
cmpsb
stos
ja
jnp
jg
pop
in
je
js
pop
adc
jecxz
lret
out
xchg
inc
sub
lods
pop
fbld
jb
pop
addl
call
leave
popf
bound
cltd
pop
inc
iret
or
insl
or
cltd
mov
in
add
dec
lea
jb
pushl
inc
pop
out
dec
ret
push
or
jge
movsb
test
shlb
mov
jns
mov
insl
nop
jno
push
sti
lock
int3
fisttpll
pop
scas
lock
pop
lea
out
and
aam
lcall
and
sbbb
xor
mov
adc
mov
out
ror
outsb
dec
jbe
idiv
repz
mov
das
cli
addr16
hlt
mov
rclb
je
or
pop
cmp
ss
jmp
add
mov
sub
mov
fcompl
xor
pop
cwtl
stos
adc
add
sbb
push
fnstcw
inc
sbb
sub
jo
or
xchg
pusha
sub
mov
jb
xchg
mov
pop
rcl
leave
push
jno
cs
push
shrb
dec
sahf
push
jb
cmp
adc
xchg
mov
sub
repz
imul
lret
ss
stos
aam
sbb
and
or
cmpsl
jno
arpl
add
jne
notl
push
pop
jge
insb
inc
mov
call
adc
cs
inc
sbb
sbb
daa
je
stos
pushf
dec
std
out
inc
mov
leave
aas
sub
push
pop
mov
cmp
cmp
insl
jo
arpl
psrlw
les
dec
idivb
mov
ret
mov
add
sbb
mov
push
fdivrl
sti
mov
lahf
adc
imul
jecxz
cmp
fwait
cmpl
and
addr16
filds
inc
mov
pop
fnstenv
outsl
sub
in
pop
ja
xchg
jns
test
in
int
jge
xor
lea
push
push
pop
mov
les
adc
sub
jnp
mov
xchg
vmread
pop
or
and
pop
scas
push
inc
xor
iret
and
insb
cld
mov
movb
and
into
push
sub
or
cwtl
and
loope
dec
outsb
push
pop
jns
icebp
push
mov
cmp
nop
jne
ret
xchg
xchg
inc
adc
fdivr
and
or
inc
or
push
xor
xor
icebp
and
int
push
es
testl
sahf
push
sti
adc
fmulp
popf
mov
add
js
nop
stos
dec
fldcw
sbb
sbb
fwait
lock
mov
inc
insb
sub
add
cld
dec
mov
data16
stos
aad
test
fcmovnu
popf
mov
lret
test
lcall
dec
push
sar
int
sahf
test
int
add
fstl
jl
leave
test
into
xchg
mov
in
lahf
pop
dec
daa
add
cmp
mov
das
fcmovbe
or
mov
mov
jecxz
mov
rcrb
add
push
lea
fadds
mov
dec
jb
mov
lret
fnstsw
push
movsl
ljmp
fwait
push
in
scas
dec
into
std
sub
rep
into
imul
sbb
xor
fdivrl
sbb
sti
sbb
aad
in
add
adc
cmc
in
enter
or
lahf
add
out
lret
pop
les
adc
data16
cmp
fdiv
sbbl
int3
fisubs
and
adc
out
sub
sbb
in
sti
and
jbe
ficomps
pusha
int3
and
aam
add
int
mov
cmp
rcrl
ljmp
int3
adc
imul
mov
jb
ret
adc
and
push
out
movsb
jl
push
pop
ss
jno
cltd
push
push
sbb
inc
sti
outsl
inc
cmp
std
ds
dec
jecxz
cli
inc
jp
rclb
lods
or
cltd
xor
lods
mov
and
cltd
int3
mov
movb
sub
cmpsl
fwait
pushf
add
adc
inc
dec
dec
das
fwait
icebp
es
jae
idivb
cmc
scas
gs
aad
fidivs
xchg
cmp
nop
adc
push
jno
test
dec
sti
scas
add
xchg
pusha
inc
jo
aaa
andl
call
pop
leave
hlt
jb
push
test
mov
mov
xor
dec
or
mov
divb
sbb
movsb
addr16
int3
inc
repnz
enter
paddw
adc
or
dec
mov
push
pop
xchg
jo
jnp
daa
sub
mov
sbb
push
in
pushf
inc
jle
notb
add
push
xchg
push
ffree
es
out
daa
xchg
push
fisubs
dec
movsb
stos
xor
mov
xchg
outsl
cmpb
mov
push
mov
xor
shll
mov
movsl
inc
cmp
sbb
mov
xchg
lcall
faddl
je
jg
repz
or
mov
fadd
lret
sbb
outsl
mov
push
cltd
cmpsl
fsubrl
aaa
repnz
jns
mov
movsb
push
add
add
pop
rcl
cmc
testb
push
cmp
pop
hlt
cmp
jmp
sub
mov
ret
add
xor
push
test
mov
js
mov
lahf
insl
sub
jl
mov
leave
add
fisttps
inc
jl
jne
call
xchg
into
loopne
in
mov
ljmp
movsb
lret
int
xor
or
cmp
js
jne
sub
cmp
and
jp
js
sbb
add
ljmp
leave
xchg
add
push
xchg
or
fisubrs
xor
add
leave
pop
test
fwait
mov
sub
insb
push
xchg
xchg
jno
ja
adc
mov
jae
dec
into
aas
aaa
cli
sub
cmp
jo
push
mov
mov
outsb
into
in
pop
notl
sub
test
notb
push
adc
hlt
dec
mov
mov
adc
push
loope
or
gs
outsb
mov
jnp
pop
repnz
xor
fs
jns
or
lret
adc
ja
fcom
mov
stos
cmp
scas
rclb
stc
jmp
stos
stos
add
xor
arpl
push
outsl
sub
mov
pop
jg
imul
sbb
jo
mov
cmp
rcrb
mov
lock
rcrb
dec
mov
push
cmp
cmp
mov
jg
aas
mov
xchg
pushf
inc
adc
mov
imul
loopne
fistpll
fiaddl
pushf
loope
mov
dec
setbe
push
push
jb
inc
stc
mov
int
cmc
sbb
or
sub
sti
dec
lea
rcl
pushf
stos
xchg
shrb
pop
out
jle
ja
lods
cwtl
add
out
repnz
or
dec
js
jns
dec
fsts
inc
pop
rorb
add
ljmp
jb
pop
ficoml
out
jp
aad
in
and
jb
push
push
dec
dec
fnstenv
xlat
js
mov
inc
jbe
push
jl
dec
adc
jle
fs
in
aam
insb
outsl
fs
pushf
lods
pop
movsb
pop
jmp
test
movsl
in
mov
jae
or
ss
or
rolb
mov
xchg
outsb
in
dec
andl
cwtl
inc
mov
mov
in
push
ret
std
inc
ljmp
mov
push
repz
push
insl
mov
and
clc
mov
js
negl
js
sbb
loope
sarl
sub
nop
sub
push
iret
insl
dec
loop
pop
fs
add
xchg
outsl
mov
jge
jl
daa
push
mulb
in
stc
sub
xor
sbb
cmpsb
xchg
jne
outsl
sbb
cld
iret
xchg
or
mov
adc
outsb
lea
nop
faddl
mov
or
cmp
dec
outsb
xor
addb
pusha
jg
fs
ds
cmp
pop
cwtl
es
into
and
cmp
xchg
insl
fimull
lret
or
add
mov
in
in
test
stc
xor
push
xchg
mov
cltd
int3
sarl
and
cmp
jns
and
mov
inc
nop
sti
jbe
mov
xchg
add
jns
es
add
add
dec
test
cltd
into
andb
mov
leave
inc
sti
sub
xor
inc
dec
sbb
prefetch
stc
adc
aaa
lock
xor
in
leave
jl
inc
mov
and
andl
dec
inc
mov
xchg
add
movsb
sbb
imul
and
rcrb
lods
pop
loope
cmpsl
push
add
inc
popf
pop
jae
fsubrl
loopne
inc
add
mov
imul
xchg
into
lock
dec
xlat
push
jp
outsb
test
inc
cmpsb
into
add
push
stos
add
mov
adc
xchg
xchg
loope
dec
icebp
xlat
sbbl
lods
repz
je
jl
mov
cmp
mov
jmp
sub
inc
fstpl
cld
pop
hlt
mov
int3
jne
bswap
or
loope
mov
and
pop
popf
jo
or
sbb
mov
dec
cli
jge
cld
mov
push
shlb
inc
stc
nop
mov
fsub
in
sub
enter
jle
pop
adc
push
push
loope
ja
sarl
xlat
call
fsubrs
push
mov
dec
gs
lods
repz
push
push
fstpt
out
test
xlat
je
inc
or
mov
inc
call
hlt
sahf
gs
sub
movsb
in
es
mov
ret
ret
inc
fistpl
insl
sub
daa
add
or
stos
jnp
push
push
jle
mov
push
inc
pop
sbb
dec
push
pop
xlat
xorl
mov
xor
dec
ja
in
push
xchg
jne
xchg
pushf
pushf
fldcw
pop
dec
notb
pop
mov
xor
xor
popf
subl
lcall
push
popl
pop
dec
lret
popa
jbe
or
ret
push
pop
rorw
mov
lock
jecxz
push
or
rcrb
js
repz
dec
stos
stos
push
std
rcrl
push
daa
rcrb
mov
jge
leave
xchg
loop
push
je
push
xor
ficomps
push
jnp
filds
fistpll
lds
clc
test
scas
mov
ds
push
jle
push
in
xor
push
jle
rorl
mov
neg
imul
clc
out
sub
mov
bound
xchg
xchg
fiaddl
inc
pop
loop
cmpsb
xorb
stc
js
jg
arpl
popa
jnp
pop
sahf
loope
sub
movsb
mov
mov
mov
mov
cmp
sbb
cmovae
xchg
push
mov
add
shll
mov
in
pushf
sahf
jmp
js
cld
jb
mov
dec
mov
pop
xor
inc
ficomps
subl
mov
mov
jp
dec
xchg
fiaddl
inc
jo
mov
cltd
movsl
pop
xor
push
mov
popa
xchg
xor
mov
aam
pop
xchg
mov
mov
test
rorl
xchg
mov
mov
icebp
int3
ret
xchg
cmpsl
sahf
les
jbe
repnz
ljmp
arpl
fisubs
stc
mov
cld
add
jbe
mov
sti
fs
pop
pop
jge
dec
loopne
xchg
fsubrs
and
jmp
aam
test
sub
jo
push
mov
mov
jne
cld
mov
mov
push
sub
lcall
pop
int3
out
repnz
sub
jl
popa
cmp
insb
cmc
scas
and
shrb
or
xchg
enter
or
push
arpl
add
addr16
dec
fistps
gs
mov
pop
cmp
enter
jmp
adc
cmpsb
jo
mov
cltd
inc
imul
jle
fistl
ja
ret
xchg
add
cmc
movsl
xor
push
push
mov
sarl
xchg
in
shl
push
and
push
outsl
dec
das
xor
cwtl
pop
xchg
mov
rdtsc
push
stos
arpl
popa
jb
fstps
inc
scas
lock
sub
mov
sahf
or
inc
mov
pop
xor
jp
mov
sub
xchg
js
movsl
jp
lds
xor
cli
icebp
push
and
mov
lahf
pop
repz
scas
imul
mov
fstpl
bound
xlat
cwtl
inc
mov
fucomip
push
adc
gs
daa
daa
push
xchg
sbb
mov
ret
test
rcrl
mov
xor
push
ret
dec
in
data16
mov
cmp
or
les
stc
inc
in
push
cmp
sub
cmc
and
jns
lahf
repnz
dec
and
jl
inc
mov
jb
dec
sahf
pusha
stos
bnd
mov
cwtl
insl
pop
pop
xchg
push
loope
ljmp
add
mov
out
xor
adc
sub
sbb
arpl
mov
pop
shrb
jo
loop
aaa
aaa
xchg
and
cwtl
sbb
xchg
enter
mov
sti
jle
mov
xchg
outsb
ffree
cli
scas
imul
cltd
push
stos
popf
insb
jmp
jge
push
lds
cs
in
orl
sti
test
ss
sti
mov
xchg
cmp
jae
call
xchg
adc
aad
jmp
icebp
rorl
out
dec
jb
pop
loopne
popf
mov
nop
sub
adc
bound
and
into
jle
jbe
add
jl
mov
inc
or
xor
cmc
inc
out
xchg
xchg
sub
inc
test
std
push
jmp
and
out
jg
xor
adc
mov
push
leave
int
xor
and
mov
or
js
push
inc
insb
sbb
sbb
repz
mov
pop
je
pop
push
mov
sar
enter
mov
dec
test
cmpl
xor
push
clc
pop
cmp
sub
push
or
gs
add
jmp
mov
jb
outsb
mov
loop
icebp
jne
std
repnz
mov
mov
mov
in
push
xor
loopne
or
addr16
sub
cli
insl
test
inc
xorl
jp
loope
jl
add
cli
lds
movsb
cmpsb
mov
test
jnp
jge
arpl
popf
rolb
mov
adc
into
insl
jae
jp
adc
lock
jne
fistl
push
loope
test
mov
dec
add
mov
inc
add
push
rcrb
jns
sbb
loopne
loopne
push
mov
cld
jg
push
and
popl
mov
popw
or
jecxz
xchg
je
mov
je
pop
xorb
xor
or
in
cli
out
jno
outsb
scas
jae
add
push
test
add
cli
mov
movsb
mov
xchg
testl
jp
loope
jmp
add
cmp
push
out
mov
mov
adc
aad
xlat
enter
xor
mov
enter
aas
mov
xlat
and
sub
sti
xor
push
push
push
mov
dec
cmp
pop
bound
pop
adc
jl
pop
clc
jg
dec
cmp
ss
movsl
gs
test
or
shl
mov
mov
pop
cld
jl
stc
xchg
aaa
fwait
pop
xchg
sbb
gs
call
push
or
cmp
inc
add
mov
ret
fistpll
xor
sbb
xchg
and
mov
jo
pop
lods
and
sahf
cmpsb
push
lock
xor
sbb
stos
adc
ja
jnp
and
insl
popl
and
cmp
xchg
repnz
test
pop
add
jno
cmp
pop
jecxz
int3
sbb
out
jge
and
or
gs
cmp
jmp
ror
arpl
mov
xchg
insl
lcall
lret
jge
adcl
outsl
push
or
push
push
jne
mov
loopne
mov
inc
hlt
cmovp
outsb
test
ret
jae
test
add
inc
xchg
or
into
add
push
pop
cld
xchg
jmp
aad
jp
inc
jbe
add
pop
add
or
test
pop
int3
add
shll
dec
cmc
adc
stos
popa
mov
es
fsts
aad
ret
mov
adc
mov
or
leave
fwait
stos
inc
inc
inc
and
add
icebp
xor
iret
adc
cld
inc
int3
pop
or
jg
into
or
cwtl
outsl
cld
rorb
lock
enter
ret
push
hlt
iret
push
sub
mov
xor
add
imul
and
bound
test
pop
lret
pop
adc
cltd
push
jae
mov
adc
popf
inc
xchg
inc
fmul
mov
insl
sbb
popa
je
sbb
clc
ret
lock
sub
cmp
inc
mov
rcll
pop
fistl
xchg
pop
inc
popa
scas
mov
repnz
push
push
iret
std
clc
imul
jecxz
aaa
xor
adc
jo
push
js
repz
outsl
cmp
mov
push
insl
lret
add
jno
pop
in
in
aas
adc
mov
rorb
mov
cli
in
movl
or
ret
nop
adc
inc
dec
sarb
nop
mov
outsb
scas
add
xchg
sbb
jns
jecxz
mov
imul
mov
xor
fstps
mov
test
repnz
sti
loop
fs
icebp
dec
mov
aad
idivb
scas
push
push
bound
adc
iret
inc
mov
clc
xor
movsb
sbb
outsl
xor
call
lret
jnp
fxch
vmovd
sub
jo
data16
subl
out
jp
movd
adc
scas
imul
pusha
cld
sbb
add
cmpsl
push
lahf
and
out
adc
jmp
cmp
lea
xchg
lods
jne
ds
fs
dec
dec
shl
or
in
movsl
sbb
push
in
loope
js
mov
xchg
xor
testl
jmp
sbb
push
repnz
jne
outsl
out
jp
cmpsl
xchg
inc
repz
cwtl
gs
mov
push
loopne
shl
pop
cmc
dec
adc
push
cmp
push
jns
pop
cld
dec
sbb
bnd
lahf
repz
adc
sub
scas
or
jmp
fwait
mov
push
dec
insb
daa
xor
pop
xchg
xchg
sub
dec
mov
popa
stos
mov
ret
dec
icebp
xor
mov
adc
in
adc
cs
lods
cli
imul
push
popf
xadd
in
lahf
mov
test
push
and
inc
aam
ljmp
cwtl
iret
stos
enter
repnz
daa
fstpl
and
jne
call
clc
cmp
jne
lret
mov
jge
mov
cmc
movsb
push
repz
push
add
xor
mov
imul
or
inc
adc
ret
incl
fwait
shl
add
and
lock
and
or
loopne
out
add
push
mov
enter
mov
pop
mov
out
dec
xor
insl
pop
jmp
lods
inc
rorb
fxtract
shl
sbb
sub
add
sbb
adc
mov
and
and
and
adc
inc
xchg
leave
pop
out
in
pop
push
dec
in
mov
test
inc
sub
cmp
add
sbb
xor
xchg
mov
pop
shrl
fbld
inc
xor
lods
jae
lock
add
neg
stos
scas
jecxz
push
aam
inc
pop
sub
xchg
lods
push
mov
and
inc
dec
adc
std
xor
fcompl
push
jl
cmp
out
dec
dec
movsl
popf
int
aas
mov
pop
xlat
mov
loopne
loopne
xor
cmpsl
mov
push
sbb
movsb
jmp
sar
ret
inc
pushf
jbe
in
xchg
sahf
nop
cld
sbb
pop
sbb
jno
movsl
xchg
in
movsb
test
maskmovq
imull
push
stos
repnz
imul
push
jnp
pop
shrb
movsl
rcr
stc
cltd
stos
aas
inc
mov
fisubrl
xchg
loope
rolb
jge
push
in
out
inc
sbb
test
and
mov
arpl
pop
inc
scas
inc
and
lock
mov
mov
cmp
xchg
addl
faddl
add
out
jp
pop
stos
pop
test
daa
daa
test
mov
sbb
inc
fmull
ljmp
inc
inc
or
ror
push
xor
adc
sbb
mov
xchg
fsubrs
lret
or
imul
xchg
sub
fcomp
mov
mov
xor
pushf
jecxz
shl
and
inc
xchg
and
stc
jecxz
cmp
pop
dec
mov
mov
push
xchg
push
dec
cmp
shr
push
mov
mov
arpl
es
push
add
push
loope
push
decl
cli
enter
out
andl
sarb
xchg
mov
push
leave
pop
lahf
shl
xchg
call
cld
jg
mov
outsb
cmp
jb
int3
jno
ror
mov
mov
incb
cmc
jno
or
mov
inc
faddl
loop
push
in
xor
outsl
test
push
mov
sub
mov
stos
jge
mov
xor
cli
and
arpl
popw
aaa
std
dec
xor
push
push
add
es
aam
aam
xchg
mov
pusha
push
andl
mov
out
jae
pop
imul
push
cmp
mov
sub
stos
xchg
mov
mov
mov
push
das
dec
aam
mov
push
lds
push
fmuls
lret
dec
xchg
cwtl
cmp
xchg
jnp
sbb
in
arpl
mov
int3
movsb
mov
inc
test
xor
std
and
or
cli
fcompl
jb
and
push
les
adc
pop
add
cmc
movsl
and
stos
add
sub
xor
pop
divb
pop
popa
outsl
adc
cmc
test
xchg
xor
and
mov
cmp
movsl
call
mov
push
test
test
mov
andl
add
int
xchg
jecxz
add
cmp
adc
fsubrl
adc
push
mov
and
sbb
push
cmp
jae
rorl
mov
call
pop
arpl
leave
aad
scas
inc
sbb
adc
pop
sti
xchg
shlb
push
mov
rorl
lea
ljmp
lcall
sahf
roll
bnd
testb
cmp
clc
rclb
cltd
js
jp
stos
and
fbld
or
mov
imul
dec
dec
sbb
int
outsl
xlat
arpl
xor
stos
in
cli
or
pop
in
pop
aad
xchg
mov
xchg
sbb
or
mov
sub
and
sbb
scas
xor
outsb
push
int3
insb
std
cs
repz
mov
outsb
dec
leave
xchg
mov
les
out
sbb
xor
lcall
sub
inc
sti
push
push
push
ljmp
pusha
mov
rorb
movsl
cmc
jb
jge
ret
pop
inc
inc
test
outsb
je
push
dec
jno
jp
mov
fwait
xor
sub
lods
inc
clc
sahf
sub
jns
inc
mov
cmp
inc
in
pop
movsl
sbb
out
xchg
mov
mov
loop
jb
test
and
add
test
lds
aam
jbe
adc
mull
test
pop
test
cmp
lret
fldt
ret
push
jge
mov
faddl
mov
mov
enter
sbb
out
mov
hlt
mov
add
mov
rcrb
mov
cmp
in
repz
mov
mov
cmp
jne
in
ficomps
loope
inc
mov
xor
fists
push
data16
into
push
add
sub
inc
icebp
jp
mov
xchg
jecxz
arpl
jl
scas
leave
andl
push
xchg
dec
test
lods
adc
stc
fmuls
scas
xor
xor
test
inc
inc
aad
icebp
push
inc
jae
push
shlb
inc
fsubrp
mov
xor
shlb
jae
jnp
cmp
loopne
fdiv
mov
lcall
xchg
xchg
cmpsb
into
add
les
pop
sub
xchg
mov
jl
mov
cmp
add
mov
rol
push
add
xchg
int
pop
add
repz
jg
push
push
lock
std
push
sbb
stos
mov
adc
or
and
bswap
pop
xchg
in
pop
out
ljmp
pop
stc
push
jge
xchg
inc
or
subl
test
sbb
pop
pop
adc
jns
jnp
inc
xlat
jne
xor
insb
mov
xchg
js
add
cmp
add
push
jmp
mov
cmp
cmp
xchg
jns
test
dec
cmp
test
scas
adcl
imul
test
mov
jne
pusha
jbe
xchg
jp
xchg
out
jne
scas
mov
xlat
and
ljmp
int
cmp
outsb
loopne
flds
outsl
xchg
jge
lea
js
push
mov
js
pop
jo
cs
std
dec
cmp
aam
adc
imul
das
jmp
fwait
sub
cld
loopne
push
pop
repnz
mov
adc
sarb
xchg
cltd
shrl
jne
scas
pop
inc
ficomps
xor
push
mulb
psubsb
jne
bound
jne
and
popa
pop
out
and
fwait
test
sbb
shlb
sbb
push
in
int
fcoms
pop
cs
add
ret
jns
mov
rcll
ret
into
mov
test
cmovs
mov
jb
lcall
insb
imul
inc
in
aad
mov
cmp
push
ja
scas
inc
addb
inc
mov
shlb
xchg
push
pop
gs
fiaddl
cmpsl
jl
aas
bound
int
outsl
xlat
aaa
mov
sbb
gs
mov
std
mov
iret
insl
pop
inc
lods
cmp
subl
or
dec
les
iret
xchg
sti
pop
sub
imul
pop
push
and
push
mov
nop
int3
or
sbb
clc
mov
clc
faddl
fisttpl
mov
insl
or
inc
rcrl
cld
cmpsl
fisttps
mov
adc
and
jle
cmp
xchg
jge
sub
xchg
xchg
bound
inc
add
cmpsb
pop
es
push
stos
xor
xor
cmp
popa
int3
and
lahf
movsl
pop
decb
clc
aam
inc
mov
and
push
imul
enter
stos
push
das
jp
mov
fistpl
lds
cmpsl
lds
cs
gs
mov
cld
jmp
sahf
dec
adc
test
aam
cmpsl
ss
stos
lcall
cwtl
pushf
sub
andl
test
mov
or
or
or
dec
xor
jbe
mov
test
jae
pop
xchg
xchg
inc
jmp
xchg
dec
dec
test
or
repz
push
out
cmp
cmp
push
mov
jmp
sub
and
movsb
leave
dec
and
mov
push
ljmp
pop
outsb
orb
inc
adc
stos
or
iret
inc
add
or
xchg
inc
xor
daa
insl
push
adc
sbb
scas
ljmp
xchg
test
repnz
mov
inc
sti
and
in
test
lea
shlb
scas
sahf
xchg
lret
inc
push
aaa
shll
leave
pop
add
fadds
pop
dec
outsl
mov
ljmp
mov
loopne
sarb
scas
jp
mov
mov
into
jp
dec
or
push
es
enter
inc
aam
mov
mov
iret
and
lret
dec
lods
pop
push
outsl
push
icebp
jno
stos
jp
movsl
pop
cli
stc
push
je
dec
and
and
arpl
add
into
xchg
and
jmp
pusha
sbb
jl
int
movsb
sarl
sub
mov
jne
int3
sbb
popf
xor
jb
jge
sahf
fcompl
fdivl
lahf
mov
lea
sub
lret
xor
cmpb
insb
inc
jge
pop
jne
pop
dec
rorb
insb
cmpsl
pop
ss
jp
sbbb
movsl
sub
stos
mov
dec
sub
mov
ss
pop
adc
and
xchg
mov
mov
movsb
jmp
test
ljmp
mull
lahf
imul
ret
nop
mov
shlb
mov
add
jbe
pop
lcall
scas
cmp
and
dec
jae
fs
dec
mov
jecxz
sub
out
sarb
fs
jb
rcrl
jo
lcall
sahf
push
ss
add
movsb
nop
dec
cmp
mov
outsb
mov
push
lods
cltd
mov
add
out
mov
pusha
movsb
adc
stos
pop
jne
in
out
test
lods
test
jae
out
mov
and
pushf
fadds
adc
xchg
sub
mov
or
fucom
cs
lock
mov
ss
inc
lods
xchg
loopne
dec
push
jecxz
pop
pop
ficoml
pop
cmp
xor
and
sub
mov
pop
pop
int3
pop
cltd
jns
mov
adc
es
aas
push
std
sub
mov
fdiv
mov
mov
stc
mov
xchg
ret
add
out
out
out
push
call
xchg
and
xor
mov
xchg
xchg
sbb
ljmp
gs
and
push
fwait
sub
aam
ljmp
dec
rep
rol
sarl
adcl
sbb
xchg
jecxz
adc
data16
insl
mov
adc
push
loop
inc
aaa
addr16
mov
adcl
xor
aam
fwait
adc
inc
bnd
sub
icebp
pop
cmp
gs
shll
adc
inc
adc
pop
inc
out
push
sbb
inc
cli
jmp
test
test
sahf
pushf
scas
int3
out
xchg
cltd
mov
pop
ficoml
pop
lea
call
addr16
pop
mov
mov
jge
inc
xorl
dec
cmp
mov
xchg
in
pop
out
insl
or
or
sbb
mov
cmp
lahf
cmpsl
mov
scas
popa
lods
data16
push
or
popa
sub
fisttps
sub
stos
dec
out
cmp
andb
mov
adc
sbb
das
xchg
jge
idiv
fimull
jg
sub
ds
div
jle
test
pop
into
lock
and
cmp
repz
mov
sub
mov
adc
repz
dec
xor
mov
sahf
stc
or
dec
daa
addr16
fisubrl
add
pop
bound
xor
pop
iret
inc
daa
xor
mov
cmovnp
cmp
out
pop
pushf
ficompl
mov
jnp
cmp
popa
mov
lea
mov
and
push
adc
ljmp
add
mov
pop
add
cwtl
xchg
mov
dec
jns
or
cmp
aas
or
into
shll
inc
xchg
aam
stos
sub
mov
jns
jmp
dec
std
les
sahf
sbb
popa
mov
rclb
jnp
sbbb
cltd
pop
inc
addr16
repnz
loop
jl
idivl
fstpl
push
inc
cmp
fadds
arpl
insb
sarb
mov
or
shr
adc
xor
rorb
out
pop
outsb
insl
jb
pop
xor
sub
cltd
push
subb
dec
sub
lret
ljmp
dec
jbe
jp
lahf
fists
inc
daa
movsb
mov
dec
inc
lea
jae
mov
test
push
fstps
xor
xor
or
inc
cli
test
jo
pop
fs
push
push
popa
mov
rorb
adc
rcll
inc
fsubs
in
out
cli
dec
test
push
jno
sub
test
popa
icebp
mov
mov
insl
shll
mov
bnd
xchg
cmp
rolb
or
adc
and
lock
rcrl
rdtsc
and
nop
push
mov
daa
push
repnz
mov
dec
cwtl
icebp
pop
pushf
sbb
jecxz
dec
outsl
cmc
data16
outsl
pop
leave
lahf
mov
repz
out
inc
pop
pushf
movsl
outsb
fiaddl
repz
jge
mov
xchg
sbb
adc
adc
or
lods
cwtl
outsb
xchg
lret
dec
fstpt
adcl
pop
pop
push
int3
sub
sarl
jb
repz
cmp
mov
inc
arpl
adc
or
or
or
mov
jae
jb
rep
inc
cmc
out
dec
ret
mov
gs
ds
and
fstl
fists
hlt
rcll
test
pop
mov
jbe
dec
push
daa
add
fst
adc
lret
or
jmp
mov
daa
cmc
mov
pop
inc
les
sub
pop
jmp
addb
or
dec
or
out
adc
int3
movsb
or
out
test
or
xchg
outsl
nop
sbb
xor
sbb
punpckldq
mov
jae
mov
shlb
and
jb
mov
or
dec
dec
fcmovnu
insl
movsl
mov
jmp
stos
imull
jg
xchg
outsl
jg
test
mov
mov
inc
outsb
mov
mov
out
cmpsb
push
insl
les
rcrl
mov
inc
mov
mov
add
push
or
and
and
push
fwait
xchg
popa
xor
mov
cmp
xchg
fwait
imul
scas
inc
jle
pop
sbb
pusha
lods
movsl
jp
adc
pop
mov
shl
fisttps
sahf
jnp
cwtl
lea
cmpsl
mov
test
push
sub
dec
sbb
bound
je
test
pop
push
adc
stos
sbb
in
xchg
aaa
fcomps
push
inc
dec
fs
aas
mov
sbb
fidivs
int
loopne
bound
push
fildll
movsl
mov
aaa
or
int
inc
xchg
sub
mov
and
movsb
out
fstl
mov
stos
jne
mulb
mov
adc
mov
cmp
cwtl
sub
pushf
out
and
sbb
mov
fmulp
add
fisubrl
insl
adc
idivb
das
sub
xlat
addb
jl
jle
cmp
sbb
aad
int3
add
add
stos
xchg
popa
cmp
xchg
sub
shll
sub
sarl
push
repz
ds
push
aad
aas
add
and
movsb
pushf
out
ret
cmpsl
mov
jg
mov
cmp
or
push
xchg
idivb
cmp
stos
dec
cmp
lahf
bound
fisttpl
repz
adc
cli
js
cmpsl
mov
insb
in
sub
xor
cmp
lods
inc
inc
aad
or
cmpsl
xchg
adc
pop
rclb
push
popf
pusha
add
in
sub
aam
sub
sub
mov
xchg
call
cmp
movsl
in
xchg
jae
jno
ds
in
mov
icebp
lods
test
scas
mov
xor
inc
push
fbld
sbb
inc
lods
lods
icebp
push
nop
je
mov
cli
in
sete
pop
mov
cmc
or
xor
nop
fucomi
push
push
cmp
add
push
scas
out
shrl
in
lcall
or
das
pop
mov
mov
std
imul
and
mov
enter
mov
push
or
sbbl
popf
cmp
and
dec
pop
ret
cs
jo
les
inc
mov
mov
jbe
mov
pop
out
cli
mulb
jo
sub
xorb
pop
test
stos
iret
fcompl
loop
xchg
add
and
pop
dec
fmul
sub
movb
mov
cmpb
xchg
push
std
cmp
add
inc
loop
fldenv
cmpsl
push
cmp
int3
jne
inc
push
mov
sahf
das
flds
sti
ds
jl
negb
jle
cmp
les
add
xchg
mov
or
inc
add
add
push
jns
jg
inc
jbe
add
adcb
jg
lods
or
push
roll
je
lods
adc
inc
fisubl
inc
popf
out
out
roll
add
add
inc
outsb
outsb
test
push
mov
sbb
clc
dec
pop
in
push
cmpsl
mov
out
dec
push
dec
push
dec
jg
movsb
jmp
fwait
pop
outsl
int
cmpsb
inc
inc
jns
xor
xorb
mov
mov
pushw
in
jp
add
setg
pop
mov
je
jp
shl
push
mov
hlt
fwait
clc
sbb
adc
mov
in
jmp
fmull
roll
lods
sbb
cli
sbb
dec
push
shlb
dec
aas
push
in
or
out
xor
push
jno
jo
mov
gs
xchg
fs
pop
das
insl
mov
jecxz
movsl
ffreep
shl
inc
mov
inc
sbb
hlt
aam
leave
lret
xchg
xchg
jle
or
jl
cs
popf
jmp
pop
aam
inc
or
fcomp
jb
ljmp
sbb
imul
mov
add
movsb
stos
addr16
mov
lock
cld
ds
dec
test
sbbb
mov
inc
push
es
mov
push
xchg
pop
pop
xchg
fsubs
in
in
ja
pop
jb
cltd
pop
cltd
cs
movsl
pop
dec
add
cmpsb
in
or
or
cwtl
cwtl
add
sub
and
pop
and
mov
cltd
push
pop
pop
push
stc
outsb
jp
push
inc
mov
add
addr16
nop
sbb
fisttps
mov
and
pop
add
xor
repnz
xchg
inc
pop
cmp
push
aad
mov
out
add
mov
in
sub
sbb
lcall
test
lcall
in
scas
mov
lret
push
fwait
pop
xlat
outsb
testb
cmpsb
sahf
pop
add
pop
int3
leave
pop
repz
scas
push
cmp
jge
cltd
gs
sbb
mov
lods
leave
xlat
adc
inc
into
cltd
and
ja
and
adc
and
jg
adc
cwtl
and
in
icebp
shr
add
jbe
hlt
ss
fisttps
mov
std
and
int3
add
in
sbb
xor
rcl
mov
movsl
rorb
out
mov
call
imul
mov
and
mov
pop
imul
mov
jl
sbb
jl
daa
fwait
and
xor
mov
jne
lods
popf
in
adc
mov
adc
std
or
add
das
cld
arpl
flds
imul
fmuls
jne
inc
dec
jmp
add
imul
inc
inc
jl
nop
mov
dec
lea
dec
sub
jns
movsb
xor
sub
adc
dec
push
and
stos
mov
loope
mov
and
pushf
popa
or
repz
gs
and
nop
ljmp
mov
pop
push
mov
dec
negb
xchg
adc
sub
shlb
and
mov
dec
add
xchg
in
xchg
orb
or
in
adc
xlat
inc
lcall
and
and
mov
pushf
sti
adc
mov
add
dec
fiadds
jp
lcall
stc
push
jae
idivl
roll
scas
pop
in
imull
push
sahf
xor
or
xchg
or
pop
scas
mov
scas
jge
pop
push
insb
mov
xchg
iret
jecxz
sub
gs
and
add
andl
in
jp
aas
push
sub
lods
mov
lods
in
mov
xchg
xchg
jae
les
stc
ret
test
cmpsl
in
xchg
ret
push
and
in
push
or
jae
out
inc
addr16
daa
push
lcall
cmpsb
add
xchg
or
mull
dec
imul
call
mov
or
add
scas
hlt
mov
js
and
sbb
adc
scas
inc
scas
movsl
mul
pop
push
pop
repnz
pop
jmp
sbb
subb
or
movsl
stc
push
notb
ds
les
jmp
les
jae
xchg
outsb
or
in
pop
imul
or
jo
sub
push
sub
jmp
mov
lods
aas
jmp
aad
add
sahf
mov
and
pop
nop
jae
sub
negb
in
stos
jno
ds
cmp
push
inc
lret
outsl
lahf
daa
jge
push
adc
addb
and
fnstenv
adc
outsl
sbb
lret
fwait
daa
mov
sbb
inc
add
mov
enter
inc
fistpll
les
iret
rsm
fildl
add
outsl
xchg
or
test
mov
nop
call
push
test
fwait
call
in
pop
dec
in
sbb
icebp
subb
je
mov
imul
sub
sub
imul
subl
xchg
xchg
cmp
inc
sub
and
mov
popf
ss
sbb
movsb
lret
xchg
lahf
addr16
divl
pop
pop
cs
pusha
fcomip
bound
ja
pop
lahf
adc
add
push
mov
repz
mov
pusha
icebp
ss
mov
imul
fmuls
or
sti
sbb
movsb
popf
fmull
jle
cli
mov
data16
push
loop
int
sub
dec
mov
mov
adc
cmpsl
jne
xor
call
out
mov
and
mov
dec
aad
sbb
aad
mov
out
ret
xlat
push
cmc
enter
cwtl
or
pop
or
incb
repnz
mov
mov
xchg
lods
cmp
push
dec
pusha
cmp
and
dec
insb
icebp
insl
test
je
iret
testl
mov
imul
fisubl
sbb
or
dec
mov
not
add
jbe,pn
inc
movsb
jns
cmp
in
inc
push
xchg
push
inc
inc
and
jns
sbb
lret
daa
aad
mov
gs
push
jae
loop
or
mov
sub
stos
in
mov
inc
dec
jnp
sub
sahf
repnz
das
inc
pusha
lods
daa
mov
inc
push
push
pop
je
fstl
xchg
scas
cmc
leave
popa
sub
loope
sbb
xor
and
lock
dec
push
fidivl
daa
outsl
push
add
test
incl
mov
cmp
sbb
mov
and
rolb
cmp
sarl
jp
int
ss
or
ss
iret
mov
pop
shlb
imul
sub
cmp
scas
xor
addr16
mov
sub
leave
jl
test
inc
cld
push
imul
in
push
xchg
and
dec
dec
pusha
gs
cmp
aam
jp
data16
or
jne
jno
cli
push
mov
mov
jp
pop
gs
fisubrs
out
cli
ljmp
ja
and
bound
in
jecxz
sub
mov
jae
and
int
incb
jmp
push
dec
sub
stos
and
adcb
jbe
pop
cmp
mov
sar
xchg
add
mov
cmp
addr16
xchg
adc
mov
xchg
jb
xchg
aaa
sub
in
cmp
inc
sbb
inc
out
adc
neg
fs
push
into
je
pop
jmp
xchg
test
pop
popf
sub
jmp
pop
or
push
push
xor
jae
pop
xchg
cmp
test
jne
push
cwtl
jns
daa
add
nop
xchg
popa
cmp
ja
fldcw
or
bound
movsb
jb
lahf
mov
ja
incl
addr16
aaa
pop
mov
mov
aas
rorb
sbb
jl
repnz
hlt
sti
add
mov
xlat
sbb
cwtl
ret
xlat
dec
insl
push
popa
cwtl
lcall
es
and
shrl
sbb
pop
in
shrl
pop
push
insl
sub
xchg
jne
inc
push
push
add
and
test
adc
add
stos
sub
pushf
repnz
dec
cmp
sbb
pop
push
inc
mov
adc
insb
ja
cmc
hlt
leave
lret
mov
sbb
sbb
in
push
mov
je
xor
cmpb
ljmp
jbe
mov
pop
adcb
sub
test
pop
and
arpl
push
jns
ss
roll
mov
shlb
leave
xor
aas
in
cli
jge
in
pop
movsb
gs
or
shr
mov
shlb
lahf
ljmp
mov
jae
sbb
xchg
mov
dec
clc
mov
mov
jle
mov
in
and
sub
aas
jnp
lret
adcl
jae
out
mov
dec
cmp
jno
mov
mov
xchg
cwtl
mov
pop
lds
out
lods
inc
mov
subl
and
jne
mov
mov
popf
aad
stos
xchg
std
ds
dec
and
mov
fwait
in
sarb
daa
test
sbb
jge
xchg
or
lods
push
loop
xchg
xchg
push
negb
int3
out
icebp
lret
incb
stc
ljmp
mov
push
std
lods
adc
mov
jne
jle
jge
xlat
pop
out
lock
jns
pushf
cs
and
ret
cli
out
popf
in
jb
clc
or
outsl
stos
adc
sbb
push
inc
fdiv
sahf
inc
fidivrl
mov
int
add
mov
aaa
repnz
xor
test
lock
fcompp
dec
scas
cli
fwait
insb
stc
sub
into
nop
push
ffreep
mov
cmp
inc
push
jmp
imul
dec
cmp
pop
cmpsl
test
or
cli
cs
xchg
inc
jg
inc
push
inc
sub
ret
xor
sti
sahf
dec
jle
mov
inc
int3
ss
adc
rcrl
mov
push
out
push
xchg
fs
mov
in
lahf
out
mov
lods
lea
sbb
mov
jge
push
and
fcompl
push
inc
push
pop
and
xchg
notl
jg
loopne
sub
scas
or
mov
xor
adc
pop
popf
pop
mov
dec
mov
int
pusha
jo
in
add
aad
mov
mov
push
scas
fs
inc
shr
dec
aaa
shl
xchg
imul
pusha
std
dec
and
inc
pop
nop
push
push
in
inc
xchg
aam
out
std
or
leave
scas
in
sbb
xor
add
fistl
xor
je
push
jmp
mov
in
mov
pop
mov
or
cmp
xchg
decl
jnp
out
jg
dec
cmp
fsubs
or
out
mov
cs
cmp
mov
xchg
jbe
outsb
jb
mov
dec
cltd
add
inc
pop
mov
jecxz
push
lods
fidivs
and
imul
loope
pinsrw
mov
bound
mov
jp
movsb
fmull
imul
outsl
lret
leave
ret
popl
repz
add
sbb
mov
jp
sbb
push
xor
sbb
mov
mov
mov
mov
sahf
xor
sar
orb
shlb
loopne
add
cmpsl
jg
popa
mov
out
and
fsub
push
ficompl
push
mov
xchg
sbb
imul
aad
pushl
cwtl
push
lea
rcr
adc
mov
jp
test
daa
sbb
cld
push
dec
inc
fwait
inc
mov
xor
es
xchg
ror
and
rorl
rorl
adc
les
enter
cmpsb
bound
out
mov
stos
jae
lds
adc
notb
and
mov
hlt
sub
mov
imul
add
popf
jge,pt
adc
push
sbb
push
push
and
movsb
fiadds
pop
add
jnp
out
adc
cli
inc
xchg
mov
les
into
aaa
inc
pop
pop
aad
clc
testl
sbb
fisubrl
pusha
movsb
push
hlt
cmc
inc
and
or
pusha
sti
in
mov
and
sarb
movsb
ja
scas
mov
and
adcb
push
dec
mov
jno
xor
mov
dec
jmp
cmp
push
push
arpl
iret
repz
adc
adc
dec
imul
lcall
push
in
push
lea
or
xchg
pop
mov
jo
inc
push
lods
ret
mov
rolb
arpl
movl
push
into
into
push
jno
sub
call
arpl
stos
inc
push
cmpsb
mov
dec
stc
cld
and
add
xchg
inc
je
shrl
lea
out
or
jl
cli
mov
pushf
idivb
jl
and
pushf
ret
xchg
xor
out
mov
mov
jecxz
adc
add
mov
movsl
pop
add
jne
sti
ret
pop
pop
test
jae
fildl
pusha
les
imul
popa
push
movl
dec
enter
arpl
sarb
mov
imul
xorl
inc
mull
xor
pusha
or
aad
mov
enter
and
ljmp
fisubl
stc
insl
and
test
ret
xchg
ja
jge
das
cmp
xchg
xchg
mov
jge
arpl
sbb
sbb
inc
nop
aam
repnz
jle
sahf
and
into
sbb
inc
jbe
cmp
xor
jmp
out
push
leave
loop
ret
out
mov
stc
inc
or
bound
mov
jns
pop
mov
sti
adc
xchg
sub
icebp
mov
pop
popa
jne
repnz
stc
or
aaa
or
jbe
add
outsl
mov
imul
in
mov
and
ret
ret
movsl
lods
adc
test
setb
ljmp
lods
mov
je
sub
icebp
testb
insb
int
add
insl
out
adc
repz
inc
mov
enter
inc
mov
mov
imulb
dec
lahf
adc
iret
cmp
dec
lahf
test
int3
push
pusha
stos
xorb
sub
inc
jmp
ljmp
fcmovnu
xchg
movsb
sbb
xchg
jl
ret
dec
pop
cmp
pop
mov
in
inc
negl
fildl
shrb
dec
fidivl
xchg
pop
pop
in
jb
inc
imul
push
sub
in
jmp
push
popa
out
fldcw
xchg
in
iret
cs
popl
xorl
push
adcl
je
sub
negl
pushf
roll
aaa
shlb
outsb
add
mov
stc
aas
cld
or
or
mov
cmp
sti
jbe
cmp
cld
outsb
fists
loop
cmp
mov
mov
mov
sbb
dec
xchg
push
xchg
sbb
je
cmpsl
shrl
mov
inc
out
sbbb
xor
stos
lock
and
inc
or
cmp
pop
je
ljmp
pop
cmp
cmp
stos
enter
inc
aam
mov
cmp
fdivs
dec
mov
sub
xor
enter
adc
in
stc
es
stos
mov
push
mov
stos
inc
pop
bound
movsl
mov
cmp
pusha
fs
lock
add
push
pushf
pop
mov
push
sbb
pop
stos
sub
sub
mov
pop
or
stos
clc
jae
enter
in
xor
nop
mov
das
filds
xchg
fs
dec
dec
in
divb
dec
jle
pop
push
out
mov
ljmp
test
xor
mul
xchg
ds
ret
add
cli
lahf
dec
in
jno
mov
xchg
mov
add
ljmp
xor
in
in
adc
mov
adc
cmp
fistl
mov
inc
pushf
sti
jmp
cmp
dec
push
call
xor
ds
push
add
fidivrl
jnp
test
fisttpll
add
jnp
repz
mov
testb
mov
jl
push
xchg
xlat
xchg
xor
add
push
sbb
xlat
lods
mov
les
scas
xchg
pop
mov
gs
iret
out
dec
push
xchg
icebp
mov
out
add
add
stos
gs
or
push
sbb
push
lcall
jbe
loopne
jbe
inc
xchg
cmp
and
xchg
inc
jge
add
pop
mov
rorl
fiaddl
popl
cmp
xor
iret
jp
out
dec
test
inc
mov
stos
inc
mov
mov
aaa
or
mov
mov
inc
leave
xor
sarb
sub
and
js
sub
cltd
pop
push
icebp
test
lods
cmpsl
mov
ljmp
cmp
sti
mov
jae
mov
fcoms
cmp
or
mov
dec
test
push
aam
jge
jbe
sbb
int3
push
imul
xor
outsb
cwtl
cmp
out
cmp
out
dec
shr
inc
cmp
dec
clc
push
insl
mov
xor
xlat
xor
pop
push
xor
iret
and
add
xchg
fwait
xchg
fs
or
add
fdivrl
mov
fistps
dec
push
dec
xchg
push
jno
pop
pusha
pop
lds
mov
push
test
scas
out
adc
xor
mov
iret
movsb
xor
cmp
sub
movsb
rorl
leave
dec
push
imul
push
inc
jne
cmc
dec
pusha
pop
sub
inc
jbe
xchg
aam
dec
fldl
push
jg
push
and
sub
inc
fwait
cmpsb
push
leave
xor
or
sbb
or
adc
sub
jae
sbb
push
notb
add
mov
push
clc
scas
pop
fiaddl
into
lock
inc
jge
mov
pushf
stos
jmp
pusha
aam
jp
cmp
adcl
jp
xor
ljmp
imul
das
push
sub
jg
mov
add
scas
ret
iret
cli
mov
push
mov
or
cmp
int
mov
cmpsb
shr
pop
in
insl
icebp
aaa
cmp
jle
sub
cmp
insb
fldt
jb
dec
into
stc
adc
aaa
int3
cmpsb
xchg
cmpsb
into
sbb
cmp
icebp
xchg
stos
add
call
xor
cmpl
inc
add
jge
inc
push
jl
lahf
lret
iret
pushf
adc
mov
fs
arpl
xor
sbb
dec
loop
aas
repz
pop
in
cmpsb
insl
ffree
xchg
mov
pop
scas
xchg
push
in
loopne
cltd
adc
jl
push
adcb
out
loope
push
popf
pop
sub
mov
push
je
inc
test
sbb
mov
lock
enter
mov
test
pop
ja
cs
push
and
mov
hlt
cmp
fisubs
and
imul
addb
aas
sbb
or
push
mov
dec
mov
mov
fisubrs
je
jo
lods
mov
out
out
jne
movsl
aaa
pop
arpl
test
inc
cltd
pop
shlb
testl
or
stc
test
and
fmuls
iret
push
cli
std
icebp
mov
cs
jmp
push
push
or
ret
sbb
sbb
sub
test
mov
xchg
sbb
je
mov
dec
out
jmp
daa
xchg
mov
scas
cmpb
or
cmp
push
xchg
in
lea
add
mov
icebp
cmpsl
xchg
sbb
insl
xlat
jg
jbe
cmp
enter
lods
xchg
aam
mov
push
iret
mov
sub
xchg
or
pop
orl
pushf
jns
add
outsl
and
loop
push
sahf
pop
add
mov
movsl
cmc
nop
jae
dec
shl
mov
inc
mov
popf
jp
or
inc
outsl
lock
jge
rorl
add
jb
xor
fwait
pushf
sub
outsb
aad
stos
fildl
pop
ret
in
adc
adc
push
icebp
lock
mov
js
aam
imul
adc
cmp
in
adc
mov
ss
inc
out
inc
jmp
xorl
lock
aas
dec
inc
xchg
fs
pop
cli
imul
jle
add
repnz
dec
xchg
rclb
fs
xchg
psrld
adc
scas
sub
rclb
inc
pop
xchg
mov
xchg
inc
sbb
add
cmp
bound
add
adc
and
ljmp
fidivrl
shll
mov
xor
jne
test
sti
out
mov
imul
in
xchg
test
or
loop
mov
rcll
xorl
jb
out
fstpl
xchg
mov
xchg
adc
sub
jg
fistpl
cwtl
inc
movsb
sub
and
insb
enter
add
int
repnz
imul
test
sbb
fldenv
add
in
lods
cwtl
xor
data16
lret
pop
iret
leave
in
orl
mov
push
ficompl
ficompl
ret
mov
test
das
inc
cmpsb
ret
jmp
push
and
sbb
cmp
ret
in
dec
mov
dec
rolb
cmp
fwait
nop
inc
xchg
push
or
out
scas
aam
hlt
xchg
sub
adc
insb
mov
lcall
cmc
cmp
leave
dec
into
mov
adc
mov
sbb
push
inc
adc
mov
cmp
push
out
lcall
push
and
sub
pop
rorb
sub
add
pop
std
pop
mov
popf
aaa
mov
imul
jle
xor
or
imull
and
xchg
pusha
sub
ficomps
fcmovnb
mov
dec
adc
imul
or
xchg
adc
jmp
ficompl
dec
shrb
push
stos
cmpsb
ret
addr16
cmp
mov
dec
pushf
sub
movsb
insl
push
mov
scas
bnd
jae
test
ljmp
adc
call
xor
into
jo
stos
xor
sub
push
xor
ret
pop
sbbb
xor
imul
xor
insb
push
lahf
push
mov
mov
and
je
fsubl
subl
sub
cmp
mov
adc
xchg
in
roll
pusha
sbb
fiaddl
int
stos
aam
daa
sbb
pop
mov
outsb
jns
inc
mov
dec
sub
cmc
sti
aam
rcl
pusha
pop
sub
int
xchg
popf
das
pop
xchg
das
push
push
jb
mov
jno
sbb
add
mov
frstor
dec
test
aam
adc
ja
jmp
pop
and
and
mov
aad
cmp
je
arpl
fsubl
ss
xchg
or
fnstenv
leave
jecxz
or
cmp
movsl
xchg
lahf
lods
js
ds
unpckhps
add
sub
idivb
test
cmp
push
and
lahf
imul
test
and
push
xchg
sti
test
and
push
fldt
cmp
lret
and
jmp
jge
pop
or
adc
fistpll
fdivs
sub
push
data16
dec
pop
mov
adc
jle
xchg
xchg
sbb
std
ret
sahf
lahf
repnz
pushf
inc
sbb
fsub
pusha
mov
jge
add
xor
insb
push
repz
cltd
xor
das
cmp
xor
imul
out
mov
mov
or
cmp
jmp
loopne
inc
mov
cmpsb
test
fiaddl
lret
xchg
in
test
movsb
mov
into
int
loop
adc
pusha
sub
xchg
xchg
lcall
dec
int
repnz
sub
ja
dec
pop
and
pop
sub
pop
sbb
lret
mov
ret
xor
adcl
repz
lods
popf
xor
sub
add
xor
notl
and
icebp
inc
push
adc
mov
inc
mov
xchg
dec
xor
add
xchg
movsl
inc
int3
xor
lret
popf
pop
out
cmp
push
test
iret
push
fs
add
sub
and
jns
jp
mov
das
xor
fiadds
pop
data16
insl
into
mov
ret
mov
shll
jo
cmp
jg
sub
popa
lods
xor
adc
aas
cwtl
dec
sub
dec
cmp
cmp
aam
jge
jge
rcrb
xor
call
inc
xor
bound
or
es
mov
inc
adc
push
inc
clc
mov
lea
mov
hlt
jae
cmpsl
pop
jo
add
test
icebp
adc
xor
mov
ja
push
call
push
arpl
mov
xchg
jp
push
lea
push
xlat
stos
xor
sub
movsb
inc
mov
push
jmp
push
mov
ljmp
mov
push
aad
pop
xchg
pop
mov
daa
jb
xor
pop
dec
pop
sbb
or
xor
inc
shl
jae
pop
aad
std
xor
es
mov
outsl
in
xor
xor
xor
xchg
icebp
lock
inc
stos
pop
adc
xor
and
fs
jo
jae
sahf
mov
fs
ret
fsubl
ljmp
mov
je
mov
xchg
rclb
lcall
mov
nop
jbe
push
sbb
shrb
mov
scas
jl
sbb
int3
mov
mov
pop
daa
and
lods
cmpsb
adc
push
jns
add
in
or
les
es
ficoms
dec
imul
xchg
movsb
pop
movsl
push
es
inc
mov
or
adc
imulb
movsl
ss
in
push
mov
ret
jecxz
in
inc
clc
fcomip
mov
cmp
mov
pop
jbe
xchg
test
pop
and
push
flds
test
rcll
ret
cld
mov
add
and
cltd
ljmp
adc
popf
lcall
push
nop
out
dec
leave
es
sbb
mov
movsl
mov
dec
and
inc
mov
jne
add
gs
fadds
pop
int3
fs
adc
das
lock
rol
dec
lods
mov
xchg
and
pop
jge
sbb
scas
mov
cwtl
jae
sub
outsl
mov
xor
sbb
pop
adc
enter
push
mov
mov
mov
jns
movsl
faddl
clc
scas
in
lea
in
out
cld
adcl
fisubrs
les
orl
cmpsl
xor
outsb
test
push
dec
and
mov
fcomps
add
xor
mov
mov
in
clc
cmpsb
or
sarl
jae
daa
loopne
xor
test
je
mov
mov
or
push
mov
dec
cmc
test
mov
mov
cmpsl
xor
adc
mov
jmp
jle
jne
push
push
cltd
ljmp
leave
push
or
out
dec
inc
jmp
xlat
push
clc
xchg
std
xchg
sbb
pop
aam
sarl
out
fldl
mov
pop
fnstenv
stos
andb
cmp
aam
fs
hlt
ret
lods
xlat
addb
pop
jb
sub
flds
test
jbe
push
int3
adc
jne
fisubrl
shlb
stos
fcoml
adc
jb
in
daa
rcrb
xchg
loope
jno
clc
imul
sub
je
lret
dec
jge
ljmp
int3
aad
cmp
or
fwait
cmpsl
loopne
jno
pop
inc
imul
sbb
iret
cld
mov
push
mov
xor
mov
mulb
imul
mov
pop
pushf
addb
mov
dec
adc
cld
mov
daa
jns
add
jmp
or
dec
xchg
or
les
jno
cvtps2pd
and
and
shrl
pop
mov
nop
repz
daa
cmp
mov
rclb
mov
add
test
rcr
scas
fldcw
push
aam
loop
pop
orl
aad
inc
mov
sub
add
sbb
mov
rcr
sub
or
cwtl
ljmp
mov
in
std
jne
sahf
xor
xor
lods
js
sub
mov
mov
iret
dec
arpl
jp
inc
push
ret
out
hlt
add
aas
adc
sbb
mov
in
push
jp
push
cmp
and
int
negb
dec
fcomps
out
ror
movsb
sbb
fimuls
sbb
mov
sub
inc
fwait
push
jbe
addr16
add
cltd
jns
outsl
flds
push
ret
sub
mov
xchg
mov
aad
cmp
sub
shll
ljmp
js
sbb
inc
stos
jl
xchg
mov
ss
rorl
push
mov
adc
mov
daa
push
hlt
lds
adc
mov
jg
in
out
addr16
jne
scas
or
jmp
popf
cmp
adc
push
cli
inc
test
and
fucomi
mov
xchg
cld
xlat
mov
call
rcrb
outsb
or
dec
jmp
xor
and
jnp
or
pop
adc
cltd
test
fcom
ljmp
xchg
mov
sbb
xor
mov
sub
jno
push
cld
inc
sub
dec
in
and
hlt
mov
pop
fisttps
outsb
adc
push
lea
push
lahf
pop
lds
jl
adc
sub
mov
fnsave
or
and
xor
and
ja
in
cmpsl
mov
adc
xchg
push
rcrl
mov
and
lret
mov
ds
adc
pop
shrl
jge
dec
push
ret
mov
mov
cld
sbb
mov
icebp
leave
jbe
pop
ffree
mov
dec
and
cli
sub
cmpsl
sarb
ficoml
adc
in
dec
or
repnz
aaa
mov
loop
xchg
decb
mov
push
dec
rolb
adc
inc
sbb
aad
imul
addr16
outsb
cwtl
xlat
lods
cmc
push
into
pop
mov
sahf
movsl
fistps
cmpsl
insl
xchg
adc
xchg
inc
in
mov
popf
xchg
mov
aaa
push
iret
xor
jle
test
sub
mov
pop
loope
incb
out
push
inc
xchg
mov
cwtl
orl
inc
adc
or
lds
out
adc
ja
cmp
aaa
fdivrs
push
andb
jle
sub
imul
cmc
cmp
ret
ss
pusha
nop
push
xchg
in
loope
push
jmp
lock
xchg
pop
outsl
mov
mov
cltd
ja
jne
aad
ret
shl
cmp
shll
daa
mov
pop
pop
cwtl
mov
outsb
jg
into
mov
inc
cwtl
jo
sbb
lret
jno
jae
nop
add
imul
ja
xor
dec
and
jo
push
mov
sub
jmp
and
adc
jne
fildl
mov
xorb
jecxz
pop
movsl
xor
inc
gs
sahf
pop
clc
cmpsb
ljmp
pop
or
push
popa
mov
mov
push
scas
xchg
movsb
std
mov
mov
loop,pt
push
xor
xchg
mov
in
and
movsb
sbb
pusha
mov
inc
mov
rorb
daa
jmp
adc
xchg
decl
mov
mov
jecxz
sub
loop
cmp
mov
popfw
cmpsb
addr16
ss
mov
movsb
push
and
mov
push
or
xlat
leave
jo
mov
jge
mov
scas
sbb
pop
call
das
adc
loope
mov
in
or
push
sbb
lcall
or
push
repnz
or
xor
ret
and
push
enter
orl
ja
clc
ss
push
inc
pop
ror
fwait
shrb
das
dec
test
or
pop
cwtl
push
xchg
cmp
mov
lahf
rolb
mov
pop
cmc
xchg
pop
arpl
sub
mov
int
push
xor
out
jne
loop
mov
ljmp
addr16
int
lock
dec
xchg
inc
test
push
cmp
nop
aas
add
gs
lods
loopne
xchg
xor
cmp
pop
loope
xor
inc
jae
or
jecxz
clc
mov
adc
repnz
sbb
insl
je
add
clc
imul
cwtl
jne
jae
sub
mov
lds
cwtl
ficoms
test
jae
dec
popaw
sbb
cmp
jae
lcall
pop
push
mov
scas
rorl
mov
xchg
xchg
addr16
movsb
sbb
lds
fwait
inc
iret
loop
movsb
insl
pushf
cmp
movsb
cli
in
add
shrl
call
and
fsubrl
sbbb
inc
out
mov
lods
jb
jae
rcl
outsb
loope
test
cld
aad
and
push
jecxz
mov
add
and
mov
sub
sbb
daa
outsl
std
aam
movsb
lods
fildl
mov
push
cmp
js
mov
imul
icebp
daa
sbb
push
mov
neg
sbb
mov
inc
and
pop
daa
rcr
pop
jnp
push
push
push
call
sbb
out
lock
es
push
xor
mov
mov
jl
xchg
mov
push
mov
ret
das
adc
jo
les
inc
xchg
and
inc
pusha
daa
fsubrs
lret
push
clc
push
inc
push
popa
add
stos
in
hlt
inc
outsb
sub
push
xor
lcall
push
sbb
xor
push
test
lcall
push
mov
sbb
shll
fnstenv
xchg
add
jbe
xchg
dec
lret
notl
add
insb
stos
sub
icebp
int3
test
xlat
adc
repnz
push
mov
dec
xchg
or
jle
popa
xchg
push
movsl
sbb
push
mov
in
mov
cltd
ljmp
stos
dec
rorb
loop
mov
daa
std
jp
lods
imul
dec
or
idivb
outsl
sbbl
loop
adc
fadds
in
cmp
pop
je
andb
mov
jns
adc
add
pop
shlb
mov
repnz
shlb
bound
add
fisttps
enter
push
push
cmp
pop
push
or
insl
aaa
xchg
push
xor
loopne
mov
mov
mov
push
cwtl
in
dec
iret
rorl
js
mov
sbb
jbe
lret
push
ljmp
daa
fildl
lea
in
mov
in
pminsw
ja
cmp
test
push
mov
in
test
add
dec
xchg
testl
lods
mov
mov
sbbb
xorb
and
mov
in
pop
ljmp
test
push
add
mov
xchg
and
dec
push
push
movsl
xchg
pop
xchg
xor
cmp
xchg
mov
decl
ret
jge
cwtl
jp
mov
out
mov
pop
lock
xchg
fisttpl
jb
inc
shlb
mov
dec
out
sub
adc
push
in
shr
pusha
lds
or
das
cs
js
aas
add
mov
sbb
gs
add
lahf
scas
and
and
dec
pop
mov
push
jp
addr16
sbb
cmc
mov
push
mov
cmp
cmpb
rcrl
sti
adc
xor
es
ljmp
out
push
aam
ss
test
jge
sub
movsl
push
imul
inc
dec
mov
decb
xor
movsl
dec
wbinvd
mov
loope
pop
ret
lcall
ljmp
pop
or
and
shll
and
pusha
dec
repz
mull
and
or
adc
cmc
test
rep
mov
and
dec
dec
mov
pop
lcall
mov
jl
lock
daa
add
call
sti
jne
mov
cmp
push
dec
int
pop
xor
enter
test
jo
ss
fiaddl
nop
sub
jg
jecxz
push
mov
imul
std
jno
imull
call
mov
push
inc
sbb
insb
cld
bound
popf
jmp
adc
mov
repnz
mov
push
mov
or
dec
cmp
imul
out
sbb
test
enter
inc
adc
aam
inc
jb
aas
sbb
outsl
pop
push
xchg
fmulp
lods
push
mov
out
mov
lret
icebp
std
xchg
push
inc
inc
or
xchg
mov
daa
mov
popa
add
dec
scas
outsl
push
mov
pop
or
stos
xor
jns
leave
mov
jg
cmp
mov
mov
insb
pop
arpl
test
je
mov
es
push
popf
cli
pop
sahf
dec
push
xchg
mov
sub
xchg
or
fs
mov
lods
cmp
js
lret
aaa
lea
mov
scas
mov
sbb
arpl
lods
les
sahf
pushf
test
or
lret
add
mov
inc
ret
sarl
pop
mov
cmp
repz
add
lock
je
aaa
std
pop
pop
and
push
outsb
push
xchg
cmp
xlat
sbb
adc
xchg
out
mov
mov
sub
jecxz
mov
ss
pop
popa
js
mov
cmpsb
insb
loop
jo
std
ret
aas
enter
lret
cmp
hlt
xchg
pushf
aas
imul
inc
int
in
mov
lcall
test
hlt
sub
clc
das
jb
data16
scas
dec
in
xor
xor
std
pop
lcall
mov
cmp
jmp
push
imul
leave
lds
outsl
cmp
xor
or
aam
cmp
jnp
sub
pusha
mov
das
lret
sub
dec
gs
push
xchg
insb
mov
xor
fsubrs
jns
push
std
out
adc
mov
push
shl
jb
insl
daa
sub
dec
mov
pop
and
sbb
addr16
push
adc
aad
daa
aad
jecxz
out
xlat
int3
xchg
xor
adc
call
fiadds
mov
aam
lret
xor
or
cmp
mov
inc
aad
loopne
test
xchg
pop
pop
pop
cltd
mov
mov
adc
sti
fadds
mov
xchg
dec
test
orb
cmp
icebp
test
out
jmp
repz
ljmp
sahf
sbb
rcl
daa
int3
mov
push
adc
pop
js
movsl
daa
push
hlt
push
mov
into
xor
push
in
ss
movsl
xor
pop
xchg
cs
mov
cmc
xor
bound
mov
mov
ljmp
mov
push
lret
dec
int3
std
pop
mov
movaps
add
lea
xchg
rcrb
add
sbb
imul
push
cmp
mov
add
jno,pt
mov
jae
jmp
pop
aam
aam
xchg
movsb
out
test
push
dec
add
inc
mov
push
and
dec
pop
les
cmp
dec
dec
fidivl
call
mov
mov
cld
cmc
xlat
cmp
mov
les
fs
xchg
jmp
mov
insb
insb
add
test
mov
sbb
popa
das
inc
pop
jb
add
inc
in
lret
call
jmp
xchg
xchg
cwtl
out
push
lahf
lds
int
addr16
movhps
lahf
add
stos
int
aad
add
pusha
or
lea
popf
mov
in
add
aas
ss
dec
cli
outsb
cmp
pop
sti
nop
clc
or
dec
jae
scas
aas
cmpsl
dec
xchg
scas
popa
xor
xchg
aam
xlat
loop
aad
gs
jg
and
sub
test
in
pusha
sub
adc
test
mov
sbb
mov
int
push
cmpsl
out
mov
push
xchg
mov
sub
mov
cmpl
and
adc
lock
es
aaa
lods
sub
test
test
insb
mov
inc
push
xchg
insl
rclb
push
cwtl
sti
orb
std
test
xor
imul
inc
mov
repz
out
js
ds
jne
adc
push
dec
inc
xor
add
pop
push
mov
sbb
ja
sub
sarb
jl
jp
rcll
data16
sti
sub
cs
inc
or
scas
pop
mov
sbb
push
cmp
pushl
cmp
stos
imul
and
mov
xor
dec
or
jne
jbe
loop
stc
arpl
jne
mov
rcll
xor
mov
fucomi
loope
mov
mov
jp
outsl
jmp
or
pop
mov
dec
and
repz
loop
pop
sbb
fs
fisubl
imul
dec
shlb
icebp
aas
cmc
cmpsb
sub
addr16
aam
mov
push
xor
adc
outsb
test
cmp
out
sbbl
adc
daa
fldl
jg
or
mov
scas
jg
adc
cmp
dec
jle
data16
movsb
pop
mov
push
mov
jns
jne
int
sbb
rorb
jbe
push
and
movsb
mov
dec
test
testb
loope
push
push
in
shlb
fcoms
cmp
js
roll
loopne
pop
cltd
jns
push
dec
jne
jnp
jmp
adc
rcl
inc
jno
xchg
xor
xor
or
cwtl
and
mov
lods
outsl
shrb
mov
push
lds
cmp
scas
dec
orb
pop
das
in
xor
pop
insl
mov
rolb
mov
dec
or
ja
je
jge
scas
mov
mov
pop
enter
mov
xchg
dec
aam
add
push
and
jg
enter
or
sahf
loope
mov
and
xor
push
pop
cmp
out
rol
scas
push
lahf
pop
jne
cmp
sbb
and
or
jle
outsb
outsb
js
lret
mov
mov
push
call
dec
mov
movsb
inc
das
sbb
pop
mov
bound
push
xchg
lds
movsl
cmp
dec
inc
push
subl
push
jmp
sbb
or
or
push
imull
xchg
sub
or
nop
jle
icebp
cmp
and
repnz
aaa
icebp
dec
jle
test
jecxz
mov
rcrl
rcrb
fs
pop
inc
mov
pop
dec
mov
lret
mov
enter
test
sub
push
xchg
inc
lret
push
dec
inc
out
psrlq
pop
nop
dec
stc
mov
push
cmp
pop
xchg
icebp
into
jnp
mov
xor
jp
bnd
pop
lcall
pop
sahf
daa
dec
inc
mov
add
adc
aaa
or
or
push
cwtl
fidivrs
or
scas
sbb
call
jae
cltd
jle
jmp
sub
jae
sbbb
movsb
jb
cmp
add
aad
gs
repnz
fdiv
outsb
call
loope
push
out
xchg
cmc
cmp
mov
cmp
pop
jp
push
jge
hlt
add
pusha
mov
nop
inc
dec
jg
ss
or
adc
and
pop
and
in
lods
data16
lds
nop
andb
cmp
cmp
sub
leave
mov
test
xor
int3
sbb
add
push
stc
aad
sbb
sbb
cwtl
mov
jle
dec
icebp
xor
mov
xchg
sbb
xchg
jle
pmuludq
ljmp
scas
jbe
inc
dec
js
jmp
mov
and
xor
mov
lea
inc
lea
negl
mov
or
popa
mov
hlt
das
xor
mov
les
mov
mov
xor
or
call
jae
pop
or
xchg
lret
mov
cmp
in
sub
push
dec
hlt
stos
leave
dec
stos
movsb
push
cld
inc
xchg
xor
insb
inc
push
xor
cltd
insl
dec
inc
add
insl
repnz
cmp
cli
dec
popa
pop
or
hlt
loope
shlb
popa
sub
movsl
or
jbe
xlat
call
repz
or
sub
push
testl
pop
lcall
arpl
mov
jle
jg
mov
fsubrl
loop
pop
pop
sub
in
popf
xchg
xor
mov
inc
mov
pusha
test
shrb
xchg
adc
insl
mov
out
xchg
push
test
xor
jae
sbb
je
inc
nop
inc
movsl
adc
and
mov
jp
xchg
call
jge
mov
dec
xchg
lods
adc
cmp
jmp
mov
dec
stc
adc
jmp
push
or
push
mov
push
cmpsb
stc
xor
sbb
pushf
repnz
fnstsw
pushf
push
in
mov
leave
mov
cmpb
mov
pusha
adcb
andb
mov
xchg
dec
ret
jge
stos
out
mov
add
ljmp
xchg
insl
pop
sbb
push
lock
movsb
mov
xchg
adc
jp
xchg
aam
xchg
fsubrs
mov
les
dec
xor
mov
inc
das
mov
add
jg
mov
les
pop
cltd
sbb
in
in
xchg
sbb
adc
push
add
rorb
xor
insb
insb
dec
pop
cmp
push
hlt
or
out
clc
scas
std
jecxz
ja
xlat
daa
cmpsb
lock
int
outsb
out
lret
pop
lea
sub
daa
adc
fs
sbb
sub
cmp
cmp
lret
lret
xor
cmp
fisttpll
les
vmaxsd
sub
cmc
outsb
mov
push
mov
adc
clc
push
enter
lock
mov
in
dec
adc
in
into
aad
jge
call
add
mov
sbb
mov
les
xchg
and
adc
dec
data16
rcrl
jmp
sarb
sarl
out
insb
lock
call
sub
out
xchg
xchg
xchg
test
lods
adc
lds
xchg
sbb
push
ss
je
scas
jg
outsl
movl
nop
push
imul
fcom
cld
mov
jae
push
int3
push
push
mov
adc
insb
rcr
pusha
cmp
scas
mov
mov
cmp
mov
popa
movsl
int
pop
loop
push
jp
ja
leave
int
stos
xchg
pop
xor
les
int
adc
fdivp
or
adc
mov
xadd
and
push
cld
cli
lods
pusha
cli
pop
pusha
mov
gs
pushf
cmp
icebp
arpl
dec
jb
mov
cmpl
dec
mov
aad
jbe
aam
mov
insl
pop
adc
test
lods
inc
pop
xchg
cmp
aad
pop
insb
jbe
sarl
mov
lcall
jge
cmpsl
daa
cltd
pop
rclb
mov
lret
call
ds
adc
arpl
outsl
mov
in
sbb
mov
jg
xchg
test
dec
inc
inc
sub
pop
std
js
xchg
cmp
dec
fwait
inc
inc
pop
aad
dec
jae
movsl
or
sbb
mov
and
mov
ljmp
jae
lahf
dec
add
jecxz
xchg
xor
pop
push
stos
ret
fisttpll
mov
loope
adcl
lret
lret
xor
ljmp
sub
lret
enter
subb
mov
pop
sahf
or
aas
setle
push
out
dec
xlat
dec
xchg
pop
std
sbb
inc
stos
popa
in
or
or
cltd
fildl
pusha
out
ja
fadd
insl
dec
jmp
jmp
pop
pop
mov
das
not
movsl
dec
into
mov
pop
stos
lock
jnp
pop
pusha
jo
iret
and
cli
mov
mov
cmp
adc
lods
xchg
sbb
lock
stc
add
mov
movsl
or
sub
push
push
push
sbb
lcall
shl
sahf
push
add
lret
xchg
xchg
js
adc
sub
inc
js
lods
in
and
sub
leave
fs
sub
cli
mov
xchg
jo
setg
push
push
lahf
ss
fistl
mov
mov
jne
inc
xor
push
cmp
pop
addr16
xchg
imul
hlt
mov
xchg
ja
push
lahf
mov
add
repz
lea
inc
mov
xor
bound
data16
pop
pop
cmp
and
jp
lcall
cmp
ljmp
push
mov
push
mov
orl
out
xor
fdivs
jecxz
repz
aad
mov
ja
aaa
fs
mov
xor
sbb
xor
repnz
pop
mov
nop
mov
push
pop
inc
les
mov
xchg
cmp
decl
cmp
ds
cmp
in
mov
aaa
lock
fmull
popa
clc
mov
mov
js
sti
shlb
int3
xor
pusha
cs
sub
ja
push
loope
pop
mov
lret
lods
inc
repz
sbb
inc
push
adc
in
dec
or
test
lret
jbe
fwait
pop
shll
or
cltd
outsb
movsb
test
add
mov
xchg
inc
ljmp
aas
int3
dec
or
cmp
test
shrb
js
xchg
call
jb
mov
es
dec
mov
add
lret
dec
jno
jns
movsb
jle
xchg
out
ss
add
dec
push
or
sbb
insl
lcall
pop
and
sbb
pop
cmpsl
movsb
xchg
call
sub
ja
les
xor
sahf
aad
lds
sub
loope
lret
dec
cmpsb
adc
sub
inc
push
test
or
out
shll
subb
addr16
or
push
add
push
sbb
incb
pop
std
xor
push
or
js
pop
or
adcb
add
out
notl
aam
stc
mov
push
les
jp
sub
test
outsl
pop
iret
loopne
lea
scas
dec
cmp
pop
push
in
dec
sub
lret
xor
jmp
data16
xchg
pop
dec
loope
shrd
mov
outsb
mov
aas
cld
cwtl
jp
or
lock
outsl
push
sbb
repz
orb
dec
inc
sub
shll
fdivl
pop
jns
xchg
pop
fisubs
adc
lds
xchg
aaa
mov
lret
pusha
loopne
dec
inc
sub
fmuls
pop
es
cltd
mov
sub
andb
jno
adc
sbb
subl
jl
xor
bound
mov
insl
or
pop
popl
cmpb
add
ja
shll
lea
mov
scas
js
jg
in
jnp
and
sub
xchg
fidivrs
or
mov
dec
insb
push
xchg
push
or
xor
mov
jge
jns
mov
xchg
out
das
dec
xchg
sub
iret
out
mov
inc
bound
xchg
pop
lret
push
loopne
xchg
push
sbb
mov
pop
push
pop
xor
aam
sub
dec
adcl
push
cmpsb
je
jmp
test
les
rcrl
or
mov
je
mov
cmp
mov
push
xchg
cmp
rclb
rclb
popf
rep
pop
mov
jbe
adc
stos
popf
mov
lret
mov
pop
pushf
jge
push
pop
cmpsb
push
or
adc
xchg
shl
std
and
cltd
push
jnp
cli
mov
add
dec
jp
sbb
rcll
sub
dec
xchg
cmp
push
and
pop
xor
fninit
cmp
sahf
push
ss
std
add
scas
xor
aad
jo
rcr
dec
and
ljmp
mov
dec
xor
les
inc
rorl
adc
mov
sti
ja
std
flds
pop
out
stos
in
fmuls
out
mov
clc
mov
push
mov
sub
push
adc
sub
mov
xchg
xchg
jl
hlt
push
dec
mov
mov
jns
test
dec
add
dec
inc
fsubrs
sub
mov
mov
xchg
das
ja
nop
sbb
and
cmp
lea
jecxz
dec
pop
das
sub
mov
out
sub
insl
lods
xor
or
fiaddl
addr16
or
mov
stos
sahf
sbb
int
in
imul
je
ja
xor
mov
loop
lods
bound
and
pushf
es
cmpsl
jnp
roll
faddl
jg
push
out
jge
stos
subb
ret
fstl
cli
cmpsl
pop
insb
mov
dec
out
ja
sbb
push
dec
mov
repz
mov
test
jae
xchg
add
loope
aad
cmp
xchg
dec
imul
pop
push
sti
std
in
and
fmuls
sbb
pop
dec
arpl
push
mov
push
subl
movsl
adc
insl
or
push
xchg
dec
aam
jnp
cmpsb
push
xorl
push
or
adc
mov
mov
xchg
xor
xchg
xor
mov
adc
cs
jno,pt
cwtl
insb
and
push
jp
dec
xchg
mov
push
in
cmp
adc
shlb
es
shr
pop
addr16
pop
sbb
mov
hlt
lea
ficoml
pop
aam
push
inc
or
popf
cmp
ljmp
xchg
fidivl
insl
ret
pop
lea
sbb
das
mov
mov
jnp
int
je
sbb
pop
ficoml
sbb
dec
push
add
dec
vpmulhw
push
mov
icebp
inc
cmp
xchg
push
fidivrl
ja
in
das
ror
or
mov
mov
stos
test
add
and
or
stos
xor
loopne
fcom
adc
adc
testl
jno
jae
test
mov
adc
iret
cwtl
test
int3
and
jno
xchg
out
mov
fstl
adc
lcall
cmp
mov
daa
inc
xchg
popa
push
outsb
aam
fidivl
pop
pop
and
adc
imul
cs
xor
and
pop
pop
and
pushf
xchg
mov
jnp
mov
mov
icebp
out
mov
mov
sbb
dec
aas
cmp
lret
cmp
and
lahf
cld
aaa
sarb
vmovntdq
push
lahf
xchg
mov
jmp
or
add
push
xchg
sub
lods
imull
movsb
and
mov
and
pop
imul
ss
push
push
sbb
xchg
sbb
pop
es
in
dec
add
or
int
cmp
sbb
loop
sub
jbe
ja
out
cmp
or
popf
inc
or
push
fmul
mov
sub
outsb
push
inc
call
push
mov
pop
je
lret
jne
jg
fadd
sti
xor
inc
sub
add
mov
loopne
arpl
frstor
mov
dec
and
popa
stos
push
fcom
mov
scas
xor
and
bound
ret
nop
in
es
xchg
jnp
sub
and
into
pop
movsb
lds
jae
cltd
push
dec
scas
mov
mov
adc
or
dec
jae
dec
dec
fcoml
repz
into
push
and
shlb
les
cmpsl
and
insb
in
lret
xchg
and
cmp
aam
push
add
cmp
push
push
cld
pop
xor
out
dec
subb
dec
sbb
imul
cmp
lea
cwtl
in
fisttps
add
inc
pop
inc
xor
sub
test
lret
add
jb
dec
filds
mov
mov
or
mov
pop
or
leave
dec
xor
mov
jecxz
push
in
adc
scas
or
dec
inc
inc
pop
stos
sbb
xlat
and
jecxz
je
test
icebp
dec
aam
push
fiaddl
jno
inc
lahf
push
pop
pop
push
adc
mov
scas
mov
push
jecxz
ds
fucomip
mov
pop
data16
mov
mov
out
icebp
fisttpll
fwait
lcall
mov
inc
mov
fcoml
imul
add
xchg
int3
xor
push
mov
sub
xor
mov
mov
mov
iret
jns
scas
dec
cmp
cmpsb
mov
mov
cmp
insb
push
enter
pusha
xchg
gs
adc
filds
pop
scas
out
xor
xlat
xchg
lahf
cwtl
push
pop
imul
xlat
daa
jge
stos
push
insb
pop
sbb
sub
sbb
sub
adc
push
mov
sahf
and
nop
ja
xchg
and
add
andb
xorps
dec
or
jno
or
dec
in
inc
push
or
xchg
or
xchg
mov
jecxz
sbb
adc
insb
xor
test
fstps
push
jg
rep
and
pop
xlat
icebp
xchg
icebp
jp
xchg
cld
sbb
fwait
cmp
sbb
mov
dec
lret
jecxz
push
xchg
mov
cmp
jecxz
cli
daa
mov
mov
pop
and
andl
jge
dec
ds
stc
mov
jp
cli
flds
movsb
in
mov
sti
jmp
lock
sbb
sub
pop
repz
nop
sbb
mov
pop
js
push
jae
sbb
das
out
xchg
jnp
adc
retw
imul
je
daa
xor
pop
mov
mov
or
popf
test
mov
std
lahf
adc
ret
leave
enter
inc
xor
cltd
cli
push
aaa
js
loopne
add
popa
aam
push
jo
sub
or
jmp
dec
fisttpl
loop
push
adc
fisttps
ss
pop
adcb
ret
or
or
adc
roll
sarb
enter
stc
jecxz
neg
ja
insb
lods
int
dec
bound
and
ljmp
fwait
mov
adc
int
inc
nop
mov
mov
or
dec
enter
loop
sti
mov
cltd
ds
dec
aad
cwtd
sbb
push
imulb
add
xor
pop
enter
mov
push
fst
mov
movsl
outsb
fucom
push
in
stos
cmpb
xchg
pusha
pop
stc
outsl
lods
mov
jae
stc
stc
mov
les
dec
pop
movsl
mov
sub
fistpl
xchg
jne
add
pop
and
mov
lahf
and
pop
pop
mov
jge
cmp
adc
hlt
lahf
ja
dec
int3
popa
ss
imul
mov
fisttpl
pop
lea
int3
xchg
sub
mov
loopne
dec
add
xchg
inc
je
rcl
imul
xor
xlat
xor
loope
loope
add
lcall
ror
dec
ja
out
jmp
and
pop
in
ficoms
cltd
rolb
ss
sub
stos
notl
cmp
xchg
ja
gs
movsb
std
sub
out
push
dec
mov
fdivs
popf
pop
dec
cld
out
inc
mov
ret
mov
clc
mov
mov
aam
clc
mov
popa
jl
inc
outsb
sub
rcrl
xor
push
fstps
sub
mov
cmp
and
movsb
sahf
ja
mov
jmp
xor
mov
sahf
pop
add
lods
add
int3
push
push
ret
shlb
and
xor
lret
sbb
xlat
mov
jmp
stc
fcomip
cmpsl
cmp
pop
dec
adc
mov
dec
outsl
pop
mul
jl
pop
aaa
iret
jp
ficompl
add
xchg
mov
or
test
loope
jnp
das
pop
and
sbb
add
fbstp
jnp
mov
mov
adc
test
leave
inc
gs
fwait
gs
dec
sbb
inc
cltd
xchg
outsl
out
lea
es
lret
ds
pop
popa
scas
cli
jmp
hlt
push
dec
inc
cmpsl
ror
lret
cmp
pop
fbstp
jnp
sbb
and
xor
inc
cltd
lea
sbb
outsb
mov
xchg
dec
lcall
dec
inc
js
and
test
jmp
insl
loopne
push
jecxz
pop
sub
pop
out
cmp
js
clc
or
fildl
insl
push
xchg
cmp
jno
fsubrl
pop
xchg
xchg
xchg
scas
xor
mov
leave
sub
test
pop
mov
hlt
mov
adc
adc
inc
popa
mov
jle
into
jle
enter
cmp
test
xchg
inc
mov
cmc
and
sub
test
dec
in
stos
xchg
push
adc
in
mov
in
stos
push
push
mov
xlat
and
and
je
pop
push
insl
orb
sub
test
add
push
sti
lret
popf
inc
fs
push
inc
adc
mov
xor
movl
movsb
fscale
pusha
stos
pop
in
ljmp
movsl
pop
dec
push
cwtl
lret
xor
fistl
pushf
mov
int
push
sbb
adc
push
aas
dec
shlb
in
imul
push
jecxz
push
sbb
mov
ffree
lret
test
lahf
int3
push
adc
adc
stos
pop
jmp
cmp
mov
jle
mov
sub
fdivs
aaa
fisubl
add
mov
push
shl
or
mov
popf
xor
sbbl
daa
xor
shlb
outsl
add
cmpsb
cmp
cwtl
rorb
popa
pop
insb
lock
sbb
add
sar
pushf
fistps
bound
or
cmpsb
pop
cmp
idivb
dec
and
xlat
repz
movsb
inc
popa
je
sbb
jle
shl
call
or
inc
mov
mov
loop
insl
mov
fsubl
xchg
push
scas
inc
push
dec
inc
jmp
sbb
into
sti
adc
cmpsl
push
jno
and
pop
dec
mov
jnp
ret
or
mov
adc
lock
inc
jmp
mov
int3
imul
mov
sbb
ljmp
mov
xchg
sub
fistpl
imul
jbe
lret
xchg
mov
cld
push
cmp
movsb
lret
lock
fisttpl
lock
gs
mov
lods
aad
ljmp
rclb
sbbb
cs
lret
pop
jle
mov
rcr
dec
sbb
sub
pop
mov
mov
aaa
and
ficoms
out
fiaddl
loop
mov
xchg
std
dec
jg
aam
mov
cwtl
lret
es
int
imul
stos
out
emms
pop
mov
leave
jl
rorl
test
push
jae
shrl
xchg
mov
lret
sbbl
fstp
shl
push
lock
roll
pushf
sub
stos
mov
jns
xor
or
mov
ficoml
rcll
adc
or
pop
fiaddl
test
push
or
push
movsb
pop
dec
jmp
in
cmp
addb
addl
push
jg
nop
pop
dec
cmp
movsl
sbb
cmp
imul
rcrl
push
test
xchg
pop
pop
add
xchg
leave
jns
xor
and
sub
push
lds
test
adc
mov
adc
les
adc
xor
mov
xchg
daa
aad
pop
into
push
outsl
sub
test
xor
or
mov
ljmp
adc
arpl
es
mov
mov
aam
jge
dec
fwait
mov
mov
xchg
in
in
jge
mov
and
pop
jg
jle
popf
and
aaa
ss
out
dec
xchg
and
push
popa
stc
in
mov
es
push
pop
xor
les
out
test
add
je
jl
adc
xchg
dec
test
fmul
mov
arpl
fucom
insb
rcll
loop
sbb
sbb
inc
push
sti
sbb
add
sbb
pop
adc
insl
adc
xlat
jmp
mov
cmpsl
mov
jp
out
out
xor
push
into
movsb
pop
pop
push
stos
aam
lret
std
jmp
aas
and
dec
xor
stos
mov
mov
push
sbbl
insl
mov
dec
mov
mov
daa
cmc
aaa
es
mov
enter
xor
rclb
sbb
push
addr16
dec
xchg
movsl
dec
mov
jae
jnp
sub
xor
lret
ficomps
es
mov
rolb
adc
xchg
ss
pop
rcll
mov
jge
in
loope
inc
or
mov
daa
sbb
jbe
adc
push
lock
loope
test
jae
cmp
sbb
test
jae
mov
movsb
dec
les
adc
mov
sti
sbb
fidivrl
push
inc
push
jmp
sbbb
dec
cli
ret
ret
pop
sbb
int
aaa
imulb
arpl
cmp
adc
mov
sbbb
push
mov
xor
xchg
in
mov
inc
fs
or
cmp
lahf
lea
sub
leave
push
movsb
and
lock
mov
mov
inc
fucomp
jl
jno
test
xchg
popa
insb
adc
mov
jge
icebp
and
fldcw
mov
mov
and
inc
jg
or
faddl
es
popf
sub
jb
repnz
jmp
adc
ss
sbb
sbb
call
stos
popa
cs
addr16
pusha
or
sar
repz
or
sbb
add
clc
jno
push
mov
nop
in
leave
xchg
jns
jae
insl
mov
jp
scas
mov
or
cmp
subl
movsl
pop
jecxz
outsl
lahf
mov
mov
pop
dec
xchg
fimull
xor
jne
jecxz,pt
cmp
pop
or
xchg
xchg
lods
lock
ret
nop
das
add
xor
popf
into
out
sub
shlb
rolb
cmp
nop
roll
popf
scas
xor
scas
repz
jb
mov
push
lods
fwait
push
cwtl
enter
into
push
xchg
push
mov
insb
and
mov
jno
jl
jb
cwtl
addps
insb
jne
xchg
lods
xor
loope
stos
jae
fisubl
adc
jno
inc
jge
jp
jb
add
repnz
std
sbb
xchg
cltd
dec
mov
dec
lcall
ljmp
mov
mov
mov
sub
idivl
jnp
jle
adc
clc
push
gs
rclb
addr16
and
pop
and
mov
mov
outsb
call
daa
das
ljmp
pop
iret
cmp
dec
xchg
aaa
xchg
outsl
adc
xchg
push
push
pop
into
dec
in
jg
pop
push
inc
cltd
sbb
xchg
dec
cwtl
das
fdivs
imul
and
fcmovnu
imul
cmpsl
mov
inc
mov
mov
add
cmpl
ja
push
sub
jp
stos
push
sbb
xchg
jb
test
pop
in
or
popa
mov
pusha
push
inc
daa
push
mov
insb
imul
frstor
fwait
stc
setns
ljmp
test
rcll
and
cltd
loop
cmpsb
fs
mov
pop
in
std
sbb
std
push
bound
ret
and
push
loopw
addl
lret
fchs
ficomps
cs
push
leave
sbb
push
and
shrl
sti
pop
mov
mov
inc
mov
or
incl
pop
and
or
or
lret
mov
cmp
test
xchg
push
std
mov
mov
cmpsb
es
loop
add
pusha
test
aas
dec
fadds
into
cmp
xor
mov
dec
scas
jecxz
pop
xor
aas
xchg
test
dec
rorl
lock
xor
sbb
mov
adc
jno
imul
cwtl
sub
dec
mov
mov
lods
cmp
sahf
cmp
inc
fiadds
popa
mov
loope
lds
sub
mov
pop
push
ss
inc
stos
iretw
movsl
lock
inc
dec
test
mov
pop
jne
xchg
into
mov
lret
mov
aas
arpl
fs
ljmp
cmp
xorb
loopne
test
jecxz
pop
shl
dec
lahf
fisttpll
mov
xchg
or
push
fstpl
ss
pop
cs
mov
stc
call
push
pop
or
fs
pushf
pop
pushf
loope
push
lods
inc
mov
and
cmpsl
mov
inc
sahf
subb
or
insb
cmp
gs
pusha
mov
cli
mov
hlt
test
push
or
inc
push
leave
mov
scas
jle
dec
adc
lcall
sub
arpl
cmp
add
icebp
lcall
shlb
cmc
dec
mov
xor
fwait
es
in
jl
fsubp
push
adc
push
mov
scas
jp
cvtps2pi
arpl
mov
xor
jo
cmpsb
add
xor
outsb
sub
push
push
in
in
jmp
out
or
incb
push
push
adc
cmpsb
fidivrl
lds
xor
xor
outsb
lock
call
std
jne
jmp
jne
mov
dec
orl
cmpb
in
movsl
mov
das
xchg
adc
sti
lcall
pop
or
or
jb
cs
push
bound
cmp
mov
cmpsb
add
gs
filds
lods
repz
mov
icebp
dec
cltd
dec
mov
dec
jnp
fcmovnbe
stc
clc
jg
inc
cmpb
outsb
iret
adc
adc
jl
mov
cmp
out
imul
fcomps
pop
loope
adc
pop
ljmp
or
mov
xorl
jp
clc
ja
add
gs
loopne
and
mov
xor
dec
pop
push
sub
std
test
push
dec
adc
enter
and
aam
push
insl
rolb
sti
jns
stos
pop
out
adc
aas
dec
push
jb
ds
xor
mov
popa
pop
dec
pop
popa
xchg
inc
push
or
inc
pop
cmpsb
mov
add
movsb
sar
scas
inc
push
aaa
fucomi
sar
jno
jmp
mov
sub
outsb
aam
ret
mov
mov
leave
testb
addb
clc
imul
dec
imul
lods
add
adc
sahf
and
cmpsb
mov
imul
das
bound
test
xchg
fs
movlps
adc
dec
fwait
add
cmp
outsb
loop
and
lahf
mov
jl
stos
loope
leave
pop
and
adc
add
stos
fdivs
push
lock
push
lods
mov
in
or
push
leave
les
les
loope
and
lods
add
add
pop
mov
jge
sub
shll
ljmp
or
push
mov
pop
ja
adc
stos
xchg
and
jo
incb
jg
mov
js
xchg
and
push
mov
stos
sub
pop
call
rol
push
jno
notl
push
test
push
ds
inc
scas
dec
loope
rorl
inc
out
sub
mov
jnp
jae
sarl
xchg
cli
js
push
push
loope
insb
xorb
push
int3
in
es
xbegin
aam
mov
nop
mov
es
cld
int3
and
jne
mov
aad
stos
adc
scas
dec
outsl
sarl
mov
outsl
push
push
sahf
xchg
fdivrp
ss
push
pop
into
out
add
inc
fisubrs
lea
or
pop
in
adc
push
into
in
jbe
daa
mov
aad
aad
mov
orb
dec
or
movsl
push
aas
push
and
je
sub
sub
fisttpl
jnp
cmpsl
jmp
test
int
fnsave
mov
dec
push
lods
sub
pop
push
dec
pop
aaa
int
pop
push
mov
adc
and
int3
mov
gs
and
pop
dec
loopne,pn
push
adc
mov
push
mov
mov
aam
cmpsl
xor
and
lock
inc
xchg
push
cli
inc
call
test
mov
push
xchg
bound
clc
enter
push
int3
push
and
mov
push
fnsave
test
dec
fcmovnb
cmp
ss
jg
sub
sarl
sbb
movsl
xor
mov
aad
shlb
xchg
or
addr16
mov
fwait
ss
inc
popf
mov
mov
jecxz
scas
js
mov
inc
in
repz
mov
push
mov
insb
sbb
sub
cmp
fwait
jl
mov
fcmovbe
test
cmpsl
pop
sbb
push
mov
std
leave
jmp
test
flds
mov
inc
in
std
mov
mov
mov
mov
rcll
add
fnstcw
mov
popl
cmp
mov
xchg
call
test
push
inc
je
in
push
in
shrl
mov
lds
dec
add
jae
insb
add
mov
fwait
dec
and
rclb
cmp
rorb
xchg
jmp
cmp
sarb
adc
cmpsl
push
lods
sub
jno
test
test
sbb
adc
test
mov
lods
jge
and
stc
adc
dec
cmp
les
pop
mov
repz
inc
dec
lods
daa
xor
mov
jno
jnp
out
stc
jle
mov
rolb
pop
xlat
js
and
sbb
inc
out
test
cmp
in
pusha
mov
mov
ds
repz
cld
mov
loope
mov
mov
dec
in
sub
or
jno
cmpsb
push
stos
in
inc
pop
jne
add
cli
pop
push
xchg
out
mov
jb
mov
sub
enter
scas
push
in
fdivp
ret
cltd
lods
mov
xor
stos
xor
das
es
inc
jbe
outsb
or
jns
subb
xchg
xchg
rcrl
ret
jbe
or
mov
loope
les
mov
cmp
popf
test
mov
inc
mov
psrad
add
in
xor
cmpsb
adc
dec
nop
dec
jo
fdivl
lret
xchg
lcall
fisttpl
cmp
leave
sbb
enter
mov
xchg
fdivs
cmp
mov
and
das
mov
dec
pushf
das
les
mov
and
sbb
inc
dec
push
xchg
inc
xchg
dec
movsb
push
xchg
adc
add
mov
fwait
pushf
fwait
into
mov
addb
repz
pop
rclb
loope
push
sub
pop
adc
sub
cli
add
add
mov
inc
std
bound
add
call
lcall
xor
push
sbb
pop
sbb
dec
add
cwtl
mulb
fidivs
int
sti
and
arpl
and
pop
push
scas
test
jecxz
inc
and
inc
mov
sti
jmp
daa
std
sub
test
push
sub
mov
mov
push
clc
xchg
inc
call
jne
adc
jne
js
jns
add
aas
mov
mov
pop
mov
add
invlpg
rcrl
dec
jmp
ret
movsl
aaa
mov
push
lcall
fwait
rorb
das
and
or
mov
fistps
scas
jns
mov
ret
and
jg
push
ljmp
mov
push
pop
or
dec
add
mov
test
mov
and
sub
or
out
ds
lds
mov
mov
xlat
xchg
and
popa
out
push
or
loopne
inc
divl
lods
lods
xchg
loop
mov
pushf
in
pop
sub
pop
outsb
test
call
test
in
les
mov
mov
push
xor
mov
jae
pop
pop
cmpsb
lea
and
push
fisubrs
pop
gs
leave
popa
mov
sbb
fmull
cmp
out
pop
inc
pop
into
fidivrs
inc
or
push
test
popa
or
js
mov
pushf
add
lods
ret
int
out
xchg
aaa
ret
cli
mov
jb
add
ss
or
or
mov
fidivs
dec
adc
dec
sub
xlat
sbb
shlb
ret
mov
aas
fucomp
add
mov
or
sti
adc
js
in
and
nop
inc
xor
push
daa
sbb
push
xor
addb
jmp
pop
sbb
andl
mov
lret
frstor
xchg
sar
rcll
repz
mov
rcr
push
xlat
lret
loop
push
dec
lds
push
jmp
rclb
addr16
mov
dec
push
dec
mov
lods
or
add
or
sub
and
dec
push
inc
sbb
sub
addr16
ret
mov
xchg
mov
add
mov
fmul
fdivr
push
sub
add
mov
lret
repnz
mov
xor
repz
scas
jg
push
cmpsb
das
xchg
int
dec
test
mov
lea
int
jns
cs
bound
push
dec
pushf
lret
mov
add
mov
xor
inc
sahf
xchg
test
add
xchg
inc
mov
pushf
jle
outsb
mov
stc
xor
xchg
inc
std
pushf
sarb
and
pop
inc
jle
mov
out
aas
mov
subb
into
cmp
add
shld
xchg
cmp
push
push
mov
jb
adc
mov
cmp
andl
jge
aaa
sahf
popf
stos
sbb
and
ret
scas
jnp
push
stc
out
adcb
mov
cs
ficompl
mov
sub
loop
movsb
ds
sbb
in
xchg
or
xlat
loope
stc
xchg
pushf
adc
js
xchg
or
add
mov
adc
cmp
pushw
mov
xchg
push
mov
es
push
mov
or
test
fidivrl
add
rclb
add
xor
test
rcr
mov
scas
cs
out
add
mov
jle
cmp
push
jl
loop
pop
addb
add
sub
aam
mov
add
and
jb
lock
mov
mov
aaa
add
cmp
aad
out
ret
and
lcall
mov
out
and
inc
mov
vmovdqu
push
or
ds
and
popa
cs
ret
in
adc
jbe
sub
arpl
mov
cmc
loop
sub
lret
pop
sbb
fs
adc
scas
push
push
xor
fidivl
jno
xchg
sbb
or
cs
pop
sbb
js
mov
shlb
ficompl
ss
xchg
sub
push
loope
hlt
clc
les
mov
cmp
insb
add
imul
inc
jp
jno
ljmp
rorb
outsb
pop
scas
xchg
sub
adc
nop
cmc
pushf
movsb
stos
jnp
jle
loopne
cmpsl
xchg
mov
cmc
mov
ficoml
mov
mov
sub
pop
dec
xchg
and
jno
inc
in
and
test
inc
cmp
inc
test
xor
adc
imul
dec
outsb
lods
sahf
mov
adc
sub
cld
xchg
fisubrs
outsb
push
arpl
nop
mov
xor
sbb
mov
hlt
daa
sub
imul
stos
or
imul
insb
xchg
add
xchg
and
pop
xchg
fisubrs
xor
adc
sbb
xchg
stos
test
push
cmp
add
subl
cmpsb
push
rol
mov
xchg
in
pop
dec
lret
jecxz
or
mov
nop
cltd
mov
pop
or
jne
dec
out
fiaddl
enter
movsb
dec
push
mov
mov
mov
outsl
aad
orb
mov
insb
xchg
mov
xor
mov
shlb
and
mov
dec
and
push
divl
sti
lods
pusha
jl
gs
xlat
repz
mov
mov
sbb
mov
or
adc
sub
cld
in
dec
ljmp
pop
mov
fcoms
add
ds
lds
dec
mov
mov
jecxz
push
pop
xor
in
add
insb
imul
xchg
test
push
jno
insb
icebp
jl
pop
fdivl
push
mov
inc
test
fs
neg
or
inc
xor
sbb
arpl
and
or
jge
add
mov
xor
into
dec
in
imul
dec
out
sarb
jp
cli
cmc
inc
sub
das
cltd
pop
mov
and
and
clc
xor
ret
test
insb
mov
and
and
and
fcoms
ret
xor
adcl
out
push
sbb
and
lds
frstor
xor
sahf
enter
inc
gs
lods
sub
jl
add
push
loop
cmp
xchg
lcall
aaa
add
in
cmpsb
xor
jp
inc
mov
lret
jmp
mov
mov
lods
mov
push
add
xor
pop
bound
inc
mov
imul
mov
int
dec
loope
fs
dec
push
fadds
enter
sbb
add
movsb
lcall
jns
mov
mov
mov
mov
push
mov
xchg
sub
xor
xor
sarl
pop
or
adc
push
pop
leave
pushf
push
imulb
ret
scas
nop
in
stos
dec
scas
lods
xchg
mov
flds
lods
push
pop
lds
ljmp
cmpsb
int
cmpsl
bound
push
add
popf
push
sbb
inc
roll
shlb
jnp
xchg
push
mov
icebp
lret
stos
jae
mov
adc
nop
cmpsl
test
cltd
movntps
ds
xchg
push
dec
nop
and
gs
jge
push
cmpsb
xchg
add
push
cmp
push
das
cld
jno
jmp
addr16
adc
push
movsl
or
out
xor
mov
cmp
cmp
jl
mov
xchg
inc
push
pop
cmp
jmp
xchg
imulb
push
mov
sbb
inc
leave
jecxz
roll
ficoml
loop
lock
mov
sub
mov
inc
jge
or
sti
mov
sub
out
imul
mov
mov
enter
mov
lea
inc
sti
ja
shrb
movsl
aad
ljmp
sbb
mov
js
insb
fbld
sub
rorb
inc
repnz
loopne
outsb
sub
popf
sarb
negb
dec
idiv
fsubrs
pop
icebp
in
inc
xor
dec
testl
mov
lret
pop
ljmp
xor
xchg
pop
sbb
int
addr16
cld
mov
stc
loope
pop
push
cmp
scas
mov
jge
fdivs
or
popl
sub
test
mov
out
jecxz
fisttpl
sbb
xchg
or
dec
outsl
xor
ljmp
stc
and
cmp
imul
cmpsl
jo
mov
jnp
xchg
loopne
xor
ds
push
sahf
fmuls
sahf
xor
push
andl
fmul
or
jmp
scas
mov
repz
push
lods
cld
push
mov
push
in
nop
aam
rcl
data16
push
sbb
lods
add
iret
ror
scas
loope
sub
je
and
test
push
pop
jo
mov
sahf
bound
xchg
sbb
mov
mov
sub
lret
jb
mov
add
xor
stc
dec
lds
mov
xchg
in
fbld
mov
push
bound
push
sahf
sub
or
rcrb
pop
mov
popf
iret
pop
loopne
mov
sub
outsl
push
mov
dec
bound
std
add
add
fdivrp
mov
clc
fildll
push
repnz
inc
cwtl
xor
clc
pop
adc
jecxz
testb
inc
adc
sub
push
xchg
xorl
sub
mov
jb
push
push
xor
lcall
fs
pop
dec
lods
and
adc
shl
fs
aam
jecxz
cmp
push
xchg
sbb
and
jne
js
les
int
pop
mov
fwait
push
sbb
idivl
add
jns
sub
mov
or
cld
mov
repz
mov
je
and
inc
lcall
dec
push
sub
push
mov
push
pushf
enter
pop
mov
xchg
repnz
shl
mov
aaa
fstpt
and
pop
xor
cmpsl
loopne
mov
scas
outsl
fisubrl
cmpsl
stos
out
cmp
out
jecxz
inc
mov
call
out
xor
fcmove
pop
cmp
scas
or
sahf
aad
clc
push
popa
in
mov
and
xchg
popa
ret
nop
sbb
sbb
scas
or
push
pop
js
fstpl
aaa
pop
icebp
stos
inc
and
dec
jecxz
dec
movsb
jge
andl
cmp
imulb
cmp
fcmove
mov
push
cli
or
dec
sbb
push
add
xor
int3
jge
fistpll
xor
aad
iret
aas
mov
pop
clc
inc
xchg
sub
pop
outsb
xor
ret
mov
nop
lods
mov
jge
pop
mov
jg
lret
or
adc
lret
push
popf
shlb
mov
and
cmp
add
jmp
shrl
mov
xor
cs
push
cmpb
jecxz
pop
and
or
jae
cmp
dec
xchg
das
filds
subl
mov
mov
or
add
int
fwait
repnz
out
shr
aas
xchg
pop
movsb
shlb
and
sub
mov
xchg
ljmp
adc
adc
push
and
sbb
std
arpl
xchg
cmp
cmp
mov
sub
dec
inc
outsl
in
movsb
dec
and
stos
and
mov
push
xor
aaa
push
movsb
test
dec
addr16
loope
shll
mov
in
add
push
pushf
add
xor
repz
jle
cmp
fld
test
scas
push
stos
outsl
xor
sub
into
sbb
sahf
arpl
mov
lcall
cmp
int
ss
jo
es
daa
gs
pop
or
add
push
stc
shlb
mov
cmpsl
fisttpl
mov
nop
jns
adc
cmc
sub
xchg
add
leave
fists
push
pop
mov
add
add
test
add
adc
aad
ret
inc
aad
push
stos
xchg
cmp
sti
mov
jmp
mov
pop
test
mov
fsubr
cld
mov
cmpsl
pop
int3
movsl
cmp
mov
and
sbb
cmp
lea
pop
in
enter
jp
add
stos
pop
dec
cmpsl
ja
dec
jg
dec
mov
sub
dec
in
ja
adc
in
cwtl
and
adc
ret
inc
pop
or
and
dec
push
js
test
mov
daa
fisttpll
and
lods
ficoms
lcall
dec
xchg
jno
push
bound
ret
sub
cwtl
roll
xchg
pusha
div
aaa
and
sbb
fildl
adc
jbe
lahf
mov
adcb
loope
mov
mov
loop
jnp
out
mov
dec
arpl
mov
push
sahf
mov
testb
push
imul
mov
jb
xor
mov
in
fs
xchg
jmp
dec
pop
bound
fists
jp
mov
shufps
aam
sbb
pop
inc
sbb
sbb
mov
and
sbb
and
pop
daa
je
add
cwtl
xchg
jp
sub
adc
ja
pop
aaa
repz
test
sbb
sahf
aam
call
fdivs
xchg
jnp
push
pop
jmp
sub
fidivl
xchg
xor
loop
sbb
mov
lds
cs
sbb
push
push
aaa
inc
out
shr
cld
lds
inc
dec
js
push
mov
or
push
jge
es
inc
fwait
les
sub
stos
hlt
pop
and
inc
lahf
mov
dec
xor
adc
xchg
loopne
add
or
out
mov
push
jle
mov
pop
cmpsl
insb
fs
push
sarb
sbb
insl
sahf
push
pop
stos
xor
xlat
frstor
pushf
jp
lret
mov
cltd
in
add
rcrl
jo
fdiv
jl
pop
xchg
and
negl
mov
ljmp
enter
push
jne
cmp
lahf
push
mov
mov
sbb
jb
push
lock
jo
andl
or
inc
mov
xchg
dec
push
ljmp
inc
jmp
mov
inc
lock
les
xchg
sub
or
pop
data16
mov
gs
testb
enter
je
xchg
pop
ds
push
lods
mov
mov
dec
popf
arpl
ljmp
adc
and
add
imul
jno
sub
nop
sahf
lods
mov
imul
mov
cmc
fildl
mov
or
add
push
lock
ss
ljmp
xor
mov
sub
ret
or
and
and
xchg
mov
jbe
les
pop
dec
xchg
xchg
add
pop
jae
jg,pn
adc
xchg
adc
push
mov
mov
push
in
mov
adc
lahf
outsl
incb
mov
shr
cmp
lock
mov
pop
test
jns
jne
push
rorb
orl
or
lahf
dec
add
cmp
inc
mov
sti
pop
stos
xchg
jno
aad
mul
cmp
sub
out
enter
ljmp
push
imul
mov
outsb
mov
dec
fmulp
test
insl
inc
adc
std
loope
sbb
pop
cld
cltd
iret
fwait
sahf
jne
inc
adc
cmp
ja
cmp
out
inc
push
cmp
ret
and
xchg
xchg
incb
jno
sbb
fs
jl
aam
shrl
popa
mov
shlb
inc
xlat
adc
jecxz
sbb
sub
pop
mov
lods
mov
call
scas
shrl
push
nop
push
jg
cmp
cmc
fidivl
and
fwait
outsl
mov
mov
rcll
sbb
xor
jge
shrl
ret
sbb
sbb
xchg
and
ja
in
jbe
ret
mov
jmp
pop
adc
or
pop
aam
xchg
imul
loopne
push
out
jle
inc
mov
das
mov
dec
in
lods
jmp
adc
jae
mov
mov
xchg
idivl
nop
xchg
daa
andl
mov
in
xor
push
stc
sahf
pop
iret
in
dec
shll
out
dec
shll
cmp
pusha
mov
mov
pop
dec
xlat
test
test
insb
mov
push
mov
scas
vdivsd
pop
or
add
and
push
and
int
js
cmp
and
or
dec
dec
xor
mov
and
fwait
test
ret
lods
std
or
sti
mov
sbb
xor
xchg
adc
std
mov
mov
adc
out
rorb
int
dec
jecxz
ret
stc
repz
bound
popa
cli
out
fnstenv
lds
mov
dec
je
outsl
pop
mov
mov
fmull
mov
push
scas
lods
arpl
sub
mov
out
sbb
push
lcall
dec
sub
xchg
in
mov
mov
mov
cmp
pusha
divb
rol
sbb
je
and
inc
jae
push
pop
repnz
shll
push
push
add
out
dec
cmp
or
test
clc
mov
popf
add
dec
into
mov
xchg
mov
push
int
mov
inc
shlb
add
cmp
inc
or
cmp
cmp
add
pusha
adc
ret
mov
data16
je
out
push
mov
sub
sbb
or
into
mov
and
bnd
icebp
mov
jb
pop
ss
les
mov
add
lret
inc
add
mov
call
fsubrl
rcl
pop
xlat
loope
dec
push
rcr
add
mov
out
xchg
mov
adc
repnz
sbb
inc
out
test
add
fstl
jg
sbb
aas
ret
movsl
mov
mov
mov
test
jnp
push
push
cwtl
gs
add
mov
mov
nop
repnz
in
push
mov
inc
ss
sub
fsubs
out
cmp
addr16
inc
movsb
xchg
or
in
pop
mov
nop
push
push
xor
mov
push
test
mov
outsb
and
adc
les
xor
dec
push
repz
cmpsb
jg
lds
mov
cmpsl
sti
sbb
shll
insb
nop
addl
scas
jo
push
clc
cmp
add
dec
int
cld
sub
clc
rdpmc
shr
mov
ja
pop
xor
outsb
jb
shrb
push
call
fdivs
mov
ss
ja
std
push
cs
mov
push
in
push
xor
ret
test
stc
es
jno
pop
cmp
pop
test
sbb
lock
xor
es
cmp
icebp
in
cmp
lods
dec
add
xor
test
movzbl
xor
in
shl
ret
stos
sets
pop
decl
cmp
mov
dec
xor
push
xor
scas
in
imull
push
addl
jb
ljmp
lea
sub
hlt
es
jo
aaa
push
out
stos
sbb
pop
shl
js
aas
lahf
inc
cmp
adc
mov
inc
push
clc
xor
pop
test
add
and
insb
scas
ret
dec
mov
mov
and
jns
mov
rol
out
ds
add
int3
movsl
movsb
mov
sar
fs
rcl
fmuls
call
dec
mov
and
mov
aaa
inc
ret
js
mov
add
add
insl
test
pop
cmp
repz
fadds
or
xchg
lods
or
cs
sti
repnz
call
mov
sahf
scas
cmp
movb
add
cltd
lea
ret
mov
pop
push
jno
xchg
xor
cmp
lahf
mov
push
sti
call
in
fimull
push
int3
add
iret
inc
in
sbb
adc
ret
in
sbb
stc
jp
lea
or
mov
aas
icebp
sbb
inc
and
push
push
xchg
in
sub
stos
push
jmp
aaa
cmp
fcomps
or
outsl
setne
push
xchg
cmc
test
sahf
cltd
insb
popa
clc
lods
negl
shlb
add
lcall
loop
lods
test
fidivrs
mov
lret
imul
pop
mov
insb
pop
push
scas
xchg
mov
fisttpll
fistpll
and
or
pop
dec
xor
push
xor
int
and
dec
xchg
jnp
cmp
iret
popf
mov
jle
or
shr
repnz
inc
test
fmul
mov
mov
not
or
pop
inc
fdivl
mov
or
push
gs
and
sbb
addr16
ret
cmp
xorb
mov
shll
outsl
fbld
adc
sti
mov
lret
or
pop
xchg
jne
scas
lahf
loop
cmp
dec
test
lret
fwait
inc
dec
lea
or
cli
dec
fldl2e
pushl
in
cmp
shlb
enter
dec
adcb
cmpsb
mov
ss
xchg
and
stos
stos
cmpl
sar
fwait
int3
jl
or
jle
or
mov
xchg
xor
stos
rolb
xor
pop
pop
mov
dec
popf
xlat
mull
adc
cmpsb
add
pop
jns
shlb
dec
jne
add
or
jnp
ret
cli
inc
jne
repnz
mov
dec
xchg
dec
dec
cmp
addl
test
cwtl
xchg
rol
pop
push
daa
lods
cs
cmpsl
cli
jle
mov
cltd
rcrb
inc
dec
negl
push
imul
scas
mov
bound
add
pop
xchg
inc
arpl
das
cld
cmp
adc
int
cmp
push
ficomps
mov
idivl
xor
mov
aas
jnp
lret
jecxz
fsubl
push
mov
jo
int
mov
mov
push
iret
and
popa
mov
fldt
add
bound
into
outsl
cmp
adc
mov
inc
and
addb
in
sbb
fsub
lods
in
hlt
test
loop
les
in
sbb
sub
pop
pop
mov
fimull
mov
adc
out
cmpsb
pop
mov
mov
xor
cs
or
mov
inc
imul
fsubr
inc
xlat
cmp
fmulp
popa
jmp
cmp
mov
lods
push
mov
adc
js
mov
pop
arpl
adc
aam
movsl
pop
js
and
xchg
inc
hlt
inc
inc
push
fwait
jle
jmp
hlt
xor
xor
or
je
int
out
push
push
push
fisttpll
aam
mov
je
sub
push
fstpt
daa
inc
adc
fidivrs
je
inc
sbb
push
mov
idivb
scas
out
push
lcall
clc
fistl
and
sub
out
ret
test
daa
push
inc
sbb
dec
outsb
sbb
xchg
push
sbb
cld
mov
lcall
mov
lcall
divb
mov
pop
fstl
lahf
jno
add
repz
testl
in
inc
out
jl
and
push
inc
out
fdivr
cmp
loope
test
and
mov
test
fsub
cld
shll
outsl
mov
aaa
push
inc
inc
fdivrl
jbe
decb
jge
push
ljmp
loopne
jo
sub
lahf
xor
jns
addr16
in
push
leave
add
decb
cmp
mov
test
mov
addl
bound
jp
dec
call
cmp
xchg
ja
sbb
or
cmc
fcmovne
inc
mov
clc
mov
sub
push
mov
xor
mov
jle
in
lods
fstpt
xlat
sbb
les
jno
dec
inc
adc
lds
shrb
jne
push
xchg
xchg
mov
sbb
jnp
sahf
lea
lods
mov
inc
popa
sub
int
jmp
es
add
dec
push
dec
jecxz
sub
cmp
in
testl
cltd
cmp
sti
dec
and
mov
sti
cli
dec
mov
hlt
mov
leave
adc
jmp
cmp
jp
lret
pushf
jae
xchg
mov
stc
pop
xchg
rcll
sub
push
sub
ret
gs
push
popf
iret
cli
cld
test
loop
jae
loopne
popa
dec
std
adc
push
cmp
sbb
mov
aad
ljmp
xchg
sub
cltd
cmp
ret
sti
mov
arpl
mov
shll
bnd
dec
movsb
jns
bound
lock
mov
xlat
inc
add
pop
shl
je
enter
push
inc
xchg
adc
lahf
sub
sub
shr
sbb
rclb
mov
and
cli
mov
and
inc
mov
filds
cmp
ficompl
push
jb
imul
mov
je
iret
xor
shll
cpuid
inc
cli
outsl
test
loope
fs
pushf
mov
dec
ret
push
xor
ljmp
sarb
or
insl
xlat
mov
bound
fsubrs
inc
mov
cwtl
mov
pushf
fs
cmp
push
leave
les
push
push
push
aas
fisubrs
cmpsb
fldt
inc
mov
push
mov
fwait
and
je
add
nop
cmpsl
dec
jecxz
aaa
mov
dec
jno
xor
jg
rcll
js
call
insb
jb
sti
pusha
pop
insl
nop
cwtl
and
aaa
ficomps
mov
push
dec
imulb
adc
popa
xor
popf
repnz
mov
cli
jmp
fadds
stos
fstpl
test
push
or
push
out
sub
cmpl
scas
push
dec
orl
add
or
scas
sti
lcall
push
adc
mov
sub
inc
test
fdivp
pop
inc
pop
adc
mov
enter
add
mov
inc
sbb
and
push
add
or
mov
rolb
pusha
gs
lret
dec
cltd
sbb
xor
mov
sbb
jns
cltd
or
stc
lret
sbb
in
fnstcw
cwtl
cmp
inc
push
test
add
xchg
pop
dec
mov
ficoms
jbe
out
adc
in
negb
inc
xor
movsb
testb
xor
in
out
or
scas
push
cmp
pop
daa
popf
jno
pop
ja
je
cwtl
and
xor
enter
popf
test
push
in
mov
pop
add
outsl
cmp
mov
inc
movl
les
and
add
mov
jl
xchg
loope
adcl
ror
sarb
mov
pop
sbbb
sub
mov
cmp
filds
adc
loope
mov
push
xchg
fstl
in
mov
inc
mov
icebp
dec
mov
out
push
lret
aad
lds
dec
jo
popf
int3
in
icebp
ss
mov
ret
icebp
in
push
mov
sahf
and
je
jl
stos
nop
into
sbb
add
aaa
fcomps
lcall
xor
inc
mov
in
jnp
jl
mov
dec
or
inc
test
dec
popf
mov
stos
pop
test
daa
inc
cld
mov
stc
test
xchg
ljmp
dec
inc
test
adc
or
xor
jne
pushf
adcl
loope
lcall
sahf
in
imul
hlt
test
fwait
inc
adc
dec
aas
mov
imul
xlat
js
cmp
gs
xor
inc
div
out
mov
push
jge
jns
sbb
cld
outsb
out
in
fildl
dec
xchg
sub
add
sarl
popa
fcoml
pop
lds
dec
insl
push
push
aaa
aas
push
and
xchg
ret
nop
in
test
js
cmpsl
dec
loopne
dec
xchg
rolb
dec
das
xchg
xor
jmp
adc
mov
rcrb
jne
lret
lcall
out
push
inc
inc
jge
lcall
lea
mov
cs
or
sbb
test
xor
je
or
jl
add
mov
lahf
mov
and
fisttps
jmp
fwait
push
adc
ret
push
push
mov
ljmp
scas
sbb
sub
xor
pusha
add
cmpsl
test
dec
pop
lods
push
mov
and
jno
pop
cwtl
dec
andb
idiv
xor
test
cmpsl
or
cmp
ret
fsubs
push
fldenv
sub
mov
xchg
sub
popf
enter
adc
and
les
dec
loop
cmp
in
cmp
imul
stos
mov
push
mov
inc
mov
iret
add
lods
mov
xchg
xchg
fcompl
sbb
addr16
call
in
mov
push
cmc
xchg
stos
add
aad
push
mov
mov
dec
pop
mov
mov
fdivr
xlat
mov
cld
mov
in
and
outsl
pop
add
pop
add
mov
fisubl
lock
lret
jne
aas
imul
push
out
and
outsl
mov
das
inc
fs
stos
popf
cmp
dec
stos
inc
xchg
rcr
sahf
out
and
sbb
push
outsl
pop
movsb
push
aam
nop
push
mov
popf
subl
aaa
roll
daa
pop
xchg
loopne
push
cmp
pop
fmul
adc
cmpsl
mov
adc
mov
hlt
js
sbb
xor
out
mov
mov
jecxz
pop
push
add
mov
mov
and
push
movsb
add
sbbb
mov
pop
lret
imul
adc
xor
leave
mov
pop
xchg
clc
xchg
fsubrs
cld
jne
lods
insl
xchg
imul
pusha
cmp
icebp
shl
or
xor
dec
jne
cmp
adc
adc
add
addr16
orb
fmull
sbbl
call
fmull
clc
dec
scas
popa
jbe
lods
xchg
adc
lea
cmp
inc
mov
lcall
mov
sbb
loop
jbe
lods
xchg
mov
imul
lods
std
int3
outsb
push
in
inc
je
movsb
jnp
dec
loope
xchg
cmc
inc
and
dec
mov
repnz
insb
std
push
mov
sub
test
test
push
orb
pusha
inc
jg
pushf
inc
cmp
xor
lahf
pusha
mov
bound
dec
arpl
pop
ret
add
push
or
stc
jecxz
shlb
xchg
jmp
jno
test
lahf
cli
pop
or
xor
mov
fistps
lahf
jecxz
pop
out
cmp
inc
pop
xor
std
cwtl
movsb
sti
mov
mov
lret
ret
cwtl
xchg
mov
inc
sti
movsl
adc
insb
js
loope,pt
lods
insb
enter
push
jae
arpl
ljmp
cmpl
fistpll
mov
clc
add
pop
int3
sub
outsb
sbb
adc
pop
cs
hlt
xchg
mov
inc
xchg
pop
inc
mov
fstps
sbbb
dec
mov
orl
loop
mov
jl
xchg
hlt
cltd
lds
iret
cmp
xor
int3
nop
ret
hlt
xor
int3
cmp
fcoms
or
xchg
adc
or
mov
notl
pop
jp
xchg
js
mov
lods
pop
pop
xor
pop
das
push
addb
pmuludq
mov
cltd
cmp
scas
push
pushf
add
cmp
lret
ss
jmp
stos
mov
ss
sub
xchg
movsl
insb
fisttpl
push
xor
in
in
mov
and
sbb
pop
lods
jo
jmp
shrl
mov
cmpsl
stos
loopne
xchg
dec
mov
nop
scas
lcall
dec
daa
mov
push
jne
out
out
mov
mov
out
jg
sbb
int3
pop
sub
cmpsl
pop
das
adc
adc
sub
jge
and
fldcw
xor
dec
dec
inc
add
pushf
push
idivb
xor
inc
lahf
cli
ljmp
rol
push
xor
pop
cmp
mov
dec
je
dec
xor
add
pushf
jo
xchg
movsl
sbb
mov
mov
add
mov
jecxz
add
jbe
add
sub
cltd
gs
push
push
fdivl
jnp
jnp
jne
icebp
dec
mov
out
movsb
and
out
int3
jge
inc
call
and
jnp
imul
mov
adc
std
push
mov
sub
pop
lahf
xor
sbb
push
push
mov
enter
stos
mov
or
into
pushf
adc
das
inc
inc
cmpsl
mov
lea
inc
add
ja
ret
in
movsl
jmp
mov
fildl
gs
xor
dec
jmp
mov
adc
and
xor
pop
or
lock
dec
scas
test
push
jl
loopne
std
push
std
pusha
cli
lea
xchg
sbb
mov
and
mov
test
pop
jbe
lea
mov
mov
fdivs
iret
hlt
lea
or
leave
dec
aaa
jo
sbb
cmpsb
inc
or
hlt
je
rcll
into
shll
inc
push
fxch
out
xchg
push
je
in
sub
out
fistpl
cmp
enter
cltd
sahf
mov
pop
sub
mov
in
or
or
sub
mov
mov
cltd
jle
fists
loope
iret
in
stos
testl
add
sub
js
scas
sbb
int
ret
ljmp
add
outsl
clc
cs
xchg
les
imul
mov
jb
movups
sbb
adc
mov
dec
ficoms
xlat
cmpsb
mulb
bt
lea
mov
dec
enter
dec
insb
push
and
nop
adc
ja
sub
mov
dec
push
mov
loop
inc
lea
fadds
lock
inc
push
cwtl
push
or
test
pusha
mov
mov
jmp
movsb
mov
in
adc
rorl
pop
mov
call
xchg
in
ss
fdiv
popa
in
test
jmp
imul
enter
dec
aas
cmp
je
pop
mov
push
shlb
test
push
inc
push
xor
inc
mov
and
out
in
cwtl
addl
in
xor
ljmp
fdivrp
dec
ja
dec
mov
pop
addr16
pop
ret
cmpsl
cmc
or
fists
inc
mov
pop
push
popf
jbe
jecxz
sbb
sbb
jne
push
movsl
lock
jge
sub
mov
adc
sub
xchg
cwtl
hlt
loopne
mov
sbb
outsl
clc
roll
sub
mov
enter
add
sub
outsl
or
stos
jp
push
and
jp
cwtl
call
or
push
sbb
sbb
dec
out
push
push
ja
stc
pop
fstpl
jg
fisubrs
adc
mov
push
jo
leave
add
cmp
xchg
cs
scas
ret
and
fsts
aam
cmp
mov
aam
aaa
inc
adc
cltd
xchg
jmp
fidivrs
or
les
mov
test
mov
xor
fucom
xchg
xchg
rcr
stos
and
outsb
pop
add
sbb
insb
movups
cmc
mov
hlt
jecxz
cs
movsl
sbb
pop
repnz
popf
pop
push
rcll
test
stos
xchg
stc
movsl
mov
push
xchg
jmp
pop
lock
dec
mov
data16
xchg
and
jg
mov
xorb
mov
jae
shr
movsl
xchg
mov
mov
pxor
cld
inc
push
and
adc
fidivl
mov
or
imul
push
sub
adc
cmp
es
sub
push
xor
adc
cmp
das
test
ljmp
sub
pop
kmovb
movsb
pop
cmp
dec
mov
xlat
push
mov
imul
mov
insb
mov
inc
sbb
xor
jge
stos
shll
and
adc
int
dec
xor
mov
out
aas
pop
pop
mov
sbb
mov
and
in
jno
dec
sub
mov
jge
jb
inc
mov
adc
lock
ss
xchg
adc
call
push
mov
cwtl
aam
xchg
pop
sbb
clc
nop
stc
bound
dec
sub
pop
xchg
movsl
out
sub
aad
push
int
jns
pusha
fisttpll
popf
mov
push
jns
mov
movsb
imul
mov
inc
divl
movsl
andl
pop
adc
add
jecxz
jecxz
pop
lods
pop
inc
test
or
pop
push
out
int
sti
mov
push
rclb
arpl
repz
out
xchg
sub
mov
dec
push
jo
jae
jmp
idivb
imul
inc
bound
mov
outsl
repz
cwtl
and
xor
stc
sub
pusha
or
iret
sub
fnstenv
pop
orb
xor
pop
test
out
lcall
dec
movsl
clc
jp
test
mov
fadd
inc
inc
xor
lret
add
imul
mov
idiv
and
add
lea
andb
rcr
and
add
fidivs
jb
push
loope
xchg
imul
xchg
lock
std
inc
adc
sub
adc
jbe
xlat
pop
jl
out
and
jl
psubb
lret
shlb
movsl
int3
mov
inc
je
jle
test
mov
cwtl
lods
dec
aas
mov
pop
int
push
sbb
js
dec
mov
jnp
loope
adc
adc
push
inc
jnp
jo
roll
mov
inc
sahf
out
movsl
dec
sub
push
into
pusha
cmpsl
cld
fstl
test
out
rorl
or
pushf
sub
bound
int3
inc
adc
dec
jmp
leave
pusha
sahf
and
data16
add
in
dec
jns
jge
adc
jno
push
out
cmp
cmpsl
fs
sub
mov
mov
stos
icebp
orb
and
mov
sti
jb
loopne
out
xchg
outsb
mov
sti
push
sbb
cmp
or
fcompl
inc
outsb
pop
cmp
aam
lahf
test
call
int
pop
lahf
sub
inc
cli
pop
rol
add
mov
popf
lods
mov
sar
bnd
movlps
jne
jno
sbb
mov
pop
mov
fwait
stos
push
sti
addb
jmp
movsb
fidivrs
jbe
push
push
adc
mov
std
jle
adc
cld
xchg
or
sub
jnp
out
pushf
icebp
lcall
subb
das
or
mov
mov
push
aam
cmp
adc
dec
enter
xchg
into
sub
shr
xor
int3
jns
xchg
mov
xor
inc
cmp
je
inc
pop
sub
shlb
mov
xchg
or
dec
jl
pushl
and
add
inc
dec
pop
xor
pop
dec
and
int
adc
add
ret
in
aam
adc
mov
fwait
mov
lret
sbb
push
mov
mov
jnp
inc
xor
xchg
insb
stc
das
iret
lahf
test
add
jo
outsb
inc
sbb
lds
mov
push
or
sub
insb
shrl
int
add
or
lea
mov
adc
xlat
dec
cmp
neg
mov
mov
push
mov
sti
jle
jle
mov
mov
push
loope
adc
loop
ret
sahf
pop
push
call
cs
sub
cmp
out
fsubl
jno
pop
cmp
imul
mov
push
jne
lret
sbb
es
mov
push
mov
std
push
cmpsl
hlt
jmp
test
jp
push
imul
addb
out
in
stc
dec
mov
shll
imul
je
arpl
sbb
push
adc
aad
push
ss
popa
cwtl
mov
or
push
xchg
push
jne
push
scas
xchg
cmp
lahf
outsb
mov
icebp
insb
inc
mov
shl
and
test
sub
xchg
enter
cli
js
xlat
push
xchg
ljmp
pop
les
dec
xchg
pop
mov
ret
out
bnd
mov
dec
pop
fidivrs
mov
xchg
cmpsb
xor
sub
add
lret
xchg
xor
dec
push
fs
cmp
pop
adc
aad
roll
push
popa
and
pusha
push
mov
insl
push
or
sub
faddl
inc
mov
ss
sub
add
xor
sbb
jb
xor
push
lcall
adc
cmp
push
jnp
mov
jnp
mov
mov
and
out
loopne
cmp
daa
movsl
xor
fidivrs
xchg
fstpl
mov
addb
aam
arpl
lds
pop
xor
and
push
gs
cs
mov
dec
sub
jg
mov
and
or
ret
popw
inc
cld
inc
out
mov
or
pop
mov
scas
jge
or
arpl
lcall
lds
fsubrs
rcl
adc
repnz
in
dec
int3
fsubl
jb
call
inc
lock
add
ss
repnz
push
out
or
fisubrs
loope
mov
inc
movsl
loop
fistl
fwait
inc
jecxz
dec
xlat
and
sti
test
test
insl
push
inc
pop
push
xor
insl
mov
outsl
sbb
in
inc
outsl
outsb
adc
xor
or
test
mov
sub
mov
cmc
fst
xchg
arpl
or
in
sti
mov
data16
sbb
ljmp
js
and
das
and
mov
or
fimull
mov
mov
and
aad
push
xor
js
in
jnp
sub
push
add
and
rclb
pop
jne
fcmovne
and
ret
sbb
movl
jbe
loopne
ss
rcll
daa
inc
lds
scas
bound
pop
imul
lds
into
das
imul
inc
mov
adc
ds
out
lahf
mov
xor
popa
aas
outsb
push
stos
cs
std
mov
xchg
inc
inc
mov
push
sbb
adc
inc
push
dec
stos
decl
jle
scas
sub
and
inc
dec
ret
mov
fdivrs
mov
cld
pop
pop
add
popa
outsb
jo
sbb
mov
xlat
bound
test
cmp
dec
xor
cmp
mov
cmpsl
rcll
or
push
sti
fs
or
aas
cwtl
inc
mov
mov
lds
jle
jp
fs
in
dec
bound
pop
fsubr
int3
jl
inc
stc
jge
and
enter
xor
js
mov
ret
jg
js
addr16
jnp
mov
cmp
sub
cmp
and
jb
jnp
mov
add
jl
roll
hlt
repz
fs
fwait
gs
rcll
movntq
inc
mov
fs
cmp
mov
testl
into
or
jb
outsb
dec
ja
in
nop
mov
sti
or
pusha
das
add
jne
xchg
push
xchg
push
sarb
ja
push
mul
and
dec
add
pop
cmpl
subl
cmp
sub
or
xchg
in
or
movsb
mov
jle
and
mov
push
test
add
and
jb
lods
xor
pusha
mov
inc
push
into
jmp
adc
pop
int
jns
pminsw
aaa
cmp
xchg
mov
xchg
enter
inc
mov
mov
movsb
jae
pop
adc
push
mov
icebp
dec
addr16
sbb
fistps
loope
ljmp
imul
arpl
mov
ret
add
mov
sbb
mov
hlt
mov
pop
jle
enter
push
xor
fidivl
arpl
js
les
test
push
cmp
xor
daa
pop
andb
adc
add
mov
cmovs
xchg
sub
jno
jo
fwait
dec
fmul
pop
mov
addr16
xchg
hlt
movsb
lea
add
int3
ret
dec
mov
insl
int
cmp
in
mull
les
adc
add
or
sbbl
push
mov
add
cwtl
mov
push
xchg
insb
negl
hlt
cltd
jp
inc
jp
leave
hlt
sarb
enter
lds
push
fbld
loop
cmp
add
push
xor
sub
cmp
inc
int3
mov
mov
enter
pop
cmp
je
sti
jmp
jle
sbb
mov
inc
test
in
imul
loop
lods
jb
lcall
pop
inc
mov
popa
add
xchg
ja
scas
or
fs
sbbb
jns
outsb
dec
inc
lret
cwtl
inc
dec
dec
adc
xor
pop
mov
js
dec
rol
nop
lret
mov
mov
stc
lahf
xor
jne
push
xor
pop
aas
rolb
pop
and
mov
xor
sub
iret
cmp
in
xor
int3
xchg
clc
xlat
dec
stos
jo
loope
test
xchg
in
sub
js
push
xor
and
push
add
jnp
hlt
popa
and
lret
loope
cmpl
les
scas
jnp
fidivrs
out
inc
pop
jo
jno
insl
jae
lds
imul
insb
movsl
xchg
or
inc
or
cmp
xchg
testb
addb
sarl
cs
fildll
or
cmp
mov
call
inc
mov
jno
sbb
fstps
adc
xchg
std
ds
push
xchg
cmp
push
or
scas
jmp
faddl
int3
jo
inc
pushf
mov
add
imul
subb
daa
jns
push
bts
in
fwait
sub
jb
pusha
sbb
cwtl
lret
dec
push
mov
cmp
mov
fsubrs
lcall
mov
mov
add
lcall
les
push
dec
ret
jbe
and
ljmp
xchg
add
xchg
mov
sbb
out
jno
pop
popa
adcl
add
scas
leave
and
lret
rorl
mov
pop
pusha
jecxz
rol
aaa
mov
pop
add
ja
cmc
sarl
punpckhwd
fiadds
shll
pop
shl
mov
jb
adc
cli
ds
loopne
inc
or
imul
lcall
das
outsl
stos
jl
mov
out
pop
test
in
ret
mov
aam
and
dec
or
popf
loope
leave
incb
xchg
sub
fsubr
cltd
mov
xor
cmpsl
sbb
sbb
lods
inc
cwtl
pop
stc
ljmp
pop
dec
fidivrs
mov
jae
sti
aaa
cmpsl
fincstp
mov
int
std
push
fsubr
aad
in
xchg
add
fadds
jo
mov
xchg
sub
lods
ret
bnd
xor
xchg
sbb
xchg
push
enter
adcl
mov
mov
xlat
jne
rcl
aaa
fstl
mov
popa
pop
cmpsl
inc
aad
rcl
adc
or
sbb
push
mov
jge
adc
or
xor
cmp
stos
dec
lret
mov
bound
das
in
or
adc
incb
xor
insl
pop
test
aam
push
leave
aam
inc
and
fsubrs
int3
add
fcomip
movsb
aad
sahf
xor
daa
mov
inc
mov
cmp
mov
call
sbb
dec
sbb
mov
lahf
loop
repnz
cmp
cmp
jno
sub
cmp
popf
push
jmp
lods
neg
aaa
mov
jbe
xor
sbb
mov
sub
sti
fcompl
mov
add
jnp
sub
pop
scas
and
test
sbb
mov
mov
add
pop
cld
pushf
arpl
fadds
and
xchg
movsb
sub
les
sahf
xor
xor
stos
jg
mov
push
mov
pop
mov
in
stc
dec
adc
dec
test
sub
push
sub
push
cmp
nop
cmc
and
ret
test
test
fdivl
testl
sub
and
fwait
les
xlat
or
xor
jp
cmp
xchg
xor
outsb
sbb
sbb
data16
jmp
insb
iret
add
pop
fs
mov
iret
jae
push
test
cltd
jo
cmp
iret
push
js
jl
in
mov
aaa
push
out
ficoms
pop
jbe
das
inc
sbb
sbb
push
push
add
ret
mov
add
jno
push
or
test
movsl
mov
adc
xor
jo
xchg
out
stos
mov
repz
pushf
dec
icebp
sub
mov
sub
push
movsb
cmp
sub
xchg
cltd
push
orl
lcall
js
scas
adc
mov
xchg
sbb
clc
ret
push
sbb
push
insb
aaa
into
leave
lret
std
xchg
test
mov
jne
out
mov
cld
xlat
mov
test
adc
test
mov
mov
movsl
xor
sub
test
add
testb
cmp
jbe
test
jle
stos
and
and
shr
lahf
sub
mov
mov
outsl
loop
mov
ja
fcoms
loop
call
push
and
cltd
mov
iret
cltd
jmp
scas
clc
xchg
sbb
iret
push
add
mov
fists
cmpb
outsl
test
push
shrl
and
jle
std
fstps
fiaddl
lods
fs
std
sbb
bound
push
mov
fistps
xor
fdivs
fs
out
fisttpl
clc
cmp
dec
aad
sbb
cld
loopne
mov
jecxz
pop
pusha
push
and
jae
out
pop
xchg
gs
aaa
ret
jecxz
out
mov
xchg
fwait
mov
nop
dec
push
push
mov
sbb
inc
sahf
dec
lret
jmp
insl
mov
shrb
cmp
les
jns
in
xor
dec
xchg
lcall
cld
dec
test
mov
pop
mov
xorl
xor
or
adc
ffree
shlb
nop
lea
jmp
push
loope
mov
jb
sub
cmpsb
jmp
adc
stc
out
adc
orb
loop
sub
jg
dec
fidivl
fisttps
mov
ss
idivl
push
pusha
out
iret
shrb
xlat
in
inc
addl
and
and
xor
pop
ds
cmp
jp
aam
pushf
mov
loop
incb
xchg
mov
mov
pop
push
scas
lds
adc
int
cltd
int
add
mov
inc
dec
enter
mov
adc
lods
mov
sahf
dec
push
fwait
sahf
cmpsl
cwtl
pop
mov
sbb
adc
inc
sub
lods
adc
xchg
jne
movsb
push
insl
lahf
inc
stc
cmpsl
inc
je
mov
pop
mov
mov
out
fisubrs
adc
insl
std
pop
pop
xchg
arpl
sub
call
xchg
jo
imul
stos
mov
push
xorl
sub
dec
int3
mov
adc
lock
inc
aas
push
test
inc
push
sbb
test
shl
lea
push
dec
ja
insl
xor
push
test
dec
adc
adc
imul
in
add
pop
cmp
mov
jne
pushf
sub
rcl
and
lahf
dec
pusha
pop
es
into
sbb
and
inc
test
notl
pushf
stc
sbb
sub
or
out
lahf
cs
or
inc
mov
or
aam
mov
out
inc
push
mov
mov
in
cmpl
adc
fnstcw
mov
xchg
inc
fwait
lods
pop
das
mov
and
fcmovne
cmpsb
fcompl
and
mov
jae
in
mov
inc
sarl
adc
mov
adc
fcoml
push
in
jnp
imul
aaa
inc
add
xor
pop
mov
icebp
insb
mov
out
jmp
adc
scas
and
pop
stos
pusha
mov
dec
int3
pop
mov
add
mov
fwait
pop
es
sub
ds
lret
lea
pop
outsl
push
mov
jb
int
xchg
jecxz
add
fwait
sbb
cmp
insb
aad
xor
mov
sahf
bnd
ficomps
lret
es
jbe
clc
movsl
mov
cmpsl
sar
pop
xor
and
xor
in
and
inc
and
faddl
cmp
movhps
mov
ror
sbb
push
rcr
push
dec
outsl
push
dec
mov
push
stc
div
in
adc
imul
or
sbb
aam
cld
dec
test
cmp
adc
inc
test
out
cmp
adc
dec
clc
fs
js
inc
mov
mov
test
dec
mov
mov
sbb
jno
data16
push
test
popa
xchg
lods
fsubl
mov
push
leave
push
mov
scas
dec
stos
daa
mov
mov
pushf
jns
dec
push
jnp
add
mov
mov
or
out
lods
insb
jno
and
andb
adc
lcall
jecxz
pop
js
arpl
sahf
fldenv
jo
insb
sbb
imull
clc
dec
cmp
push
xchg
pop
pop
negl
sar
fsts
fsts
push
je
inc
and
sar
call
in
out
or
call
cltd
cltd
ret
fstps
stc
shlb
enter
jbe
xchg
test
dec
jecxz
ficomps
rep
fmull
xlat
pop
and
pop
mov
mov
ljmp
imulb
mov
jae
xor
test
pop
inc
xchg
mov
and
js
in
repnz
sub
xor
sbb
rol
adc
lods
push
mov
push
adc
in
sub
insl
in
xchg
jecxz
rolb
push
xor
add
mov
jne
lds
aam
jns
add
mov
push
test
mov
icebp
dec
and
pop
push
sbb
jecxz
pop
nop
je
xor
xchg
xor
sub
or
loopne
jecxz
test
sahf
js
int3
add
aam
mov
in
inc
lcall
pusha
fcompl
pop
bswap
inc
dec
cmc
sub
add
inc
in
clc
test
std
jnp
out
push
testl
fildl
and
loope
pop
mov
ds
call
adc
lahf
bound
ja
nop
mov
and
test
or
pop
ss
leave
push
dec
call
mov
and
ljmp
xchg
enter
adc
push
lock
dec
dec
dec
pushf
das
and
loop
jle
outsl
cmpsl
fldt
add
lea
fsubrp
sbb
bnd
xchg
lcall
xor
xchg
loopne
adc
dec
jno
xchg
cmpsb
imul
push
pop
popf
je
sub
push
xlat
blcmsk
sub
adc
fdivrl
jo
mov
pop
jb
dec
outsl
shrb
inc
test
es
jo
adc
cmp
or
mov
repnz
pop
xchg
push
dec
repnz
jle
cmp
test
sbb
mov
gs
or
rcrl
jae
cmp
mov
pop
rorl
add
sub
pusha
popf
inc
mov
test
out
push
add
fs
sub
xor
xchg
inc
lds
push
imul
and
pop
mov
push
clc
in
cmp
cli
cwtl
dec
in
fcomps
in
push
jae
and
inc
cmpb
adc
in
xlat
notl
jae
mov
stos
sub
cmp
loop
mov
outsb
addr16
lret
pop
out
sub
fstl
mov
loop
xor
out
out
cwtl
ret
pop
test
dec
shl
xchg
add
dec
outsb
mov
inc
imulb
sahf
in
and
das
pop
mov
adc
add
inc
movsl
popf
or
mov
gs
or
and
lret
imul
push
dec
loope
lds
pop
subb
sbb
xchg
push
dec
fsubl
out
add
outsl
mov
fcmovb
ljmp
mov
and
sub
cld
adc
pop
lock
mov
cmp
push
das
add
mov
jmp
out
mov
mov
stc
cld
adc
pusha
pop
push
aaa
xchg
inc
shl
hlt
nop
sbb
and
addl
outsl
pop
test
ret
out
or
lret
mov
mov
iret
jmp
popf
sbb
mov
mov
imul
inc
movsl
xchg
sbb
jae
add
mov
leave
sbb
notb
inc
adc
dec
fwait
arpl
jae
pusha
mov
and
scas
scas
fwait
repz
jb
fidivl
cs
insl
mov
ja
in
xchg
lcall
and
sarb
out
insl
xchg
in
or
out
push
cmp
insb
push
enter
lock
jnp
xchg
mov
scas
or
xor
mov
test
push
pop
xor
es
xchg
adc
add
cmp
mov
inc
decb
hlt
xchg
fs
movsl
aam
fldl
inc
sbb
sbb
sbb
mov
pop
or
jl
fstl
mov
into
sbb
andl
popa
mov
fsubr
dec
inc
xchg
jmp
add
in
cwtl
push
out
add
int
scas
and
shrb
scas
loop
jp
mov
sub
or
cltd
push
cld
jo
mov
mov
ljmp
xchg
fistpll
std
pop
xchg
movsl
out
and
xor
fwait
aam
icebp
push
lea
pop
push
test
std
dec
jmp
popf
imul
pop
add
mov
out
xor
rorl
mov
testb
xchg
pop
imull
pop
ret
adc
xchg
inc
pop
and
outsb
xchg
cmp
jl
out
icebp
ss
mov
add
add
adc
and
xor
inc
sbb
pop
aas
dec
pop
mov
stos
dec
daa
inc
jge
stc
shlb
pop
into
dec
int3
sub
push
cmp
cmpsb
jmp
lahf
mov
std
imull
test
push
gs
xchg
push
loope
sub
pop
bound
and
call
in
sbb
ret
jl
or
add
cmp
popf
cmc
jge
xchg
adc
sbb
icebp
imulb
cmp
pop
jecxz
inc
sbb
jle
cwtl
mov
test
push
and
add
pop
arpl
imul
xchg
pop
in
jg
sbb
mov
dec
mov
fcoml
imul
inc
loopne
dec
xchg
inc
xor
dec
scas
mov
mov
cmp
dec
mov
push
xor
out
push
fdivr
sbb
jp
cmpsb
cli
test
sbb
movq
aam
jo
pop
test
sub
inc
push
jbe
add
outsl
popf
jno
mov
aas
scas
gs
and
pop
add
inc
sbb
std
enter
stos
cs
call
enter
scas
inc
out
or
emms
mov
xchg
sbb
push
mov
or
sbb
pop
sbb
daa
pop
imul
push
inc
dec
push
push
xor
inc
cmove
sbb
and
lea
push
mov
rorl
jle
add
pop
pop
pop
mov
js
fwait
push
jb
xor
sarl
add
adc
leave
dec
cmp
sbb
aaa
add
cli
and
or
popf
rcrl
imul
out
xor
or
mov
or
adc
pop
fmuls
call
mov
dec
cmc
mov
xor
cmp
cmp
adc
jnp
bound
and
push
test
insb
repnz
rcll
rcll
rcrb
lahf
ss
sbb
xchg
das
inc
dec
push
cmp
mov
adc
jl
mov
jmp
lea
jne
add
jnp
test
test
jp
iret
cltd
mov
iret
cmp
cmp
cmpsl
outsl
inc
cmp
pop
inc
inc
ret
sub
hlt
sahf
push
leave
xor
push
jns
hlt
fldcw
test
call
mov
mov
cltd
scas
mov
and
mov
mov
ja
fnstcw
inc
push
inc
es
std
xlat
pop
ja
mov
popf
inc
push
pop
lock
rcll
push
lret
stos
iret
add
sub
das
xchg
add
out
adc
mov
fists
jecxz
es
out
insl
jb
jbe
lock
cwtl
loope
fdivrl
gs
add
jbe
loop
pusha
or
sub
lret
cs
ljmp
arpl
dec
decl
dec
ficompl
mov
hlt
fs
in
sub
sub
xor
addr16
jnp
jne
std
mov
daa
mov
mov
ss
popf
inc
mov
adc
inc
dec
imulb
dec
cld
bound
rolb
popf
arpl
mov
sbb
dec
or
lret
call
push
adc
pop
mov
ret
cltd
pop
aaa
jecxz
mov
sub
or
jmp
call
stc
lcall
jecxz
cmp
push
mov
pop
xor
adc
push
rol
xlat
shrb
test
add
push
outsl
or
dec
cmp
cmpb
xchg
je
cld
insb
fstpl
lret
mov
xchg
shl
mov
arpl
pushf
xor
push
cs
fwait
in
xor
das
bound
rcrl
lods
push
rcll
sahf
sbbb
inc
cmc
lods
mov
push
xchg
lret
lds
inc
push
inc
jecxz
ds
and
sub
cmc
dec
jmp
cmp
test
notl
lahf
test
ss
inc
mov
out
test
pop
lods
mov
stc
or
xor
or
mov
sbb
xchg
mov
pop
repnz
mov
adc
cmc
lock
loope
popf
inc
mov
mov
repnz
xor
dec
sarb
sub
mov
inc
mov
xchg
aaa
pop
add
adc
out
inc
xor
xorb
insb
mov
mov
aad
arpl
imul
loope
lret
dec
jno
mov
jl
jnp
push
sbb
out
lods
dec
sbb
jnp
sub
mov
fisubrs
cmpb
aam
out
xlat
sub
pop
or
scas
loop
pop
hlt
or
pushf
mov
lods
mov
lret
cwtl
jmp
ljmp
testb
dec
test
pop
pop
push
imull
pop
fadds
rorl
and
jle
ficomps
inc
adc
adc
xchg
sbb
int
mov
test
sbb
jl
inc
inc
sub
sub
loop
arpl
daa
mov
fisttpll
adc
cmp
gs
mov
popa
mov
dec
jno
xor
clc
sahf
nop
icebp
mov
dec
cli
mov
mov
sbb
pmullw
je
lret
lahf
loopne
sbb
xchg
xchg
push
inc
dec
int3
inc
inc
add
es
rol
outsb
js
or
mov
test
fmull
shlb
jae
jl
sbbl
test
aad
arpl
fldt
add
faddp
imul
xchg
movsl
fs
mov
dec
push
mov
sarb
and
sub
jl
or
mov
jno,pn
mov
aas
in
cmp
xchg
mov
fists
ds
aad
jg
push
out
cmp
adc
out
inc
cwtl
add
out
daa
arpl
xor
xchg
decl
cmp
and
out
lods
stos
mov
mov
mov
jmp
pop
pop
xchg
inc
shl
pop
adc
jl
mov
idiv
out
add
xchg
aaa
dec
pop
cli
out
cmp
adc
int3
popf
es
mov
mov
decw
roll
stos
out
cmp
aad
icebp
and
dec
push
sub
mov
pop
jno
pop
sbb
mov
stc
stos
or
daa
pop
mov
mov
lods
jbe
cmp
lods
or
sbb
mov
out
negl
push
aas
push
aam
fwait
test
adc
lock
pop
ja
es
pop
add
shrl
add
mov
pop
cli
push
cmp
dec
mov
mov
push
mov
pusha
fs
in
and
fmull
test
xchg
mov
aam
push
iret
xor
popf
or
xchg
daa
mov
mov
mov
jmp
aas
push
lea
or
mov
inc
ja
push
testb
daa
add
or
popa
dec
movsl
mul
push
push
pop
push
push
in
push
cmp
popf
mov
mov
xor
fs
cli
sbb
inc
mov
xchg
xchg
pop
mov
pop
call
lea
lods
addb
roll
adc
popa
jns
pusha
pop
scas
shlb
in
rorl
negl
pop
mov
pop
mov
mov
lcall
pop
mov
lea
sbb
sti
or
test
mov
mov
loope
jnp
jo
inc
xchg
mov
enter
sub
mov
and
sahf
fdivrs
mov
jg
lret
xor
cmp
imul
mov
roll
fptan
fs
cpuid
add
jne
push
lock
push
stc
push
pmaxub
push
cmp
and
in
or
cmp
fistpll
rcl
dec
mov
pushf
sbb
shll
fdivrs
mov
sbbb
cmp
jnp
lret
stc
jmp
cmp
lea
test
cmp
mulps
lret
cmpsb
jmp
lahf
jge
sbb
xchg
mov
inc
jp
sub
jbe
xchg
leave
adc
cltd
sub
cmp
popf
aaa
push
mov
and
jmp
jl
int
fmul
data16
negl
push
jecxz
fdivp
sbb
mov
mov
sbb
int
dec
or
jns
mov
test
mov
sub
mov
inc
mov
lcall
mov
jp
jae
lods
faddl
sbb
mov
mov
lret
je
int
ljmp
int
sub
mov
mov
rol
and
scas
push
aam
ljmp
xchg
dec
cmp
daa
aaa
lret
sbb
cmp
in
push
out
addr16
sbb
popa
sbb
or
repnz
inc
pop
out
or
pop
sbb
test
sub
divl
icebp
mov
cmp
fs
insb
movsb
movsb
mov
xchg
sub
sub
jns
cld
jno
dec
xor
fucomi
in
inc
es
sbb
mov
jae
pop
es
leave
pop
inc
xor
sub
icebp
mov
cwtl
shll
xor
and
adc
push
pop
push
xchg
out
fwait
insb
push
jmp
ja
test
iret
cmpl
mov
scas
sub
loopne
jno
jle
int3
sbb
adcl
push
dec
xchg
aad
in
add
jo
in
add
mov
aas
dec
test
movsb
xor
sahf
es
iret
movsl
xor
cmp
in
or
out
adc
shll
lock
out
in
mov
sti
frndint
sbb
rcrb
push
push
sbb
pop
jo
in
je
inc
and
mov
stos
out
adcb
aam
loope
fiaddl
into
jns
mov
pop
nop
xchg
int3
ss
or
xor
xorl
jecxz
mov
out
push
pop
ss
lea
das
hlt
sti
loope
insb
aad
and
jp
mov
adc
ficompl
mov
js
lret
addl
pop
ret
loopne
popf
mov
jns
pop
sub
inc
push
aas
test
les
mov
push
lret
jns
cmp
jne
aaa
fcoml
dec
mov
cmp
stos
dec
das
sub
fwait
aaa
das
sub
ret
xchg
xorb
push
lods
sub
iret
addr16
push
inc
faddl
stos
cld
dec
sbb
push
mov
fisttpll
sbb
fstp
push
mov
int
adc
scas
sahf
movsl
int
inc
push
push
lret
and
lret
or
xchg
mov
dec
clc
repz
addl
push
ror
int
leave
aad
xchg
push
push
or
cmp
dec
mov
cmp
in
pop
out
cmpl
repnz
addr16
xor
test
es
mov
ljmp
mov
inc
js
xchg
decb
in
outsb
inc
imull
ja
jb
ja
insb
fdiv
sbb
pushf
sbb
div
je
adc
pusha
sbb
sub
sub
jecxz
cltd
out
movsb
lods
fiadds
push
or
sub
pop
stos
clc
in
and
xchg
dec
stos
testb
pop
gs
dec
adc
imul
cmp
sub
loope
scas
mov
and
int3
adc
pop
outsb
es
addr16
imul
cmc
in
rcl
sbbl
mov
addl
insb
mov
shll
sub
insl
xor
ret
sbb
mov
jmp
mov
hlt
and
dec
or
jg
xchg
out
adc
cwtl
mov
in
xchg
adc
fisubrl
inc
scas
movsb
inc
xchg
stos
or
aas
sub
and
push
sahf
frstors
out
dec
sub
popf
jb
jae
mov
int
cmp
xlat
mov
dec
push
mov
cmp
and
xchg
scas
das
es
push
or
fmuls
pop
cmp
lcall
mov
popa
daa
pop
pop
lea
js
xchg
add
and
sbb
push
data16
xchg
push
dec
in
pushf
ja
mov
cli
scas
mov
push
mov
mov
jmp
test
and
xor
aas
cmp
mov
sub
aas
inc
push
mov
loopew
loopne
lock
adc
aas
fwait
dec
sarb
aas
jmp
syscall
xlat
cmc
cmpsb
add
push
movsb
popa
aas
push
mov
fistpll
ja
ror
scas
push
push
movsb
or
jne
mov
subb
adc
push
xor
cld
inc
scas
loopne
imul
test
movsb
lahf
out
mov
add
fnstcw
negl
lcall
push
outsl
and
pusha
dec
sbb
fdivrs
sbb
in
jg
subb
adc
mov
sub
rolb
mov
sar
out
arpl
jmp
movb
or
sub
jl
cld
mov
jle
fdivrl
lret
pop
pop
cmp
bswap
cwtl
mov
add
addl
jg
sbb
jbe
dec
aam
fsts
ficompl
das
rorl
cmp
adc
repnz
gs
xchg
mov
jnp
add
stos
das
and
lahf
lcall
add
repz
out
aaa
test
dec
lods
ss
jns
mov
test
mov
cmc
jne
cmpsb
dec
roll
sbb
arpl
jg
scas
jb
cld
pop
or
lret
push
mov
xchg
lods
cmp
scas
pop
aaa
loop
in
adc
fs
or
jle
ret
pusha
xor
fcoml
sub
inc
adc
clc
xor
jecxz
in
mov
dec
push
inc
lahf
loope
mov
add
pusha
lret
in
cmp
das
mov
cli
sub
movsb
mov
adcb
xor
or
and
dec
xchg
ficomps
jo
sbb
sahf
scas
ss
jmp
fiadds
aam
fldl
cld
mov
ja
lock
sub
imul
stos
jle
stc
add
shrb
pushf
adc
push
stos
jge
add
int
sub
xorb
fisubrs
fs
and
xchg
test
out
mov
arpl
xchg
mov
cltd
in
inc
adcl
lret
push
aas
and
das
xor
enter
jbe
jae
in
cmp
xor
psubsb
fdivl
dec
cs
shl
loope
sbb
sbb
mov
loope
inc
dec
shr
test
xchg
jnp
daa
jl
aaa
xchg
xchg
push
xchg
mov
das
pusha
mov
lret
sbb
mov
inc
jmp
or
pop
cmp
sub
jbe
ficoml
dec
loope
mov
rclb
sbb
cs
int3
aas
pop
iret
mov
and
ficoml
sub
imul
mov
out
dec
mov
dec
loope
sub
cmpsl
loope
into
push
adc
sbb
bound
rol
add
mov
adc
repnz
xchg
mov
inc
sub
nop
fadd
rorb
test
ds
adc
pushf
cltd
stc
sbb
pusha
insb
stc
or
mov
stos
lea
xor
sbb
push
inc
fcmove
test
aas
adc
jne
inc
mov
jmp
sbb
aam
sbb
adc
sbb
jns
insb
movsb
cli
into
js
push
cmp
jp
and
or
mov
fadd
aas
lods
mov
inc
jg
cli
fisubl
push
test
sbb
out
pop
push
xchg
out
test
ret
pop
push
inc
je
add
xor
jecxz
mov
pop
clc
ret
add
movl
pusha
mov
push
ds
xlat
mov
dec
xchg
mov
fnstsw
fstpl
inc
test
in
push
ljmp
fucomip
fwait
jnp
mov
outsl
out
cmp
xchg
jno
add
aam
std
inc
sti
add
push
mov
repnz
sub
push
push
sbb
loopne
popf
add
dec
pop
add
ss
out
and
cmpl
sbb
add
jnp
mov
fistpll
lods
mov
inc
fcomps
sub
loopne
cmpsl
jge
aam
inc
sbb
mov
out
ret
mov
add
cld
mov
or
mov
cld
mov
mov
lea
movsl
add
xor
xlat
mov
xchg
sbb
mov
hlt
int
or
insb
pop
pop
popa
dec
inc
adc
ss
xchg
je
cmpsl
inc
adc
iret
jl
cmpsb
incb
je
mov
movsl
out
or
js
adc
into
pop
inc
daa
ret
in
add
sti
sub
push
fucomip
mov
pop
mov
xlat
mov
pop
xlat
in
dec
sub
dec
xchg
add
rcrl
cld
daa
add
in
lahf
and
out
add
aad
xchg
mov
jae
mov
sbb
mov
jecxz
stos
je
daa
mov
lods
adc
xchg
jecxz
xchg
sarl
test
std
mov
test
push
pop
jae
insl
data16
ret
jecxz
leave
cwtl
icebp
sbb
les
shl
inc
sbb
xlat
mov
movsb
mov
mov
sub
hlt
lods
adc
cmp
pop
loopne
lds
jmp
mov
push
aaa
xchg
mov
push
mull
aam
and
fsubrl
test
scas
cmpsl
cmp
pop
fists
or
fldcw
add
stos
loopne
int
mov
loopne
cmpsb
dec
aad
test
dec
popl
scas
adc
mov
mov
sahf
mov
or
repnz
xchg
fmul
xlat
out
lret
out
mov
dec
inc
push
movsb
push
shrl
insb
mov
rclb
in
test
add
and
pop
cmp
xor
ja
mov
sbb
dec
jge
xor
mov
cmp
lea
cs
mov
nop
in
in
movsl
daa
dec
push
adcb
cmp
jmp
dec
sub
cs
leave
dec
adc
sub
imul
sub
sbb
fs
jecxz
pop
inc
inc
xor
push
mov
or
fucomp
pop
inc
dec
jns
dec
mov
bound
mov
jne
jge
add
int3
lock
cmpsb
jg
push
cltd
out
lcall
or
int3
xchg
je
loop
and
lcall
dec
pop
push
sub
pop
fwait
movsl
in
and
and
popf
dec
dec
jl
lahf
xchg
in
inc
xor
mov
push
dec
and
pop
repnz
cmp
sub
outsl
jmp
xchg
mov
clc
push
push
xchg
sub
std
mov
add
das
in
mov
mov
sub
mov
sub
or
pop
pop
pop
lods
push
inc
xchg
daa
xchg
cmpb
mov
je
push
add
inc
fadd
sub
and
push
lods
mov
scas
aad
xor
jg
push
xor
xchg
loopne
orl
mov
inc
fcoms
pop
push
cltd
nop
pop
jecxz
cmp
mov
mov
or
lcall
jmp
rol
shl
rolb
push
outsb
addl
test
pop
mov
aam
push
cli
xorl
xchg
or
popf
sbb
jns
sub
loope
sub
mov
ret
ret
pushf
adc
mov
orb
enter
out
aam
xchg
push
movsl
mov
sbb
lret
sub
enter
arpl
cs
mov
sbb
jl
ret
cs
and
mov
mov
sub
xchg
inc
jl
in
mov
cmp
sub
jecxz
push
adc
jg
lods
xchg
call
fs
lods
push
out
mov
dec
xchg
xchg
and
mov
jl
pop
xchg
xor
inc
shlb
sti
mov
dec
sar
dec
mov
das
arpl
dec
xlat
daa
dec
xchg
icebp
push
dec
aam
xor
ds
jae
fdivl
and
inc
fwait
xchg
call
fstpl
mov
loop
mov
xchg
std
pslld
adc
dec
adc
mov
jp
pop
xor
test
mov
jl
jnp
cli
push
cmp
into
xor
xchg
jmp
in
fstp
ret
push
pop
jno
or
mov
pushf
lcall
dec
push
sbb
mov
push
cltd
lahf
mov
jae
add
daa
and
push
leave
test
test
mov
and
pop
push
xchg
sbb
rorl
push
push
in
adc
pop
and
cmp
pop
pushf
dec
add
jmp
inc
xor
jp
orl
imul
lock
xchg
repz
mov
inc
mov
sub
loopne
fstpt
sbb
sbb
mov
and
xchg
xchg
xor
pop
popf
mov
add
mov
dec
push
js
sbb
daa
inc
sub
pushf
and
fwait
rclb
js
aam
adc
mov
in
mov
iret
xlat
sub
mov
mov
jbe
push
mov
sbb
pop
mov
xchg
xchg
imul
fmul
insb
dec
sub
stos
int3
ljmp
mov
ljmp
sub
daa
sbb
jg
loopne
sub
mov
xchg
and
cld
xor
sarb
bound
or
je
ljmp
inc
or
fstps
aam
ja
inc
jne
rcrl
fcoms
mov
mov
cli
adc
popa
sbb
push
mov
clc
lods
pop
mov
out
test
inc
cmpsl
xchg
mov
mov
fidivs
mov
adc
jns
mov
pop
adc
nop
es
jo
dec
imul
dec
stos
sbb
mov
negl
xchg
enter
xchg
lea
loopne
mov
cmp
xor
add
sbb
xchg
shlb
mov
jo
fucomip
cli
push
shlb
mov
sbb
mov
sti
shlb
pop
leave
and
fwait
shrl
lods
inc
sbb
push
adc
xchg
mov
mov
fmuls
xlat
adc
push
outsb
je
aad
mov
push
or
cmc
adc
mov
insb
push
icebp
incl
mov
mov
pop
xchg
vpsubsw
xor
fidivrs
subb
adc
and
xor
loopne
mov
xor
outsb
shrb
rcrl
out
es
pop
mov
cmp
decb
jmp
mov
fisttpl
push
dec
mov
lods
add
cs
xchg
mov
std
inc
sub
inc
jbe
aaa
sti
mov
pop
push
push
popf
jb
pop
mov
ljmp
cmpsb
inc
adc
jg
add
out
std
lock
rolb
js
and
dec
push
cld
push
jmp
dec
push
mov
mov
xor
das
std
inc
cmpsl
lahf
mov
cmp
popf
sbb
les
cld
xchg
push
or
push
iret
cltd
stc
mov
notb
pusha
inc
pop
or
test
imull
out
adc
xchg
mov
test
dec
cmovbe
push
jne
mov
mov
pxor
mov
lcall
std
js
pop
inc
push
popf
jmp
ret
adc
push
push
xchg
ss
mov
adc
xchg
sub
mov
jae
stos
rclb
in
mov
mov
fsubr
mov
loopne
loop
xor
adc
sbb
jmp
bound
ds
xchg
mov
ds
testl
movsb
and
shl
fbld
sub
fs
mov
xchg
mov
jnp
fldcw
out
sub
mov
lea
movsb
cmp
shll
mov
jmp
repz
nop
leave
cwtl
popa
jno
int
sbb
shlb
jl
ljmp
xchg
jbe
jecxz
aas
add
loope
and
and
push
inc
std
mov
jmp
mov
popa
jno
int3
push
pusha
hlt
inc
xor
inc
ljmp
paddw
div
test
in
cli
pop
jmp
inc
pop
mov
arpl
cmp
jge
adc
iret
push
inc
test
push
xor
aas
xor
fsubl
jmp
xchg
sar
mov
add
stos
dec
ret
push
xor
dec
xor
mov
ljmp
cmpsb
mov
mov
push
xlat
push
and
int
clc
stos
hlt
xchg
fsub
inc
inc
adc
out
sbb
sbb
inc
inc
popf
loope
test
jo
inc
xor
ds
ds
mov
js
xchg
imul
iret
hlt
cmpl
mov
jl
std
leave
push
cmc
in
out
pop
mov
inc
loope
test
fidivrs
cli
hlt
lods
pushf
into
mov
outsb
cmp
adc
bound
loope
pop
loopne
fisubl
jl
pop
iret
inc
push
sbbb
daa
cmc
jecxz
and
popa
add
lahf
rclb
or
pop
call
pop
xor
sub
fsub
fdivrl
or
jne
adc
jb
xor
cmp
adc
bound
sbb
pop
divb
fst
lret
movsl
lods
inc
fs
pop
jecxz
shll
fstl
xor
pop
mov
push
mov
sbb
icebp
mov
jne
imul
in
mov
aas
dec
mov
lret
cwtl
jecxz
xchg
idivb
aam
and
inc
mov
repnz
inc
out
push
jmp
lcall
gs
mov
sbb
mov
or
test
lret
pop
mov
daa
sub
inc
xchg
jbe
pop
lods
rep
outsl
cmp
es
mov
jp
ss
add
clc
test
mov
push
loope
mov
xor
mov
pushl
sbb
jecxz
push
adc
jl
or
rcrb
xchg
pop
mov
adc
add
testb
orb
ja
sbbl
incl
push
lock
inc
sub
pop
divb
or
inc
ja
lods
push
fwait
ror
mov
cmc
cwtl
pushf
mov
hlt
sub
pop
das
sbb
ljmp
sub
lock
cmpsl
inc
xchg
or
push
loope
xchg
xorl
rcl
lea
pop
out
dec
sub
mov
loopne
pop
pop
xchg
imul
dec
adc
into
icebp
xor
adc
rcrb
sbb
push
cmc
adc
mov
fsubr
sbb
in
and
stos
jp
mov
lods
lahf
or
cmp
sahf
sbb
stos
outsb
pop
mov
xchg
out
scas
and
lret
inc
sti
jbe
adc
lahf
jle
into
or
popf
fsubrp
pop
xchg
gs
lcall
ja
lods
shrb
sahf
and
rcl
jmp
repz
add
ja
adc
loop
push
int
out
or
cmp
pop
sub
insb
packsswb
mov
cmpsl
aad
xor
mov
stos
dec
mov
aas
popa
mov
pop
fwait
pop
jo
xchg
andb
icebp
xchg
ss
push
rorb
stc
fs
xchg
loopne
stos
add
cmp
adc
xchg
push
rcr
lods
jmp
fcom
mov
adc
mov
icebp
cs
popa
pop
pop
cld
push
jbe
inc
es
nop
stos
or
repz
mov
mov
push
xor
subl
adc
inc
xchg
mov
mov
lcall
mov
mov
ljmp
in
fldt
add
into
mov
sti
add
jge
lds
ror
dec
mov
pop
sbb
lock
push
push
jecxz
xchg
xchg
inc
jl
push
loope
dec
pop
inc
inc
test
or
adc
sub
ss
cmp
pop
pop
or
cwtl
test
movsb
mov
cmc
cmpsb
fdivrs
inc
xor
dec
mov
xchg
adc
mov
mov
dec
cmc
aam
divb
ficompl
inc
xchg
lret
je
cli
dec
and
loopne
icebp
outsb
imulb
mov
repnz
adc
cmp
fisubrl
xchg
mov
test
jne
dec
das
fdivs
iret
xor
fwait
jmp
bound
mov
adc
imul
push
xchg
cmpsl
int
add
iret
xorb
xor
aad
sti
fwait
ds
push
add
sahf
gs
dec
leave
adc
xlat
or
pop
sbb
clc
push
scas
jnp
push
aas
jns
xchg
addr16
pushf
gs
fucomip
aas
cmpsb
inc
scas
lods
jno
test
andl
push
push
mov
lds
pop
fnsave
addr16
adc
sahf
mov
sub
or
pop
xlat
subl
outsb
cltd
les
add
or
repz
imul
sbb
psraw
sti
cmpsl
jno
mov
sarl
lock
cmp
jno
mov
jecxz
mov
or
cmp
xchg
xor
xchg
push
loop
or
out
faddl
push
mov
push
shll
push
scas
push
mov
aaa
cmp
orb
bound
mov
rol
inc
stos
and
cs
jmp
mov
cmp
dec
jno
push
or
push
pop
push
adc
mov
xchg
mov
aad
icebp
and
fwait
jbe
add
push
or
imul
outsb
scas
stos
cltd
pop
xor
rcrl
push
fmulp
movsl
in
fwait
arpl
cmp
loop
aam
mov
ret
stos
push
lds
mov
cmp
xor
and
sub
jmp
pop
push
and
cmp
jne
sub
in
cltd
mov
adc
sbb
mov
inc
adc
pop
mov
adc
js
push
sti
sub
ror
lods
lea
pop
dec
xor
in
push
jmp
out
and
mov
jg
jecxz
lahf
xchg
jns
cmp
cli
push
call
cmp
int3
in
sarb
cmp
out
pusha
pushf
pop
call
jge
mov
shrb
xor
and
dec
pop
shrl
call
and
add
mov
setbe
ss
fs
movsl
jp
gs
cld
jb
mov
ss
dec
scas
aad
jge
inc
pop
push
popf
push
mov
and
mov
stos
hlt
cmpsl
inc
jl
dec
and
aad
inc
xchg
sub
decl
sbb
inc
inc
push
pop
call
test
xchg
notl
lret
scas
push
ss
adc
dec
insb
imul
or
out
add
icebp
popa
sarl
jne
mov
sahf
out
in
pop
stos
int
inc
outsl
mov
shll
ja
fistpll
cmp
aad
mov
xchg
xchg
je
imulb
dec
mov
icebp
ja
mov
sub
test
sub
pop
xchg
pop
sbb
mov
das
mov
icebp
ret
ljmp
lods
scas
cmpsl
sbb
ja
fsts
inc
pop
mov
sbb
xor
mov
jno
mov
ret
add
push
insb
ss
and
mov
adcb
popl
mov
out
lret
dec
jnp
inc
stos
clc
xchg
inc
movsl
adcl
pop
push
and
push
xchg
lret
lahf
sahf
push
data16
int3
push
ljmp
dec
out
decb
fnsave
cmpsl
sbb
sbb
outsl
out
bound
and
xor
sbb
inc
lmsw
push
je
pop
rclb
fs
in
pop
xor
rcrl
mov
push
popf
and
sub
loop
nop
sbb
jbe
in
push
push
dec
pop
rorb
fsubs
es
pop
inc
in
out
outsb
mull
xchg
dec
les
jle
push
adc
mov
jg
mov
cmp
hlt
add
sbb
fwait
icebp
ljmp
or
push
aam
or
insb
call
jbe
call
mov
pop
and
jmp
mov
xor
add
mov
and
mov
cltd
adc
mov
cmpsb
aad
mov
mov
adc
jb
cmp
aas
cli
icebp
repnz
xor
mov
mov
or
cmp
nop
insl
dec
and
decb
outsb
jne
fiaddl
call
out
add
repz
ficompl
xor
mov
ret
inc
jns
and
dec
inc
cltd
sahf
xchg
add
fldl
xchg
mov
push
xchg
mov
and
sub
mov
xor
scas
orb
cmp
or
jnp
fmul
lret
je
sbb
adcl
arpl
or
add
push
addr16
out
mov
mov
enter
mov
aaa
cltd
push
adc
aas
adc
imul
mov
aaa
mov
in
sbb
xchg
cmp
cmp
bound
pop
jp
push
xlat
jbe
xchg
loop
leave
mov
stos
and
sub
addr16
push
insb
inc
fsubr
mov
jns
mov
cmc
pop
std
loop
and
mov
fsubl
sub
jbe
jb
push
repz
test
daa
hlt
jl
or
scas
dec
mov
jae
bound
add
dec
xchg
jbe
pushl
pop
sahf
sub
inc
je
fmuls
sbb
push
or
push
dec
dec
ss
rorl
movsb
jb
shrl
pop
test
mov
outsb
pop
push
adc
or
stc
push
insb
addr16
add
dec
mov
xor
and
lock
aad
test
fdiv
cmp
test
or
xchg
les
push
ret
jno
pop
add
ljmp
or
mov
pop
pop
sbb
xchg
test
xchg
mov
lods
icebp
ficoml
shrb
pop
jge
cmp
ds
lcall
bound
adc
xor
scas
mov
mov
add
stos
push
and
inc
lods
inc
xchg
inc
cltd
add
pop
jmp
mov
shll
aam
in
mov
insl
dec
push
jmp
inc
dec
mov
outsl
lea
push
aad
cltd
aam
jb
adc
cs
and
arpl
lcall
pop
sbb
push
shll
pop
or
cmp
lds
fcoml
insl
lock
mov
lock
push
rcrb
mov
sub
stc
ret
and
das
and
lahf
dec
loope
xchg
ss
or
or
jne
or
mov
mov
stos
mov
jnp
dec
xchg
aam
and
xchg
fisubrl
xchg
iret
xor
or
in
sbb
and
movsb
mov
neg
mov
and
iret
pmuludq
test
adc
leave
sbb
lods
jne
pop
in
sub
sub
cmp
mov
inc
loope
pop
sub
lods
shr
push
cmp
mov
jnp
jns
xchg
test
sub
stos
mov
pop
lea
sahf
push
mov
fsubrl
sub
xchg
mov
addr16
aad
jg
icebp
and
xor
scas
mov
movsl
jo
nop
test
sarl
cmpsb
pop
out
jl
and
cmpsb
pop
ss
clc
jle
fbld
ret
push
inc
mov
icebp
fmuls
pop
push
cmp
cwtl
adc
sub
ret
imul
daa
hlt
fidivl
fnstsw
loope
pop
loope
or
mov
adc
cmp
mov
jb
lret
pop
jns
sbb
xor
mov
fs
adc
push
bound
stos
xchg
pop
pop
cmpsb
lock
xor
test
lods
mov
nop
lahf
ja
mov
xor
sbb
lcall
lret
shrl
enter
lds
xchg
cli
lahf
lock
lret
and
lock
ss
xchg
jp
or
and
xor
insb
dec
cs
and
jl
push
lock
dec
adc
mov
push
js
cmpsb
popa
lret
cmc
lds
mov
sti
adc
cmovo
lods
out
in
stos
into
sub
mov
lret
data16
aad
jbe
mov
cmpb
sub
and
jns
or
bound
test
in
das
dec
sub
cmp
lods
push
in
dec
scas
out
sub
loopne
mov
xor
mov
addr16
xchg
stos
push
cld
loope
push
pop
andl
add
jbe
pop
ret
fistpll
pop
push
jmp
jp
ret
inc
push
rolb
mov
jno
xchg
int
arpl
xchg
inc
adc
pop
fwait
dec
cmp
jl
cmp
mov
push
inc
shlb
sub
xchg
mov
mov
sti
mov
aam
aam
cmp
sub
jecxz
movhps
fistpll
mov
jne
or
int
pop
mov
push
dec
cld
adcb
ret
arpl
or
mov
bound
xchg
sbb
push
mov
mov
add
jp
jmp
mov
ret
pop
and
loopne
into
mov
mov
dec
mov
in
sub
shl
and
daa
loop
sub
add
enter
das
sar
insb
ljmp
pop
jb
add
inc
cltd
push
mov
rcr
xchg
subl
jb
call
arpl
mov
xor
les
mov
cltd
xchg
sbb
push
mov
minps
jnp
mov
hlt
xchg
mov
jp
jl
inc
xor
add
mov
mov
push
push
in
roll
iret
jg
mov
mov
stc
into
sub
fistps
mov
pop
aas
and
loopne
and
adc
sub
sti
in
sub
in
adc
sahf
rolb
jbe
ficomps
or
icebp
mov
mov
rol
pushf
jmp
out
pop
mov
pop
or
dec
lahf
cs
xchg
sbb
cmp
test
push
mov
push
push
push
loop
jle
lods
mov
in
test
xchg
jl
inc
dec
rcrb
mov
push
sbb
fisttps
stos
mov
dec
pop
adc
xchg
dec
push
repnz
gs
xchg
movsl
pop
int3
xlat
mov
out
loope
and
cmp
stos
xchg
xchg
sub
or
adc
pushf
cmp
sub
sub
and
ret
inc
std
push
sbb
sbb
sahf
and
xor
icebp
add
mov
clc
mov
jle
pop
cmp
mov
fdivl
dec
jecxz
aad
ljmp
mov
fiaddl
in
popa
scas
pushf
add
jnp
add
push
adc
stos
push
dec
repz
jns
arpl
xchg
into
push
mov
hlt
dec
ret
aaa
shrb
loop
ds
arpl
pop
push
iret
mull
les
mov
call
call
out
rol
and
sub
push
inc
add
jae
xchg
in
push
rolb
cwtl
incb
in
push
lcall
movsl
sbb
dec
mov
sar
mov
lds
leave
mov
mov
mov
cmp
mov
shll
clc
incb
shll
or
out
pop
xor
mov
mov
mov
mov
mov
pop
cli
bound
jns
shll
mov
fstpl
sbb
sbb
shl
movsb
in
pop
fidivrl
pop
push
mov
mov
push
push
loopne
push
mov
or
jbe
jb
inc
popf
testb
daa
cmc
xchg
xor
pop
pop
test
pop
pushf
shlb
movsl
push
cmp
xchg
pop
test
loope
push
dec
add
test
push
fwait
ret
shl
cmp
lods
repnz
enter
ret
test
or
pop
test
mulb
test
push
clc
or
adc
dec
lret
popf
sbb
lahf
mov
xlat
pop
je
jge
fidivrl
jp
sub
fisubs
adc
imul
sub
ja
rcll
mov
dec
and
fmul
inc
cmp
popf
push
dec
jmp
jp
inc
jb
push
xor
aaa
jb
sbb
jmp
xchg
mov
xchg
shll
mov
jns
jns
aas
cld
xchg
cmp
stc
sub
and
out
popf
pop
push
nop
mov
test
add
pop
cltd
icebp
or
pop
and
pop
fdivl
adc
mov
jbe
into
jle
shll
jae
fbld
mov
jo
cmc
jmp
stos
cwtl
xchg
pushf
adc
test
xchg
out
pop
das
push
in
stc
sub
stos
cmpsl
sbb
inc
stos
movsb
add
xchg
adc
mov
xlat
adc
into
add
hlt
sub
cmp
lcall
cmpsl
sahf
sahf
xchg
movsl
repz
push
fstpl
insl
inc
xor
mov
leave
xchg
xor
jne
adc
loope
je
xchg
in
or
jbe
incl
cltd
or
push
nop
pop
cmp
xor
je
dec
or
or
add
pop
imul
fcmovbe
in
push
and
sub
add
pop
aam
arpl
jbe
cld
sub
mov
ja
pop
sbb
mov
add
pusha
or
pop
into
inc
addr16
scas
and
dec
pop
sar
sbb
cmp
mov
mov
andl
mov
imul
push
outsb
inc
jecxz,pt
bound
xchg
fmul
inc
int3
jl
dec
mov
fs
inc
test
dec
sbb
in
scas
jne
pop
pop
outsl
xor
jp
dec
xor
stos
push
fwait
dec
cmpsl
push
out
push
cmp
jl
pushf
in
push
lds
xchg
cmpsl
and
test
mov
jae
mov
and
inc
out
fldl
sub
dec
fidivrs
mov
jle
or
mov
call
das
test
pushf
js
jo
insl
or
movsl
ret
cmp
pop
inc
fwait
insb
fsubl
push
ss
pop
mov
dec
loopne
dec
pop
and
mov
push
dec
fcmovb
and
or
dec
ret
aas
sbb
mov
mov
shr
xlat
mov
pop
cmpsl
out
shrl
dec
outsb
mov
cmp
xor
ljmp
xchg
addb
inc
sub
cmp
ja
and
jge
lods
mov
inc
rolb
fwait
xchg
or
dec
enter
mov
push
sub
mov
cld
shl
adc
mov
stos
outsl
push
inc
sbb
js
stc
pop
xlat
jns
inc
stos
inc
xlat
xchg
fcomps
pop
in
cmp
jns
inc
jae
xlat
stos
or
inc
fadds
movups
xlat
push
cli
lods
add
enter
sbb
stos
adc
add
rcrb
mov
movsl
lods
pop
movsb
xor
sub
push
pop
jg
dec
repz
imul
mov
cli
adc
je
mov
ja
cmp
push
out
pop
jl
cmpb
sub
ret
jno
pop
and
xchg
in
push
cmpsl
sub
shlb
pop
rcrb
or
in
mov
sub
test
push
cltd
stos
sbb
mov
jnp
inc
xchg
lods
aaa
xor
inc
cld
enter
adc
cmp
adc
out
adc
mov
jb
push
add
cmp
xchg
push
push
test
sub
out
inc
mov
cli
mov
dec
inc
je
push
push
jl
jmp
fwait
or
out
jmp
jb
int
push
aas
shr
jae
imul
mov
aaa
or
xlat
mov
arpl
pop
fnstenv
test
shlb
pop
outsl
lret
inc
out
dec
push
popf
pop
jnp
sub
movsb
hlt
cmc
or
sub
adc
mov
xchg
push
jbe
sub
test
sbb
fidivrs
test
pop
cmp
adc
dec
jg
jo
mov
mov
les
xchg
pop
adcl
imull
dec
cs
adc
data16
lods
movsb
push
cli
sahf
shrb
lods
lock
sahf
mov
sub
cmc
and
clc
shlb
push
jns
into
sub
push
and
jle
push
jb
in
or
insb
adc
push
mov
lret
push
mov
xchg
xor
loop
cli
into
sub
clc
mov
pop
jecxz
aad
jo
fisubl
cmp
aad
mov
mov
scas
mov
bound
cmpsb
ss
daa
push
outsl
pop
jg
xchg
push
fstpl
sub
cld
add
pop
xchg
ret
movsb
and
xchg
cli
pop
popf
fimuls
int
lods
loope
xchg
clc
data16
adc
outsb
add
dec
cmp
aaa
call
insl
inc
sbb
aaa
popf
hlt
inc
js
mov
push
pushf
push
adc
pop
subl
dec
push
sahf
dec
adc
xor
bnd
pusha
mov
and
or
mov
jmp
rcrl
pop
cmp
sbb
mov
imul
adc
test
test
out
mov
dec
xchg
sti
inc
int3
or
and
shlb
repnz
mov
in
imul
and
rolb
add
setge
or
ficoml
sbb
rcrl
push
jns
push
in
ficoms
hlt
and
outsb
scas
stos
sub
cmp
jb
jmp
shl
out
cmc
dec
sti
frstor
jne
outsl
sub
scas
stos
out
dec
cmp
cli
sbb
adc
nop
fsubr
cmpsb
imul
bound
popa
sbb
or
icebp
jnp
cli
stos
rcrb
sub
movsl
arpl
out
mov
and
inc
jo
loope
cmp
inc
and
pop
loop
cs
inc
add
loop
int
push
dec
cmpsl
mov
inc
push
mov
lret
dec
pusha
jne
and
stc
addr16
adc
je
test
sahf
mov
dec
lock
movsl
hlt
push
or
lret
les
scas
sub
push
out
cwtl
repnz
js
mov
je
add
ss
mov
jnp
outsl
jb
lods
popf
lcall
fisubl
xchg
out
mov
xlat
mov
in
or
test
jl
lret
aas
std
mov
fst
mov
out
addr16
xchg
nop
arpl
xchg
xchg
sbb
push
xor
xchg
lods
lret
mov
test
dec
insl
test
xor
arpl
fists
lods
ret
mov
clc
mov
out
popf
mov
xlat
lock
sub
pop
push
push
stos
lods
adc
mov
fbstp
shrl
pushl
cli
stc
and
test
lcall
jns
push
test
cmp
in
stc
ficomps
fsts
lds
inc
adc
imul
pop
mov
adc
pop
xorl
sub
and
jbe
imul
mov
sti
insb
xorl
add
les
rcrl
push
rcll
divb
xchg
test
add
xor
shll
mov
leave
xor
jns
testl
add
mov
enter
mov
aad
mov
jl
dec
jge
push
repz
mov
jle
fdivs
fimuls
es
mov
in
ret
cmp
sbbl
jge
inc
sbb
jp,pt
data16
push
jl
dec
hlt
sub
sub
call
pop
sti
xchg
es
lret
inc
insb
push
sbb
int3
lea
mov
mov
dec
cmc
orb
add
movsl
xor
pop
mov
loope
dec
loop
mov
xchg
xchg
in
mov
out
jmp
jns
ljmp
movsb
lret
jg
fwait
pop
sbb
clc
mov
fisubl
xor
test
push
add
cmc
xor
pop
jns
pop
fwait
push
pop
insb
add
adc
and
jp
pushf
ja
add
cli
arpl
loop
in
jl
cmc
test
fs
or
mov
fdivs
xor
pminub
mov
lock
mov
in
dec
insl
push
sub
cmp
daa
fwait
sbbl
loopne
mov
and
xor
dec
adc
push
nop
mov
pop
mov
pop
shrl
sub
sahf
testl
sub
inc
hlt
mov
aaa
test
push
fisttpll
sub
lods
jno
and
sbb
iret
inc
xchg
fildl
xchg
and
push
jmp
xor
scas
lcall
xor
imul
insb
lock
fiadds
frstor
adc
fwait
inc
outsb
pusha
leave
fimuls
pop
mov
int3
add
mov
mov
add
and
xchg
pop
mov
add
add
mov
gs
jno
pop
imul
jp
mov
pop
mov
mov
sbb
fdivl
clc
mov
mov
add
roll
jae
repz
xchg
mov
icebp
pop
add
add
xchg
sbb
mov
dec
xchg
test
lahf
repnz
mov
repz
int3
sub
add
mov
mov
movsl
pop
mov
aas
and
mov
cli
repnz
xchg
stos
mov
jp
ret
rorb
jno
pop
push
mov
lea
push
inc
mov
and
pop
push
push
out
dec
cmp
mov
leave
xor
jg
rcrl
fwait
insl
lds
out
pushf
cmpsb
pop
jl
mov
mov
sti
push
mov
jne
pop
pop
pop
pop
mov
mov
cmp
sub
mov
add
mov
mov
pushf
cmpsl
push
iret
leave
outsb
into
stos
add
pop
fisubl
mov
mov
sar
or
scas
repz
inc
mov
pop
dec
cwtl
outsb
or
sbb
mov
mov
fdivl
push
fdivrs
push
mov
add
ljmp
mov
push
push
lods
mov
ja
push
adc
lahf
mov
call
xchg
sub
inc
aas
or
or
out
mov
repz
sbb
cld
add
dec
dec
cmpsb
fsubl
out
enter
sub
mov
mov
cld
push
add
cld
data16
lods
and
sub
rorb
repnz
jne
sbb
sub
push
adc
dec
pop
sbbl
fmulp
fs
mov
in
pop
lret
push
pop
inc
ret
scas
pop
loopne
scas
mov
mov
mov
andl
aaa
ja
dec
xor
in
scas
movsl
cmp
xor
inc
ja
fs
ljmp
cmp
in
add
in
pop
jns
adc
sub
incb
xchg
mov
sbb
pop
sbb
or
cmp
push
sahf
xor
mov
mov
cmp
jo
xor
nop
lahf
stos
mov
popa
mov
dec
jl
pop
push
fwait
ret
aad
cmpsb
test
inc
sbb
cmp
xorb
inc
bound
data16
ds
jno
inc
xchg
popf
xchg
sub
push
jbe
daa
jns
stc
cltd
jg
popa
add
adc
xchg
aam
sahf
mov
call
sbbl
sub
dec
cmpsb
inc
pusha
decl
negb
mov
repz
push
sub
jno
fists
icebp
cmp
add
dec
xchg
dec
inc
rol
out
orb
rcr
and
fidivrs
add
in
imul
mov
mov
ja
aam
test
rol
push
dec
and
icebp
das
es
or
scas
lea
ja
ret
es
test
aad
into
jne
mov
mov
sbb
add
or
jge
and
push
cmp
and
sti
xor
ss
adcl
cmp
or
jle
mov
mov
xchg
rcll
jae
cmp
xchg
fisubl
mov
xchg
mov
sbb
jae
aas
shrl
ret
ret
adc
xlat
repnz
cmpsl
divl
call
imul
test
cli
mov
and
in
xchg
adc
mov
int
out
pushf
ja
std
stos
adc
push
ja
mov
pusha
subl
rclb
sarb
xchg
daa
ret
out
pop
xrelease
cld
xchg
adc
push
lods
mov
jg
lds
idivl
int3
idivl
lret
mov
dec
jg
imul
jge
push
mov
repz
xchg
leave
negl
incl
mov
sti
mov
sbb
mov
xor
dec
jo
sahf
les
sub
movsb
xchg
adc
orb
push
inc
out
ret
ret
pop
jo
ret
stos
les
sub
sub
xor
xchg
jbe
shr
sti
gs
enter
jne
pusha
movsl
add
lods
insb
aaa
cltd
dec
adcb
pop
or
aas
popf
mov
fdivl
cmp
mov
pop
or
dec
and
cmpsb
aam
and
test
icebp
add
packuswb
inc
fisubrl
xchg
pushf
inc
and
mov
sub
mov
jl
xchg
cmpl
adc
sub
add
sti
sti
test
jb
inc
sti
mov
loop
es
bound
stos
mov
test
sub
ds
dec
or
nop
punpckhdq
mov
dec
shrb
ret
push
xchg
jo
add
adc
icebp
mov
test
ljmp
or
push
adc
movsl
mov
pop
pop
cwtl
mov
jge
mov
lods
dec
mov
int3
mov
jns
dec
mov
mov
cmp
push
push
cmp
xorb
out
cmp
ret
sti
adc
rcll
mov
enter
pop
out
out
repnz
xorl
and
dec
pop
fnstenv
data16
pop
jo
mov
xchg
inc
cld
sbb
nop
mov
test
popa
mov
iret
mov
sub
and
scas
int3
or
lods
lahf
enter
pop
sub
leave
adc
xor
out
rcl
popf
mov
xor
and
mov
or
add
test
das
rcll
arpl
push
ret
xor
imul
lcall
mov
clc
loope
ja
std
adc
xchg
sbb
aas
push
testl
ljmp
int
insb
mov
xchg
int
enter
push
mov
movsl
mov
ds
pop
jno
lret
bound
xor
inc
xchg
mov
nop
xchg
inc
sub
pop
jns
scas
sbb
cmp
popa
push
mov
and
lods
pusha
cmp
pop
cltd
push
lret
arpl
std
push
rorl
daa
repnz
loopne
repnz
and
rcl
push
jl
sti
mov
aas
mov
arpl
add
fmuls
repz
inc
test
add
inc
or
leave
popf
dec
bound
clc
scas
arpl
or
ret
and
mov
shlb
xlat
push
mov
mov
cmp
testl
jne
jbe
pop
xchg
enter
dec
mov
pop
and
movsl
dec
ja
sub
cmpsb
push
inc
loope
mov
pop
xchg
sub
push
jl
xchg
adc
pop
sub
insl
loopne
adc
cmp
jne
jecxz
stos
jno
dec
xchg
xor
dec
cmpsb
xchg
sarb
mov
xchg
cli
inc
nop
dec
lcall
lock
jecxz
push
mov
or
jae
mov
sbb
jb
fsubrp
push
jo
jno
and
push
push
push
fildl
mov
popf
mov
dec
icebp
outsb
aaa
imul
jp
mov
xlat
lcall
es
sub
hlt
lret
cwtl
test
cmp
push
push
jp
add
ret
ljmp
cmp
mov
leave
lcall
pop
imul
xchg
outsl
or
add
add
xor
mov
cld
mov
movl
sarb
mov
cmp
js
xchg
iret
imul
jno
or
xor
in
and
fmuls
sbb
shlb
or
pop
out
sbb
fs
shlb
cs
loope
ret
insl
push
inc
fstps
mov
cmp
pop
negl
adc
outsl
dec
sub
scas
mov
movb
jno
adc
adc
xlat
loope
enter
and
stc
std
adc
movsb
das
pop
aam
lahf
and
or
inc
in
andl
jno
jnp
mov
pop
jle
cmp
mov
ret
xchg
jge
add
ret
pop
loop
cmpsl
cmp
mov
clc
in
loop
mov
iret
mov
loope
pop
repz
mov
sub
mov
cli
pop
lods
mov
dec
and
popa
and
sbb
and
scas
insl
pop
test
mov
mov
subb
cmpsb
push
jns
xchg
and
adc
push
xor
push
mov
lods
mov
xchg
push
jns
mov
mov
cmp
adc
xchg
push
out
jmp
sub
in
clc
andl
aaa
dec
fs
add
pop
mov
dec
jno
les
sti
daa
cmp
mov
aam
xlat
jl
pop
mov
bnd
jbe
mov
jne
push
adc
ja
mov
xor
inc
sbb
in
aad
sbb
pop
fwait
pop
push
push
bound
push
dec
mov
mov
repnz
repz
mov
add
aam
sub
movsl
movsb
js
cmp
mull
mov
cmc
loope
push
fstpl
jb
cld
cmp
jg
inc
jo
pop
pop
mov
dec
mov
fimull
cmp
ficoml
xchg
ds
inc
sub
aaa
ret
sub
nop
sbb
lods
adc
test
cmp
dec
jp
pop
and
inc
mov
ret
aad
add
jb
adc
stc
adc
repnz
sbb
xchg
mov
iret
enter
in
into
mov
xor
pusha
jns
adc
dec
dec
clc
rcrb
in
out
mov
mov
jno
mov
test
fcompl
in
addb
cmp
out
enter
test
mov
test
push
outsl
cmp
add
js
and
push
stc
test
enter
ss
jp
lock
push
pop
cmp
stc
and
hlt
loopne
fwait
mov
xorb
mov
push
pop
movsl
and
test
fsubs
imul
ja
inc
sbb
test
xchg
xor
stos
push
jns
adc
bound
cltd
pop
add
lcall
in
lret
jno
cmp
add
or
shll
mov
xor
xor
movsl
in
enter
cwtl
xor
xchg
es
cmp
jne
ds
dec
xlat
push
addb
popf
mov
inc
in
dec
jnp
dec
mov
ret
sbb
aam
jg
mov
cmp
pop
adc
test
pcmpgtb
jb
or
mov
rcr
mov
test
movsl
and
dec
inc
cwtl
sub
sti
mov
test
add
push
iret
mov
sbb
inc
dec
testl
cld
aad
fistps
out
out
outsb
mov
outsb
repz
lods
lret
dec
xor
add
inc
movsl
add
and
stc
mov
divb
outsl
push
sarl
insl
adc
jo,pn
xchg
js
repnz
fldl
roll
mov
rclb
jle
xor
inc
push
jne
sub
int3
mov
test
cmp
xchg
test
mov
int3
out
push
iret
shlb
inc
push
mov
sbb
mov
and
mov
and
out
push
inc
testl
aad
xchg
sahf
lds
lock
ret
test
jg
push
int3
out
jecxz
dec
add
sar
aaa
or
jmp
inc
fucomip
add
hlt
pop
mov
xchg
js
js
pop
inc
xchg
xchg
lahf
into
and
dec
loop
jle
clc
inc
ja
cltd
popa
jecxz
loope
sbb
sbb
ret
mov
fwait
rorb
jae
insl
add
inc
aam
jge
int
sbb
loop
or
inc
outsl
mov
sub
xor
mov
jmp
add
xor
inc
mov
sbb
push
cmp
js
inc
mov
add
cmpsb
jb
push
cmc
inc
push
out
into
fbld
scas
int
scas
dec
enter
or
xchg
nop
cmp
cmp
lret
bound
cmp
inc
iret
hlt
jmp
inc
fcomp
jno
insb
cmp
or
repnz
jg
mov
xchg
mov
int
repnz
mov
jg
mov
lcall
std
addb
mov
fsubrs
inc
mov
das
sbb
adc
push
lods
cmpsb
add
inc
outsb
and
and
fucomi
iret
add
or
jle
sarb
aad
cmp
out
cs
mov
outsb
out
daa
and
mov
sbb
jb
inc
imul
cmc
call
lea
dec
xlat
aad
inc
movsb
cmpsl
ds
jp
xor
loope
sub
push
popfw
orb
pop
mov
sub
mov
dec
jae
outsb
fs
pop
scas
push
adcb
and
or
pushf
push
xchg
mov
xchg
test
jb
mov
in
js
into
push
insb
pushl
mov
mov
mov
jmp
dec
mov
jne
test
repnz
pushf
fucomip
xlat
repz
adc
lods
cltd
imul
adc
cmp
popf
les
out
inc
pop
mov
mov
dec
add
cmc
push
adc
popf
jp
pushf
pavgb
jo
mov
out
flds
xor
dec
pop
popf
rorl
sub
push
push
jp
sbb
ja
stos
mov
shlb
mov
fidivl
filds
daa
and
ficoml
dec
push
mov
sbb
inc
dec
and
xchg
dec
push
xor
adc
test
popf
xchg
inc
cmp
and
jno
mov
inc
jae
rcll
arpl
push
push
jno
add
clc
pop
subl
addl
imul
pop
mov
sbb
stos
shl
aas
pushf
stos
lods
push
and
idivb
mov
rcrl
shl
into
shrl
cwtl
and
lds
loop,pn
mull
bound
pop
xchg
fwait
and
xor
fcmovne
sub
cmp
pop
or
xchg
pushf
out
or
lods
cwtl
and
adc
mov
cmp
cmpsl
fildl
push
cli
adc
dec
jecxz
or
cmp
dec
cwtl
adc
outsb
dec
aam
pop
loopne
pushf
xchg
inc
es
mov
fsts
shll
inc
sbb
pop
hlt
push
roll
data16
sbb
fwait
rcrl
sub
xor
enter
cmpsl
iret
inc
sub
daa
ljmp
mov
maxps
js
lds
cmp
mov
sbb
movsl
loopne
cmpsb
mov
mov
jecxz
pop
lahf
xor
mov
aas
lea
inc
sbb
test
sbbl
xor
pop
jne
stc
push
xorb
mov
or
fwait
push
in
pop
push
fs
bound
inc
mov
cmpsb
imul
jl
or
push
outsl
xchg
mov
push
dec
adc
arpl
xor
cwtl
push
adc
pop
push
dec
les
je
jle
popfw
js
mov
jg
movsl
iret
push
mov
je
dec
call
js
sub
dec
xor
xor
bound
stos
dec
fsts
mov
jno
les
adc
mov
leave
imul
pop
push
movsl
pop
movsl
js
add
xor
sub
stc
mov
mov
xor
fldenv
pop
add
pusha
add
cli
repz
or
aad
mov
imul
xchg
adc
arpl
xchg
aad
mov
push
bound
jp
jmp
in
std
pop
sbbl
sbb
adc
out
addb
rolb
mov
bound
imul
imul
mov
xor
push
pop
push
push
push
mov
add
jno
cmp
inc
cmpsl
xchg
mov
xchg
and
repz
mov
arpl
outsb
rcrl
xchg
push
scas
inc
hlt
andl
mov
dec
jg
dec
and
fwait
data16
lock
cs
cmp
sti
and
adc
jmp
sbb
push
in
add
call
mov
inc
jo
call
and
out
or
in
and
mov
push
jg
mov
int
mov
dec
or
cmp
fsubrl
cmp
and
push
mov
mov
cmp
or
pop
das
lcall
sbb
daa
or
fstps
lahf
insb
xor
sub
fst
or
sub
sbb
incl
mov
movsb
sarl
add
mov
cmpsb
sub
subb
push
push
xchg
xchg
xchg
cmp
jecxz
cmp
out
cmp
lods
jno
adc
and
lret
test
jle
test
pop
mov
cmp
pop
cmp
xor
stos
repz
das
and
sbb
or
xor
test
push
rorl
ljmp
xchg
lods
push
das
sub
push
mov
and
xor
jb
adc
test
popa
jo
gs
jge
jb
mov
push
insl
jmp
je
inc
fsubrp
inc
in
push
shrb
stos
push
push
pop
int
push
push
mov
pop
xor
sub
jae
push
adc
pop
test
dec
xchg
xchg
into
jns
mov
dec
sub
scas
cmp
push
jbe
mov
mov
ds
lret
je
rcll
xor
and
popa
idiv
sbb
lods
aad
sub
ffreep
stc
and
push
inc
push
xchg
insl
jecxz
xchg
add
add
mov
lods
or
push
cmp
add
dec
push
push
add
rorb
xchg
ret
adc
cmp
add
fisubl
ret
outsb
pop
jae
push
andl
lea
shl
sub
xchg
out
add
mov
hlt
loopne
stos
leave
xor
cltd
jbe
and
pop
adc
or
sbb
xchg
add
mov
push
mov
dec
dec
fcoms
rclb
mov
cmovns
mov
jns
push
cmp
mov
movsl
jno
dec
adc
add
notl
les
add
movsb
std
outsb
in
jge
xchg
out
insl
aad
repz
inc
xchg
cmp
add
addb
mov
lahf
fmul
pop
sbb
fdivrs
cli
jo
jmp
std
jle
ljmp
mov
aas
das
inc
xchg
clc
push
ljmp
imul
stc
and
out
aad
xorl
cmp
testl
mov
out
sub
out
int
fcmovnbe
sub
icebp
repnz
sub
jg
jecxz
fwait
push
push
mov
add
lods
push
add
mov
mov
addl
dec
xchg
cmp
std
icebp
int3
aaa
xchg
mov
mov
push
in
rcrl
dec
inc
inc
lahf
inc
mov
mov
xchg
es
mov
jecxz
mov
push
ljmp
rcr
jae
call
mov
sbbb
out
pop
push
sub
inc
cld
fisubl
dec
xor
jmp
outsb
stos
mov
lea
pop
nop
mov
and
sbb
ljmp
cmc
jge
dec
add
and
cmpsb
mov
daa
xor
mov
pop
popa
fnsave
mov
movsb
ret
ret
pop
addb
mov
jecxz
mov
gs
sub
or
aas
ljmp
jle
sets
popa
in
add
lds
sub
jecxz
xor
add
mov
sbb
jbe
xor
ret
add
ret
and
sub
test
adcl
and
jmp
xor
pop
pusha
lods
jnp
sub
push
dec
imul
sbb
sub
test
adc
insb
cmc
add
pop
hlt
pop
mov
or
push
xchg
or
push
test
imul
sbb
or
stos
cwtl
add
shll
add
mov
sub
xor
popa
cmc
out
in
imul
pop
add
lret
adc
inc
pusha
or
popf
xor
fldcw
outsl
iret
arpl
outsb
pop
push
das
jbe
dec
sbb
loopne
mov
mov
cmp
push
push
mov
and
lea
jg
xchg
and
pop
mov
out
xor
fcoml
ffree
push
xor
int3
mov
cmpl
mov
loop
push
adc
cmpsl
jge
push
sbbb
sbb
scas
test
jge
scas
int
jb
pop
je
cmp
repz
mov
dec
sbb
cmc
adc
inc
add
sub
test
in
out
mov
mov
push
push
sub
ja
outsl
dec
mov
mov
inc
int3
cld
dec
xor
push
push
testl
xchg
add
adc
push
unpcklps
and
add
jge
mov
fsub
mov
fstps
mov
bound
cmpsl
push
add
inc
xor
cmpsl
rcrb
or
jae
sub
sub
and
sbb
enter
inc
pushf
xor
inc
loopne
xchg
jno
inc
or
ret
hlt
repz
mov
lret
add
scas
add
xchg
xor
sub
sub
xchg
xchg
ss
or
lds
es
sbbl
mov
inc
sub
shrb
mull
cmp
push
shll
mov
sbbl
mov
fmul
pop
mov
add
push
fcomps
cmp
jge
sub
pop
pop
es
movsl
push
or
cwtl
cmpsb
subl
inc
xlat
inc
inc
in
clc
cmpb
call
push
inc
jmp
mov
out
cwtl
jno
notl
dec
aam
and
das
xor
mov
cmp
jne
dec
lcall
imul
and
enter
mov
mov
xor
cmpsb
loope
mov
mov
xchg
mov
es
fcomps
je
int3
sub
push
jnp
repnz
cmpsb
push
cld
cltd
in
push
insb
cs
out
icebp
pop
std
stos
inc
fisttps
add
aad
call
in
fcompl
mov
dec
mov
xchg
pop
popa
push
add
push
cmp
gs
data16
out
push
aaa
xlat
enter
push
mov
push
push
dec
push
insl
gs
jmp
mov
or
cli
cli
divb
cmc
insl
enter
and
inc
mov
lds
sti
jnp
fstps
aaa
ljmp
lret
loopne
fldl
pop
lahf
cmpsb
outsl
and
lods
jmp
mov
cltd
movl
lcall
int3
mov
cmp
jae
aam
lcall
sbb
mov
lcall
xchg
fiaddl
stc
fwait
add
jmp
and
push
mov
add
and
mov
sbb
mov
enter
in
cmp
div
std
fcmovnu
jge
lret
aas
mov
mov
mov
jnp
cmp
es
jno
sub
lea
cli
stos
mov
xor
mov
dec
jns
pop
xchg
fsubs
aas
and
js
dec
in
das
dec
fdivp
aaa
icebp
pop
fmull
addl
pop
filds
ret
mov
mov
rcrb
aad
mov
sbb
xor
dec
pushf
xlat
dec
out
add
xchg
dec
sub
adc
dec
xor
cmpsb
aad
add
jns
fnstsw
sub
jl
or
leave
sub
out
adc
inc
or
mov
into
jnp
mov
mov
into
leave
aam
fisttpl
bound
shll
xchg
add
sbbl
cli
fdivr
jg
dec
in
ror
ljmp
fcmovnbe
out
jae
ret
pop
ror
adc
fnsave
dec
loop
idivl
stos
sub
sub
and
enterw
pop
mov
push
xor
nop
mov
das
icebp
in
xchg
or
mov
mov
test
lcall
dec
add
test
or
and
jmp
mov
scas
push
inc
push
mov
ss
imul
stos
mov
shlb
rcrb
inc
iret
push
fistpll
sub
aaa
out
push
mov
popf
fsubrl
jecxz
nop
push
sbb
adc
loopne
dec
addr16
repz
into
arpl
add
xchg
and
inc
mov
js
negl
xor
cmpsb
xchg
sbb
insb
and
loope
push
shrl
cwtl
mov
ljmp
mov
jl
jb
sahf
imul
jae
into
lret
mov
imul
shl
into
mov
inc
mov
xor
mov
xchg
ljmp
out
das
xor
dec
pop
sbb
mov
xor
push
js
mov
pop
xchg
add
std
dec
cmp
faddl
mov
push
xchg
fcoms
outsl
pop
or
test
imul
icebp
cmpl
mov
xchg
popf
pop
outsl
lret
daa
aas
dec
adc
push
sub
adc
sbb
pop
xorb
out
add
out
pop
sbb
adc
leave
cld
pusha
cmp
fistl
dec
mov
jns
aad
or
imul
gs
fs
mov
mov
jmp
leave
cli
push
aaa
pop
ret
mov
stos
mov
js
cmpsl
cmp
xlat
xchg
and
mov
mov
mov
rcrb
mov
movsl
mov
cmp
rcrb
js
lds
cmp
in
lret
das
test
int3
lret
jb
xchg
bound
lahf
and
movsl
lds
repnz
outsl
mov
cmc
inc
idiv
ret
movsb
pop
test
inc
sbb
rcrl
or
sub
lods
dec
pop
fwait
jnp
test
test
push
cwtl
or
stc
and
push
sbb
call
add
cmp
dec
insb
clc
or
adc
adc
sub
push
or
popf
stos
int
push
pop
pop
pop
fs
imul
xor
shr
subb
aas
sti
xor
enter
xchg
in
or
jns
and
mov
mov
mov
imul
mov
les
add
sbb
ret
imul
inc
mov
push
pop
mov
xor
xor
xchg
popa
jecxz
dec
leave
in
js
xor
or
inc
leave
cli
ds
loope
cltd
mov
aas
sbb
mov
adc
fadds
cmp
rolb
mov
mov
insl
push
ljmp
cmp
out
aaa
lcall
and
fcoms
jne
or
rcll
es
mov
xchg
aad
sti
pop
in
or
jmp
mov
cmpsb
add
je
stos
xor
or
push
int3
or
cmpsl
or
stos
add
mov
jns
loope
mov
aam
test
jmp
shrl
jo
hlt
gs
aas
and
pop
dec
pop
xchg
in
insb
cld
ret
stos
pop
bound
add
lock
or
sbb
sbb
push
mov
jge
fstpt
imul
inc
cwtl
stos
in
lods
xchg
cmp
movsb
lahf
stc
hlt
inc
inc
inc
cli
add
pop
inc
fsubl
mov
fisttpll
cmpsl
call
iret
mov
cmp
fwait
adc
mov
into
ja
mov
daa
xchg
sub
inc
mov
jno
jl
xchg
loop
add
das
cmc
std
add
pop
jb
jno
dec
jns
mov
push
shrl
es
or
fadds
jg
lds
cmp
jne
inc
sbb
addb
icebp
mov
mov
cld
test
mov
arpl
cmpsb
in
int3
mov
ja
and
mov
dec
mov
std
fisttpl
loopne
fwait
and
mov
imul
insl
adc
push
insl
orl
clc
iret
dec
enter
pop
push
sti
leave
xchg
fists
mov
dec
shrb
pusha
popa
mov
jp
sti
xchg
jl
cmp
jbe
mov
movsl
xchg
popa
sbbb
pop
jle
fisttpll
test
xor
sti
xor
and
and
mov
mov
mov
into
adc
sbb
pop
ds
jmp
inc
jo
adc
fucomi
enter
ja
add
aam
sbb
jne
push
lahf
rcrl
mov
aad
pusha
sahf
cmp
jb
push
push
sahf
das
callw
adc
mov
jl
or
inc
fbstp
scas
adc
jecxz
hlt
mov
out
inc
jns
aas
cmc
stc
sbb
insb
cmp
fs
xchg
inc
mov
enter
xchg
dec
frstor
push
int
pop
push
xchg
jg
mov
pop
lock
pop
loop
fs
divl
cmc
outsb
jge
mov
mov
mov
mov
cs
push
stc
sub
aad
mov
lret
xor
je
or
ljmp
add
enter
sbb
outsb
add
jmp
pushf
inc
jae
and
lods
stos
and
adc
mov
inc
mov
loope
cli
add
cmp
push
dec
add
xor
xor
negb
cwtl
mov
xchg
sbb
imul
inc
aas
push
sbb
dec
mov
push
dec
and
mov
xorb
in
bound
lret
bound
int3
jns
ds
pop
mov
and
in
cmp
repnz
xor
addr16
adc
in
arpl
ss
push
push
js
jno
or
mov
nop
mov
inc
xchg
add
aam
xor
dec
xor
dec
enter
int
push
lock
jb
push
inc
and
sbb
xlat
lret
cmp
imul
add
insb
mov
movsb
nop
mov
xchg
pop
orl
sbb
fcmovbe
out
pop
and
lret
fstpl
in
xor
pop
loope
sub
mov
pop
test
stos
push
insb
ret
xor
jg
test
fsubrl
xchg
jmp
xchg
lahf
sbb
sub
pop
push
pop
fisubs
pop
cmovae
xchg
xchg
fldt
dec
push
adc
xchg
stc
subl
daa
jle
gs
pop
aad
fs
in
repz
shr
addr16
dec
cs
ds
cltd
fcomps
jecxz
dec
mov
adc
inc
cmc
popf
pushf
push
pop
xor
push
aam
cmp
sahf
lds
or
pop
lret
xchg
fcmovb
movsb
ss
sub
fidivs
inc
int3
xor
mov
sarl
mov
inc
in
pop
leave
inc
mov
xchg
fimull
popf
sub
jne
mov
sbb
ss
push
lahf
fldl
xor
pusha
repnz
dec
sbb
or
test
stos
clc
repnz
dec
jg
ffree
fwait
jmp
daa
addr16
js
out
dec
lahf
fstpl
enter
mov
sbb
enter
mov
push
iret
or
push
dec
leave
jg
cwtl
dec
mov
sbb
sbb
and
fnsave
in
mov
jle
mov
mov
xor
aas
cmp
jae
push
pop
push
jp
add
imul
fimuls
ss
and
icebp
mov
xor
pop
dec
fsub
cmp
ljmp
cmp
and
ret
push
fcomps
pop
outsb
inc
dec
movsl
inc
dec
cmpb
mov
int
aad
stos
dec
push
fdiv
in
lds
add
pop
dec
xor
pusha
das
xchg
pushf
lret
fadd
add
mov
std
out
ret
dec
adcb
popa
stc
adc
sub
addr16
out
js
xchg
insl
scas
push
jl
and
in
mov
lods
mov
scas
aas
arpl
sbb
fimuls
pop
insb
pop
sub
mov
mov
dec
shrl
jp
scas
in
lret
divl
xchg
sbbl
mov
and
add
aam
popa
lret
inc
jl
mov
sbb
mov
or
sub
xchg
je
movsb
in
notb
outsl
lock
push
add
sbb
mov
mov
pop
jge
out
lea
and
pop
ffree
mov
sbb
out
xchg
push
add
aaa
xchg
or
adc
pop
and
mov
lcall
or
add
adc
xchg
jecxz
mov
es
cld
popa
stos
and
mov
dec
jmp
loopne
mov
repnz
or
push
mov
sbb
pushw
outsl
add
or
fs
prefetch
or
cmp
adc
mov
pop
mov
jns
daa
cli
enter
xchg
xchg
add
cmpsb
jns
enter
push
out
je
jmp
and
jecxz
mov
inc
add
xchg
in
adc
movsb
loope
js
pop
mov
pop
lock
fiaddl
add
add
mov
jb
out
and
adc
mov
jmp
imul
dec
call
nop
jmp
xchg
xchg
or
dec
movsb
push
lea
dec
cwtl
push
cmp
mov
jmp
push
jg
sub
xor
in
inc
adc
and
mov
add
ret
sub
xor
out
outsb
mov
movsl
cmp
mov
dec
pop
daa
xor
out
int3
xchg
jecxz
sbbb
outsl
ss
push
xchg
lods
mov
jno
dec
shll
sbb
idivl
out
les
in
push
jne
inc
xor
ja
popf
pop
mov
xchg
mov
sbb
add
push
lret
mov
mov
push
imul
xor
cmp
adc
sbb
lret
jecxz
mov
dec
jg
push
imul
cmp
lock
out
popf
cmc
mov
jnp
xor
imul
or
cmp
xor
imul
fidivl
les
xchg
add
adc
movsb
testb
fdivs
stos
insb
mov
mov
imul
mov
mov
mov
push
cmp
push
sbb
fmulp
into
lahf
pop
push
daa
iret
stc
xchg
icebp
fxch
cmp
mov
in
inc
push
in
rol
sahf
out
push
repz
aad
cmp
or
out
lock
pushf
repz
jle
pop
out
mov
mov
xlat
insb
enter
das
inc
add
jle
jbe
xchg
mov
clc
dec
insl
aad
and
enter
inc
stos
dec
inc
mov
adc
dec
je
aam
sbb
xchg
aam
sbb
lods
xchg
insb
or
into
mov
dec
lea
pop
mov
mov
pop
insl
gs
scas
movsl
orb
jle
repz
dec
fisubs
loope
scas
jns
decb
push
loope
inc
ret
mov
add
xchg
jbe
insb
rcl
and
xchg
xor
stc
jbe
jmp
add
and
sbb
or
aam
mov
jecxz
or
test
leave
rcl
xor
rclb
loop
push
dec
lcall
outsl
push
imul
in
push
int
outsl
or
decl
movl
adc
arpl
mov
adc
test
imul
sbb
jne
shl
lret
in
iret
test
mov
inc
jno
stos
mov
in
jno
jp
sbb
mov
inc
loopne
mov
mov
inc
adc
jmp
sub
mov
add
push
jns
sti
inc
aam
ja
inc
xor
adc
push
ret
stos
jne
mov
add
sub
xchg
sub
cmp
mov
or
dec
das
sbb
daa
sarb
or
call
pop
lea
test
ds
insl
fnstenv
aam
daa
imul
inc
sbb
dec
lds
movsb
xchg
cmp
insl
sarb
scas
pushl
jp
pop
add
js
sti
lock
addr16
es
jo
subl
or
addr16
jno
fildll
nop
divl
loope
int3
jge
into
popa
mov
fnclex
cmpsb
sahf
cmp
sbb
mov
stc
stos
mov
mov
mov
mov
mov
cmp
sub
lea
mov
xor
inc
cld
mov
aas
popf
imul
out
xor
shrl
jge
mov
lock
xchg
sbb
mov
add
sub
lahf
xchg
ljmp
pop
mov
vshufpd
add
cli
dec
shl
faddl
pop
dec
push
pusha
cmp
test
pusha
popa
cmpsl
icebp
out
fimull
adc
fcomps
hlt
jl
and
mov
cmp
adc
inc
dec
repz
in
fmul
adc
mov
lock
xchg
pop
imul
ljmp
mov
push
adc
cmc
int3
lahf
pushf
imul
fst
stos
cmpsb
jb
pop
je
dec
lcall
cld
cld
jecxz
stos
hlt
mov
pop
leave
nop
add
mov
cld
nop
xorl
mov
pop
test
xorl
jo
mov
sub
adc
outsb
popa
mull
xor
enter
mov
dec
dec
xor
ljmp
test
xchg
aaa
daa
and
pop
sbb
fisttpll
sub
mov
insl
and
in
mov
jns
pop
arpl
xor
jp
jns
jbe
push
jecxz
dec
or
enter
push
gs
inc
or
xchg
shll
loop
jge
add
and
jo
aad
mov
imulb
inc
xor
pop
push
shll
insb
cld
js
mov
inc
mov
cmp
ss
mov
incl
fcom
loop,pt
and
mov
sti
xchg
in
ja
sbb
xchg
arpl
push
add
inc
or
cmp
xor
iret
lret
pop
jmp
in
adc
cmp
enter
nop
xlat
sbb
out
lahf
inc
outsl
adcb
sub
sbb
or
dec
mov
xor
sarb
jno
cmp
mov
jae
xchg
adc
scas
mov
fisttpl
sti
pop
movsb
dec
xchg
pop
push
test
add
add
aam
pop
rcrb
bound
cwtl
neg
clc
jnp
dec
mov
addl
out
mov
pop
add
pop
push
out
jge
popa
and
pop
xor
addr16
fs
sub
pop
pop
ret
sti
sbb
xor
movsb
push
inc
inc
inc
push
gs
lcall
shl
xchg
jg
aam
out
inc
xchg
push
sbb
cld
or
lcall
daa
rcrl
mov
pusha
bound
lahf
mov
xchg
ficompl
xchg
pop
imul
dec
push
pop
mov
outsl
and
in
movsl
jg
dec
or
mov
mov
fwait
mov
mov
and
jne
mov
jmp
insb
rorl
fstpt
out
adc
sahf
xchg
xchg
loopne
jb
mov
adc
mov
lods
mov
xor
imul
lret
mov
push
enter
pop
cs
mov
sbb
in
pop
loope
jp
pushl
push
inc
sbb
rclb
cld
movsb
sub
mov
das
pop
shl
add
lret
in
dec
inc
pop
mov
scas
mov
outsl
sub
call
imul
fistpl
rcrl
mov
inc
jle
je
push
fwait
jge
int3
or
jns
lods
adc
fisubrs
scas
je
push
jne
or
push
imul
sbb
dec
mov
js
bound
add
push
jbe
pushf
add
adc
popa
and
test
pop
xchg
rclb
sahf
xchg
inc
mul
sub
nop
jae
icebp
cmp
add
in
pop
shlb
add
pop
stos
movsl
ror
pusha
adc
call
mov
push
aam
daa
sti
jecxz
cli
add
arpl
rcrl
cmp
mov
adc
pop
sbb
push
cmpsl
inc
out
stos
add
inc
xchg
out
outsl
jns
dec
jg
mov
shrb
js
aam
dec
push
xchg
mov
jae
cmp
jle
ret
ret
xor
sub
mov
mov
sbb
arpl
pop
roll
dec
xchg
inc
add
movsl
adc
mov
dec
pop
insl
mov
pop
xchg
mov
test
stos
push
pop
fisttpll
sub
xlat
gs
push
ret
cli
push
sub
or
loope
and
inc
xorl
dec
mov
stc
adc
xchg
sub
mov
orl
bound
push
inc
adc
outsl
stos
and
sub
aam
hlt
gs
xor
cmc
xchg
mov
xlat
loope
mov
mov
das
mov
inc
push
or
clc
std
inc
mov
mov
dec
sub
pop
push
psrld
inc
and
xchg
sahf
repnz
mov
in
sub
jnp
xchg
cmpb
add
adc
lea
test
sub
mov
and
adc
adc
repnz
loope
ja
xchg
and
int3
mov
mov
fcomps
sbbl
and
lods
aas
cmp
sub
cmp
lds
cmp
mov
push
stc
addb
pop
stc
add
pop
dec
test
call
and
test
out
jns
cmp
dec
loopne
out
aas
test
aaa
inc
mov
out
mov
jae
punpckhwd
and
push
jecxz
or
cld
loopne
adc
notb
mov
pop
push
mov
lods
in
fidivl
mov
dec
sub
sbb
std
add
into
sarb
icebp
pop
cmpsb
jge
xorl
ror
push
cli
lock
mov
mov
adc
fcmovbe
mov
lock
inc
inc
js
cmp
jne
push
cmp
add
movd
mov
xchg
jae
in
ds
dec
fsub
ss
mov
insl
mov
rclb
inc
jge
addr16
mov
inc
iret
shlb
les
dec
push
test
dec
mov
mov
fidivl
jne
stos
stos
stc
cmpsb
pop
jno
sub
jno
cmp
cmp
aad
adc
pop
dec
pop
pusha
out
mov
mov
jge
xchg
pop
sti
aad
lret
imul
push
lea
add
cmp
test
lods
mov
scas
and
cmp
fdivrs
add
cld
lahf
adc
sbb
sub
adc
or
sti
or
jl
sbb
insb
or
adc
imul
mov
call
iret
dec
movsl
push
leave
push
dec
into
ret
push
and
xchg
test
andl
dec
cli
mov
icebp
mov
push
iret
lret
pop
pop
mov
lock
xchg
sub
mov
fmull
mov
push
cli
pop
fwait
lret
push
cmpb
xchg
daa
push
sbbb
fnstenv
cmc
push
hlt
mov
inc
sbb
inc
or
xchg
lds
xchg
popa
nop
les
cmp
test
dec
lock
add
ret
les
and
sahf
cli
xchg
sub
push
bound
js
cmpsb
cld
test
repnz
dec
jg
pop
pop
mov
xor
int
xchg
shll
stc
addr16
loope
arpl
and
sub
push
adc
inc
pop
bnd
cwtl
jmp
jae
push
fstl
lret
push
push
test
es
nop
test
into
dec
push
mov
insb
fcmovne
pop
sub
dec
push
in
sahf
test
mov
and
jg
loope
xchg
xchg
loopne
pop
push
cwtl
lcall
aas
xor
aas
ror
rcrl
mov
xchg
movsb
hlt
icebp
push
data16
dec
lods
out
test
cmpsl
inc
pop
pop
mov
jp
test
fwait
mov
aaa
sub
ret
mov
cmc
cmp
sbb
int3
in
push
in
sub
dec
outsb
scas
push
loop
int3
pop
mov
fwait
lods
jp
movsb
mov
and
xchg
gs
fnstenv
mov
jmp
aad
mov
test
add
and
ja
dec
mov
out
aas
sub
in
lds
xlat
dec
std
test
les
xor
adc
les
nop
xor
fs
daa
aas
or
aam
xchg
pop
jecxz
fwait
xlat
sahf
push
ret
adc
jo
xchg
imul
fldl
out
popf
jl
jecxz
xchg
or
stc
inc
aas
cmp
iret
xchg
in
ficompl
lret
aad
mov
and
or
icebp
and
xor
push
xchg
cli
js
pop
addr16
lods
test
jecxz
adc
jg
push
mov
loopne
imul
add
jns
or
xor
pop
mov
xchg
rol
dec
fabs
pushf
stos
mov
mov
jnp
adc
popf
cwtl
dec
push
movsb
enter
mov
out
sbb
sti
or
scas
aaa
ss
pop
aaa
pop
cmc
mov
mov
jmp
loopne
cmp
adc
insl
jnp
pop
add
mov
enter
xchg
movsb
inc
pop
dec
int
ffreep
shll
cltd
popf
sbb
lahf
mov
inc
dec
sub
pop
pop
push
inc
cli
stc
rclb
sbb
test
push
cmp
sub
jae
ljmp
inc
lret
arpl
jge
and
mov
push
mov
arpl
sub
jae
add
cmp
xchg
push
pop
mov
pusha
mov
xchg
arpl
test
cmp
mov
jle
jbe
sub
iret
pop
and
iret
je
push
loopne
xchg
popa
sbb
inc
push
popa
mov
or
gs
push
lcall
adc
cmp
fldcw
xchg
scas
add
jmp
adc
and
test
adc
jmp
inc
push
push
jecxz
ds
inc
and
pop
into
mov
leave
adc
leave
mov
pop
call
inc
sub
jmp
pop
je
sbb
aaa
frstor
jne
shr
imul
addl
mov
dec
arpl
ja
push
pop
daa
cmp
xor
mov
xor
cmp
pop
add
or
shll
xorl
xchg
cmpsb
sub
fnstcw
xor
mov
inc
mov
sub
sub
pushf
sub
and
in
imul
in
cwtl
sbb
mov
mov
cmp
sti
imul
pop
popf
jns
js
adc
mov
shll
dec
mov
mov
ds
cli
sbb
fsubrs
dec
sub
or
insb
rorb
sbb
xchg
popa
pop
bound
hlt
push
mov
pop
stos
cmp
jg
pop
inc
push
sub
push
dec
int
jno
mov
mov
or
cmpsl
and
popa
sub
test
cmpsl
or
int3
call
pop
leave
dec
xchg
gs
cld
jbe
jp
xor
pop
pushf
jb
popf
dec
inc
push
fcompl
fsubrs
add
cli
adc
popf
and
lret
ds
pusha
aam
sbb
adc
mov
cmp
data16
mov
lcall
fstcw
test
iret
mov
stc
pushf
xor
sub
or
cmp
shl
dec
sahf
call
mov
jge
fwait
test
insb
ret
pop
xlat
fisttps
push
adc
jp
mov
pusha
data16
aaa
xor
mov
or
mov
sub
adc
xchg
addr16
imul
imul
push
add
push
dec
aaa
lock
fisttpll
iret
std
clc
push
adc
lock
andb
xor
scas
lea
mov
mov
mov
mov
push
hlt
shrl
out
cmc
jbe
enter
push
jecxz
dec
inc
loope
bound
sbbb
xor
mov
cmp
jecxz
sahf
cmp
leave
and
mov
rcll
or
dec
xor
xchg
mov
stc
fbstp
sbb
jbe
cli
jle
mov
xor
out
add
push
pop
lret
mov
pop
movsb
lcall
lret
cs
pop
xchg
jl
and
pop
xchg
or
repnz
adc
pop
rcrl
mov
dec
icebp
loope
jo
pop
out
out
inc
cmp
xchg
cld
xor
ret
xchg
popa
movl
sahf
clc
insl
and
notl
outsb
jle
pop
dec
inc
pop
mov
into
sbb
add
stc
enter
out
fsubr
test
out
lock
loop
jge
xor
test
dec
es
ljmp
and
out
scas
and
jmp
push
cmp
pusha
cmp
sub
test
insb
sbb
in
sbb
mov
sub
jno
test
call
mov
jmp
push
add
pop
push
repz
mov
adc
or
mov
add
inc
mov
insl
sarl
cmpsb
scas
pop
cmpl
mov
rol
ret
mov
push
imul
jge
or
mov
add
les
ret
jg
push
aad
imul
or
popf
xor
add
xchg
in
iret
rorb
jecxz
adc
insb
movsl
pop
add
xchg
adc
dec
pop
mov
sbb
push
push
adc
jg
or
aaa
pusha
jg
adc
pop
mov
leave
push
es
gs
lret
xor
lods
sbb
jge
imul
fildl
xchg
and
nop
jg
xchg
scas
lock
loop
das
xchg
pushf
stos
or
je
pop
cs
push
lea
insb
jns
sahf
inc
out
jmp
xor
xchg
jae
hlt
jae
and
into
mov
lock
fiaddl
outsb
or
mov
stc
sub
aam
xor
xor
mov
mov
add
pop
xchg
and
sbb
lahf
js
outsl
push
jl
lret
lcall
jecxz
sbb
divb
bound
ss
iret
fcomi
pushf
jge
cmc
fists
xchg
pop
outsl
fnstsw
xchg
rcl
push
nop
mov
fs
pop
shll
pop
daa
sub
dec
push
pop
ljmp
in
pop
decl
leave
adc
push
sub
into
dec
mov
jbe
mov
nop
movsb
xchg
mov
pop
lcall
fisubs
xchg
mov
hlt
jg
dec
cmc
mov
les
push
aaa
or
decb
outsb
std
push
fldcw
test
test
add
lret
dec
in
loope
loopne
test
mov
cmp
es
pop
xorl
inc
or
xchg
jno
lahf
cld
mov
out
shrl
mov
inc
or
push
imul
test
out
frstor
cmp
cmp
mov
mov
frstor
mov
js
aas
sub
and
adc
ds
jmp
pushf
pop
lahf
fists
jp
imul
sub
lods
mov
pop
dec
mov
xchg
daa
addb
insl
push
jmp
jl
xor
dec
aam
lods
sub
lret
mov
jb
pop
inc
imul
imul
ret
sub
aas
lods
sub
sarb
out
sbb
out
push
pusha
pop
fs
testb
push
notb
ds
loopne
lock
inc
insb
mov
ficomps
inc
dec
loope
lods
bound
xchg
push
arpl
mov
ljmp
fmul
push
cmpsl
stos
push
stc
sbb
add
or
subb
fsubrs
fdivrl
jmp
sub
std
clc
add
loop,pn
insb
sub
aaa
repz
sub
cld
mov
push
mov
out
popa
stc
dec
xchg
ss
inc
jle
add
sub
pop
push
mov
pop
adc
fld
cmp
sub
mov
lds
inc
mov
lods
jl
idivl
jns
ret
stc
adc
mov
inc
pop
div
pop
xchg
loopne
jmp
insb
mov
sahf
pop
add
lock
movl
movb
test
and
das
push
ret
mov
pop
mov
jo
sub
jne
mov
bound
jg
cmp
sub
mov
jae
loope
add
add
rsm
dec
shrl
pop
lock
imul
lds
adc
test
push
movsl
repnz
push
mov
add
jp
sar
mov
and
and
cwtl
inc
jae
add
cltd
stc
or
icebp
jg
mov
lds
lods
and
pop
pusha
fwait
mov
pop
test
mov
add
jnp
push
in
addb
xor
cmpsb
or
rcll
jl
aam
sti
into
jge
push
outsb
adc
out
jmp
jmp
and
jle
rolb
xchg
mov
aaa
mov
mov
dec
xchg
pop
mov
fidivl
outsl
repz
mov
xchg
test
or
mov
mov
or
in
scas
mov
test
int
cltd
lret
cmpsl
adc
xchg
push
mov
mov
rcll
imul
xchg
mov
pop
mov
jp
dec
pop
xchg
adc
inc
add
lods
enter
rcl
lods
sahf
out
lock
faddl
dec
pushw
inc
das
push
mov
ret
imul
or
inc
int
fwait
cmpsl
cld
inc
int3
insb
fstps
stos
scas
enter
lcall
repz
lods
or
push
xchg
mov
ss
or
shr
lcall
cld
sahf
or
cmp
dec
and
add
pusha
bound
and
ret
jno
mov
aad
xchg
pop
cmp
arpl
outsl
jae
or
imul
mov
popf
cltd
mov
out
imul
add
add
pop
dec
enter
xchg
out
pop
or
das
jmp
ret
fcoml
movsb
rcll
jae
mov
in
popa
ds
xor
mov
loopne
aaa
int3
leave
push
stos
lock
jns
ret
lcall
cmp
adc
lods
mov
idiv
imul
addl
xchg
mov
jae
xchg
mov
push
inc
and
sbb
fstpt
inc
sbb
cmpsb
shr
ljmp
lcall
js
popf
test
mov
cmpsl
mov
lock
cmpsb
adc
jnp
inc
mov
mov
mov
loope
inc
cmp
mov
mov
ret
dec
jecxz
sbb
adc
mov
inc
outsl
push
dec
xor
sub
mov
nop
shll
iret
fwait
sti
jne
pop
push
xchg
lea
xchg
scas
jecxz
push
test
cmp
pop
inc
addr16
inc
repnz
nop
or
lahf
lods
loope
scas
fsubrp
in
pop
stos
dec
cmc
mov
mov
push
scas
sub
cmp
mov
jbe
aas
bound
int3
call
sar
lds
imul
insl
push
ficoms
push
xor
pop
mov
xchg
es
mov
push
add
fcomps
pop
in
out
pop
jmp
inc
dec
loopne
stos
adc
mov
mov
lret
xchg
jecxz
push
xor
test
mov
inc
jp
stc
int
jecxz
adc
push
andl
mov
push
out
lea
or
xlat
jecxz
xchg
sub
fdivrl
mov
pop
adc
iret
lods
jne
jnp
cmc
pop
cwtl
insb
lods
dec
mov
inc
jmp
mov
sbb
ret
add
and
icebp
push
mov
inc
fbstp
dec
and
jg
insl
out
fiaddl
mov
repnz
lret
mov
out
sub
aaa
and
aad
xor
mov
ja
fbstp
push
mov
shrl
add
into
mov
imul
fwait
inc
in
nop
pushf
sbb
fcoml
testb
mov
mov
mov
jne
sahf
imul
adc
ja
rclb
xchg
sub
push
mov
loopne
jbe
adc
cli
mov
fcompl
dec
sti
rcr
loope
mov
dec
inc
sti
or
in
stos
mov
in
movsb
xchg
aas
dec
adc
mov
mov
inc
ja
fcompl
in
jae,pt
shll
test
repnz
out
ret
pop
adc
jnp
fistpll
jg
mov
dec
mov
call
rcrb
xor
lret
cmp
imul
int
or
xchg
push
push
in
cmc
fs
int3
cmp
lcall
push
aaa
inc
in
add
cmp
xor
shll
out
or
aad
rol
push
cs
imul
mov
mov
cmc
sbb
mov
push
shll
daa
incl
push
insb
push
aaa
lret
inc
lcall
sub
ficompl
cld
pop
call
cmp
xchg
xor
add
loop
sti
jecxz
adc
push
push
das
jmp
ret
cmpsb
sbb
sbb
cmpl
cld
lods
mov
xor
cltd
sub
xor
xchg
pop
jecxz
daa
shlb
das
into
or
push
xchg
inc
mov
bnd
mov
xchg
fadds
popa
or
xor
add
test
inc
inc
dec
fsubl
fimull
out
or
cmp
rsqrtps
daa
cmc
stos
sub
jns
cltd
leave
pop
lods
mov
imulb
mov
fnstenv
mov
push
dec
xlat
int
stc
xchg
aam
shlb
push
bt
xchg
popf
loop
andl
loope
sbb
adc
adc
push
mov
movsb
pop
mov
mov
lcall
adc
leave
int
inc
and
pop
cwtl
mov
push
fidivs
aas
repz
cmp
push
out
dec
xor
push
add
aaa
xlat
mov
roll
pop
push
aad
cmpsb
inc
scas
jns
decb
fwait
dec
xor
mov
dec
gs
add
adc
scas
movntq
sahf
testb
js
cli
inc
rorb
gs
push
cmp
movsb
mov
lods
aaa
push
pop
mov
fwait
imul
ret
jns
mov
aam
and
mov
ss
repnz
inc
push
jg
xchg
xlat
fidivs
mov
out
pop
clc
push
pop
mov
lcall
mov
fmuls
je
movsl
ret
cmp
add
jns
lods
aas
loop
aas
lds
rcrl
mov
pop
mov
bound
jmp
adc
push
insb
aam
das
adc
cltd
inc
lret
jl
xchg
mov
lods
cmp
int3
xor
push
iret
subb
sbb
push
popf
and
or
and
jb
pop
jae
and
pop
cmp
nop
test
inc
push
xor
mov
lcall
pop
pop
pop
arpl
sarb
mov
adc
mov
test
ret
lods
sbb
push
imul
dec
push
pop
jnp
xchg
inc
mov
cli
jb
movsl
mov
mov
adc
xchg
add
adc
lods
add
mov
shrb
xchg
mov
push
arpl
js
jge
dec
jae
fucomip
xor
pop
jb
imul
jo
cmpsb
bound
cmpsl
push
bound
hlt
fmul
or
fstp
js
jecxz
or
ss
testl
mov
fwait
cld
cmp
inc
mov
nop
or
popa
sub
xchg
inc
mov
fwait
cmc
cmpsb
mov
mov
adc
cs
je
test
cltd
popa
jp
cmc
dec
sbb
es
push
mov
pusha
cmpsl
dec
in
and
sahf
cmc
xor
adc
into
mov
loope
scas
fistps
jge
pop
xor
add
rorl
rcr
sbb
shrl
sti
pop
addb
jae
stos
cld
dec
and
mov
push
sbb
lods
or
loope
ret
xchg
and
cmc
mov
sahf
jns
pop
je
mov
jb
adc
mov
xchg
xchg
adc
insb
js
or
xchg
nop
sub
adc
lcall
ds
or
jg
aad
cmp
ret
sbb
stc
mulb
lock
adc
rorb
out
mov
outsb
scas
xchg
mov
add
repnz
scas
push
orb
movsb
pop
ret
lea
mov
lret
enter
lods
mov
jns
pop
adc
xlat
cmp
cmp
popf
cmp
cmp
lods
ja
sbb
int
into
pop
sbb
dec
sbb
frstor
lcall
push
cs
add
fdivl
inc
pop
orb
sbb
xchg
out
mov
inc
loop
xchg
inc
sub
jne
or
clc
in
int3
or
jo
push
sbb
movsl
cmp
out
dec
mov
inc
inc
push
mov
fwait
lds
mov
push
sub
test
and
sub
mov
xchg
jg
lods
fidivl
mov
ss
adc
decl
sub
stos
mov
subl
bswap
fwait
cmp
enter
fcoms
cltd
scas
out
dec
or
pop
push
sbb
rolb
mov
mov
inc
nop
mov
mov
or
test
inc
jp
aad
jno
xor
mov
and
scas
nop
bound
mov
scas
call
add
leave
mov
jns
fmull
fmull
test
cmp
add
or
xchg
into
cmpsb
lcall
mov
xchg
cld
sub
add
pop
lock
jecxz
add
lods
adc
in
and
aad
jo
cltd
imul
inc
sbb
cmp
push
daa
arpl
outsl
fisubl
pop
and
lds
dec
cmp
mov
cmp
sub
push
xchg
leave
sbb
aad
pop
int
or
jecxz
sub
cld
ss
jge
or
aad
jo
fnsave
push
inc
xchg
and
and
test
or
lods
or
leave
mov
rcll
rorb
das
add
cli
mov
test
jnp
pop
cmp
adc
fwait
xchg
pushf
push
inc
negl
les
dec
push
gs
and
roll
out
fnstsw
fldenv
in
lcall
fiaddl
stc
sub
mov
fwait
mov
lret
fidivs
loope
dec
xor
mov
jae
int
or
cs
cwtl
addr16
cmp
rorl
pop
lods
ficoms
arpl
push
xlat
pop
jg
xchg
movsb
xor
shrb
loope
icebp
xchg
push
push
sbb
sub
hlt
les
call
xchg
mov
daa
out
fstpt
xchg
sbb
sub
adc
add
aas
pop
or
xor
ds
lret
sbb
test
sub
dec
jnp
xchg
das
js
and
in
dec
sbb
mov
cmp
cmp
dec
ret
movb
and
xchg
call
mov
adc
stos
jl
lcall
sar
pop
fisubl
insb
add
mov
out
jno
jle
dec
inc
xor
and
dec
or
inc
jbe
cmp
or
push
mov
mov
iret
ret
rcr
btcl
xor
inc
js
mov
jo
inc
xchg
int3
imul
dec
pop
inc
xor
xchg
vmovd
leave
add
pop
mov
mov
xchg
pop
pop
pop
jne
mov
popa
mov
popa
jbe
out
enter
repnz
xor
jl
pop
inc
arpl
inc
mov
pop
enter
mov
xchg
sbb
cld
mov
sub
dec
mov
push
hlt
mov
jo
aas
pop
imul
dec
mov
insl
ror
xchg
loope
adc
lods
inc
mov
ret
ret
imul
jae
sub
mov
rcrb
xor
sti
lea
cli
mov
adc
rol
out
sbb
lods
scas
divb
push
xchg
sub
sahf
lea
mov
jecxz
xor
data16
sti
xchg
cmp
aas
pop
or
imul
mov
fs
scas
cmp
idivb
dec
or
into
cmp
sbb
xchg
pop
xchg
cli
jle
cmovbe
sbb
jl
and
outsb
sbb
and
icebp
aam
cmp
stos
test
mov
and
int3
sbbb
lods
data16
not
leave
pop
movsb
les
ljmp
jecxz
outsl
lret
xchg
inc
ret
jae
pop
inc
int3
fadd
mov
gs
add
in
out
sub
add
pop
ja
sub
sub
xor
fmuls
lock
or
pushw
adc
fildl
stc
jns
movsl
jne
bswap
pop
pop
movaps
test
lret
add
test
xchg
leave
inc
lds
aam
idivl
ljmp
cmp
jne
notl
jb
mov
sub
cmc
adc
leave
loope
xchg
dec
xor
push
adc
stos
jns
xor
out
fs
loopne
insl
je
mov
push
aaa
adc
cmp
adcl
jl
sub
test
pop
sub
cmp
adc
pop
fwait
in
fsubr
mov
mov
push
inc
int
repnz
fcomi
out
xorl
mov
or
imul
mov
jae
jne
mov
iretw
adc
mov
pop
xor
mov
and
xchg
xlat
test
xchg
inc
dec
mov
daa
fcmovbe
insb
lds
cltd
cmc
mov
js
iret
pop
std
outsl
or
push
fldl
mov
fstpl
push
lahf
adc
mov
imul
mov
jle
pop
out
mov
or
scas
add
inc
das
clc
test
bound
xchg
dec
xchg
mov
dec
push
jg
aaa
sbb
adc
pop
aaa
shl
adc
nop
dec
sub
pop
testl
adc
stos
repz
and
lcall
push
in
ds
testb
fsubrl
add
and
mov
cmp
and
ret
lret
xor
std
jl
lret
xor
pop
outsb
jmp
cmp
es
cwtl
orl
add
lods
gs
cmp
adc
sbb
inc
pop
cmpsb
insb
subb
lahf
jbe
dec
fidivl
insl
ljmp
imul
icebp
adc
dec
into
mov
fcmovnb
pop
dec
sbb
adc
negb
dec
call
test
test
outsl
dec
or
dec
mov
inc
ds
xorl
and
pushf
in
push
adc
xor
js
pop
and
sahf
pop
imul
mov
fiaddl
addr16
xchg
frstpm(287
movsb
imul
pop
fisttpl
stos
jae
shl
fistpll
sahf
pop
push
bound
call
out
sub
out
mov
pop
lods
mov
pushf
xchg
scas
xlat
aad
cmp
cwtl
std
adc
fidivl
popa
pop
into
adc
inc
aaa
xor
xor
rcrb
pop
test
mov
data16
inc
sbb
scas
or
pop
sbbb
xchg
ljmp
mul
cmp
mov
aad
mov
jp
push
daa
ljmp
pop
aam
adc
daa
imul
divb
sub
sub
jge
std
fdivrl
cltd
in
mov
pop
mov
outsl
iret
ror
idivl
movsb
arpl
dec
inc
dec
jp
adc
xor
and
lahf
cli
loope
and
pop
xchg
rcll
push
imul
mov
jmp
xchg
mov
shlb
rorb
stos
ret
xchg
xorl
stos
out
das
xchg
aas
push
pop
xor
add
daa
rcpps
adc
add
int3
mov
push
add
stos
push
and
les
aad
cwtl
sub
mov
mov
cmp
pop
mov
dec
pop
mov
mov
or
test
cmc
jns
sbb
fisubl
fistpl
cmp
inc
sub
icebp
cmp
pop
sub
push
mov
push
popa
jmp
cmp
psubb
mov
lcall
jae
cwtl
or
scas
popa
adc
jo
in
push
sub
xchg
stos
xor
lcall
sti
or
jne
mov
lret
lcall
push
sub
in
mov
xor
popf
xor
dec
or
push
cmp
je
loopne
stos
movsb
xchg
fs
and
jbe
mov
xchg
test
jae
sarb
inc
sub
aam
cmpsb
out
call
imul
pushl
jle
pop
orl
xor
rclb
loop
dec
shl
stos
mov
pusha
sbb
outsl
push
jnp
xchg
loop
js
fmull
daa
cli
jb
cmpsb
pop
xlat
or
pushf
sti
mov
add
push
fwait
inc
in
dec
lret
adc
ja
xor
daa
imul
int
add
cmp
mov
lock
sub
cmp
ljmp
fldl
stos
mov
icebp
test
add
sbb
pop
je
addl
inc
and
jnp
stos
dec
sub
dec
movsb
and
mov
push
or
popa
add
dec
sahf
sub
mov
push
lock
pop
mov
push
dec
fwait
ret
stos
pop
mov
cmp
iret
cmp
and
cmp
cmc
cwtl
mov
mov
stc
movsb
add
cmc
mov
and
sbb
mov
cmp
or
and
je
addr16
sub
fisubrs
scas
sbb
test
jmp
mov
repz
jnp
mov
xor
mov
inc
es
add
ret
shrb
cwtl
add
pop
mov
ret
ret
fcoml
outsl
lret
xchg
sub
insb
sbb
clc
insb
xchg
test
mov
stos
dec
mov
sub
imulb
add
stos
pop
mov
xor
stos
ja
pop
sbb
sub
mull
pop
aad
pop
mov
and
xor
iret
ds
sahf
cmp
inc
int3
lret
dec
pop
pop
pop
xchg
jg
data16
notl
cld
sbb
add
call
movl
xchg
fistpll
jle
cmp
push
in
mov
xor
mov
popf
lret
push
shlb
popf
sbb
fildl
adc
mov
cltd
out
cmpsl
imul
sbb
out
lods
xor
hlt
movsb
pop
aaa
pop
pushf
outsb
int
pushf
sbb
cmp
mov
int
mov
pop
sub
push
push
pop
fcomip
mov
inc
sbb
dec
push
int3
lcall
popa
add
pop
into
xor
cmp
imul
adc
xchg
sbb
or
repz
pop
xchg
cli
add
sbb
mov
lods
mov
mov
xor
dec
pop
ss
mov
call
mov
mov
xchg
xchg
or
pusha
test
cmp
aad
sti
or
insl
mov
insl
push
mov
sub
pop
or
lahf
mov
repnz
pop
jno
scas
stos
cmc
rorb
or
ret
repnz
mov
andl
lcall
stc
dec
push
or
repz
sbb
dec
out
cmp
aam
test
nop
xlat
cmpsl
loope
dec
mov
or
pop
shll
stos
shlb
rorb
lret
bound
push
outsl
addr16
dec
clc
push
clc
or
roll
repz
jp
jl
xor
data16
push
jge
fwait
out
push
leave
dec
pushf
inc
sbb
sub
mov
adc
pop
les
pusha
or
je
jle
test
or
xchg
rolb
dec
push
push
cs
sub
xor
cmp
sbbb
rcll
cmpsb
int3
stc
inc
jae
mov
mov
mov
xchg
jae
pop
push
rorb
shl
mov
roll
xchg
jmp
lock
add
push
stc
xchg
arpl
or
in
and
mov
loopne
rol
lcall
js
ss
mov
lods
cmp
std
mov
dec
pushf
xchg
mov
aam
loopne
ja
ret
dec
dec
add
or
adc
mov
jle
sbb
bound
in
jns
cmc
pop
imul
and
out
cmpsl
dec
shlb
mov
je
out
xchg
push
xorb
pop
stos
divb
mov
cmpsb
add
push
shl
push
fiadds
adc
push
xor
adcb
jmp
cmp
mov
sti
jle,pn
insb
jae
out
jae
add
fsubrp
push
and
call
aas
inc
xchg
mov
inc
jb
lock
js
loop
xchg
push
mov
sarb
or
enter
data16
mov
dec
xchg
andl
cmp
pop
dec
xor
mov
sbb
mov
loopne
mov
movsl
push
pushf
ret
or
repz
or
jmp
pop
aas
outsb
push
das
inc
vmovss
adc
je
ds
mov
push
jg
xor
dec
ret
je
push
mov
jnp
inc
pop
add
es
and
insb
pop
sub
outsb
push
inc
lods
push
and
in
fadds
sbb
or
sti
xchg
insb
dec
sbb
shl
ret
jae
daa
inc
mov
xor
roll
xor
jae
out
out
aad
insw
dec
pushf
fiadds
push
pusha
aad
push
stos
cld
xlat
outsl
adc
arpl
or
bound
rclb
xchg
insl
into
add
jg
cltd
or
out
xchg
jge
pop
cmc
fiadds
pop
cs
addr16
xchg
xchg
sarb
stos
iret
adc
mov
and
data16
add
out
xlat
jecxz
cltd
fcmovu
mov
cmp
dec
les
inc
lahf
dec
xor
std
cmp
orb
inc
cmp
iret
push
daa
jns
les
cmc
cmp
push
fldenv
sub
ret
shlb
fucomip
repz
popf
into
pop
sbb
je
sbb
popf
lea
lods
sbb
mov
xchg
sbb
bound
js
jg
inc
outsl
jle
imul
dec
dec
mov
dec
rcrl
push
sbb
aaa
lret
aad
ja
repnz
outsb
pop
cmp
sbb
xchg
push
ljmp
scas
call
jae
iret
or
and
pop
sbb
or
out
sbb
fcomps
jmp
sub
xor
sub
jmp
push
ret
jae
js
sub
add
mov
jb
enter
enter
and
add
ret
hlt
or
sbb
add
in
mov
inc
fnstenv
orl
dec
mov
lret
sbb
pop
adc
sysret
mov
add
fs
fidivrl
adc
cmp
sub
test
and
pop
sbb
fcoms
clc
cltd
xchg
popf
divb
cmpsb
fidivrs
add
dec
int3
mov
mov
stos
cld
jle
addr16
mov
push
mov
push
scas
loope
cli
cltd
cmp
aam
lret
jno
inc
cwtl
inc
les
lock
cmp
inc
ret
xchg
lea
add
jbe
and
jecxz
sbb
or
mov
fnstcw
xchg
xor
filds
shrl
mov
jae
dec
sub
call
cmp
sbb
pop
pop
push
ja
pop
xor
mov
push
pop
sbb
dec
int3
or
and
div
inc
rcll
sti
xor
push
lea
mov
xchg
mov
inc
jb
inc
jo
mov
mov
mov
mov
mov
outsl
cmp
adc
mov
movsl
test
gs
inc
dec
ret
addl
pop
in
inc
push
lahf
daa
lcall
and
push
std
aaa
adc
mov
cmp
xor
movsl
mov
or
ffree
xlat
inc
lcall
jae
mov
gs
enter
inc
pop
mov
mov
cmpsl
mov
imul
sti
xor
in
idiv
flds
cmp
cli
dec
pushf
rcl
arpl
and
xchg
and
dec
or
rolb
inc
out
into
repnz
dec
sub
test
sti
movsb
fisttpll
adc
jmp
sahf
es
pop
cmp
inc
adc
ficompl
shrb
repz
dec
xor
xor
jo
pop
xor
xchg
push
jle
fisubl
hlt
jbe
cmc
sbb
adc
sbb
push
cmp
xchg
repz
pop
jno
lds
in
int3
push
rcpps
dec
mov
push
pop
sub
addr16
lcall
jnp
dec
in
cmp
cs
sbb
or
andb
aaa
aas
sti
test
pop
adc
jnp
cmp
pop
scas
js
shll
fidivs
cmpb
clc
push
fstpl
jne
enter
jmp
sbbb
cmp
sbb
push
cwtl
or
sub
das
adcl
push
and
insb
ja
and
add
dec
ffreep
movsb
add
push
icebp
fdivs
mov
fdivs
jnp
inc
inc
lret
aaa
jbe
pushf
sub
xchg
dec
ljmp
ret
adc
lods
lods
dec
insl
xchg
stos
scas
rcr
jge
inc
pop
sahf
mov
jbe
dec
loope
mov
push
imul
ror
imul
testl
lods
enter
push
xor
icebp
dec
push
jmp
inc
rorb
ss
out
and
stc
mov
pop
sbb
ds
lret
push
sbb
mov
mov
cmp
xlat
pop
test
push
insl
pop
jo
outsl
mov
loopne
dec
mov
push
outsb
cmpsb
pop
ret
sub
lret
push
mov
inc
mov
imul
dec
sub
dec
in
adc
pop
xor
sub
sub
nop
je
out
mov
mov
or
dec
stos
adc
dec
out
add
jle
jnp
push
xorb
pop
call
test
loope
filds
es
cli
test
in
vpunpckhqdq
sbb
jecxz
fdivrs
add
icebp
jmp
push
sahf
add
mov
pop
shl
arpl
mov
sub
pop
pop
cmp
dec
mov
mov
mov
int3
jo
adc
cmc
stos
jg
cmp
test
shlb
push
mov
mov
fs
aad
or
xor
or
xor
lret
and
or
or
jae
cltd
jg
clc
and
fwait
aas
pop
sti
shlb
mov
push
cli
xabort
sub
lods
in
inc
jno
rcrb
in
add
rcl
fs
fwait
jno
lret
inc
lahf
cwtl
xor
mov
pop
insl
fiaddl
cwtl
test
sarl
ficoml
shrb
sbb
inc
loope
xchg
test
jns
push
outsb
xor
mov
inc
xlat
leave
xchg
scas
xchg
aam
cmpl
outsl
jg
aaa
push
bound
test
xchg
mov
add
adc
fwait
mov
pop
test
mov
nop
into
mov
cmp
push
add
test
sub
lods
pop
cmpsl
test
mov
mulb
cmp
adc
enter
cmp
or
and
out
xchg
cmp
push
mov
fnsave
lret
jns
vprotw
xor
loop
rolb
cmpsb
js
leave
or
adc
cltd
int
test
shlb
and
movsb
xchg
cmp
mov
jo
inc
stos
xlat
push
mov
mov
adc
cmp
lret
dec
mov
arpl
add
scas
ja
jle
xchg
sbbb
je
sar
int3
insl
jl
into
stos
punpcklbw
push
push
dec
mov
pop
test
leave
sbb
outsb
out
dec
out
adc
popa
bound
fidivrl
push
cmp
cmpsl
jge
or
aam
jg
frstor
js
mov
lock
mov
mov
add
mov
adc
or
mov
or
jmp
or
dec
inc
xchg
xlat
mov
in
pop
pop
sbb
jl
sbbb
test
scas
jecxz
dec
fistpl
adc
inc
xor
push
lcall
and
js
fxch
mov
stos
movb
push
mov
push
fcoms
repnz
adc
cmp
dec
inc
insl
pop
push
jg
ja
sub
ja
bound
std
aam
mov
inc
push
mov
mov
in
jle
xor
dec
lret
and
jmp
mov
pop
mov
push
scas
mov
and
inc
lret
and
mov
jb
adc
ficompl
dec
pusha
popf
sbb
push
or
ljmp
orb
mov
sbb
mov
or
cmpsl
sti
or
in
pop
mov
jp
lahf
xchg
data16
cltd
jp
xor
lcall
push
in
enter
call
cmpsl
mov
sbb
lcall
jge
ret
sbb
pop
mov
hlt
int3
mov
andl
inc
cmp
pop
sbb
jp
cmpsl
arpl
mov
xchg
stc
in
lret
push
or
fmulp
push
mov
repnz
and
pop
mov
sbb
xchg
mov
xor
insl
scas
xor
jle
neg
and
push
mov
jno
add
mov
aam
mov
pop
mov
xchg
jb
add
divb
cmpsl
dec
in
dec
add
int
adc
pop
jmp
sti
dec
xchg
flds
aam
jle
mov
xchg
in
jo
pop
cmp
mov
lret
mov
sarb
addb
mov
dec
add
call
js
sbb
sbb
jle
fsubrl
inc
sub
rcl
mov
or
push
and
xorl
sub
mov
lods
fadds
sti
inc
repz
jnp
sti
or
xor
outsb
xchg
pop
or
ljmp
gs
out
pop
imul
dec
and
cs
jmp
cmpsl
push
mov
mov
push
mov
mov
xor
sub
addr16
xchg
xchg
sti
push
xchg
cmp
bound
inc
jne
add
cmp
pop
flds
cmp
cmpl
xor
lret
push
fisttpl
in
jne
pop
or
dec
bound
lods
icebp
pop
push
push
loope
push
jp
sbb
out
mov
lret
enter
or
and
jmp
lods
ret
fldt
lcall
mov
shld
ljmp
enterw
jb
jno
xor
jmp
sbb
cmp
out
mov
out
leave
js
push
xor
stc
pop
and
add
mov
roll
inc
ljmp
jle
dec
sub
fs
mov
or
sbb
hlt
js
popf
lahf
jno
rclb
and
fbld
pop
pop
sub
lea
ja
adc
mov
std
mov
test
ret
sub
add
jle
cmp
lods
push
adc
ret
stos
adc
loope
inc
movsb
jg,pt
xor
sbb
or
lret
sub
inc
mov
lods
shrl
mov
or
scas
int3
mov
sub
inc
sub
ljmp
or
xor
aas
push
out
sti
sbb
loopne
xor
sbb
fldcw
jno
shll
mov
adc
jae
pusha
mov
lcall
out
sbb
lret
rcrb
xchg
movsl
adcb
arpl
mov
mov
pop
fsubrs
mov
or
ss
mov
scas
aaa
mov
pusha
sub
jae
iret
dec
inc
mov
or
sub
cmc
mov
mov
mov
and
leave
std
fdivl
enter
add
or
test
add
ret
scas
mov
repz
jnp
sub
and
lahf
mov
pop
stos
jle
imulb
rcrl
sbb
xor
xor
testb
jo
iret
sbb
in
xchg
js
and
mov
pop
mov
push
or
test
out
shl
xor
xorb
imul
mov
inc
mov
add
dec
lds
outsb
dec
jo
in
mov
mov
sbb
cli
cmpb
and
clc
mov
push
sbb
push
pop
leave
dec
xchg
pop
xor
add
xor
jecxz
adc
cmpsb
mov
xor
aad
mov
into
cwtl
inc
insl
out
mov
mov
jne
add
cwtl
mov
lret
imul
jnp
cmp
std
mov
imul
jl
sub
adc
insl
das
fistpll
pop
mov
adcl
jecxz
in
test
pop
push
jle
push
dec
repz
xchg
fs
fcompl
lcall
push
mov
repz
mov
or
add
mov
push
lea
mov
or
lret
imul
rorb
popf
scas
cmpsl
xlat
push
mov
mov
mov
or
in
fdivr
push
mov
mov
jne
lea
inc
ljmp
fbld
mov
mov
pop
jle
stos
inc
enter
jne
adc
lods
dec
aad
imul
adc
test
out
jle
inc
sbb
or
sbb
popa
sbb
into
out
push
dec
mov
mov
inc
cltd
outsb
in
inc
push
shll
cld
shll
adc
lea
pop
sbb
lahf
sub
rclb
mov
ret
sbb
mov
push
test
js
xchg
ficomps
mov
fwait
iret
rcrl
adc
sbb
test
push
sar
scas
cmp
mov
pop
into
xchg
fmull
jecxz
inc
int3
push
movsl
inc
adcl
pop
push
mov
xchg
adc
push
jnp
mov
lcall
lcall
mulb
add
rorb
ret
pop
imul
aad
jb
pushf
or
scas
jg
mov
ds
ret
jnp
into
sahf
add
rcr
pop
sub
pop
xrelease
pop
lret
xchg
rorb
addb
mov
pop
je
ret
jae
rcrb
lods
cmp
in
clc
icebp
repz
gs
pop
jne
ds
addl
stos
repnz
jnp
jnp
sbb
stc
xchg
push
adc
cmp
add
cmpsb
jns
aas
or
cmc
imul
out
and
leave
pop
sub
mov
addr16
cmp
sub
pop
push
add
xor
icebp
iret
in
jb
popf
pop
xchg
mov
jecxz
lds
ret
fcoml
xor
imul
pop
movl
pop
aad
shrb
pop
aam
jne
cmc
push
cmp
sub
jp
mov
jmp
nop
adc
add
push
xchg
rclb
loope
dec
mov
cmpsb
pop
sbbl
mov
movsb
iret
sbb
int
bound
repnz
cltd
add
pusha
pop
push
mov
adc
cmp
jno
inc
add
jle
cwtl
stos
insb
test
cmp
lret
mov
fsubr
sti
mov
and
outsb
push
xchg
push
xchg
jmp
mov
dec
push
jg
pop
pop
scas
call
push
out
cmp
jp
mov
fucomi
bnd
jns
inc
mov
in
sahf
inc
scas
lds
std
xor
mov
sbb
pop
lcall
fstl
sahf
cmpsl
jl
inc
popf
mov
pop
mov
dec
aaa
lahf
nop
or
lods
subb
fdivrl
fcmovbe
stos
cmpsb
push
aam
jae
xchg
mov
mov
rcrl
stc
push
mov
pop
enter
mov
sub
incb
shlb
mov
gs
popa
sbb
ja
cs
pop
jae
cmp
xchg
cmpsb
jno
mov
or
daa
mov
inc
mov
mov
mov
out
es
mov
cmc
mov
adcb
dec
test
stos
mov
push
pop
or
pop
inc
in
es
pusha
lea
popa
fcomps
inc
mov
adc
adc
xchg
push
out
aad
mov
cmpsb
aas
fs
ror
stos
out
out
popa
lods
sbb
rcrl
iret
and
je
jns
and
icebp
mov
outsb
sti
stos
nop
xor
mov
adc
cmpl
sub
mov
pop
adc
cmc
fstpt
scas
push
mov
inc
ss
imul
add
push
add
mov
in
mov
mov
mov
icebp
imul
aam
jecxz
pop
dec
jl
xor
push
mov
push
enter
and
fwait
push
jge
cmp
dec
cmp
test
popa
les
or
fsubrs
leave
out
fistps
xchg
js
add
pop
push
in
out
sbb
adc
daa
xor
sub
movsb
xchg
push
inc
lods
xchg
lret
jns
fists
sub
pop
pop
into
les
push
iret
jge
and
jns
call
iret
test
scas
ss
popf
dec
sbbl
clc
js
fcmove
fwait
movsl
push
push
adc
xorl
ja
imul
shl
mov
xchg
std
and
or
insl
stos
call
pop
fsub
and
dec
mov
cmp
jb
xor
xchg
xchg
and
pop
sbb
sahf
xorb
dec
loop
xor
mov
xchg
xor
mov
cmp
mov
inc
jbe
dec
jmp
popa
inc
jecxz
xchg
jae
pop
mov
xor
pop
out
cmp
test
mov
dec
pop
dec
mov
sub
sbb
fbld
pop
int3
arpl
dec
or
pop
xor
jl
incb
mov
divb
dec
mov
ret
push
aam
test
sbb
test
lret
or
mov
andb
sti
add
outsb
xlat
fcmovnu
fimuls
push
loop
inc
sbb
ret
out
mov
out
xor
dec
loopne
inc
sub
inc
xor
mov
push
sahf
xchg
jg
push
push
xlat
mov
or
mov
insb
aad
sub
stos
mov
or
lods
jns
xor
xor
add
fisubs
lods
outsl
cmp
popa
and
sbb
ljmp
and
pop
pusha
popl
mov
adc
mov
sbb
aad
add
insl
or
in
pusha
pop
jl
fistpl
stc
stos
sbb
mov
mov
mov
push
mov
or
mov
mov
mov
test
push
sbb
mov
jnp
xor
sbb
sub
mov
jae
stos
mov
cld
sub
sub
inc
mov
in
fldt
dec
ret
out
sbb
mov
mov
mov
pop
sbb
jnp
out
sbb
push
insl
or
dec
in
cmc
sbb
aaa
lods
pusha
sbb
out
mov
icebp
xchg
xor
stos
clc
mov
arpl
enter
add
jbe
push
cmc
cmp
lret
mov
mov
add
sbb
jae
iret
imul
cmp
or
dec
push
jg
fucomip
enter
inc
hlt
jmp
add
fsts
inc
lds
mov
frstor
lock
mov
test
nop
jl
sub
sahf
inc
fstpl
lcall
or
popa
pop
in
addl
nop
mov
cmpsb
out
iret
pop
sarl
fmull
shlb
push
cmp
mov
pop
inc
aaa
cmpsb
je
xor
loopne
add
hlt
leave
adc
pop
inc
fidivs
xor
add
push
xchg
sub
test
data16
and
push
lods
cmp
adc
inc
add
stos
adc
insl
jp
xor
std
xchg
fcmovnu
push
or
insl
enter
rclb
pushf
je
pop
aam
repz
xor
das
fisubrs
xchg
jo
test
aaa
popa
push
cmp
mov
mov
sbb
xor
mov
and
cmp
pop
aad
ss
mov
les
lret
arpl
xchg
mov
jg
xchg
mov
into
inc
cmp
mov
nop
outsb
in
push
sub
and
cltd
enter
cltd
clc
xor
mov
adc
iret
test
dec
pop
lret
out
int
outsb
jmp
das
cmp
pop
inc
lods
and
cli
mov
xchg
push
sahf
or
jb
dec
dec
lds
dec
cmp
mov
lock
inc
push
cmp
pop
loopne
mov
test
cmp
xlat
push
jb
jbe
aas
dec
icebp
lea
mov
ret
repz
imul
xchg
fadd
je
call
sbb
cs
movsb
in
jne
and
mov
mov
pop
cmpsb
push
xor
sub
xor
addb
sbb
rolb
out
mov
mov
imul
fidivrl
out
xchg
mov
xor
psubb
adc
sbb
jbe
es
or
or
and
sbb
nop
insl
mov
stos
ljmp
fsubrs
sbb
popf
ds
pop
lock
lds
dec
out
cmp
mov
adc
sub
lock
popa
std
xchg
aas
xchg
cmpb
int3
add
adcl
mov
or
or
iret
dec
sbb
push
push
xorl
mov
inc
adc
mov
or
mov
popa
push
pop
add
cmpsl
iret
andl
or
sar
sbb
jne
rcl
fld1
or
daa
lahf
xor
lcall
movsb
add
aas
loop
xchg
jns
fwait
out
test
loop
xor
out
cmp
add
fiaddl
mov
cmp
rorl
push
mov
push
mov
roll
sub
data16
fwait
xchg
and
insb
jle
shlb
push
xor
imul
jbe
sahf
xchg
scas
rcrl
lahf
lods
dec
and
ds
xchg
shrl
pop
loopne
fisttpll
push
sbb
xor
mov
jnp
dec
xchg
stos
es
adc
les
mov
pop
loopne
hlt
xchg
inc
or
movsl
jp
lret
adc
fdivl
adc
mov
clc
xchg
inc
push
aaa
aas
push
add
pusha
popf
jp
fs
pop
push
out
mov
push
mov
jle
shl
or
cmpsl
mov
xor
jg
js
adcl
adc
xor
popa
mov
and
mov
push
movsl
mov
mov
aad
dec
aaa
pusha
xor
mov
ja,pt
jge
nop
mov
push
lods
dec
rcrb
adc
bound
mov
movsl
mov
aas
push
pop
adc
loop
and
ss
setb
popf
push
mov
lahf
loope
dec
shll
aas
xchg
andb
xlat
lods
testl
pusha
fists
popa
call
xchg
daa
mov
pop
psubq
sahf
stos
mov
stos
divb
dec
test
and
mov
push
shrl
jae
jmp
xchg
fistl
sbb
outsl
mov
jbe
mov
mov
dec
and
mov
mov
inc
mov
mov
fsubrs
aas
mov
in
pop
push
inc
icebp
xchg
lds
jnp
sub
lea
rolb
xor
fwait
and
push
in
dec
lods
int3
out
pop
cmp
pop
call
jbe
mov
adc
jbe
jmp
in
mov
and
or
into
xor
cli
inc
jg
nop
scas
jnp
xor
inc
lods
push
dec
repz
mov
xchg
pop
push
stos
scas
mov
push
pop
adc
andl
call
push
push
js
adc
lea
sbb
out
dec
inc
cmc
es
pop
xor
push
cli
jne
inc
mov
jne
mov
arpl
add
add
cs
inc
xchg
shr
or
mov
mov
push
adc
adc
in
mov
jge
test
lds
mov
xchg
aad
xor
lahf
mov
rsqrtps
cmp
mov
inc
inc
mov
pusha
das
aam
pop
sub
inc
mov
pop
mul
sub
cld
fstps
subl
insl
out
hlt
popl
incb
lahf
cwtl
cmpsl
jmp
pop
lds
adc
pop
les
dec
cltd
movsb
inc
das
jns
mov
mov
aaa
mov
adc
out
cmp
dec
bound
jle
addr16
stos
mov
mov
nop
in
aad
push
hlt
mov
push
dec
clc
jmp
pop
and
inc
sbb
pop
sbbl
sbb
les
push
iret
inc
cmp
adc
sub
inc
inc
and
mov
mov
or
dec
xchg
mov
jae
mov
pop
stos
jo
dec
ja
stos
cmpsb
test
ret
gs
insl
add
mov
cli
shrl
xor
push
dec
fwait
or
shrl
leave
fwait
mov
xor
dec
or
jecxz
imul
add
ljmp
inc
push
pop
push
jle
push
and
jp
mov
fwait
push
int3
outsl
pop
mov
add
and
dec
push
ret
test
mov
shrb
mov
sub
cmp
mov
scas
or
daa
lea
cmp
iret
xor
mov
repz
adc
push
pop
out
aam
mov
ret
in
pop
push
and
loopne
xor
or
in
out
addr16
mov
ljmp
dec
cld
push
movsb
fildll
and
lock
repnz
shlb
pop
mov
inc
xor
pop
ret
cmp
xchg
mov
rorl
out
aam
jb
xchg
mov
mov
jecxz
mov
test
mov
fwait
mov
push
mov
xchg
out
mov
mov
cmpsl
sahf
out
adc
cld
mov
or
daa
ds
loope
xlat
scas
lods
leave
pop
mov
sbb
sub
out
aaa
cmove
xchg
pop
dec
add
repz
jl
sub
sub
mov
in
and
ja
adc
iret
rorb
loop
mov
sbb
add
sub
cmp
xchg
sbb
xor
and
inc
inc
std
mov
aaa
fisttpll
or
or
dec
aaa
sahf
punpckhbw
lock
aas
das
mov
xchg
movsl
les
pop
loope
adc
sub
push
mov
xchg
jp
jb
fwait
add
xor
inc
aas
hlt
push
mov
enter
mov
cli
pop
mov
add
nop
sahf
push
test
iret
out
popl
out
mov
mov
dec
sub
pop
xchg
push
sub
lods
jmp
pop
sub
mov
repz
loope
mov
ret
bound
or
je
pop
dec
cmp
or
lret
lret
inc
mov
cmp
aam
jnp
je
sbb
sbb
mov
std
iret
fs
and
mov
je
shrl
test
popa
ja
xlat
out
mov
adc
lods
ret
push
dec
cmp
mov
mov
adc
adc
lods
sti
fstl
test
loop
fidivrs
adc
inc
inc
scas
lods
outsl
jnp
lcall
stc
mov
test
add
lcall
mov
jg
lea
sbb
aaa
cmpsl
and
cmp
jl
outsl
xor
cmp
lcall
sbb
mov
push
sbb
jnp
sti
push
mov
lret
mov
std
out
test
xor
add
mov
add
iret
jbe
xor
decl
pop
lods
pop
dec
and
mov
incb
jge
dec
stc
pusha
movl
xchg
push
les
jne
fistl
fcoml
mov
pop
xor
add
push
test
push
xor
or
inc
je
int3
lret
pop
loopne
push
push
or
cmpsl
pop
mov
pushf
cltd
push
push
jne
mov
loope
sub
mov
push
push
dec
imul
mov
push
enter
add
call
dec
dec
mov
adc
jae
hlt
in
add
pop
sbb
xchg
add
popa
jno
and
and
cld
adc
xor
es
pop
mov
xchg
xor
dec
int3
xor
lret
inc
adc
stos
cmc
int3
jl
adc
test
mov
push
daa
loopne
push
dec
ss
fxch
push
dec
cmovle
lods
lcall
jmp
int
or
cs
jle
or
or
jo
jo
fimull
push
sbbl
xchg
cmp
cld
lods
mov
fprem1
jno
mov
mov
dec
jno
aad
shll
push
dec
push
pop
stos
pop
xor
fdivr
xor
pop
ss
jp
adc
cmp
shrb
jbe
in
les
mov
ret
daa
sbb
jbe
xchg
int
push
jbe
std
or
mov
cmp
xchg
lds
fnstenv
mov
rolb
rorl
add
mov
lods
add
shr
jbe
push
push
jns
in
push
in
cli
inc
sbb
jno
mov
out
in
or
jle
test
ret
aas
cmp
xchg
mov
xor
fdivr
lods
xor
insb
nop
mov
cmp
dec
push
cld
push
subps
dec
hlt
int
mov
arpl
jnp
jo
push
in
scas
or
iret
mov
mov
ss
and
sub
je
fcomp
in
xor
xchg
adc
mov
rcrb
mov
inc
outsl
dec
cli
dec
rcrb
and
dec
movsb
ljmp
pushf
daa
in
adc
xlat
es
cmp
pop
fimuls
lods
jns
popf
fs
fwait
push
lret
je
lds
or
mov
into
adc
cwtl
sub
lea
cmpsb
sbb
inc
sbb
sbb
pop
sbb
cmp
xchg
jle
sahf
sbb
imul
sub
dec
pop
mov
xchg
jne
or
cmpsb
test
push
mov
xor
in
mov
jp
sub
inc
push
test
fimull
popa
int
add
add
in
inc
push
lret
and
gs
add
fcmovne
jno
jecxz
mov
iret
pop
pusha
xlat
push
mov
push
lods
pop
aam
jp
aaa
pop
push
and
fwait
rorb
loope
dec
push
fidivrs
xor
aad
add
or
fidivl
adc
mov
cmc
mov
popf
addr16
pop
push
mov
jbe
daa
xlat
out
push
mov
clc
and
pop
push
mov
xchg
xchg
jmp
daa
xchg
add
test
clc
repnz
cmp
sub
jne
popa
leave
sub
loope
jnp
mov
lods
mov
sbb
rcrl
add
cmc
xchg
mov
or
pop
pop
adc
inc
inc
addb
les
push
mov
adc
sub
outsl
cld
bnd
iret
js
mov
mov
pop
cli
insb
in
lret
lcall
popf
aam
sbb
xor
xchg
mov
push
arpl
add
sbb
mov
lods
loopne
dec
pop
lcall
fs
fs
insl
or
stc
jg
sbb
cmpsb
hlt
inc
popa
inc
ja
sbb
jno
roll
insl
ss
xchg
sbbl
subl
leave
xchg
mov
dec
mov
mov
clc
jne
push
sbb
out
and
fnstsw
inc
adc
jge
push
imul
jge
ret
jge
insb
ds
out
rcrl
push
lret
or
int
jg
cli
pop
in
mov
es
push
or
sub
lock
aaa
and
add
lret
dec
pop
jae
negb
mov
cltd
data16
push
jge
out
mov
xchg
mov
stc
xor
push
inc
call
cmpb
mov
mov
inc
inc
cld
es
cltd
sbb
ds
fnstsw
push
outsl
js
mov
or
jp
sbb
cltd
in
fdiv
cli
lret
pop
mov
pushf
sbb
sbb
orb
movsb
mov
sti
arpl
push
adc
adc
shrl
outsl
pmullw
rcll
pop
cmc
jmp
jmp
arpl
mov
dec
out
mov
cmp
sub
dec
ljmp
lods
fstp
cmpsl
xor
fmulp
sahf
push
movsb
daa
mov
iret
aas
lods
mov
inc
aaa
adc
mov
jmp
jbe
sahf
jl
adc
les
imul
jbe
mov
clc
aad
xor
add
pop
mov
dec
inc
cli
loop
pop
fcoml
in
pop
cmp
aam
inc
movl
push
lret
sarl
xchg
int
or
ss
inc
pop
out
mov
push
js
sub
movsb
pop
dec
hlt
dec
cmp
dec
orb
jb
dec
push
mov
daa
or
out
mov
and
push
jmp
jbe
or
out
push
adcb
negl
aad
push
or
mov
mov
add
hlt
sbb
xchg
loop
cs
sbb
or
push
jo
cld
add
sub
cmp
movhps
test
mov
jg
sti
addr16
adc
loope
push
mov
mov
js
adc
sub
test
hlt
inc
cmpl
cmp
sbb
js
adc
or
dec
adcl
dec
push
stc
pop
mov
mov
xorl
mov
xor
or
cli
pop
bts
lret
sahf
clc
xor
jb
sub
aas
scas
dec
mov
gs
movl
mov
mov
pop
pop
and
adc
scas
jp
xor
scas
shl
xor
add
popf
and
jmp
pop
inc
loope
and
push
rolb
loope
xor
test
in
pop
mov
cmpsl
mov
xchg
lds
or
jb
es
fmulp
fiadds
gs
or
insb
jg
loopne
adc
inc
mov
imul
mov
jmp
mov
sub
lahf
cmpsb
sub
js
xchg
jo
insb
divb
sti
inc
cmp
add
sti
mov
pop
in
stos
cmp
mov
fidivs
fwait
mov
inc
cs
mov
push
inc
std
inc
subl
push
lock
dec
and
and
push
mov
dec
add
cmp
add
xchg
inc
mov
loop
inc
mov
scas
mov
fiadds
inc
cld
syscall
cltd
add
cs
add
cmp
sbb
adc
sbb
pushf
adc
push
test
and
outsb
arpl
insb
scas
mov
pop
mov
xchg
orl
test
mov
mov
mov
dec
scas
sahf
dec
inc
push
arpl
cli
jp
cltd
inc
jp
lods
jg
sub
add
xlat
inc
cmp
and
loope
pop
cwtl
xor
ds
leave
mov
mov
lods
testb
push
add
jmp
das
mov
jae
adc
fsubrl
mov
sub
push
pop
fwait
mov
sub
cmpsb
clc
test
scas
or
arpl
lods
dec
icebp
ds
addr16
pop
mov
aad
adc
fbld
int3
pop
outsb
inc
sbb
les
mov
insb
cmp
jo
mov
sti
dec
dec
out
mov
dec
jl
sarb
nop
hlt
subl
data16
std
add
cmp
outsl
xor
cmpsb
inc
daa
je
push
je
sti
mov
cmp
insb
leave
into
mov
push
or
jno
data16
das
add
pop
enter
add
push
sbb
sub
cltd
mov
scas
push
icebp
jb
mov
dec
sbbb
lods
mov
xchg
fwait
pop
adc
rclb
xchg
fsubrl
push
sar
sbb
adc
mov
mov
jg
test
inc
aaa
lods
xchg
push
push
dec
dec
sahf
in
or
test
pop
js
push
xor
xchg
push
mov
mov
pop
xor
add
and
aad
dec
imul
sbb
test
sub
je
dec
stc
inc
mov
cmp
pop
ret
xor
mov
or
inc
and
in
pop
out
adc
push
mov
sbb
repz
inc
addr16
outsl
imull
mov
push
mov
and
paddb
push
mov
push
lods
mov
fdiv
shlb
mov
mov
lea
dec
mov
xchg
js
jne
or
cli
mov
push
or
push
or
and
repnz
ficomps
and
or
int
pop
insb
ss
ficompl
dec
pushf
test
cmc
pop
sahf
pop
add
in
out
int
sub
push
xchg
scas
pop
pop
cs
int
and
inc
ror
cs
es
inc
bound
out
in
sbb
dec
jno
mov
dec
cmp
stos
jecxz
and
mov
adc
lods
ljmp
out
out
je
sub
fstl
inc
imul
repz
jecxz
sub
and
mov
lea
xchg
xchg
jne
ss
jmp
int
sub
xchg
pop
mov
mov
inc
movsb
dec
or
lods
dec
jmp
jne
push
mov
sbb
nop
push
sbb
jmp
inc
ja
push
mov
mov
or
rcll
test
adc
add
out
lea
leave
xchg
mov
add
addr16
jl
jle
sbb
nop
jnp
loop
subb
popa
roll
and
popf
int3
xor
mov
mov
and
ja
jno
js
arpl
sbb
sub
add
xchg
adc
cmp
cs
lods
pop
stos
dec
pop
inc
jecxz
popf
test
push
cmp
or
sub
mov
and
mov
shrl
push
cltd
test
out
inc
mov
aam
cmp
subb
push
inc
ljmp
adc
jno
cwtl
sbb
subb
push
into
lods
cmc
or
data16
out
scas
cmpsb
fistps
clc
push
adc
jle
es
push
sbb
jmp
out
xlat
fwait
shll
pop
ret
pop
xlat
cld
xchg
xlat
call
test
aad
xor
orl
jg
or
cmp
pusha
cli
lahf
mov
xor
mull
push
inc
bound
int
push
imul
lds
inc
ljmp
mov
xchg
dec
inc
imul
inc
aas
ficompl
imul
fs
out
adc
pop
data16
mov
push
and
femms
and
adc
ss
push
jb
mov
call
add
loope
leave
rclb
xlat
cmpsl
adc
addr16
cmc
push
push
add
jle
and
lret
das
fiaddl
pop
mov
mov
sub
js
push
cwtl
adc
or
mov
mov
cmpsl
and
call
jbe
mov
int3
adc
iret
gs
sbb
cmp
dec
lock
and
mov
pop
xor
fldl
aam
insb
sub
pop
jae
ret
inc
sub
push
icebp
subl
mov
test
push
imul
push
jae
movsl
push
cmp
sbb
mov
or
rorb
fstpt
popf
inc
ret
sbbb
and
add
and
cmp
in
or
xchg
fwait
out
sarl
int3
in
mov
push
mov
je
cltd
dec
sub
inc
sarb
cmp
mov
ret
dec
addr16
call
lea
leave
les
sub
sbb
pusha
mov
leave
mov
xchg
lods
adc
mov
pop
shlb
aaa
mov
mov
push
in
xlat
mov
xor
adc
cmp
sbb
sbb
add
lock
xor
lret
addl
enter
fstl
mov
push
cmp
mov
pop
lods
hlt
inc
addr16
xchg
fidivs
push
adc
lock
cltd
and
push
inc
pop
xor
scas
js
jne
sbb
cld
cmp
fistpll
inc
push
mov
sbb
movsl
add
jae
sub
enter
xlat
sub
adc
arpl
clc
mov
inc
sbb
enter
push
rcrb
lock
sbb
inc
cmp
sbb
and
lahf
push
dec
jnp
in
jbe
pop
icebp
iret
test
pop
push
shll
push
or
das
pop
sti
jp
and
cmp
lcall
lock
imul
into
ret
or
ja
or
pop
andb
mov
out
or
scas
dec
pushf
lcall
dec
test
sti
sub
mov
rcll
les
sub
inc
jne
mov
sub
add
pop
jmp
in
or
insb
rorl
loop
xchg
fdivr
test
dec
xchg
stc
push
out
inc
mull
js
pop
push
gs
adc
addr16
nop
rcll
push
adc
cmp
mov
jge
jnp
jge
add
out
sarb
jne
inc
arpl
lahf
decb
hlt
sub
std
and
cli
xchg
xchg
push
pop
inc
dec
je
loop
sbb
adc
mov
adc
ss
sub
xorl
add
mov
jl
dec
cs
fldcw
lahf
pop
data16
lds
fcmovb
mull
dec
stc
rcrl
mov
shlb
sti
dec
mov
push
fcompl
mov
or
sbb
and
shrl
dec
data16
push
loope
add
mov
rcr
inc
add
aam
jns
and
mov
pop
xchg
arpl
xchg
mov
pop
dec
jns
out
sahf
gs
or
mov
rolb
adc
adc
popf
in
call
cld
adc
sub
xchg
and
fisubrl
push
jmp
in
sbb
imul
jo
pop
sub
subb
ja
scas
adc
pop
sbb
jg
xor
fistl
repz
lods
xor
fcmovb
push
in
jle
enter
jmp
sub
stos
pop
rcrl
cli
add
jno
inc
or
ret
xchg
aam
in
cli
lahf
adc
sub
repz
movsb
add
movsl
push
loope
mov
lock
call
mov
mov
fld
daa
sbb
adc
jmp
popa
das
adc
lret
pop
jle
pop
xchg
lods
add
fiaddl
mov
enter
xchg
adc
pop
pop
and
dec
pmulhw
or
mov
sbb
popf
push
pop
pop
std
mov
popf
add
push
push
jnp
rorl
addb
adc
pop
xor
mov
adc
or
je
dec
sub
cs
xchg
and
fiaddl
in
popa
js
aas
and
xor
add
out
push
mov
add
push
add
outsl
test
and
pushf
push
push
cmp
jne
das
loope
add
jnp
jp,pn
lret
mov
nop
jecxz
pop
test
loope
test
or
sarb
jmp
lret
mov
aad
mov
cmp
adc
mov
pop
sub
fwait
bnd
imull
cli
pop
imul
xchg
mov
cmpsb
push
mov
mov
sti
dec
insb
fadds
arpl
call
push
mov
aaa
and
mov
leave
jle
inc
mov
fnstenv
mov
fs
scas
push
jo
inc
mov
into
cwtl
add
xchg
fs
dec
out
leave
popa
mov
shll
into
adc
out
into
lcall
ret
push
cmp
pop
frstor
sub
testl
ja
popf
xor
add
arpl
repnz
imul
dec
stc
gs
pop
push
decl
push
mov
clc
push
xchg
mov
lret
insl
mov
ja
jnp
jnp
addr16
mov
das
adc
xchg
sub
push
jnp
dec
and
arpl
or
rdpmc
into
xchg
xchg
stos
mov
jne
mov
dec
cmp
clc
inc
outsl
gs
xchg
orb
pusha
cmpsl
test
or
inc
add
cmp
jbe
mov
mov
outsb
cmp
das
or
lcall
mov
cmp
cmp
fwait
lods
push
jae
mov
mov
adc
xchg
test
cmpsb
push
data16
jnp
mov
sub
jg
fcompl
or
jno
adc
push
sbb
inc
jp
jle
int
movsb
push
mov
mov
mov
imul
stos
mov
inc
clc
add
int
add
adc
dec
push
mov
pop
outsl
pop
xchg
jg
jb
dec
dec
inc
mov
cmp
adc
mov
pop
or
test
jns
jne
and
xor
in
jge
test
aam
jle
add
add
sbb
negb
aad
cmp
and
or
lods
imul
jns
push
stos
and
repz
out
incl
cwtl
and
pop
loopne
iret
ret
std
cmp
sbb
sti
fcomps
xchg
loopne
pop
push
sbb
cwtl
fldenv
cmp
inc
into
and
sub
scas
jnp
pop
test
xchg
aaa
mov
in
ljmp
je
cmp
lret
insb
dec
mov
mov
cmp
jge
mulb
repnz
cld
arpl
push
jecxz
jecxz
stos
or
xchg
cmp
stos
push
fisubl
and
leave
std
dec
inc
push
lods
sarb
repz
pop
pop
ret
jg
fldl
jo
imul
push
jb
mov
fmuls
inc
pop
filds
lea
push
fstpt
mov
dec
mov
xor
inc
lods
out
idivb
and
lret
adc
mov
shll
aas
adc
or
arpl
cltd
or
ret
arpl
das
mov
inc
mov
mov
mov
shl
pop
into
clc
pop
cwtl
clc
pop
bound
fidivl
lods
in
pop
jb
sbb
cwtl
cmp
cmp
shll
scas
sub
mov
mov
mov
inc
or
inc
xor
fsubl
adc
cmp
arpl
idiv
test
sub
aad
lds
fwait
push
fbld
lods
je
dec
cmpsl
xchg
push
push
rcrl
icebp
mov
fs
jecxz
cltd
add
pop
xor
hlt
xchg
jae
stos
lret
aad
insl
movsl
js
bound
cmpsb
loop
push
xchg
push
cmp
ret
mov
adc
add
xchg
push
int
cmp
and
fnstcw
rolb
rorb
push
adc
icebp
mov
fisttpl
negl
gs
xlat
inc
dec
sub
adc
pop
aam
arpl
add
cwtl
push
push
stos
mov
je
mov
pop
aaa
arpl
dec
lea
mov
push
inc
incl
aas
imul
gs
gs
mov
mov
popf
push
sarl
cmc
xchg
and
fwait
xchg
dec
out
and
leave
and
cwtl
enter
xor
jl
loop
shl
xchg
pushf
mov
cmp
xor
mov
dec
push
sbb
test
lret
repz
mov
dec
inc
jbe
sbb
loop
mov
jb
stc
sarl
sti
sarl
push
mov
jge
mov
mov
shrb
adc
and
dec
cmp
mov
out
lret
mov
mov
xor
lcall
popf
loopne
add
mov
leave
idivl
jmp
xchg
or
stos
push
dec
push
xlat
dec
add
inc
mov
fbstp
push
mov
movb
sbb
faddl
mov
test
andb
jo
aas
pop
cmp
inc
cmp
pop
testl
adc
mov
fcompl
mov
add
bound
cs
mov
push
outsl
mov
cwtl
aam
mov
mov
imul
sti
leave
or
sub
lods
xchg
cmp
aam
inc
and
pushf
aad
int
scas
movsl
ficoms
out
in
rcll
rorb
mov
addr16
inc
ss
insb
inc
add
jbe
pop
insb
cmc
repz
into
sbb
xchg
or
cmp
xor
xchg
stc
shll
adcb
frstor
inc
lods
das
xor
sub
pop
mov
lret
sub
inc
and
scas
pop
mov
inc
outsb
mov
inc
iret
cmp
test
sub
jmp
inc
fsubrs
push
mov
lret
push
mov
cli
adcl
sahf
mov
shl
bound
mov
hlt
adc
jmp
adc
pusha
dec
xchg
mov
icebp
push
repnz
push
push
cltd
stos
int
pop
stos
and
hlt
ret
lock
fwait
inc
sbb
lods
xchg
xchg
imul
testb
lret
ja
add
addl
negb
push
mov
dec
lds
mov
dec
push
js
jae
out
ljmp
push
mov
out
icebp
jge
xchg
pushw
pop
and
mov
jmp
inc
orb
jmp
jo
test
pop
jbe
inc
aaa
xchg
out
mov
push
mov
lcall
scas
cli
or
pop
jecxz
xchg
mov
rcrb
fsubrp
dec
push
cmpsb
lahf
add
hlt
out
clc
ss
sbb
adc
push
add
aam
and
add
int3
enter
jecxz
rolb
aad
dec
pop
cli
or
stc
movsl
xor
add
dec
pop
jecxz
mov
jp
fldcw
hlt
jmp
stos
add
xor
adc
lods
inc
jo
pop
aaa
outsl
xchg
repnz
and
movsl
fidivrl
fucompp
jb
jl
jl
adc
and
or
pop
cmp
in
or
pop
sub
xor
sbb
nop
lds
repnz
xor
test
add
popf
push
xchg
int3
lock
mov
aaa
test
pop
sbb
stos
sub
jnp
sub
test
jg
sbb
stc
pmaxub
cld
pop
add
andl
or
sti
scas
dec
mov
leave
or
sbb
adc
mov
fidivs
arpl
push
out
push
push
pop
dec
push
in
sub
mov
mov
clc
ret
sub
daa
jb
mov
ja
nop
sub
outsl
lcall
xor
es
and
mov
pop
and
and
cld
dec
testl
mov
mov
jno
push
fdivp
hlt
lcall
pop
pop
hlt
pop
dec
mul
sbb
dec
es
push
mov
icebp
xlat
addr16
enter
sub
lods
int
ret
dec
call
pusha
or
imul
das
call
leave
and
pusha
addl
addb
rcll
adc
inc
ja
cmp
mov
mov
sbb
ljmp
dec
imul
lret
pop
push
outsl
in
add
aas
mov
outsb
cs
cwtl
add
xchg
in
lahf
add
jbe
push
and
ja
repnz
dec
in
gs
sbb
and
loop
cmp
cwtl
adc
mov
mov
rcl
in
inc
and
mov
adcl
stos
enter
repz
rol
push
movsl
cwtl
mov
adc
scas
sub
mov
lods
scas
imul
fdivl
icebp
pop
cmpsb
push
sbb
sub
push
test
sub
int
gs
jge
adc
jge
test
jmp
rcll
jmp
lcall
inc
leave
sti
imul
lcall
adc
in
jecxz
out
mov
xor
sub
out
shl
push
std
aam
sub
sub
fdivl
mov
fidivs
and
add
test
adc
stos
and
or
or
pop
dec
jno
fistl
jle
hlt
cwtl
mul
cmp
jns
xchg
test
xchg
jl
lock
aaa
scas
scas
inc
mov
scas
inc
mov
stos
aad
jbe
stos
xchg
cwtl
faddl
sub
add
mov
jg
or
test
je
xchg
mov
xchg
xor
loope
movl
dec
adc
stc
shll
xor
sub
lods
pop
xchg
mov
sahf
mov
jmp
mov
lret
adc
xchg
stos
sbb
adc
jmp
cmpsb
pop
xor
adc
xor
push
push
aad
scas
push
andb
stos
xor
inc
in
stos
clc
subb
push
je
cltd
mov
imul
sahf
dec
int
out
push
outsb
fisttpll
in
dec
js
pop
nop
subl
lea
inc
test
ds
xlat
dec
xor
sub
aaa
fistl
out
rolb
adc
cmc
push
jp
test
das
ret
mov
jecxz
addl
mov
mov
pop
fs
and
inc
cs
push
insb
clc
shl
jmp
mov
xchg
or
add
mov
mov
cmp
jmp
popa
into
mov
in
in
push
add
cmp
stc
dec
ret
xchg
and
adc
pop
dec
push
addr16
mov
xchg
shl
sbb
push
jg
push
sahf
addr16
cmp
leave
lods
int3
getsec
or
popa
sbb
gs
sbb
add
lds
out
je
sub
in
pop
imul
dec
xor
fisubs
xor
int
mov
lods
mov
pop
sbb
adc
xor
rol
xor
jns
mov
push
xchg
dec
ret
int
inc
je
and
lds
stc
dec
imul
and
mov
lds
xchg
sub
mov
test
sahf
mov
xchg
jle
bound
stc
sti
cltd
add
pop
inc
adc
cmpsl
in
xchg
mov
push
outsl
jo
adc
stc
cmc
xchg
mov
arpl
loopne
xchg
pop
inc
or
inc
add
out
push
and
sbb
push
add
movsb
enter
pop
adc
dec
or
adc
sysexit
repnz
fdivl
lahf
adc
testl
fiaddl
je
lods
jle
pop
adc
aaa
dec
bound
cmp
xchg
push
shl
xor
fcoms
push
enter
scas
xor
or
cmc
pop
push
in
xorl
xchg
xorb
adc
loopne
stos
or
bnd
movsl
not
lret
movsl
mov
mov
lds
mov
mov
sarl
addr16
ficompl
mov
mov
mov
aam
enter
mov
add
setbe
andl
sub
rcrl
movl
sub
lcall
fs
and
xchg
cmp
or
mov
loopne
lret
xor
and
call
gs
dec
loop
dec
jns
dec
push
xchg
adc
in
out
jbe
inc
sahf
or
sbb
popf
js
or
stc
das
ljmp
mov
push
mov
loope
shr
xchg
lea
ljmpw
pop
cmp
cmp
loopne
lods
pop
int
or
mov
stc
xchg
iret
fistl
mov
data16
shr
cli
in
call
cmc
dec
jae
fnsave
lds
sarb
daa
and
dec
push
into
inc
jecxz
test
xchg
arpl
js
inc
insl
or
xor
jnp
cmpl
ds
cmpsb
sbb
push
jo
inc
dec
mov
or
scas
das
xchg
lods
jno
sbb
iret
jb
jg
addr16
sub
sub
nop
pop
repz
loopne
push
inc
jnp
pop
mov
xchg
cmp
or
push
push
sbb
sub
dec
and
dec
mov
mov
sarb
xor
or
enter
and
ljmp
jae
mov
sarb
div
imul
pushf
testl
inc
add
pop
imul
adc
ja
cld
jns
leave
aad
xchg
cmpsl
fwait
push
sbb
mov
mov
dec
icebp
aaa
adc
pop
out
divl
push
sbb
add
cmpsb
jmp
mov
push
out
fcoml
adc
xchg
mov
xor
sbb
shrl
pop
aam
mov
or
pop
daa
enter
inc
insb
adc
adc
mov
sub
push
dec
adc
shrb
mov
add
lret
sbb
clc
lret
mov
push
ja
mov
or
arpl
les
sahf
dec
sbb
jp
orb
fxch
std
sub
out
push
stos
and
das
push
xor
popa
outsb
and
push
inc
xchg
push
mov
aaa
xchg
cltd
and
push
mov
std
pop
or
jae
mov
pop
es
pop
fiadds
lret
dec
ficoml
inc
inc
pushf
jl
fcmovbe
push
js
hlt
xor
cld
pop
mov
es
popf
and
repz
jmp
movsb
xor
fs
lea
sbb
sub
out
shll
push
ret
push
das
jg
adc
xchg
in
loope
xor
xor
comiss
jmp
mov
loopne
addl
adc
sub
sbb
or
jp
das
and
xchg
xor
cmp
iret
jg
je
aad
lcall
bound
shrl
inc
ror
in
dec
aam
mov
imul
mov
fwait
sbb
imul
frstor
pop
push
sub
inc
add
jle
mov
inc
cwtl
pop
xchg
and
lret
or
rol
mov
mov
divb
leave
add
pop
movsl
mov
clc
mov
pop
add
cmc
push
and
mov
lret
lods
sub
ficomps
jb
pop
mov
cs
cwtl
imul
push
daa
jmp
and
lret
adcb
xor
push
aam
fwait
sub
or
cmp
les
movsl
rcrb
mov
in
inc
notl
lods
je
sub
xor
in
mov
es
mov
cmp
pop
jno
jmp
hlt
cltd
test
add
or
push
or
test
mov
cli
push
icebp
push
sub
cmc
pushf
pop
out
sahf
in
push
ss
adc
pop
mov
push
sub
stos
fwait
adc
dec
jl
mov
jns
pushf
out
test
xchg
in
cwtl
ud0
js
add
jp
jbe
je
sbb
fisttps
pop
div
xchg
ror
and
and
sub
pop
jl
jl
and
sbb
inc
push
es
dec
push
jecxz
inc
or
push
outsb
pop
sub
sub
xor
pop
out
mov
std
xchg
inc
lcall
pop
popf
gs
pop
cmp
jmp
les
jb
sbb
push
icebp
icebp
aam
divl
mov
lret
jo
push
and
xlat
test
int
cmp
lret
push
lods
inc
pop
mov
dec
jne
cmc
dec
or
clc
or
inc
jno
pop
popa
stos
jmp
and
je
sbb
mov
enter
imul
into
popl
pusha
lods
mov
add
sub
iret
xlat
mov
xchg
jo
cmp
and
pop
imul
leave
xchg
rcrb
out
adc
fstpl
mov
lcall
xor
test
xchg
and
push
mov
adc
jle
enter
dec
and
mov
adc
mov
int
mov
xchg
frstor
pusha
adc
dec
repnz
loopne
push
lcall
mov
pop
sarb
imul
or
shlb
test
xchg
fcom
jnp
push
cmp
insb
mov
push
mov
push
cmpsl
shl
popf
add
out
scas
scas
rcrb
std
sbb
inc
dec
jae
adc
imulb
xchg
das
dec
ret
ret
jp
sbb
xchg
or
into
xchg
fistps
or
insb
inc
push
push
fstpt
cmc
jne
lods
push
imul
jb
cwtl
push
cli
xor
daa
repz
pusha
mov
lods
pop
dec
push
jl
pop
sbb
push
in
int
dec
arpl
mov
xor
mov
lahf
push
leave
dec
pop
scas
sub
clc
mov
hlt
cmp
push
rcl
add
mov
cmp
and
testb
mov
sbb
sbb
mov
in
pop
and
pop
push
insl
pop
stos
lods
loope
pushf
add
jo
hlt
adcb
pop
mov
mov
xchg
xor
xchg
adc
repz
test
mov
loope
icebp
push
and
mov
test
xchg
adc
les
xor
sub
cld
push
push
loop
mov
adc
adc
cld
test
sub
loop
leave
pop
arpl
push
scas
lock
lahf
sbb
inc
pop
jbe
or
ret
in
xchg
lock
scas
sub
lcall
lods
or
push
negl
mov
pop
or
xor
or
rcrl
ss
cltd
popf
xchg
sub
popa
es
test
cld
pop
mov
xor
in
call
mov
pusha
xchg
mov
imul
jmp
stos
cmp
or
push
fnstenv
cmp
push
call
dec
sbb
fwait
lock
rol
dec
lods
sbb
dec
mov
jnp
int
pop
push
or
popa
inc
jb
add
js
movsb
pop
fwait
sbbl
xchg
xchg
adc
lock
lock
sbb
pop
in
and
leave
lcall
cli
adc
mov
arpl
iret
in
loopne
rcll
hlt
xor
add
rcrb
or
daa
and
inc
xchg
push
out
jmp
loope
fsubrs
mov
jp
push
mov
in
insl
xchg
imulb
in
and
cld
lods
xlat
aas
pmaddwd
pop
ljmp
add
mov
sub
mov
sub
sub
inc
xor
hlt
repz
js
adc
or
inc
cmp
je
call
mov
mov
mov
enter
inc
icebp
daa
push
pushf
ds
and
mov
mov
push
or
mov
fsubrl
mov
outsl
mov
pusha
adcl
sbb
dec
add
mov
jne
inc
sbb
cmp
cmp
mov
mov
lcall
cld
pop
mov
lock
cmp
or
iret
insb
mov
das
sbb
push
cmp
cmpl
bswap
push
sbb
sti
insb
mov
pop
shl
imul
movsl
nop
clc
fcomps
push
xchg
dec
insb
jno
in
pop
lahf
or
mov
daa
mov
outsl
stos
mov
mov
jns
test
pusha
lcall
push
xchg
pop
mov
filds
add
push
sub
cmp
ljmp
test
gs
sarl
stos
jns
ret
jmp
icebp
gs
out
adc
mov
fistl
sub
or
push
xchg
mov
cmp
xor
gs
dec
mov
mov
fildl
imul
das
jo
test
xlat
shrb
fisttps
mov
gs
jl
and
pop
xor
arpl
push
les
pushf
sub
bound
sbb
jmp
int3
adc
ja
xchg
jg
adc
stc
sahf
hlt
or
es
add
js
bound
or
jg
fwait
mov
test
lcall
loope
pop
mov
sbb
adc
shl
jno
ds
ja
and
xchg
pop
mov
popf
mov
mov
repz
push
cmpsb
pop
lret
sbb
cld
daa
push
test
mov
or
xor
xchg
jns
jmp
inc
mov
in
out
lock
clc
cs
hlt
lcall
or
test
sbb
faddp
xchg
add
dec
lods
xchg
jns
xchg
test
jns
sbb
xchg
test
iret
pop
push
mov
popf
fisubl
lret
in
adc
add
push
out
or
imul
and
jae
jp
dec
into
lds
cmpsl
push
leave
dec
outsb
and
out
imul
jp
inc
sbb
mov
imulb
fwait
jo
nop
mov
ljmp
adc
in
cmp
jge
jmp
jo
add
rorb
dec
insl
cmpsl
inc
jae
push
dec
mov
and
imul
mov
mov
jecxz
in
sub
lock
or
jge
add
cli
in
mov
loopne
sub
lds
cmp
inc
fadds
mov
xchg
in
push
js
jno
push
cmp
ret
fwait
mov
lret
or
lcall
arpl
lods
jg
cmp
inc
fisubl
lods
cmpsb
mov
mov
movsb
jno
call
ss
repz
pop
andb
sbb
sbb
mov
divb
xor
leave
mov
or
and
xor
lods
lea
cmp
pusha
mov
test
adc
movsl
cltd
lods
fs
xchg
mov
ja
jbe
jns
ret
insb
roll
das
and
ja
test
xor
out
iret
inc
push
mov
imul
jae
movsl
add
fsincos
pop
clc
stos
dec
xor
in
and
ljmp
cmp
add
lret
inc
aas
jbe
xor
loopne
lea
and
push
mov
adc
lret
dec
lock
mov
test
xlat
xlat
sbb
mov
out
inc
xchg
testl
push
ds
dec
fnstsw
cs
dec
pop
jns
inc
sbb
je
js
stc
fstpt
out
ljmp
or
pop
dec
jae
cmc
or
mov
cmpsl
mov
and
loopne
add
mov
sbb
cld
jne
jbe
fsub
jecxz
fisttps
push
incb
jecxz
mov
sub
mov
pop
xor
sub
aad
aad
mov
inc
shrb
dec
cmp
lock
leave
sbb
push
adc
out
and
cld
jp
xchg
cltd
es
inc
pop
icebp
jne
dec
pop
out
outsw
cmc
pop
dec
mull
ds
push
jnp
pop
mov
stc
dec
nop
mov
shl
lea
cltd
or
cmpsb
gs
adc
add
jp
jno
fldenv
cmp
lahf
rorl
loopne
add
dec
pop
scas
mov
aad
mov
mov
jb
mov
test
jecxz
sbb
cltd
push
cmp
jns
fcomps
movsb
mov
rorl
jge,pt
gs
mov
jns
mov
sbb
sub
ret
push
repz
mov
jg
aad
mov
out
push
repz
bound
mov
dec
adc
imul
test
and
jmp
mov
xorl
hlt
or
addl
cli
xchg
cwtl
icebp
mov
in
sub
pop
hlt
fstpt
and
jecxz
xor
mov
iret
test
xchg
mov
add
xor
mov
cmc
repnz
mov
lods
jl
cmpsl
xor
mov
xor
xor
rorb
adc
mul
push
cmp
mov
xchg
mov
aas
jnp
fcoml
and
cwtl
cltd
or
fimuls
fwait
enter
cmp
out
cld
cmpsb
call
sti
addl
lahf
pop
xchg
pop
andl
dec
jge
pop
push
test
ja
ret
jmp
push
mov
push
pop
jnp
pushf
mov
push
sbb
cmc
sub
lret
stos
fiaddl
imul
xchg
es
inc
mov
inc
cmp
lods
mov
jle
int3
clc
stos
pusha
shlb
xor
fisubl
mov
lcall
push
div
in
inc
les
testb
lret
mov
adc
cmp
pop
jbe
cli
addr16
call
sbb
addr16
push
cmp
lea
pop
pop
or
mov
jmp
jle
inc
iret
or
andb
lock
xchg
add
pop
lds
sub
data16
idivl
or
cld
es
adc
jo
shlb
repnz
jo
jl
sub
push
imul
dec
cmp
aad
je
mov
sbb
loope
mov
pop
frstor
dec
mov
fsts
cmc
sub
xorb
int3
pop
dec
test
pusha
and
dec
mov
movsb
scas
test
sbb
or
cmp
or
adc
or
fnsave
mov
pop
jmp
sbb
je
shr
clc
mov
cli
sub
sbb
pop
adcl
in
xor
jecxz
inc
push
cld
lret
xchg
xchg
cltd
xchg
mov
xor
in
test
ds
jb
pop
in
lcall
jle
or
dec
xchg
jmp
push
and
xchg
filds
pop
enter
sbbb
sbb
stos
xchg
arpl
cmp
jge
jg
pop
sub
shl
sbb
jl
dec
sub
push
xlat
or
lods
jbe
push
dec
es
xor
in
test
stos
dec
movsb
adc
fcoms
je
jne
mov
ds
push
xor
jmp
repnz
or
subb
rolb
mov
push
addr16
nop
mov
dec
out
cltd
lret
sub
or
in
pop
inc
cmp
jecxz
ss
and
lret
sbb
out
or
dec
icebp
jecxz
nop
out
test
mov
xchg
mov
and
cmp
inc
dec
frstor
popa
pop
out
es
mov
push
dec
aaa
lock
clc
inc
ret
test
jo
leave
sti
aaa
xchg
sub
inc
ds
call
pop
add
test
add
sarb
ja
dec
mov
lahf
pop
incb
mov
faddp
ja
push
inc
xorl
shl
xor
movsl
add
int3
in
mov
jbe
adc
shll
addr16
inc
jp
sahf
ljmp
fists
hlt
and
xchg
loope
in
and
shrd
fmulp
ret
fs
mov
and
mov
hlt
inc
cltd
push
mov
push
data16
pop
dec
fnstsw
inc
jns
aam
pop
icebp
inc
cmpsl
xchg
push
in
fistpl
outsb
mov
in
push
cld
dec
pop
fwait
addl
push
jle
mov
add
jecxz
adc
out
sbb
cmp
sbb
mov
pop
and
cwtl
mov
into
cwtl
or
out
pop
stos
repz
pop
mov
lods
xchg
js
mov
sbb
dec
loope
push
shrb
lea
out
repnz
repz
sub
pop
test
xchg
sbb
or
adc
pop
push
dec
xlat
incl
stos
sahf
sub
cmc
sub
xorb
fildl
jmp
loope
cmp
repnz
xchg
mov
fisubl
popa
or
lods
jnp
lods
pop
aaa
insl
imul
rcl
dec
pushl
mov
and
mov
jle
enter
inc
add
aas
pop
loopne
repnz
inc
int3
xchg
loopne
inc
push
jae
cmpsb
sbb
xor
inc
sbb
inc
leave
add
dec
sub
enter
jns
dec
adc
sub
out
push
xor
pop
pusha
ljmp
pop
add
mov
pop
aas
sub
xchg
roll
and
dec
mov
shrl
ret
xchg
lret
loop
fldcw
jge
ss
inc
add
cmpsb
test
dec
mov
jb
clc
mov
jns
out
and
xchg
mov
sbb
pop
mov
pop
into
sub
mov
in
jmp
dec
aaa
adc
pushf
mov
jp
mov
sti
repnz
adc
inc
test
mov
xchg
push
adc
cmp
xor
int
sahf
clc
inc
mov
outsl
rolb
in
sbb
dec
jb
xchg
repnz
ja
dec
and
test
test
dec
and
orb
jno
push
pop
xlat
cmp
mov
sub
fldcw
cmpsb
push
call
or
ss
xor
or
cmpsb
sbb
in
adc
and
inc
imul
shrb
push
int
aam
push
inc
lock
rcrl
adc
xchg
xor
ljmp
pop
inc
rorb
inc
mov
and
mov
in
cmp
imul
imul
pop
dec
jecxz
xor
cltd
ja
xor
or
lahf
cld
enter
push
ret
cmp
out
cwtl
add
imul
scas
in
xlat
xchg
cmpsb
aam
sbb
out
movsl
outsb
cmpsb
inc
movsl
sbb
pop
scas
aaa
push
and
adcb
test
test
std
imul
jno
pop
and
xor
xchg
icebp
push
jle
or
adc
aad
jp
aam
fisubl
fwait
stos
add
mov
push
pop
cmp
jp
imul
data16
mov
sub
mov
adc
nop
push
ret
pushf
and
sahf
jbe
xor
leave
pop
dec
cmpsb
sub
dec
mov
shlb
jnp
push
ror
push
fwait
xor
add
and
sarl
pop
std
and
xchg
mov
lcall
pop
xor
adc
lods
shl
call
fsubrl
icebp
mov
and
loopne
repz
mov
push
and
jp
hlt
aas
push
xchg
push
add
dec
mov
xchg
rcr
xchg
jno
clc
mov
cwtl
rcrb
push
fisubrs
arpl
pop
inc
repnz
fidivrl
jecxz
imul
jp
jle
xor
sub
in
les
mov
out
or
adc
movsl
testl
insl
js
lds
push
mov
mov
add
jne
aaa
popf
pop
xor
xchg
inc
and
cmp
add
jmp
inc
shl
xchg
out
and
scas
cs
jns
or
in
add
cltd
adc
sub
imul
and
aad
sub
adc
or
repz
xorb
mov
push
leave
mov
mov
and
and
out
je
mov
cmp
cmpsb
pop
clc
cmp
fldt
aad
stos
cmp
cmc
cmp
adc
pop
dec
jle
sbb
js
cmc
jmp
in
add
xor
mov
std
shrb
push
das
sub
scas
inc
mov
dec
xchg
adc
mov
adc
mov
mov
int
add
mov
adc
inc
xchg
pop
cs
popa
push
inc
dec
mov
adc
aam
rcrb
jno
std
and
inc
out
pop
sbb
arpl
data16
cmp
into
pop
cld
std
cmp
mov
mov
xor
mov
sub
sub
sbb
or
addr16
das
cmp
jb
cmpl
pop
inc
adc
sub
inc
les
popa
add
adc
daa
lea
add
fcompl
mov
jno
iret
mov
cli
xchg
sbb
test
and
sub
das
mov
loopne
es
xchg
cmp
stc
mov
adc
mov
leave
or
lcall
aad
inc
add
ret
repnz
shrl
lahf
mov
jmp
push
add
fstps
gs
mov
xorl
or
jnp
adc
xchg
adc
adc
inc
push
insb
push
mov
mov
iret
mov
fimuls
or
mov
into
pop
jl
loopne
pop
je
scas
data16
pop
ficompl
cs
mov
sub
mov
imul
xor
ret
add
jo
mov
and
xchg
icebp
std
sahf
mov
xor
fdivp
push
movsl
test
cld
repnz
cltd
lahf
xor
mov
je
sub
stos
push
xor
scas
push
mov
ret
mov
je
push
negb
gs
aam
ljmp
add
xchg
lods
lcall
pushf
aam
pop
and
scas
ss
out
fadds
inc
fidivrs
jns
fcoml
jp
push
add
fucomip
ss
adc
add
push
push
add
insl
repnz
mov
mov
test
and
jmp
sbb
fucomip
pop
and
inc
je
in
negl
mov
fnstsw
shlb
popa
out
cwtl
fisubl
movsl
sbb
xchg
xchg
push
adc
pop
jmp
or
test
xor
and
jae
out
mov
push
add
mov
push
in
xchg
mov
or
sbb
sbb
cmpsb
bnd
add
dec
add
enter
jbe
gs
push
sti
fistpl
add
outsb
sub
sub
das
pop
in
add
repnz
sub
adc
jb
sbb
xor
in
jle
xor
mov
or
dec
adc
dec
or
insl
outsb
mov
inc
iret
aaa
xchg
int
xor
mov
cmp
mov
int3
test
mov
movsl
pop
stc
push
lahf
pop
nop
jge
gs
and
mov
imul
jb
je
es
sub
mov
mov
pop
push
sub
sub
in
jg
pusha
cmpsb
jns
pop
addl
xchg
mov
xchg
fmull
lods
out
stos
cmpsb
rcrb
add
loop
fstps
adc
pop
cmpb
fidivrs
push
fimull
ja
add
mov
push
mov
test
lahf
dec
cmp
jnp
rcl
mov
dec
dec
out
push
push
lret
xchg
aaa
mov
add
jl
mov
test
jno
mov
fmuls
mov
aam
mov
mov
cmovns
pop
xchg
adc
sbb
mov
push
sbb
xor
cmp
xchg
jno
lcall
xlat
loop
loopne
jmp
mov
in
push
add
or
push
lahf
mov
inc
nop
fistpl
push
lods
jle
cmp
push
mov
push
mov
sbb
dec
inc
or
xor
sbb
in
sbb
inc
movsl
fcmovb
aas
and
push
ficoml
daa
mov
hlt
mov
mov
jne
mov
add
jno
mov
sbb
add
les
mov
outsl
mov
xchg
fistpll
pushf
add
clc
mov
push
pop
mov
mov
jne
insb
xor
xchg
fidivs
ja
ret
mov
add
push
adc
dec
ret
and
jns
lcall
into
inc
into
les
inc
jno
pop
arpl
inc
cmp
aas
shlb
into
pop
inc
popa
dec
fs
or
lcall
mov
mov
stc
mov
rcl
push
jo
fs
test
imul
jle
sahf
aas
insb
xor
negb
call
js
pop
aaa
jno
js
mov
arpl
repnz
movhps
pusha
daa
ljmp
mov
insl
mov
iret
repnz
pop
jge
or
dec
ret
addr16
imul
mov
inc
xchg
sub
addr16
xlat
mov
and
add
push
sbb
pushw
and
jno
icebp
frstor
add
imul
mov
xchg
jge
gs
sarl
lahf
xchg
xchg
push
loop
jns
mov
insl
dec
mov
cmpl
xor
addl
push
inc
lcall
and
out
mov
in
sub
frstor
adc
inc
or
inc
sahf
push
xor
jns
sub
adc
aas
gs
shlb
xchg
les
pop
movswl
lods
dec
adc
sub
daa
add
xorl
sti
outsb
test
sub
es
sti
push
pop
pop
mov
enter
aam
pop
mov
pop
in
sub
scas
or
pop
xchg
ss
lods
movsb
cmc
scas
inc
lods
sub
cmp
xchg
pop
dec
scas
pop
pop
adc
cwtl
inc
fidivrl
mov
fmull
inc
or
dec
jmp
loope
cmp
and
xor
idivl
pop
lret
pop
pop
dec
icebp
mov
mov
pop
gs
jge
aas
jae
jae
pop
jmp
add
pop
dec
mov
sub
inc
mov
sbb
mov
lods
loopne
sub
loope
aam
call
sti
or
stos
cmp
push
inc
fcomps
scas
test
fsubr
lds
sbb
pop
and
jne
into
jns
adc
or
int
decl
stos
cmp
int3
xor
in
test
fcoms
in
sbb
inc
insb
and
pop
mov
test
jl
jns
jg
mov
xor
lcall
push
fwait
jnp
nop
push
cld
inc
cmp
fildl
mov
add
inc
fistps
jnp
adc
pop
push
stc
ret
lcall
mov
cmp
outsl
mov
pop
xor
and
mov
stc
int
mov
cmp
sbb
aad
lret
dec
repnz
add
sub
shll
xchg
adc
sbb
pop
dec
xor
lock
lcall
adc
fnstcw
or
mov
sahf
jge
enter
data16
push
xor
pop
pop
ja
push
imul
dec
test
xor
in
jbe
mov
rcl
loop
and
loop
mov
rcl
mov
test
test
ror
in
jb
jle
cmp
inc
sbb
or
mov
dec
adc
imul
pop
and
aad
xchg
jne
ja
insb
lock
pop
std
dec
test
jns
mov
add
imul
call
jle
ljmp
push
and
fmull
out
cltd
adc
sbb
add
push
xor
inc
sub
leave
fs
aaa
push
add
mov
add
in
addl
sbb
es
imul
dec
fldenv
lods
sbb
repnz
xor
xor
sti
call
mov
out
sahf
bound
dec
push
sbb
out
pop
das
push
adc
push
xor
xor
sbb
cli
jae
push
ret
xor
push
js
push
xor
lcall
xchg
sub
inc
cs
sub
xor
xor
scas
xor
xchg
dec
sti
mov
jl
inc
in
in
notl
add
sub
insl
addr16
clc
jb
mov
push
out
mov
fdivs
pop
or
loop
adc
call
lahf
mov
add
imul
sub
add
out
mov
jge
dec
push
mov
dec
dec
rcrb
clc
sub
or
imul
sub
jecxz
sbb
lahf
add
loop
lret
jae
xor
sub
das
sbb
out
adc
mov
push
loop
out
sbb
testl
adc
iret
daa
imul
dec
xchg
jns
add
mov
cmpsl
leave
stos
test
ds
xchg
mov
fucomip
pushf
mov
xchg
mov
std
out
out
repnz
and
enter
cs
cmpb
loop
add
sbb
sbbb
data16
pop
inc
dec
pop
dec
mov
js
ret
adc
or
rcrb
push
scas
repz
lahf
xchg
out
push
mov
sbb
das
js
mov
testl
outsl
or
dec
and
add
xlat
call
pop
jl
loop
add
in
sti
ds
out
mov
jbe
adc
mov
adc
mov
inc
mov
add
sbb
inc
or
push
lods
or
std
repnz
lret
xchg
hlt
lcall
iret
mov
mov
iret
push
add
js
jl
sbbl
mov
add
test
int3
loopne
ror
out
jae
xchg
out
lret
stos
aad
jnp,pn
pop
sbb
test
xcrypt-cfb
cmpsl
mov
pop
ret
mov
leave
jl
out
outsb
testl
lret
or
pushf
or
adc
es
cmpsb
loope
into
and
add
rorb
jns
xor
cmp
es
stos
sub
mov
enter
mov
jno
sub
andps
sub
shrb
inc
popf
adc
mov
mov
movsb
imul
sub
xchg
insb
addb
jge
in
adc
push
ret
arpl
test
jmp
iret
mov
or
jnp
mov
lahf
shlb
js
dec
jmp
pop
mov
inc
or
xlat
sbb
or
or
mov
mov
dec
and
xor
push
jmp
ss
fsub
loope
mov
cmp
das
xchg
sbb
ljmp
mov
and
pop
sbb
xor
movsb
test
jo
jecxz
sub
cs
loopne
adc
cmpsb
jecxz
pop
repnz
dec
push
adc
rcrb
pop
fnstsw
add
pop
add
xor
fsubl
sub
mov
pushf
lahf
sub
out
mov
test
icebp
in
inc
jmp
outsb
xor
loop
inc
cs
test
sub
add
adc
or
mov
movl
in
xchg
jne
aam
pushf
ss
cmpsl
sub
dec
sub
inc
and
jae
sbb
mov
lret
add
sbb
movsb
push
push
cmp
push
jl
stos
and
xchg
sbb
pop
or
fmuls
add
test
push
leave
jmp
mov
add
sbb
mov
repnz
pop
mov
add
push
cmc
push
mov
pop
adc
and
cld
in
rolb
push
scas
movsl
mov
adc
dec
adc
pop
jno
hlt
cmpsl
xchg
in
pop
jb
testb
outsl
adc
call
repz
mov
jne
inc
xor
sub
ja
sbb
imulb
xor
rcrl
stos
cmpsb
mov
xchg
sbb
les
dec
rorb
inc
cli
and
push
cmp
pop
call
or
iret
ja
in
add
or
push
dec
mov
popl
jo
ljmp
jae
xchg
dec
clc
pop
push
xchg
add
xor
mov
add
pusha
xchg
fisttpll
lods
dec
lods
fcomip
stos
out
ret
lods
insl
jns
xor
outsl
rcrl
mov
mov
and
inc
stos
xchg
jbe
repnz
mov
jb
sahf
bound
in
mov
cmp
cmp
add
cs
fsubrs
test
aaa
sub
mov
lea
in
sbb
add
loop
jl
inc
mov
inc
push
fildl
cs
jae
pop
push
ret
pusha
ljmp
jecxz
dec
jbe
sub
ret
jg
sub
popf
inc
enter
icebp
lea
dec
fisttps
cmc
jmp
xchg
sub
pusha
std
test
adc
jbe
push
mov
in
adc
xchg
jmp
dec
hlt
stc
fimull
loopne
fbstp
test
repnz
push
xor
out
sub
push
mov
pushl
ljmp
jge
inc
lods
and
sub
pop
push
adc
inc
lcall
adc
inc
cmp
mov
sbb
cwtl
cmp
sbbb
or
repz
dec
dec
fisubrl
mov
lret
fstps
out
jg
aad
or
xchg
sahf
repz
std
out
shrl
test
jno
push
std
jo
or
sub
mov
int
lods
in
xlat
xor
aas
mov
in
xchg
cmp
rorl
or
es
xchg
adc
call
test
popa
inc
cmp
inc
negb
xchg
or
mulb
add
or
fsts
into
enter
in
mov
mov
inc
imul
pop
jle
repnz
cmpsb
mov
jle
cmp
mov
mov
hlt
ffree
dec
mov
test
add
add
dec
lea
cmpl
push
daa
iret
movsb
sub
lds
jmp
dec
addr16
add
fimuls
test
and
pop
into
js
jecxz
dec
sub
adc
leave
les
and
insl
outsl
fldl
mov
fcmovnbe
mov
aam
pushl
icebp
sarl
jecxz
inc
test
adcl
xchg
insb
push
mov
mov
cmp
xchg
push
mov
jne
push
lock
adc
leave
mov
enter
pop
jo
enter
pushf
lock
enter
das
daa
xchg
push
pslld
push
cmpl
mov
xchg
inc
enter
sub
adc
lcall
ja
mov
push
inc
pop
mov
or
jg
xor
xlat
shl
inc
int3
dec
lods
adc
into
popa
inc
inc
arpl
mov
cmpsb
popa
add
nop
add
cltd
mov
inc
inc
fsubl
jo
lds
mov
mov
jp
pop
outsb
sbb
into
or
jp
add
jnp
pusha
repnz
shrb
in
jbe
mov
or
add
push
lods
scas
ds
push
jg
setl
daa
shl
xor
mov
jle
jl
and
mov
dec
inc
scas
mov
andl
add
cmpsb
jo
stos
mov
dec
adc
mov
mov
loope
push
roll
push
fsubs
xor
enter
out
fimuls
jle
add
popf
add
repz
stos
incb
mov
xchg
clc
ss
pop
js
jmp
dec
in
daa
sbbl
inc
or
pop
pop
ffree
lret
pop
pop
in
lcall
sbb
xchg
or
mov
sub
in
imul
or
mov
stos
mov
test
or
dec
lods
push
lcall
insl
call
push
mov
xchg
lret
inc
add
call
sbb
lahf
push
aas
or
pop
sahf
push
and
jne
aam
fisubrl
push
loopne
jg
ds
scas
and
jae
adc
loope
test
testl
sbbb
rcr
xor
sahf
out
pop
ret
pop
gs
pop
pushf
inc
rorb
inc
sahf
push
cmp
adc
xor
rorl
jp
dec
or
cwtl
lahf
pop
std
pushf
pop
inc
dec
mov
push
rolb
std
fs
mov
xor
xchg
ret
jp
ss
ss
lods
adc
mov
cmp
popa
sbb
or
pop
in
fistl
push
lods
xorl
ret
loop
fimull
or
push
mov
into
cmp
shl
mov
adc
loope
dec
fimuls
pusha
push
cmc
xchg
cmp
pop
fldt
repz
jb
lods
push
testl
das
mov
fdivrl
or
sbb
cmc
sub
iret
add
mov
and
and
mov
sbb
mov
fcoml
subb
mov
fidivrs
xchg
adc
push
idiv
dec
and
inc
mov
leave
jecxz
pop
pushf
jno
mov
mov
jb
adc
fstps
or
orl
xchg
jnp
fldl
dec
xor
pop
cmp
shr
xchg
data16
jns
push
pop
jmp
nop
jo
mov
in
dec
dec
xor
scas
push
push
and
femms
cwtl
inc
jg
movsb
cs
cmp
push
mov
sbbb
adc
stos
scas
sub
xchg
lods
das
test
imul
sahf
inc
jo
out
sub
add
jbe
mov
test
mov
add
jle
shlb
enter
scas
es
leave
out
lea
pop
pop
ret
mov
lods
movsb
ss
pop
adc
sub
mov
movsb
aad
out
mov
push
loop
les
in
imul
adc
jle
push
and
mov
mov
ror
test
cltd
lds
sbb
adcl
inc
push
sbb
repz
into
leave
add
repz
test
jecxz
movsb
mov
ss
add
cs
mov
cmp
jns
sbb
stos
pop
outsl
lahf
mov
mov
dec
mov
popf
fdivrs
jle
sub
xchg
ss
xchg
mov
jp
lods
xor
add
in
cmpsl
test
enter
jne
adc
xchg
cs
sub
lret
mov
pop
mov
xchg
jl
and
xor
iret
push
add
adc
push
add
cmpsl
mov
das
xchg
inc
cld
sbb
push
icebp
rolb
mov
shrl
sub
bound
push
xchg
xor
jae
int3
xor
mov
aas
addl
in
mov
lds
je
lret
and
pusha
xchg
ss
inc
aas
bound
outsb
dec
call
mov
xchg
sub
sub
mov
add
fwait
in
imull
mov
inc
cmc
mov
sbb
rorl
lods
jb
add
xor
or
sub
stos
scas
mov
cmp
ret
xor
sarb
pop
lds
sub
xchg
add
test
push
dec
push
je
test
out
dec
out
pop
mov
sbb
sti
add
mov
inc
lcall
hlt
int
pop
js
jp
xchg
push
pop
mul
push
mov
dec
dec
popa
leave
mov
in
lret
mov
sub
jbe
std
js
nop
sbb
cmp
mov
mov
pop
push
ds
xchg
xor
jns
test
push
int
hlt
mov
leave
inc
test
add
dec
sbb
or
mov
sub
ss
cmpsl
fadds
jnp
ror
adc
nop
sub
xchg
add
outsl
int3
push
and
fistps
inc
pop
xor
jle
and
xchg
push
push
test
in
mov
push
enter
vpcomd
popa
add
sbb
mov
aam
jmp
sub
fdivrl
lea
in
stos
fldcw
out
mull
push
neg
or
nop
cmpb
mulb
enter
xchg
mov
hlt
jmp
jo
xor
add
outsb
rdmsr
mov
mov
sub
jae
inc
jle
push
xor
sub
loop
fwait
cs
stc
aad
jae
xchg
xor
loopne
lret
orb
test
es
pop
mov
add
sub
cmp
in
nop
nop
ret
push
shl
xchg
jnp
add
shrl
cmp
pop
jl
dec
adc
mov
push
mov
lret
inc
je
insb
aad
sub
lods
hlt
fs
jns
pop
popa
fmul
pop
pop
xchg
inc
aad
jle
jmp
repnz
xor
iret
xor
mov
pop
das
and
orb
add
jge
mov
cld
xor
icebp
std
pop
mov
sbb
jp
xor
mov
repnz
aam
or
cmpsl
push
xchg
sbb
data16
mov
xor
inc
fsts
stos
cli
or
cmp
mov
pop
lret
repz
sub
ret
mov
jbe
jne
jbe
dec
mov
mov
sub
les
mov
mov
repz
into
mov
stos
cld
or
dec
int3
jle
xchg
int3
cmp
mov
jno
dec
jbe
jns
iret
clc
xor
idiv
sarb
mov
mov
cmpsl
dec
divb
daa
out
gs
scas
jbe
leave
std
add
inc
cmp
add
fildl
ficoms
sbb
cmp
cmp
jo
xor
pop
loop
clc
add
mov
sbb
dec
int
sub
inc
xchg
push
mov
sbb
sarl
sbb
scas
xchg
test
push
hlt
call
jo
movsb
mov
add
movsl
neg
add
push
xor
fdiv
jle
mov
push
das
enter
sbb
pop
push
stc
mov
in
xchg
mov
or
movsl
in
pop
es
mov
popf
sahf
cld
mov
ret
cmp
and
pop
inc
add
lea
xchg
cmpsb
repnz
or
inc
xlat
and
xorl
popa
push
sub
sub
mov
js
ret
push
addr16
jbe
jns
push
inc
lahf
cmp
fildll
or
add
adc
js
or
push
loopne
sahf
ficoml
outsb
out
dec
out
jbe
mov
loope
xor
outsb
repnz
aaa
jle
add
cmpl
xchg
int
inc
mov
pop
test
lahf
jl
loope
sbb
mov
push
cs
call
mov
ficoml
loope
incb
pop
test
mov
movsb
push
mov
cmp
lds
pop
shll
insb
fcmovbe
push
fwait
add
ret
cmp
les
insb
loopne
ja
jecxz
imul
stc
gs
mov
cli
mov
test
mov
cs
int
ret
pushf
pop
pop
push
fisttpl
mov
and
jno
adc
dec
inc
xorb
aad
adc
sub
pop
loop
xchg
xchg
int3
cmpsl
xchg
jle
outsb
cmp
mov
pop
xor
outsl
into
sub
mov
mov
inc
cmpsl
cld
push
fwait
adc
adc
lahf
xor
jns
cmc
loope
jne
xor
xchg
xor
movsb
xor
mov
cmc
arpl
dec
cld
or
aad
cmc
xor
je
pusha
out
or
lret
jmp
or
outsl
inc
mov
xchg
and
xor
mov
insl
jns
ljmp
mov
lahf
mov
jo
imul
or
ret
out
sbb
pop
mov
js
cs
push
out
adc
inc
sbb
pop
mov
push
loop
orb
jae
sbb
sbb
jne
mov
push
lret
mov
mov
std
lock
fildl
jle
inc
imul
adc
sarb
iret
dec
adc
fldl
sar
mov
sti
aam
sub
lds
xchg
push
add
inc
loope
stc
inc
loope
imul
outsb
lcall
inc
cmc
stos
mov
and
ret
out
xchg
jp
adc
jbe
mov
pop
dec
cmpsl
loop
sub
aad
neg
mov
sbb
pop
lcall
hlt
jp
shll
sub
mov
andl
inc
add
lea
mov
fsubs
or
test
test
sub
jno
xchg
adc
pop
or
push
das
push
mov
aaa
fimull
pop
push
stos
in
fists
lock
cmp
add
orl
xchg
adc
rcl
add
bound
fsubrs
repz
stos
imul
icebp
pushf
xchg
cmp
add
or
push
sub
mov
shlb
sub
push
adc
jmp
fstpl
xchg
inc
out
cmp
scas
mov
mov
lock
and
inc
adc
xchg
jns
cwtl
mov
je
rcrl
jo
out
mov
xchg
add
mov
lods
sbb
xchg
movsb
icebp
pop
sub
je
loopne
outsb
or
popa
fs
movsb
pop
push
sti
inc
lret
cmc
mov
std
gs
inc
inc
and
test
ds
lock
das
std
jmp
add
data16
xor
xchg
xlat
pushf
mov
test
mov
scas
or
pushf
jae
mov
rcl
jmp
rolb
mull
adc
mov
mov
sbb
and
movsl
loop
hlt
xor
adc
pop
stos
dec
jb
iret
out
das
jno
or
stos
push
dec
push
daa
stc
dec
mov
sbbb
add
loop
fst
inc
lcall
push
pop
mov
and
in
addr16
iret
adc
mov
jae
mov
jb
and
in
shlb
stos
pop
xchg
ja
sub
push
nop
sub
dec
inc
fwait
sbb
push
cmp
insl
inc
xorl
out
jecxz
jmp
sub
dec
push
mov
mov
int
and
cld
lds
mov
xor
mov
movsl
push
in
pusha
nop
xchg
stos
les
stos
dec
pop
dec
jecxz
data16
sbb
sbb
addr16
and
inc
pushf
inc
jmp
adc
sub
daa
insb
push
loopne
sti
movsb
adc
add
dec
or
lret
adc
add
xchg
push
out
jb
mov
xchg
movsl
leave
dec
cwtl
cmp
mov
call
jge
ljmp
enter
dec
mov
shlb
add
sbb
push
repnz
loope
mov
movsb
mov
repz
mov
test
pusha
outsl
cli
int3
sbb
sub
jle
add
or
push
fidivrl
dec
int
push
in
das
cmpsb
cmp
xor
add
cmp
dec
ja
fstpt
into
cmpsb
sahf
test
jle
inc
cltd
lods
inc
cmp
adc
mov
jl
lea
test
sbb
pop
mov
cwtl
mov
cmp
stc
clc
or
mov
xcrypt-ctr
cmpsl
fmul
daa
inc
mov
sti
stos
mov
sub
push
int3
lret
dec
sub
fisttpl
mov
shl
pop
icebp
xchg
sub
xchg
aas
mov
jge
adc
mov
pusha
dec
pusha
aaa
inc
xchg
mov
out
ljmp
jp
push
sbb
inc
and
repz
add
pop
adc
inc
scas
add
push
imul
sub
iret
push
xor
sbb
dec
stos
lock
lahf
inc
mov
idiv
sarb
xchg
stos
fmulp
idivb
pop
repnz
mov
addl
push
cs
pushl
inc
mov
jb
jo
int3
shll
jmp
lods
cmpsb
test
or
fwait
fs
fwait
mov
fyl2xp1
fwait
xor
jl
daa
push
fistl
enter
sub
mov
pop
daa
lcall
and
lret
imul
mov
xchg
lahf
cwtl
jmp
xchg
xor
scas
stos
or
ficoml
dec
cltd
clc
or
push
xchg
mov
cmc
clc
movl
or
sub
inc
inc
mov
add
dec
mov
sbb
pop
sub
int
repnz
imulb
sub
pop
loop
pop
cmp
ljmp
popf
jp
mov
lods
out
in
push
insb
sbb
in
out
cld
bnd
andl
xor
popa
ds
cmp
sarb
je
jge
insb
out
jns
mov
or
mov
cmc
xchg
scas
stc
and
scas
sbb
push
mov
push
bound
test
and
loopne
fst
xorb
dec
or
adc
jo
xchg
aam
push
xor
jg
and
in
mov
rol
lret
lcall
arpl
cmp
iret
imul
cs
adc
mov
adc
lea
mov
jno
cltd
sub
sub
push
sti
loope
stc
mov
jp
test
ret
add
add
sub
or
cltd
mov
mov
mov
ss
loope
ret
dec
sub
aas
jp
jmp
mov
scas
mov
xor
sub
sbb
pop
inc
cmpsl
fidivrl
sbb
fmuls
mov
sub
stos
xchg
js
movb
sbb
jp
loope
xchg
and
fmul
fmuls
mov
add
add
les
fstpl
int
lret
sub
rcll
out
fwait
test
cmp
adc
loopne
lods
xor
push
test
iret
dec
sbb
sbb
pop
cli
and
lea
in
or
sbb
jb
or
pop
pop
loope
loope
pop
out
mov
and
sub
adc
cltd
loopne
cltd
pop
pop
and
mov
lds
sub
stos
cmp
xchg
or
xchg
cmp
add
lret
pop
jecxz
and
push
pop
test
ror
jno
mov
into
add
cmp
pop
jno
lock
cmp
pop
rclb
sahf
rcll
mov
push
loopne
mov
jmp
adc
int
jbe
add
jns
xchg
mov
xor
es
jge
cmpsl
or
jle
jp
sub
data16
sbb
orb
ja
test
imul
jo
shll
or
inc
cltd
xchg
mov
inc
dec
push
jns
rcr
leave
mov
mov
loope
cmp
mov
movsl
xchg
adcb
sahf
add
push
pop
test
outsl
jns
testl
jle
sbbb
push
rorb
cld
insl
and
pop
sub
adc
stos
movsl
dec
call
addr16
fimuls
xchg
inc
jbe
mov
es
shrb
jp
hlt
mov
sub
dec
int3
movsb
and
pop
cmp
sub
gs
push
or
rcrl
pop
pop
xchg
xor
adc
dec
arpl
cmpsl
adcb
adc
cld
or
popa
pop
shlb
test
aad
mov
add
mov
jb
in
xchg
jl
fmuls
sbb
lahf
out
cmp
imul
mov
test
xchg
aad
lods
cli
xor
mov
stos
insb
shl
push
and
mov
je
arpl
cs
stc
mov
stos
xor
jmp
sub
xchg
arpl
outsb
xchg
repz
shrb
std
lahf
js
or
or
dec
sbb
dec
push
rcrb
push
jae
cmp
cmp
adc
repz
lock
jo
in
or
nop
jnp
and
outsb
int
sahf
cmpl
addr16
mov
add
mov
iret
inc
mov
in
lahf
dec
push
addr16
addl
cmpsl
popa
dec
lret
mov
mov
loopne
ret
dec
inc
les
insl
push
decb
sbb
mov
push
std
arpl
les
pusha
shl
aas
xor
out
test
mov
popa
dec
sarb
mov
test
repnz
adc
inc
ret
jg
add
pushl
lahf
sub
cmpsl
pop
lcall
xchg
imul
out
sub
xchg
adc
and
sahf
ljmp
jecxz
inc
mov
call
test
and
sbb
jno
lods
add
stos
and
outsl
jne
call
fiaddl
pop
xor
xchg
pusha
lahf
adc
stc
push
push
xchg
addr16
imul
loopne
push
fcomps
jbe
ljmp
adc
iret
data16
nop
in
fcom
hlt
stos
rol
sbb
pop
mov
cmp
push
pop
jb
push
sbb
jne
vpmadcsswd
inc
inc
dec
sbb
dec
or
jg
cltd
sbb
adc
mov
mov
out
ljmp
in
ret
in
dec
icebp
cmp
hlt
adc
lds
nop
pusha
push
pop
push
mov
insb
fs
xchg
mov
iret
sbb
fildll
dec
cli
push
pop
pop
dec
cli
loopne
sbb
xchg
adcl
out
mov
movsl
fs
mov
or
mov
push
or
iret
movsl
push
fnstenv
aaa
sahf
cmp
pop
pop
in
repnz
xor
ljmp
pop
lahf
ja
push
xchg
ret
aad
mov
xchg
inc
clc
push
adc
xchg
cwtl
jle
addr16
or
loop
imul
or
mov
xchg
xor
les
xchg
cmp
add
das
in
jns
mov
xchg
lds
fwait
mov
jmp
cld
adc
or
push
dec
sub
and
iret
cmp
mov
stos
pop
incl
cli
fsubrl
mov
mov
imul
inc
in
dec
dec
out
pop
jb
das
mov
push
and
mov
jbe
fldlg2
mov
loope
test
rolb
dec
addr16
fcmovb
arpl
adc
adc
mov
push
orb
sub
pop
sub
sahf
into
mov
stos
push
xchg
mov
push
cmp
mov
dec
push
add
xchg
mov
mov
push
inc
out
in
cwtl
sbb
dec
data16
sbb
mov
and
sahf
lods
add
scas
ficoml
pop
jp
ja
cmp
mov
xor
in
mov
mov
jl
inc
pop
aad
jle
shl
push
in
mov
fidivrl
cmp
xchg
or
shlb
mov
pop
call
shrb
call
pop
aaa
loop
push
sbb
pop
sbb
push
xlat
mov
enter
sbb
pop
es
scas
mov
jb
repz
dec
test
xchg
popa
stc
jo
jp
push
lock
pop
cld
dec
int
test
das
mov
fisubl
cmp
mov
test
repz
xchg
add
and
ret
dec
loopne
cmp
aaa
push
mov
lret
sbb
jecxz
adc
push
xor
loopne
fcomps
fldl
xor
cltd
push
or
push
sbb
pop
or
inc
jge
lcall
mov
movl
xchg
lea
or
add
ror
ljmp
jp
adc
mov
xlat
xchg
test
mov
inc
dec
and
inc
add
add
dec
cld
jb
jge
jg
adc
mov
push
test
xor
push
sbb
rcrl
jecxz
mov
xchg
xchg
int3
mov
adc
xor
jnp
jecxz
wbinvd
add
mov
insb
aaa
mulb
leave
xchg
xor
cs
lahf
icebp
addb
into
sbb
and
cs
mov
pop
jmp
jnp
popa
pop
int3
pop
mov
adc
mov
xchg
out
prefetch
hlt
mov
or
jp
dec
jbe
outsl
ds
ror
jg
movsl
and
mov
in
aaa
cmp
insl
test
or
lods
mov
adc
push
lock
xchg
lds
rcrl
rcl
pop
aaa
mov
fdivrs
inc
icebp
push
sbb
sbb
sub
and
jl
mov
fildll
or
jle
adc
dec
subb
rol
into
push
jecxz
sbb
cli
or
push
mov
sub
xchg
pop
fdiv
mov
fwait
xchg
je
imul
fs
imul
sbb
inc
lods
cmc
push
into
push
jp
sbb
jb
jecxz
iret
aas
sahf
xor
sbb
mov
popa
and
mov
pushf
out
pand
mov
inc
cwtl
cmpsl
je
inc
pop
in
test
cmpl
addl
xor
scas
or
adc
lods
or
pop
pushf
in
push
fimull
fldenv
inc
xchg
and
cld
jo
push
ds
test
push
aam
pop
push
aaa
jae
lock
int
sub
ds
xchg
in
cmpsl
adc
test
inc
inc
xchg
xchg
mov
fildl
cli
clc
ret
mov
movsb
cmp
xor
in
add
andl
pop
in
fcomi
cmpsb
sbb
scas
les
stos
push
adc
movsb
sub
mov
not
sub
leave
sbb
out
loopne
idivb
mov
or
jl
xor
xchg
test
cltd
movb
bound
loop
fcmovnu
fnstsw
jg
cmp
xchg
lret
enter
jg
xor
xor
sub
add
ret
jnp
dec
lcall
jbe
dec
out
mov
mov
nop
push
aaa
xor
pop
outsb
cmp
lods
je
lcall
scas
fs
inc
push
adc
out
in
jle
int
rcrb
jno
aad
jno
in
inc
popf
and
hlt
push
test
xchg
mov
lock
popf
or
and
mov
push
push
in
mov
jg
cltd
mov
lahf
add
xor
js
sub
in
cmpsl
sub
ss
sbb
imul
cmc
in
inc
dec
push
pop
cmp
xchg
jae
or
cltd
and
xor
and
call
fdivp
stos
sbb
sbb
scas
dec
outsl
shl
arpl
pop
dec
push
leave
lahf
les
cmp
sahf
xchg
aaa
jmp
pop
mov
icebp
imul
jae
inc
clc
lods
es
adc
pop
mov
adc
inc
icebp
jp
cmpsl
mov
xor
mov
adc
leave
test
mov
or
xchg
aaa
lahf
dec
cmp
sarl
sub
or
cld
nop
sub
out
je
das
xchg
lods
mov
pop
lock
ss
fs
test
jg
add
mov
scas
push
push
cmc
or
scas
sbb
mov
loop
jp
data16
vpavgb
fstp
sub
mov
dec
jge
popa
sbb
aas
and
jl
loope
les
xchg
loope
push
jge
bnd
das
sbb
or
adcl
in
pop
testl
and
cs
sbb
cltd
sti
mov
push
push
sub
mov
sbb
inc
dec
inc
popa
push
and
adc
mov
mov
add
pop
mov
ds
inc
lods
mov
xchg
dec
orb
stc
nop
adc
push
inc
and
or
mov
aad
aaa
inc
jecxz
xor
dec
jb
addr16
pop
aam
inc
lds
jo
insl
inc
pop
mov
add
les
out
xchg
int3
mov
adc
xchg
out
lods
in
sub
xchg
cltd
push
out
jl
xchg
dec
mov
pop
insb
sbb
cmovno
stc
fs
inc
bound
push
inc
mov
decb
mov
popa
add
test
loope
or
mov
pop
mov
mov
mov
mov
sbb
js
pop
cmp
xchg
mov
neg
subb
insb
and
jmp
and
popa
ret
test
pop
mov
fldl
mov
enter
bound
js
into
jae
out
cmp
xlat
jo
fidivrs
mov
in
mov
cwtl
mov
cmp
mov
in
dec
dec
cmp
rcrl
andb
jecxz
das
lret
adc
sbbl
pop
in
clc
cmp
enter
pop
adc
pop
jnp
pop
mov
pop
nop
sbb
mov
orb
cmp
icebp
int3
in
push
orb
sarl
sbb
or
push
lock
jbe
pop
jne
mov
into
icebp
pushf
mov
adc
lea
ss
test
sti
rol
sbb
ljmp
jo
mov
sbb
jae
sbb
sub
dec
stc
cmp
idivb
sub
xchg
addl
test
test
lret
mov
adc
movsl
mov
ffree
add
xchg
jo
push
aam
xor
push
xchg
int3
or
inc
dec
cmp
adc
test
or
cwtl
gs
jmp
pop
push
mov
scas
dec
test
outsb
xor
sbb
sbb
inc
cmp
int3
push
sbb
popf
add
push
push
leave
mov
iret
xor
or
sub
pop
clc
aam
mov
inc
aaa
inc
adc
pop
and
daa
cmp
xchg
hlt
cs
push
cmp
dec
imul
flds
or
out
mov
jl
push
lahf
call
shrl
out
cmpsl
ja
call
in
mov
fidivrl
addr16
add
out
add
les
movsb
popf
mov
add
test
dec
pop
cmc
pop
in
dec
movsb
mov
mov
jbe
aam
or
inc
pop
mov
pop
mov
inc
xor
mov
mov
mov
sahf
cld
or
scas
or
lods
mov
xchg
push
jbe
mov
mov
mov
pop
mov
sub
aad
and
pop
push
xchg
or
ds
sub
pop
addl
test
push
ljmp
outsb
stc
lcall
out
dec
lahf
xchg
repnz
movsb
ficomps
adcb
and
imul
shrl
or
ja
push
mov
aam
iret
and
pop
pop
ljmp
rclb
test
lock
subl
push
test
inc
subl
adc
adc
imull
ljmp
fcomp
mov
xlat
push
push
inc
std
or
cmpsl
fistpll
arpl
aad
jnp
xchg
adc
push
xor
testl
jge
imul
xor
or
cmc
pop
sbb
pop
repz
sbb
cmp
stc
dec
test
ss
mov
repnz
int
jae
sbb
dec
xchg
mov
leave
adc
add
xchg
loop
inc
jns
fisubrl
and
in
cltd
push
mov
mov
cli
xor
xor
sahf
xor
aaa
scas
outsb
adc
inc
add
stos
in
sahf
sub
jo
and
ss
les
pushf
mov
das
in
aaa
jo
sbbb
insb
jg
scas
iret
adc
dec
hlt
sbb
sub
andl
adc
stos
insl
sbb
jnp
xor
cli
mov
andb
dec
popa
jl
adc
fistl
cmp
jno
cld
insl
cmpsb
dec
dec
les
xchg
push
sub
jp
call
sub
ret
call
cltd
lahf
nop
les
mov
call
mov
and
mov
add
dec
cld
jns
mov
andl
jo
or
xor
mov
stos
and
jl
mov
jecxz
movsl
imul
movsl
adc
mov
cs
loop
pop
lods
loope
xor
mov
sub
cmpsl
xor
add
hlt
out
iret
int3
fs
jno
stos
mov
add
jecxz
and
pop
sub
idivb
pop
mov
push
xlat
cld
loope
xorb
mov
mov
pop
rolb
lahf
adc
push
ljmp
mov
xlat
jecxz
or
sub
shl
insl
lea
xchg
mov
mov
iret
cld
jecxz
sarl
cmp
aas
hlt
negb
les
jno,pt
movmskps
enter
pop
cwtl
addr16
pop
adc
dec
lcall
movsb
cwtl
inc
inc
push
jne
cmc
mov
loope
arpl
mov
es
movsb
inc
inc
jge
call
cmp
push
adc
iret
cli
test
fcom
sbbb
dec
adc
js
xchg
loop
addr16
fstps
leave
fwait
in
pop
xchg
pop
or
inc
pop
jmp
jbe
movsl
dec
mov
xchg
les
push
jecxz
prefetchwt1
orb
test
mov
imul
fsin
pop
in
cwtl
lods
and
jecxz
enter
push
lea
outsb
pop
cld
rol
out
sbb
cs
std
out
dec
imull
pop
xchg
xor
int3
pop
push
or
cmc
out
in
fstpt
je
imul
fstl
mov
add
xchg
cmc
and
ret
push
sti
loopne
int3
daa
push
out
jl
out
push
push
lahf
dec
or
sbb
mov
xor
sbb
lret
jmp
lcall
inc
adc
sub
imul
dec
dec
js
mov
jns
cmp
jmp
sub
jecxz
orb
jmp
jmp
iret
insb
push
push
cmpsb
subb
pop
pop
jno
ljmp
movsb
arpl
mov
jb
std
xorl
js
jns
mov
or
xor
add
xor
clc
or
call
add
insb
aad
pop
mov
jb
or
mov
pushf
mov
add
pop
sub
adc
mov
jo
outsl
popa
cmp
lret
jns
adc
cmpsb
xchg
lods
mov
jbe
xor
jo
ds
orb
mov
mov
lahf
and
scas
inc
jmp
lret
les
and
imul
dec
inc
gs
push
mov
ja
ror
clc
dec
stos
ss
mov
mov
mov
test
clc
or
jle
pop
push
add
in
stos
rcrb
scas
cwtl
jbe
ret
cmc
jne
repnz
cs
xchg
in
cwtl
movsl
lock
and
mov
jle
mov
sbb
jp
stc
in
adc
sahf
outsl
xor
sarl
pop
lret
or
cmpl
xorl
daa
or
xor
dec
jns
mov
lock
mov
xchg
push
stos
pushf
loop
push
or
or
cmp
add
pop
into
and
lret
mov
pop
jecxz
or
ret
out
pop
cmpsl
cmp
xchg
aaa
push
sbb
sub
or
fildl
jp
cltd
mov
ret
and
inc
pop
loope
mov
dec
fdivr
std
int
shll
inc
mov
or
clc
mov
testl
cmpsb
dec
sti
sbbb
out
inc
gs
mov
mov
mov
push
xchg
pop
xor
push
sub
pop
enter
sahf
int
stos
shll
test
pop
shrb
sub
clc
cli
mov
inc
roll
sbb
scas
sbb
or
cwtl
jne
jnp
inc
jne
lds
sbb
lret
cmc
xchg
shl
xor
and
xlat
sub
shlb
xchg
sub
fnstcw
nop
mov
fs
jo
sub
loopne
repnz
dec
and
adc
sub
enter
cmp
in
push
flds
dec
mov
out
cmovg
fldt
js
sbb
out
xor
in
cmp
movsl
mov
aaa
loopne
or
xchg
out
or
rcl
xchg
fisttpll
stc
sbb
cmp
or
sbb
adc
pop
jae
fs
cs
inc
xchg
mov
adc
cmp
fwait
mov
dec
mov
cmp
xor
jns
pop
or
aaa
jae
pop
and
add
loope
lods
mov
jle
xor
cmpsb
xchg
sbbb
jl
ret
mov
repnz
mov
push
pop
arpl
jmp
out
pop
insb
sub
sahf
int
add
lret
ds
and
out
sbb
or
ret
add
ljmp
xchg
xchg
adc
dec
xor
lret
dec
cmp
and
xor
xchg
cmpsl
aaa
pusha
stc
je
mov
nop
data16
fwait
subl
cmp
lods
add
stc
push
xchg
std
ja
mov
negl
flds
sti
or
mov
mov
xchg
adc
push
add
add
out
rorb
push
push
jmp
and
data16
mov
xchg
xor
call
outsb
cmc
sti
repnz
ret
lds
dec
test
mov
cli
divl
mov
mov
pop
lret
jnp
sbb
nop
inc
insl
jae
mov
or
test
jb
aas
mov
out
shr
imul
sub
test
sbb
nop
pop
in
mov
jno
into
loope
ror
mov
mov
les
movsl
clc
clc
loop
and
inc
pushf
repz
sbb
daa
mov
pop
jae
stos
push
nop
mov
lea
nop
dec
lds
aas
js
je,pn
mov
into
mov
mov
dec
sbb
or
into
push
mov
xchg
nop
adc
sub
andb
in
add
test
in
pop
arpl
insl
cmp
cmp
mov
xor
aad
std
pusha
mov
icebp
push
sub
leave
inc
dec
shrl
pop
sbb
in
inc
mov
and
iret
shr
popf
adc
ss
push
aas
cmp
cmp
stc
iret
iret
push
addr16
sub
inc
xor
jmp
gs
pusha
push
aam
jp
cmpsl
imul
jmp
sar
loope
mov
mov
and
shll
inc
fwait
cmpsl
pop
nop
pop
decl
cmp
or
lock
adc
cmp
jl
adc
insl
add
xchg
std
sbb
adc
mov
stos
negl
fsubs
add
cmpb
dec
call
sbb
lods
in
push
xchg
fnstenv
pop
mov
xchg
mov
stos
lea
push
enter
mov
wrmsr
and
lcall
jae
mov
cmpsb
in
push
idivb
fbstp
jmp
aaa
and
mov
adc
ss
cmc
mov
stc
cmp
add
lcall
out
push
sbb
rcl
sbb
lret
xlat
test
hlt
inc
pop
imul
and
add
mov
outsb
pop
scas
jecxz
mov
inc
aam
int3
sub
jge
outsb
xchg
ret
cmp
movsb
loop
out
icebp
mov
add
rcll
jno
push
xchg
mov
adc
lret
seta
jge
scas
pop
mov
dec
repz
imul
xchg
xchg
scas
fstpl
mov
xchg
and
or
jp
xchg
dec
inc
je
fs
je
int
les
call
push
or
cmp
loop
and
out
lock
cmp
movsb
mov
movsl
cmp
lock
std
push
push
sahf
jecxz
es
mov
bound
add
jg
loop
or
cltd
int3
cmc
sub
lods
lods
mov
ficoms
sbb
lcall
and
xchg
inc
pop
inc
loopne
in
sbb
jle
mov
pop
xchg
sti
imul
xor
int
xlat
out
sub
je
cli
push
test
ljmp
iret
jp
push
mov
les
xchg
xchg
lods
mov
cmc
lods
jo
sub
aad
add
or
mov
push
mov
sahf
xchg
aas
sbb
pop
mov
iret
sub
dec
ljmp
jne
inc
mov
inc
cltd
dec
fwait
cmp
pop
imul
iret
cmpsl
jle
sub
push
cmp
ss
push
mov
fsubr
mov
xchg
sbb
inc
addl
mov
negl
aad
popf
pop
jl
xor
lret
mov
leave
ret
jno
std
lret
pop
es
xchg
inc
je
mov
sub
test
lods
in
popf
mov
xor
cmp
jmp
fstps
mov
dec
sahf
pop
or
push
dec
inc
pop
or
xor
jle
orb
pop
inc
sub
movsl
testb
pop
rcl
mov
mov
lock
int
arpl
in
jo
out
jbe
push
mov
sbb
push
and
cmpsl
out
mov
jmp
lods
mov
sbb
fdivs
adc
gs
je
push
dec
push
enter
popf
lret
shll
mov
cmpsl
lcall
jmp
lods
add
into
sbb
inc
lret
or
fistpl
icebp
mov
idivb
mov
movsl
subb
fsubrl
lods
loopne
dec
add
mov
adc
jmp
mov
scas
je
dec
lahf
pop
mov
sbb
shl
shr
les
jno
pusha
mov
push
sahf
mov
mov
add
jno
cmpsl
jno
pop
call
fxch
dec
mov
mov
jge
xchg
mov
mov
sub
push
js
mov
mov
in
jne
xor
mov
arpl
sbb
leave
lret
sbb
popl
adc
cwtl
cmpsb
int
mov
leave
mov
xor
loopne
adc
call
push
mov
rol
jne
lret
add
dec
jmp
out
push
or
and
jnp
xlat
ret
jmp
xor
lods
lcall
es
jne
xor
pop
inc
jecxz
out
pop
fucomip
lds
mov
inc
aam
cld
or
and
inc
ds
jg
das
cmpsl
cmp
and
mov
sub
fwait
and
sahf
bound
mov
jmp
mov
call
or
movsb
lret
jle
ret
lret
lret
add
and
ds
pop
stos
repz
ss
out
ret
imul
and
scas
add
lds
or
mov
inc
mov
lret
cmpsl
pop
ljmpw
roll
dec
add
adc
xchg
cmp
int
adc
and
test
dec
mov
mov
cmp
inc
ja
dec
iret
fmul
fiadds
push
xlat
fidivrs
addr16
push
mov
pop
dec
div
sbb
or
jmp
push
jg
mov
inc
imul
sti
pop
ss
fcmovnbe
sbb
lcall
adc
push
nop
jge
insl
cwtl
dec
sbb
out
jbe
fbstp
ds
or
push
mov
iret
add
jo
mov
inc
imul
xchg
jg
pop
dec
outsb
xchg
sbb
jle
push
adc
stos
fsubrl
lods
out
in
mov
pop
jnp
mov
mov
lods
dec
hlt
add
xchg
lock
mov
outsl
mov
lock
mov
shrl
or
pop
push
dec
sbb
sbb
lods
add
ret
aad
mov
subb
movsb
lahf
js
out
out
in
push
xlat
cmp
inc
stos
xchg
mov
lea
insl
roll
les
pop
daa
sbb
aad
fimull
lods
mov
pop
mov
mov
gs
outsl
insl
inc
pop
mov
int3
in
addl
fsub
ljmp
inc
and
mov
jg
add
mov
rolb
cmpsl
mov
loope
pusha
push
or
lcall
andb
jnp
adc
orl
push
xorb
cmp
xlat
loope
xchg
cmp
repnz
jnp
frstor
daa
enter
mov
mov
aas
das
lea
imul
fistpl
push
popw
or
mov
mov
xorb
adc
int
jnp
jp
or
loopne
popa
test
add
mov
push
xchg
cli
cmp
jmp
cmp
lret
cmp
dec
and
inc
dec
push
out
cmpsl
mov
jmp
mov
xor
iret
js
push
mov
push
xlat
dec
fwait
outsb
inc
jo
push
and
sbb
bound
jbe
outsl
adc
mov
js
les
dec
jbe
adc
jmp
mov
lds
push
sbb
push
inc
out
xor
add
mov
jmp
mov
cltd
int
pop
adc
inc
leave
xchg
mov
enter
jae
xchg
pop
xor
mov
ds
cmp
leave
push
mov
cmpsl
mov
push
sti
mov
outsl
aam
fs
iret
rol
ret
xchg
push
sbb
fsts
lock
jb
jno
ret
dec
and
xchg
inc
mov
sbb
pop
sbb
sbb
nopl
add
sti
sub
jo
push
cmc
mov
mov
into
xchg
outsl
mov
fs
pop
adc
mov
pop
and
lcall
mov
jnp
cmp
mov
cmp
dec
add
mov
mov
jge
outsb
sbb
movsb
mov
sahf
xchg
fstl
enter
or
dec
fwait
sti
mov
gs
pushf
cwtl
icebp
ret
and
cmp
jge
dec
ret
push
call
inc
mov
mov
subl
cmp
call
sahf
pop
pop
jg
inc
push
fwait
mov
mov
push
sbb
stos
mov
rol
xlat
cmp
fnstsw
movsl
mov
movsb
ret
test
xor
fcoms
iret
out
nop
sti
push
call
pop
out
jmp
mov
mov
jnp
lock
push
push
xor
fs
pop
adcl
cmpsl
push
sbb
in
mov
fildll
loop
lock
xchg
sti
rcll
cmp
lcall
add
aam
pop
xchg
lods
push
jle
outsl
subb
lods
dec
add
ljmp
ret
mov
jnp
rol
in
outsl
push
lock
mov
out
aaa
add
adc
icebp
cmpsl
movsl
dec
or
popf
push
imul
outsl
dec
xlat
rorb
addb
fbld
dec
dec
movsb
xchg
xchg
sbb
loopne
out
and
nop
shlb
shll
stc
mov
cmp
sahf
es
js
push
lods
cmpsl
xor
cvtpi2ps
ja
aad
cmpsb
sbb
enter
movsb
outsl
xor
inc
xlat
rcl
sub
ror
mov
push
pop
mov
out
outsl
add
push
and
int
ljmp
les
mov
outsb
lds
aam
sti
cs
lret
sbb
loope
pop
inc
jne
jnp
adc
daa
xor
push
pop
lods
insb
adc
push
push
faddl
lret
adc
test
lods
adc
xorl
out
adc
or
outsb
and
out
sub
mov
push
adc
scas
mov
fidivl
pop
xchg
sti
cs
mov
scas
lods
add
inc
ficomps
mov
sbb
mov
mov
cmp
cmp
js
or
inc
pusha
sahf
mulb
pusha
loope
cltd
xchg
mov
inc
ds
add
test
lret
pop
std
jp
adc
jmp
fwait
xchg
lods
into
inc
imul
popf
sbb
pop
mov
gs
sti
pop
lret
add
or
popa
adcl
or
scas
lods
sub
add
adc
dec
adc
cs
inc
loop
pushf
sub
dec
xor
mov
jmp
push
jb,pt
jg
test
imul
pop
test
xor
dec
out
lcall
fimuls
je
push
sbbb
imulb
mov
inc
push
inc
cmp
mov
sub
addb
fs
sub
xlat
sarb
pop
lret
mov
add
mov
pop
xchg
add
and
aaa
inc
mov
push
call
push
adc
andb
mov
adc
adc
stos
pop
repnz
sti
jo
adc
add
fsubrs
sub
loopne
cld
rcll
ror
cld
sub
daa
xor
test
sub
jne
cwtl
pop
rep
repz
push
and
dec
mov
xlat
push
mov
mov
mov
mov
outsb
pop
or
out
add
push
ret
jle
gs
lods
mov
xlat
mov
dec
fisubrl
jo
push
pop
dec
cmp
jp
rclb
jl
fimull
fisttpl
mov
das
push
mov
add
sub
pop
and
pop
scas
data16
jp
pop
or
sub
xchg
in
pop
jle
sub
scas
lret
aad
push
jmp
pop
dec
jbe
scas
jp
and
xchg
inc
mov
lds
aad
insb
pop
imul
into
add
xor
mov
pop
jns
mov
push
neg
adc
mov
add
scas
fsubrp
gs
sbb
push
bnd
mov
sub
pop
dec
sar
jb
mov
aam
adc
lret
cmpsl
fstpt
shr
shlb
inc
xor
xor
and
ret
sub
jae
mov
cltd
ljmp
imul
in
dec
fcmovnu
test
jno
scas
addr16
mov
leave
mov
out
addb
leave
push
dec
rclb
mov
mov
popf
sbb
add
loopne
das
dec
ljmp
es
cmp
jo
mov
in
jle
push
jmp
sbb
jns
fwait
push
and
dec
out
cmp
test
cmp
xchg
fstl
cmp
or
push
jecxz
inc
addr16
mov
jo
xchg
stos
xor
scas
clc
dec
sub
cmp
sub
cmp
xchg
loop
test
mov
adc
int
push
adc
outsl
dec
fisubl
stc
push
fstl
adc
mov
mov
in
fcoms
push
sti
sahf
push
xchg
outsb
in
insl
sbb
call
cmp
mov
je
mov
adcl
jno
jp
sub
les
inc
int3
and
cld
sub
scas
add
rol
shll
fdiv
adc
push
sub
insb
sub
sahf
sbb
stos
adcl
or
sub
fmull
addr16
je
lea
pushf
stos
jbe
jp
jae
cmp
xor
jb
pop
fdiv
push
repnz
sub
shr
mov
pop
in
xchg
push
xlat
adc
push
mov
je
sub
cmp
or
aas
ja
mov
xor
frstor
ret
inc
sti
scas
lea
dec
into
add
mov
mov
mov
test
xchg
sbb
sar
mov
std
mov
loope
repnz
mov
jns
cmpsb
pop
adc
mov
and
fists
lock
xchg
subb
out
incl
push
xchg
icebp
fidivrs
cwtl
movsl
add
ljmp
shl
shll
mov
js
jo
andl
or
pop
jb
dec
ds
divb
cmc
ljmp
mov
or
ret
inc
hlt
and
enter
sbb
mov
xchg
insb
xor
cmpsb
adc
sub
mov
sarb
mov
es
stos
jb
int
mov
mov
into
sub
pop
pop
aas
adc
aas
xor
mov
cmp
imul
in
cld
pop
int3
mov
sti
lods
loop
aas
cmc
js
adc
and
mov
xchg
repz
xchg
cmpsl
push
jae
sbb
mov
push
icebp
mov
mov
and
in
jp
sub
ss
inc
xchg
sbb
add
push
in
xor
jmp
mov
sbb
dec
stos
push
pop
pushf
lret
push
mov
mov
jno
fdivr
xor
leave
inc
jl
fdivr
imul
cltd
xchg
fisttps
hlt
cli
int3
inc
dec
out
cmp
stos
rcrl
test
ja
add
iret
fwait
aas
nop
ds
int
xor
dec
gs
notl
popf
dec
hlt
test
aad
dec
and
sub
dec
outsl
cmp
lock
dec
inc
push
mov
push
mov
int3
sub
jg
insb
sbb
mov
xor
fcomps
jnp
scas
daa
mov
mov
sbb
and
jmp
rclb
push
outsl
push
ss
test
shlb
je
push
xor
dec
ret
cmpsl
push
lods
mov
xor
arpl
mov
in
jo
and
mov
dec
cli
addr16
push
test
mov
movsl
mov
mov
mov
dec
xor
dec
jmp
gs
add
ja
lods
inc
ja
fsubs
test
cli
nop
add
pop
push
mov
mov
cs
inc
add
xchg
jno
sub
mov
bound
scas
cs
xchg
sub
ret
mov
faddp
lods
dec
mov
arpl
xor
scas
into
xor
fisttps
scas
mov
das
add
into
sub
dec
push
je
inc
mov
xor
xchg
mov
repnz
mov
push
out
inc
movsl
pusha
ss
lods
sbb
int
lods
and
add
jmp
jl
jle
cs
popf
jo
ret
cmp
xchg
dec
inc
flds
xlat
icebp
cwtl
iret
js
push
cwtl
mov
stc
xchg
or
int
sub
aas
mov
lock
adc
xchg
xor
dec
mov
cs
test
pop
adc
cmpsl
mov
out
idivl
cmp
push
fstl
out
cld
lods
sahf
pop
in
add
fwait
cmpb
pop
xchg
out
inc
sbb
or
mov
jne
xchg
dec
or
icebp
jmp
rclb
repz
imul
xchg
sub
inc
and
mov
sub
cs
dec
and
das
pushf
std
jnp
mov
je
mov
push
mov
cmp
pop
inc
mov
out
mov
lret
sbb
xchg
mov
shlb
adc
push
mov
mov
and
inc
xor
sbb
iret
and
xchg
in
daa
jb
lret
pop
dec
rcll
add
jl
adc
jbe
arpl
clc
mov
add
adc
mov
mov
pop
mov
adc
shrb
pop
xchg
jmp
arpl
add
sub
es
fdivs
mov
hlt
ds
cmp
rorl
sarl
stc
adc
mov
test
shl
or
sbb
ficoms
or
cmpsb
pop
push
push
mov
xor
sbb
insb
out
jo
add
out
pop
xor
and
sbb
mov
cmp
and
mov
into
rcr
ljmp
xor
mov
movsb
pop
or
jno
outsl
push
sub
cmp
mov
dec
test
xor
mov
sar
pop
je
js
push
test
je
sahf
xor
cwtl
addr16
sub
bound
sub
dec
or
pop
ljmp
mov
adc
xchg
xor
test
and
outsb
das
scas
sarb
andl
push
cmp
lret
stc
in
dec
fnstcw
xchg
loop
mov
or
icebp
scas
mov
sub
enter
add
cmpsl
cwtl
or
ret
sbb
lods
arpl
lds
fcompl
imul
lds
sbb
mov
fwait
cmp
pop
out
adc
mov
int
mov
dec
jnp
mov
adc
mov
rolb
ret
lods
gs
stos
ret
mov
enter
mov
jg
les
roll
leave
lea
pop
inc
and
icebp
iret
cltd
into
cmp
or
out
dec
jno
rcll
lea
jo
scas
mov
test
leave
xor
sbb
test
repnz
push
xchg
cwtl
sarl
push
adc
mov
push
add
and
scas
push
jmp
rorb
sub
orl
pop
and
xor
jns
jle
lods
imul
or
push
add
push
add
aaa
ja
add
add
mov
sub
xor
loop
loopne
out
mov
xchg
xchg
jecxz
lock
js
jg
shlb
mov
jbe
ds
sbbl
pop
in
stos
xor
fisubs
jmp
roll
into
lahf
icebp
stc
lcall
test
nop
inc
pop
inc
movsl
add
sbb
jecxz
std
filds
lds
xchg
in
inc
shrl
sahf
call
sub
inc
inc
daa
jno
dec
mov
mov
dec
sub
and
adc
mov
fwait
cltd
mov
stos
or
insl
lods
xor
push
jne
in
add
push
jae
ljmp
sbb
xor
lahf
cmp
pusha
mov
mov
imul
les
js
sub
leave
inc
fisttps
cmp
repnz
out
xlat
adc
jmp
add
fadd
cmp
jecxz
imul
inc
dec
mov
mov
xchg
jmp
setae
mov
in
hlt
idivb
aas
or
and
cmp
es
pop
sub
push
xor
dec
out
loopne
imul
inc
mov
xchg
inc
outsb
push
jae
insl
dec
inc
pop
xchg
xor
mov
fnsave
stc
jb
iret
pusha
mov
inc
mov
jnp
push
and
push
sbb
scas
adc
or
jecxz
mov
xor
shll
jae
pop
inc
cld
jne
pop
pusha
and
mov
mov
jno
lods
dec
rcll
jo
repz
pop
pop
pop
push
pushl
xchg
push
lcall
fiaddl
pop
dec
sub
mov
ret
loopne
sub
mov
hlt
push
push
arpl
jb
loop
adc
jnp
sub
fwait
pop
add
add
xor
enter
iret
ja
push
clc
jb
adc
pop
xchg
cltd
cli
shrb
test
adc
jg
mull
inc
mov
cmpb
xor
mov
adc
ds
stos
add
in
lock
test
std
xchg
jb
mov
cwtl
adc
icebp
mulb
enter
add
xchg
aad
jge
sbb
stc
lods
cmp
sub
mov
icebp
sti
cmp
adc
push
fs
into
pushf
addr16
mov
filds
push
and
imul
jg
setne
jp
cli
mov
pop
sub
jo
mov
mov
movsb
test
or
je
or
movsb
xor
dec
push
into
or
stos
test
dec
inc
sub
repz
adc
cs
ficoms
sub
cmc
add
add
add
es
mov
xchg
push
mov
mov
xorb
rcrl
mov
xchg
mov
sub
mov
cmp
mov
and
stos
xor
stc
out
push
cmp
test
in
push
xchg
xchg
in
mov
repz
js
jmp
mov
inc
xchg
sbbb
cmpsl
sbb
xor
sub
sub
jle
fwait
lock
xchg
call
pushf
lds
push
xchg
incb
decl
push
cmp
jae
outsl
xor
jno
add
lahf
shrb
je
je
aaa
pushf
mov
test
insl
rcl
clc
adcl
scas
lahf
adc
cltd
fsubrp
ja
push
in
adc
subl
xchg
sahf
inc
clc
xchg
test
int3
cmp
mov
jb
add
lods
repnz
dec
cltd
cmp
ss
cmpsl
adc
pop
lds
adc
test
and
sbb
dec
fistpll
mov
sbb
icebp
repz
rorl
aad
add
pop
into
lret
cmc
cli
push
push
adc
mov
arpl
imul
mov
fld
mov
jnp
fwait
cmpsb
jae
arpl
pop
push
std
outsl
pop
inc
adc
sbb
xchg
cmp
shrl
add
je
aam
gs
lahf
cmp
fs
add
add
xor
lods
insl
mov
jecxz
out
int
and
pop
dec
jmp
xlat
or
shr
das
mov
aad
jmp
mov
cld
dec
je
mov
test
cmp
mov
es
xor
mov
notb
mov
mov
addl
mov
ret
dec
enter
js
push
in
cmp
jbe
cmp
pop
sbb
lret
insl
pop
inc
cmp
adc
aaa
pushf
xchg
mov
adc
xchg
inc
jnp
sub
mov
xor
jb
cmpsl
push
cwtl
mov
sub
cs
add
mov
mov
lds
incl
pop
jb
and
aam
mov
or
dec
mov
dec
movsl
inc
test
pop
xchg
shl
inc
test
pop
mov
xchg
push
lcall
push
jg
pop
pop
lock
xchg
nop
fimuls
lret
fstps
icebp
loopne
clc
sbb
fcmovnu
and
outsl
push
sub
icebp
lods
out
int3
dec
add
lock
cwtl
jbe
sbb
lods
sub
loop
xchg
inc
clc
jae
and
jb
push
mov
bound
test
add
imul
iret
lret
push
xchg
cs
push
jmp
shlb
ret
adc
lret
mov
insl
adc
push
adc
imul
nop
add
in
fs
add
push
xlat
xchg
cmp
xchg
ss
add
test
aad
jno
xchg
cld
repz
pushf
sub
test
mov
sub
leave
aam
addl
and
xchg
xchg
lds
cmpsl
in
jb
out
jecxz
jg
mov
rclb
aaa
call
int
shlb
imul
push
repz
rclb
pushf
imul
stos
in
pop
and
dec
pop
pop
cmp
lock
or
inc
pop
xchg
popf
lods
jl
push
fldl
and
push
popa
sub
xlat
adc
movsl
cwtl
jbe
sub
jnp
pop
mov
adc
lods
mov
mov
sbb
fdivrs
pop
sbb
push
sbb
mov
mov
or
add
test
inc
insb
xchg
push
jp
sub
mov
jle
sub
and
dec
sbb
lcall
int3
dec
push
mov
mov
sahf
ss
pusha
jmp
mov
std
outsb
movsl
cmp
cmc
add
pop
loop
and
mov
adc
insl
out
mov
dec
subb
mov
push
insb
stc
dec
les
mov
or
popa
bound
dec
leave
icebp
push
adc
imul
mov
loopne
push
leave
adc
ja
fdivl
lahf
lock
push
sub
push
inc
cltd
popa
loop
mov
into
inc
cmp
js
mov
out
in
testb
fs
pop
pop
insb
push
test
roll
popa
pop
mov
shr
push
leave
bound
jl
mov
xor
mov
or
xor
popa
ss
addr16
pusha
pop
adc
lods
cmpsb
int3
dec
rorb
lods
sbb
lock
mov
pop
mov
ja
fsubrl
push
dec
imul
insl
sub
fistpll
or
ja
add
or
repz
test
mov
mov
mov
stos
mov
mov
aam
into
adc
mov
pop
fnstcw
mov
fmul
cmp
stos
jo
mov
pushf
das
mov
mov
pop
dec
pop
out
push
sub
jg
jg
sahf
push
in
mov
outsb
sti
gs
and
test
sub
mov
push
stos
rcrb
iret
scas
cs
jge
mov
imul
mov
cmc
lcall
push
cmp
in
popf
xor
ret
xchg
dec
fcompl
scas
nop
arpl
push
push
cld
daa
aad
mov
mov
movsb
pop
add
out
aas
or
outsb
in
and
sub
sti
cmp
xor
pop
aad
int3
hlt
lods
xchg
push
out
inc
push
or
leave
lods
inc
enter
ss
adc
fisubrl
fucom
or
and
outsl
cli
cmc
fiadds
call
push
call
mov
cmp
xchg
push
clc
push
dec
inc
rcll
loop
xchg
cltd
inc
xchg
test
lret
fadd
mov
push
repz
xchg
outsb
movsl
pop
pushf
scas
mov
loope
ss
xor
xchg
imul
xor
push
adc
pop
rorl
xchg
adc
add
subl
xor
stc
frstor
adc
int3
adc
loopne
jge
ja
leave
jb
mov
mov
dec
xor
jecxz
inc
or
sbb
clc
imul
aam
nop
mov
lea
push
cmp
sahf
mov
add
mov
jmp
cwtl
sti
mov
mov
or
outsb
andnps
jae
mov
sub
mov
gs
out
stos
xor
mov
fcmovb
inc
mov
mov
pop
lret
fdivrp
add
push
cltd
inc
adc
mov
cmpsb
pop
scas
add
push
repz
out
int3
scas
dec
or
add
pop
adc
add
xor
cmp
lret
fwait
or
subl
mov
or
add
out
repnz
push
jg
jle
xchg
dec
pushf
ret
int
mov
jecxz
or
pop
out
std
jo
fucom
stos
scas
mov
sbb
adc
and
jne
ss
xchg
negb
jle
aam
lea
repnz
test
out
jnp
sbbl
aaa
fmuls
test
jecxz
add
leave
pop
repnz
mov
push
xchg
mov
imul
xchg
mov
out
in
es
pop
pop
mov
arpl
sub
lcall
jl
out
adc
cmp
test
mov
movsb
in
pop
enter
dec
sub
cmp
or
or
movsb
mov
jbe
sahf
inc
cltd
or
fdivs
cmp
lock
and
pusha
dec
sub
ljmp
dec
adc
adc
or
or
cwtl
addr16
rolb
jno
mov
pop
inc
sbb
jmp
or
mov
pop
pop
jle
imul
ljmp
mov
and
pop
dec
add
fidivrl
sbb
mov
cmp
shll
out
pop
fistpl
lods
mov
mov
out
stc
gs
xchg
jbe
sbb
das
decb
ret
sahf
in
in
jns
insl
daa
cmp
iret
jg
nop
icebp
pop
std
xor
das
je
mov
xor
cmpsl
sub
test
lods
lea
loop
add
andl
std
stos
mov
outsl
jnp
and
sbbl
fisubl
dec
test
xor
dec
xor
push
jnp
mov
aad
push
push
in
sbb
adc
jp
ret
scas
in
hlt
scas
sbbb
cmp
xor
scas
sub
jno
int3
xchg
out
dec
test
iret
push
xor
fnstsw
mov
lds
in
xchg
or
in
loope
dec
popf
cmp
stc
fdivl
push
mov
daa
jg
int3
xchg
rclb
inc
pusha
push
sti
cltd
dec
xor
inc
jge
mov
leave
cs
pop
push
and
adcl
xor
fisubrl
xorps
or
ret
arpl
or
sub
xor
adc
push
out
ja
mov
test
pop
shl
mov
cwtl
dec
sub
popf
test
lcall
shrl
nop
and
mov
ja
dec
mov
sub
lods
add
pop
push
lods
inc
aam
mov
cmp
addr16
dec
mov
andl
cld
insl
mov
inc
lret
addb
sti
loope
sub
cli
enter
jno
and
gs
pushf
test
inc
pop
fmull
cmpsl
jecxz
fcmovbe
out
dec
dec
pop
cmp
es
and
stos
mov
adc
mov
adc
sbb
in
lret
pushf
cmpsl
scas
aam
das
cltd
xlat
int3
xchg
les
jno
sub
leave
mov
imul
push
and
inc
pop
jnp
pop
lret
dec
inc
pop
fsubrs
in
jg
add
ret
rolb
jns
cmp
aas
cmp
int3
hlt
fisubs
jle
js
inc
sbb
sahf
sbb
add
xor
sub
inc
push
dec
xor
push
test
aas
mov
mov
push
test
dec
addr16
cltd
arpl
out
or
iret
sub
jno
les
mov
repnz
in
dec
movsl
cli
lret
inc
aad
aad
lock
dec
jge
push
lock
or
mov
cmp
pop
lods
mov
pop
push
jp
aaa
fidivrl
inc
addb
adc
mov
jmp
and
aaa
add
test
lret
cld
mov
mov
sti
pop
out
xor
clc
dec
daa
std
aas
subl
adcb
imul
mov
int
shll
dec
adc
cld
mov
popf
push
insl
sti
mov
add
ljmp
push
mov
dec
adc
xlat
rorl
push
out
mov
cmpsl
push
or
jg
in
cmp
cmpsl
gs
cmp
in
idivl
insb
hlt
repz
or
hlt
sbb
js,pn
inc
rolb
enter
and
or
rcrl
xchg
xchg
cmp
fwait
mov
cmpsl
and
lods
mov
or
popa
xchg
xchg
adc
jg
cmpsb
ljmp
jne
adc
leave
sub
jbe
test
out
or
jl
cli
lds
xchg
stos
rep
xorl
dec
inc
push
inc
add
xchg
cli
inc
push
ret
inc
imul
cltd
xchg
arpl
adc
in
lds
aaa
pushf
cmpsl
pop
jo
jmp
lea
xlat
rclb
sbb
divb
cmpsb
dec
shrb
or
sbb
mov
pop
in
int3
loop
test
nop
xchg
call
aas
sbb
xchg
adc
add
clc
stos
cmp
mov
sub
aad
cmp
int3
xchg
in
stos
mov
dec
mov
shrb
idiv
push
cmp
pop
jp
mov
cmpsb
daa
xor
dec
add
jb
xor
ds
mov
dec
jnp
pop
or
mov
or
aaa
xlat
les
ja
mov
rorl
cwtl
or
add
into
sti
xchg
stc
ret
push
mov
mov
jecxz
sarl
pop
cmpsl
test
icebp
push
lods
dec
shrl
stos
inc
inc
ss
cmp
mov
dec
lret
ss
ja,pn
mov
xchg
std
xor
add
testb
add
int3
clc
fucomip
ret
mov
hlt
std
sub
imul
roll
push
xchg
and
dec
mov
adc
jo
push
sub
mov
adc
cwtl
inc
inc
jnp
mov
add
cltd
iret
xor
mov
or
mov
push
or
push
jb
add
cmp
in
in
mov
and
add
pusha
movsb
insb
lds
cltd
loope
fsubrp
adc
jns
push
insb
push
iret
inc
push
jb
iret
iret
pop
out
in
inc
ret
xor
loope
adc
inc
cld
sub
jbe
ds
mov
jg
push
in
call
dec
mov
les
pop
or
jle
sahf
cmp
int
inc
js
cmp
pop
push
or
jns
fdivs
push
icebp
sub
push
arpl
xchg
insl
cmp
pop
push
pop
pop
jl
sub
inc
cmp
daa
leave
pop
sbbb
arpl
stos
push
sbb
sbbb
lahf
popf
dec
add
imul
push
inc
or
mov
cmpsb
jmp
or
or
mov
mov
lods
or
inc
pusha
adc
adc
pop
sbb
add
and
lahf
cmp
jl
pushf
scas
cmp
sub
in
or
xor
lods
test
cmp
lods
push
ja
test
push
add
jo
mov
sub
push
stc
insl
mov
sub
loopne
cmp
ljmp
enter
dec
jmp
mov
jge
stos
insb
popf
push
or
in
shlb
mov
or
aad
roll
testl
mov
icebp
negl
in
int
xchg
les
mov
xchg
xchg
insl
jp
in
cmp
fcom
xor
leave
xchg
notb
imull
das
xchg
stos
subb
pop
out
test
xor
and
mov
mov
cmpsl
aaa
repnz
loope
or
pop
outsb
imul
out
and
jnp
cmp
lea
push
sbb
adc
push
or
lahf
pop
dec
jb
xor
mov
rorb
stos
jle
mov
cs
cmc
xor
mov
sbb
and
mov
insl
or
idiv
aas
pusha
js
inc
loope
out
dec
icebp
push
inc
int3
mov
lods
pop
pushf
fstp
cmp
pop
pop
stos
and
cltd
subb
mov
test
out
mov
ja
ror
add
add
gs
shll
sub
enter
lret
adc
mov
cmp
ficompl
sub
inc
lret
push
rcrl
cmp
in
das
add
pushf
stos
and
lret
mov
mov
cmpsl
gs
testl
roll
testl
push
jnp
hlt
cmpsb
cmp
xchg
fisubrl
sub
xor
cmp
aas
and
jl
pop
xchg
push
and
dec
repnz
dec
out
int3
fsubl
or
xorb
jle
lcall
data16
inc
sub
repz
loope
xor
pop
xor
mov
mov
int
in
gs
movl
dec
mul
jno
jg
cmp
popa
xor
bound
mov
mov
mov
movsb
cmc
imul
pop
mov
jo
loop
rorb
pop
push
fucomip
cmpl
mov
mov
adcb
into
lcall
inc
shll
and
pushl
inc
scas
jbe
sbb
jl
pop
pushf
mov
stos
lret
xchg
cmpsl
popl
xlat
in
dec
inc
mov
jnp
into
xlat
loop
stc
roll
xor
inc
dec
sarl
fucomip
mov
sarl
int3
and
lret
sub
cwtl
adc
xor
scas
loope
mov
stos
cmc
xchg
push
cmp
pushf
insl
in
jmp
dec
sub
ljmp
push
or
les
imulb
and
test
movl
rcrb
test
add
xlat
or
and
and
mov
sbb
roll
data16
sbb
mov
gs
lcall
mov
iret
jp
aaa
out
daa
psllq
clc
sub
or
mov
mov
cmp
cmpsb
ljmp
fs
mov
add
dec
and
jge
popf
sub
sbbl
shr
and
out
xor
pop
or
iret
scas
cli
jg
aaa
out
fwait
lcall
dec
fstpl
stos
add
es
out
dec
push
fmull
or
dec
imul
repnz
js
test
shlb
ret
push
ret
mov
adc
ja
lret
cmp
bnd
mov
icebp
mov
cli
jb
cli
movsb
mov
outsl
mov
adcl
xchg
adc
pop
or
repnz
jnp
sbb
ja
jns
cwtl
push
js
add
call
icebp
repnz
insb
or
getsec
es
sbb
das
loop
fucomp
and
xor
xchg
jb
push
in
rcrb
mov
push
push
stos
stos
out
inc
add
push
sarb
push
cmpsb
pusha
dec
in
leave
adc
in
cmpsb
ret
test
lock
stc
andl
arpl
xchg
add
xor
inc
pop
xchg
sub
gs
pop
iret
push
mov
sbb
jmp
add
repnz
scas
lds
jno
fstpl
fbld
pop
iret
and
insb
push
inc
sub
cmp
mov
arpl
pop
add
push
sbb
add
cs
sub
add
imul
sarb
or
push
clc
dec
mov
ja
xchg
fsub
in
cmpsb
sub
pop
ja
fucomi
add
stos
or
jg
test
cmp
je
ljmp
or
rorb
bound
test
mov
js
hlt
pop
pop
inc
pop
adc
sti
std
mov
xchg
xor
lea
dec
insl
inc
add
pop
mov
inc
bound
in
es
int
push
mov
sarl
xchg
cltd
pushf
xor
std
fwait
loop
jns
push
pop
movsl
xor
bound
add
push
pop
jp
push
push
or
or
iret
inc
scas
and
push
ds
in
jl
pop
cltd
scas
movsl
out
pop
cld
mov
in
jb
mov
loopne
sbb
mov
adc
testl
or
es
stc
push
mov
pop
push
xor
ss
int
and
addl
out
bound
lret
xor
mov
sub
popa
jae
aad
rclb
adc
jbe
dec
ss
aas
xorb
ret
nop
cltd
mov
push
pop
shrl
loop
into
add
cli
mov
mov
dec
adc
inc
jl
jnp
mov
int3
lods
insl
dec
test
dec
mov
scas
cmpl
pop
pop
xchg
loopne
and
xchg
lret
mov
inc
cmp
adc
shlb
fistpl
sub
cmpsl
ficomps
cmp
jmp
ffreep
imul
ret
push
jmp
or
mov
ret
add
jmp
mov
pusha
popl
fcoms
mov
mov
sub
dec
dec
sbbb
add
imul
shll
clc
pushf
add
jne
jns
mov
xchg
enter
xchg
push
xor
aam
icebp
dec
sbb
lahf
sub
scas
test
inc
mov
imul
test
push
fldl2e
push
inc
rcl
adc
cmp
jp
mov
frstor
loop
and
jns
repz
add
dec
fnstsw
fs
pop
mov
call
lahf
xchg
dec
mov
scas
xchg
xor
stos
xchg
mov
or
jno
sub
cmp
adc
pop
cwtl
movl
int3
xor
ss
lods
adcb
add
aas
les
popf
mov
addb
inc
popa
notb
xor
sbb
dec
rcrb
add
jg
cmpsb
xchg
das
inc
mov
loopne
shll
pop
sar
sarl
es
xchg
push
les
lcall
adc
ja
jbe
popf
out
andl
or
cmp
cmp
mov
lods
mov
xchg
sub
dec
jno
lock
imul
gs
in
fsubp
daa
mov
scas
and
add
add
cmp
lret
js
push
fildl
mov
mov
mov
xor
rolb
add
push
mov
dec
jb
jbe
mov
insb
sub
add
cmp
jg
xlat
dec
out
and
cli
push
repz
in
mov
out
jge
fs
cmp
fwait
cltd
lock
and
das
cs
aas
adc
dec
pop
mov
cltd
cs
outsb
pop
pushf
into
xchg
in
sub
test
xor
into
data16
cltd
cmp
mov
pop
xchg
push
mov
jp
mov
cmovae
mov
outsl
sarl
sbb
ss
add
mov
popf
push
adc
out
lods
push
mov
dec
test
dec
outsb
lret
int
cmp
or
sbb
cmovle
sbb
cmp
and
xor
xchg
or
push
jmp
stc
jne
jp
shrb
sub
jae
cmc
add
sbb
hlt
ljmp
sub
pusha
sub
lock
aas
mov
dec
adc
out
jmp
xchg
pop
xchg
cwtl
pop
inc
addr16
andl
hlt
outsl
xchg
fwait
push
out
leave
cmp
std
dec
jo
or
and
sahf
clc
mov
mov
and
push
jmp
mov
aas
jg
nop
cmp
rcll
push
mov
mov
lret
adc
jmp
mov
orl
pop
fsts
fmull
mov
fidivrs
push
add
xchg
pop
and
pop
lds
orb
shll
fidivl
ss
xor
movsb
lods
jle
xchg
dec
clc
imul
cmp
cld
jge
popa
call
cwtl
cs
lahf
lret
xchg
xchg
dec
mov
xchg
movsl
mov
aad
add
and
dec
rclb
or
lea
testl
and
lods
lret
push
sbb
enter
and
or
dec
xchg
and
dec
insl
arpl
jo
and
sub
fisubl
xchg
outsb
daa
ja
push
out
pop
rcrl
std
xlat
push
popa
or
daa
daa
push
lods
mov
ret
cli
inc
jne
rcr
lcall
enter
xchg
clc
pushf
in
and
push
mov
shlb
xchg
mov
mov
xor
jno
inc
cli
dec
xchg
nop
clc
pop
lret
mov
xchg
sub
stos
mov
mov
dec
inc
lock
shrl
mov
xchg
jns
je
lret
fnstcw
push
xchg
jle
inc
or
repz
outsb
movsb
sub
sub
mov
pop
out
call
jne
imul
push
insb
lcall
ss
lods
and
stos
int3
loopne
fnstcw
lahf
xchg
cmp
dec
aaa
ds
push
loopne
addb
mov
cmpl
xor
test
xor
movsb
adc
adc
cld
addr16
sbb
xchg
addl
add
push
int
notb
lea
inc
leave
mov
pop
daa
cmpsl
movsl
std
cmp
dec
pop
lahf
clc
stos
sub
sbb
xor
lods
add
cltd
lret
mov
xchg
cmp
insb
xor
imul
add
mov
xchg
fistpl
inc
mov
imul
and
or
push
out
mov
push
mov
ret
xchg
leave
ret
fistpll
jns
xchg
das
ret
ss
ja
xchg
cmpsb
test
stos
cmp
out
movsl
mov
inc
fidivrs
push
xorl
sub
mov
pushf
jno
and
imul
dec
lahf
sti
loopne
je
mov
xor
mov
es
add
jmp
and
mov
jp
lods
xor
mov
add
in
in
cmp
in
xor
int
lcall
aam
cmp
jg
pop
sub
mov
jl
jmp
push
movsl
mov
pop
sub
test
sub
xchg
dec
inc
and
shrb
pop
mov
inc
and
je
xor
fstl
jns
inc
jmp
cmp
ss
ss
mov
leave
setge
push
testl
movsb
or
mov
scas
xor
out
jne
sub
int
jns
cmp
push
fstl
mov
movsb
sbb
dec
test
mov
cmc
mov
ja
dec
cs
add
push
or
fiaddl
push
xchg
shrb
mov
or
pushf
xchg
xchg
push
xchg
jp
lret
pop
jo
cmp
pushf
pop
stos
out
lea
sbb
sub
xor
stc
into
push
mov
loop
ljmp
inc
mov
and
in
add
sub
test
imul
je
xchg
push
mov
cmp
mov
jp
aam
jp
jnp
mov
int3
out
dec
fsubl
adc
mov
cmp
mov
pop
out
or
and
in
xor
mov
pop
fincstp
inc
pop
dec
push
adc
mov
pop
popf
adc
ja
call
ljmp
dec
lods
push
stc
fisubrl
fs
vpgatherqd
test
nop
mov
and
into
mov
dec
test
fwait
or
jns
stos
jnp
sarl
ds
inc
fistpl
jns
cmp
xor
lahf
push
add
cs
test
fdivl
push
mov
fs
sub
addr16
or
sahf
popw
mov
mov
add
cmp
bound
test
mov
mov
movsl
xchg
mov
sbb
push
pop
pop
mov
test
outsb
xchg
push
xor
hlt
cld
sbb
xor
cwtl
mov
dec
lahf
sbb
cmp
cmp
mov
pop
out
add
mov
aam
mov
out
int3
jns
ja
push
mov
mov
push
sbb
jecxz
dec
cltd
je
dec
daa
inc
and
jl
daa
inc
xor
fidivrs
and
mov
push
lret
pop
xchg
les
in
sub
xchg
pusha
icebp
sahf
push
sbb
lods
test
arpl
call
call
push
add
push
loope
bound
and
cmpsl
mov
adc
daa
sti
jp
cmc
xor
and
aam
jp
xchg
das
scas
sub
test
xchg
dec
icebp
movsl
fldl
inc
out
repz
cld
jne
push
insb
vmovsldup
mov
insl
mov
push
movsl
add
cmc
mov
imull
cmp
popf
es
ljmp
pop
enter
mov
icebp
cmp
xchg
or
arpl
movlps
sub
daa
loope
mov
mov
lea
mov
sahf
mov
aam
aad
xchg
je
push
fildl
xorb
stos
cli
es
pop
ljmp
pop
cmp
out
clc
test
into
add
dec
pushf
or
adc
popa
pop
negl
ret
call
mov
jns
lods
pop
xor
cmp
sub
das
test
cmpsl
fstpt
negb
and
shlb
jbe
shll
stos
stos
xchg
lret
push
xor
into
stos
cmp
divl
dec
fwait
test
in
and
pop
stos
data16
in
xchg
dec
or
mov
subb
inc
or
sub
out
push
je
jbe
mov
sub
cwtl
stos
in
out
mov
ljmp
push
enter
cld
jmp
rcll
jmp
push
jbe
inc
sbb
rcrb
adc
hlt
popa
dec
sub
jp
and
insl
arpl
mov
dec
mov
sub
push
lods
fnstsw
lods
add
out
mov
addb
push
mov
lret
sub
test
int3
hlt
cli
and
movsb
cld
adc
mov
mov
or
cmovg
mov
das
stc
jbe
jmp
loopne
mov
nop
ljmp
mov
arpl
inc
lods
adc
testl
les
and
jle
test
cmp
and
loope
jmp
sbb
mov
outsb
inc
push
inc
xchg
push
pop
dec
js
and
fidivrl
fcoml
sub
lea
mov
mov
dec
pop
fists
inc
andb
es
outsb
jg
sub
mov
sahf
shl
push
sbb
sub
cwtl
repnz
pop
in
rolb
ficomps
or
or
fwait
pop
xchg
push
out
sbb
cmpsb
ret
jb
imul
dec
repz
lret
shrl
ljmp
mov
in
icebp
nop
movsl
cmp
pop
xadd
push
aaa
xchg
int3
push
sbb
pop
sbb
mov
aaa
sbb
arpl
cmp
fcompl
jae
jecxz
add
clc
xchg
std
rep
and
loop
bound
call
cld
pop
faddl
ljmp
jmp
lods
mov
jmp
bound
in
mov
cmpsl
daa
jmp
xchg
ds
loopne
pop
pop
dec
and
iret
ljmp
adc
mov
push
movb
or
cli
sbb
cwtl
movsb
inc
inc
pop
mov
ljmp
mov
rol
mov
xor
dec
xchg
cwtl
jae
aaa
popf
test
xor
jg
xchg
adc
mov
loope
hlt
pop
movsb
loope
sbb
and
jecxz
test
je
in
xchg
or
andl
shlb
dec
ja
adc
sub
jae
and
ret
mov
lea
cwtl
ljmp
xor
imull
push
stos
adc
rclb
or
push
or
rorl
mov
jmp
or
fstps
jge
and
lds
dec
sti
sub
test
jmp
jp
cmp
in
mov
mov
xchg
xchg
mov
insb
dec
push
repz
adc
dec
cmp
int3
fistpl
andl
push
adc
inc
cmp
int3
jb
pop
xchg
mov
jb
push
cmp
and
jbe,pn
insb
popa
or
xor
mov
mov
rclb
pushf
clc
lds
xchg
xor
xlat
xchg
in
int
sbb
push
xor
test
push
sbb
test
out
mov
xchg
jo
sbb
andl
pop
dec
push
sub
mov
loop
ja
jl
or
cmpsl
sbb
idivl
fdivrp
mov
pop
out
mov
mov
or
pop
or
dec
push
or
adc
xor
arpl
mov
xchg
mov
imulb
fsubrs
es
pop
mov
aaa
jmp
inc
bound
shrb
insl
dec
pop
mov
jmp
lods
nop
ret
shlb
mov
add
popa
jne
shl
fdiv
scas
pop
lock
ljmp
sbb
add
les
test
sbb
dec
sub
popa
test
xchg
leave
pop
push
xchg
call
rcl
dec
mov
es
subb
jnp
or
inc
push
and
les
cmpsl
mov
lods
mov
mov
jnp
and
push
and
into
add
iret
inc
add
ret
mull
fbstp
pop
dec
mov
prefetch
lods
pop
ficoms
or
aas
cmp
push
js
push
push
loop
push
adc
mov
pushf
insb
out
mov
ret
pop
leave
push
and
xchg
sub
inc
ret
out
xor
imul
xchg
jg
adc
sub
push
sub
pop
out
xor
jle
shl
iret
mov
mov
loope
jns
gs
scas
cmpsb
daa
and
movsl
lds
mov
xchg
mov
inc
cmc
icebp
mov
jg
fsubs
xchg
xchg
xchg
orb
push
pushl
hlt
notl
lret
xor
shll
mov
loopne
stos
sbb
or
mov
test
cld
pop
mov
xlat
mov
leave
call
sarb
inc
add
xor
sahf
xchg
dec
pop
loope
add
mov
ja
je
sbb
pop
adc
das
jne
movsb
int3
cmp
and
cmp
jae
inc
stc
and
in
pop
imul
cmp
cmpsl
int3
push
mov
ds
mov
cmpsl
aaa
gs
fsub
xchg
jo
adc
pop
push
push
push
push
data16
cltd
mov
jl
mov
dec
faddp
or
loope
sub
xchg
mov
insl
gs
fcomi
push
mov
inc
add
add
sti
sbb
test
mov
cmc
cmpsl
fstpl
mov
mov
mov
out
sub
subb
mov
push
les
mov
pop
and
or
lods
loope
es
inc
movsb
int3
cmp
rorl
mov
pop
add
repnz
inc
in
rcr
push
lock
mov
pextrw
or
shrb
outsl
jge
mov
fnsave
or
lcall
jg
adcb
cli
push
popf
jo
test
sbb
mov
sub
dec
out
cmc
arpl
fsub
aad
lret
sbb
hlt
pop
test
mov
pop
mov
and
jge
or
push
sub
daa
dec
xor
mov
aaa
pop
pop
or
push
jge
les
jnp
int3
jmp
pusha
adc
insl
call
jge
or
inc
lock
cmp
push
ret
in
cld
and
sbb
mov
inc
cmp
pop
cltd
sub
or
in
jb
or
jo
das
pop
cmp
sub
pushf
enter
movsl
or
lds
les
leave
push
je
aaa
inc
mov
pop
adc
call
cld
sbb
xlat
jge
jp
imull
dec
aas
shrl
loop
aam
push
and
fildll
test
in
mov
push
ficoml
pusha
pop
add
pop
lock
sahf
pop
pop
inc
push
cwtl
inc
add
xchg
imul
sahf
and
rcr
sub
and
inc
cld
dec
push
cld
jle
xchg
cmpl
ss
imul
mov
mov
test
ret
pusha
mov
scas
lret
add
aad
pusha
fldenv
push
sbb
mov
iret
lds
mov
jle
test
mov
aad
jo
fbstp
sti
sub
test
xchg
push
shlb
jmp
mov
mov
sub
int3
jb
ljmp
rorl
cmp
loope
lods
cmpl
out
shrb
jp
inc
sub
jp
cmc
jmp
jge
mov
stc
or
push
mov
dec
mov
jnp
cmp
sub
cld
call
icebp
arpl
or
xor
aas
clc
test
stos
ds
mov
jae
jp
pop
jge
push
pop
adc
test
or
repnz
negb
adc
sahf
sbbl
insb
cli
lcall
ret
movsb
inc
hlt
and
mov
xor
int3
lret
scas
shlb
mov
call
daa
cld
mov
mov
idivb
cmpb
xchg
mov
sub
sbb
movsl
sub
sub
arpl
dec
mov
fmulp
in
adc
adc
lcall
sub
push
lea
sub
add
xchg
xlat
imul
xchg
fwait
mov
js
xor
xor
ds
adc
mov
pop
mov
and
mov
pop
mov
dec
mov
inc
in
or
push
mov
stos
movsb
xchg
repnz
pop
ds
dec
insl
mov
push
inc
out
cmp
adc
ljmp
jecxz
repnz
jnp
enter
int
negb
jecxz
imul
cmc
nop
push
mov
aad
mov
mov
sbb
jecxz
or
into
jmp
mov
sub
outsb
mov
sub
add
faddl
mov
ljmp
jge
outsl
mov
mov
outsb
mov
add
lods
enter
out
das
mov
pop
xor
xchg
sbb
jo
insl
out
ss
mov
ret
cmp
imul
ss
sub
pushf
cld
andb
in
sub
stos
cmp
inc
cmpsl
sub
int3
nop
jo
outsl
cmpsl
sub
dec
pushf
cmp
inc
mov
mov
xchg
ret
jnp
cmp
lods
mov
lds
push
test
sti
xor
repnz
das
inc
sahf
shrb
ret
lea
dec
mov
push
mov
push
push
xchg
fcoms
fidivrl
adcb
movsl
repnz
int
imul
add
in
ficoml
xchg
cmp
adc
mov
dec
nop
cmp
push
inc
mov
ja
fidivrl
pop
sarb
dec
cltd
adc
mov
or
lods
repnz
jno
push
aas
jle
out
test
pop
jl
sbb
ret
mov
adc
adcb
pop
ja
fistps
outsl
mov
inc
xor
pushf
sbb
or
sbb
loope
add
and
cmp
in
cmp
rorb
mov
cld
lods
mov
cmp
sub
jae
and
inc
xchg
in
xlat
enter
cmpsl
jnp
pop
or
sbb
xor
push
push
dec
and
out
dec
push
sub
and
aad
mov
cmpsb
std
mov
ret
enter
fldt
shrb
loop
xor
sbb
xchg
pushf
outsb
lret
mov
loopne
fildll
and
loop
dec
fstp
in
sub
and
sbb
shlb
cld
test
scas
push
gs
jbe
movsl
cmpsl
loop
fstl
fldenv
adc
sub
cmp
adc
pusha
repz
jge
jge
mov
rol
adc
adc
movsl
sbb
loop
cmp
arpl
mov
stos
aam
popa
jae
mov
pop
hlt
xchg
loope
adc
sbb
jp
in
add
lcall
xlat
adc
mov
subb
xor
mov
xchg
mov
mov
sbb
aam
push
aas
aas
inc
arpl
or
and
add
dec
dec
and
push
mul
mov
or
jbe
ljmp
jl
xchg
mov
mov
inc
lds
mov
push
pop
insl
orb
xor
mov
inc
adc
mov
jnp
scas
mov
and
push
les
cmc
cwtl
dec
out
test
ss
pop
lret
mov
fcoms
dec
mov
sbb
insb
je
jmp
jg
and
insb
jmp
hlt
xchg
outsb
and
jmp
or
sub
inc
mov
push
movsb
insl
xor
subl
pop
xor
dec
jae
loopne
add
cmc
or
test
adc
shrl
sahf
push
js
mov
lret
pop
add
add
cmpsl
xor
fcmovnu
or
adc
mov
lea
xchg
clc
pop
sub
clc
clc
inc
mov
push
hlt
inc
push
xor
aam
jb
outsb
xor
mov
sahf
mov
fwait
imul
mov
add
fdivrl
adc
pusha
sbb
test
xchg
sbb
and
mov
xchg
out
pop
and
leave
mov
mov
inc
js
or
mov
pop
sub
jmp
and
cwtl
dec
lret
fbstp
jae
inc
add
cmp
aaa
lea
xchg
test
mov
in
imul
jns
in
sti
call
dec
mov
sahf
cmp
icebp
aaa
push
mov
xor
sbb
or
test
pop
xchg
jo
leave
or
pop
cld
data16
stc
es
xchg
sbb
mov
inc
or
xchg
das
mov
adc
xor
jnp
adc
mov
or
testb
out
insl
push
fwait
icebp
enter
jl
out
jp
cmp
daa
add
fildl
dec
movsl
and
sbb
inc
lea
pop
push
into
cmpsb
jbe
xor
and
test
xchg
xchg
push
push
je
ljmp
sub
adc
rcr
repz
repz
ds
cmpsl
mov
mov
pop
jmp
pop
stos
mov
filds
je
subl
fdivs
je
xor
pop
aaa
out
pop
mov
pop
or
gs
push
cmp
adc
pop
adc
enter
xor
lret
jecxz
or
push
clc
int3
popa
negl
and
mov
arpl
insb
and
cmpl
mov
inc
adc
jo
ljmp
repnz
xor
pop
inc
push
clc
sub
repnz
cmpsl
fsubrl
push
lods
mov
repnz
adc
xor
jecxz
popf
data16
ja
pop
testb
stc
iret
pop
test
or
ss
aas
popf
stos
xor
imul
lcall
pop
mov
shrb
sub
mov
jne
idivl
fimull
xchg
pop
pop
ftst
lret
aas
fldl
out
stos
rolb
xchg
iret
je
mov
mov
in
and
cs
jns
jmp
aam
sub
lahf
sbb
lock
mov
outsl
outsb
loope
or
lock
ss
roll
rclb
sub
or
fisttps
sbb
lods
pop
int3
in
mov
pop
and
xor
cmp
stc
loope
lds
dec
jno
add
roll
ret
adc
jmp
jne
leave
pop
test
scas
int
rolb
add
js
sahf
movsb
aam
add
sbb
sbb
in
test
or
rolb
fldt
ffree
push
in
xchg
inc
push
adc
cltd
repz
push
add
pop
inc
test
ffree
mov
push
nop
in
and
sbb
inc
stos
and
pop
mov
lock
fnsetpm(287
sti
sbb
adc
cmpsb
jp
leave
sti
movsl
ja
mov
push
ss
stc
mov
gs
jno
lods
xchg
leave
cli
push
dec
mov
lret
das
out
inc
hlt
dec
pop
leave
popaw
cmp
out
in
jle
mov
mov
test
cmp
ds
rol
jno
nop
ljmp
into
shrb
jecxz
push
pop
ljmp
mov
shlb
sub
rorb
shlb
fmuls
aam
mov
lods
push
sub
stc
pop
pop
bound
or
int
sub
jmp
mov
inc
outsl
in
xor
adc
std
push
repz
pop
cltd
das
mov
roll
popf
sbb
ss
nop
push
lock
hlt
mov
lahf
xchg
cmp
mov
cmpl
icebp
jno
sub
pusha
rorl
mov
out
or
in
sbb
out
mov
mov
es
movsl
and
xorl
movsl
xor
sbb
mov
mov
call
scas
es
clc
push
jno
call
and
pop
sahf
push
out
push
mov
mov
mov
mov
cs
mov
out
xchg
jns
adc
adc
sub
mov
cmp
rorb
daa
pop
dec
shrb
into
fstps
out
xor
lret
jmp
push
test
pop
stos
mov
sbb
fsubp
xor
jno
jge
fmul
lds
sti
test
push
jle
push
rcll
mov
fnsave
xchg
loop
mov
adc
out
dec
add
dec
scas
adc
dec
push
jmp
addr16
das
cmc
mov
xor
popa
pop
dec
ja
or
sub
ret
inc
addr16
popf
xor
call
imul
adc
in
cld
std
repz
mov
movsl
sbb
leave
pop
pop
mov
or
fidivs
inc
divl
mov
fisttps
loopne
xchg
dec
adc
or
xchg
ds
or
jo
inc
fisttpll
xchg
fwait
idivl
repnz
aas
roll
in
add
fdivs
mov
jnp
ret
popa
test
dec
test
test
jmp
outsl
mov
adc
cli
xor
and
ss
arpl
fsubs
clc
xor
sbb
mov
cltd
hlt
stc
or
out
mov
push
repz
les
xchg
mov
push
or
pop
sbb
pop
inc
adc
push
push
xchg
sub
cmp
test
repz
out
clc
sbb
inc
or
lods
aam
addr16
std
mov
out
inc
cmp
cmp
add
sbb
mov
push
loopne
in
adc
in
cmp
sub
addr16
imul
movsb
dec
mov
scas
in
pop
push
dec
rcr
hlt
mov
idivl
in
mov
stos
pop
or
inc
xor
push
xchg
lods
dec
les
xchg
add
mov
jbe
jecxz
xor
mov
or
sarb
cmp
cltd
dec
popa
bound
cli
push
lcall
cmp
divb
jl
test
sbbl
mov
push
neg
stc
jp
jb
repz
fwait
or
adc
sbb
inc
add
cld
rcl
xor
and
mull
jnp
push
sub
or
cld
or
push
outsb
mov
push
add
dec
out
xor
insl
mov
inc
test
pop
mov
mov
scas
cmc
pop
xchg
les
hlt
das
fwait
ja
jne
cmp
xor
loop
roll
stc
push
nop
xchg
mov
cmovae
lock
push
jb
popa
xor
movsw
outsl
rolb
push
cmp
jg
sbb
mov
and
dec
push
xchg
nop
ret
xchg
jmp
loope
mov
lds
pop
lret
pop
out
aad
sub
mov
popf
fstl
outsl
jbe
call
push
sbb
cli
sbb
fidivrs
stc
mov
dec
pop
aaa
cmpsb
adc
scas
xor
fiaddl
int
hlt
aam
adc
pop
jl
jb
cmp
mov
pusha
out
sub
push
rcr
cmpsb
sub
pop
add
xlat
test
out
add
inc
pop
jmp
sahf
enter
loopne
je
jge
push
or
daa
loop
mov
and
xorl
inc
dec
arpl
jmp
mov
loopne
xor
mov
cmpsb
lret
push
inc
mov
ret
je
and
sbb
jmp
stc
stc
ffree
adc
or
insb
dec
iret
mov
sub
mov
or
xor
fsubl
adc
and
xchg
jp
imul
out
push
sbb
adc
pop
pop
fadds
int
dec
nop
push
cmc
sub
sub
cs
jne
adc
adc
and
sub
and
loopne
mov
adc
out
sbb
idivb
lock
mov
ret
pop
int3
mov
pop
sub
aas
stos
cli
mov
jbe
loope
sbb
nop/reserved
adc
shll
mov
pop
jns
iret
ja
cmpsl
test
lods
push
inc
and
sbb
mov
test
add
jns
mov
mov
adc
int3
mov
hlt
adc
and
push
inc
mov
les
lcall
xchg
inc
mov
mov
xchg
sub
xchg
bound
inc
arpl
outsb
test
ficoms
iret
lahf
lods
int3
stc
xchg
pop
fcomps
scas
lcall
jbe
mov
push
jae
dec
push
sarb
xchg
sub
cltd
ljmp
fs
decb
lock
add
lret
dec
repz
subl
push
sub
push
shl
rcll
inc
push
test
nop
xchg
cmc
rcr
jle
or
mov
mov
lods
std
notb
je
daa
or
shlb
ss
fstl
scas
dec
lds
jecxz
add
out
scas
clc
lcall
insb
out
mov
lock
or
adc
mov
xchg
in
mov
and
lea
inc
add
rolb
in
cmp
or
mov
int
fs
insb
aas
pop
gs
pop
sahf
lock
add
inc
cmp
movsb
adc
sahf
ljmp
push
es
push
cmp
xchg
cwtl
lcall
mov
movsb
inc
mov
xchg
inc
dec
cmp
inc
shl
inc
test
xlat
pop
dec
scas
push
fxch
jnp
jmp
notb
shll
jns
out
sbb
adcl
pushf
jecxz
mov
data16
sbb
lock
outsb
lahf
out
mov
ss
mov
inc
out
sbb
and
mov
mov
aad
fidivrl
decb
or
shll
and
jae
sbb
test
sbb
pop
sub
mov
pop
and
iretw
mov
adc
iret
mov
adc
stc
mov
pop
jae
ja
push
sub
mov
fmulp
lret
jg
and
jo
faddl
xor
fcoms
or
jb
cmc
mov
mov
dec
dec
and
push
stc
lods
insl
das
ja
jl
jb
add
js
ret
inc
les
mov
in
xchg
ja
xor
mov
loopne
ret
sub
and
testl
sbbl
xor
mov
pop
ss
inc
insb
push
push
outsb
mov
test
call
in
adc
adc
out
lcall
pop
lods
pop
icebp
adc
loop
and
inc
jle
in
scas
adcb
xor
xchg
jne
cmc
mov
push
pop
loopne
pop
adcl
loopne
into
in
bound
icebp
loopne
mov
and
repnz
iret
lcall
lods
mov
sahf
cwtl
jb
repz
das
add
jle
mov
enter
inc
pop
and
fdivrl
dec
jae
out
cmp
aaa
xor
outsl
in
and
pushf
and
jae
lods
or
adc
ret
sub
mov
je
sbb
ret
mov
adc
xchg
jno
in
xor
jecxz
jge
out
dec
cmpsl
inc
es
scas
loop
into
add
divl
dec
mov
push
jnp
or
bound
cmpsb
jbe
xor
and
mov
xchg
mov
add
and
push
adc
dec
jo
pop
subl
add
out
push
cwtl
push
mov
jns
lock
out
fcomi
test
clc
dec
mov
xchg
movsl
mov
movsb
pusha
stc
add
icebp
nop
bound
outsb
ljmp
push
std
std
push
xlat
adc
fadds
xchg
or
popf
inc
inc
imull
outsl
fwait
imul
lcall
out
fiadds
in
push
inc
xor
and
in
jbe
gs
pushf
es
push
pop
lret
push
lock
sub
jge
dec
mov
inc
fcmovb
sbb
or
mov
xor
push
popf
mov
mov
xchg
out
icebp
sahf
pop
cmpsl
jne
mov
or
mov
repz
mov
or
xor
fnsave
cmp
inc
sub
clc
fsubrs
sub
enter
out
ss
ror
dec
sbb
add
inc
push
addr16
lcall
push
mov
push
xor
xor
xchg
add
pop
dec
rclb
cmpsb
xchg
or
cmpb
adc
out
jle
imul
ret
iret
shlb
loopne
gs
mov
cmp
loope
jecxz
sub
push
and
sub
fmul
pop
sbb
xor
jge
xchg
cmp
sub
stc
testl
mov
push
ret
sub
rcrl
pop
jmp
adc
inc
js
iret
adc
leave
ret
loop
rcrb
sub
test
jne
mov
xlat
push
xor
cmp
pop
cmp
sub
pop
aaa
out
pop
data16
sarb
into
push
jb
test
xor
sbb
mov
or
leave
call
inc
mov
mov
ja
inc
ret
adcl
in
fs
pop
mov
mov
in
mov
insl
test
fistpll
dec
push
inc
adc
add
xorl
ja
xchg
inc
sub
lock
pop
add
shrl
ss
out
add
jl
fsubrs
imul
fstps
and
ret
cltd
mov
inc
lea
mov
loop
inc
sbb
cmpsl
insl
nop
mov
fmull
inc
xchg
ljmp
test
inc
jne
fstpl
movl
loop
inc
dec
leave
mov
in
mov
pop
adc
xchg
or
fs
insl
pop
pop
gs
es
jg
out
xchg
mov
mov
ret
lds
stos
sbb
idivl
daa
lahf
mov
mov
add
cmp
dec
and
je
orl
cmp
std
jp
test
adc
adcb
call
jo
arpl
xchg
cld
jb
push
repnz
fmulp
imul
mov
jp
std
sbb
xor
mov
dec
and
leave
cmc
imul
dec
loopne,pt
jecxz
fstpl
in
mov
jbe
imul
sub
mov
aam
cmc
mov
fcompl
cli
in
flds
insl
mov
cmp
test
pop
xlat
mov
pop
dec
popa
testl
gs
push
mov
scas
out
jb
cmp
scas
mov
sub
push
outsl
mov
add
mov
icebp
jno
mov
out
add
mov
or
adc
insl
cltd
mov
sbb
fcoml
outsb
pop
fstl
sub
outsl
sti
lahf
sbb
pop
or
mov
mov
sti
adc
stos
fxch
or
add
xor
sbb
leave
repnz
in
jbe
inc
iret
imul
mov
das
cltd
or
out
sar
jbe
xor
mov
mov
push
mov
pop
loopne
mov
aas
mov
test
out
jmp
xor
stc
cwtl
push
push
push
addr16
stos
into
lahf
dec
int
bound
push
sbb
out
cmpb
js
nop
js
add
xor
mov
xchg
push
jno
inc
test
xlat
out
fwait
rcr
andb
dec
loope
fwait
lret
sti
fs
movsb
sbb
push
fmuls
jnp
enter
daa
pop
cmp
lret
cmp
mov
add
hlt
cli
aad
inc
pushw
popf
sbb
les
imul
dec
xor
mov
and
call
adc
sahf
mov
adc
xchg
lcall
jge
adc
inc
fwait
mov
adc
and
lea
dec
in
aam
push
test
scas
mov
xchg
es
cltd
stc
mov
pop
mov
mov
mov
and
dec
subb
mov
pop
pop
lods
popa
mov
std
adc
mov
adc
pop
rcrb
cmpsb
insl
or
cld
movsl
push
push
sub
jnp
rorl
rcr
mov
addr16
push
jne
pop
dec
cmp
in
cld
mov
mov
lcall
scas
mov
dec
aad
aam
insb
daa
fimull
roll
shrb
sbb
mov
xor
pop
ret
aad
add
inc
add
js
int3
mov
popw
lods
sbb
xchg
cmpsb
test
enter
fbld
jg
adc
cmc
je
sbb
or
cli
or
or
aaa
push
mov
fldl
test
fsubl
pop
dec
cmp
data16
inc
pop
sub
nop
and
jmp
fisttpll
or
out
jmp
push
xor
inc
test
xchg
les
loopne
imul
cs
cmc
nop
dec
adc
adc
ljmp
popa
icebp
sbb
xor
call
sbb
dec
mov
push
mov
push
loop
add
jge
lock
cmp
lret
jne
shll
sub
mov
rcrl
push
out
ss
out
push
adc
xor
xchg
outsb
xchg
mov
adc
outsb
mov
stc
or
cs
cmp
xor
dec
fcoms
mov
aad
jge
push
add
cmc
sub
mov
lahf
in
pop
mov
icebp
adc
xor
push
jle
mov
or
xchg
mov
std
jp
enter
inc
imul
xchg
or
cmp
push
jmp
jbe
addr16
loop
adc
dec
ljmp
scas
lock
lock
sbb
xchg
leave
fistpl
xor
push
or
dec
xchg
lahf
inc
daa
test
das
and
and
jo
pop
sub
popa
mov
dec
push
movsl
and
sub
ja
jg
sbb
inc
sub
into
jmp
pop
je
pop
outsl
imul
aaa
and
ret
add
loopne
cmpb
sub
icebp
mov
adc
sub
jno
sub
jbe
mov
sbb
mov
pop
cmp
mov
fistl
dec
xchg
aas
pop
inc
out
jb
fwait
andl
pop
adc
and
push
mov
or
nop
loop
js
ljmp
jns
sti
test
shll
ret
popf
xchg
out
jecxz
out
pop
not
mov
imul
push
mov
add
in
sbb
int3
out
xor
shlb
mov
sbb
out
movsl
jmp
add
jmp
xchg
mov
dec
rolb
inc
cwtl
push
fdivl
aaa
rcll
cmpsb
insb
inc
cmc
std
cwtl
sbb
jbe
out
into
jmp
mov
cmpsl
xor
loope
adc
imul
sub
xor
flds
dec
pop
pop
rcll
dec
mov
mov
push
push
sbb
push
push
test
cmpsl
xlat
fsubs
cmc
jne
fsubrp
mov
addr16
mov
xchg
cmc
ficoms
sbb
fsubrs
mov
jbe
cmp
mov
xor
in
push
dec
pop
jp
jecxz
mov
pop
outsb
scas
pushf
dec
push
cmc
jmp
mov
mov
dec
mov
lcall
or
fisubs
es
enter
lret
dec
rcll
mov
pop
stc
xor
mov
pop
imul
xchg
aam
fldl
test
aas
and
fs
inc
pop
sub
push
jge
pop
and
and
cmp
fisubrs
jno
adc
xchg
ja
lret
orl
xchg
sbb
and
sub
leave
mov
inc
pushf
pop
jl
in
out
pop
sub
scas
test
adc
mov
out
ds
sti
push
and
cmp
pushf
sti
test
and
push
and
or
jmp
lahf
popa
jge
repnz
in
rorb
xor
out
addb
fdivl
test
mov
imul
inc
jne
mov
mov
jb
sub
popf
adc
jne
mov
sub
mov
pop
adc
out
pop
movsb
adc
test
adc
cmp
test
lahf
jge
mov
cmpsb
mov
pushf
cmp
pop
pop
inc
xchg
xchg
inc
mov
adc
movsl
push
dec
cld
push
out
test
scas
stos
shlb
add
loopne
sub
into
pop
sbb
pop
inc
xchg
xchg
scas
pusha
rorl
cltd
inc
adc
sub
jmp
inc
pop
cmp
mov
orps
ss
sahf
mov
mov
inc
jne
imul
sub
call
outsl
mov
imulb
add
cmpl
and
gs
repz
add
popf
or
push
adc
in
xchg
rol
je
sbb
lods
cmp
or
mov
mov
das
add
adc
sarb
mov
dec
push
jecxz
insb
mov
inc
mov
movsb
mov
pushf
scas
ljmp
stc
enter
loopne
jmp
sub
stc
or
sbb
mov
fdiv
mov
push
shl
sub
fdivs
adc
jb
int3
ret
xlat
sub
ds
loope
mov
je
outsl
and
sbb
loop
in
inc
xor
push
push
mov
push
jg
faddl
aam
int3
out
xor
aaa
xor
mov
sbbb
fdivl
xor
pop
jmp
daa
mov
mov
mov
ss
gs
aad
arpl
push
xchg
imul
mov
mov
gs
fldcw
fidivs
bound
out
lea
loope
inc
mov
data16
pop
fists
mov
mov
les
in
in
shlb
aam
shlb
ljmp
repz
inc
jmp
stos
mov
out
or
mov
mov
jmp
mov
xchg
adc
mov
divb
mov
inc
in
jne
jbe
mov
inc
andl
dec
push
iret
std
out
cmp
pop
ret
cmp
fistpl
cmp
sti
add
lea
push
insb
rorb
cmp
xchg
mov
loop
jmp
mull
pop
cld
or
mov
pop
mov
and
nop
pop
lock
mov
mov
mov
cmp
sbb
imul
stos
xchg
es
xchg
das
cmp
out
pop
icebp
or
sbb
in
mov
imul
mov
lods
mov
pop
in
int3
pop
repnz
cmp
in
or
rcrl
scas
push
cmp
scas
pop
xor
dec
or
mov
or
ret
out
adcl
testl
outsb
lds
fldcw
add
dec
sub
cmp
sub
rcpps
clc
dec
loope
or
pop
in
pusha
mov
sbb
push
or
jnp
jne
fdivs
cmpsb
clc
cmp
sub
cli
imul
and
movsl
leave
mov
loopne
insl
pop
xor
xchg
imul
mov
rcl
pop
or
jns
inc
scas
lret
data16
outsb
in
xchg
sarb
rclb
mov
adc
sbb
push
gs
cmpsb
loop
ds
ljmp
pop
and
mov
lods
in
movsl
adc
push
inc
inc
cmp
mov
insl
push
mov
testl
fnstsw
popa
xlat
popl
insl
adc
aad
andl
insb
int3
mov
iret
cmp
dec
mov
pop
stos
pop
in
cmp
aam
add
xor
inc
mov
cmc
cmp
xchg
lcall
mov
mov
mov
dec
lcall
rolb
mov
jnp
fistps
xchg
leave
dec
jecxz
jns
jg
or
cwtl
pop
mov
scas
cmc
and
adc
test
js
push
mov
icebp
sbb
lods
mov
sub
mov
pop
xchg
sub
add
jp
mov
push
jno
jo
adc
addb
jp
xchg
push
lret
clc
jns
mov
jle
in
js
cltd
ljmp
mov
push
push
mov
into
int
fistpll
or
sbb
cmp
dec
dec
adc
fwait
push
pop
pop
sbb
daa
iret
sbb
sbb
xchg
in
inc
inc
dec
loope
xlat
mov
notl
cmp
insb
sub
int
pusha
inc
add
and
dec
negb
mov
push
movsl
fsub
jns
push
mov
sbb
mov
lock
and
je
int
popa
js
mov
jae
mov
mov
xchg
mov
repz
clc
jno
lcall
sbb
andl
push
inc
push
mov
movsl
mov
and
vmread
ret
cmp
in
sub
jp
cmp
sub
sub
sbb
jmp
sub
pop
cmpl
or
aas
xor
clc
in
cmp
and
fbld
push
test
or
mov
str
dec
push
dec
mov
inc
stc
push
or
xchg
dec
dec
ljmp
dec
rolb
jle
xor
cmpsl
stos
cmpb
adc
ret
push
pop
push
xor
fistl
ror
fs
dec
cmp
xlat
sbb
add
rclb
arpl
fdivr
adc
push
cmp
movnti
out
int3
es
push
adc
adc
xlat
insl
sub
dec
out
pop
xacquire
xchg
fwait
mov
ret
fucomp
lods
push
push
push
lods
sub
mov
jo
insl
scas
mov
add
mov
lcall
lods
nop
or
bound
or
jg
mulb
movsl
ret
sub
push
enter
shr
shrb
fisttpl
adc
mov
cmp
mov
lock
fstps
test
fsubl
and
cmp
lcall
popa
xor
sarl
mull
adc
or
cld
lods
add
std
test
jbe
iret
int3
repz
das
mov
sbb
xor
pop
cld
mov
xlat
cmp
sbb
xchg
push
jae
aam
cld
cmp
pushf
mov
or
data16
xor
jl
cmc
sbb
sub
frstor
outsb
popl
jg
or
jae
int
jns
outsl
pop
arpl
mov
lods
sbb
xlat
jno
push
mov
popf
dec
aaa
imul
fidivrs
pusha
mov
movsb
fnstenv
mov
adc
inc
std
inc
cmpsl
aam
fwait
sub
outsb
push
js
mov
bnd
cmp
xchg
ror
pop
testb
xor
lret
scas
jl
push
arpl
mov
inc
push
xor
fstpl
lret
ret
xchg
and
pop
sbb
sti
push
cltd
push
inc
in
cmp
and
popa
inc
jnp
jmp
inc
pop
std
push
aam
mov
mov
addr16
orb
mov
push
rorb
popa
mov
lods
pop
xor
sub
imul
jo
insb
fiadds
sbb
mov
xchg
pop
loop
dec
jnp
lock
hlt
adc
imul
mov
xchg
push
sbb
dec
popa
ja
xchg
enter
gs
pop
ljmp
in
pop
sbb
mov
fs
push
adc
adc
add
stos
enter
mov
fildll
icebp
xor
mov
data16
pusha
dec
mov
mov
shlb
call
out
insl
std
push
xlat
nop
stc
rorl
inc
cmp
xor
fdivs
jle
dec
enter
dec
ficompl
mov
cs
aaa
or
jl
notl
outsl
leave
inc
push
jg
xchg
lea
jg
daa
divb
pop
push
cmp
inc
fisubrs
inc
adc
mov
mov
inc
das
out
lcall
sti
add
add
or
mov
sbb
aaa
and
into
push
pop
lcall
xor
pop
add
sahf
dec
sub
call
sub
mov
loope
cmc
mov
and
pop
add
pop
movsb
cmpsb
pop
je
into
mov
nop
add
test
xor
xchg
add
xchg
ss
sub
dec
sbb
jmp
and
out
insl
add
mov
ret
mov
sar
xlat
or
testl
dec
gs
jge
xor
push
push
push
les
cmp
or
cltd
aas
add
mov
mov
rcr
scas
mov
hlt
add
inc
ja
sti
mov
rorl
adc
sub
cld
cwtl
pop
out
dec
xlat
scas
inc
ljmp
rcll
rcrb
test
mov
es
ror
xor
and
pop
int3
push
xchg
inc
inc
ret
pop
xchg
lock
xor
mov
push
out
mov
ja
cmpsb
lret
adc
aam
dec
bound
jae
gs
inc
scas
push
mov
fsubrs
pcmpeqw
iret
xchg
mov
and
repnz
aam
lret
xor
int
sti
popa
mull
and
in
inc
fs
jns
and
or
daa
ljmp
stos
jp
cmp
mov
xor
stos
js
jno
jecxz
scas
cmpsb
xchg
inc
adc
fisttps
shll
push
adc
xor
jg
ss
fcoml
jg
add
jb
enter
push
sub
test
cmpsb
pop
mov
lcall
mov
pop
jo
addb
jl
lahf
dec
loopne
rorl
mov
dec
stos
add
test
js
jp
lock
mov
mov
roll
in
rorl
je
lds
sub
insl
test
adc
pop
inc
lock
mov
incl
jg
xchg
in
mov
ror
nop
push
jmp
outsl
lahf
dec
xor
lea
sahf
sbb
cli
daa
xor
insl
adc
cmp
fwait
ds
rcrl
movsl
or
sub
popa
mov
dec
pop
loope
and
into
or
gs
mov
pop
cs
cld
xor
mov
repnz
aas
mov
into
mov
or
es
mov
fwait
mov
sub
xor
xchg
test
mov
mov
add
push
and
es
pushf
subl
insl
aad
daa
cli
outsl
lcall
sahf
gs
jb
xlat
jo
call
ss
pop
lret
insl
in
xchg
and
jmp
mov
jp
or
fwait
push
scas
mov
push
dec
lcall
mov
dec
xlat
ljmp
inc
and
push
cmp
pop
jae
test
or
push
enter
ja
push
jo
inc
into
mov
and
bound
std
jmp
dec
movl
pop
mov
js
pop
loope
pop
push
sbb
movsl
roll
fisubl
mov
sbb
xchg
pop
std
inc
lods
add
enter
nop
xor
mov
xor
jle
inc
push
dec
xchg
stos
cltd
daa
sbb
mov
pop
pop
std
cmpl
jnp
scas
sar
subl
mov
mov
notl
mov
iret
inc
test
nop
incb
mov
mov
xchg
cltd
lds
insl
sub
pop
sub
cs
sbb
inc
and
inc
fwait
stc
push
and
mov
iret
out
dec
scas
mov
dec
clc
popf
jbe
out
push
jnp
stos
push
pusha
outsb
movsl
in
aad
addr16
ret
inc
stc
inc
cmp
ss
and
movsb
bound
mov
in
pop
in
mov
sbb
outsb
add
enter
stos
cli
imul
xlat
scas
xor
xor
xchg
and
inc
mov
scas
cwtl
pop
or
lea
push
mov
lock
adc
or
icebp
mov
mov
mov
add
inc
imul
enter
pushf
xor
sbb
insb
inc
mov
sbb
aam
cs
jl
insb
xchg
push
add
test
cmp
jp
push
jnp
and
cmpsb
sbb
add
mov
cmpsb
xor
sub
ja
push
mov
or
and
inc
cwtl
jno
out
xlat
sbbb
imul
popf
paddd
sbb
les
or
pop
cmpsb
leave
mov
fwait
pop
jae
jne
dec
into
shrb
pop
push
cmp
fidivrs
xchg
push
fwait
das
fidivrl
test
or
out
fistl
lret
ljmp
inc
enter
adc
rorl
pop
out
roll
imul
in
add
jge
jle
xchg
fstpt
movlps
out
mov
xor
dec
add
lods
imul
xchg
shl
sarb
test
sbb
and
mov
std
xchg
and
imul
lds
ror
xor
subb
nop
aam
ret
xchg
cmp
decl
xchg
mov
in
cmp
inc
popf
jae
push
inc
push
cmp
xchg
insb
cwtl
lcall
xchg
out
inc
mov
ljmp
fadds
test
nop
mov
notb
xchg
dec
or
js
subl
imul
pop
sbb
add
outsb
push
fstpl
push
test
sbb
and
xchg
imul
mov
sbb
inc
xchg
and
mov
push
shrl
dec
and
fisubrl
xchg
mov
fnsave
pop
mov
mov
xchg
shll
add
push
jno
fistps
push
jbe
sbb
test
js
sub
mov
lret
and
and
jmp
and
push
and
mov
dec
clc
sbb
popf
jl
outsb
jmp
dec
mov
cmp
xorl
inc
xchg
out
clc
inc
jmp
sti
mov
loop
mov
repnz
arpl
out
std
mulb
std
fcomps
jo
push
mov
stos
mov
jb
mov
or
iret
scas
clc
cwtl
adc
sbb
aam
xchg
aaa
stc
adcb
mov
mov
clc
bound
inc
fstps
jo
insl
std
jecxz
sbb
cwtl
enter
jecxz
imull
mov
push
sub
cmc
bound
pop
mov
push
call
and
cmp
lea
sbb
dec
add
movsl
pop
daa
repnz
xchg
dec
fsubrp
sub
popf
jns
popa
in
in
mov
xchg
xchg
outsb
movsb
lcall
cmp
lcall
cmpsb
mov
inc
mov
test
mov
es
ljmp
aad
add
shr
mov
mov
fidivs
xchg
dec
aas
lods
jmp
adc
movsl
adc
and
stos
inc
pop
outsb
repnz
ss
imul
cmp
jg
insb
inc
jbe
xor
xchg
push
call
fwait
pop
jp
loope
ror
mov
adc
mov
lahf
mov
adc
jns
push
arpl
shr
repz
sbb
out
lcall
lods
push
lock
add
mov
mov
pop
mov
test
add
sub
or
push
and
mov
nop
push
xchg
xchg
aam
jbe
pop
sub
cmpsl
rcl
push
insl
inc
cltd
aaa
inc
inc
pushf
push
pop
outsl
jns
jle
xorb
lods
xor
in
int3
fwait
int
inc
xchg
int3
jbe
in
cmp
xchg
lret
fwait
sub
inc
arpl
add
sbb
mov
movsb
cmp
fnsave
xchg
iret
imul
push
jae
cmp
xor
mov
sbb
add
stos
push
test
mov
add
xchg
rcl
jb
fstl
xlat
out
mov
pop
cmp
sbb
fisttpl
aad
out
es
faddp
jle
inc
inc
and
add
cmp
imul
ret
sub
push
pop
insb
lock
orl
mov
adc
xchg
xchg
push
leave
inc
ja
into
mov
addr16
int3
scas
shl
test
iret
fsubrs
gs
or
shll
jl
cld
stos
cmp
dec
js
movsl
aam
xchg
repz
mov
movsb
aaa
mov
mov
push
test
jae
push
add
xchg
push
movsl
inc
scas
divl
pop
inc
push
inc
out
pop
cli
xor
push
xor
adc
hlt
mov
dec
cmp
push
gs
js
pushf
aam
jecxz
dec
mov
dec
enter
sub
push
fmulp
jne
xchg
adc
arpl
mov
mov
cs
xor
popa
dec
or
pop
mov
cli
sbb
xchg
aad
imul
inc
pop
xor
insl
inc
jne
jo
xor
scas
or
jno
push
pop
dec
adc
jecxz
sub
and
movsb
negl
push
sub
push
push
sbb
out
ret
fstps
cmp
sub
jb
jle
rcrb
lock
push
out
xor
cli
filds
jae
inc
jnp
in
jmp
shrl
fwait
jno
cld
hlt
adc
and
insl
lock
sub
pop
inc
ror
and
imul
dec
in
add
inc
aad
dec
push
gs
loop
fwait
out
mov
icebp
jnp
lret
aas
enter
decb
jbe
out
sbb
push
and
push
inc
or
fstpt
and
push
cmp
movsl
inc
mov
sbb
ret
sbb
lds
jl
pop
mov
xorb
push
gs
pop
lea
pusha
cmpl
xchg
in
jecxz
dec
dec
in
stc
fidivl
jmp
pop
sbb
mov
xor
outsb
or
je
icebp
pusha
mov
aaa
pop
mov
clc
sub
jns
pop
rolb
xor
sbb
test
mov
je
enter
lock
jb
push
inc
mov
enter
mov
mov
cmp
cmp
cmp
gs
lret
scas
stos
adc
in
push
xchg
int
xchg
add
rcll
cmp
and
stc
or
inc
adcl
test
sub
pushf
add
xchg
inc
stos
sbb
outsb
or
je
leave
or
or
jmp
push
sub
sub
sahf
push
dec
das
push
push
out
std
cmp
dec
je
pop
jecxz
push
mov
sub
test
rcl
insb
push
sbb
test
cmp
insb
pop
into
hlt
push
pop
adcb
adc
and
and
bound
or
fiaddl
and
or
test
aaa
xchg
jl
subl
test
mov
inc
jne
lahf
div
js
outsl
jb
aaa
xchg
pop
push
nop
pop
imul
xlat
mov
mul
xor
shr
imulb
sbb
lret
cltd
jne
std
cmpl
icebp
inc
cmp
lret
cmp
sbb
test
iret
pop
loop
js
push
scas
mov
dec
inc
out
dec
xor
jo
lret
cmp
lods
inc
lret
imul
les
imull
or
jae
aad
out
dec
mov
push
rcrb
hlt
push
outsb
test
adc
outsb
cltd
mov
imul
fcmovnbe
lock
test
mov
ret
mov
lea
mov
pop
mov
lods
xor
jle
rclb
pop
pop
dec
cmp
movsl
stos
sub
adc
fsubl
sbbl
je
push
xchg
test
idivb
nop
jo
mov
jge
mov
push
adc
cmp
jo
push
adc
into
mov
mov
test
and
out
fcoms
fildll
xchg
cli
mov
add
adc
dec
mov
subl
incb
mov
cltd
addr16
sbb
mov
add
imul
xchg
jmp
dec
mov
bound
and
testl
mov
into
or
nop
rorl
pop
or
cwtl
mov
ja
ds
jl
jge
pop
cmp
pop
xor
push
sbb
daa
push
sbb
sub
test
mov
jge
xchg
push
rorb
adc
jnp
mov
push
movsl
in
in
inc
or
leave
inc
in
inc
insb
icebp
add
repz
std
lea
adc
add
test
inc
stos
fistpll
mov
div
mov
loopne
test
push
jecxz
mov
sbb
jno
popa
ss
push
jmp
fiaddl
outsb
cmpsl
dec
aam
pop
das
jb
imul
cmp
jne
lock
adc
jo
aas
loopne
sub
adc
fstps
mov
adc
push
lret
adc
adc
xor
shll
cmpb
aaa
cmp
test
aas
cmpsb
sub
int3
pop
mov
cmpsb
push
xchg
jo
sbb
mov
fisttpl
add
or
push
xor
sbb
sahf
push
mov
lahf
clc
mov
addr16
nop
inc
lahf
mov
fcmovb
lods
data16
icebp
cwtl
push
scas
bound
shufps
push
lock
int
mov
xchg
sub
inc
lods
iret
lret
jmp
sub
pop
pop
xchg
jno
insl
push
iret
into
out
insb
fs
xor
jo
push
pusha
push
sti
in
jecxz
in
mov
mov
xchg
imul
cmp
dec
add
enter
push
push
mov
dec
xor
inc
mov
cld
mov
sbb
mov
push
scas
mov
fsubrl
xor
icebp
inc
inc
cmp
enter
jo
in
adc
pushf
jb
sbb
pop
mov
addr16
fdivrl
sbb
push
xchg
into
iret
jl
dec
xlat
pop
sbb
or
sbb
mov
mov
pand
xor
jne
rorl
or
jg
insl
cli
fldl
outsb
outsb
add
inc
pop
jg
hlt
or
inc
loope
mov
push
cmp
insl
loop
cwtl
std
mov
xchg
jbe
cli
shlb
lea
hlt
inc
inc
popa
push
push
or
leave
fcmovu
pusha
mov
shll
subl
js
in
mov
push
or
mov
mov
adc
pusha
jp
push
adc
mov
mov
shlb
frstor
xor
mov
pop
sub
mov
std
pop
movsl
push
mov
adc
dec
inc
mov
mov
mov
push
aas
push
xor
jmp
pusha
or
outsl
add
or
xor
cltd
xor
es
push
push
push
cli
sbb
xor
adc
sub
int3
rcl
sbb
cmp
out
sbb
lea
mov
mov
outsb
notb
xor
inc
jg
xchg
daa
pop
call
rcrl
cwtl
xchg
test
leave
fstpl
mov
or
push
sbb
jge
in
shrb
fisttpll
rcll
in
jl
movsl
in
jge
aas
push
stc
mov
cmp
jmp
ljmp
mov
jle
je
ret
into
jo
jno
xor
pushf
fcmovnbe
xchg
xlat
mov
lods
jno
insl
movsl
mov
jmp
iret
add
jne
xchg
rclb
les
fnsave
lods
add
mov
sbb
add
lret
jg
stos
imul
cld
mov
test
fstl
addr16
jg
push
sub
ror
out
mov
stos
ret
cmp
push
filds
push
adc
add
testb
inc
lods
lock
pop
out
inc
or
cmp
mov
push
adc
loopne
mov
xchg
call
xor
stc
aam
cmpsb
jne
jle
inc
scas
insb
push
fcmovbe
mov
shll
push
loope
add
cltd
mov
inc
add
loopne
mov
movl
call
sbb
xor
nop
push
insl
sbb
es
xchg
lcall
mov
popa
mov
mov
js
xor
and
xchg
add
mov
jl
in
jle
sbb
dec
bound
cmp
popf
es
stc
roll
clc
jle
aam
orb
dec
int3
das
ja
mov
in
xchg
add
shll
jnp
incl
pop
xchg
jge
roll
push
loop
dec
jge
jo
pop
icebp
jl
xorb
sub
mov
dec
scas
fstpt
pop
cmpsl
gs
sub
lods
inc
lock
test
adc
push
out
loopne
loopne
xchg
sub
push
push
int
pop
sub
sbbl
fcmovbe
sbb
mov
dec
repnz
and
ljmp
cltd
push
inc
out
sub
pop
into
adc
cld
cld
loopne
pop
xlat
push
das
fdivrl
lds
sahf
sbb
dec
push
stos
call
shrl
int3
cmpsb
hlt
inc
and
mov
sbb
ljmp
or
int3
xchg
cmp
lahf
ljmp
xor
or
pop
jecxz
sbb
adc
int3
cmpsl
or
adc
or
pop
xor
add
xchg
mov
mov
inc
add
sbb
ljmp
push
xchg
mov
outsl
fs
les
arpl
inc
mov
inc
das
mull
sbb
jbe
movsb
adc
or
sbb
mov
sub
adc
iret
scas
adc
push
sbb
adc
ret
xchg
xlat
js
lcall
ret
xor
imul
add
inc
cmp
loopne
push
fwait
mov
xchg
add
cwtl
sbb
cltd
xor
inc
std
dec
data16
gs
idivb
or
xor
jle
lret
mov
dec
test
fisubs
pusha
inc
add
iret
pusha
aad
jle
mov
inc
fsubr
cmp
rcrb
mov
ss
mov
mov
inc
daa
jl
xchg
mov
push
or
out
loopne
jp
std
jmp
or
in
dec
hlt
out
outsl
ljmp
jo
jg
in
and
jmp
fsts
xchg
pop
andb
add
aaa
sub
rorb
jns
jp
lea
mov
clc
jno
pop
jne
cli
js
xlat
adc
jae
iret
add
mov
push
icebp
les
hlt
stos
call
sbbl
in
push
ret
dec
pop
mov
sub
aas
cwtl
arpl
mov
push
test
mov
jg
mov
jge
inc
int
movsb
sub
push
out
in
stos
mov
sbb
out
jmp
inc
jge
add
xor
arpl
stc
mov
outsl
cmp
dec
xor
inc
jg
mov
call
fsubs
lahf
pushl
aam
adc
sbb
cli
outsl
fadd
xchg
mov
pop
out
mov
add
push
adc
mov
adc
dec
pop
push
jmp
movsl
das
xor
sahf
xchg
dec
dec
lret
pop
stos
or
insb
adc
nop
adc
icebp
cmp
cmp
jmp
xchg
inc
fcompl
in
fistl
test
or
pop
int
ret
jge
dec
loop
std
dec
mov
in
imul
aaa
add
xchg
imul
xorb
cmp
or
movsl
mov
and
add
popf
cltd
push
hlt
and
xchg
and
push
mov
sbb
jge
js
and
movsb
and
hlt
xlat
cmpsl
sbb
bound
or
mov
sarb
cmpsb
add
adcb
in
mov
cltd
and
jmp
test
adc
shr
dec
fidivl
dec
outsl
hlt
and
add
test
pop
aaa
mov
adc
ljmp
repz
pop
int3
pop
cs
mov
adc
popf
push
sbb
xor
sbb
sbb
jb
add
out
test
pmaddwd
pop
mov
add
push
sbb
jne
inc
adc
sbbb
aad
sbb
adc
cmp
data16
jp
pop
xlat
pusha
int
fstpl
hlt
movsl
and
int3
mov
mov
xor
movsl
add
mov
adc
or
fisttpll
test
movsb
add
movsb
ljmp
popa
in
adc
adc
lds
test
clc
shrb
jb
hlt
push
add
or
xor
fldl
in
rcrb
dec
jns
imul
xor
jecxz
loopne
mov
pcmpeqd
push
or
add
xor
in
add
subb
addr16
lds
scas
mov
push
xorl
inc
icebp
lods
loop
cmp
andl
fwait
loopne
xchg
out
mov
idiv
gs
aaa
hlt
scas
mov
fstpl
push
inc
mov
gs
rclb
std
pusha
cmpsb
jle
lret
mov
and
or
loope
dec
xor
or
jns
imul
stos
mov
mov
or
push
out
xor
or
xchg
push
movl
out
xchg
sub
test
movsb
test
imul
mov
cld
add
xor
in
jb
bound
jecxz
cmovno
xor
mov
stos
pop
jle
movsl
or
aad
mov
cmp
pop
data16
imulb
sub
xor
ret
add
lret
xchg
lea
jbe
adc
test
add
xchg
call
es
aad
jmp
mov
inc
popf
sbb
movl
mov
idivl
bound
test
out
test
movd
xlat
in
ljmp
jbe
and
sub
mov
iret
das
and
and
pop
dec
or
lret
lock
cmp
jmp
push
fstps
loop
dec
testb
mov
les
in
push
push
or
cwtl
loop
jg
aam
dec
push
inc
mov
cmp
xchg
mov
out
cmpsl
push
adc
push
imul
imulb
push
mov
xchg
mov
mov
pop
sbb
repz
outsb
enter
cmp
xchg
sahf
cs
add
xchg
pop
mov
adc
stos
fcompl
push
outsl
dec
leave
aam
mov
ret
ja
jne
mov
lret
sbb
stos
lods
js
std
not
hlt
cltd
jne
xor
clc
rcrb
call
sbb
test
test
fildll
fwait
pusha
mov
stc
popa
cmp
pop
sti
xor
inc
arpl
leave
bound
aad
mov
xchg
popf
add
scas
fst
push
mov
fwait
xchg
sbb
jmp
jge
ljmp
lea
mov
pop
mov
out
dec
pop
divb
dec
dec
sahf
sbb
jno
sub
hlt
das
out
loop
xchg
int3
out
and
sub
pop
pop
adc
push
mov
cmp
out
fsts
inc
stc
shrl
dec
jl
aad
jb
dec
arpl
jmp
xor
scas
imul
repz
shr
mov
add
out
test
popf
cmpsl
push
mov
sbb
and
imulb
mov
lahf
ror
es
repnz
mov
lret
je
in
pop
testl
nop
mov
fnsave
jmp
lods
xor
sub
int3
mov
dec
imul
loope
jno
cltd
or
insl
push
aam
add
jg
mov
or
in
fmuls
cmp
fistpll
or
decb
sbb
enter
inc
fcomps
mov
fdivrp
test
inc
stos
jp
popf
mov
lcall
push
fsub
adc
js
aam
sub
stc
addb
int
repnz
mov
mov
mov
repnz
test
jecxz
and
pusha
into
pusha
xorl
or
idivl
jl
lock
inc
push
lods
adc
inc
sub
xchg
mov
xor
pop
sub
mov
std
repz
jmp
dec
shlb
pusha
pop
and
leave
lds
add
mov
mov
gs
out
mov
ja
adc
cs
enter
js
sub
mov
jbe
mov
jno
push
mov
or
insl
sbb
enter
cli
sbb
int3
out
push
enter
mov
pop
lods
xor
or
ret
xor
adc
cltd
inc
pop
js
cmp
inc
ret
dec
test
push
pushf
or
ret
dec
mov
xchg
sub
enter
ldmxcsr
sbb
inc
pop
fld
frstor
out
jmp
cmpsb
mov
mov
in
bound
and
mov
je
je
adc
hlt
das
xchg
dec
or
and
cmpsb
jno
sbb
mov
daa
mov
lods
stc
mov
shlb
sub
inc
sub
inc
mov
xchg
push
lahf
repnz
sub
and
pushf
sbb
xor
fcmovnbe
xchg
mov
mov
cmp
xor
sub
cld
in
ficoml
lret
mov
in
xchg
adc
ljmp
fcmovnbe
mov
inc
mov
jne
or
pop
mov
cmp
push
sub
insl
outsl
pop
lock
in
pop
sub
rcrl
ljmp
popf
pop
imul
fimull
push
mov
dec
xor
mov
jbe
iret
dec
xchg
sbb
mov
ret
mov
roll
dec
add
sets
lahf
cmpsl
fs
jo
gs
icebp
jo
stc
sub
inc
fistps
pop
pop
add
mov
in
mov
imul
xlat
mov
nop
sti
push
sub
xchg
mov
test
testl
add
imul
mov
scas
call
hlt
mov
inc
cmp
jle
sbb
dec
in
pop
les
fs
rorl
fwait
and
shrl
data16
mov
xor
and
testb
xchg
xchg
pop
loop
enter
dec
xchg
cmp
adc
lcall
shrb
inc
add
ret
icebp
sbb
mov
test
or
xor
or
ja
lods
xchg
ds
add
fisttpll
popf
leave
bound
scas
ds
ljmp
gs
adc
stos
sbb
cltd
shrl
mov
mov
xchg
sub
pop
clc
lret
push
dec
push
and
icebp
and
test
data16
push
adc
fst
sbb
mov
and
push
fldenv
or
add
mov
imul
dec
add
inc
in
out
push
arpl
push
cmpsb
test
push
xchg
sbb
xchg
lods
aad
sti
lock
mov
js
mov
dec
mov
pop
rcrb
lods
mov
sbb
or
or
outsw
mov
jbe
rcll
jne
out
push
xchg
sbb
add
push
inc
ja
nop
iret
test
nop
xchg
xchg
cwtl
add
sahf
lret
inc
das
pop
xor
adc
sahf
pushf
jb
sbb
jbe
xorb
fdivrl
sti
daa
pop
ds
adcl
sbbb
mov
push
cs
das
pushf
pop
gs
outsb
mov
xchg
or
dec
lret
lret
and
fs
adc
test
xchg
test
push
xchg
xlat
scas
outsl
pop
mov
xor
inc
xchg
push
stos
pop
sarb
fisubs
cmp
insb
pop
sub
fisubrs
xor
test
xchg
lods
arpl
fbld
pop
or
jnp
ffreep
xchg
add
repnz
pushf
push
lcall
sbb
lret
push
xor
cmp
push
enter
adc
dec
mov
inc
inc
sbb
mov
mov
ret
push
jge
call
push
sub
push
in
sub
movsl
loopne
stos
xlat
aaa
popa
pop
cmp
rolb
movsb
out
das
and
pop
rol
mov
call
dec
push
pop
pop
pop
stos
mov
pop
mov
or
in
ljmp
xor
frstor
cltd
mov
sbb
ret
sbb
cli
js
mov
int
pop
lret
fldl
rol
and
addr16
and
fs
cmp
popf
in
outsb
cli
mov
sub
cmp
mov
rcrb
jmp
push
or
pop
test
dec
mov
mov
mov
mov
sub
xor
imul
ljmp
clc
pop
jl
xchg
xorb
call
aam
and
xchg
lahf
pusha
cmp
call
outsl
stos
filds
or
jmp
cmp
mov
call
mov
add
add
test
inc
mov
ror
sbb
sbb
and
sbb
je
cmp
sti
pushf
in
sbb
out
xor
pop
push
daa
add
or
cmp
ret
pop
add
fninit
repnz
lcall
dec
xchg
push
cmp
int
mov
lret
std
pop
scas
ss
and
mov
sbb
lret
nop
jg
ljmp
inc
jnp
js
out
push
int
andl
cli
mov
add
jmp
mov
jbe
inc
lods
idivl
mov
gs
mov
push
xorb
fwait
leave
sahf
cmc
sbb
push
add
cmp
cwtl
stos
cli
insb
aad
jo
call
xlat
add
sarb
sbb
mov
clc
mov
fwait
jae
pushf
dec
insl
sbb
fisttps
mov
cmp
jle
lcall
jp
add
xor
lret
loopne
les
and
dec
jmp
mov
movl
xlat
mov
cmc
pusha
or
int
pop
jns
ss
mov
mov
outsl
jne
adc
pop
call
ja
mov
cli
stos
stc
arpl
adc
xchg
clc
adc
push
fs
xchg
adc
push
in
cmp
xchg
or
in
add
cmp
dec
mov
cmpsl
into
fcompl
xor
cltd
jp
inc
xchg
push
jno
and
out
adc
push
test
cld
or
pop
push
fs
xor
sub
and
sbb
cmp
xchg
push
cmpsl
fildl
daa
xchg
dec
push
push
pop
into
mov
in
sahf
sbb
fsubrs
gs
mov
add
icebp
dec
jle
cmp
std
cmpsl
add
push
fdiv
push
sbb
data16
popfw
push
sbb
movsl
arpl
outsb
mov
sub
outsl
ja
and
push
ffreep
ret
and
in
cmp
cltd
ljmp
jo
ffree
sbb
and
sarl
adc
out
cmp
mov
pop
mov
sbb
mov
mov
push
es
pop
rolb
mov
notl
cltd
xor
push
dec
loopne
pop
aas
add
cmp
and
fcoms
xchg
sub
mov
cwtl
aaa
insb
push
pushf
mov
mov
clc
xlat
mov
pusha
test
mov
mov
xchg
sbb
addl
int3
jl
jmp
pushf
fdiv
and
inc
ljmp
lds
fildl
mov
push
push
test
movsb
stc
mov
jl
xlat
mov
and
mov
dec
push
push
mov
adc
or
and
jg
addr16
popa
call
ret
xchg
xchg
push
pop
xchg
jmp
push
adc
mov
pop
mov
andb
cmp
and
mov
xchg
movb
insl
jmp
aas
pop
jne
outsb
sbb
mov
push
jg
mul
push
sub
bound
jg
sbb
or
clc
jp
cmp
mov
pop
jge
mov
cs
cli
xchg
dec
test
inc
aad
std
mov
jo
idiv
pushf
cmp
es
mov
push
arpl
rcr
and
and
mov
nop
lcall
mov
xor
jae
mov
in
sub
js
xchg
dec
leave
sbb
mov
out
vshufps
loopne
fsubr
mov
subl
mov
or
push
je
test
cmp
lret
or
pop
je
adc
dec
fbld
popf
outsl
fmull
gs
leave
push
mov
and
mov
sub
mov
hlt
je
xchg
mov
movntps
jecxz
in
xchg
jb
mov
push
mov
pop
jp
fstl
adc
test
dec
mov
mov
push
or
xor
xchg
lahf
pop
push
sub
cli
imul
jae
mov
jge
out
xchg
ss
movsb
fstpl
sub
push
mov
mov
mov
xchg
jns
lahf
add
or
sub
push
mov
mov
fnstcw
stc
add
mov
xor
fsubr
ds
imul
xchg
insb
fcomps
adc
imul
out
add
inc
push
iret
ja
jmp
les
adc
loop
shll
sub
mov
jmp
shll
cld
mov
xor
or
dec
pop
xor
les
stos
push
sbbb
xchg
dec
push
test
cltd
enter
and
pop
pop
test
clc
testb
xchg
imul
shlb
js
dec
js
stc
movsl
push
imull
out
fs
jno
adc
mov
mov
je
pop
and
push
push
inc
mov
or
mov
addr16
sub
xchg
in
in
pop
lds
xor
adc
scas
pushf
fmul
popa
xor
add
pop
hlt
sarb
jno
jmp
fldl
or
pop
shrb
add
sub
clc
call
jbe
lret
test
arpl
push
outsb
outsl
adc
jl
jmp
adc
lahf
data16
mov
xlat
mov
push
mov
sahf
sub
jb
jp
jno
xor
pop
cld
outsl
jge
mov
push
and
lods
or
nop
add
in
sub
dec
outsb
aam
lahf
sbb
dec
adc
mov
mov
daa
jge
or
and
jae
enter
mov
pop
add
scas
repnz
adc
and
push
jmp
sbb
lret
jmp
lcall
pusha
push
aaa
out
adc
xchg
inc
pop
leave
adc
aaa
call
out
cli
mov
cmp
adc
fcmovbe
movsl
xchg
dec
lret
int3
pop
xor
mov
nop
sub
fmul
and
scas
pop
test
loope
imul
std
lods
inc
xchg
jnp
fsubrp
rorl
mov
adc
mov
push
jle,pn
xlat
out
dec
rcr
stos
shl
lea
xchg
shll
jg
dec
nop
jg
pop
lcall
jmp
lods
cmc
cs
out
mov
mov
xchg
mov
mov
cmp
dec
pop
lahf
cmp
pushf
sbb
imul
cltd
jle
in
ret
pop
xor
inc
add
push
jo
int3
rclb
pop
add
ds
pop
mov
inc
test
shr
fldt
mov
push
cwtl
mov
xchg
sahf
or
stc
or
insl
mov
jecxz
xchg
mov
aam
movsb
jp
jae
lret
std
roll
pop
mov
cmp
push
sar
fadds
pop
jmp
iret
mov
lods
sti
sub
in
pop
aad
lea
xchg
addr16
jb
lock
jo
or
gs
and
xor
addl
fisubrs
int3
addb
aaa
in
jae
pop
in
ret
cmpsl
xchg
js
test
lds
into
mov
fcomps
inc
mov
jbe
add
push
lock
pop
pop
jnp
cld
xchg
enter
xchg
int
cmpsl
or
lahf
scas
cld
jbe
push
sbb
loop
stos
enter
insb
imul
gs
cs
push
inc
imull
mov
in
jnp
pop
ljmp
cmp
add
loopne
inc
adc
rorb
aam
rorl
shrl
lea
insl
mov
dec
test
cmp
loopne
lods
cmp
test
test
jmp
xchg
nop
test
divb
cmpsl
in
clc
mov
aad
and
cltd
cvtps2pd
gs
gs
adc
inc
xchg
shlb
repz
or
adc
cmpsl
or
cli
ja
fistl
add
push
pop
jp
jmp
ja
and
movsb
mov
sub
jmp
sub
pop
call
fldcw
add
shll
out
mov
ja
dec
xchg
sub
les
sti
pop
in
imul
jno
xchg
sbb
inc
pusha
fwait
dec
mov
dec
je
fnstsw
or
incb
pop
lcall
leave
fwait
out
outsb
jg
xchg
xchg
push
das
mov
stc
jg
dec
pop
mov
stc
jle
into
pop
xchg
scas
rolb
sahf
mov
xchg
push
inc
test
outsb
xchg
les
add
xor
mov
lret
aam
minps
cmpsl
pop
inc
outsb
dec
sbb
and
in
push
mov
aas
pop
sbb
cmpl
xor
insb
scas
fstpt
mov
pop
push
std
outsb
lds
pop
ja
jmp
cmovl
push
add
mov
js
sub
in
fidivl
add
mov
stc
popf
sbb
push
mov
mov
mov
call
or
shll
sub
out
push
mov
iret
and
and
lds
pop
call
ja
imul
je
push
cld
fdivl
jae
loop
and
xchg
cmp
sbb
out
popf
and
clc
dec
inc
subl
sbb
push
cmpxchg
daa
rorb
scas
ss
int3
xchg
xchg
in
int3
cltd
sub
and
inc
mov
inc
shll
pop
ficoml
dec
adc
mov
aaa
outsl
mov
mov
or
data16
pop
jmp
aad
sti
xchg
xor
or
pusha
cmp
pop
dec
shrb
scas
inc
xchg
shll
xchg
imul
sti
andb
idivb
pop
mov
lret
int
sub
in
lock
sbb
scas
sbb
pop
xor
call
aad
pushf
cmp
cmp
cmpsl
fmuls
leave
jnp
mov
add
xchg
pop
in
xor
xchg
movsb
adc
andb
pop
push
aad
cmpsl
stc
cmp
sub
and
shl
inc
dec
inc
xor
pop
xor
pusha
test
dec
cmp
sub
and
cmc
es
xlat
repz
sahf
cld
xchg
mov
lret
jns
lcall
fiadds
imul
sarl
scas
in
fwait
in
add
in
push
mov
movsb
pop
stc
scas
jae
push
push
mov
pushf
inc
xchg
jae
cltd
sub
out
roll
scas
fisubrs
xor
fs
mov
push
push
pushf
stc
adc
scas
jo
test
stc
int3
in
scas
int3
movsl
hlt
imul
mov
pop
inc
stc
ljmp
cltd
mov
xchg
jnp
int
jns
adc
outsb
pop
dec
lds
or
mov
sub
pop
or
jb
imul
fdivr
mov
push
test
push
xor
sub
mov
test
call
out
clc
and
add
xor
lea
mov
je
or
out
cmpb
out
in
dec
cmp
xor
cmp
cmp
int3
mov
sbb
xchg
push
cs
mov
inc
push
lcall
inc
mov
mov
sti
scas
xorb
fmul
xchg
jbe
fsub
cli
rcrl
out
adc
xor
stos
insb
inc
ds
jo
fcompl
rcl
sti
cld
test
or
aas
adc
mov
out
ds
dec
push
sub
mov
mov
jl
adc
ds
data16
xchg
sahf
shrb
xchg
add
lods
das
mov
jge
add
stc
in
fcoml
push
and
into
and
xchg
inc
add
pop
lahf
cmp
into
mov
fnstcw
jns
cld
sbb
mov
lret
repz
jmp
js
xorps
test
add
xchg
jns
sub
ficomps
lret
jp
sahf
idivb
test
cmp
mov
popf
aas
repnz
pop
cmp
push
dec
loop
sub
scas
pop
mov
sbb
shll
adc
and
inc
xchg
mov
jb
xlat
xor
xor
dec
mov
mov
jno
cltd
scas
jb
cmpsb
int
mov
dec
sahf
and
cli
in
cmc
out
pop
dec
and
fistpl
cmpsb
pop
fldl
dec
xor
mov
ss
sahf
imul
jo
dec
test
jle
pop
test
mov
push
and
sbb
pop
movsb
mov
adc
or
int
mov
or
push
insb
in
or
or
sbb
adc
xor
das
jno
xor
repz
cmp
int3
data16
mov
xchg
adc
mov
or
movsb
pop
xor
jg,pt
sti
cmp
mov
jl
mov
roll
fbstp
js
ss
sub
pop
push
adc
mov
jp
call
pop
jb
xchg
mov
ret
inc
mov
mov
xchg
sub
adc
dec
test
add
mov
cld
out
orl
lahf
shrl
pop
iret
jae
mov
pushf
dec
push
test
test
lcall
mov
sub
add
lea
icebp
call
mov
gs
and
push
movsb
add
cmp
mov
pushf
push
cmp
sub
pop
xchg
out
les
adc
in
push
int
inc
add
pop
dec
xchg
adc
and
jl,pt
push
jmp
sarb
pop
or
hlt
fiadds
mov
idivl
jg
jl
cmp
or
mov
test
inc
bound
inc
sub
inc
data16
sti
inc
mov
xchg
adc
sbb
dec
cld
rolb
mov
adc
cmpsl
in
fadds
loopne
jne
pop
fs
test
fistps
xchg
aas
insl
je
push
xchg
outsl
jnp
mov
sbb
sub
sbb
mov
shl
test
add
or
mov
xchg
add
aam
mov
jg
mov
push
mov
push
add
xorb
xlat
xchg
mov
rcrb
jne
loopne
cmpl
pop
int
mov
jb
insl
imul
mov
fcomip
cli
dec
xchg
mov
movsb
cmp
fsubrs
out
imul
sbb
das
push
push
xor
jecxz
lock
repz
arpl
pop
stos
mov
scas
es
insl
ss
sub
cmp
inc
mov
mov
pop
pop
popf
dec
in
shll
mov
jle
test
aad
stos
fcmovu
push
aaa
outsb
adc
and
jo
js
xlat
xchg
imul
xor
mov
adc
cld
xchg
stc
jmp
inc
cmp
and
stos
stos
hlt
inc
fxch
cmp
mov
aad
gs
repnz
push
xor
fsubrs
icebp
pop
out
dec
xor
push
cmc
xorl
loop
lea
stos
pop
inc
sub
ffree
nop
sbb
jg
in
mov
ret
mov
fidivrl
pop
in
stos
sbb
rolb
pushf
mov
or
pop
mov
movsb
xchg
mov
and
mov
int
inc
or
sbb
sarb
ds
cwtl
push
mov
testb
mov
push
pop
push
cs
lods
mov
call
pop
sub
fs
xchg
jle
je
outsb
pop
mov
in
pop
cmp
outsb
adc
js
jb
xchg
xor
cmpl
mov
and
jle
or
ds
xor
addl
jge
pop
cmpsl
subl
mov
or
adc
bound
in
inc
pushf
or
mov
out
loope
pushf
pushf
xchg
dec
add
in
push
nop
test
add
jns
or
adc
rcrb
ret
aas
push
push
inc
cs
addr16
and
mulb
mov
jnp
cmp
mov
mov
inc
rcll
cmc
cli
mov
rcrl
push
jne
sahf
mov
add
push
ret
mov
mov
enter
sub
loop
mov
hlt
aas
mov
dec
mov
int3
mov
xchg
inc
enter
adc
dec
dec
dec
lret
dec
jl
xchg
adc
sub
add
push
out
mov
ficoml
mov
xchg
and
mov
inc
sub
push
daa
xchg
jbe
push
outsl
mov
mov
dec
lcall
inc
movb
jns
cli
xor
or
push
jle
xchg
cmpl
arpl
pop
imul
mov
push
mov
pushf
xchg
jmp
dec
daa
xchg
test
jnp
mov
sub
xchg
rclb
sub
sbb
mov
push
mov
xor
mov
jnp
sub
dec
repz
mov
adc
je
add
xor
mov
icebp
hlt
popf
sahf
or
popa
leave
movsl
jns
and
imul
or
push
adc
xchg
push
mov
lret
loope
mov
push
xchg
pop
ss
push
cli
cmpl
iret
daa
std
ja
popf
call
leave
sub
push
lret
xor
mov
dec
cmp
daa
mov
xor
sbbb
dec
push
sub
inc
sti
int
out
out
jns
in
sub
sbb
xor
xchg
xor
iret
rolb
cltd
test
dec
mov
mov
add
jmp
cmp
xchg
push
loope
inc
testl
adc
dec
xor
push
loop
mov
sbb
lock
nop
hlt
cmpsl
mov
lods
int
mov
or
outsb
daa
xchg
jp
ret
push
outsb
inc
pop
gs
adc
jecxz
push
data16
mov
push
xchg
add
inc
xor
test
in
lret
or
nop
sub
movl
jg
negl
rorb
test
lods
int3
test
lret
push
inc
loope
mov
cmp
insb
inc
push
sbb
mov
subb
std
imul
sahf
arpl
jp
jle
scas
push
mov
mov
xor
fisubrs
ret
dec
cmpsb
sbb
jecxz
mov
pop
aas
pop
adc
xor
cmp
movsl
imul
push
js
dec
lods
mov
pop
xor
stos
sbb
arpl
push
jg
repz
notl
fs
or
cwtl
pop
and
in
jnp
ljmp
lret
push
loop
pop
test
shr
in
out
cmc
in
ja
das
in
insl
add
je
cld
dec
xchg
cmc
inc
jg
popa
inc
cld
mov
into
push
popa
xor
ss
cmpsl
mov
loope
scas
pop
jo
aam
dec
out
xor
mov
xchg
or
lods
inc
stc
adc
movsb
pop
inc
dec
jae
sahf
setge
jle
xlat
hlt
jbe
rorb
stos
lret
mov
sub
lock
push
and
adc
lcall
add
sub
dec
pop
popf
test
mov
mov
add
pop
sbb
loopne
outsb
arpl
jno
inc
add
adc
fiadds
lret
mov
cwtl
xchg
repnz
cli
fwait
repz
xchg
push
pop
and
adc
test
sarb
std
mov
popf
fcoms
xchg
jp
lahf
add
or
sbb
loope
adc
sbb
call
inc
push
inc
shlb
pop
lcall
mov
dec
pop
fildll
pop
mov
push
dec
adc
aaa
in
cmp
fs
lock
push
cmp
push
xchg
mov
cld
outsb
filds
mov
das
adc
movsl
test
sbb
daa
or
lahf
cltd
dec
pop
jns
pop
mov
xchg
loope
push
pop
adc
inc
fabs
dec
in
fwait
add
mov
cmpsb
dec
add
js
out
hlt
xlat
mov
jb
push
out
xchg
sti
cmp
sbb
sbb
xchg
push
insl
push
mov
xchg
sub
cld
ret
inc
adc
cs
sbb
xor
out
mov
pop
je
fnsave
out
push
xchg
dec
sub
mov
add
cmp
add
sbb
mov
iret
js
xor
ret
aad
sti
imul
test
fs
dec
push
aaa
ja
pop
in
jecxz
insb
mov
aad
jne
push
scas
dec
xchg
mov
adc
fisubrl
mov
cmp
mov
leave
daa
cli
cmpsb
sub
rorl
dec
cmp
pop
rorl
enter
adc
push
mov
cmpsl
cmp
inc
popf
pusha
addr16
pop
int3
inc
push
setle
into
jl
dec
lock
cmp
sub
lods
mov
pop
jmp
std
stos
pop
pop
arpl
xor
jmp
pop
adc
repnz
dec
out
loopne
in
dec
cmc
dec
roll
mov
aas
pop
outsb
xchg
jo
pop
arpl
inc
jmp
xchg
stos
jp
cmp
addr16
mov
daa
out
psllq
mov
jecxz
enter
add
loopne
ret
enter
jecxz
je
lds
insl
mov
cmp
decb
jecxz
inc
sbb
cmpsb
jle
xor
in
mov
jno
mov
pop
insl
aas
jns
test
jb
inc
sub
adc
xchg
or
aad
inc
and
hlt
scas
push
inc
mov
xor
cmpsl
push
sarl
adcl
test
mov
sub
pop
push
xchg
cmp
jno
jmp
mov
push
imul
jbe
cmp
sub
mov
xchg
stos
pop
cli
jl
xchg
xchg
push
dec
in
sbb
and
aas
out
and
das
dec
fs
add
imul
xchg
mov
in
stos
adc
xchg
mov
xor
jns
and
test
int
push
test
ss
mov
pop
jge
pop
inc
mov
jge
pop
or
xchg
jmp
mov
adc
dec
adc
nop
mov
inc
shlb
daa
add
mov
mov
leave
mov
adc
mov
push
addl
inc
lods
and
sbb
fmuls
jne
in
fdivrs
adc
pushf
sub
and
jae
mov
jl
gs
push
mov
std
mov
mov
call
stc
pusha
loope
std
pop
push
jl
xor
dec
es
hlt
mov
jno
mov
mov
jbe
imull
inc
xchg
push
movsb
leave
and
rcrb
xchg
add
xor
mov
lahf
jbe
xchg
and
out
xor
je
sub
jle
cwtl
xchg
cmpsl
aam
popf
shrl
ljmp
js
bound
pop
mov
stc
xchg
cs
xor
pop
sti
mull
adc
vpshaq
jno
cmp
loop
or
and
or
ja
mov
es
dec
enter
or
loope
mov
inc
mov
add
cmp
sti
and
xchg
das
negb
mov
sti
inc
sbb
cmpsb
mov
test
push
stc
inc
pushf
sub
jle
xchg
in
jle
xchg
inc
mov
mov
or
sub
ljmp
sub
and
xchg
outsl
jo
add
lret
shll
jg
subb
lcall
xlat
push
inc
into
xchg
test
mov
fnsave
mov
pop
fildll
xchg
dec
adc
cmp
mov
addr16
sub
sub
aaa
aam
pop
rorb
cs
xorps
mov
inc
dec
mov
outsl
out
dec
insb
notb
inc
or
sbb
fbld
dec
push
movsl
dec
mov
xchg
out
pop
fcomi
pushf
icebp
repnz
insl
nop
adc
sub
shlb
dec
sbb
test
lret
out
jmp
push
xchg
sub
lods
arpl
mov
inc
mov
sub
lea
push
jae
popf
leave
fcomps
fs
les
ljmp
pusha
loopne
jns
outsl
mov
sahf
js
and
mov
adc
sahf
aam
loop
lds
das
add
test
cmp
inc
sbb
or
clc
cmp
xor
lds
imul
and
jmp
stos
push
adc
shlb
dec
pop
popl
mov
xor
stos
add
ja
lock
lds
adc
ja
mov
jae
repnz
popf
mov
inc
push
scas
gs
or
mov
dec
mov
mov
inc
xchg
ret
out
rclb
lea
jbe
cmp
ror
pusha
mov
scas
es
inc
cld
imul
add
mov
fstp
clc
outsl
ja
aad
lds
sub
and
xorb
cmp
push
push
arpl
push
push
mov
cmpsl
mov
xchg
faddp
cmpb
push
sbb
bnd
adcb
pushf
sarb
in
xor
add
daa
add
push
sbb
push
lcall
mov
mov
xchg
loop
mov
mov
aaa
aam
lret
pop
dec
xor
or
jmp
test
sahf
imul
adc
pop
xor
add
ljmp
movsb
push
mov
push
imul
inc
xchg
insl
xor
out
aad
loop
mov
test
push
fisubl
or
jns
xchg
shl
jno
push
jo
dec
mov
ljmp
dec
movsb
out
scas
dec
test
incl
repnz
sti
push
adc
int3
sub
sahf
lret
hlt
into
orl
ja
xchg
mov
lret
adc
xchg
adc
sbb
cmpsb
mov
adc
pop
mov
dec
sbb
mov
test
sarb
popf
enter
adc
mov
push
pop
je
clc
testl
xor
loop
xchg
inc
jne
fsub
in
or
icebp
adc
jb
or
pop
jg
inc
and
sbb
outsb
sti
sbb
mov
xor
cmpsb
xchg
lods
mov
push
mov
outsb
sbb
adc
test
movsl
cmpb
push
mov
or
outsl
mov
mov
push
iret
xor
jp
loope
and
and
fnsave
dec
std
xor
push
xchg
sub
stc
test
xchg
push
shll
daa
sti
fadd
dec
sub
inc
jbe
jmp
hlt
push
xchg
jmp
sbb
add
enterw
lock
mov
ja
nop
cmpsb
cmp
aam
outsl
stos
pop
jno
bound
xchg
dec
cmp
jbe
cmp
fnsave
adc
stos
inc
lret
das
call
iret
fucomi
push
mov
dec
cmp
fmuls
mov
mov
rcrl
ja
int
insb
jno
test
jns
inc
in
mov
cs
je,pn
or
fs
sti
add
jl
inc
sub
cltd
mov
mov
add
icebp
jp
pop
add
xor
xor
jo
leave
sbb
adc
ja
and
addr16
arpl
or
adc
push
lock
sti
pop
jmp
sbb
sub
mov
mov
push
mov
push
rorl
ss
aad
dec
cmp
popa
js
fisttps
jmp
mov
or
das
cmp
jnp
pop
or
bnd
outsl
sbb
cmp
lret
adc
fdivrl
insl
cld
and
loopne
adc
dec
movsl
jg
aaa
mov
pop
popfw
daa
cwtl
cli
jbe
push
cmp
add
mov
add
pushf
lods
jbe
jge
fdivl
scas
add
ljmp
jno
jnp
sub
hlt
jl
scas
dec
dec
frstor
xlat
adc
sub
addps
hlt
shl
mov
add
xchg
nop
xchg
and
scas
ja
cmp
adc
sbb
cwtl
add
mov
aam
je
mov
dec
add
dec
fdivrs
faddp
in
adc
scas
inc
aas
or
fwait
xor
int
out
in
pop
sbb
and
mov
mov
dec
cmp
scas
rolb
shll
and
mov
and
dec
push
data16
rcrb
sbbl
imul
push
test
sbb
jge
cmc
das
xchg
push
into
inc
dec
fnsave
call
pusha
pushf
insl
dec
push
jo
push
imul
jae
sub
mov
insl
into
in
int3
shll
movl
mov
mov
xchg
and
enter
call
jns
das
lret
jns
repnz
andb
and
popa
jnp
addr16
cld
and
or
ret
loop
add
mov
movsl
inc
xchg
push
cmp
and
bound
xchg
sti
xchg
aam
mov
fisubs
outsb
and
push
push
popf
out
rolb
jmp
cltd
jnp
int3
test
loop
mov
fs
push
popa
out
or
mov
xlat
adc
int
andl
pop
call
mov
nop
fs
das
xor
sub
fimuls
mov
out
int
push
in
lock
pop
push
inc
jmp
ret
mov
jg
lds
pop
addl
pop
xor
mov
xchg
sub
adc
les
xor
imul
rol
movsl
movsl
adc
stc
fwait
sub
add
mov
lock
or
mov
jnp
or
xchg
cmp
int
scas
and
notb
xchg
xor
rcll
sub
mov
popf
xlat
xchg
rcl
mov
mov
cmpsb
cmp
jp
imul
xchg
aaa
cs
icebp
aas
push
push
cmp
into
sahf
aam
adc
test
push
data16
and
insb
sbb
repz
push
sub
and
lret
test
test
out
mov
ljmp
mov
bound
enter
lods
into
cltd
mov
and
fdivs
xchg
inc
xor
mov
out
mov
xor
int
jae
cwtl
cmpsb
mov
mov
jne
out
out
inc
push
xchg
sub
pop
loopne
popa
dec
inc
ud1
xchg
fnsave
xor
in
gs
fstps
orb
and
adc
cmp
inc
fldl
gs
out
shrb
in
je
push
cmpsl
gs
loope
push
jecxz
add
popa
or
adc
xor
shlb
add
mov
addr16
push
lea
rorb
add
pop
cmp
inc
push
mov
shlb
aaa
loope
int3
lcall
dec
fmuls
imul
mov
scas
mov
imul
cmc
jo
int3
mov
test
enter
dec
lret
adc
mov
lods
ret
aam
mov
popf
aas
jl
mov
sbb
sbb
aas
int3
and
in
mov
xchg
ss
aam
cmc
fldcw
jg
jno
mov
cmp
adc
and
clc
adc
shrl
orl
stc
pop
inc
xor
mov
mov
mov
mov
andl
sbb
inc
aam
dec
inc
shl
adc
adc
cmp
or
xlat
das
lahf
jbe
xchg
jo
stos
stc
and
fdivrp
sti
sub
mov
sbb
movsl
mov
shll
lret
fs
shrb
std
mov
dec
js
adc
jo
cmp
js
aam
push
sub
loopne
mov
sbb
xchg
clc
stc
pop
dec
int
mov
mov
xchg
adc
sbb
cmp
xchg
pusha
setno
mov
test
mov
pmulhw
cmc
jns
gs
pop
les
pop
loope
lods
inc
add
je
mov
shlb
into
xchg
jle
test
inc
pop
ds
scas
leave
add
cli
cmp
dec
call
in
popa
dec
sbbl
dec
cli
faddl
sti
pop
inc
sbb
jbe
push
pop
push
int
pop
cmpsb
in
dec
pop
mov
mov
push
or
mov
gs
or
sub
lock
subl
int
jp
inc
aam
xor
fidivrl
dec
sub
cmp
push
daa
fisubrl
negl
xchg
ret
in
mov
jbe,pt
int
nop
sbb
jmp
cld
jle
iret
jnp
sbb
pop
inc
cwtl
push
ds
and
icebp
jns
mov
add
xlat
xchg
push
jb
jb
jmp
in
jg
sub
fnstsw
jno
xchg
or
stos
bnd
divl
mov
ja
push
adc
lds
repz
jecxz
or
test
push
or
outsl
scas
cmp
jge
add
mov
jle
dec
jle
xchg
or
dec
fs
iret
outsl
sbb
push
push
dec
sub
clc
pop
push
mov
adc
imul
push
jnp
adc
scas
popf
mov
sbb
xchg
jecxz
push
push
mov
mov
push
or
jl
addr16
mov
out
insb
sbb
js
jg
mov
pusha
push
pop
dec
out
mov
dec
or
sbb
pop
xchg
ficompl
mov
jle
ja
or
roll
cltd
cld
sar
add
sahf
out
pop
hlt
add
lret
xchg
cltd
inc
icebp
cwtl
push
icebp
pop
adc
cmp
pop
mov
les
mov
ret
dec
pop
outsb
sub
and
sbb
pop
stos
movsb
xor
cwtl
push
loope
xor
popa
clc
daa
add
push
aam
hlt
or
addr16
dec
mov
daa
push
movsb
or
rolb
cmp
rcr
mov
add
movsl
data16
mov
loopne
popa
and
sti
stos
and
add
js
cmp
mov
in
sbb
mov
dec
add
rcr
dec
ds
mov
insl
mov
mov
sub
in
dec
loope
notw
jne
jb
cmc
or
jle
push
jae
cwtl
pushf
sub
iret
xchg
push
inc
add
fsubs
fdivrs
std
and
mov
pop
cwtl
call
inc
mov
jle
xlat
stos
fistpl
sub
xchg
js
aaa
push
xchg
mov
fistl
pop
cmp
andb
aad
mov
and
je
push
sbb
lods
mull
push
xor
inc
insb
imul
ret
loope
pop
pop
out
test
ror
je
and
xor
push
lcall
sbb
ja
aaa
sbb
aam
or
ret
jns
sub
xchg
test
addb
dec
sbb
push
jb
loopne
mov
std
movlps
jnp
jecxz
and
movsb
enter
ljmp
and
pop
fldl
loopne
jbe
cld
cmp
lahf
arpl
cmp
pop
pop
mov
fdivp
or
push
das
push
sub
sbb
lcall
inc
cwtl
imul
xor
fcompl
cmp
xchg
stos
sub
in
jne
sbb
pop
mov
out
test
and
out
sub
sub
out
adc
sbb
clc
sub
repz
jp
xchg
in
lds
dec
mov
jmp
in
cltd
pusha
mov
mov
add
out
mov
bnd
or
test
aad
mov
pop
mov
jecxz
fnstsw
imul
xchg
xor
dec
xlat
cmpsb
pop
aam
jae
cmpsl
mov
mov
mov
out
push
fnstenv
mov
lods
stos
js
sub
mov
out
out
test
mov
and
movsb
cmc
out
sti
testb
loopne
jle
iret
and
fst
cltd
sbb
mov
fcmovu
sbb
insl
in
xor
lea
out
sbb
push
xlat
enter
and
xor
xchg
mov
and
sbb
stc
rolb
dec
lcall
in
xor
rorb
sti
push
adc
jmp
aaa
jmp
sbb
xor
cwtl
inc
push
gs
dec
loope
pusha
mov
sub
adc
jg
xor
addr16
aad
inc
lcall
fbstp
dec
lret
ss
xor
test
inc
pop
fcmove
add
sub
pop
xor
sub
movsb
lcall
fidivs
mov
fisttpl
push
jle
push
jge
negb
mov
lcall
rcl
inc
fwait
and
popl
pop
mov
leave
adc
outsb
xchg
jg
push
lods
cmp
loop
mov
xlat
inc
adc
sub
movsb
and
sbb
test
rcrb
and
mov
fldt
adc
inc
push
lds
imul
ds
shll
cmp
or
jg
xchg
rcrb
ret
and
faddl
outsb
out
mov
mov
dec
mov
mov
jb
ficoml
hlt
pop
scas
xchg
sbb
push
sbb
daa
add
stc
mov
dec
outsl
mov
mov
int
and
jbe
xchg
arpl
bound
mov
jmp
pop
cmp
add
mov
cmpsl
inc
cmp
jnp
mov
add
ja
int3
insb
iret
sub
dec
pop
cld
push
xchg
mov
popf
iret
into
inc
ret
xor
pop
jp
inc
push
jmp
inc
mov
jb
sbb
dec
cmp
ja
mov
adc
sub
xchg
mov
push
add
in
push
leave
lahf
xlat
push
pop
call
scas
xor
add
dec
jecxz
jno
push
loope
sbb
push
push
push
push
push
xor
xor
jno
mov
mov
in
cltd
sbb
mov
push
stos
inc
adc
in
addr16
push
add
sub
lds
xor
nop
adc
test
mov
enter
out
mov
dec
cmp
pushf
fidivrl
adc
mov
mov
insl
scas
les
xorl
imul
sbb
insb
ficoms
push
lcall
mov
imul
and
in
xchg
out
in
lret
push
int
sub
inc
adc
std
aad
mov
pusha
pop
mov
es
mov
jge
aas
or
les
xchg
mov
fidivrs
insl
push
enter
stos
mov
or
jno
jecxz
cmp
ds
sbb
fwait
mov
pop
pop
inc
sub
jge
add
xchg
fimull
xchg
xor
xchg
fabs
jmp
jp
adc
out
stos
into
jns
sub
and
adc
add
pop
cmp
xchg
cmp
cmp
push
dec
stos
sahf
dec
jmp
xchg
scas
add
flds
sbb
mov
push
sub
fldenv
and
fwait
stc
lods
movb
out
sbb
mov
lahf
mov
xor
dec
scas
sbb
sub
stos
cwtl
add
pop
fcoml
faddl
jno
jno
fnsave
xchg
mov
clc
scas
cli
test
lahf
xor
lods
popf
inc
les
lea
dec
add
jl
into
dec
jae
jnp
out
leave
mov
je
loopne
mov
fildl
inc
inc
sbb
outsl
jno
push
aas
aam
loope
cmp
xor
dec
jle
sub
xchg
jne
aad
xor
jge
call
out
xchg
into
hlt
scas
jno
jae
jl
lcall
push
pushf
outsb
dec
and
in
lock
xchg
ret
jbe
test
or
and
sub
mov
mov
xor
pop
mov
mov
pop
sbb
add
aas
je
out
xor
push
mov
and
or
or
xchg
es
mov
roll
pop
imul
mov
aam
addr16
int3
mov
cmp
mov
aam
adc
xchg
or
cmp
imul
cmp
lock
xor
fstpt
mov
loope
and
je
add
mov
jae
push
mov
mov
repnz
or
out
fildl
lds
xchg
shl
push
movsb
inc
dec
mov
popa
xor
imul
ds
push
mov
xlat
mov
cld
shl
add
xchg
mov
mov
cmp
lret
pop
aam
out
loope
stos
cli
mov
mov
int3
mov
iret
add
mov
jns
add
cmp
js
push
or
addr16
out
pushf
mov
cmp
dec
dec
clc
pop
sbb
inc
mov
jle
xor
cmp
into
fnstcw
xlat
xchg
les
mov
mov
fwait
sbb
jg
in
ljmp
loopne
mov
pmaddwd
stos
stos
sti
out
jae
fdivrs
imul
pop
sahf
and
jp
jno
mov
pop
jle
lds
mov
jecxz
jecxz
jg
sbb
xor
and
aaa
fsubs
mov
fwait
adc
int
scas
mov
not
jl
mov
jo
mov
hlt
add
jne
xchg
pusha
jnp
mov
cmpl
add
imul
pop
in
repz
mov
dec
lahf
ljmp
xor
subl
lcall
ds
sub
mov
sub
ret
out
add
dec
pop
xchg
cmp
xor
repnz
repz
pop
push
and
or
repz
inc
roll
push
sahf
jl
xchg
repz
inc
or
jp
loop
lret
sbb
sbb
and
xor
jns
call
or
movsb
pop
mov
dec
dec
adc
mov
push
out
shrb
inc
inc
fiaddl
and
jae
repnz
test
push
test
fcomps
lea
jle
outsl
popf
test
mov
mov
mov
cmc
sbb
fdivl
sub
fld
nop
data16
int
jle
fwait
and
sahf
cmc
popa
sarb
or
les
sub
frstor
test
adc
dec
in
test
adc
inc
xchg
call
jae
cmpsb
stos
leave
xchg
xchg
inc
sbb
jle
push
mov
mov
or
jb
sahf
int
adc
push
push
jno
ja
int3
add
push
sub
stos
movsl
or
divb
xor
mov
flds
sbb
movsb
pop
adc
push
push
jge
mov
and
fwait
subl
dec
add
ss
rcrl
mov
pop
pop
ret
mov
cmpsl
insb
xchg
mov
test
add
inc
and
lods
cli
or
adc
or
mov
dec
repz
sbbl
decl
lea
cltd
daa
add
dec
xor
fisubl
arpl
add
mov
lds
outsl
std
test
movsl
mov
xchg
shll
jmp
push
ficompl
sbb
pop
aas
jbe
push
inc
mov
cld
xor
mov
repz
repz
and
add
cltd
movsb
lock
daa
or
push
fldcw
xlat
fldcw
pop
pop
sti
mov
pop
and
mov
or
push
mov
in
shl
shl
jne
push
mov
out
vpunpcklbw
pushw
pop
test
push
adc
mov
popa
sti
test
pop
cld
fs
jo
lcall
push
xor
sub
in
into
dec
cmp
addb
xlat
mov
dec
mov
popf
clc
lock
cltd
add
loop
inc
out
es
movsb
jge
jp
pop
fst
xlat
out
or
lret
scas
sbb
aad
sarl
hlt
iret
mov
lcall
jnp
adc
sbb
insb
push
add
inc
jge
data16
push
imull
jno
aad
leave
add
inc
inc
jb
pop
dec
mov
out
fsubs
les
imul
xchg
movsl
xchg
sub
add
xor
jp
lahf
aaa
sti
cli
nop
adc
sarb
cmp
cwtl
call
jg
lret
dec
push
cld
test
jb
lods
imulb
pusha
insb
mov
add
and
xor
inc
fimuls
shll
hlt
adc
push
pop
pop
mov
or
mov
int3
gs
pop
fwait
dec
rcll
ds
xor
add
sahf
test
push
adc
vpsrld
adc
dec
mov
sub
or
mov
pusha
xchg
cmpsl
inc
fnstsw
loop
movsb
jmp
sbb
sub
or
xor
loope
not
add
call
sub
xchg
sbb
cs
test
or
and
lret
repz
jl
std
add
push
ds
mov
cld
xchg
pop
insl
hlt
xor
sub
loope
jbe
in
nop
jp
dec
sub
xor
clc
xchg
fwait
push
sti
push
movsb
loope
inc
push
cmp
lods
cmpsb
inc
les
sbb
jns
rcrb
inc
fildl
pusha
push
mov
push
out
pushf
xor
cmpl
fwait
cmp
xchg
push
pop
aam
xor
push
jbe
xor
inc
addr16
loop
dec
iret
sub
jmp
jbe
cli
jbe
jecxz
imul
mov
bound
mov
divl
inc
cs
ret
pop
jmp
mov
dec
inc
jecxz
subl
push
popf
bound
les
xchg
cmp
add
pop
push
add
dec
das
dec
and
inc
into
adc
cmp
ret
in
mov
sbb
or
cmc
xor
enter
mov
jp
in
xor
pusha
inc
mov
mov
popf
mov
push
inc
mov
cmp
xchg
lds
push
stos
nop
inc
cmc
mov
mov
lock
xchg
les
hlt
leave
pop
pusha
imul
addr16
push
cmpsb
cld
pop
pushf
fs
mov
push
push
scas
push
movsl
cmp
sbb
fbld
aad
call
mov
mov
xchg
xchg
rorb
fsubrs
ret
mov
lret
jo
push
les
xchg
pop
push
jle
bound
ss
mov
cmpsl
dec
dec
jecxz
je
pop
inc
ljmp
and
stos
push
jmp
xchg
and
sbb
movsb
aad
or
cmp
jg
dec
pop
cmp
pop
jb
aam
fists
adc
dec
outsb
push
lret
jae
push
rcll
mov
orl
and
divl
hlt
sti
pop
sahf
adc
push
sub
jne
mov
mov
ret
popa
lcall
cmpsl
lcall
cmp
fiaddl
jne
icebp
sub
lods
or
push
fistpl
pop
test
outsl
or
add
addr16
push
dec
push
and
sub
iret
dec
xchg
or
iret
fiadds
jno
leave
inc
pop
cmpsl
in
jmp
leave
cmp
arpl
mov
pop
enter
mov
pop
testl
out
sub
mov
lea
sub
xor
jbe
shl
mov
and
js
jp
int
pop
sarb
ret
pop
enter
fwait
add
fs
and
push
test
and
insl
notb
call
jle
das
inc
jo
jb
call
mov
sarb
fisubs
adc
sarb
sbb
das
adc
insb
inc
call
add
mov
inc
fbstp
icebp
jmp
shlb
idiv
sbb
in
xor
push
mov
lret
xor
cmc
sub
pop
sbb
mov
mov
fcoml
xchg
cmp
addl
mov
add
sti
sub
mov
jns
outsl
sbb
divb
jmp
inc
xchg
lret
lahf
mov
pop
repz
jb
cmp
mov
sbb
repz
test
mov
ror
cli
or
movsl
inc
aam
imul
test
push
cmc
push
mov
out
xchg
lret
bound
or
out
or
scas
mul
flds
mov
xor
inc
fldt
jne
inc
test
sub
out
mov
adc
mov
call
push
and
xchg
cmpsl
sbb
inc
test
pop
jno
fdivs
in
insb
cmp
sub
or
dec
mov
xchg
xchg
int
dec
xor
cmp
cmpl
aad
sbb
jp
sub
sarb
pop
push
push
adc
inc
mov
fwait
or
imul
xchg
jl
push
es
cltd
addl
adc
or
xor
std
clc
inc
gs
cmp
or
cmp
or
sbb
jbe
jle
repnz
lret
dec
ss
jnp
jl
dec
daa
inc
ror
pop
out
mov
adc
iret
mov
loopne
orl
jne
jns
out
xchg
or
call
pusha
into
sub
stc
outsl
and
cmp
pop
nop
push
inc
push
inc
fsubrs
mov
xchg
xor
pushf
mov
cli
xor
mov
inc
repnz
test
cld
pop
inc
pop
jbe
rclb
mov
jns
mov
aad
movsb
fcomps
xor
fs
fistl
iret
adc
je
jp
jb
imul
loopne
jno
or
xchg
inc
adc
push
and
mov
adc
lds
cmp
lock
nop
out
jns
push
loop
cli
xchg
mov
fildl
cmp
test
outsb
iret
sub
in
in
fadd
outsb
jns
push
push
xlat
clc
dec
shll
pop
cld
pushf
sbb
bound
movsl
pop
or
jecxz
push
and
call
and
lret
addb
call
test
and
daa
ja
jbe
jns
dec
pop
jl
sti
mov
int3
cwtl
ret
cwtl
jo
sub
std
bound
sub
inc
cmp
sbb
sub
mov
in
cmp
incl
xor
mov
adc
sub
test
mov
mov
jmp
shr
jb
in
mov
xchg
insl
jg
push
and
or
sub
inc
inc
nop
dec
lds
mov
mov
lcall
xorl
jne
dec
aad
aam
stc
adc
jl
test
and
in
inc
roll
cmp
xchg
push
into
add
mov
mov
outsl
sbb
pop
insb
sub
add
movsl
ffree
movsb
mov
and
ljmp
imul
js
push
sbb
add
push
in
insl
ficomps
push
mov
mov
sub
sarb
ja
out
sub
in
mov
mov
pop
mov
fcoml
and
sbb
scas
cwtl
addr16
xchg
xchg
dec
jg
rolb
xor
orl
dec
shl
sub
call
xchg
loopne
loopne
mov
and
pmulhuw
add
lret
movb
jp
ret
mov
push
xchg
mov
fmull
sbb
dec
imul
mov
iret
es
xor
enter
cli
bound
xchg
sti
mov
nop
popa
push
dec
pop
shrb
and
xlat
loope
ficoml
into
mov
ret
movb
test
cwtl
in
or
roll
stc
xor
adc
je
xchg
int
add
rorl
sarl
iret
dec
clc
sbb
pop
push
or
add
sub
clc
add
cli
jmp
sbb
pop
dec
lret
outsl
xlat
mov
imul
push
sub
or
mov
ret
push
pop
jbe
aad
test
xor
jmp
sarl
or
mov
dec
aam
cmp
cmp
in
call
es
test
inc
sbb
inc
and
std
hlt
test
lods
rorb
in
jb
js
mov
cs
inc
stos
scas
aas
jae
inc
mov
ja
add
rorl
pop
jb
mov
jl
iret
mov
test
mov
into
add
std
into
inc
mov
sbb
jp
orb
mov
mov
pop
mov
shl
stos
out
sub
mov
clc
sub
jae
lea
mov
fcmovnu
in
inc
jle
push
mov
jne
mov
pop
inc
jns
mov
outsb
sbb
add
mov
mov
xchg
imul
ja
xchg
push
xchg
sub
lods
cli
push
testb
into
ret
cmpb
fiadds
add
rorb
lea
cmp
add
bound
test
add
cmp
out
inc
or
jg
adc
out
mov
mov
test
sti
call
cs
shll
mov
test
cwtl
sarb
add
jbe
pop
mov
mov
leave
es
scas
inc
cwtl
rorl
xchg
jb,pt
jmp
addr16
ret
fsubs
cmpsb
mov
push
test
rcll
xor
mov
loopne
xchg
adcl
mov
jmp
sbb
sbb
cmp
in
add
out
cwtl
xchg
hlt
out
jmp
daa
push
scas
pop
fistpll
inc
cmp
ss
and
xchg
push
nop
fldt
add
cltd
dec
stc
js
jns
nop
jns
xchg
je
fmulp
into
sub
int3
call
ljmp
mov
sub
pop
out
pop
scas
jmp
das
inc
mov
jb
loop
fmulp
std
mov
mov
push
mov
or
mov
push
sub
lods
aad
test
push
jbe
xchg
mov
int
cmp
test
push
jo
adc
mov
pop
inc
jle
mov
rorl
lea
xchg
sbb
arpl
mov
adc
inc
or
adc
mov
iret
or
addr16
cmp
xor
movsl
or
popa
xor
push
test
pop
outsb
pushf
int3
sbb
inc
or
xchg
fst
cmp
sahf
cmpl
addr16
rorl
push
fisubs
mov
arpl
xlat
loop
push
cmp
daa
aaa
stos
fwait
pushf
repz
fwait
and
cmp
push
xor
aad
decl
inc
mov
and
mov
mov
xchg
jno
xchg
loope
sbb
fld
cmp
add
test
sub
and
adc
jp
rcrl
lock
pop
in
mov
sar
fucomp
jo
sti
add
in
sbb
and
ljmp
mov
loopne
push
jnp
mov
or
cli
dec
stos
mov
jae
cmpsb
push
push
mov
sbb
insb
incl
adc
xor
add
gs
mov
xchg
and
dec
daa
imul
pop
pushl
xor
jecxz
jp
pop
test
xlat
cmpsb
mov
sbb
mov
jl
sub
les
je
movsb
popa
lods
mov
adc
andb
cs
mov
push
jb
lock
mov
jne
imul
sub
hlt
mov
in
cmp
jno
and
sbb
pop
test
stos
dec
movsb
fildll
xchg
sub
push
call
aam
push
jnp
mov
fisubrl
ja
push
mov
dec
jno
out
jae
enter
int3
mov
mov
sub
push
es
fmulp
or
sbb
push
inc
pop
pop
sbb
xchg
popf
rcr
int
bound
dec
adc
or
adc
sub
sbb
in
jmp
mov
sbb
xchg
scas
dec
or
sti
dec
sub
or
and
dec
rorl
adc
push
add
fbld
popa
pop
inc
inc
push
pusha
in
das
mov
push
mov
mov
sub
inc
pop
pop
fwait
inc
bound
jle
cmc
jle
pop
fidivrs
xor
dec
xchg
xor
xor
inc
mov
xchg
jmp
out
dec
sub
popf
mov
xor
ret
mov
jne
test
jns
adc
loop
mov
cmp
loop
adc
pop
mov
jnp
fldt
jp
adc
not
jle
cmp
sbb
movsb
fwait
int3
pop
push
cli
cld
cwtl
fwait
sti
rolb
call
mov
scas
jns
mov
fwait
pop
mov
clc
xchg
mov
sub
lock
sti
mov
aas
xchg
and
xchg
mov
jp
push
jns
jns
add
cld
pop
mov
inc
repnz
or
outsl
pusha
shrb
inc
test
nop
mov
pop
je
sbb
ret
cwtl
fisttps
push
inc
divl
call
aaa
pushf
fucomp
pop
mov
mov
and
inc
outsl
push
add
ja
ljmp
sbb
jo
jp
pop
mov
pop
dec
or
push
mov
xor
popa
addb
mov
xor
inc
outsl
or
cmp
jl
mov
sbb
jmp
xorb
push
inc
test
insl
mov
lret
xor
cs
pop
inc
jb
jo
aad
push
fwait
aaa
push
mov
mov
flds
lcall
les
call
dec
adc
mov
movsb
sub
test
out
into
xchg
repz
fsts
mov
push
mov
jmp
xor
mov
cmpsb
pusha
push
out
xor
pop
mov
es
jo
pop
orb
leave
push
es
lock
mov
xor
pop
int3
push
mov
sub
sti
ja
or
add
ljmp
lods
cmp
mov
sbb
test
cmp
adc
cmp
daa
adcl
orl
or
mov
push
dec
adc
push
mov
cmp
imul
pushf
test
les
add
lods
fnstsw
inc
push
cmp
mov
out
aad
sbb
push
ljmp
dec
scas
or
outsl
jae
in
clc
inc
push
rol
movb
mov
mov
sub
mov
fisubl
push
insb
mov
adc
inc
and
sahf
sti
adc
xchg
mov
push
ret
dec
in
aaa
in
xlat
jno
test
xlat
jns
ljmp
dec
mov
mov
pop
dec
dec
int3
mov
add
lret
orl
cmp
cltd
sahf
inc
stos
loope
bnd
fs
in
jbe
fxch
pop
pop
icebp
dec
mov
test
in
das
cltd
mov
jl
and
popf
test
test
jne
ret
loope
decb
fwait
cld
lds
repz
push
fidivl
xchg
sbb
xchg
add
repnz
add
jne
mov
cmp
mov
stc
jbe
xchg
inc
inc
aaa
enter
push
xchg
xor
and
sub
xchg
jecxz
mov
ja
pop
pop
or
in
mov
push
call
inc
bound
jmp
mov
mov
insl
push
ficoml
mov
sar
aaa
sbb
in
xor
mov
addl
divl
imul
cmp
mov
xor
pop
xchg
pop
into
arpl
dec
je
mov
stos
ret
iret
mov
add
in
xchg
sbb
add
pop
fnstenv
insl
sbbl
sub
movsl
in
insb
inc
pusha
out
jmp
daa
outsl
nop
sub
inc
add
icebp
icebp
in
xchg
adc
push
mov
pop
pop
aad
pop
aaa
test
addb
mov
nop
mov
aad
ljmp
dec
ljmp
cld
adcb
jecxz
mov
push
stos
icebp
icebp
popa
jne
lret
aam
and
fnstenv
call
or
out
add
pop
inc
test
movsb
mov
or
insb
add
cmc
sbb
fildl
mov
imul
lret
das
push
sub
push
mov
mov
mov
xor
enter
add
fs
cld
or
ret
add
or
mov
into
mov
cmp
repnz
lret
cmp
sub
ljmp
mov
test
fldenv
xor
mov
and
in
sub
movq
jg
pop
xchg
inc
pop
lret
adc
mov
jl
and
shrl
lods
mov
xor
cld
insb
push
add
mov
loope
je
mov
jnp
sbb
sbbl
sbb
cmp
or
aad
push
inc
je
jnp
mov
rcr
lock
mov
ja
jg
mov
fs
cmpsl
push
or
sub
adc
dec
dec
pop
fwait
lcall
xor
inc
cmp
movsl
xchg
les
dec
push
cmp
ror
inc
fstpl
inc
jns
add
jb
mov
cmpsb
push
loope
ret
mov
insb
push
add
lods
out
inc
jne
out
hlt
roll
ret
icebp
push
or
jo
fcoml
rorb
mov
xchg
gs
mov
insl
cli
aam
cmp
aas
jle
mov
call
in
lods
or
mov
aaa
and
or
add
repnz
and
scas
stos
int3
rolb
pop
mov
clc
mov
or
mov
cmp
xchg
scas
inc
push
pop
iret
mov
or
ret
pop
mov
pop
cmpsl
mov
push
mov
scas
add
mov
ficoms
fwait
pop
cmpsl
add
dec
sbbb
insb
xlat
repnz
adc
adc
add
aaa
gs
mov
dec
aad
mov
stos
push
adc
fsubrl
mov
sahf
inc
lret
sbb
or
dec
mov
mov
jb
push
sub
mov
paddsw
sahf
movsb
shlb
out
push
fcmovne
iret
push
mov
ja
int
push
lret
jle
and
loop
xchg
push
scas
sub
sub
jge
fstpl
test
into
adc
mov
cmp
push
adc
adc
dec
out
or
aaa
test
jecxz
stc
orl
test
lahf
ja
adc
mov
repnz
and
dec
dec
cltd
sbb
mov
xchg
js
inc
pop
js
sahf
push
fs
fnsave
jbe
inc
pop
adc
cmc
push
sub
loopne
fidivrs
add
dec
rorl
fnstenv
jae
in
push
dec
adc
sbb
mov
mov
mov
ret
sub
push
decl
dec
jg
insb
mov
xchg
sbbb
out
cmp
icebp
adc
shll
mov
andl
mov
mov
sbb
mov
mov
das
sahf
jge
mov
daa
loopne
test
mov
test
cmp
loope
stc
das
cs
gs
add
pop
and
in
addr16
and
or
xor
push
int
insl
fcmovnb
clc
outsl
xor
jne
ficoms
mov
mov
xlat
fstpt
push
xchg
or
adc
rol
mov
inc
push
int3
sbb
pushf
cltd
mov
lods
pop
add
out
ret
sbb
cmp
sub
inc
mov
or
lret
mov
in
inc
cmc
add
jp
stos
into
dec
mov
push
outsb
test
jge
adc
cld
dec
mov
push
mov
rolb
in
insl
dec
test
test
jnp
cs
push
or
mov
add
scas
fs
xchg
jb
mov
loop
aad
test
push
stos
push
jae
mov
fldl
loopne
dec
pop
pop
pusha
fidivs
push
push
repz
jbe
mov
gs
mov
dec
add
insb
inc
lods
inc
mov
pop
int
lds
clc
mov
leave
andl
adcb
js
in
mov
lret
or
inc
cmpsb
fbld
inc
lret
or
mov
les
adcl
lret
pusha
stos
pushw
testl
sub
sub
mov
mov
xchg
sahf
inc
icebp
mov
insl
mov
sbb
cmp
enter
jne
lea
neg
flds
jns
movl
dec
iret
inc
sbb
int
sbb
sub
pop
sbb
jle
cmp
mov
in
add
jmp
leave
lret
jle
lahf
pop
xor
insl
jne
mov
mov
ss
xchg
lods
dec
add
sbb
jmp
out
aam
push
or
xlat
jmp
pop
clc
add
pop
cmc
mov
test
adc
adc
arpl
test
or
lods
sahf
out
add
int3
pop
lods
mov
xchg
hlt
aad
add
mov
hlt
sahf
arpl
sub
aaa
push
lock
add
cmp
push
idivb
nop
jns
in
push
push
inc
mov
push
cmpsl
lds
mov
ds
mov
fwait
loopne
jmp
push
mov
sub
lds
dec
sti
dec
add
mov
xchg
ret
pusha
mov
in
sub
sbb
cmp
pop
int
int3
and
add
movsb
xorl
popf
pushf
jbe
inc
jns
inc
imul
pop
mov
and
mov
cmpsl
test
and
ds
sar
fidivrl
cmp
gs
adc
mov
call
dec
xchg
and
pop
dec
es
insl
inc
subb
ret
jge
mov
enter
in
mov
jecxz
dec
or
jge
xchg
adc
inc
out
aad
arpl
orl
sysexit
push
dec
popa
fidivs
adc
fisubs
repz
mov
outsl
test
adc
or
xlat
xor
lahf
and
mov
ja
jecxz
mull
int
cmpsl
jnp
subb
cmp
fwait
jp
repz
stos
cwtl
push
into
cmp
out
lcall
loope
jle
push
xchg
js
pusha
adc
out
jmp
addl
jle
repz
sub
fisubrl
fsubs
add
fildl
cwtl
mov
movsb
mov
stc
dec
jb
jae
push
push
aad
insb
dec
in
movsl
mov
jmp
popf
fdivrs
dec
addb
pop
inc
add
xchg
sbbl
dec
cmp
lds
shr
outsl
imul
imull
out
push
or
add
inc
adc
aam
insb
inc
adc
rcrl
loopne
fsubs
and
out
fcmovnu
adc
notl
test
cmp
jno
ja
sti
sub
xchg
ret
xchg
movsl
pop
jnp
mov
sti
or
or
pop
jae
mov
sahf
jne
sbb
outsb
lock
cmp
pushf
add
fisubrl
jne
iret
dec
js
ja
shl
aas
imul
cmp
das
inc
xor
xlat
inc
inc
rorb
dec
cli
xor
dec
push
mov
call
rcrl
in
xchg
pusha
push
sub
cmp
jecxz
insl
xchg
push
mov
cli
lock
mov
out
sub
int3
test
and
sub
aam
incb
dec
fcomip
inc
xchg
mov
push
test
mov
rorb
add
js
sbb
pop
mov
outsb
mov
cmc
cld
dec
scas
out
inc
jle
adc
ret
fcmovnu
push
push
test
push
xor
fcoms
mov
insl
xor
insb
sbb
dec
sbb
add
out
pop
pop
stos
push
roll
or
inc
rol
xchg
mov
xchg
sti
enter
lods
loopne
lds
testl
inc
add
xor
inc
ud2
sbb
mov
cs
aam
mov
and
xchg
mov
popf
pop
rclb
cltd
int
setns
cmp
jae
push
mov
jmp
daa
nop
pop
insb
rolb
xchg
xchg
pusha
xor
or
mov
mov
ss
lret
imul
inc
arpl
sub
insb
sahf
int
mov
cwtl
loopne
and
rol
dec
pop
int3
mov
xchg
mov
lea
adc
mov
push
pop
lds
push
lock
ficoml
mov
mov
cwtl
jo
cwtl
test
dec
ljmp
dec
cmpsb
sub
xchg
arpl
jns
cwtl
sbb
push
sti
in
inc
mulb
fs
pop
flds
xor
iret
sbb
movsb
scas
xor
cmpsb
or
lahf
pop
fdivrs
inc
cmpsb
insb
addr16
mov
popa
push
std
aas
push
mov
push
dec
mov
and
push
jecxz
jnp
and
push
or
cmc
xor
adc
xchg
xlat
aad
shrl
test
movsl
or
pop
rcl
pop
mov
jl
inc
lods
popf
pop
mov
mov
loop
inc
hlt
stc
rorl
in
cmp
pop
imul
dec
push
jmp
cld
shl
cmc
dec
or
movsb
arpl
pop
cltd
push
aaa
sbb
int3
mov
mov
iret
lock
fwait
neg
pop
dec
add
xor
sahf
test
push
int3
cmp
xor
lods
stos
xor
jge
sahf
enter
lret
xchg
lods
cli
sub
cmp
mov
shlb
test
push
ljmp
sub
movb
aas
mov
push
and
addl
inc
mov
cmp
inc
dec
and
shrl
hlt
clc
adc
cmc
jo
test
inc
dec
movsl
jle
popa
repz
add
mov
test
test
pop
push
lret
loop
push
fists
mov
xchg
sub
and
or
add
xchg
lds
int
adc
into
inc
sbb
lahf
jl
sub
sahf
cld
pop
out
in
in
adc
arpl
int3
xor
insb
es
sbb
and
adc
cli
add
add
sbb
cltd
stos
aas
fwait
xor
sbb
mov
jnp
sub
outsb
aam
imul
je
insl
push
mov
adc
cmc
dec
fildl
and
pop
movsl
push
mov
popa
ja
adc
jmp
mov
lea
pop
and
test
sub
scas
and
hlt
jb
mov
scas
cmp
lret
test
in
fists
js
in
js
or
and
pop
cmp
cli
jno
pop
mov
sub
jnp
sbb
pop
push
sub
sub
cs
test
push
scas
imul
stc
xor
faddl
pop
cpuid
mov
andb
adc
sbb
pop
dec
pop
and
int
xchg
test
mov
jbe
outsl
xchg
lret
sbb
jmp
pop
test
lds
jge
enter
cld
jmp
xchg
jg
movb
mov
ja
adc
push
das
push
sub
jge
xchg
cmpsl
cmp
sub
popf
loope
push
jae
mov
inc
out
pop
sub
das
mul
push
push
push
cmp
mov
repz
xor
shlb
and
jmp
pop
test
outsb
mov
loopne
cmp
push
cld
xchg
enter
std
insb
lcall
xlat
lods
incb
clc
data16
scas
rclb
movsb
mov
rolb
add
mov
pop
sub
aam
dec
lret
sti
or
fstl
xchg
mov
or
roll
lea
xchg
lret
ret
fstps
cmc
fldcw
loop
push
dec
loope
lods
xchg
lahf
mov
movsb
je
jecxz
pop
mov
or
xchg
jle
dec
dec
xchg
push
sbb
out
lret
inc
outsl
fadds
aaa
arpl
lock
push
mov
jle
mov
icebp
sub
inc
not
inc
test
cmp
fldl
bndldx
sbb
ret
test
test
pushf
push
sti
jg
push
pop
ds
xchg
imul
movsl
pop
cmp
or
js
pop
and
sbb
jg
insb
push
ret
xchg
sarl
mov
jb
xchg
jl
aad
stos
push
push
out
aam
inc
pop
pop
adc
pop
ficompl
mov
push
jo
mov
es
aam
or
out
xchg
daa
outsl
jno
push
and
outsl
loope
mov
jnp
pop
sbb
fidivs
mov
mov
jecxz
inc
and
insb
loop
inc
mov
shlb
fdiv
ja
inc
sbb
inc
mov
or
sahf
and
dec
pmaxsw
cmp
mov
lret
imul
insl
mov
js
lods
xor
aaa
dec
in
ret
jne
dec
adc
jbe
insl
jge
or
ljmp
jno
test
dec
sbb
test
xor
mov
divl
iret
shrb
enter
outsb
loopne
lret
push
or
mov
dec
mov
mov
inc
cmp
jo
rol
push
in
ds
sub
fiaddl
xlat
data16
in
adc
cmp
mov
cmp
mov
jge
jnp
add
stos
fs
out
fistpl
in
cmpsl
imul
dec
xor
add
sti
fsubrs
push
push
sub
pop
shlb
and
xor
dec
fadds
sub
push
pop
add
shr
int
sub
lcall
icebp
out
mov
mov
xchg
test
or
test
popa
mov
fsub
jno
mov
into
pop
pop
adc
mov
fmul
sbb
jp
and
test
imul
mov
jb
xor
mov
push
icebp
cmp
jo
daa
mov
in
xchg
mov
cld
daa
add
fs
idivb
nop
cmp
add
adc
aam
fiadds
data16
adc
inc
xor
in
addl
addb
ret
xchg
lea
mov
mov
jl
add
cs
cmp
stc
cmp
icebp
dec
dec
leave
mov
rcrb
cmp
sbb
add
mov
push
stos
in
idivb
mov
test
iret
jo
cmp
int
lcall
xchg
jns
lock
push
dec
icebp
xchg
sbb
andb
sub
mov
mov
rcll
lds
mov
cmp
push
ds
outsl
clc
aam
jb
dec
cmp
push
mov
lcall
cltd
js
enter
cmp
cltd
leave
cwtl
arpl
adc
jb
out
out
lcall
ret
mov
std
jo
cmpsb
fmull
loope
mov
pop
mov
test
push
add
fsubs
cs
push
rcrb
and
or
cmp
jnp
inc
in
andb
xchg
sbb
sbb
mov
dec
sti
aas
mov
scas
push
lea
js
or
lahf
mov
add
ficomps
call
pushw
sbb
scas
outsl
dec
not
out
add
aam
outsb
pop
mov
addl
in
mov
xor
inc
pusha
xchg
add
or
dec
imul
jp
mov
sti
addl
aas
ljmp
mov
int3
pop
mov
rolb
adc
pop
outsb
jg
or
insb
or
and
add
jns
lret
inc
jo
pop
or
bound
imul
inc
jg
sahf
adc
and
int3
sub
lret
jg
sub
push
pop
fwait
aam
ja
shll
inc
mov
lds
subl
pop
xchg
insl
xorb
push
mov
fistpll
xor
arpl
cwtl
repz
in
cmp
adc
dec
es
sbb
xchg
push
mov
fists
jp
sub
cwtl
testb
das
mov
cmpb
out
jb
dec
mov
in
int
xor
dec
adcl
mov
mov
push
fs
mov
lods
mov
bswap
test
pushf
jp
movsb
gs
js
loop
lods
jne
or
mov
xchg
sbb
pop
xor
repz
cld
dec
xchg
add
jns
jmp
pop
inc
or
dec
shrd
or
in
fwait
clc
push
and
or
insb
dec
js
pop
cltd
pop
inc
inc
jg
push
jbe
push
push
scas
call
xor
pop
imul
inc
lea
cmp
and
adc
cli
leave
sbb
ds
int
inc
outsb
cwtl
inc
xor
lcall
xor
dec
xor
jns
inc
cltd
mov
xor
ret
fldenv
repnz
jb
add
icebp
cmpsl
inc
jg
pushf
pop
in
and
xchg
sub
lea
adc
pop
jne
sahf
pop
xor
dec
pusha
pop
and
xor
dec
xchg
adc
add
fisubrl
cld
cs
fadds
and
jecxz
sbb
pop
xor
ret
cltd
mov
jnp
mov
fildl
mov
es
lds
in
jg
push
out
mov
loopne
sub
out
aam
outsb
sahf
fistpll
dec
mov
and
push
jle
xchg
jno
inc
test
hlt
sbb
in
popf
enter
xor
sub
repz
int
outsw
cli
and
push
adc
fcomps
or
xchg
jg
push
xor
or
mov
lea
and
insb
repnz
jp
lret
ljmp
inc
and
push
mov
faddl
sub
fcmovnu
les
push
movsl
daa
scas
orl
ja
data16
fstps
iret
mov
pop
call
push
xchg
call
mov
lea
inc
push
aaa
sub
sbb
bound
add
rcll
cmp
scas
call
xchg
mov
mov
or
nop
scas
jg
xchg
xchg
addb
mov
add
jae
mov
fdivl
jl
shll
sub
ss
ljmp
sbb
or
lock
mov
lds
xlat
or
mov
cmp
jmp
pushf
sbb
in
mov
xchg
pop
cmpsb
cmp
add
mov
daa
das
mov
sub
cmp
adc
inc
jne
addb
pop
inc
and
ljmp
and
rclb
ss
psubw
shrb
cmp
pop
jo
dec
jne
std
jg
mov
test
adc
or
lret
fisttpl
arpl
cmp
add
adc
mov
add
and
push
bound
xor
pop
pushf
call
sub
pop
sub
outsl
fsubrs
add
or
lahf
testl
mov
mov
jns
movsl
cmpsb
sub
inc
lcall
jg
ss
das
fsts
pop
push
jno
enter
adc
mov
inc
or
sti
andb
aas
push
or
mov
imul
push
and
inc
leavew
in
mov
jg
out
popf
mov
xor
mov
loopne
sbb
dec
pop
cmp
or
push
std
pop
test
push
add
lahf
and
fmull
sub
inc
mov
add
lock
faddp
push
sbb
pop
xchg
dec
jle
or
push
push
in
xor
pushf
lea
and
adc
jae
sub
add
dec
cmp
pop
aad
lods
jge
xor
cmp
push
jl
arpl
flds
and
dec
jle
pop
lcall
test
lret
rcr
ret
xor
jmp
aam
in
das
lods
mov
mov
mov
mov
inc
xchg
mov
dec
icebp
fisubrl
adcl
sub
mov
adc
pop
xchg
sbb
or
cmpb
or
smsw
mov
sbb
mov
stos
fwait
dec
inc
add
pop
xor
clc
xchg
sbb
sub
out
inc
jb
cmpsb
enter
jne
test
rcll
call
and
outsb
hlt
inc
fists
jg
xchg
dec
jne
sbb
pop
sahf
pusha
inc
and
dec
hlt
fnstcw
lods
add
add
or
andb
fstpl
sarb
jne
sbb
pusha
fadd
pcmpeqw
mov
inc
jmp
nop
dec
add
mov
push
data16
push
pop
xchg
rcrb
or
mov
repnz
push
out
insl
movsb
xchg
rcrl
dec
inc
bound
js
les
jno
sti
xor
mov
add
push
cmp
shlb
or
cld
movsl
sub
clc
ret
sbb
xchg
jnp
jg
paddusb
loopne
dec
rorb
ficoms
lret
and
pop
scas
stos
fwait
inc
mov
mov
mov
fisttpl
and
and
es
mov
rclb
mov
into
incl
jbe
mov
fildll
jmp
xchg
cmp
int
inc
out
sub
loop
lahf
adc
dec
lds
or
jbe
sbb
jge
jbe
in
cmp
fs
sbbb
mov
jnp
sub
aad
ret
cmp
in
fsts
dec
mov
inc
sub
push
jns
test
mov
push
xchg
std
ds
add
pushf
add
pop
inc
mov
sbb
xchg
mov
adc
test
cli
cmp
pop
mov
pop
sub
jne
fwait
cltd
push
int3
add
mov
fs
loope
mov
cmp
movswl
mov
rclb
jl
pop
mov
cli
jge
dec
jae
xor
xchg
inc
das
cmp
pop
xorb
or
push
xor
mov
repz
or
jge
jle
add
gs
inc
loopne
inc
add
cmp
xchg
mov
mov
or
dec
sbb
mov
and
mov
sub
jle
mov
sub
in
fdivl
fwait
adcb
insl
ret
jbe
das
shr
rcl
addr16
xchg
xchg
ffreep
fucom
adc
mov
das
cld
or
cmp
jge
inc
xor
pop
stos
int
or
in
pop
js
call
lret
enter
add
shl
mov
out
dec
mov
sarb
sub
mov
movsl
xchg
fmulp
push
mov
sub
mov
lret
add
jo
pop
gs
imul
sti
mov
rcl
inc
movsl
and
adc
and
sbb
test
mov
and
inc
and
fs
mov
pushf
pop
or
mov
fs
fcmove
lcall
and
and
and
push
mov
cmp
ret
stos
jge
addb
xor
fadds
jg
cmpsl
inc
mov
jbe
arpl
in
ret
push
in
andb
ret
movsl
cwtl
popf
loop
in
push
sub
insl
iret
loope
adc
decl
shr
leave
mov
jle
rcll
int
in
subl
test
push
push
xchg
mov
pop
cltd
fxch
push
popa
lahf
add
ja
fadds
or
aad
rorl
cmpb
arpl
mov
push
xor
sbb
and
xor
and
pusha
je
stc
jle
and
adc
inc
test
xor
jmp
xchg
inc
xchg
mov
sti
cwtl
mov
outsl
mov
stos
fstpt
dec
pop
cmp
sbb
pop
mov
xchg
insl
loop
jl
adc
pusha
out
sub
xor
les
mov
push
xchg
aaa
cs
push
cmp
sbb
cmpb
jns
pop
xor
or
and
loopne
fidivrl
imul
iret
subl
data16
push
mov
arpl
push
lods
inc
dec
addr16
fimuls
pop
sti
inc
pop
mov
lahf
sarb
pop
jmp
pop
test
jmp
jb
add
push
push
xchg
xor
inc
and
stos
xor
lahf
loope
push
and
push
fadds
mov
ss
adc
push
dec
dec
hlt
inc
cmp
pop
lcall
movsb
pop
sub
mov
mov
sbb
js
sub
adc
mov
cmp
out
add
iret
mov
test
cltd
mov
stc
xchg
dec
iret
lret
xchg
mull
xor
mov
inc
inc
bound
outsb
sahf
loop
xor
stos
jns
dec
push
fistps
imul
xor
js
lods
xor
xor
data16
shr
rclb
inc
push
mov
mov
jbe
xor
pop
sahf
sub
fstl
rcrl
mov
xor
rclb
push
mov
push
outsl
sbb
cmp
sbb
add
cmp
add
addr16
mov
rol
cmp
xor
rcrb
cmpsl
inc
dec
pop
sub
insl
jmp
in
sbb
push
xor
out
push
pop
jae
cld
xchg
lea
jl
movsl
jg
mov
mov
fs
mov
jbe
loope
xchg
push
jg
aad
std
mov
ret
mov
inc
cmp
add
fiadds
sub
push
xchg
aas
adc
das
sub
lds
push
lock
adc
jb
mov
push
fs
cvtps2pi
adc
mov
cmp
and
lock
jnp
aaa
add
adc
pop
xor
dec
sub
imul
aas
push
shlb
sub
pushf
jae
jae
in
dec
cmc
dec
inc
and
jne
cmp
scas
in
pop
adc
jmp
loopne
add
sub
xchg
sbb
push
and
push
daa
mov
and
mov
mov
das
insb
push
add
or
inc
sbb
ret
inc
imul
fldenv
mov
loopw
pop
push
push
dec
sahf
or
arpl
icebp
je
dec
mov
icebp
cwtl
mov
mov
aam
lahf
in
pop
adc
pop
or
pushw
cs
and
insl
in
gs
hlt
insl
xor
into
push
sbb
testb
shrb
jmp
inc
pop
sub
xor
inc
stos
and
mov
or
jns
jmp
outsb
es
push
bound
xor
cs
clc
mov
adc
loope
jmp
fnstcw
cltd
es
mov
push
addr16
push
lea
sub
decl
aaa
push
cmpsl
xchg
dec
or
fiaddl
lods
lret
add
repz
jno
pop
ljmp
pop
add
jnp
xor
cld
xor
adc
bound
pop
mov
fistps
data16
mov
and
repnz
and
xchg
lret
dec
mov
out
inc
movsl
cli
push
not
add
cli
ret
jecxz
xchg
and
push
mov
mov
clc
dec
mov
fbld
mov
push
fisubrl
xor
push
push
cmp
ja
and
popf
pusha
push
sub
xchg
adc
repnz
out
jne
aad
pop
or
ja
enter
lcall
movsl
adc
mov
enter
into
cld
lods
jns
push
sbb
ror
inc
pusha
fldt
push
inc
cmp
stos
outsl
lock
push
sbb
ret
mov
jnp
dec
add
mulb
dec
add
adc
mov
iret
js
and
in
movsl
movsl
movsl
fsubrs
shrl
out
or
mov
jnp
push
xchg
pop
jnp
sub
rolb
or
clc
int3
out
cmp
out
cmp
sbb
sbb
es
loopne
test
cmpsb
js
imul
cmp
jnp
push
push
movsb
ret
pop
lea
add
mov
jo
sub
mov
cmp
inc
cmp
in
inc
cmp
dec
mov
and
and
hlt
cld
cmp
push
xchg
test
mov
or
inc
imul
test
je
sbb
insl
jno
fnstenv
adc
fwait
inc
orl
jb,pt
lock
clc
insb
mov
pop
in
cmpsl
fnstenv
pop
xlat
dec
cmp
shlb
lret
lds
icebp
lods
adc
out
push
push
aas
mov
psubb
sarb
sbb
xchg
push
aaa
or
cmp
cmpsl
rcll
jnp
setbe
popf
cli
jmp
add
ret
dec
jb
aam
aaa
or
and
lret
test
ljmp
sub
mov
mov
mov
sarl
loop,pn
and
sub
sub
sbb
cwtl
dec
and
enter
sti
pop
fcoms
cld
shl
sub
xor
inc
addl
pop
cmc
inc
jg
shlb
pop
fldenv
incl
out
enter
hlt
pop
popf
mov
cmp
call
mov
aam
gs
lock
mov
push
in
jecxz
mov
add
mov
inc
fs
ret
adc
imul
add
sub
add
mov
xor
fwait
mov
rorl
inc
jge
notb
add
jbe
mov
loopne
daa
adc
jbe
push
rorl
sbb
fistpll
fcompl
scas
sub
pop
outsb
aam
out
dec
rcl
int3
test
add
es
ja
fcmovbe
cli
pop
test
xor
xchg
jae
cmp
aaa
repnz
je
pop
jns
cwtl
inc
pop
xor
push
cmp
sbb
lock
jg
stc
or
pop
and
jg
xchg
mov
jae
int3
jo
sub
xor
out
mov
mov
mov
jns
insb
js
daa
inc
xchg
xor
adc
dec
ss
scas
scas
pop
ret
mov
sub
push
lods
iret
dec
mov
mov
fs
adc
inc
cltd
sar
movsl
mov
lds
ljmp
or
cs
and
inc
inc
enter
rclb
xor
or
ljmp
sti
rolb
inc
lock
movsl
mov
cmp
pop
int3
add
test
xchg
cmp
xchg
xchg
int3
test
test
mov
or
mov
pop
xchg
das
cmpb
and
and
jbe
std
sbb
lahf
add
imul
push
in
or
and
clc
rorb
add
cs
inc
mov
sub
adc
mov
push
das
push
hlt
es
jge
adc
push
lods
ljmp
pop
mov
xchg
or
or
ret
and
sbb
test
xor
mov
pop
outsb
pushf
mov
adc
and
dec
push
jg
in
cmp
flds
je
mov
mov
inc
pushf
xchg
sub
add
sarl
lea
xchg
sub
mov
mov
movsl
lret
lds
and
xor
push
fsub
mov
jno
jo
mov
lock
sahf
mov
or
pop
sub
out
or
or
adcl
dec
or
loop
jnp
lahf
ljmp
je
fs
mov
cltd
lea
inc
dec
lea
fs
mov
outsb
pop
pop
out
sub
and
sbb
jmp
leave
mov
push
pop
fisttpll
add
js
imul
or
fsubr
xchg
xor
insl
cmp
sbb
pusha
repz
mov
shrl
lds
mov
push
mov
and
mov
sti
negb
lea
mov
clc
scas
fs
mov
dec
movsl
in
sub
adc
test
stos
pop
mov
sub
sbb
leave
push
repz
jmp
mov
xchg
add
push
dec
rcl
je
and
push
and
inc
ret
sbb
pop
clc
or
pop
and
fisubl
pop
stos
pop
mov
pop
movsb
outsl
mov
or
xor
mov
adc
xor
lods
mov
lea
pop
dec
xlat
mov
testl
cmp
jo
jmp
sbb
inc
jns
cwtl
sub
mov
push
or
xlat
jle
pop
or
stc
outsb
shll
cli
mov
mov
int
ds
es
rorl
stos
test
jbe,pn
mov
add
xchg
mov
iret
cmc
or
dec
bound
cs
lock
cmp
sbb
fimull
outsb
das
and
loop
jecxz,pn
sbb
call
lods
dec
pop
sub
xlat
loop
ja
xchg
fsubrp
lret
sar
mov
mov
lahf
inc
adc
mov
push
roll
jecxz
sub
into
subb
leave
lods
lcall
xor
sahf
leave
sub
xchg
gs
or
lock
lods
imul
fldl
int3
inc
pop
enter
stos
rorl
pop
xchg
je
in
ds
mov
int3
pop
or
lahf
test
xchg
xchg
mov
imul
data16
or
lods
addb
ds
and
xor
mov
pop
and
jne
pop
push
adcb
ror
call
daa
inc
xor
push
sarl
loop
inc
test
xchg
cmp
ss
xchg
sbb
sub
xor
scas
stos
rcl
inc
and
insb
movsl
cmpsb
mov
ret
test
lret
arpl
mov
jp
jae
hlt
mov
out
popa
add
lods
rcrl
and
mov
xchg
push
add
imul
inc
out
lret
mov
add
bound
jp
fidivrs
inc
jns
mov
shlb
sti
xchg
jle
pop
mov
int3
push
ret
sub
jecxz
int
jmp
mov
mov
cmp
ja
mov
popf
cmpsl
in
js
shr
and
aaa
add
mov
lds
arpl
mov
movsb
in
aaa
int
push
sbb
leave
andl
aas
xor
cmp
pop
andb
pop
pop
ljmp
or
sbb
fnstenv
inc
add
insl
add
aaa
ret
shr
mov
stos
jle
fs
jp
cmpsl
mov
lahf
gs
push
sbbl
jecxz
inc
xchg
in
pop
shrl
push
arpl
dec
jge
mov
dec
scas
fidivrs
fldt
in
pop
cmp
call
jns
je
daa
xor
push
mov
adc
cwtl
jnp
ja
pop
push
stos
bound
ss
sarb
bnd
lahf
cmp
push
fidivs
cmp
lods
jo
int3
int
jge
repnz
fs
in
fwait
mov
xorb
fs
bound
dec
or
pop
out
aas
jnp
jae
jae
ficompl
cmpsl
adc
cltd
pop
test
xchg
pop
mov
aas
insl
xchg
xlat
mov
push
popf
cwtl
jl
cmpsb
push
subl
lahf
jge
or
lcall
sub
push
and
dec
jae
addr16
jae
iret
add
std
stc
test
lret
or
lret
popa
xor
dec
pushf
adc
and
lcall
sub
push
inc
stos
pop
int
mov
push
pop
call
mov
dec
test
dec
hlt
push
jnp
call
xchg
xor
mov
jge
dec
mov
push
loop
sarb
imul
or
cmp
sbb
popf
int
fsubrl
jge
jns
mov
out
popa
test
aam
out
adc
pop
sub
js
push
lds
and
ds
andb
test
inc
pop
push
stos
out
xlat
jno
ret
adc
ret
adc
outsb
arpl
addb
mov
lods
xchg
loopne
mov
inc
addr16
sbb
cmpsb
mov
mov
inc
push
lahf
mov
ljmp
bnd
sbb
fsubrl
dec
into
jno
adc
dec
xor
rcl
aad
orl
xlat
leave
fsubrs
xor
jle
or
push
ss
mov
arpl
loope
inc
stos
cs
push
cmp
sub
movsb
inc
je
mov
add
in
jecxz
or
rcr
ljmp
pop
mov
pop
ljmp
insb
or
xchg
cmp
and
fwait
arpl
pop
add
cmp
fxch
adc
inc
sbb
sbb
add
rcll
cmp
xchg
pop
fwait
sub
xlat
adc
xchg
and
sub
dec
sti
jle
rolb
movsb
sbb
lock
xchg
test
cmp
lock
cmp
mov
fdivr
fcomip
incl
loop
rorl
imul
dec
leave
mov
cmpl
setae
or
mov
aad
jp
add
ds
arpl
sub
rcll
xlat
hlt
mov
pop
push
dec
mov
lods
ds
mov
dec
jne
xor
mov
inc
mov
rorb
adc
pushf
cwtl
scas
imul
xchg
sbb
push
jecxz
sbb
sbb
into
push
jle
pop
insb
mov
pusha
inc
jb
aad
dec
in
adc
sahf
bound
xchg
nop
xchg
addr16
sbb
fwait
xor
pop
inc
sub
dec
dec
dec
mov
bound
pushl
mov
adc
or
push
shlb
scas
pusha
cmc
jo
rclb
inc
jl
repz
mov
lods
dec
push
or
or
xchg
shll
ja
dec
fcompl
xchg
in
rclb
adc
mov
fwait
jmp
and
cmpsb
adc
mov
lock
dec
cmpsb
inc
inc
dec
push
mov
add
clc
inc
push
jmp
icebp
xchg
cltd
ror
mov
and
addr16
jle
sbb
mov
jmp
dec
dec
out
int3
lcall
fxch
xchg
xor
mov
dec
or
xor
push
or
imul
rclb
and
icebp
pop
lcall
jo
xchg
testl
xchg
adc
jb
ljmp
xorb
adc
adc
pop
fadds
jns
cmpsl
adc
cwtl
sar
mov
push
add
lods
mov
xor
lret
pushl
or
subl
mov
popf
mov
xor
fisubs
int3
sbb
filds
cmp
mov
popf
jg
jno
fdivrl
dec
loop
mov
dec
add
leave
or
push
fwait
dec
inc
jge
inc
rcr
dec
fnstenv
cmp
push
gs
jnp
inc
shll
popf
push
popa
in
mov
jl
push
mov
inc
mov
add
mov
shl
mov
clc
adc
mov
test
dec
mov
test
jns
ja
outsl
sbb
or
adc
mov
adc
lret
loope
nop
test
mov
push
clc
insl
fildl
jno
dec
in
shrl
sub
aas
in
jecxz
out
sbb
xchg
lds
push
push
pop
cltd
sti
push
cmp
pop
test
push
push
mov
and
fildll
std
and
lret
and
adc
cld
outsl
jae
mov
adc
loopne
insl
add
sbb
mov
mov
or
test
outsb
das
xchg
shlb
or
and
sbb
add
fsubrl
add
push
dec
mov
sahf
lods
mov
stos
divl
mov
mov
jle
xchg
xlat
movsl
cmp
dec
aaa
out
out
sub
sub
push
mov
lock
insl
jne
test
lea
cmpsb
cld
int3
sbb
clc
daa
mov
pop
ja
push
sub
gs
fstpt
mov
mov
insl
shlb
jno
cmp
ret
lret
rolb
mov
lock
xor
xchg
push
pushf
popa
or
stc
sbb
cmp
xor
mov
lock
inc
jecxz
xlat
cmp
mov
and
jecxz
data16
clc
jo
fwait
pop
scas
cmp
jp
adcb
shll
faddl
ja
fldl
xchg
movsb
sbb
adc
es
pop
mov
out
stos
push
or
mov
cmpsb
mov
add
jns
inc
in
icebp
sbb
jecxz
rclb
shll
xor
jmp
sub
mov
xchg
dec
and
jge
test
lds
mov
insb
adc
jb
orb
mov
movsb
xchg
dec
loopne
sbb
pop
cwtl
sub
aaa
push
mov
push
rorl
xchg
outsb
jne
std
or
sbb
xor
aas
add
dec
pushf
arpl
xchg
out
lea
pop
repz
into
xor
pop
je
xor
xlat
aam
cld
push
mov
inc
daa
mov
sbb
enter
scas
jg
jge
cmp
sbb
pusha
aas
add
inc
hlt
mov
xor
or
sub
adc
sub
cmp
mov
mov
ja
stc
xlat
pop
rolb
add
or
insl
ret
adc
pusha
inc
mov
cmp
and
aam
das
jno
fstps
pop
scas
aaa
sub
inc
stc
in
loopne
mov
inc
cmp
incb
fiadds
fstps
mov
cmpsl
and
cmp
stc
mov
addr16
cmpsl
mov
jge
test
lret
lret
inc
mov
leave
sbb
cmpsl
jmp
movsl
jbe
popf
push
fimull
cld
test
xor
mov
push
jge
jg
cmc
push
xchg
mov
fldcw
popf
xor
popf
add
movsb
jmp
jmp
mov
leave
scas
jmp
ljmp
push
pop
mov
jmp
out
in
xor
and
mov
loop
ja
loopne
sbb
lock
cmp
fsubrs
stc
repz
nop
cltd
rcl
xchg
jae
adc
pop
adc
jnp
or
idivl
imul
sbb
jne
mov
into
xchg
push
loop
fcom
xlat
pushf
movsl
inc
add
jp
pop
jge
jbe
into
push
dec
out
nop
pop
or
shlb
pop
call
popf
push
fisttpll
outsb
testb
mov
ficomps
mov
movsl
mov
outsb
dec
leave
pop
fwait
cs
lret
mov
xor
lods
lock
push
or
xor
xchg
mov
jo
pop
fdiv
jle
iret
jecxz
mov
insl
xor
sti
jge
dec
push
pop
xchg
adc
out
pop
pop
outsb
test
test
push
xor
faddl
test
hlt
add
push
inc
mov
sbb
lods
cmpsl
inc
and
xor
jnp
add
pop
push
jg
aas
or
xchg
das
xchg
pop
lock
push
loope
xchg
ret
inc
stos
jmp
add
out
inc
mov
adc
repz
cli
lret
fsubr
fwait
pop
jbe
ror
and
js
lret
or
dec
dec
lret
cmp
dec
into
mov
push
cwtl
mov
xor
ret
test
or
or
cmpsl
jo
xchg
lret
xor
xor
mov
add
dec
jg
push
lods
dec
movsl
aam
cmp
mov
int
js
in
jno
mov
xor
outsb
pop
mov
call
sbb
dec
xor
xchg
xor
std
push
sarl
into
jnp
cs
test
lods
cmpsl
gs
rcrb
jge
sub
push
jnp
mov
mov
add
aaa
pop
mov
push
andl
addr16
add
js
pop
dec
ss
or
lret
das
fcoms
cs
mov
nop
cmp
xchg
xlat
cmpsb
lret
movsl
lods
inc
jno
in
xor
cmpsb
dec
jecxz
inc
pop
lcall
repnz
in
add
iret
pop
int3
jnp
outsl
out
cmc
push
xchg
jno
sti
jno
sbb
pop
adc
dec
mov
sbb
xor
mov
mov
lret
cmp
pop
mov
jg
sbb
loopne
adc
test
mov
mov
fadds
dec
pop
lds
or
mov
or
mov
push
ret
imul
xchg
insb
jmp
ret
push
pop
mov
scas
popa
gs
mov
add
repz
inc
or
xor
hlt
adc
jb
rolb
push
adc
and
add
push
ret
stos
or
popf
sbb
push
iret
adc
sub
adc
fisubs
rcrb
xchg
push
cmp
setae
fwait
hlt
daa
push
scas
pop
mov
xlat
hlt
mov
rcl
iret
cwtl
mov
stc
xor
mov
fnstenv
dec
das
inc
sbb
inc
mov
sbb
mov
ret
pop
lret
add
jge
cmpsl
pop
addr16
push
pop
mov
xchg
add
pushf
xchg
or
push
add
adc
lret
and
adc
push
pop
jmp
sub
negb
into
adc
lock
fnstenv
clc
ljmp
test
jb
arpl
sbb
jecxz
pop
sahf
movsl
test
lret
fiaddl
scas
aaa
and
int3
lock
es
out
arpl
cmp
jo
popa
jmp
test
push
jno
xchg
xor
xchg
pusha
and
inc
je
cmp
mov
insl
lea
xor
add
mov
fcoms
xor
lea
test
mov
lahf
adc
cs
cs
pop
push
lret
out
push
out
in
ljmp
adc
mov
add
imul
inc
inc
dec
mov
arpl
push
into
test
pop
mov
in
mov
fnstcw
inc
les
or
mov
pop
outsl
sti
cmpsl
insl
mov
lea
push
and
fwait
mov
jmp
jno
sub
cwtl
mov
xchg
out
xor
dec
xchg
mov
je
push
cli
jecxz
xchg
jecxz
mov
je
dec
sub
leave
jg
mov
mov
xchg
fistpl
inc
push
fsubp
out
adc
mov
adc
fdivp
iret
ljmp
cmp
cvtps2pd
lock
mov
push
jge
int
inc
idiv
mov
mov
shlb
or
je
sub
sbb
pop
or
push
popa
outsl
insl
and
je
in
fsubl
fiadds
dec
mov
ljmp
jecxz
shr
hlt
ja
arpl
out
push
daa
push
xor
outsb
pop
nop
dec
add
movsb
aaa
in
add
lret
cmp
sub
aaa
in
fnstcw
dec
test
ficompl
out
inc
shl
clc
xchg
push
pop
lahf
hlt
push
ret
into
sti
orl
push
shrb
icebp
arpl
inc
insb
jne,pt
mov
jge
add
xor
stos
aad
movsb
in
pushf
sahf
ret
aaa
loop
cmp
fisttpl
mov
cmc
mov
int
out
dec
mov
cmpsb
sarl
mov
sbb
andb
fdivs
scas
iret
inc
jns
adc
pop
fcoms
shufps
jb
iret
mov
imull
dec
out
sti
lds
cld
xchg
sbb
jno
mov
sub
insl
xor
fnstsw
pop
incb
mov
sti
ficomps
add
nop
xor
mov
mov
sbb
pop
and
inc
add
add
out
movl
add
leave
and
adc
cld
daa
add
aas
stos
lock
xchg
fwait
out
xor
mov
xchg
pop
sub
lods
sahf
movb
inc
nop
insb
enter
rol
dec
push
push
sbb
mov
mov
jge
and
test
cmpb
idivl
shrl
cmp
sub
nop
std
mov
cmp
cmp
rol
jbe
lods
xor
sar
inc
pop
insl
loop
sub
arpl
iret
bound
les
mov
jae
xor
outsb
pop
fsubs
xor
enter
lods
sub
jmp
in
jns
bound
cli
lds
jl
repnz
sbb
push
imul
scas
jae
popf
xchg
jnp
dec
aam
inc
cmp
scas
push
shll
cld
pop
pusha
mov
ljmp
rcrb
mov
daa
jle
fldt
push
mov
add
nop
cmpsl
scas
xchg
or
out
mov
push
int3
shrb
mov
push
or
mulb
xor
cmp
sub
and
cmpsb
fmulp
adc
mov
imul
ds
sbb
fwait
adc
mov
mov
or
cmp
cld
xor
and
fnstcw
pop
jg
data16
sbb
aaa
aam
xchg
fidivrs
test
push
adc
sub
jb
add
scas
push
xor
ljmp
in
enter
mov
movsb
std
dec
pusha
or
push
mov
mov
repnz
rcrb
ret
movsl
aas
ss
fisubs
lret
adc
or
sub
and
negb
loop
fdivs
and
pop
pop
xor
and
sub
jmp
xchg
add
outsl
std
enter
jae
mov
lea
rdtsc
adc
rcll
or
adcl
cltd
int
sbb
xor
mov
mov
fsubr
in
scas
dec
mov
jnp
out
cmpb
push
push
test
push
call
les
inc
xor
xchg
sub
push
mov
mov
xor
or
and
outsl
and
jne
ficoml
push
ficomps
jmp
and
lods
call
out
add
dec
outsl
push
xchg
xor
push
lahf
movsl
das
aaa
and
xchg
rcll
repz
push
inc
pop
inc
fcoml
daa
mov
pusha
psrlq
lahf
cmpsl
xchg
test
dec
sub
cmp
jmp
imul
pusha
ja
pusha
ret
orb
cli
xchg
mov
cwtl
cmp
clc
add
cli
mov
mov
dec
push
push
xchg
xor
cmpsl
das
or
mov
cmc
movsl
leave
je
fs
mov
mov
cmpsl
adc
mov
lea
xor
sub
aam
in
jle
adc
fisttps
out
negl
add
imul
push
divb
or
loope
push
push
lods
xor
sbb
mov
dec
addb
inc
pop
lcall
fcoml
push
scas
add
add
mov
inc
mov
jp
xlat
push
rorb
jb
inc
repz
push
pop
and
cmp
mov
or
mov
jle
sub
sbb
push
adc
jge
in
cmpsl
in
lcall
mov
dec
sbb
pop
and
sub
push
cltd
pop
cmc
inc
jo
cld
add
push
dec
in
mov
adc
mov
bound
cmp
xchg
push
pop
out
aaa
dec
loopne
pop
lea
fisubs
xchg
jo
or
lods
xor
mov
int3
in
lret
pushf
mov
ret
jnp
jb
fdivs
rcr
mov
movsl
mov
lret
int
loopne
movsb
push
scas
in
call
rcrl
sbb
add
sahf
sbb
aad
adc
mov
push
push
sahf
pop
cmp
lahf
dec
pop
data16
loop
out
enter
xor
out
mov
lods
dec
sub
clc
scas
repnz
cmp
clc
sbb
jmp
or
jmp
aas
inc
mov
mov
dec
or
pop
sub
push
inc
nop
les
push
lret
dec
shrb
lret
loope
hlt
jb
inc
lock
push
sub
enter
xchg
sbb
outsl
push
rcrl
rcr
lock
jnp
imul
cmp
and
jl
loopne
aad
clc
cs
dec
or
lock
jb
mov
mov
out
cmp
jbe
mov
aaa
push
pop
outsb
loop
es
mov
pop
fdivl
adc
fiadds
jp
xchg
rorb
cwtl
movsb
or
mov
jnp
add
xchg
jno
mov
sarb
nop
sub
stos
popf
into
jmp
inc
out
push
out
stc
mov
push
pop
decb
adc
mov
or
mov
out
ljmp
xorl
or
rorl
xchg
leave
daa
and
jmp
popa
cmpsl
adc
arpl
fimuls
insb
dec
fnstenv
lahf
lahf
dec
jmp
adc
mov
or
out
jno
sahf
adc
xor
ret
xchg
lcall
xchg
scas
cmpsl
pop
enter
xchg
adc
loopne
rcr
jne
cld
aam
jp
cmpl
mov
mov
je
sub
xor
imul
test
mov
sti
sarb
add
dec
shrl
je
mov
push
in
in
std
test
mov
lods
dec
xchg
rol
push
icebp
pop
cmp
add
mov
mov
stos
fidivrl
mov
sub
fistps
add
out
push
jmp
adc
ret
mov
jno
in
pop
xor
fwait
or
idivl
imulb
push
mov
iret
imul
add
sub
movsb
stc
and
arpl
mov
stc
cltd
hlt
scas
pop
leave
mov
adc
int
mov
xor
add
in
add
fcoml
insl
sub
pop
jnp
jp
xchg
mov
fcmovb
into
cld
movsl
inc
fildll
sbb
xor
cmp
push
es
mov
jo
cmpsl
pop
dec
xor
call
sahf
xor
insb
push
mov
leave
fwait
leave
cmpb
fstpt
lods
pop
and
pushf
out
jnp
daa
cmpsb
into
lods
mov
jge
ret
aam
out
repnz
xchg
loop
rcll
call
push
mov
out
pop
idivl
addl
scas
cmp
sahf
loope
xchg
mov
push
movsl
mov
inc
je
pusha
fbstp
mov
jp
and
shlb
jge
mov
pop
jne
bound
xchg
aas
mov
scas
or
pop
popa
out
jle
mov
cmp
outsl
jl
mov
call
sar
jecxz
js
xchg
mov
sub
mov
push
sbb
scas
sub
addb
arpl
bound
lds
and
mov
cld
pop
xor
in
jecxz
push
pop
leave
push
es
and
push
jge
test
jnp
pop
dec
fildl
jae
cmp
and
mov
out
sbb
pushf
inc
cli
fnsaves
sub
and
mov
into
in
gs
mov
and
into
lret
dec
int
xchg
xlat
popf
jb
push
sub
mov
sub
dec
andb
sbb
mov
xchg
add
iret
movsl
jb
cmp
and
and
jae
test
lret
hlt
pop
dec
adc
out
xor
or
push
ja
stos
sub
jnp
aas
pop
icebp
data16
sarb
sbb
sbb
mov
mov
add
pop
ret
xchg
scas
jne
ja
dec
ret
mov
ret
das
pop
xchg
aas
fs
add
out
rcrl
in
mov
les
sub
jne
insb
sbb
xor
push
fcom
pusha
aaa
imul
ja
pop
xchg
test
cmp
ja
pop
and
sahf
cmp
cmpsl
gs
cmp
push
xlat
neg
mov
mov
xchg
fwait
and
lahf
mov
dec
fiadds
xlat
mov
add
shrb
cld
and
sub
int
pop
add
cmp
fildll
pop
mov
add
adc
jae
gs
jbe
outsl
std
xchg
jp
ljmp
jbe
inc
test
test
pop
push
cmpb
cmp
adc
outsl
push
push
mov
cmp
and
mov
jg
pusha
cltd
movsb
pop
and
inc
loopne
clc
xorl
ficoml
fwait
pop
das
and
mov
lcall
sub
inc
jae
adc
mov
loopne
clc
clc
aam
movsl
sbbb
test
nop
pop
mov
xor
in
addr16
xchg
or
int
mov
shll
adc
dec
add
incl
pop
pop
lods
push
mov
pop
xor
jo
in
sti
xchg
or
jnp
lcall
mov
xlat
dec
and
pusha
adc
push
xor
shrl
pop
mov
loopne
jns
xor
sbb
scas
push
xchg
xchg
mov
cmp
xor
iret
lcall
push
mov
mov
pop
gs
insl
push
mov
xor
repz
jo
xchg
mov
cpuid
cmpsl
test
sbb
fisubs
adc
mov
push
hlt
xchg
jle
cli
inc
popa
mov
inc
je
mov
add
rclb
je
add
sbb
loope
adc
or
pop
push
cld
push
cli
push
dec
jmp
pusha
ror
and
subl
or
sbb
pop
sarl
inc
das
pushf
arpl
or
xchg
aad
jb
outsl
daa
dec
popf
pop
repnz
test
sahf
inc
imul
out
cli
and
sub
mov
pop
inc
repnz
add
push
out
sti
loop
jbe
push
sub
rol
negl
cltd
mov
mov
lods
ljmp
xor
dec
out
lret
xchg
call
in
inc
cmp
jle
cmc
inc
lods
and
fnstenv
movhps
into
push
fs
mov
fs
mov
adc
sti
loopne
sbb
push
add
aad
pop
movsb
inc
fildl
jl
je
fnstenv
adc
mov
xor
outsl
loop
pop
pop
in
orb
adc
lcall
xor
std
fdivs
or
js
dec
push
and
fwait
cltd
loop
jae
and
scas
adc
std
xchg
in
test
and
dec
adc
mov
int3
out
mov
cmp
adc
add
mov
sub
addr16
pop
arpl
test
push
mov
inc
pop
cmp
add
adc
fisttpll
pop
dec
inc
mov
loop
cmp
add
pop
ficoms
pop
cmpsb
sub
aas
popa
pop
popa
movsb
cmp
in
xor
mov
ss
push
mov
sar
dec
mov
jp
lahf
pop
xchg
pushf
xchg
popa
push
cmp
sub
cmc
out
stos
cmp
movsb
jmp
and
push
cmpsb
out
mov
add
mov
add
test
cmp
cmp
cmp
pushf
cltd
testl
out
jns
push
and
adc
cmpl
mov
jno
leave
pop
jne
outsb
ja
fadd
add
mov
scas
shl
inc
pop
ret
or
lahf
xchg
mov
push
in
ja
lds
adc
icebp
cld
xor
ss
in
adc
pop
sbb
movsl
push
rcr
fucomi
inc
adc
sub
pop
ror
bound
dec
in
sub
fildl
fcompl
cld
jp
dec
push
mov
dec
add
test
xchg
test
enter
outsl
cmpb
jg
clc
mov
mov
insb
adc
outsb
cmp
cmp
lock
mov
jae
adc
iret
mov
popa
outsb
in
mov
sbb
repz
aas
adc
xor
jmp
imulb
cld
imul
dec
push
adc
or
push
push
inc
sub
cwtl
or
test
daa
stos
pushf
and
movsb
pop
pavgb
mov
jecxz
pusha
rcll
icebp
icebp
sub
test
rorl
push
push
mov
movsb
and
addl
ds
sti
popa
fldl
fcoms
pop
shlb
nop
pop
mov
inc
cltd
pop
inc
fldenv
je
xor
jp
lods
shrb
pusha
and
pushf
fwait
cmp
push
or
ljmp
fdivrl
inc
aas
xchg
push
ret
and
xorl
jno
inc
cmp
out
add
push
or
xor
daa
iret
mov
sbb
or
adc
add
jb
mov
cmp
pop
add
stos
cs
sbb
xbegin
cmpsb
push
lock
mov
cld
mov
jnp
mov
pop
inc
dec
scas
icebp
xchg
mov
add
lods
sub
dec
arpl
jmp
xor
dec
lcall
push
aam
das
adc
ljmp
stos
jmp
mov
bound
repnz
push
pop
adc
mov
and
aad
outsl
fs
lock
aam
sti
ret
cld
and
mov
adc
sbb
dec
push
cmpsb
lods
test
sbb
adc
sub
std
aaa
sub
sti
fldt
mov
jnp
ret
les
push
lcall
aaa
fnstenv
js
aaa
in
xlat
and
into
shrb
ret
outsl
jl
scas
in
test
xor
pop
sbb
cmpsb
jo
xlat
ds
stos
nop
cmpsl
fsubrs
xchg
mov
bound
mov
fstl
push
out
mov
mov
sbb
movsb
pop
repz
int3
sbb
aam
and
mov
jae
popf
fwait
mov
mov
mov
mov
popa
mov
dec
xchg
xchg
inc
out
mov
out
inc
sub
enter
add
lret
mov
nopl
loopne
inc
dec
sbb
jg
arpl
push
stc
add
push
daa
jmp
cmp
mov
jae
rolb
sbb
fldl
add
add
std
xor
dec
sbb
mov
sub
cwtl
jbe
sub
in
int3
sahf
out
dec
cmpsl
rcrb
mov
ljmp
sub
cmp
xchg
sbb
push
sub
mov
pop
sub
pushf
out
fildl
bound
fcmovu
mov
icebp
mov
fmul
cwtl
pop
popa
cmpsl
jb
cmp
adc
mov
mov
pop
pop
cmpsl
jbe
inc
cmp
sbb
jecxz
hlt
push
loopne
pop
or
or
ret
test
cli
rorl
in
outsl
inc
dec
repnz
dec
fistpll
addr16
lcall
ficoml
sub
add
push
jns
inc
pop
daa
fnstenv
push
ret
dec
shrl
bound
std
test
cmc
jl
test
repnz
push
and
or
repz
jp
insl
or
cs
out
or
lock
imul
popf
sbb
pop
lahf
lcall
psraw
out
pusha
aaa
and
add
mov
addr16
repz
jae
mov
mov
out
or
mov
in
sbb
shrb
fcomps
repnz
std
pusha
jg
sbb
jp
jo
ficoml
inc
lds
jae
sbb
and
xor
loopne
dec
sub
xchg
int
outsl
lcall
mov
shl
xchg
sarl
divb
repz
xor
adc
ss
rolb
fucomip
dec
sbb
test
cmp
sbb
push
andl
sbb
jnp
es
jge
hlt
daa
ret
inc
jae
or
jb
ds
iret
jo
fisubl
roll
push
xchg
xchg
std
fs
cmpsb
and
out
add
push
cmp
clc
or
iret
mov
mov
inc
jbe
push
push
aam
fdiv
out
jecxz
outsl
out
sbb
mov
xchg
xchg
sbb
sub
mov
or
add
push
addr16
ss
xchg
xor
dec
mov
xor
jo
cwtl
jl
add
out
cwtl
inc
pop
push
hlt
xchg
cmc
into
fisttpl
inc
or
repnz
mov
jge
lea
incl
mov
sahf
aad
pop
inc
lea
xlat
push
out
cmp
std
lock
jge
push
arpl
pushf
sbb
pop
aaa
or
das
rorb
jl
and
call
cmpsb
adc
sbb
mov
in
cmc
push
mov
jle
notl
mov
shlb
inc
adc
inc
pop
mov
dec
dec
xor
xor
jecxz
leave
push
mov
mov
push
ljmp
test
out
mov
daa
dec
push
xchg
stc
dec
xchg
jle
and
cmpsb
not
or
pop
and
mov
xchg
aas
shrl
xorb
jbe
push
dec
adc
inc
repnz
sbbl
jp
addr16
pop
popf
adc
je
out
mov
xchg
ljmp
sub
repnz
adc
jae
or
sahf
in
push
aad
loopne
dec
loopne
sti
adc
fisubrs
cli
fnstenv
cmp
mov
cli
aam
ljmp
imul
push
mov
faddl
sub
xchg
push
sahf
mov
add
xchg
stc
aaa
push
add
rcrb
xor
bound
shl
notl
sub
popa
shll
push
out
xchg
xchg
dec
outsl
push
in
repnz
mov
fsubl
ret
nop
jg
mov
jo
cmp
insl
ja
pop
pop
or
jl
xor
xor
pop
add
mov
sub
loop
xor
sub
cwtl
sub
outsb
mov
pop
repz
xchg
lods
sti
xor
mov
mov
inc
xchg
dec
std
mov
xlat
sbb
cld
fisttpl
dec
jns
or
jb
sbb
aas
xchg
push
cmpb
or
mov
cmp
mov
shlb
push
mov
test
inc
fdivrs
sbb
insl
xlat
pop
push
lods
or
dec
mov
cmpsl
inc
scas
cmpsl
push
push
push
es
mov
and
outsl
test
add
xor
mov
or
mov
dec
mov
fiadds
incl
mov
ret
xchg
lods
int3
rol
lock
call
loop
add
pop
jno
xchg
in
mov
push
adc
aad
dec
jl
or
cmp
es
jmp
rclb
mov
movsb
mov
jmp
or
add
dec
xchg
pop
xor
cli
aas
dec
dec
lds
push
mov
xchg
in
dec
adc
imul
mov
jecxz
repnz
jb
ret
xor
push
lods
aas
add
push
rcrb
and
movsl
mov
in
cwtl
cmp
scas
sahf
push
jp
stos
ret
inc
sub
add
repz
jo
cs
and
cltd
mov
cmp
dec
push
mov
imul
mov
or
mov
cwtl
dec
inc
sbb
mov
cmp
push
mov
lods
jmp
test
fisubrs
lods
fmull
scas
roll
fstpl
in
mov
add
cs
xchg
sbb
mov
and
xchg
dec
and
add
push
lret
in
sbb
pushf
lods
push
icebp
inc
mov
fldcw
loop
jp
xchg
leave
imulb
rcl
xchg
fidivrs
popf
pop
sbb
lret
dec
inc
xor
add
fistps
sub
inc
push
pop
andb
imul
cli
repnz
sbb
dec
sti
mov
cmpsb
in
sub
xchg
dec
push
nop
and
pop
ret
ficoml
cmpsl
jb
xchg
sbb
jne
fsubrl
push
xlat
out
add
mov
push
enter
mov
and
out
adc
add
cmpsb
push
lahf
jmp
fcom
lcall
sbb
and
push
icebp
xchg
mov
into
gs
mov
add
add
daa
fbstp
add
lock
push
sahf
lcall
push
hlt
xor
mov
cs
cmp
into
fisubrl
push
and
mov
leave
pop
rcrb
loope
sub
xchg
lods
dec
add
mov
xor
push
sub
mov
jge
inc
cmp
leave
stos
jecxz
pop
dec
fistl
mov
jecxz
sahf
or
test
shrb
mov
outsl
xchg
pop
fcmovnu
es
mov
scas
jne
nop
fistpll
cmp
mov
loop
xchg
mov
jmp
bound
mov
xchg
dec
dec
push
sbb
push
std
push
xlat
adc
xchg
call
shlb
dec
in
mov
je
jb
cmc
cltd
cmp
xor
fs
movsl
sbb
les
xlat
imul
dec
daa
sbb
xchg
jge
lods
lret
inc
inc
hlt
std
pop
adc
jmp
and
sub
mov
push
inc
jge
inc
outsl
adc
add
add
addr16
idivl
inc
sub
adc
mov
shrb
adc
push
repz
outsl
mov
jl
adc
sbb
lret
xor
shr
sub
in
push
pop
mov
loopne
fwait
aam
pop
addb
jae
cmp
cld
cs
in
addr16
push
icebp
xor
and
add
inc
push
loopne
push
test
aaa
xor
mov
mov
mov
out
xor
sbb
push
test
jl
mov
js
fisttpll
rcrb
adc
lods
ss
imul
push
movsl
add
mov
test
adc
mov
adc
stc
add
add
mov
push
std
push
jb
xchg
das
inc
push
scas
push
xor
sbb
sarb
sub
xchg
jno
cs
inc
or
sub
dec
inc
push
mov
lods
cwtl
movsl
shrl
mov
jo
inc
sub
loopne
in
cld
or
imul
scas
push
xchg
push
xor
jb
xor
loope
push
ljmp
cmp
int3
lret
mov
pop
lods
push
loope
loopne
mov
push
je
mov
aaa
addb
cmpsl
push
arpl
cltd
lods
mov
mov
aad
mov
xor
aam
inc
mov
sub
mov
sbb
mov
sub
push
ficoms
mov
std
dec
decb
mov
fnstcw
pop
or
jo
push
inc
sbb
or
lock
pop
fwait
push
adc
js
aas
cld
cmp
lods
sbb
sbb
test
sub
test
loope
and
mov
nop
fnsave
dec
push
push
adc
aad
dec
sarl
lea
cmpl
movsl
sub
pop
out
sub
leave
cmpsb
or
xor
fld
jg
add
xchg
fmuls
imul
jg
mov
out
fbstp
sbb
xchg
js
lret
dec
and
mov
idivb
stos
movsb
loop
ficoms
adc
lcall
scas
jmp
adcb
stos
test
scas
mov
adcb
push
cmpsl
leave
mov
cwtl
pop
popl
sbbb
mov
lods
int
mov
ljmp
icebp
xchg
adc
push
dec
xor
inc
mov
cmpsl
push
lods
ss
icebp
andl
mov
cwtl
mov
sub
in
mov
in
filds
sarb
xor
aas
jge
icebp
sub
inc
cltd
movsb
and
inc
xor
imul
in
cltd
cli
push
mov
inc
pop
out
pop
and
movsb
rol
dec
clc
add
in
or
popf
mov
pop
sub
cmc
sub
jno
or
movsl
notb
push
push
fisttps
out
xchg
testb
in
inc
call
mulb
add
add
mov
mov
add
add
add
add
add
add
add
add
rolb
add
adc
add
mov
mov
add
add
add
add
add
mov
add
mov
add
fadds
add
mov
mov
add
add
add
add
js
add
add
add
jp
add
add
add
add
add
add
add
add
add
add
mov
fiaddl
add
add
mov
mov
add
add
add
add
enter
mov
add
mov
add
mov
mov
add
add
add
add
lock
add
lds
add
add
add
add
add
outsl
insl
add
add
add
add
xor
add
pop
add
xorb
add
addb
xorb
add
test
add
stc
movsb
dec
inc
outsl
insl
add
add
add
add
dec
add
add
or
test
add
mov
mov
add
add
add
add
jo
add
or
add
add
mov
add
mov
mov
add
add
add
add
cwtl
add
add
or
enter
mov
add
mov
mov
add
add
add
add
rolb
add
push
or
test
add
mov
add
mov
mov
add
add
add
add
add
add
addb
add
mov
mov
add
add
add
add
add
add
loopne
or
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
mov
mov
add
add
add
add
inc
add
add
pop
or
rolb
add
mov
add
add
add
push
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
and
add
add
andb
add
mov
mov
xchg
cwtl
cwtl
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
mov
mov
pushl
mov
mov
lcall
popf
sahf
ljmp
shrl
popf
popf
fcmovbe
fwait
fcmovbe
fwait
mov
add
add
cli
cli
inc
ret
incl
xchg
incl
xchg
incl
xchg
incl
nop
xchg
jmp
jmp
out
ljmp
push
pushl
popa
pushl
popa
jnp
pop
pushl
leave
cmp
lock
push
push
ficoms
incl
add
add
jmp
incl
addl
lea
mov
lea
decl
nop
xchg
decl
mov
mov
mov
call
bound
jmp
jg
pushl
xchg
pop
jmp
mov
callw
xchg
cmp
aad
push
call
mov
jge
jmp
incl
add
add
in
incl
lcall
lahf
mov
cmpsb
lcall
pushf
popf
ljmp
mov
mov
mov
jg
inc
mov
mov
mov
jae
popa
pushl
insl
jp
js
jp
js
push
nop
xchg
call
mov
lcall
mov
cli
div
mov
fld
jmp
cmpsb
jae
lret
lods
xchg
incl
add
add
in
incl
fwait
pushf
lcall
pushf
popf
ljmp
mov
mov
dec
mov
xchg
insl
ljmp
mov
xchg
scas
mov
fnstsw
jecxz
addl
decl
mov
lcall
cli
cli
call
shrb
mov
ljmp
add
add
lret
cmpsb
call
mov
add
mov
mov
out
jmp
addb
pushl
test
mov
xchg
jae
cmpsb
sahf
xchg
lcall
mov
lcall
xchg
fnstsw
jecxz
ja
insl
jp
js
mov
jg
ja
insl
lcall
hlt
lock
std
std
sti
call
lret
mov
call
lret
mov
pushl
add
add
cmpsb
jae
mov
mov
loopne
jmp
lea
mov
sahf
ljmp
stos
scas
jmp
cmpsl
stos
jmp
mov
xchg
decl
mov
scas
fidivrs
pop
inc
xchg
pop
dec
cltd
arpl
lret
cltd
arpl
lret
cltd
arpl
shll
cmp
mov
jo
mov
ss
cmpsb
cmp
lock
mov
mov
int
cmp
add
add
fwait
jne
in
cmp
jb
addl
lcall
cmpsb
lcall
xchg
dec
mov
fnstenv
push
jmp
jno
fnstsw
ret
jmp
int
decl
cmpl
addl
lcall
div
std
div
mov
mov
mov
xchg
fnstenv
add
in
cmp
add
add
stos
jmp
lods
sahf
ljmp
ljmp
stos
scas
mov
xchg
jae
mov
dec
inc
xchg
pop
fldt
test
mov
scas
mov
rol
push
cmc
stc
push
stc
cld
jmp
jmp
call
xchg
xchg
call
mov
push
div
push
div
push
repnz
ljmp
out
lock
mov
mov
cmpsb
incl
add
add
mov
incl
add
add
test
mov
pushf
lahf
mov
dec
lods
xchg
mov
jno
decl
lea
call
cltd
call
cwtl
call
xchg
xchg
call
xchg
xchg
call
lcall
lcall
call
xchg
xchg
call
xchg
xchg
lcall
stos
scas
jmp
add
add
add
add
mov
push
into
stos
incl
add
add
lods
jge
lret
lods
xchg
jmp
add
add
ret
mov
aad
jge
mov
jp
fldt
add
add
add
out
lret
cmpsb
call
mov
incl
add
add
lret
cmpsb
incl
add
add
aam
jmp
scas
ja
in
lods
incl
add
add
rcl
inc
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
mov
sar
rcl
lcall
add
add
stos
test
shlb
add
int
cmp
mov
jmp
cmpsb
cmp
add
add
inc
mov
xchg
mov
cmpsb
xchg
mov
cmpsl
cltd
mov
stos
pushf
mov
stos
pushf
mov
stos
pushf
mov
lods
sahf
mov
lods
sahf
mov
lods
sahf
mov
ret
lcall
add
add
lods
cmp
fsubrl
add
int
push
into
stos
incl
add
add
cmpsb
jae
fmul
mov
add
in
out
incl
push
ud0
insb
pop
ljmp
insb
pop
ljmp
jb
ljmp
ja
pushl
ja
pushl
pushl
pushl
jmp
jno
out
in
out
jmp
add
add
scas
ja
in
ja
jmp
add
add
mov
add
mov
jmp
sub
shlb
int
sbb
int
and
int
and
rorl
es
mov
dec
mov
call
mov
call
mov
call
mov
call
xchg
xor
rcll
xor
rcll
cmp
rcll
jmp
jmp
jmp
add
add
mov
call
pushf
incl
add
add
stos
test
shll
add
mov
jmp
sub
jns
call
test
call
test
call
mov
aam
sbb
rorl
and
rorl
es
mov
dec
mov
call
mov
call
mov
call
xchg
xor
rcll
xor
rcll
jmp
jmp
lcall
add
add
lea
add
add
scas
ja
in
cmp
add
add
jmp
sub
jns
call
test
call
test
call
xchg
xlat
xchg
xlat
xchg
aam
sbb
aam
sbb
int
and
int
and
int
and
into
mov
dec
mov
dec
mov
call
mov
call
mov
call
xchg
xor
leave
mov
in
jmp
jmp
add
add
mov
inc
xchg
pop
incl
add
add
scas
ja
aam
test
mov
ljmp
rorl
and
fimuls
sbb
fmull
adc
call
xchg
rolb
sbb
int
sbb
int
and
int
and
into
mov
dec
mov
dec
mov
call
mov
dec
mov
jmp
out
ljmp
cltd
dec
mov
incl
add
add
lods
cmp
add
add
int
incl
add
add
jmp
mov
lcall
out
inc
call
mov
cs
xchg
and
fimuls
adc
aad
adc
lret
adcb
lret
adcb
int
sbb
int
and
int
and
into
mov
dec
mov
inc
andl
out
jmp
cmpsb
sahf
xchg
incl
add
add
mov
add
aam
test
mov
jmp
mov
mov
push
mov
push
mov
push
mov
push
mov
jmp
push
jmp
movsl
inc
call
xchg
xor
fimuls
push
dec
jge
dec
adcb
lret
adcb
int
sbb
int
and
into
mov
inc
andl
jmp
jmp
lahf
mov
add
jmp
mov
xchg
incl
add
add
in
out
dec
cmpsb
cmp
sarb
cmp
lds
push
lds
push
mov
arpl
jmp
push
fstps
xor
int
sbb
leave
jge
dec
jge
dec
adcb
int
sbb
int
and
les
lcall
jmp
mov
add
add
mov
fstps
jne
lahf
mov
out
call
mov
push
lret
xchg
clc
rcrl
clc
rcrl
push
lret
xchg
push
leave
mov
cmc
lds
jmp
mov
frstor
cmp
into
mov
dec
adcb
leave
jge
dec
adcb
int
sbb
les
lcall
jmp
incl
add
add
mov
jp
fwait
jne
lret
lods
xchg
incl
add
add
in
out
call
shrb
fsubrl
sti
fsubrl
push
fsubrs
push
rcrb
push
sarb
insl
frstor
inc
call
mov
dec
adcb
leave
jge
dec
adcb
shlb
pushf
push
jmp
jmp
mov
add
add
int
fmul
mov
ljmp
in
mov
neg
mov
sti
jecxz
sti
jecxz
cli
loop
cli
loop
cli
fdivl
push
rcrl
jmp
mov
frstor
inc
call
mov
dec
adcb
leave
jge
inc
ja
lcall
jmp
mov
add
cli
cli
jmp
aad
push
loopne
push
in
push
in
push
in
push
loopne
push
loopne
push
fcmovnb
out
aad
in
into
scas
jmp
mov
call
lods
jge
shll
push
pushl
jb
jmp
push
ud0
div
jmp
add
add
cli
cli
jmp
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovnbe
fcompp
aam
sar
lret
into
lret
mov
dec
mov
scas
inc
mov
mov
mov
test
mov
sti
lcall
add
xchg
xchg
xchg
pushl
mov
cmpsb
test
lcall
popf
lcall
popf
lcall
sahf
lcall
sahf
lcall
sahf
lcall
mov
lcall
mov
test
mov
stos
scas
jmp
nop
xchg
incl
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
incl
add
add
add
add
fcos
sti
mov
add
jmp
cmp
add
xlat
dec
js
add
iret
add
pop
lahf
mov
jg
pushl
pushl
pushl
call
clc
add
pop
jmp
clc
add
pop
push
clc
add
pop
cld
cmp
add
inc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
iret
mov
add
test
mov
jb
rcll
jb
loopne
and
mov
mov
add
xchg
fsubl
jne
ret
je
add
jl
add
mov
and
add
ret
mov
xchg
lea
hlt
mov
lahf
mov
mov
mov
jbe
add
lods
jl
xlat
mov
add
add
test
addb
test
add
in
add
scas
nop
add
mov
add
test
add
xchg
movl
roll
int3
mov
add
sbbb
test
add
stos
addl
jmp
add
lods
mov
in
ret
mov
add
nop
xor
lret
sbbl
xchg
jl
xchg
subl
mov
jno
shll
sbb
lret
add
mov
jne
mov
popl
int3
jg
add
mov
mov
movsb
adcb
mov
add
mov
mov
xchg
neg
mov
test
scas
add
ret
mov
mov
add
mov
add
scas
popa
add
icebp
fldl
in
dec
add
shrb
enter
cmc
shlb
mov
add
mov
mov
lea
cmpsb
addb
cwtl
mov
mov
xchg
insb
add
mov
ret
add
add
lea
add
cmpsb
jge
mov
fldcw
add
sbbb
mov
rcrl
cli
rcrl
mov
incl
test
add
jne
add
dec
push
add
dec
add
jne
jae
cmp
aaa
push
adc
add
xor
push
adc
push
outsl
das
add
movsl
add
add
add
pop
add
add
add
jo
sbb
ss
sbb
or
sub
add
aas
add
or
add
pop
add
str
and
add
add
add
jl
es
add
add
mov
add
sarl
fadd
add
stos
mov
stos
stos
lods
add
lods
mov
shrl
add
lds
add
mov
js
fists
addb
mov
lcall
add
mov
int
xor
lahf
lahf
mov
add
loop
add
les
ljmp
add
lods
mov
into
mov
stos
add
lods
xchg
add
lea
out
addl
leave
addb
movsb
lea
rcrb
aad
add
cmpsb
imul
mov
mov
lret
sbbb
aad
sbb
stc
aam
add
mov
add
shrb
sub
popf
xchg
sahf
pushf
add
andb
mov
test
add
mov
jge
enter
iret
mov
add
test
add
mov
add
lret
fadd
mov
add
movb
pushf
jbe
mov
mov
nop
nop
xchg
add
test
lea
rorl
mov
add
lcall
mov
mov
xchg
xchg
xchg
add
lret
add
fwait
lcall
les
lret
sbbl
cli
clc
testb
incl
add
jne
jne
jne
jne
jne
jne
add
jne
pop
pop
pusha
cmp
popa
adc
adc
jne
add
inc
outsb
data16
inc
and
pop
xor
add
xor
daa
cmp
adc
cmp
add
pop
cmp
adc
push
pop
inc
dec
insb
es
add
jne
jne
jne
jne
jne
jne
add
add
and
inc
push
dec
and
je
add
add
jne
or
or
or
add
add
sbb
push
push
add
jne
mov
pop
sub
add
jo
add
add
jne
pop
xor
adc
das
outsl
push
jne
add
add
cmp
adc
fs
add
add
xor
dec
sub
jne
add
add
jne
jne
jne
jne
jne
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
loopne
add
mov
add
into
ret
add
mov
ja
xchg
xchg
xchg
add
fwait
lcall
mov
lods
add
out
in
add
loope
add
fldt
add
in
roll
call
xchg
cltd
add
aad
add
lahf
inc
add
jle
add
clc
testb
out
add
rclb
add
scas
mov
hlt
int3
xchg
add
mov
xchg
xchg
add
ror
add
mov
les
enter
lret
adcb
xchg
xchg
cwtl
add
out
add
mov
add
mov
add
int3
nop
add
in
add
out
ljmp
xchg
popl
rorl
test
mov
xchg
xchg
xchg
xchg
add
mov
rolb
movsl
cmpsl
test
add
mov
addl
in
int3
add
cwtl
addl
mov
int
add
mov
pop
add
mov
add
mov
add
out
out
in
sub
pushf
popf
sahf
add
mov
add
mov
or
les
mov
add
xchg
xor
leave
stos
addb
mov
nop
add
jl
add
enter
sahf
pushf
add
lods
xchg
add
mov
xchg
sahf
imul
cmpsb
jl
in
lea
icebp
mov
mov
jno
sti
xlat
movsb
add
jp
add
mov
add
scas
lods
add
mov
test
add
mov
add
ret
mov
add
mov
xchg
xchg
xchg
add
test
xchg
xchg
xchg
add
mov
mov
mov
lods
lcall
cmpsb
test
lahf
mov
int3
shlb
lret
popl
faddp
lahf
add
xchg
jl
roll
add
mov
add
mov
mov
mov
popl
mov
outsb
inc
add
fstp
add
shlb
cld
out
add
mov
add
mov
add
pop
add
mov
add
jmp
add
mov
add
jmp
jns
movl
mov
icebp
fnstcw
add
mov
add
sarl
fadd
add
stos
mov
stos
stos
lods
add
lods
mov
shrl
add
lds
add
mov
js
fists
addb
mov
lcall
add
mov
int
xor
lahf
lahf
mov
add
loop
add
les
ljmp
add
lods
mov
into
mov
stos
add
lods
xchg
add
lea
out
addl
leave
addb
movsb
lea
rcrb
aad
add
cmpsb
imul
mov
mov
lret
sbbb
aad
sbb
stc
aam
add
mov
add
shrb
sub
popf
xchg
sahf
pushf
add
andb
mov
test
add
mov
jge
enter
iret
mov
add
test
add
mov
add
lret
fadd
mov
add
movb
pushf
jbe
mov
mov
nop
nop
xchg
add
test
lea
rorl
mov
add
lcall
mov
mov
xchg
xchg
xchg
add
lret
add
fwait
lcall
les
lret
sbbl
cli
clc
testb
incl
add
and
leave
adc
addb
add
add
add
add
sbb
js
jg
orl
xchg
scas
or
add
add
add
fcomi
fmulp
out
mov
rcll
add
add
pop
mov
test
xchg
jae
das
mov
dec
add
add
pop
repz
jbe
xor
in
jne
cmpsl
cmpsl
cmpsl
cltd
pop
and
add
pop
mov
cmp
std
adc
add
add
fdivl
push
add
add
or
jns
lea
push
and
test
add
loopne
mov
aas
imul
inc
scas
add
add
mov
push
add
push
aam
inc
pop
dec
add
add
inc
add
add
mov
mov
dec
mov
or
add
mov
mov
lahf
mov
pop
into
sbb
mov
add
add
add
and
in
add
pop
lcall
lret
mov
ret
in
add
add
psubb
cli
in
aaa
stc
mov
inc
inc
inc
inc
inc
clc
add
sar
add
clc
add
inc
lock
inc
loopne
add
rolb
rolb
sarb
sarb
rcrb
cmp
pop
sar
pop
sar
inc
inc
inc
inc
inc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
mov
push
add
int3
cmpsb
add
mov
add
rclb
ret
ret
ret
add
in
ljmp
stos
mov
mov
inc
add
sbbl
repnz
jmp
aam
mov
enter
iret
mov
add
std
add
shll
add
movb
pushf
insb
add
mov
add
lcall
xchg
add
mov
daa
add
mov
add
cmpsb
jns
sarl
rcl
flds
mov
mov
add
mov
cs
mov
adc
popf
popf
sahf
add
stos
add
adcl
add
andb
test
add
jge
add
mov
lods
add
movsl
mov
mov
xchg
add
mov
dec
add
mov
mov
add
xchg
xor
shll
mov
mov
mov
add
mov
mov
lea
add
aad
add
ret
leave
mov
add
mov
add
les
add
int
add
ret
lds
lcall
add
cld
sti
add
hlt
icebp
add
mov
pop
add
lea
add
mov
jns
out
mov
stos
add
mov
add
sarl
call
fwait
add
sarb
add
test
add
mov
or
mov
dec
add
lods
jae
mov
xchg
add
mov
add
mov
insl
add
int
add
cli
stc
add
mov
add
mov
add
aam
add
rcll
add
mov
jbe
int3
test
lods
add
ret
hlt
rcrb
add
ret
mov
fadd
mov
out
xor
ret
add
lcall
in
mov
add
scas
pusha
add
lods
cltd
add
test
add
mov
loope
mov
add
mov
roll
loop
fldl
ljmp
add
xchg
dec
add
in
out
add
mov
aad
push
add
xchg
add
loope
add
mov
lcall
add
mov
add
loope
add
mov
popl
mov
mov
add
fstpt
add
add
fcmovbe
add
shlb
popf
pop
or
hlt
in
in
fmul
mov
lcall
add
out
add
mov
xchg
add
out
add
mov
mov
add
mov
arpl
out
lahf
add
out
add
mov
add
mov
stc
add
imul
add
mov
add
jg
add
shll
mov
xlat
test
out
sarb
nop
push
add
lret
fidivrl
mov
loop
int
ljmp
add
fxch
add
lods
gs
test
xchg
add
movsl
inc
add
mov
mov
sti
fidivs
nop
add
int3
lahf
add
ret
fnsave
cltd
add
out
lock
rcll
add
aam
add
xchg
and
ror
roll
scas
mov
cld
icebp
in
cmc
lock
add
jecxz
add
leave
mov
add
mov
fcmovnb
mov
aam
movsl
add
ret
incl
add
or
inc
add
pop
sub
push
jle
lahf
lods
add
add
scas
lods
dec
dec
dec
inc
dec
dec
mov
jo
cmp
inc
add
or
or
call
fadds
xor
xor
in
test
push
push
jns
add
add
add
add
or
push
sbb
mov
dec
dec
dec
xor
out
cmp
push
popa
push
push
add
add
add
add
adc
inc
dec
cmp
cli
pop
fadds
pop
pop
ret
test
movsb
add
push
push
add
add
add
fiadds
inc
sarb
or
pop
xchg
cmc
je
rclb
add
add
push
push
xor
mov
pop
pop
pop
pop
pop
pop
pop
pop
add
adc
push
push
cwtl
adc
jge
or
or
or
addl
xor
adc
add
or
and
pop
pop
ds
ljmp
push
movsb
add
add
or
mov
sub
cmp
ss
pop
push
push
mov
or
adc
add
add
or
leave
and
dec
dec
and
inc
inc
pop
dec
mov
mov
add
add
add
int
add
add
or
sahf
and
fs
pop
ss
rolb
add
add
test
add
add
add
repz
xor
and
add
add
add
add
in
add
add
add
xchg
popa
adcl
sub
xchg
jg
add
add
lock
dec
icebp
out
adc
push
cmp
sub
add
inc
cld
lds
sbb
in
push
xor
lret
add
add
adc
xor
nop
pusha
add
add
pusha
jge
jge
hlt
hlt
hlt
addl
add
add
cld
add
pop
cld
add
paddb
add
cld
add
add
add
add
add
add
add
adc
add
jno
add
jno
add
sldt
dec
pop
add
pop
pop
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
incl
add
add
adc
add
add
or
push
jne
sbb
add
add
add
push
add
xor
and
add
add
add
jne
xor
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
and
and
and
and
and
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
and
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
push
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
add
js
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
cmp
or
dec
pop
or
pusha
pop
or
jo
or
add
add
lock
or
add
add
ljmp
or
lock
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
adcl
push
fwait
jle
mov
push
xor
loop
insb
pop
aaa
inc
sub
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
push
mov
or
mov
adc
adc
adc
pop
dec
and
arpl
testb
outsl
js
sets
or
xchg
fimuls
xchg
icebp
nop
add
dec
in
cwtl
lods
cmp
insb
sbb
push
xor
bound
andl
call
in
pusha
dec
call
rorb
dec
add
jbe
fdivp
push
jle
add
add
lea
lods
stos
and
nop
cmpl
adc
pop
jae
test
jno
mov
cld
jnp
outsl
sbb
in
sbb
das
and
dec
push
ret
lcall
sbb
call
nop
add
mov
mov
inc
sbb
popa
aaa
and
push
call
and
pand
or
sti
xchg
nop
add
lcall
mov
mov
push
xor
jnp
adc
sbb
jne
inc
cmp
sbb
je
push
daa
and
lea
push
and
pop
orl
cmp
inc
mov
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficoms
and
clc
dec
inc
cld
icebp
add
jmp
mov
ret
repnz
movsl
pop
push
sbb
sbb
and
mov
dec
cmpsb
cmp
adc
add
pop
pop
pop
pop
ret
push
in
in
xor
xchg
mov
sbbl
push
loopne
push
add
test
mov
push
ret
rorl
push
dec
roll
push
push
sti
scas
aad
push
mov
xor
lahf
es
xor
leave
push
add
jp
hlt
push
ror
inc
shll
mov
and
pop
aas
add
pop
sub
hlt
cltd
enter
push
fs
push
ds
leave
xor
sub
or
inc
incb
xchg
orb
sub
test
mov
dec
test
mov
inc
pop
adc
add
jne
cmp
jge
jo
inc
mov
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
scas
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
notl
sub
std
push
test
push
mov
sbbl
add
jbe
add
xor
sbb
mov
dec
push
out
mov
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
cmp
sbb
lret
pop
into
ss
cmp
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
lea
outsb
inc
dec
sub
loope
dec
mov
pop
xchg
and
jl
nop
pusha
aam
mov
sub
push
dec
lahf
or
and
push
push
testb
in
add
inc
je
xchg
mov
out
adc
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
adc
loopne
sub
test
pushf
pushf
fimull
mov
or
and
in
sbb
pop
fwait
mov
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
mov
xchg
pop
xchg
in
sbb
pop
mov
rclb
scas
or
jno
adc
addl
rol
cmp
pop
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
mov
pop
inc
cmp
clc
cmp
lret
xor
es
push
dec
push
mov
enter
mov
xchg
test
push
outsl
mov
shrb
sub
insl
mov
call
cmp
andb
repz
cmpsb
imul
je
mov
mov
cmpb
add
daa
call
pusha
cmp
cltd
push
lea
insl
xor
sarl
push
add
add
call
sbb
movsl
and
test
or
enter
dec
and
scas
and
xor
in
add
sub
push
xor
pop
cmpsb
ficomps
jo
insb
imul
outsb
and
outsb
jl
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
push
dec
daa
arpl
jae
sbb
xor
popa
xchg
js
pop
ja
xor
data16
adc
cmp
ss
aas
add
push
movsb
dec
loopne
fadd
push
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
test
xchg
xor
dec
stos
mov
insl
cmp
or
mov
dec
cltd
xor
dec
pushf
or
ja
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
movsb
pop
or
hlt
push
add
clc
or
add
push
add
pop
or
cld
pop
or
add
inc
add
pop
or
hlt
pop
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
je
mov
.byte
lods
aaa
