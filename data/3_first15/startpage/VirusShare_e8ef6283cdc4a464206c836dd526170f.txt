cmp
imul
inc
add
je
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
mov
cmp
cmp
cmp
cmp
cmp
cwtl
xchg
cmp
cmp
movsb
xor
jg
jg
and
add
mov
call
and
fucomp
ljmp
je
movzwl
mov
ss
pop
ret
and
daa
daa
daa
sbb
or
and
daa
or
mov
std
ljmp
add
push
add
mov
test
jne
xor
pop
jg
mov
mov
mov
ret
lea
mov
mov
mov
in
sti
incl
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
scas
mov
in
out
repnz
xchg
dec
test
xchg
mov
mov
push
add
or
ja
in
mov
mov
adc
add
or
or
cmp
or
mov
call
mov
mov
mov
mov
add
rcrl
ja
pushl
push
or
push
or
ret
and
rorb
imul
jmp
add
push
jne
aaa
insb
jo
fldcw
jne
mov
cmp
aaa
roll
pop
pop
pop
push
fucomip
lcall
mov
je
sti
mov
xchg
cmp
jb
mov
add
call
add
int
bound
jne
mov
or
or
jnp
jbe
ret
jmp
pop
mov
add
fimuls
mov
pop
repnz
sub
ret
jmp
sub
pop
push
sub
mov
sub
mov
lods
loope
pop
aam
or
or
jmp
sbb
pusha
xor
sti
jne
sbb
nop
es
mov
cmp
push
adc
jge
mov
call
and
pushw
xchg
add
add
and
sbb
decl
and
adc
popa
pop
and
out
loop
mov
callw
add
push
lahf
push
mov
movsl
jne
icebp
add
add
cmpl
in
mov
ret
fucomip
mov
movl
incl
lret
and
call
testb
mov
adc
in
es
sbb
ja
mov
add
cmp
ja
cmp
jp
popf
sbb
jbe
or
push
in
sar
rorl
or
add
and
xlat
out
push
filds
mov
ljmp
in
or
sbb
adc
shr
sbb
pop
push
adc
mov
scas
dec
hlt
outsl
mov
lock
fadd
pop
add
add
sbb
cmpsl
jb
sub
or
lds
mov
pop
cmp
add
and
mov
cmp
or
outsl
cmp
scas
adc
sti
push
push
insl
or
adc
sub
jae
and
cmp
cmp
push
jb
inc
movnti
lock
jmp
sahf
and
stos
nop
out
sub
or
nop
cmp
jae
mov
cmp
jae
std
sbb
add
dec
je
out
add
dec
clc
sti
arpl
mov
aas
imul
add
repnz
shlb
cmp
jg
jmp
xlat
mov
add
in
je
mov
sbbl
inc
ds
jne
push
pop
add
and
imul
cmpl
movsl
and
push
and
enter
lods
xchg
insl
pop
mov
or
cli
jl
add
je
out
ret
je
cmp
inc
jle
pop
mov
mov
inc
negl
push
stos
mov
jg
pop
jl
or
nop
or
mov
push
push
je
mov
pop
fcomps
jmp
ds
fsubr
add
xor
test
xchg
xchg
mov
ss
jne
xchg
not
push
push
cmp
faddp
add
cmpl
sub
inc
popf
adc
sbb
cli
lock
incl
mov
ds
jecxz
add
adcb
sbb
cmp
jae
mov
out
rorl
in
add
pop
push
test
je
scas
dec
or
or
xor
repz
adc
jmp
jecxz
add
push
add
hlt
pop
sbb
cmp
add
in
ss
push
lcall
mov
and
sub
jl
and
xor
cwtl
popf
adc
negl
seta
or
das
mov
xor
jle
hlt
pop
test
testb
add
jne
mov
mov
std
cmp
add
pop
pop
push
adc
cmpsl
add
xchg
sub
cmp
mov
notl
pop
xchg
pop
adc
xchg
test
shlb
mov
iret
add
jmp
adc
arpl
adc
add
push
ja
jns
or
out
xor
push
jns
outsl
fistl
mov
jns
sahf
sbb
add
inc
fistpl
popa
xchg
mov
jne
add
insb
sbbb
jb
or
loopne
ljmp
adc
test
jns
add
sar
test
cwtl
mov
jmp
sub
pop
fnstenv
hlt
mov
add
inc
iret
lds
dec
fadd
add
std
sti
jb
add
or
mov
cmp
call
xchg
lea
lcall
add
xor
shll
loopne
fucomip
data16
es
or
or
mov
and
add
pushf
jle
rolb
cld
jg
add
or
adc
insb
or
push
or
lahf
in
ljmp
or
ret
mov
push
xor
hlt
int3
or
or
add
sub
cmp
add
and
jg
or
cmp
cmp
testb
add
push
cmp
mov
xor
add
jbe
or
fsubs
test
jne
mov
adc
mov
or
andl
mov
pop
insb
cmc
adcb
add
dec
fcoml
dec
xorb
into
push
lea
sub
cld
jg
ljmp
sub
cmp
jge
add
out
loop
fsub
pop
dec
jmp
daa
xlat
add
inc
add
mov
in
mov
push
idivl
aad
lds
or
clc
add
dec
jae
lea
shlb
pusha
adc
mov
mov
push
xchg
mov
mov
add
orb
sub
jo
aaa
adc
rol
ret
nop
hlt
pop
insl
jle
cmpsb
adc
mov
cmp
jmp
out
lds
hlt
inc
adc
push
pop
add
sub
cmp
cmp
mov
pop
mov
push
sbb
inc
mov
insb
add
inc
adc
or
shrl
and
inc
sub
loope
add
or
or
push
mov
cld
adc
lea
movsl
movsl
mov
cwtl
mov
int
push
es
or
adc
push
mov
cmp
pusha
xchg
mov
pop
add
decb
push
adc
repz
mov
sbb
clc
sub
push
sbb
mov
add
mov
mov
and
test
mov
xchg
lcall
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
push
and
mov
and
jmp
add
push
fdivrl
adc
or
ljmp
lock
scas
ret
clc
sbb
mov
sbb
jle
adc
in
cmpb
mov
pop
je
pop
jmp
int3
push
ds
mov
mov
rcrb
jle
mov
sub
dec
mov
or
hlt
push
jge
bound
add
shlb
inc
sub
xor
call
pop
inc
ljmp
add
xchg
leave
jmp
xchg
jne
js
pop
ret
xlat
xor
pop
pop
mov
fwait
pop
mov
pusha
pop
aam
int3
jg
loopne
sti
clc
stos
jle
inc
cld
jbe
inc
xor
push
lahf
xchg
jg
push
mov
add
sbb
sbbb
sti
mov
mov
popa
mov
daa
jg
pop
sbb
or
movb
pop
or
xchg
shlb
push
or
jg
mov
jmp
mov
jge
inc
dec
cwtl
loop
pushf
or
adc
mov
in
xor
jmp
mov
orl
sarl
sub
push
insb
jp
mov
add
js
shrl
int3
and
inc
and
mov
adc
push
mov
sbb
mov
xchg
pop
jne
out
or
jo
mov
ret
adc
out
fwait
std
pop
stos
pop
lock
test
jne
test
ja
inc
and
or
mov
add
inc
mov
addb
jo
push
or
test
jge
xor
cmp
xchg
push
pop
xchg
sub
cmp
push
int3
jne
stos
in
cmp
jle
sbb
sahf
lock
lods
dec
mov
adc
ret
sbb
sub
adc
testl
scas
decl
add
sub
push
clc
push
adc
xchg
pusha
jo
or
adc
je
shll
pop
mov
and
in
and
inc
jg
jg
add
out
push
mov
sub
jge
pop
mov
pop
loope
add
mov
lock
aad
pop
notb
adc
sbbl
notb
pusha
adc
mov
hlt
adc
inc
sub
sub
testb
cmpsb
or
mov
mov
pop
dec
test
push
sbb
insb
outsl
pop
insb
mov
cmp
imul
sub
addr16
icebp
cmc
cmpl
iret
adc
jnp
je
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
mov
dec
add
xor
sbb
cmp
jge
pop
mov
pop
jbe
lock
sub
or
push
xchg
xchg
mov
ret
add
pmulhw
and
fdivs
cwtl
push
or
in
and
mov
sbb
test
dec
push
add
cmpsb
cmc
adc
push
enter
mov
add
add
ss
test
rclb
mov
fcomp
bound
ss
adc
mov
mov
xchg
dec
adc
inc
dec
rorl
lea
daa
cmpsb
test
jle
call
or
mov
add
stos
jl
add
dec
sahf
je
je
mov
or
mov
test
je
sbb
enter
dec
jnp
pop
or
add
push
jmp
out
xor
add
jge
mov
out
mov
fbld
les
dec
mov
cltd
inc
add
fs
push
rcrb
test
das
enter
insl
jo
ret
sbb
mov
mov
fistpll
push
and
sub
xor
push
push
push
shll
jne
mov
divb
shrb
repnz
daa
call
jno
add
nop
fmull
cmp
or
je
mov
sub
movsl
mov
and
repz
outsl
xchg
lea
xor
std
xor
mov
ds
inc
push
lock
scas
or
in
imul
fcompl
pop
sub
imul
inc
adc
or
add
adc
dec
jl
push
and
sub
push
xor
cmp
jne
push
push
pop
jbe
inc
cld
push
inc
stos
jae
test
lret
cmp
ds
test
push
adcl
shl
or
push
jp
mov
jmp
mov
repnz
ret
jo
push
test
jecxz
or
jp
inc
or
adc
mov
mov
push
or
and
call
sbb
in
mov
sarl
movl
daa
das
inc
out
mov
shlb
mov
and
dec
dec
cld
notb
cwtl
mov
push
push
push
lea
push
lcall
cmp
add
cmp
test
add
xlat
jne
ret
decw
dec
pushl
inc
adc
inc
out
sub
orl
xchg
push
aaa
inc
cmp
mov
loop
rorl
rcrl
mov
jae
cmpb
push
je
inc
jmp
push
xchg
sub
jp
rcrb
jbe
cmp
or
loopne
or
adc
mov
je
int
mov
cmp
hlt
jmp
cmc
imul
sbb
mov
pop
mov
or
adc
add
jo
iret
and
push
mov
fs
mov
loopne
dec
push
iret
frstor
adc
out
iret
adc
adcl
rorl
data16
push
fisttps
jo
push
inc
sbb
sub
mov
sub
outsl
pop
clc
mov
das
movb
pusha
and
mov
aaa
inc
icebp
mov
inc
adc
mov
add
shl
lret
loop
test
cld
imul
push
push
xorb
jne
add
loopne
cmp
shl
jae
cmpsl
jle
in
sbb
ljmp
xlat
mov
jle
cmp
je
sbb
pop
xchg
adc
ret
pop
jge
pop
xchg
pop
or
mov
push
leave
or
gs
sbb
pop
cmp
mov
fwait
icebp
call
cmp
lret
pusha
out
jp
sub
pop
adc
shlb
cmp
notb
mov
movsb
adc
or
in
sti
fsubr
adc
fdiv
sub
xor
fs
mov
mov
loopne
or
stos
mov
test
lahf
push
stos
pop
mov
cmc
add
jo
inc
mov
pop
stc
in
cmpsb
dec
adc
std
or
mov
push
mov
xor
test
mov
adc
xchg
sbbl
sahf
stc
je
call
cmp
mov
sbb
clc
sub
dec
bound
mov
jo
pop
std
stos
sti
ljmp
sub
je
xor
scas
mov
stos
sbb
xchg
je
lds
aad
sbb
inc
call
and
add
xor
flds
mov
fidivrs
xor
test
or
mov
aaa
xor
cmpb
mov
and
ret
cmc
sub
mov
stos
inc
in
and
and
stos
loop
xor
cli
sub
xor
xchg
push
insl
xor
outsb
cld
mov
mov
inc
cmp
je
mov
sti
sub
je
fmulp
int
and
je
pop
je
xor
dec
mov
dec
inc
test
int3
jmp
or
or
cmp
ja
lea
add
add
push
in
mov
dec
je
sarb
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
imul
inc
inc
inc
jmp
mov
filds
popa
jb
xchg
and
add
or
or
js
leave
test
aad
add
pop
xor
mov
pop
out
aas
testl
pop
jne
push
pop
inc
cli
mov
cmp
mov
jl
xchg
jle
xor
scas
hlt
xchg
das
cmp
pop
cwtl
push
push
cmp
push
push
out
aas
xchg
xor
movl
data16
mov
push
out
mov
pop
sbb
adc
movsb
inc
xchg
jnp
mov
fucomp
pop
sahf
clc
data16
or
mov
ret
add
inc
push
call
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
dec
out
scas
lock
insb
jne
mov
jecxz
fldcw
add
mov
call
ret
cmpb
pusha
cmc
pop
sbb
cmp
cli
in
push
call
pop
sahf
out
aaa
sbb
push
push
movsb
jbe
insb
sbb
cmp
and
pop
cmpsl
mov
xchg
cmpsl
cs
add
push
push
push
lcall
fucomi
repnz
or
jne
movsbl
inc
inc
jmp
rdtsc
insb
jo
add
cs
nop
fchs
push
mov
imulb
aas
loop
fiaddl
test
adc
cmp
adc
sbb
jne
jge
jne
fiadds
sbb
lahf
dec
out
pop
mov
icebp
mov
in
adc
xchg
std
fwait
xor
or
cmp
cli
out
push
je
mov
dec
sbb
sub
and
insl
lock
push
xorb
clc
add
test
dec
stos
mov
cmc
enter
loopne
in
jne
jbe
adc
adc
mov
jo
dec
add
push
push
mov
push
sbb
sub
inc
das
test
inc
daa
jo
mov
fbstp
sub
mov
mov
movl
outsb
lock
pop
int3
jmp
mov
out
mov
mov
add
xchg
out
sbb
pop
mov
inc
add
lea
or
push
inc
rcrl
outsl
mov
pop
xor
int3
movsl
xchg
lret
mov
andl
addr16
sbb
je
sbb
call
push
je
insb
enter
or
mov
movsl
lea
mov
fs
mov
mov
jmp
ret
xor
push
flds
inc
pop
mov
add
or
daa
mov
add
je
cmp
std
sbb
sub
aad
dec
je
jmp
add
ja
aas
sub
jb
je
jmp
cmp
cmp
fistps
inc
adc
jmp
sub
cmp
mov
dec
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
pusha
add
mov
jmp
mov
into
mov
mov
lea
push
or
sbb
adc
xor
das
je
push
xchg
xchg
mov
sbb
dec
xor
call
mov
adc
inc
sbb
es
add
cli
push
mov
test
in
push
inc
sti
push
inc
mov
aaa
fsubr
push
leave
mov
mov
pusha
popa
fsubrs
scas
ret
sbb
fwait
mov
out
enter
push
aas
mov
xchg
les
cmp
jne
add
nop
std
outsl
repnz
cmp
jne
and
xchg
dec
repnz
fwait
inc
push
mov
add
xor
mov
adc
xor
inc
xor
and
pop
outsl
sarb
jmp
xor
fs
mov
sbb
pop
inc
adc
mov
xor
jle
xchg
cmp
jle
add
inc
mov
lret
dec
mov
movl
adc
mov
sub
mov
mov
movb
xchg
jo
or
or
dec
mov
mov
add
hlt
xchg
testb
rorl
mov
dec
pop
mov
cmp
lock
or
jp
mov
push
push
shr
dec
outsb
lds
push
xchg
clc
neg
sbb
inc
lds
push
adc
ja
add
int3
aam
ljmp
pop
leave
daa
push
ret
jne
xor
push
cmpw
push
cwtl
adc
cmp
mov
inc
xlat
lods
and
dec
push
push
and
push
xor
es
xor
pop
enter
mov
js
jge
cmp
and
dec
fs
fsubs
gs
adc
ds
push
cmpl
adc
rclb
pop
mov
call
and
push
loop
cwtl
dec
xor
and
sub
cmp
jne
push
add
inc
mov
add
ret
cld
in
adc
sbb
lods
mov
pop
je
es
insl
insb
popa
popa
loopne
dec
les
cmp
push
ss
cmp
cmp
pop
sbb
push
jle
cmpsb
xor
sbb
add
lock
jbe
cmpsl
sbb
pop
jno
sbb
xchg
insl
add
popl
add
rcrb
pop
jnp
std
dec
fmuls
dec
jl
lock
push
lea
pop
in
hlt
adc
pop
push
mov
mov
mov
push
sbb
add
pop
jbe
push
or
ret
add
jne
and
dec
and
inc
jg
push
push
scas
mov
and
push
dec
cld
pop
pop
sarb
xchg
adc
adc
or
out
xchg
push
inc
and
add
loopne
push
sub
dec
sub
xchg
pop
movw
pop
mov
and
sub
dec
clc
lea
ss
adc
sub
mov
dec
or
mov
cmp
push
add
hlt
mov
xchg
data16
push
push
adcb
test
aas
loopne
loope
pushf
push
nop
push
mov
mov
in
xchg
in
mov
leave
dec
and
or
dec
add
int
or
je
add
pop
jmp
inc
inc
mov
push
incb
rcrl
shr
outsl
push
test
xlat
and
popf
pop
sub
scas
push
rcrl
rcrl
subb
incb
add
aas
jle
test
dec
jae
jns
mov
add
cmp
lret
mov
xorl
imul
cmp
xchg
fdivr
jmp
je
cmp
je
in
or
dec
sub
xchg
es
mov
sar
add
lock
mov
mov
mov
lret
mov
add
pop
push
ror
out
sub
loope
lret
mov
sbb
cmpsb
xor
mov
movsl
outsl
push
pop
mov
loop
inc
cld
dec
jmp
sub
lcall
hlt
dec
dec
jne
or
mulb
cld
jge
mov
cmp
pushl
add
dec
jmp
and
mov
rorl
cmp
mov
into
pop
dec
jne
mov
mov
and
call
pop
lea
jmp
out
mov
dec
and
rolb
push
aam
decl
mov
rorb
ja
add
push
and
mov
push
mov
cmp
jne
dec
je
fadds
cmpsb
pop
lock
sbb
or
jmp
adc
dec
push
and
add
repnz
and
inc
and
aaa
pop
cmp
jne
or
ret
jae
jl
loope
jo
add
jmp
shr
aam
idivl
adc
shr
shr
sbb
xor
inc
push
cmpsl
push
clc
inc
xlat
add
notb
sub
xchg
cmp
repz
push
cmpsb
pop
imul
mov
pop
adc
orb
cmc
out
sub
xchg
pop
mov
mov
dec
es
ret
adcb
jge
sub
adc
jg
push
lcall
mov
adc
shr
in
fldpi
jmp
sbb
pop
faddp
ja
clc
cmc
movsl
mov
cld
dec
jl
pop
icebp
xchg
jge
lods
jle
sub
mov
icebp
dec
jg
stc
add
lea
sti
adc
push
aas
sub
sarl
cli
adc
push
movsb
dec
js
mov
inc
cmp
idiv
imul
cmp
repz
pop
jl
cmp
adc
pop
outsb
adc
add
clc
lcall
sbbb
cmpl
sub
jne
sub
ret
loopne
or
xlat
aam
or
pop
jo
lods
jmp
inc
jnp
or
arpl
cli
mov
inc
push
lock
jl
icebp
ljmp
push
lcall
pop
div
test
push
pop
or
loopne
or
aas
push
push
adc
push
dec
lea
ret
xchg
icebp
adc
mov
xor
outsl
cmp
jg
sub
outsl
push
mov
pop
dec
mov
iret
or
outsb
and
movsb
and
je
cmp
je
cmp
je
jo
push
cld
cmp
je
cmp
cs
jb
add
fucomp
add
clc
jmp
adc
mov
and
out
jmp
push
mov
mov
testb
pop
mov
add
push
adc
cmp
pop
jmp
cmp
ret
scas
or
sub
and
and
mov
loop
adc
ret
cmp
loopne
pop
mov
and
repz
pop
jbe
push
adc
push
mov
sub
or
add
jg
inc
and
lret
insb
stc
push
and
adc
ja
inc
addl
es
dec
dec
adc
in
jb
jmp
sub
bnd
jmp
test
lods
sbb
cmp
sub
icebp
jmp
mov
popf
adc
les
push
stos
pop
lock
and
and
adc
lcall
pushf
dec
daa
roll
outsb
or
push
notb
pop
inc
pop
add
xor
out
insl
push
sub
lods
mov
push
jecxz
jge
cmp
cmp
mov
call
rorl
popa
dec
sub
xor
jno
cmpsl
add
jne
cltd
push
adc
lret
or
jmp
xchg
cmp
rolb
in
mov
cmp
jb
popf
cli
inc
add
addb
fisubs
cld
or
sbb
xchg
ljmp
decb
mov
call
rorl
out
push
sub
sbb
lss
ds
lea
push
push
repnz
out
lea
and
mov
or
mov
sbb
and
pop
jl
adc
sbb
push
aaa
lock
jbe
incl
inc
jbe
mov
push
adc
and
or
jecxz
scas
clc
sahf
subl
stos
icebp
lods
pop
cmp
add
mov
mov
and
xor
popf
xor
adc
and
cmp
xlat
adc
and
pop
in
and
je
sub
adc
mov
daa
int3
and
mov
cmp
jbe
add
jmp
test
mov
outsb
test
and
and
out
mov
mov
push
push
inc
ret
lods
mov
pushf
outsl
and
push
pop
cld
rorl
mov
fcmovb
dec
jae
jo
or
jmp
push
mov
push
push
aaa
push
xor
inc
jmp
fs
data16
jns
std
arpl
test
clc
add
mov
icebp
arpl
fcmovnb
mov
fisttps
pop
das
push
mov
push
mov
mov
add
insb
shrb
mov
outsb
xchg
ja
pop
pop
addl
cmp
add
push
sub
pop
sub
xor
rcrb
xor
call
cmp
cmp
fcom
ror
or
cmp
enter
leave
leave
enter
lods
test
mov
enter
inc
adc
and
push
aam
add
jbe
cmp
xorl
dec
xor
adc
mov
sete
in
in
mov
in
jl
je
in
in
insb
push
in
pop
pop
push
in
in
push
dec
dec
inc
in
in
inc
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
xor
in
cld
xor
hlt
cmp
jns
lock
cmp
cmp
aam
int3
enter
cmp
sarb
inc
xor
dec
ret
dec
pop
xor
scas
xlat
insl
inc
enter
pusha
je
pusha
fs
scas
or
sbb
push
mov
pop
mov
xor
and
xor
mov
sub
aas
test
pop
and
nop
lret
push
js
sub
push
sbb
js
dec
gs
test
movsb
mov
les
cwtl
in
and
mov
nop
lret
test
je
or
lods
jnp
or
adc
add
push
imul
ret
outsb
gs
xor
cs
insb
out
inc
jb
popa
je
push
outsl
outsl
insb
push
shrb
push
outsb
popa
jo
push
sti
xor
dec
imul
pop
dec
gs
aas
dec
lret
add
aaa
das
fwait
push
ret
mov
outsl
arpl
jae
gs
outsl
jb
add
insl
and
lret
rcrb
jne
push
lea
push
fistl
dec
outsl
fs
gs
aas
call
push
clc
sub
pop
xor
adc
xchg
jbe
sbbb
mov
mov
xchg
rolb
stos
daa
sbb
adcb
cmp
push
ret
roll
popa
mov
pop
fisttpl
inc
jbe
in
leave
inc
sbb
aas
js
inc
or
or
adc
mov
add
push
adc
in
jb
es
jne
icebp
ret
push
bound
xor
xlat
dec
repz
cmc
sbb
sti
add
mov
enter
add
push
add
or
adc
jno
pusha
jbe
push
lret
loope
xchg
scas
xchg
jmp
or
xchg
dec
jns
js
outsl
jmp
pop
jmp
add
pop
pop
cs
pop
add
leave
sbb
cmp
xlat
and
xchg
add
mov
and
jb
pop
mov
enter
mov
mov
pushf
mov
xchg
mov
cmp
add
inc
jb
dec
sarb
inc
les
jb
xorb
lret
or
enter
cs
call
mov
int3
clc
cmp
pop
or
jne
or
jns
neg
cmp
mov
inc
dec
mov
ret
mov
mov
div
dec
out
outsb
jl
jo
cli
cmp
or
std
lcall
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
cli
and
cmc
into
jmp
out
in
and
cmp
push
add
pop
into
aas
stos
mov
inc
lahf
aaa
xchg
mov
shr
and
pop
and
add
mov
mov
arpl
jo
xor
gs
cmpl
dec
push
cmp
mov
mov
cmpl
pop
add
mov
push
testb
jne
push
sbb
mov
sub
test
lock
dec
clc
ds
jbe
or
aam
or
xchg
mov
shlb
out
mov
hlt
jns
xor
inc
flds
leave
dec
mov
add
add
sbb
push
lock
mov
bound
xchg
or
fcomp
enter
xlat
test
cmp
sbb
dec
in
or
mov
dec
lock
push
clc
add
je
inc
repz
jno
scas
fidivs
or
jmp
mov
jno
mov
inc
add
push
jnp
outsb
das
sub
sub
adc
shlb
sti
sub
dec
adc
movl
sub
mov
xchg
mov
add
shr
cmp
jb
mov
data16
xchg
cmpb
mov
xor
add
sahf
push
fstpt
movhps
rcrb
xor
sahf
dec
rorb
mov
mov
rorb
clc
push
mov
hlt
xchg
pop
insb
inc
rolb
aam
jne
push
or
push
lea
stos
ret
notl
push
in
mov
test
je
imul
and
sbb
loopne
in
mov
imul
mov
cmp
mov
movswl
push
call
fisttps
or
bound
lea
cmpb
jne
xchg
stos
push
insb
pop
adc
cmpsl
sbb
mov
data16
xor
decl
lret
sub
sbb
jecxz
add
ret
stc
enter
dec
jne
mov
push
push
mov
cmp
cld
test
lcall
xlat
ja
mov
and
jp
pop
cmp
imul
lock
xor
mov
pop
mov
xor
mov
adc
mov
sbb
push
push
add
pop
testl
push
cmp
outsb
jne
sbb
incl
inc
jo
ret
xor
call
les
pop
push
stos
cltd
add
adc
popa
adc
fmull
mov
add
sub
jne
es
mov
add
push
aam
or
negb
loopne
popa
mov
sbb
sbb
ljmp
orb
jge
add
sub
cmp
and
xchg
pop
popa
shll
mov
sub
xchg
mov
popa
int3
movsb
cltd
xchg
data16
enter
inc
lcall
add
jmp
inc
cmp
inc
test
xor
cmc
push
rcrb
les
lock
jg
dec
gs
gs
imul
jb
jo
outsl
jb
popa
bound
out
mov
inc
aaa
xor
mov
out
add
cmp
or
dec
je
mov
insl
imul
bound
arpl
push
jecxz
or
add
push
xchg
pop
test
fiaddl
sahf
es
jb
push
shrb
mov
fsubs
pusha
cmp
sub
mov
add
lcall
pushl
mov
lret
mov
jns
inc
push
cld
ja
add
xlat
loopne
push
dec
clc
adc
fcomi
mov
ss
pop
xor
pusha
jle
fdivrl
cmp
loopnew
aad
inc
test
add
cltd
push
adc
or
arpl
enter
jno
push
and
ret
sahf
ret
mov
loopne
sbb
adc
dec
ljmp
lcall
lds
push
aas
out
and
add
add
pop
pop
cmpsb
pusha
inc
test
mov
add
lods
mov
push
insb
inc
movsl
inc
inc
clc
and
pop
adc
push
adc
mov
mov
xor
jmp
ret
testl
cmc
loop
in
rcll
mov
pop
std
lock
test
sub
push
hlt
adc
cmp
jbe
cmpsl
out
inc
hlt
cmpl
mov
inc
or
jmp
xchg
aas
insb
mov
inc
dec
in
sub
push
hlt
and
call
push
inc
xchg
cmp
cmp
push
mov
cmp
rcll
repz
push
and
xchg
insl
push
xchg
or
call
cs
xchg
lock
push
dec
and
movsl
scas
xor
mov
xchg
cmpl
dec
gs
inc
cld
nop
add
je
jb
add
or
test
nop
lret
mov
push
aam
in
lods
or
gs
sbb
push
gs
sub
rorb
pop
sub
inc
jb
xor
or
ja
and
xor
xchg
add
inc
adcb
dec
aam
aad
into
dec
outsl
jo
push
dec
or
sub
outsb
jne
das
add
addr16
inc
gs
inc
popa
div
mov
dec
dec
popa
insl
gs
daa
inc
imul
push
push
push
fucomi
aas
dec
outsb
outsw
jb
popa
je
outsl
outsb
das
inc
insl
jo
jns
and
lods
add
push
inc
add
gs
pop
imul
imul
jae
jle
push
stc
popa
jo
gs
inc
gs
lea
jbe
mov
inc
enter
add
pop
and
scas
cmp
jo
sbb
mov
or
imul
lods
inc
inc
ret
cmp
aas
push
enter
inc
pop
in
dec
pop
movsb
jmp
in
and
not
and
or
std
push
cli
aas
sahf
and
not
and
or
mov
clc
dec
mov
shll
push
xor
mov
push
mov
fsubs
shr
mov
mov
shl
or
mov
sub
inc
lock
mov
cltd
xorb
dec
jl
or
fmuls
out
out
xor
push
or
jl
xor
add
cs
push
jo
shr
test
jbe
xchg
mov
inc
or
adc
inc
sbb
aad
invd
daa
aas
mov
shlb
mov
andb
loope
mov
inc
mov
xchg
or
sub
jne
pop
dec
aas
push
daa
pop
test
pop
add
rcrb
xor
jl
adc
mov
mov
mov
daa
icebp
pop
dec
insb
std
add
addr16
test
adc
mov
or
inc
and
mov
sbb
push
push
rcr
mov
xlat
pushf
mov
xor
push
sbb
jg
push
mov
mov
mov
push
and
cltd
std
jg
push
mov
mov
mov
xor
xchg
jle
push
jbe
pop
xor
in
scas
cmc
xor
xchg
push
mov
movb
test
dec
pop
cltd
cmp
xchg
inc
std
cmp
xchg
and
cwtl
subb
testl
mov
decl
in
pop
mov
and
nop
imul
jno
std
push
pop
cltd
xchg
push
mov
cmpsb
pop
and
mov
xchg
cld
out
and
not
cltd
in
and
push
ror
and
push
rorb
stc
int
adc
stos
mov
shlb
pop
cmp
inc
push
adc
add
jns
dec
pop
and
in
sub
sti
shl
inc
out
loope
pop
cmp
aaa
ret
xchg
sub
sub
in
in
scas
in
pop
inc
push
addl
clc
mov
gs
pop
flds
outsl
addr16
mov
enter
add
inc
cmp
call
dec
add
lds
cmp
or
jno
push
dec
add
xchg
cld
inc
adc
popa
popf
insl
xor
xchg
jl
fsts
or
in
aad
inc
repnz
ljmp
and
dec
cmp
mov
xor
mov
inc
repnz
jle
sub
daa
mov
sbb
test
out
aam
mov
sbb
cmp
aam
inc
repnz
in
pop
scas
dec
leave
sub
jl
pop
and
push
lods
fimull
and
hlt
aad
cld
data16
or
ljmp
inc
cmp
mov
push
test
push
aad
in
dec
shll
adc
cmp
ret
pop
pop
sub
int3
or
inc
jge
out
jmp
dec
pop
cltd
and
pop
test
jns
jle
outsl
pop
loopne
sub
cltd
xchg
push
mov
inc
add
pop
mov
cmpb
mov
xchg
and
repnz
push
mov
xchg
roll
inc
jb
add
movhps
push
add
jl
pop
or
pop
inc
js
inc
test
hlt
stos
vcvtdq2pd
int
or
fdivrl
xor
push
push
pop
aas
jmp
rcrb
inc
xor
pop
test
cmp
adc
dec
inc
adc
call
incl
shl
add
cmp
add
inc
adc
ljmp
mov
fbstp
lea
mov
mov
mov
mov
inc
sbb
jmp
push
inc
sbb
jmp
lea
cmp
ja
sub
pop
cmp
push
inc
outsb
imul
or
test
jnp
inc
sbb
mov
outsl
test
jmp
mov
leave
fiaddl
insb
imul
xchg
xchg
sbb
clc
ret
mov
xchg
aam
divl
mov
push
cmp
xchg
cmpsb
push
rcl
movsb
inc
xchg
mull
dec
aad
bound
xchg
mov
jge
repnz
fcomip
movsl
add
push
test
testb
aaa
mov
or
xchg
out
add
in
push
xor
sub
and
arpl
leave
inc
dec
jne
dec
aad
jl
push
arpl
push
cli
jmp
jmp
daa
sub
push
daa
mov
outsl
push
rclb
inc
icebp
pop
inc
popa
cmp
hlt
js
xor
xchg
fcompl
push
push
loope
cmp
test
ds
rclb
xor
jmp
into
sub
inc
sbb
fdivrp
es
sbb
and
jbe
pop
or
mov
divl
adc
enter
je
mov
testb
add
xor
insl
xor
dec
test
es
adc
ret
mov
in
sub
call
cs
sbb
shr
gs
shl
xor
or
xor
and
sbb
call
lods
and
test
xlat
xchg
jb
addr16
loope
stc
mov
popf
jbe
addr16
jns
out
mov
rclb
fdivs
jge
jo
xchg
sbb
adc
push
pop
nop
addr16
nop
or
sub
dec
cmp
lods
pop
mov
or
fisubs
and
add
jae
gs
pop
inc
jne
jb
outsb
je
push
movsb
fildl
push
jb
insb
call
js
outsb
dec
aas
aas
push
sub
popa
addr16
popa
je
es
jns
gs
jo
idiv
or
and
push
cmp
inc
sahf
std
sar
std
in
jmp
xchg
sub
and
dec
pop
outsl
fisttpll
pushf
xor
add
repnz
std
out
or
aam
or
mov
gs
sbb
lahf
inc
addr16
xchg
and
and
pop
jae
mov
out
or
ret
mov
loope
movsl
jnp
push
or
xchg
daa
mov
add
xor
adc
cs
cmp
cmp
scas
cmp
or
sub
jmp
push
push
push
sbb
bnd
jl
je
push
insl
inc
out
xor
inc
jb
push
or
testl
or
jb
pop
sub
arpl
or
incl
jae
bound
push
jb
jns
gs
shlb
push
lods
jnp
fsubs
cmp
das
in
sub
jo
inc
jbe
jae
push
xor
or
jbe
popa
outsb
adc
jne
lock
addr16
and
jb
imul
adc
negl
sbb
jae
das
dec
inc
pushf
jne
in
push
push
inc
popa
dec
adc
pop
mov
sub
imul
pop
sbb
jo
add
aaa
push
dec
pop
adc
insb
push
jo
push
fnstsw
ja
add
jae
add
ja
jae
rcrl
inc
push
mov
outsl
outsl
jbe
add
cltd
or
cwtl
sbb
bound
ss
fisttps
push
inc
outsl
arpl
mov
enter
sbb
mov
adc
push
jo
imul
mov
cmp
dec
dec
push
push
das
pusha
dec
xor
cmpsl
lahf
imul
mov
imul
jo
insl
outsl
pop
shll
test
cli
dec
dec
nop
or
insl
push
ja
fs
jb
inc
addr16
inc
jo
jo
xorl
jne
mov
jae
addr16
iret
inc
push
lret
ss
adc
pop
leave
pop
cmpsl
mov
imul
arpl
dec
mov
shll
jns
push
in
adc
ficompl
mov
dec
imul
imul
dec
lahf
xchg
ja
movsb
jg
popa
bound
adc
ret
pop
rolb
dec
shll
bound
push
pop
inc
adcl
pop
inc
inc
imul
push
and
inc
pop
ret
add
jo
jo
insl
sbb
ja
imul
jbe
mov
pop
inc
jnp
or
fdivrl
rcrl
jae
ret
xor
test
add
mov
xor
xor
jnp
in
pop
outsb
dec
arpl
adcl
push
insl
pop
pop
xor
outsb
fwait
aas
pop
jae
fucomip
push
xchg
pop
rcll
je
lahf
or
je
bound
testl
shlb
enter
dec
pop
cmp
pop
outsb
fcom
gs
scas
and
test
arpl
pop
mov
jg
outsb
dec
dec
jmp
dec
out
push
inc
js
pusha
mov
jg
sbb
jae
lea
dec
arpl
push
push
ja
ficompl
pop
push
or
insb
enter
xchg
mov
push
sahf
je
mov
push
inc
outsb
faddl
inc
jae
addl
arpl
push
push
mov
sub
jb
push
iret
adc
jle
aas
push
dec
dec
outsl
rcll
js
test
je
sub
sub
jne
lahf
clc
inc
inc
xchg
jbe
jg
ja
insb
jo
rorl
inc
push
adc
aam
pop
xorb
cmpxchg
xchg
scas
cmp
rcll
or
rorb
je
and
dec
gs
push
mov
dec
push
sbb
call
push
push
arpl
inc
pop
sub
inc
jns
jo
sti
es
mov
jge
lods
add
insl
imul
movhps
icebp
movsl
arpl
jle
les
inc
dec
dec
lret
iret
dec
pop
dec
push
push
outsb
imul
add
push
arpl
lock
push
push
outsl
pop
aaa
scas
pop
insb
shl
push
or
mov
xor
js
ja
push
sahf
or
push
inc
or
mov
loopne
jne
seta
sub
pop
xchg
movsb
jmp
out
out
jno
pusha
notb
dec
mov
jl
add
pop
jo
rolw
movsb
inc
out
js
dec
bound
and
inc
inc
adc
jae
movb
mov
addr16
outsl
ret
arpl
ja
cld
ljmp
outsl
outsb
inc
test
jge
or
incl
cmc
mov
outsb
aam
mov
jae
aaa
int3
push
daa
pop
xor
addr16
adc
pop
jns
into
jo
int3
jle
lahf
push
and
push
inc
lds
sbb
or
add
jno
divb
cmp
pop
ja
cmpb
loopne
in
aaa
aaa
cmp
push
stc
pop
aas
fsubl
insl
imul
xor
mov
add
cli
fs
adc
lahf
xor
popa
xchg
insl
das
mov
xor
mov
test
sahf
fistpl
popa
outsl
gs
fstps
js
aaa
add
add
or
divb
pop
xor
cmp
jne
insb
adc
mov
pop
rcr
imul
jle
adc
sbb
sbb
aas
imulb
ss
ss
xor
inc
shll
popa
pop
pop
addr16
or
xor
in
mov
ss
xor
jne
pushf
dec
or
pop
into
pop
outsl
ja
nop
data16
mov
jl
jle
je
cmp
cmpsb
sub
imul
mov
cltd
roll
jae
push
iret
jp
pop
jl
imul
mov
jns
inc
jo
xor
pushf
in
mov
xor
pop
sub
or
cwtl
dec
dec
dec
dec
enter
aas
outsl
xor
xor
xchg
cmp
das
popa
cmp
jno
repnz
xor
std
xor
aaa
xor
aaa
xor
sbb
push
pop
xor
push
cs
xorl
jle
ds
or
xor
push
cmpb
pop
xchg
adc
xchg
xor
idivb
imul
scas
adc
xchg
addr16
cmp
jbe
les
xor
dec
xor
push
push
shl
insl
jns
xor
xor
xor
xor
xor
xor
sbb
xlat
pop
xor
cmp
pusha
mov
jns
adc
adc
xchg
pop
divl
adc
insb
aas
xor
scas
arpl
orb
and
xor
push
pop
dec
stc
mov
insb
lcall
inc
inc
lcall
mov
loope
xor
jo
jle
push
subb
imul
mov
push
or
fisubl
or
imul
or
sahf
arpl
jae
pop
mov
insb
mov
jae
sub
and
insb
add
mov
testb
incl
inc
xchg
pop
xor
fldcw
push
shlb
jo
cs
pop
jno
inc
fs
and
popf
dec
cltd
imul
add
xor
mov
add
xor
out
add
idivb
out
xor
pop
bound
scas
sbbb
data16
xchg
dec
push
xchg
xor
roll
xlat
setno
clc
outsl
jb
push
aaa
xor
xor
fildl
or
mov
add
sbb
cmpb
fadds
xchg
add
es
pop
in
ss
jg
aas
cmp
xchg
cmp
inc
jne
aas
pusha
jae
daa
bound
outsb
mov
iret
sbb
adc
pop
sbb
xchg
xor
jnp
pop
popa
scas
xor
notl
push
xchg
in
imul
aaa
pop
jle
leave
stos
lds
push
xor
dec
jne
and
jle
push
cmp
pop
ja
push
push
outsl
inc
xchg
xchg
imul
push
scas
imul
xchg
cmp
xor
ss
cmp
aaa
imul
into
jp
push
sbb
xor
bound
xchg
and
xor
sbb
enter
jne
lods
jo
imul
imul
xor
and
in
xor
and
xor
cmp
addr16
cmp
loop
dec
pop
andb
push
inc
je
mov
dec
pop
test
and
pop
cmpsl
ljmp
push
push
aaa
inc
xor
mov
mov
add
out
jo
xchg
insl
jp
mov
adc
xor
cmp
xchg
xor
mov
inc
stos
add
jl
test
fdivrs
bound
outsl
jbe
mov
scas
jb
jns
mov
push
loope
scas
ret
jne
ljmp
bound
jns
pop
xor
push
ret
lds
sbb
mov
mov
jle
into
adc
insb
inc
lret
mov
in
cmp
inc
pop
mov
lods
sub
je
jbe
dec
mov
xor
mov
outsl
add
stc
inc
cmpsl
ja
fs
mov
nopl
jmp
dec
setnp
imul
mov
insb
rcll
xor
jno
jp
ret
ja
ja
les
adc
push
xor
js
pop
jp
push
out
test
arpl
cmp
xor
daa
push
xchg
sub
jg
arpl
jae
jne
cmp
ljmp
popf
sahf
daa
push
scas
inc
out
out
popa
mov
mov
aad
rorl
lahf
jae
or
pop
xor
fiadds
cmp
xlat
mov
pop
xor
xchg
popa
fs
mov
adc
jae
pop
jmp
nop
and
push
jo
jo
xlat
mov
imulb
pop
ja
sbb
fadds
jb
stc
sbb
xor
xor
fiaddl
outsl
adc
cmpsl
xor
or
movsb
test
divb
in
data16
push
loop
mov
bound
loop
lret
dec
cmp
out
shl
xor
jp
cmp
pop
mov
stos
ss
xchg
or
ds
jle
fs
xor
inc
fs
ret
push
clc
mov
das
fsubl
xor
outsl
js
ret
and
add
mov
xchg
lea
jbe
jns
push
xor
fs
push
clc
sbb
or
insb
sbb
ss
outsb
lahf
sub
jle
push
sub
pop
jbe
inc
or
movb
pop
das
pop
ss
stos
ljmp
les
imul
and
pop
xor
addr16
sbb
jp
into
stos
xor
add
dec
sbb
test
xor
out
insl
mov
lea
popa
jbe
in
pop
outsl
dec
roll
outsl
cmp
xlat
add
adc
xor
js
mov
inc
mov
lods
das
xor
cwtl
filds
xchg
je
pusha
push
rorl
imul
jnp
add
xor
mov
mov
pop
insb
xchg
lret
insl
adcb
jae
aas
xor
mov
cmp
pop
xor
pop
iret
int3
inc
push
ss
add
hlt
mov
out
out
scas
test
mov
fs
aaa
cmp
mov
pushf
inc
jne
mov
xchg
roll
push
xchg
sbb
push
sub
popa
sbb
stos
push
test
and
pop
aas
sbb
rcll
xor
arpl
push
imul
sub
add
imul
fcoml
dec
xor
daa
xor
lds
adc
xor
cmpsl
cmp
adcb
imul
jo
scas
xchg
into
bound
mov
das
addw
add
jno
xchg
imul
or
je
push
pop
mul
jo
ss
lahf
ret
je
ds
xlat
adc
mov
cmpsl
pop
mov
add
outsl
add
adc
adc
je
outsb
add
xlat
test
xor
sbb
adc
loop
fs
sbb
cmc
nop
test
xor
mov
fbld
xchg
inc
jle
das
imul
jno
loope
mov
add
mov
pop
imul
lret
repnz
push
jp
ja
jbe
push
xchg
add
outsb
fbstp
ljmp
and
fisubl
add
out
jne
adc
fadds
pop
imul
aaa
js
popa
jp
in
lock
movsb
dec
xchg
insl
xchg
fwait
pop
xchg
mov
outsb
add
inc
imul
xor
jp
icebp
mov
dec
cmpsl
aas
xor
push
jecxz
xlat
and
pop
ja
ret
je
push
mov
aas
xchg
push
out
sbb
out
jb
in
adc
xor
fsubrs
hlt
fldenv
clc
push
pop
popa
das
cmp
xchg
rcll
and
jp
sbb
adc
sbb
sub
push
cmpsb
aaa
ja
xchg
or
mov
imul
sbb
push
xor
int
adcb
adc
mov
cmp
inc
mov
xchg
mov
scas
push
xchg
outsl
sub
cs
jno
mov
or
jbe
enter
pop
js
ja
xor
xchg
sbb
mov
jae
mov
or
mov
into
arpl
sbb
ljmp
orb
mov
out
out
rcr
int
data16
xor
xor
jge
push
sbbl
sarb
jne
mov
dec
mov
adc
inc
push
dec
stos
mov
mov
jp
dec
xchg
push
out
add
je
jg
js
mov
jae
adc
xor
outsb
adc
mov
xor
xor
push
in
ret
comiss
xchg
ss
mov
pop
dec
insl
push
xchg
in
sbb
je
pushl
shll
and
je
add
jle
pushf
add
xchg
aaa
xchg
inc
rorb
sbb
pop
pop
iret
xor
inc
add
fsubr
jne
add
jo
jb
popa
lea
outsb
data16
js
push
clc
movsb
pop
aad
and
xor
jp
inc
inc
cmp
mov
imul
cli
fsubrs
ja
sub
sub
fbld
mov
scas
es
andl
cltd
pop
je
xor
movsl
dec
shlb
aas
pop
nop
sbb
sbb
push
xor
mov
rcr
lock
inc
pop
xchg
pop
and
mov
pop
mov
stc
cmpsb
xchg
rorb
pop
loope
je
cmpsb
shlb
sbb
icebp
sub
outsl
and
subb
js
adcb
pop
add
add
xor
outsl
push
mov
push
cmp
push
jecxz
stc
pop
cmp
test
xchg
push
mov
xor
pop
out
pusha
addr16
cwtl
xor
mov
addb
xchg
add
sbb
add
cmp
and
sbb
mov
add
push
ret
ss
sbb
cmp
and
sbb
jne
cmp
mov
jp
rorb
xor
outsl
lds
popa
push
aaa
insb
es
sbb
mov
shlb
sub
pushf
scas
jp
mov
jno
imul
mov
addr16
xchg
sbb
xor
test
lret
sbb
mov
sub
jp
pop
sbb
iretw
or
mov
bound
cmpl
mov
je
ja
add
insl
outsl
fcomip
add
dec
adc
cmp
mov
iret
dec
cmp
mov
gs
sbb
mov
and
cmp
nop
leave
add
dec
pop
mov
pop
adcl
fidivrl
cmp
add
jmp
cmp
push
inc
loopne
cmp
mov
mov
ja
je
mov
rcrb
das
push
jb
or
lock
and
push
add
add
xor
jno
movsl
pusha
or
sbb
pushf
cmpsl
push
cmp
insb
mov
mov
jno
jg
jo
xchg
stos
ss
out
sbb
or
ja
jae
pop
inc
xchg
call
movb
andl
daa
sub
push
je
popa
xor
in
sbb
cmpsl
lret
movsl
or
lock
sub
scas
hlt
cmp
adc
cmp
mov
bound
mov
lahf
adc
test
add
mov
push
jo
cmc
jae
jns
mov
sarl
jle
pushf
xor
pop
inc
pop
sbb
inc
pop
hlt
cmc
or
inc
jg
xor
out
mov
jns
jns
push
movsb
pop
sbb
aaa
loopne
aad
cmp
add
xor
mov
scas
addb
mov
ja
negl
sahf
adc
add
jp
pop
and
push
movsb
xchg
pop
out
push
pop
insb
jp
bound
add
jmp
mov
aad
shr
in
jmp
clc
mov
scas
sub
mov
pop
mov
sub
sub
add
cmp
jge
sbb
orb
add
inc
fldt
add
and
les
sarb
and
lea
scas
mov
nop
notb
fcompl
movl
or
xchg
and
jmp
lea
cmp
cmp
jg
cmp
mov
jmp
imul
cmp
xchg
loopne
xchg
stos
inc
dec
in
pop
mov
cwtl
or
mov
ljmp
or
shl
or
or
sbb
or
jns
or
fsub
mov
mov
xor
ret
and
xchg
pop
in
xchg
addr16
jae
cld
dec
cmp
fwait
add
mov
sbb
repz
or
push
imul
xchg
sub
movsl
push
xchg
ret
mov
nop
fstl
adc
and
mov
push
add
xchg
or
and
pushf
pop
add
xchg
or
mov
mov
and
cwtl
xchg
jo
cmp
cmpl
test
add
jne
or
jne
ljmp
push
pop
mov
repnz
jo
mov
pushf
cmp
inc
mov
sub
add
xorb
jns
mov
adc
xchg
aam
pop
pushf
mov
dec
cltd
xchg
cmp
in
pushl
push
sbb
mov
lods
lock
pop
nop
xchg
jbe
mov
in
rcrb
imul
mov
cmp
fdivl
and
jb
loopne
push
cmp
cmp
mov
xchg
pusha
in
sub
xchg
and
xor
sahf
mov
adc
mov
mov
mov
cmp
push
push
adc
sbb
hlt
fadds
dec
cmpl
pushl
pop
mov
lock
lock
orl
fsubrl
add
push
mov
xor
nop
incl
cmpl
jne
mov
out
cmpb
std
lock
sub
in
dec
mov
lahf
push
int3
push
dec
test
test
jle
call
push
mov
or
and
insl
in
pop
xor
dec
rcrb
cs
std
aam
xor
adc
aad
mov
loopne
mov
cmp
std
scas
mov
dec
push
mov
add
inc
fisubs
mov
mov
cwtl
push
jl
test
inc
sahf
test
adc
push
mov
enter
rorl
mov
sbb
lea
les
sbb
in
jne
add
adc
sbb
es
in
pusha
roll
aas
and
fldcw
fstpt
xor
mov
mov
andb
cmpsb
repz
lret
in
xchg
sarb
cmp
cmp
mov
leave
mov
and
lods
stc
dec
push
stc
lods
mov
push
mov
jbe
fwait
idivb
movsb
movsb
cmp
mov
dec
mov
faddl
mov
sbb
mov
insl
cwtl
dec
xchg
lea
push
sbb
xchg
nop
cs
dec
nop
mov
xor
mov
mov
or
mov
cltd
in
test
in
addb
adc
ja
cs
mov
and
dec
js
js
push
cmpsb
dec
je
je
je
dec
xor
cltd
fidivl
insb
mov
adc
pop
push
push
cltd
fiaddl
adc
dec
repnz
adc
adc
pusha
pusha
movsb
xor
xchg
pop
pop
test
pop
mov
push
mov
pop
push
test
mov
add
repz
push
inc
cmp
mov
test
mov
cltd
movsb
std
cmp
jne
push
push
dec
dec
and
jle
dec
iret
mov
cmpsl
adc
stc
and
push
fs
popf
push
pop
lret
push
and
add
adc
adc
ss
fstpl
sbb
sbbb
and
or
imul
decb
or
mov
jae
les
xchg
sbb
mov
testl
inc
dec
addr16
adc
fwait
daa
cld
jg
add
cmp
pop
cmpsl
or
decb
sbbl
outsw
data16
popa
jb
xor
je
pop
push
rcrl
jae
dec
push
adc
mov
pop
icebp
and
mov
and
jne
xor
andb
jo
jnp
jae
and
lock
repz
jb
and
call
push
ret
push
pop
out
incb
pop
out
outsl
insl
ret
aas
sti
daa
add
inc
fists
jae
das
mov
ss
and
inc
inc
pop
cld
mov
and
adc
dec
out
pop
push
push
inc
dec
sub
xchg
mov
adc
xor
inc
outsl
outsl
mov
xor
stos
test
sub
aaa
mov
inc
sub
sub
xchg
incb
xor
xor
jge
movl
faddp
xchg
xor
or
add
xchg
jg
mov
mov
loop
lcall
je
cmpsl
mov
adc
lea
arpl
arpl
xor
pop
push
inc
inc
pop
inc
dec
inc
push
pop
rcrb
movsl
outsl
and
pop
fcomps
sub
or
dec
call
jne
js
fwait
push
inc
sub
cmp
inc
pop
mov
fwait
jns
sub
push
popa
xor
cs
daa
sub
adc
fimull
movsb
shll
ja
mov
cwtl
das
inc
jno
sbb
dec
pop
push
test
mov
fs
xchg
fs
and
mov
jo
dec
imul
jmp
sub
cli
xor
faddp
jo
rcrb
hlt
dec
insb
xor
push
mov
cmp
xor
xor
xor
aas
stc
pop
xor
cmp
xor
xor
cmp
inc
jo
pop
inc
sbb
adc
push
and
or
aas
repnz
mov
cs
outsb
imul
mov
iret
aad
in
add
cmpxchg
lret
das
mul
nop
dec
in
mov
rclb
rcr
mov
gs
aaa
adc
ss
int
das
dec
test
aaa
cmpsl
lahf
in
rol
mull
fdivrp
mov
sarb
andl
pop
or
or
xor
mov
jbe
and
push
push
xlat
aas
movlhps
and
or
test
int
mov
mov
cmp
jge
aaa
xor
pop
xor
xor
adc
cmp
push
mov
cmp
xor
ja
and
jle
gs
fsubrl
test
mov
imull
mov
adc
ret
xlat
sbb
das
dec
aaa
cli
xor
movsb
add
mov
sbb
call
and
fwait
or
pop
jns
test
mov
add
adc
daa
sahf
add
adc
out
push
push
clc
insl
fistps
xor
mov
test
push
sbb
pop
mov
pop
gs
mov
in
push
push
loop
fiadds
push
add
mov
push
xlat
test
mov
pop
notl
push
cmp
inc
xor
fldcw
enter
daa
xchg
push
or
jl
jno
add
outsl
cmpsb
clc
sbb
xorb
xor
sub
add
lcall
mov
popf
insb
in
aam
orb
xchg
stos
idiv
scas
xor
addb
and
pop
and
repnz
sbb
push
xchg
mov
dec
test
and
sub
add
nop
dec
test
xchg
ljmp
push
add
jne
push
dec
mov
xchg
and
pop
dec
dec
cmpb
jne
push
inc
dec
add
inc
xor
mov
mov
xor
add
incl
jge
inc
pop
pop
mov
and
dec
loopne
lods
sub
ds
mov
dec
push
jb
dec
add
inc
imul
cli
add
movsl
jg
sub
lea
nop
insb
mov
mov
subb
test
add
push
sbb
pop
inc
fidivrl
shl
out
outsb
enter
push
stc
push
push
or
and
rcrl
nop
sub
mov
cmp
inc
loopne
and
lods
jmp
das
test
xor
aam
push
in
or
sarb
xchg
adc
push
jmp
loopne
mov
mov
cld
aad
jge
loopne
aam
ficoms
cmp
out
push
lods
jmp
mov
and
pop
nop
sub
cld
push
cmp
push
cmp
or
fs
sub
sub
loope
jl
sbb
add
test
add
sbb
push
sub
add
out
clc
jl
push
cld
call
cwtl
pop
in
in
in
push
adc
inc
xchg
xchg
outsb
in
cmc
rclb
sub
xchg
movsb
push
fcomp
pop
aaa
test
sbb
fmull
adc
movsl
loopne
loopne
ror
inc
push
ss
enter
nop
inc
rclb
nop
orb
mov
rol
repz
loope
mov
dec
inc
lcall
add
stc
out
push
sbb
mov
push
mov
lock
call
cli
mov
mov
fs
es
or
xchg
inc
jge
lods
mov
adc
pop
mov
cmp
cmp
out
into
frstor
les
aaa
xchg
push
dec
outsl
outsl
movsb
add
imul
mov
mov
hlt
mov
js
repnz
mov
pusha
cmpsl
ret
popl
decl
pop
add
aad
ret
ds
mulb
in
add
inc
call
rorb
jecxz
or
loope
pop
mov
lea
mov
inc
mov
sub
and
jne
push
xchg
test
imul
test
adc
lea
push
cmp
dec
inc
and
lea
mov
and
and
mov
pusha
mov
mov
sbb
cld
pop
or
loopne
not
and
mov
push
jno
push
or
test
lcall
sahf
adc
loopne
add
adc
js
dec
adc
xchg
out
xchg
or
insb
jnp
or
pop
or
xchg
jp
jle
xchg
sub
mov
xor
sub
js
dec
stos
pop
add
sbb
sbb
xchg
adc
clc
rcrb
push
sub
shl
add
xorl
mov
xor
fs
dec
add
test
push
mov
push
mov
dec
inc
push
or
fistpll
idivl
ret
movsb
ja
pop
push
cvtpi2ps
add
inc
mov
icebp
add
gs
push
ja
push
push
inc
cmp
lea
ret
movsb
sahf
xchg
sbb
inc
loope
cmp
mov
add
ficomps
into
ds
cmp
push
sub
or
mov
push
das
and
lret
add
xchg
inc
dec
xchg
nop
nop
xchg
dec
sub
pop
sbb
dec
inc
es
jb
addb
nop
xchg
and
cltd
jl
js
pop
jo
mov
push
jno
add
addr16
lock
aam
or
inc
cmpsb
jbe
imul
inc
dec
add
pop
insb
add
push
mov
xor
stos
sbb
cwtl
int3
inc
call
or
mov
out
add
adc
je
std
pusha
xchg
in
push
or
pop
pop
test
popf
pop
sub
mov
push
push
leave
and
add
rcll
or
rolb
dec
in
or
push
rclb
xlat
test
xchg
mov
inc
inc
rol
pop
xor
inc
pop
ret
xchg
mov
push
cmp
inc
lret
jmp
pop
push
lcall
in
sbb
js
sbb
adc
push
pop
mov
das
add
adc
xor
add
or
bound
mov
sub
jns
push
test
daa
fs
push
les
jge
cmc
pop
dec
gs
lods
popa
jb
and
and
dec
or
in
imull
pop
and
lock
xor
push
outsl
insb
jne
and
aas
mov
std
jmp
adc
fcom
stos
xlat
lret
sub
jns
dec
mov
and
mov
xor
mov
bound
out
add
out
mov
mov
lock
cmpl
es
mov
pop
fimuls
jecxz
rcrb
and
push
clc
in
mov
mov
leave
in
enter
cld
push
sbbl
sub
mov
xchg
push
cmp
fmull
xor
xor
inc
popf
lods
sarb
cmp
sar
mov
shlb
rorl
mov
movsb
mov
pop
xor
jp
sbb
insb
mov
mov
pop
adc
out
aaa
and
dec
sub
jmp
jmp
test
dec
setnp
mov
xchg
add
or
leave
nop
dec
cld
in
imul
and
loope
sub
inc
adc
mov
xchg
jb
sub
push
dec
insb
push
shll
adc
jnp
push
xor
sub
ror
add
cmp
inc
push
xchg
inc
repnz
and
push
lret
pusha
fs
and
pop
shrl
push
dec
add
popf
js
mov
mov
push
sub
dec
jo
dec
xchg
shll
dec
mov
xor
pop
fistl
pushf
sub
mov
mov
jne
push
nop
xchg
mov
adc
push
in
cmp
and
xchg
pop
dec
dec
cmp
cltd
in
cmp
inc
fs
cs
cmp
mov
in
inc
inc
je
mov
lock
lret
adc
xor
scas
push
mov
mov
shlb
les
push
bswap
clc
inc
je
adc
pusha
nop
lsl
sbb
mov
dec
call
je
cmpsl
lahf
loopne
pxor
mov
sti
fwait
insb
xchg
adc
adc
push
adc
pop
pop
out
outsb
daa
push
insl
test
hlt
mov
mov
sbb
and
les
and
dec
in
pusha
testl
push
add
jno
and
divl
aam
sbb
clc
addr16
adc
pusha
div
push
hlt
nop
out
sbb
cmp
jmp
push
popa
or
mov
cmp
mov
std
dec
das
add
and
push
push
out
jp
test
cmp
or
mov
or
dec
inc
inc
jb
sbb
adc
push
testb
or
test
xor
inc
fs
dec
and
and
push
jmp
fmull
es
imul
inc
js
pop
pop
pop
add
push
mov
or
leave
lcall
push
sbb
popa
js
lods
xor
add
lock
outsl
inc
pop
push
push
sti
outsb
loope
jo
push
pushf
fcom
mov
mov
ret
push
imul
pop
xor
push
mov
fwait
iret
mov
out
je
mov
pop
xor
bound
pop
int
pop
or
mov
aaa
cmp
add
cmp
mov
out
mov
dec
scas
or
add
xchg
js
cmpl
xchg
push
rorl
and
stos
jno
out
sbb
and
aam
cmpsl
arpl
jns
roll
or
sbb
mov
mov
cmp
push
fsubrl
fsubrs
adc
mov
sar
adc
sub
fiadds
icebp
lods
push
das
mov
fs
mov
das
aas
imul
or
cwtl
rcrl
push
and
sub
adc
push
or
loopne
add
rclb
jnp
add
fwait
call
lods
add
test
dec
je
push
or
pop
add
inc
sub
test
xor
inc
cs
add
sub
mov
xor
addb
out
fildl
mov
fdivs
lock
lcall
inc
add
mov
enter
ja
add
loop
pushf
dec
add
add
jb
and
adc
pop
loope
cmp
cmp
orb
pop
cmp
fildl
jne
jmp
sbb
or
cwtl
mov
inc
ret
add
lock
cld
cs
sub
mov
xchg
push
or
jp
ja
ret
xchg
xor
jle
sub
mov
fadds
add
jl
push
ss
lret
movsb
jnp
movb
sbb
iret
sbb
sbb
cmp
sbb
loopne
in
pop
in
leave
or
lds
xchg
or
test
fs
cwtl
mov
cmp
push
in
pushf
and
and
imul
call
jo
aaa
push
rcr
mov
jne
rcll
fidivl
rorl
js
push
hlt
mov
faddp
mov
out
loope
adc
mov
inc
setne
push
adcb
push
add
or
adc
mov
dec
lds
sbb
les
arpl
mov
jne
imul
adc
incl
mov
addr16
imul
jo
add
jbe
js
jp
push
add
inc
call
je
lock
xor
hlt
fildl
adcb
cmp
fadd
jl
inc
add
push
hlt
add
sbb
pop
hlt
sub
adc
jb
pop
pop
nop
dec
hlt
add
xor
ss
enter
pop
arpl
push
scas
int3
mov
mov
pop
adc
jb
sbb
incl
cmp
ja
sub
mov
inc
inc
add
jmp
lret
in
imul
pop
push
inc
xchg
int3
enter
push
sbb
jo
loopne
adcb
hlt
clc
idivb
xor
lret
and
int3
shlb
rcrb
loopne
ja
in
outsl
mov
dec
je
scas
mov
mov
and
xor
cmp
xchg
js
enter
mov
roll
imul
or
add
enter
jnp
rcrb
mov
sarb
shr
and
xor
in
inc
pop
leave
push
scas
clc
rolb
je
dec
adc
in
aaa
fs
enter
sub
cs
push
jns
mov
ret
fs
xchg
in
adc
pop
ret
push
lahf
aaa
and
or
lahf
cltd
add
adc
nop
fcomp
jmp
ret
aam
mov
pop
rcl
jns
ret
inc
push
dec
pop
ret
or
xchg
mov
jl
enter
add
enter
push
pop
cwtl
mov
dec
push
jbe
pop
dec
in
push
lret
xchg
or
mov
sbb
cs
xor
mov
lods
xchg
mov
clc
cmp
clc
push
sbb
xchg
add
or
movsb
movsb
push
lahf
sub
pop
mov
dec
pushf
pop
pushf
jecxz
fs
pop
cwtl
cwtl
xor
add
cmp
dec
push
in
nop
cmp
test
mov
mov
xor
test
sbb
sub
dec
cmp
out
rclb
js
cmpsl
leave
test
je
nop
or
leave
test
insb
insb
nop
or
jb
cltd
or
inc
dec
mov
in
mov
aaa
jle
pop
scas
test
xor
rcrl
and
pop
out
or
pop
or
imul
fadds
pop
push
cmpsl
push
jb
flds
push
dec
cmpsl
dec
mov
mov
pop
xchg
add
xchg
sub
sbb
jp
push
mov
push
inc
dec
inc
add
pop
push
push
or
mov
jl
push
add
cmpsl
or
push
testl
push
add
dec
push
push
inc
dec
xorl
dec
jg
mov
or
aas
push
push
mov
cmpsl
fisubl
jo
pop
mov
and
gs
imul
loopne
fstl
add
pop
repnz
mov
sub
add
mov
loope
mov
mov
shl
repnz
pop
cld
insl
cmp
movsl
sbb
sub
mov
int3
jmp
testb
in
fsubr
bound
in
repnz
orb
push
in
hlt
clc
mov
mov
cmpsb
push
push
lods
inc
ja
or
mov
adc
clc
leave
fcomp
push
leave
add
and
push
pop
loop
xchg
mov
push
xchg
cmp
lahf
sbb
lds
jmp
ficompl
and
or
int3
push
dec
dec
dec
int3
fistl
mov
push
or
enter
mov
nop
iret
dec
fcmovnb
int3
push
in
rolb
fistl
xchg
fildl
xchg
dec
scas
fstpt
add
mov
mov
fistl
or
inc
and
xorl
mov
cmpsb
fldt
adc
stc
jmp
xchg
push
imul
pop
dec
cmpsb
movl
mov
xchg
add
jno
mov
dec
outsb
push
xchg
sbb
nop
mov
nop
mov
mov
pop
mov
mov
fildl
mov
leave
inc
jno
mov
xchg
pop
adc
imul
insl
mov
das
xor
adc
pop
enter
jo
xchg
mov
jo
jo
leave
inc
and
pop
nop
jbe
add
fwait
nop
dec
or
fs
pop
roll
or
pusha
inc
dec
or
pusha
pop
aad
mov
xchg
fldenv
xchg
lret
and
push
push
push
push
rcl
push
add
inc
in
jg
jb
in
pop
rcrb
mov
test
and
in
ljmp
mov
das
cltd
sub
fwait
pop
inc
adc
and
xchg
int3
fwait
push
adc
and
inc
inc
push
cmpsl
dec
inc
mov
mov
gs
repnz
inc
cmp
leave
and
sub
sub
pop
enter
cmp
cmp
push
jo
sti
cmp
cmp
nop
dec
cmp
xor
push
mov
bound
xor
pusha
xchg
mov
sub
test
jo
adc
push
sub
loopne
xor
orb
and
adc
xlat
inc
orb
and
les
sbb
nop
imul
sbb
inc
into
lock
or
inc
nop
adc
adc
dec
adc
mov
adc
cwtl
xor
push
or
enter
or
or
xor
add
add
inc
jo
add
add
lds
add
in
addr16
pop
push
loope
scas
adc
push
adc
lock
adc
push
hlt
imul
addr16
mov
in
inc
push
sbb
adc
in
jecxz
xor
call
xor
popf
in
in
jb
lock
fnstsw
loopne
test
dec
fdivrl
adc
adc
pop
fcoms
andl
inc
push
filds
aam
jmp
adc
fistpll
les
orl
imul
inc
mov
sbb
sub
xor
sbb
out
mov
push
les
test
lea
mov
pop
roll
lret
es
push
pop
rorb
ja
dec
sub
or
arpl
lods
push
dec
inc
dec
mov
xor
and
movsb
or
imul
push
scas
jecxz
es
mov
daa
or
pop
or
pusha
or
cmc
mov
pop
out
nop
mov
cmpl
mov
push
push
inc
inc
shrl
and
bound
xor
aam
nop
dec
movsb
xor
push
es
mov
outsb
xor
lea
test
inc
or
aas
jg
subb
mov
rcl
fstpl
xchg
xchg
cwtl
cltd
fs
cs
pushf
pushf
mov
or
nop
nop
xor
dec
inc
sub
leave
subb
test
mov
and
add
adc
push
enter
je
fwait
inc
cmpsb
je
je
imul
dec
jo
jo
bound
lahf
insb
bound
push
scas
mull
mov
nop
pusha
push
pusha
lahf
xor
nop
pusha
pop
push
pop
lahf
xchg
sbb
jb
push
push
push
in
cs
push
pop
mov
dec
dec
dec
rclb
dec
cmp
xor
movb
xorb
sbb
jbe
lea
and
inc
xor
xor
jae
orb
cmp
jb
dec
push
lods
xor
imul
sub
imul
sub
sub
xor
sub
sbb
sbb
test
and
cmp
sbb
fiaddl
adc
popa
mov
mov
in
lcall
cltd
in
into
jecxz
or
test
push
or
push
insb
lods
test
insb
mov
fs
adc
jo
sbb
sbb
cmp
test
sbb
adc
fildll
ss
dec
in
pop
inc
aam
dec
std
pop
je
arpl
imul
push
addr16
daa
lret
jl
insl
jo
bound
data16
stc
fisubl
outsl
arpl
sub
cmpl
stos
aas
adc
jecxz
sarb
test
fstps
aam
cmpsb
mov
mov
das
ret
loop
shll
popl
cld
jae
es
mov
pusha
mov
inc
jb
out
mov
inc
xchg
jnp
or
inc
dec
dec
inc
push
pop
aas
push
dec
xchg
cwtl
test
iret
inc
sbb
cmp
aaa
xchg
adcb
jg
outsb
cmpsl
addl
jo
dec
or
lret
jg
xor
test
and
jg
lods
jno
adc
mov
cwtl
movsl
je
add
test
pop
mov
negl
cmp
adc
jl
bound
add
lods
ljmp
pop
cmp
les
sti
mov
imul
sahf
jne
xchg
adc
and
sbb
in
inc
roll
jno
sub
clc
xor
cmpsl
pop
xor
icebp
jge
pushl
pop
xor
add
pop
imul
rcl
push
sub
popa
pop
and
adc
add
or
jbe
jo
dec
cmp
lcall
sub
jns
or
movb
nop
pop
in
push
add
lret
pop
or
mov
mov
cmp
mov
in
neg
out
push
cmp
add
aas
push
lods
push
cmp
inc
fisubrs
int
lahf
and
mov
mov
or
mov
loope
fwait
js
sahf
add
push
jae
jnp
sub
ljmp
pop
pop
push
into
xor
ds
sahf
les
cmp
mov
loopne
incb
mov
notb
add
dec
mov
iret
cwtl
imul
pop
jp
xor
shll
dec
movsl
inc
xor
inc
inc
rcll
push
mov
enter
xchg
lcall
or
daa
cmp
and
cmp
xor
gs
jnp
push
push
cmc
push
jo
sub
dec
add
xchg
movsb
fs
sub
pop
mov
sub
outsb
popa
mov
push
stos
sub
mov
cli
add
cmp
push
nop
pop
ljmp
jge
insb
or
xchg
je
inc
enter
mov
and
rorb
test
fldl
mov
movsb
stos
pushf
pushf
lea
bound
shll
jne
sub
mov
cmp
cmp
add
nop
and
add
rolb
inc
mov
in
pushf
adc
mov
or
mov
sbb
mov
pusha
and
fisubrl
inc
outsb
lds
pop
dec
and
dec
and
je
xchg
inc
and
loopne
loope
and
mov
or
repnz
insb
mov
dec
movsl
cmp
mov
aad
pop
fs
lahf
mov
adc
movsl
and
rclb
jb
and
out
ficomps
lret
adc
je
or
dec
push
or
mov
enter
mov
leave
push
and
push
mov
arpl
ss
adc
mov
fs
scas
insl
cmp
imulb
cltd
xchg
cmp
jne
je
push
xchg
xchg
xor
inc
cmp
cmp
xor
dec
dec
sub
call
jp
sub
mov
mov
lea
mov
add
sub
push
fldt
sub
dec
and
and
xchg
arpl
sbb
xchg
pop
enter
sbb
sbb
cmpsb
fs
adc
pop
test
adc
inc
add
or
fs
xchg
or
add
add
or
dec
add
adc
clc
sbb
jo
jae
test
pusha
or
mov
lahf
and
test
dec
and
movl
cmp
mov
in
hlt
stos
add
test
nop
lahf
fdivr
loopne
jns
jecxz
insl
fdivr
fdivr
orb
aam
and
test
jne
mov
int3
imul
add
enter
mov
mov
push
mov
or
mov
jmp
add
mov
add
pop
dec
mov
dec
es
push
add
mov
push
jb
lret
mov
cmpsb
scas
test
add
cmc
test
cmp
inc
test
es
movsb
jb
pushf
dec
nop
add
mov
mov
mov
inc
pushf
icebp
outsl
stos
cmpsb
or
cmp
xchg
adc
inc
jb
leave
fildl
pop
enter
nop
fwait
test
icebp
mov
mov
dec
arpl
mov
xor
xor
orb
test
imul
loope
inc
xchg
into
addb
add
xor
jl
dec
es
adc
js
sub
dec
sbb
pop
cmpsl
inc
inc
bound
cltd
aad
stos
mov
or
adc
das
and
pop
inc
inc
or
adc
adc
mov
cmpsl
scas
xor
mov
pop
mov
scas
cmpsl
mov
fimuls
add
sub
pcmpeqb
cmp
add
mov
cmp
aaa
inc
xchg
scas
or
sub
add
jb
loope
adc
mov
push
cmp
and
clc
pop
add
outsb
stos
add
pop
dec
adc
and
adc
mov
fidivl
scas
push
ror
lock
addr16
js
insb
test
lcall
pop
xchg
outsb
popa
lods
sub
pop
jbe
add
pop
addr16
or
divl
xor
enter
pop
add
test
sub
jb
mov
daa
out
and
int3
pop
push
add
subl
add
cmp
push
enter
jl
scas
pop
es
push
cmpb
les
sahf
in
rcll
push
push
lcall
mov
addb
dec
jo
iret
sarl
push
dec
sbb
jns
cmpsl
stc
loopne
push
mov
out
shrb
mov
into
inc
out
frstor
cwtl
inc
push
sbb
cmp
mov
cld
int3
mov
sarl
pop
arpl
pop
push
adc
loop
daa
jmp
add
push
outsb
sbb
psrld
adc
lods
xor
pop
xchg
stc
or
adc
xor
mov
pop
in
jl
outsb
and
inc
call
int
xchg
call
jno
leave
mov
push
xchg
pop
dec
jge
xchg
shlb
loopne
mov
mov
enter
gs
sbb
pop
push
jp
movsb
xchg
clc
push
fsubl
inc
fdivl
aam
js
mov
sahf
xchg
aam
fadds
xchg
iret
pop
pop
push
ret
xchg
int
stc
cs
push
jg
mov
pop
iret
or
lock
pop
add
cmp
movsb
mov
aas
add
shlb
sub
lcall
out
pop
addr16
inc
sarb
rorl
lcall
in
dec
stos
lcall
cmp
xor
xorl
add
out
ret
adcb
xchg
in
or
mov
inc
lods
push
popa
inc
dec
lods
lods
sub
inc
mov
fadds
movsb
movsb
mov
jl
mov
mov
xor
add
cld
xchg
push
add
xor
xor
pushf
push
push
mov
fadds
test
lods
loopne
sarl
iret
test
lods
sub
sbb
mov
xchg
xchg
xor
xchg
add
mov
xchg
push
pop
shll
xchg
in
fwait
jp
rorb
mov
inc
jmp
or
shrl
insb
mull
pop
sub
push
push
push
sarb
cmpsb
pusha
orb
pusha
and
push
in
pushf
sbb
or
shrb
add
subb
sbb
push
push
shrb
xchg
dec
dec
dec
jae
sbb
leave
dec
adc
cmp
mov
jne
mov
or
inc
inc
or
test
loop
xlat
call
push
jns
add
push
cmp
shll
mov
mov
mov
xchg
repnz
in
shll
iret
scas
pop
imul
sub
xchg
and
xor
popa
mov
xchg
add
adcb
cmp
jae
push
dec
cmp
add
aaa
add
aaa
mov
or
cwtl
stos
push
pop
or
mov
add
dec
push
outsl
sbbl
xchg
outsb
adc
sub
jnp
and
pop
fnsave
xor
mov
add
add
add
ljmp
es
and
and
int3
enter
enter
fcomp
fsts
out
dec
loopne
jecxz
in
pop
add
pop
enter
jb
into
pop
cs
or
dec
bound
dec
fidivs
and
popa
je
xor
xor
add
add
inc
leave
adc
incl
xlat
mov
sbb
mov
repz
mov
add
or
and
inc
jns
out
push
pusha
jo
nop
out
sahf
out
lods
mov
aam
repz
loopne
cld
or
and
iret
repz
inc
push
pop
insb
repz
repz
cwtl
test
iret
repz
rcr
in
clc
or
sbb
dec
pop
jns
out
push
out
sahf
out
mov
rcr
fisubrs
sahf
in
cld
xchg
sahf
out
xor
pop
insb
out
sahf
out
test
sahf
mov
cld
cmp
sarl
adc
xor
cmp
repz
push
fs
iret
repz
xchg
mov
lcall
add
jns
out
sbb
inc
push
out
sahf
out
jo
xchg
movsb
sahf
out
sahf
mov
int3
fsub
in
cmp
repz
or
and
repz
repz
push
pusha
insb
iret
repz
jl
cwtl
movsb
mov
cmp
repz
int3
aam
in
sahf
out
hlt
add
sbb
jns
out
cmp
sahf
out
sahf
je
mov
jns
fsubr
hlt
add
repz
rcll
sbb
xor
repz
dec
push
fs
nop
cmp
repz
mov
cmp
repz
fsub
lock
jns
cmpsl
or
and
cmp
out
sahf
inc
push
pop
push
out
mov
jns
out
aam
in
clc
aaa
sti
cmp
add
adc
jae
xor
cmp
repz
pusha
insb
js
cmp
repz
iret
jnp
aam
mov
jae
iret
repz
sub
inc
cmp
int
dec
je
pop
push
fs
jo
repz
repz
cmp
mov
hlt
sahf
cmpsl
stc
cmp
add
or
and
sahf
out
xor
push
pusha
out
sahf
out
js
mov
lods
mov
out
jns
jne
jne
fidivs
sahf
out
push
adc
sub
out
sahf
out
push
pusha
insb
js
out
sahf
test
jge
out
aam
in
clc
add
out
sahf
out
ja
ja
ja
cmp
mov
dec
cs
fs
repz
inc
add
pop
mov
jae
lods
push
mov
ror
cmp
sbb
insb
fsubrp
ja
adc
jns
out
js
and
inc
out
sahf
out
pop
push
out
mov
les
fdivrl
js
add
cmp
imul
repz
xor
push
dec
push
pop
iret
repz
fs
mov
dec
test
mov
jns
shl
push
in
aam
iret
jnp
notb
add
push
or
and
xor
popa
repnz
pop
fs
iret
repz
jl
xchg
pushf
test
cmp
repz
int3
fsub
out
ds
lock
add
adc
out
sahf
sub
push
pop
push
je
nop
pushf
movsb
out
sahf
out
mov
out
lahf
loopne
jnp
jnp
jl
out
popf
divb
jl
mov
push
jns
out
push
push
jns
out
movsb
mov
enter
jl
jl
jl
out
sahf
out
sbb
cmp
sahf
out
sahf
push
pusha
push
sahf
out
cwtl
mov
jns
out
aam
lock
iret
repz
sbbl
jmp
inc
dec
jle
sahf
mull
lcall
fbld
insb
push
js
jns
out
mov
jns
out
rcr
call
int
jg
sbb
cmp
iret
repz
push
pop
push
repz
lods
jg
repz
bswap
ss
jg
jg
iret
repz
jg
addb
addb
repz
insb
js
cwtl
cmp
mov
push
mov
iret
repz
clc
or
addl
adc
and
cmp
sahf
out
dec
push
pop
push
out
mov
jns
mov
hlt
cmp
sarl
or
and
repz
repz
dec
pop
fs
repz
jl
xchg
movsb
mov
cmp
repz
addb
addl
and
cmp
iret
repz
push
pop
push
repz
cwtl
addl
repz
ror
in
clc
sahf
out
or
sahf
out
dec
push
pop
push
out
mov
jns
mov
lock
repz
add
or
and
cmp
repz
push
pusha
iret
repz
insb
js
mov
lods
mov
sahf
out
clc
add
adc
out
sahf
out
inc
dec
push
pop
sahf
out
sahf
push
mov
lods
mov
jns
imul
xchg
out
ficomps
push
inc
dec
pop
sahf
out
sahf
insb
js
mov
lods
mov
dec
repz
in
clc
or
repz
cmp
repz
repz
iret
repz
movsb
mov
rcr
in
loope
cmp
hlt
or
cmp
cmp
sub
inc
push
out
fsubrp
pop
mov
ds
js
cmp
jns
mov
stc
cmp
repz
in
clc
add
out
sahf
cmpsl
adc
xor
sahf
out
sahf
dec
pop
fs
mov
out
xchg
mov
jns
out
fsub
lock
iret
mov
or
push
xor
iret
repz
push
fs
repz
xrelease
cmp
xchg
hlt
add
sbb
inc
dec
iret
repz
push
pusha
push
iret
repz
mov
cmp
sti
rorb
cmp
repz
cmp
cmp
repz
pop
push
cmp
mov
cmp
repz
fsub
in
clc
jns
cmpsl
stc
add
adc
xor
jns
out
dec
push
pusha
push
je
test
jns
mov
int3
aam
jge
out
lock
or
sahf
out
sub
inc
push
fimuls
out
fs
pop
jl
nop
repz
repz
pushf
test
enter
jmp
adcb
nop
mov
fidivrl
addb
js
push
add
movsb
andl
xchg
test
adc
push
add
push
push
and
or
inc
add
repz
inc
add
inc
add
inc
sbb
outsl
xchg
jl
push
add
push
add
jnp
add
repz
mov
cmp
cmp
dec
cmp
adc
add
inc
push
inc
add
pop
outsb
iret
jnp
or
add
inc
push
push
add
add
neg
push
dec
cs
xor
or
push
push
fneni(8087
mov
sbb
inc
push
dec
adc
scas
mov
cmp
add
push
cmpsb
add
lldt
mov
cmp
add
add
mov
mov
int
or
repz
lcall
fwait
insl
jne
je
bound
lea
test
cmp
xchg
jle
mov
xor
mov
mov
into
dec
add
std
pop
negb
pop
inc
sub
loopne
mov
add
sbb
daa
comiss
in
cmp
pop
push
cmp
jo
jge
mov
nop/reserved
xchg
jbe
scas
rcll
xchg
or
push
sarl
add
imull
inc
dec
inc
inc
cmovl
mov
xor
and
leave
pop
lods
pusha
inc
inc
push
inc
testl
xor
inc
rolb
roll
dec
in
pusha
cmp
cs
ja
bound
je
out
dec
push
dec
aaa
push
cltd
inc
gs
out
sbb
pop
leave
ds
jb,pn
insb
outsl
arpl
mov
add
jae
dec
mov
mov
xlat
inc
dec
sbb
jmp
cs
sub
inc
dec
dec
dec
outsb
psubsb
loopne
dec
dec
dec
dec
cld
fcom
shlb
dec
dec
dec
int3
enter
xchg
xchg
daa
daa
add
jo
enter
lahf
mov
fsubrl
mov
mov
pushf
pushf
pushf
lods
test
mov
sahf
gs
jns
and
test
jmp
gs
inc
and
jmp
mov
mov
push
and
add
push
incl
xchg
invlpg
call
clc
std
incl
insb
jle
repnz
std
jmp
std
in
cmc
std
test
and
bound
jle
in
jmp
mov
jmp
adc
stos
dec
gs
inc
leave
sub
es
jmp
jo
in
inc
lods
sti
andl
adc
lahf
gs
and
mov
pop
nop
pop
in
sti
push
cld
incl
add
jecxz
pushl
jl
in
inc
jle
sub
pop
sti
jmp
add
add
mov
xchg
lea
mov
jmp
std
lcall
leave
lcall
test
lahf
pushf
cs
jl
cld
pushl
and
and
add
xor
fwait
jmp
lret
pusha
inc
and
cmp
dec
movsl
in
adc
iret
incl
lahf
fdivr
jmp
xchg
inc
repnz
inc
inc
gs
add
xchg
iret
inc
gs
xor
pop
scas
mov
and
inc
ds
gs
gs
adc
xorb
andl
sahf
inc
xor
jmp
cmp
or
gs
and
and
out
mov
jg
and
sbb
outsb
lock
sbb
sub
xchg
inc
mov
sbb
push
movl
enter
inc
inc
and
inc
xchg
xchg
pop
enter
inc
gs
xchg
pop
enter
add
gs
add
push
adc
mov
call
inc
gs
aas
or
in
inc
mov
lcall
jmp
xchg
pop
and
daa
in
repnz
pushl
jl
pop
enter
decl
dec
push
xchg
inc
inc
bnd
add
jmp
inc
cmp
add
inc
inc
gs
xchg
xchg
and
inc
inc
inc
cltd
pop
leave
lret
jmp
inc
mov
push
xchg
ljmp
cmc
or
adc
inc
lahf
lock
incl
jmp
inc
inc
repnz
ds
clc
call
call
xor
fsubs
push
lea
pop
nop
jl
inc
gs
test
call
sbb
decl
inc
ds
inc
inc
gs
cld
dec
jle
gs
add
call
jmp
pusha
sub
mov
sti
clc
incl
or
fcomps
loopne
pop
and
push
xor
pop
lahf
popw
enter
inc
or
nop
inc
gs
push
shlb
cmpsl
fwait
sbb
sahf
inc
leavew
imul
pop
mov
adc
sbb
repnz
pusha
lahf
mov
incl
scas
std
lock
jns
ret
or
gs
gs
idiv
jmp
scas
sbb
and
inc
rcrb
lahf
subl
add
gs
repnz
and
inc
gs
mov
add
and
or
das
sahf
das
daa
in
lahf
push
clc
jmp
inc
xchg
lahf
jl
inc
inc
adc
jmp
adc
lahf
cmpb
gs
gs
loope
push
stc
enter
daa
loop
cmp
in
dec
lea
push
out
sbb
cmp
fwait
add
add
inc
adc
push
mov
enter
lahf
inc
inc
xor
add
push
cs
pop
jmp
hlt
jmp
outsb
ja
or
mov
sbb
data16
dec
xchg
inc
xor
dec
daa
add
lahf
movb
in
inc
mov
adc
lahf
cmpb
idiv
ljmp
call
stc
decl
repnz
inc
gs
jmp
incl
data16
fwait
and
loopne
in
jl
adc
mov
cli
call
cld
mov
sti
jge
sub
lods
cmp
and
in
jle
inc
mov
push
inc
outsb
outsb
adc
addb
add
aas
je
call
push
incb
stc
xchg
push
lret
dec
push
pusha
inc
pusha
inc
mov
stc
leave
push
xor
lods
ljmp
mov
test
add
cmpsl
adc
pop
pop
stc
jae
jmp
pop
ljmp
leave
pop
jns
clc
jo
out
incl
jns
stc
loop
decl
inc
test
leave
dec
daa
xchg
jmp
cmp
or
sub
jo
push
inc
jmp
pop
leave
xlat
xchg
inc
or
inc
and
leave
adc
inc
adc
in
pop
jns
inc
adc
pusha
inc
cmp
add
adc
fdivr
cld
in
nop
call
push
inc
iret
decl
in
pusha
inc
adc
in
cmp
pusha
inc
adc
pusha
inc
sub
jl
sar
jmp
ss
ficompl
adc
stc
and
xchg
push
inc
sub
cmpb
inc
adc
lock
cld
bnd
push
sub
out
or
add
cmp
jmp
push
sbb
cmc
sbb
pop
xchg
std
fsubrs
dec
jnp
stc
inc
ljmp
sub
pop
outsl
test
add
push
mov
cmp
adc
punpckhdq
nop
daa
nop
dec
pusha
stc
call
push
inc
adc
fcomps
sbb
xchg
or
jl
jns
xchg
cld
incl
inc
rolb
add
nop
sbbl
sub
inc
inc
push
leave
and
dec
sub
sbb
xchg
xchg
sbb
into
xchg
pop
enter
sub
inc
push
sub
add
sti
mov
sub
lea
push
mov
add
mov
sub
sub
mov
mov
sbb
nop
shlb
mov
adc
adc
aaa
es
call
mov
jmp
inc
je
cmp
jge
call
push
ret
push
adc
test
dec
cmpsb
adc
xorb
adc
jl
cmp
pop
loopne
ss
add
cmp
push
dec
stos
and
sbb
fcoml
repnz
and
push
inc
push
repnz
push
inc
inc
jns
repnz
inc
bound
inc
bound
ds
repnz
push
inc
stos
loope
pop
jbe
les
xor
mov
xchg
sbb
and
jge
fwait
cmp
aam
add
xchg
int
inc
pusha
inc
push
inc
stos
push
jo
and
xor
xchg
push
inc
add
inc
pusha
dec
ds
add
add
xor
insl
add
xchg
push
mov
mov
inc
pusha
inc
xor
mov
incl
mov
fcompl
sbb
sbb
jmp
xchg
inc
ds
mov
hlt
incl
add
add
hlt
jmp
cmpb
ds
sti
repz
inc
mov
pushf
ds
incl
push
cwtl
out
ds
mov
call
insb
add
ljmp
jmp
jne
and
mov
add
or
std
repnz
pmulhuw
inc
rdmsr
xor
lret
out
and
jg
push
inc
and
in
push
inc
movsb
xor
decl
repnz
sbb
inc
sbb
inc
xchg
aas
sbb
inc
push
jmp
inc
add
xor
dec
std
call
push
repnz
repnz
lcall
xor
pop
push
dec
repnz
xor
pusha
and
movsl
sbb
shlb
cwtl
or
mov
imul
or
pusha
inc
add
adc
jae
into
adc
pusha
add
xor
repnz
icebp
repnz
jns
add
inc
bound
rorb
call
add
imul
sub
dec
ja
jmp
ja
xchg
inc
xor
call
and
call
push
jne
mov
add
jno
pmulhw
in
and
adc
aas
xor
cld
nop
dec
jle
incl
incl
add
outsl
les
call
mov
fistl
push
mov
fnstsw
inc
mov
push
dec
dec
int
mov
shl
adc
into
aas
pop
or
out
dec
push
pusha
xchg
and
pop
and
popa
divb
insl
movsb
sbb
mov
test
lcall
ja
dec
add
push
or
sbb
add
inc
push
popf
pushl
out
pop
mov
add
lret
or
sahf
repz
pop
pop
inc
outsl
pop
jb
nop
pusha
inc
pushaw
in
push
mov
pusha
pop
addps
in
in
push
dec
dec
in
in
inc
inc
cmp
and
in
xor
pop
push
mov
xchg
add
mov
in
xchg
bnd
sub
aaa
push
add
cmp
in
inc
pushf
cmp
pop
jmp
lods
cmp
jns
dec
movsl
repnz
and
std
xchg
lret
js
jmp
call
flds
pop
test
mov
mov
sub
xchg
movsb
push
cmp
xchg
xchg
dec
in
pushf
insb
dec
mov
jl
movsb
mov
movsb
push
cmp
xchg
xchg
dec
lods
lods
add
outsl
je
inc
add
popa
cmpb
and
push
das
je
inc
pop
aas
and
test
xchg
mov
insb
dec
es
cmp
out
insb
inc
add
hlt
jg
adc
jecxz
or
mov
aas
jmp
add
jno
adc
push
call
jno
and
imul
ficomps
add
inc
out
cmp
fiaddl
call
sub
cmc
out
sbb
push
push
call
or
test
mov
sub
scas
js
cmp
push
jne
bound
and
lea
jne
add
or
loopne
orb
mov
sbbb
and
mov
mov
xor
add
mov
cmp
mov
add
adc
fbld
push
fstpt
add
ret
bound
push
mov
fwait
popf
mov
mov
sahf
pop
sub
mov
add
sarb
inc
sbb
xor
dec
fstl
cmp
mov
and
push
push
add
sbb
and
std
or
jg
push
mov
mov
fists
enter
xchg
jmp
cmp
cli
inc
sub
out
xchg
xchg
jp
inc
arpl
addr16
shrl
ret
roll
stos
cmp
xchg
or
cmp
pushf
in
sub
cli
loopne
sub
enter
sbb
add
out
nop
adc
test
xchg
or
sbb
xor
subb
and
or
inc
notl
push
lods
cs
sti
pop
loopne
mov
mov
push
sub
les
call
mov
or
cmp
add
pop
ss
imul
popf
ljmp
push
adc
or
mov
sub
xchg
pop
ljmp
fidivrl
adc
enter
lea
pop
call
lahf
mov
dec
repz
jp
dec
ds
ds
xor
cmpsb
sbb
xchg
pop
inc
imul
mov
aam
push
lea
mov
push
adc
int3
push
insl
mov
js
lock
or
movsl
add
pushl
repnz
out
pushl
icebp
add
scas
xchg
call
add
jns
ds
xor
imul
aas
into
ss
loopne
js
and
out
ds
ss
enter
cmpsl
stc
xor
dec
cmp
enter
rclb
and
mov
inc
jle
cmpl
inc
test
add
pop
mull
or
cld
outsb
jb
iret
push
inc
push
pop
mov
pop
adc
mulb
cld
or
lcall
popf
mov
sbb
mov
fcmovbe
dec
mov
lods
cmp
push
mov
sbb
idivb
or
add
adc
mov
mov
sbb
fldt
ljmp
inc
roll
pop
inc
or
addr16
adc
mov
jns
mov
fadds
jnp
mov
inc
fldt
inc
jmp
call
sub
es
je
insl
and
setns
push
mov
fwait
stos
dec
inc
fs
pop
inc
add
adc
mov
push
nop
add
add
jno
mov
mov
add
out
sahf
or
pop
sarb
ljmp
daa
xchg
iret
mov
ljmp
iret
repz
and
inc
pop
push
repz
jl
pushf
stos
mov
fs
cmp
lock
or
push
push
jae
pushf
mov
pop
jp
push
iret
leave
repz
xchg
mov
loopne
dec
repz
testb
sbb
inc
repz
repz
data16
cmpsb
adcl
mov
in
inc
pop
push
push
mov
out
inc
imul
sahf
arpl
ss
and
sarl
out
push
imul
popf
mov
gs
jg
test
fisubs
aaa
pop
xor
test
fwait
xchg
insl
pop
sub
jne
or
and
xchg
cmp
and
mov
cmp
push
push
into
sbb
add
bound
xor
stos
lret
js
stos
and
mov
into
push
gs
out
outsb
push
cmp
jge
jb
divl
mov
ja
pop
popa
imul
ja
das
fs
jnp
cmp
imulb
adc
jns
outsl
cli
fs
es
inc
dec
hlt
add
cmp
imulb
andb
add
push
mov
inc
daa
dec
jo
mov
push
pushf
sbb
inc
mov
and
xor
je
push
inc
push
jno
push
pop
adc
js
insl
mov
je
arpl
inc
adc
mov
sub
sub
sbb
stos
js
adc
gs
lretw
jnp
sub
xchg
das
ret
dec
inc
sub
or
data16
sbbl
pusha
xor
inc
daa
pop
mov
adc
inc
adc
lods
negb
xchg
mov
xchg
xchg
dec
xchg
mov
xor
in
dec
dec
inc
inc
inc
dec
dec
push
cs
dec
dec
mov
mov
sahf
or
les
stos
cmp
dec
jae
cmpb
xorb
dec
repz
adcb
shl
push
fs
cmp
dec
sub
push
dec
add
xor
xor
lcall
xor
xor
test
xor
dec
xor
pop
xor
jmp
push
jb
jp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
xor
xchg
xchg
out
xor
xor
xor
xor
sub
es
bound
jg
mov
xchg
aaa
popf
aaa
cmpsl
aaa
mov
mov
aaa
in
clc
aaa
incl
cmp
cmp
cmp
and
cmp
push
cmp
cmp
jbe
cmpl
cmp
pushl
aam
fistpll
lock
cmp
pop
cmp
cmp
cmp
arpl
cmpb
cmp
jmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
decl
push
cmp
cmp
cmp
cmp
cmp
cmpb
ds
jno,pt
call
fidivrs
or
and
dec
aas
push
aas
gs
insl
aas
jae
jl
cmpl
aas
mov
mov
ljmp
aas
aas
aam
das
sbb
xor
xor
je
xor
push
inc
or
or
xor
xor
inc
xor
outsb
xor
jl
loope
in
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jp
mov
ss
adc
sub
aas
aaa
jns
mov
mov
aaa
fdivs
out
sbb
push
pop
push
push
cmp
jae
sarb
fnstcw
or
adc
dec
cmp
jb
cld
cmp
cmp
pop
cmp
cwtl
cmp
cmp
cmp
cmp
push
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
jne
nop
cmp
iret
cmp
sbb
and
ds
xchg
jnp,pt
test
mov
test
ds
jmp
aas
jge
mov
das
fs
ljmp
cmp
dec
xor
jb
jle
test
shlb
xor
xor
xor
xor
push
xor
ljmp
jp
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
xor
dec
xor
jl
lea
cltd
xor
iret
xor
repz
pop
sub
dec
ss
incl
bound
push
jb
xchg
xorb
ss
ss
ss
dec
call
aaa
getsec
sbb
sub
cmp
inc
aaa
push
aaa
gs
jb
ja
test
mov
call
aaa
fwait
aaa
test
lods
aaa
mov
dec
fidivs
jecxz
lock
cmc
loop
idiv
push
pop
cmp
sbb
cmp
cmp
cmp
cmp
cmp
decl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
push
mov
mov
cmp
push
in
or
cmp
cmp
cmp
cmp
or
incl
jb
jle
cmpl
cmp
das
cli
incl
ds
fidivrl
in
add
add
cmp
adc
jmp
sbb
sbb
and
and
sub
sub
xor
cmp
aas
fs
jb
js
shlb
aas
movsl
aas
stos
aas
mov
pop
inc
sbb
ljmp
dec
xor
jmp
outsl
jle
push
and
sub
sub
mov
xor
mov
or
push
repz
aaa
mov
das
add
mov
push
xchg
sarb
mov
push
aas
imul
aad
mov
aam
dec
mov
mov
add
jle
cmp
aaa
mov
mov
fwait
cmp
xorl
out
loop
shrl
add
outsb
push
insb
dec
fists
test
test
dec
mov
dec
sub
push
push
add
imul
and
and
jns
jnp
loopne
jle
stos
mov
or
shlb
vprotb
add
or
test
push
and
or
or
cmp
sub
jb
pop
nop
cmp
adc
jle
dec
mov
mov
xorb
pop
aas
rcrb
shlb
sbb
mov
mov
movups
fs
leave
add
cld
mov
in
lock
call
and
in
fmul
leave
leave
leave
fcom
shlb
mov
cvttps2pi
aas
enter
xchg
cmp
fs
fs
mov
mov
add
and
jb
enter
leave
xchg
or
xchg
push
xor
xchg
xchg
dec
xor
inc
add
xchg
xchg
xchg
sbb
and
xchg
jle
enter
nop
xchg
xchg
xor
xchg
in
push
movsb
xchg
xchg
xchg
rcrb
xchg
test
jg
mov
sub
bound
lahf
xchg
xchg
xor
inc
push
sbb
xchg
xchg
xchg
or
fs
xchg
xchg
xchg
cld
mov
mov
xchg
cmp
and
or
and
push
xchg
xchg
xchg
add
and
or
adcl
pushf
pushf
pop
and
daa
xchg
leave
in
xchg
xchg
push
leave
enter
sub
inc
jb
xchg
xchg
xchg
and
insl
push
jb
xchg
xchg
fwait
dec
scas
push
push
xchg
and
xchg
mov
and
inc
xchg
xchg
pushf
or
or
xchg
xchg
push
inc
push
fstps
lret
adc
lcall
mov
test
test
pushf
aaa
and
lahf
push
setne
xchg
and
nop
test
es
or
xchg
xchg
xchg
sub
xchg
dec
gs
xchg
xchg
cmc
push
leave
push
jb
xchg
xchg
test
and
xchg
frstor
dec
inc
enter
mov
test
xchg
xchg
xchg
and
orl
xchg
xchg
xchg
test
xchg
xchg
xchg
add
enter
xchg
jne
test
mov
lahf
xor
enter
jl
inc
mov
jns
xchg
pushf
sub
shlb
adcb
punpcklbw
push
xor
inc
jo
jle
add
xor
bnd
add
sub
inc
orb
adc
cmp
nop
xchg
nop
pop
cmp
ds
lods
xchg
push
inc
or
add
dec
pop
cwtl
cmpl
addb
fistl
es
fists
jg
mov
mov
jb
jbe
mov
into
insl
and
adc
sbb
xor
xchg
or
sbb
pop
xorb
sub
dec
push
out
mov
mov
mov
sbb
xchg
cmpsb
sbb
push
shll
call
jmp
nop
pushl
pop
call
push
pop
imul
cmp
adc
loopne
outsb
push
repnz
sbb
add
add
pop
and
les
daa
and
dec
sub
dec
call
nop
pop
aaa
call
pop
mov
dec
psubw
add
jmp
incl
and
rclb
nop
out
ljmp
inc
and
cmpsl
out
call
repnz
jl
add
and
out
daa
rorl
add
jl
push
dec
pop
xor
mov
pop
push
push
dec
sub
or
dec
sub
ss
roll
pop
mov
pop
cmp
out
mov
and
xor
cmp
cld
jp
rclb
push
and
mov
nop
push
xor
mov
inc
push
pop
in
addb
xor
xor
sbb
adc
jnp
and
ds
sti
data16
pop
xchg
cmpsl
inc
xor
mov
sbb
sub
lods
js
mov
test
pop
xor
icebp
js
add
sub
cmp
jg
add
sar
add
je
rep
call
sub
pop
jmp
rclb
inc
add
jecxz
mov
mov
inc
jle
cmp
mov
mov
xor
push
pop
push
addr16
push
ret
and
arpl
xor
add
idiv
add
mov
or
add
push
pushf
lock
xor
push
push
sub
clc
pop
aaa
std
jbe
pop
js
mov
pop
stos
cmpsb
adc
sub
in
jecxz
sub
dec
sub
cmp
adc
mov
sbbb
pop
cmpsb
nop
adc
nop
test
setns
adc
nop
adc
and
and
nop
mov
in
sbb
in
sbb
sbb
enter
cmp
nop
stos
or
fs
jle
cmovo
das
wrmsr
sbb
iret
or
sbb
push
sbb
adc
sub
xchg
sub
nop
nop
sbbl
xchg
add
xchg
dec
xchg
xor
cmp
test
xchg
xchg
push
jns
xchg
xchg
xchg
xchg
xchg
xchg
test
xchg
sub
cmp
inc
and
inc
push
and
push
enter
jl
andb
leave
and
enter
xchg
das
stc
lods
mov
sbb
test
dec
mov
fcmovnb
sbb
subl
and
nop
and
enter
add
dec
and
nop
pop
xor
andb
push
orb
out
xchg
xchg
pop
and
mov
xchg
pop
dec
in
add
mov
pop
cmp
and
mov
daa
dec
dec
cmpl
xorl
in
daa
mov
add
es
pop
sub
ljmp
push
mov
inc
ss
test
dec
decl
leave
cvtps2pi
lcall
out
incl
jmp
or
mov
daa
in
add
add
call
or
stc
popf
std
fildll
mov
add
nop
mov
repnz
xchg
mov
jmp
incl
in
pop
std
pushl
push
inc
inc
sub
cmp
push
iret
pop
add
lret
add
rorb
scas
mov
pop
jmp
or
aas
jmp
inc
dec
enter
cmp
pop
mulb
and
and
dec
cmp
mov
nop
andb
addb
and
inc
cmc
mov
or
dec
cld
xchg
out
dec
ds
pop
mov
hlt
mov
dec
repnz
cmp
insb
sahf
int
cmpsl
out
xchg
popf
out
mov
jo
ds
adc
pop
jns
xor
jmp
popf
cmp
inc
nop
xor
out
or
push
icebp
xor
xchg
xchg
xchg
nop
xchg
xchg
hlt
aam
daa
fs
dec
aad
sub
pop
aad
push
jb
xchg
rcl
iret
xchg
xchg
xchg
ret
rcl
nop
pop
movsb
cltd
cmp
mov
xchg
dec
inc
inc
cmp
pushf
in
adc
mov
in
or
mov
mov
push
leave
lret
mov
mov
sbb
jb
es
adcb
push
nop
adcb
xchg
test
sub
lahf
xchg
dec
repnz
cmp
icebp
mov
lret
and
pusha
jb
adc
cmpsb
mov
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
int3
jb
jb
enter
jns
jb
mov
mov
inc
es
mov
xor
orb
outsl
push
cmp
push
insl
insb
je
add
sbb
mov
loop
jo
pop
xor
fnsave
xchg
lret
in
je
inc
push
push
enter
inc
jb
xor
xchg
js
jl
xchg
lret
adcb
nop
dec
push
test
jb
orb
nop
dec
outsb
lret
aam
int
shlb
cmp
push
mov
xchg
cmp
outsl
std
pop
idiv
jp
mov
nop
push
dec
in
xchg
faddl
cwtl
add
pushf
lret
xchg
add
daa
xchg
lret
inc
fildll
push
sub
dec
in
dec
test
sub
mov
mov
pushf
xchg
xchg
dec
in
les
xor
cmp
adcb
aam
cmp
push
dec
pop
fsubr
cmc
sti
movsl
xor
jecxz
daa
xchg
lret
shl
xor
frstor
sub
pop
pop
in
adc
xchg
xor
nop
inc
mov
xchg
xchg
add
add
mov
xchg
inc
add
or
mov
jg
push
mov
scas
xchg
xchg
pop
inc
inc
sar
cli
aaa
push
push
call
xorb
insl
add
addl
add
mov
and
mov
cmp
push
and
add
mov
push
adc
mov
add
lahf
les
inc
and
mov
and
xchg
pop
dec
pushl
jmp
add
lds
ret
inc
xchg
arpl
sarl
lret
adc
add
inc
stc
enter
add
pushl
cmc
loopne
daa
call
push
add
jae
mov
ficoml
aas
jmp
dec
aam
sub
and
out
jmp
es
aam
shll
enter
fs
aaa
lret
or
sub
cld
adc
pusha
push
push
mov
add
test
fcos
pushl
fcos
decl
xchg
add
outsl
outsb
iret
xchg
cld
sub
lods
mov
mov
int
fmuls
add
pop
nop
cmpsl
test
call
fsubl
adc
cmpsl
add
sbb
subb
aas
push
cmpsl
cld
sar
call
dec
push
daa
jns
gs
out
leave
nop
mov
cmpsl
push
cmp
out
mov
nop
aaa
pop
sar
decl
xchg
push
sub
cmp
jmp
addb
in
in
sar
pushl
incl
int3
jbe
push
je
jns
scas
or
push
xlat
ret
mov
sbb
into
not
enter
pusha
fidivl
ficoms
mull
xlat
push
lcall
rcll
adc
or
mov
fisubrl
and
out
les
mov
inc
inc
and
rcrl
daa
xor
xor
push
stos
or
movsl
nop
repz
xchg
dec
jbe
mov
into
jnp
xchg
pop
mov
scas
xchg
jmp
aaa
enter
mov
movl
xchg
sbb
rorl
pop
pop
repnz
fistpll
outsb
cmp
sub
dec
sub
push
pop
or
cmp
adc
mov
jne
je
xor
sbb
idiv
int3
ja
xlat
lret
mov
neg
pop
sub
addb
inc
repnz
sbb
jo
loope
xor
xchg
sbb
sbb
pop
xor
stos
js
idiv
bts
leave
mov
pop
add
or
push
mov
in
sbb
inc
lock
insb
sti
fsubrl
adc
in
and
call
mov
xchg
push
scas
dec
pop
sbb
inc
js
mov
popf
jne
sbb
xor
inc
scas
int
jmp
mov
popf
mov
test
jno
call
jmp
lcall
add
mov
inc
mov
dec
xchg
pop
cmp
aam
pop
in
inc
ja
in
jbe
cmp
sbb
call
repz
pusha
clc
int3
in
in
fsubr
add
fdivrs
fisubl
push
cmpsl
sti
fsubr
loop
subl
and
incb
iret
add
pop
aam
aam
aam
in
inc
xchg
int3
popf
int
shl
leave
inc
push
jle
jae
movsl
add
inc
rolb
push
shlb
mov
je
push
imul
cmp
enter
aas
pop
enter
add
cld
rclb
call
call
inc
pop
xlat
rcrb
add
jg
cs
call
mov
imul
es
dec
mov
mov
mov
je
xor
mov
mov
scas
shr
lods
jae
jae
nop
jg
lods
call
movsb
fmul
xchg
dec
test
test
dec
mov
out
sub
xchg
negl
lret
call
sbb
stc
in
cwtl
call
adcl
ret
stc
mov
nop
popf
nop
call
arpl
adc
shll
mov
cmc
notl
pop
aaa
mov
or
std
sbb
mov
push
clc
addb
pop
ret
mov
push
and
std
mov
negl
jnp
jbe
popa
pop
out
js
lret
movsb
repnz
jo
enter
in
sbb
scas
jmp
add
repnz
testl
mov
mov
xchg
fs
jb
mov
outsl
repnz
inc
fisubrs
pusha
jno,pn
lret
movsb
xor
hlt
adc
stos
ret
enter
mov
nop
ss
call
sbb
pop
pop
push
testb
andps
mov
pop
stc
mov
mov
jmp
lret
orb
xor
ret
pop
dec
mov
dec
popa
test
dec
cmp
mov
inc
leave
pusha
movsl
jb
enter
lahf
dec
in
cmpsb
xchg
inc
mov
movl
enter
inc
rorb
mov
inc
sub
in
nop
cmp
push
movsb
popf
rolb
jae
xor
lret
out
js
jmp
mov
xor
div
enter
imul
in
jae
push
loopne
add
pop
cmp
lods
lods
xor
fadd
xlat
and
pop
into
pmaxub
or
push
idiv
rorl
leave
mov
xchg
out
jne
adcl
mov
int
lods
fadd
xchg
mov
es
add
subb
xor
inc
xchg
cmpb
xor
pop
or
inc
xor
ss
and
add
add
sbb
adc
scas
push
xchg
pop
pusha
inc
jmp
xchg
bswap
adc
pop
int
ljmp
test
int3
incl
cld
lcall
jmp
sbb
xorb
in
xchg
xchg
inc
fdivrl
push
pushf
hlt
xor
adc
push
push
shrb
cmp
aad
cmp
sub
mov
xor
es
jle
repnz
pop
and
ds
or
push
call
pop
or
sbb
and
in
leave
and
lret
insl
push
call
nop
lret
ror
mov
ja
das
jge
stos
sti
lea
and
and
loopne
pop
ja
stc
and
fdivs
nop
push
or
push
nop
jbe
fsubrl
aaa
pop
pop
xor
call
daa
add
and
mov
pushf
or
ja
sarb
sub
or
int3
fsts
sub
lret
ficomps
ja
lret
fsubs
and
pop
sub
mov
lret
xor
or
mov
xchg
daa
mov
push
dec
or
into
aas
push
jns
movsl
loope
ds
sub
les
dec
pop
es
jg
xor
test
mov
shlb
mov
jo
jg
cmp
inc
outsb
inc
in
leave
sahf
ret
stc
and
bswap
ror
push
call
cmp
mov
pusha
and
add
leave
lods
movsl
leave
movsb
shll
ss
sti
push
test
aam
fdivrl
leave
nop
inc
sahf
pushf
call
adc
mov
xor
int3
ret
xchg
lret
or
lock
inc
sub
call
loope
mov
mov
add
enter
push
add
popf
call
pusha
data16
cld
jp
xor
fists
bnd
out
ret
mov
cmp
inc
push
inc
inc
enter
sub
dec
enter
adc
inc
imul
sub
sahf
enter
xor
negb
add
leave
pop
pop
jmp
pop
faddl
int
adc
lods
push
sahf
cli
out
push
inc
rcll
mov
and
xchg
out
dec
inc
pop
dec
inc
stc
loop
mov
xor
in
and
pop
cmp
dec
cmp
sarb
sub
popf
shl
aam
lret
jo
mov
jns
pop
lea
xchg
insb
mov
mov
and
loope
mov
js
stc
jl
cmp
js
bound
addr16
sub
pop
stc
pushf
mov
mov
lds
adc
fdivs
mov
xor
jp
ds
mov
jecxz
inc
add
cmp
out
mov
cmpsb
in
sbb
ja
es
pusha
loopne
jo
pop
dec
adc
out
repnz
mov
or
push
inc
cmpsb
pop
sbb
pop
popa
mov
cmp
jp
shlb
shrl
or
iret
daa
xchg
push
jmp
or
push
add
add
div
adc
cs
mov
ret
add
cwtl
mov
sbb
xor
cmp
dec
into
or
ret
nop
or
dec
pop
add
pop
jnp
sub
outsb
jnp
push
push
fucom
sarl
push
sbbb
les
imulb
fwait
out
push
mov
lods
inc
jl
cmp
repz
aas
adc
nop
inc
out
jns
cmpsl
pusha
pop
sub
lock
push
mov
test
clc
pop
inc
outsb
push
pop
xlat
divl
repnz
sbb
mov
and
xor
jl
sysret
mov
push
rol
les
inc
call
repz
aas
mov
xor
xchg
push
cmp
push
call
mov
pop
sub
rcrb
xchg
call
fcom
push
scas
shrl
adc
sub
jl
jmp
repz
mov
icebp
fcom
inc
adcb
mov
insb
pusha
push
outsb
dec
or
inc
enter
aad
loopne
fldenv
push
inc
rolb
cmp
cmpsb
cltd
jb
jbe
lahf
inc
shrb
pop
mov
mov
mov
inc
and
jns
lcall
mov
mov
ror
loopne
imul
inc
adc
out
sahf
and
inc
dec
pop
fs
jnp
inc
jl
xchg
mov
lods
mov
dec
repz
call
adc
cmp
repz
cmp
jns
aaa
sti
jo
addr16
mov
lods
mov
iret
sarl
push
add
sbb
cmp
repz
xor
dec
pop
repz
rep
js
nop
iret
repz
cwtl
mov
ds
repz
call
jns
out
adc
sub
cmp
pop
lahf
out
push
pusha
dec
pop
mov
fiadds
test
sahf
out
mov
dec
sahf
ja
out
dec
dec
dec
push
and
sahf
out
cmp
pop
fs
jns
out
mov
sahf
mov
rcr
dec
pop
icebp
imul
sbb
mov
dec
lahf
xor
cmp
xlat
jnp
idivl
pop
fs
dec
lahf
out
iret
mov
nop
pushf
dec
into
repz
pop
addr16
jns
repz
enter
clc
jns
out
add
testb
and
cmp
jns
out
push
pusha
insb
js
mov
dec
dec
push
movsb
lods
out
jns
iret
mov
fadds
in
out
cmp
clc
add
jns
out
and
cmp
dec
mov
fs
pop
insb
push
jl
mov
jg
mov
cmp
repz
ror
call
popa
mov
jns
out
xor
inc
push
sahf
out
sahf
pop
push
jns
out
mov
sarl
fsubr
clc
add
adc
repz
sbb
cmp
pop
cmp
repz
insb
je
mov
iret
repz
mov
dec
push
sahf
out
outsl
les
shl
in
push
out
sahf
out
dec
adc
sub
sahf
out
sahf
inc
dec
pop
fs
jns
out
mov
sahf
out
enter
iret
repz
cld
add
adc
and
cmp
repz
inc
push
pop
or
iret
repz
mov
repz
ror
outsb
cmpsb
lret
call
repz
mov
push
push
adc
sub
repz
xor
dec
push
pusha
insb
cmp
repz
test
iret
repz
int3
fsub
out
ds
in
clc
add
adc
mov
xchg
xor
cmp
dec
push
iret
out
out
ss
push
push
insb
js
out
sahf
test
jns
out
int3
fsub
lock
int
dec
repz
and
das
inc
iret
repz
out
int3
dec
pop
push
pusha
jo
mull
clc
cmp
xchg
push
iret
mov
sahf
out
mov
addr16
aam
in
imul
push
adc
out
sahf
sub
dec
push
pusha
jns
out
insb
js
nop
pushf
out
sahf
out
mov
enter
jl
call
sbb
iret
repz
inc
dec
pop
pusha
repz
rep
js
nop
pushf
iret
repz
test
ror
in
out
repz
clc
add
scas
push
sbb
jnp
iret
sub
xchg
push
push
pop
push
je
mov
mov
int3
fsub
out
ds
in
clc
add
adc
out
sahf
sub
dec
push
pusha
jns
out
insb
je
mov
test
ror
out
sahf
fsub
lock
or
cmp
repz
and
cmp
repz
repz
push
repz
mov
fcompl
lock
add
adc
out
sbb
xor
dec
out
sahf
out
pusha
jo
mov
jns
xchg
mov
enter
out
push
aam
loopne
clc
or
out
sahf
adc
sub
cmp
jns
out
push
pop
push
sahf
out
xchg
movsb
mov
lahf
out
sahf
enter
clc
add
cmp
sbb
xor
out
sahf
out
dec
pop
pusha
insb
js
push
jns
test
in
sahf
out
enter
hlt
iret
repz
sub
or
sub
repz
inc
dec
pop
fs
repz
mov
lods
mov
mov
add
sbb
and
cmp
repz
push
pusha
iret
repz
insb
je
mov
test
rolb
fsub
popf
idivl
lock
mov
push
sbb
xor
pop
push
js
nop
pushf
test
jns
out
ror
in
sarl
cld
add
adc
cmp
repz
cmp
push
pusha
repz
rep
js
nop
pushf
iret
repz
test
mov
into
sti
cmp
clc
pop
scas
pusha
push
sbb
repz
sub
push
pop
fs
repz
je
mov
lods
mov
cmp
fsub
lock
pusha
mov
repz
repz
sbb
sub
cmp
repz
inc
dec
pop
push
repz
cwtl
movsb
lods
mov
rcr
loopne
fmulp
xchg
clc
add
or
sbb
sub
cmp
repz
cmp
jo
test
out
shlb
inc
lock
cs
or
push
add
mov
cltd
nop
int
movsb
and
jns
je
into
pop
pop
dec
repz
dec
cmpsb
mov
negb
daa
out
push
mov
sahf
push
ss
pusha
jo
jns
out
mov
ja
out
cld
push
mov
jns
out
dec
pop
je
xchg
out
sahf
out
scas
rcl
mov
in
cli
mov
movsb
inc
repz
xchg
notl
data16
fisubrs
out
out
sahf
out
ds
push
and
inc
jns
out
push
push
jns
out
mov
repz
or
and
cmp
push
pusha
push
jo
ds
test
lock
aam
cmpsb
shrb
loop
push
xchg
imul
ds
out
sbb
push
push
outsl
dec
add
cli
xor
and
jae
test
and
inc
sbb
mov
mov
outsl
cmpsb
and
adc
sub
test
outsl
mov
lahf
inc
fisubl
xor
rorl
fwait
mov
andl
push
pabsb
sub
mov
repz
loopne
and
pop
push
xor
add
and
dec
outsl
jbe
fistps
adc
movsb
lcall
lcall
pusha
jne
adc
mov
fildl
fwait
xor
insb
aam
cmp
push
outsl
shll
cmp
push
fldt
lcall
pop
dec
add
or
jne
adc
dec
jne
pop
jg
fcomip
in
mov
mov
jnp
dec
jp
ret
insb
cmp
xorl
add
ds
sbbl
les
mov
cs
jb
jne
inc
jae
adc
dec
sub
push
xor
inc
dec
mov
dec
push
aas
arpl
and
push
addb
xchg
push
dec
push
jns
test
inc
mov
add
sub
xor
adc
add
jnp
out
mov
jo
arpl
cmp
aas
push
adc
push
incl
adcb
mov
xchg
out
mov
das
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
cmp
pusha
xor
shlb
xlat
xor
xor
mov
mov
xchg
insl
xor
daa
ss
mov
iret
aaa
fimull
adc
aaa
divl
add
or
and
daa
test
rolb
hlt
cmp
pop
pop
insb
mov
pushl
xchg
xchg
cmp
cmp
cmp
cmp
ljmp
shl
cmp
cmp
push
cmp
cmp
das
cmp
inc
cmp
pop
cmp
jp
fwait
cmp
pushl
cmp
cmp
cmp
xchg
cmp
cmp
aas
cmp
cmp
cmp
cmp
cmp
jnp
test
cmp
cmp
cmp
cmp
cmp
cmp
ds
ds
ds
lock
test
ds
ds
pop
xor
push
mov
cmp
aas
sarl
fdivrs
fidivrs
icebp
aas
cli
aas
popa
in
aas
add
xor
xor
xor
push
xor
xorb
xor
sbb
push
ljmp
xor
xor
xor
cmp
xor
pushl
pop
cmp
xor
xor
xor
xor
xor
xor
incl
or
xor
xor
xor
xor
xor
xor
xor
jg
test
scas
xor
xor
xor
xor
cmp
pop
sub
pushl
push
arpl
mov
xchg
aaa
lcall
cmp
add
cmp
fnstcw
adc
cmp
cmp
popf
out
cmpsb
lock
and
outsl
xchg
lret
cmp
inc
ds
push
xchg
mov
mov
ds
aas
mov
sub
push
inc
xor
call
pop
cmpsb
mov
mov
xor
dec
xor
jbe
lods
rol
pop
add
enter
shll
fnstenv
loop
repnz
mov
or
incl
xor
push
xor
pop
xor
add
mov
fcmovu
enter
or
and
xor
test
ret
jg
xor
xor
xor
xor
xor
xor
outsb
xor
xchg
xchg
decl
lcall
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
jo
jns
test
cmp
mov
out
out
cmp
cmp
cmp
idivb
cmp
cmp
cmp
cmp
cmp
cmp
mov
push
loopne
out
cmp
cmp
cmp
jg
cmp
push
cmp
xchg
mov
mov
cmp
cli
fcomip
or
sbb
adc
push
and
sub
xor
inc
ds
jbe
bound
push
pop
aaa
pop
clc
jb
jp
andb
ds
ds
mov
sarb
fistpll
jmp
or
pop
aas
and
mov
dec
aas
pop
aas
push
ret
pop
dec
xchg
aas
mov
ret
aas
not
pop
dec
popa
push
xchg
into
xor
out
push
aas
std
das
xor
xor
xor
iret
out
cli
ljmp
xor
xor
xor
xor
sbb
sub
sub
gs
xor
arpl
jo
jne
cmp
mov
cltd
xor
xor
xor
xor
cld
incl
repz
xor
xor
sub
push
add
xor
pop
xor
or
insb
push
nop
xor
xor
add
insb
outsb
pushf
stos
xor
xor
xor
adcb
xor
xor
xor
xor
xor
mov
jb
mov
push
movsl
lcall
adc
cmp
push
aaa
jo
movsb
aaa
ljmp
call
cmp
push
mov
cmp
cld
test
pushl
cmp
push
cmp
cmpsb
jbe
cmp
scas
xchg
push
or
cmp
jne
xchg
cmp
cmp
cmp
cmp
loop
sub
scas
outsb
sbb
mov
and
aad
jo
cltd
adc
bound
das
mov
dec
and
xor
xor
xor
xor
xor
xor
xor
push
mov
xor
ja
popf
xor
xor
jg
and
xor
dec
int3
xor
xor
xor
std
aaa
std
pushl
hlt
xor
xor
xor
xor
mov
xor
lock
call
push
inc
xor
add
pop
ss
ss
ss
ss
js
jg
out
mov
ss
mov
ss
fidivrs
xchg
push
push
nop
sbb
aaa
adc
add
pop
cmp
data16
ljmp
sub
aam
fimuls
cmc
cmp
cmp
push
ja
push
ret
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
jp
std
incl
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
cmp
pushf
or
pop
push
xchg
mov
mov
xchg
test
int
in
cmp
incl
mov
cmp
xor
lret
push
cmp
cmp
add
push
mov
lcall
xor
clc
jmp
shlb
xchg
int3
xor
xor
xor
xor
xor
dec
cmc
pop
pop
jb
xor
mov
xor
xor
out
push
jle
mov
adc
adc
sbb
mov
xor
sub
in
jg
insb
loope
xor
inc
xor
push
xor
sub
xor
pop
lret
insb
add
push
je
js
xorb
xor
jge
pop
push
cwtl
xor
test
lods
jbe
sub
add
enter
aam
fdivrs
cli
fwait
sub
xor
push
lock
xor
xor
pop
mov
sahf
or
adc
sbb
sbb
and
xor
xor
inc
cmp
jg
add
xor
xor
push
xor
pop
xor
test
jo
aaa
pop
call
xor
clc
mov
xor
add
add
xor
rolb
xor
cs
loopne
faddl
in
hlt
xor
jp
jg
incl
xor
or
or
adc
and
and
test
xor
mov
inc
xor
jg
xchg
dec
xor
push
xor
pop
xor
xor
insb
xor
cmpsb
add
sarb
push
test
mov
mov
nop
xor
mov
mov
cmpsl
outsb
add
xor
xor
filds
fdivs
fcompl
in
call
jg
pop
es
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
inc
stos
clc
and
sub
mov
cmp
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
scas
jl
xorb
mov
xor
xor
xor
xchg
mov
jo
adc
fld
fnsave
int3
xor
xor
xor
je
fdivs
xor
xor
xor
xor
hlt
cmp
jmp
push
or
adc
sbb
and
test
or
sub
cmp
inc
sahf
dec
xor
mov
pop
push
pusha
dec
push
push
jo
je
js
lcall
incl
xor
cwtl
xor
movsb
xor
mov
or
pushl
mov
xor
shrb
loope
fdivs
in
call
xor
cld
or
lcall
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
mov
and
xor
cmp
inc
ss
fbstp
ss
cmp
pop
ss
ss
ss
call
ss
jl
xorb
mov
mov
nop
ss
ss
ss
mov
call
pushl
lods
ss
mov
mov
les
enter
aam
fdivs
fdivl
loopne
mov
sbb
ss
ss
ss
add
add
mov
mov
stos
aaa
adc
sbb
sbb
and
and
bound
inc
sub
xor
cmp
mov
pop
lret
inc
aaa
dec
aaa
dec
bound
aaa
ret
lcall
aaa
fs
push
aaa
js
jl
sub
mov
ss
aaa
cwtl
aaa
adc
aaa
loopne
aaa
mov
aaa
mov
mov
mov
loope
add
enter
aam
sub
aaa
loopne
in
call
add
dec
and
cld
aaa
add
add
adc
and
stos
adc
sbb
and
and
sub
sub
xor
add
cmp
inc
cmp
cmp
push
jno
mov
pop
push
cmp
jno
sbb
pop
js
jl
ljmp
adc
nop
cmp
mov
cmp
add
mov
mov
int3
push
cmp
cmp
cmp
dec
and
loopne
in
call
cmp
cmp
cmp
cmp
or
or
adc
and
sub
add
cmp
mov
cmp
pop
mov
inc
cmp
dec
push
jg
outsb
out
pop
cmp
push
cmp
cmp
cmp
mov
nop
cmp
mov
cmp
sbb
or
cmp
inc
enter
rorb
cmp
clc
fdivrl
loopne
in
call
cmp
xchg
cld
cmp
incl
cmp
or
or
adc
adc
sbb
sbb
and
sub
sub
xor
adc
rolb
inc
pushl
mov
cmp
cmp
cmp
insb
cmp
je
js
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
enter
sarb
aam
fdivrl
loopne
in
lcall
in
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
mov
cmp
sub
sub
xor
xor
inc
mov
lahf
subb
les
add
in
test
add
inc
repnz
test
test
test
test
rolb
add
packuswb
add
sub
insb
mov
pop
in
push
jg
inc
adc
arpl
outsb
xor
out
push
dec
sub
out
mov
add
adc
push
mov
test
mov
in
lcall
sbb
push
inc
dec
add
out
pop
stos
sbb
push
jae
add
jae
mov
add
shlb
fs
nop
mov
sbb
or
xchg
or
add
and
xor
or
lret
inc
dec
inc
or
nop
inc
inc
sahf
push
push
mov
cmp
shl
das
mov
push
push
stc
sahf
or
pop
sbb
add
xchg
dec
movsl
or
or
rcll
mov
fs
loopne
jg
jge
in
sbb
int
and
shll
daa
push
adc
xchg
sub
mov
adc
subl
pop
add
mov
sarl
and
xor
bound
pop
mov
push
test
xor
add
cmp
and
pop
add
and
aas
push
and
sbb
and
das
sahf
mov
les
inc
idivl
pop
push
mov
cmp
cmp
cmp
cmp
aam
add
cmp
adc
cmpl
xchg
cmp
cwtl
mov
dec
push
cmp
inc
leave
add
icebp
icebp
sub
je
out
push
or
incl
andl
add
dec
push
or
mov
and
add
outsl
or
adc
lcall
cli
cli
or
xor
add
xchg
xor
mov
adc
add
and
subl
mov
mov
push
and
call
xchg
adc
xor
repnz
das
sbb
and
lret
pop
data16
cltd
mov
and
push
sbb
sbb
sbb
lret
pop
jae
push
pop
sub
push
stc
es
sub
adc
out
push
stc
pop
add
lock
loopne
dec
xchg
dec
movsl
jb
sbb
sbb
xchg
outsl
push
xchg
pop
mov
es
cmpsl
repnz
mov
in
push
add
xorl
jo
arpl
push
addr16
insl
mov
leave
xchg
jae
data16
das
jb
and
stos
add
add
dec
js
xor
and
pop
sub
lahf
out
jnp
sub
iret
repz
cwtl
or
repz
movsb
stos
pop
dec
aaa
test
js
outsb
push
xorb
stos
loopne
js
cmpsl
mov
lahf
fwait
rolb
xchg
xchg
push
stos
sub
inc
rolb
dec
ljmp
lcall
inc
cmp
xchg
lcall
inc
mov
mov
jg
inc
adc
in
add
lcall
adc
push
cmp
cmp
cmp
cmp
cmp
cmp
incl
lock
cmp
cmpsb
cmp
cmp
cmp
cmp
push
push
fcmovnb
cmp
idiv
cmp
or
adc
movsb
push
push
xor
inc
and
js
outsb
dec
inc
cmp
and
adc
rolb
jg
aaa
xchg
stos
xor
add
mov
hlt
cmp
push
add
push
test
insb
add
add
add
pop
dec
call
dec
shlb
ljmp
add
xor
popf
sbb
das
inc
cmp
sti
dec
add
psrad
push
adc
push
dec
inc
push
inc
jle
insb
fwait
add
cs
nop
flds
sbb
outsl
add
lock
icebp
or
mov
add
pop
jnp
into
jae
push
xchg
cmpsb
sbb
add
push
inc
push
dec
push
xchg
xchg
push
xchg
sarl
sub
jb
outsb
or
inc
xor
out
fidivs
outsl
es
pop
imul
mov
dec
inc
pop
push
dec
dec
push
inc
pop
push
in
adc
stos
or
neg
rol
pop
dec
dec
dec
push
push
cs
pop
loope
negb
push
pop
sub
add
adc
xchg
fdiv
nop
nop
stos
xchg
inc
pop
fiaddl
pop
or
pop
daa
pop
les
dec
cmp
push
js
add
pop
mov
xchg
das
add
cmpsb
ss
pop
daa
bnd
push
arpl
cs
add
or
addr16
insl
sti
incl
clc
sub
xor
xor
inc
add
pushf
in
cli
ljmp
dec
mov
pop
xor
cmpsb
in
jl
fists
test
add
das
jle
iret
sbb
adc
out
dec
and
pusha
call
nop
pop
xchg
cld
add
or
outsb
and
inc
push
das
sub
nop
dec
rcll
es
pop
and
stos
pop
enter
gs
lahf
jmp
js
xor
push
je
or
inc
push
imul
and
or
gs
lea
pop
xor
ja
push
je
pop
or
cmp
lahf
jbe
or
shlb
xlat
das
ss
or
nop
imul
xor
dec
cld
dec
pop
aaa
ss
xor
xor
cmp
sbbl
inc
cmp
adc
imulb
mov
jb
cmp
cwtl
mov
pop
in
insb
lock
xor
inc
inc
scas
ja
and
outsl
insb
aaa
xchg
xchg
incl
or
xor
xor
xor
inc
dec
push
popf
xor
xchg
adc
or
xor
jo
movsl
sbb
enter
add
push
mov
clc
out
scas
cmp
sbb
sub
xor
dec
sahf
xchg
push
test
inc
jae
cmp
fucomp
pop
cwtl
adc
push
jg
fisttpll
jmp
or
pop
out
hlt
js
mov
pop
mov
xchg
inc
cmpsl
push
nop
add
or
add
subb
mov
adc
insl
aas
call
add
add
enter
push
add
xchg
mov
andb
loope
imul
cmpsb
gs
add
test
xor
pop
jg
jle
clc
sub
mov
or
mov
pop
jo
or
mov
cld
loopne
push
add
pusha
add
cmc
push
loopne
add
inc
les
popl
dec
outsb
sbb
dec
jg
or
lahf
push
enter
ss
loopne
add
cmp
and
cs
rolb
bound
ja
outsb
das
inc
lahf
and
inc
roll
dec
cmpsb
add
cmovg
pop
dec
dec
dec
push
pop
in
out
std
and
dec
inc
pop
jo
cmp
mov
inc
jbe
push
add
jg
loop
dec
cmpsl
pusha
push
fmuls
adc
daa
pop
or
adc
movsb
mov
movsl
movsb
adc
or
or
inc
xchg
fmuls
jnp
xor
push
xor
pop
push
rcr
mov
std
cmpsl
dec
mov
jnp
lret
rol
jg
scas
xor
jne
mov
and
push
mov
xor
push
shrb
or
dec
call
outsb
mov
call
lds
imul
add
sbb
sbb
inc
push
fdivp
orl
aas
push
dec
inc
pushf
jae
and
lods
jg
push
jae
popa
loope
std
loopne
sub
and
out
push
dec
cwtl
inc
scas
rcrb
pop
ret
and
in
inc
sub
bound
add
push
arpl
sahf
xor
inc
dec
lea
xchg
lock
push
dec
pushf
xchg
fnstcw
adc
cltd
call
movl
rol
pop
jns
sbb
xor
nop
sbb
inc
cmp
or
outsb
gs
andb
and
imull
daa
int3
in
push
outsb
sbb
cs
lret
sub
xor
out
adc
jle
shr
pop
outsb
ret
cmp
ror
int3
aaa
add
add
in
adc
cmp
sahf
out
add
pop
push
sub
insb
fmuls
mov
or
dec
push
sub
aas
add
pop
cmpsl
shrl
sub
xchg
adc
sbb
jne
mov
pushf
pop
adc
and
or
push
arpl
inc
push
dec
add
pop
cltd
ret
dec
dec
sub
xchg
jns
bound
push
imul
jns
dec
fwait
push
xor
bound
mov
fisubl
push
dec
push
dec
dec
ja
jp
jae
dec
data16
push
gs
mov
je
cmp
xor
sbb
loope
xor
or
mov
sbb
push
xor
adc
or
xchg
outsl
stos
or
mov
inc
xor
cltd
pop
or
ss
xor
insl
mov
add
xchg
and
inc
inc
mov
int3
sbb
add
orl
insl
fs
arpl
inc
adc
adc
push
jp
imul
scas
xor
or
inc
and
xchg
test
rorb
jns
sub
lods
xchg
mov
add
popa
scas
fmull
rcrb
or
scas
insl
jne
or
inc
lods
cmc
ss
adc
push
lock
insb
jae
leave
mov
fsubl
inc
adc
jns
sub
mov
add
movsl
sub
add
popa
mov
mov
and
push
or
subb
add
or
mov
xor
test
stos
xchg
test
push
cmc
outsb
cwtl
pop
js
mov
pop
lahf
sbb
js
xchg
mov
mov
sbb
dec
push
imul
popa
fs
push
push
adc
mov
sbb
int
cmp
sub
add
test
push
cmp
jmp
add
add
pop
mov
push
ret
lods
pop
std
sbb
adcl
add
sub
in
mov
ficomps
into
mov
daa
sbb
insb
jo
pop
sbb
xor
or
mov
adc
or
mov
inc
mov
loopne
add
push
sbb
and
push
inc
and
mov
adc
and
fucomip
in
fadds
sbb
sbb
inc
mov
ret
adc
add
int3
pop
push
cs
add
pop
push
lods
lods
popa
dec
mov
stos
sbb
inc
or
lds
add
orb
test
popa
add
loope
mov
dec
add
sbb
and
push
push
add
rcll
xor
imul
jns
outsl
dec
outsb
push
out
insl
outsl
push
lock
jae
mov
aaa
pop
sub
inc
jmp
mov
pop
or
repz
add
push
push
mov
lea
test
adc
das
sub
add
xchg
inc
or
aad
xchg
xor
add
sbb
mov
fistl
add
sbb
sbb
sbb
negb
add
fcmovne
imul
test
fstl
aam
daa
cmp
pop
inc
inc
aaa
jae
or
fwait
leave
xchg
mov
xchg
xchg
mov
in
push
popa
sbb
loop
add
int
insb
dec
jae
xchg
add
cmp
clc
and
cs
in
mov
arpl
test
push
pop
testl
repz
push
lcall
dec
data16
add
inc
mov
sub
insb
les
add
and
rol
xor
xor
ret
xor
roll
arpl
sbb
insl
add
sub
mov
push
mov
add
pushf
nop
imul
and
mov
add
add
or
nop
add
xor
insb
nop
inc
add
scas
adc
cmp
dec
jmp
add
dec
adc
add
sbb
or
and
sbb
notl
and
test
add
add
push
repnz
out
dec
push
inc
xchg
fcmovnbe
xor
lahf
and
insl
sbb
test
xchg
lods
movsb
and
cmpsb
add
and
sbb
daa
ss
imul
das
adc
xchg
and
add
inc
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
lods
inc
add
