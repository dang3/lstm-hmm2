and
mov
movl
call
mov
pop
ret
nop
out
mov
cmp
inc
and
add
or
mov
dec
fsubp
ret
movl
rorb
fstpt
push
push
mov
add
inc
add
and
push
or
ja
cld
or
fdivrl
xor
dec
or
movb
jae
out
push
push
push
jno
mov
mov
mov
lea
imul
call
and
cmp
mov
jae
incl
pop
add
fistpll
sbb
mov
cmp
jb
push
and
push
aas
sti
jg
lea
push
push
mov
popa
lods
lea
lea
push
push
add
fildl
push
sub
sub
rcll
inc
add
sbb
add
push
xor
mov
std
add
push
lea
push
neg
pop
pop
pop
pop
ret
scas
sub
inc
and
mov
or
int
idivl
push
inc
or
pop
mov
clc
cmp
mov
mov
mov
lea
add
push
xor
or
arpl
inc
push
push
int3
inc
pop
push
jle
jnp
outsb
call
enter
and
addl
fistpl
push
mov
pop
or
pusha
popf
sbb
mov
insl
pop
sbb
pop
mov
not
mov
and
and
or
mov
mov
enter
mov
js
push
jo
sbb
loope
or
int
inc
add
mov
and
sub
lret
and
sbb
lret
sub
aaa
xlat
mov
lret
shl
push
cmp
idiv
fcomi
xchg
shlb
call
bound
add
and
jge
fbld
ljmp
add
and
divl
or
mov
frstor
pop
out
into
mov
out
shr
or
and
out
jbe
cli
mov
pop
testl
ljmp
fdivl
std
mov
test
scas
cmc
mov
shr
jg
insb
popf
loopne
add
and
not
and
or
sub
add
rolb
movb
mov
sub
int
sub
add
in
or
inc
xor
mov
rolb
inc
std
loop
xor
mov
ret
popf
sub
pop
test
popf
mov
imul
popf
out
xor
stc
imul
icebp
enter
cmp
shl
mov
pop
lcall
sub
pop
sub
cmp
les
jnp
xchg
movups
lret
jnp
std
pop
popf
or
lret
pop
popf
lret
mov
ret
xor
popf
sub
popf
inc
cmp
data16
pop
in
popf
icebp
and
nop
imul
xor
pop
lret
rorb
fxch
aaa
rclb
xlat
mov
outsb
ret
ret
mov
jo
sub
mov
jns
movups
jbe
push
pop
and
or
sub
add
mov
add
or
ret
fstpt
shll
pop
add
out
sbb
mov
icebp
sub
idiv
sbb
push
divb
cmc
sbb
or
call
mov
inc
rolb
or
insl
sti
add
pop
push
pop
pop
or
stos
lret
int3
dec
xlat
jl
fcoms
cmp
mov
adcl
mov
cmp
sub
xchg
out
iret
jg
sbbl
and
adc
ret
out
inc
loope
mov
les
inc
add
mov
or
push
or
movsl
xchg
sbb
movsb
pop
in
and
push
test
sbbb
outsb
and
icebp
into
aaa
sahf
je
enter
movsl
enter
mov
rorb
leave
cmp
add
out
loope
sbb
call
dec
into
sti
data16
outsl
xor
mov
rcl
pop
aaa
mov
cmp
pop
or
ret
cltd
xchg
push
jae
je
lret
fsubs
jbe
into
aaa
sahf
arpl
movsl
xchg
in
adc
inc
pusha
or
icebp
movsl
xchg
xchg
cld
sub
enter
add
pop
mov
add
add
int
mov
jmp
mov
imul
sub
fbld
outsl
les
lods
aad
lods
scas
xchg
sbbb
jbe
leave
sbb
lea
ret
fstl
rcr
mov
mov
jge
pop
sbb
add
in
std
push
stos
rolb
xor
xor
or
jno
outsl
mov
movsb
lret
lret
fs
dec
mov
popf
insl
outsl
mov
loope
test
das
adc
stc
cli
xor
or
insb
insl
sti
sbb
enter
aaa
movb
add
xor
cmp
lods
jns
ljmp
mov
mov
mov
sahf
xor
test
sahf
dec
mov
or
inc
shll
shll
rol
sbb
clc
pusha
dec
mov
mov
xor
out
xor
cmp
lods
sub
movsb
in
mov
in
int
mov
sbb
cmp
or
ja
out
cli
ja
xor
push
and
cli
daa
mov
or
clc
insb
out
lods
cwtl
xchg
xchg
test
out
aam
loop
or
mov
leave
sbb
ljmp
add
call
mov
rcl
popa
ret
ret
cmp
lret
fiadds
cltd
bound
or
nop
jo
out
xchg
mov
mov
or
in
ret
pop
mov
push
lods
flds
rorl
jae
pop
adc
mov
inc
and
hlt
jmp
movl
popa
sbb
ljmp
inc
xchg
push
or
mov
pop
cmpsl
and
fs
or
cwtl
sub
xor
xchg
cld
out
lods
cmp
lcall
nop
pop
gs
push
lcall
int3
or
push
or
and
repz
out
call
enter
rcrl
test
jnp
lcall
dec
jle
outsl
jnp
push
lcall
out
push
or
adc
add
aaa
inc
dec
mov
jnp
fwait
and
jle
mul
int
fnstsw
push
lcall
mov
test
mov
pushf
stc
sahf
and
rcl
sub
fs
rsqrtps
add
loopne
mov
xchg
mov
add
call
xor
pop
or
ret
sbb
mov
or
or
outsl
inc
or
add
cld
inc
jp
test
jbe
hlt
or
or
sbb
cld
dec
decl
mov
add
mov
push
cld
lret
adc
fcmovnb
pop
adc
add
sbb
add
int
idivb
push
cmp
jb
pop
pop
ret
push
repz
xchg
clc
inc
out
in
jbe
dec
mov
loop
imulb
push
inc
add
ror
xor
mov
mov
cmp
out
or
or
push
cli
add
out
mov
pop
cmp
jb
test
lds
inc
dec
divb
cmp
push
mov
lea
jne
pop
and
test
xlat
not
out
jbe
mov
push
mov
rorl
fidivrs
out
adc
jmp
and
rep
pop
pop
push
pop
ja
ret
or
jmp
mov
add
shlb
mov
test
push
loop
fimuls
and
jmp
jmp
gs
xor
inc
sahf
and
out
addb
xor
xchg
mov
pop
push
adc
das
cmc
daa
outsl
hlt
add
or
fsubrl
mov
sub
cmp
int
sub
push
call
mov
and
les
mov
xchg
in
aaa
test
jmp
adc
ret
movsl
sbb
test
mov
gs
and
jge
push
iret
pop
xchg
and
xchg
test
xchg
scas
xchg
rclb
mov
lea
adc
ljmp
jl
in
mov
add
pop
repnz
and
rclb
lea
mov
cmc
mov
shlb
jno
imul
push
js
mov
dec
and
data16
insb
and
jae
pop
or
outsl
mov
sbb
pop
aaa
es
fucomi
bound
int
insl
subps
fsubl
push
or
jbe
add
push
fwait
jge
imul
subb
xor
pop
push
jl
adc
ss
push
pop
jmp
out
jmp
pop
incb
inc
pop
loopne
icebp
and
in
inc
jbe
cmp
dec
dec
cmp
cltd
jg
and
sub
ret
cmp
std
js
lcall
adc
push
push
cld
popf
and
sbb
mov
mov
add
mov
fisttpl
lahf
fucomp
js
add
sbb
cmp
pop
sub
orb
and
sub
mov
lock
enter
and
sbb
sbb
jge
sbb
dec
adc
imul
lds
or
adc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
dec
push
call
mov
adc
add
adc
sbb
clc
pop
ja
fcomp
xorl
nop
pop
mov
mov
mov
cmp
or
sbb
mov
or
xchg
sub
int3
mov
adc
divl
mov
aam
push
push
push
or
mov
push
popf
push
in
pop
in
push
mov
cltd
stos
mov
in
dec
add
pop
jb
mov
adc
ret
or
pop
pop
lock
pop
and
jne
int
ret
or
rclb
cmp
mov
cmp
jbe
cmp
jne
and
lret
jne
or
or
jae
das
sub
outsl
sbb
sbb
inc
add
mov
jno
jo
std
sub
push
or
dec
sub
cmp
rcrl
jb
repz
addr16
xor
jecxz
pop
enter
test
clc
xchg
cmp
jbe
ret
xchg
je
mov
mov
mov
shlb
sahf
notl
ljmp
clc
or
jbe
cmp
jne
sbbb
ds
inc
jnp
fsubrs
push
lcall
xor
test
pop
dec
or
lods
push
push
adc
dec
idivb
mov
xor
lock
adc
mov
and
je
sub
lods
and
xchg
add
adc
or
inc
es
sub
movb
cmp
pop
aam
ds
or
inc
cmp
adc
mov
cmpl
pop
enter
outsb
movsl
mov
cmpl
shlb
add
mov
add
inc
nop
adc
jl
mov
push
xor
pushf
lock
rcr
je
push
adc
lahf
mov
cmp
cs
adc
cmp
and
pop
push
and
cld
daa
mov
push
dec
mov
mov
fs
loop
mov
push
push
dec
mov
aam
addr16
sbb
mov
iret
sub
fcomps
mov
shr
mov
sub
aaa
adc
mov
pusha
pop
lret
bound
daa
sbb
sahf
mov
push
and
cltd
fwait
inc
adc
out
lds
lds
mov
push
push
sti
cmp
push
adc
push
add
push
push
shr
and
jge
mov
adc
addr16
xor
shrl
insb
insl
outsb
cmpsb
imul
jae
shll
ja
push
mov
add
lea
jle
mov
pushf
and
pop
movb
cmp
dec
adcb
dec
rcrl
mov
shlb
mov
mov
lea
popl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
xchg
xchg
xchg
xchg
lahf
mov
xchg
xchg
mov
xchg
xchg
xchg
cmpsl
test
stos
xchg
xchg
xchg
xchg
stos
lods
lods
scas
xchg
xchg
xchg
xchg
scas
mov
mov
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
ret
xchg
xchg
xchg
enter
xchg
xchg
xchg
lret
int3
int
xchg
xchg
xchg
xchg
iret
rcl
rclb
aam
xchg
xchg
xchg
xchg
xlat
fcomp
ficoml
ficoms
loopne
loop
xchg
xchg
xchg
jecxz
in
xchg
xchg
xchg
xchg
out
jmp
xchg
jmp
in
out
xchg
xchg
xchg
xchg
out
lock
repnz
xchg
xchg
xchg
repz
cmc
notb
clc
stc
cli
xchg
xchg
xchg
xchg
sti
cld
std
decb
dec
xchg
ljmp
push
add
dec
dec
dec
dec
add
dec
pop
or
or
dec
dec
or
dec
movups
adc
dec
dec
adc
dec
pop
sbb
sbb
dec
dec
sbb
dec
pop
and
and
dec
dec
and
dec
daa
sub
sub
dec
dec
sub
dec
das
xor
xor
dec
dec
xor
dec
aaa
cmp
cmp
dec
dec
cmp
dec
aas
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pusha
popa
bound
dec
dec
arpl
dec
dec
dec
dec
addr16
dec
dec
imul
dec
dec
dec
outsl
jo
jb
dec
dec
dec
jae
jne
dec
dec
dec
dec
ja
jns
dec
dec
dec
dec
jnp
jge
dec
dec
dec
dec
jg
addl
dec
dec
dec
dec
xchg
dec
dec
mov
dec
nop
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
cwtl
cltd
lcall
popf
sahf
dec
dec
dec
dec
lahf
mov
dec
dec
mov
dec
dec
dec
cmpsl
test
stos
dec
dec
dec
dec
stos
lods
lods
scas
dec
dec
dec
dec
scas
mov
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
ret
dec
dec
dec
enter
dec
dec
dec
lret
int3
int
dec
dec
dec
dec
iret
rcl
rorb
dec
dec
rcl
aad
dec
dec
dec
dec
xlat
fcomp
fimull
dec
dec
fcmovnu
fstp
dec
dec
dec
dec
fnstsw
loope
dec
dec
dec
dec
jecxz
in
dec
dec
dec
dec
out
jmp
dec
jmp
in
out
dec
dec
dec
dec
out
lock
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
dec
dec
dec
dec
sti
cld
std
daa
and
incl
add
add
daa
daa
daa
add
daa
pop
or
or
daa
daa
daa
or
daa
movups
adc
daa
daa
daa
adc
daa
pop
sbb
sbb
daa
daa
daa
sbb
daa
pop
and
and
daa
daa
daa
and
daa
daa
sub
sub
daa
daa
daa
sub
daa
das
xor
xor
daa
daa
daa
xor
daa
aaa
cmp
cmp
daa
daa
daa
cmp
daa
aas
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
push
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pusha
popa
bound
daa
daa
daa
arpl
daa
daa
daa
daa
addr16
daa
daa
imul
daa
daa
daa
outsl
jo
jb
daa
daa
daa
jae
jne
daa
daa
daa
daa
ja
jns
daa
daa
daa
daa
jnp
jge
and
push
pop
cld
push
lods
lcall
cwtl
cltd
push
lcall
popf
sahf
lahf
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
movsb
movsl
cmpsb
cmpsl
xchg
xchg
xchg
xchg
test
stos
stos
cwtl
xchg
xchg
xchg
lods
lods
scas
scas
xchg
cld
adc
jae
js
or
loope
movsl
inc
lret
xor
adc
pop
add
pop
int3
add
shll
adc
pop
sbb
add
or
out
rcrl
pop
iret
push
rclb
cmpsl
pop
sbb
xchg
mov
stc
sbb
add
scas
jmp
and
test
xchg
cmp
adc
lods
fstps
lea
mov
cmp
inc
xchg
mov
xchg
fxch
and
xchg
xchg
xchg
sbb
xor
leave
xchg
cwtl
mov
sub
sbb
mov
imul
sub
mov
push
leave
dec
xchg
shrb
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
ret
leave
leave
mov
leave
leave
leave
leave
leave
lret
int
leave
leave
leave
into
iret
rcl
leave
leave
leave
leave
rcl
aam
leave
leave
leave
leave
xlat
fcomp
leave
leave
leave
leave
fcmovu
leave
leave
leave
leave
loopne
leave
leave
leave
leave
loop
in
leave
leave
leave
leave
out
call
leave
ljmp
leave
out
out
lock
leave
leave
leave
leave
repnz
cmc
leave
leave
leave
leave
div
clc
stc
leave
leave
leave
leave
cli
sti
cld
std
arpl
addb
daa
daa
daa
daa
add
add
daa
daa
daa
daa
push
pop
or
daa
daa
daa
daa
or
or
daa
daa
daa
daa
push
movups
daa
daa
daa
daa
adc
adc
daa
daa
daa
daa
push
pop
sbb
daa
daa
daa
daa
sbb
sbb
daa
daa
daa
daa
push
pop
and
daa
daa
daa
daa
and
and
daa
daa
daa
daa
es
sub
daa
daa
daa
daa
sub
sub
daa
daa
daa
daa
cs
xor
daa
daa
daa
daa
xor
xor
daa
daa
daa
daa
ss
cmp
daa
daa
daa
daa
cmp
cmp
daa
daa
daa
daa
ds
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
pusha
popa
daa
daa
daa
daa
bound
gs
daa
daa
daa
addr16
daa
daa
daa
push
insb
insl
daa
daa
daa
daa
outsb
outsl
jo
daa
daa
daa
daa
jb
je
daa
daa
daa
daa
jbe
js
daa
daa
daa
daa
jp
jl
daa
daa
daa
daa
jle
addb
addl
xchg
daa
mov
daa
daa
mov
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
cwtl
cltd
daa
daa
daa
daa
lcall
daa
sahf
lahf
mov
daa
mov
daa
daa
daa
cmpsb
cmpsl
test
daa
daa
daa
daa
stos
stos
lods
lods
daa
daa
daa
daa
scas
scas
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
ret
lds
daa
daa
daa
mov
leave
daa
daa
daa
daa
lret
int
daa
daa
daa
into
iret
rcl
daa
daa
daa
daa
rcl
aam
daa
daa
daa
daa
xlat
fcomp
daa
daa
daa
daa
fcmovu
daa
daa
daa
daa
loopne
daa
daa
daa
daa
loop
in
daa
daa
daa
daa
out
call
daa
ljmp
daa
out
out
lock
daa
daa
daa
daa
repnz
cmc
daa
daa
daa
daa
div
clc
stc
daa
daa
daa
daa
cli
sti
cld
std
test
daa
daa
call
daa
daa
daa
arpl
add
add
daa
daa
daa
add
daa
daa
daa
or
or
daa
daa
daa
or
daa
daa
daa
adc
adc
daa
daa
daa
adc
daa
daa
daa
sbb
sbb
daa
daa
daa
sbb
daa
daa
daa
and
and
lahf
dec
shl
addr16
add
repz
jl
add
add
add
add
ds
iret
sub
sub
add
add
out
stc
xor
add
add
add
stc
jl
lahf
add
add
add
add
add
iret
out
cmp
add
add
add
add
stc
jl
aas
add
add
add
add
lahf
iret
out
add
add
add
add
add
repz
jl
add
add
add
add
ds
iret
dec
add
add
add
add
add
out
stc
push
add
add
add
add
stc
jl
lahf
add
add
add
add
add
iret
out
pop
add
add
add
add
add
stc
jl
pop
add
add
add
add
lahf
iret
out
add
add
add
add
add
repz
jl
add
add
add
add
and
add
add
dec
adcb
push
insb
xchg
mov
mov
mov
in
nop
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
xchg
cwtl
cltd
lcall
popf
sahf
in
in
lahf
mov
in
mov
and
out
add
lock
add
subb
mov
add
rcll
sti
or
notb
jno
push
push
and
add
gs
jne
or
or
lods
add
sbbb
test
cmp
or
shrb
xor
or
pop
nop
cmpsb
jmp
add
or
jmp
sub
sbb
sti
pop
adc
push
add
add
fwait
das
pop
dec
sbb
xchg
jl
or
add
cwtl
movsl
sbb
xor
jge
inc
push
add
subb
hlt
add
clc
pusha
dec
cmp
jb
sbb
int
and
test
je
cmp
je
into
sbb
test
and
movb
add
jmp
out
sub
ds
and
ja
imul
inc
xor
mov
inc
sbb
enter
mov
mov
or
dec
push
add
dec
pop
sbb
sbb
add
outsb
inc
xor
repz
rol
jg
lea
rep
movsw
add
adc
cltd
pusha
push
stos
mov
or
or
sbb
imull
adc
xchg
push
loopne
and
mov
in
or
mov
nop
iret
xchg
cmp
sub
lock
outsl
fnstcw
inc
insb
push
sbb
jb
in
sarl
and
mov
mov
mov
push
sub
and
cmpsl
pusha
inc
and
pusha
or
ret
mov
push
mov
sub
jo
or
sub
inc
add
adc
mov
pop
addl
push
fcomip
push
push
adcl
int
pop
inc
fisttps
and
mov
add
loopne
das
push
sbb
jnp
cmpsl
bswap
mov
cs
sub
aas
pop
fadds
push
das
mov
arpl
xchg
cmove
push
push
sub
xchg
or
adc
jb
add
mov
sub
inc
test
mov
ja
adc
add
mov
jle
jmp
xor
lahf
xchg
cmp
lahf
enter
fistpl
pop
xor
cli
mov
lret
sub
dec
gs
gs
dec
cltd
sub
repnz
mov
jb
hlt
dec
in
cmp
scas
push
enter
or
insl
gs
dec
cltd
push
hlt
sub
js
pop
mov
sub
pop
adc
sbbl
cmp
xor
push
dec
outsb
inc
mov
imul
xlat
rorl
adc
dec
roll
lods
shufps
int
add
or
or
outsl
outsl
adc
dec
movb
add
loopne
leave
inc
mov
jl
in
jle
and
ror
in
adc
gs
mov
enter
les
popa
inc
mov
mov
pop
jb
mov
add
jb
rol
add
add
and
dec
xor
xorl
mov
and
or
xchg
movsb
test
nop
out
push
push
dec
cmp
add
mov
into
mov
jl
dec
push
scas
dec
iret
inc
cmpsb
mov
push
addr16
pushf
xchg
divb
lods
adc
or
mov
fsts
int
adc
add
lock
pop
pmaxub
add
adc
mov
cmpl
mov
xchg
stos
out
shl
cmp
xchg
pop
push
dec
xor
inc
add
or
xchg
nop
stos
xchg
dec
orl
adc
mov
scas
stos
enter
inc
adc
inc
js
hlt
int3
push
and
and
mov
and
dec
mov
inc
stos
jo
popa
pop
test
stos
js
enter
lret
adc
add
stos
pushf
lret
push
inc
fadds
lods
jl
mov
inc
cmp
push
sbb
push
adc
in
enter
add
or
enter
xor
leave
push
or
inc
fmul
les
push
add
adc
xchg
pop
mov
enter
dec
pop
inc
push
or
xchg
add
adcb
test
stos
mov
cmc
cmpsl
pop
pop
xorb
or
add
lcall
adc
xor
push
inc
pop
dec
push
pop
adcb
enter
fs
or
cwtl
ret
stos
cwtl
and
or
push
pop
stos
sub
mov
rcll
xlat
test
mov
xorb
std
mov
jne
push
push
push
test
mov
movl
sbb
test
pop
or
pop
hlt
pop
movsb
sti
roll
je
jge
rorb
mov
sti
stos
lea
add
jne
push
jge
loop
incl
lcall
hlt
mov
adc
cs
mov
xor
das
dec
mov
and
mov
cmc
pop
in
push
mov
push
rcrl
push
push
sbbl
int
fildl
xchg
mov
add
test
imul
ss
sbb
mov
test
mov
subl
popa
mov
jg
mov
mov
cmp
jne
test
je
mov
or
add
add
mov
movb
jne
xchg
jmp
sbb
fdivr
testb
sub
jne
in
xchg
push
pusha
ret
es
neg
std
pushl
insb
push
inc
xor
ljmp
cmp
je
mov
je
shlb
adc
mov
inc
add
je
mov
mov
or
pop
lods
sub
xor
das
rorl
push
insb
adc
xchg
mov
mov
push
hlt
lds
add
xchg
mov
pop
ret
dec
adc
psllw
movsl
add
mov
sbb
or
sbb
sub
push
jne
mov
mov
or
cmp
push
in
xor
push
and
xchg
in
push
sub
nop
mov
adc
pop
and
mov
inc
inc
mov
push
push
dec
or
inc
pop
push
in
sbb
adc
cmp
push
or
pusha
fs
sub
push
mov
pop
jo
cwtl
movsb
adc
les
aad
int
das
outsb
lds
sub
cmp
sub
aas
xor
xor
adc
jp
push
push
and
and
inc
add
sbbl
push
test
add
mov
enter
push
dec
push
push
leave
xorb
push
test
rorb
push
dec
xchg
inc
ret
adc
jo
or
jb
cwtl
and
sbbb
add
pop
push
je
inc
leave
add
psrld
mov
push
punpckhbw
and
pushf
mov
sti
mov
jp
or
pop
or
mov
stos
mov
xchg
push
push
bound
rclb
popf
lret
xor
gs
or
sub
add
inc
cltd
adc
fbld
and
pop
aas
test
push
pusha
push
and
or
push
sub
add
pop
in
sub
bound
pop
lock
jne
mov
and
mov
mov
rclb
rcl
cwtl
or
push
out
insb
loopne
push
in
orb
ficompl
nop
scas
pop
int3
or
flds
dec
sahf
enter
ror
add
fs
inc
cmp
repnz
aad
aad
aam
rcr
leave
dec
sahf
push
pop
movb
push
mov
mov
and
lret
cmp
adc
dec
add
loop
int3
add
cwtl
loopne
dec
adc
rolb
adc
iret
ret
pop
add
pop
and
add
shlb
aam
cld
jne
shl
xor
push
mov
dec
push
sbb
jmp
push
pop
cmp
and
cmpl
push
cmp
xor
pop
popa
xor
xor
into
add
roll
mov
mov
mov
inc
mov
int
or
inc
adc
aaa
cmpb
push
imul
xchg
and
cmp
sub
inc
and
sar
pop
and
push
pusha
lds
rclb
fimull
shll
jne
mov
dec
pop
cmc
dec
pop
ret
shrb
xchg
ret
xchg
in
pop
and
lcall
in
ret
add
fdivrl
push
les
mov
aaa
jl
insb
mov
add
jo
fsubrl
or
adc
dec
mov
cmp
sti
push
das
push
cmp
cmp
add
or
add
mov
xor
xor
adc
mov
ss
add
push
adcl
aas
add
sbb
or
lods
insl
movsl
popa
lea
ret
scas
add
js
and
push
shl
sbb
push
pop
push
lcall
sahf
dec
mov
sbb
sbb
and
push
out
lds
mov
clc
xchg
movb
inc
cmpl
jne
mov
out
push
xchg
xchg
add
sbb
add
jp
adc
jmp
xor
sbb
push
in
mov
and
xchg
mov
fwait
mov
jo
cmp
dec
lcall
stc
push
mov
mov
mov
sbb
test
and
xchg
cmp
push
push
add
xor
inc
sahf
outsl
repnz
add
fwait
popf
mov
into
mov
cwtl
and
cmp
test
push
enter
add
nop
adc
mov
add
add
leave
js
adc
push
or
test
es
pop
adc
leave
jne
adc
xor
sub
cld
dec
bound
call
data16
sbb
outsl
inc
xor
push
push
sub
adc
or
sub
test
sub
pop
adc
add
sub
std
or
in
sbb
add
in
cmp
or
cmp
add
in
cld
jecxz
adc
sbbl
out
xor
test
or
cmp
js
push
jmp
orl
push
xchg
and
rcl
or
outsl
adc
hlt
and
mov
mov
xchg
or
sbb
adc
daa
push
scas
fsub
mov
enter
mov
or
rorb
subb
test
adc
mov
push
xchg
in
add
addb
mov
pusha
add
add
loop
loopne
addl
push
mov
dec
loope
push
push
mov
cmp
or
sub
loop
adc
dec
dec
add
adc
les
lea
fimuls
push
or
push
add
dec
leave
lods
test
leave
and
mov
inc
cwtl
js
push
hlt
mov
xor
leave
scas
mov
jbe
nop
push
nop
and
dec
xchg
pusha
and
xchg
or
or
or
inc
adc
or
test
adc
test
in
inc
adc
cmp
xor
or
cltd
and
mov
sbb
and
sbb
xchg
or
jl
jo
and
inc
cmp
push
mov
mov
call
test
aaa
mov
xor
push
mul
sbb
inc
cmp
or
push
inc
stos
stos
sbb
and
sbb
sbb
mov
arpl
xchg
sub
push
nop
jl
mov
mov
xor
stc
pusha
jae
lods
andl
and
xchg
loop
cmp
sbb
cmp
fists
adc
stos
hlt
fcoms
mov
add
xor
outsb
jmp
mov
lcall
mov
and
aad
fucomp
push
and
add
sub
cmp
push
sub
adc
lods
xchg
sbb
dec
divl
rcrl
inc
add
nop
inc
sbb
dec
cmp
cld
in
cmp
add
flds
jmp
mov
mov
in
jl
xorl
movsb
mov
xchg
xor
cmp
stos
mov
scas
sub
test
in
jae
fadds
call
mov
jg
movl
sbb
jnp
mull
jb
dec
loope
pop
pop
pop
lods
sti
sub
je
xchg
dec
stos
push
notb
cmp
pop
mov
cmpl
fmul
cwtl
add
jle
sarb
jg
es
nop
pop
or
test
cmpl
push
iret
cltd
lods
fucomp
mov
xchg
out
jo
jmp
sbb
jp
jb
roll
imul
shll
daa
imul
pop
jne
jno
ret
inc
push
cmp
pop
sub
jo
test
or
call
pop
mov
cmp
aam
push
or
hlt
aam
xor
cli
adc
and
pop
icebp
push
xor
mov
push
jbe
aad
push
mov
aaa
or
mov
stos
pop
xchg
pop
xor
aad
pop
pop
or
sbb
in
stc
scas
jbe
pop
xlat
insl
push
es
sub
popa
lahf
outsl
pop
sub
and
in
push
aas
xor
sahf
dec
ds
inc
mov
xor
add
in
and
sub
roll
sbb
push
dec
into
push
stos
and
orb
mov
push
or
xchg
xchg
addb
push
rorl
inc
pop
dec
xchg
mov
iret
bound
jmp
lods
sbb
cwtl
lods
sbb
insb
fldlg2
cmp
xchg
call
push
das
or
in
pop
sub
push
push
add
in
add
cmpl
fsubs
add
and
xor
aad
push
jecxz
aas
loopne
scas
shll
arpl
jo
sbb
xor
pop
pop
pusha
add
dec
jne
dec
andb
sub
adc
xor
cwtl
add
pusha
xchg
insb
xchg
cs
es
cmp
mov
push
xor
xchg
push
dec
cmp
or
sbb
xor
mov
xchg
or
loop
jmp
popl
and
mov
pop
dec
mov
mov
mov
andl
ret
clc
test
je
mov
adcl
mov
mov
adcl
jne
sub
outsb
out
jge
rclb
jl
je
mov
sub
dec
mov
mov
mov
insb
mov
lods
mov
inc
mov
sub
sbb
shrl
push
mov
rolb
pop
mov
jns
dec
fstpl
mov
shrw
push
imul
add
and
bound
aad
mov
mov
add
mov
jle
test
cmp
and
or
jo
push
push
push
mov
xchg
sbbl
cli
sbb
mov
inc
fcmovnbe
aas
adc
ss
int3
cld
aad
hlt
xor
pop
lods
mov
lock
ret
or
inc
sbb
inc
sbb
nop
push
xchg
out
data16
test
cwtl
nop
pop
add
adcl
or
and
xor
pop
subb
inc
push
sbb
nop
add
jbe
xchg
sti
xor
call
and
add
push
cmp
icebp
outsl
popl
mov
lea
sarb
push
inc
jl
push
repnz
inc
das
lret
shl
rcl
leave
sbb
test
jne
cmp
sub
push
icebp
test
je
mov
pop
cmp
or
mov
cmp
flds
sahf
mov
test
daa
cmp
into
adc
test
cmp
or
divb
orps
push
subb
pop
cmpb
into
pmullw
push
inc
stos
jg
fdivrs
aas
test
push
mov
mov
fildl
add
fs
inc
mov
and
cmp
push
cld
push
cmp
adcb
adc
ds
out
push
lret
pop
push
add
jbe
fistl
sub
int
adc
push
jle
inc
jb
push
and
jb
sub
ss
push
mov
sti
insb
pop
jmp
call
adc
sti
adc
xlat
aam
sbb
out
add
ja
push
adc
inc
or
adc
negb
push
push
mov
cmp
ja
push
fucomp
arpl
adc
fbstp
test
push
jbe
adc
adc
sbb
pop
enter
aad
pop
sti
mov
pop
cltd
and
add
sar
push
pop
roll
pop
fists
mov
sub
xor
adc
lahf
xorl
jbe
imulb
xor
jp
cmp
mov
sub
pop
stos
test
addr16
cmp
add
faddl
dec
and
aad
push
inc
sbb
mov
cmpsl
fstpl
mov
push
push
jns
insl
xchg
jmp
push
push
rclb
add
je
imul
sbb
and
sub
add
jge
xor
mov
outsl
aam
bt
test
push
int
arpl
cwtl
movsb
push
fisttpll
sub
fidivl
insb
jb
clc
subl
mov
jae
cmpsb
or
in
pop
sub
mov
lods
xor
data16
inc
icebp
andb
add
dec
stos
dec
insl
push
mov
push
xchg
movsb
push
ret
mov
leave
cmp
add
into
popf
aam
loop
push
inc
and
mov
mov
arpl
mov
fs
dec
test
mov
inc
insb
mov
adc
mov
enter
add
push
add
sub
sti
pop
and
push
push
cmp
mov
and
mov
fisttpll
or
sub
push
mov
dec
lcall
mov
cmp
insb
cli
xor
or
inc
mov
inc
rcrl
add
push
push
push
xor
adcl
cltd
add
push
push
sbb
aaa
adc
jno
test
adc
push
push
jae
and
sbb
dec
lahf
jb
ret
pop
rorb
or
sbb
in
lods
add
add
cmp
xchg
jmp
mov
jae
inc
jmp
xchg
adc
fldlg2
aas
xchg
cmp
mov
push
pop
mov
jns
pop
or
in
push
loope
mov
push
dec
mov
rolb
cmp
jae
mov
lret
adc
loop
pusha
int
jne
fisubrl
lock
push
or
mov
icebp
js
push
adc
scas
pop
sub
mov
add
or
inc
or
push
adc
adcl
push
jle
xchg
mov
jne
ss
stos
aam
ror
xchg
sbb
mov
mov
js
mov
jg
fucomi
push
addr16
pop
cmp
push
sub
mov
sub
mov
dec
push
dec
ret
je
xor
in
roll
jg
fidivrl
fidivrs
test
imul
pop
pop
cmpsb
pop
mov
pop
inc
ret
add
push
cwtl
or
or
popa
pop
in
sbb
test
into
sub
mov
lret
cltd
fmul
repnz
lret
cmp
sub
in
shrb
sar
sub
cwtl
je
call
or
dec
mov
mov
cmp
je
xor
fbstp
jo
shll
nop
insb
mov
xchg
inc
jbe
shl
pop
or
imul
sbb
add
pop
add
call
push
shrl
test
adc
adc
mov
jmp
mov
je,pn
sbb
addl
sbb
or
add
pop
jb
inc
add
test
add
and
int
dec
add
sbb
xor
or
out
lods
fcompl
nop
dec
sbb
in
imul
mov
nop
add
and
jae
cmp
rcrb
jno
mov
mov
movb
mov
cmp
jmp
dec
mov
sub
clc
ret
pop
push
mov
daa
cmc
sbb
or
adc
lods
mov
out
and
je
xor
pop
jmp
xchg
or
icebp
cli
sub
push
add
xchg
adc
subl
fstl
jne
mov
lds
adc
push
sahf
add
and
sbbb
ret
add
adc
out
and
push
cmp
in
mov
divl
sub
add
jae
sub
mov
mov
les
loope
mov
mov
inc
pop
lock
popf
mov
push
push
xor
mov
fwait
pop
jnp
pop
cwtl
push
orl
mov
or
cmp
mov
dec
fsubl
in
out
data16
mov
pop
out
ret
imul
insb
dec
inc
sbb
shlb
inc
sti
sti
cmpsb
mov
lea
push
xor
mov
or
cmp
in
mov
xor
inc
mov
icebp
outsb
pop
jne
cmpb
jne
or
insl
pop
push
cmp
repnz
insb
fildl
and
aam
dec
movsb
dec
mov
mov
cmp
inc
rolb
inc
movzwl
jmp
sub
ljmp
jmp
push
pop
pop
push
push
popa
jle
testb
xor
imul
pinsrw
or
mov
test
mov
mov
sub
jp
fwait
pop
xchg
and
add
movsl
xlat
add
out
enter
leave
sbb
ret
and
int3
pop
enter
adc
lea
jae
loopne
add
in
mov
pop
dec
add
sub
push
mov
add
in
inc
push
test
call
sub
shlb
add
dec
mov
add
add
push
or
mov
fwait
into
pop
ret
int
mov
in
pop
pusha
cmpsb
add
ss
shll
dec
mov
dec
mov
fldt
je
pop
push
repnz
mov
ss
lcall
or
shll
cmpsb
out
cmp
mov
gs
jl
fcoms
cmpsb
fnstenv
fisttpl
lods
add
fdivr
stos
inc
add
and
pop
xlat
je
pop
pop
xor
shl
loop
repnz
and
xor
lcall
outsb
cmpsb
imul
imul
movsb
imul
xor
pop
pusha
test
cmpsb
jmp
hlt
jmp
add
int3
pop
cmpsl
imul
xor
and
cmpsl
aas
lods
cwtl
jmp
dec
fiaddl
xchg
pop
cmp
push
rolb
es
shrd
mov
jge
xchg
add
data16
and
add
add
lock
dec
stc
fdivl
cmp
sahf
xorl
jnp
daa
pop
add
pop
cwtl
je
jg
flds
daa
lock
in
inc
pusha
sahf
sbb
xchg
jo
imul
cmpsl
push
repnz
pop
sub
lret
mov
and
in
mov
add
nop
repnz
inc
push
cs
insb
push
push
push
pop
add
cs
loopne
and
xor
mov
add
stos
and
xor
and
inc
add
lods
add
cmp
je
je
pop
dec
imul
je
dec
outsb
je
jb
gs
sarb
jo
outsl
jb
push
jne
imul
popa
jne
arpl
sbb
imul
je
insb
and
mov
jae
add
pop
inc
outsl
arpl
mov
fldt
dec
jae
popa
outsb
and
je
addr16
cmp
sub
jbe
gs
outsl
xor
jnp
add
bound
xor
push
pusha
rcrl
insl
pop
js
mov
xor
inc
popa
jb
jns
jne
push
jle
popa
imul
or
outsl
insb
bound
pop
push
bound
sbb
mov
addb
lods
in
xchg
dec
mov
gs
sub
xor
xor
xor
xor
xor
aaa
or
adc
xor
nop
fstpl
xor
outsb
push
arpl
mov
push
imul
jle
mov
ja
shrb
jne
arpl
add
jge
arpl
outsl
test
mov
push
outsl
lahf
xchg
push
dec
inc
fldt
fisubl
adc
push
and
pop
or
inc
imul
cmp
ficompl
cs
ss
pop
in
jmp
inc
push
inc
repnz
push
inc
dec
push
pop
sti
sbb
mov
push
jae
scas
inc
inc
push
inc
add
insl
aaa
pop
push
ljmp
mov
add
ss
inc
imul
push
shl
imul
xor
sub
imul
sbb
cld
repz
jae
pop
outsl
jo
pop
xchg
mov
and
outsb
insb
dec
inc
push
sbb
push
dec
dec
inc
dec
push
push
push
ja
or
mov
lods
popa
fs
and
pop
pop
fld
fistps
pusha
jnp
and
xor
pop
pusha
dec
cmp
imul
popf
adc
adc
add
lret
push
push
push
adc
mov
mov
and
sub
imul
testl
mov
pop
in
dec
pop
sbb
je
jg
jae
sub
mov
rcrl
mov
mov
push
aas
mov
jle
jo
das
das
imulb
jae
popa
imull
aas
jb
popa
or
out
shll
jnp
sub
pushl
into
iret
mov
xor
das
jbe
mov
imul
das
bound
mov
mov
mov
mov
jae
sub
out
mov
and
mov
ret
int
mov
mov
xor
push
mov
and
or
mov
das
mov
in
adc
jg
mov
mov
jne
lock
mov
mov
lds
lods
ret
rol
lret
sti
mov
shlb
adc
ret
ret
ret
cmp
cmp
sub
and
fisubl
mov
cmp
repz
fdivrs
or
int3
in
fcmovbe
mov
adc
inc
lcall
push
decb
mov
add
xor
and
insl
sti
xlat
lcall
jl
into
out
jl
in
test
sti
jl
repnz
push
dec
ss
cld
scas
rol
arpl
mov
mov
lcall
and
inc
iret
into
shrb
out
int
mov
std
enter
sub
mov
jae
js
add
sti
popa
xor
cmpsl
xor
fcmove
sub
pop
lods
ret
stos
pop
rcrb
jge
ret
add
loop
shll
mov
jnp
popl
in
sar
clc
leave
iret
neg
xchg
cs
int
lret
lret
add
loope
mov
mov
sbb
es
sti
out
mov
xlat
lret
enter
lret
iret
xor
mov
stos
fs
popa
gs
rcl
les
lea
scas
icebp
adc
ljmp
mov
sbb
repz
jmp
inc
inc
mov
hlt
cltd
addr16
fs
into
ror
mov
mov
je
addr16
inc
cmp
aam
mov
imul
jnp
fnsave
sbb
pop
ret
jbe
shlb
pop
sar
mov
test
push
fs
or
xlat
mov
pop
push
out
scas
js
shll
enter
arpl
ret
or
inc
sbb
loop
cs
daa
nop
fisubrl
sub
xor
cwtl
mov
push
inc
dec
lcall
mov
mov
cmp
mov
sbb
shll
sarl
lods
cmpsl
or
shlb
notl
xchg
jae
sbbl
xor
sub
jne
mov
aad
mov
and
sbb
mov
cmp
das
jmp
cwtl
xchg
outsb
std
pop
scas
rol
ret
mov
sbb
push
or
sub
push
or
cwtl
in
dec
or
push
mov
addr16
mov
xchg
mov
add
and
and
sbb
xor
andl
inc
push
subl
aam
in
xor
push
mov
push
mov
insl
leave
pop
rolb
pusha
popa
cwtl
pop
sbb
push
and
fildl
add
sub
hlt
mov
and
imul
mov
pop
dec
pop
lret
sarl
sar
pop
lret
out
scas
mov
or
lcall
adc
pop
xor
xor
dec
dec
mulb
xor
int3
insb
mov
push
dec
das
fstps
mov
cmp
xor
adc
jb
pusha
cs
or
sbb
push
xor
clc
outsl
mov
daa
jns,pn
push
cs
gs
test
mov
inc
pop
pop
jo
push
lock
sbb
pop
push
dec
dec
push
in
or
jnp
ss
pop
incl
inc
inc
cmp
sub
sub
sub
cmp
inc
cmp
pop
popf
push
dec
je
je
std
xlat
or
sub
nop
pusha
push
lods
add
lods
adc
and
bound
dec
and
inc
pop
push
pop
and
cmp
out
sub
scas
or
sub
and
iret
inc
outsl
insb
fs
inc
lods
xchg
pop
push
mov
fnstenv
xor
inc
mov
xchg
xor
add
or
dec
dec
inc
inc
dec
pop
add
dec
cmp
or
add
mov
add
mov
jb
push
inc
imul
fmull
popf
shlb
pop
jo
adcl
clc
sbb
push
sbbb
or
and
data16
xchg
or
hlt
rcl
push
cmp
sbb
jno
or
mov
sub
fisttps
pop
and
mov
je
dec
dec
std
mov
mov
ficomps
push
scas
sarl
dec
stos
iret
jg
mov
not
mov
inc
adc
addl
sbb
cmp
inc
sub
xor
inc
sub
lea
popa
and
mov
adcb
popf
sub
inc
bound
push
push
push
daa
or
jno,pn
push
cmp
pop
cmp
push
or
imul
data16
pop
sub
pop
pusha
jae
arpl
dec
je
xchg
aaa
xor
xor
xor
mov
dec
mov
xor
xchg
adc
xor
addb
inc
jge
mov
daa
ret
push
pusha
in
and
ja
push
jbe
sub
sub
pop
gs
decl
push
loopne
sub
test
jo
popa
sub
sub
sub
lods
push
jecxz
sub
daa
notl
arpl
xchg
and
cmp
sub
daa
daa
cs
cmp
rclb
mov
sub
jae
pop
mov
ja
xchg
cs
sub
pop
cmp
xor
cmp
xchg
dec
and
jge
cmp
outsl
xchg
sub
imul
imul
push
or
jno
fnstcw
and
mov
imul
aaa
bound
sub
sub
sub
addr16
sub
fdivs
jne
jge
sub
push
mov
cmp
xor
divl
xor
jns
cs
sub
pop
xor
call
lcall
xor
das
xor
sub
sub
sub
or
adc
cmp
pop
xor
push
adc
movsl
pop
cmpl
fisubrl
aaa
dec
inc
aaa
sub
xor
in
push
imull
and
cmp
push
xor
pop
add
xor
mov
add
addr16
out
mov
ss
cmp
cmp
pop
xor
xor
pop
and
rcrl
or
add
jae
inc
in
jge
ret
add
fstpl
xor
cmp
xor
add
cmp
fistpl
lcall
sub
cmp
and
xor
jae
xor
mov
insl
sbb
frstor
cmp
and
sub
push
push
xor
xor
es
xor
cmp
mov
mov
xor
xor
jnp
fwait
xor
add
mov
mov
and
lahf
imul
mov
push
das
inc
xor
cmp
push
push
fisttps
cmp
aaa
mov
ss
inc
sub
pop
xor
or
sub
jecxz
outsb
leave
popa
jl
jl
jl
cli
push
out
or
jl
adc
pop
dec
bound
push
arpl
cld
imul
addr16
lsl
jl
cmp
mov
add
jl
imul
sub
inc
inc
dec
mov
test
sub
jl
iret
xor
add
and
ds
inc
jne
cmp
xor
je
xor
and
psadbw
sbb
in
or
js
pusha
adc
pusha
pop
inc
jl
adc
push
jo
push
mov
leave
dec
dec
inc
mov
shrl
mov
adc
jo
in
inc
outsl
pop
adc
lahf
insb
filds
sub
inc
inc
pop
ja
insl
insl
je
mov
imul
outsl
je
faddp
jl
out
cs
popf
xchg
popa
fs
in
mov
jb
jae
sub
pop
lods
add
sbb
fsubs
out
jl
jno
and
lahf
add
jl
jl
sbb
rclb
push
push
sub
add
cmp
push
add
mov
jle,pt
stos
jb
jae
xor
jo
push
mov
sub
sbb
mov
imul
andl
push
mov
pop
cmp
cmp
adc
inc
fimuls
bound
jns
pop
sti
lods
insl
insl
xor
je
mov
outsl
test
adc
xchg
dec
push
push
push
sub
push
jbe
cmpsl
sbb
jns
data16
dec
or
push
fisttpl
fdivl
cmp
les
aam
cmp
and
xchg
xor
gs
mov
mov
addr16
addr16
arpl
sbb
sub
mov
aaa
sahf
or
lods
insb
dec
dec
add
mov
pop
jl
add
add
cmp
adc
or
rol
jecxz
iret
mov
add
xor
sbb
adc
pusha
imul
mov
mov
jne
push
and
xchg
pop
dec
pop
out
jae
pop
punpckldq
xor
imul
insl
and
sub
add
mov
pop
jnp
add
dec
stos
inc
push
dec
inc
outsl
test
fmuls
outsb
incb
inc
sbb
inc
sbb
sbb
addl
dec
mov
outsl
pop
xlat
sbb
aam
or
lods
sub
or
push
lret
xchg
pop
push
add
inc
lods
insb
fxch
push
pop
dec
popa
or
fwait
sbb
xchg
test
or
pop
xlat
outsl
pusha
or
popl
mov
push
cs
nop
addb
or
lds
dec
xchg
sbb
jl
xor
int
push
cmp
insl
xchg
mov
das
int
je
out
pop
mov
and
add
pop
or
pop
jne
pop
cmpsl
and
add
out
lret
adc
inc
mov
adc
mov
jne
push
imul
pop
xor
xor
pop
sbb
ss
xchg
pop
push
cli
add
dec
inc
push
push
xor
mov
jae
push
adc
nop
sbb
sub
mov
in
data16
fiadds
push
je
cmp
cmpsl
push
push
popa
gs
sbb
pusha
adc
pop
push
sbb
add
or
add
inc
or
dec
adc
dec
adc
movups
jbe
jo
and
daa
and
ja
int
std
jns
jne
jns
add
jp
ja
es
xchg
mov
daa
jp
jnp
jge
jl
outsl
fdivrp
sub
jle
jle
jg
sub
subl
cmp
das
addl
xorl
xchg
das
in
xor
xor
mov
ljmp
repnz
xchg
mov
mov
cmp
xchg
decl
stc
xchg
decl
decl
inc
cwtl
inc
add
mov
inc
lcall
sti
ret
xchg
pushl
dec
sub
mov
fmuls
fcos
and
dec
and
sbb
test
and
sti
add
xchg
inc
lahf
adc
sub
js
sti
movsb
xchg
pcmpgtb
nop
in
pushl
ds
inc
xchg
dec
mov
jmp
add
sti
cmp
mov
insb
test
sti
and
mov
sti
xchg
jl
mov
shlb
incl
mov
addl
enter
sti
xchg
lret
jmp
mov
sti
pop
loope
nop
xchg
dec
cmpsb
xlat
add
or
jge
xchg
dec
cmpsl
sti
inc
and
add
dec
test
sti
gs
nop
sub
dec
test
push
ret
mov
sbb
addl
loopne
push
cmp
lret
loop
mov
add
popf
pop
mov
sti
sti
pushf
jae
xchg
dec
call
adc
lods
in
mov
lret
cwtl
push
lahf
out
jmp
inc
fadds
and
sahf
pop
call
add
dec
mov
fcoms
scas
push
repnz
sub
dec
and
add
mov
lcall
sti
adc
icebp
adc
les
andl
nop
lods
fs
sar
cmp
divb
mov
mov
adc
stos
sti
rorb
lods
xor
pushl
call
pop
pop
xchg
add
mov
jmp
add
sti
add
mov
adc
insb
ljmp
mov
xlat
mov
or
int
iret
or
cmp
sti
fmuls
lods
js
push
lods
stos
lcall
sub
incl
cmp
jmp
xchg
std
xchg
in
call
into
in
sub
pusha
lods
hlt
sti
popa
and
call
ljmp
add
cmpsl
call
jecxz
in
sti
push
jbe
sub
xchg
push
mov
in
add
call
xor
lcall
or
mov
enter
outsb
subb
incl
lcall
sbb
lahf
movsb
lods
ret
xchg
sti
popa
movlps
mov
jbe
sti
add
fwait
dec
push
enter
ret
inc
pop
lock
fld
fnstsw
int3
stos
aam
add
push
mov
inc
test
call
sar
mulb
mov
into
lcall
popa
daa
add
pusha
xchg
xchg
stc
mov
ss
fcmovnb
xchg
les
pusha
xchg
and
mov
xchg
leave
sti
popa
and
jmp
movsb
pop
call
adc
notl
lret
mov
fisubs
sti
add
inc
pusha
aad
mov
jmp
pop
xor
xchg
add
lret
enter
iret
mov
sar
inc
fcomps
mov
add
incl
rcll
mov
mov
addr16
repz
in
or
sti
popf
push
mov
add
inc
stos
add
and
cwtl
sti
fcmovnb
pop
add
lods
je
add
sti
pusha
add
push
lcall
jo
and
push
jmp
cmpsl
imul
sti
add
stos
test
dec
add
nop
or
add
lcall
clc
add
sahf
pop
mov
nop
movsl
dec
sti
movsb
loopne
add
test
or
sti
sbb
sub
fmuls
lods
pusha
mov
incl
inc
and
push
lahf
jmp
insb
test
adc
lahf
pop
mov
arpl
sti
lea
fs
or
lcall
add
add
loope
lcall
dec
sub
add
xor
add
adc
push
push
adc
insb
add
loope
push
lcall
push
or
testl
dec
add
arpl
sbb
dec
mov
out
and
and
or
inc
incl
cmp
inc
out
dec
mov
sbb
pop
mov
call
push
add
flds
adc
fldenv
aas
pop
and
sub
gs
in
adc
push
xchg
sub
mov
cmc
add
mov
add
mov
idivl
cmc
add
cmpsl
add
jp
repnz
pop
mov
cmc
jle
jle
sub
ljmp
jg
jg
xor
cmc
mov
mov
lret
cmc
add
test
xlat
cmc
push
lock
and
add
mov
jecxz
push
lock
cmc
cmc
xchg
mov
out
cmc
aam
sub
repz
cmc
cmc
cmc
inc
lret
inc
insl
add
pop
cmc
cmc
mov
lds
cmc
cmc
inc
push
cmc
or
testl
and
add
cmc
dec
add
nop
add
or
mov
sub
mov
xlat
adcl
or
or
mov
popa
sub
inc
lcall
dec
inc
aas
cmc
mov
out
mov
add
mov
nop
cmpsl
mov
xor
cmc
and
mov
cmc
mov
mov
and
dec
cmc
mov
pop
add
push
inc
mov
fs
mov
xchg
jae
and
mov
mov
add
xor
or
cmc
cmc
cmc
cmc
and
pop
inc
and
mov
xor
cmpsb
stc
dec
xor
mov
push
orl
and
xchg
mov
mov
or
add
push
cmc
out
or
andb
test
test
sub
or
mov
jl
add
inc
mov
ret
pop
xchg
dec
jae
sub
sub
sti
or
iret
out
adc
pop
mov
lcall
adc
lcall
mov
ds
adc
in
add
xor
stos
cmc
out
addb
xor
addb
lcall
jp
fstpt
jno
xor
inc
popf
pop
cmpsl
jbe
mov
iret
mov
and
pop
stos
mov
dec
or
and
movsl
push
xchg
push
popf
aam
pusha
inc
daa
lock
and
add
stos
into
mov
shr
mov
and
jp
dec
or
cmpsb
imul
inc
or
ret
dec
divl
or
cmpsl
imul
adc
test
pop
add
cmc
cmpsb
insb
mov
xchg
cmpl
arpl
mov
enter
insb
xchg
rolb
scas
mov
mov
inc
mov
repz
leave
mov
mov
cmpsb
push
mov
or
test
das
mov
and
cmpsb
stos
test
inc
cmp
mov
inc
loopne
mov
jge
add
mov
shr
test
mov
push
and
mov
and
test
jae
mov
adc
addr16
mov
in
mov
mov
and
nop
cmpsb
or
and
jl
dec
mov
adc
and
mov
jb
mov
scas
or
dec
cmpb
loope
in
sub
xor
push
push
add
int
sbbb
dec
dec
addb
dec
nop
imul
orb
mov
mov
aad
fucomp
inc
cmpb
add
or
bswap
cmc
stos
jno
mov
adc
and
scas
fdivrs
shr
mov
pop
mov
mov
add
pushl
dec
shlb
shlb
or
xor
and
mov
call
or
and
dec
push
or
or
ret
or
xorl
push
add
aas
and
shlb
cmc
inc
inc
xor
pop
and
aas
cmp
dec
shll
or
sbbl
pop
ret
mov
xorb
cmc
dec
mov
mov
mov
mov
insb
mov
fs
push
mov
ret
mov
mov
mov
jg
mov
imul
mov
and
adc
out
pop
add
mov
lcall
or
div
imul
imul
imul
cmpsb
imul
popf
imul
rcrl
imul
jg
or
and
popf
jle
pop
jg
push
sbb
test
and
pop
test
pop
mov
orl
lea
dec
and
fwait
pushf
in
andl
pop
mov
in
movsb
movsl
pusha
sbbl
pop
or
inc
mov
xor
and
ss
test
negl
and
daa
inc
add
mov
vaddsubps
sub
and
in
inc
add
sbb
push
cmpsl
add
rcll
jno
testb
push
mov
sar
decb
xor
fmull
jg
add
or
frstor
mov
dec
imul
sbb
pusha
iret
push
xchg
stos
nop
xchg
and
or
xlat
push
pop
pop
pusha
into
test
in
pop
mov
cltd
add
pop
fs
out
mov
int3
shlb
dec
inc
gs
cltd
jae
sub
pop
mov
nop
inc
push
pop
adc
jae
mov
adc
push
or
ret
aam
mov
popa
aad
out
out
jg
sahf
test
scas
cmc
lock
pushf
pop
cmpsb
out
ds
shll
pop
fmul
push
insb
dec
xor
adc
and
mov
popa
adc
dec
gs
lcall
mov
mov
and
aaa
pop
enter
daa
in
inc
xor
pop
rcll
pop
mov
mov
in
adc
pusha
cmp
data16
fisubs
jmp
dec
rcll
push
xchg
pop
pop
pop
test
sbb
add
push
mov
test
int
enter
or
pop
mov
movsb
pop
sub
lahf
into
and
cwtl
into
pop
xchg
mov
pop
pop
jns
pusha
xor
mov
cs
or
mov
jo
addl
push
xor
jb
pop
pop
cbtw
xor
or
push
flds
add
stos
jb
pop
xor
in
xor
les
or
xor
pop
mov
ret
mov
leave
xchg
nop
jae
rcr
mov
or
add
and
add
lods
pop
pop
outsb
and
pop
ret
gs
add
pop
outsb
and
pop
faddl
gs
add
pop
pop
test
add
sub
cmp
or
add
pop
and
xchg
add
aad
cmpsl
adc
add
clc
adc
aam
imull
mov
negl
cmp
jg
and
push
push
push
add
jmp
xor
push
push
jmp
sub
rcrl
cmp
xorb
dec
add
jb
sub
sub
add
jb
cmpl
nop
dec
shll
jno
jmp
addl
jmp
adc
scas
orl
jmp
lcall
test
call
cs
inc
lds
dec
xlat
inc
pop
jmp
and
dec
add
lret
leave
movsb
int
mov
in
jmp
mov
call
jmp
data16
jmp
and
xor
jl
sbb
pop
jmp
mov
jmp
fcmovb
fsubrp
or
lock
xlat
dec
out
add
filds
aas
sub
aas
add
out
and
mov
xlat
sbb
stc
sbb
jmp
xor
push
sbb
nop
cmpsb
sbb
shll
aas
in
divl
sbb
shll
in
jmp
cmp
out
mov
add
stos
add
out
nop
scas
stos
enter
lea
add
jbe
xor
xchg
jp
jl
sbb
push
outsb
adc
daa
outsl
sub
or
fildl
cmc
lcall
add
sub
jl
imul
xor
or
and
mov
adc
test
mov
outsb
jg
inc
add
jle
add
int
imul
insb
lcall
xchg
out
loop
pop
mov
into
pop
jp
add
sbb
xor
mov
insl
xchg
pop
mov
fs
aam
insb
xchg
pop
mov
cmp
cmp
lods
lods
ret
outsb
mov
adc
pop
pop
test
scas
imul
movsl
mov
jbe
movsb
ret
jae
mov
jl
lcall
out
push
mov
xchg
sarb
sub
je
insl
shr
sub
mov
pop
push
fstps
dec
sahf
dec
jmp
mov
dec
mov
inc
add
cmp
push
gs
gs
cmpb
adc
cmp
movsl
adc
ds
in
mov
pop
dec
cmp
cmp
dec
pop
pop
incb
dec
dec
inc
inc
pop
or
pop
or
das
pop
mov
cld
decl
and
sbb
inc
inc
dec
adc
inc
or
or
and
inc
adc
adc
add
fucomp
sub
inc
or
sbb
xor
pop
fcomi
outsb
jg
adc
dec
sub
pop
and
inc
adc
outsb
ja
prefetcht2
sub
and
es
pop
mov
jbe
and
and
mov
jbe
or
add
adc
xor
add
adc
or
div
rcl
xor
mov
adc
mov
inc
xor
cmp
adc
sbb
cmp
inc
jg
xchg
dec
or
sbb
sub
sbb
lcall
pop
jle
pop
adc
sbb
sbb
divb
xlat
add
or
adc
pop
jmp
pop
lahf
jg
ja
mov
adc
and
and
or
mov
neg
fnstcw
cmp
push
sub
imul
add
add
decl
fcmovu
or
sub
and
and
add
sub
sub
cmp
das
sahf
and
frstor
cmp
and
jge
jne
xor
xor
fcompl
or
pushf
fdivl
pop
shr
mov
inc
dec
sbb
pop
clc
negl
push
inc
adc
das
cmp
xor
sub
adc
and
adc
sbb
sbb
sub
mov
scas
and
pop
shlb
cmp
sub
mov
sbb
cmp
add
rcr
daa
sbb
pop
push
xchg
roll
bound
lds
movsl
test
push
xchg
cmp
cmpsb
push
cli
incl
push
cmp
and
mov
sahf
popa
pop
add
fistl
pop
mov
add
xchg
add
pop
add
cmp
outsb
pop
popa
add
xchg
or
bound
add
movl
jne
push
fstp
jo
lea
add
mov
or
xchg
test
daa
out
repz
rcll
fsubp
stos
add
sti
in
out
int3
int
test
and
stos
cmp
iret
jle
mov
bound
jle
idivb
cmp
fsubs
push
stos
and
add
stos
adc
add
lea
mov
insb
stc
pushl
push
mov
cltd
adc
mov
sbb
lcall
mov
push
leave
sbb
mov
inc
inc
sbb
mov
mov
add
inc
pop
sbb
push
mov
rcrl
xchg
fnstsw
xor
dec
neg
scas
or
add
pop
mov
mov
fstl
ja
out
mov
lret
mov
out
test
mov
insb
lods
mov
dec
insl
pop
dec
xchg
pop
jle
dec
pop
add
mov
fiadds
sbb
push
ds
mov
or
pop
out
xor
mov
push
pop
push
pop
or
cmp
pop
dec
fcompl
in
mov
inc
movb
cld
sti
mov
shr
dec
lds
pop
shlb
push
xchg
ret
pushf
cmp
sti
mov
in
dec
das
pop
loopne
mov
mov
mov
rcll
inc
sub
mov
inc
ds
mov
push
int3
popa
cmp
inc
add
xor
sti
pop
pop
and
int3
pop
xor
fmuls
mull
and
repnz
mov
inc
inc
mov
add
fdivrs
mov
push
das
mov
pushf
ret
mov
pop
mov
aaa
out
sbb
xor
sbb
push
mov
bound
lcall
adc
pushl
bound
outsl
xchg
add
paddsb
jg
sbb
push
mov
cbtw
pop
lret
lcall
or
idivb
add
movsb
add
mov
gs
push
or
xchg
mov
inc
push
xor
xchg
push
imul
push
je
ss
mov
pop
out
repnz
fists
push
mov
xchg
push
cmc
push
pop
enter
pop
or
sub
imul
loop
sbb
jbe
lods
and
pop
or
ds
push
es
pop
fsubrl
bound
outsl
push
bound
add
and
sub
roll
dec
repz
incl
sti
add
aas
fwait
nop
lahf
add
pop
add
add
cmp
fadds
pop
jo
mov
rolb
shrb
pop
dec
jbe
ud0
add
add
enter
aaa
pop
xorps
nop
mov
push
pop
pop
nop
out
or
pop
loopne
ss
lock
push
cmp
pusha
pusha
add
loopne
jnp
cmp
pop
xchg
ffreep
pop
decl
dec
pop
add
xchg
inc
dec
rolb
pop
xor
clc
in
psubb
jmp
add
jae
add
add
ja
xchg
add
add
daa
sbbl
mov
adc
and
mov
fistps
pop
insl
test
add
push
negb
and
mov
adc
jae
inc
add
mov
leave
pop
cmp
inc
xor
add
add
inc
cs
loopne
jle
dec
cmp
jnp
in
adc
mov
lods
add
sti
push
and
pop
inc
add
add
lcall
das
jg
jae
arpl
pop
inc
add
push
add
mov
inc
sub
mov
add
mov
mov
add
flds
popf
cmpsb
stos
add
outsl
mov
outsl
fbstp
add
fcmovu
mov
mov
ljmp
add
int
jl
in
cltd
jnp
add
or
jp
fildl
test
scas
jg
sub
mov
jmp
das
aas
pop
jo
add
jg
les
adc
add
push
dec
mov
insb
jge
lods
dec
rcll
add
mov
outsb
jl
inc
ss
arpl
pop
add
movsl
dec
arpl
in
push
xchg
les
mov
sbb
pop
sti
sbb
inc
add
xchg
sbb
push
add
mov
imulb
jno
sarb
pusha
mov
inc
xor
daa
sbb
inc
fbstp
sub
sub
pop
push
push
add
stos
mov
dec
cmp
dec
add
dec
mov
icebp
add
dec
sbb
fdivl
inc
inc
and
aas
ja
mov
das
daa
pusha
pop
pop
add
icebp
and
and
pop
imul
jg
in
cmp
sbb
push
add
sbb
add
add
outsb
mov
rolb
shll
dec
push
inc
fs
fisttpl
pop
out
cmp
xchg
daa
push
jnp
dec
pushl
xor
fldt
pop
add
dec
lods
aad
or
xchg
xchg
jae
mov
fistl
jnp
xor
cmp
add
mov
ja
pop
dec
dec
xor
pop
mov
push
iret
dec
dec
push
jl
cs
outsb
filds
add
sub
add
add
icebp
testl
and
ret
dec
add
cmp
ja
mov
test
subl
divb
sub
scas
cmp
add
add
fisttpl
outsl
fucomp
imul
cmpsl
jno
jae
inc
cld
dec
pop
outsb
rcll
pop
inc
pop
xchg
scas
scas
mov
push
negl
add
test
mov
dec
adc
fs
dec
imul
test
ljmp
sbb
or
fcmovbe
add
mov
jnp
neg
fisubrs
add
push
cmp
pop
decl
imul
and
xchg
push
mov
out
pop
cmp
das
in
pusha
pusha
sbb
mov
in
outsl
and
jne
dec
pop
jmp
sub
inc
mov
aaa
outsb
daa
lret
pop
inc
dec
addr16
aas
push
sub
pop
xor
lea
pop
push
fmull
mov
jbe
jge
xor
insl
sti
repz
add
inc
movsl
mov
imul
mov
add
mov
fistpl
xor
add
movsl
and
sub
push
aaa
movsl
in
in
jb
push
xor
jg
in
rolb
or
sub
sub
addl
jae
shrl
test
sub
repz
lahf
add
jp
push
inc
add
in
mov
push
xlat
les
mov
pop
ret
sbb
cmp
add
mov
mov
lds
sahf
pusha
pusha
jae
fnstsw
cli
cmp
pop
add
mov
iret
mov
inc
mov
les
and
mov
outsl
jns
ljmp
mov
jne
hlt
inc
cmp
hlt
repz
dec
outsb
frstor
les
movsb
cmp
pop
and
push
test
outsl
outsb
sti
dec
cmpsl
frstor
mov
xor
xchg
mov
mov
cmp
mull
divl
test
repz
ret
fistl
xchg
repz
mov
pop
xchg
and
inc
outsl
mov
es
adc
std
cmp
daa
fcmovnbe
lahf
imul
push
mov
pop
pop
jae
pop
out
lods
fucomi
dec
mov
std
and
xchg
mov
imul
mov
xchg
push
or
lock
cmp
rorb
imul
cli
xchg
leave
lahf
mov
jne
and
sbb
or
add
in
add
or
push
popa
jo
movsb
mov
fidivl
sbb
xor
adc
das
lahf
lret
out
ficomps
push
add
mov
stc
inc
xchg
xlat
jbe
icebp
fistpll
leave
pusha
pop
add
lock
adc
lret
das
out
in
push
in
mov
pop
das
outsb
das
cmc
pop
lret
add
icebp
outsl
sbb
mov
jg
inc
in
adc
jb
in
push
in
loop
adc
or
fnstenv
stos
int
mov
cmp
fcmovb
lahf
xor
popl
mov
adc
push
push
lock
pop
mov
incl
fistpll
cmp
mov
and
adc
lcall
ret
movb
pop
shlb
clc
mul
ss
mov
sbb
cli
stc
in
sarb
xor
and
pop
int
test
insb
sti
aas
jl
cli
push
mov
push
fmulp
sbb
in
ret
jnp
pop
les
jbe
dec
and
aaa
imull
sub
outsl
int3
cmpsl
std
mov
pusha
lahf
mov
ret
repnz
jge
lret
jbe
nop
xchg
fbld
or
pop
mov
jg
mul
mov
das
out
push
fidivs
lret
cs
cwtl
into
mov
mov
adcl
xchg
movsb
movsl
dec
fidivrl
cmc
loop
nop
xchg
addr16
jmp
or
xor
lds
fdivr
xchg
cli
nop
mov
mov
pop
in
in
sbb
fidivrs
adc
xor
xlat
popf
xchg
ss
jmp
ja
insb
js
dec
sub
push
in
out
ret
adc
scas
push
cmp
xlat
ret
decl
xchg
popf
sbb
ja
xchg
in
mov
pop
ja
std
adc
in
das
cs
mov
outsl
pop
dec
mov
ja
and
mov
mov
mov
cs
xor
mov
mov
in
test
popf
sbb
ret
fdivrs
das
adc
jb
adc
xchg
cld
xor
or
pusha
call
ja
push
cwtl
add
or
das
or
in
scas
loope
loope
pop
clc
or
sbb
call
mov
mov
lods
decl
test
pop
mov
pop
xchg
sbb
dec
das
mov
pop
sub
xor
fcmovnb
xchg
jp
pusha
outsl
loopne
addr16
adc
test
jmp
jl
pop
fidivrl
or
and
stos
repnz
subps
jp
fildll
dec
inc
mov
fs
pop
loope
jns
jne
xor
outsb
ljmp
dec
iret
pop
loope
dec
inc
adc
pop
maxps
in
fbstp
gs
cli
mov
inc
pop
call
outsl
jge
or
cmpsb
pop
dec
add
pop
push
lea
int
inc
daa
cmp
mov
das
xor
incb
cmp
sub
push
sbb
int3
das
dec
pop
cmp
out
imul
pop
ss
xor
das
mov
inc
inc
xor
inc
inc
xor
xor
out
or
sbb
fcomp
inc
add
mov
mov
xor
pushf
xor
dec
jae
cmp
inc
xor
mov
add
lret
rcrb
fistl
dec
dec
aas
inc
or
je
cmp
int3
fstpl
das
cmp
pop
pusha
cmp
mov
cs
das
cmp
inc
xor
or
jg
insb
das
or
xor
lahf
xchg
dec
cmp
sub
pop
lds
cmp
sarl
pop
sub
inc
or
ret
mov
inc
and
inc
pop
test
jle
push
stos
push
xor
mov
fildl
dec
cs
das
std
lea
xlat
loopne
dec
cmp
ds
jp
loopne
imul
jg
out
fs
pop
pop
push
push
jl
mov
mov
pusha
jl
sub
dec
lods
je
push
sub
add
jnp
jns
inc
xor
cs
data16
mov
pop
sbb
pushf
inc
pop
fs
cs
sti
sbb
inc
inc
call
mov
push
mov
mov
addb
adc
iret
ret
pop
and
push
movsb
ret
add
cmp
mov
int3
int
xor
xchg
lcall
decl
xchg
mov
mov
std
add
arpl
fmull
sti
add
pop
out
fwait
lcall
repnz
pushf
into
xor
push
out
ja
insb
and
iret
or
outsl
jg
call
std
daa
inc
je
cmp
push
ss
decb
cmp
inc
push
outsb
shlb
add
aad
or
ret
ret
cmpb
inc
cmp
jmp
and
jmp
pop
and
pusha
mov
xlat
add
divb
ret
or
icebp
add
xchg
lret
in
ljmp
adc
mov
mov
mov
pop
sub
adc
pop
push
das
call
xor
pushl
lcall
xor
sbb
decl
sbb
lcall
xor
ja
lea
xchg
flds
mov
pushl
sub
jmp
push
decl
inc
dec
jmp
push
mov
pusha
outsl
sti
push
push
enter
xchg
mov
mov
jbe
das
push
test
sub
xor
and
je
pushl
push
cmp
das
dec
icebp
and
stos
je,pt
incl
aam
sub
push
cmpsl
sti
repnz
and
cs
call
cld
in
divb
add
adcl
add
jmp
sub
movsl
xchg
ja
incl
jbe
pushl
js
pop
mov
and
xlat
repz
mov
add
xchg
and
clc
adc
push
dec
cs
jg
sti
fldt
call
and
sbb
inc
fsubrl
outsl
xlat
xor
mov
dec
mov
call
in
fs
fildll
ja
jl
sub
and
push
sbb
pusha
stos
loopne
pop
movsl
pop
mov
inc
mov
iret
test
mov
decl
jg
ret
cs
aas
inc
ss
or
decb
mov
arpl
popa
or
pop
sub
incl
or
fiaddl
and
cmp
in
mov
sarb
or
push
and
call
dec
div
jle
pop
lods
pushl
enter
iret
ljmp
pop
test
lcall
and
les
and
sbb
pop
adc
stc
xchg
mov
cmpl
xchg
fcomip
jne
mov
add
ret
xchg
insb
push
pop
call
or
inc
and
and
outsb
add
pop
jns
push
inc
out
or
jle
es
push
mov
cmp
fcos
aaa
jle
sbb
cmp
sub
mov
mov
xor
cs
gs
xor
cmp
dec
ret
sub
std
call
call
jmp
outsb
jo
adc
sbb
cmp
pop
pushl
pop
outsl
xchg
mov
insl
sahf
mov
leave
test
ja
mov
xor
test
pop
ja
push
ret
call
jb
or
jle
test
jg
insl
shrl
cmp
into
je
pop
sbb
jmp
pushf
push
dec
xchg
mov
out
xor
push
xor
xor
decl
push
cs
test
mov
pop
xor
stos
xor
je
incl
xor
repz
sbb
ja
adc
xor
ficompl
popa
das
daa
mov
dec
mov
inc
cmp
jl
jo
stc
ja
mov
pop
pop
js
push
push
pop
jnp
adcl
xor
fldt
mov
lea
pop
outsl
jg
add
pop
cli
dec
pop
ret
and
testl
cmp
jbe
cwtl
inc
xor
xor
cs
jle
das
mov
stos
insl
scas
ds
or
insb
fildll
cwtl
xor
and
ret
imul
add
and
mov
subl
insl
jae
popa
inc
outsb
fistpl
andl
xchg
js
ja
insl
insl
adc
mov
aaa
mov
incb
shrb
jg
lret
aas
jge
add
jo
jbe
aas
inc
pop
cmp
imul
mov
push
cmp
mov
mov
inc
lcall
cmp
les
jbe
pop
adc
push
sbb
push
adc
jb
fdivrl
jp
lahf
add
cmp
in
sub
scas
mov
push
pop
jmp
jnp
imul
cmp
xchg
push
cmp
insl
pop
pop
jmp
lret
rcrb
add
sbb
inc
movups
pop
add
fidivs
jl
mov
xchg
fisubl
sbb
fwait
push
pop
outsl
xchg
mov
mov
jb
popf
dec
mov
push
cmp
sti
fucomi
dec
push
pop
int3
push
or
push
jmp
mov
cmp
cltd
add
inc
in
mov
mov
pop
dec
push
mov
mov
je
lcall
dec
jge
imul
jae
jns
xlat
arpl
inc
mov
imulb
sbb
push
es
idiv
enter
add
dec
mov
int
scas
mov
jbe
leave
pop
jnp
pop
mov
inc
jbe
dec
mov
push
adc
xchg
lret
push
xchg
ret
push
push
pushf
ds
push
and
pop
mov
popf
add
and
jb
lds
outsl
bound
ljmp
pop
inc
jp
jg,pn
gs
subl
cs
xchg
arpl
aaa
sub
xor
or
xor
ja
add
outsb
or
in
mov
popa
mov
pop
cmp
fnsave
ret
arpl
outsb
mov
push
movsl
call
push
add
mov
in
dec
sarl
add
sti
in
sub
add
add
aas
mulb
inc
sbb
push
test
mov
pop
pop
pusha
ret
pop
xchg
popa
out
lods
or
mov
lret
xchg
jp
push
fs
js
movsl
insl
iret
jge
xchg
pop
push
pop
es
and
push
xchg
sti
adc
pop
sbb
imul
mov
pop
roll
mov
data16
mov
xor
sti
mov
bts
mov
mov
xlat
mov
insl
push
xor
shrb
sarb
add
and
arpl
insb
in
dec
xor
inc
sub
imul
pop
outsl
jno
ret
insb
pop
pop
lret
pop
arpl
mov
outsb
pushl
xchg
pop
dec
push
inc
rclb
and
das
or
or
lods
stos
decl
lock
jg
jo
mov
or
pop
aas
cmp
mov
addb
push
mov
loop
jg
ja
dec
mov
jns
outsl
xchg
subl
inc
dec
fidivrl
ret
or
push
jecxz
add
clts
pop
mov
incl
jae
dec
andl
dec
xor
dec
cmp
cmpb
jo
lock
mov
incl
cld
push
jnp
addr16
pop
lods
xchg
mov
movb
lahf
arpl
add
push
ss
mov
sti
scas
mov
enter
fwait
ud1
popf
inc
sbb
cld
dec
sbb
mov
pop
sub
je
inc
jle
ja
dec
sub
arpl
pop
pop
adc
lret
popa
xchg
push
out
xchg
dec
aam
xchg
jp
cmpsl
sbb
jl
pop
xchg
pop
jnp
pusha
out
push
inc
push
mov
mov
mov
dec
inc
add
cld
mov
loop
sbb
mov
add
daa
and
xor
arpl
js
aas
xor
rclb
pop
inc
ret
mov
clc
outsl
mov
mov
cmp
mull
data16
xchg
icebp
cmpps
mov
mov
inc
jae
pop
jae
out
push
push
sbb
push
pop
xor
dec
xor
int
lcall
subl
pop
xor
push
sbb
test
fwait
add
mov
sti
push
insb
mov
and
ljmp
sub
shlb
sub
pushf
add
jb
add
les
insl
mov
imul
jnp
mov
add
dec
push
push
aaa
sub
xchg
jge
insl
mov
sbb
sarl
bound
push
lret
push
int
jecxz
pop
dec
pop
ret
fldl
mov
dec
addr16
pop
outsl
je
mov
popa
lahf
pop
pop
sbb
inc
cs
or
jns
cmpb
sub
stc
mov
xchg
xchg
cmp
cs
xchg
dec
out
dec
stos
js
fdivl
aas
dec
inc
xor
xchg
dec
int3
les
pop
in
in
inc
add
jbe
ret
jmp
adc
aaa
mov
pop
sti
aad
mov
je
cmp
mov
mov
mov
ret
bound
xchg
jl
insb
mov
jb
test
fldt
pop
mov
mov
and
and
inc
and
in
and
xchg
pop
outsb
aaa
test
mov
ss
stos
push
in
mov
fdivl
inc
dec
dec
add
lret
push
shll
sbb
xlat
add
and
sub
cmpsl
jae
je
push
cmp
inc
std
gs
jmp
push
mov
cmp
dec
dec
fs
andl
adc
xchg
pop
cmc
mov
mov
sbb
inc
push
dec
out
ud0
add
in
push
outsl
adc
or
sbb
push
ret
fdivrs
push
arpl
pop
scas
dec
jl
in
pop
dec
mov
inc
pop
push
incb
xchg
xchg
cmpsb
lahf
popf
push
repnz
or
mov
adc
cli
sarl
or
pop
cmp
pop
dec
arpl
cmpsl
insl
inc
lahf
inc
roll
in
push
cmp
xlat
outsb
ja
rcr
addr16
pop
or
pop
iret
or
inc
decl
xchg
das
mov
mov
sbb
cmp
outsb
mov
xchg
ficomps
loop
mov
insb
and
insb
xchg
outsb
aaa
repz
shll
enter
push
push
dec
fsubrl
cltd
dec
pop
movsb
xchg
stos
mov
mov
add
mov
inc
add
sbb
inc
fcmovu
and
push
pop
pop
dec
in
adc
mov
dec
xchg
dec
ret
push
mov
sbbl
pop
push
xorb
sbb
dec
dec
xlat
push
add
sti
push
adc
iret
mov
pop
dec
jecxz
pop
jmp
mov
jno
loopne
add
push
pop
mov
dec
mov
call
mov
sti
lret
jecxz
push
push
jle
jg
add
jae
inc
mov
ret
jae
sub
lods
mov
test
mov
xchg
pop
xlat
test
inc
dec
ret
imul
pop
shll
pop
pop
inc
cmpsl
push
mov
cmp
divb
jne
jmp
dec
iret
jo
fisubrl
mov
fs
push
jno
sarb
mov
rcl
in
lods
das
movl
clc
and
cs
add
mov
lcall
pop
lea
jnp
and
jb
popa
jg
dec
fildll
dec
mov
insb
mov
addr16
mov
das
jp
imul
add
push
inc
inc
jmp
mov
outsb
pop
fwait
test
fwait
out
inc
mov
fst
jecxz
xor
push
dec
or
fbstp
or
outsl
dec
xlat
sub
mov
sti
idiv
xchg
js
stos
out
ljmp
or
incl
add
mov
lret
ss
or
inc
inc
bnd
cmp
das
or
ds
addr16
mov
ret
push
pop
inc
pop
ja
fldt
movsl
gs
jbe
jbe
xor
cmp
mov
rcr
bound
sbb
push
pop
fistpl
fsub
imul
call
jg
nop
jmp
xor
mov
and
call
adc
mov
out
add
mov
scas
or
or
mov
xorl
sub
cmp
outsl
pop
outsb
aaa
jg
and
push
aaa
adc
dec
mov
mov
push
and
push
pop
adc
sbb
push
or
les
ret
pop
dec
xor
cmp
in
mov
add
out
pop
pop
loopne
pusha
lret
shlb
out
daa
ja
add
mov
mov
adc
inc
unpckhps
ret
or
mov
lods
push
insb
push
cli
and
xlat
sub
xchg
das
test
cs
cmp
cmpsl
jp
in
inc
imul
cmp
je
sbb
adc
cli
pop
xor
out
lcall
fbld
pop
pop
dec
xor
das
arpl
jo
outsb
mov
add
stc
or
sub
and
arpl
sub
and
adc
and
outsl
clc
lock
ljmp
xchg
xor
add
pop
jnp
cmp
aaa
pop
js
or
xor
pop
ret
aas
and
imul
sbb
pusha
push
sub
add
mov
add
or
or
mov
out
xor
jg
and
mov
xor
aaa
inc
mov
call
outsl
inc
stos
fmul
pop
loope
loope
xchg
jnp
sbb
or
je
cmp
aas
test
mov
or
sub
and
in
idiv
sub
sbb
jecxz
lods
outsb
xchg
xchg
mov
push
jb
outsl
mov
fstl
lahf
mov
or
stos
fcmovnb
int
cld
lcall
lock
adc
mov
inc
add
fistpll
xchg
insl
outsl
std
jl
pop
std
xor
sbb
xchg
add
xchg
mov
mov
jecxz
push
xor
and
ret
sub
mov
mov
rorl
xchg
ja
or
xchg
inc
cmp
mov
push
outsb
xchg
int3
pop
mov
jl
shl
xchg
orl
outsb
cmp
jo
outsl
jbe
outsl
outsl
mov
arpl
pop
movsb
cli
xor
icebp
mov
mov
mov
dec
pop
dec
dec
ret
mov
add
mov
push
mov
xchg
jecxz
add
xchg
das
fsubr
xchg
push
shrb
dec
jp
mov
fildll
fstl
stos
stos
xchg
mov
test
ret
fwait
mov
dec
mov
mov
sti
je
ret
jo
addr16
mov
push
js
xchg
xchg
lcall
lock
dec
movsb
in
imul
pop
pop
pop
repnz
jecxz
sub
insb
imul
outsl
add
add
jg
ret
iret
push
aas
dec
dec
cmp
repz
push
fisttpl
or
pop
xchg
mov
das
emms
test
mov
fwait
ja
sbb
and
jnp
mov
push
test
addb
insl
dec
faddl
sub
pop
scas
testl
scas
xlat
mov
in
lods
mov
cmpl
push
xchg
in
mov
mov
pop
jp
mov
stc
ljmp
dec
jb
stc
xor
repz
popa
or
loope
push
pop
outsb
dec
lea
add
mov
je
fbstp
jmp
mov
jge
mov
leave
out
add
out
ljmp
test
and
insb
sub
pop
mov
movsl
xlat
orl
mov
test
call
mov
mov
pop
dec
pop
insl
jecxz
ret
fdivrs
add
repnz
inc
das
mov
enter
sub
fildl
mov
xlat
and
mov
lods
fisttpl
mov
shlb
aas
popf
jmp
or
sahf
mov
mov
and
aam
jg
in
fidivl
mov
hlt
bound
xor
add
fstl
fidivrs
inc
bound
cld
mov
jg
loope
xchg
std
fistpll
xchg
lcall
sahf
fsubrl
mov
ljmp
xor
jae
ret
xchg
int
jnp
insl
mov
jbe
pushl
pop
je
cmpsl
fcompl
negb
fwait
lret
mov
in
mov
cli
jmp
stc
ret
fcmovb
movsl
sbb
lret
das
jnp
sarl
push
jecxz
xlat
ret
jno
push
jne
roll
test
in
gs
dec
jns
pop
adcl
cmpb
lds
pop
sbb
mov
jge
call
icebp
jo
jbe
cmc
cmp
subps
dec
ss
scas
xor
mov
mov
pop
cli
pop
jbe
or
sbb
sbbl
in
pop
ja
cmpsl
jo
jecxz
outsb
mov
subl
xlat
push
jnp
sub
jle
shlb
add
sahf
mov
mov
dec
fcmovu
frstor
sbb
lret
stos
ja
jae,pn
jbe
movsl
jnp
out
xchg
mov
fdivr
pop
mov
incb
mov
sub
das
cmp
mov
mov
fstpl
inc
push
dec
jae
arpl
icebp
outsl
fucom
mov
xor
jmp
xor
xorl
jecxz
shrl
xor
lcall
and
push
adc
pop
sub
pop
push
clc
out
and
or
xor
repnz
push
mov
mov
lods
pop
fucom
xchg
mov
xchg
jae
std
sbb
addl
mov
in
pop
adc
jnp
mov
cmpl
test
outsb
outsb
mov
push
addr16
aas
jecxz
mov
pop
or
add
add
jnp
mov
mov
out
out
or
mov
repz
shll
icebp
jmp
cld
js
jmp
add
add
mov
add
dec
or
cltd
hlt
pop
mov
sub
cmp
jae
sub
mov
xorb
xchg
sbb
scas
mov
mov
jg
sti
xor
xchg
lea
add
xor
daa
inc
and
dec
add
cmpb
push
dec
aam
fisttpll
push
and
nop
lds
xchg
sbb
fsts
leave
ret
test
frstor
adc
cmpsb
outsl
jb
adc
int
inc
insl
adc
push
aad
pop
push
or
adc
loopne
mov
mov
push
push
or
mov
imul
lcall
arpl
mov
mov
mulb
push
dec
cwtl
test
push
sti
das
pop
cmp
push
sbb
outsl
jae
imul
inc
outsl
jo
daa
fs
div
dec
outsl
fs
dec
popa
xor
and
sahf
and
in
jbe
outsb
lods
outsl
jbe
push
add
add
imul
mov
add
lods
adc
mov
push
popa
insb
jne
les
inc
adc
fstl
aad
dec
gs
sarl
setle
sbb
mov
jae
push
popa
xchg
inc
inc
xchg
jae
lds
rcrb
or
cmp
aas
mov
outsb
inc
aas
and
or
pop
jae
in
rsm
in
inc
inc
push
adc
in
mov
push
popa
push
cmovo
fs
inc
push
adc
mov
adc
inc
push
push
mov
inc
push
xor
inc
inc
add
pop
outsb
jo
call
xor
inc
pop
fldcw
jbe
dec
popf
inc
pop
xchg
cmp
pop
jecxz
push
jno
pop
dec
dec
test
add
mov
adc
js
push
jp
sbb
add
test
adc
pusha
arpl
or
xor
fdivs
aas
ss
movsl
arpl
xor
add
arpl
cli
push
popa
addr16
xor
test
inc
imul
inc
fistps
lods
pop
and
push
pop
dec
pusha
sub
test
into
mov
adc
mov
push
movb
lret
push
insb
cmp
xchg
fimuls
inc
inc
cwtl
test
xchg
sub
inc
stos
ja
cltd
inc
and
inc
mov
jo
data16
pop
xchg
popf
push
mov
notl
inc
inc
add
pop
iret
fisubrl
jge
xor
push
repnz
cmp
xor
dec
xor
push
dec
xor
int3
dec
call
mov
cmc
sbb
jo
xor
sub
je
push
imul
ds
sbb
pop
mov
push
insl
std
int
aaa
adc
data16
push
jo
jb
adc
push
popa
sbb
out
add
pop
sbb
je
push
or
movsl
adc
xchg
int3
or
push
pop
arpl
mov
rcr
imul
cmp
lods
shll
in
jae
jnp
leave
push
movsb
daa
insl
sbb
mov
data16
sbb
stos
idiv
in
fs
je
imul
xor
notl
mov
or
sub
adc
imul
mov
loope
pop
push
jo
dec
push
pop
xchg
dec
sub
dec
mov
xchg
adc
test
sbb
test
das
or
test
xchg
push
and
push
add
fldt
sbb
aaa
add
jbe
xor
out
pop
lea
mov
popa
cmp
xor
loop
popf
or
and
jae
sub
mov
das
sbb
add
sub
outsl
nop
mov
push
or
fiaddl
scas
adc
jb
sub
adc
mov
or
add
inc
lret
mov
movsb
push
inc
dec
adc
mov
mov
shlb
sidtl
add
or
adc
pushf
add
inc
flds
pop
pop
sbb
add
sti
mov
mov
and
pop
push
add
outsb
iret
idiv
mov
cmp
cmp
fldt
dec
insb
out
ljmp
ja
fcoms
jmp
and
inc
jb,pn
pusha
xchg
popa
sti
push
pop
jp
sbb
lret
mov
shlb
daa
popa
mov
insl
rorb
add
lock
ret
fcmove
fiadds
dec
sub
lret
or
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
