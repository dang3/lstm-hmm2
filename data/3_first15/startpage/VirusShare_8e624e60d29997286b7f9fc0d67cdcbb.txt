mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
scas
jle
push
inc
scas
clc
int3
jmp
and
or
pop
pop
mov
adc
add
mov
loop
fistpll
inc
movaps
add
and
iret
or
or
dec
lret
in
mov
dec
rcrb
call
mov
cltd
push
pop
xchg
xor
inc
jl
inc
adc
jp
push
lods
lret
sub
sbbb
xchg
lock
push
sub
and
cltd
popa
popf
mov
fidivl
xor
cmp
pop
and
inc
lret
pop
push
dec
jg
jmp
popf
aaa
rcl
int3
daa
jg
sti
cli
js
sbb
ja
mov
scas
cmp
mov
outsl
in
repz
mov
loop
xchg
mov
mov
sub
dec
lret
mov
add
out
mov
pop
jnp
jmp
xor
sbb
xlat
xchg
push
cltd
cwtl
dec
arpl
add
jmp
das
cwtl
xor
and
aas
sbb
inc
pop
inc
int
jns
popf
dec
sti
dec
jp
fisubl
jecxz
fiaddl
and
mov
in
mov
loope
idivl
lahf
scas
xchg
dec
jbe
frstor
add
icebp
inc
sbb
in
lea
jae
jae
and
mov
movb
jne
mov
pop
push
mov
cmp
sbb
dec
mov
lret
add
sub
mov
repz
lret
add
dec
lds
rcll
sbb
inc
sub
pop
sti
sub
in
bound
cmp
idivl
sti
and
clc
std
push
mov
gs
xchg
sub
and
cltd
loopne
or
mov
mov
adc
add
cmp
cld
add
mov
cmp
and
ffree
pop
sti
lcall
int3
xor
mov
in
shll
mov
subl
test
add
xor
imul
imul
xor
cs
popa
inc
xchg
ljmp
xor
insl
or
mov
pop
rclb
mov
jle
push
pop
scas
adc
out
loop
scas
inc
sub
mov
inc
jge
gs
js
sbb
sbb
dec
test
test
or
cmp
cmp
fs
scas
add
jnp
shll
cmp
sti
inc
int3
mov
xor
push
lock
jo
popf
pop
push
adc
push
xchg
bound
adc
je
sbb
mov
mov
addb
fs
and
adc
xchg
or
std
add
xor
jge
jg
jp
rorl
push
pop
or
add
add
es
mov
or
sub
ss
cmp
test
mov
fs
push
andb
inc
outsb
dec
jge
mov
in
in
inc
sbb
dec
movaps
arpl
outsl
mov
bnd
xchg
sbb
xlat
mov
pop
sub
lds
fldt
and
xchg
pop
mov
mov
xor
rol
mov
adc
gs
add
rorl
test
es
cmp
mov
inc
repnz
stos
or
ret
in
gs
or
into
test
clc
adc
fdivrs
push
mov
lea
lds
inc
sbb
jns
into
xorb
push
pusha
dec
sarb
fwait
xchg
mov
ja
call
and
jb
js
cmp
mov
scas
fcmovu
sub
sarl
add
daa
or
sub
shll
data16
jl
xchg
cli
jne
js
stos
xchg
aaa
addl
das
loopne
sbb
test
js
loop
imul
or
stos
xor
fistps
loope
sub
pop
incl
aad
cli
inc
xor
stos
sbb
jo
fisttpll
sub
xchg
fistl
or
cmp
adc
scas
std
je
sub
std
iret
sbb
mov
sub
cli
cs
push
mov
fs
leave
push
aaa
sbb
mov
jmp
sub
jp,pn
movl
mov
je
or
test
in
int
jp
popa
lcall
xchg
and
cs
mov
cmp
loope
push
notb
cmp
mov
pop
mov
cmp
out
sahf
mov
dec
lahf
stos
lcall
je
ret
dec
into
les
shll
lods
nop
push
xlat
adc
or
cmp
or
orb
push
inc
repz
test
mov
and
into
int
pop
or
aam
ret
out
out
sbb
sbb
mov
imul
sub
call
out
push
add
push
pop
sub
push
stos
or
lods
aad
jbe
shlb
add
mov
stos
or
inc
pop
push
test
xlat
out
cltd
subb
test
and
jle
xor
push
adc
test
fldl
fs
dec
xor
add
fsts
ret
notb
jmp
xor
lret
popaw
sbb
stos
jb
adc
imul
pop
push
js
xchg
movsb
and
jb
out
pop
xchg
inc
push
fldl
or
cmp
aas
testb
jno
shlb
xor
mov
or
inc
mov
cli
aam
jns
out
push
pop
mov
fimuls
inc
push
push
and
jae
jno
sub
sbb
outsl
mov
inc
sbb
lret
lret
repnz
inc
cwtl
sbb
fs
cmp
inc
jb
cmp
test
xchg
in
addr16
add
adc
or
mov
mov
dec
in
ret
idivb
stc
dec
sahf
sarl
push
fists
push
sti
pop
mov
loop
js
lds
pop
jno
mov
xor
jnp
pop
xor
adc
mov
ret
cwtl
jecxz
roll
leave
out
fdivl
jp
shll
mov
dec
nop
shlb
sub
xor
inc
mov
clc
or
dec
in
adc
jnp
outsb
push
stc
xchg
aas
push
je
jmp
movsb
mov
jge
sbb
ljmp
jecxz
mov
mov
je
test
addr16
mov
cli
and
dec
divb
push
shrl
push
cmp
push
cwtl
fisttpl
xchg
add
filds
cmp
dec
inc
fs
movsb
xchg
add
mov
movsb
pushf
pop
mov
das
jns
xchg
test
jbe
xor
add
cmp
rcrb
ss
mov
jecxz
lods
stos
mov
and
les
int3
out
jle
ss
loope
lock
cld
lret
mov
jge
fistpll
out
inc
aas
adc
test
xor
pushf
push
mov
cmp
push
xchg
fsts
aam
adc
mov
stos
push
jne
mov
lcall
sbb
push
gs
out
add
and
xchg
movsb
pop
shrl
pop
into
mov
xchg
test
and
test
or
adcl
fnsave
push
xorb
les
xchg
sub
out
inc
adc
dec
sub
loop
cmp
inc
loop
pushf
mov
test
test
das
and
aaa
mov
les
les
ficomps
cmc
shlb
daa
addr16
popa
clc
hlt
xor
cmp
shll
xchg
inc
outsb
pusha
adc
loop
nop
dec
mov
dec
mov
test
inc
xor
test
cmc
mov
xlat
out
dec
dec
aaa
sbb
aad
mov
jl
hlt
mov
add
sarl
nop
int
pop
lock
push
inc
ret
mov
inc
dec
sbb
lahf
mov
sbb
into
xchg
negl
jle
pop
jle
jbe
je
dec
xchg
shrl
jmp
cmp
shrl
sbb
scas
xchg
add
adc
in
pop
jno
lods
clc
and
xchg
lds
out
and
pop
mov
xchg
in
lcall
ds
dec
push
inc
jae
rorb
js
and
sbb
scas
popa
aas
pop
lahf
sub
popa
das
bound
and
lret
inc
mov
int
mov
jae
ja
push
mov
jmp
fmul
inc
jo
leave
outsl
jns
or
leave
adc
dec
popf
js
in
int
addr16
xor
cmp
mov
cli
pop
sbb
mov
jecxz
xorb
jmp
mov
mov
jecxz
fstl
dec
popa
ljmp
cmpsb
add
or
arpl
lahf
or
cltd
jl
or
mov
mov
xor
sbb
shll
cmpl
cli
jge
sub
push
pop
or
lret
test
loope
adc
jg
aaa
xchg
mov
inc
inc
in
ficoml
inc
daa
nop
test
daa
mov
lods
pop
loop
outsl
stc
and
xor
xchg
ljmp
leave
popa
scas
out
imul
sbb
clc
sbb
lret
sti
test
andl
jecxz
mov
dec
jmp
out
or
jmp
loopne
dec
adc
or
jl
jl
dec
shl
inc
fists
jnp
jle
sbb
jns
adc
xlat
add
lods
into
rol
popa
add
jg
and
jo
cmc
icebp
sbb
and
lods
mov
and
pushf
pop
mull
mov
jb
insl
mov
cld
out
fcoml
adc
icebp
rcr
sbb
test
push
sbb
fdivrs
xlat
pusha
das
sahf
jecxz
mov
sbb
fcoms
xchg
data16
andl
xchg
adc
imul
call
cmc
push
int3
cmp
enter
out
inc
dec
adc
add
fwait
push
idivb
adc
out
sub
push
mov
inc
lret
addb
lods
jp
xchg
dec
roll
pop
dec
xchg
adc
mov
shrb
addl
lahf
mov
movsl
or
push
lock
pop
in
dec
dec
dec
sub
dec
sub
cmp
insb
pop
icebp
dec
scas
mov
adc
loop
fdivrs
mov
sbb
sbb
mov
loope
or
imul
insl
cmp
cmp
push
scas
imul
leave
jae
das
out
test
mov
popf
mov
shr
push
cmpsb
jecxz
inc
mov
mov
scas
dec
and
sbb
dec
mov
or
xchg
add
loop
push
daa
mov
fdivs
add
and
mov
jmp
call
xor
jno
in
adc
ret
aam
cs
pop
hlt
loope
rorb
and
int3
jbe
mov
in
dec
pop
mov
nop
pop
dec
popf
pop
pop
xor
pop
repz
out
in
jg
in
stos
jl,pn
adc
loop
adc
mov
lahf
inc
push
sbb
clc
jg
cli
push
lods
test
scas
mov
and
push
push
int3
mov
pushf
cmp
adcl
add
fimull
jbe
pusha
inc
xor
and
arpl
inc
xor
adc
push
icebp
add
cmpsb
shll
adc
ret
icebp
outsb
sub
and
mov
scas
push
push
cmpsl
js
pop
and
mov
outsl
dec
ja
jnp
pusha
xchg
cmpb
test
clc
sbbl
dec
in
outsb
cs
mov
repz
sub
sub
cmpl
cmp
jp
sub
sub
jmp
jl
mov
scas
int3
and
shll
xor
shrb
and
sub
fldl
icebp
imul
mov
jge
push
or
mov
rol
jns
cmp
jmp
jecxz
xor
decl
cmp
cmp
aad
les
mov
sub
or
add
scas
lret
inc
cmp
ja
test
and
sti
mov
cmc
dec
out
rcrb
cmp
pop
and
and
fdivp
push
push
idivl
or
out
push
jl
cmp
sbb
jns
repz
xchg
push
xchg
cmpsl
loopne
dec
xor
mov
ljmp
or
in
mov
xor
insl
cld
scas
ret
dec
xor
sub
decb
and
addl
mov
jp
mov
xchg
adc
rorl
and
adc
mov
inc
xor
jge
clc
or
cwtl
cmc
lds
push
sbb
xor
lahf
ss
or
mov
adc
push
inc
lahf
inc
mulb
push
outsb
sub
enter
inc
out
jno
popa
push
jne
jnp
out
xor
out
outsl
add
pop
jnp
cmp
push
push
mov
inc
add
sub
and
cmpsl
aad
cwtl
cld
and
xchg
ljmp
cld
or
mov
popa
loopne
mov
pop
mov
pop
push
lods
test
icebp
orb
insb
test
stc
sahf
jg
scas
and
in
adc
movsl
pop
jno
mov
xchg
dec
pop
daa
das
xchg
scas
sub
jbe
cmp
notb
fucomi
cwtl
fwait
je
push
or
cmp
arpl
sub
and
sub
pushf
out
gs
insb
sub
jl
test
pop
cmpsl
xchg
cmpsl
js,pt
pop
fsts
scas
sub
pop
insb
push
mov
mov
lret
and
shlb
pop
rcll
sti
icebp
xchg
push
add
or
out
div
sti
pusha
fisubl
jl
in
pop
fwait
rolb
sub
nop
xor
out
fbstp
mov
mov
enter
outsb
push
pusha
mov
ljmp
push
std
pop
xchg
add
or
pop
sub
jae
ljmp
jns
mov
cmp
nop
xorb
mov
mov
jmp
outsb
push
inc
lret
sub
aad
add
jg
mov
mov
ret
adc
jb
mul
adc
fldl
loopne
dec
cwtl
or
jecxz
outsl
leave
out
push
add
jo
sti
push
sbb
roll
lcall
push
seta
cmpsb
mov
mov
mov
mov
shl
fnstenv
popf
xlat
push
arpl
repnz
mov
sti
mov
jne
mov
mov
fdivrl
roll
xchg
lahf
inc
gs
and
pop
shll
enter
movsl
hlt
add
inc
dec
xor
jb
cmc
nop
pop
add
ffreep
push
mov
sub
or
mov
mov
cli
adc
mov
call
xor
mov
fidivl
mov
ljmp
fwait
dec
movsl
inc
mov
aad
insb
idivl
or
mov
sbb
mov
test
jecxz
cs
dec
add
adc
lock
test
fimull
mov
mov
std
push
sbb
ffreep
adc
and
push
call
and
xor
push
lods
bound
mov
mov
xor
out
mov
imul
in
mov
mov
add
gs
gs
nop
mov
jne,pn
cld
dec
sbb
xchg
subb
lret
or
or
sti
aaa
adc
orl
fsubrl
test
pusha
test
mov
mov
fcompl
cmp
rcll
jne
int3
adc
xor
add
cmp
negl
pop
fidivrl
mov
nop
out
dec
push
jl
xchg
out
out
mov
lds
mov
or
addb
or
mov
inc
inc
dec
shrb
mov
mov
outsl
jne
adc
cmpsl
aas
mov
cmp
jnp
bnd
inc
dec
shl
lds
imul
lea
or
mov
mov
popf
pop
lahf
mov
jge
sarl
mov
in
adc
nop
jmp
lcall
fisubrs
inc
ljmp
daa
push
addl
aad
mov
aaa
mov
dec
pop
mov
sbb
sbb
add
rcr
pusha
add
aam
pop
cltd
out
aam
sbb
adc
and
lahf
and
push
xchg
ja
mov
jl
pusha
xchg
fistps
sbb
cs
or
xlat
pop
mov
iret
dec
xchg
xchg
push
xchg
cli
imul
jns
push
mov
sti
pop
mov
lret
sbb
adc
inc
sbb
adc
lods
xorb
jge
cltd
jo
pusha
jle
push
repnz
dec
inc
adc
jb
out
xchg
stos
das
cmpsl
stos
dec
jle
and
leave
insl
jns
test
mov
iret
xchg
add
loop
dec
sub
or
mov
and
xchg
shrb
inc
in
inc
cmp
cmpsl
divl
push
icebp
xchg
fs
sbb
push
stos
and
add
pop
jmp
mov
adc
fdivrs
out
inc
cs
push
cld
in
sbb
lock
cmp
push
sbb
jl
ret
jp
stos
push
roll
mov
fldenv
pop
xor
mov
jne
aad
and
out
stos
jo
repnz
mov
aas
xor
bndldx
fadds
pop
xchg
cmp
xchg
test
cli
sarl
push
in
pop
mov
les
cli
xchg
stos
call
stos
test
hlt
test
out
lds
dec
shl
push
xchg
pop
nop
aam
stos
adc
ror
sbb
lret
enter
fcmovne
popa
adc
sub
xorl
cld
xor
and
cs
xchg
xor
sbb
and
push
mov
test
movb
jno
xchg
sub
push
pop
push
or
adc
adc
or
mov
rcrl
filds
fimuls
xor
fldcw
in
divl
xlat
dec
push
inc
mov
and
sti
fs
fsubl
arpl
jnp
xchg
in
add
adc
xchg
pop
test
jge
cmp
stos
pusha
pop
in
add
fmuls
sbbl
sub
in
sub
movsl
jge
pop
outsl
and
pop
push
lahf
push
gs
jmp
cwtl
clc
inc
push
mov
dec
loope
nop
daa
push
xchg
mov
push
cwtl
pop
cmp
int
sbb
jge
cmpsl
xor
mov
sbb
popa
xchg
cltd
je
ror
insl
xlat
incl
cs
mov
pop
xlat
fildl
mov
mov
std
shrb
cmp
mov
shlb
pop
sbb
lock
adc
or
inc
xlat
and
cmp
jge
jmp
add
mov
sbb
cmp
pop
mov
jb
mov
xchg
xor
inc
adc
pop
les
outsl
arpl
add
xor
pop
ja
mov
daa
dec
push
imul
stc
mov
xor
nop
push
xor
fmuls
push
sarb
dec
jb
mov
mov
jno
jg
popf
insb
outsb
sub
outsb
jmp
flds
icebp
fs
jl
nop
in
mov
frstor
inc
mov
lret
xor
jno
jecxz
cwtl
push
das
mov
xchg
loopne
dec
or
repz
jmp
stc
icebp
add
sub
dec
lahf
xor
arpl
sub
and
aaa
in
jle
dec
lcall
mov
sub
mov
clc
dec
xlat
mov
test
mov
xchg
sub
xchg
jb
lret
mov
sub
xor
add
sub
add
or
mov
repz
test
mov
sti
add
cmc
fdivs
sbb
push
adc
jle
dec
data16
scas
adc
dec
pop
adc
insb
jb
pop
cwtl
int
cltd
enter
mov
lret
jmp
push
xorl
loop
dec
mov
dec
cltd
xor
jae
cmp
adc
jecxz
push
inc
sub
sahf
jp
xor
xchg
inc
ret
jo
mov
in
fs
cs
or
inc
int3
imul
insb
push
jnp
add
push
inc
push
popa
adc
pusha
arpl
or
mov
push
cli
icebp
adc
push
ss
dec
add
shrl
or
imul
leave
push
push
push
and
es
aad
cmpsb
inc
jnp
insb
cltd
mov
inc
add
jbe
shl
cmpsb
cs
mov
adc
lret
sahf
push
push
mov
jno
push
and
int
xlat
and
lds
dec
xchg
dec
icebp
repnz
fsubrp
mov
adc
adc
jecxz
lds
aam
jp
sub
test
out
insl
sbb
pushl
pop
inc
jne
hlt
test
mov
int
sbb
ret
cmp
cmp
nop
jge
arpl
fsubrl
lret
mov
mov
lret
sub
pop
and
call
push
dec
xor
adc
jcxz
mov
jecxz
fistl
movsb
push
xchg
mov
jmp
aaa
rol
jp
lods
adc
mov
mov
sbb
adc
and
mov
and
add
pop
adc
and
xchg
loopne
inc
dec
insb
insl
roll
mov
sub
adc
sahf
inc
adc
ja
cld
lds
add
inc
mov
cltd
xchg
xor
mov
icebp
in
clc
outsl
mov
lods
add
stos
pop
pop
mov
pusha
imulb
es
jne
lock
imul
pop
repnz
sub
popw
stos
pusha
jle
push
in
hlt
jg
stos
sub
or
insb
xchg
leave
cs
pop
rcll
mov
clc
push
rclb
imul
dec
in
sub
and
inc
out
cmp
mov
mov
fstpl
sbb
xor
movsl
sub
or
ficoml
xlat
popf
lret
sub
lods
inc
xchg
push
xchg
repz
add
test
add
push
sbb
pop
sub
ficoml
jns
mov
pop
shll
das
aam
sub
out
jno
lea
gs
and
push
addr16
xor
roll
int3
lahf
inc
xchg
rep
shr
fsubs
fwait
out
popa
or
pop
cli
mov
push
mov
jecxz
xchg
lcall
mov
shrb
or
leave
ss
pushf
pop
xchg
les
pop
xor
cmpsl
jp
adc
loopne
adc
mov
mulb
xor
xchg
outsb
pop
lock
inc
xchg
push
add
dec
lea
push
shrb
int3
movsb
pusha
in
or
inc
jmp
stc
mov
push
movsl
shll
jno
int3
dec
cmp
ret
pop
je
mov
lret
dec
push
fmull
pusha
sub
dec
and
loopne
data16
cli
stc
fsubl
and
mov
or
pusha
shll
es
aaa
fdivl
std
out
stos
or
adc
sahf
dec
lret
jno
mov
pop
shrb
xchg
clc
aam
lahf
imul
jle
scas
fadd
shl
jecxz
lods
fdivs
cmpsb
into
mov
fs
cmp
cli
loopne
xchg
in
dec
inc
ja
sarb
sub
add
add
xchg
inc
dec
pop
ss
jae
movsb
cs
or
jnp
lcall
outsb
inc
rcr
lods
pop
add
fs
outsl
cs
fwait
arpl
movsl
fldt
and
and
js
inc
inc
ret
cmc
adc
mov
pop
mov
fwait
jp
and
sub
push
mov
sahf
arpl
aam
out
jb
aas
push
jp
jns
std
fwait
mov
popf
inc
push
test
dec
xlat
inc
ficoml
fildll
je
jnp
movsl
dec
xor
rcrl
mov
jns
mov
push
mov
cmp
cmp
enter
or
jle
xchg
dec
js
lahf
out
mov
je
jg
pop
fcompl
fucomip
push
mov
aaa
mov
into
stos
sbb
leave
xchg
pop
and
fs
hlt
pusha
pusha
push
push
adc
sbb
lahf
xor
cmp
in
stos
jp
dec
jb
fsubr
sbb
pushf
and
jg
insb
pop
xor
xor
push
and
add
fs
pusha
iret
pushf
ud0
and
leave
sub
sbb
cmp
inc
daa
inc
push
jmp
xchg
sub
fld1
frstor
scas
xor
jge
sbb
loope
mov
mov
gs
inc
lods
cmpl
leave
mov
fsts
mov
cmp
jmp
daa
pop
int
dec
jge
das
in
pop
lret
sub
and
adc
pusha
iret
dec
popa
add
cld
sbb
js
dec
and
cmp
ret
int
and
jp
xchg
loope
xchg
out
cli
xor
sub
mov
mov
imul
push
adc
jmp
jnp
xchg
xchg
add
inc
das
inc
mov
mov
mov
sbb
cmp
add
xchg
cs
int3
fcomps
mov
jne
divl
rorb
loop
xchg
inc
hlt
out
pop
push
arpl
sahf
arpl
mov
pop
orl
gs
ret
xchg
inc
cmp
stc
mov
sbb
push
andb
push
lahf
sbb
mov
xor
int3
lock
testb
notb
shll
xchg
aad
mov
or
inc
jns
aam
dec
jmp
or
push
pop
fwait
scas
pop
pushl
push
push
enter
js
inc
pushf
adc
add
sbb
sub
test
jecxz
pop
push
lea
xchg
outsl
loop
decl
lahf
cmpsl
mov
insl
lds
in
sarl
push
and
sub
dec
push
repz
lahf
dec
repz
dec
jmp
dec
or
insb
xchg
out
push
aad
xchg
lcall
xor
aas
xchg
hlt
add
mov
cltd
ret
push
xchg
fisubrs
fs
cmp
push
and
incb
xchg
aam
push
push
add
xchg
in
in
mov
inc
or
cmp
sbb
push
pop
ret
je
mov
pushf
cmp
addr16
mov
inc
fdivl
sbb
mov
dec
jno
adc
adc
pop
fldcw
sahf
subb
xchg
std
movsb
rcrl
icebp
inc
ret
scas
mov
bound
mov
add
inc
out
into
inc
jo
pushf
jno
cli
arpl
mov
sbb
mov
jp
mov
shll
in
scas
push
mov
fstl
mov
inc
and
mov
ret
stos
mov
fisttpll
xor
decb
dec
shll
mov
pop
out
dec
mov
ret
inc
imul
mov
xchg
fcomps
repnz
dec
ficompl
insb
add
and
and
mov
xor
inc
aas
ret
enter
cmp
mov
popf
push
cmpsb
fstps
push
dec
cmp
xchg
jo
fstpt
out
pusha
xor
shlb
mov
or
movsl
sub
and
loopne
mov
jns
dec
pop
stos
jb
mov
daa
das
push
add
loopne
mov
shll
into
pop
test
push
repnz
cmp
shr
xchg
jecxz
inc
cmpsb
call
inc
enter
push
mov
xor
dec
pushf
shl
aad
es
rclb
pusha
ds
xor
mov
inc
xchg
mov
cwtl
mov
data16
aaa
popl
pop
or
mov
mov
mov
xchg
add
gs
in
iret
int
loope
notb
mov
out
push
nop
loopne
and
xchg
subb
and
inc
ret
xor
lds
sub
test
lret
sahf
inc
les
je
inc
pop
cmp
cwtl
mov
xchg
mov
ret
mov
shlb
aad
shlb
add
pop
lods
insb
inc
xchg
sub
sub
test
sbb
dec
pop
jp
rorb
jge
lods
test
sbb
aad
les
inc
std
jp
jb
mov
sbb
std
dec
inc
addl
cvtdq2ps
mov
fbld
or
bound
adc
std
pop
sahf
imul
lods
fisttps
jg
pop
jle
daa
push
sbb
out
jle
cld
jae
icebp
xchg
lea
pop
mov
fstpl
inc
bound
lds
inc
sub
sbb
or
push
inc
pop
xchg
out
data16
clc
mov
push
sub
js
and
cmp
fdivr
mov
icebp
inc
push
jo
js
cmp
or
int3
fs
mov
cmp
jbe
mov
mov
push
lods
or
in
and
cmc
dec
sahf
cs
stos
out
lahf
lea
pushf
jns
mov
inc
xor
aam
test
mov
ss
jecxz
and
clc
cmp
and
sub
or
cmp
repz
xor
das
xchg
test
cmc
sbb
fcmovnbe
mov
pusha
shl
dec
sub
adc
sbb
xlat
adc
mov
push
xchg
mov
sbbl
mov
push
cmp
jae
pop
inc
mov
imul
sbb
mov
into
sbb
mov
icebp
outsl
or
cli
inc
insl
and
adc
add
lds
push
sbb
sahf
mov
jo
mov
pop
addr16
push
push
repnz
and
sti
repz
ret
nop
add
clc
mov
push
jg
daa
xor
sbb
and
jl
lods
and
inc
adc
mov
push
stos
push
jns
fdivs
mov
and
xchg
out
lahf
dec
xor
mov
pop
pop
inc
pop
xor
inc
adc
and
cmp
jb
dec
xchg
mov
cmc
adc
cmc
outsl
das
lret
scas
inc
push
push
sbb
adc
adc
pop
popf
cmpsl
and
mov
popf
mov
out
sub
xchg
mov
add
mov
push
aam
fildll
jle
pop
imul
mov
fsts
dec
push
mov
jb
pop
or
pop
or
inc
fisubrl
fs
sbb
sti
pop
mov
clc
add
cmpsb
mov
cmp
fwait
dec
clc
mov
jp
or
adcl
loope
cmpsb
ja
dec
sub
lods
cmp
xchg
cmpsb
and
mov
lods
cmp
aad
out
cld
mov
out
mov
add
add
ret
ss
je
jl
and
jbe
push
dec
pusha
sbb
add
loope
aad
les
lret
lods
test
cs
jg
in
aam
ja
pop
pushl
loope
pop
dec
ja
adc
icebp
xor
mov
scas
or
out
pop
adc
or
fisubs
ret
inc
nop
andl
push
pushf
jmp
sti
out
sbb
fidivrl
inc
pushf
pop
loope
xchg
daa
sub
sti
js
mov
outsl
jp
sbb
or
push
jmp
in
enter
jns
mov
testb
aas
outsl
cmp
and
mov
sarl
push
test
cli
loop
inc
adc
jge
sti
ljmp
mov
scas
dec
adc
adc
popf
aad
mov
pop
adc
xor
call
fisttps
or
inc
je
push
jnp
adc
dec
xor
dec
loop
add
adc
xchg
pop
jg
pop
fdivs
pop
pop
outsb
mov
push
add
nop
pop
jl
xor
inc
aaa
mov
mov
into
sarb
sbb
sbb
adc
les
push
and
push
pop
sbb
fstpl
push
pop
sbb
les
ret
dec
xor
dec
pop
dec
sbb
adc
sub
mov
lcall
pusha
mov
sbb
push
sti
movd
lods
mov
popf
dec
loopne
jecxz
xchg
les
pop
ljmp
jge
mov
mov
push
in
mov
ret
pop
outsb
push
add
push
mov
nop
test
xor
fists
add
les
cmp
mov
lret
cmpsl
jmp
jb
addb
lret
push
int3
mov
andb
mov
ds
push
je
xchg
pop
and
repz
mov
mov
xor
mov
or
cwtl
imulb
andl
sub
enter
jg
call
cmp
push
repnz
and
lods
mov
pop
sub
push
mov
cs
push
stos
mov
add
xor
pushf
div
aaa
mov
cmp
into
mov
stos
lods
push
ficoms
mov
xchg
gs
imul
inc
enter
or
das
arpl
mov
push
inc
lods
insl
aas
jno
aam
mov
add
add
and
loopne
pop
pop
and
pop
jecxz
pop
bound
notl
outsb
js
xchg
xchg
xor
ds
insb
xchg
movsl
fisttpl
pop
push
lret
mov
jne
xchg
in
stc
cld
imul
cmp
aaa
and
jl
mov
add
or
sub
iret
aam
sbb
cld
mov
cmp
sbb
inc
loopne
and
popa
cmp
xchg
rclb
rol
pop
popf
and
sbb
popf
mov
fmuls
adc
sub
inc
movsb
out
pop
xchg
push
jecxz
adc
mov
arpl
fmulp
repz
dec
imulb
mov
fs
sub
jmp
clc
mov
ss
xchg
test
in
outsb
sbb
xchg
fcmovbe
into
loop
fwait
out
mov
xor
cmp
sbb
bound
and
lods
xor
sbb
mov
mov
sarb
cmp
dec
fisubrs
mov
push
mov
xchg
movl
shll
add
jnp
je
push
sub
dec
sub
testl
inc
and
adc
popaw
mov
lods
sbbb
or
aam
sbb
cmp
sbb
iret
xor
sbbl
cltd
push
ficoms
out
mov
fmuls
add
mov
stos
lahf
jge
imul
push
or
out
rorl
pusha
ljmp
or
lahf
pop
mov
scas
mov
pop
jo
ret
add
or
mov
sbb
cmpsb
scas
outsb
repz
adc
dec
xchg
inc
int3
ffree
mov
popa
xchg
sbb
dec
dec
ret
jmp
xor
fnsave
and
movsb
jg
and
dec
aaa
push
out
mov
std
rol
dec
subl
out
dec
out
dec
movsl
ja
mov
out
addr16
push
inc
cmpsl
rolb
sbb
aam
pushf
jno
mov
dec
int
int3
xchg
enter
sbb
jae
mov
nop
dec
lods
out
loopne
mov
fdivrl
lret
test
rcrl
cld
sbb
push
fbstp
inc
mov
idivb
mov
xor
vpand
jmp
addr16
cltd
mov
xlat
es
movq
xor
mov
ds
mov
mov
cmp
mov
scas
iret
fadds
dec
out
and
cld
test
pop
sub
inc
lahf
lcall
inc
xlat
xor
pop
out
xchg
adc
nop
mov
fcoms
xor
stos
stc
mov
popa
rep
test
inc
cltd
outsb
add
add
movsl
inc
cmp
shl
js
jmp
sbb
fucomp
dec
push
cmc
ficomps
xchg
loopne
cmp
inc
add
cli
adc
jg
sti
cmp
stos
mov
ret
pop
je
lock
out
xor
std
push
cltd
inc
mov
push
push
push
jecxz
xor
invd
and
lock
ficoml
lret
push
push
lret
iret
xchg
or
addr16
jl
lahf
lock
mov
pop
cmp
or
inc
lods
jmp
cmp
cmp
fbld
lods
enter
data16
les
sub
and
imul
sub
data16
cwtl
sbb
sub
lods
mov
mov
ret
idiv
out
xor
push
jnp
outsb
mov
sbb
xchg
push
into
test
loop
add
test
test
xlat
xlat
addl
xlat
sbb
push
mov
or
int3
lea
xor
lds
fdivp
cmpsl
adc
iret
jnp
test
or
fdivl
sbb
sbb
lods
popa
push
stos
lahf
mov
jbe
mov
inc
ljmp
adc
and
cld
push
mov
pop
mov
inc
xchg
lods
sbb
push
adc
cmp
and
loop
and
out
add
jg
sub
xchg
pop
dec
mov
mov
mov
fstpl
popa
iret
ds
sub
and
sub
ljmp
push
push
cmpsb
or
mov
cwtl
rcrb
mov
notl
sub
jne
ljmp
rcll
fstps
cs
dec
orl
icebp
in
xor
add
in
adc
xor
fistpl
dec
sbb
sbbb
testb
stc
inc
and
mov
mov
pop
lock
mov
clc
jns
loopne
imul
push
push
push
jne
mov
test
push
js
stos
pop
inc
mov
stos
add
or
in
xor
dec
push
std
insb
pop
out
aad
pop
jl
pop
add
add
add
jmp
rorl
sbb
pop
inc
leave
mov
shll
mov
xchg
sahf
sbb
cmp
adc
inc
inc
cmpsl
insl
punpckhbw
mov
mov
xchg
ss
mov
pop
pop
insl
test
sub
mov
xchg
daa
nop
fdivs
xorl
loopne
mov
cmpsl
cmp
lods
jecxz
icebp
cwtl
les
mov
call
push
dec
das
aas
pop
pop
adcb
pusha
pop
and
das
xchg
lods
test
xor
ficoms
mov
dec
push
cmp
insl
mov
loopne
jb
fists
adc
rclb
sbb
inc
mov
repnz
cmpl
int3
inc
push
inc
push
jnp
arpl
pop
jo
xor
add
xchg
scas
fwait
push
cltd
fcmovne
sub
mov
cmp
popa
mov
addl
rolb
test
push
jnp
fmul
fld
mov
std
jne
cmp
fldlg2
lock
fwait
pop
out
add
sbb
mov
fwait
jecxz
fadd
jmp
xchg
in
cmp
mov
cmp
loopne
xchg
ljmp
cmpsb
cmp
ret
mov
fs
fdivs
inc
out
xor
cs
jo
or
das
jnp
xor
sub
lock
xchg
icebp
mov
mov
add
jp
shll
push
loop
xchg
idivl
rolb
pusha
lock
or
mov
insb
push
ljmp
mov
mov
sahf
inc
or
fs
jnp
imul
jle
das
cld
cmp
gs
fdivrl
and
mov
ds
lcall
jae
loope
jnp
rcr
push
aad
repnz
lret
sub
mov
stos
imul
rcrb
popa
or
jno
jl
out
xchg
or
fadds
stos
scas
and
mov
cwtl
hlt
pop
fadds
xor
fs
push
cmc
add
arpl
jl
data16
mov
stos
pop
sbb
es
mov
les
lods
cmp
insb
ljmp
push
xchg
lods
gs
push
loop
fisubs
xchg
xchg
into
pusha
push
sbb
out
inc
pop
fadds
jle
adc
addr16
or
pop
test
push
or
cmc
xor
sub
sbb
idiv
pushf
negl
fimull
inc
push
js
pop
or
push
jp
test
cmp
jp
mov
sbb
sbb
and
jo
and
push
mov
addr16
data16
mov
jge
fsubrs
aam
mov
mov
jno
dec
xchg
mov
xchg
jne
cwtl
sbb
and
divl
sub
mov
lds
test
out
in
sbb
sub
fnstenv
pop
or
and
nop
lock
sub
inc
outsb
repz
adc
pop
mov
push
jl
or
cmp
jb
movsl
cwtl
cli
fwait
or
pop
lret
jg
cltd
insb
sbb
and
sub
add
lcall
mov
sub
xchg
adc
loopne
loop
or
jns
jle
fsin
movsb
sub
test
lret
push
cwtl
xlat
cmc
add
mov
sbb
sti
cmp
dec
sbb
int
insl
pop
aaa
adc
aas
div
mov
test
add
xchg
cmp
rcll
push
push
iret
sub
data16
and
es
cmc
lcall
pusha
adc
pop
or
dec
movsb
jmp
jp
push
mov
mov
leave
repz
jecxz
inc
not
int
lret
ret
das
and
in
dec
mov
mov
xchg
pushf
aaa
add
mov
fisttps
imul
sbb
xorl
xchg
cld
fldln2
aas
cs
mov
daa
fwait
sbb
outsl
clc
stc
std
dec
sub
dec
or
inc
arpl
movsb
leave
sbb
or
insl
fiaddl
jecxz
mov
cmp
dec
mov
jle
sbb
icebp
sti
sbb
sub
nop
sub
inc
or
in
cltd
lds
cld
jl
inc
lea
pop
pop
jmp
inc
aam
cmp
hlt
out
inc
cmpsl
or
int
lock
xor
jp
sub
loope
stos
cmc
fwait
into
mov
lds
ljmp
fdivrl
xor
out
add
pop
sub
or
sub
mov
es
imul
insl
inc
sub
insl
xor
jl
std
pop
jbe
xor
sbb
repnz
scas
mov
mov
ljmp
sbb
xchg
ret
in
ss
push
into
dec
mov
test
ds
imul
dec
push
pop
ret
bswap
enter
adc
pop
dec
push
das
repz
roll
adc
negl
pop
ds
cld
or
popf
arpl
and
sbb
add
xchg
jmp
dec
scas
or
daa
sub
outsb
xor
and
or
pop
imul
paddsb
in
insb
clc
jno
xlat
ret
jp
flds
aas
push
lock
xchg
mov
add
push
inc
jb
push
xchg
outsl
push
xor
push
leave
jb
push
movsb
outsl
outsb
cmp
xor
hlt
rcl
mov
lods
xor
sti
cmp
aad
dec
push
andl
bound
cmp
push
cmpsb
cld
xlat
pop
sub
sub
mov
jecxz
repnz
mov
out
cmpsb
adc
mov
inc
sub
push
dec
out
mov
adc
cmp
sti
dec
iret
xchg
push
and
incb
call
or
imul
mov
jne
push
int
pop
repz
mov
mov
push
mov
and
mov
cwtl
cmp
jb
int3
sahf
pop
ja
dec
fwait
in
xchg
sarl
mov
pop
sahf
mov
je
inc
dec
jae
inc
outsb
sahf
sub
daa
stc
and
xlat
jo
xor
adc
mov
mov
insb
imul
aaa
arpl
xor
mov
jo
and
inc
and
lcall
leave
adc
fidivrl
xor
mov
icebp
insb
and
pop
add
and
loope
or
jne
push
outsb
aam
inc
arpl
shll
cmp
jp
mov
rorl
pop
ret
icebp
and
aad
adc
adc
jns
mov
xor
lret
shlb
adc
add
xchg
add
lret
xchg
mov
sbb
cmc
icebp
xchg
ret
mov
lret
lret
test
rolb
out
or
dec
adc
and
pop
push
out
sub
inc
or
inc
push
sub
repz
out
rcll
sbb
das
xlat
pop
pop
sub
mov
lods
loope
inc
seta
faddl
push
std
mov
cld
inc
adc
jge
xchg
and
je
add
popf
outsl
cmpsb
js
popa
sub
insb
xlat
sbb
in
or
cli
test
test
jg
mov
test
mov
in
iret
mov
std
pop
jge
call
inc
addb
div
rolb
scas
imul
bound
loop
jne
mov
dec
jb
dec
pop
cltd
inc
mov
push
cmp
jo
stos
andb
jl
mov
jne
out
adc
xor
xchg
iret
push
mov
xchg
popa
les
and
cmc
fbld
mov
lods
mov
pushf
bound
imul
sbb
aaa
insb
cmp
ja
movsl
lcallw
bound
mov
adc
mov
xchg
pop
out
add
cmc
test
sub
and
pushf
pop
or
xchg
mov
neg
ds
je
jno
loop
adc
jns
cmp
xlat
push
out
or
outsb
push
and
adc
mov
imul
repnz
mov
cmpsl
imul
in
ret
or
cli
scas
movsl
in
xor
cld
cs
lret
add
dec
jg
repnz
or
movsb
xchg
dec
xchg
fcmovbe
jnp
fs
call
hlt
in
pop
clc
mov
lds
xchg
popa
xor
insb
into
jecxz
shl
push
ficoms
incb
dec
xlat
sub
jnp
stos
push
adc
andl
aaa
pop
faddp
mov
jo
shlb
test
sub
jge
inc
gs
cmp
dec
cmp
stc
mov
sarb
or
testb
ret
rorl
fucomp
xchg
xor
test
sbb
in
push
pop
lahf
xchg
and
mov
mov
lock
aas
fists
or
subb
mov
mov
jno
pop
in
cmp
cmpsl
fcoms
ret
sub
xchg
dec
into
cmp
rcrl
dec
aaa
inc
out
jp
out
mov
popa
push
movsl
popf
sub
xor
lcall
mov
dec
pop
aad
out
mov
pop
xor
jmp
push
enter
cmpsb
leave
jmp
dec
jnp
sub
ss
outsb
or
repz
mov
gs
nop
mov
ljmp
js
mov
loop
das
pop
loopne
arpl
dec
adc
out
int3
xor
dec
push
fs
enter
aaa
inc
and
repnz
std
out
jae
sbb
fnstenv
xor
mov
es
cltd
outsb
push
or
xchg
dec
lret
xor
rcr
and
and
mov
leave
jl
insl
sbb
and
jecxz
insl
imul
mov
xchg
into
fmul
sub
ljmp
push
add
cltd
aas
inc
mov
rclb
hlt
adc
pop
cmp
inc
ljmp
pop
xor
sub
in
sti
mov
inc
adc
int
stos
sub
add
dec
jns
and
lods
ret
fmull
out
cwtl
xor
int3
movsb
lret
lahf
jmp
shll
es
mull
ret
xor
shlb
aas
cs
pushf
rorl
mov
pop
sub
mov
fwait
lock
lcall
in
dec
mov
out
lea
cmp
repnz
push
mov
push
pop
xchg
aaa
pop
ret
in
dec
notl
bound
xchg
loope
andb
int
sbb
lcall
mov
js
ljmp
push
adc
xor
stc
add
push
or
ficoms
cmp
iret
adc
je
add
push
cli
sbb
cmovno
repz
mov
adc
xor
stos
lret
xchg
fiadds
jecxz
pop
jno
mov
scas
mov
mov
shrb
rorl
pop
adc
loopne
mov
in
adc
sbb
xchg
lahf
stos
std
fcoms
lods
popf
jmp
movsb
xchg
in
jnp
cltd
sbb
cmp
je
dec
pop
push
cmp
ret
jnp
popa
std
je
rcr
xor
jbe
pop
mov
mov
out
cltd
cmp
xchg
adc
in
arpl
push
sbb
sub
cmpsl
pop
fimull
hlt
sbb
repnz
lock
jmp
fistl
dec
hlt
or
nop
icebp
shlb
and
js
pop
xlat
call
pushf
pop
out
jle
xor
xchg
ffree
outsl
lea
sub
sti
test
aam
scas
sub
lea
xor
fs
cmpsl
add
loope
fstpt
aam
pop
fdivs
push
xor
out
xchg
cld
sub
mov
ja
dec
push
into
cmp
sbb
mov
scas
mov
mov
repnz
nop
inc
scas
bound
mov
mov
pshufw
bnd
sbb
sarb
hlt
movsb
or
clc
arpl
clc
sbb
insl
mov
and
dec
or
leave
jb
inc
mov
arpl
outsb
fistl
dec
out
add
out
mov
inc
xor
mov
add
ja
add
dec
hlt
inc
cs
imul
icebp
jg
cld
inc
hlt
mov
push
into
push
jg
sbbl
dec
cmpsb
incb
outsl
xchg
and
cmp
shrb
push
bound
xchg
repnz
or
push
jmp
or
jns
mov
push
ficoms
xchg
mov
sub
or
push
fadds
lret
scas
sbb
mov
pop
fisttps
push
int3
mov
mov
outsl
or
xchg
jle
pop
or
arpl
cs
sub
sub
push
les
xor
ss
sbb
mov
adc
pop
outsb
or
jmp
popa
outsl
lcall
jne
out
adc
xchg
ret
mov
in
in
popa
repnz
aaa
out
push
int3
push
jo
push
mov
dec
xchg
out
test
sbb
cmc
xor
icebp
lcall
mov
jbe
je
out
pushf
ret
ds
je
scas
add
sbb
xor
mov
jae
lods
inc
jno
xchg
inc
lret
sbb
jl
inc
mov
inc
cwtl
and
je
xor
mov
aas
mov
xchg
insb
lods
jnp
push
jns
int
shr
lods
dec
inc
and
cmc
lods
rclb
adc
jmp
stc
jmp
or
fcmovbe
mov
jg
aam
xorb
mov
sbb
adc
aad
sub
popf
jno
testb
icebp
adc
movsl
sub
push
pop
jno
shrl
mov
cs
hlt
jno
mov
dec
xor
pop
out
pop
ljmp
insb
add
inc
mov
or
and
mov
push
mov
adc
movsb
test
jnp
jb
mov
cltd
push
popf
pop
aam
cmp
test
loopne
ja
in
mov
rorl
xchg
push
hlt
movsb
xchg
mov
mov
pop
imul
jae
inc
sbb
pop
lock
bound
dec
sbb
push
loope
arpl
mov
sub
xchg
lret
adc
mov
fstl
pop
dec
pushf
lods
jb
push
inc
inc
cmp
or
xchg
sub
mov
nop
lea
test
aam
popa
push
aad
ja
mulps
stos
cmc
das
pop
data16
adc
adc
push
sbb
pop
stc
and
mov
push
subb
loopne
fnsave
in
mov
or
dec
pusha
inc
imul
pop
or
inc
call
and
sub
call
inc
ret
cmpb
sub
xor
mov
hlt
sbb
and
sub
mov
and
inc
aad
in
dec
in
fistl
xchg
inc
inc
shlb
cmp
mov
jno
dec
inc
sub
das
inc
sar
mov
stos
je
mov
outsb
or
aas
or
pop
mov
les
mov
mov
iret
lds
lret
in
and
outsl
shlb
out
dec
out
bound
sbb
mov
testl
addr16
jecxz
xchg
in
cmpsl
jo
in
les
dec
push
stos
fcoms
dec
ret
loopne
inc
out
mov
gs
and
fsts
pop
js
push
orb
cltd
xor
xchg
int
xchg
add
cltd
sub
mov
xchg
iret
push
push
xchg
movsb
movsb
test
xchg
xor
cmovle
xor
arpl
hlt
xchg
es
inc
push
mov
call
cmp
nop
mov
and
mov
inc
popw
testb
pop
lret
insw
dec
push
in
jg
mov
dec
int3
dec
sarl
sub
and
les
aas
das
lret
xor
lret
mov
aas
ja
sub
pop
push
jns
out
push
cli
mov
dec
scas
fisttpl
pop
mov
sub
mov
dec
xchg
cmp
or
mov
ret
rcl
fisttpll
hlt
mov
mov
pop
and
fadd
jmp
movzbl
cmpsb
jmp
xor
aas
adc
gs
push
aam
xchg
mov
mov
scas
or
mov
adc
orl
mov
mov
mov
js
icebp
fisttps
clc
add
mov
pusha
or
lock
js
lea
lea
sbb
mov
fdivrl
cld
lret
test
xor
lret
dec
or
xor
add
sbb
test
sbb
jle
push
mov
daa
inc
sub
enter
call
push
mov
ja
dec
mov
lahf
loope
rorb
pop
mov
into
inc
push
outsl
outsl
aad
dec
mov
mov
loopne
stos
pop
pop
mov
and
lahf
movsl
insb
gs
jne
add
ret
or
adc
inc
mov
mov
jo
push
out
xor
aad
push
mov
inc
sbb
jmp
enter
js
lods
cmpsl
xchg
outsb
mov
mov
sbbb
push
mov
xchg
push
xchg
les
push
sbb
ret
inc
inc
call
mov
mov
sti
push
lret
mov
nop
cltd
stos
ret
mov
addb
xor
mov
mov
int
inc
scas
mov
insl
in
stc
pop
pop
mov
leave
jbe
dec
gs
xor
xor
xor
push
popa
inc
call
cmpsb
aaa
roll
xor
pop
cmp
sub
popf
icebp
jp
dec
adc
mov
aad
dec
decl
xor
or
js
sub
inc
and
pop
inc
data16
jae
lahf
in
scas
std
jmp
mov
subb
push
fs
int
dec
mov
lock
sahf
call
sub
push
decl
inc
lret
and
mov
pop
out
pop
pop
cmc
cmpsb
jmp
loop
rclb
aam
insb
cmp
out
sbb
in
jne
fs
lock
adc
movsb
sahf
dec
sahf
cs
jecxz
cs
push
xchg
dec
cmpsl
aad
scas
mov
adc
clc
rorl
shlb
xchg
sub
add
movsb
ds
sub
lds
mov
insl
popf
sub
xchg
and
es
aam
pop
mov
or
or
pop
push
mov
and
lea
gs
jno
jo
test
mov
push
jb
sahf
push
push
pop
lods
push
mov
rorb
sbb
test
pop
lds
xchg
inc
leave
pop
or
cmc
hlt
xchg
test
pop
sbb
daa
dec
insl
fs
pop
mov
out
jne
mov
xchg
in
data16
pop
xchg
jb,pt
add
cmp
xor
ss
inc
push
inc
adcb
std
repz
cmpsl
lret
popf
sbb
cmpsb
cmp
pop
mov
mov
movsb
inc
incl
rorl
imul
lds
push
lods
test
jge
mov
add
ret
les
out
test
or
inc
and
aad
mov
imul
adc
mov
jnp
mov
add
push
pop
lret
push
inc
mov
lahf
inc
inc
pop
cmp
std
mov
aad
xor
clc
push
or
mov
out
cmp
iret
xchg
adcl
lock
movsl
pcmpeqb
push
cmp
in
mov
sbb
repnz
in
call
adc
mov
out
imul
loopne
jecxz
jbe
push
cmpsl
xchg
pop
cltd
push
cmovnp
orl
jle
jmp
push
mov
out
pop
ds
insb
adc
popl
pop
mov
push
and
and
stc
call
shlb
stos
xchg
cmp
scas
addr16
or
cltd
outsb
dec
sbb
shrl
jmp
hlt
cwtl
pop
cmp
clc
mov
mov
icebp
pop
leave
dec
bound
mov
and
cmp
sub
roll
outsb
leave
jns
pop
lea
push
arpl
dec
test
add
sub
xor
sbb
jmp
popa
ret
lret
sbb
cmpsl
in
outsb
scas
arpl
cmp
jge
cmp
cs
outsl
xor
lahf
pop
icebp
testb
lahf
gs
aaa
cmpsb
cmp
cmpsb
xor
pop
les
jns
jo
cmpsb
xchg
insl
notb
icebp
sahf
sub
mov
push
pshufw
bound
sbb
sbb
sbbb
out
repnz
mov
pop
in
xchg
sbb
xor
and
push
xor
test
enter
xchg
sbb
clc
add
fs
icebp
test
lahf
push
sbb
or
bound
jl
or
cmp
rcr
subb
jmp
fwait
dec
loopne
inc
sub
or
push
mov
rolb
fildl
popf
mov
out
outsl
outsl
std
adc
test
push
jne
xchg
sti
mov
xchg
cs
sbb
fsubl
aaa
movb
push
pop
push
push
rcll
add
imul
call
out
jne
jecxz
push
roll
fidivl
lods
cmc
out
or
jge
bsr
sbb
out
cmp
cmpsb
lock
mov
xchg
push
sub
add
lcall
cli
pop
lock
nop
sub
in
jg
dec
insb
aad
cltd
inc
inc
cmp
pop
push
sti
loopne
std
pminsw
sbbl
jnp
ret
mov
push
add
push
or
movsl
jg
mov
adc
std
sbb
popf
repnz
push
mov
lret
xchg
enter
sti
leave
cltd
mov
mov
sti
popf
popa
icebp
mov
jmp
in
xchg
stos
inc
dec
dec
test
popf
insb
xor
out
xor
insl
sub
mov
inc
and
add
je
ret
fcmovnu
popf
insl
shrb
push
aaa
lods
mov
or
mov
sub
push
sahf
int
sarl
mov
stos
sbb
sbb
xor
mov
xor
sbb
std
xor
sub
jbe
fidivl
bound
mov
add
inc
adc
push
aam
or
dec
push
sbb
dec
cltd
inc
popf
jbe
inc
push
fldenv
mov
xchg
mov
and
sbb
inc
repz
int
sti
and
adc
sbb
sub
pop
mov
mov
fmull
push
cwtl
int
pop
mov
popa
sub
inc
push
fwait
jae
js
shrb
cli
sti
loop
sbbl
test
mov
imul
in
inc
add
int
cmpsl
mov
in
adc
iret
fildll
dec
mov
js
adc
xor
lock
xchg
mov
adc
je
in
pop
neg
cmp
push
inc
jmp
xchg
and
in
das
imul
imul
dec
sub
arpl
xor
pause
xchg
cmp
adc
imul
imul
jp
imul
cmc
cs
or
rcrb
inc
aam
ret
cwtl
or
pop
fimull
jmp
adc
mov
or
mov
lahf
out
addr16
mov
mov
xchg
ret
adc
bound
xacquire
or
push
mov
and
aas
xchg
scas
xchg
je
or
xor
lea
add
lea
inc
xchg
pop
imul
jnp
ljmp
xlat
cld
in
mov
loop
cmp
mov
ja
jnp
je
pop
inc
jo
xor
xchg
dec
repnz
inc
xchg
or
out
in
dec
fwait
stos
in
icebp
xchg
fisubs
scas
scas
mov
xor
lcall
int
mov
sub
ror
aam
das
xorl
and
jg
dec
fidivrl
jg
loop
fisubs
jno
sub
or
test
leave
sbb
mov
jns
sub
mov
cmp
int
lret
mov
pop
dec
or
jo
fsubrs
pushf
jg
push
lret
jl
mov
fidivs
paddusb
or
and
lds
adc
add
test
insb
and
xchg
das
jno
jge
aam
xor
ret
mov
lea
shll
add
push
mov
and
push
mov
sub
scas
fildll
xchg
std
add
xchg
imul
les
jmp
xchg
push
lea
imul
push
jecxz
push
in
arpl
filds
int3
cmpsb
loopne
cmp
jle
int3
and
and
sbb
sti
mov
movsl
or
shll
xor
lahf
orl
mov
les
or
adc
fwait
sub
push
push
pop
mov
pop
cld
in
das
jns
ret
into
xchg
lods
adc
pop
push
dec
ret
mov
xor
jnp
jb
jo
loope
movsl
into
add
inc
or
push
pop
pop
dec
mov
andb
pusha
and
cmpsb
inc
mov
rorb
xor
sub
cmp
jnp
or
and
in
xor
cld
icebp
add
daa
xchg
test
cmp
andb
jnp
out
stos
fsubs
mov
rolb
sbb
mov
out
fidivl
enterw
sub
rclb
inc
jle
push
jl
or
test
cli
out
inc
mov
mov
jbe
jo
mov
in
or
lods
sahf
movb
lahf
add
or
call
test
mov
push
or
mov
addb
movd
in
and
xor
inc
or
jno
and
add
sub
stc
cs
jo
add
push
adc
aad
or
pop
or
jns
or
daa
les
cli
push
push
hlt
push
mov
data16
pop
cmp
fdivr
pop
out
xchg
lcall
push
dec
lods
jl
repz
sbb
scas
add
mov
sbb
jmp
and
or
mov
ss
mov
ficoms
push
mov
stc
int3
jb
add
and
xchg
les
pop
jge
mov
push
test
out
stos
and
popf
mov
mov
gs
in
fbstp
inc
inc
xchg
add
mov
fwait
ljmp
lcall
in
sbb
stc
mov
mov
jno,pn
push
fsubrs
sub
xchg
jno
in
adc
and
dec
and
icebp
pop
mov
orb
jne
shlb
xor
arpl
add
mov
cld
or
jecxz
je
add
pop
mov
cwtl
and
jbe
xor
in
lock
cmpsb
inc
xchg
sbb
fists
fsubrl
mov
fwait
dec
mov
cmp
int3
and
xchg
daa
dec
scas
pop
push
pop
dec
jae
dec
out
mov
adc
jns
test
jae
inc
mov
cmpsl
lock
daa
ficoms
xor
js
push
jne
fimuls
clc
ret
mov
push
outsb
mov
xchg
xor
hlt
cltd
xchg
scas
out
gs
sub
add
mov
arpl
xchg
lods
popa
sub
jg
out
sub
lods
in
push
jno
sbb
xchg
cltd
or
add
xor
add
ds
fs
mov
in
mov
cmp
icebp
xchg
insb
sub
dec
faddl
loopne
aaa
xor
in
xchg
xor
lock
dec
jmp
sub
addl
cmpb
xorl
ret
negl
js
lret
cmc
sar
push
add
mov
adc
sub
or
inc
xorb
scas
mov
mov
cmpsb
mov
cltd
inc
jmp
add
clc
out
orps
mov
push
lret
outsb
popa
bnd
pmaddwd
xor
outsl
jl
pusha
std
iret
sbb
mov
scas
jb
mov
and
sub
mov
clc
push
cmpsb
xlat
or
sub
stc
xor
mov
stos
pop
cmpsl
arpl
sti
jns
jge
add
push
lret
movsb
add
enter
mov
shl
insb
dec
or
inc
mov
mov
mov
xchg
cmp
jl
dec
push
xlat
push
leave
jmp
jae
mov
fwait
lcall
or
jle
pop
ss
in
ja
jp
shlb
mov
loop
mov
mov
sti
lock
pop
pusha
or
cmpsl
mov
out
cmp
push
out
pop
daa
xchg
rclb
jge
imull
in
iret
dec
or
mov
lahf
nop
scas
outsl
sub
adc
dec
in
inc
fnstsw
pop
dec
test
sbb
stos
jno
jbe
int3
pop
cmp
and
pushf
repnz
mov
mov
iret
js
xchg
xchg
in
mov
ret
stos
xor
je
inc
pop
jne
mov
rclb
dec
push
movsb
sub
lret
and
mov
cwtl
ja
sbb
mov
add
dec
push
push
dec
jge
jb
mov
loop
test
add
pop
daa
dec
mov
cmc
jns
pusha
mov
clc
insl
fnstcw
repnz
push
fwait
lret
dec
pushf
mov
add
test
sbb
test
inc
jns
data16
out
adcl
push
mov
inc
loopne
push
xchg
int
jno
sub
or
mov
ljmp
xchg
dec
sar
or
xchg
sub
jge
mov
push
movsl
lahf
sahf
sbb
push
inc
cmpsl
shlb
or
call
scas
cli
andl
xor
xor
nop
outsb
dec
cli
mov
xchg
leave
jnp
inc
fstp
mov
inc
push
and
mov
mov
inc
cmp
leave
ror
cmp
xor
mov
int
loopne
repnz
dec
fidivrs
into
iret
aad
cmpsl
mov
jb
addr16
cmpsb
sbb
mov
js
sub
mov
addr16
addr16
sbb
xor
xchg
aam
arpl
repnz
pop
fdivrl
pusha
sub
std
int
int3
jg
inc
ljmp
mov
popf
shlb
and
dec
inc
fbstp
stos
push
mov
sbb
adc
adc
pop
pop
dec
dec
push
pop
fcmove
mov
hlt
push
mov
and
clc
xchg
mov
dec
xor
dec
ja
pop
popf
fcompp
nop
mov
mov
mov
add
and
xchg
js
jp
jno
repnz
push
jge
pop
in
repz
out
imul
jecxz
or
outsb
outsb
imul
sar
mov
cmp
xchg
mov
and
or
in
sbb
lods
fisubrs
adc
out
cmp
dec
push
adc
dec
jp
mov
push
ds
es
jg
fidivs
mov
div
jmp
in
dec
dec
mov
rol
mov
in
outsl
jbe
cmp
insb
dec
shll
into
or
xor
push
push
dec
push
les
mov
jns
test
hlt
adc
adc
sub
sti
repz
add
popf
gs
iret
add
bound
ss
arpl
fwait
mov
in
inc
ret
les
leave
lock
lea
cs
arpl
xor
dec
shr
push
cltd
test
jno
xchg
xchg
sbb
mov
jl
cltd
cltd
aas
dec
jecxz
mov
stos
xlat
fldl
fisubl
jge
das
push
inc
mov
and
mov
cld
sahf
cs
inc
mov
mov
mov
jl
jo
and
dec
ret
jo
shr
add
dec
mov
std
push
arpl
mov
outsl
mov
pop
insl
sbb
sub
test
test
stc
or
dec
movsl
fsub
dec
add
mov
aad
inc
pop
xor
shl
sbb
sbb
lock
inc
cmp
adc
stos
iret
lock
clc
cld
sub
pop
pop
cmp
xchg
or
xor
jne
jle
sbb
xchg
fcom
sahf
jp
sti
sbb
repnz
jle
adc
xchg
testl
fdivl
fwait
pop
jo
push
int3
adc
jle
test
hlt
sub
fwait
pop
add
hlt
fdivrl
mov
push
nop
mov
sub
dec
mov
fs
push
ds
add
jp
daa
sbb
out
xor
movsl
into
inc
dec
mov
xchg
or
xchg
sahf
sti
gs
sbb
mov
mov
inc
jo
mov
scas
call
ds
or
jg
fidivl
cmp
adc
aas
pusha
int3
mov
call
dec
adc
enter
aam
addr16
and
xor
inc
cmp
pop
adc
lret
xchg
add
ljmp
dec
sbb
mov
in
sub
mov
pushf
xchg
sbb
fldt
mov
mov
mov
or
xchg
adc
aas
js
jmp
mov
push
and
add
lock
add
shll
add
xor
mov
int
jb
insl
pop
ja
sbb
and
stc
adc
and
das
js
repz
pop
out
jl
out
cld
neg
int3
xor
xchg
xchg
xchg
imul
loope
sub
ja
mov
roll
cld
push
iret
inc
cmp
mov
scas
mov
mov
enter
ja
imul
xchg
push
adc
enter
test
inc
xchg
enter
or
addr16
adc
mov
out
pop
push
pop
shl
addr16
stos
out
add
pop
mov
inc
cmp
xor
inc
cmpsb
adc
jl
pop
lret
imul
rol
aaa
dec
sub
out
lock
sarl
pop
lods
mov
xlat
aas
push
xor
mov
lret
adc
fcomip
jle
xorl
mov
sbb
fbstp
lret
pop
cwtl
call
cwtl
mov
inc
mov
dec
hlt
into
jge
mov
sbb
adc
add
rclb
push
jne
loopne
mov
adc
into
add
inc
out
imul
pop
aas
aam
dec
jo
sbb
cmpsb
outsb
movsl
stc
push
jecxz,pt
cmp
js
mov
lcall
in
adc
jno
fsts
aam
sqrtps
cmp
loope
inc
bound
inc
sbb
outsl
cmc
flds
pop
xchg
ss
jmp
xor
fisubs
xchg
int3
add
lods
pop
pop
and
pop
mov
sbb
js
imull
popf
std
mov
cmp
jne
jnp
dec
mov
xchg
sub
loop,pt
add
xchg
daa
insb
adc
cmpsb
xor
in
push
outsl
ret
xchg
adc
sub
lret
jbe
call
jp
mov
inc
sahf
cmpsl
mull
fs
push
les
movsb
daa
pop
adc
cmp
xchg
pop
adc
jnp
or
ror
out
inc
in
adc
jmp
ret
orl
xor
jp
shrl
loope
movlps
loop
adc
cltd
jbe
and
jle
cmp
leave
and
and
das
fbld
js
imul
add
es
addr16
outsl
sbb
inc
dec
inc
call
call
mov
sub
or
pop
mov
xor
repnz
sub
popf
lock
pop
dec
push
push
cwtl
lods
insb
aam
mov
repz
test
inc
daa
iret
daa
sub
jbe
cmp
mov
sbb
xchg
mov
cli
xchg
mov
sbb
out
jns
xlat
cli
loop
or
sub
or
nop
testb
das
push
pushf
adc
or
pop
mov
adc
jmp
mov
arpl
inc
cwtl
in
jmp
mov
jp
aad
repnz
int3
mov
sub
push
sahf
arpl
shrb
ja
sbb
mov
or
bound
pop
orl
aad
cltd
dec
lahf
movb
cmp
add
dec
loop
pusha
lcall
xchg
inc
push
jg
cmp
xchg
pop
lret
cli
insb
repnz
jno
inc
add
dec
mov
or
out
jo
std
add
rorb
scas
ss
pop
mov
shrb
ss
mov
inc
cld
mov
bound
mov
aad
mov
xlat
ret
mov
sahf
pusha
jne
jns
add
xor
fdivrs
insl
jl
add
in
mov
pop
fimull
leave
stc
aas
mov
mov
xchg
call
aas
movsb
sub
fnstsw
fdivrp
mov
xor
dec
pusha
in
pop
inc
fs
sahf
das
pop
rcrl
test
hlt
in
and
fsubs
pop
fdivrl
and
push
sub
jmp
mov
and
ljmp
jl
lods
lea
mov
mov
mov
jl
xlat
cmp
xchg
dec
ja
outsb
bound
mov
call
es
pop
xchg
in
std
xor
sub
mov
mov
xchg
cmp
adc
inc
add
cli
dec
mov
rclb
jnp
mov
lods
stc
cmp
xchg
cli
mov
insl
cmp
js
cmp
inc
and
or
add
out
push
fnstcw
fs
imul
pushl
stc
push
inc
sub
jl
sub
cmc
iret
stos
test
add
icebp
xor
lret
mov
mov
cmp
pop
xchg
fcompp
mov
xchg
and
jb
mov
out
mov
shlb
shr
mov
pusha
imul
int
sub
jnp
or
loope
arpl
and
dec
mov
xor
std
sub
jo
scas
shll
sarl
icebp
ret
je
sub
push
nop
stos
and
shrl
pop
pop
mov
cmpsl
lahf
movnti
jg
sub
jecxz
out
movsl
fdiv
mov
push
fidivl
xchg
adc
out
arpl
dec
sub
in
lea
out
pop
jno
fdivl
mov
inc
ljmp
cmp
pop
lods
cmpsl
mov
push
add
mov
lds
add
lds
mov
cmpsb
int3
ret
cld
cmpsl
xor
add
div
or
cmp
jle
cmp
xor
out
aaa
mov
fwait
adc
push
jge
in
js
rdtsc
shlb
aad
fwait
mov
call
clc
inc
stos
pop
inc
push
leave
leave
cmpsl
jnp
sub
cli
adc
outsb
dec
inc
push
sbb
inc
sbb
mov
ret
and
mov
mov
xchg
rol
add
aaa
push
push
push
lods
test
cwtl
push
mov
push
pop
or
mov
in
pop
dec
and
cmc
dec
sub
sbb
fildl
jne
xor
or
pop
jno
mov
or
clc
push
push
lods
dec
loop
xor
loope
mov
jnp
xchg
cmpsb
das
mov
push
dec
fcmovnu
fwait
shl
imul
adc
int
insl
sub
mov
push
lcall
mov
jae
loope
dec
ljmp
fcompl
mov
add
repnz
sbb
add
mov
add
sbb
pop
lcall
mov
push
pop
mov
mov
into
sbb
mull
in
add
faddl
fidivrs
out
adc
jecxz
cltd
xchg
pop
and
inc
popa
pop
push
mov
and
inc
leave
ljmp
xor
mov
add
xchg
xchg
clc
pop
mov
pop
mov
mov
test
imul
testl
stos
jb
add
or
cmp
scas
loopne
imul
mov
lods
or
xchg
jge
in
mov
repnz
jo
js
xchg
mov
jecxz
scas
pop
es
lcall
mov
cmpsl
xor
adc
adc
push
push
js
shl
or
dec
push
pop
sarl
sub
imul
jl
faddl
mov
jno
pop
shl
and
and
xchg
sub
sub
jp
pushl
sbb
out
push
jg
dec
pop
adc
fisttpll
adc
mov
stos
and
cltd
sbb
loopne
bound
cltd
dec
mov
mov
adc
inc
pushf
dec
sub
stos
pusha
push
popf
lahf
xchg
aaa
inc
add
mov
mov
dec
cmp
push
sti
pop
jmp
pop
pusha
arpl
cmpsb
mov
jb
and
aad
mov
push
mov
lods
and
arpl
xchg
pop
dec
stos
or
daa
sbb
sub
mul
add
lock
or
xchg
int
push
inc
dec
rorl
dec
mov
add
jp
ss
sub
push
and
mov
jmp
sub
sbb
jp
popf
insl
test
cli
gs
jo
popf
pop
jnp
nop
and
push
or
pop
or
lcall
imul
out
xor
inc
sbb
lods
mov
jne
inc
inc
rcrl
es
rcr
push
in
cwtl
and
outsl
sbb
out
xlat
inc
es
nop
inc
dec
xchg
aad
movsl
or
and
inc
and
test
mov
decl
mov
add
dec
cli
rorb
in
adc
jbe
ja
push
dec
cmp
inc
insb
mov
adcl
inc
mov
scas
push
in
hlt
push
and
lea
mov
mov
cmc
push
cmp
jae
mov
cs
push
pop
jbe
shrl
xchg
orb
push
cmpsb
mov
dec
or
xor
repz
jecxz
or
adc
xor
arpl
mov
or
cwtl
ret
sub
lcall
adc
cmp
jns
int3
pop
xchg
jmp
mov
mov
cmp
ds
mov
out
sbb
jmp
cwtl
ja
cmp
add
jg
je
imul
js
bound
test
xchg
mov
adc
or
je
add
scas
pop
int3
pop
pop
cs
and
mov
fdivrs
cmpsb
or
push
dec
fimuls
test
push
pop
inc
xor
dec
hlt
loope
icebp
enter
xchg
cmp
gs
das
dec
push
cwtl
pop
fsubrs
imul
cmc
idivb
mov
adc
mov
icebp
mov
imul
ja
dec
push
nop
pusha
push
lcall
lods
dec
sub
imul
mov
pusha
dec
ret
enter
loop
lcall
adc
xchg
insb
xchg
fistpl
sbbl
mov
and
imul
dec
scas
jle
push
in
mov
inc
jae
les
jno
xchg
insl
xor
add
inc
mov
fdivrp
mov
inc
movsl
or
pop
mov
gs
imul
xlat
mov
stos
cmpsl
lods
xchg
dec
fcomps
jl
lods
jg
shlb
xchg
mov
cmp
ret
mov
xor
fisubrs
fildll
fwait
adc
roll
xchg
sub
adc
mov
sub
jbe
popf
pop
jb,pn
lret
test
std
cmp
cmp
jmp
orl
cmpsl
lds
rcr
test
sub
adc
push
or
dec
cli
add
add
test
cs
push
cmp
inc
xor
jae
and
jne
and
xchg
adc
cwtl
mov
popa
xor
gs
jg
movsl
cmp
pop
dec
icebp
sbb
cmpsb
ds
icebp
into
mov
ret
fnstenv
and
sub
pusha
add
dec
insl
jnp
push
cmp
sub
inc
mov
adcl
pop
ds
add
dec
dec
xchg
mov
adc
scas
push
lret
xor
dec
mov
dec
and
aas
mov
xor
sbb
dec
mov
div
lods
insl
mul
sbb
xchg
pop
les
je
repnz
or
xlat
mov
pushf
sbb
push
add
xor
leave
pop
mov
jg
andb
xchg
push
cmp
and
mov
rcll
push
insb
xor
ljmp
test
cmp
lea
push
adc
test
push
pop
out
rcll
aad
dec
mov
push
xlat
ss
int3
lods
mov
jmp
mov
in
cmp
pop
sar
mov
stos
and
sbb
xor
stos
imul
cmpb
loope
sub
fwait
pop
ss
push
loopne
xor
outsl
imul
mov
dec
pop
push
insb
test
xor
inc
mov
pop
pop
sbb
xchg
divps
icebp
fbld
imul
jmp
jne
or
rcll
or
int3
mov
repz
leave
fidivrl
sub
test
fcoml
mov
orl
ficoms
pop
das
mov
cmpsw
aad
mov
jnp
int
loope
lock
xchg
push
popf
shl
fnsave
lods
dec
pop
in
movl
lds
mov
or
adc
stos
in
xchg
push
js
jbe
or
adc
fiaddl
jne
vpmacssww
pop
dec
cli
xchg
cmp
loop
stos
ljmp
cltd
cmp
arpl
xchg
repz
mov
shl
inc
mov
fdivrl
test
inc
stos
mov
lret
ds
dec
nop/reserved
push
les
sub
dec
xor
pop
inc
mov
or
push
jp
inc
dec
mov
pop
jo
adc
cmp
idivb
or
xchg
jl
xchg
xor
lret
cmp
jae
adc
inc
mov
or
push
push
xchg
sbb
dec
mov
loop
popf
fsubrs
and
cmpsb
stos
pop
jge
push
push
lods
out
pop
jge
jle
pop
jp
or
jg
mov
stos
popa
addl
in
sti
cmpsl
dec
fdivrs
shlb
jp
adcl
mov
movsb
ficoml
dec
add
stos
pop
jmp
fmull
in
adc
lods
mov
pop
aad
mov
xchg
jns
cltd
mov
lods
pop
bound
mov
push
pop
test
testl
cmp
inc
cs
loopne
fnstcw
js
mov
sbb
lods
cwtl
adc
lods
outsb
push
lret
scas
jl
mov
jp
aam
fisttpll
das
xor
push
fs
pop
daa
mov
jecxz
mov
rcrl
lahf
lock
cmc
cld
ss
jb
pop
xor
or
es
fsts
or
push
pop
sub
push
test
or
loop
push
or
push
dec
dec
daa
mov
jecxz
and
aad
jae
test
sti
imul
sub
fnstenv
imull
loope
dec
dec
ss
lret
dec
mov
cmp
cltd
dec
daa
lds
xchg
negb
nop
xor
nop
jle
sub
xor
and
jno
mov
scas
or
dec
rcll
jmp
push
pop
dec
test
add
lods
cwtl
cltd
orb
jnp
shrl
pop
mov
ficoms
test
jecxz
sbbl
inc
pop
ss
gs
lock
stos
xor
pop
les
cmp
aas
xchg
daa
outsb
pop
or
dec
push
outsl
or
arpl
cltd
jns
dec
mov
sbbl
jg,pt
addb
mov
icebp
push
sarl
xor
out
mov
mov
in
dec
pop
push
dec
cld
mov
mov
xor
jcxz
fmuls
mov
ss
orl
xor
sbb
sub
cmp
insb
jae
enter
lcall
orl
pushf
dec
mov
push
sbbl
inc
add
xor
int3
inc
icebp
roll
xchg
xor
lods
je
jo
neg
inc
gs
sbb
std
push
ljmp
enter
nop
clc
in
out
out
imul
test
mov
jle
ljmp
mov
mov
xchg
notb
aam
jmp
xor
arpl
sub
fisubl
inc
sarl
push
mov
mov
je
pop
add
mov
sub
xchg
arpl
test
sbb
out
xchg
jge
xor
idiv
mov
bound
insl
and
add
out
and
jns
cmp
imul
clc
stos
fisubs
and
fmull
lret
mov
cmc
mov
lea
xor
shr
les
xor
cmpsb
jae
push
movsb
bound
fs
dec
or
xor
outsb
adc
scas
cmpsb
mov
sub
xor
and
in
ds
sahf
adcb
and
imul
aad
inc
or
push
dec
add
or
call
mov
pop
add
cmpsb
inc
push
mov
mov
mov
mov
test
in
scas
mov
push
pop
and
xor
push
mov
icebp
adc
xchg
cs
jle
jle
test
cmc
ret
arpl
jmp
jmp
add
or
cmpl
sahf
xlat
inc
or
js
push
insb
add
jnp
leave
mov
xor
mov
inc
or
cmp
adcl
pushf
cli
dec
push
out
sub
ja
arpl
cld
outsl
xor
xor
lock
sti
jns
sbb
aad
fldpi
ljmp
outsb
and
push
in
pop
xor
inc
fstl
cmp
inc
xor
inc
sti
lods
xchg
lret
cwtl
in
bound
and
cmc
and
mov
stc
mov
arpl
mov
stos
call
rcrl
arpl
lret
mov
js
xor
jge
hlt
jge
pop
test
rorl
shrb
out
add
jle
popf
jmp
cli
sub
rcll
sub
mov
int
daa
stos
lds
adc
or
sahf
lret
out
jg
fwait
lds
lods
or
je
add
sahf
sbb
fdivrp
iret
out
mov
adc
xor
mov
and
cmp
jns
xor
loopne
jmp
test
int3
mov
shl
push
cli
push
cmp
idivb
orb
and
xchg
rorb
gs
and
adc
loope
popa
jb
lock
xchg
and
popa
dec
cmc
add
out
fcomps
imul
movsl
les
xchg
std
xor
mov
ss
ja
inc
lea
bound
in
sbb
popf
pop
mov
sub
push
out
daa
cmp
jl
lock
lret
test
jnp
jne
xchg
cmp
inc
mov
js,pn
add
imul
mov
inc
cld
mov
xchg
repnz
les
sub
fwait
mov
push
stos
outsb
orb
mov
mov
stc
or
sahf
mov
imul
arpl
shrl
push
pop
out
aam
push
gs
daa
rdtsc
jns
xchg
jae
add
mov
adc
mov
inc
xor
xor
fdivrs
add
dec
xchg
fdivr
shlb
mull
test
dec
sub
push
sub
adc
pop
lret
dec
iret
lcall
test
addr16
out
and
pushf
push
mov
sub
push
mov
jmp
inc
adc
gs
jne
jae
and
pop
in
cmc
mov
jp
dec
stos
lcall
add
ret
inc
pop
mov
sahf
cs
pop
daa
sbb
hlt
fsts
popa
fcoml
shr
mov
cmp
pop
inc
sub
lahf
loop
dec
repnz
call
xor
pop
test
in
out
cmp
mov
inc
shl
dec
testb
xchg
xlat
test
imul
pushf
and
out
inc
push
mov
fldl2t
dec
inc
lcall
iret
adc
or
lds
adc
test
adc
aam
xlat
push
les
lds
das
xor
mul
sbb
mov
fldt
std
cltd
dec
mov
mov
adc
psubsw
mov
pop
sti
xlat
mov
addr16
jns
lods
sub
imulb
orb
inc
jmp
cli
cmp
movsl
cmc
aas
push
xchg
insb
mov
mov
insb
adc
pushf
std
jnp
les
cmp
add
sub
pop
sub
fldcw
dec
bound
stc
mov
cmc
push
mov
mov
jbe
jb
sub
rcr
shrl
pop
pop
and
inc
mov
aad
popf
adc
aaa
pop
jns
fsubs
pop
and
xor
lcall
ret
inc
es
je
inc
faddl
inc
ret
and
scas
shl
pop
mov
or
or
int3
ror
das
xor
and
jmp
cmp
aam
popf
hlt
divb
mov
cmpsl
scas
imul
jbe
sbb
push
sbb
add
mov
mov
lcall
std
test
imul
jmp
push
shrl
divb
ss
xchg
stc
lds
mov
pop
sub
jo
imul
ret
lods
data16
cltd
pop
push
ja
mov
leave
push
adc
push
pop
inc
clc
or
es
add
mov
xchg
xor
mov
scas
cwtl
sub
jnp
popf
int
call
andb
pop
xor
lret
mov
mov
in
pushf
add
test
ljmp
dec
jle
xchg
outsl
cmp
push
cmc
mov
dec
insl
cmp
popf
lret
imul
cwtl
mov
cmpsl
js
jbe
cmp
cwtl
cmp
sbb
add
daa
jecxz
push
mov
icebp
in
sbb
cmp
push
into
push
xlat
mov
sub
xor
xchg
iret
in
adc
xlat
in
in
lret
pop
leave
mov
mov
sbbl
sahf
xchg
mov
xchg
scas
adc
aas
add
mov
pop
jnp
lret
fldt
mov
sub
aaa
fnsave
icebp
mov
mov
mov
xchg
subl
mov
push
int3
push
xchg
mov
test
js
outsb
in
roll
out
cmp
add
mulb
dec
testl
insb
imul
arpl
mov
ljmp
mov
ret
movsl
lods
pop
and
xchg
fs
outsb
xchg
xchg
fiadds
dec
inc
mov
and
jbe
dec
cmpsb
push
gs
insl
popa
dec
loop
aam
sbb
pop
cmp
adcb
dec
xchg
mov
jns
adc
std
std
xchg
push
xchg
or
or
jns
cmpsb
test
in
enter
xchg
pushf
pusha
mov
dec
pop
not
addr16
or
icebp
cmp
sub
mov
aad
sbb
dec
inc
rcll
ja
lock
test
sbb
call
sub
es
cwtl
cld
mov
outsl
mov
call
andb
or
pop
jo
jbe
es
pop
sub
cli
fstl
ret
adc
push
dec
stos
imul
xchg
sbb
pop
aad
in
les
fcoml
mov
popf
cwtl
outsb
out
clc
std
rclb
popa
sahf
xor
dec
sub
enter
les
ljmp
jecxz
fcom
sub
inc
dec
cmp
mov
add
outsl
xlat
les
lods
scas
mov
pop
ret
out
shl
rcll
icebp
xchg
test
dec
rcrb
jno
mov
inc
cmp
pushf
jb
popa
in
ljmp
push
pusha
xchg
inc
jl
iret
test
jmp
test
fadds
fistpll
jge
xor
aaa
jnp
cwtl
inc
cmp
mov
cmp
aaa
imul
inc
aam
aas
clc
sub
add
ja
mov
out
fiaddl
pop
mov
dec
inc
push
mov
mov
in
mov
xor
aad
mov
and
inc
lock
mov
fisubs
inc
movl
jle
add
adc
xchg
push
xchg
iret
mov
mov
and
jno
loop
aas
mov
inc
fs
push
das
xchg
test
fadds
subl
jne
rcrl
test
fcoms
aam
inc
in
mov
bound
insb
out
pop
xor
addl
or
mov
dec
cmpsb
cmpsb
mov
sub
cli
loopne
clc
popa
mov
inc
shll
js
insl
outsb
in
mov
int3
dec
push
cmpsb
mov
mov
sub
jo
dec
push
mov
jle
clc
insl
pop
sbb
jg
inc
xor
aas
fiaddl
icebp
fmuls
cld
cmc
mov
mov
mov
jg
repz
into
xchg
adc
sbb
xor
lahf
hlt
sbb
pop
ret
fidivrs
out
dec
mov
lds
xorb
add
dec
in
mov
mov
xchg
movsb
mov
stos
cmpl
fmull
insb
into
sahf
enter
xor
mov
daa
into
testb
js
jp
js
pop
clc
adc
pushf
cmp
sbb
xlat
loop
and
or
pop
xchg
jno
roll
pop
scas
jl
xchg
ret
or
mov
cmc
add
and
bswap
adc
sub
ret
hlt
xchg
add
jno,pn
mov
push
sahf
cltd
stos
push
or
int3
mov
pop
xchg
stc
scas
not
gs
shlb
scas
out
push
and
cmpsb
jae
leave
lahf
ja
inc
shr
sub
mov
dec
mov
jecxz
jb
or
sti
pop
pusha
test
mov
add
mov
ror
test
pop
push
adc
arpl
fists
enter
xchg
out
cmp
pop
das
arpl
inc
nop
js
lods
cmc
mov
sti
hlt
out
cmp
scas
in
shlb
jmp
sub
push
mov
int
cmp
sbb
movsl
lock
dec
test
outsl
mov
add
adc
outsb
popa
dec
mov
mov
cmp
in
jno
jl
or
inc
adc
bound
and
in
pop
and
push
push
ret
push
nop
push
pop
xchg
repnz
adc
nop
scas
rolb
lret
movsb
xor
jbe
lds
movsl
cltd
vmovdqa32
loope
push
jg
cli
pop
mov
fwait
and
rolb
jp
cmp
push
insl
add
jae
test
or
inc
mov
in
and
mov
jmp
insb
jb
add
iret
daa
jl
aam
sbb
stos
icebp
mov
movl
fs
mov
xchg
jmp
pop
js
cmpsb
test
sbb
jle
loopne
push
jmp
and
pop
jno
inc
mov
sbb
fcmovu
cmc
xchg
jne
das
incb
and
aas
mov
xchg
out
arpl
ficoms
dec
jmp
inc
fs
aad
jecxz
repz
ss
push
popa
inc
xor
cmp
lods
rorl
inc
movsb
pop
mov
mov
xor
loopne
push
jo
jle
mov
ret
pop
inc
ljmp
movsb
and
das
xor
movsb
adc
sti
push
adc
shll
mov
ret
mov
mov
sub
and
clc
cmc
cli
fstpt
outsl
push
sbb
push
in
and
push
jb
push
adc
or
das
cmpsb
lcall
and
pusha
lds
ss
out
das
mov
pop
andb
mov
add
mov
or
xchg
jecxz
xor
mov
xor
cmp
fcoml
pop
rcll
scas
pop
inc
arpl
xor
fdivp
push
mov
scas
mov
push
int3
mov
xor
mov
or
mov
out
cmp
test
popf
cmp
cs
xor
stc
pop
fwait
sub
nop
out
test
stos
pop
sti
mov
icebp
mov
sub
cmp
fbld
sub
xor
call
push
fwait
in
xlat
mov
push
and
and
dec
mul
repz
popa
icebp
jne
repz
xchg
push
cltd
xchg
rcll
addr16
push
mov
stos
add
xchg
mov
fsubl
ljmp
mov
testb
je
adc
pop
hlt
mov
int3
inc
mov
cld
std
out
mov
cmp
jb
lea
scas
xchg
jg
inc
shrl
enter
fcmovnbe
jae
iret
cltd
adc
daa
bswap
add
lock
ja
adc
mov
inc
ljmp
jno
pop
aas
fwait
test
mov
fdivl
lock
das
or
adc
addr16
aad
jle
int3
and
ja
sbb
popl
and
or
push
jne
mov
stos
xor
stc
packssdw
mov
sbb
push
dec
pusha
in
inc
pushf
cmpl
cmc
pop
jmp
fstps
int
lods
sbb
adcl
adc
sbb
lret
cld
add
cmp
stos
imul
mov
imul
dec
adc
dec
movsb
imul
pop
adc
lds
push
add
push
imul
lret
xor
cmp
cwtl
pop
inc
les
popf
ja
sub
into
inc
repnz
ret
xchg
push
jg
fwait
es
xor
push
outsb
in
test
fiadds
shr
or
push
pop
inc
enter
pop
cmp
dec
cmp
xor
mov
dec
sbb
sahf
xor
sub
inc
jmp
rorb
insl
ret
inc
ret
rcr
add
inc
sub
rorl
test
fistl
aam
and
hlt
test
mov
push
inc
dec
or
pop
or
shr
outsl
push
mov
jl
test
cmp
jge
loop
mov
add
cmpl
xor
mov
dec
jge
jae
inc
call
pushf
xchg
jne
lea
andl
sbb
jl
cmp
insl
and
xchg
daa
pop
in
mov
call
mov
dec
cmp
aaa
push
xor
aaa
push
inc
fucomp
mov
loope
jp
mov
int
insl
mov
sub
push
pop
sbb
popf
scas
je
adc
add
push
shll
mov
mov
inc
pop
ja
pop
jecxz
or
xor
cld
mov
jns
or
xor
push
ja
mov
inc
leave
jnp
loope
cmp
xchg
sbb
xchg
loop
rorb
pop
mov
cmp
and
out
push
pop
lret
pop
movsb
repz
int3
sub
pop
enter
and
test
inc
pusha
cld
js
dec
aad
mov
iret
popw
and
jne
std
inc
mov
daa
jg
adc
push
jmp
push
ret
xchg
lret
dec
ljmp
mov
inc
stc
js
xchg
jns
insl
sbb
loop
mov
add
xchg
mov
mov
xchg
out
pop
addr16
lret
bound
cmc
rclb
iret
insl
jg
movsl
out
je
call
repz
pop
iret
sbb
in
nop
or
aas
loop
dec
xor
mov
sbb
inc
test
repnz
lock
gs
sub
rcrb
push
pusha
mov
mov
xchg
sbb
subb
mov
js
push
and
mov
in
inc
mov
mov
pop
ja
jbe
call
mov
xlat
push
cmpsb
gs
insb
push
outsb
or
aam
aam
es
mov
jp
sbb
jne
and
call
add
and
mov
add
dec
cli
cmp
inc
pusha
inc
inc
sbb
mov
movsb
mov
fists
psrad
dec
popf
adc
mov
fnstcw
sbb
ss
imul
jecxz
xchg
inc
bound
jg
mov
jo
pusha
loopne
pop
push
sub
cmpsl
enter
scas
sbb
shlb
lret
jnp
pop
jp
xor
sbb
jmp
push
imul
cmpsb
mov
sarl
cwtl
or
dec
iret
mov
mov
mov
cmpl
popa
scas
or
scas
dec
shrb
and
xor
adc
pushf
lret
into
add
cmp
sub
enter
sub
jmp
insb
xchg
jnp
jbe
popl
dec
loop
push
inc
pushf
aas
sbb
push
mov
push
addr16
push
push
or
data16
xchg
dec
or
jg
pop
fs
iret
xchg
out
adc
xchg
test
stos
loopne
popa
das
xchg
and
fisttpll
cmpsb
sub
test
sub
jmp
int3
pop
mov
inc
popa
pop
dec
std
jle
push
add
pop
out
mov
mov
cmp
xor
xor
xchg
in
push
into
adc
cs
shlb
std
adc
mov
push
pushf
cwtl
gs
pop
imull
jecxz
xchg
jl
add
repz
rcll
inc
in
lock
pop
in
add
test
rol
or
xchg
adc
mov
cld
into
add
and
ret
jmp
sub
mov
and
mov
dec
mov
mov
push
out
pop
push
pop
sbb
sti
data16
add
or
popa
jno
cltd
scas
shlb
xlat
lret
mov
mov
inc
aam
adc
inc
adc
xor
fcmovu
pop
cmpsl
hlt
inc
sahf
fldenv
outsl
mov
mov
jb
xchg
leave
jns
mov
out
mov
lret
arpl
or
xchg
andb
mov
sub
xchg
dec
adc
lahf
or
addl
jle
ss
mov
pop
mov
push
push
rorl
xor
pushf
adc
sub
std
shlb
dec
movb
inc
push
pop
xchg
rorb
mov
add
and
sahf
cmp
daa
mov
js
xchg
mov
dec
sahf
or
add
outsl
and
mov
xlat
ljmp
cmc
shl
out
rolb
adc
mov
inc
fs
sbb
repnz
mov
xchg
sub
test
jmp
xor
xchg
add
jne
imul
pop
xchg
out
ljmp
push
fcomps
loopne
adc
or
jno
imul
lock
jecxz
pop
or
and
add
in
push
imul
cwtl
xchg
faddp
lods
pop
adc
jge
pop
pop
ljmp
int3
insl
andl
cld
push
sbb
into
mov
loopne
test
mov
inc
sub
fwait
mov
rclb
fsubr
rorl
dec
xchg
bound
sbb
dec
imul
lods
xor
andps
xchg
dec
decl
les
out
add
jne
mov
xor
adc
xchg
insl
scas
shrb
cmp
rcll
fs
imul
and
ficoms
mov
sub
shlb
mov
sub
dec
and
je
out
jp
scas
jbe
sub
dec
into
mov
sbb
imul
mov
dec
pop
clc
ja
loop
inc
sbb
mov
loopne
out
xchg
testb
xchg
loope
sub
in
mov
push
jne
fsubs
or
test
pop
push
in
mov
in
xchg
mov
ret
mov
jo
mov
xor
test
cmp
neg
inc
dec
sub
test
les
mov
jmp
push
iret
sbbb
xchg
mov
in
push
jae
sbb
out
mov
jne
xor
ljmp
lods
addr16
aas
test
sbb
sub
sbb
mov
push
repnz
mov
arpl
mov
inc
ret
dec
xchg
pop
iret
aaa
xor
std
stc
cs
fcmovnbe
jne
decb
or
adc
pusha
add
jmp
scas
in
cmp
mov
pop
pushf
mov
xchg
mov
movsb
pop
sub
add
lret
mov
add
loopne
arpl
or
xor
xchg
cltd
inc
dec
jp
inc
jns
pop
jg
cmp
push
dec
pop
add
mov
and
stos
add
dec
fbstp
jecxz
cmp
xlat
xor
call
testl
lcall
mov
lahf
dec
lret
movsl
mov
popl
pop
bound
insb
leave
sub
and
add
clc
adc
repnz
jnp
sbb
mov
flds
lods
or
es
sub
sub
orl
sbb
xchg
les
xchg
sarl
adc
and
cmovnp
mov
cltd
divb
popa
mov
xor
lds
daa
sbb
std
in
ss
mov
and
pop
subb
cmp
cltd
mov
rcrl
add
insl
xor
les
dec
jg
stos
pop
cltd
lock
hlt
es
lods
mov
mov
repnz
in
out
push
or
stos
jecxz
jne
sub
inc
das
scas
test
cmc
lds
push
cmp
pop
fs
int3
jge
cmpsl
test
push
inc
imul
setae
out
cld
pop
stos
jae
jae
mov
jne
enter
shlb
add
dec
lods
sbb
mov
cmpsl
fdivl
inc
test
push
pop
hlt
addr16
sub
push
jne
mov
loopne
xorb
cs
subb
int3
xchg
push
mov
mov
scas
xor
dec
dec
inc
out
and
pop
push
mov
jp
loopne
outsb
movsl
stos
adc
mov
xchg
nop
sbb
jge
popf
rcl
sbb
aaa
push
push
or
stos
inc
repnz
popa
sbb
adc
sub
sbb
xor
enter
out
sahf
jbe
fmulp
adc
incb
xchg
mov
js
cmp
mov
xchg
setns
test
cmp
jmp
and
cmp
and
push
insb
daa
dec
movsb
push
movsb
add
jne
cmc
data16
aas
xchg
or
xchg
pop
ficompl
daa
jnp
iret
std
outsb
xchg
mov
adcl
lretw
rorl
cmp
mov
mov
sub
push
push
push
movsb
aad
dec
test
loopne
sub
or
stos
mov
ret
incb
icebp
outsl
popf
adc
mov
lods
inc
cmpsl
add
mov
sbb
addb
add
repnz
and
lret
mov
lock
or
mov
inc
jp
aaa
xchg
pop
mov
mov
aas
repz
dec
aas
push
ret
mov
mov
adc
lds
mov
mov
push
sbb
int
jmp
fdivr
xchg
inc
lea
lahf
push
cmp
xchg
incl
mov
iret
out
sti
push
test
rcrb
xchg
jns
jbe
std
mov
inc
dec
jnp
subb
arpl
dec
cmpb
cmp
loope
js
icebp
xchg
add
das
pop
pop
aaa
dec
stos
mov
lret
sbb
lds
mov
push
inc
mov
xchg
into
rorb
push
add
mov
lret
inc
pushf
lahf
outsl
jae
mov
jne
incl
outsl
outsb
sbbb
mov
sub
sub
cmpsb
sbb
mov
mov
pop
push
jns
inc
sbb
fnsave
je
outsb
adc
jge
notl
cltd
aaa
sahf
jl
mov
cmp
int3
cmc
jbe
add
and
sbb
lea
push
sbb
push
movsl
call
hlt
movb
push
jns
shrb
sub
inc
dec
insb
jne
fistl
xor
sub
pushf
lret
inc
iret
cmp
push
adc
adc
jnp
enter
cmp
push
xor
mov
lods
xchg
inc
adc
sbb
je
dec
in
shlb
mov
cmp
popl
stos
aas
mov
aaa
push
sub
repnz
mov
add
movsl
push
stos
popa
dec
aam
fidivl
out
scas
mov
negl
iret
and
fmull
push
xor
test
mov
ss
adc
es
xlat
sbb
jbe
add
jae
push
jl
and
jg
imul
fistpl
jmp
ljmp
cmp
xor
ds
insb
andl
pop
xchg
sub
frstor
mov
ficompl
lret
add
mov
mov
push
shll
push
push
xchg
pop
imul
sub
jns
inc
pop
mov
out
loopne
shrb
mov
mov
xchg
cld
inc
gs
pop
sarb
ds
dec
int
mov
add
lret
push
fiadds
mov
jle
cmc
or
mov
xor
lret
jecxz
adc
mov
dec
in
push
out
out
outsb
into
cli
shlb
repnz
pop
dec
inc
xchg
test
mov
jno
ficoml
in
sbb
pop
xor
mov
sbb
and
inc
loope
mov
mov
leave
dec
rcll
inc
test
jno
inc
push
push
call
xchg
sub
lcall
data16
iret
jp
subl
add
fcmovnbe
jns
cmp
inc
cmp
push
es
and
mov
jae
repz
addb
xchg
popa
or
das
cmpl
inc
sahf
pop
mov
in
mov
lods
mov
sti
xchg
loope
das
cli
jecxz
ss
or
repnz
nop
nop
dec
into
es
das
les
and
push
mulb
ret
aam
dec
xor
adc
xor
insb
mov
lret
fdivr
inc
add
mov
mov
repnz
test
outsb
js
pop
rcll
ret
mov
xchg
sarl
and
arpl
mov
std
repz
sbb
cmc
enter
out
sbb
shlb
hlt
push
das
push
add
std
and
pop
lret
adc
into
ficomps
adc
cmpsl
in
sub
cmp
or
loop
dec
out
dec
jmp
shr
pop
push
or
testb
mov
shr
pushw
push
cli
xchg
push
jno
xlat
sbb
sub
ret
test
adc
decb
and
pop
imul
andl
mov
mov
lds
lock
pop
jl
inc
out
das
xchg
sbb
dec
in
push
popa
imul
inc
jb
cmp
jmp
mov
addr16
out
scas
sub
cld
mov
mov
bound
and
icebp
jge
lock
pop
push
out
fisttpl
subl
jg
or
inc
dec
push
in
scas
sar
cmpsl
pushf
mov
in
push
mov
loopne
xchg
loope
push
lods
es
mov
ret
mov
inc
sub
dec
fldl
push
mov
cmp
nop
outsb
enter
mov
insb
fisubl
jg
mov
neg
sbb
pop
jle
mov
adc
lcall
in
mov
outsb
std
scas
popf
fstpl
pop
xchg
push
enter
arpl
lds
mov
lock
sbb
push
push
mov
arpl
adc
mov
mov
leave
out
dec
xor
adcb
mov
outsl
pop
cs
mov
aaa
lcall
outsl
or
jo
ljmp
lret
xchg
gs
lret
ficomps
push
out
sbb
cli
lahf
dec
add
push
imul
mov
addr16
and
or
lret
mov
shrb
jmp
out
movsb
pop
xor
dec
out
imul
cld
mov
sbb
sub
jle
arpl
lds
mov
test
xor
mov
xchg
lcall
cld
dec
into
lds
iret
and
xchg
das
in
sub
aam
enter
or
push
imul
pop
inc
lock
pop
fcomip
push
in
loope
xchg
inc
outsb
sti
and
xchg
lock
sbb
inc
std
jg
mov
popf
pop
add
bound
xchg
cmp
mov
mov
jp
outsb
mov
stos
and
lods
fs
mov
ret
pop
pop
push
inc
push
and
int
jne
es
addr16
and
or
out
dec
out
xchg
push
jo
push
adc
mov
stos
xchg
lret
movsb
das
push
add
out
cmp
push
inc
dec
jns
dec
jae
xor
mov
rcrl
or
jle
and
inc
inc
add
push
call
bound
test
pmaxsw
add
iret
mov
mov
movsl
ds
pushf
in
push
aas
clc
pop
fbld
fwait
into
add
ds
cmp
jb
push
mov
fmuls
sub
lods
lock
dec
mov
ds
and
push
dec
es
mov
jb
outsl
icebp
lahf
or
mov
mov
in
das
sti
cmpsb
push
inc
aad
push
mov
divb
jns
daa
jno
cmpsb
mov
and
sub
test
inc
mov
xor
and
out
mov
imul
pop
movsb
push
stos
decb
jge
clc
out
mov
int3
cs
add
les
xchg
push
les
add
imul
mov
pop
in
fbstp
aam
sbb
not
mov
add
and
loop
or
in
mov
inc
dec
push
in
inc
mov
in
mov
xchg
cmp
lcall
add
imul
icebp
in
sarb
repnz
inc
out
dec
adc
adc
lods
xchg
cmp
xchg
aad
push
pop
sbb
cmpsl
into
jo
pop
push
into
or
cli
fs
dec
test
fists
xor
sahf
fimuls
ljmp
mov
pop
lods
das
xlat
clc
add
imul
pop
cli
movl
cmp
cmp
inc
adc
jbe
jecxz
or
adc
xchg
xorb
enter
ret
cvtps2dq
js
adc
mov
int
jns
jg
or
pop
xchg
mov
sbb
repnz
inc
pop
test
clc
scas
imul
out
in
enter
sti
inc
sub
pop
jp
daa
test
push
nop
pop
ficoms
in
mov
test
sahf
pop
xor
arpl
inc
xlat
std
mov
sub
bound
lods
jge
jle
inc
cmc
movsb
sbb
mov
int
ret
push
dec
cmp
xchg
sub
mov
aaa
mov
add
cmp
push
out
push
or
jb
stos
and
or
roll
cs
test
or
or
fadds
arpl
inc
pop
sti
das
and
es
mov
arpl
xchg
test
sbb
out
cmp
sub
mov
mov
ss
mov
jo
imul
or
jae
decl
xchg
dec
pop
testb
sbb
adc
in
jo
jl
or
pop
aas
jge
xor
fdivrl
cmp
mov
xorb
mov
pop
pop
icebp
jno
adc
jecxz
imul
xor
lds
sub
pusha
cld
clc
adc
movsb
imul
stos
xchg
push
hlt
icebp
sti
push
xor
adc
test
mov
fdivrl
adc
xor
xchg
sub
adc
fidivl
test
pop
mov
jnp
adc
daa
mov
gs
sbb
sub
push
sub
pop
xchg
pop
dec
lods
jbe
xchg
roll
icebp
stc
xchg
scas
cmp
in
xchg
fidivrl
pushf
xorb
jecxz
lock
int3
mov
mov
into
mov
and
mov
fwait
lods
jg
jg
jg
ret
cmpsb
fcoml
pop
lds
popa
mov
sbb
mov
popf
dec
sahf
aaa
jg
aas
sbb
and
or
mov
adcb
sbb
adc
pop
ljmp
push
and
xor
jae
xor
jno
cmp
mov
xor
and
mov
add
arpl
push
or
add
jl
in
add
jecxz
lcall
mov
pop
jne
aaa
sbb
jbe
scas
fmul
mov
sbb
cwtl
inc
push
jae
cmpsb
ja
dec
sti
xchg
jne
push
pop
divl
pop
and
jp
nop
lret
and
adc
mov
shrl
pop
sti
add
les
cmpsl
lret
dec
xchg
xchg
mov
outsb
push
add
gs
xor
xchg
popf
cmp
fildl
insl
pop
mov
mov
lahf
imul
jl
rclb
cs
jb
dec
fnstenv
jne
enter
aaa
xchg
add
aad
xor
mov
repz
or
dec
sbb
pop
imul
push
insl
and
inc
stos
inc
fldenv
pop
sahf
jae
mov
pop
addr16
nop
adcl
lock
xchg
jp
dec
outsb
jne
cmc
aam
mov
fidivs
cmp
push
or
pop
add
sbb
mov
pop
out
idivl
sbb
pop
or
or
pop
rcr
mov
pop
sbb
dec
in
dec
xorl
xor
pop
jae
cmp
fbstp
daa
xchg
or
test
xor
jno
insb
xor
push
push
mov
mov
jne
push
movsl
and
cmp
data16
aam
fs
pop
xor
mov
sbb
es
mov
xchg
sub
test
js
cmpl
inc
mov
adc
pop
inc
sbb
mov
test
ficoml
lods
sub
mov
push
sbb
adc
loopne
or
xchg
mov
insb
xchg
std
xchg
and
jge
jno
mov
in
daa
xchg
cmp
ret
imul
mov
nop
mov
push
jg
mov
or
cmp
test
push
push
imul
ret
cmpsl
or
lahf
mov
lods
and
outsl
stos
jp
cmpxchg
in
fstpl
scas
jns
into
test
cmp
mov
add
dec
rcrl
mov
icebp
jp
xchg
into
icebp
and
xor
jg
repnz
xchg
push
insl
push
jbe
data16
cmc
mov
add
and
add
das
movsl
xor
js
or
and
adc
dec
je
int3
or
add
or
sub
repz
or
lcall
stc
dec
or
arpl
sarl
rorb
mov
in
adc
push
or
lds
imull
mov
push
cmpxchg
fldenv
stos
or
rcl
loope
cmpsb
xor
push
sub
ljmp
push
or
out
fnstsw
rclb
mov
sbb
dec
pushf
xchg
ds
push
lods
adcb
add
fisttpll
pop
jmp
push
out
xor
cmp
arpl
and
jecxz
xor
fldt
int3
stos
and
mov
insl
adc
mov
cmp
inc
or
sbbl
jge
sbb
std
mov
and
xor
pop
inc
out
insb
ds
subb
cmpsl
mov
add
mov
fs
aaa
inc
scas
cli
popa
xchg
cmp
fdivrs
les
bound
or
std
mov
dec
mov
sahf
filds
aam
pop
push
mov
in
jbe
jo
repz
jbe
das
adc
xor
loopne
jbe
sarb
pop
negl
in
cmp
ja
push
cmp
pop
add
sbb
and
mov
cmp
subb
jae
test
enter
sub
in
and
mov
dec
fbstp
sbb
cmp
adc
cmp
pcmpgtd
daa
fldl
into
sub
leave
mov
mov
xchg
pop
stos
sahf
jbe
movhps
icebp
dec
int
or
aad
pushf
icebp
mov
dec
js
sub
mov
push
cld
or
xor
int
xlat
dec
decl
push
mov
js
xor
jg
pop
js
mov
data16
jne
cmp
sarl
jle
jl
cmp
jmp
jl
xchg
fistpl
hlt
fwait
jno
and
shl
cs
xor
push
in
cli
or
mov
pop
lcall
scas
cwtl
aad
fmul
sbb
dec
push
sbb
ret
mov
ljmp
jg
scas
jecxz
mov
enter
in
ds
xchg
mov
adcb
and
ja
dec
loopne
pop
outsl
pop
xchg
int3
aaa
mov
jmp
sbb
aam
push
cmp
fwait
iret
fistpl
jecxz
subl
movb
loop
mov
mov
jmp
sub
adc
jo
data16
push
scas
mov
rclb
loope
inc
and
fs
jg
pop
hlt
lds
pushf
shll
pop
aaa
add
repnz
call
adc
in
ds
jb
aad
dec
sub
push
sbb
xchg
outsl
pop
lret
aaa
out
loop
jmp
mov
mov
sbb
outsl
dec
fwait
loope
fbld
gs
cmpsb
cmp
mov
pop
and
insb
mov
fbld
sbb
push
xchg
jle
xchg
test
loope
mov
push
addr16
fcoml
or
clc
mov
cmc
push
dec
and
push
int3
push
aas
cwtl
shlb
into
sub
std
arpl
dec
dec
xchg
sub
inc
dec
mov
sub
inc
iret
movsl
jge
adc
mov
pusha
pop
insb
testl
lret
arpl
inc
pop
push
repz
aas
sbb
push
add
cmc
iret
mov
loopne
add
aam
mov
jne
dec
mov
into
mov
inc
push
add
jo
addb
invd
mov
sub
jns
sbb
jbe
lahf
call
frstor
sbbl
cwtl
add
sbb
push
and
inc
fdivrl
lea
xchg
repnz
ljmp
add
je
mov
aad
scas
and
dec
push
nop
mov
or
lock
and
mov
loopne
shlb
push
and
adc
mov
cmp
xor
jne
mov
bound
fiaddl
shlb
jb
pop
push
push
test
fwait
mov
shrb
inc
inc
imul
mov
sarl
or
nop
mov
dec
ret
pusha
add
pop
push
or
jmp
dec
pusha
aas
jge
mov
xor
add
not
ds
push
sub
cmpsl
shlb
and
sti
inc
sub
mov
cs
movsl
push
movsl
or
mov
bound
mov
push
sbb
rolb
jns
loope
mov
jp
push
loop
shl
inc
shl
push
scas
bound
lea
incl
dec
sub
notl
cmpsb
lds
lcall
imul
cld
clc
in
fbstp
leave
jno
push
aaa
mov
loop
and
repz
dec
mov
pop
nop
movsl
push
sbb
aas
hlt
sbb
std
mov
ds
fisttpll
lods
sub
faddl
iret
cmp
lods
int
mov
mov
xor
mov
sti
dec
mov
jmp
jecxz
inc
pop
loop
lret
pop
aad
mov
xchg
jbe
pop
xchg
cmp
test
push
dec
notl
das
das
inc
xchg
xchg
mov
sbb
add
fnsave
jno
add
das
dec
in
push
call
and
stc
int3
mov
outsb
xor
push
push
xlat
enter
pop
hlt
cwtl
jno
ret
push
clc
and
outsb
test
and
mov
dec
jl
or
add
and
mov
lret
mov
fwait
xchg
mov
lret
ret
jg
outsl
iret
movsb
xchg
dec
stos
ds
sbb
mov
lock
je
xlat
mov
jo
xchg
aam
xorb
mov
xchg
int
mov
cmp
sti
pop
inc
adc
ficoml
pusha
insb
mov
icebp
add
mov
inc
mov
or
and
pop
cltd
mov
and
push
roll
push
and
daa
outsl
mov
fsubs
mov
xchg
sbb
sbb
scas
stos
dec
gs
mov
je
xchg
movsl
shl
test
adc
sahf
outsl
cmp
mov
imul
jne
sahf
repz
mov
jnp
xor
jb
lret
mov
outsb
add
rcrb
pop
push
out
pop
pop
or
jae
loopne
movsb
jns
jmp
enter
sub
cmovo
cmp
and
cmp
jp
mov
add
push
mov
jmp
in
adc
lods
mov
in
rcrb
inc
arpl
bound
jbe
xchg
loope
jno
in
jae
aas
ljmp
push
pop
xchg
mov
dec
mov
rol
add
rorl
xor
dec
sbb
clc
xchg
repz
jg
lret
push
xor
inc
shll
hlt
fcomp
out
inc
js
ficompl
iret
add
add
es
clc
mov
push
mov
jnp
filds
push
pop
xchg
sbb
sahf
push
xchg
cmpsl
xor
or
out
out
jb
jecxz
mov
push
lcall
mov
adc
xor
sub
jns
push
dec
pop
cmc
mov
sub
pop
fsubl
ds
pop
test
ret
sbbl
popl
mov
sub
push
xor
das
cwtl
ljmp
lret
sarl
iret
jae
mov
in
cmp
adcb
and
fldt
cmp
sbb
imul
push
scas
bound
dec
hlt
fbld
push
punpckhwd
jo
dec
aad
cmp
loopne
sbb
mov
call
mov
cli
repnz
icebp
arpl
mov
repz
pusha
xlat
dec
cmp
jo
jp
arpl
nop
sub
imul
sub
test
test
mov
mov
sahf
push
lea
pop
cmp
adc
mov
jae
in
loopne
xlat
adc
movb
hlt
gs
addr16
add
or
ljmp
dec
inc
jb
leave
clc
scas
in
mov
xchg
fldln2
jno
cmp
jecxz
inc
dec
mov
xor
lods
cmp
add
pop
and
push
xor
aam
xchg
xor
push
dec
pop
push
es
lods
cs
out
js
pop
test
insl
int
aad
ficoms
scas
dec
lahf
outsl
or
ret
nop
mov
mov
bound
enter
jns
sub
rcl
push
and
push
pusha
add
inc
mov
enter
pop
shl
add
andl
xchg
ficompl
add
jno
mov
ret
dec
xchg
not
fisttpll
sbb
cmp
cmp
loope
adc
pop
mov
and
sub
mov
jg
dec
mov
push
cmpb
pop
js
loope
bound
cmpsl
icebp
aas
jle
inc
mov
addb
inc
iret
cmp
xor
stc
out
mov
jne
jne
nop
sbb
nop
scas
sbb
loop
sbb
jle
sub
addr16
insl
jmp
sbb
cmpsl
lret
and
hlt
sbb
jle
cmpsl
cwtl
dec
insb
int3
or
les
lcall
je
fcomi
movsb
jmp
xlat
inc
sbb
test
push
push
jmp
cmp
int
add
mov
addl
outsb
mov
scas
rorb
ret
inc
loop
jno
or
push
xor
stc
inc
test
sbb
cmp
cmpsl
and
rorl
cmc
jge
data16
add
daa
push
inc
dec
mov
enter
cmp
mov
push
fucomp
pop
jno
pop
and
jo
mov
in
imul
pop
jge
inc
movsb
leave
inc
mov
lahf
lods
stos
and
test
imul
adc
jmp
aam
mov
fists
nop
fsts
stos
loope
jae,pt
subb
add
jmp
fcomps
cmp
mov
add
cmpsl
xor
stos
push
ds
mov
adc
gs
jle
lods
daa
mov
ret
push
pop
mov
jbe
sbb
int3
add
push
jl
xchg
lds
jo
and
lods
dec
dec
xchg
xchg
add
mov
xchg
aad
std
mov
inc
push
clc
xor
lock
sub
adc
xchg
sbb
jae
dec
mov
in
rcrl
je
xor
imul
pushf
imull
mov
push
enter
ljmp
shll
fcmovb
add
inc
into
aaa
insl
clc
ds
sub
mov
mov
jnp
icebp
idivb
pusha
lods
xor
push
in
mov
push
sbb
lret
subb
dec
scas
jl
sbb
adc
aad
pop
loop
out
mov
cmp
stos
pop
divl
adc
popf
ss
std
pop
pop
adc
mov
mov
mov
gs
xor
scas
mull
mov
sub
pop
add
dec
jmp
push
lret
cmp
rorl
lret
rcll
mov
sbb
adc
sbb
pop
xchg
js
popf
and
inc
test
insl
sbb
clc
adc
jge
or
bound
int3
and
dec
pop
shr
mulb
or
sub
mov
sub
mov
adc
shr
daa
movsb
mov
mov
mov
mov
sbb
cld
push
mov
inc
push
andb
xchg
jmp
xrelease
mul
mov
adc
xchg
push
xchg
dec
mov
mov
mov
mov
bsr
rolb
jb
sub
xor
aad
shlb
pop
jl
xor
imul
jg
das
adc
movsb
mov
pushw
sbb
aaa
dec
sbbb
iret
sbb
mov
xchg
lret
in
fcomps
push
out
lds
adc
psubusb
ja
es
enter
in
sbb
clc
sbbl
mov
clc
xor
pop
dec
enter
dec
lret
les
sbb
or
xchg
push
and
xchg
adc
add
pandn
or
fwait
dec
out
dec
sub
jne
mov
sarb
sbb
sub
push
test
outsl
sbb
mov
ljmp
mov
jae
fstpl
cld
movsb
scas
shl
jmp
mov
adc
les
fldcw
mov
xor
cmc
xchg
jmp
mov
imul
mov
inc
adc
push
leave
jo
faddl
fs
fadds
in
out
insb
mov
jne
sub
notb
cs
loope
cmp
pop
hlt
std
mov
lock
cltd
sbb
dec
pop
push
jecxz
imulb
dec
mov
test
add
adc
outsb
xlat
pop
mov
add
jle
mov
xor
xor
pop
cwtl
ss
xor
jecxz
out
pop
or
add
rcl
and
cmpsb
cli
mov
pop
cmpsb
adcb
cmp
and
int
shll
hlt
pop
push
jmp
test
lret
mov
lock
sahf
dec
mov
jg
andb
jo
mov
adc
push
mov
popa
movsb
repz
jg
imull
cld
jl
pop
fsubl
pushf
shlb
adc
xchg
sbb
inc
pop
outsl
push
outsb
add
sub
mov
pop
jge
cltd
sub
mov
popa
pop
subl
xor
xor
ficoml
lret
pusha
lds
test
add
or
add
add
mov
fisubrs
scas
pop
outsl
scas
rolb
rorb
dec
arpl
fwait
jno
push
outsl
mov
mov
xor
pop
fisubrl
xchg
arpl
sbb
insb
xlat
mov
fs
aad
in
jl
lock
add
mov
scas
loop
ljmp
cmp
or
testl
mov
icebp
fs
push
mov
je
xchg
out
fs
mov
test
xlat
loopne
xor
pop
fnstcw
movsl
arpl
push
scas
jo
or
scas
jnp
pop
es
or
fbld
dec
pop
test
frstor
xchg
enter
stos
fildll
test
mov
pop
dec
std
idivb
aad
and
or
xor
and
je
xlat
scas
repnz
xlat
sahf
add
shrb
out
cmc
inc
mov
pop
mov
cmp
inc
xor
inc
mov
addr16
mov
mulb
int3
pop
adc
and
pop
bsr
imul
pop
lret
loop
aaa
loopne
lcall
sub
inc
pop
pop
adc
in
pcmpgtb
enter
lret
cmpsb
test
mov
aas
sbb
nop
push
ss
or
push
push
sub
mov
jns
cmpsl
mov
or
out
jns
jno
mov
je
sub
xor
movsl
arpl
ret
clc
xor
ja
push
icebp
xor
rol
mov
loop
mov
jmp
lret
xchg
fs
scas
xchg
std
lea
mov
sbb
adc
and
pop
rcr
pop
addl
shl
sub
xor
add
mov
pushf
cmpsl
in
or
fistps
test
je
and
dec
dec
in
push
sti
mov
jne
xlat
out
std
mov
std
in
in
xchg
fs
push
push
pop
loopne
clc
decl
adc
push
test
cmp
orl
inc
inc
insb
fimuls
pop
pop
leave
inc
pop
ret
xchg
push
das
sub
ss
rclb
mov
aas
fstl
lret
lcall
aas
cmp
dec
mov
push
icebp
mov
mov
out
pop
mov
pop
nop
mov
cmp
push
ljmp
leave
or
jle
imul
and
mov
out
add
das
dec
ret
inc
fimull
inc
in
fcomi
aas
das
dec
mov
out
sub
adc
mov
xchg
xor
dec
sahf
mov
das
push
xchg
jns
adc
jp
xchg
addr16
push
mov
sbb
adc
lods
mov
inc
imul
sub
inc
addr16
cli
jge
xchg
xchg
push
inc
cmp
mov
jnp
xor
xor
jge
lcall
add
int3
pop
xor
loop
sbb
lds
add
jno
aad
sbb
jo
movsl
sub
or
leave
pop
xchg
leave
inc
lods
pop
pop
rorl
dec
mov
mov
jns
cmp
add
sub
out
std
and
mov
insl
adc
stos
hlt
roll
fcmovnbe
mov
shl
xchg
sub
push
loope
enter
clc
jnp
xor
mov
loope
and
es
mov
or
jnp
pop
fstps
fsubrl
imulb
bound
xor
and
inc
cmpsl
xchg
cwtl
in
repz
aaa
pop
lods
cmp
das
mov
loop
inc
jo
or
mov
insl
jns
push
sub
mov
or
dec
cmp
pop
adc
stos
ds
mov
cmp
pusha
sub
dec
push
int
shll
pop
in
sub
xchg
and
jl
test
jg
ljmp
or
fstpt
cmp
sbbl
out
mov
in
stos
iret
pop
xor
sub
dec
or
loopne
test
repnz
mov
pop
xor
pop
pop
bound
adc
repnz
dec
sbb
pop
icebp
mov
mov
cmp
dec
adc
mov
cmp
popl
fiadds
xchg
pop
aad
daa
and
insl
cmp
cmp
pushf
push
sahf
xor
xchg
fcmovnu
iret
jmp
andb
add
push
mov
xchg
jne
jae
xchg
leave
dec
popa
push
loop
gs
repnz
xchg
inc
cli
xor
mov
cmc
mov
xchg
inc
xchg
mov
push
jnp
sbb
test
inc
or
imul
jmp
jno
adc
jns
ja
xor
mov
adc
lock
xchg
mov
pop
daa
mov
lods
mov
int3
ljmp
dec
aad
ret
xchg
lcall
aam
and
xchg
leave
mov
pop
sub
scas
hlt
push
mov
mov
push
jae
and
pop
cmp
lods
add
jmp
clc
push
adc
repnz
pop
outsl
mov
or
lahf
pop
cmc
in
xor
ret
inc
sti
cmp
and
ret
cmp
insb
adc
xchg
daa
loop
nop
repnz
cwtl
ficoml
shlb
cmp
sub
add
pop
jns
test
mov
and
mov
je
dec
movsb
mov
pop
xor
sbb
jl
jo
xchg
ja
scas
xlat
scas
cmp
xchg
outsl
mov
outsb
or
mov
sahf
jne
sub
cwtl
mov
push
mov
std
cmp
cmp
adc
jne
insb
push
dec
mov
cmpsl
cmpsb
xor
pop
stos
in
addr16
sbb
sbb
jle
mov
jg
cmp
xor
lcall
faddl
cmpsb
jmp
inc
cmp
adc
clc
xchg
push
pop
nop
and
mov
and
in
mov
call
mov
std
insl
add
pop
jae
xor
test
dec
rcl
out
sub
in
ret
push
xchg
mov
shll
jo
cmp
xor
mov
mov
repnz
sarb
sub
call
je
fistl
mov
mov
jl
jmp
adc
jne
lret
cltd
loopne
in
gs
sub
xchg
lret
mov
leave
int3
jmp
mov
xlat
inc
jns
mov
jmp
pop
cs
jle
xchg
adcb
lret
test
orl
xchg
gs
orl
sbb
inc
push
mov
cmpsl
dec
xchg
sub
fdivrl
inc
sarb
sub
dec
and
bound
mov
lcall
lcall
push
add
mov
cmp
push
mov
mov
xor
fucomip
in
mov
cs
and
add
sbb
xor
lock
adc
imul
mov
pop
pop
bnd
inc
repnz
push
lods
pop
sbbl
push
xchg
es
add
faddl
sarb
sbb
sub
sub
dec
mov
sbb
or
into
sub
adc
in
faddl
push
push
push
xchg
and
add
gs
mov
xor
mov
mov
iret
nop
sahf
aaa
adc
mov
cli
sbb
rcll
push
mov
fldt
dec
push
lds
ret
sarl
cld
mov
imull
sub
cmp
in
test
jno
test
lret
cmp
jns
mov
fsubs
xor
daa
mov
es
sbb
xchg
dec
pop
cmp
adc
lods
sub
enter
adcl
aam
or
or
inc
insb
pop
cmpsb
clc
pop
mov
fwait
jns
cmp
pop
decb
arpl
jns
in
arpl
mov
push
push
mov
mov
lcall
jle
mov
mov
adc
mov
pop
xchg
adc
popa
xchg
movsb
lock
push
testl
mov
add
sbb
mov
stos
loopne
enter
pushf
adc
push
je
sbb
cmpsb
test
and
push
in
out
push
xchg
pop
mov
lock
movsb
mov
aad
pop
rorl
xchg
sub
cmp
movsl
xchg
imul
mov
push
jae
mov
std
cmpsb
jbe
inc
mov
lea
push
mov
je
std
movb
std
fdivrl
push
out
push
adc
and
cwtl
ret
or
mov
cmpl
and
or
dec
test
cwtl
in
xchg
jg
mov
xor
daa
ja
mov
rclb
xchg
stos
dec
xchg
mov
jle
mov
adc
adc
jno
xor
inc
in
and
push
in
jg
or
xchg
pop
dec
push
jo
push
mov
arpl
repz
fcomps
xchg
mov
xor
shll
pop
loope
movb
cmpsl
mov
je
mov
sub
xchg
outsl
pop
iret
ljmp
add
daa
mov
mov
xchg
xchg
mov
add
ja
dec
sbb
adc
jne
mov
xchg
inc
lea
xor
fadd
dec
lea
jne
push
test
pop
jae
stos
or
ljmp
es
lahf
negb
mov
sbb
xor
jne
pop
test
cmp
mov
pop
jmp
mov
jg
inc
dec
dec
enter
inc
les
popf
adc
daa
sbb
repz
xor
xchg
mov
jg
pushf
mov
test
ljmp
push
xchg
dec
and
sbb
iret
dec
xchg
fwait
sahf
inc
add
or
lahf
adc
sub
aam
sub
fildll
and
xor
aaa
xor
ds
data16
adc
adc
ss
sbb
inc
in
sub
jne
cs
mov
cltd
leave
jmp
or
xchg
stc
out
mov
sub
mov
mov
dec
enter
sbb
xor
xchg
and
jle
pop
xor
mov
sbb
mov
xchg
jae
and
cltd
or
dec
adc
dec
jg
cmpsl
mov
and
lret
add
outsb
dec
test
scas
popf
les
outsl
and
mov
inc
fxam
xchg
aaa
cli
loope
sub
cmp
and
stc
iret
aad
mov
out
inc
mov
mov
imul
imulb
sub
outsb
cmp
xchg
stos
cmpsb
add
cmp
fdivl
mov
aam
sbb
scas
adcb
pushf
aas
sub
arpl
aas
imul
mov
push
in
inc
cli
dec
popa
int3
movsl
es
xor
adc
pushf
mov
lds
cmpsl
mov
jnp
fsubrs
js
pushf
sbb
loop
hlt
push
cs
jbe
rorb
jecxz
stc
ja
jbe
inc
pop
in
sub
rorb
sbb
mov
dec
add
stos
rcr
sbb
xchg
cs
push
mov
jbe
or
cmp
iret
and
and
and
fidivl
lds
push
mov
cs
in
inc
sbb
dec
lret
add
movb
mov
mov
sbbl
xchg
leave
out
iret
pcmpgtb
adc
jno
faddl
pop
xor
xchg
out
mov
push
out
xchg
clc
jle
add
adc
and
mov
push
cltd
push
lret
add
cmc
inc
or
or
call
jl
or
pop
insb
scas
rorl
mov
or
pop
scas
dec
imul
mov
cmpsl
outsl
adc
xchg
orb
int
pop
cmpsb
out
add
sbb
pop
jnp
decl
mov
xor
shlb
lods
mov
and
movsb
and
pop
inc
ficomps
movsl
xchg
scas
or
push
testl
mov
inc
push
pop
push
push
ficoml
jno
add
adc
inc
js
in
bound
rcl
push
in
imul
mov
test
testl
and
js
xor
add
jno
mov
xchg
mov
pop
mov
xchg
push
cmpb
mov
adc
mov
adc
ret
push
xor
out
popf
jae
ja
and
mov
mov
cmc
ss
mov
shrb
jecxz
mov
aas
movsl
loop
or
cld
and
rol
jne
js
inc
stc
test
mov
or
stos
add
sub
mov
and
jl
fcomip
rorl
mov
repz
cmp
add
test
out
xor
es
int3
pop
sbb
les
mov
xor
mov
adc
xchg
mov
and
or
cld
test
xor
inc
fwait
dec
inc
ss
sbb
pop
call
arpl
popa
sbb
sub
imul
mov
inc
jo
aam
xchg
and
push
push
push
pop
aad
ret
add
outsl
scas
scas
call
enter
mov
mov
pop
inc
in
inc
inc
out
fmul
bound
bound
lock
pusha
aaa
sahf
xchg
rcll
in
js
adc
rcll
push
pushl
leave
pop
roll
sbb
lea
or
cld
lock
das
push
mov
js
mov
push
sub
cs
push
repnz
ret
loopne
jnp
idivl
les
jb
leave
daa
push
xor
cmp
in
fisubs
jne
addr16
pushf
jge
es
jge
imul
adc
add
adc
outsb
sahf
out
cli
dec
and
cmp
xor
shll
sbb
lret
fcomp
inc
and
cwtl
inc
rcll
enter
pop
ficoml
imul
fwait
pop
ret
leave
push
mov
xor
outsl
add
sbb
jae
enter
mov
cmp
cmp
out
into
pop
insb
fcoml
lods
dec
add
pop
lods
decb
mov
xorl
pop
lcall
in
gs
lret
out
insl
fisubrs
jg
sbb
int3
repnz
sbb
das
jl
fdivrp
fldcw
or
test
and
push
xor
js
imul
in
repz
lahf
js
insb
sub
jb
in
cltd
inc
sub
syscall
lcall
lock
jl
idiv
xor
add
lds
iret
rclb
or
repz
fisubs
dec
cmpsb
sbb
adc
fninit
pop
adc
push
lock
mov
and
movsb
pop
insl
leave
and
lea
test
cmpsb
add
scas
stc
cmpsb
ret
out
jp
cli
and
xlat
push
dec
cmp
mov
jg
imul
pop
inc
inc
push
in
shrb
or
scas
popa
fwait
jns
fs
das
inc
xchg
nop
inc
stos
jnp
mov
xor
lret
mov
jns
rol
jg,pt
adc
mov
repz
inc
loopne
jbe
and
push
sar
xlat
cmp
sub
sbb
add
out
cmp
mov
ret
repz
push
or
or
repz
es
fbstp
mov
loopne
and
ficoms
enter
xor
lods
icebp
and
cmp
and
fimull
fcmovnb
scas
pop
ljmp
xor
xorb
imul
lcall
addr16
insb
sahf
mov
rcrb
jg
repz
mov
push
dec
mov
mov
mov
xchg
and
pop
or
scas
adc
sub
or
jno,pn
insb
xor
and
cld
rorl
mov
sub
sbb
stc
movsb
fwait
adc
loope
cmp
inc
jp
out
push
mov
cmpb
shr
mov
adc
std
int3
dec
outsb
mov
mov
dec
inc
lock
sbb
pop
cmp
sub
or
cmp
insb
fs
aaa
mov
sbb
faddp
les
mov
and
xorl
dec
movsb
out
into
je
push
mov
cltd
scas
js
pop
int3
loop
inc
scas
mov
pushf
jp
sbb
adc
sub
insl
lods
adc
fcoml
lods
adc
add
inc
fsts
pop
dec
adc
gs
cmp
shl
loope
mov
push
stc
lcall
and
mov
addr16
push
cs
jne
ds
arpl
fcmovu
popa
jle
dec
fcomp
popa
mov
mov
scas
jmp
sub
fstl
int3
sub
inc
aas
dec
cmp
je
bound
std
mov
fstl
push
popa
sahf
insb
in
scas
pop
push
sahf
sub
sbb
lea
and
cwtl
js
inc
pop
into
dec
xor
sub
add
add
into
call
leave
orb
clc
icebp
push
xchg
push
call
cwtl
jp
enter
pop
cmp
aas
add
mov
mov
cmp
or
jns
push
sub
inc
cmp
fidivrs
shr
movsl
scas
in
dec
push
xchg
dec
not
pop
sub
cmp
test
mov
xchg
push
loopne
pop
rcrl
daa
sbb
je
icebp
push
push
and
out
pop
mov
mov
push
cmp
add
or
push
cmp
adc
imul
mov
cmpsb
and
xor
mov
rorb
mov
sahf
pop
mov
push
or
or
pop
ljmp
dec
jle
cmp
stos
pop
pop
mov
das
imul
push
inc
jle
and
pusha
and
test
push
xor
lahf
cmp
stc
xacquire
iret
sub
pop
loop
imulb
mov
inc
stos
sub
pop
lahf
jo
cmp
outsb
dec
mov
sub
imul
repnz
hlt
cmp
or
mov
sub
sub
xor
xchg
icebp
mov
loope
xchg
xchg
xchg
jecxz
sahf
cmc
sbb
fcmovne
xadd
cwtl
ret
stc
sub
pop
nop
jge
fstl
jmp
lahf
out
in
adc
test
rcrl
sbb
lcall
faddl
xor
loope
repz
lahf
mov
mov
cmp
sti
and
cmc
gs
jo
dec
icebp
dec
fcmovu
mov
out
std
push
xchg
xchg
push
lods
push
dec
mov
sbb
jmp
sbb
cmp
int3
iret
pushf
icebp
xorl
jl
test
and
sbb
bound
xchg
adc
and
shlb
decb
addr16
scas
addr16
scas
stc
push
pop
or
js
push
mov
pusha
pop
add
sbbb
into
pop
push
cld
testb
mov
and
mov
cmpsl
xor
mov
jg
insb
adc
pop
mov
mov
mov
xchg
clc
test
xchg
pop
test
sbb
mov
xor
sbb
cld
adc
sub
fistpll
in
ds
out
stc
out
out
daa
daa
push
rorl
sbb
mov
push
pop
or
movsl
push
cmp
cs
outsl
sbb
bound
adc
ret
add
notl
ljmp
in
xchg
cmp
dec
or
or
fsubl
fmuls
mov
mov
push
jbe
mov
and
xorb
dec
repz
inc
adc
xchg
jg
and
ja
cmp
stos
and
jno
mov
mov
cld
outsl
xchg
sarl
and
test
jns
fwait
inc
lret
std
cmpb
pushf
or
js
mov
jne
insl
cltd
sub
dec
pop
mov
and
inc
insl
fstpt
pop
and
pop
jl
cmpsl
jbe
inc
pop
inc
jnp
out
jl
jmp
test
aad
es
xor
fiaddl
jl
cmp
sbb
int3
js
jl
les
mov
cmp
fsubrs
insl
add
xor
push
fcompl
test
stc
inc
in
lret
mov
ds
adc
sahf
es
xchg
rorb
adc
gs
inc
add
mov
gs
leave
aam
mov
scas
sub
psubusb
mov
mov
sbb
sbb
ret
call
xor
xchg
jno
les
dec
lock
pop
pushf
push
cmc
std
dec
repz
shll
mov
xchg
orb
das
repnz
jae
xchg
jbe
xchg
add
pcmpeqw
mov
out
fwait
mov
ja
adc
movsb
pop
cmpb
clc
outsb
je
pushaw
or
sbb
mov
call
subb
rcr
movsl
data16
mov
cmp
mov
insl
mov
push
add
ret
int3
pop
loope
and
icebp
fistps
aam
rorl
ret
in
and
xchg
mov
mov
pop
mov
es
xchg
loop
mov
dec
lret
pop
xchg
mov
add
call
mov
cmp
pop
js
dec
test
pop
add
mov
sbb
sbb
sub
mov
bound
cwtl
fcoms
ja
dec
or
jmp
mov
into
dec
stos
push
mov
xor
push
nop
mov
xchg
cwtl
aaa
ljmp
aad
stos
stc
xchg
pop
outsl
pop
xchg
iret
pop
add
iret
aam
sbb
mov
leave
repnz
xchg
popf
lods
cmc
mov
cmc
mov
daa
js
test
sbb
mov
inc
out
sbb
sbb
and
mov
popa
xchg
push
lret
in
jmp
loop
mov
jle
sbb
fstl
fcoml
sub
lret
jmp
dec
jmp
std
nop
js
add
jp
out
jecxz
pop
mov
adc
mov
clc
push
push
mov
xchg
fsubs
leave
repz
xor
mov
fildl
fstpl
push
mov
lcall
mov
bound
and
bswap
aaa
mov
xchg
add
xchg
xchg
daa
jl
inc
lahf
fisttpll
sar
sbb
bnd
or
in
push
sub
inc
adc
cmp
cmp
jp
dec
es
dec
fnsave
xchg
ss
in
rcr
or
sub
sub
leave
push
das
iret
xlat
fisubs
push
das
int
iret
push
jp
jl
xlat
fmull
lcall
and
stos
imul
mov
ret
aad
jbe
mov
lds
jno
les
bound
jae
or
rcrl
push
cmovl
push
outsl
pusha
aaa
fnstcw
nop
mov
sti
mov
cltd
push
iret
cmp
sbb
sub
aas
and
pop
ret
dec
cmp
jmp
shrl
xor
add
cld
or
into
cs
jns
pushf
or
add
cmovge
mov
test
jb
xor
xchg
fnstsw
xchg
mov
fcoms
push
popa
dec
aad
movsb
push
iret
xchg
and
sbb
outsl
mov
xchg
in
and
std
inc
mov
fs
mov
test
add
or
shrl
mov
xor
jb
push
sahf
aad
sub
jg
jb
bound
push
in
sub
xorb
stc
nop
inc
push
mov
push
xchg
mov
int3
add
cmc
push
pusha
push
out
add
sub
cwtl
int
pop
pusha
mov
cmp
sarb
hlt
jmp
or
int3
rcrl
dec
rcrl
cmp
stos
mov
shl
nop
jecxz
fisubs
ficoms
or
mov
fcmovnu
mov
jb
adc
nop
fdivp
popf
aam
ja
push
clc
sbb
push
sahf
stc
mov
das
jne
inc
in
xlat
jae
xchg
and
popa
iret
ss
leave
pop
jl
jo
repnz
mov
es
pop
jp
sbb
fcomps
mov
jecxz
lds
mov
inc
xor
add
fdivrl
cmp
imul
cs
adc
pop
fwait
pop
jp
leave
mov
clc
faddl
icebp
stos
sub
pop
mov
out
xchg
xchg
out
and
mov
mov
jae
unpcklps
xchg
dec
xor
dec
pop
popf
mov
or
hlt
into
mov
xor
jp
loop
jae
test
repnz
mov
addl
adc
dec
popf
lahf
adc
sbb
or
fidivrl
xor
fs
clc
push
mov
bound
mov
pop
push
jl
leave
call
filds
xchg
pop
push
nop
xchg
pop
nop
add
leavew
gs
loopne
pop
lea
inc
xchg
sub
stos
bound
sti
pop
jns
sub
pop
dec
mov
cmp
mov
jbe
push
fistpll
jnp
lods
pop
and
xchg
into
sub
dec
dec
popf
sub
aas
sbb
dec
repz
push
cmp
push
cmpsb
jmp
add
xor
aaa
push
rcr
aas
rcrb
test
les
std
sarl
or
jns
adc
cmp
adc
xor
and
mov
dec
repz
out
push
mov
loope
pushf
mov
jg
mov
repnz
pop
cmp
mov
xchg
inc
rcl
lods
pop
vmwrite
add
sub
mov
adc
adc
testl
mov
js
mov
pop
or
and
mov
adc
sub
in
test
jle
inc
jecxz
add
pop
sbb
leave
lods
xor
iret
adc
cwtl
dec
dec
out
shlb
dec
cmp
enter
dec
das
mov
lahf
sbb
inc
or
test
mov
dec
xor
dec
imul
xor
fsubrs
add
adc
push
daa
shr
dec
int
push
push
cmp
cwtl
cmp
or
inc
imul
mov
inc
mov
nop
and
xchg
or
mov
sti
sbb
fstpl
pop
mov
stos
dec
add
and
mov
inc
loop
or
popf
mov
out
subl
mov
arpl
lahf
andl
cmpsb
or
nop
xor
pusha
xchg
mov
pusha
aam
mov
sti
adc
jp
mov
loope
push
fcomps
lods
mov
pop
ret
movsl
scas
jl
push
test
out
push
inc
jns
pop
add
gs
dec
mov
mov
mov
mov
and
mov
jp
push
xor
cmpsl
sti
shrb
fs
test
push
dec
xchg
adc
cltd
cmc
jb
dec
ljmp
insb
in
jae
mov
jmp
inc
jno
mov
mov
movsb
movsb
stos
jle
pushf
xchg
ja
fs
mov
sub
scas
gs
rcll
xor
lea
sbb
mov
or
hlt
xchg
jge
sub
cltd
out
xchg
xchg
aad
jno
iret
xchg
jg
addr16
mov
mov
scas
cmp
add
cmp
push
lret
cld
hlt
lahf
outsl
push
jns
enter
mov
mov
sbb
or
insb
fdivl
inc
inc
mov
pop
push
xchg
jno
inc
das
cwtl
dec
xchg
sub
in
test
cmpsb
mov
je
mov
ror
inc
imul
mov
repz
loop
sub
xchg
add
jg
push
cld
addr16
jge
popa
fnstcw
xor
loope
shr
ja
pusha
scas
test
loopne
dec
mov
xchg
sbb
cwtl
xchg
jp
and
pop
lahf
sub
inc
jmp
add
xor
mov
sbb
dec
adc
scas
cmpl
jae
dec
js
sarb
lods
es
faddp
jne
pop
mov
add
std
sarb
sbb
testb
sbb
mov
arpl
out
bound
add
aam
or
jns
clc
cli
inc
into
jne
movsl
mov
jbe
cld
push
shl
jo
hlt
out
xor
bound
ss
hlt
les
mov
sub
js
mov
ljmp
imul
mov
jno
cld
dec
jae
pop
cmp
cmpsl
and
jno
fsts
push
push
cmpsl
pop
lcall
mov
mulb
sub
std
adc
mov
idivl
dec
dec
xchg
int
aaa
js
mov
loope
xchg
fwait
jbe
fcoml
or
bound
xchg
adc
and
mov
iret
mov
cli
loop
lock
outsb
negb
fbld
ljmp
lds
scas
movsb
jns
add
stos
and
dec
cmp
dec
pushf
or
out
xor
shll
icebp
or
pop
lret
cmpsl
in
xchg
jno
mov
inc
inc
jno
nop
sbb
sbbl
rcrb
cmp
mov
add
mov
sbb
or
dec
xchg
movsl
rcll
int3
lods
xor
mov
aam
gs
jo
dec
sbb
jno
cs
addr16
add
insl
push
add
rcrl
mov
and
cmpsb
addb
push
xor
inc
mov
pusha
inc
push
fsubr
jae
mov
xor
cmpsb
insl
sbb
pop
push
mov
int
fiadds
mov
push
cmpsb
fcmovnb
push
test
into
sub
or
add
ror
outsb
and
stc
push
push
jmp
in
jnp
adc
popf
inc
or
xor
loope
imul
sbb
aad
jmp
adc
xchg
stos
cmp
ja
mov
jae
jb
and
sbb
add
jbe
mov
inc
aam
stc
bnd
call
sub
push
les
push
push
fiaddl
sbb
xchg
sbb
dec
sub
repnz
jne
jns
dec
and
sub
rcl
or
xchg
push
cmpl
xchg
xchg
inc
mov
rclb
pop
sub
mov
sub
inc
pusha
inc
sub
xchg
sub
lods
adc
xchg
es
xchg
loop
sub
out
and
stos
jp
push
cwtl
aad
je
add
jg
ret
imul
out
sbb
jecxz
mov
scas
stc
stos
stc
outsb
subb
inc
xor
and
cmp
pop
sti
pop
test
repz
rorl
aas
push
gs
push
andb
scas
jg
mov
inc
xor
inc
jo
mov
test
pop
push
popa
lods
xor
mov
addr16
stos
or
outsb
sub
push
cmpsb
jmp
fdivrs
mov
xchg
xlat
pop
sbb
daa
mov
pop
inc
cli
mull
mov
fimull
pusha
imul
test
or
and
dec
jle
sbb
lock
jg
ss
insb
mov
mov
fildll
shlb
sub
mov
aam
jmp
scas
out
mov
cmp
or
and
sub
mov
inc
adc
out
lret
inc
lret
sbb
cwtl
movl
daa
jnp
andl
jmp
add
fwait
sub
nop
xchg
xor
cwtl
dec
fnstenv
aaa
mov
xchg
jmp
add
movsl
notb
mov
out
pushf
imulb
iret
aaa
shlb
inc
inc
lcall
lret
xor
dec
loopne
and
stos
in
sbb
jl
cmp
shl
xchg
or
movsl
sahf
les
jnp
inc
jne
test
lock
pop
sub
mov
insb
jae
xor
je
icebp
sbb
xor
in
mov
pusha
sbb
repnz
cmp
test
mov
fld
iret
cs
aam
in
loop
push
movsl
test
lcall
push
add
pop
insb
dec
test
mov
mov
ljmp
out
add
and
pop
push
int
fcoml
mov
lods
jmp
fstl
notl
lds
lds
and
push
std
rcrb
pop
ss
add
stc
dec
sub
ror
int
cs
sbb
in
dec
outsl
dec
cmp
cmp
shll
xlat
adc
push
ss
jg
push
sbb
mov
out
mov
cmp
mov
aaa
sbb
loopne
cmpsl
push
xchg
in
xlat
mov
cmp
mov
pop
sbb
pop
cltd
adc
cmpsb
xor
add
mov
imul
push
fldenv
and
gs
repnz
jb
arpl
inc
push
clc
mov
sub
xchg
mov
fsts
cwtl
fsubr
pusha
inc
pop
aam
jle
xor
jge
mov
add
data16
cs
push
stos
jmp
adc
jmp
dec
pop
imul
outsl
test
inc
sbb
gs
and
add
lahf
pop
cli
sbb
pushf
pushf
out
inc
jne
or
mov
adc
adc
sbb
arpl
mov
sub
insb
out
iret
sbb
cltd
mov
push
das
xorl
sbb
mov
sbb
xor
insb
rcl
xor
es
bound
or
js
dec
mov
mov
dec
outsb
int3
aad
jae
cwtl
xor
repnz
jo
cmc
dec
cmp
push
test
push
xchg
sub
jmp
es
push
aad
je
stos
or
dec
bound
dec
sub
ljmp
sbb
cmp
jae
sbb
sbb
mov
mov
call
daa
xchg
push
pop
in
mov
in
ret
xchg
xor
pop
fdivrl
sub
sub
hlt
pop
enter
popa
rcrl
xchg
aad
mov
je
sub
jmp
in
enter
push
xlat
or
fwait
lret
cmp
pop
fsubrl
mov
jl
test
mov
sbb
jnp
dec
shlb
and
stos
cld
push
jge
aas
pop
leave
je
movsb
jnp
add
push
jge
fdivp
pop
mov
js
fistl
outsb
js
adc
mov
jo
in
test
lea
sbb
out
repnz
and
jne
stos
test
mov
movsl
inc
lods
push
jg
int3
inc
call
push
adc
mov
clc
add
jmp
xor
in
xchg
pop
sub
jnp
ljmp
popa
mov
mov
cmp
or
adc
xchg
cmp
sbb
clc
cmc
mov
test
inc
pop
push
rorb
sub
mov
xchg
clc
cmp
leave
push
sbb
pop
aam
stos
push
add
mov
xor
push
lea
fsubs
test
outsb
cmp
xchg
aaa
dec
cltd
adc
sub
jmp
rorl
add
out
jns
inc
shll
icebp
or
inc
sti
and
cmp
add
ret
ss
mov
jp
lcall
push
push
mov
or
aad
fstl
test
scas
mov
notl
cmp
out
scas
add
lret
std
dec
sub
mov
mov
or
nop
and
repnz
push
ficompl
jg
je
aaa
push
cwtl
add
pop
js
movsl
out
je
cli
sbb
sbb
or
inc
jmp
push
out
sbb
push
sti
jnp
stc
fildl
xchg
js
xchg
xchg
cs
add
gs
cmp
lock
and
outsl
aam
mov
pop
and
cmp
inc
xchg
push
push
add
and
int
in
arpl
sbb
enter
push
sub
mov
scas
push
xlat
iret
fidivl
gs
mov
or
cltd
or
fnstsw
pop
sbb
frstor
cmpsl
mov
sbb
hlt
shl
in
pop
out
into
mov
push
xor
test
cltd
add
sahf
sahf
push
mov
popf
fsubl
cmc
sbb
cmpsl
adc
mov
test
sbb
pop
pop
push
inc
out
movsb
push
dec
jecxz
mov
lret
in
lahf
insl
pop
or
pop
mov
dec
ret
xor
xchg
ret
fistpl
repz
jecxz
cmp
jle
out
mov
xor
sbb
or
and
xchg
jge
cld
or
test
add
rolb
loop
addr16
gs
call
in
lods
lds
or
daa
repz
cmc
cli
pop
xor
iret
neg
out
lods
inc
dec
or
push
nop
aaa
lcall
stos
repnz
sbb
or
jnp
inc
icebp
test
sub
and
les
ss
repnz
ljmp
inc
imul
test
push
jnp
xchg
mov
outsl
aaa
pop
lret
xlat
movsb
sarl
je
inc
es
sahf
dec
cwtl
enter
je
jns
sub
ret
lcall
out
or
icebp
dec
pop
into
rcrl
inc
sub
push
stos
jnp
jge
insb
popa
cmpsl
pop
shrl
aaa
iret
stc
movsb
fdiv
lret
push
sbb
fnsave
push
sbb
dec
push
xor
mov
out
push
shrb
pop
mov
cmp
mov
pop
jb
push
in
add
cwtl
and
lea
sbb
mov
xchg
lret
cwtl
sub
adc
int3
outsb
lods
clc
ss
mov
iret
push
outsb
mov
popa
add
adc
mov
sub
sti
loop
jge
sbb
and
fcmovnu
xlat
fs
aam
adc
test
and
nop
add
push
inc
mov
mov
ja
mov
fnsave
lret
jge
adcl
std
and
aad
xlat
and
loopne
dec
mov
fucomip
imul
xchg
mov
call
ret
rcl
inc
sti
in
xor
jmp
iret
lret
fsubp
enter
mov
jmp
lret
sti
in
inc
popf
shrl
cmp
pop
xor
sti
xor
pop
xor
ret
fwait
inc
mov
mov
push
and
mov
fcomi
inc
lods
or
iret
in
mov
jg
jno
cld
cmp
ljmp
jae
cwtl
mov
shlb
mov
mov
sti
mov
aaa
outsl
movsl
mov
sbb
dec
or
and
pop
xchg
mov
cmp
xchg
cmpsb
bound
in
movsb
inc
sub
fstpt
mov
dec
push
and
inc
enter
arpl
xlat
mov
ljmp
mov
mov
sbb
inc
es
loopne
jns
adc
xchg
push
inc
xorl
xorl
push
xchg
xor
repz
scas
mov
lret
cmc
pop
insl
xchg
jno
xor
loope
outsl
lock
jae
pop
into
and
hlt
push
pop
pop
popf
fisubrs
inc
inc
fcompl
dec
ret
scas
sahf
ret
stos
push
or
xor
rol
xchg
adc
in
inc
xchg
xchg
nop
and
xor
cmp
inc
xor
and
xchg
hlt
pop
mov
mov
in
mov
pushf
sbb
and
xor
cmp
imul
jmp
sbb
jmp
and
sti
or
mov
mov
pop
xor
cmp
cwtl
add
mov
out
fisubl
pushf
cmp
and
cmp
xchg
adc
or
aaa
sbb
adc
xchg
and
leave
jl
xchg
jge
or
ss
pop
jae
lret
and
shlb
pop
or
cmpsb
cwtl
push
icebp
xor
mov
int3
iret
xor
xlat
xchg
sbb
stc
scas
inc
gs
les
lds
and
jmp
ja
movsb
into
pop
add
adc
or
leave
sub
or
xchg
call
push
icebp
push
aad
cmp
aad
pop
out
xchg
adc
clc
mov
xor
xor
push
not
adc
adc
pusha
mov
inc
inc
push
lea
adc
stos
cmp
cmp
repz
sahf
insl
and
in
aam
xor
aad
fmulp
mov
movsl
cmp
sbb
sub
shlb
enter
mov
sub
push
imul
jmp
fisttpl
dec
icebp
sbb
in
iret
xchg
pop
rorl
sbb
int3
mov
add
mov
xchg
xlat
cltd
and
inc
and
xchg
into
jp
jecxz
sub
outsb
cmp
pushf
mov
lret
xor
clc
jbe
mov
or
xchg
mov
dec
clc
es
inc
daa
xchg
xor
shl
lods
jnp
rolb
mov
and
loopne
pop
xchg
cmpsb
les
or
xor
movsl
shlb
mov
mov
adc
adc
cmp
mov
mov
add
pop
es
dec
mov
xor
call
or
sbb
push
push
jge
pop
fs
divb
mov
icebp
rolb
insl
fs
and
push
in
lods
data16
adc
addb
or
je
dec
test
in
fidivrl
sub
mov
dec
roll
xor
and
jmp
mov
jns
scas
xchg
cmp
cmc
jp
jo
loope
ss
xchg
js
add
aam
and
loopne
mov
xor
pop
arpl
test
add
or
call
scas
jne
roll
scas
lods
test
or
push
test
js
lds
imul
xchg
inc
sub
cmp
xor
push
movsb
jge
nop
enter
dec
jl
insl
jb
pop
leave
imul
lods
inc
popf
subb
dec
dec
mov
jle
sbb
mov
xor
cmp
add
mov
cmc
paddb
scas
jle
lret
push
pop
jge
jg
hlt
jnp
and
shrb
adc
mov
inc
cmp
fnstenv
das
cmp
test
add
ss
into
cmpsl
in
lret
aam
and
jmp
movsb
jb
mov
lret
jmp
xor
sahf
repz
push
shll
xlat
sbbl
rclb
xchg
inc
sbbl
ss
arpl
cmc
xchg
xchg
inc
xor
mov
xchg
jl
sbb
fstpt
std
scas
push
sbb
mov
cmp
push
xor
lock
push
cld
iret
and
sub
dec
call
les
add
iret
push
cmp
mov
mov
jmp
das
stos
mov
cmp
inc
pop
imul
sbb
cmp
aad
cmpsl
call
mov
push
call
in
inc
sbb
lahf
repz
add
fdivs
es
adc
jnp
mov
fisubrl
xchg
sub
mov
push
in
push
rorb
jnp
test
add
push
out
cmpl
fcomps
fmulp
mov
mov
and
xor
in
xchg
fidivrl
pop
out
loop
push
loopne
mov
mov
test
mov
cmp
repnz
adc
repz
ja
pop
lods
fwait
test
lahf
in
arpl
inc
icebp
push
fimull
push
insl
sarl
add
bound
popa
cmp
xchg
add
xchg
in
loop
cmp
add
enterw
ds
fistpl
adc
jp
shll
jmp
aad
and
aas
mov
mov
invd
inc
and
inc
mov
adc
mov
lock
push
rcll
push
fs
imul
popa
mov
jmp
negb
cmp
sbb
mov
adc
loopne
lds
sbb
push
je
cld
sub
mov
jno
sbb
cmpsl
shl
mov
shlb
pop
or
test
je
jl
loop
and
std
xchg
jnp
test
cmp
mov
pop
xchg
jg
shll
iret
push
dec
mov
ret
loope
xchg
jnp
lock
sarl
lret
inc
fsubl
inc
insl
or
cltd
mov
mov
inc
fmull
mov
popa
xchg
cwtl
mov
mov
icebp
and
and
adc
mov
mov
aaa
add
into
sbb
out
xchg
jp
ret
in
loope
ficomps
mov
push
insl
add
mov
pop
cmc
rcr
sbb
ss
pop
nop
cmc
in
mov
dec
xchg
mov
push
ds
aaa
pop
fimuls
mov
adc
mov
inc
repnz
popf
adc
push
dec
ljmp
inc
cmpsb
cwtl
in
adc
mov
dec
xchg
or
cli
push
test
loopne
ficoms
xchg
lcall
or
inc
into
add
mov
fucom
aad
out
xor
mov
pushf
gs
add
pushl
fbstp
jle
or
clc
sarl
mov
mov
cld
cmp
jbe
cmp
adc
inc
cld
aas
in
mov
arpl
sub
dec
std
or
adc
sti
xorl
sub
enter
jae
xor
push
jne
xchg
das
inc
rcll
in
loop
mov
stos
xchg
repz
in
cmp
rcrl
dec
dec
into
rcrl
add
sub
push
pop
je
test
mov
mov
jmp
sub
fwait
lcall
dec
in
xchg
pop
jmp
bound
shrb
iret
xor
xchg
inc
pop
mov
loop
jp,pt
adc
loope
cmp
stos
or
arpl
push
sti
xchg
jle
adc
fdivp
sbb
jnp
mov
jecxz
inc
mov
push
test
xchg
int
mov
mov
xchg
add
or
iret
subl
cmp
sahf
ja
inc
or
pop
test
cmovl
adc
push
xor
rcrb
scas
testl
pop
stc
sub
and
bound
in
into
lret
mov
jg
jbe
lahf
cli
gs
sub
inc
scas
jnp
xchg
inc
dec
aad
leave
pop
sub
ljmp
jae
out
inc
jle
jp
jae
lods
pop
xchg
push
pop
and
roll
mov
xor
mov
adc
repz
pop
out
dec
push
or
jo
and
inc
adc
pop
sbb
cmpsl
cli
or
decb
sub
mov
fstps
push
push
andb
xchg
or
mov
mov
jne
and
jns
jge
cld
call
sub
jmp
jo
adc
jle
notb
aas
ds
mov
inc
inc
lret
aam
subb
loop
mov
mov
adc
and
and
test
nop
movsb
mov
mov
in
xor
mov
imul
bound
dec
ret
push
and
jg
mov
cmp
cmp
mov
stos
inc
stos
mov
pop
pop
aam
xchg
test
cmc
or
std
repnz
sub
xlat
in
xchg
fistpll
mov
pop
lret
dec
stos
fwait
mov
fmul
loope
adc
loopne
and
lds
lret
sbb
movsb
jle
aas
sub
pop
test
inc
test
loop
dec
lret
adc
add
pop
or
dec
xor
inc
lods
mov
lea
inc
sub
das
push
iret
iret
cwtl
push
inc
cs
roll
in
xlat
ret
mov
adcl
adc
cmp
mov
lods
adc
out
imul
insb
sub
stos
pop
js
pop
out
pop
xor
into
mov
push
pop
sbb
mov
jo
ljmp
add
rol
mov
popa
xchg
add
aam
add
and
int3
iret
in
loop
in
outsb
gs
mov
mov
dec
push
andl
mov
std
add
cmpsl
mulb
cmc
loop
push
and
xchg
nop
jns
xchg
repnz
fdivr
inc
push
inc
adc
pop
dec
mov
int
lahf
xchg
jne
js
mov
cmp
negb
or
iret
sub
jg
mov
jns
mov
dec
cmpsl
cmp
push
lock
fsub
dec
adc
inc
adc
das
and
and
mov
jle
or
adc
in
in
dec
fwait
mov
pop
or
je
movsl
das
and
sub
in
mov
enter
pop
cmpsl
xchg
outsl
push
dec
and
aaa
std
mov
mov
add
cmp
inc
cmp
cmpsl
addr16
dec
lods
ret
or
mov
out
int3
push
cmpsl
sahf
adc
pop
cmpsb
and
xchg
push
cs
xchg
jecxz
call
orb
inc
daa
test
nop
int
in
imul
push
arpl
imul
mov
out
sbb
daa
int
cmp
mov
mul
and
cld
push
cmpb
fs
mov
mov
scas
ficoml
pop
int3
scas
inc
arpl
or
mov
les
repz
lahf
repnz
iret
add
out
xchg
movsl
inc
push
lcall
cltd
sbb
inc
jmp
push
lcall
push
inc
xchg
push
mov
loop
lods
and
sub
ja
aad
pop
mov
pop
jnp
loop
mov
scas
jne
stos
push
stos
outsl
inc
stos
mov
adc
mov
cmp
add
xchg
dec
ret
fs
xor
scas
int
push
popf
pusha
pop
js
std
sbb
rorl
bound
std
pop
jno
sbb
scas
testl
out
sbb
call
sahf
add
push
nop
in
inc
sbb
inc
cmp
jae
push
sub
fmuls
test
and
sub
sbbl
mov
push
mov
or
push
pop
roll
cs
cli
mov
sbb
popf
aam
push
out
fs
mov
pop
dec
arpl
js
icebp
test
fsubrs
fldcw
xlat
loop
push
jnp
jmp
in
adc
xor
fistl
mov
dec
sub
pop
sahf
jge
adc
sti
stos
iret
rolb
add
inc
lcall
flds
lods
test
jns
xlat
lahf
lahf
sub
int
jbe
daa
ja
sbb
call
jg
cmp
dec
xchg
jmp
adc
adc
xchg
flds
test
cmpsb
andl
ret
sbb
repz
cs
sbb
dec
ja
leave
push
icebp
sbb
xlat
outsl
push
out
scas
push
cmp
lods
movq
outsb
xor
ja
sub
mov
aam
mov
mov
cli
pop
dec
pushf
adc
adc
cmpl
pop
adc
mov
mov
and
and
xlat
mov
testb
mov
es
jb
jmp
daa
aad
subl
or
out
punpckhwd
in
sbb
dec
adc
cmp
sub
mov
inc
sbb
roll
insb
scas
ja
jbe
cmp
xor
or
das
rolb
push
repnz
out
adc
enter
and
xchg
loope
sbb
mov
js
in
mov
icebp
movsb
sub
lods
mov
ss
mov
out
fistl
xchg
fildl
inc
cs
repz
out
shlb
cltd
sub
enter
ss
stos
add
aam
andl
lahf
shl
lds
insl
dec
mov
push
ja
xlat
lea
int3
adc
push
xor
rcrl
mov
add
shll
fldt
mov
pop
push
popl
cmp
decl
push
movsl
or
out
mov
cmp
adc
jae
sahf
arpl
push
push
cmp
mov
pop
popa
lcall
jo
dec
add
insl
sahf
popf
leave
std
mov
movsb
arpl
fstpt
repnz
aad
adc
fwait
lods
adc
fdiv
popa
and
pextrw
xchg
ret
cli
dec
movsl
notl
leave
jmp
xor
std
call
jge
ret
inc
and
mov
or
jle
push
cld
adc
mov
adc
popa
push
test
les
dec
sbb
aam
sahf
sub
sub
push
dec
mov
or
mov
and
cld
mov
adc
mulb
mov
adc
sub
xchg
jo
nop
xor
loope
ret
or
rcll
sub
jmp
in
fwait
fcom
movsl
out
or
pop
sub
mov
sarl
cmp
lods
push
jg
mov
inc
arpl
mov
mov
xor
push
pop
or
push
fcomps
repnz
mov
inc
mov
push
bound
movsb
test
shll
dec
movsl
or
or
adc
add
orl
pop
dec
jp
cmp
sub
sbb
cmp
and
mov
and
xlat
push
sub
push
or
in
and
decl
adc
outsb
inc
pop
mov
in
or
icebp
xor
popa
xchg
rcl
shl
stc
push
dec
ljmp
mov
mov
jle
loopne
ljmp
jnp
enter
jne
sbb
mov
out
icebp
mov
movsl
mov
mov
or
popa
adc
mov
ficompl
mov
negl
xor
pop
mov
xor
sub
test
mov
xor
inc
mov
addl
push
nop
fnstcw
enter
loopne
add
jle
lret
call
shll
outsb
pushf
repnz
cmpsl
adc
mov
push
mov
push
push
adcl
lret
jbe
dec
fimuls
sbb
or
test
cli
cwtl
jmp
outsl
pop
mov
fxch
insb
pop
xchg
sbb
jecxz
fisubrs
xchg
inc
sbb
xor
pop
or
sub
shrl
and
xchg
mov
fs
push
movsb
cmp
sub
std
jle
aaa
push
xchg
out
xorl
outsl
inc
dec
int
push
or
push
ja
xor
cmc
jmp
xor
sub
xor
cmp
test
jno
mov
out
add
sub
fidivl
jnp
js
aas
cwtl
out
clc
jns
into
push
xchg
sub
add
mov
sbb
mov
andl
scas
in
testb
imul
lock
aam
xorb
cs
jg
fistpll
mov
das
lret
mov
and
fsts
xchg
test
notl
out
xchg
dec
jle
xor
xor
cmp
sbb
xchg
pop
je
adc
lods
cmpsb
arpl
cmpsl
xlat
mov
aaa
lods
ret
pusha
or
xchg
ljmp
lret
inc
cwtl
add
adc
mov
mov
or
xchg
pop
test
sub
add
mov
xchg
push
jae
ret
js
insb
popf
fnstenv
orb
pop
inc
mov
orb
fnstenv
loope
aad
mov
aam
out
add
push
xor
cld
fcoml
pop
out
jmp
inc
or
push
cmpsb
cmp
cwtl
rcrl
dec
lret
adc
test
xor
js
jae
dec
lahf
mov
emms
bound
lods
gs
mov
jbe
inc
inc
out
xor
pop
mov
mov
out
idivl
xchg
fsubl
adc
dec
dec
lret
sbb
pop
imul
xor
imul
data16
es
mov
push
jl
cmpb
cli
jo
jae
js
call
out
cs
adc
js
add
outsb
bound
loope
clc
and
cmpsl
repz
mov
xchg
loope
lods
les
lock
lea
and
arpl
jp
mov
or
mov
push
cmpsl
adc
cmp
scas
call
sub
push
fucomp
push
adc
pop
and
or
xor
cmpxchg
mov
pop
test
ljmp
fnsave
xchg
mov
nop
dec
sub
addb
in
add
pop
and
adc
dec
ss
in
scas
push
push
pop
cmp
push
pop
add
shlb
and
sti
inc
js
add
dec
dec
or
hlt
and
outsb
sbb
adc
mov
enter
pop
dec
mov
in
fmull
pop
mov
jp
and
lcall
dec
mov
mov
outsl
adc
imul
jg
out
dec
xchg
pop
mov
sbb
call
lea
lret
daa
cld
jo
out
mov
insb
sarb
ret
decl
push
mov
mov
inc
lret
shrl
hlt
mov
cmp
jle
je
dec
xlat
cmpsl
ds
adc
dec
sub
lds
sbb
lock
lock
loop
dec
inc
popa
inc
pop
sbb
movsl
pop
mov
jp
jnp
call
mov
jl
loope
repz
sub
push
lret
and
rclb
aaa
inc
sbb
fldl
cs
push
xchg
imul
movsb
lea
fld
ret
addr16
xchg
fprem1
sub
gs
popa
movsl
in
add
mov
cmc
jb
les
inc
out
fisubrl
cs
cltd
setb
rorl
ficoml
adc
cmc
and
mov
xor
lahf
or
and
cmp
sub
inc
inc
decl
mov
lret
mov
mov
push
pusha
jg
popf
push
jg
sbb
cmpsb
mov
push
push
in
jge
mov
movsb
ret
mov
xchg
add
sbb
sbb
pop
lock
mov
jno
dec
cmc
in
push
jae
loope
and
inc
mov
xor
pop
or
sub
sub
xchg
sbb
push
clc
xchg
cmp
test
movsb
mov
jmp
aam
clc
push
cltd
sbb
loop
and
mov
cmpsb
dec
stos
lock
ljmp
popa
mov
sbb
pop
mov
cld
jle
scas
insb
mov
paddw
test
shrl
adc
adc
lods
push
es
cmpsb
or
sub
mov
divb
mov
push
aad
sahf
jo
insl
xlat
xor
sub
mov
ds
xor
xorl
fsubs
ja
xor
aam
daa
or
in
add
in
ds
pop
push
and
and
cld
xor
jecxz
and
push
cmp
aam
je
in
jae
cmp
lcall
sbb
stc
cltd
addr16
lods
cmp
insl
aad
push
mov
adc
jae
add
jns
pop
movsb
push
add
movsb
push
dec
sti
pop
sbb
xchg
gs
adc
gs
sub
push
frstor
mov
and
ret
push
fs
xchg
push
jae
and
cltd
pop
flds
repz
mov
push
inc
lret
lahf
mov
dec
pop
popf
mov
out
pop
je
sbb
or
loope
jmp
daa
std
nop
out
rcrl
in
fisttpll
sbb
jb,pn
add
jno
pop
and
iret
push
xlat
addr16
lcall
xchg
sbb
adc
and
cli
bound
mov
es
dec
idivl
hlt
inc
leave
add
push
loopne
push
imulb
push
ljmp
or
xlat
cld
xchg
cmc
inc
sbb
push
enter
in
les
jae
fdivrs
push
jge
sub
mov
cs
arpl
sub
pop
jmp
mov
dec
jnp
inc
inc
insl
lods
cmp
pop
fldt
out
pop
push
mov
sub
imul
outsb
add
or
xlat
jl
pop
and
jecxz
dec
movsl
cmpsl
jecxz
sub
sti
cmp
sub
imul
test
inc
subb
dec
cmpsb
popf
add
xor
int
push
clc
div
add
push
imul
in
ljmp
addr16
mov
ds
cmp
lock
pop
sub
nop
jle
fmull
inc
stos
jg
fcoms
and
and
pushf
sbb
mov
cmpsl
inc
add
sub
jle
xor
leave
lock
sub
xor
and
dec
push
sub
aad
xor
dec
mov
out
jl
xlat
aaa
mov
jae
vcmpps
aas
xor
dec
and
xor
mov
and
mov
push
pusha
xor
push
popf
xor
ror
gs
test
xlat
mov
fs
xorb
cmpsb
cmpsb
daa
popa
pusha
pop
mov
cmp
dec
cmp
jns
insb
int
out
jno
aam
or
int
inc
ss
cmpl
imul
mov
fwait
jns
xor
push
mov
adc
ret
fstl
or
lods
adc
dec
push
pop
leave
adc
cltd
jge
sbb
mov
lds
xor
js
ret
adc
popa
or
out
xchg
pop
cs
fwait
movsb
sbb
lock
out
jp
cmp
rcr
or
jp
dec
push
mov
lods
test
cli
ret
cli
bound
mov
pop
and
into
lds
sub
outsb
and
stos
mov
push
inc
mov
push
outsl
inc
stc
jmp
xchg
aam
mov
repz
leave
mov
jno
stos
mov
adc
jg
fidivl
push
repnz
lods
out
test
sbb
aad
xor
cltd
or
dec
push
push
and
jne
test
icebp
jno
cmp
mov
jg
push
jecxz
push
test
mov
xor
sub
adc
and
push
adc
dec
sti
lods
lret
dec
jns
pushf
ja
cs
movsl
dec
jb
xor
lret
pop
xchg
push
or
mov
in
ljmp
pop
daa
and
pop
pop
test
test
xchg
mov
mov
loop
and
out
sub
leave
cmpb
and
push
test
pop
mov
xchg
call
and
jae
mov
outsl
ljmp
mov
cmp
xchg
or
cmpsb
push
add
fldenv
push
sbb
rol
test
inc
push
subb
push
mov
ss
int3
repz
jnp
mov
aaa
jl
cmp
iret
das
mov
xchg
mov
xor
sahf
inc
cli
xor
add
mov
or
pop
xorl
stc
fidivrl
cmp
imul
mov
lods
and
jp
add
cmc
mov
xchg
jg
fldenv
icebp
jecxz
loop
sub
pop
push
and
pop
sub
js
in
int3
and
int3
xchg
daa
stos
jge
insl
sarb
in
ljmp
push
pushl
mov
inc
jge
jecxz
jb
ret
jp
lahf
rorb
mov
and
and
cmp
out
push
fcmove
dec
test
jae
jge
outsl
xlat
pop
dec
add
sbb
sahf
gs
or
jbe
inc
les
push
adc
pop
gs
shrl
cmp
inc
enter
arpl
add
xchg
jmp
cli
add
fucom
movl
je
push
or
xchg
or
enter
push
jb
or
or
lods
out
movsl
pop
pop
test
insb
ret
and
fcomi
pop
mov
push
xor
jne
ljmp
mov
and
pushf
and
xchg
push
pop
cmp
mov
inc
mov
sub
adc
outsl
rorb
xor
ja
pop
loopne
add
jg
mov
cmp
lea
aas
in
mov
sub
dec
mov
fnsave
lock
ljmp
add
sbb
mov
push
inc
std
mov
dec
mov
xchg
jmp
pushl
or
fwait
mov
adc
daa
xor
andb
cmp
jnp
fld
in
xchg
jns
add
lea
aas
jns
aaa
mov
into
es
xor
out
xorl
aaa
stc
xchg
jl
jge
fisubs
fisubl
loop
pop
xor
pop
or
pop
xchg
dec
mov
pop
mov
push
iret
sti
add
and
push
insl
and
cmc
mov
or
fmull
jge
ds
sbbb
in
scas
out
and
and
dec
cmp
rolb
and
outsl
movsl
fimull
jo
jecxz
ret
add
jle
and
or
pop
ss
loopne
es
pop
adc
test
ss
push
mov
sti
and
sub
out
inc
lock
jg
lock
fcmovnu
sbb
outsb
xor
outsb
fsts
and
sub
pop
mov
mov
jge
fmull
push
pop
inc
gs
inc
inc
in
push
es
ror
arpl
cld
popa
mov
mov
cmp
sbb
push
clc
fidivs
sbb
mov
sti
sbb
xchg
push
mov
mov
popw
mov
mov
outsl
sbb
jo
sbbb
xor
cmp
lods
pop
jae
lahf
push
mov
loop
loop
mov
adc
xchg
scas
mov
push
mov
or
dec
jmp
push
jns
pop
movsl
rcrl
pusha
push
insb
sbb
jne
or
mov
pop
dec
sti
rcrb
xchg
sbb
mov
imul
dec
or
out
ret
mov
pop
mov
int3
cmp
adc
mov
outsb
stos
cmpsb
jb
out
outsb
jmp
xchg
ja,pn
adc
test
insl
xchg
aam
jbe
sbb
cmp
sbb
lret
mov
sahf
pop
cmp
test
cmp
push
mov
cmpsb
andl
pop
or
ret
divl
add
sbb
movsb
test
xlat
stc
and
xchg
cwtl
sub
dec
daa
out
mov
sbb
adc
ljmp
push
idivl
int3
ficoms
ror
scas
cwtl
mov
mov
jo
push
loop
mov
xorl
dec
mov
ret
in
test
int
lahf
push
cld
mov
sub
sbb
mov
inc
popa
scas
loope
leave
aaa
jae
add
jns
jns
sbb
jbe
xor
mov
int3
xor
pop
jae
jno
adc
inc
sub
ret
sub
xor
lahf
stos
pop
in
cmpsb
bound
je
gs
aad
add
call
fcmovbe
test
out
add
hlt
mov
fstpt
dec
sub
or
and
push
lods
mov
movsb
mov
negl
loop
sbb
out
pop
push
lods
add
mov
popa
cwtl
cli
mov
xor
jmp
das
mov
fs
fdiv
mov
pushf
popf
xor
cmpsb
xchg
adc
dec
add
dec
push
mov
ficomps
mov
or
pop
ljmp
mov
mov
adc
push
rcl
mov
adc
arpl
push
sub
cltd
into
mov
jnp
loopne
nop
movsb
mov
aam
add
xor
jle
ret
lods
scas
inc
mov
iret
sbb
mov
test
xchg
aaa
popa
dec
ljmp
xchg
shl
lret
xchg
in
sub
sbb
in
mov
sbb
fxam
aad
ror
out
in
gs
mov
rolb
add
mov
xor
xchg
ds
ficompl
ficoms
in
and
out
movb
bound
lret
pop
jne
mov
or
nop
ficompl
mov
outsb
pop
inc
out
mov
test
dec
cmp
lret
pop
sbb
cmp
pop
add
jmp
shlb
in
pop
jnp
jno
daa
ret
and
lock
fcoml
lahf
mov
inc
dec
cli
cltd
insb
cs
pusha
xor
jns
ror
das
mov
xchg
fsincos
or
xchg
inc
or
mov
inc
mov
ret
mov
movb
in
cli
loope
lock
xor
les
sbb
dec
test
pop
mov
std
ss
mov
adc
sti
jbe
mov
jge
addr16
sti
out
or
adc
leave
int3
dec
cmp
or
das
arpl
inc
push
fs
mov
addl
dec
xor
sbb
or
lds
lret
setp
jns
jae
inc
ret
xchg
cmpsb
adc
mov
sub
mov
imul
mov
push
in
cltd
scas
pop
mov
ficoms
mov
inc
popa
arpl
cwtl
xchg
jg
adc
outsl
pop
fistpll
adc
xchg
andl
ret
frstor
jns
ret
adc
push
push
ss
jae
insl
sub
jb
push
and
mov
jg
lcall
incb
fnstcw
sbb
fsubl
in
pop
rclb
push
rol
or
inc
mov
mov
mov
xchg
or
or
dec
push
mov
lret
pusha
bnd
pop
leave
outsl
pushf
pushf
and
call
cmp
and
pusha
cmc
pop
addl
sub
outsl
ds
in
test
pop
mov
in
inc
cltd
test
push
jae
xchg
dec
push
pop
add
pop
push
fildll
cmp
aas
iret
fnstsw
ret
stc
cmpsb
lcall
test
push
mov
in
adc
clc
mov
sub
adc
mov
add
jp
dec
ror
mov
push
fdivs
shrl
repnz
dec
cmp
pop
sbb
xor
add
std
fwait
andb
cmp
add
push
or
push
popf
in
pop
xchg
and
fsubrp
addl
sub
pop
push
outsb
mov
stos
jecxz
jg
and
fwait
pushf
sub
das
fxam
and
ds
in
outsb
fwait
add
pop
pop
ljmp
push
xor
adc
push
pusha
mov
push
icebp
call
adc
or
movsl
add
push
jns
jb
add
call
xchg
dec
sar
push
hlt
dec
sahf
mov
inc
lods
and
and
mov
int
jge
fiaddl
mov
push
flds
adc
mov
jle
jecxz
rcr
dec
xchg
je
xchg
jne
or
mov
rol
sub
xchg
push
rcll
mov
xor
outsl
mov
mov
imul
mov
mov
and
push
loope
leave
jo
fs
rorb
inc
and
jbe
cmp
push
aam
outsb
cwtl
push
cwtl
sbb
repz
leave
sub
js
lcall
dec
cwtl
stos
clc
add
xchg
mov
mov
pop
xor
sub
stos
sbb
fcomps
notb
push
pop
je
push
in
arpl
lds
ficompl
in
in
or
jl
repnz
cltd
inc
pusha
push
fsubrs
out
jo
dec
in
sbb
das
and
fldpi
sbb
inc
adc
lods
sbb
adcb
or
dec
cmc
adc
cltd
pushf
out
dec
xchg
xchg
sbbl
mov
dec
loope
loopne
jmp
movl
jo
leave
sub
fisttpl
lret
xchg
and
cld
push
lock
aas
sbb
lahf
lret
adc
in
mov
in
jno
xchg
mov
mov
scas
iret
movsb
push
mov
jp
incb
outsb
addb
outsb
push
lock
rcr
mov
jae
fwait
adc
sbb
loop
adc
data16
mov
sahf
mov
out
lods
push
test
out
xchg
cmp
mov
sub
into
xor
pop
ljmp
rcll
mov
shl
or
stos
dec
movsl
out
leave
push
mov
push
cmp
stc
jge
mov
fldt
cli
mov
and
lock
mov
outsl
cmp
jmp
sub
inc
fsub
pop
jae
pop
cli
mov
sti
mov
xor
cltd
and
xchg
das
shrl
pop
in
and
rclb
mov
outsl
dec
int
hlt
repnz
sub
iret
pop
arpl
dec
sbb
jecxz
and
pop
pop
mov
scas
arpl
pop
mov
adc
dec
enter
shl
xlat
int
es
lahf
or
adcb
sub
add
shll
leave
outsb
xchg
xor
push
arpl
shrb
pop
sbb
ss
mov
in
dec
xlat
cld
dec
repnz
push
int3
inc
pop
lret
lahf
adc
cmp
out
loop
fildl
int
cli
dec
cmp
ss
push
leave
push
mov
cmp
and
sub
dec
scas
stos
mov
cli
out
incb
and
push
outsl
push
jno
sbb
adc
push
decl
shr
lods
gs
dec
push
mov
daa
and
ss
nop
mov
pop
mov
fstpt
xor
cmc
and
dec
pop
sbb
jg
out
push
test
popa
push
mov
adc
outsb
cmc
mov
lahf
jecxz
or
cmp
lods
add
lods
fwait
mov
jb
mov
daa
pop
pushf
loope
out
imul
cmp
cmpsb
divb
sbb
inc
stc
jnp
add
pop
sbb
mov
imul
add
add
mov
lock
jns
jecxz
push
movsb
aas
in
fstpl
out
cmpl
imulb
cmp
xor
ret
jg
movsb
cmp
mov
ja
adc
popa
push
push
add
cmp
pop
xchg
pop
out
out
adc
add
shrl
push
adc
cmc
cs
pop
jne
cwtl
add
pop
popl
int
aaa
mov
test
call
mov
push
out
mov
aas
hlt
out
xchg
leave
xor
aad
mov
outsb
enter
std
lea
call
or
lret
cwtl
mov
push
or
out
cmp
sahf
sti
cmp
pop
mov
jecxz
or
enter
lods
int3
sub
lods
adc
pop
imull
pmulhw
mov
inc
mov
pop
inc
pop
out
add
jecxz
pop
stos
lret
orl
pushl
adc
jnp
pop
mov
popl
out
cmp
mov
lea
outsb
and
xor
add
sti
push
test
pusha
insb
mov
jnp
in
rep
movsl
mov
test
xchg
add
mov
cmpsl
add
and
loope
mov
insl
lret
por
popa
inc
push
popf
push
ss
jae
stc
std
gs
and
push
cmp
adc
fmul
push
pop
scas
jne
je
fbstp
xorb
jmp
mov
dec
xchg
lods
jae
pop
sbb
andl
push
in
fisubs
fs
cmpsl
pop
add
es
mov
sbb
xchg
cmp
and
mov
and
pop
push
test
cltd
sahf
lcall
aam
cmp
and
mov
sbb
mov
sahf
or
adc
add
lret
decl
mov
push
movsl
and
pop
or
gs
pusha
pop
inc
aaa
cmp
and
inc
sbb
ja
jno
push
push
sbb
ja
das
dec
sarb
lock
or
jmp
mov
mov
xchg
and
scas
loopne
mov
lret
cmp
clc
jle
mov
pushf
arpl
loope
shlb
mov
sbb
jle
inc
push
insb
popa
adc
sbb
add
lret
mov
add
inc
inc
lds
rorb
push
jmp
enter
and
add
cld
push
ret
cmp
mov
mov
mov
xchg
gs
ljmp
aad
aaa
lret
sub
mov
clc
push
mov
mov
jl
inc
addr16
ret
ret
sub
sub
scas
inc
xchg
out
inc
cmp
sti
jp
or
jp
popa
adc
scas
xchg
sbbl
pop
cld
in
add
fsubrl
adc
cmp
fisubrl
imul
mov
dec
movsb
out
pop
lret
adc
dec
mov
sarb
mov
push
mov
scas
dec
and
mov
test
in
mov
sbb
imul
jl
jae
loope
pop
flds
lcall
decb
adc
xchg
push
mov
mov
shr
xor
bound
cmc
mov
xlat
xchg
js
popa
negl
roll
sbb
jecxz
and
loope
push
insl
dec
ss
and
fs
mov
stos
cld
adc
pop
repnz
in
push
dec
pop
in
sub
adc
and
pusha
mov
inc
xchg
cli
call
test
sbb
mov
push
xchg
mov
dec
sub
jo
mov
pop
xor
mov
lahf
decb
int
cmpsl
adc
and
push
and
mov
sbb
jp
mov
cmp
add
cmpsb
scas
fadds
dec
xor
jnp
cmpsb
divb
in
pop
jmp
aam
jae
xor
jbe
stc
repnz
xchg
mov
mov
or
test
mov
rcll
rol
lods
cmp
or
leave
orps
pop
inc
outsb
movsl
out
ret
adc
sbb
enter
mov
cltd
int3
and
and
sbb
pop
jae
cmp
mov
mov
xchg
sub
sbb
pop
movb
in
cli
mov
or
ret
in
dec
mov
mov
mov
or
sbb
mov
call
fdiv
loop
lea
pushf
dec
sub
or
fsubr
or
sbb
ret
xor
cld
jb
fnstcw
push
in
mov
rol
jb
test
fcmovbe
dec
sbb
or
and
pushf
xchg
mov
movsb
inc
pop
jp
dec
sbb
push
aaa
loopne
ljmp
inc
pop
add
pushw
mov
ret
xchg
adc
das
das
jge
mov
inc
push
fdivrs
int3
and
stos
mov
add
mov
cltd
add
mov
sbb
and
call
add
bound
sbbl
pop
mov
addr16
fisubrs
mov
mov
imul
insb
push
aam
and
lea
popf
cmp
movsl
not
bound
fsts
sbbb
mov
xchg
fisubl
aas
shlb
sub
mov
aad
pusha
adc
loope
stos
mov
nop
and
dec
add
jmp
movl
push
push
push
sahf
aaa
fdivl
adc
adc
inc
rclb
dec
mov
xchg
inc
push
sub
mov
jae
out
jmp
sub
rcrb
shl
aaa
jbe
ja
or
imul
sbb
dec
shll
call
shlb
outsl
cmp
and
inc
xchg
pushf
sub
cli
xlat
leave
lret
js
out
call
mov
cmp
pop
push
lods
das
int3
push
cmp
scas
insb
call
frstor
outsb
xchg
out
xor
out
test
dec
xlat
fildl
inc
jle
jns
jno
sti
jb
pop
dec
or
cmp
loope
es
or
mov
mov
sub
fisubl
ljmp
outsl
sbb
xchg
hlt
sub
adc
inc
fidivl
xor
out
data16
je
jae
xchg
std
fnstcw
push
inc
cltd
ss
mov
inc
sub
and
push
sub
shlb
xchg
push
ror
inc
mov
jo
and
or
hlt
testb
icebp
jnp
push
je
nop
push
lods
pop
mov
and
decl
pop
mov
and
push
adc
fisttps
adc
dec
jecxz
aam
dec
lahf
mov
mov
cwtl
push
mov
push
mov
pop
std
shrb
movsl
ljmp
cwtl
test
das
insb
sahf
fdivp
sarb
inc
movsl
push
inc
jle
arpl
mov
push
movb
lods
mov
xor
arpl
inc
test
leave
or
dec
aam
xchg
imul
push
dec
das
nop
jmp
mov
mulb
lea
jb
icebp
adc
xchg
std
out
lret
jg
orl
mov
mov
loope
pop
movsb
andb
jno
mov
inc
mov
out
std
test
andb
dec
or
add
rcrl
push
push
iret
lahf
ret
dec
ret
push
in
and
sarb
addb
repz
nop
sbb
sti
cmc
aaa
fstps
add
jb
push
cmpsb
push
gs
orl
out
or
mov
push
inc
adc
ja
mov
push
xor
xchg
stos
into
lret
mov
inc
aad
xor
mov
pop
iret
scas
sbb
ljmp
push
lret
sahf
and
sub
les
jbe
inc
push
jae
loop
test
dec
cwtl
xor
push
je
cli
dec
rorl
mov
jg
pop
into
pop
sub
add
push
pop
ret
int3
add
lds
mov
je
add
xor
xor
xor
xchg
mov
dec
add
sbb
lock
lds
ret
shl
fdivr
stc
pop
sbb
push
sbb
test
jl
push
cmp
nop
rcl
pop
lcall
cmp
or
mov
xor
xlat
idivl
ror
dec
push
insl
int
lds
push
stos
cs
mov
xchg
cmp
xor
sub
add
das
add
jp
leave
lds
inc
stos
pop
inc
mov
sbb
iret
push
mov
call
fwait
pop
pop
rol
and
les
int3
sub
sbb
rorb
xchg
add
adc
je
jp
push
sbb
mov
lret
std
mov
std
loope
and
scas
sti
sbb
dec
sti
scas
lcall
mov
fnsave
push
sbb
push
sahf
or
mov
cli
pushl
stc
jle
jle
std
add
sbb
pop
pcmpgtd
jnp
lcall
mov
lods
xchg
daa
jle
mov
stos
cli
cli
daa
fwait
mov
jbe
sub
sti
jg
lods
or
pop
aad
data16
push
and
pop
adc
divl
cwtl
fwait
mov
xor
ss
xor
mov
shll
int
sbb
mov
pushf
pop
popa
pop
xchg
mov
inc
aad
mov
std
pusha
int3
mov
pop
outsl
sarb
arpl
sub
add
inc
and
push
inc
xlat
push
repnz
fcompl
movl
loopne
jp
pop
sahf
sbb
push
jnp
mov
inc
inc
push
lea
mov
cmp
pop
sub
iret
mov
pop
fdivrl
and
mov
and
pop
add
xor
jmp
aam
into
sbb
in
aam
inc
dec
pop
mov
hlt
or
fidivs
test
dec
fwait
inc
cmp
adc
sbb
addr16
cltd
push
jl
xor
xchg
mov
jge
xor
and
xchg
mov
lahf
sub
jmp
inc
mov
cmp
lret
rclb
sbb
mov
arpl
mov
sbb
jo
test
or
dec
imul
outsb
idivl
and
xchg
fcmovnu
sub
ds
cs
jo
xchg
xor
mov
ds
fsts
insl
or
into
shll
sahf
adc
inc
loop
ror
add
insl
enter
rorl
mov
out
mov
jnp
mov
in
sti
cs
xchg
xchg
pop
flds
testl
bound
mov
add
lea
push
cltd
cltd
xor
cmpsl
jmp
jbe
clc
int3
push
sbb
push
mov
add
popf
push
clc
adcl
xchg
lret
stc
shll
push
int
push
and
aaa
bound
mov
jmp
mov
jo
jmp
imul
push
lock
lock
adc
inc
lods
jno
in
jne
stos
je
outsl
hlt
outsl
mov
into
mov
daa
xchg
mov
jmp
sub
out
nop
daa
or
inc
sahf
add
in
mov
sbb
cmp
dec
jp
dec
pop
cmc
inc
fbld
or
and
pusha
nop
das
aas
jmp
jecxz
push
xor
icebp
mov
das
dec
enter
inc
sub
pop
jo
mov
testb
mov
into
jbe
vpsubq
add
pop
notl
filds
push
clc
call
iret
out
mov
sbb
or
xchg
in
jle
adc
lcall
and
in
enter
bound
ljmp
fcmovne
dec
mov
ja
es
testb
mov
jae
and
test
dec
xchg
xorl
dec
cmp
in
call
xor
int3
sbb
ja
mov
jecxz
shll
sub
mov
jo
lods
xchg
adc
push
iret
in
test
rclb
sub
sub
pop
sbb
sbb
cs
jle
push
inc
orl
mov
and
cmp
mulb
icebp
pusha
mov
cmc
sub
outsb
sub
lret
cltd
fmull
test
cvtpi2ps
adc
es
push
fisttps
push
and
cltd
push
mov
dec
loope
jb
push
shlb
mov
mov
push
andl
mov
shlb
shlb
int3
iret
xchg
in
imul
dec
jnp
dec
adc
sub
aad
cmp
sahf
add
test
sub
sub
add
pop
pop
cmpsb
gs
arpl
into
add
mov
das
and
dec
push
add
jbe
outsb
mov
rcrb
icebp
bound
cs
xchg
idivb
mov
sub
daa
loop
fs
sbb
xchg
dec
mov
add
sbb
xor
jg
out
bound
xor
movsb
jne
js
mov
cmp
mov
lret
sbb
dec
bound
test
add
aas
andl
dec
mov
test
or
mov
dec
pop
jo
movsb
data16
cld
adc
cmp
ss
or
loopne
lods
add
inc
aaa
and
pop
mov
inc
sub
or
mov
test
inc
xchg
insl
xchg
dec
sub
mov
xchg
cmp
lods
mov
jg
cmp
outsb
fsubr
xor
das
fisubs
jl
fimull
rclb
divb
out
inc
mov
jnp
inc
cmp
repnz
hlt
movsl
fs
adc
pop
cmp
mov
mov
push
push
inc
sub
lret
ds
add
rol
hlt
pop
test
test
sti
nop
mov
cmp
stc
ss
pop
dec
inc
jae
rcrb
outsb
fadd
negl
cmp
imul
push
aam
push
mov
adc
inc
negl
stc
add
and
pop
in
jno
pop
add
clc
push
inc
sub
pop
shlb
xchg
insb
cmp
fs
repnz
test
stc
add
pop
or
xor
sub
repz
rcrl
xchg
jmp
mov
push
test
mov
clc
mov
lahf
scas
and
xchg
jns
jo
or
neg
mov
mov
xchg
ret
mov
jne
push
or
adc
mov
jns
and
inc
pop
inc
push
icebp
sarl
mov
xor
and
add
push
fisubl
jb
sahf
pop
sbb
add
xchg
push
sbb
xorb
mov
inc
inc
vstmxcsr
lcall
mov
pop
test
shlb
popf
cmp
cmp
sbb
leave
xchg
pop
pusha
subb
aam
out
lods
sahf
and
jg
inc
jae
enter
movsl
add
dec
jl
jo
xchg
xchg
insb
sbb
pop
jp
and
inc
lock
movsb
mov
int3
add
popf
mov
or
movsb
or
addr16
lcall
fwait
js
dec
lret
in
js
and
lea
sub
cmp
in
in
mov
aam
mov
jmp
dec
test
mov
inc
mov
xorl
imul
int
pop
jge
pushf
dec
jmp
cltd
lds
test
adc
mov
shrb
pop
jg
scas
into
cmp
stos
jle
jne
call
rcrb
push
mov
adc
mov
mov
pop
sbb
jecxz
jb
mov
aas
inc
aas
and
cmp
bound
aam
xchg
xchg
inc
into
and
mov
mov
inc
jmp
pop
je
rol
inc
push
xchg
and
dec
mov
aas
mov
bound
addr16
jns
mov
dec
test
xorl
jbe
shrl
inc
jge
daa
je
or
jae
inc
sahf
pop
insl
lds
xchg
sub
push
clc
lcall
lods
jbe
test
cmc
xlat
out
jle
dec
jne
ljmp
mov
ds
imul
add
ds
pop
insl
leave
and
dec
out
test
xor
cwtl
enter
je
popa
insl
ja
pop
int
jecxz
inc
dec
cltd
sbb
clc
in
inc
rcr
repnz
push
xor
bound
or
lods
push
gs
imul
outsl
scas
mov
leave
jnp
dec
sbb
xchg
mov
mov
mov
lea
pop
xchg
popa
fistps
jae
inc
mov
push
inc
inc
ret
fdivrs
lret
push
pop
or
orl
mov
dec
xor
and
lods
mov
sub
aam
xchg
jl
adc
jecxz
loop
xchg
jnp
stos
imul
dec
gs
mov
dec
cmp
adc
dec
inc
aas
inc
adc
fs
aaa
add
pushf
cmp
push
or
pop
inc
pop
or
cwtl
cmp
pop
push
sbb
cmp
push
pusha
dec
lea
arpl
mov
cmp
cmp
dec
movsb
hlt
fiaddl
sti
lods
and
jno
xor
aam
dec
in
mov
jg
pop
xor
iret
sub
stos
sbb
add
sbb
es
dec
into
in
mov
or
inc
pop
cs
orl
mov
pop
stos
cwtl
push
stos
jecxz
mov
enter
out
pusha
push
push
add
stos
mov
and
add
adcb
lahf
xchg
js
jne
jp
lret
out
sbb
sub
sahf
dec
inc
in
jmp
push
mov
ja
int
jmp
mov
sub
push
jge
xchg
iret
dec
pop
push
outsb
in
xor
push
inc
sbb
lods
mov
dec
pop
sbb
fldcw
xchg
idivb
jae
xlat
aad
xor
mov
lods
jne
cli
mov
xchg
ja
mov
gs
push
jmp
mov
loope
dec
xchg
adc
pop
jge
mov
fldcw
push
stos
push
iret
hlt
or
mov
pushf
lea
add
mov
jmp
stos
pop
mov
ds
lcall
sub
das
mov
mov
mov
push
popf
js
in
push
dec
xchg
xchg
mov
leave
push
fst
sbb
mov
ret
push
imul
int
jns
bswap
adc
dec
jb
sahf
push
insl
pop
lods
jbe
sbb
jnp
and
push
ret
mov
gs
mov
stos
sbb
pushl
mov
mov
dec
loopne
insb
fcoml
das
sub
les
mov
fcompl
mov
in
pop
push
dec
dec
pop
xor
cmpl
mov
mov
mov
and
shll
pop
sbb
add
sahf
push
and
inc
mov
aaa
push
imul
and
and
das
repnz
in
jecxz
push
push
push
cmp
adc
pusha
daa
xchg
xchg
push
fs
or
or
xor
in
pushf
jecxz
adc
in
sub
dec
iret
adc
scas
mov
mov
mov
fcmove
sub
xchg
loope
decb
movsl
push
jmp
pop
pop
fists
clc
bnd
xchg
pusha
sti
xchg
xchg
fxch
rcrl
lods
mov
xor
lahf
xchg
xor
shlb
andb
in
testl
jae
jb
fbld
push
pop
outsl
mov
and
loope
adc
dec
decl
pusha
pop
addr16
xor
mov
adc
and
jae
sub
rcll
loop
scas
push
mov
inc
ja
or
notl
mov
out
sahf
mov
and
xchg
dec
xor
stc
xor
test
test
xchg
and
or
js
and
jmp
jnp
mov
addb
fwait
or
ret
call
aad
std
sbb
add
add
mov
lahf
xor
dec
outsb
or
fs
inc
cmp
cmp
mov
sbb
adc
pop
xchg
pop
sti
shrl
lret
aas
xchg
jmp
cli
out
dec
arpl
test
xchg
xchg
push
out
sahf
int3
jecxz
push
mov
and
out
sbb
push
aam
jns
rcrb
adc
rclb
shll
imul
cmp
or
cmp
aas
add
cmp
pop
dec
xlat
add
pop
rcll
sahf
out
rcrl
add
mov
push
mov
mov
jbe
in
fcompl
in
inc
das
jo
mov
pop
and
out
stc
insb
cmp
cwtl
sub
xchg
or
sbb
adc
inc
decb
movsl
fbld
lock
pop
jmp
jbe
pusha
test
sahf
into
idivl
dec
push
mov
addr16
inc
ret
sub
shrl
loope
test
lea
or
jecxz
push
jmp
dec
aas
inc
sub
and
dec
xor
mov
xor
loope
fnstsw
aad
dec
sub
in
push
fs
rolb
jno
enter
into
testl
mov
scas
leave
fsts
es
fs
mov
jge
lods
rcrb
sub
push
out
unpckhps
cmp
mov
add
fcomip
pop
imul
outsb
adc
icebp
mov
inc
outsl
and
xor
push
push
cmpsb
inc
clc
divl
sbb
lcall
movsl
call
xchg
mov
sysenter
xor
push
mov
pop
push
out
push
sub
dec
mov
add
fmull
mov
dec
das
mov
aam
mov
loopne
aas
aam
hlt
mov
pop
mov
pop
fdivrs
icebp
mov
ja
popf
push
clc
pop
icebp
dec
jne
mov
mov
jnp
inc
inc
push
push
sub
sbb
jg
pop
sbb
and
cs
pop
inc
or
jg
sub
xchg
ds
in
inc
pop
mov
in
out
xchg
movsl
mov
and
in
clc
xor
rcrb
or
pop
ja
sub
data16
lahf
mov
stc
push
push
outsb
jge
pushf
jbe
xor
or
and
cmpsl
or
cs
pop
jmp
insb
sub
notl
in
ljmp
mov
push
bound
ret
int3
mov
inc
stc
sti
inc
cltd
aam
lods
jp
mov
xor
and
jl
xor
scas
cmp
xor
and
xor
jnp
addl
pop
mov
push
shlb
xchg
out
xchg
imull
jns
add
pop
sbb
cmpsb
or
mov
int3
or
cli
pop
popf
jp
cmp
adc
xchg
sbb
xchg
cltd
inc
mov
movsl
leave
xchg
sub
shrb
cmpsb
xchg
lods
jge
inc
pop
add
aam
xchg
test
or
lea
and
call
test
cmc
cmp
sub
lds
and
ds
cld
inc
jge
mov
mov
cld
int
jbe
jl
sub
adc
clc
fdivp
imulb
adc
lock
xchg
movsl
test
movsb
shrl
ja
dec
adc
cwtl
leave
pushl
inc
and
mov
loopne
scas
ret
inc
adc
adc
or
outsl
arpl
jecxz
fnstsw
push
icebp
xlat
in
dec
inc
dec
mov
sub
push
sbb
or
icebp
dec
lock
aas
pop
xchg
or
mov
out
add
outsb
pop
mov
add
jns
lret
add
lea
das
jecxz
lret
nop
incl
es
movsl
mov
icebp
int3
cli
in
stos
jg
ret
ss
andb
in
out
test
inc
cmp
call
sub
hlt
adc
xchg
pop
push
fadds
mov
and
mov
lock
leave
and
inc
mov
sub
push
xchg
lea
mov
frndint
xor
mov
push
and
adc
pop
ffree
push
push
idivb
jno
jne
je
outsb
adc
cld
or
and
aas
and
xor
sub
in
ret
popa
jg
and
fnstenv
cmpl
outsl
or
in
xor
cmp
inc
insb
popf
rcl
stos
push
in
mov
cmp
dec
xchg
sbb
and
icebp
dec
mov
cmp
mov
and
or
pop
push
mov
xchg
adc
xchg
mov
movsb
fwait
addr16
jbe
xor
lret
mov
shlb
div
xchg
lods
and
xor
dec
fisubl
jge
aas
test
sbb
inc
js
pop
dec
bound
int3
int
and
rcr
mov
mov
movsb
test
mov
pusha
test
add
mov
sub
jns
cwtl
daa
jle
xchg
push
fs
xchg
mov
ret
stc
xor
test
inc
or
rcll
mov
jle
sbb
stc
sbb
pop
sbb
cmp
mov
mov
lods
out
xor
jo
pop
cmp
xorb
dec
fiaddl
xchg
insl
push
inc
mov
cmpsb
sbb
push
subl
dec
into
mov
test
mov
pop
mov
sub
xchg
std
jne
pop
sbb
shll
je
sbb
cmp
dec
xor
mov
mov
rorb
ljmp
stc
fidivl
loop
in
cmpsb
out
js
sbb
stc
jg
in
ret
push
inc
pusha
jge
xchg
sbb
in
add
out
arpl
loope
in
addr16
test
and
lcall
std
in
insb
xchg
cwtl
or
loope
mov
in
subl
inc
sbb
and
push
pop
cmp
es
and
lret
jns
sbb
add
sub
jl
orb
pop
sbb
testb
fiaddl
insl
jg
pop
out
jl
pop
xchg
push
inc
sbb
add
and
out
frndint
cmpsl
inc
pop
push
jne
adc
leave
shlb
cmp
jl
push
push
inc
pop
lods
sbb
sbb
push
loop
lahf
lock
jg
das
fnstsw
jmp
pop
dec
popf
mov
flds
lret
lahf
test
rcll
inc
cltd
sbb
xchg
and
insl
xor
cld
enter
mov
xor
dec
xor
rclb
decb
popa
data16
je
and
jns
inc
jae
jge
into
in
test
add
mov
shrb
sysenter
pop
mov
adc
out
sti
shr
jbe
adc
insb
push
inc
shlb
ljmp
jmp
dec
sbb
pop
mov
mov
jg
jmp
leave
std
push
int3
xor
imul
jne
dec
xchg
sub
lods
test
call
push
data16
mov
dec
jl
scas
cltd
repz
push
pop
ljmp
mov
cmp
bound
insb
pushf
jp
mov
inc
pusha
dec
xchg
stos
pusha
test
dec
mov
addr16
popf
sub
cmp
loopne
neg
nop
movsb
cmp
imul
into
mov
jmp
or
xchg
push
xchg
stos
adc
add
dec
inc
fists
pushf
test
cmpl
sub
rcrl
ss
xlat
xchg
addb
imull
daa
mov
loope
insb
mov
les
sub
dec
lods
mov
lods
stc
sub
data16
imul
push
fiaddl
in
dec
add
pop
hlt
aad
push
stos
xchg
sti
dec
cmp
lds
pop
jae
push
xchg
dec
sub
adc
jle
arpl
xor
mov
ret
mov
or
pop
sub
push
sub
add
xor
mov
or
push
inc
xchg
gs
roll
push
jbe
adc
mov
sub
inc
in
das
fbld
ljmp
lods
aaa
and
dec
jae
dec
stos
sbb
mov
cmpsb
adc
shll
scas
mov
push
cmc
push
adc
inc
push
sub
int
push
xor
pop
loop
popa
pop
mov
cmpsb
sbb
fists
mov
daa
loop
and
and
dec
das
scas
dec
je
mov
mov
dec
xor
mov
and
sbb
cmp
cmp
ror
xchg
push
lret
xor
mov
testb
jl
sbb
repz
scas
jnp
xchg
xchg
or
addr16
leave
fnstsw
in
sahf
sub
out
adc
lcall
adc
jmp
mov
dec
or
add
add
xchg
and
xor
lods
cmp
sbb
jb
and
cli
jle
lret
rcr
adc
dec
inc
andl
jbe
aaa
arpl
out
adc
xor
ret
mov
pusha
and
jnp
in
sbb
push
mov
lods
nop
sub
call
cwtl
jp
ds
fstpl
cmp
in
loope
andl
out
fldcw
mov
ja
rclb
lcall
jbe
cmp
iret
frstor
push
pop
xchg
cmp
dec
jle
and
sbb
mov
xor
mov
pop
mov
jb
sbb
pushf
jns
fildl
adc
je
sbb
jno
ljmp
and
pmullw
ret
push
idivl
mov
ret
mov
shlb
mov
bound
stc
sub
and
mov
shlb
push
mov
xor
lds
sbb
jmp
add
test
or
sub
inc
movsl
movsl
xchg
sbb
testl
aaa
sahf
jns
xchg
mov
mov
inc
xor
sbbl
pop
sub
mov
into
or
ret
add
ja
rcrb
add
mov
roll
test
and
test
jp
push
ficomps
fs
cmp
into
sbb
cmp
mov
rcrl
fstps
mov
mov
pop
inc
pop
inc
aas
sbbb
dec
std
push
jb
and
ret
testl
pop
push
inc
cmp
sti
fdivs
inc
dec
adc
and
cmp
jo
das
or
sub
imul
cmp
push
ret
jo
stc
push
sti
dec
outsl
jmp
mov
mov
stos
stos
out
divb
mov
add
dec
rcl
xchg
xor
pop
ljmp
pop
stc
ret
add
insl
mov
and
add
jne
inc
adc
sub
fbstp
jne
xor
pop
outsb
insb
dec
inc
cmpsl
xor
mov
cmp
fidivrl
mov
test
mov
hlt
pop
movl
lcall
sarb
mov
int
mov
loope
lret
sub
push
movsb
xor
mov
fmulp
enter
cmp
sub
and
jne
pop
loopne
cmp
sbb
jae
dec
fidivs
into
test
pusha
pop
xlat
pop
dec
scas
loope
inc
int3
test
jne
popf
inc
sbb
leave
and
arpl
adc
and
jecxz
call
call
iret
lods
nop
push
enter
ret
jp
fsubrp
int
lock
jecxz
jmp
cmp
stc
xchg
out
jp
sub
std
mov
imul
push
cmpsb
or
in
adc
inc
ja
rol
enter
xor
dec
imull
xchg
adcl
mov
add
pop
add
push
jo
mov
inc
or
jbe
dec
dec
xor
mov
jmp
sbbb
movsl
mov
jp
into
shll
inc
xchg
mov
shrb
push
jo
lods
dec
xchg
xchg
mov
mov
or
add
xor
push
enter
pop
sarl
stos
stos
push
add
push
xchg
cltd
sbb
sbb
clc
push
xchg
lock
loope
pop
ffree
mov
mov
mov
test
pushl
ja
jno
xorl
push
int
pop
aad
fdivl
sbb
lret
lds
mov
sub
std
cmp
fildl
enter
rep
addb
sub
or
lods
sub
mov
inc
cmpsb
sti
bound
push
add
pushf
out
test
jnp
jmp
fidivrs
arpl
and
cmpsl
mov
and
mov
mov
sub
xchg
in
addr16
repnz
pop
test
sub
pop
jl
mov
outsb
leave
movsl
rol
jnp
in
mov
in
or
cmp
lds
and
xchg
jge
mov
insl
in
orb
shl
mov
lcall
jbe
movl
push
test
mov
jp
push
addr16
xor
mov
les
sahf
sbb
or
mov
mov
inc
and
lods
mov
mov
aaa
adc
cwtl
mov
pop
lahf
lea
sub
hlt
aad
aas
pushf
mul
loope
cmp
hlt
sub
movsb
mov
push
pusha
dec
mov
sarl
adc
cmp
ret
pop
loop
push
cmp
push
mov
mov
sbb
or
push
gs
cmp
xor
and
jae
pop
sbb
jnp
jnp
adc
jl
sarb
dec
sub
ret
or
and
test
in
jne
inc
add
xor
stc
dec
mov
add
repnz
sub
sbb
adc
fcom
mov
lds
inc
aam
pop
imul
xchg
inc
xchg
or
mov
cmp
xchg
loop
sbb
fucomp
bound
mov
testl
test
adc
adc
sbb
add
xchg
push
adc
cmpsl
test
dec
push
rolb
push
xor
jmp
xor
cmc
mov
xchg
repnz
inc
test
inc
dec
xchg
xorb
sub
movsl
mov
xchg
incb
or
cmpsl
scas
jmp
adc
sbb
mov
push
inc
lahf
xor
lods
pop
popf
mov
adc
jne
xor
mov
mov
dec
or
in
dec
into
call
clc
jno
fimuls
stos
fwait
test
jl
div
push
test
mov
sarb
movsb
js
stos
shl
push
inc
jb
and
iret
jg
lock
cwtl
call
mov
jne
outsl
clc
and
mov
jnp
cmpsl
and
bound
cmp
fwait
mov
popa
xor
mov
or
repnz
mov
push
adc
cs
dec
test
pop
or
incb
inc
fldt
and
sub
dec
and
ja
nop
sarb
in
or
mov
xor
cmpsb
push
sahf
stos
lds
ret
mov
in
sub
pop
lea
daa
jns
bound
out
dec
insb
push
arpl
test
dec
cmp
cmp
xchg
ja
push
add
cld
xchg
scas
inc
mov
out
test
fwait
ljmp
gs
stc
push
cmc
js
hlt
cli
lods
clc
shll
adcb
int3
inc
insl
xor
mull
mov
add
mov
push
hlt
mov
push
pop
decl
xchg
jbe
adc
add
push
inc
aaa
mov
mov
adc
xor
ffreep
push
xchg
cmp
enter
jo
push
xor
jg
roll
pop
arpl
cmp
adc
bound
ljmp
lcall
daa
mov
gs
and
adc
or
scas
repnz
out
mov
xchg
and
sahf
call
jno
add
enter
mov
mov
xchg
imul
lods
lahf
pop
cmpsl
rcll
sbb
lea
fwait
loopne
jns
push
mov
mov
mov
pop
sub
pop
sbb
mov
add
push
ljmp
stos
lock
aas
mov
in
lcall
aad
sbb
add
jge
daa
jg
jge
dec
push
push
mov
push
mov
push
fs
sub
push
pop
out
lods
lea
jbe
cmp
shr
lcall
lret
jb
daa
adc
sub
filds
push
bound
aam
xchg
std
xlat
gs
fimuls
dec
mov
mov
je
xor
push
fdivs
jl
sbb
mov
adc
ja
xchg
mov
xor
push
push
cwtl
xchg
sbb
jmp
mov
mov
das
dec
or
aas
mov
cmp
mov
adc
data16
std
lret
roll
push
pop
inc
xorb
adc
movsl
popa
test
jmp
dec
lret
mov
loope
test
pop
pop
pop
push
and
popf
add
fs
mov
ror
mov
push
cs
mov
bound
in
daa
out
mov
aam
inc
or
cs
repnz
mov
mov
push
push
pushf
outsb
jle
jb
dec
stc
pusha
dec
jbe
shlb
cli
mov
adc
pop
fdivl
inc
arpl
aas
mov
mov
out
loope
pop
aad
push
repz
and
mov
cmp
xor
jge,pn
or
lock
mov
mov
xor
jns
cmp
mov
loop
lret
push
fs
negl
int3
lea
cmp
in
lds
cmp
rcrb
mov
loop
jae
jp
pop
jnp
ret
mov
xchg
daa
mov
rorb
mov
push
lcall
mov
and
shlb
sbb
je
xchg
jbe
ds
ja
mov
cs
mov
mov
push
cmp
inc
cmp
fmul
sbb
fwait
add
movsl
aaa
inc
jmp
jae
push
push
rcl
and
in
mov
jb
xchg
push
ret
sbb
cmp
jnp
jp
cmc
jmp
mov
aas
mull
mov
loopw
dec
in
sbb
loop
repz
xor
cld
dec
test
call
xor
adc
loope
push
pop
mov
fsubs
pop
sbb
and
pop
mov
push
push
xchg
decl
fstpl
xchg
pushf
xchg
mov
out
cmp
fcmovnbe
sarl
jno
int
jbe
adc
out
outsb
jbe
dec
add
enter
jge
mov
xchg
pop
sbb
fwait
push
mov
and
adc
ret
and
mov
outsb
mull
sub
inc
fdivl
into
xor
hlt
mov
mov
lods
int
in
mov
cs
ret
mov
movb
jle
xlat
mov
mov
bound
and
stos
xchg
out
ret
mov
ds
sub
sbb
jle
jle
mov
fidivrs
mov
inc
subb
jno
outsb
cmp
add
fstl
sahf
cmp
xchg
mov
push
mov
fucomi
sub
repnz
sub
push
out
cmp
ljmp
pop
xchg
xchg
out
scas
insb
mov
xchg
lcall
mov
cmp
xchg
mov
push
ss
and
or
xchg
in
or
or
jb
fdivrs
sbb
mov
mov
xchg
icebp
jnp
push
cmpb
mov
bound
test
xchg
add
popa
int
test
push
leave
sbb
loope
iret
cwtl
repnz
pusha
aas
aad
bound
push
xor
sub
and
insb
lret
mov
sbb
and
into
dec
sbb
mov
mov
mov
mov
and
outsl
inc
mov
and
enter
testl
fiadds
imul
xor
xorb
or
push
aaa
and
xchg
jns
popf
shlb
out
fldcw
inc
insb
out
or
push
gs
ficoms
outsb
push
dec
pop
pop
mov
jl
out
std
mov
addl
xchg
jne
sub
nop
sbb
addr16
nop
push
xchg
cmpsb
neg
iret
insl
jmp
jmp
mov
mov
cmpb
notl
gs
pop
jp
in
mov
ljmp
mov
ljmp
int
cltd
out
fildl
outsb
faddp
shll
sbb
pop
jo
push
clc
imul
lds
cmp
arpl
inc
sbb
repnz
sbb
inc
cmp
js
xor
or
fdivl
stc
cltd
stos
mov
inc
repnz
mov
incb
cwtl
in
mov
lds
dec
sbbb
xor
inc
cmp
or
pushf
loope
mov
add
insb
fsubrs
lcall
xorl
scas
xchg
pop
repz
jge
push
inc
in
dec
xor
cmpsb
mov
adc
xchg
enter
imul
jbe
mov
or
aam
or
and
andl
adc
inc
mov
icebp
popf
insl
loope
push
repnz
bound
pop
jae
cmp
int3
or
rcrl
sahf
movsb
lods
icebp
adc
nop
add
xchg
fsts
dec
movsl
sti
ljmp
sbb
jmp
ljmp
or
or
fdivl
mov
sbb
mov
jg
and
inc
loop
outsb
stc
imul
int3
lret
outsb
mov
push
jnp
test
mov
fs
sub
sub
push
or
rolb
cmp
push
pop
hlt
and
ret
test
pop
adc
aaa
mov
mov
stos
lcall
hlt
lock
imul
pop
and
jg
jbe
jno
jb
lret
lret
pop
stos
fadd
mov
rclb
int
xchg
clc
lods
sbb
mov
fisubl
mov
clc
nop
arpl
testl
int
sub
ds
dec
nop
int
or
pop
jae
pop
das
mov
in
data16
or
dec
std
faddl
push
push
dec
pop
inc
bound
jecxz
pop
ja,pt
aas
das
jbe
aam
pop
enter
lcall
shll
mov
in
popa
fimull
aas
sbb
lcall
jle
or
dec
pusha
aam
mov
into
out
lcall
jns
mov
rcrb
sbb
scas
jge
add
sub
notb
lods
dec
cmp
sbb
movsb
sub
mov
out
lcall
aas
mov
push
mov
mov
xchg
push
fisubs
shl
push
std
popf
sbb
aad
test
lret
movl
xor
sahf
outsl
push
fnstenv
out
adc
adc
add
ret
inc
sbb
lcall
in
movsb
in
adc
daa
push
pop
gs
mov
mov
jno
fidivrl
cmp
sub
cld
jle
xor
arpl
pop
push
pop
lock
and
sbb
jmp
outsl
outsb
jns
lahf
sub
movsl
pushf
xor
clc
xchg
xchg
dec
jp
mov
negb
lods
cltd
jp
out
nop
pop
fildll
fwait
jno
andps
jl
movsb
shlb
popf
test
mov
dec
add
pop
mov
movsb
outsb
xchg
dec
ficompl
lods
mov
add
lcall
std
adc
fbld
test
movhps
gs
mov
dec
shll
imul
movsl
enter
jle
outsb
and
mov
enter
add
inc
test
cmp
int
shll
jp
push
aad
faddl
adc
test
js
movsb
jle
pop
dec
dec
xor
push
dec
je
ss
fisubrl
rclb
jecxz
mov
cmpsl
xchg
sub
cltd
shld
push
negb
ret
add
js
orb
sar
adc
movsb
outsb
cmpsb
push
xchg
js
mov
or
cld
jg
inc
hlt
lret
iret
or
push
rolb
xchg
jne
icebp
mov
sub
leave
push
lret
lods
shrl
add
pushf
mov
mov
outsb
xor
loope
ja
outsb
xchg
and
int
push
aad
mov
jns
adc
lret
push
xor
sub
fwait
and
jge
mov
and
cmpsb
inc
push
dec
xchg
xlat
enter
testb
add
lods
jne
pop
push
rcrl
pop
ret
lcall
xchg
mov
xchg
xchg
pop
std
and
adc
push
dec
test
cltd
cmp
adcb
push
xchg
sub
cmp
dec
cmp
mov
into
dec
shrb
cwtl
fld
fs
push
mov
addr16
in
inc
mov
push
jnp
imul
les
inc
pushl
cltd
popl
fwait
mov
xor
jp
out
fistpl
inc
inc
cld
mov
adc
lcall
jle
sub
cmpl
nop
or
jp
xor
sub
inc
icebp
xor
pop
nop
popf
add
inc
add
adc
sbb
icebp
and
loopne
add
xchg
fsts
leave
jo
mov
adc
and
test
sti
arpl
inc
fidivrl
jo
das
push
imul
and
icebp
subb
cmp
jae
or
mov
push
xor
inc
sub
mov
das
popa
push
hlt
lods
rolb
ljmp
cmp
sbb
fsubrl
and
push
xlat
mov
inc
aad
dec
out
mov
fbstp
dec
je
subl
sahf
imul
data16
inc
adc
pmulhw
add
ss
dec
loope
scas
and
cmp
mov
cmp
push
lods
xor
enter
mov
int
mov
fsubl
dec
pop
scas
add
loop
dec
mov
sbb
cli
cmpsl
pushf
sub
into
testl
pop
push
scas
mov
fimuls
imul
adc
in
mov
lock
in
lods
mov
mov
xor
add
fs
mov
jl
mov
sub
xor
fnstsw
xor
std
xchg
mov
jmp
jl
stos
fiaddl
call
out
or
in
shlb
and
jecxz
in
and
push
pop
xor
mov
lds
leave
inc
xor
mov
jp
xchg
test
mov
inc
hlt
xchg
pusha
inc
in
test
pusha
dec
and
sbb
or
sbb
in
push
jbe
movsl
cs
push
cmpsb
ja
and
dec
mov
add
stos
adcl
inc
mov
shrb
sub
sahf
sti
sub
fcoms
pop
cmpsb
nop
rol
adc
mov
test
adc
or
jle
mov
lret
add
in
imul
adc
add
fwait
mov
push
xchg
pop
shl
insb
lods
popa
stc
arpl
cmpsb
adc
fldt
mov
pop
arpl
stos
push
jl
loopne
mov
or
ror
bound
out
dec
dec
enter
lret
xchg
ret
lret
adc
xor
add
out
test
mov
push
jmp
in
mov
int3
adc
push
xorb
inc
jnp
xchg
cmpsb
mov
pushf
mov
pop
dec
mov
mov
xor
inc
jl
das
jbe
mov
fs
pop
in
mov
sahf
je
push
inc
pop
jae
rcrl
inc
sarl
dec
je
and
je
pop
inc
int3
iret
int3
mov
lret
xor
and
dec
shll
sti
dec
add
hlt
inc
add
adc
cmp
add
mov
int3
repz
lcall
je
movsl
sbb
mov
mov
dec
xor
or
daa
imul
inc
call
jne
mov
adc
and
adc
insl
adc
xchg
lret
insb
in
loop
cmp
fimuls
mov
xchg
xlat
jp
inc
jg
leave
insl
cmp
pop
rclb
add
pop
pop
shrl
in
or
pop
xor
cmp
xchg
out
sbbl
cli
inc
jl
sahf
scas
sbb
add
fldl
and
and
pop
add
shlb
js
scas
xor
imul
mov
sub
mov
fldenv
rcr
jl
adc
in
shl
lock
es
pop
mov
divl
adc
and
sbb
add
mov
adc
cmp
arpl
pop
sbb
popf
and
pop
sbb
lret
aaa
pop
sub
jnp
scas
xchg
cmp
daa
xor
xchg
adc
inc
aaa
mov
js
jbe
into
je
mov
das
push
adc
pop
mov
adc
cmp
dec
inc
mov
mov
sbb
test
push
mov
in
pop
jno
aam
ret
ja
repz
push
ret
ret
mov
adcb
xchg
cltd
mov
mov
and
adc
stc
sub
ja
inc
fiaddl
stos
pop
push
sub
gs
insl
jg
ret
call
push
cmp
inc
loopne
pop
loope
cmp
cld
xchg
pop
adc
outsb
jg
movsb
shll
loopne
divl
cmpsb
mov
and
subb
cltd
xor
std
add
pushf
and
rcrl
jno
scas
icebp
icebp
flds
mov
or
pop
bound
adc
daa
cli
ret
rorl
ja
pop
jg
sub
loope
imul
or
in
mov
sbb
mov
cltd
and
pop
inc
andl
sti
pop
in
cmpsl
pop
pop
xor
xchg
ss
mov
push
inc
sub
mov
cmp
cmpsl
pop
mov
pop
wbinvd
inc
clc
add
test
push
cmc
cmp
mov
andb
jg
imul
push
scas
test
and
loope
push
push
push
testb
dec
fsubs
jle
xchg
insb
and
int
je
cltd
fsts
data16
imul
inc
pop
jo
inc
mov
jb
jo
lret
inc
ja
adc
xchg
cmp
dec
jle
dec
mov
xchg
and
mov
pop
xor
sbb
push
mov
je
dec
lock
jp
stos
sbbl
test
mov
cmpsb
jmp
and
xor
into
mov
arpl
addb
mov
fcmovbe
xchg
fistpll
in
orl
sbb
or
sti
add
mov
mov
jo
or
das
jb
pop
out
mov
push
div
jno
and
icebp
inc
outsb
cmp
insb
in
jae
subl
stos
sarl
or
pop
cmp
shrl
aad
sbb
sub
fdivrs
and
xchg
fwait
imul
pop
or
jle
xchg
push
or
fidivl
and
sub
mov
outsl
out
aaa
dec
lcall
mov
movsb
or
and
repnz
sbb
xchg
es
and
aaa
mov
mov
pop
lea
rclb
into
stos
mov
imul
adc
or
pop
mov
ljmp
mov
lahf
stos
les
das
cmp
adc
lds
pop
xchg
int3
dec
or
sbb
add
js,pt
dec
fcmovnu
jmp
xchg
mov
pop
xor
jae
fwait
inc
daa
sub
out
call
in
lods
inc
cs
repz
push
ljmp
adc
pop
repnz
sbb
mov
imul
mull
or
sub
orl
lret
dec
lahf
mov
xchg
popf
dec
ret
push
jb
push
sbb
or
test
or
sub
nop
out
pop
sub
ljmp
movsl
inc
cmp
xor
push
in
adc
or
mov
sti
cmc
pop
std
pusha
ja
cmp
add
lahf
iret
sub
jle
sbb
sbb
push
mov
mov
push
add
mov
negb
inc
rol
ds
or
pop
pop
lods
inc
lretw
daa
adc
xchg
or
addb
xor
mov
push
xor
lret
ja
stc
mov
aaa
lcall
dec
jnp
sub
clc
adc
mov
push
lods
movsb
lods
xlat
jne
sbb
rcrl
lea
out
push
or
into
test
jns
sar
jbe
xchg
xor
mov
sub
mov
push
or
xorb
shl
test
jecxz
fnsave
stos
enter
and
mov
cmp
call
sub
inc
cmp
inc
sbbl
mov
jb
imul
fscale
ja
enter
shlb
dec
jb
cmp
xchg
cmpsb
xchg
cwtl
push
in
cmp
push
imulb
or
pop
iret
loopne
mov
daa
sbb
or
iret
sbb
dec
cmc
pop
hlt
test
add
shrb
xchg
rcll
xchg
add
cltd
jge
stos
fsubrs
rclb
fstpt
push
inc
push
aam
out
sbb
xchg
and
jns
ljmp
aas
ja
aam
iret
xor
fwait
or
mov
imul
fisubl
cli
lahf
sbb
dec
mov
or
jns
xchg
cmp
and
push
out
stos
rorl
outsb
out
lock
repnz
pop
dec
pop
xor
arpl
test
or
lss
push
xchg
mov
or
ljmp
cmc
pop
aam
mov
adc
xor
cmp
test
or
jae
jecxz
cwtl
cwtl
add
push
and
test
mul
push
sbbb
add
repz
fmull
lcall
jns
call
loope
pop
imul
iret
mov
cmpsl
ss
mov
mov
ljmp
imul
push
out
sar
sbb
inc
jg
and
add
pushf
mov
cmpsl
fcoml
iret
shlb
jecxz
idiv
mov
leave
push
sbb
scas
rorb
out
mov
mov
rorb
and
loop
sbb
test
or
sbb
adcb
pop
mov
imul
lds
seta
lahf
test
fldt
xchg
jnp
ficoms
cld
insb
fldl
cwtl
cli
jo
addr16
cmp
ds
addr16
fwait
sbbb
and
mov
pop
lcall
push
mov
jne
fisubrl
add
imul
dec
insb
or
mov
dec
or
into
adcb
fcomi
push
dec
ficoml
pushf
and
cmp
rorb
addr16
xlat
mov
push
popa
ljmp
test
das
sub
add
mov
and
xor
jmp
push
aaa
imul
mov
loope
out
push
div
outsl
mov
jge
lea
xor
mov
jbe
inc
inc
ret
sbb
xchg
in
ljmp
xchg
sahf
scas
mov
daa
fcompl
xchg
jp
jmp
data16
mov
in
inc
fidivs
mov
jge
and
dec
inc
push
dec
jl
cmp
lods
fwait
inc
adc
xor
dec
ficoml
shrl
mov
mov
push
aad
imul
dec
mov
push
dec
sub
dec
adc
add
pop
dec
mov
jecxz
arpl
mov
es
roll
pop
push
test
loope
in
xor
adc
sub
popf
aaa
clc
fnsave
fcmovnu
sbb
xchg
scas
xlat
jmp
sub
call
xchg
mov
jne
inc
add
sub
jae
cmp
cmc
pop
mov
icebp
mov
jo
and
outsl
mulb
lds
loopne
inc
add
sahf
outsl
push
push
mov
imul
dec
or
jle
fcomip
dec
push
loopne
sti
dec
shl
aaa
push
les
stc
mov
pop
mov
or
imul
lods
add
inc
repnz
je
jp
or
jle
out
add
push
std
cmp
icebp
xlat
das
mov
lods
mov
lcall
lods
inc
pop
stc
pusha
sbb
add
daa
pushf
mov
out
push
dec
mov
arpl
pop
and
dec
outsl
xchg
pop
in
add
outsb
sarb
and
jp
scas
add
cmp
rorb
pop
addl
lret
pop
imul
les
out
adc
mov
mov
or
jg
imul
movsl
inc
sbb
adc
std
jp
je
pop
sti
xor
mov
sarl
xchg
outsb
rol
ja
movsl
lahf
sbb
call
out
mov
daa
sub
sbbl
jns
sbb
or
xchg
jo
cmp
loop
push
pop
ret
mov
lods
push
add
lea
push
fmulp
fstps
mov
out
cs
and
or
inc
mov
loopne
add
movsl
adc
cltd
lods
das
cmpsb
adc
fsubl
pop
mov
insb
inc
xor
mov
es
addr16
adc
out
les
test
mov
out
popf
mov
mov
int
and
loop
add
xchg
mov
int3
hlt
add
sbb
xor
call
sbb
mov
jae
add
adc
and
es
data16
inc
rcrl
cmp
popf
cltd
test
xor
xchg
loop
pop
mov
pusha
fwait
das
mov
std
pop
xchg
sub
popf
adc
push
add
jno,pn
or
jnp
dec
sbbb
cmc
rorl
push
mov
stc
xchg
cmp
mov
mov
mov
cmp
fidivs
mov
mov
ficoms
jmp
lret
or
sbb
and
sbb
call
icebp
cs
jnp
push
adc
aaa
push
cmp
imulb
sbb
jno
fdiv
les
adc
xor
push
into
mov
xchg
popa
les
lds
dec
insb
and
jg
dec
enter
sbbl
inc
jle
mov
mov
cltd
xchg
inc
adc
js
lods
lock
sbb
xor
pop
mov
ja
fcomp
adc
pop
repz
addr16
sbb
insl
adc
adc
ja
shlb
lds
and
xchg
nop
xor
cmp
popa
insl
push
ffreep
fbstp
push
mov
xor
cmp
mov
rorl
movsl
xchg
test
mov
inc
sbb
sbb
fmulp
cltd
icebp
std
fldenv
push
lods
insb
inc
xchg
jge
ljmp
mov
xor
lock
or
mov
rclb
xchg
mov
inc
xlat
dec
je
or
or
lret
xchg
cs
sub
sub
push
punpcklbw
aam
inc
insl
push
cmp
je
mov
lcall
roll
lock
jb
addb
loopne
shll
mov
jns
into
lret
aas
repnz
icebp
dec
rcl
sbb
cmc
in
and
add
pop
sub
lahf
adc
ret
enter
cmpsb
mov
push
minps
push
cmp
pop
imul
mov
pop
cmp
push
sarl
sub
es
inc
cli
mov
push
and
mov
outsl
xchg
js
push
loope
push
xor
daa
sub
mov
cwtl
out
movsb
shlb
mov
push
cli
subb
pop
int3
test
pop
adc
add
pop
push
lods
shrb
xor
fildll
mov
fstpt
mov
test
test
mov
dec
or
pushf
aaa
int3
inc
mov
leave
fistpl
pop
inc
aad
and
jo
into
fcmovb
add
mov
int3
and
cld
rep
inc
fcoml
mov
push
call
mov
mov
or
mov
jnp
sbb
xchg
aas
sub
add
or
xor
push
aam
mov
loope
cmp
jb
xor
in
mov
insl
mov
lds
arpl
or
ja
xor
cs
fsub
xor
out
lock
pop
xor
dec
out
ja
cmc
sbb
cmp
test
add
mov
mov
xor
lds
enter
jmp
cmp
jmp
hlt
insl
repnz
and
shrb
and
adc
lea
mov
push
into
sub
dec
lods
daa
and
or
lcall
mov
xchg
or
cmpb
pop
pop
sub
mov
outsl
in
cltd
xchg
sbb
mov
cltd
dec
cmp
xlat
rclb
or
and
or
pop
out
fildl
mov
sub
ljmp
inc
and
sbb
add
jecxz
add
pop
scas
dec
stc
dec
fnstenv
cmp
adc
jne
and
pop
arpl
jns
mov
aad
test
aad
out
push
popf
inc
lds
sbb
dec
dec
lods
xchg
xchg
jmp
sbb
ds
ss
into
jbe
ret
fildl
mov
outsl
mov
mov
icebp
mov
repnz
pop
out
push
sbb
push
aaa
jg
mov
jbe
or
test
leave
fmuls
or
jecxz
lods
popf
into
dec
dec
and
cmp
xchg
aam
popa
adc
mov
xorb
test
sub
lahf
repz
scas
dec
mov
dec
out
push
lea
arpl
mov
sbb
jnp
enter
fisttpll
mov
cmc
mov
dec
add
push
mov
pop
jno
in
test
sub
mov
and
cmp
hlt
les
mov
in
mov
cmpsl
dec
jnp
ret
dec
loope
or
xor
mov
pop
jne
jnp
xor
pop
stc
jne
cmc
pop
inc
add
sbb
out
imul
shrb
push
pop
pop
cmp
pusha
call
jp
lods
pop
pop
jno
loopne
sbb
xchg
imul
mov
xchg
pop
cmp
sti
mov
lock
fimull
xchg
aas
inc
jno
movl
mov
jo
in
shrl
push
add
ds
mov
push
or
jo
cmp
lahf
loope
push
imul
or
and
enter
dec
out
push
lods
push
adc
test
sub
loopne
cwtl
fcomip
fadd
push
incl
jg
jbe
sub
out
outsl
in
movsl
xor
test
xor
lret
enter
roll
add
mov
or
push
movsl
mov
xchg
daa
cmc
dec
cmpsb
mov
int
fcoms
aaa
xchg
pop
add
jmp
xor
mov
fwait
xor
repz
and
ret
xchg
stos
mov
dec
cmp
add
cmp
enter
fidivl
cli
xor
adc
push
lods
test
push
xchg
or
ficomps
pop
in
sbb
xor
nop
sarb
jmp
inc
lahf
sbb
pushf
push
push
and
mov
pop
push
in
mov
cs
sbb
idivb
sub
adc
inc
xor
lret
and
loop
or
ja
pop
lret
cmp
push
adc
pop
test
outsb
mov
inc
xchg
jmp
add
xor
jns
pushf
sub
jg
rorb
sbb
jns
call
sub
fadds
inc
adc
cmp
mov
xchg
out
mov
test
pop
and
mov
lret
cmc
daa
push
push
ficoms
mov
and
call
inc
jp
xor
ss
pop
leave
xor
loopne
cmp
xchg
testl
out
in
in
sti
rcrb
incb
in
mov
and
inc
and
push
pop
iret
lahf
or
mov
lret
mov
repnz
in
or
mov
adc
fsubl
mov
or
in
roll
loop
sbb
rorb
inc
sbb
xchg
jmp
fsts
rclb
pop
sbb
popf
and
push
jg
jg
push
pop
dec
mov
jl
jg
aas
hlt
push
arpl
cltd
scas
cltd
les
add
data16
clc
add
test
jno
std
and
push
fwait
stos
test
shlb
cmp
aam
mov
jp
adcl
jnp,pt
push
je
or
push
rcrl
clc
cli
mov
sub
jne
adc
xlat
dec
pop
mov
mov
negl
dec
mov
data16
ficoml
sub
hlt
rorl
push
aas
sbb
jno
fisttps
stos
push
arpl
loope
sbb
xchg
push
and
jb
outsl
push
jmp
pusha
insb
fs
and
lds
xor
push
push
pop
or
push
dec
sbb
in
or
mov
es
adc
adc
mov
pop
lcall
mov
jl
lret
jne
xchg
adc
les
aad
push
cld
fs
adc
out
push
addr16
jbe
cmpsb
mov
pop
adc
outsb
inc
cld
adc
int3
int
out
xorl
or
push
pop
push
lahf
xchg
xchg
and
inc
cmp
push
cmp
push
stos
push
mov
xor
lahf
lock
fldl
int3
pop
mov
or
sub
movsb
cmpsl
push
xchg
in
cmpsb
sarl
mov
sbb
insl
cmpsl
or
repz
cmp
stos
sub
pop
loop
push
cltd
xor
mov
pop
imul
jmp
sbb
dec
xor
xor
loop
rep
inc
lock
test
xchg
add
dec
rolb
cli
data16
sub
mov
fisttpll
jb
es
punpckhbw
cmp
dec
shl
stos
push
negl
sbb
xor
mov
lret
mov
out
ljmp
cs
std
adc
jne
add
pop
sub
jp
pop
fisubs
fisttps
repnz
adc
pop
lret
mov
push
adc
dec
pop
cltd
mov
push
jmp
sub
sub
clc
imul
cmp
fs
push
mov
clc
aam
aad
push
test
and
sahf
mov
int3
je
inc
and
jnp
inc
dec
dec
xchg
daa
aaa
push
sub
and
loope
lea
cmpsw
popf
push
out
insb
jge
pinsrw
gs
jl
mov
xor
sub
xor
and
in
out
add
xor
lcall
push
int
stos
int3
inc
iret
out
adc
cltd
les
adc
sub
and
pop
sti
mov
stos
jns
dec
inc
lahf
subb
fndisi(8087
sbb
aas
int3
pop
jo
icebp
pop
mov
stos
push
cmp
mov
xor
imul
mov
jnp
jo
jns
inc
xchg
sbb
outsl
stc
test
scas
cmpsl
les
sbb
out
stc
ja
shlb
jmp
add
les
and
and
gs
and
inc
sub
in
cmp
test
mov
sbb
adc
push
sub
push
and
js
clc
adc
pop
dec
js
dec
orl
mov
jbe
mov
aas
push
push
push
or
jle
xchg
mov
loop
dec
test
mov
es
xchg
push
enter
and
adc
cmp
test
pop
mov
ds
add
and
cmpsl
jns
mov
push
sub
or
orb
mov
pop
adc
xorl
jmp
xchg
pop
cs
mov
inc
or
xchg
lea
ret
jb
icebp
div
cmc
and
and
repnz
aas
aam
mov
xchg
adc
cmc
pop
mov
test
push
jno
mov
inc
and
mov
popf
xor
mov
xchg
daa
pop
test
xchg
clc
imul
sbb
mov
insb
push
mov
repnz
jg
jle
movsl
loope
cs
cmp
jne
cwtl
add
arpl
pop
jl
sub
lret
sub
sub
dec
stc
mov
divb
cmp
adc
imul
mov
dec
mov
jecxz
cmpsb
cmp
rcll
sbb
jnp
sbbl
insl
add
jne
push
pop
clc
cli
fisubs
ss
andl
lahf
js
icebp
push
add
jl
ja
inc
cmc
xchg
loope
aas
xchg
push
nop
cmp
add
lcall
push
lea
cld
push
sti
sub
and
xchg
push
jb
pushf
mov
aas
cltd
jb
pop
push
lods
movsb
repnz
dec
repz
gs
dec
fsubr
arpl
jge,pn
push
popf
push
daa
add
mov
sbb
insb
rcrl
test
test
or
in
leave
inc
pop
mov
mov
add
ss
cmpsb
mov
rcl
push
inc
sbb
imul
adc
mov
and
cmp
fistpll
jae
loop
in
mov
push
inc
adc
jp
cmpsb
jbe
test
mov
mov
xorl
mov
push
mov
stc
dec
sarb
loopne
int3
cmp
stos
loope
push
sbb
sub
xchg
pop
jo
jmp
jno
sub
sahf
jp
mov
sbb
sbb
lods
inc
insl
sub
cld
out
or
loopne
mov
hlt
lods
pushf
or
add
push
rorb
stos
jp
jne
rolb
out
jns
inc
test
cld
movsb
imul
inc
jecxz
fistpll
test
push
aad
cmp
nop
insl
movsl
popa
xorps
or
shll
push
loop
mov
int
pop
sub
bound
call
adc
or
dec
add
or
lcall
fimuls
xchg
pop
mov
lds
arpl
mov
test
std
fsub
jmp
dec
out
ss
xor
push
test
jle
fwait
shll
test
popa
jle
and
and
push
dec
jl
mov
sub
xchg
push
jmp
and
xor
and
jp
mov
ss
imulb
enter
out
xchg
ja
jbe
cmp
in
and
pop
inc
xchg
cltd
push
cmpsl
cltd
add
and
leave
jle
shll
xchg
es
cmp
and
cmp
mov
out
dec
jg
xlat
inc
cs
inc
cmc
xor
sbb
push
push
mov
adc
cmc
rcrb
aas
fsubr
push
sub
pop
inc
int3
pop
push
lret
push
insl
outsl
mov
mov
sbb
stc
loopne
popa
lret
inc
out
bound
push
cld
dec
pop
mov
pop
stos
pop
mov
arpl
stc
lahf
addr16
add
outsb
lea
aas
enter
push
inc
push
in
sbb
mov
pushf
negl
sub
imul
outsb
or
cs
sahf
push
or
iret
pop
roll
add
in
fidivs
and
js
xchg
sahf
test
mov
add
or
jbe
inc
aaa
cmpb
mov
mov
adc
mov
xchg
into
lea
fmuls
mov
aas
mov
jecxz
pushw
xchg
lock
outsl
cmp
pop
movb
stc
push
pusha
test
loope
imul
push
mov
outsb
subb
lcall
cwtl
movsb
push
leave
sbb
inc
add
ja
ja
int
sbb
inc
stos
cld
cld
cwtl
mov
lret
sub
xor
pop
addr16
pop
push
sbb
mov
mov
add
jle
xchg
in
int3
cmp
dec
ds
push
nop
sarb
xchg
cld
and
leave
js
cmp
lret
in
push
ds
pop
fdiv
pop
fwait
mov
mov
movsl
dec
pop
xor
lods
sub
xchg
sub
mov
mov
dec
mov
dec
or
mov
xchg
cmc
inc
and
cltd
out
fimuls
push
lret
xlat
sub
fsubs
addr16
push
sub
jmp
dec
jg
and
mov
divl
mov
daa
rclb
and
or
xchg
decb
cli
aaa
push
imul
mov
ret
das
and
test
push
xchg
xchg
mov
and
lock
sbb
inc
jno
jne
xchg
jp
mov
aaa
cwtl
or
insb
frstor
in
iret
xor
shlb
mov
push
adc
mov
mov
dec
sbb
jmp
or
cmpsl
test
int
inc
iret
ret
je
or
or
jg
pop
rcr
shl
add
out
xor
and
pop
pop
mov
scas
sbb
pushf
mov
stos
dec
jnp
push
mov
out
cmpsl
loop
dec
mov
mov
inc
mov
repz
jae
rorb
pop
in
adc
ja
inc
mov
jecxz
inc
rcl
data16
cmpsl
icebp
xor
add
mov
data16
xchg
outsl
pop
jae
lods
lret
mov
cmp
adc
and
fstps
lcall
push
cli
aad
sbb
cmp
aad
sbb
xchg
jno
mov
andb
mov
sub
ficomps
sbb
dec
and
aas
outsb
cmc
adc
mov
rcll
dec
pop
and
jge
xor
iret
lcall
dec
test
scas
gs
mov
jmp
pop
sbb
clc
clc
pop
inc
pop
addr16
scas
insb
lock
lret
loope
idivl
jno
ja
je
mov
js
mov
cmpsb
fimull
fwait
nop
cs
jnp
inc
aaa
stos
sahf
mov
adc
dec
push
adc
add
jp
mov
adc
push
cs
sarl
jne
pop
shll
pop
mov
add
arpl
arpl
inc
rorl
and
cmp
jnp
and
sti
subb
xchg
rolb
cltd
mov
sub
repnz
cwtl
cwtl
sbb
jne
filds
je
andb
adc
repz
orb
daa
addr16
les
ds
movsb
std
test
mov
mov
or
mov
mov
pop
sbb
lds
inc
cmp
icebp
and
push
push
dec
es
imul
dec
mov
mov
xchg
inc
pop
mov
aam
cmp
inc
fldl
repnz
push
jbe
dec
jle
ljmp
inc
popf
add
es
rclb
sub
adc
insb
stc
movsb
out
add
sbb
xor
push
ljmp
imul
dec
xchg
cmp
std
fucompp
nop
out
iret
push
ljmp
jmp
cmp
dec
sbb
cli
loope
mov
roll
ds
xchg
sub
out
or
or
sbb
mov
sahf
mov
inc
insl
pop
cmpsl
mov
sub
inc
mov
int3
or
cmc
sbb
pop
into
pop
lock
stos
jle
mov
dec
bound
xchg
jbe
mov
mov
andl
dec
adcl
mov
ficomps
shrb
jno
dec
sbb
sub
fldenv
push
shrl
cmp
add
loopne
daa
xchg
loope
pop
pop
imul
mov
push
repz
dec
add
test
mull
xor
dec
out
and
jae
leave
push
outsl
mov
dec
mov
cmp
mov
sbb
es
aaa
lahf
ss
bound
cmp
or
xor
mov
mov
jl
jp
dec
jmp
mov
iret
cmpl
ret
insb
mov
cmpsb
mov
push
cmpsb
mov
sbbb
ret
cli
stos
dec
call
push
and
insl
cmp
add
arpl
cwtl
mov
enter
and
or
arpl
mov
repnz
pop
lds
scas
mov
std
std
mov
aaa
pusha
insl
mov
cmp
sbb
sub
fldcw
and
cmpsb
push
sbb
jo
adc
inc
push
adc
lret
roll
pop
or
mov
clc
dec
cmc
xor
clc
sub
in
mov
iret
scas
jo
pop
xchg
cs
movsl
adc
jnp
push
stos
xor
pusha
sbb
cmp
scas
bound
movsl
jge
adc
or
adc
lods
adc
or
std
sub
fnstenv
ljmp
roll
mov
jbe
cwtl
push
and
sahf
and
xchg
fdivrs
repnz
xlat
mov
pushf
lock
cmp
dec
les
dec
xchg
shll
mov
mov
jae
mov
xchg
jo
test
adc
mov
stos
cmpl
mov
xor
mov
lret
clc
jno
jae
pop
sub
push
ficompl
js
cmpsb
ljmp
pop
fwait
cmp
jae
inc
inc
outsl
cmp
sbb
test
sub
add
mov
inc
addr16
fadd
or
or
cmpl
sbb
gs
loop
adc
in
xchg
jne
out
xchg
mov
pusha
int3
data16
and
cmp
cmc
xchg
dec
dec
scas
mov
lret
cmpb
pop
xor
shrb
xor
jg
dec
cli
mov
in
cmc
int
ds
xor
gs
dec
loopne
push
je
cli
mov
in
jge
xchg
test
aaa
std
in
test
add
add
inc
les
loop
xor
jne
movsl
fcoms
fs
imul
inc
or
mov
jg
mov
daa
mov
test
stos
imul
addr16
adc
jecxz
jns
xchg
fldenv
jno
leave
xchg
out
ficoms
or
scas
push
or
cld
repz
cmp
lcall
or
aam
bound
adc
imul
scas
sub
insl
fldl
adc
stos
push
dec
pop
in
sub
orl
cmp
sub
push
out
inc
outsl
lods
cmp
sahf
cmp
imul
or
cmp
inc
insb
xor
lcall
sub
cmp
subb
xor
dec
jg
and
xor
shlb
fisubs
cs
lock
xorb
mov
jb
sub
or
rcrb
xor
add
xchg
xchg
adc
int3
das
int3
jg
lods
sbb
sbb
or
test
xchg
sti
or
fidivs
lret
mov
pop
inc
push
pop
js
jmp
inc
dec
orb
rdpmc
pop
mov
push
stc
jge
cmpl
mov
leave
aam
sbb
xchg
stos
hlt
icebp
jns,pn
scas
jno
inc
jge
mov
repz
hlt
daa
dec
imul
sahf
cmp
xor
xchg
sbbb
fdiv
mov
cmp
mov
add
imul
jg
incb
jno
bound
jp
cmpsl
stos
jnp
fwait
push
cli
loop
mov
dec
jae
jb
bound
push
xor
in
movb
jp
xchg
ljmp
fadds
test
mov
loop
mov
dec
lods
jb
or
cld
dec
fnstcw
and
cli
sub
pop
adc
out
int3
pop
xchg
loope
lret
cmp
add
cmp
int3
mov
mov
push
ljmp
xlat
loope
roll
jns
jmp
leave
lret
stc
inc
idivb
and
dec
dec
mov
pop
sbb
push
stos
fimull
jne
sbb
dec
movsb
call
push
sarb
rcrb
and
idivb
sbb
scas
imul
adc
add
orb
pop
pop
pop
pusha
pusha
test
dec
js
out
jge
mov
std
dec
or
stos
sub
arpl
leave
sbb
lock
xor
mov
jb
mov
add
arpl
xchg
xlat
popl
push
xchg
sbb
outsb
arpl
cmpsl
jnp
sbb
push
mov
add
dec
xor
punpckldq
lods
sbb
insl
fdivr
stos
fwait
bound
or
sarl
sbb
xlat
jbe
xchg
into
icebp
xchg
xor
mov
hlt
cwtl
adc
outsb
xchg
repnz
jmp
xlat
cmc
fwait
jmp
or
subl
out
pop
sub
inc
lock
adc
andl
push
repz
aad
or
bound
les
xchg
xor
popf
lock
in
out
push
enter
lret
shr
push
idivl
pushf
xchg
xchg
mov
push
and
jno
push
sbb
dec
adc
int
out
enter
sub
mov
orb
inc
insb
fld1
sbb
out
cmc
out
or
add
das
fnstcw
inc
je
jg
out
rorb
daa
inc
mov
inc
pop
mov
cmp
out
sbb
xchg
fldt
fcmove
iret
inc
shl
pop
enter
jnp
sub
dec
insb
jb
adc
mov
inc
inc
xor
lods
mov
negl
mov
and
adc
dec
pop
pop
mov
dec
or
push
sbbb
loope
enter
aad
or
out
movsb
in
cmpsb
pop
orl
shlb
add
dec
adc
xchg
movsb
jle
xor
adc
ja
xchg
mov
mov
sbb
lcall
pusha
xorb
sbb
sarl
add
mov
je
cmpsl
xchg
dec
repnz
int3
xchg
xor
or
popa
push
xor
int3
cmpsb
and
les
dec
cmp
cmp
dec
sbb
lret
or
push
adc
daa
or
mov
sub
popa
iret
popf
sar
sub
push
out
push
xor
mov
and
add
adc
cmp
adc
inc
dec
and
push
call
test
in
mov
adc
sarl
and
in
test
aam
xor
sahf
shl
loope
jl
icebp
lret
bound
data16
push
filds
movsb
mov
shrb
pusha
pop
pop
lahf
pop
mov
sbb
loope
add
inc
es
xchg
shrl
or
fdivl
jmp
repnz
popf
sbb
sbbb
pushf
mov
stc
icebp
xor
jb
addr16
imul
je
mov
cs
in
out
mov
and
loopne
shrl
sbb
cmp
xor
jp
sbb
pop
pop
sbb
repnz
test
idivb
inc
jo
xor
lret
neg
stos
and
lock
outsl
add
les
and
add
movsl
jbe
and
mov
repnz
icebp
jns
jle
inc
jne
mov
test
pop
push
iret
lahf
inc
sub
enter
sub
mov
lahf
mov
mov
mov
and
cli
lods
and
jl
rclb
pop
stc
nop
mov
fnstcw
je
fwait
pop
adc
jle
repnz
mov
mov
pop
or
sti
pop
inc
mov
aam
rcrl
xchg
mov
imul
out
or
cmp
loopne
push
and
lock
arpl
or
inc
cmp
ret
je
outsb
pop
lock
jl
sti
fldl
enter
inc
in
sbb
lret
cmp
inc
lahf
or
jg
aaa
les
add
adc
dec
js
arpl
mov
push
aad
fdivl
aaa
fdivl
xor
sub
dec
mov
xchg
addr16
sub
add
add
jge
cld
mov
push
xchg
cld
shlb
repz
mov
xchg
shrl
rclb
mov
push
subl
enter
fcoms
sub
sub
test
jmp
or
fldl
mov
xlat
mov
iret
mov
adc
push
in
test
repnz
fistl
jbe
add
in
cmp
xchg
out
adc
jge
xchg
scas
xor
ret
sub
dec
adc
arpl
xor
mov
mov
push
ljmp
mov
imul
outsb
mov
outsl
stos
aad
sbb
imul
imul
cmp
mov
dec
add
popa
out
call
xor
or
xchg
loop
pop
outsl
popf
jb
or
cmp
mov
cmc
aam
sarl
push
xchg
addr16
xor
les
sbb
jae
in
dec
mov
incb
loopne
inc
mov
aaa
sbb
jp
and
xchg
push
xchg
in
mov
push
ret
pop
mov
scas
gs
enter
arpl
dec
stc
push
sub
cmp
aaa
adc
jg
cmp
sbb
clc
jo
xchg
lods
mov
pop
fstpt
std
xor
pop
test
stos
mov
xchg
add
push
dec
mov
pop
or
mov
ljmp
addr16
and
add
push
jmp
cmpsl
add
or
mov
in
or
inc
sti
scas
mov
push
cmp
aaa
aam
lahf
loope
cltd
add
xchg
test
mov
lods
data16
icebp
add
into
dec
cld
xor
stos
bound
xchg
rcll
inc
pop
and
sbb
dec
filds
fcoms
cwtl
shll
dec
shl
sub
push
std
js
aad
mov
and
adc
insb
nop
jb
xor
pop
mov
mov
inc
movsl
push
pop
mov
push
adc
fwait
addr16
repz
push
mov
mov
rcrl
cltd
rcr
pop
inc
mov
popf
xor
loopne
push
cmpsb
inc
jle
lods
fsub
xor
dec
lret
add
sbb
mov
sub
add
stos
pop
jmp
xchg
andb
testl
jne
inc
add
mov
dec
fdivl
pusha
lock
dec
leave
rcrl
push
popf
out
ret
cli
shr
sbb
adc
call
inc
imul
in
scas
clc
mov
pop
mov
mov
mov
sub
in
sbb
out
inc
jmp
cltd
outsl
bound
dec
data16
add
fildl
imull
pop
and
xor
adc
out
dec
cmc
aaa
stos
movsb
data16
dec
movsb
xor
lods
ret
mov
cmp
andb
stos
dec
aas
sub
mov
ficompl
in
lds
jnp
xchg
sbb
mov
ret
ljmp
sar
out
std
test
push
jp
pop
les
add
lahf
les
and
repz
pushf
fnstenv
add
out
jmp
mov
jnp
lret
enter
add
lret
ret
rcl
into
pop
stc
inc
arpl
imull
les
fs
dec
add
pop
mov
jns
adc
cmp
dec
pop
push
in
xchg
mov
sbb
push
xlat
call
and
dec
cs
lret
sub
mulb
imul
push
insl
mov
lret
and
ret
jmp
das
hlt
push
dec
inc
xchg
mov
jecxz
push
adcl
in
add
cmp
hlt
dec
add
addr16
push
jmp
int
roll
sbb
lods
cld
in
out
push
loopne
mov
test
push
out
loope
bound
sub
mov
pop
mov
scas
loop
loop
pop
inc
inc
daa
cltd
dec
call
sar
mov
aam
insl
sahf
jns
adc
push
fsubl
mov
xorl
filds
daa
add
mov
adc
xchg
xchg
push
cmp
fnstsw
movsb
jmp
mov
pop
leave
shlb
sbb
ror
push
ss
push
fs
xor
pop
dec
fnstcw
pop
dec
pop
pop
jge
xor
xchg
sti
mov
cmpb
or
push
mov
mov
les
fistl
sbb
data16
mov
mov
loopne
inc
push
dec
sbb
lret
hlt
shrb
cmp
jno
faddp
jl
dec
add
sbb
cmp
lret
div
adc
daa
xchg
inc
shr
lret
je
cltd
dec
jle
orb
stos
mov
jp
mov
lret
sbb
push
repnz
lahf
push
sbb
adc
mov
and
and
mov
mov
pop
lods
xor
mov
mov
mov
das
pop
push
test
mov
loope
out
xchg
loop
push
cmp
cltd
jne
sub
jp
test
iret
pop
dec
mov
lds
mov
pop
or
adc
sti
xlat
push
filds
ds
test
pop
notl
cli
les
test
out
mov
mov
jl
pushl
cwtl
imul
xlat
mov
mov
push
stc
cld
int3
pop
xorl
or
shll
dec
call
dec
or
hlt
gs
fimuls
roll
iret
dec
mov
cmp
mov
mov
cmp
mov
addl
jg
in
jle
loop
pop
inc
repnz
icebp
aas
ret
mov
pop
dec
les
sbb
mov
outsl
jne
adc
sbb
or
inc
fstps
xchg
push
sub
fmull
fidivl
mov
aam
dec
jp
xchg
add
mov
cmc
adc
mov
imul
mov
cmp
aad
xor
xlat
xor
or
imul
pop
stos
xor
sub
in
leave
dec
nop
or
les
cmp
daa
fstl
fbstp
mov
stos
inc
mov
popa
arpl
insl
pop
clc
shlb
hlt
loope
and
push
faddl
xor
subl
mov
jecxz
push
imul
sub
std
inc
cs
dec
aaa
push
jbe
leave
test
cmpsl
lcall
cmp
push
cmp
mov
das
mov
sub
pop
push
push
adc
mov
sbb
sbb
pusha
outsb
mov
jb
or
mov
jl
cmpb
inc
and
xchg
pop
sbb
sub
nop
cmpb
shrl
faddl
sbb
sbb
into
test
lock
in
jge
movsl
xor
push
ja
loope
stc
xlat
out
jge
daa
mov
mov
shrl
xor
out
pusha
insb
imul
ret
cltd
mov
mov
inc
jbe
sar
stc
xlat
mov
lods
mov
cmc
mov
ja
sahf
dec
inc
fstpl
out
or
aas
sti
push
sbb
mov
pusha
ficoms
sub
cmp
pop
dec
rclb
fisubrl
dec
adcb
mov
mov
fcoml
jle
cmp
push
and
jne
insb
xor
sbb
pop
lock
les
jg
jl
in
xor
and
pop
cwtl
cmp
aad
dec
cmp
cmp
aaa
daa
test
in
push
push
pop
and
setnp
mov
repz
scas
gs
test
imul
popf
cli
dec
pop
lods
movsb
icebp
std
lock
and
mov
lea
push
sub
inc
or
in
loopne
scas
stc
rcrb
adc
out
lods
ret
loopne
inc
sete
repnz
sbb
pusha
cmp
mov
jge
xorb
mov
test
arpl
es
cmp
imul
xor
rorb
data16
pop
inc
lock
pop
push
sub
jno
xchg
mov
add
cld
mov
inc
jg
push
enter
lahf
dec
loope
pop
adc
add
jmp
sub
dec
and
stc
mov
add
xchg
inc
inc
sub
ret
xchg
in
jo
roll
ds
ficompl
add
popa
jg
and
cmp
dec
outsb
aad
mov
mov
xchg
adcb
dec
cs
imul
jnp
inc
lret
cltd
out
mov
out
push
jle
lret
fs
popa
cmp
les
push
add
stos
xchg
sbb
add
bound
dec
popf
in
mov
sbb
jp
in
mov
dec
lock
rclb
aaa
cmc
mov
test
or
aam
mov
inc
dec
cld
pop
xor
lock
or
aad
stos
mov
ds
jecxz
stos
push
jg
fistpll
dec
jl
divb
mov
shll
in
insb
in
sub
and
dec
jp
loop
cmp
adc
inc
popf
xchg
mov
sahf
arpl
add
test
iret
std
mov
inc
rorl
mov
int
sbb
pop
in
mov
out
jge
cmp
lret
loopne
pop
shl
cmp
adc
dec
shrl
pushf
lea
push
add
pop
push
addr16
pop
mov
paddb
lcall
popf
fwait
xor
aad
stc
push
and
sub
adc
fiadds
pop
or
cmp
cli
inc
jne
mov
insb
rolb
xor
push
andb
outsb
dec
shlb
mov
and
cld
inc
dec
adc
push
popl
ror
pop
add
dec
mov
cltd
lcall
scas
lcall
inc
jp
pop
mov
ret
xor
fs
in
roll
cltd
or
push
xor
adc
or
sbb
das
iret
dec
jecxz
cmpsl
out
or
push
scas
and
or
sarl
fs
adc
fs
and
mov
int3
call
mov
pop
mov
xchg
xor
in
cmp
lea
fiadds
cmp
pop
movsl
int3
adc
push
pusha
in
les
lret
and
mov
in
add
movsl
mov
insl
nop
inc
cs
aam
mov
fwait
jle
lea
inc
add
xor
enter
sbb
fisubrs
push
lods
imul
mov
enter
dec
shlb
and
jae
cmpsl
jmp
mov
jmp
dec
clc
lret
test
pop
popf
xchg
and
clc
add
testb
cmpsb
mov
pop
shr
dec
mov
jbe
or
jb
and
pop
cmpsl
xchg
lahf
ja
mov
xor
add
cli
gs
ficomps
icebp
jl
push
aad
int
sbb
mov
xchg
fwait
inc
stos
out
xchg
lahf
cmp
add
les
push
xchg
cmp
cmp
jae
lret
mov
out
les
sbb
push
je
dec
push
leave
jge
or
adcb
inc
pushf
dec
mov
int
ret
jg
std
lcall
and
inc
pop
push
fistps
mov
rcrb
andb
xchg
pop
add
jnp
dec
and
push
pop
add
vmovaps
dec
mov
mov
cmp
mov
nop
rcl
cmp
mov
or
xchg
daa
or
lcall
rcrl
push
enter
add
sub
adc
hlt
jl
mov
repz
pop
sti
jbe
sahf
dec
movsbl
inc
lcall
jecxz
push
sbb
shr
mov
iret
xchg
fldl
orb
xor
pushf
jle
aam
mov
lea
xlat
cmpsl
dec
pop
jecxz
popf
add
jmp
jns
push
xlat
and
dec
inc
je
test
stos
xor
ja
or
mov
and
mov
fmul
popa
xchg
pop
cld
jecxz
popa
adc
adc
or
mov
jecxz
mov
mov
scas
sbb
fdivl
add
mov
mov
cmp
inc
xchg
sarb
mov
push
clc
dec
xor
or
cmp
rcrb
fiadds
mov
shll
pop
in
sbb
fmuls
bound
std
dec
je
dec
pop
mov
dec
imul
dec
xlat
mov
push
mov
pop
push
movb
sbb
mov
inc
outsb
insb
repnz
push
mov
pop
pusha
jo
jns
mov
shrl
bound
out
orb
or
cwtl
and
jg
xor
xchg
push
mull
xchg
ror
ss
push
mov
push
popf
cmp
cmp
ficomps
outsl
clc
push
pop
push
popf
add
xorl
or
jmp
scas
lods
xor
out
movsb
cmp
out
sub
clc
cmp
in
test
pushf
xchg
out
sub
mov
pop
pop
dec
cmpsb
fstps
das
jg
and
and
aam
inc
pop
rcrb
add
add
xchg
popf
push
and
xchg
add
mov
iret
mov
and
cs
jmp
cmc
fadds
sbbl
sub
loop
pop
dec
pop
pop
xchg
ss
repz
dec
add
imul
mov
inc
int3
lock
insb
imull
idivl
addr16
inc
std
and
inc
push
sbb
mov
adc
loopne
imul
ja
sub
mov
dec
xlat
fwait
subl
test
insl
stos
inc
xchg
adc
push
lret
inc
push
outsb
sub
xchg
cs
outsl
loope
cmp
adc
icebp
jle
add
ss
test
out
arpl
pop
push
out
sub
pop
sub
pop
mov
js
inc
inc
lods
daa
out
push
in
mov
cli
fwait
pop
daa
filds
cmp
jmp
inc
cli
and
imul
cmpsl
test
jnp
int3
dec
mov
mov
out
inc
xor
sbb
inc
adc
out
sub
mov
fwait
movsl
js
add
loope
aaa
push
xor
jns
sbb
movsl
js
jle
ds
jmp
aam
addr16
mov
gs
ret
sub
push
mov
mov
gs
xor
xor
pop
cmp
dec
fidivs
jecxz
jae
push
ret
push
lea
incl
add
xor
int
and
cmp
nop
push
in
shlb
test
cmpl
fsqrt
mov
add
or
pop
repnz
enter
add
jl
les
ret
ror
add
xchg
xlat
dec
js
lods
fcompl
xchg
sbb
sub
je
inc
adc
lods
fimuls
jmp
jecxz
in
pop
lcall
into
in
push
pop
mov
addl
cmpsb
loop
insl
loope
dec
push
aas
lea
mov
jb
mov
mov
aad
mov
push
aas
cmc
push
imul
or
push
movsl
pop
stos
mov
test
data16
daa
jmp
jne
jmp
ret
rcll
daa
addl
xchg
dec
dec
push
int
leave
mov
jmp
pop
gs
dec
or
pop
rcll
stc
fsubs
add
sarl
mov
adc
pop
mov
jno
jns
and
sbb
cmp
xlat
addb
inc
pop
jge
mov
and
jae
outsb
sbb
int3
data16
xor
dec
out
iret
mov
sbb
inc
jmp
jecxz
push
xchg
aam
cli
jp
shlb
fbld
or
in
imul
sub
leave
int
jns
sbb
lds
pop
push
push
mov
jg
push
test
inc
adc
fbstp
mov
jb
and
stc
enter
push
dec
rcrl
and
push
xchg
mov
mov
mov
push
dec
cmp
stos
loopne
and
jns
mov
lahf
int
scas
das
iret
xor
loop
dec
scas
in
test
push
dec
out
es
mov
test
mov
mov
lret
flds
or
nop
inc
cwtl
mov
mov
dec
add
mov
lds
insb
push
nop
mov
inc
sub
outsb
adc
loope
ret
test
adc
outsl
adc
les
jecxz
loopne
inc
emms
pop
fstps
fcmove
aas
fs
dec
imul
and
nop
inc
push
insl
or
lret
push
lds
pop
xlat
inc
xchg
sahf
push
add
ret
mov
xchg
xchg
nop
subb
popf
dec
pop
mov
and
bound
and
push
cmp
mov
xchg
shlb
add
pop
pop
dec
lds
inc
into
cltd
fbld
mov
mov
loopne
mov
adc
xor
jmp
stc
in
mov
mov
mov
stc
xlat
jbe
and
jno
mov
je
xchg
sbb
out
inc
adc
add
xchg
jge
sub
mov
adc
jns
lods
cmpl
ret
dec
add
push
out
adc
push
push
sbb
sti
insb
negl
in
jns
jge
iret
mov
scas
pushf
pusha
stc
fwait
xchg
mov
int3
jp
push
add
test
push
stos
add
pop
lret
das
inc
sub
sub
dec
add
orb
cmp
xchg
cmp
lea
aam
push
dec
mov
pop
testl
xchg
mov
mov
pop
dec
jp
jg
xchg
sub
xchg
or
dec
sub
cmpsl
int3
insl
adcb
sbb
fs
cmpsl
sahf
add
test
test
xor
lea
mov
sti
jb
daa
mov
push
fisubrs
mov
xchg
shlb
push
in
test
add
pop
lds
jne
int3
mov
pop
cmpsl
pop
lret
adc
push
ret
fs
dec
jp
xchg
jl
xlat
cmp
inc
pop
cwtl
or
xor
jl
cmp
bound
in
std
and
inc
push
adc
or
adcb
cmpsb
xor
mov
sbb
scas
into
xor
jns
push
das
xchg
xchg
xchg
repz
mov
lcall
in
fs
scas
in
inc
std
inc
ljmp
cs
mov
fldln2
jo
jo
lret
adc
jecxz
mov
sahf
into
clc
enter
addl
pop
out
dec
xchg
cmp
pop
aaa
cmpsb
pop
mov
les
loopne
push
testb
pop
push
sub
in
fbld
xor
jg
sti
iret
adc
xchg
push
pop
lcall
arpl
into
jne
das
aad
mov
pushf
xchg
push
push
xchg
hlt
daa
in
inc
mov
mov
add
mov
outsb
mov
or
and
push
fwait
xchg
push
pushf
pop
and
inc
movlps
dec
lret
lock
jnp
jg
into
dec
test
xor
cltd
jg
sahf
mov
dec
jg
add
or
cmp
clc
mov
mov
mov
cmp
loop
mov
cmp
aad
pop
sub
loope
inc
xchg
test
outsl
js
inc
inc
sbb
pop
mov
mov
shlb
rcrl
aaa
pop
push
xchg
cmpsb
inc
push
inc
inc
cmp
dec
incb
sbb
cltd
repnz
cmp
xchg
and
push
push
pop
add
pop
sarb
pop
jecxz
stos
xchg
jo
mov
mov
mov
jae
pop
dec
mov
sub
pop
push
xchg
sub
inc
and
pop
lcall
sub
les
je
cmpsl
test
add
cld
add
xchg
push
lods
movzwl
and
jg
outsl
xor
icebp
lahf
loop
jecxz
into
in
cmp
js
dec
daa
rcr
mov
adc
mov
cmp
cmp
sub
add
dec
arpl
mov
jno
shr
fwait
addr16
adc
ds
cmpsb
in
xlat
dec
sahf
adc
mov
xor
sbb
or
shll
jb
adc
aaa
addb
pop
mov
push
pop
xchg
out
cmp
mov
cmp
mov
scas
decb
int3
sti
jl
add
mov
jne
repnz
adc
js
inc
sbbl
lods
cmc
push
pop
pop
jne
cmp
mulb
repz
mov
pushf
add
daa
popf
popf
out
stos
and
push
roll
pop
xchg
mov
icebp
push
mov
mov
call
ret
or
ficoml
lods
test
stos
mov
jg
fcomps
fs
jbe
in
movsl
aad
sub
dec
rolb
ljmp
adc
mov
xchg
inc
leave
xchg
fstpt
hlt
add
daa
mov
push
popa
daa
mov
push
inc
roll
adc
mulb
pushf
and
sub
daa
xchg
mov
fnsave
inc
idivl
mov
adc
insb
xor
fmull
addl
ror
outsl
aad
leave
inc
or
xor
jbe
sahf
das
ss
mov
mov
call
fwait
int
xor
pop
dec
sub
add
ljmp
enter
xchg
fwait
dec
sti
lret
pop
testb
mov
push
inc
xchg
out
jo
mov
adc
pushw
dec
pop
subl
mov
ljmp
or
ret
fs
xchg
sbb
loope
hlt
imul
push
cmp
mov
rep
and
mov
push
adc
imul
cmpsb
das
xchg
daa
dec
enter
into
scas
aas
movsb
xorl
jns
and
int
push
sbb
cmpb
jmp
inc
xchg
test
out
data16
adc
not
imul
sti
cs
push
insl
push
cli
cld
xchg
cld
scas
hlt
outsl
push
test
or
add
or
mov
or
sub
inc
sahf
or
daa
into
daa
lret
andl
sbb
mov
adc
test
xchg
sub
dec
fsubr
mov
arpl
bound
icebp
fidivrs
aas
sub
andl
sub
dec
mov
pop
fdivl
adc
mov
add
stos
mov
jg
fisttpll
xchg
fwait
repnz
scas
mov
ret
pop
cmp
clc
repnz
jbe
cmp
mov
test
mov
sbb
xor
mov
fcomps
jecxz
xlat
jno
cmc
aam
pop
insl
cmp
dec
xor
mov
or
fstpl
jle
pop
mov
inc
orl
mov
adc
test
aas
mov
leave
xorl
gs
in
sub
add
push
pop
aam
test
mov
inc
das
nop
ja
rolb
pop
lock
adc
cltd
fimull
ss
mov
add
xor
mov
cmc
fistpll
add
xchg
jns
scas
or
leave
imul
or
int
jl
sbb
xchg
jae
inc
lcall
dec
or
cmp
shrb
fs
loop
movl
aas
gs
sub
rcpps
mov
mov
lock
movl
add
jno
lcall
sahf
ret
outsb
popl
sbb
push
je
gs
xchg
xchg
insb
lods
jg
data16
movsl
xchg
mov
in
scas
jg
jne
pop
jo
mov
das
add
add
cmp
add
mov
jecxz
inc
loopne
loope
jb
pop
or
mov
mull
add
in
loope
int
movsl
divl
mov
cmpl
out
das
mov
push
jae
mov
push
inc
push
lods
add
rcrb
sbb
out
scas
cmpsl
aad
lds
sub
xchg
pop
push
mov
gs
and
inc
cld
loop
insl
or
xchg
aaa
sti
imul
outsl
or
mov
lock
int3
mov
fldcw
fs
mov
lea
pop
pusha
dec
sbb
cmp
push
push
dec
push
or
mov
jle
sbb
push
mull
pop
dec
xor
lock
push
mov
out
into
push
insl
cmp
adc
orb
push
cmp
mov
lcall
inc
jle
jl
push
lcall
dec
mov
jnp
loopne
gs
repz
push
rcrb
std
mov
in
int3
rcrb
lock
sub
sbb
out
cmp
xchg
add
arpl
mov
mov
xchg
push
mov
in
loop
sub
jmp
inc
sbb
or
cmpsb
fisubrs
xchg
call
or
stc
popf
movsl
inc
subl
adc
xchg
mov
pop
lret
inc
push
movsb
loope
sub
outsl
popa
mov
js
dec
dec
sbb
pop
stos
fcmove
add
jno
inc
inc
push
insb
jge
loop
xchg
pop
and
xchg
dec
mov
inc
adc
xor
cmc
lods
or
cmp
and
add
ret
or
push
lcall
jp
lret
scas
shrl
imul
das
mov
mov
addr16
sahf
sub
push
cli
mov
mov
fucomp
pop
out
arpl
push
push
mov
addb
pop
push
adc
lds
dec
call
sahf
push
les
dec
lcall
shlb
push
outsb
or
mov
ljmp
xchg
jnp
adc
sbb
xchg
mov
and
cli
clc
repz
std
je
mov
jecxz
jg
push
gs
xor
xchg
out
lret
jb
dec
and
pop
mov
adc
dec
ud2
lea
push
jl
adc
jmp
in
loope
jmp
sub
adc
es
jp
jo
test
xchg
pop
loopne
insb
cld
repnz
push
aad
js
xor
sbb
std
popf
ret
insb
test
push
push
mov
cli
jno
ljmp
and
enter
in
scas
adc
aaa
jecxz
pop
add
jbe
decl
xchg
jae
cmc
push
pop
xchg
sub
push
add
push
cmp
pop
jp
ficoms
mov
lea
push
faddl
dec
inc
mov
mov
jge
idivb
out
inc
cmp
je
cli
inc
jle
popf
rclb
in
sub
insl
mov
fs
xchg
pop
mov
cmp
lea
dec
xchg
popa
xchg
rcrl
repz
arpl
or
repnz
repz
popf
cmpl
ja
mov
jo
insl
inc
ja
lret
mov
cmp
sti
xchg
jl
cmp
das
fbstp
rcrb
pop
mov
fnstsw
pop
add
push
push
dec
push
stos
dec
pop
clc
cmp
dec
pop
push
inc
cld
mov
jp
sub
ds
fstpl
in
and
cmc
loope
cltd
popf
iret
sbb
mov
int3
sbb
test
or
mov
data16
cmp
mov
add
inc
out
adc
xor
loopne
xchg
repz
lods
les
cmp
add
fcmovu
xor
pop
pop
movsb
lret
stos
add
out
repz
xchg
mov
dec
stos
stos
dec
shll
push
mov
mov
cwtl
inc
imul
in
jle
jns
movsb
push
or
out
sbb
int3
pop
or
push
pop
mov
add
cltd
sahf
test
inc
jp
or
lds
ret
mov
nop
ljmp
jbe
lock
stos
frstor
cld
stos
cmp
mov
add
lret
icebp
push
sub
xchg
outsb
subb
jg
subb
rorb
adc
mov
adc
mov
int3
and
popf
and
add
notb
sahf
dec
sub
lret
popa
lods
fstpt
add
daa
push
sarl
lret
loop
mov
mov
sub
mov
loopne
jne
xchg
xchg
stc
outsl
push
push
gs
ret
fcomps
jo
inc
add
jl
loopne
cmpsb
push
out
cmpsl
inc
mov
jo
sub
dec
orl
inc
rorb
or
fdecstp
scas
int3
jne
cmp
aad
mov
push
jecxz
lock
and
les
add
loopne
fisubl
dec
test
mov
add
pop
ror
pushf
andb
mov
sub
repnz
dec
adc
push
fwait
cmc
sbb
movsb
xchg
xor
sbbl
inc
adc
jo
js
lcall
cmc
mov
fwait
imul
cmp
mov
mov
jmp
test
jl
inc
out
mov
scas
iret
lods
imul
repz
lock
inc
ret
into
es
imul
xor
inc
inc
lods
push
mov
subb
imul
cld
inc
sbb
rcll
in
sub
pop
scas
aam
jecxz
jle
repz
sbb
push
pop
rclb
sbb
mov
adc
xchg
inc
daa
mov
int3
fdiv
add
mov
pop
mov
pushf
test
pop
stos
cmp
int3
adc
mov
cmp
dec
jno
push
sub
pop
and
sub
pop
push
mov
dec
or
dec
fildll
outsb
and
repz
sahf
sahf
mov
arpl
mov
fsubl
mov
fwait
cli
jns
in
pop
pop
icebp
cmp
adc
push
and
stos
push
sti
out
cwtl
loope
adc
sahf
adc
cmp
sub
stos
sbb
divb
or
and
adc
loope
arpl
adc
and
sbb
insb
cmp
xor
jecxz
cld
jno
sahf
mov
lock
nop
or
movl
cld
mov
jno
addl
cmp
andb
push
jmp
add
stos
packuswb
stos
fistpll
cmp
in
inc
clc
shlb
lcall
in
repz
dec
pop
and
pop
dec
in
add
sbb
xchg
sahf
pop
xor
jg
sub
dec
mov
imul
pop
mov
dec
das
mov
lods
adc
push
fcompl
sbb
into
ret
popa
stos
dec
inc
btr
push
or
and
mov
ret
sti
mov
sub
sub
jecxz
sbb
insl
les
jo
mov
push
xor
out
icebp
sbb
icebp
xchg
xchg
loope
or
or
out
push
mov
int
jp
inc
sbb
cmc
sub
shrb
xor
mov
sub
xor
arpl
pusha
sbb
int
fcompl
mov
push
pusha
mov
sti
pop
stos
in
outsl
insb
stos
sahf
adc
dec
xchg
roll
sbb
mov
mov
rorl
jno
repnz
push
add
push
fs
jno
jno
daa
cmpsb
scas
pop
movsl
and
movsb
or
test
int
js
mov
rorl
pop
js
js
push
jnp
inc
xor
clc
rolb
insb
sub
xchg
or
rclb
and
popf
or
adc
adc
push
jb
jecxz
das
iret
sti
push
adc
scas
lods
sbb
into
shrb
out
xlat
cld
jecxz
pop
orb
sub
cmp
adc
xor
fsub
xchg
pop
adc
aas
lea
in
rcr
mov
jg
mov
jae
pop
insl
jecxz
clc
out
mov
pop
icebp
sub
inc
push
push
ss
lcall
xlat
rcrb
pop
mov
inc
pop
xchg
scas
sub
jns
cltd
or
add
add
mov
std
in
gs
jns
pop
push
imul
repz
lret
fisttps
mov
sbb
rclb
pop
mov
add
add
dec
es
add
loopne
les
push
adc
icebp
sub
out
jo
stos
lds
mov
dec
fidivrs
andb
sti
lret
rcrl
aaa
scas
js
push
mov
sbb
int3
ja
cltd
daa
nop
xchg
dec
mov
loope
pop
cmp
sahf
notb
shll
lret
pop
mov
pop
jmp
or
test
or
repnz
xchg
enter
push
cli
add
xchg
lods
pop
ret
mov
subl
lcall
popa
jb
mov
enter
xor
outsb
cmpsl
stos
or
xor
shll
arpl
arpl
js
scas
mov
test
outsb
pop
inc
movsl
in
sub
clc
in
mov
in
mov
sbb
adc
shrl
rorl
xchg
push
cld
fcmove
test
xchg
rcll
xchg
jmp
xchg
lret
aas
arpl
fwait
das
push
sbb
cmp
xchg
jno
and
clc
pop
fstpl
movsb
scas
pop
lret
push
jmp
push
dec
push
loope
cmpsb
mov
imul
or
jecxz
loopew
loop
pop
repz
mov
mov
inc
dec
loop
mov
sub
ljmp
xor
sub
cwtl
xor
xor
cmpsb
pop
cwtl
or
push
jne
inc
adcl
imul
jbe
adc
add
mov
ss
movsl
inc
rcll
scas
add
in
mov
cmp
fidivs
jecxz
mov
iret
adc
adc
scas
mov
loopne
das
adc
loop
gs
les
or
loop
shll
rcll
inc
push
sub
xchg
add
push
jae
jmp
adc
in
mov
cli
ret
mov
insl
or
cmp
es
jno
cmp
xorl
push
mov
and
dec
sbb
jbe
mov
jb
xchg
fcom
daa
cmp
cs
loop
scas
push
xchg
call
dec
pop
cs
outsl
inc
fdecstp
mov
fninit
das
ret
aaa
pop
cmc
rcll
lods
fdivl
inc
xorl
test
movsb
xor
xchg
xchg
pop
outsl
xchg
rcll
loopne
sub
pop
xchg
in
adc
inc
push
and
loop
push
in
cmp
mov
mov
testb
inc
out
test
mov
xchg
out
mov
rcl
insl
enter
xchg
fwait
shlb
das
mov
mov
mov
xchg
sub
fwait
je
inc
test
je
fwait
adc
jecxz
adc
xor
mov
mov
mov
les
dec
mov
bound
std
and
inc
mov
popf
xlat
push
test
enter
faddl
push
jbe
jge
dec
mov
mov
or
fimuls
add
xor
mov
out
lock
mov
mov
stos
ja
adc
push
xchg
add
pusha
inc
xor
data16
lcall
xchg
add
cmc
jge
jnp
jae
stos
stc
in
mov
in
les
or
cltd
aas
sahf
ljmp
bswap
push
in
mov
and
cli
lret
outsb
popa
or
xchg
rsqrtps
xlat
test
and
dec
test
cmp
mov
push
lret
dec
xchg
xchg
pop
mov
xchg
pusha
xor
xchg
pusha
pop
ja
adc
mov
mov
jb
test
jl
adc
fwait
and
xchg
outsl
lahf
aam
and
or
js
call
addb
int3
push
adc
mov
xchg
dec
rcr
add
mov
clc
mov
hlt
mov
sub
ss
out
mov
test
repnz
mov
in
cmp
addr16
cmp
mov
adc
pop
adcl
std
adc
adc
out
mov
add
mov
mov
movsl
and
cld
in
add
mov
xor
inc
test
clc
and
or
dec
xchg
jno
and
sbb
stc
fdivr
mov
mov
shlb
dec
xchg
je
sbb
sahf
xchg
cs
icebp
sub
mov
imul
mov
push
outsb
fs
faddl
pushf
pop
imulb
ss
jl
mov
das
sub
xchg
mov
inc
cli
adc
cmp
xchg
insb
xor
mov
fstpt
roll
lods
xchg
sub
scas
mov
cmp
ss
cmp
loop
sahf
push
sbb
fmuls
es
popf
adc
cld
pop
mov
arpl
dec
lcall
xor
clc
mov
sub
leave
fs
sahf
pusha
add
sub
jmp
and
int3
jo
enter
stos
imul
daa
ljmp
dec
fistpl
movsb
fadd
cmp
xchg
cmp
lahf
push
flds
push
jb
push
mov
add
push
icebp
mov
push
fstpt
mov
cmovbe
daa
mov
iret
lret
sub
jns
call
cltd
push
adcb
movsb
sbb
and
test
inc
mov
pop
lret
pushl
cld
lea
mov
cmp
xchg
xchg
sarl
mov
roll
inc
sub
dec
ds
add
add
mov
jnp
loope
xchg
and
pop
aad
xor
stos
pop
loop
or
icebp
bound
pusha
cmp
xor
mov
mov
lahf
fsubs
mov
ret
or
mov
cmpsb
imul
xchg
mov
cmp
jle
dec
mov
adc
ret
out
jl
sub
mov
jae
lds
xchg
xchg
imul
pop
fldl
cltd
jnp
cltd
sbb
cltd
in
xor
mov
sub
push
movsl
rclb
adc
inc
adc
adc
call
int3
xchg
push
adc
lods
test
cmp
mov
arpl
ss
push
xchg
mov
decb
inc
jbe
outsb
pop
test
jae
int3
sbb
lea
mov
dec
push
out
adc
dec
repz
addb
sbb
pusha
mov
stos
daa
loope
xor
lret
sbb
pusha
sub
out
cmp
mov
mov
jle
inc
push
push
test
mov
pop
mov
lods
pop
and
xchg
xor
sub
push
and
subb
dec
sbb
std
jb
iret
int
dec
inc
sub
idivl
and
out
xor
push
lock
inc
in
mov
mov
dec
sub
pop
sarl
adc
adc
and
cmp
xchg
mov
push
cmc
lock
ljmp
stos
ss
fs
sbb
jecxz
push
jge
xchg
fimull
pop
call
fsubrp
shrl
into
lea
pop
sub
xchg
js
xor
aam
mov
popa
jb
testl
push
push
inc
sbb
sub
dec
dec
pop
sbbl
cmpsl
fsubr
push
fistl
fstpt
push
in
cmp
add
in
sbb
loop
sbb
ret
out
cmp
repz
test
lahf
lock
xchg
lds
and
pop
fisttps
add
mov
mov
xlat
popf
shr
jns
or
hlt
sub
xchg
incb
inc
nop
testl
dec
jp,pt
pop
ficoml
cmp
pop
push
xchg
sbb
adc
fnstenv
dec
cmp
lret
fimuls
fldenv
out
in
jmp
add
xchg
lcall
cltd
xchg
outsl
adc
cmp
push
inc
add
ljmp
dec
mov
cmp
jg
and
dec
arpl
lret
int3
lahf
mov
fs
rcr
loop
jmp
add
scas
push
xor
adc
out
jo
lret
dec
mov
dec
addr16
ficoms
mov
lds
xchg
sub
push
clc
call
cld
cs
cwtl
mov
test
ret
adc
js
cmp
lds
pop
jnp
outsl
cmp
fs
xchg
iret
dec
mov
push
out
out
pop
out
push
sti
daa
fisubrl
jnp
jbe,pn
aas
push
lret
pop
xchg
movb
or
repnz
ret
mov
or
in
cs
orl
cwtl
lret
nop
in
jns
xchg
es
popl
add
cmc
repz
fsubrs
add
sbb
stos
negl
and
push
sbb
cltd
pop
xchg
std
mov
out
inc
sbb
loopne
cmc
lret
stos
inc
xchg
pop
push
bound
imul
aam
pop
mov
out
push
cltd
outsb
adc
add
mov
testl
stc
sbb
add
sub
sahf
sbb
xchg
pop
inc
mov
data16
inc
cltd
sarl
ret
call
and
jg
negb
sbb
pushf
fdivl
pop
int
loop
cmc
inc
imul
popa
gs
faddl
rcrl
enter
pop
test
cld
or
mov
jle
inc
jg
dec
jl
sub
cli
sub
xor
pusha
jno
jno
jb
xchg
test
xchg
dec
dec
push
xchg
sti
nop
call
stos
pop
bsf
dec
push
int3
mov
push
adc
jecxz
cmp
popf
jg
idivl
add
adc
enter
mov
addl
sti
sbb
popa
jl
aas
jo
leave
mov
xchg
outsb
add
xor
aaa
jnp
mov
clc
push
lock
aas
in
or
rclb
mov
std
pusha
push
aaa
jg
mov
lods
cwtl
shlb
out
inc
sub
add
mov
or
cmp
mov
jecxz
mov
dec
call
inc
xchg
mov
fisttpll
mov
jbe
popa
sub
push
sub
in
int3
icebp
jnp
cmp
orl
sub
pop
lcall
fistps
mov
push
out
aam
test
popf
and
popw
mov
std
push
adcb
mov
jb
mov
shlb
fists
mov
pop
mov
dec
jge
mov
adcb
ret
xcrypt-ctr
cmpsl
sbb
test
mov
dec
jne
xchg
and
repnz
arpl
lods
imulb
sti
repz
sub
mov
das
sbb
cmpsb
repnz
imul
cmp
call
stos
cmc
push
scas
cmpsl
or
lret
in
stos
pop
aaa
add
mov
sti
mov
jl
repnz
aaa
ja
int
std
inc
jl
lret
sbb
pop
mov
je
in
xor
stos
das
add
aad
xchg
loope
mov
add
int3
mov
rcll
jbe
xor
jmp
inc
idivb
rorl
pushf
cmp
mov
enter
sub
adc
jbe
pushf
xchg
stc
mov
push
adc
push
adc
add
xchg
sbb
cmp
movsb
jbe
leave
or
xor
aad
cmp
inc
push
dec
imul
jbe
xor
adc
xor
jecxz
add
shl
xor
das
fbstp
cmp
adc
ja
adc
pop
adc
sahf
mov
shl
cmc
repnz
jb
mov
and
xlat
sbb
push
mov
in
fwait
xchg
inc
fiadds
repz
push
fwait
repz
sbb
ret
addr16
lret
out
push
xor
pop
fwait
call
jmp
dec
stos
icebp
sbb
icebp
dec
sbb
push
jp
cmc
loope
xor
or
sti
vpaddusw
es
adc
xchg
mov
fwait
out
pop
inc
pop
in
push
sub
mov
cmp
jbe
vcvtsd2ss
push
push
enter
adc
adc
pop
jo
adc
fdivl
xor
mov
hlt
add
roll
popa
arpl
in
sbb
enter
icebp
scas
dec
lods
hlt
shlb
mov
cld
add
aam
or
push
call
add
add
bound
jl
outsl
sbb
fs
ja
pop
in
ljmp
push
pop
data16
xor
xor
aas
lahf
mov
loop
jno
test
pop
leave
xchg
xchg
push
mov
xchg
sbb
pop
ret
adc
sub
pop
popf
xor
mov
dec
dec
xor
pop
aad
xchg
std
cmp
mov
xchg
sbb
dec
ret
xor
subb
dec
loopw
adcl
add
mov
dec
mov
lret
mov
add
xchg
xor
mov
sub
das
dec
in
add
movl
out
adc
mov
andl
js
aam
aam
push
std
ret
mov
hlt
cli
pop
jae
loope
sbb
adc
mov
or
stc
mov
int
inc
lds
sbb
cmp
mov
fidivrl
jp
call
sbb
out
mov
sub
vmread
ja
fdivr
aas
arpl
jne
testb
fucom
mov
push
lret
jno
jne
sbb
dec
int3
out
xchg
mov
push
hlt
jb
mov
ret
fwait
les
aam
xlat
mov
aas
icebp
fwait
sbb
icebp
divl
xchg
mov
scas
mov
cmpsl
lcall
jnp
je
repnz
mov
outsl
lret
mov
orl
lods
jmp
dec
push
jbe
push
scas
lea
mov
loopne
push
xor
adc
xlat
scas
iret
jl
inc
in
push
lahf
jo
jge
test
cmp
gs
add
test
adc
fdivs
xchg
xchg
in
sti
in
mov
mov
mov
jecxz
hlt
sub
jns
sub
jecxz
mov
mov
lahf
jo
decl
xor
dec
push
and
xchg
or
jecxz
and
int3
lock
sahf
test
mov
test
imul
sub
insl
mov
popa
xchg
mov
fs
repz
lock
fsts
jecxz
push
sti
xor
sbb
mov
std
mov
out
jae
mov
shrb
push
data16
nop
inc
inc
lret
arpl
sti
std
imul
sbb
and
in
push
add
push
lcall
mov
loopne
pop
sti
pop
sbb
pop
pop
pop
xor
popf
hlt
mov
cmp
imul
jne
lcall
nop
jbe
dec
pop
notb
ret
jns
xlat
out
movsl
dec
sub
sbb
repz
lret
mov
add
fdivp
pop
out
pushl
in
das
add
pop
mov
adc
aas
and
push
xor
xor
enter
add
jp
xor
mov
push
hlt
divl
jp
fxch
and
xchg
int
mov
out
mov
pushf
and
iret
adc
xchg
mov
out
mov
mov
lock
rol
sarb
fistl
xchg
cmpsb
in
or
arpl
and
pushf
jmp
insb
add
jnp
pop
pusha
cmp
movsl
pushf
mov
scas
in
rclb
pop
pushf
and
or
mov
shr
out
cmc
sub
mov
mov
jb
mov
xorb
or
mov
repnz
cmp
out
lods
push
xor
icebp
cmp
loop
repnz
nop
mov
in
sub
shll
into
pop
test
jbe
pop
std
pop
lea
xor
and
hlt
mov
sbb
inc
cltd
jo
pusha
pop
aas
movsl
or
inc
int
imul
cld
jnp
jmp
dec
cs
adc
push
dec
adc
dec
push
icebp
mov
outsl
adc
or
mov
xor
daa
cmp
test
ljmp
lcall
daa
std
or
cmp
test
dec
and
mov
cmp
aas
mov
or
mov
rclb
lock
nop
lods
aam
clc
inc
pop
adc
in
cltd
xchg
mov
cmp
cmp
inc
popa
insl
mov
jge
xchg
xor
jg
cmpsl
aaa
std
scas
sbb
sbb
adc
mov
jne
aas
adc
rclb
xchg
enter
sbb
cmp
data16
pop
push
subl
cmp
xor
dec
jbe
hlt
mov
xchg
adc
mov
inc
xchg
clc
push
mov
sub
sub
add
sbb
popl
je
imul
xlat
negb
push
pop
cmp
notl
sbb
xchg
daa
fistpll
push
aam
decb
leave
mov
and
rep
out
fs
repz
or
cmp
out
std
test
aam
inc
test
das
in
jge
nop/reserved
push
hlt
and
dec
es
dec
sbb
push
scas
dec
inc
inc
ss
pop
stc
add
outsl
enter
mov
or
ja
ss
pop
hlt
xor
icebp
mov
pusha
cli
ficompl
mov
lret
fnstenv
xchg
jo
sub
dec
ja
dec
test
pop
sub
daa
sub
les
ret
insl
jb
bound
pop
mov
or
mov
sbb
sbb
jb
sub
lods
pop
push
insb
fbld
mov
pop
daa
mov
loope
fisubs
xchg
ror
imul
push
daa
lret
and
dec
ror
out
mov
fs
lds
xchg
cltd
sub
xor
xor
dec
arpl
rclb
mov
cmp
dec
cmp
and
or
int
pop
sbb
add
push
loopne
cmpsl
je
mov
iret
hlt
aaa
mov
fwait
adc
test
mov
lahf
add
dec
inc
and
adcb
push
mov
lret
add
cmc
dec
adc
jl
aam
clc
xchg
add
jecxz
ret
shrb
sbb
pop
jo
fldt
mov
iret
in
into
inc
leave
pop
or
mov
aam
fcompl
push
mov
es
cmc
cmp
lea
sbb
mov
and
mov
cwtl
or
ret
stc
or
inc
cmpsb
inc
sub
test
test
je
cmp
mov
add
sub
popf
fnstcw
fisubl
fidivs
into
xor
cltd
lret
mov
add
jae
test
je
icebp
sarb
lods
fisttps
dec
into
dec
jns
loopne
cmp
mov
andb
jo
popa
fwait
or
bound
repnz
push
inc
mov
std
sbb
push
pushl
inc
ljmp
push
test
sub
add
xor
shlb
cwtl
int3
inc
mov
dec
pop
sub
dec
test
rcrl
push
jne
inc
sbb
mov
mov
mov
cmp
test
adc
pop
pop
mov
hlt
add
popa
and
lock
xor
mov
mov
rorl
jge
pushf
lods
dec
imul
int
sbb
push
test
mov
fcmovnbe
and
add
add
sbb
mov
cmp
fwait
pop
fadd
push
dec
cmc
sub
xor
and
cmc
out
pop
xchg
jno
pop
add
iret
and
mov
int3
adc
aam
inc
aas
inc
fisubl
aam
mov
mov
cmp
mov
cld
or
sub
mov
push
outsb
cltd
sbb
push
insb
fdivl
enter
pop
outsl
xor
fidivrs
insl
cmp
scas
cmc
ja
or
ljmp
and
fimull
out
ss
pusha
pop
jns
scas
jb
mov
adc
push
mov
jae
xchg
outsb
pop
push
cmpsb
push
js
inc
push
mov
lds
scas
fistps
inc
loopne
jb
movsl
cli
jg
outsb
aam
out
jmp
and
sbb
ds
and
out
and
idiv
dec
shrb
or
lds
and
test
or
and
pop
std
clc
test
mov
data16
ret
sbb
shll
daa
les
nop
dec
cltd
addr16
data16
pop
or
cmpsl
mov
mov
push
push
popf
aas
data16
cmp
std
mov
pop
popa
add
xchg
shll
sbbb
jl
clc
pop
or
xchg
shrl
shll
movsl
movsb
stos
dec
loope
hlt
jns
adc
addr16
mov
ret
jmp
xchg
add
bound
jno
mov
adc
int
les
leave
cmp
sub
mov
imul
push
add
ss
dec
cltd
test
jecxz
cli
into
stos
xor
cmpsl
cmp
fmulp
enter
lods
cltd
add
popl
lret
fcoml
pop
fdivrs
lret
bound
sub
notl
push
das
push
jg
loopne
sub
insb
pop
and
outsl
fnsave
ret
inc
adc
mov
push
imul
mov
add
jae
sub
mov
into
xchg
popa
inc
push
bound
xor
xor
cli
js
shr
mov
mov
push
pop
repnz
jge
sub
xchg
or
loop
xchg
clc
cmc
adc
push
jnp
xor
mov
std
push
shll
dec
outsl
mov
mov
push
or
and
nop
mov
cs
fimuls
mov
adc
roll
cld
mov
push
imul
lcall
pop
push
sbb
nop
fcomps
pop
rcrl
sbb
aad
bswap
dec
mov
cmp
jo
cli
pop
mov
daa
sarb
clc
lods
jb
push
mov
or
jg
jns
mov
jae
xchg
push
adc
test
stos
sbb
mov
sub
add
cwtl
std
sbb
ret
xchg
adc
xor
push
in
mov
pop
mov
fcmovnu
push
jecxz
test
push
paddusb
xor
sbb
adc
mulb
ror
test
jp
int
push
pop
inc
loope
mov
and
or
push
scas
xchg
jnp
hlt
stos
lods
xchg
jmp
cmp
scas
sbb
add
push
pop
xor
mov
ja
pop
jns
aas
mov
and
pop
and
aaa
arpl
aad
fldt
or
test
mov
sub
adc
pop
mov
jb
add
mov
aam
mov
adc
cmp
jb
dec
and
cmpsl
mov
add
in
push
pop
mov
dec
out
fbld
dec
push
cmp
or
cld
in
mov
cmpsl
scas
fisttpl
not
add
mov
je
mov
push
arpl
mov
stc
push
and
js
sbb
push
dec
loop
mov
shr
and
outsl
scas
dec
ret
xchg
mov
iret
cli
lahf
add
addr16
repz
push
pop
inc
pop
icebp
mov
sbb
inc
fsubrl
test
xor
into
adc
jp
enter
outsb
leave
cmp
cmp
jns
sarb
sub
into
enter
in
push
jmp
push
test
adc
xchg
xlat
xchg
adc
mov
jl
cmp
sbb
sub
cld
inc
rcll
mov
out
xchg
xchg
lret
cmp
sbb
mov
dec
sbbl
notb
stos
enter
out
cmp
rclb
xchg
int
daa
cmp
push
repz
dec
in
dec
inc
lret
add
fisttpl
lods
sub
adc
mov
outsb
pop
popa
jns
inc
dec
jbe
and
in
cmp
test
jo
mov
cmp
push
in
fcoml
dec
push
in
mov
fsub
and
push
mov
mov
in
sub
insb
push
push
sub
push
pop
movsl
jg
push
inc
out
roll
sbb
fcomp
iret
xor
lcall
xchg
jae
loopne
adc
dec
imul
and
jb
dec
fsubrs
jne
in
shrl
cmp
cmp
xor
add
arpl
and
jbe
jns
shll
popa
iret
and
push
sub
lcall
mov
std
mov
rcrl
pusha
pushf
movb
xchg
sub
cmpsb
test
fidivrs
js
jbe
sbb
leave
pop
sub
not
fildl
jns
js
push
cmp
sub
std
icebp
push
pop
lods
addl
popa
sbb
sub
pop
jp
fcmovbe
ret
rorl
add
in
mov
dec
mov
push
popf
arpl
jbe
adc
test
lds
or
stos
repnz
sub
push
iret
pop
in
pop
daa
sub
orb
aaa
loope
pop
fldcw
dec
mov
mov
dec
adc
adc
adcl
cmpl
cmpsb
xor
sub
xor
ret
dec
ret
inc
int3
fbld
mov
les
inc
rcr
arpl
shll
std
pop
icebp
subb
and
cmp
les
int3
mov
stos
inc
aas
sbbl
pop
int3
cs
scas
lock
mov
daa
sbb
cmp
dec
daa
sbb
add
cmp
jno
xor
dec
and
in
and
jg
insb
inc
jno
sbbl
xor
jbe
and
mov
sbb
mov
and
fidivrl
mov
xchg
test
gs
sbb
lea
and
imul
cmpb
aaa
ret
xchg
outsl
js
test
xbegin
aas
cld
arpl
mov
pop
andb
cwtl
sbb
jp
dec
xchg
aam
jp
dec
pop
or
or
loop
mov
lods
xchg
sahf
pop
cltd
loop
and
push
aam
inc
xchg
in
aas
andb
movsb
rcrl
lret
xor
xor
inc
cltd
push
stos
fld
sbb
fidivs
lret
inc
outsb
jp
dec
int3
fwait
inc
jno
xor
fidivrl
cld
movsl
mov
mov
cmc
dec
clc
mov
aam
fistpll
pop
adc
test
enter
mov
mov
sub
pop
push
mov
in
icebp
xchg
xchg
push
cmpsl
and
je
pusha
lahf
sarb
aaa
push
loopne
add
xchg
loope
call
cltd
cmp
xchg
in
adc
popf
xor
sahf
int
lret
cmp
les
mov
add
mov
sbb
les
add
pop
and
aas
test
aas
call
addb
loopne
loop
subb
jp
dec
sarb
loope
or
push
int
sbb
imul
test
mov
stos
stc
loope
jne
cld
gs
inc
and
push
xlat
ret
insl
sbb
gs
hlt
pop
xor
pop
stos
jbe
sbb
aas
fistps
xor
and
jmp
jnp
jo
dec
movsl
enter
jmp
movsb
or
int3
leave
inc
test
sbb
imul
xor
adc
jecxz
movsl
xchg
and
lahf
testb
popl
stos
pushf
lcall
xlat
and
sub
loopne
adc
pop
es
cs
fcoml
outsb
push
or
pop
mov
jne
mov
mov
sub
xchg
sbb
movsb
pop
mov
iret
sbb
in
mov
aam
pop
xchg
test
int3
fstps
lock
leave
jmp
mov
pop
sub
jbe
sbbb
aad
dec
shlb
inc
push
and
adcb
leave
fbstp
inc
mov
mov
loope
sub
add
loop
mov
add
pop
mov
cmp
ret
push
sbb
fdivrs
adc
stos
mov
std
daa
xorl
jge
mov
mov
fldt
cmp
cmp
andb
xchg
push
push
cld
push
inc
add
std
xor
jne
xchg
in
les
dec
test
lcall
fcom
ficoml
sahf
push
in
or
hlt
movsl
orb
testl
test
cli
pop
sbb
pop
and
test
les
inc
sub
mov
jno
sti
loop
lcall
sub
dec
out
and
out
testb
inc
outsb
rcll
mov
pop
xor
daa
scas
xor
rcl
push
test
in
mov
sub
sti
pusha
push
ret
loope
mov
and
arpl
sub
dec
mov
subb
loopne
fistl
loop
daa
pop
test
dec
daa
arpl
push
mov
ficoml
outsl
outsb
out
mov
in
sbb
sbb
mov
gs
mov
jmp
mov
cli
imul
cltd
push
test
add
ret
aam
mov
xorb
fiaddl
lret
mov
loope
out
mov
push
in
or
xchg
test
push
mov
mov
adc
and
push
jne
sti
repz
jp
call
pop
adc
sbb
mov
stos
mov
inc
fisttpll
lods
iret
bound
das
mov
pop
push
xor
push
dec
loopne
mov
jmp
ja
out
arpl
adc
pushl
inc
or
je
test
pop
pop
call
sub
lods
pop
xchg
xchg
rcl
pop
shll
pushf
xchg
add
inc
add
sbb
lock
xchg
mull
out
dec
adc
jnp
fdivrs
adc
sbb
lods
sub
xor
loope
pop
inc
xor
stc
shrb
sti
and
add
or
jmp
dec
and
inc
mov
sbb
sub
add
pusha
dec
es
xchg
add
pop
cmc
inc
xchg
mov
mov
sub
mov
xchg
in
insl
mov
jnp
jmp
pop
or
jno
sub
xchg
xor
in
andl
dec
repz
cmpsb
mov
mov
dec
outsb
adc
dec
jae
imul
xchg
ficompl
adc
test
ficoms
daa
sub
mov
sub
iret
lea
ret
xor
nop
jl
data16
sub
jecxz
mov
std
loopne
in
addr16
sub
rcl
dec
adc
push
movsb
std
cmp
daa
xlat
add
sub
mov
mov
jb
stc
aam
mov
pop
fnstsw
out
bound
pop
cmp
adc
insl
add
jle
nop
clc
xchg
sub
sbb
push
lea
mov
sbb
subl
sub
mov
das
xor
jl
sub
insw
xchg
lcall
test
loope
inc
inc
lret
daa
enter
push
insb
jne
mov
sub
and
hlt
in
outsb
rorb
rcrl
je
decb
pop
adc
mov
push
stos
hlt
cmp
mov
aas
aad
and
xchg
ds
mov
stos
jmp
jmp
or
popf
loopne
add
loope
jge
flds
fisubrl
add
mov
ucomiss
daa
int3
imul
repnz
sub
loop
mov
je
out
push
aas
imul
rorb
stos
mov
push
xchg
mov
adc
sbb
push
out
lret
inc
jg
add
test
das
mov
jg
or
jg
jecxz
mov
and
popf
add
mov
sub
call
push
mov
mov
cmp
xchg
xor
adc
test
inc
test
inc
jno
pusha
jge
mov
fldcw
sbb
xlat
push
lds
cmpsb
inc
mov
fstl
sarb
imul
nop
inc
cmovnp
enter
aam
dec
ja
out
pop
addb
dec
dec
mov
jecxz
or
xchg
into
gs
jnp
lods
jp
lret
fidivl
inc
addr16
or
ds
or
outsb
push
or
popf
adc
pop
addb
aas
or
xchg
jbe
outsb
add
add
jne
mull
or
sub
fsubrs
jp
sub
push
and
out
mov
lea
enter
call
pop
dec
arpl
inc
ja
ja
dec
dec
or
push
xor
lcall
test
fistl
adc
cltd
iret
call
popa
jno
sub
ljmp
push
or
mov
pop
cmpsb
cltd
lcall
xrelease
add
insb
je
and
test
stos
push
iret
push
sub
sub
mov
xor
jg
lahf
negb
adc
rcll
fstp
ljmp
mov
jg
popa
shlb
mov
xchg
fistl
and
packsswb
adc
inc
ljmp
test
movsl
testb
pop
test
cmp
movsl
jbe
inc
fs
bound
out
add
andl
shlb
sub
les
je
stos
add
loopne
jo
aaa
sub
addr16
mov
fisubs
push
in
aam
adc
stos
or
xchg
sub
repnz
add
mov
or
jmp
jbe
mov
test
subl
jmp
dec
out
shlb
push
arpl
sbb
cltd
data16
test
inc
push
lds
xchg
adc
xchg
mov
add
fisubrl
daa
sub
rolb
mov
xor
stos
and
test
sahf
push
push
les
in
push
fsub
fistl
bound
fildl
mov
sar
cmp
and
dec
inc
push
jo
jecxz
insl
cmpsb
ffreep
mov
aad
nop
mov
bnd
inc
mov
jge
pop
fidivrl
rcrl
jae
jle
jnp
ljmp
xor
jb
gs
xchg
inc
inc
daa
clc
leave
xor
jp
leave
ja
jbe
addr16
xchg
mov
mov
mov
xchg
int
cmpsl
mov
icebp
rcr
sbb
mov
dec
sub
adc
notb
jno
adc
xchg
fs
push
ds
mov
sub
inc
add
ss
pop
flds
mov
xchg
jmp
imul
dec
dec
out
jae
pop
jae
lret
jmp
mov
mov
repz
mov
lods
dec
adc
popf
addr16
push
cmpsb
es
add
cmp
cmp
push
stc
cmpsl
mov
sub
out
cld
and
sbb
xchg
pop
ss
inc
pop
push
and
mov
rol
das
je
push
ror
std
adc
adc
pop
cmpsl
lahf
sub
sub
insb
ja
pop
jle
pop
test
push
es
fs
into
sbb
inc
in
xor
jmp
mov
cs
mulb
push
dec
push
sarl
cmpsb
or
xchg
orb
xchg
jge
in
mov
movsl
dec
loopne
mov
inc
lret
bound
lea
inc
in
jnp
mov
mov
test
xor
sbb
cld
cli
mov
xlat
cmp
mov
lcall
addb
sbb
out
adc
pop
cmp
stos
cmpsl
push
pop
sarb
dec
sub
cwtl
push
pop
stc
sbb
mov
add
int3
pop
mov
fmuls
cmp
push
mov
sbb
int
jecxz
sub
jge
lret
ljmp
mov
or
push
stos
mov
lahf
xor
fdivrs
add
sub
in
inc
test
inc
jp
cmpl
sar
mov
push
inc
push
fildll
sbb
int3
scas
mov
xor
test
fwait
dec
scas
sub
inc
adc
ss
jb
aam
or
mov
test
pushf
js
stc
pop
adc
inc
mov
out
bound
jl
lcall
stc
lahf
push
cmpsb
imulb
and
xchg
dec
xchg
roll
jbe
dec
bnd
inc
sub
pop
mov
adc
ret
sarb
out
roll
adc
ljmp
mov
pshufw
inc
inc
mov
push
je
inc
fcmovnb
pop
push
push
pop
sub
pop
mov
dec
adc
mov
cmc
outsb
movsb
scas
into
push
pop
in
rcl
cmc
sbb
add
mov
pop
repnz
xor
cmpsl
sbb
xor
push
into
divb
mov
pop
push
cwtl
or
ret
add
inc
jnp
adc
or
loop
xor
jmp
dec
mov
xor
je
jl
mov
cmp
xchg
pop
xchg
pop
fistpl
cwtl
int3
pop
aas
sbb
data16
sti
xchg
or
pop
iret
lock
je
add
outsb
push
mov
testl
int
inc
test
insl
test
cmp
and
insb
cmp
add
cmp
sbb
in
xor
and
insb
pop
and
pop
pop
jno
cmpsb
shll
xchg
jecxz
lock
ljmp
mov
ss
cli
xchg
in
xchg
inc
mov
in
inc
idivl
and
scas
fnsave
xor
sti
jge
shrl
jg
aaa
fwait
into
xchg
gs
jmp
add
maskmovq
notl
xchg
xchg
xlat
test
fstps
adc
popa
mov
dec
fs
test
lret
negb
repz
bound
inc
jle
adc
pushw
cmp
xchg
lods
xor
pop
scas
dec
jp
notb
outsb
jns
mov
sbb
xor
jge
outsb
jo
cmpsb
inc
jmp
add
mov
jge
mov
hlt
adc
shlb
jmp
repz
jae
add
lcall
aad
orl
sbb
mov
cltd
repz
jo
mov
and
pop
negb
mov
pop
pop
movl
sub
aam
dec
insl
mov
xorb
cmp
test
loope
outsb
xchg
mov
dec
sbb
mov
mov
iret
mov
xchg
jnp
ret
ret
pushf
dec
arpl
pop
int
add
xor
nop
not
shll
shrb
cli
sub
ret
stc
mov
aad
sub
jge
or
dec
popa
movsb
pop
adc
aam
cmpsb
loope
xchg
scas
jg
jo
or
insl
xchg
xor
fadds
gs
fldenv
lock
mov
les
jno
in
mov
xchg
push
nop
mov
push
cltd
icebp
inc
fisttpl
out
cmp
push
iret
icebp
lods
dec
shll
xchg
arpl
addr16
mov
iret
or
clc
in
xchg
jmp
and
test
bound
jns
sbb
jl
and
xor
ljmp
xchg
add
repz
push
push
jg
pop
rolb
inc
or
pop
aam
decb
dec
add
add
xlat
or
jp
lahf
jl
lahf
repz
push
xor
adc
fisubl
fcompl
inc
mov
hlt
enter
mov
lods
jbe
repz
leave
pop
cmovge
lea
adc
jl
sub
or
jae
ds
icebp
add
push
out
call
and
cmp
fistl
and
sbb
enter
loop
jns
sbb
repnz
clc
jno,pn
dec
lods
test
imul
push
pop
popf
cmp
call
lret
fistpll
outsb
ret
cmp
stos
icebp
sub
fsts
mov
xchg
fisttpl
push
insl
leave
in
dec
movsl
lahf
dec
aam
into
andl
cltd
adc
shrl
imul
and
cli
test
or
lods
pop
pop
sub
in
push
pop
stc
outsb
push
mov
arpl
add
mov
pop
mov
sbb
test
pop
out
fistpll
ljmp
xor
pusha
popa
scas
test
adcl
lods
repnz
add
cltd
icebp
jnp
je
movsl
sbb
roll
ffree
les
fidivrs
pushl
pop
inc
imul
push
jnp
in
or
jnp
jb
jne
push
and
rolb
mov
mov
xor
xorb
inc
cmp
cmp
sub
ljmp
scas
insl
frstor
mov
in
xchg
lea
popa
or
cmp
xchg
scas
cmp
cmp
cmp
mov
mov
sub
fnsave
jge
loop
pop
out
or
adc
pop
push
mov
cli
dec
xchg
fisubl
fistpl
add
sbbl
into
into
and
out
dec
fcoml
sbb
xchg
icebp
sub
jge
sbb
popf
cmp
dec
cs
jl
pop
loop
in
dec
ds
stc
inc
mull
nop
int3
xor
pushf
or
jo
mov
jo
cwtl
sahf
ficomps
sti
add
andl
sub
mov
sbb
mov
out
jge
lods
and
pop
pusha
ret
scas
mov
in
sub
mov
fdivrl
test
shrb
arpl
gs
jecxz
and
pop
int
push
notl
movsb
add
jle
in
fwait
jecxz
mov
sbb
mov
or
push
push
mov
fwait
cmpl
mov
xchg
outsb
addr16
out
sbb
xchg
mov
insb
and
cli
popa
hlt
cwtl
mov
pop
fdivrs
outsb
cli
ret
pop
dec
ror
push
clc
frstor
stos
sbb
pop
inc
add
inc
adc
mov
arpl
pusha
xor
fidivs
or
push
fnstcw
or
push
add
adc
sbb
je
and
push
std
mov
jo
add
mov
xor
std
adc
outsb
mov
and
cwtl
lea
vpslld
push
lret
jge
jne
pop
jmp
sahf
jl
inc
fsubrs
stc
xor
pop
test
inc
cs
dec
je
xor
dec
fbstp
add
pop
add
mov
mov
imul
pop
adc
out
pop
in
fmull
nop
fcmovb
xchg
sbb
add
add
loop
loope
push
jo
sbb
inc
push
xchg
sub
aam
mov
mov
mov
inc
test
jnp
scas
jmp
xor
je
jb
xchg
aam
pop
mov
inc
rcrl
fsubrl
jmp
jbe
lcall
xchg
loopne
cli
out
jae
out
loope
jne
rorb
subl
push
pop
push
int
daa
xchg
lods
or
adc
sub
pop
lahf
adc
sbb
sub
cmp
lods
pop
aam
out
or
mov
xor
lret
mov
jmp
mov
les
push
pop
lods
mov
inc
pop
mov
mov
jns
sbb
ret
xchg
pop
pop
cmp
std
ja
mov
test
lods
jb
scas
jmp
lods
xor
jb
jp
ret
fnstsw
and
mov
pop
and
jae
dec
loop
adc
cld
mov
jle
xchg
stos
notb
mov
xchg
std
loop
popa
fcmovne
mov
mov
repz
das
dec
in
fisttps
sub
lock
aad
cld
not
push
or
leave
xor
and
ja
sbb
sbb
xchg
and
sub
aas
xchg
and
add
into
fstpt
jbe
dec
inc
push
add
mov
call
xchg
mull
jnp
xchg
decl
fdivs
add
arpl
push
aas
std
cmp
out
sub
ficompl
daa
mov
mov
adc
std
lret
in
xor
mov
xlat
xchg
adc
mov
and
sub
mov
sub
pop
fwait
lcall
mov
add
mov
daa
mov
lret
jmp
mov
and
arpl
adc
gs
pusha
popf
sahf
std
xor
pop
das
inc
pop
inc
cwtl
lret
in
add
into
lea
lahf
mov
enter
idivl
xchg
cltd
mov
out
cmp
sub
inc
push
cltd
imul
xchg
xor
mov
jmp
and
sbb
aad
pop
and
test
ret
aam
xchg
add
lret
pop
scas
sbb
mov
dec
dec
jge
cwtl
mov
outsb
scas
mov
xor
inc
cmp
mov
roll
in
andb
add
mov
xchg
add
std
mov
cld
cwtl
xor
mov
mov
sub
dec
push
leave
mov
mov
mov
mov
xor
xor
or
xlat
xchg
dec
mov
mov
or
ds
es
add
lret
bound
push
pop
and
popa
push
sub
xor
sub
pushf
mov
pop
push
icebp
insl
cmpsl
adc
cmp
or
and
and
push
or
mov
mov
adcb
push
add
xor
mov
xchg
bound
jmp
dec
pop
mov
or
or
arpl
es
inc
lods
jp
sub
jno
and
fldenv
scas
aam
mov
iret
pop
inc
fcompl
frstor
jno
mov
aad
bound
inc
andl
inc
stos
cltd
sub
cli
mov
mov
psubw
mov
xchg
add
in
xor
sbb
orl
jle
add
and
stos
mov
stos
inc
lods
pop
push
pop
push
sub
sub
mov
push
mov
xor
insl
and
fisttpl
jbe
pop
add
jo
sbb
mov
loopne
jb
pop
gs
pop
rcl
das
cmp
add
inc
cmp
leave
xchg
out
cltd
sbb
or
repnz
xlat
inc
fimull
inc
ret
das
in
or
int
pop
out
push
std
or
loope
sbb
lods
xchg
shrw
in
cmc
inc
cmpsb
aas
inc
adcb
mov
loope
ljmp
es
cmp
cmp
sub
and
lds
push
xchg
imul
dec
iret
xchg
cmp
inc
cmp
cwtl
cmp
sbb
cld
imul
mov
dec
daa
jnp
inc
xor
lock
aam
jo
popa
bound
mov
out
add
lret
sarb
scas
xor
test
push
test
ss
mov
jnp
stc
dec
push
jp
pop
jae
pop
or
mov
sbb
pop
jge
cmp
mov
pop
mov
push
xor
cmp
xor
fucom
mov
add
les
bound
pop
in
xchg
cmpsb
inc
jmp
int3
orb
fs
mov
les
add
adc
aad
sahf
sbb
fimull
insb
lock
loope
in
cmpsb
stos
push
mov
jns
jge
add
js
gs
je
add
stos
cmpsb
mov
sbb
test
push
lcall
jg
and
pop
ffree
pop
adc
roll
call
add
loop
mov
jecxz
dec
fildll
mov
stos
inc
and
xlat
enter
flds
ret
mov
fildl
xchg
push
out
sbbl
sbb
mov
in
push
fwait
ss
pop
push
loope
mov
mov
pop
pop
cwtl
pop
or
dec
js
aas
popf
mov
sti
cmpsl
sub
mov
cmp
movsb
out
cmpsl
xchg
ljmp
aad
es
stos
loope
lcall
inc
mov
js
mov
sahf
add
clc
push
lea
int3
pop
cmp
insl
dec
imul
cmp
lods
cmp
ret
pop
mov
mov
lods
sbb
in
jne
push
popa
rorl
mov
inc
pop
jne
adc
sub
bound
jae
adc
pop
jge
cmpsl
lods
add
ud1
jmp
lahf
cmp
pop
scas
test
ja
in
cwtl
jmp
stos
xchg
or
push
pop
outsl
std
ret
pop
sbb
xorl
cmp
jnp
rcrb
bound
test
mov
cmp
xchg
cmp
aam
daa
xorb
push
mov
jne
out
xor
inc
push
jmp
mov
mov
fcoml
sti
pop
jae
push
mov
cwtl
xor
xchg
int3
test
cmp
div
jae
arpl
fldl
sbb
es
insb
add
dec
push
dec
xor
push
in
mov
or
addl
daa
mov
scas
inc
mov
orl
out
fdiv
fsubs
mov
ret
dec
push
xchg
test
dec
or
nop
sub
out
inc
push
repnz
xor
jae
jo
dec
mov
insb
xor
dec
xchg
sbb
add
sti
mov
insl
sti
sahf
imul
pop
sti
dec
jp
fldcw
mov
mov
out
mov
jecxz
ret
mov
and
dec
add
cmc
xchg
mov
fadds
cmpsb
mov
js
out
loope
mov
mov
scas
jno
xchg
xchg
ljmp
mov
in
inc
adc
cmc
in
xchg
add
sub
adc
inc
mov
shrb
outsl
pop
hlt
stos
ds
test
or
mov
ret
fcmovnbe
shrl
cwtl
cmovs
js
int
daa
fistpll
mov
cmp
jnp
jl
out
xchg
sub
push
das
les
mov
xchg
bound
lock
dec
or
pop
mov
mov
mov
dec
push
sbb
nop
cli
mov
cmp
jmp
jbe
push
add
daa
cli
rcr
shll
fiaddl
pop
test
rol
popa
outsl
xchg
push
je
incb
lahf
popf
inc
fidivl
fs
jmp
aad
pop
add
adc
mov
jle
addr16
lret
stos
jne
jp
aas
xchg
xchg
mov
call
mov
ficoms
sub
mov
jbe
sub
inc
in
jge
je
dec
adc
int3
pop
pop
xor
aam
daa
lahf
mov
mov
ja
insl
mov
xchg
shlb
iret
pop
adc
repz
inc
lcall
iret
adc
xchg
or
mov
ret
adc
dec
pop
and
pop
xchg
jne
out
bswap
add
sbb
adc
cmp
xor
mov
jne
mov
mov
pop
push
outsb
popa
pop
sti
xchg
sti
fidivrl
cs
jnp
aad
lock
in
dec
imulb
sbb
or
add
aaa
rcrl
mov
mov
dec
fcmovnu
xor
outsb
xchg
cld
cmp
popa
adc
test
lods
ljmp
xor
or
test
movsl
les
mov
mov
xchg
jl
enter
jge
mov
or
push
dec
int
aas
imul
xor
push
lret
xchg
fwait
and
xor
sahf
and
jns
xchg
outsb
jl
or
sub
decb
mov
icebp
sbb
push
test
fadds
mov
es
cmp
cmp
jo
jne
divb
cltd
xchg
inc
je
push
fcomp
outsb
pop
jl
cli
cmp
fsubs
jmp
and
mov
adc
xchg
mov
jmp
notl
pop
fstpl
in
popa
inc
mov
jp
in
adcb
inc
adc
imul
inc
cmp
push
xchg
mov
test
fiadds
cs
push
gs
mov
push
lods
popa
or
adc
xor
pop
xchg
xchg
add
loopne
pop
cmp
pop
bnd
popa
cwtl
shll
and
jl
push
movsl
mov
mov
int
movaps
cmp
sbb
call
mov
sbb
pop
mov
add
jns
cmpsb
out
mov
rcll
cmp
mov
add
lods
stos
scas
cld
or
add
movsl
sbb
and
sub
and
outsl
scas
and
and
mov
leave
push
jmp
dec
sbb
shll
sbb
cmp
mov
loope
cli
adc
js
cmp
pop
fistpl
xor
or
and
imul
add
xor
and
push
pop
stos
mov
test
inc
movsl
cmp
mov
out
bound
mov
cltd
vmovntps
push
loopne
lret
xor
inc
insl
lret
cmpsb
cwtl
push
pushf
cs
and
test
cltd
sahf
andl
jl
lods
cmpb
ficompl
push
pop
adc
testl
aas
xor
cmc
adcl
xchg
ja
sarl
out
cmpsb
insb
lret
das
sbb
add
mov
or
and
fsubrp
sub
dec
stos
daa
or
fwait
stos
inc
std
gs
fadd
stos
pop
stos
call
lods
and
loop
mov
fmull
mov
mov
ret
jecxz
jns
mov
loopne
jne
loop
sete
fldenv
popf
fisttpll
sub
xor
jo
pop
adc
and
clc
xchg
push
int
mov
stos
repz
dec
imul
mov
nop
movsl
les
call
jae
mov
jge
or
enter
std
xor
add
pop
add
ret
stc
pop
dec
pop
xchg
pusha
mov
or
xor
dec
je
popf
pop
push
add
cli
in
sub
xchg
sub
sub
pop
mov
cltd
ret
shrb
scas
adc
mov
je
fistl
out
fwait
mov
dec
push
in
fsts
fistpll
xor
hlt
xor
jg
imul
popa
fsubs
jl
das
arpl
nop
xor
sahf
lret
pop
mov
loopne
outsb
and
aad
cs
cmp
dec
sbb
loop
movsl
sub
hlt
pop
in
lahf
sub
fildl
sub
inc
js
rcll
adc
xchg
cmp
add
subl
mov
inc
xchg
addr16
out
push
ja
gs
insb
imul
adc
loope
sub
aaa
ret
insb
shrl
jne
jge
call
aad
lea
clc
dec
stos
idivl
divl
inc
cmc
in
cli
inc
test
insl
vpavgb
cmp
in
mov
outsb
int3
ljmp
loopne
push
mov
cmp
dec
test
or
xor
xor
loopne
fcoml
mov
mov
sbb
mov
and
push
and
mov
lods
push
es
dec
sub
subb
and
int
xor
repz
inc
xor
jbe
outsl
rorb
dec
xchg
outsb
jg
insb
test
cmp
jge
shll
int3
repz
ljmp
test
je
mov
sahf
arpl
sbb
mov
jg
loop
scas
popa
adc
mov
test
pop
shll
sti
pop
and
push
jb
inc
icebp
rorb
sub
mov
js
sahf
mov
xor
dec
out
insl
aam
lds
faddl
push
xlat
or
sti
and
int3
les
xor
push
repz
add
iret
insl
cmpsb
maxps
xlat
int
ds
repz
fistl
sub
mov
xchg
fstsw
jo
cmp
cmpsb
dec
hlt
je
lret
lret
mov
jno
mov
push
in
mov
out
dec
ljmp
add
daa
jmp
and
mov
bound
das
outsl
and
mov
adc
out
mov
and
popf
inc
arpl
pop
mov
fnstenv
call
push
movsl
dec
rclb
ss
fcomps
add
mov
stos
add
out
imul
stos
xchg
fsts
or
xchg
in
lds
xchg
dec
out
bound
outsb
sbb
mov
pop
rcll
cmpsl
cwtl
cmpsb
cmp
fdivrs
stc
push
shl
push
xchg
test
adc
dec
adc
pop
sub
lret
aaa
popf
xchg
xlat
sub
pop
lods
hlt
dec
stos
adc
mov
jo
xor
rcrb
out
popa
lods
sbb
incl
push
jl
xor
lea
mov
dec
pop
xor
inc
mov
je
inc
cmp
xor
pop
jae
lret
call
js
push
push
dec
inc
enter
mov
jb
xchg
pusha
mov
out
daa
push
rcll
xchg
shrb
shlb
mov
lahf
add
jo
push
das
mov
cld
cwtl
sbb
stos
repnz
stos
xor
inc
adc
pop
dec
dec
jno
aas
or
add
inc
add
aam
int3
icebp
push
and
mov
jmp
rcl
xlat
sub
insl
clc
fisubs
imul
arpl
imul
sbb
xchg
in
ret
mov
push
cmp
pop
js
das
in
movsl
cltd
push
xchg
inc
movsb
inc
lahf
jno
push
inc
icebp
ljmp
imul
and
push
lea
dec
sub
mov
jae
enter
js
aam
cld
jne
jmp
jbe
sti
push
push
xchg
hlt
pop
add
test
cmp
idivl
hlt
mov
lahf
movsl
jl
scas
cltd
filds
ret
int3
cld
mov
sbb
xor
ret
mov
lds
sbb
js
mov
icebp
xor
push
js
ljmp
pop
pop
dec
mov
jmp
and
and
aam
iret
push
iret
cmp
das
or
push
adc
out
jl
scas
jns
addb
data16
and
lds
mov
clc
imul
add
sub
repnz
lret
or
jns
aas
popl
mov
iret
in
hlt
and
or
scas
pushf
xor
cltd
xor
add
fildl
enter
fnstsw
pop
mov
sub
xchg
inc
push
push
popa
aad
mov
icebp
fcoml
int
jmp
imul
push
jmp
ss
scas
sbb
sbb
dec
test
pop
adc
mov
and
mov
xor
mov
stos
gs
xor
fcmovne
aam
sarl
add
cmp
mov
enter
sub
sbb
xchg
iret
cmp
adc
aam
mov
movsb
push
test
sahf
mov
pushf
adc
adc
mov
add
xor
aam
cmp
xchg
movsb
mov
outsl
cmp
insb
pop
mov
negl
es
xchg
stc
xor
xchg
ret
sub
lock
pushf
arpl
jg
stos
daa
and
test
sub
out
ret
dec
pop
out
outsb
dec
repnz
jecxz
aaa
in
push
cmp
les
cmpsb
sbb
push
scas
cmp
icebp
ss
pusha
mov
push
add
das
aam
into
mov
or
sbb
ficoms
mov
in
pop
loope
cmp
cmp
adc
cmp
movsl
mov
mov
jp
cmp
out
addr16
cmc
xchg
inc
push
sub
enter
pop
inc
jo
push
xor
and
mov
inc
or
clc
jb
roll
idivl
je
out
mov
ret
sahf
jne
int
xor
fwait
adc
rcll
and
pusha
stos
push
inc
shlb
xlat
js
sar
and
fstp
sarb
cmp
sti
mov
sbb
jge
xor
pop
xor
dec
mov
aad
mov
xlat
mov
std
in
repz
daa
jne
dec
sbb
aaa
data16
jb
cmp
dec
dec
call
jge
mov
cmp
popa
sub
or
push
push
int3
sub
mov
mov
mov
hlt
mov
adc
into
das
mov
ret
faddl
lcall
xor
mov
inc
add
das
mov
in
add
rorl
stc
sub
and
pop
mov
bound
push
add
ret
xchg
int
fsubrp
push
in
call
sbb
movd
xchg
mov
add
mov
cmpsb
add
pusha
das
mov
inc
jg
bound
cltd
sahf
xchg
clc
test
fidivrl
and
sbb
cmp
fimuls
xor
insb
sbb
sbb
shll
mov
xchg
adc
xchg
out
mov
jbe
inc
jb
inc
adc
cmp
pop
xor
jo
mov
fbld
dec
test
pop
adc
out
mov
or
jp
or
ret
pop
stos
xchg
wbinvd
pop
test
sub
xchg
jb
xor
test
cmpsb
pop
not
movsb
test
xchg
cmp
sub
push
aas
imulb
fists
gs
jl
out
lds
or
adc
and
xchg
pop
jnp
sarl
dec
add
lods
lcall
mov
loopne
sbb
dec
push
mov
xchg
shl
sub
jmp
hlt
rcrl
jmp
xchg
pop
loope
aaa
cmpsb
bound
lcall
lds
insl
xchg
xor
push
pop
sub
out
sbb
int
adc
mov
xlat
xor
lahf
push
pop
pop
ja
push
ss
rorb
pop
or
mov
mov
fcomps
insb
mov
jp
fiadds
outsl
in
addr16
movsl
data16
mov
xor
mov
jmp
iret
lret
sub
pop
sbb
xor
lret
push
pop
cli
dec
pop
adc
cmp
in
stc
movsl
imul
dec
shrl
push
mov
es
ja
mov
rcrl
mov
movsl
mov
jl
cmp
ss
add
rorb
in
mov
and
enter
and
popl
repz
cwtl
stos
test
xor
sti
sub
cs
pop
out
adc
loop
lods
mov
mov
in
ds
ljmp
adc
sbb
xchg
adc
out
and
mov
mov
fmul
push
mov
je
adc
addr16
enter
push
push
or
xor
fdivrl
cmpsb
push
out
loopne
loopne
mov
cmp
mov
mov
push
test
and
inc
xchg
sub
popf
int
repnz
lods
sub
int
xchg
clc
rorb
scas
sbb
or
sbb
arpl
mov
scas
test
and
sbb
xrelease
lcall
cwtl
cmp
mov
mov
mov
cmpsb
pop
lret
and
out
fnstsw
lea
xchg
into
xchg
pop
es
lods
mov
mov
mov
test
pop
adc
sbb
jnp
pop
out
repz
pop
cltd
push
mov
push
cwtl
xor
cld
popf
jmp
inc
out
pushf
cltd
pop
jno
stc
cwtl
or
add
jnp
scas
shrl
sbb
adc
cmpsl
popa
push
dec
outsl
and
lods
push
mov
inc
cmpsl
mov
clc
shrb
icebp
jmp
mov
cmpl
adc
inc
and
sub
lea
call
mov
lods
jle
out
jmp
jmp
or
jb
loopne
ja
push
jns
cltd
dec
inc
or
aas
mov
sbb
xor
jno
rcrl
inc
add
sti
jbe
fucomip
fwait
xchg
xor
push
inc
mov
les
pop
stos
icebp
aam
insb
fsubr
cwtl
mov
push
imul
jecxz
mov
ljmp
insl
imul
mov
mov
pop
data16
pop
movl
sti
je
loopne
sub
rcl
sbb
out
mov
nop
sbb
mov
push
rolb
int3
jle
aaa
in
add
mov
push
push
out
lahf
mov
cmpsb
sbb
nop
int3
repnz
mov
pop
popf
movl
xchg
lock
rorb
dec
pinsrw
jmp
lds
push
js
cs
add
cld
pusha
scas
mov
shrb
add
xor
popl
xchg
sbb
inc
or
and
cs
push
push
mov
or
ja
les
mov
inc
lcall
inc
in
imul
push
outsl
mov
jle
mov
pop
pop
dec
dec
popa
add
push
jecxz
test
dec
test
dec
xor
test
loope
aas
fimull
sub
mov
sbb
jne
idivb
fnstenv
xchg
mov
les
aas
push
jecxz
rolb
repnz
jge
pop
mov
test
or
out
pop
das
mov
push
mov
fadds
xor
or
es
mov
data16
lds
enter
pop
mov
lahf
popa
mov
inc
filds
adc
test
inc
dec
adcl
pop
mov
jo
fs
jb
leave
mov
cld
pop
cmp
lock
inc
dec
ficoms
mov
lahf
mov
dec
decl
movb
or
cmp
cld
pusha
shl
sub
pop
jle
cmovo
add
sub
inc
imul
lock
push
cmp
shrb
adc
loope
in
pop
jge
fs
xor
push
xchg
add
sub
sub
lahf
pop
or
dec
int
ror
add
hlt
xchg
xchg
cltd
scas
fucomi
stos
dec
scas
cs
shlb
mov
arpl
pusha
aam
aad
out
sbb
inc
fldcw
push
fimuls
xchg
fld
sbb
jle
and
mov
test
leave
rcll
xchg
mov
and
and
jne
push
sub
ds
or
and
pop
xchg
sahf
shlb
add
dec
mov
sub
sbbl
or
test
push
in
mov
mov
popa
cltd
sub
in
inc
jb
imul
int
out
cli
adc
add
into
dec
xchg
sbb
adc
repz
xchg
rorl
pop
mov
rorb
movsb
in
mov
loope
out
stc
outsb
inc
inc
push
add
pop
mov
xor
cmc
or
push
dec
js
jmp
jle
cmp
pusha
cmp
shlb
popf
repz
xchg
fadds
mov
cmp
addr16
int3
lock
or
jecxz
xchg
inc
jle
sbb
divb
jg
pushf
std
pop
pop
pop
jb
inc
daa
jnp
sub
stos
jb
xchg
mov
stos
mov
sub
cmp
aas
aaa
mov
subl
inc
andb
jle
in
push
es
mov
pusha
or
scas
xor
pop
jbe
mov
mov
js
push
imul
hlt
out
pop
mov
leave
test
xor
mov
leave
jecxz
jb
repnz
mov
testl
test
xchg
mov
xor
sub
movl
test
lcall
out
cmc
mov
xlat
imul
lock
outsl
data16
mov
mov
pop
test
pop
aad
das
mov
movl
sbb
arpl
jge
push
orb
xchg
pop
lods
dec
out
je
add
xchg
aad
jne
mov
pop
in
mov
movsl
sub
jae
sub
in
fldl
sbb
clc
dec
or
sub
mov
imul
cli
lods
addr16
pop
push
push
mov
push
les
adc
lods
pop
mov
sub
jge
test
daa
and
push
jo
sub
mov
xor
mov
cs
or
dec
mov
mov
jne
mov
jo
aas
dec
dec
sub
push
xchg
cmp
xchg
add
sub
rorb
in
sar
and
out
scas
jbe
scas
or
adc
popf
pushf
mov
mov
loopne
push
sub
aad
test
or
cmp
imul
nop
dec
pop
sbbl
ljmp
dec
adc
mov
dec
jno
aad
outsl
or
inc
icebp
jb
cmpsb
or
sbb
testl
fadd
cmp
push
cmp
cmp
rorl
push
lds
dec
cltd
or
add
pop
lock
xlat
lock
mov
inc
ds
or
ja
bswap
je
loop
jl
and
in
rorl
subl
sbb
ficoms
mov
mov
test
in
sub
adc
arpl
idivb
push
loop
mov
gs
adc
stos
mov
mov
call
push
sahf
push
mov
sbb
test
int
ds
add
cli
sub
js
jno
xor
js
add
pusha
scas
cmp
xor
in
std
nop
pop
pop
xchg
dec
mov
movsb
mov
fs
lret
cmp
adc
ret
subb
ds
lret
outsl
add
mov
and
mov
or
push
mov
xor
adc
mov
xchg
daa
and
mov
jl
pop
sbb
dec
mov
pop
imul
and
aam
std
mov
lea
outsl
sbb
stc
add
cs
aad
mov
bound
xchg
test
mov
lahf
stos
xor
jmp
lods
fwait
and
scas
cwtl
jg
pushf
pop
xor
dec
call
xchg
lcall
and
mov
pop
mov
sub
mov
repnz
pop
repz
push
ss
mov
subl
sbb
out
scas
popf
dec
pushf
push
cmp
adc
pop
rclb
push
stc
cmp
and
or
shl
xor
inc
sub
sti
xor
test
shl
roll
fcomi
mov
inc
pusha
fistpl
add
sbb
loopne
insb
push
inc
pusha
pop
lahf
or
sub
nop
stc
mov
jl
rcll
xlat
pop
insb
pop
popf
sub
push
hlt
jno
jle
les
add
dec
or
in
sbb
jae
or
sahf
cld
and
inc
adc
fs
sbb
sbb
sahf
scas
pop
icebp
stc
jmp
in
push
in
mov
adc
out
sub
fs
outsl
in
pop
test
cmp
sarl
jne
or
stc
cmpsb
add
xor
movsl
xchg
daa
les
cmp
inc
addb
call
fsubrp
iret
lods
ljmp
call
inc
in
jns
inc
inc
insb
jmp
cmpsl
jns
cmpb
gs
icebp
mov
pop
pop
cmp
inc
ss
sbb
sbb
pop
mov
loope
loopne
mov
jg
jo
stos
xchg
and
mov
jg
xchg
pusha
mov
push
dec
or
cmpsl
mov
imul
xchg
xor
jp
rcrb
rsm
dec
andl
pop
push
dec
arpl
jl
cmp
nop
out
bound
push
in
add
mov
aam
test
push
lods
cmc
pop
adc
cltd
cli
add
mov
pop
sbb
sahf
lret
inc
sbb
daa
jo
xor
test
nop
push
xor
lret
cli
popa
dec
jmp
sbb
rolb
dec
or
addl
jecxz
call
mov
aaa
lds
jmp
dec
out
cmovb
fcomps
je
js
test
sub
pop
xor
sub
sub
enter
jo
aam
std
test
xor
sti
jg
shl
add
pop
ds
fdivp
mov
fwait
lret
jmp
xchg
scas
sub
test
fsubrl
fstpt
test
cmc
sub
mov
and
cmpsl
xchg
xchg
cmpsb
mov
ja
xor
xchg
enter
inc
jo
sbb
pushf
fwait
dec
into
cmpsl
xor
sbb
xchg
mov
sbb
les
fnstcw
testb
lcall
push
add
jmp
shll
dec
pop
xor
mov
jl
mov
and
inc
or
sub
mov
inc
mov
mov
sbb
add
pusha
adc
movsb
xchg
and
jle
inc
flds
fimull
xlat
add
mov
out
pop
test
xor
dec
daa
jb
dec
mov
pop
aaa
mov
jbe
sub
xor
sub
ljmp
and
adc
ja
mov
pop
call
pop
xor
xchg
pop
stos
sbb
lock
sbb
push
and
into
mov
mov
nop
push
cmp
ret
movsb
lods
push
hlt
push
repnz
int3
fbld
cmp
jb
dec
stos
inc
xchg
xchg
ret
xor
data16
into
and
inc
lds
sbb
in
cli
aaa
imull
mov
mov
and
dec
test
and
jns
fildl
pop
hlt
mov
daa
stc
adc
je
jge
xchg
iret
outsl
mov
movb
shll
and
mov
lods
jmp
jae
outsb
xchg
repz
loope
in
lea
adc
jnp
and
lret
iret
sbb
mov
mov
test
rorl
sub
inc
pusha
sbb
xchg
cmp
xor
fimuls
cmp
aam
jmp
cwtl
fwait
lds
clc
mov
cli
stos
xor
cmp
out
push
ret
je
xor
pop
inc
ss
mov
sub
pushf
mov
jno
jge
xchg
fildl
mov
jmp
cmp
add
lea
loopne
xchg
fimuls
jmp
aad
daa
fdivl
andl
or
loope
inc
mov
orb
fwait
jmp
mulb
or
xchg
and
pop
mov
imul
mov
daa
lds
sub
pop
sti
ret
out
inc
lds
inc
fisubrl
and
add
out
xchg
adc
nop
xor
jecxz
lods
mov
repz
sbbl
mov
mov
sub
pop
mov
mov
ja
inc
sub
mov
sub
sub
in
pop
push
ss
out
mov
push
or
ret
cli
cmp
pop
pop
gs
xor
sti
cmp
mov
cld
add
jle
push
and
jno
mov
scas
clc
roll
cmpsl
pop
nop
xchg
dec
insl
lods
pop
loopne
xor
out
xor
aas
and
test
push
mov
pop
mov
in
insl
inc
out
loop
sub
cs
test
jp
mov
fsts
sahf
addl
mov
and
icebp
or
and
jecxz,pn
xor
pop
pop
fcom
loope
xor
dec
push
or
cmpsl
sub
adc
fidivs
adc
dec
xchg
aam
mov
fildll
jle
add
mov
add
lret
add
ja
mov
scas
push
sahf
push
xor
inc
ljmp
add
sbb
jae
fadds
pop
jns
lods
repnz
mov
lods
xchg
nop
imul
negl
loope
jo
in
lcall
xorl
dec
adc
xchg
fs
repz
fcompl
popf
xlat
inc
iret
es
mov
push
mov
mov
push
inc
test
clc
push
adc
jp
dec
enter
icebp
shll
lods
push
cltd
mov
lods
call
mov
dec
inc
call
gs
jne
cmp
jae
jl
pop
and
ljmp
push
sbb
cltd
int
pop
insl
add
or
sbb
shrb
adc
pop
fistpll
sbb
jecxz
hlt
adc
jg
imul
jnp
inc
enter
push
sti
mov
fs
jge
inc
sbb
loopne
cmp
in
scas
enter
lds
out
dec
xchg
rcrb
cltd
jecxz
js
push
push
xchg
in
or
cld
lahf
js
test
insb
cmc
out
add
inc
add
test
xlat
jmp
mov
jno
jl
test
mov
testl
test
lock
and
mov
xchg
mov
push
and
pop
inc
jp
std
cli
jmp
call
adc
jl
stc
out
pop
adc
clc
xor
xchg
cmp
fistps
mov
iret
sar
fistpl
movsl
jle
shll
popf
add
aaa
inc
mov
outsb
sub
xor
call
lret
sub
fcomp
dec
push
stos
or
dec
in
pusha
xor
xchg
inc
fstpl
mov
ror
pushf
aaa
das
xchg
fildll
mov
pop
repz
mov
mov
jns
inc
jnp
fisubrl
mov
xor
xchg
mov
jmp
adc
cwtl
and
mov
mov
or
imul
in
mov
jp
aam
or
pop
pop
mov
imul
aaa
roll
jl
dec
xor
mov
add
fistpl
sbb
or
mov
imul
xor
int3
xlat
in
je
stc
or
pusha
or
pop
test
gs
scas
test
orl
popf
fwait
lds
bound
mov
mov
les
pop
mov
mov
xchg
adc
pop
adc
daa
dec
jbe
xchg
jns
dec
mov
nop
data16
add
test
push
add
popa
mov
push
aaa
inc
loope
adc
jecxz
cmp
inc
scas
jmp
or
and
cld
cmp
pop
mov
adc
sbb
fs
leave
or
xor
mov
sub
cs
or
or
cmp
jmp
mov
pop
jns
sar
arpl
mul
outsl
pop
mov
leave
fisttpl
outsb
fwait
rcrl
pop
inc
and
lods
aad
and
or
popa
xchg
ret
in
std
sub
movsl
or
push
or
add
cld
int
dec
test
xor
pop
cmp
push
pop
xor
dec
decl
xlat
loop
jp
or
mov
insl
xchg
test
nop
out
adc
sbb
inc
bound
or
cmpsb
push
rcrl
data16
in
sbb
fcoml
inc
jp
bound
icebp
lret
xor
fiadds
jno
xor
ret
dec
and
and
add
out
pop
les
scas
pushl
orb
rorl
lea
push
aaa
lods
inc
pushf
mov
and
scas
adc
mov
dec
mov
xlat
xchg
loop
insb
lahf
sbb
out
lock
ds
mov
into
xchg
or
or
mov
xchg
sahf
enter
rorl
xor
xchg
mov
or
pop
mov
push
xchg
jo
sub
cmp
mov
adc
insl
fdivl
cmpsb
fwait
and
rorl
in
popa
fimuls
mov
mov
sbb
cli
xchg
inc
jnp
cltd
fmuls
rorl
and
cmp
inc
cmpsb
sysexit
fmull
adc
inc
inc
jge
test
cld
lret
mov
dec
and
cmp
iret
fisttpll
in
mov
jmp
movsl
cmpsl
xchg
imul
mov
sbb
dec
mov
pop
stos
into
pop
fdivs
movb
in
jbe
call
inc
repnz
mov
ret
mov
ficomps
outsb
push
and
std
xor
jne
inc
xchg
or
int3
cmp
xor
pop
xchg
pop
xchg
pop
aas
pushf
test
andb
into
lea
stc
pop
stos
push
sub
pop
sbb
push
mov
lods
outsb
test
mov
pusha
insb
fcomps
jbe
and
rorb
pop
pop
dec
addr16
jmp
mov
mov
add
cmp
into
mov
sbb
fldcw
inc
push
adc
cwtl
mov
test
inc
ljmp
xchg
pop
cmpsl
cmp
js
jp
shr
out
dec
hlt
ds
mov
xchg
inc
int3
xchg
xchg
mov
insl
sub
mov
mov
shlb
popf
into
subb
sub
movsb
mov
out
fsubrl
jne
mov
jne
into
fs
call
sbb
leave
or
movsl
xor
sbb
stos
pop
mov
ret
xor
movl
jne
lret
nop
mov
fcmovnb
dec
or
xchg
mov
jp
loope
mov
or
in
and
cmp
mov
jo
jae
mov
arpl
scas
daa
mov
int3
call
fcomps
sbb
outsl
xlat
imul
inc
adc
test
mov
cmp
push
pop
imul
xchg
xchg
cltd
pop
mov
data16
ficompl
sub
push
push
data16
cmp
inc
mov
jne
mov
sub
popw
stc
loope
lods
stos
test
fs
mov
outsl
les
push
arpl
mov
xchg
mov
sub
and
and
mov
jle
mov
pop
xchg
sbb
fs
mov
xor
pop
cwtl
add
cmpl
mov
mov
or
pop
cmp
rcr
ljmp
imul
movl
jge
aaa
shlb
outsl
dec
in
and
out
pusha
xchg
sub
or
outsb
lods
mov
cmp
stos
dec
inc
mov
cltd
enter
adc
and
xor
add
and
mov
mov
xchg
xchg
or
pop
jns
xchg
xlat
mov
jecxz
jno
mov
arpl
lret
mov
cltd
inc
arpl
addr16
popa
cs
ljmp
mov
out
fimuls
mov
cmp
dec
mov
jbe
xor
nop
outsl
add
out
fs
test
mov
movl
mulb
out
xor
les
in
cli
movsb
popf
mov
or
enter
lods
dec
out
sbb
and
movsb
scas
lods
test
imul
and
push
push
adc
sahf
pop
jnp
jl
test
ja
ret
jecxz
shrb
roll
jge
lcall
lods
std
mov
outsb
mov
cmp
or
fucomi
xlat
stc
inc
imul
test
sub
and
sbb
pop
cmovno
out
mov
or
add
pop
out
outsb
popf
lea
xchg
scas
lret
ret
sub
neg
and
jecxz
or
add
cltd
icebp
jo
dec
pop
popa
imul
fs
ret
movsb
iret
add
sbb
push
cwtl
xchg
stos
imul
push
in
sub
push
mov
loopne
imul
pop
stos
xor
jecxz
stos
or
loopw
arpl
ja
cmp
ret
arpl
jno
sbb
sahf
sbb
add
push
xchg
sahf
cmp
mov
btc
ljmp
iret
call
sbb
popa
xchg
or
test
lret
mov
add
loope
adc
cs
mov
stos
lcall
cmp
dec
push
push
incb
mov
cs
inc
testl
movl
sub
cmpsl
jge
outsb
daa
mov
fsubrs
aam
jle
jbe
mov
push
fs
or
pop
ret
pop
sub
xchg
sbb
inc
fs
loop
push
jmp
adc
mov
mov
dec
fwait
xor
push
jl
or
or
pop
scas
das
lods
dec
inc
ret
rcrb
jne
das
cmp
xor
cmp
and
enter
mov
inc
push
sub
pop
std
mov
cmp
xchg
mov
mov
or
fldt
icebp
sub
mov
inc
jnp
jnp
cwtl
adc
sub
pop
push
or
in
sbb
xor
or
out
out
inc
es
push
cs
cwtl
mov
jbe
ljmp
aas
outsl
xchg
jle
mov
adc
and
mov
and
inc
mov
inc
adcb
shll
clc
in
mov
popf
jg
jnp
sbb
sub
ja
pop
adc
lods
int3
dec
jnp
nop
add
cmpsb
adc
mov
outsl
into
jg
push
jnp
add
fisttps
cmpsl
aad
addl
addr16
sub
into
jle
les
inc
xchg
xchg
stos
shrl
pop
push
xchg
in
ss
mov
push
lods
scas
lds
cli
negb
push
mov
cltd
cmpsb
rorb
mov
fstpl
clc
out
and
notl
push
jno
mov
sbb
jbe
pop
xor
xor
sub
cmc
fildll
imul
lret
out
sahf
lods
mov
cld
call
push
in
rcll
or
out
cmpsb
sahf
lret
pushf
xchg
pop
dec
add
sarb
or
testb
test
dec
mov
jg
lods
out
aad
push
outsb
mov
cwtl
cli
into
dec
jle
adc
repnz
bnd
mov
xor
sbb
mov
dec
xchg
jne
inc
icebp
push
test
dec
aam
jp
jp
add
out
test
adc
daa
cmpsb
fisttps
arpl
dec
push
cmp
insb
mov
add
push
jae
push
pop
daa
pop
das
fnsave
int3
cltd
cmpxchg
cmpsl
shrb
nop
iret
push
cmp
cmp
std
nop
aaa
ror
cmp
dec
aam
cmc
adc
out
js
and
shl
pop
aad
inc
cmp
shlb
test
lods
addr16
cmpsb
jno
arpl
shlb
pop
add
xchg
hlt
xchg
call
sbb
jae
jnp
sub
cmp
xchg
stc
scas
lods
lock
push
fistps
adc
movsl
push
lahf
inc
xor
into
push
sbb
aas
sti
sar
xor
popf
push
mov
shrb
mov
cld
jns
arpl
xor
faddl
ret
sbb
cwtl
pushf
or
push
sub
pop
ss
inc
icebp
sar
adc
int3
or
sub
orl
xchg
lods
sub
gs
xadd
xchg
js
xchg
fsubl
jmp
jo
inc
call
in
mov
pop
jl
sbb
xchg
out
jo
jecxz
lods
cmpsb
cmpsl
sub
cmpsb
sbb
pop
inc
jns
in
jg
sub
pop
dec
jno,pt
mov
mov
mov
sub
fbld
push
jge
scas
ret
or
mov
xor
mov
pop
inc
movsb
push
pop
pop
nop
fadds
gs
pushf
mov
ror
jnp
cmp
outsl
dec
pop
test
inc
loopne
movsb
sub
clc
jnp
mov
fisubs
shll
pop
icebp
jge
fildll
sbb
fstpl
ficomps
mov
jle
sub
inc
sti
adc
push
icebp
xor
les
dec
cwtl
out
mov
mov
mov
fsubs
ret
mov
in
mov
les
push
rclb
inc
mov
sub
std
push
and
fsts
mov
cmp
pop
in
sti
arpl
adc
cwtl
or
notb
arpl
xor
jge
xchg
mov
mov
fisubrl
jp
jmp
les
out
stos
fisubs
add
sub
aas
cwtl
daa
pusha
push
mov
lret
jne
int
mov
push
imul
aas
repz
fnstenv
movsb
jns
aaa
int3
pop
aam
in
dec
ret
push
dec
test
fwait
mov
pushf
shrb
adc
mov
imul
pop
repz
inc
in
pop
pop
push
pop
jmp
add
jbe
xlat
insl
lret
pop
sbb
mov
cmp
daa
icebp
jge
push
cmpsb
int3
lods
out
out
adc
imul
push
adc
and
stc
lods
sub
push
sub
mull
lahf
movsl
rol
jmp
cmp
in
xchg
jmp
push
setle
jecxz
sub
stos
and
cmc
mov
movsl
pop
sub
adc
in
mov
imul
adc
cmp
test
test
cmp
das
jno
mov
lock
add
sub
mov
loope
in
shll
dec
or
xor
es
push
idivb
mov
sub
jo
lret
mov
adc
jp
loope
mov
das
xor
loope
inc
mov
jbe
popl
mov
in
cmp
jae
mov
adc
iret
or
xchg
inc
and
jge
outsb
mov
sbb
push
ss
mov
movsl
in
push
lds
jns
adc
push
fldenv
ds
jmp
sahf
pop
mov
mov
dec
outsb
adc
ja
int
inc
es
add
and
xchg
push
push
stc
push
jno
enter
mov
loopne
cwtl
jns
popa
loopne
fsub
pop
jp
ds
std
into
sub
push
push
repz
mov
jno
dec
sbb
icebp
or
push
xor
xchg
adc
repnz
inc
push
and
pop
add
mov
and
lret
imull
mov
mov
adc
ss
xlat
insl
lret
push
popa
xchg
cld
or
push
aad
lds
push
and
rcrb
push
and
arpl
dec
test
lcall
jne
jp
rorl
jno
das
cmp
outsb
push
fcompl
cs
stos
inc
dec
idivb
pop
push
inc
jge
pop
ds
stos
clc
or
ja
fistps
dec
js
int3
leave
xchg
sub
stos
or
mov
sbb
dec
test
mov
xor
es
push
in
jmp
int
and
and
imul
push
xchg
inc
sub
popf
add
jae
movsl
push
pop
and
loopne
out
fucom
cmp
inc
enter
stos
or
sbb
xor
mov
sahf
int
aaa
and
and
out
lcall
xchg
pop
add
push
xor
mov
emms
mov
out
dec
sbb
sbb
fdivs
adc
or
add
cwtl
outsl
dec
jno
mov
push
mov
insb
add
loopne
ja
cmc
lcall
sub
jns
pop
xchg
inc
cwtl
fs
push
add
outsb
mov
cmp
and
shrb
and
jae
adc
mov
stos
outsl
mov
xor
jle
push
adc
lret
scas
add
jbe
fldcw
mov
leave
pop
das
push
xchg
aam
mov
cmp
outsb
enter
jg
fsts
pop
pop
loop
mov
xor
dec
ror
sbb
sbb
lock
dec
out
xor
dec
movsb
sar
idiv
ret
notl
mov
mov
adc
jno
pop
add
out
cmp
jg
xchg
stos
xchg
lods
cmpsl
inc
scas
mov
int
cmp
repnz
dec
and
js
mov
xorb
es
aas
cmp
out
jb
push
xchg
push
in
and
xor
add
push
mov
cltd
or
int3
adcb
mov
imul
or
adc
aaa
fsubrl
xchg
lret
fadds
adc
decl
outsl
mov
add
mov
jne
adc
sbb
orl
int
pushf
sbb
mov
mov
or
xchg
aaa
jmp
adc
mov
and
mov
mov
jl
sub
push
test
add
scas
sub
mov
scas
adc
stc
fsubr
cmp
sbb
inc
test
xor
pop
xor
xlat
sub
std
or
stos
mov
push
aad
cmp
adc
loopne
outsl
sarl
push
pop
inc
addr16
jp
pop
js
or
jl
pop
and
inc
push
hlt
je
insb
xchg
add
aaa
cmpsl
dec
add
in
loopne
and
pusha
enter
movsb
inc
mov
out
sub
sub
popa
ret
inc
subl
xor
loope
mov
ficoms
idiv
dec
movsl
addr16
and
mov
pop
mov
cli
inc
add
ja
mov
xor
mov
scas
lahf
mov
cwtl
jl
adc
ljmp
fdivrs
stos
repnz
cmpsl
push
scas
sbb
push
inc
pop
add
xchg
fstps
out
aad
ss
in
jmp
xchg
cmp
mov
test
add
imul
pop
mov
sbb
out
xlat
sbb
push
mov
adc
insb
daa
lock
mov
mov
or
leave
pop
mov
loopne
pop
inc
lret
outsb
das
fldcw
repz
push
push
lods
sub
call
pop
xchg
inc
inc
shll
push
pop
jno
mov
les
push
mov
in
dec
lcall
sub
mov
xchg
jb
cwtl
add
cmp
push
adc
lock
jae
add
addr16
mov
fmuls
or
inc
mov
inc
shlb
xchg
sarb
leave
mov
push
out
popf
clc
or
fs
mov
into
roll
ljmp
cmpsb
rolb
test
xchg
dec
and
push
dec
push
in
mov
bound
push
xorb
sarb
fwait
jmp
mov
nop
push
mov
cwtl
mov
call
pop
adc
aaa
push
sbb
or
jbe
fcompl
imul
loop
aad
xor
push
imul
iret
cmp
data16
pop
rcrb
sbb
ljmp
xchg
movsb
jne
or
or
or
adc
mov
dec
sub
ljmp
imul
jl
dec
notb
mov
cld
or
cmp
push
sub
push
lcall
test
jnp
cmp
inc
mov
imul
sbb
ljmp
enter
leave
lods
sbb
clc
rolb
test
aad
std
sbb
xchg
pop
ret
popa
sbb
loopne
pop
push
shrb
mov
int
les
mov
rolb
xchg
dec
sbb
xchg
xor
movsb
lods
cmp
andl
jle
popf
jmp
push
icebp
sbb
cmp
in
fwait
xor
mov
fdivs
lret
out
dec
mov
mov
sbb
jnp
adc
andb
cmp
push
dec
push
dec
push
leave
lret
clc
lds
setbe
mov
or
sub
inc
sbb
jle
mov
dec
dec
lret
jns
shr
sbb
int3
insb
adc
sbb
je
lods
push
aaa
in
pop
outsl
xorb
out
aaa
jg
stc
out
inc
pop
sbb
jg
mov
cmp
xchg
jnp
sub
cmpb
add
popa
movsl
push
adc
and
or
stos
adc
pop
and
out
incl
jb
xor
xor
iret
sbb
jb,pn
fdivrs
adc
cmp
push
xchg
test
adc
mov
jecxz
test
inc
dec
pop
mov
adc
inc
or
dec
sub
xchg
loop
je
mov
mov
repnz
mov
pop
jns
sub
xorps
movsb
mov
cmpsb
fbstp
icebp
gs
cmp
mov
add
les
bound
inc
inc
adc
fisubrs
xor
push
dec
push
and
testb
xlat
push
lahf
les
jg
pop
out
xchg
pop
aam
inc
add
mov
push
jbe
sub
lea
xchg
gs
mov
mov
jp
test
sbb
and
mov
xor
sti
movsl
aad
xor
jl
mov
loope
shlb
sbb
mov
add
sahf
mov
pop
push
fists
fsubs
rcl
mov
jg
mov
pop
bound
ret
add
fwait
aad
xor
in
neg
add
data16
cmp
cwtl
push
push
popa
not
lret
xchg
repnz
fsubrl
fisubs
xchg
push
pop
push
enter
arpl
subl
push
jo
mov
out
dec
das
cmp
cmp
sub
cmp
pushf
jae
icebp
and
jecxz
stos
push
mov
mov
ljmp
mov
mov
and
shll
mov
cli
out
xchg
fildll
outsb
scas
popf
lahf
push
cmc
push
mov
push
es
xlat
jno
cld
xchg
mov
call
jb
int
pop
mov
dec
add
cltd
lock
sbb
movsl
imul
sbb
xchg
je
jbe
mov
inc
push
sub
enter
es
cld
call
iret
dec
popa
scas
mov
inc
je
and
leave
add
or
mov
mov
pop
mov
dec
sub
rolb
aad
cmpsl
pusha
sbb
dec
sarl
dec
mov
lea
push
out
sti
pushl
mov
mov
loop
aaa
pop
sbb
lret
push
push
test
mov
pop
pop
mov
insl
sbb
aam
icebp
aas
mov
push
out
cmpb
fwait
mov
testb
fistpll
sahf
push
fs
rorl
lret
clc
movsb
and
xchg
jle
push
idivb
divl
leave
repz
hlt
sbb
shlb
xchg
mov
inc
xchg
daa
lea
subb
or
std
dec
mov
daa
adc
dec
xlat
xor
add
and
push
mov
xor
pop
dec
outsb
push
lcall
stos
adc
std
out
cmp
lret
movsb
scas
xchg
scas
mov
and
repnz
xchg
adc
mov
repnz
ret
xchg
test
adc
xor
lds
mov
scas
out
cwtl
repz
stos
sub
hlt
movsl
popl
je
adc
and
andnps
mov
rolb
adc
cld
cmp
lock
sahf
jbe
lock
adc
aad
movl
mov
mov
cmpsb
sub
dec
pop
mov
arpl
jle
rorb
push
popa
lcall
call
add
aas
mov
lret
push
jecxz
cmp
jp
dec
add
jno
lea
fstl
push
in
push
mov
xor
mov
repz
rorb
fbld
xchg
sub
sbb
inc
adc
rclb
sub
fwait
mov
es
add
jge
jno
subb
test
inc
fs
aas
cmc
adc
adc
xor
inc
xchg
mov
xor
cmp
jno
hlt
dec
pushf
or
jl
mov
repnz
adc
inc
mov
fnsave
mov
push
dec
mov
lcall
add
imul
sti
dec
je
imul
push
add
addr16
mov
mov
cld
and
mov
arpl
popf
clc
adc
sti
andb
mov
les
add
sub
mov
push
hlt
and
lcall
dec
lret
jae
jl
jg
jp
sub
nop
xor
in
xor
arpl
sub
inc
add
je
pop
fwait
in
pop
sbb
xchg
lea
rcrb
shl
cli
sub
shr
add
add
jecxz
inc
adc
mov
or
movsl
or
je
jns
mov
shll
inc
cmp
adc
sbb
int
jmp
test
sub
mov
pop
sub
test
icebp
sub
mov
inc
pop
sub
push
jp
mov
push
outsl
add
fsts
icebp
aad
test
mov
pushf
jmp
xchg
inc
mov
and
flds
ret
sbb
xchg
aas
sub
roll
inc
data16
push
mov
adc
pop
cmpl
dec
xor
inc
loop
pusha
add
mov
or
and
xchg
outsb
add
aad
xchg
cmp
adc
test
mov
mov
sbb
out
addr16
addr16
ret
fsubrp
movsl
cmp
add
adc
xchg
adc
scas
mov
mov
cld
aam
out
xchg
mov
xchg
mov
and
jmp
mov
icebp
pop
icebp
pushf
xchg
outsb
stc
nop
lods
fs
insb
mov
fcmovnbe
inc
push
dec
in
pop
mov
sbb
ljmp
stc
pop
xchg
lahf
lcall
jnp
leave
inc
or
adc
sub
or
adc
xor
cmp
test
stos
pop
mov
int
push
dec
lock
push
sbb
out
cmp
dec
jns
mov
repnz
sub
aam
sbb
mov
ficomps
dec
push
test
jo
mov
lahf
icebp
aas
inc
add
leave
dec
adc
lcall
or
xchg
lds
or
cmp
or
jle
aam
inc
pop
sahf
mov
pusha
repnz
or
fwait
adc
add
sbb
sti
mov
scas
out
nop
test
pusha
shrb
jne
xchg
out
subl
fwait
push
hlt
shl
dec
or
dec
push
pop
nop
cmpsb
lock
or
xchg
and
pop
ljmp
addr16
jb
jo
or
add
add
scas
lock
dec
sub
outsb
mov
push
lds
push
mov
rolb
inc
sbb
stos
push
sub
jmp
repz
cwtl
stos
shll
fistpl
cmp
jge
sub
jge
imul
push
or
sub
orl
lret
xchg
incb
add
xchg
loopne
in
jae
and
push
cmpsb
mov
mov
pop
pop
pop
dec
rorb
or
add
inc
mov
cmp
push
test
data16
scas
cmc
xchg
add
fimuls
aad
jb
jp
xor
push
iret
mov
js
jg
arpl
jg
mov
or
rcrw
adc
dec
outsb
insb
sbb
xor
icebp
pop
cmp
shlb
mov
add
or
int3
test
shll
scas
push
add
icebp
insl
fldt
ja
inc
cmpsl
pop
inc
cld
ljmp
out
sti
call
das
push
jns
jg
push
or
lock
out
dec
inc
les
test
dec
and
push
mov
mov
xchg
dec
adc
push
adc
adc
icebp
pop
imul
rcrb
mov
lret
inc
movsl
pop
push
fstps
fucom
xchg
dec
fwait
jge
mov
cmp
arpl
gs
cmp
stc
not
mov
sub
xchg
cmp
and
dec
push
jno
test
push
test
addb
adc
xor
sbb
or
sbb
addb
imul
out
adcb
mov
and
sbb
das
outsb
jp
inc
fisttpl
and
jg
pop
xor
mov
push
lods
xchg
jo
push
ret
sti
imul
push
add
push
jbe
shl
xchg
pop
lahf
jbe
dec
jo
stos
test
pushf
cli
lock
inc
cmpsl
mov
rcl
ficompl
sbb
add
jecxz
pop
xor
pop
mov
xchg
leave
lcall
and
jmp
fmuls
or
inc
pop
in
and
das
fcoml
xor
lret
sub
xchg
jb
mov
popf
ss
xchg
fsub
add
mov
das
cmp
inc
scas
test
adc
push
jne
sub
popa
xor
inc
cmp
add
xchg
adc
push
lahf
or
popa
and
or
lock
in
add
jns
loopne
and
std
loop
cltd
push
and
cwtl
pop
push
je
cmpsl
jge
jnp
sub
mov
push
add
xchg
push
push
pop
sbb
in
xor
sub
mov
mov
mov
xor
dec
cmp
or
xor
repnz
add
test
test
xor
cmp
sub
add
pop
sub
xchg
aad
cltd
mov
mov
stc
jmp
pop
add
es
lock
fwait
iret
test
sbb
xchg
sbb
and
sub
arpl
sbb
lods
push
jbe
sti
fstp
mov
jecxz
xchg
popa
arpl
aaa
fsubl
insb
ret
xorb
pop
sbb
jge
and
test
stc
adc
inc
jp,pt
dec
jg
or
rorb
sbb
xchg
jno
cwtl
stos
cmp
adc
icebp
aaa
push
aaa
les
scas
fisttpll
aad
mov
cmp
mov
test
jb
subl
out
pop
out
sahf
or
ds
jae
shr
and
jle
fistpl
filds
cmp
iret
es
jp
sbb
popa
adc
inc
les
fisubrl
outsl
ret
adc
cltd
movsb
pushf
jl
mov
cmp
xchg
incb
pop
movsl
jp
lcall
rcrb
inc
rol
pushf
lcall
fiaddl
test
out
dec
adc
out
pop
lds
and
cmp
xchg
jo
invd
fdivrs
mov
mov
leave
or
fdivrl
adc
mov
mov
mov
int3
mov
pop
add
inc
or
ljmp
test
cmpb
pop
imul
cmp
fs
inc
sahf
ret
es
push
outsl
or
or
add
fcompl
ds
test
xchg
in
pop
stos
test
add
sbb
pop
popf
fldl
cmp
ror
adc
insb
push
pop
push
jl
test
cmp
lahf
mov
addr16
in
outsb
dec
lods
add
imul
push
rorl
mov
inc
mov
and
inc
dec
jb
aad
and
pop
jg
dec
pop
add
aad
lea
mov
js
mov
jbe
mov
mov
clc
inc
inc
pusha
pop
mov
mov
cmp
idivl
mov
insb
test
fcmovbe
iret
push
push
out
out
scas
cmc
xchg
rcl
out
cltd
inc
or
sbb
rcll
or
ds
push
adc
out
pusha
jne
xchg
mov
mov
out
sahf
jmp
scas
les
ljmp
sbb
inc
mov
sub
xor
fldenv
fs
jl
xor
add
or
xor
imul
xchg
jmp
cmpsl
mov
in
stos
mov
jno
mov
inc
pop
push
lock
cmpsl
sahf
xor
lods
mov
jns
popa
rcrl
lods
mov
pop
push
scas
cltd
pushf
or
loop
sub
test
out
mov
xor
or
or
jns
mov
push
lret
jo
aad
std
lods
sahf
mov
and
lea
dec
popf
jp
repz
mov
sahf
inc
lods
insl
fs
adc
xor
ja
test
int
xchg
inc
les
imul
xchg
mov
and
es
cmp
jecxz
leave
cmp
push
cmp
xor
inc
jge
leave
mov
xor
dec
int3
jb
icebp
cld
shl
pop
add
and
cmp
mov
scas
inc
enter
adc
mov
ret
sub
jmp
dec
out
pop
insl
arpl
xor
mov
or
lds
iret
add
fisttpl
mov
push
mov
push
xchg
es
in
push
in
mov
cmpb
inc
fwait
daa
and
fs
push
out
dec
jns
or
lods
pop
push
xor
cmp
lcall
and
iret
fs
dec
xchg
and
mov
cmpb
hlt
adc
add
sti
in
and
sbbl
incb
inc
adc
cmp
xchg
xchg
inc
int
sbb
std
jo
aad
sbb
lahf
pop
cwtl
negl
xchg
xchg
xor
leave
mov
lret
ja
out
sub
jns
push
mov
inc
inc
cmc
xchg
adc
pop
in
cmp
jecxz
add
mov
mov
es
pop
in
rclb
fmull
hlt
loop
mov
sub
scas
ljmp
andl
test
ret
out
gs
cltd
cwtl
jp
push
test
pop
xchg
jp
shr
xor
and
fcoml
fidivrl
movsb
mov
in
cs
std
sbb
mov
lods
js
xor
rcrl
into
and
mov
hlt
out
xchg
jge
aam
cwtl
jne
cmpsl
stc
pop
in
xchg
aaa
sub
scas
loopne
sbb
loop
jno
fxch
inc
ficoms
and
fnsave
lods
leave
add
lds
xlat
stos
xchg
dec
jne
mov
pop
xchg
ja
enter
idivl
lds
pusha
hlt
stos
inc
and
xlat
icebp
stos
sahf
pop
jo
and
jo
pop
sbb
sub
xchg
dec
add
cltd
and
loop
fdivrl
pop
jmp
int
sbb
xchg
lcall
not
ds
stc
popa
enter
push
adcb
adc
gs
dec
mov
test
sub
test
sbb
cltd
cmovnp
push
jge,pn
mov
fidivrs
xchg
hlt
inc
jg
xor
aad
insb
jmp
dec
or
mov
in
dec
imul
xchg
or
cmpsb
adc
or
adc
mov
jmp
and
fnsave
mov
out
mov
clc
out
cmp
cmpsb
jl
sub
adc
or
les
fisubl
cld
out
jbe
fmull
mov
inc
aam
mov
dec
insl
in
dec
bound
dec
and
stos
push
subb
sbb
insl
xchg
imul
shll
cmp
jno
rol
mov
add
aas
mov
fists
mov
dec
mov
pop
int
stc
incl
js
mov
fdivrl
dec
jmp
rclb
push
push
add
cmp
xchg
cwtl
or
and
in
pusha
sbb
add
inc
inc
jnp
sub
xchg
and
add
imul
pop
and
lret
mov
adc
scas
imul
imul
xchg
sbb
cmp
mov
xchg
in
xor
ficomps
subl
jecxz
dec
bound
outsl
outsl
cmp
cli
push
mov
or
fnstsw
pushf
push
jge
into
clc
mov
fnsave
mov
test
icebp
sbb
sbb
adc
inc
ret
mov
sub
adc
add
and
adc
cmp
std
aad
out
loop
inc
mov
push
mov
cmp
in
sub
push
dec
inc
jecxz
mov
sarl
test
and
jmp
scas
mov
xchg
xorb
rcll
in
sahf
push
lock
pop
inc
pushf
xchg
scas
push
sub
xchg
imul
in
push
in
adc
jmp
arpl
sub
loop
mov
mov
jne
xor
inc
mov
repnz
mov
pusha
cmpsl
mov
cmp
loope
jle
fwait
or
dec
in
sbb
int
fsub
scas
mov
mov
add
cld
scas
sbb
jno
sbb
sbb
incb
inc
lahf
jb
gs
push
push
sub
lcall
push
mov
xor
ds
sbb
fidivl
lret
idivb
xor
add
addb
push
loop
ss
loope
cmp
mov
adc
mov
xchg
das
adc
inc
stos
jno
fnstcw
dec
mulb
addr16
je
inc
pop
adcb
ffree
push
dec
push
xchg
in
imul
pop
andl
js
in
cs
mov
hlt
int3
fnstsw
pop
loope
sarl
xchg
jle
xchg
mov
ja
and
or
int
push
js
in
and
sbb
ss
and
push
lcall
mov
cmp
jnp
add
inc
pop
cwtl
inc
mov
shl
cwtl
jmp
out
incl
lock
ss
cs
seto
loopne
pop
imul
cmpsb
xor
pop
xchg
es
sub
dec
adc
fcmovnbe
lods
stos
adc
push
cltd
pop
out
cmpsb
sbb
ret
jo
insb
bnd
notb
pop
adc
mov
fnstsw
or
testl
adc
test
lods
push
cmpsb
in
mov
cmp
fmull
jecxz
jb
inc
pusha
sbb
jno
xlat
stos
inc
cmovae
sahf
arpl
lods
ret
ja
fistpl
and
loop
xchg
cltd
outsb
into
mov
insb
in
hlt
cmpsb
ds
jbe
pusha
into
jnp
sar
lret
cmp
dec
pop
imul
fwait
cltd
xorl
mov
mov
lds
leavew
push
mov
iret
lahf
xor
loop
popa
jp
shlb
xor
outsb
and
test
mov
cmpsl
cmpsb
outsl
test
cmp
push
jnp
outsl
ret
or
sbb
pop
enter
adc
xchg
call
push
movsl
xor
inc
jl
in
mov
mov
sub
sub
add
cmovo
call
jmp
cmpsl
mov
arpl
pop
xchg
sbb
and
jo
ror
ja
idiv
lcall
xor
pop
cld
push
inc
insl
sahf
fcompl
sbb
ljmp
rcl
push
stos
test
int
out
fsubrl
cmp
jmp
add
mov
je
mov
sbb
test
pushf
mov
jnp
cmpsl
sahf
sbb
pop
in
stos
inc
sbb
test
mov
mov
or
fwait
popa
andb
xchg
pop
push
push
out
xchg
xor
repnz
push
cli
sbb
mov
inc
and
sahf
movsb
pop
int
mov
fdivl
aaa
sub
dec
divb
sbb
outsb
add
insb
inc
scas
sbb
adc
in
lea
mov
sub
lahf
dec
mov
movsb
pop
pop
mov
sbb
lds
mov
stos
stos
sub
mov
popa
repnz
and
add
fmuls
shlb
push
bound
adc
and
xchg
mov
or
lret
inc
daa
sahf
notb
xor
sbb
test
inc
leave
dec
mov
mov
fisubrs
add
pop
sbb
jg
ja
frstor
mov
and
jmp
cmp
xchg
adc
jle
jmp
mov
fwait
inc
popf
pusha
enter
pop
mov
mov
xor
jns
adc
imul
adc
popf
sbb
inc
cmp
dec
jmp
lods
jg
sub
les
daa
cli
mov
lds
jno
jp
xchg
out
mov
mov
mov
daa
pop
dec
cmp
xlat
popf
xor
jecxz
pushf
pop
and
pop
or
je
mov
xchg
inc
cmpsb
xchg
dec
sbb
repnz
mul
pop
aad
enter
sub
inc
mov
mov
cltd
ds
popa
add
sub
push
jmp
sbb
out
jns
sahf
jnp
rorl
cmpb
arpl
pop
jmp
enter
add
sub
xor
out
es
enter
in
inc
add
jns
stos
outsb
adc
push
mov
mov
fidivs
testb
repz
pop
xchg
pop
cmp
int
push
and
es
mov
hlt
push
and
xorl
cmp
xor
lds
mov
mov
jnp
and
out
xor
mov
mov
cmpsb
push
push
xchg
pop
lds
dec
and
stos
adc
xchg
or
int
dec
ss
ja
cltd
and
sub
jae
mul
das
ds
scas
xchg
add
outsl
mov
mul
pop
stos
mov
inc
jns
xchg
lock
xchg
outsb
push
xchg
pop
mov
jbe
bound
cwtl
movsl
jg
push
jo
fwait
add
int3
repnz
jnp
fldenv
adc
jne
int3
or
sbb
inc
into
fs
pushf
loop,pn
pop
mov
dec
mov
sub
jnp
insb
loope
xchg
jae
jo
cmp
push
jnp
sahf
jl
push
pop
loope
add
iret
sub
addr16
flds
imul
outsl
mov
adc
add
loope
adc
add
dec
mov
mov
jns
es
mov
or
push
sbb
pop
fwait
insl
mov
push
jne
inc
jno
dec
and
data16
adc
jecxz
xchg
jns
mov
sbb
push
int
or
add
inc
ret
pushf
in
inc
xor
aam
in
dec
imul
nop
rorb
mov
outsl
adc
xchg
fidivrs
push
shr
fmull
mov
mov
stos
push
sub
aad
jle
and
jle
cmp
xchg
jns
scas
xor
pop
rorl
aaa
pop
jecxz
into
lds
loope
data16
cmpsb
std
xlat
push
fisttpll
or
pop
pop
jns
cld
incb
push
cmpl
lea
loope
out
addb
mov
fnsave
aad
aaa
sbb
mov
pop
jle
xor
inc
push
mov
jge
lods
sbbb
xchg
inc
nop
inc
add
mov
sahf
pop
dec
in
add
neg
adc
and
cli
fwait
int3
sbb
mov
das
mov
lahf
xor
mov
fldcw
sbb
icebp
sub
rcrb
and
xchg
jge
mov
pop
mov
cli
sbb
pushf
pop
cmpsb
imul
jnp
mov
rcll
mov
dec
lcall
mov
adc
sbb
xlat
add
test
dec
xor
push
mov
es
jge
cltd
dec
aas
cli
and
stos
incl
cmpsb
push
mov
sbb
push
insl
mov
sub
mov
mov
mov
dec
push
ret
lahf
pusha
jns
imul
xchg
jns
mov
lods
sub
jo
or
cltd
stos
repz
lcall
out
mov
pop
sub
mov
mov
aas
stos
fwait
nop
pop
cmpl
push
jle
push
fwait
js
ret
fchs
cmp
icebp
insb
in
aas
fs
and
fbld
aam
cltd
mov
repnz
out
loopne
fldenv
push
mov
cmp
imul
stc
mov
mov
adc
push
add
lods
outsb
neg
dec
scas
into
mov
xchg
dec
inc
jecxz
push
mov
repnz
mov
cmp
shrb
cmp
rcr
jle
lret
shlb
pop
int
aaa
imul
add
jae
repz
cmp
push
cmpsl
adc
arpl
stos
mov
movb
sbb
push
push
shll
insl
push
test
xchg
lock
mov
mov
cltd
mov
push
ss
repnz
add
pop
push
jno
imul
aad
in
ret
and
cmp
mov
ficoms
stos
jg
mov
or
lahf
addb
jge
mov
dec
mov
push
nop
andl
lods
jbe
je
enter
cmpsl
jo
icebp
popa
ret
jmp
out
adc
rclb
mov
imul
mov
jo
cld
popa
xchg
mov
push
add
outsb
scas
push
ss
or
rcrl
xchg
inc
mov
fldenv
lcall
clc
and
cltd
insb
outsl
insb
lret
pop
subl
shrl
pop
push
ret
lea
jecxz
out
cmpsl
je
jo
mov
or
inc
and
sbb
jo
dec
mov
loope
push
cmp
ss
shlb
inc
xchg
mov
jge
adc
add
imul
scas
jmp
outsb
js
out
mov
adc
and
jno
cmp
dec
popf
mov
xor
jae
or
out
cmp
pop
lods
lea
mov
sbb
addr16
je
cmp
pop
or
sub
jmp
add
inc
test
imulb
sbbl
or
into
insl
imull
popa
lret
cltd
ss
mull
cmp
push
push
pop
out
stos
inc
and
sub
mov
push
jp
cwtl
xor
into
pop
adc
lds
cld
sub
fcoml
sti
inc
test
iret
jg
push
mov
mov
into
loope
push
sahf
sbb
pop
inc
idiv
loopne
cmc
sbb
xlat
xlat
imul
lds
cld
pop
dec
pop
out
movsl
xor
stos
and
mov
adc
pop
arpl
push
popa
xor
cmp
cwtl
xchg
arpl
mov
pusha
pop
cmp
push
fisttpll
cmc
out
or
enter
sbb
pop
cmpl
sbb
cmp
or
push
clc
jg
sbb
push
lods
cmp
pop
dec
adc
loopne
adcl
ds
out
and
mov
cmp
outsb
jl
mov
negb
aad
stos
xchg
mov
sub
fbstp
cmp
je
lret
stc
or
in
push
dec
push
dec
cmp
testl
test
out
rorb
or
int
test
hlt
int
jb
xchg
mov
call
jno
sub
and
mov
add
ret
cmc
loopne
mov
jno
push
cld
adc
mov
mov
test
dec
inc
ds
cld
dec
ret
iret
clc
mov
lret
cmp
mov
push
filds
fadd
jge
aam
shl
cmp
out
xchg
popl
jl
punpcklwd
addr16
xor
arpl
test
add
cmp
stos
pushf
out
pop
xchg
mov
dec
push
bnd
repnz
mov
xchg
push
push
dec
movsb
lret
out
scas
lcall
lds
into
pop
pop
shrb
test
or
cs
cltd
int
xchg
aam
adc
or
stc
adc
dec
inc
cmp
out
sub
pop
pop
cmpsb
sub
imul
cmpsb
scas
es
jae
push
mov
or
jno
inc
or
cmp
xor
xchg
sub
dec
into
mov
fstpl
test
fisubrl
js
jnp
in
mov
dec
test
add
dec
das
jnp
sub
shll
pop
pop
cmpsl
cmp
ret
mov
jno
mov
fwait
imul
mov
outsb
adc
cli
and
les
xor
push
or
subb
mov
push
sub
scas
adc
pop
xor
push
aas
jo
mov
mov
add
out
adc
shll
jp
jle
mov
test
pop
movsb
mov
xchg
sub
adc
daa
inc
and
jecxz
ret
shll
test
mov
pop
add
out
js
xchg
mov
pop
out
lcall
pop
pop
negl
push
adc
decl
adc
pop
lret
sub
popa
xchg
shlb
insb
xor
icebp
dec
imul
jl
sahf
ret
push
pop
dec
insb
mov
movsb
shll
or
mov
addr16
loopne
push
mov
fistpl
and
push
mov
xor
cmp
fldl
insl
pop
ds
popf
dec
cmp
or
push
and
addl
lret
mov
mov
sbb
pop
popf
notl
rcl
pushl
or
or
lret
mov
fwait
sbb
pop
cmp
adc
mov
test
xor
jne
pop
out
stos
test
out
mov
js
and
shll
loop
ljmp
and
inc
push
inc
and
stos
or
insl
aas
out
mov
jne
test
or
movsb
pop
or
fstps
pop
jnp
rorl
out
xchg
mov
sbb
in
sbb
jle
icebp
mov
mov
in
mov
cmp
push
lea
stc
ja
dec
test
mov
jge
jbe
or
dec
pushf
mov
jmp
daa
add
push
testb
lahf
jmp
scas
cmp
pushf
push
push
cli
ret
jo
jecxz
into
inc
cwtl
mov
fimull
push
gs
mov
gs
test
jl
leave
ret
xchg
enter
push
out
xchg
pusha
inc
shlb
jns
cmp
cltd
pop
cmp
and
cli
sub
push
pop
sbb
out
test
daa
std
outsb
cmp
cmp
lcall
push
js
addr16
mov
sub
data16
sub
dec
sub
and
push
mov
shll
sti
cmp
fildll
lods
mov
sub
xor
sub
faddl
bound
mov
out
push
mov
lods
jae
movb
andl
dec
push
cmp
or
les
inc
push
pop
aam
xor
aad
cmpsl
jg
xor
cmp
leave
pop
cmp
add
jno
push
mov
lock
clc
xchg
jle
lcall
aas
mov
push
out
fwait
xor
stc
leave
rorl
test
pop
pop
clc
enter
leave
in
lret
fmull
or
sti
xchg
dec
call
loop
xor
mov
repnz
mov
mov
shll
rcr
mov
movsl
or
add
jecxz
sahf
mov
js
mov
mov
dec
aaa
ja
add
data16
add
xor
int3
jmp
movsb
das
xchg
pop
andb
pop
pusha
test
jns
push
lds
mov
xchg
fdivr
push
nop
dec
push
subb
sub
sbb
fcompl
call
rclb
push
sbb
insb
jb
pop
mov
les
pushf
fs
cs
add
pop
jmp
sbb
sbb
jae
sbb
jae
fsubl
jno
dec
in
jmp
xchg
out
sub
repz
lock
fisttps
stos
adcb
jle
fstpt
in
shlb
pop
pushf
inc
movsl
lods
mov
jnp
mov
subb
imulb
arpl
and
jmp
or
or
xchg
dec
dec
mov
js
cmp
xchg
push
fdivrl
pop
fildll
in
aam
in
pop
aaa
xor
pop
loope
jge
xor
cmpsl
cmp
rorb
cld
adc
xchg
jo
sti
test
xchg
pop
adc
hlt
adc
dec
fldcw
fimuls
outsl
sbb
inc
out
jb
je
jp
or
xor
popf
mov
xchg
dec
dec
dec
orl
push
mov
outsl
sub
xchg
in
cmp
in
xor
mov
out
lahf
frstor
adc
inc
xchg
and
xlat
les
mov
shrb
fnstcw
xlat
cld
int3
and
xlat
ret
mov
push
adc
fcmove
cmp
loop
js
inc
int
xlat
or
xor
leave
xor
fldcw
and
push
mov
cmp
in
in
mov
push
mov
push
xchg
jge
cmp
ficoml
lret
sub
scas
ficompl
inc
jnp
std
into
push
pop
mov
or
jo
pop
sub
mov
aaa
gs
mov
pop
sti
int3
xor
sbb
adc
mov
sbb
mov
xchg
or
aas
push
outsl
in
xor
jne
bound
sub
stos
and
mov
ljmp
jns
lahf
sbb
sub
push
in
push
mov
inc
push
mov
adc
and
pushf
xchg
sub
jns
xor
inc
mul
fists
jns
out
cmp
leave
cmp
es
cmc
movsb
pushf
dec
pop
imul
outsb
data16
cmpsb
je
aad
int
push
cmp
bound
ljmp
and
inc
in
aam
push
lret
fstpl
stos
cmpsl
fistpl
xchg
in
in
fcomps
sbb
imulb
push
xor
test
icebp
mov
shl
loop
sub
pop
rcll
jns
loopne
mov
dec
xor
pop
outsl
jae
sbb
mov
sub
push
jmp
lret
rol
inc
adc
pop
shlw
xchg
push
inc
loopne
iret
jge
add
and
outsl
mov
pop
mov
mov
jns
xor
and
inc
or
jp
sbb
or
stos
mov
shll
dec
out
aam
jge
adc
jnp
pusha
ja
or
xchg
rolb
mov
outsl
or
xchg
ja
or
les
inc
cs
sbb
ret
les
addr16
ret
gs
inc
daa
inc
mov
sarl
cmp
jmp
repz
out
in
cmp
pusha
iret
adc
and
xor
mov
mov
inc
lret
or
scas
push
cmp
popa
sbb
dec
outsl
test
inc
cmp
shll
insl
lahf
mov
aam
sub
jge
fisttpll
je
shlb
mov
fidivrl
or
and
sbb
mov
ljmp
xchg
adc
mov
xchg
repnz
push
cmovno
mov
fwait
push
lea
in
scas
faddp
jno
mov
inc
mov
jge
pop
insl
add
shrl
mov
aam
cmp
push
mov
leave
inc
sbb
scas
cmp
scas
ficoml
fmul
jbe
rorb
lahf
dec
lock
and
out
jae
inc
jnp
mov
mov
dec
pop
cltd
into
outsb
movsb
int3
ljmp
mov
mov
ja
insb
outsl
mov
mov
sahf
sbb
bts
aad
jbe
imul
fmull
push
push
or
je
dec
test
or
mov
mov
xor
xor
stos
jns
sbbb
dec
sbb
jmp
xor
cmpsb
sub
sbb
les
sub
push
xor
inc
enter
pop
pop
mulb
or
cmp
mov
sbb
or
adc
sbb
aad
arpl
or
pop
je
dec
add
xor
xor
inc
std
movsl
push
cmpsb
in
test
ss
je
scas
cmp
popf
in
cs
xor
jg
in
ja
sarb
cmpsb
mov
pusha
sbb
cmp
lret
jge
divl
out
add
push
rcrl
sbb
cli
mov
mov
ret
xor
inc
jo
cmpsl
mov
add
cmp
mov
cmp
shll
or
hlt
cwtd
cli
xchg
dec
data16
adc
cltd
lcall
xor
mov
shlb
in
pop
popf
cld
pop
jb
lock
push
subb
mov
lds
ret
idivb
rolb
aam
test
in
ja
and
and
adc
pop
jb
xchg
rcrb
add
sub
sar
xor
iret
ljmp
lds
pop
and
mov
aaa
mov
or
ss
pop
adc
repz
mov
jno
test
daa
xchg
pusha
in
mov
inc
enter
fistpll
stos
int
cmp
xor
inc
cli
pusha
xlat
dec
cmpsl
dec
xor
loopne
sbb
loope
outsl
aam
gs
sti
in
jp
jbe
out
test
das
mov
or
loope
sub
sub
jnp
pop
jae
mov
pushf
xchg
mov
test
push
sub
cwtl
dec
xchg
fisubrs
lret
outsl
lret
adc
inc
fistpll
insl
cmp
les
jb
jb
cmp
and
dec
jg
nop
cmc
adc
fildll
cmpsb
jb
fidivrl
paddb
movsl
lods
int
std
movsb
into
adc
mov
popf
add
test
dec
xchg
repz
xchg
mov
sbb
lods
adc
aam
or
fdivrl
sub
jb
out
jno
mov
scas
in
mov
sub
dec
repz
js
xor
mov
cmc
jns
ret
cmpsl
push
xor
xchg
cmpsl
adc
xor
insl
lret
fidivrl
or
mov
arpl
shld
cmc
xchg
fdivr
aas
sub
xlat
iret
mov
repnz
xchg
push
mov
mov
mov
adc
cld
inc
or
jae
jns
push
dec
xor
mov
fstpl
lds
push
sub
sbb
push
xlat
and
cmc
adc
loope
pushf
push
adc
in
test
mov
fldt
ds
ja
lods
test
ja
aad
adc
jbe
mov
fiadds
adc
or
or
nop
cmp
pop
loop
or
xor
push
mov
mov
ret
jle
in
xor
lret
insl
add
test
mov
je
cmp
jle
sub
test
ret
adc
sbb
and
pop
shrl
out
std
jns
cmc
fwait
rorb
cwtl
in
aas
jae
aam
repnz
adc
push
dec
mov
lcall
int
pop
fldcw
push
push
xchg
pop
dec
sub
push
adc
es
jge
iret
jno
popf
or
orb
push
leave
sub
test
sarl
cmp
popf
sub
add
cmp
test
popf
mov
and
jne
dec
mov
and
lcall
jne
lods
cmpsl
fimuls
nop
and
jns
inc
adc
call
xchg
jnp
dec
lcall
in
int
adc
jg
jl
jmp
stc
stos
sbb
pusha
pop
pusha
jge
cltd
xchg
cmp
adc
in
xchg
push
repnz
mov
push
mov
fldt
mov
adc
movsl
bound
paddusw
inc
xchg
movsb
and
pop
incb
ficomps
jmp
jmp
inc
push
inc
loopne
test
sahf
popf
ret
mov
cwtl
and
outsb
cli
cwtl
jnp
pop
xchg
or
data16
cmpb
inc
mov
fdivs
or
call
cmp
mov
mov
cmpsb
add
push
adc
jo
mov
pop
outsb
fmulp
test
xchg
sti
lock
jg
dec
out
cltd
ss
ds
sarb
lods
into
nop
xor
add
lcall
jbe
dec
mov
pinsrw
mov
aaa
pop
outsb
repz
cmpsl
enter
pop
inc
pop
or
dec
fs
test
lods
inc
iret
iret
mov
add
dec
sbb
xor
and
mov
ja
das
add
into
xor
loope
test
mov
ret
out
dec
adc
sti
xlat
adc
inc
in
loopne
hlt
sub
xchg
sub
out
ror
xchg
or
adc
or
xor
lcall
cmp
nop
dec
mov
xchg
or
and
xor
or
pop
fwait
sbb
hlt
push
mov
jle
adc
sub
fucomi
inc
ror
adc
jns
push
or
vcvttps2dq
lods
mov
in
loop
xorb
inc
fimull
sub
inc
into
sbb
xchg
out
cmp
gs
loop
xchg
arpl
or
sub
xor
jge
divb
or
arpl
xlat
loop
ds
sbb
xor
sbb
mov
or
das
mov
add
push
jno
test
insb
lods
cs
dec
js
adc
into
hlt
loope
adc
xor
adc
idiv
cmp
mov
inc
out
mov
jge
jne
jl
test
jno
or
cmpsl
mov
xlat
insb
popa
sarb
gs
divl
xchg
inc
icebp
or
mov
xchg
ja
add
lods
mov
lret
int
push
pusha
mov
add
dec
cmpsb
dec
inc
std
add
sub
popa
les
mov
repnz
pusha
or
dec
jbe
jg
or
ret
mov
imul
pop
push
cmpsb
push
xor
in
and
fsubrs
stc
repnz
ret
addr16
sahf
iret
stc
mov
lcall
enterw
and
sarl
testl
out
or
hlt
xchg
movsl
popa
lret
icebp
leave
dec
cld
xchg
lret
inc
mov
sbb
fdivrl
push
decl
jmp
jge
pop
mov
adc
and
fisttpll
sti
sbb
ljmp
pop
xchg
sub
xor
outsb
call
inc
dec
mov
cli
adc
divl
add
mov
push
dec
pushf
mov
mov
gs
xchg
xchg
dec
lret
fbstp
or
xchg
jmp
xchg
stos
dec
xor
nop
or
lock
jmp
lds
std
jbe
push
xlat
push
or
addr16
pusha
push
jle
jg
testl
push
loope
rcrb
push
mov
daa
xor
mov
sub
fcmovnb
jp
data16
pusha
int3
aad
les
hlt
cmpb
ficompl
ss
xor
mov
ss
lods
adc
js
imul
icebp
test
sti
dec
jno
add
lock
jns
outsb
pop
pop
xchg
in
scas
outsl
add
sbb
cmp
pop
cmc
sub
or
int
and
push
insl
in
cs
inc
adc
pop
xchg
cld
pop
jecxz
add
mov
xchg
dec
add
mov
cli
fs
std
test
aad
loop
gs
into
xor
or
divb
dec
cltd
jbe
cmp
jbe
movsl
xchg
push
push
out
ja
xchg
enter
jae
stc
imul
pop
jle
stos
jge
mov
push
dec
stos
inc
into
fcmovbe
pop
in
fcompl
negb
dec
lahf
push
call
lea
js
js
int3
scas
roll
out
ljmp
out
mov
fbstp
shrb
sub
int
fbstp
mov
imul
fcoms
xchg
loop
and
sub
mov
lcall
outsl
add
and
ja
das
arpl
jp
and
jne
dec
sub
in
cmp
shrb
repz
repnz
push
inc
cmc
mov
xor
adc
cmpsl
xlat
mov
xchg
aas
and
aas
ficoms
aaa
dec
pop
jno
and
and
jmp
ss
shl
cmpsl
mov
dec
xchg
icebp
xchg
push
xor
daa
insb
and
dec
xchg
adcb
inc
out
push
mov
mov
mov
sahf
rcl
in
cld
or
test
dec
dec
sbb
test
pushl
out
out
pop
dec
add
notl
into
mov
in
pop
mov
pop
xchg
repz
pop
cmp
fdivrl
das
jecxz
sub
into
cmpl
add
loope
sbb
bound
dec
pop
pop
in
lds
loop
movsb
mov
add
outsl
pop
pop
popa
mov
pop
cmp
test
mov
xchg
jno
into
inc
pop
sub
push
cmc
dec
lcall
call
mov
mov
loopne
out
aam
and
xlat
inc
aas
js
les
mov
add
or
pop
cmpsb
outsb
pop
push
push
and
fs
loope
jle
mov
xchg
scas
ret
xchg
xor
lock
mov
or
adc
mov
lea
rcrl
mov
sahf
mov
jbe
repz
xchg
add
pop
cld
scas
inc
fsubs
out
or
push
rclb
inc
mov
pop
daa
pop
and
fmuls
inc
sbb
jnp
pop
sahf
add
loop
mov
lea
jbe
cmp
stos
int
xor
pop
outsl
inc
mov
mov
pop
dec
mov
push
and
pop
data16
dec
inc
dec
sbb
inc
int3
cld
sbb
repz
fstp
xor
adc
jecxz
push
xchg
add
xchg
mov
cmp
or
repnz
sub
scas
call
dec
popa
mov
mov
fstps
and
js
icebp
gs
jae
aaa
daa
lcall
out
push
xchg
mov
loopne
mov
sbb
add
adc
int3
pop
test
dec
sub
mov
insl
sti
imul
shrb
sbb
or
adc
jbe
pop
sbb
adc
sub
pop
add
mov
pop
push
in
push
sar
bound
push
aam
and
cs
ret
inc
bound
ds
int
and
mov
mov
jp
sub
xchg
out
mov
stos
cwtl
insl
imul
pop
push
sbb
arpl
ds
jmp
mov
add
inc
data16
fnsetpm(287
and
addr16
lock
pop
movsb
mov
das
mov
icebp
in
xchg
fadd
ror
and
mov
pop
sbb
mov
fildl
adc
mov
je
pop
das
scas
add
add
jne
fildl
or
xor
and
pop
mov
in
or
loop,pn
dec
js
jo
jnp
mov
divb
jecxz
int
leave
movsb
jmp
add
push
ja
fsts
xchg
jge
mov
mov
lods
insb
push
jmp
push
shr
mov
adc
test
pop
push
outsb
mov
push
std
mov
fdivl
mov
dec
mov
aad
cmc
in
xchg
mov
adc
pop
leave
and
dec
push
inc
ljmp
testb
push
in
mov
mov
loopne
loopne
jmp
stos
sbb
sbb
push
inc
aaa
andb
adc
fistps
jl
push
ret
pusha
push
push
mov
hlt
and
les
enter
sti
repnz
adc
mov
pop
and
scas
cmp
cli
test
fisubs
mov
add
addb
out
or
clc
flds
stos
inc
or
aad
repnz
imul
dec
hlt
inc
scas
int
push
adc
xor
mov
jp
pop
popa
stos
daa
xchg
mov
test
push
leave
fnop
xchg
loop
fwait
jb
pop
std
inc
filds
imul
je
rorb
cld
add
out
push
addr16
jl
mov
mov
and
jl
stos
insl
pop
leave
cmpsb
adc
clc
push
mov
loopne
out
mov
rcrl
mov
inc
pop
sbb
imul
jns
sbb
xchg
cmp
cs
ret
loop
nopl
mov
mull
xlat
scas
loop
test
fiadds
dec
shll
in
aaa
lcall
push
bound
pop
or
pop
sti
imul
xchg
enter
call
lods
jmp
sub
jno
xor
xor
mov
mov
pop
pop
cmc
into
push
les
pop
insl
mov
imul
xchg
xchg
std
fildll
cmp
gs
roll
adc
sbb
dec
sub
in
stos
outsb
insl
aaa
sbb
xor
stos
ljmp
push
mov
arpl
add
les
xor
jp
movsl
cwtl
xlat
lret
xchg
cmp
ret
jle
popf
stc
xchg
sub
loopne
mov
pop
fcomps
addl
sbb
ds
cmc
lahf
mov
insb
or
sub
pop
push
ret
adc
add
aam
sbb
push
inc
insl
test
adc
pop
js
mov
add
fucomip
push
dec
push
sarl
sub
push
jae
inc
ja
mov
jg
pop
int
push
jno
call
inc
mov
enter
fists
xchg
lea
mov
mov
gs
decb
addr16
lds
pusha
imul
hlt
hlt
push
jmp
fmul
mov
inc
lahf
mov
push
or
test
andl
mov
fistps
xchg
cli
add
jle
xchg
add
out
fucomip
or
test
cmp
test
cs
cmp
pop
jo
xchg
xlat
add
or
test
pop
outsb
adc
daa
ds
gs
mov
push
imulb
inc
adc
icebp
test
lcall
je
call
in
mov
fsub
or
outsl
jno
rorb
sub
dec
add
outsb
push
gs
mov
pop
pop
jae
or
xor
ficompl
adc
lds
arpl
push
cmpsb
scas
mov
pop
testl
xchg
mov
pop
aam
int3
mov
mov
std
mov
fstpl
sahf
dec
in
adcl
push
fstpt
int3
int3
jo
mov
and
stos
mov
xchg
inc
scas
insl
fildl
movsb
std
cmp
xchg
ja
sbb
test
loopne
lds
and
and
pusha
out
or
xchg
rolb
fwait
mov
jge
outsb
sub
leave
sub
or
cs
insb
js
out
mov
nop
dec
lahf
push
and
add
pusha
pop
lret
cltd
xor
adc
mov
fdivrs
or
mov
push
test
shll
jae
and
sub
pop
popf
pop
add
cmp
sbb
add
sub
pop
mov
sub
or
sub
leave
pop
and
dec
cmp
rorl
test
test
mov
add
pop
sub
in
loopne
aaa
and
inc
mov
das
ljmp
popa
push
mov
mov
subl
fbstp
cmp
add
stos
add
scas
fmuls
jo
fucomip
enter
lahf
inc
test
push
and
cwtl
jne
cmp
pushf
fidivrl
sbb
cs
xchg
add
jno
imulb
sbb
jb
jmp
add
inc
add
add
lret
and
lret
js
loop
sahf
sti
sqrtps
stos
mov
dec
mov
mov
jp
xor
in
mov
xchg
stc
repnz
clc
push
stos
mov
cs
push
lds
lods
xor
cld
std
xchg
jb
mov
sub
mov
jle
repnz
push
adc
pop
mov
fsubs
out
pop
lret
inc
ret
nop
and
daa
mov
xchg
mov
sbb
or
cs
pop
out
jb
ficompl
jmp
in
insl
push
subb
mov
sub
addr16
call
inc
fs
and
xchg
adc
cmc
push
dec
sub
mov
es
mov
out
adc
jno
push
dec
popf
mov
and
push
push
mov
aad
lret
pop
pop
imul
insb
cmpsb
loopne
call
jge
ret
xor
out
xor
loopne
popa
mov
outsb
icebp
popa
jae
inc
sbbb
cwtl
inc
les
mov
je
pop
lret
flds
js
lds
enter
lcall
ret
push
xchg
mov
push
add
test
dec
push
and
les
test
lret
push
dec
adc
js
in
jns
cmp
push
inc
sbb
add
sub
inc
loope
xchg
pusha
out
imulb
in
cmp
mov
pop
adc
sbb
out
and
je
fsubl
or
dec
mov
jb
hlt
leave
fildl
mov
repnz
loope
sub
push
mov
sbb
jne,pt
in
leave
add
or
mov
bound
pusha
xor
int3
cltd
adc
rolb
lcall
jl
sub
loopne
aad
mov
je
je
aam
adc
cmpb
or
into
cmp
and
dec
out
and
xor
mov
push
imul
mov
repz
lret
sbb
jae
dec
ss
inc
sub
jbe
push
je
jmp
movsb
repnz
xor
dec
push
iret
push
imul
xchg
cmpsl
mov
dec
mov
movsl
out
fsts
lds
ror
lcall
adc
cmp
or
xchg
mov
ror
cmp
bound
push
sbb
mov
fdivrp
loopne
lahf
pop
sub
sbb
mov
xor
stos
je
lret
xor
cli
dec
lock
pop
test
aad
add
popa
outsl
xor
jb
inc
imulb
dec
clc
scas
mov
and
pop
stos
cmp
cmc
cmp
sub
filds
int
hlt
mov
mov
bound
dec
bound
jo
into
cmp
outsb
ja
xchg
and
nop
push
inc
das
mov
and
idivb
cmc
outsb
outsl
xchg
repz
sbb
or
hlt
xchg
lods
xor
in
enter
dec
test
sub
xor
sbb
test
lods
xchg
mov
and
xor
pop
or
xor
iret
mov
sbb
mov
xor
out
pop
cld
pop
ja
lcall
aam
adc
mov
cmp
sbb
mov
pop
movsl
xlat
pop
out
iret
cwtl
dec
out
arpl
out
cs
pusha
push
and
movsb
or
daa
jle
addr16
hlt
jl
hlt
pop
pop
mov
pusha
sbb
dec
push
add
lcall
mov
lds
int3
dec
test
dec
in
or
sub
dec
xchg
incb
aam
sbb
mov
adc
add
in
in
je
adc
jg
lcall
outsb
loop
out
out
mov
das
inc
lea
call
mov
jge
stos
sbb
xor
pop
test
jns
jae
lcall
pop
mov
js
popa
xchg
inc
pop
push
hlt
movzbl
arpl
dec
dec
jp
cmpb
xchg
scas
fs
push
xchg
sub
out
mov
cltd
mov
jle
cs
push
mov
bound
or
negb
fs
push
mov
es
aas
fiaddl
sbb
out
insb
test
push
loope
pop
ja
loopne
cli
mov
dec
pop
sbb
pushl
pop
mov
or
sarb
add
jg
cmpsb
sbb
das
dec
loop
and
xchg
icebp
xchg
xor
adcb
dec
dec
pushf
fs
jns
dec
inc
jp
sub
mov
or
jg
rcr
sub
out
inc
dec
in
add
dec
adc
lcall
inc
xchg
jle
int3
push
pop
pop
pop
aam
mulb
xchg
in
or
and
aad
hlt
imul
or
jae
add
in
dec
aas
scas
loop
data16
fwait
sub
test
inc
mull
lcall
xor
mov
cmp
test
lea
ds
mov
mov
lret
add
cmp
shrb
pop
pminsw
out
cmp
push
call
std
cwtl
adc
bound
fmuls
jbe
push
mov
mov
xor
andl
push
dec
inc
dec
sbb
cmp
enter
pop
xchg
dec
sub
jge
adc
push
inc
pop
loop
repz
sbb
push
je
popa
mov
xlat
cmpsb
jg
sbb
xchg
fldt
sbb
cmp
orl
cmpsb
call
push
cwtl
mov
cli
out
movsl
fnstcw
sbb
fsts
fwait
mov
scas
add
aam
xor
out
cmp
sahf
cmp
notb
xor
jmp
jo
mov
mov
dec
dec
repz
test
xchg
mov
mov
push
inc
jle
dec
mov
dec
push
inc
mov
sub
aas
das
test
push
fs
mov
sbb
inc
xchg
mov
outsb
shll
dec
fwait
stos
repnz
in
pop
add
xchg
ss
pop
aaa
mov
call
mov
push
outsl
xor
sub
xchg
cmp
jmp
iret
jnp
mov
lret
cltd
in
and
dec
jmp
pop
xor
mov
mov
mov
jecxz
xor
sbb
hlt
std
negb
lods
and
adc
jge
cmc
pop
ret
or
adc
sub
repnz
push
imul
fs
push
lods
sub
pop
pop
movsl
inc
dec
push
outsl
rcr
adc
inc
push
push
dec
lods
inc
rolb
enter
cmp
xor
clc
insb
in
push
das
sub
xchg
ret
mov
in
lcall
jbe
xor
sbb
lods
mov
mov
fisubl
ret
xchg
cmp
popf
adc
lock
xor
cli
and
mov
dec
lret
stc
push
pop
xchg
jmp
lods
dec
cmp
shlb
fnstcw
das
cmp
aas
cmpsl
mov
xchg
repz
cs
sub
daa
pushf
lret
dec
cwtl
scas
mov
pop
arpl
out
mov
mov
cmp
cld
cltd
sub
outsb
mov
xchg
and
ret
repnz
rcrl
sub
stos
sub
loope
sub
jno
rorb
sub
xchg
movsb
fisubl
fsubl
push
sbb
mov
mov
sar
int
imul
adc
popa
sbb
js
sub
pop
push
xor
lods
xchg
mov
jge
jg
jnp
or
jbe
arpl
out
adc
fsubs
fcompl
inc
push
jp
mov
pop
ja
hlt
jne
sbb
jecxz
mov
cmp
pop
jbe
sahf
ljmp
in
lods
add
shll
jae
mov
mov
add
popf
out
gs
mov
adc
shlb
in
ja
cltd
jle
aaa
stos
ret
cmp
sbb
pop
jo
test
sbb
aad
ss
or
or
repnz
movsb
aas
and
mov
ficoms
movsb
std
jae
mov
xor
jne
lds
jecxz
data16
mulb
xor
push
lock
lret
gs
mov
in
movsb
or
pop
leave
mov
dec
aaa
fs
inc
in
push
fistl
dec
pop
xchg
mov
cmpsb
cmc
inc
daa
mov
aam
sbb
inc
mov
fcmovu
xchg
sub
inc
jb
jbe
aaa
and
test
aad
pop
repnz
pop
cmp
adc
cmp
cmpsb
add
xor
cmove
out
fistl
pop
inc
pop
sub
dec
aam
sbb
mov
mov
dec
lret
jmp
leave
inc
int
fldcw
add
xor
mov
jno
add
mov
in
cmp
daa
and
cmp
test
add
xor
test
dec
div
addr16
pop
mov
and
fldenv
pop
inc
ljmp
lea
fdivl
cld
int
imulb
call
test
sbb
aam
stos
daa
mov
adc
sbb
sub
rcrb
arpl
sub
pop
mov
cmp
stc
jo
nop
mov
and
ffreep
iret
lods
out
jge
xchg
test
or
enter
xchg
pop
xorb
dec
push
cmp
frstor
jmp
sbb
fwait
dec
cmpsl
mov
shrb
aas
ljmp
pop
out
out
loop
jle
inc
outsb
add
outsb
in
and
lods
pop
add
and
ror
adc
sahf
aad
outsb
mov
jns
fwait
ds
inc
ret
lcall
pop
and
inc
rcrl
test
fdivrl
mov
pop
push
icebp
mov
jmp
leave
in
mov
test
out
push
and
cmpsb
or
mov
fidivs
and
aas
and
cld
test
lods
pop
jnp
lds
ret
fwait
cmp
xchg
xchg
push
into
adc
inc
dec
or
adc
sbb
push
cmp
popa
stc
xor
or
xchg
bnd
push
adc
push
fwait
ret
or
in
lods
sub
leave
pusha
ds
repnz
inc
xor
insl
and
je
mov
dec
push
add
pusha
mov
pop
sbb
shr
out
jmp
dec
pushf
sbb
mov
add
inc
adc
jmp
inc
jbe
pop
xchg
push
ja
xlat
inc
popf
hlt
sub
mov
mov
inc
mov
sub
or
lods
sahf
int
mov
movsb
movsb
in
jnp
or
adc
mov
pop
sub
ret
bound
xchg
out
or
mov
jge
in
sub
imul
movsl
cmc
frstor
negl
rol
xor
out
push
and
xor
call
jne
xor
jl
push
jb
fcomps
mov
push
and
jp
jne
xchg
ljmp
xchg
shll
jg
inc
mov
sbb
je
mov
lahf
mov
loopne
add
lods
pushf
cmc
dec
iret
xchg
mov
inc
fwait
cmpsl
jae
aam
ja
add
mov
lcall
ljmp
cmpsb
out
lret
cmp
or
dec
aam
lds
subl
orl
xor
lret
mov
sbb
bound
js
cltd
sahf
sbbl
stos
jmp
shll
lcall
lods
in
sbb
mov
adc
test
inc
or
push
stc
mov
xchg
jns
add
fwait
sbb
imulb
pop
ds
mov
inc
push
mov
jbe
insb
adc
and
ja
cmp
lods
pop
les
add
inc
into
xchg
gs
out
inc
xchg
jp
dec
movsb
fimull
inc
jecxz
or
mov
out
imul
pusha
jmp
ret
fidivs
pop
jne
jge
jns
mov
sub
movsl
lahf
test
cmpsl
add
mov
or
mov
out
xchg
jecxz
stc
mov
inc
sub
xor
std
filds
fs
rorb
xor
cmp
fprem
aam
jnp
sub
xor
aas
es
aas
xor
hlt
aaa
push
rol
mov
pushf
xor
mov
mov
sbb
rsm
inc
sbb
loop
add
mov
and
sbb
sub
call
cmpsl
call
into
or
icebp
shrl
inc
test
pop
jp
pop
sbb
int
or
es
mov
out
or
cmpsl
and
ret
aaa
imul
push
jl
daa
push
jb
fs
cmc
or
and
push
lods
ss
cmp
xorl
mov
sbb
ja
and
push
imul
test
out
in
ljmp
fwait
arpl
push
stc
das
fdivrs
dec
repz
jmp
mov
push
in
jle
out
sbb
jg
xor
sub
jb
pushf
dec
jb
xchg
pushl
inc
jbe
jp
mov
or
wbinvd
xchg
sbb
iret
cmp
mov
je
imul
fimull
dec
cli
push
mov
lahf
mov
int3
and
xchg
add
shrl
scas
out
ret
adc
jl
addr16
cmp
pushw
pop
outsl
xor
repz
xchg
daa
dec
add
add
repz
xor
pop
xchg
mov
dec
popa
insl
adc
mov
dec
lock
bound
mov
pushf
divl
adc
xor
test
pop
ss
cmp
xorl
inc
es
xchg
out
enter
mov
pop
xchg
lock
jmp
inc
cmpsb
pop
mov
push
lahf
cmp
into
std
cmp
mov
movsl
mov
pop
cmp
pop
daa
in
or
adc
test
out
testb
or
mov
sub
adc
movsb
lcall
dec
mov
inc
push
lock
fs
mov
inc
outsb
out
iret
mov
loopne
cmpsl
xor
dec
rorb
push
test
shll
jmp
and
fimull
je
and
jp
dec
cmp
lahf
mov
cs
gs
outsl
dec
into
stc
ljmp
and
in
iret
push
cmovp
sub
arpl
cmp
sub
and
ret
sbb
xor
vrcpss
lret
mov
cmpsb
mov
stc
into
jge
in
cmpsb
inc
and
jnp
sub
pop
negl
dec
mov
ret
push
xadd
pop
int3
test
and
adc
mov
rorb
mov
mov
cmp
mov
push
mov
outsb
cli
dec
adc
push
les
int3
pop
scas
xchg
xor
ror
lcall
push
lock
pop
loop
jns
xor
jge
mov
cmp
outsb
or
add
mov
sti
dec
mov
sbb
mov
pushf
push
dec
scas
arpl
cmpsl
mov
and
jae
cwtl
test
or
test
cmc
cmp
push
fisubrl
mov
cmp
add
aad
mov
loop
jecxz
adcl
pop
loope
mov
sub
int3
scas
pop
mov
jg
scas
adc
call
inc
pop
ffree
sbb
mov
pop
cmp
out
xlat
lods
ds
dec
ja
pop
dec
bound
adc
gs
cmp
mov
popf
nop
cmpsb
in
push
jg
push
jg
andl
sub
rcll
mov
mov
cmc
aad
ds
xor
sarb
aad
mov
push
mov
aas
das
mov
ror
ds
mov
in
sub
mov
leave
cltd
mov
in
data16
pop
or
scas
xchg
mov
jge
inc
test
sbbb
fsubrs
mov
test
fcomps
das
cmpsb
cmp
outsb
sub
in
test
add
and
sbb
pop
out
jo
lcall
sub
cmp
aam
cs
loope
fnstcw
fstpl
mov
mov
repnz
add
mov
dec
clc
inc
insb
in
and
add
cmp
fidivs
and
std
shl
sub
arpl
int
inc
iret
arpl
stos
out
sub
shll
dec
gs
inc
out
mov
xchg
fisttpl
jno
mov
push
fwait
movsl
push
idivl
cmpsl
pop
std
xchg
fstpl
xchg
setae
int
sbb
lret
icebp
outsl
jle
stos
fiadds
mov
lock
jge
jb
mov
or
test
cs
add
das
daa
ds
xchg
loope
mov
mov
sub
aam
xor
mov
jl
test
push
out
jo
out
cmp
push
insb
and
inc
push
in
or
mov
aam
sti
add
xchg
adc
testl
mov
pop
cs
scas
pop
not
data16
mov
push
push
cmp
and
aad
push
shll
pop
cld
sub
cmp
sbb
pop
je
ljmp
cltd
scas
dec
aaa
cwtl
mov
sti
jmp
insb
stos
imul
push
test
sahf
sub
int
cmpsl
int3
test
pop
std
ret
subl
lock
mov
and
inc
rcrl
jo
pop
loop
xchg
stos
jno
ret
into
push
mov
sub
gs
push
cs
pop
addr16
xor
sti
cli
adcl
shll
in
lea
and
sub
adc
cmp
into
cmp
fisubl
ljmp
cwtl
stos
mov
icebp
pushf
push
pop
sahf
filds
and
lock
clc
sub
ret
sub
pop
sarl
mov
cmp
push
repz
inc
sub
mov
sub
xchg
add
into
ret
ss
mov
pop
ficoml
push
mov
fstpl
jg
cmp
jl
adc
roll
push
aad
nop
test
aam
push
dec
inc
add
pop
sub
mov
ja
lods
mov
aam
repnz
push
sbbb
cmp
xlat
inc
dec
xchg
adc
pop
jg
jbe
lcall
mov
mov
push
stos
repnz
gs
test
pop
mov
pushf
and
push
jnp
jl
les
ror
add
lret
mov
testb
scas
pop
loopne
jecxz
iret
fsub
loopne
enter
xchg
and
mov
adc
arpl
insb
mov
cmpsl
lret
inc
mov
mov
fbstp
addr16
aad
dec
jmp
add
pop
iret
push
shll
mov
repz
cld
adc
repz
pop
lds
shlb
xchg
clc
int3
add
outsb
call
fisttps
aas
stos
mov
popf
mov
xchg
mov
aad
out
push
cmpsl
mov
aam
inc
pop
clc
sti
xchg
rcl
clts
test
enter
shrb
hlt
std
pop
clc
stc
lret
stos
push
dec
outsb
scas
xorb
add
sbb
pop
adc
js
xchg
push
cmp
stos
add
mov
cmp
cmp
ja
mov
push
add
sub
mov
fwait
pop
icebp
add
adc
mov
divb
push
cmc
mov
roll
je
and
pushf
fs
repnz
dec
jg
cmpsl
jle
fstps
add
pop
ficoms
sbb
mov
data16
push
in
lret
push
push
mov
pusha
arpl
pop
push
insb
in
add
jbe,pn
movsb
add
xchg
push
xor
pop
or
push
fisttps
mov
xchg
add
mov
aaa
push
fwait
loope
push
and
fs
and
idivl
sbb
jbe
in
cli
shl
imul
add
ljmp
ret
pop
rorb
icebp
enter
aas
int
js
jle
loopne
and
xor
jb
mov
push
sub
add
iret
repz
jb
je
inc
insl
cli
test
rcl
outsb
pop
inc
stos
les
cmp
xor
xor
push
xchg
cmpsl
scas
in
push
push
mov
cmpsb
outsl
notb
out
add
cwtl
cmp
jg
ret
dec
fiaddl
lods
loope
push
inc
xor
rol
out
repz
sbb
sub
movsb
cmp
cmp
fcmovne
jnp
loope
mov
sub
jnp
test
gs
movsb
mov
jns
les
jmp
adc
jle
push
xchg
mov
pop
mov
cli
push
movsb
mov
jl
das
cmc
mov
scas
mov
jns
or
insl
iret
jecxz
inc
leave
push
jns
pop
sti
adc
daa
lods
push
aas
dec
ss
and
and
cmp
cmp
and
popl
jns
xor
xchg
mov
jns
jmp
popa
cmpsl
in
in
xor
cld
jmp
inc
mov
jne
lock
int
xor
popa
cmp
rclb
xchg
or
xchg
scas
mov
adc
pop
arpl
pop
repnz
mov
push
rcrb
xlat
nop
cmp
stos
inc
sub
mov
mov
mov
js
into
nop
dec
adc
jno
mov
pop
imul
aad
add
mov
adc
scas
jne
mov
pop
jne
sti
jae
sbb
loopne
mov
push
pop
mov
mov
lcall
fmul
add
sti
dec
fildll
adc
mov
ret
je
push
pop
xor
lods
cmpb
jg
inc
in
icebp
mov
aaa
aas
int
lret
inc
loopne
xchg
and
imul
inc
jmp
lods
inc
pop
push
je
ja
pop
push
push
jp
mov
adc
xchg
xor
arpl
pop
mov
jno
sbb
pop
dec
subb
jo
or
neg
pop
es
jecxz
pop
mov
inc
sub
xchg
fcomps
inc
mov
jmp
fdivl
orl
pop
loop
fiaddl
loope
jmp
repz
pusha
aam
or
jge
out
popa
or
xchg
jg
cmp
sbb
sbb
insl
mov
cmp
sbb
scas
cmc
mov
fistpl
mov
pop
popf
sahf
testl
mov
inc
test
in
ljmp
stc
in
inc
xor
je
mov
out
mov
shrb
in
in
sbb
je
aaa
or
push
sbb
ljmp
and
call
cmc
out
stos
jle
mov
xor
xchg
movsb
push
loop
jb
pop
pop
repnz
repnz
jl
ret
adc
jg
jbe
pushf
dec
jmp
lret
fcmovu
data16
int3
xor
movsb
imul
push
and
xor
daa
add
push
sub
jno
dec
push
lret
shr
dec
mov
loop
fistl
or
jmp
push
lock
pop
dec
and
mov
fnstenv
inc
dec
rolb
push
sbb
filds
sbb
cmpsb
jnp
fldcw
sub
jecxz
cmp
in
jbe
xchg
cs
ror
in
es
fnstcw
int
or
sub
mov
popf
daa
mov
pusha
cmp
dec
jae
orb
out
ret
jns
imul
jo
mov
and
fisubrl
call
pop
inc
push
ds
xorb
mov
dec
loopne
jmp
xchg
cmp
push
shlb
aam
dec
mov
js
adc
fucomi
es
cld
inc
lcall
xor
xor
pusha
cld
and
andb
jmp
dec
dec
fisttpl
into
dec
jge
loop
sub
sbb
jecxz
or
jp
or
xor
stc
pop
jecxz
cmp
lcall
je
inc
xchg
cmp
nop
in
in
inc
or
inc
xor
test
sub
das
mov
test
mov
sub
xor
xorb
mov
cmc
call
or
mov
into
jp
xchg
pop
inc
sub
pop
jae
aaa
jle
cmp
push
ds
loop
mov
mov
aam
aas
xchg
add
es
add
dec
fstl
mov
stc
in
inc
cmp
int3
gs
cmp
push
clc
mov
int
ja
and
pop
scas
adc
dec
or
ud1
jl
bound
jo
std
lea
or
jo
in
out
clc
fildl
push
mov
cs
jp
mov
lds
mov
mov
daa
push
fcmovnb
and
bound
inc
fmull
ja
je
xchg
push
rcrl
mov
or
popf
loope
mov
dec
sti
fimuls
or
cmp
sub
test
ljmp
fwait
lcall
jne
js
mov
mov
dec
mov
ja
outsl
out
imul
push
lea
add
inc
pop
xlat
repz
iret
loope
nop
hlt
repnz
add
cld
fstpt
lcall
enter
aad
xor
fnsave
movsb
pop
scas
add
jnp
nopl
and
sub
lods
in
cld
inc
xchg
subl
fdivrl
imul
cmp
fmul
int
data16
or
lods
test
mov
negb
fsubrs
lcall
icebp
movsl
mov
outsb
or
jae
xchg
jmp
cmp
imul
shlb
out
lahf
jb
sbb
add
jl
or
test
popa
scas
inc
gs
int
dec
pushf
dec
cmovbe
pushl
inc
fiaddl
sub
test
pop
shrl
jo
minps
jecxz
icebp
mov
mov
out
loopne
sub
jmp
lret
sahf
jnp
repz
jmp
scas
push
nop
xor
mov
add
js
jb
nop
nop
mov
sub
inc
scas
loopne
cltd
or
or
pushf
adc
loopne
mov
or
not
sub
lea
iret
inc
push
mov
call
nop
loopne
pop
mov
xchg
jo
dec
and
adcb
jecxz
add
inc
cmc
cmpb
mov
aaa
sbb
daa
ficoms
mov
daa
mov
push
clc
dec
sbb
movl
setb
movsb
jmp
xchg
push
or
mov
or
mov
out
fucomp
aam
dec
sahf
and
cmc
mov
and
jmp
cs
imul
dec
or
and
jbe
movsb
hlt
cwtl
dec
std
sub
in
sbb
mov
inc
xchg
jnp
rorl
js
push
and
sbb
int3
aad
sahf
pop
pop
inc
movsl
imul
mov
pop
stos
pop
test
jmp
out
loope
aam
adc
test
inc
aad
sti
ds
dec
mov
adc
pusha
scas
mov
adc
testl
push
push
aas
xorl
push
pop
pop
testb
cli
stos
enter
push
mov
and
mov
movsb
dec
mov
jbe
iret
dec
repz
sub
call
dec
mov
xor
inc
iret
adc
in
inc
and
push
xchg
sbb
add
or
mov
rcr
xchg
mov
mov
and
pop
push
mov
popf
mov
add
jno
add
sub
adcb
pop
lcall
mov
repz
and
aas
scas
rcrl
sarl
imul
fs
jge
pop
jae
fistpl
mov
je
insl
shlb
pushl
orl
adc
aad
sbb
add
aaa
movsb
int
lcall
lods
jmp
loope
pop
mov
sbb
pop
jns
loopne
push
pop
or
and
insb
popf
ss
mov
sub
in
inc
outsl
add
cwtl
or
sbb
xchg
rolb
shll
mov
push
ljmp
push
call
adc
bound
push
pop
out
loop
loop
xor
inc
rcrl
movsl
push
adc
dec
sbb
mov
mov
in
sub
jle
testl
mov
adc
xchg
push
ret
dec
out
jbe
mov
shl
dec
push
sbb
cmpsl
stc
mov
push
mov
cmp
addl
jnp
bndstx
ss
and
aam
cmp
pop
cmp
mov
jp
xlat
push
mov
in
sub
mov
je
sbb
inc
imul
mov
mov
sub
sub
rcrb
xchg
pop
aaa
dec
pop
aam
sbb
leave
xchg
xor
mov
aad
aas
sub
sub
adc
out
data16
mov
pop
dec
pop
add
mov
movsb
mov
clc
adc
test
inc
sarb
popf
lahf
push
inc
sub
or
adc
mov
aad
sub
pop
xchg
cmpsb
popa
sub
scas
jg
jnp
and
clc
sub
mov
cli
mov
daa
pop
sti
add
popf
push
or
test
in
mov
cmc
pop
jmp
add
push
arpl
mov
jp
or
icebp
jg
mov
cltd
xorps
insb
mov
loope
lds
cmp
and
or
test
push
lds
dec
push
dec
movsb
test
push
inc
fdivl
or
je
mov
in
sub
mov
sub
pop
aaa
addr16
push
mov
pop
cli
pop
mov
cmp
loop
mov
fdivs
sbb
xor
ja
mov
lahf
into
sbb
repz
lods
in
inc
loopne
jnp
in
jb
mov
inc
pop
push
xor
pop
push
arpl
inc
cmp
stos
mov
mov
xor
xor
pop
mov
dec
mov
shrl
in
daa
or
les
fisubrs
loop
idivb
jae
mov
test
push
push
cmc
test
aaa
push
cmp
xchg
pop
stos
cmp
cmp
roll
shl
or
imul
pop
dec
xchg
mov
mov
xchg
xor
outsb
cld
pop
inc
and
es
adc
fisubrs
sbb
cmc
insl
or
fistps
sub
pushl
ds
sbb
pusha
or
push
mov
enter
gs
cs
and
jno,pn
sub
mov
movb
flds
ror
sub
outsb
out
shrb
jp
test
inc
int
ret
mov
imul
mov
jp
mov
dec
adc
movsb
ret
cmp
divl
inc
sub
add
out
pop
inc
mov
mov
jle
inc
mov
adc
pop
jg
test
cmc
xchg
xor
cmpb
rorl
ror
inc
outsl
xchg
and
push
pop
push
pop
add
sbb
mov
cmp
xor
pop
loopne
xchg
test
add
xchg
shl
dec
xchg
sbb
ds
xor
adc
in
lods
inc
ja
jmp
into
sub
inc
adc
push
addb
dec
dec
ds
aas
sbb
insl
jg
daa
cs
jle
movsb
and
adc
cld
es
je
pop
cmp
mov
and
adc
jmp
rol
pop
cmp
mov
push
ja
enter
pop
mov
jp
and
js
jb
inc
cmp
push
insb
stc
cmpsb
mov
mov
fdivl
jecxz
negl
mov
imul
das
inc
les
popf
and
iret
gs
call
or
movsl
cli
cmc
inc
cmp
fprem1
dec
mov
lahf
cmp
out
jecxz
xor
sub
jg
dec
in
jg
test
popa
or
call
xchg
mov
je
sub
or
insl
xchg
lods
cmp
lcall
xor
cmpsl
dec
and
ds
add
xchg
rcl
push
aam
lock
xor
pop
shrl
add
iret
jle
ret
jl
pop
add
push
or
cmc
cmpsl
inc
mov
popa
pop
roll
movl
mov
lods
mov
inc
bound
or
mov
jnp
sub
mov
add
jbe
mov
adc
mov
mov
mov
ljmp
jg
sub
adc
lods
jnp
repz
sbb
in
arpl
mov
adc
inc
jecxz
or
xor
inc
mov
cmp
les
or
mov
dec
bound
mov
scas
out
and
rcrb
xchg
cmpsb
repnz
fwait
int3
testl
in
ret
dec
sub
sub
adc
push
shll
inc
lcall
jecxz
cli
cmpsb
js
pop
les
notw
sbb
movsl
pop
pushf
jb
sub
or
out
xchg
mov
aaa
iret
dec
data16
adc
add
sub
sub
shlb
mov
scas
xchg
xor
in
inc
push
sub
xchg
cmc
aaa
dec
mov
push
popa
hlt
mov
je
push
mov
stos
cmpsb
or
jae
test
pop
jne
int3
pop
sti
sub
sub
sti
adc
inc
inc
lea
xor
mull
aad
in
dec
mov
mov
push
mov
icebp
loopne
cmc
cmp
pop
cli
sbb
cwtl
add
jle
and
pop
mov
scas
pop
dec
xchg
push
xchg
add
and
cld
lock
mov
cltd
nop
push
popa
mov
cmpsl
sbb
sahf
inc
mov
imul
mov
into
dec
pop
and
lods
mov
push
mov
sbb
cmp
aaa
loop
rorb
jl
adc
fmull
push
cmp
out
lret
sbb
pop
push
mov
cmp
mov
push
inc
lods
in
das
mov
lods
pushf
adc
push
es
outsb
cs
xchg
dec
repnz
push
or
jns
repnz
jne
jg
sbb
xchg
dec
or
adc
js
aaa
push
lcall
stos
push
pop
push
sbb
aaa
mov
or
dec
xor
in
inc
sub
fadds
fisubrl
cmp
mov
lcall
fucomip
jne
dec
mov
scas
mov
inc
sub
jae
lea
es
xchg
or
in
add
nop
aaa
arpl
inc
divb
pop
cli
push
loope
adc
imul
shl
jnp
sbb
mov
pop
xor
dec
pop
cmp
cmp
jo
lret
fistpl
push
out
push
jnp
rolb
filds
test
lock
xchg
pop
or
pop
popa
dec
mov
xchg
fadds
ljmp
aaa
stc
jmp
addr16
xor
mov
and
xchg
push
and
jbe
lret
aad
xor
mov
sbb
and
test
mov
ljmp
nop
mov
stos
dec
cmpsl
xor
fwait
fs
pop
stos
xlat
jne
lea
enter
mov
jmp
and
mov
xlat
mov
sub
or
adcb
and
jp
icebp
andb
xchg
lds
mov
adc
xor
stc
cli
and
lds
das
sbb
push
arpl
or
inc
mov
dec
mov
jp
dec
xchg
icebp
push
movsb
fdivs
xchg
idivb
and
or
rorb
and
daa
out
xor
loop
cmp
add
push
jnp
repz
xchg
cld
or
cld
loop
sbb
xchg
xchg
iret
arpl
sbb
jp
iret
in
lcall
leave
stos
add
bound
or
dec
dec
mov
sub
sar
insl
movsl
out
mov
ret
jl
cmp
cmp
pop
cmp
sub
test
jno
out
shrl
mov
mov
fdivp
scas
fcoml
adc
mov
sahf
jg
outsl
or
enter
outsb
and
jg
adc
sbb
adc
mov
loopne
out
adc
mov
cmc
mov
bnd
mov
js
nop
inc
les
dec
mov
movsb
or
mov
and
je
xchg
xchg
rorb
mov
in
pop
mov
shlb
inc
cmpsl
mov
nop
mov
xlat
in
pop
mov
cmp
mov
scas
inc
xchg
test
and
rcrb
or
or
cmpsl
movzbl
mov
lahf
pop
les
push
addr16
cwtl
arpl
adc
mov
lea
pushf
das
sti
adc
mov
std
stc
adc
lods
mov
adc
add
mov
dec
push
aas
js
jnp
enter
push
negb
ja
enter
fsts
mov
in
std
pop
shll
mov
mov
pop
push
cmpsb
insb
mov
mov
fnclex
or
pop
adc
dec
mov
stos
movsb
stos
xor
inc
pop
out
lcall
sub
insb
push
xchg
and
repnz
gs
xchg
cs
mov
xor
dec
iret
js
pop
jecxz
arpl
sbb
sub
dec
movsl
inc
addb
cvtps2pi
es
rcrl
adc
bound
fxch
addb
xor
cmp
pushf
std
inc
adc
pop
ja
xchg
mov
jge
imul
testb
cmp
sub
lahf
mov
push
bound
adc
cmp
int
test
icebp
pop
sbb
mov
xchg
sub
xor
mov
push
mov
and
aam
sbb
scas
push
sbbb
mov
jnp
xchg
lock
mov
add
addb
fs
dec
cmp
xor
push
jg
xchg
jle
cltd
pop
push
mov
or
mov
idivl
xor
inc
mov
lock
lret
mov
stos
add
shll
inc
in
or
mov
push
pop
xor
sbb
xlat
in
popa
bound
xchg
divl
das
test
pop
lcall
jp
outsb
adc
sbbb
hlt
into
xorl
test
stos
push
pusha
xor
mov
jns
lahf
scas
xchg
mov
cmp
cmpsl
mov
xor
pop
inc
cld
aaa
pop
das
mov
es
lret
inc
cmp
cwtl
int3
inc
loopne
sbb
inc
movsb
bswap
scas
ret
mov
out
mov
or
aas
ds
xchg
scas
ljmp
loop
fists
imul
sub
les
add
inc
xor
out
imul
xor
jg
scas
decl
sub
popa
pop
cmp
mov
and
aam
jo
mov
ds
mov
xor
daa
jl
xchg
pop
mov
or
jbe
mov
stos
scas
dec
sbb
test
xor
pop
lods
pop
inc
aam
in
scas
mov
add
xor
xchg
push
sub
stos
jae
push
mov
xor
xor
clc
add
or
add
inc
sub
inc
dec
test
pop
xor
xlat
push
fists
lea
lret
jmp
inc
jne
std
call
jle
add
out
push
pop
xchg
cmp
push
sub
out
sahf
mov
inc
addr16
xchg
and
sub
dec
dec
scas
pop
mov
cmp
dec
inc
mov
ret
xor
sub
jnp
add
mov
gs
movsl
mov
cli
shll
hlt
mov
aas
push
cmp
mov
xor
inc
xor
pushf
mov
dec
cmp
cld
push
dec
dec
imul
sub
je
bound
mov
stos
lcall
sub
in
mov
cmc
rolb
sub
bound
ret
into
adc
jae
sub
pop
in
and
jns
and
dec
scas
out
bnd
cmpsb
push
imul
ja
cld
arpl
mov
jle
lock
cmp
daa
add
jg
lods
jbe
enter
leave
or
sbb
sub
inc
xor
orb
repz
mov
imul
mov
int
sbb
inc
jnp
into
adc
xor
sarb
inc
ss
test
cmc
jp
adc
test
jmp
mov
ljmp
test
jle
jb
xchg
lods
dec
xlat
inc
xchg
stos
aad
sbbb
adc
push
rorb
sti
mov
das
push
jo
mov
ljmp
pop
testb
mov
sbb
xchg
outsl
mov
sahf
mov
in
dec
cmp
fidivl
mov
cwtl
fsubl
mov
push
addr16
fldlg2
pop
and
cmp
mov
xor
loop
shlb
rolb
jno
push
aaa
shlb
imul
negb
mov
loopne
popa
mov
andb
sahf
loopne
mov
sbb
xchg
fmull
sbbb
ja
jmp
adc
xchg
sahf
jae
inc
jns
popa
jle
stos
mov
pop
add
fistpll
addr16
pop
xchg
data16
xor
std
adc
sbb
dec
push
jecxz
fidivs
lods
fwait
cmpsl
mov
sbb
jecxz
adc
xor
jecxz
and
adc
rolb
lock
ljmp
sub
dec
movsb
mov
ret
inc
icebp
or
mov
push
fisubl
stc
push
mov
xchg
inc
les
mov
dec
add
lret
fcmovnbe
fdivrs
add
push
aaa
cltd
lret
jb
daa
pop
test
out
sbbb
or
bound
aad
xchg
call
pop
pop
repnz
and
je
cmp
or
stos
and
mov
pusha
out
mov
mov
and
or
in
push
loopne
gs
inc
sbb
sub
push
mov
ret
and
lcall
leave
out
add
pop
rcrb
les
sub
outsb
test
jno
xor
cwtl
push
pushf
xor
or
xor
adc
mov
call
fidivrl
xor
jb
inc
fwait
mov
dec
rorl
jle
in
outsl
xor
jecxz
mov
enter
scas
lock
or
jno
repz
jge
and
dec
aam
loop
cmp
or
ficompl
mov
fcomps
push
scas
mov
inc
pop
sbb
dec
lahf
mov
and
mov
out
pop
pusha
add
enter
dec
sub
std
in
xor
pop
pop
dec
jbe
int
pop
or
pop
cmp
outsb
add
pop
dec
loope
push
pop
lret
cmp
dec
and
rcrl
clc
testb
popf
mov
filds
in
outsb
lcall
icebp
sahf
sub
addr16
mov
sbb
push
sbb
aam
inc
inc
daa
popa
dec
inc
int3
inc
imul
pop
dec
xor
fisubl
push
jns
add
sbb
stos
and
pop
lahf
jno
cwtl
cmp
enter
sbb
fadds
or
xchg
loopne
mov
or
dec
pop
mov
sbb
rcll
inc
jno
push
je
mov
mov
push
mov
mov
mov
sbb
lea
fildll
push
cmpxchg
negl
int
stc
pop
adc
inc
jno
sbb
imul
mov
lret
inc
scas
jns
pop
xchg
fwait
cmp
sbb
faddl
cmp
cmp
push
xor
pushf
dec
mov
insb
cli
sahf
popa
or
xor
nopl
jle
test
fucomp
sbbl
cmp
cmpl
je
cmp
xor
sarl
jne
adc
ret
js
popa
inc
enter
clc
mov
mov
insb
mov
add
sbb
inc
mov
jbe
mov
mov
mov
sub
cmp
loopne
outsl
cltd
pop
sub
cmp
adc
ja
ficomps
dec
dec
sbb
aam
mov
add
xor
dec
mov
mov
mov
rep
in
xchg
pop
in
mov
or
cltd
jge
xor
rorb
cmpsl
out
jge
xor
iret
ret
jmp
data16
mov
outsl
adc
jmp
andl
mov
and
xor
orl
push
out
jl
pop
incb
out
imul
mov
inc
idivb
enter
jecxz
icebp
repz
lods
mov
jecxz
mov
inc
jle
lds
loopne
jg
push
popa
pop
out
and
lds
jp
int
js
xor
xchg
add
cli
sbbb
lahf
mov
or
fisubl
add
out
arpl
and
push
mov
cli
adc
nop
cmp
ffreep
pop
pop
sbb
ss
daa
mov
lock
mov
mov
adcb
repz
mov
jb
jmp
push
cmp
adc
rcr
out
mov
mov
insb
cmp
jno
dec
pop
popa
bnd
or
data16
inc
into
pop
popf
pop
pop
cwtl
push
cmpsb
pop
sar
push
xchg
repnz
mov
mov
or
mov
xor
dec
movsbl
xor
clc
dec
sub
mov
cmp
lret
sub
std
pop
jle
or
xchg
hlt
sub
push
xlat
fisubrs
sub
mov
out
push
cltd
xor
ret
adc
adc
out
filds
cmc
ljmp
mov
fsubrs
push
aad
lahf
gs
out
and
jl
add
push
cmp
mov
test
idiv
push
cmp
scas
pop
cmp
imul
ss
mov
dec
or
xchg
or
rorb
add
mov
or
xor
outsl
mov
xchg
sti
adc
jne
gs
mov
stos
cmpsb
pop
mov
dec
sahf
mov
pop
adc
and
push
lock
cmp
sarl
mov
cmp
jle
leave
test
push
add
adc
shll
je
mov
mov
mov
lods
rorb
cli
les
daa
jo
adc
arpl
out
jno
add
mov
insl
mov
dec
xor
xchg
add
jo
mov
rclb
jo
dec
and
mov
fisttps
xchg
outsl
inc
cltd
inc
cmpsb
adc
mov
add
aad
hlt
sub
dec
jecxz
jnp
and
xor
pop
jno
aam
mov
pop
ss
ja
mov
mov
dec
pop
out
sub
sbb
int3
mov
cltd
mov
in
lahf
jo
adc
fwait
push
push
loope
or
stos
jo
mov
loopne
lock
sarl
push
out
and
xor
js
stos
mov
or
add
adc
push
fnstcw
cmpsb
int
cmp
pop
ret
pop
icebp
incl
test
xor
pop
xor
leave
jae
adc
je
mov
cltd
pop
xchg
out
and
shrl
scas
mov
stc
stos
sbb
shlb
js
jo
out
xchg
cwtl
jno
negb
jns
inc
repnz
fisttpl
pop
aam
sub
lds
add
rcl
sub
pop
movsb
idivl
stos
loop
ror
divb
je
push
mov
dec
xchg
xor
nop
jmp
stc
sbb
sub
sahf
pop
shll
sbb
js
es
js
mov
xchg
test
ds
popa
sbb
xlat
out
xchg
sahf
iret
repz
lret
movsb
pushf
shll
mov
popf
stos
or
iret
mov
dec
lsl
jg
pusha
push
stc
cld
add
push
push
or
mov
test
mov
in
pop
xchg
sub
lock
ficoms
fadds
lock
loope
mov
mov
push
cmp
sbb
mov
xchg
mov
mov
inc
lret
into
test
mov
jg
sbb
sbb
xor
add
movsl
inc
aad
jb
ftst
pop
test
fsts
pop
jmp
add
stos
andl
fs
rclb
repnz
pop
stos
pusha
cwtl
xchg
cmc
fisubl
pop
jge
call
and
xor
rcl
add
xchg
jle
and
lods
or
mov
loopne
push
sub
or
mov
les
sub
cs
arpl
enter
and
divl
insb
ja
mov
mov
inc
sub
pop
mov
dec
dec
mov
xor
pop
bnd
dec
cmpl
lret
dec
scas
mov
mov
dec
mov
lds
ret
dec
int3
hlt
xlat
add
call
es
in
jl
xor
push
inc
loopne
test
inc
mov
dec
pop
fwait
cmp
es
push
lcall
mov
outsb
adc
test
fidivrl
std
clc
notb
pop
cmp
pop
loope
fxch
push
pop
ds
inc
out
inc
clc
sbb
mov
mov
adc
movsb
xor
aas
cmpsb
and
incb
rorl
add
decl
out
dec
clc
cltd
sahf
mov
loop
lret
xchg
cmpsb
jbe
mov
and
repz
sahf
and
mov
movsl
lret
jge
jae
xchg
js
lcall
bound
sub
jecxz
arpl
cmp
pop
inc
xchg
sbb
test
mov
xchg
jnp
push
scas
jb
imul
lock
cs
lret
in
and
mov
sub
leave
pushf
push
mov
rolb
or
in
mov
adc
addb
jnp
lods
fmull
xor
mov
popa
ja
jae
or
pop
push
adc
movsb
adc
rdmsr
pop
adc
lea
call
xor
outsb
movsl
jge
or
mov
mov
rcl
push
mov
push
mov
outsb
les
xchg
cmp
subb
add
arpl
in
or
scas
mov
rcrb
outsl
aad
int3
fists
ja
rclb
fxch
mov
mov
xor
imul
jns
gs
adc
jp
mov
pop
xchg
in
out
mov
fldln2
sbb
mov
xor
inc
in
mov
lods
jmp
inc
imul
lds
mov
ret
in
cmp
aam
dec
inc
mov
mov
push
outsb
pop
xor
jg
or
xchg
mov
xchg
test
test
and
pop
or
mov
movsb
repz
and
stc
xchg
sbb
repz
das
jp
sub
dec
jmp
mov
test
popa
in
jl
lds
es
or
repz
push
mov
in
push
push
in
jmp
rcll
enter
cmpsb
icebp
push
dec
insb
dec
out
mov
fwait
jmp
hlt
jne
out
jmp
imul
and
and
loope
repnz
in
shlb
mov
add
loop
int3
sbb
int3
push
push
inc
sub
add
movsl
pop
mov
dec
in
cmc
movb
fbld
xchg
jnp
aam
jns
int
xchg
lret
or
fisubrl
lcall
popa
or
aad
jecxz
ja
inc
ds
fucomp
cmc
adc
popf
mov
mov
repnz
jl
pop
popf
in
mov
pop
arpl
call
ret
cwtl
mov
lret
stos
xor
push
sbb
enter
cli
fisubs
lods
das
icebp
ja
mov
data16
clc
sbb
mov
inc
push
ret
shrl
iret
aam
repnz
rcr
jp
inc
test
mov
lods
xchg
test
inc
dec
lock
adc
dec
mov
pop
xchg
test
and
jno
arpl
jb
mov
cmp
jno
or
and
out
mov
test
ss
fnstenv
popf
addb
jg
pop
mov
lods
and
pop
fsubrl
pop
adc
xor
or
or
rorl
test
lea
iret
popa
lret
or
iret
imul
push
loopne
inc
sub
xor
or
pop
mov
push
jno
push
mov
pop
andl
add
fldcw
andb
repnz
xor
aaa
push
arpl
inc
in
aas
fists
xor
mov
lods
ret
call
sbb
cmp
int3
add
je
sbb
mov
mov
pop
push
imul
xor
repnz
or
cmp
push
fsubl
push
mov
xor
lds
add
mov
jecxz
push
pop
adc
call
mov
push
dec
cmp
int
and
add
pusha
pop
imull
outsb
sbb
fwait
cli
jecxz
sub
cmp
xorb
ljmp
mov
xchg
addr16
cld
dec
fdivl
movsl
bound
xchg
lcall
dec
cltd
pop
iret
adc
push
fwait
push
sahf
jno
or
and
inc
popf
out
mov
sbb
mov
popf
xor
decb
cmp
imul
and
stos
insl
pop
das
jbe
mov
push
ret
or
dec
adc
in
cmpsb
test
xchg
or
fimull
adc
adc
or
mov
inc
repz
cli
xchg
jnp
movsl
mov
lret
adc
cmc
inc
pop
divl
mov
xchg
cmpsb
push
cmp
mov
jp
mov
iret
fists
outsl
enter
orl
test
jecxz
dec
bswap
xor
cld
dec
xchg
pop
jmp
mov
mov
adc
xlat
std
adc
sbb
xor
jnp
pop
jecxz
mov
aaa
cmpsb
mov
pop
scas
xlat
jmp
out
cmp
fidivl
push
mov
sub
mov
pop
test
shll
stos
pop
test
inc
add
sub
shrl
adc
cmp
sbb
push
movsl
outsb
mov
repz
add
arpl
jge
loopew
mov
xchg
add
rolb
and
adc
mov
das
data16
and
jmp
cmc
int3
incl
push
call
cmp
pop
int
rclb
jae
mov
xchg
fiaddl
in
add
push
in
scas
pop
std
pop
and
test
sbb
stos
mov
movsb
cld
icebp
jmp
call
dec
mov
cmpl
or
mov
fsubs
or
push
xchg
cmp
xor
push
xchg
cli
add
mov
out
lods
sti
sub
into
mov
mov
and
int3
mov
add
fwait
mov
mov
sbb
clc
movsl
mov
xor
ljmp
ss
out
jg
adc
mov
addr16
movsl
inc
jmp
jo
ret
call
mov
mov
cmpb
aaa
rcr
shrb
sub
bound
fs
dec
jo
xor
cmpsl
movsl
loop
insl
jne
data16
mov
xor
aad
add
and
inc
fs
push
adc
jae
xchg
pushf
cmc
cwtl
ja
mov
rorl
test
dec
out
in
enter
repnz
xchg
xchg
pop
mov
and
cld
push
incl
stc
stos
inc
ret
shrb
scas
push
adcl
add
pop
or
mov
or
and
pusha
xchg
add
pop
adc
addr16
lret
sub
xchg
imul
lods
jo
adc
cmpsl
sbb
out
fadd
mov
mov
jg
jbe
and
cmp
je
or
sahf
push
mov
ret
sbb
mov
sub
out
test
imul
cs
js
lods
xor
inc
cs
xchg
xlat
dec
mov
cli
sbb
les
out
xlat
repnz
cmp
mov
and
divl
ljmp
rcl
mov
lods
mov
jnp
imul
pop
dec
xor
fwait
mov
stos
andb
nop
xchg
in
add
daa
push
jge
dec
jns
push
jae
mov
sahf
sub
popf
mov
ss
int
mov
cmp
or
inc
in
mov
jmp
xor
in
in
mov
adc
jmp
and
dec
xor
jl
mov
jmp
inc
xor
outsb
sbb
cwtl
movsb
adc
daa
push
adc
jp
ffreep
cwtl
loop
jbe
push
outsl
ljmp
pop
movsb
inc
sub
outsb
cmpb
cmc
adc
nop
adc
pop
sahf
popf
cmp
or
push
repnz
mov
xlat
scas
sbb
mov
pop
mov
cmpsb
imul
imul
rcll
adc
sbb
out
sbb
fwait
add
adc
jne
repnz
mov
insb
pushf
and
sbb
movsb
or
inc
das
push
xchg
std
inc
lds
cmc
les
js
mov
fistl
push
sub
mov
sub
movsl
leave
out
aam
hlt
into
iret
push
mov
shr
mov
shl
dec
mov
repz
arpl
add
mov
adc
pop
repz
adcb
shll
out
outsl
ficompl
out
int
fisttpll
sarl
push
xacquire
push
push
dec
test
jle
mov
orb
dec
ret
cmp
inc
pop
repz
jno
lods
dec
jle
adc
inc
adc
jnp
sbb
jne
mov
hlt
insl
call
in
dec
pushf
stos
cmp
insl
mov
mov
cmpsl
out
imul
fbstp
adc
fcmovnb
pop
std
stos
cmpsb
jno
lock
fnstcw
call
lret
movsl
inc
push
and
lahf
mov
cli
and
xor
push
jne
daa
test
jbe
dec
arpl
and
es
cmp
daa
sub
lret
jb
xchg
push
xchg
pop
loope
sbb
clc
cltd
stos
and
push
xor
fs
xchg
testb
lods
mov
cmp
mov
std
lret
mov
inc
aad
jo
adc
pop
pushf
lret
mov
std
sti
cmp
mov
ljmp
xchg
or
sbb
pop
imul
dec
sbb
aaa
in
std
les
pop
mov
lahf
pause
mov
and
dec
lcall
lcall
mov
addr16
xchg
add
mov
xor
rcrb
jge
push
jae
jecxz
and
jmp
xchg
xlat
pop
add
addr16
loop
stos
and
fs
clc
ljmp
pop
push
mov
mov
pushw
shr
repnz
je
jbe
mov
mov
outsl
aas
xchg
scas
adc
xchg
mov
fsubrs
or
mov
lahf
cmp
lahf
movsb
adc
jne
cltd
sub
push
iret
xor
mov
xchg
lcall
and
adc
xchg
fiaddl
cmovge
repz
xchg
out
pop
inc
or
cwtl
jg
lock
lret
jecxz
sbb
repnz
nop
testl
lea
pop
adc
mov
sahf
das
out
inc
sbb
push
cmp
jmp
popa
out
scas
jl
push
jmp
ret
mov
shl
jns
inc
jb
jo
or
xor
push
mov
daa
xchg
sub
mov
fimull
dec
fwait
mov
das
lcall
cs
jg
jne
push
or
xor
xchg
sbb
sbb
pop
inc
xchg
and
jns
in
inc
mov
aam
sbb
pop
add
and
push
ret
or
pop
pop
add
aam
test
inc
clc
inc
adc
repz
out
nop
fnstcw
cmp
mov
lock
fst
adc
pop
lret
mov
lahf
mov
mov
aaa
test
loope
cmp
xchg
out
push
and
xchg
mov
repz
ret
lods
into
adc
fwait
mov
gs
in
push
insb
lret
mov
xor
jo
lods
or
fistpl
dec
push
in
xchg
insl
std
xor
lret
adc
shll
movb
mov
mov
inc
outsb
dec
mov
mov
lock
or
pop
sbb
arpl
or
aam
lret
aaa
dec
clc
mov
fisttpl
pop
jmp
daa
cmc
and
jle
mov
adc
out
pop
outsb
add
push
loope
aas
inc
fdivs
jle
or
jnp
shrl
mov
jns
into
push
lods
adc
outsb
xor
or
fdiv
push
and
lock
in
fcoml
sti
js
sbb
jns
ret
ljmp
and
push
cli
pop
jle
fcmove
fimuls
mov
loop
rolb
mov
lret
test
shrl
pop
mov
adc
int3
push
loop
add
jle
push
addr16
and
sbb
ljmp
lahf
inc
cmp
mov
push
adc
repz
push
jmp
and
inc
ljmp
daa
lds
into
xchg
dec
pop
or
daa
mov
add
sub
push
and
es
xchg
add
pop
or
out
pusha
filds
jecxz
fisttpl
inc
das
add
fmuls
mov
sub
jne
out
push
sahf
movsl
mov
mov
xlat
dec
ret
xor
test
andb
mov
mov
iret
xchg
and
icebp
mov
adc
mov
daa
loope
mov
add
push
test
aad
loopne
jecxz
push
dec
sub
cmp
aaa
cs
add
mov
popf
in
cs
jp
mov
aas
mov
cmp
imul
pop
lock
add
jno
jle
lock
outsb
out
add
adc
pop
mov
xor
pushf
outsl
jmp
stc
jmp
sub
pop
call
adc
xchg
inc
pop
outsb
repnz
jmp
bound
push
mov
adc
add
mov
adc
xor
out
mov
das
mov
nop
jl
negb
or
ja
adc
mov
sub
leave
push
and
iret
dec
push
je
sbb
sub
mov
lds
add
xchg
xorb
or
lea
add
jg
jge
arpl
pushf
test
lahf
cmp
inc
out
cmp
add
dec
cwtl
push
cmpsb
pop
cwtl
les
jl
push
es
mov
fcmovne
sub
xor
jo
sbb
sub
add
das
pop
shll
in
fistps
jb
adcl
mov
mov
test
ficomps
add
sub
add
adc
pop
pusha
add
pop
add
bound
adc
adc
in
lahf
data16
test
loope
mov
scas
dec
xchg
push
fdiv
pop
lret
fcompl
push
and
pop
lahf
sbb
cmpsb
sbb
jns
les
mov
dec
jo
adc
push
sub
bound
pop
scas
movsl
or
push
lahf
cmp
mov
lods
hlt
dec
xchg
test
out
cmp
pop
mov
mov
push
cs
lahf
cmp
aaa
push
ja
nop
mov
and
mov
pop
inc
popa
mov
jp
sbb
scas
or
or
es
or
aad
push
ja
xlat
dec
popa
stos
test
mov
sbb
xchg
xor
push
hlt
jge
sub
inc
cmp
stos
cmpsl
mov
mov
inc
in
dec
jge
in
jp
pop
or
mov
push
push
add
fildll
mov
xchg
fildll
mov
sahf
xor
int3
cmp
movsl
xor
ljmp
push
mov
and
popf
jl
or
add
sbb
or
insb
jnp
pusha
pusha
rol
fcomip
xor
push
jle
inc
inc
in
cmp
js
aad
adc
call
jns
jae
jg
stc
push
mov
xchg
and
jno
sbb
inc
xchg
sub
cmp
cmc
decl
xchg
mov
sub
fs
sub
mov
test
call
inc
xchg
sub
push
dec
pop
cmpsb
cmp
imul
imulb
in
stos
mov
orl
mov
sbb
shrl
xor
shll
pop
test
and
ret
mov
insl
aas
mov
cwtl
add
mov
pop
jl
and
sbb
mov
into
repnz
adc
mov
dec
push
xor
in
sbb
stos
push
or
push
dec
rclb
sub
mov
iret
xor
jne
clc
inc
mov
das
xor
enter
add
pop
arpl
imul
mov
mov
xchg
in
pop
mov
pushf
aam
cltd
lret
imul
mov
and
xchg
das
das
push
add
and
pusha
jl
movl
add
fldenv
ficompl
inc
shl
scas
inc
mov
mov
inc
mov
mov
mov
xchg
idivb
data16
add
cmpsl
xor
mov
push
adc
aas
loopne
movsl
mov
cmp
rorl
imul
or
dec
out
adc
mov
push
or
hlt
in
jno
roll
lcall
sarb
mov
enter
test
cmpsb
sti
inc
dec
mov
in
cmp
pusha
adc
outsl
ja
jecxz
jno
lods
mov
test
ja
loopne
dec
mov
mov
dec
ror
xor
xor
movsb
mov
pushf
jb
out
mov
mov
call
icebp
rcrb
push
sbb
mov
roll
imul
outsb
dec
das
sbbb
fldcw
in
sbb
xchg
xor
jecxz
cmp
call
aad
dec
xchg
push
and
jo
fimull
mov
dec
insb
jno
push
loop
dec
or
in
pusha
or
push
pushf
shll
jne
or
xor
insl
repnz
mov
xchg
jl
and
push
paddusb
int3
clc
push
popa
xor
mov
out
int3
adc
enter
mov
mull
sarb
add
test
stc
leave
add
test
imul
inc
mov
mov
scas
jno
mov
jb
daa
push
push
lods
adc
push
jg
mov
sub
push
fnstsw
shrl
push
xchg
iret
adc
daa
mov
push
dec
inc
sahf
icebp
insb
ficoms
fbld
push
insl
sub
les
cwtl
xchg
stos
mov
int
dec
int
xchg
fmull
int3
mov
insb
outsl
adc
fisubl
sbb
imul
aas
lret
addr16
dec
pushl
pop
mov
jbe
dec
addl
out
inc
imul
lret
pop
fildl
dec
orb
movsb
sub
jge
sbb
xor
sbb
dec
cs
inc
cmp
ljmp
aam
xchg
sbb
je
cmp
js
push
sub
test
mov
sub
dec
scas
cld
repz
mov
inc
gs
xchg
cmp
imul
lret
jae
jae
cmp
outsl
cmp
cmp
mov
dec
aas
and
and
lock
xor
mov
stos
pusha
add
lods
push
std
xor
push
rcrb
xchg
mov
inc
jo
repnz
xor
inc
xchg
jnp
lods
jns
push
int
aam
lds
add
fwait
jg
enter
adc
pop
aas
mov
pop
fwait
mov
xchg
or
cli
jle
xchg
inc
or
icebp
jbe
mov
test
push
push
push
push
adc
sbb
ja
sbb
cmpsb
test
pop
ds
jl
dec
into
inc
pop
bound
loop
or
jbe
lret
fidivrs
sbb
orb
and
mov
inc
cmp
aas
jp
push
xchg
int
jg
jmp
fbstp
sbbb
insb
and
in
gs
and
mov
mov
and
and
sbb
adc
test
xor
cs
mov
jb
pop
repnz
add
adc
cld
mov
mov
jle
jle
sti
stos
inc
cld
inc
lcall
dec
xor
sub
jl
mov
es
lret
xchg
loopne
dec
pop
add
xchg
rorb
jne
sub
sbb
jp
push
lcall
fcmovu
and
lea
xchg
jg
push
lea
js
test
sbb
xchg
notb
testb
adc
jo
xchg
mov
fstl
mov
mov
outsl
pop
sub
push
jae
call
iret
daa
sarb
cwtl
ljmp
pop
sub
inc
pop
bound
jle
stc
cltd
push
jmp
flds
cwtl
adc
adc
call
ljmp
pop
add
gs
push
mov
push
pop
out
ljmp
ljmp
sbb
and
inc
es
ljmp
int3
divb
je
shrb
jmp
cmp
pop
sub
mov
xchg
bound
mov
mov
xlat
sbb
cltd
cmp
fs
enter
ret
ror
fisttps
mov
outsb
mov
aas
mov
mov
or
fadds
test
daa
or
push
pop
mov
insl
sbbb
out
aam
enter
xchg
jge
scas
daa
test
xchg
loopne
rcll
and
sbb
sbb
ljmp
mov
cmp
sub
jb
dec
data16
push
sub
or
cld
loopne
xlat
mov
xorb
mov
out
out
scas
mov
test
mov
sub
pushf
loopne
out
sbb
or
addr16
and
xor
insb
stos
es
sbb
cmpsl
pop
pop
ds
lcall
mov
aad
test
push
outsl
mov
mov
jne
sub
ret
fdivrs
inc
xchg
cld
adc
ret
cmp
xor
mov
fimuls
inc
xor
ja
mov
loopne
pop
xor
or
ss
stos
mov
xchg
call
adcb
lret
mov
aad
sbb
or
jle
fwait
dec
xchg
fistps
adc
xchg
push
scas
xchg
or
movsb
mov
sub
add
jbe
jne
fisubrl
xor
mov
ja
pop
lcall
pop
stos
daa
test
je
fbld
shlb
int3
cmc
push
rorl
sub
int
je
jge
jge
cmc
xchg
adc
scas
mov
call
sti
pusha
cltd
lret
gs
pop
faddp
adc
adc
inc
mov
pop
inc
jnp,pt
xchg
mov
dec
leave
add
adc
jmp
fisttpl
push
xorl
mov
test
addr16
mov
dec
lcall
rcr
and
pop
fcmovbe
jge
outsl
gs
lahf
push
sarb
push
sbb
jmp
sub
pop
cwtl
std
test
and
ljmp
or
ja
out
std
cmp
push
dec
sbb
rcrl
dec
scas
orl
outsb
xchg
iret
mov
add
xchg
addb
into
inc
add
imul
lret
clc
test
in
dec
mov
fdivrl
push
pop
lret
lods
jmp
and
jb
test
negb
dec
rorl
cmpsb
es
or
in
cltd
pop
mull
testl
xchg
mov
sbb
pop
jbe
std
in
inc
cmp
xchg
adc
jb
xlat
sub
testb
repnz
xor
ret
adc
or
fbld
sahf
jmp
xor
jns
jle
rcrl
lock
test
mov
xchg
sub
lock
popf
aad
icebp
arpl
in
mov
aaa
jge
xor
roll
andl
and
push
xor
dec
xor
ss
stos
adc
adc
loopne
lods
imul
std
jne
push
insb
pop
dec
pusha
out
stos
inc
xor
and
jge
movsb
in
or
mov
mov
in
lds
xchg
dec
int3
xor
push
es
mov
into
push
pop
ficoms
lods
xchg
sub
and
mov
ljmp
jp
xchg
les
adc
mov
sbb
ret
lahf
mull
fdivs
lahf
dec
mov
rcrl
cltd
inc
aas
cmp
icebp
in
xor
and
imul
in
jnp
push
push
sbb
clc
into
sbb
cmp
push
lods
mov
icebp
pop
sub
xor
cmp
jae
mov
mov
cmc
pop
fiadds
mov
pop
icebp
add
jb
add
add
adc
aad
dec
xor
mov
xor
fdiv
pusha
jns
mov
sbb
pop
loope
divb
js
int
mov
mov
mov
lcall
and
cld
sbbb
dec
inc
aaa
loope
rorw
repnz
mov
jae
inc
ljmp
inc
aam
addr16
stos
aad
psubsw
push
push
push
incl
ss
stc
loopne
insb
or
aad
or
sbb
sbb
aas
xchg
sub
movb
cld
jne
pop
jecxz
and
imulb
mov
jno
or
pop
pushf
adc
leave
popa
xchg
or
jge
mov
pop
andl
test
or
stc
pushf
sbb
mov
jl
sbb
mov
cmc
or
mov
jp
push
shl
mov
ds
sahf
push
data16
fildl
enter
fdivrl
ljmp
fs
pop
jae
and
push
sub
addr16
repnz
adc
andl
fwait
imul
loop
xchg
mov
adc
dec
lret
outsb
sbb
xchg
dec
pop
aad
mov
jnp
lods
les
pop
sub
movsl
inc
scas
popf
outsl
das
gs
jbe
pushf
xor
fisttpll
xchg
scas
mov
loope
adc
dec
sti
jl
inc
popa
sub
mov
sarb
jae
cmp
lret
sbb
outsb
xchg
sarl
pop
loop
repz
pop
shl
jns
add
scas
push
andl
les
adc
add
add
jle
in
cli
imul
cwtl
inc
push
in
pop
dec
adc
cli
push
sub
jne
sub
or
add
shl
mov
pop
shll
ljmp
or
clc
test
stos
out
mov
sub
add
ljmp
or
push
pop
xor
ret
fwait
mov
rorl
std
adc
aad
popf
pop
push
pop
sub
shlb
test
loopne,pn
inc
xchg
push
outsl
sbb
addr16
lea
pop
add
lds
and
bnd
push
or
std
or
out
int
mov
lods
push
subb
testb
repnz
insb
aad
inc
ret
cmp
aam
lds
mov
es
inc
int3
aam
add
mov
test
lods
adc
sbb
rep
ja
mov
xor
push
fprem1
adc
lahf
dec
ret
cld
xchg
test
in
jp
fistps
fs
and
ss
movsb
mov
icebp
pop
sub
push
push
jae
imul
xor
cmp
sub
in
inc
cltd
inc
clc
xchg
xor
sbb
loopne
mov
push
loopne
cmp
xchg
mov
pop
cmova
test
dec
xor
out
mov
ja
pop
cmp
cmp
sub
lret
jecxz
ja
mov
cmpb
add
rol
adc
fmuls
lods
in
mov
push
cwtl
mov
sti
sub
adc
aam
bound
mov
jne
in
in
sarb
cli
jecxz
pushf
pop
push
fcmovnbe
pop
cs
lock
sbb
push
fsts
fistl
jnp
xor
cmp
hlt
pop
test
fidivs
mov
mov
mov
fisubl
imul
or
pop
dec
inc
xchg
into
js
jbe
xlat
imul
iret
sti
hlt
mov
fbstp
xor
rcll
movsb
sbb
mov
sub
out
and
jae
test
mov
sti
mov
push
cmpsb
das
out
pop
sbb
mov
mov
cmp
xor
repnz
je
jmp
push
cmp
mov
inc
ss
lock
jecxz
flds
in
das
cld
fdivrl
sarb
dec
push
fiadds
xchg
jno
cmpsb
or
push
aam
scas
pop
push
sarb
inc
mov
repnz
mov
mov
gs
jge
leave
pop
ret
jns
inc
xor
fcom
ret
cmp
fsts
and
inc
xchg
jne
test
xchg
xchg
je
out
dec
dec
xchg
outsl
sub
xchg
sub
ret
sahf
mov
sbb
test
lcall
fs
xchg
pop
pop
stos
outsb
jo
cmp
adc
push
pop
mov
adc
ss
lods
stos
xor
mov
sbb
mov
stos
nop
in
aam
add
inc
jp
test
xchg
mov
xor
inc
fwait
xchg
jg
xchg
xor
or
push
gs
out
daa
mov
sub
add
xchg
gs
push
push
cltd
mov
mov
add
loope
mov
lahf
ja
jecxz
mov
packuswb
xor
inc
lahf
mov
lods
xchg
jecxz
cmp
cmpsb
stos
in
insl
sbb
jle
jnp
mov
mov
xchg
lahf
pusha
hlt
shr
push
fmull
sbbb
dec
stos
xor
cmp
hlt
lcall
rorl
lock
push
cli
lret
xor
hlt
mov
les
setnp
sub
dec
mov
ror
popf
xchg
xor
cmp
mov
shll
cmp
in
ret
cld
inc
in
cltd
mov
jmp
and
mov
aam
rcrl
push
lds
rcl
incl
sahf
inc
lcall
test
cmp
rcll
jno
movsb
cld
add
test
test
mov
dec
push
mov
push
std
lret
sahf
and
ljmp
mov
or
enter
xchg
iret
and
rol
loope
push
xchg
add
shl
repz
push
stc
in
sbb
jo
sbb
fisubrs
inc
dec
mov
mov
daa
xorl
pop
aas
lds
xchg
or
adcb
fidivrs
sahf
and
sti
std
jb
cmp
ja
sti
add
adc
jo
das
sub
pop
mov
pusha
cmp
mov
lods
enter
dec
push
mov
int3
in
in
or
mov
pop
sti
and
adc
pushf
leave
jge
nop
repz
dec
jae
cmp
pushf
repz
ljmp
imul
rclb
sbb
mov
insl
aas
push
scas
pop
push
jl
movsb
cmpl
cmp
inc
pop
out
sbb
mov
cwtl
xlat
mov
jmp
fsubrs
ljmp
es
out
or
out
movsb
cmpsl
push
mov
mull
imul
push
ss
sbb
pop
sub
ljmp
test
out
adc
sahf
sahf
dec
fildl
movsb
adc
out
push
mov
mov
and
adc
hlt
pop
aad
out
dec
pop
es
mov
aaa
into
or
pop
cmp
push
and
sub
jecxz
jnp
sbb
push
sbb
xchg
bound
lods
jbe
jecxz
jae
int3
fdivrp
inc
mov
lock
mov
and
rol
cmp
jb
pop
testb
cmp
ret
push
cli
xchg
imul
mov
dec
or
jo
dec
mov
pop
lahf
and
adc
je
sbb
mov
adc
pop
jno
leave
dec
dec
cwtl
mov
mov
into
ljmp
add
shll
fldl
pop
test
adc
mov
adc
jl
repz
adc
pop
in
in
scas
xchg
fwait
sub
decb
loopne
dec
pop
movsb
dec
insl
repnz
test
or
sub
pop
xor
shr
cmp
cli
arpl
clc
sbb
dec
mov
rclb
out
repnz
mov
push
push
push
xorl
cltd
dec
inc
xlat
les
fnstsw
jns
jge
adc
jge
lds
test
dec
jl
subl
sub
push
mov
popf
dec
cltd
mov
xchg
rcr
jle
mov
out
rclb
sub
sub
jg
or
xchg
jle
loopne
cmp
jmp
test
test
lds
inc
push
jno
es
in
shlb
loopne
inc
and
aas
mov
fcomp
adc
fs
out
push
orl
das
sub
shlb
inc
lock
popf
mov
stos
mov
inc
jmp
lods
cmp
inc
movsl
fiadds
and
adcl
jbe
aas
test
stos
call
jecxz
pop
xor
fcmovnu
hlt
push
cmp
adc
push
jp
mov
cwtl
arpl
inc
mov
sub
and
pop
outsl
or
push
push
into
idiv
std
cmp
pop
push
ret
test
imul
push
xchg
hlt
mov
js
pusha
aad
out
insb
addr16
lods
idivl
cmp
mov
jge
ja
les
lods
ljmp
out
fnsave
jl
xor
je
sub
nop
mov
movsl
pop
push
pop
or
stc
outsb
lods
and
or
or
lods
leave
cld
dec
icebp
nop
jne
jo
pop
sbb
xchg
push
push
jp
push
mov
push
lods
lods
loop
mov
aaa
sub
test
push
lahf
ret
outsl
negb
pop
les
pop
mov
adc
leave
cmp
jno
fsub
cmp
pop
loop
inc
jo
inc
inc
xor
fdivl
ljmp
xchg
inc
mov
outsl
sub
adc
inc
cmp
aam
insb
cld
xor
mov
xlat
xor
xor
mov
cli
daa
and
fwait
dec
pop
and
inc
subl
leave
pop
imul
push
aad
sub
js
mov
mov
enter
out
cmp
add
mov
pop
cmpsb
cmc
div
adc
mov
inc
scas
xchg
mov
shll
and
test
cmp
call
mov
loope
decb
les
nop
jg
mov
add
or
mov
cmp
jecxz
enter
cwtl
sub
ror
cmp
add
xlat
mov
mov
push
or
mov
js
xchg
jno
push
aas
mov
mov
mov
push
fwait
jmp
lcall
cltd
ret
int
out
fmulp
ret
or
inc
ficompl
xchg
push
scas
pop
jne
sbb
aad
repz
adc
sbb
inc
cltd
xor
mov
xchg
sub
inc
movb
stos
or
pop
push
mov
xor
mov
pushl
test
sbb
es
dec
decl
push
inc
lret
jge
test
push
mov
ds
pop
xchg
inc
mov
pop
mov
stos
cli
pop
shll
gs
jns
aam
arpl
sub
mov
test
mov
stos
out
or
xlat
bound
popf
scas
dec
add
loopne
sub
std
and
lock
pop
das
dec
xchg
into
pop
mov
push
arpl
popf
mov
mov
mov
and
fstpl
scas
lcall
adc
jle
mov
sbb
out
rorl
xchg
sahf
jecxz
xor
enter
pop
in
imul
mov
xchg
ret
and
pop
aad
mov
mov
mov
loope
xchg
adc
test
ja
ds
and
jne
push
mov
xchg
xlat
mov
stc
std
in
push
arpl
cmpsb
loop
xorl
jno
insb
mov
sub
xchg
xchg
mov
int
stos
jbe
pop
call
inc
cmpsb
or
js
push
mov
in
jp
shrl
mov
pushf
repnz
lods
adc
push
and
in
loopne
inc
cwtl
stos
cmp
ds
jo
push
in
lock
cli
add
mov
mov
mov
imul
loopne
je
icebp
cmp
sbb
fisttpl
xchg
mov
xor
inc
sbb
adc
sub
adc
jl
ret
repz
bound
mulb
or
mov
arpl
es
in
out
filds
mov
mov
sbb
xchg
mov
aam
sbb
leave
and
push
push
push
mov
mov
push
out
clc
mov
or
inc
pop
add
jae
adc
dec
add
mov
add
subb
cmp
add
add
addr16
adc
pop
rcrl
mov
shll
lods
dec
push
adc
sti
push
adc
pop
push
movsb
aaa
movsb
inc
xchg
lods
push
sub
rolb
inc
aaa
jnp
in
out
movsl
test
jae
add
lock
out
sub
mov
movsb
cmp
cs
insb
jle
insb
or
push
mov
inc
cltd
or
sub
lods
sub
loopne
add
mov
insb
add
xchg
sahf
cmp
enter
rcll
jb
std
fistps
xchg
out
pop
int3
push
xchg
adc
adc
addl
mov
dec
jmp
add
or
jne
mov
push
pop
lods
test
add
jecxz
insl
jnp
dec
xchg
mov
aad
pop
xchg
popa
cld
lock
and
and
push
mov
enter
jnp
pop
lods
sub
inc
je
xor
arpl
pop
add
cld
push
xor
and
xchg
xor
test
negl
sbb
pop
push
leave
mov
xor
xor
enter
push
mov
test
popa
into
bound
adc
sub
fdivl
shl
imul
push
ja
push
fimuls
cmpsb
inc
push
enter
add
jmp
pop
cmp
test
data16
shlb
mov
pop
mov
sub
rep
mov
dec
mov
dec
jmp
nop
insb
in
gs
push
cltd
push
scas
and
dec
es
enter
cmp
dec
cmp
and
clc
cld
movsl
or
aam
in
jle
xor
xchg
daa
gs
lret
mov
arpl
and
neg
add
pop
pop
cmpl
mov
dec
je
out
stos
or
or
dec
mov
out
int3
mov
ds
stos
xchg
mov
mov
xor
imulb
sbb
lds
ss
orl
rcrb
sbbl
ret
jae
arpl
in
sbb
enter
inc
outsl
outsb
mov
inc
mov
dec
sbbb
or
jae
pmaxub
mov
xchg
xor
iret
xor
xor
ja
fs
ss
aaa
ss
ss
mov
lea
xchg
iret
cmpsb
inc
or
cs
rcrb
jge
mov
lock
xchg
fisubl
repnz
je
movsl
inc
sub
stc
movsl
inc
stc
cmp
dec
imul
notl
push
mov
jge
enter
add
insb
pusha
movsl
ret
jmp
in
pop
sub
stc
or
or
jg
ljmp
and
mov
jae
aam
out
mov
mov
sub
fidivl
loope
and
cmp
cld
mov
sti
lea
sub
inc
cmp
es
cmp
outsb
mov
lods
out
sahf
mov
dec
add
inc
lods
jbe
dec
xchg
test
addr16
xor
popa
push
jecxz
push
dec
test
in
cld
push
push
fdivrs
rcll
sub
and
sub
ja
and
cmpsl
addr16
inc
test
push
cmc
sti
push
stos
scas
mov
jmp
test
jge
adc
call
icebp
dec
jo
imul
scas
and
pusha
pop
rcrl
and
movsl
mov
jns
mov
clc
jmp
minps
adc
xchg
mov
mov
ret
xor
mov
fs
and
je
and
hlt
inc
pusha
xchg
pusha
fcomip
clc
sbb
loope
in
leave
adc
add
sti
lret
mov
test
loope
lods
nop
pushl
jbe
sqrtps
leave
push
adcl
dec
lret
andb
dec
xchg
scas
mov
das
xor
sbb
into
frstpm(287
and
mov
inc
movsb
push
fcoml
push
jns
pop
jge
rol
mov
lds
insb
inc
and
xchg
out
and
insb
lcall
ja
test
popl
push
xchg
mov
das
inc
pop
stos
sub
pusha
xchg
leave
pop
jle
mov
mov
out
cmpsb
adc
out
sbb
and
lods
push
xchg
mov
mov
jne
lock
mov
push
and
or
or
jnp
aad
data16
mov
testl
adc
cmp
das
lods
mov
clc
xchg
test
jbe
stos
xor
dec
pop
xchg
out
dec
adc
pusha
xor
jmp
jb
mov
push
aad
movsb
sbbl
lock
sbb
jmp
int3
push
and
and
in
in
mov
pop
or
aad
jno
sbb
fistpll
sub
popf
pmaxsw
test
sbb
test
aad
sub
in
cmpl
dec
int3
movsl
loopne
dec
xchg
stc
add
mov
xor
pop
hlt
outsl
mov
test
inc
pushf
or
adc
xor
and
push
les
jae
inc
pop
mov
int3
loope
xchg
lods
push
lods
dec
inc
lcall
cmpl
lods
xlat
inc
paddusb
adc
pop
push
test
add
fldcw
xor
daa
fwait
mov
cmpsb
inc
lock
mov
mov
sbb
inc
pushf
dec
add
mov
jg
call
aam
jbe
les
movsb
lds
cmp
ljmp
loopne
inc
outsl
jmp
sub
mov
cmc
cmp
popa
mov
pop
dec
stc
add
mov
aaa
fstps
loopne
in
dec
stc
repz
ficompl
ret
scas
xchg
loope
enter
in
sub
xchg
jae
pop
adc
cmpsl
mov
fsubp
mov
into
jecxz
xchg
stos
aaa
adc
sbbl
add
jp
xor
rcrl
push
js
sbbb
aas
scas
das
lods
and
in
cmp
inc
lds
push
inc
mov
loopne
xlat
xorb
mov
and
dec
inc
sbb
addb
or
cs
jb
jp
push
icebp
inc
inc
push
jno
imull
sub
mov
popa
pop
loopne
lea
jmp
jno
mov
jecxz
cmp
out
sbb
dec
dec
mov
pop
pop
inc
es
sbb
mov
shl
incb
andb
adc
pop
jle
dec
inc
or
int
dec
ret
stos
mov
test
mov
jns
jecxz
sub
sub
pushf
repnz
ss
xor
ficoml
sarb
cmp
fbstp
add
cwtl
pop
cmpsl
pop
int3
aas
push
rcl
fisubrl
shlb
mov
jmp
addb
mov
mulb
nop
add
aad
test
and
lcall
sbb
shll
fisubs
cmpsb
out
inc
imul
pop
lret
xchg
ret
stc
sbb
xor
leave
and
pop
lods
sbb
cmp
and
nop
je
cltd
mov
fwait
cmp
out
mov
je
push
add
arpl
push
dec
cmp
ss
jmp
fmulp
add
pusha
test
lods
mov
inc
inc
addr16
fidivl
xorb
dec
inc
sbb
or
add
ljmp
push
andb
and
js
mov
cmpsb
loope
daa
push
mov
push
fwait
cltd
sbb
adc
push
pop
sbb
adc
pushf
mov
sbb
xchg
inc
pop
adc
fs
mov
pop
in
sbb
mov
adc
inc
sbb
ret
pusha
pop
mov
fbld
pushw
test
mov
loopne
inc
das
out
inc
xor
pop
lods
adc
popa
inc
push
mov
pop
cltd
mov
sub
outsl
dec
or
inc
xor
std
lock
popa
dec
xchg
or
pop
insl
push
iret
fstps
daa
ret
mov
leave
add
pop
push
xchg
cmp
xor
clc
fildl
sbb
xchg
lcall
cmp
xor
and
imul
imul
or
pop
pop
test
aas
sub
xor
int
pop
lea
mov
ja
adc
test
push
ss
or
mov
cmp
xlat
pop
icebp
imul
sub
jge
push
test
adc
mov
sbb
sbb
fwait
dec
push
in
shl
aad
fistps
divb
out
dec
add
movsb
push
jo
insb
inc
ret
lret
xor
inc
jo
jnp
or
add
orb
and
cwtl
xor
mov
dec
push
loop
es
or
in
push
fsub
mov
dec
mov
pop
stos
cli
add
lock
lea
or
hlt
and
mov
std
scas
movsl
cli
popf
sbb
jge
cmc
movsb
mov
lret
jnp
mov
add
ljmp
arpl
std
add
add
jmp
pop
ret
and
jle
test
push
in
stos
mov
fbld
dec
movsl
or
rolb
cltd
std
bound
push
icebp
out
jbe
or
fwait
mov
xor
das
fwait
mov
xor
int
or
jl
cs
jge
sarb
dec
and
ficomps
fcmove
lret
sbb
push
jne
mov
sbb
clc
jbe
jmp
icebp
inc
lods
jnp
je
push
xlat
lds
shl
xchg
nop
push
or
daa
xchg
rcrl
stc
cmp
xlat
xchg
push
cmc
or
inc
cmc
and
hlt
stc
inc
mov
test
out
daa
inc
lret
sbbb
dec
in
in
aam
adc
add
mov
cmp
or
shll
xor
cmc
push
jle
shll
int3
fs
mov
mov
mov
pusha
pusha
adc
lahf
sbb
jnp
xchg
jo
adc
mov
or
or
shl
cmpsb
add
sti
xchg
sub
jae
sbb
add
mov
sarl
addr16
mov
fistl
loop
nop
and
fucom
mov
dec
inc
out
lea
dec
fwait
xor
leave
in
idivl
repnz
xchg
xor
aas
mov
jne
std
imul
divl
scas
scas
cmp
repz
scas
dec
loopne
and
mov
push
mov
dec
adc
push
sub
sub
movsb
xor
call
mov
dec
sub
inc
das
push
mov
sbb
mov
push
adcl
add
inc
push
mov
aad
scas
xchg
stos
inc
ss
in
jns
xorb
insb
sub
cmp
mov
mov
sarb
in
add
push
repz
cs
and
xor
lock
push
mov
cmp
lahf
mov
icebp
data16
ja
mov
js
xchg
mov
pop
and
data16
test
ret
mov
cs
lods
repz
aam
mov
cmc
rorl
movsl
adc
cs
jl
cmp
and
lret
jg
push
popa
incb
jnp
and
andb
mul
and
gs
jb
push
xor
into
dec
cli
fbld
mov
fistpll
nop
xchg
icebp
popf
into
and
push
pop
fcmovu
mov
dec
int3
nop
popf
aaa
inc
fs
jl
sbb
push
pop
popa
push
stc
mov
in
xchg
xor
push
push
rcrl
or
aas
sub
mov
in
xor
rcrb
mov
and
popf
test
mov
xlat
adc
push
sbb
loop
cmp
dec
and
sbb
out
inc
xor
out
sbb
movsb
out
fwait
dec
pop
cmp
adc
cltd
arpl
inc
stos
xor
pusha
cmp
dec
fneni(8087
jns
add
sub
stc
xchg
cmpsl
mov
push
outsl
jae
icebp
std
jb
test
xchg
adc
adc
and
test
dec
std
notl
mov
cltd
es
je
mov
dec
mov
jo
jge
sti
aad
jb
cmpl
cmp
cmp
pop
mov
movsb
pop
test
mov
mov
xchg
push
lret
pop
xchg
xchg
push
pop
jbe
add
cmp
cmp
scas
adc
out
mov
push
inc
mov
insl
pop
xlat
and
imul
ret
addr16
cli
mov
stos
loop
mov
jno
out
es
jns
clc
aaa
orb
adc
push
and
lods
sbb
mov
mov
jg
test
cltd
or
push
jnp
scas
pop
adc
sub
lcall
or
fbstp
fwait
or
or
aaa
pop
ficoms
in
imull
leave
jae
fsubp
popa
sbb
mov
shll
fsubs
scas
js
or
inc
cmp
dec
iret
xchg
sbb
inc
xor
push
cmp
or
lods
stc
xor
dec
cs
and
icebp
out
adc
out
lret
mov
sbb
add
adc
mov
aam
push
push
add
cltd
and
xor
sbb
sahf
bound
into
outsb
adc
cmp
fisttpl
lret
pop
fidivrs
in
into
push
popf
ror
aad
push
xor
ljmp
adc
cmp
fs
xchg
xchg
movaps
stc
inc
push
sub
in
cmp
popa
int3
add
dec
out
in
add
popa
loopne
cmpl
xor
popf
iret
subl
cmp
jae
inc
imul
jbe
mov
push
xlat
ja
scas
and
jns
dec
mov
mov
mov
push
pop
clc
icebp
std
loop
adc
int
mov
rclb
cwtl
arpl
mov
xchg
xor
out
fwait
push
pop
lret
sub
xchg
and
xor
sti
cmp
bound
sbb
xchg
xor
push
sbb
setnp
aaa
dec
jg
rcrb
imul
mov
and
scas
or
vcmpnge_uqpd
xor
dec
call
sub
jg
xchg
lea
ds
push
inc
pop
inc
mov
fnclex
push
mov
ret
cmc
xor
add
cmpsb
arpl
addr16
movsb
ficomps
or
mov
out
loop
sbb
adc
sarl
rclb
mov
cmp
fistpll
fstpt
jge
pop
or
push
xlat
and
push
mov
les
xchg
das
loope
cltd
testb
xchg
cmpsl
daa
lahf
xor
imul
and
pop
adc
pop
cmpsl
jle
loop
outsb
adc
inc
fs
cli
mov
jne
inc
jecxz
inc
std
mov
mov
sbb
rolb
addr16
shrl
mov
imul
daa
mov
mov
dec
jl
adc
adc
outsb
out
cmp
cmp
out
mov
cmp
jecxz
in
fsubl
xchg
or
mov
xor
jle
cli
mov
push
lahf
xchg
pop
dec
jae
and
jnp
in
or
enter
addr16
sqrtps
xchg
pop
bound
sbb
lret
dec
jb
insl
fdivl
pop
cmp
cmpsb
sub
sub
loop
cmp
fs
js
stc
int
into
inc
jns
cmp
mov
or
sbb
nop
or
stc
je
or
or
push
jg
pop
dec
xchg
push
sahf
push
test
std
bound
pop
ret
inc
push
xchg
sub
mov
mov
hlt
std
and
dec
xchg
cmp
mov
mov
loope
imul
mov
dec
dec
push
inc
jge
jg
in
jne
sub
push
sub
clc
pop
pop
mov
mov
cmp
dec
scas
js
cmp
add
je
sbb
ror
sbb
in
test
movsb
stc
dec
lds
ret
sbb
mov
or
out
jno
adc
jge
xchg
shl
aad
out
ljmp
pop
jb
dec
gs
sbb
sbb
pop
movsb
dec
lds
dec
call
mov
adc
gs
ds
inc
decb
mov
push
cwtl
ljmp
dec
dec
push
ds
pop
lods
cmpsl
push
or
mov
hlt
xor
ds
popa
add
jmp
xchg
mov
mov
popa
fpatan
leave
pop
inc
out
lahf
sub
jl
sti
rorl
fnstsw
inc
xchg
shlb
adc
aaa
cmp
mov
rcll
cmp
lea
or
fwait
inc
loope
mov
add
aam
sbb
xor
outsb
jg
mov
cmpsb
push
scas
mov
inc
pop
shlb
sub
js
push
int3
mov
sar
xchg
sbb
std
fidivl
mov
jg
mov
call
arpl
das
test
js
jl
aad
mov
mov
insl
xchg
std
roll
dec
ficomps
lock
ljmp
add
add
stc
aas
rorl
sti
inc
movsb
cmp
into
push
xchg
icebp
add
es
popf
mov
add
add
xchg
movsb
and
add
add
cwtl
push
add
add
add
mov
add
add
add
orb
add
cwtl
add
orb
add
add
add
xchg
movsb
and
add
add
add
add
xorb
add
xchg
movsb
and
add
add
add
add
jo
add
add
pop
add
adc
add
add
add
add
add
add
cwtl
add
add
inc
pop
add
cmp
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
addb
add
sub
add
push
add
addb
add
add
mov
add
add
add
addb
add
lock
addb
add
xchg
movsb
and
add
add
add
add
add
add
add
jp
add
add
xchg
movsb
and
add
add
add
add
add
add
sub
xor
add
xchg
movsb
and
add
add
add
add
add
add
pusha
jge
add
add
xchg
movsb
and
add
add
add
add
add
jle
add
add
xchg
movsb
and
add
add
add
add
add
jg
add
add
xchg
movsb
and
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
pop
add
add
xchg
movsb
and
add
add
add
sldt
mov
sldt
loopne
add
or
add
xor
add
pop
add
cmp
add
addb
cmp
add
test
add
rolb
add
clc
add
cmp
add
and
cmp
add
dec
add
addb
add
jo
add
xchg
movsb
and
add
add
add
add
add
addl
call
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
xchg
movsb
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
sub
add
xchg
movsb
and
add
add
add
add
add
mov
add
xchg
movsb
and
add
add
add
add
add
loopne
add
xchg
movsb
and
add
add
add
add
add
add
add
movsl
pop
add
add
add
add
add
add
add
add
add
add
add
movsl
pop
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
xchg
movsb
and
add
add
add
jg
add
jg
add
jg
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
xchg
movsb
and
add
add
add
add
add
cmpsl
pop
add
add
xchg
movsb
and
add
add
add
add
add
add
pop
add
add
xchg
movsb
and
add
add
add
add
add
add
pop
add
add
xchg
movsb
and
add
add
add
add
add
push
add
fsubs
add
xchg
movsb
and
add
add
add
add
add
push
add
lock
pop
add
add
xchg
movsb
and
add
add
add
add
add
add
or
add
xchg
movsb
and
add
add
add
add
add
test
add
add
add
inc
add
add
add
add
jl
add
cwtl
roll
add
in
add
add
add
adc
add
fsubrs
add
xor
add
add
nop
aam
add
or
add
add
cmp
add
sbb
add
mov
sbb
add
nop
jle
add
add
fdiv
add
mov
add
add
add
add
add
add
pop
add
add
pop
add
pop
add
add
add
add
add
add
aam
pop
add
add
add
mov
add
adc
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
mov
add
add
add
ljmp
pop
add
mov
add
pop
add
add
add
incl
mov
add
pop
add
add
add
jmp
pop
add
pop
add
add
add
dec
mov
pop
add
pop
add
add
add
call
mov
add
add
add
add
decl
mov
pop
add
add
add
add
ljmp
mov
pop
add
add
add
add
decl
pop
add
add
add
add
add
ljmp
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
imul
insb
add
add
add
jb
popa
insb
imul
arpl
add
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
outsl
insb
xor
cs
insb
add
add
add
push
outsb
imul
imul
arpl
arpl
xor
fs
insb
add
add
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
adc
add
add
mov
add
add
add
add
mov
push
or
add
loope
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
out
lcall
mov
lock
jo
adc
mov
loop
in
or
push
xchg
mov
xor
fisubs
cmovbe
or
or
xchg
push
cmp
inc
sbb
and
or
and
xor
or
adc
sub
mov
jo
add
dec
adc
cmp
rolb
pop
pop
inc
into
push
mov
ret
adc
push
adc
push
call
in
dec
xor
adc
add
add
outsl
das
fisubs
or
jbe
add
or
mov
push
stos
add
cmpl
lahf
and
inc
test
sbb
mov
pop
jnp
push
cli
rep
cld
repnz
sbb
add
xchg
outsl
add
push
dec
aas
cwtl
lcall
sbb
call
xor
mov
sbb
inc
cltd
cmp
push
inc
setne
and
mov
dec
divb
bound
sbb
int
mov
sub
or
xchg
xor
add
lcall
mov
inc
and
shrb
mov
lea
inc
jne
mov
adc
sub
xorb
loope
dec
add
lea
push
aas
pop
mov
sbb
enter
iret
aas
shlb
bound
test
dec
xor
or
and
and
or
dec
inc
lock
add
pop
movb
subl
inc
or
mov
pop
xchg
jl
imul
mov
rdpmc
cmpsb
cmp
pop
pop
pop
pop
pop
ret
push
mov
addb
dec
mov
sub
loopne
scas
push
pop
add
call
inc
mov
jle
cmp
sub
aam
pop
add
out
mov
jne
inc
xor
stos
pop
jo
add
jmp
jo
lods
push
jne
int
leave
push
add
jp
hlt
push
ror
inc
shll
mov
and
pop
aas
add
pop
mov
jmp
cltd
enter
push
fs
push
ds
leave
xor
sub
or
inc
incb
xchg
orb
sub
test
mov
dec
test
mov
inc
pop
adc
add
jne
cmp
jge
jo
inc
add
mov
add
sub
not
jge
add
enter
sbb
sub
ret
shr
int3
rclb
xchg
push
mov
add
cwtl
inc
jmp
and
pop
mov
xor
xor
popw
pop
jmp
pop
push
test
cmp
xor
sub
data16
push
push
sbb
cmpsl
xor
mov
add
push
aam
je
sub
adc
std
sti
ljmp
inc
mov
je
loopne
popa
pop
jge
sub
daa
clc
rcll
add
movsl
mov
ds
call
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
mov
pusha
cmp
cmp
ret
add
and
push
mov
push
lock
push
push
lea
inc
mov
mov
push
sub
adc
mov
pop
cltd
and
add
pusha
lret
shlb
push
hlt
push
leave
dec
or
dec
jb
sbb
push
fs
in
mov
enter
leave
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loopne
add
push
adc
loopne
sub
pop
jns
fcmove
or
xchg
sub
roll
scas
in
fwait
cmp
es
adcb
or
or
mov
or
xor
jle
adc
push
push
or
call
sbb
mov
and
cmp
jae
jbe
jne
in
sbb
subl
xchg
inc
adc
dec
inc
cmp
rolb
test
jo
dec
out
rorb
mov
sbb
into
jge
mov
adc
shl
add
in
test
repnz
push
outsb
mov
inc
push
dec
jg
pushf
and
and
or
push
mov
inc
rcl
iretw
adcl
mov
and
imul
mov
in
xchg
push
sub
mov
lods
popf
and
push
outsl
jnp
repz
xor
icebp
mov
shr
nop
adc
dec
dec
or
or
repz
popa
imul
insl
dec
sub
adc
sbb
inc
mov
dec
adc
jl
sbb
add
test
shr
pusha
loope
push
lea
sub
adc
push
or
add
sbb
sub
jb
gs
test
sub
shlb
mov
and
scas
loop
adc
push
jnp
or
sbb
mov
lods
cmpsb
jmp
inc
jo
insb
imul
and
gs
out
pushf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
rcll
arpl
jns
mov
jae
fwait
xor
rorl
xchg
popa
fadds
js
inc
jnp
mov
data16
mov
aas
inc
js
je
push
movsb
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
les
sbb
jl
imul
mov
xchg
lcall
or
mov
cmp
jmp
push
xchg
cmp
dec
xor
or
push
jbe
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
pop
add
test
add
lds
add
mov
add
pop
add
add
adc
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
clc
movb
movl
hlt
movb
