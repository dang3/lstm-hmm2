out
int3
call
inc
outsl
outsl
insb
gs
outsb
add
or
add
inc
popa
insb
jae
add
jb
gs
push
jns
je
insl
add
xor
or
jae
inc
out
inc
push
push
cs
jmp
or
outsl
jb
dec
outsb
je
subb
divb
jg
test
insl
popa
insb
insb
add
int3
fistpll
aaa
mov
addr16
cmpsb
jbe
lret
cmp
jns
call
mov
mov
das
push
int
call
imul
out
inc
popa
push
sub
add
mov
adc
divb
cmp
push
push
inc
fdivr
mov
pop
add
dec
popa
je
jbe
dec
mov
add
jmp
out
fcomps
cld
test
inc
js
outsb
fs
xchg
xchg
in
jne
add
outsb
arpl
int3
sahf
loope
mov
je
pushf
mov
add
adc
push
cmp
xor
pop
xchg
cs
imul
or
or
cmp
and
add
iret
xchg
mov
stc
pop
xor
addr16
and
and
push
jae
push
jle
cmp
or
daa
std
mov
lock
or
es
or
push
popa
mov
pop
popa
and
test
or
and
es
insb
popa
jae
add
or
rcrb
dec
enter
push
inc
push
push
dec
push
add
add
imul
inc
adc
and
cld
push
add
in
sub
add
fcmovne
leave
in
int3
add
xor
xor
or
and
push
adc
push
fstpt
arpl
adc
sub
aaa
insb
push
andps
repz
dec
dec
cltd
jecxz
add
push
push
push
popa
adc
mov
adc
dec
data16
push
sbb
in
or
jo
inc
mov
insb
and
mov
std
inc
sbb
mov
inc
adc
jmp
sub
imul
mov
push
dec
std
sbb
mov
xor
add
cmp
add
arpl
popf
mov
or
das
add
dec
repz
aas
mov
inc
enter
pop
lcall
test
mul
xor
jecxz
decl
push
add
sbb
mulb
inc
pop
fs
das
mov
lock
sub
or
jge
in
pushf
sbb
nop
and
inc
fistl
adc
ss
fs
add
or
mul
pop
sahf
in
testl
sbb
dec
pop
sti
test
repnz
pop
cld
ret
dec
add
out
decb
incb
xlat
sbb
imul
arpl
les
test
push
inc
jb
popa
add
ffreep
sbb
mov
add
hlt
add
loope
xchg
inc
inc
mulb
arpl
mov
adc
push
inc
or
push
cld
mov
xchg
das
pop
cmovae
jne
sbb
fstpl
mov
jns
push
add
clc
cmp
insl
neg
push
jo
and
add
jo
fwait
cmp
add
dec
jae
imul
dec
jo
andb
adc
leave
add
inc
mov
fldenv
ret
in
sub
mov
and
jp
pushf
test
cmp
push
push
and
outsl
insl
jae
jg
aaa
das
roll
add
inc
pushf
or
lock
fs
in
in
pop
nop
lret
adc
mov
mov
xor
add
inc
xor
add
or
fadds
mov
movsb
jbe
mov
jmp
sub
hlt
inc
stc
add
or
pushf
ficoml
out
clc
mov
push
mov
mov
leave
cli
imul
jl
lcall
xchg
cmpsl
or
jnp
andb
jnp
inc
xor
shl
or
aad
push
inc
sbb
cltd
popa
test
movsb
push
inc
jno
jnp
add
sub
add
orl
jo
movsl
arpl
push
or
dec
test
and
decl
and
rclb
popa
gs
pop
mov
clc
and
jmp
outsb
ja
aaa
add
mov
and
jmp
lahf
or
loope
insb
lahf
pop
adc
cwtl
insl
adc
out
cmpsb
loop
jne
mov
scas
xchg
pushl
outsw
jb
inc
cmp
xor
jg
or
jo
je
push
int
pop
dec
sbb
sarb
fsubr
lret
push
inc
popa
jne
scas
outsb
fs
jge
dec
adcb
ja
add
test
jl
adc
push
in
push
dec
mov
rep
jns
movsb
or
rolb
jno
insl
rorl
sub
dec
enter
xchg
shll
add
xlat
push
data16
xchg
sbb
gs
mov
add
addl
jmp
adc
cmp
xor
roll
frstpm(287
decb
lea
loope
xchg
insb
mov
add
push
and
xchg
aas
or
xchg
pushf
in
mov
fwait
pop
sbb
push
pushf
add
inc
push
ljmp
add
loope
or
adc
sbb
cwtl
fs
mov
and
push
push
mov
popa
adc
aas
push
ret
out
mov
push
ds
inc
fs
sub
push
test
cmpsb
mov
ljmp
cmpb
rcr
sbb
push
lods
adc
push
loope
cltd
add
ffreep
or
push
push
inc
cmp
add
std
lods
lret
daa
fcoms
push
push
push
call
dec
in
add
push
in
gs
imul
add
sub
inc
jb
mov
jns
into
jge
lcall
xchg
adc
sbb
mov
push
or
insb
mov
add
cwtl
in
insl
sbb
sub
pop
xchg
xchg
and
clc
cli
jns
adc
insb
pop
jae
test
aaa
or
fsubrs
iret
add
imul
and
dec
out
or
ja
daa
adc
push
or
jb
out
dec
adc
inc
mov
pop
or
inc
jae
jbe
lea
dec
scas
sub
push
xor
pop
cmp
enter
ja
push
sbb
add
int3
xor
pop
push
cltd
and
xchg
jbe
movsb
popf
sbbb
test
call
xchg
in
scas
mov
mov
mov
and
cltd
inc
test
subb
xor
jne
push
outsb
imul
fs
ret
pop
sbb
ja
xor
push
and
lea
clc
cwtl
sbb
add
sub
adc
add
xor
pop
mov
push
or
and
nop
out
inc
outsb
jns
vmread
inc
mov
mov
fwait
sbb
loopne
sub
pop
insb
xor
sub
mov
popa
ja
sbb
adc
lcall
out
push
outsl
sub
adc
push
push
sbbb
cmc
adc
push
push
int
adc
data16
fadds
fmull
adc
or
aad
or
adc
xor
push
push
test
sub
pop
xchg
adc
pop
adc
dec
imul
outsl
fs
mov
push
je
sub
xor
jmp
push
dec
gs
clc
inc
dec
inc
sbb
inc
in
das
or
das
jge
repz
les
sub
or
nop
mov
lds
daa
fcomps
shrl
or
notb
adc
cmp
ss
push
or
add
push
inc
lods
add
fistpll
pop
or
dec
fs
je
imul
lcall
movsb
xchg
adc
xchg
xor
push
insl
or
and
or
add
push
xor
mov
adc
or
mov
adc
inc
imul
jne
bound
hlt
and
mov
outsb
adc
mov
loopne
jb
adc
aas
xor
sbb
aaa
sub
pop
call
add
mov
lock
jne
ret
nop
sub
adc
daa
mov
roll
sarb
dec
xor
mov
push
sbb
push
jmp
orl
clc
hlt
lock
or
enter
loopne
enter
fdivrs
enter
ror
enter
enter
orl
mov
enter
test
xor
and
sbbl
or
mov
test
orl
and
jl
or
enter
js
enter
jo
lret
and
push
in
scas
clc
add
mov
and
and
call
mov
add
mov
and
mov
inc
inc
pop
ret
push
pop
ret
push
cltd
ja
pop
andps
mov
jo
clc
aaa
jle,pt
dec
dec
and
insb
jg
inc
imul
and
arpl
and
xor
xor
sub
loopne
out
std
cmp
push
imul
outsl
data16
insl
mov
and
je
popa
inc
inc
add
add
xchg
jle
mov
sub
gs
insl
ss
in
leave
jns
popa
imul
jmp
outsl
arpl
fs
test
jae
gs
pop
mov
bound
pop
mov
adc
jle
popa
mov
leave
cmpl
test
and
es
push
stos
pop
int
mov
es
mov
dec
jg
je
dec
das
push
mov
into
mov
mov
addr16
mov
dec
add
inc
or
and
mov
lret
imul
or
or
sub
mov
cmp
adc
aas
lret
mov
adc
fildll
fildll
add
pop
sbb
jp
add
das
mov
aas
inc
and
sub
sub
inc
dec
sub
xor
push
ficoml
cmp
bound
pop
cmp
hlt
pushl
jmp
lret
jns
fucomip
idivl
fildll
jl
pop
cmp
add
js
and
mov
in
mov
pop
add
pushl
std
dec
or
mov
adc
rorl
or
sub
lret
add
mov
cmp
shlb
xchg
sub
loopne
mov
and
and
ljmp
jle
stc
adc
add
leave
and
add
xchg
mov
cmp
sub
mov
add
fnstenv
inc
mov
sbb
rcrb
cmp
mov
adc
testb
jne
orl
adc
aas
stc
lea
mov
cmp
push
outsl
mov
dec
pop
mov
cld
sub
sbb
xor
mov
popa
push
mov
inc
sbb
add
add
push
jge
push
and
mov
das
mov
movl
push
sub
and
addl
movsb
mov
mov
insl
jge
lret
mov
pop
cmp
rolb
sbb
xor
out
jle
and
or
rclb
cmp
fcmovnb
enter
out
mov
sbb
dec
pushf
pusha
das
pop
or
add
cli
pop
jle
push
push
mov
lea
movb
add
sbbl
xchg
sarl
and
test
je
sti
mov
or
mov
or
sbb
mov
leave
mov
rol
std
aaa
sbb
add
ret
pop
pop
pop
pop
mov
push
faddp
add
mov
sub
jae
jg
lcall
mov
mov
push
and
or
jne
push
mov
add
jmp
or
out
mov
fimuls
pop
push
lea
inc
sbb
ja
popa
pop
push
jne
push
push
mov
cmp
jbe
fld1
incl
sub
add
jmp
test
jne
lods
fisttpl
sbb
in
scas
dec
mov
add
pop
sti
or
inc
loopne
repnz
sub
popa
clc
cmp
and
jmp
fidivrs
loope
pop
jl
push
add
cmp
jbe
ljmp
and
pop
das
adc
xchg
xor
push
mov
push
dec
jo
cmp
jne
fucom
repz
pop
cmp
jae
mov
sti
in
aaa
sub
ds
and
jae
shl
ret
fdiv
popa
lods
into
sbb
cmp
pop
push
aas
jp
push
jo
rolb
pop
or
xchg
adc
mov
jmp
mov
push
jnp
push
std
sub
add
jbe
ret
push
mov
mov
xchg
mov
xor
cli
jge
aad
jmp
repz
addl
imul
std
mov
pop
and
mov
addr16
in
jo
and
faddl
popa
bound
jg
aad
dec
les
lea
dec
jg
js
push
mov
inc
or
mov
addl
sub
idiv
je
fildll
pop
and
movzwl
add
cmp
pop
ss
ja
dec
mov
cmp
adc
xchg
pop
adc
add
mov
mov
or
hlt
lds
jns
xchg
mov
je
lods
jne
cwtl
push
cmp
pop
dec
scas
pop
sbb
je
xchg
inc
pop
cmp
mov
xchg
movsbl
xor
cmp
jo
mov
scas
or
mov
pop
js
leave
std
mov
cmp
add
lcall
push
add
pop
mov
movsb
ret
test
btr
mov
push
jle
pusha
or
insb
mov
dec
mov
sbb
cli
lea
mov
push
incb
sbb
iret
jb
mov
cmp
jg
fsubl
sbb
add
inc
hlt
mov
inc
sbb
lcall
fadd
adc
andb
lea
mov
incb
fnstenv
shrb
push
mov
movl
inc
and
call
das
push
or
imull
iret
mov
data16
pop
inc
cmpsb
cld
fisttps
sbb
fidivrs
jge
or
faddl
mov
cmpsb
lea
rolb
or
push
je
testl
rol
or
jmp
mov
cmp
push
jl
decl
mov
loopne
xor
sbb
mov
fdivs
mov
lock
cmp
mov
dec
mov
mov
xchg
inc
bound
pop
inc
cmp
cmp
adc
mov
xor
or
testl
fisttps
jns
loopne
mov
ret
mov
test
rorl
test
add
mov
jne
subl
insb
mov
pop
rorb
mov
addr16
xchg
dec
out
sub
gs
mov
jmp
adc
aam
loopne
jge
inc
adc
cmp
jne
and
fidivrl
insl
push
mov
iret
xchg
and
stos
mov
scas
ljmp
mov
pop
leave
outsl
xor
xor
jmp
aaa
inc
cmp
enter
add
xlat
out
loop
fisttpll
scas
mov
inc
xor
xor
outsl
ret
testb
jne
cmp
inc
filds
xchg
das
pop
xor
xchg
mov
xlat
mov
mov
jne
aas
jl
lock
cmp
pop
dec
clc
sub
mov
mov
xor
inc
clc
mov
sub
mov
sahf
std
and
mov
add
loope
fcoml
data16
movl
movl
loope
add
inc
mov
shr
dec
shrl
in
or
fdivrp
cli
adc
sbb
inc
es
jb
bound
jae
add
push
mov
mov
mov
jg
or
sti
addr16
lea
push
mov
jecxz
roll
loope
xlat
mov
imul
ja
clc
iret
mov
call
xchg
mov
clc
xor
shrl
mov
ret
mov
mov
add
jecxz
cmp
push
pop
sub
out
cvttps2pi
cmp
jb
sbb
or
jae
andps
adc
into
mov
inc
and
jbe
lea
xor
lds
add
sub
cmp
inc
jnp
push
dec
faddp
xchg
inc
or
or
mov
cld
or
mov
push
mov
mov
jne
or
adc
push
or
cmp
sub
in
icebp
pop
clc
addb
sub
push
lea
sbb
out
lock
pop
lahf
adc
call
add
inc
xchg
loopne
cmp
cmp
dec
fistps
lcall
rcrl
dec
push
shll
sub
mov
iret
add
cwtl
loopne
je
xchg
xlat
pop
mov
pop
mov
shr
add
xor
sub
adc
fistpl
add
push
ret
orl
loop
negl
add
push
jg
or
pop
ds
lea
jl
mov
push
adc
add
outsb
jae
ss
mov
pop
rorl
dec
iret
push
gs
shlw
adc
mov
and
roll
sbb
lea
ja
dec
cld
fmul
lea
or
cwtl
cld
sti
pushl
neg
fldz
fstl
add
js
or
rcr
outsb
lea
mov
cmp
adc
add
mov
jecxz
aas
insb
pop
sbb
rorb
lea
je
sarb
shlb
dec
add
mov
and
rclb
sbb
je
mov
jg
decl
icebp
jg
mov
cmp
jne
mov
cmp
jbe
imul
icebp
sbb
add
fmuls
add
mov
ficomps
scas
push
ds
clc
add
loop
push
mov
loop
fxsave
es
mov
add
enter
clc
or
mov
flds
inc
sbb
in
sub
or
das
cmp
mov
pop
sbb
add
xor
enter
pop
jg
enter
aas
adc
pop
xor
inc
add
push
mov
mov
inc
mov
pop
ds
movaps
jg
scas
mov
ds
sbb
sub
mov
sub
inc
lds
nop
push
mov
push
mov
test
push
push
dec
push
in
outsb
das
jle
cmp
ja
pop
or
push
lock
fcmovnu
ds
jae
ss
mov
push
adc
in
xchg
mov
sbb
lock
push
adc
mov
push
testb
je
adc
loope
jmp
mov
pop
rorl
testl
call
sbb
jge
push
iret
shrb
arpl
mov
and
in
std
in
mov
push
cmp
jne
test
daa
dec
movb
imull
push
lea
mov
and
jne
push
fmull
pop
incb
lcall
inc
lock
xor
mov
je
fistpl
pop
mov
dec
pop
loopne
add
inc
loopne
je
faddl
xchg
add
add
xor
setne
in
sub
cmp
aas
inc
sbb
push
test
push
mov
and
mov
or
pop
cmp
fildl
pop
clc
fists
pop
dec
sarl
mov
cmp
jne
jl
mov
add
pop
mov
and
and
fisttps
mov
add
dec
jne
mov
sbb
cld
mov
xorl
inc
add
lea
add
decl
fadds
daa
fsubrs
pop
movd
testb
jne
sub
cld
enter
or
cmp
out
fistps
sub
cmpl
popa
mov
scas
add
jge
xor
imul
inc
mov
pop
call
add
repz
mov
insl
sub
in
lock
mov
std
sahf
je
push
jl
mov
add
dec
sahf
arpl
jl
loopne
negl
cmpb
mov
cmpb
jnp
and
add
dec
shlb
les
test
inc
dec
mov
loopne
mov
loopne
adcl
out
out
cltd
inc
ds
xor
add
sbb
clc
je
cmpl
addl
add
movq
clc
mov
cld
sbb
lret
add
fdivrs
jne
jbe
imul
imul
mov
aaa
push
dec
jne
pushw
mov
mov
inc
add
aad
lret
inc
cmp
and
pop
adc
add
clc
data16
pop
icebp
mov
cli
das
aam
dec
pop
cmc
movsb
dec
bound
cwtl
mov
pop
call
jo
sub
je
push
fsin
jmp
pop
jmp
mov
and
xchg
arpl
in
and
popf
sbb
mov
iret
mov
ret
loop
jne
mov
mov
push
adc
aaa
enter
js
aaa
pop
adc
jnp
or
mov
sbbl
cmpsl
js
scas
dec
jl
cmpb
xor
cmp
negl
fcoms
ficompl
std
and
fdivrs
sbb
movl
jp
fstps
out
in
loopne
jae
icebp
inc
push
or
mov
call
mov
arpl
scas
cmp
lock
xchg
cmpl
xchg
add
mov
loopne
sbb
repnz
notb
add
jge
or
call
shrb
das
and
enter
xor
repnz
imul
or
adc
aas
fwait
add
je
dec
je
jmp
or
jno
inc
ss
iret
sub
mov
sbb
cmp
sub
jle
lds
xor
push
sub
rorb
push
xor
xor
push
ja
fnstsw
xor
jg
je
push
sysret
cltd
nop
subl
mov
jbe
sbb
inc
xor
jae
push
lods
loope
jmp
ja
inc
xorl
cltd
nop
testl
jo
adc
je,pn
lea
test
push
mov
push
lds
ds
lea
xor
mov
out
push
jns
jne
mov
mov
add
add
pop
jl
cli
clc
jbe
mov
cmc
arpl
ret
sar
cmp
jne
xchg
mov
pop
das
rorb
cmp
sbb
inc
lea
mov
inc
clc
or
repnz
lock
inc
cmpsl
out
rolb
add
add
jle
in
add
add
call
inc
out
clc
pop
jbe
pop
scas
enter
loop
push
in
loopne
add
mov
cld
xlat
out
xor
or
out
dec
filds
and
jae
mov
or
pushl
mov
out
sti
jg
xor
shl
icebp
imul
mov
adc
data16
pop
dec
sti
shlb
mov
push
push
and
mov
jmp
mov
inc
cmp
or
repz
sbb
in
pop
adc
mov
add
mov
jnp
cld
iret
dec
cli
jmp
mov
or
std
cmp
jne
mov
lcall
or
ds
mov
inc
or
dec
or
and
and
pop
pop
stos
sbb
roll
dec
mov
jnp
mov
cmp
mov
mov
inc
dec
fmull
adc
dec
rclb
fcompl
lret
sub
popf
pop
fcompl
popf
jl
test
push
xor
mov
mov
adc
repz
mov
inc
inc
mov
ret
das
jle
pop
cmp
mov
xor
adc
add
fcos
lahf
mov
test
je
test
je
push
mov
inc
pusha
pop
or
mov
add
adc
jb
jmp
insl
imul
out
jo
shlb
xchg
hlt
subl
mov
sbb
add
ffree
aas
add
and
into
sbb
push
or
and
inc
mov
rol
out
jmp
fcoms
mov
mov
mov
and
data16
mov
int
and
jns
ret
pop
or
outsl
cwtl
lods
loopne
outsl
push
jmp
cmp
ja
movzbl
add
mov
inc
xor
scas
dec
push
mov
mov
call
jg
push
incl
inc
jg,pt
loopne
int3
pop
pop
push
push
push
mov
pop
pop
pop
jne
ss
pop
repz
pushl
daa
into
sub
mov
stc
and
nop
sbb
cmp
je
cmp
ja
sub
jg
jmp
outsl
or
sub
jle
cmp
adc
sarb
sti
pop
sbb
or
mov
inc
xor
shll
dec
pop
popa
insb
not
outsl
sarl
push
mov
or
adc
neg
and
or
jl
cld
sti
rcr
sbb
ret
jle
or
or
mov
adc
push
add
clc
sub
pop
cli
push
push
fisttpl
in
mov
or
add
mov
into
ja
fidivs
and
add
add
push
cmp
sbb
add
jecxz
cli
push
mov
jmp
or
mov
push
outsl
cli
and
or
and
js
or
add
adc
sub
std
cwtl
das
jbe
and
pop
jmp
inc
imul
pusha
dec
push
cmp
pop
mov
adc
xlat
push
fs
in
insl
shrl
es
test
adc
insb
bound
dec
or
or
or
shrb
add
adcb
and
test
jne
push
pop
sahf
dec
inc
movsb
xchg
aam
add
jmp
and
lds
mov
dec
dec
lea
fsubrp
jmp
add
andl
xor
cmp
nop
pop
push
sbb
sti
push
push
pushw
and
loop
sub
cmp
pop
fcomi
jnp
jae
pop
pop
xchg
in
or
fnstcw
cld
std
and
fwait
orw
insb
fistps
add
fldcw
pop
cmp
repnz
jl
push
jne
mov
sub
pop
add
sti
ljmp
jmp
or
push
pop
clc
inc
shll
jb
sub
push
mov
and
js
dec
jo
icebp
xor
sbb
mov
scas
fdivs
divb
fistpll
mov
ja
and
adc
jne
xor
popa
sub
and
cmp
cmp
lahf
jmp
push
rclb
stos
pop
fnstcw
mov
cmp
int
aas
outsl
je
add
add
lcall
push
fstl
fstl
sbb
rol
mov
mov
cmc
push
fdiv
fisubrl
pop
jnp
pop
outsb
bound
jle
mov
imul
lods
cmpsl
das
push
push
jp
loop
xchg
sbb
xor
roll
sbb
push
adc
cmp
xor
adc
or
incb
cld
or
ret
cs
push
and
subl
fstpt
out
add
push
add
cmp
je
mov
push
sub
jae
jae
je
and
je
je
pop
je
ret
xchg
xchg
jbe
jne
arpl
push
push
data16
idivb
xor
or
cmp
ja
jecxz
test
add
add
add
gs
int
jg
shll
and
push
neg
jle
js
pop
sub
jmp
inc
cmp
outsl
dec
jmp
mov
sahf
aaa
in
mov
popa
jb
mov
mov
add
fisubrs
ret
or
mov
lret
test
mov
not
out
mov
jg
and
loopne
out
mov
mov
gs
sub
inc
mov
rol
xchg
pop
or
cmp
jae
or
pop
inc
dec
stos
icebp
mov
and
dec
inc
xor
add
inc
jne
dec
jne
pop
sbb
decb
cmp
pop
repz
mov
sub
pop
je
inc
or
inc
dec
jne
pop
outsb
cmp
shll
push
iret
jl
fstpl
add
mov
pop
jge
fistps
sbb
lahf
fmulp
mov
push
sti
sub
je
das
cmp
add
popa
cmpb
jl
and
imul
push
popf
xchg
jge
mov
xchg
cmp
stc
xor
sbb
fidivrl
and
jmp
fstp
fldt
or
in
jg
jns
imul
enter
in
cli
or
or
dec
push
in
ret
mov
adc
daa
aas
stc
and
sbb
add
jle
mov
mov
xchg
jl
daa
sub
aas
std
out
xchg
sub
sub
pop
jecxz
add
leave
int
cld
out
mov
aaa
inc
jbe
imul
cmp
dec
mov
mov
bound
cmpb
xlat
fadds
repnz
nop
lods
outsb
xor
xchg
push
or
push
push
dec
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
pushl
lds
stos
mov
cmp
or
mov
pop
out
sub
cld
incl
push
daa
cmp
inc
xor
cmp
call
mov
sti
jmp
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
call
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
jmp
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
call
mov
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fdivr
jmp
addr16
repz
mov
subb
and
and
outsb
bound
js
add
xor
fninit
fwait
cmc
fbstp
test
mov
or
mov
iret
mov
ljmp
rclb
jb
pushl
jge
or
mov
lea
bound
mov
arpl
and
out
mov
enter
cmp
sete
mov
pop
pop
lea
mov
or
cmp
ret
push
dec
js
inc
stc
mov
jecxz
lea
add
outsl
outsl
xchg
mov
sbb
pop
inc
js
pusha
aaa
aas
push
or
rclb
test
les
nop
jle
inc
sbb
movups
in
das
lahf
icebp
pop
fimuls
xor
jle
push
stc
xor
add
es
int3
add
scas
add
push
icebp
add
stos
pop
and
sarb
std
pop
mov
mov
sub
rol
call
and
imul
sbb
js
adc
push
mov
mov
pop
sbb
pop
fadds
adc
jne
das
ficomps
mov
mov
mov
sub
push
mov
adcb
adc
lahf
pusha
pushl
paddd
mov
pop
dec
lahf
add
xchg
loope
mov
ret
loop
jl
push
push
clc
xor
mov
mov
mov
lcall
jl
add
cli
inc
mov
mov
jno
ret
add
mov
rcrb
pusha
mov
push
add
push
lea
push
sbb
mov
clc
aam
jmp
inc
xor
ret
rclb
push
adc
aad
xlat
clc
mov
add
add
in
es
or
cmp
fnstsw
or
add
mov
movsb
lods
adc
mov
pop
adc
sub
orl
sub
jnp
clc
dec
int
xor
xor
jb
cmp
adc
sbb
lret
or
jne
or
jg
inc
mov
xor
repz
or
add
out
pop
lock
movzbl
add
adc
mov
pop
xchg
dec
divl
cltd
sbb
das
pop
or
test
inc
stc
in
sahf
mov
idiv
or
inc
movsb
rorl
mov
mov
outsl
cli
leave
jne
mov
lods
nop
push
xchg
jmp
sarb
jno
mov
sqrtps
scas
je
pop
hlt
notb
ret
pop
add
or
pop
jbe
mov
jle
lahf
add
inc
pop
pop
repz
pop
mov
adc
aas
insb
adc
mov
xor
das
jo
mov
push
out
lods
arpl
dec
idivb
jecxz
shrl
ds
inc
pop
push
data16
or
pop
data16
jbe
cmp
roll
add
adc
popa
lock
push
bound
jecxz
push
ja
push
inc
jg
jmp
pop
fsts
inc
das
jbe
mov
add
push
jo
mov
push
mov
roll
cmp
aam
push
push
mov
and
loope
xor
xor
mov
add
pop
sbb
aad
lret
mov
cmp
in
sbb
jnp
and
add
dec
jne
cmp
jmp
pop
jmp
outsb
pop
lock
push
lea
inc
or
xchg
lcall
dec
je
jmp
mov
mov
test
jne
xor
push
flds
mov
and
psadbw
or
call
aam
mov
mov
stos
pop
inc
cwtl
pop
add
pop
sarl
xor
mov
pop
or
mov
call
push
add
add
mov
or
shl
mov
push
stos
cli
fucompp
cmpsb
lcall
push
les
adc
lea
ret
adc
fcomps
cmp
jmp
lret
xor
adc
jmp
jecxz
or
loopne
iret
push
pop
add
aaa
iret
pop
jmp
push
push
test
jl
xor
pushl
rorb
mov
mov
mov
movl
or
ja
jne
or
nop
dec
cmp
inc
or
inc
or
rolb
pop
loopne
push
enter
mov
clc
scas
sub
lock
mov
sub
mov
nop
inc
in
jnp
add
loopne
movsl
mov
pop
in
rorb
sbb
pop
cmp
sbb
or
std
push
jo
scas
add
or
mov
mov
stc
jg
sbb
or
movsl
adc
cmpsl
mov
mov
idiv
cmp
jne
xor
xor
das
mov
adc
or
dec
rcl
loopne
scas
jne
jl
incl
daa
jge
add
subb
je,pt
das
adc
lret
cmpb
xor
add
cmp
sbb
movsbl
les
sti
xor
jg
loope
ret
push
sbb
or
nop
decl
ja
cmc
movsb
rcrl
int3
add
jbe
hlt
pop
mov
call
pop
cmp
ss
das
sbb
loopne
jbe
sub
dec
jle
sbb
cmp
push
dec
adc
imul
fadds
pop
iret
mov
out
xor
inc
add
add
rclb
out
sbb
xor
pop
sbb
dec
jl
in
cltd
mov
xor
inc
adc
mov
or
pop
mov
jne
xor
jbe
jmp
sub
adc
add
mov
inc
or
add
scas
lds
in
lcall
lret
cli
clc
loope
fldt
xchg
mov
cmpb
xchg
loope
xor
out
test
int
das
add
in
jle
hlt
movsb
pop
mov
int3
in
adc
je
and
add
movb
xchg
mov
sub
leave
inc
inc
xchg
add
mov
push
jg
push
sbb
ror
push
mov
sub
inc
aas
inc
or
ret
icebp
push
inc
jne
inc
loope
and
dec
mov
sbb
ja
cli
cmp
push
adc
and
or
lds
pop
jle
sbb
add
roll
ljmp
cmp
leave
cmp
in
inc
cmp
mov
pusha
jl
cwtd
psubq
sbb
or
jmp
pop
inc
mov
dec
add
jle
xor
pop
in
popf
and
rorb
test
pop
je
iret
lret
xor
xor
cmp
xchg
pusha
cmpsl
dec
pushf
sahf
mov
sub
cs
outsl
adc
imul
adc
js
sti
mov
lea
test
adc
loop
add
and
push
lcall
add
sbb
and
pop
mov
insb
mov
mov
or
or
ret
add
xor
test
mov
das
jnp
enter
cmc
ss
pop
fldcw
out
pop
roll
fisubrs
adc
push
rorl
insl
fdivrl
xlat
dec
inc
roll
pushf
push
call
dec
add
test
pop
sbb
push
sub
pop
sbb
inc
add
xor
das
lcallw
jnp
stos
ret
inc
dec
dec
xchg
dec
xchg
push
cmp
jne
fdivp
pop
add
pop
xchg
cmp
jne
nop/reserved
adc
loopne
sbb
push
and
adc
sahf
bndstx
jg
faddl
jne
incl
lea
lret
inc
inc
aad
sub
das
inc
inc
int3
mov
dec
or
call
cmp
adc
inc
call
cmp
jns
movsb
jnp
std
outsb
in
xchg
push
std
fadds
dec
pushf
mov
adc
fstl
lock
inc
sti
cmp
mov
mov
fdiv
mov
aad
loopne
fisttpl
test
mov
or
in
xchg
jge
xor
test
mov
cmp
adc
loopne
cmpb
add
push
add
cli
in
push
insb
adc
jg
lea
mov
push
push
push
push
push
cmp
repz
or
pop
jle
add
rorl
loopne
pop
scas
or
jae
fadds
sbb
pop
push
push
and
leave
iret
inc
push
pop
add
idivl
jmp
jne
movsbl
inc
inc
pop
add
mov
jle
sbb
in
dec
inc
push
jecxz
pop
ja
leave
in
mov
adc
loop
mov
mov
jecxz
or
adc
inc
add
mov
adc
push
sbb
adc
outsb
je
fildl
lcall
popa
push
shl
sahf
pop
lods
jae
dec
addl
dec
fsubrl
ret
fbld
add
test
lea
fiadds
cmp
pop
ja
js
neg
mov
adc
stc
add
adc
sbb
sti
push
jns
je
orl
add
or
daa
lcall
nop
loopne
subl
push
ds
mov
add
jl
push
pushl
adc
or
add
int3
add
test
or
sub
jecxz
push
and
mov
mov
cmp
inc
or
lock
ret
dec
mov
dec
hlt
cmp
add
push
add
inc
jo
mov
sar
mov
jecxz
add
lds
cmpsb
inc
mov
mov
push
clc
aas
push
jo
pop
int3
cmp
mov
enter
jbe
dec
xor
mov
cmp
jne
inc
inc
data16
jg
shlw
pushl
add
dec
jne
faddp
xor
or
lds
inc
or
out
imul
adc
or
sbb
repnz
cmovg
cmpsl
sbb
pop
adc
dec
push
test
test
in
or
jmp
cmpxchg
sbb
outsl
sbb
sub
add
xor
sub
ss
dec
add
shlb
call
std
and
stos
add
and
dec
in
loop
adcb
stc
mov
mov
inc
push
push
adc
out
mov
rorb
fdivs
ljmp
push
push
mov
cwtl
jecxz
mov
sbb
cmp
mov
out
pushl
add
add
or
xor
popa
loop
mov
mov
into
add
xchg
push
js
xor
cmpsl
xor
and
orb
xor
inc
cs
pop
stos
nop
inc
hlt
das
cmp
mov
add
xlat
or
sbb
das
sub
jbe
mov
mov
test
outsl
or
xchg
jae
mov
mov
or
cld
mov
loop
xor
nop
or
ret
xor
xor
and
or
dec
push
adc
xchg
ds
jg
jg
je
cmp
push
sub
jg
cld
pop
mov
dec
je
jmp
add
add
fistpll
std
je
jmp
cmp
cmp
adc
jg
cmp
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
pushl
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
pop
jl
pop
or
out
decl
mov
push
or
cmp
pop
ret
add
fs
push
pop
pcmpeqd
arpl
js
je
push
dec
cmp
dec
add
push
dec
pop
clc
rcll
cmp
je
add
xor
fadds
cmp
decb
mov
push
mov
or
jecxz
inc
adc
loopne
jmp
add
sbb
inc
or
pop
mov
pop
mov
and
sub
inc
or
inc
cmp
dec
add
movsl
lock
cmp
cmp
jne
or
pcmpgtd
add
push
ds
test
push
ds
jle
dec
mov
pop
or
je
add
pop
shr
push
loope
inc
xor
jmp
xor
push
in
loopne
and
cmp
in
xchg
inc
out
stos
cmp
jle
ds
inc
mov
inc
cmp
jg
out
xchg
dec
inc
sarb
or
adc
sbb
mov
mov
movsl
popl
add
fimuls
push
adc
popa
sub
or
jno
and
jne
orl
repz
pop
push
push
sbb
fadd
scas
inc
repnz
inc
or
mov
dec
pop
push
push
and
fs
jge
call
push
out
or
sarb
push
adc
adc
jl
les
mov
lahf
or
in
jecxz
add
scas
and
dec
iret
dec
add
inc
rolb
push
add
jnp
aam
dec
scas
mov
xor
pop
ret
push
fisttpl
inc
dec
aaa
cmpsl
push
and
enter
sub
dec
les
jecxz
pushf
shrb
push
sub
sbb
cld
shrl
mov
push
add
mov
pop
dec
je
cld
fidivrs
pop
push
mov
or
fsubr
add
or
rcll
pop
pop
xchg
test
mov
sbb
int3
mov
dec
xchg
mov
aaa
mov
sub
sbb
or
ret
mov
adc
and
and
dec
cmc
fsubrl
sbb
add
loopne
inc
cmpb
shll
mov
stc
mov
mov
cmpl
jge
adc
ja
add
and
xchg
loop
fcomps
mov
test
push
pop
fs
cmp
pushw
ret
xor
in
inc
push
adc
ret
jbe
mov
or
ret
dec
push
int
cmc
loopne
push
or
sub
inc
pop
mov
pop
ret
fstpt
ja
dec
jb
jge
jmp
decl
mov
or
adc
repz
js
cmp
fsubrs
jb
xor
add
sbb
insb
lret
jl
sarl
or
jle
adc
jnp
mov
outsl
jno
call
sbb
icebp
xor
jne
movl
add
addb
pop
stos
shll
jne
jae
popf
daa
cmp
popa
imul
in
popf
pop
sub
inc
test
in
in
scas
js
lock
or
sbb
push
ds
cmp
jne
push
and
cmpb
scas
sub
jne
ja
test
pop
xor
mov
xchg
push
test
pop
icebp
out
dec
mov
or
pop
cmp
xlat
jg
adc
push
and
mov
rcll
or
push
push
mov
xor
push
or
pop
add
cmc
jno
fwait
push
jge,pt
iret
sbb
add
xlat
pop
xor
cmpsl
pop
jg
inc
adc
xchg
into
rorb
mov
rolb
in
pop
adc
xchg
xor
repnz
jmp
imul
aad
pop
or
push
insb
push
pop
pushl
adc
cmp
shlb
rorb
sub
incl
movl
dec
out
push
sti
adc
inc
testb
aam
sub
call
inc
push
call
jg
push
push
orl
mov
mov
xchg
test
sahf
add
lret
das
xchg
inc
sub
xor
sbb
mov
jp
xchg
xor
xchg
and
dec
clc
dec
jl
lock
inc
hlt
out
cmpsb
pusha
pop
inc
inc
push
xor
xor
es
in
xorb
sbb
add
cli
sbb
sbb
xorl
pop
add
mov
call
jg
mov
inc
jle
insl
jp
fwait
mov
xchg
cmp
inc
nop
cmp
mov
mov
idiv
loop
push
pop
cld
scas
fs
insl
aaa
jb
insl
loopne
sbb
dec
sub
mov
adc
mov
lret
int
and
mov
pop
lods
mov
ss
daa
jp
mov
xchg
push
fildl
and
mov
rol
xor
in
or
mov
sbbb
dec
push
outsb
jmp
test
pop
cld
cld
in
jg
dec
loop
push
pop
pop
mov
lea
cmp
jmp
inc
out
pop
sti
mov
mov
pop
les
lea
xor
lea
add
mov
sub
jge
or
xchg
movb
mov
pop
insb
mov
repnz
push
xchg
pop
adc
rolb
push
clc
pop
adc
pop
push
clc
cmp
loopne
lods
jmp
sub
pop
xor
cld
mov
cwtl
adc
xor
jne
mov
jae
pusha
loopne
aaa
dec
jnp
jle
dec
and
dec
pop
sub
ret
test
jmp
scas
jmp
aam
inc
out
and
sbb
fistpll
jbe
inc
cld
mov
pop
pop
dec
cld
lods
dec
push
aaa
cmp
pop
jmp
inc
clc
xchg
adc
mov
popf
push
mov
jle
or
adc
sbb
enter
dec
iret
jmp
inc
or
out
sub
sti
sub
push
dec
push
inc
inc
push
hlt
aas
xor
push
add
fs
and
leave
cmp
je
jno
std
pop
cmp
je
or
je
add
out
out
call
enter
je
xor
inc
xor
xlat
in
fstpl
loope
inc
fxch
in
sbb
pop
mov
pop
cmp
or
pop
sub
xchg
push
cld
and
into
shr
jp
mov
pop
insl
adc
cmp
jne
dec
je
mov
cltd
or
jg
in
jmp
scas
fbld
and
xchg
push
adc
idivl
dec
out
or
test
hlt
pop
cmp
cmp
jne
adc
or
jmp
sbb
movzbl
cmp
xchg
loopne
shll
pop
mov
inc
inc
sbb
xchg
jne
add
mov
stos
iret
shll
fsubl
push
ret
mov
dec
dec
imul
cmp
inc
add
out
std
pusha
in
pop
addr16
and
jnp
out
pusha
pop
or
push
push
outsb
or
in
add
jnp
jle
mov
or
push
jbe
mov
icebp
loopne
outsb
push
push
dec
xor
jo
push
push
test
flds
inc
jg
stos
ja
cmpsl
js
aaa
sub
cld
jne
push
lea
mov
add
neg
mov
cmp
movsb
sti
pop
add
cmp
je
arpl
fdivrl
jne
or
int3
cmp
ret
cmp
rorb
out
and
mov
fisttpll
dec
xor
jl
cmp
jge
sub
test
jl
movsl
jcxz
adc
add
pop
inc
cwtl
sub
xchg
adc
shr
loopne
push
dec
cmp
push
pop
dec
mov
push
push
int
jmp
inc
mov
cmpl
lock
sub
insl
fstpt
jl
adc
movsb
das
test
and
das
out
clc
adc
test
ljmp
jge
mov
loopne
icebp
es
lds
inc
aad
ret
je
int3
add
mov
xor
stc
in
add
pop
icebp
pop
adc
and
xor
jne
hlt
cmp
jl
cmpsb
adc
pop
popw
add
dec
inc
jl
xchg
jecxz
inc
test
jb
push
xor
cld
dec
hlt
push
cld
sub
ja
rsqrtps
ljmp
mov
inc
dec
dec
pop
xor
movb
jns
or
add
pop
and
in
pop
add
add
jmp
xchg
insb
rcr
in
jmp
cmpsb
or
pop
or
add
cmp
arpl
sbb
out
pop
call
jmp
cli
add
xor
pop
dec
cmp
mov
fstpt
sbb
jmp
repz
cmp
and
mov
add
add
mov
cmp
test
add
test
sub
xor
and
pop
icebp
mov
loope
or
pop
shr
out
mov
lock
iret
or
push
popa
jo
dec
daa
xor
xchg
push
mov
mov
add
sbb
mov
push
mov
cmp
pop
add
pop
pop
aaa
movzbl
pause
adc
jo
mov
mov
mov
lock
add
cmp
jg
daa
movsb
cmp
add
push
sbb
or
sub
mov
out
or
jge
push
mov
or
xchg
mov
inc
es
sbb
fs
aaa
add
jo
adc
cltd
out
sbb
jo
push
test
push
xor
mov
scas
dec
test
scas
adc
out
push
add
cmpsl
fimuls
dec
arpl
jns
push
cld
add
ret
pop
sbb
cmp
je
int3
mov
idiv
lahf
dec
xor
popf
mov
fisttps
clc
int
movd
imul
sti
adc
dec
gs
rorl
and
cmpsl
add
rorl
mov
dec
mov
ljmp
push
or
icebp
push
inc
mov
add
dec
clc
movsl
fcmove
jmp
sub
mov
aam
outsb
mov
mov
jecxz
inc
cmp
or
testl
and
test
or
mov
xlat
in
push
adc
ja
iret
jl
pop
cmpsb
shl
add
dec
filds
push
lods
xor
pushf
sbb
mov
pusha
xor
sarb
adc
adcb
pop
dec
adc
cld
dec
arpl
rcrb
lea
jmp
xchg
in
pop
popa
nop
pushl
and
jg
ljmp
sbb
cmp
jne
fdivl
jle
js
jmp
arpl
cmp
xchg
add
push
pop
loopne
stc
cs
lret
cmp
mov
loop
ds
ss
jl
lahf
jle
dec
inc
sub
sub
mov
jg
xchg
xlat
ljmp
in
push
lea
mov
ret
mov
adc
add
pop
xchg
jbe
or
push
pop
iret
shl
dec
test
mov
xchg
in
xor
test
jo
es
fadds
cmp
repz
aad
pop
mov
xchg
inc
pop
sbb
adcb
jge
xchg
sub
loopne
icebp
pop
movsb
rol
jle
inc
xor
push
aas
popf
and
aas
in
fnstcw
sub
dec
cmp
jo
int
jmp
pop
inc
and
gs
mov
nop
ss
mov
push
pop
pop
loop
rorb
pop
imul
mov
inc
shl
pushw
scas
lock
ljmp
add
mov
sub
shr
cwtl
stos
cmc
xchg
inc
out
lock
mov
mov
push
jae
mov
jne
in
in
adcl
repz
xor
jmp
add
cmp
and
or
or
pop
mov
movsb
shlb
or
or
jb
xor
cmc
or
add
push
cmp
mov
int
hlt
in
fsubs
pop
orb
shlb
fidivrs
push
arpl
arpl
sub
clc
mov
xlat
inc
push
adc
push
adc
hlt
jnp
adc
sbb
cmpsl
adc
xchg
xchg
pop
mov
loop
out
add
sti
int
or
mov
jns
shlb
push
pop
clc
pop
or
xor
push
mov
aam
or
shll
jl
jg
xor
jmp
lds
and
push
in
jg
arpl
ja
push
ljmp
mov
mov
xchg
cmp
je
cmp
arpl
je
cmp
je
inc
cld
ret
cmp
je
cmp
je
cmp
mov
mov
inc
and
adc
loopne
aam
mov
or
inc
and
push
mov
pop
cs
pop
jge
or
add
dec
cs
adc
data16
pop
cmp
pop
jmp
cmp
rol
test
pop
xchg
mov
imul
mov
mov
adc
fcoml
ret
add
cmp
or
inc
inc
push
jmp
sub
imul
pop
pusha
jns
pusha
jb
pop
adc
cmp
fnstsw
shlb
out
hlt
and
lret
sbb
rolb
pop
ret
std
enter
xor
jmp
daa
jo
in
add
pop
sti
or
enter
cld
jmp
test
les
test
lock
icebp
jmp
mov
adc
imul
cltd
sbb
ljmp
mov
lea
outsl
stos
add
icebp
inc
clc
mov
test
push
leave
sub
jle
cmp
jle
add
add
icebp
inc
add
stc
cmp
cmp
cmp
or
je
dec
inc
jns
or
bound
xor
enter
xchg
adc
inc
pop
pop
rorl
sub
push
aam
es
lahf
cmp
leave
mov
jmp
and
pop
insb
push
mov
fsubs
dec
xchg
or
mov
popl
rcrb
aas
add
xchg
fidivs
mov
push
mov
and
aad
jno
mov
not
pop
sbbl
add
or
adc
mov
repz
cmp
jl
sbb
enter
xchg
loope
imul
insb
pop
inc
mov
dec
jne
sub
int
xchg
pop
and
jmp
sub
mov
or
daa
adc
push
inc
dec
mov
stc
or
ja
sarl
add
add
add
inc
aas
inc
xor
or
adc
add
cmp
add
leave
popa
mov
iret
mov
push
push
sub
mov
push
pop
mov
rcll
xchg
push
adc
cmpsl
jle
mov
xchg
mov
mov
dec
mov
ret
jp
pop
cmp
xchg
push
shr
xchg
outsb
cld
pop
cmp
xorb
xor
int3
cmp
fmuls
out
aas
lea
cmpsl
pop
adc
adc
push
cli
and
and
mull
mov
hlt
fs
shlb
rol
inc
adc
pop
pop
jae
add
fwait
or
in
sahf
lock
ret
outsl
and
or
or
add
mov
stos
jge
idiv
jno
inc
cmpw
je
mov
inc
ds
sub
inc
jmp
sbb
jne
mov
jg
mov
aaa
and
add
add
sbb
pop
inc
lahf
xor
jae
sbb
loop
mov
pop
dec
gs
pop
sete
mov
inc
inc
pop
xor
and
aad
lahf
ret
inc
and
mov
or
mov
and
arpl
mov
movsb
jb
dec
gs
jb
ds
jb
adc
push
jb
out
sahf
std
notl
jmp
inc
stc
sub
jmp
getsec
jmp
push
les
jae
and
sub
jl
andl
mov
jmp
jg
mov
cltd
iret
test
adc
movsb
sub
js
mov
lds
jb
or
xor
jp
js
int3
adc
shlb
packsswb
inc
neg
rolb
neg
push
enter
orb
dec
xor
pop
and
dec
inc
andb
adc
int3
sub
andb
das
jg
mov
daa
andb
outsl
je
dec
sub
jmp
daa
je
pop
pop
mov
je
sbb
setb
jmp
enter
setl
cmp
je
dec
das
fstpl
mov
jmp
jmp
mov
jl
adc
inc
cld
ret
ljmp
dec
incl
push
ficomps
in
push
push
loopne
stos
add
mov
negb
sbb
cmp
pop
insl
scas
sbb
lods
cmp
arpl
std
insl
jmp
jp
incl
movzbl
add
leave
push
xchg
adc
dec
jnp
push
faddl
cmp
arpl
pminsw
cmp
je
xchg
testb
andl
in
int
aas
es
mov
loopne
jge
jge
sti
or
xchg
jb
lret
xlat
imul
add
mov
sub
adc
std
movsl
aam
in
pop
jmp
decl
les
and
and
incb
or
xor
sbb
daa
fisubrs
stos
and
ss
pop
rorl
loop
js
arpl
add
js
and
sub
lahf
lahf
or
flds
ret
cmpsl
xchg
add
ljmp
ljmp
inc
movl
in
hlt
lea
clc
orb
test
pop
dec
jne
dec
sbb
loop
cwtl
arpl
push
add
aas
or
xchg
xor
daa
lock
jne
imull
cmp
lret
inc
or
inc
pop
cmp
or
add
ja
push
mov
push
mov
adc
dec
push
xchg
lret
clc
movsb
jecxz
pop
pop
pop
pop
lea
bound
stos
ds
in
sbb
mov
cmp
adc
andb
fdivl
inc
out
js
sbb
je
mov
jge
jnp
jne
push
mov
jne
jnp
or
xchg
je
xorl
jno
push
clc
ret
aaa
or
ja
cs
and
jae
or
je
cmp
orb
sbb
ficomps
idivb
xchg
cmp
ljmp
sub
pop
in
std
je
dec
gs
inc
push
pop
je
popa
outsb
insb
push
outsb
idiv
jnp
sub
add
inc
jns
insb
imul
popa
jp
dec
popa
je
sub
push
insl
ja
popf
std
or
push
push
xchg
sbb
ja
bnd
inc
inc
push
push
jo
lahf
testb
outsb
pop
popa
sub
popa
pusha
push
pop
jo
ss
dec
jae
sti
mov
outsb
jae
popl
ds
and
jae
inc
inc
sub
cwtl
mov
pop
aaa
jne
insl
pusha
imul
mov
jg
loopne
andl
jp
sbb
insl
sub
and
into
popa
jb
dec
dec
idivb
pmaxsw
jae
push
mov
pop
xchg
mov
in
in
bound
inc
inc
pop
push
inc
mov
aaa
popa
xchg
popa
aaa
testb
aaa
cmpsb
aaa
in
nop
negb
inc
dec
cmpsb
jae
push
outsb
in
mov
in
outsb
cmpsl
ss
dec
inc
das
dec
jl
outsl
push
push
sbb
in
pushw
jmp
jg
out
mov
xchg
inc
and
setae
push
rcrl
xor
jmp
enter
aam
inc
pop
cmp
lods
fwait
mov
cmp
lock
mov
dec
js
push
push
imul
push
test
gs
push
dec
push
cmp
loopne
jne
jae
jae
jg
push
out
or
add
add
sub
adc
or
rolb
sub
jno
add
cmp
dec
ljmp
push
nop
inc
out
jl
aas
and
push
testl
call
jmp
dec
adc
xor
xor
xchg
rclb
jnp
aas
xor
push
add
mov
dec
mov
mov
outsl
aas
mov
or
push
sub
mov
inc
dec
jne
in
and
ret
xor
xor
jne
add
call
adc
mov
pop
xchg
push
in
mov
mov
push
js
mov
test
lock
and
jne
cmpsl
jns
or
inc
mov
cmp
call
push
ds
add
sub
insl
mov
movsb
loopne
cmp
inc
lea
pop
xchg
aaa
jl
lock
icebp
iret
std
in
xlat
ret
lret
mov
jb
adc
inc
and
sar
cmp
sti
decb
shr
cmp
sbb
sbb
jbe
inc
cmpl
adc
add
loopne
cwtl
jmp
jbe
les
stos
xor
sub
stc
or
int3
nop
and
mov
test
push
push
aaa
ficoms
movsb
clc
outsl
jnp
and
mov
outsl
and
pushl
inc
pushf
outsl
nop
or
movsb
pushf
sbb
cwtl
lds
mov
mov
imul
lods
mov
lds
daa
loopne
lods
fidivs
mov
cltd
rcrb
gs
sarl
rcll
bound
push
jg
add
int
push
push
xchg
cmp
les
inc
add
orl
or
adc
xlat
cltd
sub
push
mov
mov
pop
inc
jnp
into
rol
shll
ljmp
adc
addl
sbb
shr
cld
rcrl
cmp
pop
mov
movw
je
or
data16
sti
in
push
sbbb
dec
jle
add
mov
xchg
mov
movb
sbb
push
lods
adc
icebp
push
incb
call
lods
push
push
cli
pushf
pop
xor
insb
mov
cmp
adc
jbe
dec
push
sub
sub
pusha
push
imul
insb
fwait
inc
push
inc
inc
in
xchg
aas
jge
in
push
repz
sbb
adc
and
inc
inc
push
fst
fidivrl
sbb
lock
ret
je
imul
lds
jmp
adc
stos
and
and
inc
or
movsl
shlb
xor
xor
inc
mov
pop
cmova
mov
pop
cmp
mov
sub
bnd
inc
rolb
or
xor
popf
xor
sbb
inc
jne,pn
pop
add
inc
in
imul
lods
adc
lods
add
xchg
push
enter
aad
fimull
test
or
rorl
or
xor
inc
jg
lret
push
sbb
js
in
fidivl
xorb
call
iret
and
inc
add
jmp
aaa
jne
mov
mov
sub
sar
jns
adc
mov
into
in
addb
sub
sar
pop
rolb
add
inc
cmp
in
imul
push
orl
mov
add
std
loopne
rol
mov
adc
pop
jmp
adcb
divl
in
lea
jg
jg
xor
mov
mov
push
push
fucomi
mov
xlat
outsb
loope
inc
add
pushf
loopne
div
test
mov
xor
pop
sbb
push
scas
outsl
pop
addl
mov
in
mov
gs
mov
jne
lret
in
adc
out
push
jmp
sub
cmp
push
lods
mov
bound
mov
lea
mov
jg
dec
pop
add
xchg
test
je
jg
imul
xchg
pusha
ja
addb
mov
in
test
rcll
loopne
jo
clc
mov
scas
les
in
add
addr16
cmp
cmp
push
or
push
pop
xorl
dec
mov
mov
popf
das
push
inc
pop
scas
aad
pop
sub
loopne
lea
mov
loope
orb
push
mov
add
call
add
shll
bound
test
sbb
fs
outsl
cs
or
cwtl
adc
and
inc
fisubrl
iret
and
push
imul
sahf
mov
outsb
jbe
popa
cmpsb
mov
jo
add
lods
insb
imul
dec
pop
cmp
jg
test
test
in
sbbl
push
adc
xor
adcl
cmp
je
mov
xor
pushf
mov
and
inc
icebp
mov
dec
int
mov
data16
push
imul
andb
cmp
pusha
xchg
cs
popa
clc
aam
jl
lcall
ficomps
data16
ds
push
cld
ffreep
mov
xchg
ret
test
je
dec
and
insl
mov
xlat
ror
hlt
stos
stc
imul
stc
add
mov
test
cmp
outsl
jg
mov
add
pop
sbb
mov
push
xlat
pop
sub
call
mov
mov
sub
jae
stos
or
mov
sub
sbb
add
adc
in
inc
adc
test
xchg
xchg
cmp
jnp
outsl
push
mov
pop
dec
in
add
adc
xchg
aaa
out
or
cmp
add
mov
pop
xchg
enter
psrlw
mov
or
dec
add
jns
inc
pop
in
in
mov
or
xchg
push
xchg
add
xchg
jbe
xor
fisubrl
jecxz
add
jns
and
xor
add
xchg
xchg
adc
and
adc
ret
clc
nop
ret
and
push
cmp
cli
pusha
cltd
jmp
dec
sbb
mov
dec
and
aad
aad
mov
and
mov
jmp
jne
in
push
jl
and
lret
cmp
or
repnz
mov
ja
sbb
call
call
shlb
inc
xchg
es
enter
push
shll
cmp
test
call
ss
jecxz
test
jb
dec
jmp
mov
insl
lds
xchg
dec
mov
mov
mov
inc
roll
fst
adc
insb
pop
in
mov
test
and
mov
or
cmp
pop
add
adc
addl
sbb
and
lahf
out
cmp
ret
mov
popf
test
imul
xor
pop
adc
push
mov
dec
push
dec
cmp
addr16
cmpsl
xchg
or
jns
xchg
aaa
or
test
or
xchg
add
push
cmp
or
shlb
into
jno
loopne
or
xor
or
xchg
pushf
dec
mov
orl
xorb
insb
add
or
mov
pop
mov
push
and
idivl
imull
jbe
sbb
divb
in
ret
cmp
mov
mov
jecxz
adcb
add
mov
push
icebp
pop
mov
jp
add
aas
add
inc
test
ret
je
sbb
mov
cmp
push
push
mov
test
rclb
mov
sub
dec
mov
sbb
xchg
sbb
pop
jmp
insb
or
paddd
call
mov
xlat
mov
test
aas
mov
inc
add
inc
jecxz
pop
fiaddl
or
sti
pop
pop
jns
inc
fbld
cmpsb
cs
imul
add
mov
push
xlat
hlt
sub
jb
mov
add
ss
sbb
ljmp
es
cmp
cwtl
sarl
loope
adc
or
pop
js
xchg
push
pop
fnstsw
rolb
sub
pop
cmp
ja
add
jne
add
testb
dec
and
jmp
dec
imul
fistpll
pop
testb
adc
mov
push
loop
cmp
mov
inc
inc
sub
jmp
les
arpl
xlat
or
mov
push
adc
jl
mov
add
jl
loopne
cmp
jb
xor
mull
gs
and
cs
xorw
sti
and
jb
adc
fbstp
dec
push
mov
pop
sbb
and
test
sbb
pop
adc
lods
cwtl
rorl
dec
fwait
mov
ret
ja
push
icebp
inc
xchg
lea
pusha
mov
sbb
cmp
inc
popa
fnstenv
push
push
aaa
pusha
mov
movsl
inc
pop
mov
outsb
mov
in
add
push
addb
fsubs
cmp
and
push
push
daa
mov
imul
sbb
inc
sbb
rcll
ficomps
or
enter
add
dec
or
mov
hlt
daa
clc
add
jns
test
xchg
or
mov
push
shrl
push
xchg
fsub
addl
or
or
or
out
cmp
lea
sarw
mov
rcl
push
subb
pop
push
das
inc
lock
pop
dec
add
andb
and
mov
pop
loopne
adc
lea
sti
inc
sub
and
lret
cmp
sub
mov
imul
int3
push
push
fcoml
jle
in
or
push
add
add
and
imul
mov
mov
dec
xorb
popf
mov
fcoml
push
push
shr
and
mov
cmp
call
push
add
adc
clc
enter
adc
fwait
jp
or
push
sbb
cmovl
jo
jecxz
pop
inc
or
mov
push
jno
or
push
mov
cmp
pop
or
cmp
rcrb
inc
mov
lahf
push
orps
add
rcrb
mov
call
mov
mov
or
add
adc
push
add
mov
push
pushf
pop
dec
repz
adc
test
rolb
clc
add
arpl
cmp
ds
jbe
testl
cmp
mov
nop
pop
pop
shl
push
das
ljmp
sub
pop
mov
dec
sar
xchg
cmp
jne
lret
out
push
dec
outsl
add
mov
push
nop
test
scas
in
xor
add
xor
mov
lock
dec
clc
inc
pop
rorl
cli
add
push
or
inc
adc
inc
add
test
pop
loopne
and
jmp
mov
sub
data16
pushf
dec
in
sbb
ja
lods
pop
fidivrs
movsb
push
and
xchg
js
lcall
testb
push
rclb
add
rol
adc
add
push
pusha
sbb
cmp
test
in
mov
push
leave
inc
popaw
in
and
mov
fistl
jle
cld
jnp
out
imul
cmpl
ja
xor
mov
jmp
add
dec
insl
and
pop
rcrl
mov
jns
aam
xor
or
lock
bound
cs
cmpl
divl
push
push
pop
cmp
jne
push
pop
imul
pushl
mov
mov
out
nop
jmp
xchg
in
mov
ds
sbb
sbb
hlt
aas
cmp
jg
or
or
mov
lahf
add
lea
push
push
jg
mov
xor
xor
bound
sarl
pop
cmpl
add
sub
sbb
ficoms
ficompl
sub
jo
cmpsb
xchg
mov
jnp
sub
mov
cwtl
add
lock
xadd
bound
lcall
adc
mov
and
or
sub
pop
fidivs
push
in
mov
inc
cmp
push
sub
add
clc
xlat
enter
fdivrp
xchg
loopne
aaa
mov
mov
repnz
adc
leave
mov
xchg
inc
xchg
arpl
dec
sub
in
shll
clc
mov
outsb
sub
adc
insb
or
add
sbb
imul
in
mov
idivb
and
ss
inc
loop
cmpsb
adc
adc
mov
mov
ret
xchg
fidivrs
enter
mov
mov
xchg
cmc
inc
inc
out
push
sub
pop
pusha
xchg
je
dec
cs
ja
rorb
outsl
sbb
add
leave
mov
jns
xchg
cld
mov
lods
jge
or
add
mov
sbb
nop
add
mov
sub
cld
xchg
mov
mov
popl
add
out
ret
push
mov
cmp
inc
or
xor
xchg
psrld
lea
mov
mov
xchg
xchg
push
push
push
adc
dec
pop
jge
adc
pop
popl
pop
add
xchg
int3
adc
std
xchg
fsub
fdiv
arpl
loopne
add
test
in
dec
gs
add
popa
fcomps
fildl
aas
or
mov
je
insl
bound
ss
or
adc
jg
adc
popa
addr16
dec
pop
inc
test
add
bndldx
xchg
mov
push
or
add
jbe
and
aam
gs
loop
fldt
andl
or
adc
lret
jg
mov
push
and
sub
or
push
flds
jbe
sub
mov
popf
in
jmp
or
pop
xchg
movb
in
xor
scas
es
pop
jmp
jecxz
rorb
cld
fildl
rclb
jmp
aaa
and
std
rorb
xchg
adc
loopne
add
sbb
repz
push
inc
mov
push
push
mov
mov
xor
ja
loope
add
or
sub
std
iret
aad
inc
loopne
push
mov
or
pop
loop
add
test
or
pushl
pop
mov
xor
pop
sub
lea
stc
das
sbb
ror
mov
jmp
cmp
jne
or
loope
hlt
cmpsl
add
jne
nop
cmp
je
cmp
cmp
imul
xor
add
lods
xor
adc
push
stos
push
jle
push
cltd
ljmp
data16
jle
adc
call
jns
jg
xchg
xlat
or
or
jge
dec
shl
outsb
jns
add
push
jl
pop
or
repnz
mov
add
jbe
add
es
or
jge
mov
adc
notb
lock
rcrb
sahf
lods
sti
jae
pop
mov
add
pop
cmp
jle
pop
out
add
add
xchg
jle
add
add
sbbl
divl
addb
enter
push
ds
sub
outsl
cltd
nop
jae
mov
cltd
movsb
rcrl
aas
maxps
push
pop
inc
dec
lahf
pop
xchg
mov
add
add
add
dec
in
adc
or
lods
adc
dec
inc
jge
dec
loope
imul
fwait
testb
mov
inc
lcall
bound
cmp
dec
fildll
inc
xor
sbb
inc
push
dec
push
dec
inc
inc
adc
inc
loope
lock
inc
inc
push
inc
and
pop
pop
lret
cmp
adc
outsl
jb
cmp
push
lea
js
xchg
add
or
xchg
adc
test
test
pop
add
popf
cmp
adc
and
mov
jo
xor
sub
adc
mov
stc
lcall
test
add
subb
add
jae
loope
sub
popaw
sub
jmp
add
push
jo
fwait
inc
adc
clc
pop
fwait
les
add
push
dec
inc
xchg
faddl
push
dec
inc
inc
inc
inc
dec
xor
and
mov
incl
sub
push
push
dec
pushf
and
add
bound
jg
inc
push
cmp
add
push
shr
pusha
fisubrs
push
outsl
xor
loope
in
push
addb
dec
push
push
jle
std
int
push
push
inc
xor
addr16
mov
push
mov
dec
dec
enter
inc
mov
jne
jns
je
or
das
cmp
push
pop
jl
push
adc
push
lods
pop
pop
inc
fisttpl
sbb
jmp
popa
add
outsb
dec
pop
addr16
mov
adc
jo
inc
scas
arpl
in
call
add
pop
pop
pop
add
jp
or
jmp
or
dec
mov
outsl
mov
ja
dec
popa
xchg
test
imul
inc
popa
xor
xor
cmpsb
mov
adc
inc
rcrl
jecxz
push
bound
or
push
mov
rol
out
movsb
cltd
or
rorl
int3
adc
in
mulb
sub
adc
js
insb
loopne
in
or
xlat
pop
cmpsl
loopne
adc
dec
arpl
inc
push
pop
dec
mov
push
sub
or
in
cs
imul
pop
int3
or
cmp
adc
add
or
and
mov
insl
jo
loope
outsb
add
or
dec
frstor
outsl
or
sbb
pop
push
mov
leave
mov
xor
sbb
lret
and
insb
jb
jae
sub
jae
loope
shll
scas
push
repz
ds
orb
inc
sbb
in
xchg
sbb
popf
mov
mov
inc
insl
lahf
pop
sbb
push
imul
frstor
mov
jmp
inc
jns
sbb
mov
andl
dec
push
inc
sbb
fwait
rolb
scas
or
add
xor
mov
push
std
xor
ja
mov
or
adc
je
lock
pop
loop
adc
jo
mov
xor
je
test
outsl
cmpsl
neg
adc
inc
xchg
jns
mov
mov
sbb
jnp
mov
adc
imul
outsl
arpl
mov
and
xchg
outsl
je
jo
dec
dec
adc
popa
add
gs
out
jge
outsl
inc
arpl
or
pusha
and
lock
jbe
push
pop
bound
outsl
js
ljmp
push
mov
add
jns
inc
cmp
push
je
jo
mov
add
inc
pop
mov
rcl
in
push
cmovne
add
mov
in
add
fs
inc
push
pop
push
mov
xchg
out
or
inc
and
into
or
enter
mov
lods
and
mov
pushf
cwtl
xchg
nop
or
enter
cmp
jp
push
cwtl
pop
pop
xchg
ret
nop
popa
or
jl
pcmpeqb
sbb
push
fs
pop
pop
sbb
push
push
dec
fs
inc
push
dec
inc
inc
nop
inc
push
sbb
xor
push
sbb
sub
sbb
and
sbb
adc
or
nop
inc
push
or
xor
and
cs
clc
hlt
test
fs
or
bound
insl
mov
cmp
sub
pop
pusha
insb
cwtl
xorb
xlat
inc
fldenv
and
orl
pmulhuw
push
mov
nop
popa
sbb
fcom
inc
push
sbb
les
sbb
mov
nop
inc
mov
test
nop
inc
push
movsb
mov
sbb
sbb
test
sbb
jl
je
fs
inc
jo
push
fs
pop
nop
inc
push
sbb
push
inc
push
sbb
inc
inc
xchg
inc
cmp
cmp
sbb
xor
and
nop
xchg
inc
and
mov
or
adc
or
or
enter
sub
inc
clc
hlt
lock
inc
push
in
call
sbb
inc
push
sbb
int3
push
sbb
sarb
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
insb
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
fs
inc
cmp
fs
inc
push
sub
and
inc
push
sbb
sbb
inc
push
sbb
or
sbb
add
sub
xor
and
and
and
fadds
ror
enter
and
mov
or
add
jns
sub
push
movsb
mov
pushf
cwtl
xchg
or
enter
mov
addl
or
jo
and
pusha
nop
or
enter
push
sbb
cmovl
sbb
inc
cmp
fs
inc
push
xor
sub
inc
push
sbb
and
inc
push
sbb
adc
sbb
or
add
enter
sub
clc
enter
hlt
lock
and
loopne
or
enter
rcrb
fs
popa
mov
nop
inc
push
sarb
mov
inc
push
sbb
mov
pushf
cwtl
xchg
nop
sbb
mov
push
cmpb
push
sbb
dec
push
sbb
pusha
and
insb
pop
addps
xor
push
dec
dec
orl
inc
inc
cmp
orl
xor
xor
enter
and
enter
sbb
and
inc
sahf
or
add
sub
or
enter
hlt
lock
xor
and
nop
popa
inc
fmull
fcom
nop
inc
push
sbb
int3
enter
fs
sarb
pop
int3
test
arpl
int3
sub
or
xchg
ja
test
push
xor
and
and
and
jl
or
enter
insb
inc
xor
and
pusha
or
enter
push
xor
and
xor
enter
xor
enter
sub
and
push
adc
and
cmp
lock
mov
and
adc
enter
sbb
and
pusha
add
lods
cmp
ret
ss
int3
pop
and
movb
xchg
sbb
mov
xor
scas
or
in
test
push
mov
sbb
mov
push
jl
cmp
cwtl
and
arpl
push
push
les
int
test
aas
inc
inc
rorl
cmp
aam
mov
add
dec
daa
insl
outsb
loop
push
jae
and
addr16
std
add
dec
add
addb
jne
jae
pop
sti
mov
pop
add
dec
push
dec
das
in
mov
mov
aas
cmp
push
push
add
dec
mov
push
xor
or
lods
frstor
add
push
push
pop
cltd
nop
and
enter
dec
es
rol
jp
rolb
repnz
adc
movsb
xchg
mov
and
mov
cmpsl
adc
or
push
out
sti
mov
out
push
jl
mov
or
in
cmc
popa
pushaw
xor
mov
cmpl
lock
psllw
enter
hlt
xor
and
and
and
std
orl
jmp
loope
xor
and
jecxz
xor
and
cmpsb
sub
push
jmp
nop
popa
sub
in
in
nop
inc
push
sbb
out
rolb
sbb
roll
sbb
aad
xlat
sbb
fcomp
fisubl
push
fcmovnu
fstl
ffreep
inc
push
sbb
ret
push
sbb
sbb
enter
nop
inc
push
lret
int3
int
inc
push
sbb
iret
mov
push
sbb
mov
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
mov
movsb
movsl
cmpsb
cmpsl
sbb
test
stos
fs
inc
push
stos
lods
lods
nop
inc
push
sbb
sbb
xchg
push
sbb
xchg
xchg
xchg
sbb
cwtl
cltd
lcall
popf
nop
inc
push
sbb
sbb
addl
fs
test
nop
inc
mov
push
mov
mov
fs
jae
sbb
jne
ja
fs
inc
js
jp
nop
inc
push
jnp
jge
inc
push
sbb
pusha
inc
push
sbb
arpl
sbb
sbb
inc
push
inc
push
imul
mov
sub
jae
cmc
aaa
in
arpl
push
jb
sub
jne
lock
aaa
in
idivl
arpl
xor
gs
or
mov
mov
push
jo
dec
mov
les
ret
mov
jle
loope,pn
mov
pop
adc
aas
mov
add
add
add
jge
daa
push
and
shlb
or
xchg
pop
pop
ret
cmpsl
mov
mov
sbb
testb
pop
inc
clc
push
or
mov
or
shlb
dec
push
add
mov
pop
je
fs
cmp
incb
mov
fmuls
mov
subb
push
add
or
imul
xchg
lcall
pop
cwtl
cs
push
inc
repz
stc
add
mov
push
shlb
adc
jmp
mov
hlt
arpl
out
rolb
loopne
frstor
loope
test
add
add
cmpsb
loopne
add
jo
addb
add
rolb
loopne
incl
and
xor
inc
add
pusha
add
sbbb
add
rolb
loopne
lock
mov
add
adc
pop
lock
andl
jg
jns
add
pusha
roll
addb
add
and
ljmp
push
mov
add
or
xor
add
mov
fcos
add
add
add
add
add
add
add
add
push
loopne
and
scas
push
lock
das
add
xor
push
ds
lock
inc
xor
pusha
add
add
inc
and
add
ss
add
mov
or
and
in
push
add
and
xchg
jl
push
and
rolb
add
push
decl
popf
ret
add
adc
test
xor
push
push
mov
rolb
push
sub
mov
daa
mov
inc
popf
sbb
aaa
pop
add
dec
mov
popa
insl
add
fistpl
or
add
add
inc
sahf
gs
sub
push
add
inc
addb
outsb
scas
outsl
aas
popf
ret
adc
and
fists
xor
inc
add
adc
push
imulb
pop
arpl
jbe
outsb
adc
loopne
loope
mov
das
add
bound
ret
cmp
jo
test
push
xchg
dec
cmp
pop
psubq
push
mov
aas
rolb
pop
adc
fsubrp
inc
push
push
push
pusha
push
pop
cltd
jg
pop
jo
addb
push
mov
pop
out
in
cmp
pop
mov
xor
inc
xor
cld
push
pop
pusha
pop
jo
pop
addb
pop
mov
idivb
out
add
dec
sub
add
dec
or
or
mov
xor
inc
or
jo
orb
out
jno
sbb
orl
or
or
aas
jp
aas
mov
or
or
or
or
push
or
and
add
fidivs
xor
mov
stc
outsl
xor
pop
mov
rorb
sarl
jbe
push
lock
add
adc
ret
lahf
in
sbb
or
or
or
out
pop
imul
nop
push
mov
sbb
shlb
or
or
or
adc
orl
outsl
pop
xor
inc
out
add
pusha
or
jnp
in
push
sub
lahf
or
add
mov
and
ud2
lock
mov
xor
inc
or
or
stc
pop
arpl
aas
loop
or
or
or
jp
in
mov
daa
or
loopne
mov
daa
cmp
xor
or
mov
xor
add
or
aas
xor
push
pusha
or
push
or
or
loopne
lock
and
xor
inc
push
push
push
pusha
push
jo
inc
rorb
subb
push
mov
push
rorb
loopne
lock
sti
pop
nop
xlat
pop
lsl
wrmsr
cmovo
fidivl
pusha
or
orb
add
dec
mov
sub
push
bswap
xchg
lock
ret
add
frstor
cmc
pop
adc
sbb
add
dec
cmpsl
insb
mov
dec
fistps
xor
inc
push
mov
xorb
int
nop
mov
je
push
mov
mov
add
lock
add
mov
dec
and
outsl
aas
xor
sahf
push
push
repz
scas
adc
aaa
push
adc
xor
mov
pop
out
addl
add
leave
xorl
sub
repz
jbe
incl
stos
adc
add
adc
and
xor
fbld
ss
push
adc
add
jbe
cmc
push
mov
add
test
mov
jo
pop
adc
or
add
incl
fsubrs
scas
maxps
jp
adc
movhlps
adc
lahf
clc
cwtl
pop
adc
adc
adc
lret
mov
adc
adc
ds
popf
adc
adcb
adc
push
loopne
scas
sub
es
rclb
cli
fnstsw
jmpw
add
adc
adc
adc
adc
push
inc
mov
mov
fildl
cs
mov
and
mov
add
dec
in
into
or
or
decl
push
rolb
lock
adc
push
mov
pop
cmp
jmp
mov
ja
mov
push
adc
adcb
sbb
push
adc
in
scas
popf
loopne
call
adc
mov
in
cmp
jg
iret
push
es
inc
das
push
inc
push
cmpsl
adc
push
scas
out
ja
add
inc
mov
push
sbb
test
xor
mov
lret
xorb
inc
mov
fwait
rorb
push
iret
lock
pop
jp
adcb
pop
es
out
add
sahf
pop
pop
push
stos
loopne
mov
aas
add
or
inc
in
ret
fimuls
inc
inc
mov
mov
mov
mov
das
add
sub
roll
sti
inc
orb
loopne
js
cmpb
stc
pop
nop
pop
mov
pop
jg
pop
mov
loopne
loopne
testl
pop
push
cmc
adc
and
xor
mov
pop
sbb
push
sbb
sbb
pusha
sbb
or
lret
mov
add
add
in
bound
rorb
loopne
add
lock
aaa
jge
xchg
dec
sbb
sbb
pop
adc
cld
enter
xor
cs
sub
addb
lock
lret
pusha
sbb
sbb
mov
nop
sbb
sbb
aam
shrb
and
fimull
in
mov
shr
loopne
arpl
add
add
lock
mov
ficompl
add
sbb
adc
mov
add
or
push
cmp
adc
push
sbb
sbb
lods
mov
sbb
add
sbb
packuswb
adc
movl
sbb
mov
adc
add
or
sbb
insl
dec
adc
inc
fldt
out
pop
pop
add
or
shlb
iret
leave
add
leave
mov
pop
add
pop
sbb
pop
add
data16
or
pxor
add
ficoml
scas
add
push
add
add
addr16
pushf
mov
xlat
ss
or
xlat
scas
mov
or
sub
pop
adc
mov
add
adc
sbb
adc
add
aas
call
sbb
mov
dec
and
jg
add
mov
dec
pop
add
mov
jne
or
push
push
rcrb
push
mov
jg
sbb
add
or
js
add
rclb
dec
jg
jno
push
shr
fists
xchg
sub
sbb
add
mov
dec
add
mov
aaa
or
test
andl
fildll
adc
mov
imul
popa
sbb
jbe
call
loope
pop
or
imul
add
pop
rcll
add
xor
adc
rcr
cltd
dec
sub
in
lahf
imul
mov
imul
add
inc
xor
test
or
mov
imul
pop
shll
or
or
shrb
push
pop
or
xchg
mov
pop
sbb
jecxz
sbb
or
test
nop
xchg
bound
subb
aas
push
mov
pop
lahf
sbb
dec
xor
les
mov
adc
imul
mov
sub
jne
mov
loope
add
mov
pop
jge
or
mov
inc
imul
and
mov
xchg
sub
in
shlb
addr16
mov
rolb
sub
and
push
adc
sbb
xor
cli
mov
ret
xor
mov
dec
xor
fstps
jbe
add
add
fld
rcrl
mov
push
jns
ss
insl
push
dec
push
and
add
xchg
cmp
push
adc
fnstsw
mov
addb
sub
add
add
shlb
pop
sbb
sub
incl
add
pop
sub
adc
sbb
push
jge
add
add
sub
adc
inc
lahf
pop
dec
loope
push
add
add
popa
out
mov
mov
aas
add
lcall
jb
test
push
mov
dec
sbb
pop
fadd
or
or
and
enter
out
add
push
mov
lahf
ret
or
xor
mov
fistps
dec
scas
adc
xchg
adc
and
nop
push
add
and
ret
mov
shlb
and
movsb
lods
lds
ja
pop
add
sbb
push
xor
adc
mov
dec
adc
add
sbb
add
cmpb
stos
inc
ret
add
pop
mov
scas
sub
lret
aas
or
fcmovnb
add
mov
pop
sbb
pop
negb
imul
mov
out
inc
out
add
mov
push
insb
insb
idivb
sbb
stos
stc
or
adc
xchg
sub
xor
paddsw
outsl
push
pop
adc
ret
mov
add
pop
ficompl
add
out
or
lahf
test
or
in
out
nop
sbb
adc
jnp
add
push
gs
dec
sbb
mov
fcompl
add
sbb
sbb
add
scas
mov
stos
test
outsb
or
or
add
rcl
lret
add
push
mov
mov
aas
sbb
daa
insb
mov
cmpl
popl
or
push
add
pop
or
inc
pop
mov
xor
scas
mov
or
aas
inc
pop
pop
cmp
xchg
sbb
lds
sub
pop
lret
fdivs
shrl
outsb
inc
aaa
adc
test
insb
mov
add
push
movsb
sbb
xchg
pop
stos
xor
push
pusha
add
push
pop
mov
sub
outsl
pop
xor
add
jmp
xor
mov
adc
lock
stos
dec
ret
mov
inc
test
cmp
jo
mov
insb
jo
push
sbb
test
pusha
jecxz
pop
xor
mov
lock
inc
jo
mov
test
xchg
int
jno
adc
pop
and
pop
sbb
inc
dec
lcall
fsubs
or
xchg
mov
sbb
ret
pop
pop
cs
sub
mov
push
mov
out
push
xchg
mov
pop
je
inc
fmull
shlb
fcoms
and
mov
or
or
lcall
rcrb
insl
xor
call
add
add
sbb
add
imul
jnp
xor
fadd
or
call
adc
out
adc
dec
sbb
push
lcall
add
inc
add
pop
jbe
sbb
pop
xlat
adc
imul
daa
jl
add
sbb
sbb
aaa
cwtl
mov
xchg
adc
push
pop
pop
cmp
mov
mov
roll
or
lahf
push
aaa
lds
fstp
sbb
pop
pop
test
nop
addr16
mov
inc
jmp
std
pop
cwtl
add
test
push
aas
mov
jg
mov
iret
or
in
push
lods
lahf
xchg
xor
mov
pop
dec
xor
sbb
lahf
or
mov
daa
sldt
sbb
and
sub
inc
add
bound
add
fwait
addr16
mov
cmp
mov
imul
xor
adc
lods
fstp
scas
inc
xor
mov
out
push
int3
add
fcoms
aad
sbb
sbb
cmp
pop
dec
mov
adc
fisubs
rcl
inc
mov
insl
mov
pop
and
push
xchg
inc
fldt
and
bound
add
mov
inc
or
adc
sub
sub
rorb
fwait
cmp
push
pusha
or
lea
or
add
into
add
sbb
or
or
and
inc
cmp
sbb
mov
mov
mov
mov
insl
push
inc
test
pop
and
in
add
add
mov
mov
and
or
cmp
xor
pop
inc
pop
adc
pusha
push
add
push
ret
aad
daa
xchg
sbb
int3
fiadds
and
cs
fisubs
push
jb
adc
ud2
xorl
cwtl
pop
jo
idivb
movsb
pop
inc
sub
inc
inc
pushf
test
xchg
xor
push
xor
jp
adc
push
shlb
cmpsb
xlat
into
cmpsb
jp
loopne
pop
lock
xor
add
fildll
adc
xchg
add
or
mov
add
shl
pusha
sub
loopne
dec
lock
loopne
xchg
add
xchg
dec
insl
jo
xlat
aas
adc
test
mov
mov
pusha
jne
xchg
mov
pop
push
fwait
cmpb
sub
aas
adc
or
sbb
sbb
sbb
nop
sbb
and
pop
mov
adc
jg
ret
pusha
das
shl
lsl
mov
fsubs
rorb
lahf
rolb
push
xor
pop
inc
arpl
and
popa
add
shrl
jbe
loopne
or
enter
add
adc
enter
sbb
inc
sbb
or
mov
pop
jg
pop
orl
xor
inc
dec
sbb
leave
and
push
push
cmpb
cmp
in
push
xor
xor
inc
mov
aas
ljmp
push
lods
push
aas
std
mov
and
aas
mov
cmp
lds
aas
lcall
imul
pop
mov
aas
pop
push
dec
add
das
aas
insb
divb
xor
jecxz
jmp
mov
pop
push
lds
mov
stos
ljmp
or
in
outsb
aas
fs
or
pop
sub
push
test
test
test
adc
or
xor
push
clc
inc
inc
inc
mov
lahf
ljmp
or
popa
cvttps2pi
add
pop
aas
movsl
mov
jg
mov
jne
getsec
or
mov
scas
add
add
cmp
iret
or
scas
popa
xor
adc
jg
xor
sbb
cmp
cmp
cmp
ret
cmovo
mov
ud0
push
push
jns
in
inc
push
push
inc
inc
sbb
inc
inc
inc
fs
inc
push
inc
inc
inc
pop
adc
sbb
sbb
dec
add
rorl
out
jg
aad
inc
fistpll
cmp
out
imul
les
rolb
mov
lahf
dec
adc
in
jo
scas
jo
inc
mov
xchg
roll
jbe
rcrl
dec
fucom
jg
in
popf
cmp
in
aas
pop
icebp
repz
and
lahf
stc
cmc
call
ret
jno
mov
add
cmp
dec
pop
add
and
jg
rolb
outsl
ret
out
jg
push
push
lahf
push
and
sbb
dec
pop
ljmp
mov
mov
aas
subl
das
adcb
pop
cmp
pop
adc
mov
scas
push
in
mov
stos
scas
das
pusha
adc
scas
out
push
pop
push
stos
jg
fucomip
add
mov
or
imul
xor
or
adc
sub
lahf
popl
outsl
sub
scas
aas
bound
bound
bound
lahf
mov
jg
pmulhuw
pusha
jg
and
dec
xchg
aas
mov
stos
sbb
outsl
shrb
xor
mov
aas
and
nop
jg
mov
inc
adc
jmp
orb
or
imul
xchg
maxps
cwtl
push
fucomip
dec
mov
sbb
mov
adc
sbb
add
xor
int3
adc
outsl
pop
and
pop
adc
inc
pop
push
fimull
out
mov
add
xchg
inc
or
xor
adc
push
stos
sarb
adc
add
and
xchg
inc
cmpsb
or
adc
test
shld
mov
movsb
das
je
jle
ficoml
or
mov
xchg
or
mov
pop
cs
adcb
add
jl
or
pop
push
adc
js
gs
ss
inc
imul
outsl
or
push
adc
lods
das
pop
in
sbb
imul
dec
jbe
data16
outsl
ja
sbb
insb
imul
fmul
insb
sbb
gs
push
outsb
fs
or
inc
pop
adc
add
aaa
xchg
sbb
push
imul
inc
push
push
jb
insb
test
insb
mov
mov
mov
movsl
push
adc
fstpl
daa
mov
js
pop
xchg
fbld
inc
js
outsb
popa
test
jae
lock
push
leave
int
daa
dec
or
xor
loop
clc
sub
in
dec
outsl
xor
jo
sbb
ja
aaa
adc
mov
fincstp
or
cld
popa
dec
dec
loopne
or
inc
cmp
popf
test
fstl
push
inc
andb
pop
cmp
xor
inc
lahf
in
dec
add
in
push
scas
pusha
mov
test
loopne
or
cmp
and
dec
imul
and
jns
xor
pop
inc
mov
lret
cmp
dec
enter
sub
and
xor
pushf
pop
adc
dec
lcall
sbb
clc
dec
xchg
js
call
shl
jbe
dec
sbb
inc
mov
das
rclb
mov
mov
cs
shl
mov
mov
test
lods
cmp
mov
mov
pop
or
nop
jl
mov
adc
addb
insb
lods
push
jl
imul
test
or
push
jo
clc
xchg
inc
subl
addr16
and
and
cmpsl
gs
and
and
cs
xchg
inc
cs
pop
push
fs
arpl
nop
lret
and
dec
gs
xor
popa
movsb
inc
or
inc
sbb
xor
pusha
je
pop
inc
cmp
dec
cmp
push
adc
dec
cwtl
adc
push
es
xlat
mov
cmp
dec
pop
bound
and
add
movsb
push
enter
rolb
cmp
dec
xchg
add
adc
fwait
and
mov
add
es
pop
js
popa
orl
fwait
ljmp
pop
or
inc
jo
scas
push
dec
jnp
outsl
decl
imul
notl
add
push
mov
shll
cmpl
mov
add
pop
push
jns
insl
mov
and
inc
adc
jg
xchg
mov
cmc
add
movaps
orb
and
sub
pop
dec
jle
dec
add
adc
shlb
cli
pop
cs
push
sub
pop
xor
out
push
mov
mov
test
pushf
roll
inc
or
movb
inc
pop
sub
pop
rolb
pop
xchg
or
aad
leave
pop
jns
dec
lock
cli
test
iret
add
rcll
jns
cs
test
addb
out
and
dec
add
mov
inc
xor
add
int3
aad
sarb
add
jecxz
roll
pshufw
add
adcl
fcmovb
sbb
sbb
scas
mov
out
xchg
push
inc
inc
arpl
imul
cmp
push
lahf
push
shl
nop
inc
push
jns
sbb
dec
push
sbb
loopne
xor
mov
pop
sbb
dec
or
lcall
hlt
jae
das
xor
nop
sub
ftst
ss
movsb
xchg
pop
or
dec
jae
sbb
fisubl
or
insl
je
and
sbb
add
sbb
mov
in
and
push
nop
idivb
or
adc
fsubl
and
or
add
adc
mov
daa
inc
in
or
repz
daa
sub
add
out
add
xor
mov
insb
mov
adc
inc
sub
mov
mov
sbb
adc
add
movsb
mov
lods
push
loopne
imul
push
movsb
xor
sub
imul
sub
bswap
or
push
push
roll
daa
xor
push
inc
lds
dec
xchg
xchg
xchg
out
testb
push
push
inc
insl
inc
xlat
popf
xchg
mov
aam
pop
mov
or
bound
incl
dec
or
aad
add
lcall
add
ret
popf
add
inc
dec
sub
lods
add
xchg
or
add
xor
js
rorb
xor
and
test
seto
push
adc
inc
inc
jb
jne
jnp
xor
mov
sub
adcl
popa
xor
cld
mov
adc
adc
or
cmp
inc
push
pop
fdivs
push
test
test
push
add
xchg
shll
push
lock
into
pop
cmp
cmpsl
sbb
es
xor
xor
pop
pop
cmp
pop
call
inc
xchg
arpl
jns
add
jge
pop
aaa
and
push
xor
xor
in
iret
pop
adc
or
sub
and
sbb
es
sub
vmulsd
adc
movsl
vunpcklpd
scas
pop
sbb
pop
imul
pop
pushf
push
xor
and
lods
push
pop
pop
and
add
pop
popa
addr16
loopne
test
cmc
cli
inc
insb
sub
stos
pop
shrb
add
std
inc
dec
gs
jo
mov
nop
sub
inc
add
popw
jg
inc
xor
scas
out
and
cmp
out
js
repnz
aam
inc
push
dec
ss
lods
outsw
mov
sbb
mov
pop
sbb
push
les
sub
jne
loope
aas
pop
push
xchg
out
pushf
ret
pushf
mov
or
dec
and
pop
daa
cmp
or
subps
push
jl
add
rcrb
outsl
adc
inc
stos
mov
ret
ret
incl
and
add
pop
sub
xchg
or
lahf
sbb
sub
idivl
movl
pop
or
dec
aam
and
or
pop
sub
icebp
mov
and
ret
sub
push
pop
xorb
loopne
leave
pop
jl
inc
mov
sbb
pop
and
scas
call
push
pop
add
sbb
pusha
dec
or
mov
push
loopne
leave
mov
and
pusha
inc
xor
xor
cwtl
mov
mov
add
pop
insb
pop
sub
cwtl
dec
cs
punpcklbw
loop
push
jb
cmp
dec
sbb
insl
cmp
mov
and
and
and
daa
inc
xor
aam
fdivl
mov
and
pusha
and
pop
dec
das
inc
repnz
popa
fs
jl
add
andb
and
and
and
cld
bound
scas
inc
add
jo
outsl
sbb
hlt
xchg
pusha
inc
sub
nop
test
push
cwtl
xchg
insb
ss
imul
sub
mov
xor
sbb
arpl
xchg
inc
loopne
add
pop
sub
adc
push
enter
add
rclb
mov
test
add
sbb
subb
sub
or
notb
daa
mov
push
sbb
add
and
xchg
sub
inc
pop
add
xor
or
daa
movsb
mov
pop
lods
filds
fwait
lea
cmp
xor
neg
data16
pusha
dec
ficomps
pop
inc
das
mov
or
mov
push
and
xchg
fdiv
in
inc
dec
aam
xchg
rorl
hlt
mov
add
jo
mov
mov
sbb
add
test
sub
push
rcll
and
movl
xor
xchg
or
nop
sbb
mov
mov
push
or
repz
cmpl
imul
pop
pop
push
xchg
mov
aas
fisttpl
push
mov
push
aas
mov
inc
scas
lock
es
pop
or
xor
addr16
outsb
flds
sbb
push
push
or
fildll
pop
test
inc
sbb
pop
test
or
nop
pop
arpl
sbb
add
pop
xor
scas
and
and
jo
push
xor
push
mov
insb
mov
repnz
imul
inc
pop
inc
adc
inc
and
lock
inc
mov
add
pop
cmp
push
jo
pop
pop
imull
inc
add
nop
push
and
sbb
xlat
pop
add
pusha
rolb
imul
insl
inc
insl
ret
pop
insl
dec
cmovne
fmuls
or
dec
clc
adc
sbb
cmp
xchg
adc
incl
push
add
jnp
repz
jbe
or
fldl
rorb
rol
ja
push
test
imul
xor
or
inc
imul
out
jb
outsb
and
sbb
add
sub
push
les
or
adc
sbb
sbb
repnz
lock
outsb
sbb
fstps
pushf
dec
xor
add
adc
push
and
nop
out
cmp
icebp
pushf
sub
cmp
insl
arpl
dec
add
cltd
lods
xor
andb
repnz
imul
je
scas
add
inc
sahf
add
add
sub
mov
or
dec
fwait
insl
inc
es
sbb
leave
sub
shrl
and
enter
mov
clc
in
xor
gs
fsubrs
jo
sub
cld
pushf
or
jns
push
gs
stc
push
das
xor
mov
imul
divl
int3
shr
xchg
sahf
jnp
xchg
xor
aaa
inc
push
ss
loopne
jns
sub
loopne
mov
sbb
test
cmpsb
adc
add
ss
and
dec
xchg
xor
and
dec
xor
fildl
push
pop
jl
push
popa
fs
cmovle
pop
add
mov
sbb
sar
fists
jno
cmp
fbld
add
add
pop
or
das
mov
dec
inc
add
jo
xchg
popa
inc
ficompl
sub
inc
and
je
xor
push
jnp
cmp
jae
and
mov
lcall
mov
repz
cltd
jne
inc
adc
pop
add
jmp
jb
sbb
packsswb
or
or
stc
jo
push
or
jae
jg
pop
shll
add
jo
ja
nop
ret
inc
add
add
mov
lds
mov
dec
push
aas
je
or
imul
fsubrs
imul
sub
sbb
xchg
in
dec
add
jmp
maskmovq
testl
aam
aaa
cmp
aam
out
push
mull
je
int
aad
in
roll
dec
pop
dec
or
pushf
imul
fs
movsb
sub
jbe
inc
add
sahf
jne
pop
jne
xor
xor
stc
push
or
sbb
sub
sbb
mov
cmc
hlt
insl
and
push
jmp
outsb
popa
sub
push
mov
das
sbb
cmpsb
in
pop
fdivrs
fistpl
adc
sbb
mov
sarb
jb
cmpsb
sub
stos
adc
push
jbe
jp
pop
cmp
cli
mov
or
cmpsl
jbe
push
xor
pop
xchg
dec
out
and
pop
xchg
imul
xchg
jge
add
jno
js
pushf
jbe
push
adc
cmp
sub
cwtl
or
addr16
lahf
in
roll
dec
testl
nop
jge
sub
pushf
or
iret
adc
dec
or
mov
daa
ret
push
push
jbe
stos
push
pop
dec
pop
mov
and
or
xlat
add
and
cmpb
adc
adc
jns
stc
add
ja
rorb
mov
outsb
arpl
ss
outsl
imul
cmp
rolb
pop
js
jns
add
scas
js
jns
adc
xchg
pop
or
in
sbb
repnz
add
int3
aaa
add
lret
add
sub
dec
jae
xor
inc
xchg
js
xor
cmp
or
into
enter
in
adc
enter
pusha
js
xchg
inc
push
cmp
xor
jnp
inc
push
pop
or
enter
nop
xor
and
dec
dec
push
rolb
jl
lret
sub
and
je
mov
enter
jbe
push
fmuls
push
and
jo
jle
aas
call
icebp
jl
push
loope
fadds
xchg
sbb
adc
out
cmpsl
fwait
test
push
xchg
test
jb
adc
je
jecxz
pop
fcmovnb
gs
or
mov
sbb
cld
adc
jmpw
mov
je
mov
aam
and
jp
nop
and
inc
add
repnz
stos
mov
or
add
or
adc
or
cwtl
sbb
dec
or
push
jae
add
push
mov
ret
pop
dec
enter
movsl
and
fcomp
mov
cmp
sbb
or
adc
jnp
add
push
inc
mov
gs
pop
dec
push
pop
push
xor
xchg
sbb
inc
sub
addl
mov
fistl
xor
subl
insl
add
and
add
xlat
cmp
xchg
pop
pop
fs
push
hlt
mov
pop
loopne
push
jge
add
mov
or
inc
add
adc
pusha
dec
cmc
int
inc
stos
jge
dec
pop
jle
ja
mov
cld
aaa
dec
repz
add
cmp
xor
jo
fsubs
mov
push
rcrl
push
addr16
adc
add
or
loop
mov
push
outsl
push
mov
adc
mov
gs
ja
shll
pop
pop
cmp
sahf
or
mov
lods
dec
push
or
in
jg
dec
xorb
or
stos
jns
aas
bound
add
addb
sub
cwtl
dec
add
aas
push
repnz
add
pusha
sbb
mov
sbb
and
sub
int
sub
mov
repz
inc
mov
xor
push
cmp
adc
mov
mov
stos
pop
jg
enter
mov
scas
andl
or
sbb
sub
mov
and
add
or
movl
add
inc
ficoms
inc
aaa
push
fmuls
add
addb
pop
sbb
xchg
inc
repnz
sub
and
or
leave
mov
adc
ss
test
fadds
scas
sbb
ja
jo
cmpsb
imul
xchg
xor
out
jp
mov
sbbl
cmpl
jg
rorl
jb
jns
pop
xor
aam
pop
push
inc
js
adc
in
jb
mov
leave
pop
nop
adc
xchg
mov
jmp
jne
cmpsl
test
repnz
je
jnp
pop
iret
or
pusha
push
jl
lcall
lock
int
clc
or
sbb
test
sahf
cmp
repnz
test
xor
mov
add
sbbl
in
sbb
dec
test
and
movsb
or
repnz
test
push
es
icebp
inc
pop
or
popa
das
movsb
push
xchg
test
or
or
pop
or
adc
mov
or
xchg
rcrb
sbb
addr16
xchg
cmp
mov
add
xchg
xor
insb
sbb
and
mov
xchg
syscall
push
xchg
outsl
mov
imul
inc
add
inc
lahf
add
add
ret
shl
lea
sbb
dec
ret
dec
outsl
push
sbb
pop
or
testl
ljmp
mov
add
test
out
push
lret
mov
mov
and
fisubl
inc
cmp
push
pop
out
jg
cmc
imul
add
data16
xchg
dec
sahf
xor
fs
push
testl
cli
fidivrs
add
sbb
jle
mov
hlt
adcl
add
mov
das
loopne
lahf
mov
enter
mov
sbb
data16
fbstp
sub
jmp
dec
push
jg
cld
xor
sub
push
adc
and
sub
pop
cs
jge
sub
imul
jmp
orl
add
fildl
fnstcw
jne
pop
test
sub
pop
pop
jmp
xor
jne
inc
or
pop
adc
lods
adc
xor
ja
cli
idiv
add
rorl
jg
or
popa
jg
lea
movsb
and
sub
jg
sub
pop
add
pop
adc
jne
aaa
or
sub
mov
jle
cmp
jg
aaa
sub
loopne
adc
sbb
stc
pop
jg
movzbl
cmp
mov
popa
cmp
add
aas
neg
ret
pop
add
dec
ljmp
cld
mov
fucom
andl
dec
jmp
mov
je
mov
fisttpl
fdivs
outsl
cmpsl
mov
or
and
cmp
jl
or
sti
dec
aam
jg
and
fstpl
fdivs
outsl
lcall
nop
jp
icebp
or
ficoml
mov
negb
pop
cmp
jne
call
pusha
aam
pop
add
sbb
xlat
pop
or
iret
or
test
nop
and
test
inc
and
adc
and
dec
sub
pop
sub
mov
ja
movsb
arpl
movsl
ljmp
stc
mov
xor
lds
idivb
rorb
mov
xchg
or
mov
mov
int3
shr
push
adc
nop
add
mov
notb
lcall
jbe
push
ljmp
ljmp
cmp
xor
fbstp
aas
repz
jge
aaa
mov
sbb
divl
jge
lods
inc
xchg
data16
pop
stos
xchg
lcall
movsl
xchg
push
cli
pop
add
add
dec
xorb
loopne
scas
stos
mov
and
sub
shlb
scas
xor
cs
pushl
add
insb
leave
adc
imul
or
sti
lea
inc
fwait
xchg
shll
cli
cmp
movl
sbb
rolb
or
dec
or
mov
call
add
xchg
repz
mov
mov
fsubp
inc
cltd
shrl
push
inc
imul
sti
xchg
dec
jno
and
cmpl
cmp
fstpt
cmp
test
adc
add
mov
stc
sti
xor
addr16
sbb
jne
adc
sub
jne
nop
xchg
rolb
test
push
mov
mov
pop
mov
popf
dec
xchg
std
shrb
aad
push
xlat
cmp
jo
pop
mov
dec
and
pop
jno
mov
dec
mov
xchg
fimull
call
rorl
out
sbb
aad
call
pusha
xor
xor
dec
add
scas
xchg
dec
aam
mov
test
add
lret
pop
push
push
mov
inc
stos
dec
daa
ds
jne
jbe
lock
ret
clc
sub
pop
inc
push
or
mov
mov
enter
pop
je
pop
pop
sbb
ucomiss
rcr
emms
fwait
or
push
and
decl
xchg
mov
out
add
sar
push
or
jne
or
jns
neg
loopne
test
sub
cmp
inc
ret
in
push
add
jo
push
xor
xor
pop
mov
cmp
sbb
dec
push
insl
jne
add
icebp
or
jmp
add
sub
jnp
add
dec
repnz
cmp
dec
jne
xchg
push
ret
push
mov
sub
push
movsl
ja
mov
pop
mov
ds
or
xlat
mov
sub
clc
mov
stos
nop
and
sahf
xor
xchg
dec
and
xor
xchg
mov
sqrtps
fstpt
loopne
sbb
subl
or
loopne
data16
scas
mov
lock
das
mov
fcmovu
add
xor
mov
arpl
push
add
jg
mov
in
push
and
add
mov
faddp
xchg
adc
push
add
shrl
jmp
popa
ret
pop
cs
add
add
pushl
scas
sahf
push
cmp
loopne
jae
fnstcw
add
ret
ffree
ffree
ffree
jo
ret
rcrb
sarb
test
xchg
test
loope
cmp
push
ljmp
nop
sub
dec
mov
push
add
push
enter
movsb
out
pop
pop
lds
sbb
js
sbb
mov
inc
sbb
adc
dec
mov
xor
addb
xlat
popa
or
push
mov
adc
imul
xchg
dec
xor
cmpsl
mov
movsb
repnz
outsl
aas
outsl
cwtl
test
mov
dec
inc
fsubr
mov
mull
push
mov
ret
in
xchg
jno
jae
orb
or
inc
xchg
js
insb
nop
sahf
add
nop
inc
or
outsl
js
jo
push
jge
subb
enter
inc
dec
jae
cli
out
push
mov
test
jl
inc
dec
push
pop
adc
mov
jmp
movsb
and
push
hlt
sbb
testb
je
pop
adc
pop
ljmp
call
roll
outsb
cld
lods
fs
clc
mov
lock
fildl
jle
setne
dec
cmp
xorl
cwtl
pop
imul
shll
inc
nop
nop
jbe
push
push
add
inc
xlat
add
iret
fisubrl
sub
fildll
inc
jae
mov
loope
fs
mov
orb
and
inc
push
xor
scas
mov
jecxz
daa
xchg
fidivrl
xor
pop
enter
lea
xchg
add
aas
mov
and
xor
add
adc
inc
add
inc
mov
fisttpl
push
jmp
pusha
iret
orl
out
repnz
xchg
gs
ss
and
popl
mov
push
jno
jecxz
lea
dec
mov
adc
pop
clc
sbb
pop
into
movsb
sbb
pop
gs
xchg
test
movsl
je
push
or
mov
pop
jp
or
mov
in
adc
dec
imul
jne
push
in
insb
mov
inc
push
fmull
add
add
fstpl
adc
shr
in
jno
lahf
adc
xor
xor
test
arpl
notl
sub
jl
push
imulb
inc
loope
imul
repnz
testl
pop
push
enter
sahf
pop
or
push
cmp
pop
and
cs
daa
sub
stc
cmp
add
je
loopne
xor
push
cmp
sub
test
xchg
pop
cmp
push
pop
pushl
test
loope
pop
add
xchg
add
xchg
leave
or
mov
cmpsl
dec
sbb
insl
jmp
mov
mov
inc
jae
adc
push
sbb
scas
mov
or
je
jnp
dec
sub
adc
add
fdivrl
pushl
rclb
decb
and
cmp
repnz
adc
add
jb
push
xchg
dec
add
fwait
aas
sub
inc
arpl
pop
sbb
add
data16
push
lds
je
pop
cwtl
jg
pop
pusha
xor
sbb
jp
mov
popl
into
test
xchg
mov
dec
je
inc
sti
wrmsr
add
cmp
jge
mov
mov
inc
rcrl
xchg
je
jmp
xchg
sub
cmpsb
in
js
xchg
xchg
pop
add
shlb
jle
inc
mov
sbb
pop
adc
or
jl
mov
inc
decl
js
dec
or
lock
xchg
mov
cltd
xor
cmp
pop
mov
or
push
adc
inc
sbb
push
pop
sbb
dec
push
imul
xchg
jg
test
add
leave
ret
jle
outsl
aad
mov
pop
pop
dec
divl
xchg
inc
in
xor
push
pop
and
lcall
hlt
aas
insb
sbb
out
shlb
mov
and
mov
sbb
dec
mov
add
jns
or
push
xchg
adc
adc
int
mov
neg
dec
roll
mov
or
loopne
cbtw
add
movq
mov
xor
inc
or
popf
jbe
xchg
insb
lahf
andl
hlt
std
mov
mov
shr
scas
pop
mov
xor
inc
data16
inc
popa
daa
lahf
add
sub
test
and
je
or
mov
into
sub
sbb
adc
mov
mov
ja
pop
ret
inc
or
testl
mov
and
push
lcall
mov
adc
push
mov
dec
inc
pop
dec
into
cmpsb
dec
imul
add
mov
jmp
mov
iret
mov
push
adc
nop
enter
cmp
cmp
data16
decl
push
das
or
sub
roll
movb
ficomps
in
xlat
sbbb
jl
lret
dec
or
aam
notl
lea
xor
repz
mov
mov
pop
lods
sar
dec
pop
pop
scas
and
cli
xor
and
repnz
leave
push
pop
xchg
aad
pop
rolb
adc
jnp
cmpsb
push
fildl
jb
pop
stc
in
push
dec
movsb
leave
aad
dec
inc
in
rcrb
sbb
pop
enter
pop
mov
shl
popa
or
lock
mov
fwait
jp
insl
adc
or
in
pop
mov
das
sbb
gs
pop
push
jge
aad
add
fidivs
sarb
not
dec
je
mov
mov
pop
sub
jbe
mov
js
stos
cld
lea
mov
lods
and
push
add
pushl
mov
in
lea
xor
ret
inc
clc
stos
jmp
push
sti
xor
and
mov
mov
and
and
mov
cmpsl
insl
imul
test
mov
push
cmp
jecxz
aaa
subl
pop
movsl
ja
ljmp
and
push
std
dec
or
loopne
inc
mov
int3
or
je
inc
dec
jne
adcl
ljmp
inc
fistl
int
sbb
fidivs
lock
pusha
xor
cmpsl
or
cs
add
sbb
rolb
lock
sbbb
cmp
mov
outsb
dec
push
jecxz
fsub
mov
incb
mov
popa
pop
mov
sbb
inc
incl
lea
or
jns
mov
dec
lods
jg
imul
hlt
or
addb
or
adc
bound
shrl
mov
inc
insl
jmp
cmp
je
sbb
push
push
out
or
ret
mov
mov
dec
dec
mov
test
cmp
lret
shrb
cmc
movl
dec
shll
imul
cltd
push
insb
out
push
or
dec
sarl
xor
xor
insl
cld
pop
push
add
dec
pop
and
mov
mov
push
or
cmp
jo
xchg
sbbb
hlt
fistps
jae
push
inc
or
adc
or
dec
cmp
jg
jmp
and
xchg
mov
cmp
mov
lret
fisubl
dec
mov
pop
mov
xchg
jle
jl
hlt
jg
lea
fsubs
dec
hlt
rcrb
lods
adc
mov
and
popf
xor
adc
mov
pop
lahf
push
mov
adc
ret
pushf
popf
add
push
dec
pop
lea
fwait
xchg
xor
mov
in
rolb
mov
add
or
inc
mov
sbb
adc
fcmovnbe
rcrl
out
enter
mov
movsl
and
push
pop
inc
lock
jmp
sarb
adc
or
mov
xor
jg
ret
and
and
dec
rcr
xor
jne
mov
sub
add
lock
cld
lahf
in
insw
ljmp
gs
mov
rcl
je
shlb
or
jns
notl
jge
sub
ffree
gs
jmp
push
sub
dec
in
pop
nop
data16
mov
mov
loopne
divb
push
push
sbb
sub
jae
mov
inc
clc
outsl
push
sub
jae
add
mov
xchg
sbb
bnd
mov
cmp
mov
jg
insb
dec
in
cmp
add
pop
out
jg
test
or
sbb
loopne
ret
push
add
pop
pop
stc
mov
push
or
adc
cmpxchg
clc
cwtl
scas
sbb
je
dec
fadd
and
ja
loopne
mov
cmpb
mov
fimuls
jmp
mov
andl
xor
push
rcr
cmpsb
imul
push
pushf
sbb
push
insb
mov
lock
pushf
add
xchg
mov
dec
faddl
mov
jne
sub
lret
mov
sub
je
xchg
lahf
int3
cmp
sbb
or
sub
push
pop
jmp
lea
repz
jo
jne
jno
in
aaa
fadds
sbb
jg
notb
stc
loope
insb
jl
lock
mov
pop
pop
dec
mov
push
call
das
add
mov
lea
mov
incl
jmp
xor
ret
inc
es
mov
or
test
add
lock
push
je
cld
call
pop
jmp
jae
js
xor
inc
or
mov
xor
test
adc
fsubs
inc
cmp
ja
cmp
mov
mov
and
dec
dec
mov
loop
xchg
pop
pop
pop
inc
push
xchg
lds
dec
jmp
or
push
mov
jge
add
pop
jle
divl
add
add
adc
sbb
int
orl
add
adc
ret
dec
shlb
ss
and
fprem
or
clc
push
add
repnz
fisttpl
sub
cmp
lea
mov
scas
xor
add
or
sbbl
mov
roll
pop
imul
cwtl
loope
icebp
sbb
xlat
hlt
prefetch
xor
stos
mov
add
shrb
push
or
xlat
jge
cmpsl
cmp
neg
invd
in
mov
inc
xchg
push
add
imul
push
int
fnstcw
mov
sbb
mov
inc
pop
loopne
orb
or
jg
orl
jns
std
cmp
sbb
cmc
jb
adc
aam
mov
xor
adc
mov
lods
xchg
out
xorb
push
test
repnz
add
mov
adc
loope
ret
iret
sub
out
mov
addr16
inc
sbb
mov
dec
push
adc
mov
addl
push
outsl
daa
dec
jge
add
call
rcl
test
xchg
fwait
xchg
add
popf
pop
sub
lock
fisttps
subl
lea
jne
mov
clc
ss
jnp
js
mov
je
or
or
mov
add
mov
rorl
add
xor
rcll
fucomp
std
jmp
sarb
cmp
mov
rorl
inc
lods
or
cli
icebp
push
xor
in
jge
dec
lock
xchg
stos
ret
sbb
loope
roll
and
and
and
xor
dec
or
loope
push
adc
jmp
fidivs
dec
mov
movsb
je
lahf
and
cmc
adc
popa
lahf
negl
loopne
push
stos
xor
test
cltd
rol
jmp
fisttps
xor
jbe
in
sub
divl
adc
fcmovnb
mov
fnstenv
mov
xor
add
vunpcklpd
fsubrl
xor
or
enter
fdivrs
adc
repz
inc
mov
xor
repz
out
pusha
or
cmp
dec
sub
and
add
or
dec
jle
pop
sbb
inc
das
jno
test
nop
loop
stos
adc
dec
ja
das
pop
cli
sbb
mov
inc
shl
xlat
mov
out
pushf
cs
pop
lea
je
push
push
cmp
sbb
adc
cmpsl
movb
lcall
lods
cld
pop
pop
inc
loop
ret
inc
or
cmc
scas
hlt
test
outsl
and
mov
fildll
inc
add
and
and
adc
and
sub
inc
ja
sti
mov
or
sub
sbb
pop
jnp
and
sub
sub
imul
sub
sub
xor
xor
lods
addr16
pop
and
mov
insl
jge
fcom
inc
stos
ret
je
cmp
or
cmp
inc
push
or
into
add
cmpl
push
aas
mov
inc
dec
push
jo
cs
sbb
add
rclb
inc
clc
adc
pop
and
mov
sbb
stos
ss
cmp
pop
frndint
dec
fldt
fstsw
fwait
ljmp
mulb
or
mov
lcall
jne
lea
lock
in
add
inc
sub
mov
shr
and
xchg
jecxz
aad
xor
hlt
mov
add
jns
jmp
cwtl
cmp
adc
cmp
jae
cmpb
std
add
or
and
ja
mov
pop
data16
popa
xor
enter
cmp
jne
sbb
inc
xor
push
pop
cmp
cmp
shr
mov
mov
ret
pop
out
or
mov
dec
jno
call
add
xor
cvttps2pi
scas
pusha
repz
movd
jp
or
imul
adc
in
ret
pop
mov
cmpsl
sbb
jae
dec
add
pushf
rolb
mov
fildll
cli
mov
pop
aaa
sub
cmp
mov
mov
jo
call
mov
or
jg
push
mov
and
jne
mov
cmp
into
push
sti
mov
add
stos
aas
and
inc
ljmp
dec
adc
sub
movb
cmpb
testl
mov
mov
scas
adc
iret
mov
or
cmp
lock
movsb
add
jle
fnstcw
fwait
xchg
add
push
or
xchg
pop
lret
push
sub
xor
pop
daa
jo
or
imul
and
pop
cmp
je
cmp
aam
test
ss
add
insb
scas
fcomps
pop
incl
pushf
rolb
fwait
je
clc
ret
add
loopne
clc
or
pop
cmp
aas
jmp
fstpt
sub
or
mov
dec
cmp
ds
dec
jmp
imul
cmp
cld
loop
add
sub
jae
fimull
repnz
add
xor
pop
push
mov
loopne
insb
pusha
imul
imul
pop
cmp
int3
jb
dec
add
xchg
jbe
addb
popf
cmc
mov
addb
addb
adc
ficoml
loopne
inc
or
daa
add
jo
and
insb
stos
insb
pop
mov
adc
call
adc
rcrb
ss
inc
fadds
stc
sahf
push
mov
fwait
inc
pushaw
fdivr
pop
testb
fsubs
scas
and
lods
add
fstpt
lahf
lock
bound
add
dec
mov
cld
jae
jg
loopne
push
sub
pop
fwait
mov
fwait
mov
fiaddl
clc
orl
inc
cmp
out
lods
jo
pop
nop
sub
shrb
data16
leave
jle
dec
or
out
mov
hlt
cmc
dec
dec
out
fistl
fisttpll
or
clc
cmp
mov
shlb
xor
adc
jmp
adc
cmpsb
adc
jge
add
ja
mov
aam
push
jl
cli
jg
loop
sbbl
cltd
sbb
mov
add
mov
adc
rolb
loopne
pop
ljmp
or
pop
sbb
cmp
pusha
add
mov
cld
pop
mov
add
add
push
push
push
push
lds
push
call
movsb
mov
or
xchg
mov
jae
or
cmp
push
stc
add
add
adc
out
inc
inc
imul
shlb
cmp
rclb
add
sbb
adc
or
pop
loopne
add
sbb
fstpl
fwait
and
push
lret
dec
and
fistpl
stos
add
pop
pop
mov
mov
aam
inc
lret
xchg
and
adc
xor
cld
call
push
pop
ficoms
enter
add
and
fldpi
test
pop
jne
js
div
sbb
pop
and
push
pop
mov
add
scas
in
pusha
sub
std
add
les
sub
jno
add
je,pt
mov
addb
adcl
or
jb
add
repnz
sti
insb
jne
out
pop
inc
ja
pop
icebp
pop
xchg
adc
add
loopne
pop
dec
incb
jne
sub
dec
stos
addb
fs
ljmp
or
sar
add
sub
aas
out
pop
fadds
pusha
ds
add
ret
or
out
xorl
fcmovnb
std
add
cmp
cmp
or
inc
ljmp
call
jg
in
aad
push
xchg
ret
xchg
hlt
or
dec
dec
pushf
adc
mov
inc
out
incl
daa
cmp
jl
addl
jmp
pop
imul
jge
shl
mov
lods
mov
mov
lock
or
dec
lock
sti
lret
or
mov
mov
pop
push
lock
ret
aaa
xchg
sub
xchg
loop
outsl
ret
inc
aas
jecxz
and
ja
mov
dec
cmp
mov
out
fnstenv
adc
sbb
fisttps
jns
dec
mov
rolb
hlt
and
pushf
popa
add
add
adc
xor
inc
sbb
fildll
clc
test
mov
xor
push
pushf
inc
outsb
push
sbb
dec
or
in
cltd
cld
aaa
cmp
aam
imul
inc
lea
xchg
shl
popf
mov
mov
pop
mov
pop
push
add
fdivl
mov
cmc
icebp
icebp
adc
jae
popa
aam
adc
push
stc
fmuls
mov
sub
int
popf
mov
push
call
fstl
jmp
pop
scas
roll
xchg
or
loopne
cmp
je
mov
inc
xchg
lods
inc
in
in
cmc
jecxz
jne
int
sub
lea
or
mov
jmp
cmpsl
fsubrs
inc
jecxz
outsl
cmp
xor
mov
sbb
scas
shlb
nop
mov
push
cmp
in
or
sahf
xchg
cmp
push
nop
aad
inc
dec
inc
in
cmc
xor
out
adc
mov
incb
pop
imul
es
fnsave
jo
js
in
mov
mov
mov
ljmp
mov
or
mov
stos
push
inc
fnstenv
or
dec
adc
add
xchg
mov
xorl
mov
mov
sbb
jo
or
out
cmp
inc
xchg
add
sbb
cmc
add
pop
jg
push
outsl
mov
not
add
idivb
mov
imul
mov
pushf
mov
add
jp
add
and
xchg
push
or
sbb
mov
je
and
dec
pop
fwait
mov
pop
xor
movsb
loop
mov
add
jmp
mov
sbbb
nop
mov
pushf
mov
push
push
ds
aam
repnz
sub
fmuls
adc
mov
or
dec
or
pop
loopne
clc
std
mov
std
pop
pop
incl
lods
loopne
add
xchg
add
out
dec
cmp
test
mov
dec
js
xor
mov
cli
insb
rclb
lret
sarl
pop
das
sub
lcall
jmp
sbb
adc
std
dec
jne
push
loopne
jne
mov
std
imul
cmp
xchg
push
mov
and
or
dec
mov
or
push
and
or
sti
push
inc
xchg
adc
or
mov
lahf
in
or
add
fsubrl
xchg
out
or
dec
mov
xchg
cmpsb
mov
mov
sub
test
xchg
push
mov
mov
in
leave
and
in
mov
cmp
push
xchg
inc
mov
js
popf
dec
push
add
imul
pop
and
sbb
lcall
loopne
adc
add
jmp
mov
mov
in
cld
mov
pop
mov
inc
andb
aas
hlt
pop
pop
insl
push
loope
adc
je
dec
sub
add
or
das
outsl
sub
jns
cli
push
imul
mov
insl
dec
inc
or
pop
pushf
in
enter
addb
mov
dec
es
in
mov
pop
inc
fsubp
jne
cwtl
sti
add
ds
or
loope
adc
std
lock
vmwrite
jg
je
or
je
bnd
cli
or
push
jmp
or
pop
stos
fbld
jne
mov
test
sub
sub
pop
cmp
adc
rclb
in
cmp
fidivs
mov
in
ret
hlt
pop
les
faddl
roll
sbb
faddl
jne
or
sbb
jbe
loop
mov
jle
popa
leave
adc
fmull
cmp
or
add
hlt
push
add
push
or
xchg
dec
inc
pop
out
add
mov
adc
push
mov
ret
add
dec
clc
push
pop
mov
andb
cmp
cld
xchg
arpl
fs
jns
add
inc
inc
inc
mov
jns
sbb
adc
in
imul
xchg
insb
cmp
adc
cmp
enter
jmp
insl
sub
lds
insb
insl
xchg
mov
or
or
add
sub
scas
push
dec
subb
sub
in
mov
push
xchg
and
pop
or
cmp
js
jmp
mov
cmp
adc
xor
cmp
add
jmp
scas
sub
xor
or
clc
in
addr16
mov
in
sub
cmp
mov
test
jb
stos
loope
adc
clc
xor
repnz
enter
repz
mov
add
mov
into
ds
das
add
push
adc
and
mov
push
add
add
xchg
negl
hlt
mov
pop
dec
test
push
push
inc
inc
or
popa
outsl
sbb
jbe
andb
outsb
loopne
lea
je
lea
inc
push
dec
pop
mov
loop
cmc
xor
dec
in
cmp
and
xor
lods
popa
and
push
daa
clc
testl
jmp
pop
xchg
xor
hlt
add
imul
mov
mov
loopne
insl
push
xchg
bound
stc
push
pop
xchg
ljmp
movl
xor
push
jle
cli
mov
sub
jp
add
es
xor
stos
rorb
addr16
pop
out
or
insl
adc
pop
pusha
aaa
sarb
xlat
xchg
dec
repz
xor
mov
and
xor
pop
in
cmc
jne
push
sbb
xor
add
js
pusha
adc
jbe
and
les
aad
sbb
cmc
xor
out
adc
dec
jmp
icebp
add
cmp
jne
incl
into
xchg
mov
push
xor
push
sarb
imul
push
adc
mov
adc
or
push
jmp
mov
sbb
push
gs
loop
jno
mov
inc
mov
jle
push
add
lock
pop
pop
flds
mov
in
call
sbb
mov
and
mov
mov
add
or
out
jl
jp
inc
mov
loopne
and
mov
jge
daa
mov
out
mov
or
sub
mov
cvtps2pd
lahf
add
xor
cmpsb
jmp
add
orl
fwait
test
add
push
jg
fdivrs
adc
cmp
jg
test
jmp
sbb
cltd
xor
sub
add
pop
or
repz
add
fs
jb
inc
pusha
stc
cld
add
not
push
add
dec
cld
gs
xchg
aaa
sbb
dec
aam
aam
fcomp
or
push
cwtl
mov
inc
mov
rorl
out
push
jno
addl
repnz
jno
int3
out
push
and
xor
test
lahf
cmp
shll
or
les
push
es
mov
les
dec
insb
je
lock
push
or
call
iret
push
test
mov
cwtl
movsb
cmpsl
mov
mov
sub
orb
and
nop
out
and
jecxz
pop
adc
add
ret
int
loope
jmp
outsl
cmpsb
sbb
jecxz
loop
lock
stos
fnsave
inc
inc
out
and
insb
fs
adc
std
nop
xorb
adc
push
mov
pop
push
jmp
cmpb
ja
in
push
xor
outsl
add
push
ret
lods
mov
add
idivb
add
mov
enter
pcmpgtb
xor
adc
pop
pushf
cltd
repnz
and
xor
fwait
push
ret
dec
xor
inc
or
push
je
cmpsb
adc
int
fs
inc
sbb
aaa
jmp
add
add
add
push
and
mov
cmp
mov
inc
adc
push
adc
faddl
imul
xor
dec
lcall
aam
xor
pop
cmpb
ret
popa
pop
xor
push
call
pop
int
ret
lds
add
cltd
es
add
iret
gs
jbe
sbb
add
or
mov
or
mov
outsb
stc
or
adc
dec
and
xchg
xchg
pusha
and
or
jle
push
sbb
mov
pop
mov
dec
sub
ss
xchg
cmp
pop
testb
sub
mov
repnz
dec
or
push
sbb
notb
je
jnp
insl
push
dec
enter
hlt
iret
pop
push
add
dec
xor
daa
repnz
loop
sbb
pop
xor
imul
cld
or
ja
jne
add
add
dec
mov
call
inc
hlt
idiv
scas
pop
dec
inc
xchg
mov
lock
roll
add
into
xchg
iret
addb
lahf
mov
jb
xchg
or
mov
addl
enter
out
leave
lcall
jl
and
inc
setl
add
push
inc
test
in
lds
in
jb
mov
add
cmp
xchg
jae
rcrl
cmp
mov
xchg
rcrb
mov
push
and
out
adc
out
popf
push
cmp
int
xlat
loope
sub
add
or
mov
fnsave
add
pop
dec
dec
push
or
or
out
inc
add
ffreep
jle
sub
outsl
addr16
call
sbb
mov
sahf
nop
mov
ja
out
ds
lret
cmp
inc
fisubrs
dec
sbb
ror
insb
sub
stos
cli
add
ds
jecxz
aaa
jmp
fildll
loopne
or
je
pop
and
jecxz
out
addl
in
test
and
mov
and
sub
push
gs
jge
xchg
push
in
enter
adc
sbb
or
and
adc
in
and
mov
or
sbb
enter
fdivrl
andl
jmp
loopne
dec
popw
fs
mov
scas
and
and
lds
lea
aad
sub
add
repnz
xchg
xchg
pop
dec
xchg
xor
push
ljmp
add
push
pop
sarl
mov
mov
sbb
in
mov
mov
inc
or
movsb
movsb
out
mov
add
push
shrb
dec
mov
js
jg
and
adcl
sub
inc
or
fwait
pop
pop
cmp
testl
dec
dec
loopne
hlt
xlat
mov
cli
loope
fsubr
dec
es
jne
mov
add
stos
pusha
ds
dec
add
movsb
test
popa
les
xchg
mov
push
imul
loopne
test
add
lret
fs
xor
mov
jbe
mov
xchg
mov
cmpl
filds
cmp
mov
aas
lret
in
mov
sub
xor
mov
dec
jb
in
jno
jns
call
jnp
push
jno
xchg
inc
push
fdivrs
enter
inc
or
test
push
dec
fmull
mov
pcmpgtb
sub
push
inc
or
xchg
cld
iret
sbb
sub
addr16
lret
cmpl
sub
sbb
push
push
fs
add
and
inc
pop
pop
iret
inc
inc
fidivrs
iret
push
jge
repnz
enter
push
add
bnd
clc
sbb
jbe
sbb
push
cmp
cmp
cwtl
or
test
xor
adc
int
jne
sbb
push
jecxz
movl
mov
cmp
fnstsw
push
ljmp
sbb
pop
fs
das
out
inc
rcr
insl
add
inc
sub
dec
mov
xlat
mov
inc
daa
jo
rcrb
imulb
pop
push
scas
and
jno
fsubs
sub
inc
outsb
mov
cmpsl
daa
cmp
jae
enter
add
push
loopne
and
add
lods
dec
cmp
into
shlb
dec
repnz
jmp
aaa
clc
clc
or
cli
hlt
pop
or
or
push
xor
inc
dec
cmp
rcrb
inc
clc
add
xchg
pop
pop
mov
movsl
xchg
mov
in
jbe
cli
pop
icebp
sub
sbbb
push
add
jne
ja
mov
stos
lock
lret
shl
mov
add
clc
and
and
xchg
push
repnz
dec
lea
push
jns
pusha
push
inc
mov
sub
cwtl
mov
lock
inc
inc
pop
mov
dec
scas
decb
jne
add
dec
dec
mov
mov
sarl
xorl
cld
mov
dec
xor
or
stc
xchg
clc
push
inc
dec
mov
clc
shll
cmp
dec
jbe
bswap
xor
push
push
add
nop
fisttps
shrb
stos
movsl
jo
add
sub
pop
add
xor
sbb
mov
mov
loope
mov
push
lea
xchg
jmp
cmp
dec
inc
rclb
xchg
fldenv
sbb
push
add
pop
cli
adcb
insl
jne
test
in
mov
insb
cmp
cltd
sbb
and
aad
sarb
das
add
xor
call
add
or
repz
sahf
sbb
pusha
imul
loope
xchg
or
and
add
call
lea
push
sbb
int3
sbbl
iret
pushf
sbb
aam
mov
loope
xchg
jg
jmp
pop
les
cwtl
xor
inc
mov
bound
int
lods
js
les
jns
ficomps
fdivrs
push
in
mov
jb
jg
add
push
aad
punpcklwd
xchg
and
sbb
cmp
mov
into
or
stos
inc
sub
adc
and
sbb
loope
pop
jge
jle
xchg
mov
test
and
test
add
jg
sub
add
imull
push
sub
dec
sub
and
xor
inc
cs
sbb
pop
inc
cmpl
xchg
add
adc
hlt
aam
pop
stos
shl
xchg
pop
rcr
fcmovnbe
rol
sbb
bound
add
jl
mov
mov
aad
lods
cmpb
jb
out
in
jnp
ret
fidivs
or
and
mov
push
lret
fsubr
mov
cmpb
sbb
aas
adc
add
dec
pop
mov
mov
cmpsl
xchg
sub
out
testl
popa
or
popf
adc
fcoms
or
enter
pop
dec
mov
fcomps
mov
or
scas
mov
in
inc
pop
divl
shlb
aaa
test
xor
int3
aaa
test
sub
add
dec
mov
jmp
mov
fucomp
pop
push
test
mov
and
dec
pop
pop
fisttpl
sahf
inc
add
and
adc
and
fcom
mov
jbe
into
or
lock
fbld
sbb
mov
dec
cmp
fsubr
sub
lock
push
jbe
shll
cmp
mov
out
test
enter
push
pop
mov
bswap
mov
lea
shl
out
int3
sbb
stc
mov
mov
add
vmwrite
or
popa
pushf
mov
in
mov
pop
add
or
lcall
add
aam
adc
pop
push
xor
js
ljmp
mov
aaa
cwtl
mov
aam
cmp
inc
insl
movsb
mov
shlb
cmp
pop
xor
jp
push
dec
fs
mov
shrl
outsl
test
repnz
xor
push
aaa
push
dec
fimuls
je,pn
add
adc
jmp
inc
mov
cltd
inc
add
in
sbb
das
sub
xor
ret
adc
push
fld
push
dec
in
dec
shlb
sbb
popa
xor
repnz
mov
add
xchg
js
inc
add
movl
dec
mul
subl
push
xchg
push
xor
fsts
orl
ljmp
adc
or
sbb
fisttpl
test
push
xchg
xchg
jecxz
push
mov
imul
sub
or
pop
rolb
inc
cmp
insb
cmp
and
movb
adc
adc
cld
mov
loopne
jle
adc
inc
push
orl
arpl
push
leave
inc
mov
mov
testb
out
dec
jns
pop
pop
je
in
mov
je
shlb
sbbb
push
pop
jg
jnp
cmp
xchg
xor
adc
subb
pop
cmc
cmpsb
mov
sbb
pushl
pop
xchg
loop
aam
fdivr
jae
mov
sbb
fildl
add
fidivrs
sbb
or
rorb
add
inc
sbb
lock
ret
push
push
jg
iret
out
iret
add
adc
lret
or
add
fchs
jmp
mov
xchg
lcall
sarl
sbb
sbb
out
clc
testb
rclb
or
adc
ljmp
push
adc
shlb
add
lea
sbb
mov
cmp
stc
xchg
jecxz
aad
mov
lock
ret
loopne
sbb
ja
test
or
jg
loope
mov
cmp
movb
mov
notl
mov
or
jo
or
out
and
cmp
mov
dec
in
addr16
fstpl
dec
orb
pushf
cmp
xor
pop
jecxz
mov
sub
mov
jo
mov
int
ss
pop
pop
rorb
pushf
mov
enter
push
push
inc
nop
aas
cmp
je
jmp
xor
inc
fwait
xchg
lahf
xchg
xor
and
jnp
and
push
pop
mov
lret
mov
or
or
xor
push
lret
push
push
xchg
mov
mov
ja
push
test
pop
aas
mov
push
adcb
mov
and
loope
setnp
hlt
pop
cld
subl
xchg
cld
jno
inc
ss
xchg
or
xlat
inc
loopne
mov
push
add
adc
dec
test
mov
xor
roll
fs
mov
adc
pop
fsts
mov
mov
sub
cmp
lahf
xchg
ja
adc
pop
enter
jmp
mov
lods
rol
cmp
xor
xchg
jl
jb
xor
pop
fs
adc
nop
jge
mov
in
in
pushf
mov
nop
add
sub
loope
lea
xchg
pushl
aad
out
inc
mov
pop
push
dec
jmp
hlt
cld
adc
sbb
sub
sbb
dec
pinsrw
or
ret
cmc
inc
cmpsb
aam
sub
push
pop
push
cwtl
push
imul
xchg
add
mov
subb
mov
aam
movsl
jae
push
insb
inc
sbb
out
adc
add
loope
sbb
ret
push
pop
push
xchg
mov
pop
or
mov
loopne
nop
cmp
push
gs
aaa
and
outsl
adcb
sbb
js
leave
sarb
shl
mov
adc
mov
inc
sahf
out
stc
mov
rcrb
in
jg
inc
add
jp
mov
sbb
pushf
mov
push
stc
mov
aaa
cld
nop
std
adc
sbb
movb
adc
sbb
and
or
shlb
int3
inc
mov
mov
in
add
into
inc
push
cmp
int3
cmpsb
pop
jo
push
xor
cmpsb
push
sub
pop
fcmovnb
jecxz
lahf
or
sbbb
xchg
nop
daa
inc
dec
pushf
cmp
imul
push
icebp
jo
mov
sub
in
add
adc
xchg
add
scas
test
cs
lea
mov
mov
movsl
out
adc
pop
mov
mov
xchg
push
pop
push
out
repz
pusha
stos
inc
popa
gs
add
dec
pusha
sti
mov
rcrb
jne
lods
js
jnp
int3
and
mov
pusha
movsb
scas
icebp
or
lock
in
xor
cwtl
clc
mov
shl
add
pop
jecxz
jmp
push
add
cmp
mov
out
les
fcoms
sbb
test
mov
int3
dec
addl
rorb
test
or
mov
in
jmp
fwait
adc
hlt
push
shrl
add
dec
push
cli
add
icebp
mov
mov
push
iret
mov
or
xor
xor
add
inc
jne
cmp
and
add
cmpsl
sbb
jbe
fbstp
xchg
or
and
mov
sbb
jle
add
sub
push
rcl
cmp
mov
or
sbbb
xor
add
sbb
push
adc
scas
subl
or
int
fidivrs
add
jne
pop
mov
cmpsl
loope
sahf
sbb
inc
call
inc
push
out
popf
and
xor
lock
das
ljmp
pusha
fcomps
xor
add
lock
imul
xor
xor
xchg
test
sub
or
mov
and
xchg
out
push
aam
and
sbb
pop
into
mov
lret
ror
jmp
mov
mov
mov
or
push
or
pop
and
xor
roll
pop
xchg
fdivrs
shrl
movb
popf
rcr
loopne
adc
and
dec
out
out
jg
in
adc
ljmp
nop
adc
adc
xor
pop
shlb
cmp
jl
and
xchg
sub
arpl
repz
call
mov
push
mov
pop
mov
imul
or
cli
ret
cli
sub
xlat
add
ret
jge
dec
dec
mov
cmp
jl
or
sbb
push
dec
adc
or
sbb
sbb
dec
mov
xor
sbb
cltd
add
xchg
adcl
and
mov
pop
jge
lock
sbb
adc
pop
repnz
adc
pop
je
xchg
mov
mov
adc
pop
outsb
mov
movsb
pop
mov
outsb
adc
lock
dec
mov
fcmovnb
imul
std
mov
shlb
loop
adc
pusha
ficoms
ss
out
and
xchg
sbb
sbb
push
push
sub
push
xchg
ret
in
push
and
jbe
add
push
ret
insb
movsb
xor
in
bound
jae
pop
movl
sub
jns
ret
dec
fimull
aam
add
and
sar
rorb
add
jge
shll
imul
or
inc
and
dec
pushf
xor
imul
lahf
imul
call
in
js
push
je
push
or
cmp
ret
mov
arpl
ret
adc
add
pop
inc
adc
bound
and
ljmp
or
add
pop
xchg
mov
pop
mov
push
pop
cli
jecxz
mov
pop
mov
or
adc
dec
pop
or
sub
das
inc
and
test
mov
mov
rolb
cwtl
out
cwtl
or
in
push
scas
fmuls
call
aaa
add
das
jle
pop
aaa
pop
sub
loope
out
push
xor
das
mov
sbb
lret
jne
push
decb
push
enter
jne
hlt
cs
and
in
mov
jl
inc
inc
dec
pop
or
or
add
push
xadd
xor
add
push
into
mov
sar
add
adc
inc
call
testl
call
movb
ljmp
push
push
jmp
pop
add
xchg
push
xor
add
test
test
je
into
andl
outsl
in
inc
pop
add
fiaddl
xchg
bound
iret
mov
mov
leave
test
adc
inc
mov
cmpsb
cmp
cli
ds
inc
out
jge
test
test
xor
xchg
nop
out
inc
mov
mov
pushf
frstpm(287
push
mov
pop
push
fs
nop
dec
nop
in
xchg
xchg
push
cwtl
push
pop
push
cmp
adc
mov
push
mov
rep
movl
pop
jmp
mov
sbb
jl
fnstenv
lea
jp
add
nop
xchg
add
in
and
mov
fs
cld
inc
jo
mov
inc
cld
lock
fwait
stc
out
dec
mov
push
push
fcoml
int3
sbb
jle
mov
es
push
push
push
mov
push
inc
imul
sub
add
fwait
jbe
xor
and
adc
sub
aas
les
jns
and
inc
add
lods
pop
and
jae
gs
js
mov
inc
jne
push
daa
fmul
or
push
out
mov
push
add
out
mov
add
push
dec
popa
add
frstor
mov
dec
or
add
pop
adcb
ds
push
ret
imul
add
xchg
push
xchg
push
pop
clc
mov
into
call
add
add
pop
jg
jbe
lds
jns
add
hlt
push
adcl
cmp
xchg
sbb
sbb
adcb
aas
shl
shr
or
mov
or
xor
add
mov
les
lock
xor
or
lock
mov
rclb
add
add
sti
std
call
jl
pop
jg
or
xor
inc
jmp
pop
pop
pop
ret
pop
and
out
clc
dec
loopne
dec
hlt
loopne
mov
movsb
adc
add
mov
and
add
sbb
dec
lcall
cmc
or
lock
mov
xor
add
js
mov
xchg
add
mov
jbe
jle
fisubrs
cmpl
adc
cmp
adc
dec
adc
imulb
jmp
roll
dec
cmp
add
out
inc
lea
push
inc
ret
mov
mov
and
xor
jl
inc
mov
aas
cmp
ret
popf
sub
dec
out
cwtl
js
inc
add
xchg
cmp
adc
inc
mov
push
jbe
rcll
mov
mov
pusha
subl
sahf
nop
sbb
push
es
jo
push
xor
in
test
bnd
mov
mov
test
test
adc
add
mov
out
cwtl
push
adc
mov
add
cwtl
mov
mov
xacquire
add
xor
ret
enter
repz
pusha
mov
cmp
or
push
lret
cmp
lock
add
icebp
push
js
inc
stos
aas
mov
dec
push
push
push
addl
insb
daa
ds
sbb
pusha
pushf
sbb
inc
jl
repz
js
shrb
adc
and
mov
mov
je
imul
jae
inc
gs
aaa
popa
adcb
add
inc
add
push
notl
sbb
dec
test
xor
pop
jmp
or
incl
in
icebp
inc
cmp
jne
smsw
pop
vsubpd
push
stos
arpl
sbb
pop
orb
adc
sub
mov
xchg
inc
femms
out
addr16
ss
repz
inc
xor
insb
cmp
daa
icebp
xchg
add
imul
popa
in
jne
push
hlt
mov
enter
adc
jge
jecxz
and
jg
gs
inc
jl
xchg
cs
pushf
icebp
jb
sub
xor
adc
mov
sbb
cli
or
jg
cltd
add
pop
and
lea
mov
sahf
xchg
adcb
push
loope
and
rorl
xchg
xchg
fidivs
xor
pop
adcb
sub
push
inc
jae
fimuls
sbb
and
sbb
mov
jae
arpl
subl
rorb
inc
jo
cwtl
jg
sub
adc
sbb
jge
or
int3
aad
xchg
adcl
imul
adc
xchg
outsl
call
push
xchg
sbb
test
data16
inc
sub
test
dec
or
or
ret
les
push
clc
jne
lock
or
add
xchg
lock
in
rolb
test
imul
mov
cld
fimull
dec
cmp
sete
or
and
push
mov
inc
decl
cmpl
and
sbb
jno
stc
ret
mov
or
pusha
pop
cli
ja
inc
pop
dec
shll
mov
xor
cmp
inc
or
add
cmp
mov
inc
mov
arpl
xchg
roll
mov
pop
xor
and
ret
jns
int
inc
lock
or
dec
adc
and
shr
adc
mov
sbb
pop
mov
decl
add
incl
xor
adcl
add
movb
popa
add
sbb
xchg
adc
add
dec
pop
enter
xbegin
jne
pop
mov
mov
ret
adc
out
inc
rcl
idivl
adc
ret
jne
inc
push
add
lcall
push
pop
or
test
lahf
push
push
mov
stos
hlt
inc
push
push
rep
sub
mov
push
or
test
push
mov
push
sbb
lds
push
push
add
pop
clc
xor
or
lock
ljmp
mov
inc
stc
push
out
push
rorb
mov
jle
dec
cld
adc
orb
fdivrl
adc
nop
mov
sbb
shlb
add
xchg
in
mov
xorb
mov
or
icebp
inc
inc
or
and
cli
cmp
aam
pop
inc
aam
inc
mov
enter
xor
mov
inc
or
push
fmuls
sbb
dec
add
les
out
stc
loop
sub
sub
jns
mov
sub
or
les
and
mov
mov
fcom
clc
cmp
adc
sub
cltd
nop
xchg
and
and
or
jnp
push
jbe
push
add
inc
gs
add
ljmp
dec
jl
inc
xor
jnp
inc
jo
push
mov
mov
outsl
call
jne
or
sbb
add
jne
inc
mov
insb
mov
icebp
pop
mov
imul
dec
inc
jbe
mov
mov
adc
in
pop
xchg
pop
sub
sti
mov
xor
and
fdivrl
sti
jae
mov
and
xor
lcall
out
cs
lcall
or
add
xlat
inc
sbb
mov
cmp
scas
out
add
mov
lods
jne
test
cld
sti
loopne
mov
pushf
decb
jmp
xchg
xor
and
xchg
movsb
movsb
enter
test
mov
mov
adc
outsl
mov
sarb
pop
push
push
dec
sbb
ss
pop
mov
and
jge
add
out
pop
xor
push
adc
test
data16
or
ret
rclb
cwtl
cwtl
inc
pop
mov
out
pop
add
sbb
std
jo
push
rorb
incb
cmp
jl
adc
xor
and
pop
dec
pop
cmp
sar
loop,pn
or
jmp
push
or
mov
packuswb
clc
sub
pop
jno
xorb
cmp
mov
sbb
pusha
xor
rclb
and
jo,pn
add
adc
or
and
add
lock
shrb
and
rolb
xor
in
in
xor
pop
lds
rolb
cmp
mov
stos
shl
jmp
sub
nop
aaa
int
adc
inc
cld
dec
addb
mov
dec
sub
bound
dec
xor
inc
pop
inc
lea
xor
mov
int
push
add
lods
push
shll
or
pop
aas
add
pushf
or
rol
gs
or
adc
xor
mov
jg
pop
test
jge
mov
mov
push
mov
daa
sub
inc
loopne
add
insl
push
lea
mov
add
ret
addr16
test
xlat
cmp
jno
mov
dec
xchg
mov
jne
test
mov
icebp
pushl
add
or
rolb
enter
pop
pop
cmp
mov
in
dec
lock
fisttpl
insl
add
sbb
push
xlat
inc
sub
inc
inc
insl
pop
sub
or
pusha
pop
jl
cmp
push
jo
mov
inc
dec
push
test
cmpsl
jb
outsl
cmp
mov
sub
cmp
jle
mov
dec
and
push
lret
test
clc
das
js
js
stos
push
dec
imul
repnz
sbb
push
leave
aad
add
or
xchg
iret
test
pushf
ror
test
ret
adc
loopne
jo
sbb
or
lahf
cmc
subl
stos
insl
mov
lea
leave
and
sub
lcall
lock
xchg
sbb
sub
mov
xor
test
stc
je
push
xchg
in
and
or
pop
sar
out
mov
pop
ret
push
push
cmp
xor
dec
xor
and
enter
xor
test
cmpsl
jl
sbb
jno
jg
pusha
ja
cmp
movsl
or
shlb
jbe
jmp
adc
arpl
mov
ja
inc
sbb
inc
outsb
pop
mov
int3
lret
outsl
movsb
sbbb
fwait
jo
aam
movsb
leave
out
xchg
dec
xor
test
stc
test
ret
je
mov
sub
adc
and
push
or
or
cmpsl
and
test
inc
dec
pop
pop
and
outsb
mov
call
lea
mov
dec
cmpsl
add
arpl
mov
jnp
shlb
xor
add
call
and
ret
pop
and
leave
jne
mov
movsl
js
mov
call
add
push
inc
push
nop
or
xchg
mov
clc
pop
or
mov
popf
cli
adc
xlat
cmpsb
inc
shll
adc
or
sub
adc
out
push
add
pop
xchg
test
es
add
mov
push
mov
outsl
adc
dec
enter
lret
rorb
inc
ds
loopne
mov
sbb
repz
xor
shl
stc
sbb
mov
sub
cmpsl
push
inc
imul
ret
add
mov
push
or
sbb
scas
mov
popf
jp
incb
mov
mov
xor
push
scas
lock
adcb
jmp
mov
int3
fidivrs
add
pop
scas
xor
scas
push
or
jno
ret
push
js
adc
pop
sub
add
or
mov
xlat
popa
jae
or
or
inc
mov
pop
ljmp
lret
lahf
inc
sbb
andnps
nop
shll
roll
flds
movsb
lret
lret
dec
pusha
xor
push
sbb
ret
fsubr
pop
pop
cwtl
jge
push
aas
mov
push
jo
and
lahf
movb
jbe
add
add
cmp
subb
subl
push
sbb
and
inc
mov
push
ret
loop
push
and
jge
nop
dec
and
incl
add
or
outsl
push
mov
mov
dec
aas
sbb
decb
lcall
shr
mov
jg
and
jnp
jne
rcrb
push
data16
pop
imul
sbb
pop
xor
or
or
mull
xor
cmp
cs
movl
xor
xchg
inc
xor
sub
imul
fs
popa
push
repnz
das
xchg
or
incb
and
decl
call
mov
mov
xchg
inc
cs
mov
mov
and
inc
mov
and
jo
add
mov
cmp
add
xor
fidivl
jl
mov
cmpl
int3
push
imul
mov
test
sbb
cld
movsb
imul
enter
pop
xor
cwtl
push
rclb
nop
loopne
mov
mov
pop
test
mov
test
jl
das
js
ret
fidivl
pop
je
add
jo
lods
sbb
sub
enter
sub
pusha
mov
xor
pop
in
xchg
push
sub
pop
and
inc
dec
mov
int
pushf
pop
inc
adc
xor
cmp
out
xor
imul
or
inc
and
ja
push
mov
lods
jg
shlb
push
lock
or
mov
inc
push
push
rclb
in
lods
cmp
xor
and
adc
dec
cwtl
pushf
mov
movsb
mov
add
popf
fisubrs
aam
add
pop
sbbb
and
xchg
inc
in
nop
and
in
mov
jo
or
int3
mov
jecxz
in
mov
inc
dec
add
mov
faddl
inc
cltd
mov
rcr
push
jo
jne
xchg
fidivs
add
or
out
add
push
and
sbb
outsl
dec
leave
enter
mov
int3
or
push
enter
daa
push
dec
imul
dec
or
dec
mov
xchg
pop
ret
or
daa
or
iret
cs
sub
setl
add
dec
gs
add
inc
inc
push
adc
cs
add
or
pop
pushf
stc
mov
in
out
adc
or
movsb
stc
dec
and
sub
enter
jp
hlt
pushf
fs
rolb
mov
lods
les
push
cwtl
inc
push
movsb
ret
push
ss
dec
pop
push
dec
jbe
cmp
sbb
dec
xorl
aaa
stos
xchg
test
je
outsl
or
fsubr
add
fsubl
sbb
scas
pop
push
push
dec
dec
xor
or
dec
xor
arpl
push
jo
js
fsubrs
push
dec
fisubrs
loope
arpl
xor
cld
mov
into
adc
or
xor
sub
loop
add
xor
test
lcall
jle
push
add
ss
push
xchg
addl
inc
push
pop
inc
mov
sub
add
jo
mov
sbb
dec
inc
jnp
les
sbbb
in
popf
addl
sbb
xor
addr16
jnp
sub
or
int3
adc
cmp
lea
sbb
insb
add
jae
or
sbb
sarl
sub
cs
mov
mov
jg
adc
jno
mov
insb
lahf
inc
dec
loope
enter
jae
fwait
sbb
lcall
into
adc
inc
ja
add
sti
enter
arpl
mov
add
out
pop
or
scas
loop
sub
mov
dec
pop
sub
std
xor
adc
notb
adc
out
sbb
push
inc
inc
test
xor
or
outsl
cmpsl
test
dec
adc
inc
dec
sbb
cmp
imul
push
jne
push
cmp
outsb
orb
pop
inc
inc
push
or
pop
shll
lahf
insb
hlt
push
or
imul
ja
outsl
fs
cmpsl
test
fwait
dec
cmp
or
outsl
jne
arpl
loopne
mov
or
frstor
mov
sbb
xor
mov
sub
adc
sub
sbb
or
push
xchg
fwait
jo
out
test
stos
mov
jo
outsb
sbb
jmp
loopne
jne
arpl
adc
and
inc
jno
sub
xorl
adc
cmpsl
push
xchg
lock
insb
imul
sub
sbb
mov
hlt
nop
and
sub
lret
sub
popf
addr16
adc
adc
pop
in
ret
jmp
movsl
push
and
push
dec
jns
sbb
xor
adc
ud2
rcll
pop
cmp
repnz
pop
add
gs
add
push
sub
push
xor
push
push
adc
outsl
push
xor
push
in
or
movaps
stc
popf
and
outsb
mov
or
dec
mov
sub
mov
mov
in
mov
pop
fcmovnbe
mov
and
mov
and
ss
sub
jg
push
das
jno
push
sub
sbb
xchg
dec
jle
push
jno
or
mov
adc
out
pop
fs
pop
add
dec
jnp
sub
icebp
sub
adc
mov
jo
je
imul
outsb
imul
sti
fwait
icebp
out
test
into
insl
pop
cmc
out
test
adc
inc
cltd
jg
jge
ja
jns
stos
shrl
inc
cmp
and
call
mov
orb
jnp
mov
cmp
dec
adc
insl
gs
inc
jb
fdivr
lahf
ja
inc
push
insl
ss
adc
xchg
add
xor
rorb
or
in
and
das
cld
clc
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
rcrb
fdivs
xor
les
push
sub
cmpl
fidivs
or
cwtl
clc
sub
push
push
adc
icebp
add
ret
sbb
cmp
adc
mov
or
jne
mov
leave
and
adc
dec
add
mov
enter
xchg
sbb
icebp
or
sub
repz
sarb
into
adc
add
icebp
repnz
xchg
mov
xor
add
roll
jns
test
push
xlat
sbb
outsb
test
mov
daa
nop
add
inc
nop
enter
fildll
pop
mov
sbb
adc
mov
enter
mov
pop
xchg
enter
incb
jmp
or
xchg
sub
sub
xchg
mov
ficoms
ror
cmc
sbb
adc
or
icebp
push
inc
push
jg
sbb
or
insl
sbb
and
nop
adcl
inc
dec
mov
enter
rol
adc
out
mov
inc
cmpsb
fadds
dec
and
xchg
jb
sbb
push
add
add
fbld
nop
fidivrs
es
mov
sbb
sbb
and
neg
xchg
into
dec
or
aam
adcb
ret
lret
ret
cmp
ficompl
mov
int3
mov
mov
mov
xchg
pop
mov
xchg
pop
repnz
sub
hlt
and
pop
cld
dec
cs
enter
cs
adc
mov
fsubs
xchg
dec
fsubrl
xchg
dec
cs
xchg
addr16
fs
in
addr16
addr16
lock
hlt
sbb
and
jl
sbb
enter
mov
add
add
sbb
lahf
dec
sahf
xchg
or
sbb
xchg
cmp
adc
or
jecxz
je
sub
dec
mov
dec
fmull
std
inc
js
sti
inc
sahf
mov
inc
fs
jne
jns
xchg
bound
insb
inc
imul
fcompl
cmp
pop
outsb
dec
jb
jo
enter
jb
insl
jo
mov
test
mov
mov
mov
sbb
aas
inc
pop
inc
jle
xor
mov
add
push
loopne
or
call
xor
sub
fdivp
loope
ljmp
or
dec
push
out
or
pop
pop
adc
ss
sub
mov
test
and
and
add
int3
cmpsl
and
push
inc
dec
iret
push
and
loopne
fs
jl
rcll
sbb
pop
mov
pop
shll
mov
enter
cs
in
lahf
add
enter
dec
dec
sahf
clc
fdivrl
test
push
sub
aas
int3
xchg
xchg
xor
leave
or
es
paddusw
jg,pt
sbb
dec
pop
pcmpeqd
lret
mov
mov
pop
fdivp
cld
push
lret
test
push
in
sahf
gs
rolb
pop
cld
push
add
push
inc
jne
jne
xchg
das
inc
or
jmp
mov
sahf
add
sub
dec
add
adc
es
xor
lds
pop
leave
movd
mov
aas
pushf
repz
mov
iret
adc
and
push
sbb
add
nop
arpl
pop
add
sub
jns
push
lea
jl
adcb
push
outsl
xchg
imul
dec
xchg
sbb
loope
stos
enter
push
jo
cmp
pop
or
adc
pop
sti
jo
xchg
dec
adc
add
jge
sbb
and
pushf
or
leave
inc
in
subl
dec
jo
dec
gs
mov
out
lods
pushf
mov
sub
faddl
push
stos
aas
jl
nop
mov
or
inc
adc
and
adc
scas
test
stos
fldt
add
sbb
in
adc
adc
jae
imul
es
sbb
ss
sbb
sub
mov
mov
jmp
mov
divl
mov
es
es
and
mov
xor
dec
and
pop
cmp
mov
scas
bound
nop
pop
mov
ret
and
into
cwtl
sbb
adc
xor
into
pop
andb
cmp
aaa
sub
pusha
inc
add
xchg
adc
push
fsts
pop
and
push
nop
mov
xchg
push
sub
lds
lock
aad
or
ss
and
pop
cmp
adcl
push
aas
cwtl
pop
mov
mov
in
adc
cwtl
xchg
nop
push
add
sub
or
sbb
dec
es
mov
shll
pop
iret
pop
cmp
mov
hlt
sub
inc
leave
nop
cld
sbb
add
mov
fimuls
pop
pop
inc
adc
add
test
or
xchg
rcrb
mov
cmp
and
mov
rolb
inc
inc
add
adc
xchg
xchg
nop
pop
pop
andb
sub
fcomps
sbb
pop
cmp
sbb
push
sub
test
xor
mov
mov
mov
sbbb
inc
inc
jb
xor
addr16
and
inc
adc
pop
add
loopne
cmp
nop
insb
pop
nop
je
or
loopne
les
ret
iret
pop
cmp
add
das
sbb
xchg
and
add
push
add
mov
push
rol
and
or
dec
xlat
pop
inc
ss
sbb
nop
popl
and
add
ret
pop
aad
sar
xor
jmp
cmp
dec
mov
mov
jo
rcrb
aaa
icebp
cs
add
dec
xor
stos
add
jne
addl
push
daa
call
pop
daa
in
and
mov
inc
repnz
in
xchg
inc
stos
lahf
scas
fists
xor
pop
xor
daa
nop
mov
mov
xchg
push
fcoms
or
shlb
pop
repnz
xor
inc
dec
and
cmpsb
dec
enter
negb
push
rolb
mov
and
xor
jno
or
jg
loope
add
imul
add
push
ja
sub
mov
stc
jno
inc
je
or
idivb
dec
je
sbb
pop
push
cmp
push
xchg
or
lea
add
mov
subb
adc
mov
test
inc
dec
pop
xor
mov
clc
lret
clc
sbb
pop
stos
hlt
mov
push
cmp
dec
lock
xchg
lock
dec
mov
pushf
in
add
cmpsb
in
in
sub
call
daa
sub
fisubrs
in
mov
nop
dec
jmp
inc
loopne
and
sub
adc
sub
sti
int3
adc
jb
les
loopne
sti
inc
pop
rcrb
push
xor
shlb
xor
rcl
adc
add
mov
jo
and
xor
cld
imul
dec
sahf
sbb
pop
imul
add
out
scas
cmp
aam
jmp
adc
or
and
cmpl
pop
test
dec
insl
mov
push
xor
inc
push
cmp
insb
dec
popa
movsb
adc
test
or
or
aam
push
adc
pmulhuw
fs
xor
add
and
adc
imul
insl
aaa
or
ret
stc
add
cwtl
lods
daa
xor
push
in
push
add
jl
push
sub
sub
jbe
test
pop
cmp
sub
ds
inc
testb
inc
add
popf
push
add
sbbb
add
push
fisttpll
out
loope
call
test
imull
mov
cmp
jge
dec
push
dec
ret
add
cmp
xor
mov
pop
shrb
rclb
psadbw
std
pusha
pop
imul
call
jne
ja
mov
jo
pop
pop
nop
pop
inc
into
add
aas
addb
addb
inc
fists
sti
adc
pop
cmp
jae
push
aas
jmp
push
mov
jne
add
push
jp
imul
pop
sub
mov
inc
incl
xchg
add
repnz
cvttps2pi
xor
adc
je
xlat
xor
and
pop
sbb
and
jmp
ss
cwtl
insl
in
loopne
shlb
ja
mov
lahf
mov
js
push
xchg
pop
ret
pop
sbb
inc
xchg
add
add
jecxz
loop
adc
cmp
xor
inc
add
dec
push
add
jecxz
fcmovnu
push
add
incl
mov
mov
pop
add
clc
jl
pushf
xchg
push
in
outsb
imul
jmp
fwait
add
mov
push
orl
pop
sbb
mov
cld
mov
sub
inc
std
or
add
add
test
clc
mov
scas
ret
or
in
jmp
sbb
mov
pusha
sbb
xor
dec
icebp
imul
or
push
loopne
outsb
pop
cmp
add
push
adc
sbb
and
mov
fldl
adcl
jne
loopne
ja
and
push
xor
mov
out
dec
test
cld
sub
sub
and
add
test
fs
loope
xchg
xchg
or
in
and
and
mov
call
imul
in
in
push
xor
sahf
sub
call
push
jl
pop
jne
jmp
push
cmp
xchg
or
nop
lock
or
je
repnz
pop
test
pop
add
pop
jnp
sahf
inc
push
clc
adc
ja
adc
imul
fwait
rcl
mov
xor
pop
aam
add
add
out
push
ja
add
mov
xor
insb
sti
add
das
mov
or
and
rcrb
xor
inc
add
shlb
mov
nop
cmpsb
pop
popa
aaa
mov
sub
movl
adc
je
add
int
mov
push
shl
cmp
je
jmp
sbb
sahf
and
xor
js
shlb
inc
lahf
scas
inc
cmp
bound
xchg
or
jb
cmpl
xor
adc
xor
iret
vcvtsi2sdl
jnp
mov
pop
push
mov
push
push
stos
sti
or
push
dec
pop
leave
mov
inc
fadds
ja
js
and
fs
or
mov
sti
lock
xchg
es
inc
mov
and
in
mov
in
adcb
xchg
inc
push
cmp
mov
and
jns
mov
xor
mov
push
pop
xchg
nop
dec
push
enter
add
inc
or
popf
ret
andb
cwtl
bound
push
xchg
push
rorb
push
push
sbb
adc
lds
mov
xor
jae
pop
push
push
mov
lret
cmp
or
adc
add
mov
mov
negb
mov
xchg
inc
les
push
pusha
std
mov
jmp
std
push
ss
cmpsl
fldl
sbb
or
adcl
add
or
sub
loope
je
or
stos
add
fldl
rol
in
mov
mov
movsl
adc
dec
repz
pop
ds
xor
mov
test
faddl
imul
lcall
inc
pop
int
mov
push
data16
push
pop
inc
or
mov
rolb
push
adc
jns
rol
ja
xor
inc
mov
test
sbb
inc
js
stos
xchg
sbb
xor
stos
cld
fstps
fwait
pop
es
push
insb
xchg
xor
fisttpll
call
adcb
rcll
cmp
push
mov
sub
repnz
sub
das
cmp
jl
in
vmwrite
mov
jbe
dec
test
push
loopne
mov
jmp
push
cmp
jmp
dec
loopne
xchg
cmp
jmp
adc
cld
cmc
roll
dec
je
dec
fadds
jg
jg
jmp
adc
mov
xor
dec
cmp
dec
mov
or
aaa
roll
shlb
mov
sub
xor
fisttps
psubq
std
jg
sub
xor
and
xchg
push
mov
daa
ss
jmp
movsb
subw
add
inc
fadds
cmpb
push
mov
or
inc
sahf
push
pop
test
inc
sbb
adc
add
pushf
inc
stos
mov
roll
and
inc
sub
in
sbb
push
and
and
add
pop
jns
inc
das
das
xchg
pusha
dec
pop
pop
ss
and
push
aam
inc
dec
mov
mov
sub
and
mov
push
sbbb
dec
adc
scas
ret
or
das
sbb
xor
adc
inc
std
push
xor
hlt
inc
scas
imul
dec
jae
lcall
mov
pop
imul
call
mov
adc
test
cmp
mov
push
or
xchg
mov
sbb
or
push
movsb
aaa
in
sar
cmp
pop
idivb
pusha
inc
fstl
pusha
iret
fdivs
inc
mov
jo
loopne
sbb
and
adc
xor
inc
out
add
jno
fdivrs
jb
addr16
xchg
leave
loopne
push
mov
divb
dec
je
or
jmp
inc
fisubrl
mov
mov
or
mov
jmp
scas
inc
shlb
enter
sbb
int3
inc
arpl
test
jns
imul
imul
lock
sti
add
mov
dec
pop
push
sbb
add
mov
sub
fisubrl
sbb
or
jmp
in
rcll
and
adc
mov
js
dec
aaa
test
daa
jg
mov
cmp
jbe
xor
or
mov
sbb
jnp
xlat
and
nop
and
push
sbb
scas
add
outsl
test
adc
rclb
xor
lahf
or
adc
ja
mov
fstl
mov
pop
or
rcrb
inc
mov
popf
mov
adc
or
jbe
andl
or
mov
addr16
push
fs
push
jbe
dec
push
cmp
dec
inc
gs
and
and
dec
jge
lret
aad
adc
lahf
stos
shrb
add
push
cmpsb
mov
cmp
fldl
in
test
push
adc
insb
adc
adc
mov
adc
mov
pop
push
dec
pop
lock
jmp
cmp
xor
adc
ret
adc
dec
mov
adcb
add
leave
lcall
shr
cmc
nop
sub
cmp
adc
and
sub
call
idivl
jb
cmpsl
adc
and
mov
testl
xor
aam
out
inc
push
adcb
cmp
adc
mov
add
fiadds
and
jo
ss
mov
enter
dec
sub
fsubr
imul
adc
sbb
xchg
addb
dec
cltd
sbb
or
orb
add
cmpsl
adc
dec
pop
aaa
cmpsl
adc
add
repnz
sbb
adc
or
dec
repnz
add
lods
xor
add
test
xchg
insb
movb
sub
inc
repz
fmull
mov
mov
gs
fists
test
cltd
xor
loopne
sbb
adc
aaa
mov
push
xor
adc
xor
or
jno
dec
jmp
arpl
sbb
out
call
adc
lret
jbe
push
vxorps
adc
dec
xor
mov
xchg
sub
sbbl
inc
add
fistps
inc
dec
xor
add
dec
sarl
filds
dec
aaa
dec
jae
xor
shll
scas
loopne
rcrb
or
mov
push
push
stos
inc
sarl
push
push
hlt
and
xchg
or
push
in
pop
cmp
adc
pop
sub
dec
xchg
sub
mov
and
and
dec
lock
xchg
mov
mov
xor
push
cmp
sbb
sub
inc
scas
in
bound
dec
test
loopne
cmp
inc
fadds
dec
outsb
inc
dec
ret
lahf
cmpsb
jns
sbb
lret
dec
mov
mov
in
add
sbb
or
pop
sub
adc
xor
adcb
leave
xor
sbb
fldl
inc
imul
popa
addr16
mov
add
sub
leave
aad
mov
js
fwait
arpl
sub
cmp
leave
push
inc
dec
jmp
data16
loop
jmp
pop
add
pop
push
cmp
in
mov
and
jle
xor
pop
pop
adc
adcl
push
push
gs
jnp
lcall
fwait
push
scas
xlat
ljmp
adc
and
mov
and
outsb
mov
daa
mov
add
dec
jne
jo
test
push
imul
loopne
cli
orb
lcall
adc
ja
push
leave
sbbl
jne
sbb
sti
jl
or
pop
aam
add
mov
and
or
test
add
sub
lods
mov
addl
push
clc
pop
sbb
fs
out
out
cmpb
push
add
pop
ljmp
xchg
adcb
mov
or
lahf
cs
push
test
orl
imul
cld
push
or
dec
shll
out
jo
mov
orb
test
lret
lahf
push
mov
push
fimuls
cmpl
jnp
fstps
xchg
sbb
or
pop
lret
push
in
sub
bound
push
sbb
popa
pop
xchg
push
pushf
mov
xor
sbbb
xchg
xor
push
inc
jne
sbb
sub
andl
bndstx
sbb
jg
adc
mov
arpl
adc
out
and
gs
popa
pop
push
mov
push
mov
or
and
xchg
cmp
inc
mov
cmpsb
imul
mov
add
push
push
in
iret
pop
sbb
test
and
bound
xchg
addb
mov
or
sbb
jmp
pop
jno
sbb
cmp
pop
pop
inc
cmpb
inc
scas
loop
xor
movsl
jmp
lahf
jmp
insl
jns
or
xor
sub
inc
pop
dec
cwtl
lea
cmpsl
jne
inc
and
dec
xchg
inc
push
repnz
mov
jge
add
dec
enter
addr16
adc
xorb
jo
int3
cmpb
loopne
pop
lock
jmp
add
add
fiaddl
lcall
sub
sbb
sbb
adc
adc
pop
xchg
aas
pop
imul
add
and
cmp
ffree
and
xor
add
push
xchg
jecxz
dec
sarl
loopne
pop
cmp
jbe
dec
shll
mov
lods
mov
aam
pop
dec
rcrl
daa
jmp
push
sub
mov
push
mov
add
cmpsb
fists
and
add
fdiv
inc
ror
add
imul
test
cmp
inc
adc
mov
push
adc
push
sub
mov
fldl
and
fildll
push
adc
fstpl
push
and
ss
ret
faddl
adc
lcall
fs
in
jb
test
xor
dec
xor
xchg
cmp
push
pop
cld
pop
pop
jnp
push
bound
xor
jo
xchg
cmpsb
mov
sbb
push
insl
pop
daa
loope
clc
sbb
xor
push
clts
and
xchg
add
adc
or
fistpl
fsts
test
and
inc
pop
or
push
out
or
xor
or
inc
inc
cs
add
stc
jp
jo
adcl
dec
pop
lds
out
jmp
add
mov
pop
je
pusha
insl
add
frstor
es
jecxz
push
xchg
and
cmp
fldt
negl
lds
daa
push
jmp
repnz
xchg
add
add
mov
cmpsb
imul
clts
sbb
jo
outsb
inc
pop
jge
add
inc
pop
pop
aas
jg
jb
push
push
sbb
xorl
lods
inc
sub
es
in
sbb
std
sub
fildll
xor
jb
pop
inc
popa
mov
push
sbb
jno
mov
pop
or
ss
jb
lret
add
subps
cmp
push
test
loopne
in
pusha
jl
pop
and
insl
lea
pop
and
cltd
in
out
cmp
xchg
aaa
dec
aas
loopne
call
ss
loope
sub
pop
mov
xor
sub
stos
or
fwait
xchg
ja
nop
mov
pop
push
loope
add
inc
push
mov
outsb
xor
pop
push
hlt
pop
push
fwait
pusha
or
daa
jb
sbb
inc
pop
pop
jb
cmp
xlat
push
xchg
adcl
jbe
or
push
nop
cmpsb
imul
enter
xchg
pop
dec
rcrl
push
pop
sub
and
inc
gs
pop
gs
inc
inc
xlat
pusha
call
or
inc
pop
nop
and
and
sub
mov
inc
cmp
test
gs
lret
push
mov
les
sub
add
mov
add
cmp
mov
andb
xchg
fs
push
movsb
imul
les
mov
daa
fildl
repnz
push
and
gs
sbb
gs
push
repz
in
mov
inc
cs
mov
mov
mov
stc
aaa
incb
push
test
addr16
lods
mov
aaa
popa
in
cmp
xchg
pusha
call
cmp
nop
call
ss
imul
mov
lea
mov
enter
js
dec
cmpsb
push
sbb
or
mulb
xchg
fildll
add
test
pop
pop
pushf
xchg
and
push
fildll
adc
and
xchg
pop
fildll
xchg
dec
push
enter
add
jge
cwtl
inc
jb
jb
insl
push
dec
rorl
jb
push
xchg
rorl
xor
mov
fcomps
lcall
clc
rcrl
cmpsb
imul
pop
lcall
lret
or
push
insb
xor
lret
and
cmp
and
push
lods
popf
sub
data16
pop
pop
and
subb
rcl
cmpl
adc
rolb
push
outsl
aas
xchg
add
jnp
mov
insb
inc
imul
jnp
pop
stc
inc
xchg
pop
cmp
leave
ja
and
lcall
mov
and
pop
push
add
lcall
pop
jne
mov
sbb
push
add
pop
jne
xchg
xchg
cmp
xchg
andl
dec
push
mov
sbb
aad
cmp
jmp
pusha
out
pop
out
loopne
out
and
addr16
and
add
add
push
mov
scas
nop
lret
mov
pop
cmpsl
mov
push
in
adc
shl
out
xchg
pop
repnz
stc
call
insl
jo
fldcw
ss
push
xchg
mov
pop
dec
aas
add
repnz
and
inc
xchg
imul
or
xor
hlt
xchg
hlt
or
xor
ja
jmp
xchg
add
dec
aaa
hlt
outsb
sub
loope
insb
cmpsl
outsb
or
xchg
imul
pushf
mov
add
clc
add
or
movsb
adc
lcall
outsb
adc
xor
or
adc
mov
xor
xor
cmp
movb
add
in
xchg
sbb
or
rorb
xchg
jb
adcb
je
add
pop
outsl
adc
mov
mov
sub
mov
jo
add
mov
xor
and
xchg
in
imul
es
movl
cmpsb
imul
ucomiss
lcall
jno
fwait
lods
mov
jb
add
jmp
inc
shll
xchg
dec
cwtl
xchg
das
lods
cmpsl
jne
pop
pop
sbb
add
cwtl
das
mov
add
push
pop
lret
push
adc
aam
and
aas
test
cmp
test
iret
jge
fwait
jmp
or
in
loopne
and
push
mov
shlb
rcr
aam
jb
lret
sar
clc
decl
ds
jae
add
insb
cltd
fmuls
inc
movsb
pusha
add
mov
jl
aaa
pushf
push
xchg
sub
and
bound
ret
jbe
mov
cwtl
enter
xchg
and
and
push
add
leave
and
mov
mov
jbe
add
mov
pusha
cmp
xchg
or
and
test
mov
inc
sbb
mov
xchg
jl
lods
insl
aaa
nop
fidivl
sbb
push
adc
add
inc
clc
mov
jno
lret
inc
sbb
xchg
in
das
mov
outsb
xor
add
or
jbe
add
pushf
pop
sarb
fwait
add
daa
jg
or
xchg
add
pop
jne
jae
cs
shll
jo
fidivl
cld
pop
imul
je
xchg
adc
sub
jb
xchg
out
call
dec
or
add
adc
repnz
sub
add
add
ret
xchg
je
in
xchg
and
jo
add
mov
dec
repz
and
enter
fiaddl
frstor
cmpsl
mov
mov
lock
rorb
lock
lea
scas
movsl
mov
xchg
inc
xchg
jl
mov
mov
enter
mov
ret
push
imul
pusha
mov
jbe
dec
mov
add
mov
cltd
adcl
mov
mov
xor
inc
jb
push
push
push
dec
aad
xchg
in
in
dec
imul
bound
nop
sbb
aad
push
cmp
leave
jb
mov
cmp
pop
imul
jbe
insl
sahf
xchg
dec
jmp
add
dec
aas
jo
js
loopne
cltd
out
jl
lahf
sarb
inc
test
test
push
mov
xchg
call
dec
push
and
or
and
gs
test
lahf
sti
aaa
sub
add
rcll
mov
ja
jb
xor
inc
mov
lea
cmpl
or
cmp
mov
loopne
sub
fstpt
das
in
les
js
arpl
bound
add
in
jno
in
sub
in
ja
test
js
jg
and
push
les
xor
nop
mov
mov
imul
fs
movsl
imul
xchg
lcall
daa
xor
shll
mov
jns
gs
mov
add
mov
and
dec
mov
and
inc
xor
xor
bound
and
mov
push
jno
mov
dec
pushf
push
pushf
sub
pusha
mov
nop
cwtl
xchg
aas
xchg
xor
nop
movzwl
sub
mov
cmp
and
test
adc
out
pop
jnp
and
andb
adc
and
mov
movsl
ja
les
inc
mov
xor
xchg
movsl
stos
jnp
dec
sarl
pop
jle
jl
cmp
js
xlat
xor
loop
jge
jge
fs
test
testl
fs
mov
aaa
lock
popa
pop
cmp
or
inc
push
pop
and
sub
jnp
fdivs
and
mov
pop
add
fstps
lods
or
mov
jmp
fwait
sbb
dec
insb
enter
and
or
push
xor
mov
inc
dec
pusha
xchg
pusha
inc
adc
inc
pop
or
aad
test
sbb
dec
mov
les
push
imul
loope
loope
je
sub
das
xor
pop
shr
pop
jns
dec
fcoml
outsl
fadd
jns
cmp
cmp
cmp
cmpsl
scas
add
pop
dec
pop
jg
cwtl
movsb
adc
xor
pop
enter
push
push
test
jns
mov
sub
jp
bound
push
test
adcb
push
cwtl
or
loopne
inc
mov
push
mov
repnz
shl
loop
and
xor
sub
mov
pop
pop
cmp
ja
mov
repnz
dec
sarl
enter
mov
or
pop
push
and
inc
pop
jbe
mov
push
in
test
push
test
push
pop
cmp
mov
test
pop
inc
test
push
mov
inc
mov
pop
xor
insl
cmp
dec
pop
sbb
sub
lea
mov
stos
push
imul
push
fnstsw
leave
xchg
fmuls
shrl
mov
and
jbe
subl
pusha
mov
or
inc
sbb
mov
fadds
bnd
cmp
pop
cmpl
shll
pop
inc
jno
mov
jmp
test
test
and
inc
lods
pusha
inc
mov
stos
orb
and
lods
stos
mov
pop
adc
lea
orl
mov
mov
and
fimull
mov
insl
inc
test
inc
push
inc
pop
or
inc
dec
test
push
test
push
xor
arpl
sbbb
arpl
or
mov
daa
inc
mov
inc
pop
jns
pop
jb
sti
xchg
adc
stos
xor
dec
sbb
nop
test
xchg
add
inc
test
mov
push
nop
js
pop
jb
nop
push
aaa
jne
xchg
xchg
cmp
lea
xchg
adcb
dec
or
mov
xchg
fmuls
inc
jmp
adc
push
push
push
jg
push
or
bound
or
or
xchg
ss
mov
mov
xchg
or
cmp
mov
push
leave
sbb
cmp
sbb
add
sbb
sbb
loope
std
xchg
add
addr16
push
or
lret
push
inc
rclb
mov
pop
xchg
jo
dec
sub
insl
and
and
dec
push
or
xor
call
or
or
mov
cmpsb
mov
mov
inc
ffreep
mov
sbb
jmp
mov
adc
or
dec
aas
add
mov
jae
into
aas
cld
dec
inc
xchg
dec
loope
push
adc
mov
inc
imul
cmpsb
test
ret
adc
mov
and
add
xor
xchg
adc
insb
sbb
fisttpl
xchg
fs
stos
insl
push
add
je
jo
pop
add
or
lock
mov
mov
das
lcall
pop
or
add
pop
push
add
js
xchg
subb
pushf
push
pop
inc
repz
add
and
mov
xchg
dec
push
pop
movl
jmp
mov
and
or
movsl
test
mov
xchg
mov
jns
stos
mov
rorb
imul
or
and
lea
lea
dec
sub
and
xchg
cmc
cmpw
xchg
mov
mov
movl
int
add
xor
shl
jb
je
dec
aam
add
insb
into
cmp
dec
mov
sub
repnz
mov
or
addb
and
xchg
and
and
cmpl
jg
and
cmp
pop
and
inc
xorb
ja
adc
cmp
cmc
jmp
ds
ret
mov
jle
fisttpll
stos
jmp
fs
cmpsl
inc
lods
jmp
orl
and
shlb
cmp
in
jmp
loopne
and
push
mov
fmuls
shrb
je
fdivr
arpl
ljmp
jecxz
inc
js
hlt
sti
adc
sub
daa
pop
cmp
sarl
adc
mov
ret
insl
cmpsl
fsub
mov
rol
out
xor
pop
lea
add
icebp
lcall
outsl
fbld
inc
fbstp
fcmovnu
js
iret
pop
cwtl
xor
pop
shll
mov
and
or
push
and
cmp
or
cli
add
add
test
mov
clc
cmp
adc
je
dec
adc
adcb
nop
filds
mov
adc
sub
pop
mov
adc
jb
cmp
cltd
and
jne
fiadds
cmp
je
adc
insb
xchg
jmp
mov
pop
test
jne
das
mov
cmp
jmp
xor
xchg
and
jmp
push
clc
mov
or
test
mov
or
decl
adc
push
or
pop
cmp
jae
mov
or
das
jbe
sub
inc
ja
mov
daa
jbe
xor
hlt
xor
fcompl
mov
push
pop
push
fildll
add
sbb
adc
jae
xor
dec
mov
fwait
xchg
sbb
sarb
push
mov
jmp
test
pop
and
add
dec
xor
add
loop
adc
mov
leave
mov
xorb
stc
lret
lea
lea
jle
adc
ss
xchg
loopne
push
ljmp
add
scas
rorb
mov
dec
cli
or
negl
xchg
or
in
daa
outsb
sbb
pop
clc
or
ficompl
sub
pop
fucomp
insl
xor
xchg
and
fnstenv
xchg
add
adc
push
add
cmp
enter
sbb
popa
in
testl
pop
inc
cmc
push
mov
inc
enter
mov
xlat
dec
xchg
clc
jmp
aas
push
or
xchg
adc
cmp
or
pop
loop
sub
fstpt
fcoms
and
in
scas
add
and
sbb
cmp
dec
mov
sub
xor
imul
add
mov
mov
fldpi
aaa
test
mov
and
sub
test
test
xchg
cmp
addl
cwtl
xor
dec
fcomps
xchg
push
jb
adc
inc
rolb
dec
call
js
or
mov
fmuls
inc
addl
fwait
cwtl
cs
inc
mov
iret
test
inc
roll
sub
or
stos
or
cmp
insb
sbb
js
lcall
add
inc
repnz
or
clc
mov
xor
cmp
xor
repnz
push
jo
out
or
in
or
loop
push
bnd
xchg
mov
repnz
loope
lea
js
in
rorl
push
sub
arpl
js
ss
imul
jne
and
mov
daa
mov
mov
or
and
cli
mov
dec
sbb
or
add
push
pop
jo
jo
out
stc
dec
sbb
decl
push
mov
sub
or
mov
push
jmp
and
and
arpl
pop
out
jbe
jns
pop
fistl
and
or
daa
sbb
mov
mov
mov
jo
mov
inc
pop
jns
dec
mov
jne
pop
or
popa
xor
outsb
outsb
aas
daa
and
lcall
fstpl
fdivs
push
data16
lahf
test
and
outsb
bound
inc
xor
gs
mov
ja
out
movsb
push
dec
fwait
push
ss
dec
mov
jb
push
das
loop
xchg
or
es
outsb
rcrb
es
xor
push
ficoml
imul
ja
inc
lcall
mov
stos
clc
xorb
cmp
xor
xor
cwtl
mov
jns
push
imul
push
dec
cs
xchg
add
push
adcl
xor
cmpsl
dec
sbbl
call
xlat
outsl
sbb
loopne
adc
fwait
ljmp
insb
dec
jae
dec
fwait
stc
jl
add
or
add
add
inc
and
xor
mov
and
push
add
cmp
xchg
loope
gs
cmp
adc
shlb
and
and
nop
cmp
mov
pushf
ss
inc
test
les
sbb
push
mov
arpl
jns
insl
mov
popa
and
cmp
aaa
jmp
cs
in
fstpt
je
call
cmp
mov
sbb
or
mov
sub
inc
into
outsb
filds
or
js
andl
sbb
insb
bound
add
dec
fs
loopne
mov
mov
jmp
in
pop
adc
adc
rcr
insb
inc
xchg
add
adc
sub
loopne
lods
test
add
ss
jl
inc
xchg
add
or
icebp
in
mov
mov
lcall
pop
inc
mov
and
ss
enter
iret
inc
sbb
cmp
sub
xchg
mov
testb
add
ss
or
in
or
or
les
mov
sahf
cmp
jne
xor
out
test
adc
xchg
pop
test
out
addl
jns
addb
xor
add
or
sub
add
pop
lcall
jge
mov
inc
leave
or
jo,pn
sahf
in
push
loop
mov
mov
sbb
add
inc
je
lock
sbbl
jnp
dec
mov
mov
rcl
push
repz
push
adc
push
mov
cltd
or
dec
daa
frstor
mov
inc
jnp
push
dec
cmc
pop
or
je
push
adc
mov
xchg
pop
cs
call
inc
movsl
mov
push
lcall
push
add
xorb
mov
rcr
jno
cmp
call
cli
adc
mov
xchg
orl
ret
adc
mov
lcall
test
bound
sbb
adc
push
mov
repz
add
adc
sub
or
inc
push
jecxz
aam
mov
cmp
inc
lods
je
in
pop
out
repz
sbb
xor
xor
aaa
adc
push
pop
movsb
mov
orb
pop
neg
inc
arpl
cmp
aaa
lahf
sub
mov
cmp
and
adc
xchg
jl
fsubs
js
imul
adc
pop
lahf
movb
mov
shrl
fnstenv
add
shlb
rclb
pop
imul
mov
sbb
rcl
push
adc
inc
push
jg
js
mov
or
and
add
push
xor
inc
test
frstor
scas
sbb
xchg
inc
dec
jne
mov
sbb
jno
cwtl
cmp
mov
icebp
push
xor
mov
lret
jmp
cmp
enter
scas
add
outsl
cmp
je
movl
mov
adc
cmp
adc
outsb
pop
jnp
sub
mov
xchg
mov
or
cmp
mov
mov
mov
pop
pop
test
sti
imul
inc
outsb
jne
pop
mov
pop
sbb
outsl
adc
aam
jnp
adc
sub
fcoms
add
jbe
xor
dec
push
mov
dec
rclb
push
mov
inc
push
insb
lods
pop
add
or
ds
sti
mov
or
inc
jns
dec
test
pop
xchg
loope
data16
jp
add
and
jnp
xchg
push
xchg
fmul
fimull
sub
fs
sub
js
jl
or
insb
and
sub
inc
loop
test
scas
out
nop
aam
pop
scas
mov
and
out
das
sbb
jo
dec
or
and
jb
scas
cmp
or
add
or
imul
test
pushf
sub
sbb
sub
mov
sub
lcall
or
lock
lea
mov
jmp
push
enter
add
push
imul
lret
data16
cltd
sar
cmpsb
cmpb
add
ret
ror
adc
cmpsb
shlb
jecxz
or
cmp
inc
cmp
jge
jecxz
adc
fisttpl
xchg
xor
xor
jns
mov
xor
out
mov
adc
xor
dec
jl
add
pop
out
adc
shlb
mov
loopne
sbb
int
call
pop
stc
loop
ja
add
fiadds
push
lea
mov
cmp
mov
mov
lods
push
test
sub
fsubl
inc
mov
fistpll
inc
mov
rcr
adc
mov
std
andl
mov
inc
sbb
push
sarb
es
and
and
sbb
push
adc
fbstp
dec
aaa
mov
test
and
add
sbb
jne
loopne
imul
clc
jle
xlat
pop
pop
inc
pop
mov
xchg
test
leave
out
mov
ret
ret
jnp
adc
notb
xchg
pop
xchg
mov
orl
test
sub
sub
and
js
inc
push
or
test
sti
popf
adc
or
lock
ret
mov
pop
xchg
fimuls
add
or
lock
and
fistpl
or
mov
sbb
push
test
dec
mov
fisttps
fistpll
lret
je
mov
push
sbb
jne
mov
dec
out
out
idiv
in
scas
movsl
and
cmpsl
sbb
loop
mov
push
in
pxor
insb
sbb
dec
jne
jmp
sbbb
sbb
int
and
pop
je
mov
mov
xor
adc
or
addl
xor
dec
sbb
pushf
mov
mov
je
xor
push
dec
inc
push
or
lea
sbb
mov
cmpl
cmp
cli
fisttpll
dec
jnp
clc
inc
and
ss
cld
call
daa
push
dec
or
shl
pop
cmpb
mov
jb
ja
adc
daa
inc
notl
ret
call
ret
sbbl
ret
ret
idivl
mov
mov
cmpb
je
and
cmp
add
or
cmp
ja
jmp
jge
sbb
loop
mov
add
push
add
arpl
mov
add
adc
add
mov
or
daa
jg
or
sbb
in
jecxz
mov
ss
fisttpl
add
mov
pop
inc
lret
or
or
testb
call
in
and
out
mov
mov
push
and
pop
or
mov
stos
insb
out
add
push
adc
xor
lea
push
daa
imul
mov
stos
jae
dec
dec
or
imul
insb
inc
mov
bndldx
xlat
sub
insl
mov
lret
dec
in
in
mov
rclb
or
lock
and
adc
mov
add
js
inc
adc
subl
rep
mov
orb
pop
lds
jle
adc
push
negb
incl
cmp
pop
in
call
or
test
lret
sti
into
pop
sub
dec
or
enter
mov
inc
or
test
popf
sub
jmp
sbb
lods
sub
inc
mov
mov
ret
pusha
inc
into
scas
arpl
scas
and
les
inc
pop
push
sbb
subb
add
scas
icebp
outsb
jns
push
icebp
outsb
out
adc
mov
inc
jo
adc
and
out
xchg
fcomps
ret
xchg
adc
xchg
cmp
inc
sbb
mov
adc
dec
imul
fdivs
xchg
inc
jb
scas
test
test
dec
scas
mov
das
in
shll
arpl
inc
push
in
and
pop
or
loop
sub
sub
or
or
jle
mov
mov
and
cmpl
xor
cmp
lods
and
scas
pop
ret
stos
bound
or
sti
jbe
xchg
sbb
lret
je
adc
into
pop
jns
lock
or
mov
add
cld
jo
cmp
mov
add
les
fadds
sub
sub
pop
movsl
push
add
inc
jne
mov
clc
ret
sub
aaa
jl
cmp
rorb
sbb
inc
add
sub
aas
rcrb
and
xchg
push
mov
mov
dec
cmp
jne
sub
aam
add
outsl
add
nop
lock
push
xchg
cs
dec
clc
cmpl
fcomi
call
adc
lea
or
sbb
inc
cs
push
aas
mov
mov
sbb
push
jo
repnz
hlt
sbb
jae
daa
cmp
inc
sub
es
push
add
jmp
das
lock
dec
es
adc
dec
push
sbb
or
adc
clc
pcmpeqw
xchg
cmp
les
adc
or
and
lock
mov
and
cmp
repz
jmp
mov
xchg
pop
nop
inc
xchg
sahf
add
cld
hlt
hlt
mov
pop
es
clc
clc
hlt
in
sbb
sbb
mov
sbb
lock
in
mov
je
inc
xchg
stos
add
mov
adc
test
add
xor
imul
addr16
pop
or
add
sbb
pop
sub
inc
or
fdivl
jg
into
add
cmp
ljmp
jmp
dec
add
push
adc
cmp
sbb
mov
lods
adc
sub
jl
hlt
adc
xor
add
mov
inc
xor
pop
std
cwtl
jo
mov
lea
cmp
shll
and
dec
js
xchg
popa
outsl
pop
mov
imul
aaa
gs
jmp
sbb
nop
and
sbb
inc
test
loop
in
dec
dec
sub
subb
and
jecxz
test
fs
jg
push
dec
jnp
cmp
ja
pop
mov
push
inc
dec
xchg
jp
xor
jo
flds
fildl
jmp
fildll
sbb
add
loopne
add
cmp
dec
fildll
jmp
clts
imul
mov
popa
jo
push
jmp
sbb
mov
mov
push
jle
add
mov
add
add
push
and
mov
xchg
ljmp
lea
rcrb
or
dec
rorl
mov
xor
clc
bound
popa
push
dec
jo
lds
xlat
lcall
xchg
in
dec
push
popa
insb
ja
and
ret
outsl
lcall
mov
adc
push
add
inc
movsl
cmp
adc
or
cmp
sbb
out
mov
and
in
xchg
pop
lret
add
mov
mov
jge
and
pop
arpl
mov
xchg
or
push
daa
fadds
aad
sub
in
xchg
out
out
xor
dec
dec
icebp
adc
adc
sub
outsl
movsb
arpl
jp
lcall
and
mov
push
add
dec
pop
jmp
js
pushf
or
jmp
adc
push
dec
add
and
out
dec
xor
ficoms
sub
iret
jge
cmp
inc
jg
jle
cmp
js
add
dec
pop
ja
add
les
pop
add
out
fistpll
xor
jno
pushl
xor
loope
in
insb
imul
popa
hlt
dec
inc
or
fimuls
lahf
emms
or
mov
out
push
or
ret
shlb
adc
testb
dec
add
pop
movsb
pop
hlt
pop
test
xchg
stos
pop
lock
fidivl
add
subb
inc
adc
cmp
push
mov
jae
decb
popa
pop
ds
movsb
ficompl
enter
mull
push
xor
and
in
and
fyl2xp1
setle
cmp
sbb
dec
orb
fimuls
add
mov
push
fldenv
or
iret
std
mov
add
add
xchg
pop
adc
cmpsb
dec
jle
clc
pop
jne
xor
lock
sbb
adc
jmp
outsl
push
gs
outsb
lret
cli
stos
add
mov
mov
add
fisubrl
pop
fbld
add
rcrb
add
clc
add
push
inc
insb
jg
insl
ds
or
sub
pop
xchg
imul
or
sub
or
cltd
insb
mov
and
inc
imul
mov
sti
inc
or
outsl
lea
push
sbb
bound
pushf
fcoms
dec
outsl
and
sub
adcb
dec
outsb
insb
jns
xor
pop
rol
loopne
xor
mov
aaa
push
push
jg
jae
je
or
jb
or
cmpsl
sbb
dec
imul
inc
push
outsl
jne
push
push
mov
iret
mov
test
movsb
mov
inc
loop
enter
add
adc
imul
cmp
ds
xor
add
push
or
test
adc
std
ja
adc
stos
insb
and
nop
add
jne
mov
lret
lods
or
mov
lods
or
push
sbb
xchg
dec
cmc
fstpl
insb
sbb
das
movsl
inc
lods
repnz
fsubs
dec
add
sub
add
mov
es
insb
pop
sub
mov
or
andb
mov
pop
cwtl
test
stos
add
xchg
or
xchg
iret
mov
pop
sub
push
pop
or
mov
nop
popa
daa
in
sbb
mov
cmpsl
and
xchg
aad
sahf
add
loopne
xor
dec
cltd
add
mov
push
pop
mov
sarb
lods
or
test
inc
push
xor
jp
idivl
or
xor
subb
sbb
inc
mov
insb
popa
inc
sarl
sub
cmp
in
aaa
mov
pop
in
fs
add
pop
and
sub
shlb
das
and
pusha
push
add
or
or
mov
and
test
and
push
loopne
pop
add
das
dec
ror
lock
adc
xchg
or
mov
and
pop
pop
sub
pop
shll
fidivs
and
push
mov
sub
xchg
mov
and
inc
sbb
ret
cmp
das
push
inc
sub
add
jecxz
mov
pop
sub
cmp
push
test
pop
mov
sub
push
nop
xor
sub
pop
mov
nop
pop
or
ret
inc
pop
or
sbb
jo
js
push
in
mov
and
sub
nop
sbb
fdiv
loopne
lcall
sub
lock
and
daa
xchg
xchg
nop
adc
insb
pop
mov
mov
adc
movl
xor
xchg
or
dec
enter
sub
and
add
test
pop
adc
ficoml
int3
pop
jb
add
mov
add
out
push
test
push
jae
pop
sub
cmpl
push
xchg
jns
pop
jo
jg
or
mov
lds
movl
rcll
mov
xlat
int
arpl
std
stos
jno
push
pushf
or
outsb
sub
push
sbb
sbb
mov
or
xor
call
ja
cmpb
and
add
movl
stc
ss
pop
pop
adc
mov
adc
xor
inc
xor
cmp
lea
arpl
fcompl
unpcklps
push
cmc
xorb
add
jecxz
jle
daa
jg
add
jo
inc
jne
add
scas
pop
les
add
push
cmp
adc
outsl
jb
push
inc
loop
call
adc
or
jbe
pop
adc
push
enter
cmp
pop
outsl
in
es
sbbl
lahf
pop
rcrl
jge
and
push
ds
inc
stc
add
dec
or
mov
les
sbb
push
in
leave
push
por
test
adc
pop
xchg
xlat
sub
add
arpl
add
or
and
inc
xchg
fnstenv
add
sub
or
jbe
dec
rcll
fimull
pop
cmp
popa
jo
xchg
jo
mov
push
leave
insb
call
adc
xor
sbb
push
scas
xchg
add
cs
scas
inc
cmpsl
mov
nop
inc
movsb
and
push
xor
lret
testb
es
jl
lret
mov
adc
int3
pop
jns
lds
js
lods
mov
adc
in
call
sub
pushf
cmp
mov
arpl
jns
push
ds
mov
addr16
gs
lret
xchg
dec
iret
jno
ja
pop
mov
xor
in
cmp
jo
mov
cmp
adc
inc
sahf
or
mov
into
xor
fs
jne
loope
adc
pusha
test
repnz
jg
add
rorb
and
xor
fnstenv
insb
sbb
add
inc
mov
pop
mov
adc
add
dec
inc
sbb
pushf
inc
push
inc
lods
add
or
popl
or
inc
jg
cmpsb
and
fcmovb
les
jg
test
enter
push
xor
pop
xor
push
jo
insl
shll
jp
fiaddl
or
add
sub
inc
push
leave
in
imul
sub
aaa
and
push
das
or
test
daa
jae
dec
lods
dec
adcb
and
xchg
pop
in
jns
mov
movsl
dec
inc
nop
fildll
or
movsl
pushf
xor
nop
inc
xchg
cmp
jb
loope
adc
lahf
dec
xchg
sbb
add
inc
ret
dec
popa
sub
aam
orl
adc
xor
shlb
inc
xor
push
loope
jnp
push
test
pop
mov
xchg
or
es
jnp
mov
push
xchg
cld
jns
lret
lea
and
test
mov
push
nop
data16
or
pop
daa
mov
insl
mov
jle
je
sub
sarl
jo
mov
or
iret
adc
addb
add
leave
in
sub
add
add
fcmovnb
jne
std
jl
inc
mov
and
pop
sub
daa
outsl
inc
or
adc
insl
add
add
shr
test
rorl
and
rol
subl
rorb
pop
mov
dec
dec
popf
add
inc
mov
sub
clc
sar
shl
sbb
push
cmovg
sbb
rcrl
dec
pop
mov
mov
adc
dec
enter
jo
sub
dec
leave
xchg
inc
pop
subl
xor
shl
js
sub
xchg
dec
sbb
xor
jne
jns
sub
je
cwtl
filds
xchg
add
dec
sub
loopne
outsb
insb
push
mov
lahf
pop
psraw
push
daa
pop
sarl
lcall
inc
je
popa
or
scas
mov
xor
aam
es
and
xchg
ss
add
xchg
dec
push
loopne
sub
test
lret
aaa
lret
aam
sti
js
cld
mov
aam
cltd
add
xlat
test
cmp
inc
add
mov
or
mov
adc
orl
pusha
mov
aad
fdivs
pop
data16
jl
test
dec
add
jb
aad
outsl
aad
push
cmp
or
sbb
xor
stc
mov
push
xchg
or
repnz
or
rorb
cwtl
or
pop
out
push
xchg
add
subb
addl
or
or
aas
pop
dec
cmpsl
sbb
add
adc
push
nop
adc
sbb
sbb
pusha
or
rcr
imul
int3
push
push
push
pop
jb
add
aaa
je
mov
push
xor
or
call
push
inc
daa
push
adc
pop
add
test
dec
enter
mov
pop
rol
and
inc
loop
xor
imul
xchg
xor
add
mov
xlat
sbb
decl
pop
lcall
jns
add
scas
add
in
mov
adc
mov
mov
and
inc
ret
pusha
mov
pop
daa
pop
lea
xchg
imul
pop
fsts
shll
adc
insl
mov
out
push
mov
hlt
or
flds
loopne
add
or
or
scas
cmp
jecxz
xor
fdivr
aad
push
pop
or
fstps
add
pop
mov
lods
andps
out
add
xchg
fsts
push
xchg
lods
fs
jne
jne
and
push
adc
or
inc
into
pop
pop
negb
add
flds
or
ficompl
cmp
je
xor
sarl
insl
add
xchg
inc
push
outsb
or
sbb
or
insb
inc
repnz
add
loop
or
ds
bound
es
or
repnz
mov
fiadds
fdivrs
push
inc
movsb
sub
js
jg
or
int3
aad
les
enter
mov
add
nop
fcmovne
or
pop
dec
out
test
pop
adc
lock
push
xlat
or
cmpb
test
sbb
mov
int
sub
jns
mov
mov
mov
pushf
mov
mov
xor
rorb
jae
add
jmp
push
inc
mov
add
pop
sbbl
mov
lods
pop
or
in
push
mov
xchg
inc
jecxz
mov
sbb
popa
nop
idivb
push
inc
or
fiadds
lds
ljmp
repz
or
dec
pop
jle
stos
clc
adc
pushw
loope
std
cld
sti
fdivs
push
push
mov
mov
or
fs
cmp
or
push
imul
arpl
dec
and
dec
jle
mov
inc
and
xor
sbb
push
or
popa
outsb
mov
lock
vrcp28sd
adc
push
loopne
sub
inc
add
mov
sbb
add
or
stos
inc
movsl
push
mov
mov
lds
mov
loopne
in
push
shll
pop
sub
xlat
loopne
addb
flds
fxch
push
test
add
push
add
jns
jg
mov
fmuls
or
popf
into
mov
mov
xchg
dec
les
lock
movq
andl
lods
add
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
fbld
outsb
cld
add
cmp
xor
jae
ds
insl
imul
imul
jne
sub
dec
jmp
loopne
cld
imul
add
jge
stc
xorb
andps
push
fidivs
movsb
inc
loope
shlb
push
mov
pop
and
test
jecxz
sbb
lcall
loop
push
insl
inc
sub
or
jbe
xchg
pop
xorl
and
mov
add
ja
pop
loopne
stos
or
jecxz
fadd
push
xchg
shrb
pop
lods
loopne
jmp
adc
xor
daa
out
xor
and
repnz
cmp
xchg
pusha
out
xchg
notb
push
sbbb
xor
push
mov
nop
push
mov
movsl
fxch
fistpl
xchg
je
cltd
or
rcrl
lcall
fwait
and
xor
repnz
pushf
sahf
xor
inc
movsb
xchg
int3
test
xchg
mov
insb
jecxz
dec
shrb
jmp
sbbb
rorb
test
fs
insl
mov
inc
pop
loope
fistpl
push
arpl
sub
push
sbb
pop
push
fwait
popa
sub
adc
cmp
add
xor
and
add
mov
mov
sahf
sub
inc
dec
dec
adc
out
jecxz
xchg
push
out
out
sbb
push
int
ds
inc
out
jae
nop
out
adc
push
call
add
lret
mov
sub
cmpl
and
fidivs
pop
xchg
adc
unpckhps
push
ljmp
out
sbb
movsl
sbb
cld
sbb
cmp
repnz
mov
sbb
in
sbb
pusha
pop
pushf
mov
xchg
addr16
and
and
cmp
je
test
leave
add
out
add
pop
out
sbb
shlb
add
pusha
or
jae
adc
fwait
stos
out
inc
pop
mov
dec
and
jb
add
insb
shlb
popa
mov
mov
add
lahf
mov
fmuls
add
push
bound
pop
mov
pop
add
jge
mov
add
sub
xchg
dec
mov
jno
lret
jecxz
inc
nop
nop
repnz
out
sbb
insb
or
pop
inc
push
xchg
inc
out
sbb
sbb
jo
and
xor
sub
mov
push
dec
xlat
adc
inc
pop
add
inc
out
sbb
cmpsb
inc
xchg
shl
int3
cmp
je
push
jecxz
in
outsl
pusha
orb
cltd
or
outsl
stos
imul
mov
outsb
imul
adc
jo,pt
insb
or
pop
jne
add
pop
mov
or
add
rcr
cli
mov
inc
es
mov
inc
test
dec
sbb
add
mov
leave
add
jp
and
es
add
or
mov
pop
nop
sbb
push
sbb
sbb
aam
bound
dec
sbb
and
or
sbb
pushf
nop
out
sbb
mov
sahf
xor
push
popa
push
outsl
ret
push
xacquire
inc
mov
adc
push
dec
jbe
mov
jns
inc
xor
push
dec
xchg
sub
add
dec
mov
dec
insl
add
je
jne
push
lods
insl
sub
out
add
rcl
mov
movb
in
rcrb
add
push
sbb
cltd
jge
movsb
add
pushf
pushf
pushf
pushf
xor
mov
inc
sub
mov
push
popf
outsl
shrl
fwait
lds
stos
sbb
inc
aam
and
xor
rclb
insl
and
or
insl
sub
movsb
je
pushf
or
and
repnz
mov
mov
iret
xchg
cmpsb
pop
cmp
fcoml
adc
int3
data16
jno
mulb
adc
cmp
pop
mov
mov
fwait
xchg
sub
nop
or
imul
iret
or
incl
adc
pop
mov
es
or
pop
jb
adc
ja
pop
je
sti
sub
add
add
popa
leave
mov
ja
stc
sbb
jne
and
cmp
pop
lock
mov
mov
push
dec
adc
mov
add
les
stc
xor
pop
push
icebp
cmp
cs
and
repnz
repz
fcomip
fistpl
add
jecxz
cmpsb
pusha
cmpsl
push
jae
mov
cld
stos
add
je
out
lods
js
shrb
mov
cs
mov
push
jl
pop
test
push
xor
enter
add
mov
pop
push
stos
test
xor
sub
data16
xlat
stos
dec
ds
bound
add
xor
push
or
xlat
mov
pop
sub
cmp
cmp
sbb
add
dec
or
mov
jbe
inc
mov
outsb
xchg
sub
mov
dec
mov
mov
or
add
sbb
repz
or
cmp
popf
pslld
in
add
sbb
cmp
adc
mov
fldcw
sbb
sub
sub
dec
push
sub
and
scas
test
adc
mull
fwait
add
or
add
je
lahf
cmpsb
pusha
cmp
in
and
add
or
sub
add
sub
mull
arpl
test
and
and
test
jns
and
jns
mull
int
cmp
pop
pop
add
xchg
mov
xchg
add
mov
pop
sbb
dec
test
inc
and
mov
and
inc
rorl
mov
jno
inc
jl
sub
inc
rcl
les
pop
xchg
lea
bound
jbe
xor
dec
push
or
ret
xchg
mov
inc
leave
xor
cmc
cmp
cmp
adc
or
in
loop
xchg
mov
inc
cmp
and
lea
stos
inc
test
mov
push
add
dec
push
inc
subl
adc
clc
std
fmuls
clc
les
and
lahf
stc
dec
or
scas
cmp
add
mov
pop
fidivrs
in
scas
adc
sbb
xchg
add
addr16
xlat
dec
add
xor
cs
test
sti
cmp
push
js
cli
inc
sahf
or
cld
dec
mov
addr16
pop
movsl
pop
push
jecxz
rolb
ret
lea
sbb
addl
test
dec
push
mov
adc
and
pop
inc
out
mov
push
leave
add
pop
imul
xchg
int3
push
cmp
cmpsb
gs
xchg
add
dec
pop
imul
fcompl
push
add
sbb
and
sub
sub
dec
xor
xor
or
xchg
add
int
inc
mov
or
and
xchg
push
mov
or
mov
and
lea
lea
cmp
mov
adc
push
scas
dec
nop
xchg
sub
cs
enter
bound
sub
add
inc
push
inc
push
and
and
xor
add
adc
pusha
and
mov
adcl
adc
mov
add
sub
fsubrs
mov
dec
inc
fiadds
adc
dec
inc
dec
or
add
enter
or
xchg
mov
mov
and
or
js
mov
lods
inc
daa
adc
lods
add
mov
mov
out
add
and
mov
mov
add
pop
or
inc
mov
dec
fld
adcl
inc
bound
dec
jl
mov
mov
or
jg
xor
mov
es
mov
rorb
fstl
outsb
pushl
dec
es
call
xchg
pusha
in
aaa
or
addr16
inc
imul
push
mov
shrb
clc
add
dec
cmpl
xor
jl
lods
mov
js
mov
or
scas
or
aaa
push
jo
adc
mov
int
rcl
xchg
sub
mov
and
repnz
mov
test
adc
sub
addr16
sub
sub
push
out
in
add
jp
icebp
jmp
fildl
mov
fiaddl
push
and
aas
daa
pop
adc
sub
add
or
push
sbb
and
xor
or
shll
add
xchg
push
call
mov
add
xchg
call
push
sub
or
sbb
mov
test
lods
xchg
sbb
sbb
repz
mov
addb
stos
push
icebp
pop
or
push
ret
inc
lods
inc
in
pop
pusha
mov
ljmp
test
mov
add
lods
add
negl
dec
movsb
pop
add
push
imul
and
or
mov
or
inc
xor
icebp
sub
xor
mov
hlt
and
add
or
dec
mov
and
loope
shll
add
mov
dec
lods
xchg
test
cmp
adc
add
ja
nop
cmp
lahf
add
scas
movl
enter
in
sub
popl
sbb
scas
mov
es
push
pop
sbb
xchg
sbb
ja
or
mov
mov
and
mov
pop
push
cmp
adc
lock
jnp
xlat
lahf
sbb
cs
jmp
ficomps
dec
orb
ret
andl
xor
mov
jns
adc
push
in
mov
jbe
and
dec
shlb
pop
icebp
ds
add
cmp
push
sub
cmp
mov
adc
jae
loope
rolb
dec
mov
mov
push
in
sub
cmp
pop
scas
pop
aas
inc
xchg
xor
popl
push
or
test
mov
or
in
xlat
sbb
mov
push
rolb
mov
xor
xlat
mov
pop
dec
inc
insb
outsl
bound
sti
cmpb
cmpsb
invd
inc
cmp
jecxz
lret
mov
push
pop
jno
and
arpl
or
sbb
or
aam
sub
pop
add
xor
mov
mov
bound
jns
mov
jns
dec
mov
xchg
movsb
mov
js
push
pop
inc
mov
dec
dec
ds
add
or
movsb
mov
fiadds
pop
dec
xor
in
cltd
nop
mov
or
nop
or
in
add
jnp
inc
pop
adc
lods
mov
sbb
and
cs
imul
push
popf
shll
aad
cs
inc
icebp
fimuls
lods
mov
add
in
push
jo
out
push
pop
pshufw
sbb
or
add
sbb
add
rcrl
jo
test
adc
xor
shll
pusha
ss
js
stos
cs
adc
adc
bound
pop
inc
pop
mov
movsb
and
ja
lahf
mov
les
or
or
dec
data16
ja
jno
mov
lret
or
iret
add
push
or
das
fwait
in
or
or
cmp
add
ret
data16
jno
ret
add
add
mov
or
jo
add
fimull
fiaddl
test
push
mov
pop
inc
add
mov
or
dec
jo
mov
xchg
ja
mov
jo
jp
lods
pop
jl
push
add
mov
pusha
inc
outsb
inc
cmp
inc
lahf
sbb
inc
mov
fs
shlb
mov
and
mov
in
fisubs
inc
sbb
repz
cmc
mov
pusha
push
inc
jg
lds
jl
push
test
roll
outsl
jae
add
pop
mov
andb
jne
push
or
dec
pop
mov
fisubl
adc
push
mov
mov
dec
popa
es
je
push
repz
repnz
or
add
pusha
js
call
addr16
xor
xchg
pop
and
sub
sbb
or
push
mov
dec
mov
jge
add
jae
jbe
out
inc
xor
adc
movsb
jmp
or
pop
orl
pop
loopne
mov
pop
mov
or
mov
testb
push
cmpsb
or
inc
or
fcoml
pusha
dec
fwait
and
push
and
iret
sbbb
xchg
xchg
leave
mov
movsb
dec
push
cli
das
xor
sub
test
pop
sub
cwtl
shlb
ret
fsubs
push
pop
adc
or
in
push
int3
iret
imul
incb
jne
xchg
xor
int
add
in
adc
shll
fwait
or
inc
sub
and
jge
scas
push
insb
pop
push
aas
adc
sbb
pop
scas
or
pop
notb
dec
outsb
shll
nop
add
or
imul
cmp
or
add
dec
add
or
aaa
data16
cmp
add
hlt
pop
aaa
xor
xchg
push
pop
xor
and
add
add
sbb
popa
adc
xor
jbe
pushf
or
mov
dec
outsb
je
pop
xor
mov
xor
or
int3
rorb
gs
add
fs
mov
xor
in
shlb
or
pop
push
dec
imul
xchg
xor
mov
icebp
mov
dec
fs
lods
outsb
push
iret
jp
andb
sbb
jo
mov
in
push
test
inc
jmp
add
or
sti
push
push
jge
or
inc
push
fnstsw
mov
push
or
add
mov
sub
xor
adc
jo
mov
sub
test
cmp
xchg
sub
sbb
sub
mov
test
dec
xchg
fsubrs
jae
jmp
jno
and
pop
and
mov
cmp
sub
pop
sbb
incl
int
dec
addb
mov
pop
in
lds
pop
inc
les
adc
in
mov
mov
ljmp
inc
imul
cmp
lret
or
mov
dec
hlt
and
xchg
xor
iret
nop
sbb
outsl
je
sbb
adc
xor
lock
push
lds
mov
out
xchg
lcall
adc
and
sbb
pop
bswap
push
cmc
inc
pop
xchg
fcomps
cmp
or
mov
pop
jmp
sbb
das
mov
in
aad
mov
or
add
jae
lret
dec
out
dec
adc
dec
hlt
les
mov
jge
loop
mov
lcall
sub
pop
movsl
movsb
divl
lea
jbe
sub
adc
ret
cmp
jl
or
and
jecxz
popf
xlat
loope
movsb
es
mov
jmp
dec
enter
dec
fimuls
and
jg
push
adc
andps
fwait
cmp
ss
in
loopne
adc
push
subb
push
pop
movb
push
xchg
jno
mov
mov
test
and
outsb
jge
shrb
loop
arpl
add
jb
add
or
sbb
mov
test
or
pop
jo
imul
or
add
addb
orb
pop
inc
faddp
inc
push
add
popf
and
pop
push
xor
jl
je
adc
add
pop
insl
and
testb
test
aad
fcompl
push
push
pop
cmp
arpl
or
sbb
adc
lahf
push
stos
js
xlat
sbb
lahf
stc
adc
dec
sub
mull
sbb
mov
xchg
sbb
pop
test
xchg
lds
jnp
or
mov
add
adc
or
rol
aad
lea
rorb
jecxz
shll
pop
pop
test
sar
ja
in
lea
sbb
xchg
cmp
add
push
add
or
test
push
pusha
inc
rclb
loope
jae
push
or
or
orb
je
jbe
imul
inc
add
iret
sbb
jbe
inc
jbe
mov
inc
pslld
jp
arpl
adc
pusha
jno
add
enter
loopne
sbb
inc
xorl
and
shrb
mov
push
pop
loopne
orb
bound
mov
mov
popf
push
push
inc
mov
call
les
enter
in
inc
push
and
mov
mov
stos
mov
inc
in
push
jns
lea
add
in
xor
xor
jae
xor
jl
dec
cmp
sub
daa
or
lea
sbb
fcoml
mov
test
lcall
mov
add
adc
fcoms
sub
pop
adc
jns
adc
inc
daa
pushf
das
push
add
inc
sbb
test
int
jo
jne
push
xor
sbb
bound
dec
test
mov
sub
rorb
push
fwait
sarb
dec
movsl
and
out
push
enter
cmovg
push
les
outsb
push
bound
mov
adc
nop
inc
push
sbb
movsl
orl
shll
in
and
add
pop
xorl
or
je
lods
in
enter
movaps
dec
addb
xor
adcl
adc
das
shll
mov
bound
stos
les
nop
arpl
sbb
insb
dec
mov
pop
and
lea
ret
call
test
dec
push
lock
data16
jns
icebp
sub
xlat
pop
push
jb
push
pop
add
enter
aad
sub
aam
test
push
sub
xor
sub
xchg
and
pop
and
or
daa
add
fists
push
movsb
or
nop
cltd
ds
dec
sub
add
rol
mov
push
out
inc
fs
cltd
in
or
jge
add
iret
xor
test
popf
inc
mov
xchg
pop
pop
sub
daa
adcl
add
jo
add
pop
sub
shlb
stc
lock
push
add
repz
push
pop
xchg
inc
enter
enter
outsb
push
xchg
psrlq
int3
inc
lods
and
fstps
cmpsl
push
call
xor
aam
cmpl
jl
and
and
aad
sbb
in
pushf
aad
dec
inc
mov
adc
jmp
sub
push
out
pop
cmpsb
cwtl
push
xor
mov
dec
dec
es
cmp
lods
mov
jmp
sub
popa
fwait
or
lock
inc
sub
adc
cmp
insb
add
shlb
xor
add
popf
pop
subl
xor
imul
inc
es
xorl
pop
mov
or
inc
and
push
and
push
scas
push
das
mov
push
out
add
add
incl
arpl
ljmp
out
or
imul
add
mov
call
mov
orl
cmp
or
adc
cmp
cmp
dec
popf
pushf
pushf
dec
js
icebp
test
cmpsb
movsb
jns
fnstcw
sub
push
jno
push
das
jns
mov
add
pop
mov
and
pop
xor
ficompl
push
and
pop
test
xor
sub
int
cltd
or
ss
ret
mov
xchg
pandn
dec
cmp
push
pop
adc
sub
movsb
mov
pusha
rorl
and
sahf
sbb
pop
push
daa
cs
or
add
add
sbb
jno
add
pusha
jecxz
orb
inc
add
in
jne
or
xor
pop
cwtl
xor
xchg
pop
add
rclb
std
xchg
es
xchg
pop
repz
sub
or
fistl
pop
lock
stos
mov
arpl
pop
enter
adc
ja
pop
jnp
xchg
call
aam
lods
push
out
jns
pop
cs
xlat
mov
cmp
lock
rclb
insb
scas
nop
mov
hlt
lock
sub
xor
in
push
jge
dec
mov
jbe
xchg
mov
movsb
pop
xor
mov
mov
sarb
sub
por
sub
dec
adc
dec
or
inc
mov
int3
or
sbb
das
lods
das
shll
xor
add
sbb
mov
sub
xchg
inc
push
sbb
orl
xor
push
cmpsl
loopne
fs
daa
xor
push
nop
enter
enter
daa
orl
movsl
shll
adc
mov
enter
ss
dec
sub
outsl
out
sahf
sub
out
rclb
inc
ss
sub
ss
pop
or
lock
fldl
and
pop
enter
mov
cmp
mov
in
xor
add
je,pt
push
push
daa
ss
mov
repz
iret
cmp
shlb
cmp
cmp
enter
and
sbb
in
ja
adc
jnp
lods
dec
mov
repnz
push
sub
dec
clc
insb
or
push
adc
sbb
out
or
cmp
or
jae
jo
mov
das
xchg
pop
jno
andl
clc
mov
ja
sbb
adc
push
out
out
call
inc
cld
rcrl
stos
push
icebp
add
dec
dec
stc
loopne
leave
in
enter
cli
push
sbb
call
jne
lods
push
frstor
outsl
sub
sub
mov
mov
sti
add
nop
dec
or
or
gs
xor
or
call
mov
ss
push
int
aaa
push
or
sar
xchg
xchg
adc
loope
cmpb
adc
pop
aaa
inc
mov
ds
mov
addl
fs
mov
ret
and
addr16
rclb
popa
adc
in
inc
lock
adc
sub
jo
arpl
adc
je
bound
les
out
push
adcl
mov
mov
leave
and
test
bound
cs
push
sub
xchg
and
popf
scas
pop
sbb
out
sub
or
insb
pop
or
push
dec
repnz
rorb
mov
movswl
shlb
push
cmp
addl
pop
adc
dec
and
xor
insb
adc
test
and
adc
inc
and
xor
sti
inc
inc
test
xlat
cmp
push
sbb
lods
push
push
push
cs
mov
sbb
fnsetpm(287
sarl
jo
add
inc
jno
fstp
mov
and
shl
add
inc
or
dec
or
cmpsb
fdivr
push
dec
jo
or
cmp
movsl
pop
inc
sbb
and
dec
cmpsl
add
adc
cmp
inc
add
sbb
mov
add
jl
aam
ja
mov
mov
xchg
mov
or
and
pop
xor
and
xchg
push
push
jne
jo
imul
pusha
or
xchg
les
je
repnz
in
push
gs
lods
test
shlb
cs
sbb
ds
jae
pusha
sub
push
loope
rolb
sbbl
sbb
mov
sub
or
fnsave
inc
mov
push
cltd
add
sbb
bound
aad
mov
cmp
inc
subl
repnz
xor
stc
stos
cmp
sbb
mov
in
leave
fadds
sub
xchg
inc
push
cmpsl
out
and
push
ljmp
push
movsb
rclb
inc
cli
pop
jmp
insl
add
inc
add
sub
dec
fidivrs
dec
js
sbb
and
jmp
jl
mov
adc
insl
outsl
mov
dec
push
xchg
add
arpl
nop
jl
sbb
xlat
or
dec
cmp
insl
out
sbb
add
sub
xchg
daa
and
shll
test
dec
sub
inc
dec
lahf
faddl
mov
or
clc
inc
push
and
add
rcl
subb
rorl
and
inc
lods
jmp
mov
push
sbb
lds
add
je
inc
pop
aad
sbb
add
dec
dec
and
xor
inc
insb
jae
aas
aad
xorb
xor
pop
aad
sti
inc
ret
adc
adc
and
and
or
mov
addl
loop
mov
xor
pop
dec
pop
or
or
jnp
rcll
insl
inc
mov
dec
xchg
push
rorb
xor
add
sbb
jmp
divl
sahf
mov
in
adcl
dec
or
mov
inc
sub
sub
jo
push
loope
push
pop
shrb
jge
xchg
add
daa
fsubl
add
ret
mov
pop
mov
or
inc
dec
hlt
inc
pop
cmp
cmp
daa
jg
mov
fwait
adc
ss
loop
push
push
rorb
or
pop
xor
and
add
das
stos
push
lret
cmp
jo
fcmovne
push
or
inc
xchg
test
aaa
or
add
or
into
jecxz
jo
inc
add
icebp
sbb
andl
out
mov
es
push
pop
push
xor
pop
jnp
or
and
xor
cmp
andb
cmpsb
adc
cmp
inc
adc
roll
enter
add
mov
adc
outsl
pop
or
and
push
lcall
dec
jbe
push
icebp
add
sbb
push
jmp
sbb
insb
or
xor
adc
int
in
jns
loopne
pop
xor
xchg
cmp
or
push
lods
adc
push
lcall
adc
mov
addb
adc
push
ficompl
jo
or
pop
adc
adc
cmpsl
popa
xorl
push
ss
adc
loopne
inc
push
push
xchg
sbb
outsl
dec
add
insb
jecxz
cmp
jle
add
or
dec
lock
inc
pop
test
pop
insb
inc
jbe
nop
mov
xor
test
sti
push
in
fnstsw
jns
add
out
decb
fwait
cltd
pop
and
add
xor
dec
push
pusha
leave
outsl
movl
jo
lock
jmp
inc
movsl
movsb
xor
jg
pop
call
rcll
stos
mov
outsl
mov
push
add
sub
mov
cs
and
rcl
shrb
rorl
cltd
xor
cmpsb
jns
mov
dec
and
inc
mov
cs
inc
dec
pop
inc
fdivs
cs
push
cmpsl
adc
pushf
cmova
sbb
pop
mov
xchg
push
pop
dec
dec
pusha
dec
push
fsubrl
mov
aas
pop
add
mov
inc
add
clc
lods
std
cld
add
in
add
aam
mov
in
cwtl
fsubrs
hlt
push
in
push
lods
pop
push
sub
nop
cmpsl
add
or
dec
fcoms
xor
sar
inc
push
popa
addr16
add
adc
dec
and
pop
notl
pop
pushf
sbb
mov
outsl
stc
dec
sbb
mov
pop
and
push
inc
dec
cmp
data16
sbb
les
std
sub
cwtl
pop
add
aaa
push
mov
dec
dec
pop
push
std
ret
lock
mov
dec
and
andnps
in
out
xchg
in
nop
inc
xchg
mov
mov
dec
adc
push
inc
fiadds
mov
sub
lret
repz
outsl
dec
add
lret
push
xchg
push
outsl
das
dec
inc
xchg
pavgb
jnp
add
stc
decl
push
push
ljmp
cmpsb
pop
fcomp
and
mov
nop
lcall
mov
mov
enter
sub
push
push
dec
cwtl
test
add
pop
js
push
mov
xlat
add
and
fcomps
insb
and
outsl
pop
add
inc
popa
bound
adc
lock
sub
or
ss
movsb
mov
lock
add
xorl
sahf
and
fists
add
adc
js
sub
or
mov
js
clc
cmp
xchg
or
cmp
sbb
mov
es
mov
xchg
test
mov
gs
or
add
or
sbb
pop
aad
push
and
ss
mov
cwtl
roll
dec
or
or
into
test
dec
popa
jae
rorb
sub
and
mov
sbb
inc
jmp
cmp
test
pop
mov
test
adc
dec
jge
mov
mov
or
nop
mov
adc
adc
xor
pop
pop
test
mulb
dec
data16
ret
pusha
mov
sbb
int3
imul
in
popf
sbb
rcrl
lea
and
loop
pop
xor
popa
test
mov
fcoms
incb
enter
add
mov
adc
fsub
or
add
pushf
pushf
mov
push
add
mov
or
sub
shlb
xchg
in
inc
cli
inc
and
leave
in
add
test
sub
jnp
inc
lods
or
push
mov
aaa
lock
jmp
lock
inc
fcomi
rcr
push
popa
or
mov
sbb
and
and
popa
adcb
or
popf
sub
push
adc
movl
rcr
inc
and
js
je
lods
dec
imul
xor
les
add
xchg
hlt
jnp
nop
or
and
repz
inc
xor
push
dec
dec
sub
push
stos
cmp
push
out
push
inc
and
gs
or
movsl
adc
add
or
or
ret
and
outsl
add
and
pop
nop
js
or
push
sbb
jnp
loopne
inc
add
push
orb
pop
test
bound
pop
dec
or
adc
inc
mov
int
nop
movsl
sbb
or
xor
mov
xchg
in
push
in
pop
push
xor
hlt
cld
pop
ljmp
in
pushf
add
push
int3
sub
and
xor
cmp
ror
mov
and
add
xor
and
lods
ffreep
cmp
or
push
dec
cmp
stc
add
dec
cmp
out
push
or
mov
jo
mov
adc
adc
push
sbb
add
push
inc
repnz
push
jno
ja
ss
add
sub
mov
xorb
add
call
dec
lods
insl
push
or
jne
push
mov
and
mov
xor
ja
inc
mov
aam
icebp
daa
test
loope
lcall
mov
dec
mov
loope
lret
out
jg
xchg
mov
jp
adc
jg
dec
pop
test
pop
xchg
pop
loope
xorb
cmp
add
mov
clc
mov
std
int
cmp
out
loope
sbb
adc
or
pushf
adc
out
push
inc
cwtl
xor
sti
push
fcoml
add
cmp
push
jno
mov
loopne
std
fdivs
or
and
sub
adc
adcb
popa
lcall
daa
mov
adc
add
mov
pop
aam
fcomp
imul
outsl
sbbl
push
add
cmp
push
imul
insl
mov
aam
mov
dec
sbb
rclb
xchg
mov
pushf
mov
es
popa
and
cmp
mov
insb
adc
jno
cmpsl
cmpl
jne
leave
les
pushl
popa
mov
cmp
les
add
ret
xchg
iret
pop
adc
pop
mov
ret
jae
pop
test
arpl
mov
sbb
mull
and
xchg
jecxz
sub
inc
lret
pop
xchg
in
imul
cwtl
and
hlt
cmpsb
jb
push
jp
xor
scas
out
pop
mov
pop
mov
jle
pop
cmovae
push
jns
fcompl
dec
or
fs
mov
pop
adc
sub
jp
pop
and
bound
nop
fwait
shr
lods
lods
in
add
pop
mov
inc
dec
fsts
mov
lds
xor
inc
xor
add
call
or
popa
enter
and
pop
and
dec
or
cmp
pop
pushf
pop
pushf
inc
stc
inc
loopne
aaa
or
push
cmp
and
imul
mov
fcoms
mov
jecxz
mov
gs
sub
outsb
jb
inc
lock
jge
add
pop
testl
lods
push
pop
icebp
imulb
add
cmp
aad
xorl
mov
mov
daa
mov
es
mov
add
pop
leave
enter
add
inc
jbe
or
cmp
mov
ja
leave
mov
pop
pop
inc
xchg
psubusb
orl
adc
popf
jns
fs
aas
pusha
push
mov
dec
inc
push
ret
aaa
popa
dec
popa
sbb
loope
and
in
data16
popa
jo
fimull
insb
addr16
cmp
pop
or
popf
add
mov
inc
push
push
xchg
test
outsl
xchg
cmpl
mov
popa
jo
lods
adc
or
gs
mov
push
add
jno
pop
jbe
jg
inc
jno
and
lock
leave
in
repnz
imul
test
jo
jo
and
mov
add
out
jae
fisubl
sub
push
adcb
jb
jns
jo
add
push
and
jo
pop
loope
add
scas
enter
in
inc
add
add
cmc
xchg
ja
mov
mov
in
mov
cmp
jo
dec
sbb
outsl
cmp
xlat
bound
pop
bound
xchg
std
inc
shr
je
test
mov
ds
aad
and
mov
push
clc
dec
popa
lret
mov
xlat
and
shlb
sbb
cmp
imul
xor
aam
subl
or
sub
and
jmp
sbb
divb
and
cmp
mov
sbb
and
stc
popf
inc
add
das
ret
popa
fs
dec
push
leave
aam
pusha
sbb
or
mov
add
ret
mov
mov
test
lock
push
test
int
xor
sbb
call
push
enter
inc
vcvtsi2ssl
sbb
and
or
xor
adc
jge
mov
xor
pop
pop
leave
inc
add
jae
sbb
adc
pop
imul
fists
cmp
mov
xchg
push
into
decl
push
mov
arpl
xor
sbb
scas
clc
xchg
jp
inc
lcall
jecxz
ss
inc
cltd
sbb
push
and
inc
jno
lds
or
push
or
add
hlt
cld
or
cwtl
popa
add
ret
inc
nop
cmp
or
js
pop
ja
add
adc
inc
or
add
mov
sbb
movsb
arpl
cmp
lods
loopne
inc
add
lds
fs
sbb
pusha
cmpl
mov
popf
shlb
mov
lock
push
xor
push
hlt
ss
andb
xchg
add
adc
push
jo
mov
sbb
push
cmp
jecxz
pop
daa
sub
mov
or
cmp
fwait
xchg
mov
xlat
or
ret
arpl
jnp
testb
pushf
or
lods
or
push
es
mov
xchg
adc
xlat
stos
or
mov
outsb
fildll
cmpsb
cmp
rolb
cmp
push
or
xchg
rolb
jmp
scas
jle
fisubrs
int
add
mov
pmaxub
clc
inc
and
scas
je
call
xorb
sbb
pop
inc
inc
or
fs
inc
adc
jecxz
push
add
test
clc
movsl
movsb
ljmp
inc
jae
inc
fiaddl
jle
aam
jae
aad
add
stos
bound
lods
mov
add
sbb
push
xchg
jo
cmp
stos
mov
insl
rcrb
rcr
jb
push
in
and
into
and
sbb
data16
aas
call
push
mov
sub
movsb
xchg
mov
jmp
nop
subl
sarb
cltd
not
cmpb
inc
cmpsb
jae
dec
fneni(8087
inc
cmc
pop
cs
xchg
lock
inc
fwait
push
xor
negl
push
addr16
lods
clc
dec
push
adc
frstor
rolb
movb
push
out
movsb
xchg
add
adc
addr16
jbe
imul
pop
push
sbb
pop
and
fcom
pop
stos
les
push
push
fstps
mov
aaa
xor
mov
mov
xchg
or
adc
mov
add
adc
mov
xor
movsb
fs
dec
cmp
jmp
decl
jne
pop
jbe
fstps
adc
daa
adc
push
out
iret
add
or
aad
cld
lret
add
out
or
cltd
mov
pop
xor
mov
idivl
and
int
insl
push
es
movhps
push
mov
add
cli
add
es
cmp
ret
dec
js
aas
lret
test
add
pushf
pop
imul
mov
mov
mov
je
ja
fildl
mov
shl
dec
pop
je
daa
imul
xor
inc
mov
dec
int
push
and
or
add
xor
shrl
mov
cld
cmp
add
andb
mov
xchg
sub
mov
fcom
imul
sub
pop
adc
lret
pop
das
jae
mov
mov
adc
rorb
flds
lret
hlt
hlt
xchg
inc
cmpsb
arpl
insb
dec
jns
pop
xor
xchg
xorb
pop
pop
sub
mov
iret
insb
push
push
clc
cwtl
push
or
adc
or
orb
add
test
mov
cltd
mov
mov
hlt
sbbl
mov
outsb
adc
insb
shll
out
xlat
int
clc
adc
push
leave
clc
insl
xor
xor
pop
mov
pop
inc
cmp
aam
push
add
inc
insb
aam
pop
sbb
imul
push
adc
and
mov
sub
sbb
sbb
dec
insl
enter
add
xchg
rcll
shll
sbb
pop
push
lret
add
outsb
inc
daa
test
leave
outsb
dec
xchg
mov
lods
add
push
in
mov
cmpl
into
dec
push
enter
subb
in
adc
lahf
scas
add
cld
loopne
nop
xlat
jecxz
push
xchg
scas
dec
enter
outsl
hlt
jo
add
push
aas
pop
dec
adc
loop
test
js
pusha
shrb
jnp
addb
and
push
or
nop
or
jo
shlb
add
or
es
push
pop
and
negb
testl
or
cmc
sub
jbe
add
pop
jmp
dec
rolb
push
jbe
dec
add
mov
adc
or
pusha
adc
or
push
mov
loopne
push
pcmpeqb
push
call
and
subb
into
sub
mov
sarl
imul
pusha
ds
xor
pop
or
icebp
test
aad
cwtl
fistps
ret
xor
jno
mov
inc
sub
sbbb
or
or
sbb
dec
jecxz
decb
arpl
ret
rclb
lods
sahf
dec
cld
cmp
lods
rcrb
mov
xchg
or
xchg
dec
mov
in
xor
adc
push
add
out
mov
sti
xchg
adc
sbb
add
test
adc
int
mov
ja
insb
insl
sbb
ja
xor
sbb
nop
sarb
iret
ret
in
arpl
jl
sub
pop
xor
sbb
lods
mov
call
inc
inc
int3
lock
scas
sub
push
es
push
mov
xchg
sti
ja
pop
xor
pop
ja
mov
and
inc
push
ret
nop
add
xchg
dec
push
xor
scas
out
pop
pop
adc
mov
jmp
sbb
clc
mov
in
push
sub
test
dec
sub
and
das
adc
sbb
fdivrs
mov
and
push
dec
or
xor
dec
arpl
xor
pop
ficoml
xor
xorb
out
minps
inc
xor
jp
and
aam
imul
mov
push
or
add
dec
out
jne
stos
or
insb
insb
arpl
mov
cmp
inc
cmp
sarl
jo
enter
leave
xlat
rcll
je
pop
lods
outsl
cmp
je
int3
mov
aas
gs
cld
pop
movsb
jl
mov
rclb
imul
inc
data16
mov
test
add
add
add
sbb
and
inc
jnp
adc
sbb
testb
add
js
sbb
rclb
sub
push
add
pop
inc
gs
das
cmp
push
jbe
aas
sub
sbb
sub
outsl
rcrl
test
mov
sub
dec
inc
out
orl
cmpl
bnd
push
adc
or
pop
sbb
int
push
mov
and
cmp
push
cmp
pop
data16
int3
shrl
add
lods
sub
sbb
add
nop
mov
or
mov
aaa
pop
mov
xor
push
push
and
fadd
add
pop
push
cmp
adc
jae
enter
add
inc
test
cltd
or
xchg
mov
inc
push
cmpb
sbb
inc
or
and
xor
cmp
or
pop
popl
or
ret
push
or
or
incl
xor
aad
pop
lods
cmp
in
gs
fadd
add
adc
jb
and
add
adc
pop
push
sbb
dec
cmp
xor
lea
cmpsb
ret
leave
fucomp
jl
test
sub
lea
subb
jecxz
inc
outsl
mov
mov
push
in
adc
inc
add
rclb
add
jo
jg
adc
add
push
call
fwait
jecxz
push
push
clc
or
loope
dec
jns
lea
cmp
jb
inc
inc
ret
out
cmp
sbb
xchg
mov
mov
sbb
inc
rorb
jle
inc
icebp
incb
xchg
add
stc
add
adc
popa
fnstcw
arpl
pop
sarl
mov
fbstp
sar
dec
or
or
mov
pop
mov
daa
or
sub
loope,pt
xor
pop
dec
jmp
jnp
mov
ret
inc
or
imul
adc
jne
mov
push
lods
push
mov
jmp
push
inc
and
cmc
push
sub
loopne
jmp
mov
push
inc
sarb
xchg
add
nop
cld
ret
jmp
xchg
jmp
adc
adc
sub
add
call
push
insb
mov
pusha
mov
int3
loope
xor
fcomip
mov
mov
inc
lock
pop
enter
cwtl
xor
or
sub
jo
push
jne
xchg
repz
or
or
inc
test
mov
sub
pusha
xor
test
or
inc
push
cmp
sub
sbb
mov
xorb
das
inc
cmp
leave
scas
sub
sbb
mov
inc
sub
inc
adc
xchg
mov
cwtl
sub
adc
mov
call
mov
or
fnstcw
sahf
je
outsb
add
xor
rolb
xor
pop
mov
fidivrl
or
jle
sbb
add
sbb
sahf
sub
push
pop
xor
dec
aaa
jl
mov
lret
and
dec
insl
sub
jg
dec
jecxz
dec
pop
scas
aam
and
nop
fistl
add
mov
or
pop
fmull
add
xchg
scas
sbb
insl
sbb
add
jne
scas
dec
sbb
add
roll
addb
jmp
adc
or
or
and
scas
enter
mov
ljmp
pop
je
cmp
sbb
testl
or
inc
dec
cmp
cmp
jle
fmuls
xor
gs
cmp
add
pop
hlt
jl
loopne
int
fadds
push
or
jne
dec
pop
stos
cltd
xor
push
jne
jle
mov
orb
xchg
mov
out
shl
sbb
and
dec
cmp
mov
jp
jmp
ret
adc
imul
inc
push
pop
lahf
adc
sbb
outsb
jo
repz
pop
dec
add
cmp
daa
mov
mov
fiadds
std
pop
pcmpeqw
add
pop
sbb
fsts
in
jne
sub
fsubr
leave
add
mov
je
repz
push
mov
mov
or
dec
addb
or
or
xor
adc
push
call
and
nop
add
or
cmpsl
pop
das
pop
push
cmp
orb
les
pop
pop
cmpsb
out
or
jo
inc
shll
mov
rorb
or
cs
adc
mov
sub
pusha
inc
inc
jg
add
add
adc
or
add
inc
or
je
or
shlb
add
cmp
adc
dec
cmp
shrl
adcl
pop
in
dec
insl
adc
and
cmpsb
orb
je
add
push
add
mov
and
push
dec
add
add
or
popa
cmp
jg
subb
pusha
add
jae
repz
xchg
or
ss
jne
xlat
mov
fisttps
andb
lcall
or
or
sbb
cmp
je
out
mov
xchg
int
cwtl
mov
cmp
add
nop
rorb
ret
cmp
push
mov
mov
loope
push
add
and
mov
sbb
sarb
ret
mov
aas
mov
mov
mov
jo
fcomps
add
out
je
and
and
roll
or
push
push
or
fwait
adc
sarb
adc
cwtl
aad
add
push
and
fistps
fdiv
dec
jae
adc
leave
je
stos
adc
btr
cmp
bound
out
sbb
mov
adc
jmp
xchg
or
fmuls
mov
repnz
dec
sbb
enter
nop
cmp
mov
sbb
lea
mov
pop
insb
or
jl
shl
cmc
sti
adc
cmp
jl
adc
push
inc
cmp
jne
arpl
jne
les
sub
lds
aaa
aaa
xor
push
enter
fnstenv
xchg
xchg
into
dec
sbb
adc
adc
push
mov
inc
sub
adc
inc
or
push
mov
add
outsl
cmp
jo
cmpsb
jmp
mov
cmpsb
xchg
add
or
cmp
insb
add
mov
adc
adc
fwait
dec
push
push
or
adcb
ror
pop
xlat
das
ret
mov
ret
inc
jo
xor
mov
ret
add
test
pushl
add
push
inc
cmp
add
pop
xlat
and
test
daa
push
in
push
sbb
mov
js
lods
shll
rclb
inc
or
and
inc
out
stos
aas
aas
or
cmpsb
add
movsb
mov
adcl
cmp
jmp
jnp
inc
sub
mov
testb
je
addr16
je
orb
cmp
pop
and
jmp
pop
push
adc
mov
in
shrb
or
dec
test
fwait
pushf
dec
sub
nop
cmpsb
mov
andl
in
test
popf
xlat
popa
outsb
loope
aas
mov
xchg
adc
dec
adc
addr16
or
or
dec
prefetchwt1
rclb
cmpl
mov
or
out
mov
jne
out
test
inc
stos
test
xchg
mov
ret
mov
sub
inc
js
sub
mov
out
push
add
test
mov
or
add
cli
jmp
scas
jne
and
inc
in
and
cwtl
jg
pop
fs
and
or
xchg
rcrl
sbb
xchg
or
arpl
rcrb
pop
pop
testb
pop
cli
lock
push
or
jb
mul
cmp
inc
add
mov
dec
inc
push
outsl
mov
mov
and
insb
adc
add
inc
jae
pop
mov
enter
repnz
pop
pop
aam
fs
rcll
fmull
ficompl
mov
add
and
pop
xchg
cmpb
dec
mov
push
cmp
pop
sub
and
push
dec
cmp
fiadds
jbe
pop
hlt
or
jecxz
sbb
sub
pusha
inc
xchg
test
popa
ret
or
pop
loop
inc
loope
shll
cltd
nop
pop
sarl
mov
push
xchg
or
adc
nop
in
push
sti
rorb
xchg
pop
rolb
pop
les
dec
fists
sub
mov
sub
cmp
lret
dec
or
inc
roll
push
dec
sub
pop
mov
fisubrs
sbb
or
mov
sbb
clc
and
addb
mov
and
push
aad
in
lea
arpl
push
enter
cmp
loopne
xchg
jecxz
rclb
mov
mov
sarb
pop
int3
and
rol
mov
leave
mov
stos
mov
dec
mov
or
sti
hlt
test
js
push
pop
add
rcrb
test
sub
cmpb
jne
sub
jbe
pop
stos
and
sbb
inc
xchg
mov
inc
add
adc
inc
dec
jne
jnp
and
pop
lea
and
stc
push
mov
mov
add
xlat
xchg
inc
in
cmp
dec
pop
mov
call
lret
mov
xor
mov
faddl
decl
out
push
xor
inc
adc
xlat
xchg
call
mov
pop
outsb
inc
into
push
in
pop
xor
mov
push
lods
jmp
insb
jp
push
pop
jecxz
sub
sub
mov
in
xlat
inc
rorl
add
sahf
pop
push
cmpb
jb
add
jo
and
jmp
or
pop
std
sub
negb
std
into
add
adc
in
push
inc
test
ja
jge
jp
fwait
xor
adc
pop
push
mov
add
or
cli
mov
add
adc
mov
push
aaa
or
pop
add
or
mov
or
imul
pusha
retw
das
lock
jo
or
adc
rclb
sub
hlt
nop
jg
stos
sbb
add
push
xlat
sbb
repz
sub
xor
movsb
jle
push
sbb
imul
mov
cmp
sub
push
nop
imul
xchg
in
rolb
jecxz
les
and
adc
rolb
dec
inc
or
dec
fimuls
mov
sub
sbb
daa
and
sbb
sbb
lods
cmp
adc
or
imul
adc
or
sub
loope
fs
xchg
adc
add
mov
mov
sub
loope
and
rorb
xorl
mov
test
clc
rolb
and
adc
imul
cmp
jmp
arpl
aas
xlat
cmp
xor
pop
push
popf
test
mov
xor
ss
and
add
cs
pop
pop
clc
or
scas
jae
dec
and
jbe
lods
xor
mov
call
xchg
fnsave
push
aas
clc
enter
dec
cmp
stc
fdivl
lock
lock
lea
xchg
jl
in
movsl
mov
and
mov
loop
mov
and
xchg
in
inc
in
sub
notl
les
pop
and
xchg
insl
push
sub
pop
mov
dec
rcll
outsl
sbb
xor
adc
or
sbb
and
popa
sub
and
fs
hlt
and
push
jbe
xchg
and
xchg
nop
bound
ret
out
imul
andl
add
jae
ljmp
adc
mulb
sub
or
xchg
movsl
inc
pop
and
xchg
mov
sbb
push
clc
push
adc
negb
pop
mov
inc
popa
sbb
fsubrs
js
jl
das
addb
int3
sub
xchg
pop
addl
jne
lea
jge
rorl
lock
aaa
lods
movsb
enter
and
mov
pop
sub
push
rclb
fildl
mov
push
mov
aaa
xchg
sarb
pop
jne
insl
jnp
mov
inc
cmp
jecxz
inc
mov
dec
sub
cs
cmp
xor
jge
in
rcr
sub
mov
push
outsl
dec
test
inc
dec
inc
lea
aam
sbb
cmpsb
fdivrp
test
mov
inc
pop
inc
shlb
xchg
xchg
test
xor
xchg
data16
dec
or
push
incl
or
mov
inc
ud0
fildl
jne
push
and
js
or
dec
test
jne
sbb
addr16
xchg
bound
sbb
pop
shll
faddl
arpl
rol
xchg
lea
xor
xchg
das
and
xchg
mov
stos
inc
popf
sbb
add
inc
addl
lea
fsubrl
cmp
lds
sbb
jb
in
dec
lea
mov
jne
dec
scas
shr
push
pushf
dec
aam
pusha
rcrl
out
sub
stos
pop
add
xor
rolb
push
call
pop
dec
jne
inc
dec
call
negb
pop
outsl
loopne
xor
xchg
or
cld
cld
adc
or
and
dec
aam
loopne
mov
xchg
add
rolb
inc
clc
dec
imul
xor
shll
mov
dec
pop
xchg
les
inc
cltd
test
xor
cwtl
sub
and
add
cld
xor
or
or
add
or
pusha
lea
xchg
and
lcall
addr16
xchg
pop
mov
sbb
imul
cmpsb
and
mov
adc
pop
and
dec
lret
mov
call
addl
fsubrs
les
es
lds
adc
ret
jmp
adc
rolb
jmp
xchg
pop
mov
xlat
push
xor
pusha
and
or
xorl
lret
hlt
test
stc
add
fwait
sbb
mov
inc
or
or
xchg
push
lods
jno
in
loopne
leave
mov
je
js
sub
or
ret
pop
pop
das
pop
int3
adc
mov
jns
sbbb
adc
cmp
addl
inc
jnp
dec
or
in
push
push
mov
xor
shll
faddl
lock
sub
test
mov
add
add
sbb
inc
daa
pop
xchg
dec
stc
add
xor
je
cmp
sub
in
popa
lret
dec
adc
push
lcall
and
popf
sub
mov
jle
mov
test
int
cltd
lret
pop
notl
or
loope
adc
sahf
add
adcb
mov
lea
and
inc
filds
add
sub
das
inc
shrb
imul
les
push
inc
sahf
xchg
sbbl
and
or
sub
dec
pusha
into
mov
mov
insl
inc
mov
xor
js
mov
jnp
dec
test
sub
jle
add
lods
clc
cltd
jle
pop
lods
xchg
popf
xor
inc
mov
xor
in
cld
cld
inc
jo
xor
lahf
data16
clc
mov
ret
imul
or
adc
xchg
adc
inc
cmp
inc
inc
enter
inc
and
adc
lret
and
and
adc
mov
mov
lea
push
mov
pusha
scas
in
push
mov
sub
mov
pop
cltd
or
dec
mov
mov
or
cmc
jl
pop
mov
sbb
jne
cmp
mov
push
test
daa
add
push
add
inc
lret
insb
mov
sbb
test
push
lahf
cltd
or
jns
icebp
and
jne
andl
outsb
lcall
mov
and
in
arpl
or
clc
jmp
adc
sti
jne
sbb
and
inc
pop
mov
fmuls
xor
cmp
inc
push
fsubl
pusha
mov
or
iret
pop
mov
mov
icebp
arpl
call
ret
repz
in
bound
imul
push
out
lea
les
sbbb
lds
mov
xor
leave
add
mov
inc
roll
push
mov
jnp
arpl
add
and
jmp
pop
and
cmp
jne
sbb
cld
popf
lea
mov
addl
loope
cmpb
or
and
push
in
adc
je
das
sub
sbb
test
or
lea
mov
mov
mov
fdivs
fcoms
orl
test
loope
xor
and
aas
inc
dec
shlb
jo
adc
or
or
loopne
push
pop
cmp
add
lods
or
adc
add
jae
adc
scas
add
add
dec
xor
sbb
adc
call
xor
insl
sbb
out
sub
push
xlat
sub
adc
int
jb
or
push
icebp
sbb
or
xlat
jnp
lock
cmp
push
mov
data16
mov
adc
add
dec
scas
fs
add
xchg
sub
mov
das
mov
fimull
jne
or
sbb
add
add
mov
sbb
imull
sbb
inc
ss
orb
sbb
xor
push
scas
add
flds
cmpsb
cmp
out
sbb
and
testl
pop
cmpsl
dec
dec
rcll
add
cmpb
repnz
xor
add
mov
xor
jnp
es
iret
dec
jl
add
mov
jne
dec
jne
inc
sbb
sbb
sbb
inc
and
dec
adc
push
call
sub
add
dec
pushf
ja
ret
push
dec
push
dec
mov
mov
xor
in
inc
scas
add
scas
ret
clc
xor
inc
pop
cld
leave
and
stc
cmp
sbb
loope
and
mov
das
jne
lods
mov
sbb
pop
cmp
pusha
lahf
mov
pop
add
jl
pop
xchg
cwtl
jo
jp
xchg
in
mov
repz
cwtl
pop
lock
mov
push
cmp
cmpsl
icebp
cwtl
pop
and
idivb
mov
or
cmp
cmp
fimuls
pusha
lret
or
xor
dec
inc
jne
aaa
or
pop
dec
dec
dec
scas
adc
mov
or
shld
fsubs
outsb
xchg
xchg
adc
add
dec
xor
nop
and
js
fsubr
mov
sub
orl
jl
or
add
insb
pop
decl
jne
sbb
xor
pop
testl
aas
sub
sbbl
add
sbb
sub
push
ja
and
stos
and
lcall
rorl
sbb
rcr
sbb
push
in
pop
data16
xor
in
add
jb
ljmp
scas
xor
cmp
dec
mov
jmp
xchg
or
dec
jb
sbb
dec
xor
adc
xchg
sbb
imul
jne
xchg
add
fbld
jne
add
pause
jle
insb
sub
sbbb
xor
adc
outsl
pop
pop
xchg
xchg
mov
jb
orl
addr16
scas
test
xor
imul
jmp
xchg
inc
mov
movb
mov
mov
sbb
mov
mov
or
lcall
or
push
addr16
test
pop
push
push
fs
jp
mov
sub
sub
mov
jle
ss
aad
cmp
sbb
cmpsl
or
push
inc
xor
jg
and
mov
js
push
repnz
mov
mov
xor
mov
push
in
les
dec
add
incl
mov
jb
pop
fmuls
xlat
mov
pop
scas
test
xor
inc
mov
inc
mov
or
jns
pop
jmp
dec
scas
jo
xchg
mov
into
sub
stc
jne
mov
mov
sti
pop
or
or
sbb
enter
mov
add
jl
movsl
clc
sbb
xor
je
daa
xchg
sar
add
and
mov
iret
cmp
stos
and
test
mov
push
mov
data16
shl
test
cmp
nop
fbld
sbb
or
pop
dec
scas
xor
fmuls
es
movsb
pop
out
loope
dec
in
sub
add
icebp
push
popa
mov
add
addb
lods
decl
cmpb
adc
out
mov
ret
pop
sub
mov
addr16
or
adc
push
cmp
rcr
cmpl
xchg
adc
or
sub
mov
cmp
movsl
xor
mov
cs
movsl
adc
inc
sub
insl
xlat
int3
inc
and
xor
add
or
fwait
pushl
add
mov
mov
or
lahf
movb
cmpl
xchg
dec
push
jge
mov
jbe
and
aas
jo
jl
test
insl
scas
pop
cmp
loop
cmpsl
enter
out
loope
pop
push
push
aam
in
in
pushf
lret
jmp
jp
jmp
popa
arpl
mov
push
data16
mov
lea
inc
cld
xlat
loope
and
inc
push
out
js
add
fstpl
mov
push
sti
or
inc
mov
pushl
sbb
jmp
lock
adc
add
cmp
jecxz
xor
out
mov
lods
in
or
roll
mov
mov
movsl
rorl
cltd
sub
adc
dec
out
xchg
pop
add
iret
jge
add
call
aaa
mov
into
negl
sub
cs
pop
leave
iret
in
adc
insb
add
mov
mull
add
insl
jg
jne
test
mov
nop
push
rcrl
add
das
pop
cmp
sbb
adc
cmovo
or
test
sub
stc
rcrl
jbe
or
jno
push
push
cmp
jno
psubsb
mov
mov
cmp
cmp
pushl
add
add
or
dec
lods
pop
fxch
addps
mov
ret
cltd
sub
imul
xor
mov
rol
fadd
xlat
out
scas
sub
fnstenv
clc
inc
and
lods
push
dec
into
lods
xchg
pop
clc
in
mov
cmp
aas
test
outsl
fistpll
loopew
mov
pusha
sub
add
inc
fwait
mov
sub
xchg
xchg
mov
xor
fmul
arpl
mov
or
fdivr
cmp
push
cmpsb
insb
out
push
push
jecxz
cmc
jb
fsubrl
mov
insb
jg
push
in
inc
pop
movsb
fcoml
add
in
js
cli
sub
testl
add
js
icebp
mov
pop
test
mov
push
dec
jl
add
ljmp
dec
inc
adc
out
add
xchg
xor
fnstenv
jp
jnp
xor
cmp
cwtl
dec
push
iret
add
jne
cmp
inc
xchg
jno
dec
in
mov
or
mov
xchg
mov
fdivl
leave
loopne
xchg
or
and
fcoml
sbb
pop
repnz
mov
pop
lods
movsl
xchg
pop
adc
sarl
scas
mov
push
adc
mov
aaa
rorl
mov
jnp
cld
cli
add
or
notl
xchg
insl
xor
mov
or
or
push
les
orl
ror
jmp
mov
add
cltd
mov
push
add
sbb
xchg
inc
push
xchg
fbstp
xchg
pop
mov
out
fsubl
inc
sub
mov
roll
lods
pushf
dec
pop
sbb
test
xor
sbb
dec
or
sbb
adc
scas
ret
or
add
std
pop
add
or
data16
test
xchg
shl
pop
inc
push
jge
cmp
xchg
addb
mov
push
xchg
loopne
adc
call
lret
stos
pcmpgtb
add
dec
sbb
test
add
mov
cmp
and
test
pop
popa
mov
jne
adc
cmp
sbb
sbb
cmp
dec
outsl
jecxz
xor
jno
sahf
adc
jle
cmp
or
mov
rcll
xlat
xchg
and
jge
daa
lds
stos
push
xor
add
insl
sub
out
adcb
stc
mov
push
inc
push
pop
xor
imul
cmp
sub
or
or
push
and
sub
daa
mov
mov
sub
and
push
mov
add
or
or
and
cmp
adc
icebp
mov
movsb
pushf
adc
or
movsl
adc
jb
lret
mov
popf
lea
mov
add
mov
add
fidivl
mov
mov
mov
push
and
mov
in
or
clc
add
inc
adc
sbbl
in
sarb
mov
sub
push
xchg
icebp
mov
adc
adc
add
and
inc
pop
jbe
test
cmp
nop
ds
inc
pusha
loope
or
add
mov
ret
mov
dec
or
insl
aam
roll
inc
xlat
mov
mov
loope
lcall
in
stc
mov
sub
out
mov
and
fisttpl
fdivl
pop
add
cmp
or
jge
sbb
mov
out
xor
mov
dec
adc
jb
arpl
in
fs
lds
aam
lock
jbe
mov
add
jno
inc
or
out
push
push
pop
or
sbb
add
dec
mov
fimuls
mov
mov
or
cmp
lock
iret
out
add
es
sbb
inc
fwait
and
cmp
cmp
jo
cmp
inc
mov
adc
xchg
lds
pushf
inc
adc
adc
adc
lds
movsb
mov
ds
adc
outsl
mov
lds
adc
and
and
call
test
lret
lea
push
fsubp
add
lret
inc
sbb
test
mov
xor
outsl
jecxz
movsl
nop
mov
stos
or
test
push
test
jns
sbb
sbb
cs
loopne
arpl
add
push
aaa
adc
sahf
add
loopne
add
sub
inc
adc
call
jno
and
cltd
test
stos
mov
pop
xchg
mov
test
and
test
je
push
aam
inc
rorl
cmp
int
pop
loope
in
scas
dec
hlt
mov
and
das
ret
add
jmp
testb
nop
rolb
add
mov
in
cs
adc
test
xchg
je
ret
add
push
mov
adc
aam
sahf
ja
test
rcll
push
and
pop
sbb
jbe
or
outsl
cltd
push
mov
fmuls
xchg
mov
mov
int3
rclb
mov
daa
ret
inc
cmp
cmp
mov
lea
mov
scas
inc
loop
inc
lret
rcrl
clc
dec
aaa
cmc
push
inc
lods
notb
and
dec
mov
jbe
hlt
push
xchg
sub
stos
and
push
sub
testb
jne
arpl
mov
and
push
imul
daa
dec
sbb
pop
sarl
and
ror
jmp
push
cmp
mov
jns
iret
mov
cltd
sbb
scas
push
aas
ret
mov
sbb
jmp
pusha
inc
xlat
fldenv
addl
insl
inc
lea
loop
mov
cmpsl
xor
add
xchg
rclb
imul
ja
andb
inc
lock
or
pop
xor
sub
sbb
adc
pop
subb
xchg
mov
dec
and
js
sbb
dec
je
inc
and
pop
bnd
adc
and
add
cmp
xlat
movsb
push
or
ret
sbb
push
test
mov
xor
mov
inc
cmovb
or
sbb
sbb
fcoms
fcomps
mov
pop
stos
mov
add
xor
iret
lock
or
sub
andb
sub
adc
inc
or
into
pop
adc
fcoms
adc
out
aaa
mov
lret
adc
insb
arpl
mov
pushf
sbb
adc
xchg
adc
cmp
lea
jnp
sbb
nop
add
or
sarl
pop
adc
push
add
sbb
roll
push
movb
add
cmp
add
out
pop
mov
pushf
ret
aas
nop
push
and
hlt
aaa
scas
sbb
push
daa
mov
xor
mov
xchg
inc
jg
andb
loop
dec
adc
add
inc
push
cli
jbe
loopne
int
icebp
push
inc
mov
or
add
xor
pop
insb
pop
ret
xchg
inc
rclb
inc
or
cld
insl
jl
outsb
in
inc
idivl
push
movb
and
stos
jmp
mov
faddp
lcall
cmp
sbb
adcl
mov
mov
push
cli
cmpsl
xor
into
xor
or
inc
adc
jmp
xor
fisttpll
psubb
lock
inc
add
sub
add
push
add
push
or
push
lcall
test
jb
leave
jle
inc
pop
add
and
push
dec
mov
shlb
push
repz
popf
and
or
mov
insl
negb
test
sub
int3
rcrb
out
push
xor
sub
adc
in
adc
dec
pushf
inc
jl
js
cwtl
insl
mov
xor
shlb
sub
inc
dec
insb
out
xorb
nop
pop
imul
push
test
pop
leave
xchg
adc
movsb
call
nop
inc
pop
enter
lea
push
and
adc
adc
cmp
test
inc
push
test
xlat
mov
js
add
and
mov
inc
mov
shrb
inc
hlt
insb
lret
jae
xor
mov
inc
add
push
pop
xchg
das
lea
rcr
or
cmp
loopne
push
add
sub
xchg
jb
adc
imul
or
roll
addb
out
add
push
or
sub
iret
in
jp
rolb
sub
inc
inc
popf
out
rclb
out
jbe
mov
mov
test
sti
adc
mov
cmp
inc
sbb
add
fsts
lret
ret
add
popa
inc
ja
dec
cmp
cld
rep
mov
out
movsb
mov
or
jne
pop
or
inc
push
or
or
mov
loopne
adcl
adc
mov
adc
add
clc
sub
jae
xor
xchg
adc
hlt
sbb
jecxz
pop
cmc
dec
jle
ficomps
and
push
out
sbb
mov
inc
adc
movb
lret
es
roll
jecxz
daa
lret
add
inc
pop
hlt
push
shlb
jmp
rolb
and
add
cmp
mov
push
jbe
je
adc
rorl
sbb
in
cmp
mov
fildl
jns
or
adc
or
push
add
sbb
push
imul
je
push
adcl
mov
insl
sub
lock
rolb
ljmp
sub
lock
pop
shll
or
imul
je
mov
popaw
sbb
adc
push
pop
in
add
inc
scas
insl
cmp
cmpsl
add
pop
and
mov
fwait
or
jae
pop
add
jge
loopne
mov
cwtl
out
into
jle
aas
sbb
or
gs
pusha
xor
not
and
aaa
movsb
mov
ja
inc
sbb
inc
pop
jne
jne
call
pop
roll
out
push
mov
cs
cmp
or
ss
cli
pop
push
popf
mov
jmp
stos
xchg
pop
and
scas
int
mov
in
ljmp
fdivr
sub
popa
xchg
dec
jb
int
xchg
jo
add
pop
xchg
imul
xchg
mov
jno
mov
das
mov
loop
push
out
pop
mov
dec
sbb
and
popa
adc
insl
rcll
xor
sub
add
das
pop
pusha
test
cmp
xor
clc
data16
sbb
ret
pop
pop
sbb
fs
clc
addr16
fsubrs
filds
testb
push
sbb
rcl
adc
and
pop
sbb
cmp
in
inc
xor
mov
sub
adc
aam
test
sub
mov
das
rcll
sbb
sbb
xor
aam
subb
dec
in
xor
cmp
mov
out
fwait
push
add
es
sub
aaa
jnp
nop
hlt
cmp
jne
adc
jno
push
nop
fsubs
mov
push
testb
or
out
add
int3
fcomps
dec
sub
jae
cmpl
shl
push
jne
lret
pop
ret
cmp
test
mov
cs
sahf
jne
int
push
add
jo
sbb
sub
rclb
sbb
jo
inc
addr16
sbb
add
and
insb
adc
pusha
sbb
push
xor
loop
jbe
loopne
adc
push
stc
fnstenv
fldt
inc
xor
lahf
cmp
mov
xor
and
mov
jo
or
mov
dec
lock
shrl
aad
mov
pusha
ja
adc
fdivrs
out
adc
aam
pusha
adc
sbb
scas
lret
fiaddl
mov
imul
lea
sbb
orl
push
mov
shufps
sub
rcrb
or
into
ja
jmp
cmp
jo
enter
push
bound
rorl
and
adc
push
cmpb
add
mov
inc
loopne
inc
js
cmc
cmp
data16
sbb
out
ror
sub
inc
test
pop
popw
shrb
hlt
sub
mov
lcall
add
sbb
into
xchg
clc
adc
push
in
shl
xchg
mov
add
nop
outsb
lock
or
aad
sub
mov
or
clc
int
xchg
jb
hlt
adc
add
add
flds
push
enter
and
rcl
xchg
add
mov
stc
sbb
scas
adc
pusha
or
test
cwtl
aad
mov
add
adc
xchg
mov
aam
rolb
lret
das
cmpsb
imul
push
push
add
xchg
insb
pop
das
push
dec
mull
mov
leave
in
rcrb
mov
inc
or
mov
mov
pop
adc
ds
inc
jb
jb
and
insb
add
adc
push
aam
cmpsl
dec
add
adc
mov
lahf
popf
movsb
bound
clc
sub
pusha
dec
mov
inc
icebp
js
mov
cwtl
xor
aaa
xchg
xor
mov
inc
iret
push
adc
mov
out
sahf
cmp
xor
sub
push
movups
sti
pusha
mov
rolb
and
push
push
iret
psubq
dec
mov
and
cmp
loopne
in
lock
ret
and
das
testb
mov
or
push
or
testl
xlat
cmp
add
adc
insl
rcrl
jo
incl
mov
sub
dec
jne
add
movsl
xchg
fadd
inc
loopne
mov
aam
sbb
call
push
or
cmp
push
or
mov
xor
xlat
inc
cmpsl
pop
jb
and
rolb
and
callw
and
inc
dec
test
fstps
ret
pop
pop
sub
mov
sub
lock
pop
bound
add
xor
or
fcomip
push
lea
and
adc
dec
jl
cltd
push
stos
xchg
add
das
add
jge
cmp
lcall
jno
sub
pop
mov
add
or
test
test
xor
pop
add
xchg
cmpsl
cmpsb
sub
sbb
mov
adc
ret
xlat
inc
pop
jnp
jle
int3
cmp
push
add
rcr
lock
fistpl
jnp
mov
xchg
sbb
mov
dec
sub
and
ret
dec
cmp
in
jo
ret
incb
or
flds
fnstenv
aad
lahf
adc
pop
add
cmp
mov
or
xchg
call
mov
in
push
insb
test
test
shl
xor
js
js
inc
lds
test
and
loop
mov
cmp
movb
sbb
and
pop
pop
in
fs
inc
cmp
clc
adc
dec
repnz
and
mov
pop
xorb
jne
imul
cmpsb
sbb
fiadds
pushf
inc
xchg
cmpb
jge
mov
dec
clc
out
jmp
add
mov
dec
enter
pop
mov
les
xchg
bound
leave
cmp
mov
xchg
adc
sub
fsubs
imul
adc
jne
insb
lods
add
outsb
sbbl
fstps
dec
sarl
lock
mov
imul
es
mov
push
xor
adcb
mov
push
sbb
push
sub
dec
call
fnstcw
add
imul
lret
add
adc
inc
inc
push
dec
mov
cmp
ret
cltd
stos
jae
mov
shrb
inc
dec
mov
loopne
popf
dec
xchg
lods
mov
mov
and
fcoml
ss
or
in
dec
fadds
fisttpll
jecxz
das
aam
aam
test
mov
lea
loop
push
lock
les
mov
or
ss
lds
sub
push
in
jbe
add
cmp
mov
mov
arpl
sbb
jl
mov
pop
push
xchg
enter
and
cs
mov
aaa
sub
aam
imul
into
inc
pop
dec
jnp
aaa
hlt
push
push
push
aas
mov
rcll
ficomps
daa
rol
mov
xor
xorl
adc
add
cmpsb
push
dec
cmpsl
xchg
aam
shll
inc
std
jge
dec
sub
jno
aaa
adc
cmp
loopne
fbstp
test
pop
sbb
and
push
in
sbb
mov
je
sub
fadds
loopne
xlat
fs
es
sbb
sub
mov
shl
mov
ds
loope
push
cmp
and
cld
pop
xor
add
imul
cmp
das
leave
loopne
hlt
lret
aam
cltd
popa
pop
call
sub
enter
daa
fsubr
xor
out
xchg
aaa
pop
orl
sbb
adc
mov
mov
aam
pop
fiadds
mov
push
jno
inc
and
push
pop
push
adc
xchg
mov
movsb
insl
sbb
shrb
add
enter
cmp
inc
xor
cmpl
mov
adc
ja
daa
ss
rcll
leave
adc
or
dec
fcomps
and
xchg
mov
add
dec
sub
cmpsb
rol
mov
mulb
fucom
mov
rcrb
xor
fistps
dec
sbb
test
push
imul
insb
xchg
and
rcr
rcrb
add
aad
imul
stos
mov
sub
ds
enter
shr
inc
hlt
xchg
mov
lds
addr16
mov
add
sbb
daa
stos
xchg
push
inc
std
loop
jne
add
or
sbbb
jns
test
cmp
fimull
push
insb
cmp
ja
roll
cld
loopne
stos
ret
jmp
mov
cmp
lods
adc
jecxz
add
into
push
shll
inc
cmc
insb
ret
mov
dec
pop
es
xchg
das
or
jecxz
sti
mov
xchg
push
pop
fneni(8087
dec
or
sti
lcall
jp
adc
cmp
fisttpll
adc
orb
mov
iret
adc
add
ja
mov
jmp
cmp
pop
push
je
push
or
mov
and
clc
or
test
popf
inc
dec
shll
add
in
subl
jne
xlat
add
in
inc
push
in
push
push
jne
xorb
jecxz
sub
scas
hlt
xor
or
pop
es
mov
cmpsl
jecxz
icebp
mov
leave
imul
adc
lods
f2xm1
jmp
and
push
dec
aam
dec
fimuls
mov
sub
out
mov
and
das
xor
sbb
add
lret
push
add
out
dec
cmp
inc
and
inc
and
addl
cmc
xchg
jle
ret
cld
adc
dec
mov
aam
mov
stos
push
imul
clc
and
jmp
mov
fisttpl
lods
shll
xchg
pop
adc
sbb
call
xchg
pop
roll
mov
pop
sub
sub
and
call
and
dec
pop
repz
xlat
push
fmull
lcall
push
push
xor
inc
push
push
pop
dec
shll
nop
lahf
lods
negb
xor
lret
rcll
test
fwait
and
xchg
sub
fstl
stos
xor
notb
dec
fidivs
jmp
xor
jmp
push
adc
gs
jmp
mov
or
dec
in
bound
or
cmp
hlt
repnz
and
outsl
jmp
inc
or
jno
adc
nop
cmp
xor
faddl
stos
outsl
bound
dec
popa
and
sub
or
cmpsb
out
push
adc
out
mov
ret
loop
jmp
and
and
in
inc
jecxz
dec
mov
inc
dec
lods
shll
xchg
xchg
stos
jecxz
adc
or
loopne
inc
rcl
add
ret
pop
test
inc
pop
call
cmp
mov
dec
sbb
mov
lods
ljmp
aaa
fstpt
mov
or
push
push
in
pop
mov
and
mov
inc
arpl
sbb
dec
sbb
and
lahf
jnp
xchg
jg
cld
inc
sbb
inc
sbb
mov
lret
push
scas
shrl
cmp
push
ret
push
pop
dec
test
dec
adc
aaa
inc
call
cmp
rclb
lds
pop
jge
mov
sbb
lret
sub
pop
test
and
rorb
jmp
add
dec
adc
sbb
jno
or
or
xor
andb
xor
fildll
adc
adc
xor
inc
xor
xchg
in
lcall
mov
push
cltd
cwtl
pop
ss
lock
arpl
cmp
mov
call
out
and
bound
push
sahf
mov
xchg
bound
or
xchg
stos
lods
mov
in
push
fmuls
in
in
push
ret
add
dec
call
push
das
jne
jo
or
mov
sub
mov
xor
test
jp
test
lret
fidivl
loope
lcall
cmp
push
push
push
cmp
shlb
pop
out
adc
cmpb
test
mov
xchg
or
inc
dec
pop
or
adc
xchg
push
rorb
mov
insl
mov
xor
hlt
mov
add
cld
shrb
mov
daa
shrl
dec
in
in
subb
nop
and
aas
xchg
xor
jmp
leave
adc
pop
mov
not
fistps
mov
ret
jmp
push
lea
jmp
pop
sbb
jo
cmp
sub
sbb
mov
sbb
loopne
out
adcl
mov
icebp
cwtl
add
sbb
add
test
sub
mov
add
movsb
cmp
mov
sub
test
adc
in
adc
adc
adc
push
aam
xor
wrmsr
aam
stc
movsl
movsl
add
push
int3
push
cmp
lock
add
pusha
nop
test
lock
sbb
sbb
and
xor
scas
lods
lods
fists
xchg
cmp
jg
mov
jmp
pusha
or
test
sub
loop
icebp
popf
or
pop
lahf
lods
stc
mov
dec
or
dec
clc
xchg
lcall
sub
push
mov
add
add
adc
pop
and
pusha
les
or
fiadds
xor
lds
or
xor
lock
lret
arpl
xor
sub
loope
xchg
jg
jno
mov
adc
fldt
into
mov
mov
ret
mov
pslld
mov
inc
enter
repnz
pop
adc
movsb
inc
or
bound
xchg
adc
push
mov
and
testl
add
jne
xor
xor
xor
ret
pop
cmp
add
scas
dec
sbb
mov
add
mov
jmp
test
mov
jne
inc
in
sub
xor
push
test
scas
lock
and
nop
lahf
add
adc
fldl
nopl
popf
ret
fstl
add
and
add
cwtl
lcall
jo
ret
pop
mov
cmp
or
xorb
in
jg
adc
sbb
or
inc
or
in
xchg
test
and
fsubs
cmp
pusha
jbe
addr16
cmp
stos
mov
push
clc
lock
and
xlat
rolb
dec
aam
clc
inc
lea
and
aam
sbb
mov
sarb
sub
test
pop
jecxz
or
sub
lea
orl
adc
scas
orb
adc
mov
fdivr
push
mov
pop
daa
test
insb
cltd
sti
and
and
int3
pop
push
testb
orb
jmp
or
push
mov
pop
xor
cmp
mov
xor
pop
xor
iret
lods
push
movsb
sub
dec
insl
mov
test
mov
andb
lret
js
inc
or
sub
inc
int3
pushl
and
adc
movsl
dec
ror
mov
mov
sbb
xor
ret
fisubl
and
push
sbb
dec
stos
and
xchg
xchg
push
adc
ljmp
and
jnp
jns
adc
cmp
in
loopne
xchg
fs
div
sbb
sbb
outsb
xor
xor
sbb
test
fcoml
clc
push
or
inc
shlb
sub
push
shll
ret
sub
icebp
dec
mov
std
sbb
in
cltd
es
sbb
pop
subl
or
sbb
icebp
and
test
out
xor
fisubs
adc
cli
loopne
xor
fmul
in
in
lds
sub
sbb
jne
mov
push
inc
adc
addl
cmp
dec
or
xchg
or
xor
dec
and
aas
push
pop
loope
dec
cmp
mov
xor
xchg
cltd
nop
add
add
fs
adc
or
or
dec
adc
scas
stc
nop
pop
or
testl
ss
jns
stc
or
sarb
ja
xor
sub
mov
adc
ret
test
nop
mov
pop
pop
clc
notb
jl
or
sbb
and
fsubl
pop
and
pop
int
aas
mov
testb
and
xor
mov
push
in
das
mov
add
add
and
pop
inc
xchg
adcl
aam
ja
and
stc
fsubrl
mov
pop
pop
push
mov
push
scas
icebp
mov
mov
and
fadds
ja
sbb
ret
divb
and
sbb
fisttpll
lock
fs
aaa
std
push
xchg
xchg
push
popa
xchg
sti
mov
popa
popf
push
add
sbbl
fimuls
xor
pop
pop
adc
hlt
test
xchg
and
cmp
inc
scas
dec
daa
inc
dec
cmp
sti
mov
and
arpl
add
add
or
insl
icebp
pushf
or
cmp
test
jae
push
xchg
loopne
xor
push
dec
jnp
aaa
lock
add
and
adc
sbb
push
aam
ret
dec
pusha
test
mov
push
mov
call
mov
or
or
arpl
jmp
jmp
movsl
sub
add
xchg
and
clc
and
pop
dec
outsb
mov
inc
mov
add
testb
iret
add
adc
pop
dec
jb
outsl
aad
xchg
leave
test
iret
cmp
lret
xor
imul
mov
std
jbe
dec
mov
xchg
lods
insl
loope
cmp
out
jo
lret
sbb
inc
cmp
jp
or
leave
or
inc
mov
jo
pop
cmp
pop
adcl
mov
and
std
jl
shlb
inc
push
jmp
cmp
dec
rorb
sbb
lods
andnps
pop
xor
pop
inc
add
sbb
arpl
scas
or
int3
mov
mov
xchg
xchg
jp
inc
fstpl
adcb
jnp
mov
push
push
andb
fwait
roll
call
hlt
push
nop
xchg
xor
sbb
add
and
jecxz
or
aam
negl
add
and
sbb
out
hlt
push
jno
das
jns
add
jne
xor
mov
add
dec
xchg
and
and
and
xchg
or
inc
ficomps
test
mov
push
mov
mov
jbe
mov
sub
sarl
xor
repz
movsl
icebp
xlat
adc
xchg
addb
cwtl
mov
cmp
inc
out
jb
inc
xor
push
lea
jg
repnz
add
add
clc
jb
jmp
sub
and
call
mov
cmp
je
push
adcl
push
xor
repz
adc
ret
insb
xor
js
pop
jecxz
out
push
adc
enter
inc
mov
inc
or
and
and
sbb
pop
sti
or
mov
push
pop
or
pushf
fcompl
push
rcrb
fisttps
push
repnz
outsl
popf
adc
stc
or
inc
lret
call
and
and
fnstenv
dec
sub
dec
add
call
je
fiadds
xor
int
ljmp
adc
loope
and
insl
ret
cmp
mov
scas
test
jecxz
sbb
dec
fwait
mov
sbb
or
sub
fwait
add
add
shll
xor
push
fsubrp
hlt
mov
rcrl
or
adc
loopne
inc
sahf
outsl
jmp
adc
cmp
xor
adc
add
xchg
pop
add
fildll
push
adc
or
pusha
add
and
lds
xor
push
rcrb
jg
shlb
rorl
pushf
gs
xchg
add
movb
add
cmpb
sbb
jbe
mov
or
or
pop
or
add
mov
popa
add
push
and
inc
or
push
into
inc
pop
mov
leave
and
and
push
add
add
sbb
mov
scas
add
subb
inc
int3
inc
sbb
dec
pushf
cmp
adc
mov
clc
sub
fcoml
rol
fildl
pop
stos
sti
add
sbb
pop
add
pop
cmc
ret
insb
xor
sub
push
add
add
mov
push
push
inc
lahf
int
add
pop
or
sbb
or
dec
or
dec
sub
icebp
push
or
mov
mov
lods
xlat
imul
or
add
fwait
mov
push
mov
daa
fcoms
loopne
jecxz
leave
xchg
mov
ret
mov
dec
adc
inc
jmp
fists
sub
ret
fsubp
add
add
push
sub
hlt
pop
sub
popa
xor
nop
add
push
and
cld
lock
and
xlat
and
lock
adc
mov
mov
jns
clc
cli
push
das
jno
adc
fs
insl
xchg
cwtl
nop
push
cld
sub
push
push
lahf
lods
add
xchg
inc
dec
or
call
ja
fmuls
mov
jp
rcl
sub
inc
adc
cmc
xor
xor
pop
sub
adc
adc
rorb
fdivl
or
pusha
insl
insl
or
pusha
cmp
inc
jge
inc
mov
fisubs
cmpl
push
sbb
inc
push
mov
loope
mov
int3
movsb
jo
sbb
fadds
add
cmp
enter
add
fs
add
mov
xchg
call
pop
inc
xchg
inc
and
or
cmp
pop
push
push
add
in
lods
ja
or
sbb
adc
sbb
ficoml
cmp
or
pop
daa
or
cmc
in
jbe
fadds
sub
inc
and
mov
xchg
clc
push
xchg
mov
lock
mov
xchg
arpl
iret
and
push
adc
mov
push
shlb
or
test
adc
sbb
adc
test
add
mov
xor
inc
int
xor
cmp
insb
xchg
fmull
xor
xchg
add
pop
dec
push
or
jbe
or
mov
cmp
in
or
sub
ljmp
int
inc
inc
test
or
and
mov
or
mov
inc
cmp
push
xor
stos
roll
data16
sti
inc
or
jb
hlt
xchg
hlt
or
ret
mov
pop
adc
lcall
mov
mov
in
lods
mov
xor
dec
mov
nop
pop
sbb
adc
lea
and
jae
xchg
sbb
jg
into
mov
add
cld
sbb
push
adcb
adc
mov
xor
mov
mov
xchg
mov
adc
adc
dec
pop
and
loopne
fidivl
dec
fdivrp
jo
inc
pop
hlt
movsl
ret
adc
inc
or
enter
sbb
dec
shll
imul
test
stc
mov
jmp
adc
and
mov
sub
jo
or
push
dec
and
inc
adc
adc
mov
les
cli
int3
loop
pop
int3
aam
add
insl
pusha
inc
loopne
cmpsl
sahf
xor
pop
and
fistpll
xor
dec
push
cmp
add
pop
jg
movsl
sbb
fimull
insb
jns
push
jne
repz
and
je
sbb
stos
mov
push
adc
enter
inc
add
add
je
lea
mov
adc
and
orb
add
cmp
mov
movups
xor
sbb
adc
aam
xchg
inc
xchg
xor
rcrb
in
mov
xlat
jb
inc
insl
sub
test
lahf
xor
mov
xchg
dec
repnz
fstpt
pop
mov
mov
clc
add
push
in
mov
and
fdivs
sbb
push
aaa
pushl
adc
mov
adc
sbb
shll
sbb
adc
cwtl
xchg
cltd
pop
jl
enter
aas
sbb
enter
sbb
mov
insb
filds
inc
adc
aad
in
xlat
lock
adc
shrb
andl
in
jecxz
ds
inc
jecxz
push
mov
sahf
fwait
test
cmp
in
aam
sbb
sub
or
dec
lock
and
or
clc
lock
xchg
stos
test
push
mov
mov
and
lds
pop
lahf
je
dec
cmp
jo
int3
cs
lods
fnsave
aad
lods
add
dec
sahf
cwtl
test
add
rorb
dec
sbb
xor
pop
adcl
in
movsb
mov
xor
inc
cmp
add
mov
mulb
call
sub
xchg
push
or
lods
xor
inc
mov
bound
or
sbb
adc
mov
push
sti
in
outsb
push
ljmp
dec
jne
pop
or
jge
lea
rcr
jo
add
inc
dec
scas
cmp
pop
add
add
or
pop
pop
sbb
adc
mov
xchg
sub
popa
pop
aaa
push
or
inc
xor
out
mov
or
xchg
xor
test
popa
cmp
sbb
inc
add
pop
sahf
mov
lahf
mov
loope
iret
sub
sbb
jge
push
inc
ss
inc
adc
imul
xor
cmpsb
test
add
sbb
movsb
mov
cmp
dec
or
mov
jle
add
push
ret
mov
inc
les
or
pop
push
ret
lahf
out
ja
lea
les
and
jg
mov
add
dec
jne
adc
loopne
adc
aaa
sub
mov
push
add
and
jg
jb
add
push
jb
sub
inc
add
movb
dec
xor
dec
outsb
sahf
pusha
xor
aaa
jae
sbb
out
test
test
jmp
fistps
dec
add
add
mov
loope
popl
inc
pop
mov
lds
push
pop
add
lcall
add
fs
shld
add
mov
push
push
mov
addr16
inc
and
sbb
inc
xchg
mov
push
sbb
adc
adc
pop
jns
inc
add
inc
out
prefetchnta
xchg
inc
cmp
push
mov
inc
or
rorl
mov
mov
xchg
cmp
add
or
mov
jbe
xor
inc
mov
mov
je
jbe
ja
adc
leave
pop
push
jmp
pushf
and
xchg
dec
sbb
push
cmp
in
test
pop
sbb
mov
movsb
int3
notb
movsl
fs
sbb
dec
loopne
insl
in
pslld
or
in
sbb
sbb
call
mov
sbb
and
and
xchg
add
mov
aaa
lods
cld
testb
jmp
ret
mov
xchg
jge
in
imul
xor
js
or
ret
lea
push
iret
pop
je
sub
iret
or
jg
les
mov
sbb
hlt
test
sbb
adcl
sbb
shll
jmp
or
dec
fmull
in
adc
push
cli
add
xor
adc
ret
pop
imul
inc
add
and
add
shrl
lahf
jmp
pushf
sbb
lret
fisubs
ljmp
adc
inc
or
xor
adc
xchg
and
mov
frstor
and
lock
cmp
add
leave
xchg
popf
out
test
xor
das
and
add
int3
xchg
xchg
scas
rolb
xor
outsl
sub
jae
jmp
sub
adc
and
inc
push
pop
ljmp
sahf
push
shrl
test
pop
shlb
inc
or
aad
dec
pop
shlb
xlat
jmp
jns
int3
fldcw
mov
cmpb
scas
notb
mov
and
push
push
mov
adc
push
mov
lea
aad
mov
sbb
cmp
xorb
mov
push
mov
mov
or
xchg
cmp
roll
mov
addb
pusha
adc
popa
and
pop
daa
outsl
adc
jnp
mov
and
mov
sbb
dec
pop
fyl2x
push
add
or
sub
cld
pusha
jne
mov
insb
jb
dec
cmpsb
push
test
jle
ficompl
mov
mov
add
pop
xchg
stc
adcb
fimull
add
lcall
dec
or
dec
leave
pop
nop
sbb
outsb
add
pop
xor
sbb
movsb
clc
mov
pop
dec
jne
imul
popa
push
sub
add
sbb
out
in
inc
or
and
push
adc
and
sbb
mov
push
or
rorb
inc
loope
addl
sub
sbbb
scas
jno
insb
fcoms
sarb
scas
mov
sub
cmp
push
or
ret
jge
lds
aas
cmpb
inc
push
add
loope
or
adc
xchg
stc
je
fbld
das
or
mov
and
clc
clc
add
test
add
add
or
xchg
cld
xor
xchg
mov
jo
adc
mov
jg
mov
ret
cmp
jne
xor
icebp
das
test
and
xor
movsl
or
rolb
xchg
pusha
push
xor
add
cmp
push
push
stos
mov
or
jmp
sub
adcb
cmp
mov
sub
cmpsl
inc
imul
mov
test
sub
sti
test
inc
xorb
mov
or
or
xchg
adc
xchg
leave
xor
in
out
xor
xchg
pop
pop
enter
arpl
xchg
add
mov
int3
inc
aaa
std
es
cld
mov
xor
loop
jb
lcall
mov
mov
inc
xchg
mov
adc
inc
mov
sub
jmp
and
xchg
lahf
sysret
dec
leave
pop
iret
cmp
add
mov
mov
out
adc
test
nop
rol
jb
sub
loope
pop
fmuls
cmp
and
sub
push
movsb
xchg
les
leave
pop
sub
mov
pushl
adc
clc
add
hlt
orb
imul
and
fstpl
pop
xchg
pop
or
testl
ret
frstor
inc
pop
rcrl
sub
push
and
clc
rcrb
cmp
je
incl
and
mov
sbb
push
ret
push
push
ja
cltd
push
cmc
and
sub
xchg
icebp
and
adc
mov
and
xorl
decl
test
pminsw
dec
push
jne
push
fisttps
lods
mov
mov
pushf
sbb
cmp
cltd
lock
mov
pop
pusha
add
inc
ss
push
jae
mov
add
push
xchg
or
adc
push
icebp
pop
psubusb
lods
xor
inc
push
cmp
lahf
jl
add
add
and
outsb
sbb
mov
pop
fsubr
dec
cmp
pop
jmp
jmp
push
movsb
loop
insb
imul
push
inc
scas
and
xor
pop
inc
xchg
push
les
into
data16
and
mov
xlat
test
es
dec
push
lea
lcall
pusha
mov
insb
cs
xchg
bound
sbb
add
movb
pop
adc
lea
jmp
popa
dec
or
mov
jge
dec
add
cmc
es
sub
jg
pop
xor
push
mov
or
jle
je
lcall
add
movsl
arpl
adc
adc
rorl
test
test
leave
inc
pop
xchg
pop
and
sbb
daa
sbb
fstl
ficoms
ss
sbb
adc
aaa
and
sub
daa
fcompl
sub
movsb
sbb
ret
dec
bound
imul
xchg
mov
lds
mov
sbb
jb
sbb
fsubrs
or
mov
pusha
adc
xor
mov
adc
sub
adc
int
xor
pop
jno
cmp
inc
lahf
roll
cmp
js
lock
xor
adcb
test
pop
push
add
or
xchg
adc
incl
or
and
loopne
fadd
mov
xchg
and
lods
aaa
arpl
testl
add
jmp
jo
jo
mov
sbb
adc
sub
sbb
xor
pop
adc
mov
push
dec
int3
xchg
ljmp
inc
sub
test
ret
or
add
sbb
or
mov
sbb
xchg
je
mov
nop
inc
dec
sahf
daa
call
out
sbb
push
inc
fsub
ret
or
es
inc
loop
fs
mov
xor
jb
add
ret
hlt
inc
push
jne
shll
and
xor
je
ja
repz
adc
cmp
jl
push
push
jge
xor
popa
xor
mov
mov
push
ret
add
shrb
push
push
enter
mov
cmpsl
add
hlt
ret
lret
adc
incb
jl
or
arpl
pop
mov
or
sub
test
jo
and
push
dec
cmp
cmpl
dec
pop
pop
fidivl
inc
inc
scas
into
cmp
pop
push
arpl
push
aam
ljmp
inc
imul
adc
inc
pushf
les
sbb
lret
test
nop
and
sub
mov
and
mov
mov
adc
les
add
adc
les
jecxz
es
and
orl
mov
push
sub
pop
cs
pop
adc
and
xor
aaa
and
and
jo
push
add
mov
jmp
sub
pop
jnp
hlt
out
in
push
testl
or
or
pop
insl
pusha
lods
popf
sub
les
inc
mov
es
adc
inc
arpl
filds
pop
sub
rcll
les
push
adc
cmpsb
lock
push
or
xchg
inc
sub
mov
inc
xchg
inc
mov
push
inc
cmp
pop
mov
xchg
mov
push
cmp
enter
jne
stos
push
cmp
sub
sub
pop
sbb
es
and
sbb
jg
das
aad
cmp
scas
sub
arpl
mov
rol
popa
sub
shrb
lock
cmp
or
push
scas
ss
jae
jp
dec
sbb
adc
cmp
test
sbb
clc
jo
insb
push
rorl
or
pop
enter
gs
inc
pandn
mov
inc
jns
jmp
jge
pop
gs
xor
pop
fcoms
mov
lahf
jp
movsb
adc
xor
mov
or
or
das
or
mov
lods
and
mov
lahf
mov
mov
jmp
mov
sbb
inc
sub
pop
and
addl
pop
pop
loope
nop
lahf
sbb
js
push
pop
insb
test
mov
sub
xor
mov
inc
mov
adc
imul
adc
and
jmp
gs
mov
jns
sbb
adc
test
mov
aas
sbb
mov
pop
xor
ret
gs
cmp
jg
loopne
mov
or
and
mov
lret
loope
ret
pushl
jnp
dec
pop
sar
cmp
data16
and
jl
adc
repnz
call
inc
add
and
adc
push
inc
dec
jne
xchg
andl
cmpsb
push
lock
adc
repnz
ror
or
and
inc
cmpsl
or
pop
insl
dec
inc
testl
cs
nop
push
inc
inc
push
dec
int3
outsb
mov
bound
mov
add
xchg
jo
cmp
cld
mov
comiss
jl
and
inc
repnz
pop
or
orb
clc
adcb
add
xchg
mov
mov
sub
pop
jge
or
inc
loope
pushf
pusha
sbb
iret
push
xchg
fists
jmp
push
push
bound
dec
aam
inc
xchg
popa
xchg
test
enter
daa
aas
or
add
test
bound
adc
xchg
or
fstpl
scas
aad
mov
sbb
pop
push
xor
in
mov
mov
outsb
sbbb
mov
adc
enter
sbb
rcrl
dec
pushf
lahf
or
test
push
mov
movswl
adc
add
test
pusha
bound
adcl
js
sbb
sbbb
arpl
and
cmpl
mov
sbb
lea
ja
push
sbb
in
inc
push
jg
inc
sbb
jg
hlt
insb
mov
enter
sbbb
cmp
xor
and
push
and
push
in
imul
int3
sahf
ss
pop
mov
cltd
dec
dec
pop
scas
leave
cli
adcl
cmove
mov
sbb
mov
movsl
ret
xlat
sub
xor
test
xchg
xor
aad
sub
test
cmp
inc
pushf
lcall
xor
dec
cmc
addr16
loop
rcr
mov
aam
adc
adc
inc
pop
inc
xor
jb
das
xor
lock
xchg
push
and
add
xor
or
dec
je
out
xchg
lea
inc
addr16
or
push
xlat
and
push
add
testl
btc
xor
and
dec
adc
cmpl
jecxz
pop
add
ret
mov
test
xchg
mov
iret
xor
lea
add
outsl
pop
adc
cltd
out
push
pop
cmp
loop
add
inc
ret
arpl
dec
inc
lret
ss
cmpsl
test
push
aaa
fs
mov
or
adc
or
lahf
add
test
pop
out
in
add
sti
xor
inc
mov
mov
push
lret
out
adc
mov
or
lret
incl
or
sbb
sub
fdivs
cmp
xor
jnp
pop
push
xor
xchg
or
dec
xchg
lret
nop
ja
adc
add
hlt
add
adc
cwtl
dec
sub
fs
jne
add
movsb
jg
or
mov
adc
jmp
xlat
mov
add
xor
jbe
andl
dec
xchg
lock
cmp
jle
js
add
push
in
test
adc
mov
pop
pop
add
sbbl
loopne
mov
in
push
and
fsubrs
dec
out
push
jecxz
test
sub
into
adc
cmp
push
jp
or
sbb
mov
adc
outsl
jo
outsl
and
iret
jb
sbb
sbb
in
xor
loopne
call
mov
mov
movsl
inc
ds
pop
rol
mov
cmpsl
adc
cltd
xor
mov
out
cmp
mov
add
sbb
adc
pop
xchg
jge
notb
mov
dec
je
cmp
or
xor
sbb
and
sub
pop
jb
cmp
dec
sub
push
aaa
or
push
mov
xor
scas
aaa
or
pop
inc
in
add
test
mov
mov
inc
mov
pop
xor
subl
shlb
lods
jp
adc
sub
inc
add
adc
adc
sub
ret
aas
mov
cs
insb
push
fsts
add
cmc
lret
push
cmp
add
je
sub
js,pn
mov
xchg
aaa
in
popa
call
pop
inc
pop
or
add
dec
loope
mov
add
adc
and
cmp
fisttpl
mov
mov
pop
sbb
or
popf
mov
out
pusha
adc
push
nop
scas
mov
or
ds
jmp
or
or
pop
pop
jne
jne
cmp
sub
dec
jne
pop
mov
cmp
je
or
cmp
cmp
stc
inc
inc
push
add
scas
pop
xchg
sbb
and
jg
out
loopne
cmp
cmp
ret
jno
adc
leave
movsl
cmp
fisubs
mov
movsl
dec
call
mov
xchg
cmp
stos
push
push
addr16
push
dec
add
dec
push
fs
push
fdivl
add
shrb
and
sub
test
mov
pop
or
in
xlat
scas
fldlg2
mov
cmp
adc
in
mov
inc
pop
push
lods
fsubrl
js
mov
xor
fs
jo
loopne
xchg
push
movups
adc
mov
lds
cmc
out
mov
enter
test
pushf
xchg
inc
mov
popa
cld
push
jo
xor
pop
push
jg
test
xor
bound
sti
and
cmp
jo
test
add
lea
sub
das
shll
mov
or
enter
js
mov
ss
aaa
pushf
xchg
lods
jl
sub
push
dec
inc
jne
sbb
ljmp
outsb
les
sarl
cmp
mov
clc
pop
and
das
test
setg
aam
jns
sub
sub
pop
out
pop
pushf
test
ret
call
sahf
addb
popa
dec
repz
or
push
inc
add
inc
testb
adc
cmpsl
add
mov
hlt
pop
inc
sbb
push
sub
pop
aam
dec
xchg
xor
pop
leave
cld
sub
lret
lret
aad
ffreep
jl
jge
dec
cltd
inc
std
idiv
call
out
shl
add
mov
fsubrs
shl
jb
les
xchg
jle
lahf
das
icebp
dec
inc
cmpl
xchg
or
in
sub
repnz
jecxz
loope
cli
je
bound
fildl
and
popa
ret
outsb
cld
je
jnp
mov
or
jne
scas
outsb
add
sub
xor
pop
xor
jne
cmp
outsl
dec
mov
pop
xor
push
jne
add
addr16
jecxz
lret
add
lcall
adc
sarl
add
shl
pop
xor
xchg
and
fdivl
mov
pusha
cli
inc
scas
cli
dec
lods
insl
add
and
imul
or
jo
jp
mov
cmp
cmp
into
or
adc
mov
adc
mov
outsl
pushf
mov
pop
and
dec
dec
cld
push
or
and
insb
pusha
mov
cmp
mov
enter
hlt
mov
push
push
adc
sub
mov
mov
add
push
fidivrs
daa
add
xor
call
add
movl
adc
mov
dec
aas
jl
add
imul
test
add
outsl
adc
fsubrs
pop
test
xlat
or
pop
and
mov
adc
lods
rcl
sub
aad
inc
cmp
sbb
rcr
or
aas
test
es
push
fcoms
daa
pop
aas
cld
adc
jg
pop
add
add
pop
mov
inc
adc
add
addr16
sbb
push
sub
or
inc
dec
dec
sbbb
inc
pop
add
or
lcall
mov
pop
dec
lcall
and
inc
cmp
shll
pop
or
cmp
mov
or
jb
cwtl
paddusb
repnz
cmpsl
dec
mov
xchg
popa
xchg
mov
or
add
mov
popa
adc
jnp
xor
js
sub
roll
inc
ret
push
or
mov
sub
sub
incl
mov
in
pop
push
adc
pushf
lcall
mov
cmp
push
add
sbb
in
inc
push
pop
aas
sub
aas
push
and
inc
dec
push
jmp
inc
adc
push
push
adc
dec
and
out
inc
icebp
push
dec
fs
dec
add
mov
shrl
mov
ficoml
fucomip
adc
mov
or
sbb
and
cwtl
dec
mov
cmp
enter
push
jnp
inc
ja
insl
lock
dec
sub
or
adc
dec
mov
fisubrs
inc
in
push
jnp
lahf
inc
insb
es
or
inc
dec
and
push
push
mov
adc
fwait
or
sub
out
mov
addr16
jg
enter
cmpsb
xchg
inc
int
hlt
or
mov
inc
adc
pop
and
roll
test
push
scas
jne
push
sub
push
pop
inc
fwait
pop
inc
cmp
and
and
push
jno
add
cltd
bound
add
aaa
dec
jecxz
xchg
pop
aam
dec
or
xor
sbb
outsb
pop
mov
popa
adc
adc
push
ret
jno
xor
inc
addl
adc
jle
adc
mov
daa
sbb
fistl
inc
xchg
mov
test
ja
insl
adc
xchg
ret
pop
mov
fcompl
xor
aaa
out
ja
popl
push
loope
repz
push
inc
inc
jnp
inc
ds
arpl
sub
adc
setne
sbb
inc
xchg
test
push
mov
sub
fwait
clc
add
push
aas
push
push
push
roll
pmulhw
std
add
sbb
xchg
in
lods
int3
adc
fsubp
sbb
fcomps
shl
add
movsl
pop
mov
add
pop
mov
not
jmp
sbb
xor
and
jb
add
or
adc
push
cltd
jmp
iret
adc
in
pop
filds
mov
dec
loop
xchg
pushf
xor
pop
test
insb
mov
outsl
mov
cld
or
inc
sub
je
inc
add
insb
mov
pop
dec
cmp
sbb
movsl
mov
xchg
aad
inc
insb
adc
xchg
jl
dec
xchg
mov
xor
jmp
add
xor
aaa
popa
test
ret
inc
clc
sub
or
mov
rcrl
pushf
push
fistps
push
lock
test
inc
lea
pop
sub
mov
sub
push
and
mov
jg
or
cmpl
add
push
es
es
cmp
pop
enter
push
mov
mov
movsl
aad
rorl
adc
loop
mov
orb
sbb
push
push
mov
push
add
pusha
popa
notl
jo
and
cmp
test
ret
push
sbb
mov
adc
aam
adc
adc
in
fisubs
aaa
or
js
xor
loop
int3
smsw
fisubs
cmp
jl
pop
mov
pop
pop
xchg
scas
fstpl
add
jo
movsb
mov
xor
rolb
mov
andb
nop
or
stos
in
add
sub
sub
hlt
and
dec
xor
mov
insl
push
or
aaa
icebp
lret
add
and
mov
shlb
test
add
cmp
jno
lahf
ret
or
sbb
je
and
push
sub
outsl
mov
mov
setg
cmpsl
ds
je
mov
test
sub
outsb
pop
outsl
jecxz
loope
and
add
or
add
jg
js
mov
push
xor
push
popa
add
nop
dec
jmp
pop
adc
repnz
dec
out
popf
mov
sub
lods
mov
stc
movsl
int
mov
sbb
and
fs
shr
clc
mov
fisttpl
iret
add
repnz
out
sub
hlt
dec
je
sub
sbb
push
inc
shrl
rorb
ficompl
cs
je
test
push
sbb
sbb
cmovl
pusha
and
aas
test
push
sbb
lret
loopne
add
sbb
mov
arpl
or
adc
dec
mov
sbb
loope
dec
neg
add
inc
mov
nop
xchg
mov
and
add
jbe
cli
hlt
jne
stos
push
or
dec
cld
jmp
push
leave
sub
cmpsb
and
lret
lock
ja
fisttpll
lds
pushf
add
rorl
push
or
xlat
mov
out
insl
xchg
push
xchg
sub
jno
mov
orl
ud2
dec
sti
loop
and
clc
int3
jno
popa
inc
sub
jne
test
in
or
test
pop
outsb
dec
mov
test
mov
lcall
mov
push
xor
js
mov
cltd
test
mov
pop
repnz
mov
push
xor
dec
cs
popa
or
add
es
das
push
arpl
push
sbb
pop
ss
jle
push
inc
jmp
out
add
sbb
insb
add
add
data16
imul
jno
pop
add
push
fiaddl
jb
das
or
dec
pop
jge
xchg
dec
fdivl
push
mov
call
movsl
push
pop
rorb
in
js
push
mov
movsb
push
adc
mov
ss
adc
xor
out
lds
xor
pusha
cmpb
adc
cmp
and
adcb
or
push
pop
or
and
push
push
sub
in
inc
or
add
ss
jb
fadd
xchg
jo
cmp
bound
dec
push
mov
add
loop
add
cmpl
loopne
and
mov
aam
pop
daa
push
xchg
push
insb
add
lahf
mov
lea
push
xchg
lds
sub
insb
loop
pushf
scas
roll
lret
add
mov
add
dec
add
inc
mov
inc
dec
inc
ror
dec
push
in
adc
push
fimuls
fadd
push
lods
addb
flds
daa
inc
jg
movsl
and
push
push
mov
push
cmpb
rolb
add
hlt
in
bound
icebp
or
enter
push
xor
shl
movb
inc
inc
pop
and
les
sbb
mov
push
repz
dec
cli
and
ds
ret
adc
sub
push
pop
push
inc
cmpb
mov
dec
mov
lods
pushf
jle
daa
imul
push
add
leave
dec
adc
push
faddl
mov
jmp
stos
jne
out
mov
aam
cwtl
push
push
inc
sbb
push
jns
cmp
mov
cmp
jge
pusha
sbb
pop
adc
sti
sbb
jne
pop
pop
pop
xor
jg
inc
cmp
xor
push
cmp
and
fadd
fcoml
push
push
inc
add
cwtl
xchg
adcl
leave
jns
sahf
and
pop
add
test
add
adc
stc
mov
stos
add
les
xor
push
adc
lcall
push
pop
arpl
sub
push
add
imul
mov
cs
or
cs
mov
push
xor
cmpsb
in
inc
jmp
sub
add
fmull
add
pop
scas
rol
mov
push
fs
xchg
les
insl
call
adc
sub
shlb
test
add
nop
adc
and
sub
pusha
inc
mov
in
leave
je
les
imul
push
fsubl
lahf
icebp
xor
out
cmp
stc
adc
clc
in
adc
mov
or
xchg
push
jb
cmp
pop
adc
add
aas
shll
sbb
in
pop
jb
or
xor
outsb
sbbb
jbe
loopne
inc
aad
dec
jmp
adc
lea
add
add
adc
ror
pop
movl
sbb
xor
push
jmp
sbb
adc
jecxz
xchg
rorb
and
roll
mov
or
fldenv
stos
mov
adc
bound
test
sbb
out
inc
adc
bound
sub
or
add
adc
jb
or
cmpsb
jge
lds
sbb
xor
xor
mov
push
sbb
imul
cmpsl
add
mov
jmp
pop
sbb
pop
movsb
loop
pop
push
ret
bound
xor
jl
jg
or
test
or
jne
and
jge
jge
lret
jne
mov
jo
sarb
jnp
cs
xchg
mov
xor
shll
js
insl
loop
sub
cs
inc
lds
loopne
push
andb
mov
sbb
rcl
rol
and
orl
xlat
add
cmp
xchg
and
push
lcall
les
imul
in
movb
adc
lods
mov
in
xor
scas
loopne
dec
pop
pop
xchg
fs
ret
inc
push
mov
test
add
mov
pop
imul
jb
in
imul
mov
mov
adc
jg
fs
cmp
mov
add
loopne
xchg
movsl
jns
test
lret
inc
cmovo
pusha
sahf
in
data16
dec
add
pop
add
sub
mov
add
pop
jns
int
or
or
insb
xchg
addr16
or
or
mov
lret
mov
frndint
pop
sahf
sete
jmp
add
bound
insb
lret
repz
add
ret
adc
arpl
adc
pop
add
xchg
sbb
sub
mov
inc
mov
xchg
sarl
lock
push
in
andb
dec
adc
add
arpl
nop
lret
cmp
xor
imul
jp
push
in
pusha
push
jmp
and
dec
adc
test
xchg
popf
jl
pop
or
xor
sub
addr16
push
movsb
add
push
pop
sub
outsb
pop
xchg
mov
dec
lds
push
sbb
dec
aas
mov
insl
pop
mov
or
push
push
leave
lods
add
xor
pop
push
mov
mov
pop
or
popa
sub
adc
test
dec
sub
sbb
pop
or
jmp
pop
push
mov
stos
imul
scas
in
or
sub
xorb
lods
mov
push
lds
sbb
add
popa
pop
xor
or
sub
sub
xchg
add
pushf
push
add
repz
adc
outsl
lods
pop
rorb
ds
and
and
inc
shrb
sub
inc
push
mov
mov
inc
fsubs
add
xchg
mov
enter
cmp
add
imul
out
addb
jo
mov
xchg
pcmpeqw
sub
sub
cmp
push
adc
or
test
dec
js
jb
sbb
iret
push
adc
dec
or
adc
popa
out
movsl
pop
xor
nopl
fs
or
push
add
dec
jle
or
sub
mov
pop
inc
bound
jnp
push
add
push
pop
and
inc
mov
add
dec
enter
and
pop
pcmpgtw
mov
pop
lock
cmp
add
test
mov
adc
ja
jl
pop
repz
mov
js
pop
jp
jp
mov
jae
mov
addr16
loope
or
movd
loop
insb
xchg
enter
adc
cs
aas
jg
movsl
dec
loopw
push
nop
lea
ret
and
pop
dec
mov
sahf
add
add
adc
sub
inc
int
or
mov
pop
and
test
pushf
push
adc
dec
dec
jno
push
pop
push
adc
pop
push
adc
sub
pop
or
sbb
aaa
add
into
and
insl
imul
xor
push
or
cwtl
nop
push
jle
pop
xor
call
mov
pop
ss
jle
jne
es
popa
orl
inc
sbb
cld
mov
inc
pushf
lods
push
outsb
xor
rcr
add
inc
imul
jb
enter
and
add
stc
scas
in
adc
sbb
movsl
sarb
lods
dec
add
das
jo
and
aam
push
dec
test
and
xchg
push
lods
jne
pop
jne
pop
arpl
ret
mov
pop
call
loopne
inc
and
scas
inc
fs
mov
push
mov
pusha
fcoml
loopne
xchg
imul
enter
repnz
mov
imul
insb
imul
xor
dec
or
pop
lea
xchg
inc
enter
jb
sub
mov
inc
pop
leave
insb
std
hlt
insl
sbb
insl
sbb
popa
jb
sbb
mov
push
mov
inc
pop
insl
cmpsl
scas
nop
inc
enter
adc
push
es
and
cmp
stos
mov
jae
and
in
mov
xlat
and
xchg
sbb
fadds
sbb
pavgb
push
mov
add
bound
push
bound
jo
jmp
push
cmp
hlt
inc
xor
xor
pop
fadd
inc
lahf
sti
adc
repnz
sbbl
mov
jo
adc
cltd
xchg
jl
addl
mov
in
and
xlat
adc
mov
les
mov
or
mov
and
bound
push
add
loop
add
push
fisubrl
sbb
adc
sbbb
mov
and
xchg
cmp
sbb
inc
mov
xor
mov
lock
mov
and
sub
mov
dec
rorb
push
push
mov
jno
sbb
xor
adc
lock
add
and
enter
add
add
pop
adc
sti
sub
sbb
inc
lcall
adc
fstl
mov
add
adc
or
in
out
repz
mov
in
cmp
xor
push
xchg
ret
inc
xchg
push
sub
mov
in
inc
in
mov
and
lock
sub
imul
add
inc
sahf
xchg
add
in
in
ret
push
aas
imul
jp
xor
icebp
jl
adc
test
push
or
es
mov
sub
push
push
mov
stos
rorl
or
push
adc
lock
or
mov
xchg
inc
mov
jae
por
add
bound
lock
orb
and
addr16
movsb
rcrb
mov
jne
jg
fsubs
je
rol
xchg
pusha
hlt
popa
sub
imul
hlt
rclb
jne
pop
sbb
inc
test
decl
test
jbe
nop
das
je
inc
and
sub
sub
push
cltd
je
js
add
adc
add
adc
sbb
push
and
push
and
add
add
push
popf
divps
cmp
nop
or
xor
out
and
repz
or
jno
xor
lods
mov
divl
or
daa
push
pop
mov
push
clc
add
dec
inc
or
mov
pop
xchg
mov
dec
repnz
aas
jbe
hlt
or
inc
adc
in
mov
adc
mov
xor
enter
cmp
movsb
notl
subl
aas
push
daa
mov
push
hlt
and
clc
enter
out
mov
hlt
push
cmp
adcb
or
dec
push
mov
add
call
add
dec
je
das
or
inc
add
inc
sbb
mov
xchg
mov
cmp
mov
fstps
test
sbb
popa
js
mov
or
xchg
popf
xchg
les
add
outsl
and
insb
inc
mov
adc
add
scas
and
rorb
and
iret
aam
cltd
fbstp
jo
sub
in
aas
mov
cmpsb
xor
pop
aaa
cltd
movsl
and
in
les
sub
dec
in
push
pushf
mov
mov
inc
subl
mov
sbb
sbb
add
pop
cmp
addb
dec
fsubrl
in
stc
add
lods
cwtl
rol
outsl
into
outsl
push
lret
sbb
push
in
roll
imul
add
add
cmp
cmp
sarb
jno
inc
jns
stos
adc
push
cmp
pop
add
dec
sti
shlb
jmp
call
les
lret
lret
loopne
add
int
push
lods
arpl
push
movsb
jl
mov
enter
xor
jl
cwtl
fimull
cmp
sahf
inc
dec
adc
clc
xlat
pusha
inc
mov
shlb
inc
nop
sub
cmp
mov
mov
and
cmpsl
fucomp
inc
or
stc
mov
jp
inc
sub
rolb
xchg
adc
leave
out
add
movsl
add
xchg
sub
add
lret
sbb
mov
addr16
inc
loope
jns
movb
sub
xor
push
mov
push
or
jecxz
aad
sbb
pop
or
repz
sub
add
cmp
or
repz
pop
or
int3
jae
sub
pop
xchg
dec
lret
sub
mov
or
popa
sub
jo
loop
imul
mov
loopne
xor
or
dec
or
add
push
sbb
adc
fcoms
inc
sub
mov
inc
push
xchg
cld
mov
or
ret
cmp
pop
pop
inc
add
push
cmp
outsb
in
mov
jno
pop
mov
jge
lds
pop
test
push
push
xchg
sbb
daa
pop
xchg
and
test
mov
add
jl
or
out
cmp
pop
dec
sbb
movsb
add
or
xchg
gs
sub
sbb
and
sub
inc
iret
sbb
jns
jb
jg,pn
cmovge
or
inc
rorl
and
aas
js
sbb
leave
flds
enter
adcb
leave
and
dec
push
sbb
adcl
adc
enter
fisubl
sahf
test
test
dec
push
sbb
std
xchg
mov
xchg
repnz
inc
mov
mov
nop
daa
orl
mov
scas
testl
sub
adc
inc
dec
jmp
aam
movsb
mov
xor
bound
mov
lea
mov
popf
jecxz
or
gs
ss
push
adc
inc
adc
imul
sub
xor
or
adc
in
test
stos
and
xchg
push
popa
loop
or
and
sarl
adcb
lret
lds
or
aad
xchg
and
inc
fdivr
or
or
imul
pop
mov
push
inc
dec
repz
push
cltd
push
sbb
and
cltd
rcrl
ret
jnp
in
add
add
jnp
cmp
adc
push
fsubs
or
ret
pop
push
mov
adc
fsubp
mov
lcall
mov
popf
movsl
enter
sub
jae
push
cmp
and
inc
test
cmpsb
inc
push
inc
xor
sub
push
add
mov
and
and
mov
dec
rorb
outsl
xchg
cmpsb
adcl
add
pop
and
fcomp
inc
inc
jp
add
adc
fwait
notb
jp
popa
outsb
insl
jg
cmp
lea
mov
or
cmp
or
push
xor
mov
push
lds
mov
ja
inc
dec
bound
ret
fildll
bound
insl
sbbb
and
lods
mov
pop
adc
push
sub
adc
or
notl
outsl
add
popa
or
movsb
rolb
leave
inc
js
adc
inc
vmovntps
push
dec
inc
jecxz
add
and
add
adcl
or
or
and
stos
push
scas
jne
jbe
rorb
mov
jo
stos
push
fmuls
out
gs
adc
sbbl
push
outsb
mov
mov
test
xlat
add
xchg
mov
inc
sub
insl
movsb
and
xorps
inc
push
sub
and
pop
insl
adc
mov
inc
lock
shrw
xor
mov
adc
mov
aam
pop
push
lea
push
and
add
ljmp
pop
dec
adc
sbb
add
ficompl
test
add
push
inc
push
movsl
ja
mov
sti
popf
shlb
add
jb
mov
cmp
mov
ss
mov
orl
notb
dec
or
es
or
sbb
jnp
mov
inc
or
xchg
andl
mov
and
and
repnz
clc
imul
aaa
daa
sbb
mov
add
test
orb
dec
or
pop
jne
inc
inc
adc
cmc
push
push
adc
adc
sbb
and
or
sbb
out
imul
push
mov
lret
int
xchg
adc
add
jmp
add
push
xor
test
sbb
daa
mov
jl
les
lea
imul
push
mov
insb
cwtl
dec
adc
addr16
shlb
rolb
and
push
push
icebp
mov
pushf
xchg
inc
adc
mov
aam
or
xchg
je
lcall
adc
stc
pop
inc
es
ret
xchg
icebp
jae
pop
lods
addr16
add
cmp
imul
out
popa
cmp
jmp
mov
mov
psubusb
adc
and
add
push
push
loope
jecxz
xor
cwtl
fmull
xor
gs
stc
arpl
xor
jmp
dec
shrl
imul
pusha
jns
jns
lock
xor
or
inc
out
fmuls
adc
xchg
cmp
jge
js
and
and
lret
sbb
sbb
pop
inc
adc
daa
arpl
sti
mov
and
push
pop
or
jnp
or
fnstcw
or
and
xor
enter
nop
loope
or
or
insb
in
and
push
loope
or
in
adc
es
addb
iret
pop
imul
xor
xor
push
pop
or
sbb
push
pop
dec
adc
daa
add
jge
adc
add
pop
pop
stc
cmp
repnz
scas
xchg
push
add
add
mov
push
xchg
aam
subl
lcall
test
test
icebp
rorl
iret
adc
dec
fdivl
push
dec
dec
sub
pusha
es
mov
xchg
jo
inc
jmp
jecxz
and
aad
aam
aam
pop
jb
jns
xchg
dec
inc
inc
pusha
inc
and
add
test
aaa
jnp
aam
sub
push
mov
xchg
mov
inc
sbb
js
dec
sub
and
in
mov
pop
cmp
push
inc
push
sbb
pop
sbb
and
jnp
push
pop
adc
imul
dec
push
inc
ss
jbe
add
cmpsl
push
ss
nop
mov
push
inc
inc
mov
push
scas
push
inc
cs
push
push
push
pop
and
dec
inc
push
push
rclb
inc
es
addr16
inc
or
cmp
and
loopne
add
push
ja
mov
int
add
lock
add
inc
add
mov
lcall
ret
sbb
jo
mov
enter
or
imul
jmp
clc
fwait
and
dec
dec
popf
nop
mov
repnz
push
inc
and
popf
jmp
adcl
fildll
sub
dec
push
rol
movl
sbb
pop
xchg
pushf
fists
dec
pop
or
popa
cmp
lock
jb
insb
mov
imul
jg
xor
jo
adc
dec
scas
xchg
inc
cmp
pop
stc
jge
lea
int
les
mov
sbb
ret
nop
pop
lea
cli
cmp
dec
leave
and
movb
inc
enter
add
pop
xor
jecxz
adc
push
in
adc
xchg
xchg
aaa
addb
jno
nop
es
outsl
in
push
push
and
push
push
add
inc
repnz
lcall
xor
add
das
jnp
icebp
add
pop
and
or
in
and
mov
inc
imul
push
es
shlb
ficoms
test
add
ror
add
fmul
xor
sbb
pop
xchg
jmp
pop
lea
sub
lret
cmp
sub
inc
cwtl
jmp
and
or
add
mov
inc
bound
sub
pop
in
imul
mov
sub
cmpsb
dec
jo
int3
cwtl
jl
mov
out
inc
pop
push
clc
cltd
push
in
jecxz
ret
lcall
push
lea
or
add
xor
insl
sbb
sbb
sbb
loop
inc
dec
jno
out
out
cltd
fs
rolb
ret
cltd
call
pop
or
or
pop
pop
xor
outsb
pop
sub
mov
cmp
lcall
inc
les
in
inc
sbb
and
and
cld
dec
cmp
sub
aam
and
je
ret
pop
fdivs
dec
pop
outsl
push
cltd
pop
dec
push
jne
jb
rol
xlat
xlat
cmp
aam
adc
or
pop
aam
sbb
ret
loop
inc
pop
adc
jle
aas
jle
mov
es
inc
pop
stos
insb
inc
sub
dec
lods
jg
mov
arpl
pop
sbb
ss
add
negb
and
xchg
xor
cmp
adc
and
out
xor
mov
call
and
in
jbe
nop
mov
push
shrb
xchg
orl
fwait
std
nop
jl
sbb
push
xchg
xor
pushl
pushf
adc
inc
or
push
jge
int3
and
sbb
arpl
dec
lea
icebp
pop
mov
and
and
das
add
cltd
adc
fstpl
mov
adc
jecxz
test
and
add
subb
loop
bound
nop
push
leave
rcll
push
mov
and
xor
in
in
enter
add
sbb
and
cltd
mov
sbb
sahf
sub
add
and
xor
xor
jle
cs
xor
push
leave
les
flds
pop
jbe
or
fwait
in
and
push
mov
sahf
inc
and
cwtl
add
xchg
sbbl
and
daa
or
xchg
rcr
xor
and
aaa
dec
sub
or
test
add
shll
shlb
sbb
and
mov
mov
test
shll
pop
adcb
fmull
push
and
dec
ret
mov
int3
mov
ror
add
adc
add
push
notl
jae
sbbb
fistl
mov
test
movsb
mov
pusha
mov
pop
xorl
mov
or
xchg
in
sbb
add
lea
xor
addr16
movsl
add
lock
fadds
pop
jne
rorb
sbb
mov
cld
dec
mov
sub
mov
shll
sub
cmp
mov
lea
test
es
push
adc
or
xor
in
adc
add
imul
test
addb
addr16
in
adc
add
pop
leave
andl
xor
imul
ret
shlb
jns
or
mov
adcl
fwait
mov
mov
jns,pn
ficomps
lock
adc
cmp
or
insb
xor
xchg
popf
add
jmp
cwtl
inc
jbe
sub
jbe
jae
outsb
pop
fistl
cltd
daa
add
pop
insb
xor
fs
lods
sbb
stos
push
es
lods
scas
int
push
push
outsl
lcall
addr16
jae
pop
mov
jne
push
dec
mov
mov
add
je
lcall
jo
fs
xorl
pop
cmp
cmp
mov
stos
push
loop
inc
nop
xchg
mov
arpl
and
mov
lock
sbb
mov
sub
clc
and
mov
mov
pop
aaa
jle
pop
loope
pop
inc
and
pop
push
clc
mov
mov
loopne
sbb
fsubl
mov
push
or
mov
xlat
dec
mov
pop
dec
sub
test
or
cmpsl
mov
dec
mov
fadd
dec
pop
pusha
and
adc
test
mov
cmpsl
add
mov
add
enter
sub
push
add
cs
int3
jno
mov
je
test
in
shr
movl
adc
sbb
sbb
loop
adc
and
aam
push
xchg
sahf
jl
cmpsb
adc
add
dec
cmpsb
pop
adc
jne
test
aad
lods
jp
sbb
mov
mov
push
cld
outsl
sub
les
add
push
push
js
or
and
call
fdivrs
les
push
aaa
mov
pop
jmp
mov
int3
inc
cli
or
js
add
sub
insb
rorb
js
aam
loop
adc
xchg
xchg
mov
ds
jo
ret
shrb
std
rcrb
and
xor
rol
push
rcrb
adc
ss
push
add
or
outsl
pusha
push
or
dec
or
xchg
aam
adc
in
addb
pop
call
xor
sti
jne
cltd
out
imul
divl
add
mov
rclb
sti
push
and
and
pop
inc
add
mov
mov
inc
or
add
gs
gs
xor
dec
add
mov
cmpxchg
dec
sahf
outsb
xchg
mov
faddl
nop
sub
ljmp
sbb
ja
clc
loope
mov
je
jle
push
push
mov
adc
js
mov
jbe
cmpsl
pop
pop
adc
test
enter
xor
sub
loope
or
cmpsb
xor
cmp
push
mov
xchg
shlb
jmp
scas
out
sbb
sub
scas
insl
mov
inc
test
adc
enter
cmc
inc
sbb
or
push
push
mov
add
std
add
add
mov
sbb
daa
mov
cwtl
sub
sub
jge
push
or
pop
lods
or
out
or
repnz
fiadds
sub
mov
lret
dec
mov
mov
loop
and
push
andl
jg
and
std
sbb
and
idiv
add
lea
fadd
jmp
cmpb
jbe
arpl
cmp
dec
sub
dec
daa
xor
mov
adc
das
icebp
mov
dec
add
inc
jno
mov
mov
fs
and
es
adc
pop
loopne
lea
sarl
mov
scas
pop
add
arpl
in
test
xorl
clc
mov
and
rorb
sbb
or
add
adc
or
dec
mulps
lock
data16
push
jmp
mov
or
insb
adc
mov
shrb
int3
lea
js
lds
adc
sahf
and
rclb
shlb
clc
mov
js
and
mov
add
dec
sub
pop
cmp
mov
test
sub
ljmp
jb
cmp
ja
pushl
ss
push
mov
pop
sbb
jmp
pop
or
or
add
insb
loopne
mov
xlat
sbb
inc
addr16
jne
mov
lock
inc
dec
or
pop
cmp
sub
stc
ret
mov
add
pop
rorl
or
sar
hlt
push
out
push
enter
rcr
or
lock
mov
repnz
adc
pusha
xlat
mov
bound
mov
pop
and
mov
cltd
or
pushl
lea
push
cmp
add
orl
ret
push
stos
cmpsb
dec
dec
sbb
inc
outsl
dec
mov
daa
fsts
pop
fisttpll
push
fildll
mov
xlat
mov
ficoms
ret
cmp
test
jnp
ret
daa
daa
mov
dec
add
sbb
xor
inc
inc
sub
mov
jmp
push
stc
ficoml
psubb
inc
sbb
adc
das
inc
mov
fs
mov
mov
inc
inc
mov
push
rcl
jne
add
push
dec
and
adc
add
and
jge
hlt
jle
mov
jne
push
lock
and
dec
mov
mov
inc
mov
test
scas
push
add
nop
jg
rcrl
lods
test
xchg
movsb
cmpsl
clts
sbb
pushf
cwtl
xchg
sbb
nop
mov
test
sbb
jo
push
sbb
fs
sbb
pop
pop
push
sbb
push
dec
dec
pusha
nop
inc
push
inc
inc
cmp
add
fsubrl
sub
adc
bnd
loopne
mov
or
add
or
sub
dec
rcr
ret
jl
adc
pop
pop
sbb
or
push
xor
and
sub
sbb
adc
cmp
and
add
sbb
inc
lret
sub
inc
xorb
push
out
xor
lock
jns
fdivr
lock
push
push
xchg
insl
dec
call
add
xor
push
push
adc
or
mov
jnp
push
dec
dec
sub
mov
mov
or
fwait
or
push
sbb
adc
mov
mov
lea
adc
rorb
inc
shlb
dec
in
mov
aam
repz
push
cmp
xor
out
out
add
adc
inc
push
mov
or
mov
out
mov
addr16
psrld
add
push
pop
dec
scas
pop
rcrb
pop
clc
daa
out
xor
addl
mov
jnp
add
inc
jns
daa
adc
add
cmp
inc
outsl
insb
test
les
nop
pop
or
and
or
push
and
mov
inc
cmpsl
xchg
movb
jmp
iret
add
aam
test
cmp
out
cwtl
les
mov
clc
add
or
or
add
or
cmp
lea
sbb
divl
es
jmp
mov
add
dec
in
mov
jl
inc
cltd
sbbl
sub
jecxz
mov
rorb
es
sbb
sbb
xchg
test
mov
cltd
cmp
or
dec
dec
popf
popf
insb
jns
and
lods
insl
inc
inc
cs
or
or
sbbb
xor
dec
imul
jmp
xchg
xchg
iret
hlt
inc
push
sub
or
pop
mov
mov
pop
sbb
xchg
mov
inc
cmp
dec
mov
ret
mov
aaa
pop
inc
push
mov
jecxz
push
ret
push
jo
mov
push
push
jae
andl
pop
outsl
inc
push
pop
lret
popf
or
mov
pcmpgtb
xor
push
addb
popa
aaa
push
pop
add
sub
dec
push
push
add
mov
ret
sahf
loopne
pop
jb
cmp
outsb
in
inc
or
daa
insl
add
and
push
and
dec
xchg
push
xor
or
jecxz
jle
data16
out
arpl
pop
add
push
mov
lahf
cltd
mov
icebp
or
push
fimuls
cmp
mov
xchg
or
cld
push
pusha
inc
mov
popa
mov
adc
js
push
mov
jg
push
aaa
addl
xor
add
mov
push
jnp
pop
movsb
xchg
jbe
xor
ret
cmp
mov
scas
mov
jne
daa
and
add
cs
jl
add
inc
inc
popa
test
addl
jb
fwait
mov
into
add
jnp
and
pop
adc
inc
add
mov
xor
sbb
test
dec
mov
inc
sti
xchg
or
add
jbe
inc
arpl
in
fstl
imul
xor
push
xchg
inc
into
mov
jmp
in
movsb
dec
clc
sbb
mov
or
push
push
pop
orl
pop
pop
pop
pop
or
enter
pop
xor
and
and
and
dec
orl
dec
dec
dec
dec
or
enter
dec
xor
and
and
and
cmp
cmp
cmp
xor
and
and
and
and
sub
sub
sub
xor
and
and
and
and
sbb
sbb
sbb
xchg
ret
daa
push
loope
leave
leave
pop
add
mov
cmpsb
mov
adc
insl
das
pop
dec
popa
dec
pop
pop
loopne
push
push
add
or
inc
jb
push
sub
adc
lods
nop
jns
jae
sbb
test
mov
adc
pop
cwtl
or
xor
pop
inc
xor
adc
imull
or
dec
or
sbb
sbbl
push
or
cmc
and
xor
xchg
ds
lock
pop
dec
rolb
adc
cs
gs
mov
cld
shlb
daa
push
add
aam
fsts
gs
xchg
outsl
push
aas
aas
jo
sub
sahf
or
sti
jno
adc
data16
xchg
decl
push
jb
outsl
data16
inc
add
scas
fs
add
sub
mov
adc
dec
sbbb
hlt
inc
jno
decl
xbegin
push
data16
icebp
or
inc
scas
mov
mov
call
lock
mov
insl
dec
inc
inc
les
mov
jae
nop
das
pop
add
inc
xor
pop
je
bswap
xlat
add
inc
andb
or
cltd
or
icebp
unpcklps
inc
lea
dec
bound
jne
sub
xchg
xchg
mov
add
sub
or
dec
push
xorb
pop
js
inc
insb
mov
sbbb
inc
add
mov
mov
das
inc
pop
jo
jbe
push
jo
jae
add
sbb
dec
ficoml
or
push
outsl
add
addr16
outsb
jae
icebp
popf
inc
aaa
or
movsb
mov
inc
insb
or
and
pop
mov
add
std
mov
les
mov
jnp
push
push
pop
jno
setae
jns
in
or
sbb
or
dec
mov
cmp
dec
imul
int3
insb
insb
xor
insl
mov
fadds
xor
aas
pop
nop
pusha
mov
adc
pop
or
pop
gs
adc
test
ja
cmp
and
adc
cmp
and
push
add
mov
sbb
in
or
inc
call
mov
jb
fisttpl
lods
clc
jbe
xor
pop
bound
add
mov
mov
jp
rorl
out
adc
loopne
push
mov
mov
imul
xchg
popf
mov
and
aas
xchg
mov
mov
lret
add
or
je
jns
aaa
int3
mov
or
dec
lock
flds
mul
dec
add
adc
cmpsl
sbb
daa
inc
pusha
int3
je
das
shll
inc
outsl
or
loopne
dec
popf
mov
push
sbb
pop
mov
and
mov
xor
dec
xchg
leave
add
rclb
ja
mov
push
mov
mov
addb
sbb
fs
xchg
popa
add
xchg
mov
sbb
pop
jo
lods
pop
adc
add
xor
add
xchg
add
cmp
add
ffree
addr16
out
xchg
xor
xor
popa
loope
rcrb
movsb
lea
popa
mov
test
pop
mov
adc
out
fstpl
or
push
repnz
out
adc
pusha
push
inc
push
arpl
mov
fadd
adc
sbb
dec
jmp
dec
inc
fs
and
xor
das
jbe
xchg
in
call
push
pop
sub
adc
inc
mov
mov
mov
push
rcr
jne
repnz
inc
and
mov
fs
inc
stc
push
inc
sub
imul
push
pop
mov
pop
inc
iret
push
pop
inc
push
insb
add
dec
call
test
lods
dec
push
leave
iret
rorb
mov
sub
adc
pop
ret
lds
and
add
popa
add
fcoml
add
in
call
pop
pop
in
or
stos
push
lods
push
mov
or
pop
dec
call
loopne
repnz
sub
pop
inc
inc
fiaddl
jp
sub
add
sti
cmp
cmp
add
push
in
inc
add
cli
cmp
hlt
push
and
or
nop
dec
roll
xor
mov
gs
push
mov
cmp
sbb
in
add
les
xor
cmp
out
xchg
les
cltd
or
add
leave
leave
leave
es
addr16
into
mov
lods
popa
jmp
or
mov
or
push
sbb
push
xchg
shlb
add
push
mov
and
subb
dec
or
outsl
push
les
and
pop
push
jne
lds
and
mov
test
add
dec
inc
in
outsl
inc
outsl
js
cmp
lds
add
and
cmp
sbb
add
xor
and
je
lock
pop
pop
sti
jb
repnz
add
ja
xor
push
pusha
xchg
or
jo
lock
push
ds
xor
cmp
push
xor
je
pop
clc
jge
add
sbb
fwait
xor
cmp
jne
pop
es
flds
popa
jb
repnz
cmp
inc
aam
int
push
les
test
imul
pop
cmp
repnz
xsaves
pop
xor
test
js
cmp
in
pop
mov
faddl
add
mov
jns
sbb
adc
cmp
adc
add
and
enter
adc
incb
and
xor
and
xor
fdivl
xchg
pop
cmp
cmp
add
xchg
add
sub
loop
loopne
test
mov
daa
adc
mov
test
xchg
pop
into
imul
adc
jne
or
test
jb
mov
jmp
popa
sbb
sub
jmp
adc
pop
add
jbe
lret
pop
or
rcrb
pop
or
xchg
mov
sbb
mov
lods
aaa
pop
add
adc
dec
pop
dec
add
nop
outsl
mov
pop
push
test
adcb
loopne
or
sbb
adc
or
or
movsl
out
adc
insb
arpl
rorb
or
or
xchg
out
aas
ds
sbb
inc
xchg
imul
xchg
je
jbe
or
scas
add
hlt
jno
adc
out
jno
dec
sbbl
push
ljmp
in
dec
outsl
inc
orb
mov
adc
xchg
mov
jge
push
mov
sbb
or
jnp
jo
or
pop
cmpsb
and
or
movsl
imul
loopne
mov
outsl
jo
in
cs
jmp
inc
fcom
dec
es
inc
add
imul
movsb
ss
inc
fsubs
nop
inc
cmpsb
or
loopne
fstpt
pushf
mov
dec
xor
rolb
jb
sbb
xor
cmp
dec
cmc
and
ss
mov
push
into
push
or
pop
sahf
in
packuswb
in
adc
sub
mov
aaa
adc
cld
adc
shll
gs
out
nop
movlhps
pop
shrb
sub
fs
sbb
sub
test
sbb
repnz
sbb
sbb
repnz
loope
aam
sbb
sub
sbb
aas
and
idivb
and
lret
repz
rorl
dec
fidivrl
push
clc
xlat
pop
or
test
jb
push
shlb
or
sub
push
inc
rcrl
pop
add
push
imul
push
adc
adc
fs
imul
xor
mov
test
inc
add
stos
push
in
fcomps
adc
push
mov
cmp
pop
in
loopne
movsb
rolb
push
data16
lret
popa
add
add
mov
daa
or
gs
add
push
push
jnp
add
adc
or
inc
popf
or
pop
cmp
test
or
inc
or
or
sbb
mov
adc
or
mov
cltd
rolb
arpl
lods
pop
mov
mov
xchg
pop
inc
mov
pusha
xchg
or
xor
pop
add
mov
les
dec
ljmp
cwtl
or
gs
out
or
push
or
lods
xor
pop
mov
aad
add
popa
sbb
xor
xchg
xchg
outsl
or
pop
pusha
add
inc
add
cmp
push
mov
xchg
mov
movsb
or
mov
mov
adc
adcl
gs
inc
push
testb
icebp
jns
bndstx
cli
cltd
jne
je
sbb
pop
dec
data16
aas
adc
or
pop
call
fdivr
insb
and
scas
xorb
add
mov
subl
cld
bound
sbb
sbb
popf
add
or
loopne
inc
roll
nop
popf
lcall
popf
inc
pop
mov
or
scas
in
mov
and
inc
leave
jnp
add
push
sbb
nop
inc
dec
movsl
in
fs
je
ljmp
dec
gs
cmp
test
push
insb
pop
jg
cmc
dec
or
in
fldenv
xchg
or
add
outsl
nop
aaa
add
add
mov
pop
mov
and
out
or
or
push
add
dec
sub
daa
insb
fwait
sub
xchg
addr16
sub
inc
sarb
dec
fmull
adc
outsl
int3
sub
mov
or
orb
cmp
and
dec
aaa
jne
and
or
sbb
stos
mov
sbb
mov
xor
push
arpl
lods
lcall
xchg
and
adc
popf
nop
pop
dec
flds
in
rcr
scas
mov
pop
bswap
hlt
adc
adc
lcall
int3
adc
test
imul
addr16
pop
cmp
imul
pop
aas
adc
mov
inc
inc
jl
inc
or
pop
lcall
cmp
lods
xor
out
add
push
cmovne
mov
js
add
sub
pushf
and
dec
addr16
fstps
xchg
ret
dec
pusha
mov
pushf
shrb
outsb
mov
fisubs
lcall
inc
add
push
cmp
pop
inc
arpl
jne
sub
push
repz
fstpt
mov
orb
repz
dec
fstpl
stos
fidivs
addr16
or
insb
xchg
ficoms
fistps
adc
adc
cmpsb
push
loopne
pop
ds
imull
test
iret
mov
sbb
push
sub
repnz
jns
int
loop
and
and
data16
lcall
stos
jmp
cmp
and
scas
fs
sbb
cmp
and
push
out
enter
adc
cmp
or
js
and
adc
in
add
inc
dec
in
add
push
ret
rcll
or
sub
mov
or
shr
shl
cvtps2pi
or
and
in
add
inc
push
in
add
leave
sub
and
aas
xchg
pmulhuw
and
inc
in
add
or
add
lods
and
das
or
pop
leave
pop
mov
push
sbb
sbb
hlt
dec
subl
jl
adc
inc
add
adc
addb
stos
push
mov
sbb
sarb
daa
mov
shl
and
add
test
mov
loopne
xor
in
add
dec
pop
in
les
nop
mov
xchg
pop
enter
and
leave
add
add
inc
sbb
mov
pop
or
and
adc
adc
scas
push
add
add
bound
jecxz
lret
push
or
lds
daa
or
mov
mov
push
movb
inc
loope
clc
xor
push
in
or
jb
mov
jo
inc
hlt
mov
push
movsb
loop,pt
in
add
addr16
lods
push
dec
sbb
or
inc
in
or
mov
or
push
sbb
or
or
sbb
adc
and
sub
xchg
pusha
or
gs
xor
add
xchg
add
pop
arpl
push
add
jp
push
or
ja
pop
jp
stos
adc
push
mov
push
dec
sbb
sbb
mov
mov
inc
xor
pop
insb
mov
pop
jg
imul
cli
add
cmp
xor
push
mov
sbb
pusha
xorl
jb
add
out
sbb
cmpsb
imul
neg
inc
pop
and
mov
xchg
ja
out
mov
ljmp
dec
js
notb
add
xchg
add
add
push
push
xor
pop
pop
or
fisubrl
push
test
ss
sbb
mov
mov
stos
add
orb
cld
mov
inc
in
sahf
add
in
xor
xor
and
adc
or
adc
and
jo
sbb
inc
sbb
and
adc
faddl
pusha
jge
rorb
adc
dec
call
mov
movswl
call
cmp
cmp
jmp
mov
stos
cs
out
sbb
ljmp
insb
push
test
or
pop
cld
mov
int3
testl
sahf
add
int3
ds
movups
sub
int3
or
mov
mov
sbb
or
inc
fwait
push
test
fsts
sbb
push
ja
repz
aam
pop
add
jb
pop
sbb
adc
rclb
in
int3
add
add
add
inc
cwtl
jl
xor
fs
dec
addr16
or
add
nop
add
andb
test
inc
enter
es
stc
mov
out
pop
out
xor
std
dec
fisubrs
or
jmp
pop
jp
lahf
pushf
fcompl
popf
mov
sbb
pminub
fimuls
ret
gs
cltd
add
pop
adc
and
cmp
adcl
adc
xor
xchg
movsl
xchg
add
jg
and
ret
xor
push
mov
or
push
and
jmp
pop
mov
dec
xor
add
add
dec
add
add
test
sub
cmp
cmpsb
in
mov
or
nop
dec
or
bound
insb
mov
mov
ljmp
inc
sahf
fldl
jmp
int
sahf
loopne
aad
in
add
xlat
jl
imul
nop
push
adc
push
mov
mov
or
int
or
jge
repnz
movsb
add
and
test
jo
insb
mov
les
mov
sub
and
jae
stos
es
jno
mov
movsb
cwtl
and
out
mov
mov
aad
out
adc
cmp
fs
dec
mov
popa
dec
lcall
mov
addr16
outsl
mov
mov
jo
mov
pop
push
sub
sub
je
pop
repnz
repnz
test
je
push
push
sub
ja
daa
mov
and
xor
daa
shrl
and
adc
mov
push
repnz
sub
rclb
mov
add
or
sbb
sbb
inc
lea
mov
iret
mov
or
jb
loopne
in
mov
mov
inc
inc
push
xor
lea
and
aad
loop
stc
das
dec
shll
xor
xchg
xor
adc
test
push
jne
pop
imul
sti
lret
or
add
jb
repz
inc
xchg
cmp
cmp
test
add
cmpsl
add
add
movsb
pop
idiv
inc
loopne
or
or
call
orb
lods
pop
test
pop
imul
add
push
rolb
lods
xor
cld
shlb
adc
inc
adc
cmp
pop
stos
sbb
lret
and
mov
hlt
sub
adc
enter
bnd
dec
cmc
add
xchg
or
cmp
add
push
push
sbb
pop
sti
and
cmp
fcomip
adc
arpl
sti
xor
andps
or
test
fimuls
aam
add
adc
add
inc
mov
dec
dec
mov
invd
imul
jo
jno
adc
sub
add
adc
in
sbb
or
sub
sbb
and
cmc
add
sbb
test
pusha
nop
cmp
push
rcr
test
es
push
mov
lahf
test
mov
test
inc
add
adc
mov
sbb
inc
fs
pusha
add
les
dec
enter
ja
rcll
jl
imul
lock
or
pop
test
push
pop
or
filds
stc
sub
movl
pop
or
bound
adc
jb
push
out
jl
lods
or
lea
out
test
sbb
jo
xchg
adc
inc
cmp
push
sbb
jo
clc
pop
xchg
and
xchg
je
popa
or
mov
stc
push
jg
push
jecxz
adcb
les
ds
add
and
ljmp
ja
xchg
jbe
insl
lret
in
jl
xchg
push
idivb
insl
pop
jg
xchg
jnp
dec
aam
stc
lcall
subb
push
sub
push
add
mov
or
in
repnz
cltd
jno
adc
cli
cmp
pop
sub
and
mov
bswap
push
jns
addr16
or
inc
sbb
sbb
adc
dec
outsl
cld
ja
xchg
mov
or
enter
or
cld
shlb
test
cmpsl
push
daa
mov
dec
inc
and
push
pop
test
xchg
dec
pop
cld
shrb
test
adc
xchg
and
shlb
leave
inc
and
sbbb
xchg
push
cld
shrb
nop
cld
shrb
mov
cltd
clc
and
add
out
test
shl
rcl
dec
pop
ret
mov
roll
outsb
out
sbb
or
cmp
inc
loope
leave
in
sub
jne
fcmovnb
test
std
test
mov
mov
push
mov
test
nop
movsb
push
insb
mov
shlb
in
lret
xor
cmp
pop
shrb
lcall
inc
push
test
inc
repnz
mov
lcall
push
jmp
js
xchg
jg
mov
or
and
andl
sbb
test
xchg
adc
mov
sbbl
ljmp
in
push
ds
fwait
lea
jo
or
add
jno
dec
push
xor
sbb
das
add
mov
les
enter
jne
orb
mov
gs
inc
nop
adc
ja
test
inc
sub
cmp
add
insb
rcrl
jnp
or
pushf
clc
rorb
push
push
adc
lcall
adc
cmp
xor
xor
add
cmp
ss
out
insb
jo
popa
add
or
scas
adc
movlps
leave
mov
add
je,pn
imul
movsl
adc
push
ja
loope
push
xor
or
pop
add
pop
or
pop
call
pop
add
inc
xchg
xchg
cmp
ja
mov
in
cmp
cs
je
and
inc
push
stc
into
test
popf
xor
lahf
lock
movsb
sarb
jb
call
mov
add
mov
push
int3
mov
mov
mov
xchg
xchg
pop
popf
add
lods
inc
sar
adc
cmpsl
xchg
push
and
imul
cmp
popa
xor
and
jno
mov
jae
shlb
int
xor
or
in
clc
adc
xor
adc
sub
adc
mov
icebp
add
push
aaa
xor
jo
cmpl
lcall
add
cmpl
setle
lret
daa
les
divb
and
cmp
add
enter
bswap
imul
or
push
ds
cmpsl
shlb
test
pop
lds
push
call
in
mov
xor
push
mov
xchg
in
dec
pop
xchg
in
mov
jns
pop
mov
sub
xor
adcl
insl
aad
pop
bound
sbb
enter
mov
loop
mov
mov
inc
insb
ds
adc
daa
les
pop
and
and
and
ret
fstpl
popa
arpl
push
cmpb
gs
daa
push
or
push
inc
mov
xor
xchg
and
add
cmp
loope
and
les
test
in
add
cmp
push
adc
pop
xchg
nop
subb
and
dec
pop
sub
cmp
rorb
pop
dec
rorb
stos
in
enter
or
add
in
addr16
mov
push
adc
decb
push
daa
push
or
xchg
add
or
or
xchg
cmp
add
shll
je
clc
cltd
fistps
popf
sbb
or
sbb
outsl
cltd
fdivrs
lret
scas
pop
imul
arpl
xchg
cmp
leave
pop
xor
movsl
add
jno
jmp
pop
adc
push
lahf
dec
cmc
pop
cmpsb
popf
nop
pop
or
enter
adc
mov
pop
nop
sbb
mov
pop
and
xchg
add
sahf
sub
or
xchg
nop
or
mov
adc
lahf
jo
add
aaa
or
loope
cmpsb
xlat
enter
mov
or
lahf
sbb
fmulp
testb
pop
or
mov
adc
mov
pop
or
iret
cmp
xchg
jg
cmp
add
mov
daa
mov
add
cltd
pusha
bsf
mov
mov
adc
push
mov
imul
push
hlt
mov
inc
dec
sahf
add
popa
push
test
in
jb
and
pop
or
stos
psraw
daa
pop
or
imul
in
sbb
jb
xlat
or
mov
push
add
pop
add
or
mov
push
mov
cmp
mov
inc
pop
leave
mov
sbb
or
in
pop
pop
lahf
push
mov
add
das
mov
push
enter
push
mov
or
scas
sub
or
cmpsl
fs
and
mov
mov
nop
scas
add
orb
push
mov
in
and
mov
insb
cmp
pop
pop
mov
or
in
fistl
scas
test
add
subb
mov
jne
push
shl
out
jg
push
ja
inc
insl
jo
push
outsb
addr16
dec
jo
addr16
mov
push
imul
push
adc
mov
inc
sbb
negb
rcll
push
or
mov
push
cli
out
ss
pushf
in
aas
mov
pushf
mov
dec
mov
roll
outsl
enter
add
xchg
out
and
out
aam
add
ret
inc
lock
pop
repnz
in
mov
or
cs
inc
clc
sub
xor
enter
xor
mov
daa
cmp
or
dec
push
cmp
push
push
push
clc
cmp
add
mulb
dec
sbbl
popf
cmp
rcrb
pop
adc
adc
movnti
adc
sbb
sbb
xchg
lods
inc
ret
adc
inc
push
and
mov
nop
push
repnz
push
enter
add
in
es
mov
mov
stos
or
push
pusha
pop
pop
int3
push
jne
mov
add
pop
xor
push
mov
out
notb
dec
add
les
add
mov
pusha
mov
stc
push
add
or
mov
enter
adc
and
push
ret
xlat
adc
loope
imul
mov
cmp
jnp
adc
sub
pop
inc
sbb
insl
sbb
add
imul
add
out
adc
int3
inc
shrl
cmp
or
sbb
adc
daa
xorl
fstps
fs
sub
fimull
pop
scas
jno
inc
cmp
xorb
cwtl
add
pop
lods
add
push
mov
and
dec
pop
aam
imul
or
sub
pop
push
shll
mov
jnp
cmp
rcrb
or
jns
or
and
and
add
push
fmuls
mov
add
cmp
jbe
xor
js
push
push
mov
add
sbb
inc
mov
lods
pop
add
arpl
jg
pusha
sub
xor
test
loop
pop
jecxz
push
push
mov
addr16
pop
repnz
inc
repnz
push
cmp
add
cmp
adc
push
pop
movl
pusha
sbb
push
mov
mov
xor
data16
adc
xor
inc
dec
jne
adc
adc
mov
lea
pop
rolb
test
push
inc
aas
gs
cmp
push
fsubs
subb
add
imul
aad
adc
loopne
in
shlb
sub
cmp
adc
push
pop
jne
pop
push
add
adc
mov
leave
pop
jne
cmp
push
ja
and
jns
mov
adc
mov
mov
fisttpll
sbb
sbb
and
xchg
movsb
insl
add
incl
and
add
pusha
sti
ss
lods
or
or
pop
mov
aam
repnz
js
pop
ret
in
sbb
sbb
std
add
js
mov
fdivl
mov
cmp
jne
mov
lds
xor
es
hlt
sub
ja
pop
push
mov
sbb
stos
call
int
and
push
pop
add
adc
xchg
push
mov
ret
mov
rcrb
out
rol
pop
lds
addb
hlt
dec
rolb
mov
leave
xchg
popa
xor
sbb
in
mov
adc
cmpsl
mov
push
xor
movsb
mov
jae
rorb
rep
or
inc
xchg
incl
cltd
pusha
inc
xchg
adc
rol
or
add
das
movsb
mov
cmpsl
add
cmpb
cwtl
test
arpl
and
push
dec
sbb
mov
js
repz
mov
push
or
jbe
xchg
nop
mov
or
sbb
fistpll
loopne
popf
adc
sbb
push
mov
xchg
fnstcw
aaa
mov
addr16
fwait
pop
rolb
lahf
cmp
jg
mov
in
sub
or
pusha
sub
mov
jbe
adc
add
adc
add
sahf
or
dec
inc
push
popa
adc
aaa
or
jb
jbe
and
push
fcoms
dec
mov
imul
jns
out
in
push
or
jne
ja,pt
mov
dec
push
jle
aaa
inc
inc
in
and
popa
scas
push
bound
imul
aas
push
pop
sbb
xor
adc
pop
and
cmpsl
pop
pop
shlb
pop
cmp
mov
ja
cld
insb
nop
or
mov
ja
xchg
add
jno
out
mov
jns
push
outsb
mov
or
dec
adc
xchg
pop
xor
ljmp
adc
inc
fcoms
dec
dec
aas
insl
ja
xor
loop
cltd
push
or
ret
aad
sbb
push
inc
sahf
jo
xchg
jo
push
mov
xor
adc
stos
xorl
fimull
cmovg
xchg
add
mov
out
dec
enter
dec
push
or
push
fcmovu
mov
fs
imul
pop
fidivl
inc
xor
add
aam
jne
je
or
lcall
add
or
ret
or
or
jnp
mov
inc
punpckhwd
or
or
dec
push
mov
cs
aas
adc
push
inc
or
sub
out
adc
or
outsl
inc
inc
and
push
or
or
daa
dec
jne
xchg
jb
sbb
daa
or
pop
add
xor
inc
mov
out
push
stos
add
pop
ja
jmp
add
mov
pop
add
and
es
inc
insl
add
add
and
movsl
or
jge
fiadds
stos
cld
ret
push
mov
xchg
push
in
ret
jl
xchg
int3
xchg
pop
cmp
dec
iret
insl
push
push
adc
ret
roll
xchg
push
pop
pop
cmp
sub
mov
mov
push
lods
sbb
scas
inc
sub
push
and
push
cmp
lcall
adc
scas
mov
pusha
push
or
lahf
cs
inc
jle
adc
dec
push
push
push
ss
add
push
insb
pusha
pop
mov
mov
dec
cmp
inc
inc
xor
lcall
mov
jmp
dec
jp
mov
or
inc
dec
dec
xor
xor
dec
loopne
inc
add
push
fwait
loopne
mov
push
inc
push
push
jnp
push
dec
inc
or
push
test
das
push
xor
es
pop
adc
pop
imul
inc
pop
mov
cli
iret
fnstenv
dec
sub
push
mov
scas
sub
and
mov
fildl
sti
mov
and
push
inc
or
mov
add
inc
stos
sbb
xor
xchg
mov
cmpl
jg
jl
orb
mov
xchg
in
add
ljmp
push
mov
push
leave
and
jmp
push
add
cmpxchg
pusha
sub
inc
fdivl
punpcklwd
sub
jmp
or
jmp
adc
pusha
insb
add
aaa
fmulp
adc
and
sbb
mov
xchg
test
mov
or
sub
leave
aam
sub
fwait
cli
es
sbb
add
test
sbb
push
out
and
outsb
and
ss
jg
sbb
jl
add
and
dec
add
add
cmp
ret
das
jp
idivb
fs
sahf
sti
push
xchg
popf
subl
je
jne
sbb
cmp
mov
sub
insl
das
jne
cmp
shrl
lock
mov
lea
cli
xlat
xorb
enter
outsl
movsl
sub
lret
jae
movzwl
sarb
push
sbb
enter
cltd
or
xchg
mov
adc
test
jno
mov
dec
mov
nop
dec
ds
sbb
mov
cs
xor
sub
push
lcall
sub
sbb
add
dec
test
add
adc
lahf
jmp
adc
fcmovne
insb
nop
pop
sbb
or
hlt
inc
and
xchg
or
lods
xchg
std
adc
cmp
push
ret
sub
ret
inc
add
mov
pop
ret
pop
and
iret
adc
pop
lods
mov
xchg
add
les
and
clc
pop
jno
subb
cmp
adc
adc
into
jno
sub
or
dec
ret
stos
cmpl
daa
test
aad
notl
add
test
int3
push
pop
push
push
or
std
inc
stos
add
add
ds
subb
cmp
push
sbb
sub
sbb
push
push
mov
push
pusha
cwtl
fcomps
arpl
cltd
ss
int3
mov
xchg
pop
xlat
dec
and
es
mov
pop
add
sub
aaa
push
mov
and
in
nopl
mov
push
jo
push
lcall
ja
and
es
adc
pop
and
ret
jp
pop
cmp
paddd
or
repnz
xor
test
and
push
fistpl
andl
dec
push
pop
fstl
dec
xchg
add
out
push
dec
xor
mov
fsubrs
jnp
dec
pop
xor
push
xor
neg
test
js
addr16
and
cltd
xchg
mov
jbe
insb
add
in
xchg
insb
mov
pop
and
sbb
je
or
pusha
add
popa
in
fsts
fcmovnu
movsb
jo
xchg
inc
and
andb
add
icebp
arpl
cmp
add
adc
sbb
outsl
sub
add
push
pushf
and
push
jne
pmulhuw
mulb
ret
imull
add
dec
mov
call
mov
jo
sub
jp
dec
les
clc
in
lea
add
mov
pop
pop
subl
lock
in
mov
loopne
add
push
fimull
push
addb
lret
push
sbbl
mov
mov
mov
jbe
test
das
out
mov
push
cmpb
std
pop
inc
xlat
mov
push
push
add
push
cmp
inc
cs
or
xor
pop
addb
or
lods
xor
inc
dec
sbb
push
and
shll
inc
push
jle
shlb
sbbb
movb
lahf
mov
jb
add
mov
daa
nop
inc
xor
xchg
xchg
pop
add
xor
pop
and
xor
push
sbb
xchg
ret
mov
inc
xor
pop
dec
add
enter
xchg
mov
xor
and
push
push
dec
pop
pusha
push
iret
in
adc
rolb
sub
and
xor
ljmp
test
mov
inc
add
pop
imul
es
dec
sub
add
xor
cwtl
push
popf
or
push
lock
inc
mov
add
les
sahf
mov
ja
xor
pop
imul
or
insb
out
push
jb
xor
addl
hlt
lahf
cmp
divb
push
push
std
push
nop
addb
call
push
or
mov
aaa
jl
cmp
adc
les
insl
lods
mov
xchg
cmp
and
stos
in
or
mull
add
addr16
adc
movsl
mov
sbb
test
add
inc
push
addr16
push
ret
sub
movl
inc
pop
xor
pop
stos
enter
ljmp
push
cmp
dec
cmp
and
jns
xor
test
es
xor
push
fisttps
mov
push
in
inc
cmpsl
mov
addl
adcb
jecxz
push
or
adc
inc
inc
sub
lds
divb
xor
call
shlb
pop
inc
push
xor
cli
pop
jl
xor
jo
mov
push
shrb
xchg
xor
adc
mov
mov
xor
sti
mov
jmp
sub
jmp
ja
mov
ja
pop
adc
popf
sub
and
sub
movsl
in
add
lods
xchg
push
clc
imul
jo
sbb
out
fcoms
xchg
movsl
and
ret
xor
cltd
mov
cmp
mov
aad
sub
shll
jns
pop
lahf
adc
xchg
mov
push
in
sbb
incl
sbb
in
and
out
dec
add
or
mov
and
sbb
push
xlat
push
mov
cmp
gs
jmp
fistpll
jae
fcomps
test
nop
add
dec
inc
xchg
ss
rorb
dec
cld
pop
xchg
mov
leave
ja
mov
movl
dec
sbb
xchg
addr16
roll
hlt
xor
inc
jns
pop
fs
add
lock
add
inc
push
push
push
add
inc
sbb
andl
nop
sbb
xchg
cmc
repnz
ret
xchg
inc
push
cmove
fs
add
xor
jno
test
xchg
add
and
add
mov
test
jae
outsl
leave
cmp
and
sbb
nop
sub
nop
mov
ficomps
xchg
movsb
pop
dec
insl
pop
or
testb
dec
fmuls
xchg
add
push
cmp
xchg
cmp
popf
add
pop
arpl
jmp
or
or
add
das
jnp
cmp
cld
mov
jae
movsb
cmp
jne
and
les
sub
xchg
fdivs
ret
push
cmpsl
les
jmp
lea
push
fisubrl
or
pusha
jo
jns
or
mov
insl
and
into
add
push
pop
loopne
imul
clc
imul
add
inc
loop
pop
mov
add
push
push
hlt
pop
ss
add
mov
in
popf
rorb
cmp
push
insl
jnp
fadds
xchg
mov
inc
xor
push
ja
mov
xor
inc
and
pop
jbe
fs
incl
daa
cmpsl
aam
mov
inc
pop
loop
loopne
fs
sbb
in
and
popl
adc
sub
aam
sbb
xchg
sub
cli
sbb
fmuls
add
cmpsb
inc
imul
dec
mov
sbb
push
cmp
cwtl
sbb
jo
dec
or
mov
pop
jb
jmp
cmp
add
mov
ds
aas
dec
mov
sbb
push
push
push
mov
cmp
or
pop
or
or
repnz
sbb
xor
testb
pop
inc
and
ret
or
or
outsb
in
test
addb
bound
or
pop
mov
fadds
rcrl
cltd
out
and
xor
mov
push
je
push
or
jo
aad
test
pop
outsl
add
mov
nop
dec
enter
and
add
popa
sbb
xchg
and
mov
push
test
popl
inc
sbb
sbb
inc
cmp
add
sub
or
loope
js
pusha
pop
push
mov
or
mov
cmp
enter
dec
xchg
enter
pop
inc
add
or
inc
cmpl
and
nop
pop
push
ja
push
iret
inc
rol
enter
test
cld
inc
jns
scas
in
or
cmp
je
scas
in
mov
and
adc
ja
clc
je
push
enter
inc
pop
push
sub
das
inc
push
nop
add
addb
jo
les
popa
adc
ret
pop
sti
mov
inc
sbb
inc
lock
sti
add
xchg
dec
cmp
lds
mov
lock
mov
loope
and
testl
fnstcw
aam
fidivl
test
loope
jae
add
and
loope
and
or
out
push
call
lea
lcall
mov
sbb
or
inc
je
add
testb
inc
rorb
adcl
test
add
out
movsb
add
adcl
mov
cmp
cmpsb
jle
cwtl
loopne
jae
or
add
push
adc
cli
adc
mov
adc
jbe
inc
subl
aaa
sbb
mov
jbe
je
movl
sub
ret
aaa
jl
sbb
popa
in
sbb
loop
pop
scas
in
sbb
push
loope
shll
mov
inc
cmp
and
rcll
mov
inc
sbb
add
nop
in
xchg
stos
pop
repnz
cmpsb
movsb
pop
add
les
add
dec
arpl
cmp
add
xor
mov
adcb
adc
nop
xlat
je
icebp
test
in
xor
call
pop
inc
mov
pop
or
inc
maxps
cmp
shlb
inc
push
call
cmp
shlb
icebp
sahf
js
push
push
push
sbb
fadd
xchg
fcompl
mov
xchg
adc
pop
add
andb
daa
mov
sub
xchg
loopne
andb
sub
orb
js,pt
mov
push
dec
push
sbb
jg
fcmovbe
and
cmp
shll
sbb
pop
xchg
cmc
decl
cmp
je
or
xchg
pushf
adc
push
icebp
inc
adc
add
push
add
iret
xor
ja
and
je
movsb
or
mov
pusha
lcall
in
push
les
pop
mov
push
inc
xor
inc
shll
or
adc
movsl
mov
es
sbb
stos
je
jge
jo
cmp
jne
or
sbb
sbb
bound
das
inc
mov
push
add
cmp
adc
std
lods
repnz
add
sbb
enter
sbb
cmp
pusha
mov
mov
add
test
cwtl
push
adc
and
mov
mov
mov
in
lds
dec
and
and
pop
stos
sub
dec
xchg
rcrb
mov
es
xor
es
adc
adc
das
lea
int3
dec
inc
imul
jo
sub
aaa
jmp
mov
inc
sub
inc
inc
movl
inc
xor
add
hlt
push
pop
mov
sbb
call
sub
inc
subb
push
sub
and
pushf
add
xor
jb
test
or
cmp
repnz
outsl
fwait
dec
cltd
imul
in
cmpsl
pop
or
out
adc
dec
mov
mov
xchg
push
fists
sbb
out
fcomps
inc
inc
mov
loop
sbb
fisttpll
fisubrl
xchg
mov
push
popl
add
dec
xor
push
lcall
daa
popa
sub
pusha
movsb
bound
rolb
in
add
add
inc
add
dec
sbb
shll
xor
add
and
mov
jno
pop
inc
lret
xchg
push
cmp
mov
ficomps
adc
mov
mov
lea
inc
mov
cmpsb
xchg
sub
stos
dec
movsb
cmpsb
xchg
in
xchg
and
inc
mov
push
and
dec
jecxz
cmp
mov
push
adc
and
and
adcb
mov
shrl
push
or
and
inc
lods
or
jp
insb
adc
ljmp
lock
jmp
jns
sbb
sub
xchg
dec
add
movsl
sbb
lods
loope
push
das
inc
ljmp
testb
pop
loopne
mov
movsl
movb
xchg
in
stos
dec
add
or
pop
repnz
sub
adc
add
punpckhdq
xchg
nop
add
fimull
pop
xchg
add
bound
fidivrl
xchg
lea
add
mov
or
xlat
and
or
mov
movb
adc
dec
filds
in
mov
adc
dec
dec
jle
mov
sub
mov
lea
lea
pop
pop
pop
pop
mov
inc
dec
jne
lret
ds
sbb
jge
adc
adc
adc
push
lods
push
rcrb
mov
add
in
push
movl
inc
xchg
or
mov
dec
js
dec
pop
fists
add
imul
stc
or
jmp
stos
out
mov
mov
cmp
or
fimull
fidivl
push
clc
movw
mov
mov
mov
loope
add
popa
ror
dec
add
jnp
xchg
mov
push
add
push
xchg
push
sub
dec
aas
sbb
ret
jbe
cmpsl
lods
test
std
fbld
test
jg
pop
mov
mov
sbb
daa
dec
fidivs
jmp
addr16
or
or
add
icebp
sbbl
sbb
add
mov
pop
add
push
mov
clc
xor
lret
lcall
pop
inc
lock
cs
movzwl
inc
or
repz
or
jo
mov
and
fadds
int3
cld
shlb
cmp
cmp
add
mov
push
cmp
inc
adc
jns
pop
fcomps
daa
dec
and
mov
mov
adc
cwtl
dec
mov
add
movups
mov
push
add
jo
mov
dec
mov
inc
nop
mov
sub
or
jg
ss
push
in
inc
aas
shrb
mov
mov
inc
sbb
inc
push
outsb
push
dec
in
adc
push
rolb
xor
outsl
in
or
test
push
push
sarb
add
cmp
adc
dec
lds
mov
inc
js
push
xor
add
jge
insl
and
adc
or
jecxz
add
lds
hlt
and
fiadds
jp
cmp
cmp
popf
in
inc
xchg
sub
inc
push
fwait
cmp
and
ret
sbbb
adc
push
shrl
and
hlt
adc
inc
inc
adc
xchg
pop
lock
loop
pop
cld
push
push
enter
push
dec
mov
pop
andb
add
push
rcrl
mov
cwtl
sbb
mov
loop
or
icebp
adc
pushl
sti
cmp
sub
jmp
xor
sub
sub
xor
pop
add
stc
ja
lahf
or
jmp
shr
test
push
add
test
xchg
xchg
dec
mov
dec
mov
sub
dec
rorb
inc
pop
testb
pop
mov
outsl
pop
dec
jo
or
and
rorb
arpl
clc
jg
test
rolb
dec
cld
jg
cmp
push
gs
das
cmp
jg
invd
or
mov
stc
push
stos
push
jae
mov
lods
sbb
loopne
imul
nop
lahf
arpl
lock
inc
imul
aam
mov
fiadds
or
jge
xchg
movsl
stos
adc
or
inc
add
bound
rcll
mov
shlb
or
lahf
add
dec
cmp
loopne
adc
cmpsl
pop
xchg
sbb
scas
aaa
ljmp
jge
sub
sub
or
test
push
jno
mov
rcl
inc
sti
lock
scas
dec
xchg
xchg
mov
sub
jge
and
mov
int3
ret
ret
popa
jg
jne
jg
or
jl
push
inc
lea
lods
orb
adc
add
mov
cli
es
dec
jae
test
rorb
sub
adc
add
or
jbe
loope
jg
cmp
cmp
cmp
cmpsb
mov
negb
aam
shrb
pop
ss
insb
in
add
sub
adc
pop
pop
cs
adc
sarb
xor
pop
imul
jp
xchg
int3
lcall
shlb
xchg
sbb
ja
jmp
mov
mov
insl
mov
push
mov
sub
mov
inc
nop
and
rolb
movsl
cmp
mov
add
stc
mov
mov
push
mov
rcll
jmp
push
or
mov
or
and
test
aad
movlps
pop
roll
mov
nop
aaa
ret
insl
pop
or
ljmp
lock
fcoms
mov
popf
or
psrlw
mov
cmpsb
imul
popa
adc
xor
dec
and
pop
lods
inc
orl
push
lret
clc
call
test
aas
mov
or
inc
xchg
sbb
jb
adc
or
dec
imul
es
and
add
fistps
pop
sub
dec
or
jg
lock
inc
outsl
jb,pt
jmp
cmc
push
enter
sub
and
mov
jae
jmp
adc
outsl
lock
test
adc
insb
and
orl
lea
pop
out
cmpsl
add
push
loopne
or
and
push
sub
mov
push
pop
xor
mov
or
mov
ljmp
cmp
pusha
stos
out
adc
add
pop
lcall
mov
xchg
popa
loop
movsl
inc
sub
sti
push
ret
aad
sarb
aas
mov
pop
mov
cmp
hlt
push
xchg
xor
sbb
xchg
ja
movsb
push
in
rcr
sbb
inc
setbe
clc
pop
xchg
xchg
sbb
mov
lret
shlb
js
lea
cmp
jecxz
mov
rclb
cmp
lahf
xchg
fidivrs
pop
and
fsubl
or
lods
xor
and
push
sbb
mov
cmp
in
lahf
pop
mov
adcb
into
push
mov
pop
in
hlt
int3
mov
add
add
es
push
push
fisubs
call
pop
push
pop
hlt
loopne
fmul
xor
jecxz,pt
addr16
fsubp
loopne
and
pop
or
pop
pop
js
push
add
js
test
mov
fmuls
fiaddl
mov
imul
push
lods
or
lods
rol
out
adc
mov
or
mov
jb
jmp
mov
addb
mov
add
sbb
inc
or
in
lret
subl
int3
hlt
ret
out
sub
push
fcoml
sub
lock
push
add
jbe
xor
mov
add
movb
add
stos
andb
sahf
fsubs
and
push
push
add
sub
mov
add
mov
js
ret
xor
nop
and
arpl
dec
push
cmp
aas
pop
xchg
add
in
or
popa
inc
push
and
push
add
or
push
dec
aas
test
or
sub
negb
je
pop
adc
fstl
out
cmc
pop
pop
cmp
int3
daa
fiadds
loope
mov
dec
hlt
jo
enter
rorb
push
test
add
cmp
add
pusha
lods
lahf
fsts
das
adc
lret
sbb
mov
lods
jno
in
push
jbe
pop
sub
xor
inc
push
inc
fmul
not
push
push
adcb
adc
mov
dec
xor
or
pop
gs
cwtl
in
imulb
lahf
push
mov
sbb
push
enter
mov
cmpsl
mov
cwtl
xchg
xchg
cs
filds
jbe
inc
popa
ja
rorl
push
xor
rol
cmpsb
leave
rolb
xchg
es
add
orl
and
or
or
add
cmp
jae
xchg
mov
inc
inc
add
sub
popf
cmp
arpl
add
ret
xchg
mov
lock
add
aam
shlb
xor
bound
daa
ret
dec
mov
pavgb
push
imul
ret
andb
mov
rclb
mov
lea
gs
adc
add
test
push
push
sbb
in
xor
or
iret
ret
inc
loopne
cs
add
sub
or
xor
jae
or
shlb
push
or
stos
pop
jo
mov
mov
xlat
fs
imul
lods
mov
pop
andl
sub
pop
in
or
sub
push
fcoml
pop
mov
and
in
aad
ror
mov
jb
clc
add
lcall
mov
mov
data16
inc
sahf
inc
ss
clc
fs
cmpsl
jns
or
hlt
shl
sarl
js
fs
sbb
mov
cmpsl
jns
out
in
movsb
add
call
int3
inc
call
mov
add
into
adc
jno
sbb
scas
add
insl
mov
daa
and
test
shrb
xchg
fisubrl
cmpsl
lret
and
popa
cmp
jle
mov
add
pusha
rorb
enter
xchg
test
add
ja
pop
or
pop
mov
jecxz
cltd
lea
mov
xchg
mov
jecxz
mov
sub
xor
popa
imul
mov
xor
xchg
inc
or
rcrb
pop
and
cmpb
imull
xor
cmp
or
cs
mov
addr16
inc
pop
int
and
add
loopne
push
add
fildl
into
push
rclb
dec
dec
push
inc
mov
imul
or
daa
or
mov
adc
inc
dec
and
das
verr
xor
outsl
cmpsb
adc
rol
jae
imul
fsubrl
dec
pop
sub
pop
inc
int3
roll
add
inc
mov
push
dec
xor
imul
pop
lea
push
and
push
mov
pop
and
popa
pop
mov
rcl
sbb
mov
imul
in
or
add
adc
and
inc
psubb
cmp
fildl
xchg
mov
push
rcrb
jo
or
pop
stos
fwait
adc
sbb
pop
outsb
dec
shll
imul
dec
mov
arpl
mov
sub
sbb
loope
insb
imul
addb
pop
push
push
or
push
xlat
xor
aaa
inc
xor
xorb
imul
dec
mov
pop
aad
adc
ss
rolb
or
imul
jo
lods
or
call
pop
mov
pop
xchg
lds
push
jne
xor
jns
sbb
aad
inc
jno
rclb
adc
ss
imul
das
push
lock
pop
sbb
sahf
sub
scas
dec
push
xchg
mov
add
mov
push
mov
dec
add
mov
pop
jbe
sbb
xor
and
sbb
insb
outsl
adc
nop
or
sti
add
fcompl
xor
push
sub
xorl
pop
mov
scas
cs
or
repz
cmp
or
loop
ret
push
cmp
push
in
cmp
cmp
and
adc
dec
aaa
dec
push
push
shll
test
lock
loopne
lret
pusha
add
das
test
cwtl
push
mov
cmpb
push
sbb
aas
inc
push
and
push
and
lcall
call
inc
sbb
test
xchg
add
ja
test
adcb
pop
add
clc
cld
xchg
or
test
insb
cmp
sub
arpl
cmp
xor
pop
inc
dec
cmpsb
hlt
pmuludq
ds
mov
push
sbb
in
mov
jnp
or
adc
fcomps
les
add
or
lea
cwtl
mov
int3
dec
or
add
push
pop
insb
pop
push
xorb
add
pop
pop
subb
sbb
inc
xor
es
in
orl
dec
mov
mov
jmp
sbb
inc
xchg
movsb
aad
jl
in
pusha
popf
lret
or
adc
mov
push
mov
fldcw
mov
popf
pop
mov
sbbb
or
or
mov
pusha
jb
das
and
cli
push
add
mov
pop
repnz
pusha
popa
or
mov
jno
jbe
mov
mov
cmc
test
xchg
sbb
movsb
iret
cmp
push
fwait
jno
jno
mov
xor
dec
lea
inc
adc
and
or
in
fistpl
jb
jge
mov
cmpsb
pop
mov
pop
or
stc
nop
mov
mov
pusha
or
sub
pop
xchg
leave
popa
sbb
add
cmpsl
jge
gs
jge
jmp
push
xor
push
dec
shlb
shrb
sbb
sub
add
pop
and
and
add
enter
cmp
cwtl
jo
fisubrs
sub
mov
sbb
jo
push
or
jno
lea
rorl
addl
enter
jo
and
jp
inc
push
loope
cmp
inc
or
sbb
shll
dec
test
sub
pop
movsl
pop
push
mov
push
xor
add
sbb
mov
cmp
push
push
pushf
movsl
int3
inc
or
inc
pop
push
lds
xchg
lea
adc
clc
movb
pop
and
and
xchg
and
sub
nop
pop
loopne
std
adc
clc
mov
jb
cli
imul
daa
loope
adc
mov
push
sub
mov
and
sub
adc
add
sub
daa
repnz
shlb
sub
clc
loopne
add
and
adc
hlt
and
cmpsl
fsubs
je
popa
js
inc
sub
or
push
push
jecxz
pusha
pop
add
call
jno
imul
dec
adc
adc
pusha
sub
cmp
arpl
test
push
adc
sub
aad
add
mov
pop
daa
dec
add
inc
push
xchg
or
clc
jecxz
ja
xor
shlb
push
fsubrp
loopne
cmpsb
inc
push
std
push
into
adcb
cwtl
push
xor
fmul
inc
addr16
dec
sbbb
mov
add
call
inc
pop
xchg
add
add
xchg
push
mov
insb
shl
movsb
sub
adc
in
js
mov
and
sub
pop
popa
jne
dec
mov
fs
sbb
jp
aam
int
mov
adc
adc
in
or
adc
mov
idivl
dec
jmp
movzwl
ret
sbb
out
xchg
pop
das
rcll
out
daa
fsubrs
rdpmc
sbb
jne
adcl
add
fdivrl
cmp
mov
push
xor
and
movsl
data16
hlt
and
mov
cltd
pop
cmp
xchg
mov
mov
cs
dec
mov
add
or
js
mov
add
sub
jns
sbb
adc
fcoms
or
pop
sub
aaa
cld
or
add
mov
xor
and
xor
movsb
xlat
and
js
sarl
rorb
add
sub
adc
adc
daa
cmp
orl
push
fistps
or
xor
xchg
jno
jo
test
popf
scas
cmpl
je
sarb
pop
sub
inc
into
or
lock
jbe
inc
add
sub
adc
in
add
cltd
test
and
pusha
cld
sub
xchg
mov
cld
mov
sbb
sub
mov
mov
mov
fildll
jl
sarb
cld
and
test
sar
or
xchg
push
sar
fidivrs
clc
imul
xlat
int
lcall
add
push
andl
in
insl
clc
push
sar
hlt
jnp
mov
xchg
xor
sbb
pop
xor
in
sti
stc
insb
inc
in
add
pusha
add
nop
jb
mov
add
pop
push
in
ret
rorb
cmp
out
xor
pop
aaa
into
or
popa
adc
fimull
enter
test
lea
sub
or
xchg
arpl
fisubl
xchg
or
dec
mov
cmpsl
cld
add
in
jnp
dec
dec
jae
inc
jg
jb
sub
hlt
pop
jl
shlb
sti
das
pop
lret
clc
add
adc
push
lods
cmp
sarb
inc
push
sbb
jne
add
cmp
or
sub
add
xor
dec
add
pop
add
cs
test
xchg
and
adcb
pop
sbb
orb
pushf
mov
mov
push
cmp
xorb
mov
rclb
adc
sarb
sbb
mov
nop
push
push
icebp
and
fcmovne
mov
adc
sbb
or
inc
mov
addb
cmpsl
and
xor
cmp
inc
or
and
aas
pop
push
sub
xchg
cmc
add
pop
fs
jo
sbb
ss
pusha
sbb
loope
inc
adc
pop
insb
inc
or
mov
outsl
dec
jle
adc
ja
je
pop
mov
out
sbb
xchg
or
or
pop
enter
sbb
or
inc
repnz
loopne
pop
adc
adcb
pop
pop
dec
mov
aad
cmp
mov
sarb
fs
or
adc
sbb
pop
fsubrl
or
movsb
lods
orb
sub
insb
and
inc
movl
or
jmp
jg
jle
push
jo
loop
mov
mov
stc
movsl
xchg
xchg
mov
adc
adc
or
repnz
andb
sbb
xchg
xchg
aaa
sbb
sbb
and
mov
ret
jb
test
popw
inc
lcall
imul
jle
adc
cld
mov
ror
mov
push
arpl
sub
fsubrl
jbe
adc
lahf
clc
inc
sbb
xor
dec
jo
les
pop
mov
aas
cmpb
loop
sub
std
jns
js
fdivl
sbb
or
popf
mov
test
sub
or
xorb
adc
adc
or
push
xchg
icebp
shrb
cwtl
in
adc
xchg
lods
push
sbb
repnz
xor
jne
inc
cmpsl
and
pusha
and
push
fstps
push
xor
jae
sbb
jb
lods
cmp
scas
xchg
xor
push
subl
jne
pop
pop
sub
pop
cmp
pushf
ret
push
jno
cmpsl
or
dec
dec
pusha
inc
and
test
test
ret
inc
lahf
pop
shl
inc
mov
sarb
test
mov
push
scas
dec
mov
loop
fmul
jbe
pusha
std
jo
add
add
mov
out
pop
aaa
pop
pushf
lock
pop
pop
test
dec
mov
pop
stc
mov
dec
or
push
and
add
xchg
sub
pop
enter
ret
pusha
xor
cmp
das
cmp
pop
lret
out
dec
xchg
pop
test
mov
xchg
xchg
rcrl
pop
sub
fwait
lock
ret
fsubrs
pushf
jl
or
scas
pop
imul
mov
mov
push
push
pop
aaa
lret
xchg
enter
or
arpl
or
xchg
bound
pop
pop
loope
fwait
mov
add
or
xchg
xor
add
pushf
test
scas
sub
mov
adc
and
and
inc
xor
test
test
sub
push
mov
dec
call
sbb
das
push
or
andb
imul
cs
add
jecxz
or
sub
and
add
cmp
sub
mov
testl
test
and
cmp
xchg
and
outsl
cmp
sub
dec
adc
cs
push
or
les
mov
int3
pop
cmp
sti
addr16
lcall
and
add
cmp
dec
pop
or
push
pop
rolb
mov
mov
add
mov
ret
or
xor
fdivs
mov
mov
mov
outsb
arpl
or
mov
sub
and
int3
pusha
pop
xchg
adcb
pop
pusha
in
and
and
andl
and
jne
test
or
add
lods
xchg
mov
insl
test
and
or
xchg
mov
ret
fldl
aas
fdivrl
mov
rolb
imul
push
or
test
nop
or
jmp
bound
sbb
mov
sub
adc
lock
mov
cwtl
sahf
inc
negl
push
ja
sarl
fs
mov
aad
dec
leave
pop
cmp
xchg
jne
mov
es
add
cs
les
inc
divb
xor
subb
cmp
es
adc
js
jne
popa
scas
or
inc
loopne
dec
jo
sbb
or
jne
add
or
stos
dec
adc
adc
fsts
sbb
outsl
ror
lret
sbb
sbb
push
imul
sbb
add
jae
movsb
nop
mov
test
nop
inc
xchg
add
mov
mov
xchg
sbb
outsl
enter
mov
scas
mov
xor
inc
adc
es
sub
or
or
xchg
inc
pop
arpl
ret
aas
fildll
inc
cmp
sub
test
fadds
rol
mov
call
add
test
pop
push
sub
and
mov
aas
or
dec
mov
xchg
je
adc
cli
aad
sbb
rolb
nop
xchg
repnz
and
lods
jo
fcmovnbe
ss
fistpl
int
cmp
push
or
inc
idivl
add
in
inc
cmp
mov
loopne
xor
aas
cmpsl
hlt
cmp
xchg
jge
xchg
jbe
je
mov
push
dec
adc
mov
add
mull
insl
repnz
mov
cmpsb
mov
in
in
inc
sub
cmp
je
mov
pop
daa
sub
push
adc
pop
and
inc
mov
rolb
and
add
in
jne
ret
or
and
xchg
inc
push
mov
xor
add
dec
cmp
jne
mov
or
jbe
xchg
test
mov
push
dec
je
mov
in
jl
sbb
and
nop
push
sub
xchg
adc
xchg
je
cmpsb
imul
jle
fwait
or
dec
in
aaa
pop
jne
test
out
mov
inc
gs
add
das
and
add
jne
mov
es
lret
mov
es
es
xchg
inc
in
add
mov
popa
adc
pop
in
je
mov
jge
and
inc
out
add
imul
push
xchg
ds
int3
inc
pop
xor
popf
mov
xor
mov
nop
or
pop
sub
cmp
loopne
adc
push
ljmp
test
and
sub
add
push
or
push
sti
push
inc
mov
loopne
xchg
nop
adc
lcall
xor
or
push
fidivl
push
jecxz
adc
andl
cmp
pop
push
es
lock
imul
call
add
into
orb
iret
and
movsl
adc
or
push
aad
inc
lahf
addl
data16
inc
sbb
add
cmp
add
subb
or
movsb
pushf
pop
pop
nop
push
movsl
addb
push
nop
inc
fldenv
insb
push
adc
ret
arpl
test
iret
xchg
sarb
add
adcl
lock
es
lea
jne
push
lods
lock
xchg
out
hlt
mov
jecxz
jl
xchg
movsl
and
into
dec
ret
aas
mov
add
push
psubsb
cltd
inc
xor
aas
sub
mov
lcall
je
lock
es
stos
pop
sub
cmpb
push
xchg
call
inc
out
rcl
bnd
in
popa
lea
jecxz
xor
or
test
aaa
fmuls
or
dec
outsl
clc
cmp
or
movl
and
inc
cmp
jl
or
andb
ret
jg
sbb
cwtl
test
push
push
icebp
inc
sub
ja
inc
bound
call
mulb
push
jo
fsubrl
push
or
outsl
or
xor
addb
outsb
adc
data16
dec
push
and
js
cmp
aaa
popf
inc
movsb
inc
fiaddl
pop
xor
cmp
and
sbb
loopne
call
mov
or
insb
xchg
and
bound
adc
sub
sti
mov
or
test
jmp
repz
mov
cmp
ret
fisubrs
or
dec
inc
cmp
sub
nop
mov
rcrl
dec
dec
imul
push
jno
adcb
mov
clc
xchg
into
int
or
iret
sub
xor
fsubs
shr
push
or
cmp
xor
xor
mov
dec
lds
sbb
sbb
dec
je
push
jns
add
mov
inc
fcmovnu
push
movsb
cmp
leave
cmp
jnp
outsl
adc
inc
je
inc
add
cltd
sbb
pop
adc
mov
hlt
push
cmp
test
adc
jne
arpl
mov
jle
mov
ljmp
loope
sub
dec
in
scas
roll
arpl
inc
rol
xchg
xchg
gs
jbe
jge
sbb
insl
push
imul
push
ret
bound
push
out
push
xor
repnz
add
xor
pusha
andl
dec
sbb
outsl
call
xchg
cwtl
inc
xlat
xchg
pop
or
call
outsl
sub
and
sub
and
lret
fs
notl
jo
test
cmp
roll
in
add
adc
mov
adc
pop
pop
jno
push
lret
out
sbb
add
loope
jmp
add
loopne
loopne
in
push
movsb
pusha
inc
pop
adc
add
sbb
xor
aaa
addb
xchg
jo
fwait
cltd
adc
test
pop
mov
leave
and
cmovo
fdiv
and
mov
icebp
and
sbb
jne
dec
xorb
dec
mov
add
in
enter
add
cld
lods
pop
rcrb
add
pop
lods
test
jnp
fildl
push
jp
jle
lea
push
xor
pushf
fwait
xchg
cld
cmp
and
loopne
adc
shlb
add
sub
lret
adc
sub
pop
adc
or
add
adc
pop
jle
sub
mov
mov
clc
sbb
mov
xorl
adcb
sub
pop
xor
test
mov
js
movsb
jg
popa
mov
jb
fisttps
lea
xchg
mov
pop
cmpsb
push
decb
inc
or
adc
pop
sbb
adc
adc
or
push
or
add
sub
mov
mov
xchg
and
add
mov
aaa
cmp
mov
pushf
les
adc
and
push
je
ret
dec
sbb
adc
incl
std
daa
dec
je
sub
je
sub
mov
or
or
cmp
and
push
add
sbbb
push
jl
push
jmp
scas
into
cli
add
sbb
add
jmp
mov
or
sbb
mov
int
mov
dec
dec
test
jmp
idivl
jnp
dec
sbb
xchg
andnps
sub
inc
js
cmp
inc
fcompl
cwtl
xor
ljmp
inc
jle
sbb
dec
pop
test
push
loope
enter
push
pop
add
mov
daa
push
aas
sahf
daa
cmp
cltd
aam
mov
sub
add
lock
push
sub
inc
inc
cmp
ja
adc
sub
inc
movsl
lds
mov
dec
jmp
roll
jns
push
adcl
pusha
sub
and
add
mov
addr16
cmp
jne
rcrb
clc
inc
dec
push
push
data16
cmpb
or
in
cwtl
sbb
mov
inc
les
sbb
push
cmp
jo
movsb
adc
je
pop
lsl
sbb
xor
pop
das
int
inc
lds
inc
xor
xchg
cmc
je
aaa
pop
xor
gs
pop
lahf
adc
pusha
cmp
aad
or
insb
mov
movl
dec
or
imul
dec
icebp
pop
add
dec
adc
and
jl
dec
ljmp
dec
jae
bound
scas
pusha
xchg
dec
loopne
leave
ret
addb
push
aam
enter
outsl
imul
out
cmp
adc
addr16
or
aaa
mov
mov
dec
insb
adc
fadd
frstor
test
mov
dec
js
push
mov
outsb
in
orb
xchg
dec
push
sbb
xor
subb
sbb
ret
scas
xor
mov
adc
adc
outsb
mov
lahf
sbb
xchg
test
ret
push
xor
cmp
xchg
xor
dec
outsb
inc
jo
scas
adc
inc
adc
xlat
push
adc
jecxz
pop
dec
movb
pop
xor
ja
movl
sbb
mov
adc
mov
lcall
sub
jle
dec
ds
shr
mov
mov
fadd
add
pop
imul
jo
daa
fmuls
es
adc
xchg
ret
loope
dec
or
cli
push
sub
ljmp
mov
ljmp
adc
incl
movb
fwait
push
push
mov
adc
mov
xor
xor
cmp
lods
fnstsw
jne
lods
add
mov
lds
fwait
shrl
mov
stos
nop
stos
and
mov
xor
cwtl
inc
jmp
lea
xchg
and
or
movsb
dec
add
or
jo
and
xor
jp
movsl
mov
lcall
out
gs
and
push
insb
ljmp
in
sbbb
xchg
and
jno
leave
push
pop
inc
cwtl
sahf
ret
add
mov
pusha
sbb
dec
mov
mov
pop
imul
or
push
out
daa
nop
push
std
rorb
fdivs
mov
pop
pop
loopne
rol
pop
arpl
or
mov
push
loopne
loopne
shr
mov
push
or
and
mov
stos
or
test
cmpl
mov
shll
test
int
or
or
data16
ret
xlat
jp
sub
xchg
pop
pusha
push
call
test
js
je
add
cmpb
or
into
xchg
in
cmp
or
add
push
and
push
sub
into
push
data16
and
pop
imul
dec
loopne
and
push
pop
ret
xchg
sbb
popa
mov
daa
imul
mov
xor
xchg
push
add
mov
push
mov
mov
push
inc
in
adcb
cltd
or
mov
push
push
sub
fstpt
jle
js
inc
inc
pusha
and
adc
jnp
pusha
inc
cs
or
xorl
add
fs
dec
ret
ds
and
cmp
jae
popf
jb
pop
out
mov
xchg
push
pop
jbe
sbb
sbb
mov
and
cmp
jbe
adc
dec
lea
push
add
shlb
enter
pop
inc
pop
mov
es
movsb
xchg
or
mov
mov
sbb
loop
pop
jo
imul
cltd
mov
int3
jmp
jbe
mov
roll
aaa
mulb
cmpsb
add
add
rcl
gs
add
ret
xchg
xchg
add
sbb
or
add
loope
push
fcmovne
adc
lret
mov
movsb
movsl
xchg
test
cmpl
xor
pop
add
xor
sub
inc
lods
mov
loope
cmp
paddb
cmp
cmp
insb
rolb
leave
test
test
icebp
in
in
xchg
mov
sbb
mov
jbe
adc
inc
icebp
push
dec
and
pop
fs
fistl
in
ret
sbb
les
xchg
pop
adc
pushf
and
or
lock
adc
lock
filds
push
ret
lods
shlb
xchg
add
adc
push
add
sbb
or
les
add
and
lret
rolb
inc
sub
mov
add
popw
add
and
mov
adc
pop
sbb
into
or
dec
adc
push
movsb
in
notl
dec
or
daa
cmp
mov
pop
sbb
cmp
cltd
push
jle
popa
pop
push
sbb
adc
jmp
sbb
or
xchg
aaa
adc
mov
adc
xchg
cmp
sub
ja
cld
sbb
hlt
ret
sub
lahf
icebp
out
cmp
mov
add
cmpl
add
add
jg
cmpl
pop
lods
fcmovb
jne
pop
lret
imul
inc
add
lods
loopne
pushf
or
xchg
loop
push
cmp
add
mov
adc
push
jno
cwtl
int
rcrb
cmp
xchg
mov
mov
adc
js
or
je
movhps
ror
pushf
pop
lahf
sbb
or
in
fs
lock
call
out
mov
mov
add
and
and
aaa
ret
pop
cli
dec
sbb
lret
and
testb
or
add
add
daa
cli
push
push
mov
mov
push
sti
or
add
aas
dec
out
pop
add
xchg
ret
sahf
out
add
js
add
js
mov
and
push
movl
mov
lock
out
es
decl
adc
jl
in
dec
rorl
jge
sbb
sub
jo
xor
dec
pusha
leave
scas
and
mov
mov
icebp
cli
pusha
jne
inc
lea
adc
mov
and
arpl
leave
add
mov
inc
inc
xor
test
jmp
mov
xor
scas
add
scas
mov
jbe
or
add
lea
add
mov
out
mov
mov
inc
mov
mov
or
mov
daa
or
lds
scas
clc
andb
dec
add
xor
dec
xlat
cmp
fcomps
add
sbb
and
or
vmwrite
scas
test
push
add
add
faddl
or
push
sarb
shrl
mov
lea
fwait
xchg
cmp
je
sti
dec
cld
rolb
pop
jmp
or
test
outsb
add
and
imul
cmp
mov
sbb
scas
call
fistps
and
and
shlb
mov
sbb
mov
sarl
jge
insb
or
subl
int3
pop
mov
push
roll
jge
mov
pop
dec
add
jo
enter
and
lock
and
cld
jl
sub
push
push
and
or
icebp
mov
pusha
out
ss
loope
je
mov
insb
sahf
add
xchg
mov
ja
push
rcrb
loopne
add
fcoml
jo
xchg
outsl
pop
hlt
dec
add
gs
inc
test
push
xor
xchg
sub
cmpsb
lods
scas
adc
jmp
shll
jae
pop
mov
jne
mov
rorb
aaa
nop
fwait
sub
fdivrl
or
pop
add
jbe
adc
addl
lods
mov
or
sbb
cmpsb
xor
flds
out
daa
and
push
mov
pop
add
or
mov
sub
and
push
rcr
sarb
push
imul
or
test
cmpsb
inc
push
jbe
push
adc
mov
in
mov
push
xor
pop
mov
adc
je
aaa
pop
jns
jl
jno
mov
scas
sti
jo
ja
sub
push
out
dec
inc
sbb
adc
add
dec
loopne
jg
clc
push
sub
imul
clc
or
sub
roll
xchg
addr16
and
xorl
sbb
push
add
in
addb
inc
rorb
xchg
ljmp
iret
mov
push
xchg
scas
lds
fsubrs
xor
sbb
jecxz
pop
dec
xor
add
or
inc
sbb
sbb
add
cmp
or
mov
mov
sbb
push
imul
lcall
outsb
leave
mov
cmp
daa
pusha
push
dec
and
xchg
out
or
dec
sbb
push
xchg
push
movsb
mov
or
lret
sbb
pop
push
push
adc
sub
inc
xchg
jo
dec
jp
test
hlt
roll
imul
pop
xchg
dec
shr
loopne
icebp
push
wrmsr
in
push
call
insb
mov
adc
mov
adc
mov
fistpl
xchg
shl
xor
pop
dec
mov
inc
jmp
movsl
fwait
sub
rcrb
add
cmp
mov
pop
xchg
pop
into
inc
fsubr
or
mov
cmp
mov
cmp
and
clc
stos
jl
sub
insl
mov
push
insl
idivb
int
es
xor
or
enter
divl
test
adc
dec
cmp
shlb
inc
jl
cld
pop
pusha
push
jo
popa
mov
lods
inc
and
clc
mov
add
pop
enter
clc
and
push
shr
jne
imul
add
inc
inc
xor
mov
and
dec
push
lret
mov
nop
mov
popa
js
pop
out
xchg
add
jne
outsl
fisubrl
cmpsl
hlt
iret
mov
enter
xor
mov
pop
dec
dec
mov
mov
cmp
pusha
add
test
xchg
xor
dec
dec
jg
mov
and
sub
add
movsl
push
mov
pusha
test
cmpl
xor
outsb
std
lock
mov
cltd
sbb
call
mov
aam
outsb
shr
aad
mov
add
or
cmp
inc
cmp
popf
push
outsb
das
pop
daa
inc
xchg
mov
mov
cmpsl
jnp
lfs
sbb
pop
xorl
cmova
pop
mov
push
cmp
push
sub
pop
enter
and
inc
sub
pop
pop
adcb
fsubrl
call
add
mov
inc
rolb
sub
or
and
inc
sub
inc
rcrb
fs
adc
pop
mov
add
and
out
testl
xchg
or
cmp
mov
mov
mov
subb
xor
sub
addb
imulb
arpl
sub
repz
adc
inc
sub
ds
or
addr16
or
cmp
xchg
negl
rolb
pop
aaa
or
stos
pop
ret
fs
add
add
and
push
push
fbstp
cwtl
inc
xor
pop
icebp
je
es
outsl
mov
jo
or
xor
popa
and
loopne
push
sbb
shll
jle
aad
rcl
call
aam
aaa
test
test
ret
dec
pushf
test
add
add
or
xchg
add
push
xchg
adc
arpl
scas
arpl
xor
push
fcomps
jno
jge
dec
xor
and
or
lcall
inc
dec
mov
mov
push
push
cmpsl
cmp
or
ret
loope
nop
push
decb
testb
adc
add
stos
push
cmp
mov
dec
push
dec
inc
xor
push
pop
jmp
adc
and
in
ds
stos
fcomi
mov
loop
or
jo
and
xor
adc
mov
pop
cmp
rclb
mov
popa
in
xchg
xor
cmc
sbb
hlt
scas
dec
pushf
xor
jnp
mov
cmc
xlat
dec
mov
cwtl
dec
lock
push
dec
jmp
imul
addb
stos
adc
dec
xor
scas
add
loop
mov
pop
cmp
xchg
imul
test
cltd
popa
inc
push
inc
movsb
in
mov
imul
insb
push
mov
movsl
sbb
sub
or
add
in
push
lea
xchg
mov
sbb
mov
hlt
and
sbb
sahf
lcall
or
and
or
dec
out
and
dec
movsb
cwtl
xlat
mov
repnz
or
imul
mov
ds
sbb
roll
inc
mov
cltd
xor
adc
and
test
pop
sub
mov
sub
insb
cli
pop
loope
adc
and
inc
lret
inc
or
jmp
mov
or
rclb
cmp
jbe
sbb
mov
dec
and
into
and
or
les
ret
inc
xor
popa
pop
je
out
lea
pop
test
inc
aaa
adc
dec
or
sbb
imul
rol
dec
cmp
andl
cwtl
ret
xlat
fadds
sahf
hlt
and
xor
bound
mov
xchg
or
nop
inc
add
rcll
push
xor
push
sbb
mov
les
shl
test
dec
lds
mov
in
cmp
xor
leave
sar
popf
pushf
mov
inc
dec
test
adc
pop
or
cmp
mov
inc
or
mov
imul
add
test
cmp
ret
sbb
dec
add
adc
dec
shll
and
push
call
nop
clc
inc
xor
or
clc
and
cmp
mov
ret
add
add
mov
mov
pop
lods
inc
push
lock
loop
jp
daa
cmpb
sbb
jns
enter
dec
sti
call
les
push
subb
movsb
loope
scas
and
push
popf
cmp
outsl
xor
dec
dec
or
pop
mov
aam
sub
xchg
inc
jmp
pop
adc
xor
adc
xor
sbb
and
in
aas
aaa
int
imul
sbb
mov
adc
std
cs
sub
sub
out
je
or
shrl
xchg
jmp
pushl
stos
or
dec
inc
mov
sbb
jne
addl
and
lcall
or
ret
iret
xor
cltd
pop
push
insb
or
mov
pop
ret
and
lock
and
lds
fcmove
push
dec
or
sub
adc
push
lea
pop
inc
jl
out
out
je
cmp
jmp
sub
or
mov
mov
add
xor
add
sbb
popf
je
add
jp
inc
outsl
cmp
notl
dec
inc
mov
lea
rcl
jnp
xchg
ss
add
cmpsb
imul
fld
mov
js
push
and
mov
int3
push
in
and
sahf
add
loope
or
scas
rolb
mov
in
je
addl
jl
and
add
leave
iret
aaa
xor
leave
imul
push
sbb
test
popf
cmpsl
sbb
test
cmpl
pop
sub
fildl
sub
jmp
in
push
and
js
int
mov
or
push
and
adc
or
int3
inc
test
mov
adcl
aam
pop
daa
jle
and
jns
push
cmp
or
and
add
outsl
pop
mov
xchg
pop
adc
stos
sub
sbb
ficompl
pop
fildll
push
cmp
xchg
mov
sub
push
cltd
hlt
jo
mov
push
inc
jo
add
or
dec
call
leave
mov
fcoms
inc
push
mov
pop
dec
jo
add
in
mov
jg
les
test
sub
cltd
pop
xor
push
cwtl
mov
mov
and
sbb
es
adc
dec
pusha
clc
lret
mov
in
push
dec
adc
or
sbbb
les
jne
adcl
inc
inc
bound
inc
mov
fcmovnu
clc
pop
xchg
push
sbb
in
inc
dec
fsubl
xchg
test
insb
adc
loop
popa
lock
and
mov
popf
les
mov
mov
inc
cmpsb
adc
sbb
add
insl
and
add
cmp
ljmp
aaa
push
add
cs
dec
bound
je
dec
mov
xor
dec
jae
adcl
cmp
and
inc
push
xor
int3
add
dec
dec
add
cmp
dec
pusha
sbb
add
adc
or
inc
xchg
pop
xor
test
xlat
pusha
imul
rcrb
inc
imul
sub
addr16
dec
add
int3
aam
pop
es
push
std
mov
sub
push
into
mov
mov
in
push
xchg
inc
sbb
enter
adc
push
fcoms
int
fmul
or
xorb
addr16
aaa
into
pop
xor
add
or
add
xor
into
push
mov
cmp
adc
or
pop
into
test
push
into
mov
dec
sub
rol
dec
mov
cmp
jae
sub
inc
inc
into
call
sahf
es
push
dec
lds
and
aad
pusha
jmp
mov
movsl
bswap
xor
adc
sarb
push
in
add
or
xchg
xor
xor
sub
mov
iret
adc
add
mov
loop
jne
mov
movb
and
jge
and
mov
push
inc
xor
mov
mov
test
dec
or
mov
push
jmp
xchg
out
add
in
and
lahf
rcrb
lods
sbb
nop
cwtl
or
push
xor
aaa
xor
dec
mov
pop
cmp
dec
lcall
xor
jecxz
pushf
mov
add
inc
push
js
ret
dec
or
inc
stos
rorb
add
js
repnz
loopne
or
inc
cmp
shll
hlt
push
add
test
aam
xchg
jmp
mov
xor
inc
popa
sub
popa
adc
sub
hlt
jae
or
and
aaa
inc
add
decl
cmp
and
push
ret
ret
push
or
and
pop
pop
mov
push
xchg
fcom
xchg
adc
psubd
mov
sub
dec
adc
lcall
cltd
fidivl
adc
push
sbb
pusha
cltd
mov
inc
jle
sub
pop
jnp
push
mov
inc
add
ret
hlt
mov
or
add
ljmp
pop
sub
dec
push
dec
push
ret
or
add
mov
decl
mov
cmp
mov
pop
mov
hlt
pop
rorl
pop
mov
test
push
cmp
rolb
mov
add
outsl
pop
rclb
jl
mov
bswap
call
xor
lock
or
mov
fs
in
aad
sub
jl
shrb
je
shll
jne
xchg
dec
aaa
mov
inc
je
in
lea
sbb
dec
sbb
add
cmp
mov
fs
addr16
mov
arpl
xor
fldt
arpl
and
adc
ss
inc
mov
mov
xor
outsl
cli
outsl
bnd
add
outsb
jb
aad
imul
or
add
lock
aam
push
push
fs
push
aaa
ss
sbb
jb
xor
add
mov
in
xchg
inc
test
sub
and
inc
or
add
or
add
lfs
mov
mov
dec
xorl
ja
jnp
pop
ret
push
jg
lahf
fcomps
fcomps
push
out
sbb
repnz
ficoms
add
repnz
and
push
cs
lcall
push
push
fisubrs
sub
mov
push
xlat
inc
mov
lock
addr16
xchg
repnz
into
or
inc
cmp
mov
pop
pop
jmp
adc
popa
xchg
jmp
call
and
pop
fists
lahf
dec
cmpsb
or
cmp
js
xchg
test
arpl
dec
adc
data16
jae
sub
push
mov
add
les
add
push
and
xchg
xchg
pop
push
dec
les
and
adc
fcoms
xor
and
add
int3
jmp
rcrb
vpsllq
mov
pop
data16
loop
mov
or
lds
pusha
adc
mov
and
jg
jbe
scas
xchg
sub
push
es
loopne
mov
ja
and
dec
or
lahf
aas
and
fdivrs
add
xchg
and
notl
fimull
aad
and
nop
inc
jl
outsb
mov
mov
and
dec
popa
inc
lock
dec
xor
mov
pushf
mov
arpl
aad
fiaddl
stos
and
mov
mov
xor
sub
add
push
xor
xor
lds
dec
es
jg
in
stos
sti
sahf
add
imull
sub
or
int
adc
adc
mov
add
mov
int3
mov
fmull
loop
imul
in
or
add
fisttpl
out
push
mov
dec
fs
mov
or
xor
push
add
mov
in
inc
mov
xor
inc
and
ds
incl
mov
aaa
jae
dec
leave
in
add
fisubrl
mov
popa
sbb
mov
mov
mov
push
and
xor
fstpl
adcb
mov
std
jg
push
xor
mov
inc
outsb
jbe
or
decl
add
scas
bound
ss
sahf
push
or
scas
xchg
daa
sbb
aaa
add
or
insl
mov
add
lods
inc
adc
aad
mov
or
addr16
cmp
mov
inc
loopne
stos
add
xor
aad
inc
mov
add
in
movsb
or
mov
pop
adc
sets
adc
add
mov
xchg
inc
sub
inc
aad
pop
cmp
jne
mov
clc
mov
fistl
add
mov
inc
mov
pop
fwait
pushf
call
pop
or
mov
shll
xchg
adcb
pusha
bound
or
mov
fnstsw
xchg
enter
pavgb
adc
icebp
cwtl
add
mov
stos
cltd
sub
fmuls
bound
cmpsb
cmpl
add
aaa
inc
pop
mov
jae
mov
sub
push
or
ret
dec
fs
sbb
out
push
push
or
sbb
push
imul
test
outsl
add
dec
xchg
xchg
dec
push
mov
or
add
jne
mov
dec
sti
pop
loop
inc
loop
pop
in
push
and
push
insl
ss
bound
jo
lock
shlb
in
add
inc
pop
cmc
cmp
rolb
push
jg
fs
mov
adc
push
push
lret
xor
aad
or
jb
or
sub
adc
ss
xchg
imul
cwtl
es
or
pop
jle
adc
jo
and
enter
add
push
cmc
xor
imul
jl
xchg
fadds
lret
adc
xorb
xchg
xchg
test
pop
xchg
push
inc
push
adc
loope
mov
movsl
test
pop
popa
outsl
or
jns
jae
xchg
or
or
adc
lods
xor
out
xchg
adc
xor
pop
and
and
dec
inc
ja
dec
jle
enter
in
in
in
push
add
mov
xorl
jnp
addl
testl
in
lock
or
push
inc
outsl
inc
mov
pop
rol
das
testl
pop
lds
sbb
add
and
roll
in
daa
daa
mov
pop
sub
push
js
ja
daa
daa
ret
jmp
add
xchg
xchg
xchg
sub
mov
ret
icebp
fdivl
movsl
bound
add
mov
insl
or
clc
inc
repnz
xchg
cmpsb
mov
mov
mov
adc
pusha
pusha
xchg
mov
mov
pop
pushf
push
and
pop
psubw
hlt
and
sbb
leave
adc
jmp
dec
xchg
adc
ret
pop
call
movsl
bound
sub
in
sub
outsl
aad
iret
imul
jno
pop
test
push
lods
ljmp
push
and
int3
testb
fildll
imul
clc
adc
loope
imul
sahf
mov
sub
cmp
pop
sub
std
mov
test
cmp
add
adc
push
mov
pop
add
dec
out
out
sub
lcall
jl
cmpsb
imul
pop
lcall
or
dec
shll
adc
sbb
or
cli
jbe
pop
stos
lock
inc
loope
xorb
pop
jle
dec
or
in
adc
xor
pop
aas
xor
jo
xchg
sbb
add
jb
mov
js
sbb
cmp
subb
adc
sub
loopne
jle
out
nop
push
stc
or
ljmp
orl
mov
bound
lahf
dec
pop
mov
mov
pop
sti
test
cmc
push
lea
sub
ficoml
popa
xor
sub
mov
cmp
xor
in
lock
cltd
rcrb
mov
jmp
xchg
xchg
lea
movsl
jnp
sub
movsl
repz
enter
aas
int3
xlat
enter
or
adcl
inc
mov
push
push
dec
je
and
add
pop
or
mov
cmp
movsb
movsb
xor
and
mov
movsb
push
aas
mov
mov
ret
loopne
or
flds
nop
xchg
pop
jmp
sahf
rol
sar
pop
in
cwtl
adc
push
xlat
add
push
inc
cmp
ret
rolb
or
cmpsl
add
ja
inc
mov
lea
add
jl
ret
out
clc
add
cmpl
int3
and
inc
xchg
js
sbb
hlt
or
ror
inc
bound
les
sub
rorb
sub
mov
in
mov
mov
mov
push
ficompl
rorl
es
or
idivb
rorb
je
mov
adc
dec
fidivl
cmp
inc
pop
ret
rcrb
xchg
xlat
mov
and
dec
or
cmp
and
mov
in
aad
push
cmp
daa
and
xchg
idivl
ja
or
out
jnp
push
inc
hlt
in
xor
iret
movsb
pusha
mov
sbb
fsubl
lock
mov
call
inc
outsl
sbb
adc
js
leave
test
mov
add
xchg
bound
or
imul
or
les
stos
pop
adc
lock
mov
and
bound
enter
arpl
mov
pop
or
stc
xor
stos
test
cmpl
sub
or
pushf
inc
fidivs
mov
adc
aam
test
arpl
inc
sbb
mov
and
push
sub
xchg
push
add
jl
gs
test
test
fildll
add
add
daa
cmp
je
mov
pop
in
cmp
inc
jmp
sbb
cwtl
iret
and
aas
and
or
adc
sbb
and
add
repz
scas
dec
jmp
inc
sbb
xor
inc
inc
push
xchg
dec
inc
mov
push
jno
cmpsb
test
fs
or
lret
pop
adc
push
adc
daa
sbb
les
es
or
and
pushl
and
inc
push
movl
data16
js
outsb
xchg
inc
xchg
mov
mulb
movlps
sarb
arpl
sar
dec
inc
mov
mov
ljmp
xor
fdivrl
cmp
push
imul
insb
adc
sbb
mov
repnz
pop
dec
adc
push
jo
je
sub
mov
sbb
adc
clc
insl
cmp
cwtl
pop
xchg
test
divb
xchg
lods
enter
mov
inc
add
adcl
mov
loopne
xchg
pop
mov
mov
outsl
jns
dec
dec
or
mov
sub
cmp
orl
call
sbb
daa
inc
push
xchg
add
inc
pop
add
inc
cmp
xlat
cltd
int
adc
in
xor
add
and
rorb
sbb
push
insb
ret
jnp
xchg
iret
inc
add
add
shlb
rorl
sahf
mov
leave
sbb
pop
sub
roll
pop
decl
add
aam
add
xchg
ret
push
push
fs
mov
stos
mov
add
int3
fldcw
and
mov
leave
push
cmp
mov
cld
jle
popa
testb
push
jnp
sbb
jns
dec
pop
mov
movsb
inc
pop
pop
fmull
das
jbe
cld
je
lock
popa
or
xchg
jp
xor
rol
js
test
pop
mov
add
test
sbb
cld
add
mov
cmp
je
subl
push
pop
test
xor
mov
sbb
push
or
ret
insb
outsb
or
inc
lds
add
cltd
mov
leave
pop
das
pop
xor
lods
cmpsl
aaa
pop
jo
xor
inc
xor
xor
jb
lds
js
mov
inc
inc
aad
call
js
xor
pop
das
je
sbb
and
pop
xchg
je
add
shlb
push
jl
addl
aam
and
mov
pop
add
sbb
dec
dec
and
test
addl
inc
fnstenv
sub
jge
rclb
das
shlb
push
mov
int
std
or
ret
es
adc
xchg
les
sarb
adc
js
inc
cmp
aam
daa
mov
cld
add
mov
add
in
nop
add
popf
or
stc
inc
stos
int
out
push
dec
cmpb
dec
daa
fnstcw
cld
sub
out
sbb
pop
test
pop
jnp
dec
push
outsb
xor
mov
xchg
xor
mov
fs
pop
add
adc
aaa
fisttps
ret
cmpl
iret
push
pop
scas
inc
inc
push
adc
loop
add
lock
jg
nop
push
cwtl
xor
xor
ret
das
icebp
mov
add
adc
or
jno
enter
mov
xchg
rcrb
ret
pusha
or
mov
push
sbb
arpl
sahf
fucomip
test
sbb
jae
and
jmp
aas
mov
movsl
aam
jne
f2xm1
prefetchw
mov
xchg
daa
and
pop
rcll
mov
xlat
xlat
jns
cmp
inc
push
fwait
test
or
dec
dec
arpl
repnz
dec
and
outsb
pusha
jmp
xor
and
lds
jno
inc
mov
and
in
movsl
leave
aam
add
in
jg
xor
gs
pop
lcall
xlat
popf
rolb
pop
nop
es
add
ja
pop
push
imul
test
mov
insb
add
sti
ljmp
ret
dec
inc
cltd
icebp
sbb
xchg
cmp
add
in
push
lcall
mov
mov
loope
inc
or
push
into
pop
cmp
fmull
mov
gs
adc
call
and
call
xlat
mov
stc
dec
and
pop
and
movsl
mov
nop
popa
mov
seto
insl
pusha
movsb
scas
fcoml
insl
repz
xor
adc
vmwrite
mul
adc
adc
pop
test
daa
pop
cmp
or
js
test
wrmsr
adc
psrlq
sti
fcomp
mov
push
pop
add
shll
dec
pop
sub
shll
int
xchg
fwait
shll
mov
dec
arpl
jnp
jmp
repz
loope
adc
mov
or
shll
sub
lcall
insb
aaa
test
aam
inc
aaa
or
mov
xor
in
std
push
imul
es
stos
clc
sub
xchg
push
nop
and
outsb
add
add
add
inc
stos
push
add
push
inc
adc
push
retw
cmp
jns
imul
imul
sbb
add
outsb
sti
cltd
inc
push
adc
adc
mov
push
add
incl
in
push
movsb
cld
push
add
fs
das
add
and
xchg
inc
push
sbb
xor
add
ret
leave
outsl
pop
andl
and
add
outsl
dec
add
outsb
or
add
pop
add
push
mov
or
dec
and
aam
push
push
xchg
or
out
or
jo
mov
push
sub
pop
movsb
or
cvtps2pd
pop
bound
scas
push
jne
scas
xor
xor
or
pushw
outsb
inc
or
push
adc
outsl
jo
fsts
imul
inc
aaa
push
inc
adc
adc
stos
push
push
push
icebp
jg
jo
or
std
mov
xor
dec
enter
mov
push
pusha
inc
mov
dec
sahf
je
insb
cwtl
lcall
jb
jae
pop
enter
in
icebp
mov
jno
push
andb
dec
scas
adc
test
or
jae
dec
lcall
arpl
seto
mov
add
and
ret
inc
sub
push
les
or
mov
inc
enter
pop
lods
addr16
shr
pop
and
in
cmp
sbb
adc
pushf
ss
xchg
or
inc
adc
stos
mov
dec
or
scas
or
test
mov
sbb
pop
add
add
mov
or
dec
repz
stos
dec
add
imul
cld
jbe
daa
and
xor
or
and
in
xchg
and
adc
repnz
add
mov
leave
pop
ret
mov
mov
imul
mov
popa
dec
or
dec
rcrb
lcall
mov
jecxz
inc
outsl
arpl
push
pop
inc
movsl
pop
lret
push
push
mov
loope
loope
or
sub
push
add
push
sub
or
push
inc
mov
sub
push
mov
mov
addl
or
nop
adc
adc
add
add
xor
das
out
push
dec
sub
inc
jno
and
addl
cmpsl
inc
mov
inc
jb
ret
mov
popa
sahf
adc
mov
inc
add
xchg
pop
sub
ret
pop
xor
or
inc
or
in
loopne
sarb
push
xchg
and
jl
andl
push
adc
jnp
shll
and
scas
mov
enter
dec
test
pop
scas
pop
push
scas
mov
clc
add
xor
push
jne
inc
cmpsb
mov
jmp
ret
scas
je
push
mov
and
or
dec
push
dec
lea
cwtl
ja
adc
jae
and
sbb
and
cwtl
push
sub
ljmp
pop
mov
or
dec
add
insb
in
cmp
add
hlt
dec
ret
adc
xchg
push
out
or
pop
in
push
addr16
sbb
xor
or
mov
shr
shrb
mov
stos
push
lret
scas
lahf
and
jnp
scas
push
adc
enter
cmp
clc
divl
rcl
mov
mov
insl
push
or
ss
push
gs
bound
pop
test
jo
dec
js
or
inc
dec
xor
loopne
loop
mov
adc
cmp
pop
movsb
nop
stc
xor
ret
xorb
xchg
mov
in
fistps
dec
fdivl
push
mov
call
aam
add
pop
iret
fmuls
rcll
xor
popl
fcmovu
adc
xchg
cltd
sbb
xor
inc
imul
stc
xchg
jmp
lods
fwait
jg
bound
jae
jns
scas
or
cmp
arpl
test
inc
cmp
imul
lret
sbb
cmp
add
or
xchg
cmpsl
test
movups
push
and
inc
sbb
call
mov
rolb
pop
sbb
xor
xor
cld
jmp
movsb
jbe
sbb
lds
flds
mov
xor
nop
test
scas
adc
pop
popa
insb
movsl
cwtl
push
ret
pop
pop
sub
xchg
shrb
dec
xchg
ds
or
movsb
pop
bound
ret
cmp
or
enter
ja
les
enter
ret
jg
dec
call
add
je
dec
pop
ss
repz
cld
xor
js
sbb
or
mov
movsl
cmp
fs
jb
fdiv
unpcklps
icebp
sbb
push
adc
test
adc
popa
in
or
mov
aad
dec
sub
dec
mov
insb
push
adc
je
pusha
rorl
imul
mov
xchg
test
mov
fnop
or
and
stc
sub
jl
dec
sbb
push
inc
push
mov
sahf
xor
lret
xor
mov
faddl
int3
int3
sbb
pop
pop
cltd
rcr
shr
or
xchg
sbb
lods
clc
mov
mov
pop
cs
nop
and
not
push
iret
les
inc
jle
or
dec
push
push
push
jno
adc
sub
or
bswap
daa
loopne
xchg
mov
enter
ljmp
cmp
sub
stos
sarb
ret
sbb
mov
inc
sbb
mov
out
and
inc
rcll
xchg
sub
push
xchg
in
lret
sbb
shlb
js
lret
outsl
fldl
je
mov
inc
pusha
xor
pop
aam
add
cmc
stc
hlt
adc
ja
sbb
pop
dec
mov
pop
push
lods
addl
test
and
inc
adc
mov
adc
test
in
inc
xchg
pushf
in
xor
mov
xor
push
mov
mov
inc
add
adc
stc
fimull
cmp
add
mov
inc
adc
nop
mov
xor
test
or
add
cmpsl
push
jmp
test
add
pop
test
hlt
mov
xor
or
enter
jbe
testb
out
jmp
sbb
xchg
xchg
iret
adc
inc
jmp
wrmsr
jmp
push
pop
adc
loop
dec
cld
aaa
je
xchg
sub
cmp
scas
mov
sbb
stc
lock
jno
aad
aad
out
add
popa
inc
out
out
sti
hlt
hlt
movsb
dec
add
mov
mov
ja
cmp
mov
cwtl
int
adc
adc
mov
pop
loope
cld
aaa
or
jo
shrb
inc
adc
ja
out
adc
ficoms
fsubrl
mov
lods
mov
popl
dec
pop
cltd
dec
sahf
adc
xchg
xchg
xchg
jb
sub
nop
data16
rclb
punpckldq
in
dec
adc
dec
aad
push
mov
xor
jae
lock
mov
repnz
lock
mov
sbb
pop
in
dec
push
andl
inc
std
push
add
xor
adc
xorb
shl
outsl
jns
inc
fstpl
in
lods
cmpsl
xor
test
xor
and
leave
mov
test
dec
push
and
test
mov
lock
add
pop
xchg
leave
and
inc
inc
mov
int
inc
mov
pushf
test
xlat
rorl
out
push
mov
mov
adc
mov
adc
pop
dec
jmp
out
dec
jne
or
push
push
lods
ret
nop
and
pop
pop
dec
enter
push
pop
mov
cld
pop
xchg
or
or
pushf
or
add
cld
test
xchg
cmp
mov
pop
xchg
add
mov
cltd
adc
lret
dec
xchg
test
xchg
xchg
and
lcall
adc
add
adcb
jns
adc
test
jbe
push
shrl
mov
ja
imul
in
mov
sbb
test
pop
sbb
and
fistps
psubsw
sub
cmp
mov
pop
push
dec
or
and
pop
repnz
aas
push
sbb
jne
cmpsl
pop
add
sbb
add
nop
push
cs
adc
and
xor
ret
mov
loopne
xor
test
fcomps
or
adc
jbe
adc
sbb
add
jp
mov
mov
adc
movsl
ror
out
decl
dec
cmp
test
cmp
scas
loop
andb
dec
dec
dec
dec
addb
nop
xchg
cwtl
pushf
dec
dec
dec
dec
mov
dec
dec
dec
mov
mov
dec
rol
int3
dec
dec
dec
dec
rcl
fcomp
dec
dec
dec
dec
loopne
call
dec
lock
clc
cld
daa
daa
daa
inc
adc
add
or
daa
daa
daa
adc
sbb
daa
daa
daa
and
sub
push
sbb
xor
orl
add
pop
jb
cmp
lahf
mov
gs
lds
jp
pop
arpl
outsl
cs
jp
dec
iret
add
xchg
pusha
jae
das
lds
jl
repnz
pushf
add
nop
int
cmp
mov
sbb
push
in
mov
je
inc
sahf
add
nop
les
insb
and
movsb
inc
repnz
jae
pusha
lods
mov
cmpl
push
fs
mov
sahf
add
rorb
out
fs
jns
int3
lods
ror
cmp
fadds
add
and
jae
iret
loopne
in
cmp
repnz
cwtl
in
mov
lock
fs
clc
sub
jae
sahf
cld
dec
adc
insb
cmp
repnz
mov
test
and
orl
enter
adc
out
sahf
sbb
jns
in
and
add
or
ds
xchg
inc
int
lods
stos
add
cmp
mov
adc
push
nop
sub
arpl
shrb
jg
aaa
dec
xorb
inc
inc
and
dec
pop
imul
jb
ja
nop
push
pop
adc
dec
or
push
outsb
imul
fcmovu
out
jbe
inc
add
lret
iret
jb
addr16
xchg
inc
fistl
push
pop
insl
inc
pop
xchg
adc
cmp
dec
dec
cs
imul
stos
addr16
divb
popl
dec
push
je
jae
jnp
inc
xchg
pop
inc
xor
aaa
xchg
rcll
jae
mov
and
movl
ja
pop
jnp
popa
push
mov
pop
out
outsb
jb
ss
and
ror
les
add
pusha
ja
xlat
outsl
mov
sbb
pop
inc
jne,pn
push
xchg
adcl
xor
pusha
imul
push
mov
pop
and
sbb
ret
mov
outsl
dec
ds
sub
mov
sub
pop
cmovg
fists
pop
adc
mov
and
inc
pop
mov
jae
inc
dec
mov
scas
inc
push
jne
push
stos
jnp
imul
jg
adc
jnp
fcmovnu
xchg
push
roll
mov
aaa
push
inc
cmp
or
lds
imul
push
pop
roll
push
xor
pop
and
push
les
loopne
scas
xor
mov
dec
imul
imul
pop
add
inc
addl
cmpsl
sub
inc
xor
xlat
aad
add
adc
lds
fsub
add
hlt
xor
call
sbb
sbb
out
leave
or
in
sbb
enter
test
popa
cmp
das
call
add
push
int3
es
jns
add
and
adcb
pop
into
xlat
sub
lods
mov
mov
cmp
and
push
xchg
or
sbb
and
test
xchg
add
nop
or
dec
lods
cwtl
push
xor
iret
dec
nop
dec
stos
lock
es
dec
mov
sahf
loopne
call
out
push
sub
pop
es
push
lods
dec
pop
cmp
sahf
inc
inc
pop
and
pusha
add
test
insl
mov
iret
inc
adc
mov
cmp
pop
sbb
cmp
stos
movsl
imul
dec
orl
adc
fmuls
addr16
movsl
fimull
sub
out
push
adc
sub
pop
adc
xchg
mov
adc
mov
push
cmpsl
shlb
pop
fs
js
pop
gs
cmp
mov
push
gs
sub
jp
lahf
insb
gs
sbb
or
je
pop
add
push
add
push
addl
outsl
sub
test
xor
popa
jb
fwait
cmpsb
and
push
insb
cmp
dec
or
push
or
pusha
cltd
lcall
pop
test
bound
push
arpl
insb
insb
or
or
dec
sub
or
cmpsb
into
inc
sub
mov
in
daa
or
je
jae
adc
adcb
xchg
fbstp
outsl
outsl
insb
push
imul
jecxz
or
js
fistl
jbe
add
ss
push
stc
or
or
daa
sub
add
stc
and
stc
sub
adc
sub
pop
pop
mov
insl
sub
push
notb
sbb
and
and
mov
iret
adc
adc
push
push
sti
sub
xchg
sub
fildll
push
outsb
arpl
sbb
fwait
xlat
sbb
ljmp
lcall
cmp
es
adc
cmp
or
sbb
fistl
aaa
xlat
sbb
ret
xor
fsubrs
rcrb
sub
xchg
dec
pop
iret
pop
mov
adc
sbb
xchg
adc
dec
imul
or
pop
sub
scas
adc
shlb
or
mov
inc
pop
mov
mov
push
pushf
push
arpl
aaa
or
mov
movsl
fsub
push
andl
in
cmpsb
hlt
add
aaa
push
data16
int3
lods
add
pop
lret
pop
cmp
and
jo
jbe
jge
ja
jae
sub
repnz
pop
pop
sbb
pop
add
sbb
push
das
addb
sbb
or
or
loopne
or
pushf
push
mov
in
or
mov
aam
xor
cwtl
sub
dec
ret
imul
and
bound
je
and
addb
or
and
cld
inc
inc
xor
adc
push
cltd
pusha
popf
and
fs
bound
pop
in
or
lods
adc
mov
pop
lcall
add
in
xchg
xor
lods
lea
popa
mov
and
sbb
adc
jnp
xchg
insl
sbb
cmp
xor
andl
movsb
lods
inc
push
and
pop
insl
sbb
mov
xor
in
sbb
dec
pusha
popa
jo
sbb
dec
mov
push
bound
addb
lock
out
out
sbb
add
xor
xor
insb
add
dec
push
xor
sbb
jno
xor
inc
and
cmp
add
stos
xor
mov
in
sbb
fistl
sbb
xlat
add
test
sbb
insb
sbb
nop
dec
and
dec
pop
and
daa
add
roll
sbb
fsubs
or
mov
test
nop
fisubl
sub
ja
nop
popa
mov
sbb
jns
outsl
ja
xor
les
push
jo
xor
divl
xchg
or
fdivl
or
in
inc
rclb
mov
das
mull
mov
xchg
pusha
mov
dec
push
inc
pusha
and
push
pop
cltd
int
xor
insl
or
inc
mov
insb
icebp
shlb
push
inc
or
sar
lret
push
lods
xchg
addr16
rcrb
es
push
fs
cmp
adc
in
add
or
xlat
rolb
sbb
or
jbe
outsb
or
push
inc
jecxz
sarl
inc
or
ja
mov
pop
mov
mov
ja
pop
lock
jbe
or
mov
dec
and
in
xchg
and
adc
sbb
mov
or
insl
in
divb
test
sbb
popa
arpl
jae
pop
or
push
inc
jnp
jg
add
inc
daa
mov
xchg
adc
xor
imul
das
xchg
pop
add
sbb
push
or
das
jbe
mov
cmp
push
adc
lea
add
cmp
jb
nop
adc
imul
mov
adc
enter
or
or
sbb
bound
imul
mov
adc
mov
and
adc
inc
xchg
daa
fdivs
and
push
xchg
imul
add
aam
sbb
jne
sbb
pop
ss
cmp
add
in
xorl
inc
je
fisttpll
and
sbbb
xchg
fadds
les
sbb
and
sub
dec
cmpsl
fsubrs
cmpsl
and
lea
insb
mov
and
sbb
sub
jle
push
adc
lods
pusha
mov
push
and
adc
sub
mov
sub
or
or
xorb
adc
cli
daa
cmp
rolb
das
mov
jo
mov
mov
mov
adc
das
outsl
adc
jbe
sbb
sub
outsb
outsl
daa
and
stos
frstor
outsl
mov
mov
inc
or
dec
and
scas
les
daa
or
or
xchg
sub
sbb
sahf
and
aas
or
mov
adc
adc
jb
imul
cmp
adc
loopne
je
inc
xchg
cmpsl
sbb
xchg
dec
jae
jae
fs
push
jae
jae
cltd
nop
add
dec
cs
jae
jae
inc
xchg
jae
lahf
dec
mov
or
adc
movsb
pop
push
adc
add
sbb
sub
xor
sub
outsb
or
cwtl
and
mov
lods
imul
out
popa
insl
jae
pop
insb
adcl
xor
xor
or
lods
adc
stos
aam
sub
pop
add
or
xlat
or
dec
mov
dec
jno
lcall
jae
sbb
mov
sub
add
push
xor
sahf
pusha
jbe
and
das
inc
js
or
loop
add
je
sub
and
push
xchg
in
jmp
or
add
loopne
or
xor
mov
sub
jg
and
xor
jnp
or
mov
mov
fimull
mov
daa
arpl
pop
pop
and
and
pop
and
inc
lods
movsl
jbe
xchg
adc
ret
push
sbb
xor
sbb
pop
pop
push
repz
lods
jbe
cmc
adc
pop
push
stc
xor
fwait
sbb
push
cs
and
xor
lds
mov
repz
ja
pusha
adc
and
or
ret
add
rcrl
rorb
and
cmp
sbb
shll
lret
sbb
mov
xchg
dec
push
xor
pusha
inc
adc
cmp
sbb
mov
pop
push
lods
xchg
xor
adc
lahf
popf
scas
aad
dec
je
xor
add
inc
decl
pop
mov
lock
xor
xor
pop
dec
js
add
addl
sbb
test
rcr
pop
sbb
jo
adc
sbb
mov
inc
decl
pop
jnp
adc
jb
inc
int3
sub
imul
std
and
scas
sarb
scas
and
inc
fldt
xor
out
xcrypt-ecb
cmpsl
or
push
lea
imul
roll
inc
sub
and
add
xchg
mov
sbb
lea
xor
sbb
pop
xorb
test
adc
jnp
adc
xchg
sub
fisubrl
adc
push
fiaddl
insb
sbb
push
cmp
addb
sub
cmp
adc
shll
or
adc
mov
add
daa
adc
sub
push
daa
in
sub
add
xor
aam
adc
test
sbb
mov
stos
push
pop
push
imul
popa
or
and
push
adc
mov
test
movsl
and
pop
pop
mov
je
out
frstor
scas
sub
outsl
xchg
xchg
jbe
movsl
or
push
sbb
adc
dec
adc
ret
shll
add
cmp
mov
fdivs
pop
pop
aam
adc
dec
dec
add
mov
mov
sub
daa
je
pop
shrb
shrb
adc
xor
mov
insb
or
fldl
mov
adc
mov
dec
sub
rol
push
mov
mov
push
sub
test
leave
int
and
fsubs
imul
and
add
dec
sub
movsl
insl
gs
mov
adc
mov
mov
and
push
pop
daa
mov
sub
adc
mov
test
sub
adc
sub
xchg
push
adc
ret
push
dec
dec
jg
fwait
sub
inc
mov
mov
sub
pop
test
ds
outsb
imul
mov
pop
inc
jmp
pop
xlat
cwtl
loop
adc
fldenv
push
xchg
insb
xor
pop
or
dec
movsl
ret
das
sbb
dec
ja
add
jge
insb
jns
push
stos
dec
dec
jle
xor
jp
pusha
sub
arpl
clflush
mov
fldt
jl
ja
xadd
or
mov
jns
stos
inc
jnp
adc
dec
outsb
popa
and
pop
or
ja
jno
mov
ss
sub
mov
dec
addl
inc
fcmovnbe
mov
sbbl
push
add
adc
in
jb
popa
js
js
pop
enter
popa
js
xchg
test
outsb
stos
xchg
outsb
inc
mov
and
push
fdivs
mov
lods
movsl
pop
and
outsb
sbb
push
adc
mov
pop
and
push
jb
out
or
push
rcll
and
cmp
sbb
jmp
and
cltd
add
pusha
pushf
and
xchg
adc
sub
dec
lahf
push
sub
push
lods
pusha
int
and
push
mov
xor
push
mov
pop
cltd
dec
xor
and
popa
in
pushf
nop
js
js
js
sub
sub
mov
xchg
dec
cltd
adc
adc
push
fwait
adc
pusha
jecxz
mov
push
fistpl
rcll
mov
push
mov
fadds
sbb
shll
adc
mov
scas
mov
test
sub
mov
adc
mov
inc
ret
cli
sub
lods
inc
mov
adc
or
fwait
sbb
inc
cmp
sub
imul
rolb
cmp
bound
inc
cwtl
sbb
pop
and
jbe
cmp
or
push
xor
and
sub
and
nop
inc
and
sub
pop
rcrl
and
scas
sbb
lea
adc
loope
pop
or
add
xchg
push
insb
push
sbb
cmp
xorl
adc
sbbb
cmp
jmp
jae
aas
mov
orl
add
add
stc
inc
das
push
pop
or
ljmp
xchg
decb
inc
jl
push
sbb
adc
pop
fwait
scas
jae
pushf
mov
and
adc
sti
xchg
movsb
jl
dec
data16
test
or
push
lret
add
cmp
cmp
pop
push
fdivp
push
enter
cmp
hlt
pop
orl
jo
inc
jns
mov
inc
and
jne
lret
fdiv
mov
cmp
out
push
arpl
jp
aaa
insb
out
lods
or
sbb
or
mov
imul
mov
cmp
add
outsl
mov
pop
xchg
clts
jns
enter
push
dec
pop
sub
jns
je
pop
inc
cmp
in
movsl
pop
xor
leave
and
and
sbb
jns
enter
add
fs
inc
cltd
in
xor
leave
gs
popa
lods
stc
inc
jns
enter
addr16
xchg
inc
push
jne
push
mov
xor
jo
cmp
jns
imul
stos
js
out
insb
mov
jns
jb
mov
roll
push
push
mov
inc
inc
push
clc
add
and
imul
out
imulb
fwait
outsl
fiaddl
popl
pushf
and
inc
inc
pop
adc
inc
add
push
pop
and
sub
pop
add
add
adcb
mov
dec
add
lret
add
cwtl
adc
ljmp
xchg
sbb
in
lea
jne
push
mov
push
in
sbb
and
fcomip
mov
adc
movsb
gs
sbb
or
sub
adc
lds
insl
dec
sgdtl
imul
test
mov
sbb
insb
adc
out
sbb
cmp
xor
movsb
dec
and
add
cld
js
call
stos
xchg
adc
push
jns
sub
xchg
enter
cmp
das
lods
jl
push
iret
das
nop
enter
dec
inc
loope
pop
popf
lock
inc
fwait
rcl
arpl
pop
sti
add
xor
mov
arpl
ljmpw
and
sub
nop
pop
mov
faddl
ds
dec
adc
add
push
adc
push
sub
mov
sbb
push
add
inc
cmp
cs
nop
pop
or
lock
push
outsb
pop
jbe
nop
subl
fs
push
cmpb
or
repnz
mov
adc
inc
xchg
das
cmp
pusha
scas
add
fs
add
enter
add
inc
and
add
inc
lock
je
roll
das
add
repnz
outsl
xor
enter
dec
mov
xor
mov
mov
dec
jl
lcall
and
stos
rclb
outsb
add
fwait
pop
inc
loopne
inc
jae
or
jne
nop
arpl
add
es
test
cwtl
test
pop
or
pushf
dec
push
inc
jns
movsb
sub
sub
movsb
xchg
adc
in
xchg
inc
or
push
pop
push
lock
add
jne
sbb
in
popa
push
fimuls
movb
mov
movhps
xchg
stos
popf
adc
or
mov
andl
adc
lods
movsb
ss
or
xchg
mov
or
insb
fdivs
fwait
xor
sub
jne
and
ljmp
bound
jne
mov
aaa
insb
or
iret
mov
bound
push
js
push
in
or
bound
cs
sub
popa
cmpsl
insb
and
mov
ja
and
xchg
cmp
jb
arpl
jae
ljmp
repz
aaa
into
out
stos
outsb
fisttpl
aam
insb
das
adc
and
dec
mov
pop
push
pop
jnp
inc
popa
scas
push
jb
movsl
ss
dec
arpl
jns
outsl
push
fwait
jbe
pop
jns
add
pop
push
mov
ja
and
sbb
or
xor
punpckhbw
sub
fbstp
ret
push
test
adc
pop
inc
movb
fs
push
ljmp
je
lds
imulb
dec
mov
or
and
or
mov
call
pusha
das
push
sbb
mov
ds
cmp
add
xchg
jecxz
bound
mov
jne
jne
shr
mov
and
fcmovb
cmpl
jnp
cmpb
es
sub
call
sti
and
mov
mov
add
inc
mov
xor
adc
fildl
pop
js
push
ret
xor
xchg
mov
lods
mov
aam
xchg
mov
popf
in
insb
or
mov
fildll
inc
cmp
jne
outsl
lret
ret
and
add
iret
icebp
movsl
leave
pusha
sub
mov
into
add
shl
insb
sbb
insl
jmp
and
rcll
sbb
inc
les
in
movsl
fwait
inc
jo
fwait
cmpsl
or
or
or
lods
ss
aas
xlat
test
outsb
sub
add
fwait
mov
xchg
push
mov
movntq
sti
adc
loope
inc
mov
mov
inc
nop
rorl
sub
stc
dec
movb
adc
add
rcrl
inc
jb
adc
movsb
into
or
and
sub
inc
mov
or
ret
ja
jo
movsl
lods
dec
or
and
add
daa
sbb
repz
out
nop
mov
aas
add
xor
repz
add
xor
pop
and
and
cmp
xchg
and
adcb
lods
mov
rcl
push
pop
and
in
add
push
repnz
push
sbb
and
lea
pop
push
add
jo
jo
add
nop
add
xchg
cld
daa
mov
or
or
shll
push
movups
dec
shll
push
pop
xor
shll
sbb
sbb
push
icebp
fistps
and
and
test
jno
cmpsb
imul
imul
movsl
imul
shll
push
dec
shll
shl
shll
push
push
sbb
inc
shll
daa
jbe
aas
test
add
push
add
add
jae
sbb
add
or
adc
adc
and
cmpb
sbb
or
xor
sbb
sbb
cmpb
push
or
and
and
cmpb
sub
sub
xor
iret
adc
adc
add
or
cmp
xor
iret
adcb
enter
sbb
iret
cmpb
push
repnz
xor
push
sbb
cmpb
pop
sbb
iret
pusha
ja
push
popa
imul
pop
bound
arpl
inc
sahf
and
inc
sahf
inc
sahf
and
addr16
xchg
inc
sahf
and
psadbw
rorl
sbb
xor
les
gs
imul
bound
pop
xchg
xor
neg
adc
insl
dec
insb
mov
and
adc
pop
push
jne
clc
sub
ret
fsubs
pop
test
jo
jae
lds
fildll
jl
cltd
adc
mov
and
dec
add
clc
push
adc
push
aaa
enter
in
stos
insb
test
cmc
xor
rclb
pusha
add
rcrl
or
xchg
hlt
sub
cmp
cld
mov
mov
sub
arpl
dec
push
mov
add
or
pop
jge
mov
rep
push
loopne
faddl
and
add
outsb
push
jbe
aad
and
jnp
xor
shrb
adc
lods
test
inc
push
mov
dec
push
test
sbb
mov
pop
inc
push
xrelease
or
pop
loopne
sti
and
out
je
xor
xor
push
and
xchg
or
jl
push
inc
cmpb
js
mov
adc
lock
push
inc
pop
adcl
mov
push
pop
mov
aas
add
add
or
mov
adc
add
outsb
test
repnz
addr16
mov
fs
mov
xor
push
jns
or
inc
inc
outsb
push
adc
and
inc
or
es
fists
inc
mov
add
xor
or
push
aas
mov
cmpsl
push
inc
add
jg
jp
adc
xorps
shll
or
testl
cmpsb
nop
mov
add
add
mov
xorps
add
ds
jo
jns
jo
sbb
push
push
push
cmpsl
cmp
sub
dec
outsb
arpl
sahf
mov
and
mov
push
jns
and
rorl
pop
fmuls
leave
shr
push
fidivl
pusha
xor
pop
inc
ret
cwtl
add
xor
cmp
outsb
out
xchg
rolb
stos
sahf
inc
cmp
daa
imul
adc
cli
push
jbe
jl
fs
or
push
dec
jb
push
cmp
call
stos
adc
jbe
sbbb
push
push
loop
mov
add
fisttps
xchg
mov
cmp
mov
filds
pop
subl
shlb
xchg
dec
das
mov
add
pminub
or
cmp
pusha
mov
pop
mov
mov
in
jg
xor
push
stos
outsl
pop
and
lods
dec
inc
lret
jae
push
or
pop
add
sub
jo
adc
push
adcb
mov
jne
jecxz
mov
adc
or
mov
mov
mov
in
andb
inc
lret
cs
mov
inc
testb
xor
xchg
scas
ret
mov
shlb
cmc
lcall
sbb
ljmp
cmpsb
jne
pop
mov
push
mov
xor
lds
mov
daa
dec
push
dec
push
or
adc
imul
mov
stos
adc
aaa
adcb
sarb
xchg
fisubrl
adc
pop
inc
inc
or
adc
add
outsb
mov
push
inc
stos
das
adc
sbb
pop
push
loope
push
pop
cmpsl
shll
push
lahf
lret
es
dec
scas
imul
enter
adc
add
bound
mul
pop
lea
cs
lahf
sub
aas
push
dec
shlb
sub
add
ljmp
fadds
sbbb
push
sbbb
inc
adc
ljmp
and
cmp
jp
pusha
inc
or
or
add
add
fbld
inc
jo
ja
aad
xor
cmp
aam
daa
push
mov
outsl
mov
inc
ja
outsb
push
rorb
inc
add
out
test
sbb
inc
inc
pop
and
gs
mov
sub
das
adc
pop
mov
or
push
or
mov
test
pop
or
sbb
repnz
cmpsl
push
adc
mov
scas
sbb
call
push
ljmp
out
or
inc
adc
fists
je
lods
xchg
pop
push
pop
mov
inc
inc
mov
es
jae
stos
push
addr16
idivl
inc
fmuls
xchg
push
inc
pop
add
arpl
stos
outsl
pop
pop
or
mov
test
pop
cmpsl
mov
pop
insl
pop
cmpsl
adc
cmpsb
popl
push
pop
movzwl
orb
aaa
adc
addb
aas
pop
push
pop
stos
es
fildll
shll
or
stos
in
out
push
mov
xor
testl
cmpsl
fcoml
inc
xchg
insl
pop
push
jle
pusha
add
dec
lods
add
pop
or
xchg
mov
xchg
je
fwait
lea
sbb
pop
mov
lahf
xlat
imul
add
sub
sahf
adc
je
mov
pop
popa
dec
jno
iret
aas
push
mov
stos
or
testl
pop
call
stos
imul
or
adc
sbb
pop
imul
jae
js
test
jle
test
sbb
addr16
stos
loopne
daa
inc
ds
cmp
xchg
pop
bound
cmp
jle
add
dec
lahf
out
lea
cld
xchg
popa
mov
andb
loop
mov
iret
xor
int
mov
lds
js
in
mov
add
pop
push
fists
fwait
fimull
push
push
push
push
fidivrl
dec
out
push
int3
and
and
xchg
or
mov
dec
xor
cs
mov
std
cmp
mov
lahf
and
jb
push
push
add
lods
mov
add
xchg
cmp
xchg
dec
add
jg
push
mov
sti
push
xchg
dec
push
push
jno
push
jl
inc
repnz
push
mov
push
int3
jnp
rcll
mov
aad
push
ja
out
xchg
mov
sar
add
dec
sbb
imul
in
xchg
sbb
add
inc
and
xchg
mov
inc
xor
mov
pop
add
cmp
push
adc
add
sbb
inc
std
adc
scas
movb
movl
fsubl
nop
adc
cmp
inc
cmp
push
xor
push
jg
mov
fcompl
push
mov
mov
and
sbb
jle
out
cmp
add
in
sbb
nop
dec
out
inc
lods
fwait
mov
push
aam
adc
js
iret
add
sbb
push
inc
cmpsb
or
in
loop
fmul
xchg
add
fcompl
pop
mov
stos
je
aaa
mov
cmp
xor
inc
inc
stos
add
lods
cmp
xorb
leave
or
cmp
nop
loope
cmp
cmpsb
cmp
adc
push
xor
xchg
and
mov
inc
or
pop
testb
fstpl
cmpsl
fidivrl
xchg
dec
setno
in
testb
out
push
xchg
sbb
push
lods
xchg
ret
popl
lock
mov
jg
push
xchg
cs
or
lcall
mov
xchg
sbb
sub
adc
add
cmpsb
xchg
jmp
or
and
mov
mov
shr
rorb
mov
jecxz
add
js
adc
stc
sbb
ss
push
adc
inc
dec
push
imul
pop
cmpsb
push
sub
add
pop
or
jb
je
cmp
outsl
aaa
push
push
inc
and
cld
insb
ljmp
xchg
fwait
insb
and
xchg
dec
or
inc
pop
xchg
and
xor
cltd
push
mov
mov
sub
inc
inc
push
aad
mov
dec
push
mov
mov
fcoml
mov
fstl
mov
inc
fsubl
pslld
pop
push
xchg
nop
dec
jne
sub
push
sub
pop
in
loope
xchg
cs
adc
test
cmpsb
leave
and
nop
ja
loopne
add
sub
push
push
dec
dec
repnz
pop
enter
inc
xchg
int3
mov
add
ss
jno
mov
xchg
cmp
cltd
clc
cltd
inc
cmp
in
out
clc
add
lcall
push
inc
push
dec
adc
push
fcmovnb
inc
jge
sub
imul
cmp
cmp
sub
fldl
inc
sbb
sbb
popf
and
mov
xchg
sub
dec
fmuls
mul
test
in
push
fcmovne
outsb
das
sbb
das
or
inc
xchg
test
add
pusha
out
lcall
lret
xchg
add
sub
cld
sbb
xor
xchg
dec
lret
lock
inc
cmc
add
jno
inc
lcall
and
or
mov
mov
imul
xchg
cltd
inc
insl
push
cmpsl
mov
nop
inc
in
test
dec
jmp
dec
or
add
call
repnz
push
cltd
clc
xchg
enter
mov
sbb
and
mov
mov
incl
jmp
shlb
movl
inc
sub
andl
in
addl
and
lahf
sti
mov
and
cmp
cwtl
sysexit
push
lods
bound
mov
jecxz
xor
cmpb
mov
pop
cmpl
or
adc
adcb
sbb
ret
divl
and
add
adc
fsts
adc
and
sbb
roll
and
push
add
push
jo
movsl
rclb
mov
inc
or
int
xor
negb
cltd
adc
sub
cmp
xchg
mov
mov
cmp
and
ficompl
icebp
jle
icebp
xchg
xchg
insb
mov
ret
inc
cmp
push
sbbl
push
test
test
popa
and
sbb
inc
fadds
cmp
lcall
sbb
adcb
sbb
add
push
cmpsb
sub
loopne
imul
mov
cmp
or
sub
fsubl
imul
sbb
sbb
call
push
xchg
aas
insl
cmpsb
push
fwait
jle
inc
pop
and
clc
pop
mov
mov
adc
inc
rcr
mov
mov
adc
push
lods
loop
into
cmp
lcall
dec
inc
int3
mov
or
pop
mov
test
lret
dec
pop
pop
daa
dec
inc
test
jle
dec
add
inc
fwait
pop
sbb
xchg
aaa
cmp
or
addr16
sub
push
cmp
sub
out
push
inc
mov
loopne
cmpsl
cmp
dec
arpl
push
sbb
cmpsl
dec
out
nop
xchg
mov
popf
inc
mov
pop
xor
cmc
and
push
loop
fdivrl
imul
xchg
clc
sbb
imul
clc
rcl
popf
dec
movsb
cmp
sub
movsl
add
push
xchg
add
icebp
push
popa
mov
mov
inc
das
ret
jmp
push
sub
ret
xor
push
mov
xorb
xor
sbb
aaa
enter
push
xchg
mov
nop
das
ss
xor
mov
pop
xchg
popa
int
push
inc
test
cmpb
jl
inc
js
fcompl
enter
sbb
mov
shrb
pop
xor
pop
pop
xorb
push
int
pusha
iret
sahf
ret
push
cmp
cmp
adc
clc
adc
and
shlb
mov
scas
adc
sahf
lret
or
negb
cmp
cmp
mov
and
nop
sarl
cmp
arpl
pusha
test
sbb
mov
sbb
pop
push
je
outsb
jae
test
or
add
add
mov
test
mov
mov
lock
aaa
add
add
xchg
sbb
inc
test
fisttpll
cmp
cmc
enter
jae
add
pop
stos
xchg
add
in
adc
imul
adc
mov
or
mov
inc
sub
jnp
adc
movsb
pop
shr
test
pop
outsl
mov
xor
xor
mov
inc
sbb
mov
cwtl
stos
xchg
rorb
cmovns
and
test
jb
push
movsb
lods
sub
rcrb
xor
adc
mov
nop
cwtl
and
adc
sub
dec
add
icebp
mov
dec
int3
sbb
dec
in
sbb
and
sub
xchg
dec
xor
push
jbe
lock
jnp
and
insl
outsl
outsl
pop
outsl
sbb
icebp
push
fwait
or
jmp
popa
and
fistl
jbe
inc
dec
addb
sbb
movsb
pop
dec
or
pushf
xor
push
and
aad
cmp
std
cmp
sub
mov
mov
xchg
popa
daa
inc
dec
imul
outsl
or
xchg
mov
xor
push
test
mov
and
xchg
clc
lret
mov
movsb
xor
adc
inc
dec
mov
int
add
push
xchg
sbb
bound
jp
pop
add
add
pop
sub
or
mov
push
jno
mov
ja
mov
pop
dec
int3
adc
adc
leave
incl
mov
ljmp
inc
inc
jb
and
sbb
mov
cmp
lea
mov
adc
sub
imul
push
pop
inc
push
dec
push
inc
jb
sub
in
sub
push
adc
or
adc
ret
cmp
jecxz
mov
call
or
push
je
pop
push
sbb
and
leave
add
das
mov
or
int
shlb
psubb
daa
mov
pop
fsubl
mov
ret
jmp
push
movsl
or
xchg
xchg
xchg
xchg
sub
insb
mov
in
mov
mov
scas
add
in
adc
sbb
or
xchg
inc
push
adc
push
cmpsb
lods
push
rorl
sbb
jg
cmpsb
test
ja
or
insl
push
fs
popa
js
nop
pop
pop
mov
cmpsl
dec
stos
push
push
fwait
dec
repz
test
loop
push
cmp
adc
pop
or
movsb
in
stc
incl
and
or
push
add
fnstsw
fcoms
roll
movsb
pop
pop
and
or
je
addb
int3
dec
mov
and
jns
sti
pop
xorb
sbb
push
aam
sbb
jg
pop
in
mov
cmpsl
lcall
movl
lock
xchg
rclb
sti
lcall
sbb
and
cs
sub
scas
sub
dec
shlb
fists
sbb
out
pop
rcrl
nop
call
scas
fidivrs
adc
sbb
push
push
pop
or
loopne
lods
pop
pop
pusha
je
call
pop
sub
xchg
xor
or
pop
aam
rcrl
push
pop
fs
sub
add
or
stos
xchg
movsb
adc
aas
subb
sub
jl
int
mov
ljmp
test
ss
xchg
add
shlb
fwait
mov
fwait
sbb
mov
loopne
dec
test
cmp
dec
push
fsubrl
mov
push
cmc
adc
inc
rep
mov
rolb
sub
in
pop
cvtps2pd
adc
fiaddl
xchg
pusha
adc
popa
dec
pop
leave
movl
dec
aam
dec
sahf
pop
and
lods
adc
xchg
sub
jo
add
pop
or
mov
or
stos
dec
outsb
push
sbbl
cmp
or
add
xor
push
adc
adc
sub
mov
insl
push
in
rol
rorb
dec
adcb
push
xchg
out
jmp
inc
adc
mov
inc
xchg
and
adc
or
lret
dec
mov
cwtl
cmp
adc
nop
stos
sbb
cmpsb
ror
dec
add
mov
inc
jne
sub
cs
daa
rolb
rorl
jo
inc
call
sub
es
rclb
mov
fildl
daa
stos
mov
adc
mov
pop
faddl
movsl
nop
lcall
out
mov
das
mov
arpl
incb
mov
stos
in
or
mov
decl
loope
int
rcrl
lods
adc
outsl
jo
pusha
pusha
sbb
sbb
lds
push
iret
push
xchg
xchg
push
lods
sub
ds
sbb
jg
adc
jnp
sub
in
add
or
adc
int3
or
or
or
ja
movsl
lods
sub
dec
cmp
int3
nop
mov
mov
cmp
cmp
sbb
mov
js
xchg
mov
lahf
lods
sub
or
ja
shlb
shlb
in
mov
push
das
loopne
mov
outsl
push
arpl
mov
or
fisubs
lods
lcall
add
cmp
mov
lea
jo
adcb
push
subl
adcb
lods
in
gs
pop
ret
jno
fmuls
or
lods
loopne
fs
mov
js
cld
imul
or
sbb
in
push
out
scas
scas
cmp
xchg
pushf
pop
cmpsl
xor
push
mov
in
inc
scas
adc
xor
or
pop
sarb
mov
xchg
dec
push
sub
add
movsb
add
scas
fstpt
adc
adc
xchg
inc
loopne
icebp
imul
push
push
movb
xlat
mov
or
je
cld
inc
dec
iret
scas
adc
dec
add
adc
push
mov
dec
imul
arpl
xor
add
rcr
xorl
pop
add
jns,pt
imul
or
or
mov
push
rcrb
pop
fidivl
jmp
fbstp
mov
xor
inc
and
cmp
fcmovb
jbe
adc
and
push
dec
xchg
mov
or
bound
mov
gs
pop
fcmovb
add
mov
push
imul
sub
mov
push
add
emms
inc
xchg
iret
adc
insb
stc
movsl
or
divl
mov
add
add
sub
mov
daa
ss
inc
xor
icebp
xor
dec
add
pop
add
pop
inc
mov
fnsave
add
inc
mov
sub
dec
shll
insl
and
lret
inc
pusha
sbb
bound
pop
pushl
push
repz
xchg
cmp
lahf
mov
xor
push
cmpb
push
adc
sub
lret
dec
xchg
pusha
movsl
sub
loopne
dec
or
sbb
pop
movsl
popa
test
and
mov
add
scas
xor
and
cmp
shr
pop
dec
das
inc
xor
out
and
repnz
hlt
push
mov
pop
push
popl
enter
push
jae
mov
cmpsb
call
or
push
lds
leave
sub
mov
and
inc
sub
and
inc
add
add
mov
sbb
adc
inc
mov
push
imul
fistl
fistl
push
cltd
imul
repnz
cmp
test
repnz
mov
add
cmp
repnz
mov
cmp
loop
add
jecxz
adc
jl
mov
inc
int3
mov
cmp
es
pop
fidivl
pop
or
arpl
andb
push
and
icebp
lcall
mov
push
xor
loop
mov
dec
mov
call
cmpsl
pop
sub
repz
lahf
int3
pop
les
inc
pop
mov
pop
xor
aam
adc
stc
lahf
aam
cld
add
sub
pop
cmp
or
cmp
mov
scas
sbb
aam
pop
ds
in
sub
bound
rolb
repnz
xchg
pop
addb
and
leave
insl
sbb
xchg
call
shlb
xor
mov
test
cs
push
pop
sti
add
and
mov
js
int3
or
js
inc
add
xchg
cmpsb
test
jbe
sbb
xor
inc
and
add
std
outsb
add
cltd
das
rcll
das
push
mov
fwait
push
and
xor
cmpsl
sub
jae
mov
add
sahf
push
or
cmp
inc
lahf
add
stos
sub
and
mov
xor
repnz
aam
cmp
mov
rorb
cmp
push
lret
cld
or
mov
inc
add
in
xchg
add
mov
cmp
sbb
dec
xor
sub
std
or
jl
insl
and
sbb
push
cmp
call
push
pop
and
nop
inc
nop
mov
test
add
mov
pusha
enter
mov
dec
rcll
jnp
shlb
or
sbb
add
cs
or
mov
jno
sub
gs
sbb
push
popf
push
loopne
adc
enter
ljmp
cmpsb
cmc
jno
push
adcb
daa
push
sahf
sbb
mov
xchg
mov
or
insb
xchg
xor
in
sbbl
or
pop
into
sbb
mov
push
adc
ret
and
sub
sub
and
or
adc
pop
jnp
and
insl
push
cmp
add
cltd
out
cmp
inc
xchg
xchg
es
or
nop
out
test
mov
adc
aad
adc
rorb
inc
inc
inc
sbb
mov
pop
and
std
test
xor
sahf
lea
or
push
fsubl
and
push
les
or
cmp
fldt
xchg
ret
xor
inc
notl
xchg
pop
ds
mov
or
inc
fcompl
sub
and
add
mov
insb
cmp
push
and
rclb
jo
jge
ret
cmp
nop
in
addr16
jbe
ret
xchg
cmp
int3
push
mov
rorl
mov
push
addr16
cmp
aaa
xor
sbb
ja
aad
sbb
jle
aam
xlat
loope
inc
and
inc
popa
int
and
rorb
das
sahf
in
neg
push
add
push
shll
lret
mov
aad
stc
mov
in
sahf
ret
mov
push
jns
and
dec
add
add
sahf
movsl
mov
repnz
les
inc
add
aas
inc
mov
leave
stc
clc
or
call
sldt
jg
aaa
add
push
daa
inc
mov
or
push
fstl
out
add
add
add
xlat
push
or
add
sbb
decl
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
ljmp
ljmp
ljmp
jmp
call
call
out
into
aas
jl
or
and
fiaddl
outsl
mov
cs
sarl
shll
cmpsb
pop
in
js
shlb
dec
cld
jne
jbe
sub
and
pop
js
push
daa
jns
jae
ss
jp
mov
pop
jl
jge
lods
stc
ss
pop
inc
call
mov
pop
rcrl
dec
push
dec
fstpt
test
push
sub
lret
xlat
lcall
test
insb
sahf
mov
mov
push
pop
cmp
insb
mov
cmp
pop
cs
imul
enter
cmp
jo
test
cs
loopne
xor
mov
je
dec
xor
cwtl
popl
or
sub
sub
lds
cwtl
fsubrl
or
add
bound
cmpl
jb
cmpb
inc
insb
imul
mov
cwtl
inc
cmp
or
and
rolb
sub
inc
xchg
gs
lds
loop
add
addr16
add
cltd
add
add
adc
rolb
inc
push
fcmovu
rolb
pop
lea
jo
aam
aam
push
ret
add
or
push
cmp
xchg
add
nop
scas
add
push
lds
sub
push
push
arpl
mov
sbb
push
cwtl
scas
xor
xchg
add
and
dec
mov
popl
lds
push
and
cmp
pop
rclb
push
loope
pop
mov
sbbb
jecxz
iret
fsts
insb
push
or
roll
mov
sub
loope
loope
inc
push
in
dec
inc
jae
mov
cmp
rorb
adc
test
sbb
fwait
imul
inc
dec
insb
push
or
pop
mov
adc
push
sub
stc
in
pop
xchg
lret
inc
inc
add
dec
addr16
jno
push
cmp
out
into
insl
mov
sub
xor
call
push
pushf
dec
add
fs
shll
push
loope
ss
nop
sbb
in
dec
roll
mov
pop
std
stos
lds
xchg
stos
sub
pop
sub
or
pop
xor
popa
or
mov
push
push
lock
inc
lcall
xchg
add
fstpt
sbb
mov
aad
adc
inc
movb
and
daa
daa
mov
xchg
xchg
xchg
xchg
add
inc
fs
xchg
xchg
xchg
xchg
leave
enter
jnp
enter
ret
jmp
ljmp
lds
mov
fmuls
sbb
mov
jae
or
dec
jl
or
or
fidivrl
mov
pop
loopne
outsl
outsb
loopne
call
push
mov
push
sub
dec
nop
add
mov
or
dec
push
xor
dec
push
or
inc
sub
push
mov
imul
cmovs
xchg
inc
aam
xchg
push
lret
push
adc
dec
and
loop
jne
je
mov
or
ficoml
fs
mov
xchg
pop
adc
xor
push
or
dec
sub
jl
dec
movsl
jne
popf
incl
sub
pop
outsb
incl
adc
push
xchg
add
movsl
xchg
inc
push
call
push
push
mov
mov
dec
dec
mov
hlt
cmp
dec
int3
xor
in
shlb
movsl
sub
dec
mov
shlb
mov
push
inc
or
shlb
sub
incl
mov
push
mov
pop
cmpsl
xchg
rcrb
add
addb
lret
in
test
sbb
lret
sbb
and
in
mov
dec
add
jae
xor
and
scas
push
jp
lds
add
pop
dec
loop
in
insl
mov
add
xchg
and
xchg
and
ja
and
xor
dec
in
sub
imul
enter
sbb
mov
inc
cmp
mov
dec
push
push
loopne
add
add
and
aad
add
scas
mov
cwtl
dec
sbbb
je
adc
test
test
push
popf
mov
loope
jo
mov
cmc
sub
lsl
je
jg
or
addb
sbbl
cmp
mov
and
sbb
sbb
popa
outsl
and
cs
and
xor
and
inc
popa
orb
add
mov
inc
sbbb
nop
or
dec
xchg
cmp
or
sbbl
in
and
mov
sub
push
dec
mov
add
mov
add
cmp
add
xchg
inc
and
gs
and
popa
or
and
and
pop
roll
imul
xchg
xchg
push
test
inc
repnz
sbb
mov
and
sahf
xor
or
dec
fldl2t
imul
popa
in
xchg
es
add
sub
push
push
push
shll
pop
push
inc
dec
sahf
jo
fcoms
mov
add
sti
push
pop
jb
mov
popa
stc
cmp
xchg
sub
add
lods
js
sub
add
mov
jae
sub
xchg
sub
scas
inc
push
popa
sbb
sbb
mov
pop
cmp
push
mov
loope
or
lock
loopne
mov
cmp
repz
out
sub
or
jo
dec
lods
enter
leave
sub
xchg
inc
xor
repnz
iret
inc
ja
movl
inc
mov
add
inc
cmp
les
add
jo
cmpsl
xor
jb
adc
xor
into
out
and
lds
mov
xor
push
jns
dec
inc
cmp
out
add
jno
pop
iret
jns
sbb
mov
enter
stos
mov
inc
or
sub
cmp
shll
push
push
or
adcb
sbb
mov
jo
cwtl
sbb
icebp
cmp
cmpsl
lock
rorl
adc
add
add
ret
lock
movsb
and
in
or
xchg
mov
mov
mov
outsb
mov
dec
daa
adc
outsl
or
inc
daa
in
inc
add
mov
mov
nop
out
adc
inc
add
loopne
movsl
sti
ficoml
jge
les
dec
push
or
inc
lods
imul
inc
or
lods
inc
ss
or
adc
cmpsl
dec
push
pop
cmp
add
mov
push
sbb
orb
cmp
sbb
addr16
add
nop
xchg
mov
rol
sbb
xor
mov
dec
inc
pushf
inc
mov
or
fmuls
jle
in
cld
mov
push
stc
dec
add
or
push
stos
mov
test
ds
dec
and
push
jo
pop
xor
adcl
test
popf
nop
inc
clc
dec
jl
cwtl
orl
ret
into
push
rorl
or
and
out
xor
lock
movsb
repz
pop
dec
add
outsb
push
xor
int
sbb
addl
sbb
punpckhwd
push
iret
push
inc
daa
iret
mov
or
xchg
push
jmp
ffree
pusha
push
rclb
sbb
or
stos
push
push
fimuls
adc
pushf
dec
iret
jo
clc
sbb
xor
dec
lcall
push
dec
dec
fidivl
adc
loopne
shlb
fs
xchg
clc
cmpsl
mov
add
inc
arpl
inc
iret
test
sbb
inc
int
lcall
or
adc
adc
or
pop
push
push
or
inc
enter
push
mov
mov
pop
inc
nop
je
inc
push
shl
lock
pop
sbb
cmp
int
fadds
jo
and
or
sbb
loop
sub
jecxz
insb
dec
pop
sbb
aam
int3
sub
pushf
xchg
aas
lea
pop
stos
jecxz
rol
enter
push
sub
xchg
nop
cmp
mov
sahf
dec
xor
bound
out
xor
enter
sbb
dec
jecxz
rcl
adc
dec
or
jge
out
mov
dec
repz
adc
orb
pusha
and
data16
rclb
addr16
stos
dec
push
addr16
or
popa
hlt
push
sbb
orb
outsl
dec
jae
popf
loopne
js
xchg
imul
mov
push
shlb
faddl
shrb
sub
fldcw
mov
lahf
jmp
lock
push
jno
insb
sahf
xchg
xor
xor
xor
outsb
dec
jne
push
inc
data16
push
add
das
push
jl
cmp
mov
or
mov
cmp
int
daa
daa
daa
iret
or
cmp
daa
ret
mov
leave
leave
leave
leave
xor
mov
sar
iret
sbb
in
in
lea
in
rcrb
inc
bound
jb
xchg
cmp
rcll
ss
jge
cmp
cmp
pushf
pushf
pushf
aas
arpl
pushf
shl
rcll
cmp
dec
dec
pop
andl
in
aam
xor
daa
daa
daa
jge
aad
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
mov
leave
leave
leave
sub
lcall
xlat
or
in
in
jne
mov
add
push
arpl
jb
lahf
lds
fmul
push
fsts
or
xchg
xchg
xchg
test
ficoml
leave
add
inc
pop
push
addr16
or
xchg
push
sub
es
aam
jb
je
push
lods
mov
or
mov
xor
or
mov
cmpsl
mov
aas
fisubs
cmpsb
or
push
dec
dec
dec
aad
cmpb
pushf
movsb
inc
xchg
pushf
xchg
in
jg
xor
push
fists
or
pushl
mov
adc
cbtw
sub
mov
repz
cltd
pusha
rorb
scas
xchg
push
pop
xchg
jl
adc
cmp
nop
xor
insl
mov
pop
cltd
arpl
sub
or
adc
cltd
pop
addl
pop
addb
addr16
fucomip
push
call
adc
jne
and
inc
jmp
aas
mov
mov
xor
add
xor
mov
les
or
cli
push
sbb
pop
sbb
sbb
or
sub
leave
xchg
xchg
shl
add
ret
leave
leave
leave
inc
arpl
les
sub
and
xchg
dec
xchg
aad
mov
or
cltd
mov
test
cltd
mov
add
inc
js
mov
and
mov
and
or
xor
xor
pop
push
in
popa
push
stos
adc
dec
cs
pusha
sbb
cmp
inc
jne
loop
jge
sbb
pop
jno
xchg
cld
mov
jne
push
in
add
lock
or
int3
adc
loop
add
pop
jmp
arpl
jecxz
mov
adc
pop
or
ss
inc
or
cmpsl
xorb
sbb
dec
add
mov
in
push
push
es
daa
out
mov
mov
pushf
test
cmpl
inc
push
push
dec
out
sub
xchg
movsb
sbb
lret
jo
cmp
or
sbb
pushw
loop,pn
imul
popa
jns
cmp
pushl
popa
sub
daa
or
adc
inc
insl
or
das
xor
in
and
das
pop
dec
xchg
aad
das
pop
fimuls
sub
in
xor
add
xor
leave
cmp
xchg
loope
mov
inc
or
fwait
insb
mov
jbe
into
adc
and
or
sti
das
jb
sub
dec
sbb
cs
xchg
add
inc
ret
push
cmpsl
pop
adc
insb
sub
cmp
test
sub
adc
das
mov
fidivl
jg
add
mov
stos
nop
icebp
and
cmc
arpl
or
clc
xchg
lds
sub
or
mov
stos
lea
popl
pop
sbb
adc
cmp
jo
loope
in
jmp
sar
fimuls
subl
or
into
test
iret
cli
fs
inc
sahf
call
adc
jmp
leave
or
sbb
fwait
sbb
push
mov
mov
inc
and
mov
or
mulb
sbb
or
push
push
jge
stos
push
lea
aad
rorb
pop
mov
pop
push
loope
add
add
pop
push
filds
add
out
add
jmp
xchg
adc
outsb
stos
mov
sbb
lods
adc
fsubrs
add
lods
and
pop
add
pop
lods
jl
push
xor
sub
test
and
jbe
outsl
add
jb
jb
adc
pop
cmpb
jb
test
stc
in
pop
cmp
cmp
inc
insl
xchg
mov
loopne
or
push
pushf
pushf
pushf
pushf
jle
out
dec
dec
mov
or
dec
dec
dec
xchg
mov
daa
daa
daa
cs
ja
push
and
cmp
push
movzbl
rolb
dec
xor
rolb
pop
ficoml
setae
gs
jo
fisttps
jmp
or
cs
pop
mov
int3
push
loope
cwtl
fcom
addl
fstl
incl
loope
in
or
or
add
test
xchg
in
nop
add
loopne
pop
iret
stos
or
cltd
add
jbe
inc
nop
or
xchg
mov
sub
dec
hlt
cmp
popf
sahf
or
inc
nop
stos
dec
or
es
popa
inc
pushf
andb
rorb
adcl
mov
movsb
test
xchg
mov
mov
in
xchg
test
test
pop
adc
addb
test
inc
mov
lods
dec
mov
adcb
loop
stos
test
and
xchg
adcl
xchg
mov
or
adc
mov
cwtl
sahf
mov
add
es
or
dec
inc
sbb
shrl
and
daa
ljmp
adc
repz
mov
loopne
movsb
add
daa
es
dec
notl
add
mov
or
sub
es
movsb
mov
push
icebp
push
xor
xor
push
sub
pusha
cld
mov
lret
movsl
and
adc
cs
mov
adc
inc
addr16
addb
xor
stos
movsb
test
imul
xchg
add
pop
mov
cmp
or
in
add
inc
pop
add
insb
ja
test
imul
popa
enter
add
push
ds
das
lahf
cmp
xchg
dec
and
movsb
pop
dec
lea
fs
xchg
push
mov
hlt
mov
repnz
xchg
sub
and
mov
aas
fcomp
mov
fmuls
push
adc
adc
inc
dec
cmpsl
add
outsb
adc
jbe
cwtl
sub
add
lods
bound
cltd
cmp
mov
add
pop
add
push
fcmovnu
dec
outsb
fmuls
add
inc
sub
inc
in
add
ret
and
outsl
aas
into
aam
sbb
pushf
or
sbb
add
mov
xchg
and
xchg
pushf
mov
repz
adc
xchg
nop
adc
cmp
nop
xor
inc
sbb
dec
jno
addr16
testb
mov
inc
push
lahf
push
pop
push
inc
ds
mov
xchg
sub
mov
mov
repnz
in
or
cmovo
add
inc
xchg
xor
fdivp
pusha
int3
add
xor
and
adc
mov
mov
ja
out
push
rolb
iret
stc
rolb
imul
inc
frstor
add
ror
push
xchg
arpl
roll
push
mov
lcall
stos
xchg
aaa
leave
jl
sbb
push
dec
push
fnsave
and
es
popf
out
pop
adc
jae
adc
icebp
push
arpl
pop
pop
out
je
daa
mov
pop
loop
dec
sub
inc
mov
push
mov
mov
inc
test
je
cmp
imul
jbe
imul
add
and
leave
shl
imul
test
and
popa
mov
mov
xchg
fmuls
lea
cmp
cmc
dec
xchg
jp
inc
or
push
and
sbb
test
pop
lds
ficompl
lahf
pushf
or
repnz
dec
aas
mov
mov
cmp
fldl
jnp
push
andb
mov
jae
cmp
or
es
jo
iret
lods
xlat
fs
ss
sti
xor
and
nop
push
inc
sti
xchg
jns
xorb
mov
lds
mov
add
outsl
aas
pushf
shlb
sbb
rolb
les
shl
or
enter
inc
pop
xchg
and
mov
adc
mov
dec
mov
shlb
mov
enter
roll
or
cmp
fcmovnbe
inc
add
rcll
jecxz
insl
xchg
pusha
mov
jnp
push
aaa
inc
dec
xor
aam
adc
nop
add
insl
popl
loopne
fs
push
cmpsb
test
roll
in
push
mov
adc
notb
stos
sbb
bound
and
inc
clc
lock
popf
les
sbb
icebp
pop
clc
stc
pop
inc
cmp
dec
xchg
xchg
inc
rolb
xchg
add
adc
aas
pop
adc
xchg
or
fldl
mov
or
rclb
xor
rcrb
rorb
std
mov
pop
mov
mov
sti
test
icebp
mov
and
add
leave
inc
sbb
decb
fsubrs
addr16
test
mov
repnz
add
cld
mov
arpl
xor
sbb
pusha
or
fiadds
stc
insl
je
pop
js
add
fs
adc
adc
rclb
xchg
cmp
add
sub
nop
daa
out
sbb
xchg
psrlq
adc
sbb
stos
or
enter
sub
xor
and
dec
leave
and
inc
push
sbb
add
enter
and
xor
and
inc
push
jns
sub
mov
testb
subb
add
js
sbb
std
or
dec
leave
or
mov
pop
push
pop
fisttpll
and
subb
and
dec
add
lds
sub
xrelease
std
jl
data16
gs
fs
jge
in
lea
mov
inc
push
pop
pop
push
and
mov
mov
mov
push
addr16
push
adc
adc
push
pop
mov
or
mov
rorb
push
insb
nop
sbb
aad
and
inc
adc
and
add
lods
mov
push
imul
mov
cmpsl
aam
dec
mov
fneni(8087
or
xor
dec
inc
inc
outsl
or
dec
popa
mov
in
nop
nop
int3
pop
push
pop
and
jg
iret
or
inc
sbb
sarl
add
sub
das
aas
pusha
mov
dec
icebp
aam
or
mov
xor
imul
xchg
add
jo
dec
pusha
inc
mov
mov
test
adc
bound
jne
jo
jo
nop
adc
inc
cwtl
and
test
int
mov
push
jne
dec
out
shrl
jmp
push
pop
sub
sub
or
pop
mov
and
dec
fisttpl
cmpsb
mov
add
pusha
xor
adc
nop
push
sub
cli
dec
outsb
dec
xor
xchg
out
fisttpll
pop
jbe
out
adc
push
dec
cmpsb
cwtl
pop
mov
jmp
dec
enter
leave
push
sub
in
jae
mov
adc
add
pop
adc
addl
icebp
ret
cmp
sub
sbb
sub
or
pop
xor
lock
mov
mov
cmpsb
fcom
pop
iret
popf
jae
xor
aad
jl
adc
adc
add
lea
call
nop
mov
daa
push
pop
sub
pop
xchg
dec
test
or
adc
arpl
cmpsl
movsb
int
rorl
shlb
imul
or
leave
pop
shr
pop
into
jo
push
hlt
inc
inc
xacquire
push
sbb
pop
sti
loopne
inc
push
pop
in
push
stc
inc
push
and
lock
daa
sub
cmp
adc
in
insb
fcoms
or
dec
aaa
xlat
sbb
insl
pop
enter
mov
mov
dec
iret
push
mov
sbb
cltd
xchg
les
call
pop
gs
adc
sbb
sbb
leave
mul
xor
or
adc
enter
imul
in
or
pop
jb
in
mov
repz
jb
jb
aas
arpl
jb
testb
dec
cmp
cmp
jo
mov
sbb
or
pushf
pushf
pushf
pushf
lret
cli
or
dec
dec
jb
mov
out
push
sbb
daa
daa
andb
unpckhps
pop
sub
into
pop
sbb
pushf
jmp
fists
rclb
push
arpl
in
push
pop
popf
sbb
fwait
repnz
cmpsb
push
add
sub
inc
mov
sub
dec
push
or
imull
in
adcl
and
cmp
mov
insl
or
lods
pop
loope
push
jl
mov
add
movsb
cmp
rcl
sbb
fs
and
jg
pop
and
pop
mov
fdivrs
in
aad
mov
sbb
pop
imul
in
xor
push
mov
enter
inc
rclb
push
cmc
out
mov
rorb
push
adc
push
movl
sub
or
mov
push
ret
movsb
popa
movsl
adc
xchg
out
inc
movsl
xchg
jmp
mov
dec
arpl
mov
push
pusha
adc
inc
pop
in
enter
or
push
into
xorl
inc
inc
pop
inc
rclb
xor
fists
test
shrb
mov
pop
loopne
sub
add
mov
xchg
xor
or
pop
pop
adc
repz
pop
pop
push
bound
inc
sub
sub
mov
mov
call
shr
push
adc
ljmp
addb
stos
push
dec
ds
ret
clc
pop
aad
mov
sar
add
mov
loopne
xor
xorb
rcl
sbb
mov
ficomps
add
jle
or
mov
lcall
inc
fwait
lods
pusha
test
pop
pop
imul
pop
xchg
and
add
js
sub
imul
rcr
dec
rcrl
dec
pop
fisttpll
adc
jo
lds
setae
ret
enter
pop
leave
sbb
lock
add
mov
lods
add
lret
xorb
js
xchg
test
lcall
lods
mov
fmuls
mov
fcomip
je
push
sbb
add
xor
or
jne
or
mov
push
je
and
xchg
lods
pop
push
push
mov
cmp
int
xor
cltd
mov
shr
clc
pushf
or
lods
je
pop
mov
test
or
mov
int3
sbbl
push
aas
add
int3
popf
mov
test
or
xor
in
mov
or
in
add
and
enter
and
xchg
or
or
dec
fsubrp
or
xchg
fwait
add
pop
imul
pop
rdpmc
rcrb
aad
push
pop
aad
adc
les
je
push
data16
adc
mov
mov
in
adc
test
test
dec
imul
inc
mov
clc
jae
hlt
outsb
and
sbb
jg
js
mov
cld
push
pop
adc
xor
add
cmp
sti
ss
or
movsb
sbb
test
add
sub
movsb
mov
aad
xchg
xorl
or
adc
cmp
shll
mov
sub
ficomps
mov
pop
mov
or
sbb
testl
lahf
push
sbb
sub
mov
jl
xor
sub
push
test
jne
shlb
mov
push
out
imul
xor
lds
loopne
sbb
aaa
in
les
and
cld
push
je
mov
xchg
fmuls
fld
xchg
cmc
mov
cmp
push
ret
bsf
xchg
adc
repnz
push
jno
sbb
test
out
cmpsb
jne
popa
repz
add
add
cwtl
push
mov
xor
clc
cmp
adc
inc
fdivrs
movsb
push
push
push
ss
adc
les
adc
xor
imul
lds
fildll
ret
fmuls
jle
daa
test
sbb
out
lds
push
push
xlat
fidivl
xchg
and
dec
lods
pushf
mov
adc
aaa
les
xchg
dec
push
dec
ss
cmp
adc
addr16
and
adc
add
fadd
adc
fisubs
into
add
or
xchg
gs
add
adc
pop
inc
out
adc
popw
mov
jge
add
shlb
adc
add
repnz
jnp
pop
add
pop
and
sub
daa
mov
pushf
sub
outsl
adc
add
add
leave
jb
add
add
add
sub
es
push
scas
pop
push
and
and
push
or
sarb
xchg
dec
insb
js
add
mov
imul
daa
lahf
adc
sub
jne
cwtl
dec
rolb
push
add
loop
je
push
mov
pop
pop
mov
add
cs
js
sub
hlt
fisttpll
loopne
mov
jae
xorb
dec
inc
add
leave
pmulhuw
adc
cld
xor
fdiv
mov
add
mov
dec
xchg
add
mov
test
mov
ljmp
inc
or
inc
sbb
movl
dec
sub
in
or
mov
xor
aas
lods
mov
inc
pop
xor
ds
mov
inc
push
or
sub
pop
int
fs
cltd
sbb
inc
or
cld
adc
pusha
xor
sbb
bound
xchg
into
mov
xor
xchg
and
inc
sbb
gs
push
outsl
mov
or
stos
push
push
je
lock
pop
int
sub
rcr
test
add
out
ja
les
sbb
adc
in
fs
lahf
sahf
jle
dec
or
push
inc
add
adc
push
or
push
loop
rclb
arpl
rcr
dec
push
sbb
add
nop
clc
inc
dec
xchg
pop
ret
ret
xchg
and
arpl
out
frstor
test
je
mov
cmp
xchg
ja
adc
push
outsl
std
hlt
push
cltd
fwait
rolb
fwait
cmp
dec
movb
out
mov
testl
jbe
push
adc
mov
insl
sbb
dec
dec
add
test
mov
add
adc
gs
or
jo
aaa
fdivrs
sub
sbb
dec
sub
sarl
and
and
cld
push
add
clc
mov
fldcw
aad
rcr
jbe
inc
rcr
sub
scas
test
in
loopne
mov
adc
fbld
inc
mov
pop
adc
push
pop
dec
push
sti
fisttpl
and
pop
hlt
neg
jmp
pop
jne
xor
inc
je
loopne
cwtl
sbbl
mov
or
sbb
inc
inc
and
adc
mov
dec
insl
adc
push
cwtl
loope
cmc
in
outsb
les
adc
insl
or
test
xchg
mov
mov
loope
mov
fsubs
add
daa
fldt
add
push
cmp
or
lods
add
fistpl
out
or
call
enter
inc
test
push
into
push
jecxz
and
push
add
fisttps
imul
stos
jns
or
js
pop
jnp
or
inc
imul
adc
int3
sahf
adc
or
and
mov
dec
ss
dec
inc
fdivrs
jmp
lods
stc
jmp
insb
mov
pushf
inc
inc
or
mov
cmp
sbb
sti
adc
sti
nop
les
add
icebp
xchg
jle
xor
jne
xor
and
popf
and
sub
rol
test
push
adc
or
jmp
push
shrl
cli
fldt
and
pop
xchg
xchg
adc
xchg
dec
inc
pop
and
ret
adc
lock
mov
or
je
ss
jmp
push
ss
sub
dec
in
push
pop
in
fwait
sub
ja
pushw
xchg
mov
rorl
cltd
cmp
or
mov
rcl
aaa
add
and
mov
sub
sub
and
mov
add
push
fnstsw
adc
sbb
insl
shrl
sub
push
dec
jno
jae
mov
push
xchg
pop
lea
cmpb
repnz
mov
sbb
push
xlat
das
mov
mov
movb
adc
xchg
es
dec
add
es
push
sub
or
dec
sub
in
dec
inc
scas
cmp
sub
dec
test
mov
lret
or
fmuls
xchg
inc
pop
mov
and
pop
add
loope
push
test
jge
adc
jbe
jbe
mov
mov
je
pop
addb
gs
out
add
or
cmpb
sub
sbb
mov
push
inc
jo
fdivrs
cmpb
sub
cwtl
pop
mov
pop
cld
or
xor
nop
xchg
pop
leave
or
lahf
rcrl
daa
xor
js
or
cmp
mov
add
js
mov
push
rorb
lock
jge
xor
push
push
push
data16
arpl
add
cmp
les
int
popa
push
adc
dec
mov
or
cld
cmpsl
jbe
roll
sub
pusha
cmpb
and
jne
test
js
repz
xor
xor
add
add
cmp
xor
fstl
and
push
sub
pop
adc
faddl
push
lock
pop
paddusb
mov
push
sbb
push
jge
aad
pop
push
pop
mov
clc
es
shr
mov
lret
add
aas
scas
mov
pop
and
add
pop
push
lcall
ret
and
or
mov
or
dec
testb
push
mov
lea
ds
pusha
push
insb
xchg
das
jae
test
cld
fwait
and
aas
jo
add
aaa
data16
pop
adc
dec
push
cli
mov
add
or
lret
inc
push
or
iret
or
push
mov
fsubrl
sub
xor
out
movb
push
xor
sub
adc
and
pop
lret
xor
pop
xchg
pop
cmc
xchg
lock
add
or
bound
jno
xchg
pop
lods
test
or
ret
shll
fsubrs
arpl
dec
aad
and
mov
xor
mov
imull
jmp
ret
add
jl
addb
mov
shlb
addr16
bound
mov
in
imul
inc
popl
mov
cmpsb
cmpsl
or
and
dec
loope
je
jo
mov
push
mov
jmp
mov
cmp
dec
or
cmpsb
jno
outsb
cwtl
int
cvttps2pi
mov
lcall
pusha
sbb
mov
pusha
mov
nop
xlat
xchg
out
imul
push
dec
add
lcall
sub
pop
and
subb
add
add
and
push
movsb
adc
or
sub
out
addb
sub
sahf
pop
and
movsb
push
test
add
or
and
idivb
add
or
xchg
sub
mov
or
mov
sub
mov
inc
or
adc
or
mov
jg
subl
add
je
cmpb
add
movsl
xchg
int3
add
lahf
mov
adc
xchg
dec
mov
sbb
adc
rcll
pmaxub
pop
cmp
mov
push
outsl
scas
sbb
mov
sub
and
push
ja
test
mov
push
rclb
daa
cmp
push
mov
add
mov
mov
jle
mov
fisubl
js
and
pop
dec
test
outsl
mov
sub
fsubs
dec
inc
ficoml
daa
inc
push
adc
mov
ret
cmpsl
lahf
pop
testb
loope
mov
cmp
ret
popl
lock
repz
daa
test
xchg
insb
sub
xor
divl
pop
xchg
ret
sbb
xlat
mov
jae
vmwrite
cwtl
sub
add
sbb
or
rcrl
mov
xchg
stos
sbb
and
cmp
fs
or
or
push
inc
inc
mov
cltd
aaa
das
adc
jo
xchg
cmp
movl
sbb
sbb
out
out
sbb
pop
mov
dec
lds
push
inc
das
ja
mov
pushf
pop
enter
or
mov
pop
sbb
mov
mov
pop
xchg
enter
and
mov
mov
les
imul
jno
out
rcll
stos
inc
int
loopne
les
fucompp
mov
lds
dec
in
add
add
hlt
mov
mov
or
fcoml
popf
incl
cmp
jne
lods
cld
lahf
and
scas
inc
dec
sub
lock
dec
or
or
sbb
mov
xchg
cmpsb
xchg
ja
xor
inc
add
inc
stos
pop
adc
pushf
mov
or
xchg
aad
mov
lds
mov
mov
mov
mov
nop
pusha
aad
inc
inc
mov
fsubl
push
inc
add
mov
xor
out
movsb
jne
push
fwait
sbb
inc
or
mov
nop
arpl
cli
push
ret
inc
mov
jo
rcll
or
xor
adc
add
fs
test
hlt
mov
clc
cli
push
or
push
neg
and
flds
sub
fcmovb
fsubs
rcrl
mov
or
rcrb
cmp
pop
hlt
icebp
jl
jmp
sub
inc
jle
xchg
clc
xchg
mov
push
fidivl
add
or
add
add
adc
dec
js
push
btr
fsubrp
xor
and
aas
push
test
pop
pop
sub
mov
aas
or
movsb
adc
sub
arpl
push
shll
mov
lock
das
push
in
les
mov
rcrl
adc
cmpb
bound
sbb
or
cmp
jne
and
gs
sub
rorb
push
enter
inc
call
mov
xchg
mov
pushf
xchg
sbbl
mov
ret
jl
sbb
add
js
inc
sahf
sub
jno
push
gs
pop
mov
adc
xor
dec
add
and
adc
dec
ret
daa
testb
and
or
leave
scas
andb
enter
jl
insb
cmp
xchg
dec
xchg
cld
adc
stc
iret
movsb
push
or
cmp
cld
loopne
add
add
mov
inc
pop
movsb
push
xor
aaa
mov
cmp
inc
push
pop
cmpl
adc
xor
call
repz
sbb
or
loop
mov
mov
iret
pop
out
sbbl
adc
dec
rcrl
mov
loope
rol
mov
out
mov
stos
pop
call
pop
and
inc
and
adc
fists
mov
int
in
outsl
test
inc
and
adcl
cmp
adc
xchg
cwtl
add
inc
ljmp
jne
add
xor
sbb
movl
add
add
sub
or
or
and
xor
push
xchg
test
aad
mov
fcmovne
jo
cmp
pop
cmp
mov
testb
jecxz
pop
pop
xchg
cltd
movb
mov
inc
and
inc
xchg
idivl
mov
or
xor
jne
cmpsb
jns
lahf
imul
orb
seto
repnz
jmp
lods
inc
add
enter
adc
dec
push
cmp
sub
rclb
das
inc
adc
clc
cmp
cmp
out
xor
dec
cmp
xchg
xor
icebp
pop
insb
and
adcb
icebp
nop
test
ljmp
lods
std
pusha
fisubrl
sub
idivb
jb
dec
inc
inc
xor
cmp
es
xor
pop
leave
inc
orl
test
incb
inc
sbb
xor
push
sti
and
mov
pushf
push
xor
lcall
adc
pop
data16
jnp
add
mov
ficomps
or
aam
je
ljmp
aas
test
negl
cmp
dec
jge
sbb
mov
jne
xor
add
cmp
adc
mov
or
pushf
test
pop
push
in
cmp
es
sub
sarb
dec
add
dec
push
data16
push
xor
mov
sub
add
notl
lock
pop
or
xchg
xchg
pop
loopne
adc
cmc
xchg
sarl
pusha
pop
dec
mov
shlb
into
pop
lea
shrb
ret
fcmovnbe
jl,pt
mov
adc
in
xor
push
mov
sub
or
popf
and
lcall
je
bound
adc
je
daa
push
loope
loope
or
inc
xchg
and
imul
add
xor
outsb
mov
frstor
cmp
dec
imul
in
mov
push
sbb
enter
mov
xchg
cmp
and
adc
addr16
push
pop
add
and
leave
mov
add
or
enter
aam
je
in
push
jb
fs
sub
xor
outsl
push
pop
shrb
cltd
sub
les
mov
xchg
popf
push
and
xor
in
mov
jno
addb
cmp
adc
push
shll
ds
mov
push
fcoml
push
xchg
sar
dec
pusha
xor
mov
inc
data16
sbb
lcall
pusha
popf
and
lret
xchg
add
pusha
bound
adc
ret
jae
dec
xchg
lret
pop
or
or
pushf
sbb
bound
xor
inc
adc
mov
pop
test
jecxz
sti
add
add
sbb
jl
xlat
mov
gs
call
push
in
in
in
xchg
inc
stc
fsubl
push
or
adc
loope
add
dec
fs
movswl
sbb
nop
aas
adc
aam
inc
mov
loopne
cmp
setb
jo
mov
pop
fmul
push
pusha
pop
divl
push
xchg
adc
lock
pop
and
inc
loop
mov
call
rcr
dec
cmp
das
push
and
push
imul
or
vxorps
aad
sub
mov
dec
mov
pop
iret
test
inc
daa
shll
cmp
cmp
pop
dec
pusha
mov
in
cmpsb
pop
pop
les
inc
getsec
ret
inc
adc
shrb
lea
adcb
mov
sbb
mov
fildl
cwtl
mov
push
js
outsl
xchg
push
xor
out
loopne
popa
mov
inc
sarb
leave
adc
mov
sbb
xor
dec
lock
adc
inc
mov
adc
adc
xor
insl
sub
les
mov
arpl
xor
in
aas
pusha
mov
push
cmpl
jbe
lock
das
adc
cltd
sub
add
adc
sbb
push
mov
sbb
push
pop
sbb
pop
xchg
add
and
cmp
jne
push
adc
movsb
pop
add
sahf
js
in
sub
js
in
sub
mov
xchg
cmp
dec
dec
xchg
add
clc
jne
daa
loopne
add
push
push
pop
mov
iret
fs
adc
andl
sbb
aas
fsubs
jg
xchg
or
or
and
mov
or
xor
pop
adc
sub
out
and
pop
xchg
jno
popf
aaa
inc
lods
lds
and
sbbl
cmp
fadd
or
je
inc
xlat
dec
add
ret
sbb
int3
jp
shll
cmp
mov
inc
mov
pop
and
testb
lock
inc
xor
xchg
add
test
mov
push
adc
insl
pusha
mov
enter
or
push
daa
mov
and
cld
orb
fwait
adc
cmp
je
sub
push
shl
fmuls
push
fcmovnbe
adc
inc
int
jne
cmpb
subb
push
jne
pop
in
and
mov
cmp
or
test
dec
fsubrs
rcll
xchg
lods
xchg
shlb
fstpl
cmp
push
data16
cmp
xchg
cmp
pop
cmp
jg
jb
dec
jne
jns
xchg
orl
mov
jns
jecxz
jno
add
shlb
movsb
push
pop
or
aaa
add
dec
fwait
adc
das
orl
adc
jo,pt
mov
push
test
xor
xchg
xchg
push
xchg
je
add
fisttpll
xlat
mov
adc
or
sahf
add
sbb
inc
inc
and
cmpsl
loop
lcall
scas
add
ljmp
pop
xlat
add
fs
mov
dec
and
dec
cmp
sbb
xor
testl
mov
dec
out
aas
xlat
addb
shl
push
sbb
mov
or
jmp
mov
dec
lahf
cli
out
and
cmpb
lcall
pop
int
add
sub
into
pushf
push
mov
pop
addr16
enter
push
push
icebp
dec
sbb
lret
shll
mov
xchg
push
add
xor
scas
cmpsl
inc
or
adc
push
sar
xchg
stos
int3
adc
out
and
fidivrl
inc
add
addr16
lock
enter
mov
sarb
aad
push
jo
movsl
or
cmp
inc
pusha
inc
inc
icebp
and
aad
inc
imul
push
sbb
mov
lods
inc
inc
scas
and
fucom
out
inc
mov
inc
mov
scas
and
movsb
iret
xchg
sbb
pop
mov
lcall
or
fwait
cmp
dec
rcrl
dec
pop
sahf
xchg
cltd
add
ret
loopne
dec
movsb
jo
sbb
idivl
out
cmp
gs
mov
cmp
push
or
mov
loope
jle
or
add
les
cmp
mov
fldenv
mov
and
je
add
push
jnp
mov
adc
lea
das
add
sbb
or
push
pop
inc
int
sbb
pop
sbb
lods
sti
ficomps
sub
inc
lods
stc
out
inc
push
cld
movsl
or
popf
push
push
popa
test
out
repnz
adc
add
in
adc
push
int
lock
sysret
sbb
lea
lea
adc
aam
les
adc
or
inc
cmp
fwait
add
or
lock
dec
mov
jmp
dec
push
hlt
rorl
and
and
dec
or
push
push
dec
xor
sbb
push
pop
fld
mov
sbb
add
stos
push
dec
xor
sbb
pop
xor
test
sub
pop
data16
enter
notb
dec
rcrl
test
and
imul
out
adc
andl
sbb
mov
aad
out
inc
add
xchg
adc
jecxz
lcall
and
mov
inc
and
aaa
out
add
inc
iret
lea
pop
addb
lea
test
hlt
adc
sbb
jl
das
dec
movsb
mov
push
mov
xor
rorb
push
push
push
mov
nop
orl
add
or
adc
cltd
pop
pop
adc
adc
test
sbb
push
movsb
add
pop
inc
sbb
loope
addb
dec
lea
or
mov
mov
nop
or
sbb
and
neg
push
dec
push
dec
loopne
call
cmpsb
push
xor
inc
daa
sbb
test
and
je
or
loopne
into
stos
loope
push
jo
imul
sub
add
iret
push
adc
push
sub
push
push
push
push
lcall
rcll
adc
insb
adc
xlat
pop
cmpsb
push
daa
stos
test
inc
push
xorb
mov
push
int
test
sub
jecxz
fstl
cmp
icebp
and
lods
adcb
jp
push
daa
jo
inc
xchg
les
push
push
test
es
xchg
and
sar
or
mov
testl
pop
or
mov
and
sub
insl
jge
fimull
das
mov
pop
or
cmpb
xchg
ds
pop
mov
jns
addr16
jns
mov
dec
add
orb
data16
inc
adc
test
push
xor
adc
shlb
popa
movsb
sbb
cmc
dec
or
jmp
out
push
add
clc
xchg
loope
je
cmc
mov
mov
test
push
add
mov
and
push
lods
push
xor
xor
cmpsl
sub
adc
rcll
clc
fsubrp
insl
sbb
fcomp
xor
mov
das
push
aaa
je
ret
add
and
jg
daa
jno
incl
and
in
pop
xchg
mov
jne
add
dec
add
add
push
add
sahf
cld
add
adc
fisttpll
jmp
and
aaa
out
mov
sbb
add
jmp
sbb
add
add
stos
push
mov
popa
rcrb
cmpl
ret
orl
dec
add
or
fcompl
push
dec
mov
pop
leave
cmp
mov
xor
cmpsl
nop
jns
lahf
out
xchg
int
cmp
hlt
xor
adc
sub
and
add
jnp
dec
push
push
xor
insb
daa
sti
push
mov
add
sub
in
je
pop
xchg
mov
adc
add
bound
jg
cmp
jle
sub
dec
inc
or
mov
add
or
ret
sub
cmp
or
mov
mov
imul
loop
dec
add
or
xchg
cld
jge
ret
mov
orl
rolb
insl
sbb
outsb
push
fnstsw
mulb
or
int
or
rol
lea
or
sbb
mov
mov
inc
add
rol
out
adc
and
dec
inc
or
adc
mov
popa
mov
mov
icebp
mov
xchg
cltd
jmp
lods
int3
mov
cmpb
dec
dec
loopne
cmp
or
add
mov
addr16
cmp
jg
cmpsb
xor
push
icebp
dec
xchg
inc
dec
repnz
out
test
pop
fdivl
xchg
and
test
push
jl
mov
jno
jge
lods
inc
jo
mov
cmp
std
dec
push
mov
sbb
mov
push
fcomps
jno
mov
ret
add
mov
push
test
sbb
pusha
adc
xor
mov
add
add
mov
sahf
inc
arpl
push
xor
push
scas
in
adc
pusha
ss
sarb
andb
sbb
pop
movsb
std
es
sbb
sub
ffree
add
mov
add
aad
add
dec
mov
sub
ret
xor
and
addr16
xor
imul
sbb
or
or
mov
push
mov
jl
push
stc
push
add
or
xchg
xor
add
mov
xor
adc
push
loopne
push
or
es
pop
aas
lods
shll
add
dec
dec
cmp
shrb
and
and
int3
shrl
sub
sub
loopne
and
xchg
adc
pop
jmp
inc
jnp
pusha
test
lds
adcb
jle
xchg
or
inc
pusha
xor
popa
call
push
cmp
adc
xorl
push
add
or
ljmp
inc
dec
adc
and
mov
test
pop
mov
pop
mov
or
dec
adc
add
jno
andl
xor
inc
inc
inc
jle
mov
jne
lahf
loopne
and
push
mov
imul
push
adc
lods
dec
pop
sbb
add
in
jecxz
cmp
push
push
ret
fistl
jbe
and
imul
arpl
pop
sbb
pop
xchg
push
sbb
pop
popf
inc
testl
rcrl
mov
pop
enter
pop
lock
and
and
dec
int3
das
lds
incl
dec
stos
jl
xchg
ret
push
push
push
pusha
leave
test
or
cmp
enter
out
mov
testb
or
inc
mov
pop
pop
xchg
ljmp
sbb
cmp
lods
sub
xchg
idivl
mov
pop
push
cld
es
push
xchg
lods
pushf
sub
popa
inc
int3
lds
mov
daa
jbe
call
cmpsl
dec
adc
or
inc
sub
pop
ss
movsl
roll
testb
pushf
lock
adc
adc
je
adc
mov
andl
jns
orl
cmpb
out
push
mov
les
xor
pop
mov
enter
dec
ret
clc
je
adc
cmp
adc
fadds
jmp
int
bound
sub
pop
dec
scas
cmp
popf
pop
pop
or
or
fsubl
inc
mov
es
cmpb
xchg
sub
xchg
int3
pop
cmpxchg8b
leave
out
add
rclb
sbb
and
outsl
push
inc
add
orl
testb
addl
mov
dec
and
and
adc
out
out
les
jo
push
repz
inc
mov
jge
jl
lock
or
xor
mov
push
adc
test
mov
ret
or
int3
mov
and
or
faddl
addl
dec
enter
inc
daa
dec
add
fdivrs
leave
adc
xor
leave
pop
sub
add
in
jle
xor
xchg
lahf
push
je
push
je
pop
sbb
cmp
push
adc
and
mov
ror
roll
push
push
insb
push
sarb
dec
notb
sub
add
rol
pop
dec
xchg
in
add
push
push
sti
arpl
das
addr16
das
mov
xchg
inc
cmpl
push
jne
fidivl
pusha
lods
dec
aam
cwtl
addr16
xor
mov
xchg
mov
in
xor
test
sahf
lcall
adc
dec
add
mov
jae
cmpsb
std
cmp
or
pop
mov
add
jle
lock
movb
lods
or
mov
add
pop
dec
push
out
mov
or
in
pop
data16
jno
fs
int3
fs
cmp
aaa
data16
sub
sub
movsl
or
out
add
and
adc
adc
push
push
das
jne
mov
pop
sbb
arpl
inc
mov
stc
push
mov
test
mov
xor
dec
lahf
add
pop
rorl
fistps
adc
push
pop
dec
addr16
test
bound
push
xchg
or
lret
xchg
and
and
xchg
sbb
shrb
push
dec
or
sbb
rclb
cwtl
and
cmp
jne
xchg
fcoms
adc
push
or
inc
sbb
mov
lds
in
xchg
push
cmp
mov
in
mov
aad
pop
sti
cmpl
xchg
repnz
hlt
pop
cs
sub
or
mov
and
sub
sub
push
xchg
inc
xor
adc
fadd
rorb
adc
cld
push
add
arpl
push
add
jbe
adcb
mov
outsl
push
mov
or
je
aad
ljmp
and
pop
inc
push
jnp
push
cmp
sbb
xlat
inc
cmp
xchg
inc
sarb
test
sbb
push
insb
std
ds
outsb
sbb
int3
dec
adc
sub
adc
sub
or
cmp
pop
inc
inc
and
push
add
sub
push
and
sbb
ret
inc
push
cmp
xlat
jl
xchg
pop
jle
test
xchg
sbb
adc
not
pushf
shr
insb
sub
je
addb
mov
jb
push
xchg
or
mov
jmp
mov
data16
xor
sarb
dec
inc
cmp
xchg
xor
mov
inc
jo
cltd
inc
cltd
and
cmp
sbb
mov
lds
xchg
jge
inc
lcall
jo
js
outsl
sbb
cmp
add
add
push
sbb
mov
das
ja
adc
dec
inc
vpaddusw
xchg
pop
sbb
test
jg
jg
ficomps
imul
daa
xchg
jmp
pop
movsb
sbb
jg
popf
ret
cwtl
adc
jne
push
push
dec
or
in
mov
xlat
pop
ret
mov
mov
dec
add
in
ja
jle
mov
push
daa
sbbb
dec
mov
iret
push
jo
dec
das
test
test
dec
xchg
and
sub
push
dec
popa
aaa
push
jno
sbb
jecxz
inc
xor
jo
dec
lock
mov
test
nop
xchg
nop
pop
fwait
inc
cmp
push
cld
fwait
inc
jmp
push
dec
adc
add
xor
jmp
push
lock
dec
jnp
jo
rorb
sub
and
push
and
push
ret
add
cmp
adc
mov
push
cmp
out
cltd
mov
andl
inc
jl
jle
cmpsb
rcll
sub
dec
sbb
xor
ret
sbb
mov
push
push
insl
or
add
idivl
lea
lea
add
xor
ja
pop
rolb
adc
sub
pop
xchg
dec
pop
xchg
add
clc
add
sbb
lock
adc
lods
insb
ss
je
int
orl
test
adc
sub
sbb
into
jo
pop
and
jmp
mov
mov
loope
loopne
es
xor
xor
push
and
adc
inc
rcrb
mov
mov
in
and
fsubs
xor
and
or
aam
mov
push
adc
test
adc
sbb
mul
in
mov
ret
add
leave
ret
das
push
mov
xlat
push
sahf
sti
or
scas
stos
add
ds
xchg
movsb
push
adc
xchg
adc
movsl
gs
xor
and
mov
sarl
insl
adc
push
movsb
jno
bound
icebp
pop
mov
sbb
xor
adc
subb
cmc
scas
sbb
addb
xor
push
leave
aad
mov
aaa
add
sub
sbb
imul
insb
mov
push
cmp
sbb
ror
add
mov
push
push
adc
mov
and
sbb
push
add
mov
mov
mov
dec
or
insb
enter
sahf
or
or
adc
arpl
jo
test
popa
mov
xchg
subl
shl
jne
leave
test
lea
call
lea
pop
mov
or
mov
add
test
or
adc
xchg
gs
adc
sbb
sahf
push
pop
xchg
add
and
addr16
pop
fs
in
sti
out
and
jmp
inc
add
test
or
sbb
dec
pusha
jnp
gs
jecxz
fistps
incl
idiv
inc
sub
dec
add
out
push
nop
xorl
add
arpl
jbe
push
or
test
mov
mov
push
push
pushf
mov
and
or
pop
incl
movsl
dec
push
xchg
sbb
mov
pop
pop
cmp
sub
outsl
movsl
lods
pop
inc
add
test
mov
mov
xor
mov
fidivs
xchg
jl
sbb
push
clc
and
sbb
xor
popf
outsl
inc
movsb
hlt
xor
movl
cmp
out
jo
pop
aas
decl
pop
hlt
push
popa
popa
pop
or
aam
mov
lea
mov
or
cmp
mov
loopne
ljmp
je
mov
push
test
hlt
pushaw
shrl
fimuls
les
imul
ds
lcall
mov
mov
cmp
stos
or
out
mov
pop
pop
data16
pop
sbb
cmp
pop
cmp
fbstp
aad
push
popf
and
mov
xor
gs
enter
inc
mov
ja
dec
std
orb
cwtl
cmp
add
aad
and
scas
cmp
push
nop
mov
push
sbb
icebp
jb
or
mov
aas
pop
not
in
test
xchg
xor
xchg
data16
lods
ds
popf
sbbl
pop
lcall
xchg
cmp
cmp
rcpps
sbb
mov
out
dec
or
sti
add
mov
mov
inc
push
imul
sar
sbb
jb
mov
lock
jge
xchg
ja
jmp
addr16
cld
adc
inc
loopne
dec
cmpsl
mov
sbb
hlt
test
push
mov
inc
and
iret
in
or
and
jns
mov
jne
dec
inc
push
jbe
or
fldcw
sub
pop
push
push
pop
push
sbb
inc
dec
xchg
je
push
mov
lods
nop
mov
fwait
je
popf
jecxz
loope
and
fs
add
sbb
jg
fcoms
xchg
cmp
add
add
xchg
push
mov
mov
in
and
lret
lcall
mov
mov
cmc
sbb
das
adc
pop
pop
rol
cli
mov
ss
repz
idiv
mov
cmp
push
mov
nop
sbb
jne
insl
mov
subl
and
aas
cmpsb
lock
and
cmp
or
push
loope
inc
push
jecxz
mov
or
jno
dec
aaa
icebp
sub
cmp
push
cmpsb
jnp
not
and
sahf
or
in
je
and
and
dec
sbb
add
lret
or
loopne
pop
sub
mov
sbb
sbb
adcb
lcall
gs
mov
sbb
js
fldt
mov
adc
mov
adc
lret
mov
or
inc
aaa
or
push
loop
or
rolb
add
jae
aas
or
add
xchg
cmp
test
sub
es
sbb
push
adc
jno
cmp
dec
imul
aas
lods
jns
jnp
jns
pop
mov
cmpl
iret
je
cmp
je
xchg
popf
divb
cmpb
push
adc
pop
and
popa
cmp
outsl
cmpl
mov
mov
in
cltd
push
js
sub
adc
pop
ja
push
mov
inc
fsubp
dec
movsl
push
aas
mov
out
push
cmp
sub
mov
adc
and
ljmp
fisubrl
pushf
xchg
fs
xchg
ljmp
in
mov
pop
add
add
add
pushw
add
sbb
push
ja
cmp
rol
mov
imul
cmpsb
lds
outsl
leave
xor
in
movsb
dec
into
test
aaa
mov
outsl
or
xor
into
movsb
add
or
in
hlt
xor
cwtl
jp
dec
and
mov
fidivrl
outsl
call
cld
cmp
mov
sub
dec
outsb
shl
sub
in
or
mov
or
pop
mov
loopne
ret
jne
push
pusha
test
sbb
add
jl
or
lds
jmp
das
pusha
icebp
adc
push
lret
lock
sub
insb
shrl
aam
push
pop
xorl
lods
fsts
movsl
or
add
mov
fs
fldt
fisubl
lea
and
push
add
cmovno
inc
ljmp
test
fcmovnbe
pop
sub
or
loope
daa
cmp
sbb
out
loopne
mov
cld
inc
cmp
jo
sbb
arpl
aaa
adc
inc
dec
dec
cmpsl
fisttpll
or
fcomp
push
add
jne
gs
shlw
hlt
or
lods
aad
cmp
outsl
sbb
pop
jne
sub
push
xorl
add
fincstp
push
sub
xor
cwtl
je
cmc
lock
push
in
adc
test
pusha
dec
xor
add
sbb
aam
adc
or
ss
int
daa
mov
das
fldl
lcall
out
inc
dec
fmull
inc
adc
xor
lods
rcll
stc
or
sbb
fisttpll
sti
push
inc
movl
cwtl
sbb
nop
hlt
xchg
push
outsl
cltd
cltd
xchg
out
fucomp
fildll
sbbb
dec
push
cwtl
lods
pop
or
push
push
add
pushl
icebp
arpl
push
sbb
fwait
sbb
dec
lock
cmpsl
and
fwait
jmp
inc
jne
add
sbb
fsubs
test
and
daa
pop
pop
incl
dec
adcl
mov
fildl
adc
enter
aaa
pop
xchg
sub
cmp
pop
pop
sbb
inc
daa
jle
and
popa
test
jns
gs
push
adcl
dec
or
movsl
push
push
insl
and
sub
cltd
hlt
repnz
jnp
inc
test
scas
mov
imul
aas
mov
push
ja
mov
xchg
ret
sti
sub
dec
sub
ret
pop
add
mov
shr
mov
mov
mov
inc
adc
xlat
jno
icebp
and
sbb
xor
jle
or
jmp
xor
jne
dec
cmpsl
xlat
or
pop
or
push
out
and
sbb
orb
lea
push
mov
aaa
inc
lahf
dec
push
jno
or
bound
jno
and
ja
sub
ja
std
inc
lahf
adc
or
cmp
mov
jno
add
or
mov
mov
testb
or
test
jno
leave
popa
sbb
roll
mov
sbb
mov
mov
stc
pop
lds
mov
xor
jne
mov
pop
or
jp
incl
call
add
sub
inc
add
inc
push
mov
cli
stc
or
add
inc
cmpsb
stos
hlt
sub
rcr
and
mov
cmpsl
add
inc
pop
js
pushf
add
pop
mov
fcoms
push
sbb
sahf
dec
sub
and
insl
and
push
test
fs
xlat
add
data16
or
ret
iret
pop
add
addr16
mov
lcall
ret
push
ret
es
addb
outsl
or
add
test
pop
jnp
mov
push
or
push
xchg
pop
adc
add
or
push
loop
test
loopne
dec
loope
pop
xor
mov
add
mov
sbb
dec
ret
das
lock
leave
jp
daa
arpl
cmp
into
cmp
adc
imul
xchg
fadd
jno
cltd
or
xchg
cmpsl
jmp
in
adc
sub
or
das
push
or
push
dec
xor
das
jle
dec
inc
or
sbbl
sbb
add
pop
adc
jle
sbb
and
inc
movzbl
push
enter
and
outsl
add
inc
je
inc
add
mov
xorb
sbb
imul
rclb
inc
orb
jb
fsubr
dec
mov
sbb
icebp
mov
daa
mov
shr
sub
cwtl
sti
jg
or
cmp
sbb
rcrb
jp
fisttpl
mov
inc
mov
inc
push
and
sub
cmp
pop
inc
outsb
enter
cmpsl
ret
jbe
xor
xor
pop
add
in
ljmp
add
cmpl
push
outsb
adc
sub
movsl
ljmp
mov
out
fldt
add
je
outsl
adc
xchg
add
shufps
shl
cmc
adc
das
xor
outsb
or
push
or
test
xchg
test
adc
mov
out
iret
add
xor
xlat
in
xor
or
js
sbb
in
or
xlat
or
cmp
shll
das
in
call
push
mov
jmp
or
cmpsl
addl
xchg
movsl
jge
xchg
jle
ret
xchg
ja
xchg
adc
inc
cmpb
inc
ss
out
push
rorb
in
aam
std
inc
push
dec
fcomps
and
jle
enter
aam
stos
add
jmp
pop
inc
mov
lea
das
sub
jecxz
daa
xor
clc
rorl
push
outsb
lret
jp
jo
xchg
or
pop
lcall
lret
in
stos
jle
imul
test
jbe
mov
pop
fisubs
adc
add
push
inc
push
or
push
sub
insb
mov
loopne
pop
scas
inc
or
stos
lea
add
sub
adc
cmp
sub
sub
mov
xchg
mov
push
pop
dec
inc
nop
into
cmc
sub
sbbb
mov
pop
cli
pusha
lods
loop
sbb
lods
js
jo
or
imul
xchg
es
inc
dec
add
cltd
mov
adc
and
inc
loope
pop
testb
push
shr
sbb
pop
sbb
jge
sahf
or
jbe
dec
inc
and
inc
dec
dec
and
jp
lds
cwtl
cmp
push
imull
subl
test
subb
push
jle
inc
sub
push
fstp
cmp
and
into
sub
mov
fsts
fiaddl
sub
xchg
cmovg
frstor
add
subb
adc
inc
cmp
cmpsl
add
imul
movsb
and
pop
mov
and
and
test
add
inc
cmp
push
sbb
scas
inc
out
jmp
and
addr16
pop
xchg
int
jge
fsub
in
orb
movsb
pop
fmull
and
inc
adc
inc
dec
jo
mov
sub
inc
fcoms
in
jp
and
pop
or
fldt
inc
cmp
aaa
xchg
xor
pop
sbb
dec
rol
add
fimuls
shrl
push
jmp
movb
lret
inc
cmpsb
adc
mov
jl
sub
inc
dec
mov
std
push
lcall
add
xor
addr16
inc
push
pop
cmp
pop
jne
sbb
popf
shll
mov
dec
gs
popa
test
sbb
movsl
push
clc
shrl
cli
daa
je
or
xchg
leave
jmp
fidivs
ficoml
adc
xchg
imul
cwtl
xchg
jg
pushf
push
cmpsb
inc
cmpsl
test
sti
sub
daa
int
fucomi
cld
call
jne
call
rolb
test
sub
test
imul
add
or
add
pop
jle
inc
add
cmpsb
sbb
and
push
fiadds
sahf
cmp
popf
pop
in
cwtl
jo
jne
push
xor
adcb
mov
pop
dec
lahf
movzbl
pop
aaa
hlt
mov
jo
cmpsb
daa
imul
adc
pop
jge
xor
ja
mov
in
out
rorl
jne
add
lods
std
arpl
clc
cmp
jge
sbb
xor
mov
lock
fucomi
cld
ret
stos
fidivs
or
jnp
les
shlb
fs
mov
add
xchg
sbbb
orl
inc
pop
jne
mov
daa
adc
jle
mov
cmp
aaa
hlt
inc
inc
insb
push
inc
mov
xor
and
push
dec
and
ret
cmpsb
inc
add
addb
add
jecxz
cmp
and
cmp
loopne
popa
pop
xchg
or
sbb
cmp
pop
fisubl
sub
pop
sti
lock
int3
ds
pop
dec
lock
cmp
xchg
ret
iret
ss
adc
pop
test
cmp
push
negl
pusha
mov
inc
xor
xchg
aam
push
xchg
bound
shlb
xchg
xor
xor
mov
pop
adc
orl
stos
adc
xlat
mov
stos
test
lods
jno
xor
mov
jle
adc
enter
xorb
fldt
pop
lods
or
jno
fwait
jne
sbb
mov
inc
sti
rclb
and
and
std
sbb
jmp
das
inc
cs
jg
sbb
pop
in
inc
dec
mov
xor
sti
jmp
cmp
or
imul
dec
adc
mov
es
bound
inc
jecxz
sbb
add
pop
test
xor
les
sub
inc
rclb
push
insb
dec
insb
sub
dec
adc
sub
add
xchg
mov
add
adc
addr16
fcoms
xsaves
sub
xor
xorb
pop
cwtl
push
xorb
or
mov
sbb
adc
cmp
je
pop
into
insb
jmp
ss
pop
ret
sbb
xor
sbb
jne
xor
push
jno
mov
dec
nop
outsb
lret
inc
rcr
stc
fiadds
cmpb
push
into
sbb
add
adc
jns
or
cli
xor
dec
and
mov
jns
push
or
jo
adc
mov
inc
dec
sub
por
pusha
jmp
lcall
cltd
call
inc
sbb
nop
ss
sbb
pop
cmpsl
pop
in
cmp
add
sbb
outsl
jne
mov
sbb
shl
sbb
cmp
add
push
ret
cmp
adc
dec
and
xchg
or
xchg
pop
jecxz
cs
pop
or
aam
in
adc
adc
mov
xorb
and
lods
jle
aaa
mov
mov
jae
lahf
add
je
pop
push
or
loopne
xchg
inc
ss
orb
fdivl
inc
pop
sbb
add
add
cmp
jb
cmp
sbb
popf
popa
xor
fs
xor
outsl
inc
mov
push
inc
test
xor
int3
iret
or
jno
mov
or
test
mov
fildl
mov
mov
add
into
jl
dec
cmp
jbe
gs
dec
or
and
hlt
sbb
into
and
and
and
inc
popa
pop
xor
popa
sbb
push
imul
movl
mov
and
mov
aam
cmp
fs
fsubs
fs
dec
jle
add
es
and
das
movsl
adc
mov
xor
mov
aad
pop
lds
push
add
sti
fnstenv
or
arpl
lea
cmp
jb
es
dec
lock
idivl
or
and
mov
loope
test
in
xchg
inc
mov
sub
clc
cmpb
and
jp
add
pop
inc
sbb
je
push
cmpsl
xchg
imul
cmc
push
movsb
and
and
mov
mov
ret
xchg
cmp
xor
mov
add
pop
jecxz
jne
and
shrb
pusha
push
pop
adc
push
inc
sbb
mov
inc
mov
stos
ja
mov
or
add
add
movsl
fidivl
aam
mov
rcr
cmp
jno
push
in
pop
les
add
or
mov
or
adc
add
mov
push
and
cmpsb
loopne
push
shl
ds
and
and
push
andb
adc
or
sbb
push
add
nop
or
adc
ret
dec
push
mov
cmp
push
es
add
push
mov
into
daa
pop
dec
adc
mov
pop
lods
sub
inc
popf
in
pop
adc
sbb
or
mov
cmp
xchg
jp
adc
ds
in
mov
sbb
inc
stos
test
xor
mov
push
adc
add
mov
xchg
xchg
or
cltd
je
pusha
or
aam
adc
repnz
bound
pop
in
enter
clc
ret
and
jecxz
mov
adc
push
mov
cmpsb
sti
fisubrl
pop
add
sbb
fwait
popl
and
push
mov
mov
pusha
imul
cli
and
sbb
lea
andl
add
arpl
in
sbb
cmpl
jmp
out
adcb
cmpsl
add
or
icebp
lahf
and
push
push
add
dec
xchg
jbe
sub
and
and
cs
push
stos
xor
dec
pop
or
or
mov
inc
lret
inc
pop
mov
shlb
inc
push
add
in
mov
scas
pop
arpl
adc
cmp
add
push
pop
pop
loop
and
std
loope
or
push
stc
or
inc
add
xchg
push
or
outsb
xchg
jnp
adc
sub
sub
out
lods
push
and
cli
push
cmp
std
and
cmp
cmpl
inc
xchg
cmp
and
nop
insb
mov
nop
scas
push
inc
lret
sbb
es
inc
cmp
ret
in
and
xchg
pusha
imul
aas
cmp
inc
sbb
jae
ucomiss
mov
mov
mov
mov
outsb
dec
sbb
add
cmpsb
js
xchg
mov
ja
inc
fs
les
das
out
loop
jge
xor
or
jbe
mov
push
es
movsb
xchg
add
les
or
sbb
cmp
adc
jl
adc
sbb
js
fs
pop
and
xchg
cs
pop
mov
sub
mov
test
sbb
popf
test
mov
cmp
adc
scas
call
test
ds
pop
xor
rol
jae
imul
in
jmp
fwait
jg
inc
mov
push
mov
inc
iret
cld
movups
cmpl
clc
movsl
add
clc
int
or
and
es
sub
loopne
mov
popa
xchg
cld
daa
bound
add
jb
cmovle
aas
lock
mov
cmp
mov
jg
jb
outsl
pop
cmc
sbb
jl
add
mov
repnz
jg
or
bound
mov
enter
jmp
je
call
aas
lods
lret
sub
test
dec
and
dec
ljmp
nop
jg
push
insb
inc
pusha
cmpsb
add
xchg
rolb
mov
lds
lret
mov
adc
push
adc
dec
mov
sub
or
mov
sub
xlat
into
test
adcl
or
cld
dec
jno
sbb
cmc
or
aam
mov
push
pop
add
and
lret
pop
cmp
jle
ljmp
lock
adc
ja
add
lahf
push
adc
xchg
ret
add
push
stc
add
push
lock
enter
xor
orl
fildl
jo
xor
adcl
add
lods
popa
mov
or
inc
pop
xor
dec
ljmp
inc
xor
and
adc
and
pop
mov
popf
ret
or
fbld
xlat
cmp
add
jmp
dec
aaa
addb
xchg
or
pop
jb
sub
fwait
xor
into
add
jl
pop
enter
insl
pop
xlat
jle
sbb
adc
pop
and
mov
cmp
adc
mov
shlb
pop
jb
aas
out
pop
cmp
mov
sub
ss
and
xorl
sub
mov
xor
arpl
push
inc
cli
mov
adc
push
xchg
jmp
pop
sub
addl
push
push
mov
sub
jge
add
es
push
ror
repnz
add
into
aaa
mov
push
sub
fists
shll
cltd
and
lock
xchg
mov
add
stos
push
push
cmp
cltd
inc
mov
push
xchg
rorl
pusha
mov
jbe
inc
sbb
push
sti
mov
jo
mov
add
ret
adc
jmp
mov
pop
cmp
fsubrs
das
or
lahf
jge
hlt
push
outsb
aaa
fiaddl
inc
add
mov
dec
jp
ds
movl
test
adc
dec
insb
inc
jl
div
and
pop
dec
or
enter
add
mov
mov
adc
inc
fdivs
xor
add
or
add
pop
or
dec
insl
sub
leave
add
cmpsb
adc
test
pop
mov
or
or
or
or
sbb
mov
mov
sbb
nop
push
pop
pop
cmp
sbb
add
and
inc
imul
cmp
dec
pushf
mov
test
cwtl
add
adc
and
jl
mov
movsb
rorb
mov
xor
test
rorb
jbe
cmp
dec
pop
test
pop
test
inc
jl
test
pop
leave
shlb
inc
xor
and
xor
js
jmp
jns
cmp
test
inc
mov
jmp
addb
xor
add
add
adc
leave
and
push
dec
ret
push
sbb
in
push
dec
dec
dec
mov
xchg
inc
dec
incl
pop
and
mov
mov
mov
push
push
bound
inc
push
outsl
push
shlb
inc
cmp
jns
fcoml
or
xor
movsb
add
pop
insb
insb
lcall
jl
ja
inc
fisubrs
mov
push
xchg
adc
and
scas
in
push
pusha
imul
or
dec
adc
push
out
bound
das
rorb
fcompl
cmpl
cmp
fnstcw
cwtl
sbb
xchg
jg
cmp
imulb
adc
je
ljmp
or
jl
or
jg
cmp
mov
movsb
insb
inc
daa
pop
xor
mov
adc
sub
cmp
popf
test
jae,pt
pop
jle
cmp
xchg
add
jmp
adc
pusha
adc
or
mov
push
rcll
add
adc
ret
nop
in
bound
rorl
orl
pop
andb
aad
push
inc
push
inc
jmp
ja
adc
clc
and
cmp
pop
mov
ret
addr16
scas
and
push
lods
mov
lods
in
je
rorb
and
jno
loopne
lret
mov
mov
imul
push
pusha
cld
ds
adc
rclb
jle
test
test
inc
mov
scas
xchg
or
lret
push
cmp
cmp
loopne
xor
in
mov
cmpsl
sub
pop
inc
fcomi
xor
inc
add
mov
dec
add
cmp
xor
andb
push
mov
mov
mov
stos
mov
adc
mov
call
fstpt
mov
sub
pushf
pop
sbb
sbb
enter
call
sbb
or
adc
rcpps
pop
lock
or
jne
out
jno
leave
adc
pop
mov
inc
mov
int
or
negb
mov
inc
cmp
sub
and
sbb
or
addl
pop
aam
add
gs
lods
lds
xor
popf
jbe
pop
push
inc
je
out
push
jnp
dec
jns,pn
outsl
shrl
mov
dec
jne
sbb
cmp
add
outsb
pusha
aaa
and
call
cmp
fwait
cmp
adc
pop
mov
rolb
ljmp
jl
das
in
push
pop
or
roll
mov
mov
sbb
fidivs
xor
mov
pop
pop
dec
pop
xchg
out
pop
pop
movl
mov
sti
inc
cmp
jne
adc
mov
iret
dec
adc
or
and
mov
mov
andb
xor
lea
add
loop
nop
xchg
xchg
ds
mov
push
or
call
in
xor
cmp
mov
ljmp
xor
push
outsl
dec
js
jg
outsb
cld
testb
push
and
adc
mov
add
inc
cmp
mov
push
jl
aas
and
cmpsb
addb
dec
xchg
test
mov
test
push
insl
or
push
pcmpeqb
pop
adc
js
xor
mov
fwait
cmpsb
je
or
or
sub
pop
sub
pop
dec
movsb
cmp
les
xchg
lret
inc
inc
jmp
adc
adc
or
insl
push
pusha
adc
cmp
push
push
sub
pop
neg
mov
mov
xor
addb
leave
mov
std
mov
or
or
mov
sbb
dec
test
xor
jnp
adc
mov
mov
cmpsb
jnp
pop
or
rorl
inc
pop
jb
mov
loope
incl
or
js
cmp
xchg
out
add
outsb
cmpsb
test
dec
loope
push
and
dec
mov
and
inc
fdivl
dec
jmp
mov
lcall
fcmovnbe
testb
add
inc
add
cmp
aas
adc
sbb
dec
inc
addr16
adc
lods
sub
daa
ret
jmp
xor
or
mov
mov
arpl
lock
test
sub
ljmp
dec
fadds
nop
add
ret
mov
mov
sub
addr16
jbe
daa
sub
mov
or
aaa
in
mov
scas
add
lds
lea
hlt
cmpsb
test
xor
push
roll
cs
imul
adc
push
or
mov
sbb
xor
sbb
jo
xchg
mov
mov
pop
dec
and
adcb
sub
hlt
sub
dec
sbb
push
dec
cmp
pop
sub
das
stc
ja
lock
test
cmpsb
imul
sbb
dec
sub
inc
in
jmp
add
jmp
sub
inc
sub
in
shll
sbb
imul
dec
ret
mov
and
clc
aaa
lock
imul
hlt
rolb
pop
pushf
cmp
dec
add
aaa
fisubrl
pop
subl
fistps
mov
sbb
inc
adc
push
pop
dec
mov
lock
sahf
xchg
leave
cmp
cmc
js
xchg
inc
pop
xchg
shlb
pop
movsb
push
xchg
push
sbb
xchg
dec
xchg
arpl
lahf
add
hlt
je
daa
dec
dec
sbb
inc
sarl
in
pop
nop
cmp
mov
imul
push
mov
dec
jne
sub
sub
sub
push
xor
add
mov
jp
cmpsl
cmp
inc
lock
mov
lock
pop
push
xchg
xor
fsubrs
mov
pop
inc
sbb
cmp
cmpb
scas
lret
pop
add
jnp
inc
add
push
outsl
and
div
pop
stos
push
fs
mov
push
test
pop
adc
lcall
dec
sahf
push
inc
dec
pop
stos
sbb
inc
push
add
or
aas
je
pusha
daa
inc
and
jmp
push
or
adcb
lods
cmpsb
add
in
divb
mov
pop
imul
xchg
mov
jne
sbb
aaa
pushf
add
xor
add
mov
dec
test
or
xor
and
loopne
and
pushf
rcrl
jo
inc
dec
dec
jno
mov
bound
mov
mov
cmp
or
lods
push
pop
adc
movsb
add
add
movsl
adc
insb
xor
xor
or
popa
mov
or
bound
clc
xor
cmp
and
mov
add
cmpsb
cmp
sbb
rol
xchg
and
xlat
and
leave
dec
add
lods
push
fsubl
adc
cwtl
pop
jno
jecxz
inc
mov
push
je
adc
jmp
bound
mov
insl
dec
pusha
cmp
and
pop
repnz
add
or
lock
mov
hlt
fsubl
inc
daa
sbb
add
daa
push
out
add
pop
or
push
hlt
lcall
and
int3
jg
add
xor
add
lods
arpl
out
outsl
sub
mov
int3
lsl
xor
cmp
adc
outsl
xor
in
fistps
pop
push
je,pn
push
in
iret
pop
dec
decl
in
ret
push
lret
mov
sub
je
pop
lods
aam
mov
push
dec
pop
mov
add
movsb
in
std
push
inc
cld
popa
add
or
or
mov
mov
fsubl
push
xchg
rorl
leave
js
push
clc
mov
fstps
push
and
or
popa
sbb
or
imul
aaa
pusha
cmp
xor
push
fs
pop
ss
sub
pop
mov
enter
add
mov
in
adc
sbb
push
ret
and
sub
cmp
push
adc
and
xor
push
adc
pusha
lahf
scas
mov
ss
inc
pop
nop
scas
push
mov
mov
jg
and
rolb
jns
push
leave
jne
je
mov
add
pop
sbbb
sub
and
in
test
lcall
inc
jbe
xchg
and
mov
cs
mov
add
and
movsl
mov
and
cltd
add
adc
test
xor
or
xor
gs
pop
adc
jge
mov
add
lea
or
pop
nop
pop
cmp
or
mov
mov
push
add
insl
xor
subl
adc
xor
lods
fwait
xor
das
push
movl
loopne
das
xor
cmp
jp
movsl
add
push
lret
fisubrl
loop
mov
dec
cwtl
int
mov
or
mov
test
dec
daa
int3
subl
cwtl
jns
or
addb
daa
scas
sub
int
fwait
mov
push
add
cmp
int3
inc
cs
imul
call
or
pop
das
xchg
jno
push
push
inc
loopne
xchg
cmp
jno
xchg
mov
mov
mov
aaa
pop
add
pop
outsb
cmp
pop
add
cmpsb
shll
fsubrl
in
loope
jo
sbb
push
and
jo
out
mov
mov
mov
mov
mov
loope
mov
add
fs
jne
pop
push
cvtdq2ps
in
das
nop
insb
int
cmp
mov
jne
adc
ret
add
xchg
fisttpll
xchg
inc
and
and
jo
sbb
gs
mov
rol
shrb
mov
xchg
ja
in
aaa
jo
cmpb
lcall
push
mov
sbb
cwtl
rclb
nop
ja
xor
lds
xchg
mov
adc
enter
cmp
pushf
push
andl
imul
inc
and
aam
push
sbb
pop
aam
mov
sbb
adc
add
and
mov
push
add
push
inc
sahf
mov
add
cmc
mov
inc
in
push
pushfw
pop
and
aam
loopne
add
test
lods
ss
cmp
push
inc
rcrb
ret
adc
push
sub
aad
xor
ror
add
or
fnstenv
add
sub
add
add
dec
mov
adc
inc
dec
test
pusha
sub
push
xchg
inc
push
test
xor
jne
dec
fwait
or
cmp
nop
test
inc
adc
push
repnz
fstpt
jge
jno
cmp
dec
jle
add
fs
fs
cmp
fisttpll
jne
add
enter
pop
mov
adc
lahf
xchg
movb
sbb
or
ret
or
enter
pusha
push
icebp
xor
lock
xchg
ret
mov
inc
popl
sbb
mov
movsb
daa
fdivs
insl
sub
or
pop
push
adc
loop
sbb
mov
cs
les
sarb
mov
cmp
push
mov
movsb
pop
fldenv
push
scas
inc
push
push
enter
fisubl
pop
pop
andl
clc
inc
test
or
in
push
pop
js
aad
orl
dec
incl
cmp
loopne
push
cltd
addr16
mov
add
add
mov
sbb
push
xchg
xchg
sbb
mov
ret
call
push
es
shl
add
int
jl
inc
ret
lea
std
sbb
jl
add
xchg
push
cwtl
pop
fistpl
dec
mov
pop
loope
call
rcrb
js
pop
add
ret
popa
scas
jle
sub
or
sub
loope
in
mov
fsubrs
inc
iret
add
pop
aam
test
cmpsb
sbb
iret
mov
aad
adc
and
in
xor
adc
xchg
cmpsb
js
mov
pusha
and
jne
cmp
je
std
or
enter
fsubs
or
loope
add
and
cwtl
cld
jns
pop
pop
cmp
xchg
mov
ret
push
mov
adc
dec
movsb
lahf
insl
mov
dec
or
xchg
xchg
cmp
or
lock
mov
mov
mov
jbe
jg
sbb
inc
pop
data16
pop
dec
daa
stc
or
sbb
stc
pushf
dec
cmp
mov
rorb
insl
cmp
xlat
das
push
cmpb
loopne
xchg
cmp
jle
rcr
and
add
pop
jp
dec
xchg
jo
inc
mov
or
lods
and
inc
lods
sti
in
pop
add
or
cmp
jne
cmpb
ljmp
dec
xchg
dec
push
in
fsubrs
pop
fmuls
push
or
daa
lods
js
mov
cmp
mov
stos
shlb
ret
mov
dec
fnstsw
xlat
jns
mull
push
dec
sub
xorb
arpl
clc
push
imul
pop
and
adc
push
push
and
push
or
rclb
push
test
push
fs
sbbb
pop
ds
mov
test
cld
insl
add
pop
lds
into
sub
xchg
and
xor
add
inc
outsb
jmp
test
pop
xor
hlt
rolb
cltd
daa
push
rorl
cmp
cmp
mov
add
loop
xor
cmpsl
das
mov
sbb
adc
xchg
push
das
in
mov
cld
lds
and
rcl
iret
fsubp
repnz
mov
add
adc
imul
add
mov
mov
sub
outsb
pop
xor
jbe
dec
and
cmp
sub
loop
jle
shl
pop
jb
adc
cmp
popf
sub
xchg
out
add
push
add
outsl
fs
push
add
add
repnz
add
fdivs
add
xchg
adc
shrb
mov
icebp
dec
xchg
mov
lds
sbb
push
push
push
test
mov
mov
popa
in
or
mov
fsts
dec
das
into
xchg
popf
inc
pop
fiaddl
pop
mov
sub
cmp
dec
mov
mov
nop
dec
daa
insl
scas
shll
fadd
sub
pop
add
into
push
xor
fidivs
ret
add
orb
imul
and
in
mov
sub
test
add
xchg
adc
leave
enter
mov
nop
jmp
data16
outsb
adc
cwtl
and
xor
cltd
adc
push
ficoml
testl
pop
push
cs
jne
jle
clc
add
mov
push
sbb
sbb
shrl
push
cmp
loope
movl
loope
cmp
inc
insl
mov
out
push
pmuludq
lods
cmpl
test
sub
mov
pop
add
mov
jl
pop
in
scas
inc
mov
popf
adc
cmp
mov
outsb
cmp
cmp
and
ja
sub
das
adc
aam
sub
or
or
mov
mov
dec
lods
sbbb
xor
inc
adc
ds
mov
roll
imul
sub
mov
aam
insl
adc
je
inc
inc
outsl
and
and
cs
jo
lret
push
data16
xor
dec
adc
xchg
xor
push
sbb
or
push
shl
adc
adc
shlb
push
add
fcompl
mov
sahf
inc
int
das
in
jno
cltd
inc
add
loopne
shl
dec
mov
sbb
stc
cmp
pop
sub
fldenv
ret
popa
cmp
pop
xchg
jmp
dec
mov
adc
xchg
mov
rolb
loope
or
hlt
lahf
rcrb
dec
jecxz
inc
push
sbb
sub
hlt
nop
inc
push
mov
adc
in
lds
jmp
cmc
xchg
adc
push
out
mov
and
mov
movsl
sbb
adc
jmp
sbb
mov
dec
outsb
cmpb
gs
divl
lcall
xchg
sahf
ret
inc
repnz
fld
fidivl
push
ss
clc
les
jne
and
pop
adc
je
push
sub
notl
outsb
xchg
cmp
mov
push
pop
xor
mov
and
xchg
jo
pop
mov
mov
and
dec
add
cmpsb
dec
push
or
push
sbb
or
in
inc
lods
inc
push
stos
xchg
xchg
in
adc
shrb
fstcw
jb
and
icebp
jbe
enter
add
mov
ret
subb
or
std
adc
scas
mulps
movsl
sub
xchg
cmp
mov
call
or
pusha
inc
mov
pusha
push
push
or
push
fmuls
jmp
mov
cmpsl
mov
push
jecxz
lods
mov
and
mov
sbb
sbb
push
xor
gs
add
std
loopne
inc
fidivrl
sub
push
or
insb
loopne
repz
add
divl
es
dec
in
and
or
lea
pop
inc
mov
cmp
je
mov
inc
or
cld
xchg
pop
pusha
add
jb
sub
pop
mov
stc
jbe
div
andb
dec
inc
rorl
imul
jmp
rol
sbb
and
addb
cltd
jne
fisubrs
inc
or
mov
testb
sbb
out
mov
jno
add
sbb
add
shl
add
and
adc
pushf
nop
sbb
cltd
movsl
inc
scas
mov
pop
and
or
pop
loop
test
les
push
out
inc
add
sbb
andb
out
cmp
in
std
pop
and
jg
mov
sbb
test
jl
jl
jne
cmp
jmp
push
les
mov
adc
pusha
jmp
xor
stc
sbb
mov
add
aam
mov
stos
popa
sbbl
roll
push
xchg
fs
xchg
fwait
or
sbb
les
lods
push
mov
push
dec
cwtl
ret
call
pop
pop
and
xchg
clc
push
test
sarl
inc
or
fcomps
cmp
pop
add
xchg
pop
or
enter
test
mov
dec
jnp
lcall
push
cmpsl
test
jne
or
frstor
and
mov
mov
push
sarl
popl
jmp
sbbb
xor
cmp
mov
jbe
jge
adc
cmpl
imul
jl
or
adc
sub
xchg
loopne
sub
sbb
aad
sahf
jns
mov
pop
pop
mov
pop
pop
int3
jp
sbb
xor
call
subl
adc
imul
js
out
add
adc
cmpsb
inc
xor
cmp
or
xchg
pop
adc
adc
orb
xchg
in
or
inc
leave
sbb
mov
mov
rolb
sbb
lock
xorl
leave
test
sbb
loopne
jae
xor
or
mov
xor
cvttps2pi
add
mov
test
inc
ret
fcmove
push
orb
adc
add
sbb
repz
and
and
push
mov
or
cmp
cli
push
dec
mov
cmp
fisttpll
mov
add
pop
or
subl
mov
cmp
jne
cmp
mov
pop
fmuls
pop
adc
fsts
sub
test
xchg
adc
das
repnz
into
imull
or
inc
and
inc
sub
dec
loop
ret
jmp
adc
lods
mov
test
in
pop
pop
into
incb
xor
xchg
addb
or
pop
dec
imul
sbb
inc
jne
ljmp
std
lret
ljmp
mov
or
push
sahf
pusha
add
test
icebp
fcoms
mov
fcoml
sbb
mov
xchg
sub
adc
fnstsw
daa
add
mov
jno
adc
movsb
sub
xor
mov
sub
into
push
daa
scas
push
sub
mov
sub
in
test
mov
sbb
mov
sbb
adc
mov
mov
pop
sub
adc
cltd
adc
adc
shl
xor
jmp
jp
aam
add
lock
lds
jno
and
lods
mov
mov
pop
jb
add
aam
pop
aaa
aam
dec
mov
rol
add
push
jo
cmc
test
fimuls
fsubrp
jmp
or
shr
ss
add
dec
cmp
jbe
hlt
adcl
and
adc
rolb
mov
js
sub
pop
roll
mov
pop
push
addb
ror
dec
and
mov
and
dec
call
aad
gs
pop
rcll
cmp
pop
cmp
jne
fisubl
mov
pop
add
and
cmp
addb
mov
or
notl
xorb
sahf
pop
hlt
dec
xor
test
out
popa
pushf
cltd
in
fcmovb
mov
or
test
out
fcoml
fsubr
jecxz
xor
and
inc
jnp
mov
inc
xchg
push
lea
rorb
dec
push
xchg
pop
std
outsl
loope
andl
pop
sub
test
test
jg
pop
rclb
imul
ret
and
xchg
inc
ss
sbb
pop
push
je
add
jne
mov
cmp
sub
add
lds
xor
fs
mov
jns
mov
add
out
jns
sbb
pop
push
dec
cmp
sbb
sbb
and
jl
xchg
insb
frstor
add
push
test
sub
sbb
and
je
pushf
xlat
ret
pop
loopne
sbb
int3
jg
inc
cmpsb
or
out
inc
jb
repnz
add
out
push
inc
dec
and
dec
dec
aaa
icebp
ret
inc
mov
mov
dec
mov
addr16
sub
cltd
xor
push
dec
sub
test
adc
adc
adc
inc
mov
sbb
adc
sub
insb
add
push
rcll
push
fwait
or
xor
push
inc
mov
insb
dec
pop
push
mov
inc
mov
mov
dec
lahf
pop
ror
fisubrl
ret
mov
pushf
xor
aaa
add
sarb
das
mov
sahf
imul
cmp
je
mov
inc
jb,pn
bound
push
gs
es
call
fdivs
sbb
aad
xorb
test
adc
icebp
ss
jo
lods
bound
add
sbb
add
aad
bound
in
sub
inc
and
mov
nop
dec
xor
roll
mull
xor
out
clc
inc
popa
push
sarb
jge
sbb
lret
cmp
inc
jo
or
mov
inc
in
outsb
ret
mov
adc
pop
push
mov
cltd
add
dec
sub
movsb
push
jmp
inc
movq
mov
inc
add
add
add
mov
jmp
and
jp
movsl
push
daa
sar
loope
push
and
inc
mov
cmpsl
xor
jp
jmp
pop
push
nop
shrl
jo
cmp
sbb
dec
ja
ret
inc
lods
je
icebp
jbe
push
jle
xor
imul
cmp
sahf
xor
or
pop
sub
pop
fnstcw
cmp
dec
test
pop
sub
test
jle
jbe
add
jae
sbb
mov
sbb
add
dec
int3
add
test
in
push
xorl
mov
test
adc
popl
cmc
arpl
mov
lods
je
fstps
xchg
outsl
sbb
push
cmp
sbb
repnz
mov
lea
jmp
cmpsb
jno
mov
mov
add
enter
fdivs
or
andl
push
pop
and
add
jecxz
insl
daa
je
icebp
adc
fcmovbe
fadd
push
push
or
shll
mov
sub
fistps
mov
pop
add
cmp
xorl
add
enter
add
data16
sub
mov
shrb
dec
lcall
cmc
sub
mov
adc
or
aad
roll
fld
cmp
call
or
bound
pop
iret
mov
ljmp
sbb
xor
xor
sbb
sbb
adc
fs
xor
je
inc
subb
add
inc
popf
out
or
pusha
pop
sbb
inc
js
out
int
mov
dec
push
leave
mov
and
ljmp
add
fistps
mov
lret
jb
or
in
cmp
rorb
sbb
mov
jne
daa
rorb
jl
pop
jmp
mov
sbb
mov
jo
ffree
pusha
stos
insl
push
inc
es
or
sub
mov
inc
push
dec
jecxz
fidivrl
and
dec
jmp
pop
push
je
add
xor
mov
pusha
scas
mov
adc
and
and
cli
incl
mov
pop
repz
mov
mov
loope
mov
sub
xchg
into
fsubs
cmp
inc
dec
or
lea
pop
inc
in
dec
mov
enter
mov
pop
sbb
mov
mov
inc
arpl
inc
mov
mov
mov
add
xchg
into
jne
hlt
shl
das
xlat
mov
push
add
and
add
test
popa
pop
sar
loope
push
adc
das
jge
mov
sub
jmp
xlat
sar
popa
test
xor
cwtl
xchg
adc
push
mov
sub
cmpsb
xlat
inc
scas
cmpsl
mov
or
movsb
lcall
sbb
stos
mov
mov
gs
jp
dec
pop
mov
nop
in
mov
adc
popa
and
inc
or
imull
push
es
cmp
inc
xor
and
and
jne
dec
mov
loopne
push
or
xchg
outsb
xchg
decb
and
push
repz
fdivrs
xchg
or
out
dec
xor
iret
push
orb
add
or
add
cmpsl
add
test
or
or
sub
mov
ljmp
add
sahf
jo
shlb
ja
and
mov
sbb
or
clc
jl
or
jecxz
jno
add
pop
xchg
add
sbb
sti
add
and
push
out
dec
rolb
adc
and
mov
icebp
jne
mov
pop
test
lods
lea
lret
sti
and
or
mov
add
or
seta
int3
arpl
adc
push
pop
push
orb
pop
lea
lahf
aam
sub
and
insb
movsb
test
test
jo
ja
push
scas
movsb
popf
aas
jmp
jo,pn
or
adc
gs
out
sbb
mov
das
dec
test
dec
mov
subl
int
cltd
push
lea
or
sbb
add
xacquire
les
test
jbe
ret
je
sbb
repz
ret
jo
push
inc
and
push
xorl
mov
sbb
insl
push
bound
pop
mov
lea
xor
add
andl
or
outsl
xor
test
mov
mov
sbb
leave
push
in
in
sub
rcr
pop
repz
daa
mov
add
inc
test
imul
mov
and
push
les
adc
mov
mov
or
clc
mov
hlt
mov
ret
mov
cmpsl
aam
into
rolb
adc
jl
add
ss
shrb
cmp
push
shlb
andl
add
mov
stos
add
add
arpl
add
cmp
sub
sbb
inc
sub
cmp
jecxz
test
cmpsb
rorl
xlat
cld
mov
fcmovu
out
or
fwait
ljmp
incl
jne
push
or
and
or
add
dec
inc
sbb
jg
mov
call
cmp
sbb
cmp
and
jo
inc
imul
pusha
add
fisttpl
or
adcb
jo
lock
xor
xor
mov
scas
or
add
pop
sub
pop
cmpl
movhps
movsl
sub
push
enter
mov
sbb
mov
sbbb
ret
cmpl
mov
ljmp
push
or
push
sahf
lahf
jl
cli
aam
cmp
sub
ss
rorb
rcrl
and
neg
setae
ds
cmp
add
add
test
or
ror
pusha
jg
fld
imul
js
adc
add
or
decl
lahf
outsb
inc
cmp
je
test
aaa
lds
add
jne
ret
or
mov
sbb
iret
test
mov
jnp
or
add
inc
push
inc
sbb
inc
xchg
add
in
inc
push
fimull
in
call
xchg
pop
out
add
and
dec
jecxz
lret
dec
pop
dec
sub
or
repnz
fs
xchg
sbb
or
pop
pusha
adc
jg
mov
inc
add
add
nop
arpl
fadd
mov
adc
aad
sbb
movsb
stc
dec
mov
mov
mov
es
push
les
adc
or
jno
out
xlat
sbb
scas
test
movsl
sbb
sbb
stos
adc
adc
mov
sbb
jmp
xchg
lock
repnz
xchg
xor
jmp
push
ret
imull
rorb
mov
pop
add
sbb
mov
and
add
and
mov
or
es
fbstp
push
daa
cmp
xor
imul
pop
sub
dec
das
mov
jl
cmp
sbb
adc
xor
xor
repnz
push
push
out
ret
or
xor
je
imul
push
ret
mov
xchg
xchg
and
dec
adc
fsubs
cmpsl
imul
shl
jns
xor
inc
or
adc
adc
les
ja
in
ficompl
insl
mov
mov
cmpsl
adc
sbb
sbb
push
mov
push
or
adc
mov
lret
sbb
xchg
sub
sub
adc
mov
adc
jne
inc
in
inc
and
mov
popa
and
add
fstpl
sub
push
pop
popa
mov
ret
mov
add
or
outsl
or
adc
in
sbb
or
push
adc
cmp
loop
or
mov
andb
into
or
jg
or
mov
sahf
test
cld
movsb
ljmp
sub
fmuls
je
dec
xlat
add
out
incl
dec
or
cmp
aaa
enter
adc
xor
adc
mov
lret
and
sbb
mov
aad
lods
ja
cmp
add
pop
sbb
xchg
adc
adc
sbb
pop
shrb
pop
ret
mov
or
jbe
add
hlt
or
adc
cwtl
fmull
aad
outsb
xorb
test
pop
in
inc
sub
jbe
push
enter
sahf
in
mov
or
sbb
pusha
inc
and
int
gs
in
pop
push
add
xchg
inc
stos
sub
xchg
or
dec
pop
sbb
push
jo
mov
inc
or
dec
fdivs
fcoms
filds
shll
jmp
insl
and
and
ja
lcall
lock
push
sbb
add
add
and
test
pop
mov
shr
addr16
dec
cli
pop
aaa
mov
or
outsb
fcmovb
setne
or
xchg
xchg
xor
mov
or
adc
lods
dec
jecxz
imul
subl
clc
mov
imul
or
inc
inc
adc
adc
mov
mov
mov
add
fwait
sbb
ss
andb
int3
shlb
mov
movsl
roll
test
test
sbb
sub
xchg
pop
xor
xor
shlb
dec
jae
add
or
add
in
dec
enter
and
push
jae
call
loop
add
stc
insb
stos
push
test
ss
add
scas
aam
jo
push
inc
jle
pop
or
adc
fdivl
gs
jp
dec
xchg
cmpsb
sbb
push
and
or
pop
xor
xor
xor
ja
mulb
call
es
lock
push
ficompl
daa
jl
aam
mov
or
hlt
femms
pusha
fs
pop
pushf
cvtps2pi
sub
add
int3
or
mov
mov
add
mov
jge
inc
cmpsb
inc
mov
dec
pusha
dec
mov
pop
mov
push
add
inc
cmp
dec
roll
inc
enter
nop
mov
dec
cmpsb
inc
adc
pop
loop
mov
and
and
xor
es
inc
sub
sub
sub
push
clc
push
jnp
insl
and
jnp
sub
add
and
pusha
mov
fstp
cmp
sub
repnz
mov
das
push
outsb
into
ud1
sbb
repz
push
mov
sbb
leave
shl
or
repnz
inc
movsl
inc
and
or
mulb
adc
or
fdivr
adc
into
leave
clc
adc
push
hlt
enter
stc
and
or
shl
inc
or
fs
mov
cld
das
jnp
nop
daa
cmpl
cmp
fsin
and
lret
push
test
adc
adc
loop
in
add
decl
add
push
pop
mov
mov
xor
or
add
jl
imul
fistl
or
dec
push
cmp
shrb
add
or
xor
gs
cmp
leave
xor
xchg
sbb
dec
push
mov
inc
or
frstor
mov
add
cmp
leave
pop
insl
lea
in
inc
mov
repz
mov
sub
pop
and
or
adc
mov
pop
lods
dec
dec
mov
and
test
push
or
add
mov
add
xchg
or
inc
adc
inc
rclb
or
repz
adc
add
or
mov
inc
loopew
cwtl
or
xchg
add
test
adc
adc
jmp
pop
nop
sub
adc
inc
adc
repnz
or
push
xor
test
stos
mov
add
popa
mov
xchg
add
les
or
push
add
xor
sbb
adc
mov
jno
add
lahf
add
sbb
movsb
in
cmp
je
nop
in
orl
notl
add
pop
je
push
repnz
nop
mov
mov
add
mov
in
in
fildll
push
lods
mov
jo
imul
sub
ljmp
or
mov
adc
movsb
dec
adc
shl
dec
ja
jns
jb
rcll
outsb
adc
adc
loopne
jae
mov
shrl
push
add
xchg
xor
adc
xchg
push
enter
add
popf
movsl
inc
lret
mov
bound
scas
cmpsb
leave
insb
xchg
or
or
leave
insb
mov
movsl
and
aas
mov
dec
popf
mov
nop
xchg
decl
popl
xchg
dec
push
push
dec
add
nop
lahf
outsb
or
pop
fidivl
and
in
inc
pop
pop
addb
sub
outsl
rcr
int3
mov
dec
shlb
out
or
dec
mov
push
flds
sub
ss
push
das
popa
xchg
or
xor
aaa
mov
mov
and
sbb
shll
sbbl
add
add
xor
shrl
les
or
push
je
or
xchg
xchg
xchg
xchg
sbb
xchg
xchg
xchg
lods
shl
add
mov
imul
add
or
clc
mov
mov
jne
push
cmp
cmp
pushl
add
popa
imul
inc
dec
mov
or
je
adcb
dec
pop
jg
lock
inc
add
cmp
add
adc
push
dec
pop
incl
jecxz
mov
xchg
cs
jp
inc
jnp
mov
push
jne
lret
sbb
push
pop
or
push
cmp
test
add
push
or
add
dec
xchg
or
mov
xchg
inc
notb
push
inc
mov
cs
inc
push
sbb
inc
movl
add
xor
cmp
adc
fmuls
mov
inc
js
cmp
sbb
add
fiadds
pop
push
inc
mov
js
adc
or
pop
dec
add
movsl
or
cmp
dec
push
js
rolb
cmpsb
jg
bound
aas
inc
cmp
jge
mov
xchg
jle
adc
inc
cmp
movb
push
notl
sbb
loop
out
lock
dec
je
dec
and
cmp
push
add
add
xor
pop
or
or
and
xchg
xchg
add
or
roll
outsl
xor
add
adc
and
sbb
mov
in
pop
stos
in
push
fadd
or
call
add
sub
push
adcb
int3
xchg
cs
dec
icebp
inc
or
lds
pop
push
pop
inc
xchg
xor
dec
sub
loop
mov
cmpb
jo
cwtl
ret
or
aas
add
inc
cmp
je
mov
adc
cmp
add
lret
cmp
or
mov
jp
push
xchg
pop
test
jp
or
add
jb
xor
push
mov
push
push
testl
jae
dec
xor
pop
aaa
xor
rol
adc
inc
xlat
stc
or
imul
or
sbb
popa
scas
popf
pop
push
jo
pop
inc
popf
mov
js
add
dec
inc
mov
add
insb
pop
inc
jo
mov
testl
push
inc
pop
inc
jno
jbe,pt
jbe
and
mov
outsb
loopne
adc
jnp
shr
sbb
sbb
insl
insl
sahf
push
jg
add
lods
mov
push
mov
enter
roll
sub
cmp
push
pop
add
or
and
cmp
or
cmpsl
push
sub
cmpsl
rclb
dec
cmp
inc
or
mov
or
cmpsl
or
xor
add
leave
stos
dec
shl
inc
hlt
sti
push
jmp
or
into
jge
add
mov
push
cmp
sbb
js
sbb
cmp
inc
mov
push
add
pop
mov
mov
repnz
ret
shrd
pop
cmp
rdtsc
mov
lret
pop
sahf
inc
mov
enter
jl
js
mov
in
cmpsl
add
jmp
fisubs
pop
xor
insl
pop
je
nop
cmpsl
fbld
mov
pop
push
push
lods
shr
add
dec
cmp
push
add
jbe
inc
popa
jo
nop
mov
adc
fs
xchg
cmp
adc
xchg
add
stos
js
inc
cmp
jo
mov
pusha
mov
adc
mov
dec
mov
sbb
dec
and
aaa
js
sub
mov
ja
loopne
or
mov
push
in
test
aaa
lods
js
mov
xor
pusha
ret
inc
pop
lods
mov
sbb
cmp
ss
add
pop
sub
or
aaa
mov
add
cmp
movsl
in
add
mov
stos
popf
and
lret
add
scas
outsl
movsb
sbb
adc
arpl
mov
lock
sti
sbb
xcrypt-cbc
cmpsl
aam
imul
inc
or
inc
movsl
mov
mov
lcall
cltd
nop
cmpsl
sbb
or
xorb
jg
icebp
push
bound
push
xchg
pop
inc
lcall
daa
xchg
or
or
sub
fiaddl
jecxz
mov
dec
adcb
andb
jmp
lret
jns
pop
out
pop
xchg
les
lea
jno
inc
dec
inc
sub
ret
cmp
xor
or
cltd
andb
xchg
pop
add
or
shlb
in
or
mov
dec
xor
and
lahf
adc
in
or
xor
nop
add
stos
cmp
add
inc
adc
adc
cmp
adc
pinsrw
mov
repz
add
sbb
sub
fsubl
xor
das
sbb
pop
lods
jmp
pop
cmp
psubsw
and
rcl
sub
inc
pop
mov
jb
aas
es
sbb
and
xorb
cmp
ja
xor
xchg
xchg
or
pop
and
or
adc
arpl
add
mov
or
mov
notb
cmp
inc
xchg
ja
adc
adc
add
clc
or
mov
stos
pop
in
mov
adc
push
nop
lea
or
cmpsl
or
inc
xchg
outsl
pop
out
pop
jb
pop
call
adc
add
lahf
xchg
inc
pop
xchg
adc
es
in
cmp
adc
rorl
push
add
push
mov
mov
add
imul
iret
nop
test
incl
mov
out
insl
lea
and
pop
cmp
nopl
dec
sbb
loop
inc
scas
into
adc
les
pop
and
data16
lea
add
sub
push
or
cmp
and
inc
jne
xor
lea
cmp
aad
xchg
or
ss
imul
sbb
fisubs
mov
adc
leave
pop
adc
add
push
imul
sbb
daa
pop
xchg
out
call
add
sbb
dec
xor
mov
xor
jo
xchg
pop
or
movsl
cli
andb
add
xlat
mov
adc
and
inc
clc
insl
rorb
adc
lea
pop
cmp
mov
lcall
clc
xchg
decl
inc
inc
push
pop
inc
sub
dec
pusha
push
call
mov
xchg
push
imul
loopne
xor
adc
cmpsl
popa
adc
and
insb
fisttpll
sub
inc
mov
test
in
and
repz
mov
inc
mov
cmp
adc
imul
clc
inc
mov
sub
push
leave
push
mov
mov
insb
jecxz
mov
jne
cmp
jne
scas
and
daa
pushf
push
inc
and
out
or
xchg
mov
dec
lods
gs
add
jns
sub
adc
add
notl
xchg
push
nop
xchg
addr16
inc
repnz
jl
mov
xchg
mov
lock
inc
insl
gs
add
sbbl
mov
nop
push
pop
js
and
dec
iret
xor
mov
movsb
data16
xchg
pop
sub
dec
jge
dec
adc
jl
dec
mov
add
or
out
loopne
sbb
xor
fwait
test
sbb
in
pop
mov
das
adc
lock
cmp
testb
das
adc
push
mov
mov
clc
pop
adc
outsl
les
pop
adc
es
add
popa
push
test
test
jp
in
adc
dec
fdivs
fdivs
outsl
fldt
inc
enter
adc
or
dec
xor
insl
add
getsec
dec
test
pusha
xor
and
in
xor
nop
add
pop
je
scas
ss
incl
ret
push
or
decl
adcb
push
xchg
cli
or
inc
dec
les
or
or
and
or
add
nop
mov
in
jne
dec
outsb
jne
pop
addr16
mov
inc
loop
mov
add
iret
mov
es
add
movsb
pop
xor
push
andb
push
aaa
or
jb
mov
jg
or
test
xor
push
or
or
ret
add
int3
shl
aam
lret
cmp
pop
test
scas
inc
add
and
cwtl
mov
xchg
add
pop
adc
adc
add
and
and
push
and
imul
in
and
movsl
and
adc
fiaddl
xchg
fcoml
push
add
ret
fidivl
mov
jg
enter
inc
fs
dec
push
push
adc
nop
dec
mov
andl
add
sbb
pop
push
lret
insl
add
in
add
adc
mov
arpl
pushf
push
je
mov
sub
mov
sbb
add
adc
sti
dec
sbb
aas
xor
insl
popa
or
sub
and
mov
xchg
add
add
pop
movsb
push
rcl
lods
sub
push
jl
xchg
int3
mov
xchg
inc
movsb
or
or
cmpsb
imul
mov
xor
jo
sete
lock
shll
xchg
mov
hlt
xchg
xchg
inc
adc
lcallw
push
je
inc
subb
sbb
mov
and
sub
jle
sub
jnp
pop
push
sbb
sbb
push
pop
add
sbb
and
rolb
lea
sub
aam
out
jnp
push
les
adc
xchg
mov
xchg
cmp
repnz
add
inc
jl
or
or
test
test
add
mov
xchg
xchg
dec
sbb
pop
dec
nop
out
cltd
imul
out
pop
dec
outsb
push
lret
in
push
pop
lds
enter
lock
test
pop
mov
and
test
test
iret
popl
orb
and
addr16
push
adc
subl
mov
push
pop
push
mov
push
jle
jnp
mov
pop
xor
mov
pop
mull
xor
cmp
cmp
cmp
icebp
sbb
push
aad
in
or
mov
jae
cmp
push
imulb
xchg
jecxz
xchg
jb
add
pop
push
sub
xlat
test
ret
pop
push
in
sub
xlat
lods
nop
call
in
xchg
dec
sti
int3
push
ret
inc
dec
jne
cmp
jnp
pop
sub
and
sbb
adc
pop
fs
in
pusha
int3
fs
push
xchg
dec
and
imul
and
or
push
xor
add
lock
es
xchg
jne
imul
test
sbb
js
push
and
ss
mov
popa
add
xor
push
pop
adc
fiadds
sub
les
stos
cmp
ret
ret
cmp
das
and
stos
test
mov
cs
lods
sbb
mov
xor
pop
nop
daa
int
xor
and
in
push
dec
int
or
pop
ficoms
std
and
sbb
das
repnz
mov
insb
xchg
inc
and
push
xor
enter
loopne
nop
inc
sahf
and
push
push
sbb
test
sub
std
xchg
out
mov
mov
jp
jnp
mov
repnz
js
clc
xchg
mov
mov
or
sub
bound
jo
daa
push
pop
inc
sub
push
js
lea
sbbl
jl
rcr
pop
mov
pop
mov
mov
rclb
push
jl
test
bound
dec
xor
xchg
xchg
in
sbb
jbe
and
lock
hlt
inc
insl
mov
mov
dec
jmp
adc
or
add
pop
mov
andb
jae
add
test
dec
cmp
or
shrb
or
sbb
push
scas
cmpsb
test
push
aam
jg
outsb
cs
dec
arpl
cmovbe
adc
lock
mov
js
mov
lret
js
pop
adc
dec
pop
mov
mov
mov
fldenv
fs
popa
push
xchg
lret
enter
flds
adc
add
andl
fidivrs
lret
mov
push
popa
mov
jecxz
mov
fidivs
and
jnp
add
je
bound
pop
dec
in
or
fwait
sub
or
push
add
jo
nop
test
jne
and
adc
imul
adc
sbb
push
mov
sbb
gs
add
leave
movsl
add
test
mov
pop
fsts
mov
push
or
adc
add
mov
add
cmp
popa
lret
in
test
fsubl
add
adc
cwtl
js
sub
les
push
pop
sub
aas
jo
add
nop
inc
decl
add
inc
jns
jb
mov
push
cmc
push
sbb
inc
andl
or
les
sbb
or
cmp
arpl
adc
dec
pop
adcl
cmp
scas
pop
enter
push
mov
xor
push
add
dec
pop
xor
sidtl
fdivrs
pop
add
int
cmpb
cmp
test
lods
les
mov
and
and
lock
inc
enter
mov
add
inc
aam
dec
push
pop
mov
and
mov
adc
adc
adc
movsb
cmpl
sbb
rcll
scas
inc
pop
inc
cwtl
mov
orl
sbb
leave
leave
leave
ja
ljmp
dec
dec
cs
jno
es
dec
dec
js
daa
daa
inc
daa
pop
sub
daa
daa
daa
daa
xchg
mov
xchg
and
and
imul
xchg
xchg
lea
sbb
or
dec
lods
inc
push
dec
pop
dec
rorb
mov
or
in
cmpb
jnp
inc
cmpsb
mov
sub
dec
mov
mov
inc
sub
xchg
dec
push
mov
xchg
or
jno
fcoml
arpl
adc
or
inc
add
scas
std
rclb
hlt
push
xchg
sub
push
insl
lcall
pusha
xor
cld
pop
or
out
cltd
das
lea
mov
push
mov
mov
or
sbb
xor
cmp
xchg
or
dec
aas
cmp
jne
mov
inc
ja
cmp
fsubrs
inc
pop
movzwl
inc
cmp
inc
scas
dec
mov
or
add
sbb
je
les
outsb
mov
dec
aad
in
jno
jo
cmpxchg
sbb
faddl
pop
lret
das
ror
mov
clc
out
push
das
xor
push
scas
pop
stc
mov
outsl
inc
mov
in
push
xor
mov
or
enter
mov
cs
push
push
sbb
pop
leave
mov
dec
and
aaa
pop
inc
rcll
popf
xchg
sub
pop
andb
mov
cmpb
or
mov
shll
inc
jp
or
orb
add
xor
xchg
stos
aaa
lret
adc
push
and
lock
les
fmull
stos
pusha
test
lret
jns
mov
jb
add
cltd
mov
pusha
cld
or
or
lock
or
pusha
adc
mov
inc
push
sub
int
adc
lret
or
mov
pop
adc
adc
hlt
pop
sub
add
push
ss
xchg
rcrl
repnz
xchg
sub
xor
or
mov
cmp
jb
xor
daa
dec
loope
int
je
add
push
push
cltd
push
mov
or
addb
mov
aas
out
dec
sub
dec
fsubrs
or
les
icebp
jge
cmpsb
in
cmp
xchg
lods
push
add
mov
shlb
xchg
mov
cwtl
adc
shll
or
add
push
in
jnp
loopne
outsl
cwtl
mov
enter
xor
xor
pop
xor
pop
xor
push
test
jg
faddl
mov
mov
out
cmp
lcall
fs
jecxz
adc
hlt
mov
push
cmpsb
xor
shlb
add
gs
push
dec
fldln2
lcall
dec
xor
jns
sbb
stc
cmp
or
sahf
xchg
pop
push
outsb
insl
imul
and
push
xchg
dec
orb
cltd
push
stos
pop
mov
dec
inc
and
mov
dec
insl
push
pop
and
add
sbb
sahf
pop
fildl
jle
pop
sub
adc
jg
add
inc
sub
xor
add
inc
fs
mov
repnz
pop
push
add
pop
add
pop
and
add
mov
ret
push
ret
add
or
popa
lcall
or
loop
in
ss
jnp
pusha
add
add
push
daa
add
cmp
jo
jnp
inc
add
dec
insb
mov
andl
dec
inc
xchg
xchg
xor
sbb
add
jae
or
dec
xor
nop
push
push
inc
xchg
mov
call
movsl
addl
or
adc
insl
popa
xchg
push
mov
sbb
das
sbb
loope
insl
adc
sub
sbb
out
inc
jle
aad
cld
push
push
add
mov
xlat
sbb
ss
out
cmp
test
aaa
pusha
aaa
test
outsl
movsl
test
cmpsb
xor
pop
xchg
or
xchg
nop
pusha
repz
push
add
lret
mov
mov
bts
dec
jo
stos
les
fisubrs
clc
jno
jnp
xchg
stos
add
shll
mov
std
xchg
or
jb
in
cmp
mov
push
lock
repnz
sbb
lods
in
cld
insb
fcomps
scas
inc
mov
jae
push
adc
inc
movsb
cmp
add
mov
dec
add
test
push
pop
mov
xchg
test
or
cmp
add
icebp
add
nop
inc
push
cmp
add
shr
imul
mov
and
ret
push
dec
scas
push
or
sub
nop
or
test
jno
adc
xchg
or
and
jb
sahf
call
xchg
fs
push
int
xor
jmp
and
cmp
cmp
cmp
dec
outsb
mov
or
adc
cmp
daa
daa
out
or
xchg
and
daa
ret
adc
dec
movsl
mov
insb
mov
pop
pop
add
push
sub
dec
push
jo
cmp
adc
mov
pop
cmp
mov
jg
imul
mov
adc
popf
aam
inc
cwtl
dec
jnp
push
in
mov
push
add
xor
dec
jb
and
scas
lea
add
mov
bound
mov
sbb
imul
ret
push
test
cmp
pop
mov
pusha
inc
mov
insb
fmuls
fmuls
in
in
add
aam
and
mov
push
add
movsb
cmp
cmpsl
mov
push
fimuls
out
sub
pop
xchg
cmp
adc
pop
cltd
xchg
ficoms
inc
and
inc
arpl
jb
ss
std
cmp
xor
add
inc
stos
inc
and
add
dec
and
clc
mov
dec
mov
push
inc
dec
jge
push
ficoml
pop
push
xchg
push
cvtps2pd
pop
push
mov
xchg
lcall
dec
les
insb
ret
fld
jns
out
push
test
pusha
test
xchg
repz
out
or
lods
jmp
js
enter
adc
and
sti
xor
and
imul
or
mov
inc
xlat
add
cs
jecxz
mov
sbb
mov
add
scas
xchg
mov
pop
lds
cltd
cmp
outsl
inc
lods
or
sub
mov
or
je
push
pop
inc
clc
repnz
or
orb
sahf
pop
jle
inc
jge
shrl
mov
sub
cltd
sarb
lods
lea
mov
test
popf
push
add
xor
int3
inc
ror
and
sub
mov
insb
cmp
ret
add
lret
loopne
and
and
jp
or
sub
add
and
pop
jmp
inc
dec
mov
pusha
rolb
call
adc
inc
mov
add
or
xchg
out
or
inc
inc
dec
es
cmpl
xchg
sub
xor
xchg
dec
xor
inc
mov
andb
adc
lods
cs
repz
sub
adc
daa
mov
lds
and
push
ret
cmp
stos
dec
sub
call
imul
inc
inc
dec
pop
sahf
movsb
lods
or
mov
aas
adc
scas
adc
xor
stos
and
into
or
pop
add
rolb
dec
bound
daa
testb
inc
jmp
popa
inc
push
sbb
mov
xor
inc
and
xchg
fcoms
mov
nop
mov
std
icebp
adc
std
or
jmp
inc
arpl
push
add
addl
add
mov
pop
sbb
hlt
fmuls
shll
adc
inc
push
push
popa
mov
clc
add
enter
adc
mov
jo
mov
mov
arpl
inc
pushl
sbb
pushl
ljmp
add
adc
incl
sbb
arpl
shl
cmp
jg
imul
inc
movsb
lcall
je
and
not
adc
fadd
jae
sbb
jae
or
fnstsw
pop
pop
mov
fs
adcb
pop
jmp
add
jle
std
lock
add
jne
jle
add
jmp
push
out
scas
xor
or
loope
int
aaa
fidivrl
inc
xor
jmp
xor
enter
push
hlt
aaa
add
pop
rcrb
dec
fidivrs
cmp
ficoms
mov
sub
adc
cmp
fdivl
adc
test
push
dec
out
sbb
dec
sbb
xchg
and
add
scas
inc
mov
adcb
xchg
ret
inc
test
sub
das
sub
sbb
or
fildll
dec
cmp
test
add
push
adc
inc
cmp
fldt
push
dec
cmp
data16
pop
mov
lahf
add
fiaddl
push
sbb
mov
jbe
mov
aaa
outsl
movsb
cltd
push
mov
adc
addb
dec
inc
out
enter
push
push
pushf
mov
pusha
push
test
dec
adc
fcoml
and
dec
in
addb
insb
andb
dec
mov
js
loop
add
sbb
mov
scas
and
lods
sbb
stos
sbb
loopne
test
jmp
jg
adc
and
sub
mov
jo
and
int
aaa
cmp
test
mov
cmp
ss
jp
xchg
mov
add
les
lea
push
add
adc
push
push
enter
jp
mov
aas
dec
movb
pop
cmp
add
mov
adc
pop
push
movl
inc
cmpl
js
cld
push
push
push
fwait
jg
sub
dec
lods
lcall
push
sbb
jle
loopne
ret
enter
xor
pusha
insb
fs
enter
sub
cmp
inc
push
enter
and
inc
pop
js
fildl
pop
inc
js
xchg
inc
inc
mov
data16
aam
sarb
inc
dec
mov
popa
and
add
push
mov
insb
loopne
popf
mov
testl
xchg
xor
jg
rclb
mov
fadds
mov
decl
aam
dec
cmpw
jae
sub
dec
add
add
out
sub
jne
add
push
mov
in
pusha
sub
mov
adc
movsb
sub
add
xorb
and
sbb
adc
add
das
mov
add
push
pushf
sarb
sbb
orb
add
ret
repnz
sbb
gs
adc
cmp
cmpsl
sub
fs
pop
je
pop
mov
dec
test
push
ja
test
enter
leave
cmpsb
aad
aad
adc
dec
adc
pop
idivb
mov
dec
pop
push
and
decb
xchg
in
cmp
dec
or
int3
or
aaa
test
cld
adc
in
mov
cmp
cmp
adc
call
sahf
push
lret
or
leave
push
movsb
mov
or
adc
add
and
or
imull
jae
dec
shll
adc
cld
cmp
sub
add
fdivs
add
test
push
or
push
in
mov
rorl
inc
mov
nop
cld
imul
xor
and
or
and
mov
cmc
out
dec
sti
and
mov
pop
cmp
mov
pop
and
cwtl
adc
or
xchg
testb
mov
xchg
xor
sbb
and
dec
xchg
cmp
dec
mov
dec
mov
sub
mov
rcl
rorl
dec
push
loopne
or
inc
enter
push
push
push
fisubl
inc
xchg
or
scas
add
and
xchg
jp
scas
insb
mov
pop
insb
xchg
inc
mov
aas
push
adc
mov
jecxz
push
adc
or
and
cmpb
jp
mov
inc
sbb
gs
aam
mov
add
xchg
ffree
dec
addr16
insb
out
pop
and
and
test
mov
clc
cmp
push
inc
lock
test
jne
xor
movsl
stos
rolb
in
mov
int
gs
iret
xor
cmp
jne
sti
loop
jne
dec
sbb
inc
sub
bound
xchg
pop
dec
xchg
inc
mov
inc
cmp
ja
call
aad
cmp
jae
mov
ljmp
xor
dec
cmp
sbb
addr16
aaa
adc
mov
mov
cs
mov
aas
or
aam
or
les
mov
cmp
call
xchg
or
or
adc
push
mov
or
mov
fildl
push
push
repnz
push
loopne
push
rclb
subb
jns
xlat
test
adc
jmp
je
add
les
jecxz
mov
xor
mov
push
and
add
dec
lahf
sbb
movl
mov
xor
test
sub
cwtl
es
ficoml
movsl
sbb
push
ds
xor
pushl
mov
or
xchg
mov
push
lcall
cmp
push
nop
sub
add
jle
jmp
and
inc
mov
and
clc
add
adc
int3
das
pop
sub
push
movsb
inc
pop
fsubrl
loopne
push
cltd
push
stos
inc
jo
sbb
icebp
xchg
mov
adc
sbb
xor
pop
push
insb
es
mulb
sub
or
xchg
dec
lock
inc
cmp
adc
loopne
cmpl
loopne
jb
fbld
push
mov
adc
mov
cwtl
rorb
addb
test
dec
adcl
int
out
xor
nop
test
int3
and
out
imul
outsl
inc
xlat
xchg
mov
add
xlat
and
fnstsw
mov
lods
dec
jbe
and
cmp
imul
jno
dec
fldl
loop
and
fstl
sub
and
mov
test
lods
int3
mov
xchg
nop
inc
int
dec
call
xor
or
cs
in
mov
adc
jo
frstor
push
mov
dec
fdivl
nop
aas
inc
or
adc
addl
push
repnz
outsl
add
sub
cmp
push
rol
jg
dec
or
push
out
adc
mov
shrb
push
add
mov
in
cmp
inc
mov
xor
adc
cmpsb
sub
mov
or
mov
in
sub
decl
push
cmpsb
mov
and
lock
jmp
stc
mov
and
cmp
sti
mulb
lea
push
cmp
sbb
push
or
jl
and
in
inc
sbb
mov
or
push
popa
ret
ljmp
inc
inc
mov
testl
call
lcall
dec
jmp
insl
dec
clc
pop
sub
sbb
test
mov
sub
sub
push
lea
lea
cmp
push
aam
je
aam
aam
inc
mov
dec
inc
scas
ror
lods
pusha
aam
jb
add
xor
lret
in
cwtl
rolb
aaa
or
jnp
jmp
sub
or
sub
lock
ret
sbb
adc
push
mov
push
jo
mov
mov
pop
rorb
add
fdivs
add
cmc
adc
fistpl
lock
add
fmuls
jmp
and
sub
sub
pop
fsubrl
sub
jne
push
push
sarl
out
lods
dec
jo
add
push
data16
mov
adc
adc
jp
mov
mov
insb
mov
sbbl
pop
ficomps
jnp
jno
inc
push
and
xor
stos
in
push
add
jmp
popa
add
add
add
mov
shlb
sub
sbb
inc
mov
inc
jae
cmp
jle
and
faddp
jl
cmp
inc
push
push
dec
adc
nop
icebp
mov
mov
mov
ret
int3
sub
outsb
push
add
in
sub
addb
xchg
mov
jb
jge
das
pop
pop
jp
in
adc
std
ret
jge
jg
sub
pop
out
stos
scas
mov
cmp
cmp
dec
and
mov
ret
sub
jno
dec
cmp
nop
insl
lret
push
enter
lsl
pusha
or
mov
incl
popf
push
mov
mov
ret
or
outsl
out
adc
adc
push
or
sbb
call
lea
sub
add
cs
sub
or
add
cwtl
pop
adc
test
pop
jge
sbb
or
cwtl
jmp
pop
jne
mov
add
mov
jne
in
and
mov
pushf
aaa
jne
mov
and
sbb
stc
stos
mov
add
aas
mov
jp
adc
repnz
adc
add
in
jmp
daa
mov
je
push
loope
test
add
fstenv
lock
popf
mov
insl
adc
ss
je
aad
inc
sub
jne
add
add
call
rcrb
sub
push
push
push
fidivl
dec
or
fdivs
xchg
dec
call
mov
fsubl
enter
ja
scas
xor
or
dec
add
nop
arpl
mov
lea
into
push
inc
cmp
mov
or
mov
adc
test
dec
mov
fdivrl
clc
pop
les
dec
mov
push
and
mulps
ss
mov
sbb
jecxz
jmp
add
mov
lcall
jbe
pop
push
add
inc
inc
push
sbb
inc
jne
clc
aam
fsubp
sub
add
jo
adc
testl
shll
dec
sbb
test
sbb
push
push
inc
add
dec
push
dec
js
pop
cmc
pop
mov
shlb
inc
jmp
push
jb
ret
mov
and
imul
nop
dec
and
sahf
or
out
arpl
xor
push
sbb
xchg
mov
adc
hlt
and
out
jns
mulb
or
adc
dec
sbb
mov
dec
push
mov
push
sbb
out
adc
rcl
or
ret
adc
push
xor
scas
loopne
hlt
es
xor
data16
add
in
das
jmp
cwtl
in
clc
je
inc
pop
pop
cltd
mov
popa
mov
arpl
inc
cltd
pop
inc
lcall
pop
xchg
sti
fdivrs
or
push
jo
or
sti
jno
or
jbe
adc
mov
or
add
int
and
pusha
sub
mov
mov
lret
adc
sbbl
jns
cmp
sub
xor
insl
add
mov
arpl
adc
repz
fdivl
decl
push
fdivs
sbb
scas
xchg
pusha
mov
cmp
sbb
dec
cmp
in
adc
test
mov
sbb
xchg
dec
lcall
or
cltd
sub
adc
outsl
dec
jno
and
sbb
inc
cmpsb
xchg
popa
adc
imul
mov
pop
jmp
in
ret
lods
dec
push
push
and
and
out
pop
xor
stos
in
mov
shll
lds
insb
or
addl
mov
push
add
inc
push
xor
pop
loopne
add
inc
aad
or
bound
cmpsl
inc
mov
test
inc
arpl
jo
jl
xchg
sbb
loopne
dec
cmp
sub
shrl
mov
pop
add
xor
into
in
in
in
sub
in
pop
and
rorl
in
aas
mov
xchg
sub
mov
push
ljmp
sub
cmc
std
pop
test
push
jns
inc
fldcw
mov
dec
leave
loopne
sub
mov
add
cmpsb
sbbb
ds
aam
and
mov
psraw
mov
pushf
sbb
loope
mov
jmp
iret
lea
push
push
cmp
in
stos
rorl
test
push
sub
mov
dec
inc
sbb
ja
shll
arpl
scas
in
les
jmp
mov
rolb
xchg
inc
or
in
jne
inc
dec
in
and
or
int3
lock
mov
daa
stos
add
iret
arpl
lods
test
jo
lods
mov
or
insb
sub
sub
mov
loope
sub
add
add
lea
cmp
or
popf
dec
daa
sbb
or
adc
jne
in
les
push
push
loop
movsb
dec
inc
push
enter
jecxz
jne
icebp
test
lret
and
or
xchg
fs
cmp
pushl
scas
inc
or
dec
add
clc
dec
fs
bnd
cs
add
mov
fwait
cmpsl
adc
insb
rcrl
push
and
mov
xor
test
sub
adc
sub
adcb
nop
inc
nop
mov
cmp
xchg
insb
pop
xchg
add
sub
shrb
call
bound
subb
push
inc
test
bndstx
dec
clc
add
rsm
mov
cmp
and
movsb
adc
push
bound
inc
sub
jns
pop
xchg
insl
aam
aad
lock
lods
xchg
movsl
mov
and
dec
aas
jo
add
mov
fdivrl
outsb
and
out
and
inc
mov
mov
pop
push
repz
adc
mov
add
mov
add
inc
xor
push
and
ret
rcl
sbb
xchg
adc
cmpsb
push
push
mov
pushf
inc
andb
xor
insl
xor
lret
jnp
cmc
push
sbb
push
stc
adc
lcall
loope
jge
jmp
pop
push
mov
pop
mov
test
js
jns
ret
pop
add
pop
mov
loop
mov
fdivrl
insb
xor
lret
cs
test
mov
jno
data16
and
sbb
mov
fs
stc
lea
pop
sub
pop
or
scas
pop
xchg
push
out
jmp
les
xchg
mov
or
psrlq
repz
jl
or
or
dec
cmpsl
insb
lods
lea
or
sub
jno
mov
or
ja
aam
sbb
xchg
xchg
divb
or
inc
lods
xchg
shl
pop
sahf
and
movsb
cld
in
xchg
popa
sub
jbe
push
sbb
loopne
cltd
adc
mov
pushf
dec
repnz
push
inc
sub
add
inc
mov
xorl
xchg
imul
inc
push
dec
xchg
cmp
rorb
insb
lret
dec
std
fistps
pusha
shll
add
or
add
popa
xchg
mov
or
cs
jge
xor
hlt
pusha
xchg
xor
adc
mov
xor
jns
loope
sbb
add
sbb
cmp
gs
inc
add
ret
xchg
or
lds
sbb
add
mov
add
nop
lods
or
or
and
mov
fs
xchg
jg
jbe
sub
mov
jmp
lds
sbb
push
fcom
fdivrs
cmp
xlat
xlat
shll
pusha
xchg
or
imul
fldenv
push
xor
rolb
divl
sahf
mov
pusha
inc
cmp
sbb
push
sbb
int3
aaa
or
shl
sbb
cld
jp
mov
in
clc
lock
push
addb
or
lea
or
faddl
mov
mov
lods
rcrb
enter
imul
and
in
ret
add
inc
ret
or
sub
and
xor
jbe
in
out
push
loopnew
or
and
dec
add
ss
or
jo
sarb
es
mov
int3
push
push
lcall
adc
dec
mov
jg
ret
cltd
add
xor
mov
fiaddl
and
xor
jnp
adc
in
dec
stos
dec
icebp
lods
sbb
insl
jnp
pop
gs
sbb
inc
in
aam
cmp
inc
push
sub
add
dec
js
nop
out
and
or
cmp
shll
jo
int
cmp
add
sbb
and
les
les
mov
dec
ds
mov
mov
mov
or
mov
iret
ret
in
push
adc
adc
sbb
push
jns
dec
enter
and
adc
les
sarb
and
test
aad
movsl
jno
out
push
xchg
mov
xlat
ret
jl
loope
dec
xor
lea
adc
ret
rolb
insl
xor
movsl
xor
in
xlat
andl
lret
dec
sbb
aas
cmp
mov
xchg
add
mov
jmp
jle
and
ds
jl
mov
push
xor
xchg
or
test
cmpb
pop
in
sbb
cmp
sbb
adc
add
mov
xchg
pop
jg
mov
inc
or
mov
jl
rorb
popf
outsl
scas
int3
xorb
mov
pusha
jge
lret
ja
mov
add
inc
subl
xchg
mov
inc
cmpsb
xchg
std
sbb
cmp
pop
cmp
sbb
pop
or
pop
cmp
mov
mov
lds
ret
outsl
out
xchg
inc
inc
out
mov
jne
outsl
loop
or
jne
out
les
lea
xor
jg
xor
mov
xor
mov
xor
jnp
mov
pusha
pop
lods
mov
jl
lds
scas
rorb
push
or
loope
jb
popa
xchg
xor
out
pop
adc
mov
inc
adc
pop
cld
dec
cmp
xor
je
sub
push
lret
fildl
inc
xchg
fs
inc
lret
scas
pop
adc
movb
sbb
imul
test
pop
daa
cmpsb
fiadds
push
ret
test
lcall
add
addps
or
mov
mov
push
adc
xor
cmp
sub
and
inc
aas
jbe
and
push
dec
clc
dec
aas
and
js
push
insb
cs
jp
mov
sahf
test
sbb
cmpsl
movl
or
xor
mov
xchg
mov
orl
insb
push
aaa
and
dec
jno
js
cwtl
jns
mov
or
inc
repz
or
add
pop
xchg
add
sbb
mov
jne
xor
xchg
xlat
xor
data16
sub
and
cmc
cmp
cmp
jge
push
mov
dec
xor
call
test
iret
sbb
push
arpl
pop
dec
dec
jo
adc
xor
push
sbb
sbb
into
adc
sbb
fldl
jg
data16
inc
cmp
int3
push
jbe
sar
movsl
inc
add
xor
rcll
mov
xorb
arpl
pushf
adc
call
ret
fsubs
jbe
rclb
rorl
loope
push
mov
add
inc
addb
sahf
lods
jo
or
leave
rorb
inc
dec
bound
xchg
loop
cmpsl
push
divl
or
xor
mov
dec
mov
rol
rcll
and
insb
xchg
or
stos
xchg
cmpsb
cmc
or
cmp
sub
iret
mov
pusha
inc
mov
xor
inc
dec
push
or
sbb
filds
xchg
adc
jne
int3
out
iret
or
or
out
outsb
add
scas
in
pop
mov
mov
push
xchg
aaa
insl
or
cmp
shr
sbb
adc
ret
jg
js
imull
nop
ds
jo
mov
inc
xor
and
mov
test
loopne
mov
push
lcall
sbb
mov
ret
jae
or
loopne
jb
add
imul
sbb
add
jnp
outsb
or
lret
dec
pop
pop
inc
js
fnsave
inc
pop
mov
or
dec
outsb
test
fldl
push
test
sub
ss
dec
inc
mov
test
mov
add
out
cltd
in
xchg
xchg
or
push
subb
pop
adc
ficomps
mov
mov
dec
mov
movsb
xor
mov
sub
iret
push
and
scas
push
jb
inc
idivl
and
and
xor
push
xor
inc
inc
or
mov
aas
je
sub
mov
icebp
loop
sub
cmp
sub
bound
sub
jns
sub
mov
mov
cwtl
jbe
pop
add
dec
lods
pop
or
or
inc
push
cmp
pop
cmpl
push
and
mov
jl
je
enter
jl
or
aaa
test
cmp
add
sbb
loopne
test
push
lods
push
push
lds
mov
mov
push
pop
rclb
add
inc
jae
add
dec
jl
add
pushf
add
test
sub
adc
cmp
aas
in
and
xor
cmp
sub
aam
sbb
jne
popf
xor
and
shr
call
shlb
pop
out
call
je
dec
xchg
or
insl
fwait
inc
xchg
mov
jnp
and
inc
add
add
pop
mov
mov
cmp
push
or
and
fwait
and
cmovg
pop
lock
xor
inc
sbb
cmp
addr16
ss
cmp
pop
popa
lods
test
lea
jne
add
repz
stos
jne
or
pop
movsb
add
push
add
rcll
and
dec
add
addb
cmp
mov
xchg
add
mov
dec
add
fiaddl
sub
add
cwtl
and
adc
aam
inc
ja
and
mov
insl
loop
ret
pop
fidivrl
imul
or
fisttpl
or
sbb
push
adc
in
ret
lret
lret
adc
or
push
sbb
les
inc
ds
int3
dec
pop
fimull
jg
mov
xor
fidivs
les
dec
sahf
out
pop
mov
dec
add
leave
enter
insl
test
sbb
pop
dec
xor
xchg
fs
sbb
pop
mov
fs
pop
push
sbb
or
int3
jne
repz
mov
les
sbb
movsb
repnz
ror
jne
xor
cmp
gs
cld
fcoml
lret
cltd
adc
in
je
cmpsl
in
ror
and
imul
loopne
xor
sbb
add
xor
jl
rol
sub
fbstp
and
dec
or
dec
add
shll
in
add
xchg
jnp
je
jmp
pop
inc
or
fstpt
mov
hlt
jmp
fs
jns
push
sub
inc
lret
loopne
sub
dec
sub
enter
loopne
out
gs
sbb
sub
jo
mov
and
pop
pop
test
fldpi
in
dec
mov
fbstp
loope
rclb
push
cmpsl
pop
dec
sti
pushf
inc
dec
jecxz
fadds
lahf
pop
imul
lds
jg
or
nop
adc
add
clc
add
outsb
lret
sahf
cmc
mov
pop
push
sub
inc
outsl
call
cmp
call
leave
lods
xchg
dec
pop
popa
roll
jns
cwtl
sub
or
push
cmp
dec
sub
mov
and
adc
xor
inc
cmpsl
fsubl
adc
pop
sub
in
lds
cmp
cmp
lods
and
sbb
mov
mov
add
int
inc
push
fnstenv
add
lea
dec
inc
sub
addr16
gs
pop
lods
das
sub
dec
stos
icebp
sti
jl
inc
inc
push
test
sub
sub
lea
xor
xchg
mov
ret
inc
sbbl
mov
jge
or
inc
test
lock
xor
add
out
sbb
add
xor
fmull
mov
jb
pop
cmp
jg
dec
and
and
jne
xchg
inc
subb
push
pop
inc
sahf
cmp
cmp
mov
pop
xor
pop
fs
inc
rcrl
lock
test
cltd
push
pop
cmp
sbb
mov
push
les
or
andl
xchg
lahf
pop
jo
and
mov
inc
inc
adc
sbb
push
push
mov
xor
iret
popf
pop
xlat
inc
sbb
daa
add
mov
adc
cmp
add
fmuls
add
jo
insl
sbb
push
pop
iret
in
fidivrs
add
push
push
les
or
stc
mov
xchg
lock
xchg
xlat
sub
adc
pusha
dec
xchg
decl
movsl
cmp
not
adc
add
jns
push
cmp
pop
add
push
mov
es
into
mov
inc
sbb
lods
xor
sbb
and
push
adc
jno
mov
push
dec
lret
filds
mov
adc
aas
decl
xchg
sub
add
nop
mov
xchg
push
fs
call
sahf
daa
pop
push
ret
aaa
xchg
cmp
xchg
cmpsb
inc
pushf
jge
ret
sbb
jle
push
inc
fs
js
sub
or
dec
pop
lds
xchg
or
dec
pop
adc
xor
test
xorl
mov
dec
testl
subb
adc
push
or
sbb
cmpsl
push
cmp
xchg
ss
xchg
sbb
add
je
cmp
int
mov
leave
addl
sahf
dec
pop
push
sbb
adc
mov
ret
xchg
xor
ret
add
push
test
add
xchg
and
enter
stc
and
dec
dec
inc
mov
mov
add
repnz
add
rorl
rorb
fadds
lahf
add
pop
xchg
adc
xor
pop
fstp
push
xor
xor
sarb
aaa
mov
sbb
divb
xchg
mov
sub
jns
loopne
and
add
sete
test
dec
xchg
xchg
jno
test
cmp
inc
xchg
test
xchg
push
push
adc
adc
sbb
mov
ret
dec
insl
inc
push
xchg
out
jno
jae
cmp
xchg
push
dec
xchg
fdivs
inc
or
and
mov
popf
and
push
lea
push
jmp
sbb
sbb
cwtl
nop
jmp
push
fnstcw
cmp
es
inc
cmpsl
lock
sbb
pop
push
cs
add
sub
fisttpl
nop
mulb
push
and
or
mov
sbbb
jnp
mov
jle
hlt
punpckldq
xchg
dec
repz
mov
jmp
lea
pop
push
popa
adc
mov
mov
mov
nop
sub
fnstsw
clc
mov
cmp
ljmp
dec
mov
xlat
mov
sbb
imul
in
add
stos
jmp
adc
in
mov
inc
and
hlt
and
fidivrs
or
mov
mov
or
xlat
xchg
add
xchg
add
sbb
rcl
add
xchg
dec
mov
adcl
dec
xchg
mov
insb
and
imul
rorl
xchg
xchg
add
jle
in
aad
bound
aad
sbb
xor
and
pop
imul
nop
je
pusha
push
addr16
arpl
jecxz
addr16
or
aas
test
je
push
pop
lds
cmp
mov
lods
nop
jmp
inc
push
and
rcr
xor
pop
or
add
cmp
pop
gs
insl
inc
lods
ficoms
push
ss
sbb
mov
jo
inc
pop
shrb
mov
mov
xchg
lods
sarb
arpl
stos
xchg
or
jmp
pusha
cli
cli
dec
sarb
jne
sbb
and
push
inc
inc
shl
mov
push
lcall
and
xor
cld
mov
inc
cmp
push
scas
nop
lods
add
int3
rorb
push
or
pop
popf
lea
mov
notb
jp,pn
jle
xchg
jae
test
ret
xlat
xchg
push
orb
xchg
xchg
addl
arpl
inc
xchg
addb
movl
in
in
ret
add
aas
es
inc
leave
pop
jb
add
sbb
lods
dec
cmp
das
jge
cmp
subb
push
stos
shr
sti
pusha
lock
ja
test
pop
test
dec
and
push
insb
sbb
cmp
test
rcrl
cmp
cmp
jo
sahf
lcall
xchg
pop
xor
pusha
andl
pop
inc
dec
inc
push
je
xor
iret
pusha
dec
add
je
mov
jns
jmp
push
inc
mov
cwtl
xchg
mov
mov
mov
xor
sub
jo
sbb
fwait
lret
ret
hlt
xor
mov
iret
mov
mov
sub
xchg
mov
scas
lock
std
or
dec
aas
scas
sbb
jbe
and
pop
pop
mov
adc
movsb
nop
adcb
mov
dec
fistpll
inc
pop
fdiv
or
lods
pop
pusha
jle
cltd
inc
jmp
push
pop
mov
add
nop
pop
dec
and
xchg
cs
dec
jno
pop
inc
subb
ja
push
sub
dec
push
adc
push
nop
nop
xor
test
pop
inc
ljmp
push
aaa
push
or
movsb
ds
mov
xchg
xor
jmp
xor
mov
frstor
imul
and
inc
pop
aaa
popa
lea
mov
push
aaa
in
fwait
add
lahf
testb
push
cmpsb
inc
cmp
adc
dec
jge
pop
mov
jae
dec
sbb
and
js
mov
movsb
pop
jmp
and
xchg
hlt
add
ljmp
push
push
sbb
pop
or
mov
xor
test
pop
out
pushf
mov
or
lods
dec
inc
jo
ss
js
pop
pop
adc
inc
or
add
push
xchg
and
outsl
mov
xlat
cltd
int3
inc
mov
rcrb
lret
inc
sti
cmp
jmp
sbb
icebp
add
cltd
mov
adc
pop
cmp
hlt
popa
nop
or
adc
in
add
decl
sub
pushf
orl
das
jb
sub
inc
shll
popf
jmp
and
mov
mov
clc
popa
sbb
sti
or
sbb
adc
mov
push
sub
aaa
in
popa
test
pop
inc
add
nop
test
jbe
popf
adc
push
aaa
hlt
cmp
dec
jnp
push
clc
movsl
mov
or
je
xor
popf
lea
inc
xchg
mov
sahf
test
sub
lods
dec
or
mov
icebp
fcomi
setns
xor
dec
pop
test
cltd
or
jae
or
mov
inc
jle
and
add
push
or
xor
add
cmp
daa
push
push
add
scas
adc
push
not
pop
jp
mov
sub
add
xchg
xor
cmpsb
inc
cmp
dec
lock
jg
je
mov
psraw
and
jp
fistl
xchg
into
sub
orb
sub
inc
cmp
sub
or
push
scas
lods
sbb
hlt
or
mov
dec
and
outsb
mov
mov
adc
dec
imul
cmp
jne
xor
or
sub
cmpsl
dec
or
lods
cmpsl
inc
inc
scas
jns
testl
aam
push
out
cmp
clc
loopne
add
adc
lds
cmp
dec
dec
or
add
stos
dec
repz
bound
movsb
pusha
cmp
sub
movsb
push
and
adc
icebp
inc
fmul
adc
ja
push
xchg
cmc
jl
adc
aam
dec
jge
mulb
enter
jp
sahf
in
pop
call
sbbb
or
add
scas
enter
dec
stc
repnz
xor
jg
je
dec
dec
jne
call
mov
sbb
sub
mov
je
fdivs
jl
pop
xchg
pusha
test
in
mov
es
push
scas
loope
jne
shlb
lods
cmp
imul
cmp
imul
pushf
loop
testb
fidivl
stc
add
add
imul
dec
test
adc
push
or
push
push
add
and
scas
int
mov
cmp
sbb
hlt
fisubs
movsl
xchg
enter
andl
sbb
fadds
sub
sub
rcrl
mov
add
jmp
fdivrs
inc
or
sub
dec
pop
xor
push
mov
movsb
test
fisttps
xor
jo
jge
push
or
sti
or
lock
push
push
xchg
xchg
pop
or
push
testb
sbb
push
cmp
inc
sbb
xor
mov
add
cmp
leave
popf
add
aam
push
add
mov
add
mov
inc
aam
xchg
or
call
cmpsl
push
shr
add
leave
xor
add
into
aam
popa
in
push
or
adc
lods
xor
cmc
sbb
jns
sbb
xchg
sbb
rclb
push
add
ret
pusha
test
jecxz
orl
xorl
movsb
subl
movsb
push
in
xlat
nop
xchg
clc
loopne
add
mov
mov
bound
push
xor
clc
pop
lcall
or
inc
rclb
add
pusha
jge
insl
in
das
inc
sub
push
mov
and
pop
mov
jge
loope
pop
lods
test
call
push
push
xchg
dec
sti
cmpsl
pop
rcr
mov
adc
add
push
inc
and
add
pop
stos
ljmp
lds
jecxz
cmp
dec
push
and
dec
jno
lds
add
push
push
xchg
or
add
mov
test
shrb
inc
mov
adc
push
pop
pop
adc
rolb
inc
pusha
pushf
ret
loopne
fs
dec
mov
and
mov
mov
clts
andl
inc
imul
fiaddl
add
arpl
fisubrs
loopne
idiv
clc
and
test
sub
inc
or
and
inc
lods
ret
inc
push
cs
dec
pushf
and
cmp
and
inc
lock
xor
fists
or
mov
sub
pusha
add
pop
rcrb
and
pop
lods
and
and
mov
psubw
add
jge
xor
jl
repnz
cmpsb
push
mov
pop
jns
pusha
das
inc
cmp
mov
jp
cmovl
stos
and
jno
cmc
sub
push
jnp
mov
sub
mov
in
sbb
shll
add
loopne
or
hlt
int3
inc
push
movsl
rclb
mov
push
mov
test
sub
pop
ss
cltd
jmp
add
pop
sbb
sbb
mov
call
jns
movsl
fisubrl
mov
push
add
mov
inc
mov
add
or
je
xchg
or
jge
cmp
les
mov
rcrl
xchg
jmp
and
je
add
cmp
pop
adc
and
xchg
dec
inc
push
addb
mov
lods
cmp
lods
and
add
fists
mov
je
rcr
and
mov
fiaddl
aad
andw
in
adc
adc
idivl
std
add
mov
push
lret
inc
pusha
mov
aam
jne
sub
lods
sub
clc
or
popf
cs
sub
btr
sub
dec
sahf
or
add
or
popf
xchg
xlat
dec
or
sbb
or
testb
inc
jmp
sbb
iret
and
inc
xchg
fucomip
jle
or
add
jno
ja
jle
and
add
and
jns
lahf
push
sbb
and
sub
adc
ret
dec
adc
cli
jge
sub
xchg
popa
push
cmp
jge
enter
mov
cmpl
cld
mov
popf
ret
pop
cld
sbb
add
jne
adc
rcrb
and
aam
or
adc
adc
and
add
mov
popa
int
dec
das
cwtl
mov
and
cwtl
pop
mov
and
cmpsb
popl
movsb
pop
andb
pop
pop
das
js
pop
je
imul
stos
xchg
jbe
xor
pop
fs
xor
pusha
les
push
and
sbb
jne
in
lock
push
mov
add
pop
inc
ds
pusha
mov
add
or
rclb
push
dec
lret
insb
movsb
sbb
iret
outsb
stos
sub
and
add
prefetch
icebp
pop
mov
jnp
insb
pop
addr16
cmpb
pop
pop
push
popa
add
adc
or
jae
rolb
lahf
jae
push
inc
jbe,pt
dec
call
out
jmp
push
imul
or
jmp
inc
lods
xchg
test
adc
pop
add
cs
inc
popa
jo
cmp
or
sbb
jns
dec
push
adc
in
add
mov
in
pusha
inc
push
sbb
or
insl
mov
outsl
sbb
sbb
dec
pop
or
popa
imul
jne
in
sbb
out
mov
adcl
push
adc
scas
adc
sbb
fmuls
cltd
inc
stos
and
cmp
mov
ss
pop
stos
pusha
sarb
das
pushf
jo
pop
int
dec
cwtl
inc
or
or
push
mov
pop
add
or
jge
repz
add
btr
dec
icebp
pop
xor
cmp
test
dec
adc
and
repz
mov
addr16
jg
sbb
pop
notb
and
or
xor
add
imul
lods
sbb
xor
mov
and
xlat
and
or
lock
mov
push
adc
popa
icebp
jbe
sub
adc
or
andb
mov
and
jae,pn
bound
adc
mov
shlb
pusha
enter
pop
mov
pop
mov
inc
das
cmp
or
add
pusha
loopne
pop
imul
push
mov
push
bound
pop
test
mov
push
add
adc
loopne
or
inc
mov
cmpsl
or
cs
xor
scas
sub
dec
push
sub
cmp
imul
push
sbb
popa
add
stos
sub
jo
inc
scas
popa
loopne
xchg
sub
sub
inc
pop
das
xor
popa
dec
pop
jmp
rcll
sbb
pop
mov
fsubrl
mov
add
pop
insl
or
repnz
nop
add
fdivrs
mov
or
xchg
pop
mov
jl
push
or
or
mov
or
fidivrl
js
cltd
ja
add
and
push
xor
pusha
cmp
pop
sub
test
push
insl
loopne
xor
xor
push
test
adc
or
mov
and
mov
xchg
mov
mov
dec
out
pushf
pushf
pushf
outsb
xchg
mov
xor
adc
dec
dec
repz
pop
add
cmpsb
xor
movsb
gs
rorl
dec
or
push
cwtl
cmpsb
pop
imul
shrb
and
sbb
lret
dec
popa
push
bound
rol
mov
inc
or
dec
xor
ja
pop
sub
push
xor
leave
fimull
flds
mov
mov
es
push
add
loopne
mov
pushf
dec
in
in
pushf
mov
popa
xchg
popa
cmp
ret
fimull
add
inc
filds
xlat
pop
push
push
mov
push
jmp
push
test
dec
sbb
cwtl
inc
push
js
pop
mov
les
add
sub
mov
xor
in
and
pop
xor
and
data16
stc
or
sbb
pusha
aam
mov
mov
fmuls
nop
invd
push
and
call
pop
enter
in
dec
xorl
das
xor
add
adc
adc
inc
popa
in
mov
icebp
add
cmp
pop
out
sub
add
pop
jmp
pusha
or
sbb
fmuls
mov
dec
pop
and
mov
bound
mov
scas
add
gs
jge
leave
or
mov
cwtl
mov
cltd
popa
xor
sbb
and
mov
pop
sbb
jl
jno
push
repnz
push
and
arpl
mov
cs
pop
or
xor
rolb
pop
push
adc
pop
xor
fmull
inc
sub
in
pop
andl
and
mov
xchg
daa
push
sub
sub
xor
mov
movsb
xchg
cmp
call
mov
mov
bound
mov
cmpb
mov
mov
and
outsb
mov
lods
jno
rolb
cmp
sub
clc
dec
cmp
mov
pop
cmp
cmp
subl
int
lcall
sub
popa
movsb
jne
dec
or
pop
xchg
mov
inc
sub
lds
or
in
or
daa
add
mov
and
addr16
cmovg
push
nop
ret
rorl
cmp
push
pop
cwtl
pushf
cmp
and
pop
mov
scas
out
mov
mov
fsubrl
int3
push
test
out
cs
inc
repnz
cmp
mov
pop
xchg
cld
loope
add
jnp
mov
mov
pop
mov
fmuls
or
adc
addl
mov
and
cltd
iret
add
and
pop
sbbb
es
push
xchg
pusha
mov
pop
les
test
dec
js
cmc
pop
mov
movsl
mov
jo
cld
dec
outsl
out
jbe
mov
popf
or
test
pop
and
pop
iret
das
aam
adc
icebp
or
push
inc
and
mov
pushf
test
aam
inc
lods
popf
nop
push
rolb
enter
add
dec
or
lcall
jns
xchg
jnp
or
ds
sub
jp
or
dec
jnp
decb
jl
add
jp
ja
push
hlt
mov
cld
les
add
push
test
add
call
repz
movsb
push
fidivrs
vmwrite
jmp
in
or
les
es
pop
cmp
mov
jno
xor
movlps
das
cmp
and
outsl
sar
dec
mov
xor
adc
clc
inc
mov
mov
mov
gs
add
cmp
sbb
adcb
mov
fstpt
xchg
or
aam
adc
inc
adc
adc
sbbb
jns
inc
and
mov
sbb
jnp
fidivrl
xor
frstpm(287
or
push
or
arpl
into
or
or
int
pusha
mov
call
sbb
or
pusha
xchg
add
sbb
mov
and
pusha
in
sbb
enter
xchg
sbb
or
sub
pop
adcl
inc
lock
loop
outsl
imull
cmp
mov
pop
bound
gs
in
add
fmul
or
and
push
dec
outsl
push
in
add
fnstenv
pop
fwait
sbb
xlat
popa
sbb
inc
and
mov
stos
fs
ficoms
and
ud2
pop
sbb
test
or
out
in
dec
dec
pop
mov
dec
sbbw
lret
mov
xor
adc
and
outsb
adc
xor
dec
aas
jae
sbb
rorl
mov
js
outsb
arpl
enter
insb
add
push
into
popa
iret
ret
mov
repnz
jecxz
mov
push
xchg
and
bound
das
mov
insl
bound
popa
sub
fs
or
pop
cmp
movlps
ret
adc
ret
test
adc
aas
test
ds
les
jbe
pop
and
and
insl
xor
adc
jb
dec
jnp
test
or
mov
inc
repz
mov
inc
out
and
sti
jb
pop
aad
inc
and
rorl
mov
das
lock
imul
shll
or
ja
outsl
repz
dec
outsl
ljmp
ss
adc
push
adc
loop
xchg
cmpsb
pop
jle
add
data16
add
lods
jecxz
mov
bt
insl
dec
xor
popf
testb
or
lods
es
int3
shl
push
xlat
ss
add
sbb
push
popa
imul
xor
xchg
add
adc
popf
pop
fadds
or
add
push
xor
and
cmp
adc
in
pushl
imul
nop
es
aaa
pop
inc
and
add
xchg
mov
js
ret
or
or
push
roll
pop
dec
out
add
and
shll
scas
sub
add
sbb
adc
test
push
adc
adc
pusha
and
sub
cmp
add
data16
jae
dec
cmp
mov
inc
es
add
call
mov
inc
jnp
sar
dec
rol
rolb
mov
dec
mov
add
adc
int
imul
inc
add
xchg
sub
mov
fildl
enter
sbb
pop
sbb
test
jae
mov
pop
enter
cmp
and
xchg
iret
xchg
cmp
repnz
mov
pop
pop
push
pop
or
filds
or
enter
adc
add
or
nop
or
enter
lds
in
nop
adc
in
les
leave
les
sti
out
jnp
lock
xor
or
inc
jb
inc
push
xor
test
xchg
leave
fcoml
adc
insl
movsb
and
mov
push
sbb
add
inc
cmp
popa
fsts
dec
add
dec
stc
lds
xchg
jmp
decl
adc
push
and
cmp
or
lds
or
inc
push
in
add
pop
add
push
mov
jo
sti
sub
andb
enter
sbb
add
cmp
add
and
push
add
cmp
add
adc
inc
mov
repnz
pop
push
xor
popa
add
add
jb
cmpsb
into
cmc
pop
xor
inc
lret
push
add
pushf
fmull
inc
mov
test
add
dec
and
and
add
inc
es
aam
add
jb
sbb
dec
add
rcrl
mov
sbb
in
xorb
sbb
aaa
push
jmp
and
pop
dec
push
mov
dec
imul
xchg
cmp
outsb
pop
add
or
lods
and
je
sbbl
mov
or
filds
and
dec
cmpsb
mov
mov
mov
add
cmp
xor
or
pushf
jo
cmp
add
jne
fmuls
fsubr
sub
cmp
hlt
push
adc
push
in
jns
xorb
aam
test
popa
mov
icebp
inc
test
leave
rcll
xchg
dec
loope
mov
lret
and
adc
cmpsl
std
xchg
pushf
mov
push
and
xchg
dec
loope
sbb
mov
aas
add
lret
cmpsl
iret
lods
or
xor
or
vmovsd
push
pop
into
lock
push
dec
data16
mov
or
dec
push
loope
adc
mov
xlat
and
dec
shrb
test
sub
cmp
xlat
int3
ret
or
fs
and
dec
xor
xlat
add
fucomp
inc
psllw
adc
inc
mov
adc
insb
daa
dec
cmpl
arpl
adc
data16
ja
shrb
cmp
sbb
push
push
dec
dec
or
push
cmp
dec
adc
bound
js
adc
push
push
jg
sub
aaa
inc
pop
out
pop
mov
inc
or
addl
fstpt
adc
test
adc
push
sarb
cwtl
add
xor
xchg
stos
lds
dec
add
pop
sarb
insl
xchg
mov
and
jo
add
fidivs
subb
push
bswap
mov
rorb
or
sbb
sbb
inc
inc
or
adc
push
in
imul
xlat
insb
jno
add
inc
add
call
dec
pop
dec
sarb
sub
jns
sbb
adc
jg
inc
add
sub
push
aas
xchg
dec
cmpsl
inc
loopne
ljmp
xchg
xchg
and
add
xchg
dec
jno
mov
dec
adc
xor
mov
mov
xchg
out
jnp
sub
addb
or
ss
adc
rolb
or
sub
stc
dec
xor
and
xor
push
or
xchg
jbe
ret
push
xchg
inc
dec
cmp
cmp
jae
dec
pop
push
shll
cmp
incb
nop
dec
sbb
aad
mov
int3
and
aad
mov
out
mov
out
dec
iret
rcll
iret
repnz
inc
orps
fwait
adc
xchg
fldcw
adc
sub
js
cmp
data16
push
fadds
pop
dec
mov
lret
mov
pushf
sbb
sbb
and
arpl
add
inc
xor
sahf
and
pop
mov
adc
or
aas
add
xchg
add
or
xor
mov
inc
adc
mov
jl
dec
test
xchg
fisttpl
or
mov
arpl
or
mov
adc
popf
push
add
and
lods
cmp
inc
adc
sub
cmp
fimull
movsb
push
xor
sbb
int
xchg
push
or
test
pop
jge
dec
rcl
xor
loope
adc
adc
add
xor
push
test
jae
add
pop
adc
bound
lea
addr16
xchg
movsb
inc
pop
gs
sbb
mov
popaw
mov
inc
add
fcmove
test
in
and
sub
nop
mov
outsb
lods
fistpl
or
sbb
mov
or
sti
mov
int3
pand
clc
push
push
lcall
enter
addr16
jmp
test
mov
mov
push
cmp
stos
imul
pop
cmpsl
inc
arpl
add
add
sbb
rorl
add
jno
adc
in
imulb
arpl
or
dec
and
or
sbb
inc
add
jmp
das
in
jo
or
jl
fldl
xlat
or
and
in
inc
mov
bound
setge
dec
add
xor
lret
bound
push
xor
gs
jb
inc
adc
scas
mov
sbb
and
pusha
mov
sub
popa
xchg
pop
icebp
push
add
nop
mov
aaa
pop
or
outsl
inc
stos
adc
add
shll
insl
or
loope
sbb
into
mov
fiadds
test
fs
daa
cmp
inc
mov
or
sbb
out
or
mov
stc
test
xchg
je
or
mov
leave
xchg
loopne
lds
in
and
adc
cs
scas
jns
fadds
cmpl
or
hlt
sbb
and
or
cmp
inc
cwtl
or
inc
sub
std
mov
cmpb
in
cmpsb
add
loop
lcall
jmp
or
pop
or
in
movsb
aad
add
add
ret
xchg
xlat
lds
pop
nop
loope
or
sub
sbb
pop
push
cmp
xlat
outsb
pop
or
adc
sbb
mov
clc
sbb
push
pop
jae
pop
xchg
add
jo
movsb
ret
jne
mov
pop
mov
pop
sub
lcall
pop
xor
xchg
sbb
loop
dec
pop
and
pop
inc
xor
inc
and
data16
sbb
adc
mov
movl
sbb
adc
popl
add
add
push
enter
add
nop
pop
or
stc
add
xor
mov
add
push
cmp
mov
jecxz
lret
adc
or
imulb
add
push
or
dec
inc
or
adc
xor
xor
xor
add
xor
repz
or
mov
add
es
push
and
push
push
xor
push
in
or
shll
or
xor
push
pop
mov
addr16
inc
and
scas
nop
sbb
repnz
or
movl
lahf
dec
test
push
jae
and
or
sbb
push
pop
adcb
mov
subl
add
add
hlt
or
push
lds
or
addb
push
int
xchg
add
int3
fstl
lock
add
mov
nop
insl
jmp
push
and
sub
in
add
rcrl
and
add
sub
mov
cltd
lret
inc
fwait
push
lea
lds
int
dec
and
add
and
mov
inc
lea
xor
sbb
shlb
lea
dec
aad
xor
out
pop
loopne
cmpb
loopne
or
nop
subl
and
mov
or
mov
adc
add
dec
int
jg,pt
mov
les
lds
in
xor
inc
sbb
push
stos
mov
pop
mov
enter
arpl
push
rorl
sub
imul
sbbb
cld
dec
test
adc
mov
xchg
scas
push
ljmp
and
adc
imul
inc
in
or
imul
int
mov
mov
test
sub
push
sbb
andw
int
add
mov
or
jmp
xchg
insb
inc
stos
pop
xor
dec
xor
push
lahf
mov
hlt
in
adc
pop
adc
fwait
dec
or
fsubs
or
sub
popf
das
push
or
or
sbb
or
clc
mov
xchg
out
or
mov
pushl
stc
xchg
pusha
into
xor
test
pop
mov
fs
mov
iret
jbe
mov
and
movsb
arpl
jae
or
add
pop
vmovhpd
shrl
pop
push
inc
xor
addb
and
and
dec
mov
js
push
lods
sub
xchg
dec
mov
ret
pop
testl
inc
out
xor
movsb
popf
or
add
xchg
popa
pop
subl
pop
mov
and
mov
adc
sub
insb
inc
pop
out
out
test
push
dec
and
and
mov
add
pop
nop
fwait
jp
or
push
shll
adc
inc
adc
test
or
mov
test
and
aam
adc
jnp
mov
cmp
lock
cmp
sbb
rcl
add
icebp
in
pop
scas
iret
repnz
cmp
ss
stc
test
dec
ret
loopne
ret
cmp
movb
test
jle
pop
je
ret
mov
sbb
aaa
aas
inc
incb
dec
or
add
mov
imul
lods
cltd
mov
jo
pop
xorb
cmp
dec
pushf
mov
adcb
and
stc
or
xchg
hlt
add
test
ret
jo
add
lahf
lock
xor
add
cmp
xchg
sub
stc
rolb
and
dec
xchg
fcmovnb
dec
mov
sbb
inc
cmp
fstl
roll
fld
enter
and
popf
pop
loopne
add
pop
push
push
push
movsb
ret
pop
xchg
inc
adc
sbb
outsl
add
mov
inc
addr16
mov
and
pusha
dec
or
mov
and
popa
movsb
mov
scas
mov
inc
rorb
push
xor
mov
push
xlat
insb
add
and
jns
lret
lret
xor
or
pop
js
test
mov
jp
sub
insb
shlb
jecxz
push
push
out
fcompl
fs
push
cmp
lds
rcrb
dec
push
mov
or
mov
lea
and
add
nop
rep
push
cmp
dec
nop
push
xchg
negb
push
jne
jne
jbe
or
cmpsl
cwtl
ret
rclw
das
roll
pop
pusha
mov
mov
inc
inc
or
inc
scas
iret
push
aaa
pushf
mov
adc
aad
je
xor
xor
das
in
mov
adc
leave
mov
shrl
jo
xchg
addr16
xor
movsb
cmp
aam
pop
shl
add
test
and
add
mov
cmpsb
sub
out
loopne
cmp
dec
outsb
push
call
and
xor
or
popf
loope
outsb
in
shrb
cmp
pop
ljmp
inc
pop
xchg
lret
sub
dec
pop
enter
and
cmpsl
mov
mov
xchg
imul
rcr
lcall
fdivrs
cmp
xor
and
jns
jecxz
out
orb
sarb
bound
or
pop
hlt
rcrb
xchg
mov
mov
or
add
inc
stos
add
shrl
push
shrb
stos
pop
inc
mov
jo
mov
or
cmp
or
add
faddp
js
mov
mov
jo
out
push
mov
or
fsubrl
test
mov
fimull
je
jne
fwait
enter
cmp
outsl
es
adcl
popa
jmp
das
pushf
push
xchg
mov
sbb
xchg
xor
in
lods
xor
or
push
sub
rclb
add
std
sub
ja
xor
stc
xchg
jmp
inc
push
add
mov
mov
movsb
popf
int
incl
push
inc
xchg
add
out
repnz
and
mov
dec
ds
outsb
repz
in
or
pushf
and
aas
leave
inc
push
imul
mov
add
push
or
repnz
push
cmovp
andl
mov
decl
jae
mov
add
fisubrs
mov
inc
out
add
mov
push
loopne
sub
sahf
inc
push
sbb
std
push
rcll
add
add
lcall
sub
add
add
repz
jle
or
mov
mov
mov
nop
test
xor
adc
sbb
cmp
dec
inc
call
jnp
pop
mov
mov
sub
fbld
cmp
jmp
ljmp
lock
jmp
jmp
jmp
jmp
es
fbld
fdivr
fcos
fsubs
or
xchg
aam
sar
shlb
cld
adc
arpl
shl
push
inc
mov
out
repz
fiaddl
mov
les
mov
lret
movsl
xor
push
test
lods
mov
cmpsb
imul
dec
shll
loopne
mov
jns
xor
mov
push
nop
pop
mov
dec
mov
sub
mov
je
inc
nop
lods
stc
lcall
push
mov
xorb
sbb
les
pop
jae
setp
mov
movsb
fwait
adc
pop
pop
imul
push
cwtl
cltd
sbb
fbld
dec
rclb
aam
mov
jg,pn
scas
and
xchg
or
jns
mov
xor
jg
jg
cs
mov
xchg
pop
movsl
push
mov
fs
int3
mov
pop
imul
inc
jg
cs
stc
ja
jge
jns
jns
or
cmp
jle
mov
imul
dec
dec
cwtl
cmp
ret
and
sbb
cmp
rcll
push
push
xchg
pop
sbb
add
in
insb
fs
and
or
or
dec
mov
push
fildll
pop
cwtl
aad
xor
inc
and
mov
add
outsl
or
or
add
xchg
add
xchg
fisttpl
add
sub
inc
dec
int
inc
enter
cmp
mov
mov
push
and
fs
add
test
xchg
push
outsb
jno
mov
pop
cwtl
xor
push
inc
adc
rcl
pushf
mov
cmp
nop
pusha
lahf
mov
lods
pop
test
sub
xor
add
test
inc
rcrb
mov
pop
leave
sub
pop
dec
and
loopne
jg
arpl
mov
add
enter
daa
inc
sub
call
sub
or
mov
inc
push
inc
insb
test
and
and
lahf
or
pop
adc
inc
jnp
add
out
imul
add
popa
mov
mov
or
aaa
iret
adc
or
xor
test
scas
out
cmp
jnp
xchg
xorl
xchg
sbb
aad
rcl
stos
clc
ss
or
imul
or
and
mov
daa
rorb
dec
cwtl
jl
lcall
jo
mov
js
dec
add
movl
or
mov
push
jae
enter
cmp
add
dec
movsl
push
fimull
add
add
out
enter
add
test
cmp
movsl
inc
cmc
inc
sub
aam
add
insl
mov
jne
repnz
xchg
xchg
or
cmp
lret
roll
add
mov
dec
dec
lds
push
inc
or
or
xor
pop
insl
xlat
cwtl
add
leave
push
enter
test
or
cmp
add
dec
loope
cmp
mov
or
xor
mov
mov
enter
xor
sub
jnp
popf
and
add
addl
cmpsl
mov
cld
mov
mov
or
add
jecxz
sub
sub
inc
dec
punpcklwd
cmpsb
in
mov
sbb
call
pop
clc
lea
xchg
inc
cmp
aam
stos
inc
mov
pop
cmp
ds
inc
les
inc
xchg
in
imul
scas
arpl
cmp
xor
orb
enter
mov
push
push
inc
dec
adc
pop
mov
dec
fistpl
jp
adc
dec
xchg
aas
lea
mov
mov
inc
dec
mov
lock
push
rcrb
mov
in
add
clc
rclb
inc
jg
mov
jmp
push
test
inc
imul
sub
and
pop
add
xchg
mov
xchg
xchg
xchg
fldt
sbb
popf
leave
cmp
xchg
ret
jmp
or
or
leave
popa
mov
enter
push
jns
in
ret
or
or
jb
or
xchg
xchg
lret
jb
add
pop
xchg
xchg
xchg
xchg
movsl
ret
jecxz
add
leave
leave
leave
and
fmul
leave
mov
cli
ret
adc
sar
push
inc
aad
ffreep
stc
addb
incl
lods
ljmp
and
sbb
std
xor
pop
lods
or
push
jl
in
subl
mov
popa
or
push
scas
mov
jae
mov
in
fimull
in
dec
fcmovb
adc
in
push
shlb
test
in
pop
adc
ret
call
mov
inc
inc
or
sbb
dec
push
or
add
fimull
mov
imul
mov
dec
pop
and
sub
pushf
dec
aad
sub
and
stos
movsb
and
mov
and
xor
test
adc
flds
and
aam
loope
cwtl
ficoml
mov
test
lods
or
mov
in
call
adcb
xchg
inc
pushf
mov
incl
and
cmp
cwtl
sbb
push
or
adc
add
push
push
dec
movsb
sbb
push
daa
aam
xchg
xor
sbb
imul
xchg
sbb
call
fs
es
adc
movsl
leave
lcall
test
test
roll
xchg
push
and
or
test
adc
xchg
jge
pop
cmp
push
mov
cmp
dec
mov
adc
insl
lds
xchg
cmp
jo
les
imul
add
push
movntps
cmp
or
xchg
mov
sub
or
ja
mov
cltd
jb
push
dec
popa
je
rcrl
push
adc
insb
sub
daa
inc
and
pop
int3
adc
lods
add
jl
fmull
movl
movsl
xchg
rol
stos
add
es
popa
stos
inc
and
xchg
imull
add
xlat
jnp
lock
xor
adc
mov
daa
jecxz
jmp
inc
jno
ds
adc
mov
dec
xchg
hlt
fistpl
jbe
xor
and
adc
dec
adc
addr16
lcall
push
shll
xchg
mov
fisubl
cltd
mov
int
push
fsubl
bound
stc
pop
leave
bound
adc
push
or
fdivrs
add
sbb
dec
xor
imul
insb
mov
popa
push
outsl
data16
aaa
add
mov
add
push
xlat
add
add
inc
outsl
arpl
std
sbb
jns
adc
fwait
or
or
outsb
pop
mov
cmpsl
xor
fs
pop
sub
add
add
mov
sbb
cwtl
adc
push
push
stc
int
pop
popa
xor
mov
xor
pop
adc
or
xchg
sub
daa
or
jns
mov
sub
add
xor
inc
movsb
movsl
adc
push
or
rclb
push
add
xor
cmp
fcom
add
pusha
xor
cmpb
adc
or
mov
adc
cli
adcb
mov
clc
dec
adc
repnz
push
incb
sbb
jbe
dec
js
or
test
nop
mov
or
in
rcll
js
les
stc
stc
stc
fadds
or
xor
fcom
or
call
adc
movsl
and
pusha
or
dec
enter
xor
and
and
push
lods
xor
add
scas
xchg
pop
cld
scas
sub
insl
sub
fcoms
sub
jmp
je
movsb
mov
bound
pop
mov
adc
aam
movsb
movsl
dec
jmp
add
dec
repnz
outsl
aad
add
les
sbb
movsb
jae
sub
fsts
sub
xchg
int3
stos
sbb
mov
lret
daa
enter
test
leave
xchg
fwait
or
rorb
adc
pusha
or
sbb
loopne
jbe
xchg
popf
sub
pushf
in
out
cmpsl
scas
sbb
stos
push
je
add
sub
pusha
jmp
imul
mov
jmp
mov
mov
mov
in
add
rclb
inc
dec
or
inc
add
int
sbb
decb
rcrl
sbb
popl
ss
sub
push
imul
dec
dec
pop
fmuls
inc
xor
xor
push
inc
pop
movsb
shlb
sub
sbb
fldt
sub
test
sub
mov
insb
adc
aas
adc
pusha
sbb
cmpl
and
sub
sub
adc
push
xor
add
pop
add
out
and
pusha
xor
mov
add
fs
inc
fsubs
jge
mov
ja
lcall
or
mov
mov
xor
bswap
inc
pop
rorb
inc
inc
test
fistps
jp
add
enter
pop
and
mov
and
insb
and
push
inc
mov
mov
pop
sahf
in
mov
std
and
mov
mov
pop
push
loopne
or
ljmp
mov
add
xchg
and
test
mov
and
push
add
and
cmpb
movaps
dec
dec
js
cmp
cmp
setge
dec
mov
mov
sub
hlt
push
clc
sub
cwtl
jge
jns
add
add
add
test
or
add
scas
addl
mov
mov
test
adc
sbb
jecxz
push
daa
push
dec
or
add
add
cmp
add
add
mov
loope
or
or
or
sar
adc
pop
or
and
and
pushl
add
add
push
mov
dec
or
and
cmp
pop
pop
or
xchg
dec
mov
mov
in
add
cld
inc
inc
inc
inc
inc
inc
inc
inc
add
mov
mov
cmpl
rcll
ret
bound
add
jmp
cmp
in
xchg
imull
dec
repz
stc
shl
add
je
pop
lcall
push
fbstp
dec
hlt
cld
lods
std
add
or
enter
xor
or
and
or
or
mov
ss
xor
insl
es
push
inc
push
fdivrs
imul
mov
pop
sub
xor
aaa
jl
and
dec
push
dec
rcrl
mov
push
call
xchg
pop
or
shll
push
adc
adc
pushf
rcrb
push
movsb
enter
lock
cwtl
out
inc
xchg
iret
loope
sbb
or
pop
cs
pop
mov
xchg
pop
mov
push
pop
add
out
pop
fildll
or
add
pop
add
pusha
pop
imul
ds
add
shrb
popa
mov
lcall
mov
scas
insl
out
or
fs
xor
push
mov
test
rorl
sbb
and
xchg
add
and
ss
sub
adc
test
push
inc
in
sbb
imul
das
add
or
jns
dec
adc
mov
movsb
lods
xchg
add
add
cs
ss
or
inc
popa
arpl
push
xor
push
adc
test
mov
ret
rol
int
inc
aam
bts
ss
mov
cmp
inc
cmp
add
roll
or
lahf
test
or
adc
lahf
mov
xor
or
out
movsb
inc
stc
adc
push
cmc
or
movsb
mov
dec
add
or
add
sub
test
mov
mov
repnz
nop
icebp
inc
bound
adc
inc
enter
xor
sub
dec
xchg
adc
lods
or
xor
mov
sbb
iret
add
mov
xor
push
mov
or
fidivl
and
or
test
adc
push
sub
arpl
adc
arpl
push
shrd
inc
sub
or
in
es
pusha
jecxz
pop
sbb
lds
cmpsb
xchg
clc
push
aad
or
fstl
pop
test
inc
rorl
popa
push
cs
lahf
push
andl
dec
adc
aam
sub
xchg
mov
adc
add
ret
cmp
aam
test
jns
fmuls
xchg
jns
cmp
adc
ror
xlat
popf
ret
dec
dec
scas
test
das
jb
mov
add
push
pusha
sub
aaa
inc
dec
sub
push
pop
and
fldt
pop
enter
sbb
adc
test
cmp
or
test
call
insb
mov
cmp
push
xor
jecxz
adc
pop
mov
scas
arpl
pop
sub
mov
sub
inc
popf
cmc
pushf
int3
adc
add
pushf
pushf
cwtl
shll
out
jg
or
adc
or
daa
daa
daa
stos
int3
sti
sub
xchg
xchg
and
cmp
test
andl
add
add
pop
mov
incl
into
adc
test
ret
insb
jne
or
push
pusha
jo
std
xlat
xchg
adc
jecxz
push
mov
movsl
add
push
mov
pop
test
mov
pop
or
mov
add
popf
adc
jge
or
inc
fdivrl
inc
adc
outsb
jo
and
sbb
mov
test
jno
adc
add
enter
or
cs
push
sbb
mov
cmp
loope
decl
arpl
lahf
sub
movsb
mov
mov
es
push
pop
push
sub
jl
jo
bound
test
or
mov
enter
mov
repz
push
sbb
repnz
js
pushf
test
mov
shll
adc
sub
inc
sbb
mov
imul
push
mov
jecxz
aas
inc
xor
ss
lcall
sub
nop
jae
mov
dec
dec
push
repnz
jb
jl
cmp
cmp
mov
push
cmp
fstl
js
fwait
mov
jl
repz
push
in
pushf
pop
pop
outsl
addr16
add
ss
in
aas
stos
add
test
jb
cmovno
ficoml
mov
add
sub
xor
cmp
xchg
test
int
cmp
cmp
inc
xor
rcll
ja
push
add
fmull
ja
cld
push
or
and
pop
daa
inc
add
addr16
addb
insb
movsl
rcll
jne
dec
xor
or
or
pop
mov
cmp
and
and
mov
sbbl
mov
or
dec
pushf
roll
push
scas
fisubs
insb
dec
pushf
mov
aad
mov
gs
stos
inc
xor
leave
mov
test
add
or
repnz
xor
lods
sbb
and
or
stc
add
inc
in
push
sti
pop
adcb
jle
call
int
xchg
xchg
xor
pop
xor
mov
and
ds
test
or
or
dec
and
inc
sbb
or
xchg
daa
insl
add
cmp
push
or
adc
or
push
adc
in
in
jo
sbb
imul
mov
pop
subl
nop
jl
lea
or
popf
ss
cmpsb
jne
cmp
fiadds
xchg
mov
add
dec
les
adc
pop
cmpsb
ds
push
and
and
xchg
or
adc
movsl
jg
daa
mov
insl
cmp
cmp
sub
or
test
cmpl
mov
mov
aaa
mov
cltd
das
xlat
inc
lods
or
xchg
rcrl
lret
pusha
push
xchg
xor
and
shll
pop
adc
pop
or
adc
cmp
push
cld
add
push
jle
fwait
enter
mov
push
mov
stos
cld
or
push
pusha
lcall
rolb
xor
jmp
pop
pop
pushf
and
mov
xor
or
pop
or
push
andl
add
xor
stos
in
add
or
add
pusha
fisttps
xor
xorb
push
addb
or
xorb
xchg
adc
inc
addr16
adc
add
pop
in
or
pop
add
mov
or
add
dec
daa
daa
daa
daa
jb
mov
jp
and
sti
aaa
inc
imul
test
aaa
in
cmp
pop
inc
adc
cli
cmp
sub
or
add
or
andl
or
popa
fsubs
adc
jne
push
or
push
adc
lods
cmpl
and
sbb
cmpsl
pop
inc
lea
inc
lods
or
add
hlt
add
inc
aaa
aam
std
insl
sub
call
mov
or
or
inc
inc
dec
push
sbb
xorl
or
shlb
inc
mov
cmp
or
or
cmpxchg
mov
and
fwait
ja
xorb
dec
adc
shl
outsl
mov
sbb
test
and
lock
push
xor
adc
inc
in
ficoml
dec
xor
add
scas
aaa
pop
adc
outsb
push
das
dec
les
out
outsb
movsl
fdivs
je
shrb
cs
mov
iret
pop
sbb
in
or
cmp
or
leave
dec
outsb
lea
hlt
cmp
inc
fld
push
jmp
mov
or
or
mov
mov
fiadds
push
adcl
inc
in
fsts
and
leave
inc
cld
adc
js
adc
xchg
enter
lods
cmp
sub
xor
add
subb
inc
lods
push
xchg
push
rolb
adc
and
push
mov
add
pop
dec
push
je
xchg
lea
ret
jle
js
mov
sub
xor
inc
cltd
daa
dec
sbb
jb
mov
or
adc
jb
pop
and
cmp
outsb
jb
xor
sti
nop
inc
sbb
mov
mov
add
push
dec
shll
sbb
xchg
cltd
mov
xor
enter
mov
test
xchg
and
fsubs
pop
add
pop
ds
lock
popa
pop
or
fistps
inc
or
pop
dec
sbb
dec
cwtl
outsl
mov
int
push
rcrb
je
in
pop
jb
xor
js
add
data16
push
arpl
outsl
push
push
dec
pop
adc
adc
aad
test
inc
dec
enter
cmp
pusha
lahf
jge
mov
bound
push
adc
sbb
jae
pop
pusha
imul
cmp
lods
cmpb
lcall
inc
jle
shrb
add
and
ret
xchg
bound
and
xor
mov
popa
mov
insb
lea
pop
mulb
nop
jbe
cmp
inc
test
dec
sbb
inc
inc
aas
pusha
sub
add
xor
loop
imul
daa
lods
cmp
pop
pop
or
and
insb
dec
pusha
pop
adc
xchg
gs
pop
popa
je
je
add
mov
pop
popa
or
and
rol
cmpsb
push
mov
sub
or
mov
xor
mulb
jns
and
inc
lods
jb
pusha
adc
jecxz
mov
jno
lods
jbe
loope
or
js
shll
add
ss
xor
dec
sub
ret
adc
sub
inc
fcoms
adc
push
mov
or
add
in
inc
pop
cmovb
and
pushf
jg
mov
add
vmwrite
inc
mov
addr16
into
adc
lahf
popa
and
and
inc
mov
add
fnstsw
mov
xchg
adc
push
sub
imul
pop
call
add
cmp
outsb
add
push
pop
roll
ja
inc
andb
pop
cmp
mov
nop
popf
inc
sub
fidivrs
cld
pop
inc
nop
out
mov
daa
or
pop
inc
insb
xor
lea
aam
sub
movsl
or
sub
rclb
jne
loopne
rorb
shrb
inc
das
lock
add
push
jmp
xchg
dec
enter
mov
ss
insl
clc
adc
push
xor
adc
mov
mov
fucomi
push
add
xor
and
loopne
insl
adc
jno
sub
inc
xchg
loope
dec
aam
add
mov
add
add
inc
jae
cltd
scas
pop
rolb
pop
daa
decl
in
push
es
enter
xor
outsb
cs
xchg
dec
aas
js
push
adc
pop
mov
repnz
lea
xor
aam
pop
xchg
jecxz
add
add
pop
cltd
jge
test
push
dec
or
lods
add
repz
sbb
pushf
pushf
pushf
push
mov
jno
dec
mov
xor
xchg
in
test
dec
add
sub
and
frstor
dec
or
mov
lcall
sbb
add
mov
inc
inc
dec
jo
dec
pop
xchg
add
inc
or
stc
xchg
or
shrl
mov
adcl
inc
mov
fsubl
xlat
cmp
push
iret
dec
adc
inc
adc
jne
popa
flds
fsubl
xor
aas
test
bound
xchg
pop
adc
push
pop
lahf
dec
negb
roll
dec
add
push
popa
shll
xchg
scas
ds
push
xorl
push
test
test
insb
ss
add
add
ss
add
or
inc
and
stos
lods
and
sti
mov
mov
mov
jb
mov
and
push
addl
loope
xor
xchg
into
out
pop
push
popa
test
push
inc
jae
ret
pop
insl
pop
and
add
fsubrs
and
push
loope
adc
in
sub
out
je
out
cs
sbb
lods
fiaddl
xchg
fnstenv
loope
jmp
inc
add
das
sbbb
lods
xchg
shll
xor
push
add
ja
jbe
test
arpl
xor
movl
das
ds
sub
push
mov
inc
ret
dec
pusha
jmp
imul
sub
push
and
pusha
xchg
lea
into
mov
outsl
add
add
xor
dec
inc
dec
fistl
add
mov
cwtl
test
sbb
ja
dec
add
dec
mov
les
fisttpl
and
adc
inc
fs
popa
jno
xor
xor
ja
popa
dec
xchg
scas
inc
fmuls
loopne
ficomps
lcall
aas
or
pop
in
fs
test
les
cwtl
jge
jns
pop
or
call
inc
push
sbb
daa
les
sbb
fisttpl
and
gs
or
movsl
cwtl
push
and
ret
mov
dec
fisttpll
lds
testl
pop
pushf
mov
pop
dec
mov
cmpsl
clc
pop
push
aam
adc
adc
fs
enter
or
daa
mov
sbb
dec
testl
add
daa
cmp
or
mov
mov
les
mov
dec
loopne
sbb
sub
and
outsl
xchg
idivb
add
inc
sub
sbb
xor
add
pop
rol
sub
jno
stos
fwait
pop
rorl
es
insl
pop
sbb
and
ror
fwait
outsb
shrd
rorl
sti
nop
inc
push
jns
xor
dec
adc
fs
push
or
sub
push
nop
bt
in
and
xchg
leave
mov
push
rolb
lods
mov
xor
pop
dec
add
ss
mov
fwait
mov
adc
push
push
or
xchg
ja
dec
rol
add
pop
xchg
pop
cmpsb
inc
mov
and
mov
cmpsb
jbe
loop
lods
or
jge
dec
mov
mov
sbb
jecxz
and
ret
adc
xchg
push
rcll
test
insb
stos
inc
test
roll
dec
inc
inc
add
push
adc
movsl
jp
je
hlt
adc
xchg
inc
loope
stos
cmpsb
addb
movsb
jb
sti
sub
in
cmp
add
push
pop
inc
mov
inc
or
pop
aad
or
fisttpl
adc
lods
or
and
dec
lods
and
push
push
rorb
sti
in
lea
cmp
jmp
adc
add
add
lea
int
and
int
in
mov
sbbb
push
and
lock
in
das
inc
js
test
and
sbb
outsl
push
hlt
dec
fmuls
inc
xchg
pop
nop
out
xchg
xor
xor
jle
mov
push
adc
push
sub
and
out
int3
xor
jne
inc
movl
adc
push
pop
int3
outsl
sbb
xor
ds
push
mulb
and
sbb
pop
add
jne
dec
mov
push
or
addb
add
dec
jb
xor
sub
add
xor
jne
adc
push
xchg
or
sub
rcrb
fwait
xorb
xchg
mov
cmp
mov
jbe
add
or
daa
add
dec
or
adc
mov
adc
push
mov
xor
inc
sbb
fs
pop
jb
pusha
fdivs
ja
add
ret
movsl
dec
lods
jbe
aaa
push
inc
and
push
insb
dec
stos
dec
lret
push
test
arpl
data16
xchg
fsubs
xchg
inc
push
aas
testl
add
or
mov
jne,pn
inc
cmpsl
lods
dec
jb
jg
jb
decl
in
adc
outsl
add
adc
push
and
or
adc
push
mov
lret
cmp
sub
adcl
xchg
pop
shrl
inc
add
or
mov
mov
je
jb
or
ja
fnsave
jno
lret
outsl
in
push
or
dec
test
push
lcall
adc
int
pop
cmp
mov
push
int
pushf
or
ficomps
add
repz
inc
lret
popa
push
adcl
inc
cvttps2pi
and
xor
lea
push
lret
adc
out
arpl
sti
subl
push
cmovo
pop
iret
add
jbe
sub
xor
ds
adc
inc
fildl
rolb
mov
sbb
push
push
sub
adc
ret
adc
loop
add
sbbb
sub
mov
mov
sbb
sub
mov
push
add
subps
and
adc
int
dec
wbinvd
pop
sbb
aam
or
jo
lods
jo
mov
dec
inc
sbb
or
add
xchg
stos
add
add
test
add
adc
or
lcall
add
push
cmp
xor
push
repnz
sti
outsl
jo
rclb
mov
or
dec
lods
pusha
sbb
cmpsl
pop
mov
in
lahf
movsl
push
adcl
add
jmp
loopne
fidivl
or
aas
xchg
int
incl
mov
sbb
jl
xor
inc
popa
mov
mov
jecxz
mov
and
or
and
adc
or
movsb
dec
rolb
xchg
pop
fs
cmp
and
stos
xchg
mov
or
roll
add
add
adc
stc
dec
add
inc
lret
push
jp
add
iret
imul
sbb
stos
jmp
sub
jecxz
adc
fmull
dec
dec
jne
jo
dec
push
adc
and
sbb
pop
in
movsb
test
sub
test
or
ret
loopne
lds
test
mov
xchg
gs
fimuls
or
or
adc
gs
adc
sbb
gs
xchg
sub
sub
xor
xor
scas
push
movsl
popa
nop
adc
pusha
dec
push
fs
cmpsl
js
dec
mov
add
inc
out
out
xor
mov
jl
daa
mov
repnz
leave
dec
or
add
je
jg
sub
ljmp
jmp
xchg
sub
mov
push
mov
je
and
ret
clc
mov
movsb
icebp
and
test
fsubs
cmp
add
leave
outsl
testl
outsb
cmc
adc
jmp
mov
fdivs
fimuls
xor
dec
inc
jne
popa
push
out
adc
mov
subb
xorb
adc
or
sbb
pop
push
movl
xor
sub
nop
testl
lock
in
and
add
js
outsb
repz
sbb
lret
inc
sbb
adc
and
fidivl
and
sbb
adc
faddl
push
pop
pop
inc
sbb
dec
push
xlat
mov
lea
call
cmp
scas
incl
pusha
push
xor
jle
andb
inc
xchg
ss
jg
es
sbb
ja
test
inc
mov
xor
xchg
loope
push
iret
rcr
dec
inc
dec
or
mov
add
inc
jp
and
mov
test
dec
sbb
inc
inc
lods
pop
inc
xchg
andl
sahf
xchg
mov
inc
cmp
mov
jae
xchg
or
inc
dec
cmc
sub
or
out
sub
sbb
dec
cmp
inc
pop
popa
cmp
in
or
or
jg
pop
mov
push
pusha
mov
sbb
cmp
jnp
push
fs
imul
inc
sub
mov
ficompl
jg
inc
inc
out
xchg
or
xor
mov
mov
adc
inc
ja
int
daa
nop
cwtl
xchg
faddl
or
loopne
or
outsl
adc
or
sbb
inc
dec
movntps
sbb
and
jae
push
dec
or
adc
insb
mov
dec
shlb
ret
push
jnp
neg
sbb
jecxz
cmp
push
adc
inc
push
jb
daa
fsubl
stos
pop
mov
mov
push
sbb
dec
mov
sub
mov
and
jo
adc
or
roll
add
fcompl
inc
adc
fs
sti
cmp
fcmovne
incl
push
inc
addb
mov
rol
jp
add
or
or
fsubs
xchg
adc
icebp
and
out
adc
push
xor
jo
push
jge
and
mov
mov
arpl
add
fisttpll
jge
cmp
add
pusha
cmp
inc
testb
fldcw
movsl
in
sub
lds
adc
adc
dec
addl
xor
mov
sbb
or
movsb
je
fs
xchg
andb
add
fs
andl
enter
xchg
jb
roll
xchg
mov
sbb
daa
sarl
push
sbb
and
push
mov
mov
outsl
fisubs
sub
pop
mov
inc
mov
and
mov
gs
mov
enter
js
gs
insl
xchg
add
nop
sbb
dec
jp
in
add
inc
cli
xor
jb
rorb
xchg
fldt
test
or
ja
jno
push
xchg
and
push
mov
push
orb
sbb
pop
in
xor
jns
arpl
lock
pop
inc
cmp
int3
mov
mov
mov
adc
sarl
inc
in
insl
cld
nop
mov
mov
push
xor
adc
or
add
sbb
and
push
xchg
decl
call
adc
cmp
push
adc
sub
and
jae
add
and
js
nop
aam
sbbb
cmp
sbb
std
pop
add
sbb
cmc
cs
xor
or
lock
icebp
pop
test
testl
movsb
in
push
push
xor
mov
addr16
dec
push
push
dec
jae
push
addr16
cmp
cmovno
lret
mov
dec
test
dec
aam
sub
mov
mov
add
sbb
cltd
push
push
es
adc
jmp
lcall
out
pop
dec
movl
mov
mov
and
sbb
in
ret
jne
add
js
or
adc
ret
iret
loopne
call
jb
xchg
mov
and
or
ss
fidivs
sub
jge
aas
outsl
xorb
mov
mov
cwtl
adc
insb
dec
or
bound
inc
sub
add
inc
std
aas
xchg
je
xor
fs
orl
sbb
sub
dec
addl
jne
jmp
mov
sarl
mov
sub
lds
jge
rorb
es
cmp
test
in
cmc
push
movsl
mov
jnp
in
or
call
sbb
cwtl
and
aaa
gs
push
dec
inc
dec
fbld
outsb
xchg
mov
or
add
jmp
xchg
xchg
sbb
pop
sbb
add
push
negb
sub
lret
lods
int3
pushf
xchg
lods
nop
cmp
mov
or
dec
rcrb
mov
bound
add
inc
cmp
movsb
ds
sub
rcr
adc
sub
mov
in
sub
sub
subb
add
pushf
add
bound
mov
out
jne
testb
cmp
sahf
je
push
adc
inc
outsl
jbe
scas
push
sub
jo
pop
or
imulb
adc
inc
push
jmp
in
mov
movswl
sub
adc
add
inc
add
addb
inc
xchg
repz
loopne
jmp
in
js
pusha
jbe
pusha
cltd
and
cmc
daa
cli
mov
push
mov
sbb
fdivs
sub
mov
jae
sbb
dec
add
jnp
sbb
test
ficoms
test
loope
mov
and
sbb
xor
test
mov
xor
movsb
sbb
jo
mov
mov
xor
inc
iret
push
ds
jnp
push
add
inc
or
add
lock
and
inc
xchg
in
sbb
mov
mov
dec
das
jp
ret
popl
push
subb
jmp
fnstcw
adc
lcall
lret
mov
pop
cwtl
fdivrp
fstpl
fwait
jmp
mov
out
sbb
add
fnstcw
add
lret
lret
mov
adc
cli
imul
into
imul
adc
adc
ficompl
sub
sbb
jnp
adc
or
ljmp
inc
ljmp
movsb
pop
cli
rcrb
sub
pop
in
mov
mov
lret
icebp
mov
adc
or
dec
stos
mov
dec
sbb
ret
sub
add
shrb
lods
loope
cmp
xor
sub
sbb
mov
push
popf
add
cmp
push
xor
jne
lea
bound
jo
adc
and
cld
mov
xor
lcall
ficoml
shl
xor
mov
lret
dec
jo
push
fnstenv
mov
adc
mov
dec
cmp
dec
pop
cmc
cltd
xchg
fcomp
sbb
dec
sub
dec
dec
in
out
cmp
adc
loopne
xchg
pop
xchg
push
in
cmc
arpl
inc
and
and
push
xor
cltd
adc
movsb
jmp
mov
dec
dec
and
sub
jne
sbb
push
or
dec
add
test
push
aaa
outsl
push
adc
xor
mov
fdivs
dec
xor
fcmovnb
cmp
mov
jmp
pop
test
inc
add
xchg
inc
push
or
cmp
nop
jge
xchg
pop
movb
adc
mov
adc
cmp
mov
dec
pop
and
add
jnp
inc
je
adc
or
loop
xor
pop
insl
add
lret
adc
mov
ljmp
arpl
inc
push
jne
adc
daa
pop
pop
xchg
in
push
mov
push
mull
push
pop
outsb
je
mov
jae
adc
rclb
ja
push
inc
add
pushf
mov
inc
daa
pusha
adc
pop
adc
and
or
jmp
xchg
add
in
dec
xor
ss
lcall
push
and
cmp
mov
lock
cmpsb
stc
and
shlb
adc
or
sub
clc
pop
jb
jle
fsubs
sub
ret
mov
and
daa
lods
pusha
xchg
stos
or
lds
xchg
jb
inc
pop
roll
js
dec
cmp
in
xchg
rclb
mov
inc
pusha
and
xor
ss
push
and
add
push
adcb
and
inc
imul
sbb
sub
shrb
dec
and
pushf
mov
dec
push
push
fwait
inc
or
lods
ds
adc
xor
xor
cmpsl
xor
int3
dec
cmp
mov
pop
lods
inc
inc
pop
sti
loope
or
es
es
or
sub
xlat
mov
lret
sbb
add
mov
and
adc
cmp
add
inc
jb
or
sub
andl
sub
xchg
insl
fstpl
aad
dec
mov
sbb
xor
or
add
int3
xchg
mov
adc
sub
insb
mov
nop
lahf
cli
cwtl
jge
add
and
or
filds
adc
jne
and
or
dec
imul
lock
add
in
inc
lock
popf
jne
push
test
fwait
xor
ja
iret
shlb
cmp
inc
pop
jne
jne
mov
or
push
add
mov
sbb
jg
jge
inc
mov
or
hlt
fisubrs
jns
aaa
or
dec
test
mov
or
in
inc
xchg
xor
jle
xchg
pop
insl
add
inc
test
insb
dec
mov
push
cwtl
sbb
and
sub
xchg
add
lock
fidivrl
movsb
lea
jge
or
or
andl
mov
fcoms
js
pop
pop
js
dec
arpl
cmc
push
rol
sbb
cmpb
sub
mov
cmpsl
push
mov
pusha
sbb
add
movsb
imul
mov
and
sbb
pop
pop
dec
das
or
push
dec
mov
orl
sbb
leave
add
push
xor
decl
mov
xchg
loop
mov
and
add
or
lret
mov
adc
or
adc
add
filds
dec
das
and
jmp
cmp
je
mov
mov
pop
adc
adc
sbb
je
mov
adc
pop
je
jns
add
pop
cmp
cmp
xchg
cmp
sub
or
add
mov
pusha
xorb
adc
and
xchg
add
or
cmp
mov
adcb
push
adc
fxtract
popa
ja
add
je
out
js
lcall
dec
inc
mov
push
lods
or
sub
push
mov
pop
dec
dec
out
mov
xchg
repz
or
jp
call
ja
jns
add
or
jo
stos
push
rorl
and
cmpsb
pusha
aam
pop
fstl
mov
push
invd
xor
sbb
inc
testb
and
inc
dec
sahf
bound
scas
or
clc
push
cltd
push
pop
fists
push
call
scas
rcl
or
ja
push
xorb
add
lods
pop
adc
adc
cmp
rorb
pop
or
inc
adc
add
and
push
inc
movsl
lock
lahf
lods
mov
add
pop
add
push
pop
mov
mov
add
fcoms
add
ret
in
add
mov
mov
jne
and
and
cs
inc
imul
dec
dec
daa
sysenter
jmp
mov
or
mov
or
roll
cmpsl
xor
jo
cmpsl
pusha
add
mov
xchg
inc
jg
add
mov
daa
sarb
aas
cmp
jle
js
push
shll
inc
mov
dec
push
lret
cwtl
fsubs
fidivs
dec
jo
sbb
repz
lods
or
je
mov
inc
insb
bound
push
pop
add
push
pop
enter
mov
bound
pusha
mov
or
push
lods
movsl
aaa
or
popf
imull
sub
insb
add
rorl
stos
aaa
pop
or
mov
jle
adc
pop
sarb
jp
sbb
mov
nopl
xor
xchg
bound
pop
jmp
dec
mov
rorb
dec
mov
mov
mov
rorl
inc
push
inc
cmp
mov
js
or
mov
cmpsl
popf
or
push
lea
push
adc
and
in
xor
and
popf
dec
je
pop
push
pop
shl
lea
adc
cmp
sub
pop
push
sahf
rcrb
xchg
adc
lahf
xor
inc
or
popf
movsb
mov
cmp
pusha
xchg
pop
cwtl
lcall
or
add
test
push
inc
popa
mov
lock
test
dec
cmpsl
int3
punpcklwd
sub
push
mov
int3
sbb
pop
push
cmp
sbb
jae
or
nop
lock
pop
ffreep
cmp
push
ficoms
arpl
mov
dec
lahf
test
push
aaa
mov
or
sbb
adc
dec
stos
xchg
cmp
jne
repnz
cwtl
inc
jne
sub
repnz
es
and
pop
xchg
sahf
cmpsb
out
mov
mov
or
and
add
push
mov
adc
stos
mov
jmp
orl
xor
jb
mov
push
pushf
push
inc
ja
ja
push
pop
add
ljmp
jae
push
push
cmpsl
addr16
repz
dec
je
cmp
inc
flds
inc
cmp
adc
imul
xlat
je
or
bound
cmp
dec
sbb
nop
push
stc
pop
push
add
push
push
xorb
int
pop
pop
xor
jl
scas
pop
fwait
push
xor
jo
adc
or
scas
pop
cmpb
fmuls
test
add
in
sbb
mov
adc
sbbl
lock
insl
inc
push
js
mov
pop
and
cmp
push
pop
aaa
movsb
or
dec
pop
pop
adcl
jmp
push
stos
and
gs
aaa
js
je
jp
cmp
mov
xchg
or
insb
add
jmp
rolb
dec
daa
sarb
or
push
lcall
add
cmp
pop
push
ret
pop
nop
call
sarl
test
push
xchg
out
orl
fs
push
adc
cmp
adc
addr16
std
ret
lds
push
ret
xor
rcll
je
sub
push
adc
js
out
das
movl
divl
dec
sbbl
xchg
jmp
inc
inc
dec
dec
xchg
scas
pop
or
sub
lahf
lcall
add
sarl
stos
ret
aad
push
jns
pop
jmp
ror
or
rclb
adc
pop
push
sub
dec
mov
stos
mov
inc
mov
lds
and
enter
inc
add
push
leave
cmpsl
and
fimuls
adc
sub
stc
cmp
inc
adc
sbb
push
xlat
mov
ja
dec
xchg
js
test
lea
rcrb
cs
je
xor
sbb
iret
sub
test
dec
add
loopne
ja
addr16
or
xchg
or
mov
push
cmp
inc
cmp
rorb
js
cmp
xchg
into
and
xchg
les
iret
push
adc
cld
out
push
shrl
mov
das
lock
dec
mov
add
insl
mov
sub
fdivs
scas
jnp
mov
push
xor
mov
mov
sbbl
push
pop
dec
dec
inc
ffreep
xchg
or
mov
test
fcmovnb
dec
into
addr16
inc
imul
cmp
add
push
in
rcl
leave
arpl
dec
enter
pushf
push
or
push
push
test
in
in
mov
inc
out
mov
cwtl
xchg
sti
sbb
test
mov
movsl
and
adcb
pop
inc
pop
fimull
push
imul
ja
or
adcl
adc
sub
add
in
push
lret
xchg
adc
out
pop
dec
fwait
mov
cmp
dec
xor
aam
pop
xchg
daa
aam
cld
arpl
loopne
imul
fs
inc
mov
inc
and
push
data16
adc
inc
pop
jae
push
loope
or
jo
adcl
jmp
les
or
sbb
xchg
pop
loopne
inc
lods
dec
test
rolb
cmpsl
xor
add
imul
std
mov
sbb
lea
inc
cmp
jnp
inc
add
adc
sbb
dec
xor
xor
into
push
xchg
jecxz
gs
jp
iret
shll
fstps
mov
addr16
cmpb
inc
insb
or
add
mov
inc
mov
or
hlt
pop
pop
lcall
aam
xlat
jg
pusha
and
add
hlt
add
mov
das
or
sti
pop
addl
push
or
or
inc
add
or
sbb
enter
push
jl
push
mov
mov
add
add
dec
add
int
pop
mov
push
pop
arpl
test
cmp
in
jbe
mov
and
push
pop
js
cmp
and
nop
add
add
mov
cmp
adc
xor
call
je
in
shll
addb
subb
enter
pop
sub
ljmp
inc
inc
push
leave
test
or
jne
fildll
hlt
inc
pusha
mov
cmp
inc
outsb
rorb
mov
or
jge
ret
test
mov
push
mov
sbb
mov
lock
push
clc
adc
dec
dec
outsl
lods
add
sahf
mov
xor
dec
out
mov
pop
sbb
daa
or
jmp
cmp
mov
sbb
adc
inc
je
xchg
inc
adc
sbb
cmp
xor
mov
insb
inc
outsl
movntps
lds
sbb
cld
sbb
and
test
fcompl
and
cmpb
fidivs
leave
dec
or
adc
inc
lock
mov
inc
insb
push
adc
or
repnz
mov
cld
mov
pop
mov
xchg
lds
push
mov
daa
pop
insb
movsb
push
jne
lea
je
pop
and
jns
add
fwait
sbb
cmpsb
xor
dec
or
fistpll
or
push
pop
je
and
lret
xchg
mov
pop
ret
pop
or
dec
cmp
inc
push
and
jne
aam
pop
sub
push
dec
add
mov
ja
cwtl
sub
sub
in
cmp
push
andl
inc
enter
sbb
pusha
call
add
mov
push
xor
frstor
inc
adc
sbb
dec
dec
inc
xchg
mov
fnstcw
xchg
or
jmp
cmp
and
subb
or
aam
cmp
mov
cmp
scas
sbb
ret
loope
jmp
mov
inc
or
nop
ud2
xor
xor
mov
and
or
jb
inc
sbb
or
pop
push
add
test
dec
push
mov
pushf
inc
xor
jp
sarb
dec
dec
push
in
mov
and
dec
je
nop
daa
mov
pop
out
jl
mov
pop
dec
leave
popf
test
mov
adc
nop
jo
push
lea
cwtl
cld
fmuls
adc
in
inc
or
add
call
or
inc
add
push
pop
xchg
fnsave
clc
lahf
std
and
popa
je
mov
movb
cmp
or
out
dec
add
lret
inc
fs
pop
pop
pop
mov
adc
mov
push
push
imul
xor
push
or
shrb
or
icebp
cmpb
mov
xor
dec
mov
sbb
adcb
aas
push
gs
or
nop
mov
int
mov
dec
and
ss
mov
jmp
cmp
je
mov
std
add
sahf
jge
and
mov
mov
mov
es
or
xchg
sub
or
aam
sub
cmp
pop
js
adc
lar
jb
pop
push
pop
xor
pop
dec
add
pop
in
inc
xchg
pop
or
test
jp
int
pusha
add
add
pop
mov
int
adc
or
and
push
xchg
stos
xchg
dec
xor
mov
add
sbb
mov
sbb
jno
xchg
pop
add
pop
or
cmp
add
sbb
adc
dec
adcb
rclb
ret
cmp
test
pop
loop
sbb
xorb
sbb
inc
shll
or
sub
sub
xchg
jle
or
cmp
inc
out
je
lea
and
sub
sbb
and
and
inc
mov
int
cs
or
jae
adcl
xchg
bound
or
and
pop
fldl
adc
sbb
pop
lea
push
or
adc
sbb
jg
mov
mov
popa
xlat
mov
cmpsl
sbb
push
push
or
imul
ret
add
xor
xor
jmp
pop
aas
imul
cs
aam
xchg
push
inc
mov
fcomps
mov
or
pop
nop
daa
insb
jae
push
test
mov
loope
test
mov
es
add
and
xor
or
adc
or
pop
subl
xor
popf
lret
sub
lock
adc
inc
mov
daa
adc
push
jg
jne
icebp
mov
sbb
adc
fmulp
andl
xchg
jo
inc
lods
dec
ret
add
adc
daa
adc
add
lods
add
arpl
xor
scas
and
test
xchg
or
enter
xor
xchg
popa
push
push
cltd
xchg
fildl
inc
or
dec
out
ss
test
subl
pop
cld
add
mov
push
push
mov
xor
push
enter
xchg
icebp
xchg
xor
or
dec
flds
inc
fsubs
jecxz
loope
lock
push
enter
popa
or
stc
das
add
pop
shrb
xchg
push
adc
inc
js
ret
cmp
add
pop
setbe
or
cmp
insb
mov
xor
dec
bound
gs
mov
inc
movsb
fs
sbb
sbb
xor
pop
adc
push
inc
push
xorl
push
sub
xor
rcr
add
jnp
or
repz
lahf
mov
les
mov
dec
loopne
mov
cmp
lret
mov
scas
xor
rolb
movb
lcall
cmp
cmp
fwait
rcrb
sbbb
ficoml
lea
inc
cltd
xchg
inc
sub
and
or
inc
sub
popa
test
inc
out
cwtl
jmp
std
add
or
adc
leave
aaa
or
or
or
movsb
scas
adcl
xor
in
adc
movsb
ja
sbb
shll
adc
icebp
fstps
fistl
inc
or
loope
insl
cmpsb
add
mov
cmp
add
fldl
fwait
loop
mov
push
adc
or
mov
outsb
jl
mov
add
outsb
or
sub
inc
xor
push
clc
xor
and
adc
mov
adcl
pushl
pop
mov
cmp
pop
dec
inc
push
nop
cli
cld
clc
and
inc
pop
push
pop
repnz
movsl
pop
sbb
pop
ret
pop
xor
dec
sub
hlt
adc
xchg
pushf
cmpb
or
dec
xor
xor
and
jae
cmp
xchg
aaa
cmpsb
shrl
mov
stos
dec
xchg
repz
out
jo
jecxz
push
scas
repz
adc
out
pop
xor
inc
pop
xchg
sub
jge
lahf
xchg
mov
out
push
and
cmp
call
cs
xchg
sub
fdivs
push
rcll
loop
mov
or
clc
js
mov
mov
daa
inc
cmp
lret
push
or
js
xchg
dec
add
clc
pop
cltd
and
into
je
in
cmp
mov
lcall
dec
scas
pop
xchg
push
push
sub
sbb
pop
sbb
loopne
inc
mov
jge
lods
daa
gs
pop
jmp
pop
sub
movsb
sbb
push
and
jb
dec
sub
or
inc
add
push
xor
or
shrl
loopne
sub
cmp
push
testl
cmp
cmp
int
mov
inc
mov
inc
loopne
in
mov
pop
lods
or
inc
in
push
xor
mov
sahf
push
sub
ja
push
or
pop
jecxz
outsl
mov
sub
mov
or
outsb
arpl
xchg
sub
jb
lock
xorl
test
inc
movb
movsb
adc
add
or
js
pop
sub
lahf
adc
dec
inc
add
and
ret
lock
adc
and
mov
ja
and
inc
loopne
sti
pop
aaa
cmp
xor
or
nop
or
sbb
and
in
pusha
xor
dec
add
sbb
mov
jl
addl
add
push
cmp
pop
loopne
inc
pop
dec
ror
push
test
push
addb
mov
inc
mov
add
and
inc
loopne
int3
cmpsb
xchg
sbb
test
imul
insl
push
es
fsubrs
les
inc
mov
fcompl
out
das
xchg
lea
jg
mov
dec
xchg
xor
jmp
jae
or
subb
sbb
xor
shll
subb
ror
inc
mov
cmp
mov
or
sub
mov
rcll
mov
mov
or
sahf
push
mov
and
add
je
or
xor
xchg
xchg
std
add
jg
cmp
and
xchg
pop
mov
imul
ror
bound
mov
add
iret
mov
or
dec
fcmovbe
rcrb
nop
aas
lahf
das
or
pop
popa
push
jo
jae
xchg
shlb
hlt
push
sbb
mov
ret
mov
orb
jmp
and
cmp
dec
or
and
nop
adc
ja
aam
adc
or
ficoms
push
mov
xor
or
sub
and
je
data16
or
push
adc
or
out
adc
inc
push
pop
cmpsl
add
movzbl
or
add
xchg
test
xor
mov
or
dec
out
daa
and
mov
mov
sbb
add
ret
cwtl
xor
popa
pop
scas
add
mov
fadd
mov
adc
mov
out
push
mov
lcall
add
ffreep
les
add
xor
incb
repnz
adc
push
adc
jns
push
mov
pop
xor
push
jo
test
int3
cs
jbe
insb
leave
rorb
or
int
push
outsb
push
and
sub
popa
xor
enter
sub
frstor
enter
aam
std
push
push
xchg
mov
adc
repz
jge
rcll
mov
cmp
or
push
jmp
sub
daa
rorb
pop
rorb
xor
aaa
sti
movb
rcl
int3
or
sbb
cmpsb
xchg
or
add
dec
xchg
push
mov
addb
and
mov
in
ss
fs
cmp
fimull
dec
mov
and
dec
lret
dec
cwtl
in
gs
add
inc
cmpb
in
dec
imul
jmp
or
repnz
or
and
add
push
inc
xchg
ljmp
sbb
sbb
sub
aaa
inc
sbb
pop
leave
ret
lock
pop
in
jp
xchg
xchg
stos
cmp
add
xchg
inc
aam
mov
adc
mov
push
mov
or
mov
lahf
add
rcll
cmpsl
cmpsb
addl
mov
dec
js
mov
adcb
sbbb
push
adc
bt
or
xorb
add
sarl
test
out
add
inc
cmpsb
faddp
arpl
nop
cmp
or
shrl
inc
pusha
punpckhwd
cmpsb
cmp
fldenv
mov
sti
arpl
pusha
je
pop
inc
mov
push
sub
ror
dec
push
adc
test
pushf
repnz
nop
aam
stos
and
jbe
jmp
adc
dec
clc
mov
mov
adc
dec
xlat
mov
xor
mov
push
aam
push
icebp
gs
xor
adc
pop
pop
pop
mov
inc
sub
add
inc
popa
je
and
cltd
and
dec
addl
ds
aas
cmpb
scas
addr16
mov
jle
sub
dec
push
add
pop
mov
and
jg
push
stos
add
push
test
inc
xchg
imul
or
lock
insb
popw
cmpsb
cmpsb
je
pop
push
notl
inc
jp
jecxz
shr
and
lea
call
or
pop
inc
test
cmp
into
inc
arpl
shlb
ret
mov
cmpsb
cwtl
in
fsts
enter
lahf
mov
cmp
pop
add
inc
insl
or
push
mov
in
mov
inc
sbb
jbe
in
push
addr16
outsb
into
nop
nop
dec
lea
sub
dec
cmp
pusha
fnsave
mov
sbb
pop
sub
push
inc
adc
cmp
sarl
mov
add
add
lret
mov
add
inc
adc
insb
cmp
cmp
mov
inc
or
pop
cs
jnp
or
sbb
test
cmp
std
mov
mov
orl
addr16
stos
cmp
fmuls
jne
ds
pusha
cwtl
pop
and
jmp
data16
cmp
jl
out
jo
scas
sub
call
add
enter
push
xor
add
enter
and
jb
adc
pushf
xor
push
xor
jle
mov
mov
jb
mov
mov
sbb
daa
daa
or
cld
lods
sub
mov
pop
push
push
orl
test
fcmovnbe
mov
or
add
rol
pop
sub
push
ret
out
aad
sbb
ss
aad
push
and
add
insb
test
xchg
add
add
dec
add
xorb
inc
sub
test
ja
and
pop
mov
mov
aas
or
xorb
nop
fldt
add
daa
or
fcmovu
sbb
or
push
or
dec
push
test
mov
sarb
adc
popa
pop
xlat
or
adc
daa
push
lock
subb
or
shll
adcl
xchg
push
push
add
sub
push
pop
cmpps
mov
les
rclb
int
cmp
sahf
dec
loopne
xor
dec
ret
dec
loopne
adc
pop
push
pop
mov
pop
mov
pop
push
adc
or
xor
or
pop
adc
jge
xchg
aad
movswl
pushf
cmp
pop
aas
enter
daa
mov
or
int
and
xchg
or
aas
cld
adc
mov
xorl
adc
sbb
outsl
rcl
in
push
mov
scas
and
inc
xchg
xlat
cld
inc
nop
mov
xlat
rol
out
inc
xchg
mov
dec
pop
mov
lret
cltd
adc
outsb
movsl
jl
gs
loop
jnp
jle
cmpl
dec
adc
dec
addl
sub
lcall
or
pop
mov
repz
nop
inc
shll
in
sbbb
mov
add
and
mov
inc
inc
pop
in
add
scas
add
scas
pusha
in
mov
sbb
sbb
mov
int3
enter
popa
inc
push
mulb
mov
push
push
dec
pop
and
push
pop
add
aam
pop
insl
shll
mov
or
movsb
adc
aaa
and
add
rcl
rclb
adc
sub
dec
jnp
repnz
xlat
push
inc
das
sub
stos
xor
lock
mov
movsb
je
adc
inc
shrl
and
es
add
jb
bound
sbb
mov
jp
or
add
inc
inc
dec
cmpsb
mov
aas
add
push
xor
push
or
adc
xchg
mov
xor
xchg
pop
xor
push
or
orl
imul
and
adc
adc
inc
push
push
push
push
jecxz
xchg
inc
les
mov
cmp
nop
jns
test
and
push
jp
push
pop
or
adc
mov
jns
fwait
out
adc
jle
adc
or
in
dec
dec
or
dec
movsb
adc
xor
pop
sbb
pop
inc
add
clc
add
cli
xchg
push
dec
cmp
fs
pop
sbb
xor
popa
push
loope
or
or
mov
bound
out
pop
enter
mov
sub
adc
mov
sub
or
cltd
popa
or
dec
adc
inc
fisubrs
add
popf
hlt
sbb
push
addl
mov
leave
data16
sahf
add
adc
aaa
xchg
dec
push
mov
sbb
adc
or
hlt
mov
jmp
mov
dec
es
js
test
mov
add
ja
push
popf
cmp
push
imul
adc
dec
dec
inc
cmp
cmpsl
xchg
xorl
inc
es
and
cs
xor
sbb
or
mov
sbb
push
lock
jecxz
xchg
adc
jle
or
nop
pop
ret
inc
pop
mov
fmull
testb
push
push
push
xchg
sbb
or
xchg
adc
xchg
cmp
pop
sub
fwait
mov
gs
inc
xchg
mov
or
sub
adc
push
pop
pop
mov
rorb
sbb
push
dec
pop
cmpsb
sub
mov
push
jno
push
sub
inc
popa
dec
adc
fnstsw
push
roll
stos
cltd
mov
sbb
fsubs
push
scas
cli
adc
pop
dec
or
pop
xor
jno
addl
or
or
and
lcall
sti
xchg
subl
inc
sbb
bnd
mov
test
and
adc
pusha
ret
sbb
mov
and
jne
push
xchg
xchg
mov
pop
aaa
sbb
sbb
cmc
pop
sub
or
rcl
push
pop
or
int3
ds
or
jb
jo
pop
loopne
inc
dec
inc
mov
call
push
lea
sub
fbstp
pop
dec
lea
xor
or
es
add
push
sti
or
dec
dec
imul
or
add
sub
rolb
loopne
sub
cltd
insb
cmp
arpl
movb
pop
imul
push
push
mov
add
add
xor
add
xor
xchg
and
sbb
arpl
mov
push
pop
push
xchg
lock
stos
shr
cld
adcb
or
roll
and
mov
out
sbb
pop
pop
clc
fcoml
rcr
dec
xchg
mov
test
dec
jecxz
movsb
mov
mov
and
xchg
adcb
inc
cmpsb
mov
adc
sbbb
xchg
adc
xor
xor
popa
or
movsb
iret
dec
cmp
lds
add
pop
mov
mov
dec
push
mov
aas
sub
xor
sbb
xor
cwtl
pop
sbb
lods
inc
push
add
jns
sbb
mov
movsl
or
pop
mov
pop
and
add
test
and
adc
cmpl
sub
push
hlt
adcb
and
rcll
add
fcompl
aad
ret
xchg
jne
fiadds
dec
int
xor
add
jo
xorb
dec
js
jg
enter
add
cmp
add
mov
imulb
adcl
jmp
cmp
push
add
gs
mov
aam
mfence
fisttpl
fisubl
fwait
xchg
sub
sub
lods
push
push
xor
xor
and
movsl
mov
pop
sub
add
stos
cmp
je
add
ss
jmp
in
mov
data16
pop
je
fs
or
nop
or
fisubs
sbbb
or
pop
dec
inc
or
dec
push
xchg
mov
inc
xor
adcb
sub
and
sbb
fdivs
cld
adcb
movsb
rcrl
adc
push
rorb
fisubl
loopne
aad
leave
enter
dec
imul
adc
mov
adc
les
in
cmp
pop
pop
pop
adc
aaa
insb
xchg
sbb
cmpsb
aam
rcl
xchg
push
sub
jne
aad
mov
xchg
jbe
push
and
mov
pop
mov
dec
pop
clc
inc
jne
xor
xchg
ds
or
lret
lret
jnp
cmp
and
sbb
jo
lea
mov
cmp
push
and
insb
pop
inc
xor
ss
aad
test
ss
aam
and
xor
and
or
jg
ret
add
add
jp
or
fistl
clc
adc
push
dec
loop
sub
in
addb
dec
mov
inc
es
repz
clc
imul
adc
inc
add
xor
adc
insb
inc
inc
inc
or
add
add
jo
loop
iret
dec
adc
mov
call
add
mov
faddl
adc
xchg
arpl
fwait
inc
jle
mov
ret
ret
pop
ret
xchg
je
call
sbb
imul
inc
jge
sbb
add
push
call
imul
lods
jg
push
inc
jne
add
mov
xor
inc
cwtl
dec
mov
gs
dec
mov
inc
add
mov
xchg
lea
dec
test
in
pushf
cwtl
das
test
mov
aaa
lahf
jns
leave
int3
sub
negl
push
adc
les
clc
pushf
sub
aad
ret
testb
jge
push
sub
lock
jae
pop
sbbl
mov
mov
insb
jecxz
sahf
mov
add
or
jle
and
add
int3
add
jp
fsubs
adc
pusha
mov
shlb
mov
add
jne
adc
enter
cmp
jns
outsb
pop
ret
subl
pop
mov
add
mov
icebp
mov
mov
xchg
add
ret
push
and
pop
arpl
inc
push
call
into
mov
shlb
lret
cmc
push
add
out
adc
or
lea
adc
pusha
out
cwtl
adc
add
jo
ss
xor
mov
clc
add
and
xlat
mov
adc
les
mov
ret
loopne
and
mov
jne
rcrb
in
shl
xchg
aaa
dec
add
loope
lret
nop
jle
pusha
sub
sbb
adc
mov
test
sar
xchg
jl
orl
movsl
aam
jo
xor
fistpll
sub
mov
ss
xor
inc
loopne
nop
ret
jnp
dec
pop
jge
enter
xchg
sbb
es
xor
mov
sbb
les
cmp
and
cmpsl
fiadds
mov
shrl
addb
rcrl
sub
adc
adc
insb
lods
ss
mov
decl
add
adc
pop
push
cmp
lock
dec
or
adc
and
sub
xor
and
sbb
insb
frstor
sub
mov
add
inc
adc
fsts
mov
xchg
xor
xchg
nop
lods
add
sub
mov
add
dec
enter
add
idivb
or
aaa
xchg
into
cmp
xchg
jl
ret
inc
das
clc
jmp
pop
inc
aam
roll
mov
cmpl
lret
push
add
lock
pop
inc
shll
add
push
fs
jb
nop
sub
dec
xchg
idivl
xor
jmp
outsb
jne
xlat
nop
add
nop
jbe
fadds
lods
hlt
cmpsb
jnp
lock
mov
enter
cmp
test
nop
test
adc
dec
mov
dec
je
push
int
in
fadd
aam
xchg
nop
xor
sub
test
jb
das
outsb
mov
adc
xchg
aaa
pop
in
or
into
xchg
mov
hlt
dec
lcall
ja
cli
movl
mov
mov
pop
and
jmp
push
sub
loopne
addr16
js
inc
mov
push
jmp
or
or
adc
test
loopne
push
lea
and
inc
sub
pshufw
push
pop
mov
inc
cmp
cmp
les
cmpsb
popf
mov
out
jns
mov
imul
sub
sub
outsb
sub
ss
push
add
sti
lods
ss
or
sub
mov
daa
xor
icebp
fbstp
or
add
push
or
sbb
push
aam
pushf
add
test
push
or
inc
inc
sbb
mov
and
adc
pop
daa
dec
dec
int3
lret
inc
adc
xor
add
and
lret
mov
and
mov
ret
movsb
or
pop
or
mov
xchg
repnz
cmp
and
xor
pop
lret
imul
fiaddl
push
dec
insb
daa
lret
cltd
inc
loop
jmp
push
mov
insl
sub
nop
jmp
repnz
mov
insl
mov
outsl
xchg
dec
inc
fdivrs
repz
in
insb
mov
and
aas
push
mov
dec
pop
lret
lds
inc
xor
jmp
mov
mov
lds
lock
xlat
push
aaa
cmpsl
test
lods
leave
sub
xchg
fdivrs
dec
insl
push
lds
loope
xor
jbe
das
push
movsl
inc
xchg
and
add
sbb
mov
push
nop
sbb
cmp
jne
aaa
cltd
lods
pop
outsb
mov
lock
inc
mov
inc
adc
cmp
incl
inc
repnz
loope
cwtl
and
mov
sbb
inc
push
or
pop
jmp
push
cmp
pusha
js
insb
dec
xor
je
hlt
and
mov
adc
mov
pop
test
iret
data16
test
jg
pusha
sbb
push
dec
xor
pop
inc
mov
ja
sbb
mov
push
adc
lret
cmpsl
jne
or
dec
add
jo
lea
out
dec
push
mov
sbb
fwait
add
inc
sub
in
cmp
push
push
adc
mov
shr
lods
bound
add
sbbb
iret
pop
pop
xchg
arpl
adc
or
cld
testl
ss
cmp
add
xor
mov
inc
repz
add
cwtl
ficomps
jmp
pusha
or
and
jae
incl
push
data16
call
cmp
or
lea
testl
mov
adc
add
or
lods
repz
or
ret
incl
adc
aas
nop
bound
addr16
or
ret
popa
mov
cmp
push
dec
popf
inc
leave
xor
jmp
in
mov
adcl
xchg
xchg
and
daa
leave
insl
ror
pop
repnz
lods
out
add
rol
loopne
loope
test
das
aam
in
pop
mov
rorl
or
cmp
movsb
dec
jg
aam
test
addl
pusha
cmp
popa
adc
mov
daa
xor
mov
test
add
or
mov
stos
int3
mov
sub
pop
daa
cmp
dec
sbb
add
add
nop
cltd
scas
cmp
dec
push
das
xor
dec
dec
mov
aaa
inc
loopne
dec
in
cmp
jne
int
int3
push
add
je
push
pop
push
sub
rcl
adc
je
xchg
and
xchg
fadds
out
pop
xor
sub
jmp
sub
and
enter
shlb
int3
and
or
cwtl
sbb
add
cwtl
push
cmp
subb
xchg
sbb
and
push
pop
push
dec
mov
cld
jmp
in
add
mov
mov
pop
xchg
mov
and
lret
or
adc
cmp
nop
add
add
push
nop
inc
push
xor
cmp
mov
mov
sub
test
xchg
es
fs
cli
popa
pop
push
sbbb
mov
or
mov
pop
data16
adc
stos
movsb
mov
stos
or
sbb
in
add
adc
fs
xchg
imul
inc
in
mov
adc
push
mov
add
lret
push
cmp
mov
ja
cmp
popf
mov
out
adc
je
jmp
ja
cs
aas
lods
add
sti
es
cltd
and
cmc
ficoms
xchg
add
mov
xchg
aas
add
hlt
hlt
or
cltd
push
movsb
push
or
push
popa
pop
cmpsl
js
mov
inc
push
and
sahf
xor
shll
fs
and
inc
xchg
dec
sub
or
in
aas
shll
scas
cmpsb
mov
pop
js
add
cmp
lahf
aam
imul
cltd
les
inc
fisttps
adc
lds
aam
mov
aam
jmp
mov
sub
xchg
jo
or
sbb
jmp
loopne
jo
arpl
pop
shll
ficoms
push
and
jno
adc
mov
add
push
js
xchg
out
add
inc
cmc
pcmpgtb
add
mov
add
fdivrl
pop
addr16
aas
cmc
les
add
sbb
xchg
inc
sbb
mov
fmuls
loopne
fsubrp
or
xor
insl
mov
jg
ret
cwtl
cwtl
sub
shlb
xchg
mull
push
xchg
mov
sub
mov
and
cmp
mov
cld
mov
mov
mov
mov
push
dec
pop
dec
test
insl
add
in
push
adc
dec
or
imul
je
jmp
arpl
cwtl
xchg
cmpsb
jb
dec
int
gs
xlat
rcrl
inc
xor
lock
pop
out
mov
pop
add
mov
push
mov
pop
movsl
inc
sbb
sbb
aaa
mov
add
fmull
mov
fneni(8087
add
and
pop
ret
fmuls
pop
mov
jp
insb
cmp
jle
push
lcall
sub
andl
push
push
and
mov
je
sbb
or
loopne
inc
cmpsb
inc
add
aaa
inc
subb
push
es
and
call
pusha
xor
rolb
cmpsl
push
xchg
pop
cmp
hlt
and
adc
sbb
pushf
addb
mov
iret
and
je
ja
xor
or
lock
rolb
pop
lahf
enter
sbb
lea
cld
loopne
test
inc
mov
sub
sti
inc
adc
xchg
pop
pop
adc
subl
push
push
lcall
nop
int3
decb
adc
or
push
in
fmuls
adc
addr16
add
dec
sub
or
loope
dec
adc
xchg
cmp
flds
push
dec
gs
adc
or
inc
adc
pop
xchg
dec
adc
sbb
mov
jg
sbb
or
aam
iret
xchg
out
adc
dec
pop
xor
aam
adc
inc
or
in
add
pop
decb
sub
adc
add
jns
ret
adc
loop
jl
inc
mov
pushf
or
rcrl
add
loope
xchg
xor
pusha
inc
inc
clc
dec
sub
rcl
jbe
inc
inc
pop
int
hlt
fistps
es
je
push
mov
ret
aaa
test
add
add
jmp
or
sbb
sti
popa
lea
xor
stos
andl
rcll
inc
add
push
mov
push
sub
cwtl
sbb
inc
push
test
push
daa
mov
je
dec
in
and
lods
fadd
dec
and
mov
push
das
jl
pop
xchg
pushf
cmpsb
mov
push
sbb
mov
and
adc
addl
arpl
add
pop
xor
or
add
rcrb
hlt
mov
icebp
gs
sub
cmp
xor
dec
add
jecxz
or
adc
orb
add
mov
sar
dec
shll
adc
sbb
or
adc
adc
xchg
inc
inc
or
xchg
and
sbb
jmp
insl
data16
xchg
inc
push
mov
and
jl
fld
fcoms
ja
jno
movsb
add
xchg
test
stc
fcompl
push
sub
out
xchg
sub
add
dec
push
aam
sti
jge
sub
mov
lea
inc
ret
adc
faddl
xchg
add
bswap
cmp
add
or
cmp
dec
add
xchg
clc
xor
mov
inc
arpl
lods
aad
cltd
dec
es
loopne
or
inc
ret
sbb
xor
add
stos
sbb
add
adc
fcoml
or
or
sbb
loopne
fwait
mov
mov
xlat
sbb
icebp
cmpl
jmp
adc
rolb
xchg
jmp
lea
aaa
stc
mov
clc
mov
mov
test
or
mov
lret
rcll
int
rcrl
mov
testb
repnz
test
push
mov
xchg
stc
std
cmp
adc
movsb
ret
cmc
xor
pop
mov
sub
sbb
stos
pop
jmp
pop
popa
cwtl
adc
in
pop
jl
cwtl
mov
repz
loopne
sub
arpl
popa
sub
movaps
push
push
testb
filds
xchg
xor
adc
imul
sbb
cmp
push
into
and
or
daa
repnz
sub
xchg
insl
mov
cmp
push
sbb
sbb
out
mov
xchg
xchg
sbb
dec
aaa
es
xchg
mov
and
ret
iret
movsl
je
sbb
andb
test
inc
and
adc
jno
out
adc
and
mov
xorl
test
push
es
adc
mov
pop
pushf
cmp
mov
xlat
xchg
inc
fdivs
xor
imul
sti
test
mov
icebp
push
mov
mov
add
ficoms
rcll
xchg
sbb
bsr
add
out
and
dec
rol
pop
mov
xchg
and
fisttpl
cmp
and
adcl
inc
pop
icebp
or
inc
lock
dec
jne
xchg
test
adcb
mov
and
fsub
mov
mov
xchg
push
pop
hlt
cmpsl
divb
xor
pop
cmp
and
pop
adc
ss
leave
mov
xchg
repz
add
loop
stc
mov
inc
jmp
xorb
and
inc
and
pop
push
mov
jge
push
out
mov
faddp
jne
outsl
xchg
inc
movsb
jno
push
out
cmp
and
pop
add
jae
and
mov
fsts
mov
mull
adc
addl
cmp
cmpsl
lock
nop
enter
mov
mov
dec
push
jmp
xchg
xor
into
sarl
loope
adc
pop
icebp
dec
pop
rorl
ljmp
mov
push
add
mov
imul
and
mov
enter
push
cmpsl
in
push
jb
jmp
outsl
mov
and
lods
in
insb
adc
sbb
pop
ss
rolb
mov
rorb
outsb
cli
test
inc
ljmp
outsl
dec
shrb
inc
add
pop
and
jp
rcrb
nop
sbbl
xchg
js
hlt
pop
push
sahf
add
mov
mov
xchg
push
mov
js
inc
inc
addr16
sub
dec
flds
add
pop
sahf
js
arpl
push
sbb
movsl
xchg
test
aam
and
ss
push
or
popa
adc
nop
ret
fpatan
addl
add
adc
dec
nop
xchg
sbb
add
ret
push
xchg
or
dec
cmp
pop
mov
sbb
xor
xor
and
fs
push
fsubr
dec
fdivrl
daa
roll
enter
fsub
add
and
or
sbb
pop
mov
ret
cmp
rcrl
pop
xor
jns
and
adc
sbb
inc
les
and
and
dec
inc
gs
add
sbbb
push
pop
or
adc
out
sbb
clc
push
cmc
xchg
xor
daa
andb
inc
out
and
jo
or
xor
rorb
add
adc
cmpsb
push
rcl
mov
lcall
xor
mov
adc
add
xor
notb
mov
sub
cmp
add
inc
xchg
clc
enter
dec
or
jmp
add
repnz
sbb
mov
jecxz
test
andl
sbb
sbb
or
add
adc
or
lea
push
xor
je
push
sbb
lcall
lea
or
dec
xchg
jmp
xor
mov
movsl
dec
jg
iret
rorb
dec
fwait
sarb
jl
clc
inc
cmp
jg
adc
sti
cld
daa
sbb
je
push
pop
pop
and
jb
test
cmp
inc
add
add
push
cmp
jmp
xchg
mov
push
aas
pinsrw
mov
add
loopne
xor
add
push
fdivs
test
jbe
and
enter
inc
xchg
push
sahf
xchg
push
nop
movl
mov
cmp
or
and
pusha
adc
aas
adc
inc
mov
add
jne
pop
or
jno
mov
std
add
sub
sub
or
lahf
or
sbbb
inc
testl
dec
sbb
sub
sbb
outsl
scas
fiaddl
or
rep
movl
call
xchg
push
ret
ficoml
push
xchg
andb
pushf
add
loop
pop
leave
xchg
lock
add
and
mov
jmp
adc
inc
jo
xchg
pop
jge
adc
movsb
cmp
cmp
test
xchg
insl
sub
rorb
mov
pop
cmp
dec
mov
inc
push
xor
mov
mov
or
mov
mov
push
push
add
push
cmp
pop
dec
add
dec
shll
jnp
outsl
adc
adc
jb
clc
dec
cmp
sub
or
addb
sbb
pop
push
and
adc
sbb
adc
jbe
mov
mov
or
and
sbb
jecxz
mov
rclb
xor
or
pusha
dec
pop
out
aam
fcomps
add
loope
je
mov
in
jno
mov
adc
mov
jne
aad
add
les
mov
inc
jb
out
out
mov
sub
push
sub
stos
add
sbb
add
xor
imul
js
adc
or
das
xchg
lea
xchg
mov
sub
cmc
jae
jge
mov
in
xlat
shr
es
test
sti
add
adc
leave
cmp
sbb
mov
mov
or
lods
xorb
jne
test
mov
xlat
sbb
or
xor
jbe
ret
movl
or
pop
inc
adc
pop
push
fsubrs
sub
push
dec
insb
xchg
in
or
fs
aam
in
inc
adc
imul
or
jae
pop
xor
sub
pop
and
xor
or
lds
push
or
pop
push
aam
inc
and
cmpsl
adc
daa
repnz
sahf
rcr
fsubs
loopne
inc
add
xor
push
cmpsb
mov
les
mov
adc
xchg
fs
push
outsb
mov
push
test
sbb
aam
cwtl
les
xor
fs
jno
mov
mov
jmp
or
sbb
lcall
xor
sub
je
mov
fistpl
adc
push
push
push
and
insb
jle
aas
mov
xchg
in
dec
je
push
cmpsl
push
and
rorl
icebp
dec
xchg
nop
xchg
or
js
test
sbbb
inc
popl
pop
test
add
in
push
add
into
pop
imulb
movsl
in
or
sub
mov
fsts
sub
nop
dec
cs
xor
xchg
and
lea
bound
push
mov
pop
cmpsb
pusha
dec
insb
stos
cs
pop
fisubrl
lea
and
pushf
adc
iret
call
xor
bound
and
xor
gs
out
push
xor
push
add
or
roll
push
fadd
sti
lret
and
lahf
lret
push
movsb
int3
xchg
sbb
fldcw
cmpsl
pushf
xor
pop
pop
imul
in
mov
stc
or
ss
or
cmp
cmp
insl
sub
in
out
xor
adcb
inc
cmpsb
je
sub
xchg
sub
jg
xor
lret
mov
rorb
lods
push
inc
inc
xor
sub
adc
xchg
dec
test
xchg
inc
shl
and
adc
aam
push
push
setno
sub
sarb
lea
cmp
inc
or
or
imul
std
sbb
iret
inc
dec
sub
iret
dec
add
sarl
les
mov
mov
dec
and
faddp
or
inc
pop
push
mov
sub
daa
jns
mov
shlb
mov
adc
in
pop
dec
shrb
mov
movb
pushf
lods
pop
xchg
int
cmc
add
cs
mov
clc
movsl
ret
in
add
insl
imul
leave
leave
je
mov
push
push
dec
dec
bound
push
loope
and
mov
je
push
andb
imul
jnp
mov
sti
or
add
nop
cmpsb
xor
rcr
lea
cmp
xor
push
or
fs
hlt
fs
pop
pop
in
cmp
cmp
xor
push
and
orl
in
lock
xor
jp
or
adc
loope
push
xor
dec
rorl
insl
aam
lods
mov
and
jg
sbbl
sub
lea
sub
jl
push
cmc
pop
xlat
adc
adc
imul
push
inc
adc
scas
das
push
push
push
arpl
add
xor
push
dec
add
xor
sub
push
mov
dec
push
sbb
mov
pop
rol
lods
leave
mov
cltd
jae
clc
xchg
add
or
mov
push
jbe
mov
aam
dec
xchg
mov
add
sbb
insl
inc
mov
inc
testb
inc
clc
ja
ljmp
movsb
and
adc
sbb
mov
mov
test
xchg
sbb
stc
movsl
in
pop
enter
mov
or
aas
fisubs
insb
sub
jp
xchg
mov
add
cmc
sbb
out
sbb
xor
jmp
mov
sbb
lret
jo
pop
lock
mov
pop
jb
lock
inc
push
xchg
adc
rcl
aam
or
sub
jbe
dec
insb
gs
cmc
xchg
adc
mov
inc
scas
sub
sbb
mov
sti
push
pop
or
hlt
add
and
inc
ds
pop
ss
adc
add
mov
nop
inc
or
fcoms
adc
inc
test
or
popaw
movsb
gs
adc
aam
mov
int3
movsb
xchg
mov
inc
inc
xchg
testb
loopne
xor
rolb
movb
clc
pop
in
push
aaa
neg
sbb
roll
mov
rolb
or
movnti
mov
sub
dec
sub
shrl
push
mov
nop
cld
add
inc
push
adc
mov
fisubrl
push
js
test
mov
int3
test
cmp
or
adc
cs
jge
sbb
cmpsl
sbb
hlt
movsb
sub
mov
push
pop
orb
jne
shlb
sub
mov
cld
cld
add
sbb
pop
test
icebp
dec
adc
push
fnstenv
push
mull
orl
test
fdivrs
sbb
adc
cmpsl
decl
rorb
sub
adc
in
cs
cwtl
enter
xor
loopne
adc
and
es
add
icebp
out
lret
test
bound
pop
xchg
jp
rolb
mov
sbb
enter
xor
das
les
cmp
dec
mov
inc
nop
jnp
inc
mov
adc
sbbb
enter
sub
inc
jo
clc
sbb
je
sbb
sti
dec
cmpw
popa
and
cmp
popa
and
sub
sbb
xor
jecxz
mov
jmp
movsl
jo
mov
je
pusha
inc
cmp
stos
aaa
shrl
popa
xor
test
loope
adc
xchg
and
and
inc
int3
popa
mov
mov
push
mov
stos
repz
push
xlat
dec
add
add
sbb
arpl
xchg
adc
cltd
pop
mov
xchg
arpl
cmpl
adc
adcb
rolb
leave
xor
fsts
es
push
xor
dec
fsubs
pop
in
add
add
cmp
inc
add
jne
add
mov
shrb
cmp
ret
cld
mov
or
xor
add
mov
cmpxchg
lret
dec
int3
add
mov
cmp
sti
adc
dec
fadds
dec
dec
mov
dec
add
sti
or
sbb
or
sub
or
fistpll
and
and
add
push
inc
add
lret
adc
adc
push
pop
aas
add
sub
or
nop
xorb
or
xchg
out
das
cmp
add
add
fdivrs
or
add
sbb
popa
dec
js
push
aam
sbb
mov
dec
or
mov
rcrl
adc
test
xor
cwtl
jmp
movsb
nop
shlb
add
cwtl
pop
outsl
clc
push
inc
cmp
push
lret
sub
push
shlb
adc
dec
jg
movsb
out
es
ret
aaa
inc
movsb
lret
das
and
loope
xor
push
or
mov
pop
rolb
or
adc
ret
cmp
pusha
xor
mov
nop
pop
lods
test
sahf
test
xor
adc
outsl
aad
jns
les
push
roll
fldl
xchg
jne
xchg
mov
push
lods
mov
mov
push
or
xchg
cltd
sbb
add
dec
mov
cmp
cmp
movsb
fisttps
push
pop
inc
jne
dec
xor
sub
or
call
xor
mov
push
and
xchg
xchg
xchg
call
xlat
mov
ret
fisttps
inc
jbe
je
sbb
add
or
movb
xchg
xlat
sub
pusha
sub
das
xor
mov
mov
add
je
mov
mov
test
xchg
xchg
or
jae
test
std
cmp
mov
lcall
cmc
lds
jno
mov
and
xchg
mov
push
mov
int
cs
add
aam
add
call
add
int
xchg
or
call
dec
scas
aas
sub
push
adc
es
mov
idivl
addl
mov
mov
stos
mov
pop
or
sub
or
sbb
leave
shr
or
sbb
bound
or
mov
scas
jbe
insl
popa
jb
pop
stc
or
loopne
mov
cmpsb
sub
rol
xlat
xchg
cmp
or
jne
leave
pop
int3
xor
xor
iret
icebp
movsb
loopne
jl
dec
dec
out
adc
loopne
and
cmp
ret
inc
sbb
dec
mov
sbb
test
or
lahf
cmp
mov
or
jecxz
sbb
sbb
cmpsl
mov
mov
add
ficoml
cmc
je
cmpb
sub
or
adc
pop
and
lds
inc
or
rcrl
or
test
in
dec
imul
insl
cmp
insl
mov
add
sbb
orb
lods
push
int
mov
inc
sub
adc
aad
dec
js
pop
jnp
sub
lods
cs
inc
outsl
sub
mov
sub
dec
sbb
cmp
dec
mov
or
in
adc
and
cltd
sbb
and
and
out
into
xor
mov
sbb
xchg
push
or
and
arpl
or
mov
xchg
leave
mov
xchg
dec
or
mov
mov
inc
inc
lea
mov
pop
stos
je
addl
dec
andl
xchg
dec
lret
adc
negb
hlt
dec
in
and
xor
add
roll
xchg
addr16
ret
les
mov
aaa
fcoms
pushf
and
sbb
push
mov
push
xorl
adc
push
xlat
je
adc
popa
add
int3
sub
pop
xor
sub
or
movsb
lret
and
xlat
lahf
cmp
ja
outsb
outsl
push
enter
or
popa
lea
test
mov
and
cmp
call
pushf
pusha
dec
lcall
sub
xlat
add
jne
popf
and
pop
pop
xor
push
test
call
add
test
pop
adc
call
test
into
mov
and
push
sbb
pop
je
lods
inc
xor
inc
in
out
add
or
sub
ret
inc
inc
sbb
mov
test
insl
mov
cmpsb
mov
mov
or
mov
xchg
imul
add
dec
add
push
mov
vcvtdq2pd
int
mov
add
and
or
imulb
inc
pop
inc
sbb
inc
add
shl
inc
mov
push
inc
sarb
mov
sub
in
ja
mov
iret
or
sbb
outsb
pusha
das
popa
shlb
jnp
adc
pop
aad
andb
and
sub
jp
jmp
or
or
push
dec
andb
push
lods
aam
and
jge
fs
push
or
jne
cmp
mov
call
jmp
dec
mov
subb
fdivrl
mov
jne
insb
or
jns
sub
add
xchg
sub
inc
push
and
xor
fcoms
add
and
mov
test
maskmovq
imull
jp
rorl
loopne
mov
in
dec
push
sub
jne
push
imul
or
cmp
daa
orb
in
mov
mov
jbe
sbb
or
lods
xor
mov
mov
das
outsb
pushf
adc
mov
sbb
sub
or
outsl
add
popa
sbb
int3
sub
cli
adc
cmp
test
je
mov
adc
mov
pop
sahf
sub
sub
xor
mov
jne
mov
pop
jg
pushf
pusha
mov
inc
xchg
push
dec
ljmp
and
push
sub
test
sti
mov
add
fcomps
mov
mov
mov
mov
aaa
es
fisttpll
mov
dec
sbb
push
add
push
push
rorb
rcr
movsb
mov
imul
mov
adc
adc
mov
pop
xchg
cs
sarb
sbb
loopne
enter
lods
push
sub
push
bound
nop
jle
jmp
leave
fistl
jb
std
sub
insb
xor
jmp
push
jmp
mov
nop
add
mov
mov
lcall
pop
xor
adc
add
gs
and
mov
dec
push
sbb
gs
lahf
adc
jmp
add
pop
push
iret
adc
add
leave
add
sub
addb
insb
aad
aas
xchg
andb
idivl
sbb
jo
and
outsb
shll
std
and
das
insb
es
addr16
cld
imul
sbb
jnp
jo
or
daa
loopne
movsb
lock
adc
cmovl
sub
push
imul
out
cmp
jmp
mov
mov
mov
cmp
adc
adc
add
xchg
mov
cmp
lock
mov
xchg
mov
xchg
adc
jg
jae
shlb
pop
mov
aaa
cmpsb
or
in
inc
dec
loope
and
xchg
adc
aam
cwtl
movsl
xchg
xor
shrb
lea
or
js
and
lret
sbb
test
or
adc
and
pop
andb
xchg
mov
scas
sub
inc
push
enter
or
jg
mov
xor
fwait
jle
dec
popf
rclb
and
cmp
shrb
xchg
push
inc
mov
mov
xchg
cmp
scas
xor
cmp
sar
adc
sbb
sbb
fnstenv
lret
jne
fs
and
sbb
cs
add
test
orl
sub
mov
pusha
adc
push
js
inc
sub
jnp
nop
inc
mov
sub
sahf
adcb
add
into
push
inc
sub
inc
pop
les
ret
xor
adc
cmpb
sarl
inc
in
cmp
test
mull
daa
dec
sbb
jge
sbb
jge
mov
movsb
jmp
sub
and
mov
dec
adcl
cmpsl
pop
or
sbb
gs
dec
orb
subl
imul
out
loope
inc
inc
or
js
mov
jo
xchg
jge
pop
jge
fs
push
ret
and
inc
stos
daa
jp
push
xchg
and
push
neg
sbb
xchg
mov
pop
cmpsl
test
ss
xchg
pusha
push
ficoml
aam
jae
and
sbb
mov
or
mov
sub
cmp
subl
xor
mov
pop
xchg
fnstsw
adc
or
incl
add
pop
ss
je
add
pop
adc
shrl
test
xor
jge
daa
pop
or
or
rcrl
mov
pop
arpl
lods
in
loop
pusha
outsb
adc
jo
lea
stc
push
jmp
xor
movsl
adc
cs
push
dec
xchg
rolb
sbb
push
mov
jne
mov
loopne
mov
xchg
das
jae
es
dec
xor
sbbb
imul
or
cwtl
mov
pop
xorb
adc
mov
mov
lea
xchg
jne
imul
cmpsb
sub
addr16
push
sub
or
popf
mov
es
sub
popf
add
inc
stos
sbb
sarb
enter
lahf
inc
out
cmp
jge
sbb
idiv
cmp
jge
and
addr16
repnz
addr16
push
aas
pop
push
stc
adc
add
mov
or
and
xchg
or
or
ficoml
fsave
scas
inc
xlat
ret
push
cmc
test
adc
test
hlt
push
or
push
shlb
and
pop
lea
shll
rol
cmp
add
lret
cmp
jmp
dec
jns
and
adc
in
add
nop
ss
out
inc
sub
cltd
dec
xor
fsub
xor
and
mov
or
int
lods
ds
cmpsb
pop
xor
cmp
test
cmp
rcl
jo,pt
mov
adc
cmp
ja
pop
stc
adc
or
in
in
roll
pop
cmp
psubsw
dec
xchg
xchg
xchg
ljmp
sub
cmp
push
inc
and
dec
into
or
or
loopne
jmp
and
ss
mov
mov
lock
je
xchg
andl
fsubs
rclb
dec
pop
mov
lcall
push
cmp
pushf
fsts
testb
cmp
pop
cmp
fsubrs
popa
sub
push
xor
mov
xor
xchg
add
cmpxchg
xchg
sub
pushf
test
and
daa
push
pop
lods
pushf
xchg
fistl
adc
inc
into
push
cltd
adc
inc
inc
inc
inc
inc
push
and
adc
push
rolb
pop
les
xlat
sbb
fcompl
daa
sbb
inc
and
xor
arpl
stos
sub
add
enter
andb
pop
outsl
xchg
test
mov
es
push
out
sti
inc
adc
push
inc
mov
mov
into
enter
mov
mov
mov
xor
mov
movsl
inc
sub
and
insl
leave
into
xor
arpl
and
or
push
adcb
and
ret
daa
jo
sbb
and
xchg
fidivrl
adc
pusha
pusha
sub
add
dec
pushf
and
xor
or
lods
pop
inc
xor
pop
push
pusha
and
push
and
pushl
test
imul
rclb
or
ret
xor
add
mov
push
dec
int3
push
cmpsb
cltd
ret
iret
adc
xchg
inc
push
mov
mov
loop
out
gs
cmp
sbb
jl
mov
adc
mov
mov
or
push
pop
jmp
js
mov
dec
inc
jno
xor
xchg
insb
jbe
xorl
outsl
mov
sbb
je
xor
add
pushl
adc
add
repz
add
or
cmpl
cmpb
lea
out
and
mov
mov
jns
pop
aam
mov
dec
sbb
aad
jno
mov
sbb
xchg
mov
push
and
lods
adc
inc
stc
jg
sub
jle
add
lret
lods
movsb
lock
in
cs
xchg
xchg
fdivs
xor
sub
les
rcrb
lock
or
in
or
xchg
lret
call
or
mov
or
fmul
push
iret
repz
enter
jns
dec
and
adc
cmp
ss
add
or
mov
mov
cmp
and
push
add
pop
add
push
xchg
rolb
inc
mov
or
add
cmp
or
les
sub
dec
inc
xchg
sub
fucom
scas
rorb
pop
add
pop
nop
daa
add
sub
mov
addb
sub
fs
test
or
push
enter
xchg
adcb
mov
pop
mov
or
mov
adc
mov
jmp
mov
push
pop
sarb
scas
adc
sub
jo
mov
das
or
jle
out
push
and
jo
cmp
mov
and
add
pop
int3
add
idivl
add
mov
and
fnsave
ror
or
iret
or
or
add
pop
jmp
pop
stos
mov
inc
lahf
es
or
pop
fisubrs
mov
cmp
and
je
movsl
popf
gs
fmul
or
ficompl
in
dec
fadds
sbb
or
dec
les
test
mov
sbb
imul
or
nop
add
jecxz
sbb
mov
or
jnp
lret
and
shlb
sbb
mov
sbb
xor
mov
inc
orps
or
loopne
and
fisubl
dec
xchg
jl
fcompl
int3
or
sbb
sub
xor
xchg
andl
ret
push
sbb
adc
add
in
dec
into
or
int3
mov
fdivs
pop
cmpsl
xchg
sub
mov
mov
cwtl
sub
add
add
push
inc
inc
les
mov
jge
cld
xchg
out
ljmp
rcl
mov
loopne
push
inc
outsb
sub
lea
xlat
fistl
roll
cld
xchg
daa
or
mov
sub
push
push
jecxz
ret
add
js
jno
adc
dec
cld
add
pop
out
mov
dec
int3
sub
setg
cmp
jne
push
xor
xchg
es
push
xchg
adc
loopne
sahf
gs
dec
fcom
hlt
add
sub
or
repz
and
xchg
popf
xor
nop
sub
push
divl
xchg
adc
jo
push
mov
mov
ja
pop
adc
mov
ret
mov
test
aas
and
add
push
adc
xchg
fistpl
pop
add
inc
or
mov
xchg
pusha
mov
fwait
in
jne
aaa
nop
xor
lods
push
jbe
mov
xchg
lods
inc
sbb
inc
sbb
add
imul
or
dec
adc
mov
xor
insl
xchg
jo
les
shr
repnz
dec
outsl
call
dec
je
mov
or
adc
adc
fisubs
add
pop
add
adc
adc
cs
das
nop
push
and
sub
pop
enter
xor
xor
fcomi
adc
cmp
cltd
in
add
add
jne
sti
sahf
jns
or
test
adc
mov
or
fisttpll
movsb
daa
cwtl
or
jo
imul
xchg
or
push
stc
xchg
test
int3
loopne
push
fdivs
cmpsl
pop
push
nop
xchg
les
clc
add
test
mov
sahf
xchg
out
cld
in
dec
in
cmp
dec
inc
mov
les
aam
faddl
lcall
inc
mov
mov
mov
or
rcrb
push
setb
jae
sahf
movsb
orl
pop
jnp
inc
jmp
add
sub
ljmp
mov
fldl
dec
js
mov
adc
ljmp
and
jnp
call
and
fcomps
or
push
sub
fisubrl
mov
push
aas
cmp
jmp
ret
or
ret
in
adc
and
cmp
pop
add
add
movsb
movsl
sbb
mull
mov
into
and
test
loopne
dec
dec
subl
add
sbb
dec
sbb
push
mov
lods
movsl
sub
add
call
mov
sub
push
imul
sub
pop
pop
lea
push
lock
push
insl
and
inc
xor
daa
mov
dec
jb
xor
call
mov
pop
mov
nop
or
cmp
sbb
push
mov
jge
add
mov
xor
sub
add
jg
add
add
rcll
test
cwtl
sbb
fs
dec
loop
inc
adc
pop
shlb
mov
jg
pop
shlb
dec
jmp
mov
lcall
rorb
stc
lods
mov
lea
jbe
test
lret
push
insb
pop
fisttps
and
add
je
jne
std
cmc
mov
inc
test
cmc
xchg
and
and
add
out
pusha
sbb
mov
add
mov
add
adc
add
xchg
or
imul
mov
scas
arpl
test
lods
mov
adc
pushf
pushf
xorl
lea
insl
pop
repz
pop
or
loopne
or
push
imul
or
hlt
add
xor
dec
rclb
shll
jo
movsl
mov
inc
rorl
sub
shlb
push
aam
das
xchg
and
push
sub
in
out
ret
fdivs
or
sub
imull
jmp
jmp
xor
or
sub
dec
sahf
les
xor
push
outsl
rolb
dec
ljmp
push
int
shrl
inc
in
jmp
je
dec
rcll
aas
jo
clc
rolb
cmpw
adc
push
add
call
jg
dec
or
mov
cmpsl
inc
sahf
fimull
leave
xchg
pop
cmp
xor
add
sbb
or
mov
insb
sbb
dec
sbb
leave
or
imul
sbb
loopne
je
cmp
and
arpl
push
imul
cmp
test
enter
sub
add
imul
or
adc
mov
or
or
sbb
ja
push
insl
cmpsl
scas
in
pop
adcl
int
add
insl
shlb
popa
lock
adc
jmp
or
in
out
xchg
icebp
sub
mov
into
movsl
adc
add
adc
adc
push
push
les
mov
inc
jne
cmc
aaa
js
test
jne
rcll
fsubrs
imul
sbb
pop
push
bound
mov
and
add
test
sbb
repz
add
or
nop
out
loopne
call
mov
in
fs
push
lret
mov
jbe
pop
push
xchg
add
bound
xor
inc
push
in
sbb
mov
jae
and
outsb
in
dec
or
sub
enter
enter
fildl
in
shlb
xor
xchg
mov
mov
adc
jo
in
pop
sbb
inc
mov
fsubs
lcall
inc
std
lret
jne
xorl
push
loopne
aam
add
mov
inc
pop
push
addb
inc
mov
lock
repnz
emms
mov
jg
bt
jae
mov
not
and
inc
or
cld
push
mov
and
add
add
dec
and
sub
pcmpeqw
add
ficompl
out
sbb
add
outsl
test
sub
adc
dec
xor
mov
xor
mov
mov
and
leave
jne
loopne
int
in
mov
inc
ljmp
push
xchg
cmp
lods
xchg
daa
stos
and
jb
dec
ret
fidivrs
sahf
fdivs
add
push
xchg
testl
sahf
mov
cld
orl
push
clc
gs
fists
sbb
and
sub
push
pop
mov
inc
cmp
call
pop
fmuls
dec
mov
add
push
punpckhbw
lret
lock
sbb
push
xor
inc
jmp
test
test
test
jae
sbb
push
and
inc
aaa
adc
adc
mov
outsl
mov
or
test
iret
or
fadds
jmp
add
cmp
mov
movsb
cltd
adc
and
push
shrb
fcom
mov
addb
jecxz
dec
xchg
je
xor
jb
aam
cmpsl
xorb
sbbb
mov
inc
ret
xor
shrb
jle
xor
xchg
rorb
cmp
xlat
or
daa
jp
stos
fs
push
loope
push
mov
jne
ja
or
push
add
xchg
dec
cmp
sbb
or
add
and
icebp
es
outsl
sub
cmp
inc
mov
and
inc
icebp
mov
hlt
add
push
sbb
inc
sbb
addr16
andl
rorl
mov
clc
push
add
mov
sub
outsb
inc
pop
push
push
mov
sbb
mov
test
pop
push
jnp
xor
mov
jbe
lahf
mov
or
cmp
invlpg
andl
push
adc
pop
sub
add
and
add
jbe
cmovno
ss
dec
push
sub
and
cmp
inc
loope
adc
mov
adc
leave
inc
clc
jo
pop
xor
faddl
nop
cmpsl
dec
adc
or
cmpsb
nop
outsl
repnz
call
enter
js
inc
sub
inc
loop
hlt
lock
pusha
in
adc
dec
js
dec
sbb
mov
pusha
lods
mov
add
cltd
in
push
ja
mov
jge
sbb
xchg
push
xchg
xor
clc
inc
test
sti
add
ja
fdivrl
sahf
pusha
cmp
in
pushf
es
and
mov
aad
jb
loopne
and
sub
jecxz
gs
rclb
dec
test
jns
and
in
push
inc
add
push
pop
push
add
sbbb
inc
out
cmp
roll
setl
lods
popa
add
jns
int
or
add
out
loopne
test
nop
movsb
and
mov
sbb
sub
add
mov
sub
adc
or
test
pop
ja
add
call
inc
es
lock
push
and
mov
dec
inc
loopne
pop
stos
div
jb
or
mov
lcall
mov
pop
adc
popa
sub
or
push
push
xlat
clc
jle
xchg
pop
or
add
mov
into
subl
std
orb
mov
sbb
psraw
enter
cmp
pop
mov
outsl
hlt
push
aas
inc
sub
push
fidivrs
pop
jb
mov
insb
push
movsb
add
mov
adc
mov
push
sub
adc
xor
mov
popa
or
mov
paddsb
or
andl
mov
add
shlb
and
inc
clc
pop
dec
inc
aas
fs
movl
call
insl
add
or
adc
lock
jp
mov
or
cs
ljmp
sbbl
push
rcll
invd
or
in
push
cmpb
or
lods
and
xchg
fdivrs
pop
pop
cmpb
cwtl
xchg
xor
xor
addb
movsb
push
sbb
test
lcall
and
lea
cmp
js
push
inc
popa
insb
lret
aas
movsb
jns
add
mov
cmp
ja
shlb
sub
pop
loopne
and
dec
lds
js
and
mov
lods
add
shlb
add
rorl
jl
inc
popa
add
xchg
mov
or
sub
outsl
dec
and
fisubs
jb
sbb
ja
fmuls
test
dec
jb
sbb
add
adc
out
fistpll
je
and
in
sahf
sub
lods
clc
movb
data16
xchg
mov
jmp
mov
xor
mov
mov
mov
movsl
inc
xchg
dec
inc
push
jo
mov
add
jo
and
das
adc
pmulhuw
xor
or
jbe
xchg
data16
sarl
inc
js
ss
xor
mov
jb
cmp
pop
mov
insl
inc
pop
pusha
dec
mov
pop
push
test
or
bound
xor
popf
xchg
dec
sbb
pop
sbbb
outsb
adc
sbb
inc
fs
adc
xchg
adc
pop
and
adc
push
inc
clc
sbb
jle
push
xor
or
fiadds
and
mov
adc
out
add
mov
jmp
mov
popa
lock
xchg
jmp
shlb
jmp
lcall
sbb
jnp
adc
lock
add
nop
jg
add
mov
leave
push
test
ret
or
test
je
je
ret
out
sbb
ljmp
add
mov
inc
adc
jae
or
or
or
dec
mov
inc
jmp
cmpsb
out
and
mov
cmc
jge
jae
int
pop
jne
pop
mov
outsl
scas
jp
popl
push
add
inc
loop
and
rolb
clc
mov
push
cmp
jne
and
mov
ss
inc
repz
mov
sbb
fucomp
and
or
or
pop
add
push
adc
sub
repz
mov
sub
adc
sti
call
push
pusha
sub
jmp
adc
jmp
xlat
add
add
stos
push
cmp
add
outsb
test
sbbb
mov
insb
adc
fnstcw
inc
xor
mov
adc
mov
outsb
repz
and
and
push
pop
and
inc
pop
and
data16
rorl
push
mov
ljmp
pop
movsb
std
mov
jno
pusha
add
mov
or
shrb
leave
inc
adc
repnz
add
inc
lcall
push
aad
loope
and
pop
mov
movb
or
dec
call
jo
pop
adc
popf
mov
inc
lret
pop
inc
inc
and
cmp
dec
rorb
inc
clc
lret
push
test
lahf
cltd
dec
xchg
cmp
xor
cmp
xorb
jl
sbb
or
push
push
test
ss
int3
add
fists
test
or
xor
adc
adc
imul
dec
nop
dec
shlb
fbld
test
pushf
and
adc
push
cmp
sbb
and
dec
pushf
and
ds
or
adc
or
sbb
pop
or
int3
mov
push
mov
jo
cmc
mov
inc
outsl
mov
add
jl
jno
out
push
push
and
je
daa
sub
rcrl
fs
xor
sub
pusha
leave
jo
push
enter
ss
sbb
inc
bound
jnp
add
sbb
jae
inc
push
add
stos
inc
and
add
aaa
or
add
insl
jle
or
fidivs
sub
add
clc
inc
push
pusha
std
xchg
rorb
rcll
or
mov
dec
hlt
xor
js
cmp
ficoms
adc
daa
pop
insb
dec
push
jae
ret
jbe
out
jl
daa
jbe
sbb
popa
rcrl
push
push
jmp
in
ret
mov
test
sbb
dec
push
je
pop
sbb
push
push
jo
dec
or
sbb
hlt
aam
cmp
int
xchg
sub
test
inc
movb
shll
add
xchg
test
xor
or
test
or
dec
xchg
xor
pop
daa
mov
daa
or
or
and
subl
and
loope
push
repnz
scas
dec
push
mov
jge
fs
out
xchg
mov
or
adc
cmp
jne
push
lds
sub
xor
sbb
loopne
xor
mov
push
or
xchg
mov
out
lods
inc
adc
movsl
lcall
mov
ret
subl
insb
ret
decl
xor
add
sarb
sub
fldt
xchg
out
mov
xor
or
add
sub
mov
pop
adc
cmp
es
pop
xor
or
adc
adc
cmp
xchg
mov
out
ret
mov
pop
call
fst
es
cvtdq2ps
aam
mov
fcoml
or
enter
subb
lahf
adc
lods
fs
xor
js
sub
mov
add
stos
or
add
push
inc
pop
scas
inc
lea
fisubrl
push
lcall
iret
sbb
xor
cmpsl
repz
ret
push
test
or
xor
cwtl
sbb
xchg
fmul
and
cmp
adc
flds
and
cmp
daa
fs
sub
mov
ljmp
sub
fwait
cmp
mov
and
sbb
dec
gs
icebp
lods
mov
inc
dec
jo
or
inc
pop
mov
jge
cmp
add
insl
xchg
push
sarl
faddl
stos
into
inc
pop
test
aad
aam
pop
push
scas
sub
and
sbb
sbb
add
push
pushf
pop
inc
push
rcrb
popa
dec
sub
push
or
and
or
iret
and
loopne
dec
mov
pop
dec
jne
adc
mov
arpl
pop
or
mov
push
sub
or
and
in
outsb
lahf
inc
push
add
and
aam
inc
or
xchg
and
pop
sub
adc
xor
ffreep
add
sbb
xchg
xadd
mov
pop
jmp
pop
mov
sbb
mov
dec
push
lods
aaa
or
hlt
leave
adc
or
or
push
cmpsl
test
adc
adc
cmp
sahf
push
mov
or
cmp
xchg
inc
inc
cmpsl
jbe
or
xor
push
jno
add
or
xorb
add
push
push
ret
out
pop
sahf
test
xor
or
enter
mov
fwait
and
mov
imul
push
icebp
test
dec
cwtl
popa
imul
sbb
xchg
in
add
sti
or
or
xor
push
sub
adc
aaa
mov
adc
push
mov
jno
jnp
clc
mov
jmp
mov
sbb
adcl
pop
sub
cs
jb
pop
inc
andb
int3
popa
call
sbb
and
add
and
leave
inc
sub
pop
xchg
divl
sbb
mov
and
sbb
push
adc
stos
sub
pop
dec
out
mov
ss
mov
lea
xor
fucom
jge
or
jp
cmp
and
and
imul
add
jmp
pop
jg
icebp
ljmp
pop
dec
adc
popa
adc
out
daa
fdivrl
adc
add
ret
idivb
shrl
dec
mov
and
sub
lods
fsts
add
ret
mov
and
xchg
adc
add
aam
loopne
lock
adc
outsb
push
imul
push
xor
push
gs
lret
pop
push
push
add
mov
dec
aas
and
and
or
cmp
xor
test
xchg
les
and
adc
xor
and
sub
push
jg
xchg
fistpll
ret
lock
xchg
add
insb
mov
add
add
sub
and
inc
xor
movsl
sbb
xchg
mov
add
dec
aaa
and
pop
mov
mov
adc
or
pop
dec
add
pop
xor
pop
xchg
cmp
or
adc
mov
lock
push
fsubrs
add
nop
push
out
pusha
inc
loopne
sub
lea
or
fsubrs
push
or
push
daa
dec
dec
inc
adc
in
add
pop
adc
xor
mov
push
imul
jge
insb
subl
adc
adc
sub
pop
scas
in
push
hlt
push
push
bound
jmp
rol
fs
mov
movsb
test
add
inc
fbld
stc
pop
leave
sub
pop
iret
adc
add
out
lods
insb
push
pop
outsl
enter
xchg
push
scas
outsb
or
ss
lea
lock
bound
mov
pop
jmp
pop
in
pop
pop
jnp
enter
int3
rorb
outsl
loope
les
push
enter
or
adc
dec
or
adc
pop
mov
into
pop
pop
push
lea
icebp
cmp
or
sbb
mov
sahf
movsb
clc
push
cmp
dec
sub
lock
sub
lret
dec
lock
mov
push
sub
je
dec
fisubrs
inc
xchg
fdivs
jmp
xchg
jb
cwtl
push
cs
add
or
in
mov
xor
leave
dec
popa
imul
lea
xchg
std
and
dec
sbb
or
clc
inc
sbb
inc
push
pop
repnz
iret
push
ds
push
jo
adcl
push
fcom
jl
jle
pop
sbb
mov
andl
out
mov
inc
mov
dec
pop
jge
and
push
sbb
jle
pop
loopne
imul
or
mov
pop
pop
sti
loopne
ret
sbb
in
out
or
cmpsb
andb
or
cmp
mov
mov
and
pop
shlb
fisttps
dec
push
loopne
popa
insb
sbb
mov
pop
shlb
loopne
and
xchg
xchg
cmc
xor
add
cmp
ret
sub
add
add
or
leave
sub
or
push
xor
dec
fcoml
js
jno
dec
or
frstor
test
sbb
movsb
mov
and
or
or
enter
xor
and
pusha
fwait
fs
imul
imul
test
inc
inc
lret
dec
and
sahf
pusha
xor
movsl
aas
stc
inc
xor
cmc
xchg
dec
or
sbb
jbe
xchg
rcll
outsb
nop
mov
xchg
mov
sti
adc
or
lea
loope
jg
cmp
pushf
push
add
mov
test
ret
popl
clc
pop
out
sub
fisubs
loope
pop
or
or
and
inc
lds
inc
sub
inc
mov
sbbb
stos
pop
mov
cs
push
dec
push
sbb
add
mov
or
or
sub
xchg
inc
test
andl
cmovo
sub
dec
imul
xchg
or
adc
enter
sahf
push
cmp
adc
enter
add
xchg
imul
and
add
add
add
mov
dec
daa
pop
es
sbb
dec
cld
mov
cmp
and
push
lret
mov
dec
in
push
or
sarl
inc
pop
mov
cltd
xchg
inc
inc
out
clc
and
or
mov
ja
cmp
xor
jnp
mov
cmp
push
add
xchg
adc
sahf
mov
test
fwait
pop
mov
xor
out
cmp
push
idivl
testl
test
jno
dec
add
je
test
mov
lret
fsubl
push
pop
sbb
into
xchg
sub
xchg
mov
mov
insb
cmc
sub
add
inc
push
push
or
mov
mov
pusha
mov
insb
sbb
push
pop
mov
xor
add
enter
pop
or
call
jle
adc
and
scas
clc
add
addl
ret
cmp
jns
addl
jl
push
dec
fdivl
or
decl
sub
xchg
outsl
gs
jne
add
inc
and
or
js
xchg
sbb
cld
ret
xchg
rclb
pop
push
pushw
or
sub
dec
and
dec
mov
cmpsb
adc
es
mov
outsl
sbb
mov
out
or
leave
sbb
cmp
and
mov
loop
lods
xlat
mull
inc
pop
adc
in
jne
fsubr
push
sbb
xchg
rcrb
pop
daa
in
mov
ficomps
jnp
adc
ror
sub
pop
mov
sub
push
repnz
lds
xor
fnstenv
lock
mov
xchg
inc
lock
jo
mov
scas
xorl
jle
or
arpl
sbb
lea
rclb
fnstenvs
and
sub
movsb
adc
pop
mov
push
rorb
je
mov
aas
or
mov
xor
je
cs
rolb
dec
unpcklps
push
xchg
divl
sub
push
xchg
test
mov
jle
jecxz
test
xchg
pop
jb
inc
adc
mov
push
into
sti
or
call
or
mov
adc
or
out
andb
mov
lcall
dec
jae
sbb
ds
inc
pusha
cmpb
mov
insb
sbb
lcall
or
sbb
cltd
in
shlb
sbb
lea
jnp
addl
stos
xor
inc
and
mov
arpl
test
cmp
adc
ret
sub
push
sbb
adc
inc
adc
mov
sbb
push
or
dec
pop
add
call
sbb
add
sbb
sub
push
les
sbb
jmp
xchg
mov
shl
mov
mov
cld
js
enter
data16
lods
jne
push
xlat
jne
adc
mov
add
in
scas
xor
popa
clc
adc
data16
cmc
sti
lods
cwtl
out
dec
insl
fildl
mov
ficoms
gs
or
inc
push
loope
addr16
sub
push
pop
clc
xchg
xchg
gs
loope
mov
sub
cmpl
adcb
pop
mov
add
lods
xor
and
pop
inc
add
sub
inc
or
mov
or
adc
subb
xchg
mov
and
adc
and
adc
stos
loopne
add
push
inc
and
dec
sub
xchg
mov
rolb
aam
icebp
cmp
rcrl
sub
daa
sbb
jns
popf
or
lods
dec
jns
mov
push
mov
in
hlt
dec
xchg
cmp
mov
clc
movsl
popf
mov
add
inc
addr16
inc
pop
cs
cmp
fimull
add
jnp
and
into
xlat
xor
and
adc
mov
and
or
es
cmpl
pop
adc
rcrl
pusha
sbb
jmp
cmp
mov
es
out
cwtl
shll
stos
bound
add
cwtl
insl
stc
xchg
loop
dec
leave
shl
or
stc
daa
arpl
loopne
jecxz
testb
push
sub
in
sahf
nop
dec
push
mov
dec
add
mov
sub
shrl
add
aad
lods
outsb
lcall
scas
jo
xor
repz
cmp
cwtl
and
popa
push
cmpsl
je
adcl
mov
cld
and
les
and
or
pushf
ror
sbb
test
push
pop
inc
mov
ficomps
or
js
and
sbb
xchg
dec
jo
add
and
icebp
bound
push
cld
ret
filds
adc
icebp
scas
mov
mov
pop
aaa
and
add
push
or
push
ret
push
rclb
cwtl
sbb
cmp
inc
and
rorb
fwait
in
add
test
pop
xchg
and
ret
pop
xor
jnp
push
push
cwtl
adc
push
pop
and
lahf
push
mov
and
push
fsubrs
add
sbb
subps
push
test
adc
ret
add
or
dec
cmp
out
ss
jmp
shrl
roll
inc
or
mov
cwtl
jno
xchg
pusha
mov
and
sbb
pusha
pop
es
addr16
dec
or
and
ficoml
fcoms
pop
scas
cltd
inc
cmp
aam
inc
adc
stos
movsl
aam
ret
rcrb
mov
adc
adc
jnp
dec
pop
push
arpl
daa
xor
je
jg
sub
mov
inc
and
js
nop
aas
addr16
xor
dec
pop
not
sti
push
xchg
inc
jo
inc
aaa
pop
mov
push
mov
mov
pop
dec
add
mov
xchg
lea
pop
mov
pop
pop
fwait
setge
dec
fisubs
data16
clc
or
leave
test
loopne
push
out
xor
pusha
pusha
lret
cmp
sub
inc
jg
mov
mov
sbb
gs
fstp
pop
pop
xor
lock
ss
test
mov
add
es
pop
scas
xchg
adc
inc
shlb
shll
and
icebp
arpl
filds
jae
xor
sbb
adc
repz
lods
insl
xor
sub
adc
jle
sub
mov
in
mov
loopne
mov
adc
adc
pop
mov
mov
imul
fwait
mov
and
mov
jecxz
or
inc
sbb
mov
inc
sti
push
mov
cmp
pop
sub
inc
push
test
pop
jl
dec
push
and
mov
mov
push
pop
inc
sub
pop
out
ss
and
add
push
jmp
lret
and
adc
pusha
jbe
add
xor
test
lods
mov
lods
dec
gs
or
mov
imul
jecxz
or
stos
fcoms
and
mov
and
or
inc
and
mov
outsl
jmp
inc
cmp
test
stos
mov
push
add
mov
dec
push
cmp
stos
or
adc
add
or
sti
push
cmp
mov
cmp
bound
movsb
pop
and
sub
jno
sub
xor
and
add
scas
and
cmp
mov
test
mov
jae
sbb
in
dec
movsb
nop
jge
movsb
mov
push
push
and
lret
in
sub
dec
rorb
fsubs
pop
dec
mov
adc
movsb
pop
enter
jb
sbb
negl
mov
subb
in
sbb
push
cmp
inc
icebp
adc
xchg
sbb
dec
jmp
inc
bound
jne
sbb
insl
pop
je
sub
lea
adc
gs
adc
nop
cmc
xor
jbe
cs
lods
inc
xor
push
xor
outsb
jb
cltd
mov
sbb
outsb
jbe
sub
push
cmpb
cmpsl
jg
or
add
inc
push
jne
arpl
sbb
dec
xchg
push
dec
mov
outsb
jns
pusha
ret
cmp
fdivs
jmp
mov
mov
inc
jbe
stc
fdivs
lea
lea
mov
jb
and
incl
sub
add
sub
inc
add
fidivs
adc
or
pop
pop
dec
shlb
pop
and
or
sub
dec
xlat
jo
pop
push
and
dec
pop
pop
and
fst
test
test
pop
test
leave
stos
dec
incb
inc
adc
jno
sbb
add
ficoms
adc
jge
popa
pop
mov
inc
push
add
fs
or
call
fs
push
mov
mov
std
mov
mov
imul
jbe
jae
pop
fisttpl
loopne
dec
mulb
xorl
xchg
test
fisttpll
fs
jg
xchg
or
shll
cwtl
sub
mov
pop
xchg
fildl
jo
dec
ss
sub
pop
jns
lods
pop
cmp
jl
or
xor
sub
jmp
push
pop
dec
dec
cs
push
xor
add
dec
push
test
out
mov
ljmp
jo
xor
loopne
ret
push
insb
je
pop
cwtl
mov
arpl
pop
lds
nop
jne
pop
add
mov
outsl
ret
cmp
pop
or
clc
leave
adc
sub
inc
rol
dec
mov
jmp
xor
rcrb
sbb
dec
add
addb
push
or
dec
xor
push
cmpsl
lea
out
das
adc
sbbb
adc
ficomps
or
jo
and
stos
ret
lds
mov
adcl
divl
mov
cmp
push
and
lret
and
rolb
repz
jb
aam
and
xchg
mov
xchg
testl
cmp
add
filds
adc
pushf
fs
xchg
stc
xor
jge
rcrb
sbb
mov
ret
mov
add
je
orb
cmp
ret
xor
inc
sub
fwait
inc
add
sub
pop
faddl
loopne
add
add
adc
inc
enter
arpl
adc
mov
jb
sbb
add
inc
cltd
push
lock
aam
and
push
inc
xchg
mov
adc
idivl
dec
das
call
inc
mov
or
xchg
xor
inc
shrb
mov
pop
xchg
pop
adc
inc
dec
adc
push
and
jo
xchg
lahf
scas
pop
repz
xchg
sbb
test
adc
xchg
inc
adc
popf
sti
push
push
push
in
inc
or
add
test
mov
rolb
mov
cmp
rorb
decb
addr16
jmp
shll
jnp
sub
test
sbb
jmp
adc
xor
inc
jmp
sub
scas
mov
push
adc
and
insl
jmp
sbbb
mov
sub
imul
les
dec
lea
mov
cmp
mov
cmp
xchg
mov
inc
push
test
jl
and
jo
sahf
and
cwtl
je
mov
xchg
addr16
jl
sbb
nop
cmp
addb
or
xor
mov
repnz
call
jge
jp
xchg
mov
aas
and
adc
mov
outsb
add
mov
dec
cs
sub
add
insl
rclb
daa
lret
aam
pop
js
add
aaa
mov
inc
jg
pop
rol
fs
push
add
insl
adc
push
stos
mov
test
cmpsl
sub
subb
jae
pop
add
pop
leave
xor
outsb
mov
add
scas
insl
mov
addr16
dec
sti
daa
dec
lods
lods
rcll
scas
xor
xchg
xor
sbb
push
in
int3
or
xchg
add
mov
mov
adc
or
xchg
jl
cmpsb
in
sub
sbb
xor
subl
or
js
xor
or
aaa
sub
das
cmc
add
ja
loopne
xor
loopne
ret
adcb
add
or
mov
adc
lahf
mov
jae
imul
push
inc
inc
lods
pop
sbb
sub
movsb
je
mov
sub
or
fs
rclb
or
lahf
adc
inc
cs
and
dec
aad
xor
sub
movsb
mov
push
clc
pusha
pop
or
xchg
inc
loope
cltd
mov
insb
or
dec
test
loopne
add
test
ficompl
lock
adcb
lea
and
cmp
mov
iret
lock
and
add
mov
lods
je
sub
or
xor
push
xchg
imul
dec
pop
icebp
push
addr16
jecxz
fistpl
adc
mov
sub
int3
mov
mov
push
inc
jbe
or
mov
dec
pop
loopne
sub
cwtl
mov
iret
pop
cmp
push
push
jno
sub
mov
roll
xor
or
inc
enter
aaa
and
dec
or
lods
push
nop
add
mov
cmpsb
inc
adc
add
jae
add
push
mov
cmpsl
and
test
xlat
and
mov
jb
sub
push
xchg
mov
or
pop
push
push
xchg
dec
mov
xor
pushf
mov
adc
add
dec
insb
xchg
mov
adc
cmp
or
add
push
aaa
and
adc
or
lods
shll
aas
lahf
add
xchg
dec
jg
pop
sbb
fucom
push
dec
outsb
call
and
sbb
pop
cmpsb
or
loopne
add
or
cmpsl
aas
ffreep
popf
mov
shlb
or
dec
xor
xor
and
dec
push
shrb
arpl
xchg
add
sub
and
loopne
xor
cmp
xor
cmpl
add
mov
fidivrs
add
out
xchg
sbb
into
jge
cli
cs
add
dec
lcall
addb
push
addl
incl
mov
push
xor
pop
movsl
dec
inc
sub
aad
dec
adc
xor
xor
dec
inc
or
fsubrs
fists
lahf
dec
add
andl
adc
sbb
dec
mov
sub
push
sbb
jl
jnp
cmp
cwtl
or
pop
adc
or
adc
inc
xchg
jmp
push
mov
pop
mov
sbb
loopne
cmp
cmp
push
sbb
cmpsl
cmp
push
sub
movups
inc
ljmp
and
mov
cmp
dec
imul
jmp
mov
mov
mov
les
testl
jle
sub
jns
xchg
mov
lret
sbb
jecxz
xchg
js
shlb
cmp
adc
dec
xchg
push
insl
adc
xchg
sti
mov
inc
sub
roll
push
outsl
mov
sti
cmpsl
ret
xor
fimull
loopne
repnz
sahf
in
inc
daa
movsb
adc
push
dec
loope,pn
or
aam
cmp
xor
push
repnz
mov
das
adc
decl
movsb
movsb
or
jne
loope
test
test
loopne
jbe
xor
pop
and
jle
pop
xchg
shll
loop
in
or
mov
jae
dec
and
xor
int
lret
sub
nop
inc
and
insl
jo
dec
cmp
push
sbb
mov
add
pop
jge
arpl
stos
inc
fnstcw
nop
sub
jns
mov
lea
and
pusha
add
and
adc
pop
xor
push
dec
js
negl
pop
arpl
test
push
pop
popl
mov
inc
inc
dec
movsb
adc
push
and
xchg
adc
filds
lret
xchg
pop
pop
jnp
adc
pusha
push
enter
or
mov
orl
ja
aam
inc
fnstenv
xchg
push
inc
push
push
test
mov
or
rclb
movsb
lret
dec
mov
sti
or
cmpsb
dec
mov
call
xchg
aam
mov
and
lock
adc
inc
and
mov
je
inc
imul
xchg
test
mov
insl
popf
mov
push
js
test
push
in
aam
mov
sub
add
ds
sub
or
push
push
repnz
add
push
and
addr16
push
mov
fisubl
sub
enter
sahf
shl
movsb
je
rclb
aam
leave
and
les
push
jb
jne
inc
mov
cmp
xlat
montmul
cmpsb
inc
insb
mov
push
je
push
add
or
ret
inc
inc
push
or
or
add
insl
mov
or
mov
or
push
gs
test
adc
mov
xor
mov
call
fstl
cmp
popf
dec
dec
aam
push
in
push
aam
mov
inc
in
xchg
je
fsubs
xor
cmc
dec
outsb
pop
cmp
insb
aaa
jmp
inc
or
fcmovbe
add
jmp
sub
dec
mov
rcr
mov
mov
into
xlat
or
or
pop
pop
jl
js
xchg
pop
inc
jmp
adc
xorl
jecxz
lea
inc
repnz
dec
sbb
push
popf
dec
inc
mov
hlt
mov
sub
cmp
or
mov
sbbb
push
inc
push
sub
addr16
or
xor
pop
je
fs
pop
into
mov
insl
sub
add
inc
mov
popl
dec
cmpl
ja
mov
cmp
rcl
sub
inc
mov
movb
dec
add
ret
inc
pop
push
mov
dec
xchg
inc
mov
add
sbb
fmuls
sbb
fcompl
add
js
pop
and
push
adcl
fcmovb
add
mov
adc
js
push
inc
outsb
and
aad
int
outsb
pop
push
lds
and
or
cmpb
inc
pushf
xor
xor
xor
add
int3
cmp
push
and
negb
mov
jne
jbe
or
js
ror
mov
rcr
jns
adc
cwtl
and
mov
add
mov
loope
adc
jae
or
jmp
cmp
inc
out
add
fcompl
xchg
sub
popa
lods
pop
adcb
in
add
xchg
add
add
bound
sub
lods
or
xchg
lahf
inc
dec
jp
and
imul
cld
xchg
mov
cmpsl
and
rorb
xchg
pop
push
gs
into
push
mov
fcoms
xor
xchg
inc
std
add
cs
pop
and
fldt
jbe
push
xchg
and
mov
xchg
push
mov
je
in
arpl
or
inc
xor
stos
add
dec
aas
nop
mov
jmp
dec
cwtl
popa
and
ud0
lock
or
test
pop
xchg
loope
call
add
sub
dec
and
cmp
imul
adc
mov
jb
xchg
or
xor
xchg
cmovns
or
je
jno
test
lcall
push
adc
adc
adc
adc
dec
push
je
or
leave
adc
lock
push
leave
and
inc
xchg
add
dec
pushl
std
mov
int3
cmpl
inc
add
or
xchg
loope
push
jmp
xchg
add
ss
insb
push
test
das
icebp
loopne
inc
inc
cmp
loopne
jbe
pop
in
add
sbbl
mov
test
xchg
addr16
int3
mov
lods
rclb
and
test
cmp
aaa
mov
jnp
andl
icebp
add
mov
mov
jae
mov
imul
inc
mov
idivb
mov
mov
xchg
mov
or
pushw
and
xorb
inc
jmp
mov
arpl
movsl
frstor
mov
or
and
leave
jp
jp
fiaddl
jle
sbb
mov
xor
pop
int
sbb
dec
push
adc
pop
xlat
rcl
xor
enter
mov
inc
pop
mov
int3
inc
inc
mov
fisubrl
pop
xlat
mov
lock
or
pushf
xchg
add
xlat
ss
add
daa
mov
add
or
dec
inc
mov
mov
inc
cmp
xchg
frstor
mov
or
xor
xor
sub
imul
fs
mov
pushf
sahf
push
sub
loopne
loop
neg
adc
xchg
lea
nop
sbb
rorl
sbb
xlat
and
nop
loope
push
pop
add
mov
push
mov
and
sbb
add
or
add
das
mov
sbb
push
sbb
xchg
ret
xor
imul
sbb
enter
movsb
sbb
or
shll
sbb
inc
xchg
and
lock
movb
or
insb
cmp
xchg
cmp
sahf
jge
imul
jle
push
push
int
mov
push
or
idivb
pop
cwtl
dec
push
jp
fadd
or
xchg
in
and
adc
push
cmp
iret
ss
fadds
or
or
adc
add
and
sub
pop
dec
in
push
mov
dec
lcall
imul
push
or
push
add
add
cwtl
and
or
cld
inc
inc
pop
icebp
push
or
xchg
or
cmp
pop
rcrl
orl
add
lea
or
push
movsl
and
xchg
lock
imul
mov
test
pop
jno
insb
in
pop
ficompl
mov
ficomps
lods
daa
cltd
push
pop
pusha
sbb
jg
inc
js
lock
or
pop
add
adc
mov
cmc
movsb
mov
or
xor
or
pop
cltd
pop
lods
xchg
ret
scas
fsub
jno
push
addr16
imul
das
ljmp
hlt
mov
push
rclb
mov
imul
insl
add
loopne
jb
mov
test
rsm
inc
es
fwait
add
xchg
loopne
and
push
roll
adc
int3
int3
jle
xor
shll
adc
rcll
cmp
adc
ss
mov
and
and
in
pop
add
inc
fwait
sub
mov
push
xchg
xor
push
sub
fdivs
aad
lahf
cmpsl
movsw
insb
repnz
add
ds
push
call
es
and
xchg
loopne
xor
dec
lcall
dec
in
outsb
pop
mov
xchg
sub
stos
xlat
fwait
enter
unpcklps
pop
jns
inc
sub
lds
add
stos
js
lods
pushf
or
push
pop
push
and
sub
xor
inc
dec
sub
and
pop
fistps
fwait
les
popf
xchg
push
orb
dec
scas
ljmp
add
xor
sub
popf
pop
sub
subb
nop
jbe
xor
cmpsb
int3
mov
adc
cs
jns
sahf
sbb
lcall
daa
repnz
mov
push
mov
ret
add
xchg
sub
pushl
or
push
mov
mov
imul
mov
push
rolb
mov
mov
mov
scas
mov
jnp
les
mov
sbb
cmp
mov
jno
add
mov
mov
ja
jle
pop
in
and
repz
sbb
in
push
lahf
and
add
lret
mov
lret
pop
adc
lods
in
mov
or
test
dec
adc
cs
mov
sub
lods
cld
or
add
or
mov
dec
sahf
dec
sahf
mov
or
inc
or
xchg
dec
or
xchg
xchg
pop
or
dec
es
in
imul
int3
lahf
add
mov
cmpsl
addl
addr16
scas
fadd
sub
cmp
inc
hlt
xorb
push
stos
xchg
cmpsl
sti
adc
mov
xchg
push
inc
loop
sbb
jge
pop
ret
sub
inc
sbb
into
pop
pushf
nop
cli
mov
jmp
xchg
xor
xor
adc
mov
pushf
clc
sbb
leave
mov
add
lahf
sbb
mov
pushf
shrb
int
mov
rcl
or
mov
xorl
mov
push
clc
push
add
fucomip
add
mov
and
clc
sub
adc
cmp
mov
adc
out
outsl
cmpl
cmp
je
into
int
loopne
pushf
aaa
xor
and
lea
outsl
add
add
sbb
sub
dec
out
mov
imul
pop
jp
xor
mov
or
lahf
int3
daa
or
add
push
das
or
aas
out
int3
insb
bsr
movsb
nop
addr16
mov
push
mov
adc
cs
pop
iret
cwtl
cmp
adc
push
or
into
adc
aas
frstor
xchg
push
jns
dec
rclb
or
and
pop
test
orl
mov
bound
test
into
iret
mov
hlt
or
adc
xorb
jns
mov
sbbl
or
xchg
sbb
add
enter
add
sbb
and
or
xchg
sub
inc
ret
sbb
add
xor
in
and
push
add
add
sbb
insl
call
ret
push
das
xchg
sarl
loopne
loop
cs
inc
xchg
in
inc
push
adc
or
add
loopne
inc
jecxz
mov
xor
daa
mov
mov
je
push
push
or
enter
xlat
xchg
test
jmp
jno
clc
add
orl
mov
in
test
lret
clc
test
or
pop
push
test
int
sub
mov
mov
les
fs
mov
inc
sub
fninit
fildl
fisttps
test
dec
sbb
inc
mov
in
sub
and
in
cs
add
cmpsl
loopne
or
dec
cs
mov
dec
sbb
fidivl
cmc
aaa
mov
hlt
inc
sub
inc
push
iret
loopne
dec
xchg
dec
imul
xchg
pop
pusha
and
mov
shlb
xchg
arpl
int3
int3
out
add
stc
mov
lahf
in
sti
mov
enter
in
loope
jge
in
int
icebp
decb
add
push
push
nop
xor
xchg
loop
inc
fisubrs
sub
add
xchg
add
fisubrl
sub
push
dec
add
mov
sub
js
adc
mov
stos
cmp
push
cmpsl
dec
mov
sbb
test
int3
mov
pop
nop
rcl
outsl
stos
adc
mov
movsb
or
sbb
aaa
cld
ret
or
stos
sahf
mov
mov
mov
pop
push
rcrb
loope
xchg
stos
pop
das
rclb
test
gs
clc
outsb
shlb
gs
ss
or
int
jmp
fists
xor
cld
filds
idivl
aam
fdivl
or
xchg
ret
out
insb
inc
fadds
pusha
jno
test
test
xchg
in
push
mov
fsubrl
mov
out
add
lods
inc
aam
mov
imul
fisttpl
mov
pusha
jmp
xor
ret
jg
pop
jo
mov
pop
es
ss
daa
lret
je
lock
xor
mov
push
cli
pusha
inc
sub
and
cmp
repz
in
shlb
xchg
call
or
xchg
pop
shll
repz
or
mov
add
orb
mov
lods
xchg
jbe
sbb
aaa
xchg
mov
push
cmp
nop
aam
adc
mov
dec
jmp
xchg
shrl
jmp
pop
jg
inc
dec
mov
dec
bound
push
pop
xchg
add
scas
adcb
lret
inc
adc
xchg
push
sub
pxor
adc
adc
push
xchg
scas
xor
sub
mov
add
test
mov
cmp
jo
adc
bound
lahf
cmpsl
popf
fs
push
push
daa
or
xchg
push
jns,pt
lock
jmp
fnsave
aam
adc
inc
dec
imul
push
push
mov
rcll
jb
jb
or
repnz
sbb
pop
or
pushl
push
movsl
dec
ret
pushw
xor
xor
jb
sub
push
sbbb
shrb
jecxz
xchg
mov
cmpsl
cmp
rcll
mov
pop
shlb
add
scas
les
push
xchg
leave
push
lock
pop
xor
inc
sub
cmpsb
fs
xorb
xor
adc
out
aaa
dec
or
mov
imul
jo
das
lock
add
sub
or
cwtl
mov
sbb
push
inc
outsl
or
mov
jge
push
int
inc
in
dec
and
push
shll
inc
push
sub
mov
mov
jp
or
jg
jl
xchg
pop
ljmpw
orl
pop
clc
sbb
pop
xchg
adc
lods
push
and
aaa
mov
outsb
dec
rorb
or
shll
cmpb
mov
les
xchg
add
mov
inc
mov
insl
jnp
test
mov
mov
sub
adc
jns
or
dec
mov
jl
dec
sahf
and
sbb
and
or
and
or
jmp
add
pop
dec
imul
arpl
imul
dec
push
push
push
pop
out
jne
aam
test
push
in
mov
push
cmp
push
xchg
dec
nop
mov
lods
les
dec
fldpi
add
mov
lahf
adc
sbb
mov
out
or
lahf
mov
push
mov
jbe
mov
jg
cwtl
jne
test
pushf
and
int3
sub
cld
cmp
dec
inc
das
xchg
inc
mov
lock
cmp
mov
push
adc
mov
mov
imul
rcl
outsl
nop
add
enter
lsl
push
sahf
clc
int3
hlt
mov
int
sbb
stos
fistpl
pusha
adc
fisttpl
pop
loopne
mov
push
jp
inc
dec
shll
sub
cs
ficompl
sub
and
pop
or
push
sub
dec
lods
sub
pop
rolb
push
lcall
xor
and
sub
int3
push
orl
movsb
test
xchg
cld
pop
or
inc
or
or
and
pop
cltd
addb
lds
sub
push
pop
lock
or
sub
fwait
sub
adc
mov
jmp
add
adc
jnp
inc
xchg
push
push
rcll
or
dec
rolb
dec
mov
jno
mov
sbb
inc
and
jo
or
xchg
aaa
ja
xor
mov
in
cmp
loope,pn
push
sub
push
cmp
push
inc
mov
lock
or
dec
aam
sub
pop
and
xor
push
xchg
iret
pop
mov
sbb
or
adc
mov
xchg
les
imul
mov
nop
sub
repz
add
out
or
and
lods
test
in
rcr
inc
int
or
stc
mov
mov
add
pop
inc
xor
jne
repz
add
or
mov
pop
xchg
jmp
popf
push
mov
dec
or
aam
orb
or
push
and
nop
loope
push
cmp
hlt
and
or
xor
and
lcall
xchg
fstpl
in
jae
sub
popa
add
arpl
cmp
clc
sub
or
fnstenv
testl
xor
int
fsubs
add
hlt
cmp
ret
pushf
cmp
ss
inc
pop
push
inc
repz
pop
das
pop
inc
mov
es
in
arpl
xchg
test
dec
dec
xor
mov
push
mov
fistl
dec
adc
adcb
fs
mov
xorb
imul
shll
int3
movsl
jmp
xor
fists
pop
jbe
fnsave
test
lea
push
and
mov
cmpsl
xorl
pop
das
clc
insb
sbb
cmp
sbb
sbb
nop
ja
outsb
sub
sbb
and
mov
int
imul
push
mov
xchg
sbb
movsl
sub
outsl
pop
jb
and
hlt
pop
jb
pop
jb
orb
and
cmpl
push
hlt
adc
inc
sbbl
sbb
fs
leave
add
jl
inc
lea
in
xchg
and
in
ret
outsl
js
test
and
jb
repnz
call
hlt
iret
repz
inc
xor
pusha
sbb
jb
sbb
sbb
dec
and
jb
pop
cmp
sbb
jb
insb
add
and
sbb
dec
add
nop
add
xchg
add
nop
mov
icebp
adc
pop
rcrl
or
mov
push
cltd
xor
movsl
imul
fisubs
push
dec
pop
push
sub
scas
mov
dec
jae
nop
mov
xor
rcll
and
cmp
mov
push
aad
out
out
pop
shll
dec
adc
cs
shll
mov
shlb
testl
xor
ror
push
arpl
cmpsb
mov
movsb
mov
cmpsb
mov
push
faddl
jmp
adc
bound
pop
subl
push
xchg
adc
ss
aam
ss
enter
das
ss
fcompl
in
cmp
add
lods
loopne
pop
loopne
sub
dec
push
xchg
aaa
shlb
xor
rorb
movsl
and
pop
add
sbb
and
lock
pop
adc
aam
push
mov
mov
sahf
dec
ret
jae
jl
lret
lds
movb
add
repz
or
sbb
enter
xlat
hlt
or
inc
or
clc
inc
dec
add
add
int
jecxz
pop
and
loope
or
cwtl
or
jo
xor
push
out
and
stos
int3
fbstp
dec
adc
mov
adc
addb
pop
sub
push
dec
fisubrs
into
test
nop
adc
adc
fs
jo
jecxz
orl
and
loope
push
adc
adc
mov
and
jmp
jge
dec
sarl
imul
dec
repz
or
inc
hlt
scas
test
inc
in
inc
jo
or
inc
or
dec
add
movsb
or
push
fcompl
mov
mov
cwtl
pusha
movsb
xchg
arpl
cwtl
inc
push
inc
test
loop
movsb
add
and
imull
push
push
and
fdivl
imul
xor
lret
adc
sti
jne
xor
mov
sahf
and
xor
hlt
shrb
or
xor
push
data16
xor
sarb
or
addr16
pop
sbb
in
mov
aaa
pcmpeqd
and
xlat
enter
sahf
or
mov
leave
aaa
jle
ficomps
icebp
push
or
adc
xor
or
pop
push
sti
sub
push
call
jmp
mov
cmp
in
pop
fwait
int3
out
pusha
jo
mov
push
lahf
dec
leave
add
je
mov
lret
dec
pop
and
sbb
mov
sub
or
jnp
repnz
or
inc
repnz
lret
call
outsl
imul
push
sub
inc
jmp
rorb
or
imul
adc
xor
jl
mov
and
or
lea
push
mov
bound
fldenv
and
sarb
mov
in
xchg
mov
out
sbb
ja
add
int3
adc
xchg
mov
ror
and
push
popf
adc
and
inc
add
dec
mov
dec
xchg
push
int3
cmpsb
sbb
lods
std
inc
jg
dec
lds
jb
sbb
mov
sub
pop
jno
enter
adc
test
cmpsb
es
sub
pusha
jo
dec
or
das
pop
mov
testl
cmp
adc
push
dec
dec
push
fs
ret
add
inc
lret
push
xor
sub
sbb
cwtl
ret
shlb
mov
das
mov
push
push
movsb
pop
adc
mov
adc
mov
add
dec
push
fwait
push
mov
movsl
jmp
addl
popa
test
lret
xchg
in
mov
push
xchg
or
add
lret
popf
dec
cwtl
cmp
int3
add
xchg
xor
push
clc
cmp
mov
adc
fcoms
dec
adc
sub
or
das
pop
ret
inc
lods
outsl
dec
add
adc
repz
pop
int3
add
aaa
jle
test
inc
test
or
cli
es
mov
add
or
xchg
popf
in
pop
mov
push
ret
push
adc
inc
movsl
orps
inc
pop
repnz
lds
xor
test
pop
adc
push
addb
cmp
ret
sbb
aas
sbb
dec
inc
or
mov
sti
jl
cmp
sbb
xchg
in
inc
add
xorb
call
or
dec
or
sbb
and
mov
sub
xchg
add
or
les
dec
sub
lret
inc
cltd
out
mov
push
adc
jle
sbb
mov
mov
and
xorb
pop
sub
test
and
enter
pop
pop
mov
dec
xchg
cmp
lods
cmp
in
dec
lods
cmp
cmp
mov
fldcw
lods
sbb
push
or
add
lret
mov
int3
cmp
ljmp
xchg
aam
rorl
stos
lea
movsl
and
in
repz
dec
pop
aaa
add
gs
testb
mov
cmpsb
push
icebp
xor
je
add
mov
add
and
mov
iret
int3
inc
adc
movsl
mov
sub
leave
mov
or
or
loopne
fcmovb
int
pusha
int3
push
jbe
adc
push
data16
popa
or
aad
add
or
add
subl
push
adc
iret
pop
xchg
adc
dec
push
lret
aam
movsb
lods
out
dec
xchg
add
xchg
xchg
or
lea
or
sbbb
das
dec
cmp
sub
in
lods
inc
jne
dec
adc
xchg
test
pop
rorl
xchg
loop
dec
inc
lret
inc
cmp
or
mov
es
insb
xchg
insb
sbb
cmp
mov
and
cwtl
addb
or
bound
xchg
andb
bound
mov
es
jl
and
data16
sbb
xor
scas
leave
dec
push
xor
mov
jb
insl
cld
mov
mov
sbb
add
adc
mov
pop
adc
sbbb
popf
or
push
imul
xor
das
dec
nop
shrb
testb
dec
hlt
stos
sub
into
scas
mov
enter
mov
adc
pop
fldl2t
clc
dec
sbb
mov
adc
pop
jae
pop
or
out
nop
sub
or
inc
ss
std
add
add
nop
xor
add
push
add
jne
shrl
popa
push
ret
push
pop
adc
arpl
test
push
addr16
cmp
inc
mov
hlt
cmp
sbb
popa
cmp
jne
sbb
pop
or
lret
cmp
or
dec
mov
lcall
sbb
xchg
outsl
or
mov
mov
cmc
sub
sbb
push
cmc
pop
cwtl
mov
jo
mov
xchg
aam
loope
pop
sub
cltd
outsl
adc
xlat
sub
popl
push
push
pop
inc
shr
pop
jmp
and
sarl
adc
fadds
outsb
jne
pop
js
cmpsb
addl
xchg
pop
int3
rcrl
inc
mov
lods
mov
inc
and
or
clc
mov
lahf
iret
and
fsubl
sub
or
adc
test
jmp
jne
insb
push
mov
std
ret
mov
add
push
movsb
mov
fs
daa
mov
xchg
mov
pusha
inc
ret
scas
popa
mov
int3
xorl
loopne
mov
add
scas
or
inc
sub
out
xor
add
dec
sarb
imul
xchg
insb
or
test
aas
test
adc
sbb
xor
xlat
mov
outsl
dec
mov
mov
jae
or
xor
push
sarl
shrl
mov
cltd
sbb
pop
and
mov
inc
jnp
inc
pop
sbb
lods
mov
enter
fmuls
sbb
mov
jo
jmp
fs
out
nop
adc
dec
xor
sti
and
mov
or
stos
jmp
xchg
or
in
les
outsb
mov
or
iret
xorb
out
pushf
flds
sub
sbb
ret
pop
fisttps
pop
jg
dec
dec
or
and
dec
dec
adc
sbb
push
js
nop
cltd
insl
push
push
cmp
popa
lahf
fwait
ss
enter
pop
add
imul
pop
push
add
and
ret
adc
and
dec
or
or
or
clc
jne
ds
cmp
jmp
push
cmpl
dec
add
lock
js
mov
cmp
clc
and
add
mov
imul
pop
das
mov
scas
mov
jnp
pop
push
inc
mov
mov
mov
bound
arpl
and
cmp
loopne
jb
mov
adc
pop
pop
pop
iret
movzwl
nop
pop
and
pop
inc
and
insb
shl
clc
loop
movsb
and
or
inc
out
outsl
je
test
mov
push
push
pop
and
stos
dec
mov
dec
in
cmp
imul
mov
dec
mov
push
fisubrs
jmp
cmpsb
inc
push
push
push
cmp
dec
push
add
pop
sbb
xor
dec
add
frstpm(287
addl
aaa
jmp
inc
add
sub
cmp
outsl
xlat
int
inc
add
inc
or
sub
punpcklwd
sarb
inc
dec
sbb
push
sbb
jb
push
push
xor
fwait
pop
sub
sub
mov
and
mov
fmull
xchg
push
stos
mov
adc
shrb
lods
les
or
hlt
push
mov
push
mov
mov
cmp
ja
loope
in
add
iret
dec
add
add
lds
push
jl
fs
js
adc
fs
mov
loopne
lea
mov
sbb
jl
shl
lahf
fdivp
mov
sahf
insl
mov
adc
pusha
pop
xor
insb
aas
add
mov
lea
push
mov
sub
clc
subl
and
xchg
sbb
mov
push
lret
test
mov
jb
fcmovb
add
dec
cmpsb
pop
inc
or
outsl
adc
add
cmp
mov
jno
sub
pop
sbb
jl
xchg
dec
jne
div
in
pop
dec
or
jb
dec
je
jmp
scas
outsl
repnz
ds
adc
sbb
sub
adc
or
fucomi
sbb
add
inc
push
decl
or
dec
xchg
sbb
or
data16
jae
push
pusha
scas
pop
in
pop
push
push
out
dec
add
or
adc
loop
daa
and
insl
adc
je
and
add
rclb
cmpl
inc
fsubrl
das
and
sub
fbld
in
js
lock
add
dec
push
mov
ss
shl
or
clc
add
rolb
cli
add
subb
sbb
add
icebp
inc
out
mov
dec
arpl
push
push
mov
or
push
jmp
dec
pop
mov
jne
dec
cmp
adc
call
jmp
add
ret
add
nop
shlb
mov
rcrb
aas
mov
pop
push
rcll
add
gs
dec
mov
fwait
pop
xchg
push
sub
fistps
add
push
mov
in
xchg
push
adc
leave
rorb
cmpsl
xlat
les
inc
jne
aaa
mov
lods
dec
dec
pop
pop
sbb
add
and
mov
inc
sti
add
jge
xchg
in
cmp
dec
and
inc
dec
in
es
xor
xor
mov
dec
iret
cwtl
sbb
sbb
and
lret
addl
inc
or
or
inc
or
aaa
mov
mov
cld
add
mov
push
jg
arpl
and
or
out
adc
aad
insb
or
stos
sahf
mov
arpl
pop
inc
in
in
mov
mov
xor
sub
push
mov
mov
and
ret
sbbb
mov
je
add
outsb
xchg
xor
add
sbb
push
push
or
mov
adc
filds
movsb
ret
loop
pop
xor
loopne
in
mov
push
mov
clc
sub
add
push
daa
shll
push
pop
mov
jno
outsl
or
mov
enter
pop
xchg
sbb
subl
lock
sub
xor
pop
ret
fdivrs
or
rorl
mov
xchg
imul
and
cwtl
out
in
xchg
aaa
add
in
loop
xchg
or
adc
lods
rolb
adc
and
enter
mov
jecxz
or
cmp
mov
aas
xchg
movsl
jns
loopne
dec
cmpsl
cld
clc
sub
xchg
add
roll
adc
clc
bound
add
add
sub
xor
and
or
and
pop
pop
inc
sub
sub
sbb
xlat
orl
daa
and
add
add
mov
imul
jns
nop
pop
or
dec
sub
adc
inc
test
cmpsb
mov
mov
and
mov
xchg
and
and
in
pushf
pop
enter
shl
mov
xorb
pop
mov
rorb
or
inc
or
and
lods
loopne
or
push
dec
push
inc
mov
in
and
adc
loop
sbb
mov
xchg
or
add
dec
out
xor
xchg
in
pushf
enter
add
subl
and
outsl
adc
es
and
adc
int
data16
adc
add
inc
shl
jmp
jmp
mov
inc
jne
push
jo
nop
insl
jecxz
xor
out
daa
aam
adc
call
fwait
das
add
sbb
std
push
imul
aas
push
mov
fs
and
fwait
cmpsl
and
loope
fnstcw
cmpl
jl
test
fs
push
ret
adc
pop
je
pop
or
and
sti
mov
jge
int3
cmp
in
repnz
mov
xor
aaa
mov
aaa
inc
or
and
cmp
adc
popf
mov
rcrb
repnz
lock
mov
fld
add
lock
inc
lock
stos
add
pop
push
pop
push
js
sbb
and
testb
jl
inc
stc
aaa
add
push
or
push
mov
add
dec
out
ljmp
mov
rcl
cltd
cmc
dec
dec
push
mov
jl
stc
in
xor
add
cli
das
aam
adc
sbb
cmp
mov
das
xchg
dec
add
ja
cmpl
loopne
cmp
sub
inc
bound
xor
xchg
add
out
pop
pop
and
sub
loope
adc
fldl
push
sbb
jbe
cmpsb
inc
fldl
dec
dec
data16
ljmp
sbb
push
jmp
and
nop
in
pop
sbb
push
or
test
inc
jl
ret
sub
xchg
ljmp
jg
adc
imul
mov
mov
mov
dec
lcall
adc
arpl
out
inc
aaa
sbb
test
mov
xchg
testb
and
sbb
rcrl
rclb
dec
mov
jne
adc
or
cltd
inc
pusha
mov
or
xor
mov
jne
adc
les
int3
xor
jecxz
imull
push
xchg
or
xor
push
add
ljmp
xlat
call
arpl
mov
or
push
add
sbb
mov
repz
xor
xor
icebp
movsb
int3
push
ret
and
movb
das
and
dec
insb
mov
mov
xor
nop
adc
dec
pop
push
mov
or
pop
dec
push
fs
mov
adc
or
leave
mov
movsb
sbb
adc
xchg
add
nop
xchg
push
adc
rorb
mov
test
popf
inc
xchg
xchg
in
pushf
adc
scas
xchg
jo
fisttpl
fmuls
movb
lock
mov
lret
push
cmpsl
popa
or
push
in
mov
add
rolb
test
mov
mov
xchg
add
xor
dec
jge
add
mov
inc
hlt
or
sbb
hlt
cs
les
cmp
cmp
movl
test
dec
icebp
jge
fistpl
cmc
or
cwtl
push
rclb
arpl
push
cld
jnp
pop
lret
setnp
xor
cli
inc
sahf
fisubrl
pop
or
sub
or
sbb
nop
or
lea
inc
inc
nop
xlat
incl
xchg
or
xchg
mov
pusha
add
pop
dec
loopne
mov
call
cmpsl
aam
inc
pusha
and
mull
jo
das
rclb
dec
ljmp
ret
mov
cmp
pop
xor
sar
sbb
not
xchg
lock
and
mov
sbbb
les
dec
daa
inc
mov
add
add
jl
adc
gs
into
or
pop
inc
inc
add
cmp
push
fwait
inc
sub
lahf
fadds
inc
pop
add
jmp
flds
cs
fcmovnu
stc
mov
add
inc
add
inc
incb
rol
dec
scas
loopne
inc
lahf
or
add
xlat
and
mov
jnp
mov
jne
add
test
cmp
lea
rclb
cwtl
loopne
mov
cli
or
push
inc
pop
pop
imul
in
movl
insl
sbb
dec
sbb
and
adc
dec
clc
sub
pop
cmp
sbb
sub
leave
lock
xor
mov
pop
inc
outsb
xor
push
lea
adc
out
test
adc
rcpps
test
popa
jo
inc
xchg
bound
cmp
jne
add
push
sbb
outsb
ret
pop
xchg
outsl
jne
jne
mov
gs
cld
adc
inc
lahf
inc
mov
pop
fwait
pop
ja
sbb
enter
xchg
outsw
out
xchg
fidivs
mov
push
inc
test
push
icebp
add
add
push
or
jl
pushf
or
or
sbb
or
cs
xchg
lcall
or
mov
adc
flds
xchg
sub
fnstsw
out
rcll
add
rcrb
cmpsl
ret
add
pop
fadds
insb
jl
sbb
iret
xchg
leave
sbb
filds
mov
xchg
hlt
loopne
cmc
out
dec
shll
repnz
es
lcall
jne
adc
clc
insb
fimuls
cli
or
pop
mov
inc
sahf
int3
sbb
inc
pop
mov
mov
add
mov
mov
popa
dec
or
adc
arpl
insl
mov
or
shr
jl
mov
sbb
and
inc
sbb
adc
xchg
add
mov
sub
and
push
dec
add
add
mov
pop
lods
adc
and
in
xbegin
popa
and
je
push
push
or
add
adc
cmpsb
pop
adcl
pop
jae
enter
not
addl
add
fld
or
jnp
fs
jno
dec
mov
in
mov
aaa
add
in
std
andb
sub
enter
mov
mov
mov
xor
ret
mov
jno
ficompl
mov
enter
sar
adc
fmuls
addl
or
push
shll
push
fildl
aas
sti
imulb
add
pop
sbb
add
outsl
mov
test
adc
fs
mov
jbe
or
add
ret
nop
or
in
xor
add
orl
mov
add
sbb
addr16
or
inc
mov
arpl
add
add
mov
adc
or
sub
adc
and
loope
cmp
je
arpl
outsl
pop
sbb
or
testl
das
hlt
push
adc
add
ss
and
and
push
adc
inc
xchg
dec
mov
outsl
stc
test
xor
roll
cltd
pop
addr16
adc
push
jnp
stc
movsb
or
push
leave
inc
stc
movsb
or
pop
shrb
lock
cli
xchg
pop
lahf
push
mov
iret
dec
sbb
lahf
mov
adc
rclb
rcrb
roll
popa
jns
or
in
rorl
loope
scas
xchg
adc
pop
mov
jno
jns
data16
and
or
int
cmp
stc
cmp
or
dec
or
xchg
push
pop
loop
dec
push
or
xor
and
sub
xor
adc
cmp
mov
cmp
adc
jo
aad
jecxz
add
clc
push
xor
and
cld
addb
nop
rorb
enter
fiaddl
sub
push
js
mov
cmpsl
and
add
add
add
inc
decb
add
add
add
push
movsb
push
insl
fcoml
sbb
and
inc
lcall
in
add
in
cmp
jecxz
repnz
add
inc
pusha
fsubrs
das
xlat
pop
scas
pop
adc
dec
pop
xchg
mov
clc
dec
or
add
imul
add
ret
pop
lcall
lret
inc
pcmpgtb
cs
mov
jo
mov
sub
orb
bound
ret
xor
aam
push
inc
pop
arpl
push
and
cmp
repz
adc
sub
mov
nop
out
add
dec
add
adc
mov
inc
pop
adc
xor
push
jae
inc
xchg
add
jo
insb
iret
adc
frstor
add
xlat
scas
sub
dec
pusha
sub
cmpsb
fdivrs
adc
arpl
dec
sar
test
aaa
push
add
mov
xor
mov
mov
inc
or
aas
ljmp
push
data16
add
cmp
rcr
pusha
imul
clc
mov
push
dec
adc
lea
sub
insl
adc
push
lock
inc
cli
fsts
xchg
dec
lea
sub
pop
inc
jns
cwtl
and
scas
dec
popf
shll
jl
fsubr
fimull
leave
mov
imul
stc
ficoml
pushf
aas
ds
cld
mov
add
mov
outsl
push
add
cmp
push
jbe,pt
pop
and
add
mov
sarl
dec
and
xorl
inc
rcll
clc
push
popa
lods
fld
sbb
sarl
test
sub
jb
xor
mov
and
add
inc
cmp
cli
add
cmp
mov
pop
xchg
shrb
mov
les
push
adc
sbb
rorb
cmp
and
push
fstps
xchg
jbe
ror
mov
dec
mov
xlat
dec
bnd
or
out
sbb
pop
add
adc
sbb
pop
or
push
ja
xor
fistps
xorl
mov
movsb
clc
arpl
pop
dec
or
addb
daa
call
xchg
push
pop
sub
pushf
loopne
and
push
cwtl
je
push
cmp
pop
or
imul
and
add
mov
sub
lds
inc
jne
imul
sbb
dec
cmpsl
adc
paddusb
xor
mov
add
dec
xchg
add
leave
or
dec
shlb
ds
push
dec
or
mov
inc
popf
cmp
sub
aaa
inc
ret
cmp
and
outsl
rolb
pop
dec
sahf
or
mov
and
insb
imul
imul
test
cltd
add
out
test
repz
test
push
ja
xchg
adc
mov
adc
and
inc
and
movb
fiadds
repz
push
inc
outsl
aas
xor
adc
dec
adc
or
adc
sub
lret
sub
out
adc
sub
cmc
nop
fchs
ret
xchg
add
inc
roll
and
les
sbbl
dec
ja
mov
inc
popa
enter
test
or
outsl
jno
and
lahf
jecxz
adc
inc
adc
insl
push
cmpsl
aaa
ret
inc
inc
ds
mov
cmp
mov
mov
daa
sub
jecxz
int3
dec
out
fcompp
arpl
cltd
push
ja
mov
dec
aam
shlb
shll
in
mov
nop
daa
add
das
mov
mov
lods
mov
mov
out
repz
pop
mov
add
dec
insb
add
pop
xor
dec
in
add
push
mov
dec
sbb
jecxz
rorl
leave
push
add
subb
dec
fstps
inc
inc
jns
pop
imul
adc
sbb
push
dec
ret
or
pop
cmpl
jbe
push
jl
in
push
xor
fadds
mov
out
ret
data16
cmp
ret
or
aas
cmp
cmp
dec
jl
sbb
lret
es
and
adc
out
xchg
mov
mov
dec
add
xor
hlt
mov
mov
add
inc
or
or
sub
push
mov
inc
int3
inc
fimuls
cmp
loop
imul
dec
add
add
lea
and
xchg
dec
outsb
fdivl
jecxz
dec
cld
sti
scas
and
sub
and
sub
out
filds
cmp
gs
leave
jg
dec
imul
pop
push
imul
lahf
ljmp
jle
and
mov
int
xchg
and
incl
pop
pop
inc
nop
dec
jg
je
andl
test
cmp
mov
dec
je
or
and
inc
pop
add
adc
pop
xorl
and
cmpsb
inc
add
pop
shlb
or
jnp
movb
jg
add
mov
ljmp
mov
cmp
je
idiv
fcmovb
out
movsb
jne
addl
xor
mov
pop
mov
jge
ficomps
jge
in
jo
or
inc
ret
mov
dec
mov
mov
mov
aas
fdivrl
add
adc
lea
jo
mulb
mov
rorb
testb
jb
jge
cmp
sbb
push
push
popf
cmp
push
xchg
jl
fmuls
add
xor
ret
cmp
jle
cmovnp
cmp
or
ret
jmp
ret
sbb
loopne
and
xchg
mov
std
mov
or
jl
dec
xor
cmp
mov
rorb
add
flds
ret
lret
add
pop
xor
aas
mov
jle
aaa
jle
push
test
test
add
mov
adcl
adc
sarb
jo
jns
sub
subb
adc
call
cli
es
inc
sub
add
cltd
mov
shll
sbbl
fmul
orb
rcrl
jne
sub
and
or
inc
mov
sub
sbb
push
jne
jmp
hlt
and
push
loope
mov
fnstenv
and
push
lahf
inc
jb
jne
adc
out
into
mov
jl
repz
push
xchg
gs
add
inc
add
adc
xor
cltd
ljmp
xor
sbb
cmp
xchg
push
scas
leave
test
aaa
jl
or
xchg
or
jae
pop
jne
xchg
add
jg
imul
mov
dec
inc
testb
in
pop
mov
iret
jnp
inc
sbb
xchg
mov
mov
call
mov
mov
push
lods
jb
add
sar
lea
or
jge
pop
lahf
ret
test
mov
add
sbb
or
inc
test
mov
and
mov
or
add
or
add
aaa
movsb
into
xchg
push
in
inc
mov
sti
jecxz
mov
pop
push
enter
sbb
std
adc
jmp
and
inc
dec
cltd
int3
lret
mov
inc
add
and
push
dec
aad
in
or
mov
aaa
pop
and
pop
cmp
jns
or
rcrl
loop
cmp
fstps
aaa
test
xor
pop
pop
movsl
sbbl
add
sbb
and
push
inc
mov
and
mov
cmpsl
add
mov
xor
add
jg
inc
into
jmp
inc
sbb
pop
dec
repz
lea
add
add
leave
pop
fiaddl
stc
sbb
icebp
sbb
add
pop
sub
fimull
or
pop
mov
cmpl
lock
test
ds
pop
and
iret
add
mov
cs
jne
aaa
push
mov
cmp
add
jne
mov
pop
adc
add
clc
sub
add
clc
movsl
add
cmp
push
outsb
data16
push
adc
jmp
cld
xor
cltd
stc
sub
add
adc
inc
xchg
inc
xchg
insl
pusha
push
dec
mov
stos
fbld
xor
jne
dec
mov
repz
out
popf
sbbb
fwait
xorb
sbb
xchg
mov
iret
and
dec
dec
push
mov
cmp
popf
nop
lcall
je
add
add
mov
es
mov
pop
cmp
or
shll
and
fs
jle
loope
inc
pop
adc
sbb
push
nop
shll
dec
push
test
sarl
mov
pop
stos
rcll
stc
fcomps
add
xchg
popa
fs
inc
mov
pop
stc
outsl
call
orb
aam
jmp
pop
pop
xchg
jmp
mov
add
andl
add
xor
loopne
jle
and
xchg
inc
push
adc
pop
sub
hlt
jmp
and
mov
jno
cmp
pop
mov
add
push
loopne
jne
in
inc
sti
jne
nop
insb
addb
arpl
out
push
enter
and
jne
xor
repnz
arpl
iret
lret
adc
jae
push
ss
and
dec
push
fidivl
fisttpl
push
sbb
je
ss
mov
and
and
sub
or
mov
mov
jmp
iret
cmp
cmp
and
push
aaa
add
pop
test
dec
mov
jmp
pop
jl
add
lcall
sahf
sub
or
ret
adc
add
mov
dec
or
mov
popa
cmp
outsl
repnz
stos
xor
xor
nop
nop
movsb
inc
cmp
push
or
push
nop
adc
js
into
gs
push
xor
push
sbb
jo
rorl
or
sbb
sti
push
jg
je
mov
jb
or
mov
je
cmpsl
add
psubb
pop
add
dec
jmp
addr16
es
lock
jae
mov
and
movzwl
jl
aas
and
adc
mov
pop
shl
sti
negb
filds
ret
mov
fwait
xchg
jbe
cmp
dec
pop
cs
pop
jno
sbb
pop
or
adcl
js
push
arpl
inc
jg
test
adc
add
pop
aad
rorl
cmp
mov
adc
or
sub
xor
push
scas
add
xor
ret
add
lea
pop
test
insl
push
js
int
xchg
xor
jl
sub
adc
pop
push
pop
inc
mov
and
adc
sub
jg
pushf
lret
shll
add
add
out
adc
imul
cmp
and
mov
shl
popa
lock
or
add
mov
pop
iret
out
ret
pop
loopne
pop
jno
cmp
jmp
cmp
je
push
mov
push
xchg
pop
push
mov
pop
inc
inc
lahf
push
loopne
inc
out
leave
or
add
mov
cmp
or
addl
testb
incb
insl
bound
loop
cmp
js
stos
dec
imul
icebp
jno
sbbb
mov
add
adc
roll
lfs
adc
inc
adc
mov
add
loop
mov
and
in
jns
and
pop
or
ss
loopne
inc
jge
mov
push
lret
out
dec
sbb
xchg
ret
xchg
lahf
dec
xchg
push
xchg
outsl
imul
das
fisubrl
popf
sti
push
jne
sub
jo
or
sub
cmpsl
addr16
out
lret
idivl
into
lcall
mov
repz
cmp
sti
sub
jb
or
jb
add
adc
imul
push
clc
adc
add
adcb
lock
dec
or
pop
dec
mov
inc
inc
jecxz
std
loopne
mov
insb
push
inc
or
je
or
sbb
adc
pop
pusha
fisttpl
jmp
out
push
adc
jmp
and
mov
es
sti
sti
int
repnz
pop
adc
add
and
or
xchg
or
pop
popf
push
dec
jne
insb
movsb
jns
arpl
mov
inc
or
or
or
fisubrs
add
push
mov
bound
xor
jnp
out
push
cs
loop
jecxz
pop
jne
sub
dec
idivl
lea
and
sbb
adc
call
push
nop
mov
loope
ja
movsl
jae
das
mov
bnd
je
or
push
pop
je
pusha
sbb
xor
jnp
jne
or
arpl
sub
sbb
call
adc
jmp
sbb
pop
stos
xchg
adc
pusha
sbb
and
sbb
enter
int
loopne
and
cli
sub
loopne
xchg
lods
adc
incb
test
sarl
push
or
pop
and
lahf
xchg
movsb
insb
or
pop
add
push
ja
in
and
lods
enter
les
dec
shll
js
xor
je
cmpsl
rclb
sahf
pop
std
clc
mov
shll
jb
subb
shll
jmp
stos
das
dec
mov
cmc
cmp
push
or
push
or
jl
inc
mov
shlb
leave
sub
inc
add
dec
sbb
mov
inc
out
in
push
mov
xor
insb
sbb
stos
pop
adc
pop
or
mov
xor
popa
sahf
cli
mov
lret
lret
sti
add
cmp
jbe
ja
push
hlt
dec
clc
inc
mov
aas
rcrl
repnz
ret
scas
pop
jge
sub
cwtl
ljmp
inc
or
add
xor
dec
nop
movl
cmp
in
mov
adc
push
push
aam
adcl
loopne
jg
inc
mov
inc
add
inc
xchg
push
rolb
xchg
movb
hlt
or
jnp
jmp
movsl
cld
roll
adc
lea
test
lret
imul
adc
adc
stc
or
roll
add
add
sbb
push
mov
je
and
ret
or
push
inc
leave
dec
dec
mov
or
test
jb
dec
mov
xchg
push
add
pop
or
xor
dec
inc
jno
push
sar
mov
fimull
incl
pop
sbb
sti
pop
cmpsl
test
sbb
movb
push
pop
push
add
add
sbbb
out
sub
mov
pop
dec
add
pop
mov
rolb
loopne
les
in
repz
pop
and
clc
jge
jg
or
add
ds
inc
mov
cwtl
mov
add
cmp
jge
neg
jne
inc
pop
jae
push
sbb
lret
fistpll
inc
mov
inc
test
mov
mov
shr
mov
in
mov
divl
mov
jne
inc
xchg
dec
push
or
sbb
mov
ficoml
inc
data16
int3
les
lock
push
or
dec
or
popa
jne
cmp
xchg
and
dec
js
pop
loopne
mov
push
ret
std
push
jbe
sub
cs
or
add
ds
xchg
cltd
push
inc
push
call
pop
lret
movsb
mov
outsl
fcomp
dec
xor
outsb
lret
and
call
add
data16
imul
outsl
mov
sbb
mov
push
mov
adc
or
movsb
add
inc
jae
xor
popf
loope
mov
data16
out
cmp
sbb
mov
jne
push
pop
pop
push
jbe
int3
shl
fnstsw
and
xchg
and
adc
pop
iret
cmp
push
and
rolb
inc
mov
shl
out
jmp
pop
mov
hlt
movl
sub
jge
lret
sbb
loope
mov
pusha
pop
mov
cs
add
dec
ret
popa
shll
adc
push
pop
leave
test
xchg
mov
sbb
or
push
pop
rol
jne
jg
add
orb
and
iret
pop
cld
adc
sar
in
sbb
lahf
add
sbb
or
mov
or
or
jmp
mov
rorb
pop
mov
rcr
and
dec
loop
gs
jo
rcrl
faddl
xchg
push
mov
js
push
mov
jle
mov
popa
mov
mov
mov
mov
loop
mov
data16
adc
sarl
int
loop
jle
cmp
jl
push
cmp
ret
adc
cs
jge
add
xor
outsb
xchg
mov
adc
push
cli
push
not
shll
lods
mull
jecxz
cmpsb
outsb
cmc
scas
mov
push
push
scas
call
push
cmpsl
sahf
add
shl
popa
add
add
sti
push
in
inc
call
cmpsl
cmp
push
inc
xor
cmp
shlb
and
std
and
mov
shll
jge
stc
add
pop
adc
subb
test
and
sbb
pop
adc
sahf
dec
add
sbb
rorb
pop
clc
aad
sbb
dec
mov
jns
mov
or
add
jmp
enter
sub
mov
or
insl
add
pop
mov
jecxz
jb
pop
fcmove
dec
or
inc
add
dec
add
or
jns
lds
dec
xchg
cmp
repnz
push
mov
or
enter
jg
decl
dec
xlat
imul
add
jno
in
popa
dec
or
nop
add
nop
add
push
ds
push
sbb
cmp
adc
imul
je
sub
nop
sbbb
loopne
repnz
adc
and
wrmsr
je
cmp
mov
adc
and
adc
out
add
ja
or
add
xchg
arpl
adc
push
cld
push
pop
ja
jmp
and
and
aas
add
add
sub
jmp
xchg
xor
sarl
jmp
lock
inc
xor
stc
insl
rcrb
push
inc
pop
cmp
push
adc
inc
inc
in
imul
loopne
inc
in
cmp
jg
or
push
push
cmp
xor
mov
jg
or
push
les
es
jmp
sbb
pop
clc
mov
or
test
clc
cs
inc
cs
clc
clc
add
stos
dec
xchg
add
stos
in
test
pop
and
and
adc
neg
mov
inc
mov
test
xchg
ds
je
dec
shlb
bndldx
clc
sub
jmp
add
inc
clc
cmp
sahf
jb
stc
jb
cmc
jae
push
das
lds
pop
bound
and
pusha
push
mov
mov
add
cwtl
in
daa
jmp
and
je
push
xor
or
int3
adcw
dec
pop
cltd
lea
divb
in
jo
or
jno
sbb
orb
or
pop
in
and
dec
loop
test
inc
pop
in
mov
sbb
adc
mov
mov
xor
jne
add
ss
mov
and
inc
mov
jne
xor
fsts
adc
jnp
xor
dec
fdivrs
int3
add
hlt
add
sub
pusha
adc
sarb
or
into
subb
icebp
push
test
aas
test
add
inc
in
push
adc
jns
lods
mov
xor
fildll
sub
in
push
cmp
add
mov
lods
ret
mov
in
dec
nop
jne
xchg
pop
fidivrs
ret
cmp
push
test
bound
cmp
mov
sub
mov
fsubrl
sbb
inc
adc
push
shll
mov
pushl
jne
lods
dec
inc
jne
loope
xchg
pop
mov
test
add
pop
jp
cmpsb
andl
pusha
pop
fcompl
push
mov
pop
sub
cmp
andb
sub
cld
pop
jle
sub
je
fistpll
or
dec
mov
int
jmp
mov
nop
aas
lea
insl
sub
out
imul
mov
mov
add
and
and
or
inc
in
lcall
fwait
jp
aas
xor
nop
stc
cmp
jbe
and
mov
push
and
cwtl
cmp
mov
dec
out
inc
cwtl
mov
mov
cmp
push
push
dec
dec
cwtl
mov
inc
sahf
dec
enter
add
add
pop
jmp
xchg
jl
test
lea
test
cmp
fidivrs
loop
shlb
cli
adc
cmp
sub
popa
pop
mov
jp
and
jne
out
or
in
adc
lahf
adc
and
xor
sub
dec
cmp
pop
in
nop
lret
add
add
pop
jg
insl
mov
add
loope
or
fwait
out
ljmp
and
sbb
test
mov
ss
cmp
or
xchg
dec
xor
pop
mov
mov
mov
cmp
into
inc
add
cli
mov
dec
push
aaa
repnz
adc
mov
aam
push
pop
dec
push
rcl
movsb
fs
mov
push
sbb
sbb
push
mov
frstor
enter
js
rcrb
nop
pushf
add
pinsrw
or
arpl
push
jns
testb
mov
add
and
adc
je
sbb
sub
cwtl
add
mov
sbb
sub
imul
mov
add
mov
add
insl
lds
pop
repnz
loopne
repnz
and
xchg
cmpsl
sub
or
push
cld
es
and
xor
inc
mov
mov
mov
inc
popa
mov
dec
enter
hlt
add
push
outsb
pop
cmpsl
push
incl
push
add
push
je
fiadds
ljmp
jl
xchg
or
cmp
cmp
js
bound
sbb
cmp
outsl
ljmp
incl
loopne
or
movsb
and
and
idivb
fistps
add
outsb
ja
or
sbb
cmp
cmp
inc
cli
shl
out
mov
pop
xor
lea
sbb
pop
xchg
and
or
dec
lahf
cmp
lea
cmp
or
cwtl
iret
clc
incl
in
xchg
sarl
adc
mov
fidivl
js
shrb
insl
sub
add
mov
jecxz
icebp
addb
adc
fldenv
pop
add
jno
pop
stos
icebp
xor
xor
cmp
fsts
mov
out
inc
loop
mov
adc
push
add
inc
imul
mov
pop
mov
add
xor
xor
scas
adc
jae
ljmp
out
lock
pop
cmp
cwtl
inc
cmp
pushf
jecxz
cltd
mov
mov
add
cmp
cmp
ret
test
cmp
sbb
insb
jae
sbb
xchg
xchg
xorl
or
cwtl
dec
sbb
xor
or
js
xchg
dec
pushf
dec
and
add
sbb
inc
push
or
push
shl
fstps
fbld
inc
or
inc
call
in
inc
imul
or
pop
jge
loope
fcmovnu
mov
shlb
adc
cmp
or
negl
outsb
scas
dec
scas
movsl
in
ret
jmp
and
gs
daa
daa
out
jg
adc
inc
push
pushf
inc
xchg
add
and
xchg
nop
add
not
or
mov
jmp
jg
fs
and
sub
jno
fdivrl
fiadds
mov
sub
pop
or
outsb
xor
or
mov
mov
cwtl
and
sbb
sbb
mov
je
iret
sahf
add
cmc
shlb
dec
sahf
testb
push
push
pop
push
adc
cli
in
push
inc
sbb
jg
arpl
sbb
add
inc
jl
jge
add
xor
daa
leave
xlat
cmp
add
dec
sbb
test
cmpsl
out
add
pop
xchg
adc
sbb
test
dec
cmp
pop
xor
cmp
xor
push
sub
mov
push
push
mov
insb
or
mov
dec
inc
adc
add
add
popa
mov
push
mov
fwait
sub
rcrb
cmpsl
lahf
daa
or
cmp
and
shll
lret
mov
adc
cmp
orb
ja
ss
adc
xor
mov
cs
enter
clc
jo
sbb
mov
rep
mov
sbb
adc
inc
pop
aas
test
mov
clc
xchg
pop
mov
adc
add
mov
in
sti
movb
add
add
out
or
add
add
jb
xchg
pop
adc
pop
mov
stos
cld
cmp
dec
je
sbb
out
arpl
or
arpl
xorl
cltd
adc
jmp
mov
add
inc
pop
lsl
out
iret
or
orb
push
push
xor
push
jg
adcl
add
inc
push
and
lcall
or
sbbb
and
add
sbbl
jns
das
add
jmp
jg
jne
jb
jb
mov
js
into
adc
out
pop
mov
xchg
movb
mov
pusha
ror
sti
pop
adc
in
push
xor
jb
in
sub
je
jmp
sub
jb
cmp
adc
nop
sbbl
pop
push
or
outsb
dec
test
adc
sub
xor
sbb
lock
push
cmp
adcb
xchg
sbb
or
pop
jno
cmp
in
rorb
mov
xchg
neg
mov
adc
add
add
mov
cmp
nop
pop
testb
scas
cmp
mov
adc
pop
mov
dec
mov
pop
fadds
add
pop
or
lcall
je
xor
filds
or
jecxz
jecxz
inc
mov
out
insl
negl
mov
jbe
mov
stos
clc
cmp
stos
jecxz
sub
jae
mov
adc
adc
add
push
orl
mov
xlat
cmp
push
je
rclb
mov
test
fistps
pop
jo
andb
aas
xor
insb
inc
insl
add
jmp
or
or
mov
in
outsb
shlb
or
fildl
fldl
rcl
loop
fiaddl
adc
test
xchg
loop
push
sbb
vmread
inc
les
fcomi
inc
bound
or
cmp
pop
sub
jle
adc
arpl
les
add
push
mov
nop
sub
mov
xchg
pop
sahf
or
lret
adc
ret
es
xor
hlt
cmp
ljmp
in
outsb
sub
out
push
decl
dec
ja
inc
cmpsb
idivl
or
cmp
cmp
jno
je
stos
dec
xchg
mov
jg
add
inc
mov
add
sub
add
int
dec
ret
aas
or
cmpl
fdiv
or
std
jb
adc
xchg
outsl
cmp
out
iret
dec
outsb
in
shl
aam
ja
mov
outsb
ja
pop
roll
jbe
mov
jb
inc
jmp
cmp
jbe
jne
shrl
add
dec
pop
sub
cs
and
rclb
aad
repnz
or
or
mull
mov
stc
shrl
push
arpl
push
lea
xchg
cmp
mov
sbb
sarl
xlat
shlb
test
push
mov
enter
ja
lods
push
mov
jb
daa
push
cmp
inc
jne
mov
add
mov
cmp
cmp
jne
jns
add
add
ja
xor
ja
push
iret
test
jg
stc
pop
push
ja
jg
xchg
add
js
push
sahf
mov
iret
or
js,pt
les
je
xlat
add
jmp
dec
xchg
movsl
stc
xchg
mov
shl
test
sar
add
cmp
pusha
cmp
aas
cmp
pop
popf
xor
xor
push
inc
xchg
andl
inc
in
mov
test
adc
pop
xor
out
mov
jl
cmp
mov
shlb
pushl
mov
add
orb
ror
daa
xor
dec
or
adc
push
inc
mov
push
mov
pop
fnstsw
xchg
sub
add
test
lea
sub
mov
cs
sub
andb
push
clc
pusha
and
cmp
subl
add
add
mov
dec
inc
sbb
inc
lret
sub
and
call
and
fistps
mov
mov
mov
mov
push
or
add
and
fistpll
xlat
xor
incl
dec
icebp
dec
loop
add
pop
inc
subl
dec
push
dec
mov
mov
sbb
loopne
and
icebp
or
pusha
inc
test
push
mov
mov
jo
orb
mov
call
sub
leave
pop
shl
cmp
cmp
pop
xchg
loope
insl
jmp
jo
pushf
pop
dec
aam
int3
xor
xchg
int3
arpl
add
movsl
add
pop
fs
nop
movsb
and
push
jmp
shl
sub
inc
loope
adc
dec
fadds
mov
fdivl
nop
mov
sbb
nop
and
add
pop
testb
neg
fists
or
sarb
fisttpl
or
js
loope
loop
and
stc
loop
insb
or
inc
jne
inc
lods
mov
cmp
add
xor
lret
sub
dec
jle
mov
pop
fwait
les
xlat
dec
or
dec
jecxz
shl
inc
cmovle
arpl
inc
lods
adc
mov
pushf
sub
jbe
imul
mov
pop
sbb
or
test
push
jne
jne
jo
inc
or
add
mov
add
repnz
add
push
jmp
mov
cmpsb
in
xchg
lret
push
mov
flds
fnsave
pop
in
rcl
jmp
iret
pop
mov
mov
sbb
jne
int
sub
dec
cmpsb
jbe
stos
gs
es
stc
jae
lcall
nop
xor
push
add
mov
outsb
add
pusha
jno
jl
testl
or
dec
fldl
test
in
add
sarb
pop
and
mov
add
pop
or
popa
inc
xor
jne
mov
mov
adc
push
and
and
ss
outsl
and
imul
addr16
pop
jo
dec
inc
and
int3
rorl
xchg
dec
xchg
cld
sarb
ds
popf
test
add
nop
mov
int
sar
push
call
dec
test
daa
xorl
pop
mov
je
mov
xor
push
inc
mov
pop
fnstenv
movb
cmp
sarl
sar
adc
insl
ss
or
push
aam
inc
dec
test
imul
rol
and
jbe
or
mov
dec
sahf
gs
in
repnz
and
and
sbb
xor
jo
js
aaa
das
loop
push
jmp
and
inc
xorb
add
ds
not
jl
lods
sbb
dec
je
jne
je
dec
or
xchg
push
xor
push
push
mov
lcall
push
ds
mov
mov
fiaddl
add
or
enter
push
in
dec
or
fs
xor
jno
and
add
int3
and
xchg
iret
pop
je
sub
leave
xchg
pop
je
inc
xchg
ja
jbe
fwait
pop
mov
popa
ficoml
add
mov
sbb
imul
rol
xor
mov
lods
lea
push
adc
and
fisttpl
test
or
adc
rclb
into
sbb
ret
jns
lods
lcall
dec
jg
pop
xchg
adc
push
mov
mov
mov
int3
push
loop
sbb
dec
inc
xor
pop
jb
adc
sbb
pushf
mov
bound
sti
outsb
dec
adc
sbb
in
sti
mov
push
dec
addr16
test
add
enter
pushf
lret
pop
adc
test
loopne
inc
loopne
test
adc
mov
out
sub
and
sbb
push
shrl
or
mov
add
das
sbb
jge
imul
mov
std
jnp
inc
mov
leave
fnsave
cwtl
mov
loopne
fxch
fucompp
fnstsw
test
je
jo
adc
add
add
loopne
lret
lcall
add
dec
pushf
or
jmp
jge
xchg
rol
test
rcll
lea
test
mov
pop
or
scas
bound
sub
inc
xchg
or
mov
add
cld
or
or
add
mov
and
cli
shr
iret
jg
jb
aas
adc
in
pushl
jne
aad
cld
sarl
mov
fcompl
shlb
push
jle
xor
inc
mov
pop
repz
test
xor
push
mov
xchg
xchg
std
mov
sub
mov
mov
adc
add
andb
and
pop
xchg
pop
sbb
add
add
bound
nop
mov
addr16
ds
les
in
cmp
int3
xchg
rorb
sbb
mov
mov
mov
rclb
nop
push
add
cmp
jb
mov
mov
sub
cmc
sbb
pop
push
mov
jb
inc
and
popa
nop
xchg
xchg
leave
nop
rorl
sbb
addb
jecxz
dec
shll
or
jp
or
mov
xor
mov
hlt
jo
jno
prefetch
or
or
sbb
fadds
inc
mov
jmp
mov
mov
loopne
cmp
jnp
or
or
sub
dec
cmpb
push
mov
pop
mov
pop
pop
or
mov
sbb
jl
xorb
sbb
or
add
jmp
lea
mov
xor
sub
mov
roll
xchg
xchg
sub
mov
push
je
fcompl
insl
xchg
lock
pop
xchg
cld
pop
aam
je
mov
sbb
inc
movsb
pop
xor
inc
push
pusha
jnp
mov
inc
jne
inc
mov
cli
dec
inc
add
test
dec
call
in
jo
jns
or
add
push
rcll
js
push
cmp
out
sub
and
xchg
out
xor
dec
xor
jno
nop
xchg
fsubrl
inc
mov
jmp
push
jg
imul
dec
faddl
mov
xor
shll
nop
aam
shlb
outsl
fs
fildll
pop
sbb
add
cmp
mov
sub
inc
in
dec
cs
inc
inc
mov
iret
mov
ss
xor
cmp
mov
shr
cmc
push
sub
and
outsl
and
and
mov
dec
jne
add
ja
outsl
sub
shll
xor
mov
jg
dec
les
repz
dec
cmpsl
pop
mov
dec
or
pop
inc
xchg
dec
outsl
push
les
xor
lock
cwtl
add
aas
cwtl
rcrl
daa
lar
fsts
adc
movl
rolb
jmp
les
shlb
pop
or
or
add
jne
sbb
jns
enter
je
movsl
ljmp
cmp
lea
mov
and
imul
je
push
outsb
out
jo
push
sbb
and
push
mov
pop
insb
jecxz
arpl
dec
outsb
jne
cmp
add
fldcw
jp
jo
or
jl
mov
inc
movsl
mov
push
stos
cmp
mov
js
xor
aas
icebp
or
cmp
cmpps
jge
imul
imul
es
out
push
movsl
maxps
jg
pop
dec
daa
in
out
xchg
out
dec
aad
push
push
daa
inc
mov
inc
repnz
cmp
jge
or
js
add
push
dec
test
dec
lret
add
pop
or
je
aaa
xor
in
adc
lahf
adc
pop
jne
jecxz
adc
xor
aaa
shlb
pop
fs
or
pop
std
mov
sbb
pop
sbbl
ret
or
in
cmp
frstor
clc
and
push
pop
lock
and
cmp
movb
movl
add
add
push
inc
lea
jne
inc
xor
shr
sub
or
mov
out
push
dec
daa
aaa
daa
inc
les
xchg
pop
movl
adc
push
fsubl
enter
adc
inc
cmp
ret
sbb
dec
fst
call
popl
or
mov
cmp
arpl
pusha
bound
pop
sbb
mov
dec
fiadds
mov
mov
loopne
out
cmp
pop
mov
push
cltd
pop
andl
das
mov
pop
int
xlat
sbb
mov
and
cmp
or
sbb
popl
push
and
bound
addr16
cmp
insl
mov
inc
xor
dec
pop
fstps
sub
adc
jne
dec
andl
and
sysenter
stos
inc
flds
out
dec
add
insl
test
sbb
xor
sbb
cmp
sub
lea
lds
fstpl
imul
add
rcr
push
jl
sbb
sarb
cmp
bound
add
jg
roll
iret
les
xchg
push
or
add
loope
fs
into
or
adc
pop
fidivl
sbb
push
adc
je
sub
cmp
push
dec
dec
mov
cmpsl
mov
pop
mov
sub
or
call
rcll
mov
add
imul
sbb
cmp
idivl
lds
mov
enter
outsb
or
sbb
adc
push
roll
sub
stos
test
leave
outsl
jne
sbb
jo
pusha
mov
mov
test
sarb
sbb
xor
and
in
test
add
rcrb
sahf
pop
std
lock
jb
push
movb
push
cmp
xor
push
rclb
fwait
rolb
xor
je
or
and
pop
xor
mov
pop
pop
orb
insl
inc
scas
pusha
jb
daa
pop
cmp
mov
pop
lret
push
out
push
inc
add
stc
ldmxcsr
pop
sub
rorb
outsb
push
xchg
shr
cmp
daa
or
outsb
xor
push
mov
xor
or
sbb
jmp
mov
arpl
sbbl
hlt
add
pop
loopne
lods
pusha
add
jnp
std
jne,pt
inc
xchg
call
xchg
je
pop
fwait
or
repz
pop
jmp
dec
cmp
mov
sub
sub
mov
daa
xchg
cmp
xchg
or
inc
call
inc
jnp
jne
or
mov
jns
imul
inc
sub
inc
sti
pop
cmp
xor
in
loop
mov
xlat
rcll
daa
mov
xor
and
pop
loop
push
cmpb
sub
outsb
mov
xor
pop
push
movsb
or
outsl
fcmovne
dec
xor
repz
sti
add
mov
aas
mov
sub
pop
sbb
test
dec
xor
xor
jns
hlt
imul
in
xchg
push
sub
mov
enter
adcl
push
mov
inc
std
inc
fisubrl
adc
shll
add
and
divl
inc
add
sbb
mov
and
pop
jb
jecxz
rep
leave
inc
loop
dec
push
scas
loop
jecxz
jns
mov
and
sarl
fcoms
and
inc
stos
fwait
pop
gs
jbe
mov
dec
test
cmp
inc
test
mov
arpl
push
popa
out
adc
add
pop
sbb
and
lods
mov
cmp
mov
test
rorb
jmp
adc
ficompl
bound
push
sbb
aas
pop
aam
rcrb
popa
pop
test
gs
test
inc
push
push
stc
xor
add
pop
je
inc
adc
mov
cmp
shl
inc
cmp
scas
push
jmp
sub
adc
inc
xlat
rclb
loop
test
shlb
jne
xor
les
leave
cmp
jne
mov
in
cmp
loop
in
xor
jmp
popf
out
and
xor
dec
xor
roll
fsubrs
inc
adc
or
cmpsl
aam
add
je
insb
pop
popa
out
adc
adcb
rcrb
rorb
insl
inc
loope
shlb
pop
inc
inc
lret
push
fsts
arpl
mov
sbb
pop
outsl
sub
sub
xchg
xorb
xor
inc
les
outsb
xchg
adc
sbb
fldcw
rclb
jecxz
jecxz
cli
aas
push
add
rcll
imul
int
je
or
dec
push
imul
add
dec
insb
fists
push
adc
cmp
xor
mov
or
test
bound
imul
sub
je
or
pop
pop
or
je
jmp
sub
je
push
je
in
jnp
add
test
pop
add
push
orl
push
int3
lret
loope
decb
add
dec
adc
cmp
or
xor
cmp
jmp
inc
inc
jmp
addl
dec
dec
dec
sbb
jns
xor
mov
js
or
adc
not
pop
push
jmp
insl
sub
nop
push
imul
mov
xchg
push
aaa
cmp
jo
popa
mov
and
or
sub
adc
sbb
inc
sbb
mov
sbb
testb
je
or
faddl
pop
daa
fdiv
jno
mov
push
push
sub
sbb
adc
rolb
cmp
sub
fdivrs
jne
adc
jae
add
inc
cmp
imul
cmp
jae
push
andl
jmp
filds
sarb
stc
pop
dec
adc
push
and
clc
pop
je
push
lea
cmp
jnp
int
jo
sbb
push
push
fistl
or
aaa
add
add
sbb
cltd
and
mov
xor
mov
mov
pusha
lret
test
adc
cwtl
fldt
inc
cmp
sub
cmpsb
mov
test
pusha
xor
xchg
or
bswap
adc
and
out
add
or
inc
ss
push
sub
into
xchg
pop
iret
sbb
dec
jne
xor
sub
push
jne
call
je
add
loop
lret
ror
repz
cmp
hlt
push
mov
mov
and
mov
add
push
add
jns
xor
jmp
ds
or
ljmp
mov
push
int3
imul
scas
jne
sbb
push
test
or
enter
push
sarb
cmp
adc
cmp
sub
sub
ja
es
cmp
add
dec
fsubs
mov
inc
enter
cmpsl
cs
pop
sbb
ja
sub
leave
test
rcr
movsl
mov
mov
push
cwtl
in
popf
xor
cmp
sub
pop
jge
and
push
rcrb
sub
mov
push
add
jmp
add
mov
pop
addr16
adc
in
push
dec
cltd
sub
pop
pop
cmp
mov
xor
pop
add
or
cmp
add
mov
test
push
mov
cmp
jne
pusha
data16
fcompl
rorl
test
and
push
lock
add
inc
adc
mov
inc
mov
xchg
in
mov
addr16
js
push
daa
jnp
inc
pushf
repnz
mov
mov
leave
dec
daa
jge
test
dec
pop
sbb
jecxz
mov
mov
dec
shll
push
js
add
testb
jge
inc
and
adc
inc
cmp
push
fsubrp
jg
cmp
rorl
mov
add
lock
push
cmovp
push
out
xor
out
sub
add
adc
addb
enter
adc
pusha
imul
arpl
sbb
xor
add
nop
and
fcomps
scas
mov
sub
jae
adc
sbb
inc
cld
xlat
iret
mov
push
imul
dec
jl
pop
jl
jmp
add
in
std
mov
mov
adc
mov
iret
cmc
add
sbb
lea
sbb
sub
decl
into
insb
cmp
sbb
mov
testb
repnz
shlb
mov
and
inc
cmpb
mov
ja
adc
adc
and
test
pop
imul
aam
dec
je
and
lods
push
loopnew
dec
sub
shlb
leave
push
shr
cs
sbb
popf
adc
sarb
sub
imul
sti
add
mov
jl
inc
shlb
test
jge
out
mov
les
mov
push
xor
out
adc
js
cmp
sar
je
pop
pusha
cmp
push
jnp
jbe
ja
sub
mov
or
add
das
add
pop
jle
mov
and
enter
mov
hlt
fwait
inc
and
mov
rcll
add
jmp
xchg
lock
mov
cltd
sbb
icebp
and
pop
int
inc
fldl
xlat
int3
and
cld
dec
add
sub
mov
push
into
test
push
fcmovnbe
push
inc
adc
ds
inc
inc
add
movsl
adc
aam
add
push
xor
enter
and
enter
pop
les
push
repnz
pop
lret
nop
jno
jnp
loopne
push
mov
fsubs
out
les
movb
adcl
mov
dec
xor
push
not
add
xchg
sbb
pop
mov
loop
ja
fmull
lods
loop
cli
push
lock
pop
add
xchg
sub
enter
pop
and
sub
sub
inc
add
in
faddl
mov
cmp
jl
pop
pop
sbb
sub
push
popa
push
das
ret
mov
xchg
mov
and
xchg
jmp
inc
in
movsl
mov
dec
bound
in
dec
bound
mov
cli
jno
mov
sbb
mov
jne
lret
pop
fwait
sahf
xchg
add
or
xor
and
cltd
pop
sbb
sbb
adc
add
jg
and
cmp
jge
div
sub
xchg
xchg
pop
mov
push
cltd
dec
pop
sub
mov
or
shlb
js
test
jo
mov
inc
sbb
mov
jo
add
add
pop
les
cmp
mov
cmpsb
xor
add
insl
push
inc
ficompl
add
sub
dec
int
imul
sbb
dec
add
mov
xchg
imul
dec
xchg
shll
push
or
ret
add
outsb
sbb
sbb
add
repz
pop
scas
inc
cmp
cmp
xchg
xor
fwait
stos
lods
mov
jmp
add
pusha
mov
jne
ror
outsb
pushw
push
cmp
inc
jne
repnz
or
or
les
inc
jmp
add
adc
testb
jne
sbb
push
call
adcb
add
push
and
or
lods
cwtl
inc
ja
xor
add
imul
jo
rolb
jo
out
and
shl
lsl
adc
fisubs
push
jns
add
outsb
xchg
add
pop
xor
or
add
inc
bound
mov
jmp
fsubs
xchg
jmp
loopne
test
add
mov
ret
jb
or
sub
push
pop
jb
dec
adc
sbb
cmp
test
es
jmp
adc
mov
and
ucomiss
or
enter
push
dec
repnz
in
arpl
pushf
push
rolb
xchg
fnsave
test
fadd
rcr
add
fsubrs
add
adc
or
mov
imul
xchg
in
aas
add
addl
in
xor
daa
pop
je
sti
sbb
add
sub
cmp
pop
xchg
nop
xchg
flds
inc
add
test
add
add
add
sub
lock
or
ja
movl
or
xchg
ja
xchg
jbe
xchg
add
or
loop
jge
add
bnd
and
test
add
inc
push
push
cmpsl
add
rorl
lods
pop
pop
push
mov
decl
aam
sub
cmp
js
sbb
add
lea
jmp
xor
push
inc
arpl
cmovb
add
pop
sub
cmp
decb
adc
repnz
jg
sbb
or
pop
add
or
pushf
sub
cmp
jecxz
pop
pop
repnz
add
or
or
add
or
xor
jecxz
jne
add
jge
stos
adc
or
jmp
shrb
add
mov
cmp
testb
add
add
lret
add
xchg
fnstenv
push
int
mov
ret
pusha
push
xchg
fiadds
add
imul
lcall
push
dec
jmp
or
push
repnz
and
rolb
pop
push
jmp
dec
pushl
aam
out
or
add
mov
nop
decl
stc
dec
lds
shrb
nop
or
and
xor
dec
and
jo
inc
not
mov
lods
sbb
pop
push
sbb
sub
stc
xchg
mov
sbb
iret
aam
mov
es
xchg
in
jbe
repnz
jl
sub
mov
aaa
aaa
loop
sub
and
mov
je
jmp
cmp
sbb
and
stc
gs
pop
jne
jbe
sub
and
jmp
mov
jmp
adc
mov
cmp
sub
ss
sbb
or
inc
and
adc
fisttps
inc
sub
push
out
mov
sbb
ds
inc
mov
push
jle
js
mov
icebp
ljmp
mov
jmp
es
pop
pop
fst
rolb
dec
cmp
icebp
ss
add
dec
sub
and
jnp
cmp
lea
ljmp
inc
fwait
ret
cmpl
daa
inc
sbb
outsl
pop
out
xor
pop
and
add
and
adc
sti
int
in
or
sbb
lock
cmp
shlb
add
and
pop
in
loopne
dec
lock
cld
adc
loop
pushf
inc
sub
imull
jmp
mov
inc
add
pop
fsubl
in
adc
inc
push
inc
mov
hlt
cmp
or
pop
ljmp
inc
ja
lcall
sub
ds
cs
loope
xor
imul
rclb
add
mov
and
arpl
stos
add
adc
adc
dec
sbb
add
repnz
jno
mov
fdivr
fcoms
add
ret
ret
and
dec
pop
dec
xor
sub
xchg
mov
mov
pop
insl
cmp
nop
xchg
outsb
imul
jo
adc
adc
sbb
sub
xor
test
bound
sub
ficoml
repz
fneni(8087
clc
in
cmp
jle
cmp
aam
pop
lcall
pushf
nop
pusha
mov
cmp
ss
inc
add
fmuls
sub
scas
push
das
add
shl
or
sbb
push
dec
lods
fsubs
into
xchg
xor
sbb
cmp
sti
sbb
je
rcll
sahf
les
popa
xchg
cs
gs
rorl
lahf
inc
cmpsl
cmp
jbe
psllw
mov
cmp
imul
push
sub
cmp
sub
xor
pop
fs
outsl
jge
mov
jle
adc
loopne
sarl
imul
inc
aad
or
pop
insl
xor
int3
lcall
push
lea
push
jbe
movsb
and
hlt
sbb
or
pushf
push
jp
sbb
ja
in
add
xor
adc
lea
xor
dec
fdivrs
cmp
or
filds
jmp
jne
mov
pop
pop
jne
jne
iret
ja
or
jmp
adc
ja
add
dec
inc
or
mov
sti
std
mov
add
or
ret
or
jno
loop
clc
cld
cmp
jge
js
gs
mov
push
into
clc
into
sti
cmp
test
adc
fildll
loop
pop
jae
cmp
sub
mov
jo
jle
js
fidivrs
jle
add
aas
push
aas
sub
sbb
in
ret
rcl
cmp
push
testl
or
int3
out
and
cmp
test
xchg
lock
fimuls
fucomip
mov
and
subl
cmp
fldt
jecxz
je
mov
add
add
or
dec
or
inc
add
jns
loopne
psubusw
repz
and
addl
dec
dec
das
std
add
jecxz
jge
and
mov
cmpsl
jb
cmp
in
imul
cld
sub
aad
sbb
push
mov
inc
sbb
lret
xchg
adc
loop
xchg
subl
sti
ret
push
pop
rolb
stc
jl
call
mov
dec
cmp
jmp
fistps
adc
or
add
jb
mov
cmp
int
outsl
daa
dec
pop
repnz
jle
into
ja
jmp
cmc
in
add
mov
sahf
dec
adc
lea
stos
std
andb
lret
pop
pop
rcr
dec
xchg
loopne
ds
push
pop
fstp
add
cmp
jb
cmp
jbe
and
inc
dec
pop
xchg
fimull
or
outsl
stc
pop
inc
jge
xchg
fmuls
dec
jae
inc
pop
jns
aad
push
dec
jae
xor
xchg
jbe
and
xchg
xchg
scas
xor
ss
fwait
sub
lcall
aaa
cltd
lcall
data16
movswl
cmpsl
test
stos
stos
mov
jle
fidivl
shrd
push
or
imul
ss
inc
pop
and
push
cmpsb
imul
cmp
or
out
notl
mov
cvttps2pi
push
xchg
andl
jle
lcall
jnp
loop
xor
adc
or
subl
adc
inc
shrb
mov
inc
or
mov
sbb
rclb
inc
inc
je
add
ret
nop
rcr
cmp
sbb
fs
jmp
fistl
mov
pusha
aas
jmp
push
add
jp
sti
test
add
pusha
cmpsb
dec
pop
adcb
or
data16
dec
mov
cmc
add
mov
dec
and
mov
and
pop
sub
aas
mov
push
pop
jge
inc
insb
push
fsubr
dec
ffreep
dec
and
dec
push
shrb
jmp
or
add
pop
xchg
aam
cmp
roll
sbb
xor
out
xor
jno
aam
out
sarb
insb
ds
lock
adc
add
cli
mov
push
pop
psubsb
mov
imul
sub
dec
addl
inc
and
or
and
mov
repnz
movnti
inc
add
push
or
ljmp
cmp
fcmovu
stc
or
and
roll
push
sbb
pop
sbb
cmp
add
push
dec
repz
or
leave
dec
adc
test
sbb
outsl
or
test
jo
int
and
pop
in
xchg
insl
mov
add
sbb
or
cmp
loopne
sahf
dec
pop
addl
mov
sub
pop
mov
adc
sbb
cs
mov
fdivs
push
xchg
mov
and
pop
jae
add
xchg
cltd
inc
xchg
sti
mov
cwtl
leave
mov
mov
and
pushf
lea
lds
popa
mov
add
iret
jne
js
pop
jge
mov
sahf
dec
mov
cmp
gs
repz
xchg
cmp
fbstp
sbb
nop
push
test
mov
add
je
sub
add
push
and
jge
pop
and
jle
dec
cmpsb
pop
outsb
jg
jno
insb
push
jmp
add
insb
xor
cwtl
pop
int
sub
nop
mov
push
lret
data16
jle
mov
inc
ret
push
add
sbb
jecxz
and
out
adc
or
jecxz
ret
xchg
out
ljmp
mov
push
mov
and
jmp
jmp
inc
or
and
clc
js
adc
jmp
pop
daa
clc
push
adc
jge
popf
jne
xchg
add
push
cmp
xchg
and
dec
inc
shll
mov
pop
xor
jns
pop
stos
add
xor
es
xchg
jl
insl
imul
dec
add
pusha
sbb
rolb
testb
jl
dec
inc
sbb
inc
adc
mov
fisttpll
popa
inc
lds
mov
out
sbb
and
in
pop
push
je
stos
inc
pusha
push
cld
jne
sbb
incb
loopne
pop
fs
sbb
pop
push
add
fstps
add
ret
push
inc
pop
mov
inc
push
push
add
les
xor
inc
rclb
sbb
mov
add
mov
push
xlat
or
pop
sbb
in
ja
out
lret
test
pusha
adc
adc
lcall
xor
lds
cld
lods
and
and
sbb
in
or
cmp
je
movsl
shr
and
mov
shlb
cli
or
jle
fdivs
in
adc
enter
dec
add
leave
and
inc
xor
dec
and
nop
add
jb
test
je
push
insb
dec
sub
cmp
push
fldcw
icebp
pusha
add
adcl
or
fdivrl
dec
push
rorl
adcl
fcoml
movl
sub
fidivl
nopl
sbbb
or
cld
or
out
mov
and
add
call
or
jg
lea
insl
xrelease
jmp
xor
mov
pop
cmp
mov
clc
mov
loop
push
shrb
mov
mov
xchg
cmp
xchg
sub
pop
cld
xor
add
push
test
insl
dec
leave
scas
xor
outsl
adc
mov
call
xchg
popf
lret
out
dec
cmp
mov
mov
jmp
sbb
jae
sbb
mov
push
inc
jo
add
inc
sub
int
pop
daa
xor
cli
sbb
test
sahf
enter
or
adc
inc
and
cmp
push
jne
adc
push
mov
pop
int3
aad
cmpb
lahf
adc
cmp
imul
mov
cmp
cwtl
push
loopne
out
xchg
xor
xor
mov
outsl
jnp
push
aas
cmp
jne
mov
lds
mov
mov
adc
push
jne
dec
xchg
sbb
mov
dec
add
lds
daa
addb
inc
add
adc
rcl
sbb
add
adc
inc
jecxz
sub
push
sbb
adc
clc
sbb
ja
pop
int3
push
stc
adc
push
add
cmp
push
lea
lods
ds
push
jp
add
adc
les
push
or
dec
and
add
out
dec
add
push
jmp
ret
mov
bound
xchg
sbb
add
and
sub
je
pop
xlat
pop
ljmp
je
inc
pop
je
pop
repnz
sbb
push
push
jns
sbb
pop
and
xchg
inc
daa
test
and
sub
or
lds
aas
adc
rorb
paddb
xor
sbb
lahf
jge
adc
adc
mov
sub
add
sahf
cwtl
or
and
sbb
fcoms
pop
adc
inc
andl
mov
inc
mov
push
ds
pop
cmp
les
add
inc
sub
push
jne
loopne
xchg
jmp
inc
fnstsw
stc
ret
popf
enter
shll
imul
sbb
je
sbb
test
inc
aad
xchg
adc
aas
inc
sarb
cld
xor
mov
adc
popa
or
sub
xchg
and
pop
icebp
sbbb
jbe
inc
loope
push
sub
cmp
push
aas
sbb
add
icebp
adc
mov
mov
sbb
add
pop
mov
movsl
sbb
fmuls
and
shr
fcomi
fnstenv
mov
pop
or
fimull
add
int
and
lret
sub
cmpsb
addl
andb
in
popa
cmp
mov
fistl
adc
mov
orl
pop
jae
ltr
xchg
inc
inc
cmp
adc
inc
and
lock
pop
dec
sub
pop
adc
enter
loop
inc
jmp
xor
test
push
fistl
or
push
inc
rorb
hlt
scas
mov
xor
or
das
pop
sbb
add
dec
shll
mov
push
gs
lods
cmpsl
sub
cmp
adc
inc
jno
ret
xchg
enter
aam
ds
fwait
and
pusha
mov
mov
mov
dec
lock
mov
rorl
fwait
stos
lret
and
or
nop
fnstsw
loop
dec
dec
mov
nop
outsl
pop
add
or
adc
cmp
mov
cmp
cld
orb
in
dec
dec
push
pusha
repnz
shl
movl
enter
cmc
or
fdivrl
xchg
lock
shlb
adc
in
jae
or
cli
adc
sub
add
adc
shlb
push
inc
jb
enter
sub
in
xor
xchg
inc
inc
inc
inc
xorb
gs
jbe
xor
jmp
loope
shl
or
jmp
mov
rorl
dec
and
dec
xor
xor
leave
jmp
pop
cmp
push
inc
inc
jnp
push
add
adc
dec
add
enter
stos
inc
and
pop
pop
sub
cmp
pop
jmp
ret
cmpsb
pop
xchg
mov
jmp
dec
xlat
and
push
sahf
xchg
mulb
inc
into
shlb
xor
sbb
jmp
rcr
inc
pop
int
pop
inc
jnp
out
shll
rclb
mov
clc
sbb
addr16
movsb
leave
enter
jp
cmp
pop
xor
jb
cmp
push
dec
cmp
add
leave
xchg
push
andl
xchg
or
iret
adc
push
mov
xor
xchg
sub
sbb
xor
and
cltd
xchg
xor
cltd
stos
loope
or
scas
sub
inc
sbb
sub
in
dec
sub
sub
cltd
inc
inc
sub
inc
sbb
in
dec
inc
and
and
and
mov
leave
leave
xor
mov
adc
push
adc
adc
xchg
mov
dec
leave
adc
fs
in
push
jne
sbb
mov
or
xchg
xchg
sub
or
loope
sbb
decb
jg
cmc
out
or
or
jb
jmp
sub
dec
clc
add
ds
sbb
mov
out
or
inc
lahf
out
push
sbb
and
enter
add
xchg
pushf
pop
leave
add
add
leave
enter
iret
ffreep
cmp
cmp
sub
lret
out
xchg
sub
add
jb
or
adc
pop
shll
je
cmp
or
push
adc
outsb
xchg
cld
clc
or
mov
mov
dec
ds
incb
ss
inc
cs
sbb
in
adc
mov
xchg
mov
lock
and
lock
push
hlt
hlt
add
and
jns
add
ja
xchg
or
sbbb
fs
call
dec
dec
call
jns
pop
adc
and
loopne
pop
leave
enter
loopne
enter
in
into
ret
dec
xchg
in
and
aad
loopne
add
popa
loope
sbb
imul
fidivl
popf
arpl
pop
adc
aam
add
fwait
testb
or
mov
out
in
inc
mov
jae
mov
mov
xor
aas
or
fisttpl
or
cmp
lods
movsl
mov
lods
xchg
mov
pop
jl
dec
cmp
pop
mov
lret
sub
inc
out
or
push
inc
imul
pop
mov
ds
adc
repnz
and
fcomp
aam
push
xor
aam
aam
add
xor
add
push
push
sub
sysret
fiaddl
sahf
pop
add
incb
repz
movl
adc
jp
dec
and
adc
adc
enter
fwait
inc
mov
out
mov
mov
shll
call
inc
mov
cmp
jmp
jne
popf
xchg
ret
xor
add
inc
insl
mov
stos
sbb
xchg
fsts
push
push
or
xchg
daa
sbb
jmp
inc
cmp
test
movsl
sub
inc
pop
sbb
cmp
cmc
pop
inc
sbb
add
addb
mov
jg
add
nop
mov
add
sub
jb
or
pop
xchg
cld
lahf
jecxz
mov
pusha
adc
movsbl
xor
adc
lcall
js
inc
mov
outsl
push
fdivs
or
add
mov
dec
mov
repnz
add
popa
fldl
add
jmp
ror
dec
inc
lock
adc
sbb
mov
nop
mov
sbb
mov
pop
mov
into
jg
xor
push
scas
fadds
nop
imul
rorb
mov
mov
lods
ja
lret
fcomp
je
adc
sub
mov
push
shlb
inc
mov
sarb
jne
mov
cltd
movsb
mov
push
and
sub
push
jl
push
and
cltd
loopw
or
xchg
fwait
adc
sub
mov
or
jno
inc
jmp
push
cmp
add
mov
scas
inc
imul
lret
hlt
mov
movb
adc
rolb
out
sarb
rolb
sub
cmp
jne
xlat
pusha
mov
xchg
out
jns
test
mov
inc
xchg
mov
aas
lods
jle
cs
shrl
jo
mov
leave
pminub
push
mov
mov
mov
fs
test
aad
mov
sbb
jo
push
add
int3
adc
out
add
std
sbb
leave
enter
mov
jb
mov
mov
xor
mov
sbb
or
xchg
stos
pop
fadds
add
mov
or
dec
jo
xchg
push
pop
jnp
adc
imul
jecxz
or
xor
sbb
sub
lods
repnz
cmp
test
test
enter
test
mov
lods
mov
icebp
dec
xchg
or
or
je
add
fwait
jl
sbb
ret
incl
rcrb
jmp
xchg
jmp
movsb
aam
lds
jmp
xor
shll
pop
push
inc
push
jl
push
or
lret
into
cmp
orb
stc
mov
rolb
fwait
dec
sub
mov
pop
add
sub
jb
sub
add
mov
lds
inc
jg
pop
lcall
or
pop
movsb
scas
shll
push
add
adc
or
daa
or
clc
in
xchg
flds
insl
add
jbe
test
mov
adc
loopne
sub
jmp
popa
push
xor
test
cmp
imul
pushf
pushf
mov
pushf
pushf
mov
inc
sbb
inc
repnz
stos
mov
inc
cwtl
sbb
cmp
xchg
jp
iret
xchg
enter
nop
xchg
nop
jb
and
xchg
nop
nop
or
push
xchg
xchg
inc
adc
sbb
mov
cmpsb
ret
orl
mov
or
cmpsb
add
scas
xor
dec
dec
stos
fisttps
fwait
mov
mov
mov
mov
cmc
mov
mov
aaa
pop
sbb
and
in
les
fldl
mov
sub
daa
nop
sbb
inc
clc
loopne
pop
inc
jg
cmp
pop
nop
sbbl
jno
push
in
sub
dec
xchg
push
mov
add
jns
in
cmp
add
mov
jl
jl
js
xchg
adc
dec
pop
inc
subb
push
outsl
cmp
xchg
imul
mov
ret
out
out
add
cmp
mov
xor
sbb
inc
mov
mov
cmpsl
gs
inc
mov
sub
add
jnp
jg
pop
test
imul
xor
jnp
rolb
ficompl
das
pushf
pop
les
push
or
push
ficomps
subl
je
jmp
jmp
add
xchg
insb
or
fisttpll
out
mov
cmp
jo
jo
add
test
mov
inc
adc
adc
and
pusha
jnp
ja
enter
fists
icebp
push
lret
aad
or
arpl
sub
shl
data16
and
pop
aam
sbb
mov
cmp
or
mov
mov
scas
or
pop
cmp
inc
mov
into
mov
adc
shrl
outsl
in
test
arpl
xor
inc
jmp
sub
cmpsb
das
dec
pop
insb
cmp
cmp
or
outsl
rolb
add
cmc
pop
inc
sub
fs
fs
pusha
imul
leave
inc
sti
pusha
pusha
push
pop
imul
cmp
ss
sarb
adc
rolb
push
and
je
std
lret
bound
ret
test
icebp
movsl
mov
xchg
mov
cmp
or
andl
dec
loopne
push
jp
add
in
jmp
ss
fisubl
push
inc
cltd
adc
faddp
mov
mov
movsl
push
rorl
ds
stc
mov
mov
inc
and
add
mov
popa
push
sbb
jne
mov
iret
dec
pushf
xor
jecxz
dec
jl
addb
lret
or
cmp
add
xor
jae
insl
mov
dec
popl
mov
mov
xchg
mov
mov
fs
mov
jo
add
lret
mov
jg
movsb
scas
sbb
mov
shrl
xchg
pop
test
inc
add
push
adc
pmulhuw
lock
jp
adc
mov
test
sahf
js
or
jne
test
xor
push
pop
inc
push
enter
inc
push
xorb
das
pop
orl
dec
jg
xchg
xchg
inc
jb
pop
add
dec
loope
nop
inc
dec
mov
cmpsb
popa
adc
leave
adc
mov
test
repz
dec
add
inc
dec
repnz
push
jae
pop
push
mov
push
pop
push
push
andl
shlb
push
cmp
or
scas
shlb
mov
cmp
inc
add
in
pop
test
ret
ret
clc
outsb
lret
xor
stos
movzbl
inc
push
nop
xor
mov
stos
xor
fwait
test
sbb
repz
sarb
push
pop
mov
push
aam
ret
mov
js
xor
add
jmp
mov
ror
adc
add
cmp
mov
dec
or
addl
sub
sbb
cmp
push
push
dec
dec
inc
sahf
xchg
or
dec
es
and
loopne
fsubs
cwtl
push
lea
mov
cmp
sbb
pop
or
pop
inc
test
sbb
inc
cmpsb
shrl
add
cltd
std
inc
inc
inc
cmpsb
cwtl
in
inc
inc
cmp
cmp
in
inc
inc
inc
inc
in
dec
push
cmp
inc
sub
inc
movsl
fs
inc
inc
inc
addb
xor
inc
push
mov
lahf
pop
cmp
fs
inc
lock
inc
popa
xor
xor
cmp
mov
push
inc
xor
repz
rclb
inc
xchg
xor
sub
sub
ret
shll
mov
lret
lods
jne
in
sub
cmp
mulb
push
ud2
ret
addr16
jmp
xchg
test
sbb
add
pop
shr
cmp
pop
cmp
mov
incl
cmp
add
xchg
mov
add
call
movsb
mov
sbb
out
dec
out
mov
sub
js
mov
or
xchg
push
jg
sbb
test
xchg
mov
and
dec
jb
sub
and
and
and
and
sbbb
cs
cmp
sbb
rorl
sbb
test
pop
cmpsl
dec
inc
sub
loope
mov
cmpl
aad
push
lods
xor
aaa
dec
sbb
sbb
enter
sbb
adc
sbb
enter
sbb
enter
adc
add
sbb
and
in
lock
push
mov
add
jl
leave
enter
out
inc
push
andb
sbb
stos
jecxz
mov
xchg
mov
add
fs
sahf
adc
add
in
in
adc
or
fnsetpm(287
popa
cmp
add
or
or
lret
rcll
xchg
or
add
nop
cmp
lcall
scas
in
aam
sbbl
jmp
testl
shlb
mov
or
mov
mov
xor
and
mov
xor
cmp
mov
ror
enter
loope
mov
sub
andl
in
pop
clc
les
mov
psubb
out
pop
cmpsb
adc
mov
std
or
jmp
mov
xchg
arpl
je
adc
mov
add
cmpb
shll
ja
bound
je
mov
call
jg
mov
inc
icebp
jns
sahf
std
std
and
lret
std
sar
ss
in
out
mov
test
push
pusha
adc
out
jbe
cltd
pop
hlt
lock
and
lock
lock
or
ss
std
hlt
std
add
pop
pop
xchg
test
test
adc
cli
add
sub
repz
or
and
in
inc
inc
cs
call
in
call
out
push
andl
lods
nop
enter
lods
mov
nop
or
popa
lods
add
sbb
add
cmpsl
inc
adc
in
xor
in
loopne
xor
in
pusha
inc
xor
insl
mov
pop
pop
insw
sbb
enter
pop
pop
inc
adc
sbb
in
dec
inc
fsubs
inc
inc
cmpsb
push
inc
sub
movsb
icebp
subb
inc
fs
scas
lcall
aam
xchg
dec
inc
aam
shrb
cmp
adc
scas
fs
ds
add
enter
jne
call
adc
enter
enter
and
pusha
push
outsl
xchg
cmp
clc
test
bound
adc
xchg
xchg
pop
shlb
outsb
add
std
testb
aaa
push
pushf
inc
adc
mov
or
mov
int
lret
enter
out
pop
into
mov
adc
mov
fstpl
leave
mov
xor
sbb
int
jmp
rcr
or
andb
mov
push
jge
cmp
test
pop
fwait
adc
mov
dec
mov
add
les
pop
mov
mov
push
sbb
xor
jb
mov
and
push
sbbl
jno
or
dec
add
push
ret
cltd
or
bound
mov
fs
mov
mov
pop
dec
dec
scas
mov
push
adcl
data16
inc
nop
push
enter
pushf
or
xchg
xchg
mov
fs
test
data16
dec
push
andl
inc
adc
icebp
and
or
mov
dec
scas
mov
stos
fxch
arpl
push
dec
roll
xchg
dec
inc
cs
pushf
cwtl
cmp
cwtl
cwtl
lcall
stc
adc
adc
xor
and
add
xchg
xchg
sub
sbb
cltd
xchg
xchg
nop
nop
xchg
xchg
stos
sbb
sub
or
xchg
push
cmp
or
jo
jae
fmuls
adc
mov
add
add
push
les
out
sbb
mov
dec
adc
leave
xor
adc
enter
jle
mov
enter
add
adc
add
mov
mov
ja
jl
rorl
rcl
xor
push
mov
enter
test
lds
rorb
test
mov
add
dec
test
adc
sub
mull
jp
pop
iret
fisubrs
sub
ljmp
je
or
das
fsubrs
jle
cmc
mov
repnz
sbb
nop
mov
ret
test
cs
adc
add
pusha
mov
shll
testb
ja
jns
cmpsb
movsl
mov
addr16
lret
pusha
mov
addl
sub
adcl
inc
cmpsl
jne
and
jmp
insl
leave
add
je
cmc
push
jo
xor
jae
enter
ret
arpl
sbb
mov
lret
scas
pop
cmpb
mov
push
sbb
fadds
fstps
fidivl
pop
in
nop
stos
and
fisttpll
mov
rorb
popf
mov
push
out
shlb
add
xchg
sbb
xor
add
test
xorb
and
adcb
inc
test
fnstcw
dec
push
bound
jl
xchg
xchg
sub
jl
mov
in
cmp
add
add
cmpsb
in
es
je
nop
out
inc
jo
je
fs
sub
fstps
cltd
in
cwtl
insb
into
insb
push
push
inc
sahf
and
inc
push
add
dec
adc
cld
mov
xor
fs
pusha
mov
pusha
pusha
fs
push
add
pop
leave
xor
push
xor
xor
push
pop
sbb
xor
push
push
pop
and
xor
mov
push
pop
aas
push
jb
pop
jle
xorw
imul
adc
add
lea
mov
dec
or
addb
pop
test
dec
xchg
xor
dec
dec
dec
in
and
dec
dec
dec
pop
nop
fs
loope
add
push
pop
loopne
loope
sub
movsb
imul
dec
fists
rcrb
mov
xchg
loope
cmp
je
xchg
jbe
ds
cmp
and
inc
push
imul
add
imul
in
xchg
adc
je
inc
mov
xchg
xchg
cmp
sub
pop
sbb
pop
adc
inc
xor
or
ss
cmp
outsb
pop
gs
mov
mov
push
dec
jmp
fldcw
mov
cmp
and
sbb
in
call
push
rcr
test
fists
and
pop
fadds
imul
jno
mov
add
subl
jg
cwtl
dec
add
leave
lds
add
jge
outsb
enter
fldcw
jne
inc
enter
adc
mov
aas
fstpl
cmc
sub
xor
lcall
loop
pop
jecxz
shll
sbb
or
pusha
push
pop
stc
push
push
sbb
sahf
in
cmp
pop
add
je
and
pop
in
shrb
xchg
and
add
sbbl
mov
pop
adc
mov
sbb
sub
push
repnz
fiadds
aad
leave
add
daa
setns
fs
adc
pop
or
mov
pop
leave
sub
dec
add
aaa
mov
je
jge
ds
loope
jo
jb
test
mov
jnp
mov
mov
out
out
and
jmp
pusha
inc
push
leave
inc
std
jb
jae
leave
jae
cmp
cmp
mov
inc
adc
adc
dec
xchg
pop
in
push
insb
or
fldl
sub
jmp
out
add
inc
scas
add
ljmp
mov
cs
sbb
xchg
jns
sub
xchg
sbb
sub
xor
imul
sub
inc
ja
xor
jnp
add
adc
xlat
incb
in
add
pop
add
xchg
dec
sbb
sbb
shlb
cmp
and
xchg
xchg
xchg
xchg
sbb
and
or
bound
sbb
stc
mov
dec
jns
jno
cmp
mov
and
inc
add
sub
or
xchg
dec
inc
or
or
cmp
xchg
xchg
xchg
sbb
or
enter
and
or
inc
xchg
into
adc
xchg
stos
xchg
and
dec
adc
cmp
add
push
and
cld
mov
cld
and
test
xchg
bound
adc
cmp
ss
pusha
push
outsl
add
jnp
cld
cld
add
sub
xor
aam
push
out
incb
test
push
jmp
mov
add
fs
insb
jl
adc
add
and
mov
add
sbb
cmp
sub
iret
mov
lock
lock
xchg
sub
sbb
cld
hlt
cld
pop
mov
xchg
pop
in
dec
pop
sbb
jb
icebp
xor
in
xchg
mov
dec
cmp
call
loopne
sbb
dec
outsl
cmp
and
arpl
dec
dec
shll
pop
in
sbb
mov
mov
cld
pop
sub
mov
in
aam
enter
pop
out
sti
aam
xor
aam
rcl
inc
fisubl
fcomp
inc
sti
push
xor
rcl
fcomps
jns
in
and
aam
pusha
stc
nop
and
test
jecxz
add
mov
stc
mov
or
cs
out
out
inc
pop
hlt
mov
mov
shl
movsl
insl
jbe
clc
into
stc
shll
ds
push
mov
cli
shl
fcomi
and
jg
adc
adc
push
andl
cmp
or
andl
dec
lahf
or
push
les
lods
dec
adc
jecxz
add
cli
xlat
push
or
inc
or
mov
repnz
jge
lea
arpl
insb
lds
dec
push
pop
pop
adc
jecxz
std
sub
mov
icebp
jbe
mov
jno
repz
inc
aaa
and
icebp
xor
in
or
cld
pop
push
adc
aam
and
leave
repz
repnz
cld
cld
cld
stos
rolb
xchg
xchg
xchg
xchg
rol
and
enter
cmpsb
int3
xor
cmpsl
mov
sbb
sbb
xorb
aas
sbb
push
cmp
iret
insb
and
and
or
cmp
sub
push
or
inc
ss
dec
or
cld
fwait
inc
jb
sar
xlat
cmpsb
or
and
or
sbb
fwait
in
mov
inc
dec
inc
dec
outsb
mov
pop
and
mov
mov
xorl
inc
daa
daa
dec
cmp
sub
sbb
pop
dec
mov
or
dec
nop
lods
movsl
lock
sub
and
pop
mov
lcall
test
xchg
sbb
movsb
xor
mov
pushf
pushf
cwtl
cwtl
insl
xchg
and
pushf
mov
mov
mov
and
pushf
or
mov
fs
adc
cmp
cmp
sahf
inc
enter
xchg
leave
enter
add
xor
mov
nop
inc
gs
push
xor
nop
and
sbb
mov
adc
inc
adc
dec
sahf
add
dec
jbe
adc
bnd
mov
cld
cld
or
repz
cld
cld
cld
cld
xchg
sbb
xchg
js
xchg
xchg
xchg
js
and
leave
enter
test
or
popa
inc
adc
enter
add
enter
out
add
jb
insb
push
and
jo
inc
adc
jb
push
pop
in
and
insb
je
iret
in
add
add
xchg
add
fs
pop
pop
leave
xchg
mov
nop
ss
inc
or
push
mov
imul
cmp
add
add
sub
fs
cmp
stc
add
push
loope
in
xchg
mov
mov
dec
push
in
xchg
mov
movsl
fs
and
add
repnz
and
cmpsl
inc
sahf
add
or
cmp
sbb
cmp
insl
xchg
and
inc
sub
cmp
mov
jbe
imul
add
cwtl
and
inc
sbb
stc
mov
jle
lds
daa
out
push
push
daa
popf
mov
imul
test
xchg
scas
xor
cld
pop
stc
test
int
cld
jg
add
data16
add
xor
dec
add
add
push
push
add
sbb
pop
cld
inc
xor
push
leave
cld
insl
add
sub
out
mov
scas
jbe
movb
out
and
add
mov
adc
adc
add
sub
pop
in
add
add
repnz
adc
push
rclb
adc
lret
int3
leave
stos
mov
push
inc
xor
mov
mov
cmp
dec
inc
and
nop
and
dec
sbb
pusha
cmp
or
lret
enter
or
sbb
adc
xchg
jl
test
test
mov
cmp
adc
add
add
cwtl
xchg
mov
enter
add
mov
jp
dec
adc
xchg
enterw
fcmovnbe
xchg
pop
aas
add
xor
xor
xor
sbb
dec
or
testb
jne
les
aaa
jg
nop
or
inc
dec
inc
ficoml
and
lods
lret
nop
cmp
add
add
xchg
add
jnp
daa
subb
adc
mov
adcb
jmp
jge
pop
xchg
jno
popa
daa
and
jmp
jae
dec
jmp
orb
and
jns
test
xor
mov
xor
push
or
mov
mov
sbb
pop
ds
and
xchg
sub
add
adc
push
rcrb
inc
les
adc
lock
jg
pusha
jne
add
lea
cmp
push
add
adc
psubd
pop
or
std
sti
or
xor
adc
xor
lahf
adc
jle
and
test
nop
icebp
xchg
mov
adc
adcb
mov
scas
movsb
and
clc
mov
add
pushf
test
insl
loopne
bound
mov
test
add
or
int
adc
insl
sbb
je
or
pop
or
mov
xchg
int3
mov
andl
lock
lea
popa
cmp
push
lea
mov
in
ja
jle
nop
mov
cmp
and
xor
fsubs
pop
inc
adc
sbb
xchg
and
subb
ja
mov
out
sbb
add
inc
jmp
enter
adc
std
jge
movzwl
pop
push
sbb
scas
lret
xor
add
jl
gs
push
mov
cmpsb
outsl
pop
add
ss
pop
mov
and
and
or
mov
ret
mov
mul
push
xchg
dec
cmp
adc
xor
pop
xor
add
inc
sbb
js
sbb
push
jl
sbb
rol
rcl
inc
sub
adc
adc
pop
adc
pop
leave
das
xor
pop
daa
inc
je
pop
or
push
jmp
adc
or
ss
dec
adc
adc
xchg
or
adc
or
push
push
lahf
or
inc
popf
inc
and
les
daa
cs
jmp
ja
imul
adc
mov
lcall
xchg
pop
pushf
fucomip
fcoml
ret
inc
or
add
or
fmull
fdivs
cmp
dec
lahf
dec
test
mov
jb
fimuls
and
dec
and
and
or
cmp
pop
mov
mov
ds
dec
leave
repz
sub
and
hlt
xchg
divl
icebp
xor
dec
idiv
xchg
inc
xchg
sbb
iret
jge
js
add
dec
push
or
mov
add
cltd
sub
inc
cwtl
cmp
cmc
sgdtl
test
jo
sarb
mov
adc
push
dec
adc
dec
cmp
sub
sarl
rol
mov
cmpsb
dec
ret
pusha
add
push
add
mov
lcall
aaa
mov
cmp
adc
sarb
jnp
cmp
shll
rcrb
push
xchg
push
ss
xorb
xchg
or
in
fidivl
nop
insl
push
inc
xchg
dec
inc
adc
sub
divl
in
add
jmp
xchg
movl
add
push
mov
xchg
xchg
nop
jae
rorb
lea
cltd
or
call
mov
adc
jle
dec
jne
xlat
aas
call
adc
xchg
and
cs
inc
add
test
or
int
loope
mov
add
mov
jne
fstl
and
add
aam
sub
xchg
mov
fs
and
mov
mov
sarb
and
or
dec
sbb
mov
xchg
outsb
flds
imul
call
inc
jmp
inc
in
ljmp
add
stc
mov
mov
sbb
push
sbb
inc
push
push
inc
enter
push
adc
arpl
sbb
in
sbb
outsl
ja
mov
inc
and
mov
mov
and
lret
jo
or
fs
push
and
xchg
loop
push
add
les
sahf
je
mov
popf
adc
cmp
subl
popa
daa
das
inc
shl
std
mov
ss
cmp
add
loope
adc
pop
or
das
jb
xorb
jmp
mov
pop
imul
enter
push
xchg
pusha
in
mov
inc
aad
in
xchg
sub
push
call
mov
fisttps
pop
cmp
jbe
sbb
iret
fs
and
and
sbb
jo
out
sbb
out
sbb
and
repnz
ficoml
daa
push
adc
nop
sub
jg
ret
pop
iret
addr16
inc
lock
pop
and
adc
dec
inc
dec
push
jne
in
cs
call
push
bnd
sbb
aaa
or
adc
pushl
pusha
mov
dec
enter
mov
pop
mul
shr
inc
and
jne
push
mov
ficompl
xor
jne
pop
mov
cmp
jne
or
mov
jnp
or
cwtl
add
lods
ret
pop
or
mov
cmp
push
in
adc
shl
loopne
addr16
xor
add
sub
jb
jmp
dec
xor
loope
jno
jb
push
inc
pop
call
lret
xchg
decl
inc
pusha
or
xlat
outsl
cltd
cmp
in
add
add
das
nop
adc
leave
popa
mov
into
mov
sbb
je
dec
je
jge
sbb
or
in
jo
adc
mov
cltd
push
cmp
lea
lret
push
pop
imul
int
xchg
xchg
aam
pusha
jmp
or
add
enter
stos
cmpsb
scas
icebp
adc
das
lock
nop
or
dec
jne
mov
jne
rorb
jno
push
or
or
push
in
std
jne
pusha
iret
xor
xchg
xchg
jmp
popa
dec
into
sub
mov
add
fsub
leave
xor
inc
loopne
mov
imul
aam
pop
movsb
lock
cltd
rorb
orb
push
dec
sbb
adc
cmp
push
add
ds
jle
js
test
icebp
sub
sbb
test
push
cltd
lods
add
lret
sub
adc
loope
sbb
mov
enter
adc
aaa
cwtl
push
aam
mov
mov
repnz
js
push
dec
xor
gs
pushf
mov
xor
or
sbb
mov
push
jp
dec
ret
adc
jg
cli
inc
add
push
lods
or
rsm
in
nop
int3
pop
adc
inc
cmp
push
sub
je
loope,pt
and
inc
loopne
and
lock
aad
inc
and
sub
fdivl
nop
cmp
mov
sbb
xor
inc
inc
les
mov
inc
test
cmp
mov
push
hlt
mov
cld
inc
fnsave
js
add
imul
and
cltd
and
dec
and
dec
mov
pushf
xchg
inc
dec
and
add
inc
popa
and
sub
cld
jb
push
jo
sbb
xor
lods
loop
mov
pop
or
add
sbb
sbb
stc
jne
mov
and
pop
fsubrl
push
xorl
mov
mov
xchg
or
cli
gs
inc
cwtl
inc
sarb
xchg
inc
lock
and
sbb
testb
push
add
shl
push
and
jg
sub
cltd
inc
cmp
aam
jg
pop
movsl
inc
into
jge
xor
jmp
push
jg
je
hlt
add
orl
add
inc
add
sub
jge
sbb
or
adc
mov
adc
mov
add
ficompl
aam
pop
sar
cmp
ret
imulb
or
ret
test
imul
imul
mov
dec
pop
mov
sbb
adc
mov
add
dec
xchg
jp
add
mov
or
jp
push
sub
popa
add
mov
lock
adc
xchg
and
push
or
stos
sbb
cmp
lock
inc
pop
jmp
call
out
decl
leave
pop
ds
dec
sub
and
addb
inc
inc
add
push
icebp
pop
add
clc
in
add
mov
call
aas
ja
lahf
incl
dec
sar
mov
pop
or
wbinvd
and
mov
lea
outsb
sbb
and
xor
sbb
or
cmp
aas
loope
add
sub
jnp
mov
pop
or
ljmp
rorl
movsb
inc
ljmp
mov
into
andl
mov
decb
jmp
pop
mov
daa
pop
xor
cmpsb
out
in
cmpsb
add
and
or
int
xor
adc
rorb
adc
push
int
xor
push
sbb
sbb
xor
sbb
sbb
dec
xchg
ss
cmp
pop
jo
or
push
enter
xor
and
xor
sbb
xchg
jns
fisubs
inc
mov
std
cltd
push
sub
sbb
insb
sbb
cmp
daa
xor
into
in
jge
fists
add
cmp
jg
add
xchg
test
inc
sub
and
jge
ja
dec
je
add
test
ds
jne
fneni(8087
and
adc
fcmovnu
repz
pop
mov
push
jmp
jns
or
dec
lock
hlt
fstps
sub
mov
sbb
push
xor
je
loop
fcmove
fisttpl
and
lret
push
sub
pop
testb
fisttps
and
xor
or
ds
test
lock
sar
cmp
and
je
pop
and
xor
neg
mov
pop
mov
ljmp
es
insl
add
and
pusha
popa
dec
mov
hlt
add
and
subb
in
or
inc
add
shlb
pop
jmp
in
adc
popa
sarl
cmp
out
pop
xchg
mov
and
inc
les
mov
pop
pop
mov
add
mov
jg
lea
mov
shl
out
iret
cmc
aaa
pop
sub
inc
and
push
add
cld
sub
mov
xchg
mov
pop
js
jg
jg
ret
jg
sti
fwait
jecxz
mov
and
dec
or
inc
add
mov
xor
movb
arpl
popf
pop
push
fdivs
cmpsb
push
fdiv
pop
sub
addb
pop
add
repnz
dec
sub
test
add
push
test
add
jno
in
fnstenv
or
or
xor
cmpl
outsl
scas
jbe
fidivl
addr16
mov
cmp
xor
add
inc
aas
mov
inc
adc
pop
movsl
pop
orb
mov
mov
iret
shrb
xor
or
cmp
in
mov
or
and
inc
xchg
and
or
jl
dec
mov
dec
repnz
stos
insb
loop
mov
or
sbb
dec
cs
sbbb
fnsave
push
outsb
inc
or
adc
notb
outsl
cmp
add
adc
adc
push
imul
cmc
sbb
adc
jne
cwtl
insb
dec
inc
fisubrl
sbb
adc
aaa
xchg
ds
xchg
push
xor
or
je
add
adc
stc
mov
call
insl
sub
test
add
and
or
adc
push
pop
inc
fmuls
aas
jbe
dec
leave
jmp
dec
mov
push
aas
adc
dec
incb
sub
dec
ja
xor
sbb
pop
or
cwtl
push
inc
sbb
daa
pop
xor
add
subl
shll
adc
fnstcw
popa
sbb
imul
adc
in
mov
daa
or
je
enter
sti
daa
in
gs
push
out
and
test
jecxz
and
int
jo
push
das
adc
jne
mov
jb
sbb
xor
outsl
lret
adc
or
data16
or
cmpsb
sub
inc
mov
pop
sbb
cmp
in
or
insl
add
inc
push
inc
push
inc
mov
add
xor
fwait
push
loop
insb
fsubl
hlt
add
cld
cmp
int3
in
mov
push
cmp
add
adc
sub
sbb
lods
dec
cmp
movntq
clc
es
or
mov
pop
enter
inc
sysexit
push
sbb
jg
enter
add
orl
cltd
ret
xlat
pushf
nop
cmpsl
in
and
or
xchg
or
mov
mov
dec
inc
push
mov
out
inc
jae
std
gs
pop
xor
add
hlt
sbb
fsubs
call
xor
fldenv
sub
add
mov
sub
dec
inc
adc
jnp
xor
xor
dec
inc
sub
mov
cmpsb
cwtl
sbb
push
mov
xor
jne
mov
enter
sub
lds
iret
cmp
insb
xchg
adc
lods
sbb
cmp
add
fimuls
adc
mov
or
das
inc
popf
add
jp
or
sub
mov
in
mov
add
or
and
mov
jle
push
rolb
add
shlb
cmp
adc
jo
and
or
jb
mov
and
cmp
cmp
sub
mov
cmp
lods
iret
cmc
and
pushf
pushf
pushf
ds
test
mov
or
inc
and
sub
or
adc
lret
or
in
mov
cmp
sub
nop
sub
cwtl
or
leave
dec
enter
sub
or
sub
jnp
sbb
mov
incl
jge
dec
ret
jns
gs
test
roll
inc
ret
pop
leave
insb
aaa
sub
aaa
daa
mov
jb
and
dec
movsb
or
mov
and
test
sub
cmp
and
or
jae
add
lret
adc
pop
sub
popa
and
sub
mov
xor
inc
mov
or
pop
dec
sub
push
andl
inc
push
mov
rcll
and
adc
inc
mov
pop
add
test
gs
mov
sbb
jnp
fmull
xor
and
sbb
mov
jle
adc
dec
push
cmpsl
cmpl
sbb
dec
outsl
xchg
and
pusha
imul
mov
inc
outsb
or
int3
xlat
test
push
push
mulb
hlt
push
pusha
mov
jae
pusha
mov
into
mov
lock
sbb
fwait
jns
leave
adc
inc
je
and
add
or
pop
ss
call
inc
fcoms
xchg
pusha
pop
imul
mov
shll
xchg
and
lahf
sbb
adcl
and
orb
xchg
xchg
and
sub
xchg
and
or
xlat
mov
xchg
dec
icebp
jo
xchg
daa
xchg
cmpl
add
or
out
inc
lret
into
outsb
dec
mov
xchg
test
ja
adc
and
pop
int3
xor
cwtl
mov
and
movsb
or
mov
adc
xorl
xor
sub
mov
add
inc
out
aaa
jb
adc
insb
cmpsl
sub
mov
sarl
cltd
ds
fnstcw
cmpb
cmp
add
loopne
dec
or
push
mov
add
mov
icebp
cmp
lock
dec
or
xchg
cwtl
push
dec
int3
es
arpl
loope
cmp
add
add
lods
popf
sbb
xor
sbb
cmpb
jmp
pop
sbb
testb
mov
add
negb
sbb
lods
or
jne
adc
aaa
mov
push
lock
add
or
fs
aas
xchg
lcall
or
lahf
mov
pop
sub
cmp
xchg
xor
ret
popf
clc
popf
xor
mov
add
adc
push
rolb
add
adc
mov
addl
data16
movsb
cmp
add
cmp
imull
test
mov
or
push
inc
sti
or
lock
mov
pop
andl
xlat
pusha
dec
test
loop
adc
dec
xchg
popa
fs
push
xor
inc
ret
adc
dec
add
or
daa
adc
lret
dec
sbb
in
fnstenv
scas
adc
cmp
mov
insl
or
mov
lods
jne
aad
cmp
mov
lahf
ja
jnp
add
sub
movsl
into
adc
dec
fisttpll
sbb
popa
adc
ja
and
mov
icebp
push
test
sub
and
adc
ds
dec
lahf
adc
pop
sbb
push
pop
jbe
mov
in
dec
or
mov
mov
sub
pusha
inc
pop
les
mov
iret
add
push
adc
arpl
mov
add
jbe
sbb
jns
in
test
dec
sub
jle
insb
arpl
aam
data16
add
js
add
and
mov
cmovne
or
mov
add
adc
daa
rolb
add
add
and
test
data16
mov
es
sbb
push
lods
push
out
add
add
pushf
loope
mov
cmovbe
mov
jbe
test
push
jb
adc
pop
adc
scas
mov
mov
mov
bound
add
sub
sub
mov
daa
dec
ja
xchg
es
or
sub
ret
ljmp
jbe
into
test
jno
ljmp
daa
add
loope
sub
lret
adc
ss
int3
jns
leave
test
add
xor
add
sbbb
pop
in
add
push
push
decl
pop
xor
or
or
or
loopne
or
or
dec
sbb
lret
and
push
shlb
enter
xchg
mov
mov
pop
loopne
adc
sahf
out
cs
add
or
popf
out
and
jno
pop
pusha
mov
out
cmc
add
mov
mov
sub
lea
add
push
les
fwait
inc
push
xor
cld
ret
das
jg
cmp
or
jnp
and
xchg
and
or
push
cmpsl
andl
xchg
mov
enter
mov
pop
cwtl
mov
dec
pop
xorb
into
ret
mov
add
insl
xchg
dec
xor
jne
das
xchg
push
rcr
cmp
cs
lcall
xor
ficompl
inc
mov
adc
cltd
dec
jae
addl
cmpsb
into
in
push
rorb
daa
ret
push
aam
fidivrs
pop
jb
pop
in
aam
outsl
fcoml
pop
adc
nop
mov
sub
mull
push
xor
jno
or
decl
push
mov
pusha
sub
xchg
inc
push
js
xlat
dec
pop
pop
xorl
gs
stc
jbe
les
rcll
mov
mov
inc
stos
aaa
jno
add
out
cmp
shll
call
dec
xchg
pop
xor
jb
pop
pop
inc
xor
and
jl
inc
xor
sub
and
xor
sub
and
and
jnp
push
cmp
inc
lcall
out
mov
sub
xlat
or
dec
sbb
mov
adc
andl
sbb
pop
cmpsl
adc
fdivs
push
xchg
aas
sub
cmp
rcl
test
inc
inc
jl
inc
push
in
loopw
out
adc
and
pop
mov
adc
movsb
fnstsw
jmp
loop
push
sub
arpl
sti
inc
cwtl
or
inc
mov
xor
adc
or
cmp
inc
inc
das
or
inc
mov
mov
push
and
xchg
mov
lds
or
js
push
mov
je
mov
push
mov
hlt
push
lods
in
push
incl
repz
add
rcl
sbb
or
adc
fsubl
add
pop
xor
xor
fdiv
fbstp
mov
fs
mov
pop
cmp
das
inc
repz
inc
pop
sub
adc
xor
add
aam
mov
adc
push
es
ss
cmp
sbb
movl
ss
mov
fs
push
cmp
and
and
jb
pop
pop
hlt
jnp
shlb
orb
test
inc
add
in
shlb
and
adc
or
movsl
add
or
sub
daa
int
or
push
xchg
sti
pop
jb
add
add
shlb
ret
bound
rcrb
rol
test
adc
add
xor
jnp
imul
cmpb
mov
add
cs
aas
outsl
xor
outsb
aas
or
rcr
xorl
cmp
or
jg
dec
jne
das
cld
pop
sub
push
jg
push
daa
pop
push
push
or
push
int
mov
adc
and
pop
cmpsb
and
cmp
add
cmp
cli
or
gs
mov
sbb
movsb
dec
data16
cld
mov
adcb
inc
mov
rcll
add
jne
add
je
nop
jg
inc
mov
mov
sahf
add
in
mov
fs
nop
in
mov
test
mov
sub
loope
sbb
cmp
cmc
mov
cmp
pop
xchg
and
addr16
jns
adc
loop
outsl
shr
out
xor
xor
add
pop
mov
enter
cld
push
pop
cltd
addb
lret
push
icebp
sub
imul
pop
cmpsb
xchg
push
outsb
pop
pusha
cwtl
jne
nop
fstps
xchg
repnz
stos
movsb
mov
outsb
jne
mov
daa
inc
stos
popa
push
or
scas
int
adc
xchg
loop
xchg
stc
pop
xor
mov
add
add
mov
aaa
add
lahf
add
js
loopne
cmpb
xlat
mov
pop
ljmp
sub
clc
mov
push
enter
in
imul
cmp
mov
rcr
cmp
jl
mov
lahf
or
or
shr
dec
push
mov
les
nop
pop
pop
or
cmp
dec
xor
sbb
mov
push
aam
ret
sahf
insb
sub
cmp
je
insb
cmp
in
xchg
push
shlb
rcrl
mov
inc
sub
outsl
mov
and
or
jbe
adc
inc
sahf
ret
popa
inc
cmp
mov
ret
call
adc
mov
je
push
adc
fstl
insl
sbb
fidivs
cmp
loopne
shlb
push
in
subb
rcrl
mov
pop
rcr
enter
push
and
or
mov
daa
adc
ficoml
outsb
inc
cmp
adc
add
or
sub
sub
dec
add
pop
inc
or
or
push
xchg
push
sarb
or
test
aaa
mov
pop
dec
insl
in
add
adc
push
cmpsb
adc
scas
insb
mov
add
adc
lcall
sbb
test
cmp
fs
push
mov
aas
ds
sbb
mov
aam
aas
divb
xor
push
dec
jl
in
lock
fdivr
xchg
adc
jae
fsub
add
sub
nop
fwait
cmovbe
xor
xchg
xorb
repnz
ret
or
jo
cmp
inc
push
push
inc
inc
inc
bound
jbe
sub
jmp
adc
hlt
push
pop
dec
cmp
dec
add
push
xlat
int3
push
addr16
and
inc
mov
add
xchg
mov
jae
jbe
rol
lret
insl
or
js
add
lcall
push
addr16
cmpsl
push
mov
loopne
repnz
loopne
out
or
mov
adc
push
inc
mov
dec
dec
pop
aas
out
fdivs
pop
scas
inc
loop
lret
pop
mov
mulb
add
ficoms
push
dec
jg
je
mov
dec
imul
into
jle
inc
jo
pop
nop
cmp
adcb
add
decb
add
dec
sub
in
xor
out
fsubr
sti
shl
jecxz
push
sti
sbb
add
in
repnz
test
fmull
mov
fwait
push
mov
mov
in
add
lock
mov
inc
jg
sbb
cmp
pop
push
nop
rorb
pop
xor
outsl
pop
fdivs
out
mov
movsb
mov
mov
aas
int3
lods
sub
mov
les
mov
test
lret
in
sti
movl
pusha
add
cmp
push
imul
xchg
cwtl
cs
in
fisubl
outsb
movsb
mov
or
stos
sub
pop
aas
das
sbb
add
jo
cld
pusha
pop
pop
imul
stos
cmpsl
pop
jmp
pop
cmp
jle
add
stos
les
in
repnz
lret
loopne
mov
add
test
and
aas
pop
dec
add
cmp
add
inc
repnz
mov
adc
push
inc
or
jge
inc
sbb
push
or
jns
push
add
push
pop
ds
les
cltd
xchg
pop
imul
mov
in
pop
adc
xor
pop
xor
push
push
push
jo
xchg
scas
xorl
movsb
mov
xor
sarl
sub
insb
adcb
add
cs
in
add
mov
xor
inc
dec
or
pop
xor
pop
shlb
adc
addr16
test
xlat
push
leave
sub
fimull
cmp
out
call
sbb
daa
cmovl
js
in
adc
and
adc
xor
fsubrs
push
lods
push
insb
aas
adc
push
cmp
adc
mov
mov
jae
insl
mov
add
push
cwtl
jno
lods
adc
fdivrs
fs
push
lea
addr16
lcall
push
enter
ret
ficomps
xchg
setl
nop
mov
sbb
xchg
movsb
push
ja
xchg
lret
jbe
push
push
movsb
pop
pop
pop
or
repz
cwtl
pop
cmp
pop
pop
rcrb
pop
dec
push
call
mov
cs
out
dec
loopne
js
adc
inc
es
gs
mov
insl
xor
sub
enter
repz
bsf
imul
pop
cld
daa
insb
lods
insl
push
outsb
je
inc
sbb
sub
setl
mov
xchg
out
mov
jae
mov
ja
pop
jl
addb
addb
aam
movsb
xchg
ss
or
movntq
fmull
adc
sub
fcomi
gs
scas
pop
out
inc
push
add
scas
testb
fwait
or
fwait
rclb
sbb
insl
fadds
lock
pushf
and
mov
pushf
xor
dec
fs
jl
enter
cmpsl
daa
mov
mov
xor
movsb
daa
popf
pop
ja
fmuls
inc
inc
mov
sahf
pop
pop
or
aas
lahf
lahf
jl
mov
mov
or
cmpsb
daa
push
xchg
push
les
insl
add
shrb
notb
movsb
dec
push
pusha
js
adc
inc
cmp
inc
rorb
mov
ss
scas
daa
add
mov
movsl
mov
or
pop
mov
int3
pop
sub
sub
test
leave
mov
cmp
addr16
mov
hlt
addr16
push
cs
imul
in
mov
pop
mov
rcrb
in
add
mov
and
rolb
pop
int
mov
les
lds
das
insb
pushf
dec
out
xor
cld
and
pop
and
push
push
movsb
mov
add
xchg
daa
add
scas
aam
or
xor
inc
mov
xchg
int3
jns
dec
push
pop
loopne
loopne
fs
loop
int
mov
sbb
lock
icebp
add
mov
mull
std
aam
add
dec
pop
add
fbstp
mov
cmp
in
pop
hlt
adc
adc
call
adc
dec
mov
push
adc
pop
jnp
pop
pop
sbb
sub
loopne
in
pop
sbb
sbb
pop
cs
sbb
jl
push
add
xchg
fsubrl
ss
xchg
xchg
dec
push
jo
lods
movsl
stc
test
cmp
pop
inc
adc
xor
inc
dec
out
testl
loopne
push
or
mov
repnz
call
nop
das
lods
stos
add
add
hlt
sbb
push
nop
pop
inc
push
mov
adc
sbb
das
adc
or
lds
dec
jl
mov
test
adc
imul
lods
push
lock
adc
xchg
addr16
add
push
adc
pop
mov
mov
lock
scas
mov
push
push
aad
push
sbb
sbb
xchg
aas
adc
dec
jnp
sets
adc
jg
push
mov
cmp
cld
push
add
mov
mov
add
and
push
push
mov
das
pop
push
bound
outsl
dec
add
add
xor
or
inc
adc
add
sub
add
call
xchg
pop
jp
add
movaps
xchg
mov
sub
sub
out
sbb
sbb
jo
push
movsb
inc
and
test
xor
or
mov
add
mov
or
sbb
inc
adcb
and
mov
xor
push
sbb
outsl
push
dec
sbb
in
pop
sub
in
jl
add
mov
inc
dec
dec
mov
cmp
inc
imul
cs
repz
das
xor
lret
in
stc
aaa
xor
mov
and
pop
jae
ss
inc
je
outsl
inc
xchg
lret
movsl
insl
inc
je
int3
dec
push
dec
mov
dec
jae
xor
dec
jl
push
js
fisubrl
mov
cmp
xor
push
insb
mov
in
dec
insb
scas
or
jno
cmpsb
xor
add
lock
insb
aaa
lds
arpl
hlt
daa
mov
aaa
je
mov
enter
xor
mov
cmpsb
fldcw
roll
xchg
mov
les
out
xor
lock
inc
xlat
cmpsb
cltd
dec
jnp
test
or
or
nop
pop
lret
xor
adc
insl
jae
pop
iret
rolb
pop
shll
inc
das
rcll
inc
push
or
cltd
je
mov
repnz
fistl
jecxz
in
xchg
out
imul
shl
mov
jae
cs
ljmpw
repz
jmp
adc
cld
in
mov
mov
out
xor
outsl
or
lcall
add
cmp
enter
rcrl
push
push
mov
lods
mov
outsl
test
mov
xchg
fisttps
xor
or
pop
inc
aam
push
mov
jg
inc
xor
inc
dec
test
pop
rcrl
adc
adc
dec
sub
push
mov
add
movsb
adc
fiaddl
loopne
sahf
push
stos
inc
outsl
int
mov
loopne
adc
shlb
aam
and
loopne
dec
rcrl
test
scas
adc
dec
jae
les
mov
add
mov
int3
adc
mov
cmp
loop
mul
fldt
jmp
lock
dec
jae
lcall
repnz
push
and
mov
xlat
lahf
loopne
xchg
dec
push
je
nop
mov
stos
push
mov
dec
pop
push
repnz
push
mov
faddl
mov
cmp
pop
lcall
pop
jae
cs
jo
mov
fisubs
dec
in
fs
shlb
imul
sbb
imul
fmuls
leave
adc
je
pop
cs
movsl
fmul
xlat
dec
in
in
repz
xlat
pop
lahf
ljmp
fsubrs
outsl
idiv
psubb
sar
test
into
or
push
test
cld
or
push
mov
adc
les
test
lahf
add
dec
das
adc
add
mov
pop
add
dec
push
lods
leave
cmpsl
and
andb
lods
ficomps
loope
pop
in
scas
cmpsb
movsl
aam
xchg
sbb
pop
dec
jae
push
lcall
test
out
and
push
aaa
mov
dec
out
daa
xor
roll
push
push
mov
iret
and
lock
push
xchg
enter
daa
das
clc
in
stc
and
pop
xchg
mov
and
int3
addr16
mov
mov
mov
out
add
mov
dec
cs
popa
add
mov
rcrb
cmp
in
in
ss
mov
push
in
mov
push
test
mov
add
test
push
sub
aaa
cs
xor
pop
cltd
test
fwait
cwtl
or
push
ret
fs
addr16
nop
mov
popl
dec
adc
jle
jae
cltd
mov
or
test
in
pop
dec
dec
cmpsb
mov
add
pop
push
or
pop
add
jae
cmp
bound
mov
xchg
jnp
cwtl
or
add
dec
push
dec
cmc
call
add
jo
dec
ret
in
pop
xor
dec
jae
or
xchg
xor
fstl
xor
insl
or
sbb
cmp
lahf
outsb
mov
and
adc
aam
test
lea
adcl
jnp
inc
mov
jnp
insl
dec
push
pop
or
sbb
push
je
mov
fsub
push
or
push
add
or
push
imul
ss
rol
xorl
loopne
or
imul
xor
clts
sti
push
push
jb
dec
xor
cmpsl
gs
mov
jl
add
push
or
pushf
adc
sub
cld
adc
xor
fidivl
sbb
jbe
sbbl
push
imul
iret
add
pop
push
js
lret
in
push
or
das
sahf
cs
inc
ja
jo
or
loopne
fmuls
pop
jo
sti
lcall
adc
push
insl
inc
jo
cmpsb
adc
or
shlb
mov
test
jecxz
sbb
or
addr16
mull
push
add
pop
bound
es
jecxz
add
jmp
inc
cwtl
and
push
adc
inc
sub
cmp
add
jae
mov
sub
repz
ljmp
pop
push
inc
mov
push
clc
fimuls
add
insl
inc
jo
add
mov
and
push
inc
dec
fs
cmpsb
int
adc
testl
push
mov
movsl
jne
xor
add
mov
mov
sub
dec
fsubs
ds
pminub
cwtl
ret
ja
adc
outsb
mov
add
push
xchg
mov
addr16
push
add
mov
mov
pop
outsl
jo
popw
pusha
pop
cmp
fnstenv
movb
push
test
iret
mov
dec
adc
je
fs
xchg
clc
dec
enter
cmp
or
cmp
xor
add
and
pushf
sbb
fnstcw
push
inc
adc
aas
mov
add
push
in
lods
pop
jo
rolb
mov
lahf
mov
das
outsl
mov
pop
add
in
add
inc
pop
fiaddl
cmpb
insb
xchg
lret
rcrb
insl
iret
mulb
enter
mov
repnz
mov
hlt
in
cs
fsubs
xchg
add
mov
inc
pop
cmp
pop
pushw
unpcklps
sbb
mov
and
cmp
loopne
xor
adc
test
xor
mov
cmp
xor
stc
insb
jg
cmpb
mov
repnz
pop
outsl
and
aam
inc
sbb
js
cmpb
jl
xchg
xor
mov
jl
lods
repz
decl
addps
adc
push
inc
pusha
adc
fidivs
decl
add
in
mov
or
or
jo
or
in
out
add
cmp
call
aam
movsl
lods
out
add
ret
idiv
stos
in
jo
ret
in
frstor
adc
enter
outsb
js
cmp
inc
fists
and
in
mov
imul
adc
iret
test
scas
stos
push
sub
sbb
or
push
add
imul
insl
and
add
enter
push
and
aas
mov
or
cmp
mov
ret
xor
dec
dec
dec
xor
ja
mov
mov
pop
les
leave
jns
nop
out
cmp
fmulp
and
inc
clc
dec
xor
add
in
xchg
push
add
sbbl
or
inc
push
push
pop
adc
adc
sbb
and
adc
push
or
or
jb
sbbl
sbb
push
sysret
cmp
inc
and
and
and
sbbl
adc
adc
inc
push
jb
adc
and
cmp
xor
xor
xor
nop
sbbl
sbb
sbb
sbb
cmp
ds
inc
and
and
cmp
inc
ds
jl
jb
cmpsl
sub
int3
lods
into
testl
into
sub
xor
inc
into
hlt
hlt
hlt
sbb
enter
hlt
jb
and
and
and
hlt
xchg
enter
hlt
sbb
enter
hlt
jb
and
and
and
hlt
in
jb
hlt
hlt
adc
jb
sbbl
inc
cmp
cmp
inc
push
dec
ds
aas
dec
pop
pop
jns
push
push
push
hlt
rolb
int
lcall
push
or
cwtl
int3
lock
cmpl
adc
push
aas
mov
sahf
jbe
pop
enter
addb
push
add
cmpsl
scas
jecxz
add
inc
arpl
cmpsl
fmul
xor
in
in
loopne
movaps
sbb
decl
data16
jns
test
outsl
test
dec
test
mov
icebp
mov
xchg
add
aam
mov
and
pop
sbb
mov
stos
mov
sub
scas
mov
rcr
fdivl
jo
jmp
adc
sbb
and
ljmp
out
fwait
adc
and
call
sbb
ret
jne,pt
xchg
pop
sbb
or
setno
push
hlt
and
dec
mov
mov
dec
bnd
fsubr
lock
clc
xor
adc
and
and
pop
push
or
jl
mov
cmp
mulb
or
xor
inc
aaa
adc
outsl
fs
or
int
int
xor
daa
add
adc
mov
pop
insb
and
adc
lds
pop
aad
call
ljmp
inc
adc
add
mov
arpl
pusha
pop
ficomps
jge
pop
sbbl
insb
js
jl
mov
popf
cmp
push
add
jnp
cmp
sbb
and
or
pop
and
sub
stc
or
add
sbb
sbb
jmp
fidivrs
xor
js
mov
xor
sub
adc
insb
call
pusha
push
lock
ret
add
orl
xchg
test
push
cmpsl
ret
or
imul
pop
jbe
pushf
mov
adc
inc
int
sbb
xor
xchg
mov
pop
jbe
xor
cmp
repnz
sub
xchg
das
pop
push
mul
daa
push
xor
popa
cmp
notl
push
push
call
ret
insl
pop
dec
nop
jo
cmpsl
aas
cmpsb
lret
arpl
adc
loope
xchg
shrb
pop
ljmp
dec
cmpsb
dec
js
mov
loop
aam
out
cwtl
rcrl
in
call
add
push
jnp
stos
inc
push
ret
pop
aad
test
cmp
xor
sbb
pusha
pop
sub
roll
push
das
shll
dec
xchg
jg
or
adc
xchg
clc
cmp
call
mov
inc
ds
xchg
inc
lahf
lods
xlat
xor
scas
add
and
outsl
and
call
jge
aam
ret
xor
add
div
mov
stos
test
lods
faddp
jmp
dec
ret
sbb
and
das
dec
push
mov
sbb
push
call
inc
mov
stc
inc
mov
jg
rcll
aas
nop
mov
les
shrb
insl
ds
fcoms
out
loope
sub
call
aas
clc
clc
pop
or
adc
adc
cmpsl
and
leave
test
add
arpl
adc
jg
mov
and
into
movsb
cmpb
jne
xchg
enter
xor
sbb
js
int3
or
xor
call
dec
dec
sbb
aas
lret
inc
cmp
int
aas
inc
sub
sbb
insb
xor
cmp
dec
cs
fcompl
dec
sbb
ficoml
push
pop
aas
pusha
sub
dec
push
mov
sub
mov
cwtl
mov
sub
shrb
sbb
loopne
inc
leave
inc
jb
add
and
xchg
or
xor
inc
leave
push
pusha
adcb
or
shrb
inc
leave
loopne
add
sub
dec
jo
dec
push
mov
loopne
and
xchg
and
xchg
pop
and
lock
mov
push
pusha
add
xchg
adc
inc
jb
mov
enter
or
or
mov
and
sub
inc
sub
pushl
push
add
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
jmp
cwtl
fcmovnb
in
in
pop
push
mov
cltd
and
and
popa
je
cli
lcall
xor
xor
xor
inc
inc
inc
inc
inc
inc
fisubs
lcall
in
inc
add
push
jne
or
dec
sahf
cmp
sub
cmp
inc
push
push
repnz
xchg
daa
pop
pop
jo
jl
add
mov
xchg
add
movsb
adc
repnz
xchg
sbb
sub
faddl
cmp
in
push
clc
pop
jbe
pop
adc
cmp
enter
add
sub
inc
add
in
daa
inc
dec
cmp
adc
sbb
jl
test
nop
sbb
mov
repnz
xchg
sbb
cmp
sbb
fdivrs
in
inc
ds
and
cmp
sbb
mov
push
jns
sbb
sbb
sub
outsl
sbb
mov
fistps
insb
dec
jo
jo
ficomps
sub
fistpll
je
add
das
bnd
fs
jg
pop
inc
cmp
loope
jns
inc
in
push
fidivrs
into
fdivp
add
unpcklps
sbb
sub
xchg
mov
cmp
das
fdivrl
nop
inc
pop
xchg
inc
push
into
push
push
mov
inc
mov
das
jl
inc
dec
sarl
pop
xchg
aam
sub
sbb
stos
adc
mov
push
push
mul
roll
adc
sbb
mov
adc
in
add
dec
pop
add
cwtl
pusha
int3
lret
in
pop
popa
fs
bound
xlat
pop
lcall
addr16
mov
cs
or
sub
push
push
imul
insl
bound
add
mov
sbb
add
add
orl
push
pop
orl
or
or
enter
or
and
adc
xor
enter
sahf
push
ja
pop
add
sub
sbb
fistl
jno
setae
mov
addb
nop
sbb
aaa
inc
mov
add
loope
ds
aas
adc
pop
es
inc
push
cmp
imul
imul
imul
cmpsb
imul
in
hlt
cld
mov
dec
shll
sub
push
inc
shll
inc
dec
outsl
imul
gs
inc
shll
jecxz
pop
in
js
in
push
add
fisttpl
pop
fnop
test
ret
aad
and
sbb
testb
or
add
push
xchg
add
int3
fmulp
mov
or
mov
add
rolb
xor
addr16
push
jbe
pop
mov
or
or
ja
add
or
or
or
pusha
lods
mov
or
mov
rolb
dec
shll
call
pop
je
dec
shll
lods
enter
imul
imul
fstps
adc
shlb
push
push
sub
movsb
inc
xorl
ret
mov
fimuls
es
push
push
jp
inc
or
add
shrb
out
push
incl
movsb
fldl
or
icebp
cmp
or
pop
jmp
repnz
add
dec
pop
dec
mov
lods
dec
mov
addr16
ss
pop
outsb
in
push
cld
xchg
test
pop
lcall
test
test
cs
sub
imul
mov
lret
adc
push
cmp
dec
or
icebp
or
cld
mov
jmp
nop
fs
pushl
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movsl
in
bound
dec
mov
decl
cmp
jmp
sbb
mov
dec
jge
dec
pushf
sbbb
aam
out
mov
push
jp
inc
inc
xchg
imul
lds
cmp
ret
dec
decb
test
or
leave
push
pop
mov
dec
lods
insl
ljmp
stos
push
xchg
cltd
add
fistl
add
repnz
loopne
sbbb
lahf
sbb
rol
add
pop
add
in
pushf
sbb
decl
sbb
enter
lcall
add
fadd
and
jl
out
lret
sti
push
or
shld
or
add
mul
pop
sub
push
adc
jo
pushf
adc
sahf
cmp
or
add
and
sbb
xchg
daa
fisttps
sub
adc
enter
and
or
leave
xchg
daa
dec
insb
adc
jns
hlt
add
sbb
xor
push
pop
mov
add
add
and
rclb
add
sub
dec
or
jns
in
es
sub
push
dec
addb
adc
jns
in
sub
mov
xchg
daa
cmp
mov
or
in
pusha
fimuls
cmp
sbb
adc
sub
xchg
inc
jg
or
pop
jnp
mov
push
pop
and
repz
or
adc
or
imul
or
pop
pop
pop
in
or
or
add
data16
xor
adc
and
sbb
or
sbb
outsb
xor
cmpsb
sahf
bound
jne
sub
inc
jb
xchg
push
pop
push
pop
imul
mov
cmpsb
imul
pop
push
adc
and
dec
xor
shll
fs
xchg
in
dec
shrl
cli
add
cmpsb
repz
lock
push
cmc
cmp
cmc
out
repz
fbld
cwtl
clc
fmull
mov
jmp
lahf
jl
jl
or
fidivs
pop
clc
mov
out
out
lahf
cli
mov
cmc
out
fdivr
jmp
js
out
aad
cld
std
xor
fisubrs
mov
fidivrs
cld
sub
cli
jns
lock
xor
lock
inc
jle
pop
cli
int
jmp
jmp
in
out
stc
out
fidivrl
mov
push
push
decl
sbb
movsb
mov
cmpb
repz
int
pop
jnp
cli
xorb
jg
pusha
call
add
iret
lahf
aas
test
arpl
fcoml
enter
jg
jl
lock
jl
hlt
movsb
pusha
inc
jmp
xor
lahf
aas
pushf
jmp
in
mov
and
jg
jl
sbb
push
sub
cwtl
jmp
lahf
jp
mov
call
out
in
fdivrp
rorb
inc
lods
push
test
mov
cs
ljmp
cld
stc
sti
out
jg
jg
nop
out
nop
push
xor
call
pusha
mov
aas
jg
mov
movsl
and
mov
enter
pop
lahf
xorb
int
push
push
jl
stc
sti
test
data16
fdivrl
jno
adc
xchg
ds
lahf
aas
dec
mov
imul
movsl
lea
xor
repz
lahf
jg
add
lcall
mov
aas
jg
stc
lock
out
out
andl
lcall
fsub
test
lahf
cli
mov
xchg
in
push
dec
add
cmp
ror
pusha
inc
loopne
pop
jl
ds
jg
les
push
test
inc
imul
lahf
int
sbb
jo
add
rcll
cmp
mov
and
xor
push
dec
add
sbb
stc
out
xor
and
add
xchg
xor
out
fucomi
xor
pop
mov
mov
stc
repz
jo
in
mov
loop
and
jo
cld
jns
cmp
call
sar
mov
iret
lahf
outsl
clc
out
sub
and
jo
dec
frstor
repz
mov
mov
inc
lret
fdivl
outsl
cld
jnp
out
mov
ja
cltd
in
cmc
cld
or
pushf
rcl
rol
out
push
in
cld
stc
out
xorb
jo
nop
fs
cmc
cmc
jg
dec
js
bsf
imul
out
aaa
mov
dec
cmp
dec
push
xchg
stc
pushf
test
lock
leave
in
xchg
mov
inc
sbb
xor
mov
push
adc
and
sub
dec
shll
pop
xor
xor
je
dec
out
mov
jbe
les
fsubr
pushf
add
xor
push
test
mov
roll
adc
aam
add
adc
lret
xchg
pop
andb
or
adc
scas
push
push
add
in
test
dec
repz
fcmovnb
jg
jg
mov
xor
cli
sti
cld
std
shll
add
dec
shll
add
lods
mov
lods
call
mov
xor
pop
mov
xchg
add
test
add
add
mov
aaa
or
sbb
mov
add
or
pop
add
xchg
xor
jnp
add
inc
and
mov
daa
and
and
add
lods
dec
out
inc
jg
push
add
in
dec
fidivs
push
add
add
pop
das
xchg
scas
lods
pusha
cmpsl
sub
sbb
or
dec
pop
or
aam
cvtps2pd
push
ljmp
daa
enter
pop
add
dec
sahf
cmp
and
inc
imull
mov
in
xchg
daa
test
int3
repz
jns
or
sub
dec
out
insb
out
in
xchg
daa
mov
movsb
in
enter
cmp
in
pop
or
addr16
sbb
push
sbb
mov
movsl
mov
iret
or
pop
adc
cwtl
push
mov
scas
int3
add
rcll
and
xchg
jbe
imul
push
fadds
aad
mov
add
or
or
add
inc
or
les
push
hlt
dec
jp
mov
cmp
dec
test
fwait
test
iret
adc
cmp
jo
idivl
xchg
loope
add
xchg
sahf
cmp
cld
add
out
sub
insl
mov
jecxz
cmp
fcmovnb
and
sti
ljmp
test
pop
jge
sub
sti
es
sbb
push
in
lret
fcompl
push
jnp
mov
xor
mov
imul
push
add
sub
push
imul
xchg
mov
ss
and
ret
loopne
pusha
add
in
es
rclb
and
fs
add
xor
repnz
and
sti
aaa
shlb
add
dec
dec
dec
or
shlb
std
dec
add
push
dec
xor
add
dec
inc
dec
add
leave
rolb
add
or
or
outsb
jne
jae
mov
popa
outsb
in
arpl
sub
fs
add
dec
fisubl
cli
add
or
inc
dec
and
arpl
add
jbe
out
inc
shl
add
or
ret
outsb
outsl
add
xchg
pop
imul
test
pop
pusha
das
adc
scas
add
and
xor
pusha
stos
das
arpl
pusha
mov
and
insb
insb
and
inc
int3
out
xor
addr16
outsb
idivb
and
and
sbb
fcmovne
dec
and
bound
aas
xor
push
insl
imul
orb
lods
lret
arpl
imul
pusha
and
mov
lods
mov
movsb
push
movsl
adcb
pop
xor
bt
je
cmc
xor
aad
neg
cmp
and
sbb
ss
sbb
rclb
mov
lahf
adc
or
jmp
add
add
jnp
mov
popf
popa
data16
aas
and
idiv
jecxz
xor
and
out
jb
inc
jae
loopne
pop
test
push
xor
ja
push
shll
mov
repz
add
mov
xor
inc
lret
roll
xor
or
ret
or
dec
dec
dec
push
lods
dec
fmull
andb
jae
push
lods
fldcw
and
arpl
insl
sbb
mov
aam
ficompl
mov
sbb
aam
movsl
and
or
dec
sbb
sub
pop
xchg
inc
sub
dec
jecxz
ljmp
aaa
adc
leave
sub
outsb
xchg
les
dec
pop
push
cmp
outsl
imul
ret
pcmpgtd
std
jo
inc
push
pop
push
fldcw
dec
insl
mov
insb
clc
push
mov
cld
jae
sbb
xchg
push
rcll
mov
hlt
jecxz
add
rcrb
out
ljmp
ja
pop
adc
scas
js
popf
pop
push
sti
pop
sub
push
sub
fstpt
push
jno
pop
out
cmp
adc
aaa
add
pop
cmp
sbbl
pushf
arpl
push
les
outsb
sub
insb
sbb
aad
mov
cmpsb
adc
orl
xor
sahf
push
dec
adc
test
mov
js
add
xlat
pop
imul
xor
pop
inc
mull
mov
daa
cmp
outsl
int3
cmpsb
jns
or
insb
dec
push
mov
ret
push
sub
pop
jne
sti
inc
mov
pop
adc
and
xor
adc
and
popa
sub
inc
xor
adcb
adc
inc
scas
cmp
adc
push
xchg
rcll
jns
js
shlb
out
sbb
adc
sub
dec
or
lods
jp
jmp
jbe
jo
cmp
jo
mov
cmp
sbb
movsl
jns
cmpsb
adc
pop
cmp
testb
sbb
mov
rcll
jo
and
xchg
pop
bound
loopne
test
loopne
rolb
pop
add
lea
inc
mov
outsb
jns
xor
pushf
push
sub
dec
nop
pop
setbe
add
popa
insb
negl
pop
jb
pop
xor
aaa
mov
out
dec
insl
push
sub
dec
pop
cmpl
dec
pop
test
and
pusha
or
dec
adc
fcoms
push
fcoml
adc
js
pop
aas
or
outsl
pusha
mov
enter
jo
lods
adc
insl
cs
mov
mov
dec
push
dec
mov
loopne
push
jecxz
rcrl
movb
adc
and
sub
xor
push
in
adc
sub
adc
das
xor
andl
sbb
in
xor
fnsave
pop
sub
cmc
setno
push
inc
push
inc
sub
popa
xor
shll
aaa
mov
or
popf
in
orb
movsb
sub
pop
dec
leave
out
test
pop
jl
aas
push
hlt
mov
jge
or
or
jp
push
sbb
ds
ja
lock
dec
add
xchg
sbb
add
or
and
add
dec
adc
inc
add
sub
add
jne
push
pop
dec
inc
push
or
negb
inc
dec
pop
or
inc
push
push
pop
sbb
mov
inc
stc
dec
inc
dec
inc
inc
cmp
or
fimull
js
cwtl
ltr
aas
jnp
cs
sub
pop
data16
negb
jg
incl
lcall
xchg
sbb
shlb
pop
cld
pop
inc
bound
lret
pop
cmovno
in
and
add
xchg
andl
sbb
push
dec
mov
adc
cmp
cmp
cs
ss
aas
in
shlb
add
incl
xchg
inc
roll
or
subl
addr16
push
sub
or
lret
pop
rcrb
addl
mov
lea
ds
add
ror
negb
or
outsb
outsb
outsb
outsb
or
add
adc
int
add
adc
fildll
outsb
outsb
adc
in
add
adc
sti
aaa
aaa
das
outsl
pop
add
add
add
sbb
adc
add
aaa
aaa
aaa
aaa
sbb
and
add
and
dec
and
adc
add
add
and
pop
inc
add
fwait
and
imul
jae
push
jmp
jp
pop
add
xchg
add
add
mov
xchg
les
cmp
add
mov
add
mov
push
add
add
daa
add
xlat
int
getsec
mov
repz
add
and
add
or
loop
add
and
add
sub
ljmp
outsb
clc
jo
add
add
bound
add
add
insl
mov
outsb
adc
add
inc
int
pcmpeqd
jnp
add
das
add
xor
dec
add
or
push
dec
mov
jae
cmp
add
push
and
add
mov
xor
jecxz
sbb
sbb
out
sub
dec
add
xor
jg
add
xor
mov
add
add
add
add
mov
enter
adc
cmp
fdivrs
fcmove
sbb
sbb
loopne
sbb
sbb
lcall
push
in
lret
sbb
fnsave
add
add
sbb
and
mov
add
mov
mov
ret
imul
mov
jae
lahf
lods
jno
popa
adc
out
fs
outsw
adc
jmp
cli
popf
adc
fs
insl
popa
fs
or
add
jns
imul
fwait
inc
arpl
or
fnstcw
lds
insl
inc
sub
popf
jo
pop
xor
sti
xor
inc
movsl
dec
jae
imul
je
jb
cmp
imul
jb
pcmpeqd
addr16
mov
jne
inc
gs
insb
rorb
es
lock
imul
push
sub
divl
pop
push
mov
mov
outsl
outsl
pcmpgtw
ja
imul
les
sti
sbb
sarl
mov
adc
push
pop
mov
daa
outsl
jae
aam
insl
pop
inc
dec
test
testl
or
imul
pop
inc
adc
lret
insb
add
jns
fabs
sahf
aaa
js
fs
add
cmp
filds
inc
dec
arpl
sub
xor
mov
pop
pop
push
and
dec
dec
imul
mov
or
dec
insb
pop
fisttpll
in
imul
fimull
mov
ds
dec
cmp
xchg
or
mov
arpl
addr16
add
in
push
sub
outsl
and
push
imul
push
addr16
int
mov
popa
add
popa
fcompl
jbe
push
fstpl
jns
or
imul
adc
insb
aaa
out
lds
sbb
negl
rorb
dec
ja
lret
aas
fiaddl
gs
filds
push
gs
jne
iret
push
ja
mov
imul
into
pop
imul
mov
lock
cmp
pop
add
jo
outsl
push
les
nopl
sbb
enter
push
adc
fs
inc
sbb
or
and
and
adc
addb
dec
or
pop
aas
adc
add
push
fs
out
adc
pop
negb
cmp
enter
push
sbb
cmp
rorb
inc
push
sbb
dec
or
lret
iret
iret
popa
insb
nop
inc
xchg
rcl
mov
xor
adc
loopne
fs
fcmovu
fildl
inc
sahf
inc
scas
lahf
cmp
or
xchg
add
mov
or
enter
jg
sbb
pop
sub
xchg
nopl
fdivs
xor
fs
inc
push
xor
push
sbb
fdivs
sub
out
orl
es
adc
and
sub
cmp
or
out
adc
mov
adc
mov
sbb
cmpb
pop
es
pop
fsubs
addl
add
sbb
scas
and
push
fildl
sbb
loope
shll
nop
jbe
or
das
fsubs
orl
lret
add
inc
mov
xor
push
stos
mov
fidivs
pop
mov
hlt
and
stc
iret
push
or
and
cmp
push
and
sahf
fdivrl
jns
add
sbb
ud2
dec
cmovae
jo
push
xor
scas
dec
or
dec
add
adc
mov
lar
arpl
adc
mov
sbb
enter
sbb
or
fidivrs
push
add
pop
xor
leave
and
aaa
inc
xchg
or
aas
out
nop
ja
sbb
jns
or
or
outsl
add
add
enter
push
pop
cmovno
outsl
adc
adc
insb
enter
adc
inc
push
sbb
sub
sub
fcomps
push
pop
enter
or
pxor
push
pop
xor
and
ss
popa
orl
pop
sbb
push
sbb
and
and
xor
and
lahf
nop
popa
orl
pop
das
push
cmp
das
cs
nop
ja
push
aas
scas
out
or
insb
and
and
xor
cmp
aas
cmp
sbb
or
invd
orb
adc
push
jns
es
or
push
fs
or
insl
insb
mov
push
inc
push
cmp
pop
jb
fs
sbb
dec
mov
sbb
das
sub
adc
push
push
fbstp
xor
sbb
pop
sbb
push
sbb
xor
pop
pop
nop
inc
fimuls
add
aas
orl
adc
test
and
and
inc
push
sbb
fs
push
and
or
fs
inc
or
adc
jg
daa
mov
xor
or
popa
jg
mov
pushf
mov
push
sbb
xor
pop
or
xchg
push
jns
in
or
in
nop
inc
adc
push
cmp
push
adc
or
push
out
add
cmpps
pop
inc
loop
leave
cmp
dec
and
fs
aaa
enter
or
sbb
mov
mov
idivl
inc
out
or
pushf
nop
adc
and
fimuls
das
sbb
sbb
add
or
push
lahf
mov
in
fisttps
mov
pop
xlat
jmp
out
push
pop
adc
or
lahf
sbb
sbb
jo
xchg
das
adc
scas
or
nop
pop
sbb
outsb
outsl
fstpt
aad
psubusb
das
in
add
adc
outsl
or
push
adc
into
in
adc
outsl
cmp
pop
push
ret
xchg
push
pop
outsl
sbb
sbb
sbb
out
push
pop
jle
das
cmp
pop
nop
arpl
push
aas
dec
das
cmp
adc
addr16
das
mov
pop
cmp
xor
or
inc
outsl
inc
dec
fs
inc
fidivrs
push
pop
or
xchg
dec
inc
addr16
xchg
ja
adc
add
inc
add
inc
push
or
incl
jg
sbb
adc
pi2fw
inc
scas
inc
inc
rdmsr
insb
fcoms
adc
daa
xchg
sub
dec
or
push
scas
ljmp
dec
sub
jb
nop
fisttpl
jbe
inc
cs
pop
push
push
fs
ja
or
aas
or
ficomps
ds
push
aas
sub
fwait
iret
sub
add
sub
clts
push
pop
pop
lcall
inc
add
or
add
mov
or
adc
or
mov
decl
add
mov
mov
sbb
adc
adc
add
cmpsb
imul
adc
and
ficoml
push
out
mov
pop
adc
push
pop
insl
bound
pop
add
pop
push
arpl
push
add
push
pop
sbb
ss
in
sbb
sbb
sbb
or
add
pop
inc
and
and
in
add
mov
xchg
ljmp
or
mov
jbe
add
sub
inc
sub
add
insb
fsubrs
das
cmp
sbb
mov
es
push
fwait
adc
shll
sbb
adc
add
and
les
cmp
push
cmp
mov
shrb
and
stc
lea
or
inc
inc
xchg
inc
sarb
mov
add
ficoms
cmpsb
outsb
push
ljmp
or
mov
dec
pop
add
add
insl
mov
add
xchg
dec
leave
push
push
or
leave
adc
push
or
das
push
pop
add
push
stos
daa
xchg
or
movhps
push
xor
outsl
add
add
push
pop
and
add
pop
push
pop
fldl
in
test
push
daa
pusha
add
push
lods
jle
add
sahf
outsl
fidivrl
imul
insb
xchg
pop
dec
and
add
mov
jb
xchg
int3
fidivrl
jbe
ja
xor
jns
notb
jp
add
sbb
push
sahf
cltd
push
cmp
pop
push
add
adc
adcb
test
pop
pop
push
test
xchg
or
mov
aam
jbe
mov
mov
jnp
push
jg
add
orl
mov
rorb
add
jb
push
xchg
add
or
push
push
sub
push
inc
adcb
pop
nop
add
shll
lcall
xchg
pop
xchg
add
lds
outsb
xchg
add
mov
xchg
add
lahf
addr16
push
add
push
xchg
xchg
sbb
fs
lcall
push
fwait
xchg
test
rcr
cltd
sahf
lahf
add
jb
adc
cmp
or
mov
pop
fisubl
rcrb
sub
add
movsl
loop
pop
pop
xchg
fildl
cmpsb
add
dec
aad
pusha
imul
push
pop
data16
mov
mov
cmpsl
add
sub
cmovb
pusha
imul
xor
in
test
imul
lods
cmpsl
lods
add
sbb
scas
add
or
push
insl
and
add
pop
prefetch
add
xor
mov
dec
mov
mov
push
mov
inc
pop
insl
sub
aaa
pop
faddl
leave
push
sub
mov
andb
mov
das
in
inc
leave
aad
mov
ja
mov
mov
jbe
mov
add
mov
or
insl
iret
fcoml
mov
shll
fdivs
jnp
add
inc
in
push
mov
mov
fcmovnbe
add
pop
sub
xchg
xchg
es
adc
push
mov
mov
sub
xchg
cmp
mov
mov
lods
ffree
imul
push
ret
add
fwait
mov
insl
mov
mov
incl
pop
fildl
mov
and
cmpsb
sbb
lds
and
push
mov
lods
or
push
add
push
bsr
add
out
fidivs
lods
push
enter
es
lret
adc
add
and
push
lret
add
or
dec
push
int3
push
add
pop
and
pop
dec
fidivrl
into
and
adc
int3
das
push
jns
lea
and
add
rcll
insl
sub
rolb
push
add
mov
push
in
pop
push
imul
or
xchg
mov
insb
rolb
aam
and
test
insb
sbb
ss
add
or
fiaddl
dec
lcall
fcmovu
push
ficompl
pop
fimull
add
popa
mov
cmp
add
or
mov
push
sbb
nop
mov
xor
fiadds
stos
lods
movl
imul
loopne
push
nop
add
in
xchg
cmpsl
fnsave
in
out
add
or
nop
and
mov
fs
push
loop
pop
mov
mov
loope
sahf
add
inc
repnz
inc
insb
test
push
das
push
add
dec
adc
call
insl
insl
adc
aas
push
jmp
sub
stos
shrb
pop
pop
mov
mov
dec
add
jnp
jmp
dec
xor
add
out
enter
push
out
lds
lock
leave
add
mov
add
mov
push
andb
mov
push
aas
push
aas
call
push
nop
lahf
push
pop
sub
or
outsl
add
add
add
mulb
adc
nop
add
push
imull
or
data16
clc
push
jnp
in
cli
add
cld
add
jg
or
and
xchg
xchg
call
add
insb
pop
sbb
add
mov
add
and
mov
add
adc
add
aaa
push
add
sub
pop
add
jg
add
dec
es
or
add
or
or
or
aad
rolb
cmpsl
sgdtl
push
cmp
test
icebp
sarl
add
xor
adc
pop
insl
sbb
adc
add
pop
add
fsubrs
sbb
sub
add
xchg
sbb
add
add
insl
insb
sub
sub
inc
sbb
sbb
xchg
or
out
sbb
add
or
mulb
inc
mov
frstor
ja
jg
cmp
add
and
add
data16
and
es
daa
add
push
add
in
pop
sub
sub
sub
outsb
arpl
add
and
in
push
aas
sub
add
nop
or
mov
dec
inc
mov
pop
mov
jnp
pop
in
insl
ja
push
mov
xor
add
loopne
xor
add
xchg
and
cmp
ss
add
sbb
inc
xor
add
fwait
add
sub
cmp
add
leave
adc
push
add
mov
jl
mov
cmp
cmp
in
add
push
add
faddp
and
scas
and
aas
add
inc
mov
adc
add
aaa
data16
jg
in
push
mov
pop
ret
pop
push
imul
inc
adc
dec
jg
push
sbb
roll
pop
mov
cmp
dec
add
dec
push
add
dec
add
fnstenv
jg
jg
add
aas
pop
add
add
ja
mov
outsb
mov
out
pop
push
mov
add
add
adc
xchg
add
arpl
imul
pop
nopl
mov
add
dec
in
xchg
outsl
add
aas
adcl
xchg
or
adc
jae
shr
add
push
xor
xlat
out
push
rclb
fcmove
add
fs
in
inc
fimuls
das
aas
add
in
or
add
inc
enter
xchg
push
enter
adc
cmp
or
pop
mov
imul
and
pop
push
divb
pop
add
jg
pop
fsubr
pop
sbbl
xor
repnz
mov
add
aaa
pop
sahf
add
pop
add
push
jb
pusha
popa
jno
into
adcb
add
add
pop
push
dec
or
ss
scas
xchg
add
xor
mov
mov
fwait
rcll
jg
or
pusha
mov
and
adc
or
bound
arpl
add
les
push
adc
pusha
adc
push
mov
jnp
and
mov
scas
andb
push
push
mov
insl
adc
and
add
jo
mov
xor
pop
mov
inc
pop
incl
mov
inc
and
xchg
push
add
jae
test
pop
pop
insb
add
mov
xchg
add
lcall
addl
add
add
mov
jb
add
imul
add
outsb
inc
sub
or
mov
outsb
pop
outsl
add
inc
inc
pusha
add
jno
add
or
fcmovnbe
push
rcrb
je
add
mov
lahf
mov
push
jg
or
push
mov
push
add
push
aas
pop
outsb
insl
xor
adc
inc
pop
inc
pop
push
nop
pop
add
add
push
inc
pop
adc
push
mov
add
inc
and
stos
les
aaa
js
jecxz
cs
scas
pop
or
add
sbb
pop
loopne
in
stos
or
lods
and
push
jns
add
sti
lret
pop
and
add
mov
jnp
add
jl
sub
jmp
jl
push
jge
add
sbb
mov
nop
stos
inc
xor
xchg
or
and
jle
jmp
add
jg
adc
jg
adcb
daa
mov
jg
add
inc
out
push
mov
test
pushaw
call
inc
pushl
mov
addl
xchg
iret
subl
incl
add
add
adc
cs
push
insb
push
and
aaa
mov
sahf
add
sub
sub
adc
or
and
adc
adc
or
cmpl
add
adc
or
int3
xchg
xchg
mov
mov
movlps
int
insb
add
fisubrl
test
decl
in
nop
call
jns
xchg
xchg
in
pusha
sbb
xchg
jnp
sbb
adc
and
xchg
cwtl
enter
cltd
lcall
jnp
mov
sahf
add
ss
sbb
sti
insb
mov
lahf
mov
mov
sti
push
mov
adc
cmp
add
dec
push
push
mov
in
cmpsl
test
adc
push
popl
or
and
inc
repnz
mov
insl
mov
pop
or
and
push
dec
adc
lds
ret
adc
or
mov
push
add
aad
xchg
sarb
sbb
pop
or
les
in
sbb
push
jo
dec
add
mov
sbb
or
jg
adc
xor
mov
push
test
add
mov
or
sbb
jmp
popa
pusha
push
and
add
add
xor
inc
mov
add
pop
fisubrl
add
push
leave
mov
adc
push
inc
and
mov
cmp
mov
jg
xchg
popf
or
pop
stos
add
mov
stc
cmp
add
xor
and
stc
push
add
add
rorb
in
adc
add
push
add
inc
sbbb
orb
ds
mov
incl
mov
add
mov
mov
add
sub
jns
add
insl
pop
add
out
fildl
push
in
in
add
mov
mov
inc
add
add
ftst
fstp
or
sbb
shlb
mov
popl
add
ret
add
shrl
les
add
sbb
add
in
push
add
mov
and
mov
mov
stos
popa
push
add
mov
movl
pop
enter
add
rcll
pop
and
xchg
test
lahf
add
push
and
push
add
ret
adcl
push
negl
mov
add
push
or
adc
lahf
mov
in
jbe
add
aas
push
subl
mov
jo
xor
add
bound
pusha
iret
mov
add
add
add
lahf
xchg
or
inc
push
add
sub
adc
mov
adc
rep
or
ljmp
adc
sub
add
sub
sub
or
jg
mov
or
push
movups
adc
adc
xchg
push
andl
std
jg
sub
sub
adc
adc
cmp
cmp
ds
aas
inc
jg
pop
dec
inc
dec
dec
dec
dec
aas
dec
pop
dec
adc
dec
push
push
push
push
push
push
push
mov
xchg
test
inc
pop
add
pop
pop
pop
pusha
fs
incl
bound
fs
push
imul
mov
call
outsl
jo
jb
jae
jne
ja
jns
jnp
jge
jle
addb
adc
adc
xchg
mov
inc
inc
and
decl
lea
mov
xchg
xchg
adc
xchg
adc
inc
push
cwtl
adc
adc
cltd
adc
mov
fwait
pushf
adc
mov
decl
push
or
std
test
and
test
sub
cmc
inc
popa
test
or
push
outsb
or
and
pop
pop
mov
aas
repz
test
jmp
adc
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
lds
std
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
xor
in
out
call
inc
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
sub
mov
jg
nop
cwtl
test
xor
sub
add
xchg
les
sbb
aas
sub
mov
mov
xchg
add
inc
xchg
aas
or
clc
push
js
inc
les
sbb
ficoml
and
addb
sbb
jge
or
mov
add
pusha
adcb
testb
push
add
adc
lcall
push
fs
lcall
les
and
pop
sub
mov
push
mov
mov
test
cs
fistpll
inc
push
pop
add
fdivs
mov
push
ss
mov
xchg
mov
les
mov
scas
inc
or
push
inc
aaa
xchg
inc
dec
out
fmul
pop
pusha
pusha
lods
stc
push
or
xchg
push
mov
pop
mov
mov
push
outsb
add
outsb
mov
push
pushf
imul
ds
inc
or
cld
push
hlt
insl
mov
lods
in
negb
mov
and
les
add
cmpsb
and
push
dec
ss
stc
lods
mov
pop
jl
and
je
mov
mov
aaa
daa
movsb
cmpsb
movsb
nop
push
mov
xor
adc
scas
pop
repz
mov
mov
insl
pop
imul
push
sbb
or
cmp
divb
fwait
push
mov
mov
insb
cmpsb
adc
data16
jbe
ret
rcr
orl
es
mov
fimull
ss
adc
pop
jno
orb
test
addb
fdivr
push
insb
sbb
mov
push
push
xchg
mov
push
out
mov
mov
push
hlt
ss
les
push
push
test
xor
sub
lahf
enter
mov
mov
pop
pop
jo
outsb
mov
in
inc
rcl
mov
xchg
or
sub
rcrb
pop
jl
insb
xchg
lods
jle
ss
push
stc
cmp
cs
mov
inc
roll
mov
sbb
outsb
les
or
movsb
cmpsb
into
adc
push
out
mov
scas
mov
nop
ss
cwtl
dec
out
push
mov
fwait
dec
push
mov
mov
clc
dec
int3
sbb
mov
ss
fadds
mov
fcmovnb
mov
push
ss
push
adc
imul
mov
sbb
xor
sub
insl
scas
mov
push
xchg
inc
enter
sbb
pop
ds
mov
pop
xorb
inc
xor
scas
mov
xchg
mov
pop
imul
or
push
fisubrs
mov
les
or
int
mov
hlt
cmp
lods
imul
cmp
mov
mov
cmp
out
jbe
rcl
in
push
dec
jbe
push
mov
jae
lahf
stos
jg
mov
push
es
push
push
rcrb
xchg
cld
push
sbb
pushf
mov
shll
push
cmp
je
popf
stc
ficoms
test
push
nop
xchg
mov
xchg
out
int3
int3
push
jbe
push
mov
push
mov
inc
push
insl
mov
out
pop
mov
add
shll
ds
idivb
sbb
int
cmp
xchg
les
scas
push
adc
test
add
movsb
ds
push
lock
sbb
sub
sahf
push
imul
mov
dec
jnp
scas
mov
push
out
aam
adcb
fcompl
inc
imul
dec
push
inc
rcl
pop
add
mov
inc
add
subb
nop
push
add
rolb
pop
ds
inc
push
popa
clc
push
pusha
rolb
imul
push
jo
aas
bound
xor
xor
sub
les
xor
enter
subb
xor
arpl
or
shll
andl
scas
fadds
shrb
mov
add
mov
sbb
es
rcrb
mov
dec
roll
sbb
inc
daa
insb
punpckhbw
push
shl
cli
mov
data16
inc
imul
dec
or
das
jb
xor
fs
insb
inc
fs
sub
fcom
mov
imul
push
inc
adc
dec
sub
pop
inc
and
jns
add
lea
outsb
push
outsl
dec
outsl
adc
fwait
dec
xchg
imul
gs
iret
pop
mov
dec
dec
imul
lock
sbb
inc
add
lret
xchg
insb
loopne
rorl
test
daa
lret
or
sub
shll
xor
out
jo
mov
add
adc
pop
push
iret
pop
inc
add
inc
dec
dec
cmp
dec
inc
sub
pop
and
xor
inc
add
xchg
add
cltd
flds
add
mov
sub
push
addl
orb
adc
adc
nop
push
inc
adc
inc
sbb
adc
aam
ret
iret
and
adc
dec
cs
nop
push
pop
pop
cs
pusha
dec
inc
pop
sub
or
sbb
insb
and
scas
incb
incl
mov
push
jns
add
rolb
sbb
cmp
add
sub
mov
incl
pop
incb
mov
clc
aas
jmp
out
lock
jmp
rol
lods
jns
cld
add
pop
or
push
aas
pop
or
in
jg
push
addr16
in
add
or
testl
mov
roll
mov
cs
psubb
addr16
lret
in
out
pop
out
ficompl
xlat
mov
cmp
add
loopne
repz
add
pop
sbb
pop
pop
aas
pop
mov
ds
xchg
addr16
lock
mov
xor
pop
std
mov
push
fldl
cmpsb
imul
jle
or
int
rolb
je
cmpsb
jo,pt
iret
rolb
sahf
add
cmp
add
aas
pushl
cmp
xor
push
cwtl
pop
cmovge
imul
push
add
jb
shll
pop
aas
into
push
add
ficompl
jo
lcall
pop
and
cmp
mov
dec
pusha
stos
jecxz
pop
outsb
es
pop
in
imul
loopne
xchg
fcmovbe
leave
rcrb
dec
add
cs
jnp
imul
adc
sbb
add
lsl
pop
sbb
mov
mov
push
cs
in
adc
push
in
mov
addr16
pop
in
mov
mov
adc
mov
add
or
cld
stos
leave
addb
push
fsubrl
push
sub
lock
inc
jo
adc
jno
cs
xchg
sysret
cmp
or
jg
or
push
mov
add
in
inc
addl
in
popa
push
pusha
xor
sbb
push
cmp
fisttpll
sbb
cmc
stc
lock
xor
out
inc
jae
clc
clc
dec
sbb
cmp
sbb
mov
je
loopne
push
mov
mov
xor
mov
imul
push
mov
add
dec
jnp
and
outsl
arpl
enter
dec
stos
insb
push
lods
mov
insb
iret
xorb
mov
ss
insl
je
and
ss
addb
sarl
mov
dec
push
lret
pop
and
adc
mov
and
sbb
xchg
arpl
ja
popa
nop
xchg
popa
push
cmp
cwtl
add
sahf
call
out
and
out
fisubrl
je
pop
mov
repz
cmpsb
mov
sbb
gs
or
jbe
pop
push
out
into
outsb
lahf
and
bound
mov
lahf
push
xchg
xchg
adc
jbe
pop
sbb
arpl
ss
inc
jne
dec
loop
push
roll
out
gs
addr16
outsl
and
push
push
out
push
into
jle
cmpsb
sbb
adc
and
rcr
lret
pop
dec
outsb
movd
mov
fwait
addr16
lds
jb
jbe
insb
bound
inc
pop
das
or
xor
popa
sbb
pslld
jae
adc
scas
pop
sbb
imul
mov
mov
xchg
cwtl
inc
inc
aas
push
sub
out
add
inc
or
rcrl
mov
sbb
jnp
add
outsl
data16
lcall
sbb
mov
loop
jne
and
add
sub
mov
ds
and
pop
orb
cmp
fidivl
push
fwait
jmp
or
mov
ljmp
addb
mov
and
pop
imul
inc
push
sub
shlb
sbb
inc
hlt
stos
gs
pop
jne
jle
bound
inc
into
dec
push
int3
jo
cmp
adc
jns
gs
jmp
bound
inc
cwtl
cmpsb
inc
aaa
xlat
push
lcall
xchg
cmpsl
adc
xlat
es
sbb
jbe
xor
add
lock
setg
and
push
mov
inc
push
jnp
or
enter
arpl
imul
js
es
and
iret
pop
push
or
stos
sahf
stos
int
insb
add
pop
outsl
outsl
mov
scas
pop
sub
stos
push
sub
loop
pop
stos
mov
jae
jbe,pt
and
cmp
jnp
pop
lret
cs
and
inc
outsb
bound
test
fstpl
ficoml
inc
dec
into
inc
add
mov
into
dec
arpl
xor
dec
mov
insl
sbbl
daa
xlat
xor
arpl
das
mov
imul
dec
push
xor
add
data16
outsl
inc
sbb
sub
cmp
inc
xlat
fisubs
mov
jbe
rorw
rolb
daa
out
iret
adc
cmp
lods
andl
scas
loop
add
sbb
cwtl
push
push
or
aad
cmp
pop
jmp
or
inc
add
mov
dec
push
je
sbb
add
shlb
out
jp
xor
mov
add
ret
cli
add
xorb
adc
and
stos
pop
jecxz
inc
es
sub
inc
jmp
jnp
mov
add
popa
daa
mov
sub
bound
push
pop
mov
mov
push
pop
insb
sbb
xchg
pop
in
and
lods
add
xchg
adc
rolb
sbb
mov
xchg
add
or
mov
bound
mov
inc
xorl
xor
aam
and
and
testl
rcr
bound
addr16
sti
popa
out
adc
adc
sbb
cmp
stos
pop
inc
xor
inc
lahf
sub
mov
cmp
adc
outsb
mov
mov
insl
fisttpl
cmpsl
xchg
inc
sbb
imul
push
pop
inc
pop
mov
jb
test
add
sbb
mov
jbe
mov
mov
fildll
cmp
xchg
out
mov
cli
repnz
mov
jnp
dec
lcall
fs
mov
stos
sbb
adc
inc
outsl
fildll
cmp
jl
or
jno
bound
and
jno
mov
mov
jecxz
adc
repnz
cmove
add
popa
lahf
mov
adc
inc
mov
cmp
sbb
sbb
jo
add
inc
lds
ss
pop
pop
adc
cmpsl
push
adc
add
mov
cmp
jo
addr16
or
and
mov
dec
in
cmpb
and
adc
push
xor
test
jmp
mov
mov
or
mov
notl
adc
sbb
mov
arpl
dec
add
push
jbe
sahf
mov
xchg
mov
xor
and
pop
rorb
jno
and
adc
push
push
jp
roll
add
popa
testl
adc
mov
add
dec
pop
and
mov
pop
mov
fcmovbe
push
mov
inc
sti
jae
add
sbb
push
sbb
xchg
push
push
mov
fs
and
pop
fsubl
jo
cmpsb
imul
inc
and
imul
cmp
jbe
dec
ja
adc
sbb
or
push
sbb
inc
dec
movsl
ror
das
adc
loopne
push
add
outsb
inc
imul
adc
ret
sub
push
out
lcall
aas
aaa
dec
movl
pop
movsb
xlat
jo
sub
sbb
fldt
in
jp
mov
mov
gs
xor
arpl
call
jno
shrl
int
or
jnp
in
lea
outsl
jae
add
test
insb
mov
pop
xor
gs
xorl
lods
sbb
sbb
dec
arpl
movsb
push
lods
and
mov
fildll
les
xchg
and
imul
inc
out
cmp
pop
xchg
pop
lea
adc
and
and
pusha
pop
inc
and
jecxz
loop
pusha
adc
inc
adc
inc
xorps
adc
push
sub
dec
sub
shlb
push
jae
js
insl
cmp
into
jns
mov
repz
push
popa
arpl
xor
outsl
add
fdivrl
dec
fimuls
pop
insl
jo
lret
sbb
mov
mov
push
inc
test
mov
cmp
popf
stos
push
sbb
stos
pop
and
movsb
mov
ffreep
mov
and
xor
adc
mov
lods
push
mov
rolb
or
and
xor
loop
arpl
imul
adc
xor
pop
mov
lods
jmp
sbb
push
push
rclb
sti
and
arpl
push
fstl
fwait
andb
inc
je
or
mov
pop
les
arpl
push
shll
cmp
dec
sub
jg
mov
pop
fwait
not
popa
sbb
cvtdq2ps
add
sbb
outsl
fiadds
sbb
dec
out
fistpll
sbb
xor
xorb
push
inc
stos
inc
jnp
ds
mov
cmp
lods
add
dec
xchg
inc
scas
adc
lods
sub
shlb
outsb
stos
adc
sbb
push
mov
je
cmpsb
pop
pop
add
xchg
sub
lret
daa
cmp
outsb
adc
mov
rcll
rolb
mov
push
jns
mov
jle
arpl
lods
adc
mov
stos
shlb
jmp
sahf
or
push
jnp
sub
cmp
dec
xor
mov
add
dec
pusha
xchg
pop
or
lods
jmp
inc
arpl
add
test
jo
push
sub
xor
inc
and
mov
mov
sub
insb
mov
sbb
stos
mov
cmp
push
dec
xchg
push
push
int
inc
shll
xchg
push
push
fdivrs
push
outsl
sbb
fldt
jnp
pop
xchg
in
or
ss
mov
iret
xchg
sub
mov
popa
push
jb
imul
imul
scas
gs
pop
jl
dec
add
sbbl
fidivs
ds
xlat
push
enter
add
pushf
rclb
inc
ljmp
mov
andb
xor
inc
xor
xor
and
or
or
out
jb
or
or
inc
dec
pop
pop
pusha
and
adc
repz
fsubs
lods
arpl
lahf
out
jp
mov
adc
dec
jo
imul
mov
loop
rcr
xor
stos
push
sbb
pop
scas
jae
xchg
cs
push
fidivrs
mov
ret
xor
cmp
inc
movsl
dec
ret
xor
mov
fs
cmp
and
je
and
daa
daa
inc
insb
andl
sub
pop
daa
pop
mov
xor
inc
cmp
push
lea
scas
stos
stos
mov
cmpsl
dec
push
pop
sarx
add
add
shr
orb
sti
repz
xor
mov
pop
add
mov
add
or
cmpsl
stos
xchg
push
pop
iret
jbe
subb
push
in
ljmp
sub
in
add
xchg
and
add
sub
jnp
lcall
je
inc
lods
pop
bound
mov
fldt
out
pusha
cmp
pop
xor
push
jmp
adc
pop
mov
sbb
push
pop
adc
pop
stos
iret
adc
inc
dec
rcll
ds
add
mov
and
gs
call
push
and
xorb
mov
adc
sub
pop
divb
push
jo
fwait
mov
cli
mov
inc
push
out
imul
stos
pop
daa
adc
pop
mov
loop
xor
xor
dec
mov
adc
push
scas
adc
or
ja
push
and
push
in
add
lds
xor
push
enter
test
sub
pop
push
dec
xchg
push
daa
mov
or
xor
or
fmull
dec
xchg
xlat
bound
lds
repz
push
loopne
mov
pop
and
sbb
sar
push
orb
and
testb
fwait
jbe
loope
and
sub
add
stos
aam
adc
adc
lods
jo
mov
test
or
push
pop
cltd
xchg
fimuls
ljmp
mov
mov
outsl
and
and
shll
pop
push
daa
dec
cs
cmp
lcall
jns
out
prefetch
or
scas
or
jp
push
mov
mov
es
xlat
adc
or
cs
stos
push
mov
sub
arpl
sbb
xor
and
popa
jne
ja
dec
aam
inc
adc
mov
sbb
ret
pop
jle
popl
test
pop
jg
sbb
pop
adc
pop
xchg
arpl
mov
dec
cmp
xorb
repz
add
fwait
cmp
dec
adc
add
jns
insb
dec
js
dec
jecxz
in
frstor
addl
mov
and
fisttpl
std
push
cmpsb
jno
push
add
rorl
sub
inc
xchg
mov
fwait
xor
inc
xchg
lods
and
adc
outsb
shrb
or
jae
ficoml
lcall
iret
adc
sarl
dec
and
or
xor
adc
adc
popf
ss
dec
add
shll
cwtl
std
adc
adc
sbb
shll
or
jecxz
adc
fdiv
mov
inc
gs
push
sarl
sbb
xchg
pop
pusha
sbb
imul
sub
adc
imul
sbb
imul
or
adc
mov
hlt
imul
push
sub
or
std
sbb
and
in
andl
fwait
xor
add
outsb
lret
ret
out
int
and
or
movsl
mov
pop
mov
sub
dec
mov
xor
pop
or
js
sub
ret
xor
xor
adc
sarl
xor
out
or
push
push
xor
cmp
adc
pusha
out
ret
movsl
es
cmpsb
push
add
or
sbb
addb
insl
movl
cmp
lea
xchg
je
mov
insl
adc
dec
mov
cmpsb
and
shlb
addr16
and
adc
ljmp
mov
jno
subl
pop
clc
jbe
int3
adc
inc
js
xor
cmp
sbb
xor
xchg
jns
xor
cltd
js
sub
push
dec
dec
cmpsb
icebp
xor
adc
shl
inc
cmpsb
icebp
or
cmpsb
xor
jp
or
add
inc
pop
int
add
add
addb
orb
add
xor
test
xor
push
add
add
xorl
xchg
mov
data16
cmpsb
aam
insl
push
aaa
jb
and
xor
push
outsl
movl
xor
jno
sub
out
arpl
inc
js
push
imul
fisubrl
lods
pop
sbb
mov
mov
mov
sbb
cmpsb
pop
sbb
mov
sub
sbb
addb
out
push
jno
push
outsl
or
je
inc
pusha
mov
sbb
mov
inc
orl
push
or
sub
push
adc
xchg
sbb
xor
push
mov
xchg
or
sbb
insb
pop
imul
mov
mov
inc
xadd
jo
sbb
sbb
xor
sbb
or
fidivs
jns
mov
xchg
add
dec
in
mov
popf
push
jb
xor
xor
mov
sbb
loop
arpl
xor
dec
or
movsl
sbb
pop
dec
mov
sbb
push
add
xor
fsubl
les
sbb
inc
xor
inc
and
inc
add
addr16
shl
xchg
jne
arpl
nop
pop
in
inc
pop
mov
xor
jne
pusha
fildl
jns
rorl
pusha
push
mov
jmp
sbb
lods
sub
rclb
dec
push
nop
hlt
inc
sarl
and
ret
jae
loopne
adc
es
xchg
pop
or
fcmovu
imul
imul
add
and
sbb
mov
inc
push
dec
sbb
out
pop
shld
jle
and
je
gs
xchg
or
in
adc
sub
shrl
mov
add
and
ret
ljmp
ret
jns
pop
inc
popa
pop
aaa
mov
sub
pop
shlb
inc
sbb
loopne
push
dec
mov
insl
push
push
xchg
sub
or
jo
mov
repz
sbb
mov
stos
or
mov
add
jge
int
pop
inc
sub
inc
xlat
inc
cmc
jno
inc
movl
dec
mov
popa
fsubs
or
aaa
pusha
adc
add
dec
xchg
and
cmp
sbb
test
add
pop
xchg
jns
push
shrl
sub
mov
dec
push
inc
jo
mov
popa
push
push
lods
scas
inc
add
add
push
sbb
mov
jmp
shlb
mov
or
sbb
mov
mov
sbb
pop
push
outsb
push
adc
ja
xor
ja
adc
and
inc
aam
pop
loopne
mov
cmc
int
pusha
rcll
adc
push
out
add
push
repz
pop
xor
inc
scas
adc
sbb
and
sub
and
jp
mov
pusha
frstor
xor
ss
inc
mov
push
sbb
mov
xorl
jno
stos
pop
mov
add
pop
je
nop
lods
mov
or
mov
hlt
mov
mov
fnstcw
xor
sbb
push
das
xchg
and
mov
xchg
cmp
push
jbe
xor
inc
and
punpckhdq
and
je
cs
out
xchg
nop
imul
push
inc
pop
dec
nop
adcl
adc
inc
ret
roll
mov
testb
mov
aam
mov
xchg
add
das
mov
mov
sub
dec
outsl
push
mov
jbe
xchg
sub
sub
dec
or
cs
mov
pop
insl
ja
ja
inc
adc
arpl
dec
dec
and
push
mov
mov
dec
sbb
enter
xor
adc
popa
jecxz
scas
int
sub
mov
mov
pop
adc
jecxz
insb
xor
dec
insb
andl
sub
inc
test
shll
jae
lret
mov
sbb
push
dec
push
xor
stos
icebp
insb
popa
adc
jo
mov
lret
inc
dec
adc
sbb
push
mov
mov
in
sbb
or
mov
inc
inc
jno
ficompl
xor
and
test
mov
cmpsl
aad
fcoml
or
nop
mov
sbb
jns
lea
sub
imul
pop
nop
mov
adc
lods
jo
cmp
mov
inc
jecxz
jecxz
sub
and
pusha
inc
ret
xor
cmp
inc
inc
fwait
xchg
push
inc
imul
xor
mov
popa
mov
push
push
mov
push
outsb
inc
outsl
fisubs
jno
gs
pop
or
push
add
pop
mov
push
mov
adc
aas
mov
sbb
mov
aaa
add
jge
jno
cmp
adc
xor
rcrl
enter
int3
sbb
inc
and
mov
out
out
mov
inc
aad
jns
repnz
fcoms
or
sbb
and
inc
adc
dec
loopne
loopne
and
sub
sarb
inc
xchg
ja
or
sub
mov
pop
add
sbb
daa
ret
shll
push
xor
aam
jle
fsubrs
jo
jnp
fisubrl
dec
xchg
arpl
jo
pop
sarl
dec
imul
outsb
test
xchg
imul
or
mov
daa
sbb
fsubr
and
sub
outsb
dec
repz
jbe
cltd
add
ret
fcoms
inc
and
pop
call
push
ret
push
push
test
pop
xchg
push
adc
imul
movsb
xchg
mov
addr16
inc
je
push
rcl
ret
and
sbb
mov
jno
mov
dec
xor
arpl
out
in
and
stc
ret
mov
add
hlt
cmp
xchg
inc
lret
mov
sub
mov
xor
mov
pop
sbb
shr
sbb
sbb
int3
adc
movsl
lcall
adc
outsb
sbb
mov
outsb
xor
sbb
lods
sub
sub
sub
in
push
mov
fbld
gs
inc
cmp
push
adc
and
pop
pop
inc
and
push
pop
nop
add
scas
jbe
loopne
xchg
data16
lea
jno
mov
mov
rclb
sub
imul
or
inc
xchg
cs
stos
sbb
dec
mov
sbb
imul
jl
ljmp
arpl
aam
outsl
outsb
addr16
jmp
sti
push
add
add
lret
sbb
es
mov
leave
test
mov
adc
and
rcl
jb
repz
int
push
xchg
shlb
add
adc
int
mov
mov
popf
inc
sbb
rclb
pop
jo
push
daa
outsb
jo
sti
pop
sbb
mov
add
sti
mov
jo
fistl
adc
rcll
xor
or
mov
rorb
add
lods
insl
add
sbb
shrb
jae
std
dec
fsubrs
mov
mov
or
fisubl
pop
fsubs
ret
push
jmp
fmuls
xchg
cmp
dec
mov
cmc
scas
pop
mov
adc
negl
mov
dec
and
and
and
call
dec
adc
push
gs
insl
and
xor
mov
call
movsb
push
fstl
shll
fsubrs
xchg
push
and
sub
xor
nop
sbb
imul
lds
mov
ljmp
iret
and
mov
pop
notb
sbb
push
dec
enter
inc
inc
xchg
dec
aad
inc
fldl
adc
push
adc
mov
imul
sbb
jmp
imul
dec
in
pusha
test
test
or
mov
pop
pop
xchg
daa
push
lods
lea
orl
jbe
das
sbb
and
sbb
pop
xchg
stos
incl
push
imul
mov
xor
inc
imul
adc
or
and
add
out
sbb
stos
mov
and
push
test
insl
dec
lds
nop
dec
pop
sbb
les
inc
and
push
rolb
mov
insb
imul
mov
xchg
imul
push
sbb
pop
pop
sbb
dec
pop
adc
push
sbb
mov
and
xchg
push
sub
lea
sub
xor
insl
and
ja
sbb
out
mov
jae
cwtl
mov
jg
cmpsl
data16
inc
fs
sub
ret
or
jmp
shll
pop
jmp
xchg
push
mov
mov
inc
lea
or
push
cmp
lods
xchg
add
pop
pop
test
ss
stos
dec
dec
outsl
ja
pusha
icebp
mov
push
popa
inc
jns
test
ja
outsb
jns
or
mov
outsb
ds
cs
xor
add
test
cmc
imul
cwtl
xor
pop
lods
xor
add
add
push
fsubs
push
inc
pop
adc
repnz
xchg
xchg
add
and
movsb
adc
push
gs
int3
lods
pop
add
xchg
in
adc
add
sbb
sbb
sbb
addr16
sti
and
sbb
adc
adc
or
sbb
or
sbb
or
push
push
and
adc
or
sbb
adc
or
or
add
jle
dec
or
adc
adc
sti
out
insl
add
adc
mov
adc
testl
push
adc
push
adc
sbb
sbb
push
div
mov
prefetchw
push
pop
and
add
loopne
notl
and
adc
or
or
stc
or
or
add
sbb
adc
pop
add
and
push
adc
add
or
mov
pop
test
push
fisubs
adc
sbb
pusha
movsl
push
push
push
and
adc
or
jno
adc
xor
sub
aaa
clc
cmp
fadds
ffreep
lret
xor
in
add
and
xor
and
or
or
sbb
push
or
mov
adc
stos
sub
aaa
adc
add
std
std
sbb
or
pop
push
adc
push
cmp
out
testl
sbb
or
xchg
adc
lock
add
lock
decl
movzwl
or
and
or
lea
das
idiv
jg
adc
push
push
dec
push
sub
add
and
push
and
rolb
add
adc
jmp
sti
adcl
sub
or
pop
and
sbb
sbb
adc
mov
pop
inc
or
pop
outsb
jg
insl
lock
sbb
sbb
or
dec
add
cmp
lock
push
daa
or
loope
incl
iret
dec
pop
shrl
push
lock
add
cmp
mov
cmp
cmp
dec
adc
lock
mov
or
loope
sub
lcall
xchg
push
mov
sub
jno
inc
dec
add
pop
sbb
and
inc
fnstcw
inc
add
sub
daa
lcall
or
adc
or
inc
sbb
fwait
adc
idiv
incl
or
ss
or
or
cmp
cmp
movsb
cmp
mov
imul
ffreep
lock
inc
add
sbb
sub
or
add
roll
xchg
in
lcall
std
lahf
add
bound
and
sbbl
std
rorl
or
mov
and
adc
lock
pop
and
add
ljmp
jbe
and
adc
and
and
daa
or
inc
jg
xchg
cmp
ljmp
adc
push
adc
adc
or
lock
movsl
lock
or
or
xor
daa
push
das
incl
sub
sbb
dec
adc
cmp
adc
sub
or
pop
push
jmp
push
shrl
or
adc
test
mov
lock
cmp
stos
adc
adc
das
push
xor
fs
mov
sbb
daa
adc
push
sbb
pop
popf
insb
cmp
es
out
out
shl
inc
sbb
rcll
mov
mov
sbb
test
add
inc
and
or
push
or
lods
stos
add
insl
loop
ljmp
xchg
add
or
adc
add
adcl
or
pop
push
adc
and
or
push
mov
flds
je
dec
stos
or
pop
inc
pop
xor
pop
push
jns
adc
cmp
sti
pop
adc
add
add
pusha
lock
adc
adc
xor
jno
addr16
push
adc
daa
jnp
loopne
lock
clts
scas
jle
aam
add
inc
sbb
push
insl
sbb
and
notl
xlat
je
incl
push
or
sbb
mov
stos
mov
imul
or
push
mov
mov
add
and
mov
in
add
adc
in
and
add
or
es
dec
add
unpcklps
xchg
push
or
and
sub
rsqrtps
rorb
lret
sbb
pop
ja
and
adc
adc
pop
push
insl
aad
add
push
sub
push
lahf
es
adc
mov
dec
pop
xor
and
or
aas
in
in
push
and
add
sbb
sbb
ss
out
out
add
sbb
pop
push
push
hlt
lock
dec
and
pop
push
adc
sbb
jg
lahf
fisubl
jb
mov
add
or
pushf
mov
stos
jbe
sti
adc
unpckhps
das
ficompl
push
adc
add
adc
fsubrl
inc
push
xor
insb
mov
mov
sbb
aad
les
add
push
or
push
jecxz
mov
ltr
or
out
sbb
jge
ret
sbb
or
daa
sub
cmp
mov
xchg
sbb
in
sbb
adc
fcoms
insb
lds
arpl
popa
dec
outsb
imul
fs
popa
sbb
cmp
mov
push
adc
test
add
ss
add
mov
outsl
adc
or
popf
pop
or
popf
inc
or
push
sti
push
push
add
mov
cmp
sbb
inc
sub
lock
test
push
xchg
xchg
iret
xor
fs
adc
in
pop
push
adc
data16
out
std
or
das
movsb
add
push
xor
cmp
sbbb
cmp
xchg
lock
add
cmp
sub
nop
lock
add
pop
cld
and
jne
adc
pextrw
jg
in
sub
jmp
lds
and
and
femms
and
adc
cmp
xor
adc
ljmp
repnz
sub
adc
dec
mov
adc
icebp
dec
call
bndldx
push
dec
inc
add
cltd
sub
sbb
std
lahf
lahf
das
sub
cmp
and
pop
sub
out
aas
orl
sahf
or
sbb
mov
dec
sub
pop
decb
and
push
add
pop
je
ud1
or
push
add
adc
arpl
sub
inc
push
add
add
clc
and
and
aas
add
or
or
sahf
and
or
xor
sbb
ret
ljmp
fnstsw
or
dec
xlat
jg
mov
and
lock
cmpl
jne
cmpsb
stos
or
fisttps
clc
and
and
sbb
sbb
cmp
std
mov
cld
fwait
leave
or
push
push
pop
and
cmpsl
daa
pop
insl
div
mov
adc
sub
inc
cvttps2pi
adc
sbb
mov
pop
adc
push
fistl
and
or
das
out
inc
imul
sbb
fisubrl
or
or
ret
xchg
or
adc
lods
scas
mov
flds
adc
dec
cli
ljmp
mov
out
aad
mov
xor
adc
test
sub
ds
roll
or
push
xor
out
adc
sbb
adc
sbb
cs
and
es
adc
and
mov
sub
jg
add
jl
or
daa
pop
xchg
sbb
xor
pop
inc
vmovhps
lock
push
and
adc
xchg
mov
sbb
cmp
cmp
cli
push
adc
push
mov
jbe
mov
push
pop
xchg
push
push
and
and
js
mov
lods
xchg
inc
sbb
daa
and
sub
sbb
aad
mov
sbb
adc
jge
lods
mov
pop
sub
and
sub
dec
mov
movups
or
ss
ret
scas
aas
pop
add
mov
daa
add
iret
push
fadds
mov
ss
pop
inc
dec
pop
in
das
adc
jne
ds
icebp
xchg
push
push
icebp
inc
jb
pop
adc
aaa
fdivr
ret
scas
mov
sub
insl
sub
sub
sbb
jle
aad
enter
lock
insb
std
pusha
pop
fcomps
dec
xchg
imul
adc
mov
lock
out
jg
ljmp
loope
adc
rcll
mov
rdtsc
cmp
and
dec
lods
jle
push
adc
add
jo
shlb
pop
sbb
mull
testb
inc
test
adc
sbb
cmp
pop
mov
decl
cmp
xor
sbb
adc
mulb
or
and
in
lock
add
sub
cmp
incb
rolb
mov
lock
sub
aaa
call
sbb
pop
pop
pop
dec
decb
lock
add
xor
and
sbb
or
sbb
sbb
inc
add
or
sti
cmp
adc
adc
add
cs
inc
lcall
xor
lock
adc
lock
add
and
add
jmp
sbb
adc
loopne
or
add
or
or
not
jmp
push
sbb
out
mov
or
push
pusha
sub
xor
or
push
jge
ljmp
lea
adc
addb
pop
cmp
sub
insb
cmp
mov
sarl
inc
int3
inc
in
call
push
in
inc
inc
or
jmp
or
bndldx
sbb
sbb
push
adc
xor
sbb
adc
lea
mov
or
push
adc
aad
push
repz
insb
movsb
add
cli
daa
sti
dec
stos
shl
add
cmp
push
mov
push
cmp
daa
sbb
adc
push
push
push
or
jp
jnp
xchg
pop
adc
adc
and
lcall
imul
or
pop
adc
push
adc
mov
push
arpl
sub
cmp
add
adc
dec
movups
jnp
jecxz
mov
in
adc
sbb
sbb
pop
adc
addr16
adc
out
or
and
mov
pop
push
lret
push
sbb
je
mov
push
sub
xchg
imul
adc
add
dec
mov
push
roll
add
imul
ret
mov
sub
lock
pop
fstpl
or
adc
test
mov
cmpsl
adc
sbb
loopne
in
clc
or
test
and
sbb
pop
sbb
sahf
and
and
bndstx
add
lds
mov
xor
jo
push
in
xchg
push
push
xor
cmp
push
mov
adc
repnz
and
daa
push
pop
iret
sbb
adc
and
cmp
mov
push
and
sbb
pop
add
sbbl
sbb
pop
mov
xchg
add
pop
sub
mov
adc
push
cmp
adc
adc
fisubs
arpl
adc
push
clc
out
into
mov
pop
ja
adc
jmp
sbb
sbb
mov
sbb
push
pop
popa
or
rcr
shll
out
in
pop
mov
lds
or
or
dec
and
and
adc
push
or
dec
push
addb
rcl
xchg
or
cwtl
sbb
or
in
dec
shll
fmulp
adc
movsl
ret
or
xchg
sbb
call
in
int3
jle
add
lods
mov
sbb
fnstcw
sbb
pop
or
mov
outsl
adc
push
and
cvtdq2ps
sbb
ljmp
adc
or
jo
int
sub
lahf
and
push
je
xchg
dec
sarl
pop
scas
or
mov
popl
ret
mov
sbb
adc
xchg
int
push
sbb
mov
rcrl
cmp
adc
sti
pop
fstl
sbb
addb
roll
bound
or
or
outsb
rcll
push
adc
lds
mov
sbb
xchg
cmp
or
aad
mov
shrl
and
push
mov
sbb
jecxz
ret
sbb
sbb
adc
and
add
and
in
fldl
adc
mov
ret
or
or
jp
add
sub
pop
repnz
stos
cmovns
sbb
or
jl
adc
jno
adc
inc
adc
arpl
fs
ds
push
jge
imul
mov
call
add
pop
adc
push
and
aaa
add
push
ss
cmpl
loope
icebp
sar
test
mov
adc
add
fcmovne
or
cmp
dec
jae
sahf
movhps
push
or
adc
adcb
cmp
push
loop
xor
sbb
inc
pop
xchg
jg
daa
das
and
sub
or
adcl
adc
sub
imul
inc
adc
cmp
jns
push
sbbl
dec
or
adc
aaa
int
outsb
sbb
sub
sbb
sbb
fs
jne
test
pop
and
sbbb
xchg
cs
aaa
lcall
push
push
sub
and
adc
pop
jmp
adc
pop
push
mov
sbb
push
and
pop
adc
stos
push
adc
xlat
or
sbb
adc
dec
aas
mov
and
adc
lods
pop
pop
clc
repz
jge
or
sub
and
sbb
es
push
pop
pop
mov
adc
pop
sbb
adc
pop
sub
or
arpl
lods
cwtl
nop
shl
sbb
sbb
adc
add
ret
jo
dec
call
cmp
ret
pop
and
lods
test
jne
push
and
subps
push
add
and
inc
js
test
jmp
shlb
lret
dec
sbb
push
jge
push
jp
jae
push
and
pop
and
push
mov
xor
add
jp
sbb
or
fldl
stos
scas
or
add
and
pop
mov
add
or
ja
or
and
add
push
and
popa
add
xor
adc
adc
adc
sbb
pusha
into
xor
aam
cmp
xchg
popf
int3
les
adc
xchg
add
sbb
addr16
push
jbe
mov
adc
decl
pop
dec
js
pop
pop
sub
pop
les
pop
cld
movsl
sub
xchg
xchg
iret
adc
adc
adc
add
sti
hlt
pop
fiadds
sub
xchg
adc
or
add
in
adc
cvttps2pi
or
filds
andl
loop
pop
or
add
or
adc
or
and
mov
push
sub
and
adc
adc
inc
inc
dec
cmp
inc
call
ljmp
and
aas
inc
arpl
dec
adc
cmovs
pop
ljmp
push
push
and
lock
test
dec
pop
adcl
inc
sbb
pop
pop
cs
dec
jle
sub
sbb
dec
or
pop
push
ja
cmc
lcall
insb
lock
add
cmp
pushl
das
pop
inc
lds
xor
push
sbb
cmp
and
mov
insb
pop
daa
xor
sub
cmp
lcall
cs
dec
or
outsl
xor
push
or
xor
call
adc
pop
das
sub
pop
jns
jb
pop
pop
mov
adc
lock
add
pop
pop
and
pop
add
iret
inc
cmpsl
roll
addl
lods
jo
xchg
dec
imull
and
and
adc
lcall
jmp
sbb
add
pop
xor
ret
mov
xor
sbb
sub
punpcklbw
and
sti
and
dec
xchg
cmc
add
push
lock
das
sbb
ss
incl
sbb
sub
xor
or
into
pop
test
and
lods
daa
sbb
adc
jg
popf
outsb
and
adc
pop
lock
aas
sahf
sub
jg
add
cs
sub
arpl
aas
sarb
lock
ja
pop
pop
push
ret
adc
sbb
push
js
pop
jne
or
jp
adc
pop
and
and
mov
and
je,pn
out
jle
mov
loopne
mov
adc
imul
rcl
inc
loope
ret
rorl
daa
sub
cmp
call
scas
int
sbb
adc
pop
and
xlat
sbb
sbb
je
jge
in
out
js
lock
inc
push
ss
xor
jb
pop
or
jg
pushl
imul
and
cmp
outsl
mov
sbb
push
insl
inc
push
outsb
sahf
scas
std
ljmp
push
cs
cmp
sub
pop
sub
jbe
das
mov
pop
add
xor
arpl
pop
stos
sarb
cmp
nopl
sbb
add
or
and
daa
cld
loope
pop
sbb
pop
pop
daa
sbb
dec
jnp
push
cmp
pop
lahf
cmp
cmp
jecxz
xor
mov
push
pop
sbb
xor
cmp
roll
or
push
mov
adc
lcall
loopne
sbb
cmp
xchg
and
pop
or
pop
fwait
or
add
lock
inc
mov
mov
sub
ss
pop
adc
sub
add
or
mov
ret
insl
pop
add
or
fistl
cli
ljmp
jle
das
cmp
add
rdpmc
adc
cmp
or
or
lock
add
and
push
push
sbb
or
or
or
adc
arpl
pop
fdivl
pop
sbb
lret
daa
push
push
jmp
mov
and
outsb
xor
add
push
sbb
sbb
mov
adc
adc
and
mov
imul
push
scas
jmp
adc
scas
ret
jl
stc
adc
add
or
add
mov
add
jmp
incl
and
das
inc
dec
pop
xchg
pop
ds
or
push
add
or
cs
xor
mov
aas
pushf
push
push
pop
xor
mov
aaa
pop
aaa
adc
xchg
cmp
cmp
sub
sahf
cmp
lock
adc
shll
ficomps
add
add
cmp
sbb
mov
jns
or
fidivl
mov
enter
adc
adc
and
iret
jnp
sbb
sbb
sbb
out
lcall
dec
add
subb
sub
movsb
adc
sub
mov
adc
mov
outsl
insl
fiaddl
pop
dec
sub
das
cmp
jg
daa
xor
das
add
or
adc
cmp
sbb
lret
push
imull
inc
or
sbb
xor
and
adc
pop
jle
adc
sbb
inc
push
push
xor
push
or
shlb
inc
push
push
sub
xor
das
push
sbb
push
fadds
aad
pop
adc
sbb
add
test
and
scas
sbb
adc
adcb
or
push
and
push
xor
push
sbb
adc
scas
push
cmp
adc
sub
vunpckhps
addl
dec
sub
sbb
dec
sub
fwait
push
shrb
adc
xor
dec
mov
push
push
sbb
lcall
das
adc
push
pop
sub
sub
and
add
decl
xadd
add
inc
xchg
jbe
sub
xor
scas
mov
pushf
xlat
popw
push
and
push
scas
leave
add
push
push
mov
dec
sbb
xchg
adc
mov
or
sbb
aas
cld
pcmpeqw
aad
xor
pop
inc
ds
jno
add
fcmovbe
decl
sbb
or
xchg
and
dec
sbb
movl
addl
jecxz
gs
add
or
pop
jne
cli
pushl
pop
sub
sub
dec
insl
or
or
or
or
or
xlat
or
add
and
sbb
adc
push
jecxz
aas
js
popa
das
sbb
sbb
mov
outsl
lock
std
or
push
inc
push
adc
adc
add
dec
pop
inc
sbb
imul
push
push
sbb
adc
pop
int3
pop
insb
pop
movsl
sbb
adc
add
pop
add
jge
xchg
mov
push
xlat
js
jle
adc
adc
daa
lcall
dec
adc
loope
add
add
daa
imul
jns
arpl
add
or
loopne
sbb
in
leave
fwait
adc
unpcklps
sbb
jge
pop
inc
mov
jo
cmp
adc
pop
pop
int
cld
jg
sbb
and
adc
and
sbb
and
add
in
in
movsl
add
unpcklps
cmp
push
or
aad
out
xlat
adc
stos
imul
push
call
es
inc
or
xchg
adc
xchg
or
into
imul
sub
in
popf
mov
sbb
or
dec
adc
inc
xor
mov
and
sub
sub
cmp
fsts
mov
xor
sub
sbb
xor
fs
out
xor
das
and
sbb
sbb
or
imul
mov
das
ja
adc
or
nop
mov
push
or
mov
pop
cmp
and
lods
mov
or
clc
test
push
and
sbb
sub
push
imul
cmp
add
call
roll
call
jmp
push
sbb
sbb
adc
adc
sbb
ljmp
sub
sub
sub
sbb
sbb
orl
movsl
ds
dec
aam
jp
adc
xor
inc
loop
lock
jge
push
mov
pop
or
sbb
push
nop
insb
adc
add
xor
or
fisubl
and
dec
add
sbb
jl
xor
adc
mov
fbld
sbb
pop
sbb
cmpsb
sti
bound
sbb
sbb
loopne
int3
sbb
push
inc
add
sbb
arpl
jb
andl
outsl
xor
mov
sub
mov
lods
add
faddl
and
stos
les
xor
mov
or
adc
mov
sbb
push
dec
inc
sub
cmp
fucom
adcl
mov
push
jae
test
sbb
sbb
add
inc
scas
adc
movsb
add
push
jae
adc
cmp
pusha
cmp
adc
lock
adc
jg
pop
cmp
push
sbb
xor
xor
jle
push
push
inc
jl
sub
cmp
and
sub
inc
push
sbb
jg
pop
push
ss
ss
sbb
mov
aas
clc
or
daa
or
adc
cmp
pop
pop
xor
and
lds
ds
push
lods
xchg
cmp
adc
aas
xor
push
cmp
scas
incl
aas
push
push
outsl
mov
cmp
pop
pop
mov
or
pop
ljmp
xor
inc
cmp
fstpt
push
sbb
and
adc
jg
lock
inc
and
dec
in
push
and
shl
add
lock
mov
lock
push
dec
sub
test
adcb
js
sub
add
ss
pop
or
aaa
push
or
add
dec
std
inc
or
xor
pop
pushf
sbb
daa
dec
xor
pop
inc
or
js
xor
loope
pushl
pop
push
lock
add
sbb
and
cmp
ds
cmp
push
dec
es
add
lock
insl
adc
jno
jge
cmp
pop
lock
add
std
jg
mov
lods
das
push
and
sbb
lret
test
sbb
or
jmp
xchg
sbb
aaa
sbb
add
mov
adc
insl
pop
inc
addl
iret
or
leave
push
sub
int
fs
add
fsubl
outsb
into
dec
or
jmp
fmulp
xor
pop
lock
xor
xor
jmp
lock
pop
sbb
jg
cmp
and
clc
incl
lcall
lock
cmpsl
add
icebp
mov
add
inc
jo
adc
idivl
xchg
pop
jg
cmpb
sbb
sbb
mov
dec
dec
or
fldt
push
adc
pop
or
xchg
adc
jno
das
xor
out
idiv
push
xor
and
and
lods
push
add
push
adc
call
or
pop
sbb
push
std
nopl
decl
adc
adc
das
adc
push
push
sbb
sbb
mov
sbb
aam
lcall
xor
jle
cmc
push
xor
or
cld
xchg
in
mov
push
xchg
mov
test
sbb
jo
loop
or
adc
inc
inc
inc
pop
mov
aam
test
adc
sub
outsb
insl
std
xlat
das
lods
test
adc
xchg
rolb
sbbb
mov
pop
andb
adcl
stos
aaa
pop
sbb
add
pop
sbb
adc
add
push
sub
adcb
movsb
or
daa
std
cltd
and
and
incb
lcall
sbb
add
and
sbb
lds
loop
aaa
xlat
or
pop
push
push
adc
mov
lock
add
pop
stc
pop
fstpt
or
inc
popa
aam
sbb
or
fsub
mov
and
and
lcall
or
leave
cmp
unpcklps
movsb
cmpsb
jle
adc
daa
loopne
add
repz
gs
xor
dec
jg
les
pop
lock
sub
push
adc
jno
adc
add
and
xor
sbb
fistps
sbb
aas
push
mov
pop
pop
bound
inc
adc
fs
mov
xchg
and
pusha
lcall
and
push
xor
test
jo
adc
stos
adc
and
and
jbe
xchg
mov
and
xchg
enter
ja
sar
xlat
testl
sahf
adc
stos
jg
lcall
push
pop
xor
cmp
push
idiv
ljmp
pop
cmp
call
push
push
adc
inc
and
and
pop
adc
cmp
pop
sbb
or
test
lds
adc
mov
rorb
or
fmuls
jae
lsl
roll
pop
or
hlt
or
incl
mov
pop
lock
or
or
test
rolb
cmp
mov
scas
and
daa
add
and
ds
sbb
sbb
and
add
mov
lock
add
sbb
sti
add
sbb
add
sbb
sahf
add
xchg
mov
jne
sub
std
sbb
out
sbb
mov
pop
or
or
push
adc
cs
adc
pop
fstp
daa
prefetchnta
xchg
adc
adc
sbb
or
dec
lods
sbb
pop
adc
mov
add
orl
or
clc
incl
addr16
push
inc
inc
and
daa
loopne
test
mov
insl
gs
add
inc
mov
leave
clc
inc
aas
pop
xchg
or
stos
mov
xor
sar
stos
arpl
push
add
aas
xor
cld
inc
aas
movhps
incl
push
dec
sti
xor
pop
or
sub
mov
and
out
or
inc
add
in
arpl
cmp
mov
push
mov
jg
push
push
mov
add
decl
clc
adc
and
and
or
xor
pop
and
pop
sbb
imul
add
add
jnp
cmp
push
push
jo
out
popf
push
loope
and
sbb
and
sub
scas
xor
push
sbb
cld
push
call
sbb
sbb
rclb
mov
roll
insl
out
sbb
and
and
sbb
mov
pop
sbb
cmc
sub
add
sbb
pop
add
imul
sarl
sbb
jmp
cmp
sub
and
and
dec
imul
sbb
and
aaa
sbb
adc
sbb
test
lock
and
push
cmpps
adc
jecxz
add
in
test
lret
sbb
adc
sbb
fistl
rcl
push
adc
out
and
stos
adc
add
cltd
rolb
out
push
sbb
xchg
or
adc
outsl
mov
sbb
pop
adc
push
pop
pop
ret
sbb
push
sbb
pop
sbb
rcll
xor
dec
adc
inc
xor
push
mov
adc
scas
sbb
add
xor
rol
stos
xor
sbb
or
pushf
test
dec
add
mov
and
les
aas
or
push
outsb
arpl
fcomps
jge
mov
or
and
and
mov
outsl
adc
add
sub
sbb
and
push
push
jo
adc
pop
test
sbb
sbb
cmp
sbb
pop
add
dec
ja
or
pop
sbb
sub
sbb
jle
and
mov
je
test
mov
adc
inc
sub
jnp
fnstsw
sbb
pop
xor
sbb
insl
faddl
inc
fnop
aas
add
sub
sbb
adc
push
sbb
sub
and
sbb
push
dec
daa
daa
push
sbb
sub
sbb
pop
add
xor
dec
and
daa
dec
and
ja
xchg
or
push
lods
pop
cmp
out
push
inc
sub
and
iret
push
jno
leave
and
and
pop
adc
and
push
or
andl
sbb
movsl
stos
add
sbb
jle
and
push
popf
movb
pop
sub
add
add
shrb
adc
or
xor
inc
and
push
push
add
in
sub
sub
sbb
cmp
xor
sbb
or
xor
adc
lcall
add
push
adc
push
lock
or
and
or
add
sbb
jl
aas
js
mov
and
push
mov
add
push
and
pop
cmp
sbb
push
pop
sub
lock
cmp
sbb
and
mov
push
les
addl
xchg
pop
sahf
sub
inc
fcoml
push
sbbb
sub
popa
movsl
mov
cli
cmp
or
push
das
and
jo
outsb
push
inc
bound
mov
jbe
push
gs
and
subl
adc
push
lock
es
adc
das
push
adc
xchg
pop
loop
add
in
sub
sbb
xchg
xorb
aaa
pop
ficoms
sub
sub
orb
and
ljmp
das
sub
pop
xor
and
ja
add
and
sub
aas
sbb
lock
adc
or
js
clc
mov
add
out
sbb
sbb
pop
cs
push
roll
adc
adc
mov
and
push
xor
cld
xchg
or
cmpsl
stc
and
sarb
xor
xchg
pop
or
mov
inc
xor
jmp
test
arpl
inc
xor
incl
inc
push
sbb
insl
adc
cmovbe
fs
jg
jg
cmp
push
adc
push
dec
ss
push
add
inc
add
xor
and
pop
lock
add
xor
mov
xchg
mov
sbb
add
sub
sbb
ljmp
lock
add
aaa
push
inc
and
or
lock
sti
aam
test
dec
inc
iret
or
cmp
jnp
lahf
adc
setg
pop
clc
mov
sbb
outsl
loope
jl
pop
sbb
inc
stos
and
and
adc
adc
add
jg
cmp
std
pop
adc
pop
adc
and
xchg
sar
adc
cmp
adc
jp
pop
lcall
xchg
xchg
lods
ret
sbb
sbb
fldl
cld
insl
cld
push
cmp
or
clc
inc
loop
cmc
mov
or
xchg
and
es
inc
mov
sbb
and
inc
add
es
icebp
orl
fildll
aad
or
lock
add
jmp
and
add
hlt
lahf
rolb
fwait
sub
and
mov
pop
sbb
cmp
sbb
loopne
adc
xor
and
add
push
or
inc
mov
lods
jno
cmp
test
mov
push
jns
ucomiss
sbb
sub
je
mov
pop
add
add
lcall
and
dec
leave
adc
aad
jo
insb
cld
mov
inc
or
gs
jg
or
jecxz
adc
adc
inc
push
clc
jg
add
adc
dec
sbb
sbb
and
aam
sbb
cmp
xlat
icebp
mov
add
add
popa
jno
incl
das
cmp
mov
or
add
jecxz
ret
adc
or
and
lock
inc
pop
or
pop
or
add
incl
adc
add
pop
cmpsb
pop
adc
sbb
jmp
arpl
cmp
xor
pop
push
std
and
ljmp
sub
push
or
clc
aad
pop
sub
xchg
jg
and
stos
dec
dec
mov
outsb
imul
xor
bound
and
mov
ret
mov
and
add
call
adc
xor
and
inc
test
push
push
or
push
jbe
hlt
inc
cmp
das
dec
adc
jmp
sbb
xor
stos
sbb
cmp
call
lock
add
cmpsb
and
and
arpl
mov
adc
push
jle
std
test
mov
das
aas
cmp
push
repz
rcll
or
lcall
pop
pop
sub
pusha
adc
sbb
test
sbb
syscall
xchg
adc
or
lcall
movups
adc
push
adc
adc
push
rcrl
adc
aad
adc
psubb
pop
push
insb
fcompl
pop
lret
ret
loopne
cmpsb
test
sub
bt
fsubrl
push
xchg
jo
inc
ss
into
adc
mov
imul
bnd
in
out
add
and
sbb
and
inc
pop
cmc
and
sti
sub
and
jns
dec
add
jae
or
cvtpi2ps
test
sbb
test
dec
movsl
add
cmp
xor
adc
xchg
fadds
xor
ljmp
adc
pop
outsl
dec
lock
sub
adc
or
push
or
or
pop
stc
push
or
cs
pop
pop
xchg
add
test
sbb
dec
add
hlt
test
cmovg
or
das
pop
add
ficompl
repz
aad
subl
or
adc
and
adc
add
jmp
sbb
push
add
mov
into
jo
cs
push
out
or
nop
mov
sbb
push
dec
add
adc
arpl
sbb
fistps
mov
add
jmp
add
adc
sahf
push
adc
add
or
inc
and
or
je
push
pushw
mov
les
mov
outsb
or
xchg
insl
scas
cwtl
lock
sub
fwait
lea
sub
add
add
or
add
sbb
loope
outsl
add
cmp
sub
inc
and
sbb
adc
xchg
int
pop
add
xlat
rcrb
and
and
inc
loopne
xor
ret
mov
push
add
nop
add
sbb
push
dec
outsl
scas
andl
sbb
sub
or
or
mov
mov
push
and
dec
adc
sub
jo
inc
ret
and
sbb
js
sbb
and
and
cmp
mov
std
pop
sub
sbb
dec
xor
sub
adc
xchg
dec
dec
adc
or
adc
pop
or
adc
pop
jge
and
push
jp
das
sub
push
jb
gs
mov
dec
aas
adc
xor
clc
xchg
and
xor
xor
push
lahf
and
xor
add
adc
in
dec
lock
add
lock
fimuls
jg
jg
lock
add
or
dec
aas
jns
jne
or
adc
cmp
sbb
xor
push
ja
dec
imul
jno
pop
jae
inc
aas
jle
in
xchg
adc
lock
add
jae
inc
ljmp
fs
sbbl
in
cmp
daa
cld
ja
sbb
and
xorb
or
call
pop
pop
mov
pop
jnp
jo
cwtl
add
add
incl
dec
dec
sbb
cs
or
or
pop
scas
lock
mov
sub
inc
xor
add
sub
cmp
fwait
mov
cmp
and
mov
inc
out
adc
loopne
adc
das
jo
sub
xchg
sub
dec
cs
sub
adc
mov
inc
add
and
into
sub
jo
sub
or
inc
mov
push
add
mov
xchg
adc
jecxz
inc
inc
scas
or
push
pop
push
incl
jno
adc
or
cmove
xchg
aam
jne
and
and
cs
stc
repz
pop
test
adc
cmp
adc
sbb
movsb
rcll
sbb
push
sbb
cmp
and
adc
outsl
int
and
sub
and
sahf
les
fwait
mov
mov
sbb
mov
sahf
cli
sbb
rcrb
cmc
mov
adc
jge
lock
add
sub
adc
sbb
inc
pop
sbb
wbinvd
bound
movsl
stos
cmp
sbb
inc
add
roll
inc
outsl
popa
and
popf
sbb
outsl
adc
mov
adc
mov
sbb
cmpsl
hlt
lahf
adc
daa
sub
sub
push
pop
sub
inc
mov
mov
outsl
jge
clc
add
push
setae
add
lea
push
jo
push
mov
and
add
pop
and
jmp
mov
sbb
and
pop
adc
pop
or
push
pop
add
call
pop
inc
in
or
ss
or
es
call
adc
fldenv
and
movsl
pushl
pop
and
addl
lret
mov
icebp
out
out
sbb
lahf
sbb
jmp
and
test
push
arpl
adc
mov
bound
or
push
xchg
enter
adc
cltd
pop
sub
mulb
or
sub
xor
add
dec
adc
dec
xor
pop
cmp
sub
addr16
insl
iret
or
adc
pop
adc
adc
jp
add
or
adc
dec
cmp
pop
xor
mov
lcall
xlat
mov
sbb
push
jmp
sbb
sarl
jnp
pop
sbbb
sbb
sbb
jecxz
xor
adc
push
add
push
sbb
lret
sbb
inc
pop
sbb
enter
add
jo
mov
add
xor
xchg
xor
sbb
adc
sbb
adc
imul
arpl
xchg
jne
in
lcall
sub
dec
push
repnz
xchg
test
sbb
fisttpl
orl
push
mov
les
loopne
adc
add
pusha
and
mov
adc
sbb
pop
push
arpl
cmc
sbb
adc
fcmovbe
jmp
xor
mov
push
and
push
scas
cmp
mov
jns
sbb
or
stc
xor
sbb
sbb
es
shl
and
test
sahf
les
adc
and
sbb
lock
test
lcall
and
movlps
xor
sbb
sbb
sbb
add
sbb
sub
sbb
and
sub
inc
pushf
sub
sbb
xor
repnz
add
push
lret
into
sbb
loope
add
pushf
les
dec
dec
push
push
cmp
xor
cs
sub
dec
add
ds
inc
sub
mov
or
pop
jns
insb
and
jmp
sub
das
popa
and
jnp
sbb
or
in
push
jo
inc
loop
push
dec
xchg
inc
mov
dec
xchg
adc
rorb
and
rolb
push
test
or
and
push
sub
test
or
jo
mov
rcr
loope
and
adc
and
or
popa
adc
xor
jne
mov
push
or
mov
add
push
sub
sbb
add
adc
pop
loope
daa
fidivrl
rclb
xor
rcrl
fildll
add
dec
sbb
hlt
pop
sar
cmp
sbb
sbb
sbb
xor
hlt
out
out
mov
add
or
add
sub
push
push
mov
sbb
orl
sbb
sbb
arpl
xchg
dec
sbb
leave
adc
push
fstps
sub
sbb
and
push
inc
xor
xor
cltd
and
jl
adc
sbb
inc
pop
xor
and
lds
sbb
inc
jbe
outsl
or
loopne
adc
std
sbb
rcll
sub
jecxz
push
gs
sbb
cmp
xchg
add
out
push
cmp
xor
pop
jae
daa
dec
clc
incb
xor
wbinvd
sbb
dec
inc
or
sbb
cmp
adc
ss
call
in
adc
iret
add
pop
dec
sahf
or
cmpsl
fwait
sub
negl
push
leave
and
mov
jg
jg
push
arpl
sub
and
push
lock
test
loope
lock
cmp
adc
sbb
or
xchg
pop
cmp
or
int
decb
insl
cmp
je
pshufw
sbb
or
add
inc
shlb
and
or
insb
jl
sti
sub
daa
pop
and
jg
dec
or
insl
sub
outsl
cmc
or
xchg
xchg
or
push
push
push
fstpt
ficomps
loopne
popf
lcall
das
jo
in
popf
pop
push
push
sbb
pop
pop
inc
loope
or
or
or
adc
adc
mov
push
add
jne
mov
decl
jae
add
adc
push
sbb
inc
and
clc
mov
add
ret
or
or
cmp
push
inc
jp
aas
sbb
or
xor
add
mov
sub
and
mov
and
mov
and
dec
push
cmp
je
lock
add
push
lock
add
fdivrl
xchg
mov
dec
inc
roll
mov
stos
out
or
push
lock
pop
or
imul
testl
push
js
and
ja
fldcw
add
jae
inc
add
add
pop
push
roll
sti
jne
jo
sub
adc
test
lock
add
lock
sbb
out
push
jb
push
add
packssdw
test
inc
mov
and
leave
lock
mov
jg
mov
sbb
or
or
or
sahf
and
push
add
sbb
push
push
das
insb
inc
sub
pop
inc
mov
sbb
outsl
dec
lock
lahf
out
or
add
adc
and
js
dec
aas
adc
sub
jl
aaa
add
and
cs
sub
sbb
int3
add
lock
add
push
pop
and
sub
lcall
cs
in
arpl
sub
cltd
cmp
lock
insl
add
push
in
cld
push
jmp
daa
je
lock
jne
add
adc
insb
pop
cltd
sbb
lods
pop
jg
sbb
das
in
or
pushl
push
add
incb
aas
adc
push
push
or
pop
test
movq
xchg
sbb
notb
shlb
fldt
add
decl
pop
jns
jl
out
or
cmp
out
jg
sahf
pop
jae
push
outsl
test
sbb
xor
fbstp
test
or
sbb
pushl
mov
and
nop
fs
out
aas
sbb
mov
sub
fildll
loopne
fisttpl
pop
pop
adc
les
xor
roll
push
jnp
pop
cmp
xchg
fcomip
lcall
call
add
inc
adc
orl
jg
add
and
cmp
loope
pop
pop
jle
adc
push
ljmp
or
in
sub
mov
dec
pop
insl
adc
xor
xor
out
fstpl
das
sbb
inc
mov
adc
std
leave
lock
fstp
test
lds
or
add
xor
fistpl
mov
xchg
or
or
add
scas
push
out
adcl
or
mov
cmp
pop
adc
cmp
hlt
add
dec
jmp
xchg
push
xor
and
sub
inc
pushl
lea
mov
bound
sub
std
adc
addr16
addr16
mov
sbb
loopne
mov
roll
inc
mov
orl
cmp
rorb
nop
adc
push
xor
daa
adc
daa
loope
repnz
adc
pop
sbb
test
outsl
pop
mov
les
dec
loope
out
movsb
inc
mov
xor
xor
cs
jg
pushl
sub
daa
cmp
pushf
and
push
das
adc
mov
pop
dec
jg
add
adc
jns
adc
lods
sbb
adc
cmp
jnp
push
sub
sub
sbb
enter
and
adc
and
sbb
or
decl
loopne
arpl
or
push
and
loopne
xor
push
jmp
inc
add
std
cwtl
cmpsl
je
loopne
or
cwtl
and
push
popf
lock
cmp
sbb
add
add
push
pop
adc
add
testb
sbb
add
add
or
add
adc
pop
push
adc
xchg
les
popa
daa
pop
sbb
add
cwtl
sti
dec
pop
sbb
pop
jg
sbb
mov
icebp
xchg
push
and
and
cmp
sbb
in
and
pop
sub
fmuls
sbb
or
fistl
sub
xchg
hlt
idivl
sbb
in
xor
xor
dec
incl
push
push
fimull
sub
jbe
sbb
xor
gs
insl
insb
pop
std
and
pop
mov
sbb
adc
jb
pop
sysenter
lcall
ljmp
push
or
xor
fs
es
mov
outsb
inc
and
sbb
loopne
idiv
subb
cmp
jae
das
or
mov
das
sbb
ja
sbb
int
testl
ljmp
xchg
pop
sub
push
gs
mov
movsb
and
add
incb
add
push
out
or
dec
sub
or
cld
das
xor
xor
rolb
movsl
or
pop
cmp
adc
aas
movsl
arpl
xor
xor
loopne
push
sbb
sub
adc
jg
jle
pop
outsb
lods
and
or
xchg
and
lds
sbb
xor
fildll
push
orb
ds
adc
insb
lcall
or
ret
incl
lock
lock
lods
sbb
lahf
inc
cmp
pop
push
pushl
out
pop
or
cltd
sbb
aaa
pop
decl
or
jl
pop
sbbl
shll
cmp
das
adc
lock
incl
in
sub
lds
and
mov
std
and
add
jge
sub
les
add
pop
and
cld
sbb
or
das
cmp
inc
mov
add
lods
out
inc
lock
mov
add
push
jg
cld
add
es
pop
lock
inc
jb
adc
xchg
push
imul
dec
dec
push
jae
das
cmp
lret
and
cmp
lret
mov
lock
ljmp
addb
idiv
pop
mov
sub
adc
sbb
mov
dec
adcl
push
sbb
or
or
pop
push
mov
loop
movsb
adc
add
sub
sub
pop
mov
jb
lcall
sbb
aad
in
xor
xchg
nop
push
nop
imulb
mov
jnp
or
or
jmp
sti
fisubrl
shrl
iret
sub
mov
inc
ds
mov
xchg
test
in
aam
lock
inc
jge
add
jnp
inc
aad
xchg
ja
or
int
inc
lahf
cmpsl
dec
enter
inc
xchg
pop
xor
and
dec
or
sub
cld
lock
add
push
fiadds
adc
cmp
sti
adc
cmp
pop
sbb
and
sti
add
nop
sarb
or
lahf
inc
aas
push
push
inc
sub
test
cli
mov
rclb
lret
sub
inc
ljmp
mov
outsb
test
cmpsl
aam
test
sbb
jo
ret
sbb
rdpmc
dec
inc
stos
and
and
imul
and
mov
and
sbb
and
sahf
pop
mov
mov
jg
jnp
repz
sub
xor
jg
sbb
mov
sbb
or
into
push
push
jecxz
adc
sub
adc
push
jl
loope
sub
adc
iret
add
mov
or
daa
sub
add
or
pop
lea
adc
or
popa
xor
adc
push
xchg
scas
cmp
adc
push
push
inc
dec
adc
pop
adc
pop
add
jle
cmp
add
cmp
loopne
mov
pop
lock
add
or
lock
adc
insb
add
xorb
fcompl
or
sbb
push
or
inc
add
out
into
add
sub
add
push
xor
and
jnp
dec
adc
add
adc
inc
in
pusha
pop
or
cmp
movb
or
adc
imul
mov
inc
mov
or
bound
sub
add
jno
add
data16
push
dec
test
mov
lods
inc
and
push
or
push
push
xor
test
scas
pusha
sub
and
or
sbb
or
rorb
jo
jo
or
push
xor
or
adc
pop
rorl
fisttps
mov
ret
or
or
add
fwait
or
rorb
sbb
out
inc
sbb
mov
or
cli
mov
mov
or
or
add
or
es
xlat
fsubrs
mov
or
pop
or
add
pushf
std
jnp
sbb
or
adc
nop
cli
rep
jmp
adc
insb
imul
or
mov
roll
pop
into
outsl
inc
lods
gs
iret
push
jmp
fimuls
jg
sbb
out
add
pushf
fldln2
add
or
dec
sbb
add
pop
push
add
or
xchg
add
jg
shrl
add
repz
add
or
mov
shlb
sarl
adc
daa
or
inc
imul
cmp
cld
mov
sbb
add
sub
add
push
sbb
lret
xchg
sub
leave
add
dec
fwait
or
jne
iret
orb
mov
inc
cwtl
push
mov
cmp
adc
cwtl
sub
xchg
pusha
movsl
sbb
in
add
add
dec
add
xor
and
mov
add
add
mov
adc
frstor
je
sub
xor
int
pusha
adc
sub
jb
lods
imul
test
push
pop
adc
outsl
lods
pop
shll
cmpsb
and
xchg
and
xchg
or
in
leave
lret
les
pusha
imul
cwtl
or
aaa
sbb
or
push
cmp
or
outsl
pop
imul
dec
inc
xor
bound
push
call
mov
rorb
imul
shll
fsubs
fs
jo
add
mov
dec
in
mov
xchg
cmpsb
add
call
lret
inc
jae
dec
adc
lock
repz
fisubrs
add
das
sti
in
setb
clc
mov
add
incl
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
