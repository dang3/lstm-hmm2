mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
sub
sub
andb
clc
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
push
adc
or
mov
sub
clc
psubsb
and
cmp
add
push
jnp
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
test
add
inc
xor
and
xchg
fidivrl
addr16
cmp
lahf
cwtl
add
cltd
mov
sti
sbb
mov
mov
sbb
aas
and
adc
add
mov
mov
xor
pop
jne
mov
rclb
call
push
pop
jp
mov
mov
sub
sbb
ret
sub
inc
fcoml
clc
jg
adc
sarl
mov
inc
repz
lds
test
leave
jmp
mov
jmp
mov
mov
add
adc
adc
into
ret
ds
mov
cmp
divl
mov
loope
je
dec
js
rep
xchg
add
out
outsl
inc
je
cld
lea
xor
std
xor
jecxz
mov
addb
push
or
add
mov
test
and
cmp
jbe
cmp
xchg
cmpb
add
out
in
mov
jmp
cmp
mov
imul
sub
add
ja
mov
repz
in
sbb
idiv
push
popa
ja
push
mov
mov
xor
jmp
outsb
idiv
enter
adc
mov
mov
inc
inc
adc
pop
in
ja
shl
pop
call
test
clc
call
add
or
in
test
divb
mov
xlat
ret
push
push
jno
nop
mov
sbb
jmp
and
lods
int
shll
sub
data16
jmp
fiaddl
dec
jmp
mov
popa
jb
cmp
ja
sub
xor
clc
ret
nop
mov
fldcw
jbe
mov
mov
push
sub
fists
fwait
pop
pop
pop
push
int
ja
or
flds
fwait
orw
insb
fists
mov
sub
pop
inc
test
test
mov
mov
data16
cmp
in
mov
mov
jbe
mov
pop
push
sbb
pop
nop
dec
add
cmpl
pop
movl
jmp
and
mov
call
sbb
xor
shl
sub
push
adc
mov
add
decb
adc
push
sbb
jo
push
addb
rcl
cld
xchg
jae
into
push
es
jae
xchg
push
addl
mov
cwtl
divl
pop
dec
sete
cmp
scas
jo
sbb
jmp
nop
push
adc
aas
pop
lods
in
cs
adc
sub
dec
je
mov
cs
andb
movsl
mov
push
or
daa
das
inc
pop
sarb
add
push
rclb
and
and
shlb
cmpsb
push
xchg
push
push
push
lea
push
sbb
lock
cmp
mov
cmpl
dec
decw
int
mov
dec
pushl
outsl
out
out
sub
lock
jbe
xchg
push
aaa
xor
in
or
scas
rorl
mov
dec
mov
jae
cmpb
mov
inc
jmp
push
xchg
sub
jp
pop
idivl
jbe
cmp
or
test
cmp
pop
clc
stos
es
call
pop
fistl
hlt
jmp
cmc
jne
movsb
je
popf
pop
pop
jle
mov
pop
mov
xor
xchg
loopne
cmp
cs
push
stos
sbb
call
cmpsl
ljmp
fldl
std
sbb
fdivl
leave
mov
lea
mov
mov
or
push
insl
in
or
sti
mov
push
lea
pop
mov
lret
jmp
inc
adc
filds
dec
sub
sub
ljmp
shll
fucomi
pop
cmp
testl
add
lods
rcrl
xchg
or
sbb
push
and
fdivs
divb
das
ja
and
push
aad
sub
sbb
cld
adc
sub
mov
adc
mov
je
mov
scas
jg
xchg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
ud0
inc
add
mov
jbe
mov
jmp
mov
or
or
lret
lret
pop
mov
mov
inc
inc
and
pop
jo
popa
mov
push
xchg
inc
inc
incl
cmp
add
push
shr
je
mov
mov
cmp
jne
scas
clc
pop
hlt
dec
je
mov
add
aaa
add
or
pushl
in
loop
push
adc
add
and
je
mov
cmp
jne
dec
je
mov
jbe
cmpsb
stc
cmp
jne
or
adc
add
mov
rclb
cmp
jne
shr
shr
sbb
out
scas
orb
mov
shr
or
iret
inc
dec
dec
pop
cmp
stc
aaa
fistps
add
and
mov
cmp
jne
dec
sarl
out
dec
and
add
bound
xor
pop
jecxz
xlat
jg
xchg
mov
mov
shl
or
out
pusha
orb
stos
mov
stos
pop
daa
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
call
push
jmp
or
faddl
clc
ja
lea
push
add
push
idiv
pop
jl
out
int
or
jge
jmp
inc
mov
js
pop
sub
jmp
in
push
lods
lds
pushf
mov
filds
cmpsl
jb
and
add
pusha
xchg
pushf
add
aad
sbb
dec
cwtl
pop
xor
mov
iret
sub
sub
mov
adc
jnp
cmp
loopne
pop
mov
imul
movd
adc
and
add
adc
js
sub
cmp
jg
add
adc
rcll
shrl
call
mov
adc
jmp
xchg
adc
dec
or
mov
arpl
mov
xor
inc
fs
mov
push
fstpt
and
test
jg
cwtl
jmp
push
idiv
mov
add
or
aad
add
cmp
xchg
int3
outsb
jmp
xor
add
pusha
ss
lahf
mov
mov
push
cmp
repnz
cltd
outsb
sar
je
inc
mov
dec
jne
pop
mov
add
sub
adc
cmpsb
sub
fbstp
cmp
and
test
mov
test
jbe
orl
testl
call
pcmpeqb
jb
cmp
cltd
xor
and
ss
iret
mov
push
adc
dec
sub
xor
sbb
dec
je
stc
jmp
fstp
fldt
fldz
mov
pop
or
sub
jg
aas
sbb
leave
daa
mov
cli
or
leave
daa
lahf
inc
pushf
or
ret
mov
adc
enter
xchg
cwtl
push
and
sbb
in
pop
stc
add
mov
or
sub
test
out
sub
pop
stc
xor
mov
lds
mov
stc
lahf
incl
cmp
fidivrs
call
mov
bound
fwait
inc
cmpb
xlat
fadds
outsb
xor
xchg
pushl
pushl
test
into
sbb
rorl
mov
push
pop
test
mov
or
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
incl
mov
mov
addr16
leave
repnz
bound
and
cld
gs
incl
mov
sub
inc
aad
iret
decl
js
inc
mov
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
jg
dec
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
es
mov
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
lcall
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
decl
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
lcall
mov
mov
mov
popa
mov
and
addr16
push
daa
mov
subb
and
and
outsb
bound
xor
jmp
shl
xor
shll
out
mov
pop
jne
push
pop
cmp
repz
adc
cmp
popa
pushl
ficoms
movzwl
lea
push
push
fisubl
fdivrl
mov
dec
mov
push
std
push
xor
movl
ljmpw
add
dec
mov
sub
mov
sarl
out
mov
jmp
push
clc
pop
aas
or
decl
xlat
mov
dec
inc
push
push
inc
push
inc
pop
incl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
hlt
ljmp
mov
ljmp
mov
mov
xor
mov
sub
push
inc
rep
push
or
push
mov
fdivp
mov
jne
dec
mov
xor
and
jne
stos
repnz
mov
xchg
fsubl
xchg
jo
pop
js
inc
sub
ffreep
into
or
sbb
mov
jge
adc
rcr
test
or
sub
out
jge
sub
adc
popl
jmp
xor
jle
inc
scas
clc
lods
int3
outsb
loopne
mov
or
push
cld
mov
mov
jl
mov
xor
push
shr
dec
repz
out
push
jnp
mov
sub
pop
mov
fisttps
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
in
ret
aaa
lods
mov
mov
mov
pop
and
adc
pop
inc
cmp
xchg
stos
cmp
jae
paddd
add
orb
and
loope
inc
xchg
add
add
jo
mov
fcomip
mov
inc
idivb
mov
pop
xchg
cmp
mov
sub
sbb
add
mov
add
imulb
stc
push
push
mov
push
add
pop
lea
push
cmpsl
fdivrl
dec
setne
scas
fwait
add
mov
xor
mov
mov
lock
xor
jb
imul
fmull
or
jne
or
cmp
mov
fcoml
vmovdqa
add
fisubrs
test
test
mov
mov
cmp
jge
shll
dec
jle
jne
mov
add
loope
jmp
lret
adc
inc
xchg
add
repnz
je
pop
in
negb
pop
add
sub
mov
jno
je
cld
pop
cs
xchg
add
jle
mov
out
mov
int3
inc
mov
mov
fcomp
xor
das
mov
shlb
inc
dec
out
es
loop
dec
orb
pop
push
inc
pusha
dec
aam
or
data16
mov
mov
rolb
pop
lcall
mov
push
xor
popa
pop
dec
out
decl
xchg
adc
pop
dec
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
cmpsb
jmp
add
sbb
jecxz
dec
cmp
cmp
sub
popf
enter
sbb
lcall
pop
jmp
push
xor
call
mov
shlb
jl
push
hlt
xor
call
adc
mov
mov
movl
cmp
enter
or
pop
sub
data16
mov
or
cmpsl
cmpsl
pop
inc
or
fnstcw
xor
call
sbb
popf
pop
and
call
pop
scas
cmpb
mov
cli
in
push
call
push
test
mov
push
pusha
push
ss
or
add
jns,pn
add
or
imul
push
push
and
mov
mov
cmpb
je
or
jne
movsbl
inc
or
jmp
add
daa
xchg
xchg
sub
push
jecxz
in
inc
pusha
sbb
adc
xor
loop
fdivrl
adc
loopne
dec
jecxz
pop
movb
add
jne
fidivrs
mov
dec
adc
outsb
ret
add
adc
je
stos
mov
or
cmp
push
je
dec
adc
or
jbe
test
std
pop
dec
arpl
push
pop
cmp
int
mov
enter
adc
jne
jbe
adc
mov
or
push
jns
jo
dec
add
fsubs
push
sbb
mov
sub
push
outsb
popf
adcb
xchg
cmp
sub
adc
loopne
mov
add
xchg
add
fildll
fstpl
jmp
xlat
mov
ret
sbb
inc
or
pop
mov
and
je
dec
or
mov
jne
mov
pop
or
xor
fs
or
add
lds
mov
out
outsl
xor
aas
repnz
addb
cmp
inc
and
jne
xchg
mov
mov
or
mov
jg
pushw
cmp
fnstsw
shll
mov
mov
out
daa
cmp
lahf
adc
push
adc
adc
adc
add
push
pop
aas
pop
adc
mov
dec
loope
mov
jmp
setge
pusha
pop
pop
cmpsb
movl
ja
ret
push
subb
lahf
outsb
mov
fcomps
call
push
push
mov
fists
fs
mov
inc
dec
lock
mov
inc
or
inc
add
testl
jle
cmp
insb
fisubrl
adc
adc
cs
iret
jae
mov
push
lods
inc
pushf
jle
pop
insl
mov
shlb
test
ret
aad
fisttpl
add
cmp
frstor
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
jne
pop
in
sub
add
jmp
sub
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
mov
jmp
mov
mov
jmp
mov
jmp
mov
pusha
addl
test
xchg
push
or
dec
inc
sub
pop
incb
sbb
pminub
push
movl
test
pop
test
adc
inc
mov
je
add
cli
sbb
rcr
fsts
inc
sti
sub
mov
roll
push
sub
or
xor
xchg
ja
ret
loope
test
movsb
fmul
dec
call
cmp
lret
in
aas
mov
cmp
or
add
or
cmp
jne
xchg
push
mov
adc
es
ja
xchg
ret
or
or
jo
daa
popl
test
jle
dec
mov
inc
insb
aas
icebp
inc
fiadds
call
and
jecxz
adc
xor
lahf
xor
push
mov
lock
dec
mov
insb
js
and
repz
add
sbbb
dec
mov
movl
adc
and
inc
leave
loopne
inc
pop
fwait
mov
jg
stos
mov
call
or
bnd
cmp
adc
push
dec
push
add
add
incb
push
jbe
adc
dec
jne
pop
pop
pop
inc
xorl
sbbb
jmp
es
cmpxchg
inc
or
loopne
lcall
mov
mov
mov
jnp
lock
mov
es
sti
mov
dec
cmpsb
rcl
fcoml
mov
fsts
cmp
jbe
sbb
lahf
loopne
fucomip
xor
sbb
inc
movsl
pop
sbb
aam
pop
inc
adc
ja
add
mov
mov
pop
push
xor
leave
pop
push
cmpsb
dec
rorl
cmpsl
mov
and
adc
cmp
push
les
mov
adc
push
push
jne
jg
test
mov
add
inc
inc
pop
ret
mov
test
stos
pop
push
fwait
jge
cmp
rolb
addl
mov
gs
cmpb
push
cmpl
xor
add
jae
jl
cmp
mov
call
and
dec
and
aas
mov
mov
xor
loopne
push
jne
popa
or
add
imull
add
fwait
inc
adc
scas
xor
push
scas
dec
shl
inc
adc
sarb
or
push
insl
jo
or
add
adc
add
cld
in
jne
cmp
inc
lods
daa
adc
mov
ret
pop
push
add
mov
cmp
push
push
popl
aad
dec
or
pop
mov
adc
incl
push
lea
push
mov
push
les
push
sbb
add
or
jnp
dec
and
inc
jg
sarb
sub
insb
mov
pop
push
dec
sarb
pop
jmp
jbe
xchg
adc
adc
das
xchg
jle
paddusw
mov
add
loopne
push
sti
or
gs
movw
pop
or
pop
mov
sub
insl
cs
pusha
or
mov
das
pop
or
loopne
ds
cmp
rorb
jo
sbb
xchg
push
mov
pushf
cmp
mov
mov
clc
lret
aad
push
cmp
aaa
fsubs
rcrl
add
cld
inc
stos
orl
mov
fbstp
jmp
lea
cmp
push
sbb
vmread
mov
xor
cmovge
outsl
loopne
mov
adc
ret
sbb
imul
les
jge
xor
or
call
loop
cmp
xchg
mov
nop
xor
mov
je
inc
jae
mov
or
out
mov
add
jmp
inc
add
jmp
push
pop
sub
and
pop
pop
mov
idiv
or
push
push
addr16
in
add
jae
jbe
add
or
js
sbb
push
repnz
icebp
gs
add
pop
pop
xor
push
ret
push
and
pop
cld
or
gs
ret
fnstcw
or
and
pop
add
clc
dec
js
aas
xchg
test
jmp
clc
or
ljmp
pop
loope
pop
icebp
and
mov
adc
mov
cmp
sub
inc
lock
scas
popa
cmpl
je
cmp
mov
cmpsl
xor
jo
rorl
add
cld
add
mov
sti
sbb
dec
mov
lds
push
sbb
xchg
dec
mov
dec
clc
mov
mov
jmp
mov
movsb
dec
pop
mov
xor
mov
push
mov
inc
cld
dec
jmp
sub
ret
testb
push
cmp
fs
dec
jne
mov
or
ja
jge
and
aaa
add
dec
ret
pop
ljmp
inc
pushf
sbb
loopne
or
add
pop
dec
jne
mov
push
int3
and
dec
loopne
pop
lea
jmp
xchg
das
out
jmp
add
push
sub
imul
mov
inc
pop
jmp
and
rcrl
andl
sub
lret
loope
jo
jo
stos
add
and
jmp
aam
cmc
adcl
inc
hlt
jnp
in
lods
pop
add
add
mov
cmp
inc
cmc
and
mov
adc
dec
inc
data16
add
es
mov
daa
cmp
hlt
mov
outsb
sub
dec
jl
pop
shrb
cld
cmp
jge
sub
jbe
jb
adc
push
cltd
popa
push
fnsave
adc
shr
in
mov
jmp
mov
outsl
pop
cmp
push
std
dec
jl
sub
mov
mov
sbb
inc
sub
add
lea
inc
dec
movsb
add
ret
push
push
dec
cmp
or
lds
scas
push
lahf
cltd
mov
push
mov
fistps
xlat
adc
imul
test
jg
cmp
mov
mov
lea
lock
push
clc
mov
cmpsb
jmp
pushf
xor
jg
adc
push
insb
dec
js
mov
inc
jb
adc
add
push
pop
adc
addb
inc
lret
fcompl
sub
pop
mov
fbld
push
int3
dec
push
lahf
out
and
sbb
inc
add
xlat
xor
mov
fwait
or
jno
cld
lods
jmp
out
loopne
inc
jnp
sar
pop
cmp
ret
push
pop
jg
mov
jle
ljmp
ret
mov
leave
sbb
aad
mov
rcr
pop
jp
pusha
sub
mov
sub
ret
std
sub
or
in
or
push
das
sbb
pusha
test
shlb
push
sub
sahf
dec
lea
push
cmp
int3
ljmp
mov
rcll
push
add
mov
jno
cs
enter
jmp
pop
call
jle
push
mov
or
nop
jae
aas
and
clc
addb
or
outsl
push
subl
push
das
int3
pop
pushl
mov
je
xchg
and
or
scas
add
and
pop
add
add
int
mov
adc
sbb
je
ss
push
and
pop
fcom
adc
dec
add
data16
call
push
cvtps2pd
or
mov
clc
dec
imul
stc
jge
ds
cmp
jge
xor
dec
insb
pop
dec
cmp
nop
pushf
lcall
maskmovq
mull
clc
push
lods
add
add
or
dec
or
mov
je
daa
cltd
cmp
mov
les
stos
test
out
cmc
in
scas
dec
mov
add
xchg
xchg
push
int3
mov
mov
sub
std
adc
mov
mov
fistpll
fistpll
cwtl
cmp
xlat
test
fldl
mov
call
lods
pop
push
add
or
or
and
or
je
cmp
je
cmp
mov
je
mov
jbe
scas
mov
jp
dec
imul
clc
jmp
adc
or
adc
loopne
das
shr
cmp
mov
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
jb
popf
sub
lock
sub
push
jmp
pop
in
test
fstpl
or
call
adcl
loopne
jns
inc
and
data16
pop
jbe
test
push
pop
pop
cmp
and
test
int3
jg
aad
movsl
jae
and
pop
int3
cmp
sbb
fists
xor
jmp
es
daa
nop
sbb
dec
insb
sub
jmp
inc
test
inc
cmp
sub
add
test
cmp
lock
and
icebp
jmp
push
xchg
xchg
add
movsb
rcrl
adc
movsl
mov
jg
inc
add
pop
ss
clc
push
push
add
sarl
minps
into
mov
pop
xor
pop
push
mov
cmp
xor
or
aaa
aaa
aaa
or
dec
or
jo
imul
adc
inc
pop
dec
mov
fs
xchg
loopne
xchg
jmp
and
mov
jl
adc
pop
iret
adc
add
je
clc
or
fdivrp
popa
inc
inc
mov
jmp
aas
add
cmp
and
popa
adc
and
mov
jne
aad
rclb
sbb
fnstsw
cmpsl
or
iret
mov
and
mov
push
test
push
popa
jge
or
in
pushf
out
scas
jmp
rorb
out
sub
mov
enter
sbb
jp
push
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
sbb
cmpsl
testb
add
inc
ljmp
fnstcw
pop
mov
jo
add
je
cmp
out
cmp
nop
lret
push
dec
adc
popa
adc
popa
xchg
sub
jp
push
hlt
xor
push
pop
movsb
push
push
fstpl
adc
pop
mov
aad
sbb
adc
and
stc
cmpl
dec
push
pop
mov
inc
xor
push
mov
jle
inc
mov
clc
jmp
push
test
enter
les
mov
add
cmp
xor
or
aas
sarb
mull
mov
sub
sar
cli
out
dec
adc
pop
pop
ret
add
jo
jbe
lock
cmp
in
sbb
or
or
sti
xchg
sub
jl
mov
mov
mov
sub
inc
jmp
cmp
and
out
mov
or
add
je
cmp
mov
cmp
je
daa
xor
mov
add
sub
inc
popa
aaa
in
insl
and
or
push
stc
push
jb
pop
out
test
out
push
mov
and
loopne
out
xor
sbb
aaa
jmp
push
sti
or
xor
or
jb
jmp
jl
andl
inc
sub
jbe
jmp
jg
mov
cltd
inc
jno
xor
cld
adc
movsb
rol
subb
lret
inc
sbb
mov
clc
lods
inc
xor
ljmp
lods
push
jl
xchg
xor
mul
and
adc
rolb
neg
push
cmp
jae
push
jo
bound
xor
push
adc
inc
push
or
or
lcall
sub
shl
dec
inc
push
dec
push
xor
roll
nop
sub
adc
insb
jmp
pusha
icebp
sti
mov
add
pushf
sarb
je
dec
add
inc
je
adc
or
mov
aaa
adc
push
mov
jmp
sbb
test
sub
jmp
into
leave
cmc
add
popa
pop
or
push
repnz
pop
add
add
cmp
pop
mov
xchg
icebp
jne
add
lods
rolb
ss
lock
popfw
or
push
push
into
inc
add
mov
stos
les
push
call
xor
dec
imulb
jbe
insl
call
sub
inc
call
inc
sbb
cmp
jne
mov
cmp
jge
mov
sbb
lahf
loopne
fwait
mov
ret
lock
add
lea
ljmp
stc
mov
pop
decl
stos
mov
jo
stc
fcoml
lret
in
jge
xlat
sahf
or
or
and
inc
test
insb
inc
push
xlat
mov
cmp
mov
add
fldl
jno
pushf
jbe
movl
or
add
cmpsl
lock
lock
test
add
cs
mov
cmpsl
cmpl
jle
cwtl
or
xchg
dec
data16
inc
data16
or
mov
cmp
das
mov
lcall
dec
jne
enter
mov
movsl
pop
lds
cmp
add
scas
scas
push
add
mov
adc
pop
jo
mov
adc
outsl
sahf
or
push
loop
cld
or
out
lock
mull
adc
sbb
movl
push
xlat
cmp
jle
repnz
xor
pop
lock
or
mov
orb
ret
mov
mov
mov
ss
adc
xchg
hlt
jo
rorl
jge
add
and
or
xor
popa
mov
pop
xchg
dec
push
xchg
pop
inc
xchg
test
dec
loopne
xor
inc
rcrl
out
inc
mov
jg
mov
cmpsl
xor
decl
icebp
adc
push
adc
icebp
or
aad
aam
pop
and
movsb
xchg
inc
dec
in
ret
pop
ja
sbb
adc
dec
or
aaa
push
push
push
mov
incl
movsl
pop
pop
mov
hlt
pop
pop
in
sbb
mov
push
pop
add
jne
inc
cmpsb
jbe
cwtl
inc
sbb
in
loop
mov
dec
jne
les
push
pop
or
sbb
les
popa
mov
inc
xor
sbb
test
bound
and
shrl
adc
fcompl
sbb
add
cli
inc
aam
sbb
cli
pop
loopne
shl
ret
jmp
dec
mov
test
cmp
jne
pop
nop
mov
or
icebp
dec
sbb
push
bound
add
push
ja
xchg
ret
or
pop
test
test
call
rcrb
je
sti
pop
jne
sub
in
sbb
sti
pop
cmp
js
pop
jne
add
dec
jp
pop
fwait
mov
andb
out
and
mov
ljmp
mov
iret
or
sub
loopne
mov
add
inc
cmp
cltd
sub
add
push
gs
imul
out
and
je
pusha
rorb
cmp
outsb
notl
test
sub
dec
push
push
mov
inc
mov
aad
rolb
lahf
test
dec
std
incl
pop
ret
imul
gs
xor
cs
insb
ret
sbb
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
ja
inc
stc
outsl
loopne
sbb
push
neg
aaa
sbb
inc
out
and
push
sub
add
xchg
mov
and
addl
pop
pop
dec
icebp
lods
test
add
mov
call
out
inc
je
movsb
xor
int
aas
iret
les
add
push
repnz
fs
inc
nop
jae
lods
aas
sti
and
loopne
lcall
sbb
loope
pop
cmpb
repz
or
stc
jnp
mov
jmp
dec
cmpb
rol
xor
lock
jae
sub
inc
and
sub
sbb
pop
lahf
push
or
push
mov
icebp
push
je
das
ljmp
xor
cmc
add
in
adc
popa
and
outsl
data16
popa
jb
inc
mov
mulb
gs
aaa
jg
rclb
inc
cltd
dec
aam
dec
hlt
andl
xchg
and
add
jb
sbb
xor
jbe
mov
sbb
xchg
add
mov
rolb
out
jp
mov
add
mov
jge
aad
fmuls
dec
sbb
flds
ret
cli
mov
orl
push
mov
or
xchg
pop
mov
inc
xchg
and
lcall
fadd
xor
mov
sbb
pushf
cmp
test
int3
inc
sub
popa
subb
jp
lods
sbb
dec
push
das
pusha
cmp
jo
pop
or
or
add
jne
orl
push
ljmp
pusha
cmpsl
mov
call
sub
adc
in
bound
push
lock
mov
mov
loopne
push
inc
mov
int
imul
mov
sub
xchg
sbb
test
pop
daa
jnp
and
pop
sbb
ret
sbb
loop
mov
push
lea
or
daa
lock
cmpsl
push
adc
adc
or
das
sub
mov
mov
add
lods
push
add
add
popa
mov
pop
dec
and
push
or
test
popa
rep
jns
and
add
cld
call
mov
outsl
movhps
push
inc
xchg
mov
insl
lods
pushf
pop
fidivl
leave
out
adcb
movzwl
ljmp
incl
cli
jg
push
mov
inc
jmp
cmp
pop
add
pop
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
push
and
and
rolb
int
add
dec
or
cmp
jb
or
js
add
xor
and
sbb
cmp
dec
jbe
pop
add
cmp
push
lock
lea
ret
mov
mov
mov
aaa
lahf
or
push
push
dec
inc
mov
jnp
icebp
jmp
loopne
cmc
fdiv
add
inc
test
je
fnstsw
loop
or
jae
and
je
jl
push
cmp
adc
mov
and
cmp
jne
pmuludq
cwtl
and
or
mov
pop
clc
out
bound
dec
dec
dec
cld
mov
mov
jle
mov
inc
lcall
loopne
jo
adc
or
lock
and
inc
inc
mov
jbe
jae
ret
xor
mov
int
sbb
cli
xorb
sbb
sbb
jb
inc
mov
and
daa
out
arpl
fs
jns
scas
aam
pushf
rolb
je
adc
pusha
ret
lea
xorl
add
les
fldenv
push
sub
or
jmp
adc
enter
mov
repz
mov
nop
push
mov
mov
cmp
pop
sbb
rolb
loopne
leave
ds
cmp
cmp
cmp
cmp
add
and
fdivrl
and
or
pop
gs
aas
sub
jo
push
gs
and
add
pop
bound
arpl
aas
loopne
sub
add
orl
sti
addb
clc
aaa
mov
mov
xchg
pop
pop
mov
lock
shlb
pop
lea
push
push
xchg
adc
add
push
cmp
mov
cmp
and
neg
xchg
je
cmp
or
dec
xor
mov
xchg
aam
in
daa
sub
add
or
dec
xchg
mov
push
in
mov
jp
clc
sbbl
movb
jb
cmpsl
xor
push
sub
int3
ja
and
loopne
cwtl
imul
and
leave
divl
in
push
mov
mov
mov
lods
xchg
in
mov
sub
stos
iret
cmp
jbe
shlb
and
jmp
mov
ja
imul
ja
mov
adc
jmp
daa
mov
push
push
roll
lcall
jnp
and
inc
cmpl
imul
and
sti
mov
jl
sub
or
mov
outsl
jmp
or
leave
jne
mov
mov
jns
push
pop
adc
xor
push
and
mov
test
lret
ja
repz
sub
push
add
fwait
mov
or
or
sarb
xor
jg
fwait
in
pop
xor
fcoml
xchg
cmp
push
andl
push
add
inc
add
inc
ljmp
sbbl
push
mov
push
or
lods
je
cmp
cs
xchg
mov
xor
shlb
sbb
fs
gs
push
gs
add
sbb
inc
adc
scas
insl
fimull
popa
bound
inc
push
fistpll
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
lcall
push
outsl
insl
bound
outsl
js
imul
ja
nop
push
cmp
push
dec
ja
dec
inc
push
inc
add
xor
je
add
outsb
daa
aas
out
pop
addps
dec
dec
push
dec
dec
mov
and
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
leave
leave
lods
test
fs
in
in
enter
in
in
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
arpl
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
cmp
jns
mov
cmp
cmp
xor
sub
cmp
cmp
cmp
sub
cmp
cmp
sbb
cmp
cmp
adc
or
mov
cmp
cld
data16
pushf
pushf
pushf
pushf
hlt
lock
call
in
mov
ror
mov
cmp
sarb
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
insb
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
daa
daa
mov
adc
adc
jns
daa
daa
add
cld
cmp
cmp
clc
hlt
lock
cmp
cmp
call
cmp
cmp
aam
int3
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
fs
pushf
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
sbb
mov
shl
or
and
dec
loopne
mov
es
popf
lods
mov
inc
or
and
xor
dec
testl
xchg
dec
mov
scas
push
and
add
ljmp
pop
mov
pushf
mov
pusha
push
sub
xchg
arpl
pop
lret
fwait
lahf
test
xchg
mov
jns
sbb
adc
out
sahf
sbb
and
and
movsl
mov
and
cmp
jmp
mov
pop
ret
scas
int
outsb
inc
cmpsl
shrl
and
push
stc
ja
shrb
mov
ret
mov
pop
mov
cmp
mov
mov
push
push
jo
mov
cmpsb
jmp
gs
mov
bound
dec
inc
or
inc
je
sbb
pop
or
xchg
movl
mov
filds
dec
popa
gs
cwtl
and
push
dec
inc
inc
dec
add
in
or
daa
outsl
adc
and
dec
out
adc
push
dec
pop
and
mov
push
push
pop
sub
pop
cs
inc
dec
pop
dec
dec
dec
inc
push
das
mov
stc
jne
add
mov
xor
xchg
or
jl
jl
push
jmp
psllw
in
in
repz
cmc
in
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
jmp
loope
in
in
jecxz
in
in
in
out
jmp
ljmp
in
out
rcl
in
in
rcl
aam
in
in
xlat
fcomp
in
in
fcmovu
in
in
rol
in
in
ret
in
mov
leave
in
in
lret
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
in
in
mov
in
cmpsb
cmpsl
test
in
in
stos
stos
lods
lods
in
in
scas
scas
nop
xchg
cltd
in
out
lahf
cmpl
mov
cwtl
cs
ds
or
push
inc
imul
or
sub
mov
push
fwait
insb
mov
mov
jp
leave
mov
jp
push
dec
pusha
daa
push
jg
xor
xchg
add
adc
inc
js
gs
stos
std
jo
imul
dec
dec
and
movl
pushf
jo
nop
aam
aam
dec
and
inc
dec
jne
dec
dec
gs
outsl
pop
mov
push
xor
fbld
or
outsb
mov
mov
scas
mov
push
ret
lret
push
push
loopne
xor
jnp
daa
fisubrl
xlat
inc
jl
inc
jl
push
push
and
push
sbb
mov
scas
cwtl
hlt
dec
ljmp
or
imul
outsl
nop
lock
mov
mov
outsb
sbbl
jge
add
dec
or
dec
jbe
cmp
ja
pop
mov
cmp
adc
pusha
pop
dec
mov
in
jge
nop
cld
scas
cld
pop
jge
mov
imul
add
shrl
ret
insl
jle
lods
scas
shll
sbb
rcl
jg
add
fcmovu
add
push
outsb
fs
pop
scas
mov
shrb
js
mov
mov
mov
or
push
sbb
or
inc
popa
jae
adc
sahf
add
shll
inc
mov
cmp
mov
or
inc
add
lock
insb
popa
je
in
sbb
ds
ds
rcll
lock
and
ficompl
nop
sub
stos
adcb
push
arpl
adc
test
ret
or
je
insb
inc
fsubrl
ds
fisubrl
adc
imul
orb
inc
addb
fs
cwtl
mov
int
bound
fiaddl
hlt
mov
outsl
cmpsl
or
data16
push
addl
or
or
inc
push
stos
push
test
or
mov
addr16
cld
push
mov
data16
sarb
cs
or
add
dec
invd
xor
inc
insb
jae
in
cmp
test
add
and
addr16
inc
cld
fldt
push
adc
jb
popa
fs
push
fs
dec
les
int3
sbbl
mov
in
xor
mov
or
repz
aam
xchg
fwait
push
movsl
xor
iret
jno
orl
jnp
sbb
push
loopne
sbb
mov
test
mov
mov
int
pushf
rcr
and
dec
jne
push
mov
and
inc
push
fsubrs
outsb
arpl
cmp
pop
inc
xchg
fadds
movsb
ret
test
lock
repz
mov
add
cmpl
enter
dec
out
mov
xchg
sbbl
insl
ss
push
pop
lock
jp
mov
ljmp
push
mov
jmp
push
adc
or
mov
mov
les
gs
pop
fstpt
dec
push
or
xor
mov
push
add
mov
add
dec
rcrl
and
idiv
sub
ret
mov
les
sbb
decb
inc
dec
xor
lcall
pop
add
pop
push
dec
mov
call
or
jbe
inc
bound
leave
repz
je
movzbl
push
push
jmp
mov
sbb
lahf
lods
pop
add
ror
or
xor
repz
jne
inc
jne
inc
inc
ds
mov
sub
in
add
orl
push
ljmp
push
sub
out
and
sti
je
loopne
out
sub
pop
mov
sbb
stos
mov
inc
jl
ja
test
pop
ret
insl
inc
rolb
or
jecxz
bound
pop
jb
mov
cltd
adc
jmp
ret
test
and
mov
nop
or
cltd
outsb
jo
add
clc
cs
inc
js
andl
add
fnstcw
add
insl
not
faddp
js
ljmp
aaa
adc
add
repz
cmpb
jbe
adc
sarl
and
pushf
inc
rcr
push
sub
inc
jecxz
enter
imul
xchg
ret
push
push
mov
jns
insl
in
or
mov
and
push
jns
hlt
imul
adc
pop
mov
in
fsin
je
ljmp
jge
add
es
inc
and
cmp
out
mov
add
sub
and
adc
jl
arpl
mov
or
aas
jne
loopne
sti
ja
lea
fwait
dec
imul
loope
jne
or
xlat
sbb
aaa
js
jp
xor
lcall
add
push
adc
sub
push
mov
add
pop
or
sbb
cmpb
and
sub
and
push
int3
add
xchg
pop
lock
or
xchg
sub
jo
in
pop
popa
clc
xchg
test
lock
aaa
dec
sti
decl
mov
sub
je
jae
aam
mov
cmp
jl
inc
mov
or
push
incl
pop
or
sbb
or
jae
inc
dec
jne
mov
out
or
jne
sarb
paddusb
mov
sub
mov
inc
std
push
xor
div
dec
jle
cli
cmp
push
pop
mov
lock
inc
ljmp
jbe
add
mov
sub
jmp
xchg
cmpsb
add
dec
jne
push
mov
sub
leave
push
outsb
addl
sub
xor
add
and
jo
lcall
negl
and
pop
mov
jnp
xor
dec
inc
and
cmpsb
mov
pusha
lcall
xchg
imul
add
fs
fnstsw
je
push
ud0
insb
and
fistps
ret
add
add
sub
add
sbb
fprem
fdivr
mov
xor
outsl
add
lods
push
sub
rcrl
loope
xchg
cmc
adc
ffree
ffree
ffree
fstpl
cmp
rcrb
add
test
frstor
push
loope
data16
jnp
and
lods
jmp
xchg
inc
push
push
mov
inc
aaa
push
cmove
sub
cmp
orb
mov
jp
or
mov
aaa
xor
inc
jne
lock
add
jo
test
sarb
jg
movsl
pushf
ss
cmpsl
mov
rol
cmp
inc
push
aas
inc
js
jge
add
push
fcoml
and
sbb
pop
xor
sub
xchg
dec
mov
pop
sti
int
nop
insl
nop
loopne
add
fldl
jns
add
or
addl
push
movb
rcll
je
and
push
mov
jmp
js
cmp
add
inc
jecxz
push
pusha
sbb
loope
scas
push
cmc
and
lret
lock
xchg
lods
add
inc
out
adc
insl
lock
jle
aas
add
xchg
add
ss
push
fcmovu
ret
in
mov
pop
jge
pop
addr16
int3
test
nop
nop
add
mov
ja
push
push
inc
in
xchg
sub
xor
bound
test
mov
and
ucomiss
nop
scas
mov
rorb
cmp
lock
clc
or
je
das
es
out
cmp
ja
mov
and
add
xor
push
outsb
dec
pop
sub
hlt
shlb
mov
dec
push
ds
call
inc
pop
sbb
mov
dec
idivl
jne
cltd
aaa
push
cmp
mov
push
or
iret
pop
rol
testl
push
pop
sub
mov
es
loopne
mov
sahf
push
jnp
mov
inc
and
call
rolb
pop
xchg
aas
pushf
into
xchg
xchg
fbstp
adc
cmp
cmp
sbb
clc
adc
ficoms
loopne
lcall
hlt
and
xor
insb
stc
dec
inc
cld
or
mov
xchg
les
pop
pop
es
push
scas
iret
test
test
shlb
add
out
leave
push
add
pop
pop
movsb
cmp
mov
test
and
icebp
mov
in
xor
add
movl
testb
clc
ret
adc
ss
outsb
sbb
dec
sbb
add
inc
pop
hlt
andl
cmp
addr16
pop
pusha
ret
test
test
rclb
popa
push
cmp
leave
inc
xchg
mov
xor
int3
jmp
adc
push
andb
inc
sbb
jl
loopne
inc
adc
in
and
loopne
inc
sub
shrl
jecxz
adc
mov
movsl
adcl
mov
push
inc
mov
xchg
mov
jg
not
and
mov
aad
iret
pop
pop
rclb
sub
orl
jmp
mov
out
cmp
pop
add
je
jae
pop
insb
movsb
pop
orl
cmp
nopl
add
add
lahf
mov
je
mov
pop
or
mov
mov
mov
add
mov
add
mov
xlat
popf
jne
dec
cli
jg
mov
sbb
mov
test
test
pop
jns
aaa
xchg
mov
insb
mov
cs
mov
sahf
mov
dec
pop
jns
mov
mov
repnz
xor
mov
ds
clc
or
jge
mov
out
sarl
mov
lock
mov
orb
mov
faddl
in
aam
outsl
lock
in
mov
jne
rcll
addr16
adc
ss
js
bnd
push
enter
push
push
mov
pop
jbe
imul
call
outsl
jno
aaa
call
add
dec
cli
jl
cmpsl
pop
es
push
hlt
clc
cld
push
jne
inc
xchg
lock
push
cld
imull
into
inc
sub
push
in
mov
outsb
and
test
dec
mov
mov
repz
lock
add
xlat
mov
xor
fsubrs
mov
fisubl
xor
mov
dec
lock
mov
dec
das
lea
daa
and
cmp
xchg
mov
rorb
test
rorl
lds
mov
aam
jo
cltd
rcl
pop
ret
add
insl
pop
and
lret
dec
pop
xor
testl
pop
cli
mov
fstps
pop
pusha
rcrb
mov
nop
out
das
lods
clc
mov
test
add
shll
pop
mov
xlat
mov
xor
xor
repz
cli
cmpsb
mov
mov
inc
cli
inc
movsl
jnp
and
pop
cmp
fdivrs
inc
hlt
cli
ljmp
jae
sbb
or
pop
sbb
push
mov
xchg
jmp
push
sub
sbb
ljmp
shll
scas
xchg
inc
xor
xor
xchg
divb
cmp
dec
je
mov
mov
pop
sub
jbe
rcrl
insb
sbb
pop
inc
lods
mov
mov
push
add
shll
mov
cmpsl
pop
and
enter
out
into
sub
dec
fstpt
mov
addr16
xchg
jle,pn
jmp
rclb
and
push
sub
fldenv
scas
jg
cmp
jbe
pop
sbb
dec
int
adc
dec
pushf
lret
mov
push
xchg
mov
add
cmp
sbb
shrb
and
mov
mov
inc
lcall
ret
bound
adc
test
or
jnp
add
push
mov
xor
jle
sub
push
jge
js
mov
lret
fimull
push
or
dec
jne
xchg
sub
jmp
jmp
sar
mov
mov
push
add
std
arpl
into
cmp
jne
cs
and
lods
jmp
pop
lds
inc
ljmp
pop
in
mov
fcoms
sbb
jmp
push
mov
fildl
sub
jae
shl
mov
sti
outsb
movsb
xchg
pop
mov
rep
sbb
mov
xchg
decl
push
in
xchg
pop
pop
mov
mov
pushf
jmp
sub
xor
cmp
cld
pop
cli
cmp
imul
mov
add
and
mov
stos
fnsetpm(287
pop
dec
mov
bnd
pop
mov
or
jl
mov
ret
je
sarb
or
sar
ror
test
push
pop
pop
jne
lea
mov
jge
ret
fistps
xchg
inc
cltd
mov
lcall
cmp
out
in
fimuls
into
sbb
pushf
sub
cmp
xchg
xchg
fdivp
dec
fsubrs
rorl
lea
cmpsb
or
and
lret
stos
sub
je
pop
sbb
test
push
js
lahf
shr
mov
push
pop
outsb
adc
faddl
lock
sbb
mov
test
lahf
ret
sbb
add
mov
aad
cltd
jge
mov
xor
inc
inc
in
add
inc
lods
and
jmp
mov
sub
dec
jecxz
xor
es
aas
and
repnz
call
pop
js
mov
dec
shl
add
hlt
dec
or
dec
fdivl
or
jmp
jecxz
push
jne
push
dec
mov
rcrb
leave
roll
aad
std
test
fdivs
outsb
mov
mov
je
mov
or
je
mov
inc
je
mov
dec
jnp
add
hlt
dec
jl
mov
mov
loope
pop
cmp
jbe
mov
popa
mov
xchg
adc
fdivrl
ds
pop
mov
push
mov
loopne
mov
inc
iret
dec
mov
pusha
fwait
dec
clc
xchg
ret
xor
and
cs
int3
lahf
ds
bound
scas
stos
dec
sbb
daa
sub
cmc
test
inc
les
fdivrs
push
cld
xchg
lock
mov
push
and
jg
in
mov
mov
dec
test
dec
in
test
push
add
sub
xchg
push
mov
jne
pusha
mov
fdivrs
fmull
sbb
clc
dec
cld
lea
insb
fildl
add
cs
pop
rcr
cmp
jl
jmp
add
insl
add
cltd
loope
addps
push
lea
sti
and
sub
xchg
outsl
push
lea
cmpl
xor
stos
or
cli
pop
orb
pop
jge
mov
neg
jmp
or
add
scas
enter
xchg
push
mov
mov
fs
pop
sub
mov
inc
dec
shr
leave
jg
dec
mov
adc
add
pop
pop
pop
aam
ja
push
or
mov
mov
mov
cli
mov
mov
mov
or
arpl
push
add
add
loope
mov
add
mov
cs
daa
inc
cmp
add
rorb
ja
sar
rorb
push
sub
aas
jae
mov
sti
lea
stos
or
sub
mov
push
add
ja
mov
mov
add
pop
pop
mov
scas
push
or
rorl
jmp
enter
xor
push
pushf
push
lahf
dec
dec
insb
jp
cld
inc
dec
inc
dec
lods
or
xor
jge
divb
mov
std
mov
ljmp
ret
dec
aam
adc
jg
cmp
jl
pop
sbb
push
push
stos
je,pn
mov
stos
neg
mov
rep
jmp
inc
inc
mov
loop
movlps
les
stos
pop
pop
inc
clc
dec
test
gs
push
add
push
mov
repnz
fildll
sbb
sub
mov
add
leave
mov
mov
mov
cmpsb
lret
mov
adc
mov
mov
sub
aaa
cmp
scas
je
mov
dec
mov
repz
inc
lods
push
rcrl
jne
sbb
mov
and
push
sti
add
jecxz
js
je
inc
jne
pop
mov
ret
xchg
fnstsw
cmp
repnz
or
repnz
or
cmp
lret
rclb
adc
pushf
fwait
imul
inc
je
push
push
cmp
or
mov
or
push
notb
add
or
popf
pop
pop
inc
loop
push
mov
test
sub
mov
bnd
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
fstps
loopne
add
sub
dec
dec
cmp
mov
out
xchg
pop
jmp
std
je
inc
das
repnz
cmp
stos
or
inc
push
cli
adc
or
xor
aaa
inc
ja
inc
inc
imul
je,pn
imul
test
enter
cmp
xor
inc
fabs
push
jg
sarl
and
scas
insb
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
das
add
push
cmp
xor
stos
xchg
add
jns
mov
nop
sub
jge
pushf
mov
cmp
jae
cmpb
jb
movb
js
decb
and
cmp
jmp
xor
xor
jmp
add
cmp
inc
xor
push
mov
push
shr
mov
add
dec
dec
clc
xchg
out
xor
dec
inc
adc
jp
dec
loopne
call
rorl
je
push
pop
lds
push
add
or
or
lods
adc
jl
pushl
inc
sub
mov
loopne
jae
dec
add
xchg
rolb
mov
fildll
cli
cld
inc
xor
mov
pop
xchg
fwait
mov
das
rclb
pushf
and
jne
and
sub
cmp
pop
in
fsubl
inc
or
ljmp
enter
push
add
divl
pop
jmp
sbb
push
je
mov
iret
es
mov
add
sub
inc
ret
outsl
jns
fwait
sarl
loop
jl
fldz
cmpsb
xchg
mov
ds
lods
lods
out
aaa
or
icebp
daa
mov
loope
pusha
jne
inc
sbb
dec
and
fistpll
out
fldl
sub
pop
add
jg
jne
mov
push
xor
sahf
add
push
cld
inc
jbe
mov
adc
aas
jmp
fstpt
pop
dec
pop
add
test
mov
push
test
insl
js
js
and
push
int3
out
sbb
and
add
jae
fimull
cmpsb
fiaddl
jmp
aaa
mov
adc
or
es
jnp
or
push
inc
imul
push
cmp
aaa
cmp
andl
stos
pop
outsl
sbb
pcmpeqb
add
and
inc
adc
push
push
rcl
mov
xor
fistps
jne
lods
in
add
clc
push
mov
dec
in
insl
mov
mov
out
js
cld
and
cmp
mov
and
ss
or
ja
mov
insb
aam
xchg
cmp
ficoml
lock
push
sbb
fwait
scas
push
repnz
mov
in
cmpsb
xchg
xor
cmp
inc
or
sub
mov
in
adc
mov
xor
push
adc
test
mov
sbb
lea
or
sarl
dec
or
cmp
inc
stc
arpl
push
jae
inc
jecxz
inc
cmp
sub
add
pop
cmpsl
cmc
imul
adc
call
or
add
xor
cld
adc
fstpl
fwait
add
andb
pop
pop
mov
movsb
dec
fistps
jno
adc
addr16
orb
or
lcall
push
jbe
js
cmp
out
sti
add
bnd
insb
pushl
add
ljmp
mov
dec
mov
pop
mov
mov
push
cmp
and
mov
outsb
fld1
add
pop
mov
add
and
fldenv
mov
or
mov
mov
popa
shll
stos
pop
lret
shl
idiv
add
in
cmp
movsb
jg
add
lea
inc
pop
cmpl
jb
ja
and
jb
or
jb
add
fistps
cmp
ja
adc
fisttps
inc
enter
add
inc
dec
jne
sub
roll
cltd
idiv
imul
loope
shl
add
sub
mov
stc
add
pusha
ret
or
test
jne
inc
std
std
cwtl
mov
clc
mov
mov
inc
add
pop
pop
pop
inc
inc
movsl
push
mov
popa
adc
and
dec
popa
test
leave
jg
fdivrl
orl
ret
push
mov
lcall
test
cmp
jl
sbb
add
fistps
add
xchg
mov
ss
lock
or
dec
lock
imul
mov
push
sub
repnz
pop
xchg
cs
loopne
cmp
sub
or
or
push
ret
mov
rclb
enter
fst
add
insb
pusha
loop
cmp
jb
adc
ljmp
pop
sbb
push
push
dec
push
hlt
and
fwait
lea
stc
sbb
mov
mov
pop
jecxz
sbb
int3
or
scas
cmp
pop
mov
rcrl
and
add
cmp
push
and
sub
sub
repnz
mov
adc
lock
sbb
sbb
inc
xchg
sbb
mov
adc
ljmp
pop
shrb
mov
cmp
mov
sbb
jle
mov
and
imull
dec
jne
or
add
mulb
divb
adc
xor
xchg
add
add
inc
sub
in
lock
or
push
pop
add
add
testl
adc
inc
rcl
addb
or
sub
cmp
je
push
inc
call
inc
hlt
out
push
cmpb
sub
mov
push
lea
in
scas
sti
jbe
push
lock
repnz
or
movb
jb
test
outsl
jecxz
push
in
lret
out
stc
jge
call
mov
sahf
jecxz
outsl
call
ljmp
es
pop
stos
mov
cmp
inc
pusha
adc
in
out
repnz
sub
or
xor
std
cmp
push
stos
mov
adc
dec
sub
or
inc
pusha
mov
or
dec
push
inc
es
or
jge
cmp
mov
pusha
mov
sti
std
adc
cmp
push
sub
adc
mov
dec
jo
jns
add
lock
gs
add
out
arpl
mov
ret
loope
push
mov
inc
cmp
imul
xchg
in
outsl
ret
in
sbb
in
ret
and
dec
jbe
or
bswap
insb
lods
jmp
sbb
add
jmp
xor
jle
stos
jecxz
push
inc
cmpb
jne
push
orl
pusha
and
out
lahf
out
xchg
out
jns
add
add
add
push
or
fadds
movsb
sub
jp
add
cmp
push
jo
add
sub
incl
lcall
mov
int3
jp
push
das
mov
inc
rorb
insl
cmc
adc
lock
and
andb
jae
mov
pop
cmp
jne
mov
xor
xchg
loopne
jl
fisubs
push
andb
not
mov
pushf
or
or
or
imul
add
fstp
fcoms
or
or
or
scas
js
subb
push
pop
test
xchg
out
xor
scas
xchg
mov
repz
pop
int3
mov
mov
outsl
aam
and
rcrb
pop
pop
sbb
aam
push
and
lret
out
mov
cltd
cltd
sbb
pop
bound
std
inc
mov
andb
push
lea
and
jl
lcall
shrb
cmp
pop
jo
ret
sbb
xor
lock
test
sub
adcl
popa
test
outsb
fucomi
dec
je
add
jmp
out
aad
xor
popf
sub
mov
push
dec
and
and
push
daa
pushf
jl
imul
popa
and
pop
lods
loope
les
or
mov
loope
lock
and
add
adc
out
shll
je
or
push
jmp
sub
cmp
pop
je
jmp
cmpb
dec
mov
jle
cltd
test
sbb
add
stc
inc
adc
cmpsb
lahf
add
rolb
jmp
cmp
xor
mov
stos
stos
inc
lods
test
popa
mov
test
ret
dec
push
test
cmp
movsb
test
adc
or
or
jle
and
push
dec
bound
pop
sub
inc
inc
call
js
push
add
jb
test
add
dec
es
stos
loope
mov
mov
stos
mov
lcall
addl
daa
jns
cltd
nop
lret
add
add
loopne
push
ja
jns
adc
pushf
jns
mov
and
dec
es
outsl
push
cs
cmc
xchg
lea
lret
sbbb
add
lock
popa
sti
out
ret
mov
adc
or
call
or
lods
into
jge
xor
popf
add
inc
fisubs
push
dec
enter
je
inc
cwtl
jmp
push
sbb
aas
sbb
push
test
sahf
jmp
incl
add
sub
aam
mov
sub
scas
sbb
or
pop
push
jmp
mov
xchg
adc
cli
clc
inc
mov
or
decb
cmovno
push
dec
mov
adc
add
inc
sub
jno
ja
insl
add
rorb
jo
ret
jne
or
mov
imul
lea
mov
stos
lahf
or
ffree
les
xchg
mov
and
sub
jg
hlt
rcrb
je
mov
xor
roll
jae
call
sbb
fwait
mov
cmp
js
lcall
pop
add
lock
pop
inc
lcall
add
sarb
adc
sub
jae
and
jo
clc
add
popf
adc
ret
add
mov
push
movsb
sti
ret
fidivs
popa
or
in
sbb
jecxz
mov
xor
ljmp
xor
sbb
sub
mov
shll
test
lock
dec
sub
push
mov
out
mov
fwait
pop
jl
pop
dec
loopw
in
cmp
jne
incl
lods
pop
arpl
fbstp
mov
sub
and
sub
je
dec
je
sub
fsincos
pop
push
sub
je
jmp
mov
jmp
push
push
push
dec
jbe
icebp
push
jbe
push
inc
mov
jle
fadd
dec
shlb
add
inc
ljmp
xor
gs
add
cmp
add
pop
call
cmpsl
call
cmp
jecxz
or
outsb
mov
mov
lock
sbb
adc
ds
inc
mov
jmp
xchg
adc
pop
jne
mov
xlat
jne
jg
and
fcoml
jne
cmp
jg
lret
movsb
cli
pop
adc
shlb
cltd
xor
sub
add
jg
xchg
test
add
add
js
insb
stos
stos
out
add
adc
pop
dec
push
cmovs
gs
jno
add
scas
fmuls
fadds
xor
fsub
in
adc
cs
xchg
mov
out
mov
loopne
test
xchg
xchg
test
add
cmpsb
xor
out
push
adcl
addr16
jmp
icebp
cmpsb
jl
mov
add
and
int
sti
dec
rcrb
mov
cmpsb
les
mov
jge
lods
popf
ret
dec
jne
int3
lock
adc
hlt
lods
movsb
fcom
test
stc
sbb
mov
pop
repnz
sbb
add
push
dec
and
add
lock
fwait
push
pop
shll
imulb
jb
sub
inc
and
cmp
push
mov
and
in
call
sbb
inc
mov
ss
repnz
sbb
nop
out
jmp
std
les
int3
out
cmpsl
sbb
mov
jo
jge
add
fildll
cs
flds
xchg
imul
fmull
lock
jg
aaa
add
cmpb
jle
and
fs
jne
fadds
pop
ss
add
or
xor
jp
xchg
mov
cmp
xchg
mov
mov
mov
int3
fwait
test
cmpsb
push
mov
jne
cmpsb
and
sarl
xchg
imul
add
daa
fcmovnb
imul
add
fsubrl
fidivrs
inc
lcall
das
pop
or
pusha
xor
or
push
out
dec
jb
push
mov
add
and
in
jno
cmpsb
mov
fs
jo
lret
cs
pop
jge
repnz
fildl
mov
jge
dec
frstor
mov
xorb
push
call
lods
add
pop
sub
or
inc
adc
ljmp
inc
add
data16
xor
or
fdivrs
in
or
orl
sbb
add
pop
inc
or
xor
inc
add
and
test
cmp
xor
push
inc
ds
inc
ja
jne
packssdw
sbb
mov
or
add
push
or
add
adc
dec
push
mov
aaa
inc
push
sbb
add
push
scas
sbb
pusha
xor
into
inc
lods
mov
cmpsl
je
ret
xchg
or
int
pop
xor
stos
mov
push
call
inc
sbb
testb
pop
add
sbb
outsl
push
cmp
ret
jne
mov
imul
daa
fnstsw
sbb
fcmovne
pop
jb
sbb
fwait
jmp
sbb
mov
lret
adc
fisttpll
adc
out
les
push
xchg
dec
or
ficoml
push
arpl
in
mov
jmp
inc
mov
sub
jb
or
je
or
xchg
jmp
add
xor
cltd
pop
clc
mov
ljmp
lret
jmp
or
leave
pop
mov
cltd
pop
jnp
loope
mov
addl
dec
in
mov
add
adc
leave
movsl
lods
in
loope
sbb
dec
push
mov
jecxz
push
inc
push
adc
jl
sbb
ja
test
mov
nop
or
lcall
mov
lods
sbb
or
or
cmp
lock
inc
inc
movl
adc
cld
inc
lock
in
mov
inc
repnz
or
push
sub
pop
add
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
mov
imul
jbe
add
xor
push
jl
je
xchg
jne
lock
adc
adc
popf
mov
add
mov
cmp
rclb
insb
incl
mov
inc
jl
mov
mov
insb
sar
data16
out
in
xadd
bound
mov
es
or
popa
or
fcmovu
jbe
loopne
sar
and
add
subl
loope
les
sbb
pop
xchg
outsl
ret
hlt
add
fsubrs
push
add
jno
mov
and
out
xor
and
push
mov
dec
inc
push
jecxz
mov
clc
nop
fs
out
ret
or
insl
mov
inc
add
sub
mov
jmp
sbb
fwait
mov
sbb
je
scas
sbb
add
hlt
jmp
notl
mov
orb
sbb
test
mov
pop
jg
inc
jg
lods
add
les
push
jmp
insl
cmovp
shll
jmp
mov
jmp
iret
adc
ret
add
push
mov
sbb
jmp
and
xor
jmp
in
push
push
push
leave
in
jle
pop
mov
orb
cmpb
cmp
add
add
sub
fsubl
daa
and
jecxz
cmp
push
sub
pop
test
cmp
lea
test
mov
popf
pop
adc
add
and
cmp
test
dec
cmp
and
imul
aaa
lahf
xor
cmp
sub
nop
cmpsb
dec
mov
xor
xor
ja
data16
xchg
test
les
mov
sub
imulb
in
mov
fidivrl
fsubrs
push
or
dec
not
pop
mov
push
jle
xchg
cld
dec
fadds
and
dec
add
popa
rorb
mov
fwait
daa
test
sbb
lock
test
lahf
dec
cmp
mov
sub
popf
sarb
mov
xor
push
lea
int3
xchg
push
out
stos
ja
movsb
pcmpgtd
je
out
or
cs
or
cmp
pop
mov
or
inc
loope
jo
jmp
je
adc
inc
and
xor
jae
dec
mov
pop
push
cld
hlt
pushf
pop
lock
sub
cwtl
loope
test
inc
xor
daa
sbb
pop
push
push
mov
arpl
sub
bound
addr16
cwtl
adc
das
in
sbb
xchg
xor
insb
pop
icebp
sub
fildl
or
sub
pop
repnz
push
dec
test
adc
or
add
les
popa
les
sar
imul
sub
mov
ja
add
jnp
and
ret
sahf
cmc
mov
inc
mov
add
inc
or
pop
cmpb
jge
lahf
outsl
sub
pushf
sbb
or
test
xchg
in
sub
xchg
dec
xlat
xor
gs
pop
scas
int3
lods
or
cmp
jbe
jne
sbb
xor
mov
jmp
into
es
or
cwtl
inc
fscale
or
pop
lods
mov
pop
xchg
sbb
shll
aas
xlat
pop
push
push
rcl
lret
adc
sub
ficoms
jnp
rorb
pushf
and
lea
adc
jb
jbe
and
mov
mov
jmp
jmp
loopne
icebp
sub
cld
add
inc
mov
mov
mov
aad
mov
lds
insb
ficompl
inc
or
jge
clc
js
insl
jne
in
push
loopne
xchg
dec
loopne
ret
lea
xor
add
and
int3
mov
insl
add
push
mov
push
adc
xor
sbb
les
movsb
rclb
push
xchg
pop
enter
push
push
cmp
je
jmp
push
cs
aas
xor
inc
xor
lcall
and
add
push
imul
mov
push
xchg
inc
adc
mov
push
add
aaa
nop
cmpsb
adc
pop
lcall
in
insl
iret
lret
mov
es
adc
je
sub
inc
faddl
sbb
xor
lock
inc
or
or
stos
xchg
adc
test
jne
inc
ret
in
movsl
add
int3
xchg
fs
and
pop
dec
decb
push
add
jl
mov
shlb
jl
cs
push
push
enter
shrb
mov
cmp
clc
mov
outsb
and
xchg
out
roll
sub
stc
mov
mov
int
xchg
add
sbb
nop
rcl
adc
cmpb
cltd
or
cmp
int3
aad
cmp
sbb
out
mov
gs
int3
cld
std
rolb
ss
ljmp
jae
jae
inc
loopne
fdivrl
mov
xor
in
inc
data16
hlt
xor
lock
cmp
shl
xchg
jnp
adc
test
push
push
jp
cmp
mov
push
xchg
mov
and
outsl
scas
mov
mov
ljmp
inc
adc
dec
andb
jp
fwait
add
cmp
lods
int3
xor
cmp
bound
mov
leave
inc
adc
push
inc
inc
sub
mov
mov
cwtl
push
sbb
movb
inc
pusha
imul
es
in
pop
inc
pushf
pushf
adc
dec
orl
aaa
or
rorl
xor
das
xchg
ret
push
stc
and
inc
adc
inc
inc
cltd
push
push
daa
push
insb
incl
cmp
mov
loop
adc
push
lahf
jge
mov
shlb
sbb
adc
jmp
jmp
mov
cmpl
jnp
mov
jl
pcmpeqw
cmp
cmpsl
jle
mov
fucomip
shl
or
es
push
rolb
sub
adc
jne
pop
aam
clc
xor
jae
popf
arpl
mov
xchg
movsb
mov
cmp
pop
sbb
cmp
xor
popa
and
stos
sub
mov
adc
xchg
ret
or
fstpt
iret
sub
div
adc
push
adc
mov
cmpb
adc
xchg
pusha
pusha
adc
add
xchg
aad
or
scas
xchg
mov
add
adc
aas
mov
sti
xchg
or
sub
and
loope
add
jns
dec
or
inc
data16
add
add
xchg
add
add
aad
adc
add
je
xor
jo
cmp
leave
cmp
rcrb
daa
inc
shll
mov
or
test
in
mov
inc
pop
jg
mov
scas
lock
jbe
das
adc
jl
mov
and
xor
inc
insb
or
inc
inc
inc
jge
shlb
sub
jg
lock
mov
mov
lock
ljmp
lods
fstpt
jl
jne
sbb
mov
xor
push
jmp
nop
dec
or
mov
mov
push
pop
jmp
insb
or
fildll
push
in
push
push
mov
dec
cmp
lock
push
mov
jg
xchg
or
or
push
fwait
es
jns
es
xor
mov
jge
pop
mov
fdivrs
scas
pop
shrb
sub
aaa
push
daa
ja
movl
xor
add
push
shrl
shll
mov
and
xor
adc
int3
and
ja
pop
aam
mov
adc
ljmp
test
adc
nop
addr16
jnp
push
adc
and
dec
jno
and
mov
xchg
scas
imul
add
inc
or
mov
insl
das
cmp
std
push
cs
xor
shrb
add
jbe
pop
in
adc
jmp
xchg
push
outsl
sbb
sub
andb
aas
add
mov
sahf
jge
hlt
inc
ja
add
fs
inc
cmp
addb
jl
js
jge
xchg
or
cmp
notl
adc
addb
xor
lock
push
add
scas
or
iret
clc
sub
aaa
inc
inc
add
dec
in
or
sub
test
cmp
jbe
iret
or
bound
add
inc
mov
movsl
add
adc
pusha
repnz
shrl
xchg
popa
push
xor
stos
stos
test
je
lcall
and
jne
pop
hlt
loopne
xchg
jl
aad
pop
enter
jae
and
outsb
jmp
in
pop
clc
insl
fmul
pop
aad
loope
dec
lods
mov
inc
or
push
mov
fwait
cld
call
fidivs
push
mov
sub
jb
inc
mov
cs
push
cld
inc
sti
stos
sbb
lret
jne
mov
out
or
sub
or
pop
dec
ret
xlat
clc
pop
ja
pop
or
inc
scas
je
sbb
out
push
movl
dec
add
jns
mov
mov
dec
data16
enter
outsl
push
faddl
mov
or
arpl
mov
mov
std
add
test
pusha
lds
in
or
mov
iret
push
cmp
mov
or
mov
in
ret
mov
popa
mov
out
push
mov
inc
inc
cmp
pop
jne
lea
mov
sub
loope
movsl
clc
imul
pop
xchg
jnp
rorl
adc
inc
push
dec
jne
jmp
push
loop
fsubrs
cmp
and
pop
arpl
push
mov
sub
dec
jne
push
enter
jne
je
test
add
ret
push
xor
xchg
or
outsb
sbb
pop
add
jmp
sbb
bound
fcompl
mov
mov
movsb
inc
call
sbb
mov
repnz
jb
scas
cmp
push
mov
jb
in
insl
das
xchg
out
leave
mov
pop
push
cwtl
xor
fcoml
mov
test
mov
and
fcomp
mov
jge
cmp
jle
fidivl
leave
add
sub
mov
cmp
xchg
sbb
int3
mov
and
add
or
xor
fidivl
in
test
dec
sahf
mov
aas
ret
adc
ds
shl
inc
clc
mov
add
push
cld
push
jbe
push
hlt
mov
das
adc
test
je
push
add
into
fld
mov
sbb
jg
and
das
fs
outsl
scas
insl
add
fs
mov
adc
insl
pop
lods
xlat
mov
inc
push
or
dec
pop
mov
adc
int3
pop
jbe
jp
push
cmp
out
in
pop
mov
shlb
jne
imul
mov
xchg
fcomi
inc
or
je
xchg
xchg
or
lea
jmp
fisubrl
fisttpll
daa
mov
nop
inc
jecxz
lret
outsb
xchg
mov
fwait
hlt
xchg
jge
adcb
fsubrs
push
incl
pop
xor
dec
add
sbb
outsb
test
pop
dec
add
sahf
add
pop
clc
sub
test
test
xorl
and
testl
fsubrp
pop
mov
fcompl
jae
mov
cmp
leave
cld
push
in
icebp
mov
dec
es
in
push
fstps
and
repz
add
stos
adc
dec
pop
cltd
test
or
dec
in
lods
inc
fcoml
filds
lret
lods
mov
pop
outsl
mov
sbb
out
and
sbb
inc
repz
xlat
sbb
enter
adc
mov
push
insl
imul
xor
or
mov
sahf
lock
sub
in
imul
gs
and
mov
inc
and
cmp
xchg
lock
inc
in
pop
dec
ret
xchg
sub
add
cmp
cmpsl
mov
lock
mov
push
or
in
in
clc
mov
sbb
inc
cmp
jne
cli
and
test
dec
test
jle
sub
pusha
mov
nop
jo
fistl
inc
jmp
es
lret
mov
sbb
sbb
int
dec
pusha
mov
in
mov
add
add
ljmp
out
loopne
push
into
or
adc
push
fstps
pop
mov
inc
or
mov
inc
test
xor
add
cmpsl
test
lds
xchg
jb
mov
mov
push
jg
pop
and
inc
or
add
pusha
xlat
test
push
test
adc
dec
lods
or
das
pop
hlt
add
lock
sub
movl
sar
add
loopne
outsb
loope
in
or
adc
sbb
jbe
jb
and
pop
dec
addb
imul
iret
dec
sahf
sub
dec
or
mov
inc
pop
pop
or
adc
cmp
out
mov
mov
pop
enter
mov
sbb
pop
sbb
adc
pop
adc
clc
mov
jnp
or
and
jl
iret
enter
add
sub
inc
stc
int
test
loopne
seta
mov
lea
into
loope
cld
int3
lock
adc
xor
sbb
data16
in
aam
orb
das
int
cld
mov
xchg
sub
lds
xchg
ret
incl
adc
sub
fnstenv
testb
inc
decl
cmpl
pop
imul
add
roll
adc
ja
sbb
clc
pop
mov
orb
inc
or
add
mov
inc
cmp
mov
rolb
xchg
dec
movsb
dec
inc
cld
jo
je
mov
pop
fs
push
ja
dec
or
dec
jg
xchg
out
xor
int
enter
or
jmp
or
sbb
adc
pushf
mov
xor
cmp
xor
cmpsl
mov
add
or
and
inc
or
loope
or
xor
enter
cmp
adc
fcmovnbe
sbb
jne
cmp
jns
mov
loope
push
fnstcw
andb
jle
mov
xor
dec
loop
jge
and
insl
rclb
daa
jmp
xor
popf
arpl
push
roll
mov
ret
int3
mov
lahf
pop
pop
fmull
lret
int
repz
rolb
faddl
cmp
adc
insl
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
outsb
jo
sahf
out
cwtl
pop
dec
nop
movsb
mov
subb
push
adc
cmp
push
jae
imul
jle
lods
jnp
inc
ds
scas
inc
push
xor
mov
mov
jl
mov
adc
sbb
in
repnz
mov
adc
or
or
add
leave
jnp
inc
mov
xor
fldl
inc
clc
push
jo
hlt
mov
inc
lock
in
inc
mov
call
add
lods
inc
faddl
mov
out
aam
shrb
add
out
popf
int3
push
mov
sbb
repnz
mov
test
cs
mov
cmpsl
xlat
mov
cwtl
out
out
fidivs
out
test
mov
movsb
pop
test
leave
xor
mov
enter
jbe
leave
xor
popf
push
mov
lahf
mov
lock
fiaddl
push
sarl
int3
mov
mov
dec
outsl
sbb
inc
and
and
fnstsw
cmp
adc
xchg
add
adc
add
int3
cmp
dec
xor
orb
jge
sub
and
add
push
or
in
addb
and
xchg
inc
push
jb
nop
test
xor
adc
xchg
les
mov
enter
out
adc
shlb
and
shl
daa
jecxz
jg
xor
jecxz
jl
cmp
addb
push
sub
jl
pop
pop
or
in
clc
or
xchg
out
xchg
push
or
js
push
addr16
mov
jge
jge
enter
add
test
aaa
ss
adc
imul
ret
dec
rorb
fcoms
iret
xchg
push
fs
call
adc
leave
cmp
xor
inc
mov
shll
sbb
jg
call
addr16
ss
adcl
test
pop
jne
adc
xchg
dec
enter
and
inc
jmp
nop
or
pop
leave
xchg
and
es
clc
jecxz
ljmp
clc
lea
jge
pop
jg
dec
push
cmc
sbb
adc
mov
cmp
clc
jo
sub
xlat
ret
dec
addl
jbe
add
jns
adc
cld
jb
and
orb
jecxz
ljmp
or
add
adc
movsb
mov
and
sbb
adc
jmp
or
or
cltd
clc
add
out
inc
xchg
adc
adc
adc
pop
adcb
push
sbbb
mov
cld
sbb
movsb
filds
std
push
orl
repnz
ret
or
in
fldl
mov
add
mov
aam
mov
test
test
lret
sub
fs
mov
cltd
fs
inc
mov
xchg
dec
push
rcrb
dec
les
xchg
dec
es
push
lret
pushf
js
out
xchg
lret
fcoms
xchg
lret
nop
faddl
gs
mov
lret
out
jmp
out
xchg
shr
inc
ljmp
mov
hlt
lea
out
jmp
out
clc
mov
enter
je
push
into
dec
pusha
pop
inc
push
inc
push
jns
pop
daa
dec
add
cld
jge
repnz
je
fs
jne
das
dec
jne
mov
pop
mov
imul
in
and
add
jb
insl
jo
repnz
xor
jb
insl
push
je
pop
push
cmp
sub
sahf
and
bound
popf
sbb
jae
pop
inc
jns
add
pop
outsl
xchg
xchg
out
cld
push
xchg
and
in
cld
add
ljmp
gs
add
and
pop
add
adc
inc
fistpll
push
sbbb
out
cltd
jnp
enter
mov
adc
push
mov
sub
mov
mov
add
pop
inc
push
pop
push
fs
cwtl
sarl
js
pusha
or
jns
lret
iret
int3
shrb
inc
cld
pop
lods
xchg
xchg
lock
adc
dec
dec
inc
mov
nop
inc
testb
adc
test
or
jae
cmpsb
clc
cmc
das
jo
adc
adc
add
jo
or
test
mov
and
sbb
nop
add
xchg
inc
push
in
hlt
hlt
hlt
int3
out
faddp
int3
int
fiaddl
in
cmpsb
jg
sahf
mov
add
lret
mov
jg
adc
aaa
stc
push
mov
js
push
icebp
pop
test
enter
out
sti
cmpsb
inc
dec
test
jbe
gs
adc
cmp
push
xor
adc
or
jbe
imul
pop
inc
push
push
sub
pop
sub
xchg
xchg
repnz
adcl
mov
mov
jg
nop
push
sbb
adc
pop
mov
push
hlt
hlt
ficoms
or
and
sbb
repz
mov
push
mov
pop
mov
jb
loope
arpl
and
push
and
xchg
outsb
adc
js
push
and
in
test
test
dec
loope
and
push
iret
sbb
mov
in
inc
jb
add
daa
xchg
ret
iret
push
cmc
push
cmc
fiadds
insl
jo
sbbb
mov
inc
sub
nop
adc
and
roll
push
outsb
divb
pop
mov
movsl
int
ds
mov
push
sub
or
fadd
out
sbb
divb
outsl
bound
inc
fs
mov
repnz
pop
inc
xor
in
idivb
push
mov
jmp
in
adc
test
jno
cmp
dec
outsb
es
dec
push
jns
es
mov
popf
nop
lock
cli
in
add
pusha
sbb
testl
loopne
sub
cmp
test
clc
in
pushf
add
clc
test
inc
push
and
mov
add
jg
rclb
add
fwait
addl
jbe
clc
sub
or
pop
sbb
ljmp
movl
dec
push
sbb
fs
push
nop
or
imul
add
enter
cwtl
adc
mov
inc
jo
xchg
iret
pop
inc
dec
pop
out
mov
mov
pop
dec
mov
mov
repz
ds
lock
hlt
dec
ds
in
mov
cmc
xchg
cmp
cld
call
insb
adc
popl
inc
or
xor
sarb
jae
xor
enter
mov
ja
ror
int3
or
imul
jae
fwait
out
add
mov
movb
nop
sbbl
mov
or
out
inc
sub
fdivs
call
int3
sub
cltd
repnz
push
add
push
pusha
roll
in
push
aad
jmp
adc
jmp
test
addr16
orb
adc
std
adc
or
and
sub
cmp
xchg
mov
jmp
inc
in
and
jg
push
ja
mov
jne
enter
xlat
xor
xchg
inc
cmpb
cmp
cmp
mov
push
popa
pop
out
shlb
push
insl
cmp
roll
and
test
mov
add
loop
xchg
orl
imul
lahf
ret
xchg
daa
push
jge
idivl
incl
ja
popf
insb
jnp
and
pushf
xchg
jne
mov
mov
pushf
xchg
out
lods
mov
or
les
sbbb
ljmp
pop
in
pop
mov
call
pop
test
pop
or
in
ret
pop
ret
outsb
push
add
pop
and
add
pandn
jne
les
je
dec
orb
xchg
lea
and
movzwl
push
lcall
rcrl
imul
lea
or
or
inc
add
aas
cmp
clc
fistpl
out
mov
adcl
fs
dec
inc
das
sahf
and
sbb
lea
push
pop
in
repz
dec
jnp
dec
pop
pusha
out
sarb
subb
in
test
data16
fsubl
fsts
jl
repnz
jge
mov
cld
xlat
xor
ja
sbb
adc
or
loopne
loopne
bound
jne
jmp
mov
inc
sub
or
add
jmp
xor
div
and
fsubr
and
movsl
hlt
inc
cmpsl
add
imul
or
push
add
and
or
pop
jb
mov
push
add
shll
je
ret
aas
jns
and
clc
push
inc
es
fimull
call
sub
push
push
pop
in
or
adc
push
inc
loopne
xor
enter
in
and
loopne
std
dec
and
or
xchg
cmpl
jae
adc
pop
or
push
dec
inc
test
and
shr
in
cmp
lds
and
in
push
mov
aad
sbb
xchg
sub
jmp
push
fstpt
out
cmpsl
cmpl
push
movsb
fiaddl
add
call
decl
push
xchg
cmpsl
sbb
adc
jns
pop
mov
mov
jbe
je
push
and
dec
incl
adc
cmp
je
add
sbb
ljmp
dec
add
and
repz
inc
out
js
sub
mov
inc
scas
sbb
in
mov
shrb
or
pop
adc
lock
lock
je
pop
jne
push
mov
insl
inc
fwait
inc
add
or
or
test
push
dec
or
cmp
aad
mov
outsl
cltd
int
inc
xchg
and
mov
orb
hlt
js
call
inc
movsb
push
add
movsl
pusha
out
push
mov
mov
repnz
add
sub
mov
sarb
or
adc
xchg
fnstenv
inc
cmp
sub
repz
gs
cwtl
outsb
xchg
out
imulb
inc
mov
and
lret
iret
jnp
push
in
std
or
inc
stos
or
mov
xor
fisttps
hlt
push
daa
mov
leave
and
xor
xor
frstor
or
clc
out
add
bnd
mov
insb
fidivl
push
ficompl
rolb
arpl
cmp
adc
jmp
and
enter
add
add
add
pop
ja
pop
dec
mov
push
js
push
jecxz
aam
aaa
and
loope
jl
sub
jmp
cld
xor
and
push
adc
insb
lret
je
inc
jmp
testb
jne
mov
imul
lcall
push
hlt
or
stos
sbb
sbb
aam
mov
pop
lock
inc
adc
sarl
rorl
pushf
sbb
dec
sbb
iret
mov
idivl
out
inc
or
fs
fisubl
and
insb
outsb
xchg
bound
mov
aas
jmp
imul
pusha
or
and
cmp
cmp
test
sub
add
enter
push
xor
in
inc
dec
xor
dec
js
push
sub
add
cmove
jb
lret
movhps
stc
push
adc
lods
icebp
push
push
mov
mov
push
cmp
into
test
jbe
jae
ret
sbb
ret
push
push
pop
add
pop
pop
add
add
sub
movsb
add
pop
hlt
mov
inc
push
lds
push
scas
or
repnz
xlat
sbb
rorl
push
sti
mov
sbb
or
imul
lock
lret
fstp
orb
cmp
adc
pop
push
ss
stc
bound
cmp
mov
add
sahf
out
sahf
adc
mov
repz
and
cmp
insl
pop
daa
in
decb
es
cmpb
mov
inc
cmpsl
sbb
xlat
pop
in
cmp
loopne
and
add
in
add
push
and
insb
ljmp
xor
adc
clc
frstor
xchg
sbb
sbb
and
jb
push
sbb
cmp
leave
pop
aas
cmc
and
shlb
pusha
nop
xchg
call
xchg
add
out
inc
xor
jp
add
lret
cmpl
hlt
divb
mov
add
add
adc
roll
dec
and
fwait
xchg
dec
insb
jmp
mov
sbb
sti
pop
or
das
ftst
fwait
inc
out
iret
inc
push
mov
clc
push
and
dec
jo
xor
cld
pop
setns
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
ret
sub
js
mov
mov
or
xchg
jp
add
pop
mov
cli
sarl
call
cmpsl
outsb
push
mov
mov
or
push
mov
mov
popa
xchg
push
or
mov
jmp
lret
adc
in
cmp
and
fimuls
pusha
das
inc
and
aaa
inc
push
jle
cs
cli
movsl
push
mov
push
add
je
sub
rcll
data16
pop
lods
or
xor
push
sbb
pop
adc
or
nop
mov
cmovno
arpl
aaa
or
repz
out
xchg
mov
shl
lahf
out
ds
cmp
or
push
insb
fiadds
jnp
or
jns
mov
push
pop
jg
call
imul
je
aas
sub
fwait
out
movswl
sbb
aam
xor
pushf
push
sar
cmp
pop
jnp
cwtl
loope
and
push
adc
push
push
stc
push
sbb
mov
and
shll
rol
mov
xor
enter
mov
xor
cwtl
je
dec
mov
adc
outsl
gs
idivl
test
push
push
inc
arpl
fisubl
lret
mov
push
pop
scas
or
cmp
repz
push
aas
bound
jmp
jb
in
add
sahf
out
mov
add
outsl
push
jno
pop
fldcw
fst
ds
and
push
inc
push
sub
and
mov
mov
pop
imul
sub
sbb
femms
xor
sbb
js
sbb
jb
aaa
and
xlat
mov
push
notl
and
jmp
dec
jmp
or
sbb
mov
addr16
jb
mov
add
jle
or
add
mov
rcll
xor
outsb
pop
or
mov
jmp
rcpps
sub
in
xsave
fadds
cmp
mov
out
and
sbb
fldt
jb
push
jo
pop
push
je
leave
sbbl
lret
adc
leave
add
arpl
loopne
fisttpll
adc
in
in
jo
clc
or
add
or
jnp
inc
adc
pop
push
and
xor
mov
jmp
jo
in
jp
xchg
out
in
mov
mov
sub
cmp
adc
adcb
pop
jmp
pusha
xchg
pop
add
adc
adcb
adc
adc
out
cmp
or
add
sub
loop
cmc
push
xadd
jns
adc
and
sbbl
inc
mov
and
dec
push
call
mov
adc
and
mov
adc
push
adc
sahf
in
flds
repz
add
mov
pop
adc
lahf
imul
mov
dec
xor
xlat
inc
inc
adc
test
stos
add
andb
adc
call
sbb
sbb
mov
mov
inc
xchg
add
and
fucomp
pop
push
bound
aaa
cltd
jne
stc
sub
shlb
sbb
int3
and
inc
pop
movl
mov
mov
and
push
adc
bound
lret
hlt
loope
mov
lock
sub
dec
pop
outsb
idivb
xchg
lea
cmp
or
imul
jmp
dec
call
addb
ss
xor
in
mov
pusha
jns
int3
xor
jae
jno
xchg
fldl
enter
xabort
sub
addr16
and
call
xor
subl
sbb
outsb
ficoml
xor
call
sbb
ja
adc
add
icebp
adc
test
enter
lret
sti
sahf
out
push
push
bound
out
fdivr
push
pop
lods
je
iret
repz
xor
cmp
repz
pop
outsl
or
movsb
clc
lock
adc
daa
push
dec
jb
push
cmp
ss
lds
mov
xor
or
xor
xchg
fisttpl
and
add
sub
push
rolb
mov
and
mov
and
push
or
push
add
cmp
pusha
test
sbb
adc
jl
xchg
and
xchg
mov
test
sbb
mov
int3
ljmp
pop
adc
aas
push
mov
repz
gs
xchg
push
fwait
sub
mov
xchg
arpl
inc
and
pop
movsb
sub
mov
push
movsl
jmp
and
mov
mov
pop
daa
adc
add
inc
out
cmp
jmp
loope
sbb
imul
inc
test
adc
fildll
jmpw
pop
lcall
scas
inc
mov
negb
and
jb
inc
adc
xor
testb
loope
xchg
mov
xchg
pop
movsl
dec
fadds
jg
add
addr16
sbb
nop
sub
mov
or
adc
xor
cmp
push
mov
jns
mov
sbb
orl
and
or
mov
or
popf
jns
rolb
das
add
jp
cmp
mov
push
cmp
iret
repz
jne
lahf
mov
inc
fnsetpm(287
jnp
sbb
sbb
sahf
call
adc
sub
push
sub
sbb
or
push
rcr
xchg
sbb
sbb
and
flds
or
inc
cmp
fstp
imul
and
mov
mul
sti
push
incl
pusha
dec
mov
inc
daa
add
mov
cli
xorl
rcll
jmp
das
sbb
add
seta
fistps
pop
hlt
repz
jns
add
push
sub
fstl
inc
jle
rolb
lea
iret
repz
movsl
mov
push
mov
int
sbb
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
inc
movb
add
rorb
aas
jmp
cmp
aam
je
cmpsb
xor
mov
mov
add
sub
neg
ret
push
jb
sbb
int
clc
push
add
data16
jmp
addr16
or
fstpl
dec
ds
mov
add
daa
aam
popf
rorl
loopne
rolb
mov
popa
mov
and
mov
pop
leave
stos
sbb
jge
xchg
push
add
test
sub
or
pop
loopne
inc
push
add
in
sub
push
push
out
sahf
out
xchg
jl
ret
and
fdivp
fsubl
daa
stc
push
and
cmp
push
jns
mov
xchg
dec
mov
clc
adc
add
inc
filds
adc
flds
add
imul
rorl
mov
adc
cmpsb
ffree
cmp
fildl
sub
pop
push
loopne
push
xor
std
inc
sub
insb
adc
inc
imul
pop
aaa
fcomps
mull
mov
adc
or
andb
sarl
mov
adc
and
and
jge
out
arpl
and
mov
adc
mov
push
fiaddl
add
repz
pop
es
loope
enter
sbb
add
sahf
xchg
test
and
sbb
inc
imul
inc
add
sub
sarb
daa
mov
outsl
popa
inc
sub
ds
adc
push
gs
pop
cmp
push
adc
aam
mov
sub
adc
jmp
push
or
mulb
fstpt
daa
lock
fldt
daa
cmp
bound
and
imul
adc
cs
mov
daa
push
push
push
jnp
movsl
and
stos
xor
fstp
aas
out
fs
fisttpl
sbbl
dec
mov
jnp
and
gs
and
fildll
sub
sub
lods
inc
xor
and
shlb
add
pop
add
adc
inc
into
loopne
aad
es
inc
push
pop
dec
sub
outsb
inc
jb
xor
aam
loopne
mov
fs
add
pusha
inc
mov
jecxz
adc
xlat
jl
sbb
xchg
adc
fcomip
hlt
push
and
inc
push
dec
insl
out
mov
push
lock
mov
jbe
pop
in
enter
daa
dec
push
enter
hlt
daa
scas
es
es
andl
push
ljmp
and
and
into
fdivp
je
sahf
xor
pop
dec
pop
pop
adc
iret
je
mov
add
pop
sbb
pop
fisttpl
dec
pop
jns
dec
dec
lahf
inc
adc
or
sub
lahf
push
mov
or
lods
lahf
sbb
sub
dec
adc
or
sub
mov
rorb
inc
mov
out
xchg
test
sub
pop
subl
scas
cmp
ret
inc
rcrl
pop
daa
ljmp
push
sub
mov
mov
outsl
push
adc
cmp
fsubrl
dec
leave
jns
dec
jns
push
test
sbb
and
pop
dec
pop
clc
pop
dec
adc
sub
sub
inc
or
repnz
in
xchg
and
push
in
and
dec
sub
scas
pusha
rolb
insl
iret
push
enter
push
fildll
dec
and
push
inc
jb
cmp
sub
sub
xchg
push
add
jge
sub
dec
addl
mov
push
cs
fs
cmp
leave
jbe
cwtl
test
das
mov
mov
roll
jl
out
out
push
or
and
enter
imul
lcall
jl
les
frstpm(287
mov
and
sbb
pop
out
sub
in
pop
sbb
mov
les
push
insl
mov
mov
xorl
push
inc
sbb
jae
nop
and
jecxz
inc
xchg
push
mov
pop
cld
inc
movsb
cmp
into
pop
pusha
dec
xor
and
imul
cmp
scas
lret
push
call
lock
and
inc
daa
fildl
and
movsb
sub
push
mov
ror
repnz
cmp
add
mov
cmp
mov
orl
lods
mov
xchg
pusha
xor
dec
pop
int3
inc
popa
test
add
push
or
orb
xchg
xchg
movb
lahf
outsl
nop
or
cmpl
addl
popf
push
mov
lods
mov
mov
lcall
movsb
clc
mov
add
xor
add
inc
fisubrl
ds
es
lock
or
add
in
test
addl
inc
and
or
sub
mov
dec
inc
inc
adc
adc
add
dec
xchg
add
add
cmp
xlat
jg
adcl
cmp
pusha
xchg
jno
xor
xchg
arpl
cmp
es
adc
cmp
sbbl
mov
dec
and
lods
in
cmp
or
and
nop
lds
adc
push
adc
mov
cmpb
or
xor
and
lret
mov
push
inc
mov
and
pusha
xor
xor
xor
sti
and
fwait
cmp
push
test
icebp
push
out
lcall
jnp
repz
pushf
mov
push
iret
jae
ds
ss
pop
and
daa
xor
jae
xor
pushf
sub
add
and
cs
cld
sarb
mov
fidivs
rcr
mov
jnp
xor
or
clc
mov
inc
aas
bound
cld
push
xchg
adc
in
xchg
imul
lock
sbb
add
sub
add
js
in
dec
cmp
mov
ds
and
xchg
into
push
or
loopne
xchg
jbe
rorl
pop
push
fsubl
xchg
jo
test
jae
test
aam
aaa
adc
jb
shlb
cs
dec
add
jns
call
hlt
bound
mov
sti
int
push
outsl
push
les
add
or
mov
cmp
mov
add
sarb
adc
xor
lock
iret
rcrl
loope
cmp
fwait
imulb
inc
cmp
push
add
repz
imul
in
ret
adc
push
mov
popa
push
adc
cmp
xchg
pop
in
mov
fnsave
and
pop
pop
jb
shrb
pusha
ja
test
mov
xchg
pop
pusha
aaa
shlb
popf
movsb
mov
nop
inc
mov
xchg
or
pushf
cwtl
mov
sbb
cwtl
xor
stos
xchg
jno
sub
xchg
jmp
adcl
jmp
pushf
inc
sub
and
fcoml
mov
and
addl
xchg
cmp
in
or
mov
or
mov
adc
mov
in
nop
pop
and
out
jmp
and
add
jne
js
jecxz
dec
cmpsb
nop
inc
test
cmp
pop
test
in
sbb
push
leave
stos
or
mov
sub
inc
jb
mov
mov
shlb
cmp
cltd
mov
in
fs
inc
dec
ret
pop
cmp
inc
dec
sbb
mov
add
cmpl
lds
adc
jns
push
push
push
fiadds
fbld
xor
push
es
sahf
out
imul
fstpt
repz
pop
je
mov
adc
lods
cmp
fs
dec
dec
or
sub
adc
fadds
fdivs
push
inc
dec
fadds
push
inc
push
push
adc
push
jb
cmp
cmp
in
in
test
adc
aaa
loopne
enter
movsbl
les
fdivs
and
aam
and
ror
jl
subb
jo
pop
xchg
imul
inc
sub
insb
enter
mov
xchg
cmpsl
sub
mov
dec
ds
pop
mov
ds
repz
and
aas
pop
aas
inc
out
cltd
mov
outsl
push
sbb
mov
clc
cmp
add
shrb
xor
xchg
mov
mov
aaa
aaa
mov
mov
int3
xorl
mov
mov
fadds
push
es
popa
test
test
adc
cwtl
movsb
aaa
movsb
aad
sbb
cmp
sbb
ret
imul
lods
or
outsl
aaa
cmp
mov
cltd
xor
cmp
sub
popa
shl
mov
add
mov
and
test
nop
add
sbb
lds
jno
das
mov
push
inc
popa
add
or
repz
test
gs
dec
sub
jl
inc
and
cmp
pusha
or
mov
push
push
or
test
push
fsubs
test
push
sub
jmp
jmp
dec
xor
js
dec
cmpsb
add
or
push
stos
ja
data16
rclb
call
or
adc
inc
inc
cli
dec
jp
out
out
dec
lret
ret
sub
cmp
push
dec
pop
lea
sub
cmp
outsb
inc
insl
inc
cs
xchg
or
add
adc
pop
int3
or
and
add
push
push
xor
jle
cmp
xor
mov
mov
pop
jmp
movw
push
out
testb
imul
inc
out
popa
arpl
xchg
jg
push
adc
mov
xchg
sub
faddl
dec
adc
sub
push
inc
aas
adc
sub
sub
fldt
push
dec
bound
dec
or
push
and
push
and
and
daa
xor
xor
lret
repnz
dec
xlat
and
dec
inc
and
fstpl
fwait
into
and
push
add
js
sub
adc
xchg
mov
ds
xchg
mov
gs
outsl
enter
cmp
adc
push
and
xorl
add
or
shl
inc
shll
mov
pop
mov
outsl
push
or
nop
mov
sub
xchg
mov
inc
nop
inc
or
inc
inc
add
movsl
pop
and
test
push
ss
jnp
mov
es
cmp
mov
test
adc
and
mov
add
lods
pop
add
push
aaa
shrl
decb
sbb
mov
fbld
je
xor
push
mov
cmpl
ja
jmp
and
sarl
push
xorb
sbb
cmp
jmp
outsb
cmc
lods
add
test
push
jp
aas
rolb
aaa
cli
inc
imul
cmp
adc
xchg
jmp
faddp
pop
add
xchg
and
out
fmull
push
pop
decb
jb
xchg
pop
cs
cmp
and
mov
or
addl
jns
add
mov
jmp
xchg
or
sbb
pop
inc
pop
arpl
push
ds
add
adc
xchg
mov
mov
add
mov
cmpsl
addr16
insb
test
int
jbe
mov
imul
insb
lea
adc
lahf
in
dec
xor
push
outsb
imul
inc
arpl
clc
stc
push
pushf
pop
add
inc
iret
jb
sbb
inc
jns
and
sbb
xchg
and
add
push
jb
adc
clc
cmp
cmp
bound
mov
out
int3
fidivs
mov
scas
xlat
mov
popf
add
add
mov
jbe
das
add
clc
fbstp
sbb
cmp
mov
outsb
inc
popa
cmpsl
int3
pop
mov
dec
sbb
jg
sti
or
sub
jl
inc
jl
mov
pop
iret
adc
test
push
or
dec
and
and
stc
dec
test
mov
mov
or
adc
inc
outsb
jns
xchg
sub
and
push
gs
pop
or
push
ret
jmp
and
ss
test
pop
pop
cltd
out
jp
into
pusha
or
adc
or
xchg
ljmp
cmp
xor
cmp
es
and
out
out
dec
push
cmp
js
add
dec
arpl
sbb
and
adc
pop
icebp
dec
stos
mov
into
popf
cld
pop
scas
or
clc
dec
pop
sub
jle
push
xchg
mov
xor
adc
cmp
push
js
out
sub
push
pop
dec
mulb
sbb
and
xchg
lods
test
add
push
lock
dec
xor
add
or
or
inc
popf
or
aam
fisttpl
mov
adc
mov
adc
sahf
decb
pop
push
or
mov
sahf
into
icebp
fwait
mov
bound
inc
hlt
jg
push
cli
pop
jp
mov
mov
cmp
jg
mov
push
dec
jne
arpl
and
add
ss
cmp
test
popa
std
and
or
or
and
xor
aaa
int3
sub
mov
sub
adc
gs
imul
dec
sbb
xor
xchg
jno
inc
fs
pop
lods
push
sub
pusha
arpl
xchg
movb
or
lods
pop
pop
mov
pop
cmp
mov
mov
cs
in
mov
mov
movsb
mov
addb
mov
ss
div
push
adc
sbb
xchg
jbe
addb
adc
inc
xlat
dec
call
inc
outsb
jg
inc
call
je
or
add
sub
pop
out
es
sbb
fcmovnbe
jge
in
cwtl
jne
jecxz
push
mov
push
push
imul
imul
sbb
mov
mov
loopne
or
das
dec
loopne
scas
add
push
mov
inc
jle
pushl
dec
jns
push
sbb
inc
lahf
es
shlb
xlat
fmull
push
or
loopne
scas
sti
sbb
xor
sub
adc
out
sbb
rclb
xchg
fcmovnu
cmp
or
mov
fcoml
arpl
mov
aaa
hlt
lods
mov
outsl
mov
jmp
and
clc
adcl
or
jne
inc
push
lea
repz
xchg
push
addr16
lea
js
cltd
dec
sbb
fabs
inc
push
push
fnstsw
push
push
mov
sbb
ss
push
lds
jge
jbe
je
repz
hlt
sahf
negl
movsl
stos
addr16
xorb
and
inc
inc
cmp
jle
mov
xchg
xor
decb
mov
push
leave
adc
mov
loop
add
add
icebp
and
xchg
dec
dec
push
sub
mov
lods
scas
sub
inc
mov
test
inc
cmp
add
call
sbb
xchg
add
daa
cmp
je
xorb
stos
inc
xor
dec
cmp
lcall
bound
pop
scas
jmp
mov
nop
adc
call
adc
jl
inc
xor
cld
adc
add
call
imull
dec
sub
adc
mov
sub
loop
cmp
adc
fildl
inc
hlt
idiv
inc
xchg
pop
xorl
decl
outsb
or
adc
bound
orl
inc
push
imul
mov
inc
js
and
shrb
sbb
sub
cwtl
inc
mov
js
repz
sbbb
fdivrs
jo
fcompl
mov
adc
add
jp
mov
rorb
or
or
aaa
aaa
mov
or
je
pcmpeqb
mov
rorb
or
lahf
push
add
push
add
dec
cld
aas
jne
andb
push
in
clc
arpl
insb
sbb
lods
and
fdivp
inc
push
clc
and
push
inc
jl
scas
andl
jle
sarl
inc
fistps
sarb
jg
daa
inc
and
mov
push
hlt
inc
test
dec
jo
out
lods
cmp
jg
ficomps
sbb
nop
add
imul
rorb
push
push
outsb
lock
icebp
or
fcmovne
shrl
jle
jg
sbb
ret
or
or
xchg
fisttpll
pop
mov
imul
push
pop
es
movsl
mov
jg
push
call
cmpsb
sti
inc
popf
jecxz
pop
add
and
stc
mov
adc
push
and
fstpt
sub
add
mov
pop
ja
testb
mov
repnz
cmp
data16
insb
and
shll
aad
call
and
dec
mov
icebp
insl
jg
xor
adc
sbb
sbb
pusha
push
add
mov
add
jae
and
sahf
push
jp
mov
adc
or
or
fcoms
in
movsl
dec
push
fadds
and
cmp
stc
adc
sub
cld
dec
add
sbb
and
fidivs
lds
push
ds
inc
xchg
inc
out
lock
nop
mov
add
rclb
ds
lahf
add
stc
jmp
pop
or
cmp
pop
mov
xor
inc
scas
sub
mov
imul
fsub
sub
jle
fwait
sbb
lods
push
pop
mov
rolb
add
xor
fistl
push
pop
mov
dec
inc
fadds
cmpsl
xor
fmuls
roll
lea
enter
movsb
and
sub
hlt
xor
subl
sbb
adc
mov
ljmp
pop
repz
repz
push
pushw
cmp
popf
or
xchg
xchg
inc
inc
aam
fdivl
xchg
lret
dec
clc
out
add
aas
mov
int
ja
jp
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jnp
out
jmp
rcl
int3
cwtl
pop
psrld
bound
insl
or
lods
push
popa
xor
dec
xor
mov
imul
test
in
xor
or
xor
mov
les
call
sbb
sbb
xor
clc
fs
mov
cwtl
sbb
cs
jo
and
xor
dec
mov
dec
cmp
inc
mov
mov
push
adc
icebp
push
outsl
sbb
cli
insl
rorl
jl
sbb
add
cmp
cltd
adc
call
popf
clc
xchg
pop
nop
daa
out
and
les
test
pop
lcall
push
nop
sahf
adc
ror
not
lcall
pop
xor
es
push
jl
jge
cmp
lret
xlat
push
adc
ds
test
les
out
inc
mov
shlb
test
cmp
adc
adc
movsb
fmuls
inc
add
addb
mov
ret
mov
call
dec
insb
fs
adc
ret
incl
and
loope
or
test
dec
dec
ljmp
sbb
dec
aas
sar
mov
mov
mov
dec
scas
sti
pop
test
loope
pop
sub
stc
leave
inc
ja
xor
clc
addl
popa
adc
lods
clc
cwtl
inc
dec
into
mov
adc
inc
ljmp
jb
add
add
push
inc
mov
dec
sbb
ja
cmpxchg
jg
mov
out
sub
fildl
mov
push
leave
nop
adcl
jg
inc
nop
inc
push
push
int
pop
sub
jl
inc
out
mov
xor
mov
inc
dec
jne
aas
lcall
stos
jne
xor
inc
add
fsubl
int
inc
jmp
add
int3
and
ret
rolb
in
add
pop
bound
aam
or
fadds
pop
cmpl
dec
shlb
nop
add
orb
push
jle
add
test
sbbl
popf
es
mov
sarb
loopne
rclb
insb
add
or
inc
in
jne
lret
aaa
pop
xor
out
cmp
pop
out
fcoms
add
insb
cld
pusha
add
inc
ds
jne
mov
fsubrs
xor
les
scas
jg
filds
dec
fisttps
cmpsb
aas
movw
mov
stc
dec
or
jbe
por
addr16
test
inc
jp
push
inc
pop
ret
add
js
inc
sub
loopne
sahf
jb
fdivrl
js
pusha
or
mov
mov
pop
mov
cmp
jmp
add
bound
cmp
add
cmpsl
or
daa
push
fcmovbe
pusha
inc
daa
adc
fadds
daa
mov
or
inc
cld
inc
inc
gs
add
lret
popa
pop
xchg
lods
pop
ja
xor
test
jbe
adc
cmpsl
imul
mov
add
sub
dec
std
adc
jg
repnz
test
ss
mov
add
adc
clc
lea
pop
cmp
data16
push
dec
ss
cld
mov
hlt
add
lea
cli
push
insl
sbb
push
cmp
jo
jge
enter
mov
fcoms
inc
pop
mov
mov
mov
sbb
dec
sahf
clc
fwait
clc
mov
sti
add
push
clc
cld
ds
mov
mov
cmp
inc
hlt
stos
sub
adcl
jne
lea
popa
mov
ds
xlat
sbb
enter
dec
fldenv
or
ret
xor
jmp
aas
or
mov
imul
or
fdivp
gs
ret
inc
or
and
or
pop
inc
daa
testl
shrb
jmp
cmp
and
cmpb
int
adc
add
pop
push
add
add
mov
cmp
jnp
aam
and
and
fsts
fsubs
jae
daa
sbb
repz
jl
inc
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
and
pop
or
loopne
sbb
pop
int
push
or
sub
add
into
cmp
pop
xor
insb
lock
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
enter
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
iret
arpl
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
mov
stc
add
inc
popl
insb
ljmp
call
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
filds
mov
push
lret
xchg
fadds
push
push
clc
push
les
les
mov
daa
fiaddl
xchg
pop
mov
xchg
in
xchg
mov
inc
sbb
adc
pop
in
push
or
cmp
mov
pop
mov
push
dec
clc
in
or
jb
or
pop
jbe
loopne
push
shll
push
test
cmp
cmp
data16
mov
jns
mov
mov
or
ret
jno
lea
mov
mov
pop
mov
test
add
push
dec
mov
or
xchg
lock
dec
sub
lock
fs
add
mov
lock
cmp
sbb
mov
cmpl
xor
add
mov
mov
das
or
ja
xchg
ja
add
add
loop
inc
add
push
xorb
cmpb
movsl
mov
xor
jo
repz
sbb
push
adc
ja
inc
and
jne
decb
leave
add
mov
dec
dec
dec
mov
sub
cmp
dec
add
mov
jle
inc
out
and
fistl
jae
jne
mov
call
sbb
mov
adc
pushf
divb
inc
xor
bnd
push
dec
pop
sub
sbb
inc
gs
repnz
add
xor
dec
jo
dec
in
cmp
test
push
sub
enter
scas
xchg
xchg
xchg
enter
xchg
xchg
cwtl
cltd
enter
lcall
enter
or
addl
xchg
enter
enter
mov
enter
pop
imul
pop
pusha
imul
jo
mov
push
fs
dec
dec
lock
jns
jp
xchg
xchg
insl
mov
push
pop
pop
mov
lea
push
lahf
push
cmc
or
xchg
popf
adc
push
adc
negl
ret
cmpsl
jp
add
adc
inc
mov
inc
sub
jl
scas
adc
fsts
jno
push
push
nop
imul
push
aam
add
mov
pop
push
push
jb
jo
jb
jns
imul
imul
stos
inc
shlb
adc
imul
and
xchg
lret
test
ja
push
out
dec
ret
out
daa
mov
xchg
mov
pop
mov
sbbl
or
in
lock
mov
cli
add
dec
sti
and
xchg
aaa
outsb
fstpt
inc
add
and
fidivs
test
pushf
push
mov
cmp
pop
movsb
push
jo
push
fildl
inc
imul
mov
in
insl
mov
cltd
insb
mov
pop
jg
sbb
mov
cwtl
push
mov
call
aam
not
fs
fsubl
pusha
inc
mov
rep
inc
mov
inc
gs
mov
inc
orb
dec
bound
or
or
mov
lods
inc
push
iret
pop
xchg
out
add
cltd
sbb
insb
inc
fst
movsl
push
add
cmpsb
jge
xchg
addr16
orb
inc
jl
call
popa
sbb
outsl
push
or
sbb
and
inc
ret
adc
dec
or
inc
or
cmp
aas
or
adc
add
out
cmp
les
in
mov
outsb
call
and
add
std
add
clc
push
sbb
psllq
push
adc
pop
jp
sbb
lret
mov
jbe
in
inc
faddl
movsb
jl
dec
enter
js
or
cmpsl
mov
xlat
inc
xchg
push
jno
xor
mov
ja
and
mov
xor
scas
lock
fldenv
xor
and
subb
sub
xorb
jo
aas
mov
repnz
pop
loopne
dec
mov
dec
decl
jle
jl
push
into
xchg
mov
rcll
mov
shrb
xor
fdivrs
leave
cmp
or
jmp
rcrl
push
gs
xchg
mov
sbb
mov
jge
jne
push
adc
dec
mov
and
je
les
dec
mov
or
xor
lock
andl
fidivs
pop
in
in
aaa
push
int
and
movsb
call
in
jo
jae
cld
outsl
test
gs
in
lods
insl
in
or
or
cmp
jo
jmp
cmp
pop
mov
pop
jbe
jne
sub
cmpb
inc
popa
outsl
jno
xchg
leave
sbb
inc
adc
jg
jp
lods
mov
fstl
loope
dec
movsl
add
jno
mov
jnp
add
fdivp
or
fnstcw
cmpsl
mov
ret
test
gs
pushf
xlat
xor
movsl
push
xor
rol
adc
mov
pop
jb
ds
or
jmp
pop
pop
cld
in
adc
xor
pop
loopne
aam
cmp
lods
xchg
cwtl
jg
xor
and
mov
cmp
dec
or
hlt
out
xchg
pop
xchg
pop
je
les
cli
rcrb
and
andl
and
jb
add
dec
xchg
movsl
or
push
dec
lods
inc
mov
mov
adc
inc
popf
ret
push
bound
cli
call
mov
xor
test
jne
push
push
jno
std
cs
dec
xor
cmp
jle
xor
lcall
or
rcrb
sub
je
or
cmc
xor
adc
pop
shrb
push
sub
mov
pop
pop
adc
inc
aaa
orl
inc
gs
sub
or
add
nop
fisttps
clc
jg
sbb
mov
movzwl
ret
push
push
movsb
mov
sbb
lret
je
mov
dec
and
sbb
outsb
mov
iret
xor
and
jmp
jle
in
je
jmp
js
pop
fdivrl
mov
insb
sbb
test
out
jne
loope
rcll
cld
arpl
pop
mov
push
cmpsl
lds
je
sub
xchg
addb
and
add
addr16
lods
xchg
push
cmp
aas
pop
je
mov
cmp
lar
decb
ja
mov
xlat
mov
adc
sbb
or
cli
aad
mov
cmp
insb
loopne
std
in
push
add
or
adc
add
mov
mov
pop
into
jmp
imul
and
aaa
mov
in
fisttpl
int
push
adc
mov
mov
sbbb
ja
jb
add
add
call
out
xchg
and
mov
mov
or
adc
in
push
jl
cmpsl
iret
imul
out
loope
cmpb
xor
arpl
and
ja
insb
movsb
add
sub
sahf
out
pop
cwtl
notb
addb
lret
scas
mov
mov
sbb
or
dec
pushf
xchg
mov
mov
and
fadd
jecxz
popa
dec
ret
jge
scas
cmp
add
sbb
mov
adc
mov
and
push
adc
jne
cmpl
cwtl
pop
pushl
push
movsl
xor
outsb
or
xor
dec
xor
pop
pop
sbb
dec
pop
sbb
xor
fadds
mov
add
leave
push
add
xor
mov
aaa
iret
jmp
cmp
bnd
add
jmp
clc
dec
cld
mov
cs
cltd
push
idivb
mov
or
movsl
and
mov
lock
lea
inc
test
add
jmp
xchg
movsb
push
sub
mov
push
xchg
movl
xchg
jecxz
mov
mov
inc
pop
pusha
inc
sbb
repnz
xor
cmp
add
repnz
pop
adc
faddl
fs
subb
add
push
movsl
jle
neg
mov
incl
cmp
pop
push
ret
call
or
mov
push
ret
mov
test
enter
stos
mov
jg
jp
mov
clc
ret
ss
aam
or
add
ss
push
jge
test
shrb
mov
sti
jo
sub
das
bound
or
jo
xchg
xchg
fdivl
ret
or
enter
jle
inc
xor
clc
inc
jge
add
push
popa
fstpt
inc
jb
in
scas
cmpl
aad
jns
sbb
scas
or
adc
xlat
cmp
les
ret
push
scas
pop
jp
or
cmpsl
mov
or
or
dec
je
jmp
fdivrl
push
pop
stos
jl
adc
imul
sbb
addr16
or
jmp
movsb
popa
sbb
out
sahf
sbb
xchg
daa
fs
loopne
cmove
sub
push
or
shrl
push
jmp
push
mov
mov
xchg
push
or
xorb
sarb
adcb
mull
in
andl
adc
jl
lea
hlt
push
stos
sbb
mov
add
or
jae
mov
test
or
add
mov
mov
add
push
imul
addl
cmp
jl
or
sbb
mov
jmp
iret
and
fstpl
or
cs
cmp
sub
clc
cld
xchg
cmp
ret
or
xor
iret
cmp
add
jl
cmpsb
xor
js
rclb
sbb
pop
outsl
loopne
jne
je
lea
jnp
add
popa
jns
negl
enter
push
cmpsl
mov
imulb
out
flds
fstpt
dec
fstl
movsb
push
inc
add
push
pop
cmpb
dec
jge
mov
fildll
jmp
push
fdivs
jo
cld
inc
cmp
pusha
das
movsb
stos
ss
push
jnp
adc
mov
or
ja
or
jg
xorl
or
mov
dec
push
fadd
add
push
aas
xor
aam
addb
pop
faddl
jnp
dec
xlat
jnp
cmc
xorl
test
mov
iret
shr
cmc
fldt
fstps
arpl
jbe
outsl
inc
adc
out
pop
push
mov
inc
adc
or
arpl
fmuls
sub
sbb
pop
lret
add
mov
mov
push
xor
insb
jge
fistl
aaa
or
cmp
jb
insl
sbbb
les
xchg
rcr
imul
jnp
add
cmp
inc
push
inc
outsl
xor
cmp
and
jmp
std
movq
push
lock
dec
addb
pop
jmp
sbb
sub
push
push
add
jmp
or
pop
ret
jb
and
clc
lea
add
push
jge
pop
pop
sub
jp
adc
jno
pushl
lock
and
fildl
sbb
adc
inc
push
cltd
lret
adc
pop
xchg
mov
je
jp
imul
loope
ja
jb
icebp
xlat
mov
out
or
ret
vpaddsw
lcall
movsb
cmpsb
icebp
dec
add
test
flds
and
fwait
dec
cmp
mov
mov
pop
or
jne
or
mov
or
in
pop
call
adc
sbbl
lods
adc
testl
mov
sub
xchg
aam
das
das
dec
adcl
add
pop
adc
je
addr16
push
dec
push
dec
pop
push
dec
or
add
cmp
jl
invd
dec
push
gs
imul
inc
or
add
inc
mov
pop
repnz
lods
pop
push
mov
or
gs
insl
js
push
cmp
dec
or
in
push
or
cmpsl
or
pop
inc
inc
push
cli
dec
and
orb
sbb
or
or
push
into
sbb
or
or
mov
iret
adc
sbbb
addr16
lret
add
inc
loop
push
insb
cmp
and
cmp
xchg
scas
dec
sarb
adc
clc
outsl
or
incl
mov
mov
mov
add
pop
sbb
cmp
stos
pop
fcoml
ljmp
aad
adc
sbb
scas
push
sub
adc
dec
xlat
pusha
iret
push
imul
push
ja
outsb
addr16
stos
shrl
inc
cmp
pop
mov
test
icebp
nop
movsb
orl
incb
imul
out
orb
jnp
mov
xchg
xor
pop
push
jb
mov
bsf
mov
lods
test
jb
jb
mov
jb
aam
int3
test
inc
xchg
shrb
mov
dec
addb
add
push
inc
insb
imul
xchg
cmpsb
scas
shl
mov
cmpsb
dec
imul
lock
fsubrs
jns
sbb
insb
mov
or
mov
inc
ja
dec
jb
jae,pn
fcoml
push
add
imul
mov
fs
outsl
test
lock
popf
sbb
adc
dec
outsl
sbb
sub
push
xchg
push
out
dec
outsb
adc
fsubrs
xchg
jnp
xor
roll
sbb
push
mov
inc
outsb
insb
call
mov
cmpsl
or
dec
imul
adc
xchg
test
or
movsb
jbe
out
mov
lock
gs
add
push
xchg
out
add
nop
aam
add
ficomps
jo
sbb
fimull
jns
xchg
xchg
xchg
jbe
xchg
cmp
add
adc
push
cmp
inc
jbe
dec
or
push
fsubs
enter
flds
push
add
push
cmpsl
hlt
mov
movsl
cmp
mov
movsl
push
mov
repnz
and
push
xchg
mov
push
or
sub
push
and
dec
lods
outsb
sbbl
in
dec
or
pusha
cmpsl
push
leave
xchg
pusha
mov
mov
mov
mov
pop
nop
adc
out
mov
mov
shrl
push
inc
and
inc
outsb
sarl
mov
or
mov
sarl
out
mov
rorl
imul
pop
or
and
js
sbbl
push
nop
mov
pop
fdivrs
movsl
insl
jo
jb
jbe
push
mov
xor
montmul
mov
cwtl
nop
jb
push
mov
inc
jo
outsl
adc
sbb
xchg
xor
lock
outsb
adc
add
nop
lods
adc
jl
in
push
pusha
scas
add
sahf
mov
push
and
mov
mov
mov
repnz
mov
scas
lods
or
ror
call
add
sub
or
sbb
add
rorl
pop
mov
pushf
shl
fdivl
push
mov
mov
movsb
test
test
movl
and
insb
ret
or
add
fimuls
ror
push
jbe
push
imul
jne
inc
imul
lock
mov
sub
push
and
xchg
fiadds
enter
mov
in
push
and
or
cmpl
lods
dec
inc
lcall
cmp
mov
pop
pop
cmovns
jae
fs
jo
das
sar
jge
das
pushf
jae
push
rclb
sahf
cmpsb
adc
call
iret
fdivl
pop
jl
outsb
adc
sbb
cwtl
mov
mov
int3
data16
fwait
mov
mov
out
mov
dec
roll
insb
xor
mov
or
mov
lcall
mov
jnp
cmp
lock
cmp
mov
inc
arpl
and
xor
push
ljmp
cmpsb
lret
das
dec
jle
xor
nop
aas
jl
cs
movsb
xor
mov
or
xchg
clc
les
into
lock
fadd
pop
push
leave
push
lods
mov
fwait
loope
lret
push
xor
pop
push
lds
outsl
fs
cmp
test
pop
mov
fwait
in
enter
enter
mov
sub
mov
loope
add
push
iret
shlb
js
dec
je
and
out
inc
xchg
inc
out
loopne
or
add
push
in
pop
popf
mov
pop
test
inc
int
push
jns
fimull
xchg
fbstp
stc
fcoms
fsubrs
mov
cwtl
push
or
or
add
or
and
jb
out
sub
and
roll
loopne
push
pushf
adc
pinsrw
or
inc
dec
adc
adc
mov
xchg
jl
xchg
adc
xchg
mov
xchg
mov
inc
jo
mov
repz
js
testl
out
in
ret
mov
mov
daa
cmp
or
in
push
in
adc
in
push
sbb
inc
push
in
and
and
add
sbb
in
in
ds
repz
dec
or
push
and
out
sahf
out
xchg
mov
iret
fnstsw
loope
sahf
jmp
pop
ds
insb
outsl
inc
pop
cs
push
add
jmp
xchg
inc
xor
xchg
pop
adc
outsb
push
repz
iret
cld
fs
iret
repz
pop
fs
clc
push
in
dec
test
mov
push
test
add
or
pop
push
adc
aaa
movsb
jno
filds
xor
clc
sub
mov
aad
gs
pop
push
lahf
jle
pop
fwait
fs
xchg
je
daa
xchg
popf
idivl
fcomp
iret
scas
dec
cmp
fldl
insb
and
pop
fdivrp
inc
std
in
ja
push
pop
add
push
mov
cwtl
mov
popa
rorb
xchg
arpl
jns
xchg
pop
inc
unpckhps
fsubrp
data16
and
adc
gs
cltd
fidivrl
mov
jno
cmpsb
jecxz
adc
mov
mov
xchg
add
inc
fsubrs
pop
push
imul
lret
and
int3
cmp
test
push
xor
jae
lcall
add
pop
sbb
inc
int
dec
addb
jle
int
jmp
xchg
sub
mov
lcall
push
fadds
add
enter
jno
sbb
or
dec
sub
push
inc
insb
or
negb
push
movsb
adc
imul
sti
adc
sti
fwait
icebp
lcall
cli
stc
clc
push
push
push
push
push
push
loop
cmp
jnp
lock
sub
sub
js
cmp
push
pusha
fimuls
jns
mov
dec
push
xor
sbb
push
or
xor
and
mov
xlat
add
sub
aam
add
push
xor
pop
add
test
push
popa
addr16
test
lcall
push
lods
push
or
loopne
mov
les
sbb
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
incb
push
or
push
push
pop
mov
or
and
mov
push
sub
adc
les
mov
out
cmpsb
pop
or
jnp
add
pop
sub
add
cwtl
and
mov
dec
dec
fs
imul
shr
cmpl
pusha
ficoml
inc
movsb
lcall
bound
loopne
frstpm(287
gs
cld
nop
mov
cmpsl
dec
push
mov
pop
dec
mov
aad
jb
stc
push
mov
add
inc
popf
add
jb
leave
jae
fidivl
loopne
loopne
push
inc
lcall
pop
stos
dec
inc
in
popf
lods
xchg
jo
mov
push
mov
dec
pop
cmp
xor
or
adc
dec
adc
outsl
je
push
or
pop
and
jmp
adc
sub
mov
pop
scas
lcall
add
mov
pop
add
mov
and
add
repz
push
sub
jne
ss
jmp
sbb
adc
cmp
add
movsl
mov
push
neg
mov
dec
add
jbe
xor
xor
dec
and
sbb
push
or
nop
vpcomub
mov
je
shl
and
leave
js
pop
xor
shlb
add
pop
or
mov
jae
je
call
out
rorl
clc
mov
dec
daa
fsubrl
loop
sub
add
xchg
pop
jmp
push
and
pop
sbb
pop
jmp
ljmp
inc
add
jb
or
int3
cmp
push
inc
or
lods
stos
and
mov
in
int
or
nop
movsb
mov
hlt
lret
dec
mov
cmp
sahf
fistl
inc
in
xchg
cld
cld
sbb
cmp
sahf
test
addr16
jbe
fimuls
lea
cmp
pop
sub
sbb
dec
sahf
ret
sub
lret
movsl
mov
inc
out
gs
fs
addb
xchg
popf
pushl
or
fimuls
or
dec
call
paddq
inc
cmp
jecxz
sbb
adc
rorb
sub
inc
push
movsb
pusha
add
add
cmpsl
lea
or
sahf
mov
lds
sub
adc
dec
imul
xor
xchg
push
lcall
test
lods
xchg
sbb
imul
pushf
xchg
loopne
inc
adc
xor
push
jmp
loope
sbb
repnz
lcall
mov
cmp
cli
mov
add
movb
sub
iret
mov
lea
pop
add
in
jl
shrl
jmp
push
inc
dec
jne
mov
xor
rorl
xor
cmpsb
inc
lds
inc
sbb
dec
call
push
mov
push
aam
rcr
nop
sub
enter
cmpb
mov
or
dec
popf
cwtl
and
push
pop
add
xchg
dec
mov
and
mov
dec
shll
clc
rcll
les
mov
adcb
in
cld
pop
sub
cltd
fidivrl
add
pop
push
or
cwtl
call
adc
xchg
inc
dec
cmpsl
into
nop
mov
push
sbb
or
and
lcall
or
push
jp
call
jmp
push
in
xor
es
in
cmp
inc
pop
xorl
fcmovnu
push
inc
imul
icebp
cmp
push
push
call
jl
jecxz
dec
call
rolb
paddw
popf
fmull
xchg
mov
sbb
pop
loopne
and
mov
lret
out
mov
and
jge
dec
dec
enter
mov
cwtl
mov
jge
sbbb
faddp
mov
je
pop
jg
pop
xor
aad
popl
pop
add
xchg
inc
add
fnsave
lret
mov
shlb
mov
mov
sbb
cli
xor
pusha
mov
movsb
cmp
adcl
mov
adc
mov
rcr
scas
leave
enter
xchg
rolb
mov
adcb
int
lret
rorl
movsb
jae
pop
loopne
sub
shll
add
xchg
push
imul
add
enter
mov
lods
das
dec
jb
repz
lahf
adc
add
push
fisubl
fadds
movsl
adc
sbb
push
das
add
ret
cmpsb
mov
nop
outsb
adc
push
jo
les
push
test
ja
enter
sbb
pop
fnsave
sbb
add
xchg
mov
inc
push
push
push
inc
fists
xchg
adc
arpl
lret
stos
xchg
fsubp
cmpsl
cmp
jmp
jmp
cmp
je
sub
insb
rcll
and
clc
push
jb
pop
mov
cmpsl
xchg
pusha
or
mov
cltd
inc
cmpsl
xchg
cmp
mov
cs
and
dec
into
mov
and
push
adc
test
cld
inc
push
lds
test
or
adc
add
xlat
or
add
push
or
jae
addr16
mov
or
test
or
int3
mov
push
loope
pop
inc
outsb
cwtl
cwtl
hlt
pop
dec
adc
xchg
in
mov
and
push
pop
popa
and
les
js
rclb
mov
mov
xor
mov
sbb
xor
push
sbb
sub
xchg
add
incb
pusha
mov
sbb
loope
pop
dec
cld
mov
jmp
ret
add
enter
mov
ss
mov
cmp
jne
sbb
sbb
lahf
and
out
xor
sub
mov
in
push
cwtl
add
data16
loopne
add
daa
in
and
adc
or
mov
mov
inc
cmp
mov
or
test
and
shl
cwtl
loope
mov
pop
cmovg
mov
subl
mov
or
cmp
push
mov
and
inc
push
and
insb
pop
dec
loop
sti
xchg
dec
push
xor
sub
les
sbb
xor
add
mov
aaa
stos
mov
sub
cmc
pusha
outsb
xchg
sbb
in
cwtl
jo
sbb
fdivrs
mov
rcll
nop
sahf
mov
sbb
push
aas
xlat
cmp
pop
mov
inc
xchg
lahf
mov
int3
adc
adcb
loope
dec
lock
jae
leave
mov
push
or
clc
sub
sub
jne
push
arpl
pop
idiv
rolb
pop
stc
add
lods
fstpt
xor
into
je
mov
jo
je
mov
inc
fisttps
adc
ret
pop
popf
dec
adc
xor
lea
pop
fnstcw
or
shl
sbb
in
adc
dec
fst
lea
in
in
fsubrs
and
mov
imul
insb
test
fwait
cmp
loopne
jmp
cltd
mov
jl
xchg
aad
jbe
cmp
das
les
ljmp
sbb
idivl
inc
ss
lret
lahf
push
or
mov
fmull
shlb
loop
inc
adc
push
mov
incl
or
leave
aam
mov
xchg
lret
jp
xor
adc
add
nop
mov
mov
shrd
cmp
sahf
xchg
or
mov
pop
inc
decl
mov
sbb
out
popf
andb
loope
loop
adc
or
add
shr
cmc
mov
push
push
sub
pop
inc
xor
je
int
jo
jge
pop
lcall
inc
loopne
divl
dec
inc
ds
xchg
add
sbb
pop
xor
scas
push
push
xor
outsb
inc
inc
ret
or
int
sbb
inc
sahf
add
nop
pop
mov
dec
add
lret
sbb
or
jmp
cmp
sar
pop
add
aad
leave
jmp
inc
cmp
jge
std
push
inc
dec
add
adc
jne
sbb
leave
jbe
cs
loop
andl
xlat
std
jle
adcl
or
or
and
xchg
lea
push
hlt
jecxz
aad
mov
cmp
and
movsb
push
jmp
cwtl
add
dec
lret
das
pop
out
mov
enter
shlb
rcrb
pushf
or
dec
xchg
je
mov
dec
shl
test
sbb
sbb
adc
push
jns
inc
ja
lock
inc
mov
sarl
pop
addb
add
bound
push
and
dec
jne
cmp
sub
jg
dec
hlt
dec
dec
inc
cmp
add
cmp
mov
add
cmpsl
lret
movsl
subl
pop
xor
pop
inc
mov
dec
jno
cmpsb
aas
sbb
rcl
mov
lock
pusha
mov
dec
mov
ja
push
inc
stos
lods
sbb
add
mov
das
jns
mov
js
aam
mov
inc
jne
cmpsl
loop
subl
and
or
leave
jae
dec
dec
and
movsl
xor
xor
aaa
iret
arpl
sub
add
sub
pop
not
xchg
mov
and
and
loop
data16
scas
aam
inc
enter
pop
stos
jb
mov
fistps
add
xor
mov
cmp
dec
or
pop
pop
dec
pop
sar
incl
sbb
call
out
je
movsl
test
inc
xor
in
inc
rol
sbb
push
fisubl
mov
push
lds
or
mov
fisttpl
adc
adc
adc
add
cld
xchg
add
cmovp
sarb
stos
adc
btr
push
add
mov
lock
sbb
push
push
inc
adc
test
ficompl
push
mov
dec
inc
or
dec
test
adcb
mov
sbb
movsl
ja
add
cli
pop
ja
add
bt
jb
ja
push
inc
popf
mov
jp
fistpll
push
inc
cmp
jne
inc
decl
jne
les
mov
xchg
aaa
or
test
call
mov
and
add
rol
in
call
mov
sbb
add
xor
xchg
jg
nop
mov
inc
in
xchg
xchg
fldt
hlt
pop
sub
cmpl
cmp
arpl
mov
cwtl
rolb
outsb
imul
mov
notl
jns
add
cli
xor
xchg
add
dec
leave
push
inc
mov
sub
ret
mov
incb
sbbb
push
adc
xchg
jge
pushl
js
cmp
push
test
movsl
movsb
adcb
dec
sbb
pop
push
mov
scas
xchg
mov
adc
add
add
xchg
mov
aaa
add
or
adc
ja
aad
lea
pop
aam
outsb
flds
dec
push
nop
fistpll
mov
out
jle
push
dec
and
mov
xchg
sbb
add
pop
pop
jnp
sub
lea
and
lcall
mov
or
movsb
subb
adc
int
pop
test
pusha
ret
add
es
push
popa
repnz
jg
enter
jle
mov
test
arpl
clc
icebp
lock
mov
ja
cmp
call
jnp
xorl
mov
xchg
andb
mov
roll
jns
popf
mov
sub
xchg
adc
outsb
nop
xor
xor
xchg
sbb
arpl
inc
mov
ficoms
mov
adc
cs
mov
add
or
and
lods
mov
sub
jno
add
and
dec
and
call
sub
ja
in
outsb
daa
daa
dec
clc
rorl
repz
movsb
xchg
add
adc
jecxz
lahf
adc
dec
cltd
sub
decb
mov
test
adc
push
adc
pop
ficoms
mov
xorb
dec
and
dec
shll
inc
inc
push
jae
in
jecxz
push
mov
dec
in
daa
test
popa
leave
sarl
jo
bound
movsb
jb
popa
fdivrs
pop
shl
lock
pop
in
push
in
sbb
and
inc
shll
mov
loop
popa
les
out
and
add
stos
shrb
jne
xor
pop
mov
enter
stos
aam
aam
xchg
sbb
mov
adc
in
fadds
repnz
mov
sahf
fidivs
fwait
cld
adc
enter
push
outsl
push
jbe
sub
dec
jae
xchg
sbb
clc
and
sub
cmova
lock
loope
test
out
xchg
movsl
cltd
xchg
pushf
mov
inc
outsl
mov
lret
test
sbb
xor
sbb
ss
mov
loopne
mov
ret
rclb
fstpt
rclb
aam
mov
adc
es
loopne
add
sub
roll
mov
push
push
inc
lret
or
fsubrs
ret
fs
fucomi
fwait
pop
call
mov
fimuls
inc
fucomp
and
subb
sarb
in
mov
jns
xor
mov
push
push
push
jo
mov
pop
ficoms
addr16
dec
inc
push
jl
movsb
test
sbb
xor
pop
push
push
jl
and
fcoml
mov
push
cmp
cmp
dec
popa
adc
jns
pop
insl
and
mov
fisubl
insb
and
addb
mov
or
nop
pop
push
add
mov
fmul
call
rcrb
or
call
or
cmpl
ret
test
pop
mov
movl
inc
mov
out
sahf
and
pop
sarl
adc
mov
pop
cmp
or
inc
dec
vminss
sbb
or
outsl
push
rorl
push
lret
xchg
repnz
imul
or
out
addr16
in
inc
inc
pop
call
clc
add
adc
add
mov
sub
lock
mov
enter
adc
push
push
push
xlat
pop
notl
mov
mov
clc
xor
push
sbb
rcll
imul
in
bound
dec
push
in
pop
add
fs
daa
shll
sub
cmpsb
xchg
push
dec
pop
xor
mov
call
dec
inc
sahf
mov
pop
inc
out
jmp
sub
xor
test
and
sbb
and
pop
push
ljmp
aad
into
inc
mov
faddp
or
int
xchg
cmp
mov
das
ret
outsl
call
xor
jg
js
ret
dec
and
pop
jo
adc
lods
jnp
loopne
lock
and
sahf
and
sbb
adc
push
test
cmp
out
in
pushf
sbb
arpl
aaa
mov
in
ret
adc
std
and
adc
clc
pop
les
sbb
jmp
fmuls
lds
mov
or
add
lret
sub
jle
int
lds
or
test
das
add
int
les
inc
sub
leave
roll
dec
stos
les
or
cwtl
arpl
cmp
lea
arpl
pushf
push
xor
cld
in
mov
cmpsl
and
inc
out
sbb
push
inc
add
cmp
lock
pop
pop
jne
testb
lods
std
ds
orb
sbb
imul
out
and
pop
mov
cmpsl
nop
mov
pop
outsb
cs
and
pop
inc
test
dec
in
into
mov
pop
js
xor
inc
addr16
subb
inc
loop
adc
and
jo
cs
xchg
sub
cmp
sbb
mov
fiaddl
jmp
mov
push
scas
sar
mov
into
add
lret
adc
xchg
mov
test
or
add
lcall
aaa
sub
sub
sbb
mov
int3
dec
mov
adcb
ret
push
dec
shlb
inc
pop
andl
add
ds
add
inc
jo
les
addl
inc
lock
pop
arpl
rol
and
cltd
in
inc
test
or
iret
mov
dec
sub
sub
xchg
test
inc
test
push
or
rorb
mov
mov
pop
movsl
or
add
add
pop
mov
mov
cltd
ficoml
outsl
outsl
aas
inc
jbe
je
jg
mov
jmp
rcl
sub
clc
cs
add
jge
lea
lock
jbe
xor
dec
into
push
sbb
or
call
repz
jp
jno
push
mov
mov
jg
mov
ret
push
mov
sub
andl
lret
or
repnz
movb
jle
in
mov
pop
popa
mov
push
sbb
mov
sbb
adc
cmp
loop
test
or
das
int
je
mov
xchg
test
mov
pop
sub
scas
add
xor
dec
mov
inc
sbb
jg
add
sbb
orb
nop
and
mov
push
fisubs
das
adc
jl
repz
fidivl
mov
xchg
push
xchg
cwtl
loop
jl
cmpl
clc
or
inc
hlt
shr
out
aam
fisubl
mov
sbb
movsb
repnz
jg
addr16
inc
jl
and
cmp
jne
mov
or
or
mov
jne
inc
jge
sbb
jle
sub
ficompl
enter
jl
pop
add
add
xchg
adc
out
sbb
mov
sbb
xchg
nop
dec
jo
xchg
mov
pop
add
cmp
addr16
xchg
imul
lret
or
mov
pop
mov
xchg
inc
mov
jge
or
jle
xor
push
push
add
out
ja
cmp
out
js
add
inc
mov
ja
pop
and
sahf
pusha
pop
dec
fidivrl
xor
and
inc
ja
xor
pop
push
insl
ret
sub
test
add
mov
push
pop
subb
popf
js
mov
shl
adc
xchg
ficoms
push
movsb
cmpl
pop
cmp
in
adc
jb
and
add
cs
pop
idivl
shl
cmpsl
pop
cwtl
js
les
inc
andb
push
sbb
adc
push
pop
loopne
jbe
add
mov
xchg
incl
popl
in
push
sbb
add
fdivl
sbb
mov
iret
sbb
xor
add
bound
xor
cwtl
mov
pop
push
xor
mov
mov
adc
sub
sub
shll
xor
test
je
pop
ret
cmp
sub
int3
notl
jb
mov
es
jb
inc
inc
insb
add
loope
xchg
popf
push
lock
pop
int
addb
mov
or
pusha
xchg
and
add
ljmp
or
sbb
add
or
into
pop
and
cltd
jae
mov
out
fidivl
add
and
mov
stc
mov
pop
jbe
insb
cltd
sub
push
ljmp
lret
mov
xchg
jne
pop
mov
lahf
inc
cmpsl
leave
or
adc
inc
bound
loope
add
add
nop
push
les
inc
sub
sbb
out
xor
test
xchg
add
sbb
pop
adc
icebp
xor
sbb
mov
sub
push
inc
xchg
add
pop
pop
aaa
xor
test
in
sbb
xchg
dec
push
mov
out
aam
flds
aad
in
pop
mov
or
pop
pop
xchg
pop
test
movsb
mov
div
in
add
inc
or
rolb
adc
push
push
outsb
fcompl
sbb
call
xor
mov
roll
add
mov
nop
icebp
push
and
aas
mov
mov
and
add
mov
sub
mov
or
fsubr
add
or
nop
fstpl
sarl
jge
enter
or
loopne
fcompl
mov
sub
cs
je
inc
fadd
sbb
mov
pop
or
add
data16
xor
mov
dec
or
aam
and
and
or
dec
ret
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
xchg
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
enter
xchg
dec
pop
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
ret
or
inc
and
cmp
je
or
jp
jne
arpl
push
faddl
jle
rclb
je
mov
pop
arpl
xor
daa
or
dec
xor
mov
jecxz
xor
rcll
ljmp
les
scas
xor
add
jle
lods
adc
cmp
jle
or
add
inc
mov
xlat
test
stos
sahf
add
lds
add
push
or
adc
dec
jns
cmpsb
add
hlt
enter
push
test
aad
xchg
icebp
or
hlt
push
add
add
inc
and
lods
aad
mov
aam
iret
jmp
sahf
les
inc
push
cltd
lcall
ds
les
cltd
shlb
pop
mov
clc
mov
jp
pop
jg
test
push
iret
adc
pushf
push
push
adc
popf
das
push
inc
mov
mov
fisubrl
or
inc
andl
fildl
ja
sbb
or
nop
das
out
xchg
or
adc
sbb
js
lods
pop
daa
scas
sbb
and
xlat
aas
add
unpcklps
push
orb
sar
inc
imul
add
cmpsl
sbb
iret
out
inc
inc
int3
mov
ss
nop
aaa
sub
dec
ds
loope
cmp
or
or
inc
test
xor
inc
pop
adc
or
adc
jbe
ja
mov
ficoms
mov
jne
dec
fwait
xchg
dec
jmp
mov
sub
mov
lea
int
inc
sbb
cmp
dec
or
or
xchg
sbbb
leave
mov
stos
inc
pusha
movsl
dec
inc
cs
add
or
je
test
push
aaa
push
loop
cmp
sbb
inc
xor
push
add
push
mov
dec
fcoms
rcll
cli
aaa
xchg
notb
int
addr16
popa
imul
pop
xchg
push
add
jae
out
add
and
mov
mov
sbb
shlb
movsb
sbb
cs
sub
mov
aas
std
fmuls
xor
mov
popa
xlat
shlb
into
lret
jg
xor
lods
sar
push
and
xchg
imul
or
ret
aam
jo
fsubs
icebp
or
adc
jge
add
xor
xchg
adc
dec
jbe
xor
mov
and
clc
xor
cmpl
icebp
pop
pop
mov
jae
das
repz
inc
imul
xchg
imul
adc
cmp
jge
mov
sub
xor
cld
sub
dec
shrl
or
dec
leave
adc
fwait
psubq
sbb
mov
or
dec
pop
inc
add
int3
clc
cmp
jl
jmp
or
leave
sub
jecxz
dec
pusha
push
aaa
add
cli
cmpsl
andw
sbb
fldenv
arpl
dec
sbb
mov
insl
inc
xchg
pop
leave
cmp
push
fists
cmpl
mov
inc
js
push
mov
and
fidivrl
cs
push
mov
mov
fistl
push
adc
adc
dec
cmp
xchg
shll
sbb
mov
mov
xor
subb
fsubrl
addb
cmp
and
push
sub
or
lret
mov
loope
lret
inc
pop
int3
insb
cmpsb
inc
repnz
aas
adc
pop
orl
add
xor
mov
lock
mov
push
adc
popaw
ret
lock
inc
sbb
das
outsl
xchg
loope
jmp
cmp
pop
dec
adc
adc
xchg
fsubrp
clc
ret
lahf
jne
sbbl
xorl
sbb
add
adc
push
mov
jo
icebp
cmpsl
popa
rcrb
ret
mov
ret
out
mov
sub
jnp
cmpsl
ds
add
sbb
imul
dec
and
add
xchg
push
pop
adc
mov
fsubrs
rcrl
fisttpll
add
fmuls
je
hlt
aaa
test
loopne
pop
xor
mov
lods
shll
test
arpl
decl
xchg
pop
jecxz
shrb
pop
call
int3
es
mov
sbb
orl
push
mov
cli
ja
sbb
cmp
les
dec
mov
movsb
cmp
adcb
sbb
xor
mov
iret
pop
clc
inc
mov
push
fnstcw
adc
sub
jne
push
or
push
push
add
out
loope
cmpl
jne
sbb
rolb
add
shlb
bound
push
loopne
aas
dec
xchg
inc
stc
jl
mov
pop
rolb
out
mov
xor
imul
lea
sub
pop
mov
or
arpl
mov
push
loopne
xor
subl
fwait
xor
push
cld
jmp
mov
push
inc
movsl
inc
ljmp
ds
in
pop
loopne
mov
xchg
subl
sarb
add
cmpb
xor
mov
jmp
push
xlat
es
rolb
out
dec
jne
and
ja
mov
hlt
mov
inc
xchg
jmp
xchg
imul
test
jg
out
cmpsb
cmp
push
push
xchg
add
out
jle
repz
xor
loopne
nop
in
sub
push
jne
pop
je
loope
pop
dec
popa
mov
or
jmp
sbb
cmpsl
insl
out
dec
dec
pop
add
cmp
iret
xchg
ljmp
sub
nop
inc
pushf
lret
mov
jmp
add
jl
pop
xor
mov
jg
sbb
fnstcw
lret
rorb
fsts
lret
stos
cmpsb
mov
push
sbb
dec
mov
std
adc
ljmp
pop
rolb
sub
pop
mov
add
or
jnp
add
xor
cmp
aaa
fistpll
adc
jl
loop
sub
push
popf
dec
jns
jle
push
mov
pop
and
dec
js
inc
outsl
gs
xlat
fldl
sbb
call
or
lods
add
add
mov
mov
xchg
and
test
jbe
or
fists
je
adc
and
jnp
jecxz
sub
jecxz
ss
inc
push
aam
dec
xchg
ret
jg
add
adc
sub
adc
inc
xor
pushf
inc
dec
sub
sbb
das
cmp
pop
mov
iret
sahf
pop
shll
je
mov
inc
push
jmp
rcll
push
pop
and
cmp
cmp
push
pop
push
mov
fimull
pop
add
add
xor
jge
enter
pop
test
mov
or
outsw
xorl
sub
outsb
les
fmulp
ret
push
or
test
enter
call
or
or
cmp
les
paddq
gs
ljmp
mov
arpl
fdivl
vmread
cld
sub
cltd
mov
push
int3
mul
xchg
lock
inc
leave
sbb
push
cmpsb
pusha
dec
push
int
xchg
push
clc
imul
pop
or
cmp
xchg
push
hlt
sub
pop
ret
iret
iret
push
pop
pusha
jae
stc
mov
dec
sbb
adc
ds
rorb
lret
sub
lret
and
jmp
sub
inc
mov
and
ret
sbb
in
lods
jo
cwtl
jbe
add
out
jecxz
inc
adc
clc
movsl
jo
sub
imul
scas
sub
dec
xorl
das
aam
adc
xchg
or
and
int
jne
in
adc
sub
cmp
lods
cwtl
in
enter
add
xor
or
sub
adc
sbb
mov
xchg
fs
mov
popa
in
mov
test
mov
or
add
and
popf
sbb
adc
std
sub
sub
imul
xchg
push
pusha
cld
push
jge
push
negb
jmp
fidivl
or
mov
or
pop
popf
mov
sbb
or
jmp
loopne
pop
push
mov
mov
pop
popf
sbb
scas
jne
sbb
sbb
add
inc
rcrb
rcrb
xchg
pop
push
in
adc
fwait
add
in
adc
pusha
sbb
push
xor
bound
adc
pop
imul
adc
popa
xlat
sub
xor
mov
add
jo
aaa
in
inc
in
jo
xor
xlat
push
lods
adcl
dec
jmp
cmp
lcall
xchg
sbb
out
mov
loope
xchg
cmp
cld
adc
fst
cltd
cwtl
mov
daa
adc
xor
or
or
add
push
xor
pop
push
or
nop
ss
ljmp
pop
out
or
or
sbb
sbb
inc
push
sbb
es
push
dec
add
lcall
sub
ljmp
imul
jge
popa
sub
xor
xlat
pusha
mov
add
imul
mov
xchg
andnps
mov
sbb
cmp
mov
mov
push
ds
add
push
xchg
movd
or
sbb
xor
insb
flds
lock
inc
cs
mov
mov
lret
pushf
xor
cmp
adc
mov
inc
add
xchg
or
stos
add
call
xchg
cmp
stos
xor
aas
scas
add
and
jl
cwtl
add
add
fadd
xchg
mov
in
inc
add
insb
sub
popf
in
into
enter
fsubs
xor
cmp
call
and
jns
fwait
mov
cmp
add
pop
xchg
adc
pop
xchg
or
hlt
xor
jmp
add
aas
xorl
orl
int
mov
push
mov
or
mov
fs
insl
sqrtps
out
or
or
int
repz
add
jo
pop
mov
fldt
lock
jne
mov
push
push
mov
mov
icebp
jbe
rolb
inc
fsubl
and
out
shrl
mov
fcoml
cmp
or
loope
jp
jl
and
pop
xchg
rorb
xlat
mov
fsub
mov
mov
call
or
pop
fmull
mov
inc
xor
stos
hlt
out
das
lods
cmp
dec
aad
lret
mov
xchg
out
xlat
into
or
movsl
leave
sub
popf
lock
add
inc
xor
dec
mov
lret
cmp
lea
sti
loopne
mov
mov
sbb
stos
add
xor
add
iret
mov
gs
imul
push
jo
arpl
xchg
std
rcrl
xor
cmp
movsl
pusha
add
clc
jo
dec
scas
xor
mov
ficoms
pusha
test
loop
inc
sbb
mov
pusha
rcrl
and
hlt
aam
lahf
iret
loop
jmp
mov
scas
lock
mov
add
int
sbb
sbb
cmpsl
jl
push
rcl
add
paddusw
ds
scas
mov
out
js
pusha
test
out
enter
out
lock
jmp
lcall
outsb
icebp
mov
rcl
pmulhw
in
xor
insb
addl
adc
inc
dec
jns
push
pop
cltd
mov
pop
cmc
sbb
das
fadd
repnz
add
xor
cli
mov
ds
pop
repz
cmp
add
cmpsb
hlt
outsl
test
sbb
or
icebp
add
andl
repnz
sbb
xorl
mov
dec
xlat
clc
jge
or
clc
mov
out
mov
cmp
jno
call
jp
add
sbb
xchg
cmc
hlt
mov
xor
inc
daa
add
add
mov
mov
push
xor
push
aaa
lods
xor
xorl
mov
out
mov
sub
jl
fdivl
mov
rcrb
push
hlt
push
outsb
fdiv
mov
daa
xor
inc
addr16
pusha
sub
pusha
out
mov
out
dec
test
clc
daa
cltd
mov
in
xor
lods
enter
rorb
nop
ss
loope
jnp
cmp
push
fldt
mov
xchg
pop
push
out
and
jmp
fsubl
repnz
sub
sbb
adc
sub
stos
sbb
aad
mov
pop
xor
xor
dec
shl
inc
push
sbb
loope
in
rcr
cmp
or
fwait
mov
push
outsl
call
insl
sbb
adc
int3
daa
sbb
pop
mov
hlt
inc
loop
aaa
push
jnp
into
shr
daa
push
fistpll
lea
push
aas
jo
jmp
fcomps
dec
sahf
ret
adc
sbb
mov
loopne
test
hlt
fadd
ret
cmp
jge
adc
nop
mov
or
mov
push
cltd
roll
and
jecxz
addr16
adc
and
add
mov
fdivrl
mov
pop
and
and
je
clc
sbb
cmpb
fisttpl
xor
sbbb
push
sub
cld
add
push
add
jmp
mov
cmp
jne
mov
sbb
sbb
sub
lar
shl
mov
lea
int
mov
pop
les
loopne
dec
bound
push
mov
xor
ret
xchg
stc
popf
sub
or
call
xor
jbe
jmp
outsl
lods
xor
or
dec
pop
lds
add
xor
das
xchg
inc
rcrb
test
xchg
daa
sub
or
in
pushl
ss
push
mov
pop
jge
mov
fbld
lock
arpl
dec
je
or
pop
in
jecxz
or
sub
shrl
dec
testl
push
jmp
shll
cmp
or
add
stc
xchg
lahf
inc
inc
lods
arpl
stc
sarb
push
movsb
jnp
fdivl
push
inc
or
and
ja
push
clc
or
mov
ja
push
mov
ret
jmp
sub
inc
mov
movsl
cld
mov
loope
adc
inc
add
push
out
xchg
aad
cmp
xlat
push
or
push
adc
inc
setnp
mov
xchg
testl
mov
adc
mov
jge
into
mov
and
adc
mov
and
cld
adc
dec
dec
push
cmp
inc
dec
sahf
sbb
sti
cmp
xchg
inc
mov
adc
sti
dec
sub
sbb
push
int3
mov
pop
ja
clc
out
jae
add
pop
push
push
femms
roll
ds
dec
shll
cmpl
inc
jo
cmp
adc
mov
addl
enter
sti
xor
adc
add
out
addr16
dec
sub
lock
sbb
sbb
nop
sbb
add
add
mov
out
dec
cmp
out
adc
add
movsl
je
scas
outsb
sub
shrb
and
scas
rcll
lock
cmp
lods
add
leave
nop
xchg
mov
das
pusha
repz
xchg
test
pop
test
cmc
sub
mov
jno
jb
jecxz
lret
std
cmp
cmp
push
cwtl
push
stos
mov
into
loopne
pop
lock
sahf
out
cmp
push
push
pop
cs
dec
pop
imul
xchg
fiadds
mov
leave
xchg
int3
xor
and
add
scas
nop
sbb
ret
jo
mov
insb
pop
xchg
lods
jmp
das
pop
push
adc
pop
jmp
mov
fadd
imul
adc
sub
stos
pop
das
aad
nop
inc
movsb
js
cld
xor
incb
inc
and
gs
and
fxtract
mov
test
mov
aas
movsb
sbb
adc
mov
xor
enter
jmp
or
faddl
stos
jg
add
mov
in
adc
lahf
loop
add
pop
mov
sbb
sahf
mov
jb
inc
es
ret
inc
inc
push
push
ja
lods
inc
aaa
or
decl
adc
push
push
cmp
adc
enter
insl
xlat
je
mov
lret
in
daa
mov
rorb
dec
movsl
mov
push
or
jl
mov
mov
inc
inc
call
jmp
in
dec
loope
dec
mov
imul
jnp
test
cmpsb
cmp
push
push
sbb
push
inc
sbb
and
xchg
lret
push
pusha
sbb
orb
ljmp
mov
cltd
lret
lods
aad
add
mov
mov
jg
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
in
inc
sarl
pop
adcl
pop
shl
aam
xchg
cli
inc
inc
adc
inc
bound
xorl
mov
inc
ja
movl
dec
cld
shl
rcrl
in
push
dec
enter
jnp
pop
ret
clc
clc
call
cmp
shlb
xchg
jo
scas
xor
mov
jg
sbb
push
jmp
sbb
out
orb
cmp
add
mov
stc
dec
call
in
das
xchg
outsl
mov
mov
or
inc
pop
sub
aas
sbb
xor
mov
xchg
incb
popf
scas
mov
inc
add
push
shr
fidivrs
mov
rcrl
in
add
push
shll
cmp
cwtl
pop
cs
sahf
out
sbb
sub
inc
imul
or
cmc
push
cld
gs
cs
aam
movsbl
popa
ret
xor
sub
cs
jns
add
fiaddl
and
nop
xchg
sub
aam
pusha
sbb
out
shlb
push
jne
insl
loop
mov
sahf
ret
mov
loop
ret
jmp
push
mov
icebp
cmp
lcall
leave
les
mov
and
add
cld
or
repz
xchg
mov
dec
loope
dec
out
sub
push
sbb
jmp
sub
push
mov
add
add
mov
sub
sub
dec
arpl
jmp
data16
mov
jb
in
ret
mov
bswap
dec
call
jl
or
sbb
or
js
adc
or
cmpl
cltd
testb
pop
jg
mov
push
add
shll
and
mov
mov
jb
pusha
xchg
div
push
inc
sbb
add
mov
and
mov
sti
adc
adc
push
add
cmp
aaa
add
and
in
shll
mov
pop
out
in
inc
add
daa
push
push
shrb
add
push
xchg
loopne
adcb
mov
pop
shll
dec
inc
mov
enter
std
push
inc
movsb
mov
cmpl
sbb
mov
push
rcll
fwait
push
push
pop
pop
faddl
notl
jecxz
movsb
xchg
fists
push
cmp
je
sbb
mov
dec
rolb
and
jl
adc
sti
negl
daa
xor
xchg
adc
or
push
push
xchg
jae
pusha
xor
or
data16
or
les
pop
cmpsb
movsl
xor
or
mov
pop
dec
sbb
dec
ja
stos
mov
xchg
or
pop
dec
inc
xor
mov
movsb
jg
addr16
adc
movsl
adc
mov
dec
sbb
inc
loop
imul
or
fisubrs
push
lahf
adc
test
add
mov
mov
and
push
pop
sbb
xor
rorb
jg
or
pop
cli
ret
sti
mov
jno
jle
or
mov
rcrl
sub
jb
adc
lea
mov
pusha
flds
loopne
icebp
sti
sub
imul
sub
or
leave
ds
pop
jnp
sbb
adc
addl
lret
dec
pop
adc
or
adc
adc
sbb
sti
stc
call
orw
addr16
dec
add
push
adc
inc
sbb
sbb
fildl
jmp
adc
repz
add
mov
mov
mov
sub
or
pop
adc
xlat
inc
or
and
pop
lahf
sbb
lock
cwtl
mov
mov
dec
sbb
je
aas
xor
dec
shll
pop
jp
mov
cli
test
es
xchg
and
js
mov
or
mov
and
or
mov
mov
adc
pop
adc
adc
or
mov
adc
scas
sbb
pop
and
shrb
orl
sub
rorb
adc
xchg
inc
outsb
js
adc
xchg
adc
jle
stos
sti
hlt
pop
push
push
adc
xor
xchg
call
jae
inc
aad
rolb
aad
imul
ret
notl
dec
and
and
dec
push
mov
add
lcall
and
or
or
or
sbb
rorl
push
dec
popa
mov
mov
add
push
and
incb
sbb
add
add
cmc
dec
ds
pop
dec
gs
outsl
jo
addr16
and
add
inc
or
pop
or
mov
inc
pop
inc
notl
xchg
push
cs
dec
pop
add
inc
mov
pushf
xchg
lret
imul
sub
push
inc
dec
ja
je
sub
cmp
jne
daa
das
and
jne
cmp
dec
cwtl
mov
dec
mov
pop
shlb
repz
dec
rcl
inc
shlb
cmp
mov
hlt
jno
pop
xor
out
mov
mov
adc
sub
enter
xor
sbb
adc
test
arpl
std
push
inc
dec
jne
les
push
add
mov
into
addr16
push
dec
push
je
adc
jae
cmpsl
mov
sub
stos
sahf
xchg
jnp
or
and
inc
popa
cld
fbld
ljmp
daa
adc
xor
cmpsl
xchg
adc
inc
das
sbb
inc
cmp
pop
sbb
leave
aas
jo
nop
mov
xchg
fs
push
or
outsb
jg
cmp
jg
push
dec
cmp
xlat
dec
inc
ja
xor
jmp
test
clc
pop
shll
test
mov
jmp
or
cmp
js
sbb
andb
jmp
jge
rcrb
call
rolb
lock
imul
add
ja
repnz
xor
mov
lahf
and
mov
jmp
or
inc
lahf
mov
scas
jecxz
xor
or
sbb
jg
cmp
dec
add
inc
and
and
or
pop
xlat
xchg
jge
adc
or
inc
and
stos
add
inc
jmp
adc
or
inc
and
xchg
pop
loopne
jle
orl
dec
lahf
add
in
sbb
adc
movsb
shll
shld
and
push
mov
mov
movsb
jmp
nop
or
loop
test
inc
jl
push
jle
pusha
stc
sub
je
int
or
pusha
pop
or
add
cwtl
mov
fisttps
in
pop
mov
sbb
push
inc
and
in
mov
push
pop
clc
dec
adcb
sbb
pop
adc
mov
dec
inc
pushf
rorl
sbb
or
out
inc
push
pop
xchg
lea
das
xlat
sbb
iret
sub
cld
xor
sbb
ja
lcall
push
sub
arpl
xchg
mov
xchg
pop
xchg
out
bound
dec
popa
inc
dec
cmp
dec
push
push
inc
je
dec
push
out
data16
sub
sbb
adc
out
mov
add
push
pop
xor
mov
inc
jo
xor
fdivrs
xlat
lock
arpl
call
daa
pop
and
jne
pop
adc
push
pusha
scas
frstor
wrmsr
push
pop
bound
sbb
mov
add
xchg
mov
or
cwtl
mov
in
inc
mov
fadds
add
push
sbb
ror
xchg
punpcklwd
pop
cld
jecxz
inc
push
cli
inc
push
push
mov
rol
adc
xor
dec
adc
cmpl
outsb
adc
cwtl
add
jbe
setne
jb
sub
inc
jb
adc
add
addb
adc
dec
ds
cmpsb
push
into
adc
pop
fdivr
add
add
push
addl
lret
mov
out
xor
xor
xor
or
test
cmpsl
add
sarb
push
scas
daa
add
dec
xchg
jg
jmp
loope
adc
push
adc
cmp
lds
sub
sub
incl
shlb
arpl
rclb
cmp
inc
or
add
jae
sbb
cltd
or
in
ret
add
ds
add
adc
add
adc
out
in
dec
add
clc
sbb
push
jmp
pop
movsl
jg
outsb
rcll
adc
hlt
call
insl
add
cmp
sarb
xchg
inc
inc
add
fwait
inc
adc
sti
scas
or
xchg
orb
rolb
mov
push
in
js
adc
xchg
fcompl
push
int3
addl
inc
cld
add
push
sub
pop
loopne
add
cmp
push
and
loope
stos
mov
fcoms
repz
sbb
xor
push
push
outsb
sbb
ret
std
ja
sbb
pop
dec
aaa
mov
cmpsl
rorb
in
rorl
in
push
lret
push
dec
in
mov
ds
out
sub
ret
inc
mov
adcb
mov
pop
mov
cmp
pop
add
sbb
dec
cmp
daa
or
divb
sarl
pop
fbstp
movsl
and
stos
lahf
inc
adc
add
scas
sub
or
sbb
popf
lods
push
and
sub
pop
pop
pop
dec
jb
daa
or
in
adc
sbb
daa
mov
subl
add
gs
adc
insb
sbb
xor
dec
and
adc
pop
loop
scas
xor
or
dec
ljmp
sbb
add
adc
xchg
rorb
add
mov
xor
inc
mov
or
data16
pop
clc
mov
or
or
mov
pop
pop
push
push
mov
add
sti
or
or
add
push
mov
inc
add
pop
add
jo
mov
cmp
fisttpl
pop
xchg
mov
jo
aas
adc
jge
adc
sub
mov
push
or
add
inc
sub
pop
iret
cmp
xor
xor
push
sarb
daa
push
pop
adc
mov
in
lods
mov
je
pop
inc
pop
jle
pop
test
pusha
push
push
dec
pop
add
push
mov
addr16
sub
jge
sbb
adc
icebp
test
cld
push
xchg
insl
nop
adcl
lea
popa
adc
std
mov
cmp
inc
jno
les
pop
xor
add
pop
jge
ret
mov
mov
outsb
inc
pusha
arpl
fildll
jae
orb
pusha
xor
aas
jmp
dec
int3
mov
divb
pop
push
and
sbb
xor
fbld
out
sbb
pop
inc
mov
popa
cltd
add
les
in
into
mov
clc
sub
ret
dec
iret
loopne
and
xchg
hlt
mov
test
xchg
mov
and
dec
mov
sbb
jb
rcrb
ja
jb
jb
jns
jnp
jb
jb
jge
jg
jb
jb
popa
bound
jb
jb
gs
jb
push
jb
jb
insl
outsb
outsl
jb
jb
push
push
push
push
jb
jb
push
push
push
push
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
xor
xor
jb
jb
xor
ss
jb
jb
cmp
cmp
jb
jb
cmp
ds
jb
jb
and
and
xor
xchg
and
inc
mov
push
clc
sub
mov
push
enter
insb
outsl
cmc
ret
cmp
xor
sbb
sqrtps
inc
xor
push
arpl
and
sub
sbb
xchg
mov
inc
outsl
add
push
imul
jo
or
add
adc
xchg
pop
orl
lret
daa
cmp
or
test
imul
add
adc
mov
jae
je
loop
mov
mov
insb
int
jg
mov
enter
movsl
or
xorl
adc
adc
gs
mov
inc
mov
inc
dec
cmc
int
sbb
add
cs
outsb
int
paddsw
add
cs
jo
outsl
sbb
push
inc
popa
jae
aaa
in
mov
or
adc
xor
jl
or
push
xor
fwait
dec
divl
adc
mov
bswap
insb
insl
inc
subb
fwait
decl
push
push
dec
outsl
jo
je
push
inc
sub
or
adc
mov
loopne
nop
and
add
sbb
adc
xor
cmp
aas
mov
loopne
out
push
fwait
cmp
pop
adc
rorl
and
inc
jb
fimull
enter
sub
bound
adc
or
dec
jl
jp
ss
lods
pop
imul
fidivl
or
inc
inc
imul
pop
inc
outsl
jb
jae
es
pop
outsl
lock
mov
pop
cld
ss
sbb
and
testb
jbe
push
aad
mov
inc
lahf
mov
insl
rorl
xor
inc
push
push
js
in
incb
and
imul
cmpsl
inc
sub
imul
rclb
hlt
pop
loop
stc
cmp
cmpsb
and
and
or
stc
loopne
inc
and
div
or
mov
lret
add
icebp
iret
pop
adc
sti
aam
mov
inc
push
nop
add
pop
aas
rclb
sti
ret
push
pop
pusha
cmp
int3
adc
jmp
idivb
and
dec
insb
dec
aas
aas
push
push
dec
gs
enter
jo
jo
mov
cmp
lahf
sub
sub
pop
pusha
mov
mov
mov
jge
push
imul
jns
sub
push
ss
cmp
lea
and
push
cs
sbb
cld
inc
out
lods
inc
xchg
inc
push
mov
lahf
xchg
in
mov
add
in
cld
push
addl
add
rorl
pop
add
xchg
add
sub
xor
and
add
lcall
pop
add
push
addb
je
inc
jmp
scas
xchg
out
es
inc
mov
push
push
cmp
leave
xchg
sbb
add
add
fs
sub
decl
lds
inc
inc
xchg
add
lds
in
add
sub
enter
sbb
daa
inc
inc
inc
subl
push
lock
xchg
xor
sbb
pop
sbb
sbb
push
movsl
push
lret
js
lcall
or
ret
daa
and
pop
aas
push
int3
push
dec
or
or
ficoml
and
rcrb
and
xor
movsb
dec
imul
push
roll
js
jb
jae
loopne
mov
cmp
jo
mov
dec
jl
jne
outsb
testb
out
or
adc
push
inc
xchg
or
push
ficoml
jnp
add
push
inc
arpl
dec
lock
inc
pusha
dec
or
or
fs
dec
outsl
ja
mov
push
cld
push
xchg
add
cmp
or
dec
insb
mov
mov
push
dec
jmp
mov
sbb
sbb
dec
xor
push
cs
lcall
iret
mov
adc
mov
sbb
js
mov
pusha
mov
fisubrs
and
in
mov
ss
pusha
sub
and
fsubrl
pop
int
fidivs
int3
push
sub
movsb
sbb
add
and
jbe
mov
loopne
pop
sub
int
adc
pop
lods
movups
gs
xchg
cltd
pop
and
popa
xor
mov
insl
pop
ret
test
or
dec
mov
addr16
and
add
js
nop
xchg
mov
push
mov
fcomp
fsub
jnp
fildl
or
and
ja
outsl
andb
sbb
push
xchg
hlt
sub
imul
push
and
push
sub
insb
outsb
mov
out
popf
push
es
add
cmp
adc
jge
pusha
in
jnp
out
pop
and
das
lds
scas
push
pusha
sub
pop
iret
js
mov
es
int3
pop
and
mov
pushw
lods
sahf
sahf
mov
pusha
and
add
sbb
pop
out
fistps
add
popa
inc
adc
fists
pop
lods
push
mov
dec
insl
mov
mov
fs
mov
loopne
daa
movsb
outsl
loopne
push
lods
xor
sarb
inc
repnz
mov
jae
div
and
nop
jae
and
inc
pushf
jne
jge
dec
lahf
mov
jbe
aam
mov
ss
sahf
imulb
mov
sub
sbb
add
jo
cmp
cmpb
or
lcall
scas
push
imul
imul
movsb
sub
sub
adc
sub
insl
mov
jae
or
cmp
mov
nop
sub
test
pop
xchg
adc
out
sbb
jo
add
movsb
push
nop
mov
jnp
jnp
aas
je
xchg
rorb
pop
mov
or
mov
fsts
add
in
xlat
mov
push
test
push
fwait
nop
adc
or
outsl
outsb
pop
inc
das
mov
pop
adc
pop
in
test
cmp
dec
sbb
jl
mov
fsubr
push
cld
test
xor
fisubrs
and
xchg
stos
cs
push
lock
xchg
dec
pop
sbb
push
cmp
or
pop
mov
xor
pop
aas
icebp
scas
mov
adc
and
aaa
dec
inc
lcall
les
ret
rol
xor
inc
dec
js
add
jne
lahf
mov
xchg
test
dec
gs
shll
inc
push
push
dec
push
push
xor
sbb
aam
xchg
outsb
pusha
fadd
push
xchg
and
insl
loopne
stc
adc
mov
movsb
xor
adc
mov
and
add
and
inc
ret
fdivs
jbe
pop
rolb
cmp
das
ljmp
push
ret
push
es
add
cmp
xchg
sub
dec
or
ficompl
lods
sub
mov
call
sbb
pop
rolb
and
pop
movl
add
sub
pop
gs
push
sahf
cmp
scas
decl
mov
dec
sete
cmp
shrb
cmp
sar
mov
push
or
notl
adc
fstl
sub
inc
cmp
adc
mov
arpl
mov
int
jnp
add
aaa
int3
adc
and
je
mov
xlat
cmp
mov
push
jb
and
stos
nop
adcl
xor
test
inc
push
jle
add
dec
cmpsb
aad
aas
xor
adc
inc
test
xor
pop
add
lret
lahf
adc
and
jge
pop
cmp
xchg
loopne
scas
or
add
cmp
lock
xor
push
std
leave
fistpl
pop
or
mov
nop
xor
push
jg
inc
adc
fbld
inc
mov
mov
add
push
cmpsl
adc
fisttps
lock
or
rolb
jp
scas
arpl
repz
iret
arpl
jb
outsl
outsb
inc
in
pop
orb
insb
imul
push
xchg
jbe
add
jb
insb
gs
add
fildl
gs
insb
pop
ss
and
pusha
addr16
imul
cwtl
inc
dec
xchg
pusha
dec
pop
iret
pop
gs
insb
outsl
ja
xchg
fildl
inc
jne
push
and
addl
mov
pop
or
jns
push
fadds
add
ja
jge
pop
movsb
insl
inc
dec
stc
adc
data16
push
dec
xor
adc
xor
popa
test
dec
outsl
pop
jo
push
pop
es
subb
or
es
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
xchg
stos
aam
lods
insb
mov
or
cld
shll
jg
gs
or
insl
das
push
fwait
cmp
daa
pop
xchg
fs
lahf
sbb
xor
test
pop
or
pop
rcrl
push
andl
xchg
imul
aaa
adc
adc
jge
or
outsw
inc
push
sub
jg
pop
outsb
jne
inc
icebp
ja
xchg
daa
shufps
and
or
pop
xchg
rcrb
arpl
cltd
sbb
add
sbbl
imul
das
cmp
int
pop
xor
popa
leave
or
sahf
jge
cmc
add
out
push
pusha
jbe
pop
fistpll
xlat
cltd
mov
inc
mov
fwait
adc
adc
mov
addr16
jg
testl
dec
inc
push
push
inc
push
add
test
inc
inc
xchg
xor
notl
dec
inc
dec
dec
arpl
sub
jnp
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
insb
lods
jge
dec
and
out
inc
inc
xor
xor
adc
inc
dec
inc
and
inc
pusha
and
xor
inc
dec
lcall
push
dec
dec
push
dec
dec
mov
aam
fcmovnbe
das
sbb
mov
and
inc
inc
dec
push
mov
dec
inc
dec
inc
inc
jae
or
push
dec
pop
adc
fwait
aas
inc
inc
push
push
push
dec
push
inc
scas
dec
insl
sbb
push
mov
dec
or
jno
mov
clc
push
mov
mov
js
andb
rcl
add
pop
jl
adc
popf
add
mov
pusha
jl
orb
sbbb
jne
add
repnz
mov
ss
pop
mov
lea
outsl
adc
mov
or
fyl2xp1
lea
mov
sub
cmovne
pusha
pop
cmp
les
push
add
push
or
add
add
sub
dec
pusha
inc
out
sbb
mov
inc
add
xor
jo
xor
in
push
jp
cwtl
es
out
mov
or
xchg
add
stos
addr16
pop
aas
sub
lods
add
jmp
loope
sub
xchg
loope
sub
into
cltd
jl
addr16
add
loopne
repnz
ret
mov
dec
jbe
imul
sbb
fdiv
subl
inc
std
xchg
out
das
loopne
adc
lgs
inc
add
sbb
ja
icebp
cmp
or
mov
cmp
jo
inc
in
sub
cli
das
cwtl
add
insb
test
adc
push
cmp
fwait
outsb
adc
inc
clc
push
cmp
or
lret
cmp
into
shlb
lret
std
ds
mov
jp
adc
int3
je
icebp
or
mov
aad
push
ret
xchg
dec
out
xchg
adc
test
inc
or
enter
outsl
push
testb
je
rorb
jmp
adc
mov
aam
add
or
divb
mov
adc
lea
incb
dec
gs
mov
mov
cmp
mov
nop
adc
jo
sarl
dec
pop
xor
movb
push
fsubs
jne
loop
add
xor
popf
fstpt
inc
fildl
or
jmp
push
lods
gs
mov
push
or
sbb
mov
out
jmp
dec
add
xor
sbbl
dec
fadds
xor
sbb
or
xchg
fiaddl
inc
sub
mov
ficoml
test
nop
push
inc
sub
mov
test
in
add
dec
jg
sbb
and
dec
xchg
dec
clc
sbb
or
and
dec
mov
dec
dec
sub
inc
xor
test
cmpl
dec
mov
fdivrs
dec
das
xor
push
das
call
neg
push
inc
jp
mov
nop
xchg
lret
dec
sub
cmp
mov
sbb
inc
sbb
and
xchg
pop
nop
sbb
push
push
clc
and
clc
mov
movb
rolb
add
rolb
ss
in
pop
jb
and
ret
inc
sbbl
inc
loopne
in
loopne
xor
lods
inc
faddl
aad
movsl
add
or
add
aaa
dec
es
cmp
push
cmpsb
add
inc
inc
pop
lock
dec
xor
xor
xchg
push
push
daa
push
pop
push
insb
cmpsl
add
jne
fistpll
cli
inc
jne
subl
mov
inc
test
xor
in
das
das
in
cmc
pop
dec
in
mov
xchg
cmp
or
push
cmp
jns
enter
lock
jl
shl
mov
sbb
mov
xchg
adc
in
dec
leave
or
dec
in
in
ud1
and
pushf
inc
push
jl
pop
inc
and
inc
sub
nop
outsl
cmp
push
pop
push
nop
pop
sbb
add
aas
cmc
inc
in
or
nop
cld
inc
push
out
test
outsb
xchg
mov
and
pop
mov
xor
andb
add
pop
or
ja
push
test
sub
sub
dec
fistpll
adc
mov
mov
scas
insb
das
cmp
or
data16
inc
loopne
push
lret
jnp
fwait
outsb
or
fcomip
jmp
je
cmpsl
mov
add
add
jp
gs
lock
nop
out
xor
in
adc
push
aas
imul
xchg
je
loope
mov
nop
adc
and
pop
jg
enter
cmp
add
push
mov
repnz
push
ret
adc
das
lahf
or
hlt
and
mov
fmull
in
and
and
inc
and
mov
arpl
mov
bound
mov
popa
inc
or
or
mov
lock
imul
mov
add
mov
adc
cmp
mov
adc
fbld
and
sbb
push
or
push
add
loopne
jle
or
pop
or
or
jbe
xlat
xor
push
push
or
push
push
int3
pop
popa
or
into
imul
or
in
call
and
and
ja
int3
xor
mov
mov
xor
bound
pop
xchg
flds
inc
ljmp
ss
xchg
iret
pop
inc
clc
mov
add
or
jecxz
pop
or
popa
mov
rcrl
repnz
push
push
in
mov
inc
xor
inc
int
sbb
ror
add
push
insl
pop
mov
sub
les
incl
sbb
lea
movsb
insl
mov
clc
cmpsb
popf
push
mov
cmpsl
add
xor
inc
sbb
leave
aam
pop
or
sub
and
xchg
loopne
in
sbb
and
nop
es
pusha
push
pop
jb
iret
mov
dec
or
ljmp
test
nop
andb
adc
stos
je
ret
lods
adc
jle
cmp
aaa
cmp
sbb
dec
test
jle
cltd
orb
pop
mov
mov
adc
cmp
rcll
cmp
das
insl
fmuls
cmp
xor
pop
adc
sub
xor
and
repnz
aad
adc
dec
xchg
cld
adc
push
push
andl
cld
scas
mov
adc
pop
xchg
jb
arpl
jo
pop
jb
scas
cmpsl
inc
pop
inc
sub
jbe
inc
add
jb
inc
or
inc
jae
push
subl
shlb
inc
or
je
mov
inc
xchg
push
mov
repnz
aad
movsb
mov
shll
add
dec
and
out
push
sbb
add
es
cmc
cmp
jg
jae
add
arpl
and
orb
mov
inc
rorb
lcall
aam
lock
not
and
mov
dec
sarb
ret
je
jb
xchg
dec
push
push
push
bound
mov
add
adc
cmp
movsb
push
add
or
cmp
mov
mov
xor
push
xor
rolb
mov
decl
enter
sub
repnz
xor
dec
mov
pop
dec
mov
sbb
loopne
ljmp
xor
dec
push
movsl
sbb
dec
scas
sub
mov
iret
testb
xchg
dec
mov
out
ds
xchg
das
pop
enter
mull
mov
les
inc
les
xor
push
jns
ja
aas
xor
nop
mov
daa
jns
insl
dec
inc
cmp
repnz
cmp
call
inc
pusha
pushf
and
insl
add
nop
cld
xor
inc
push
push
inc
mov
cmp
mov
sysexit
mov
leave
sti
adc
das
lea
ficoml
lock
add
mov
addr16
in
es
add
popa
jl
icebp
cmp
imul
jge,pt
add
dec
xchg
adcb
ds
jne
adc
push
int3
push
push
jl
xchg
pusha
inc
dec
test
cmp
js
xchg
push
fisttpl
pusha
or
cmc
fwait
jno
fistl
js
dec
jnp
sub
pop
sbbb
dec
mov
mov
call
mov
sbb
in
push
shll
aam
jle
push
out
pop
imul
insb
push
js
or
sub
or
adc
inc
add
sti
inc
pop
enter
leave
mov
mov
xchg
je
rorb
je
ficompl
loopne
into
mov
clc
testb
shl
jo
divl
shl
and
dec
rcrb
pop
sar
push
pop
dec
pop
aas
fsub
xor
mov
lahf
sarb
je
xor
in
xor
sub
test
sub
add
inc
pop
sub
in
test
push
out
xor
push
stc
jecxz
mov
stos
loope
loope
test
push
cwtl
cmp
sub
int3
inc
ds
push
and
xchg
push
add
mov
rcrl
adc
cmpsb
fdivrl
or
mov
lock
push
sbb
lock
mov
mov
and
cmpsl
sbb
and
fdivrl
insl
insl
mov
jns
pop
or
loopne
pop
rorb
inc
out
adc
sbb
lock
faddl
inc
inc
das
inc
push
dec
push
jo
lea
ret
sbb
loopne
movb
mov
push
movl
inc
pop
out
out
adc
adc
or
sbb
dec
cmp
punpckhdq
adc
fisubrl
add
and
mov
fwait
xchg
lea
add
mov
mov
or
mov
mov
mov
add
inc
mov
inc
add
lods
adc
push
sub
adc
aas
dec
mov
jmp
lcall
push
mov
pop
pop
pop
push
add
cld
xor
dec
jne
mov
add
adc
loopne
fnstsw
push
sbb
inc
or
and
ljmp
aam
dec
lods
ds
in
mov
mov
dec
js
and
icebp
dec
push
inc
and
mov
enter
push
dec
decb
sbb
jecxz
push
out
fildll
adc
jecxz
mov
mov
jmp
cs
clc
sti
movw
mov
cld
push
mov
sbb
rep
rclb
push
adc
jl
out
push
jnp
or
push
rolb
jne
ds
xchg
sub
fidivrs
std
lea
mov
push
pop
push
cmp
lret
cmpsb
cmp
push
addr16
out
and
fbstp
nop
cld
icebp
pop
mov
pusha
lods
xor
pushf
jle
jl
cmp
jae
sbb
cmp
push
xchg
push
add
rcl
push
les
icebp
aaa
dec
sub
fildll
push
movzwl
lea
or
add
push
clc
int3
xchg
lods
adc
mov
add
test
mov
ljmpw
pop
mov
pop
pop
push
push
dec
clc
lret
or
and
xor
rcll
or
aas
push
xor
adc
dec
mov
mov
out
cli
xchg
and
addb
int
inc
xlat
add
mov
add
and
xor
stos
push
xor
push
rorb
mov
je
push
push
push
xor
push
add
xchg
jecxz
decb
mov
add
inc
push
outsl
int3
mov
adcb
mov
mov
pop
cmpsl
fucomip
mov
or
push
push
xor
ds
loope
push
test
scas
dec
cmp
das
fcoms
or
les
in
pop
jge
add
scas
dec
rorb
or
adc
pop
popa
in
movsb
nop
hlt
cld
es
sub
push
in
pop
ja
js
add
pop
jl
rolb
out
imul
repz
or
and
stos
shrl
movl
in
and
aaa
sbbb
insb
pop
cld
push
push
inc
nop
add
mov
add
pop
addb
out
test
pop
lock
test
inc
mov
xchg
xchg
inc
pop
jl
ret
addr16
loope
add
xchg
pop
add
or
pop
add
mov
sbb
pop
dec
cmp
fadd
jg
popf
inc
push
mov
cmp
jg
test
add
icebp
jl
aaa
fdivrs
xchg
cmpb
jg
bound
add
lods
cmp
jle
sub
sbb
sub
or
push
push
pop
jne
inc
mov
and
xchg
lds
or
or
or
adcb
cli
data16
push
sbb
ds
add
dec
jae
pop
fcomp
xchg
pop
add
sarb
rol
insb
xchg
sbb
scas
into
test
jbe
in
mov
add
test
pushf
pop
fsubr
and
pusha
ds
mov
push
loope
or
loopne
test
or
in
pop
ret
ret
push
jg
sahf
sbb
fimuls
loopne
es
cmp
dec
mov
into
gs
sbb
mov
inc
dec
jne
cmp
je
adc
pop
out
inc
xor
ret
loop
cli
sbbl
lock
push
repnz
add
sub
mov
add
mov
bound
inc
lods
cmp
enter
or
fsubrl
insl
imul
mov
pop
cwtl
ret
test
mov
insl
mov
push
mov
faddl
les
ret
lret
call
xor
pusha
jge
negb
pop
cmp
add
push
mov
push
mov
sbb
fdivrs
aad
in
inc
mov
stos
cmpsl
push
sub
or
inc
aaa
mov
and
pop
push
stos
shlb
mov
out
aas
mov
inc
aam
in
sub
stos
in
test
mov
adc
or
sarb
jmp
xor
sbbl
sub
cmp
jl
ret
lea
dec
push
das
sbb
xchg
loope
push
test
in
sub
inc
jl
pop
bound
lock
jb
xor
lahf
test
xor
add
sahf
je
shrb
movl
pop
add
mov
je
dec
or
jle
lock
jmp
push
push
in
and
jmp
mov
jmp
adc
inc
sarl
mov
sub
or
inc
and
jae
sub
add
add
push
push
sub
dec
push
sub
push
adc
mov
fcom
adc
dec
imul
je
lock
imul
add
adc
roll
sub
adc
cmp
add
push
dec
or
popa
pop
incb
inc
mov
fldl
lods
xlat
hlt
js
cmp
rcr
add
aam
leave
adc
inc
hlt
sbb
inc
jbe
pop
jmp
push
xor
int
pop
int3
xor
add
ficoml
sbb
lcall
jns
xor
pop
clc
clc
push
cs
hlt
hlt
pushl
movsl
sbb
add
sbb
push
or
pop
cmpsb
and
cmpsl
lods
icebp
adc
imul
dec
or
push
sbb
adc
call
pusha
xor
out
mov
jo
fisubs
test
mov
pop
push
push
in
hlt
int3
push
jmp
or
loopne
or
mov
clc
xchg
out
popf
call
aam
inc
and
or
mov
faddl
loopne
das
add
push
add
lock
in
and
mov
data16
pop
add
or
xor
mov
xchg
push
in
mov
mov
or
mov
xor
lods
data16
mov
mov
mov
mov
jp
push
outsb
jle
mov
inc
add
cmpsb
insl
fcmovnbe
add
test
out
in
in
imul
mov
out
push
fcoml
nop
scas
lock
and
xchg
adc
cvtpi2ps
add
push
jmp
sar
adc
lcall
js
jno
pop
mov
or
inc
push
or
and
xor
lcall
add
xorl
mov
popa
das
in
push
adc
cmp
mov
fsubs
or
popa
xchg
or
dec
mov
adc
sarl
or
or
xchg
ss
je
imul
inc
int3
mov
pop
outsl
dec
in
mov
clc
stc
inc
dec
hlt
adc
xchg
lods
cli
arpl
mov
or
jmp
adcl
or
cli
cmp
jns
fcomps
push
cmp
inc
add
cmp
arpl
mov
add
jl
push
cmp
mov
iret
mov
ret
mov
js
inc
push
roll
sbb
daa
cmp
mov
ficoml
push
adc
xorb
js
daa
xchg
out
cmpsl
pop
ret
cmp
push
adc
pop
fimull
adcb
and
mov
sarb
pop
xor
push
mov
inc
outsl
jb
lret
outsb
push
fs
add
or
test
add
das
outsb
movsb
mov
addr16
add
jae
stos
pop
mov
xchg
roll
stc
rorb
in
add
adcb
repnz
int3
dec
scas
push
psubw
inc
add
clc
mov
dec
mov
cs
mov
in
mov
lock
sbb
cld
sti
addb
test
inc
push
pop
add
xchg
arpl
ja
popw
imul
bound
daa
pop
sbb
clc
and
bndstx
pop
adcb
gs
mov
mov
add
sub
add
outsl
icebp
popf
mov
ficoms
lret
xor
ja
push
sub
adc
lea
mov
cltd
pop
push
outsb
sbb
sub
xchg
mov
push
int3
and
push
sub
jle
and
inc
cmpl
inc
cmp
gs
or
movb
clc
clc
popl
xchg
pop
push
xlat
xor
push
gs
flds
push
outsl
jle
pop
push
imul
outsl
xorl
dec
push
xor
sbb
rorb
adc
push
inc
inc
sub
mov
add
xor
adc
sbb
pop
mov
mov
out
jno
imul
or
sub
cmp
clc
fs
cmpl
stos
mov
enter
or
xchg
fbstp
and
pop
int3
mov
cmp
outsl
and
push
enter
pop
add
popaw
fstl
jmp
or
or
push
js
mov
push
add
mov
orl
and
out
jne
mov
dec
mov
push
dec
mov
test
adc
xor
mov
rolb
pop
icebp
jns
xor
adc
shr
les
pop
das
clc
rorb
je
mov
sub
dec
faddl
fildl
and
loopne
test
or
mov
push
pop
xchg
pop
mov
push
adc
sbb
sbb
add
fisttps
adc
pusha
ss
lods
imul
test
std
nop
push
adc
or
fcoml
add
pop
ud1
xor
in
das
xlat
dec
inc
loop
arpl
fdivr
pop
dec
add
jo
ja
enter
sub
cmp
jno
jmp
xchg
iret
fidivs
aaa
or
or
rcl
push
das
xor
push
xor
les
and
sbb
xlat
sbb
and
mov
test
xchg
mov
inc
fcomp
sbb
jl
mov
fs
leave
dec
inc
dec
ljmp
and
ret
je
pop
shrl
cmp
add
push
inc
sub
int
push
sahf
inc
outsb
inc
mov
and
add
xor
fldl
bound
pop
xchg
adc
push
sbb
cmpsb
and
fildl
js
sysexit
add
arpl
std
xchg
inc
add
outsl
push
inc
ja
dec
orl
mov
cmp
icebp
mov
or
rcll
int
and
mov
pop
push
sbb
mov
sub
pcmpgtb
push
outsb
and
insb
outsl
add
daa
push
movsb
lock
sbb
fiaddl
xchg
mov
mov
push
rorb
add
int3
dec
adcb
xchg
push
out
push
jo
mulb
ret
fildl
fs
stos
sbbl
clc
gs
iret
cld
sbb
mov
pop
jo
mov
xor
mov
jmp
jne
and
cmp
cli
js
jb
push
adc
fnstenv
js
pop
lock
daa
pop
xor
jns
or
imul
mov
sub
popa
sbb
negl
push
mov
shlb
sti
push
insb
mov
aaa
push
xor
jnp
shlb
lea
adc
in
pop
sbb
fists
in
inc
cs
push
or
in
mov
xor
pop
int3
add
dec
sbb
lahf
or
mov
jg
clc
fwait
dec
mov
mov
test
push
sub
sub
push
sub
scas
cwtl
xchg
fsubl
addr16
push
cmp
jb
es
pop
and
pusha
stos
out
jo
dec
loope
xchg
cltd
or
xchg
out
in
das
add
add
mov
xor
push
fwait
or
ds
push
pop
adc
pop
imul
mov
loop
out
loop
jg
push
call
push
and
and
aaa
inc
pop
test
and
negl
adc
and
lods
inc
sub
js
xchg
dec
in
mov
mov
mov
lods
inc
cs
jmp
mov
es
aam
and
add
and
clc
lock
dec
inc
and
loope
add
adc
ss
fadds
mov
or
push
push
jecxz
call
pop
pop
sarb
mov
push
enter
sbb
or
adc
adc
outsl
pusha
sub
andb
adc
mov
adc
cmpsl
inc
je
lock
cwtl
daa
dec
push
add
push
and
push
xorb
inc
sub
in
xor
dec
adcl
cmpsl
in
addr16
dec
mov
dec
sbb
add
sub
inc
pop
popf
xor
add
sub
xchg
adc
dec
add
sub
sbb
add
addb
ficomps
mov
push
push
sti
cmp
push
add
jp
fcoms
jns
adc
in
dec
repz
test
mov
or
test
aam
das
or
xchg
xlat
fmuls
push
arpl
push
in
pusha
adc
jne
inc
add
repnz
cmp
ja
xchg
lahf
push
add
mov
xchg
popa
ja
inc
in
xor
dec
cmpsl
aas
out
and
sbb
dec
rolb
or
insl
mov
inc
xor
jg
mov
push
push
leave
mov
sbb
mov
aaa
in
icebp
dec
fs
shll
add
bound
pop
mov
and
add
push
and
adc
jg
xlat
or
and
or
pusha
push
and
bts
mov
push
movsl
cltd
and
sub
cld
addr16
add
and
inc
je
push
inc
nopl
imul
adc
sub
leave
loopne
lea
sti
pop
dec
test
dec
enter
fs
and
or
test
xor
xor
movsb
or
test
jb
sub
cmpsb
adc
push
push
push
movsb
in
popa
jns
js
mov
cmp
mov
adc
mov
lods
fidivrs
mov
int
lcall
data16
mov
clc
add
subl
sar
push
add
hlt
pop
jp
clc
pop
add
mov
sbb
pop
jl
mov
push
xchg
pusha
xchg
nop
fs
mov
call
ret
or
ljmp
into
or
rorb
fimull
jo
test
push
sub
or
xchg
pop
mov
push
mov
push
push
repnz
add
lds
push
ret
fdivr
iret
inc
std
add
jae
lock
and
pop
jnp
xchg
inc
sti
mov
fisttpll
das
sbb
adc
mov
test
pop
je
add
push
mov
jl
mov
cld
mov
sti
mov
test
sub
test
imul
pop
loopne
test
je,pn
cmpb
fcomps
movsb
or
xlat
push
mov
adc
push
loop
and
stos
jno
mov
jne
stc
adc
adc
scas
xor
nopl
call
faddl
shl
lcall
sbb
pusha
inc
mov
jnp
lds
sbb
inc
js
pop
sub
mov
cmp
pop
push
sbb
add
adc
pop
fs
adc
test
jno
sbb
xchg
das
aaa
in
push
aas
or
adc
or
adc
nop
or
sbb
or
or
enter
dec
push
mov
frstor
ficoml
push
dec
cmp
jle
dec
fs
or
pushf
jo
dec
cmp
sub
jp
mov
inc
cmp
mov
xor
or
jle
ss
xor
dec
sbb
jg
push
in
pop
pusha
jae
push
sbb
jae
adc
addl
sbb
int
pop
sbb
sbb
and
icebp
and
add
insl
in
add
daa
pop
lahf
cmpl
inc
sbb
insl
push
std
mov
sbb
cmc
jmp
jl
cmpb
adcb
movsb
inc
lock
push
sbb
notl
sub
adc
cltd
inc
xor
ret
aas
pop
pop
jp
mov
or
pop
sub
jmp
sbb
out
test
sub
js
ret
sub
clc
push
popa
popa
and
movsb
inc
je
inc
push
je
aam
je
loopne
pop
cwtl
loop
inc
adcl
jbe
jmp
jmp
push
mov
les
xchg
ljmp
repnz
mov
sbb
lock
subb
inc
add
pop
ret
sbb
push
jae
cmp
add
xchg
cmp
arpl
in
cmpb
dec
adc
push
pop
in
xchg
into
data16
pushf
mov
lock
inc
pop
or
jae
mov
in
addb
mov
mov
rolb
repnz
or
mov
and
fmul
xor
add
test
xchg
add
call
loopne
add
and
fadds
jl
pushf
cmpl
ja
testb
push
sbbl
or
insl
dec
add
mov
pop
sub
aas
mov
shll
addb
aam
and
pop
dec
and
xor
cmp
insl
fnsave
pop
xor
imul
push
jae
bound
stos
dec
xchg
sbb
in
push
shlb
push
xchg
loop
or
jne
and
add
add
cmp
add
add
xchg
xor
in
mov
mov
sub
out
stos
shl
dec
iret
mov
sbb
dec
imul
adcb
pop
add
sbb
dec
mov
sub
xor
bound
xor
xchg
xchg
inc
pop
pop
test
or
cmp
negb
rolb
sti
test
xchg
popf
push
jecxz
xor
add
arpl
int3
and
aaa
mov
sbb
xor
orps
xor
bound
sub
mov
pop
das
mov
or
mov
pop
pusha
pop
aad
and
add
cmpsl
clc
and
aas
adc
es
or
or
pop
ja
dec
fistpll
push
mov
loope
mov
insb
jge
mov
pop
neg
cmpsl
cmp
je
mov
sbb
or
inc
or
dec
js
add
pop
inc
push
lock
mov
pop
sahf
and
es
je
data16
pop
lock
add
inc
lahf
inc
icebp
jp
jno
in
mov
and
push
lock
xchg
xor
call
bound
xchg
add
adc
xorb
daa
not
add
pop
rolb
fs
es
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
jmp
outsl
sti
mov
lods
sbb
sbb
jns
repz
sbb
sbb
jne
sub
or
sub
add
roll
cmovg
js
push
adc
pusha
mov
mov
dec
mov
push
mov
arpl
in
adc
cs
sub
dec
cld
lret
test
or
ret
pop
add
enter
filds
push
or
les
adc
aas
inc
cmp
mov
js
mov
cwtl
or
add
and
ds
movl
xor
add
sub
and
lahf
std
xchg
mov
inc
call
mov
push
fmull
sahf
aaa
xor
sbb
popf
push
and
jbe
pop
or
stos
ds
sub
sbb
xor
sub
fs
or
dec
xchg
jns
enter
outsl
sbb
ds
insl
mov
pusha
stos
add
cmp
add
pop
imul
sbb
adc
jmp
popa
jbe
das
sbb
pop
in
mov
inc
ja
cmp
je
mov
pop
daa
sub
roll
jbe
imul
inc
insl
fdivr
inc
mov
push
cmp
inc
in
jne
jl
and
pop
rolb
adc
xor
dec
mov
xchg
jne
mov
xor
test
stc
push
add
or
nop
and
inc
cmc
je
sub
inc
add
pop
inc
das
adc
and
fisttpl
mov
xor
imul
je
jo
jg
xor
shrb
and
leave
xchg
adc
xchg
inc
lret
movl
push
hlt
fidivs
pop
mov
fwait
jbe
sub
xor
inc
adc
pop
pusha
pop
mov
push
mov
push
and
rolb
stos
add
and
jmp
push
call
mov
inc
xlat
xor
mov
push
push
sub
in
push
sbb
fcoms
xchg
ja
xor
loopne
mov
loopne
or
shrb
and
mov
push
or
or
call
push
inc
lock
xchg
xchg
test
cmp
jbe
sar
sub
push
jecxz
dec
lods
imul
xor
sbb
dec
int
sahf
pop
pop
xor
jg
call
add
into
lock
sub
fldl
inc
and
inc
dec
xor
subl
add
lods
add
jnp
cmpb
inc
sub
and
ss
sbb
daa
test
push
sub
shlb
scas
push
popa
inc
bswap
mov
mov
stc
add
lods
loopne
ds
subl
pop
lcall
mov
nop
dec
mov
fidivrl
leave
hlt
mov
mov
insb
movb
pop
test
adc
in
test
fsubrs
test
stos
sub
push
setae
addb
arpl
fldt
lock
mov
and
sbb
cmpsb
lock
imul
mov
mov
sub
sub
or
and
shlb
js
in
popa
cmpsb
inc
or
cmp
or
test
aaa
fmuls
addr16
inc
xor
inc
in
pop
shlb
push
sub
cli
cmpb
mov
xchg
inc
sub
xchg
push
add
pop
test
and
sub
dec
xchg
gs
or
jns
out
push
fildl
call
ja
mov
lcall
xor
cmp
ss
pop
push
jp
lds
or
sbb
es
add
xchg
pop
adc
lods
dec
imul
ja
lods
and
sub
or
xor
cmp
movsb
jo
stos
and
xchg
push
mov
mov
imul
sarl
xor
push
mov
cmp
sub
sub
or
sub
add
sahf
sub
jno
out
es
xor
cld
or
push
pop
cld
or
js
sbb
dec
test
add
mov
push
add
fadd
or
pop
movb
push
and
cwtl
pop
xchg
jno
test
pop
jge
cld
mov
mov
or
add
pop
add
je
rcll
lret
cs
int
scas
push
push
test
jmp
push
jnp
pop
mov
lcall
ret
shrl
movnti
inc
adc
test
and
sbb
sub
or
push
sbb
adc
ljmp
mov
sub
dec
sub
scas
shll
inc
cmp
pop
sti
mov
lds
add
push
cmp
push
adc
ds
pop
and
sbb
insb
and
dec
outsb
adc
insl
jo
adc
xchg
mov
jl
gs
pop
gs
test
or
add
inc
rcll
call
test
std
call
sbb
inc
mov
pop
dec
inc
or
inc
leave
and
push
sbb
pop
and
sahf
adc
pop
adcb
dec
inc
or
pusha
or
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
push
adc
jno
adc
jo
out
loopne
push
and
inc
lock
add
add
jo
jnp
addb
fnstenv
pusha
stos
add
test
and
and
movups
jns
pop
fadd
xor
das
sub
jno
insb
add
lahf
or
jnp
add
hlt
out
add
clc
sbb
lock
addl
pop
sub
add
sub
movl
jecxz
loope
inc
mov
jne
cmp
addb
sbb
pop
dec
call
sbb
and
inc
outsl
xchg
add
jmp
cmovb
or
in
sub
push
mov
cmp
jmp
lahf
or
sbb
jp
xchg
adc
adc
call
adc
pop
arpl
push
call
mov
jno
pop
ja
dec
jecxz
pop
mov
cltd
lods
outsl
push
mov
sbb
pop
ja
jb
jp
lds
adc
add
mov
push
or
sbb
add
popa
push
mov
pop
and
mov
cmpl
data16
ja
out
lds
in
test
test
mov
iret
sub
ret
ret
daa
in
adc
aaa
iret
jne
mov
xchg
imul
add
inc
push
xlat
adc
mov
mov
lret
int3
cmp
xchg
dec
int3
ffree
insb
ja
pop
sub
test
jmp
add
mov
orl
xor
dec
pop
fisubl
sbb
dec
or
adcl
mov
sbb
mov
mov
dec
movb
push
xor
sbb
cmpb
testl
jge
adc
inc
xchg
mov
push
call
movsb
test
sub
pop
dec
cmp
push
pushf
lret
scas
sbb
push
push
leave
adc
pusha
add
rolb
sub
fwait
ret
jp
mov
push
dec
mov
stos
and
adc
cmp
into
movb
stos
adc
jmp
jl
test
jecxz
or
arpl
shl
add
xlat
daa
roll
movb
add
inc
and
mov
jecxz
lahf
ret
inc
ret
es
push
outsl
lea
and
mov
pushf
or
lcall
jo
add
lock
mov
sbb
lods
jo
inc
jmp
cmp
les
sub
insb
mov
adc
jg
lods
adc
and
jno
in
lcall
pop
js
sbb
add
daa
pop
mov
pop
montmul
cmpsb
push
push
push
dec
jmp
xchg
loopne
imul
stos
xchg
rcr
adc
or
add
ss
pop
imul
fstpl
sbb
mov
stos
mov
les
sbb
in
adc
iret
sahf
or
inc
sbb
insw
rcrb
push
sub
dec
mov
imul
ss
call
xchg
xor
mov
lahf
aad
jp
adc
ficomps
jl
clc
push
addl
lret
mov
push
out
pop
sbb
cltd
add
push
call
daa
pop
pop
add
inc
and
cmp
test
je
test
inc
adc
sti
and
popa
dec
or
mov
ret
inc
in
or
xorl
jne
ss
mov
push
addr16
push
cmp
jl
imul
or
je
inc
dec
add
xor
mov
mov
push
add
dec
pop
xchg
fadds
imul
mov
xor
lock
daa
jbe
dec
or
in
inc
mov
imul
inc
mov
rorl
shl
sub
or
in
jno
sahf
push
leave
inc
push
ror
pop
lods
adc
sub
jo
cmp
aam
jmp
jbe
mov
enter
es
hlt
inc
scas
xchg
cmp
mov
je
adc
mov
add
and
adc
ja
xchg
xchg
cmp
push
outsb
sahf
int3
in
movsb
adc
aam
adc
cmp
stc
adc
lcall
add
or
mov
in
xchg
xchg
cwtl
sahf
leave
inc
xchg
cmp
sbb
lahf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
in
loopne
nop
or
out
mov
mov
rclb
sbb
pop
fsubs
mov
pop
adc
push
mov
movsb
fisttps
xor
or
add
lds
push
mov
jle
test
push
and
push
mov
xchg
xchg
fimuls
dec
sub
int
sub
adc
or
hlt
cmpsb
lock
dec
push
jle
fists
push
push
jmp
sbb
or
repnz
mov
imul
pop
cld
add
mov
shrd
xor
or
dec
mov
xor
sbb
adc
push
sbb
push
inc
or
pop
in
xchg
mov
push
jo
xchg
adc
jl
enter
xacquire
inc
add
or
pusha
das
xchg
or
outsl
adc
push
cmp
push
push
sbb
push
jo
xchg
int
scas
xor
xchg
mov
lea
dec
adc
push
jns
ja
or
adc
je
nop
lea
cmpb
or
sbb
jne
jo
into
lock
or
adc
add
cmp
and
adc
bound
inc
fidivrl
sub
and
or
pop
je
fwait
mov
push
and
jecxz
sub
mov
movsl
inc
xchg
jb
jp
push
add
cmp
xor
pusha
rcl
movsl
mov
and
es
adc
xlat
mov
mov
mov
lahf
inc
js
test
jge
inc
pop
pop
arpl
jb
test
xchg
mov
lret
test
jmp
popf
ljmp
pop
enter
dec
sbb
xlat
jle
movb
rorl
sbb
cmp
mov
xor
scas
aam
test
jb
stc
mov
cmpsl
std
pop
scas
sbb
mov
push
or
jecxz
lds
xlat
push
loopne
lods
dec
pop
insb
and
movsb
add
and
fnstenv
jl
cmp
cmp
sbb
push
movsl
and
dec
and
add
cmpsb
push
out
inc
and
cmp
in
ja
mov
add
sub
cmp
out
pop
shrb
pushf
push
jg
cmpsl
in
xor
or
sub
lea
test
pop
or
sub
inc
ror
aam
adc
imul
mov
push
sbb
cmp
jae
inc
pop
aam
aaa
arpl
cmp
adc
jo
inc
lods
sub
pushf
xor
pop
ss
dec
aam
js
xor
xchg
sbb
adc
adc
rol
mov
sbb
in
daa
and
rcrl
xchg
and
popa
mov
fadd
enter
dec
jbe
mov
push
cmp
xlat
dec
dec
inc
and
or
js
pop
jmp
sub
popf
in
sbb
mov
nop
mulb
sub
dec
sub
pop
jns
bound
hlt
shlb
mov
test
pop
sub
sub
inc
sbb
sahf
add
stos
shrb
lret
adc
sub
jbe
test
and
adc
inc
aas
das
mov
imul
call
add
lock
adc
push
pop
xor
mov
popa
sub
imul
rcrl
or
test
rolb
or
xchg
lock
adc
dec
xchg
adc
movb
enter
inc
and
mov
or
popa
push
xchg
jo
je
pop
xor
sbb
mov
popf
add
lods
xchg
push
dec
jmp
sti
push
and
popa
popf
sbb
sbb
mov
sub
adc
jl
cmp
rcr
das
add
inc
cmc
pusha
jge
imul
fdivrl
lcall
xor
inc
adc
fildl
or
add
mov
mov
jle
cmc
pop
sbb
aad
push
sub
xchg
pop
add
adc
pop
push
inc
jl
jmp
mov
sub
test
loopne
loopne
cmpsb
pop
adc
movzwl
add
imul
imul
push
dec
cmpsl
outsb
testl
xchg
enter
stos
loopne
and
push
cmp
inc
push
inc
imulb
xor
insb
cmp
pop
jmp
xchg
dec
in
cmp
push
cmpsl
xchg
mov
mov
xchg
pop
add
add
pop
adc
push
adcl
ret
jae
stos
pop
and
pmullw
mov
ret
imul
testl
outsl
xor
push
daa
xor
aaa
push
or
cmpsb
add
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
pushf
lahf
aaa
sub
cmpsb
shrl
out
lds
or
cmpsl
pusha
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
mov
mov
js
enter
mov
daa
mov
adc
cs
adc
add
add
pop
and
sub
jecxz
mov
cmpsl
xor
xchg
push
das
mov
add
mov
xorb
in
popf
cmp
sub
jne
mov
inc
and
mov
inc
xchg
ja
lcall
cmp
cmpsl
subb
sbb
adcl
bound
push
aad
aas
and
push
add
dec
mov
in
ret
jb
addr16
mov
sub
sub
inc
out
pop
xchg
insb
je
sbb
aaa
add
aad
cmp
loop
and
jne
push
loop
sub
dec
jnp
aaa
mov
mov
jo
aam
lahf
js
inc
and
adcb
xchg
movsb
je
out
sub
dec
ret
push
adc
mov
push
mov
mov
xor
push
or
jge
clc
testl
repz
sbb
pop
sbb
mov
and
sub
cmp
test
shlb
adc
enter
xchg
fstps
sbb
inc
cmp
or
sub
pop
add
jne
add
jb
aam
xor
jg
pop
sbb
movsb
loop
outsb
hlt
mov
xchg
test
pop
or
mov
arpl
inc
mov
sbb
cld
sub
push
ret
mov
inc
sbb
sub
invd
movups
jne
pop
mov
insb
leave
inc
pop
add
fidivs
inc
mov
push
push
sahf
imul
adc
call
lock
arpl
shlb
pop
fcoml
loopne
les
in
nop
fnstsw
or
mov
adc
mov
inc
push
and
lret
pop
rol
test
rcl
mov
adc
data16
mov
mov
mov
mov
cmp
shlb
sub
mov
lock
das
and
sub
jl
add
lods
sub
adc
mov
sahf
and
mov
js
mov
mov
jl
enter
push
dec
addr16
jo
sarb
push
jns
push
outsl
xor
in
cmp
jmp
mov
mov
sub
aas
int3
mov
lods
int3
adc
or
mov
or
clc
mov
pop
in
nop
mov
mov
cwtl
push
test
add
testb
insb
gs
adc
sbb
pusha
mov
insb
lods
js
inc
leave
mov
mov
add
push
xchg
mov
loop
mov
pop
and
fstl
xor
jo
dec
adc
sbb
pushf
jne
mov
and
add
cmp
pop
mov
imul
test
dec
xchg
out
imul
lock
or
and
dec
xchg
adc
mov
fadds
andb
dec
push
xlat
jbe
xchg
sbb
dec
pop
outsl
jmp
sub
lret
nop
hlt
leave
leave
sub
sub
sbb
push
popf
je
cltd
test
cmpsb
sbb
aaa
adc
cmp
cmp
add
clc
hlt
lock
pushf
pushf
pushf
in
call
mov
fsub
fnsave
clc
in
clc
adc
sub
fcoms
sbb
aas
aas
pop
mov
mov
cmpl
adc
xor
mov
sub
jl
hlt
sbb
pop
aas
xor
or
push
fmul
xchg
jecxz
mov
or
cltd
std
add
in
adc
mov
jmp
lods
je
movb
out
movb
mov
mov
mov
popa
bswap
lock
je
jb
inc
mov
pop
and
mov
push
sub
inc
pop
pop
push
incl
dec
cld
and
add
xchg
xor
xor
je
push
dec
adc
dec
adc
adc
push
or
cmp
sbb
daa
enter
pop
sti
inc
adc
faddl
push
jb
addr16
js
or
es
mov
and
sbb
jo
mov
cmp
test
mov
add
in
xchg
and
or
push
popa
mov
cmp
jle
push
pop
cmp
mov
inc
adc
insb
dec
sub
call
sub
pop
and
and
movsb
push
add
pop
dec
jmp
jmp
push
sbb
sahf
imul
jmp
lods
popa
or
sar
ret
jmp
push
lock
dec
rcll
nop
test
daa
adc
mov
sbb
shlb
mov
inc
sub
or
push
or
jmp
xor
arpl
imul
lock
call
jl
inc
push
mov
or
outsl
mov
nop
or
adc
je
arpl
inc
dec
sahf
out
jne
sub
mov
add
or
dec
fbld
jne
xor
sub
clc
adc
jl
cmp
lods
or
std
pop
mov
push
adc
jle
lea
loope
mov
fcomps
sbb
ds
jb
push
sub
xor
gs
rcrl
push
decb
in
push
lock
dec
inc
pop
cmpsl
sub
dec
adc
jb
sarb
inc
sub
adc
adc
dec
test
jo
test
jge
cmpsb
sub
push
test
mov
adc
add
ret
pop
test
mov
mov
cmp
adc
inc
in
inc
or
gs
pop
sbb
sub
out
mov
fmuls
and
clc
pop
sbb
loop
and
xor
push
sub
cmpsb
test
jne
in
js
repnz
jmp
ds
add
adc
loop
mov
push
push
rorb
adc
add
test
inc
outsb
jne
sahf
rolb
ja
add
or
loopne
jle
fsubs
fmuls
mov
jl
add
mov
jl
or
push
ds
cmpsl
adc
adc
mov
icebp
pushf
mov
push
push
inc
push
and
fstpl
dec
dec
lcall
mov
pop
fs
notb
popf
mov
jg
movsb
xor
std
push
ret
mov
prefetchw
or
add
sub
xchg
cld
mov
pop
rcll
mov
movsb
push
test
cmp
inc
xchg
and
or
cmp
imul
mov
aam
dec
or
push
imul
adc
or
dec
add
sub
clc
or
jo
jnp
mov
mov
adc
popa
xchg
imul
jne
stc
es
fmuls
xor
fs
add
ds
dec
pop
rorb
rclb
arpl
pushf
mov
into
jl
adc
mov
jmp
push
dec
push
and
mov
fmull
push
mov
adc
dec
aam
jb
in
mov
mov
cmp
mov
in
rorl
push
or
out
jmp
pop
repz
repz
pop
daa
das
aaa
push
xor
mov
sub
aaa
sub
sub
sub
sbb
or
es
pop
adc
das
adc
js
mov
or
and
loop
ss
fsts
xchg
es
movaps
adc
es
pop
loope
pop
push
pop
ljmp
cmp
shll
jb
mov
add
pop
repnz
jns
sub
fldt
add
xchg
push
in
or
frstor
mov
lock
sub
inc
ret
cmp
outsb
sub
adc
outsb
adc
call
negl
mov
movsb
jo
sbb
adc
lea
pop
movsl
xchg
or
cmp
push
mov
cmpl
hlt
add
iret
jne
xchg
jo
dec
push
sbb
add
into
in
or
xor
sbb
movsb
adc
fld
cmpb
fmuls
rcrl
xchg
adc
hlt
xor
mov
and
rcll
pusha
enter
and
mov
xchg
sub
cmp
inc
adc
int
cmp
jle
fwait
push
and
prefetcht1
jne
insb
outsl
xor
jo
push
out
sbb
xchg
sub
ljmp
shl
pop
and
xchg
les
out
add
add
xchg
orl
pop
cwtl
fadd
push
xor
mov
cltd
popf
orl
rcll
jmp
test
mov
adc
sub
ss
jbe
test
scas
ror
push
sbb
cmp
into
sarl
mov
sti
dec
psrad
fnstcw
adc
mov
ljmp
arpl
in
daa
jb
add
scas
in
inc
sub
adc
scas
dec
or
push
xor
cmp
enter
pop
jnp
pop
inc
mov
jmp
jge
inc
inc
aad
jo
and
lods
test
fnstcw
dec
jne
and
sbb
or
es
dec
data16
je
enter
inc
sahf
into
pop
and
call
lock
jb
mov
sub
mov
outsb
jno
lods
shlb
push
stos
push
das
sbb
rolb
mov
jns,pn
cmp
lock
or
or
in
shll
xor
mov
pop
daa
xor
mov
pop
addb
cmpsl
push
int3
inc
pop
fsubl
mov
adc
popa
bound
mov
pop
mov
xor
xor
sbb
sub
adc
mov
aad
jle
insb
and
and
sbb
lcall
push
mov
xor
dec
mov
dec
in
js
fdivl
mov
les
scas
test
fsub
pop
or
inc
dec
in
aam
sbb
ds
adc
xchg
outsl
lock
mov
loopne
pop
inc
leave
imul
and
dec
xor
cmp
and
mov
inc
lret
loopne
push
add
das
call
mov
rorl
mov
adc
inc
adc
sub
sbb
mov
jmp
inc
test
mov
lock
lock
inc
xchg
dec
mov
es
sarb
call
jmp
cld
loopne
dec
push
jns
push
inc
lret
call
pop
lock
mov
inc
mov
ret
lds
inc
int3
inc
xchg
xchg
or
and
pop
pop
cmp
mov
xlat
pop
clc
add
int3
out
or
sar
sbb
adcb
push
rolb
stos
dec
int3
lock
test
ret
add
and
dec
imul
movsb
adc
cmp
mov
push
sbb
rclb
daa
fdivr
popf
jmp
int
cld
jle
dec
cmpsl
mov
inc
dec
je
out
push
jmp
xchg
imul
xor
jmp
adc
pop
jmp
mov
adc
push
add
sub
dec
pop
int
add
or
scas
sbbb
testl
cld
out
mov
dec
push
adc
pop
popa
push
js
jne
sbb
jmp
push
adc
in
push
fs
sbb
dec
es
lock
jle
sbb
jle
inc
arpl
or
mov
test
scas
iret
data16
push
cmp
in
xor
jo
pop
repz
pop
repnz
into
subl
je
int
pop
aam
cltd
jbe
pop
cmp
adc
incl
adc
mov
sbb
sub
xor
pop
insb
mov
leave
in
adc
xor
xchg
fxam
pop
push
addr16
dec
jo
cmc
xchg
mov
push
stc
or
out
dec
push
insb
or
outsb
push
or
lret
inc
je
push
xor
dec
mov
inc
cmc
mul
mov
add
inc
inc
fs
add
dec
jl
lret
dec
int3
jo
xchg
test
mov
nop
add
cmp
cmp
pop
gs
add
cmp
in
pop
adcb
arpl
arpl
insl
or
aaa
or
jmp
push
push
inc
daa
push
inc
pusha
ss
inc
adc
cmp
add
inc
outsb
arpl
xor
gs
insl
in
arpl
outsl
ja
mov
xor
popa
scas
andb
pop
outsl
jae
mov
add
nop
push
sub
enter
shlb
bound
xlat
or
inc
adc
sbb
push
push
push
push
xchg
mov
nop
hlt
cld
rorb
xchg
das
dec
addr16
rcrb
loop
divl
push
inc
jb
sub
push
les
push
pop
xchg
inc
out
add
adc
out
pop
pop
add
mov
scas
add
and
mov
scas
push
aad
js
rcrl
pop
inc
push
stc
test
pop
ret
pushf
enter
lcall
or
cmp
sbb
cmp
xchg
iret
lea
or
pop
addb
nop
xchg
and
and
cwtl
pushf
mov
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
fadds
sub
ss
inc
push
movsb
aas
adc
out
pop
mov
adc
pop
arpl
sbb
lea
les
sub
cmp
lea
mov
nop
lret
sbbb
lods
mov
nop
fcompl
nop
lret
cwtl
add
lret
cs
sbb
xor
dec
test
gs
sub
xchg
add
test
movsb
xor
mov
adcb
sub
push
sbb
call
gs
int3
or
rolb
add
aam
test
cmp
dec
xor
xchg
add
pop
in
push
push
movsb
je
test
nop
lret
lock
gs
sub
hlt
clc
add
in
xor
iret
add
add
fcoml
sbb
push
movsb
xor
adc
nop
lret
inc
sbb
add
sbb
and
lods
sub
xchg
add
push
movsb
xor
cld
xor
popa
and
pushl
fldenv
xchg
pop
popa
std
dec
movsl
sub
push
mov
pushf
add
push
sbb
inc
insb
outsl
jae
mov
ss
adc
push
cmp
inc
push
xor
test
fcmovbe
aas
push
in
add
daa
test
je
jne
or
inc
xchg
inc
push
aas
addr16
fs
pop
scas
pop
dec
arpl
jae
ret
sbb
mov
push
dec
fs
lea
add
insb
jns
jp
jae
sbb
out
bound
pop
jge
dec
dec
pop
pop
lahf
lcall
adc
rcr
or
icebp
push
add
bound
adc
xchg
into
es
pop
mov
pop
dec
xor
push
les
daa
mov
xor
jnp
subb
out
cmp
in
push
inc
pop
mov
mov
pushaw
and
and
insl
and
sbb
shll
sbb
inc
bound
jl
out
jno
shll
and
fs
jg
fcompl
das
adc
outsl
addr16
jne
insl
aaa
ss
in
outsb
das
pop
fs
lea
or
mov
faddl
das
sbb
cmp
pushf
loop
outsl
arpl
push
sbb
pop
push
xchg
movntps
inc
pop
outsl
pop
dec
sub
adc
fadds
xchg
mov
and
jl
jp
mov
cmp
xchg
push
add
scas
inc
mov
daa
aad
fnsave
dec
sbb
subl
cmpsb
add
fildl
leave
dec
pop
in
pushf
and
rcr
dec
pop
jb
cmpsb
popf
add
outsl
dec
or
pop
xor
inc
dec
cmp
sbb
addb
add
jno
js
and
pop
or
xchg
or
pop
loope
xor
xchg
pop
call
sub
push
xor
pusha
xchg
and
and
fbld
and
jo
xor
inc
mov
subb
push
push
pop
je
inc
push
pusha
push
jp
adc
test
push
shll
fbld
pop
dec
loop
pushf
outsl
loop
es
xor
mov
push
es
mov
or
sbb
jb
xchg
sub
andl
inc
push
xor
or
adc
pop
movsl
lret
add
inc
mov
pop
cmp
cmp
xchg
mov
lcall
dec
jae
insl
inc
cmpb
fs
add
insb
lods
pusha
test
clc
xor
push
push
inc
inc
jecxz
or
inc
inc
jbe
inc
inc
decb
inc
mov
fs
adc
adc
jnp
sbb
aam
loope
daa
adc
cmp
addl
mov
cmp
je
mov
shlb
add
aaa
xor
ss
sub
imull
loop
xchg
leave
sbb
testl
aaa
cmp
in
inc
mov
or
movsb
pop
inc
sbb
push
out
xchg
rolb
pop
pop
sub
cmp
add
shlb
lret
inc
out
xor
xchg
ss
xor
insb
call
and
aas
in
sub
push
push
dec
rcr
jge
sub
sarb
pusha
cmp
push
leave
inc
add
xor
lds
js
sub
adc
daa
mov
pop
dec
es
xor
mov
scas
or
movsb
pop
mov
daa
push
push
loope
insb
mov
in
adc
pop
add
add
push
shrb
test
arpl
pop
add
je
fmuls
inc
dec
push
ss
pop
in
sub
outsb
outsl
sub
inc
insb
insb
mov
fmul
pop
push
outsl
pop
or
and
sub
inc
mov
fldl
test
mov
adc
or
sbb
cmp
jne
add
mov
out
es
mov
pusha
ficoms
pop
cmp
mov
sub
insl
fs
addr16
push
ficompl
inc
imul
mov
or
shlb
lret
sub
and
mov
mov
inc
dec
mov
add
cs
inc
mov
ja
dec
mov
dec
popf
cmp
lahf
mov
inc
mov
lods
xchg
xchg
out
in
xchg
test
inc
dec
je
in
cmp
jo
insb
push
loopne
pop
es
push
in
lods
lods
push
insb
icebp
sub
subl
dec
cmp
adc
add
cld
dec
mov
das
sbb
adc
in
insb
mov
mov
rorb
jl
aam
mov
jbe
mov
xchg
inc
adc
pushf
adc
cmp
hlt
pop
pop
jo
adc
pop
push
jl
jnp
push
push
cmp
inc
jg
xchg
inc
add
repnz
pop
mov
je
loopne
outsb
fildl
stc
out
jge
cmp
in
add
imul
xor
xor
shll
add
xchg
fldt
mov
sahf
cmp
and
js,pt
and
in
imul
pusha
rorl
int3
dec
std
pop
xchg
inc
jl
xlat
incl
cld
adc
sbb
outsb
sbb
pop
sbb
sub
or
jae
popa
lock
nop
mov
mov
adc
loopne
mulb
xchg
ds
clc
shrb
xchg
add
or
inc
mov
inc
push
adc
pop
push
js
fdivr
orl
jne
add
enter
push
push
cmp
fildll
test
mov
inc
jle
add
or
popa
mov
arpl
lret
int
inc
or
or
addr16
cmpl
pusha
fwait
pop
sbb
adc
lock
nop
inc
and
pusha
adc
xlat
pusha
sub
sar
popa
sahf
or
add
in
jbe
cmp
cmpsb
jp
iret
adc
mov
add
insb
repnz
lcall
insl
popf
adc
fxsave
lock
push
and
dec
enter
out
cmp
fmul
inc
jl
cmp
incl
push
outsl
jo
jo
loop
sahf
pop
fidivrs
sbb
adc
fdivrl
dec
cltd
xchg
hlt
fidivrs
or
pop
xchg
js
mov
roll
add
lods
dec
mov
sbb
xchg
out
push
fsubl
lahf
sbb
les
mov
xchg
mov
sbb
clc
imul
xor
cmp
push
add
push
add
xchg
sub
pop
add
inc
jbe
aad
fwait
adc
insl
negb
and
xchg
mov
lock
ficoms
and
mov
les
int3
pop
and
or
test
sbb
in
mov
xchg
fcom
rolb
inc
cwtl
das
and
or
xchg
ja
pushf
dec
fcomp
and
or
xchg
loopne
loopne
ds
inc
add
push
jo
and
popf
ss
push
mov
daa
and
sbb
inc
ficoms
add
fnstsw
jo
dec
adc
shlb
test
rcrb
pop
push
jmp
rcrl
jbe
insb
or
dec
les
scas
and
adc
add
add
ja
bound
punpckhbw
ret
in
insl
ret
add
or
xchg
hlt
dec
jmp
inc
push
cmp
je
sbb
shl
xchg
mov
xorb
rclb
addl
cmc
ja
fistpl
fdivrs
in
pop
sub
push
lret
dec
dec
pop
inc
or
inc
inc
jnp
enter
add
push
test
pusha
imul
cmpsl
pop
sbb
push
and
or
enter
or
cmp
int3
test
iret
imul
leave
adc
and
aaa
test
push
dec
inc
daa
push
adc
icebp
and
pop
add
js
call
add
jmp
outsl
push
pop
sub
xchg
std
push
or
jb
testl
shrl
add
push
sbb
movsb
and
add
cmpsb
test
adc
inc
dec
mov
repz
mov
dec
dec
or
test
sub
hlt
mov
and
pop
mov
add
inc
test
push
inc
add
sbb
and
addb
dec
fistpll
pop
pop
push
inc
insb
inc
push
push
insb
inc
ja
or
inc
clc
data16
xor
mov
push
js
cwtl
cld
or
push
sub
dec
fldt
or
inc
adc
in
sarl
sbb
fadds
aam
mov
ss
push
call
cmp
xor
inc
mov
call
push
jo
mov
loopne
ds
or
into
or
push
inc
cmp
outsb
and
xor
xchg
sub
mov
mov
dec
icebp
cmp
jnp
and
pop
adc
imul
out
inc
ret
loope
sub
nop
pop
pop
sbb
adc
mov
aaa
test
inc
outsb
and
add
xor
or
iret
or
dec
in
and
or
adc
jo
mov
dec
xchg
push
outsb
dec
adc
mov
dec
dec
jne
cmp
adc
jns
jns
add
sbb
je
test
scas
pop
and
inc
sbb
enter
rcrl
les
cmp
iret
jo
dec
xchg
sub
dec
loopne
push
or
mov
inc
mov
fldl
aam
std
fstl
popa
jno
testb
xor
add
lea
mov
inc
pop
movsl
les
inc
ds
dec
sbb
je
lahf
cs
cmpsl
pop
dec
mov
sbb
arpl
adc
mov
test
xor
enter
shlb
sbb
and
sbb
add
or
mov
cmp
push
cs
cs
test
popa
jecxz
jmp
inc
mov
inc
loopne
push
pop
jmp
ret
fxch
pusha
push
insb
in
ret
pop
and
movsb
push
cmp
pop
cs
pop
lcall
mov
enter
and
std
mov
stc
mov
test
inc
iret
sbb
cmc
test
lret
adcl
shl
fstpl
enter
pop
pop
xchg
add
insb
loopne
sbb
jne
push
push
jns
xchg
adc
outsb
mov
in
or
mov
data16
sub
loope
sbb
inc
pop
sysexit
xchg
sub
outsl
nop
and
aad
rorb
enter
aad
mov
xor
mov
jb
adc
push
mov
neg
inc
pop
xor
outsl
arpl
dec
adc
inc
sahf
mov
or
mov
inc
xchg
test
loop
and
add
mov
inc
enter
push
jns
ljmp
inc
sarb
adc
or
add
push
sub
inc
push
inc
cmp
push
dec
push
cmp
push
jo
out
or
pop
jo
aas
inc
pop
repnz
lock
cltd
inc
jl
fstl
xchg
imul
cld
cmp
inc
add
add
inc
jmp
sahf
xchg
mov
xor
sub
or
push
fsub
cmpsb
aam
cli
imul
call
icebp
in
fs
add
rclb
popa
cmp
faddl
lcall
sub
imul
inc
cmp
push
xor
jle
mov
or
jle
dec
push
sub
adc
fldl
inc
sub
inc
xor
push
inc
inc
or
orb
int
cmp
flds
adcb
or
mov
sub
dec
mov
mov
and
jl
push
lcall
sahf
sbb
daa
and
andb
push
xlat
pop
pop
insl
or
dec
adc
out
inc
xchg
inc
mov
dec
inc
pusha
mov
dec
ret
or
and
xchg
mov
andl
jbe
xchg
add
mov
adc
movsb
je
push
add
js
xchg
push
xchg
mov
sbb
jge
mov
xor
jg
cmp
mov
lcall
jb
adcl
loopne
adc
adc
stc
fstl
mov
jle
cmp
jge
mov
faddl
fstpl
gs
lea
mov
push
add
imulb
lock
sub
jle
xchg
or
jmp
and
cmp
xchg
or
sarb
adc
add
mov
sar
cmpl
sbb
sbb
push
add
sbb
loope
scas
call
push
pop
mov
add
adc
ss
jge
push
or
push
add
or
cmpb
ret
movb
sub
std
mov
fisttps
add
sbb
dec
clc
inc
lods
fwait
push
add
nop
mov
cmpsb
in
pop
xlat
aaa
sbb
test
jns
inc
jnp
and
sbb
dec
sahf
outsl
cmpb
fildl
jne
movb
pop
popa
jmp
cmp
xchg
rclb
aas
dec
cmpb
add
loopne
int
les
cmpb
aam
es
fists
add
jae
xlat
and
cmp
out
and
popf
pop
out
mov
sahf
jp
je
mov
out
add
or
mov
sbb
mov
mov
push
dec
sarl
xlat
xor
mov
jo
inc
adc
nop
jns
and
or
out
js
fwait
js
cmpsl
xchg
and
dec
js
jnp,pn
daa
pop
jb
jge
and
or
add
stos
dec
pop
cmp
in
fidivl
lods
xchg
aaa
sbb
xor
push
dec
in
mov
jb
out
xor
xchg
cmpl
mov
xchg
fisttpll
clc
cs
inc
cmp
cmp
dec
icebp
cmp
pushf
shrl
inc
sub
add
mov
pop
fiadds
dec
jl
adc
pusha
shrb
jl
mov
icebp
fidivs
not
and
jp
and
sub
inc
aam
mov
repz
mov
dec
mov
aaa
jmp
hlt
testb
sbb
ds
jg
nop
xchg
mov
out
add
sub
jae
push
pop
mov
jnp
pop
xor
pop
xor
aad
aam
bound
je
adcl
imul
adcb
ret
add
dec
cmpsb
cmp
in
psraw
in
aaa
imul
fcomi
sbb
xlat
mov
flds
mov
sahf
jnp
lcall
lods
xor
pop
loope
cmpsb
cltd
in
fadds
cmpsl
sbb
shrb
xor
pop
aam
out
adc
mov
scas
ret
shrl
aad
aad
or
aad
addb
aam
add
cmpsl
push
and
add
lcall
std
and
mov
or
add
sbbl
cmp
cmpb
push
jne
mov
stos
dec
mov
adc
mov
into
xor
test
jge
sub
in
push
adc
test
mov
ret
out
mov
cltd
add
outsb
xchg
out
xchg
adc
movsb
aas
push
sbb
lahf
insl
inc
fimuls
adc
push
push
adc
and
pop
sub
repnz
rolb
repz
push
inc
ljmp
pop
clc
and
dec
sbb
dec
dec
jl
icebp
lods
pop
ja
testb
mov
pop
popa
sub
fimull
int3
add
imul
mov
lret
push
pop
mov
jae
repnz
pop
sub
shrl
xchg
hlt
imul
push
xlat
mov
ss
enter
cmp
jmp
push
fsubr
imul
mov
xor
add
mov
rorb
adc
or
or
call
pop
cld
add
lock
dec
mov
shlb
fdivs
pop
add
mulb
push
lods
or
loopne
add
xor
mov
mov
outsb
and
jne
xor
jne
jmp
into
fcomps
call
pop
adc
aas
rcrl
pop
fmul
jecxz
dec
std
pop
pushf
push
popa
test
jae
inc
orb
cmp
les
push
inc
bound
and
dec
sbbb
ljmp
cmp
or
or
leave
lods
mov
xor
mov
mov
sti
and
and
xchg
sub
stos
ss
xchg
aas
sbbl
and
hlt
pop
push
test
in
ss
or
fs
mov
xor
das
rorb
not
and
push
push
mov
cmpsb
subl
xchg
add
mov
stos
mov
pop
movsb
ss
enter
dec
cmp
iret
inc
and
jle
cmpsl
cmp
add
or
mov
adc
adc
xorl
aam
or
mov
pop
push
push
and
xor
lods
pop
adc
cmpl
jbe
incl
data16
pop
aaa
cld
xchg
add
pusha
jnp
sub
fildll
adc
adc
inc
test
mov
add
repz
pop
in
test
pop
mov
jp
dec
clc
adc
mov
jno
adc
add
sbb
adc
push
add
adc
adc
test
testl
adc
sbb
and
push
out
clc
sub
cmp
push
push
sbb
pop
test
push
adc
lock
enter
xlat
sbb
dec
and
or
xchg
sub
sub
push
mov
mov
jle
clc
adc
inc
clc
es
pop
in
in
and
sbb
or
push
sbb
sub
pop
loope
and
lods
pop
sbb
sbb
sbb
iret
je
and
jo
xchg
sbb
rcl
sub
xor
push
jbe
adc
push
and
mov
mov
sub
push
cmp
or
push
push
pusha
mov
pop
cmp
add
rcl
cli
dec
cwtl
stos
inc
pop
rclb
push
mov
lea
cmp
shll
test
or
adc
fcmove
inc
add
lock
add
cwtl
push
mov
shlb
cmpsl
xorb
mov
jns
push
push
or
outsl
jae
mov
mov
dec
add
mov
and
bound
aaa
adc
xchg
adc
shrl
cmp
nop
mov
inc
movsl
xor
ret
mov
scas
mov
add
xchg
mov
sbb
cltd
neg
xchg
mov
xor
imul
movsb
lods
insb
push
pop
pop
addb
pop
adc
movsl
jns
adc
mov
in
adc
or
mov
lea
lea
xchg
cmp
pop
or
jne
pop
nop
into
or
inc
popf
sbb
mov
andb
sub
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
mov
pusha
jmp
arpl
dec
imul
in
xor
cwtl
sbb
in
push
shrb
xchg
sub
mulb
xchg
pop
add
sbb
jecxz
add
sub
frstor
out
mov
push
lods
popa
mov
sbb
ret
add
or
mov
add
hlt
or
fildl
sbb
ret
pop
in
and
decl
sub
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
sbb
push
pop
leave
leave
leave
leave
add
add
leave
leave
leave
leave
add
push
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
pmulhuw
fs
icebp
repnz
in
hlt
cmc
div
mov
mov
clc
das
outsl
inc
iret
adc
inc
out
jle
pusha
dec
cmp
repz
inc
push
cmp
repz
repz
sub
and
repz
xor
adc
or
iret
repz
add
cld
cmp
xor
out
hlt
add
clc
push
in
cmp
repz
aam
iret
repz
int3
fadd
sarb
mov
lods
mov
repz
test
mov
mov
cmp
repz
subb
sahf
add
jo
cmp
cmp
jns
out
cmp
cmp
sahf
out
sahf
cmp
cmp
cmp
jns
out
cmp
cmp
cmp
jns
out
cmp
cmp
popf
out
sahf
cmp
cmp
cmp
cltd
cmp
sub
inc
movsb
dec
rcrb
fs
mov
mov
test
popf
mov
and
jo
inc
jb
and
xchg
subl
out
mov
mov
inc
jl
xchg
pop
mov
ja
pop
pop
sbb
inc
aam
test
push
or
bound
mov
add
xorl
es
jle
and
add
pop
pop
daa
push
sbb
popl
pop
mov
jo
arpl
jo
fcoml
mov
fs
dec
xor
mov
inc
adc
push
or
stos
std
jb
inc
fadd
jb
cmp
add
sub
lahf
or
add
pop
dec
add
adc
push
divl
or
inc
push
xchg
ss
repnz
or
fidivs
sbb
push
inc
inc
adc
jl
jns
adcl
test
push
iret
enter
dec
jo
inc
insb
mov
push
hlt
stos
dec
repnz
loopne
nop
add
call
adc
sbb
mov
push
sub
pop
cmp
sbb
dec
rolb
or
lret
shr
imul
rcrb
cmp
dec
xor
aaa
push
xor
ds
shrl
push
gs
push
stc
imul
pop
push
sub
daa
jb
lahf
xchg
mov
push
inc
xchg
add
test
iret
pop
or
adc
xor
sbb
cmpb
mov
flds
push
add
mov
xor
in
add
adc
add
jmp
add
add
ljmp
hlt
mov
movb
lods
das
add
jg
push
adc
roll
mov
movsb
icebp
fisttpll
mov
push
push
cltd
aaa
or
inc
mov
or
fs
popa
inc
lcall
fnstcw
scas
loope
roll
xchg
cwtl
daa
xorl
mov
fsubr
push
adc
ret
xor
aaa
mov
mov
ret
loopne
in
pop
hlt
mov
jbe
jnp
mov
movsb
xor
xor
or
movl
or
sub
outsb
cmp
popa
rorl
cli
addl
inc
jmp
mov
out
cld
pop
push
pop
add
dec
mov
into
xor
add
mov
je
pushl
test
dec
inc
mov
cmp
push
leave
gs
cmp
pop
inc
stos
cli
test
add
pop
push
nop
push
jb
cmpsl
pop
adc
jns
cmpb
ja
add
mov
dec
inc
push
rorb
lods
pop
push
jl
cmp
in
xor
inc
add
or
xchg
pop
xchg
adc
aam
inc
add
xor
jbe
inc
dec
sub
or
je
push
faddl
scas
lods
pop
mov
pop
fdivrs
dec
fsubs
push
faddl
lds
stos
inc
dec
add
fistpl
in
adc
add
fs
mov
fnsave
sbb
hlt
adc
imul
push
and
push
sub
fcoml
push
mov
and
mov
das
jmp
arpl
add
jo
adc
cmp
xor
add
cmpsl
ljmp
mov
xor
inc
push
sbb
mov
fsts
sub
movsb
or
pop
mov
xor
jp
loope
lds
inc
push
pop
add
shrd
xor
pushf
sbb
movb
cmp
and
pop
leave
mov
sbb
sub
in
adc
or
push
enter
sbb
pop
or
and
ja
dec
imul
sbb
dec
insl
adc
jg
pop
xchg
stos
mov
cmp
inc
add
jg
sbb
int3
scas
mov
rcrb
adc
aam
xchg
inc
mov
push
roll
cmp
scas
icebp
fsubl
pop
enter
sbb
lahf
xchg
mov
pop
ds
mov
lock
or
clc
push
push
push
adc
scas
dec
lods
and
add
pop
and
je
jg
movsb
rcrl
in
adc
int3
sbb
mov
mov
pop
or
inc
stos
cmpsb
iret
push
daa
rol
shrl
xor
adc
sub
loopne
or
js
inc
dec
in
push
push
mov
cmp
mov
fs
push
inc
bound
mov
sbb
loopne
sbb
fcomps
cmp
int3
pop
ficoms
xchg
jno
or
out
je
inc
inc
daa
sub
insl
fnstenv
xchg
dec
and
xor
xor
dec
imul
jo
push
out
lret
out
pop
aas
add
outsb
pop
arpl
insb
push
arpl
imul
imul
inc
outsl
pop
js
bound
out
mov
jo
jb
jb
popa
or
cmp
dec
xlat
out
mov
push
es
cmp
sbb
addr16
imul
mov
mov
mov
mov
fisubs
arpl
insb
daa
push
jnp
out
push
jg
sub
insb
das
insl
sti
ficomps
loop
sbb
and
cmp
pop
daa
out
push
loop
je
jo
mov
jge
jb
arpl
jns
xchg
jbe
outsl
dec
pushw
das
add
imul
imull
push
hlt
jmp
ret
push
fs
and
call
add
movsb
mov
or
cmp
out
push
add
pop
sbb
push
ret
adc
sbb
jle
je
clc
and
xchg
sub
out
jp
or
aam
mov
inc
mov
rcrl
ret
push
sub
push
fisubrl
dec
push
add
push
or
insb
insb
push
push
jg
mov
out
insl
adc
mov
mov
inc
push
jne
pop
sbb
lods
adc
call
push
lahf
icebp
xchg
inc
mov
call
jne
inc
push
mov
sbb
inc
adc
push
push
nop
xchg
fs
scas
mov
adc
adcl
add
push
push
sub
lcall
jns
dec
xchg
lahf
xchg
inc
outsl
gs
test
adc
cwtl
xor
lods
mov
or
cmp
in
imul
roll
xor
sahf
insl
jae
cmp
clc
inc
push
enter
movb
pop
ret
mov
xor
jge
add
mov
jb
or
jb
jmp
sbb
or
and
mov
adc
movsl
repnz
shll
pop
repnz
sub
add
and
sub
sbb
pop
out
or
mov
inc
movsl
add
inc
nop
push
mov
inc
call
adc
sbb
sbb
pusha
int
or
mov
cmp
add
xor
cmpsb
imul
add
push
pop
pop
or
or
or
or
or
or
out
adc
adc
sahf
out
sahf
adc
push
pop
sbb
lcall
sbb
push
pop
and
and
and
nop
cmp
shll
push
inc
pop
imul
pushf
lods
mov
iret
loopne
add
jns
xor
mov
out
fwait
lods
mov
int
lock
adc
cs
repz
cmp
pop
data16
mov
pusha
cmp
and
add
in
lret
add
jb
adc
adc
cs
sbb
sbb
sbb
xchg
lret
push
or
and
and
cs
sub
dec
sub
xchg
lret
adc
adc
movsb
jb
in
inc
push
inc
test
dec
sbb
push
sbb
push
lret
dec
sbb
scas
shr
xchg
pop
sbb
push
movsl
repnz
sub
pop
bound
dec
pop
and
mov
adcl
and
dec
stos
inc
sub
adc
or
add
clc
or
adc
les
sbb
bound
or
imul
inc
in
insb
or
jmp
inc
es
or
push
lea
or
sti
insl
dec
in
js
lock
std
fwait
int
pop
push
jns
push
das
sub
push
add
call
jl
mov
enter
push
mov
int3
mov
push
ja
dec
jnp
pop
mov
loopne
pop
movsb
repnz
loopne
add
dec
pop
mov
xchg
lock
dec
int3
inc
add
fsubs
out
sarb
and
adc
fsubr
push
sub
xchg
bound
and
pop
out
jnp
hlt
or
add
jmp
orb
push
pop
leave
iret
and
adc
hlt
les
xor
mov
out
subl
mov
push
adc
enter
jl
testl
inc
fcomps
pop
cmp
push
inc
inc
pop
into
push
or
xor
mov
sahf
out
xchg
mov
mov
cltd
bound
addr16
sub
inc
aad
je
push
xor
outsb
pushf
sbb
adc
out
dec
inc
leave
sbb
js
or
jae
lahf
adc
and
lcall
sub
jns
sub
or
xchg
push
add
adc
sbb
push
adc
push
jb
adc
test
and
inc
lods
or
pop
scas
xor
add
sbb
push
sbb
adc
or
or
sbb
add
sbb
push
pop
and
xor
mov
inc
leave
push
and
adc
es
daa
adc
push
leave
add
xchg
dec
sub
and
leave
sub
add
xor
cs
mov
inc
push
inc
xor
or
inc
mov
inc
clc
add
xorl
add
and
sub
xor
pop
or
rolb
xchg
sbb
sbb
dec
add
xor
dec
inc
push
insb
push
mov
repnz
push
fsubl
add
arpl
pop
cwtl
or
in
pusha
decl
push
mov
adc
adc
adc
inc
xchg
adc
les
shl
clc
push
jo
dec
push
sti
jo
dec
popa
bound
pop
sub
inc
mov
nop
lock
pop
dec
lods
addr16
xor
test
adc
loope
xchg
push
subl
scas
pop
sbb
inc
imul
adc
fbstp
bound
add
inc
mov
or
nop
add
dec
adc
xchg
add
and
add
test
or
movl
arpl
inc
in
fisttps
add
jb
pop
pop
lods
sbb
adc
sbb
pop
movsl
and
and
mov
inc
add
push
mov
dec
push
outsb
loopne
popa
orl
inc
outsl
test
add
pop
xor
and
jb
xor
leave
daa
sub
rclb
sub
add
add
xchg
inc
dec
enter
sbb
bound
or
popf
js
js
ds
das
dec
gs
loop
sbbb
xor
jbe
cmpb
or
lret
movsb
adc
xchg
xor
or
dec
jne
cmpl
push
push
or
rcl
push
ljmpw
mov
push
ljmp
inc
push
bnd
or
adcl
push
sbb
clc
add
mov
imul
pop
sub
les
jo
sti
fidivs
fiadds
pop
jbe
push
dec
rolb
adc
mov
mov
add
ds
repz
fcoml
jb
loope
dec
or
gs
cmp
out
pop
and
add
mov
mov
or
ss
loop
cmp
sub
in
ja
cmp
fnstcw
lds
sbb
clc
cmp
inc
add
jo
adc
adc
dec
push
loop
inc
sahf
lar
jle
add
lcall
inc
cmp
mov
leave
out
arpl
push
fstl
and
clc
xchg
gs
pop
js
lods
dec
or
cmpsb
xchg
adc
adcb
adc
adc
or
gs
add
or
or
sbbl
cmpsl
inc
push
sbb
js
push
jb
sbb
and
andb
mov
mov
test
aaa
pop
dec
inc
pop
dec
insl
gs
sub
and
adc
decl
xor
jns
dec
popa
js
outsb
addr16
xorb
and
inc
dec
mov
push
xor
outsl
and
loopne
loopne
sub
or
call
jae
mov
imul
or
es
add
aam
les
rcr
std
xchg
sbb
pop
sub
mov
dec
pop
and
add
popa
sub
cmp
out
pop
push
das
or
mov
cmp
inc
xchg
sub
xchg
pop
adc
inc
leave
push
aaa
cmp
sub
repnz
int3
fcomp
cmp
orl
dec
inc
outsl
dec
cmp
inc
push
mov
xchg
call
in
cmp
jo
enter
cmp
xchg
pop
leave
add
sbb
xchg
stos
xchg
inc
mov
xor
decb
xchg
dec
xchg
cmp
xor
add
push
aam
xchg
xor
push
dec
aam
lock
les
adc
push
fiadds
sub
or
inc
xchg
pop
leave
add
jne
jb
mov
or
dec
jae
adc
mov
jo
push
int3
add
xchg
and
fsubl
lret
fisubrl
add
or
orl
jne
cmpsl
pop
and
adc
or
pusha
inc
cmp
jnp
pop
inc
pop
push
xor
inc
add
xor
pop
inc
sbb
jp
inc
xchg
cmp
nop
aas
leave
or
add
ljmp
jne
mov
sub
scas
mov
add
stos
and
sbb
cmp
sbb
or
roll
xchg
push
pop
js
js,pt
and
add
xor
in
sbb
pop
sub
nop
test
mov
jne
or
jo
jae
sbbb
sub
daa
ss
mov
call
enter
bound
sub
out
pushf
dec
fiaddl
pusha
jne
mov
dec
xor
and
xor
xchg
pop
orb
push
leave
push
jb
ss
xor
and
cmp
xchg
dec
cmp
add
add
ds
add
push
leave
inc
inc
inc
mov
dec
cmpsl
pop
or
icebp
and
ds
sahf
inc
aam
inc
or
inc
push
loop
pop
mov
inc
hlt
lret
mov
push
jne
push
test
mov
inc
pushf
push
and
cmp
aam
pusha
xor
sahf
add
ja
sub
jo
mov
jnp
cmp
inc
into
push
test
test
inc
ret
scas
adc
mov
add
outsb
push
jnp
dec
add
push
push
push
push
je
inc
rorb
and
inc
push
faddl
xchg
jbe
cmp
add
inc
aas
xor
sbb
aas
add
cmpsb
cmp
add
mov
cmp
fcos
mov
xor
push
or
jbe
int3
sbb
push
sub
pop
bound
add
push
out
int
dec
or
push
cli
push
sbb
push
push
or
jns
push
clc
add
hlt
js
add
or
sbb
in
pop
test
in
push
jp
fcom
jns
jnp
sahf
rcl
int3
mov
popa
sbb
sbb
mov
add
sub
cmp
sbb
addl
push
dec
push
xor
add
push
jg
lods
or
push
aad
mov
or
inc
inc
out
ljmp
cltd
pop
pop
les
imul
adc
pop
and
leave
push
adc
push
push
push
adc
adc
adc
inc
cmp
cmp
mov
push
les
sbb
jb
sbb
cmp
sbb
or
js
and
and
sbb
sub
cmpsb
xchg
es
sub
sub
sbb
sub
sbb
sbb
fs
xor
pop
cltd
fadds
pop
inc
and
imul
jg
lret
outsb
inc
insb
outsb
inc
nop
jno
add
outsl
inc
aas
and
and
inc
xor
add
jo
xchg
outsl
inc
or
inc
rclb
sbb
sub
dec
push
pushf
mov
imul
add
je
nop
js
ss
fisttps
mov
cwtl
enter
in
mov
add
fsubr
dec
mov
or
movsb
syscall
jnp
lret
addr16
andl
ss
cmp
outsb
adc
popf
jl
std
out
inc
mov
rorb
movl
xchg
push
add
xchg
mov
mov
xor
test
push
and
sbb
and
test
pop
mov
or
insb
into
je
sub
movsl
rcl
notl
lods
mov
push
or
call
dec
into
dec
jnp
cmp
inc
fistl
adc
mov
cltd
les
leave
pop
ret
push
add
pop
xlat
pop
loopne
fidivrl
inc
push
push
push
fcmovnbe
shll
mov
dec
xchg
sub
sbb
add
sbb
push
mov
mov
push
repz
aam
fidivrl
cmp
loope
int
das
sar
movsb
popa
mov
jle
pushf
sub
xchg
mov
rolb
in
gs
loop
mov
mov
jnp
inc
dec
push
rolb
dec
mov
add
lahf
inc
add
mov
push
mov
cmp
ja
push
in
xlat
jle
mov
mov
inc
or
xor
stos
jge
add
jmp
inc
xchg
das
mov
test
push
jmp
iret
sub
imul
jecxz
push
xchg
sub
sbb
clc
sbb
leave
adcb
outsb
test
add
ja
fs
push
nop
push
leave
orb
popf
je
xor
pop
dec
rclb
enter
mov
or
pop
add
aad
outsl
add
or
inc
sbb
push
inc
push
add
test
inc
nop
mov
mov
mull
movl
or
sbb
add
cmpsl
mov
shlb
xchg
pop
jns
daa
add
int
or
mov
je
pop
mov
xchg
inc
orb
iret
adc
mov
jo
fwait
mov
or
xchg
mov
xchg
add
xor
mov
shll
pop
icebp
jecxz
rolb
pusha
push
ficompl
nop
test
andb
xchg
lods
pop
xchg
std
es
and
pushf
test
mov
popf
jo
jne
or
insl
cmc
stos
add
ret
andb
test
jae
push
inc
pusha
sub
and
test
bound
cld
data16
mov
dec
inc
filds
adc
and
or
int
xor
jo
dec
and
mov
or
aas
test
push
cld
sub
mov
xchg
add
jo,pn
rcll
aam
mov
test
cs
xor
lahf
cmpsb
sar
dec
iret
inc
daa
insb
or
mov
pop
xchg
mov
insb
outsb
pop
fcompl
xor
and
dec
cmpsl
addr16
mov
or
movsb
lea
mov
add
mov
sbb
pop
push
insb
sub
cmp
mov
cs
xchg
xchg
jge
es
add
pop
cmp
add
and
pop
in
test
je
push
sbb
mov
add
inc
mov
enter
inc
bound
or
cmp
jns
mov
or
cmp
inc
mov
nop
jno
mov
cmp
sbb
mov
js
sub
pop
cli
push
ret
add
popf
shr
les
add
or
repnz
push
or
dec
push
add
in
add
insb
xor
and
insb
cmp
stos
pop
mov
adc
testb
mov
add
mov
push
es
pop
dec
enter
jo
push
add
and
adc
push
dec
xlat
ss
mov
stc
mov
fsubrp
movups
outsl
cmp
mov
dec
iret
and
xchg
daa
scas
testl
lahf
jo
cmp
icebp
jb
jo
push
das
jge
jnp
shrl
push
mov
dec
pop
sbb
nop
dec
mov
cmpl
push
lret
dec
jnp
add
inc
mov
mov
adcb
cmp
fstl
and
mov
push
lock
je
and
dec
test
push
cs
cmp
inc
in
jl
rclb
pop
popl
repnz
test
lods
sub
or
sbb
test
mov
add
sub
or
push
inc
inc
adc
mov
movsl
push
enter
add
xchg
adcb
pop
pop
and
jo
andb
fmull
out
ss
fimuls
lods
pop
fdivr
cmp
xor
cmp
xor
enter
push
adc
mov
daa
sub
cmp
or
sbb
jmp
add
xchg
and
dec
div
mov
sbb
hlt
and
popa
and
mov
addr16
adc
or
push
push
shr
and
dec
ja
addr16
add
or
or
test
leave
test
and
leave
and
addr16
sub
daa
jg
sahf
push
out
sub
fs
sbb
into
push
movsb
pusha
pop
pusha
xchg
sub
incb
inc
shl
aaa
push
xor
inc
in
lods
mov
adc
sub
imul
mov
push
gs
leave
sub
sarl
pop
test
mov
jle
and
mov
inc
lret
sub
shlb
mov
adcb
dec
rolb
shrb
hlt
dec
addr16
std
jnp
push
lock
int3
inc
inc
cmpsl
push
mov
ja
xchg
xchg
aad
xor
sbb
push
and
jge
jg
inc
jecxz
add
mov
and
and
shll
sbb
push
cmpsb
lret
jmp
cli
in
rorl
sbb
dec
inc
stos
lods
pop
into
movsb
jb
sbb
dec
cld
out
dec
push
mov
es
sub
aas
in
adc
lods
in
xor
dec
xchg
add
mov
cmpsb
mov
add
or
inc
out
dec
or
or
out
dec
ja
adc
push
xchg
xchg
xchg
fildl
dec
adc
sahf
xchg
xchg
pop
adc
arpl
mov
inc
inc
dec
push
pop
into
je
aam
enter
jl
mov
testb
je
mov
xor
xlat
jns
pop
aam
pop
adc
inc
mov
imul
mov
mov
add
and
pop
adc
push
jns
aaa
daa
pop
imul
orb
add
add
inc
adc
nop
dec
and
mov
das
xchg
push
lods
stc
lret
push
add
xchg
xor
pop
aad
add
rorb
adc
jl
push
je
cmpl
or
icebp
and
sbb
xor
stos
or
in
push
daa
sbb
lcall
dec
icebp
flds
add
js
cli
adc
inc
push
adc
cmp
push
daa
jmp
and
je
pop
jo
push
lock
mov
test
addr16
mov
mov
push
sbb
nop
inc
xor
imul
sbb
push
test
pop
mov
faddp
add
sti
add
or
cmp
rol
cmp
stos
pusha
sub
mov
lods
sbb
sbb
sbb
loope
out
xchg
call
fcomps
adc
mov
rclb
mov
ljmp
push
push
or
inc
test
pop
xchg
add
imul
in
push
or
adc
sub
add
pop
shrl
pop
aaa
cmpw
xchg
add
or
icebp
or
mov
push
dec
repz
sbb
sub
pop
js
cmpsl
pop
pushf
adc
mov
cmp
sbb
icebp
sbb
vfrczpd
inc
mov
sti
xchg
mov
pop
andl
push
je
mov
xchg
ss
push
dec
push
mov
ret
mov
dec
push
adc
fcmovnb
push
mov
imul
or
xlat
enter
pop
inc
pop
adc
push
add
out
xchg
or
addb
in
xchg
scas
dec
aaa
roll
into
mov
cmp
movsb
pop
loopne
and
outsl
and
or
cmp
jo
dec
sbbl
push
jl
sbb
inc
sbb
inc
faddl
cmp
in
mov
dec
pop
dec
pop
pop
lahf
nop
sbb
add
mull
push
pop
andl
inc
xor
xchg
or
inc
xchg
loope
outsb
add
lcall
pop
insb
and
sbb
enter
inc
mov
push
loopne
pop
scas
mov
sbb
push
scas
push
roll
mov
add
jp
sbb
data16
sbb
push
enter
fbstp
imull
addb
inc
cmp
jb
cs
add
lock
xchg
jne
in
push
mov
test
sub
stos
fwait
or
mov
push
inc
hlt
inc
mov
and
test
inc
sbb
jns
or
popa
and
or
add
add
inc
cmp
stc
ret
pop
pop
xorb
call
andl
andl
sub
shlb
pop
inc
ret
lahf
int3
and
adc
mov
or
ja
add
repz
inc
inc
pop
es
add
sbbl
rcr
test
test
jne
test
mov
sbb
outsl
adc
roll
inc
and
test
pop
push
sub
and
pop
testb
les
aam
rcl
sahf
notl
add
add
subb
loop
adc
xlat
and
lods
lods
pop
mov
and
mov
push
mov
adc
cmp
mov
movsl
dec
ror
stos
sbb
inc
aaa
mov
test
mov
shlb
or
push
iret
mov
push
pusha
pop
xor
orl
sub
push
mov
leave
loop
mov
inc
popa
gs
data16
and
and
and
inc
das
and
and
nop
and
daa
mov
inc
cmpb
popf
orl
inc
addr16
andl
and
mov
sahf
push
movl
in
pop
and
jne
pop
add
push
add
jg
and
or
mov
inc
sub
or
nop
test
jmp
sub
add
inc
add
push
mov
imul
fisubs
out
and
or
stos
rcl
stc
int3
xchg
lea
adc
andl
xchg
pinsrw
dec
movups
movb
iret
inc
ss
pop
push
cmp
ficoms
pop
jle
adc
push
imul
sbb
pop
pop
bound
add
push
cmp
sub
and
jb
inc
mov
pop
or
flds
cwtl
daa
add
sub
and
or
test
xor
pop
adc
push
xor
or
cmp
mov
scas
adc
scas
or
or
jecxz
cmc
inc
icebp
or
inc
cmp
push
jge
xlat
sbb
outsl
ja
add
orl
dec
shl
or
in
incb
enter
jecxz
pop
mov
mov
negl
mov
pop
mov
vpsrad
outsl
push
movsb
rorb
lahf
add
or
loop
sbb
cs
sub
popf
and
cmp
je
mov
xlat
inc
dec
push
or
xorb
ds
sbb
mov
js
push
gs
incb
pop
lsl
mov
dec
add
adc
iret
inc
push
push
push
dec
dec
xlat
cmc
aaa
sub
xor
outsl
inc
push
addw
xchg
es
rcr
test
xor
or
cltd
jne
pop
sbb
adc
push
es
gs
imul
sbb
sbb
xchg
pushf
mov
mov
scas
and
daa
in
adc
jle
ds
inc
sbb
add
or
ret
ret
jmp
jnp
or
add
pop
shlb
jecxz
aad
dec
cmpsl
add
sub
aas
pop
jb
test
sarb
addr16
clc
sub
lds
mov
jl
mov
push
push
inc
in
xchg
jmp
mov
inc
movsb
fwait
inc
add
cmpsl
inc
adc
nop
xchg
jl
clc
pushf
adc
push
shlb
xchg
sbb
mov
lcall
aas
outsb
jae
push
mov
orb
jae
add
mov
inc
mov
inc
iret
xor
cmp
xchg
cld
cmp
in
and
xchg
into
ss
loopne
jne
cmp
outsb
inc
dec
mov
movq
xchg
and
clc
jo
jno
fcmovne
xchg
xchg
sbb
xor
aaa
mov
ljmp
loopne
pop
movl
repz
test
iret
rep
lods
mov
pop
xor
cmp
gs
dec
add
outsl
stos
lahf
fsubrl
and
aaa
enter
les
jle
and
or
and
mov
inc
jbe
cwtl
mov
mov
push
push
jnp
test
inc
dec
js
jg
dec
inc
add
pusha
mov
or
sub
outsb
cmpsb
clc
or
push
cmpl
adc
dec
and
and
fcmovu
mov
push
cld
mov
sbb
xor
lods
dec
mov
dec
addr16
push
mov
mov
sub
lea
insl
or
cmp
add
pop
xchg
fistl
rclb
inc
test
mov
or
into
add
mov
mov
sbb
xor
dec
adc
xor
pop
and
fiaddl
mov
cmp
push
add
dec
sub
push
adc
daa
mov
push
ret
cmp
frstor
dec
sbb
pop
adc
dec
shr
in
andl
aas
mov
pop
inc
lock
mov
mov
popf
dec
or
lds
adc
xor
xchg
popl
ja
pushf
cmp
pushf
andb
call
mov
lock
mov
and
push
ja
in
in
xlat
sub
aad
shlb
lcall
pop
fs
outsb
jae
das
fistpl
rorb
xchg
xor
add
or
push
xchg
ret
loopne
clc
clc
mov
or
mov
push
aaa
dec
inc
sub
sub
mov
and
sub
push
pop
sbb
cmp
sub
sub
and
dec
gs
dec
xor
sub
adc
fwait
or
ret
movb
int3
and
in
adc
loop
outsl
xchg
or
ja
ret
or
hlt
xchg
aas
mov
mov
test
enter
popa
fwait
addl
rorl
mov
and
lock
lcall
stos
stos
mov
das
dec
cmpsb
add
mov
fisubs
push
lock
enter
sub
xchg
mov
add
cmp
stc
add
orl
dec
xor
dec
jne
jo
inc
call
mov
xchg
inc
push
test
push
mov
or
adc
xor
in
call
flds
repnz
mov
jb
bound
test
add
mov
xchg
ret
incl
inc
ss
lahf
jge
cmp
inc
mov
xor
shlb
mov
and
add
cmp
je
or
je
add
sub
pop
insb
ret
aaa
jnp
mov
mov
loope
push
orb
pop
mov
push
mov
jmp
xor
and
push
jle
inc
lods
movsb
jns
push
scas
xchg
rol
sbb
notl
popf
std
imul
mov
xor
pop
mov
lret
add
mov
xor
sbb
add
lcall
dec
inc
dec
push
add
pop
test
mov
add
dec
cld
test
xor
aaa
aaa
loopne
xchg
mov
or
outsb
push
dec
mov
inc
add
cmc
or
mov
andl
mov
mov
aas
inc
push
sub
pop
adc
sub
cmp
xchg
jne
mov
insl
jbe
fcompl
adc
insb
push
jmp
cmp
pop
fs
repnz
pop
daa
lods
adc
outsl
outsb
lock
pop
inc
test
dec
outsl
cli
les
into
mov
or
add
sbb
push
inc
daa
xor
imul
aam
xchg
push
in
test
adc
adc
fwait
sub
fbld
dec
dec
lock
push
cs
lea
sbb
ret
cmp
lods
add
cmc
or
seto
inc
adc
push
sbb
dec
push
pop
sub
adc
insl
pop
sar
xlat
loopne
mov
push
jb
mov
decb
mov
and
clc
mov
or
mov
outsl
xchg
sbb
cltd
add
mov
jo
and
lods
addb
sbb
sbb
cmp
aaa
and
sahf
filds
mov
mov
push
add
sbb
int3
add
xor
pop
mov
push
mov
clc
push
push
pushf
add
pop
insb
ss
mov
add
add
add
dec
mov
mov
insb
popa
or
adc
or
ds
mov
and
and
mov
xor
mov
add
rorl
enter
or
or
jo
ds
repz
or
xor
loop
je
loope
in
mov
and
rorl
popl
in
cwtl
hlt
mov
and
adc
loopne
sbb
les
iret
fwait
xchg
mov
push
mov
imul
ret
fiadds
cmp
jo
test
loopne
decl
lahf
inc
cwtl
mov
push
and
mov
adc
xor
pop
pusha
sub
leave
xchg
lea
mov
ret
sub
les
add
sub
leave
pop
mov
jns
sbb
insb
push
addb
add
call
cmp
rcr
adc
pop
sub
xor
add
mov
daa
js
test
mov
or
rol
addr16
into
lds
pop
cmp
enter
js
inc
movsb
setbe
jl
push
push
sbb
dec
add
nop
movl
cmpsb
or
aaa
les
inc
nop
es
lret
inc
and
and
call
or
inc
repnz
inc
adc
mov
nop
pop
nop
aaa
loopne
repnz
jle
add
push
xor
insl
bound
fstps
fmuls
jg
push
inc
fildll
scas
add
outsb
test
adc
popa
popf
aaa
mov
mov
fdivs
and
inc
lret
xor
fs
xchg
cmc
add
adc
and
dec
and
rclb
jnp
in
imul
stos
and
add
add
sbb
or
push
punpckhwd
dec
dec
jl
or
sub
mov
add
imul
inc
mov
or
pop
or
imul
les
test
jae
jns
fadds
xchg
add
loope
pop
dec
nop
and
cmovo
imull
and
add
inc
stos
test
leave
cli
push
loope
mov
movl
adcl
rorb
cmp
xchg
pushf
aam
xor
lret
ret
add
xchg
jnp
xchg
or
push
or
and
adc
mov
imul
cmp
imul
and
add
push
shr
addb
mov
pop
or
test
insl
mov
adc
movsb
dec
ret
jmp
inc
mov
dec
mov
jb
testl
and
aaa
and
sahf
mov
cmp
add
inc
iret
or
adc
rclb
or
jnp
sub
ja
add
xchg
fnstenv
push
inc
adc
sub
shlb
cmp
add
jo
orl
jl
jge
clc
nop
adc
cmovs
clc
nop
sti
mov
mov
xchg
cmpsl
add
dec
mov
or
inc
pop
and
push
icebp
popf
mov
aas
and
dec
push
popa
jb
gs
sahf
loope
sbb
inc
ret
mov
imul
or
test
imul
pushf
sub
adc
adc
xor
shll
in
mov
js
add
ja
or
sub
add
mov
mov
jl
sysenter
lods
cmp
sidtl
in
xchg
enter
mov
dec
or
push
adcl
and
xchg
add
enter
nop
icebp
cmc
adc
jmp
pop
ljmp
inc
roll
repnz
cwtl
sbb
xor
jo
or
mov
mov
pop
sub
adc
mov
fists
push
xor
fimull
pop
add
add
js
or
test
addr16
cltd
adc
gs
imul
or
add
xchg
mov
ret
or
push
jmp
dec
sbb
fmull
push
add
sahf
rclb
sbb
repz
lcall
lds
mov
movsb
lcall
cltd
push
popf
pop
lcall
scas
fcoms
or
cmp
movsb
into
int
inc
and
andps
dec
pop
shll
mov
add
out
push
ret
xchg
add
add
pop
sub
test
data16
dec
add
pop
testb
or
or
xor
lock
mov
mov
mov
daa
mov
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
decl
fdivr
ficompl
call
call
call
call
ljmp
call
call
call
dec
push
into
dec
pushl
dec
dec
icebp
dec
scas
sub
iret
jnp
out
bound
test
aam
push
lods
cld
sahf
cmpsl
fnstcw
idivb
mov
hlt
sahf
out
jl
clc
mov
fs
jns
push
jns
cli
movsb
jl
dec
out
test
enter
fnop
xchg
sti
clc
sahf
cmpsl
flds
cld
sub
rolb
sbb
mov
mov
push
xor
xchg
fchs
repnz
js
addr16
out
repz
pusha
call
inc
imul
push
in
add
enter
repz
adc
and
repz
mov
data16
imulb
cmp
hlt
sahf
insb
and
push
int3
aam
ljmp
shl
push
dec
int3
ja
idivb
pop
in
out
sbb
mov
add
leave
popa
xor
push
fwait
jne
clc
xor
or
or
push
or
inc
add
sub
cmp
dec
pop
add
or
add
enter
aas
dec
test
sub
insb
inc
lcall
push
ja
mov
aas
incl
loopne
mov
not
mov
ljmp
shrl
jne
inc
mov
and
jne
cs
or
ficomps
pop
dec
or
nop
or
mov
add
es
ds
and
mov
test
inc
imul
add
adc
imul
jle
push
sbb
dec
insl
or
or
orb
or
push
sahf
mov
ljmp
or
inc
mov
popa
inc
cmove
cmpsl
mov
push
dec
popa
je
xchg
inc
push
push
addr16
xchg
mov
les
adc
adcb
push
sarb
xchg
dec
jp
xchg
rcll
iret
es
jbe
in
fldcw
add
jbe
or
xor
popa
jbe
adc
xchg
mov
dec
xchg
push
mov
cs
xchg
pushf
gs
bound
es
bound
gs
or
jae
jns
mov
sbb
imul
imul
andb
xchg
inc
mov
sub
ss
push
inc
sbb
dec
repz
jns
sbb
jo
fwait
jge
jbe
or
add
jmp
cmpsb
pop
mov
je
enter
inc
mov
inc
add
imul
xchg
pop
cmp
adc
add
ss
int
add
add
sahf
add
pusha
repnz
push
ss
or
push
aad
add
sub
sub
push
add
push
test
test
aas
rol
adc
sbb
sbb
push
add
add
mov
mov
mov
adc
adc
pop
andl
decl
and
mov
mov
mov
add
push
mov
xor
cmp
adc
mov
sti
sbb
repnz
incl
ljmp
inc
inc
inc
inc
loope
inc
add
into
std
mov
inc
test
stc
jne
ljmp
mov
pushl
daa
pop
sub
xor
cmpsl
push
pushf
rclb
xor
repz
je
mov
repz
sub
js
rorb
xor
jl
jns
xor
insb
aaa
mov
sahf
cmpsl
mov
loopne
push
dec
adc
imul
fsubrl
lock
cmpsl
test
push
aam
cld
cmpsl
stc
out
jge
push
jbe
cmpsb
push
or
adc
and
call
repz
movsb
in
es
out
repz
mov
shlb
push
sub
stc
cmp
xor
inc
fs
ds
pushf
call
sbb
inc
in
jnp
jnp
xor
xor
or
dec
mov
sahf
push
inc
push
cwtl
inc
clc
xor
xchg
cmpsl
stc
xor
cs
das
cmp
out
fstl
push
lods
es
push
in
fnstcw
inc
jo
cmp
add
imul
sub
push
jl
push
and
mov
into
and
and
lock
push
mov
mov
cmpsb
cmp
push
dec
push
fs
test
in
push
inc
and
pop
inc
pop
xor
fwait
mov
add
push
mov
adc
sbb
pop
aam
mov
add
test
cmpsl
add
addb
bound
sub
arpl
add
cs
insl
pop
int3
mov
sub
clc
add
ja
adc
mov
xor
dec
js
adc
sub
sbb
cmpsl
mov
mov
pop
jnp
adc
jo
push
mov
push
jnp
jl
add
push
sbb
adc
pop
add
or
test
hlt
pop
pop
mov
rol
out
cmp
push
mov
fisubl
mov
add
sub
and
and
in
pushf
pop
mov
inc
cmp
pop
call
sub
or
nop
add
add
nop
add
and
or
sbb
jae
fmuls
mov
repz
push
cmpsb
ds
dec
mov
repz
rcr
jmp
add
sahf
adc
sub
in
mov
push
je,pn
clc
push
mov
push
xchg
push
add
outsb
out
pushf
ljmp
insl
jne
add
js
jp
fwait
int
cs
jl
add
sbb
in
or
and
xchg
adc
stos
lock
mov
cmp
mov
xchg
pop
add
push
jmp
pushf
les
dec
xor
add
lea
mov
fwait
sbb
inc
sbb
call
sbb
sbb
push
gs
popa
lock
fiadds
je
push
and
sahf
fcmovne
mov
sbb
in
scas
cs
shlb
mov
xorl
add
inc
movl
xor
inc
dec
mull
popa
push
adc
xchg
push
mov
pop
jne
xor
sub
cmp
imul
testb
dec
jne
bound
sub
orb
push
cmp
adc
es
insb
jmp
aad
inc
inc
rcrb
addl
sbb
das
imul
scas
push
or
loopne
dec
mov
cmp
jb
daa
lods
test
pop
lcall
gs
insl
xorb
pop
or
lcall
or
push
inc
repnz
dec
dec
push
push
inc
push
in
loopne
nop
inc
or
add
sbbb
inc
insb
popa
jno
inc
xchg
jg
push
rorb
xchg
daa
dec
push
jo
imul
or
cmovl
push
popa
push
movl
push
pop
inc
and
imul
imul
lock
outsl
daa
enter
cmp
insl
aad
xlat
pop
js
imul
pop
scas
cli
sbb
adc
or
jmp
push
sub
xor
pop
cmpsl
pushf
inc
cmpsb
cltd
jl
dec
lea
fdivs
ljmp
jle
mov
cmp
adc
adc
inc
push
mov
dec
pop
stc
pop
sbb
les
aam
xchg
adc
mov
add
pop
subb
mov
mov
fdivs
jo
mov
or
add
dec
push
lea
fisttpl
add
cmp
push
push
call
or
sbb
das
imul
test
test
mov
fiaddl
mov
sub
push
pop
fiaddl
or
loop
xlat
lock
push
clc
adc
popf
lods
mov
sub
or
sbb
xor
sub
sbb
push
jge
dec
dec
jne
out
lcall
jge
push
lods
add
hlt
aad
es
push
add
adc
or
mov
les
add
mov
mov
lds
dec
shll
adc
dec
shll
sbb
and
shll
sub
inc
ret
scas
xchg
mov
add
push
pop
push
enter
push
movl
daa
ja
sbb
dec
in
dec
dec
xchg
inc
clts
fisubrl
sbb
sahf
add
testl
mov
cmp
mov
sbb
add
sbb
or
je
push
mov
sbbb
ja
scas
add
and
arpl
test
add
pop
loopne
lods
mov
mov
mov
jmp
mov
adc
push
push
adc
mov
jp
or
sub
adc
inc
sbb
js
push
jns
lcall
add
fwait
add
mov
pop
cmp
jg
sub
sbb
leave
push
loopne
hlt
jmp
or
nop
adc
aas
ss
mov
adc
mov
or
push
iret
scas
adc
mov
push
pop
lods
pusha
cmpsb
test
call
pop
test
mov
jecxz
leave
inc
xchg
cmp
cmp
rorb
and
dec
jmp
mov
pop
cmpsl
sub
xlat
pop
pop
fsubr
fsts
test
mov
cmpsb
dec
rol
dec
mov
iret
adc
or
cltd
mov
lea
int
dec
jmp
test
pop
pop
push
les
aas
mov
adc
cmpsl
or
inc
cmpsl
ja
pushf
and
sahf
sub
jae
mov
pmaddwd
rcl
push
pop
loop
dec
xchg
sub
lea
mov
inc
mov
xchg
fdivs
out
inc
movsl
and
out
pop
push
pop
pop
and
mov
lods
mov
popa
in
aam
and
xchg
outsl
push
or
lock
pop
fstl
es
mov
mov
adc
movsb
inc
adc
dec
or
cmp
push
sub
rorb
push
sub
leave
in
bound
jle
or
movsl
push
and
shl
pusha
xchg
test
neg
xchg
inc
inc
push
xor
ret
ja
add
rcl
daa
mov
jg
pop
rcrb
out
xchg
jno
imul
decb
and
and
decl
cmp
fidivl
add
push
popa
sbb
add
ja
sarl
jb
sbb
inc
push
adc
imul
or
movsb
dec
pop
xchg
outsl
pop
mov
les
xchg
test
xlat
int3
ljmp
shl
in
push
roll
and
sti
push
test
sub
test
cmp
out
adc
inc
push
adc
cmp
xor
inc
or
mov
jge
cmp
sbb
mov
je
test
add
movsl
in
sub
cmp
sub
xor
push
mov
sbb
inc
adc
or
push
out
or
push
nop
addr16
or
dec
xor
or
add
mov
sbb
enter
test
add
ljmp
enter
daa
add
pop
or
mov
in
cmpl
xor
mov
fildl
xchg
and
addb
or
cs
in
les
lea
ds
or
hlt
sbbl
or
fcompl
rorb
daa
cmpl
cmp
sub
adc
inc
test
iret
cmp
mov
cmp
mov
shll
das
push
jl
or
sub
sub
sbb
lock
cmpb
rcll
jae
push
jno
decb
js
push
push
sbb
cmp
gs
xor
and
jo
test
cmpsb
mov
daa
repz
pop
sbb
es
pushl
mov
dec
in
mov
iret
cmpb
inc
dec
jne
push
imul
cmp
pop
test
mov
and
call
cmp
divb
popf
or
push
cmp
fbld
pop
and
cmp
ds
dec
mov
subb
pusha
sbb
cmp
sbb
sbb
pop
fisubl
sbb
xor
or
pop
xor
xchg
jbe
imul
push
jo
pusha
adc
push
push
insl
call
lock
xchg
outsb
jae
push
push
pop
inc
cmp
and
adc
dec
loope
ret
jmp
add
sub
or
sub
push
imul
xorb
push
inc
stos
add
or
test
movsb
inc
outsl
fucomp
xchg
movsl
cmp
test
sub
sub
push
xor
add
shrb
sub
lock
or
imul
fdivs
test
mov
jmp
sbb
push
xchg
imul
or
adcl
jo
jl
mov
mov
shrb
and
pop
adc
inc
scas
or
xchg
push
push
pop
fmuls
out
test
jne
push
fs
sbb
data16
or
and
test
dec
cmp
jne
cmp
push
popl
pop
ret
shrb
fnsave
jge
mov
sub
mov
stos
insb
mov
mov
fwait
cmp
push
nop
cmpsl
es
inc
imul
stc
cmp
mov
lea
inc
inc
movb
pop
mov
sbb
ficompl
jmp
sti
cmp
je
jmp
loopne
fistps
jmp
mov
out
movsl
ret
adc
pop
out
add
mov
xor
cmp
mov
das
pop
sbb
out
mov
adc
add
enter
mov
sbb
adc
or
in
loopne
and
mov
mov
cmovae
mov
test
xchg
push
add
cmp
std
push
loop
cmp
mov
aam
cmp
inc
jmp
fcmovnb
ds
push
and
jmp
pop
fmull
mov
push
inc
cmpsb
das
nop
sub
test
xchg
loopne
iret
sbb
push
push
push
cmp
out
pop
nop
lods
sbb
fistpll
and
ficoms
inc
pop
sbb
pop
fdivs
mov
sahf
xor
dec
ficoml
ret
dec
out
dec
test
in
xor
lret
aaa
add
into
jmp
mov
or
stos
xor
cmp
mov
xor
js
or
mov
fistpll
fs
loope
rorl
inc
push
ret
adc
adc
in
sub
mov
mov
ljmp
push
xchg
sub
lea
js
test
jno
sub
lock
xchg
cmp
mov
mov
push
xor
sbb
mov
fwait
jmp
inc
and
and
and
in
fcomp
add
jns
sub
imul
in
imulb
push
push
insl
pop
sub
rclb
add
jmp
pop
xchg
dec
scas
dec
adc
or
pop
sub
inc
jne
or
enter
scas
inc
pop
push
nop
push
dec
insb
push
arpl
push
aas
loopne
and
ss
loopne
xchg
in
insb
cltd
ret
cmpsl
rol
cmp
inc
pop
sbb
fmull
mov
filds
mov
mov
daa
jbe
and
mov
popf
add
xchg
jecxz
in
sub
lea
movsb
mov
jl
xchg
bound
mov
adc
inc
lods
mov
push
and
mov
cmpl
sub
sub
enter
das
dec
push
dec
jmp
inc
mov
test
pop
mov
inc
mov
ljmp
mov
push
dec
sub
add
mov
add
pop
dec
ja
divb
dec
push
sbb
dec
fistps
test
xorb
push
xchg
adc
dec
pusha
jno
aad
mov
stos
pop
ror
adc
into
push
ljmp
mov
mov
add
mov
adc
adc
adc
xchg
sub
mov
clc
mov
aaa
ds
cmpl
incb
or
add
xor
fstps
das
clc
fbld
in
movb
adc
sbb
pusha
mov
hlt
lahf
and
pop
xor
and
ret
pop
movsb
inc
andb
xlat
lret
movsb
clc
lcall
or
or
cli
jmp
and
or
loop
mov
je
or
stc
mov
test
rclb
and
fdivs
fsin
arpl
mov
pusha
jno
outsl
je
test
mov
cmp
sbb
fists
add
ret
cmp
aas
inc
and
or
xor
lcall
sbbl
cmp
pop
pop
mov
add
jo
mov
sub
cmp
sub
push
adc
sbb
cltd
or
xchg
aaa
shlb
push
and
jb
xor
pop
and
mov
cli
hlt
push
and
cmp
rcrb
sbb
jae
mov
in
arpl
mov
call
xor
nop
mov
adc
cmp
je
mov
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
adc
pop
dec
sbb
sbb
pop
sub
xchg
push
enter
lcall
cmp
arpl
je
mov
mov
inc
cmp
jge
mov
je
add
add
and
inc
addl
test
push
mov
xchg
xchg
je
cmpb
or
pop
test
push
or
js
jo
lock
push
pop
inc
rol
mov
insb
pop
sbb
cld
push
lock
cmpsb
xchg
je
aas
jnp
loop
fs
and
dec
iret
jmp
ja
and
mov
mov
fcomps
es
or
push
sar
push
inc
mov
imul
mov
dec
enter
push
aaa
sub
out
popa
add
pop
dec
pop
mov
pop
in
jmp
inc
repz
pop
inc
pop
fs
xchg
sub
jnp
add
cmc
sub
or
lea
lods
jo
mov
mov
adcb
jge
leave
mov
outsl
xorb
lret
or
add
push
fistps
imul
or
roll
push
es
inc
lret
inc
icebp
cmp
ret
dec
adc
cmp
int3
lss
in
mov
ja
outsl
cmc
dec
adc
add
push
sub
andl
dec
or
movntq
out
dec
mov
pusha
hlt
xchg
and
push
adc
cmpsb
cmp
adc
or
xchg
jmp
cld
inc
rorb
nop
adcl
add
add
fcmovnu
jg
jmp
cmp
je
mov
test
jbe
push
adc
inc
lcall
cmp
push
or
inc
fsts
aaa
and
popl
fdivs
cmp
cmp
mov
je
cmp
or
dec
loop
cmpsb
pop
sbb
add
popa
or
sbb
adc
mov
test
in
add
test
ror
shlb
xor
js
and
mov
je
or
push
jl
add
mov
es
inc
das
pop
mov
int3
xchg
aam
cli
inc
mov
and
mov
lret
pusha
ss
pop
aaa
push
fdivs
int
and
in
push
scas
add
sub
lret
stos
pusha
xor
add
xchg
sub
push
adc
sbb
add
sbb
cld
fs
mov
inc
add
mov
mov
mov
mov
add
push
and
nop
addr16
or
or
jo
mov
jne
sahf
dec
sbb
and
adc
push
scas
addr16
out
idivl
or
mov
add
mov
inc
aam
mov
lahf
jo
inc
and
add
popa
cmpl
dec
fistpl
cmp
jp
nop
add
ficoms
int3
out
ss
push
xchg
adc
inc
and
or
or
cmpsb
jno
inc
dec
mov
xorl
fdiv
scas
je
sbb
xchg
jne
cmp
mov
push
add
sbb
stc
inc
jo
xchg
jb
push
xchg
xor
sbb
sbb
aas
add
out
inc
or
mov
mov
xlat
orb
mov
je
mov
ss
jl
imul
pop
push
lcall
mov
aad
je
cmp
ljmp
inc
bound
sbb
jo
iret
sar
xchg
movb
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
jbe
pop
dec
mov
out
xor
adc
ss
push
add
ret
sbb
sbb
or
add
test
sub
add
cmp
cmp
cmpsl
push
gs
inc
mov
rcll
and
test
sub
xor
shrb
je
push
add
and
mov
std
dec
add
pop
ret
jae
ficoml
dec
push
pop
xor
inc
out
add
test
nop
mov
sarb
test
imul
inc
js
fstpt
or
xchg
shr
aaa
add
rcr
and
pop
dec
test
pushl
push
cmpsb
cmc
mov
cmc
lds
push
insb
xchg
push
add
shrb
push
mov
ret
hlt
pop
or
xchg
fcomps
test
adc
sbb
push
orl
and
test
incl
push
cmp
out
lahf
push
mov
inc
or
mov
push
cmp
mov
ret
shl
pop
add
pop
push
mov
xor
or
ds
fdiv
mov
push
xor
push
sbb
std
mov
rorl
fldl
or
mov
inc
daa
dec
dec
push
jo
sub
inc
dec
xchg
aaa
xlat
cmp
std
js
arpl
push
loope
sub
int
xor
in
pop
or
push
and
nop
xor
loope
cmpsl
sub
push
leave
rclb
jle
jne
aas
pop
sahf
xchg
mov
pop
jmp
cmp
clc
jne
add
adc
push
imul
pop
test
and
xchg
xor
nop
jno
shl
jne
cmp
inc
loopne
xchg
mov
xor
je
les
push
out
pop
lods
xor
out
ret
bound
mov
ret
cs
inc
and
pop
shrb
sbb
jb
inc
dec
push
push
dec
test
ss
push
inc
or
test
pusha
inc
or
cmp
and
inc
fs
dec
enter
xchg
or
stc
jb
inc
jbe
das
sbb
cmp
jne
xchg
dec
jne
push
mov
dec
and
push
push
imul
push
cs
mov
xor
cmp
mov
mov
pop
or
lret
inc
add
add
or
iret
dec
and
push
push
xchg
mov
push
add
test
adc
cmp
mov
mov
cmp
adc
cmp
sete
mov
loopne
push
cmp
mov
fisttpl
cs
out
movsb
mov
push
adc
adc
push
pop
fadd
dec
add
or
mov
mov
dec
mov
mov
imul
push
in
jne
mov
shlb
xchg
jg
pop
les
adc
pushf
inc
xor
mov
push
sbb
inc
dec
fists
das
pop
dec
xor
pop
pop
loope
das
rolb
mov
mov
roll
mov
lret
inc
fcmovnu
mov
dec
push
xchg
dec
adc
add
push
inc
or
fwait
cmp
xorb
xlat
adc
pop
std
inc
adc
pop
sub
das
add
push
and
push
jp
sarb
mov
push
fdivrl
mov
add
dec
push
dec
push
adc
mov
shll
push
aam
fisubs
in
cmp
cli
clc
dec
and
ja
cmp
mov
push
bound
xchg
lds
add
mov
cmp
mov
lds
sti
ffree
es
xchg
pop
adc
aam
or
outsl
lretw
enter
pusha
stos
arpl
or
cmpsl
pusha
test
stos
rolb
test
inc
dec
cmp
mov
addl
cmpl
dec
lret
outsb
dec
add
popf
dec
clc
adc
dec
dec
mov
mov
sub
xor
das
ljmp
adc
and
adc
sbb
pop
setbe
mov
lea
inc
push
adc
mov
lahf
jne
sbb
sti
add
jno,pt
subb
mov
add
sbb
adc
pop
push
add
hlt
hlt
pop
jne
inc
ds
mov
fcoms
add
add
addl
mov
test
add
or
lret
jg
fcoms
mov
mov
push
test
inc
xchg
sbbb
fiadds
mov
enter
sub
dec
or
fsub
andb
mov
push
ret
jns
sub
pusha
imul
pop
or
mov
mov
repnz
popa
fadds
flds
mov
andl
daa
fmul
aaa
lret
mov
dec
push
es
pop
or
mov
pop
mov
cmp
je
add
lret
jg
sbb
mov
addb
adc
rolb
jae
call
sub
xor
inc
mov
mov
sbb
loopne
movsb
push
add
xor
add
xor
sbb
push
push
mov
adc
mov
nop
add
xchg
ss
jl
ret
lcall
sahf
or
or
lret
adc
or
or
adc
test
add
adc
int
pop
pop
jecxz
pop
outsb
leave
add
push
jo
pop
nop
shlb
jle
xchg
bound
sbb
push
cmp
xchg
mov
add
loope
jle
or
push
cmp
je
mov
test
popa
push
jae
mov
sub
mov
dec
push
mov
and
testb
je
or
or
je,pn
test
ja
push
sub
push
addr16
or
push
rcll
jle
ljmp
iret
lods
sbb
inc
sub
jb
mov
push
jmp
inc
pop
adc
or
cli
push
push
sbb
inc
dec
or
add
gs
xchg
sbb
cmp
xor
inc
mov
xor
add
mov
or
add
rorb
das
cmp
je
jmp
int
push
xor
dec
in
adc
fldcw
pushf
mov
adc
je
mov
in
dec
rcll
or
pop
push
add
mov
lods
mov
in
mov
cmpsw
es
cmp
lock
mov
jo
add
mov
lea
push
ja
push
xor
mov
imul
jg
adc
addb
lret
and
sub
sbb
pop
cmp
pop
shrb
push
pop
test
test
icebp
sub
xor
aaa
repnz
or
mov
movb
ja
rcrb
add
push
push
ja
es
imull
cmp
orb
push
dec
push
jecxz
cs
push
lret
in
push
or
movsl
sbbb
add
mov
xor
adcb
sbb
call
aam
aas
or
mov
xchg
cmp
shufps
dec
and
and
mov
and
cmp
and
imul
and
pop
pop
xchg
push
pop
xchg
or
pusha
mov
ss
cmp
data16
inc
inc
push
pmaxsw
lahf
dec
cmp
mov
fsubr
cmp
out
aas
iret
enter
ret
lahf
jo
adc
test
rcll
sub
daa
jl
sbb
addr16
insb
mov
inc
fmull
push
pushf
xor
nop
mov
mov
das
mov
mov
aaa
imul
addb
cmp
dec
lock
je
jp
xchg
loop
push
cld
xchg
dec
push
adc
adc
and
adc
mov
or
fcmovbe
add
sahf
notb
mov
stc
mov
adc
jae
shlb
inc
fsubl
or
adc
loope
cmpsb
jo
pop
jle
dec
sbb
sub
cmpb
mulb
push
inc
and
cmp
or
in
inc
fsub
xor
pop
pop
mov
mov
jne
push
sbbl
adc
shl
ja
jle
jg
pop
imul
call
outsb
shl
adc
dec
xor
add
jge
mov
nop
aas
jle
or
pop
mov
lea
push
and
orb
and
hlt
and
jg
adc
xchg
pusha
stos
cmove
mov
push
rolb
aaa
incb
inc
pop
inc
ret
and
loope
add
pop
or
pop
clc
cmp
add
cmpb
jne
sarl
jne
sbb
mov
xchg
lret
pusha
icebp
cmovo
inc
jp
mov
pop
cld
add
push
popa
and
dec
es
flds
push
pop
and
clc
mov
fwait
sbb
jecxz
fs
mov
and
arpl
push
popf
gs
dec
xor
jns
and
add
push
orb
pop
dec
jb
daa
shr
and
psrad
mov
jl
mov
jae
jnp
push
and
push
aam
aas
mov
or
pushl
sbb
imul
push
js
push
dec
dec
lret
push
aam
ja
xor
lret
add
les
in
mov
add
pop
fildl
cmovle
mov
lock
add
lock
lahf
add
jbe
iret
fcoms
xor
mov
dec
adc
dec
or
dec
lret
lret
hlt
lock
ja
ljmp
cs
pop
in
call
push
fsts
add
inc
xchg
adc
jle
dec
jecxz
outsl
xchg
sbb
arpl
sbb
or
stos
jbe
pop
ficoml
scas
and
mov
imul
ss
pop
adc
call
jmp
in
fmull
fildl
fsubp
call
mov
adc
jle
adc
mov
push
fucomp
adc
sarb
mov
add
mov
fmul
clc
daa
pop
sub
inc
add
jo
push
inc
adc
push
cwtl
jl
mov
push
insb
push
mov
cmp
add
scas
mov
push
daa
imul
or
add
and
push
add
cmp
lds
out
into
and
cwtl
or
pusha
mov
mov
jp
cli
shl
roll
cmp
jne
add
inc
fcoms
pushf
rcl
pop
inc
push
sbb
adc
cmp
lock
aaa
sbb
ficomps
lea
ljmp
imul
inc
cmpsb
sub
mov
cmpsl
mov
xchg
mov
aas
sub
cwtl
add
add
xorb
or
outsl
inc
shlb
push
or
add
inc
inc
mov
mov
mov
xchg
dec
mov
xor
pop
add
mov
mov
fsubrs
xchg
pop
pop
loopne
cmp
enter
or
inc
mov
pushf
add
push
pusha
adc
jmp
or
push
adc
adc
mov
ret
mov
or
cmp
push
mov
out
pop
mov
cmp
mov
call
inc
loopne
in
movsb
jne
testb
addl
add
sbbl
xchg
sbb
mov
sbb
ljmp
inc
pop
es
les
pushf
out
cli
in
outsl
or
rorb
lret
mov
push
notl
loopne
adc
pop
mov
xchg
sbb
jo
js
pop
je
cmp
jnp
inc
add
add
je
mov
xchg
sbb
sbb
jb
and
loope
sub
sbb
sahf
je
or
adc
mov
les
and
aad
aaa
adc
ficomps
mov
xor
mov
sbb
pusha
xor
mov
int3
jb
loopne
in
xor
mov
xor
xor
xchg
nop
shrb
test
test
or
adc
cmp
add
mov
inc
inc
hlt
xor
pop
loopne
pop
psubsw
inc
rcr
inc
bound
aas
add
xor
push
pop
mov
cmp
es
xchg
cld
lea
xchg
xchg
leave
jle
faddl
mov
push
jb
call
fnstenv
sbb
and
pop
les
out
enter
and
ret
in
xor
bound
sub
sbb
inc
jo
les
inc
lsl
js
or
xor
push
adc
add
js
jne
or
pop
sbbl
imul
ja
jecxz
mov
data16
mov
jbe
xor
shrb
jmp
sarl
clc
nop
loopne
mov
loopne
iret
dec
sbb
inc
outsl
inc
xchg
jmp
inc
jbe
adc
cmp
and
adc
sbb
xor
dec
xorl
ljmp
push
loope
and
lea
add
ret
les
test
push
and
les
xchg
mov
rcrb
je
int3
pop
add
jns
jno
iret
sub
mov
pusha
aas
ret
xor
push
pop
movsb
inc
or
sar
mulb
sbb
aam
hlt
mov
sub
filds
outsb
bound
sbb
popa
pop
ds
mov
cltd
xor
xchg
imul
sarb
popa
ja
add
or
xchg
or
les
xchg
push
loopne
test
inc
int3
test
add
and
push
subl
jle
cmp
push
je
push
add
imul
rolb
mov
mov
lock
push
pop
stos
shlb
insb
pop
rorb
sarb
adc
xchg
daa
daa
fistps
sub
sub
or
dec
or
jp
ret
and
push
fnstsw
cmp
sub
fstl
mov
or
cmpsl
mov
sub
jge
push
pop
addl
or
lcall
sub
push
add
push
or
mov
or
adcb
ds
dec
inc
xor
adc
sbb
xchg
mov
scas
mov
mov
mov
jnp,pn
mov
mov
add
mov
mov
inc
jae
addr16
inc
push
stc
inc
jmp
add
sub
fwait
mov
and
sbb
and
scas
dec
jp
dec
and
and
sahf
loope
pop
xor
push
mov
pop
mov
icebp
push
push
mov
push
jne
mov
sbbb
cmpb
and
aas
lahf
mov
add
aaa
cmp
addb
out
mov
fs
xchg
pushf
jne
faddl
pushf
add
loope
jg
jb
divl
cmp
es
and
fmuls
or
sub
ja
add
bound
inc
dec
sub
push
mov
aaa
pop
jmp
ret
addl
dec
pop
dec
add
in
sub
clc
notb
jle
push
jmp
xchg
fisubrl
incl
and
adc
inc
sbb
push
and
or
aaa
enter
int
mov
cmp
cmc
sub
cmp
lock
adc
and
orl
pusha
mov
ror
rolb
lock
inc
dec
in
or
lods
or
mov
or
dec
test
add
jmp
aaa
mov
jge
outsb
clc
jbe
cmp
and
rolb
ja
in
pushf
or
mov
mov
loopne
xor
xor
mov
mov
inc
ret
push
sbb
mov
mov
xor
cld
push
mov
pop
or
insb
ja
sbb
xor
adc
add
test
or
add
push
xchg
add
or
jl
push
xchg
loop
mov
lahf
pop
aam
inc
dec
xor
cltd
sub
mov
mov
cmp
and
jnp
pop
insb
mov
and
sbb
adc
xor
mov
inc
cmp
sbb
sbb
xchg
mov
cmp
mov
push
dec
jp
loopne
sbb
in
fmuls
or
ret
testb
cmpw
fiadds
dec
jle
and
and
imul
pop
or
cli
movsb
arpl
aam
and
jae
push
or
dec
mov
iret
roll
lahf
sub
adc
pop
add
adc
fcomps
push
insl
xor
clc
fiaddl
mov
sbb
mov
imul
adc
mov
fst
dec
fwait
mov
lods
inc
dec
jl
addr16
xchg
jmp
or
push
add
add
ffree
gs
dec
inc
cs
cmpsb
cmp
dec
or
dec
cmp
jp
orl
mov
rorb
or
pop
ret
fucomi
rcll
mov
add
rolb
and
sub
lahf
add
mulb
sbb
outsl
and
push
movsb
adc
fiaddl
mov
fadds
xor
or
popa
fs
fs
cmpl
push
shll
movsb
test
imul
mov
call
dec
or
pop
xchg
pop
stc
mov
xor
loopne
cmpsb
add
and
sub
mov
call
and
xor
push
sbb
lock
inc
and
mov
pop
fmuls
leave
test
adc
sub
stos
jmp
out
lds
jo
outsl
enter
add
add
rcrl
pop
xchg
mov
sbb
mov
or
ret
xor
mov
add
jo
dec
and
and
dec
not
les
pusha
out
add
inc
sbbb
push
rorb
mov
outsl
xchg
mov
stc
jle
jg
or
je
push
lock
push
rorl
adc
adc
imul
xchg
xchg
dec
push
dec
or
dec
aaa
loop
jecxz
je
mov
pushf
adc
adc
sbb
inc
sbb
add
loopne
and
or
jmp
push
jne
add
and
push
mov
je
pushf
pop
push
inc
cmovae
push
loop
nop
mov
xlat
jl
rol
push
xlat
pop
insb
cmp
pop
jmp
cmpl
insl
cmpsb
shlb
icebp
and
jo
repnz
aas
xchg
sbb
popa
pusha
mov
or
xchg
jo
ret
or
sub
inc
push
mov
add
loop
aam
sbb
andl
movsl
push
cmpsl
jl
push
aad
mov
or
push
lar
or
or
pop
xlat
lcall
mov
xchg
lock
popf
cmp
pop
out
pop
into
xchg
push
sbb
in
pop
or
xchg
mov
mov
hlt
and
insb
ret
leave
rol
outsl
das
adc
iret
ret
mov
das
xor
inc
pop
and
push
daa
dec
daa
or
add
add
aad
ret
xor
jp
inc
mov
sbb
mov
ljmp
xor
loopne
insl
pop
push
ret
mov
sbb
or
pop
and
push
xor
imul
dec
bound
or
lock
nop
push
sub
insl
jno
mov
cwtl
hlt
or
dec
dec
push
adc
mov
add
push
cld
inc
push
mov
lcall
pop
lcall
popf
rolb
dec
xchg
dec
add
push
xor
sub
sub
dec
and
lock
add
xlat
fimull
mov
stos
popw
inc
arpl
test
mov
daa
pop
and
jmp
cld
int3
popl
imul
inc
outsl
mov
and
sub
add
fnop
push
sub
sarb
movsl
ljmp
add
adc
cmpsl
xor
cmp
sbb
mov
sbb
and
push
inc
cmpsb
sub
adc
and
and
insl
std
loope
mov
cmp
jno
dec
inc
movaps
sbb
mov
push
out
insb
cmc
push
xor
lea
push
and
leave
sarl
sub
inc
jb
pop
xor
pop
leave
or
cwtl
sti
push
shlb
push
or
out
movsl
fld
popa
dec
dec
push
aaa
xor
inc
pop
inc
push
cwtl
push
xor
xor
xchg
popf
sbb
jo
daa
xchg
fcoml
js
sbb
adc
mov
fisubl
lret
push
xchg
addb
jmp
sbb
fsubl
leave
mov
inc
aaa
decl
add
fldl
fcompl
add
fiadds
xor
or
dec
pop
push
mov
icebp
xorb
dec
mov
push
xor
dec
jg
mov
add
and
cli
sbb
add
jns
mov
cwtl
js
push
add
insl
cmp
push
add
jnp
test
lock
sub
sub
fisubs
sub
nop
xor
xor
out
jns
jl
xor
and
std
mov
push
outsb
ret
add
inc
sub
fnstsw
js
dec
je
add
jmp
bnd
in
fcoms
int3
pop
pop
add
popa
xchg
aaa
push
sbb
pop
mov
insb
inc
arpl
stos
push
cmp
out
data16
push
dec
push
cwtl
call
fcoml
cwtl
popa
test
inc
fiaddl
shll
sbb
loopne
pop
sar
arpl
or
lret
add
mov
or
fwait
mov
add
mov
jne
outsl
repz
shlb
jo
xlat
add
and
pop
adc
das
lods
andl
aam
popa
sbb
mov
or
xchg
rolb
inc
dec
aaa
mov
cli
movsb
and
adc
adc
cmp
jb
push
rclb
sub
ret
inc
jmp
adc
nop
es
out
sub
push
or
jne
xor
mov
dec
cmpb
jo
mov
jnp
lea
push
inc
sbb
push
stos
mov
mov
mov
push
mov
pop
loop
sub
call
jmp
test
imul
cwtl
dec
fiaddl
xorl
push
addl
add
insl
mov
mov
xor
inc
mov
pop
ja
imul
xor
bound
mov
inc
or
xchg
mov
sbb
jb
mov
es
and
dec
mov
ffreep
subl
inc
cmp
add
test
or
inc
jl
adc
orl
sub
rclb
movsl
sub
roll
mov
imul
and
lret
inc
mov
jo
mov
or
inc
sbb
aam
ret
pop
ud2
adc
pop
cmp
xchg
inc
movb
lock
dec
lea
mov
lcall
add
js
mov
movhps
leave
add
xor
jl
jmp
in
mov
movsb
cmp
adc
pop
rcrb
pop
daa
add
outsb
push
les
cld
sub
jo
inc
lods
and
enter
dec
add
xchg
hlt
sbb
add
dec
popa
in
inc
dec
pop
add
jmp
jl
cmp
loop
mov
lahf
cld
insb
shrl
add
inc
sbb
hlt
or
addb
or
ret
add
inc
iret
hlt
push
sub
and
rolb
in
pop
mov
pop
jp
push
loop
test
adc
adc
dec
mov
aam
add
jl
pop
mov
out
pop
push
mov
cmp
pop
jmp
jb
and
pop
push
mov
addb
ds
pop
daa
outsl
cmpb
inc
setg
jmp
das
cmp
dec
dec
inc
add
cmp
setle
xor
movsl
imul
dec
sbb
dec
roll
adc
cld
or
xchg
xchg
mov
mov
or
mov
add
lret
push
test
sbb
sbb
sti
mov
mov
popa
ljmp
or
stos
repz
adc
lods
dec
lock
mov
xchg
sbb
xchg
enter
and
enter
imul
push
sub
aaa
pop
out
pop
jo
dec
imul
loope
int
add
subb
mov
loopne
rolb
jmp
aaa
pusha
enter
jmp
xorl
bndstx
es
mov
or
xchg
pushf
std
or
xchg
lret
and
xchg
mov
call
aaa
lock
add
in
call
popf
movb
rolb
imul
out
mov
or
orl
jne
icebp
adc
jecxz
ret
cmpb
dec
sub
aaa
mov
add
jb
sub
xchg
mov
cmp
xchg
cmc
inc
add
pusha
or
pop
xchg
loope
add
push
mov
lock
scas
push
repz
push
or
push
cmp
jbe
iret
bound
mov
adc
jle
sub
mov
mov
lods
or
fs
add
jmp
push
mov
rcll
jmp
clc
xor
mov
fstpt
imul
cld
mov
mov
dec
cmpl
dec
lods
mov
pcmpeqw
movsb
cs
dec
inc
xchg
and
cli
add
xchg
push
imul
jnp
jg
sahf
stos
push
sub
sbb
jnp
sub
insb
insl
and
inc
stos
aam
xchg
sbb
cmpsb
test
adc
fidivrl
hlt
fldl
push
pop
addl
or
sub
out
sbb
subl
dec
cli
sbb
cmp
jne
xchg
call
jmp
movsb
pusha
test
cltd
pushf
add
mov
mov
fildll
jg
push
mov
scas
bound
inc
sbb
or
dec
or
dec
push
cmp
aas
fldt
add
cmp
jge
push
add
mov
and
add
cmp
cmc
xchg
xor
leave
pop
clc
dec
or
or
inc
push
hlt
pop
jnp
sub
int
cs
shl
test
pop
adc
cmpsl
jne
aaa
add
test
add
push
and
sub
push
cmp
dec
test
lock
fcomps
pop
cmp
sbb
cmp
jne
push
add
rcl
sti
push
add
push
adc
mov
pop
sub
cmpsl
sbb
add
adc
push
ds
pop
xor
sub
xor
test
xchg
xchg
daa
stc
xchg
mov
dec
pop
imul
cmpsl
cli
les
add
push
add
push
xor
int3
cmp
pop
cmc
jb
js
pop
and
xor
in
je
nop
and
jbe
adc
gs
pusha
jmp
shr
nopl
jb
jnp
scas
mov
pop
push
imul
test
pusha
push
out
lods
mov
ffreep
call
ffreep
push
mov
adc
std
jne
and
imul
fiadds
cwtl
mov
sub
xchg
sbb
cmp
xor
test
or
adc
xchg
lret
mov
and
mov
xor
sub
sub
imul
cmpb
mov
xor
xor
add
jns
outsl
push
in
and
mov
mov
push
test
add
sbb
movups
add
inc
adc
inc
cli
rcrl
aas
adc
mov
pop
enter
rclb
or
dec
mov
sarb
ret
pop
mov
adc
lret
add
clc
xor
mov
fucomi
mov
inc
pop
pop
xchg
xor
sbb
lcall
into
jg
push
mov
rolb
test
push
movsl
sarb
insb
aas
clc
lret
clc
dec
xor
dec
add
pop
call
sarl
xor
inc
mov
sahf
movsb
popf
movsb
sbb
jae
pop
push
xchg
jne
mov
mov
lcall
mov
inc
shrl
js
lret
rorl
cwtl
mov
xor
fs
cmp
jne
inc
adc
pop
jecxz
mov
insb
mov
xchg
sbb
xor
dec
ss
xchg
xor
mov
pop
insb
idiv
mov
aas
jmp
mov
sbb
fadds
jae
pop
or
lods
adc
mov
sub
arpl
and
fld
imul
inc
pushf
pop
cmp
jle
cmp
lods
jmp
imul
and
dec
sti
fbstp
leave
je
add
sbb
aas
inc
jmp
sahf
cltd
mov
mull
xchg
call
inc
dec
sub
cmpsl
je
loop
sbb
mov
outsl
popa
inc
add
or
add
fdivs
xlat
add
test
mov
test
cwtl
and
sub
daa
push
pop
sbb
sbb
dec
cmp
and
pusha
insb
fimull
into
or
rol
push
js
xchg
push
filds
orl
aam
aam
inc
cmpsl
push
bound
cmp
nop
lret
adc
sub
and
add
inc
jp
adc
ret
mov
add
pop
aaa
and
or
pop
not
ret
sub
je
orl
lods
movsb
mov
mov
push
sub
cmp
popa
mov
push
cmpsb
std
mov
adc
addb
hlt
aam
xor
or
sbb
out
push
add
nop
je
add
or
fstl
add
sbb
daa
mov
sbb
mov
push
xor
nop
mov
pop
push
fs
inc
push
push
dec
add
push
cmp
enter
call
and
add
lods
adc
cwtl
xchg
nop
aam
testb
sub
pop
add
rclb
and
inc
stos
test
cld
insl
adc
inc
dec
dec
push
push
sarb
sbb
add
lea
lcall
stc
jo
push
es
daa
dec
std
or
ja
mov
xchg
push
inc
je
and
add
addr16
arpl
aas
push
roll
inc
movzwl
xor
decl
push
push
out
mov
jnp
push
inc
sarb
hlt
sub
mov
sahf
nopl
lock
xchg
adc
shrb
and
jecxz
sub
add
outsb
add
adc
ret
nop
int
inc
dec
or
inc
inc
decl
push
xor
adc
push
sub
rorl
stc
pop
add
ffreep
imul
or
int3
jne
pop
and
addb
dec
mov
add
int
or
out
cmp
fists
sbb
mov
adc
lods
mov
les
jne
inc
dec
out
and
mov
lea
mov
or
jnp
add
push
loope
pop
aaa
loop
lods
sub
cmp
jecxz
clc
clc
cmpb
mov
popa
jne
sbb
mov
xlat
lea
or
xchg
mov
lods
xorl
loop
out
jl
jnp
adc
add
lock
inc
and
pusha
xchg
je
loopne
cmp
sbb
es
ss
fsubrl
adc
mov
test
mov
rcrb
push
rcrb
fidivl
bound
outsl
test
mov
ret
mov
and
inc
int
adc
xor
cmp
rcll
or
aam
inc
std
and
sub
addr16
or
xchg
jl
pop
repnz
xchg
sbb
jecxz
fiadds
shl
fsubrl
cli
mov
adc
sbb
ss
lahf
orl
and
shrb
add
xchg
and
ja
pop
pop
ja
or
dec
arpl
test
lock
dec
xor
imul
ja
lock
movb
mov
mov
out
mov
push
call
lds
inc
mov
pop
xor
nop
cmpl
in
jg
iret
es
repnz
xchg
mov
jne
push
shlb
sbb
adc
xchg
cld
popf
or
xor
or
push
or
shll
dec
xor
cmc
xchg
rorb
daa
lds
sbb
or
shll
imul
or
cmp
je
jno
mov
inc
inc
pop
sbb
mov
dec
sbb
std
xchg
lcall
adc
dec
shlb
lock
adc
fsubrp
or
cli
movsb
sub
out
and
xchg
mov
decb
ds
pop
mov
push
xlat
loope
cmp
mov
jo
push
arpl
and
inc
filds
cmp
mov
add
test
out
or
jecxz
sbb
mov
mov
mov
sub
ja
push
sbb
pop
sbb
out
xorl
ss
andb
mov
cmp
shrb
jg
clc
lahf
push
add
push
inc
mov
xchg
sub
or
mov
pop
push
xchg
lods
push
pushl
add
and
lods
push
repz
add
jno
test
jne
push
sarb
cltd
mov
sbb
adc
or
adc
sbb
arpl
pop
dec
gs
lahf
mov
adc
push
adc
xor
cmpl
pop
pop
sbbl
rorl
movsl
pop
aad
dec
or
out
imul
sub
xor
insl
cwtl
lcall
sub
ret
call
sar
pop
test
mov
mov
xlat
test
adc
mull
jl
sub
pop
mov
jl
adc
inc
adc
test
add
adc
inc
pop
dec
xchg
mov
push
popa
xchg
movsb
pop
mov
add
add
push
cmp
mov
push
shr
adc
je
push
pop
loope
sub
adc
out
pop
jp
jo
or
adc
or
sub
ret
popl
mov
imulb
adc
sub
cmp
jmp
inc
sbb
outsb
and
test
jno
orb
loopne
inc
in
les
sarb
andb
add
test
xchg
push
mov
mov
pop
jo
and
test
jae
push
adcl
icebp
pop
mov
jmp
mov
cmp
enter
sbb
add
and
mov
sbb
arpl
jecxz
cmp
call
and
iret
dec
add
pusha
xchg
mov
or
in
push
rcll
into
pusha
int3
inc
jle
jb
add
inc
aas
jno
imul
mov
outsl
call
sbb
inc
mov
add
add
inc
xor
cmp
sbbb
sbb
push
data16
mov
mov
add
or
sbb
insl
add
mov
mov
rcr
loop
adc
adc
and
or
jno
addr16
call
xchg
cmp
jge
test
sbb
pusha
and
inc
imul
mov
xor
push
dec
mov
mov
mov
or
and
loope
inc
xchg
cwtl
call
or
xor
loope
lock
and
push
lods
sbb
inc
xor
and
movsl
scas
mov
dec
adc
orb
hlt
pop
call
loope,pn
and
mov
add
out
nop
cmp
sbb
cwtl
movl
movsl
movsl
stos
add
mov
pop
push
xor
fwait
or
stc
push
cmpl
mov
mov
sbb
call
fists
add
call
and
xlat
icebp
clc
push
lock
push
add
adcb
inc
dec
mov
and
imul
mov
pop
loopne
pusha
xor
dec
fiadds
push
gs
loope
iret
cli
inc
sbb
add
xor
sar
xor
insb
rcrb
shr
out
imul
sbb
push
pop
pop
in
dec
shll
inc
stos
lock
leave
jge
or
push
mov
add
orl
shr
in
xchg
or
sbb
xchg
popa
js
dec
unpcklps
pop
or
mov
adc
inc
fwait
inc
es
ss
or
les
pop
xor
and
sbb
push
xchg
adc
jmp
xor
popf
pop
xchg
and
jno
je
pop
cmp
sets
and
in
jno
mov
and
add
push
fiaddl
jmp
in
inc
dec
push
and
push
aad
repnz
mov
xor
dec
xchg
cmp
and
adc
add
push
sbb
or
arpl
cs
ret
add
inc
xor
clc
aam
clc
jecxz
sti
inc
add
sub
shlb
or
insl
rcrb
adc
cmpsb
mov
movb
mov
sbb
push
sti
or
push
ja
inc
or
mov
sub
sub
lcall
pop
pop
sbb
xchg
test
addr16
push
dec
push
das
pop
sbb
divps
pop
mov
and
rol
jne
or
push
adc
shll
adc
inc
iret
sarl
loope
cmpl
sbb
mov
inc
test
stos
and
xchg
xor
or
pop
and
pop
push
pop
inc
nop
daa
aas
pusha
pop
int3
test
inc
nop
inc
popf
pop
and
jg
stc
xchg
mov
add
or
xchg
and
adc
dec
and
mov
jmp
repz
std
mov
jne
scas
sbb
mov
push
mov
sub
test
dec
mov
dec
add
enter
nop
mov
cmpl
int3
fldenv
stos
shl
or
sbb
add
push
popa
cwtl
xchg
inc
mov
add
adc
je
sub
or
xor
out
jo
pop
push
stos
sbb
mov
push
sbb
rcrb
arpl
mov
or
stc
je
inc
call
loopne
adc
push
adc
faddl
sub
xchg
sub
outsl
ret
adc
inc
shll
xchg
adc
add
repz
mov
cmp
xor
xor
mov
or
adc
cs
inc
cmp
inc
pushw
dec
and
inc
mov
push
lea
ret
ss
mov
js
inc
jnp
or
pop
je
movswl
sub
jmp
sbb
add
lods
and
cmpsl
mov
andl
imul
pusha
cmpsl
pusha
sub
push
xor
xchg
rcrl
push
mov
xchg
daa
sbb
dec
cmp
clc
movb
xor
daa
mov
xchg
sub
icebp
xor
das
cld
or
xchg
pop
and
mov
mulb
js
fdivrs
mov
je
cltd
jo
jo
mov
dec
xchg
test
or
sub
test
push
imull
mov
or
and
jne
sub
add
roll
mov
sbb
add
adc
popf
inc
cmp
and
adc
test
and
in
cs
mov
shlb
push
pop
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
les
cmp
stos
mov
mov
sub
mov
pop
sarb
imul
loop
sarl
dec
pop
push
rcl
inc
pop
test
mov
mov
outsb
aam
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
dec
adc
xlat
push
hlt
jmp
fdivs
adc
cmp
xrelease
mov
xor
scas
add
cmp
rclb
or
and
xor
test
dec
rcrl
lea
addr16
pop
and
cmp
rorl
shrb
push
cs
in
adc
mov
out
stos
or
jmp
inc
insl
mov
out
sub
sub
dec
adc
pusha
add
out
xchg
outsb
xlat
icebp
xor
fiaddl
mov
daa
adc
fxch
shrb
and
mov
adc
xchg
add
test
jne
dec
jo
pusha
mov
daa
adc
adc
push
mov
fists
xor
lahf
in
je
mov
loopne
icebp
movaps
jle
push
push
pop
sub
and
mov
add
je
js
sub
sahf
mov
dec
stos
push
fstps
sbb
lea
dec
mov
xor
xchg
sbb
xor
aam
test
inc
sub
mov
add
ftst
xor
pop
loop
ja
roll
jb
les
add
xor
add
pop
push
mov
adc
or
cmp
xchg
mov
pop
inc
jmp
and
sbb
add
jnp
inc
sub
pop
sub
cmp
inc
ret
xchg
pop
cmc
push
ds
sbbl
insb
movsb
or
mov
test
imul
and
adc
int3
scas
dec
mov
or
add
or
adc
scas
test
push
and
add
mov
jg
push
dec
insb
adc
fcomps
enter
jne
movsl
mov
sbb
sbb
cmc
push
and
add
dec
sbb
mov
sbb
cmp
cmpsl
xor
mov
test
jp
jmp
daa
add
push
or
inc
shll
add
push
iret
inc
cs
jb
in
call
and
mov
and
fistpll
add
mov
push
loop
adc
push
push
setle
lea
iret
cs
mov
inc
fdivs
orb
and
sbbl
pusha
arpl
mov
xor
js
pusha
pop
das
insl
pop
out
jno
sbb
add
dec
in
xchg
or
dec
adc
xlat
add
adc
push
and
inc
ja
icebp
push
push
fldenv
adc
add
gs
xchg
jp
sti
popl
pop
aas
mov
and
outsl
dec
xor
pop
mov
or
je
adc
bound
push
cmp
add
js
pop
inc
pusha
adc
push
jbe
pop
mov
js
aaa
pop
sub
or
or
cld
stos
push
dec
jne
push
mov
or
dec
add
add
ret
lcall
push
pop
xchg
out
nop
mov
xchg
and
iret
mov
movb
or
jle
ret
in
xor
scas
or
ds
jmp
aam
insb
jge,pn
sbb
movsl
subl
test
jne
add
js
pusha
dec
mov
inc
pushl
imull
jb
xchg
cli
add
imul
into
xor
test
les
inc
data16
adc
fimull
pop
adc
ljmp
fidivrs
push
sbbb
ret
sub
jp
ret
lds
xchg
out
xchg
dec
cmp
adc
in
xchg
ret
dec
dec
xchg
xchg
invd
filds
mov
cltd
loop
adc
out
icebp
jg
inc
stos
stos
sbb
mov
cwtl
and
cli
repz
aaa
mov
xchg
mov
push
insb
mov
inc
and
push
inc
or
xchg
arpl
mov
cs
mov
xchg
xor
jno
mov
mov
jmp
test
push
or
mov
pop
das
dec
push
push
xchg
jae
xchg
test
sbb
mov
dec
ljmp
test
test
push
mov
jae
pop
push
cmp
pop
pop
outsl
divl
mov
aaa
xor
jns
andb
cmpsl
jle
scas
cmpsb
loopne
and
sub
adcl
pop
std
push
mov
push
cmp
das
in
or
into
dec
push
pop
or
push
test
mov
pop
xor
idivl
mov
adcl
into
jnp
dec
js
testb
jb
add
cli
adc
cmp
pop
shrl
jbe
rcl
addr16
xchg
jmp
stos
jne
push
adc
add
jg
mov
inc
adc
pop
ljmp
in
sbb
xor
add
je
cwtl
outsb
fsts
inc
inc
adc
movsb
xor
pop
rolb
jl
je
call
stos
jmp
or
add
push
stos
pop
or
pushf
faddl
cmp
addl
push
add
cmpl
test
sahf
push
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
mov
sbb
fildll
dec
jecxz
sub
push
adc
pop
jmp
mov
out
rcr
or
cmpl
mov
mov
add
ret
in
inc
push
mov
add
adc
daa
mov
adc
add
add
aaa
mov
pop
inc
les
pop
jb
push
cltd
dec
push
sbb
jmp
inc
shl
jae
jne
pop
iret
adc
cmpsl
movsl
cmp
sub
addb
lods
loop
pop
add
mov
mov
sti
rsqrtps
adc
int
andl
sbb
xor
test
add
sbb
les
je
or
and
push
sub
inc
sbb
les
sbbb
aam
rclb
mov
sbb
les
clc
push
mov
mov
lea
pushl
sahf
push
push
pop
outsb
icebp
and
push
and
jb
xchg
out
push
push
les
push
int
icebp
xor
sub
incb
push
dec
arpl
je
andb
lret
xchg
mov
push
push
xorl
mov
add
mov
ds
sbb
cmpsl
sbb
dec
push
cmp
mov
out
push
xchg
xor
inc
jp
add
or
and
les
je
sub
xor
inc
inc
mov
mov
xor
inc
or
adcb
push
and
mov
fwait
pop
ljmp
sub
xchg
ds
out
mov
cmc
out
add
push
inc
popf
and
test
cmp
int3
cld
lods
cltd
add
dec
lahf
or
shll
fildll
inc
mov
hlt
dec
cmp
mov
add
sarl
push
inc
sub
fildll
loopne
addr16
jg
les
add
lret
add
pushf
xchg
add
xchg
je
and
dec
negl
lods
orl
fdivs
xor
adc
pop
addr16
jbe
pushf
sub
jle
and
daa
mov
aad
imul
sub
loopne
jl
cs
push
jo
mov
negb
xorl
loopne
sbb
add
mov
mov
mov
aam
jo
ret
mov
dec
xchg
adc
and
cmp
fwait
add
mov
call
aaa
xchg
loope
push
scas
shl
or
nop
clc
jge
movsb
lahf
ret
notl
nop
cmpb
out
xor
lds
inc
jp
arpl
cmpsb
push
nop
sti
push
enter
pop
negb
sub
repz
inc
ret
pcmpgtb
xchg
push
jl
pusha
mov
loope
mov
out
pop
pop
outsl
mov
aaa
pop
xor
pop
inc
sbb
dec
addb
inc
sbb
push
push
loopne
dec
lds
push
rolb
movsl
add
dec
pop
push
in
movsb
sbb
sbb
jne,pn
push
add
dec
imul
lods
fwait
out
cli
pop
test
sti
rolb
pop
inc
je
cmp
mov
push
jmp
gs
mov
push
and
xor
add
pushl
andl
mov
or
inc
inc
orl
mov
jle
pop
dec
mov
mov
cwtl
xchg
data16
or
lahf
scas
push
or
adc
ja
es
mov
cwtl
mov
je
pusha
push
in
pop
loopne
pop
adc
inc
xor
sbb
outsl
add
and
sub
iret
cltd
cli
push
add
js
or
adc
punpcklbw
lock
out
inc
push
shufps
in
mov
fcompl
cld
and
pop
ss
leave
adc
xor
arpl
xchg
mov
xchg
adc
ror
cmpl
mov
in
add
into
cmp
adc
ss
aad
and
jo
rorb
jne
bound
sbb
jno
shll
outsl
arpl
pop
push
mov
ret
cmpb
cmp
mov
mov
cmp
xchg
sbb
and
orb
push
cmp
out
adc
fbld
add
pop
pop
mov
mov
adc
or
adc
test
je
push
ret
adcl
icebp
jo
mov
jae
adcl
andl
hlt
push
xchg
mov
je
clc
out
xor
bound
xchg
add
jmp
push
xor
inc
mov
push
sub
or
xchg
adc
addl
xor
dec
dec
add
test
cmp
pop
xor
das
outsl
test
push
fistpll
inc
daa
xchg
lods
sbbb
mov
lea
xor
je
mov
sub
clc
pusha
dec
jne
test
cli
mov
jne
repnz
in
and
mov
aam
cwtl
mov
pop
std
mov
sbbb
inc
pushl
movsb
mov
lea
sub
mov
pop
lock
addr16
or
dec
and
push
lret
pusha
push
adcb
adc
loop
je
add
cmpb
outsl
inc
dec
inc
xor
dec
jge
add
or
jmp
js
push
fimull
xor
push
and
call
cmpl
aas
xor
shlb
add
insb
dec
and
data16
and
lea
mov
ret
ret
test
jno
sbb
push
aam
loop
jne
outsl
and
jno
xchg
and
test
lcall
addr16
frstor
andb
cmc
je
jbe
popa
loope
adcb
pop
xchg
pop
imul
rcr
shlb
or
adc
cmp
sbb
dec
xlat
rcrb
stos
stc
add
or
adc
fsubr
mov
xlat
add
mov
adc
mov
add
sti
test
inc
mov
stos
scas
sub
pop
sub
insl
inc
test
sub
dec
pop
sub
rorb
sub
sub
addb
hlt
or
lahf
mov
xor
insl
mov
sub
push
clc
clc
lock
movsl
cmp
repnz
int
call
or
mov
sub
aam
mov
les
mov
inc
icebp
cmovbe
or
jl
mov
daa
mov
mov
add
and
pop
and
lret
lahf
mov
or
push
movb
mov
add
cmp
add
push
pusha
sbb
cwtl
cmovbe
adc
shrb
or
sbb
add
cs
jmp
pop
add
or
rcll
add
pop
push
dec
mov
dec
mov
inc
in
mov
mov
mov
push
repnz
push
dec
or
call
add
sub
cmp
mov
xor
out
mov
jmp
inc
push
rcr
aam
adc
sarb
dec
dec
or
cmp
push
adc
inc
movsl
cs
ficoms
push
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
mov
fmul
adc
ja
or
mov
into
adc
mov
sub
add
in
js
cmpsb
cmp
inc
leave
mov
add
lcall
pop
cmp
and
fmull
or
pop
mov
sbb
xchg
cmp
mov
sbb
dec
cmp
dec
les
sbb
push
fs
add
fadds
add
mov
adc
pusha
mov
add
and
add
js
sub
das
repnz
or
add
je
pop
pop
pop
pop
jg
pop
add
and
push
lds
dec
xchg
imul
out
xchg
test
jge
xor
xor
dec
xchg
push
add
pop
dec
add
sbb
sub
sbb
xchg
sbb
add
mov
aam
insb
sbb
unpckhps
mov
pop
xor
cmp
jns
insb
xor
lret
push
push
dec
mov
pop
rorb
adc
pusha
sub
incl
dec
shll
int3
imul
or
push
mov
sbb
xlat
inc
mov
lret
mov
jb
push
push
lock
ret
inc
pop
in
mov
add
shrb
fcom
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
sbb
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
jnp
jmp
push
mov
gs
fcmove
mov
mov
js
mov
imulb
or
fldcw
add
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
mov
subl
pop
lcall
inc
outsl
imul
fsubs
daa
adc
inc
out
mov
imul
cmpsb
lea
push
fidivl
insl
inc
cmp
sbbl
aam
cld
data16
push
xor
and
push
sub
lds
jb
sarl
pop
aam
add
and
pop
fdiv
out
hlt
aas
inc
adc
inc
inc
sub
dec
movsl
jb
xchg
dec
or
adc
call
dec
sub
push
rclb
xchg
sbbb
cmp
sbb
cltd
or
or
add
je
jno
mov
test
jo
jg
dec
mov
or
pop
nop
leave
inc
xor
les
aam
stos
or
sbb
jecxz
add
dec
push
cwtl
lds
rol
shr
aas
sbb
push
xchg
cvtps2pi
or
adc
mov
dec
mov
in
push
testl
ret
xchg
jo
js
pop
sbb
andb
add
sub
push
add
push
loop
or
cli
std
adc
or
add
adc
cmp
and
arpl
inc
dec
add
jp
inc
add
inc
cmp
inc
pop
jmp
pop
cwtl
test
xchg
adc
mov
mov
pop
stc
add
mov
inc
shll
stc
dec
sub
test
add
daa
lcall
out
sbb
mov
js
nop
ret
cmp
mov
mov
mov
jne
mov
xchg
push
mov
xorb
ss
in
fistps
imul
pop
inc
add
xchg
push
add
mov
jbe
dec
roll
cmp
add
dec
call
adc
sub
xchg
mov
outsl
imul
add
or
and
dec
popf
movsb
push
xchg
fldl
jo
adc
inc
mov
outsl
out
inc
std
cs
addb
scas
and
adc
cwtl
xchg
fildll
ljmp
sub
adc
dec
jbe
add
inc
mov
mov
dec
cmp
or
mov
adcb
or
movsb
sar
pop
clc
cli
ret
push
pop
in
jno
lahf
cmp
pop
pop
lock
xor
xchg
popa
fadds
hlt
add
add
sbb
or
scas
mov
xchg
lods
mov
divb
inc
sbb
call
repnz
mov
xchg
addr16
add
lods
cmp
push
pop
jbe
add
add
xchg
je
jmp
push
add
cmpl
pop
dec
in
sub
aaa
jge
shlb
jbe
add
pop
movsl
push
or
pop
addb
jno
in
subps
popa
jmp
add
mov
je
inc
xchg
lcall
push
mov
inc
in
add
add
add
push
pop
inc
scas
push
shl
pop
pop
repnz
fnstcw
xor
sub
pusha
cmc
pop
int
addb
rolb
xor
mov
lods
lahf
rolb
dec
xchg
dec
sub
pop
ss
gs
out
cmp
cmp
mov
int
call
or
sub
rcrb
hlt
adc
or
sahf
ficoms
movsl
jp
ret
test
and
xchg
ret
or
cmp
xchg
or
sub
cmpsl
jmp
cmpl
mov
and
std
outsl
arpl
or
xor
adc
or
lods
jle
dec
mov
jle
arpl
mov
bound
push
pop
mov
cmp
faddl
adc
loopne
shll
mov
shl
sub
mov
and
mov
daa
push
cmp
loopne
iret
lock
pop
sub
adc
adc
pop
inc
test
jp
js
cmp
sbb
pop
insl
lds
xchg
or
push
or
mov
movsl
mov
mov
mov
adcb
jne
push
mov
adc
xchg
jmp
cmp
and
adc
inc
sarl
ja
ret
push
push
shlb
les
lds
xor
mov
sub
push
mov
adc
clc
sub
mov
adc
mov
push
cld
in
movsb
dec
inc
sbb
scas
popa
loopne
call
sub
sub
add
out
or
inc
movsl
clc
jg
pusha
or
jle
mov
vcvttss2si
cmpsb
xor
push
stos
or
pop
inc
div
adc
fadds
cmp
out
and
out
inc
sub
push
mov
sbbb
mov
mov
mov
or
jl
mov
test
aaa
cmpsb
push
jg
mov
cwtl
mov
rclb
fs
arpl
jecxz
push
ret
scas
pop
fcoml
mov
cmp
add
es
or
push
js
push
jl
xor
xor
sub
or
loop
rcrb
jno
aas
enter
lods
ret
cmp
je
pop
or
mov
pop
ret
aam
mov
inc
jl
pusha
xor
and
test
insb
mov
gs
arpl
push
or
fs
and
popa
stos
mov
aas
test
aam
dec
test
shl
rclb
lock
cmp
fsubl
pop
movb
sub
faddl
pop
popf
pop
and
repnz
test
xchg
xor
out
or
xor
add
add
mov
jbe
pop
inc
and
mov
mov
fidivl
aaa
rolb
add
mov
leave
enter
add
cmp
int
or
scas
cmp
add
xchg
mov
lret
ffreep
add
adc
adc
adc
push
dec
mov
jne
adc
cltd
cwtl
inc
sbb
or
and
add
mov
adc
and
out
jge
pop
or
or
pop
in
xor
std
lahf
mov
jg
add
mov
jmp
mov
orl
inc
push
mov
and
out
pushf
rolb
test
pop
or
outsb
mov
cmp
enter
sub
ret
push
add
mov
ds
xor
add
enter
out
push
inc
ds
dec
push
inc
insl
mov
dec
adc
jmp
enter
or
jne
repz
test
into
cli
out
jmp
push
push
push
pop
clc
loope
je
xor
int
pop
sbb
sub
insl
cmpsb
movsb
or
and
jno
flds
cwtl
pop
fs
push
mov
aas
mov
mov
jne
cmovo
clc
adc
and
dec
jne
into
inc
inc
out
push
xchg
dec
jmp
add
jb
ja
push
xchg
mov
mov
inc
shrl
jl
sbb
xchg
sub
sbb
shr
aam
ljmp
adc
fs
sub
ja
mov
mov
lock
insb
or
mov
inc
mov
inc
sbb
add
lods
mov
mov
adc
pop
je
test
int3
mov
pop
add
xor
aaa
jo
rorl
mov
ljmp
add
daa
or
xchg
pop
scas
add
xlat
in
cmp
sub
fdivrl
icebp
mov
inc
ss
adc
xchg
adc
lods
mov
xor
hlt
or
out
mov
jae
push
addl
inc
cmp
cmp
ficoml
sub
sub
mov
mov
jl
fdivl
pop
dec
or
adc
and
adc
sub
hlt
ret
jnp
test
inc
loopne
movsb
pop
cwtl
adc
jecxz
ljmp
int
pushf
cmpsb
add
push
add
adc
fs
dec
sbb
jp
push
test
ja
mov
pop
push
adc
jecxz
lds
fdivrs
lock
jp
iret
inc
lods
push
and
hlt
ja
pop
sbb
pop
or
jo
imul
cmp
and
btc
addr16
push
push
and
loope
add
xlat
add
pop
and
pusha
xor
jo
push
mov
mov
pop
push
mov
lret
pop
ret
or
or
mov
vrsqrtps
or
scas
icebp
mov
mov
or
rorb
and
out
popa
mov
sub
cmpsb
pop
or
and
js
push
xor
inc
or
sub
pop
pop
sbb
dec
and
adc
ss
imul
cmc
cmp
outsb
push
pusha
fldt
mov
jo
data16
fistps
push
repnz
add
lcall
lods
or
inc
fbstp
bound
xchg
fistps
lret
fwait
test
aam
add
sub
xchg
push
loope
xchg
into
jle,pn
test
push
adc
aaa
mov
pop
adc
ret
fstps
subb
inc
lcall
lods
sbb
mov
and
xor
add
mov
in
fs
movsl
dec
xchg
jo
das
xchg
mov
mov
out
mov
mov
xor
cmp
cmp
cmp
jecxz
add
xchg
inc
movsb
sub
pop
pop
test
push
xor
or
rcrb
inc
xor
loopne
add
imul
cmp
mov
addl
ret
addl
incl
push
dec
insb
addb
add
jg
and
adc
je
lret
insb
add
push
or
or
mov
pop
jb
mov
xchg
pop
add
or
rorb
push
sbb
addb
sub
fs
flds
fsubs
pop
fwait
js
test
sub
push
aam
dec
dec
and
mov
inc
das
add
ret
cmp
xor
add
sbbl
mov
jmp
ja
sub
in
jg
sbb
mov
inc
adc
hlt
push
pusha
nop
or
test
je
addl
add
in
cwtl
cmp
mov
xor
push
pop
pop
es
cld
and
fs
out
ret
inc
adc
andb
sub
imul
or
ljmp
jmp
or
or
xor
test
or
adc
rorb
xor
xor
mov
pop
aad
and
inc
push
push
das
adc
pop
icebp
xor
sub
jne
pop
mov
dec
mov
fdivr
sbb
inc
std
mov
mov
sub
mov
insl
daa
gs
dec
cwtl
jnp
xor
pop
into
or
cmpsb
or
push
inc
or
int
mov
mov
dec
and
pop
daa
pop
mov
jmp
push
add
cmpsl
inc
cltd
add
xchg
in
inc
adc
adc
push
into
push
pop
add
adc
add
pusha
inc
pusha
jne
cld
jo
rclb
test
sub
mov
adc
sbb
notl
pop
insb
imul
mov
mov
mul
into
dec
mov
add
cmp
xlat
adc
rclb
inc
daa
or
scas
pop
push
inc
movl
adc
inc
mov
or
loopne
or
or
mov
and
jg
mov
push
pop
icebp
dec
jmp
xor
and
and
testb
in
inc
dec
inc
fs
add
mov
xchg
data16
addl
shll
inc
or
xor
loop
or
xchg
or
or
sbb
jo
or
adc
cli
loopne
adc
push
mov
xorb
movsb
shll
js
jmp
mov
daa
fdivs
or
orb
inc
sub
nop
bound
daa
out
test
dec
adc
or
xor
or
xor
loopne
sbb
sbb
sub
pop
les
sbb
push
inc
mov
mov
call
sbb
outsl
inc
fs
sbb
and
test
movhps
jno
xor
enter
and
mov
pop
add
das
or
xchg
xorl
adc
in
xor
arpl
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
mov
pop
or
jo
in
or
sub
sbb
sub
cmp
add
cmp
mov
pop
jns
xor
inc
jae
mov
clc
dec
inc
and
dec
lea
fwait
loope
sbb
out
lock
cmp
dec
cmp
arpl
dec
adc
scas
xchg
bnd
rcrl
dec
dec
and
dec
pushf
loope
cmp
add
imul
push
daa
jne
fdivl
xor
daa
inc
les
inc
icebp
or
popa
jo
or
push
jle
xchg
dec
add
aaa
cld
les
sbb
pushf
or
jl
mov
jbe
fs
push
in
inc
mov
loop
clc
pusha
pop
mov
push
mov
push
lea
aam
adc
xchg
shr
mov
lock
mov
inc
inc
sbb
lock
xchg
and
aas
cmp
lock
sti
std
and
jne
sub
lock
adc
mov
enter
sub
leave
add
lea
sbb
fldenv
push
and
insl
aam
loopne
xchg
push
loopne
aad
icebp
pop
icebp
mov
ret
enter
adc
fsubr
push
jmp
sbbb
inc
es
xor
pushf
in
or
inc
sub
or
xor
and
push
sub
add
shl
pushf
addb
pushw
or
stc
cmpb
movsl
add
and
into
mov
pop
adcl
fnsave
sbb
js
scas
add
bound
mov
add
fisubrs
adc
adc
add
fwait
or
test
rclb
add
fdivrp
xor
sbb
cmp
inc
dec
or
xchg
mov
xchg
adcb
dec
add
and
mov
aas
pop
pop
loopne
sbb
mov
mov
jo
and
sbb
add
mov
add
xor
roll
inc
jl
push
imul
adc
inc
sbb
mov
pop
xorl
insl
rcr
cmp
add
xchg
sbb
or
inc
loope
add
ja
push
lods
or
arpl
cld
popl
jge
dec
sbb
data16
inc
and
imul
nop
pop
add
adc
data16
pop
and
xor
enter
pop
andl
in
imul
inc
call
fsubs
int3
inc
notl
in
rolb
pop
lock
or
or
adc
pop
rcll
push
sbb
jnp
data16
fcoms
popa
out
cmp
or
push
xor
or
sbb
fstps
and
int3
adc
loop
movsb
or
sbb
jb
and
push
mov
bound
push
dec
inc
fsubrs
nop
lcall
and
or
sub
push
push
mov
sahf
or
or
lods
jo
xchg
dec
das
fadds
or
das
test
add
add
push
cmc
xchg
bound
leave
ret
dec
push
icebp
inc
mov
inc
add
jg
sar
jns
adc
push
xor
in
sub
pop
push
jne
add
pusha
mov
sbb
add
imul
adcl
add
or
rol
push
pusha
rclb
cmp
mov
shlb
lods
dec
dec
cmp
into
push
pop
push
outsl
sbb
divb
or
sbb
push
or
pop
mov
cmp
dec
aam
jnp
fs
aaa
add
and
inc
push
xchg
int
xchg
and
xchg
add
ds
inc
inc
stos
adc
or
cmp
push
mov
cmp
sbb
jb
cmc
mov
xchg
aaa
loop
adc
or
hlt
hlt
adc
xor
adcl
sbb
sbb
add
daa
pushf
xchg
mov
adc
aam
inc
adc
dec
rcr
or
clc
sub
pop
push
cmp
sarb
xchg
lods
gs
and
xchg
push
adc
sbb
mov
sarl
lret
push
xor
adc
mov
jl
pusha
mov
pop
push
dec
test
pop
jecxz
enter
test
popa
fs
sbb
fsubrp
fs
repz
or
push
mov
dec
jae
pop
cs
push
pop
or
js
inc
push
mov
repz
pop
pop
in
int3
sbb
jmp
pop
sub
dec
xor
sbb
or
sarb
shlb
roll
das
loope
mov
test
lock
sahf
dec
mov
shrd
add
jg
add
mov
ds
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
sbb
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
or
sbb
mov
test
or
inc
cltd
sbb
lahf
xor
mov
mov
cmp
hlt
test
mov
mov
sub
mov
push
inc
add
pop
push
lods
out
inc
xorl
pushf
mov
add
fisubl
dec
push
imul
adc
sahf
out
loopne
popa
push
pop
inc
sub
jns
daa
lea
adc
addl
in
mov
sbb
adc
lock
cmp
xchg
mov
adc
xchg
or
loopne
dec
lds
mov
mov
and
test
movsl
pop
xor
sub
sbb
lock
push
push
inc
push
lock
and
enter
aas
xor
or
adc
jnp
push
addr16
cmp
mov
or
dec
dec
jbe
push
sbb
pop
jne
mov
mov
andb
dec
jae
cmp
jne
pop
cs
jp
fucom
adc
imul
and
aas
push
sub
fiadds
and
push
lret
imul
mov
inc
cwtl
insb
and
test
and
push
pop
cmpsl
add
xor
adc
push
icebp
adc
pusha
fs
sbb
jo
lock
jae
je
jno
push
cmp
pop
sti
push
push
add
je
pop
xchg
lods
sub
sahf
mov
sbbb
bound
jp
sub
push
push
add
xchg
imul
arpl
and
and
xor
jne
fs
or
es
sbb
xchg
push
dec
jne
mov
daa
push
insb
push
ret
rorl
inc
inc
cmc
sub
add
test
add
add
mov
xor
adc
test
add
ljmp
and
add
push
mov
push
mov
fcmove
cltd
xor
push
adc
cmp
sbb
inc
sub
out
add
lret
inc
enter
test
mov
lahf
clc
jne
inc
iret
pop
cld
je
roll
adc
in
mov
jle
aad
ret
clc
or
jnp
rcll
gs
pop
daa
sbb
mov
jne
cmpsl
ficoms
or
fs
sbb
mov
sarb
add
sbb
pusha
xchg
lea
add
add
mov
std
mov
jg
jle
and
dec
xor
pusha
adc
xchg
inc
testl
in
and
inc
xchg
outsb
jge
jle
jl
xor
lock
ss
and
fdiv
ss
es
push
lahf
jbe
push
call
enter
scas
mov
pop
and
ljmp
xchg
sbb
adc
in
pop
fildl
ficoml
mov
pop
and
xchg
adc
pop
xor
aad
cmpsl
rcrb
mov
in
lret
inc
ja
pop
adc
ss
sbb
mov
jmp
in
adc
add
inc
ds
adc
fistl
cmp
sub
js
loop
sub
cmp
jne
jbe
mov
pop
xor
adc
cltd
pop
std
mov
mov
inc
lret
in
adc
outsw
movsb
lods
inc
pop
das
fadds
pop
test
xchg
or
and
insl
push
pop
hlt
test
push
pushl
outsb
insb
adc
and
and
push
stos
shlb
mov
inc
cmp
pop
add
xchg
mov
inc
test
loope
fmull
test
sub
pop
adc
nop
mov
mov
mov
shlb
jo
pop
ss
inc
lea
mov
push
jl
or
dec
push
pop
mov
jnp
jae
xor
jmp
push
mov
mov
xor
push
mov
add
mov
cwtl
lea
and
pop
outsl
jmp
and
add
sub
aas
jb
imul
sub
test
adc
test
mov
cmpl
imul
mov
idivl
jns
pusha
outsb
pop
mov
xor
ret
push
xchg
jbe
cmpsb
cmp
push
dec
jns
pop
push
popa
jno
flds
fistpl
mov
in
inc
clc
adc
mov
and
inc
add
popf
fcomp
nop
hlt
xchg
sbb
dec
cmp
jne
daa
xor
in
sbb
dec
push
mov
mov
dec
sbb
mov
jo
push
inc
sbb
je
or
mov
mov
ss
add
scas
push
pop
adc
sti
leave
incl
es
lret
xorl
pop
dec
and
and
lea
inc
xor
cmp
lock
lret
lock
mov
lret
add
mov
mov
xchg
add
dec
lcall
sbbb
loope
pop
xchg
add
dec
mov
movswl
mov
lock
ljmp
call
and
ficomps
inc
pop
mov
call
nop
enter
jnp
cmpsl
jnp
cltd
cmp
movsl
adc
sar
loopne
repnz
loopne
pop
pop
or
inc
bnd
add
adc
xchg
mov
jmp
add
add
fiadds
sbb
jle
test
xor
dec
push
incl
sbb
lea
addr16
push
mov
inc
add
or
pop
sub
add
jg
adc
mov
dec
cmp
or
inc
or
cs
jmp
mov
lods
mov
mov
bound
jle
push
or
clc
cld
rorl
ja
dec
cmp
inc
mov
mov
push
adc
shrl
add
out
push
dec
adc
push
pop
lock
fsubs
mov
xor
xor
add
pop
adc
imul
mov
or
pop
jns
dec
add
pop
or
and
push
popa
jl
jnp
nop
fldlg2
out
jo
enter
cwtl
pusha
cs
add
in
sub
mov
inc
jmp
sbbl
subl
pop
in
xchg
jl
or
insl
fwait
out
rclb
cwtl
ret
mov
hlt
es
add
cld
push
sbb
aam
cwtl
test
add
inc
cmp
mov
sbb
and
insb
sub
movsb
jb
xchg
jo
je
lret
js,pn
jl
push
mov
test
inc
sub
test
inc
xchg
inc
push
add
fs
fs
ss
dec
push
fbstp
dec
push
leave
xchg
add
dec
dec
inc
add
insl
jns
fldenv
fcoms
inc
gs
pop
lods
or
fsts
dec
cld
daa
movsb
add
movsl
nop
out
adc
jae
push
cmpsl
test
insl
jo
lret
icebp
movsl
mov
inc
in
inc
out
mov
inc
xchg
dec
jae
enter
pop
cmpsl
mov
cmp
jae
outsl
adc
sbb
push
mov
ret
push
add
or
jge
and
mov
mov
push
mov
push
int
in
sbb
sbb
mov
ficoml
insb
in
jl
imul
je
push
xor
or
repz
push
adc
aam
sub
hlt
or
jmp
ret
mov
dec
out
push
add
inc
xchg
adcl
je
loopne
adc
pop
dec
jle
xor
pop
sub
adc
cs
and
mov
orb
xor
cmpsb
push
pop
in
mov
mov
shl
xchg
leave
and
cmpsb
mov
xchg
bound
sub
insb
mov
add
aaa
repnz
mov
testl
mov
xor
sub
mov
mov
cmp
ret
lret
xor
les
nop
inc
dec
add
xor
mov
sub
xor
leave
sub
xchg
push
aas
xor
movsl
and
mov
movsb
scas
nop
mov
shl
mov
xor
bnd
cmp
push
add
sti
xchg
adcb
andb
testl
adc
push
xchg
imul
aaa
xor
jecxz
inc
outsb
pop
dec
scas
sub
sub
outsl
cmpsl
int
xor
xchg
inc
sbb
mov
ret
or
mov
ret
xor
addr16
scas
xchg
aam
ds
inc
ss
inc
dec
fwait
dec
test
pop
sub
cmpsl
clc
and
xchg
add
repnz
test
leave
or
xchg
fs
sbb
cmp
add
mov
cmpsb
jge
sbb
pusha
jl
sub
push
mov
or
inc
or
out
aaa
xchg
push
pop
idiv
out
cmp
je
mov
adc
xchg
sub
and
sbb
pop
fidivs
push
and
ficoms
repz
jnp
add
jmp
movsb
xorb
push
and
addr16
inc
xchg
pop
jp
mov
add
fwait
mov
cwtl
pop
call
and
nop
out
mov
and
loopne
inc
push
pop
fs
fisubs
add
repz
lcall
pop
mov
cmp
mov
pop
lods
aas
pop
sub
mov
mov
cwtl
mov
cltd
pop
in
gs
and
rorb
test
inc
popa
mov
or
inc
daa
movl
out
or
test
ljmp
lcall
add
and
inc
xchg
nop
mov
inc
dec
add
fwait
outsb
vmread
add
out
dec
ss
notl
push
or
sbb
sub
adc
add
sbb
cmpxchg
pop
pop
mov
ja
repz
lods
push
shlb
cld
adc
sahf
cmp
push
jns
je
jl
and
out
mov
test
das
xchg
push
add
inc
insl
and
and
add
push
adc
shll
notl
add
jo
mov
dec
lcall
arpl
xchg
fs
inc
inc
and
roll
dec
pop
lahf
fwait
and
mov
rclb
inc
xor
add
cmpsb
add
inc
pop
negl
inc
test
jne
xlat
pop
sbb
rcl
add
outsb
sbb
and
sbb
xchg
adc
sbb
movsb
jnp
add
repz
xor
out
cs
push
int
fxch
and
dec
xor
sub
mov
inc
das
dec
add
pusha
sub
lock
or
pop
adc
or
push
bound
test
mov
xor
movsb
sbb
adc
out
xchg
and
pop
mov
inc
sub
dec
rolb
ja
xor
pusha
and
dec
push
ss
aas
inc
dec
stc
sub
sbb
and
or
mov
add
das
xchg
xor
mov
adc
xor
pop
xor
rorl
cmpsl
cmp
mov
mov
xor
cmpsb
mov
adc
pop
bound
jno
les
push
cmp
jle
lahf
loopne
xlat
sub
jle
fldl2t
mov
in
mov
inc
or
inc
push
movb
and
test
mov
loopne
xor
inc
pop
xlat
push
inc
in
repnz
xor
std
adc
inc
scas
mov
xor
fiaddl
imul
mov
dec
popf
dec
lods
xchg
shlb
cwtl
rclb
mov
dec
ret
cld
or
push
sub
pop
mov
int3
dec
push
stc
push
and
dec
push
repz
sbb
inc
sub
cmp
mov
sbb
loop
popf
xchg
out
aad
cwtl
xor
mov
xor
and
add
cmp
mov
stc
int3
mov
mov
dec
jae
mov
push
push
push
or
insb
and
dec
add
sub
pop
movb
lods
xchg
jle
mov
mov
push
pop
sub
aas
add
shrb
xorb
nop
add
lock
pop
add
xor
cwtl
mov
mov
insb
je
dec
aad
lcall
xor
push
push
lret
das
fstps
push
jl
xchg
jl
data16
pop
imul
xchg
lret
sub
jae
add
rcrl
fwait
dec
dec
mov
or
xor
dec
cmp
cmp
mov
movsl
pop
jnp
push
sbb
popa
ss
mov
mov
fs
push
dec
scas
jp
test
fmull
fbstp
sbb
pop
lahf
shrl
out
or
in
and
pop
imul
popf
push
mov
sub
adc
xchg
adc
jne
out
xchg
jo
test
out
mov
pop
dec
mov
clc
movsl
inc
pop
cmp
push
cmp
je
lds
adc
adc
mov
insb
and
ret
jo
cmp
rcrl
sbb
movsb
push
adc
mov
cmpsl
decb
cmp
mov
loop
or
sar
xchg
sbb
jbe
cltd
and
jl
mov
dec
sbb
sub
lds
inc
dec
lods
xor
cmpsb
jl
push
mov
adc
lods
loop
mov
ror
js
insb
xchg
adc
int
pop
jno
jne
cmp
je
test
out
jb
jg
add
je
or
jl
andl
adc
iret
je
jne
sub
mov
lods
mov
fmull
or
jo
jg
pop
adc
adc
pop
push
cmp
push
pop
lahf
lret
mov
shll
sbb
xchg
ja
mov
ficompl
adc
push
or
pop
inc
or
sbb
adc
add
orb
adc
and
lods
orl
mov
pop
mov
mov
cmpb
mov
mov
imul
mov
clc
push
or
inc
pop
or
xor
pop
loope
pop
repz
daa
inc
cwtl
inc
adcl
cltd
ret
rorb
mov
rol
sub
rclb
mov
push
or
scas
punpckhbw
xchg
pop
pop
sbb
es
inc
sbb
lods
pop
xor
adc
and
xchg
pop
and
and
arpl
jge
pop
jno
and
and
sub
mov
mov
or
mov
cmp
or
call
cmpsb
adc
imul
pop
loopne
test
add
mov
test
push
pop
cmp
push
and
mov
and
push
adc
cs
imul
shrl
int
dec
adc
subl
inc
xor
xor
rolb
test
ja
xor
loope
aad
mov
mov
inc
sub
inc
xor
or
outsb
inc
dec
xor
lahf
out
jle
jno
arpl
ja
insl
mov
and
das
popf
je
dec
push
sbb
std
dec
sbb
sbb
daa
push
push
stos
mov
je
xor
scas
push
mov
push
xor
jge
in
mov
cld
mov
shl
and
inc
cmp
inc
add
add
sbb
sbb
add
inc
jne
dec
lods
jne
subb
mov
push
aam
push
mov
dec
xchg
or
inc
and
jb
mov
rorl
aad
or
sub
nop
xchg
divb
and
inc
fbstp
or
mov
gs
push
xorb
test
lods
inc
icebp
aas
or
rcll
pop
sub
add
lods
sub
fadd
xor
ret
adc
movsb
outsb
call
aad
push
pop
or
stos
adc
adc
xchg
iret
pushf
test
cltd
pop
xchg
mov
orb
jl
clc
call
xchg
sbb
add
jmp
icebp
or
xor
lcall
and
inc
cmp
jg
pusha
inc
dec
add
push
mov
scas
jno
jge
cli
jae
push
push
push
rcll
ds
mov
popf
jecxz
or
call
mov
cmp
add
in
jmp
scas
push
sbb
jae
sbb
jnp
hlt
imul
cmp
adc
pusha
pop
add
ret
xor
cmc
mov
dec
mov
inc
cmp
adc
push
jmp
sub
push
scas
test
xor
adc
or
test
xor
pop
mov
and
adc
adc
push
imul
xchg
ret
sub
test
adc
sub
lcall
and
and
sbb
out
ljmp
push
dec
push
fdivr
or
fcoms
imul
xor
fimuls
shlb
sbb
insl
cmp
add
pop
loope
jmp
mov
xor
push
cmp
psraw
incl
xchg
in
movsl
mov
xor
xchg
inc
jo
add
arpl
sub
sahf
adc
dec
xor
and
shlb
aaa
push
pop
xchg
xchg
cmc
add
inc
dec
mov
stos
dec
mov
lahf
enter
mov
shll
cmp
mov
pop
or
inc
cmp
sub
and
test
xadd
loop
push
adc
fldl
adc
shl
xchg
add
xchg
out
adcb
jnp
pop
inc
push
inc
push
pusha
jecxz
lock
sub
xor
call
jmp
incb
loopne
addl
inc
sbb
adc
push
cmp
mov
hlt
xchg
lds
dec
jnp
sub
adcl
mov
popl
sbb
repz
jl
mov
lock
adc
out
pop
push
cs
bound
divl
in
mov
sbb
jnp
ds
sbb
enter
call
lahf
and
mov
mov
pushf
inc
mov
mov
mov
clc
leave
adc
adc
fimull
mov
jnp
mov
ror
sti
mov
adc
jne
mov
xchg
in
test
imul
mov
or
mov
cmc
push
sbb
push
inc
inc
ret
cmp
or
jmp
xorb
and
push
push
insl
push
dec
test
dec
loope
and
movsb
push
mov
shlb
push
mov
sbb
adc
fstl
and
dec
cmp
jl
movsb
mov
int3
pop
sub
sbb
shll
jp
popa
insb
push
push
je
mov
insl
loop
sbb
inc
adc
aaa
fdivrs
sbb
sub
and
divl
jo
inc
loopne
cltd
xor
int
mov
adc
inc
bound
pop
and
cmpsb
aam
mov
dec
and
sbbl
fstps
inc
dec
xor
dec
or
and
rcll
enter
mov
sbbb
daa
and
ret
dec
aam
insl
sub
pop
fisubl
mov
or
scas
or
adc
add
je
push
mov
jmp
cwtl
test
cmp
pop
pop
mov
inc
xchg
cmpsl
sbb
inc
xchg
xchg
mov
dec
hlt
pushl
hlt
mov
dec
clc
popa
clc
inc
mov
mov
and
add
inc
xchg
mov
add
adc
cmpsl
cmp
mov
jecxz
add
lahf
rclb
add
nop
add
cmp
out
jle
movsb
loopne
test
fdivrl
push
jg
clc
sbbl
jne
scas
add
mov
xor
and
and
fiadds
movsb
shlb
mov
jge
and
repnz
jno
and
and
jno
stc
es
cwtl
in
cmp
imul
in
xchg
rclb
push
jo
xor
nop
xchg
dec
jmp
inc
dec
jo
call
sub
sahf
testl
xor
lret
ja
imul
or
add
xlat
out
shrb
scas
adc
xor
or
mov
out
rcrb
cwtl
mov
cmpsl
or
fs
dec
in
arpl
dec
jge
pop
shl
inc
xchg
push
dec
inc
jmp
loopne
push
aas
xor
movsl
cmp
adc
pop
push
lock
outsl
inc
fcoms
cmp
mov
pop
lods
add
fadds
movsb
icebp
cmpb
push
push
xchg
fildl
cmp
shl
mov
mov
das
test
and
and
mov
push
xchg
xchg
shrl
adc
sub
popf
test
test
pop
lock
aaa
cwtl
ret
push
add
dec
cmp
es
or
or
dec
popa
cmp
or
nop
push
shlb
lock
mov
clc
mov
xor
xchg
mov
cmp
cli
test
movl
push
pop
push
fwait
dec
out
sbb
jg
pop
mov
and
xrelease
inc
push
mov
or
xor
sbb
jmp
adc
dec
cmp
test
add
inc
ja
add
pop
xlat
pushf
pop
test
inc
cmp
subl
stos
jb
push
test
cltd
or
xor
les
jno
fdiv
fcoml
mov
addb
ret
jae
les
mov
dec
test
inc
das
jmp
fs
pushf
push
push
or
int
sub
inc
lods
dec
add
sub
add
xchg
pop
xchg
lcall
add
incl
ret
push
add
decl
addb
sarb
lcall
add
dec
add
cmpsb
mov
sub
movsl
mov
cwtl
lods
mov
or
repnz
pusha
dec
outsb
jne
dec
mov
and
test
jae
mov
movups
inc
cs
sub
jge
or
or
popa
jb
add
test
push
jle
adc
stos
add
xor
ja
push
mov
stc
loopne
cmc
bound
insb
add
mov
lcall
movsb
popa
inc
int3
push
dec
mov
pcmpgtw
and
adc
mov
add
int
jle
imul
sbb
movsb
push
xor
push
out
add
pop
fnstsw
icebp
jo
out
adc
pushw
xchg
push
inc
push
gs
and
push
aam
cs
add
adc
mov
ret
cltd
push
mov
cld
push
or
dec
fstps
int
imull
push
or
adc
in
es
pop
mov
add
cmpsb
dec
lret
dec
fidivrs
push
xor
inc
lods
aam
sbbb
inc
or
inc
ds
imul
push
pop
in
push
mov
mov
mov
nop
in
and
int
xlat
sub
xlat
xlat
sahf
out
inc
mov
lods
push
int3
in
enter
lock
pmullw
or
xchg
sub
pop
stos
add
addr16
lods
out
aad
mov
inc
add
sub
fstpl
mov
cmp
repz
sbb
cmp
movsb
scas
and
fwait
cld
pusha
cli
cwtl
sti
mov
test
pop
pop
sbb
test
das
sbb
dec
mov
cmp
fdivr
pop
fdivr
push
lods
stc
in
and
jnp
cmp
idivl
daa
pusha
nop
cmpsl
pop
sbb
jo
sbb
inc
dec
clc
inc
add
inc
add
test
test
add
arpl
imul
adc
cmp
insb
or
inc
add
add
hlt
imul
out
gs
dec
cmp
or
push
and
fs
or
fdiv
js
dec
inc
std
sub
imul
dec
cwtl
push
lock
in
cmp
inc
dec
add
push
jge
dec
and
inc
out
xor
mov
inc
add
das
add
sbb
cld
test
repnz
inc
or
fcomps
jne
cmpsl
adc
xchg
cmp
or
das
lcall
adc
pusha
enter
pop
or
and
aas
mov
arpl
js
and
add
push
dec
pop
inc
ja
pop
mov
adc
xchg
mov
jecxz
test
jb
push
fists
cmpsl
shll
divb
cmp
outsl
push
popa
fs
or
xchg
nop
sbb
iret
sarl
int3
xorb
lea
inc
sub
inc
sbb
mov
add
mov
or
bound
andl
mov
adc
dec
cwtl
cwtl
push
add
sahf
popa
cmp
pop
mov
test
lcall
jnp
mov
and
pop
add
push
push
enter
pop
pop
in
or
adc
unpcklps
pop
cld
adc
dec
fildl
inc
or
sub
scas
lret
jmp
cmp
pop
es
dec
imul
push
xor
add
loope
aad
jl
add
push
mov
pop
xor
popf
filds
in
test
jle
cs
add
pop
in
pusha
push
add
sbb
xor
inc
imul
cmp
mov
sbb
push
or
add
loopne
rcrb
push
lahf
adc
imul
pop
dec
push
add
xchg
adc
lret
pop
cmpsb
push
adc
scas
and
cmp
mov
adc
push
je
xchg
pop
es
jnp,pn
into
cmp
or
pop
mov
movups
in
sbb
or
loope
and
push
or
gs
ds
inc
lret
push
sbb
imul
push
jo
aad
popa
jo
nop
xorb
flds
inc
dec
push
jb
arpl
fsincos
jne
jl
or
or
xchg
and
sar
in
push
cs
mov
sub
insl
popa
cmc
pusha
ljmp
sti
and
sbb
and
push
fstps
int
sub
into
push
push
inc
push
mov
mov
inc
hlt
pop
insb
loopne
sarb
nop
adc
and
cmpsl
popf
and
push
fmuls
sbb
mov
push
push
js
repnz
or
xor
sbbl
fstl
clts
and
and
adc
cmp
xor
cmp
fbld
cmpsb
adc
shll
or
push
imul
jecxz
push
xor
mov
xor
push
leave
pushf
sbb
mov
jo
popa
test
paddsb
out
into
out
inc
ds
sub
sbb
mov
jg
sbb
loope
mov
xchg
nop
pushf
xlat
test
and
inc
jbe
mov
daa
sub
sti
ret
mov
xor
xor
ss
cmp
inc
inc
push
aaa
dec
aam
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
push
rorb
add
push
push
pop
pop
pop
cmc
or
imul
sub
mov
push
xor
pop
js
cs
xchg
dec
lret
push
mov
xor
ljmp
xor
adc
sub
testb
mov
push
cli
and
add
add
addr16
jns
add
add
mov
int3
lcall
rcr
push
xchg
mov
pop
push
pop
cmp
incb
dec
loopne
pop
jb
mov
rorl
lods
dec
sub
sub
clc
add
fildl
je
push
jp
push
jg
rcr
jle
cmc
shll
inc
jge
roll
divb
lahf
mov
mov
cmp
dec
rcll
mov
and
mov
lret
and
cmp
mull
cmp
mov
add
adcl
imul
mov
nop
jmp
inc
sbb
insb
movsb
inc
inc
dec
pusha
sub
dec
call
clc
push
jecxz
mov
lods
or
leave
sbbl
and
aas
les
and
testl
push
sbbb
in
sbbb
adc
pop
xchg
sarb
mov
hlt
je
test
pop
inc
and
sbb
mov
mov
mov
push
cvtps2pd
inc
adc
cmp
jmp
into
or
push
loop
inc
rol
xor
push
or
rorl
fcoms
scas
sub
addl
mov
pusha
idiv
mov
jmp
xor
cs
push
xor
dec
sub
lahf
sub
dec
push
pop
scas
mov
nop
dec
and
jg
xchg
or
jmp
inc
sti
push
add
or
mov
inc
jge
pop
pop
mov
sub
ret
jle
shll
xchg
es
icebp
outsl
hlt
push
push
data16
lea
movl
pop
dec
cmp
aas
push
cmp
ja
insb
fwait
loopne
sbb
xor
pusha
je
mov
add
addr16
loopne
add
mov
lret
arpl
pop
ret
das
call
mov
addb
daa
icebp
insl
clc
lret
loope
mov
pusha
pop
jne
cwtl
ljmp
test
push
jmp
push
jle
sbb
fsubs
es
sub
in
push
in
outsl
sub
lods
cmpsl
lods
sbb
cmp
ja
jo
xlat
cld
lahf
xchg
imul
inc
ljmp
dec
jns
in
push
xor
int
je
pop
cmp
aaa
in
sub
cmp
orb
lahf
movsl
aas
jb
in
or
inc
notl
inc
ret
inc
mov
call
ja
rclb
ja
pop
inc
cmpsl
nop
xchg
and
sbb
inc
sbb
sub
je
adc
xchg
mov
sbb
inc
imul
cmp
pop
mov
push
dec
popf
cmpsl
fs
inc
je
rorl
aaa
push
pop
inc
lret
push
jl
add
cmpb
iret
nop
cmp
fnop
sbb
cmpxchg
add
mov
aas
cmp
fbld
sub
inc
push
push
nop
sbb
dec
sbb
test
pusha
xchg
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
out
and
mov
fwait
aas
mov
je
or
xor
dec
dec
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
sub
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
and
pop
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
adc
xor
aas
jmp
enter
call
mov
dec
jg
cmpl
adc
test
sub
cmpsb
mov
inc
femms
mov
inc
dec
js
push
orw
nop
cmp
add
in
nop
or
add
rolb
mov
or
add
jp
jnp
sub
mov
jl
cmp
pop
imul
faddl
fucomi
dec
pop
pusha
pusha
insb
cmp
push
fmul
xor
pop
enter
push
or
subb
cmp
mov
test
push
outsb
imul
movl
inc
in
or
insb
mov
cmpb
and
loopne
cmc
in
adc
mov
int
aaa
je
sti
lcall
sub
jo
push
adc
pop
flds
lods
cmp
pop
icebp
stc
ja
leave
mov
or
cmp
int
mov
push
idivl
iret
ret
mov
adc
ja
xor
pop
cmp
inc
push
imul
cmp
orb
push
fadds
lret
mov
jge
test
dec
jo
iret
in
insb
sti
cmp
xor
test
lock
adc
divb
cmc
in
push
or
push
in
andl
dec
jmp
inc
push
adcl
xchg
shl
lret
shrb
inc
pop
cmpsl
sbb
pop
sub
or
dec
sti
xchg
adc
fs
out
or
and
das
enter
fsubs
sub
hlt
mov
push
add
test
pop
push
jp
mov
or
movsb
inc
ret
mov
adc
add
int3
dec
and
es
push
pop
lods
testb
shrl
mov
shlb
aas
dec
cld
fstps
xchg
insb
mov
mov
sbb
mov
insl
shrb
fbstp
adc
add
gs
adc
ficoml
test
je
jp
mov
mov
in
jns
mov
lock
cmp
mov
or
sahf
jo
sub
es
popa
decb
inc
mov
xor
inc
loope
stos
jg
push
adc
ret
jo
and
xor
iret
pop
ds
lea
shll
xor
inc
cli
pusha
leave
mov
and
or
adc
lahf
mov
pop
inc
cmp
push
aad
mov
mov
mov
sarl
jmp
jbe
sbb
push
pop
mov
xor
shlb
or
pusha
sbb
outsb
pop
pop
out
je
or
lock
cwtl
jge
adc
int3
outsb
xor
daa
sub
cld
cmpsb
lock
je
ds
imul
inc
out
add
xchg
adcl
iret
nop
nop
push
adc
mov
and
loopne
jecxz
xchg
clc
call
call
mov
xor
ljmp
add
cmp
adc
and
inc
cmp
aaa
add
rorb
mov
and
dec
subb
lahf
hlt
jb
or
sub
sbb
xor
sbb
mov
and
lock
addl
push
cs
adc
lret
or
mov
stos
rcl
iret
ss
aad
jle
jg
fcmovnu
mov
add
sbb
or
push
fwait
sbb
xchg
xchg
sahf
or
orb
dec
loope
or
xor
mov
rcll
cmp
je
mov
subl
mov
sbb
or
int3
push
mov
cwtl
out
push
adc
test
repz
or
mov
xchg
nop
and
daa
test
scas
xchg
adc
push
mov
xchg
add
pop
iret
xor
data16
clc
add
push
imulb
je
inc
or
xchg
fsubs
scas
icebp
push
jns
and
mov
pop
mov
ss
or
adc
mov
shl
push
stos
inc
cmpl
aaa
shlb
movb
cmp
pop
cwtl
and
test
jmp
or
pop
out
and
sbb
hlt
enter
ljmp
std
push
smsw
xchg
lock
call
mov
inc
xlat
and
rolb
adc
pop
inc
data16
sbb
cmp
icebp
and
mov
mov
lods
les
push
sbb
ss
addl
inc
test
ret
mov
nop
into
xchg
xor
fldl
mov
jns
enter
gs
lock
loopne
imul
inc
xor
sub
xor
dec
and
push
sbb
sbb
adc
lret
rolb
sti
in
cltd
xchg
decl
push
fsub
clc
push
add
jle
mov
cmp
invd
das
pop
fisttpl
cmp
cld
adc
dec
cmpsb
jecxz
jmp
orl
dec
adc
pop
mov
jnp
lock
inc
cwtl
pop
add
and
test
jge
repnz
cmp
push
push
inc
adc
fsubr
dec
icebp
push
fsubrs
push
lods
cltd
js
lods
add
mov
ficoml
pop
mov
sbb
sbb
jge
clc
jecxz
popa
cmp
enter
add
popf
mov
sub
push
or
and
es
or
popf
push
add
inc
push
sub
and
sub
roll
mov
movsl
and
mov
cmp
pop
mov
test
ja
mov
aad
stos
movsb
pop
lock
push
lock
adc
add
sub
shrb
sbb
sbb
push
lods
mov
xor
bound
mov
iret
hlt
cmp
push
sbb
hlt
hlt
pop
into
hlt
sub
inc
add
push
rep
lock
imul
test
shlb
inc
jne
mov
push
inc
xor
leave
lock
rorl
sbbb
cld
add
jp
or
ds
pop
fists
sqrtps
loopne
xchg
cmp
int3
gs
outsl
lea
or
add
rorb
adc
or
ja
ja
outsb
aaa
fisttps
sbb
or
push
inc
cmp
dec
add
hlt
push
inc
xchg
jne
mov
pop
mov
ja
or
sbb
jne
loopne
ret
aas
sbb
pushf
call
inc
les
enter
movsl
pusha
dec
push
pushf
and
lcall
cld
mov
adc
and
xor
popa
pop
push
pop
fisttpl
xchg
cmp
sbb
daa
sub
xlat
xchg
pushf
or
add
pusha
aaa
sub
mov
iret
add
mov
sub
jmp
in
push
ret
sub
xor
or
sub
mov
sub
add
inc
add
pop
pop
xchg
loope
shlb
adc
dec
call
ret
pop
lods
inc
sbb
call
or
test
fdivl
inc
mov
les
xor
leave
imul
and
sbb
push
push
call
jo
sub
mov
xchg
jl
call
xor
mov
lret
clc
sub
clc
orl
pop
and
and
dec
lock
clc
leave
add
add
mov
add
je
dec
xor
arpl
push
mov
pop
mov
addl
pop
sbb
or
push
inc
and
pop
test
test
inc
movsb
leave
cltd
mov
and
sbb
cmp
cmp
pop
push
out
cmp
sbb
loopne
cmp
add
cmp
push
mov
data16
rorl
jmp
outsl
sbb
sub
jecxz
push
xor
shl
mov
das
in
xlat
ret
adc
andl
test
cmp
jno
inc
add
or
push
lcall
adc
push
mov
cltd
lcall
or
or
mov
and
push
je
cmovl
popa
add
cmp
push
pusha
inc
push
sbbl
jmp
fistl
add
pop
mov
rolw
add
sub
fs
pusha
push
int
jl
xor
movsb
js
mov
xchg
dec
aas
sub
movl
pop
sub
or
xchg
out
nop
sbb
dec
call
pop
fsubl
mov
pop
sub
dec
mov
orl
mov
xchg
fchs
or
pop
lahf
mov
add
xor
imul
ret
cmp
cwtl
cld
incl
mov
mov
xchg
push
inc
push
mov
xor
sbb
push
in
test
dec
out
test
bndldx
mov
pop
adc
xchg
out
sbb
int
inc
cmp
mov
ds
out
dec
popa
sarl
add
cltd
lret
or
subl
add
cld
ja
sbb
int
in
add
push
mov
xor
cmpb
push
loopne
lock
and
push
add
ret
testb
pop
adc
xchg
or
lea
out
mov
xor
scas
clc
xchg
adc
lods
and
aad
sbb
lock
scas
inc
sbb
inc
pop
dec
xor
shll
dec
dec
frstor
xor
in
lea
fadds
pop
and
and
sub
mov
pop
xchg
and
gs
jb
fwait
cli
pop
or
mov
cmp
inc
lret
and
jmp
aaa
cmp
ret
lods
mov
or
mov
and
and
popf
rolb
pop
add
or
pop
push
or
mov
mov
cmpsl
cmp
pop
or
je
jmp
insb
mov
or
mov
mov
jno
in
fldcw
cmpsl
out
aas
je
adc
pop
lcall
add
mov
push
xchg
dec
movl
sub
aam
inc
cmp
sub
mov
es
pop
mov
mov
mov
nop
dec
lds
mov
int
inc
inc
push
inc
inc
sbb
rcll
dec
je
outsb
ret
or
adc
ret
lahf
fs
xor
xor
lea
mov
jmp
andb
shlb
xchg
push
ljmp
jge
loopne
aad
ds
and
xor
popf
mov
adc
outsl
pop
in
daa
stos
pusha
pop
cmp
es
cwtl
cmp
fs
fstps
add
pushf
or
movb
leavew
fcmovu
mov
xchg
es
movsb
xor
call
bound
js
cmp
sbb
push
pop
pop
mov
inc
shlb
sub
jge
outsb
pop
xchg
imul
jbe
and
stc
gs
popa
cmpsb
lock
or
sub
ljmp
pop
mov
jp
adc
inc
nop
jne
dec
out
pop
addb
push
mov
push
les
ret
pusha
pop
popf
push
inc
push
jae
lcall
xchg
mov
popf
lods
jmp
clc
push
cmp
sahf
gs
insb
popf
xchg
adc
add
inc
and
mov
xor
xlat
dec
ret
push
lcall
inc
lahf
and
add
dec
sbb
repz
inc
and
fwait
or
jle
push
cmpsl
and
and
fs
aas
lret
sbb
and
xchg
sub
dec
pop
or
xor
and
int3
cmpsl
ret
cmp
in
push
push
mov
lret
add
mov
js
test
test
insb
cmp
fsubr
and
xor
mov
test
add
loopne
outsl
sub
jmp
jg
or
pushl
add
mov
sub
mov
popf
push
lahf
mov
mov
adc
dec
mov
inc
jp
sub
inc
leave
xchg
xchg
inc
inc
cld
incl
sbb
dec
or
out
push
or
pop
movl
adc
cmp
lods
out
scas
sbb
add
out
cmpl
loop
ret
iret
mov
imul
js
push
mov
enter
lcall
shlb
ret
mov
fs
jle
stos
inc
lret
push
cmp
inc
test
jnp
adc
test
pop
pushf
xchg
popf
sti
std
dec
cmp
mov
pop
mov
cwtl
xor
push
add
daa
ror
enter
mov
mov
push
stos
iret
ja
es
push
mov
push
xchg
scas
es
pop
mov
inc
pop
xor
popf
mov
xor
jge
inc
inc
xchg
sub
clc
sbb
jmp
mov
jle
push
push
data16
and
mov
xchg
and
fisubrl
push
pop
cmp
inc
ds
xchg
push
cmpsb
cmpsl
movsb
arpl
scas
and
adc
inc
aas
and
jb
pop
sub
pop
and
leave
xor
leave
inc
jb
inc
or
or
pop
je
and
mov
or
fs
push
pop
adc
cs
xor
insb
sub
mov
iret
inc
mov
mov
mov
scas
xor
or
in
fs
push
insl
xor
push
push
cmpsl
add
int3
sbb
jb
xlat
jl
jl
inc
or
js
ja
scas
in
lea
rolb
add
adc
xchg
into
xor
loopne
enter
mov
add
mov
adc
push
rcl
mov
test
adc
add
mov
and
aas
xorb
mov
push
lods
jecxz
adc
in
inc
fwait
cltd
bound
sub
push
sti
inc
imul
mov
pop
push
rcl
rclb
mov
call
rol
or
inc
mov
add
inc
cmpsb
inc
imul
push
notl
mov
mov
inc
push
xchg
adc
lret
in
add
out
jae
ficoml
dec
jne
or
pop
cld
add
out
stc
pop
js
enter
inc
inc
push
lcall
fucom
pop
fsts
pushl
push
ret
mov
js
test
jmp
pushl
dec
inc
add
adc
and
mov
movhps
insl
add
push
orl
add
xchg
sub
scas
pop
sub
sub
imul
mov
mov
push
int3
add
call
sbb
xchg
imul
out
inc
inc
stos
mov
cmp
mov
sbb
hlt
or
sbb
add
xor
imul
scas
add
test
or
hlt
sbb
in
loopne
in
mov
leave
rolb
popf
mov
inc
enter
sbb
dec
dec
xchg
and
jle
or
les
jnp
sub
pop
xor
test
les
sbb
cmp
dec
push
sbb
cmpsl
pop
dec
xor
xor
sbb
aam
je
push
imulb
jno
cmpsb
repnz
pop
iret
les
rclb
aam
mov
rcrb
sbb
cmp
enter
lea
movsl
cmp
dec
fwait
jl
data16
int3
push
stos
push
inc
adc
lds
inc
push
gs
test
rcl
inc
mov
negl
scas
add
stos
xor
adc
jne
push
and
js
xchg
dec
mov
jns
call
dec
fimuls
insb
xor
add
inc
jmp
fdiv
rcrl
xor
xchg
imul
xor
sti
mov
xchg
cmp
dec
jmp
inc
fistpl
punpckhbw
imul
loopne
pop
dec
movsb
lock
repnz
test
orb
divl
loopne
pop
sub
adcl
cmpsl
or
test
pop
iret
add
pop
leave
cmpsb
jno
inc
mov
popa
sbb
add
popa
mov
into
xchg
jne
insl
cltd
and
lods
push
sub
or
mov
sbb
cmp
outsb
sub
xor
test
js
push
and
aad
sbb
aaa
push
mov
pop
ja
fwait
or
pop
test
stos
loopne
sbb
shlb
sarb
test
xlat
call
popf
into
mov
test
sub
dec
or
pop
cmp
mov
pushf
sbb
inc
iret
xorl
lods
and
xchg
inc
imul
sti
and
add
add
pop
decl
sbb
sti
jl
inc
mov
je
sbb
cmp
js
movb
push
addr16
mov
dec
ret
xchg
mov
pop
inc
sbbl
mov
imull
cmpb
movb
popa
adc
int3
daa
add
pop
fistl
xchg
jne
loope
in
fsubl
add
mov
jle
aaa
dec
and
dec
inc
jne
jnp
test
cmp
mov
jne
mov
adc
cmpl
popl
mov
cli
orb
or
adc
pop
push
cmp
add
nop
sti
and
inc
fs
roll
xor
jp
lret
push
sbb
mov
data16
and
inc
arpl
add
adc
push
mov
add
fsubr
and
fwait
cmp
jno
js
or
or
sbb
pop
adc
lret
jae
dec
pushf
adc
stos
inc
xor
fistpl
and
mov
lret
cmpsl
outsl
out
fwait
mov
pusha
or
cmc
dec
and
mov
pusha
push
pop
ret
push
lahf
imul
subl
or
xchg
cwtl
ret
add
or
cwtl
inc
dec
nop
push
add
pusha
call
outsl
hlt
xchg
and
pop
stos
mov
adc
gs
and
push
xor
pushf
mov
out
push
mov
push
jp
hlt
jl
push
sarl
sbb
fs
ljmp
or
sub
daa
gs
pop
xorb
or
call
pop
rclb
shlb
aam
fwait
pop
add
imul
test
js
jb
adc
int3
js
inc
mov
add
pop
jmp
pop
pop
or
daa
push
insb
xchg
add
and
in
and
sti
pop
sbb
or
test
mov
hlt
jg
jnp
jg
stc
pushf
or
and
fs
inc
into
aas
lahf
ss
test
incb
cmp
xor
adc
or
out
pop
push
insb
inc
sbb
or
sbb
or
ret
push
adc
add
or
inc
dec
lret
push
inc
sub
xor
mov
hlt
scas
cmp
inc
dec
dec
jecxz
popa
jno
inc
out
adc
mov
xchg
add
fcompl
shlb
mov
push
add
cmc
popa
fwait
xchg
jbe
or
jbe
jecxz
test
ret
jl
mov
fcoml
in
mov
fwait
test
test
pushf
je
add
adc
jecxz
pop
ret
cmp
xor
add
add
cwtl
pop
leave
arpl
add
mov
testb
add
add
push
add
xor
push
jo
pop
mov
loop
mov
xchg
mov
mov
add
mov
inc
mov
cli
data16
imul
cmc
add
dec
test
push
jge
inc
sub
or
adc
inc
pop
add
shrb
subb
push
pop
pop
in
mov
fisubl
scas
cwtl
xor
repz
cmp
mov
cltd
nop
jbe
push
pop
xor
dec
and
sarb
xchg
push
mov
or
mov
repz
cmp
loope
sub
or
add
push
rorl
pop
push
movsb
or
xorb
pop
cmpsl
cwtl
cmovae
sbb
or
add
xor
ffreep
outsb
push
sub
push
pop
push
adc
and
mov
mov
cli
add
rolb
ret
xor
push
shl
jle
fstl
dec
ret
ret
pop
mov
insl
mov
cmp
add
dec
repz
iret
push
jle
hlt
jne
lea
hlt
adc
xor
jmp
xor
push
test
xor
push
pop
lods
sti
mov
insb
xchg
pop
fadds
lahf
fucomp
sbb
mov
and
push
add
cmpsb
push
add
or
inc
sbbb
cmp
pop
clc
jb
out
dec
xor
jbe
or
insb
fisttpll
das
insb
inc
inc
iret
sbb
xor
addl
cmp
and
lea
orb
cltd
dec
push
sarb
add
sbb
adc
xchg
mov
test
add
push
sub
arpl
xor
add
mov
push
in
sbb
les
dec
js
jecxz
or
pop
testl
pop
hlt
das
mov
mov
inc
or
jge
add
xchg
iret
cmp
adc
cmpsl
lock
inc
jmp
inc
addr16
clc
std
or
xchg
cmp
or
in
sbb
pusha
adc
fs
or
mov
pop
inc
mov
xor
sbb
cld
test
enter
dec
inc
dec
inc
leave
push
push
xor
test
scas
dec
iret
cmp
push
nop
push
sub
mov
daa
in
xor
and
xor
pop
or
ret
sbb
test
or
mov
xchg
add
or
jmp
xor
inc
into
push
sbb
cmp
leave
test
je
pop
push
dec
fs
test
or
push
das
mov
push
incb
and
out
push
push
jmp
and
sbb
jge
xchg
lret
aaa
xor
inc
sub
out
push
jge
fs
hlt
cmpsb
ret
fisttpl
pop
adc
mov
xor
dec
lock
movsl
jge
push
mov
pop
aam
inc
shlb
xlat
aam
or
push
push
inc
in
fimuls
and
into
ja
jno
in
stc
and
mov
cmp
mov
inc
mov
cli
inc
sub
movsb
pop
mov
aaa
jmp
sbb
into
adc
adc
xor
or
or
sbb
add
xor
jne
callw
or
loop
pop
or
jns
jno
mov
lret
or
inc
in
sub
add
inc
into
or
scas
sbb
xchg
in
out
pusha
mov
aaa
in
xchg
sub
andl
lcall
popa
lods
je
push
ss
hlt
js
leave
push
clc
pushf
cltd
call
mov
test
add
ds
mov
xor
inc
insb
jae
dec
or
cmp
je
jb
test
adcb
add
test
outsb
cmp
arpl
xchg
xor
inc
hlt
add
pop
inc
pop
js
adc
and
add
sbb
rolb
lea
mov
push
push
jmp
adc
fsubrl
push
sbb
mov
popa
adcl
jo
aas
mov
orb
add
push
adc
xchg
out
push
xor
ret
aas
cmp
or
cmp
xor
adc
cmp
mov
arpl
fcoms
sub
sbb
jp
pop
imul
cwtl
mov
or
arpl
inc
cmp
mov
or
rcrb
lret
add
adc
dec
xorl
int3
mov
pop
adc
jg
adc
cmp
jne
xor
aaa
fcmovne
adc
add
cmp
shlb
add
dec
cwtl
push
pop
iret
sahf
xchg
jns
cld
inc
out
inc
daa
adc
lcall
add
and
add
loop
repz
in
int
insl
aam
mov
or
mov
js
xchg
adc
loop
sub
outsb
imull
inc
pop
mov
test
sub
sbb
xor
push
pop
jb
push
insb
pmuludq
add
int
add
nop
into
sbb
or
mov
push
vmwrite
repnz
sbb
nop
hlt
xchg
jg
adc
data16
les
lcall
std
jmp
daa
sub
js
out
sub
mov
xchg
add
enter
sub
xchg
lea
stos
add
negb
std
mov
loope
pop
inc
sub
loop
aad
pop
and
inc
push
aam
adc
aam
mov
jl
add
cltd
dec
loopne
mov
mov
adc
nop
inc
xor
jp
cmp
mov
pop
icebp
lret
inc
dec
sbb
mov
and
mov
fimull
cmp
push
or
add
cli
add
addl
mov
cltd
sbb
sub
xor
adc
xor
xor
jge
adc
sub
inc
mov
ficoms
mov
add
clc
ds
or
sub
sub
pop
testb
add
in
enter
repnz
xor
pop
pop
xor
jg
sub
roll
or
into
adc
and
sbb
fcoml
pop
xchg
push
shr
loopne
je
cmp
data16
shl
js
sub
nop
inc
stos
push
test
dec
sbb
add
mov
mov
popa
mov
mov
cmp
adc
xchg
mov
fmuls
add
fchs
jge
mov
fistpl
xor
dec
sub
dec
cmp
push
in
dec
pop
add
inc
fmuls
and
push
xchg
jns
pop
in
loope
dec
leave
inc
jnp
jne
loope
fdivs
dec
test
xchg
push
dec
mov
insb
or
add
jl
cmp
dec
repz
fstp
sbb
push
lds
jecxz
xor
movsb
cwtl
and
test
filds
inc
jg
push
mov
push
arpl
pusha
add
shlb
dec
mov
xor
or
sbb
add
xlat
sti
dec
movl
addl
push
test
cmp
mov
push
add
movsb
adc
inc
fiaddl
push
popa
mov
add
call
inc
jb
pop
je
lret
add
xchg
jne
pop
cmpsb
dec
push
or
in
dec
xor
jp
or
mov
adcl
jmp
jge
xor
sbb
and
repnz
jns
cmpb
rorb
inc
out
push
mov
in
pop
and
add
leave
or
int3
pop
add
daa
lods
sub
jge
lock
pop
std
adc
cmp
mov
repnz
xor
xor
lret
lret
and
mov
push
scas
inc
mov
lahf
test
lcall
sub
fld
ja
sub
mov
pop
imul
lock
outsb
and
inc
push
stos
adc
mov
push
sbb
popa
gs
ficomps
xor
mov
jg
jmp
push
mov
stos
xor
or
dec
dec
stos
imul
xor
or
cmpsl
mov
outsb
sbb
or
cli
add
jne
inc
xor
in
cmp
xorb
mov
aaa
pop
push
xchg
popa
iret
cmpsb
mov
xchg
lds
push
test
mov
outsl
xor
cmc
jmp
xchg
mov
call
add
jne
inc
ret
sbb
pop
ret
sub
sbb
sbb
arpl
xlat
mov
jne
lret
adc
adc
xchg
cmp
cmp
cmp
inc
jg
push
rol
test
push
adc
das
daa
loopne
shlb
cmp
leave
das
pop
adc
out
xor
ljmp
mov
dec
jl
inc
sbb
xchg
inc
js
ret
mov
scas
arpl
and
pop
test
ret
sbb
cmc
nop
rclb
lret
and
and
push
ljmp
sub
sahf
out
push
rolb
dec
ds
sahf
out
inc
inc
or
pop
faddl
out
xchg
cmp
cmp
dec
xor
out
jns
jnp
dec
fsubrs
les
push
cmpb
cmp
and
cmp
mov
push
adc
dec
xor
jae
mov
es
lods
roll
pop
sarb
nop
fsts
mov
jle
and
dec
xor
ret
jne
mov
jno
lahf
mov
lods
jnp
adc
jno
inc
ret
adc
xchg
push
lahf
cmp
dec
add
mov
in
stc
lret
inc
movsb
push
into
add
clc
mov
add
bound
add
mov
mov
leave
add
add
add
push
add
gs
sbb
popa
je
mov
sahf
or
add
daa
dec
add
out
pop
push
dec
or
loop
xor
adc
cmp
and
pop
pop
xor
add
jmp
add
inc
or
repnz
push
imulb
dec
push
dec
sbb
inc
ja
push
pop
pushf
decb
push
pop
sub
and
pop
mov
push
add
movl
push
mov
testl
dec
add
mov
inc
jo
add
sbb
in
push
inc
mov
ret
dec
add
adc
pop
pop
push
insl
mov
fs
jo
add
add
fs
enter
cmp
or
in
mov
cmp
test
in
jo
inc
push
push
pop
sbb
cs
arpl
xchg
out
inc
mov
and
in
push
or
sub
cs
das
mov
push
xor
ja
pop
lret
or
insl
xchg
and
popa
js
fwait
jbe
xlat
pop
in
add
sub
mov
push
sbb
and
or
push
inc
pop
stc
pop
or
push
inc
push
pop
inc
add
push
inc
push
inc
scas
pop
fcoms
call
shl
outsb
clc
pop
jbe
inc
ja
push
shrb
xor
jns
and
xor
les
push
push
pop
in
inc
jp
ret
xorb
xchg
pop
xor
addb
imul
jbe
or
inc
dec
inc
jp
jns
push
xchg
dec
or
mov
and
add
jecxz
sub
adc
lahf
pop
sub
push
bound
dec
mov
mov
pop
ret
cmp
adc
push
ds
es
or
jae
dec
dec
mov
mov
and
sub
ss
mov
add
add
prefetch
or
cmovs
mov
fisttps
sbb
out
mov
das
mov
popa
and
cmp
or
and
mov
test
shl
int
pop
add
push
jb
xor
sahf
push
fs
data16
aaa
add
gs
add
daa
jmp
or
jns
xchg
mov
jo
mov
mov
sub
add
sbb
or
or
int
lret
push
adc
cmpsb
xchg
add
or
sahf
push
or
add
out
cltd
sub
pop
sbb
or
pushf
pusha
ret
jo
addr16
adc
jo
scas
cmp
adc
push
arpl
and
pop
and
push
gs
cltd
loopne
adc
lea
mov
xor
xor
and
mov
xor
mov
rorl
mov
fs
out
mov
mov
push
jb
insl
popa
jb
or
or
mov
pushf
cmpsl
adc
scas
push
outsb
pusha
popa
add
repz
jo
xorb
or
orb
lea
xor
lret
pop
push
xchg
arpl
dec
imul
or
iret
add
enter
or
sbb
loopne
push
rcr
ficomps
sbb
roll
mov
jo
xchg
cmp
sub
dec
das
sti
ret
rcrb
das
xchg
lret
add
adcl
push
jo
jg
push
dec
outsb
jnp
add
mov
fs
loopne
mov
or
clc
pop
add
inc
test
adcl
dec
pop
xchg
add
lcall
xor
cmp
imul
pop
push
xor
push
inc
cwtl
sub
pop
inc
add
stc
jb
inc
cld
pusha
insb
inc
mov
add
inc
jl
inc
sbb
stc
add
test
add
imul
push
inc
mov
imul
in
jb
insb
inc
pusha
jae
sub
bnd
add
addb
inc
push
repnz
mov
inc
les
mov
divl
movsb
sbb
lahf
and
ja
mov
repz
mov
cmp
in
push
push
xor
push
push
iret
fs
or
mov
jno
and
add
ljmp
mov
add
add
add
adc
push
dec
xchg
inc
or
insl
mov
pop
call
add
or
mov
test
test
jp
mov
stos
sub
or
or
mov
pushl
ljmp
ljmp
shl
bound
or
rorb
pop
push
mov
xor
push
clc
pop
nop
cs
movsb
push
faddl
push
in
xchg
hlt
mov
push
push
adc
movsl
sti
into
idivb
clc
clc
cmpsb
ds
xchg
push
int3
jae
cmpsl
fnstcw
fadds
sarb
jl
sahf
imulb
cwtl
es
popf
sahf
push
adc
fnstcw
insb
fsubs
mov
mov
inc
mov
push
lahf
cmpsl
cmp
nop
test
cs
mov
idivb
xchg
jne
imul
pop
pusha
or
pusha
testb
rcrb
push
mov
mov
xor
or
pop
inc
sbbb
cmp
add
sbb
imul
pop
push
adc
aas
pop
lret
shll
cwtl
and
push
or
adc
pop
bswap
loopne
js
push
add
insb
add
mov
push
insb
dec
loope
call
add
rcll
xchg
scas
dec
cs
gs
jg
push
inc
add
push
mov
insl
add
aam
or
adc
add
bound
je
sub
lcall
adc
sub
jne
jecxz
stos
and
cs
pop
loop
inc
scas
push
mov
or
fisubl
xchg
push
in
xlat
cmp
mov
push
lock
dec
inc
mov
sbb
or
sub
or
inc
mov
dec
mov
xor
mov
push
add
rcl
rolb
and
les
into
lds
mov
add
and
ret
sbbb
mov
and
inc
lods
push
test
arpl
das
pop
sbb
int3
adc
dec
or
or
dec
mov
incl
push
sub
or
xor
jmp
movsb
stc
aam
mov
icebp
jmp
mov
sub
dec
sub
cmovs
jbe
lock
out
pop
jns
xchg
pop
push
or
xor
xor
or
cs
insb
fs
dec
fucomi
dec
jecxz
les
adc
push
ret
or
inc
pop
jg
insb
or
jnp
inc
jnp
xor
mov
xor
loopne
and
mov
outsb
inc
vzeroall
inc
mov
xor
jnp
mov
stc
mov
pop
xor
jle
and
xchg
xchg
mov
xor
enter
addb
adcb
push
out
push
sbb
iret
cmp
and
push
mov
in
cmp
and
jne
data16
ja
pshufw
icebp
cwtl
jle
incb
dec
insl
fbstp
inc
repnz
inc
es
movsl
jbe
jle
jl
jmp
aad
pop
xchg
or
in
cmp
cmp
andb
sub
aas
or
pushf
pop
xchg
pop
push
inc
push
stc
in
inc
cmp
push
ds
cmpb
nop
aas
and
sbb
loopne
cwtl
cwtl
cmp
imul
sub
ret
xchg
je
nop
ja
cli
rolb
or
lock
jns
and
fadds
dec
outsb
pop
enter
jns
mov
test
in
mov
jl
test
and
orl
inc
test
leave
dec
dec
or
stc
inc
sahf
push
or
push
add
mov
test
lock
test
inc
inc
and
and
in
inc
xor
adc
dec
in
inc
push
orb
in
inc
push
mov
cmp
ja
push
in
inc
enter
push
in
inc
jns
dec
xor
mov
cmp
add
repnz
inc
inc
push
test
adc
push
dec
mov
cs
dec
push
push
hlt
loopne
sahf
push
das
mov
popa
imul
inc
pop
pop
enter
jbe
rcrb
inc
cmp
adc
les
mov
rcrl
and
jp
pop
lods
inc
pop
in
inc
orb
rcrl
mov
and
repnz
stos
hlt
test
or
xchg
fsubl
mov
mov
xchg
int3
mulb
into
mov
les
lods
push
mov
add
push
pop
sub
inc
adc
testl
adc
xor
inc
imul
inc
mov
iret
push
push
mov
inc
cmp
lret
inc
das
cmp
sysret
sbb
dec
inc
xor
dec
ds
mov
inc
xchg
test
nop
mov
scas
in
inc
and
add
adc
mov
lods
pop
mov
add
mov
dec
push
andps
or
mov
add
pop
or
stos
adc
jge
mov
sbb
xchg
add
mov
sub
jne
cmpsb
out
jmp
push
je
pop
add
push
inc
lock
jne
movsb
aaa
and
call
mov
xor
push
fisubrl
stos
sub
int
les
add
mov
pusha
xchg
sbb
pop
es
sub
inc
pop
inc
ljmp
push
or
adc
dec
pop
mov
bound
fsubrs
add
lret
jl
divb
adc
out
push
hlt
mov
jo
inc
xchg
xor
addl
mov
inc
cld
mov
sub
and
ficomps
ss
stc
lds
or
mov
in
insb
pop
xor
lcall
dec
popa
pop
push
or
inc
inc
mov
ja
dec
cmp
je
push
sbb
or
ss
push
push
or
test
sbb
push
orb
jmp
and
xor
lahf
pop
in
cmp
dec
or
xor
inc
ret
or
movnti
xrstors
xor
ficoms
cmp
inc
or
or
xor
mov
cmp
sub
inc
cs
movsl
into
inc
inc
mov
xor
add
xchg
push
xchg
push
call
mov
jno
jns
sub
je
pop
pop
cmp
dec
xor
cmp
cmp
clc
and
ror
movsl
in
push
loopne
dec
sbb
insb
push
pushf
lock
inc
fdivp
mov
add
add
cs
in
or
adc
pop
es
adc
sbb
sub
fisubl
jb
andb
xchg
int3
movsl
popa
mov
out
ja
testb
sbb
xchg
adc
add
jbe
cs
add
add
xchg
jb
push
fiadds
mov
xchg
push
sahf
xchg
pop
push
jb
test
aam
in
dec
add
dec
enter
negl
ret
pop
pop
pop
push
push
lds
push
es
add
inc
jns
or
test
xchg
and
out
js
stos
pop
add
mov
mov
movsl
push
test
or
push
inc
or
pop
cs
fwait
adc
and
or
sbb
notb
ds
push
inc
add
jge
add
pop
and
es
xor
or
sub
push
inc
rorb
push
adc
aam
inc
test
push
or
outsb
or
shlb
pop
dec
sarb
add
or
sub
or
imul
xor
or
mov
pop
sub
pop
cld
add
sbb
inc
and
inc
add
sub
insl
mov
inc
jno
add
add
xor
push
test
repnz
and
xor
xor
push
hlt
es
mov
dec
and
in
or
adc
dec
leave
mov
xor
add
xchg
push
sub
sub
jne
dec
add
ret
adc
push
add
je
inc
mov
jg
cwtl
inc
xlat
cmp
cmpb
mov
lods
push
push
cmp
xchg
mov
jmp
sub
and
add
mov
inc
add
adc
xchg
sub
pop
mov
lods
jecxz
fadd
repz
xchg
mov
cli
adc
dec
nop
add
sbb
jle
imul
xchg
add
lock
mov
cmp
push
fcomps
add
adc
ret
rorb
and
pusha
adc
inc
mov
insb
inc
sbb
addl
std
popf
push
pop
hlt
neg
jmp
add
test
push
push
inc
pop
xor
xor
push
xor
jmp
push
test
es
or
push
repnz
push
mov
add
mov
cmp
aas
xchg
test
movsb
jmp
outsb
loopne
lret
mov
setl
cmpsl
into
fiaddl
push
sbb
aas
addl
inc
add
hlt
xor
movswl
push
shrl
sub
xorl
ss
push
lret
daa
xchg
jecxz
pop
sbb
rorl
scas
imul
fs
xchg
sbb
shl
inc
cmp
lar
mov
xor
or
jp
ss
cmp
adc
dec
or
adc
and
lret
xchg
pop
test
lea
lods
inc
mov
mov
test
or
ret
rclb
scas
adc
xchg
sti
and
cs
sub
or
jmp
xor
push
jmp
insb
aaa
and
dec
sub
dec
pop
push
aas
sbbb
incl
dec
cmp
ret
fimuls
adc
inc
jmp
insb
leave
mov
sub
push
fisubs
mov
sbb
jmp
sahf
out
push
and
dec
xchg
popf
out
clc
cltd
daa
or
aaa
add
jp
sbb
jo
dec
inc
xor
jl
mov
jle
push
ss
adc
dec
inc
dec
out
fs
shll
and
sbb
sbb
push
sbb
or
and
pop
mov
cmp
movb
push
push
jne
mov
inc
sbbb
or
imul
push
cli
movsb
jno
cmp
andb
pop
sub
or
and
inc
push
push
dec
inc
filds
lock
fisubrs
pusha
popa
inc
jp
adc
pushf
or
xchg
popa
shlb
inc
jae
pop
fs
inc
pop
add
push
add
adc
out
add
push
hlt
outsb
sarl
je
pop
das
rcrb
mov
inc
enter
sbb
pop
xchg
sahf
mov
inc
nop
xchg
dec
xchg
mov
push
pusha
push
and
pusha
mov
pop
or
inc
or
dec
xchg
xor
xchg
add
xor
ds
cwtl
lret
or
dec
insl
and
xchg
push
add
mov
js
dec
push
dec
fadds
cwtl
xor
and
bound
add
cmp
jo
xchg
les
stos
or
cld
mov
popa
dec
xchg
cmp
cmp
dec
xor
inc
sbb
cmp
cmp
sbb
shr
inc
pop
add
ja
js
or
push
xor
and
cmp
cmp
xor
test
push
sub
jb
cmpsl
xchg
pop
sub
or
xlat
cmpsl
push
sbb
and
mov
lods
adc
stos
lock
lods
ret
push
and
push
mov
dec
sbb
clc
sbb
sub
rorb
loop
shll
nop
add
xchg
adc
popf
nop
inc
or
cmp
test
dec
dec
ljmp
out
aas
or
notb
jle
mov
add
movb
mov
dec
lea
scas
ret
xchg
int3
rolb
or
or
test
add
xor
fmuls
je
and
cwtl
jno
outsl
xchg
sub
jno
insb
incl
cmp
andb
push
inc
or
sub
test
mov
xchg
push
sub
and
mov
ds
push
mov
dec
addb
inc
ret
add
mov
je
cmp
pop
in
dec
dec
add
lcall
push
add
mov
mov
sub
mov
mov
add
iret
lock
inc
mov
or
add
inc
mov
fldl
rclb
push
dec
loope
xorl
pop
jae
sub
add
jge
mov
por
mov
pop
dec
and
mov
in
push
inc
cmp
xchg
add
jns
emms
push
inc
lock
pop
sub
push
adc
inc
fcmovu
pop
lock
adc
sarl
xchg
pop
je
mov
sbb
sbb
or
stos
outsl
pusha
adc
fists
pop
or
xchg
test
sbb
test
leave
push
ja
jmp
pop
in
mov
add
loope
sub
loope
pushf
or
negb
inc
mov
xor
or
and
dec
lret
inc
popa
or
repnz
inc
inc
mov
aaa
cmpsb
aad
dec
adc
mov
xor
mov
or
loopne
adc
cli
xor
fcoml
mov
push
cmp
or
sbb
test
sbb
adc
clc
adc
into
push
adc
push
push
lea
push
add
mov
cmp
and
addl
outsl
or
lds
sbb
fucomi
sahf
mov
pop
mov
dec
mov
jle
mov
mov
inc
es
call
in
sbb
mov
or
call
xor
test
xchg
sub
jge
or
out
adc
xchg
push
hlt
fidivs
std
adc
sub
inc
dec
scas
cmp
xchg
add
sbb
adc
mov
or
aam
popa
in
add
ja
repnz
dec
pusha
add
xchg
mov
push
add
xorb
repnz
aaa
lea
movb
cwtl
je
pop
dec
je
mov
addl
push
outsb
add
je
leave
inc
adc
dec
test
hlt
mov
stos
pop
fstps
xor
pop
cmp
pusha
jne
jg
and
jg
mov
cmpsl
pop
test
pop
jns
ret
mov
ds
sbb
mov
or
jae
inc
sub
xor
pop
dec
push
adc
xchg
test
testb
mov
sbb
pop
sbb
fcoms
decb
adc
test
addr16
pop
push
cmp
mov
pop
and
and
out
or
add
arpl
jb
pop
lds
addl
addb
adc
or
cmpsb
sahf
xchg
mov
pop
or
jg
mov
cmp
push
inc
mov
mov
lods
rcrl
pop
sbb
or
xchg
jae
cmp
add
dec
sub
xchg
pop
popl
gs
pop
cld
and
pushf
enter
add
rorb
add
cmp
inc
inc
or
pop
lods
in
shll
addr16
or
or
aaa
mov
scas
loope
stc
cltd
aam
push
sbb
fs
outsl
in
inc
mov
enter
imul
dec
jp
sbb
testb
and
mov
movsl
mov
daa
fisttps
add
ret
pop
js
pushf
and
xor
or
mov
jl
nop
xor
clc
cs
cwtl
xchg
dec
cmpl
inc
cmp
das
aaa
mov
cltd
lea
daa
orl
lret
xor
lock
sub
adc
and
mov
fldl
int3
sub
sub
or
sbb
add
or
and
jl
in
sbbl
stc
fisubl
es
notl
inc
sub
lcall
adc
and
fs
int3
push
test
adc
jne
sbb
and
or
insb
cld
cmpsb
push
push
stos
adc
test
mov
dec
add
jl
jp
dec
out
es
jmp
add
cli
mov
cwtl
pop
mov
mov
push
xchg
or
xchg
xchg
popa
inc
out
xchg
pop
inc
xchg
fwait
mov
sbb
xor
lods
jecxz
popa
cmp
cmp
stc
push
mov
inc
add
cmp
inc
out
out
mov
int
mov
mov
sbb
push
lock
and
or
and
sarl
movsl
ror
add
in
pop
xchg
pop
inc
lods
shlb
ljmp
iret
push
xchg
sub
dec
in
neg
inc
popf
fmull
xchg
add
inc
mov
or
daa
pop
andb
rorb
outsl
bound
xchg
lods
inc
insl
mov
fsubs
mov
ja
loop
mov
push
loope
sub
rcl
cs
sub
setne
dec
mov
pop
insb
dec
jp
jle
jne
cmp
fs
add
cmp
scas
xchg
testb
imul
lds
mov
in
cmp
enter
pop
xchg
loopne
lcall
push
mov
sbb
dec
add
push
imul
out
daa
lods
leave
inc
mov
xchg
fcoml
mov
fcom
xor
adc
ss
out
cltd
mov
imul
jo
dec
pop
dec
add
hlt
adc
push
cld
pop
shlb
push
and
push
and
jo
xchg
clc
adc
das
cmp
sbb
popa
dec
out
pop
jbe
push
or
xchg
repz
sbb
pop
addb
xchg
fnstsw
and
lods
aaa
add
and
push
push
adc
push
jb
sbb
leave
add
insb
and
sub
test
nop
jae
fwait
dec
lea
mov
xchg
mov
in
enter
push
loope
sbbl
and
out
add
test
inc
inc
mov
and
inc
or
loope
jo
out
fildll
mov
xor
mov
pop
or
mov
sbb
call
das
add
popa
sbb
movsb
ret
arpl
out
inc
nop
iret
adc
adc
jns
dec
add
mov
and
mov
scas
push
mul
jo
int
test
in
shlb
imul
cmpsb
xor
sub
lods
cmpsb
pusha
add
mov
xor
lahf
pop
push
mov
stc
shll
or
add
sbb
pop
sub
push
add
imul
hlt
lods
sarb
inc
inc
mov
and
aas
cmpb
hlt
xchg
jnp
sbb
lock
outsl
sbb
das
xlat
andl
pop
pop
pushf
cwtl
mov
cmpb
jp
jl
cmpl
addl
or
mov
out
mov
add
adcl
push
xchg
add
nop
add
out
repnz
mov
mov
mov
aas
push
dec
cs
enter
sbb
frstor
enter
pop
jmp
cmpl
sahf
mov
pusha
xchg
fdiv
cmp
sub
add
mov
or
mov
mov
push
pop
repnz
inc
cmp
sub
mov
add
ss
xchg
xor
xor
gs
pop
sub
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
out
mov
push
outsl
sbb
mov
aad
lock
mov
push
cwtl
pop
mov
in
fwait
or
lods
mov
add
aam
shll
add
je
xchg
inc
dec
dec
insl
stos
xchg
dec
xlat
int3
rcrb
push
push
or
mov
add
test
pusha
mov
int3
adc
jo
mov
mov
fiadds
jbe
or
ficompl
stos
add
cmpb
insb
xchg
enter
xchg
push
pop
testb
fildl
mov
cmpsb
adc
pop
xchg
cmp
cwtl
enter
sub
orl
insb
test
cmp
lods
popf
xor
and
add
add
adc
test
add
lahf
mov
push
out
and
xchg
pop
fiaddl
inc
popf
cmpsb
push
pop
mov
sbb
std
loop
inc
xor
mov
mov
sub
add
sub
lahf
pop
add
and
lea
cli
inc
jg
mov
in
ret
jb
or
push
dec
or
test
dec
xchg
cmp
sbb
jg
insl
lcall
cmpb
xor
pop
pop
aam
pop
jne
sbb
fsubrl
cmpsb
loope,pt
jne
inc
xor
pop
loope
or
fistpl
sub
addr16
and
or
inc
imul
mov
xchg
push
cwtl
repz
push
jbe
fiadds
add
nop
cs
jbe
inc
aam
lret
push
mov
lret
stos
in
jo
lock
test
scas
movsl
sub
lea
adc
insb
pop
or
add
or
rcrb
lea
sub
test
dec
or
pusha
mov
mov
mov
dec
jnp
mov
push
inc
dec
test
jmp
ret
dec
push
stc
pop
hlt
xor
inc
mov
hlt
pop
pop
dec
sub
mov
and
in
lret
sub
shlb
gs
fld
loope
mov
xchg
hlt
nop
add
rorb
pop
push
out
arpl
mov
lock
arpl
cmp
loope
andl
pop
xor
clc
push
rorb
or
adc
adc
adc
lock
mov
or
add
add
mov
data16
xor
repnz
inc
or
or
xor
sbb
add
adc
arpl
and
sbb
adc
leave
movsl
adc
or
inc
outsb
xchg
in
mov
sub
fs
push
mov
or
add
jb
jbe
add
cmovs
sarl
dec
xor
inc
shlb
shlb
pop
leave
cmp
push
adc
xchg
mov
call
arpl
mov
xchg
stc
add
mov
popf
sub
je
and
sarb
add
mov
mov
fiaddl
add
out
pop
sbb
dec
xchg
add
popa
cmp
fidivs
es
shr
add
loope
xor
loopne
adc
ret
jmp
or
daa
movsb
sub
pop
mov
popa
add
dec
jae
inc
adc
popa
dec
mov
adc
or
outsl
lcall
mov
neg
xchg
movsb
testl
in
sbb
cmp
lret
leave
sbbl
leave
arpl
push
fcmovnu
sti
in
sub
inc
pop
decl
pop
add
cs
and
add
notb
push
cmp
jle
sub
push
adc
push
inc
sbb
push
push
aaa
adc
add
andl
push
popa
or
notb
mov
addr16
or
push
adc
lds
mov
or
mov
iret
inc
add
push
pop
lret
cmp
lock
vfnmsub231ps
xor
test
adc
jne
sub
in
in
jne
push
pop
add
xchg
cld
shl
je
js
jle
mov
adc
mov
cmp
xchg
or
pop
sbb
cmp
imul
xor
and
nop
pop
and
and
xor
sub
je
adc
in
aad
leave
pop
inc
mov
test
cli
sarl
mov
aas
inc
jno
pop
inc
ds
rol
icebp
add
sarb
mov
test
jle
movsb
lea
adc
cmp
je
xchg
push
cmp
sbb
xor
bound
mov
mov
iret
jmp
sbb
daa
mov
test
inc
mov
dec
cmc
jo
movsl
and
and
xor
pop
testl
inc
lcall
xchg
movl
push
push
sbb
mul
xchg
mov
cmp
or
add
add
das
adc
bound
inc
jecxz
xchg
push
and
inc
dec
shl
cmp
mov
out
add
push
xchg
aas
addr16
fcompl
pop
sbb
inc
pop
mov
sbb
xor
insl
sbb
add
enter
and
aas
ljmp
adc
adc
shll
jae
and
por
add
cvtps2pd
es
les
jo
inc
setg
int3
jns
test
add
mov
cmpb
in
icebp
imul
xchg
pop
or
arpl
ret
sbb
add
dec
enter
xor
cmp
jl
stos
mov
xchg
test
cmpb
cmpl
es
popf
xor
pusha
ror
xchg
and
arpl
lds
push
jns
daa
xorl
std
or
mov
int
inc
adc
mov
inc
cmp
adc
mov
test
ret
hlt
je
add
mov
mov
jnp
shlb
jo
cld
pushf
movb
popf
xorl
inc
daa
pusha
push
pop
fdivs
xor
repnz
inc
xchg
adc
movsl
sbb
cmpl
hlt
xor
xchg
or
je
enter
adcl
or
push
iret
imul
std
or
and
outsb
sub
dec
je
add
push
mov
ret
inc
mov
sbb
push
add
and
jbe
sbb
jmp
int
fwait
cli
aam
popa
add
cltd
mulb
jmp
aaa
lar
cli
push
mov
lods
pop
data16
or
jae
jnp
push
pusha
inc
jmp
push
sar
cmpsl
lock
adc
push
ret
and
adc
inc
pop
loope
fwait
and
inc
add
dec
cwtl
xor
xor
imul
add
sub
sbb
andb
loopne
orb
and
push
push
inc
scas
sub
cmp
push
push
jo
inc
pop
add
jg
xchg
sub
mov
ja
mov
and
jne
repnz
fld
mov
mov
xor
pop
in
push
or
jb
in
cs
sub
mov
pop
and
sbb
dec
mov
adc
lret
or
shl
xor
bound
popa
add
out
push
dec
adc
mov
mov
inc
xor
mov
ja
add
outsb
mov
data16
push
flds
push
xor
add
cwtl
push
fidivrs
pop
lods
or
adc
cmp
pop
cmp
or
notl
sbb
cmpsl
pop
and
sbbb
xchg
outsl
sbb
push
push
mov
dec
rcr
test
mov
add
jp
sar
dec
mov
push
fisttps
sahf
aam
mov
sub
cmp
cmp
pop
add
push
cmp
fsubrp
pusha
sub
pop
dec
pop
sub
pop
sub
push
sti
addl
in
push
push
xor
adc
xlat
es
adc
add
add
aaa
mov
imul
dec
rclb
add
sbb
cwtl
mov
int
lods
sbb
inc
push
mov
pusha
pop
adc
sbb
or
pop
pop
xchg
rcl
add
push
xor
inc
sub
inc
loopne
adc
incl
add
ja
add
cltd
les
ret
cli
jne
cmpl
subb
and
call
movl
aad
pop
or
jbe
fsubp
add
aas
jb
mov
movsl
sbb
adc
pop
sub
dec
lea
mov
pusha
mov
add
loope
mov
in
and
mov
mov
lcall
push
or
jge
adcl
mov
sbb
sbb
xor
cs
mulb
add
jne
push
inc
lcall
dec
rorb
dec
das
mov
pop
xor
xor
add
inc
xchg
inc
loopne
or
and
push
mov
fdivs
sub
ret
sahf
subb
cld
add
xchg
fiaddl
cmp
inc
dec
pusha
sbb
rcr
scas
or
pop
pusha
jo
in
pop
sub
add
jo
sbb
cmp
ret
and
lret
adcb
sbb
dec
fidivrs
aas
add
push
or
sub
sbb
pop
call
mov
sub
scas
add
jo
insb
xlat
lahf
inc
in
test
or
gs
adcb
test
add
cmc
and
pop
repz
mov
scas
jae
adc
and
push
jae
in
repz
es
add
inc
xchg
mov
mov
xchg
rorb
mov
dec
xchg
add
sbb
or
jno
pop
js
shll
es
sbbl
sub
mov
xor
pop
pop
subl
inc
dec
push
ret
and
and
es
lods
test
or
adc
jge
test
jne
lea
test
pop
mov
hlt
inc
in
push
loopne
or
movhps
shll
lock
dec
shll
add
and
push
jnp
push
cmp
sti
xor
jp
cmp
aaa
orb
mov
jge
sub
mov
pop
incl
decl
clc
inc
fs
out
push
cwtl
pushf
fwait
xchg
xchg
mov
test
call
adc
and
or
loopne
loop
and
popa
and
shl
inc
or
inc
dec
mov
add
inc
cmpl
jne
inc
sahf
inc
bound
cmpl
adc
call
daa
push
inc
mov
inc
cmp
ret
faddl
fbstp
ret
insl
movsb
mov
jne
test
cmp
mov
ja
iret
or
in
sarb
cwtl
mov
or
inc
out
les
pusha
sbb
lock
ret
js
nop
out
jns
mov
dec
cmp
sahf
cs
ret
rorb
je
lret
pop
pop
sub
movsb
dec
xor
incl
dec
insl
jne
cmp
cltd
repz
sbb
fs
adc
dec
mov
movsb
arpl
pop
sbb
mov
es
jbe
jno
dec
dec
into
mov
and
add
inc
jmp
aam
push
or
pop
sbb
shrb
stos
clc
mov
pushf
rclb
adc
aam
sahf
mov
ss
add
pop
pop
popw
cmp
dec
not
mov
add
mov
xor
mov
sti
push
daa
jmp
and
sbb
movsb
mov
sbb
mov
lods
inc
loopne
mov
jmp
dec
nop
fiadds
loopne
or
lea
sbb
jne
sub
push
xchg
xchg
in
sub
jmp
jnp
jnp
or
push
fsubrl
xchg
sahf
mov
sbb
incl
cmp
mov
mov
and
pop
mov
es
jp
push
lods
mov
cltd
push
jp
sbb
outsl
nop
and
or
mov
cwtl
adc
cmp
mov
push
inc
out
sub
orl
xchg
xor
jge
mov
call
and
push
cmc
sbb
xchg
xor
dec
xchg
jbe
mov
sbb
testl
push
out
mov
pop
and
roll
mov
sahf
ss
push
adc
movsl
popa
mov
mov
shlb
pop
pop
aas
sti
decb
dec
iret
je
cmp
je
jg
sbb
mov
loopne
push
sub
mov
push
andl
sbb
cmp
and
mov
mov
test
test
test
pop
inc
adc
cs
mov
ds
cmp
sub
orl
sbb
push
xchg
push
mov
loopne
les
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
mov
dec
dec
mov
cmp
inc
cmp
lahf
js
nop
xor
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
xor
fildl
insb
cltd
hlt
fistl
pop
pop
add
dec
mov
mov
ja
dec
data16
sbb
int
dec
loope
pop
xchg
xchg
inc
push
pop
daa
lods
aam
mov
mov
xchg
mov
dec
jne
arpl
cmp
sub
and
aas
push
or
sub
mov
mov
push
inc
adc
out
xchg
mov
jmp
push
adc
sti
cmp
xchg
mov
nop
loopne
hlt
mov
push
popl
dec
push
addr16
add
shrl
or
stos
das
mov
mov
daa
push
adc
popl
jp
adcl
jno
pop
shlb
sarb
lret
testb
lods
sbb
clc
ficompl
fwait
add
test
xchg
xchg
sbb
mov
sub
sbb
dec
lock
add
mov
movl
fdivs
sbbl
js
push
sbb
add
pop
or
jo
popf
sub
imul
add
pusha
xchg
addr16
adc
mov
xchg
adc
jne
fwait
add
cmp
data16
dec
add
mov
cwtl
sbb
push
or
stos
lret
outsb
or
xchg
and
addb
pop
adc
loopne
inc
sbb
add
sahf
pop
add
inc
xor
add
fmul
and
fbld
imul
mov
cmc
pop
addr16
xor
js
addr16
pop
xchg
dec
add
roll
insl
or
sbb
push
xor
or
add
xor
in
scas
dec
add
pop
out
add
cld
adc
ja
mov
lock
cmp
push
and
das
sub
inc
add
inc
movsb
inc
push
inc
scas
sub
push
xchg
cmp
add
loope
inc
daa
inc
dec
sub
rcrb
rolb
int3
aad
xchg
sbb
rclb
adc
pop
ss
arpl
push
push
mov
jbe
xor
rolb
loope
jmp
iret
dec
xor
loopne
jno
clc
inc
jo
pop
adc
jbe
mov
sbb
add
mov
or
nop
cmp
mov
pop
xchg
jae
push
inc
adc
repnz
enter
push
dec
mov
sub
shlb
push
fsubrl
dec
add
push
sbb
nop
into
push
xchg
mov
paddusb
or
sbb
jno
jno
shlb
or
popw
adc
mulb
or
or
outsb
mov
dec
jmp
pop
into
movb
fldenv
xor
add
dec
out
cmp
out
xor
dec
pop
ret
mov
addr16
lods
test
stos
out
stc
cmp
ljmp
fadds
inc
pop
adc
cmc
mov
mov
or
mov
ret
int
mov
es
add
sbb
sbb
hlt
sub
add
scas
inc
or
loopne
out
and
add
shlb
leave
xlat
outsb
out
xor
leave
sub
mov
push
add
cmpl
int
adc
add
push
add
sbb
das
mov
cmp
hlt
movb
jne
outsb
adc
inc
dec
xlat
add
and
or
cmc
sbb
xchg
fs
cwtl
mov
xchg
ficoml
pop
dec
cltd
xchg
loopne
stc
fiaddl
xor
rorb
cmp
xor
int
idivl
mov
insl
lcall
xor
push
cmp
mov
jmp
fadd
notl
xchg
lea
mov
sub
and
xchg
testb
cmpsb
jne
inc
sbb
in
cmp
adc
or
sub
clc
push
push
sub
loopne
adc
sub
js
inc
jb
or
push
fsts
sub
dec
mov
mov
sub
pop
dec
hlt
adc
in
dec
imul
mov
sub
mulb
xorl
inc
and
daa
lods
data16
and
sbb
insb
rclb
mov
psubd
add
sub
popa
or
add
int
push
loop
mov
scas
fcoml
push
loop
incb
add
jo
or
push
or
adc
in
sub
add
and
in
iret
push
inc
push
inc
dec
cmp
mov
pop
loopne
lock
gs
and
repnz
clc
push
and
sub
lahf
xor
mov
pop
dec
inc
mov
sub
and
push
jmp
jl
popa
pop
mov
xchg
cmc
dec
lret
jb
jmp
lret
gs
add
rcrb
ss
sub
int
jge
ret
xor
mov
mov
sub
mov
or
and
xchg
aaa
pop
sub
jle
push
iret
adc
call
or
bound
mov
clc
mov
sbb
sub
repnz
inc
std
add
rcrl
mov
ds
push
les
cltd
andb
dec
mov
in
rcll
sbb
pop
sub
movl
mov
pop
jne
pop
xchg
mov
sub
mov
xchg
rclb
int3
xor
test
imul
jne
arpl
gs
or
xor
cmp
or
imul
xchg
dec
jns
cvtps2pi
les
push
push
add
dec
or
or
pop
sti
jo
jmp
jne
jne
jmp
clc
xchg
subb
pop
dec
sbb
pop
inc
sbb
inc
add
pop
add
pop
mov
add
inc
popf
cmp
inc
and
mov
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
dec
pop
or
dec
icebp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
movsl
in
aaa
enter
jb
scas
or
insb
in
or
in
sub
lds
jge
test
loope
pop
push
add
add
les
push
shll
das
mov
and
mov
inc
cmp
and
fcomps
push
cmp
adc
and
dec
mov
mov
and
sbb
pushf
adc
add
xor
inc
daa
mov
icebp
addr16
inc
inc
lods
pop
adc
xchg
sbb
sbb
mov
xchg
ja
cmpb
dec
mov
pop
bound
pop
popa
inc
pop
push
add
repnz
push
cld
push
repnz
ret
sahf
inc
add
fildl
in
fisubrs
in
push
and
cmp
jg
dec
mov
popf
xchg
pop
test
adc
bnd
xchg
push
or
scas
aam
mov
inc
mov
or
sub
daa
adc
sbb
jne
jp
xor
xchg
cmp
mov
test
filds
pushf
xor
adc
rclb
xchg
pop
inc
sub
mov
ret
add
add
mov
or
inc
rdpmc
fildl
or
sbb
pop
push
por
js
jmp
cwtl
adc
pop
call
popa
sub
xchg
inc
aaa
in
adcl
cmp
out
xor
inc
and
add
add
cwtl
mov
xchg
add
mov
sub
and
nop
ja
loopne
push
nop
aaa
cmpsl
and
cwtl
sub
shrb
cmp
pop
aas
je
or
jle
add
loopne
cld
inc
inc
add
xchg
loopne
pop
stos
imul
je
mov
sbb
sarl
shll
fs
mov
aad
cwtl
test
insb
xchg
into
lcall
data16
or
arpl
cmpsb
sub
jbe
and
in
inc
mov
sub
ret
add
and
les
ds
aam
cmpb
lret
dec
out
fcmovu
sub
aad
daa
and
mov
sub
mov
push
rol
mov
arpl
mov
dec
pop
cmpsl
push
and
std
xor
add
shlb
sbb
in
pop
jl
sbbl
mov
push
pop
popa
aam
add
cmp
loope
or
cmp
out
in
jo
dec
pop
lock
jo
inc
negl
adc
push
cli
outsb
call
and
sub
mov
xchg
push
push
xor
mov
adc
and
inc
mov
sub
push
add
js
jno
dec
sub
add
rcrb
pop
adc
adc
insb
loope
lea
and
daa
mov
sbbl
nop
xlat
jnp
mov
cmp
push
fistl
mov
xor
push
inc
sarb
lods
js
shrl
nop
das
jne
mov
rclb
sbb
ret
loopne
dec
cmpsl
mov
pop
sub
cwtl
or
dec
addl
xchg
push
xchg
dec
pop
mov
inc
adc
js
push
jbe
ss
loop
incb
cs
mov
sbb
shll
push
rcll
or
scas
popa
out
insl
dec
cmpsb
or
cltd
and
dec
xchg
xchg
and
nop
add
push
pop
lock
cmp
xor
popf
cmp
test
or
push
outsl
sbb
push
ds
ret
pusha
pop
lret
xchg
xchg
xor
loope
xor
nop
or
es
push
out
lods
adcl
or
sbb
or
adc
push
push
sbb
lods
mov
add
and
fisttpl
mov
call
xor
inc
xor
add
test
and
or
scas
testl
cmpl
dec
add
cmp
popf
into
mov
push
imull
jmp
in
push
or
test
rcrl
pcmpeqb
adc
xchg
or
call
js
mov
call
or
sub
out
movsl
mov
add
sub
cmpsb
mov
pop
nop
loopne
xchg
cmpb
ret
es
stc
sti
nop
loope
nop
in
dec
mov
inc
dec
call
cwtl
fidivrs
je
lcall
push
in
dec
or
xchg
cld
and
xchg
loopne
jle
sbb
mov
sub
cmpsl
movsb
shll
mov
jge
add
ja
add
lea
in
stos
popa
push
xchg
ret
outsb
imul
and
or
jns
push
inc
test
and
cmpsb
daa
push
cltd
cmp
shrl
push
sbb
pop
ret
inc
dec
daa
or
mov
cmp
cmp
mov
fiadds
loopne
and
nop
insb
or
mov
iret
popa
add
adc
stos
hlt
mull
and
scas
adc
add
out
jo
je
or
aad
leave
push
adc
cmp
mov
mov
push
mov
add
inc
les
xchg
sub
lcall
add
ret
aam
aaa
scas
push
cmp
add
outsb
add
fnstcw
inc
adc
adc
mov
cmp
sub
mov
add
lcall
aaa
test
popa
pop
adc
lahf
jnp
cmp
mov
or
mov
inc
inc
inc
and
and
mov
adc
ss
ficomps
push
sub
ja
imul
in
sub
cld
leave
and
sbb
inc
add
sbb
xchg
or
cld
cld
repnz
cwtl
out
lods
inc
cmc
adc
or
xchg
imull
sbb
es
mov
xchg
aam
pusha
pop
outsb
add
dec
lock
jmp
inc
mov
sahf
xor
das
lds
inc
cmp
mov
cmp
sub
and
test
xor
dec
jmp
test
and
jmp
jle
pop
and
sbb
sbb
movsb
inc
out
loopne
cmp
add
cmp
cwtl
pop
dec
aam
sub
cmp
sbb
push
push
pop
pushf
xchg
xor
jl
mov
sarb
push
lods
es
add
inc
movsl
xor
and
mov
or
xor
popa
xchg
add
mov
mov
inc
aaa
test
js
fs
idivb
mov
mov
xor
sbb
cmp
mov
cld
xchg
push
inc
pop
mov
and
pop
mov
hlt
xchg
fildl
pop
jno
add
mov
lds
xchg
mov
aas
push
cltd
jbe
inc
fcmovnb
pop
dec
in
dec
cs
dec
dec
push
test
nop
arpl
cwtl
in
pop
pop
sbb
dec
jnp
or
push
push
cmpsl
es
dec
inc
jns,pn
ss
push
ret
or
inc
push
arpl
and
xchg
inc
fs
xchg
cmp
dec
push
pop
iret
inc
cmpsl
movsl
inc
popf
lods
aad
inc
pusha
jmp
movsb
insl
movsl
mov
sbb
orl
push
out
es
js
or
sbb
js
es
nop
xchg
push
call
add
daa
inc
jmp
pusha
mov
mov
sti
out
jl
or
jle
fcomps
sbb
inc
fwait
sbb
repnz
ret
cli
or
mov
jno
mov
jne
out
and
arpl
pop
cmp
stos
xor
xchg
clc
or
jmp
subb
shlb
and
fisubs
jno
fsubs
sub
in
popf
pop
push
rcrl
jg
sbb
push
mov
add
insl
xchg
mov
out
das
fsub
add
adc
daa
mov
js
mov
sub
push
and
xor
imul
scas
mov
inc
scas
push
xchg
mov
lock
out
sbb
cmc
adc
jbe
sbb
mov
jns
cmp
fisubl
into
pop
or
mov
pop
push
enter
push
inc
push
imul
into
add
or
testb
push
push
sub
into
jo
fsubs
and
jae
dec
cmp
cs
sbb
fsubr
std
sbb
cs
imul
push
cmp
jne
ret
dec
out
jno
sbb
mov
mov
mov
rolb
addb
sahf
sbb
mov
inc
sbb
imul
nop
iret
loope
cs
std
ret
cld
mov
pop
popa
and
pusha
pop
inc
adc
lods
gs
adc
shlb
and
jae
jle
outsb
insb
inc
sbb
jl
and
test
mov
aam
imul
cmp
int3
jne
cmpl
std
mov
adc
push
pop
lahf
pop
cs
leave
cmp
mov
mov
or
cmp
add
adc
shrl
or
jae
cmpsb
popf
adc
xor
mov
pop
and
lret
jne
mov
fildl
sahf
adc
dec
ljmp
das
cmp
jne
in
push
push
and
aad
lds
jp
and
jmp
movswl
loopne
ret
incl
pop
add
fmull
iret
insb
lret
stos
cmc
das
push
mov
mov
pop
mov
dec
or
push
dec
sbb
sti
cmp
pop
pop
clc
add
aad
sbb
pop
dec
ja
sbb
adc
pop
dec
inc
in
movl
es
imul
xor
fcmovnu
mov
mov
and
mov
mov
cld
out
dec
inc
pop
or
fimuls
xor
adc
cld
icebp
push
pusha
adc
test
jns
dec
mov
mov
mov
loop
insl
std
push
testb
xor
cmp
and
inc
dec
adc
cmpsl
xchg
dec
testb
and
jmp
adc
es
das
pushf
loopne
cmp
shr
adc
arpl
jle
ret
push
mov
pop
xchg
hlt
mov
addl
and
cltd
inc
mov
out
dec
jae
das
jg
cmp
cld
cltd
jl
daa
ret
dec
rolb
push
subl
jecxz
sub
jne
lret
clc
hlt
push
cmpsb
inc
test
mov
mov
cmp
cs
push
adc
pusha
in
lret
cmp
js
jns
daa
je
jmp
sbb
xor
lods
push
pushf
sbbl
and
ljmp
mov
pop
mov
or
jne
sub
add
cld
push
xchg
xchg
mov
jle
xchg
mov
jo
ja
cmp
mov
fimull
push
hlt
push
add
pop
xor
fidivrs
sarl
and
inc
and
inc
or
xor
lock
mov
pop
xor
daa
pop
add
sbb
mov
aas
xchg
or
cmp
lds
add
inc
mov
inc
push
cmp
sub
mov
cmp
dec
and
ss
add
add
mov
pop
add
inc
ja
cmp
adc
push
ds
bsr
dec
rcll
dec
mov
ret
pop
hlt
je
lods
push
negb
sbb
add
loopne
or
xlat
cmp
test
inc
test
adc
subl
movsl
pusha
adc
xor
xlat
sub
pop
jae
push
cli
insl
fisttps
mov
add
mov
ret
xchg
cltd
sbb
pop
pop
lea
gs
xor
push
xchg
out
mov
adc
and
fists
add
leave
iret
roll
mov
pop
and
add
mov
jne
inc
es
and
add
dec
inc
xlat
xlat
inc
call
mov
jmp
sbb
or
xor
es
inc
in
mov
xchg
lock
xchg
mov
out
xchg
adc
in
sbb
test
mov
fldt
sub
loop
dec
adc
repz
adc
popf
pop
test
inc
or
dec
inc
push
push
mov
add
cltd
lods
mov
mov
sub
and
cmp
mov
sbb
add
imul
pop
xlat
movsb
out
adc
mov
adc
sub
sarb
xor
push
pop
loop
nop
sbb
cmp
xor
je
testl
fcmovnbe
push
mov
cmc
enter
je
mov
inc
pop
nop
test
lock
enter
pop
xor
pop
test
ss
lcall
test
xchg
ds
mov
movsl
bound
and
lock
push
jbe
sbb
mov
adcl
cmp
stc
push
pop
xorb
enter
xchg
mov
mov
lock
clc
mov
cmp
pop
arpl
filds
loopne
dec
inc
pop
add
push
rcrb
sbb
fsubr
or
or
leave
or
ror
push
sbb
in
jno
adc
es
cmpsl
hlt
xor
adc
jp
mov
dec
dec
and
fsubr
xor
into
push
mov
push
push
cmc
and
pop
or
mov
dec
xor
mov
pop
shll
mov
pop
jne
pop
jmp
inc
xlat
hlt
xor
cmp
push
mov
and
andl
xchg
insl
dec
xor
js
mov
mov
shlb
xorb
dec
or
inc
imul
mov
lcall
add
add
sbb
pop
sbb
fiadds
pushl
arpl
daa
or
pop
lock
inc
daa
pop
notb
call
cmp
inc
popl
mov
sti
cwtl
jecxz
add
rclb
inc
loope
sbb
pop
sti
mov
addr16
pop
enter
sub
pop
daa
shlb
test
sbb
dec
inc
dec
dec
dec
inc
and
mov
ljmp
orb
rcrb
add
sub
pop
or
sbbb
jb
inc
hlt
loope
out
and
hlt
mov
imul
add
xchg
pusha
cmp
jmp
daa
je
loope
repnz
test
cmp
sub
add
repnz
xchg
jl
cmp
je
or
sub
and
sbb
dec
mov
jp
xor
nop
addl
shrl
or
scas
xchg
or
cld
sbb
daa
nop
mov
mov
stc
sbb
int3
dec
enter
rolb
mov
daa
and
cld
loopne,pt
int
jp
sbb
or
adc
dec
stc
adc
aam
pusha
inc
aam
roll
ret
pop
add
and
aam
xchg
push
loopne
inc
xlat
lods
mov
lret
dec
fs
mov
sbb
lcall
or
sub
mov
dec
inc
jo
repnz
mov
aaa
ja
xorb
mov
sub
adc
nop
adc
cmp
repz
inc
aam
mov
rolb
dec
stos
ljmp
dec
xor
mov
push
push
fs
sbb
sbb
push
push
mov
fisubl
js
pusha
adc
pop
and
pop
aam
fsubs
popa
adc
add
jmp
pop
je
das
js
mov
fs
jp
or
and
adc
nop
sbb
ja
add
cmpsb
adcb
mov
xchg
xchg
mov
sbb
orl
test
rcr
pop
mov
jo
pop
mov
addr16
je
cs
sub
addb
push
int3
andl
enter
sub
add
jp
rclb
jbe
mov
mov
aad
add
out
or
and
dec
mov
pusha
dec
mov
loop
and
lcall
or
xchg
ljmp
mov
ret
cld
pavgb
je
and
cltd
or
mov
jne
test
add
mov
rcrl
test
or
and
xor
add
jl
sbb
xchg
jne
lret
or
dec
pmullw
pop
lock
add
or
test
in
jne
lods
mov
enter
mov
inc
mov
and
xor
jns
push
push
xor
adc
adc
pop
mov
adcb
and
pop
xor
adc
lea
or
dec
pop
and
int
jbe
adc
push
adc
cmp
cmpb
pop
fadds
iret
mov
pop
sbb
push
data16
mov
xor
mov
or
imul
xor
adc
xor
cmp
shrb
fistps
fwait
out
cmpsb
xchg
and
add
clc
push
jg
adc
inc
or
push
or
lock
movsb
lods
int3
in
into
push
cmc
mov
cmpsb
jbe
lret
aas
outsb
push
lret
dec
mov
jg
bnd
sbb
inc
xor
pop
add
mov
shrl
cmp
adc
cmp
imul
sub
jge
add
bound
jb
lret
insb
js
add
add
frstor
fwait
adc
pop
push
add
frstpm(287
jnp
dec
icebp
add
push
lahf
fbstp
xor
shl
andb
pop
stos
and
or
cmp
icebp
mov
rcrb
test
mov
xor
popf
sub
xchg
lcall
bound
jmp
add
test
pop
cld
js
fsubrs
ficoms
addr16
xchg
rclb
inc
mov
mov
xchg
fistl
repnz
pusha
xchg
add
inc
int3
adc
in
add
andb
test
inc
bound
mov
jbe
push
add
sub
push
ljmp
call
mov
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lods
jle
js
mov
inc
adcb
pop
shl
aad
xlat
inc
mov
add
out
sti
xor
mov
das
call
mov
or
pop
jae
adc
outsl
push
jg
mov
sbb
or
inc
scas
shlb
jp
sub
cmp
nop
js
mov
xchg
sbb
pop
cwtl
movsb
mov
ljmp
sub
loopne
xchg
or
mov
and
and
pop
addl
push
cmp
fildl
or
pop
inc
or
add
and
dec
or
bound
loop
pushf
ret
pop
add
shll
cmpsl
pusha
dec
mov
xchg
into
lock
push
push
add
lret
sbb
sbb
push
inc
shrb
jno
mov
lds
xchg
cmp
jmp
je
xchg
fucomp
fildll
mov
mov
dec
js
mov
imul
out
and
sub
sbb
jmp
test
data16
jnp
test
jecxz
mov
or
jbe
insb
je
pop
xchg
cmp
test
nop
pusha
movsl
sbb
rol
or
stos
clc
popa
arpl
fisubl
add
pop
jo
cmc
sub
cmp
xchg
dec
fdivr
inc
je
sub
inc
push
inc
arpl
arpl
inc
push
inc
push
dec
xchg
mov
inc
pop
push
incl
adc
xlat
add
mov
sub
add
clc
pop
test
andb
mov
pop
icebp
mov
cltd
add
and
ret
iret
adc
xchg
psubq
insl
lock
int
jo
or
xor
inc
sub
xchg
xchg
sub
adc
leave
push
std
adc
hlt
push
ja
leave
pop
dec
pop
popf
mov
mov
mov
lods
sub
fwait
jl
or
adc
shrb
test
nop
cmp
shlb
push
xor
mov
call
xchg
or
fildll
and
cmp
movsl
push
or
in
mov
add
fucomi
push
jne
cmp
stos
push
or
mov
lds
push
fwait
sbb
sub
ja
xor
addb
add
cmp
loopne
pop
fwait
std
and
jnp
push
mov
sbb
test
fimuls
push
jmp
push
xchg
test
daa
mov
jecxz
add
mov
mov
add
lahf
lock
imul
insl
adc
add
and
and
cmpsl
push
xor
cli
fisubrs
test
push
sahf
lea
mov
mov
xor
enter
ljmp
cmpsl
int3
mov
xor
pushf
jnp
je
and
push
out
adc
add
dec
sub
lcall
mov
mov
jne
mov
je
or
sbb
push
inc
push
ljmp
js
inc
daa
cmp
ret
sbb
xor
xor
xor
or
inc
pushf
inc
cmp
fwait
pop
outsb
pop
imul
jmp
mov
repz
xchg
add
sbb
jl
dec
jne
jmp
int
jbe
mov
push
and
add
je
clc
add
mov
lods
fs
rolb
je
xchg
loopne
cmpsl
sbb
add
xor
sbb
jae
mov
adcb
jne
cmp
mov
sub
iret
movsl
mov
jb
in
movsl
xchg
sbb
pop
aad
icebp
xor
or
cmp
cwtl
add
adc
and
sbb
call
sbb
push
scas
cmpl
ret
out
loopne
and
sti
rcrl
ds
das
je
mov
movsl
clc
and
mov
daa
mov
add
nop
and
add
inc
rorb
fcoms
jl
sbb
add
mov
jno
push
call
push
add
leave
shll
adc
sbb
mov
lret
dec
jb
sub
movsl
add
outsl
push
push
adc
and
and
daa
and
inc
aam
add
cmp
sub
jmp
push
push
mov
sub
mov
push
sub
xor
mov
and
pop
mov
cmp
je
fs
jge
mov
jecxz
in
dec
lock
add
cmp
xchg
xor
mov
fidivrl
and
popf
sbb
lock
and
rep
push
test
repnz
lret
push
shrl
inc
test
push
adc
fucomi
adc
sti
add
add
and
or
fs
int3
js
push
inc
in
or
flds
dec
cmp
shl
call
jmp
dec
jno
and
movsb
sbb
inc
or
mov
in
inc
test
xchg
add
movsb
add
mov
in
flds
add
inc
or
jno
insb
popa
movsb
and
xchg
cmpb
pusha
adc
and
add
and
push
rcrl
or
test
pop
mov
pop
lods
or
out
sbb
inc
rolb
mov
nop
mov
add
mov
pop
sarb
pop
xchg
aam
add
sub
stos
popf
push
and
mov
lods
xchg
imul
add
add
xchg
xlat
adc
cmp
sub
add
sub
aaa
pop
xor
dec
rclb
push
or
fsubl
inc
mov
xchg
and
xor
push
test
inc
cmp
cmp
test
out
ret
daa
div
shlb
jge
inc
imul
inc
dec
push
add
sahf
daa
fs
hlt
push
or
pop
mov
sbb
pop
jg
dec
push
jns
and
notl
shr
and
push
lods
pop
popa
loop
nop
das
cmpb
inc
pop
insb
popa
pop
fistpl
fldenv
fimull
fistpl
add
je
iret
nop
sub
jns
test
faddl
add
inc
aas
cmp
xor
aas
fstp
cltd
add
shlb
in
cmp
sub
add
pop
rcrb
loop
or
mov
and
pop
jne
movsb
add
leave
dec
mov
movsl
imul
ret
pop
inc
cmp
shlb
sbb
or
pusha
mov
adc
sub
lock
clc
mov
dec
cltd
sbb
inc
pop
xor
push
cmp
jne
lahf
dec
or
inc
dec
dec
xchg
adc
pop
lock
add
and
cmp
add
scas
and
mov
iret
mov
int3
add
jp
add
add
hlt
adcb
test
cld
xchg
add
sti
dec
add
cmp
lcall
mov
mov
test
xchg
sub
xor
push
arpl
inc
outsb
or
insl
add
sbb
rclb
sub
push
xchg
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
pushf
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
jnp
int3
cmpsl
dec
mov
xor
push
jp
cltd
or
fistps
mov
test
cmp
xor
add
je
cmp
cmp
xchg
lods
fcoms
mov
ja
cmpsb
mov
pop
and
mov
nop
pop
mov
push
fisttpll
sbb
push
xlat
test
daa
push
inc
or
add
or
icebp
ljmp
or
sbb
rcll
jp
or
or
and
les
adc
push
popa
xor
jge
mov
daa
dec
lahf
mov
mov
pop
pop
pop
cmpsb
push
sbb
adc
fdivrl
add
sub
xchg
filds
adc
test
mov
mov
gs
xchg
inc
adc
popa
inc
loope
xor
stc
or
sti
outsl
es
or
pop
pusha
jne
xchg
shl
lcall
mov
adc
sub
inc
pop
repnz
mov
out
push
sbb
xor
pop
test
mov
repnz
xchg
pop
adc
inc
inc
pop
daa
cmpl
jp
mov
mov
push
add
lock
sbb
push
mov
pop
repnz
out
cmp
mov
sarl
or
and
inc
faddl
data16
push
pop
xor
mov
sub
inc
xor
sub
arpl
mov
xlat
inc
movhps
sbb
mov
mov
sarl
insb
push
scas
add
pop
add
ret
jmp
xor
shlb
jle
jo
push
in
or
es
xorl
dec
arpl
movsb
mov
xorl
and
pop
clc
inc
jne
add
arpl
ja
test
xchg
or
sbb
shl
push
incb
jle
ret
loop
mov
sar
mov
xchg
add
jge,pn
mov
sub
or
sar
nopl
and
shrb
adc
insb
stos
insl
mov
jl
loopne
add
pop
pmulhuw
mov
es
and
pop
inc
inc
call
xlat
in
pop
faddp
dec
mov
pop
popa
or
mov
sub
push
push
sbb
je
inc
sbb
dec
xorl
ljmp
bound
outsb
mov
in
mov
in
add
pop
jmp
repz
or
fmuls
push
fiadds
cmc
or
cltd
lret
shll
shrb
into
rcrl
lret
and
push
sahf
xchg
mov
pop
mov
movsb
mov
xor
gs
inc
sbb
push
sbb
push
xlat
jo
or
or
pop
js
cld
mov
icebp
aas
push
and
and
pushf
xchg
orb
push
out
inc
outsl
inc
fcoml
ss
loopne
pop
sbb
into
add
and
add
test
imulb
inc
or
or
push
shll
mov
pop
addl
mov
andb
cmp
mov
or
mov
fs
and
cmp
aas
jmp
jo,pn
mov
and
inc
daa
add
testb
sbb
and
in
ljmp
cmp
int
imul
repnz
lea
jbe
xor
push
out
ja
sahf
rorb
xchg
sti
rcrb
push
aam
out
test
and
push
lea
mov
xchg
js
fwait
aas
jecxz
jge
outsb
or
rcr
sbb
imul
jecxz
xor
xor
xchg
xor
push
sub
sbb
inc
pop
xchg
stos
scas
mov
mov
jge
mov
adc
pusha
pop
pop
je
loopne
call
sbb
repnz
nop
push
sub
fcomps
pop
dec
bound
inc
test
fildl
ret
dec
ss
scas
sub
fadd
pop
sbb
push
add
scas
mov
adc
jl
add
dec
shrb
insb
jo
in
stos
jl
push
imul
sbb
roll
inc
in
add
sub
fcoms
ljmp
mov
cltd
add
call
shrl
ljmp
lcall
add
aam
mov
xchg
sub
xchg
adc
xchg
or
iret
xchg
push
test
rorb
inc
cmp
dec
shr
pop
mov
outsb
inc
cmp
je
test
aaa
test
arpl
lds
imul
mov
sbb
adc
pop
andb
inc
dec
aaa
or
insl
xchg
inc
aad
xchg
xor
gs
add
popa
test
add
nop
lret
push
inc
ljmp
in
and
jae
push
push
add
pop
adc
mov
loopne
adc
inc
je
xor
or
bound
cmp
xchg
mov
jae
sbb
push
adc
push
jl
add
mov
sbb
mov
mov
lret
in
sbb
push
sbb
ljmp
adc
add
enter
es
mov
nop
pop
mov
push
jmp
mov
out
mov
add
cmp
fstpt
cltd
cld
cs
cltd
mov
popa
jb
inc
add
dec
outsl
decb
dec
psubq
std
nop
cmpsl
es
cltd
jmp
gs
mov
inc
aam
pop
mov
aas
or
and
dec
mov
adc
push
in
scas
aas
lret
scas
adc
out
xor
mov
ds
repz
push
mov
sbb
les
dec
test
ja
jmp
pusha
fmull
or
inc
movsb
push
xor
dec
je
adc
jb
ds
xchg
pop
pop
dec
adc
nop
sbb
pusha
lock
stos
and
addr16
sub
dec
jp
cmp
rorl
inc
rcrb
aam
add
adc
cmpb
pop
clc
inc
cmp
mov
jne
jo
out
clc
adc
push
and
push
mov
mov
push
leave
pop
inc
sbb
mov
nop
in
sub
in
pop
rclb
and
out
repz
xor
or
fs
push
out
hlt
mov
inc
xchg
inc
add
pop
movsb
xchg
imul
cmp
fstl
or
aam
fs
outsb
inc
pop
fwait
cmp
or
adc
shll
movsb
mov
mov
cmp
iret
movsl
lret
cmc
jb
inc
mov
pop
dec
fmulp
rsqrtps
insl
push
push
push
jae
sub
fstpl
rcrb
add
sub
push
cld
pusha
push
cs
push
orb
dec
sbbl
push
xchg
outsl
gs
add
in
movl
mov
push
and
inc
addl
stos
fdiv
or
dec
add
inc
sub
inc
adc
jb
add
sbb
loope
enter
out
call
lock
push
loope
out
pop
dec
stos
push
adc
push
into
xor
mov
push
enter
ror
mov
dec
xor
push
push
pop
mov
cli
or
hlt
add
lods
add
icebp
xchg
int3
xor
sub
loopne
adc
and
hlt
fcomip
jne
cmp
xchg
inc
test
fstpl
or
xchg
flds
je
add
repz
je
dec
push
push
mov
aaa
push
pop
lcall
and
subl
stos
or
test
push
mov
repnz
ficoml
test
dec
cld
inc
repnz
pop
dec
cld
sbb
add
pop
ja
add
in
sbb
arpl
or
cld
stos
pop
enter
push
push
push
mov
clc
xchg
inc
push
adc
repz
addr16
lret
inc
sbb
int3
xor
dec
mov
aam
inc
outsl
and
adc
pop
inc
js
into
inc
sub
jmp
inc
add
inc
xor
add
rcrb
sub
mov
das
jae
pop
xchg
add
mov
out
popa
mov
jae
and
fcompl
cmpsl
inc
mov
dec
hlt
inc
in
insl
mov
sti
cmp
inc
inc
fisubrl
cs
push
pop
and
mov
lock
sbb
push
int
add
fwait
cmp
cmpsl
mov
or
push
aas
pop
fidivs
mov
loope
out
dec
hlt
inc
mov
and
inc
mov
add
and
nop
cmpsb
add
xorb
mov
sbb
jmp
push
add
dec
inc
inc
or
push
in
lcall
and
in
lods
mov
call
movsl
xor
or
mov
adcb
mov
or
nop
movsb
mov
or
insl
sbb
jns
dec
jne
push
lea
sbb
add
mull
lahf
sbb
push
cwtl
add
adc
or
add
xchg
inc
enter
out
push
adcb
pop
ljmp
int3
inc
cli
or
and
cmovo
iret
rorb
jae
or
sub
xchg
mov
mov
mov
std
add
xor
lret
loopne
fistpl
xchg
inc
push
adc
mov
or
inc
jmp
mov
push
popa
inc
xor
jmp
jl
or
jg
push
fidivrl
mov
icebp
sub
lock
add
loop
movsb
lahf
out
jns
mov
mov
clc
xchg
mov
add
mov
lea
jno
stc
or
mov
movl
add
dec
adc
fdivrs
mov
int
testl
inc
add
rclb
dec
sbb
mov
adc
aam
and
or
xor
add
js
push
sub
mov
or
mov
sahf
lea
push
outsl
jo
adc
xchg
pop
das
inc
sbb
out
imul
pop
add
mov
gs
lret
enter
push
inc
lods
jmp
and
cmpsl
sbb
and
movsb
push
mov
inc
subb
pushf
sub
sbb
adc
jge
xchg
sahf
or
and
inc
xor
sub
dec
add
or
and
pop
call
mov
mov
jmp
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
sahf
or
adc
sbb
std
stos
in
push
push
push
dec
pop
or
mul
add
shl
pop
jmp
jb
and
jo
nop
inc
call
jnp
movb
add
jnp
add
and
or
jmp
adc
mov
int3
jo
cld
ds
cld
std
call
jmp
pusha
dec
add
loopne
push
add
int3
xor
test
and
lea
outsb
inc
vmread
push
sbb
add
dec
inc
push
cmp
sub
mov
or
cmpsb
inc
repz
adc
or
xor
pop
dec
loop
dec
icebp
and
stos
inc
sub
sbb
aad
lret
out
push
hlt
sub
xor
pop
test
inc
xchg
adc
xor
gs
dec
rorb
jl
xor
add
or
nop
xor
decl
mov
and
test
sub
je
cmp
jb
cmp
ja
test
fisubs
pop
pop
and
fimuls
and
fistl
push
sub
mov
inc
inc
sbb
jne
xchg
ret
in
dec
jne
sub
stc
jp
xor
and
xor
add
je
or
push
mov
lods
inc
shr
push
push
leave
inc
fmull
sbb
lock
or
push
out
outsl
mov
push
imul
jmp
lcall
jl
outsb
add
pushl
sbb
adc
fnstsw
cmp
pop
adc
sti
or
pop
mov
lods
sti
mov
movswl
fcomps
pop
outsl
fxch
fldl
mov
fildll
scas
dec
rorb
out
sub
daa
xchg
ret
mov
dec
pop
push
imull
or
mov
fdivp
pop
es
xor
pop
imul
mov
mov
outsb
gs
inc
mov
hlt
dec
ficoml
outsl
mov
addl
add
test
mov
jno
add
loope
aam
mov
xchg
dec
movb
add
jb
inc
fs
inc
and
adc
and
not
in
cmpb
mov
dec
and
dec
add
loop
and
pop
dec
jl
push
mov
cmpsb
outsl
ja
scas
mov
iret
out
mov
pop
repz
fs
jae
mov
aaa
out
arpl
movsl
ss
pop
fisubs
das
cmp
mov
in
nop
std
xor
xorl
lock
rcll
xchg
std
and
sbb
dec
adc
inc
add
fiaddl
shrb
xchg
adc
jbe
or
adc
inc
sbb
mov
and
sbb
test
stc
ja
fs
lock
xor
cmp
std
out
jns
inc
sbb
sti
fwait
icebp
out
sbb
or
push
fidivs
rclb
aas
aam
data16
inc
in
push
add
adc
movsb
add
push
xchg
push
lods
push
pop
xchg
rclb
psubd
sbb
xor
ja
xorb
add
jecxz
dec
push
cmp
fdivr
xor
lcall
or
ljmp
aaa
pop
loope
pop
movsl
lret
push
push
rclb
loopne
fld
mov
addl
mov
pop
push
aam
mul
ss
lock
out
mov
icebp
inc
sub
cmovno
push
into
mov
daa
in
aas
sti
cld
notb
inc
xor
sbb
fidivrs
repz
adc
stc
bswap
repz
aaa
add
xor
jns
inc
xchg
outsb
in
fs
js
bound
add
mov
aas
jmp
add
pop
or
inc
inc
dec
enter
add
ljmp
pop
push
push
orb
dec
push
inc
jl
in
jge
push
addb
mov
scas
adc
push
rep
es
or
inc
push
adc
push
mov
out
push
in
push
jo
mov
xchg
mov
push
cmpsb
aam
popa
inc
pop
fmulp
and
rcrl
inc
js
lahf
les
push
out
inc
shlb
adc
or
or
pop
xchg
adc
sub
ss
mov
shrb
orb
pop
xchg
fisubl
mov
push
rol
xchg
pusha
inc
mov
and
lahf
sbb
add
xor
leave
xchg
mov
stos
lahf
das
or
pop
repnz
add
repnz
xchg
out
inc
mov
dec
or
dec
xchg
push
xor
xchg
mov
or
mov
out
mov
outsl
out
inc
scas
fs
out
pop
push
pushf
and
into
insb
mov
nop
xchg
xor
add
inc
sub
mov
loop
xchg
js
jl
popa
movsb
xor
pop
insb
aaa
call
add
pop
outsl
jl
and
inc
mov
test
and
add
lahf
or
adc
jp
adc
popf
iret
out
mov
sahf
loope
outsl
pop
sbb
pop
fbld
pop
nop
push
mov
fwait
add
and
cltd
adc
sbb
xlat
mov
inc
ljmp
pop
add
add
gs
faddl
mov
xor
movsb
pop
inc
arpl
test
das
pusha
mov
fmul
mov
and
xor
push
cltd
bound
or
cmp
sbb
sbb
or
dec
inc
in
sub
xor
addl
add
xor
xorb
shl
and
xchg
nop
push
aas
xchg
sbb
scas
ja
nop
and
mov
jne
xor
jl
pop
adc
adc
call
call
adcb
dec
cmp
mov
insb
mov
adc
shll
push
sbbb
add
push
pop
mov
inc
stos
xor
ss
fwait
std
sbbl
mov
mov
clc
mov
add
pop
jg
or
xchg
and
test
ret
or
rcll
cmp
sub
testl
fildl
or
fisttpl
dec
sbb
sbb
xor
add
cmp
add
and
add
add
add
and
or
cmc
or
adc
xor
and
pusha
popf
arpl
jmp
add
xor
pusha
loopne
inc
movsl
mov
cs
xchg
pop
add
enter
fnstcw
add
sub
pop
lcall
and
adc
and
jge
dec
std
xor
shrb
fwait
or
loopne,pn
mov
jmp
seto
fistl
and
and
add
xchg
lock
lock
or
and
test
hlt
jl
push
mov
inc
dec
dec
sub
clc
cld
xor
jp
add
adc
pop
push
push
jl
adc
or
sub
add
orb
mov
adc
fwait
and
cmpsl
dec
mov
add
lcall
add
add
jbe
in
sbb
lock
adc
xlat
aad
insb
test
aad
or
mov
dec
outsl
add
loopne
test
fmuls
mov
jo
je
xchg
adc
dec
hlt
inc
xchg
or
push
or
mov
push
xchg
xchg
or
ss
push
fcmovbe
lret
or
sbb
and
pop
sbb
inc
call
inc
jmp
push
jl
xor
cld
ret
pushf
mov
pop
je
adc
lock
add
shlb
rcl
jne
mov
fldcw
mov
jle
mov
adc
xchg
pop
loopne
or
push
push
mov
shr
jmp
nop
call
mov
lock
xchg
or
pop
xchg
mov
iret
shl
lods
or
aam
adc
inc
testl
push
sbbl
pop
jg
cmova
dec
adc
mov
jle
je
sub
out
push
and
mov
rclb
inc
add
push
or
clc
mull
cltd
shlb
mov
push
aad
cmpsb
adc
or
add
and
push
pcmpgtd
subl
pusha
or
pop
shr
sbb
add
hlt
pop
jbe
adc
sub
ljmp
dec
jecxz
repnz
roll
and
add
or
inc
and
rcll
and
cmovbe
push
xchg
inc
lock
je
push
push
pop
inc
push
clc
mov
add
inc
inc
inc
orb
inc
lock
ljmp
cmp
or
sbb
pop
add
add
cwtl
sbb
xor
sti
sub
shll
les
sub
sub
andl
mov
aaa
pop
push
jae
mov
or
and
in
add
aaa
sbb
mov
xor
pusha
push
repnz
imul
loopne
sbb
ds
dec
inc
jbe
sbb
rcrb
addr16
sub
xorl
repnz
leave
inc
inc
mov
inc
adc
and
iret
dec
orps
in
ret
xor
iret
mov
in
xchg
dec
gs
jno
push
insb
imul
stos
enter
nop
mov
xlat
cwtl
push
adc
push
cld
adc
push
jb
sub
ret
stos
int
shlb
xchg
cmp
es
jb
mov
or
sti
jmp
adc
jno
mov
inc
mov
ss
pushf
mov
sbb
mov
sub
pop
int3
add
into
test
sbb
popl
pop
outsl
insb
gs
outsl
cwtl
cmp
cmp
and
pop
sub
mov
arpl
xor
aaa
dec
outsl
popa
xor
dec
push
push
outsb
jecxz
out
adc
lea
or
ds
repnz
ret
inc
pop
jmp
dec
or
ss
inc
pop
push
jge
adc
or
insb
add
jb
jmp
sub
push
repnz
test
inc
pop
sub
adc
hlt
nop
sti
inc
pop
cmc
adc
pop
mov
enter
lahf
or
pop
lcall
sbb
addr16
dec
ret
les
daa
mov
jmp
psraw
jecxz
dec
cmp
or
pusha
aaa
xchg
arpl
test
mov
pop
push
adc
mov
cmp
push
push
adc
mov
jns
int
fwait
movsl
scas
add
insb
push
push
fsubrs
or
inc
mov
mov
hlt
push
add
call
push
adc
sub
nop
int3
cmpl
sbb
cmp
sbb
pop
or
dec
push
mov
lret
fs
cmp
nop
add
add
nop
add
or
rclb
or
flds
mov
jns
sub
adc
add
nop
and
sub
fs
push
fs
dec
add
xor
test
movsb
xor
add
enter
add
xor
jl
push
fs
mov
fs
mov
nop
and
nop
mov
sbb
nop
add
xor
pop
add
xchg
add
xor
in
fdivs
enter
sbb
xor
or
orb
or
js
icebp
pushf
pop
sbb
cmpsl
cmpb
lds
sarl
sbb
push
out
pop
push
repz
ja
xor
dec
and
xor
push
adc
pop
cmp
repz
in
stc
test
sahf
stos
mov
jnp
cmpsl
clc
add
push
dec
pop
cmp
repz
jb
mov
cmpsb
mov
shrb
mov
out
push
adc
sub
inc
repz
out
pusha
out
add
sahf
out
dec
cwtl
movsl
push
mov
int3
fsts
addb
sub
sbb
xchg
dec
adc
lock
sbb
ss
mov
cmp
push
push
add
push
iret
test
aaa
xor
daa
mov
into
outsb
lock
mulb
adc
push
pop
pusha
pop
xchg
sbb
lahf
xor
in
push
add
mov
push
out
sub
inc
and
push
xchg
sub
sub
xor
and
add
pop
inc
les
or
push
cwtl
cmp
xor
jo
jp
sub
dec
sub
test
adc
sbbb
fwait
mov
dec
pop
dec
insb
loop
mov
push
adc
repz
mov
sbb
push
and
cmp
rcl
cs
idivl
sub
jl
or
push
and
fisubrs
jle
mov
sub
mov
decl
xlat
mov
push
sbb
sbb
mov
fs
inc
sub
imul
cwtl
pop
add
add
mov
fiaddl
and
push
dec
pop
mov
sub
inc
js
or
lea
or
lea
pop
xchg
mov
lods
imul
xchg
xor
out
dec
arpl
mov
ret
mov
mov
mov
mul
pusha
xchg
or
cmpsl
mov
and
inc
fst
add
adc
adc
cli
push
mov
sbb
fistl
push
mov
adc
jne,pn
mov
inc
stos
jecxz
sbb
leave
imul
or
xorl
daa
adc
aas
roll
jne
mov
push
sbb
test
inc
dec
or
inc
sbb
pop
inc
xchg
adc
add
pop
rclb
inc
push
dec
out
inc
hlt
mov
addl
dec
sbb
xor
sub
adc
mov
sub
stc
dec
mov
or
ss
fiaddl
jge
rol
xchg
cmp
inc
cltd
in
dec
cmp
cmp
dec
arpl
mov
dec
sbb
out
movsl
ja
ja
movsb
in
lret
push
inc
and
push
enter
add
loope
push
lret
adc
cmpl
xor
pop
mov
imul
cmpl
or
add
sbb
test
dec
lock
mov
xchg
or
sbb
pop
sub
adcb
jnp
call
leave
or
rclb
mov
mov
pop
jbe
sub
adc
cmp
push
je
jp
out
xchg
dec
pop
xchg
dec
dec
add
inc
push
es
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
fdivl
mov
inc
dec
roll
daa
test
mov
adc
mov
lock
sbb
xchg
fisubl
iret
repz
imul
inc
xchg
jge
popa
adc
adc
lods
add
loope
xor
rorb
addr16
mov
xor
push
or
xchg
and
pop
imul
cltd
gs
sub
xchg
and
lret
jmp
cmc
xor
adc
bound
jge
test
pushw
inc
sbb
cmpsl
icebp
xor
jmp
adc
je
leave
mov
sbb
or
add
incl
jmp
in
dec
es
sub
inc
xor
dec
adc
leave
add
mov
jle
push
mov
push
icebp
ja
movsl
cmp
adc
jmp
mov
stos
inc
lods
pop
xor
lods
adc
fstl
nop
adc
sbb
dec
aas
or
std
in
inc
fiadds
add
fcoml
int
cmp
mov
push
orb
lret
cld
mov
ret
add
mov
and
loop
loope
mov
fs
jne
mov
lret
pop
lret
int
lock
sub
push
push
xchg
inc
pop
pop
dec
jb
daa
aaa
mov
sub
or
push
mov
push
cmp
sub
xchg
cmp
rorl
mov
add
push
test
add
pop
js
sbb
pop
jmp
jl
or
in
mov
jne
push
fildl
pop
in
sbbl
lea
inc
or
inc
jg
jle
and
nop
cmc
test
add
subl
jno
cli
mov
mov
fiadds
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
sub
fcomp
test
sub
mov
adc
jne
inc
arpl
mov
lods
cmpl
add
loope
push
sub
aaa
aad
mov
push
add
lea
mov
push
add
push
inc
movsl
mov
es
dec
push
mov
mov
jae
jo
or
add
jne
stos
jl
push
inc
or
mov
std
jmp
jg
popf
xor
sub
sub
push
inc
sub
mov
or
mov
adc
dec
cmp
mov
or
push
lret
iret
sub
inc
xor
cmpb
cmp
outsb
js
hlt
add
scas
or
add
xchg
aaa
cs
sub
mov
nop
or
nop
mov
or
inc
sbb
fsin
mov
jno
adcl
xor
fadd
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
mov
sahf
xor
xchg
cmp
lds
in
dec
jnp
mov
xor
inc
sub
add
enter
mov
push
inc
and
inc
scas
js
push
outsl
push
mov
pop
jno
xor
cmp
je
inc
cmp
jne
call
jmp
push
cmpl
jne
mov
inc
push
pop
add
dec
cmp
loop
xchg
mov
sbb
push
ret
add
pop
and
ret
pop
aam
mov
adc
jmp
clc
and
out
outsl
loopne
add
xor
idivl
les
stc
adc
push
mov
sbb
pop
or
or
adc
int
daa
leavew
push
in
sbb
call
loope
shrb
adc
lret
or
dec
mov
push
push
push
dec
sbb
fcmovbe
or
hlt
adc
or
sub
inc
loop
sbbb
cmp
inc
sbb
xchg
mov
adc
xlat
add
rcr
mov
rorl
mov
dec
enter
call
movsl
cmp
push
sbb
mov
or
fdiv
lock
and
inc
jle
fmull
icebp
das
or
sbbl
int
mov
jb
and
xchg
pop
sbb
pushw
cwtl
dec
jb
xor
pusha
mov
clc
jmp
pop
mov
sbb
sbb
sbb
sarl
setae
in
dec
lret
add
inc
lea
mov
cmp
add
or
dec
add
std
mov
mov
or
inc
xchg
add
ret
pop
mov
in
pop
test
fs
sbb
or
inc
xchg
xchg
cmpl
imul
inc
dec
stos
fcompl
mov
les
cwtl
insl
test
adc
scas
mov
sub
orl
fucomi
and
lods
insb
cli
or
stos
cmpb
clc
mov
sbb
add
jo
mov
test
xchg
or
jnp
dec
dec
add
adc
sub
pop
scas
sub
dec
xor
hlt
adc
je
jmp
scas
add
jmp
adc
add
pop
xchg
imul
pop
xor
push
cmp
add
call
cmp
sbb
sub
pop
rcl
mov
mov
jge
dec
shlb
push
pop
sub
or
loop
test
adc
popa
imul
pop
jno
and
cmpl
adc
cld
push
and
pop
mov
jge
jae
add
pop
xor
xor
or
aas
rcr
inc
mov
mov
add
rorb
push
cmp
or
daa
inc
sbb
inc
test
or
dec
bound
pop
rclb
or
pop
push
clc
adc
fcoml
jne
and
loopne
test
test
mov
clc
in
outsb
inc
lret
ja
xor
cmc
xor
xlat
and
sarw
pop
lret
enter
leave
xor
dec
inc
xchg
pop
pop
hlt
rorl
test
mov
pop
sbb
xor
enter
pop
dec
cmp
stc
addr16
and
xchg
addl
jg
xchg
fwait
inc
mov
xchg
add
ds
and
ret
mov
sti
xorl
iret
pop
lock
adc
mov
pusha
adc
mov
mov
mov
and
xor
xor
adc
jg
mov
or
jge
movsl
adc
sub
jg
adc
or
popa
lods
xor
xchg
jo
lret
inc
pop
inc
pop
xor
aaa
mov
xor
sbb
add
jmp
adcb
ret
or
ret
and
das
je
adcl
jb
rolb
cmp
sub
mov
nop
adc
fisttpl
test
add
xorb
dec
xchg
push
jae
adc
pop
push
movsb
push
clc
push
push
outsb
push
pushl
xor
scas
add
out
pop
mov
or
loope
and
and
jne
ret
add
xchg
daa
dec
aaa
mov
add
xor
xchg
or
sbb
mov
rolb
adc
aaa
mov
das
push
lahf
inc
push
xor
xchg
xor
or
xchg
xor
and
pop
adc
cmpsl
aas
lret
cmp
cmp
inc
mov
sub
xchg
setge
cs
cmpb
jmp
imul
jecxz
dec
inc
stos
jg
push
sub
jnp
inc
nop
dec
pop
adc
dec
add
mov
sub
repz
cli
mov
pop
jb
sub
jo
inc
dec
test
test
ss
xor
imul
aaa
mov
notb
push
lcall
cmpl
pop
xchg
mov
rclb
loop
ljmp
nop
out
inc
aaa
rol
and
xchg
lret
or
add
les
aaa
lea
lret
mov
mov
mov
sbb
add
fs
and
adc
mov
les
mov
insl
adc
add
cmpsb
inc
pushf
cmp
jo
lods
xchg
fcmovbe
imul
and
xlat
push
cmp
mov
adc
stos
or
adc
nop
push
nop
push
pushf
lcall
fs
mov
and
movb
inc
clc
pop
call
dec
fidivs
adc
mov
movsb
xor
jmp
mov
imul
jl
jno
dec
sti
mov
repnz
clc
sub
push
je
sub
and
or
jecxz
dec
repnz
repnz
mov
lods
xor
and
popa
call
mov
popa
in
je
mov
in
in
jbe
mov
arpl
or
pusha
lahf
add
movsl
fldl
and
cmp
pop
xchg
cli
adc
jge
cwtl
or
adc
dec
shrl
lret
dec
je
pminub
pop
test
push
push
mov
out
lret
aad
jp
daa
cs
sub
mov
shll
push
popf
pop
out
imul
mov
cmp
ja
cmpl
fidivrs
out
inc
sub
and
testl
adc
adc
fistpll
icebp
loope
adc
sbb
xchg
xor
test
or
faddl
push
scas
mov
and
and
test
push
cmp
and
and
and
push
sub
sbb
mov
out
adc
cld
add
xchg
push
cmp
push
pop
add
lcall
pop
mov
fcomps
es
sbb
js
cmp
pop
cmp
xchg
cmp
inc
out
lods
or
and
cmp
or
add
jl
fmul
or
test
dec
icebp
xor
jne
out
mov
or
dec
jge
adc
pop
dec
in
inc
test
inc
pop
insb
in
stos
adc
push
es
sub
or
dec
cltd
mov
pusha
xor
mov
dec
pop
mov
pop
add
mov
test
mov
inc
shlb
and
pushf
pop
cs
cmpsl
push
pop
popa
and
bound
add
pop
popa
dec
mov
and
lock
jo
fwait
push
mov
pop
hlt
cmp
or
pop
je
lret
addl
sub
enter
ja
es
and
leave
mov
add
and
or
add
mov
call
in
add
push
jg
cs
test
imul
bound
popf
adcl
sbb
xchg
sbb
pop
rolb
adc
push
ret
inc
jmp
loopne
mov
inc
inc
push
and
arpl
dec
test
cmp
in
es
inc
and
orl
xor
xor
push
insl
push
xchg
sti
insl
cmp
fs
aaa
sub
cld
addb
inc
xor
inc
lret
add
and
cmp
cmp
aaa
adc
jae
data16
push
inc
aad
xor
or
add
test
cmp
or
xchg
cld
mov
mov
add
sahf
sahf
imul
or
sbb
adc
stos
mov
push
add
call
sbb
scas
or
mov
adc
mov
pop
xchg
add
andb
push
fbld
sbb
push
dec
cmpsl
outsb
test
mov
push
jnp
call
clc
inc
mov
sbb
shlb
and
and
cbtw
cmp
mov
notb
rorl
xchg
or
roll
jl
movsl
adc
xchg
ss
xor
sub
incb
cld
addl
inc
mov
push
fwait
lcall
in
xchg
inc
add
pop
add
jmp
flds
fmuls
int
inc
dec
fcmovnu
stc
pop
or
aas
adc
aaa
inc
loopne
loopne
dec
inc
push
inc
pop
inc
dec
cmpsb
lahf
or
mov
or
sub
aad
mov
add
mov
push
pop
lea
in
ret
inc
or
mov
cmpsl
cmp
bound
pop
pop
mov
fsubrs
movsb
lods
loop
insl
sbb
adc
jo
or
ljmp
cmp
movsl
pop
call
mov
lock
out
or
lods
pop
xor
cmp
or
sbb
rorl
adc
xchg
dec
js
aaa
dec
push
sbb
cmp
mov
ss
inc
xchg
push
mov
cmp
nop
arpl
push
sbb
xchg
outsl
and
adc
je
sbbb
dec
int
mov
filds
add
xchg
sub
mov
out
or
and
sbb
lcall
jge
inc
es
inc
and
inc
push
sub
mov
add
or
or
outsl
rclb
nop
mov
and
dec
mov
push
mov
inc
loop
xchg
fldl
push
ljmp
lock
xor
push
pop
pop
aam
dec
and
dec
sbb
cmp
dec
add
lret
aad
ja
jns
adc
lods
mov
xchg
es
je
push
mov
clc
jbe
xchg
movsl
add
jo
fs
shr
push
aaa
iret
inc
lahf
push
test
ret
jecxz
add
or
add
out
aam
push
jnp
adc
inc
adc
cmpsb
sbb
cmpb
in
xchg
xchg
popf
jmp
adc
test
xchg
ret
ror
fsubl
insl
xchg
cltd
mov
pop
adc
or
add
rorb
xchg
xchg
push
ret
and
xlat
in
push
or
aas
adc
dec
cmp
mov
sub
loop
jne
dec
ss
bound
test
inc
pop
push
jae
mov
ret
inc
cwtl
jno
sbb
dec
les
mov
and
or
xor
je
roll
sbb
cmc
in
sbb
xchg
dec
in
cmp
dec
dec
sbb
dec
js
xchg
scas
cmpl
inc
cmc
clc
sub
in
xchg
sub
daa
nop
test
rorl
inc
pop
pop
sbb
mov
inc
sub
dec
loope
orl
mov
dec
jne
inc
mov
pop
imul
out
frstor
mov
cmp
add
mov
dec
sarb
ja
subl
add
cltd
sbbl
movsl
icebp
clc
xlat
enter
fsubp
dec
inc
cmp
outsb
je
icebp
paddw
clc
or
rcrl
dec
inc
dec
rorb
outsb
push
xchg
xor
int3
mov
insl
dec
jb
into
mov
or
fcomps
adc
and
mov
imul
adc
and
push
inc
dec
jb
add
sub
jge
push
cmp
hlt
ds
adc
or
fdivs
adc
fcom
lods
dec
mov
shll
cltd
mov
sub
into
dec
inc
add
mov
imul
je
sbb
and
push
mov
test
adc
addb
cmc
sti
mov
inc
arpl
pop
sbb
int3
push
mov
movsl
add
cltd
dec
outsl
sub
mov
and
push
add
stc
test
rclb
out
push
inc
and
add
idiv
xor
movsb
push
pop
and
lods
testl
lahf
inc
or
pusha
in
pop
and
sbb
out
cmp
push
lea
sub
jnp
add
adc
mov
cmovo
mov
insb
dec
and
sbb
and
addr16
xchg
push
dec
inc
sub
xor
sbb
aam
push
rorl
jns
dec
jnp
mov
and
cmc
jle
incl
or
aas
adc
push
push
fnstenv
inc
xchg
pop
push
dec
and
jb
push
sbb
cmp
test
dec
inc
mov
sahf
inc
lock
ret
xchg
jle
push
lods
or
lods
pop
inc
xchg
push
mov
ret
fs
jo
push
sub
jb
and
ror
gs
inc
fsubr
das
mov
nop
arpl
es
popa
xor
xchg
xor
icebp
mov
xchg
xor
nop
arpl
lods
cmp
inc
cltd
je
stos
dec
cmp
and
idivb
push
cmp
adc
add
mov
sarl
cmp
xorl
inc
shll
iret
push
popa
mov
loope
aas
rcl
aas
dec
sub
jl
jge
mov
jb
adc
add
sub
dec
sbb
xchg
incl
sbb
test
add
shll
cmpsb
movsb
jge
mov
das
xchg
outsb
inc
enter
out
push
push
addl
js
dec
cmp
sbb
add
jmp
dec
adc
sbb
enterw
xchg
nop
movl
pavgb
inc
cld
sub
jb
jno
les
xchg
mov
scas
jmp
int3
jbe
fistps
jmp
xchg
xor
lea
lods
adc
cmpsb
xlat
push
dec
aam
push
call
inc
popf
mov
in
std
adc
dec
jmp
mov
cli
stos
add
divb
sub
inc
adc
adc
push
and
jmp
cld
cmp
lahf
aam
inc
notl
sbb
mov
stc
sbb
inc
movsl
in
ret
dec
fildl
xchg
insb
adc
or
shlb
dec
ret
cs
cmp
je
and
cmp
cmpsb
adc
inc
ret
mov
pop
xor
pop
dec
xchg
inc
jle
inc
mov
pop
repnz
and
adc
mov
ss
push
mov
push
bound
aam
aam
sub
adc
mov
push
dec
ficoms
scas
notb
sbb
subl
pusha
and
mov
inc
push
lahf
cmp
in
fistpll
push
or
scas
int
adc
leave
loop
nop
in
sbb
nop
insb
data16
push
or
xor
add
and
inc
sub
aaa
and
adcb
sbb
fwait
add
pop
inc
cwtl
pop
inc
and
addr16
fisttpl
and
cmp
push
or
sbb
jns
mov
dec
stos
add
inc
sbb
adc
cmp
int3
mov
fcoms
imul
rclb
and
and
outsl
xchg
or
inc
clc
xchg
testl
mov
mov
imul
mov
inc
or
pop
call
add
dec
fildl
dec
add
or
inc
jae
jno
mov
adc
sbb
dec
pop
leavew
sbb
jns
inc
aam
and
rorl
add
adc
sahf
imul
sub
jo
loope
nop
outsb
mov
ja
mov
fsubrs
jo
jnp
stos
inc
xor
stos
xchg
adcb
les
inc
test
mov
mov
out
sub
adc
outsb
subl
mov
inc
rcl
and
mov
push
inc
inc
ljmp
mov
mov
xor
out
pop
push
sub
fwait
pusha
xchg
or
xchg
dec
or
inc
sub
stos
jge
jp
pop
cltd
out
and
out
lahf
mov
xchg
push
push
notb
xor
or
aas
xor
negl
pop
faddp
into
or
push
cld
sub
nop
into
add
andl
add
mov
rcl
or
cmp
shr
pop
and
pop
mov
sub
jge
gs
or
add
sarl
or
cmp
xchg
adc
adc
arpl
push
leave
adc
mov
sbb
add
inc
mov
in
shlb
fdivs
push
xor
inc
xchg
in
adc
jne
ret
cli
add
inc
pop
adc
sbb
and
das
mov
clc
sub
xor
sbb
aad
testb
xchg
rolb
add
inc
dec
mov
popa
in
add
js
data16
rorb
loop
daa
and
insb
mov
adc
insl
shll
push
sub
add
add
pop
add
dec
xchg
and
add
leave
rorb
and
stos
loope
aaa
adc
sbb
adc
sub
and
jmp
xchg
push
pop
or
sbb
ja
stos
mov
enter
add
push
stc
inc
sahf
out
push
js
sub
adc
shr
test
pop
sbbb
jl
sub
paddq
cmc
lock
faddl
outsb
xor
lods
pop
loope
sub
faddl
or
mov
mov
das
int3
dec
cwtl
adc
sub
in
cmpsl
out
and
mov
es
cwtl
adc
aad
testl
cmp
mov
mov
lret
rcrb
lret
test
mov
mov
adcl
mov
jne
cli
adc
mov
in
push
sub
insb
inc
rcl
repz
push
xor
mov
fcomps
pop
enter
cld
in
mov
loopne
in
sahf
xchg
dec
pop
push
sub
mov
mov
enter
nop
pop
inc
iret
les
lds
adc
cld
xchg
inc
ds
xchg
bound
out
adc
shrb
test
jne
lock
movsb
bound
mov
loop
sahf
bound
cmp
and
sub
mov
addr16
mov
rcrl
mov
pop
es
fst
ret
dec
jmp
and
in
dec
sbb
push
int3
inc
push
popf
rolb
in
inc
fildll
push
inc
and
xchg
sub
in
mov
outsl
fs
sbb
inc
mov
add
xor
rcrb
cmp
aad
xchg
mov
cmp
roll
fcoml
lods
insl
lods
push
nop
add
push
jle
leave
add
insb
fs
xor
in
popf
xchg
frstpm(287
out
mov
cmp
cmp
gs
in
nop
jmp
shrb
jp
jg
test
mov
inc
je
fcoms
inc
enterw
call
filds
repnz
outsl
inc
and
sbb
enter
int
in
jp
add
fdivs
pop
les
iret
pushf
xor
push
adc
xchg
xor
xor
pop
xor
push
or
or
adc
cwtl
push
push
notl
lods
jno
or
insb
test
repz
mov
add
scas
addb
lock
mov
mov
jns
cmp
dec
add
cs
mov
in
orl
dec
add
add
dec
ja
sbb
or
or
popa
push
dec
push
bnd
or
pop
sahf
scas
inc
fisubl
add
push
testb
adc
inc
mov
jns
fs
add
or
pop
gs
mov
mov
out
and
dec
jne
fwait
and
sahf
out
sahf
sbb
adc
or
xchg
sbb
ljmp
loopne
sbb
lret
fsub
jbe
or
pop
add
or
sbb
mov
out
push
push
jp
fisubl
inc
leave
clc
or
aam
push
pop
mov
inc
loopne
jmp
cmpsb
jle
xchg
push
and
cmp
mov
push
out
add
cld
fldt
pop
mov
mov
pop
rcrl
and
dec
cwtl
test
or
or
outsl
mov
xchg
clc
pop
ja
test
lret
sub
repz
or
sbb
nop
xchg
lret
xor
cmp
push
or
or
movb
mov
sbb
inc
js
cmp
adc
pop
and
and
xchg
fsubs
and
sahf
out
out
sub
push
push
or
or
or
into
repz
or
or
cmpsb
push
adc
push
push
mov
adc
pusha
popf
scas
or
sbb
aas
sahf
lret
ja
cmp
or
or
or
sub
jbe
or
mov
pop
jo
push
movsb
decl
mov
and
pop
add
lret
fisubs
ret
and
push
sbb
inc
sahf
or
or
in
in
or
push
push
rcl
jnp
push
pop
adc
dec
adc
add
add
push
add
push
adc
lea
and
adc
clc
cmp
hlt
addr16
pop
movsl
je
das
and
ljmp
hlt
lea
dec
sub
push
or
icebp
xchg
adc
mov
add
and
test
add
adcb
dec
mov
pop
or
add
scas
mov
adc
fsubrp
push
pop
mov
nop
add
and
sbb
mov
dec
lea
enter
push
push
pop
mov
xor
mov
in
outsl
jae
or
ret
push
or
or
in
in
push
add
ret
cld
mov
or
xchg
mov
inc
lea
aam
mov
int
xchg
mov
xor
inc
jmp
dec
loope
aam
mov
xchg
les
mov
cmpsl
sbb
push
popa
in
and
shlb
jle
cmpsl
mov
imul
loopne
pop
cld
outsb
inc
xchg
and
je
dec
lret
adc
pop
mov
cmp
xchg
lret
mov
aas
stos
movsb
aad
inc
insl
mov
pusha
nop
cmp
shrl
fs
fwait
pushf
mov
jb
ret
xor
push
jl
insl
fs
imul
clc
xchg
cltd
push
lods
addl
lods
add
push
ss
inc
sub
imul
mov
fiaddl
jmp
jp
nop
cmc
fists
inc
cld
pop
add
fstpl
arpl
jecxz
fwait
push
push
int3
adc
test
sub
lods
jae
popa
pop
dec
cmp
add
call
scas
test
sub
mov
cmpsb
dec
dec
xor
push
sbb
pop
sarb
imul
jno
out
int3
add
jl
adc
mov
pop
test
scas
jnp
jmp
sbb
add
add
ds
cld
insb
adc
add
lods
nop
ss
ret
push
sub
ss
jmp
and
aam
frstor
pop
enter
decb
test
push
andb
out
fildl
xchg
jb
sub
pop
ja
or
cmp
sub
or
jbe
test
lods
and
popa
pop
fisubs
fstpt
dec
jmp
inc
ljmp
add
and
cmpl
rorb
jno
jmp
and
sub
mov
jg
nop
les
pusha
sub
push
scas
dec
pop
push
add
adc
popa
cwtl
lret
imul
or
inc
fwait
adc
pushf
xor
sbb
jo
add
rclb
or
ror
jmp
nop
scas
push
mov
add
and
fcomps
jns
pop
insl
pop
bound
dec
or
jbe
addr16
xchg
lock
jmp
cmp
sub
xchg
pop
cmp
pop
out
ja
jb
mov
adc
add
or
xchg
testl
rorl
or
mulb
mov
lret
jle
push
cmp
add
xchg
movsb
push
daa
negb
ret
loopne
jns
add
sbb
ja
cltd
and
xchg
dec
jae
add
push
cmp
les
test
add
clc
clc
stos
adcb
rolb
inc
in
pop
jg
jb
pop
push
xchg
cmp
loop
and
push
jo
jle
jg
fs
push
lret
xchg
stos
mov
or
dec
outsl
mov
inc
arpl
lods
add
in
sub
jb
adc
daa
lock
cmpsl
and
add
dec
adc
test
jge
dec
and
adc
push
adc
movsb
je
inc
jp
rcrb
sub
or
pop
cmpsl
pop
mov
jmp
dec
fisubrs
adc
js
movsb
xchg
mov
movsl
and
lods
dec
and
js
cmp
xchg
popa
sub
subb
or
sub
repnz
add
sahf
subl
sbb
test
mov
or
xchg
mov
or
hlt
or
into
movsl
adc
pop
sti
jne
cmp
ja
ret
das
inc
jae
jge
and
xor
ret
xchg
in
pusha
adc
jge
cs
add
data16
addr16
jb
mov
imul
insl
inc
push
inc
popa
test
in
popf
push
add
mov
inc
aam
insb
push
mov
xchg
adc
les
xor
sub
mov
jbe
push
sbb
mov
jo
insb
imul
leave
in
or
xor
cld
cld
adc
fs
shlb
and
pop
addr16
mov
mov
xchg
lock
nop
push
or
jmp
cmp
mov
mov
fcomp
aas
jo
sub
sub
xchg
mov
or
out
sahf
lea
mov
inc
ja
inc
fdivs
enter
fcomp
sub
sahf
xor
sub
xor
je
jl
or
and
lock
aaa
pop
adc
ss
dec
and
stos
mov
add
stos
mov
cmp
mov
cmpsb
jo
lea
repnz
lea
push
mov
call
or
fwait
add
mov
add
mov
sub
push
fistps
movsb
loop
rorl
sbb
xor
dec
nop
add
mov
mov
add
lahf
dec
and
sbbl
sub
push
xchg
xchg
push
xchg
aas
pop
je
and
add
imul
cmp
jl
jl
add
and
mov
in
push
adc
nop
push
enter
insl
dec
cmp
pop
jb
or
jge
pop
jo
add
add
inc
push
dec
jge
jge
je
adcb
xor
or
push
mov
or
je
add
jmp
leave
sarl
inc
inc
pop
jmp
sbb
xor
les
xchg
data16
sub
lahf
xchg
jle
add
inc
or
rclb
mov
cmp
add
jle
and
in
jle
sbb
ret
repz
aad
jo
outsl
psubusw
pop
or
xor
ja
add
dec
dec
sbb
repz
imul
pusha
lods
cli
adc
ret
repz
add
imull
jnp
lods
add
mov
xor
cmp
ret
lcall
jb
mov
inc
mov
sbb
ficomps
xor
xor
adc
sub
cmp
and
adc
inc
inc
cltd
mov
push
or
sub
fldenv
jb
push
xor
dec
cs
mov
jmp
and
ret
push
fnstenv
jmp
fists
fdivl
sub
pop
add
rorb
insb
mov
or
pop
push
clc
mov
add
cmp
repnz
push
xor
add
push
outsl
fwait
sbb
add
je
loop
outsb
xchg
pop
scas
jbe
sbb
iret
or
xor
mov
roll
pop
or
or
jo
insb
cmp
outsl
divl
popf
xor
adc
xor
sbb
push
pop
enter
inc
adc
nop
out
ss
in
sbb
or
jo
shlb
push
push
jg
xorb
aas
mov
int
cmpsl
js
lahf
xchg
jp
adc
test
xor
pop
sub
imul
decl
test
dec
lcall
cmp
jae
loopne
test
add
sub
fdivrl
push
jg
scas
adc
sub
addb
mov
push
lock
sub
add
add
add
jmp
sub
cwtl
aas
movsl
or
sbb
pop
add
jae
and
add
mov
dec
jne
addl
stos
inc
test
pop
xlat
mov
into
push
out
fcmovu
mov
push
test
xchg
push
mov
movsb
add
lahf
add
testl
movsb
fildl
fsubl
pop
in
xor
jne
xorb
hlt
xchg
dec
adc
cmpsl
sbb
inc
movb
mov
or
daa
cmp
ret
imul
jle
or
xchg
or
pop
jbe
sub
push
call
rorb
push
add
mov
sub
filds
insb
out
cmp
jg
dec
sarl
in
subl
pusha
in
dec
inc
cmp
sarl
jb
mov
dec
sbb
jne
stc
and
out
test
mov
add
outsl
stos
sub
addr16
sub
or
pop
lret
ss
je
jl
popf
push
ljmp
dec
mov
clc
outsb
loopne
xchg
add
mov
outsb
ljmp
popf
mov
sub
mov
hlt
sbb
jne
in
clc
lods
cmp
ja
sbb
adc
nop
in
hlt
ja
push
fcoml
icebp
mov
in
sub
hlt
call
es
in
cmpsb
repnz
loop,pn
call
xchg
in
loope
jecxz
mov
loop
cmp
faddl
cltd
add
nop
inc
roll
adc
pop
xor
shrb
popf
les
ror
enter
cwtl
outsl
jmp
leave
mov
pop
pop
jecxz
or
shlb
push
push
bound
xor
or
call
cmp
mov
mov
sub
xchg
or
daa
nop
mov
jge
mov
sbb
out
add
leave
jo
mov
mov
jne
mov
xchg
pushf
or
sbb
andl
jge
popa
and
es
inc
mov
aaa
xor
pop
pop
aam
jecxz
push
add
nop
loopne
test
sub
nop
sbb
mov
xor
incb
jne
sarb
sub
or
ss
sbb
js
mov
mov
mov
jne
lret
sub
test
ja
int3
frstor
push
dec
stos
mov
enter
and
fucomi
xor
les
dec
shl
fistps
xor
pop
rclb
rcl
mov
sub
push
ret
xor
or
push
imul
movsb
sbb
pop
stc
xchg
push
jge
xlat
or
jnp
popf
cmp
push
cld
push
mov
adc
clc
mov
mov
or
out
add
mulb
fbstp
testl
add
sub
or
pop
pop
pop
pop
pop
shlb
insb
pop
popa
fldenv
adc
adc
icebp
imul
mov
cmp
clc
sub
mov
lock
in
fcoml
fdivrs
in
mov
hlt
rclb
popa
hlt
jbe,pt
jge
jne
mov
adc
popa
push
daa
les
push
aad
dec
fidivs
sub
dec
sti
sahf
xor
js
inc
int3
stc
scas
popa
stos
sub
mov
jae
sbb
adc
add
mov
or
inc
jo
jns
cli
and
pop
lcall
dec
cld
mov
jbe
fstl
sub
shr
pop
aas
mov
mov
xlat
mov
add
dec
les
nop
cmp
or
xor
fiaddl
mov
mov
jbe
fdivl
xchg
scas
dec
fidivl
nop
jge
data16
lods
jb
divb
pushl
gs
aaa
sub
fdivrs
mov
cwtl
dec
sti
mov
add
xchg
fwait
push
sarl
clc
adc
or
jecxz
push
add
jo
add
xchg
cmc
in
mov
mov
pop
add
andb
mov
cmp
cmp
jmp
or
lock
or
lcall
imul
add
in
mov
pop
insb
pop
pop
mov
mov
inc
repnz
cmp
jnp
shlb
xor
sti
dec
fldl2e
je,pn
or
inc
or
pop
fldt
movsb
inc
xor
fildll
cs
imul
loopne
rcr
adc
pushf
xor
adc
pop
push
adc
add
adc
xchg
xor
jns
pop
mov
inc
and
push
and
adcl
mov
add
xchg
jp
cmp
mov
insb
jle
scas
add
in
inc
stos
jno
xchg
inc
cmp
cmp
sbb
std
rorb
lock
movb
sete
inc
push
insl
popl
fdivrp
push
mov
pop
das
inc
lret
and
out
loope
mov
call
inc
push
push
mov
arpl
lock
stos
add
cmp
xchg
mov
cmp
in
loopne
inc
shlb
push
in
dec
mov
dec
pusha
cmp
jg
pop
sub
sub
ss
or
notb
dec
xchg
and
xchg
insl
cmp
fnstenv
xchg
xor
orl
sbb
stc
jne
pusha
add
out
sbb
dec
pop
sbb
xchg
dec
xchg
adcl
add
loopne
lods
and
push
lods
inc
inc
scas
movsl
jmp
xchg
std
repz
jmp
adc
shrw
repz
mov
xchg
sbb
outsb
out
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
lret
mov
ret
dec
pop
sbb
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
jge
fmuls
mov
ljmp
sahf
and
sub
call
push
sbb
inc
sbb
sub
aaa
jmp
sbb
clc
push
jge
sahf
xchg
pop
lock
mov
jmp
or
adc
testb
push
and
int3
adc
lea
daa
or
insl
push
dec
jle
mov
rclb
xor
dec
adc
lcall
xchg
sbb
adc
jge
inc
mov
mov
das
mov
inc
or
xchg
inc
mov
cmp
fs
mov
lds
lds
outsb
mov
sub
mov
jecxz
popa
sbb
mov
sub
jne
push
mov
hlt
add
mov
nop
vprotq
or
js
pop
data16
je
xchg
inc
aaa
inc
mov
dec
cmc
pop
and
xchg
je
call
and
jmp
push
cwtl
or
pop
inc
xor
lret
mov
push
in
cmpsb
mov
rcrl
mov
mov
jnp
inc
pop
and
ljmp
cmp
jb
mov
pop
sub
push
mov
mov
ret
sub
jbe
xor
jbe
lods
add
adc
ret
cmp
jae
mov
add
adc
outsl
inc
rorb
push
lods
mov
scas
std
mov
or
mov
stos
ss
outsb
add
ds
jb
inc
sub
xor
lea
dec
adc
sbb
ss
fbstp
or
sbb
gs
cmp
lea
add
jmp
in
add
cvtps2pi
mov
cmp
jbe
jle
pop
add
test
jb
push
or
fldt
je
or
cmpsb
inc
or
test
push
je
mov
cmp
push
sub
fsubs
add
or
jmp
or
mov
int3
inc
mov
adc
gs
sub
and
jmp
mov
jbe
mov
push
and
cli
fs
add
inc
xchg
fsubl
sarb
leave
sarb
mov
cld
lods
cmp
je
sub
lret
loopne
mov
mov
or
shl
in
rcll
or
xchg
lea
adc
pop
pop
inc
add
xor
mov
and
add
imul
inc
cmp
repz
and
add
xchg
jno
incb
push
nop
dec
mov
mov
lcall
add
mov
lock
or
inc
mov
cwtl
popa
sbb
ss
cmp
addl
out
cwtl
sarb
pop
pop
mov
out
ds
inc
add
mov
add
pusha
out
lods
inc
jmp
push
shlb
mov
in
mov
test
add
xor
cmpb
sbb
push
jb
cmp
pop
adc
mov
add
jne
mov
and
or
inc
into
or
add
gs
inc
or
enter
pop
fisubl
mov
clc
data16
and
adc
das
mov
ficoml
sub
inc
sbb
mov
push
das
cmp
sub
data16
loope
leave
xchg
pusha
popa
or
into
je
inc
cmp
xlat
sub
mov
mov
sub
ret
mov
mov
mov
push
sub
add
inc
mov
push
in
cmpsl
imul
sub
mov
ja
sbb
sub
rcrl
pop
stos
jno
jp
pop
xchg
push
test
cmp
mov
mov
pop
nop
stc
add
test
into
dec
int
add
lods
and
push
lahf
sti
pop
lcall
std
inc
mov
cs
mov
popf
in
push
mov
and
and
jg
mov
sub
pop
rcrb
js,pt
cmp
shr
cmp
loop
mov
mov
test
nop
mov
cltd
add
roll
pop
inc
outsl
add
cmp
aaa
cmc
ret
push
or
cmpsl
enter
push
lods
mov
inc
cmp
jne
orb
int
ljmp
jecxz
clc
add
sbb
shr
cmp
dec
mov
pusha
mov
and
out
es
mov
and
addr16
lock
mov
xchg
adc
rolb
lea
mov
mov
inc
pop
dec
sbb
mov
and
ret
add
add
test
push
jge
enter
ljmp
popa
rorb
shr
cmpsb
decl
or
mov
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
add
sbb
push
adc
outsl
call
fadd
fists
int3
iret
push
or
push
imul
lds
or
aas
dec
pop
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
mov
sbb
push
mov
push
movsb
mov
push
stos
add
fcoms
insl
jmp
aad
sbb
ja
cmpb
or
loopne
mov
ret
and
cli
xchg
mov
push
cmpb
inc
addb
xchg
test
ja
in
lret
inc
data16
lds
inc
dec
repnz
iret
popa
lods
loope
dec
sarb
cli
jl
fisttps
jmp
mov
cld
mov
imul
add
aam
lea
lock
jo
inc
xchg
add
jge
mov
and
pop
adc
jo
aas
sahf
adc
ret
clc
lock
xchg
repnz
mov
add
jl
pop
call
ret
xor
add
inc
pusha
sub
adc
add
push
and
mov
push
mov
sbb
mov
xchg
dec
and
mov
sub
xor
imul
adc
xor
jb
ret
lea
outsl
cmpl
jbe
insb
and
mov
pop
cltd
pop
jno
dec
aaa
rcr
add
mov
lea
or
les
or
add
mov
mov
mov
loopne
jbe
mov
dec
or
and
popf
nop
or
adc
cmpsb
inc
xor
xor
lea
sti
push
pop
pusha
mov
cmp
jg
leave
sub
repz
mov
outsb
mov
jae
or
sbb
xchg
rcll
pop
mov
sub
orb
xor
or
mov
or
popl
sbb
outsl
add
xchg
cmpsb
push
cmc
hlt
pop
push
cmp
data16
lret
dec
out
push
cmp
jge
filds
and
jmp
add
inc
xor
mov
mov
xchg
pushf
pop
and
push
push
insb
arpl
xor
mov
loopne
add
jl
add
fdivs
icebp
gs
out
jg
push
shll
sub
add
orl
popa
and
cmpsl
push
mov
scas
inc
cmp
inc
inc
mov
inc
out
push
pop
or
pop
popa
jl
rolb
ja
xchg
in
sbb
or
adc
and
nop
lock
inc
loopne
mov
movsb
int
inc
pop
leave
mov
lock
sbb
inc
xor
push
xchg
adc
adc
pop
xchg
subl
pop
and
enter
or
es
adc
js
push
enter
adc
hlt
lret
decl
testb
and
lds
test
adcl
pop
pop
outsb
clc
nop
push
xchg
push
pop
enter
loop
pusha
out
or
inc
test
add
pop
punpckhwd
or
ja
popl
fsubs
mov
lods
sahf
lea
addb
push
add
add
push
mov
pop
movzbl
xchg
inc
xchg
or
push
rolb
fdivrs
or
jnp
pushf
lds
xor
push
rcrl
lock
or
aas
cli
or
xchg
push
cmp
cmp
sets
xor
lods
or
or
xchg
jne
or
cmp
je
mov
push
aad
mov
testb
cmp
jge
imul
jge
push
or
inc
pushf
imul
std
mov
pop
sbb
dec
adc
dec
fisubrs
sbb
adc
or
fdivl
incl
loopne
add
push
push
push
notl
dec
movsb
out
inc
ret
cs
or
and
add
xchg
xor
pop
push
mov
jmp
mov
push
jle
mov
push
xor
outsl
div
pop
cmpsl
mov
dec
mull
mov
adc
rorl
dec
sbb
inc
mov
and
pusha
in
jle
pop
shr
int
pop
mov
jle
push
and
in
sub
dec
idivl
jmp
jle
cmpb
and
pop
movb
pop
xor
clc
inc
test
stc
add
fistpl
inc
cmp
jne
popa
dec
shlb
or
dec
leave
push
push
or
ret
jmp
xor
mov
mov
dec
push
push
push
pushf
or
adc
jge
or
fcomi
push
push
pusha
ljmp
adc
cmpsl
and
lock
mov
jbe
popl
jg
sbb
add
ret
mov
cmp
lret
or
lahf
push
shlb
inc
adc
int
outsb
fcompl
mov
mov
lods
es
js
shrb
icebp
xchg
int3
push
cmp
jae
sbb
xchg
outsb
mov
dec
mov
mov
mov
push
and
dec
push
jmp
sub
add
das
add
mov
ret
sbb
mov
decl
adc
add
cs
sbb
fistps
inc
add
fistpll
dec
movb
mov
or
or
jns
je
loope
neg
inc
fisttpl
jmp
xor
mov
frstor
add
push
sub
fdivs
es
movsl
jmp
or
mov
inc
cmpsb
xor
out
mov
lahf
or
and
push
push
xor
xchg
push
out
jns
dec
add
pop
fs
sgdtl
shll
add
xor
lds
orl
jne
fldz
jmp
mov
xchg
jecxz
mov
sarb
inc
out
inc
sub
sbb
add
sti
aaa
pop
jns
fchs
and
adcl
rcrl
je
ds
mov
add
fnstsw
not
and
lahf
mov
mov
test
sbb
in
cmp
inc
cmp
enter
cmp
push
xchg
add
pusha
jno
daa
pusha
test
das
dec
add
add
test
and
add
cwtl
je
dec
add
inc
inc
iret
rcrb
addr16
xchg
add
pop
jae
jg
daa
movl
jae
push
nop
or
and
sti
adc
out
iret
inc
insb
outsl
bound
insb
push
jb
or
inc
insl
je
imul
xor
push
aam
dec
out
fs
ret
sbb
sbb
scas
clc
lods
jno
lea
sub
xor
arpl
movsb
cmp
ss
aam
je
sti
mov
mov
push
pop
sub
arpl
mov
or
fldenv
icebp
adcb
pop
cmpl
movsb
pop
daa
sub
cwtl
sbb
add
mov
add
out
jnp
aas
inc
jne
or
xchg
aas
adc
pop
mov
movsb
jbe
inc
push
gs
imul
push
std
and
jb
mov
in
test
incb
cmp
jp
push
push
xchg
dec
in
mov
cld
andps
sbb
push
clc
cvtps2pd
sbb
dec
call
jns
out
and
push
fnsave
int
testl
out
sti
jg
sub
mov
dec
xchg
push
sub
or
aas
mov
add
lds
inc
mov
dec
push
mov
pop
xchg
cs
or
int3
sbb
inc
adc
outsb
pop
add
es
push
add
out
dec
adc
xlat
sbb
cmp
mov
adc
inc
or
mov
test
movsb
test
mov
adc
lods
sub
scas
dec
pusha
sub
fucomp
pop
adc
cli
sub
xchg
das
in
mov
pusha
enter
cmp
subb
iret
mov
inc
mov
scas
bound
fsts
or
insl
in
call
aam
leave
leave
in
in
out
out
enter
scas
rcl
ror
dec
push
jns
scas
fs
scas
loopne
lods
pop
fs
scas
enter
push
loope
scas
bound
pop
sahf
and
xor
xor
pop
xchg
imul
cmp
add
enter
jnp
add
inc
push
sbb
pop
bound
add
adc
mov
xchg
mov
and
mov
adc
adc
notl
sbb
add
jbe
add
faddl
add
fdiv
mov
and
xchg
or
dec
outsl
imul
add
jecxz
ss
add
add
pop
pop
push
pop
or
dec
jne
test
repnz
sbb
lods
fists
stc
sbb
lock
jg
adc
lahf
mov
push
or
sbb
dec
into
dec
pop
push
inc
or
xor
and
pop
jns
mov
sub
jo
movsb
dec
adc
lea
js
cmpsb
in
in
cmp
xlat
or
jno
out
add
mov
xor
ss
add
sub
stos
divl
cmpsl
mov
and
or
nop
les
jmp
pop
mov
mov
mov
add
xchg
xlat
loope
dec
sbb
jmp
inc
test
insb
mov
arpl
inc
mov
inc
sub
mov
ret
mov
nop
sbb
mov
ja
dec
sub
lahf
push
cmp
addb
out
push
enter
mov
jnp
inc
push
cmpsl
shll
push
xor
jae
in
inc
dec
leave
inc
in
mov
mov
mov
pop
dec
add
sbb
fcmovnb
iret
subl
pop
subb
push
inc
loope
lcall
xor
nop
std
add
ljmp
inc
aaa
xchg
push
pop
sub
xchg
aaa
jno
nop
xchg
sbb
mov
js
dec
jmp
mov
and
or
out
dec
orb
movl
in
sub
sub
inc
push
jbe
repz
xor
add
cmp
sbb
data16
adc
mov
xor
int3
inc
pushf
sahf
sahf
or
adc
xchg
roll
add
sub
or
xor
arpl
cli
jnp
jbe
loopne
lock
mov
add
dec
loopne
cltd
xorb
lcall
insb
xor
lds
lds
add
cli
or
fwait
adc
pop
mov
pop
jnp
std
sbb
adc
das
sbb
test
out
xor
jo
cmp
push
xor
and
sub
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
sub
outsl
dec
repnz
dec
shlb
in
sub
xlat
jno
dec
jne
sbb
rcrb
ret
in
xor
dec
lock
inc
mov
xchg
lret
pop
shll
adc
add
icebp
lret
cmpb
lret
or
xchg
mov
popa
push
mov
or
stos
inc
sbb
or
sbb
aas
pop
mov
mov
sbb
out
xor
adc
aaa
mov
nop
aam
orb
movsb
and
push
inc
or
stos
cmp
or
jmp
mov
clc
or
inc
loopne
out
repz
pushf
insb
pop
or
pop
mov
cmpsb
hlt
lods
pusha
pcmpeqb
popf
les
sbb
hlt
lock
xor
test
mov
repz
repz
add
inc
mov
fisubrs
or
xorb
negb
fs
and
enter
xchg
nop
lcall
dec
ja
cmpb
repz
adc
out
out
je
or
je
or
popa
mov
add
test
rorl
jle
les
add
dec
push
insb
fbstp
je
jmp
mov
in
popa
xlat
mov
std
xchg
fwait
ss
mov
inc
mov
xor
xor
dec
inc
in
jl
sub
inc
sub
mov
and
enter
inc
sbb
xchg
ja
sbb
adc
pop
adc
dec
adc
cwtl
inc
inc
mov
jo
mov
ja
fwait
sub
xchg
pop
mov
pop
inc
mov
enter
aam
movsb
and
pop
movsl
fsubrp
mov
adc
ret
and
js
or
ss
xor
pop
fcoms
and
je
lcall
test
mov
xchg
add
push
movsb
enter
sbb
add
lret
cs
adc
add
nop
and
xor
dec
gs
sub
xchg
add
je
enter
jnp
add
arpl
xor
add
iret
es
and
dec
insb
or
mov
add
xchg
iret
dec
xor
xchg
inc
sahf
xchg
scas
fldcw
or
dec
fs
lret
add
pop
aaa
das
fwait
add
outsl
add
push
cwtl
push
jge
sbb
sub
or
jne
push
and
test
mov
fcomp
jge
jge
dec
outsl
fs
mov
leave
insb
gs
aas
push
xchg
xchg
mov
movsb
addr16
adc
loope
or
aaa
jb
pop
sub
in
pop
das
or
je
jae
das
adc
je
in
aaa
lea
pop
inc
outsl
bound
and
and
push
pop
dec
rcrb
sarb
lock
and
xor
outsl
sbb
push
sbb
or
and
ss
xor
pop
push
mov
jmp
push
push
push
or
xor
push
insb
arpl
aaa
sub
imul
inc
sub
mov
or
push
adc
outsb
push
mov
sub
push
inc
les
addb
fildl
mov
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
pop
add
add
data16
jno
adc
in
xor
push
mov
dec
pop
xor
xor
jp
popa
imul
push
push
pop
aaa
sbb
or
das
push
dec
and
lret
iret
pop
or
pop
mov
inc
mov
test
push
xor
add
cld
jae
cmp
mov
sti
dec
sbb
jle
inc
mov
popa
pushw
xor
aaa
or
sbb
dec
inc
decb
cmpsl
inc
sub
jo
popa
cmp
sub
insb
xlat
push
adc
insb
push
imul
jo
cld
addr16
pop
jp
sub
inc
adc
in
jg
inc
pop
dec
dec
inc
inc
dec
dec
inc
push
jg
aas
xor
or
sbb
adc
cmp
nop
pop
dec
push
mov
or
notl
cmp
pop
fists
adc
push
in
pusha
push
test
mov
jne
popa
push
mov
mov
gs
inc
inc
and
inc
xchg
sbb
cmp
sub
ret
push
mov
adc
push
aam
or
xor
inc
pop
pop
push
push
iret
fnstenv
test
aas
call
mov
or
enter
pop
and
push
xor
orps
inc
inc
xor
insl
ja
jbe
xchg
jl
dec
xor
pop
or
cmpsl
push
sbb
push
mov
pop
push
cs
je
sbb
lret
insb
pop
pop
add
sub
dec
shll
sbb
es
and
stos
pop
pop
lods
inc
cmp
pop
or
mov
rcrl
push
test
in
lret
xor
adc
rcrl
pop
pop
push
push
dec
jne
cmp
push
pusha
enter
ds
imul
cli
insb
je
imul
inc
mov
outsl
outsl
jne
cwtl
stos
push
movsb
cmp
pusha
mov
jne
and
pop
pop
mov
cmp
and
pop
pop
popa
add
add
mov
movl
clc
loopne
in
xchg
inc
mov
push
inc
push
stc
addr16
and
inc
cld
fwait
orl
xor
ljmp
pop
iret
xor
popf
aas
or
in
jp
xor
push
inc
rcrl
xor
sub
jne
push
xor
pop
ja
push
jo
cmpb
push
and
mov
push
push
add
jmp
outsl
mov
xchg
jne
cwtl
lea
dec
push
ss
and
push
insb
rorl
mov
or
movsb
add
jbe
movsl
adc
sub
sbb
cmp
pop
pop
and
cmp
fidivrl
mov
cmp
and
insl
aas
xor
xor
xor
aaa
cmp
and
lcall
cmp
in
popf
cmp
xor
outsl
test
cmp
xor
xor
aas
push
dec
xor
aas
cmp
fisttpll
aas
xor
inc
mov
mov
aas
cmp
jg
dec
lcall
cmp
mov
aas
sti
adc
aas
cmp
sub
inc
xor
cmp
rorl
xor
les
inc
aas
ss
aas
comiss
xor
cltd
push
mov
ds
sub
ss
push
push
aas
mov
aaa
pushl
rorl
mov
scas
nop
push
lods
xor
ja
mov
xor
add
mov
inc
xor
rol
xor
cmp
or
aas
jle
add
xor
mov
ja
or
jle
cmp
arpl
das
nop
mov
cmp
xor
xor
cmp
or
aaa
das
cmp
enter
xor
or
xor
cs
adc
aaa
cmp
xor
jl
pushf
inc
cmp
xor
orl
or
in
pop
sbb
das
cmp
xchg
in
cmp
xor
adc
dec
xor
cmp
xor
add
add
jg
outsl
mov
adc
enter
dec
add
add
xor
xor
push
enter
xor
xor
xor
cmp
shll
adc
shrl
and
aaa
mov
mov
or
and
fsubrs
cmp
ss
pop
mov
xor
xor
add
das
xor
jb
stc
add
xor
or
dec
add
addr16
fsts
dec
xor
inc
mov
adc
add
and
out
mov
add
sbb
mov
push
jmp
adc
imul
push
inc
lret
mov
inc
cmp
rolb
sbb
mov
jae
mov
adc
rclb
hlt
je
gs
mov
add
sbb
jno
add
adc
daa
lahf
dec
lret
add
enter
dec
mov
int3
ss
les
adc
pop
cmpsb
into
add
push
mov
xchg
lock
jb
test
pop
sub
fcom
jo
lea
dec
xchg
arpl
pop
nop
data16
incb
jmp
testl
adc
sub
add
pusha
push
mov
pop
leave
sarb
push
sbb
movsb
add
outsb
popa
mov
nop
pop
mov
je
sarb
lret
xchg
cmp
enter
and
sbb
inc
icebp
aad
adc
or
cmp
or
mov
xor
mov
les
dec
js
sbb
leave
aaa
and
mov
xor
sarb
jne
insl
fnstenv
dec
movsl
ret
sub
clc
aad
mov
push
out
clc
add
ficoml
fmuls
dec
iret
jp
inc
shrl
and
or
in
or
and
das
sbb
push
test
push
les
mov
mov
mov
nop
mov
push
pusha
nop
mov
les
add
push
lods
cmp
mov
lods
ss
fcom
sub
loopne
mov
cwtl
in
jb
inc
or
dec
loope
sbb
inc
add
in
loop
fsub
scas
jge
push
sbb
es
jecxz
les
and
xor
gs
jl
sbb
inc
or
inc
fs
push
nop
in
mov
sbb
inc
pop
jb
in
in
add
call
repnz
popa
and
dec
out
roll
imul
clc
fcomi
xchg
jnp
nop
repnz
sbb
ja
jno
add
jb
push
pop
dec
movups
ret
test
adc
call
pop
adc
aad
in
cltd
in
in
pop
loopne
xor
add
mov
gs
pop
fdivrl
nop
mov
call
pop
jp
xchg
pushf
int3
mov
fstp
mov
sub
push
add
dec
aam
aam
shr
or
mov
bound
push
in
les
enter
cmp
mov
cmp
daa
push
movsl
mov
je
stc
ds
popf
jl
xchg
push
nop
xchg
add
daa
jne
lret
pop
jmp
mov
mov
mov
xor
lods
test
mov
push
movsb
imul
jne
xchg
idivb
lcall
in
pushf
pushf
test
repz
leave
jae
pop
cwtl
out
pop
mov
xchg
nop
nop
sbb
mov
movsl
cmc
jo
sbb
mov
xor
lods
sbb
mov
bound
test
movsb
cltd
aaa
adc
pushl
push
mov
out
subb
icebp
xchg
pop
nop
sahf
mov
adcb
pop
rcrb
subl
fcomi
pop
neg
shl
pop
shl
push
or
pop
rclb
xchg
pop
enter
or
loop
pop
mov
ljmp
cmc
test
add
sub
push
ljmp
lds
jno
je
xor
push
jnp
pusha
dec
outsb
jns
push
mov
sbb
mov
dec
dec
push
fs
adc
fs
push
jmp
mov
add
orl
push
jmp
xchg
insb
ljmp
ljmp
xchg
xor
sub
frstor
jne
sbb
sbb
in
sbb
and
and
pop
xchg
rcrb
mov
fsts
xchg
fcomps
dec
ja
ffreep
sbb
aaa
bound
ret
dec
fstpl
dec
addl
dec
push
xchg
hlt
add
inc
cs
inc
xchg
and
mov
xchg
cwtl
pop
add
xor
sbb
aaa
ss
pusha
dec
dec
or
pop
pop
inc
push
push
cmpsb
dec
push
pop
sub
pop
push
xchg
dec
ret
shrl
fnsave
adc
inc
outsl
orl
adc
mov
inc
addr16
dec
mov
out
jno
popa
aas
popa
je
mov
jle
jo
pop
outsb
outsl
mov
pop
and
adc
push
push
add
mov
sbb
mov
and
pop
aas
aaa
mov
jmp
xor
bound
test
mov
inc
xor
sub
inc
cmp
xor
inc
jge
fs
cmp
push
test
add
addr16
push
test
in
pop
mov
lea
pop
fisttps
aam
pop
push
or
dec
push
test
push
dec
inc
pop
jnp
mov
dec
cwtl
adc
jge
mov
xchg
jne
jo
push
sub
xor
repnz
jbe
sub
add
xor
cmp
dec
cmp
in
arpl
gs
pop
mov
dec
and
dec
or
xchg
dec
push
inc
xor
xor
push
es
add
xor
and
repnz
or
cmp
xchg
add
dec
aaa
inc
inc
and
xlat
xor
sub
fldt
adc
popa
pusha
rorl
aam
outsl
add
add
adc
pop
jmp
or
gs
xor
movsb
sbb
and
loopne
add
les
call
xchg
adc
shlb
sub
dec
sub
xor
mov
mov
adc
or
adc
hlt
rcl
mov
dec
xorl
adc
aaa
mov
dec
and
fcoml
mov
rcl
inc
outsb
and
nop
mov
arpl
xor
sub
pop
pop
pop
inc
sbb
mov
xchg
mov
std
psubw
xor
inc
dec
pop
dec
inc
dec
mov
push
jo
xchg
out
xchg
lea
xor
icebp
pop
sbb
and
mov
push
adc
cmp
add
out
stc
cli
pop
cld
sbb
jnp
data16
xor
xor
shrb
test
xor
sub
cmp
gs
pushl
pop
xor
xor
inc
inc
sub
in
cmp
cmp
inc
cmp
and
pop
ss
inc
inc
xor
outsb
cmp
cmp
inc
xor
inc
inc
sahf
jg
inc
cmp
xor
fs
arpl
je
cmp
data16
arpl
xchg
out
pop
add
pop
xor
xor
pop
lahf
cmpsb
test
pop
and
dec
xor
lods
lret
add
pop
inc
pusha
adc
addb
mov
sbbl
inc
push
lcall
adc
sbb
aas
or
push
imul
iret
push
inc
dec
push
push
pop
inc
add
outsl
adc
movb
dec
pop
xor
jno
pop
bound
cmp
je
in
sbb
daa
adc
addr16
adc
inc
je
das
jae
push
test
hlt
mov
les
xchg
insl
bound
and
out
mov
test
stos
cld
aaa
pop
push
jp
push
test
out
nopl
jecxz
dec
test
or
sbb
adc
bound
loop
hlt
fcompl
je
test
pop
add
dec
fisubrs
pop
outsb
int
insb
lock
mov
arpl
push
movsb
adc
movsb
dec
jle
cmp
in
xchg
push
nop
cmpl
add
scas
cmp
test
sub
fnsave
test
mov
lods
lret
xchg
into
mov
pop
testb
in
add
pusha
cld
adc
repnz
pop
test
imul
xchg
lret
mov
push
push
xchg
mov
push
test
cld
xchg
pop
push
ret
dec
add
cmp
jo
jae
adc
ss
cld
inc
mov
pop
cs
les
mov
jp
rorb
xchg
xchg
pop
pop
pop
sub
xor
sbb
mov
cmp
fadds
push
and
fcompl
xchg
cmp
std
and
xor
clc
cmp
push
enter
cld
adc
push
mov
xor
xor
pop
lock
dec
movsl
xor
xor
xchg
adc
push
adc
dec
aaa
sub
sub
in
mov
pop
insb
pop
sar
inc
or
outsb
inc
shll
data16
pop
outsl
es
mov
adc
sbb
mov
add
sbb
rclb
cmp
inc
mov
loop
movsb
and
mov
inc
cmp
lret
shlb
jg
iret
and
jb
jno
bound
imulb
iret
add
sub
cs
inc
inc
pop
call
sbb
hlt
mov
and
rol
sub
in
xor
ja
pop
add
sbb
scas
int3
sbb
imul
fs
loopne
push
cmpsb
in
inc
add
and
pop
jecxz
jmp
loopne
fwait
mov
sub
jle
outsb
jne
aam
pusha
aam
cmp
mov
and
add
adc
add
mov
in
add
and
push
pop
jb
aaa
cmp
repnz
cwtl
xor
mov
adcl
and
add
scas
ficoms
and
adc
mov
je
pushf
fmuls
scas
adc
aad
pushf
push
xor
in
je
test
pop
push
std
dec
mov
sub
dec
les
and
mov
in
pusha
imul
in
cmpsb
mov
pop
xor
push
mov
or
cs
add
xchg
sub
pop
shlb
rolb
inc
divl
std
mov
push
movsb
shrb
js
lods
std
xchg
push
fsubl
push
insb
sub
mov
leave
mov
and
pop
cwtl
pop
mov
xchg
pop
enter
movsb
pushf
pushf
test
nop
mov
nop
mov
cld
test
mov
in
idiv
movsb
outsl
addb
outsl
mov
mov
pop
push
sub
sbbl
add
add
cmpsb
in
cs
sbb
cmp
dec
sbb
fadd
adc
ret
pop
fiadds
push
ss
arpl
pop
or
arpl
pop
push
add
push
das
das
mov
mov
cs
das
pop
sbb
inc
nop
push
fucomip
fs
cmp
inc
add
inc
inc
inc
add
mov
les
stc
bswap
clc
mov
scas
mov
lea
bound
mov
push
cmp
pop
stos
shrb
out
and
jae
push
jbe
add
int3
aam
cmpsb
cs
cwtl
faddl
ja
push
push
insl
das
cmp
xor
addr16
push
loope
push
cmpsl
mov
shlb
adc
shrl
xor
cmp
push
repz
scas
pop
decb
dec
dec
inc
add
das
pop
xchg
jne
jle
loope
arpl
jns
inc
sbb
scas
out
or
ficoml
dec
mov
das
adc
push
adc
push
mov
or
jae
push
sub
fdivs
inc
ds
inc
push
cmp
xchg
jp
cmc
stos
xchg
pop
or
push
loopne
sbb
dec
cmc
popf
push
dec
repnz
cmc
cmp
inc
and
test
cmp
fildl
jmp
push
jle
jmp
add
add
mov
xchg
sbb
enter
mov
in
jmp
dec
inc
inc
push
popf
in
adc
cmp
mov
inc
inc
repnz
test
jl
jbe
cmp
jg
mov
imul
and
mov
mov
dec
xor
inc
sarb
rorb
jo
fwait
xor
sub
and
leave
gs
and
sub
and
sbb
and
push
sbb
fs
add
dec
scas
adc
or
and
adc
inc
sub
or
sbb
movsb
jb
add
or
add
and
xchg
lret
pushf
add
in
and
hlt
cmp
test
and
lock
hlt
push
hlt
mov
add
cmpsb
pusha
sub
xor
adc
neg
mov
aam
sar
insb
shlb
test
mov
test
in
call
dec
daa
adc
in
insb
movsb
jne
int
sbbb
sbb
sahf
pop
scas
fsub
push
mov
pop
aas
pop
sarb
call
aam
xchg
xchg
enter
inc
enter
ljmp
inc
mov
adc
mov
test
mov
jmp
mov
enter
dec
mov
mov
cmp
mov
inc
mov
hlt
call
outsb
and
les
sbb
hlt
xchg
push
loop
push
mov
push
out
fidivrs
sub
in
mov
add
test
je
movsl
leave
repz
cli
je
test
and
cmpsl
stc
dec
in
outsl
sarb
or
adc
movsb
or
and
int3
in
cmp
clc
std
cld
std
adc
and
xor
mov
aam
sbb
shrl
adc
in
mov
pop
daa
gs
sti
push
outsl
cmpsl
and
out
adc
xor
cs
cmc
fsubrp
inc
dec
push
push
aas
xchg
inc
fimuls
dec
dec
dec
mov
popf
push
xchg
out
lret
xor
sarb
push
push
dec
inc
and
push
dec
scas
adc
jbe
mov
ror
aaa
dec
inc
dec
sti
mov
dec
dec
dec
scas
int3
fcmovbe
mov
push
aas
inc
dec
push
xchg
dec
xor
inc
inc
dec
pop
lahf
or
inc
lock
inc
push
nop
inc
push
pop
inc
dec
es
adc
lcall
cmc
push
pop
add
adc
lcall
pop
mov
pop
pushl
and
in
add
out
pop
sub
stos
xchg
sbb
pop
mov
cli
push
dec
out
sahf
sbb
push
idivb
inc
rcrl
add
inc
sub
cmp
orb
push
add
or
rolb
mov
lods
out
jg
lods
jl
imul
aaa
add
dec
mov
dec
sarl
pop
pusha
or
fdivrl
rolb
cmp
or
aam
add
aam
rolb
repnz
in
add
mov
test
push
jge
jo
mov
or
inc
add
jg
and
inc
cmp
sub
sub
sub
sub
xlat
push
es
aaa
xor
push
xor
and
add
adc
add
and
push
cltd
lock
xchg
adc
and
faddl
mov
cmp
add
lahf
lret
xchg
add
sub
add
mov
add
mov
and
add
shl
roll
or
inc
inc
jns
or
mov
ret
fcomps
roll
mov
iret
aaa
mov
push
dec
push
jle
pop
cmp
movsb
mov
ret
mov
hlt
stos
mov
push
inc
imul
sahf
and
or
js
es
cmp
and
mov
dec
dec
mov
daa
jecxz
pop
xor
mov
add
lods
ss
pop
jae
adc
pop
pop
add
push
daa
insb
clc
enter
pop
or
xchg
inc
jae
sbb
int3
movsb
jb
daa
int3
int
cmp
xchg
and
nop
sub
cmpsb
in
les
and
or
rorb
mov
mov
xchg
or
test
mov
adc
enter
mov
cmpxchg
and
adc
enter
stc
stos
and
movsb
or
nop
ud1
or
fstpl
out
xlat
xor
mov
inc
jmp
arpl
addr16
aam
push
insl
outsb
outsl
jo
hlt
jne
ja
jns
rclb
mov
orb
and
push
dec
jns
inc
dec
push
daa
dec
inc
insl
dec
add
and
adc
adc
cmpsb
test
dec
jmp
dec
xor
shl
or
rorb
cld
movsb
xchg
adc
aaa
and
jl
inc
mov
add
push
cld
dec
aaa
fcmovnbe
jne
xchg
std
mov
nop
mov
and
movl
sbb
shlb
mov
rcrb
cmp
push
pop
lock
or
cmp
pop
or
jle
and
insb
jb
and
adc
bound
push
sbb
and
mov
shr
lods
imul
fcmovnu
js
jbe
sub
and
push
lret
xchg
add
jle
inc
idivl
inc
xor
lea
inc
shlb
adc
adc
sbb
mov
jl
inc
adc
dec
popa
and
cs
xor
mov
sti
std
xor
push
dec
inc
push
push
push
push
inc
push
push
xor
mov
or
add
fisttps
jne
call
lock
xchg
addr16
inc
jg
push
leave
mov
cmp
sub
push
jmp
shl
and
shl
mov
adc
mov
into
test
pop
push
inc
aam
movsl
out
mov
fstl
jae
pop
scas
lods
dec
std
aas
scas
mov
push
adc
push
sbb
pop
mov
push
and
adc
insl
scas
insl
dec
or
sub
adc
movl
xchg
insb
add
add
pop
shrl
stos
mov
jmp
xor
xchg
adcb
xor
add
imulb
lds
or
xlat
sbb
adc
xor
sub
cmp
jns
add
shl
or
jno
in
cmpb
adc
mov
cmpsb
scas
movsl
ljmp
mov
ss
cld
or
add
xchg
es
xor
mov
inc
testb
sbbb
scas
and
pop
into
mov
sbb
xor
or
pop
icebp
mov
dec
rcrb
mov
sbb
dec
inc
and
pop
adc
pop
and
dec
xchg
cmpsl
aad
lea
push
jne
imul
and
aaa
leave
test
push
adc
inc
mov
sub
xor
insb
dec
mov
outsb
fnstsw
xchg
clc
and
push
adc
lods
sub
nop
pop
push
and
cmpsb
ret
xlat
xor
sbb
xchg
xchg
or
push
daa
fistpll
adc
and
data16
pop
adc
and
inc
push
call
lods
add
xor
insl
fwait
nop
hlt
sub
and
push
dec
dec
fsubl
aam
pushf
push
test
mov
addb
add
cmp
push
idivl
iret
sarl
adc
mov
pop
lock
pusha
pop
add
daa
add
imul
and
jp
xor
stos
jmp
push
shlb
shlb
punpckhwd
je
into
sbb
sbb
fmull
pop
xchg
jmp
in
test
push
add
or
js
rclb
mov
or
addr16
adc
sub
pop
or
mov
insl
shlb
cmp
sbb
mov
scas
dec
mov
jo
fsubr
popf
in
mov
mov
sub
add
fistps
das
inc
add
push
outsl
mov
and
xchg
add
scas
xlat
or
mov
xchg
shlb
inc
rorb
push
sbb
mov
xchg
dec
push
mov
sub
inc
nop
xchg
inc
pop
repz
mov
add
dec
push
or
inc
pop
cmp
pop
push
ret
push
daa
sti
sbb
xchg
pop
xchg
daa
adc
sub
in
outsl
add
inc
or
jae
mov
xor
inc
sub
push
daa
mov
inc
jmp
mov
neg
xor
sbb
or
add
div
add
jae
sbb
loopne
mov
push
test
add
call
or
add
or
add
xor
stc
xchg
out
inc
add
and
inc
loopne
std
pop
fmuls
pop
inc
inc
daa
and
rclb
dec
push
and
mov
push
rol
inc
sbb
adc
push
fstpt
enter
pop
xor
xchg
cmpl
add
push
jns
lock
call
rorl
inc
sbbb
jge
jno
mov
mov
inc
add
push
rcl
sbb
adc
pop
dec
in
xorb
mov
lods
add
lahf
dec
hlt
fisttpl
mov
dec
jae
scas
xor
outsb
rcl
aam
mov
paddq
cmovno
push
and
mov
mov
sbb
ret
ja
cmp
rclb
ja
enter
xor
enter
jb
pop
nop
les
fs
in
xchg
dec
xor
pusha
rol
movsb
popf
nop
lret
rorb
mov
mov
nop
mov
jg
mov
mov
add
add
push
mov
adc
sarl
in
sbb
mov
and
mov
xchg
xor
mov
cmp
pop
sbb
addl
sbb
popf
fstpl
movsb
mov
push
filds
and
pusha
inc
lods
outsb
mov
jmp
push
mov
cmp
cwtl
push
add
cwtl
stc
adc
jno
lea
imulb
outsl
pinsrw
ret
in
fmuls
test
popa
lods
mov
das
mov
add
xchg
sub
or
mov
das
add
cmp
inc
mov
dec
mov
jne
gs
mov
adcb
add
mov
jb
sahf
je
jb
cmp
jmp
jae
out
xchg
or
inc
pop
or
daa
insb
pusha
pop
push
or
andb
pop
add
pop
pusha
push
mov
push
call
push
inc
or
in
jb
in
inc
or
add
cmp
or
and
xchg
push
inc
xor
cmp
mov
and
and
or
xchg
adc
adc
xchg
jp
push
or
add
clc
into
pop
and
mov
lock
popl
add
mov
mov
lock
popf
sub
in
push
xchg
xlat
xchg
mov
pop
clc
lcall
nop
imul
pop
push
dec
loopne
mov
or
xor
push
les
dec
aas
divb
sbb
pop
sbb
mov
nop
mov
mov
push
adcb
inc
enter
lret
push
lock
sub
or
and
and
fmuls
or
pop
xor
sub
jl
xor
enter
and
add
push
add
movsl
std
roll
sbb
lock
or
and
je
mov
mov
shlb
gs
xchg
loope
adc
sub
je
es
jge
shld
scas
jmp
je
jo
dec
cli
cs
xor
ja
daa
jbe
dec
push
outsl
das
cs
imul
add
ret
out
xor
sbb
add
push
mov
xchg
ds
jb
jb
xor
dec
pop
or
pushf
ficompl
adc
jp
addr16
divl
adc
rcrb
adcl
xor
mov
fistps
data16
push
rclb
or
out
enter
push
cmp
cmp
sahf
out
add
dec
add
xor
cmpsl
pop
imul
inc
daa
imul
and
loope
push
stc
gs
jo
ja
bound
mov
insb
or
das
or
mov
mov
outsb
xchg
fiaddl
cli
dec
push
dec
dec
dec
cmp
addb
cmp
mov
cmpl
push
iret
sbb
imul
dec
push
dec
pushf
lahf
cmp
or
and
cmp
xor
dec
push
add
sub
add
sub
sahf
lods
das
sub
scas
lock
fdivr
xor
fdivr
sbb
arpl
xor
push
movsb
or
and
xor
imul
add
and
sbb
movsb
shll
add
cs
and
lret
add
push
add
int3
mov
clc
xor
jne
mov
test
mov
jo
xchg
fwait
std
add
inc
pop
push
pop
xchg
les
add
leave
adc
inc
xor
and
ret
push
lods
roll
mov
dec
aaa
leave
adc
pop
and
xor
push
xchg
pushf
lret
insb
sub
mov
pop
fwait
jmp
addr16
data16
mov
mov
and
in
and
add
gs
and
dec
inc
xor
loope
xchg
push
cmpsb
adc
fstps
ret
adc
xor
subb
dec
sbb
insl
jae
cmp
cmpsl
push
imul
es
pop
or
mov
addr16
scas
pop
pop
xchg
mov
and
mov
inc
dec
push
push
and
dec
pop
push
dec
das
mov
push
adc
ja
loopne
adc
addl
js
mov
adc
and
or
outsl
arpl
add
testl
push
stc
push
xor
loopne
push
mov
push
aas
lcall
or
test
inc
out
mov
iret
add
sub
inc
jle
push
xorb
out
addr16
add
imul
xor
outsl
hlt
sbb
inc
cmp
or
mov
ds
les
cmp
repz
sbb
mov
jnp
fldcw
mov
inc
add
adc
jl
adc
es
fnstsw
out
xor
fidivrs
out
dec
inc
adc
fcomip
xor
jg
cld
sbb
int3
aam
movsb
fcomp
jnp
ja
test
sbb
push
loopne
inc
inc
push
lods
aaa
lahf
idivl
in
in
inc
adc
xchg
sahf
negl
push
movsb
lods
fimuls
mov
sbb
push
mov
lahf
sarb
adc
in
into
jle
int
mov
push
insb
sbb
cmpsl
stc
fdivp
je
ss
jl
add
iret
aas
int
sub
xchg
inc
add
test
aas
jae
jge
mov
mov
inc
push
or
inc
imul
ljmp
mov
mov
cld
push
adc
adc
pop
mov
lods
push
jl
jns
out
arpl
cwtl
mov
shlb
test
xor
test
jb
lods
xor
imul
jl
mov
push
cwtl
mov
in
clc
adc
inc
push
les
xchg
add
push
lock
cld
je
rclb
fildll
sub
or
inc
cmpsl
pop
cwtl
imulb
rolb
xor
pop
cmp
andb
xor
adc
neg
int
pop
add
and
mov
xor
cmc
lcall
leave
xlat
iret
enter
fcomp
fxch
push
loopne
jecxz
sub
pop
mov
inc
mov
and
and
jno
ja
popa
je
xor
mov
lahf
cmpsl
outsb
or
xor
imul
pushf
addb
or
notl
pop
ja
push
push
mov
adcb
aaa
ss
push
jecxz
sub
or
push
lock
xchg
test
inc
loopne
push
mov
add
clc
sub
scas
push
xor
inc
cmp
repz
push
pop
fs
repz
repz
test
pushf
movsb
lods
mov
les
repz
aam
in
jns
iret
repz
cld
add
or
out
sahf
out
and
xor
out
add
inc
dec
xchg
add
pushf
pushf
fmull
add
fs
inc
cmpsb
sbb
push
inc
sahf
je
lock
jge
push
jle
xchg
daa
and
leave
enter
test
in
cmp
pop
jns
hlt
test
rcrl
and
sahf
mov
add
or
mov
fiaddl
pop
add
adc
mov
cmp
inc
inc
shll
add
jg
ret
inc
or
outsl
aad
or
cmp
das
jno
pop
or
adc
xor
rcll
push
dec
push
push
je
cmp
repz
test
int3
fdivrl
out
in
add
and
out
sahf
out
push
pop
jo
or
movsb
lmsw
add
iret
mov
adc
pusha
imul
repnz
xor
jmp
and
sbb
rclb
js
dec
push
push
outsb
jae
mov
imul
xor
ja
push
js
adc
mov
addb
addb
pop
or
imul
jnp
jecxz
call
adc
jmp
neg
jae
and
pop
add
incl
pop
repnz
jns
push
insb
xor
cmpsb
lret
xchg
jnp
aas
lods
sti
push
test
mov
int3
push
iret
repz
add
or
add
out
jns
cvttps2pi
inc
adc
cmp
repz
adc
out
jns
int
and
xor
out
push
adc
or
cmp
repz
xor
inc
iret
repz
add
jl
pushf
cmp
repz
mov
les
cmp
iret
repz
call
jo
fistps
adc
std
push
adc
cmp
push
add
out
js
nop
pop
iret
repz
out
push
add
cmp
cmp
repz
subb
repz
repz
iret
int3
mov
push
mov
sahf
out
sbb
jns
out
pusha
fidivrs
push
xlat
jns
nop
ljmp
adc
cmp
sub
xor
outsl
cmp
or
loope
divl
or
push
fldcw
pop
ret
add
jle
jmp
roll
or
mov
ret
or
pop
cmp
ds
push
or
pop
and
fcomps
call
jecxz
repz
repz
mov
int3
fsubr
out
jns
iret
cld
or
sbb
addr16
mov
and
xor
inc
dec
sbb
add
xchg
ja
pop
mov
xor
cmp
adc
mov
mov
xor
fmull
divl
jb
cmp
orl
jb
jb
unpcklps
adc
push
ret
and
jb
or
jb
jb
adc
pop
add
shrb
scas
shll
daa
daa
mov
movhps
jno
push
pusha
jbe
push
xorb
out
js
mov
mov
pusha
push
test
mov
adc
cmp
push
adc
mov
ret
push
sbb
repz
shrl
xor
push
insb
iret
repz
jl
pushf
test
enter
cmp
call
sbb
repz
sub
dec
pop
jo
jp
jecxz
pushf
and
add
sbb
notl
add
rol
icebp
scas
imul
sbb
jo
add
mov
aam
incl
add
or
nop
arpl
mov
xor
inc
cmp
repz
push
stc
push
repz
nop
mulb
mov
lcall
add
lock
out
sbb
sub
inc
out
sahf
out
push
in
fs
cmp
je
mov
xchg
add
popa
sbb
dec
and
movsl
sbb
add
cld
adc
std
outsl
and
pop
outsb
ds
or
or
add
popa
imul
cmpsl
lods
pop
ja
in
out
ror
adc
nop
mov
cmpsb
leave
adc
add
mov
jno
addr16
or
rcl
push
imull
add
mov
add
pop
or
imul
sub
add
adc
addr16
add
dec
mov
and
outsb
mov
addr16
pop
add
mov
jg
stc
out
sahf
out
mov
jns
cld
std
incb
add
sahf
out
test
jno
out
add
insb
mov
cs
les
ds
scas
xchg
push
push
add
adc
stc
or
add
adc
and
xor
mov
add
insb
push
imul
push
sub
jl
sti
cld
add
out
incb
cwtl
outsb
aas
add
fwait
incl
push
stc
push
mov
xor
adc
mov
mov
xchg
dec
mov
pop
dec
test
fs
inc
xchg
add
out
ficoms
call
sahf
les
fs
stc
mov
jp
push
enter
xchg
xchg
inc
out
in
scas
cld
push
out
sahf
out
test
sahf
out
sahf
pusha
je
nop
mov
jns
fsubr
clc
or
sbb
cmp
fs
repz
je
pushf
mov
int3
repz
repz
lock
outsb
push
sub
cmp
cmp
pusha
js
scas
push
and
out
sub
cmp
sarl
push
pop
pusha
and
pop
mov
pushf
rolb
cs
dec
repz
xrelease
out
adc
cmpsb
push
pusha
subb
in
or
sub
jl
jge
out
int3
lock
outsb
push
dec
jns
out
sbbb
clc
and
cmp
jo
repz
test
sahf
out
lcall
ja
out
mov
mov
sahf
out
lahf
pop
jl
ds
jns
out
leave
leave
leave
leave
leave
out
sahf
out
leave
leave
lret
out
sahf
lret
lret
jns
out
lret
lret
lret
lret
lret
out
sahf
out
lret
lret
int3
int3
sahf
out
sahf
int3
int3
int3
int3
int3
int3
out
fidivrs
push
pop
jl
dec
repz
mov
and
cmp
repz
insb
test
int3
in
adc
sub
jns
out
pop
je
movsb
jns
jns
mov
out
push
xor
jns
out
fs
lods
sahf
out
faddp
sar
rcl
rcl
sarl
out
rcl
rcl
rcr
jns
out
rcl
rolb
inc
ljmp
cmp
xchg
ss
je
pop
push
into
jbe
ss
cmc
xor
cmp
daa
enter
clc
cmp
out
pop
insb
jmp
lahf
sub
test
push
lahf
loope
xchg
pop
xor
repz
or
pusha
inc
push
pop
shlb
cmpsl
dec
cmp
lahf
adc
out
out
imul
jle
inc
scas
add
cmp
rcl
es
xchg
fmull
lock
ds
enter
sbb
pushf
outsb
clc
inc
lock
subb
jbe
and
jmp
out
sbb
mov
fadd
dec
push
insb
dec
and
fs
pusha
or
mulb
pushf
fcompl
cmpsb
in
mov
sbb
jbe
loop
jnp
data16
mov
enter
pushf
es
jge
pusha
es
ficoms
ja
xlat
pop
push
aam
pop
pop
es
or
jge
ljmp
int3
xor
jle
fidivrs
testl
es
cld
mov
adc
ficoms
pop
adc
sbb
shlb
jle
xlat
mov
add
cld
cs
or
mov
je
cmc
cmp
pop
jecxz
cmp
fildll
outsb
fs
push
push
jl
jns
xlat
cmp
adc
int3
cs
filds
inc
mov
in
add
fdivrs
push
ds
inc
add
data16
and
or
outsl
inc
data16
mov
aas
inc
cmpsb
cmpsb
inc
loopne
sbb
push
andb
in
fsubp
negl
hlt
mov
div
push
sub
loop
icebp
mov
mov
or
mov
cmpsb
loopne
test
dec
jnp
outsl
movsb
out
insb
les
xchg
ja
andb
xor
xchg
cmp
in
ss
mov
xor
pop
mov
fidivrs
jae
ficomps
hlt
xchg
lock
adc
dec
push
pop
pop
data16
int
push
hlt
mov
xor
cmp
testl
mov
in
adc
push
cwtl
dec
mov
add
ficoms
or
pop
push
hlt
jle
add
loopne
xchg
cmpsl
and
mov
push
call
cmp
and
clc
into
aam
or
neg
jnp
and
mov
pop
mov
loopne
push
cld
ja
mov
cmp
push
push
cmp
add
cmp
rol
ja
iret
sysret
in
shl
push
in
dec
cmp
les
push
hlt
push
and
add
mov
sbb
jle
cwtl
pop
andl
aaa
dec
push
pop
cmpsl
stos
divl
push
ja
loopne
outsb
mov
inc
sbb
xlat
das
pop
xchg
xchg
dec
negl
mov
xchg
fs
jns
mov
sbb
xor
jl
xor
pop
cmp
ds
inc
jg
add
imul
add
push
inc
add
sub
lahf
seto
adc
jecxz
lods
mov
and
nop
inc
adc
and
add
mov
add
pop
inc
add
dec
push
str
fsubr
jg
inc
add
dec
add
cs
add
sub
or
and
pop
add
mov
addb
push
dec
aaa
add
pop
dec
add
pop
inc
sbb
and
jge
xlat
adc
push
pop
dec
aaa
push
fnsave
mov
fwait
inc
add
xchg
idivl
xchg
push
loop
sarl
or
pop
pop
jmp
loopne
mov
inc
pop
jae
sub
mov
or
pop
push
or
push
ja
push
push
lret
imulb
and
pop
outsl
pusha
pop
pop
push
fstpt
xorl
inc
or
jnp
mov
inc
repz
cs
es
arpl
cs
and
inc
push
cs
mov
repz
sti
or
inc
sbb
inc
jp
jnp
jnp
dec
dec
push
rsqrtps
lret
ja
push
out
inc
aas
or
rdmsr
cmpl
pop
push
add
inc
aas
or
imul
xor
dec
pop
pop
movsl
push
mov
mov
loope
add
mov
push
cwtl
pusha
push
pop
mov
int
mov
nop
movsb
adcb
and
and
mov
jne
xchg
add
dec
out
jb
outsb
and
les
xor
ret
add
ss
hlt
xchg
sbb
sub
rcrb
aas
add
sbb
xchg
ds
mov
fcomps
xor
sub
addr16
imul
jge
add
cmp
addr16
scas
cmp
or
outsb
and
imul
fiadds
inc
inc
rclb
repnz
inc
and
pusha
inc
inc
push
inc
dec
add
aaa
mov
mov
dec
inc
mov
push
pop
lock
dec
push
test
imul
test
mov
and
lahf
movsb
xchg
cmp
enter
lock
push
gs
outsl
arpl
add
cmpsb
dec
jae
dec
push
dec
insb
mov
daa
dec
and
aam
add
mov
xchg
jae
repnz
sub
daa
cmp
inc
sahf
mov
movsb
insl
cwtl
sub
subb
test
cmpb
adc
push
add
les
cmp
jecxz
dec
cmp
push
jnp
add
enter
flds
sahf
or
and
dec
lret
fwait
into
push
inc
daa
shlb
xchg
adc
nop
or
and
jge
jecxz
xchg
sub
clc
int3
sub
sub
mov
push
test
xor
cs
and
cmp
inc
outsl
insl
ltr
bound
sub
push
push
push
cmpsb
push
movsb
addb
stc
shlb
or
mov
mov
adc
rcrl
push
or
jb
cmpb
cwtl
dec
stos
adc
aaa
popa
xor
and
inc
ja
mov
inc
prefetcht1
cmp
cmp
or
sub
cld
sar
pushf
pushf
pushf
pushf
hlt
lock
call
in
dec
inc
sahf
pushf
aam
sarl
and
dec
xor
rcl
int3
daa
daa
daa
daa
enter
and
mov
inc
scas
xchg
dec
cmp
inc
test
jmp
in
xchg
xor
inc
xor
inc
dec
or
decl
or
push
xchg
clc
mov
mov
mov
and
jbe
sub
call
mov
push
mov
or
xor
and
scas
adc
lret
and
add
orb
jne
sarb
inc
or
add
dec
add
cmp
xchg
mov
iret
push
jae
jmp
call
mov
xchg
and
sbb
incl
cmp
call
or
cmc
std
push
and
xchg
movl
pushl
dec
stc
push
pushf
std
in
adc
adc
push
jle
pop
enter
in
fdivs
or
dec
cmc
dec
pop
ret
xchg
jmp
or
or
in
ja
or
aaa
call
pop
cmpb
std
decl
xchg
das
sbb
inc
mov
pop
ret
cwtl
movsl
jne
push
sbb
inc
mov
adc
std
sub
push
add
push
test
in
cmp
inc
push
cld
jl
repnz
cmp
inc
cmp
inc
sbb
dec
sbb
ja
mov
idiv
inc
repnz
stc
cmp
sbb
incl
std
call
cld
inc
std
push
sub
jmp
dec
scas
in
jge
pushl
movl
add
leave
ss
cld
pushl
ljmp
in
cli
lcall
or
repnz
cld
call
movsl
aaa
enter
mov
jnp
data16
cmpb
and
scas
mov
js
sub
push
movsb
testl
or
je
inc
pop
xlat
cmp
pop
les
les
or
cmp
sti
test
mul
ret
jmp
pop
nop
sbb
adc
or
mov
rcr
pop
adcl
push
call
iret
pushf
sbb
notl
and
add
add
sbb
stos
clc
mov
push
xchg
divl
add
jne
aas
or
sbb
push
add
std
testl
fisttpl
leave
lea
inc
xorl
repnz
shr
mov
icebp
sbb
adc
adc
mov
js
inc
sbb
inc
cmp
cld
sub
ret
inc
and
stos
mov
xchg
jmp
les
les
enter
les
ljmp
add
push
gs
xor
sbb
cmpsb
int3
arpl
and
outsb
xchg
and
sub
test
push
xchg
rclb
cmp
out
inc
sub
incl
xor
adc
scas
aam
mov
xor
scas
and
shr
add
arpl
scas
stos
jl
ljmp
sbb
cli
inc
das
adc
stc
jb
pop
lahf
insb
les
les
rcrb
les
xchg
and
dec
cld
push
and
call
pop
cmc
add
test
jmp
lods
add
adc
incl
or
jo
and
lret
insb
les
clc
inc
cs
xorps
dec
popa
xlat
rcrl
es
push
mov
cmp
jb
xor
sbbb
insb
xchg
pusha
addb
xchg
jl
cmpl
lcall
decl
fdivrl
jo
inc
jo
inc
dec
jle
repnz
ret
inc
add
inc
ss
incl
ret
int3
xchg
dec
dec
jb
lcall
psubw
sub
sub
call
jg
add
notb
sbb
ss
mov
pop
xchg
pop
repnz
lret
add
xchg
sysexit
je
inc
xchg
repz
jmp
cmp
mov
nop
sbb
sub
ja
or
lcall
ret
inc
popa
mov
bound
cmp
insb
jp
jmp
sbb
push
and
mov
mov
popa
mov
adc
and
icebp
es
or
sbb
lret
nop
ljmp
notl
xlat
iret
scas
push
xchg
xchg
add
ret
bound
cs
mov
cmc
sub
clc
or
or
xlat
xchg
les
or
xchg
sahf
lret
mov
jo
inc
adc
cmpl
pop
lods
fucomip
push
xchg
jo
jmp
mov
les
les
mov
pop
add
cmp
cmp
pop
or
and
push
or
and
pop
jns,pt
jo
inc
jo
inc
sbb
jmp
jno
adc
mov
add
add
idiv
cmp
rcrb
ja,pt
lret
testl
jo
inc
insb
les
adc
jmp
daa
add
xor
les
sbb
jp
xor
adc
jl
stc
test
decl
nop
dec
and
decl
adc
dec
add
repnz
hlt
xchg
adc
rorl
push
and
clc
aaa
lret
fildll
sub
pop
mov
outsl
adc
inc
iret
scas
lds
jge
enter
pop
and
std
dec
add
add
bound
dec
pop
lods
push
int3
sub
loopne
push
das
or
stc
mov
ja
adc
cs
loope
aaa
addr16
xor
mov
sub
add
inc
sbb
mov
or
rcr
incl
pop
call
dec
mov
or
push
jl
imul
fs
pop
test
repnz
bswap
jle
in
mov
in
or
add
test
jb
leave
adc
sbb
int
push
jo
xor
cmc
ljmp
imul
add
or
shlb
int
cld
out
imul
mov
push
addb
cmp
push
lock
push
mov
outsl
dec
add
mov
enter
das
push
subb
inc
or
je
and
xchg
dec
pop
ljmp
dec
adc
cmp
dec
pop
ret
hlt
out
mov
loope
stos
ret
jmp
adc
sbbb
test
xchg
add
or
cmp
sub
je
in
ret
push
push
or
call
loop
rcrb
call
pop
aas
mov
xor
lock
or
add
mov
loope
scas
xor
shlb
mov
push
add
out
cmpsb
test
inc
dec
roll
out
xlat
or
ret
adc
cmpsl
mov
daa
push
xchg
dec
mov
loope
jnp
fbld
mov
in
pop
in
test
jne
pop
jnp
hlt
lock
mov
ret
mov
or
lahf
sbb
adc
movsb
call
lahf
fstps
loope
adc
cltd
and
and
cmp
sti
adc
sahf
xchg
adc
push
add
push
add
push
repz
fisttps
push
xrelease
outsb
jnp
xor
sub
fmuls
in
fiadds
inc
pop
lds
add
add
es
loope
insb
int
ret
xchg
pop
mov
ljmp
inc
pop
jg
cli
in
push
dec
out
push
inc
cwtl
dec
aaa
push
and
aam
movsl
sub
ss
es
xchg
cmpsb
test
pop
add
mov
rol
nop
daa
inc
xchg
inc
enter
jnp
cwtl
or
push
cmpsl
xor
and
dec
mov
xor
push
aas
rolb
pop
out
loopne
or
cmp
in
push
push
push
ret
lods
mov
cmp
xlat
cmp
pop
pop
das
call
sub
sub
and
ret
pushf
fcmovnbe
xchg
adc
adc
jbe
jnp
sub
push
call
jnp
jns
add
add
clc
push
xchg
sub
pop
jecxz
push
outsb
call
ret
pop
pop
shr
xor
daa
or
push
call
cld
ds
cmpsb
test
jne
add
add
mov
lahf
in
jg
call
mov
enter
icebp
push
test
jmp
pusha
clc
xlat
adc
sbb
xchg
call
lock
jl
pop
push
in
movsl
sub
xchg
add
add
jl
xchg
test
mov
jmp
add
push
xor
enter
movl
movd
call
in
push
sub
adc
push
mov
js
test
decl
dec
mov
dec
push
jns
jmp
fldt
call
adc
inc
rorl
dec
fnstenv
leave
loope
mov
pusha
cs
jecxz
or
xchg
in
push
cmp
popa
add
fidivrs
in
inc
inc
fldcw
and
cmpsl
sub
scas
stos
dec
or
out
push
push
jmp
in
cmp
add
sub
jg
into
pop
cli
call
pmulhuw
pop
add
add
stc
jnp
jbe
push
enter
jmp
dec
push
inc
adc
inc
push
fstps
pushl
mov
call
js
adc
cmpsl
sub
lods
mov
pop
movsb
into
or
inc
sbb
cmp
repz
mov
or
dec
cmpl
push
xchg
lcall
dec
js
arpl
mov
imul
xor
out
inc
push
js
out
dec
xchg
into
movsl
adc
sbb
sarb
pop
xchg
dec
ret
push
jge
cmp
push
mov
push
gs
dec
outsb
pusha
or
shlb
iret
ret
push
mov
xchg
jo
mov
scas
add
rol
push
cmp
out
xor
lods
jmp
cmp
push
iret
sbb
dec
lea
hlt
test
outsl
xchg
sub
dec
add
repz
or
movb
jle
and
add
cwtl
hlt
das
cmp
xchg
adc
mov
jle
push
lock
push
fs
mov
sbb
mov
shll
scas
int3
call
and
push
mov
call
mov
pop
ret
jmp
jo
cwtl
inc
call
or
mov
pop
fdivrp
stc
and
inc
into
add
add
incl
jb
pop
mov
add
pushf
decb
lcall
jmp
stc
and
sbb
repz
incl
jo
cmp
or
push
sub
ret
xchg
add
fcoms
or
inc
cld
dec
jne
call
dec
or
stc
mov
ret
cmp
std
ss
jns
lea
or
and
xor
mov
and
test
push
or
push
into
sub
pop
cld
std
decl
scas
aaa
and
and
mov
ja
add
add
push
stc
add
icebp
pushl
jl
out
leave
daa
nop
je
lock
pushl
stc
call
lcall
push
dec
cld
sub
loope
or
jl
push
inc
and
mov
sub
xor
aaa
mov
pop
cmp
sbb
or
sub
or
push
je
xchg
xchg
adc
and
loop
jbe
add
dec
push
call
incl
jnp
add
add
jmp
aad
movsb
test
clc
push
cs
xchg
fs
dec
xchg
dec
mov
mov
inc
rcl
outsb
xchg
out
addl
insl
or
mov
into
jge
xor
dec
dec
out
push
push
pop
call
daa
loope
xchg
pop
sub
sub
cwtl
and
fstpt
neg
out
or
loopne
int
std
sahf
aas
movsl
mov
push
push
repnz
pushf
jmp
mov
popa
lock
subb
iret
sti
scas
loopne
dec
fsubrs
sub
adc
and
dec
sub
pop
mov
push
mov
jg
rcll
adc
out
push
das
call
dec
push
test
cs
push
aaa
push
adc
jg
xchg
out
pushf
xor
movl
dec
std
dec
xchg
push
add
sbb
add
or
push
clc
mov
sub
xchg
sbb
call
adc
ss
addb
inc
dec
pop
or
fisubrl
pop
ds
jg
stos
or
cmp
jae
scas
or
ss
sub
pop
cmp
test
sub
or
mov
mov
rcll
movsb
dec
dec
fnsave
sbb
sub
dec
pushf
data16
dec
push
lea
bound
and
and
sub
inc
clc
mov
dec
sbb
or
sbb
dec
arpl
push
imul
inc
cmp
jnp
xor
lahf
rorb
and
sbb
adc
sub
mov
adc
pop
xchg
mov
rolb
int
xor
call
mov
out
inc
pop
pop
sti
or
stos
ljmp
mov
cwtl
and
cs
cwtl
mov
adc
inc
xchg
fisttpll
fwait
xor
inc
pop
push
cld
div
imul
insb
mov
inc
movsl
or
pop
push
mov
xchg
inc
xor
sbbb
leave
std
add
movsl
xchg
or
cmpsb
enter
or
inc
rol
or
in
adc
inc
sbb
jg
divl
imull
sbb
outsl
mov
sti
or
movsl
adc
inc
and
and
iret
sub
sbb
dec
scas
mov
pop
and
or
insb
mov
or
fists
mov
fcmovbe
fistl
call
push
sub
jle
xor
ss
push
pop
int3
imul
push
cmp
iret
jmp
add
xlat
addb
jne
mov
add
sti
sbbb
add
cmp
push
dec
cli
cmp
cmp
cmp
rcl
jmp
push
xchg
aam
xchg
stc
add
sti
pop
cmp
leave
xor
jle
sub
ljmp
call
and
dec
pop
cltd
rclb
out
lock
je
je
adc
inc
pop
jmp
jo
push
or
mov
push
idivb
daa
addr16
pop
jne
insb
push
pop
mov
imul
fidivl
aad
adc
int3
and
lock
ficompl
shr
ds
pop
jno
popa
and
jns
mov
hlt
adc
sbb
cmp
je
in
sbb
and
dec
mov
mov
sbb
adc
clc
dec
in
cli
pop
dec
jne
mov
or
cli
rcll
lock
iret
push
ret
push
pop
idivl
push
cmpsb
add
dec
and
movsb
add
jecxz
dec
dec
cwtl
std
out
push
ljmp
sbb
push
fdivs
push
lock
cwtl
daa
loopne
and
int3
xor
or
les
cwtl
rcll
or
sarb
sbb
and
inc
in
jle
jbe
cmp
test
dec
sbb
std
pop
or
xor
mov
lock
mov
insl
xor
xorb
xor
adc
adc
pop
imul
mov
call
xor
iret
push
cmpsb
cmp
cld
xor
faddl
mov
xrelease
les
out
rorl
push
neg
mov
cmp
or
sub
or
aad
add
jbe
imul
and
stos
and
add
or
call
loope
jbe
push
sbb
sub
sbb
data16
xchg
mov
icebp
mov
mov
mov
mov
test
js
jne
outsl
jle
mov
cmp
jg
sub
push
push
fsts
into
leave
mov
xor
push
das
cmp
push
fucomip
in
mov
je
mov
mov
aas
call
mov
lea
add
loope
jp
cwtl
pop
repnz
push
mov
or
insb
push
pusha
sbb
jmp
push
cltd
mov
sub
jle
mov
imull
loope
dec
mov
pop
cmp
inc
loope
sbb
test
push
mov
or
mov
add
or
andb
inc
jns
adc
outsb
lods
pop
pop
jmp
out
push
lea
subl
and
add
xchg
lock
cli
addl
xor
out
mov
sub
call
sbb
jmp
dec
je
insb
cmpsb
mov
jns
mov
pop
in
sub
push
inc
and
shrb
xor
or
inc
and
xchg
sub
xchg
lret
loopne
enter
stc
ret
fldt
out
xchg
jl
mov
add
test
inc
adc
lock
in
aam
xor
or
scas
call
adc
inc
es
sbb
movb
xor
fdivl
fcomi
in
mov
adc
add
pop
push
loopne
inc
mov
clc
sbb
lods
clc
repz
out
adc
fldl
fs
jecxz
and
leave
in
fs
dec
rorb
add
fs
add
sar
hlt
in
in
lock
call
in
aam
in
in
int3
enter
in
sarb
mov
test
in
in
mov
in
in
mov
in
jl
je
in
in
insb
push
in
cmp
cmp
jb
jb
xor
and
jb
jb
sbb
adc
xchg
jb
push
dec
inc
call
es
mov
test
pop
xor
xchg
and
add
pop
mov
fistps
add
inc
sub
ja
xor
sub
mov
lcall
int
sbb
adc
push
fs
pop
jg
dec
and
push
popa
mov
sub
inc
inc
xchg
sub
xchg
mov
test
mov
inc
bound
xchg
das
pop
and
inc
leave
adc
jg
mov
lods
in
inc
or
bound
jg
mov
dec
ret
adc
and
dec
or
xor
andl
bound
mov
and
test
adc
xchg
filds
sub
and
sub
inc
xchg
mov
lods
rclb
fs
enter
pop
xchg
dec
jne
adc
popa
test
jg
les
aaa
and
enter
inc
popa
adc
mov
dec
or
loopne
mov
push
mov
in
and
call
es
sub
pushl
adcl
out
call
aaa
cmc
ret
dec
mov
push
testb
xchg
test
cmpsl
dec
or
stc
int
js
sarb
adcl
inc
push
call
dec
push
addb
mov
xor
push
adc
jle
mov
mov
adc
sub
mov
lcall
std
and
add
mov
dec
jbe
nop
and
pop
rcll
not
pop
mov
sbb
rcr
lods
mov
dec
inc
push
cmp
xchg
mov
rorb
loope
and
lock
dec
and
les
xor
dec
rcll
lea
mov
sub
ret
pop
sbb
scas
push
push
and
add
sbb
into
sbb
or
add
and
ds
push
and
and
frstor
popf
or
sahf
adc
call
pop
lock
sbb
fisubrl
rcrl
ret
out
mov
add
call
addr16
test
nop
xchg
out
sbb
add
add
out
in
add
lret
lret
hlt
or
jle
hlt
call
loopne
inc
adc
and
cmp
jb
cmp
ja
imul
sub
imul
decl
or
push
out
rcrb
and
cli
and
lea
jns
pop
test
lds
dec
fdivr
cmp
into
arpl
sbb
sarl
dec
lret
mov
sub
call
rol
in
inc
je
or
push
pop
jne
push
xchg
test
fwait
es
das
stc
pop
add
add
div
dec
and
je
insl
pop
les
icebp
scas
in
jb
inc
dec
adc
mov
add
mov
push
or
into
jne
xlat
jp
pop
xor
hlt
dec
rclb
push
mov
push
dec
sbb
dec
fucom
movsb
sbb
in
pushl
in
push
js
dec
ret
mov
or
into
in
dec
in
cwtl
les
mov
call
mov
inc
or
and
pop
shlb
and
sar
call
add
add
add
and
sbb
mov
std
mov
mov
out
jbe
xchg
and
inc
test
and
cwtl
sbb
mov
mov
inc
and
inc
je
jmp
test
xchg
int
incl
xchg
pop
add
ljmp
or
stc
mov
call
adc
movb
ret
cmp
mov
insb
sbb
cmovo
pop
sub
cmp
sbb
pop
dec
sbb
call
jle
rcr
adc
pushf
lods
sbb
jmp
nop
jo
call
cmpsb
inc
sahf
loope
lds
mov
cmpsl
fbld
nop
mov
orb
xor
mov
push
mov
and
sub
orb
cmp
mov
and
pop
fisubrl
fucomi
arpl
xchg
push
arpl
push
jge
and
test
mov
mov
adc
inc
push
cmp
and
repz
out
in
imul
iret
jge
leave
adc
mov
xchg
sub
std
and
cs
fs
xchg
sbb
dec
mov
sbb
pop
dec
push
inc
dec
lea
pushf
jmp
sbb
inc
and
ja
xor
xor
inc
sub
cld
movsb
sbb
sub
lods
jo
pusha
push
jb
and
out
dec
xchg
push
pop
test
shrl
jmp
sbb
sub
jb
je
clc
mov
aas
push
or
jo
das
rolb
sbb
mov
or
test
lock
and
in
jno
sti
xor
stos
rcr
add
or
sbb
test
test
call
inc
inc
jle
lcall
dec
xor
cmpsl
pop
std
add
xor
sub
add
push
pushl
in
into
lods
push
push
and
mov
push
popf
mov
inc
fdivrs
sub
mov
xchg
and
int
mov
repnz
scas
mov
cmc
incl
inc
ret
pusha
dec
cld
out
jp
push
push
push
lea
sbb
xlat
sar
sbb
or
mov
xor
push
pop
and
nop
push
xor
push
popf
cs
sbb
xchg
cwtl
int3
pop
cltd
std
add
dec
mov
sbb
lods
lea
xchg
jl
outsl
xor
int3
hlt
in
fwait
je
inc
insb
mov
jb
lock
dec
clc
fcoms
iret
xor
add
pop
fstpt
ret
loopne
jl
test
xchg
bound
test
sbb
daa
mov
repz
mov
push
les
and
cmpsl
mov
sbb
fists
sar
jmp
and
and
adc
adc
mov
fcom
push
add
and
pop
xchg
clc
aas
cmpsl
dec
cmp
call
lahf
fld
aad
inc
xchg
xchg
jg
call
jns
and
pop
adcl
nop
jo
or
push
repnz
lcall
pop
repnz
mulps
clc
add
out
imul
jmp
sbb
ja
cld
fiadds
xor
addr16
or
adc
shll
std
cmp
pop
mov
pop
adc
out
lock
mov
sbb
add
jmp
rcrb
js
dec
push
push
sbb
xchg
dec
mov
push
jb
jmp
lea
test
mov
or
sahf
mov
xor
loopne
fsubrp
xchg
rcrb
xchg
xchg
call
mov
adc
ret
add
jae
pusha
nop
outsb
sbb
xchg
stos
roll
mov
add
and
jmp
jns
push
cli
fdivrl
cmpsb
or
jnp
dec
dec
pop
call
repz
dec
add
test
cld
loop
pop
xor
add
xchg
sub
and
ret
shl
jb
lods
inc
mov
xchg
neg
jp
in
fimuls
data16
aad
pop
rolb
shrb
out
cmp
cmp
mov
pop
xor
xchg
test
cmp
rcrb
test
pop
push
mov
pop
adc
dec
sub
call
jae
push
xor
sbb
xchg
jno
and
adc
pop
push
dec
adc
in
sbb
push
sub
jge
call
in
add
in
lea
mov
jne
test
and
call
cmp
jns
mov
push
shlb
lods
or
pop
xchg
dec
out
dec
aas
xchg
int
jmp
xor
sbb
leave
jg
sub
pop
loop
mov
pop
dec
sbb
mov
loop
unpckhps
loope
push
or
inc
shll
xor
rorb
sub
orl
pop
dec
adc
fcoml
cmp
add
lret
dec
stos
or
or
jg
sbb
mov
mov
xor
divl
mulb
int
or
fdivl
pop
in
repnz
scas
scas
sbb
sub
mov
mov
inc
call
cmp
dec
je
dec
jne
mov
ljmp
std
movl
jl
dec
sti
jo
xor
or
xchg
sbb
jg
unpcklps
fnstenv
mov
add
lea
xchg
and
or
orb
xchg
mov
xor
and
inc
xchg
push
sub
jbe
cmc
aas
adc
or
mov
dec
shr
jmp
jo
mov
or
psubsb
dec
call
xchg
inc
adc
hlt
call
add
cmc
dec
rorb
out
mov
dec
shrb
add
cmp
dec
sub
jne
adc
jle
jno
xor
pop
xchg
dec
scas
shlb
xor
push
nop
test
mov
shr
cmp
push
decb
out
cmc
sar
ja
clc
jne
jecxz
lods
cmp
je
cmp
je
sub
sahf
imul
adc
out
loop
mov
push
add
inc
sbb
jmp
jle
cmp
je
xor
jmp
mov
stos
es
cmpsb
mov
cmp
jl
mov
add
ljmp
mov
sahf
and
cmp
je
idiv
mov
cmp
je
cmp
je
xchg
je
mov
jmp
sbb
shrb
mov
jmp
lock
rorl
fstps
mov
scas
adc
out
test
fisubrl
lods
mov
in
imul
pop
ror
loopne
scas
pop
jbe
ret
jge
pop
xchg
pop
es
scas
cmpsl
dec
adc
sarb
jg
push
dec
inc
add
add
jb
loope
adc
pop
ret
add
jne
fwait
iret
repz
daa
and
out
push
sbb
ret
repz
and
dec
inc
int
mov
int
sub
hlt
push
shlb
mov
cmp
cld
or
or
xor
mov
mov
in
sbb
sub
lock
pop
jmp
inc
ret
and
sbb
jl
and
dec
shll
cld
fdivs
jmp
jmp
xchg
ds
in
adc
inc
push
inc
cmp
dec
and
jle
mov
dec
cwtl
cli
and
jmp
xlat
jmp
stos
sahf
push
jne
jae
inc
subl
push
mov
sbb
jge
out
leave
test
movsl
sbb
cmpsl
pop
lcall
add
or
push
adc
add
rorb
mov
add
inc
xor
inc
bnd
call
fildl
sbb
in
lret
cld
cld
xor
pop
or
lahf
adc
add
sub
pop
mov
mov
lcall
or
je
sahf
inc
xor
xor
stc
lahf
lock
fildll
mov
sub
int3
fidivl
test
or
fs
or
les
xchg
test
leave
out
mov
mov
sub
xor
xor
push
lock
adcl
and
add
add
add
xor
cmpsl
dec
mov
lods
test
rolb
adcl
or
cmp
ret
add
sbb
lret
xor
daa
int3
and
in
dec
ds
sub
xor
xor
pop
inc
nop
sub
fiaddl
xor
xor
shlb
sti
ljmp
mov
lcall
movsl
lock
xchg
fs
dec
mov
inc
out
les
push
push
or
pop
jne
push
ljmp
pusha
dec
push
dec
aad
add
mov
add
adcl
rclb
or
push
iret
adc
insb
dec
sbb
add
add
pusha
int
jo
aas
jp
pusha
pop
or
js
mov
lcall
jp
jo
mov
xchg
mov
adc
mov
or
push
idivb
dec
int3
mov
xchg
das
das
xor
jo
inc
dec
sar
jl
lret
pop
out
jl
inc
flds
shr
cmpl
dec
fidivrs
xor
pop
jns
data16
call
jo
fwait
aaa
mov
xchg
push
fdiv
insb
mov
xchg
add
call
xchg
rolb
inc
mov
ret
in
in
adc
mov
sub
inc
pop
sahf
lcall
inc
cmp
jge
inc
sbb
clc
es
adc
test
add
cmp
ds
jmp
ret
lret
out
jl
jmp
adc
dec
jo
mov
loope
aas
nop
cmp
xchg
xchg
mov
cmpb
mov
sbb
and
mov
call
inc
jp
dec
sub
scas
rolb
clc
mov
add
paddd
jecxz
lret
loopne
pop
add
jmp
xor
pop
cld
insb
or
push
inc
jmp
mov
pop
push
xchg
jle
sbb
movsl
mov
pop
and
mov
filds
sub
ljmp
push
fidivrl
jle
gs
mov
lret
lcall
ds
nop
inc
addr16
in
mov
adcl
test
xlat
data16
pusha
or
in
lds
sub
call
add
inc
clc
or
jns
sti
or
adc
adc
add
pop
aas
scas
dec
testb
cmpsl
mov
or
push
and
cmpsl
ja
hlt
adc
pushl
mov
leave
fsubrs
ja
and
jmp
xchg
lret
aad
pusha
xchg
inc
movsl
mov
pop
adc
pop
and
ret
fmull
pop
jns
shr
lret
rcr
lea
mov
enter
mov
mov
je
adc
mov
iret
ret
out
icebp
xchg
mov
inc
push
add
ds
mov
lret
push
push
lret
divb
aaa
sub
lcall
push
fildl
fimuls
push
sbb
cli
and
inc
sub
icebp
fs
fisttps
dec
pop
push
add
mov
incl
inc
mov
cmp
mov
repnz
and
xchg
ret
or
jne
jne
mov
xlat
repnz
sub
enter
mov
rcrl
lods
push
or
stos
leave
push
icebp
inc
imul
adcb
data16
jecxz
push
cmc
outsl
outsl
push
test
jmp
jae
inc
xor
mov
mov
dec
rcr
rcrb
call
orb
repnz
imul
std
je
jmp
sbb
das
and
push
imul
ret
or
addr16
mov
cmovne
push
add
pop
mov
mov
push
insb
mov
call
fcmove
testl
and
loopne
add
loop
and
cmp
cmpb
stos
gs
cmpsl
sbb
jae
cmpl
xlat
out
and
add
ret
repz
sbb
shrb
fimuls
ret
repz
ss
es
xchg
push
and
cld
repnz
xchg
addl
dec
mov
cld
int
mov
push
lret
inc
add
or
out
cli
push
xorb
jno
daa
cmp
rcl
adc
jnp
dec
push
rclb
pop
add
sbb
mov
push
push
dec
cs
adc
daa
in
nop
movsl
sti
pop
call
ret
test
mov
mov
in
adc
pop
add
mov
lcall
or
mov
or
test
cmpsl
jge
gs
je
invd
lds
call
push
xchg
shr
or
push
mov
ja
out
andl
fidivrl
push
pusha
adc
lods
in
icebp
mov
lock
call
notb
push
fistps
movl
mov
in
or
push
lahf
lds
mov
out
ret
inc
icebp
test
es
inc
mov
sahf
mov
cmp
fistpll
popf
inc
jno
push
je
inc
dec
outsb
or
insb
icebp
dec
or
push
mov
test
pop
add
test
pop
scas
repnz
xchg
cmp
mov
add
int
test
data16
push
sub
leave
or
repnz
outsl
lock
xchg
cmp
les
scas
rorb
imull
mov
popf
daa
adc
cmp
lss
cmpsl
loop
jo
idiv
push
push
or
stos
aam
lods
or
je
lds
jmp
xor
adc
lock
fs
mov
cwtl
scas
js
inc
mov
cs
mov
lcall
test
cmpsl
sbb
outsb
mov
ds
rorl
and
test
pop
or
add
xor
sub
rcll
enter
call
or
add
push
dec
and
xor
inc
loopne
or
or
pop
mov
adc
mov
dec
adc
dec
add
push
and
sub
ja
ret
or
js
roll
notl
sub
fsubrl
jbe
and
faddl
ja
push
insb
mov
sbb
in
sbb
adc
lret
sbb
or
or
xchg
into
xchg
cmc
cmpsb
adc
mov
pushl
loopne
scas
pop
rcrb
aaa
dec
inc
adc
xchg
pop
cmp
cld
dec
dec
pop
aas
cld
add
sar
jmp
sahf
cld
xchg
cli
and
cmp
insl
shlb
fwait
dec
loop
dec
pop
sub
mov
dec
xlat
jb
jns
sub
jg
ss
cmp
add
out
dec
test
mov
mov
fistl
mov
mull
jns
or
sar
jne
idivl
push
add
mov
inc
popa
xlat
xor
ja
xchg
push
repnz
fisubrl
pop
jae
and
add
lcall
fisttpl
adc
push
or
xor
call
push
mov
dec
fs
mov
outsb
mov
mov
jmp
dec
das
dec
and
fs
mov
dec
inc
push
xor
icebp
adc
mov
out
inc
int3
or
es
fisubrs
incl
adc
push
mov
adc
xchg
add
nop
push
push
or
mov
cmp
mov
shrb
jl
mov
add
inc
outsb
outsl
mov
imul
add
out
cmp
pop
inc
pop
ret
mov
js
add
push
inc
jecxz
int3
scas
add
pop
iret
mov
mov
imul
mov
sbb
sbb
popf
sub
push
fsubp
inc
out
sbb
sbb
sbb
clc
xchg
cmpsl
or
mov
mov
xor
into
xor
data16
addb
add
das
and
clc
pop
pop
call
xchg
les
outsl
popa
pop
mov
xor
data16
and
sbb
pop
mov
jo
iret
or
in
pusha
adc
into
cmp
cmp
sub
iret
mov
xchg
add
in
inc
sub
outsl
repnz
dec
jle
std
xchg
out
pop
add
dec
lods
aas
jne
add
push
aaa
clc
cltd
in
push
push
rcrb
int3
sbb
jbe
in
cld
mov
enter
cmp
rclb
and
inc
sbb
jl
cmp
sbb
and
pop
inc
pop
mov
xor
push
movsl
insb
xchg
cmp
ja
in
or
mov
xor
adc
jo
pop
in
arpl
xlat
xchg
jl
leave
xchg
scas
je
sbb
xchg
adc
loopne
jp
push
add
imul
push
dec
adcl
add
jmp
call
in
jmp
adc
out
mov
inc
add
rorb
ss
fldcw
dec
sbb
sbb
jae
push
pop
mov
xchg
and
pop
xor
xor
rcrl
xor
add
mov
fld
into
cmpsb
mov
and
push
dec
inc
pop
xor
aam
adc
cmpsl
and
lcall
dec
pop
clc
rcrl
dec
cwtl
mov
std
pop
mov
cmp
push
mov
cmp
lcall
jne
mov
test
sbb
and
add
xor
sti
ja
das
bound
mov
push
mov
push
add
jecxz
or
adc
add
xlat
jne
sub
test
fidivrl
rorl
ja
je
add
shr
sub
jo
lock
adc
dec
jmp
inc
and
vmread
jne
mov
inc
cmpsl
mov
decl
scas
push
mov
inc
std
or
jmp
leave
emms
and
xchg
arpl
adc
mov
loope
add
es
mov
in
and
and
call
mov
and
clc
dec
iret
xchg
mov
push
call
adcl
daa
loopne
jo
mov
call
cmp
or
fistps
jnp
add
mov
push
sbb
inc
add
aaa
adc
pop
sarl
rcl
lret
inc
gs
out
mov
std
push
pop
lahf
scas
movb
sbb
pop
psubsw
call
inc
js
dec
inc
scas
inc
or
dec
mov
leave
sbbb
push
jnp
add
addb
cmp
fmul
mov
xlat
pusha
shl
rcl
clc
imul
or
adc
mov
fcom
mov
or
inc
mov
cmp
movsl
mov
dec
adc
sbb
inc
push
and
cmpsb
adc
mov
popa
jecxz
fistpll
lods
lock
insb
ljmp
jle
or
pop
jae
aaa
pusha
repz
fcomp
cmp
jbe
sahf
aad
stos
jne
adc
inc
push
sbb
fisubrs
repnz
adc
pop
sbb
jmp
sti
add
jl
shrl
sub
cmovae
mov
or
inc
loopne
add
jmp
adc
clc
mov
add
add
jl
jl
dec
inc
adc
mov
jge
jle
jg
cld
add
dec
inc
xor
imul
mov
cltd
ret
sarl
sbb
cmpsl
insb
jp
shr
mov
popf
cmp
sub
and
fwait
xchg
cmp
jne
je
sub
lret
or
fiadds
enter
mov
adc
jae
inc
jge
pop
add
ja
stos
push
cmpsl
pop
mov
sarl
or
add
das
adc
sub
xor
sbb
inc
pop
jp
pop
lods
push
pop
add
fsubl
pop
sub
clc
rclb
sahf
fdivrp
xor
add
and
ret
inc
push
movsl
rcrb
and
mov
mov
inc
fwait
aas
lretw
or
addr16
loopne
inc
add
jnp
adc
dec
shlb
call
outsb
add
xor
jbe
cmp
dec
mov
cmp
push
in
inc
jp
adc
mov
sub
nop
test
adc
aad
fs
inc
add
repz
push
pop
mov
sub
pusha
icebp
fsubrs
or
lahf
jbe
pusha
add
or
into
orb
in
sbb
jnp
and
icebp
pop
movsl
push
push
pop
sub
scas
out
push
addr16
jbe
add
jp
call
addl
add
or
pop
mov
sbb
adc
cmp
push
or
inc
cmp
mov
add
adc
dec
mov
lea
xchg
and
mov
test
mov
push
sbb
test
movsb
dec
jb
popa
or
jo
add
and
jg
pop
jmp
add
mov
xchg
jnp
test
pop
jbe
loopne
add
adc
add
in
xchg
pop
push
pop
or
adc
sbb
int
push
push
dec
div
fwait
stos
and
roll
loope
mov
or
inc
cmp
dec
or
in
das
popa
cs
addb
push
jo
je
shr
add
pop
sar
cmp
ja
sub
or
mov
xchg
ja
or
ds
mov
repnz
inc
rorb
insl
roll
insb
mov
aaa
movsb
movzwl
push
fcmovnbe
adc
or
ljmp
in
dec
insl
cld
or
lret
add
mov
mov
jmp
es
shl
or
lret
or
in
imul
dec
sub
jo
cli
insb
sub
repnz
nop
adc
shlb
iret
lret
jo
movsb
fcomps
and
mov
lods
aad
add
dec
add
and
jne
mov
clc
sbb
adc
ret
pop
and
jne
int3
enter
jge
test
add
xor
cltd
dec
loopne
push
je
jle
clc
inc
inc
jl
ja
mov
negb
xlat
call
sbb
or
and
or
pop
hlt
xchg
sub
sar
roll
ficompl
sbb
add
movb
xchg
jle
sub
popf
fdivrs
lds
xchg
int3
into
mov
jmp
adc
dec
cmp
imul
rclb
jo
mov
inc
xor
stos
inc
inc
jle
andl
pop
add
test
xchg
inc
inc
pop
sub
xor
imul
adc
add
jle
loope
sbb
jge
test
xor
decl
sbb
in
lcall
negl
sub
icebp
pop
test
mov
cmp
aaa
mov
mov
inc
and
movsl
das
cli
add
out
sub
sti
add
in
and
fs
xchg
pop
sbb
add
add
and
es
or
pop
xor
movsl
fnsave
ficompl
sub
add
and
pop
fmull
push
cmp
cmpb
and
stos
dec
cmp
pop
lcall
enter
out
les
or
jae
fisubl
and
mov
adc
test
mov
push
dec
adcb
fwait
push
xchg
xor
in
jge
add
mov
mov
mov
mov
push
decb
test
nop
sarb
lcall
fdivl
movsl
inc
rcll
cmp
jae
push
cwtl
data16
nop
mov
nop
sub
xor
int3
out
dec
jb
mov
mov
aam
repnz
orl
xor
shlb
or
bound
incl
daa
popa
cmp
call
add
nop
jmp
add
jmp
fcompl
jns
hlt
mov
adc
push
sub
xchg
test
mov
add
imulb
push
inc
rcrb
cmp
cwtl
mov
dec
mov
incl
call
cs
decl
ror
lock
mov
mov
adc
add
jmp
mov
dec
jmp
fisubs
imul
mov
sbb
sub
enter
orb
jae
push
test
xorl
shrl
inc
lock
lea
lock
or
aas
push
jae
mov
fsubl
mov
mov
cld
cli
rorb
jge
insb
push
sti
pop
jl
or
pusha
lcall
or
imull
or
mov
iret
mov
call
cmc
gs
ljmp
loope
mov
add
inc
les
or
mov
je
mov
jmp
fmull
stos
push
sub
das
push
push
jmp
in
mov
inc
xor
fwait
sub
add
xor
sti
xchg
add
cmp
push
mov
add
pusha
mov
adc
in
sub
jmp
shll
cmp
fldcw
rcrb
repz
adc
les
xor
jmp
mov
and
adc
cli
inc
push
data16
aas
enter
mov
or
xchg
ret
jge
shll
add
lock
push
cmp
lods
movsb
das
pop
js
jge
mov
xchg
imul
fadds
dec
pop
or
jns
shll
add
loop
and
pusha
add
push
mov
clc
mov
mov
mov
mov
pushf
mov
test
mov
sub
add
cmp
xchg
divl
push
mov
subb
pushf
add
call
fstps
rcrb
mov
xchg
cmpl
pop
cmp
js
lahf
add
test
add
inc
inc
popa
or
jbe
lds
adc
cmp
jbe
out
insb
out
jb
adc
or
add
in
fs
jne
push
xchg
jp
rcrb
push
adc
stc
jecxz
mov
lahf
jb
and
jb
fdivrp
repz
mov
mov
mov
dec
cmpsl
jnp
mov
and
inc
int
jl
insl
jb
sbb
cmp
inc
imul
pop
in
cmpsb
int3
dec
push
mov
mov
and
pop
adc
sbbb
inc
or
mov
movb
adc
xor
scas
lods
ret
sar
mov
mov
add
mov
push
fs
mov
adc
sahf
xor
sahf
inc
jg
popf
or
dec
sbb
inc
dec
fldl
lock
or
adc
adc
jne
xchg
mov
push
rolb
sar
xlat
adc
test
sbb
test
push
jle
mov
mov
pop
cmpsl
movb
mov
or
lock
xor
sarl
xchg
in
call
adc
in
call
or
xchg
nop
or
cmp
rorb
call
mov
jno
adc
jne
fisubs
faddl
test
inc
or
pushf
pushf
pushf
pushf
or
adc
pushf
pushf
pushf
sbb
and
test
call
inc
int3
cmc
mov
mov
push
cwtl
shll
cmp
mov
dec
shr
test
popa
push
rolb
fisubs
mov
jno
dec
ret
sbb
hlt
cmp
cmp
out
adc
inc
mov
call
and
mov
loopne
mov
sub
je
in
push
aas
jo
xchg
cmp
mov
xchg
mov
jo
subb
repnz
fsts
aad
mov
jb
lock
stc
jnp
add
add
add
cmpsl
add
mov
lcall
shlb
pop
adc
cmpsl
imul
scas
imul
mull
xor
dec
dec
aaa
pop
inc
mov
xor
faddl
mov
mov
mov
and
fists
push
sub
lret
js
das
or
mov
mov
jg
adc
dec
mov
icebp
enter
rorb
mov
rol
mov
mov
mov
push
pop
js
call
scas
enter
or
sbb
stos
xor
mov
les
dec
not
int3
stos
add
jb
or
cmp
inc
outsb
leave
push
mov
add
xor
sub
add
and
cmpl
cs
push
or
add
inc
mov
dec
imul
jb
das
push
inc
mov
insl
push
fsubl
test
loopne,pt
add
out
pop
dec
insb
adc
call
dec
ficomps
mov
xchg
iret
imul
or
mov
and
cmpb
xchg
jo
push
sbb
push
enter
ljmp
mov
cmpsb
rcll
and
mov
and
sahf
add
dec
push
fildl
dec
cmp
sub
movsl
fmul
ds
jmp
int3
rcrb
inc
sub
adc
sub
mov
mov
es
out
or
jmp
in
ss
das
fidivl
cmp
loope
loope
repnz
xchg
sahf
xor
cmp
xchg
inc
mov
adc
sbb
roll
push
cmpsl
jb
imul
fcoml
sub
lcall
dec
rcll
stos
cmpsl
pop
jg
mov
call
das
push
imul
adc
pop
inc
loop
push
push
xor
pop
sub
dec
xchg
xor
stos
popf
add
lods
jno
ret
or
mov
rclb
mov
je
in
decb
xchg
mov
cmp
pop
subl
nop
insb
jmp
mov
lea
mov
aad
xchg
xor
aam
call
shr
pop
mov
push
xchg
or
shrb
divl
fs
aas
rclb
mov
call
pop
sti
rol
and
loopne
xor
fmul
nop
add
mul
in
and
dec
stc
enter
add
fldcw
push
std
ret
jo
push
test
mov
aad
xchg
add
dec
repz
push
xchg
lahf
push
or
push
and
mov
add
pop
addr16
loop
mov
lret
xchg
call
imul
in
mov
inc
aas
cwtl
adcb
aaa
les
pop
outsb
call
mov
xchg
ret
adc
or
pop
inc
leave
lahf
mov
call
stc
mov
loopne
fdivrs
pushf
pusha
jle
mov
call
nop
push
insl
clc
in
hlt
inc
cmp
sub
jmp
lahf
addps
loopne
add
or
fiaddl
fwait
or
ja
das
or
dec
ror
call
ret
and
pop
push
push
call
lret
push
fldcw
xchg
add
je
aad
or
or
sahf
add
xchg
adc
lret
and
mov
call
cmp
js
push
sub
gs
push
dec
mov
je
mov
jo
dec
ret
pusha
jle
inc
jmp
and
inc
pushw
cmp
int3
ljmp
jle
or
xchg
cli
sbb
add
push
call
je
push
add
xor
mov
lcall
sbb
in
xchg
mov
stos
orb
mov
call
ja
in
call
clc
adcl
lock
cld
add
ret
or
shll
push
mov
cltd
push
jns
adc
setne
rorl
push
and
fldt
xchg
or
push
jae
xchg
pop
fmull
lds
popf
push
xchg
jnp
push
mov
mov
mov
push
and
nop
xchg
mov
jnp
xor
mov
xorl
daa
push
aad
out
jbe
jle
mov
inc
jae
push
xor
inc
jb
and
pop
push
arpl
adc
movsb
jbe
push
push
inc
test
dec
cmp
xor
or
pushf
in
xchg
jge
xlat
xchg
cltd
mov
push
clc
pop
or
push
dec
add
push
jg
sbb
push
sub
sbb
fmul
mov
jp
jmp
shl
add
mov
add
lods
push
sbb
mov
idivb
adc
cmp
xchg
fmull
pop
cmpsl
add
adc
pop
faddl
mov
or
je
mov
push
xor
leave
add
enter
or
adc
std
addr16
call
lods
adc
xor
add
nop
dec
jnp
lret
cmp
ljmp
sbb
jo
sub
sub
fisubrl
mov
lret
test
das
shrb
mov
cwtl
adc
sub
mov
or
hlt
cmpsb
jnp
adcb
adc
jp
mov
je
sub
cmpl
ds
dec
sub
or
mov
addb
add
push
ss
loopne
je
scas
inc
lret
ret
movb
lcall
or
cmp
insb
or
sbb
lods
shl
add
dec
sbb
imulb
adc
lea
sbb
push
xchg
add
jge
mov
jae
mov
sbb
pop
sub
pop
inc
inc
test
fldl
mov
fs
aas
cmp
call
call
mov
adc
loope
inc
cli
push
mov
xor
je
call
clc
popf
cmpsb
push
test
adc
dec
ds
cmpsl
xor
cwtl
pop
cwtl
aam
fst
pusha
or
add
and
ret
lods
lret
nop
mov
fdivrl
mov
in
test
cltd
sub
les
or
out
xchg
xchg
ja
push
je
sub
imul
divb
mov
jmp
cmpl
add
sbb
jne
mov
je
pminsw
pop
mov
sub
add
sub
push
push
fldl
xchg
lods
andl
jl
and
andb
xchg
pop
or
outsb
or
out
xchg
arpl
push
insb
ja
sbb
push
shll
cmp
adc
decl
cld
sub
inc
pop
push
push
mov
sub
ficoml
or
cld
clc
sub
and
rorb
mov
dec
cwtl
cmpsl
addb
inc
fsubr
cli
mov
hlt
js
ds
leave
cmp
sbb
out
hlt
pop
test
xchg
mov
in
mov
xchg
or
cmp
inc
inc
loop
mov
cmc
mov
xchg
or
adc
es
and
dec
jmp
mov
pop
fldenv
ljmp
lock
add
dec
adc
jns
in
scas
or
adc
cs
mov
or
int3
mov
pop
add
insb
cmp
jae
cmp
mov
dec
or
mov
cmp
out
fcom
mov
in
sbb
mov
dec
lods
pushf
and
mov
je
out
insb
mov
mov
ja
ljmp
push
mov
add
movsl
in
jo
out
jae
cmp
fmull
mov
push
jmp
call
das
xchg
push
mov
xor
sarb
mov
push
pop
popf
fldl
mov
inc
xor
out
pop
and
out
pushf
dec
cld
pop
orb
ljmp
add
cmpb
mov
test
mov
cmc
push
mov
mov
call
aaa
cs
xor
in
push
inc
inc
sarl
int
je
scas
mov
negb
jecxz
hlt
dec
hlt
addr16
jge
mov
imul
mov
enter
std
fcoml
pop
int
jne
mov
xchg
sub
sub
push
mov
sbb
adc
sub
sbb
add
inc
sub
roll
and
cld
inc
mov
int
lahf
push
ja
addr16
mov
out
lock
lock
and
fmuls
inc
jbe
in
mov
gs
mov
dec
sbb
inc
nop
xchg
insb
sahf
xchg
pop
mov
xchg
mov
and
ja
sahf
dec
and
invd
push
sbb
dec
rcrl
mov
push
cli
mov
mov
shll
shll
loope
and
xchg
xor
pop
fldz
test
rorb
iret
mov
popa
lea
dec
insb
push
aas
push
fwait
scas
sahf
movsl
mov
rcrb
add
pop
ljmp
outsl
inc
cmp
jmp
or
dec
nop
push
aaa
movsl
mov
cwtl
xchg
lods
loopne
sti
cld
mov
mov
or
imul
sbb
lret
and
shl
inc
adc
and
push
add
fsubrs
imul
lods
sbb
std
roll
mov
call
cmp
push
popf
sbb
idivl
rcl
push
lods
mov
cmc
loop
push
call
push
cmpsl
push
cli
or
xor
or
shl
sbb
dec
ds
or
mov
xor
call
movsb
pop
fsubs
mov
loopne
rcr
mov
test
stos
cmp
jmp
insb
pop
cmp
bnd
and
jp
and
dec
mov
xchg
cmp
mov
pop
adc
cmp
or
xchg
insb
pusha
pop
ficomps
pushf
pop
lds
mov
cli
ljmp
sub
inc
xchg
pop
mov
dec
insb
jmp
outsl
inc
fs
imul
sbb
inc
push
dec
inc
pop
adc
xor
js
and
xor
or
fistpl
push
xor
movsb
and
adc
addb
popf
sub
inc
in
and
or
cltd
int3
add
sahf
out
mov
add
data16
iret
sarl
xchg
push
pushf
inc
nop
fcoml
lcall
sahf
idivl
xchg
push
pusha
xchg
cmp
out
in
insb
dec
cltd
mov
cmp
negl
lcall
bt
stos
stos
mov
add
cmpsl
lgdtl
add
sti
mov
sbb
test
and
xor
xor
jmp
loop
rorl
xor
add
mov
fcoml
sub
fiaddl
xchg
pop
cmp
out
insb
dec
mov
cmp
sub
repnz
enter
mov
pop
es
and
test
fs
add
inc
sahf
or
dec
bound
cmp
repz
xchg
stos
aam
out
ds
lock
adc
and
sahf
out
sahf
inc
pop
push
mov
stos
mov
aam
sti
cmp
out
add
adc
sub
out
mov
bound
xchg
cmpsb
das
enter
iret
repz
push
aad
push
inc
push
push
bound
iret
repz
mov
iret
repz
fdiv
cld
or
out
sahf
cmpsl
sbb
ds
data16
out
sahf
jle
cmpsb
mov
repz
add
sbb
cmp
cmp
repz
insb
adcb
mov
aam
hlt
add
jb
fcoms
fmuls
push
inc
push
sahf
out
sahf
push
data16
jns
shl
data16
fldcw
xor
inc
sub
pop
push
pop
add
adc
pop
cs
jno
xor
add
push
movsl
das
add
imul
and
sbb
call
mov
mov
pop
xor
sub
lahf
ja
push
outsl
and
fldenv
sbb
int3
lds
xchg
mov
mov
cmp
inc
dec
loope
or
and
dec
xor
inc
lret
adc
pop
cmp
or
aaa
cmpb
dec
push
dec
mov
iret
and
push
insb
fildl
dec
inc
sahf
je
push
outsb
ja
jnp
out
push
fs
outsb
add
fildl
shrl
jo
rcll
fs
inc
adc
jb
ret
cmp
push
jns
pop
mov
xchg
add
inc
inc
rorl
fsubrl
pop
enter
stos
dec
xchg
pusha
dec
aaa
adc
fisubrl
fcomps
dec
inc
sbbb
pop
pop
dec
mov
xchg
push
add
sub
lcall
and
lods
pop
js
dec
ret
dec
fsub
mov
or
push
mov
sbb
jnp
imul
adc
das
sub
pop
cltd
inc
mov
adc
testl
inc
inc
inc
cmp
aaa
push
mov
lretw
add
loop
xor
sbb
mov
inc
sub
inc
dec
sarl
push
test
jae
adc
outsl
in
imul
popa
fs
out
mov
popa
ja
jae
inc
inc
push
dec
adcb
sub
fadds
outsl
das
jg
inc
aaa
je
pop
inc
mov
cli
mov
pop
sbb
fcomps
mov
push
inc
dec
push
xorl
enter
daa
sbb
pop
add
sub
inc
push
out
imul
enter
mov
je
sbb
fwait
inc
pop
inc
jae
imul
jle
cmp
mov
add
or
sub
inc
inc
push
fists
and
mov
jg
add
jecxz
and
push
stos
ss
jecxz
xchg
stos
sbb
stos
push
jg
movl
test
inc
filds
push
test
inc
sub
and
cli
je
jo
mov
ja
ret
mov
mov
imul
xchg
add
and
inc
lahf
sbb
xor
pop
mov
cs
push
or
add
movsb
lods
daa
sbb
sub
pop
mov
sbb
xchg
or
imul
add
in
push
sbb
push
fcoml
lock
subb
cmp
pop
inc
mov
push
push
jo
cmp
repz
in
cmp
loopne
clc
jg
fidivrs
and
push
sub
push
add
bswap
out
sahf
imull
cli
push
mov
mov
sahf
mov
jg
in
lea
sub
movsl
jbe
out
inc
add
xor
cmp
jo
pop
and
cltd
das
jo
xchg
push
jb
nop
pop
enter
das
mov
jb
pop
and
loopne
pop
enter
add
add
add
and
clc
mov
add
dec
mov
xchg
adc
push
fwait
xchg
insb
call
or
dec
fidivl
and
push
push
ficoms
incb
fsubrs
dec
lcall
scas
iret
and
sub
ds
out
or
mov
das
push
mov
and
sbb
sbb
add
xchg
add
sbb
fldt
add
out
and
jo
push
decl
mov
js
or
jnp
filds
repz
mov
ja
mov
cmpb
js
cmp
mov
jb
and
movsb
pop
decl
add
xchg
dec
add
stos
stos
scas
jg
jo
pop
repnz
repnz
pop
clts
pop
add
jns
int
adc
push
lock
xchg
and
sub
jmp
push
add
sub
push
and
push
gs
ss
add
fwait
int
mov
or
adc
push
add
and
sub
push
add
inc
clc
prefetch
cmp
jo
push
add
add
out
in
sahf
out
movb
out
lods
test
cmp
es
in
xor
mov
cltd
int3
decl
data16
iret
repz
cltd
out
popf
out
cltd
cltd
cltd
cltd
cs
test
int3
push
lcall
flds
pushw
cltd
int3
jns
sub
xor
out
pop
out
sub
data16
ja
sahf
data16
cs
cltd
jns
out
cltd
cltd
jns
int3
dec
ja
out
int3
int3
daa
fldl
shrl
cwtl
cmpsl
loopne
push
data16
cmp
hlt
xor
xor
ss
out
or
data16
data16
jns
jns
es
int3
jns
out
fisubs
jmp
int3
in
loop
fnsave
push
add
sub
xor
cmpsl
cmp
push
jmp
data16
jns
dec
data16
cltd
cltd
addr16
repz
cltd
and
cs
jnp
cs
dec
das
mov
pushl
ret
loopne
insl
add
add
repz
mov
push
int3
data16
cmp
mov
int3
dec
repz
or
int3
int3
cmpsl
xor
cmp
push
int3
ljmp
addr16
popf
jmp
or
jo
repz
push
cmp
repz
dec
push
cmp
repz
dec
repz
push
cmp
cmp
xchg
out
sub
push
cmpsw
sub
movsl
rcrb
ss
int
add
xchg
xchg
add
add
add
add
add
add
add
add
popl
sbb
addb
push
pop
stc
fsubr
cmp
pop
xor
cli
pop
in
pop
pop
mov
das
mov
add
sti
sti
push
daa
fnstenv
incl
in
addr16
popf
sti
push
pop
mov
add
ja
outsb
dec
in
in
add
cmc
pushf
add
pop
out
fucomip
dec
in
push
outsl
jp
xor
cmp
cltd
imul
and
inc
push
and
mov
pop
and
dec
add
add
cmpsb
pop
lock
iret
jb
and
inc
addb
mov
adc
mov
fstl
jg
mov
cltd
adc
jg
incl
std
fstps
js
mov
cwtl
mov
pslld
js
xchg
mov
js
jo
mov
das
add
mov
int
aas
in
inc
aas
js
mov
jnp
fildll
mov
jle
mov
aas
rcr
incl
js
mov
mov
jns
mov
jo
pop
jge
pop
ja
maskmovq
rorl
pushw
adc
clc
jo
ja
shll
mov
into
scas
pop
mov
xchg
sub
lock
and
das
pop
outsl
pop
stc
out
push
mov
pop
push
sti
mov
xor
cmpsb
in
es
repnz
xlat
pushf
ds
pop
mov
xor
inc
pop
mov
inc
add
pop
pop
pop
outsb
sbb
push
ss
mov
push
jo
and
jg
add
pusha
repnz
pushf
add
add
out
inc
inc
orb
cld
insl
test
clc
push
add
pop
dec
inc
iret
lahf
addb
push
add
add
cmp
inc
cmp
xor
iret
into
in
in
mov
pop
aas
xor
mov
out
ds
cmp
pop
inc
jg
inc
jmp
out
aas
cmp
ss
jg
jl
shlb
add
in
sbb
mov
inc
xchg
or
push
xlat
dec
out
push
lock
ficoms
pop
push
lods
xor
mov
not
fldl
jg
cmp
jae
ds
ja
repnz
push
lock
inc
cmp
in
inc
cmp
loope
sbb
into
addb
aas
sar
testl
jge
out
in
aas
mov
jmp
cmp
or
imul
jmp
aas
jge
int
add
in
add
int3
add
add
or
in
mov
jo
out
adcl
add
das
add
aas
inc
sub
repz
sti
jp
xor
dec
aas
mov
mov
aas
ret
pop
inc
aas
lret
lods
lea
test
mov
mov
jg
aas
pop
les
jp
aas
stc
inc
insb
insb
inc
aas
inc
sti
insl
les
nop
arpl
xchg
test
sbb
and
add
sbb
dec
sub
addr16
lcall
je
jo
cmp
cmp
mov
mov
addr16
mulb
xchg
inc
call
mov
adc
popa
inc
mov
jg
js
push
sbb
imul
adc
push
pop
pop
mov
out
and
out
mov
mov
notb
mov
mov
push
push
jnp
or
add
mov
pop
sbb
pop
push
mov
mov
fnstsw
mov
push
test
ds
shl
push
fstpt
js
jbe
pop
loope
pop
xchg
aas
xchg
gs
mov
notb
hlt
add
xor
push
shrb
pop
bound
arpl
fs
dec
adc
out
int
add
dec
adc
dec
push
pop
call
sub
pop
arpl
rorb
push
jge
add
mov
lcall
out
push
push
nop
jl
add
xor
sub
pop
or
arpl
add
insb
add
cmp
mov
sub
xchg
in
or
sub
xchg
pop
cmp
lahf
and
adc
xchg
push
sbb
jecxz
push
incl
testl
jne
jp
pop
mov
cmp
maxps
adc
jp
bound
dec
jae
xorb
mov
dec
lret
unpcklps
fcoms
xchg
ljmp
pop
idivb
or
adc
mov
mov
pop
popa
sahf
jb
add
or
dec
xor
sarl
addr16
xor
inc
addr16
jecxz
mov
ficoml
incb
aas
adc
adc
andl
sbb
pop
stos
add
jle
bound
or
dec
das
or
out
and
jge
pop
mov
pop
call
pop
xor
xchg
inc
xchg
fcomip
push
ret
jb
inc
add
mov
dec
jne
insb
aas
push
stc
idivl
dec
add
je
add
jbe
jb
jns
arpl
pop
jne
mov
mov
jb
add
aaa
mov
roll
add
or
in
adc
or
jae
loopne
ja
or
je
insl
mov
addb
pop
jo
das
outsl
pop
or
inc
or
rclb
push
and
push
fdivp
mov
andps
gs
or
xchg
pop
push
popa
mov
shr
push
outsl
outsl
push
jnp
pop
pop
mov
pop
or
mov
mov
ret
aas
iret
lock
fnstenv
and
jb
insb
push
je
int
xlat
jnp
sub
movsl
or
push
ja
jle
add
ljmp
lret
lret
js
insb
mov
sarb
iret
add
loop
sbb
or
pmaxub
bound
fs
fiaddl
sbb
or
add
xor
cmp
adc
inc
sub
lahf
pop
jns
sbb
imul
test
aas
pop
add
cmp
dec
out
sahf
je
outsb
inc
jbe
cs
sbb
outsl
cmp
push
cmp
xor
cmpsl
loop
fistps
inc
lcall
mov
imul
push
sahf
out
xor
outsb
and
lret
hlt
push
test
pop
xchg
lock
popa
lahf
add
bound
shr
push
ret
clc
push
bound
popa
cmp
add
loopne
rol
arpl
imul
inc
fcmovnb
inc
cmpsl
dec
orb
push
cmpsl
cmp
pop
shll
out
add
mov
add
rcr
roll
je
add
out
mov
mov
scas
mov
ja
stc
sub
cs
aaa
dec
add
mov
and
popa
ljmp
push
cmp
or
xlat
pop
jae
popa
cmpsl
xchg
test
data16
js
insb
and
cmp
xor
xor
and
out
mov
push
push
inc
sub
popa
fwait
dec
mov
and
mov
ds
ss
ds
jl
jae
jne
outsb
cmp
push
mov
pop
mov
cmp
insl
jbe,pn
mov
fildl
xlat
sbb
jecxz
fistl
popa
insl
int3
dec
push
cs
std
mov
xchg
js,pn
cltd
outsl
jb
jb
and
shl
dec
js
ss
lcall
jo
ja
lcall
mov
adc
iret
add
dec
outsl
sub
outsb
in
cmp
das
dec
sub
in
loopne
hlt
jns
je
cmp
or
addr16
popa
outsb
popa
or
subl
aad
imul
xor
loop
orb
in
jg
xor
xor
xor
arpl
xor
insb
push
shl
jge
pusha
sub
das
jae
or
shrl
or
adc
ret
outsl
mov
mov
xor
arpl
adc
and
xor
andb
and
fsubrl
inc
js
cltd
dec
cwtl
cmp
mov
rorb
pop
add
adc
jne
xor
pop
out
shlb
sti
adc
sbb
or
mov
mov
cld
je
mov
and
push
sub
pop
lea
inc
jg
cs
push
dec
dec
das
xor
xor
sbb
mov
gs
cltd
sub
ficoml
das
popa
sbb
jo
bound
addl
jmp
cmc
orb
jo
push
and
xchg
jnp
dec
scas
xor
pusha
xor
or
xor
sub
aam
mov
data16
jae
xor
cmp
stc
popa
sub
bound
or
mov
xor
xor
mov
das
inc
cmp
or
adc
jp
bound
pop
xchg
jg
xchg
inc
adc
sub
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
cmp
incb
mov
xchg
mov
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
adc
xchg
xchg
call
push
pop
mov
outsl
fucomp
in
lock
decl
inc
dec
dec
xchg
lret
xor
scas
jno
or
stos
jnp
jae
mov
add
dec
xor
dec
dec
call
or
lods
lods
iret
inc
aaa
or
je
outsl
out
daa
xchg
jo
divl
int
rcrb
cmp
lods
call
cmovo
lahf
stos
fprem
rolb
js
les
push
jl
jmp
pop
mov
lcall
movsb
jns
cmp
mov
andl
dec
call
mov
add
out
and
jmp
gs
out
cmp
loop
ss
mov
inc
xchg
push
dec
mov
dec
out
mov
pusha
sti
mov
inc
cmp
sbb
call
inc
inc
sub
push
mov
jmp
mov
or
xor
mov
rcll
inc
and
cmp
xchg
jp
movsb
jb
xchg
ja
fstpt
clc
jns
push
pushl
pop
loop
pop
aam
push
mov
jne
dec
lcall
mov
xchg
add
mov
inc
sbb
rcrb
push
mov
sar
add
std
out
sbb
sbb
fsts
dec
sbb
dec
push
in
insl
jmp
adc
sbb
mov
inc
xrelease
mov
aaa
jae
out
add
test
addr16
decl
pop
rorl
mov
in
inc
enter
xor
insb
jmp
cmp
dec
or
mov
icebp
cwtl
jl
stos
pusha
xchg
leave
inc
out
cmp
lcall
fildll
or
jle
mov
cmp
clc
jmp
mov
pop
in
rclb
movsb
pusha
and
enter
enter
mov
out
ds
inc
js
sahf
or
pusha
cmp
sbb
int3
dec
inc
fneni(8087
repz
mov
pushl
ret
scas
jge
addb
and
xchg
inc
leave
or
in
or
mov
ljmp
adc
and
xlat
cmp
push
bound
outsb
shlb
push
pop
aam
or
lcall
fiaddl
ficompl
js
repz
jecxz
and
push
jge
xor
fildl
cmp
pop
add
frstor
in
stc
je
scas
lret
push
dec
ffree
stc
inc
out
pop
mov
cmp
sahf
or
or
push
jg
loop
and
inc
enter
xchg
xchg
or
add
xorl
test
outsl
rcrb
pop
scas
repz
ljmp
into
mov
subl
loope
insl
and
jnp
fsubl
or
xchg
mov
loopne
loop
sbb
fcmovnb
sahf
push
mov
sbb
adcb
xchg
add
test
mov
pushl
movsl
mov
xchg
sbb
adc
mov
sub
incl
in
and
adc
xchg
sbb
mov
or
sarb
jp
nop
into
enter
decl
icebp
lock
mov
xchg
aaa
out
and
sbb
jle
ljmp
movsb
xchg
sbb
mov
movsl
cwtl
add
fst
mov
xor
lret
call
and
xchg
loope
and
sahf
lahf
dec
fadds
mov
cwtl
les
push
sarb
pop
fs
int
xchg
daa
inc
call
mov
pop
cmp
sbb
pop
pop
cmp
and
push
pop
xchg
test
mov
push
or
ljmp
movsl
imul
fiaddl
sbbb
and
rcl
sub
call
jmp
push
lret
and
mov
clc
loopne
cmp
dec
sub
jno
adc
icebp
in
jecxz
pushl
cwtl
aas
fwait
les
adc
jb
inc
loopne
adc
mov
lcall
pop
stos
jbe,pt
cmc
push
push
cld
imul
cmpsl
xchg
in
fstl
lcall
or
pop
inc
push
sub
cmp
cmp
or
mov
daa
repz
sti
into
test
cli
sbb
repnz
hlt
mov
mov
sarl
fsubs
repz
jmp
movb
push
pop
rcl
xor
cmpsb
xlat
adc
scas
test
lret
ss
fmuls
decl
in
popa
or
popf
dec
sub
xchg
shlb
pop
cmpb
mov
xor
lcall
pop
pop
loop
out
popa
mov
jge
adc
inc
test
out
or
adc
call
push
dec
dec
dec
mov
cs
iret
sbb
lahf
lahf
addr16
mov
dec
pushl
add
add
pop
mov
cltd
jb
inc
add
or
pop
or
icebp
decl
mov
in
push
in
cltd
les
decl
rorb
addr16
repz
int3
xor
addr16
adc
ljmp
inc
jle
dec
pop
fistps
jmp
call
add
das
sti
movb
adc
mov
in
cmc
idivb
decl
ret
lock
xchg
push
inc
mov
clc
dec
mov
aas
xor
jmp
jne
loopne
arpl
mov
mov
jecxz
addb
aam
std
push
iret
pop
xchg
imulb
ljmp
mov
lock
sbb
mov
ss
cmp
and
lcall
call
cmpsb
inc
mov
xlat
or
lcall
jne
dec
int
mov
fisubrl
fdivrs
pop
test
and
sbb
mov
cmpsb
mov
stos
xor
jbe
lcall
mov
fisubl
add
aaa
jg
sahf
push
js
loope
pop
dec
inc
fistpll
es
jmp
mov
xlat
and
inc
dec
ret
fwait
lea
call
add
cmc
pop
xor
or
fstpt
fwait
popf
jp
xchg
push
mov
rcrl
lret
outsb
xor
incl
andb
fsubrs
dec
xchg
sub
repnz
rclb
lea
fidivrl
out
clc
call
sbb
push
ss
out
sub
mov
decl
sub
mov
fisubrl
jbe
push
jmp
pushf
nop
jbe
sub
xchg
pop
inc
cli
push
fstl
xchg
adc
cltd
dec
push
mov
and
or
or
cwtl
jle
mov
xchg
jle
out
pop
cld
lcall
dec
fcmovbe
adc
in
push
lods
sub
lcall
lret
inc
repz
jmp
sub
fisttpll
insb
fisttpl
incl
imulb
sbb
push
fldt
iret
es
mov
jmp
cld
xchg
jae
mov
mov
jge
mov
mov
jmp
ret
pop
testb
fbstp
popf
rcll
push
iret
orl
je
push
push
xchg
mov
mov
lahf
xor
int
mov
shrb
pop
inc
inc
dec
mov
jbe
inc
dec
jg
stos
repnz
pop
cmpb
xchg
inc
rep
or
scas
lds
jg
int
or
in
fwait
mov
hlt
push
dec
mov
sbb
fs
fcmovnbe
mov
aaa
fidivrl
add
inc
pushf
sti
xor
sub
push
jp
mov
mov
pushl
xor
push
xor
test
mov
je
es
pop
popf
pop
add
mov
fcomip
insb
or
roll
jae
mov
cmp
xchg
cs
xor
cmpsb
in
and
js
sbb
sahf
enter
out
mov
push
icebp
mul
cmp
mov
repnz
sbb
sbb
out
cmp
in
mov
sub
jg
mov
imul
enter
imull
jb
call
mov
loop
ljmp
shr
sbb
adc
icebp
jnp
cltd
insl
sti
pop
sub
cmp
mov
je
add
ja
insl
scas
cli
jo
shll
push
cmpsl
out
vpmaddwd
call
inc
xchg
ficoml
jnp
push
adc
adc
cmc
outsl
sar
inc
mov
arpl
add
xchg
sbb
and
inc
xor
mov
jg
mov
leave
xchg
movsl
sbb
or
popw
cmp
xlat
rclb
out
cli
xor
fldt
test
xchg
aaa
dec
popf
dec
adc
mov
cli
outsl
cmp
mov
push
jp
pop
mov
push
push
into
jno
inc
mov
mov
test
sub
mov
popa
outsb
push
sbb
xchg
adc
jne
call
fucomi
idivb
sub
inc
sti
test
xor
aam
pop
push
sub
push
pop
inc
out
cli
cmp
lahf
inc
pop
pop
cmp
scas
lahf
push
xor
sub
mov
je
jmp
mov
sub
inc
inc
mov
sbb
push
pop
insb
mov
adc
cmp
fstpt
mov
cmp
mov
leave
fisubl
mov
xchg
jnp
incl
int
or
xchg
xchg
mov
dec
push
and
fs
outsb
add
arpl
dec
stos
jmp
cmp
gs
lods
push
xor
stos
inc
xchg
lcall
loop
adc
sti
inc
inc
xor
jmp
repnz
jecxz
dec
test
lret
pop
aaa
sub
pop
scas
and
pop
loopne
lods
adc
out
test
xchg
out
lcall
call
pop
orl
jge
inc
push
divl
xchg
mov
lcall
inc
decb
cli
or
push
cmpsb
gs
popa
popw
iret
sbb
outsb
adc
jmp
mov
test
jle
mov
out
mov
pushl
jl
ficompl
fimull
jns
lahf
cmpsl
mov
cltd
mov
push
mov
out
push
xlat
int
lret
call
inc
loop
mov
int3
cmpsb
loopne
daa
pop
cmp
sub
mov
mov
mov
fnstenv
xor
mov
arpl
imul
inc
mov
daa
and
push
aaa
pop
sub
cmp
mov
xor
or
clc
adc
push
sbb
call
cmp
rcll
jns
push
sarl
lea
outsl
dec
jae
incl
dec
rclb
loope
imul
je
adc
mov
cltd
cmp
xchg
ljmp
movsb
lods
cmp
pusha
jl
movsb
shrb
dec
leave
adc
cmc
mov
add
push
cs
leave
insl
aam
inc
mov
xchg
es
xlat
fisttps
aaa
addr16
xchg
stc
clc
mov
lcall
and
sub
push
mov
jnp
int3
stc
js
and
enter
and
sbb
add
xchg
xchg
test
pop
stos
out
ret
loopne
sub
lcall
inc
or
dec
daa
sub
mov
inc
mov
push
es
call
and
cltd
xlat
adc
sti
fsubrl
add
or
and
jnp
mov
decl
test
cli
pushf
pop
ficoml
aam
sar
inc
jno
pop
dec
stc
fists
xchg
stos
call
push
adc
jbe
clc
add
pop
push
jns
or
call
jmp
loopne
stc
in
and
leave
or
jnp
dec
push
lcall
fsubs
cmpsb
pop
pop
push
aam
push
imul
add
divb
movsb
aam
jle
outsl
pop
xchg
test
incl
sub
push
mov
sbb
iret
scas
rol
sub
faddl
ljmp
adc
add
or
or
jns
adc
sub
pop
popa
jbe
lret
out
nop
test
shrl
cli
in
add
inc
add
jmp
jmp
push
sub
pushf
mov
insl
imul
ljmp
in
lahf
pop
loop
cmp
sub
adc
xchg
dec
std
decl
imul
loop
addr16
lea
inc
xchg
fisttpll
aaa
inc
cld
aaa
dec
pop
inc
sub
mov
jg
jl
pop
mov
icebp
cmpsb
or
or
push
mov
and
aaa
std
jg
inc
jbe
sub
lea
ret
cltd
fcomp
fisubrs
pop
ret
call
jno
lahf
and
xchg
mov
pop
mov
xchg
pop
mov
inc
pop
stos
inc
dec
decl
jmp
imul
clc
cs
idivb
mov
jge
leave
jp
or
push
loop
mov
fcmovnb
int3
and
pop
adc
scas
sub
loopne
lods
sub
jbe
jge
jmp
popa
and
repz
lret
out
nop
xlat
sub
fiadds
es
fldcw
mov
rcl
scas
outsb
dec
out
cld
lcall
call
bound
push
push
jg
lahf
fidivl
inc
insl
repz
stos
and
inc
mov
fnstenv
xor
int3
ret
add
mov
dec
mull
dec
cld
mov
mov
ret
lret
push
sub
mov
lcall
arpl
negl
jb
loop
mul
cmp
int
rorl
ljmp
call
jl
aaa
roll
imul
mov
pop
push
push
dec
mov
cltd
test
sbb
jmp
popf
jo
and
testb
jae
dec
push
lret
rcr
js
pop
sbbl
push
loope
or
negl
cmp
jg
out
not
and
inc
insb
push
jl
es
imul
ja
lock
test
lea
fstps
jmp
insb
in
leave
hlt
pand
mov
xor
sub
cmpsl
sbb
std
sbb
xchg
push
clc
dec
popa
pop
push
ret
or
adc
mov
hlt
enter
pushl
add
lret
gs
cmpsb
loop
lock
or
or
insl
or
js
mov
lcall
sbb
cmpsl
adc
push
js
outsb
lret
sbb
repz
or
daa
mov
aas
mov
lods
aas
neg
loope
xchg
jmp
cmp
test
sbb
push
loopne
js
add
and
std
sbb
lcall
rcll
pop
mov
pop
test
sti
je
xchg
dec
jb
popf
jmp
and
rolb
je
fcomps
addb
lcall
sub
inc
inc
dec
cmp
or
jmp
adc
cmc
push
lds
fwait
ret
push
lret
bound
test
adc
aas
aad
xor
sub
fisttps
cltd
jmp
lcall
xorb
push
stos
dec
jg
es
and
div
adc
sbb
and
dec
js
adc
xchg
xor
popa
cmc
xcrypt-ecb
cmpsl
mov
sbb
notl
out
loop
and
scas
pushl
mov
dec
xchg
lcall
jae
push
sbb
adc
mov
and
sbb
or
fmull
and
pop
cmp
incl
decb
adc
add
pop
or
mov
cmpsb
pushf
adc
or
sti
add
out
jnp
mov
cmc
xchg
sbb
in
in
inc
out
and
add
out
scas
cli
jp
adc
sub
pop
mov
inc
stos
loopne
and
pop
cmpsl
sbb
inc
cmp
mov
push
push
mov
sbb
add
xor
pop
insl
sub
mov
jl
mov
pop
or
lods
pushl
jae
in
sub
pop
cs
imul
les
ret
push
fcomip
jns
cs
insb
inc
and
inc
xor
cmpsb
jb
fistl
jge
mov
push
mov
outsb
int3
inc
xchg
mov
cmp
icebp
push
sbb
jg
or
stos
std
sbb
mov
fsubr
aad
cmp
mov
or
dec
aam
adcl
sub
pop
add
movsl
sbb
mov
dec
dec
punpcklbw
mov
mov
mov
decb
inc
sub
sub
pop
call
cmp
mov
inc
out
in
incl
fwait
mov
lock
ficoms
xor
xchg
cwtl
popa
jp
push
movsl
and
into
pop
vmovd
add
orl
inc
sbb
mov
test
call
xchg
std
sarb
jne
xorb
mov
lea
adc
loopne
cli
lret
inc
and
xchg
ret
ret
int3
stos
call
fs
call
or
lods
pop
jl
ds
add
leave
mov
in
and
xorb
ljmp
ds
push
lods
inc
xchg
inc
scas
cmp
jge
mov
mov
mov
push
arpl
dec
cmp
fs
push
jp
aad
jmp
xchg
data16
imul
clc
cld
daa
mov
jae
mov
in
call
jp
sub
xchg
out
in
fisttpll
cli
jbe
mov
add
cld
adc
cli
decl
decl
adcb
xor
pop
ret
jmp
loopne
add
ljmp
mov
xchg
int
lea
fisttps
pop
loopne
cmp
das
push
xchg
mov
sub
cmpsl
jmp
decl
je
es
pop
lret
ljmp
test
pop
push
out
clc
cmp
push
push
add
sbb
sbb
mov
cmpsl
xchg
shlb
or
into
lock
std
dec
mov
xchg
arpl
out
push
add
scas
clc
push
or
aad
test
scas
stos
mov
pushl
pop
repz
xchg
loope
cwtl
cltd
mov
or
das
orl
outsl
ljmp
cmc
dec
stos
es
or
adc
je
xchg
fdivl
sbb
jmp
jg
cs
dec
and
pop
clc
ret
cwtl
fcmovu
stos
xchg
insb
mov
mov
pushf
inc
mov
push
push
dec
imulb
xor
ficomps
mov
ret
ss
icebp
lcall
push
add
sub
mov
call
inc
bound
adcb
jmp
ret
push
push
pop
cmpsb
stc
in
popf
icebp
lcall
adc
popl
add
dec
testl
inc
mov
rol
in
lcall
sahf
je
cmp
adc
jle
xchg
js
push
mov
ret
jg
loope
fildll
mov
int
and
xchg
cmp
add
mov
xor
lcall
push
ret
inc
sub
xor
sub
sbb
aad
inc
les
nop
decl
or
jae
pop
fdivrs
daa
mov
stc
mov
out
fstpl
ljmp
cmp
daa
das
mov
std
mov
push
and
stos
testb
inc
cltd
rol
xchg
decl
divl
sar
loop
xor
or
ja
ss
mov
mov
movsb
hlt
decl
push
outsb
stos
lret
into
hlt
iret
push
enter
adc
out
test
inc
jl
lret
inc
jmp
add
sub
inc
mov
jge
cmc
jl
out
and
xchg
hlt
dec
call
jle
dec
sub
out
mov
sahf
ret
lods
div
fidivl
mov
push
inc
andl
fwait
ffree
mov
pop
scas
pop
add
adc
loop
sub
ds
inc
mov
xchg
decl
inc
out
xchg
mov
aas
pop
ja
nop
push
loopne
and
cwtl
sub
es
rolb
daa
dec
dec
loop
pop
outsb
jp
outsb
fmuls
cmpl
push
cmpb
decl
xchg
out
fsub
inc
adc
push
jnp
sbb
sub
and
popa
dec
cmp
lcall
and
lods
cmp
scas
into
lcall
inc
andb
push
push
fcmovb
ds
and
ljmp
jo
popf
ret
jns
jl
fcomps
adc
cwtl
mov
pop
ret
clc
xor
loop
xor
call
and
mov
scas
cli
jg
mov
push
mov
dec
mov
cmp
jno
sbb
pop
jmp
mov
lret
jp
cmpsl
mov
cmp
cmp
jnp
jbe
aad
movsl
cmp
lcall
gs
pop
test
xadd
xor
push
loope
jns
mov
clc
jnp
mov
adc
fwait
andl
pop
and
aam
push
cmp
lds
addr16
clc
call
rcl
add
mov
mov
aad
lret
cmp
mov
incl
loop
mov
fnstenv
mov
outsl
dec
jmp
dec
mov
inc
cmp
xor
xchg
xor
or
or
fwait
dec
xchg
js
cld
mov
jg
jmp
cmp
and
les
or
js
mov
jno
push
pop
cmpsl
sar
sbb
test
data16
jmp
aas
data16
and
jg
clc
loop,pt
movsl
push
jg
orb
out
xcrypt-cbc
cmpsl
xchg
lods
loop
inc
sub
je
insb
xchg
dec
mov
lcall
mov
in
push
scas
jnp
cs
test
jbe
or
lcall
les
or
push
xchg
nop
std
je
pop
dec
sbb
sahf
ret
cli
adc
xchg
aas
add
cmp
sub
call
pop
clc
lcall
ss
or
movsl
data16
mov
sbb
shl
cmpl
jmp
adc
mov
dec
lods
inc
fldt
pop
faddl
add
dec
iret
stos
es
xchg
add
cmpsl
mov
lret
rcll
call
cwtl
shll
sub
fsubrl
xchg
scas
push
icebp
rcrb
loopne
call
aam
cmp
pop
sbb
jmp
lds
jo
mov
outsl
push
mov
mov
adc
stc
popa
push
and
pop
lods
iret
fmulp
inc
add
loopne
dec
sbb
iret
push
and
popa
push
mov
mov
xor
decl
and
rolb
das
lcall
sti
leave
pop
sbb
ljmp
and
call
adc
cli
or
xor
mov
fidivs
or
ja
jle
xlat
fisubl
lahf
pop
push
xor
cmp
rol
adc
push
dec
mov
into
jg
cmc
out
lds
scas
imul
jae
scas
mov
and
jns
leave
sti
adc
out
in
push
cmp
arpl
sub
aam
repz
add
imulb
mov
jmp
mov
xchg
fucomi
out
lahf
push
add
pop
jno
out
aam
jbe
adc
icebp
mov
je
and
xor
sbb
sub
pushl
and
loop
xlat
test
in
mov
sarb
jne
mov
pop
jns
push
inc
push
es
jmp
imul
cmp
cmpsb
or
adc
aas
pop
push
fs
cwtl
adc
dec
scas
cli
decl
xor
jmp
dec
in
out
jge
push
into
in
arpl
popf
fs
cmp
xchg
cs
inc
stos
inc
xchg
sub
inc
and
add
push
je
dec
xchg
or
jne
cmpsb
pop
cmovne
test
mov
sbb
mov
mov
dec
and
inc
add
lcall
or
inc
adc
inc
jge
adc
mov
js
mov
lea
movsl
iret
fbld
decl
test
mov
xchg
test
jo
scas
cli
ljmp
pop
jl
incl
repnz
test
and
jmp
call
cltd
out
into
mov
xchg
cmp
std
das
addr16
in
stos
movsl
jmp
xchg
fcomi
insb
add
pushf
std
ret
test
aas
adc
gs
cwtl
pop
mov
decl
inc
repnz
in
pop
mov
push
imul
push
and
decl
mov
out
xor
mov
mov
add
out
jge
pop
cmp
or
or
loop
push
out
jp
inc
out
lret
pop
popf
cli
add
iret
cmp
data16
mov
mov
cmpsb
mov
es
and
sahf
repnz
inc
sub
aaa
jns
cmc
incl
repz
sahf
jecxz
std
jne
xchg
cld
in
les
sahf
mov
or
or
ss
push
es
xor
push
sub
jge
jl
js
jbe
scas
mov
xchg
sbb
dec
or
jmp
pop
imul
inc
data16
mov
leave
pop
loop
cmp
incl
jno
hlt
add
nop
fnstcw
outsb
mov
push
sub
add
push
lock
push
sti
push
outsb
cmc
rcll
push
lahf
popa
imul
call
fsubrl
testb
fildl
mov
xchg
gs
mov
mov
xchg
mov
pop
ljmp
lock
fsts
jno
jno
sbb
cmpl
out
push
add
lret
cmp
jg
jmp
mov
cs
rcrb
int
or
sub
lock
stc
pop
icebp
jmp
sub
test
mov
call
out
add
cld
pop
jg
mov
imul
pop
add
sahf
sub
std
jmp
andb
fstp
dec
imul
pop
gs
mov
loop
insl
out
add
sub
call
into
mov
sub
inc
jmp
inc
adc
push
or
jg
pop
mov
or
lcall
leave
xor
lods
neg
decb
sahf
out
and
dec
scas
test
bound
inc
fidivl
sub
mov
pushf
mov
lock
jmp
lcall
testl
push
clc
subb
jecxz
add
mov
push
pop
shll
push
xor
in
cmpsl
sub
mov
sbb
mov
decl
mov
ja
ljmp
and
jle
in
rcrb
std
notb
arpl
decl
pop
mov
fs
adc
sub
mov
inc
mov
mov
push
lock
mov
or
mov
jge
movsl
jg,pn
stos
ljmp
sarl
adc
xor
orb
add
xchg
fiaddl
mov
cli
push
xor
add
inc
ret
dec
inc
das
jecxz
mov
jbe
push
loopne
jmp
repz
jg
jno
lds
fldcw
fs
lret
out
negb
fistps
loop
push
fwait
sarb
lahf
add
ja
arpl
xchg
mov
lret
adc
dec
inc
add
push
and
lret
sub
repnz
fs
insl
push
dec
std
lods
in
scas
sub
ljmp
lds
inc
pop
popa
jl
hlt
sub
ret
lods
or
pop
mov
mov
es
decl
sub
xor
sbb
dec
mov
lods
daa
mov
fistpll
nop
jbe
push
call
xchg
movsb
jbe
lods
jb
ja
pop
loopne
cmpsl
addb
xor
sbb
fcomip
jp
xchg
and
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
push
or
in
out
js
pop
notl
add
and
sbb
push
mov
dec
mov
scas
mov
sbb
mov
rorb
loop
les
push
ljmp
bnd
inc
sub
sub
test
ss
mov
dec
add
add
inc
jp
mov
pop
mov
ffreep
pop
call
shlb
lea
push
mov
push
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
dec
push
hlt
das
clc
call
aad
jno
fldenv
lahf
mov
jno
push
roll
divb
ja
mov
sub
ficoms
push
dec
outsl
cmp
xorl
ljmp
clc
add
pop
push
gs
pop
inc
xchg
cmc
ret
mov
pushl
mov
sub
push
jbe
imul
sub
ficoms
add
shl
mov
push
out
ja
out
jo
adc
pushl
cltd
jp
aad
mov
cltd
scas
out
ja
mov
jmp
cmp
adc
sbb
ljmp
sub
cmp
in
lcall
fbld
pusha
adc
sbb
mov
rcll
test
fildl
push
push
mov
jb
xor
in
push
jp
cltd
sbbb
cmp
jg
decl
xor
pop
dec
test
xor
mov
cltd
inc
mov
sbb
push
dec
call
sar
notl
dec
mov
hlt
fimull
cmp
sbb
mov
inc
lcall
incl
pop
inc
jns
sbb
xor
xchg
inc
lea
call
outsb
push
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
pushf
jg
jecxz
push
or
cmp
xchg
mov
sub
xor
cmp
xchg
push
stc
fldcw
pop
popa
mov
cmp
lods
rolb
aas
in
dec
mov
mov
mov
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
test
decl
push
xchg
sbb
push
call
lock
dec
mov
stos
fldcw
mov
push
cmp
cmpsl
repnz
lea
adc
xchg
shr
sbb
or
shlb
push
xchg
imul
imul
repnz
mov
call
fstps
or
dec
and
mov
addl
pop
or
clc
jb
jg
inc
xor
pushf
push
ret
sbbl
mov
test
and
ljmp
jp
mov
jae
xor
or
ud1
rorb
fiaddl
mov
push
std
call
rcll
inc
imul
cs
bnd
decl
add
scas
jg
or
imul
inc
jl
push
pushf
push
inc
mov
jmp
mov
fidivs
es
aad
dec
pop
pop
scas
rolb
fistpl
and
mov
cmpsb
and
adcl
mov
pop
cmp
sub
mov
js
call
shll
sub
jo
stc
rorb
mov
test
cmp
sub
cmp
jp
cmp
and
int3
lcall
pop
or
mov
or
not
lock
add
or
into
xchg
int3
iret
arpl
shrl
cld
inc
cs
push
pop
adc
ljmp
mov
add
lcall
push
iret
add
dec
iret
sub
ds
loopne
cli
xchg
dec
jmp
inc
ds
fstpl
or
aas
daa
lcall
jg
call
push
fsubrp
rorb
push
loope
or
cmp
sub
data16
lcall
imul
pop
dec
repnz
ljmp
pushf
inc
add
ljmp
xorb
movsb
aaa
sub
out
add
and
stos
pushf
rorb
add
sbbb
jbe
jo
dec
in
arpl
dec
mov
ljmp
daa
xchg
cmp
lock
adc
shr
aad
jg
in
mov
jmp
add
xor
out
xchg
mov
fdivrl
add
mov
in
fisubs
adc
pop
xchg
lods
ret
in
add
aaa
sub
stos
loop
inc
movsl
inc
push
cwtl
jmp
dec
in
int3
repnz
lods
sbb
fdivl
ret
icebp
cld
lock
jb
xchg
or
inc
dec
bound
aam
push
mov
pusha
and
outsb
imul
aas
add
cld
mov
loopne
pushl
or
inc
mov
les
sbbl
and
cmpb
iret
in
loop
fbld
faddl
cmp
pusha
test
stc
mov
test
mov
cltd
lods
push
push
mov
sbb
add
iret
jge
rorb
or
je
subl
mov
js
dec
push
movsb
testb
pop
sbb
jo
test
cli
out
adc
or
data16
imul
cmp
loop
dec
ret
dec
mov
push
or
insl
and
sahf
xchg
cmp
outsb
ds
into
in
paddb
cs
and
push
ss
add
decl
movsb
mov
jae
mulb
push
mov
xchg
mov
push
add
repz
mov
inc
fdivrl
and
shll
push
js
mov
sti
cli
popa
mov
pusha
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
cs
lcall
in
dec
jne
jmp
iret
jb
jne
mov
xchg
cli
pop
clc
aam
xor
jge
mov
ds
jle
int3
adc
js
add
mov
scas
fcomip
mov
call
sub
sbb
in
fiadds
pop
adc
sub
jns
and
lock
lock
repnz
mov
std
sbbb
mov
scas
decl
lock
andb
mov
test
mov
pop
xchg
xor
movsb
mov
scas
add
push
test
dec
pop
mov
int3
sbb
push
push
pop
cmp
inc
sbb
nop
fdivr
cmpl
pmuludq
iret
cli
lcall
decl
ret
popa
lds
shll
fld
push
pop
leave
call
jl
call
xor
insl
xor
inc
inc
das
insb
mov
std
mov
cli
xor
mov
mov
cld
jg
push
stos
mov
add
cs
adc
pop
into
jge
je
jbe
dec
inc
shrb
or
cmpsb
adc
dec
clc
cmpsb
sub
mov
mov
jae
jmp
decl
lahf
and
adc
sub
lds
cs
add
xchg
dec
jno
add
sti
jl
incl
xor
fldz
pop
inc
ljmp
iret
out
test
repz
xor
call
imul
mov
mov
cmp
add
pushw
adc
clc
push
jns
sub
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
orb
ljmp
inc
jbe
repz
jbe
xchg
xchg
mov
sbb
push
dec
lock
jmp
cmp
lds
sub
in
pop
lds
enter
ret
sbb
jo
pop
pextrw
dec
int3
jno
and
incl
test
mov
push
add
arpl
daa
mov
mov
lock
lcall
inc
gs
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
and
pushl
repnz
xor
sarl
xchg
outsl
adc
lcall
bound
pop
cwtl
incl
fsubs
and
jp
mov
adc
in
test
dec
and
gs
cld
fcomip
rcr
repnz
or
ja
in
mov
inc
movsb
inc
adc
ljmp
or
in
push
mov
cmpsl
lea
cld
xor
xchg
pop
mov
scas
call
in
fiaddl
sub
sbb
lods
enter
testb
mov
loope
call
mov
movsl
sbb
int3
fldenv
stos
jecxz
mov
fidivs
xor
fdivrp
jno
jno
ljmp
rcll
imul
orb
and
mov
sub
sti
push
fnstcw
out
jmp
or
aaa
fcompl
sbbb
sub
in
in
shlb
add
mov
pop
xor
jmp
cld
jg
push
fiaddl
lea
inc
imul
and
sar
xchg
aam
jg
sub
dec
out
xor
lcall
mov
call
cwtl
mov
shrb
add
in
dec
cltd
das
mov
mov
cmpsl
fcmovb
jbe
movsb
jl
incl
cmc
scas
cmp
jmp
addb
inc
pop
and
mov
decl
adc
mov
mov
or
jp
push
into
icebp
mov
and
mov
decl
pop
aam
mov
js,pt
lods
add
in
or
divb
decl
stos
cltd
push
add
cmpb
pop
mov
mov
xor
punpckldq
aad
mov
push
jmp
nop
nop
add
dec
das
sub
mov
stos
dec
daa
lret
mov
fwait
adc
enter
inc
pop
jmp
xchg
into
pop
cmp
lods
adc
sbb
jg
iret
stos
cmpsb
or
insl
push
add
rclb
and
mov
sbb
dec
fdivrl
mov
and
and
hlt
nop
inc
or
popf
jecxz
sbb
lods
mov
sbb
hlt
adc
pushl
out
rcll
xor
pop
xor
add
adc
stos
cmp
js
das
mov
ljmp
adc
mov
rcll
or
mov
dec
xchg
dec
adcb
fcomip
decl
icebp
add
sti
push
loope
cmp
push
out
cmpsl
jmp
cmc
fwait
cwtl
gs
cmpl
sub
add
dec
dec
or
test
mov
sub
ss
and
mov
inc
mov
add
mov
jmp
sub
xlat
nop
mov
addr16
xor
xor
pop
movl
test
inc
sub
or
inc
lea
movsb
cs
mov
dec
faddl
xchg
sub
xchg
iret
sub
shll
movsl
scas
arpl
inc
xchg
pusha
scas
mov
mov
inc
ror
and
xchg
or
bound
std
inc
stc
adc
jmp
nop
dec
jmp
xor
movd
or
adc
icebp
scas
jg
pushf
mov
mov
popa
inc
stos
push
mov
mov
shll
xchg
das
test
mov
ljmp
pusha
test
mov
call
ljmp
pop
push
cld
push
loop
or
fnstenv
lcall
sub
or
dec
fistl
push
nop
leave
jg
inc
inc
jmp
dec
xchg
mov
dec
mov
pushl
add
cli
into
dec
mov
adcl
cmp
stos
enter
aam
sbb
decl
test
inc
dec
xchg
orl
pop
dec
stos
lea
cmpsl
jge
decb
nop
mov
stos
fwait
test
in
sbb
test
pushl
add
add
lret
push
cmp
stos
push
sahf
sahf
adc
mov
sar
cltd
cmc
and
cwtl
adc
inc
pop
dec
jg
or
xor
sti
and
sbb
mov
jle
into
push
addr16
cmc
mov
lock
enter
sbb
aas
mov
fwait
cmp
jmp
add
fbld
pop
mov
lahf
push
xchg
leave
dec
or
ds
lock
jnp
jg
sahf
mov
das
cli
pop
ljmp
or
mov
mov
xchg
pop
lcall
add
mov
test
popf
sbb
jmp
jbe
lods
insl
dec
mov
lcall
fst
sub
fdivl
nop
bound
inc
lret
push
stc
inc
or
mov
xchg
cwtl
cmp
push
and
mov
xlat
xor
aad
ljmp
ja
mov
push
adc
push
sub
sub
out
jg
pop
loopne
push
shlb
cli
cld
cs
cltd
xchg
movsl
es
clc
sub
call
fistpl
or
into
scas
outsl
vsqrtpd
xchg
adc
lock
stos
daa
mov
outsb
sbb
ljmp
adc
jne
mov
movsl
cwtl
xor
das
dec
idiv
fistpll
ss
movsb
jg
push
inc
pushf
sub
jae
test
fcomip
jmp
mov
call
test
adc
repz
fidivrs
call
movsb
decl
mov
cli
in
insb
pop
xchg
and
and
aaa
test
fmuls
repz
decl
inc
js
stos
jo
push
shr
fisttpl
ret
and
cld
mov
and
clc
incl
in
arpl
hlt
sbb
decl
repnz
cmpsb
lahf
jecxz
sbb
dec
test
jae
insb
jmp
enter
cltd
pop
dec
xchg
outsl
mov
add
fnstsw
imul
test
movb
adc
in
push
lods
sub
mov
call
pop
ds
dec
ret
cmp
pushl
mov
mov
fistpl
or
repz
sti
popa
mov
push
fs
mov
jl
xchg
mov
cmp
jnp
in
test
jl
inc
lret
xchg
sti
out
push
xchg
in
adc
call
mov
cli
jnp
cmpsl
dec
jl
mov
pushf
lds
cmp
shl
nop
testb
xchg
add
pop
mov
xor
cmp
cmp
lea
mov
in
dec
push
jge
or
jl
pushl
nop
cmp
in
mov
arpl
out
nop
cmpsb
pop
mov
cmc
in
cwtl
mov
ljmp
jge
push
push
jl
pop
scas
jle
jl
push
int3
pushf
pop
js
or
aam
or
hlt
out
cmp
sbb
sbb
jbe
sbb
mov
xor
ret
aad
sahf
movsl
cmp
repnz
lcall
jmp
cmp
ss
fmull
mov
adc
lods
mov
into
jmp
ror
loop
inc
scas
adc
push
mov
xchg
mov
jg
mov
jecxz
sti
call
out
sub
subb
pop
aam
or
outsl
mull
jecxz
cmp
movsb
in
enter
and
jmp
mov
xchg
jne
or
xchg
movsb
test
and
dec
jg
loopne
std
arpl
aaa
mov
cld
mov
cmp
lcall
sbb
cmc
outsb
dec
into
lret
daa
dec
lret
leave
jmp
repz
inc
es
fcomip
ljmp
out
lret
adc
push
xor
and
daa
ljmp
scas
push
ljmp
xor
push
dec
pop
fcompl
sbb
popf
jmp
inc
decl
dec
push
mov
orb
lock
adc
jg
ljmp
dec
push
ds
dec
xor
xchg
cld
dec
jmp
push
xor
xchg
xor
xchg
jmp
adc
lret
cmp
int3
inc
xchg
negb
mul
faddp
das
repnz
aaa
test
pop
xor
sub
or
pusha
adc
ljmp
pop
jno
push
lea
mov
mov
jno
push
push
ss
decl
cmp
movsb
xchg
mov
inc
cwtl
orl
clc
adcl
pop
jg
jg
inc
xchg
mov
push
push
mov
ljmp
clc
pushl
push
out
xor
cli
adc
push
jne
movsl
add
cmp
mov
mov
ljmp
push
xchg
pop
and
xor
call
or
fdivrl
pop
pop
movsl
xor
add
test
mov
insb
push
mov
sub
call
fcmovnu
ljmp
fs
test
pmulhuw
mov
ret
sub
stos
ljmp
add
iret
popf
push
movl
jl
fs
dec
or
inc
out
dec
push
fdiv
xchg
jno
adcb
pop
fiaddl
cwtl
jae
out
cli
sub
jp
arpl
hlt
add
and
xchg
and
mov
ljmp
adc
enter
jmp
jmp
pusha
sbb
fdiv
bound
dec
aaa
sbb
mov
or
dec
xorb
in
cmp
xchg
mov
pop
pop
sbb
addr16
imul
mov
jno
mov
pop
fucom
push
jecxz
or
call
and
leave
mov
stc
scas
dec
test
cmp
test
outsb
xor
cmp
dec
test
repz
cmpsb
xor
sub
arpl
lods
cmp
xor
jp
daa
mov
sbb
imul
mov
mov
inc
mov
rclb
xchg
clc
js
call
pushl
lods
and
repnz
bound
adc
loopne
in
xor
push
or
or
gs
loope
outsl
adc
stc
mov
xor
pop
leave
push
sub
mov
and
push
dec
aam
sub
push
sbb
push
jmp
cmc
int
xchg
jecxz
jns
adc
xor
mov
ja
inc
mov
cmpsb
sbb
mov
dec
xor
or
mov
cmc
and
and
and
scas
popa
mov
push
movsl
je
fidivrl
mov
mov
mov
ret
fldcw
adc
add
inc
dec
movsl
ret
xor
jmp
or
lret
pop
mov
incl
xor
fs
dec
xchg
roll
push
add
pop
scas
adc
mov
sub
incl
dec
std
pextrw
adc
fidivrs
xchg
mov
decl
mov
xchg
imull
pusha
divl
mov
stos
push
aas
xor
push
mov
jg
ljmp
dec
loope
movsb
add
pop
ret
pop
pushf
xor
dec
movsb
add
insb
inc
mov
movsl
sbb
mov
out
in
push
std
and
mov
dec
fcmovne
cli
jl
inc
mov
jp,pn
mov
and
push
mov
cmp
lock
dec
mov
jmp
jmp
push
or
cld
and
lret
addr16
jp
outsl
adc
pop
fdiv
roll
ja
std
ds
sbb
ja
popf
push
jnp
mov
xor
in
mov
sti
ljmp
pop
js
lock
jmp
js
in
sbb
loopne
insb
xor
cmp
mov
or
je
dec
jle
xchg
xchg
fwait
test
push
call
outsl
iret
inc
out
cmp
ffreep
lock
movsb
jle
jne
mov
loop
es
jno
cs
fstps
pop
jb
push
dec
and
sbb
sar
call
inc
dec
push
jg
pusha
pushf
inc
lock
stos
test
sbb
jmp
jno
popf
jge
shll
sahf
roll
add
outsb
jnp
popa
lret
adc
decl
loop
xchg
shlb
push
std
lret
xchg
movsb
psubw
clc
shlb
decl
xchg
or
aas
dec
jae
push
mov
fs
pop
jns
xchg
test
gs
popa
inc
out
jmp
cmpl
lahf
and
push
int3
sub
xchg
inc
xchg
incl
ds
xchg
fmul
pushf
mov
sub
es
fstl
sbb
ficoml
in
dec
cwtl
cmp
push
or
jo
lods
js
mov
cld
lcall
push
adc
lods
push
rorb
in
sbb
dec
jno
dec
call
rolb
adcl
adc
xchg
pusha
xchg
mov
push
add
xchg
daa
mov
xor
mov
mov
cmpsb
outsb
arpl
cmpsl
scas
xor
loopne
dec
jle
pop
adc
cwtl
mov
dec
push
out
sbb
mov
mov
inc
fiaddl
ja
fmull
insb
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
push
inc
jmp
incl
sahf
inc
daa
mov
jge
data16
pop
cmp
std
pusha
pop
adc
cmp
cs
into
jmp
xchg
int
mov
vpinsrw
push
jmp
add
loop
mov
jg
cmp
add
pop
mov
mov
popa
fiaddl
cmc
loopne,pn
mov
mov
loope
add
hlt
pushl
lods
and
lret
jnp
add
sbb
enter
leave
incl
or
xor
lea
and
sub
mov
lahf
incl
adc
sub
cmp
mov
push
mov
rorb
adc
jmp
movsb
mov
pop
xchg
xor
scas
addr16
int
lahf
aad
ret
fidivl
xchg
dec
cmp
inc
jl
cmp
gs
mov
pop
stos
add
xchg
roll
push
ja
lcall
nop
je
imul
lods
shll
in
les
std
stc
lcall
push
out
pushf
and
sub
iret
movl
call
inc
pusha
mov
fdiv
fwait
or
add
es
pop
test
push
fs
push
jg
add
adc
cmp
int
adc
dec
dec
jg
push
addr16
pushl
mov
stos
push
xchg
cmp
jb
mov
popf
aam
loope
dec
mov
push
sub
mov
add
dec
addb
push
inc
in
pop
cmpsb
push
sete
xor
xchg
ljmp
in
jnp
mov
dec
dec
dec
pop
jns
enter
pop
loopne
adc
inc
ljmp
and
movb
rcll
cld
fisubs
loopne
pop
popa
ftst
adcb
and
jmp
js
rcr
jg
dec
les
fstps
lret
stos
mov
das
stos
getsec
jb
sub
movsl
mov
aad
pop
idiv
mov
ljmp
dec
jnp
test
cwtl
push
pop
jnp
shlb
fildl
adc
lcall
lods
sbb
jmp
jle
inc
sbb
dec
mov
dec
mov
or
and
stc
gs
cmp
mov
jb
call
inc
mov
push
sti
cs
repnz
repz
pop
pop
ljmp
ljmp
and
mov
mov
lahf
sub
xchg
or
cli
adc
xor
mov
xchg
outsb
scas
hlt
faddl
xor
cwtl
cmp
cmc
mov
not
push
or
rorl
in
mov
gs
pushl
inc
pop
pop
adc
shr
repz
sti
cmpsl
inc
inc
mov
ret
cs
sbb
jmp
or
ljmp
repz
xor
lods
cwtl
push
in
jns
jbe
sbb
push
imul
mull
push
cmp
lcall
push
lcall
mov
ljmp
lcall
test
mov
push
scas
divb
pushl
xchg
sub
pop
in
loop
adc
test
ret
hlt
adc
call
addr16
stos
sbbl
insl
das
add
mov
and
pushf
iret
addr16
fcompl
inc
push
and
sub
dec
fs
sbb
or
cmc
jmp
test
push
sub
pop
xor
jbe
repnz
mov
push
jge
sub
mov
push
push
fwait
leave
or
push
ss
jl
sbb
lret
jmp
mov
mov
pop
imul
fcomip
jmp
inc
xor
inc
shrb
xor
inc
jae
mov
ja
call
ss
sbb
and
push
push
sbb
into
pop
insb
mov
incl
adc
inc
or
out
sub
push
jecxz
sub
cmc
xchg
or
lcall
fs
pop
outsb
mov
pop
dec
add
mov
mov
ds
jg
add
push
add
cmc
mov
loopne
jecxz
sub
sbb
pop
inc
out
push
cmp
jg
add
popf
add
xchg
mov
test
mov
bswap
lods
push
mov
or
call
adc
adc
pop
dec
mov
push
adc
jo
aas
jg
cmp
inc
nop
pushl
cld
ljmp
push
sarb
sub
out
add
mov
and
sub
ja
push
insl
push
push
movsb
in
adc
outsl
test
outsl
xor
jmp
aas
pusha
cmp
into
mov
cwtl
popf
fildll
xor
jle
dec
or
clc
push
sahf
jg
inc
cld
andl
xchg
cmp
adc
cld
lret
inc
mov
lock
divb
ret
mov
rclb
pushf
imul
rol
in
aad
mov
enter
cmp
in
movsl
jp
jg
ja
cmp
das
lret
popf
pop
or
add
xchg
decl
push
xchg
lods
loopne
xor
call
mov
test
stos
cmpsl
xlat
mov
ljmp
inc
pop
push
call
mov
dec
sbb
sahf
sarl
xor
ljmp
ja
daa
pop
push
into
in
cmp
xchg
sbb
or
std
xor
sbb
lret
mov
lods
pop
xor
mov
sarl
cmp
fldcw
pop
add
pop
xor
xor
jmp
dec
inc
push
xchg
insb
scas
icebp
or
mov
add
adc
ljmp
pusha
dec
dec
dec
stos
add
mov
dec
cli
jg
and
imul
movsb
clc
insl
xor
stos
jne
mov
xchg
push
jg
scas
les
and
insl
not
ds
jb
push
mov
mov
cmp
jbe
pushl
lahf
jg
adc
xor
testb
sbb
cmp
xor
mov
test
loopne
decl
pushf
and
push
mov
lret
sahf
fadds
outsb
push
inc
in
sarl
incl
pop
and
jo
and
int
dec
push
mov
decl
mov
pop
cmp
lds
cmp
sub
push
into
cmc
push
jg
add
out
cmp
jnp
dec
jle
sub
arpl
add
paddsb
arpl
decl
sahf
mov
iret
pop
inc
push
sbb
gs
dec
sub
xchg
in
xor
pop
inc
pinsrw
lcall
out
sbb
dec
push
mov
xor
mov
je
push
xor
inc
ljmp
mov
inc
pop
gs
out
jns
mov
loopne
sbb
cmp
jmp
adc
and
pop
push
adc
je
xchg
jg
push
fbld
push
and
shl
dec
push
add
dec
cmp
ljmp
mov
jg
rcrl
mov
leave
or
cs
in
icebp
filds
cmpb
and
mov
call
jecxz
cld
ds
divb
out
mov
scas
loopne
movsl
or
jmp
repz
and
mov
cld
loope
in
in
lcall
jb
mov
clc
adc
dec
mov
movb
ds
adc
popa
mov
je
nop
push
push
push
loopne
ljmp
adc
and
push
and
lret
lcall
sbb
sub
ljmp
call
pop
aad
dec
icebp
or
out
push
push
vpshuflw
xor
fsubs
loop
sbb
test
pop
gs
into
enter
xchg
sbb
decl
dec
cmpsb
dec
das
xchg
cmp
bound
cmpsl
mov
aas
call
pop
mov
jmp
mov
int3
or
mov
add
in
lea
pop
sbb
jmp
fisttpl
test
cmp
in
and
mov
lahf
xor
ljmp
mov
mov
test
rolb
ljmp
or
push
test
imul
and
cltd
cmp
scas
mov
cmp
add
sbbb
pop
mov
jmp
pop
and
divb
nop
dec
mov
jae
fwait
mov
pop
cmc
ja
pop
or
cld
sbb
and
testl
jg
das
leave
cltd
cld
dec
push
roll
fildll
mov
jge
push
xlat
out
mov
xor
mov
cmp
or
sub
jnp
cmp
mov
push
mov
cmp
inc
mov
call
adc
mov
testl
inc
adc
jbe
mov
inc
movsl
iret
mov
clc
sbb
jmp
mov
rorl
sarb
push
mov
dec
das
lds
call
mov
js
shlb
ds
and
scas
lods
rcrb
and
test
jg
jmp
jo
cltd
adc
mov
movsb
sbb
repz
jmp
jbe
popf
data16
stos
es
call
in
jbe
jns
pop
add
dec
das
stos
fwait
add
loop
cmp
push
in
mov
ljmp
gs
jle
loop
xchg
pop
mov
add
xchg
push
inc
add
fisubrl
push
ljmp
insl
inc
pop
clc
push
cmpsb
scas
sub
mov
add
push
sbb
jecxz
leave
lock
decl
and
push
adc
test
aaa
cmp
cmp
add
pop
push
fildll
mov
fcomp
push
inc
push
movsb
jmp
mov
xchg
lcall
cmpb
shrb
mov
adc
lods
scas
popl
inc
out
lret
in
push
sti
iret
xor
xorl
lods
inc
nop
testl
fsubp
jl
jns
or
addr16
add
call
xor
jo
xchg
xchg
pop
insb
cmp
fcomps
pusha
scas
mov
clc
lcall
mov
popf
cmp
mov
and
xchg
pop
stc
ja
out
cmp
jmp
shll
out
es
flds
mov
lret
int
inc
adc
jmp
lahf
es
dec
adc
mov
into
test
xchg
pop
cs
call
mov
lock
lea
jnp
pop
push
out
adc
cmc
add
call
or
cmp
pop
gs
daa
push
enter
jg
inc
jle
push
mov
in
adc
das
rorb
cmc
fwait
loopne
mov
lea
loop
sbb
decl
cmpsl
outsb
imul
cmp
rcrl
dec
lods
xchg
fiaddl
ljmp
scas
pushl
jno
cld
pop
jl
xchg
ret
inc
dec
push
cmp
sbb
out
enter
icebp
sar
jmp
sub
cmpsb
js
pop
inc
std
cmp
aam
and
pop
dec
insb
sub
cmp
fcomip
jg
shll
dec
test
test
adc
mov
xchg
test
out
clc
ljmp
mov
mov
enter
outsb
push
jecxz
es
fsub
pushl
loop
lret
inc
lock
int
scas
or
xchg
std
test
cmp
call
push
jge
ds
jbe
jae
xchg
out
nop
bound
lret
jecxz
inc
test
std
fadds
sub
xchg
jno
int
mov
mov
add
sub
outsl
add
bnd
add
push
scas
mov
dec
icebp
ja,pn
call
jnp
ds
push
imulb
jae
pop
xchg
inc
ljmp
adc
jns
sahf
incl
mov
xlat
rcr
sbb
notl
arpl
ficompl
ror
lock
ljmp
repz
jle
xor
shl
pop
mov
repz
fucomip
insl
pop
fcos
ljmp
pop
sarl
dec
mov
bound
fists
sbb
mov
mov
ljmp
dec
mov
lahf
xor
dec
adc
cmp
mov
pop
hlt
cmpsb
dec
test
sbb
dec
cs
rcrl
bound
jecxz
jmp
xchg
aaa
imul
bnd
iret
xorb
sub
in
mov
cmp
pushl
dec
adc
stc
push
mulb
jl
push
pop
lods
adc
daa
add
mov
fcomip
lcall
fwait
adc
ret
sub
push
add
or
mov
mov
adc
outsb
jle
lds
or
jle
sub
outsb
xlat
adc
es
sub
inc
testb
decl
cmpsb
rcrl
inc
rorb
jns
aam
add
arpl
push
sbb
mov
and
inc
mov
mov
shrb
dec
std
stc
mov
fstps
add
pop
ja
or
ljmp
cli
fistl
addl
inc
and
popa
mov
xchg
push
or
mov
fldl
push
mov
aad
cmp
loop
inc
xchg
sbb
and
movsb
lcall
adcl
les
dec
push
xor
xchg
jo
mov
and
stc
clc
cltd
inc
cmp
decl
lcall
pop
push
xchg
push
loope,pt
mov
jle
js
mov
xchg
pushf
incl
jecxz
pop
movsl
jecxz
rorb
mov
addr16
lahf
mov
js
lods
pop
jl
scas
mov
ljmp
xchg
or
repnz
das
or
enter
test
stos
leave
insb
pushl
cld
jmp
push
push
lock
jp
adc
xor
sbb
mov
outsb
cmp
incl
add
stos
in
int3
inc
xlat
aad
sub
jnp
aaa
iret
jmp
and
bound
and
jmp
sbb
adc
out
inc
push
ljmp
gs
fucom
inc
fistl
fldl
imul
popf
add
adc
push
dec
pop
push
sub
orl
dec
stos
arpl
mov
stos
repnz
xor
cmp
cmp
out
cmc
out
dec
mov
lcall
loopne
fbld
sbb
testl
inc
cmp
mov
dec
fidivl
adcl
cmpb
pop
jns
xor
pop
mov
out
mov
dec
adc
xor
sub
mov
jmp
popf
insb
loopne
repnz
test
popf
pushf
cs
add
jno
in
xor
gs
mov
mov
lea
lcall
jbe
push
cs
das
dec
mov
xchg
pop
or
xchg
lds
call
cmp
in
loopne
pushf
mov
sbb
lea
xchg
jns
or
out
jg
shlb
incl
jno
inc
push
int3
adc
mov
mov
shr
lds
push
movsl
inc
fdivrl
jno
xchg
dec
push
mov
jle
add
lret
ljmp
mov
test
rcll
mov
adc
clc
xorb
call
sub
es
mov
dec
add
jns
fcmovnb
mov
aaa
mov
jg
mov
cmp
mov
xchg
cmc
dec
inc
mov
add
cli
in
out
adc
scas
loop
mov
cs
pop
shufps
int
push
jne
sbb
lcall
arpl
fidivl
popa
inc
rolb
les
or
mov
push
pushf
daa
pop
data16
shll
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
or
imul
iret
cld
enter
insl
fimull
add
pushf
movsl
sbbl
cmp
fnsave
push
pop
push
push
sub
mov
push
jo
cwtl
add
push
ds
mov
sub
or
push
jnp
add
in
jg
mov
ljmp
pushf
mov
call
push
cld
xlat
out
adc
xor
xor
test
pop
add
mov
pop
jle
adc
adc
stos
dec
xchg
nop
adc
mov
roll
movsl
mov
das
pushl
std
pushl
cmc
aad
fmul
lea
incb
daa
lods
add
adc
pushl
xlat
push
adc
push
sbb
push
in
adc
mov
pop
pop
mov
dec
cmc
mov
push
pop
std
mov
daa
insb
pop
es
into
call
adc
ljmp
xchg
in
iret
dec
xchg
clc
lcall
jae
ja
mov
jge
push
pop
addr16
movsb
dec
mov
push
ljmp
inc
mov
dec
adc
and
fistps
ds
adc
sarb
mov
mov
cmp
xchg
test
fmull
jno
jnp
pop
fsubl
jo
pop
jmp
jo
xchg
inc
xor
pop
subl
cmpsb
fsub
outsl
cmc
lret
scas
xchg
push
xchg
mov
or
mov
mov
xor
xor
dec
xor
lret
dec
sbb
cmp
pop
mov
ljmp
xchg
push
ss
fistpll
adcl
rorb
mov
xchg
xchg
mov
mov
popa
lea
mov
cmp
nop
mov
ds
pop
mov
jp
stos
in
outsl
mov
inc
xchg
mov
fcmovnb
or
insb
fnstsw
je
adc
jmp
cld
inc
dec
adcb
add
js
mov
lretw
pop
jmp
push
cli
mov
add
and
gs
into
mov
fldcw
lret
jmp
cmp
pop
sbb
or
ja
dec
clc
scas
or
or
roll
inc
pop
inc
inc
pop
cmp
add
xchg
jae
rorb
mov
sub
cld
and
stc
adc
sbb
inc
adc
cltd
rcrb
adc
xchg
pop
mov
ljmp
and
mov
lds
pushl
xchg
movsl
mov
dec
sub
push
mov
xchg
lret
fistpll
ds
or
cld
cld
rcrl
fisttpll
lock
mov
xor
xchg
sbb
wrmsr
mov
cwtl
cltd
imul
or
push
xor
fs
cmpsl
adc
pushf
aas
pop
into
loopne
sbb
dec
sbb
push
push
hlt
jo
mov
incl
aaa
roll
push
pusha
addr16
lret
test
ja
repnz
call
xor
out
shlb
push
int3
imul
add
sub
jo
jge
call
ja
std
cmpsl
or
push
cmp
repnz
div
xor
sub
mov
mov
cs
pop
xor
add
fs
ljmp
incl
rcrb
push
sbb
movsb
cvttps2pi
mov
mov
sbb
fstpl
stos
dec
pop
cltd
fisttpl
jo
mov
pop
sbb
sahf
call
push
fidivs
sahf
loope
ljmp
jl
push
stos
stos
lcall
add
outsb
dec
xlat
gs
mov
jmp
outsl
scas
pop
sar
daa
inc
test
aad
ss
pop
icebp
lcall
pusha
push
mov
movsl
faddl
and
inc
dec
ss
rorl
cs
cmp
test
jne
outsb
ret
icebp
movsl
xorl
cs
mov
call
mov
in
imull
dec
notl
pop
nop
loope
nop
sbb
xor
int
jg
cli
jbe
into
mov
adc
in
push
clc
repnz
rcl
pop
add
pop
cs
jg
mov
xor
mov
test
lea
imul
jmp
mov
mov
push
inc
inc
jl
ja
xor
sbb
mov
clc
push
sub
loope
mov
jl
fldcw
cld
ljmp
dec
push
int
mov
js
xchg
rcrl
ds
ds
jle
data16
mov
xor
fld1
js
jnp
mov
jnp
imul
fimull
leave
clc
das
mov
bound
outsl
mov
jbe
shrl
jle
test
pop
hlt
ljmp
xor
push
int3
das
and
pushf
test
fcmovb
loopne
mov
movsb
jle
pop
idiv
pushl
xchg
mov
mov
cld
int3
insb
fstps
cmp
dec
add
call
xchg
imul
cmp
imul
sub
or
mov
push
gs
lods
insl
ja
add
xor
int
add
xor
loopne
decl
lock
jmp
inc
test
adc
mov
std
out
jb
dec
in
in
incl
mov
push
sub
add
push
in
pushf
sub
cmc
mov
mov
mov
decl
stos
jno
nop
cwtl
mov
pop
adc
nop
mov
lds
push
mov
adc
cmp
mov
ret
mov
mov
je
mov
inc
jp
sub
jg
jmp
dec
es
inc
sbb
add
push
cmp
pop
add
sub
adc
call
loopne
inc
mov
stos
enter
sub
sub
movsl
and
aam
jge
in
mov
pushf
dec
pop
dec
arpl
fisubrs
xchg
test
push
dec
adc
insb
cmp
or
mov
inc
out
push
aaa
xor
add
mov
jg
out
nop
mov
mov
inc
inc
pop
inc
jns
fidivrl
rcrl
pop
mov
jg
push
xor
jbe
and
bound
pop
filds
adc
sbb
rorb
mov
bound
adc
pop
scas
mov
call
jmp
cmp
stos
adc
or
push
inc
mov
pop
loop
movsb
fdivr
call
cli
jge
sbb
into
mov
push
xor
mov
add
fimull
arpl
jge
cli
ljmp
push
lret
mov
cmp
mov
subl
addr16
push
ret
sti
scas
pusha
push
or
xor
fwait
mov
inc
aas
jmp
sub
mov
or
dec
mov
dec
or
pushl
shlb
cs
stc
in
dec
xor
inc
cmp
sbb
sub
mov
cmp
jl
sub
in
mov
shl
jp
xor
sti
jne
ljmp
push
xor
pop
push
sub
aam
add
addr16
mov
pop
leave
pop
lods
loopne
ljmp
push
cltd
dec
outsl
jecxz
mov
inc
cmp
mov
push
jmp
add
mov
dec
mov
outsb
test
fnstcw
push
add
cwtl
adc
lea
fs
cmpsl
aam
inc
sbb
ljmp
cmp
xchg
inc
jp
adc
dec
mov
add
mov
movsb
jg
lcall
in
nop
aaa
xchg
cli
stos
scas
sarb
mov
pop
stos
loope
bound
out
fdivrp
mov
sub
decl
clc
push
and
js
xchg
inc
inc
xchg
mov
das
cli
in
test
cmp
addr16
push
fadds
inc
xchg
sbb
lcall
mov
mov
icebp
pop
xor
movsl
clc
out
push
xchg
mov
imul
scas
clc
mov
outsl
jmp
xchg
sub
clc
xor
inc
fs
decl
sbbb
pop
les
es
scas
sbb
std
out
pushl
and
mov
lret
pop
inc
arpl
jge
xor
cmp
jmp
aas
inc
incl
fdivl
incl
sub
in
imul
xor
movsl
adc
sbb
repz
hlt
pop
hlt
lcall
cs
rorb
fadds
outsl
cli
xchg
jp
fistpll
cmp
fists
or
or
roll
cli
decl
lock
leave
mov
stc
fdivrl
adc
in
or
mov
mov
inc
sub
fcomip
ret
pop
jo
sbb
pop
popa
ljmp
sti
inc
push
jae
fwait
xchg
cltd
mov
fcomps
inc
loope
call
push
mov
jmp
repnz
jge
mov
enter
ret
pop
or
push
loope
inc
lahf
sub
into
mov
inc
js
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
pop
fucomi
addr16
cmp
shll
enter
inc
jb
dec
mov
sub
popa
mov
call
and
loop
inc
cli
adc
sub
outsl
cmpl
mov
add
cmp
mov
ret
sbbl
sub
sbb
dec
dec
dec
scas
testl
bound
jg
pop
xchg
jge
aam
out
add
cld
decl
xchg
or
sbb
inc
adc
popa
fwait
data16
rol
ljmp
sub
and
sbb
idivb
cmpsb
loopne
cld
movsl
pop
adc
pushf
jge
mov
mov
or
rclb
into
and
sahf
push
rorb
dec
je
jmp
dec
divb
and
leave
mov
mov
cmc
daa
lcall
mov
mov
lods
stos
ljmp
cld
adcl
popa
lods
dec
aaa
icebp
gs
test
les
incl
loop
clc
fnstsw
test
push
xchg
ret
scas
nop
xor
mov
push
sbb
fcomip
pushl
mov
fildl
lds
or
shrl
xchg
stc
mov
decl
roll
test
pop
push
test
pop
in
fsubrl
roll
adc
add
pop
xchg
mov
xor
cld
in
fistps
sbb
ja
adc
sub
fisttps
sub
cmp
and
jg
dec
hlt
mov
enter
in
lods
repnz
sub
outsl
ret
mov
jnp
sub
gs
sub
mov
es
adc
dec
ljmp
cli
jle
mov
in
aaa
popf
mov
nop
and
xchg
daa
in
mov
imul
decl
cwtl
sub
pop
fwait
mov
scas
jnp
popa
xor
or
jo
lcall
mov
std
inc
lahf
push
scas
cmp
xor
mov
jb
cmpb
mov
out
jb
mov
mov
mov
dec
cmc
xor
sbb
adc
ja
decl
jne
test
bound
mov
lods
adc
in
pusha
xor
cli
out
sub
fstpl
cltd
and
lcall
adc
xchg
lret
sarb
mov
pop
or
fldl
mov
call
insl
jbe
mov
scas
and
inc
dec
jb
lock
pop
je
and
sbb
stos
call
insl
inc
sti
cmc
sbb
sub
aas
mov
stc
pop
stc
pop
out
pop
mov
decl
sbb
mov
xchg
push
lods
xor
jo
jbe
les
mov
fcomip
pop
stos
push
ljmp
int
cmpsb
cmp
push
lods
sti
in
jo
add
in
dec
cmp
shll
fsubrl
loop
inc
pop
jae
aad
les
lods
sub
mov
xor
or
jmp
fistps
orl
mov
adc
push
decl
rcll
sbb
sbb
or
mov
sbb
xor
ljmp
jno
ljmp
nop
negl
and
xor
pop
cltd
call
push
jp
gs
xor
jmp
pushl
lds
sub
nop
push
roll
rorb
nop
notb
and
pop
jmp
pushl
mov
out
sub
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
add
adc
push
stc
in
cltd
cmovl
loopne
arpl
test
cmp
fbld
and
das
xchg
or
in
and
pop
popf
rcr
dec
jb
inc
inc
mov
jmp
mov
cwtl
jnp
fwait
adc
inc
popa
lret
sti
sub
in
pop
cmp
xor
outsb
and
add
cwtl
add
jg
xor
ja
mov
sbb
dec
and
in
lret
jno
cmp
pop
jae
mov
aad
ds
adc
cld
insb
in
ljmp
repnz
mov
jle
cmp
or
xor
pushf
lds
push
cmp
pushl
dec
fs
fsubs
ds
loopne
pop
insl
xchg
pop
sub
add
xchg
mov
mov
jmp
cmc
pop
and
or
pop
fdivrs
mov
and
sahf
nop
das
pop
pop
scas
xchg
mov
lcall
test
in
lret
push
inc
sbb
sub
rolb
aad
cmp
cmp
fs
push
aam
xchg
adc
call
or
repnz
clc
into
mov
jno
cwtl
dec
inc
enter
js
mov
pushl
scas
mov
push
out
cmp
loop
push
push
add
sbb
cmp
jmp
bound
sahf
test
data16
mov
daa
cmp
aas
lock
fdiv
fdivr
incl
or
or
repz
inc
or
and
divb
ja
mov
call
into
lock
or
pop
fdivl
decl
iret
adc
cmpsl
lcall
push
push
push
sub
adc
lcall
jno
into
push
scas
das
lret
das
mov
mov
loopne
jle
enter
repz
ljmp
adc
inc
mov
pop
cli
mov
out
hlt
mov
jge
arpl
dec
ljmp
sub
sub
out
sub
daa
pop
pop
jle
loop
jb
push
add
mov
cmpsb
ja
cli
or
push
pop
cwtl
or
push
or
ss
inc
xchg
clc
push
icebp
in
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
or
out
ljmp
mov
insb
dec
fisubs
mov
sbb
call
mov
lds
jb
cmpsl
stos
lret
adc
je
push
movsl
call
addr16
jmp
push
inc
inc
cli
xor
add
rolb
fadd
scas
mov
push
cmp
jmp
repnz
stos
aad
and
push
bound
mov
sub
mov
pushl
lret
mov
shr
adc
outsl
pop
add
shll
jmp
imul
cmp
outsl
in
inc
test
movsb
jnp
incl
fidivrs
mov
lock
dec
js
je
adc
adc
call
mov
mov
dec
xchg
loope
in
in
push
sbb
out
dec
jbe
nop
jg
ljmp
ret
push
movb
inc
cwtl
xor
pop
jge
mov
roll
into
cmp
inc
xchg
sub
mov
das
adc
jno
cmpsl
out
mov
in
scas
jmp
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
add
in
or
dec
and
out
xchg
aad
mov
sbb
fiaddl
out
jmp
sbb
or
mov
fidivs
push
dec
aad
insb
out
xor
xor
and
xchg
mov
ljmp
cli
mov
les
and
jge
je
dec
dec
add
jns
dec
call
jmp
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
jb
xchg
outsb
mov
lcall
inc
rcr
lea
int
test
sub
mov
pushl
and
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
pop
mov
incl
insb
mov
adc
mov
xor
lahf
mov
cwtl
movsb
dec
xchg
and
sahf
dec
ficomps
call
pushf
and
and
jae
bound
adc
xor
and
inc
push
inc
std
hlt
lds
jmp
or
imull
hlt
pop
sbb
aas
test
push
cmp
jge
into
mov
pop
shll
mov
sti
mov
mov
push
out
jae
add
popf
aas
jmp
jle
test
es
fldcw
bound
and
adc
xor
sbb
imul
testb
pop
fwait
scas
je
adc
popa
add
pop
mov
loopne
pop
les
cmc
sub
aad
dec
shll
fwait
dec
jne
xchg
push
push
jmp
cli
cs
mov
ljmp
push
pop
mov
enter
adc
jno
nop
decb
pushl
cmp
scas
push
dec
mov
iret
or
lret
out
mov
ljmp
push
push
testl
mov
int3
xchg
cmp
sahf
inc
into
mov
in
mov
incl
sti
shlb
or
mov
aad
push
xlat
mov
jmp
iret
std
and
jne
rcl
and
fsubr
popa
fs
jb
lret
pop
pop
sub
popa
insl
and
decl
stc
into
in
jae
xchg
xchg
lock
test
jno
or
popf
push
imul
push
sub
ja
cli
jmp
jb
mov
mov
pop
cmc
mov
sub
pushl
mov
push
jmp
xor
jb
mov
das
ret
rol
push
aad
xor
decb
aam
ljmp
sbb
insl
sbb
nop
in
stc
lods
decl
and
pushf
mov
xchg
inc
lcall
frstor
and
mov
push
adc
faddl
add
inc
shrb
jg
add
outsb
adc
into
mull
decl
or
ds
adc
xor
mov
cltd
inc
adc
push
mov
xchg
adc
sub
out
cs
js
data16
dec
dec
pop
stos
or
inc
dec
add
call
test
sub
in
xchg
aam
xchg
adc
sbb
ud1
xchg
ljmp
lds
sub
add
xor
pop
mov
xchg
xor
ljmp
insl
pushl
mov
lahf
push
fs
popf
test
hlt
sub
insl
mov
dec
xor
jmp
mov
das
push
sub
daa
aam
and
inc
sub
mov
dec
pushf
ffreep
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
popf
mov
std
js
sub
hlt
shrb
pop
arpl
test
les
sbb
and
aam
int
pop
sar
call
adc
jns
popa
xchg
adc
push
outsb
rcll
nop
push
loopne
xorl
loope
call
mov
cltd
out
xchg
dec
or
or
stc
pop
rolb
popa
addb
mov
sbb
xchg
call
mov
jb
xlat
mov
dec
stc
jmp
les
leave
pushf
adc
sbb
in
sub
sub
push
lret
mov
push
stc
sbb
movsl
sbb
lods
rclb
clc
push
stos
mov
push
in
xchg
xor
call
test
shll
xchg
gs
add
mov
inc
scas
cli
mov
adc
jns
jae
popa
das
testb
xor
lock
push
int
xor
add
lods
lods
ret
sahf
fistpl
ret
es
xor
jb
sbb
lcall
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
inc
sbb
repz
cli
mov
pop
push
sbb
xchg
dec
cmp
iret
ja
ljmp
leave
jle
xor
loope
in
pop
cmp
mov
xor
xchg
mov
jmp
imul
mov
scas
push
lret
bound
fistps
insl
dec
cld
jg
out
shl
sbb
cmp
incl
sub
orb
ss
mov
popf
mov
hlt
pop
dec
mov
decl
or
cli
loop
hlt
mov
orl
aam
sbb
and
out
outsb
aaa
fbld
mov
test
ja
jp
pop
mov
inc
adc
push
lds
mov
decl
mov
sub
test
or
pop
ret
fildl
inc
xchg
jno
jns
sar
pop
cld
jmp
adc
call
mov
ret
sub
mov
nop
negb
dec
loop
add
aaa
std
inc
sahf
push
pop
adc
ficompl
aam
xchg
es
or
jo
ljmp
aas
fs
fcmovb
and
xor
xchg
loope
and
outsb
lret
xchg
orb
jns
jae
pushf
xor
push
cmp
adc
mov
out
jno
inc
dec
loop
push
or
lds
test
cmpsb
mov
mov
adc
xor
or
sub
incl
mov
sahf
and
sbb
roll
lcall
pop
xchg
sbb
cli
test
jmp
mov
adc
lcall
xchg
lods
les
or
daa
mov
decl
fucomp
fs
je
push
push
mov
push
ret
mov
mov
jns
call
movsb
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
inc
fsubp
inc
inc
loope
mov
xor
repz
mov
notl
pushf
pusha
nop
mov
decl
push
imul
cs
xchg
ss
mov
out
mov
das
fcoms
inc
sub
call
loop
jne
sahf
add
cli
aad
imull
add
aas
test
ret
cmp
pushl
cld
das
je
sub
lcall
shll
popa
mov
mov
call
adcb
pop
fdivp
lahf
sti
xchg
call
pop
out
out
cmpb
lock
mov
dec
iret
cmc
inc
into
mov
sub
pop
dec
imul
add
rorb
loopne
jmp
sbb
cmp
mov
mov
adc
xchg
out
fdivl
stos
mov
gs
adc
sbb
mov
mov
or
int
mov
mul
add
call
loopne
push
and
xor
cmpsb
mov
inc
cmpsb
movsl
jecxz
stos
and
sbb
ljmp
fbstp
dec
scas
jns
mov
icebp
push
scas
test
into
push
sahf
inc
test
pushf
cmpsb
repnz
incl
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
scas
sub
inc
mov
stos
xlat
incl
push
lds
dec
ds
loope
add
mov
bound
dec
xchg
mov
aaa
jno
push
adc
lcall
arpl
push
mov
and
loope
bnd
addr16
sub
adc
lret
mov
fsubr
jbe
jecxz
mov
mov
xchg
mov
call
push
pop
push
cmpsb
adc
imul
add
negl
decl
ret
pop
and
fs
decl
jp
popf
mov
xor
mov
dec
cmp
sbb
lods
mov
scas
clc
ds
lcall
iret
jmp
test
imul
mov
stos
test
insl
sbbb
push
arpl
ret
sbb
sbb
lock
pop
outsb
roll
cld
call
sbb
mov
xor
stos
int3
les
fdivr
fbstp
jb
xor
dec
mov
mov
sub
cmp
inc
in
xchg
sbb
dec
in
les
inc
add
sbb
xchg
lret
js
movzwl
xlat
clc
push
int3
maskmovq
testl
aad
sub
xor
pop
loope
incl
jmp
movsb
or
fmull
cmp
lock
decl
cmp
jbe
lods
xor
das
ja
jmp
mov
loope
inc
lahf
movsb
sub
call
loopw
loop
push
xchg
pop
popf
jnp
into
ja
shll
cmp
mov
fistpl
jmp
cmp
pop
cmp
icebp
cs
pop
cmp
pop
pop
data16
call
cmpsb
lea
xchg
pop
andb
dec
jb
jb
test
test
pop
aaa
stos
add
xor
cmp
inc
faddl
dec
mov
dec
mov
pusha
data16
aaa
rcrl
dec
jno
decl
xchg
mov
dec
sti
addr16
into
pop
fwait
inc
aas
lea
xchg
cwtl
stc
push
sub
test
xlat
and
xor
int
les
lcall
lods
jnp
and
cs
ror
data16
lcall
ret
frstor
test
jno
dec
cld
push
xchg
lods
add
ljmp
mov
clc
fidivs
xchg
cltd
sub
test
iret
xchg
xchg
call
dec
cmpsl
adc
aas
or
pop
and
faddp
xchg
jmp
notb
xor
data16
cwtl
fwait
push
sub
test
sbb
inc
addr16
jmp
pusha
imul
repnz
jno
das
pop
or
sub
mov
mov
popf
sbb
pop
repz
jne
push
outsl
fs
stos
pop
mov
insb
icebp
data16
call
lret
insb
and
orb
cmp
inc
xchg
and
push
and
push
mov
rcrl
xchg
push
mov
pop
ljmp
enter
in
mov
aad
pop
and
aaa
cmp
xor
jb
cltd
lods
in
repz
jmp
fdiv
mov
enter
cmpsl
xchg
cmp
xchg
pop
push
pop
cmp
mov
ljmp
xor
or
rcll
xor
outsb
sbb
scas
mov
sub
call
movsl
jmp
cmp
cmc
push
mov
inc
loopne
mov
push
insb
xchg
repnz
lds
in
pop
mov
and
mov
cwtl
xor
icebp
rcrl
sbb
xchg
ljmp
mov
or
pop
cmp
not
adc
xchg
imul
insl
pop
cmp
jmp
sub
int3
out
inc
push
inc
mov
mov
xor
ljmp
sub
dec
mov
push
sbb
adcl
lods
add
mov
decl
stos
fcmovne
adc
shll
bnd
adc
ret
into
iret
notb
jnp
std
sahf
inc
sbb
and
cld
jl
add
test
imul
lock
outsl
push
les
insl
mov
icebp
or
cmp
xcrypt-cbc
cmpsl
aam
mov
bnd
and
aad
scas
jle
mov
dec
mov
lods
ss
aas
in
faddp
adc
mov
es
push
jg
ja
stos
sbb
ret
sbb
xchg
icebp
cmp
mov
ljmp
ds
dec
fnstenv
cwtl
xor
aas
xor
add
adc
cld
aaa
fiaddl
or
pop
aas
push
jb
dec
pop
lea
inc
or
faddl
fildl
mov
pop
adc
out
mov
xchg
sbb
sub
out
mov
xchg
pushl
out
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
mov
mov
jl
xchg
outsb
and
ret
adc
testb
cmp
sbb
pop
leave
xor
jmp
sub
mov
ds
andb
lods
lahf
or
and
lcall
jge
test
fs
jb
xor
sbb
fwait
and
lods
je
sbb
pop
incl
test
imul
mov
push
aam
inc
outsl
push
stc
add
call
or
mov
cmc
lret
sbb
jo
push
dec
sahf
dec
push
push
or
ljmp
pop
xchg
cmp
and
push
mov
fstps
daa
stos
shll
xor
pop
lock
ljmp
mov
pop
out
pop
add
aam
or
fsts
fcompl
and
shlb
cmp
inc
fwait
mov
inc
ret
sbb
mov
lcall
xchg
pushf
test
push
push
mov
into
in
or
ret
std
call
push
rclb
mov
xchg
pusha
jg
iret
pop
jb
adc
jp
mov
pop
mov
mov
cmp
xchg
pusha
mov
jb
push
outsb
xlat
cmp
jnp
jg
std
jmp
xor
dec
test
shlb
or
xchg
enter
inc
ret
sub
aaa
jge
mov
mov
aam
out
and
test
xchg
inc
ja
add
lcall
add
xchg
fidivrl
sbb
cmp
rcrl
sbb
dec
mov
insb
cmp
fdivrp
mov
scas
sub
jno
xor
test
sbb
ds
mov
lcall
test
addr16
in
addr16
jmp
pop
fiadds
loop
adc
jg
xlat
stos
pop
insl
push
mov
jae
js
lea
repnz
daa
call
call
mov
insl
loopne
push
repz
mov
loop
adcb
gs
xor
arpl
mov
mov
lock
jbe
mov
shrl
stc
xor
stos
cltd
mov
insb
leave
push
jg
jmp
mov
jl
andb
bound
stc
xchg
pop
mov
dec
jmp
pop
pop
subb
in
jp
scas
push
in
ljmp
dec
stos
xchg
icebp
std
enter
jecxz
jg
cmpxchg
js
inc
test
xor
cmp
cld
and
mov
jmp
addr16
or
rorb
dec
bswap
test
inc
push
or
cmp
inc
ljmp
or
test
push
or
dec
jnp
mov
pushf
sub
pop
inc
pop
clc
decl
fdivrs
movsb
sti
fbstp
jo
ljmp
mov
cmp
inc
repnz
sub
fdivrl
mov
scas
mov
inc
imul
mov
fisttpl
push
and
sahf
adcb
push
ja
push
jl
imul
cli
inc
orb
inc
push
ja
mov
out
mov
jg
popf
roll
test
divl
ljmp
mov
dec
jge
mov
testb
cmp
mov
ror
and
test
in
add
bnd
pop
mov
inc
cmc
cli
int3
cwtl
mov
xor
mov
out
sbb
jb
and
pop
or
add
jg
les
inc
cli
add
pop
and
ljmp
aad
popa
mov
dec
scas
cmp
movsb
loope
xor
mov
stc
in
ficoms
pop
test
pop
insl
dec
repz
movsl
mov
lcall
xchg
call
sbb
add
mov
push
push
rcrl
or
mov
and
xchg
call
push
cltd
or
adc
sub
std
pop
inc
mov
daa
stos
fadd
and
dec
ljmp
sbb
out
or
popl
clc
scas
xchg
sbb
fildl
cmp
adc
adc
push
mov
shrl
jae
xor
aaa
aas
xchg
jns
mov
fists
sti
aam
jb,pt
shll
jge
ds
bound
lcall
cwtl
xchg
fisubs
aaa
or
sahf
cmc
pop
jbe
sbb
jmp
xchg
out
in
dec
xchg
cmp
fmuls
test
xor
outsb
inc
push
sub
aad
mov
xchg
mov
push
cmp
lcall
dec
paddsw
dec
mov
leave
jmp
push
sbb
incl
pop
jmp
jns
loope
lea
mov
xchg
add
inc
lea
icebp
ret
jmp
cs
xchg
pop
mov
gs
sub
mov
inc
pop
dec
push
stos
add
sub
aaa
std
sbb
push
mov
in
rclb
adc
cld
in
call
stos
movl
idivb
and
shrl
enter
aad
mov
mov
cmpl
lds
hlt
xchg
cmc
js
fiaddl
outsb
out
stos
jno
add
dec
pop
clc
jg
mov
xor
mov
rolb
and
xor
push
jne
je
bound
lcall
je
jb
icebp
mov
movsb
and
push
pushf
add
aam
mov
gs
xchg
jb
cmp
mov
ss
adc
stos
int3
fdivs
shlb
out
adc
inc
scas
and
call
push
and
adc
jns
shlb
cmp
mov
inc
fcoms
dec
in
xor
stos
mov
out
pop
ds
mov
push
inc
lret
addr16
faddp
icebp
lcall
jno
shr
out
setbe
in
mov
jae
stos
sub
jg
xor
fs
in
jne
jmp
mov
lcall
xor
faddp
bound
ja
cmp
out
mov
pop
lcall
pop
or
out
sub
sub
adc
dec
mov
inc
inc
arpl
mov
ret
or
and
lcall
fcmovu
pop
sbb
ds
inc
xor
cld
daa
imul
hlt
sbbb
pop
loopne
scas
insl
decb
into
jmp
pop
add
mov
mov
popa
lcall
fdiv
and
or
sbb
sbb
jle
mov
stos
icebp
fs
rcrl
lcall
adc
aam
ds
lds
lret
lret
sbb
clc
dec
dec
and
cmp
iret
jg
pop
std
cmp
into
xchg
subb
push
adc
add
mov
incl
pop
pop
dec
inc
cmpsb
cmp
data16
mov
in
daa
add
xor
popa
push
jp
push
ljmp
incl
adc
and
xor
sub
nop
sbbl
inc
xchg
mull
in
insb
push
jne
pop
xchg
pop
sub
ds
ljmp
xchg
out
mov
int
xlat
call
ljmp
pop
incl
ljmp
jecxz
js
push
mov
pushf
inc
in
cwtl
enter
lea
or
incl
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
mov
cmp
pop
adcb
cmc
pop
jl
jae
clc
push
data16
loope
pop
shlb
jg
decl
mov
dec
cmp
pusha
outsb
insl
nop
aas
adc
jmp
loop
adc
add
add
push
loop
cmp
mov
aam
loopne
call
push
add
call
or
sub
leave
push
imul
testl
call
int
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
jmp
mov
aaa
dec
insb
call
scas
pop
xor
dec
inc
cmp
inc
cmp
mov
loope
add
xchg
sgdtl
pushl
icebp
aas
movsl
movsl
or
sbb
push
jl
jno
shlb
push
sbb
mov
cmp
mov
movsb
push
jno
mov
sbb
dec
fistl
or
arpl
mov
lret
pop
shlb
ja
lret
bound
cmp
jg
push
movsb
mov
inc
decb
sbb
jno
jno
pop
xor
xor
sbb
lcall
jns
inc
dec
adc
popa
mov
sti
fstpt
add
test
out
mulb
mov
push
ljmp
call
fidivl
je
or
push
addb
jo
jmp
out
rcl
mov
mov
jno
xchg
sbb
push
push
call
clc
daa
mov
cs
nop
jo
rcll
adc
add
lret
out
cmp
inc
pop
imul
lcall
test
jne
and
dec
mov
mov
or
pushf
fwait
stos
shlb
or
cmp
ss
xchg
xchg
ds
pushl
lods
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
add
inc
stc
sub
js
sub
jns
pop
mov
xor
fmulp
movsl
jl
mov
jbe
testl
dec
push
push
das
xchg
cld
or
lahf
adc
mov
lds
mov
dec
xlat
stc
ja
arpl
and
mov
shlb
into
jne
mov
repnz
jge
cmp
push
inc
sub
mov
bound
pop
loopne
jmp
adc
pop
xor
mov
and
jmp
jle
in
xchg
mov
cmc
or
dec
sbb
daa
jns
xchg
mov
sahf
mov
dec
nop
pop
push
add
mov
and
jb
into
ljmp
push
xchg
pop
adc
fcomi
push
fstpt
or
xchg
add
pop
ljmp
push
sub
mov
cmpsb
aam
lods
adc
mov
hlt
add
in
add
jg
dec
ret
cs
je
inc
sbb
adc
sbb
sbb
outsb
lcall
push
jae
jb
leave
rcll
xor
arpl
dec
pop
xlat
inc
lock
mov
incl
movsl
sahf
arpl
inc
adc
in
sub
subb
scas
push
lea
rcll
mov
ljmp
add
stc
add
or
sub
or
mov
pop
jg
incl
sbb
in
sahf
fidivs
dec
repnz
sbb
fwait
mov
lahf
pushl
fldcw
push
insl
pop
fsubrs
imul
movsl
or
mov
or
lcall
sub
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
imul
sbbb
clc
incl
mov
pop
pop
arpl
pop
mov
xchg
mov
sbb
or
fwait
sub
pusha
insb
and
mov
jbe
xchg
push
loopne
call
ss
cs
xchg
cmc
aas
sub
jo
movl
test
mov
fcmovne
dec
xor
mov
xlat
sti
movaps
insl
mov
arpl
movsl
fnstsw
mov
ds
fisubs
cmp
cmp
adc
jns
cmp
xlat
adc
rcrb
lods
adc
cmc
lret
aaa
lret
in
xchg
dec
xchg
jno
jl
shlb
mov
jmp
xor
popa
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
inc
xchg
incl
lods
out
incl
shrb
icebp
mov
xchg
nop
cmp
arpl
in
call
or
xchg
and
icebp
mov
xor
xchg
subb
lret
mov
lock
cmpsb
push
std
decl
inc
xor
push
adc
js
stos
sub
jl
lcall
call
aaa
jb
cltd
lods
jecxz
push
dec
jmp
jg
imul
mov
arpl
aad
jno
lahf
cmp
push
add
pusha
scas
clc
decl
pop
push
stos
or
cmpl
ret
repz
dec
lock
cmpsl
ss
insl
xchg
lods
fcomip
incl
fwait
icebp
je
aad
std
fidivrl
or
jecxz
cli
out
adc
inc
xchg
cmp
cld
jno
lahf
aam
inc
out
sbb
jo
aas
outsl
cmp
sub
addr16
mov
cmpsb
jbe
dec
jmp
jae
xor
xchg
fistpll
mov
scas
in
out
std
jns
mov
sbb
mov
cmp
jbe
out
in
add
aam
xor
ja
xchg
out
inc
xor
xor
push
xchg
adc
xchg
ljmp
push
mov
push
jnp
push
sub
adc
and
cli
gs
dec
dec
xchg
ljmp
lcall
jge
sbb
mov
cmp
dec
enter
iret
sbb
sar
add
cs
loopne
mov
je
mov
loopne
mov
xor
lcall
out
add
daa
dec
pop
sti
das
pop
scas
je
push
mov
pop
out
inc
cmp
add
adcl
inc
daa
mov
mov
sarb
out
fucom
fwait
or
std
add
add
lcall
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
es
cld
mov
enter
std
adc
mov
lcall
ss
inc
ds
mov
cltd
pushf
popa
jnp
xor
sti
scas
pushf
xchg
jne
pusha
cli
sub
jmp
lret
into
fists
pop
lret
jae
xchg
loope
pop
mov
xor
es
ljmp
jecxz,pt
and
shrb
sti
fnstcw
pop
mov
pop
movsl
pop
push
fistpl
test
add
clc
call
lcall
or
test
mov
sub
call
or
cmp
inc
lods
fiadds
dec
leave
cmpl
lret
test
icebp
push
fistl
and
cmpsb
sbb
inc
xchg
adc
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
loopne
vpperm
js
fdivrs
mov
incl
sub
arpl
mov
lods
repnz
callw
jle
cmc
test
addb
dec
lock
push
xchg
adc
and
out
add
xchg
xor
loopne
or
ljmp
lcall
pop
sub
fisttpll
dec
lret
mov
insl
popf
xlat
imul
movsb
stc
lahf
gs
ja
xor
loopne
js
push
mov
pop
push
xchg
daa
ljmp
xchg
mull
jns
sub
into
leave
imul
sub
mov
mov
adc
inc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
or
cmp
jmp
lods
mov
into
sahf
loope
lds
sub
lea
mov
lahf
fisttpll
int
mov
scas
jmp
sbb
jle
pop
inc
mov
lret
adc
mov
idivl
icebp
jnp
jnp
mov
xchg
pushl
call
test
in
iret
popf
aas
cmpsl
mov
in
lret
pop
sbb
out
idiv
decl
shr
inc
sub
xchg
bound
insb
ja
mov
nop
add
or
inc
adc
incl
stc
mov
inc
push
in
aam
push
mov
out
inc
mov
fcomip
ljmp
sub
sub
xchg
dec
mov
cmp
ficoms
mov
negb
cs
jae
mov
cmp
stc
sub
adc
pop
jl
jle
or
decl
mov
jl
das
std
mov
pop
outsb
xor
push
sub
jmp
hlt
pop
fnsave
pop
fisubl
in
xor
and
shll
decl
sbb
mov
test
imul
es
push
fstpt
mov
mov
jb
test
cmp
jl
dec
testb
js
lret
xchg
xor
insl
imul
mov
ret
add
lret
jmp
ret
test
shlb
fmull
or
stc
mov
jo
jp
aas
stos
push
into
pop
xor
jg
and
adc
cmpsb
out
sub
dec
aaa
clc
dec
popf
jne
ds
mov
rol
ljmp
lods
pop
jo
es
pusha
stos
mov
xor
out
mov
sbbb
inc
out
dec
and
xor
mov
cmpsb
sbb
sbb
pushl
push
sub
and
sub
popf
push
pop
inc
ss
adc
jg
mov
mov
mov
jno
pusha
lock
dec
xchg
repz
xorb
add
mov
decl
jo
mov
rcr
lea
ljmp
jg
movsb
cmc
imul
in
lods
bound
outsl
data16
inc
mov
ljmp
ret
sub
dec
dec
lea
add
mov
incl
mov
iret
dec
les
pop
xchg
jecxz
and
xchg
xchg
xor
call
inc
xchg
sbb
cmc
cmpb
sbb
push
and
fisttpll
notl
jmp
lods
dec
addr16
stos
add
or
stos
mov
adc
pop
push
shrl
push
decl
sbbb
pop
sub
and
bound
xchg
jp
sbb
xor
lea
jmp
call
std
mov
mov
call
mov
pop
push
loope
and
pushl
jnp
dec
js
insl
lods
lret
and
mov
lret
pop
rolb
test
jmp
or
pop
daa
lahf
int
and
cmpsb
or
lods
xchg
cmp
outsb
iret
stc
push
cmp
nop
fs
push
idiv
aam
cmp
jb
mov
adc
filds
dec
push
push
push
mov
ljmp
sahf
adc
adc
cmp
test
push
pop
or
cs
or
shl
push
cmp
lock
push
add
outsl
pushf
push
cmpsb
insl
adc
pop
jle
ljmp
and
mov
fisttpl
filds
imul
out
cmp
ficoms
cmp
jmp
push
jle
loope
aad
dec
add
pop
dec
sbb
rolb
rcll
pushf
ja
loopne
jecxz
mov
dec
mov
repnz
aas
sub
fstpt
adcl
decl
imul
xchg
mov
mov
mov
leave
popa
test
mov
ficomps
in
movsl
push
push
adc
fldenv
decl
ret
les
mov
fwait
or
call
dec
fwait
ss
push
add
aam
incl
mov
sbb
pop
cs
mov
xlat
das
sbb
mov
cli
rclb
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
inc
dec
insb
xchg
jno
add
xor
pushl
inc
and
mov
and
or
xor
sarl
xchg
add
and
in
mov
incl
and
call
aad
popa
fwait
xchg
sbbb
mov
jns
loopne
push
call
stos
popa
mov
dec
lods
sbb
mov
jecxz
mov
cmp
decl
cwtl
aam
push
mov
inc
cmc
pop
es
cmp
aam
xorl
fsubrl
jne
jg
out
imul
int
std
lods
out
mov
mov
ljmp
fcoml
push
inc
inc
mov
pop
rcl
or
mov
and
aam
dec
sbb
incl
popf
jno
popf
xchg
jb
and
leave
xor
ljmp
outsl
adc
shll
adc
inc
in
sbb
out
or
cmpsl
adc
push
rorb
testl
inc
xor
dec
incl
mov
add
test
cmovbe
mov
mov
jne
ss
sti
stos
sub
ljmp
jl
xchg
pop
inc
gs
push
iret
cld
xor
add
mov
push
data16
movsl
xchg
in
icebp
adc
push
fwait
inc
scas
adc
xchg
jmp
rcrl
or
adc
adc
test
mov
dec
je
jmp
inc
das
add
sti
rclb
push
enter
xor
jp
mov
mov
mov
dec
rol
mov
push
fildl
hlt
inc
bound
add
mov
lret
push
jp
sahf
aas
repnz
out
sahf
in
sbb
sbb
dec
jp
inc
clc
ficomps
add
sub
and
sbb
stos
movsl
add
in
lret
lea
inc
mov
push
or
daa
inc
xor
pop
ret
in
push
mov
scas
or
std
ret
mov
scas
pushl
jecxz
xor
sti
mov
inc
jo
fsubs
sbb
xorl
inc
add
frstor
push
das
out
jle
adc
jle
sub
movsl
and
adc
incl
cmp
mov
jmp
sub
adc
adc
xor
decl
mov
mov
cmpl
jo
jp
jnp
call
sbb
xchg
ds
jnp
adcb
je
icebp
dec
data16
sub
lret
lcall
idiv
test
mov
fsub
repnz
bound
or
xchg
lcall
das
lret
out
cmp
in
shll
jne
clc
repz
push
xchg
arpl
jg
sbb
lcall
push
adc
mov
mov
out
ljmp
sub
push
sbb
repz
pop
int3
ss
or
push
push
shrb
mov
lret
and
jne
push
ljmp
cld
inc
in
push
add
clc
stos
or
sbb
ds
fcomps
idiv
push
std
lcall
xlat
lahf
leave
inc
insb
out
xorb
shl
mov
sar
incl
jmp
dec
call
fldcw
inc
jl,pt
mov
mov
insl
push
pushl
les
ret
push
sub
or
jmp
jge
adc
xchg
fildll
push
lcall
data16
jmp
das
rolb
push
ret
and
push
decl
pushl
out
shl
pop
test
mov
xchg
sbb
frstor
jo
call
or
add
jp
fstps
mov
pop
mov
test
mov
clc
cmp
jns
decl
scas
fisttpl
aas
popf
xor
scas
pop
fldenv
bswap
hlt
sbb
lcall
aam
sub
cli
sbb
test
pop
adcl
inc
inc
mov
sbb
xchg
arpl
insb
fisubs
ja
sbbb
and
daa
jne
leave
ss
mov
ljmp
into
pop
jecxz
or
sub
add
in
gs
inc
insl
mov
mov
pop
push
js
mov
arpl
jg
mov
mov
cltd
in
add
jns
sub
pop
rcl
and
jo
inc
adc
push
rcrl
mov
xchg
out
jbe
sbb
rclb
jg
dec
test
mov
mov
dec
sbb
jb
push
jne
jo
popf
test
mov
dec
sti
insl
sbb
lcall
push
and
imul
jp
lcall
cli
cmp
testl
mov
aam
add
push
out
jg
incl
incb
pop
mov
add
jp
dec
loopne
xchg
mov
cmp
inc
ret
jne
outsb
stc
stc
imull
aas
ss
mov
shrl
aaa
repz
mov
out
fwait
and
lds
outsb
or
mov
lahf
xor
lods
test
mov
inc
rclb
push
lret
daa
mov
mov
or
clc
inc
mov
push
push
decl
andb
pop
cmp
and
push
stos
or
mov
xor
cmpsb
mov
cld
sti
sub
push
dec
cmp
ja
fstp
cmp
cmp
inc
cli
jl
cmp
adc
call
notl
sti
pop
cmp
andl
push
inc
sub
cmp
mov
mov
push
push
jp
stos
cli
aad
ljmp
aam
stos
push
movsb
cmpb
out
sbb
addr16
movsb
sbb
imul
pop
rcrl
mov
stc
cmp
cmp
lret
cmp
lahf
dec
dec
lods
mov
stc
ljmp
stc
sub
xor
lods
push
cmpsb
dec
xchg
int3
sbb
sub
pop
cld
mov
pop
subl
and
push
outsb
sub
cmpsb
jg
push
add
call
inc
sub
sub
cmp
out
adc
add
arpl
lods
lea
sbbl
imul
lcall
mov
jp
or
mov
jno
adc
bound
dec
adc
ret
lea
in
pushl
push
sbb
xchg
test
jle
cmp
sub
jl
xchg
dec
cld
jmp
leave
push
pop
outsl
cltd
dec
add
sbb
mov
fimuls
gs
dec
pop
mov
cli
dec
mov
out
idivb
ja
cltd
pop
or
cmp
bnd
movsb
push
test
ljmp
je
jno
jno
and
mov
enter
pop
mov
arpl
push
sbb
sar
sub
jae
in
lret
jecxz
or
repnz
korw
xor
decl
jns
nop
dec
mov
test
xchg
ss
outsl
data16
cmpsl
flds
imul
sub
push
jmp
fsts
jl
mov
cmpl
scas
adc
or
leave
fwait
sub
data16
jmp
cld
pusha
xor
repz
sbb
and
cmp
shr
pop
dec
daa
mov
mov
lock
push
cmp
call
lea
es
inc
adc
outsl
std
dec
lock
ds
sub
insb
dec
mov
jmp
xchg
or
mov
loop
out
xor
dec
lods
rcrl
inc
cmp
enter
clc
pushl
inc
dec
mov
and
sub
call
dec
arpl
pop
push
or
mov
pushl
jnp
push
cmovg
aam
daa
xor
addr16
mov
mov
outsl
xchg
popa
add
out
pop
mov
cmp
adc
inc
popa
out
and
jne
xchg
pop
inc
jle
arpl
ja
inc
negl
add
xor
or
test
aad
xchg
and
or
or
mov
pop
jns
jp
aaa
or
dec
loopne
sbb
and
lcall
mov
add
mov
pop
inc
pop
xchg
loope
sti
daa
jge
call
push
cli
icebp
aad
das
jnp
dec
pop
pop
loopne
mov
mov
int3
or
pusha
jno
jg
dec
push
mov
adc
in
out
mov
pop
mov
std
jbe
sbb
std
call
lcall
cmp
imul
test
cmp
sub
lahf
mov
mov
ja
rol
aas
dec
push
xchg
std
call
pop
je
add
push
out
inc
sbbb
add
cmpsb
lcall
sub
mov
cvtdq2ps
dec
fadd
fisubs
clc
mov
push
push
adc
pushf
sbb
out
cli
lcall
inc
data16
dec
xor
or
jle
mov
jmp
decl
insb
call
sub
stos
jmp
mov
test
mov
arpl
addr16
out
sbb
jo
loop
xchg
jmp
stos
aam
lock
mov
mov
enter
mov
push
stc
xor
js
rcrb
pop
cmp
addb
xor
scas
xlat
xorl
dec
sbb
lcall
test
outsb
xchg
ja
mov
pop
inc
fidivrl
push
mov
pushl
orb
sbb
or
cmpsb
mov
dec
iret
mov
push
xchg
fs
lcall
pop
test
jecxz
mov
outsl
adc
gs
push
jb
inc
clc
mov
lahf
ds
incl
rcr
imul
lret
cmp
je
jmp
daa
mov
mov
add
lcall
lea
pop
in
insl
cmpl
insl
xrelease
add
call
into
rcrb
fwait
bound
nop
cmp
pop
dec
and
mov
push
testb
invd
push
pop
jmp
cld
pop
pop
adc
add
lahf
inc
nop
xchg
sub
js
jmp
xor
stos
incl
mov
dec
enter
int
arpl
movsb
sub
lcall
jmp
daa
aaa
and
push
les
or
call
cmpsl
mov
jae
or
sahf
test
push
or
sub
loop
pop
mov
inc
lret
dec
ljmp
cli
xchg
ss
adc
pop
push
jecxz
xor
popf
xlat
or
sahf
push
jne
lds
pushl
addr16
xor
jo
insb
divl
xor
or
dec
mov
mov
test
orb
cmpsb
mov
add
jnp
hlt
inc
xor
ljmp
pop
mov
out
mov
mov
xchg
stos
cmp
sub
mov
jmp
mov
pusha
daa
inc
div
inc
sbb
mov
mov
imull
cs
dec
inc
movsl
add
lret
sub
jp
rorb
lea
movsb
les
add
test
or
rolb
add
mov
push
or
ljmp
sub
das
cmpsb
into
lret
in
inc
lods
in
jg
pushf
and
bound
movsb
sub
loopne
fwait
cmp
lcall
mov
mov
jb
test
iret
pop
inc
imul
fbld
enter
mov
push
aad
inc
xor
test
add
xor
call
jmp
mov
dec
dec
dec
pop
in
lock
in
filds
int3
push
jg
add
mov
dec
dec
mov
in
adc
insb
jmp
insb
test
addr16
stos
jmp
pusha
push
pop
pop
xlat
adc
jg
dec
lods
loope
and
ljmp
add
getsec
pushw
mov
sbb
int
lods
mov
mov
jb
rcrb
jge
push
movsb
jmp
and
xchg
lock
mov
lock
sbb
or
sub
ljmp
xlat
add
aam
jae
push
xor
mov
outsl
inc
popa
in
jmp
and
cmp
jo
mov
xchg
negb
in
enter
ljmp
push
mov
test
push
dec
dec
mov
ljmp
faddl
out
push
add
outsl
add
lods
sti
jnp
enter
divl
lcall
add
push
inc
mov
stc
cli
push
adc
fdivr
jg
scas
and
add
lea
hlt
aaa
sbb
les
cmp
sub
sbb
jno
jl
lcall
push
icebp
cmp
cld
addl
add
and
inc
sbb
adc
sti
cld
pop
movsb
or
jg
ds
ja
sarl
aaa
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
cmc
xchg
mov
in
cmp
insb
loopne
loope
incl
bound
jne
stc
fldcw
les
fdivs
push
inc
xor
test
addr16
push
xor
stos
shlb
adc
ret
lds
adc
ljmp
mov
add
aas
adc
mov
into
xchg
sahf
and
adc
or
xchg
mov
xor
mov
fdivrl
push
scas
inc
popa
and
imul
xor
jge
push
sub
sbb
lods
ds
adc
jb
in
cmp
push
mov
fs
decl
jecxz
sub
jmp
pop
sahf
cld
shll
lds
mov
xor
ljmp
xlat
jae
lahf
and
xorb
imul
leave
dec
movsl
xchg
call
ljmp
add
imul
push
xchg
xchg
pushf
stc
mov
cmpsb
mov
mov
sub
xchg
cmp
sbb
ljmp
xor
xorb
imul
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
jmp
push
mov
ds
ret
lods
adc
cmc
sub
sbb
mov
addl
xor
jo
lea
call
popf
out
cmp
cs
insl
mov
pop
loope
mov
ljmp
bound
aas
lret
push
test
mov
stos
push
mov
dec
add
mov
xor
mov
jmp
mov
or
sub
mov
inc
lds
or
xchg
ja
decl
fxch
jle
bnd
ss
lcall
sub
cwtl
das
sub
inc
and
push
adc
ret
jmp
ss
sbb
sbb
aaa
in
iret
mov
sti
inc
inc
repz
std
mov
cltd
xchg
lahf
jmp
push
push
fmull
cli
add
pop
mov
lods
ja
jne
and
outsl
out
pusha
inc
adc
inc
cmp
push
push
iret
mov
adc
rclb
data16
jmp
into
dec
sbb
cs
ret
mov
xlat
jle
nop
fisubrl
std
decl
pop
lahf
mov
aaa
cmpb
sbb
sbb
dec
push
ja
insl
incl
lret
sbb
ret
sarl
and
push
inc
cmc
jmp
cwtl
inc
xchg
out
mov
jmp
loop
xchg
cmp
fisubrl
bound
lock
das
and
test
mov
push
cmc
jmp
mov
std
mov
and
jmp
add
cmc
push
in
sbb
decl
and
arpl
testl
or
xchg
sub
les
add
sbb
fisubl
cmp
sarl
stos
fsts
mov
out
add
and
cmpsl
and
xor
push
lods
adc
push
jl
or
xchg
cld
subb
xchg
outsl
jae
cmc
leave
test
int3
incl
cltd
inc
cmpsl
push
fwait
push
outsb
ret
sbb
popa
data16
sbb
inc
or
bound
add
dec
cmp
clc
and
pushf
popa
in
ljmp
ljmp
sbb
addr16
mov
mov
pop
xchg
shlb
cld
dec
cs
jp
in
test
clc
jmp
icebp
cmc
cmovl
sub
ret
pop
push
in
jl
mov
jb
pusha
or
loopne
incl
xor
pushf
pop
adc
fwait
test
sbb
test
call
rorb
add
mov
add
sub
call
mov
cmpsb
leave
and
mov
fs
clc
dec
js
jge
adc
mov
dec
cltd
out
cmp
xchg
and
add
scas
add
scas
cli
mov
jns
pop
mov
and
cmp
fs
outsl
mov
push
inc
add
ljmp
bound
sbb
or
lea
data16
dec
adc
mov
imul
and
mov
in
jbe
pop
xor
aam
fcoml
add
rcl
sub
es
pop
fidivrl
push
pop
push
pusha
inc
push
add
icebp
jne
adc
lret
add
xor
adc
push
lcall
or
outsb
jne
in
jge
jo
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
inc
mov
dec
cwtl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
mov
int3
push
ss
mov
rclb
mov
push
pop
push
sub
jecxz
loop
rcl
mov
adc
jecxz
stc
fs
call
lock
mov
jle
adc
movsl
data16
push
jns
fdivp
ljmp
inc
and
jbe
sub
mov
push
mov
cmp
xchg
inc
or
enter
rclb
scas
in
jl
pop
sub
or
pushl
add
cld
insb
add
sbb
ret
ds
aaa
mov
mov
aam
add
pop
movsl
cmpsb
into
sar
jb
ja
or
push
lret
incl
mov
sbb
outsb
inc
sbb
jmp
int
rcll
incl
lock
out
pop
cmp
cmpb
inc
cmp
fildl
dec
adc
ljmp
loope
cmpb
testl
sbb
dec
or
inc
dec
lea
pushl
test
xor
stos
jns
pop
out
jne
xor
incl
out
out
and
mov
pop
movsl
mov
int3
pop
sbb
jnp
test
jae
push
mov
jb
or
les
dec
jg
ds
cmp
stos
pop
rcrl
lods
push
aaa
out
outsb
sub
scas
ret
ljmp
das
cli
inc
or
test
adc
rcrb
in
inc
shll
inc
add
data16
mov
pop
pop
adc
adc
xor
mov
jmp
out
adc
lahf
xlat
or
pop
subl
pop
int
cmp
jmp
push
sub
icebp
sbb
cmp
push
cmpsl
mov
xchg
push
inc
adc
lcall
xor
data16
test
add
sub
mov
lcall
fstpl
sbb
adc
cmc
fnstsw
fidivrs
jns
bsf
cmp
movsb
and
xorb
in
adc
loopne
loope
outsb
xor
rorl
call
lahf
scas
xchg
or
cmpsl
pushf
aam
xchg
cmp
push
inc
or
mov
inc
pop
dec
mov
jge
fists
lahf
mov
cmp
and
out
imul
sbb
clc
call
xchg
xor
mov
push
out
dec
testl
aad
icebp
inc
out
clc
call
bound
stos
sub
adc
imul
fcomip
out
daa
mov
int
fists
imul
in
mov
call
cs
fxch
pop
push
mov
xchg
sub
vcvttps2dq
outsb
mov
pop
add
mov
roll
push
mov
mov
out
dec
lea
fimull
subb
sbb
mov
mov
jae
jge
pop
sti
out
sub
jo
aas
clc
cmp
test
jg
sbb
lds
fnstenv
xor
mov
mov
test
xchg
dec
and
mov
dec
loopne
push
pop
add
mov
ja
in
jb
add
outsl
jmp
fsubrl
mov
es
and
loopne
ss
xor
cmp
mov
lcall
jl
jg
jp
lods
or
in
insb
pop
xchg
push
fs
jle
mov
ljmp
mov
fbld
rcl
push
push
lods
xor
sub
loop
test
ret
stc
sbb
cmc
inc
rclb
ja
and
movsb
incl
add
xchg
fdivs
sbb
pop
dec
adc
fdivrp
dec
mov
push
bound
cmp
lods
inc
xchg
jecxz
add
leave
orb
xchg
sbb
inc
inc
stos
lods
xor
push
lock
scas
pusha
je
push
in
es
pop
jb
sbb
test
decl
sub
xchg
jbe
and
sbb
das
sub
lock
jg
js
nop
sbb
das
add
pop
addr16
mov
pop
cli
jp
sbb
incl
imul
mov
shlb
das
mov
xchg
xor
mov
fisubs
imull
je
test
inc
les
sub
iret
fmul
hlt
pop
add
pop
xor
int3
fs
cmpsb
inc
mov
mov
in
mov
xchg
jns
lds
mov
mov
jbe
mov
add
push
ds
lods
push
insb
push
pop
out
daa
lock
sub
call
mov
dec
aad
data16
hlt
in
negb
cmp
shlb
or
std
lcall
cmp
or
enter
fmull
bound
ljmp
rorl
movsb
call
scas
pop
ret
in
jg
jmp
cmp
push
and
dec
shll
ret
stc
es
mov
sub
sarb
jmp
scas
pop
dec
mov
cmc
ret
xchg
push
lret
ljmp
pop
sub
sbb
rcr
into
jg
fstps
fdivrs
call
jne
lock
pushl
imul
test
mov
sub
aaa
or
pop
inc
popf
push
jmp
mov
jle
adc
lcall
pushl
xor
pusha
mov
mov
inc
lds
fstpt
ljmp
jbe
jg
jg
cmp
xor
pop
inc
and
fisubl
push
inc
call
call
or
pop
cmc
pop
and
cmpsb
call
add
fcoms
and
nop
scas
sub
dec
or
lods
int
mov
idiv
mov
ficoml
push
je
xchg
xchg
mov
jae
jb
jne
push
push
cmc
mov
cmp
mov
xchg
pop
rep
inc
rolb
addr16
scas
jo
xchg
fstp
or
lods
stc
mov
stos
xlat
test
add
pop
mov
lds
cmp
jmp
fwait
sub
mov
lcall
push
popl
sub
sub
iret
mov
mov
aam
addl
movsb
dec
mov
add
idiv
call
push
je
fsub
pop
pop
dec
jno
push
pop
test
lods
mov
ret
lds
ficomps
aas
orb
fcomip
sbb
out
add
or
and
xchg
cmc
aam
aad
decl
sarb
dec
cmc
sub
pop
mov
insb
and
adc
lcall
cmp
and
mov
or
ret
aad
jbe
and
xchg
scas
sahf
adc
pop
pushl
lock
das
cli
and
dec
cmp
in
mov
dec
cld
ds
fadd
xchg
pushf
stc
aaa
test
ret
xchg
dec
pop
cmp
push
out
inc
into
into
sbb
loop
and
xchg
in
rclb
jns
add
imul
dec
pop
cld
dec
adc
mov
xor
fcompl
je
scas
in
xchg
xor
call
arpl
mov
sbb
insl
repz
or
push
incl
and
ja
arpl
sub
push
mov
xchg
xor
adc
incl
mov
lock
mull
stos
mov
daa
or
call
mov
nop
cmp
in
enter
sbb
and
pop
jge
dec
pop
call
sbb
scas
imul
subl
lahf
int
fdivl
lods
push
enter
popa
std
jle
mov
sbb
dec
and
sbb
mov
dec
test
insb
jne
out
rorl
inc
xchg
out
cmpsb
cmp
cmp
cmp
sub
call
test
sub
mov
in
lret
fcoml
imul
fimull
cmpsl
ljmp
in
and
adc
pop
pop
push
insl
inc
bound
lahf
mov
sub
clc
incl
xor
jl
popf
adc
sub
pop
int3
inc
jnp
mov
mov
fisubrs
lret
pop
xchg
jo
test
sub
xor
jp
or
rcr
arpl
add
adc
movsl
enter
xchg
popf
or
ljmp
fnstsw
mov
mov
roll
xchg
pop
cmc
fcmovnbe
jo
mov
and
gs
sbb
lcall
cmp
mov
mov
or
pop
sub
cmpsl
mov
add
sbb
mov
xchg
mov
lcall
orb
cmc
mov
daa
dec
jp
mov
pusha
xchg
aaa
pop
in
hlt
add
jg
sub
cmp
dec
dec
mov
push
pop
mov
and
add
xor
adc
ret
adc
cli
cmp
inc
cmp
out
xor
inc
out
sbb
mov
pushf
add
incl
mov
pop
jnp
testl
pushl
pop
and
add
gs
inc
hlt
jne
clc
xchg
jae
cmp
xchg
call
inc
adc
js
ret
jle
in
scas
xchg
divb
cmpsl
sub
sub
decl
cs
iret
mov
and
mov
ret
movsl
loop
xorl
in
loope
mov
adc
xchg
adc
imul
sub
into
mov
pop
cmp
cli
aas
mov
mov
xchg
cmp
adc
pop
int3
mov
int
add
mov
inc
ret
push
mov
cmpsb
jp
dec
aam
andb
pushl
and
int
pop
pop
and
les
mov
popf
sub
hlt
xor
cmp
loop
movsb
insl
sub
push
adc
outsl
mov
jae
mov
int3
mov
push
add
mov
cld
enter
incb
loope
pshufw
loope
jae
xlat
push
clc
ds
push
hlt
mov
sbb
ret
push
shlb
dec
loope
adc
dec
std
xor
loopne
ljmp
adc
lods
push
pop
push
lods
adc
adc
cmp
mov
adc
sbb
or
xor
jns
int
js
ja
decl
insl
test
mov
xor
fstps
cmovs
pushl
mov
mov
addr16
jmp
push
js
jl
xchg
mov
sahf
sahf
xor
sbb
dec
lret
or
inc
push
adc
shrl
ljmp
jb
fstpl
mov
std
pushf
bound
or
adc
movsl
adc
jg
ljmp
inc
mov
les
call
dec
jg
pop
jnp
lcall
jp
ja
sub
sbb
imul
xor
mov
loopne
jg
call
int3
shlb
push
pop
dec
imul
adc
dec
out
mov
arpl
gs
sar
icebp
sbb
sbb
mov
jae
cmpsl
mov
xor
mov
das
scas
stc
rcr
rcrb
repnz
out
mov
xlat
inc
cmp
mov
stos
or
call
pusha
mov
jbe
jnp
data16
mov
pushl
mov
push
test
cmp
ljmp
sarb
mov
jl
stos
xchg
adc
adc
ljmp
jmp
push
sbbb
adc
xchg
test
sbb
mov
mov
lea
fsubrs
sub
jmp
adc
test
in
xchg
push
stc
enter
movsl
cmc
pop
pop
jb
ljmp
add
pop
lret
lods
inc
popf
aam
ret
adc
jl
dec
fmull
push
pop
adc
incl
adc
or
sub
mov
xchg
jp
out
jge
push
fistl
fst
sub
push
movsb
aam
inc
cmp
repz
sub
jo
add
mov
jo
pop
arpl
push
in
call
xchg
jns
dec
out
inc
insb
fcmovu
repz
popa
xchg
and
imul
test
add
jg
popa
jo
inc
jae
xor
or
lods
cmpsl
adc
xchg
insl
fdivr
incl
mov
and
loope
jb
flds
and
xor
inc
sbb
stos
repz
sar
inc
mov
dec
adc
adc
into
in
sub
mov
mov
xor
and
mov
stos
cmp
out
mov
xor
clc
mov
cmc
jae
push
cwtl
and
ljmp
sar
mov
cmp
notl
sbbb
sbb
or
das
cli
incl
push
dec
mov
sbb
js
inc
popa
sti
mov
clc
mov
ret
scas
xor
leave
nop
shrl
cmp
aaa
or
loopne
push
mov
scas
clc
jmp
sbb
mov
push
cmpsl
pushf
lock
or
xchg
in
xchg
incl
mov
push
pop
cmp
push
jne
xchg
mov
subl
lcall
aad
stos
mov
sub
push
cmp
jnp
mov
dec
outsb
popa
das
mov
lcall
add
xlat
sarb
idivl
nop
mov
test
jno
dec
push
sub
cmp
push
jg
sub
out
andl
adc
out
xor
decl
outsb
inc
inc
xchg
and
lods
xchg
jmp
cs
test
sti
mov
jg
scas
dec
mov
or
decl
jp
daa
xlat
add
and
pushf
inc
sbb
mov
decl
add
repnz
inc
sub
push
mov
sub
ja
jmp
incl
push
xchg
push
test
mov
lcall
fs
in
pop
xor
stc
loope
inc
repnz
pop
mov
jmp
jmp
mov
stc
sub
lret
shll
aam
xchg
fistpl
popf
les
outsl
lods
xor
sbb
enter
cmp
push
or
xlat
lahf
sub
add
xchg
sbb
shrb
incl
fisttpll
fs
inc
out
ret
and
xor
pop
clc
xor
int3
xchg
mov
ljmp
rorb
loop
aas
inc
repz
pop
jmp
mov
insb
add
jmp
push
push
je
xchg
pusha
test
js
add
aad
cmp
inc
mov
incl
or
imul
cmc
adc
sbb
inc
inc
adc
cmp
scas
or
push
inc
mov
int3
outsb
jae
push
fisubs
mov
jae
jle
add
mov
call
xlat
or
insl
sbbl
repnz
sub
into
sti
mov
cli
inc
pop
std
push
mov
cmp
push
icebp
es
cmp
xchg
daa
push
cmp
push
jge
adc
push
sbb
pop
rcll
testl
ffree
imul
inc
cli
fadds
cmp
pop
scas
push
loop
testb
sbb
clc
push
js
frstpm(287
xor
leave
mov
sar
lcall
lcall
xchg
data16
fwait
jb
mov
mov
jae
jg
pop
gs
cwtl
cmpsl
inc
test
dec
adc
ficoms
decl
lock
pop
popf
cmp
push
ret
lahf
cmc
mov
mov
in
out
in
push
adc
fistpll
pop
ficomps
push
mov
sbb
fs
xor
outsl
into
sub
or
jecxz
dec
lock
sub
jl
xorl
cmp
repnz
or
add
das
das
ret
out
jle
decl
pop
in
cmpsl
fwait
mov
jecxz
dec
mov
subl
pushl
sub
jnp
dec
fisubl
push
xchg
imul
xor
mov
jle
add
fistl
aaa
popf
es
sar
and
orb
sbb
push
sub
mov
je
inc
out
push
push
xlat
sti
jl
or
out
hlt
icebp
shll
lock
push
dec
pop
sahf
in
xchg
mov
jbe
or
pop
outsl
inc
xchg
ljmp
scas
sub
test
outsl
clc
clc
xchg
sbb
push
jmp
cmp
out
ljmp
jecxz
dec
xchg
push
ror
and
sub
leave
and
jno
sar
ljmp
xchg
or
push
sub
sub
mov
ljmp
jl
jno
push
out
sahf
inc
js
and
mov
jbe
shlb
scas
orb
insb
mov
sub
mov
inc
aad
enter
sbb
je
stc
mov
daa
faddl
aad
fwait
sti
jg
mov
adc
clc
sti
pop
pop
xchg
in
add
fucomip
dec
push
inc
push
insb
fcmovu
adc
gs
std
stos
ss
out
and
orb
imull
fisttps
icebp
lds
push
mov
cli
push
xlat
das
sar
std
movsb
popf
in
mov
cmp
imul
and
imul
sbb
push
add
xor
jmp
in
mov
sbb
sub
sub
ja
mov
cmp
push
in
and
and
out
call
and
mov
orl
push
fwait
iret
dec
ljmp
push
add
iret
adc
jnp
inc
popa
ja,pn
in
xor
or
mov
cmp
cltd
mov
push
xorb
movsl
jnp
enter
mov
outsl
mov
xor
xchg
js
fnstcw
push
fldenv
dec
fcomps
pushf
test
or
xchg
inc
jne
pushf
enter
mulb
jne
popf
fidivrs
incl
push
add
xor
sub
mov
sub
xlat
cmc
push
cltd
popf
cmp
fidivl
jbe
pop
jnp
xor
jg
in
pop
sbb
sbb
test
fnsave
inc
push
hlt
mov
in
outsb
fcompl
incl
sarl
pop
subb
mov
adc
add
insl
add
clc
decl
mov
rol
push
decl
arpl
cmpsb
aas
lcall
in
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
pusha
mov
ljmp
test
cltd
xor
ja
aad
outsb
inc
pop
jg
cmp
inc
or
lods
cmpsl
mov
cmc
pop
aam
adc
jge
jne
mov
fwait
dec
loop
shl
cwtl
loop
add
iret
cmp
lods
push
in
scas
out
xor
jecxz
mov
xchg
daa
pop
popf
inc
arpl
inc
cmp
mov
mov
shrl
xor
mov
or
int
mov
sahf
fst
jle
js
jo
dec
decl
jmp
xchg
insb
sub
jb
nop
dec
mov
cli
sbb
or
call
pushl
sbbb
shr
add
xchg
out
xor
sbb
nop
jnp
and
incl
incb
sub
nop
push
cld
cmpsb
cltd
test
in
ljmp
lods
sbbl
insl
push
jecxz
mov
fisubl
std
lea
mov
fldenv
fistl
push
push
lret
imul
out
js
ljmp
cmp
mov
not
mov
fistl
repz
sahf
mov
jmp
pop
jo
mov
imul
mov
xor
xchg
inc
mov
jae
jae
xchg
cs
jg
inc
push
jbe
xor
add
outsl
xor
loop
sub
mov
sbb
or
call
je
sbb
cmp
and
popf
imul
pushl
cmp
push
pusha
jp
rclb
outsl
adc
xchg
jbe
das
es
arpl
insb
ret
sbb
sti
andb
incl
and
xchg
cmp
push
lods
mov
cmpsb
outsb
fidivrs
mov
push
xchg
and
incl
xchg
pop
cmp
shrl
in
add
bnd
add
jne
push
lcall
insb
in
jle
jno
xchg
repnz
add
dec
mov
push
push
jno
xor
adc
call
cmpsl
out
mov
divl
xchg
pop
jle
mov
incb
test
icebp
sbb
cli
xchg
push
hlt
test
daa
shlb
gs
mov
aam
mov
pusha
or
aaa
xchg
shr
repnz
xchg
push
cmpsb
mov
mov
add
sbbb
cld
jno
cmpl
mov
int
fisttpll
cbtw
cmp
xor
sbb
pop
and
int3
lcall
dec
sbbl
fcompl
xchg
cmpsl
imul
movsb
idivl
pushl
lret
int3
jb
and
add
out
addb
nop
xchg
push
sarb
mov
incl
roll
inc
jmp
cmpsl
jl
aad
or
sub
and
add
fs
pusha
sub
pushl
sbb
jb
pop
shlb
push
or
in
xchg
sub
loope
mov
lea
das
push
pushl
mov
rcll
jno
fwait
pop
add
dec
or
loopne
call
mov
call
mov
sahf
es
sar
inc
cmpsl
xor
xor
pop
mov
adc
or
lcall
pop
js
push
sub
sbb
repz
jmp
mov
shlb
jae
and
inc
int3
sbb
and
mov
clc
jle
in
call
and
mov
testl
fs
enter
das
clc
mov
lret
call
aas
addr16
decl
mov
dec
push
pop
popf
inc
add
mov
mov
dec
ds
lcall
sub
adc
mov
loop
xor
scas
push
call
dec
push
push
clc
lcall
mov
out
mov
pusha
out
mov
popf
and
loope
dec
clc
push
xor
insb
jnp
stos
mov
pop
nop
int3
or
push
shr
mov
sahf
jnp
pop
cltd
ret
rcr
gs
inc
dec
sbb
jmp
mov
dec
push
test
add
lcall
inc
mov
loop
test
in
movsb
pop
fmull
hlt
or
mov
xchg
in
inc
int
jns
loope
cmp
call
xchg
add
jp
fwait
pop
addr16
in
in
cwtl
incl
pushf
mov
xlat
cmp
rclb
xor
jae
clc
mov
and
fistl
inc
mov
sbb
jg
and
xor
cmpsb
sbb
jg
sbb
mov
pop
xchg
sti
jmp
out
cli
pushl
gs
mov
out
lods
add
push
orl
mov
pushl
add
push
test
aad
push
and
sarb
cmc
or
rolb
incl
bound
mov
sub
push
pop
cwtl
add
dec
cmp
popf
fnsave
iret
xchg
jg
call
loop
movsb
ds
mov
pop
sub
pop
stos
pop
out
out
rol
or
insb
or
fisubl
out
sbbb
lret
jg
ret
shl
rclb
test
pop
sub
mov
xchg
and
pop
add
decl
xchg
or
fistpll
cmpsb
cs
ss
inc
mov
call
dec
js
stc
inc
out
test
mov
rcll
pop
or
pushl
in
sarl
in
mov
cmp
inc
push
stos
mov
call
std
push
jnp
cmc
mov
sahf
stos
mov
hlt
mov
sbb
call
fdiv
loopne
out
sbb
mov
stos
in
inc
std
jmp
jmp
xchg
xor
fnstsw
push
dec
jg
cmp
mov
gs
loope
mov
divl
jo
call
iret
les
inc
cmp
lock
xor
jne
mov
popf
test
mov
push
fcomip
sbb
or
clc
idivl
pop
leave
push
and
sbb
icebp
dec
push
fdivl
mov
inc
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
insl
test
decl
cmpsl
mov
add
rorb
call
add
shr
pop
inc
clc
and
add
sbb
jnp
popa
sub
mov
sbbb
movsl
jl
cwtl
adc
or
std
bndstx
jmp
rorl
push
cld
add
or
and
jbe
push
push
cmp
sbb
insb
inc
das
daa
icebp
adc
jg
mov
inc
jecxz
ljmp
mov
dec
cs
pop
sbb
filds
sti
inc
sti
cltd
aaa
leave
xchg
cmpsb
mov
dec
addr16
insl
xor
dec
mov
test
jmp
outsb
push
inc
lds
push
aad
dec
fisubrs
test
pop
dec
cmp
aad
pop
addr16
jmp
lea
outsb
adc
or
xor
push
sub
xor
jle
out
outsb
lods
jmp
sub
hlt
movsl
aad
fildl
add
pusha
cli
jecxz
add
pop
pusha
sub
mov
scas
insl
out
lret
push
cmc
jmp
leave
fcomp
out
lock
push
add
nop
mov
add
pop
pop
xchg
fstpt
fistpll
sbb
repz
lds
gs
mov
pop
inc
addb
xor
ljmp
mov
xchg
fistl
xor
add
mov
or
adc
jg
mov
lret
jp
dec
mov
stos
pop
pop
ret
sub
mov
fldenv
ret
popa
and
mov
and
pop
jnp
pushf
jge
or
incl
inc
adc
fadds
ss
movlhps
into
ljmp
shlb
pop
mov
cmp
mov
mov
shl
jbe
sbb
call
sub
insl
xchg
pop
mov
cwtl
pusha
stos
imul
mov
imul
and
pop
xor
call
pop
lret
gs
xchg
inc
int
mov
sub
sub
popf
dec
cmp
mov
jle
dec
inc
leave
lea
jbe
sbb
fs
shl
cs
fbld
addr16
xor
push
popf
lock
jnp
dec
pop
inc
loopne
clc
incl
push
stos
lds
test
or
mov
call
push
in
test
rcrl
jecxz
dec
inc
addl
cmp
xor
and
fsubrl
pushl
adc
push
das
or
gs
mov
rcrl
or
inc
jmp
add
icebp
loope
jmp
int
addr16
push
incb
lahf
push
out
cli
pop
imul
sbb
js
std
ret
mov
xor
pushl
es
dec
stos
pop
into
das
fisubl
push
nop
push
pop
ret
or
xor
mov
or
xchg
stos
dec
int
inc
adc
leave
cmpsb
cmc
fnsave
icebp
jl
decl
cmp
shll
adc
sub
xchg
pop
sub
decl
call
mov
mov
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
lcall
mov
or
repnz
cmp
aas
std
adc
loop
mov
dec
sar
jl
cmp
pop
sbb
cmp
dec
xchg
cmp
mov
jne
adc
add
repz
js
fs
incl
fldln2
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
out
cmp
divb
es
int
add
or
push
jmp
dec
nop
xchg
adc
push
std
pop
mov
push
cmp
loope
int3
bound
cmp
cmp
ja
call
mov
call
dec
push
sub
xchg
pushl
push
mov
mov
xchg
jge
call
or
and
dec
dec
jg
sub
mov
xchg
notl
es
scas
xlat
test
mov
cmp
jl
jnp
push
ljmp
pop
pop
lods
call
push
xchg
xor
push
aaa
std
mov
enter
sub
sbb
dec
scas
sub
jmp
arpl
push
loop
pop
divb
push
dec
and
xchg
decl
lock
jmp
add
aas
shrd
out
into
outsb
pop
inc
push
int
stos
cwtl
adcb
ljmp
out
test
int
nop
pop
ljmp
lcall
cwtl
inc
xchg
out
adc
cwtl
repnz
push
fisubrl
js
pop
out
mov
and
idiv
xchg
out
lret
js
cmp
sub
fwait
enter
mull
les
mov
enter
inc
int
mov
out
daa
into
add
xlat
loop
std
pushl
dec
push
inc
inc
mov
jns
mov
mov
loop
push
imul
loopne
dec
mov
jmp
mov
ret
lcall
cwtl
pop
test
mov
aaa
ret
mov
cmp
push
mov
ljmp
pop
clc
xchg
imul
pop
or
jae
lds
cs
pop
mov
dec
ljmp
mov
jl
pop
sub
fwait
cmp
pop
xchg
xor
pushf
repz
xlat
mov
inc
jns
jnp
fcomip
ljmp
pop
or
sub
loop
pinsrw
lret
mov
jmp
popa
cld
mov
sahf
pop
insb
jno
movsb
lods
sbb
ror
sbb
dec
lahf
jmp
mov
ljmp
nop
mov
add
push
push
xor
fcmove
lcall
dec
insb
outsl
ret
imul
ljmp
mov
xchg
les
or
movsb
in
pop
push
mov
push
and
add
scas
scas
adc
push
inc
adc
call
nop
push
add
sbbl
xor
clc
push
mov
jmp
xchg
imul
or
lods
pop
bound
rol
xchg
cmc
push
in
test
jg
outsl
mov
cld
stc
jp
stos
icebp
mov
das
xor
test
pmuludq
inc
cmp
fldcw
iret
loopne
jo
push
popf
sub
or
inc
aaa
clc
cmpsl
aaa
mov
out
adc
pushf
push
cwtl
insb
ret
subl
ljmp
repnz
dec
rcl
nop
loop
sti
push
pushf
mov
add
adc
or
and
jmp
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jecxz
loope
cmpsl
push
push
jmp
cmp
jecxz
loope
call
in
jmp
xchg
scas
ss
push
int3
and
imulb
incl
dec
call
cltd
sub
dec
sub
and
addr16
push
dec
lcall
cmp
sahf
or
daa
fnstcw
xchg
mov
lret
add
stos
bound
test
fxch
fldl
or
outsb
jp
xchg
pop
mov
into
sbb
xor
sbb
dec
scas
popa
xlat
outsb
pop
push
dec
sbb
add
push
je
and
fwait
mov
imul
mov
out
jae
adc
dec
or
sbb
jno
sub
call
je
cmp
lcall
jl
mov
mov
jl
push
ljmp
cmpsl
sub
jns
mov
lea
movsl
sbb
decl
mov
push
inc
insl
add
sbb
jnp
dec
fisttps
sub
adc
mov
in
lcall
push
xor
loope
test
decl
leave
cltd
aaa
std
and
movsb
add
pusha
andb
inc
xor
loope
add
std
mov
dec
jg
jp
enter
or
mov
outsb
cld
pushl
jo
xor
jns
shll
bound
xor
pop
das
jae
cli
adc
incl
add
sbb
sub
pop
xor
jae
and
pusha
cmp
decl
cli
add
xchg
out
inc
jle
sub
jg
mov
inc
pop
out
jns
cmp
or
jmp
aas
push
xchg
mov
jge
lretw
mov
mov
movsl
mov
call
clc
loopne
shll
pop
shr
push
sub
ljmp
ja
mov
mov
add
pop
mov
sub
mov
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
int
or
jmp
xor
call
jo
dec
int
js
sub
sti
cmc
fwait
adc
push
cmp
lcall
push
or
sbb
adc
mov
pop
pop
add
add
lock
pop
inc
push
ljmp
std
jmp
add
orb
adc
mov
fisttpll
mov
bound
les
and
int
push
insl
pop
test
jmp
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
icebp
loop
mov
out
push
aaa
aaa
mov
loop
or
stos
pop
and
shrb
sarb
out
mov
mov
call
bound
cmp
in
iret
xchg
adc
xchg
cmp
pop
jne
das
cwtl
imul
clc
jmp
cld
xor
add
push
adc
inc
js
xor
pushf
roll
mov
xlat
xorb
xlat
mov
mov
pushl
cltd
xchg
rorb
jg
add
jge
mov
rorl
mov
push
stos
cltd
mov
cmp
pop
mov
repnz
js
sbb
inc
rorb
xchg
mov
arpl
mov
lods
scas
sbb
cmp
stc
push
jle
xchg
inc
test
mov
jbe
out
filds
lret
jno
dec
sbb
rolb
push
lahf
xchg
add
push
hlt
pushf
inc
hlt
incl
xchg
pop
fs
lret
cmp
push
jl
mov
fwait
add
test
jmp
or
std
ret
inc
andl
clc
dec
ret
adc
shrb
inc
adc
mov
in
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
fstpl
sbb
push
arpl
lcall
dec
ljmp
sub
sbb
xchg
test
xorb
and
mov
ljmp
sbb
sub
test
inc
and
pop
mov
or
popa
test
cltd
insl
pop
push
mov
xchg
push
test
pop
fdivrl
pushl
shlb
sbbl
decl
sub
shll
mov
adc
pop
pop
mov
push
or
dec
mov
icebp
ds
mov
test
pop
imul
ficoml
movsb
mov
push
sbb
sbb
mov
ljmp
push
pushf
ja
in
nop
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
int3
xchg
aaa
mov
std
jl
or
std
mov
loopne
cmp
ss
mull
sub
inc
add
jle
movnti
pop
mov
jle
sti
cwtl
stos
into
add
cmp
lret
ljmp
inc
push
test
in
mov
or
mov
mov
dec
arpl
push
push
adc
ds
sub
cmp
out
push
pop
gs
xor
dec
mov
cld
xor
mov
adc
mov
dec
pop
or
pop
xlat
jnp
imul
cli
je
ljmp
scas
dec
data16
sarb
adc
pop
dec
in
ret
mov
decl
or
mov
mov
pushl
div
or
es
enter
mov
loopne
xlat
adc
mov
ror
cmp
ljmp
dec
int3
pop
insb
push
inc
negb
dec
std
les
je
cli
ror
out
sub
add
in
ljmp
fucomip
pop
push
outsl
xor
je
adc
mov
mov
lret
jle
push
jae
xchg
or
sub
pop
scas
mov
in
clc
mov
dec
sahf
cmp
repnz
imul
lock
shl
mov
ljmp
lahf
sub
mov
mov
jmp
outsl
test
fs
in
repz
xchg
rol
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
jge
jmp
mov
push
xchg
push
lods
aaa
je
clc
js
mov
les
and
inc
rcll
xor
ljmp
rclb
bound
xor
scas
xchg
jl
or
pop
popa
mov
scas
rorl
lcall
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
cmp
mov
dec
movsb
fwait
out
xchg
dec
jg
push
es
cs
push
pop
and
dec
rorl
inc
mov
push
outsl
dec
movsb
in
imul
sbb
gs
imul
ljmp
xor
mov
sbb
or
sbbb
dec
dec
xchg
xchg
sbb
cld
incl
sub
add
cli
sbb
enter
xchg
pop
js
inc
pushl
aam
and
cli
imul
in
fistpl
jmp
cmp
push
push
testl
sbb
mov
fmulp
shr
shlb
or
pop
fldenv
jecxz
push
jle
fnstcw
mov
jge
mov
ljmp
clc
jae
ljmp
pushl
sub
dec
insl
or
fadds
pushl
mov
in
mov
xor
dec
push
loopne
addl
sub
lcall
pop
jg
incl
leave
sbb
popf
push
je
popa
or
enter
lock
into
decl
cwtl
and
push
leave
pop
xchg
push
sbb
mov
mov
sarb
daa
daa
lcall
mov
jne
scas
push
sub
adc
mul
test
testl
out
cli
ljmp
int3
mov
or
cs
and
adc
push
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
mov
popa
lret
rcrl
ljmp
xorb
into
push
cmp
repnz
lcall
das
into
inc
jmp
push
decl
fwait
dec
dec
insb
xor
loop
inc
hlt
loopne
lret
mov
fdivs
imul
or
jb
push
adc
mov
xchg
add
cwtl
fs
jg
decl
fwait
inc
outsl
movsb
pusha
cmp
or
or
icebp
shr
insb
aas
cwtl
leave
movsb
fcoms
fidivrs
sbb
dec
mov
outsb
test
icebp
fadd
js
and
cmp
movsb
and
jle
dec
imul
mov
shl
in
sub
repz
cld
dec
push
xchg
jne
lcall
adc
inc
or
movsl
adc
mov
sub
or
sahf
inc
push
daa
jmp
lock
clc
inc
cmp
cmp
dec
aaa
jl
roll
cmp
pop
data16
mov
rolb
cwtl
daa
xor
lret
cmp
jmp
jmp
xchg
add
jge
xchg
dec
xchg
ljmp
fs
push
push
cmp
int
cmpl
or
popa
data16
xor
add
push
xor
insb
stos
cmovge
jle
incl
push
cmp
sarb
mov
call
pop
xchg
xor
nop
and
enter
cs
repnz
iret
mov
dec
lcall
test
incl
sub
pop
add
inc
inc
dec
or
dec
iret
aaa
push
orl
and
cltd
cltd
cmp
push
ss
cmp
sub
leave
popf
push
mov
or
test
dec
lods
adc
sub
loope
or
pop
xchg
sbb
bound
ja
jg
add
xchg
cmp
movsb
es
lret
sti
ljmp
push
adc
iret
mov
pop
stos
add
lcall
inc
adc
enter
jns
fcmove
sahf
jae
leave
test
inc
lret
xor
popa
fwait
mov
decl
pop
pop
jne
or
xchg
cmpsl
lea
cmc
imul
imul
jb
in
cmp
pushl
mov
lret
dec
cmpsb
push
inc
call
xchg
fcompl
jge
pushf
xorl
cld
xchg
sbb
sbb
rorb
and
mov
popa
iret
adc
push
sub
fwait
add
cmp
in
jp
test
xor
push
imul
aaa
std
pushl
sbb
jg
stos
fiaddl
jmp
and
sti
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
push
lret
mov
sets
pushl
xor
jb
cwtl
std
cmp
pop
xor
ja
push
call
repnz
cmp
pop
div
enter
cpuid
addr16
push
cmp
mov
cmp
mov
aas
imul
push
loop
push
stc
das
and
ljmp
cmp
mov
sbb
mov
mov
pop
loop
push
int
movsl
pop
sbb
pushl
outsb
dec
lahf
loopne
and
je
imul
je
dec
cmpsb
mov
aam
push
jno
jge
adc
sub
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
aas
push
pop
push
sbb
movsb
outsb
xchg
sbb
mov
lods
jg
fsubr
inc
cmp
pop
jno
inc
inc
ja
outsl
lcall
ljmp
or
cmp
jne
dec
pextrw
push
mov
sbb
mov
in
ljmp
lcall
aas
movsl
or
sbbl
sbb
ljmp
cmc
aad
ficoms
leave
imul
jmp
jbe
jne
movsb
push
fcompl
les
clc
aam
ret
sub
dec
or
xchg
sbb
push
mov
push
mov
aas
mov
xchg
in
inc
aad
lock
test
sti
test
lock
cmp
mov
cli
lds
xchg
pushl
add
sub
jbe,pt
stc
cmpsl
inc
cld
xchg
aaa
stc
pop
cmp
loopne
jmp
jae
cmp
jp
lods
aaa
cs
insl
mov
mov
mov
jmp
fldcw
notb
dec
ljmp
jp
jecxz
call
or
rol
cmp
sarl
ljmp
or
cmp
outsb
mov
mov
and
and
push
incl
pop
and
adc
pop
sub
cld
out
pop
aas
cmpb
loope
in
mov
call
test
mov
rolb
imull
imul
xchg
aad
push
inc
xchg
lcall
ljmp
rep
mov
mov
fstpt
push
pusha
sub
dec
mov
test
pushl
bound
aad
mov
and
in
mov
inc
xchg
sti
push
sbb
stos
ljmp
inc
adc
cmp
shlb
testl
mov
mov
mov
adcl
daa
xor
aaa
and
fcomip
pushl
popa
cmpsb
in
insb
pop
adc
sbb
adc
fs
inc
ret
mov
ljmp
cmc
movsl
add
incl
jmp
andl
sbb
jl
and
jg
or
movsl
cwtl
fcomp
aaa
call
and
mov
icebp
outsb
in
xlat
ds
mov
xchg
stos
dec
lahf
mov
decl
push
xchg
clc
jle
cld
je
dec
mulb
mov
bound
dec
inc
movsb
lahf
pusha
in
out
inc
push
andnps
insl
mov
push
ss
aad
pushf
popa
rcrb
inc
cli
ret
fistpl
stos
pop
je
cmp
inc
mov
push
lods
cwtl
dec
je
stos
dec
pop
pop
in
pop
jl
decl
push
pop
push
addr16
lods
andb
les
leave
in
and
pushl
mov
leave
pop
cli
loopne
dec
stos
sbb
dec
in
ret
dec
xlat
sub
fcomip
jmp
lahf
repnz
push
faddl
pop
push
jbe
xlat
nop
and
push
or
jp
js
or
int3
or
adcb
cmpsl
mov
data16
cmc
dec
push
sub
xor
and
lcall
lock
jmp
in
not
fcoms
popf
cmp
int
mov
fbstp
jmp
and
movsb
cld
push
lret
fs
xor
call
and
push
loope
pop
lret
je
pusha
push
fmulp
stc
je
loop
icebp
repnz
lods
int
orb
or
arpl
rorb
jle
pop
andb
push
dec
icebp
and
fsubrs
sbb
cmpsb
pop
mov
xchg
leave
push
hlt
sbb
mov
incl
out
mov
js
xor
add
scas
popf
mov
lods
stos
sub
cmp
adc
ljmp
dec
das
inc
xor
xor
icebp
cmp
mov
fsubrl
dec
cli
pushl
jbe
enter
jae
aam
bound
mov
insb
sti
mov
xorl
or
adc
lcall
jg
jmp
sub
pop
shrb
scas
xor
sbb
sbb
adc
ljmp
jnp
sti
mov
inc
nop
or
lea
pop
adc
test
lcall
dec
cmp
xchg
test
dec
pushf
imul
daa
mov
ljmp
push
add
arpl
sahf
mov
pop
jle
hlt
push
ret
inc
lods
jg
lods
jge
shll
enter
iret
mov
aad
inc
popa
out
ret
pusha
xlat
sbb
jmp
testb
cmp
dec
cmp
or
frndint
call
loope
movsb
setp
pop
and
lods
fdivrp
es
pop
or
pushl
mov
ret
mov
mov
add
fcompl
lahf
ja
leave
pop
pop
mov
mov
hlt
nop
and
xlat
dec
mov
xchg
js
shlb
lea
dec
dec
std
fildll
rorb
push
cmpsl
sbb
add
in
push
inc
mov
lcall
out
outsl
pop
push
inc
fnsave
push
and
call
cmpl
add
mov
decl
test
dec
decl
push
sbb
rclb
addr16
popa
test
lret
mov
js
icebp
sbb
insb
xchg
mov
or
setnp
in
jge
jl
adc
call
add
dec
mov
mov
inc
push
loope
mov
fwait
ret
iret
jmp
imul
aas
jecxz
fdivr
arpl
lcall
sti
dec
filds
jmp
pop
outsl
test
repz
mov
xchg
mov
in
sub
call
scas
push
pop
cli
jge
cmpsl
nop
jno
popa
stc
decl
mov
negl
add
xor
add
mov
push
ret
pop
icebp
call
hlt
jmp
lea
sbb
mov
jnp
insb
xor
mov
lcall
jp
insb
jg
lcall
lds
cmp
adc
in
lcall
adc
fwait
inc
out
arpl
insb
mov
mov
cld
ljmp
cmp
adc
lret
arpl
fs
lcall
inc
fdivl
lcall
ret
jae
xor
lods
jnp
jge
cli
ja
mov
repz
mov
push
mov
cmpsb
fcompl
mov
mov
cmp
lret
mov
xor
ljmp
lret
mov
inc
jle
mov
call
sbb
xchg
stos
or
lret
outsl
cli
sub
xchg
cwtl
or
pop
dec
in
scas
mov
rcll
inc
inc
adc
dec
imul
into
repnz
dec
push
test
clc
fbstp
aam
movsl
pop
mov
jp
lret
pop
lods
sub
fisttpll
inc
jmp
ljmp
js
out
nop
pop
scas
cmp
mov
or
stc
out
jecxz
xchg
fwait
adc
into
mov
sbb
push
mov
cmp
in
pop
test
das
xor
stc
adc
lcall
cs
jno
in
xor
out
sub
cmpsb
sbb
dec
pop
dec
pop
sub
push
sbb
lcall
ja
cmp
cmp
ja
cmp
push
fdivl
into
sub
js
out
ljmp
int
test
and
frstor
jle
or
movl
lods
inc
mov
mov
sub
rcrb
fisubl
cmpsb
dec
and
cld
hlt
jns
add
push
lods
mov
push
das
roll
pop
fidivl
jae
stc
pop
jmp
cmp
dec
shl
gs
out
mov
xchg
test
add
pop
cltd
mov
cmp
rorl
lahf
xlat
xchg
mov
push
rorl
hlt
nop
out
xchg
mov
mov
out
fwait
dec
mov
es
loop
or
jmp
fiaddl
andb
cvttps2pi
lret
mov
xlat
xor
call
push
in
sbbl
pop
xor
cltd
es
jecxz
ret
test
adc
sbb
clc
scas
dec
movsb
sahf
jle
or
push
sbb
ljmp
fcomps
decl
add
aas
les
push
cmp
fs
mov
pushf
pop
or
jbe
cmp
xchg
out
fsub
pop
dec
test
jbe
mov
aaa
sub
insl
ljmp
shll
cli
mov
push
cld
loop
scas
jnp
push
dec
inc
dec
ss
xchg
lcall
js
movsb
test
out
in
test
repnz
repnz
jbe
jae
fwait
adcl
mov
insl
xchg
int
decl
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
test
call
push
or
push
mov
cli
sbb
add
rcr
jg
rclb
push
cli
xchg
stos
ljmp
jmp
cwtl
stc
mov
loop
daa
imul
push
jbe
jbe
incl
idivb
sbb
insl
es
pushl
and
fsubp
xchg
inc
cmc
lcall
lods
pop
call
sub
sahf
lds
filds
jmp
mov
outsl
rcr
or
pop
jnp
cltd
jp
fwait
in
cmp
adc
test
cmp
push
jbe
sub
cmpsl
cs
incl
xchg
adc
and
das
cs
sub
jno
incb
add
adc
jmp
mov
xchg
enter
jmp
jno
dec
xor
or
int3
cltd
iret
add
xchg
cmp
lcall
mov
push
popf
fimull
int
xor
sbb
repz
sub
jo
jmp
sub
lcall
or
or
inc
movsb
sti
add
inc
mov
pop
decl
movsb
sarl
jae
mov
mov
xor
inc
xchg
loope
push
lcall
sbb
repnz
lret
lock
test
outsb
sub
cmp
mov
fdivrp
jg
test
in
les
pop
rclb
pop
nop
and
dec
cmc
bswap
push
loop
divb
loop
ret
cli
loopne
dec
cmc
sub
add
mov
mov
xor
fisttpl
pinsrw
lods
fdivr
imul
sub
fsts
inc
xor
fisttpll
jae
adc
shr
inc
adc
add
xor
push
decl
add
insl
inc
adc
popf
mov
mov
mov
xor
mov
lea
inc
pushl
or
scas
jecxz
insb
mov
push
cmpl
out
icebp
ror
addr16
or
decl
pop
cmp
gs
in
pop
lret
push
mov
test
mov
pushl
arpl
test
jb
sahf
push
iret
push
push
cmovl
add
jg
jmp
jo
sbb
sub
mov
leave
inc
fsts
mov
xor
pushl
mov
inc
repnz
shll
push
or
lds
in
sub
push
arpl
cld
mov
stos
enter
rclb
jb
cmp
push
push
pushl
cmp
push
repnz
mov
xor
push
insl
adc
push
rcr
mov
jmp
sub
jge
or
cmp
add
mov
rcr
sub
and
push
mov
aas
inc
mov
enter
mov
add
les
mov
cwtl
sarl
mov
jge
jg
mov
xor
jae
repz
inc
jne
call
xor
fwait
dec
adc
add
mov
xchg
cmp
adc
cmpsl
pop
lods
inc
pop
cmp
call
pop
xor
stos
je
shl
ljmp
call
sbb
repz
pop
jg
sub
mov
setp
or
out
jne
aas
fdivrl
pop
mov
inc
bound
fisttps
pmaddwd
mov
pop
insl
cmp
mov
pushf
inc
push
xchg
loopne
sub
add
push
cmp
mov
jmp
push
xor
and
inc
or
jmp
mov
pusha
mov
call
iret
mov
xchg
lret
rolb
mov
movsl
push
mov
or
es
loopne
add
mov
push
pop
ret
push
test
out
add
cmpsb
or
lcall
dec
incl
adcb
adc
and
roll
outsl
clc
cmp
jbe,pn
out
push
sbb
mov
jmp
ja
jg
cs
jecxz,pt
ljmp
and
mov
stos
lahf
test
dec
jmp
ljmp
mov
lods
ljmp
cmp
mov
mov
daa
inc
lods
xchg
clc
cwtl
dec
outsl
out
test
lds
fwait
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
pop
and
aas
pushf
adc
push
cmp
mov
jmp
popa
hlt
mov
sbb
call
jb
testb
mov
sbb
or
jg
ficoms
incl
cld
lcall
adc
mov
cmp
cltd
in
adc
fildll
push
sbb
inc
add
mov
or
or
rcrb
mov
jns
pop
ret
adc
and
xor
xchg
sbb
js
decl
xor
loop
cmp
out
xchg
dec
mov
inc
or
test
pusha
scas
xor
rclb
fs
fwait
int3
jg
ljmp
ja
mov
aas
in
jecxz
ficomps
inc
and
nop
rol
and
call
loopne
dec
add
mov
and
ficompl
sub
ljmp
sub
xor
inc
stos
push
and
stc
dec
mov
mov
test
xlat
es
pop
inc
sbb
jne
jp
sar
jg
cmc
lods
ret
jbe
mov
jns
lahf
push
xchg
popa
inc
sbb
aaa
rolb
xor
clc
sub
std
incb
rolb
fwait
js
mov
test
pushl
mov
arpl
xchg
stos
popf
push
test
test
test
dec
stos
dec
sbb
icebp
sbb
jg
call
jo
xor
mov
outsl
out
fsubl
add
clc
repnz
mov
mov
icebp
xlat
adc
jns
aas
or
mov
pop
repz
and
pop
mov
pushl
inc
or
clc
adc
pop
aam
push
hlt
add
jg
jg
shlb
adc
fildll
fcomip
pop
mov
mov
mov
mov
gs
incl
xor
dec
cld
xchg
jbe
out
sbb
xor
lock
mov
ds
jp
loop
xor
jecxz
mov
dec
inc
sub
cli
cld
pop
int3
ljmp
jp
adc
pushl
sbbl
call
loopne
int
jp
fstpl
sarl
stc
call
lahf
adc
sbb
sbb
xlat
loop
aas
movswl
or
mov
jle
es
daa
jecxz
leave
dec
cmp
jl
fmuls
inc
push
mov
cmp
lock
inc
sub
mov
pushf
in
stos
inc
mov
push
xchg
sti
sub
ja
xchg
aas
xorb
xlat
decl
cmp
dec
cmc
in
and
in
in
fstl
ds
data16
lcall
addr16
lock
xrelease
sub
in
mov
mov
cli
pusha
popf
sbb
dec
mov
inc
ret
leave
aas
jae
aam
sbb
cmp
in
in
js
cli
pushl
xchg
jp
repz
fnstenv
xadd
mov
ret
dec
je
hlt
xchg
movl
js
enter
and
icebp
push
mov
add
movsb
mov
std
push
aas
rcll
jmp
cld
push
mov
movsl
push
mov
xor
je
jl
loopne
call
pop
movsl
aaa
adc
mov
or
mov
push
rcll
lods
adc
notb
xorb
je
shlb
pop
imul
roll
arpl
cmp
pushl
std
jnp
sub
aad
cmp
scas
inc
lea
shr
cld
jo
fs
sarl
jmp
scas
inc
push
pop
outsb
sbb
mov
pop
inc
pop
mov
mov
xchg
push
adc
jle
incl
in
loopne
je
subb
and
mov
cmp
lock
notl
cmpsl
jp
sbb
ror
dec
paddsb
jb
inc
movsb
add
cs
fstpt
and
andl
imul
or
hlt
repnz
setae
adc
jbe
lret
lret
test
pop
lcall
ljmpw
add
ret
jno
xor
rcll
or
xchg
mov
sub
and
aad
xchg
sub
sbb
inc
ret
mov
xor
loopne
daa
cmp
test
sbb
shrl
jl
jns
addl
xor
sarb
jg
mov
out
pop
andl
decl
test
out
test
mov
or
mov
test
dec
ljmp
cmpsl
scas
dec
je
or
push
jo
push
rorb
xchg
call
loopne
insb
pop
sarb
inc
ret
lcall
shlb
jg
dec
lcall
insb
mov
hlt
mov
xor
push
ljmp
xor
icebp
mov
jbe
mov
mov
loopne
call
xchg
add
call
test
fstp
mov
lods
xchg
sbb
fcmovnbe
xor
mov
add
adc
out
cli
mov
leave
inc
xchg
jecxz
dec
pusha
cmpsl
in
cmp
loope
cmp
data16
outsl
cli
inc
push
mov
cmp
push
sahf
sub
imul
mov
lcall
dec
call
push
mov
shl
daa
mov
cmp
negb
sub
repz
call
add
sbb
dec
cmp
aad
jne
jecxz
mov
and
xor
mov
or
inc
jg
lods
xor
xchg
pop
ss
jne
lret
push
call
push
aas
add
jmp
dec
lods
mov
xchg
sbb
mov
divb
mov
jmp
adc
movsl
sub
add
jno
les
push
cwtl
jp
in
push
xor
ja
pushl
movsb
add
js
xchg
shlb
cmp
fists
jg
jbe
fmuls
test
inc
jmp
pop
jne
or
push
out
sub
and
loopne
push
popa
or
test
out
out
out
cs
cmp
cmpsl
cwtl
sbb
imul
cwtl
or
lret
cs
xor
and
fcomip
mov
sub
arpl
push
cmp
push
inc
iret
pop
xchg
or
and
imul
fildll
mov
push
mov
stc
loop
ss
dec
jmp
xlat
lods
es
arpl
and
ljmp
mov
jno
xlat
inc
lret
inc
xchg
pop
movsl
sbb
icebp
lods
movsb
outsb
push
ret
ljmp
dec
mov
sub
inc
inc
adc
jle
leave
clc
and
call
out
pop
adc
or
clc
mov
xchg
mov
inc
xchg
xchg
pusha
cwtl
jle
inc
cmp
xchg
add
inc
adc
mov
imul
movsb
mov
xchg
inc
lock
ret
sbb
pushf
lds
and
dec
test
mov
push
arpl
in
add
ljmp
pop
add
add
mov
inc
je
dec
and
mov
mov
insl
jge
decl
xchg
cli
int
jnp
add
test
cltd
out
mov
dec
mov
sub
aas
mov
xor
aaa
mov
inc
push
clc
sub
jmp
dec
lock
mov
test
xor
push
adc
adc
test
cmp
iret
pop
in
push
jge
mov
fs
lahf
decl
outsl
inc
xchg
pusha
mov
or
call
push
bound
stc
into
adc
insl
lret
loop
mov
cwtl
sub
lcall
sub
repz
aam
dec
ret
popf
mov
mov
lods
stos
xchg
mov
out
sbb
mov
push
clc
jl
jmp
mov
xor
das
xchg
jle
lea
pushl
out
sahf
out
loope
dec
mov
xor
pop
sub
push
movsb
repnz
insl
iret
insb
xchg
dec
and
push
jl
sub
mov
mov
aam
jge
cmc
loope
inc
lahf
movsl
data16
out
aad
add
cld
out
xor
cmp
mov
xchg
out
shlb
lret
lret
sub
push
fldcw
in
in
pop
mov
decl
push
and
jns
repz
xchg
je
shlb
xchg
push
call
daa
data16
inc
out
jl
inc
xor
fwait
daa
xchg
jns
out
in
dec
or
xor
ljmp
jg
xchg
cwtl
cmp
push
outsb
roll
add
cmp
pop
shrb
jmp
shrb
mov
into
jbe
sahf
fdivr
jmp
inc
jg
sbb
ss
mov
inc
ds
ljmp
pusha
es
popf
xchg
jmp
xchg
int3
imul
test
das
and
sahf
push
push
mov
push
sbbb
lcall
cs
lahf
pop
xor
sub
jbe
cmpsl
je
jno
inc
jge
mov
pusha
inc
mov
arpl
add
idivl
xchg
xlat
into
daa
or
jl
lods
mov
or
mov
cmp
mov
ss
pop
adc
push
fcoms
xorl
fwait
insb
push
cmp
lcall
lcall
xor
jle
push
jbe
inc
gs
outsb
lret
inc
pop
iret
jle
mov
fcomip
xchg
jle
adc
cmp
add
jmp
cmc
es
lods
ss
scas
mov
xchg
mov
add
inc
pusha
push
push
cmp
test
hlt
and
and
pop
insl
imul
pop
mov
or
in
jecxz
mov
lock
subb
cmpsb
adc
ja
jno
pop
cmp
jmp
flds
rcrl
mov
push
fldt
leave
test
push
test
das
out
test
cmpsb
adc
pop
out
std
stos
pusha
jno
fwait
sbb
mov
negb
lods
js
rolb
adc
call
jp
aaa
mov
jmp
mov
sbb
adc
stos
js
sub
lds
fisttps
call
mov
push
push
icebp
ror
popf
mov
jmp
mov
pop
adc
xchg
orl
movsb
sahf
movsl
add
js
jo
pushl
inc
mov
mov
movsb
mov
push
in
rcrb
fwait
sub
mov
incl
jbe
pop
pop
pop
mov
je
push
pop
and
out
sbb
xchg
sub
lods
in
addr16
das
pusha
mov
mov
pop
push
pop
dec
mov
pop
and
movsb
sbb
xor
dec
ss
int
cmp
in
jle
xchg
repz
fldl
leave
clc
adc
adc
ss
xchg
gs
and
jmp
or
das
in
rcrl
mov
push
pop
sbb
lret
dec
popa
push
pop
or
enter
call
clc
popa
sub
sbb
jno
out
push
shll
fcos
lahf
shl
lret
out
sbb
cli
mov
push
sub
lahf
cwtl
fldt
sub
vmwrite
xchg
leave
cmp
sbb
ss
and
sub
push
dec
lahf
pop
in
gs
add
dec
adc
fisttpl
test
push
jmp
add
cld
mov
inc
repnz
xchg
popf
cltd
mov
cvtps2pd
cmc
mov
mov
gs
pop
outsl
push
incl
jnp
fiaddl
cmp
and
and
nop
lahf
rolb
jl
lcall
push
dec
scas
stos
push
push
icebp
fiadds
stos
scas
xor
ret
or
pop
das
sbb
jl
andps
out
fidivl
push
mov
mov
mov
gs
pop
aad
mov
jnp
ret
push
test
mov
pop
lret
je
xlat
ljmp
out
adc
push
jne
xchg
pushfw
jno
cltd
stc
orb
sub
ljmp
lret
imul
aam
fwait
push
in
sbb
xchg
leave
or
and
shlb
ljmp
or
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
shrl
imul
jmp
in
outsb
clc
roll
mov
add
xchg
je
faddp
aam
mov
xchg
pop
pop
loope
rorl
cmp
pushl
adc
pusha
test
loop
test
inc
loopne
push
or
aad
test
sbb
add
add
fistpll
fwait
inc
jnp
xchg
mov
mov
scas
sti
loopne
pop
dec
repnz
incl
bound
cmp
and
mov
pop
mov
decl
cmp
imull
inc
pop
cmpb
sub
inc
repz
xchg
fcmovb
jge
incl
rcrb
inc
push
rclb
ret
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
jmp
orb
shll
add
add
nop
mov
call
cld
sti
fdivl
sbb
movsb
test
xchg
popf
sahf
push
cwtl
decl
push
xor
xchg
test
and
mov
xor
cmpsl
inc
fwait
inc
cld
es
call
test
pusha
cmp
sbb
sub
adc
and
push
jg
and
cld
mov
sbb
jmp
je
push
push
sbb
jge
leave
popf
xlat
js
push
fs
cmp
sub
fcomip
call
je
xor
mov
xchg
xchg
mov
popl
pop
fnstenv
std
call
pop
arpl
pop
push
add
fdivrp
pop
jno
lods
shl
inc
dec
repz
arpl
aam
stos
xchg
lahf
adc
imul
sbb
pop
loopne
notl
ljmp
and
imul
out
out
dec
dec
scas
loopne
sbb
jmp
repz
jne
pushf
rorb
stos
out
pop
mov
in
xchg
or
or
add
xchg
sub
shll
popf
adc
push
mov
mov
jmp
addr16
cmpsl
sahf
sub
pushl
hlt
jge
xchg
xor
lahf
aaa
cli
add
std
out
out
jb
xchg
jmp
mov
pushf
out
xchg
int3
push
popa
add
dec
stos
inc
call
std
das
mov
mov
adc
add
mov
lods
shl
iret
pop
xchg
inc
mov
fs
fiadds
cli
fdivr
iret
sbb
in
test
test
outsl
movsb
test
sub
or
xchg
aas
pop
loopne
jmp
fsubrl
js
inc
into
popf
cmp
jp
ficoms
inc
pop
adc
pop
xchg
add
dec
mov
dec
mov
repnz
pop
sub
out
cli
inc
cmc
loopne
retw
xor
imul
inc
fbld
pusha
push
pop
clc
call
into
bound
add
lcall
fidivl
cmp
imul
aas
lahf
ljmp
xlat
filds
aaa
std
jmp
xor
mov
bound
test
stos
add
lock
ljmp
jg
int
mov
ja
mov
test
mov
jns
in
clc
adc
pusha
scas
mov
test
pop
and
lods
mov
inc
ljmp
lahf
push
shrl
cmp
inc
add
jbe
jo
xchg
push
dec
pop
jmp
jbe
pushl
cld
addr16
dec
pushf
or
lods
and
icebp
loope
pop
sub
mov
pushl
punpckldq
mov
push
fcomps
popa
addr16
pop
arpl
in
sub
sub
outsl
sarl
add
jl
ljmp
hlt
or
sar
ljmp
mov
ret
add
cbtw
mov
jp
xchg
call
xchg
push
push
mov
stc
jecxz
mov
mov
fucomi
fwait
andl
call
je
sub
push
stos
test
jmp
xlat
xorb
mov
decl
stos
push
push
pop
call
jmp
xor
decl
js
in
outsl
xor
xor
in
inc
aaa
addb
jg
imul
mov
loopne
in
shl
inc
js
mov
std
jns
fs
add
mov
inc
push
sub
sub
addr16
dec
dec
jle
mov
xor
pop
mov
dec
pop
sub
add
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
clc
enter
cli
xor
enter
dec
add
inc
push
fs
add
jo
inc
lods
fsubrs
incl
mov
jmp
or
push
js
cli
sub
mov
test
incl
push
and
inc
inc
mov
cmp
cmp
xchg
mov
and
test
mov
xchg
out
iret
cmp
incl
pushf
push
mov
xchg
ret
jmp
std
ret
push
mov
adc
push
mov
lods
sub
mov
jp
jle
mov
out
xchg
rorb
or
shlb
incl
jae
addl
inc
xchg
add
push
test
movsb
cmpsb
cmp
movsb
shlb
inc
lods
sub
call
flds
mov
and
jo
push
jmp
mov
call
rsqrtps
xchg
outsb
jno
popa
xor
scas
and
out
sub
xor
dec
arpl
mov
push
pop
scas
aaa
mov
mov
lock
mov
jp
call
mov
pop
adc
pop
pushf
sbb
mov
gs
jns
mov
out
rolb
scas
jmp
inc
idivb
je
cld
mov
mov
shll
into
ret
filds
incl
sbb
xchg
add
pop
mov
mov
push
in
and
icebp
ja
cmc
lock
lcall
xchg
bound
or
lcall
lock
or
gs
jmp
mov
cmpl
inc
push
jmp
scas
js
cmp
imul
sub
imul
aam
scas
test
cli
xchg
inc
decl
aad
js
push
cwtl
movsl
dec
dec
addr16
push
lods
loope
cld
outsb
stos
mov
and
sar
xchg
mov
mov
jle
lds
fstpt
pushl
sti
jae
rcrb
push
insb
ds
push
pop
mov
lods
pop
stos
fwait
push
jg
int
dec
mov
mov
in
mov
js
arpl
add
inc
inc
pop
cs
addb
jns
scas
xor
inc
stos
add
sub
fcomps
dec
jmp
pushf
dec
es
inc
cmp
lods
jbe
fdivr
insb
sbb
inc
out
mov
jp
pop
loope
xlat
popa
incl
sbb
icebp
rcrb
cmp
mov
push
add
jae
xchg
incl
pop
je
and
push
repnz
push
test
dec
dec
shll
adc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
cmp
mov
pop
xor
adc
repnz
lods
je
divb
sub
andl
mov
aam
xchg
fimull
mov
sub
lcall
in
xor
rcrb
or
lock
pop
pushf
cmc
addr16
aaa
std
enter
pushl
jbe
jae
mov
jmp
outsl
andb
xchg
pop
mov
mov
pop
push
out
in
mov
mov
loop
cmp
outsl
daa
sbb
ret
mov
rorl
pop
aam
ljmp
cli
inc
sbb
and
rcl
negl
mov
mov
mov
push
faddp
les
mov
dec
mov
xor
sbb
iret
lahf
dec
inc
decl
cs
adc
pop
xor
xchg
mov
repnz
mov
ljmp
out
push
int
dec
jno
mov
jp
and
mov
ljmp
incl
sar
ljmp
sub
loopne
sub
jl
shlb
incl
gs
and
bound
fdiv
dec
push
int3
fpatan
lods
in
mov
test
adc
xchg
out
lcall
mov
call
test
call
rorl
aaa
mov
dec
sahf
ffreep
enter
test
ret
jg
sub
or
addb
stos
subb
mov
roll
daa
or
pop
das
dec
cmp
push
mov
mov
jl
call
shlb
dec
sbb
addr16
xchg
mov
popa
inc
rcrl
je
push
jecxz
in
push
ret
ljmp
add
jp
pop
mov
aaa
xor
clc
mov
nop
ret
sbb
push
out
shr
pop
into
les
and
shrb
repz
ljmp
jl
xchg
push
lcall
sbb
fcmovbe
add
out
xchg
lret
insl
test
arpl
add
dec
sub
pop
roll
daa
push
xor
les
xchg
pusha
clc
incl
push
cmp
movsb
fldcw
push
sti
and
movsl
gs
imul
jp
xor
jne
fcomip
ljmp
addr16
xor
fistpl
adc
rcll
sub
or
or
popa
lcall
mov
in
cvtps2pi
lret
mov
lea
or
icebp
jb
mov
pop
inc
lcall
xchg
fmuls
out
mov
sub
int
jmp
mov
jle
and
add
cwtl
jge
repnz
and
mov
imul
dec
pushl
mov
xlat
push
arpl
inc
inc
jmp
cltd
lock
pushl
sbb
adc
add
rclb
out
cmpsl
outsl
sub
push
shlb
fcomip
xlat
dec
cmp
pop
sbbl
jnp
mov
fdivl
fisubrl
fsubp
inc
in
incl
in
mov
pop
and
test
jl
cmp
ljmp
mov
or
repz
aas
xor
fnstenv
sub
jne
adc
stos
mov
xorb
adc
mov
fstpl
lock
std
call
or
lds
lea
daa
push
sbb
sub
push
xor
mov
xchg
jmp
sarb
test
iret
push
stc
and
push
mov
call
inc
int
ja
jae
and
shlb
in
div
les
pop
lods
mov
cmp
incl
jge
sub
inc
hlt
lret
and
sbb
scas
mov
xor
repz
or
jg
test
ficompl
sahf
jl
cmp
sti
ljmp
adc
filds
jecxz
push
scas
popf
das
divl
fsubrp
movsl
push
ss
incl
mov
adc
push
mov
pusha
jecxz
test
add
out
dec
pop
hlt
sub
aad
xor
adc
jg
out
dec
inc
es
cmpsb
call
in
in
out
or
cwtl
sbb
data16
lcall
cld
mov
movsb
fdiv
dec
sub
lods
xchg
xchg
mov
cmp
loope
call
or
sub
jnp
mov
aaa
test
inc
imul
adc
mov
filds
mov
insb
mov
movsl
mul
or
cli
daa
pop
out
add
jmp
mov
dec
mov
adc
or
cld
bnd
sbb
mov
decl
pop
inc
inc
or
scas
jae
add
ret
push
cmpsl
cmpsb
adc
daa
pop
shll
rcrb
mov
jg
pop
cmp
leave
jg
cmp
inc
nop
or
inc
adc
mov
dec
xor
inc
in
lea
cmpl
inc
icebp
movsb
xchg
popa
mov
test
cmp
out
pop
aaa
shl
scas
pop
dec
shll
decl
ds
cmp
nop
das
ret
xchg
add
mov
ljmp
xlat
orb
push
bound
in
out
pop
ret
mov
in
xchg
clc
mov
mov
ja
shlb
jp
push
imul
out
lcall
decl
sbb
jno
ss
in
faddl
sub
popf
adc
adc
dec
jp
fs
movsl
cld
cltd
outsb
lock
mov
push
and
mov
and
or
repnz
fcomip
add
outsl
and
sbb
or
shll
pop
mov
push
popa
cmp
inc
pop
insb
dec
adc
fsubrl
xchg
inc
insb
dec
cwtl
add
ja
incl
ret
subb
cmp
clc
ljmp
call
in
dec
push
pop
xchg
jbe
cmp
cmpsl
stos
call
lret
mov
adc
push
int3
ljmp
pushf
jno
cmpsb
int
mov
mov
movsl
cmp
xor
push
push
pop
movl
lret
hlt
or
ljmp
inc
fildll
neg
stc
cmp
adc
sti
into
cmp
push
imul
or
decl
jge
mov
and
movsb
stos
mov
lock
ljmp
jg
lcall
cs
xchg
ja
sub
fbstp
out
sbb
and
fs
lcall
sbb
mov
push
icebp
nop
pusha
cmp
mov
mov
aad
sub
push
ret
lods
or
aas
in
and
push
push
aam
ja
mov
cmp
ja
push
call
or
or
pop
pop
loop
fdivrs
call
fiaddl
decl
lret
and
imul
mov
adc
decl
cwtl
out
movl
lds
mov
orb
mov
fisttpl
xchg
lods
aam
mov
cs
sub
jns
pushf
jae
shrb
ljmp
pop
sbb
xchg
mov
sahf
sbb
xchg
xlat
leave
test
add
jb
mov
fwait
decl
push
hlt
or
push
and
ret
fistpl
test
inc
cltd
shl
ljmp
imul
out
aaa
push
xchg
pop
or
lcall
sub
inc
mov
and
pop
inc
repnz
lock
test
aaa
popa
jg
pushl
adc
dec
xchg
dec
and
jl
adc
inc
or
js
cwtl
aad
test
decl
loopne
ja
mov
cli
les
sub
jecxz
ljmp
push
shlb
insb
lock
sar
mov
loope
cmp
mov
mov
ljmp
hlt
shll
pop
inc
xlat
rcrl
push
adc
mov
jb
jle
call
xlat
mov
andl
out
add
out
adc
in
sarl
sub
mov
loopne
inc
sub
jo
mov
mov
notl
dec
cmpsl
push
mov
in
mov
inc
shl
int3
into
pop
mov
add
in
js
loope
mov
and
mov
mov
lcall
push
sbb
fsts
inc
fistpl
sub
out
cltd
lock
negb
cmp
adc
shlb
addb
xor
mov
adc
jmp
rclb
lods
sub
out
cmp
shlb
pop
das
pop
xor
hlt
cmc
ljmp
xchg
inc
fisubrl
mov
sbb
pop
rolb
xor
mov
lcall
stos
lds
loopne
pop
cmp
addr16
ret
push
lahf
cmp
sbb
in
xor
jg
pop
sbb
mov
ja
jnp
fidivs
xor
dec
sub
sbb
das
cli
nop
add
inc
mov
push
push
scas
lcall
movsb
bound
aad
call
sbbb
jae
push
dec
lcall
lcall
add
jg
jmp
or
or
int
pop
inc
xchg
in
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
sub
sub
jp
jo
inc
jbe
jno
jecxz
fwait
push
xor
push
add
lock
incl
and
jnp
ds
dec
add
push
not
push
mov
test
decl
sub
pop
or
ljmp
rol
cmp
xchg
mov
xor
ficompl
mov
stos
mov
jbe
shl
aam
mov
sub
loope
push
xchg
fsubl
incl
out
repz
push
sub
insb
fisubl
cmpsl
popa
fldenv
ds
repz
jge
arpl
jmp
ja
movsl
stc
sbbl
jg
inc
int
lea
cmp
ss
call
std
test
pop
cwtl
sub
or
mov
jbe
insb
xchg
leave
in
mov
inc
mov
jo
in
imul
mov
xor
xchg
xchg
jp
mov
test
mov
adc
decl
repz
xchg
inc
stos
xor
add
pop
fwait
mov
jmp
fwait
xor
inc
repnz
mov
sub
or
cmpsb
push
insl
push
into
dec
hlt
decl
lcallw
test
mov
xchg
jae
and
les
stc
enter
cmp
pop
hlt
fucomip
adc
xor
sub
or
jno
lods
xchg
mov
dec
xchg
jae
fisubrs
pop
ljmp
push
in
sti
push
or
mov
cmp
xor
sub
dec
fmull
call
pop
adc
jle
sub
test
or
in
ret
ljmp
test
addr16
jns
in
hlt
mov
movsb
mov
jg
in
cld
fmuls
adc
mov
icebp
mov
cmp
out
inc
call
out
pop
mov
fs
xor
dec
out
push
mov
mov
add
jmp
mov
fwait
outsb
jae
mov
xor
enter
mov
dec
loope
xor
jecxz
xchg
add
mov
pop
mov
lcall
xor
adc
pushf
mov
jg
xorb
mov
dec
mov
icebp
cmp
xchg
cmp
incl
mov
je
roll
and
mov
push
sbb
vunpckhpd
pushl
stos
mov
fcmovne
loop
ret
xchg
push
ret
xchg
test
call
out
mov
scas
xchg
jl
gs
outsl
dec
jp
pushf
stos
fdivrl
decl
cmp
mov
or
xchg
pusha
bound
jo
int3
lcall
or
mov
test
sbb
and
insb
mov
mov
ljmp
and
test
enter
mov
movsb
xorl
mov
loop
js
adc
sbb
out
stos
test
jne
mov
decl
pop
fisubrs
or
mov
repnz
inc
jp
xor
aam
or
ljmp
or
sbb
mulb
xor
sarb
cmp
lock
dec
xor
dec
pop
cmp
sbb
cmpb
daa
jo
movsb
jb
lods
adc
mov
in
test
int3
stos
sarb
loopne
aam
int3
ljmp
xchg
jl
negl
fs
push
jnp
sbb
lret
lds
test
fwait
push
sbb
xor
inc
cmp
imul
rcr
xor
push
cmp
fisubrs
call
outsl
popa
inc
push
mov
fdivl
ds
insb
add
jmp
cmp
mov
fcomip
jmp
inc
in
and
pop
or
cmp
fwait
testb
ss
and
sbbb
dec
mov
mov
out
or
ljmp
incl
jmp
push
test
fsubrs
sub
sbb
es
mov
ljmp
jb
ret
and
scas
fmull
xchg
hlt
push
adc
nop
adc
incl
xchg
lahf
fisubrl
jmp
cltd
pop
out
dec
scas
xchg
sbb
int3
dec
jle
adc
dec
xchg
dec
jge
lcall
xchg
dec
sbb
dec
pusha
xlat
js
test
aaa
mov
or
pop
jge
jnp
dec
mov
dec
test
push
and
push
jecxz
adc
test
mov
push
into
cmp
mov
and
cmpsl
push
and
call
or
xchg
outsl
sbb
subb
pushf
cld
dec
int3
out
adc
subl
imul
inc
xchg
scas
cmpsb
ljmp
mov
scas
rol
lret
pop
test
jmp
xchg
out
xor
aam
lock
push
and
cltd
imul
addr16
out
fistpll
sbbb
mov
mov
pop
sbb
aam
popa
or
xchg
mov
or
jge
popf
or
mov
test
add
shlb
cld
std
bound
jge
out
add
imul
call
adc
stos
mov
or
or
or
iret
adc
fcomip
incl
or
clc
out
dec
mov
mov
and
in
cld
push
clc
cmpsl
scas
or
mov
orb
gs
out
sbb
decl
std
decl
jmp
out
cltd
leave
mov
fidivl
dec
decl
pushl
dec
das
cwtl
stos
mov
bound
in
rolb
pushaw
rcrl
decl
sbb
mov
das
and
outsl
inc
dec
or
call
rcl
jno
call
std
decl
xorl
into
xor
cmpsl
inc
jo
stc
xor
ds
gs
insl
stc
pusha
xor
fdivs
rclb
or
in
mov
mov
in
mov
test
testl
mov
xor
jno
adc
lock
or
sbb
pusha
call
fsts
xor
adc
std
adc
arpl
cmp
jp
and
jb
js
jae
movsb
pop
inc
push
testl
jmp
fnstsw
pop
daa
sub
or
sar
dec
das
fildl
or
push
daa
movsb
add
insb
lcall
xchg
adc
dec
incl
movsl
ja
dec
add
push
loop
leave
push
jg
shll
xchg
shrl
push
push
pop
incl
xor
orl
push
inc
sti
cmc
pop
bound
rclb
mov
adc
call
sti
cmpsb
cmp
mov
push
inc
sub
jg
test
jbe
sar
jmp
cs
fsubp
sbb
adc
lea
mov
mov
mov
clc
decl
cmp
shlb
outsl
sbb
jecxz
ret
call
cld
notb
cmp
movsl
and
std
or
push
lds
ljmp
rorl
push
dec
aaa
push
xchg
rcrl
cmc
leave
test
push
cld
dec
decl
sub
mov
dec
lock
or
iret
dec
push
incl
ja
outsb
nop
mulb
stos
outsb
and
or
push
pop
or
ljmp
pop
jno
out
mov
adc
sub
aam
lock
cmp
pop
push
push
ja
ja
xchg
lods
adc
cmp
jp
aas
cmp
daa
cmp
adc
ljmp
xchg
jmp
into
in
pop
gs
adc
cld
repnz
lods
int
xchg
fwait
popf
sub
incl
sbb
mov
push
test
scas
mov
roll
jb
sub
ljmp
jg
xor
bound
test
adc
push
nop
icebp
mov
outsb
mov
fisubl
jne
mov
xor
je
mov
mov
inc
inc
and
inc
lods
imul
call
in
jg
or
incl
mov
enter
inc
andl
sti
bound
pop
xchg
out
orl
add
pushl
sbb
leave
lds
add
inc
sahf
dec
pop
sbb
stos
push
into
fimull
cmpsb
enter
incl
or
jge
jmp
sub
hlt
ljmp
cmpsb
test
sahf
cli
es
aaa
into
inc
mov
dec
nop
aas
xor
repz
ljmp
xchg
jl
jnp
int
or
lock
repnz
xlat
shll
fiadds
push
hlt
inc
cmc
mov
and
lods
xchg
imull
les
jle
adc
decl
je
lret
pop
lahf
pop
popf
in
jnp
ret
lret
push
xchg
mov
and
mov
ljmp
mov
inc
incl
divb
imul
mov
daa
xchg
mov
lds
pop
pop
scas
jb
popa
fistl
sbb
lcall
cmove
fildll
lahf
push
xchg
and
mov
std
sub
dec
sbb
xlat
rcll
dec
xchg
mov
dec
push
push
fmul
cli
sbb
xor
out
inc
cltd
push
pushf
lcall
ljmp
jl
push
mov
push
add
inc
add
in
nop
dec
int3
dec
lock
fsubs
out
call
pop
fs
pop
cltd
adc
in
cmpsl
sub
rclb
jle
hlt
loop
jmp
cwtl
xchg
pop
test
jbe
jle
fwait
ljmp
aas
mov
lcall
add
pop
jp
push
dec
shlb
pusha
sbb
sbb
and
daa
fmuls
xor
decl
cltd
out
push
adc
and
dec
cmpsl
or
and
dec
repnz
mov
std
mov
incl
stos
mov
adc
cmovs
out
pop
std
lahf
lock
jg
adc
cld
mov
mov
test
lret
nop
push
push
sbb
cli
lcall
scas
pop
arpl
xor
sub
dec
dec
jns
call
divl
sbb
and
add
les
or
mov
test
ljmp
rcrl
xchg
aas
popf
or
sub
js
sar
dec
popa
push
imul
jmp
push
xor
pop
lcall
repz
incl
popa
in
sbb
pop
loope
out
mov
cmp
add
cmp
fisubrl
test
filds
stos
lds
dec
cli
xchg
aam
xor
xchg
arpl
or
call
cli
dec
xor
xchg
push
js
and
xchg
add
fs
add
and
ljmp
add
pop
mov
aas
add
test
push
sarb
pop
je
pop
ds
xor
fstpt
je
in
notl
add
sub
hlt
testb
clc
fbld
mov
stos
decl
xchg
xchg
in
xchg
cmp
jmp
cld
test
inc
jae
pushl
pop
adc
je
icebp
jbe
mov
mov
sub
sub
mov
lds
mov
push
cwtl
push
xchg
out
inc
iret
push
cmp
xlat
stc
lcall
iret
push
arpl
mov
leave
cld
in
mov
xor
out
push
in
xchg
addr16
fadds
fwait
xchg
cmpsl
mov
or
push
call
cmpsb
outsb
pop
and
stos
sbb
dec
xchg
cmp
fisttpl
daa
iret
jns
cmp
sub
enter
notl
cmp
xor
mov
mov
cwtl
dec
xor
call
fcompl
lods
jp
ret
push
stc
in
lret
inc
adc
in
test
out
dec
sub
adc
lcall
lret
and
cs
and
or
into
mov
jle
hlt
sarl
pushl
mov
sarl
js
add
clc
jge
popf
scas
xchg
int3
int3
jg
and
mov
mov
insl
loopne
punpckhdq
shlb
push
jno
sbb
ljmp
mov
cmp
jmp
ss
mov
push
or
xchg
xchg
sbb
call
mov
out
or
pop
dec
stc
push
cmp
inc
cmp
sbb
and
ljmp
jl
cmpsl
pop
sub
stc
and
dec
lcall
xor
iret
dec
adc
iret
lock
mov
push
mov
in
pop
pop
sub
or
adc
pop
cmc
fwait
mov
out
lcall
mov
push
cmp
dec
jno
int3
xchg
lahf
scas
and
push
dec
or
mov
dec
xchg
repz
cmp
test
adc
jno
inc
ret
idiv
jmp
fs
adc
push
jle
sti
shl
inc
xlat
fldt
add
mov
sbb
pushl
cmpsl
insl
cs
jne
sub
sbb
mov
pop
outsl
js
hlt
dec
jecxz
incl
hlt
rcl
mov
loope
leave
rcl
pushl
push
shr
inc
sub
inc
pop
popa
mov
insl
mov
lret
ret
pop
xchg
xor
pushl
inc
push
negl
ret
xchg
imul
out
daa
push
rcll
add
cli
outsl
fldln2
xor
les
dec
test
cmc
mov
sahf
insb
pop
insb
mov
cmp
dec
scas
add
jbe
insb
repnz
cmp
aad
mov
repnz
call
mov
jmp
lahf
inc
faddp
sbb
shll
xchg
adc
adc
sub
jmp
das
daa
js
sub
push
xor
int
sub
add
aas
repnz
push
inc
or
dec
jb
inc
push
fs
rcrb
sahf
xlat
dec
fstl
in
pop
cmp
inc
push
cmp
lret
mov
inc
out
jbe
push
xor
nop
inc
adc
push
aas
inc
sub
inc
mov
ljmp
rcrl
pop
and
pop
jg
pop
and
pop
std
jg
incl
cltd
leave
xor
jmp
popa
out
pop
jmp
dec
in
loope
pop
pushl
call
out
push
aas
jnp
cmpsb
push
ficompl
shll
mov
adc
jg
js
push
pop
sub
jb
sub
xor
clc
jo
decl
mov
movsb
int
stos
in
pop
and
imul
push
imul
movsl
mov
aad
bound
cmc
mov
push
adc
lcall
pop
jne
movsl
lods
mov
aad
in
or
popf
mov
sub
decl
jle
jns
jmp
scas
mov
xchg
test
mov
mov
js
imul
jle
test
lods
xor
mov
imul
push
jbe
rolb
pop
xor
jl
sbb
test
mov
dec
xchg
xchg
dec
pop
daa
cld
fcomip
stos
ret
jp
mov
lret
shlb
inc
xor
inc
test
mov
mov
dec
push
pop
inc
fstpt
lcall
decl
sti
dec
sarb
int3
mov
sbb
ret
inc
adc
fwait
sub
gs
jmp
and
or
pop
xor
in
movb
xchg
inc
add
jge
fadd
mov
adcb
mov
lcall
test
inc
out
jp
jg
call
push
adc
fists
jmp
subl
push
add
loope
mov
sbb
lock
incl
iret
and
jnp
add
push
es
or
jns
xchg
dec
xchg
dec
ljmp
push
sbb
cmp
iret
enter
push
pop
das
clc
ljmp
push
ret
scas
hlt
push
cmp
repnz
aas
mov
pop
and
fcomip
addr16
loope
out
xchg
jne
xlat
adc
push
pusha
sub
cmp
add
push
mov
xchg
ljmp
or
rcrl
lods
inc
into
sbb
sub
imul
fstps
fisttps
pop
mov
enter
mov
xor
test
call
sub
inc
minps
loopw
dec
lods
and
shlb
xchg
inc
xor
mov
inc
fwait
and
out
pop
arpl
cs
inc
inc
ficompl
push
insl
je
lcall
int
dec
outsl
les
or
int
shrb
push
pop
push
decl
pop
pop
mov
mov
cs
push
outsl
push
aam
cmpsb
sub
jge
shrb
add
inc
push
cli
jno
or
pop
std
sbb
sbb
decl
sbb
cmp
pop
movsl
fadd
and
scas
shll
pop
push
mov
cld
jecxz
sbb
dec
cmp
push
and
inc
inc
movsb
or
fisttps
nop
insl
negb
jle
mov
jb
jb
push
cltd
jg
icebp
cmpsl
clc
jg
incb
jl
mov
mov
sub
push
jg
pop
pop
loopne
adc
rcl
mov
pop
loopne
add
jp
icebp
cmp
into
mov
rcrl
fcoml
ret
into
jg
arpl
lcall
xchg
dec
mov
sub
mov
loop
call
loopne
xadd
cmp
scas
mov
leave
adc
int3
hlt
xchg
push
xlat
inc
cmp
fcomip
decl
notl
push
clc
dec
inc
push
into
sub
jo
hlt
stc
pop
ljmp
call
jnp
sahf
decl
cmc
sub
not
pop
sbb
rcrb
push
call
sar
ficoms
jecxz
pop
push
push
scas
jbe
cmp
inc
mov
mov
cmpsl
mov
push
jnp
rcr
pop
sbb
movl
xchg
sub
cmc
mov
idiv
pop
adc
or
cld
in
xchg
sysenter
push
cld
testb
in
popa
sbbb
call
mov
hlt
mov
loop
sbb
lret
in
jae
sub
sub
cld
pop
cmp
rcr
in
lds
enter
lcall
jmp
mov
decl
aaa
fcmovb
enter
in
add
dec
pop
pop
out
adc
mov
loope
and
xor
jmp
lds
xor
xchg
or
sub
fcomip
bound
stc
dec
or
rcl
mov
jle
fcoml
mov
sub
gs
pushl
push
ja
dec
scas
not
add
jb
mov
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
decl
xchg
jg
sbbl
push
mov
sahf
loopne
fnstsw
xor
jmp
imul
pop
fstpl
hlt
jp
mov
div
jmp
pop
lock
aaa
pop
dec
ss
mov
jp
add
sahf
stos
dec
test
adc
popa
popa
roll
inc
jge
cmc
or
das
gs
push
sub
cs
ljmp
out
movb
mov
sub
mov
jne
sbb
xchg
cld
push
inc
mov
cmp
imul
mov
push
jae
push
mov
notl
dec
stos
mov
call
fs
ss
pop
xor
leave
loope,pt
pop
loopne
lret
jo
lcall
in
data16
outsb
lods
push
cmp
pop
xor
add
in
cmp
mov
rorb
int3
das
xor
mov
cwtl
loope
stos
cltd
mov
jecxz
in
push
xor
fisubrl
adc
decb
xchg
mov
and
ljmp
add
xchg
jbe
scas
mov
xchg
or
sar
cli
cmp
movsb
push
pop
sti
lods
je
in
daa
cli
in
push
mov
hlt
push
push
mov
scas
inc
sbbb
mov
in
dec
push
adc
decl
xchg
mov
or
jge
fmull
pop
stc
imull
stos
xor
xchg
jae
push
push
push
xchg
test
scas
add
jb
aas
dec
pop
xor
fsub
inc
xor
jns
call
cld
faddp
pop
movl
cmpsb
push
xor
stos
fisttps
adc
xchg
xor
stos
in
xchg
add
push
mov
dec
ret
push
jbe
and
imul
aam
add
jle
jmp
das
sub
inc
add
adc
jge
clc
add
ret
push
loopne
sbbb
xchg
and
push
loop
fsubrp
or
push
nop
cli
incl
jle
insl
enter
popl
mov
cmp
inc
movsb
les
pop
mov
add
je
mov
fwait
or
xor
lcall
inc
rcll
rcll
and
inc
jle
add
and
inc
daa
push
adc
sbb
or
pushf
mov
clc
xor
lods
xchg
addr16
aam
mov
mov
cwtl
fstp
lahf
fistpl
xor
ljmp
pop
mov
pop
sbb
arpl
das
mov
std
sub
enter
inc
bound
repz
je
test
pop
clc
stos
or
test
lcall
xor
mov
push
sarb
inc
sbb
subl
xchg
lods
push
lcall
pop
pusha
pusha
fmull
shrl
fwait
jbe
push
lds
pop
push
adc
lods
and
xchg
lcall
dec
pop
inc
lcall
lods
sub
pop
mov
adc
mov
stos
repnz
insl
jg
call
cwtl
scas
clc
hlt
lods
lods
scas
gs
or
loope
xlat
push
jno
cmp
dec
or
sar
into
mov
arpl
adc
cmp
call
repz
testb
sbb
add
cmp
mov
mov
and
ret
pop
in
jnp
sbb
xor
sub
dec
lds
adc
dec
cld
ljmp
sbb
pusha
leave
inc
xchg
xor
mov
jle
pop
push
movsb
sub
fdiv
inc
xchg
push
dec
stc
or
out
pop
jae
xchg
pushf
inc
add
fs
and
dec
stc
mov
jae
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
call
cmp
mov
data16
cmp
inc
sbb
ret
sbb
push
xchg
stos
jae
adc
and
dec
iret
iret
jp
enter
xchg
and
cmp
decl
jp
or
jg
jnp
cld
cwtl
add
dec
push
dec
out
call
cld
sbb
xchg
sub
lea
clc
mov
call
pop
out
test
mov
lcall
fcoml
shll
push
add
ret
call
or
cmp
push
iret
pop
mov
cmp
jmp
iret
out
les
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
lock
movsb
imul
lret
xchg
pop
cmc
fcomip
testl
jle,pn
mov
outsb
cmpsb
jo
cmp
or
sub
mov
rol
jmp
movsb
mov
ljmp
push
in
push
sub
dec
mov
jnp
enter
pop
inc
add
pop
push
jmp
fsubrl
repz
addb
pusha
mov
stos
cmp
insl
movsl
mov
pushl
aam
push
js
sub
fnstenv
mov
mov
and
loopne
lret
sub
sbb
andb
mov
mov
ds
sub
mov
fnstcw
adc
sbb
shl
jmp
ficompl
shl
adc
clc
inc
and
adc
add
imul
imul
decl
outsl
jecxz
inc
ds
jnp
in
mov
mov
insb
rol
subl
lcall
jecxz
sahf
call
push
insl
pop
jno
es
mov
and
fistps
call
andb
xor
inc
dec
xor
mov
popf
out
pop
xchg
push
pop
jnp
push
fnstenv
std
lcall
orps
repnz
shl
daa
outsb
or
xor
pusha
add
aas
rcrw
xchg
push
mov
mov
loopne
cmpl
popa
mov
call
adc
xor
repnz
mov
int3
je
mov
mov
jmp
enter
sbb
out
movsb
jg
dec
psubsw
or
shl
jmp
mov
mov
incl
into
cmpsb
adc
push
cmc
jle
sbb
jecxz
jmp
xor
mov
test
inc
dec
dec
fcomip
lcall
dec
sbb
dec
lcall
xchg
mov
fucom
mov
ljmp
jg
mov
or
inc
xchg
add
call
aam
paddusw
enter
sti
mov
and
mov
loopne
lcall
mov
loop
mov
lret
mov
add
shl
sbb
sbb
icebp
pushl
xor
loop
mov
mov
cwtl
sub
and
loopne
mov
mov
sbb
decl
cld
iret
and
cmpl
das
or
cltd
loope
cmpsl
pop
in
iret
loopne
cmpsl
lea
cmp
pop
lods
and
jecxz
out
and
dec
or
cwtl
daa
xor
xor
jg
xor
ljmp
inc
popf
jp
clc
stc
nop
inc
int3
push
jg
sbb
jmp
fdivs
adc
mov
aas
and
jae
loope
icebp
sub
mov
cmc
add
add
mov
or
mov
insb
test
inc
loope
mov
stos
mov
arpl
int3
rorl
mov
cmpsl
inc
jns
decl
out
jo
add
add
push
movl
aas
xchg
fstpl
incl
add
mov
jecxz
cmp
and
push
jnp
mov
xor
ljmp
jmp
adc
push
pop
int
xlat
dec
decl
imul
sbb
cmp
or
incl
jp
outsb
lock
jp
and
adc
mov
ljmp
repz
adc
enter
cli
decl
aaa
cld
mov
sti
cmc
sub
mov
jmp
pop
fs
outsl
mov
and
cmp
xchg
xor
mov
jg
incl
inc
mov
out
aad
fstps
add
cmp
mov
lods
fsub
fdivrs
cmp
jmp
gs
rcll
add
xchg
and
adc
and
push
pop
fsubs
fcoms
ljmp
rolb
testl
jno
lods
shrb
lcall
loop
or
add
adc
mov
sub
fcmovu
jg
push
std
jp
push
sbb
push
fdiv
cmp
mov
into
out
inc
sub
ljmp
fidivs
jno
push
cmpsl
lcall
movsb
hlt
sbb
nop
push
cmp
decl
ljmp
xchg
push
call
or
jnp
lret
mov
pushl
adc
xchg
xchg
push
andb
out
fnstsw
xor
xchg
xor
decl
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
sahf
outsl
dec
out
mov
dec
push
push
insl
fadds
and
ljmp
xor
xchg
movsb
in
and
int3
rcr
mov
xchg
sbb
ljmp
rclb
adc
dec
mov
movsl
dec
pop
loop
out
pop
insl
add
sub
inc
repnz
dec
xor
decl
dec
out
rorl
sbb
movsl
or
stc
addb
sbb
jecxz
cld
inc
sbb
inc
inc
push
rclb
mov
lret
xchg
shrb
cmpsb
fiaddl
mov
fwait
lea
cmp
dec
mov
fdiv
adc
xchg
xchg
aad
mov
mov
pop
jmp
mov
jmp
mov
es
shll
jecxz
lds
call
cmp
mov
push
leave
iret
pop
sub
out
insb
dec
or
cmc
outsb
sbbl
jl
daa
mov
test
ljmp
push
push
or
mov
mov
add
xor
movsb
lea
das
nop
inc
popa
jmp
mov
mov
aas
int3
insb
popf
sahf
stos
pushf
in
neg
inc
push
dec
push
sub
repz
add
lret
or
in
mov
dec
mov
stc
sbb
ret
sbb
mov
int
lcall
repnz
lds
and
adc
lret
mov
fdivr
jmp
dec
push
fwait
aas
dec
call
lahf
pop
lock
in
out
push
xor
xlat
jbe
loop
ja
std
icebp
add
lcall
shl
lret
mov
or
cltd
add
iret
repnz
movsb
lods
test
stc
dec
lock
decl
jb
dec
mov
dec
mov
sti
std
xor
add
out
sbb
sbb
lret
fisttps
divl
outsl
add
xor
mov
jb
repz
imul
push
rcrb
adc
adc
inc
movsl
jno
cmc
stos
add
adc
mov
sub
popa
incl
mov
and
push
or
push
out
mov
push
xchg
push
loop
fists
cld
popa
int
loopne
out
pushf
adc
xor
push
xchg
add
mov
adc
decl
out
pushf
mov
and
repz
popf
mov
or
xor
ljmp
cli
inc
mov
sahf
xor
xor
aas
adc
addl
call
sub
stos
cmp
dec
mov
push
or
negl
sub
sub
orb
outsb
das
pop
jns
jg
movsl
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
ljmp
test
ficomps
pop
das
push
push
lds
and
fdivs
in
mov
negl
mov
test
and
jp
mov
sub
cmp
inc
repnz
in
sub
dec
testl
push
jae
jb
out
sub
xor
push
popa
add
jg
lret
push
jmp
outsb
jb
mov
leave
xor
mov
daa
test
push
addl
fnstenv
jb
mov
ljmp
adc
add
fdiv
sti
idivl
pusha
rorb
push
incl
adc
inc
jg
fadds
sub
mov
ret
lock
fs
pushl
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
cmp
jg
incl
push
and
shll
test
cmp
inc
push
push
mov
loop
ljmp
or
js
and
lret
out
add
movsl
push
mov
push
jl
cmpb
add
pop
xchg
mov
cmp
jo
mov
add
fwait
mov
inc
jnp
incl
add
sbb
daa
dec
lahf
add
nop
xor
and
jl
ret
aam
in
fisttpll
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
int
fildl
sub
xor
dec
inc
ret
add
xor
sub
divb
rorb
jbe
pop
cmp
sbb
arpl
dec
jae
jp
cmp
out
xchg
adc
mov
mov
cmp
push
mov
push
cmp
xor
jle
es
ljmp
in
mov
dec
out
xor
lcall
push
aad
push
ficomps
fistpl
fwait
nop
or
adc
test
jg
andb
cmp
insb
add
dec
or
pushl
fwait
sbb
inc
pop
ret
adc
les
dec
add
jbe
or
lcall
mov
repnz
leave
mov
push
jle
sub
inc
pop
pop
lock
test
jle
ret
das
into
pop
sbb
push
es
mov
popf
adc
leave
jne
cld
ror
inc
mov
out
call
sub
mov
daa
shlb
mov
ss
outsb
or
clc
inc
out
pop
testl
push
sbb
lret
pop
sub
xchg
repz
std
aam
mov
mov
arpl
mov
jle
jo
jl
xor
aaa
sti
lcall
test
push
push
lods
add
daa
push
dec
nop
call
ret
fcomip
xchg
push
loop
mov
pop
outsl
js
jo
sub
movsb
jns
pop
inc
sub
add
scas
cltd
fs
frstor
push
adcb
hlt
jmp
pushf
and
or
les
popa
arpl
movsb
iret
lahf
sub
adc
fistps
mov
sbb
in
push
jno
inc
mov
test
xor
mov
xor
call
mov
dec
je
mov
push
mov
sub
push
cld
lods
cmp
ljmp
stos
cli
ljmp
dec
mov
mov
pushf
push
ljmp
mov
enter
or
in
mov
adc
mov
jo
sbb
mov
lcall
test
fs
ret
shlb
or
lds
pop
mov
incl
pop
sbb
inc
sbb
push
mov
or
lcall
int
or
sbb
mov
fsubrl
inc
out
mov
je
mov
lods
lock
das
add
adc
add
push
pop
xor
xor
xor
in
movsb
or
mov
sarb
decl
xchg
bnd
rol
push
js
lret
lcall
adc
cmc
pop
out
xor
enter
mov
mov
mov
push
hlt
ret
lcall
mov
jns
lcall
test
pushf
cmpb
call
sbb
data16
push
inc
or
dec
jmp
inc
stc
xor
xor
and
mov
mov
pusha
dec
repz
dec
dec
jae
outsl
sub
nop
jg
jg
popf
xorl
jecxz
mov
add
mov
fldt
cld
repz
in
lret
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
rcrb
out
into
lods
std
or
fildll
xor
int
jg
call
sbb
push
out
out
push
jae
imul
mov
loopne
mov
xchg
lods
lods
adc
ljmp
clc
fs
cmp
insb
pop
lea
movsb
insl
mov
pop
sti
add
out
xchg
adc
xor
lret
lods
aad
lret
clc
cmp
xor
out
pop
dec
or
std
mov
stos
cli
fwait
push
mov
jo
xor
or
dec
fsubrl
test
sub
testb
mov
fbld
icebp
push
mov
pop
ficoms
xchg
jb
pusha
movsb
push
cmpsl
inc
lods
ljmp
or
mov
mov
and
jo
repnz
add
rcll
arpl
stos
rcll
sub
ljmp
lret
jb
mov
test
jmp
inc
out
jb
sub
imulb
fadd
pop
lcall
sbb
bound
inc
dec
test
cmpsl
or
shlb
mov
pusha
xor
rolb
call
sub
or
cmpsb
push
dec
dec
mov
xchg
arpl
test
xor
jle
mov
in
jmp
pop
loopne
or
pusha
xorb
ss
xor
mov
mov
or
add
or
mov
jmp
outsl
xor
loop
ja
in
add
push
adc
xchg
add
inc
sbb
call
mov
pop
xor
stos
rcr
push
sbb
sbb
in
mov
dec
xor
popf
xor
ret
inc
mov
out
push
mov
cmp
xor
out
xor
mov
rcll
sub
test
ljmp
and
and
int
push
repz
out
or
popa
push
xor
xchg
mov
mov
mov
inc
xlat
sbb
mov
pushl
mov
dec
mov
jae
cmp
adc
popf
leave
adc
inc
aad
jmp
jne
jo
fldenv
mov
fldt
outsb
push
sbb
mov
mov
leavew
call
loopne
push
jp
sbb
insb
pop
in
negb
lods
pop
xchg
xor
in
mov
pop
stc
in
jne
daa
movsl
je
jmp
lcall
call
sahf
mov
adc
mov
fnstcw
lcall
in
sbb
fimuls
adc
ljmp
push
push
mov
fsubrs
test
jge
xorb
adc
out
xlat
mov
call
add
in
mov
addb
push
int3
jae
inc
out
pop
rorb
jge
test
jns
aas
mov
data16
fcomps
cmp
scas
xor
adc
fidivrl
mov
mov
incl
movsl
sub
push
jp
jo
je
pop
pop
pusha
dec
dec
push
inc
inc
dec
push
sti
incl
insb
out
and
rorb
or
ljmp
sub
imul
xorb
xchg
cli
call
sub
jne
xchg
fisttpll
mov
test
add
add
fprem
decl
cmp
push
lods
xchg
fsubs
dec
jg
sbb
jle
cmp
dec
decl
sbb
push
fdivrl
fnstcw
jmp
incl
sbb
aas
rorl
jecxz
mov
inc
stos
sub
mov
scas
sbb
pushf
pushl
and
repnz
pop
aaa
inc
add
push
repnz
popf
cld
orb
pop
ljmp
add
sarb
mov
icebp
push
add
sub
jmp
pop
fcmovb
cmp
xchg
dec
add
push
gs
push
adc
lcall
mov
mov
cmp
dec
jae
mov
cmp
mov
xchg
nop
cs
cmp
sub
or
xchg
lahf
mov
jg
jle
cwtl
inc
in
push
inc
or
push
sar
das
clc
sub
mov
clc
int3
jl
sub
jae
mov
mov
insb
xlat
xchg
aad
stc
in
lock
jg
pushf
aad
push
mov
daa
inc
or
push
aam
cltd
sbb
and
inc
fbld
scas
data16
jne
mov
popa
mov
inc
jae
adc
pushf
mov
call
inc
pop
sub
cmp
dec
lock
mov
test
jmp
jge
sbb
jecxz
xor
lcall
cwtl
and
divb
mov
add
in
mov
outsl
mov
pop
push
fwait
cltd
pop
mov
mov
and
sar
ljmp
pop
jno
sbb
lods
jae
stos
rorl
nop
scas
jge
mov
push
mov
pop
in
push
push
pop
in
incl
clc
popf
or
js
jle
and
mov
aas
out
test
mov
cmp
pusha
xchg
popf
jl
in
dec
or
push
push
xor
mov
xchg
outsl
push
call
fdivs
dec
jmp
stc
lcall
cmc
ljmp
scas
and
push
pop
mov
fildll
push
test
inc
dec
lock
fbstp
adc
cli
lods
jg
movl
mov
xor
movsl
aad
loopne
or
lods
pop
loop
dec
outsl
es
aas
push
sbb
int
mulb
call
aad
clc
cmc
lret
stc
pop
cmp
lods
jbe
popf
dec
rorl
imul
inc
pop
icebp
inc
xchg
ret
shlb
pop
bound
hlt
pushl
daa
cmp
mov
dec
fists
dec
adc
loop
mov
xor
call
dec
push
test
data16
and
popa
jno
int
repz
dec
xchg
pop
cmp
cmpsb
mov
jo
iret
jns
add
add
pushl
push
cmp
cs
jo
mov
imul
lock
jg
scas
inc
pop
sbb
sarb
packssdw
movsb
ret
cmp
fsts
pushl
push
and
ret
div
fs
xor
xchg
mov
hlt
mov
jno
jecxz
pop
jp
incl
out
inc
jnp
and
and
mov
xor
stos
sbb
add
pop
pop
icebp
ljmp
mov
lret
xor
fidivrl
int3
and
aam
mov
lock
sub
sti
jmp
and
sarl
std
lahf
jmp
cli
pop
lahf
out
incb
jg
out
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
adc
daa
xchg
add
jmp
xlat
xor
mov
mov
mov
stc
inc
add
in
push
loopne
mov
mov
pushl
mov
pop
mov
jns
subl
xor
loope
testb
jmp
lcall
data16
ds
sub
ds
punpcklwd
js
mov
sub
sub
incl
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
test
pop
pop
lods
dec
or
loop
ljmp
adc
stos
stc
imul
ja
mov
pop
mov
xor
or
inc
jo
mov
js
cmpsl
inc
inc
mov
push
mov
std
push
jp
dec
call
xor
mov
je
or
sub
jmp
sar
rcrb
mov
adc
sub
popf
lahf
jmp
xchg
outsb
arpl
push
call
adc
sub
and
jg
fistps
js
jl
push
and
push
mov
pop
jb
pop
mov
call
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cmp
test
cmp
ljmp
call
mov
xchg
popf
enter
addr16
mov
daa
cs
scas
dec
test
push
test
dec
cmp
mov
lods
push
push
mov
sbb
pop
cmpl
adc
pop
pushf
jmp
call
mov
cmp
sbb
inc
out
xor
add
inc
cmp
cmp
cmp
pop
je
insl
std
sti
movsb
iret
jg
xchg
mov
mov
loop
sub
incl
gs
das
out
jae
aas
jo
mov
dec
mov
sahf
mov
incl
fwait
subl
mov
jle
mov
xchg
aam
jb
stc
lods
pop
cwtl
aad
decl
mov
aad
add
mov
rorl
pop
ret
jg
lret
outsl
dec
aas
lods
lcall
pusha
fisttpl
push
and
je
scas
clc
incl
inc
cmpb
xchg
loop
jge
cmp
iret
mov
aam
call
and
cmpsb
cwtl
pop
imul
jp
imul
aaa
scas
push
xorb
sarb
pushl
xor
sbb
mov
pusha
fisubrs
push
inc
xorl
add
jmp
pop
fwait
mov
insl
mov
adc
pop
mov
jecxz
sbb
negb
jmp
sub
push
addr16
imul
mov
sbb
jg
ret
and
js
lahf
jo
jl
push
movsb
aad
call
bnd
mov
ret
mov
sbb
cmp
jbe
mov
xlat
sti
mov
jg
pop
mov
sbb
cmpb
ja
lret
lcall
xchg
inc
sub
cmp
or
clc
sub
inc
or
loope
pusha
lds
push
jg
pop
cmc
ds
rcrb
xor
cmc
cmp
inc
ret
sahf
push
cmpsl
cmp
cld
xor
cwtl
aad
inc
notb
cmp
or
pop
fdivrl
aam
inc
adc
xor
popl
aam
pop
inc
jmp
inc
lds
xor
decl
lock
lock
push
clc
mov
in
flds
cmpsl
cmp
cmpb
sbb
pushl
or
dec
in
pop
jge
push
sub
test
sarb
xchg
les
mov
push
jp
aas
repnz
ss
andb
mov
sbb
cmp
into
movsl
cmp
or
icebp
mov
cltd
aad
std
out
jne
adc
call
loop
stos
mov
pop
add
or
cmpsb
fwait
mov
icebp
mov
ljmp
incb
or
cld
inc
push
imul
mov
rorb
pushf
movsb
test
inc
les
lods
mov
jmp
js
or
sbb
out
and
push
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
cld
dec
loope
loopne
in
adc
push
mov
daa
mov
xor
mov
icebp
addl
inc
jmp
xchg
dec
lods
lock
add
gs
out
sub
aad
lcall
add
push
mov
push
jne
inc
mov
add
mov
mov
push
clc
incl
jp
jno
loope
pop
in
cmp
push
dec
dec
xchg
push
gs
decl
dec
cmp
or
push
xchg
inc
rolb
jae
dec
push
pushf
pusha
cld
in
pop
pop
jge
imul
jo
das
cmp
ret
lcall
inc
mov
dec
push
mov
push
fcoml
test
addr16
and
xor
lcall
call
lret
xchg
iret
pop
mov
push
aaa
and
pop
xchg
rclb
inc
cld
fists
mov
out
mov
popa
mov
mov
call
clc
sbb
mov
pop
mov
pop
lahf
or
or
call
hlt
stc
sub
jne
or
mov
jnp
sti
or
repnz
or
ret
adc
pop
lds
mov
out
shrl
addl
es
sbb
sbb
inc
in
mov
ljmp
cld
jns
mov
ror
dec
cs
mov
sbb
jbe
dec
mov
mov
xlat
mov
mov
pop
pusha
addr16
xchg
xchg
sub
shll
sti
popf
lods
xchg
mov
popl
xchg
ljmp
sar
lock
add
sub
loopne
mov
jmp
mov
dec
cmp
std
iret
add
jmp
scas
mov
xor
sub
cmp
or
call
roll
sbbb
pop
pop
inc
and
jl
add
add
sbb
fldt
mov
xor
mov
pop
pminsw
dec
xchg
push
fcompl
cli
jnp
addr16
mov
ficompl
outsl
fdiv
cmp
inc
push
nop
sahf
jno
insl
adc
je
mov
cmc
call
movsb
or
andl
inc
and
xchg
mov
and
jg
int
or
ret
mov
or
sbb
stos
mov
mov
lret
mov
sbb
sbb
fs
mov
jmp
jno
pop
sahf
and
lods
jo
pop
icebp
js
push
aas
xchg
inc
inc
xorb
mov
hlt
fcomip
dec
leave
adc
mov
mov
ljmp
sbb
inc
mov
cmp
cmc
enter
dec
mov
adc
mov
sub
mov
adc
sub
sbb
dec
jno
jbe
pop
jl
cmp
push
popf
aad
sub
loopne
push
imul
fcos
pushl
jge
mov
fucom
mov
mov
pop
pushf
in
jns
push
addr16
sub
sub
lcall
lcall
xor
scas
pop
cltd
nop
xor
jmp
mov
cli
push
fucom
sub
lahf
or
call
mov
shlb
mov
mov
lock
incl
shrl
fs
sbb
xchg
mov
mov
push
push
xchg
inc
jns
popa
sub
stos
sbb
arpl
mov
push
dec
or
in
push
cmp
cmp
pop
and
rorl
push
and
mov
jle
lods
pop
aaa
xchg
sti
clc
cmpsl
adc
popf
cmp
mov
lods
jmp
jnp
sbb
pop
push
neg
xchg
or
adc
ljmp
push
jg
mov
test
aad
mov
adc
mov
ljmp
subb
inc
lret
push
or
lds
arpl
jp
lock
lds
test
cmp
mov
and
call
xchg
ret
xchg
mov
adc
icebp
or
data16
pop
add
lcall
fwait
pop
mov
iret
sbb
cmp
dec
mov
pop
push
xor
jmp
pop
and
mov
push
mov
xchg
mov
adc
js
fs
movsl
xlat
fmuls
testb
xor
in
bound
inc
ja
lcall
adc
ljmp
cmpl
sbb
leave
push
xor
or
adc
cmpsl
jle
mov
pushl
jbe
pop
lods
test
jns
dec
jne
adc
icebp
add
adc
rclb
sbb
add
lods
stc
stos
add
cmpsl
mov
in
pushl
mov
je
je
fstps
ds
push
call
call
daa
xchg
nop
stos
smsw
sub
popf
add
push
jg
in
adc
sbb
adc
and
mov
repz
inc
mov
mov
ljmp
mov
lcall
aad
push
add
xchg
jl
jmp
cltd
xchg
les
fisttpl
add
inc
pushl
cmc
cmp
loopne
xchg
push
cli
fucomp
test
stos
ljmp
andl
xchg
test
sub
cmp
cli
mov
incl
out
movsl
sbb
pop
movsl
cmp
mov
cmp
pushl
and
xchg
sbb
aad
lods
dec
arpl
pushl
pop
pop
inc
pop
xlat
mov
jge
or
sub
push
jge
inc
mov
sub
lcall
ss
mov
shll
and
add
in
cmp
sbb
and
mov
outsb
jmp
pop
ja
sbb
test
decl
or
jmp
and
and
icebp
sub
test
push
xor
push
hlt
ljmp
xor
mov
fs
aas
pop
add
fidivrs
xchg
adc
leave
mov
cmp
pop
xor
fwait
jle
icebp
aas
cmp
cmp
push
sbb
or
or
cmp
std
xor
push
pop
push
rcr
in
adc
pusha
add
ds
lcall
and
jle
inc
js
stos
or
sarl
jle
icebp
int
sti
push
xchg
aaa
repz
ds
cmp
std
sub
pushf
sub
mov
dec
mov
jne
xchg
xchg
add
fistps
mov
jg
pop
decl
test
push
adc
mov
lret
or
mov
mov
xlat
clc
lcall
mov
fildl
push
lock
cs
ss
call
outsl
and
fcomps
xchg
fsubl
sub
lods
data16
and
fadds
mov
inc
dec
fbstp
xchg
test
pop
inc
mov
xlat
aas
dec
loopne
or
imul
jo
pushf
cmp
mov
jno
js
cmp
xchg
aaa
icebp
jecxz
mov
mov
gs
add
and
dec
cmpsl
aaa
jmp
xor
icebp
sbb
js
and
test
gs
and
or
adc
jmp
in
sbb
ds
or
cmp
sahf
xchg
ds
ja
adc
call
lahf
sbbb
sub
decb
ljmp
mov
in
jmp
mov
inc
jbe
mov
ljmp
xchg
les
sub
adc
jmp
cmp
jmp
ficoms
push
jmp
cmp
lret
gs
rorl
icebp
jne
call
fsubrl
ljmp
push
dec
mov
pop
cmp
js
mov
inc
mov
in
out
xchg
push
mov
add
test
cmp
xor
cli
imul
xor
mov
mov
jp
mov
mov
dec
fs
dec
mov
fstpt
mov
mov
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
cmpsb
jmp
stos
xor
add
add
mov
out
je
push
rcrl
mov
inc
rcll
jno
pushl
roll
lea
inc
and
inc
add
bnd
push
movsl
mov
pushf
xor
sbb
fdivs
push
mov
cmp
xlat
sbb
incl
xlat
and
pop
aaa
mov
lock
and
pop
iret
jne
adc
mov
lcall
aaa
cmp
adc
scas
loop
sub
loopne
xor
or
int
sub
aaa
adc
shrl
push
jb
push
pop
sahf
cmp
ds
jmp
dec
es
sar
mov
xchg
incl
cli
xor
xchg
adc
std
mov
test
jbe
icebp
int3
inc
sbb
and
sub
inc
in
pushl
cmp
or
outsl
test
in
out
iret
fcmovnbe
pop
sub
jp
xchg
jae
js
cmp
decl
icebp
int3
cmp
or
or
repz
ret
cmpsl
xchg
ds
xchg
stos
sbb
fcomip
gs
das
sub
mov
mov
testl
imul
mov
movsb
imul
mov
cli
jno
cmpsw
dec
cmp
test
adc
in
dec
rcll
aas
jmp
es
cmp
and
jge
cld
push
sub
clc
ljmp
test
imul
jmp
jp
insl
ds
push
scas
pushf
sub
int
or
fmuls
lcall
xor
pushf
mov
xlat
ret
dec
jmp
je
cmpsb
sahf
and
jmp
repnz
fisubs
fs
out
mov
mov
jae
stos
lcall
lock
addr16
mov
cmpsl
in
decl
stos
push
mov
cld
fbstp
lds
aad
add
lea
stos
sub
pop
push
push
push
push
xchg
and
jle
xor
sub
lcall
inc
xlat
jmp
mov
xchg
and
or
aaa
iret
arpl
add
mov
mov
test
ljmp
cmpsb
xchg
push
mov
in
push
jb
xlat
in
mov
test
mov
or
lcall
mov
mov
lods
test
cmp
incb
stos
lods
popa
clc
sbbl
dec
cmp
adc
pop
movsb
popf
cmc
shll
and
adc
cmpsb
push
adc
out
mov
in
add
pop
stos
lahf
sbb
lea
aas
mov
fdivrs
push
inc
sarl
cmp
incl
xchg
xor
outsl
push
sub
out
push
loop
adc
addps
jns
jg
movsl
mov
xchg
lods
shll
clc
lods
sub
mov
jge
add
xchg
or
pop
push
and
cwtl
imul
xor
sub
lods
testl
or
mov
sbb
jmp
orb
inc
adc
jnp
call
leave
push
sbb
in
jge
or
ljmp
add
mov
mov
jno
or
or
std
xchg
es
rorb
in
ljmp
xchg
adc
lcall
rcll
loope
pop
sti
mov
mov
push
test
sub
repnz
cmpsl
rcrb
lea
pop
jge
and
pop
ja
jbe
outsb
outsl
aaa
push
std
pushl
das
push
dec
inc
leave
push
or
sbb
sub
ljmp
add
movsl
out
push
mov
add
pop
add
jbe
mov
notb
arpl
xor
add
pop
decl
addr16
std
adc
xor
iret
jle
sbbl
inc
imul
jns
lcall
out
and
adc
fsubs
cli
push
ret
push
sub
js
add
decl
rorl
add
add
pop
add
lret
inc
fucomip
sbbb
out
ss
ljmp
jmp
shll
ret
sub
fcomp
add
into
ret
ljmp
js
sub
xor
add
inc
pop
insl
cmc
mov
or
cs
es
and
jg
mov
pop
stos
add
std
sbb
push
sbbb
dec
mov
mov
push
in
movsl
popa
add
fcmove
push
sub
dec
imul
mov
pop
out
xorb
dec
hlt
mov
fnstenv
pop
pop
jno
adc
incl
stos
ds
pop
pop
xor
subl
cld
add
dec
call
pop
mov
mov
fwait
nop
mov
jo
jb
fisttps
pop
ret
mov
mov
dec
sarl
cwtl
je
jle
push
insl
mov
mov
xchg
filds
dec
leave
add
ret
je
push
jae
add
test
xchg
incl
dec
dec
jl
dec
push
mov
inc
or
idiv
call
fsts
aad
lods
in
mov
mov
hlt
jecxz
cmp
ljmp
or
mov
das
xchg
add
jnp
mov
js
cli
call
dec
movsb
movsl
shl
xchg
or
jne
add
push
out
out
pushf
aam
jp
pushl
insb
cltd
cwtl
pop
mov
inc
mov
push
push
es
add
movb
jg
mov
push
cli
lea
iret
and
sub
pop
dec
loop
filds
mov
mov
xchg
mov
xchg
stos
dec
cld
sbb
push
xchg
mov
dec
ljmp
je
adc
xchg
jnp
inc
clc
cmpsb
sbb
push
ds
loop
ljmp
sbb
dec
imulb
add
in
adc
icebp
leave
cmp
jmp
fildll
or
shrb
sbb
pop
inc
pop
cmp
push
jb
mov
xor
adc
test
cmp
pop
inc
xor
out
imul
iret
cmp
inc
lret
data16
mov
decl
pop
lock
adc
std
inc
popa
out
sti
mov
mov
ljmp
mov
cmp
aas
jge
fucomi
rorl
xchg
cmp
jbe
add
das
sar
test
jge
lods
xor
andl
mov
or
ret
ljmp
or
pop
cmp
jns
and
das
mov
pop
xchg
lock
ds
in
lds
xchg
push
cmpsb
mov
xchg
fistpll
and
dec
inc
stos
movsb
jecxz
xchg
aaa
adc
jmp
fcom
xchg
mov
aad
mov
and
popa
push
push
loop
or
xchg
cmc
cld
sub
sub
jmp
mov
pop
add
add
add
push
sbb
cmp
jle
xor
or
shlb
push
add
mov
inc
jl
jg
bswap
dec
fs
lcall
mov
cli
lcall
sahf
stc
jb
and
pop
dec
je
jmp
mov
ljmp
icebp
xchg
out
iret
push
xor
xchg
and
clc
lock
xchg
test
out
sbb
or
int
xchg
xor
mov
add
adc
stos
and
or
lcall
fs
adc
outsb
fs
repz
or
sub
xchg
jl
cld
incl
pop
xchg
sub
xor
mov
je
adc
add
lret
jmp
jecxz
lcall
fdivrs
ja
inc
add
sbb
dec
push
and
bound
dec
pop
xor
pop
pusha
lods
dec
cs
test
mov
sub
sbbl
xchg
jb
and
cli
repz
add
xchg
fs
ds
mov
ret
sub
push
xchg
mov
scas
shrb
jmp
jp
lcall
loopne
add
ljmp
sbb
xchg
lahf
in
rcrb
loop
mov
andl
mov
and
xchg
ljmp
pop
inc
push
mov
adc
pop
mov
dec
or
mov
mov
push
sub
or
int3
lcall
nop
loopne
push
mov
adc
stos
add
and
ljmp
sbb
ds
insl
ficompl
push
sub
cmp
bound
fistps
cmpsl
fmull
rcr
je
lock
repz
ret
and
and
xlat
push
dec
push
mov
lea
add
sbb
adc
or
and
popf
ja
adc
lods
add
inc
fisubrl
cwtl
out
or
xchg
lahf
out
mov
pop
decl
cmpsb
pop
cli
pop
ficoml
adc
roll
pop
lahf
cmp
cmp
inc
stos
cmp
xlat
jp,pt
mov
xor
lods
sub
lock
push
fiaddl
jmp
cmp
and
sub
jle
sbb
sbb
out
sahf
fwait
mov
push
sahf
add
loope
sbb
or
mov
std
fmuls
cmp
push
call
push
jb
test
add
lds
cld
fbld
outsl
cmp
mov
sub
sub
lcall
shrb
dec
fimuls
cmp
push
push
xor
add
fldpi
pop
pop
adc
stos
push
mov
and
std
les
pop
loopne
jg
sbb
or
sbb
push
sub
repz
incl
dec
dec
xchg
fcmove
aad
imul
outsl
rcrl
xchg
pop
sbb
and
outsb
movsl
pop
ljmp
pop
test
ja
and
adc
adc
pop
ficoml
xchg
pop
sub
or
outsl
clc
subb
add
mov
sub
jg
or
arpl
dec
dec
mov
mov
mov
imul
jle
push
push
stos
lods
sti
dec
stc
or
mov
fstl
iret
movsl
mov
cmovnp
pop
mov
aaa
or
loope
jmp
xchg
mov
jnp
push
inc
mov
pop
lcall
jg
add
in
test
jl
cmc
loop
push
push
adc
sarb
call
push
idivb
xor
xor
aam
jb
push
cmp
fsubrs
push
outsl
cli
lcall
cmp
popf
hlt
dec
adc
jb
pop
js
xor
ljmp
xchg
shrb
out
xchg
add
mov
xlat
arpl
incl
jae
movsl
xor
or
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
in
xchg
addr16
cwtl
xchg
sub
icebp
arpl
nop
cwtl
jmp
clc
mov
icebp
shrb
pop
inc
jecxz
fstl
cwtl
je
or
sub
lcall
cmp
jo
enter
rorb
addl
push
es
lret
or
mov
inc
adc
sbb
sub
std
add
mov
scas
pop
sbb
sub
inc
sub
mov
jb
inc
dec
lock
ljmp
jle
dec
and
and
xchg
hlt
xchg
add
push
loope
lahf
push
mov
mov
xchg
inc
adc
inc
loopne
testb
mov
ljmp
and
leave
jo
iret
iret
adc
sbb
inc
sbb
in
stc
test
sar
call
jmp
fdivrl
insl
xor
ja
push
xor
dec
cwtl
adc
insb
pushf
fcompl
lcall
mov
cmp
jmp
mov
leave
push
or
pop
loope
jg
mov
and
cmp
mov
sub
aad
into
imul
lret
int
call
out
xchg
dec
sbb
cmp
inc
or
dec
test
cmp
xchg
insl
sub
incl
shll
cmp
lcall
into
xlat
and
idiv
stos
push
sub
push
mov
pop
sub
gs
test
ljmp
cmpsb
leave
gs
cs
mov
mov
pusha
outsl
arpl
sbb
pushl
cld
push
jo
sub
scas
inc
ds
cmp
mov
jae
sub
adc
pop
decl
push
in
das
and
xor
adc
int3
repz
pushf
pop
imul
loop
mov
adc
pop
lock
shrl
in
popa
aad
inc
push
ficoms
mov
push
ret
jl
mov
lea
xor
test
sbb
mov
loope
push
idivl
inc
mov
jmp
test
in
jae
pop
imul
mov
rol
outsb
sub
jmp
aam
mov
outsb
xchg
rorb
in
or
out
ret
aaa
push
jmp
shll
push
mov
loopne
push
enter
mov
roll
mov
push
scas
mov
shlb
mov
fnsave
mov
or
mov
jne
push
dec
js
and
call
ret
mov
icebp
lret
sbb
jne
cmc
sbb
jmp
stc
xchg
sub
mov
mov
int3
cmp
imull
push
xor
inc
sahf
and
sub
incl
cmp
sbb
dec
push
mov
sub
jb
mov
mov
xchg
mov
xchg
or
idivl
loop
cltd
and
jg
pop
xchg
xchg
mov
icebp
out
lods
sti
int3
stos
lods
inc
nop
lcall
or
repz
fwait
les
mov
jl,pt
adc
test
xor
add
add
jae
or
jl
outsl
cwtl
int3
mov
push
mov
out
ss
inc
pop
lcall
iret
daa
and
push
call
decl
cmp
jno
lcall
ljmp
addr16
jg
call
or
jnp
jmp
xchg
lea
loope
mov
mov
and
cmp
inc
cmpsl
dec
jns
inc
and
roll
jae
push
ljmp
js
cmpsb
dec
stos
mov
cwtl
sub
dec
adc
aaa
das
repz
scas
mov
call
std
sbb
int
cmp
push
test
jne
repnz
rcll
jmp
xchg
mov
adc
xchg
jne
repz
rcl
cmpsl
iret
and
push
scas
mov
std
clc
push
mov
inc
leave
mov
lcall
xor
pop
icebp
call
mov
jns
dec
sub
cmp
test
inc
jnp,pt
jbe
call
jno
in
cld
mov
or
arpl
mov
pop
mov
sbbb
clc
inc
dec
jno
sbb
xchg
xor
or
mov
ss
ljmp
and
add
push
push
inc
xchg
inc
pop
mov
mov
outsl
ss
incl
add
xchg
int
lock
and
incl
popa
out
mov
and
dec
mov
dec
repz
mov
in
arpl
xchg
sbb
stos
push
ljmp
jmp
in
rcrl
aad
loope
popf
scas
and
mov
leave
ljmp
jns
popa
pop
add
loope
or
dec
dec
leave
das
ja
pminub
je
or
xchg
flds
jmp
cmp
xchg
xchg
stc
inc
adcb
mov
insb
cmc
out
push
pop
std
incl
es
iret
jbe
imul
sbb
test
scas
mov
fcomps
les
and
decl
adcb
fwait
mov
ss
push
dec
lret
cmp
test
incl
mov
xor
mov
aad
add
add
loop
cmc
cld
jle
mov
scas
lcall
movsl
sub
pop
vmptrst
ja
mov
pop
ljmp
decl
sbb
shll
jmp
mov
stos
inc
mov
push
out
test
sbb
bnd
repz
loopne
adc
repz
jmp
out
loop
mov
shl
cmp
fsts
adc
pushf
ljmp
decl
out
cmpsl
shll
push
inc
fimull
add
pusha
data16
adc
in
cmp
jmp
out
clc
dec
push
add
mov
sarb
xor
xchg
mov
inc
hlt
or
mov
jmp
mov
and
insl
arpl
pop
test
add
ret
mov
xorb
jg
ret
ljmp
cmpsl
cmpsl
dec
push
fldl
movsl
gs
mov
ror
and
sbb
repnz
test
call
cmp
mov
movl
pop
dec
add
ret
jle
or
das
ret
xchg
mov
inc
sbb
jecxz
out
inc
jge
mov
adc
incl
leave
cmp
in
in
add
fadds
and
cltd
aam
xchg
inc
xor
sbb
add
lcall
jmp
mov
popf
lahf
fstpl
fildl
jmp
or
les
xor
mov
dec
lea
jp
sahf
fcomps
push
jmp
push
loopne
call
xlat
adc
mov
scas
loope
inc
push
adc
lcall
dec
call
adc
lea
gs
stos
fxsave
js
clc
cmp
filds
in
add
push
subl
mov
pop
dec
cmp
inc
movsb
push
sti
and
fxch
out
sbb
or
aas
ljmp
cmp
or
cwtl
pop
dec
sub
add
jmp
rorb
xor
add
mov
xor
ljmp
adc
push
stos
mov
adc
sahf
adc
addl
push
das
mov
sbb
ret
decl
mov
test
mov
mov
ds
pop
stos
mov
loope
inc
adc
mov
inc
data16
test
test
mov
mov
pop
or
test
cmpsl
fisubrs
out
ret
or
inc
or
pop
cmc
ljmp
sbb
inc
jbe
mov
sbb
adc
fiadds
xchg
fldenvs
ljmp
decl
testl
in
xor
adcb
push
push
out
fmulp
rcrb
test
jns
std
mov
bound
ljmp
mov
test
or
mov
idivl
sbb
add
xchg
repz
out
dec
mov
lahf
jmp
inc
xchg
movb
mov
outsl
mov
and
or
or
aad
ljmp
fidivrs
adc
roll
loop
push
pop
popa
jp
int3
mov
jns
cltd
jle
cmpsb
incb
hlt
pushl
xchg
imul
jecxz
mov
imul
xor
incl
mov
or
or
jge
in
andb
add
fdivl
or
aaa
push
in
out
jne
inc
das
shlb
mov
out
add
jle
loopne
ljmp
jp
ss
add
aam
jp
sbb
and
push
call
mov
orb
rcll
inc
fdivrl
sub
mov
mov
adc
cmp
fdivrs
hlt
pop
add
lods
rorb
lods
jle
fwait
call
xchg
insl
and
lods
or
es
loop
cmp
xorps
cli
rolb
or
stos
sub
aad
and
adc
inc
cmpsb
xchg
decl
test
lcall
mov
loopne
xchg
insb
cmp
repnz
lret
cmp
decl
sub
dec
xor
jmp
mov
sub
pushl
or
inc
dec
das
movsb
enter
jg
loop
mov
in
ds
std
cmp
repz
es
fisttps
cmc
pop
mov
ljmp
sub
adc
outsb
jg
jne
and
dec
mov
sbb
pushf
mov
inc
call
ficomps
icebp
popa
aad
adc
icebp
int
ljmp
fcmovu
ja
sub
add
push
sub
sub
loop
mov
fdivr
lcall
daa
add
adc
in
std
loop
inc
adc
mov
inc
push
xchg
call
sarb
jle
jmp
dec
mov
stos
xchg
mov
orb
jmp
jl
ljmp
in
out
jmp
or
popa
enter
lock
mov
cmp
cli
nop
addr16
push
cwtl
or
xor
in
ret
arpl
push
pop
test
jp
pop
sub
bound
call
enter
mov
mov
out
imul
pop
stos
fcoml
lcall
pushl
gs
stc
pop
mov
add
ret
fdivrs
mov
push
push
mov
arpl
lcall
push
dec
sub
test
stos
add
fidivs
jns
cmp
mov
push
lcall
xchg
lcall
fcos
arpl
bound
movsb
push
pop
popf
int
in
mov
shr
push
or
dec
cwtl
cmp
ljmp
pop
or
push
inc
shrb
xor
pop
stos
sub
scas
pushl
ds
icebp
mov
xchg
imul
out
mov
fldenv
mov
rolb
xchg
addr16
and
outsl
in
stc
pop
cmp
sub
and
push
cmp
decl
push
add
ljmp
jnp
adc
add
ds
inc
jl
call
mov
das
ljmp
mov
ficompl
stos
jp
dec
bound
pushl
cmpsb
sub
jae
push
mov
xor
inc
lret
fcomip
ss
leave
lock
cld
and
dec
or
and
imul
pop
push
insb
movsl
hlt
ja
mov
cmp
int
xor
push
fsts
scas
jne
mov
pop
xchg
std
ljmp
xchg
pop
insl
cmpl
cmp
jge
jmp
cltd
loopne
out
or
mov
lods
xchg
lods
aaa
ret
enter
bound
xor
pushl
into
fsub
adc
adc
cmpsl
and
cli
adc
xchg
mov
out
incl
xchg
xchg
pop
icebp
jno
add
add
dec
xor
sub
call
mov
mov
jg
jno
adc
test
push
fnstenv
dec
dec
dec
rorl
sarl
test
cltd
cs
into
jecxz
ficompl
lea
ss
sbb
xchg
cld
push
and
and
inc
inc
dec
xchg
pmulhuw
mov
xchg
xor
sub
aaa
or
icebp
out
mov
jbe
jg
jg
lods
into
out
xchg
mov
stos
or
aad
jmp
stos
mov
sub
mov
ret
scas
int3
pop
sub
lods
xchg
mov
scas
decl
roll
xor
test
push
xchg
jmp
cmp
shr
out
rcrl
xor
inc
add
jmp
xchg
lock
pushl
insl
popa
dec
fcoml
sti
mov
adc
mov
cmpsb
sbb
cmp
imul
ss
jg
ljmp
das
popf
ljmp
and
add
pushf
cs
ret
inc
xor
ljmp
cmpl
jle,pn
jmp
bound
mov
mov
cmp
ljmp
sbb
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
dec
lahf
jmp
push
pop
ljmp
push
and
idivb
ret
cld
mov
mov
addb
cmc
ljmp
mov
popa
mov
push
or
add
and
int
roll
mov
rclb
sbb
bound
mov
jg
data16
push
cmc
dec
data16
or
add
jecxz
mov
movl
add
arpl
sub
dec
jno
aad
and
and
pop
cld
or
cs
inc
xchg
jmp
and
cmp
insb
out
cmp
std
loope
jmp
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
push
in
int
cmc
adc
cmp
outsl
or
lahf
jecxz
sbb
sbb
or
shrb
call
lds
inc
out
inc
aaa
ljmp
adc
rorl
ljmp
add
rorl
shll
dec
jl
lods
push
or
ficompl
lcall
int
aam
into
test
imull
jo
jbe
inc
in
mov
imulb
popf
js
dec
test
push
mov
push
cltd
fcom
inc
jecxz
fnstenv
je
adc
fnstcw
mov
clc
test
arpl
test
stos
pop
loope
or
dec
adc
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
push
mov
push
cmp
call
std
lahf
daa
mov
mov
xchg
mov
sub
xchg
rol
push
jp
call
dec
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
jle
push
pushl
std
call
dec
add
mov
ja
dec
xchg
mov
mov
in
call
or
mov
mov
sbbl
cmpsb
addb
lcall
sub
rcr
movsl
ds
xor
daa
or
inc
push
lods
push
cld
repnz
insb
jne
shrb
and
ljmp
xchg
adc
push
sbb
lahf
mov
jle
cmp
adcb
decl
fs
addr16
jge,pn
mov
jmp
test
xor
push
es
in
std
mov
rolb
into
sbb
xorl
in
mov
lcall
shll
scas
je
cmpsl
ror
dec
je
aaa
inc
jge
jg
jg
mov
dec
pop
test
and
ljmp
pop
push
stos
inc
test
jle
mov
pop
pop
mov
jp
iret
or
lret
adcb
cs
jmp
add
addl
push
mov
mov
adc
lcall
push
mov
scas
sar
pop
jnp
inc
pop
hlt
loop
or
ljmp
push
or
popa
mov
inc
fimull
aad
rcrb
jo
ljmp
nop
pop
xchg
cmp
push
sti
add
cs
daa
cmp
les
inc
push
pop
js
dec
cmp
mov
mov
leave
es
mov
leave
shrb
and
incl
inc
shll
stc
neg
push
shlb
xor
dec
inc
mov
inc
ljmp
and
mov
pop
movsb
arpl
addl
call
aas
cmp
cmpsl
je
fidivl
xlat
dec
fimuls
in
lret
fisubl
outsl
mov
xchg
decl
cld
insb
cs
fs
and
fadd
std
jnp
mov
jno
mov
ljmp
pop
leave
jge
dec
test
cmc
sub
mov
cmp
ret
in
or
clc
dec
mov
push
lcall
fwait
decl
gs
sbb
arpl
out
lret
mov
jmp
mov
dec
sub
shlb
push
xor
mov
cmp
mov
push
das
rcrb
enter
enter
mov
sub
jmp
fcomip
fcoml
std
mov
pusha
sbb
or
push
hlt
lcall
aam
add
jmp
out
jl
jmp
jae
push
out
je
dec
mov
rcr
fwait
push
ror
pop
nop
aad
fadds
jge
mov
shl
das
dec
and
mov
jo
inc
aas
jle
cwtl
sar
incl
cmc
test
mov
or
or
fwait
and
inc
aaa
push
sahf
loop
icebp
dec
xchg
xor
adc
fcmovbe
call
inc
sub
fdivrs
sub
loop
std
lods
sub
pop
out
imul
addr16
stos
or
sub
mov
lock
mov
jecxz
call
popa
pop
outsb
outsb
out
fs
pop
int3
mov
sbb
int
in
mov
xor
aas
push
and
pop
and
dec
xchg
sti
stos
int
scas
mov
mov
jmp
ss
ss
sbbb
leave
dec
mov
pushl
sbb
pop
addr16
outsl
add
xchg
inc
pusha
cmpsb
add
insl
fdivs
pushl
push
lods
adc
in
sbbb
mov
cli
pop
aaa
mov
aas
les
sbb
sub
cmp
lock
jbe
push
mov
jmp
push
call
add
mov
imulb
out
stos
xchg
jb
aas
adc
push
or
lret
and
mov
inc
push
ljmp
ret
jmp
cmc
faddl
ja
loopne
adc
sub
sahf
js
xor
fistps
dec
aas
and
dec
and
jae
orl
pop
movsl
pshufw
cmc
push
mov
cmp
mov
fidivrs
int3
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
neg
mov
jg
in
insl
or
fwait
push
jbe
sbb
das
repz
imulb
cmp
leave
jmp
pop
ret
adc
arpl
shll
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
incl
jo
imul
or
lahf
je
loope
sbbb
jmp
lods
lods
in
adc
cmp
movsb
xchg
in
sub
jno
icebp
cmp
pop
pusha
pop
mov
hlt
popa
outsl
sbb
rorl
adc
xchg
inc
adc
call
ljmp
sbbl
pushf
sbb
loop
lock
jg
mov
lret
cmpsl
xchg
add
lcall
inc
mov
fadd
pop
push
or
xchg
mov
fcoms
das
xor
pushl
xorl
push
ret
xchg
test
fbstp
int3
aam
mov
test
rcrb
inc
jg
push
test
mov
pushf
pop
sub
outsb
data16
push
mov
push
loop
add
fdivrl
into
jns
cwtl
insb
test
lock
call
fs
jnp
mov
fnstsw
inc
jmp
mov
sub
push
notb
hlt
push
push
stos
sti
sub
sbb
ljmp
addb
inc
mov
inc
push
movsb
mov
cmp
out
ljmp
or
pop
jmp
imul
lret
outsb
imul
mov
sbb
lcall
sub
jo
loope
int3
jp
shll
scas
in
scas
popf
scas
movsb
pop
mov
ljmp
xchg
ss
sub
enter
pop
xor
sub
dec
ljmp
jmp
fcomip
jmp
dec
cmp
jne
shll
daa
mull
cmp
xbegin
jmp
jb
mov
gs
mov
pop
mov
jb
and
out
out
jge
xorl
mov
in
inc
inc
fisttpll
out
out
out
es
test
sub
pop
pmovmskb
fcomip
xchg
cld
lods
ret
add
std
mov
rcrb
lcall
test
adc
shll
fcmovbe
cmp
bound
pop
loopne
jmp
icebp
lret
xchg
sub
data16
int3
fdivrs
push
adcl
ret
rcrb
xchg
mov
jge
mov
add
mov
xor
sub
ljmp
sub
int
lahf
sub
lea
sub
adc
xor
pop
imul
mov
mov
int
or
cmp
test
ret
cli
and
negb
add
push
jl
push
negl
outsl
xchg
dec
inc
gs
call
inc
mov
mov
jbe
dec
sub
dec
pushf
sub
fnstcw
pop
sub
lock
sub
outsb
ffree
sbb
outsb
ljmp
sub
adc
cwtl
ja
int3
stos
mov
cmp
ljmp
fldenv
inc
push
shrl
ret
gs
sbb
mov
xlat
jmp
ljmp
sti
pop
xorl
call
push
daa
xchg
and
lock
call
hlt
rcll
les
ljmp
rcrl
inc
movsl
mov
push
rcr
es
loope
pop
dec
and
out
popf
or
jmp
mov
rcrb
mov
pop
icebp
js
or
mov
sbb
add
add
adc
movsl
in
fwait
pop
jge
cld
imul
imul
add
es
aam
push
add
mov
das
or
leave
fimuls
push
pushl
mov
decb
cli
mov
adc
in
mov
adcb
pop
push
add
int
pop
inc
adc
add
pop
sub
mov
inc
pop
ja
scas
loop
sar
out
or
addr16
pop
pop
inc
cltd
jg
xchg
shll
jmp
aam
jmp
fiaddl
jmp
push
sbb
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
arpl
pushl
incb
or
dec
roll
lods
or
mov
inc
fistpll
push
icebp
in
inc
int
ljmp
dec
jmp
fcmovne
sub
or
sub
incl
imul
imul
repz
add
push
fcomip
idiv
push
lcall
inc
ja
loop
push
mov
pop
or
cmp
insb
adc
sbb
test
fs
cmp
call
sbbl
xchg
and
mov
xor
popf
add
xlat
loopne
jnp
lahf
movsb
push
pusha
mov
add
clc
and
cmp
cmpl
call
push
xor
icebp
jmp
fimull
ljmp
dec
sub
push
add
sbb
dec
cmp
cmp
icebp
loope
in
std
push
cmp
std
lcall
inc
sub
xchg
into
xchg
push
dec
and
loope
push
aas
pop
ret
pop
mov
jg
pop
xor
cmp
stc
sbb
inc
mov
paddq
in
stos
and
insb
xchg
fistpl
lods
mov
call
les
mov
pusha
fwait
daa
or
xlat
sub
incl
cltd
test
mov
scas
ljmp
jo
hlt
not
mov
adc
lcall
mov
jno
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
sub
js
pushl
lods
xchg
sub
sbb
cmp
aaa
and
gs
push
lds
dec
dec
cli
scas
movsb
pop
loope
push
mov
mov
lea
cmp
lahf
sub
lea
xchg
mov
scas
add
clc
push
dec
dec
or
push
cltd
loop
call
mov
aaa
xor
jo
mov
inc
sub
orl
ret
mov
cmc
cltd
pop
mov
xchg
fwait
cmp
adc
ret
jg
ljmp
xchg
mov
cmpb
movsb
push
or
inc
scas
popa
push
xchg
sahf
xor
incl
iret
xchg
test
cmp
xchg
mov
sbb
lahf
or
in
sub
push
mov
clc
inc
add
push
pop
push
enter
mov
pusha
repnz
adc
adc
mov
shlb
pop
les
push
fs
or
mov
fnstenv
les
jmp
add
daa
pop
cmp
out
sbb
scas
jl
clc
cmpsb
dec
mov
sub
decl
test
iret
mov
and
cmp
repz
mov
jmp
cltd
mov
pop
jecxz
or
and
sbb
int3
setl
sub
dec
lcall
ret
adc
test
es
test
adc
call
xor
sub
mov
lret
push
mov
scas
inc
fsts
pop
flds
or
pop
push
rcll
lret
inc
lahf
leave
push
rol
xchg
shll
adc
jl
imul
call
cmp
pop
shrb
fcoms
pop
pop
jo
push
and
cmp
pushl
ds
rolb
fmull
mov
mov
call
sbb
fsts
and
sbb
out
mov
push
mov
lods
adc
das
call
pop
dec
mov
cs
movsb
fimuls
imul
mov
sbb
lods
iret
mov
xchg
cmc
clc
cmp
sbb
or
in
jmp
stos
aad
bound
gs
call
std
leave
mov
jne
jecxz
sub
xor
and
mov
pop
mov
sub
dec
add
orb
xchg
add
mov
dec
inc
test
pop
pop
xchg
gs
inc
addr16
shrl
icebp
push
scas
pusha
mov
notb
push
mov
pop
cmc
jg
mov
sub
repnz
add
add
mov
in
loopne
cmp
xchg
stos
pop
popa
inc
scas
pop
mov
pop
outsb
xchg
nop
sub
gs
fiadds
xor
in
sbb
jne
adc
daa
cmp
shl
add
rclb
int3
push
mov
mov
inc
jns
add
lock
rcr
adc
xchg
mov
ljmp
push
scas
add
loopne
mov
dec
sbb
outsb
aas
add
jge
cmc
mov
fwait
std
insb
sub
jae
lods
xor
add
addr16
lods
sbbl
ljmp
mov
add
push
call
and
dec
inc
lds
fisttps
pushl
lcall
subb
scas
in
add
adc
out
loope
push
movsl
jg
mov
pop
fsubl
adc
adc
pushl
aad
sub
add
shlb
cmp
or
cltd
or
cmp
aaa
cltd
fbld
cmpb
aas
and
lea
jl
push
push
test
out
insb
pop
lret
xchg
push
ficoml
decl
dec
fdivrs
fcom
inc
std
jae
xchg
ljmp
incl
ds
lock
lcall
fcoml
jb
xchg
sub
sahf
or
les
aad
iret
dec
xor
pop
das
sub
mov
int3
int3
jmp
mov
adc
addr16
lcall
test
cmp
or
mov
sti
push
cmpsl
and
das
cmp
fiadds
popf
ljmp
rorb
in
mov
shl
xchg
adc
and
sbb
insl
pusha
push
pushl
aam
mov
sub
nop
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
xchg
std
jmp
adc
sbb
lahf
xrelease
adc
test
lods
ss
lcall
pushf
cld
stc
xchg
dec
or
mov
sahf
dec
test
xlat
cmpsl
stos
repz
pushl
adc
jb
mov
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
jmp
push
out
es
push
inc
jmp
mov
inc
jp
lea
negb
decl
cmpsl
push
test
mov
or
sub
out
or
push
stos
in
cmpsb
dec
jb
jecxz
and
out
xor
mov
cmp
out
pop
out
jmp
dec
mov
push
addr16
test
lds
lahf
outsl
clc
pushl
stos
jno
xor
mov
insb
sahf
inc
test
mov
aad
inc
mov
and
pop
int3
mov
sbb
mov
dec
adc
iret
in
int
cmp
hlt
push
es
call
sahf
mov
jg
fwait
loope
xchg
sub
hlt
mov
repz
aas
pop
mov
cli
xchg
dec
mov
mov
jbe
fstp
fisttpll
ret
pop
jp
mov
pop
shlb
das
cmp
add
cmp
sar
lea
push
pushl
mov
nop
mov
inc
pop
xchg
add
mov
mov
scas
push
nop
push
call
mov
sarl
and
jnp
pop
lcall
cmp
add
xchg
dec
pop
xlat
loope
pop
enter
std
adc
bound
jns
incl
jmp
pop
in
divl
lock
daa
repz
sub
rcl
lcall
adc
jle
sub
lods
out
pop
subl
xchg
dec
xor
sbb
xchg
ja
push
into
in
mov
mov
mov
sahf
sub
push
jne
jb
pop
mov
and
xchg
add
ljmp
mov
into
enter
in
cs
scas
sbb
xor
push
andl
call
lods
negl
xchg
mov
fisubrl
jge
imul
pop
gs
xchg
lock
call
mov
fnstsw
fisubs
popf
adc
jg
ljmp
loop
or
lcall
lcall
pop
sbb
les
jo
cmp
lcall
int
dec
in
sbb
push
dec
pop
jno
mov
mov
aam
fbstp
cmp
lods
jns
jmp
xchg
cmpsl
push
aam
adc
jl
mov
movsb
subl
cmp
fcomip
jmp
pop
mov
scas
insb
or
fdivr
lods
push
jecxz
cmp
pushl
cmpsb
jl
push
enter
xchg
orb
inc
sti
pop
stos
call
pushf
cmpsb
in
imul
lcall
lods
inc
ret
mov
sub
cmpsl
pusha
out
mov
jg
orb
std
mov
repnz
aam
pop
fdivl
fcom
inc
sar
pushl
in
cld
push
cmpsb
jbe
std
lods
outsb
pop
jae
cmp
pushl
ret
lods
mov
in
mov
arpl
or
jge
push
in
bndstx
outsb
enter
sarl
lock
mov
xor
cs
adc
jecxz
push
rcrl
inc
jne
push
ror
pusha
add
xchg
cmpsl
arpl
xor
jecxz
mov
mov
mov
cmp
mov
jbe
inc
jae
and
sub
js
xchg
mulb
pop
pop
push
loop
inc
pop
mov
imul
add
cmp
lds
pop
jb
mov
xor
jg
mov
pop
cld
or
mov
sub
inc
mov
jb
int3
rclb
mov
dec
cmp
pop
adc
rorb
xchg
dec
adc
rorb
lahf
outsb
mov
pushl
lock
dec
lods
in
in
lods
stc
sarl
dec
mov
mov
jmp
fcoms
and
mov
ja
push
mov
aaa
or
mov
push
test
sti
cmpsb
mov
jp
sbb
push
test
jg
lcall
add
pop
lea
push
mov
xor
insb
sub
and
das
pushl
rcrl
or
dec
imul
negb
adc
scas
mov
adcb
pop
clc
clc
outsb
cmp
pop
mov
ret
xchg
fistpll
add
mov
in
add
jmp
cli
out
xor
cmc
loop
daa
mov
daa
pop
jmp
outsl
mov
pushl
or
dec
repnz
or
ljmp
adc
lret
mov
mov
mov
jns
push
icebp
xorb
pop
jge
pop
mov
mov
sub
sti
fbld
jmp
mov
adc
dec
fstpl
fcmovu
js
ja
mov
mov
cwtl
rcll
adc
dec
leave
jecxz
in
das
xchg
or
aaa
cld
push
push
dec
jecxz
jg
lcall
aaa
mov
cmpsb
sub
mov
lods
les
fidivs
arpl
scas
or
imul
loop
pop
dec
inc
pop
iret
cli
out
adc
mov
out
mov
dec
or
ffree
xor
outsl
push
insl
psllq
stc
mov
push
adc
lds
fisubrl
pop
ljmp
inc
mov
jmp
jnp
xor
cltd
imul
pop
adc
push
mov
or
add
cmp
test
fildl
lahf
push
cmp
or
lcall
xor
sub
mov
or
fiaddl
mov
scas
addr16
mov
cld
cmp
aad
movsl
into
cmpl
fnsave
out
inc
aaa
movsb
decb
lock
jmp
mov
pusha
adc
ret
jp
sub
out
mov
int
movsb
mov
inc
jmp
sub
clc
or
pop
sub
lcall
cmp
cld
add
sbb
pop
ret
sahf
dec
clc
lcall
cmp
pop
rol
into
pop
mov
mov
popa
xchg
add
inc
pop
in
leave
inc
dec
lret
sbb
mov
test
ljmp
xor
lret
sbb
or
cmp
rorl
call
mov
shll
push
hlt
mov
outsb
push
das
repnz
je
dec
repnz
add
or
in
adc
xchg
nop
mov
outsb
xor
adc
jg
cli
push
pop
pop
hlt
fisubrs
sbb
mov
push
xor
xchg
ret
mov
cwtl
push
dec
cltd
jb
adc
push
mov
scas
lock
pop
mov
adc
xlat
mov
mov
lods
xchg
lock
jl
imul
push
dec
mov
movsb
sbb
xor
ljmp
push
push
loope
mov
test
das
sarb
add
push
aaa
mov
sbb
repz
daa
call
xchg
fldt
jae
cmp
inc
jmp
mov
jmp
or
jne
adc
jg
or
jg
mov
in
mov
or
mov
jae
icebp
jecxz
and
push
push
call
push
mov
aaa
jo
mov
fcoml
scas
sbb
add
or
bound
push
fcmovnu
sahf
stos
add
test
jecxz
rorl
loope
add
pop
or
in
push
sub
inc
mov
ljmp
call
push
and
pop
testl
cmpsl
mov
rol
pop
call
std
call
jg
daa
sti
or
mov
sbb
out
and
lcall
mov
xor
test
and
outsb
imul
push
and
call
shl
into
mov
loopne
mov
fidivrl
mull
imull
sbb
cmp
clc
icebp
aad
cld
cwtl
push
inc
push
xor
ljmp
imul
incl
xor
clc
sub
mov
std
pop
xor
imul
push
sub
repz
mov
fmuls
dec
int
sahf
push
std
and
push
loope
sub
mov
call
in
stos
sub
cmpsb
nop
jp
mov
sub
add
addr16
dec
sbb
clc
andb
sti
dec
fbld
test
lret
push
jge
sub
adc
sar
jg
mov
out
rcrb
rorl
mov
cmp
ljmp
sub
xlat
aam
mov
call
add
xor
rol
ljmp
cli
dec
enter
jge
ud1
mov
sbb
adc
sub
push
sub
rcrl
push
lock
ljmp
loop
loopne
lea
push
pop
fcompl
jnp
ljmp
pop
jmp
sbb
fwait
ja
arpl
scas
jmp
scas
enter
and
icebp
jmp
cmpsb
clc
repz
rolb
aad
xor
or
push
jp
or
or
aas
xchg
test
sbb
sahf
movsl
in
xchg
mov
loope
mov
repz
jg
cmp
push
fistl
out
test
cmc
mov
push
mov
jp
push
mov
xor
or
repz
test
stc
mov
scas
sub
stc
sub
rolb
jmp
xchg
cli
and
incl
cmp
jmp
sbb
lods
stc
mov
cwtl
outsb
mov
push
bswap
movsb
or
pushl
data16
lahf
and
jge
cld
xchg
mov
adc
xor
stos
adc
mov
and
cwtl
push
jg
pop
inc
test
test
jmp
xlat
fmuls
mov
mov
mov
mov
aam
xchg
pop
fadd
popl
arpl
sbb
pop
inc
aam
shrl
sahf
adc
sbb
mov
mov
insb
adc
xchg
and
mov
mov
xchg
nop
mov
bound
in
sahf
xor
lods
and
and
push
jecxz
lods
ljmp
test
jae
aaa
xchg
cmp
jmp
out
movsb
pop
pushl
xor
mov
lcall
xor
or
out
cltd
outsl
pushl
mov
mov
js
push
mov
push
aaa
in
dec
pop
lret
xchg
sub
stos
push
call
pop
fs
in
dec
lret
mov
pop
aad
adc
cld
mov
xor
mov
icebp
lcall
xor
xor
cwtl
les
call
lret
stos
mov
xor
xchg
iret
cmp
sbb
inc
idiv
sahf
sahf
mov
mov
jmp
lcall
and
pop
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
add
std
lcall
or
mov
fcoml
push
outsl
bnd
cmpsl
inc
dec
mov
pushl
dec
sub
insb
fidivrl
jmp
inc
outsl
dec
xor
sbb
imulb
aam
shrl
mov
and
mov
fucom
mul
pushl
pop
jae
scas
mov
in
movsb
mov
cmpb
push
loope
or
sub
push
incl
jle
lods
jne
sub
lea
push
aam
sbb
or
lods
test
sub
pop
fistpl
push
shl
pop
and
xchg
clc
call
aaa
mov
and
jb
xor
movsb
mov
xor
aad
mov
mov
rorb
lods
fwait
lcall
pushl
jmp
inc
loope
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
call
clc
pop
fildll
add
ss
mov
push
cmp
pushl
ret
mov
ljmp
xor
lock
and
lret
cli
jmp
push
sbb
je
sahf
and
rcrb
jmp
pop
in
or
repz
jmp
jns
insb
xchg
adc
dec
ret
inc
out
movsl
mov
in
ljmp
aaa
sti
test
jns
adcl
aad
lods
pop
inc
cld
out
mov
push
dec
ljmp
decl
jmp
cltd
xor
fwait
inc
cmpsb
cld
popf
adc
in
cmpb
mov
xchg
add
loope
outsb
sbb
loope
cmpb
ljmp
jge
cmp
nop
scas
mov
mov
int3
sbbb
insl
jno
inc
mov
arpl
arpl
inc
mov
lcall
xor
push
xchg
pop
lods
xor
ja
xor
adc
aaa
pop
js
mov
jns
add
jmp
push
sahf
add
push
out
int3
pop
mov
arpl
mov
mov
ss
stos
mov
push
das
shl
lock
sub
incl
push
pop
pop
mov
xor
add
cmp
pushl
das
adc
pop
jne
mov
imul
add
dec
xchg
pop
call
push
mov
push
xor
pop
cmc
clc
daa
add
data16
adc
pop
xchg
and
cld
ljmp
inc
iret
std
mov
int3
or
fistps
xor
icebp
nop
out
jg
add
rcrb
gs
mov
ret
mov
pusha
test
sub
fiaddl
xor
outsb
loopnew
adc
gs
das
xor
hlt
jle
inc
mov
jmp
js
mov
incl
nop
add
add
mov
mov
mov
or
ss
push
mov
inc
mov
mov
jle
fwait
jb
in
test
dec
xchg
push
adc
sbbl
cmp
xchg
and
in
inc
and
popa
imul
test
decl
xchg
enter
clc
xorl
add
cmpsl
xor
pop
mov
lcall
push
pop
lea
movsb
inc
mov
test
pop
mov
sub
call
pushf
pop
lds
pop
and
call
pop
ljmp
lods
push
aaa
xor
loopne
mov
inc
cmp
xor
xchg
push
lcall
clc
mov
bound
lods
push
pop
andb
sbb
jnp
test
bound
xor
inc
data16
adc
outsl
clc
call
push
scas
addr16
movsb
jbe
jp
arpl
xor
scas
test
call
sbb
add
mov
stos
xchg
cli
clc
lods
mov
mov
xor
jmp
mov
add
cmp
repz
loop
pop
push
notb
xor
mov
mov
decl
btc
not
jbe
xor
push
pop
setne
imulb
testl
jmp
lods
adc
add
imull
push
jl
push
jno
outsl
sbb
test
jmp
arpl
stos
fdiv
or
lahf
cmp
shl
mov
in
test
shl
jno
lods
sub
mov
clc
decl
or
gs
mov
push
adc
adc
rcrb
sar
cmp
jg
mov
sbb
pop
and
pop
inc
clc
outsl
loope
cmc
mov
loop
pop
push
cmovb
inc
decl
push
scas
push
addr16
fsubrs
or
decl
cltd
push
push
cli
ret
imul
dec
stos
rol
mov
hlt
pushl
mov
cmp
mov
inc
xor
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
incl
xlat
adc
xchg
add
sbb
pop
adc
fcomps
inc
cli
push
aas
cmp
and
jnp
sub
lods
sbb
aaa
jecxz
jbe
mov
adc
pushl
mov
inc
mov
or
inc
mov
clc
sbb
in
je
testl
cmc
jl
jnp
cmc
cmc
cmp
lock
decl
jecxz
add
jns
sub
push
in
mov
add
add
sbb
hlt
jne
cmp
mov
mov
push
push
insb
lret
lcall
xchg
aad
aad
in
adc
out
dec
sub
orl
iret
cmp
inc
push
and
jmp
cltd
icebp
sbb
adc
aas
add
lcall
outsb
mull
es
mov
popl
or
dec
pop
inc
inc
xor
jg
decl
ret
fisttpl
das
sbb
dec
mov
lds
mov
cmp
call
lds
sub
push
call
decl
movsb
outsl
stos
test
cmp
decl
inc
mov
in
dec
aam
xchg
test
lock
popa
or
cmpsb
decb
push
movsl
cmpsb
sub
mov
jg
adc
subb
sbb
jmp
mov
test
mov
nop
dec
repnz
test
incb
imul
adc
ljmp
pop
ret
clc
das
loop
daa
inc
xchg
sbb
pushf
in
sub
decl
cwtl
and
aaa
fwait
test
dec
add
mov
inc
test
hlt
xor
jmp
sbb
jle
xchg
pop
popf
sti
mov
int3
pop
xor
cltd
xchg
addl
incl
es
mov
pop
pop
adc
je
psllq
cwtl
sub
or
movsl
fldl
mov
add
or
sbb
lods
scas
ficompl
mov
pop
out
dec
pushl
and
xchg
inc
test
lcall
cmp
orb
inc
push
sbb
pop
sahf
and
dec
jmp
dec
xor
scas
xor
cmp
arpl
and
mov
movsb
cli
outsb
int
or
movsl
pushl
cltd
fisubl
xchg
mov
popw
sbb
add
sbb
pushf
jne
icebp
mov
push
cwtl
jbe
mov
jmp
pop
loop
or
rol
rolb
out
inc
xchg
stos
dec
in
dec
dec
jle
dec
std
pop
loopne
scas
lds
jle
mov
lahf
push
pop
dec
loope
jg
dec
enter
jno
pop
xchg
sahf
xchg
mov
leave
inc
dec
mov
scas
push
push
stc
js
std
add
mov
add
lock
test
icebp
lahf
movsl
push
dec
clc
incl
flds
sar
sbb
adc
test
jmp
cs
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
push
neg
sti
ljmp
mov
insl
repnz
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
mov
cmpsb
in
push
ficoms
push
lret
jbe
imul
movl
in
push
orps
loop
decl
call
or
bnd
xlat
jle
jno
inc
cmp
cmc
rcrb
into
mov
jmp
add
insl
pop
jg
icebp
es
xchg
fadd
xor
das
xor
xchg
shrl
shll
adc
push
xchg
add
cltd
loopne
mov
pusha
sbb
inc
pop
lcall
xchg
mov
es
pop
pushl
jecxz
mov
pop
jmp
ljmp
jmp
jo
hlt
mov
cmpl
imulb
pop
jecxz
cmp
ja
scas
daa
pop
jmp
test
sub
enter
mov
test
cmpl
pop
jge
sub
roll
test
pop
sbb
sahf
pop
add
xor
shlb
and
inc
filds
shll
daa
lods
dec
xchg
push
xor
jno
fsubrl
dec
pushl
xlat
cwtl
mov
and
ret
into
push
xchg
pushf
cmp
test
mov
xor
and
jmp
test
mov
xchg
push
daa
sbb
loopne
mov
imul
ja
add
call
and
fistl
hlt
adc
sub
out
outsb
addr16
and
lcall
aas
cmp
bound
push
rcrb
rolb
movsb
sbb
inc
fildl
lretw
fimuls
push
or
in
mov
and
mov
mov
in
pusha
iret
loopne
and
pop
inc
dec
mov
jg
bound
scas
dec
movl
dec
add
sbb
out
mov
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
imulb
jmp
sbb
rcr
fsubl
arpl
test
clc
cli
gs
inc
push
mov
xchg
aaa
push
mov
shl
jnp
dec
addb
push
fisttps
cmp
ds
jo,pt
pop
test
jmp
idivl
inc
inc
mov
sub
outsl
mov
inc
ret
mov
movsb
mov
inc
fdivrs
inc
inc
push
mov
pushf
xchg
sub
ljmp
jmp
cld
dec
mov
pop
jne
cmpsb
adc
scas
mov
mov
lock
sarb
xchg
imul
dec
ljmp
pushl
push
pop
sbb
xchg
fsubrl
pop
inc
shrb
popf
ret
aas
inc
xchg
popa
mov
mov
fs
fcoms
or
pusha
sahf
out
fs
inc
lcall
out
clc
movsl
and
sub
cmp
cli
scas
and
adc
shrl
incl
stc
pusha
into
call
push
push
add
lcall
inc
mov
fidivl
and
xor
push
sbb
cmpsb
mov
je
mov
adc
ss
or
sti
fdivp
dec
fimull
shlb
lret
loope
fwait
cmp
mov
lret
jmp
pop
ds
call
jmp
dec
fmuls
out
int
adc
xchg
ficompl
mov
insb
aas
mov
pop
and
inc
mov
ret
xchg
cmp
push
pop
rcrb
out
pop
sbb
jmp
mov
decl
or
es
mov
adc
cmp
dec
mov
in
ljmp
push
sbb
mov
dec
jecxz
inc
mov
sti
pop
int3
xchg
aaa
test
jmp
outsb
in
adc
xor
ljmp
sub
repnz
mov
in
mov
gs
lcall
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
addr16
ljmp
cld
or
popa
push
dec
mov
dec
adc
lcall
pop
cmc
dec
jecxz
in
xchg
dec
mov
cltd
jg
and
and
xor
push
iret
in
cs
sub
insb
mov
mov
mov
xor
adc
ror
pop
in
lods
ljmp
dec
scas
jge
or
push
loopne
clc
mov
into
repz
mov
lcall
xor
movaps
xchg
xchg
call
and
mov
sub
inc
fs
dec
adc
ror
inc
ds
mov
ljmp
dec
mov
stos
and
jp
fnstcw
bound
cmp
cmpsb
push
inc
push
jle
mov
roll
adcl
sub
hlt
stos
adc
add
mov
ret
mov
test
ljmp
xchg
cwtl
xchg
jno
add
ljmp
rcr
xchg
jg
aas
fdivl
iret
and
or
pushl
sub
enter
pop
jnp
or
fisubl
or
push
scas
decl
test
sub
inc
pushf
frstor
sbb
jne
aam
outsl
dec
mov
ljmp
fsubl
imul
lods
or
repnz
add
xlat
sbb
popf
pop
mov
jmp
repz
xchg
pusha
xor
dec
popa
stc
subl
pop
xchg
fiaddl
ret
push
fbld
ja
cmc
xor
push
lods
xlat
adc
repnz
mov
mov
jg
fisttpl
cmp
idiv
pop
lea
jle
roll
mov
pop
popa
js
lret
push
push
ja
jle
cmp
adc
sub
mov
sbb
int
dec
lret
pop
mov
aaa
shll
jns
jg
lahf
cltd
mov
std
jmp
pop
sahf
iret
push
sti
rolb
insl
cmp
pop
pop
mov
ss
rclb
pop
sub
cmp
lock
mov
push
xchg
and
dec
mov
xchg
xchg
dec
jle
ret
xchg
cli
dec
and
test
loop
sbb
jb
popf
add
dec
je
js
call
imul
cli
das
loop
insl
mov
lds
pop
fadds
mov
adc
call
pusha
adcb
sbb
test
mov
mov
push
inc
mov
and
or
pushl
cmpsl
or
pop
pop
movsb
daa
outsl
rorl
int3
sbb
in
and
mov
arpl
call
out
inc
icebp
xchg
mov
jno
mov
push
imul
add
call
imul
jb
add
mov
add
addr16
fidivl
pop
sbb
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
aad
xchg
or
jg
hlt
mov
ljmp
popa
inc
adc
dec
lcall
movsl
stc
xorl
mov
pop
sub
jnp
inc
ror
add
mov
push
test
aas
outsb
add
xchg
and
sbb
divb
and
xlat
ret
out
cli
sar
aad
pop
or
sahf
push
out
imul
xchg
mov
and
rcrl
lcall
jae
jp
adc
les
xchg
push
push
pop
push
sbb
and
cmpl
add
repnz
jmp
push
add
mov
add
pushf
shll
dec
sub
xchg
pop
jno
cmp
lcall
int3
and
mov
mov
je
mov
cmp
pop
inc
mov
add
xlat
pop
sahf
or
idivl
fsin
xor
inc
xor
fildll
std
test
std
xchg
add
jbe
int3
add
sub
fwait
lods
fimuls
mov
cmpsb
dec
mov
fisubl
movl
adc
test
jmp
aas
adc
dec
jbe
movsl
loope
dec
xchg
es
jmp
and
ret
inc
inc
jecxz
popf
test
std
xchg
xor
cmp
mov
stos
mov
jae
fwait
adc
or
pop
andb
push
jmp
inc
bound
out
pop
xchg
sahf
inc
jno
sbb
mov
sub
mov
mov
pop
mov
repnz
pop
cli
decl
inc
xchg
mov
clc
ret
incl
lcall
mov
dec
mov
mov
sub
mov
es
lcall
jae
add
mov
mov
or
or
mov
mov
jmp
hlt
decl
or
mov
push
xchg
cltd
aad
jb
dec
push
lods
mov
mov
or
test
add
sahf
js
hlt
pop
push
inc
ljmp
addb
jge
in
repnz
outsb
sub
pushl
dec
xchg
mov
test
cli
lods
cmpsl
or
incb
insb
mov
jbe
aas
push
pop
dec
jmp
icebp
sbb
popf
push
es
push
inc
cmp
mov
incl
xchg
ja
leave
jnp
mov
push
test
mov
xchg
ds
dec
mov
and
cmp
and
loopne
cmpsb
jg
add
jge
push
xor
jg
xchg
ds
sub
and
xor
pushf
out
mov
xchg
fs
popf
mov
cmc
xor
jae
mov
push
sbb
push
roll
into
dec
and
jnp
jbe
sub
ljmp
fistl
mov
ret
popa
out
rorb
cmp
cmpsl
repnz
push
mov
sahf
sub
incl
push
adc
add
data16
clc
les
jge
mov
mov
outsl
aas
inc
loope
mov
cmp
fcoms
fbld
sub
cmpl
mov
std
lock
dec
arpl
dec
jae
fcomip
mov
mov
add
jp
ffree
popf
imul
xlat
jg
jno
cmp
imul
pop
pop
out
inc
pop
add
iret
inc
pop
mov
incl
ljmp
xor
test
push
aas
shl
pop
jge
je
or
pop
ja
out
xor
inc
xlat
rcr
movsb
cmc
cs
cmpsb
sbb
test
pop
cmp
xor
xchg
mov
push
cwtl
insl
cs
fwait
sarl
cmpsl
mov
dec
sarl
mov
jb
cmpsb
push
jecxz
incl
repz
xchg
push
push
repz
lock
sbb
and
popl
cmp
stos
jae
push
mov
and
repnz
push
adc
fs
imul
mov
cli
pop
ljmp
mov
pop
fwait
adc
outsb
hlt
inc
fwait
sub
pop
cmp
or
incl
mov
out
mov
lret
mov
fldl
in
add
loopne
jg
pushl
cmpsl
hlt
adc
cmp
adc
pop
push
or
cmp
fsubrs
insl
aam
decl
pop
xchg
repz
scas
test
dec
insb
or
push
lret
dec
mov
mov
insl
xchg
inc
mov
xor
mov
pushf
fimuls
add
test
jmpw
clc
scas
arpl
jecxz
mov
stc
outsl
push
lret
cltd
pop
leave
jp
xchg
push
rorb
mov
out
push
hlt
js
xor
sub
in
push
sub
push
subb
int3
pop
sti
adc
push
xchg
insb
mov
mov
stc
pop
lret
decl
inc
xor
pop
adc
das
jb
sar
cld
icebp
or
cltd
arpl
adc
xchg
adc
test
adc
push
and
decl
rcrb
cmp
xchg
scas
in
inc
in
fdivr
mov
sahf
mov
ds
pushl
in
inc
enter
lods
cmpsl
repz
pop
push
mov
decl
aas
fildll
or
and
lret
lods
or
lretw
and
xchg
aam
ss
dec
xchg
jge
xor
mov
stc
std
pop
loopne
and
sub
je
gs
out
cwtl
jne
sbb
popf
fs
adc
cmc
inc
sub
test
call
frstor
pop
or
ja
inc
mov
sbb
aaa
push
sub
ljmp
cli
roll
sbb
jno
add
sbb
sti
mov
mov
add
pushl
std
cld
adc
bound
test
gs
repnz
aas
sti
mov
lcall
loope
ja
jb,pt
jbe
xchg
sub
mov
mov
jg
shll
xorl
dec
stos
dec
jae
push
ds
dec
or
fiaddl
fcomps
jo
gs
jg
dec
push
test
cld
mov
arpl
sub
data16
incl
jo
mov
mov
push
imul
loope
into
push
mov
sbb
push
lcall
inc
pop
ja
mov
leave
mov
push
ret
enter
sub
mov
hlt
popl
inc
inc
mov
es
out
imul
dec
imul
cmp
mov
fs
or
decl
ja
fbld
jge
push
push
repnz
dec
imul
sbb
decl
lahf
push
adc
dec
sbb
or
cltd
sbb
mov
xchg
jns
ljmp
hlt
jb
inc
cld
insb
or
push
lcall
push
sbb
push
repnz
decl
add
arpl
insl
adc
lock
jo
sbb
pop
test
stos
push
cmp
jbe
pop
pop
in
loopne
adc
pusha
inc
push
pop
in
lret
in
push
aad
imul
push
xchg
jp
inc
mov
xchg
lcall
mov
sub
xchg
xor
inc
fadds
cmp
cmpsl
cmpsl
imul
mov
push
dec
rcll
movsl
lods
incb
mov
outsb
fdiv
out
sub
mov
leave
pop
arpl
lods
sbbl
inc
add
mov
fcmovb
arpl
jl
out
mov
ja
orl
and
or
pushl
mov
or
jle
call
adc
add
arpl
pop
mov
cmp
mov
push
fs
pop
adc
call
add
sbb
or
incl
cld
decl
out
adc
ret
lock
mov
out
and
fmull
pop
cld
fisttpl
mov
inc
ficompl
cmpsb
push
popa
pop
int
les
sar
decl
pop
cmp
movsb
data16
aam
ret
mov
mov
add
adc
jg
jo
xor
push
push
rcrl
jle
ds
dec
pop
sub
popf
lods
je
call
cld
bound
cld
jp
cli
mov
imul
adc
add
loop
jge
cmp
pop
loopne
addr16
add
mov
mov
sbb
xor
jo
xor
lock
jg
stc
xor
jge
mov
in
clc
addr16
data16
push
std
and
sub
cwtl
loope
pop
dec
push
fldcw
out
push
cs
jecxz
xlat
or
pop
fsts
lcall
cmpsb
lock
insb
lds
gs
popf
icebp
jmp
xchg
pushl
jo
stos
add
daa
mov
dec
cld
push
or
and
nop
ljmp
xchg
loope
jmp
cmpsl
imul
incl
ret
xchg
into
sbb
adc
jecxz
dec
sbb
adc
test
or
push
xchg
shrl
pop
cmp
add
icebp
int3
in
into
pop
xlat
adc
mov
mov
rsm
push
inc
mov
and
push
cmpsb
jge
mov
add
mov
mov
xchg
fisttps
cwtl
shll
or
ljmp
out
in
loope
cmp
testb
jmp
push
pop
mov
sbb
mov
sbbl
jbe
jg
add
incl
dec
shl
fistl
sbb
and
decb
outsl
int3
test
cld
jmp
mov
outsb
sub
sbb
cld
and
lcall
mov
data16
mov
outsb
ds
push
cmpsb
xchg
ljmp
cmc
adc
int3
enter
lahf
sbb
outsb
sbbb
fbld
movsl
add
into
inc
jecxz
out
jns
push
or
pushl
daa
cmc
cltd
xorl
lds
popa
mov
xchg
mov
push
mov
push
dec
lcall
icebp
insb
cmp
add
jae
cmp
xlat
movsl
inc
mov
pushf
pop
push
add
and
dec
push
lods
fs
stos
inc
pop
loope
ljmp
adc
andl
mov
stos
xchg
shll
pop
cli
pushl
roll
and
insl
std
lcall
aam
fcompl
stos
int3
psrlq
jg
mov
pop
sbbb
add
inc
inc
mov
inc
xchg
xchg
lea
ljmp
in
scas
sbb
cmpsb
inc
xor
rolb
xor
test
out
movsb
das
jne
pop
xchg
add
out
icebp
rclb
or
mov
jg
sub
fcoml
adc
mov
sub
mov
cwtl
ljmp
cmpsb
mov
sbb
rcr
popa
stos
xchg
stc
into
aas
mov
mulb
popf
sahf
add
ud0
decl
repnz
movsb
cld
push
cwtl
xchg
jbe
in
popf
cmp
push
pushl
cmp
sbb
arpl
push
adc
sub
jb
adc
push
loop
lcall
xor
repz
call
dec
cs
outsb
xchg
addr16
pop
lcall
shlb
loope
enter
pushf
ss
into
divl
dec
fildl
movsl
sbb
addr16
call
lcall
scas
mov
ljmp
jmp
add
mov
nop
lods
push
sahf
lds
scas
mov
mov
xor
cld
jns
lods
cmp
gs
jae
iret
or
mov
jns
lret
lcall
into
mov
outsb
out
nopl
push
fs
xchg
add
push
sar
hlt
xchg
clc
adc
decl
push
movsb
or
loopne
loopne
push
andb
sbb
test
push
mov
push
mov
je
push
addr16
push
es
mov
xchg
push
inc
or
inc
lret
fs
pushl
and
mov
jle
jno
mov
pop
sbb
add
push
or
insb
push
rolb
fldcw
sub
mov
call
sarl
dec
adc
add
pop
xchg
icebp
arpl
data16
inc
lahf
mov
jmp
mov
jnp
cli
lcall
cmp
cld
add
dec
pop
ss
mov
sarb
mov
xchg
clc
mov
enter
movsb
loopne
call
sub
sbb
outsb
in
fisubrl
jle
arpl
mov
mov
sub
vmovups
imul
std
sbb
pushl
xor
out
sub
push
scas
push
imul
cmp
rolb
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xor
sar
cmp
push
test
ja
mov
dec
inc
sbb
incl
pop
jmp
fisttps
sti
loopne
mov
add
lea
inc
stos
xchg
xor
jne
rorl
cwtl
je
pop
pop
ss
dec
xor
xchg
test
lahf
cmp
scas
clc
call
jmp
and
scas
cld
mov
push
mov
mov
jnp
add
decl
inc
xor
test
pushf
sub
enter
mov
lock
mov
outsl
xchg
pop
cld
aaa
adcl
rorb
mov
adcl
and
enter
cmovp
jmp
inc
pop
cli
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
xor
inc
xchg
dec
inc
mov
test
xor
out
call
imul
mov
pop
push
add
pushl
sub
fldcw
sahf
fisttpl
fnstcw
add
push
mov
jmp
push
and
push
leave
in
pop
jg
dec
idivb
pop
wbinvd
jmp
push
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pop
js
insb
out
lcall
leave
jle
jp
jle
sbb
and
das
pop
iret
xor
fwait
jb
adc
lcall
mov
mov
or
sbb
cmp
xchg
xor
push
test
pushl
jmp
dec
jb
rol
xchg
xchg
sbb
ror
sbb
push
mov
out
and
or
push
je
mov
out
frstor
cmpsl
add
call
mov
hlt
gs
je
xchg
xchg
mov
aad
push
dec
lcall
xor
addb
jmp
cmpsl
in
aaa
cmp
mov
out
rorb
call
js
sahf
pop
cwtl
add
xor
loop
mov
and
insl
mov
lcall
orl
std
mov
out
loope
ret
jnp
dec
stc
jae
add
mov
fcoms
addr16
or
leave
add
mov
movsl
idivb
lods
test
fwait
repnz
and
xor
incl
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
repnz
pop
cmp
popa
jg
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
adc
jb
lret
call
stos
int
pop
sbb
fistpll
mov
sti
jmp
decl
in
mov
aaa
push
cmc
daa
negb
ja
jb
pop
clc
jae
and
scas
iret
and
fistpl
push
ficoms
fistpll
add
add
mov
push
sar
das
push
call
xchg
fstpl
mov
sub
sub
ljmp
jg
adc
add
xchg
mov
pop
sbbl
xchg
sar
jmp
addl
add
aaa
fldcw
xchg
iret
hlt
cmc
jbe
inc
jb
lock
xchg
sub
loope
hlt
rol
and
aas
mov
jne
pop
std
dec
sub
jl
dec
sbb
iret
into
mov
sbb
jb
jmp
pop
decl
and
insl
dec
mov
sub
mov
xor
xchg
pushl
inc
out
xlat
mov
xor
sbb
imul
cmpsl
cmp
pop
call
mov
addr16
cli
cmp
push
cmp
cwtl
pusha
shlb
xor
pop
cmp
jnp
adc
and
aas
cmp
ds
cwtl
push
ds
push
lea
lcall
dec
mov
mov
nop
vunpcklpd
call
psllw
xchg
arpl
inc
mov
cmpsl
out
adc
daa
inc
or
pop
push
cmovb
or
les
pop
lock
int
push
or
ret
xchg
xor
jb
sbb
test
fcomip
pushl
mov
jb
jge
jo
out
adc
mov
cmp
ret
sbb
mov
adc
mov
movsl
xor
mov
jmp
mov
dec
cld
fistpll
aad
jno
and
loop
ss
insl
outsl
mov
mov
mov
xor
push
cmp
aaa
mov
add
add
ljmp
xchg
cmpsb
xor
incb
lcall
rcll
jecxz
shll
insl
add
mov
inc
lcall
lods
sub
scas
or
push
lahf
mov
jge
dec
arpl
lods
arpl
out
push
in
fcomip
decl
ret
inc
fcoml
fldl
lock
loopne
xchg
cs
mov
jg
decl
xor
cli
outsb
add
mov
pop
adc
sbb
ljmp
aam
mov
xchg
bound
cmp
cwtl
insb
xor
lcall
jbe
jne
mov
push
cmp
pop
inc
pop
in
mov
xor
cmp
pop
repnz
mov
jae
lret
xor
call
fs
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
shl
dec
inc
pop
push
jmp
dec
in
lret
daa
int
sti
sbb
and
sub
xor
daa
mov
loopne
call
adc
or
femms
frstor
loope
call
out
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
outsl
push
dec
aad
cmp
pushl
clc
in
insl
mov
rolb
mov
stos
leave
add
dec
add
jl
pop
mov
incl
insl
lahf
xchg
and
add
mov
lods
sbb
outsb
icebp
and
pop
mov
stos
popf
pop
mov
lcall
or
loope
clc
enter
and
cmp
outsl
shll
and
hlt
add
pop
or
sbb
out
lcall
es
es
push
xor
call
add
jnp
jnp
push
addr16
stos
fsubrl
mov
loope
decl
xchg
mov
or
xchg
adc
stos
push
and
decl
dec
push
jl
in
fisttpll
aam
jmp
pop
mov
outsl
add
jnp
mov
andb
xor
adc
test
in
cmc
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
mull
xor
les
cmc
int3
loopne
call
ljmp
mov
and
lds
jb
mov
cld
pop
enter
push
inc
mov
insl
mov
shlb
push
add
or
jns
push
aaa
sar
xor
xchg
mov
mov
aad
jmp
roll
xor
mov
pop
mov
pop
movsb
call
jg
and
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
and
pop
call
or
pushf
dec
inc
jae
loop
enter
mov
clc
cmp
jmp
stos
ljmp
sub
or
push
jb
pop
loope
nop
mov
jmp
sub
lret
ja
xor
cltd
cld
or
pop
pop
test
add
mov
mov
add
insl
ficompl
rorb
mov
fcomip
mov
mov
fwait
jl
gs
out
pop
jl
ss
jmp
cltd
pop
pop
jl
inc
dec
inc
pop
mov
test
icebp
std
jmp
ret
jl
inc
or
rcll
xchg
scas
add
pop
ljmp
addr16
mov
mov
jnp
cmp
cmp
or
sub
push
insb
stos
push
repnz
std
jg
fadds
jg
xchg
push
mov
jne
jnp
cmp
clc
data16
xchg
mov
push
cmpsb
je
clc
ljmp
mov
xor
jo
mov
mov
dec
pushf
lcall
pushl
pop
push
loopne
mov
xor
out
mov
pusha
ljmp
sbb
jmp
pop
gs
andl
xor
sahf
ja
sahf
mov
mov
gs
ljmp
adc
rcrb
push
popa
into
push
loopne
das
mov
xor
adc
push
aam
add
ljmp
out
cli
rcr
pop
imul
scas
add
sbb
js
add
jbe
into
lcall
adc
xchg
xor
test
mov
faddp
mov
dec
ds
sbb
push
pop
push
mov
dec
cmp
jne
mov
sub
push
test
test
stc
lcall
jae
es
pop
ss
es
std
mov
push
pusha
test
xor
pusha
imul
decl
incb
out
xchg
pop
stc
daa
repz
mov
mov
stc
stos
xor
stos
in
push
fistl
dec
push
push
decl
xchg
sub
cmp
cmp
add
lcall
mov
mov
jge
pop
sahf
aad
mov
ljmp
ss
ret
sahf
pusha
dec
iret
pop
mov
in
ja
mov
jno
hlt
call
xor
jl
pop
rol
sub
mov
jp
ljmp
hlt
decl
add
insl
push
jae
pop
jbe
adc
xor
mov
push
cmpsl
cmp
in
repnz
ds
in
mov
xchg
cmpsl
fisubs
rcrl
cld
scas
jno
ljmp
test
hlt
int3
mov
ljmp
dec
clc
shll
cltd
cmp
mov
mov
lret
inc
rclb
fidivrl
dec
aam
jecxz
inc
adc
jp
scas
add
aad
movsl
pop
add
sub
jmp
mov
xorl
sub
dec
mov
mov
ds
jmp
mov
xor
mov
xchg
jno
sub
into
push
test
mov
sar
incl
sub
ds
xor
sbb
movsb
fisubl
imulb
sbb
push
jmp
push
mov
adc
sahf
xor
and
into
lahf
cmpsl
subb
xor
ret
shrb
cmpsb
sub
outsl
or
sbb
aam
ljmp
sahf
xchg
imul
inc
fisttpll
mov
ss
das
jecxz
sahf
in
div
adc
jge
scas
dec
je
call
inc
lea
das
mov
mov
xor
or
movsl
push
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jns
scas
or
jmp
decl
jne
stos
and
mov
pop
stc
dec
aas
fildl
inc
cmp
jge
movsl
out
jge
xor
testb
jg
jmp
fwait
xchg
mov
dec
into
mov
cmpsb
jle
or
std
dec
fisttps
ss
dec
popa
rolb
rol
cmp
clc
sbb
arpl
dec
and
cmp
sbbb
aaa
lock
ljmp
in
xchg
push
mov
push
sub
cmp
sub
loop
add
pop
loopne
insl
jg
loop
test
cwtl
movsl
es
adc
pushf
inc
jae
call
in
cmpsl
clc
mov
fmull
pushf
and
sub
gs
push
dec
in
jb
pusha
es
lahf
mov
inc
js
mov
scas
movb
jne
iret
mov
xchg
pop
mov
iret
xor
push
inc
xor
ss
es
push
jmp
inc
jne
cmp
les
or
fldcw
xchg
sbb
mov
cmp
push
mov
gs
ljmp
and
imul
dec
lock
dec
mov
das
jp
lret
scas
cmp
cmp
pushl
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
or
fisttps
testb
decl
leave
mov
stos
mov
clc
xchg
imul
clc
fdivr
lcall
pushl
jp
sub
cmpsb
cmpsl
jb
fs
daa
sbb
inc
cmp
xchg
fdivrl
lods
or
xchg
incl
add
inc
scas
pop
jmp
dec
inc
maskmovq
divl
sub
cld
incl
mov
ds
int
jecxz
shl
and
lods
sbb
fsubrl
outsl
test
decl
lods
stc
pop
cmpsl
insl
cmp
dec
xchg
dec
mov
jmp
enter
add
xchg
comiss
test
push
mov
fdivr
loop
call
fdivrp
push
push
mov
insl
mov
ja
stc
push
xor
addr16
cwtl
cld
xchg
cld
ljmp
subb
pop
out
aaa
pushf
push
jne
mov
dec
adc
or
adc
icebp
ret
mov
sub
test
iret
imul
out
cli
jg
add
aas
adc
sbb
add
hlt
jmp
lret
push
mulb
ljmp
and
mov
jle
outsl
pushf
xlat
adc
subl
dec
stos
mov
pop
repnz
pushf
push
out
test
or
shrb
mov
pushl
xchg
pop
repz
mov
cmp
jecxz
mov
cmp
xchg
repz
shr
lods
dec
call
push
inc
imul
nop
inc
bound
mov
mov
adc
mov
push
pop
ja
sbb
lcall
mov
dec
mov
jbe
iret
fs
mov
out
inc
inc
out
cmp
data16
xchg
in
std
in
dec
js
lret
ja
mov
inc
frstor
dec
std
pushl
or
add
shrl
divb
sahf
repz
mov
pop
or
enter
cmp
movsl
test
je
call
pop
imul
loope
adc
xchg
jg
mov
xor
repz
xor
jmp
decl
aaa
xlat
lock
stos
adc
pop
lret
push
mov
repz
jbe
stos
rclb
lcall
inc
sbb
ficomps
imul
sbb
loop
pop
std
loope
dec
pop
aad
in
cli
out
mov
repnz
aas
dec
jne
js
push
out
pop
cmp
movsb
jmp
sub
lods
cltd
in
loop
xor
clc
movsl
shlb
mov
cmp
or
sahf
jp
outsb
popf
adc
cmp
sbb
call
cmp
xor
adc
lcall
mov
push
ret
cwtl
cs
lcall
test
cmp
test
push
cmp
pop
mov
enter
inc
aam
fistps
inc
mov
add
in
push
pushf
sbb
mov
xlat
pop
cld
lcall
loope
clc
mov
jae
dec
in
or
test
push
insb
test
jg
ljmp
jbe
add
icebp
cmp
out
enter
in
add
sub
cld
and
mov
jg
mov
mov
pop
ja
scas
pop
shrl
adcb
ja
mov
ds
jg
cmp
xor
inc
sti
dec
push
jmp
popa
shll
xchg
in
orl
push
jns
lds
rorl
push
jb
xchg
ret
cli
lahf
lret
std
xor
xchg
xor
add
test
hlt
mov
enter
call
jle
out
loopne
negb
lahf
idivb
dec
jle
mov
fsubrl
mov
ljmp
jle
xchg
xchg
sub
out
cmp
inc
push
mov
dec
jmp
pop
shl
push
mov
loope
pop
or
add
bound
cli
out
dec
repz
int
adc
xchg
icebp
push
cmpsb
ret
mov
dec
subl
icebp
lock
jb
mov
incb
out
adc
lods
es
or
out
arpl
lock
inc
xchg
addb
les
loopne
sbb
fsubrs
or
inc
cmp
push
jae
sbb
jp,pn
xchg
and
ja
jb
xchg
ja
pop
lea
cmp
mov
pop
stos
movsl
xor
sbb
aam
pop
push
push
pop
jecxz
pushl
inc
in
mov
int3
mov
push
inc
dec
pop
push
popa
scas
sar
mov
nop
mov
icebp
push
clc
loop
in
fmuls
cmp
jg
dec
mov
dec
jle
pop
test
pop
les
inc
jns
shrb
dec
imul
insb
dec
xor
xchg
insl
inc
int3
andl
mov
addb
jmp
jnp
adc
popf
int3
add
xorl
push
adc
mov
jg
imul
mov
push
cmp
pop
bound
add
push
jle
jge
mov
addr16
xor
stos
aad
test
and
cmp
jg
cmpsb
mov
lcall
jle
pop
clc
jecxz
ret
int3
xchg
sub
outsl
rcrb
popa
mov
push
scas
jne
xor
pusha
adc
repz
hlt
jns
add
inc
mov
cmpsl
and
sbb
daa
fcomip
ljmp
jmp
inc
lds
test
in
sub
ja
xchg
xlat
push
ljmp
mov
push
inc
pushf
mov
les
stos
inc
fidivs
cmp
and
mov
ljmp
jp
fwait
movsb
pop
aad
decl
xlat
iret
mov
xor
adc
pop
fisttpl
stos
add
push
pop
jl
negl
mov
daa
lods
add
mov
decl
idivb
iret
adc
mov
jno
inc
inc
je
fsubs
loop
xchg
mov
pop
pop
adc
mov
scas
insl
dec
sar
ret
jmp
inc
imul
cs
dec
and
push
iret
xlat
leave
js
push
push
mov
lcall
mov
aam
push
jmp
outsb
call
and
hlt
dec
mov
hlt
push
add
sahf
out
jecxz
mov
mov
out
imul
add
adc
push
and
inc
xchg
lret
sbb
dec
in
decl
jo
jb
push
xor
pop
ret
add
mov
xchg
jnp
push
xchg
test
decl
push
mov
popf
dec
jo
cmpsl
int
inc
in
fstpl
jns
movsb
mov
scas
add
ljmp
xor
pop
fisubs
cmp
push
lods
pop
cld
scas
shlb
pop
gs
cld
mov
dec
lret
sub
push
add
sbb
jmp
call
loop
clc
jmp
mov
jg
mov
outsl
lock
dec
ja
sar
movsb
movsl
adc
cmp
xchg
and
mov
jnp
mov
cmpsl
sub
mov
lret
enter
test
pushl
adc
mov
push
mov
add
sbb
adc
rcrb
inc
add
jmp
jnp
lds
int
or
xchg
mov
loopne
sti
mov
push
sbb
pop
inc
sbb
addb
and
mov
xchg
mov
push
cmc
mov
stos
push
cli
push
or
iret
mov
cld
or
pop
add
incl
inc
mov
xor
clc
div
xchg
fistps
xchg
lahf
mov
cmp
jae
xchg
cmp
sub
mov
mov
mov
push
xchg
dec
decl
adc
pop
enter
fidivs
pop
imul
movl
iret
mov
mov
mov
loop
loope
adc
mov
xor
aad
fidivs
cwtl
jnp
call
mov
adc
add
call
or
mov
setp
cmp
call
pop
xchg
mov
cmp
mov
lret
push
outsb
mov
shl
movsb
add
lcall
shlb
jmp
push
jno
mov
push
hlt
fcoml
pop
jg
jmp
outsl
std
jp
add
les
cmpsl
xchg
incl
xor
inc
pop
mov
sub
lret
push
adc
imul
jmp
mov
mov
ret
cmp
out
mov
xlat
add
adc
xor
out
decl
and
rolb
mov
xor
fldt
push
jne
in
xor
pushl
leave
clc
test
popa
call
xor
dec
decb
lock
ljmp
fs
xor
jmp
adc
das
mov
sbb
div
aad
scas
clc
inc
add
ret
push
jbe
test
push
inc
loop
jmp
mov
inc
fucom
push
in
pusha
xor
fcomps
xor
call
xchg
mov
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
fcmove
clc
and
cli
lcall
xor
jns
pushf
jnp
and
loop
dec
and
aam
sti
gs
ljmp
pop
fs
jb
pop
mov
shl
dec
inc
push
or
cmp
call
push
nop
icebp
ljmp
sahf
inc
inc
enter
rep
mov
pushl
pop
sbb
ss
decl
xor
repz
lea
rcrl
scas
mov
aam
or
add
lea
fcomps
int3
dec
xor
jnp
xchg
movb
sub
andl
add
lds
jge
mov
jmp
cmp
mov
addr16
imul
mov
aas
inc
aam
mov
in
pop
movsl
jnp
jo
lea
leave
call
rorb
xor
jns
dec
cmp
mov
cmp
mov
insl
mov
xchg
mul
mov
inc
or
sbb
jecxz
push
pusha
daa
dec
insl
arpl
icebp
xor
pushl
std
pusha
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
addl
clc
dec
insl
rolb
sbb
pop
pushf
cli
and
xor
sahf
mov
push
insb
lahf
insl
xchg
cmpsb
movsl
incl
dec
ficompl
popf
out
add
shr
pushl
mov
test
add
cmc
shll
sbb
ljmp
push
dec
jb
sar
fcoml
in
push
out
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
mov
fisubrl
mov
jo
inc
mov
shll
dec
xchg
popf
sbbl
push
lahf
sbb
mov
enter
stos
mov
push
or
or
out
dec
incl
call
negl
xchg
mov
daa
xchg
add
push
adc
int3
mov
ljmp
mov
push
and
mov
jbe
inc
and
popa
sti
adc
ljmp
incb
inc
jl
adc
mov
mov
and
jmp
xor
xchg
js
mov
adc
ss
mov
cli
dec
movsb
js
pop
call
adc
lcall
mov
psllw
fstps
or
jmp
push
mov
scas
dec
mov
jge
xorl
adc
lea
data16
sahf
orl
mov
incl
ret
cmp
sbb
in
loope
pop
adc
inc
dec
repz
popa
lods
rcrl
sbbl
adc
in
sbb
sti
test
cli
int3
lahf
mov
int
mov
dec
add
xchg
and
pushl
sub
ljmp
cmpl
lea
lcall
in
fwait
dec
cwtl
insl
xlat
in
pop
and
push
ret
pop
push
iret
push
cmp
jmp
mov
inc
jne
jge
aad
std
orb
or
pop
cwtl
push
jl
dec
loop
mov
mov
inc
popa
arpl
or
lock
shrl
and
test
dec
test
cltd
in
negl
cli
jg
adcl
cmp
int3
push
cwtl
cwtl
sar
ljmp
test
in
mov
stc
ljmp
sub
adc
mov
jl
test
jmp
xor
ss
mov
or
aaa
into
push
pop
inc
iret
aaa
cmp
mov
push
xchg
fidivrl
sarb
jns
ljmp
dec
sbb
sub
les
sub
es
ljmp
lock
movsb
xchg
jns
xchg
sub
lods
ds
cwtl
sbb
mov
subb
pop
ljmp
out
pop
aaa
in
push
cmp
jae
xor
jle
fwait
incl
mov
mov
fadd
xor
div
or
xchg
cwtl
jo
decl
sub
out
cmc
pop
pop
dec
jns
jmp
adc
pop
pop
push
push
icebp
imul
decl
decb
xchg
mov
into
popa
mov
cmp
out
jl
test
cmp
decl
dec
aam
xchg
psrld
push
dec
cmpb
std
out
adc
xor
ss
fnstenv
inc
cmp
ja
xchg
out
lds
mov
pop
mov
pushf
adc
pusha
out
xchg
xor
scas
sub
adc
lds
test
sub
cmp
push
fadd
out
sti
es
sbb
ljmp
in
stos
ficoms
lock
or
adc
into
and
sub
jecxz
ljmp
lcall
pop
pop
cltd
inc
dec
pop
roll
mov
inc
in
jecxz
test
into
pop
out
mov
lcall
test
cmc
dec
dec
mov
mov
push
bound
inc
fldenv
dec
fisubrs
dec
enter
add
std
mov
scas
out
mov
dec
insl
in
in
push
sub
mov
xor
adc
adc
pop
cmp
xor
in
pop
call
cli
int
or
cwtl
loopne
dec
pushf
inc
mov
test
fs
jecxz
aad
test
xor
xor
jge
xor
and
imul
add
push
dec
inc
ljmp
adc
or
jo
xchg
icebp
jmp
fildl
lds
imull
pop
into
or
lcall
leave
add
push
adc
les
gs
lods
inc
pop
adcb
jns
ja
xchg
movsb
xchg
dec
mov
aad
pushf
dec
or
xchg
adc
mov
xchg
jbe
fdiv
lcall
pop
sbb
pusha
cmp
or
cmp
cmp
lahf
mov
cmove
test
orb
loope
lcall
lcall
and
pop
push
sub
decl
in
or
fiadds
scas
insb
mov
test
pusha
sub
call
out
test
pop
jmp
out
pushf
mov
xor
mov
dec
repnz
dec
mov
incl
test
mov
or
sti
jns
add
sub
mov
popl
dec
mov
ljmp
mov
scas
push
jne
es
push
std
lcall
pop
push
lcall
and
mov
inc
jecxz
and
lahf
jmp
clc
fists
sbb
jb
lcall
leave
stos
adc
adc
and
jnp
dec
js,pn
lcall
stos
adc
les
ror
lods
dec
mov
mov
push
jp
ljmp
ss
fcomip
dec
fdivrs
and
mov
dec
inc
mov
mov
iret
filds
push
mov
jno
ljmp
clc
pushl
push
or
add
jl
mov
adc
cld
dec
add
sbb
push
test
idiv
in
shrb
out
jne
mov
inc
dec
sub
xor
or
loopne
jbe
out
icebp
mov
lods
push
push
into
adc
or
lcall
test
mov
push
pop
dec
inc
cli
imul
cld
mov
lahf
cltd
xor
sbb
jmp
xor
jnp
jp
ret
mov
mov
stos
movq
sub
or
mov
mov
jmp
icebp
shrb
pop
jnp
jbe
and
lds
mov
lods
adc
pop
loopne
std
repnz
and
mov
mov
xchg
sbb
je
pop
fistps
cmpsl
imul
cmp
ljmp
jg
push
rcr
xchg
dec
jle
jge
dec
dec
imull
rcr
loop
call
cmc
jo
incl
in
cmp
testb
ljmp
jb
out
incl
repz
out
fdivl
frstor
or
mov
je
jp
incl
mov
mov
adc
shll
ret
add
push
call
sbb
mov
ss
inc
shrl
and
ljmp
stos
push
cmp
jmp
inc
mov
jno
push
or
and
mov
clc
jns
or
test
shrb
pop
push
test
jg
mov
out
push
testl
loope
sti
in
fisttpll
outsl
cs
cmp
cs
inc
sbb
mov
pop
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
cld
mov
pop
fs
xchg
loopne
pop
add
cmp
push
or
mov
aas
rclb
lock
and
mov
loopne
ljmp
cli
cwtl
lods
xchg
cli
movsb
mov
clc
xchg
add
mov
fbstp
sbbl
arpl
clc
in
loopne
dec
ljmp
loop
fcoms
nop
mov
xlat
cs
fisubrl
mov
scas
test
xchg
and
or
cmp
shlb
sarl
cmc
adc
sahf
in
pop
xchg
mov
int3
lds
js
or
mov
dec
jmp
xchg
jbe
dec
jg
sti
xchg
testl
dec
jmp
ss
int3
pop
xchg
mov
insb
pop
ljmp
lock
dec
adc
sub
cs
psubw
rorb
popa
lret
repnz
and
call
lcall
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
shrl
hlt
and
decl
cmpsl
xchg
scas
pop
lock
pop
and
mov
xorb
mov
mov
mov
jl
ja
pushl
mov
push
gs
ds
mov
orb
imul
aaa
cmc
cmp
jp
inc
icebp
push
lcall
fbld
xchg
dec
add
inc
cmp
sbb
decl
mov
sub
or
push
push
xchg
pushf
sub
xchg
cmpsb
ljmp
jge
int3
cmp
arpl
sahf
fldl
lret
fs
scas
lea
lcall
cmp
jae
dec
leave
sbb
mov
inc
sbb
fdiv
pushl
and
sbb
jecxz
cmpsb
add
cmp
adc
fbstp
and
lods
jb
fidivrl
or
jmp
lods
cmc
popf
dec
add
fbld
or
mov
push
dec
pop
adc
sbb
dec
pop
test
adc
aad
shrl
idiv
ljmp
sub
mov
out
xchg
cmp
aas
or
repnz
lcall
out
dec
imul
and
xor
stc
dec
xor
out
push
lds
sbb
movsl
inc
or
mov
jae
mov
adc
or
adc
push
ljmp
insb
inc
das
sar
cwtl
aam
movsb
enter
ficompl
cmp
rorl
outsb
xor
sub
ljmp
push
in
arpl
xchg
lds
insl
daa
push
in
pop
out
and
push
xchg
or
dec
add
mov
mov
cmp
rolb
jne
loope
mov
push
xchg
iret
in
leave
add
and
push
and
add
sub
cli
cmp
movsb
or
pop
dec
jmp
sub
les
fsubrs
or
or
push
mov
cld
xchg
flds
jbe
repz
adc
adc
jecxz
push
popf
testl
cmp
or
xchg
sti
dec
pushf
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
lret
aam
dec
jle
enter
call
in
cmpsb
arpl
out
imul
or
mov
insb
mov
push
xchg
add
mov
sub
subb
ret
pop
or
test
leave
addr16
xchg
lds
fdiv
cmpsb
adc
inc
andl
add
cmp
jmp
mov
jno
sub
leave
inc
adc
dec
scas
loopne
mov
je
arpl
stos
jae
xlat
addr16
sti
sbbl
mov
push
fstpl
add
test
in
and
xor
push
shll
lret
stos
push
xorl
jnp
inc
sub
daa
fmuls
xor
jmp
jmp
incl
mov
daa
jmp
cmpb
test
mov
jp
mov
stos
nop
out
jnp
cmp
push
pop
aaa
lock
call
leave
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
cmp
jbe
call
push
or
scas
cmp
xchg
rorl
add
cmpl
jecxz
loopne
mov
pop
mov
push
lea
or
repz
pop
push
cmc
mov
pop
add
jmp
sahf
loopne
push
adc
cmp
jmp
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
push
dec
lcall
cmpsl
imul
pop
aad
xchg
xchg
les
jae
dec
decl
xor
cs
xor
push
jmp
in
mov
lret
jmp
mov
adc
adc
int
push
mov
mov
cmp
inc
add
jg
int3
insb
mov
or
jnp
and
pop
imul
fdivrp
mov
jae
andl
push
sub
lcall
js
pop
adc
pop
movsl
mov
mov
fwait
lea
insb
mov
mov
push
jbe
push
mov
sbb
mov
pushf
test
pop
pop
jg
fidivrs
fdivrs
xor
stos
cld
shl
mov
dec
jne
add
ljmp
xor
fiadds
mov
add
pop
repz
dec
ds
push
push
into
jl
mov
xchg
or
jo
xor
cmpsb
test
mov
sti
test
dec
cmp
incl
pushf
mov
outsl
jnp
adc
aam
jl
mov
mov
sbb
clc
push
xchg
sahf
aam
push
outsl
adc
cmp
bound
call
fs
jnp
popf
stos
xor
pop
cmpsb
inc
or
add
adc
inc
jecxz
call
cli
mov
mov
icebp
fistpll
mov
icebp
inc
mov
fidivrl
jae
mov
push
negl
int
ds
fildll
push
dec
push
jbe
sbb
or
test
mov
xchg
inc
xlat
mov
adc
inc
or
stos
pop
cld
push
sbb
xlat
ret
mov
outsb
idivb
sbb
jmp
icebp
fmuls
add
into
mov
shl
xchg
xchg
imul
xchg
cmp
movb
ret
faddp
test
adc
pop
dec
jge
stc
loop
lahf
cmp
stos
imul
ffree
jg
jno
push
nop
push
cmp
jmp
pop
out
dec
dec
imul
lahf
mov
sbb
out
fsts
push
mov
push
mov
mov
mov
pop
shrl
push
insl
loop
push
inc
repz
outsb
ret
sbb
loope
dec
mov
fs
out
jmp
fsubs
push
in
ljmp
loop
out
arpl
add
call
imulb
repnz
or
dec
in
xor
cli
movsl
push
pop
sub
mov
shrb
int
xor
decl
lcall
adc
test
negl
incl
mov
orl
int3
dec
ret
mov
inc
mov
adc
outsb
push
in
aad
scas
push
fs
shrb
shld
mov
inc
jne
fs
hlt
cmpsb
ljmp
lock
or
sbbl
enter
adc
add
aaa
fmull
mov
inc
pushf
js
inc
jge
xor
xchg
rcl
adc
sub
and
call
xorb
jno
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
lcall
ds
int
clc
adc
ret
lahf
dec
xor
push
andb
testb
aam
jmp
repnz
sbb
pushf
iret
iret
jg
or
in
in
mov
subl
inc
pop
fstl
ficoml
mov
jecxz
pop
test
or
hlt
add
mov
cmp
add
jmp
xchg
xor
into
sahf
pop
sub
mov
scas
xchg
sarb
nop
gs
sub
jmp
rcr
adcb
imul
aaa
mov
arpl
fnstcw
push
lock
jmp
cli
movlps
cmp
mov
adc
nop
dec
pop
into
mov
xchg
push
test
fists
mov
add
xor
lods
shll
add
push
xchg
pop
cmpsl
das
mov
lods
jmp
sub
movsb
pop
hlt
push
lret
enter
sarl
adc
loopne
outsl
xchg
pop
push
leave
or
pop
dec
stos
mov
dec
mov
clc
sub
xor
fs
incl
setnp
aad
pop
aaa
imulb
out
test
fstl
push
adc
cmp
pushf
cmp
mov
incl
sti
jmp
mov
nop
dec
aad
dec
push
xor
ficompl
ret
mov
into
gs
pushl
sarb
test
pop
mov
or
sbb
and
out
push
sbb
js
jo
push
add
push
mov
aam
je
mov
dec
jmp
adc
xchg
int
jg
pop
aaa
into
mov
cltd
inc
in
dec
mov
fists
rcrb
mov
sar
pushl
sub
dec
movsb
and
fiaddl
lahf
pusha
or
mov
adc
cs
in
pop
push
or
jmp
pop
inc
jns
out
scas
cmp
dec
lcall
decl
mov
and
mov
aaa
rcl
lods
or
sbb
lods
ja
movsb
mov
std
mov
cmp
or
jge
jmp
in
mov
mov
jo
xor
pusha
mov
xchg
xor
xchg
mov
cmpl
cli
pushf
xchg
int
incb
pop
inc
leave
repnz
mov
mov
mov
in
gs
cmp
or
insb
aam
rcll
mov
call
mov
pop
xlat
or
pop
push
js
cli
adc
filds
flds
jbe
cld
inc
imul
incl
int3
mov
push
and
add
inc
repnz
and
inc
or
imul
or
stos
test
mov
lods
jmp
push
jne
sti
jmp
mov
cs
jg
int
ja
adc
enter
adc
xchg
std
add
push
loop
je
add
and
jg
cli
incl
adc
daa
add
ljmp
in
xchg
mov
lock
ljmp
mov
lock
ljmp
and
jecxz
dec
or
rorb
les
inc
movsb
xor
push
loopne
mov
imul
xor
add
nop
pop
cli
mov
xor
clc
aas
in
jl
lods
aam
sbb
jbe
xchg
fst
mov
cmpsl
sub
or
fdivs
jg
pushl
jns
jmp
cli
push
push
jbe
cli
add
add
dec
xchg
mov
pusha
lods
call
cmpsb
inc
cmp
out
cwtl
push
mov
nop
into
xor
and
js
lcall
outsl
add
rcrb
nop
mov
pop
sbb
xchg
sub
ja
lahf
and
fcoml
dec
out
dec
sub
adc
movsl
inc
sahf
sti
push
jmp
add
jmp
mov
leave
mov
mov
les
sub
mov
jmp
fwait
push
mov
sbb
fs
add
push
or
add
je
lea
dec
ret
jmp
mov
push
cld
fistpll
push
jge
sbb
cmp
lcall
shll
rep
or
jmp
sar
pusha
xchg
jmp
push
jg
and
roll
mov
xchg
xor
sbb
out
and
inc
scas
xor
xor
xchg
add
lock
push
xor
or
dec
inc
cli
ret
jle
loop
jmp
fprem
mov
outsl
cli
fadd
fsubp
jle
pop
cmpsb
sub
dec
push
jle
lcall
fisubrs
cmp
out
mov
mov
in
leave
int
jge
mov
test
ljmp
jmp
lods
repz
frstor
cmp
pop
dec
mov
pop
call
cmpb
jmp
xor
aas
setno
jo
xchg
jecxz
nop
repnz
dec
std
imul
or
pushl
push
out
dec
mov
adc
movntq
out
imul
jns
pop
xchg
or
dec
add
call
mov
xchg
cmpsl
loope
lret
mov
adc
mov
in
decl
pop
xor
ss
mov
lret
adc
in
mov
fdivrl
sahf
and
jmp
dec
push
pop
leave
jmp
push
outsb
je
adc
jbe
xor
add
xchg
jb
sbb
lcall
clc
push
adc
push
jbe
push
add
mov
incl
out
mov
insb
arpl
adc
push
ljmp
xchg
cmp
and
ljmp
out
push
out
or
xchg
jg
jl
in
in
cmp
cmc
inc
aad
push
xor
add
out
stc
xor
inc
xchg
xor
outsl
das
clc
ja
xchg
mov
xchg
pop
push
jl
bt
decl
push
jp
fimuls
pop
mov
scas
pop
mov
lcall
js
sbb
mov
cwtl
inc
cmp
ja
jnp
dec
adc
cltd
clc
pop
sarl
pusha
fs
out
clc
jg
mov
lcall
xchg
stos
jp
aaa
fwait
mov
mov
decl
imul
in
movsl
orl
lods
pop
inc
addr16
test
std
ljmp
lds
cmp
xor
jecxz
jle
xor
dec
nop
ljmp
xorl
fldenv
in
stos
mulb
in
data16
cli
xchg
loop
dec
lcall
jmp
jns
pop
add
test
insl
loop
mov
arpl
fldl
lods
movsb
jl
ret
push
jecxz
cmp
incl
inc
stos
or
xor
mov
sub
dec
xor
adc
sub
out
add
pop
cld
mov
cli
cmc
xor
test
mov
les
loop
dec
lcall
dec
in
pop
imul
shl
and
shrl
or
pop
fnsave
xchg
lcall
call
dec
mov
mov
push
test
jnp
fnstsw
mov
adc
push
nop
ds
dec
and
push
imul
cwtl
pop
inc
jg
icebp
enter
jbe
outsb
clc
dec
mov
cmp
xor
shr
outsb
call
sbb
adc
cmp
pop
arpl
push
jne
dec
xchg
in
push
fbstp
fmul
lods
addr16
ret
pushl
insl
mov
xor
mov
pop
pop
push
mov
or
xchg
outsl
stc
aaa
cmp
lock
mov
repnz
adc
jl
xchg
xor
sub
cmpsl
out
cmpb
int3
xchg
mov
lods
mov
mov
and
push
enter
pusha
sarb
xor
inc
fcoms
and
call
popa
ja
xchg
mov
sbb
lret
and
push
or
aaa
mov
ud0
jg
push
repz
out
add
jns
lcall
scas
push
or
jmp
roll
sbb
fidivl
mov
out
xchg
mov
push
mov
push
push
inc
jmp
xor
fwait
mov
dec
mov
mov
js
add
call
test
mov
xchg
aas
je
imul
sub
cmp
inc
inc
std
jns
repz
ja
test
cmp
pushl
jg
ljmp
jle
jp
mov
fs
in
sbb
rol
int
push
jl
es
in
pop
imul
dec
arpl
clc
int
es
xor
pop
je
adc
and
outsb
or
sub
add
dec
gs
mov
mov
fsub
push
out
mov
fwait
ljmp
mov
aad
mov
jnp
fdivr
incl
jo
and
sbb
in
std
aam
and
dec
fisttpll
clc
sub
lahf
push
inc
xchg
mov
inc
mov
dec
mov
lret
or
jmp
pop
fnop
fisttpl
dec
push
push
sarl
clc
js
insl
add
scas
jg
lret
fabs
fsubp
and
dec
mov
add
sbb
call
bound
call
mov
xchg
dec
loopne
push
pop
add
cmp
push
jns
fisubrl
cmp
jle
jno
enter
xor
jmp
jl
rorl
decl
lods
adc
lea
movsl
jmp
jecxz
fsts
xlat
and
cmc
ja
stc
pop
in
xchg
sbb
dec
mov
lock
ljmp
push
push
icebp
scas
imull
xchg
ret
mov
cmpsb
pop
ja
shr
jecxz
rcrl
xchg
aad
lock
mov
dec
aas
adcl
dec
adc
incl
or
outsb
mov
xor
push
cmpl
es
add
nop
dec
xlat
xor
call
pop
jbe
sahf
cmp
pop
push
mov
test
mov
aam
fnstenv
inc
call
adc
incb
jb
xchg
int3
enter
in
mov
jno
outsl
cli
std
pop
or
dec
testl
pusha
sbb
ret
jnp
outsl
mov
fcomip
subb
aaa
movntps
dec
xchg
jge
cmp
call
ror
scas
lock
incl
mov
test
jge
jmp
xchg
or
xchg
cmp
cwtl
shrl
stos
scas
sub
pop
sbb
lret
add
inc
xor
sar
mov
or
fbld
sti
out
std
mov
and
lcall
dec
sbb
pop
pop
add
cmp
pop
test
pusha
jb
jge
jmp
pushf
xorl
mov
and
push
cs
xchg
add
adcb
cmp
dec
jno
ret
incb
xchg
and
jae
mov
inc
jl
add
jae
cli
xor
insl
insl
mov
jne
mov
jp
shl
shl
pop
mov
cmp
mov
bnd
in
inc
fisttps
incb
loop
scas
test
inc
fnsave
pop
fcmovne
push
sub
cmp
push
cmp
add
lcall
std
stos
pop
mov
xlat
loop
cld
and
push
push
movsl
stos
filds
rcl
inc
fldenv
and
out
dec
insb
or
pushl
lret
stos
dec
cs
mov
xor
ds
cmc
xor
mov
enter
cld
adc
out
mov
in
repnz
add
pusha
test
in
pop
in
push
clc
lods
push
sti
jnp
xor
add
fcoms
fcmovu
call
sub
jae
ficoms
ss
pop
outsl
mov
lea
popf
sub
add
lcall
out
arpl
jns
mov
xor
sbb
cmpsb
stc
int3
adc
and
jae
je
and
sbb
scas
sbb
into
shr
ss
push
push
push
sbbb
fistl
js
push
mov
ljmp
mov
cmpsl
rcrb
call
sarl
arpl
hlt
call
adcl
ds
nop
inc
sti
sub
cmp
jg
inc
or
rcrl
sbb
jp
dec
cmp
sub
repnz
jg
push
outsl
push
xor
icebp
xor
mov
cltd
cwtl
out
sub
lcall
xor
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
mov
pop
loop
xchg
hlt
jmp
push
cwtl
xchg
jge
cmp
jp
sar
decl
mov
cwtl
push
and
ds
in
ror
shlb
dec
jmp
inc
aas
jns
jne
jg
outsb
adc
rcll
push
out
mov
mov
cmc
in
dec
inc
push
vmaxps
incl
or
stos
pop
rorb
testl
or
or
lock
adc
xor
dec
add
hlt
inc
lcall
cli
cmp
lahf
adc
es
lcall
popa
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
and
cmp
inc
ds
cmp
pushl
mov
fcoml
xor
test
js
jge
sti
and
aas
add
int3
andb
fcmovbe
push
and
shl
pop
cs
cmp
fnstenv
pop
mov
or
pusha
adc
or
mov
pop
inc
lea
aam
sbb
add
dec
scas
clc
outsl
adc
xchg
outsl
call
rclb
ljmp
xor
mov
inc
mov
iret
sub
setge
mov
fwait
mov
decl
daa
pop
popf
mov
sti
mov
js
arpl
lea
cmp
sub
clc
inc
rorl
cmpsl
cmc
icebp
notl
mov
mov
lcall
lahf
ss
mov
mov
icebp
jmp
add
loope
das
clc
ficomps
jnp
and
negb
inc
clc
repnz
fsubrl
push
and
clc
mov
jmp
pusha
out
and
xchg
jb
shlb
jge
sbb
incl
outsl
imulb
in
add
pop
aad
push
cmpsl
cltd
adc
pop
jns
call
test
pop
and
call
mov
insl
loopne
in
push
test
cmp
addr16
int
inc
dec
pop
test
rclb
dec
cmc
lahf
sub
add
rol
pop
pop
jg
test
nop
clc
aam
fwait
shrb
les
pop
outsl
ljmp
cli
inc
imul
imul
ljmp
dec
jnp
lods
and
pushl
out
es
jle
lds
pop
imul
daa
jle
or
or
pushl
and
testl
lret
out
cld
out
mov
cmpsb
mov
and
mov
repz
aam
ficompl
das
aaa
cmp
jg
jmp
aas
pop
fnstcw
xor
clc
pop
jmp
jae
sub
in
jge
fimuls
lds
mov
mov
andb
sahf
gs
xchg
pop
sbb
mov
sub
sub
lcall
xor
mov
xlat
rorb
ret
mov
dec
pushf
sub
push
ljmp
ljmp
sub
mov
iret
push
inc
in
jb
sub
enter
lods
test
imull
std
fcomip
fisubrs
and
cmp
add
xor
imul
pushl
and
jno
xor
insb
lds
out
sbb
lods
xchg
je
ljmp
mov
xchg
mov
push
push
out
out
or
mov
cli
out
add
and
pop
inc
outsl
clc
rcll
pop
mov
sahf
sbb
sub
adc
jmp
arpl
loopne
gs
mov
push
push
sub
xor
inc
cmpsl
out
subl
std
adc
shll
sub
fdivr
in
xor
pop
lods
pop
ret
and
push
loopne
loopne
test
cld
in
add
mov
sbb
cmp
push
dec
pop
cmpsl
hlt
in
pop
lea
scas
sbb
lcall
hlt
data16
mov
add
fcomi
inc
aaa
ficompl
js
xchg
loop
mov
cli
mov
mov
xchg
inc
es
and
sub
pusha
loopne
pushl
fwait
dec
push
ds
sbb
ljmp
testl
pop
inc
test
mov
fs
cmp
pop
push
call
xor
ret
inc
cmpsl
data16
cmp
fs
pushl
jae
xchg
enter
stc
push
mov
insl
adc
mov
cli
arpl
out
jg
jp
ljmp
push
xor
dec
cmp
addl
jle
pushw
sub
mov
scas
jmp
popa
lds
xor
inc
daa
add
fmull
out
fisttps
data16
test
sub
test
jle
mov
test
xchg
decl
jmp
xchg
mov
jbe
mov
or
cltd
jg
pusha
out
cmp
jns
inc
push
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
dec
loopne
iret
mov
mov
sbb
lods
xchg
aad
dec
aaa
and
cld
aad
fnsave
mov
mov
loope
sbb
test
mov
pop
dec
repz
arpl
fs
mov
inc
pop
push
mov
mov
push
std
fildll
sahf
cmp
or
movsb
add
jns
and
aam
incl
dec
dec
pop
jnp
push
in
lds
leave
cmp
jo
repz
ds
std
cmp
aam
mov
push
push
arpl
push
add
rcll
jle
xchg
repnz
mov
add
shr
lds
mov
outsl
mov
daa
cmp
std
jmp
cmc
stos
ret
sti
adc
je
out
inc
pop
add
jmp
icebp
lods
and
test
xlat
push
mov
loopne
in
movsl
popf
sbb
decl
lock
adc
nop
adc
insl
pop
stos
sbb
jae
jne
mov
sbb
sahf
push
lcall
or
arpl
lahf
repnz
mov
cltd
movsb
lods
imul
mov
or
ljmp
cli
clc
or
lret
pushf
cmp
dec
or
insl
stos
push
xlat
push
lock
push
out
lcall
hlt
lret
cmp
dec
arpl
fadds
mov
push
mov
or
incl
fwait
jne
test
jge
shrb
call
std
pop
dec
cmp
lods
push
fwait
sbb
in
stc
inc
mov
add
mov
cmp
ja
sub
and
stc
add
incl
or
lock
mov
movsl
js
int3
xor
lcall
sub
ljmp
sbbl
mov
mov
fists
inc
mov
aas
push
dec
xchg
xchg
mov
cmp
xchg
sbb
aas
and
fwait
mov
jp
lcall
in
cmp
jb
incl
fnstenv
mov
das
pop
hlt
mov
xor
rorl
or
jmp
push
test
push
mov
inc
outsl
add
loopne
pop
pop
insb
in
cmpsb
inc
dec
pop
mov
popa
add
mov
daa
hlt
dec
dec
into
in
mov
add
mov
leave
ret
jo
mov
push
pop
mov
jmp
mov
adc
jp
xor
dec
lcall
mov
lret
lock
inc
insb
mov
sub
pop
clc
movsl
mov
adc
pushl
ljmp
aaa
filds
shrl
cmp
orl
decl
mov
cmp
xchg
sub
push
ret
popf
fsubl
push
pop
mov
in
xorl
sbb
fisubl
xor
and
push
pushf
call
call
jbe
pop
ss
jmp
rcll
mov
mov
int3
fnstsw
nop
sub
mov
cs
in
gs
call
in
outsl
scas
xchg
dec
repnz
fdivrs
cmp
push
push
pop
outsb
mov
movsl
mov
push
loop
xchg
mov
pushl
insl
or
daa
xchg
shrl
and
push
in
rorb
loopne
decl
mov
jnp
dec
imulb
mov
jmp
stos
and
mov
sub
push
jp,pt
scas
stos
xlat
add
jne
push
lods
push
cmpsb
mov
ljmp
add
fst
pop
xchg
cmp
lahf
mov
jmp
aas
jno
or
iret
lock
mov
in
popa
into
ror
fistpl
aad
mov
aas
imull
ret
dec
call
not
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
fnstsw
inc
daa
xchg
test
pop
push
in
jmp
inc
je
mov
clc
lahf
in
pop
inc
pause
jbe
add
ret
test
cwtl
in
push
dec
rcrl
mov
xor
shlb
push
cs
js
daa
add
jg
ljmp
or
pop
aam
rcl
ljmp
jno
pop
fnsave
notl
cli
aaa
mov
pop
adc
lock
imul
inc
or
jge
arpl
dec
aas
mov
imul
jnp
jno
call
adc
andb
inc
mov
pop
mov
mov
clc
fildll
mov
xor
cmp
xchg
xor
push
pushl
mov
dec
xlat
lea
ror
ret
add
cmp
pop
xor
out
scas
pusha
mov
pushl
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
lcall
adc
or
pop
lcall
rcrl
fcom
cmpl
hlt
addr16
pop
adc
add
sbb
stos
adc
mov
sub
inc
je
inc
fnstenv
inc
das
test
or
sub
cmp
inc
mov
jle
js
in
jo
push
push
adc
push
ds
sahf
pop
cmp
ljmp
cmc
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
adc
lret
mov
loop
dec
dec
xor
mov
decl
in
dec
mov
icebp
test
fdivrl
jne
repz
incl
dec
mov
adc
and
or
sti
lret
loopne,pn
sub
add
jle
dec
mov
outsb
xchg
cmp
push
and
push
mov
stos
push
sub
imul
jecxz
repz
cmc
mov
pusha
dec
push
decl
push
sbb
jecxz
push
pop
icebp
lock
movsb
adc
dec
xchg
push
fildll
and
sbb
xchg
and
mov
sub
scas
ds
xchg
pop
xor
cwtl
xor
bound
pop
movsb
mov
jp
orb
mov
or
jg
pop
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
sub
jg
cmc
test
inc
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
cld
test
add
call
mov
inc
push
lods
mov
add
arpl
mov
repz
roll
xchg
cmpb
mov
repnz
adc
sub
hlt
jg
iret
cmp
pop
pop
pop
cmc
jmp
rolb
xor
jno
sbb
arpl
add
jp
sub
call
cmp
scas
out
mov
or
mov
push
inc
jg
push
daa
ds
ljmp
mov
add
sub
mov
cmp
test
movsb
cld
pusha
pop
mov
test
int
lcall
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
lcall
push
add
and
jge
mov
shrl
out
push
loope
mov
mov
jmp
stos
incb
mov
cmpsl
sbb
out
fdivrs
push
ret
mov
jg
ljmp
in
push
mov
xchg
cmp
in
fiadds
incl
sub
push
int
pop
lock
ljmp
repz
out
xor
fildll
push
push
or
mov
or
mov
inc
movhps
xor
das
clc
adc
push
xor
mov
inc
pop
in
sub
fistps
fs
mov
pop
or
insb
pop
or
test
push
jge
pop
cmp
enter
mov
xchg
push
clc
pop
push
push
out
int
mov
dec
aam
inc
sbb
or
fistps
repz
jns
in
insb
inc
ljmp
adc
pop
push
fcmovnb
das
add
sbb
adc
inc
push
pop
cmp
das
int3
xchg
rcrb
mov
popa
test
insl
and
mov
cmc
xor
xchg
sub
mov
jbe
lret
aaa
and
stos
data16
aas
ds
out
jb
into
xor
in
sub
mov
lcall
mov
push
loope
jmp
add
out
xchg
cli
xchg
or
mov
movl
outsl
and
mov
loope
ljmp
divb
out
xchg
int3
or
sbb
lcall
inc
add
mov
pop
cmp
inc
mul
loope
decl
outsb
js
aad
out
cmpsl
dec
subb
dec
xor
adc
shll
push
dec
decl
mov
mov
adc
mov
or
jno
jno
pusha
push
incl
js
inc
cmp
scas
and
test
mov
inc
push
mov
call
pop
mov
fsubrl
jno
cmp
xor
les
pop
repnz
out
sbb
fists
out
gs
repz
incl
idivb
inc
clc
scas
mov
test
ljmp
imul
mov
dec
arpl
cld
xor
jecxz
pop
lock
cld
sbb
and
arpl
iret
sbb
test
in
cmp
ret
popf
popa
iret
mov
int3
mov
push
xor
cmpsb
je
dec
push
cwtl
sbb
or
push
lcall
pop
repz
cld
jmp
daa
xlat
scas
out
dec
stc
ficoms
and
jg
mov
add
insb
mov
mov
rclb
enter
mov
mov
out
xchg
pop
xor
dec
mov
push
inc
jb
lock
mov
lds
fsubl
dec
mov
adc
decl
lahf
cmpsl
sbb
mov
in
xchg
xor
mov
jmp
lock
jmp
sub
rolb
mov
dec
repnz
push
xor
test
daa
cmp
pop
push
xchg
pop
scas
in
cmp
mov
gs
dec
test
mov
cmp
mov
push
xchg
decl
imul
push
pop
shll
xchg
jecxz
sti
jnp
mov
jmp
cwtl
inc
pop
setle
adc
scas
dec
loope
and
inc
xor
scas
xchg
jmp
ss
jmp
scas
gs
js
dec
add
jae
into
dec
cmp
mov
dec
outsl
pop
cmp
ficompl
xchg
ds
adc
or
xorb
adc
pop
push
jmp
ret
mov
test
cmp
mov
xchg
dec
shl
jmp
repnz
jo
xchg
je
inc
or
adc
sub
or
add
cmpsb
into
xor
cld
push
cmp
mov
cmp
call
aad
add
cld
orl
stos
push
test
xchg
pop
ds
or
dec
mov
xchg
sbb
jle
xchg
push
xor
xor
sub
popa
pop
jo
pop
mov
lock
mov
mov
call
pop
push
fs
gs
mov
adc
xchg
clts
inc
mov
jmp
sbb
jg
call
fstpt
pop
iret
cmp
mov
shl
cli
dec
imul
hlt
xchg
aad
lcall
sbb
add
xor
lret
popf
icebp
pop
push
ud2
ds
sub
fwait
sub
dec
roll
rcr
lods
sub
scas
cmpsl
xchg
jbe
outsb
into
shl
test
rcr
push
xchg
out
and
in
mov
clc
pop
in
sub
or
push
jno
test
cli
decl
cmp
push
push
daa
loope
stos
fcomp
cmp
lods
je
sub
ljmp
fidivrl
in
push
loope
repnz
push
loop
sbb
jmp
jmp
sub
fsubl
xchg
pop
mov
xchg
push
jge
jbe
sbb
and
cmp
filds
push
sahf
dec
pushf
ja
loopnew
pop
pop
out
sub
jb
push
sub
int
adcl
mov
mov
sub
jnp
adc
inc
xchg
cmp
ljmp
mov
int
out
mov
and
or
je
divl
repnz
push
xlat
das
negb
imul
inc
cltd
mov
jmp
cli
or
inc
add
mov
lret
push
pop
adc
fwait
sbb
push
cmp
lds
decl
jmp
push
jns
fdecstp
repnz
push
int
adcb
mov
sbb
out
insl
scas
lea
pop
loopne
ja
jo
push
mov
es
sub
adc
push
push
pusha
fimull
push
push
adc
ljmp
shrb
xor
movsb
or
insb
loopne
clc
in
push
fidivrl
ljmp
pop
in
mov
cwtl
add
pop
and
lcall
sub
fwait
push
lret
in
imul
fldenv
pop
test
sub
adc
mov
std
dec
sbb
data16
or
in
fldcw
sub
nop
aad
stc
cld
mov
mov
mov
gs
jb
push
mov
sbb
or
or
cmp
jo
fdivs
xchg
add
mov
mov
add
sarl
mov
cmp
sub
mov
decl
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
pop
fbstp
mov
addb
out
push
lock
push
jmp
ret
adc
mov
popf
and
pop
lock
subl
inc
in
add
addb
mov
mov
pushf
cmp
push
pop
cmpsb
dec
shr
adc
stos
mov
pop
ret
jge
sub
dec
sbb
mov
aad
xchg
jecxz
jle
aaa
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
fld
pushf
iret
jl
jnp
pop
cli
decl
test
mov
icebp
add
mov
popf
stos
pushl
cmpsb
arpl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
jl
dec
call
ljmp
out
inc
cmp
push
adc
dec
loopne
and
leave
rcll
xor
fs
push
loop
xchg
mov
adc
jns
jo
outsb
push
jnp
dec
testb
call
mov
lock
cmpsl
stos
mov
push
mov
hlt
mov
cltd
add
fwait
lcall
into
jo
clc
pop
test
adc
loop
xor
mov
call
das
in
push
daa
jl
push
fcoml
cmpl
mov
lock
outsb
cmp
scas
cmp
std
add
pusha
ret
stos
ret
or
ret
out
lret
sub
fcompl
xchg
cmp
mov
pushl
adc
push
jg
dec
cmp
out
fstpl
or
add
cmp
sub
ljmp
pop
sbb
pop
movsl
jecxz
fnstcw
das
mov
call
and
xlat
fbld
pushf
add
into
and
leave
clc
addps
dec
lcall
test
iret
idiv
call
int
cmp
cmp
jno
jmp
jge
ja
and
or
or
decl
mov
cmc
aaa
xchg
jb
mov
das
or
filds
cmp
data16
jle
mov
lods
xlat
out
es
sbb
fcomip
xor
jmp
jg
adc
sahf
sub
stos
push
leave
cli
lret
movsb
dec
mov
loopne
jae
inc
sbb
mov
mov
pop
sub
mov
test
sub
inc
dec
lcall
jns
mov
data16
mov
mov
pop
or
push
pop
mov
lret
push
mov
inc
clc
decl
push
js
xchg
push
push
xor
mov
hlt
cmpb
cmp
mov
push
mov
mov
lds
mov
xlat
mov
lcall
xchg
and
pop
mov
sbb
xor
jnp
jg
out
or
pop
arpl
push
mov
xchg
pop
clc
inc
push
lea
les
and
pop
jp
dec
mov
call
sbb
mov
ds
push
cmpsb
mov
push
add
jp
or
pushf
mov
xor
out
cwtl
mov
adcl
out
mov
add
add
cmp
mov
jmp
cmp
inc
aas
mov
jle
jge
fs
xor
dec
sbb
jb
jg
add
mov
mov
mov
adc
pop
mov
cmp
jbe
dec
jbe
jbe
mov
and
orb
mov
jge
dec
sub
lcall
out
pop
out
mov
push
add
into
add
dec
arpl
sbb
fildll
lret
push
sub
cmpsl
stc
dec
mov
sbb
lahf
jle
or
pop
sub
aad
pushl
xlat
inc
fimull
dec
jbe
cmp
cltd
in
add
subb
movsb
mov
jp
mov
xor
aam
adc
into
mov
pop
dec
mov
outsl
gs
inc
cmp
pop
stos
xor
jae
pop
pop
movsl
mov
int
in
mov
push
pusha
sbb
mov
cmc
sub
insb
adc
mov
clc
shll
sbb
jmp
or
shl
add
negb
mov
pop
iret
dec
mov
in
loop
xchg
inc
shr
sub
lcall
cli
push
popa
sub
adc
mov
imul
ds
shl
lods
enter
decl
fstl
or
jbe
insl
cmp
sub
int
int
sbb
lea
incl
pop
jnp
xchg
in
add
dec
xlat
or
dec
adc
rcr
cmp
in
cs
dec
pop
sub
ja
icebp
int3
mov
jecxz
loop
sar
inc
nop
sub
xchg
sub
out
addb
scas
stos
rcr
or
dec
or
mov
js
adc
call
loop
cli
imul
jl
cmc
add
cmpb
mov
int3
and
pop
mov
fdivs
fistps
jns
insb
ljmp
popa
cmp
sbb
add
inc
ljmp
cli
jg
arpl
rcll
into
sarb
jecxz
addl
cmc
sub
loopne
call
clc
frstor
push
dec
movsb
lea
out
add
enter
std
dec
sub
out
push
outsl
sub
pop
cmp
push
push
aas
and
call
out
sbb
sbb
test
mov
rcll
sub
inc
stos
mov
push
jnp
and
jl
sets
cli
iret
jecxz
ss
pushf
and
push
ljmp
mov
jnp
dec
pop
xchg
dec
rol
pop
in
adc
in
and
outsb
int
inc
test
in
xchg
sti
pusha
lret
cmp
stos
decl
xchg
in
fsubrp
cmpsl
cmp
pop
fiaddl
pushl
pop
cli
rcll
cmp
pop
adc
shrb
inc
cmpsb
push
dec
fmul
popf
jmp
jb
jg
push
cmp
or
jno
add
xchg
inc
or
inc
sbb
mov
lcall
jle
pop
fwait
inc
leave
sub
inc
testb
fcoms
aam
cwtl
adc
mov
xorl
jmp
mov
ljmp
repnz
dec
and
mov
mov
or
sbb
cmpsb
sub
gs
fs
call
inc
sub
stos
sub
dec
mov
adc
jecxz
sbb
in
add
ljmp
adcl
xchg
sbb
es
sub
scas
enter
mov
dec
data16
mov
xchg
cmpb
lahf
push
add
repnz
sar
cs
daa
arpl
jp
push
or
in
inc
leave
sbb
jmp
out
cs
nop
or
les
sub
push
sub
fcomip
fists
sbb
insb
addl
jg
popa
mov
mov
pushl
xchg
adc
aad
out
icebp
inc
loopne
addl
jae
push
lods
loopne
dec
xchg
cmp
or
ljmp
ficomps
test
or
sbbl
subl
inc
add
adcb
lret
mov
mov
arpl
mov
repnz
nop
sbb
subl
xor
or
outsl
mov
stc
and
jl
add
data16
push
imul
daa
cmpsb
adc
incl
popf
stos
arpl
inc
aaa
push
adc
mov
push
enter
jno
and
nop
lock
mov
aas
dec
adc
call
jne
ret
and
xchg
mov
dec
mov
jne
hlt
sahf
push
mov
or
popa
test
mov
jo
jns
daa
adcb
insl
ja
lcall
mov
jl
into
scas
or
xchg
pop
sub
fadd
movsl
and
int3
mov
decl
and
xor
out
scas
js
and
pop
jnp
stc
mov
cmp
call
sub
sbb
and
xchg
xchg
jmp
pop
movsl
decl
daa
or
adc
out
cli
sub
dec
or
es
in
lret
mov
xchg
add
mov
xor
ljmp
xchg
xchg
mov
fs
inc
mov
mov
idivb
loop
enter
loopne
stos
push
sub
pop
or
jae
push
ss
xchg
cmp
movsb
mov
stos
push
ja
add
cs
and
das
adc
jae
mov
stos
sub
or
push
jns
loop
call
ds
fimuls
inc
push
mov
mov
pop
jmp
movsl
or
mov
adc
cli
lcall
cmpsb
pusha
daa
jbe
and
scas
jmp
mov
fnstenv
je
ficompl
jbe
out
or
pop
fwait
cmc
bound
int3
or
add
ds
aas
idivb
out
data16
insb
jne
push
leave
cltd
sub
mov
andl
sbb
notl
das
and
lahf
jae
out
fidivl
out
pop
or
test
mov
filds
push
mov
ret
mov
or
push
push
fistpll
jmp
cmp
xchg
sbb
outsb
lock
lcall
mov
add
imul
data16
pushl
std
in
dec
test
add
mov
ds
mov
inc
testl
incl
mov
sub
lods
lahf
icebp
cmpsl
xchg
lods
push
mov
cld
ret
lods
in
in
sub
pop
cmp
out
inc
sub
popa
loope
lcall
pop
xor
dec
and
cld
mov
cld
js
aad
loopne
addr16
sahf
adc
jmp
cmpsb
mov
movsb
andl
jmp
cmpsl
xchg
mov
adc
push
iret
push
add
adc
ficompl
sbb
in
jg
mov
arpl
mov
push
jnp
mov
inc
push
loop
mov
aas
scas
or
mov
mov
or
xor
xlat
lea
jmp
mov
sub
jae
fcompl
hlt
cltd
sub
scas
push
sub
popf
and
jmp
test
std
incl
mov
inc
repz
xchg
xor
push
dec
adc
rcll
add
xchg
pop
aad
push
icebp
repz
sti
lds
mov
or
mov
pushl
or
xor
bound
gs
shll
pop
mov
incl
scas
pop
cmp
pop
enter
es
fidivrs
aam
lds
xor
adc
mov
fistps
xlat
inc
sbb
lods
dec
daa
xchg
cmp
or
pop
cmp
xor
lcall
mov
fs
aaa
shll
cltd
cmp
arpl
loope
sbb
sbb
cmp
dec
inc
aaa
cld
pop
cli
sub
nop
sbb
incl
push
outsb
xchg
pushf
jecxz
rcrb
scas
into
sub
icebp
or
orl
mov
jmp
orl
lods
mov
sbb
xchg
das
jnp
popa
sub
cmp
sbb
mov
std
pop
add
test
fucomip
test
xchg
call
aas
movsb
imul
sbb
jp
jno
xchg
cwtl
mov
push
xchg
push
inc
out
pop
adc
dec
ljmp
in
mov
mov
in
mov
cwtl
mov
aaa
jl
or
int3
jae
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
jmp
sarl
adc
and
dec
fneni(8087
dec
push
out
cltd
cmp
adc
mov
mov
cwtl
xchg
lcall
sbb
fwait
imul
push
pop
jge
stos
les
hlt
cmp
fdivrs
xchg
test
mov
js
das
xchg
fidivrl
mov
test
pop
jecxz
mov
xchg
dec
ds
mov
mov
shlb
mov
pop
sbb
repnz
ja
mov
insb
pusha
insb
imul
call
lods
int3
aaa
sar
adc
sub
fs
push
inc
inc
xor
les
cmpsl
mulb
decl
add
fistps
xchg
and
mov
js
lods
jp
pushl
mov
imul
scas
fsubrs
pop
je
sub
jge
arpl
jp
push
stos
jbe
lcall
jne
imul
pop
or
decl
repnz
loop
lods
iret
call
sbb
sub
xorl
or
rcrl
jge
in
mov
test
gs
mov
jecxz
js
call
mov
xor
dec
imul
stos
add
sbb
inc
mov
mov
lds
outsb
cli
sub
pushf
sbb
add
cmc
lcall
push
lret
mov
gs
pop
movsb
push
dec
or
mov
std
xchg
adc
lret
aad
add
adc
add
sub
out
nop
lock
inc
loopne
loop
mov
stos
dec
imulb
pop
loopne
lret
ja
rcll
mov
in
leave
dec
sub
add
scas
mov
es
nopl
out
ficoml
xor
xor
inc
push
decl
pushl
pop
xor
push
ds
pop
cld
push
insb
lret
and
outsl
dec
mov
jg
cmp
enter
addb
xor
cmp
ljmp
ds
leave
cmc
pop
shrb
arpl
xor
je
ret
int
push
mov
rorl
adc
mov
iret
jecxz
mov
ljmp
out
push
lods
rcr
dec
daa
mov
cwtl
inc
adc
and
pop
hlt
jg
sahf
push
mov
lcall
pop
xchg
iret
push
aaa
scas
aam
add
lcall
pop
mov
into
mov
fstl
rcrb
add
push
sahf
add
cmp
test
or
mov
cmp
inc
inc
adc
mov
xor
mov
push
jecxz
jmp
pusha
sbb
push
inc
push
sub
sub
xlat
dec
inc
mov
cmp
add
in
jmp
ds
ret
movsl
or
insb
pop
mov
push
rcrl
adc
pushl
sub
and
mov
xorl
loopne
sub
jmp
test
inc
mov
jnp
ds
xor
in
jns
xchg
xchg
lods
sub
pop
cmpsl
popa
mov
call
inc
mov
xor
sbb
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
pushf
dec
pop
add
out
xchg
add
les
adc
ljmp
cld
xchg
push
outsl
shrl
outsb
inc
les
fsubs
cmp
push
or
jg
fbstp
jl
jb
pop
pop
fmuls
lea
jne
mov
fs
les
push
test
push
add
ret
pushl
sbb
jb
cmp
add
or
inc
sub
subb
dec
outsb
call
clc
das
pop
push
adc
sbb
cli
mov
pusha
shlb
mov
ljmp
outsb
mov
xor
lods
imul
dec
xor
daa
lahf
out
clc
call
mov
ljmp
and
sbb
inc
push
enter
lcall
mov
pop
sub
cs
inc
rcrl
decl
movsl
mov
push
xchg
vunpcklpd
xchg
dec
sbb
sbb
sbb
jmp
sbb
xchg
and
push
cwtl
push
cmpsl
or
cld
xchg
cmp
jae
daa
int
jecxz
decl
cltd
rorl
mov
sub
pop
dec
test
out
mov
int
repnz
fcomip
and
pop
enter
inc
jge
addr16
jb
imul
jbe
movsl
lods
jg
repz
push
sub
sub
inc
or
dec
mov
and
jg
or
inc
mov
cmp
sbb
ret
add
out
sbb
fwait
mov
dec
leave
addr16
mov
lahf
int3
mov
mov
aam
mov
test
mov
imul
mov
pushf
pop
sub
cs
add
test
clc
inc
jl
jmp
mov
cmc
loopne
lcall
and
add
mov
mov
pusha
cmp
adc
fsubrl
or
mov
sbb
mov
pushl
neg
or
dec
xor
loopne
mov
outsb
lahf
out
xchg
out
cwtl
sub
ret
push
xchg
mov
in
ss
xchg
mov
out
pop
pop
add
jg
fs
adc
cmc
or
ds
xor
dec
xchg
ljmp
fsubl
fcmovb
xchg
nop
fdivrs
lea
je
and
pop
push
cmp
pop
inc
xchg
push
fiaddl
imul
fwait
mov
mov
loopne
mov
and
ljmp
clc
dec
ljmp
paddusw
xchg
stc
or
pop
enter
dec
mov
cltd
aaa
cld
decl
std
push
mov
push
xor
add
addr16
jmp
or
xchg
mov
mov
cmp
fadd
outsl
cmp
mov
aam
scas
ljmp
cld
cmp
jecxz
idivl
and
call
in
mull
call
adc
xor
int
outsb
and
ret
and
mov
loop
xor
mov
mov
adc
ss
xor
sti
in
adcl
pushl
and
shrl
cwtl
pop
and
mov
push
sub
imul
lcall
popa
pop
das
mov
mov
xlat
insb
jns
xchg
and
fmuls
ss
mov
xor
mov
rdmsr
stos
fnsave
and
xlat
adc
jmp
enter
jne
aaa
test
mov
xchg
pop
cwtl
out
cld
add
adc
and
call
cs
fimuls
adc
add
jae
push
jg
dec
sbb
pusha
inc
leave
xchg
push
mov
adc
imul
xlat
jno
lret
enter
pushl
lret
aad
fs
xor
jle
jge
outsl
or
xchg
in
std
incl
mov
xchg
pop
sub
into
or
pop
mov
filds
faddl
bound
fiadds
push
adc
dec
fs
pushl
lea
jbe
int
cwtl
jge
push
fs
loop
or
dec
rorl
pop
push
test
in
fisubs
mov
and
test
call
ljmp
dec
jnp
int3
sti
loope
cmp
xchg
mov
cmp
adc
mulb
sti
mov
mov
clc
xor
ficompl
jbe
jmp
jecxz
adc
xor
add
jge
pop
int
and
stos
ret
xlat
dec
icebp
push
lods
xchg
idiv
mov
ret
xchg
popf
push
cwtl
jecxz
loope
aaa
dec
outsb
or
gs
pop
pop
pop
pushf
cld
cld
rcl
jb
mov
jl
sbb
jmp
mov
icebp
decl
shll
idivb
push
add
jecxz
imul
mov
repnz
ljmp
mov
outsb
stos
in
ds
sub
cli
mov
jge
jmp
fcomip
rclb
dec
add
inc
imul
pushf
nop
fwait
test
insl
repnz
decl
pop
mov
add
mov
inc
in
push
adc
repnz
sub
enter
out
inc
loope
lods
addr16
ljmp
and
push
inc
insb
dec
xchg
fdivrl
xchg
loope
call
sbbb
inc
sub
psubw
fsubrs
addr16
mov
cmc
ljmp
or
fdivrs
inc
cli
and
out
adc
subl
xchg
es
xchg
pop
and
inc
mov
xorb
jne
cmp
les
jno
in
fldenv
icebp
mov
scas
std
add
add
sbb
push
les
cmp
decl
mov
lods
cwtl
push
sbb
loope
mov
adc
xlat
jnp
sahf
incl
test
adc
jne
aaa
fcom
rcr
pop
mov
clc
outsb
push
xor
jecxz
lcall
push
out
cmpsl
xor
jno
sahf
mov
pop
fstpt
enter
push
out
aaa
call
and
out
bound
inc
test
shrb
pop
or
lret
pop
js
pop
xor
decl
push
jge,pn
cmc
lcall
repz
movsl
inc
jne
movsl
test
out
cmp
inc
mov
arpl
mov
sbb
cmp
std
sarb
inc
pop
cmpsb
sub
xor
mov
les
mov
jno
push
push
lods
xchg
xchg
js
movsl
adc
cmp
aad
mov
test
outsl
jno
pop
or
xor
incl
mov
pop
hlt
jne
leave
or
jo
cmp
sbb
or
xor
add
lds
jle
mov
cmc
pop
jns
test
or
jg
lock
xchg
stos
addr16
push
xchg
pop
dec
xlat
sbb
pop
in
ljmp
adc
mov
imul
lahf
outsl
test
lea
pop
cmpb
ds
aas
and
insl
push
dec
xchg
clc
jmp
xlat
mov
pop
cmp
iret
xor
add
mov
shl
jg
ljmp
dec
sbb
iret
push
jg
iret
push
xchg
xchg
xchg
jo
xchg
fmulp
daa
es
xchg
fcomip
jmp
out
lcall
shlb
int
mov
and
ljmp
jae
mov
daa
adc
lahf
jg
mov
dec
adc
out
mov
fcomip
jg
inc
push
push
aam
push
jo
jo
sti
xor
out
test
std
jge
dec
ret
add
pop
jp
pop
sub
jns
mov
iret
or
jmp
scas
ret
insl
stc
dec
stos
sti
test
or
fs
lcall
clc
popa
lahf
in
ds
imul
pushl
insb
jge
jg
or
cld
and
xor
icebp
stos
in
jp
sub
lahf
or
dec
push
daa
pop
insb
call
jl
mov
dec
pop
cmpsb
mov
stos
loopne
jae
jno
fcomip
xchg
shrb
push
sbb
xor
sub
icebp
pop
xor
sbb
sub
pop
clc
rcr
movsl
js
add
call
push
icebp
addr16
je
inc
adc
js
lret
lret
xor
xchg
je
lods
pop
call
or
xor
andb
pop
loopne
in
sbb
std
shlb
addr16
cmp
sti
ljmp
hlt
test
gs
mov
out
test
fmulp
lret
shll
ljmp
mov
repnz
adc
bound
cwtl
nop
sbb
negl
jns
push
incl
fidivrs
popf
arpl
in
mov
test
enter
add
pop
add
mov
stos
imul
or
decb
inc
jo
sub
ret
mov
jo
inc
lcall
test
mov
sbb
push
shlb
inc
push
push
sub
inc
std
jbe
mov
jmp
cwtl
mov
data16
cs
dec
idivb
daa
outsb
xchg
jae
and
lret
xlat
das
xor
mov
xor
jg
ja
push
jle
sbb
xchg
mov
andl
aad
push
mov
das
mov
test
xchg
jo
ljmp
push
or
inc
xor
cmp
add
cld
pop
sbb
mov
cmp
stc
pop
pushl
sub
sbbb
xchg
lock
aam
sub
pusha
shl
cwtl
jb
scas
sbb
ljmp
idiv
and
sar
jo
rcll
cmpsb
cli
dec
cmp
arpl
jmp
ss
add
sub
inc
mov
add
adc
jo
pop
mov
adc
sbb
pushl
mov
and
mov
adc
sub
pop
cli
mov
scas
imul
incl
leave
mov
in
dec
inc
sbb
adc
sbb
fst
fidivrl
xor
inc
lods
cmpb
jecxz
icebp
or
or
adc
jg
les
and
jae
pusha
cli
clc
out
lret
les
jg
outsl
jle
hlt
inc
sub
xchg
loopne
pop
leave
mov
insl
xchg
push
or
sub
jae
mov
jbe
xchg
ljmp
loope
sbb
aam
jmp
push
jbe
incl
and
fsubs
int3
jle
xchg
mov
out
ds
bound
loopne
jmp
sub
rorb
cmp
push
adc
jbe
xchg
inc
inc
sbbb
leave
out
add
cmp
pushl
in
sbb
mov
test
mov
enter
ja
mov
call
cld
loope
sbb
dec
rcrb
dec
inc
out
movsl
mov
inc
aad
decl
mov
fldcw
sbb
cltd
jp
mov
mov
pop
iret
xor
push
inc
cmc
movsb
mov
pop
mov
icebp
cmp
xchg
lds
pushf
shlb
js
pop
ret
add
addb
movsb
pop
dec
negb
adc
icebp
out
xor
pushl
les
repnz
enter
mov
flds
outsl
stc
cmc
jnp
mov
dec
jmp
mov
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
adc
jmp
push
xchg
fwait
lds
movsl
test
mov
pop
push
ja
xchg
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
push
sbb
inc
dec
test
enter
fcoms
out
push
jbe
jnp
test
imulb
mov
xor
das
es
pop
scas
std
jmp
cltd
push
cmc
jg
lcall
sbb
inc
add
ss
add
int3
mov
adc
mov
lcall
sbb
sarb
outsl
in
cmp
ja
push
mov
pop
inc
pop
adc
movlps
cmp
and
cmpsl
and
jo
mov
xor
jno
mov
mov
mov
out
sarb
in
cli
and
jne
cld
shll
sbb
incl
add
pop
cli
adc
xor
fdivrp
or
inc
sub
imul
sbb
jg
jno
mov
dec
pop
lock
out
pushf
movsb
insb
dec
scas
xchg
rcrl
xor
adc
pushl
or
mov
fsubl
inc
rcrb
icebp
xor
add
add
out
xchg
inc
test
ss
jg
sbb
sbb
cmp
int3
push
das
push
icebp
jnp
pop
lods
ljmp
les
ljmp
jmp
inc
mov
mov
scas
aaa
popf
test
mov
lahf
pop
xchg
icebp
loop
outsl
cli
sti
orl
jb
lods
push
pop
lahf
or
push
ljmp
mov
push
outsl
adc
into
sub
and
mul
data16
mov
lret
std
cmp
aam
mov
mov
push
ja
or
clc
adc
push
sar
jns
xchg
pusha
shrl
loope
popf
or
fmuls
xchg
mov
mov
daa
push
dec
mov
jg
jecxz
jns
pminub
int
out
sbb
pop
xor
inc
decl
or
xchg
sbb
cli
sbb
dec
dec
shlb
call
add
mov
repz
fsubl
jne
pop
sub
push
ret
pushl
lret
clc
es
push
ljmp
push
xchg
call
decl
dec
imul
lods
leave
pop
push
push
jne
dec
divl
adc
sbb
jae
into
sbb
push
ljmp
stos
pushf
sbb
test
xlat
or
je
test
in
call
daa
xchg
stc
shlb
lret
pop
rcr
popa
cmpsl
pop
pop
mov
scas
nop
lock
cmpsl
sub
jo
icebp
das
repz
dec
insl
mov
stc
pushl
cltd
add
ja
sub
jmp
sub
pushf
test
lret
adc
int
mov
xchg
mov
and
hlt
jmp
cmp
into
pusha
rcll
loop
push
xchg
jae
or
enter
popf
in
fcomip
call
ret
inc
pop
push
pop
iret
ficoms
lret
or
adc
out
jg
cli
call
popf
mov
push
or
aad
xchg
out
mov
and
out
lahf
add
call
inc
call
pop
push
and
clc
mov
fidivl
cmpsl
xlat
and
hlt
inc
dec
out
inc
lods
loop
pop
xchg
pop
dec
jg
add
ds
add
incl
cmc
aaa
cmc
fs
or
enter
enter
mov
pushl
test
arpl
mov
lods
jnp
dec
push
dec
cli
in
push
inc
out
push
ret
cltd
insb
dec
mov
push
pushl
xchg
pop
mov
test
ret
movsl
adc
push
mov
icebp
test
ds
push
les
popf
push
inc
cmp
test
rolb
push
mov
xchg
cmp
push
add
cli
and
dec
imul
loope
call
jle
cmp
mov
xor
rcll
test
mov
std
inc
jnp
lcall
and
mov
jb
into
mov
xchg
cli
or
pushl
lret
jl
mov
shrb
xchg
movsb
cmpsb
cmp
or
pop
pop
movsb
mov
pushl
roll
push
xlat
or
push
lahf
jmp
mov
mov
dec
cld
call
push
cmp
sahf
cmpsb
and
leave
call
sub
dec
and
outsb
dec
faddp
adc
sbb
and
cltd
jb
punpckhbw
scas
ja
inc
adc
test
ja
gs
xchg
roll
xchg
push
lret
cmp
jmp
cmpsb
add
mov
push
sbb
scas
shll
adc
cmp
mov
rcl
jge
dec
jecxz
inc
aas
pop
mov
decl
push
jmp
ficomps
out
and
push
test
inc
ds
mov
mov
and
push
int3
test
roll
jmp
out
mov
iret
xchg
ret
mov
gs
aam
add
or
lcall
loope
mov
int3
mov
mov
cmpsl
push
xchg
xlat
mov
adc
dec
push
lcall
push
mov
mov
and
push
mov
sub
sub
cmpsl
pop
xchg
sbb
enter
pushl
test
movsl
stc
push
cltd
mov
xchg
push
dec
scas
push
mov
fwait
in
adc
inc
out
rcrl
roll
in
stos
sbb
inc
xchg
or
mov
xchg
test
ret
rolb
std
arpl
movq
subb
call
outsb
adc
dec
clc
jg
xlat
pop
lcall
je
shr
dec
push
sub
sub
call
imul
arpl
movsl
xor
stos
or
sub
divl
int3
mov
adc
test
push
in
pushl
xchg
adcb
cmp
mov
fwait
imul
test
int3
movsb
xchg
hlt
pusha
scas
ds
mov
push
push
cmc
fsubs
jne
mov
call
frstor
scas
sub
push
add
shll
cmpsl
dec
push
outsb
test
mov
mov
mov
fwait
jns
xor
mov
or
and
push
lock
xchg
sub
lcall
sub
enter
out
gs
movsl
test
lahf
sbbl
sub
int
ds
fcomip
push
or
and
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
add
call
cmp
fisttpll
mov
mov
insl
scas
xchg
rcl
leave
das
and
push
push
scas
mov
lods
sar
in
jg
fwait
imull
xchg
mov
dec
jne
inc
cwtl
jmp
outsb
mov
mov
addb
out
push
dec
lods
adc
mov
repnz
outsb
enter
iret
loop
decl
inc
test
icebp
popa
xchg
ret
fldt
add
mov
xchg
cmpsl
inc
in
test
out
jle
movsb
data16
jl
ret
loope
std
add
in
ljmp
push
out
and
dec
ret
jg
lods
mov
fisubs
arpl
mov
int
push
jns
in
mov
andl
adc
mov
or
cmp
std
sub
aas
icebp
fcmovnb
mov
decl
mov
adc
lods
clc
sti
leave
test
loopne
test
or
mov
stc
mov
push
push
push
lret
and
jbe
insl
add
clc
add
mov
push
cmp
outsl
xchg
pop
movsl
pop
dec
mov
dec
stc
push
xchg
sbb
imul
call
les
xchg
lock
ss
movsl
cs
mov
and
das
mov
decl
pop
push
dec
lcall
dec
leave
inc
test
aaa
jle
push
sarl
jmp
sub
fcomip
outsl
cltd
mov
inc
das
pushl
push
and
cld
ror
stc
lods
jbe
stos
dec
out
fiadds
xor
cmp
mov
and
jne
pop
pop
out
dec
pop
lcall
cld
call
cld
lcall
xchg
loope
and
fadds
xchg
scas
jno
jne
jecxz
cld
mov
jmp
add
leave
aam
jle
jnp
and
les
mov
repnz
push
jp
arpl
push
or
sub
or
push
add
lods
shll
pop
aas
lcall
decl
stos
mov
pop
pop
mov
sarb
dec
sub
xchg
mov
xchg
loop
cld
add
mov
sti
inc
sbb
into
cmp
push
jle
decl
sub
cmp
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
mov
lds
mov
stos
sbb
test
adc
cs
mov
and
jmp
fsubl
adc
cmp
out
mov
jp
loope
out
or
mov
call
ja
or
ja
push
subb
sti
cmp
in
pop
pushf
inc
sbb
movsl
das
es
out
stos
dec
push
mov
xor
jecxz
cltd
popa
inc
jne
addr16
lret
sbb
mov
ret
subl
xor
mov
sbb
xor
jae
sbb
ljmp
pop
subl
add
pusha
subl
xorb
popa
fs
cmp
movsb
mov
ljmp
out
pop
in
cmp
aaa
mov
cld
mov
das
fwait
jbe
sbb
sub
ljmp
add
sarb
or
in
cmp
into
jle
inc
test
cmpl
dec
mov
lahf
lock
fsubs
ja
mov
push
cmpsb
mov
mov
rcll
mov
lea
sbb
stos
decl
imul
lods
addb
scas
mov
arpl
adcb
jmp
data16
enter
pop
mov
sbb
mov
xchg
movsb
lea
jmp
incl
test
xchg
mov
push
xor
scas
push
inc
sbb
mov
clc
aas
dec
daa
les
jmp
clc
pop
pop
shl
lods
xchg
jne
sbb
push
mov
mul
adc
ljmp
adc
ljmp
sub
sbb
jae
add
inc
dec
pop
lds
ss
ds
aas
lods
sub
fldcw
lcall
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
and
aam
aas
mov
push
cmp
push
das
or
push
jp
add
mov
mov
dec
js
in
pop
or
cmp
and
inc
shrb
leave
ss
xor
mov
lcall
out
aas
push
xchg
mov
les
and
nop
dec
dec
scas
mov
aam
icebp
pop
sbb
dec
sbb
das
aam
pop
loopne
cs
mov
mov
mov
pop
test
inc
ja
shrl
cmc
cmp
into
lds
inc
mov
nop
scas
push
js
ss
sbb
jg
ljmp
jo
sbbb
fstpt
jmp
jp
mov
inc
fildll
call
out
cmp
dec
cli
nop
test
sbb
fs
push
test
movsl
mov
fs
aad
aam
test
push
cmp
mov
jg
ljmp
lods
and
xor
js
jbe
dec
in
adc
jmp
push
je
push
jne
mov
xchg
mov
xchg
or
jp
xchg
inc
rcl
movl
pusha
jl
scas
out
sahf
sbb
test
xchg
xor
ficoml
pop
jge
xor
jmp
adc
or
sub
mov
and
mov
scas
cld
pop
mov
push
jae
inc
daa
inc
add
leave
ret
es
in
sub
mov
sar
stos
xor
jae
fidivl
loop
leave
testl
ljmp
or
xor
clc
mov
mov
sbb
xchg
cmp
bound
pop
in
cmp
incl
cwtl
pop
ss
dec
lods
jmp
xchg
adc
in
xor
ret
loope
std
pop
gs
mov
inc
dec
je
je
mov
mov
call
fidivl
je
call
inc
jne
lret
cmp
repnz
add
sub
dec
pushf
mov
vmovapd
sbb
aad
and
add
into
and
sbb
mov
pop
repnz
loop
rolb
pushf
lahf
and
aad
sub
mov
gs
lcall
rolb
fdivrp
xor
notb
add
inc
rorb
push
xchg
xchg
inc
icebp
xchg
mov
int3
aam
sub
es
lea
je
testb
enter
xchg
dec
push
roll
lods
jb
jecxz
decl
fwait
je
imul
aaa
and
inc
xchg
pusha
imul
xchg
xlat
out
fcom
popl
je
jg
xchg
ss
imul
negb
aam
ds
std
call
or
leave
imul
gs
mov
inc
outsb
mov
decl
adcb
neg
xor
push
jbe
fld
or
lds
outsl
cmpsl
lods
jle
and
sub
subb
lcall
call
lcall
ja
xchg
mov
aam
mov
push
cld
incl
jnp
dec
loope
and
ror
mov
mov
sub
jg
and
mov
fcmovnbe
add
jg
sarb
xchg
outsb
out
movsb
mov
pushf
xor
pushl
lret
in
push
sub
sarb
pop
divb
mov
sti
std
mov
push
adc
cltd
and
lret
pop
sbb
hlt
xor
hlt
sbb
incb
add
lret
es
out
lcall
xchg
mov
movsb
pop
xor
hlt
mov
test
and
std
pop
pop
jmp
ljmp
lahf
iret
dec
mov
lahf
movl
dec
or
shl
xor
mov
cmp
or
and
adc
mov
xor
je
leave
and
xchg
xchg
mov
jge
and
pop
sub
adc
gs
dec
fildl
std
add
loop
jmp
rclb
jns
mov
imul
mov
ja
adc
pushl
dec
adc
addr16
int
gs
lret
sbb
jnp
imul
ljmp
pop
fcom
push
xchg
adc
popf
into
mov
insb
out
mov
xchg
divb
add
cmp
mov
sbb
cwtl
inc
cwtl
cld
aaa
and
pop
adc
scas
jmp
rcl
mov
out
xchg
mov
hlt
mov
mov
push
call
test
xchg
mov
adc
mov
repnz
sbb
xchg
cmpsl
je
fneni(8087
sub
outsb
or
dec
repz
cmc
pop
jle
mov
mov
and
ljmp
cmp
int
xchg
add
sub
push
popa
scas
imull
hlt
mov
push
mov
jns
cld
popf
call
push
xchg
mov
cmpsl
add
ljmp
sub
cmp
xor
pop
imul
pushl
xchg
fnstenv
sbb
stos
repz
jns
pop
push
mov
cmp
fdivl
incl
bound
xchg
rcr
pop
out
rolb
aas
test
or
jg
pushl
int3
loop
pop
adc
inc
inc
into
push
mov
mov
rcll
cltd
clc
cmp
jne
aam
inc
mov
outsb
mov
test
gs
pushl
or
sub
mov
push
nop
test
dec
dec
jbe
lret
jo
push
sub
jg
inc
cld
icebp
push
test
mov
ljmp
call
out
out
dec
push
jge
fcoms
shlb
daa
in
ljmp
movsb
ljmp
sub
jmp
mov
fwait
and
push
aam
out
xor
subl
repz
imul
add
int3
ds
xchg
sbb
ljmp
mov
arpl
lea
mov
pop
jnp
adc
sahf
sar
pushl
jb
outsl
dec
into
lret
push
inc
repz
lods
push
adc
cli
sub
ret
repnz
dec
lea
xor
push
bound
lahf
sbbl
mov
sbb
jp
push
negl
xchg
inc
dec
mov
mov
mov
sub
outsl
or
in
call
mov
xchg
dec
xor
jl
push
push
mov
in
pop
xchg
or
outsb
push
jge
ficompl
pusha
insl
mov
ret
push
out
cltd
dec
push
sbb
and
cmc
inc
jbe
mov
xchg
ret
adc
pushl
roll
inc
xor
in
mov
mov
int3
sub
mov
enter
ljmp
mov
sti
jg
cmp
mov
test
aaa
repnz
js
push
iret
aaa
fstl
adc
lcall
and
xchg
cmp
out
lods
dec
cmp
fsts
jbe
nop
lea
popf
mov
jg
js
adcl
int
fsubrl
xor
jle
and
pop
aas
push
rolb
sbb
call
fcoml
sbb
or
inc
dec
cmp
leave
pop
dec
mov
adc
clc
mov
and
or
push
or
or
adc
or
adc
push
test
movsl
test
mov
call
mov
shlb
fdivp
aam
test
adc
stos
aad
sarb
mov
lods
cld
or
outsl
lahf
hlt
fldcw
call
adc
jmp
flds
fists
sbb
push
int
push
mov
lahf
sbb
sbb
xchg
call
lret
into
les
mov
test
xchg
mov
fisubl
pop
divl
fsubs
lods
enter
into
dec
scas
sub
adc
insl
sbb
xchg
int
nop
sub
lods
jbe
pushl
mov
es
bound
aad
dec
or
pop
test
jle
jno
dec
ljmp
incl
pop
pop
xchg
xor
mov
xor
jne
aam
pop
push
stos
push
sar
dec
mov
aad
push
jo
jecxz
xchg
or
pop
pop
jno
add
mov
ljmp
mov
add
aad
xchg
ljmp
ja
test
ficomps
insl
add
cli
std
pop
loopne
cld
ss
jge
mov
fcmovnu
arpl
lret
hlt
pop
pop
xor
xchg
test
xor
adc
lcall
sub
pusha
aaa
xor
lcall
mov
push
popf
dec
popa
xchg
fs
jg
mov
aaa
mov
mov
rorb
mov
call
stc
xchg
jb
or
push
loopne
fisubrl
iret
ljmp
popf
xchg
sbb
push
fwait
mov
ret
push
loope
enter
leave
scas
pop
jmp
pop
xor
add
inc
inc
jbe
insb
stos
mov
movsb
insb
jge
cltd
mov
bound
cltd
xchg
sub
push
xchg
ficompl
sbb
mov
adc
ficompl
pop
lret
mov
push
sahf
mov
test
dec
loop
jp
idivl
dec
popf
pop
ret
in
out
je
call
dec
out
mov
stos
aam
pop
ljmp
clc
shll
mov
mov
jmp
or
out
repz
fcoms
dec
call
inc
insl
sti
adcb
scas
decl
ljmp
imulb
pop
out
orl
movsb
sbb
jb
inc
mov
out
daa
mov
push
cmp
aas
push
xchg
pop
add
mov
xchg
call
leave
in
mov
das
mov
addb
and
pop
dec
ja
xorb
idivb
incl
sub
pop
es
repnz
rclb
aad
dec
xchg
pop
mov
and
jne
hlt
fucomi
lods
outsb
call
ja
dec
pusha
cmp
dec
insb
stc
mov
aaa
das
jl
jae
call
pop
add
cmp
ljmp
popf
pmulhw
or
pushl
sub
xor
dec
push
inc
add
mov
decb
fdivrs
in
bound
adc
or
push
pop
out
imul
js
xchg
arpl
orl
mov
pusha
pop
push
pop
es
sub
jnp
test
jg
pushf
mov
in
jnp
mov
mov
sti
inc
push
inc
clc
mov
cmp
incl
andl
fwait
xchg
jp
push
ja
pop
push
popf
fldcw
dec
frstor
shll
decl
lret
pop
and
int
repnz
mov
hlt
shlb
cmp
orb
movsl
les
fadds
js
lret
and
xorl
or
xor
cmp
ficoml
push
push
aad
sbb
test
lcall
xorb
sahf
sbb
call
fwait
jle
xchg
incb
sub
andb
js
bound
clc
loopne
lock
sub
ljmp
pop
ja
test
test
inc
and
xor
sub
jno
lods
jp
mov
out
incl
das
cli
or
sub
xchg
sub
in
ljmp
insl
loop
cmp
pushl
push
call
popf
adc
cmpb
dec
mov
std
adc
xlat
hlt
xchg
incl
mov
sub
sbb
inc
hlt
loop
sub
out
ljmp
push
push
pushf
pmaxsw
mov
pop
sahf
idivb
sbb
jmp
xor
and
mov
jge
sub
push
and
cmp
fnclex
dec
pop
sbb
push
or
jg
ja
inc
xor
pop
jb
push
hlt
popf
mov
sbb
pop
xchg
jg
lret
sbb
sub
dec
adc
imul
xchg
repnz
ljmp
outsl
cmc
scas
inc
loope
mov
ret
cmp
inc
out
enter
mov
pushl
leave
add
lcall
sbbl
in
xchg
adc
adc
js
std
test
xchg
fdivl
xchg
push
sub
jmp
aad
jle
fiaddl
addr16
movl
fcmovbe
shl
dec
fs
pushl
jo
leave
add
dec
ret
imulb
xor
mov
push
mov
imul
adcl
cld
push
mov
inc
fcomi
lods
xchg
mov
fiadds
ret
adc
adc
push
jmp
int
push
decl
lock
mov
orl
cmp
call
push
fxtract
jo
cwtl
mov
insl
mov
pushf
mov
outsb
or
cmpsl
push
jbe
cmpsb
sub
xlat
cmp
cmp
cs
xor
insl
test
out
daa
adc
out
clc
neg
in
xor
lea
sbb
and
subl
clc
iret
cli
les
test
mov
aaa
inc
shr
inc
nop
xlat
jo
cltd
jg
imul
mov
shrb
and
rcll
or
push
int3
aam
enter
and
lods
iret
ljmp
pop
sbb
sbb
sub
pop
cmpb
mov
das
push
loope
mov
call
sub
vpsubusw
inc
ljmp
aam
filds
cwtl
dec
ret
iret
sbb
sti
aad
je
fs
cmc
xor
sti
mov
pop
sub
data16
repnz
fs
dec
ljmp
jbe
inc
lods
pushl
notb
sbb
inc
cmp
fidivrs
pop
ds
jmp
leave
stc
lods
aam
lcall
decl
push
nop
dec
scas
mov
arpl
and
cmp
icebp
jae
jl
push
adc
ljmp
push
cltd
sbb
and
push
jb
jmp
fmul
and
decl
lock
imull
xchg
je
ror
cmpsl
dec
sbb
aad
addr16
jl
pushl
or
pop
and
inc
mov
shrl
jmp
push
push
cmp
fstpt
jb
int3
jns
push
cli
leave
and
mov
in
ret
cmpsb
adc
xchg
ljmp
mov
mov
pushl
shrl
das
add
cmc
popf
xlat
movzwl
mov
and
or
xchg
ljmp
aas
mov
ss
ljmp
cmp
or
mov
ret
lcall
stos
pop
sub
pop
fsubrl
cwtl
or
push
data16
hlt
pop
mov
mov
stos
and
cwtl
lock
mov
adc
inc
cmp
not
push
movsl
test
jno
js
mov
inc
mov
aas
shl
stos
inc
pop
add
pushf
into
pop
dec
sub
dec
mov
in
insb
incl
jp
pop
lods
out
imul
inc
pop
add
jmp
jmp
and
cmpsb
push
mov
sbb
xchg
or
test
imul
inc
ds
fbstp
pusha
dec
mov
mov
hlt
js
jmp
xchg
add
call
mov
adc
mov
fnsetpm(287
sub
pop
mov
out
cmpsb
hlt
mov
push
or
sub
std
sub
or
jp
scas
les
shll
xchg
xor
mov
cmp
cmpb
inc
xchg
push
call
or
add
call
xchg
test
lret
or
mov
sbb
arpl
xchg
pop
gs
les
jg
mov
pop
sbb
repnz
fistl
adc
enter
pushl
std
lods
push
mov
aam
jnp
rorb
out
aam
jp
test
jo
popf
xor
pushl
mov
cld
pop
mov
popa
jecxz
addr16
out
fldt
fidivrs
je
repnz
jmp
out
xchg
or
xchg
test
lcall
cs
out
jne
loop
loope
aaa
subl
cld
jo
in
fdivrl
jno
incl
imull
pop
xor
jo
dec
xchg
sti
cmp
icebp
xchg
jg
jmp
mov
or
test
and
xchg
shl
sbb
pusha
mov
dec
dec
pusha
adc
and
cmpsb
rcr
insl
inc
fnstsw
adc
cmp
setp
add
int
push
cmpsb
pop
xchg
pop
xor
sub
mov
adcb
push
sub
jmp
scas
sbb
test
add
xchg
mov
into
js
xlat
ljmp
test
loop
call
adc
shrl
dec
or
sub
fisubl
cmp
hlt
dec
fists
or
sbbb
sub
cld
jle
jnp
cmp
into
aad
xor
mov
dec
hlt
fcoms
inc
xor
mov
pop
lods
arpl
sbb
adc
xchg
xlat
lea
mov
dec
mov
inc
movsl
mov
sub
out
int
xor
xor
cmp
dec
pushl
sub
jp
mov
push
sbb
dec
mov
and
mov
mov
mov
in
incl
jg
hlt
call
addb
in
dec
fcompl
jg
or
fimuls
add
sarl
dec
setno
mov
pushl
jg
lahf
mov
out
mov
push
add
pushf
lds
inc
pop
lods
jg
add
xor
mov
add
mov
stos
cmc
sub
dec
push
push
add
push
and
test
mov
cmp
call
cmp
cmc
or
xor
jmp
or
jb
sar
dec
shlb
and
scas
cmpb
adc
ret
movsl
and
adc
and
add
scas
lods
xor
stos
jmp
pusha
adc
xchg
ds
fld
mov
arpl
mov
in
and
xor
dec
adc
or
jl
jg
mov
push
sbb
je
lret
add
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
sahf
sahf
ljmp
sub
mov
sarb
arpl
add
call
mov
out
sbb
dec
movsb
je
xor
es
ljmp
pushf
lock
call
xlat
leave
sti
testb
pop
jl
imul
push
jae
loop
mov
lock
add
push
adcb
xor
int
pop
xchg
nop
mov
in
or
mulb
mov
shrl
decl
pop
sbb
mov
cmpsl
dec
xchg
push
jns
mov
sub
push
nop
outsl
xchg
pop
sub
add
push
or
push
cltd
sub
call
jle
shlb
adcb
pop
es
loope
ret
push
dec
xor
fcmovu
and
sbb
into
pop
sbb
sub
lods
add
mov
mov
insl
and
xchg
test
incl
mov
mov
mov
jnp
subl
outsb
filds
cs
incl
inc
xlat
loope
jmp
sbbb
das
aad
cmp
lret
mov
loopne
roll
push
incl
bound
sub
jle
inc
mov
push
dec
and
mov
dec
xor
iret
sbb
sub
adc
imul
ds
shlb
in
shl
ljmp
lea
ja
cmp
incl
push
pop
mov
sub
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
incl
pushf
jne
sub
sub
mov
jge
ljmp
fdivrs
mov
sbbl
sub
decb
jmp
mov
adc
andb
daa
fcompl
mov
test
ret
cmpsl
test
rcl
es
cld
out
add
bnd
sub
cmp
or
mov
pushl
and
loopne
ret
fistpll
add
push
push
lret
xor
push
dec
popa
jns
push
dec
outsl
or
cmp
cld
pop
jnp
add
xchg
orb
mov
das
dec
fcomip
add
data16
sbb
sub
pop
fcoms
pop
fidivs
decl
adc
xchg
adc
mov
loope
or
lods
jnp
xor
xor
jns
test
cld
sbb
pop
xorb
ljmp
lea
jns
enter
fwait
fdivr
dec
in
xor
dec
frstor
fwait
cwtl
or
push
lcall
fwait
jmp
sub
push
or
add
mov
call
mov
jno
mov
mov
std
in
subb
sub
sti
adc
insb
loopne
popa
enter
adc
lock
xchg
mov
scas
fildl
mov
cwtl
imul
or
xor
xchg
xchg
add
and
aas
aas
or
sbb
out
stos
or
pushl
insb
pop
out
inc
stc
inc
popf
dec
test
mov
pop
call
loopne
lods
aam
fisubrs
xchg
lcall
ljmp
call
cltd
fwait
mov
push
pusha
aam
not
sbb
and
stos
mov
mov
das
sar
or
add
dec
hlt
cmp
loope
cltd
addr16
cmp
pop
inc
icebp
notl
inc
insl
gs
jnp
jo
out
ror
lods
fisubl
jl
and
push
std
lret
jnp
std
mov
inc
push
xor
push
imul
dec
or
jg
jl
add
stc
jge
adc
mov
jo
cs
lods
lcall
js
jmp
sbb
stos
lcall
sti
jg
cld
sbb
movsl
add
adc
inc
test
sub
iret
test
inc
add
pop
sar
decl
int3
and
xchg
mov
mov
cmp
daa
and
fnstcw
mov
jg
lret
or
mov
rcl
lret
push
add
scas
mov
or
idiv
pushl
cwtl
inc
scas
aas
xlat
mov
push
push
jns
cmc
arpl
push
inc
mov
loope
pushl
mov
cmp
jbe
xor
test
div
repnz
cli
xor
cli
in
fists
call
mov
pop
push
cs
adc
mov
decl
lahf
and
je
cmp
xchg
mov
mov
std
pusha
out
inc
push
repnz
sar
cwtl
arpl
mov
test
jb
mov
out
sarl
sbb
ljmp
push
pop
je
or
cwtl
addr16
clc
push
mov
dec
xor
and
adc
push
lock
adc
sbb
aas
xchg
and
fwait
dec
call
mov
cltd
and
lret
popa
xor
push
sbb
mov
jb
xor
popa
adc
sbb
insl
lcall
insl
cmc
and
mov
sub
ljmp
sbb
pop
cs
jne
stc
mov
cli
jg
stos
mov
sbbb
adc
cmp
fisubrs
xor
mov
jg
outsl
lret
and
mov
cmp
test
xchg
cs
fsubs
popf
in
test
mov
dec
sbb
ret
mul
dec
movsb
ljmp
jmp
sbb
ljmp
xchg
fcoml
call
sub
adc
jp
decl
mov
jno
call
sbb
pop
and
dec
pop
sahf
pop
push
je
mov
call
push
xor
push
jg
mov
loop
je
fildl
decl
cmp
push
nop
idivb
test
lods
mov
movsl
movsl
call
jmp
cmp
test
inc
insl
mov
mov
xor
inc
and
into
and
ret
pop
test
cli
xor
notb
addr16
jmp
js
nop
scas
lds
cld
mov
pop
enter
shll
adcb
mov
sahf
pusha
jo
ja
das
adc
call
repz
cltd
arpl
jae
mov
call
inc
push
push
mov
repz
test
xchg
comiss
loop
hlt
adc
or
xchg
in
mov
movsl
les
mov
shlb
mov
decl
ret
xor
sahf
lret
dec
mov
loop
hlt
xorb
fisubrs
and
popl
lock
inc
std
dec
sbb
fistpl
cmpsb
or
adc
rol
in
decl
rolb
test
xchg
iret
xchg
cmc
mov
and
xor
mov
outsb
cltd
fildll
mov
inc
aas
in
cwtl
sub
or
and
incl
pop
cld
arpl
imul
out
add
test
pop
roll
or
jmp
cmp
fnstsw
and
rolb
mov
jae
ljmp
pop
jecxz
mov
pushf
cltd
or
cmp
fbld
rcrb
std
push
inc
in
jb
out
loopne
xor
push
add
mov
push
stc
in
ljmp
sbb
jne
shr
cmpl
xchg
or
int
mov
negb
incl
fidivs
push
cmp
or
add
or
inc
pop
xchg
cmp
sub
in
enter
call
sbb
popf
and
lods
xlat
aad
dec
pop
mov
imul
jo
mov
rcll
into
subl
and
ljmp
call
mov
xchg
sub
div
dec
or
mov
jb
xorl
sub
aaa
sub
inc
mov
pushl
loopne
lcall
aam
pushf
loope
dec
dec
enter
pop
in
inc
push
xchg
outsb
decl
sbb
rolb
addr16
ja
jne
jo
test
test
add
int3
dec
out
and
int
decl
idiv
pop
test
xchg
gs
jmp
or
fwait
popf
push
sub
fnsave
loop
sub
xor
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
pushl
sub
xchg
ss
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
mov
xchg
into
leave
in
xor
inc
mov
and
lret
rolb
mov
pop
popa
ss
adc
push
xchg
test
cmpsb
jmp
nop
xlat
enter
or
incl
xchg
xchg
mov
dec
fstpt
loopne
xchg
pop
mov
cmp
sub
adc
mov
int3
cmp
loop
mov
cld
mov
ds
sub
jmp
dec
pop
test
jae
in
mov
popa
add
dec
cbtw
imul
ret
mov
pushl
orl
lcall
sbb
xchg
bound
int
lock
cmpsb
dec
mov
cmp
call
movsb
mov
cmp
popf
jge
adc
insl
xchg
jo
sarl
jge
mov
adc
pushl
fcmovnbe
inc
ret
das
inc
cmp
mov
xchg
aaa
cld
call
jo
lds
call
scas
sbb
jle
jp
outsl
fnsave
jl
test
divb
push
cmp
inc
mov
dec
sub
adc
or
xor
push
mov
xorb
inc
xchg
out
cmp
adc
ficomps
aad
dec
pop
sbb
adc
pop
decl
lock
push
insb
push
dec
into
jbe
icebp
sub
inc
repz
pop
mov
out
mov
mov
gs
push
lret
mov
ja
sub
fdivrs
jbe
mov
lcall
imul
or
ds
sbb
cmp
jmp
xor
cwtl
mov
int
loope
es
sar
jo
pop
push
sahf
push
sbb
cmpsb
fsubs
mov
gs
add
adc
push
movsl
repnz
lahf
pop
cmp
mov
mov
fdivr
mov
cmp
fwait
push
faddl
pusha
xchg
mov
fistpll
jbe
movsb
jmp
ljmp
pop
movsl
out
cltd
pop
xchg
inc
push
mov
xor
mov
fdiv
mov
sbb
pop
cmp
aaa
cld
decl
inc
ja
aam
jno
out
adc
in
ja
jecxz
cs
lock
fcmovu
imul
cmp
inc
lcall
add
push
adc
in
mov
jg
adc
add
ljmp
ret
nop
int3
out
push
mov
fadds
mov
cld
incl
aas
adc
aas
ljmp
xor
fstps
mov
pop
push
inc
mov
cld
call
lods
sub
mov
push
push
scas
aad
adc
sti
push
popa
std
imul
inc
cld
repz
pop
ds
sbb
mov
lcall
cmp
fnstsw
popf
pop
xorl
or
shlb
ja
cmp
nop
cmp
mov
scas
incl
fwait
imul
mov
jne
and
pop
pushl
pop
push
jge
pushf
cli
rcl
cmp
mov
aam
mov
lods
lods
add
out
add
mov
je
fldt
test
add
call
test
test
mov
bswap
xor
cwtl
test
pop
sbb
dec
add
jns
loope
sub
mov
mov
sub
jle
and
or
ficompl
cmp
mov
add
mov
mov
cmpsl
or
inc
hlt
lods
imul
or
mov
sub
mov
fcmovnb
fwait
sub
mov
mov
and
mov
push
cmp
pop
mov
xor
xchg
inc
xorl
mov
inc
rorl
cmp
shrl
jo
iret
data16
sbb
lcall
enter
push
adc
cmc
stc
mov
mov
pop
mov
mov
bound
pop
jbe
add
pusha
jae
rolb
sbb
xchg
mov
loope
ret
mov
cmp
mov
lcall
sbb
je
push
mov
add
gs
push
xor
mov
popf
xchg
xor
or
es
dec
outsl
push
fbld
mov
pop
adc
fwait
incl
iret
popa
or
aaa
loopne
cmp
movb
sub
push
cmc
mov
lods
xchg
arpl
cmp
pop
mov
pop
popf
xchg
subb
sub
sub
enter
int
xchg
sub
xor
pop
cmp
ljmp
ja
mov
hlt
pop
dec
inc
call
jge
call
adc
incl
clc
xor
out
push
pop
sbb
dec
cs
decl
cld
lods
hlt
sub
push
loopne
cld
and
pop
or
pushl
inc
push
out
xchg
gs
adc
rorb
cltd
jge
push
mov
pushl
enter
ljmp
xchg
into
push
jmp
aas
aad
int
or
fnsave
jp
icebp
lcall
cwtl
adc
cmp
loopne
jg
inc
sbb
xor
cmp
jle
insb
or
adc
pop
outsl
and
dec
call
push
stc
fdivr
ret
add
sbb
faddp
cmp
push
cmp
xchg
lods
push
pop
sbb
das
sar
and
push
mov
xchg
ffreep
mov
inc
mov
lcall
fs
fxtract
loop
pop
aad
cmc
pop
sub
mov
sbbl
cmp
incl
test
andb
scas
xchg
mov
call
popl
clc
stos
decl
cmpsl
fisubl
std
sbb
cmc
pop
sub
dec
mov
add
cld
stos
out
pminub
mov
fildll
movsb
pop
mov
mov
int
or
sbb
sarb
jns
out
and
lahf
sub
or
xor
mov
jmp
in
mov
call
xchg
std
jne
jp
adc
or
into
xchg
aas
mov
inc
lcall
inc
jp
sbb
jecxz
jmp
enter
jecxz
or
cltd
pushl
popl
push
jo
lahf
mov
push
dec
fildll
arpl
cmp
and
adc
ss
cmp
add
push
adc
in
into
cwtl
pop
mov
pop
icebp
sarb
leave
adcl
lahf
out
lcall
fs
xor
pusha
cmp
out
pop
inc
int3
cmp
ret
pushl
cld
lcall
xor
vmread
lea
cs
ljmp
stc
popa
and
call
add
dec
in
push
loopne
lret
aam
sub
sbb
insl
sbb
or
fildll
pop
xchg
jmp
lahf
dec
sbb
jmp
scas
jae
cli
cmp
test
clc
scas
clc
pop
ds
push
xchg
loopne
cltd
inc
pop
fidivs
andb
cltd
jne
jecxz
pop
cmp
pop
adc
push
add
pop
loop
arpl
mov
and
call
and
aaa
in
sbb
insl
cmpsb
and
enter
xchg
pop
pop
inc
inc
xor
mov
jmp
xchg
xchg
insb
cli
sbb
imul
mov
orl
sbb
ljmp
xor
cs
sbb
cmp
cmc
loope
pop
fdivp
leave
pop
sahf
stc
or
movsl
or
xchg
mov
jmp
addb
dec
gs
incl
scas
cmp
cmpsl
ljmp
sar
pusha
outsl
and
xor
push
lock
jg
pop
lcall
aaa
mov
sbb
fidivl
cltd
push
out
clc
enter
test
scas
lcall
push
cmp
jns
movsl
out
cmp
fistl
jmp
jle
add
out
mov
scas
aad
add
mov
int
cmpsb
or
mov
sar
decl
adc
ror
sbb
test
inc
call
jns
mov
or
sub
imul
repnz
les
mov
lcall
inc
cmp
jecxz
outsb
jl
jp
xchg
mov
in
inc
jne
scas
push
mov
mov
stos
push
jmp
xor
out
addb
pop
mov
lret
push
dec
push
push
jp
mov
push
jno
push
mov
add
jl
clc
jp
loopne
out
add
lret
es
outsb
mov
call
lods
adc
jns
push
xlat
loop
mov
xchg
sub
bound
cmpsb
icebp
ljmp
cli
aas
std
pop
out
push
adcb
cwtl
xchg
pop
adc
sahf
stos
fs
xchg
lahf
decl
mov
test
cmp
adc
fs
call
add
incl
jo
cwtl
out
loop
addr16
sub
popf
std
popa
jae
and
sti
insb
or
pushl
jbe
xchg
lods
inc
sbb
sbb
and
dec
sbb
mov
jg
xor
adc
pop
jno
inc
mov
adc
sub
int3
ret
call
adc
push
imul
es
jp
jnp
or
out
jg
jae
je
cwtl
mov
jmp
outsl
or
data16
inc
sbb
cmp
aas
fcomip
jmp
pop
xchg
aad
ret
adc
push
js
stc
mov
push
xor
pusha
rclb
sub
lahf
scas
inc
mov
pop
das
xor
ljmp
pop
push
mov
adc
or
test
fcomip
push
test
or
xchg
mov
outsl
dec
nop
lcall
and
fwait
sahf
sub
pop
fdivl
push
mov
adc
testb
daa
dec
jmp
adc
movsl
fsubrl
ljmp
mov
jle
cmp
push
mov
std
cmp
ficoml
cli
inc
sti
negb
loope
sti
mov
leave
ret
mov
push
or
lcall
sahf
lods
jae
mov
inc
push
jo
or
pop
lea
xor
ljmp
mov
loopne,pn
into
xor
in
ffree
inc
std
push
and
in
shll
and
stos
mov
fstl
pop
or
inc
fidivl
jle
lret
dec
or
cwtl
mov
cli
rcll
aad
out
jmp
jecxz
loop
add
push
pop
adc
push
push
adc
cmp
mov
inc
adc
inc
jns
clc
cwtl
and
mov
decl
into
pop
out
xchg
arpl
fidivrs
shlb
jae
push
mov
decl
pop
lods
in
and
push
iret
stos
cs
sbb
mov
loopne
dec
clc
test
call
dec
aaa
cmpsl
popa
xchg
movsb
sub
xor
and
cmp
cmp
bound
push
xor
or
mov
mov
mov
ljmp
mov
xlat
stos
and
push
mov
inc
subl
sbb
pop
call
call
fimuls
xor
loopne
int3
sarb
shlb
ss
inc
fwait
cmp
call
mov
rcrb
push
pop
ljmp
push
cmp
fwait
out
dec
and
add
incl
push
mov
nop
ds
add
cmp
xor
and
jbe
jg
push
xchg
or
gs
popf
fisttpll
or
jbe
call
lds
cmp
ficompl
mov
jno
xor
stos
inc
jne
dec
sbb
sbb
sti
mov
mov
fimull
cmc
inc
inc
cltd
hlt
pop
mov
xor
decl
cmpsl
push
fiadds
dec
mov
lods
movsb
movsb
sbb
mov
lods
aaa
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
call
cmp
pop
sub
aaa
xacquire
gs
dec
testb
xchg
mov
mov
outsb
call
or
ss
scas
loope
adc
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
adc
ljmp
out
fs
mov
leave
mov
mov
test
mov
push
arpl
into
lods
stos
pop
and
repz
dec
mov
ud0
jmp
xlat
gs
cmp
in
cmp
sti
mov
pop
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
mov
pop
jl
iret
xchg
jp
cmp
in
pop
scas
call
stc
movsb
jo
dec
out
out
clc
jmp
fwait
leave
push
fwait
loopne
imul
js
pusha
and
add
mov
ret
mov
pushl
lods
arpl
sbbl
adc
xor
lcall
lcall
lock
fstpl
js
mov
sti
push
aad
sub
clc
ljmp
add
popf
mov
jo
in
addr16
sub
push
decl
add
push
enter
adc
jb
push
enter
jg
xchg
aas
xor
movsl
cltd
inc
lcall
aam
pop
push
lahf
or
cli
jmp
mov
sbb
jg
mov
mov
jecxz
loopne
std
pushl
dec
sub
ret
push
cs
gs
jo
mov
jg
pop
push
out
xor
cltd
mov
orb
decl
add
jmp
sub
mov
mov
xor
inc
mov
pop
cmp
lea
dec
fcompl
shll
xchg
xchg
aam
daa
lcall
sti
ljmp
fnsave
or
outsl
jmp
out
addr16
or
xlat
add
loope
pushl
pop
cld
xchg
popw
mov
xchg
xor
jmp
call
push
inc
cmc
xchg
xchg
xor
adc
mov
clc
jg
mov
out
and
cld
sub
fcomps
cmp
test
mov
cmp
mov
and
cmp
das
clc
push
mov
or
insl
loope
cmp
jno
push
ja
imul
cmp
pop
pusha
xor
out
push
sub
lea
inc
aam
mov
dec
pop
cmc
decl
pusha
insl
mov
mov
adc
xchg
dec
scas
jne
cmpsb
lcall
insl
call
cld
sbb
popf
negb
fistps
mov
sti
cltd
mov
xor
sahf
dec
aas
rorl
lahf
out
or
push
dec
or
adcb
ljmp
xchg
repz
sbb
in
dec
je
jl
sub
mov
jmp
insl
and
push
clc
mov
mov
loop
jp
sbbl
sub
bound
xchg
mov
outsl
xchg
ljmp
movsl
push
aam
dec
enter
ds
cmc
fcmove
mov
daa
fists
aaa
call
sub
push
scas
pop
es
call
mov
lret
in
adc
lret
clc
popa
and
xor
insl
pop
mov
and
iret
dec
sbb
rcrb
xor
xchg
sub
insl
mov
jg
lock
ret
mov
int3
mov
idivl
incl
outsl
adc
pop
out
or
je
stos
push
sbb
loopne
lahf
enter
mov
out
mov
sub
mov
rcr
mov
or
incl
xorb
mov
push
shl
add
lcall
jno
js
test
xor
je
sbb
xchg
cwtl
mov
call
adc
xchg
test
scas
insb
rcl
mov
pop
add
shrl
icebp
adc
inc
pop
es
call
sub
ret
sbb
push
pop
pushf
xchg
lcall
sub
push
scas
jns
dec
cmp
test
addr16
in
jmp
sub
aam
dec
adc
ficompl
add
decl
ret
pop
adc
lcall
mov
mov
clc
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
mov
or
mov
insb
push
sbb
sub
cmp
push
pop
hlt
jmp
mov
mov
or
jbe
xchg
call
in
outsb
test
rcrb
sbb
jg
adc
jno
pushf
fiaddl
push
iret
add
cmp
ja
lods
dec
sub
sti
and
lahf
add
push
mov
and
mov
mov
push
out
out
xchg
fdiv
cmpsl
imul
xor
sarb
dec
incl
cwtl
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
and
or
inc
sbb
sbb
fs
sbb
ljmp
jmp
pop
xchg
dec
push
shl
popa
mov
fdivr
cmpl
incl
pop
lods
mov
leave
pushf
data16
call
inc
es
pop
xor
inc
or
or
test
leave
dec
les
mov
notb
pushl
jne
cltd
je
push
cmc
loop
fildll
cmpsb
fsts
in
lret
and
or
call
mov
mul
stc
addb
mov
and
lcall
jns
inc
mov
or
lds
inc
pop
mov
jg
push
sbb
cmp
xchg
cmp
mov
out
push
inc
enter
call
xchg
cli
add
je
lods
add
std
fidivrs
push
dec
icebp
push
sbb
pavgw
aad
insl
cmp
mov
arpl
clc
lds
mov
les
fisubrs
incl
cs
data16
cmp
push
addr16
pop
outsb
lea
pop
adc
jmp
mov
aaa
sbb
sti
fisubs
ret
adc
faddl
add
pop
out
and
jg
pushl
fcmovbe
cli
mov
mov
adc
out
shrb
adc
test
dec
and
xor
test
jg
sbb
sbb
incb
jmp
lock
data16
adc
inc
jmp
push
decl
popa
movsb
rclb
popa
ss
mov
xchg
adc
push
lods
push
lods
inc
sub
sbb
or
out
fs
dec
mov
jmp
stos
sub
adc
push
aas
shrb
inc
add
outsl
dec
pop
and
lret
inc
inc
jecxz
jge
and
or
pop
mov
in
ljmp
dec
pop
aad
push
mov
ljmp
xchg
sub
jg
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
cmp
fs
jmp
push
mov
add
ss
mov
fcompl
inc
and
jbe
pop
mov
jb
push
rorl
arpl
or
clc
ret
gs
adc
sub
out
mov
sbb
cmp
push
xchg
add
inc
jb
mov
push
ja
ljmp
or
mov
pop
jle
mov
adc
call
ljmp
cmc
rclb
stos
sub
ss
cmpsl
mov
jmp
decl
stos
pop
jae
xor
das
or
jne
sub
push
cmc
mov
cmpb
dec
cmpsl
aas
call
inc
ja
fcmove
mov
adc
jmp
sub
lret
pmaxsw
xor
dec
enter
test
or
mov
and
ss
mov
mov
push
xchg
stos
xchg
dec
cmp
pop
test
mov
lea
dec
jl
sub
leave
push
xchg
mov
int
cmp
ret
dec
mov
fmull
xchg
mov
ljmp
cli
jge
xchg
stos
gs
xor
push
fisttps
out
ss
sub
test
call
ljmp
xlat
or
cmp
dec
stc
xor
fdivs
popl
cld
jns
rcl
xchg
arpl
ljmp
iret
mov
incl
lret
mov
xchg
lea
hlt
outsl
dec
inc
stos
add
mov
mov
pop
aam
decb
cmpsb
mov
xchg
mov
in
cld
lods
int
jg
dec
notb
mov
sahf
pop
mov
cmp
idiv
stos
imul
mov
jno
jb
lds
inc
jae
leave
outsb
pushf
sbb
inc
aaa
loopne
push
mov
ds
mov
cmp
test
subb
incb
fildll
xchg
cmpsl
fidivl
divb
mov
adc
outsb
idivl
adc
mov
dec
jmp
pop
lea
push
mov
and
mov
es
scas
add
test
cmp
inc
ficomps
sub
push
add
incl
inc
mov
loope
or
cld
outsb
cwtl
xor
mov
dec
add
mov
stos
jl
add
insb
pop
pop
add
push
mov
dec
mov
jnp
icebp
cmp
jae
xchg
or
shrb
shrb
sbb
fisubs
scas
xor
decl
add
adc
cmp
xchg
dec
dec
lock
jmp
mov
adc
testl
mov
sbb
pushl
push
fcoms
dec
xchg
lret
adc
jno
shll
pop
icebp
jmp
xor
movsl
stos
mov
out
cmp
test
jecxz
push
out
fimuls
pushl
daa
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lea
push
jp
insb
cmc
cmp
pop
popf
xor
ret
xchg
lods
or
fs
lods
jmp
ret
test
xchg
mov
aam
push
push
andb
jg
pop
pop
shll
mov
add
jg
inc
pop
xor
push
pop
test
ret
lock
mov
xchg
mov
push
fsubrs
in
mov
xchg
ja
ret
scas
insl
pop
lea
loop
add
mov
and
ret
arpl
jl,pt
xchg
inc
insl
add
mov
push
lds
and
sub
dec
enter
pushl
cmpsb
push
sub
insl
jno
dec
mov
es
mov
dec
in
or
pusha
fwait
sar
push
imul
das
jns
popa
push
test
sbb
hlt
pop
mov
pop
lods
push
movsb
scas
xchg
out
es
pop
loope
pop
divl
sub
cmp
adc
aam
ret
data16
jmp
test
stc
pop
inc
ffreep
or
repnz
and
cvtps2pi
decl
pop
pop
rcrb
pop
out
pop
push
or
sbb
fisubrl
clc
iret
adc
loop
cli
clc
inc
cmp
sub
pop
sti
mov
cmpsl
xor
jg
decl
mov
jg
stos
je
cld
mov
mov
adcl
icebp
sub
int
pop
loopne
lcall
es
jp
xchg
add
in
cltd
jge
inc
sar
pushl
insb
cmp
mov
loopne
lahf
sbb
or
rol
insl
xchg
jl
jns
jmp
add
jmp
idivb
or
daa
out
push
mov
out
pop
pop
inc
pusha
dec
sub
test
clc
fcmovb
fsubr
loop
je
pop
add
movb
arpl
cmp
jg
mov
je
mov
and
mov
or
cmp
dec
push
lcall
dec
xor
pushf
shrl
xlat
pop
add
imul
xor
sub
js
aam
cmpb
mov
jle
fdivs
cs
cld
scas
add
push
inc
xchg
fdiv
mul
dec
mov
jae
jbe
mov
das
ffreep
cmp
aaa
mov
pushl
and
mov
push
push
pop
push
push
jb
repz
and
lds
fimull
dec
fs
pop
mov
sbb
inc
mov
push
jae
pop
seto
filds
pop
push
cmp
jno
push
sub
scas
xor
pop
hlt
cmp
ds
loope
jg
mov
dec
push
imul
inc
std
stc
jmp
push
cltd
cltd
mov
sbb
cmpsb
es
dec
aaa
cltd
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
stos
xchg
jmp
cli
jo
mov
lods
add
or
incl
mov
test
sub
js
or
cmpb
sbb
enter
push
pop
cld
incl
sub
insl
cmpb
push
cmp
jmp
decl
cmpsb
cmpb
xchg
testb
bound
or
ljmp
inc
xchg
xchg
data16
ljmp
sbb
test
pop
adc
fdivrs
jns
add
in
inc
lock
jo
jg
inc
pushl
outsb
hlt
dec
into
or
dec
or
call
mov
xor
sub
cmc
fs
lcall
mov
arpl
push
sub
jns
sub
sub
adc
fs
jmp
lock
mov
push
lahf
clc
out
pop
outsb
push
jl
loope
xor
fadds
std
call
test
inc
aaa
stos
sti
mov
inc
inc
jmp
mov
lcall
icebp
mov
or
pop
xlat
adc
and
and
xchg
mov
enter
and
cmpl
scas
rorl
mov
call
inc
mov
jp
inc
inc
dec
iret
adc
das
lcall
mov
outsl
adc
jg
jmp
jns
pop
jge
mov
inc
lea
mov
pushl
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
cmp
sbb
add
mov
jl
inc
xchg
and
clc
incl
mov
ss
inc
add
sub
cmp
add
lds
xor
sti
and
hlt
test
movsl
add
cmpl
jmp
hlt
adc
das
mov
pop
fstl
jo
cli
cmp
xor
call
lahf
arpl
dec
xor
mov
dec
rclb
xor
out
into
test
mov
jno
test
mov
adc
xchg
arpl
inc
sub
test
adcl
mov
sub
dec
in
mov
out
popf
push
mov
mov
dec
pop
mov
cld
into
xor
test
mov
outsl
adc
lcall
insl
dec
jecxz
out
jb
in
and
jg
data16
cmp
jge
ret
mov
fwait
imul
xchg
movsb
sar
push
ret
shll
shrb
mov
mov
stos
push
incl
cwtl
es
xchg
adc
adc
cltd
imul
leave
jmp
mov
call
int
mov
divb
loope
jo
jne
jbe
data16
lret
dec
repz
mov
in
adc
xor
cmp
adc
addr16
jmp
sbb
and
cmpsb
call
fists
push
lret
negb
into
jmp
add
adcb
ljmp
aam
add
iret
das
xor
mov
lds
ljmp
pushf
adc
mov
sbb
out
jne
and
ret
add
cwtl
mov
xchg
push
std
incl
inc
sahf
push
pop
mov
std
adc
mov
or
mov
inc
ret
fimull
mov
mov
mov
pop
aas
mov
or
shll
cld
jmp
shll
cmpsb
xor
add
jo
push
xchg
loope
jmp
ss
call
lock
jmp
and
lret
add
fs
mov
sbb
jmp
sub
dec
outsb
das
fwait
rep
div
lock
mov
mov
sub
outsb
mov
mov
mov
cwtl
push
xor
pushl
cld
decl
lcall
out
sar
and
pop
mov
push
inc
cmp
mov
scas
aam
aas
xor
ljmp
out
sbb
push
mov
insl
into
inc
and
xchg
pushl
aad
cmp
push
xor
inc
jb
fcomip
sbb
xchg
xor
inc
pushf
sar
pushl
sub
push
cmp
mov
cmpsl
mov
inc
repz
jmp
stc
mov
pop
mov
enter
jl
mov
cmp
xchg
lret
cwtl
sub
test
pop
mov
jecxz
inc
and
jg
and
dec
jg
jae
xorl
dec
cld
inc
dec
jno
ja
mov
jg
call
popa
std
rclb
test
push
xor
movb
incl
test
mov
mov
ficompl
pop
incl
loope
mov
dec
jnp
add
imul
xor
jmp
xchg
shlb
in
aam
or
divl
xor
es
add
push
lcall
scas
mov
lock
dec
sub
icebp
rcrl
mov
cmp
dec
mov
mov
mov
aaa
cli
sub
xor
push
jae
jmp
jecxz
imul
push
sbb
mov
pop
mov
sub
jne
int3
xlat
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
jo
std
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
in
mov
or
int3
aaa
js
pushl
ret
adc
or
sbb
outsb
dec
aas
out
mov
ljmp
decl
das
hlt
mov
in
pop
push
roll
in
outsb
jns
xchg
push
incl
lods
mov
mov
xchg
adc
gs
scas
dec
xchg
or
jle
outsb
mov
push
xchg
jecxz
aaa
fcom
pushl
or
call
dec
inc
and
call
or
test
fwait
xchg
push
add
xor
decl
ljmp
xlat
dec
movsb
inc
adc
sti
das
sbb
call
xchg
loope
mov
loop
aad
movsl
repnz
jmp
lcall
loope
pop
pushf
divb
flds
dec
iret
mov
sub
jnp
std
decl
mov
sub
inc
pop
cwtl
jnp
stos
add
mov
mov
lock
xchg
add
xchg
das
lret
rcrb
lcall
fwait
insl
xlat
or
push
adc
bound
das
clc
fstps
popa
push
outsl
jg
adc
push
mov
mov
shl
add
ja
incl
cld
pop
push
jno
xorb
jo
fwait
mov
pop
adc
xor
clc
mov
mov
mov
mov
jmp
jl,pn
inc
add
mov
mov
inc
pop
out
es
dec
enter
sub
dec
inc
inc
sub
cmp
and
mov
jno
add
cltd
rcrl
call
xchg
imul
pop
sti
out
in
sub
adc
xor
adc
call
inc
mov
jae
enter
push
push
aaa
popf
mov
out
cmp
decl
icebp
inc
adc
scas
in
dec
sub
in
or
mov
pop
repz
dec
xchg
and
repz
xchg
sbb
into
dec
flds
in
mov
incl
mov
pop
cmc
add
xchg
or
fisttpl
mov
loopne
pop
loopne
incl
adc
mov
mov
cli
mov
into
idiv
fistpll
pop
je
cmpl
clc
mov
add
in
mov
addb
popa
sub
push
enter
xor
adc
mov
push
cmc
xchg
inc
pusha
or
cmp
push
inc
cmpsb
push
pop
jne
push
das
mov
lea
cmp
mov
loop
fnstsw
cli
jg
jmp
mov
and
test
clc
jmp
dec
outsb
incl
dec
je
popf
mov
or
rolb
iret
push
movsl
aad
mov
pop
mov
stos
call
mov
cld
mov
addr16
dec
js
notb
movsl
outsl
xor
jmp
dec
push
int3
mov
popa
jbe
adc
xor
cli
xchg
cmpsl
ja
cwtl
pushf
pushl
ja
mov
xor
hlt
cmp
adc
scas
jmp
add
into
push
push
pop
add
ljmp
cli
dec
add
jae
insb
test
xchg
aad
cmp
jp
push
pop
inc
mov
pushl
fcom
mov
push
sti
dec
loopne
and
dec
test
jmp
mov
xor
decl
jecxz
sub
xchg
add
pop
add
xchg
popf
adc
cmp
ljmp
and
lcall
mov
mov
les
mov
push
mov
inc
lret
jge
aas
and
dec
outsl
jb
lods
adc
test
mov
dec
sbb
and
pop
fwait
dec
das
in
cmp
inc
push
movl
data16
popa
inc
dec
sub
orl
scas
xchg
orl
scas
pop
and
call
fwait
xlat
data16
push
jp
in
push
and
push
or
mov
lcall
bound
rcr
xchg
and
pop
cltd
jge
ljmp
xor
dec
push
sbb
sbb
sti
mov
fsubr
pop
mov
cmp
push
cmpsb
jmp
sbb
add
jo
xchg
push
pop
imul
and
pusha
fiaddl
cltd
sbb
aaa
std
outsl
cli
pop
push
sbb
stos
rclb
pop
lret
test
jmp
cld
call
pop
popa
insl
mov
cmp
insb
or
mov
pop
ljmp
inc
out
push
dec
push
dec
sub
add
add
ret
stos
pop
mov
jl
call
pop
cmpsl
je
js
mov
cs
push
and
lock
or
add
inc
fs
rcrb
add
sar
dec
daa
sbb
pop
push
lds
popa
jno
or
fistps
sar
ljmp
adc
inc
test
mov
dec
or
mov
push
lahf
dec
lret
arpl
inc
sahf
ljmp
jge
mov
addr16
imul
cmp
cmp
and
mov
or
call
push
outsb
stos
or
cli
dec
mov
int3
test
inc
test
jo
aas
lret
xchg
or
incl
push
rorl
mov
mov
mov
shl
hlt
call
ljmp
incl
add
inc
out
adc
mov
adc
adcb
dec
out
cmp
call
sub
int
sahf
xlat
repnz
js
and
in
nop
inc
pushf
or
mov
dec
cmp
outsl
dec
dec
xor
ljmp
mov
scas
add
mov
loope
nop
lods
in
inc
sbb
xor
adc
popf
test
sbb
pop
lret
jnp
mov
jmp
xchg
cli
lcall
pop
ret
or
xor
stos
loopne
pop
fisubs
pop
inc
push
mov
loopne
shlb
outsb
xchg
mov
ljmp
push
xor
pop
mov
shll
test
or
dec
lret
jbe
mov
aaa
mov
stos
jp
or
in
fistpl
push
or
add
jmp
idivb
dec
sub
inc
jbe
push
add
into
daa
divl
mov
sbb
push
out
lock
fcompp
dec
and
inc
dec
xchg
sbb
mov
sub
pusha
ljmp
int
push
rol
iret
enter
sbb
dec
subb
mov
or
pushl
pop
jo
add
sub
pop
push
or
jge
lahf
push
mov
xchg
cltd
mov
icebp
xor
jl
fdivrs
inc
paddd
xlat
sub
in
lods
dec
mov
jnp
das
mov
ret
andl
xchg
adc
jecxz
inc
stos
in
pop
popf
ss
mov
dec
subb
mov
idivb
xor
sbb
shrb
daa
pop
lret
out
xor
and
inc
pop
lea
sub
mov
out
jns
push
push
aaa
cltd
sub
js
mov
xor
pop
std
add
xor
pop
leave
js
into
pop
out
jmp
fiadds
cmpsl
sti
repz
mov
sbb
fst
and
cld
cld
ret
adc
aaa
nop
fs
add
dec
xor
jmp
add
mov
movsb
and
cmp
dec
mov
add
call
lcall
adc
enter
sub
clc
mov
ljmp
shlb
in
sub
dec
push
pop
inc
mov
cli
add
mov
jge
in
push
nop
inc
dec
js
xor
fcoml
repz
push
mov
rcll
push
out
shlb
pusha
push
fsts
dec
in
cmpl
cmp
cmpsl
es
out
imul
dec
lcall
cmpb
cwtl
sbb
pop
push
jg
hlt
ljmp
jnp
add
jle
clc
inc
out
setno
fistpll
test
dec
imul
pusha
xchg
adc
test
adc
fbld
int3
sub
into
dec
jmp
shll
push
cmp
cmp
dec
xor
xchg
push
sub
mov
dec
push
pop
and
aad
incl
xchg
dec
ds
movsl
fmul
xor
fwait
fwait
movb
mov
outsl
lret
lcall
push
cmpsb
shl
pop
or
push
cwtl
les
fdivl
pop
dec
push
sub
jmp
cltd
push
out
jg
dec
sahf
cmp
es
sahf
and
push
scas
addr16
jg
jge
repz
sti
jp
sub
nop
jle
je
out
f2xm1
inc
loop
or
sbb
das
mov
or
sub
ss
push
xlat
outsl
cli
mov
jg
mov
out
sub
fdivrs
adc
ljmp
dec
sbb
pushf
dec
mov
push
adc
adc
xor
gs
mov
or
xchg
cmp
jno
jb
test
in
rcrl
addb
lods
inc
icebp
cli
je
pushl
push
lock
pop
lcall
push
aas
or
sbb
inc
inc
incl
cld
adc
jge
sbb
mov
xor
les
dec
add
sub
push
stos
fstpl
in
xor
shlb
pop
cli
inc
scas
movsl
mov
sub
jo
or
mov
pop
push
xlat
fmul
push
push
in
jl
ljmp
cmpsb
jae
test
xlat
dec
loop
add
adc
xlat
mov
aaa
test
call
shlb
mov
xor
mov
xor
push
cmc
addr16
pushf
adc
cmp
decl
enter
add
and
xlat
fisttpll
mov
mov
into
or
cmc
jmp
jmp
xor
and
incl
stos
fsubl
xchg
repnz
testb
decl
lock
sub
jb
cmc
add
jle
mov
jge
call
inc
xor
lcall
adc
cs
mov
in
sbb
dec
xchg
xor
and
xor
xor
add
rcr
mov
pushl
adc
push
and
xchg
stc
mov
add
rclb
repnz
ds
stos
mov
ret
jmp
out
rolb
call
sbb
inc
xchg
test
xchg
cltd
out
xchg
mov
div
lcall
mov
std
adc
rclb
mov
xchg
adc
xchg
jb
gs
pop
xchg
pushf
sbb
pmuludq
cs
or
push
mov
fldcw
stos
mov
mov
xchg
ljmp
inc
xchg
add
cld
outsb
testl
cmp
inc
jge
out
push
mov
arpl
in
out
out
push
in
or
jmp
pop
mov
aam
call
test
jbe
es
cmpsl
in
sbb
scas
push
sbb
insb
sbb
dec
xchg
jmp
cmpsb
pop
xchg
and
xlat
cs
and
mov
push
lret
lds
dec
push
in
jbe
jmp
bound
lcall
or
or
push
imul
push
ficoms
inc
clc
inc
das
mov
ja
data16
call
adc
and
mov
cmp
mov
pop
dec
jnp
dec
mov
adc
lcall
xchg
insb
xchg
sbb
jns
movl
jp
or
push
pop
pop
jp
lods
dec
stos
mov
cmc
and
jbe
outsb
sub
sahf
pop
in
jg
cmpsb
repnz
and
dec
cmc
dec
shl
jp
data16
dec
ja
clc
and
das
pop
rorl
ss
and
sub
sbb
clc
lret
cld
loopne
outsl
loop
incl
add
es
imulb
mov
pushl
scas
and
sahf
adc
xchg
xor
push
mov
adc
idivl
loopne
iret
inc
std
shrb
negb
xchg
cmc
popa
mov
vpsubsw
movsl
ret
mov
inc
add
ljmp
adc
xor
and
inc
jmp
decl
mov
and
loop
popa
out
ds
movsb
xchg
aam
sub
loop
jle
clc
jno
mov
push
clc
in
aam
popl
cltd
inc
jae
jno
jmp
push
pop
outsl
jae
jl
sahf
xchg
pop
loop
push
xor
cmp
sbb
push
sub
add
lcall
jecxz
scas
fstp
decl
push
imul
imul
dec
ljmp
insl
push
mov
data16
js
icebp
fsts
or
sbb
ljmp
shll
lret
pusha
push
mov
xchg
jge
leave
dec
outsb
ds
cwtl
stc
adc
jg
fisttps
jg
pop
mov
mov
jecxz
outsb
sbb
mov
pushf
mov
aaa
int3
loopne
hlt
sub
sarl
clc
incl
arpl
and
enter
ficoml
test
lcall
stos
and
ljmp
mov
insb
sub
bound
fcmovnu
dec
mov
mov
ljmp
push
or
hlt
outsb
out
pop
pop
call
push
lcall
decl
dec
ss
push
popf
inc
pop
lret
inc
cmp
fs
ljmp
lret
xchg
mov
rcr
popf
mov
mov
imul
aaa
pop
mov
lcall
inc
nop
mov
sub
dec
pushf
pop
cs
aaa
adc
cwtl
popf
repz
js
fidivl
in
mov
jnp
mov
loopne
mov
testb
cmp
scas
loopne
out
xabort
fildl
mov
ret
sub
cmpsb
cmpl
pop
daa
push
xor
cmc
jl
fs
arpl
scas
and
xor
shrb
adc
jl
pop
pushl
std
jecxz
add
repnz
adc
add
aas
cmc
ret
rol
mov
ds
push
rcrb
cltd
cmpsb
jecxz
std
sti
mov
cmp
adc
insb
xor
or
lods
inc
stos
sahf
pop
cmpsl
or
scas
rorl
stos
push
fld
or
mov
or
mov
cwtl
jbe
gs
mov
and
pop
jecxz
in
repnz
into
lods
lods
cwtl
int3
repnz
fs
lcall
out
xchg
push
mov
adc
ret
fiaddl
mov
or
xlat
mov
idiv
ffreep
sti
gs
pop
lods
bnd
jb
cwtl
sbb
jne
outsl
addb
pop
and
sbb
incl
or
cmp
out
push
inc
or
inc
ret
dec
add
ljmp
les
ret
pop
insl
loop
shrl
mov
addr16
pop
cld
xor
sti
xor
movsl
jb
out
insb
push
rol
loop
int3
pushf
mov
enter
add
pop
shl
and
sahf
mov
sti
js
xchg
mov
pushl
lds
sbb
loop
ret
lahf
inc
jmp
sbb
jecxz
incl
popf
cwtl
out
and
and
adc
xor
lcall
inc
ret
push
dec
cmp
popf
bswap
inc
sti
mov
enter
pop
mov
xchg
call
decl
out
ss
loopne
test
fmuls
mov
cmpsl
xor
xor
add
decl
mov
mov
mov
xchg
daa
aam
lcall
xor
les
xor
scas
ficoml
js
shll
pop
dec
fisubs
jl
mov
xor
jbe
in
push
cwtl
mov
push
push
add
call
cli
div
push
xor
pusha
mov
cmp
pushl
cli
imulb
daa
pusha
movsb
sarl
mov
xlat
add
jmp
dec
jmp
adc
add
mov
and
sahf
xchg
jecxz
aad
cmp
xchg
aaa
lret
clc
push
jns
stc
decl
adc
mov
nop
xchg
dec
xchg
dec
loopne
dec
shlb
xor
decl
jle
push
mov
add
fwait
sbb
aaa
and
stos
insl
fstpl
mov
dec
cmp
loop
pop
in
jg
cmp
nop
cmp
jnp
xchg
lods
mov
push
std
or
and
cwtl
out
mov
xchg
cmp
xchg
mov
push
call
test
add
sbb
movsl
inc
je
pop
jnp
push
outsb
mov
sbb
test
or
xor
incl
add
and
in
push
das
xchg
mov
pushf
and
cmpsl
cld
jmp
sub
das
cmp
stos
into
pop
sub
adc
int
loopne
clc
hlt
ljmp
sbb
pushl
cs
fbld
inc
rcll
sub
or
sti
out
push
cmp
pop
mov
jmp
insl
rolb
mov
adc
sub
outsl
mov
mov
and
mov
mov
addl
gs
daa
outsb
ds
cld
jno
jmp
push
push
push
sti
or
pop
pop
pop
inc
or
or
add
or
dec
ljmp
jns
movsb
push
aas
mov
cs
mov
jmp
pop
adc
test
sbb
aam
xchg
shlb
xor
add
lcall
ljmp
push
stc
dec
push
mov
push
lret
push
mov
fs
aaa
mov
sbb
fildll
scas
mov
xor
sbb
out
mov
and
leave
xchg
xchg
rcll
push
push
pop
call
movsl
dec
fcomps
cmp
lods
pop
call
push
xchg
sub
add
mov
sbb
stc
subl
lcall
and
loope
sub
int
ja
add
mov
fimuls
add
sarl
lock
sub
lcall
pop
jle
stos
add
cli
std
add
arpl
in
into
sbb
int
pop
movsb
test
enter
aaa
mov
fdivrl
adc
push
mov
jle
xchg
xchg
cmp
gs
out
sarl
shll
lcall
mov
dec
mov
adc
imul
ret
int3
popa
and
loope
in
sbb
push
lcall
outsl
xor
int
in
jl
fistl
inc
aam
movsb
ljmp
dec
loope
lea
and
popa
nop
jb
mov
pusha
inc
dec
test
aas
aaa
mov
mov
scas
std
sbb
shl
bound
mov
add
push
mov
test
ljmp
fistps
and
xchg
clc
xor
pop
gs
push
call
movsb
push
repnz
in
or
aaa
mov
mov
xlat
aas
xchg
cmpsb
mov
jb
lahf
test
loop
clc
jnp
inc
mov
cmp
loop
push
nop
mov
das
lret
xchg
int3
mov
or
stc
in
les
lahf
lahf
ret
jmp
add
cmpsb
push
xchg
icebp
cwtl
fs
sub
mov
daa
outsl
dec
out
mov
movsb
in
inc
loopne
inc
jp
out
sub
sub
cwtl
ja
mov
mov
or
vaddsubpd
stos
decl
scas
inc
or
adc
lcall
or
push
filds
enter
ss
inc
aad
incl
std
pop
mov
std
dec
push
sar
neg
repz
pop
xchg
mov
test
lahf
mov
xchg
jl
add
shrb
xchg
lcall
push
or
inc
fcmovbe
pop
pop
into
les
pusha
fwait
in
fwait
jg
leave
add
mov
xorb
lret
jo
hlt
pop
pop
mov
sub
lcall
pusha
pop
es
push
loop
push
insb
cmc
push
inc
decl
dec
push
push
push
leave
dec
cmp
jmp
push
dec
ret
stos
and
std
subb
mov
decl
es
loope
push
cwtl
add
jb
lods
fdivrl
sub
pop
inc
pushf
fnstsw
mov
xchg
into
xor
into
loopne
or
inc
sti
hlt
xor
loope
sub
sub
stos
loopne
mov
incl
xchg
lcall
pop
aad
and
out
ja
decl
add
or
or
fstpt
in
pop
cwtl
pop
jge
jmp
mov
jg
push
jae
in
sub
loop
movsl
adc
decl
inc
jecxz
push
mov
movsb
sub
cs
xchg
push
out
call
sbb
pop
sub
lods
sti
mov
loopne
inc
add
ror
mov
jge
cmp
fcomps
leave
enter
je
loopne
sbb
xor
fisubrl
xchg
mov
dec
mov
insb
or
cmp
pop
aas
jp
xchg
inc
cli
lcall
or
or
jg
mov
mov
sarl
xchg
xor
sbb
or
inc
pushl
inc
jmp
push
push
mov
in
sbb
xor
mov
imul
stos
leave
inc
push
loope
mov
rcll
std
incl
push
in
or
cmp
cmp
les
cld
cwtl
sbb
pushl
jns
mov
out
loopne
push
adcl
lret
call
into
pop
mov
clc
idivb
lods
int
shl
test
das
lods
ss
jl
jmp
fstpl
pop
sbbl
sti
mov
push
daa
dec
and
es
aam
call
int3
dec
fcoml
inc
jb
mov
bound
mov
pusha
fcomi
les
sbb
jae
decl
ljmp
leave
mov
cmp
jae
xor
and
cmp
pop
xorb
jo
adc
mov
adc
or
je
std
sbb
fs
cmp
jg
aam
stc
scas
movsb
xor
add
push
sbb
sub
sub
inc
pushl
mul
les
sbbl
daa
add
dec
loopne
aad
stos
fidivl
dec
sbb
fidivrl
and
mov
jo
js
cwtl
jmp
mov
push
fisttps
jecxz
nop
les
or
ljmp
xchg
filds
fs
mov
aad
adc
je
sti
test
repz
loop
mov
movsb
xchg
xor
add
lds
pop
dec
sub
gs
lcall
add
sub
test
hlt
cmpsl
xchg
pop
sahf
dec
enter
shrb
xchg
mov
jmp
jnp
push
shlb
dec
roll
cmpsl
js
pop
popa
jge
cmpsb
dec
test
ljmp
shrb
push
das
nop
cmc
pushl
testl
incl
pusha
sti
or
fadd
mov
ja
cmp
scas
pop
sub
mov
fdiv
jg
fldt
andb
cld
incl
mov
mov
lods
xor
lock
cmc
and
or
mov
call
xchg
jns
add
sbb
jg
inc
jns
incb
imul
ja
call
pop
pop
out
mov
in
inc
or
sbb
decl
jno
pop
xor
and
cmp
fstpt
stos
in
outsb
test
enter
push
shr
jb
add
std
stc
dec
inc
je
pop
sbb
inc
jle
notb
pusha
loop
pushl
pop
dec
sub
aaa
xchg
call
jo
mov
test
add
mov
stos
push
mov
call
and
cld
mov
call
dec
bound
xchg
dec
loope
jmp
or
jg
orb
cwtl
sub
mov
or
lcall
test
inc
sbb
hlt
sbb
or
fidivl
or
call
adc
clc
cmp
je
cmp
movsl
clc
enter
cld
repnz
dec
ljmp
sar
stos
cmpsb
lcall
in
lret
into
mov
je
push
sbb
pop
ret
fstps
fiaddl
fisttps
adc
xor
enter
jbe
lods
jmp
jge
jecxz
dec
lods
js
sub
iret
cmp
dec
je
iret
dec
and
test
mov
movsl
push
dec
mov
xor
cmp
xchg
mov
pushl
fbld
int3
mov
cmpsb
jo,pn
mov
mov
repz
in
ja
and
lea
xor
js
call
dec
test
insl
and
cmp
mov
pop
add
and
sub
lcall
repnz
sbb
xchg
ds
loopne
incl
jle
push
sbb
test
lret
cmpsb
xchg
xor
or
sbb
call
mov
pop
fadds
adc
sbb
leave
inc
sar
xchg
jecxz
push
call
dec
xor
rclb
adc
add
ds
adc
inc
in
add
call
test
inc
repnz
pop
inc
das
cmp
filds
mov
lcall
adc
push
addr16
sub
xor
mov
adc
movsl
xchg
or
call
dec
push
sbb
add
and
stos
mov
or
repz
xchg
out
clc
jnp
stos
lcall
push
sub
sub
ljmp
mov
int
loop
jbe
out
in
sub
int3
sub
and
mov
or
pop
pop
xor
add
aad
das
jecxz
push
lcall
ljmp
ljmp
fists
fld
cli
das
add
and
ljmp
cmc
jne
cmp
inc
dec
je
dec
jno
dec
push
pop
mov
inc
sub
aas
addr16
cmp
cmp
push
adc
mov
mov
cwtl
cmp
fidivs
jbe
mov
push
les
sbb
push
sub
clc
push
cmp
pop
cmp
adcb
into
xor
test
test
faddl
decl
sbb
xor
das
mov
ljmp
add
popa
das
addr16
fcoms
stos
or
ljmp
adc
out
js
int
jbe
push
out
pop
mov
pop
xor
filds
and
ret
push
clc
pop
or
xlat
sbbl
inc
mov
call
jae
sub
scas
mov
fadds
pop
stc
stos
cmp
ljmp
inc
aaa
push
mov
push
cmp
in
and
test
loop
sub
movsb
cmp
clc
mov
iret
jbe
hlt
fsubp
insl
push
dec
imul
add
hlt
gs
fwait
mov
xlat
in
mov
inc
mov
incl
mov
push
hlt
mov
ret
sub
xchg
push
xchg
ljmp
ljmp
add
dec
mov
hlt
imul
cmc
jmp
mov
ljmp
in
jecxz
rolb
pop
mov
dec
es
stos
jge
loope
jg
lea
lock
cltd
daa
aad
push
push
call
ljmp
das
pop
add
jns
sarb
lahf
or
fcmovne
stc
mov
dec
idivb
nop
hlt
decl
mov
fisttpl
loope
and
rol
outsl
clc
lcall
lds
les
push
cmc
rdtsc
divl
jecxz
in
or
or
decl
dec
ficompl
cmp
fwait
stos
pop
out
les
jmp
pop
jae
cld
adc
dec
or
fs
inc
jmp
lcall
pop
cmp
mov
pop
xchg
xor
inc
data16
jg
push
icebp
gs
sti
das
xchg
adcb
gs
stos
mov
sbb
fsubp
lds
fistpl
and
addl
shrb
push
ja
push
dec
pop
sub
jmp
cs
out
adc
movb
push
adc
incl
test
aaa
mov
icebp
pop
scas
push
xchg
adc
fs
xor
decl
mov
pop
cmp
scas
rcrl
pop
xor
cmc
lds
push
int3
arpl
inc
stos
xor
or
add
adc
xchg
xchg
lods
jbe
cmp
aas
fninit
and
xor
lret
mov
daa
jl
stc
or
mov
scas
add
and
mov
cld
decl
jl
mov
jae
adc
mov
mov
mov
pop
xchg
pushl
sbb
and
mov
decb
gs
ljmp
fwait
test
or
adc
xor
out
rcll
add
into
repz
clc
jmp
sbbl
sbb
push
mov
or
mov
cmp
adc
ficompl
pop
push
jae
jmp
ljmp
mov
hlt
adc
addl
filds
sub
mov
sarb
call
adc
loop
mov
and
clc
sbbl
xor
inc
sub
xor
xchg
fsubr
mov
cmp
mov
fnsave
adc
rorl
fldcw
out
mov
inc
pushf
mov
mov
adc
outsb
lret
jo
rcll
lcall
outsl
add
cmpsb
or
or
jns
sub
mov
leave
mov
sahf
sbb
xchg
call
mov
mov
mov
imul
xchg
inc
jecxz
sbb
call
pop
push
repz
pusha
cli
pop
ret
adc
push
std
xor
lret
mov
and
mov
pop
pop
cmp
or
fbstp
pop
pavgb
lds
sbb
imul
shl
test
push
add
mov
test
in
xchg
ljmp
ja
sbb
mov
jg
push
mov
pmulhuw
fstpt
out
sub
jg
and
xchg
cmp
frstor
mov
mov
push
adc
jmp
fs
mov
aad
pusha
or
jns
mov
jns
decl
outsb
fwait
das
hlt
es
push
mov
shr
stc
or
push
jp
ljmp
rclb
jp
fisubrs
mov
popa
test
pop
jne
dec
scas
sbb
std
fnstcw
dec
shrb
push
mov
rorl
iret
mov
out
pop
and
icebp
xchg
sub
add
cs
mov
lret
mov
sbb
sbb
mov
mov
sar
call
ror
pushf
xorl
mov
jne
mov
mov
jle
adc
enter
sbb
and
push
mov
mov
xorb
or
pop
outsb
xlat
add
sti
mov
mov
cmp
shl
adc
push
adc
inc
lods
sbb
imul
inc
dec
and
lret
fildll
push
enter
or
and
leave
xlat
jne
adc
call
lahf
mov
movsl
shll
lea
test
jns
scas
pop
add
pushl
ret
or
jae
scas
ret
sbb
mov
sub
push
stc
cmpl
decl
fwait
xchg
xor
mov
mov
arpl
sub
je
or
mov
aam
and
and
call
mov
xchg
test
ljmp
lods
aad
xchg
scas
leave
pop
jbe
mov
inc
sbb
je
ljmp
std
decb
lcall
call
or
dec
rorb
push
loopne
loopne
push
lods
das
pop
std
jbe
mulb
jbe
jp
xchg
mov
dec
xchg
in
in
fdivrs
jmp
lock
lahf
gs
sahf
jmp
sub
cwtl
ds
cmpsl
inc
cmpl
ret
cmp
lods
pop
into
adc
push
icebp
fmull
sbb
lcall
mov
jnp
hlt
lea
into
mov
sbb
aas
loope
fldcw
test
mov
lcall
jg
hlt
mov
xor
notb
mov
std
push
iret
incl
fwait
pop
out
pop
ficoml
addr16
or
out
xchg
jno
iret
stos
call
incl
mov
and
rol
movsl
push
xor
out
mov
xor
decl
cmp
clc
push
cmpb
add
int3
pusha
pop
pop
stos
into
dec
mov
iret
filds
xor
ss
sahf
dec
mov
adc
std
sub
test
pop
xchg
ljmp
cmp
das
stc
out
inc
divb
leave
sbb
or
xor
or
xchg
cmpsb
jbe
jb
in
not
xchg
inc
in
mov
xchg
jg
loop
push
mov
or
jp
sub
xor
push
call
mov
push
lret
push
inc
mov
test
push
mov
bound
push
clc
jb
dec
adc
pushl
mov
aas
add
cli
or
lods
int3
add
icebp
cli
jp
test
inc
in
pushl
dec
fdivrs
or
shl
daa
add
xchg
decb
mov
bound
cs
mov
cmpsb
pop
idiv
pushl
scas
or
jb
mov
not
mov
lods
mov
mov
ljmp
mov
les
cwtl
fdivrs
dec
clc
sahf
out
mov
std
pop
les
stos
aad
data16
push
leave
lret
cmpsl
adc
xchg
scas
push
leave
pop
cmc
movsb
aam
xor
leave
push
shll
cmp
xchg
mov
fadd
aas
mov
movsb
jbe
mov
negl
xchg
negb
test
arpl
xchg
in
mov
mov
cmp
ljmp
or
and
inc
repz
add
mov
lea
out
cli
xor
mov
fisubl
sub
popa
cmp
mov
lret
push
and
out
pop
loopne
fnstsw
repnz
inc
lods
shl
push
jmp
adc
dec
out
sbb
std
hlt
inc
adc
cmp
out
dec
or
out
inc
and
xor
ja
mov
sbb
lods
sub
data16
loop
lret
inc
cmp
push
mov
icebp
jmp
or
fucom
lods
ss
mov
loope
ret
adc
and
loopne
popa
loop
popa
orb
fiaddl
sahf
and
mov
pop
lcall
xchg
cmpsl
loop
pop
fcmove
sbb
bound
push
mov
and
shl
mull
jmp
aam
jae
dec
mov
cmp
movsb
or
and
push
jge
fildll
xor
pop
mov
sub
push
fmuls
or
push
scas
pop
sbbb
push
aad
inc
push
in
mov
lock
adc
add
insb
mov
scas
cmp
int3
ljmp
hlt
loopne
mov
insl
add
push
pop
fidivrl
call
jmp
bound
jle
imul
das
shr
sbb
movsb
adc
sbb
clc
push
sub
ds
outsl
clc
test
sbb
sub
imul
data16
mov
out
push
pop
rcll
push
xor
push
and
and
pushf
pop
movsb
and
mov
mov
push
aaa
xchg
lcall
xor
stos
sub
stos
cwtl
sub
xor
or
mov
cwtl
jg
fcomip
xchg
lods
xchg
lret
mov
icebp
mov
hlt
sbb
mov
cmpsb
pop
push
iret
adc
sub
out
pop
pusha
jae
xchg
mov
loopne
iret
dec
jge
mov
pop
lock
push
movl
jecxz
mov
pop
xchg
out
mov
incl
div
insl
gs
pushf
pusha
xchg
add
jle
adc
adc
adc
inc
decl
sbbl
adc
dec
push
or
mov
or
fisttpll
xlat
xorl
inc
push
xchg
notb
mov
or
fxch
cmpsb
in
mov
outsl
repz
repnz
push
adc
aaa
repnz
js,pn
mov
in
loope
fistpll
les
flds
mov
pop
mov
jbe
call
ljmp
xchg
insl
jb
scas
aaa
or
icebp
cltd
lahf
dec
mov
push
incl
mov
jle
test
push
push
mov
cmp
inc
jae
int3
rcrb
out
lahf
push
or
call
and
outsb
push
or
mov
pop
cli
lcall
push
and
cmp
bound
inc
sub
ja
dec
mov
adcl
sub
xlat
popa
xchg
call
xor
stc
cmp
and
js,pt
lock
add
sbb
and
jb
imul
stos
ljmp
xchg
les
jmp
incl
in
xor
xor
xchg
jle
call
sub
mov
mov
mov
addr16
lahf
lcall
add
mov
pop
sarl
mov
int
imul
or
incl
cmc
mov
loop
shrb
push
jmp
repz
and
jl
jle
mov
nop
pop
mov
inc
xor
jno
movsl
adc
and
jmp
jmp
mov
add
das
or
mov
out
push
scas
lods
clc
clc
in
decl
scas
and
test
pushl
es
fcmovb
cmp
cs
pop
mov
adc
adc
add
mov
pop
mov
mov
bound
inc
xchg
call
push
popa
cmp
jmp
jge
mov
lock
test
pop
int3
cmp
arpl
or
test
inc
mov
gs
pop
cmp
andb
xchg
test
outsb
mov
push
incl
jbe
loopne
in
inc
pushf
int
fcoms
iret
or
les
enter
fcos
pushl
sbb
adc
xor
bound
inc
ret
into
orb
repnz
adc
scas
pop
gs
and
jmp
jl
or
out
pop
xor
mov
stos
dec
aam
jp
stos
ja
decl
push
addr16
lods
add
sub
dec
mov
inc
adc
fcomip
incl
test
push
mov
xor
xchg
repz
cmp
cli
jns
sub
inc
xchg
sbb
ds
add
and
push
aas
dec
insl
lcall
pusha
movsl
xor
mov
mov
in
jb
sbb
ljmp
mov
pop
push
ret
jl
adc
jge,pn
xor
mov
imul
cmp
push
out
clc
add
pushf
test
and
je
xor
aaa
and
sar
pushl
cwtl
lods
in
test
mov
sub
jmp
ret
push
cmc
and
cmpsb
sub
call
ss
mov
daa
mov
jno
fsub
mov
xchg
outsb
shld
and
pop
lret
push
ljmp
test
xchg
out
xor
loop
xor
arpl
pop
daa
scas
mov
shr
popf
cmpsb
out
cli
call
insb
int
jle
inc
daa
xchg
or
pop
dec
xchg
push
adc
lcall
add
inc
cmpl
int
fildll
dec
jns
loopne
ss
addr16
scas
cmpsl
sbb
decl
xor
insl
push
cmpb
jmp
ljmp
scas
dec
cmc
jecxz
and
je
mov
ss
jns
inc
lret
jl
incl
cltd
lret
dec
push
pop
inc
xor
and
enter
push
mov
jb
pop
xor
dec
jl
jmp
hlt
mov
cmp
pop
jle
jnp
cmpsl
shll
sub
push
mov
fcomip
fildll
movsb
sbb
or
std
mov
orb
mov
cmp
inc
adc
mov
xchg
in
jl
push
out
dec
sbb
mov
jg
insb
lods
inc
xor
xor
xchg
cmp
push
fnsave
popf
inc
jb
pop
jmp
sbb
out
addb
xor
mov
jmp
push
ljmp
xor
push
cmp
hlt
pusha
jmp
xchg
mov
sbb
push
int3
icebp
xlat
mov
xchg
les
lcall
xchg
fs
mov
mov
addr16
outsb
pop
clc
and
mov
es
aas
loopne
js
mov
mov
addb
xchg
or
mov
pushf
sub
pop
fsubrs
push
fcom
dec
sar
decl
push
add
insb
mov
push
add
pop
daa
rcr
sbb
jl
ljmp
pop
inc
popa
shrl
xchg
out
mov
pop
cmpb
pop
cmpb
sahf
adc
sub
icebp
adc
and
ljmp
mov
sbb
cmp
push
ja
xchg
in
ffree
xlat
or
call
add
hlt
jb
and
inc
push
ds
decl
lock
pop
in
and
loop
push
push
lea
lock
dec
sbb
pop
dec
aam
call
or
jnp
adcl
inc
loope
inc
cwtl
cmp
xorl
inc
shl
cmc
js
jecxz
cmc
test
decl
aaa
aas
cmp
pusha
in
xchg
sub
mov
cmp
pop
clc
pop
outsl
lods
outsl
cmc
mov
cli
pop
mul
add
leave
outsb
xchg
xor
es
shlb
cmpsb
push
dec
xlat
rdtsc
aaa
inc
push
push
stos
or
lcall
jo
dec
sarb
push
jno
out
adc
decl
sbb
push
sub
incl
mov
push
ds
cmpsb
stos
sbb
and
mov
icebp
pushl
mov
pop
xor
add
xchg
nop
or
cltd
adc
hlt
ljmp
sbb
add
outsb
das
push
adc
lea
aaa
mov
and
dec
dec
cwtl
pinsrw
lock
jmp
sub
mov
sbb
xlat
xchg
xor
cmp
std
lds
std
lcall
fnstenv
pop
mov
mov
dec
lahf
out
ficompl
push
jl
and
inc
dec
push
ja
jmp
cwtl
jnp
jecxz
je
not
mov
mov
mov
inc
push
inc
push
mov
lods
sbb
xor
decl
sbb
out
dec
and
pop
adc
cld
adc
add
sbb
mov
sti
pop
ljmp
inc
cmc
jp
sar
cli
dec
adc
jne
movsb
add
mov
test
fwait
adc
sbb
xchg
hlt
in
fcmovne
les
mov
pushf
push
pop
inc
add
jb
mov
mov
incl
into
mulps
pushl
adc
iret
stos
out
push
lods
sbb
mov
orb
inc
cmpsb
adcl
push
pushl
scas
xchg
jbe
adc
mov
ss
inc
pop
xchg
adc
xor
push
mov
dec
repnz
jg
inc
and
in
mov
aaa
scas
fidivs
or
or
xor
lcall
inc
xlat
mov
dec
mov
and
pop
add
and
push
jmp
cmp
out
lea
lods
ror
les
ret
pop
outsl
xchg
jg
loop
cs
jl
pop
xchg
call
icebp
and
or
pusha
sbb
mov
push
decl
iret
aad
stc
sub
inc
in
sub
stos
popl
imull
ljmp
sub
dec
sub
nop
les
jae
nop
xor
pop
push
out
pop
imul
mov
pop
outsl
jle
test
dec
movsl
mov
mov
jp
push
lods
and
loopne
mov
pop
inc
scas
outsb
push
and
mov
repz
mov
and
pop
mov
decl
je
or
jge
lret
out
pushf
outsl
or
ja
les
lock
mov
push
roll
lret
mov
pop
add
mov
fcomip
pop
lods
ss
jecxz
test
hlt
cld
fistl
outsb
mov
iret
shl
push
lock
inc
leave
mov
bound
inc
ljmp
fsubs
mov
or
stc
add
lock
mov
ret
lcall
repnz
cmc
and
xor
iret
push
lcall
jbe
in
xchg
in
dec
sbb
mov
add
fimull
inc
mov
iret
insb
lods
pop
jp
mov
inc
cltd
cmc
or
adc
lds
mov
pop
nop
enter
jle
jge
jg
and
xchg
push
sahf
xchg
lret
cli
ret
jne
bound
adc
sub
rcrb
push
add
pop
aad
sar
adc
fisttpll
push
push
xchg
call
clc
jns
loope
mov
mov
jno
cmp
fwait
sahf
jnp
sub
leave
pop
push
mov
and
mov
dec
ret
or
popf
mov
rcll
pop
test
mov
xchg
fisubrs
jp
jo
and
cmp
andb
dec
xchg
push
mov
popf
test
shll
cmp
mov
xchg
test
insb
incl
push
test
cwtl
add
std
lret
popf
data16
mov
icebp
xchg
cmp
out
ljmp
jb
xlat
or
jle
pushf
loope
inc
insl
ss
repz
adc
push
mov
lcall
rcll
loopne
int
push
mov
js
push
inc
sti
stos
movsb
dec
add
inc
incl
mov
xchg
xchg
xor
int3
push
loope
mov
mov
call
popa
pop
push
ds
cmp
lea
std
pop
xchg
jp
loop
dec
cld
aam
push
lcall
or
lahf
mov
mov
aas
pop
and
sti
mov
pop
xor
dec
push
push
jnp
jecxz
cmp
roll
fmul
inc
fdivrl
daa
and
mov
and
ljmp
jle
call
dec
idivl
movsl
add
inc
fldl
sar
aaa
std
call
mov
adc
iret
test
or
sub
int
mov
ljmp
shlb
mov
push
test
or
aas
mov
push
and
inc
call
mov
xchg
std
insb
pop
xor
stc
lcall
fists
jg
adc
cmpsl
xchg
jle
mov
mov
mov
jmp
int
adc
jne
jl
pop
sbb
js
add
jecxz
gs
aaa
lret
push
mov
sti
iret
jle
cmp
call
fstpt
mov
xor
dec
push
and
mov
pop
lret
insl
incl
mov
nop
in
mov
dec
lcallw
jno
cmp
sahf
repnz
add
push
lahf
inc
mov
jnp
shr
aaa
in
sub
lcall
dec
ret
in
test
mov
aam
lahf
inc
mov
fidivrs
jbe
jnp
int3
jns
mov
call
into
jne
lds
nop
sub
out
loop
aad
aas
sbb
stc
pop
lods
dec
ret
sbb
orb
ljmp
jl
movsb
jmp
push
shlb
xchg
xchg
fdivr
pop
pop
bound
scas
ret
mov
sbb
adc
inc
add
or
adc
jmp
add
daa
pop
roll
data16
cmpsl
or
pushl
jno
push
dec
add
mov
jne
jmp
inc
ljmp
nop
shrl
lds
adc
jns
cmovge
mov
js
adc
icebp
mulb
and
lea
out
xor
dec
sbb
aaa
test
inc
lock
mov
int
mov
mov
dec
bnd
pop
lahf
clc
movsb
shlb
mov
je
incl
sbb
adc
negl
pushf
inc
xlat
and
pusha
insb
adcl
ja
fwait
mov
sub
scas
jl
aad
lods
adc
pushl
int3
adc
pop
push
sbb
mov
out
sbb
aas
add
rcrl
imul
push
push
mov
mov
ljmp
stc
sarb
jmp
stos
mov
rorb
sahf
mov
push
dec
aaa
dec
negb
call
jbe
in
shlb
cmpsb
js
xor
incl
or
add
in
pop
mov
inc
mov
mov
mov
ja
call
and
mov
jb
lcall
int
std
pop
imul
incl
dec
lods
mov
js
aaa
add
sub
insb
xor
incl
lcall
mov
sub
arpl
pushl
insb
cmp
inc
push
out
orb
sahf
adc
dec
rorb
call
ja
inc
fldz
loop
jnp
adc
insb
pop
adc
sub
jecxz
cltd
mov
outsb
add
xchg
fisubrl
imul
in
in
fxch
push
cmpsl
nop
pusha
xchg
jo
pop
cwtl
mov
jns
icebp
mov
je
sarb
dec
xchg
mov
sub
xchg
dec
test
jle
lret
pop
iret
sub
jecxz
jle
rcll
sbb
std
lods
jp
hlt
hlt
decl
in
mov
clc
cmc
cmp
std
rclb
or
and
mov
cmp
jae
or
inc
cmp
aaa
fcmovnb
mov
shl
cwtl
call
mov
rolb
clc
or
std
test
lcall
ds
mov
cmp
sbb
pop
ret
les
outsl
insb
in
cmp
push
inc
js
sbb
mov
mov
mov
lret
repz
scas
sbb
dec
call
enter
cmpsb
sub
insl
aam
cmpsb
out
add
pop
fdivrl
jmp
in
dec
sbb
xor
xchg
repz
daa
mov
mov
ja
ret
mov
jp
icebp
rorb
sub
fiaddl
daa
push
and
jmp
call
dec
push
xchg
jg
inc
in
jae
repnz
ss
inc
and
mov
ret
rclb
sbb
inc
adc
jmp
xchg
mov
mov
push
mov
ds
aad
jmp
dec
mov
les
or
loope
mov
hlt
rep
and
cs
push
sahf
lcall
push
in
fisubrl
fs
cmp
jae
mov
pushf
xor
sbb
mov
mov
lea
fstl
cmp
sub
mov
mov
pop
mov
outsl
push
add
jg
adc
aaa
rorl
js
dec
ljmp
ds
std
lds
ss
ja
mov
ja
jmp
sbb
lahf
and
add
sbbb
cmp
incl
mov
add
pushf
or
sarl
in
lods
lods
mov
daa
pushl
arpl
push
call
pushf
repz
inc
insl
ss
es
jg
or
ficoml
es
call
xchg
mov
lods
pop
dec
lcall
inc
dec
popa
imul
jmp
pop
sbb
dec
aaa
bound
add
xchg
mov
stos
les
mov
test
nop
loop
sub
fdivr
ljmp
push
xor
mov
dec
and
and
dec
mov
pop
mov
call
out
in
push
mov
and
lret
scas
test
sahf
pushf
rcrb
fcomp
outsb
push
mov
push
pushl
pop
shlb
lods
sbb
sarl
xchg
js
mov
pop
cmpsb
push
out
stos
jge
movsb
outsl
and
dec
sarl
push
insl
adc
inc
dec
mov
fwait
int
scas
adc
jmp
cmp
outsb
rolb
jmp
loop
cmc
mov
imul
mov
pop
adc
or
stos
dec
cmp
rcrl
imul
mov
push
js
jnp
add
nop
mov
xchg
lea
lret
icebp
mov
cmp
out
mov
push
mov
sar
ja
xchg
cmp
mov
insb
sbb
jl
mov
movsl
xor
idiv
incl
mov
gs
movsb
loopne
cmpsl
cwtl
scas
nop
lods
sahf
jle
mov
pop
mov
rorb
std
jmp
lret
dec
jecxz
cmp
inc
or
cmp
ret
mov
mov
decl
add
popf
imul
sar
or
rorl
jnp
comiss
ljmp
dec
xchg
jecxz
xorb
push
xchg
mov
or
cmp
xchg
mov
incl
cmc
divb
mov
push
or
mov
dec
push
inc
xchg
loope
std
dec
and
pop
nop
jb
into
add
cmpsb
mov
add
mov
gs
adc
jo
mov
jb
imul
in
pop
mov
xor
push
cmpsb
cld
mov
imul
andb
pop
ror
stos
jg
mov
and
cmp
les
aam
add
notb
xor
call
in
pop
sbb
or
add
cmp
in
cmp
and
sbb
sbb
push
addr16
jmp
push
aaa
add
jle
pop
push
jb
jecxz
fisttps
mov
xchg
jns
mov
enter
sbb
xchg
inc
cmp
stos
inc
imul
xchg
int
dec
or
mov
lcall
jg
push
das
loopne
mov
out
rcrl
push
shrb
mov
decl
push
cli
out
adc
add
jne
sub
es
stos
addr16
es
sub
mov
loop
cmp
gs
pop
lcall
decl
out
and
ja
adc
cmp
inc
xchg
sub
mov
mov
sub
outsl
ljmp
popa
push
insb
clc
add
mov
sub
hlt
add
push
inc
mov
cmp
je
sub
gs
mov
xchg
jl
jae
mov
in
sbb
cmc
or
adc
divb
jmp
fmull
jg
jo
push
inc
cmpsl
cmpsb
aad
shll
bound
jmp
jecxz
loop
sbb
push
pushl
pushf
sbbl
cmpsb
or
daa
ss
jne
ljmp
sbb
cmp
out
mov
andl
and
jmp
.byte
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
sub
sub
andb
clc
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
push
adc
or
mov
sub
clc
psubsb
and
cmp
add
push
jnp
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
test
add
inc
xor
and
xchg
fidivrl
addr16
cmp
lahf
cwtl
add
cltd
mov
sti
sbb
mov
mov
sbb
aas
and
adc
add
mov
mov
xor
pop
jne
mov
rclb
call
push
pop
jp
mov
mov
sub
sbb
ret
sub
inc
fcoml
clc
jg
adc
sarl
mov
inc
repz
lds
test
leave
jmp
mov
jmp
mov
mov
add
adc
adc
into
ret
ds
mov
cmp
divl
mov
loope
je
dec
js
rep
xchg
add
out
outsl
inc
je
cld
lea
xor
std
xor
jecxz
mov
addb
push
or
add
mov
test
and
cmp
jbe
cmp
xchg
cmpb
add
out
in
mov
jmp
cmp
mov
imul
sub
add
ja
mov
repz
in
sbb
idiv
push
popa
ja
push
mov
mov
xor
jmp
outsb
idiv
enter
adc
mov
mov
inc
inc
adc
pop
in
ja
shl
pop
call
test
clc
call
add
or
in
test
divb
mov
xlat
ret
push
push
jno
nop
mov
sbb
jmp
and
lods
int
shll
sub
data16
jmp
fiaddl
dec
jmp
mov
popa
jb
cmp
ja
sub
xor
clc
ret
nop
mov
fldcw
jbe
mov
mov
push
sub
fists
fwait
pop
pop
pop
push
int
ja
or
flds
fwait
orw
insb
fists
mov
sub
pop
inc
test
test
mov
mov
data16
cmp
in
mov
mov
jbe
mov
pop
push
sbb
pop
nop
dec
add
cmpl
pop
movl
jmp
and
mov
call
sbb
xor
shl
sub
push
adc
mov
add
decb
adc
push
sbb
jo
push
addb
rcl
cld
xchg
jae
into
push
es
jae
xchg
push
addl
mov
cwtl
divl
pop
dec
sete
cmp
scas
jo
sbb
jmp
nop
push
adc
aas
pop
lods
in
cs
adc
sub
dec
je
mov
cs
andb
movsl
mov
push
or
daa
das
inc
pop
sarb
add
push
rclb
and
and
shlb
cmpsb
push
xchg
push
push
push
lea
push
sbb
lock
cmp
mov
cmpl
dec
decw
int
mov
dec
pushl
outsl
out
out
sub
lock
jbe
xchg
push
aaa
xor
in
or
scas
rorl
mov
dec
mov
jae
cmpb
mov
inc
jmp
push
xchg
sub
jp
pop
idivl
jbe
cmp
or
test
cmp
pop
clc
stos
es
call
pop
fistl
hlt
jmp
cmc
jne
movsb
je
popf
pop
pop
jle
mov
pop
mov
xor
xchg
loopne
cmp
cs
push
stos
sbb
call
cmpsl
ljmp
fldl
std
sbb
fdivl
leave
mov
lea
mov
mov
or
push
insl
in
or
sti
mov
push
lea
pop
mov
lret
jmp
inc
adc
filds
dec
sub
sub
ljmp
shll
fucomi
pop
cmp
testl
add
lods
rcrl
xchg
or
sbb
push
and
fdivs
divb
das
ja
and
push
aad
sub
sbb
cld
adc
sub
mov
adc
mov
je
mov
scas
jg
xchg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
ud0
inc
add
mov
jbe
mov
jmp
mov
or
or
lret
lret
pop
mov
mov
inc
inc
and
pop
jo
popa
mov
push
xchg
inc
inc
incl
cmp
add
push
shr
je
mov
mov
cmp
jne
scas
clc
pop
hlt
dec
je
mov
add
aaa
add
or
pushl
in
loop
push
adc
add
and
je
mov
cmp
jne
dec
je
mov
jbe
cmpsb
stc
cmp
jne
or
adc
add
mov
rclb
cmp
jne
shr
shr
sbb
out
scas
orb
mov
shr
or
iret
inc
dec
dec
pop
cmp
stc
aaa
fistps
add
and
mov
cmp
jne
dec
sarl
out
dec
and
add
bound
xor
pop
jecxz
xlat
jg
xchg
mov
mov
shl
or
out
pusha
orb
stos
mov
stos
pop
daa
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
call
push
jmp
or
faddl
clc
ja
lea
push
add
push
idiv
pop
jl
out
int
or
jge
jmp
inc
mov
js
pop
sub
jmp
in
push
lods
lds
pushf
mov
filds
cmpsl
jb
and
add
pusha
xchg
pushf
add
aad
sbb
dec
cwtl
pop
xor
mov
iret
sub
sub
mov
adc
jnp
cmp
loopne
pop
mov
imul
movd
adc
and
add
adc
js
sub
cmp
jg
add
adc
rcll
shrl
call
mov
adc
jmp
xchg
adc
dec
or
mov
arpl
mov
xor
inc
fs
mov
push
fstpt
and
test
jg
cwtl
jmp
push
idiv
mov
add
or
aad
add
cmp
xchg
int3
outsb
jmp
xor
add
pusha
ss
lahf
mov
mov
push
cmp
repnz
cltd
outsb
sar
je
inc
mov
dec
jne
pop
mov
add
sub
adc
cmpsb
sub
fbstp
cmp
and
test
mov
test
jbe
orl
testl
call
pcmpeqb
jb
cmp
cltd
xor
and
ss
iret
mov
push
adc
dec
sub
xor
sbb
dec
je
stc
jmp
fstp
fldt
fldz
mov
pop
or
sub
jg
aas
sbb
leave
daa
mov
cli
or
leave
daa
lahf
inc
pushf
or
ret
mov
adc
enter
xchg
cwtl
push
and
sbb
in
pop
stc
add
mov
or
sub
test
out
sub
pop
stc
xor
mov
lds
mov
stc
lahf
incl
cmp
fidivrs
call
mov
bound
fwait
inc
cmpb
xlat
fadds
outsb
xor
xchg
pushl
pushl
test
into
sbb
rorl
mov
push
pop
test
mov
or
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
incl
mov
mov
addr16
leave
repnz
bound
and
cld
gs
incl
mov
sub
inc
aad
iret
decl
js
inc
mov
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
jg
dec
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
es
mov
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
lcall
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
decl
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
lcall
mov
mov
mov
popa
mov
and
addr16
push
daa
mov
subb
and
and
outsb
bound
xor
jmp
shl
xor
shll
out
mov
pop
jne
push
pop
cmp
repz
adc
cmp
popa
pushl
ficoms
movzwl
lea
push
push
fisubl
fdivrl
mov
dec
mov
push
std
push
xor
movl
ljmpw
add
dec
mov
sub
mov
sarl
out
mov
jmp
push
clc
pop
aas
or
decl
xlat
mov
dec
inc
push
push
inc
push
inc
pop
incl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
hlt
ljmp
mov
ljmp
mov
mov
xor
mov
sub
push
inc
rep
push
or
push
mov
fdivp
mov
jne
dec
mov
xor
and
jne
stos
repnz
mov
xchg
fsubl
xchg
jo
pop
js
inc
sub
ffreep
into
or
sbb
mov
jge
adc
rcr
test
or
sub
out
jge
sub
adc
popl
jmp
xor
jle
inc
scas
clc
lods
int3
outsb
loopne
mov
or
push
cld
mov
mov
jl
mov
xor
push
shr
dec
repz
out
push
jnp
mov
sub
pop
mov
fisttps
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
in
ret
aaa
lods
mov
mov
mov
pop
and
adc
pop
inc
cmp
xchg
stos
cmp
jae
paddd
add
orb
and
loope
inc
xchg
add
add
jo
mov
fcomip
mov
inc
idivb
mov
pop
xchg
cmp
mov
sub
sbb
add
mov
add
imulb
stc
push
push
mov
push
add
pop
lea
push
cmpsl
fdivrl
dec
setne
scas
fwait
add
mov
xor
mov
mov
lock
xor
jb
imul
fmull
or
jne
or
cmp
mov
fcoml
vmovdqa
add
fisubrs
test
test
mov
mov
cmp
jge
shll
dec
jle
jne
mov
add
loope
jmp
lret
adc
inc
xchg
add
repnz
je
pop
in
negb
pop
add
sub
mov
jno
je
cld
pop
cs
xchg
add
jle
mov
out
mov
int3
inc
mov
mov
fcomp
xor
das
mov
shlb
inc
dec
out
es
loop
dec
orb
pop
push
inc
pusha
dec
aam
or
data16
mov
mov
rolb
pop
lcall
mov
push
xor
popa
pop
dec
out
decl
xchg
adc
pop
dec
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
cmpsb
jmp
add
sbb
jecxz
dec
cmp
cmp
sub
popf
enter
sbb
lcall
pop
jmp
push
xor
call
mov
shlb
jl
push
hlt
xor
call
adc
mov
mov
movl
cmp
enter
or
pop
sub
data16
mov
or
cmpsl
cmpsl
pop
inc
or
fnstcw
xor
call
sbb
popf
pop
and
call
pop
scas
cmpb
mov
cli
in
push
call
push
test
mov
push
pusha
push
ss
or
add
jns,pn
add
or
imul
push
push
and
mov
mov
cmpb
je
or
jne
movsbl
inc
or
jmp
add
daa
xchg
xchg
sub
push
jecxz
in
inc
pusha
sbb
adc
xor
loop
fdivrl
adc
loopne
dec
jecxz
pop
movb
add
jne
fidivrs
mov
dec
adc
outsb
ret
add
adc
je
stos
mov
or
cmp
push
je
dec
adc
or
jbe
test
std
pop
dec
arpl
push
pop
cmp
int
mov
enter
adc
jne
jbe
adc
mov
or
push
jns
jo
dec
add
fsubs
push
sbb
mov
sub
push
outsb
popf
adcb
xchg
cmp
sub
adc
loopne
mov
add
xchg
add
fildll
fstpl
jmp
xlat
mov
ret
sbb
inc
or
pop
mov
and
je
dec
or
mov
jne
mov
pop
or
xor
fs
or
add
lds
mov
out
outsl
xor
aas
repnz
addb
cmp
inc
and
jne
xchg
mov
mov
or
mov
jg
pushw
cmp
fnstsw
shll
mov
mov
out
daa
cmp
lahf
adc
push
adc
adc
adc
add
push
pop
aas
pop
adc
mov
dec
loope
mov
jmp
setge
pusha
pop
pop
cmpsb
movl
ja
ret
push
subb
lahf
outsb
mov
fcomps
call
push
push
mov
fists
fs
mov
inc
dec
lock
mov
inc
or
inc
add
testl
jle
cmp
insb
fisubrl
adc
adc
cs
iret
jae
mov
push
lods
inc
pushf
jle
pop
insl
mov
shlb
test
ret
aad
fisttpl
add
cmp
frstor
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
jne
pop
in
sub
add
jmp
sub
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
mov
jmp
mov
mov
jmp
mov
jmp
mov
pusha
addl
test
xchg
push
or
dec
inc
sub
pop
incb
sbb
pminub
push
movl
test
pop
test
adc
inc
mov
je
add
cli
sbb
rcr
fsts
inc
sti
sub
mov
roll
push
sub
or
xor
xchg
ja
ret
loope
test
movsb
fmul
dec
call
cmp
lret
in
aas
mov
cmp
or
add
or
cmp
jne
xchg
push
mov
adc
es
ja
xchg
ret
or
or
jo
daa
popl
test
jle
dec
mov
inc
insb
aas
icebp
inc
fiadds
call
and
jecxz
adc
xor
lahf
xor
push
mov
lock
dec
mov
insb
js
and
repz
add
sbbb
dec
mov
movl
adc
and
inc
leave
loopne
inc
pop
fwait
mov
jg
stos
mov
call
or
bnd
cmp
adc
push
dec
push
add
add
incb
push
jbe
adc
dec
jne
pop
pop
pop
inc
xorl
sbbb
jmp
es
cmpxchg
inc
or
loopne
lcall
mov
mov
mov
jnp
lock
mov
es
sti
mov
dec
cmpsb
rcl
fcoml
mov
fsts
cmp
jbe
sbb
lahf
loopne
fucomip
xor
sbb
inc
movsl
pop
sbb
aam
pop
inc
adc
ja
add
mov
mov
pop
push
xor
leave
pop
push
cmpsb
dec
rorl
cmpsl
mov
and
adc
cmp
push
les
mov
adc
push
push
jne
jg
test
mov
add
inc
inc
pop
ret
mov
test
stos
pop
push
fwait
jge
cmp
rolb
addl
mov
gs
cmpb
push
cmpl
xor
add
jae
jl
cmp
mov
call
and
dec
and
aas
mov
mov
xor
loopne
push
jne
popa
or
add
imull
add
fwait
inc
adc
scas
xor
push
scas
dec
shl
inc
adc
sarb
or
push
insl
jo
or
add
adc
add
cld
in
jne
cmp
inc
lods
daa
adc
mov
ret
pop
push
add
mov
cmp
push
push
popl
aad
dec
or
pop
mov
adc
incl
push
lea
push
mov
push
les
push
sbb
add
or
jnp
dec
and
inc
jg
sarb
sub
insb
mov
pop
push
dec
sarb
pop
jmp
jbe
xchg
adc
adc
das
xchg
jle
paddusw
mov
add
loopne
push
sti
or
gs
movw
pop
or
pop
mov
sub
insl
cs
pusha
or
mov
das
pop
or
loopne
ds
cmp
rorb
jo
sbb
xchg
push
mov
pushf
cmp
mov
mov
clc
lret
aad
push
cmp
aaa
fsubs
rcrl
add
cld
inc
stos
orl
mov
fbstp
jmp
lea
cmp
push
sbb
vmread
mov
xor
cmovge
outsl
loopne
mov
adc
ret
sbb
imul
les
jge
xor
or
call
loop
cmp
xchg
mov
nop
xor
mov
je
inc
jae
mov
or
out
mov
add
jmp
inc
add
jmp
push
pop
sub
and
pop
pop
mov
idiv
or
push
push
addr16
in
add
jae
jbe
add
or
js
sbb
push
repnz
icebp
gs
add
pop
pop
xor
push
ret
push
and
pop
cld
or
gs
ret
fnstcw
or
and
pop
add
clc
dec
js
aas
xchg
test
jmp
clc
or
ljmp
pop
loope
pop
icebp
and
mov
adc
mov
cmp
sub
inc
lock
scas
popa
cmpl
je
cmp
mov
cmpsl
xor
jo
rorl
add
cld
add
mov
sti
sbb
dec
mov
lds
push
sbb
xchg
dec
mov
dec
clc
mov
mov
jmp
mov
movsb
dec
pop
mov
xor
mov
push
mov
inc
cld
dec
jmp
sub
ret
testb
push
cmp
fs
dec
jne
mov
or
ja
jge
and
aaa
add
dec
ret
pop
ljmp
inc
pushf
sbb
loopne
or
add
pop
dec
jne
mov
push
int3
and
dec
loopne
pop
lea
jmp
xchg
das
out
jmp
add
push
sub
imul
mov
inc
pop
jmp
and
rcrl
andl
sub
lret
loope
jo
jo
stos
add
and
jmp
aam
cmc
adcl
inc
hlt
jnp
in
lods
pop
add
add
mov
cmp
inc
cmc
and
mov
adc
dec
inc
data16
add
es
mov
daa
cmp
hlt
mov
outsb
sub
dec
jl
pop
shrb
cld
cmp
jge
sub
jbe
jb
adc
push
cltd
popa
push
fnsave
adc
shr
in
mov
jmp
mov
outsl
pop
cmp
push
std
dec
jl
sub
mov
mov
sbb
inc
sub
add
lea
inc
dec
movsb
add
ret
push
push
dec
cmp
or
lds
scas
push
lahf
cltd
mov
push
mov
fistps
xlat
adc
imul
test
jg
cmp
mov
mov
lea
lock
push
clc
mov
cmpsb
jmp
pushf
xor
jg
adc
push
insb
dec
js
mov
inc
jb
adc
add
push
pop
adc
addb
inc
lret
fcompl
sub
pop
mov
fbld
push
int3
dec
push
lahf
out
and
sbb
inc
add
xlat
xor
mov
fwait
or
jno
cld
lods
jmp
out
loopne
inc
jnp
sar
pop
cmp
ret
push
pop
jg
mov
jle
ljmp
ret
mov
leave
sbb
aad
mov
rcr
pop
jp
pusha
sub
mov
sub
ret
std
sub
or
in
or
push
das
sbb
pusha
test
shlb
push
sub
sahf
dec
lea
push
cmp
int3
ljmp
mov
rcll
push
add
mov
jno
cs
enter
jmp
pop
call
jle
push
mov
or
nop
jae
aas
and
clc
addb
or
outsl
push
subl
push
das
int3
pop
pushl
mov
je
xchg
and
or
scas
add
and
pop
add
add
int
mov
adc
sbb
je
ss
push
and
pop
fcom
adc
dec
add
data16
call
push
cvtps2pd
or
mov
clc
dec
imul
stc
jge
ds
cmp
jge
xor
dec
insb
pop
dec
cmp
nop
pushf
lcall
maskmovq
mull
clc
push
lods
add
add
or
dec
or
mov
je
daa
cltd
cmp
mov
les
stos
test
out
cmc
in
scas
dec
mov
add
xchg
xchg
push
int3
mov
mov
sub
std
adc
mov
mov
fistpll
fistpll
cwtl
cmp
xlat
test
fldl
mov
call
lods
pop
push
add
or
or
and
or
je
cmp
je
cmp
mov
je
mov
jbe
scas
mov
jp
dec
imul
clc
jmp
adc
or
adc
loopne
das
shr
cmp
mov
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
jb
popf
sub
lock
sub
push
jmp
pop
in
test
fstpl
or
call
adcl
loopne
jns
inc
and
data16
pop
jbe
test
push
pop
pop
cmp
and
test
int3
jg
aad
movsl
jae
and
pop
int3
cmp
sbb
fists
xor
jmp
es
daa
nop
sbb
dec
insb
sub
jmp
inc
test
inc
cmp
sub
add
test
cmp
lock
and
icebp
jmp
push
xchg
xchg
add
movsb
rcrl
adc
movsl
mov
jg
inc
add
pop
ss
clc
push
push
add
sarl
minps
into
mov
pop
xor
pop
push
mov
cmp
xor
or
aaa
aaa
aaa
or
dec
or
jo
imul
adc
inc
pop
dec
mov
fs
xchg
loopne
xchg
jmp
and
mov
jl
adc
pop
iret
adc
add
je
clc
or
fdivrp
popa
inc
inc
mov
jmp
aas
add
cmp
and
popa
adc
and
mov
jne
aad
rclb
sbb
fnstsw
cmpsl
or
iret
mov
and
mov
push
test
push
popa
jge
or
in
pushf
out
scas
jmp
rorb
out
sub
mov
enter
sbb
jp
push
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
sbb
cmpsl
testb
add
inc
ljmp
fnstcw
pop
mov
jo
add
je
cmp
out
cmp
nop
lret
push
dec
adc
popa
adc
popa
xchg
sub
jp
push
hlt
xor
push
pop
movsb
push
push
fstpl
adc
pop
mov
aad
sbb
adc
and
stc
cmpl
dec
push
pop
mov
inc
xor
push
mov
jle
inc
mov
clc
jmp
push
test
enter
les
mov
add
cmp
xor
or
aas
sarb
mull
mov
sub
sar
cli
out
dec
adc
pop
pop
ret
add
jo
jbe
lock
cmp
in
sbb
or
or
sti
xchg
sub
jl
mov
mov
mov
sub
inc
jmp
cmp
and
out
mov
or
add
je
cmp
mov
cmp
je
daa
xor
mov
add
sub
inc
popa
aaa
in
insl
and
or
push
stc
push
jb
pop
out
test
out
push
mov
and
loopne
out
xor
sbb
aaa
jmp
push
sti
or
xor
or
jb
jmp
jl
andl
inc
sub
jbe
jmp
jg
mov
cltd
inc
jno
xor
cld
adc
movsb
rol
subb
lret
inc
sbb
mov
clc
lods
inc
xor
ljmp
lods
push
jl
xchg
xor
mul
and
adc
rolb
neg
push
cmp
jae
push
jo
bound
xor
push
adc
inc
push
or
or
lcall
sub
shl
dec
inc
push
dec
push
xor
roll
nop
sub
adc
insb
jmp
pusha
icebp
sti
mov
add
pushf
sarb
je
dec
add
inc
je
adc
or
mov
aaa
adc
push
mov
jmp
sbb
test
sub
jmp
into
leave
cmc
add
popa
pop
or
push
repnz
pop
add
add
cmp
pop
mov
xchg
icebp
jne
add
lods
rolb
ss
lock
popfw
or
push
push
into
inc
add
mov
stos
les
push
call
xor
dec
imulb
jbe
insl
call
sub
inc
call
inc
sbb
cmp
jne
mov
cmp
jge
mov
sbb
lahf
loopne
fwait
mov
ret
lock
add
lea
ljmp
stc
mov
pop
decl
stos
mov
jo
stc
fcoml
lret
in
jge
xlat
sahf
or
or
and
inc
test
insb
inc
push
xlat
mov
cmp
mov
add
fldl
jno
pushf
jbe
movl
or
add
cmpsl
lock
lock
test
add
cs
mov
cmpsl
cmpl
jle
cwtl
or
xchg
dec
data16
inc
data16
or
mov
cmp
das
mov
lcall
dec
jne
enter
mov
movsl
pop
lds
cmp
add
scas
scas
push
add
mov
adc
pop
jo
mov
adc
outsl
sahf
or
push
loop
cld
or
out
lock
mull
adc
sbb
movl
push
xlat
cmp
jle
repnz
xor
pop
lock
or
mov
orb
ret
mov
mov
mov
ss
adc
xchg
hlt
jo
rorl
jge
add
and
or
xor
popa
mov
pop
xchg
dec
push
xchg
pop
inc
xchg
test
dec
loopne
xor
inc
rcrl
out
inc
mov
jg
mov
cmpsl
xor
decl
icebp
adc
push
adc
icebp
or
aad
aam
pop
and
movsb
xchg
inc
dec
in
ret
pop
ja
sbb
adc
dec
or
aaa
push
push
push
mov
incl
movsl
pop
pop
mov
hlt
pop
pop
in
sbb
mov
push
pop
add
jne
inc
cmpsb
jbe
cwtl
inc
sbb
in
loop
mov
dec
jne
les
push
pop
or
sbb
les
popa
mov
inc
xor
sbb
test
bound
and
shrl
adc
fcompl
sbb
add
cli
inc
aam
sbb
cli
pop
loopne
shl
ret
jmp
dec
mov
test
cmp
jne
pop
nop
mov
or
icebp
dec
sbb
push
bound
add
push
ja
xchg
ret
or
pop
test
test
call
rcrb
je
sti
pop
jne
sub
in
sbb
sti
pop
cmp
js
pop
jne
add
dec
jp
pop
fwait
mov
andb
out
and
mov
ljmp
mov
iret
or
sub
loopne
mov
add
inc
cmp
cltd
sub
add
push
gs
imul
out
and
je
pusha
rorb
cmp
outsb
notl
test
sub
dec
push
push
mov
inc
mov
aad
rolb
lahf
test
dec
std
incl
pop
ret
imul
gs
xor
cs
insb
ret
sbb
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
ja
inc
stc
outsl
loopne
sbb
push
neg
aaa
sbb
inc
out
and
push
sub
add
xchg
mov
and
addl
pop
pop
dec
icebp
lods
test
add
mov
call
out
inc
je
movsb
xor
int
aas
iret
les
add
push
repnz
fs
inc
nop
jae
lods
aas
sti
and
loopne
lcall
sbb
loope
pop
cmpb
repz
or
stc
jnp
mov
jmp
dec
cmpb
rol
xor
lock
jae
sub
inc
and
sub
sbb
pop
lahf
push
or
push
mov
icebp
push
je
das
ljmp
xor
cmc
add
in
adc
popa
and
outsl
data16
popa
jb
inc
mov
mulb
gs
aaa
jg
rclb
inc
cltd
dec
aam
dec
hlt
andl
xchg
and
add
jb
sbb
xor
jbe
mov
sbb
xchg
add
mov
rolb
out
jp
mov
add
mov
jge
aad
fmuls
dec
sbb
flds
ret
cli
mov
orl
push
mov
or
xchg
pop
mov
inc
xchg
and
lcall
fadd
xor
mov
sbb
pushf
cmp
test
int3
inc
sub
popa
subb
jp
lods
sbb
dec
push
das
pusha
cmp
jo
pop
or
or
add
jne
orl
push
ljmp
pusha
cmpsl
mov
call
sub
adc
in
bound
push
lock
mov
mov
loopne
push
inc
mov
int
imul
mov
sub
xchg
sbb
test
pop
daa
jnp
and
pop
sbb
ret
sbb
loop
mov
push
lea
or
daa
lock
cmpsl
push
adc
adc
or
das
sub
mov
mov
add
lods
push
add
add
popa
mov
pop
dec
and
push
or
test
popa
rep
jns
and
add
cld
call
mov
outsl
movhps
push
inc
xchg
mov
insl
lods
pushf
pop
fidivl
leave
out
adcb
movzwl
ljmp
incl
cli
jg
push
mov
inc
jmp
cmp
pop
add
pop
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
push
and
and
rolb
int
add
dec
or
cmp
jb
or
js
add
xor
and
sbb
cmp
dec
jbe
pop
add
cmp
push
lock
lea
ret
mov
mov
mov
aaa
lahf
or
push
push
dec
inc
mov
jnp
icebp
jmp
loopne
cmc
fdiv
add
inc
test
je
fnstsw
loop
or
jae
and
je
jl
push
cmp
adc
mov
and
cmp
jne
pmuludq
cwtl
and
or
mov
pop
clc
out
bound
dec
dec
dec
cld
mov
mov
jle
mov
inc
lcall
loopne
jo
adc
or
lock
and
inc
inc
mov
jbe
jae
ret
xor
mov
int
sbb
cli
xorb
sbb
sbb
jb
inc
mov
and
daa
out
arpl
fs
jns
scas
aam
pushf
rolb
je
adc
pusha
ret
lea
xorl
add
les
fldenv
push
sub
or
jmp
adc
enter
mov
repz
mov
nop
push
mov
mov
cmp
pop
sbb
rolb
loopne
leave
ds
cmp
cmp
cmp
cmp
add
and
fdivrl
and
or
pop
gs
aas
sub
jo
push
gs
and
add
pop
bound
arpl
aas
loopne
sub
add
orl
sti
addb
clc
aaa
mov
mov
xchg
pop
pop
mov
lock
shlb
pop
lea
push
push
xchg
adc
add
push
cmp
mov
cmp
and
neg
xchg
je
cmp
or
dec
xor
mov
xchg
aam
in
daa
sub
add
or
dec
xchg
mov
push
in
mov
jp
clc
sbbl
movb
jb
cmpsl
xor
push
sub
int3
ja
and
loopne
cwtl
imul
and
leave
divl
in
push
mov
mov
mov
lods
xchg
in
mov
sub
stos
iret
cmp
jbe
shlb
and
jmp
mov
ja
imul
ja
mov
adc
jmp
daa
mov
push
push
roll
lcall
jnp
and
inc
cmpl
imul
and
sti
mov
jl
sub
or
mov
outsl
jmp
or
leave
jne
mov
mov
jns
push
pop
adc
xor
push
and
mov
test
lret
ja
repz
sub
push
add
fwait
mov
or
or
sarb
xor
jg
fwait
in
pop
xor
fcoml
xchg
cmp
push
andl
push
add
inc
add
inc
ljmp
sbbl
push
mov
push
or
lods
je
cmp
cs
xchg
mov
xor
shlb
sbb
fs
gs
push
gs
add
sbb
inc
adc
scas
insl
fimull
popa
bound
inc
push
fistpll
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
lcall
push
outsl
insl
bound
outsl
js
imul
ja
nop
push
cmp
push
dec
ja
dec
inc
push
inc
add
xor
je
add
outsb
daa
aas
out
pop
addps
dec
dec
push
dec
dec
mov
and
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
leave
leave
lods
test
fs
in
in
enter
in
in
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
arpl
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
cmp
jns
mov
cmp
cmp
xor
sub
cmp
cmp
cmp
sub
cmp
cmp
sbb
cmp
cmp
adc
or
mov
cmp
cld
data16
pushf
pushf
pushf
pushf
hlt
lock
call
in
mov
ror
mov
cmp
sarb
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
insb
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
daa
daa
mov
adc
adc
jns
daa
daa
add
cld
cmp
cmp
clc
hlt
lock
cmp
cmp
call
cmp
cmp
aam
int3
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
fs
pushf
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
sbb
mov
shl
or
and
dec
loopne
mov
es
popf
lods
mov
inc
or
and
xor
dec
testl
xchg
dec
mov
scas
push
and
add
ljmp
pop
mov
pushf
mov
pusha
push
sub
xchg
arpl
pop
lret
fwait
lahf
test
xchg
mov
jns
sbb
adc
out
sahf
sbb
and
and
movsl
mov
and
cmp
jmp
mov
pop
ret
scas
int
outsb
inc
cmpsl
shrl
and
push
stc
ja
shrb
mov
ret
mov
pop
mov
cmp
mov
mov
push
push
jo
mov
cmpsb
jmp
gs
mov
bound
dec
inc
or
inc
je
sbb
pop
or
xchg
movl
mov
filds
dec
popa
gs
cwtl
and
push
dec
inc
inc
dec
add
in
or
daa
outsl
adc
and
dec
out
adc
push
dec
pop
and
mov
push
push
pop
sub
pop
cs
inc
dec
pop
dec
dec
dec
inc
push
das
mov
stc
jne
add
mov
xor
xchg
or
jl
jl
push
jmp
psllw
in
in
repz
cmc
in
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
jmp
loope
in
in
jecxz
in
in
in
out
jmp
ljmp
in
out
rcl
in
in
rcl
aam
in
in
xlat
fcomp
in
in
fcmovu
in
in
rol
in
in
ret
in
mov
leave
in
in
lret
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
in
in
mov
in
cmpsb
cmpsl
test
in
in
stos
stos
lods
lods
in
in
scas
scas
nop
xchg
cltd
in
out
lahf
cmpl
mov
cwtl
cs
ds
or
push
inc
imul
or
sub
mov
push
fwait
insb
mov
mov
jp
leave
mov
jp
push
dec
pusha
daa
push
jg
xor
xchg
add
adc
inc
js
gs
stos
std
jo
imul
dec
dec
and
movl
pushf
jo
nop
aam
aam
dec
and
inc
dec
jne
dec
dec
gs
outsl
pop
mov
push
xor
fbld
or
outsb
mov
mov
scas
mov
push
ret
lret
push
push
loopne
xor
jnp
daa
fisubrl
xlat
inc
jl
inc
jl
push
push
and
push
sbb
mov
scas
cwtl
hlt
dec
ljmp
or
imul
outsl
nop
lock
mov
mov
outsb
sbbl
jge
add
dec
or
dec
jbe
cmp
ja
pop
mov
cmp
adc
pusha
pop
dec
mov
in
jge
nop
cld
scas
cld
pop
jge
mov
imul
add
shrl
ret
insl
jle
lods
scas
shll
sbb
rcl
jg
add
fcmovu
add
push
outsb
fs
pop
scas
mov
shrb
js
mov
mov
mov
or
push
sbb
or
inc
popa
jae
adc
sahf
add
shll
inc
mov
cmp
mov
or
inc
add
lock
insb
popa
je
in
sbb
ds
ds
rcll
lock
and
ficompl
nop
sub
stos
adcb
push
arpl
adc
test
ret
or
je
insb
inc
fsubrl
ds
fisubrl
adc
imul
orb
inc
addb
fs
cwtl
mov
int
bound
fiaddl
hlt
mov
outsl
cmpsl
or
data16
push
addl
or
or
inc
push
stos
push
test
or
mov
addr16
cld
push
mov
data16
sarb
cs
or
add
dec
invd
xor
inc
insb
jae
in
cmp
test
add
and
addr16
inc
cld
fldt
push
adc
jb
popa
fs
push
fs
dec
les
int3
sbbl
mov
in
xor
mov
or
repz
aam
xchg
fwait
push
movsl
xor
iret
jno
orl
jnp
sbb
push
loopne
sbb
mov
test
mov
mov
int
pushf
rcr
and
dec
jne
push
mov
and
inc
push
fsubrs
outsb
arpl
cmp
pop
inc
xchg
fadds
movsb
ret
test
lock
repz
mov
add
cmpl
enter
dec
out
mov
xchg
sbbl
insl
ss
push
pop
lock
jp
mov
ljmp
push
mov
jmp
push
adc
or
mov
mov
les
gs
pop
fstpt
dec
push
or
xor
mov
push
add
mov
add
dec
rcrl
and
idiv
sub
ret
mov
les
sbb
decb
inc
dec
xor
lcall
pop
add
pop
push
dec
mov
call
or
jbe
inc
bound
leave
repz
je
movzbl
push
push
jmp
mov
sbb
lahf
lods
pop
add
ror
or
xor
repz
jne
inc
jne
inc
inc
ds
mov
sub
in
add
orl
push
ljmp
push
sub
out
and
sti
je
loopne
out
sub
pop
mov
sbb
stos
mov
inc
jl
ja
test
pop
ret
insl
inc
rolb
or
jecxz
bound
pop
jb
mov
cltd
adc
jmp
ret
test
and
mov
nop
or
cltd
outsb
jo
add
clc
cs
inc
js
andl
add
fnstcw
add
insl
not
faddp
js
ljmp
aaa
adc
add
repz
cmpb
jbe
adc
sarl
and
pushf
inc
rcr
push
sub
inc
jecxz
enter
imul
xchg
ret
push
push
mov
jns
insl
in
or
mov
and
push
jns
hlt
imul
adc
pop
mov
in
fsin
je
ljmp
jge
add
es
inc
and
cmp
out
mov
add
sub
and
adc
jl
arpl
mov
or
aas
jne
loopne
sti
ja
lea
fwait
dec
imul
loope
jne
or
xlat
sbb
aaa
js
jp
xor
lcall
add
push
adc
sub
push
mov
add
pop
or
sbb
cmpb
and
sub
and
push
int3
add
xchg
pop
lock
or
xchg
sub
jo
in
pop
popa
clc
xchg
test
lock
aaa
dec
sti
decl
mov
sub
je
jae
aam
mov
cmp
jl
inc
mov
or
push
incl
pop
or
sbb
or
jae
inc
dec
jne
mov
out
or
jne
sarb
paddusb
mov
sub
mov
inc
std
push
xor
div
dec
jle
cli
cmp
push
pop
mov
lock
inc
ljmp
jbe
add
mov
sub
jmp
xchg
cmpsb
add
dec
jne
push
mov
sub
leave
push
outsb
addl
sub
xor
add
and
jo
lcall
negl
and
pop
mov
jnp
xor
dec
inc
and
cmpsb
mov
pusha
lcall
xchg
imul
add
fs
fnstsw
je
push
ud0
insb
and
fistps
ret
add
add
sub
add
sbb
fprem
fdivr
mov
xor
outsl
add
lods
push
sub
rcrl
loope
xchg
cmc
adc
ffree
ffree
ffree
fstpl
cmp
rcrb
add
test
frstor
push
loope
data16
jnp
and
lods
jmp
xchg
inc
push
push
mov
inc
aaa
push
cmove
sub
cmp
orb
mov
jp
or
mov
aaa
xor
inc
jne
lock
add
jo
test
sarb
jg
movsl
pushf
ss
cmpsl
mov
rol
cmp
inc
push
aas
inc
js
jge
add
push
fcoml
and
sbb
pop
xor
sub
xchg
dec
mov
pop
sti
int
nop
insl
nop
loopne
add
fldl
jns
add
or
addl
push
movb
rcll
je
and
push
mov
jmp
js
cmp
add
inc
jecxz
push
pusha
sbb
loope
scas
push
cmc
and
lret
lock
xchg
lods
add
inc
out
adc
insl
lock
jle
aas
add
xchg
add
ss
push
fcmovu
ret
in
mov
pop
jge
pop
addr16
int3
test
nop
nop
add
mov
ja
push
push
inc
in
xchg
sub
xor
bound
test
mov
and
ucomiss
nop
scas
mov
rorb
cmp
lock
clc
or
je
das
es
out
cmp
ja
mov
and
add
xor
push
outsb
dec
pop
sub
hlt
shlb
mov
dec
push
ds
call
inc
pop
sbb
mov
dec
idivl
jne
cltd
aaa
push
cmp
mov
push
or
iret
pop
rol
testl
push
pop
sub
mov
es
loopne
mov
sahf
push
jnp
mov
inc
and
call
rolb
pop
xchg
aas
pushf
into
xchg
xchg
fbstp
adc
cmp
cmp
sbb
clc
adc
ficoms
loopne
lcall
hlt
and
xor
insb
stc
dec
inc
cld
or
mov
xchg
les
pop
pop
es
push
scas
iret
test
test
shlb
add
out
leave
push
add
pop
pop
movsb
cmp
mov
test
and
icebp
mov
in
xor
add
movl
testb
clc
ret
adc
ss
outsb
sbb
dec
sbb
add
inc
pop
hlt
andl
cmp
addr16
pop
pusha
ret
test
test
rclb
popa
push
cmp
leave
inc
xchg
mov
xor
int3
jmp
adc
push
andb
inc
sbb
jl
loopne
inc
adc
in
and
loopne
inc
sub
shrl
jecxz
adc
mov
movsl
adcl
mov
push
inc
mov
xchg
mov
jg
not
and
mov
aad
iret
pop
pop
rclb
sub
orl
jmp
mov
out
cmp
pop
add
je
jae
pop
insb
movsb
pop
orl
cmp
nopl
add
add
lahf
mov
je
mov
pop
or
mov
mov
mov
add
mov
add
mov
xlat
popf
jne
dec
cli
jg
mov
sbb
mov
test
test
pop
jns
aaa
xchg
mov
insb
mov
cs
mov
sahf
mov
dec
pop
jns
mov
mov
repnz
xor
mov
ds
clc
or
jge
mov
out
sarl
mov
lock
mov
orb
mov
faddl
in
aam
outsl
lock
in
mov
jne
rcll
addr16
adc
ss
js
bnd
push
enter
push
push
mov
pop
jbe
imul
call
outsl
jno
aaa
call
add
dec
cli
jl
cmpsl
pop
es
push
hlt
clc
cld
push
jne
inc
xchg
lock
push
cld
imull
into
inc
sub
push
in
mov
outsb
and
test
dec
mov
mov
repz
lock
add
xlat
mov
xor
fsubrs
mov
fisubl
xor
mov
dec
lock
mov
dec
das
lea
daa
and
cmp
xchg
mov
rorb
test
rorl
lds
mov
aam
jo
cltd
rcl
pop
ret
add
insl
pop
and
lret
dec
pop
xor
testl
pop
cli
mov
fstps
pop
pusha
rcrb
mov
nop
out
das
lods
clc
mov
test
add
shll
pop
mov
xlat
mov
xor
xor
repz
cli
cmpsb
mov
mov
inc
cli
inc
movsl
jnp
and
pop
cmp
fdivrs
inc
hlt
cli
ljmp
jae
sbb
or
pop
sbb
push
mov
xchg
jmp
push
sub
sbb
ljmp
shll
scas
xchg
inc
xor
xor
xchg
divb
cmp
dec
je
mov
mov
pop
sub
jbe
rcrl
insb
sbb
pop
inc
lods
mov
mov
push
add
shll
mov
cmpsl
pop
and
enter
out
into
sub
dec
fstpt
mov
addr16
xchg
jle,pn
jmp
rclb
and
push
sub
fldenv
scas
jg
cmp
jbe
pop
sbb
dec
int
adc
dec
pushf
lret
mov
push
xchg
mov
add
cmp
sbb
shrb
and
mov
mov
inc
lcall
ret
bound
adc
test
or
jnp
add
push
mov
xor
jle
sub
push
jge
js
mov
lret
fimull
push
or
dec
jne
xchg
sub
jmp
jmp
sar
mov
mov
push
add
std
arpl
into
cmp
jne
cs
and
lods
jmp
pop
lds
inc
ljmp
pop
in
mov
fcoms
sbb
jmp
push
mov
fildl
sub
jae
shl
mov
sti
outsb
movsb
xchg
pop
mov
rep
sbb
mov
xchg
decl
push
in
xchg
pop
pop
mov
mov
pushf
jmp
sub
xor
cmp
cld
pop
cli
cmp
imul
mov
add
and
mov
stos
fnsetpm(287
pop
dec
mov
bnd
pop
mov
or
jl
mov
ret
je
sarb
or
sar
ror
test
push
pop
pop
jne
lea
mov
jge
ret
fistps
xchg
inc
cltd
mov
lcall
cmp
out
in
fimuls
into
sbb
pushf
sub
cmp
xchg
xchg
fdivp
dec
fsubrs
rorl
lea
cmpsb
or
and
lret
stos
sub
je
pop
sbb
test
push
js
lahf
shr
mov
push
pop
outsb
adc
faddl
lock
sbb
mov
test
lahf
ret
sbb
add
mov
aad
cltd
jge
mov
xor
inc
inc
in
add
inc
lods
and
jmp
mov
sub
dec
jecxz
xor
es
aas
and
repnz
call
pop
js
mov
dec
shl
add
hlt
dec
or
dec
fdivl
or
jmp
jecxz
push
jne
push
dec
mov
rcrb
leave
roll
aad
std
test
fdivs
outsb
mov
mov
je
mov
or
je
mov
inc
je
mov
dec
jnp
add
hlt
dec
jl
mov
mov
loope
pop
cmp
jbe
mov
popa
mov
xchg
adc
fdivrl
ds
pop
mov
push
mov
loopne
mov
inc
iret
dec
mov
pusha
fwait
dec
clc
xchg
ret
xor
and
cs
int3
lahf
ds
bound
scas
stos
dec
sbb
daa
sub
cmc
test
inc
les
fdivrs
push
cld
xchg
lock
mov
push
and
jg
in
mov
mov
dec
test
dec
in
test
push
add
sub
xchg
push
mov
jne
pusha
mov
fdivrs
fmull
sbb
clc
dec
cld
lea
insb
fildl
add
cs
pop
rcr
cmp
jl
jmp
add
insl
add
cltd
loope
addps
push
lea
sti
and
sub
xchg
outsl
push
lea
cmpl
xor
stos
or
cli
pop
orb
pop
jge
mov
neg
jmp
or
add
scas
enter
xchg
push
mov
mov
fs
pop
sub
mov
inc
dec
shr
leave
jg
dec
mov
adc
add
pop
pop
pop
aam
ja
push
or
mov
mov
mov
cli
mov
mov
mov
or
arpl
push
add
add
loope
mov
add
mov
cs
daa
inc
cmp
add
rorb
ja
sar
rorb
push
sub
aas
jae
mov
sti
lea
stos
or
sub
mov
push
add
ja
mov
mov
add
pop
pop
mov
scas
push
or
rorl
jmp
enter
xor
push
pushf
push
lahf
dec
dec
insb
jp
cld
inc
dec
inc
dec
lods
or
xor
jge
divb
mov
std
mov
ljmp
ret
dec
aam
adc
jg
cmp
jl
pop
sbb
push
push
stos
je,pn
mov
stos
neg
mov
rep
jmp
inc
inc
mov
loop
movlps
les
stos
pop
pop
inc
clc
dec
test
gs
push
add
push
mov
repnz
fildll
sbb
sub
mov
add
leave
mov
mov
mov
cmpsb
lret
mov
adc
mov
mov
sub
aaa
cmp
scas
je
mov
dec
mov
repz
inc
lods
push
rcrl
jne
sbb
mov
and
push
sti
add
jecxz
js
je
inc
jne
pop
mov
ret
xchg
fnstsw
cmp
repnz
or
repnz
or
cmp
lret
rclb
adc
pushf
fwait
imul
inc
je
push
push
cmp
or
mov
or
push
notb
add
or
popf
pop
pop
inc
loop
push
mov
test
sub
mov
bnd
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
fstps
loopne
add
sub
dec
dec
cmp
mov
out
xchg
pop
jmp
std
je
inc
das
repnz
cmp
stos
or
inc
push
cli
adc
or
xor
aaa
inc
ja
inc
inc
imul
je,pn
imul
test
enter
cmp
xor
inc
fabs
push
jg
sarl
and
scas
insb
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
das
add
push
cmp
xor
stos
xchg
add
jns
mov
nop
sub
jge
pushf
mov
cmp
jae
cmpb
jb
movb
js
decb
and
cmp
jmp
xor
xor
jmp
add
cmp
inc
xor
push
mov
push
shr
mov
add
dec
dec
clc
xchg
out
xor
dec
inc
adc
jp
dec
loopne
call
rorl
je
push
pop
lds
push
add
or
or
lods
adc
jl
pushl
inc
sub
mov
loopne
jae
dec
add
xchg
rolb
mov
fildll
cli
cld
inc
xor
mov
pop
xchg
fwait
mov
das
rclb
pushf
and
jne
and
sub
cmp
pop
in
fsubl
inc
or
ljmp
enter
push
add
divl
pop
jmp
sbb
push
je
mov
iret
es
mov
add
sub
inc
ret
outsl
jns
fwait
sarl
loop
jl
fldz
cmpsb
xchg
mov
ds
lods
lods
out
aaa
or
icebp
daa
mov
loope
pusha
jne
inc
sbb
dec
and
fistpll
out
fldl
sub
pop
add
jg
jne
mov
push
xor
sahf
add
push
cld
inc
jbe
mov
adc
aas
jmp
fstpt
pop
dec
pop
add
test
mov
push
test
insl
js
js
and
push
int3
out
sbb
and
add
jae
fimull
cmpsb
fiaddl
jmp
aaa
mov
adc
or
es
jnp
or
push
inc
imul
push
cmp
aaa
cmp
andl
stos
pop
outsl
sbb
pcmpeqb
add
and
inc
adc
push
push
rcl
mov
xor
fistps
jne
lods
in
add
clc
push
mov
dec
in
insl
mov
mov
out
js
cld
and
cmp
mov
and
ss
or
ja
mov
insb
aam
xchg
cmp
ficoml
lock
push
sbb
fwait
scas
push
repnz
mov
in
cmpsb
xchg
xor
cmp
inc
or
sub
mov
in
adc
mov
xor
push
adc
test
mov
sbb
lea
or
sarl
dec
or
cmp
inc
stc
arpl
push
jae
inc
jecxz
inc
cmp
sub
add
pop
cmpsl
cmc
imul
adc
call
or
add
xor
cld
adc
fstpl
fwait
add
andb
pop
pop
mov
movsb
dec
fistps
jno
adc
addr16
orb
or
lcall
push
jbe
js
cmp
out
sti
add
bnd
insb
pushl
add
ljmp
mov
dec
mov
pop
mov
mov
push
cmp
and
mov
outsb
fld1
add
pop
mov
add
and
fldenv
mov
or
mov
mov
popa
shll
stos
pop
lret
shl
idiv
add
in
cmp
movsb
jg
add
lea
inc
pop
cmpl
jb
ja
and
jb
or
jb
add
fistps
cmp
ja
adc
fisttps
inc
enter
add
inc
dec
jne
sub
roll
cltd
idiv
imul
loope
shl
add
sub
mov
stc
add
pusha
ret
or
test
jne
inc
std
std
cwtl
mov
clc
mov
mov
inc
add
pop
pop
pop
inc
inc
movsl
push
mov
popa
adc
and
dec
popa
test
leave
jg
fdivrl
orl
ret
push
mov
lcall
test
cmp
jl
sbb
add
fistps
add
xchg
mov
ss
lock
or
dec
lock
imul
mov
push
sub
repnz
pop
xchg
cs
loopne
cmp
sub
or
or
push
ret
mov
rclb
enter
fst
add
insb
pusha
loop
cmp
jb
adc
ljmp
pop
sbb
push
push
dec
push
hlt
and
fwait
lea
stc
sbb
mov
mov
pop
jecxz
sbb
int3
or
scas
cmp
pop
mov
rcrl
and
add
cmp
push
and
sub
sub
repnz
mov
adc
lock
sbb
sbb
inc
xchg
sbb
mov
adc
ljmp
pop
shrb
mov
cmp
mov
sbb
jle
mov
and
imull
dec
jne
or
add
mulb
divb
adc
xor
xchg
add
add
inc
sub
in
lock
or
push
pop
add
add
testl
adc
inc
rcl
addb
or
sub
cmp
je
push
inc
call
inc
hlt
out
push
cmpb
sub
mov
push
lea
in
scas
sti
jbe
push
lock
repnz
or
movb
jb
test
outsl
jecxz
push
in
lret
out
stc
jge
call
mov
sahf
jecxz
outsl
call
ljmp
es
pop
stos
mov
cmp
inc
pusha
adc
in
out
repnz
sub
or
xor
std
cmp
push
stos
mov
adc
dec
sub
or
inc
pusha
mov
or
dec
push
inc
es
or
jge
cmp
mov
pusha
mov
sti
std
adc
cmp
push
sub
adc
mov
dec
jo
jns
add
lock
gs
add
out
arpl
mov
ret
loope
push
mov
inc
cmp
imul
xchg
in
outsl
ret
in
sbb
in
ret
and
dec
jbe
or
bswap
insb
lods
jmp
sbb
add
jmp
xor
jle
stos
jecxz
push
inc
cmpb
jne
push
orl
pusha
and
out
lahf
out
xchg
out
jns
add
add
add
push
or
fadds
movsb
sub
jp
add
cmp
push
jo
add
sub
incl
lcall
mov
int3
jp
push
das
mov
inc
rorb
insl
cmc
adc
lock
and
andb
jae
mov
pop
cmp
jne
mov
xor
xchg
loopne
jl
fisubs
push
andb
not
mov
pushf
or
or
or
imul
add
fstp
fcoms
or
or
or
scas
js
subb
push
pop
test
xchg
out
xor
scas
xchg
mov
repz
pop
int3
mov
mov
outsl
aam
and
rcrb
pop
pop
sbb
aam
push
and
lret
out
mov
cltd
cltd
sbb
pop
bound
std
inc
mov
andb
push
lea
and
jl
lcall
shrb
cmp
pop
jo
ret
sbb
xor
lock
test
sub
adcl
popa
test
outsb
fucomi
dec
je
add
jmp
out
aad
xor
popf
sub
mov
push
dec
and
and
push
daa
pushf
jl
imul
popa
and
pop
lods
loope
les
or
mov
loope
lock
and
add
adc
out
shll
je
or
push
jmp
sub
cmp
pop
je
jmp
cmpb
dec
mov
jle
cltd
test
sbb
add
stc
inc
adc
cmpsb
lahf
add
rolb
jmp
cmp
xor
mov
stos
stos
inc
lods
test
popa
mov
test
ret
dec
push
test
cmp
movsb
test
adc
or
or
jle
and
push
dec
bound
pop
sub
inc
inc
call
js
push
add
jb
test
add
dec
es
stos
loope
mov
mov
stos
mov
lcall
addl
daa
jns
cltd
nop
lret
add
add
loopne
push
ja
jns
adc
pushf
jns
mov
and
dec
es
outsl
push
cs
cmc
xchg
lea
lret
sbbb
add
lock
popa
sti
out
ret
mov
adc
or
call
or
lods
into
jge
xor
popf
add
inc
fisubs
push
dec
enter
je
inc
cwtl
jmp
push
sbb
aas
sbb
push
test
sahf
jmp
incl
add
sub
aam
mov
sub
scas
sbb
or
pop
push
jmp
mov
xchg
adc
cli
clc
inc
mov
or
decb
cmovno
push
dec
mov
adc
add
inc
sub
jno
ja
insl
add
rorb
jo
ret
jne
or
mov
imul
lea
mov
stos
lahf
or
ffree
les
xchg
mov
and
sub
jg
hlt
rcrb
je
mov
xor
roll
jae
call
sbb
fwait
mov
cmp
js
lcall
pop
add
lock
pop
inc
lcall
add
sarb
adc
sub
jae
and
jo
clc
add
popf
adc
ret
add
mov
push
movsb
sti
ret
fidivs
popa
or
in
sbb
jecxz
mov
xor
ljmp
xor
sbb
sub
mov
shll
test
lock
dec
sub
push
mov
out
mov
fwait
pop
jl
pop
dec
loopw
in
cmp
jne
incl
lods
pop
arpl
fbstp
mov
sub
and
sub
je
dec
je
sub
fsincos
pop
push
sub
je
jmp
mov
jmp
push
push
push
dec
jbe
icebp
push
jbe
push
inc
mov
jle
fadd
dec
shlb
add
inc
ljmp
xor
gs
add
cmp
add
pop
call
cmpsl
call
cmp
jecxz
or
outsb
mov
mov
lock
sbb
adc
ds
inc
mov
jmp
xchg
adc
pop
jne
mov
xlat
jne
jg
and
fcoml
jne
cmp
jg
lret
movsb
cli
pop
adc
shlb
cltd
xor
sub
add
jg
xchg
test
add
add
js
insb
stos
stos
out
add
adc
pop
dec
push
cmovs
gs
jno
add
scas
fmuls
fadds
xor
fsub
in
adc
cs
xchg
mov
out
mov
loopne
test
xchg
xchg
test
add
cmpsb
xor
out
push
adcl
addr16
jmp
icebp
cmpsb
jl
mov
add
and
int
sti
dec
rcrb
mov
cmpsb
les
mov
jge
lods
popf
ret
dec
jne
int3
lock
adc
hlt
lods
movsb
fcom
test
stc
sbb
mov
pop
repnz
sbb
add
push
dec
and
add
lock
fwait
push
pop
shll
imulb
jb
sub
inc
and
cmp
push
mov
and
in
call
sbb
inc
mov
ss
repnz
sbb
nop
out
jmp
std
les
int3
out
cmpsl
sbb
mov
jo
jge
add
fildll
cs
flds
xchg
imul
fmull
lock
jg
aaa
add
cmpb
jle
and
fs
jne
fadds
pop
ss
add
or
xor
jp
xchg
mov
cmp
xchg
mov
mov
mov
int3
fwait
test
cmpsb
push
mov
jne
cmpsb
and
sarl
xchg
imul
add
daa
fcmovnb
imul
add
fsubrl
fidivrs
inc
lcall
das
pop
or
pusha
xor
or
push
out
dec
jb
push
mov
add
and
in
jno
cmpsb
mov
fs
jo
lret
cs
pop
jge
repnz
fildl
mov
jge
dec
frstor
mov
xorb
push
call
lods
add
pop
sub
or
inc
adc
ljmp
inc
add
data16
xor
or
fdivrs
in
or
orl
sbb
add
pop
inc
or
xor
inc
add
and
test
cmp
xor
push
inc
ds
inc
ja
jne
packssdw
sbb
mov
or
add
push
or
add
adc
dec
push
mov
aaa
inc
push
sbb
add
push
scas
sbb
pusha
xor
into
inc
lods
mov
cmpsl
je
ret
xchg
or
int
pop
xor
stos
mov
push
call
inc
sbb
testb
pop
add
sbb
outsl
push
cmp
ret
jne
mov
imul
daa
fnstsw
sbb
fcmovne
pop
jb
sbb
fwait
jmp
sbb
mov
lret
adc
fisttpll
adc
out
les
push
xchg
dec
or
ficoml
push
arpl
in
mov
jmp
inc
mov
sub
jb
or
je
or
xchg
jmp
add
xor
cltd
pop
clc
mov
ljmp
lret
jmp
or
leave
pop
mov
cltd
pop
jnp
loope
mov
addl
dec
in
mov
add
adc
leave
movsl
lods
in
loope
sbb
dec
push
mov
jecxz
push
inc
push
adc
jl
sbb
ja
test
mov
nop
or
lcall
mov
lods
sbb
or
or
cmp
lock
inc
inc
movl
adc
cld
inc
lock
in
mov
inc
repnz
or
push
sub
pop
add
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
mov
imul
jbe
add
xor
push
jl
je
xchg
jne
lock
adc
adc
popf
mov
add
mov
cmp
rclb
insb
incl
mov
inc
jl
mov
mov
insb
sar
data16
out
in
xadd
bound
mov
es
or
popa
or
fcmovu
jbe
loopne
sar
and
add
subl
loope
les
sbb
pop
xchg
outsl
ret
hlt
add
fsubrs
push
add
jno
mov
and
out
xor
and
push
mov
dec
inc
push
jecxz
mov
clc
nop
fs
out
ret
or
insl
mov
inc
add
sub
mov
jmp
sbb
fwait
mov
sbb
je
scas
sbb
add
hlt
jmp
notl
mov
orb
sbb
test
mov
pop
jg
inc
jg
lods
add
les
push
jmp
insl
cmovp
shll
jmp
mov
jmp
iret
adc
ret
add
push
mov
sbb
jmp
and
xor
jmp
in
push
push
push
leave
in
jle
pop
mov
orb
cmpb
cmp
add
add
sub
fsubl
daa
and
jecxz
cmp
push
sub
pop
test
cmp
lea
test
mov
popf
pop
adc
add
and
cmp
test
dec
cmp
and
imul
aaa
lahf
xor
cmp
sub
nop
cmpsb
dec
mov
xor
xor
ja
data16
xchg
test
les
mov
sub
imulb
in
mov
fidivrl
fsubrs
push
or
dec
not
pop
mov
push
jle
xchg
cld
dec
fadds
and
dec
add
popa
rorb
mov
fwait
daa
test
sbb
lock
test
lahf
dec
cmp
mov
sub
popf
sarb
mov
xor
push
lea
int3
xchg
push
out
stos
ja
movsb
pcmpgtd
je
out
or
cs
or
cmp
pop
mov
or
inc
loope
jo
jmp
je
adc
inc
and
xor
jae
dec
mov
pop
push
cld
hlt
pushf
pop
lock
sub
cwtl
loope
test
inc
xor
daa
sbb
pop
push
push
mov
arpl
sub
bound
addr16
cwtl
adc
das
in
sbb
xchg
xor
insb
pop
icebp
sub
fildl
or
sub
pop
repnz
push
dec
test
adc
or
add
les
popa
les
sar
imul
sub
mov
ja
add
jnp
and
ret
sahf
cmc
mov
inc
mov
add
inc
or
pop
cmpb
jge
lahf
outsl
sub
pushf
sbb
or
test
xchg
in
sub
xchg
dec
xlat
xor
gs
pop
scas
int3
lods
or
cmp
jbe
jne
sbb
xor
mov
jmp
into
es
or
cwtl
inc
fscale
or
pop
lods
mov
pop
xchg
sbb
shll
aas
xlat
pop
push
push
rcl
lret
adc
sub
ficoms
jnp
rorb
pushf
and
lea
adc
jb
jbe
and
mov
mov
jmp
jmp
loopne
icebp
sub
cld
add
inc
mov
mov
mov
aad
mov
lds
insb
ficompl
inc
or
jge
clc
js
insl
jne
in
push
loopne
xchg
dec
loopne
ret
lea
xor
add
and
int3
mov
insl
add
push
mov
push
adc
xor
sbb
les
movsb
rclb
push
xchg
pop
enter
push
push
cmp
je
jmp
push
cs
aas
xor
inc
xor
lcall
and
add
push
imul
mov
push
xchg
inc
adc
mov
push
add
aaa
nop
cmpsb
adc
pop
lcall
in
insl
iret
lret
mov
es
adc
je
sub
inc
faddl
sbb
xor
lock
inc
or
or
stos
xchg
adc
test
jne
inc
ret
in
movsl
add
int3
xchg
fs
and
pop
dec
decb
push
add
jl
mov
shlb
jl
cs
push
push
enter
shrb
mov
cmp
clc
mov
outsb
and
xchg
out
roll
sub
stc
mov
mov
int
xchg
add
sbb
nop
rcl
adc
cmpb
cltd
or
cmp
int3
aad
cmp
sbb
out
mov
gs
int3
cld
std
rolb
ss
ljmp
jae
jae
inc
loopne
fdivrl
mov
xor
in
inc
data16
hlt
xor
lock
cmp
shl
xchg
jnp
adc
test
push
push
jp
cmp
mov
push
xchg
mov
and
outsl
scas
mov
mov
ljmp
inc
adc
dec
andb
jp
fwait
add
cmp
lods
int3
xor
cmp
bound
mov
leave
inc
adc
push
inc
inc
sub
mov
mov
cwtl
push
sbb
movb
inc
pusha
imul
es
in
pop
inc
pushf
pushf
adc
dec
orl
aaa
or
rorl
xor
das
xchg
ret
push
stc
and
inc
adc
inc
inc
cltd
push
push
daa
push
insb
incl
cmp
mov
loop
adc
push
lahf
jge
mov
shlb
sbb
adc
jmp
jmp
mov
cmpl
jnp
mov
jl
pcmpeqw
cmp
cmpsl
jle
mov
fucomip
shl
or
es
push
rolb
sub
adc
jne
pop
aam
clc
xor
jae
popf
arpl
mov
xchg
movsb
mov
cmp
pop
sbb
cmp
xor
popa
and
stos
sub
mov
adc
xchg
ret
or
fstpt
iret
sub
div
adc
push
adc
mov
cmpb
adc
xchg
pusha
pusha
adc
add
xchg
aad
or
scas
xchg
mov
add
adc
aas
mov
sti
xchg
or
sub
and
loope
add
jns
dec
or
inc
data16
add
add
xchg
add
add
aad
adc
add
je
xor
jo
cmp
leave
cmp
rcrb
daa
inc
shll
mov
or
test
in
mov
inc
pop
jg
mov
scas
lock
jbe
das
adc
jl
mov
and
xor
inc
insb
or
inc
inc
inc
jge
shlb
sub
jg
lock
mov
mov
lock
ljmp
lods
fstpt
jl
jne
sbb
mov
xor
push
jmp
nop
dec
or
mov
mov
push
pop
jmp
insb
or
fildll
push
in
push
push
mov
dec
cmp
lock
push
mov
jg
xchg
or
or
push
fwait
es
jns
es
xor
mov
jge
pop
mov
fdivrs
scas
pop
shrb
sub
aaa
push
daa
ja
movl
xor
add
push
shrl
shll
mov
and
xor
adc
int3
and
ja
pop
aam
mov
adc
ljmp
test
adc
nop
addr16
jnp
push
adc
and
dec
jno
and
mov
xchg
scas
imul
add
inc
or
mov
insl
das
cmp
std
push
cs
xor
shrb
add
jbe
pop
in
adc
jmp
xchg
push
outsl
sbb
sub
andb
aas
add
mov
sahf
jge
hlt
inc
ja
add
fs
inc
cmp
addb
jl
js
jge
xchg
or
cmp
notl
adc
addb
xor
lock
push
add
scas
or
iret
clc
sub
aaa
inc
inc
add
dec
in
or
sub
test
cmp
jbe
iret
or
bound
add
inc
mov
movsl
add
adc
pusha
repnz
shrl
xchg
popa
push
xor
stos
stos
test
je
lcall
and
jne
pop
hlt
loopne
xchg
jl
aad
pop
enter
jae
and
outsb
jmp
in
pop
clc
insl
fmul
pop
aad
loope
dec
lods
mov
inc
or
push
mov
fwait
cld
call
fidivs
push
mov
sub
jb
inc
mov
cs
push
cld
inc
sti
stos
sbb
lret
jne
mov
out
or
sub
or
pop
dec
ret
xlat
clc
pop
ja
pop
or
inc
scas
je
sbb
out
push
movl
dec
add
jns
mov
mov
dec
data16
enter
outsl
push
faddl
mov
or
arpl
mov
mov
std
add
test
pusha
lds
in
or
mov
iret
push
cmp
mov
or
mov
in
ret
mov
popa
mov
out
push
mov
inc
inc
cmp
pop
jne
lea
mov
sub
loope
movsl
clc
imul
pop
xchg
jnp
rorl
adc
inc
push
dec
jne
jmp
push
loop
fsubrs
cmp
and
pop
arpl
push
mov
sub
dec
jne
push
enter
jne
je
test
add
ret
push
xor
xchg
or
outsb
sbb
pop
add
jmp
sbb
bound
fcompl
mov
mov
movsb
inc
call
sbb
mov
repnz
jb
scas
cmp
push
mov
jb
in
insl
das
xchg
out
leave
mov
pop
push
cwtl
xor
fcoml
mov
test
mov
and
fcomp
mov
jge
cmp
jle
fidivl
leave
add
sub
mov
cmp
xchg
sbb
int3
mov
and
add
or
xor
fidivl
in
test
dec
sahf
mov
aas
ret
adc
ds
shl
inc
clc
mov
add
push
cld
push
jbe
push
hlt
mov
das
adc
test
je
push
add
into
fld
mov
sbb
jg
and
das
fs
outsl
scas
insl
add
fs
mov
adc
insl
pop
lods
xlat
mov
inc
push
or
dec
pop
mov
adc
int3
pop
jbe
jp
push
cmp
out
in
pop
mov
shlb
jne
imul
mov
xchg
fcomi
inc
or
je
xchg
xchg
or
lea
jmp
fisubrl
fisttpll
daa
mov
nop
inc
jecxz
lret
outsb
xchg
mov
fwait
hlt
xchg
jge
adcb
fsubrs
push
incl
pop
xor
dec
add
sbb
outsb
test
pop
dec
add
sahf
add
pop
clc
sub
test
test
xorl
and
testl
fsubrp
pop
mov
fcompl
jae
mov
cmp
leave
cld
push
in
icebp
mov
dec
es
in
push
fstps
and
repz
add
stos
adc
dec
pop
cltd
test
or
dec
in
lods
inc
fcoml
filds
lret
lods
mov
pop
outsl
mov
sbb
out
and
sbb
inc
repz
xlat
sbb
enter
adc
mov
push
insl
imul
xor
or
mov
sahf
lock
sub
in
imul
gs
and
mov
inc
and
cmp
xchg
lock
inc
in
pop
dec
ret
xchg
sub
add
cmp
cmpsl
mov
lock
mov
push
or
in
in
clc
mov
sbb
inc
cmp
jne
cli
and
test
dec
test
jle
sub
pusha
mov
nop
jo
fistl
inc
jmp
es
lret
mov
sbb
sbb
int
dec
pusha
mov
in
mov
add
add
ljmp
out
loopne
push
into
or
adc
push
fstps
pop
mov
inc
or
mov
inc
test
xor
add
cmpsl
test
lds
xchg
jb
mov
mov
push
jg
pop
and
inc
or
add
pusha
xlat
test
push
test
adc
dec
lods
or
das
pop
hlt
add
lock
sub
movl
sar
add
loopne
outsb
loope
in
or
adc
sbb
jbe
jb
and
pop
dec
addb
imul
iret
dec
sahf
sub
dec
or
mov
inc
pop
pop
or
adc
cmp
out
mov
mov
pop
enter
mov
sbb
pop
sbb
adc
pop
adc
clc
mov
jnp
or
and
jl
iret
enter
add
sub
inc
stc
int
test
loopne
seta
mov
lea
into
loope
cld
int3
lock
adc
xor
sbb
data16
in
aam
orb
das
int
cld
mov
xchg
sub
lds
xchg
ret
incl
adc
sub
fnstenv
testb
inc
decl
cmpl
pop
imul
add
roll
adc
ja
sbb
clc
pop
mov
orb
inc
or
add
mov
inc
cmp
mov
rolb
xchg
dec
movsb
dec
inc
cld
jo
je
mov
pop
fs
push
ja
dec
or
dec
jg
xchg
out
xor
int
enter
or
jmp
or
sbb
adc
pushf
mov
xor
cmp
xor
cmpsl
mov
add
or
and
inc
or
loope
or
xor
enter
cmp
adc
fcmovnbe
sbb
jne
cmp
jns
mov
loope
push
fnstcw
andb
jle
mov
xor
dec
loop
jge
and
insl
rclb
daa
jmp
xor
popf
arpl
push
roll
mov
ret
int3
mov
lahf
pop
pop
fmull
lret
int
repz
rolb
faddl
cmp
adc
insl
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
outsb
jo
sahf
out
cwtl
pop
dec
nop
movsb
mov
subb
push
adc
cmp
push
jae
imul
jle
lods
jnp
inc
ds
scas
inc
push
xor
mov
mov
jl
mov
adc
sbb
in
repnz
mov
adc
or
or
add
leave
jnp
inc
mov
xor
fldl
inc
clc
push
jo
hlt
mov
inc
lock
in
inc
mov
call
add
lods
inc
faddl
mov
out
aam
shrb
add
out
popf
int3
push
mov
sbb
repnz
mov
test
cs
mov
cmpsl
xlat
mov
cwtl
out
out
fidivs
out
test
mov
movsb
pop
test
leave
xor
mov
enter
jbe
leave
xor
popf
push
mov
lahf
mov
lock
fiaddl
push
sarl
int3
mov
mov
dec
outsl
sbb
inc
and
and
fnstsw
cmp
adc
xchg
add
adc
add
int3
cmp
dec
xor
orb
jge
sub
and
add
push
or
in
addb
and
xchg
inc
push
jb
nop
test
xor
adc
xchg
les
mov
enter
out
adc
shlb
and
shl
daa
jecxz
jg
xor
jecxz
jl
cmp
addb
push
sub
jl
pop
pop
or
in
clc
or
xchg
out
xchg
push
or
js
push
addr16
mov
jge
jge
enter
add
test
aaa
ss
adc
imul
ret
dec
rorb
fcoms
iret
xchg
push
fs
call
adc
leave
cmp
xor
inc
mov
shll
sbb
jg
call
addr16
ss
adcl
test
pop
jne
adc
xchg
dec
enter
and
inc
jmp
nop
or
pop
leave
xchg
and
es
clc
jecxz
ljmp
clc
lea
jge
pop
jg
dec
push
cmc
sbb
adc
mov
cmp
clc
jo
sub
xlat
ret
dec
addl
jbe
add
jns
adc
cld
jb
and
orb
jecxz
ljmp
or
add
adc
movsb
mov
and
sbb
adc
jmp
or
or
cltd
clc
add
out
inc
xchg
adc
adc
adc
pop
adcb
push
sbbb
mov
cld
sbb
movsb
filds
std
push
orl
repnz
ret
or
in
fldl
mov
add
mov
aam
mov
test
test
lret
sub
fs
mov
cltd
fs
inc
mov
xchg
dec
push
rcrb
dec
les
xchg
dec
es
push
lret
pushf
js
out
xchg
lret
fcoms
xchg
lret
nop
faddl
gs
mov
lret
out
jmp
out
xchg
shr
inc
ljmp
mov
hlt
lea
out
jmp
out
clc
mov
enter
je
push
into
dec
pusha
pop
inc
push
inc
push
jns
pop
daa
dec
add
cld
jge
repnz
je
fs
jne
das
dec
jne
mov
pop
mov
imul
in
and
add
jb
insl
jo
repnz
xor
jb
insl
push
je
pop
push
cmp
sub
sahf
and
bound
popf
sbb
jae
pop
inc
jns
add
pop
outsl
xchg
xchg
out
cld
push
xchg
and
in
cld
add
ljmp
gs
add
and
pop
add
adc
inc
fistpll
push
sbbb
out
cltd
jnp
enter
mov
adc
push
mov
sub
mov
mov
add
pop
inc
push
pop
push
fs
cwtl
sarl
js
pusha
or
jns
lret
iret
int3
shrb
inc
cld
pop
lods
xchg
xchg
lock
adc
dec
dec
inc
mov
nop
inc
testb
adc
test
or
jae
cmpsb
clc
cmc
das
jo
adc
adc
add
jo
or
test
mov
and
sbb
nop
add
xchg
inc
push
in
hlt
hlt
hlt
int3
out
faddp
int3
int
fiaddl
in
cmpsb
jg
sahf
mov
add
lret
mov
jg
adc
aaa
stc
push
mov
js
push
icebp
pop
test
enter
out
sti
cmpsb
inc
dec
test
jbe
gs
adc
cmp
push
xor
adc
or
jbe
imul
pop
inc
push
push
sub
pop
sub
xchg
xchg
repnz
adcl
mov
mov
jg
nop
push
sbb
adc
pop
mov
push
hlt
hlt
ficoms
or
and
sbb
repz
mov
push
mov
pop
mov
jb
loope
arpl
and
push
and
xchg
outsb
adc
js
push
and
in
test
test
dec
loope
and
push
iret
sbb
mov
in
inc
jb
add
daa
xchg
ret
iret
push
cmc
push
cmc
fiadds
insl
jo
sbbb
mov
inc
sub
nop
adc
and
roll
push
outsb
divb
pop
mov
movsl
int
ds
mov
push
sub
or
fadd
out
sbb
divb
outsl
bound
inc
fs
mov
repnz
pop
inc
xor
in
idivb
push
mov
jmp
in
adc
test
jno
cmp
dec
outsb
es
dec
push
jns
es
mov
popf
nop
lock
cli
in
add
pusha
sbb
testl
loopne
sub
cmp
test
clc
in
pushf
add
clc
test
inc
push
and
mov
add
jg
rclb
add
fwait
addl
jbe
clc
sub
or
pop
sbb
ljmp
movl
dec
push
sbb
fs
push
nop
or
imul
add
enter
cwtl
adc
mov
inc
jo
xchg
iret
pop
inc
dec
pop
out
mov
mov
pop
dec
mov
mov
repz
ds
lock
hlt
dec
ds
in
mov
cmc
xchg
cmp
cld
call
insb
adc
popl
inc
or
xor
sarb
jae
xor
enter
mov
ja
ror
int3
or
imul
jae
fwait
out
add
mov
movb
nop
sbbl
mov
or
out
inc
sub
fdivs
call
int3
sub
cltd
repnz
push
add
push
pusha
roll
in
push
aad
jmp
adc
jmp
test
addr16
orb
adc
std
adc
or
and
sub
cmp
xchg
mov
jmp
inc
in
and
jg
push
ja
mov
jne
enter
xlat
xor
xchg
inc
cmpb
cmp
cmp
mov
push
popa
pop
out
shlb
push
insl
cmp
roll
and
test
mov
add
loop
xchg
orl
imul
lahf
ret
xchg
daa
push
jge
idivl
incl
ja
popf
insb
jnp
and
pushf
xchg
jne
mov
mov
pushf
xchg
out
lods
mov
or
les
sbbb
ljmp
pop
in
pop
mov
call
pop
test
pop
or
in
ret
pop
ret
outsb
push
add
pop
and
add
pandn
jne
les
je
dec
orb
xchg
lea
and
movzwl
push
lcall
rcrl
imul
lea
or
or
inc
add
aas
cmp
clc
fistpl
out
mov
adcl
fs
dec
inc
das
sahf
and
sbb
lea
push
pop
in
repz
dec
jnp
dec
pop
pusha
out
sarb
subb
in
test
data16
fsubl
fsts
jl
repnz
jge
mov
cld
xlat
xor
ja
sbb
adc
or
loopne
loopne
bound
jne
jmp
mov
inc
sub
or
add
jmp
xor
div
and
fsubr
and
movsl
hlt
inc
cmpsl
add
imul
or
push
add
and
or
pop
jb
mov
push
add
shll
je
ret
aas
jns
and
clc
push
inc
es
fimull
call
sub
push
push
pop
in
or
adc
push
inc
loopne
xor
enter
in
and
loopne
std
dec
and
or
xchg
cmpl
jae
adc
pop
or
push
dec
inc
test
and
shr
in
cmp
lds
and
in
push
mov
aad
sbb
xchg
sub
jmp
push
fstpt
out
cmpsl
cmpl
push
movsb
fiaddl
add
call
decl
push
xchg
cmpsl
sbb
adc
jns
pop
mov
mov
jbe
je
push
and
dec
incl
adc
cmp
je
add
sbb
ljmp
dec
add
and
repz
inc
out
js
sub
mov
inc
scas
sbb
in
mov
shrb
or
pop
adc
lock
lock
je
pop
jne
push
mov
insl
inc
fwait
inc
add
or
or
test
push
dec
or
cmp
aad
mov
outsl
cltd
int
inc
xchg
and
mov
orb
hlt
js
call
inc
movsb
push
add
movsl
pusha
out
push
mov
mov
repnz
add
sub
mov
sarb
or
adc
xchg
fnstenv
inc
cmp
sub
repz
gs
cwtl
outsb
xchg
out
imulb
inc
mov
and
lret
iret
jnp
push
in
std
or
inc
stos
or
mov
xor
fisttps
hlt
push
daa
mov
leave
and
xor
xor
frstor
or
clc
out
add
bnd
mov
insb
fidivl
push
ficompl
rolb
arpl
cmp
adc
jmp
and
enter
add
add
add
pop
ja
pop
dec
mov
push
js
push
jecxz
aam
aaa
and
loope
jl
sub
jmp
cld
xor
and
push
adc
insb
lret
je
inc
jmp
testb
jne
mov
imul
lcall
push
hlt
or
stos
sbb
sbb
aam
mov
pop
lock
inc
adc
sarl
rorl
pushf
sbb
dec
sbb
iret
mov
idivl
out
inc
or
fs
fisubl
and
insb
outsb
xchg
bound
mov
aas
jmp
imul
pusha
or
and
cmp
cmp
test
sub
add
enter
push
xor
in
inc
dec
xor
dec
js
push
sub
add
cmove
jb
lret
movhps
stc
push
adc
lods
icebp
push
push
mov
mov
push
cmp
into
test
jbe
jae
ret
sbb
ret
push
push
pop
add
pop
pop
add
add
sub
movsb
add
pop
hlt
mov
inc
push
lds
push
scas
or
repnz
xlat
sbb
rorl
push
sti
mov
sbb
or
imul
lock
lret
fstp
orb
cmp
adc
pop
push
ss
stc
bound
cmp
mov
add
sahf
out
sahf
adc
mov
repz
and
cmp
insl
pop
daa
in
decb
es
cmpb
mov
inc
cmpsl
sbb
xlat
pop
in
cmp
loopne
and
add
in
add
push
and
insb
ljmp
xor
adc
clc
frstor
xchg
sbb
sbb
and
jb
push
sbb
cmp
leave
pop
aas
cmc
and
shlb
pusha
nop
xchg
call
xchg
add
out
inc
xor
jp
add
lret
cmpl
hlt
divb
mov
add
add
adc
roll
dec
and
fwait
xchg
dec
insb
jmp
mov
sbb
sti
pop
or
das
ftst
fwait
inc
out
iret
inc
push
mov
clc
push
and
dec
jo
xor
cld
pop
setns
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
ret
sub
js
mov
mov
or
xchg
jp
add
pop
mov
cli
sarl
call
cmpsl
outsb
push
mov
mov
or
push
mov
mov
popa
xchg
push
or
mov
jmp
lret
adc
in
cmp
and
fimuls
pusha
das
inc
and
aaa
inc
push
jle
cs
cli
movsl
push
mov
push
add
je
sub
rcll
data16
pop
lods
or
xor
push
sbb
pop
adc
or
nop
mov
cmovno
arpl
aaa
or
repz
out
xchg
mov
shl
lahf
out
ds
cmp
or
push
insb
fiadds
jnp
or
jns
mov
push
pop
jg
call
imul
je
aas
sub
fwait
out
movswl
sbb
aam
xor
pushf
push
sar
cmp
pop
jnp
cwtl
loope
and
push
adc
push
push
stc
push
sbb
mov
and
shll
rol
mov
xor
enter
mov
xor
cwtl
je
dec
mov
adc
outsl
gs
idivl
test
push
push
inc
arpl
fisubl
lret
mov
push
pop
scas
or
cmp
repz
push
aas
bound
jmp
jb
in
add
sahf
out
mov
add
outsl
push
jno
pop
fldcw
fst
ds
and
push
inc
push
sub
and
mov
mov
pop
imul
sub
sbb
femms
xor
sbb
js
sbb
jb
aaa
and
xlat
mov
push
notl
and
jmp
dec
jmp
or
sbb
mov
addr16
jb
mov
add
jle
or
add
mov
rcll
xor
outsb
pop
or
mov
jmp
rcpps
sub
in
xsave
fadds
cmp
mov
out
and
sbb
fldt
jb
push
jo
pop
push
je
leave
sbbl
lret
adc
leave
add
arpl
loopne
fisttpll
adc
in
in
jo
clc
or
add
or
jnp
inc
adc
pop
push
and
xor
mov
jmp
jo
in
jp
xchg
out
in
mov
mov
sub
cmp
adc
adcb
pop
jmp
pusha
xchg
pop
add
adc
adcb
adc
adc
out
cmp
or
add
sub
loop
cmc
push
xadd
jns
adc
and
sbbl
inc
mov
and
dec
push
call
mov
adc
and
mov
adc
push
adc
sahf
in
flds
repz
add
mov
pop
adc
lahf
imul
mov
dec
xor
xlat
inc
inc
adc
test
stos
add
andb
adc
call
sbb
sbb
mov
mov
inc
xchg
add
and
fucomp
pop
push
bound
aaa
cltd
jne
stc
sub
shlb
sbb
int3
and
inc
pop
movl
mov
mov
and
push
adc
bound
lret
hlt
loope
mov
lock
sub
dec
pop
outsb
idivb
xchg
lea
cmp
or
imul
jmp
dec
call
addb
ss
xor
in
mov
pusha
jns
int3
xor
jae
jno
xchg
fldl
enter
xabort
sub
addr16
and
call
xor
subl
sbb
outsb
ficoml
xor
call
sbb
ja
adc
add
icebp
adc
test
enter
lret
sti
sahf
out
push
push
bound
out
fdivr
push
pop
lods
je
iret
repz
xor
cmp
repz
pop
outsl
or
movsb
clc
lock
adc
daa
push
dec
jb
push
cmp
ss
lds
mov
xor
or
xor
xchg
fisttpl
and
add
sub
push
rolb
mov
and
mov
and
push
or
push
add
cmp
pusha
test
sbb
adc
jl
xchg
and
xchg
mov
test
sbb
mov
int3
ljmp
pop
adc
aas
push
mov
repz
gs
xchg
push
fwait
sub
mov
xchg
arpl
inc
and
pop
movsb
sub
mov
push
movsl
jmp
and
mov
mov
pop
daa
adc
add
inc
out
cmp
jmp
loope
sbb
imul
inc
test
adc
fildll
jmpw
pop
lcall
scas
inc
mov
negb
and
jb
inc
adc
xor
testb
loope
xchg
mov
xchg
pop
movsl
dec
fadds
jg
add
addr16
sbb
nop
sub
mov
or
adc
xor
cmp
push
mov
jns
mov
sbb
orl
and
or
mov
or
popf
jns
rolb
das
add
jp
cmp
mov
push
cmp
iret
repz
jne
lahf
mov
inc
fnsetpm(287
jnp
sbb
sbb
sahf
call
adc
sub
push
sub
sbb
or
push
rcr
xchg
sbb
sbb
and
flds
or
inc
cmp
fstp
imul
and
mov
mul
sti
push
incl
pusha
dec
mov
inc
daa
add
mov
cli
xorl
rcll
jmp
das
sbb
add
seta
fistps
pop
hlt
repz
jns
add
push
sub
fstl
inc
jle
rolb
lea
iret
repz
movsl
mov
push
mov
int
sbb
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
inc
movb
add
rorb
aas
jmp
cmp
aam
je
cmpsb
xor
mov
mov
add
sub
neg
ret
push
jb
sbb
int
clc
push
add
data16
jmp
addr16
or
fstpl
dec
ds
mov
add
daa
aam
popf
rorl
loopne
rolb
mov
popa
mov
and
mov
pop
leave
stos
sbb
jge
xchg
push
add
test
sub
or
pop
loopne
inc
push
add
in
sub
push
push
out
sahf
out
xchg
jl
ret
and
fdivp
fsubl
daa
stc
push
and
cmp
push
jns
mov
xchg
dec
mov
clc
adc
add
inc
filds
adc
flds
add
imul
rorl
mov
adc
cmpsb
ffree
cmp
fildl
sub
pop
push
loopne
push
xor
std
inc
sub
insb
adc
inc
imul
pop
aaa
fcomps
mull
mov
adc
or
andb
sarl
mov
adc
and
and
jge
out
arpl
and
mov
adc
mov
push
fiaddl
add
repz
pop
es
loope
enter
sbb
add
sahf
xchg
test
and
sbb
inc
imul
inc
add
sub
sarb
daa
mov
outsl
popa
inc
sub
ds
adc
push
gs
pop
cmp
push
adc
aam
mov
sub
adc
jmp
push
or
mulb
fstpt
daa
lock
fldt
daa
cmp
bound
and
imul
adc
cs
mov
daa
push
push
push
jnp
movsl
and
stos
xor
fstp
aas
out
fs
fisttpl
sbbl
dec
mov
jnp
and
gs
and
fildll
sub
sub
lods
inc
xor
and
shlb
add
pop
add
adc
inc
into
loopne
aad
es
inc
push
pop
dec
sub
outsb
inc
jb
xor
aam
loopne
mov
fs
add
pusha
inc
mov
jecxz
adc
xlat
jl
sbb
xchg
adc
fcomip
hlt
push
and
inc
push
dec
insl
out
mov
push
lock
mov
jbe
pop
in
enter
daa
dec
push
enter
hlt
daa
scas
es
es
andl
push
ljmp
and
and
into
fdivp
je
sahf
xor
pop
dec
pop
pop
adc
iret
je
mov
add
pop
sbb
pop
fisttpl
dec
pop
jns
dec
dec
lahf
inc
adc
or
sub
lahf
push
mov
or
lods
lahf
sbb
sub
dec
adc
or
sub
mov
rorb
inc
mov
out
xchg
test
sub
pop
subl
scas
cmp
ret
inc
rcrl
pop
daa
ljmp
push
sub
mov
mov
outsl
push
adc
cmp
fsubrl
dec
leave
jns
dec
jns
push
test
sbb
and
pop
dec
pop
clc
pop
dec
adc
sub
sub
inc
or
repnz
in
xchg
and
push
in
and
dec
sub
scas
pusha
rolb
insl
iret
push
enter
push
fildll
dec
and
push
inc
jb
cmp
sub
sub
xchg
push
add
jge
sub
dec
addl
mov
push
cs
fs
cmp
leave
jbe
cwtl
test
das
mov
mov
roll
jl
out
out
push
or
and
enter
imul
lcall
jl
les
frstpm(287
mov
and
sbb
pop
out
sub
in
pop
sbb
mov
les
push
insl
mov
mov
xorl
push
inc
sbb
jae
nop
and
jecxz
inc
xchg
push
mov
pop
cld
inc
movsb
cmp
into
pop
pusha
dec
xor
and
imul
cmp
scas
lret
push
call
lock
and
inc
daa
fildl
and
movsb
sub
push
mov
ror
repnz
cmp
add
mov
cmp
mov
orl
lods
mov
xchg
pusha
xor
dec
pop
int3
inc
popa
test
add
push
or
orb
xchg
xchg
movb
lahf
outsl
nop
or
cmpl
addl
popf
push
mov
lods
mov
mov
lcall
movsb
clc
mov
add
xor
add
inc
fisubrl
ds
es
lock
or
add
in
test
addl
inc
and
or
sub
mov
dec
inc
inc
adc
adc
add
dec
xchg
add
add
cmp
xlat
jg
adcl
cmp
pusha
xchg
jno
xor
xchg
arpl
cmp
es
adc
cmp
sbbl
mov
dec
and
lods
in
cmp
or
and
nop
lds
adc
push
adc
mov
cmpb
or
xor
and
lret
mov
push
inc
mov
and
pusha
xor
xor
xor
sti
and
fwait
cmp
push
test
icebp
push
out
lcall
jnp
repz
pushf
mov
push
iret
jae
ds
ss
pop
and
daa
xor
jae
xor
pushf
sub
add
and
cs
cld
sarb
mov
fidivs
rcr
mov
jnp
xor
or
clc
mov
inc
aas
bound
cld
push
xchg
adc
in
xchg
imul
lock
sbb
add
sub
add
js
in
dec
cmp
mov
ds
and
xchg
into
push
or
loopne
xchg
jbe
rorl
pop
push
fsubl
xchg
jo
test
jae
test
aam
aaa
adc
jb
shlb
cs
dec
add
jns
call
hlt
bound
mov
sti
int
push
outsl
push
les
add
or
mov
cmp
mov
add
sarb
adc
xor
lock
iret
rcrl
loope
cmp
fwait
imulb
inc
cmp
push
add
repz
imul
in
ret
adc
push
mov
popa
push
adc
cmp
xchg
pop
in
mov
fnsave
and
pop
pop
jb
shrb
pusha
ja
test
mov
xchg
pop
pusha
aaa
shlb
popf
movsb
mov
nop
inc
mov
xchg
or
pushf
cwtl
mov
sbb
cwtl
xor
stos
xchg
jno
sub
xchg
jmp
adcl
jmp
pushf
inc
sub
and
fcoml
mov
and
addl
xchg
cmp
in
or
mov
or
mov
adc
mov
in
nop
pop
and
out
jmp
and
add
jne
js
jecxz
dec
cmpsb
nop
inc
test
cmp
pop
test
in
sbb
push
leave
stos
or
mov
sub
inc
jb
mov
mov
shlb
cmp
cltd
mov
in
fs
inc
dec
ret
pop
cmp
inc
dec
sbb
mov
add
cmpl
lds
adc
jns
push
push
push
fiadds
fbld
xor
push
es
sahf
out
imul
fstpt
repz
pop
je
mov
adc
lods
cmp
fs
dec
dec
or
sub
adc
fadds
fdivs
push
inc
dec
fadds
push
inc
push
push
adc
push
jb
cmp
cmp
in
in
test
adc
aaa
loopne
enter
movsbl
les
fdivs
and
aam
and
ror
jl
subb
jo
pop
xchg
imul
inc
sub
insb
enter
mov
xchg
cmpsl
sub
mov
dec
ds
pop
mov
ds
repz
and
aas
pop
aas
inc
out
cltd
mov
outsl
push
sbb
mov
clc
cmp
add
shrb
xor
xchg
mov
mov
aaa
aaa
mov
mov
int3
xorl
mov
mov
fadds
push
es
popa
test
test
adc
cwtl
movsb
aaa
movsb
aad
sbb
cmp
sbb
ret
imul
lods
or
outsl
aaa
cmp
mov
cltd
xor
cmp
sub
popa
shl
mov
add
mov
and
test
nop
add
sbb
lds
jno
das
mov
push
inc
popa
add
or
repz
test
gs
dec
sub
jl
inc
and
cmp
pusha
or
mov
push
push
or
test
push
fsubs
test
push
sub
jmp
jmp
dec
xor
js
dec
cmpsb
add
or
push
stos
ja
data16
rclb
call
or
adc
inc
inc
cli
dec
jp
out
out
dec
lret
ret
sub
cmp
push
dec
pop
lea
sub
cmp
outsb
inc
insl
inc
cs
xchg
or
add
adc
pop
int3
or
and
add
push
push
xor
jle
cmp
xor
mov
mov
pop
jmp
movw
push
out
testb
imul
inc
out
popa
arpl
xchg
jg
push
adc
mov
xchg
sub
faddl
dec
adc
sub
push
inc
aas
adc
sub
sub
fldt
push
dec
bound
dec
or
push
and
push
and
and
daa
xor
xor
lret
repnz
dec
xlat
and
dec
inc
and
fstpl
fwait
into
and
push
add
js
sub
adc
xchg
mov
ds
xchg
mov
gs
outsl
enter
cmp
adc
push
and
xorl
add
or
shl
inc
shll
mov
pop
mov
outsl
push
or
nop
mov
sub
xchg
mov
inc
nop
inc
or
inc
inc
add
movsl
pop
and
test
push
ss
jnp
mov
es
cmp
mov
test
adc
and
mov
add
lods
pop
add
push
aaa
shrl
decb
sbb
mov
fbld
je
xor
push
mov
cmpl
ja
jmp
and
sarl
push
xorb
sbb
cmp
jmp
outsb
cmc
lods
add
test
push
jp
aas
rolb
aaa
cli
inc
imul
cmp
adc
xchg
jmp
faddp
pop
add
xchg
and
out
fmull
push
pop
decb
jb
xchg
pop
cs
cmp
and
mov
or
addl
jns
add
mov
jmp
xchg
or
sbb
pop
inc
pop
arpl
push
ds
add
adc
xchg
mov
mov
add
mov
cmpsl
addr16
insb
test
int
jbe
mov
imul
insb
lea
adc
lahf
in
dec
xor
push
outsb
imul
inc
arpl
clc
stc
push
pushf
pop
add
inc
iret
jb
sbb
inc
jns
and
sbb
xchg
and
add
push
jb
adc
clc
cmp
cmp
bound
mov
out
int3
fidivs
mov
scas
xlat
mov
popf
add
add
mov
jbe
das
add
clc
fbstp
sbb
cmp
mov
outsb
inc
popa
cmpsl
int3
pop
mov
dec
sbb
jg
sti
or
sub
jl
inc
jl
mov
pop
iret
adc
test
push
or
dec
and
and
stc
dec
test
mov
mov
or
adc
inc
outsb
jns
xchg
sub
and
push
gs
pop
or
push
ret
jmp
and
ss
test
pop
pop
cltd
out
jp
into
pusha
or
adc
or
xchg
ljmp
cmp
xor
cmp
es
and
out
out
dec
push
cmp
js
add
dec
arpl
sbb
and
adc
pop
icebp
dec
stos
mov
into
popf
cld
pop
scas
or
clc
dec
pop
sub
jle
push
xchg
mov
xor
adc
cmp
push
js
out
sub
push
pop
dec
mulb
sbb
and
xchg
lods
test
add
push
lock
dec
xor
add
or
or
inc
popf
or
aam
fisttpl
mov
adc
mov
adc
sahf
decb
pop
push
or
mov
sahf
into
icebp
fwait
mov
bound
inc
hlt
jg
push
cli
pop
jp
mov
mov
cmp
jg
mov
push
dec
jne
arpl
and
add
ss
cmp
test
popa
std
and
or
or
and
xor
aaa
int3
sub
mov
sub
adc
gs
imul
dec
sbb
xor
xchg
jno
inc
fs
pop
lods
push
sub
pusha
arpl
xchg
movb
or
lods
pop
pop
mov
pop
cmp
mov
mov
cs
in
mov
mov
movsb
mov
addb
mov
ss
div
push
adc
sbb
xchg
jbe
addb
adc
inc
xlat
dec
call
inc
outsb
jg
inc
call
je
or
add
sub
pop
out
es
sbb
fcmovnbe
jge
in
cwtl
jne
jecxz
push
mov
push
push
imul
imul
sbb
mov
mov
loopne
or
das
dec
loopne
scas
add
push
mov
inc
jle
pushl
dec
jns
push
sbb
inc
lahf
es
shlb
xlat
fmull
push
or
loopne
scas
sti
sbb
xor
sub
adc
out
sbb
rclb
xchg
fcmovnu
cmp
or
mov
fcoml
arpl
mov
aaa
hlt
lods
mov
outsl
mov
jmp
and
clc
adcl
or
jne
inc
push
lea
repz
xchg
push
addr16
lea
js
cltd
dec
sbb
fabs
inc
push
push
fnstsw
push
push
mov
sbb
ss
push
lds
jge
jbe
je
repz
hlt
sahf
negl
movsl
stos
addr16
xorb
and
inc
inc
cmp
jle
mov
xchg
xor
decb
mov
push
leave
adc
mov
loop
add
add
icebp
and
xchg
dec
dec
push
sub
mov
lods
scas
sub
inc
mov
test
inc
cmp
add
call
sbb
xchg
add
daa
cmp
je
xorb
stos
inc
xor
dec
cmp
lcall
bound
pop
scas
jmp
mov
nop
adc
call
adc
jl
inc
xor
cld
adc
add
call
imull
dec
sub
adc
mov
sub
loop
cmp
adc
fildl
inc
hlt
idiv
inc
xchg
pop
xorl
decl
outsb
or
adc
bound
orl
inc
push
imul
mov
inc
js
and
shrb
sbb
sub
cwtl
inc
mov
js
repz
sbbb
fdivrs
jo
fcompl
mov
adc
add
jp
mov
rorb
or
or
aaa
aaa
mov
or
je
pcmpeqb
mov
rorb
or
lahf
push
add
push
add
dec
cld
aas
jne
andb
push
in
clc
arpl
insb
sbb
lods
and
fdivp
inc
push
clc
and
push
inc
jl
scas
andl
jle
sarl
inc
fistps
sarb
jg
daa
inc
and
mov
push
hlt
inc
test
dec
jo
out
lods
cmp
jg
ficomps
sbb
nop
add
imul
rorb
push
push
outsb
lock
icebp
or
fcmovne
shrl
jle
jg
sbb
ret
or
or
xchg
fisttpll
pop
mov
imul
push
pop
es
movsl
mov
jg
push
call
cmpsb
sti
inc
popf
jecxz
pop
add
and
stc
mov
adc
push
and
fstpt
sub
add
mov
pop
ja
testb
mov
repnz
cmp
data16
insb
and
shll
aad
call
and
dec
mov
icebp
insl
jg
xor
adc
sbb
sbb
pusha
push
add
mov
add
jae
and
sahf
push
jp
mov
adc
or
or
fcoms
in
movsl
dec
push
fadds
and
cmp
stc
adc
sub
cld
dec
add
sbb
and
fidivs
lds
push
ds
inc
xchg
inc
out
lock
nop
mov
add
rclb
ds
lahf
add
stc
jmp
pop
or
cmp
pop
mov
xor
inc
scas
sub
mov
imul
fsub
sub
jle
fwait
sbb
lods
push
pop
mov
rolb
add
xor
fistl
push
pop
mov
dec
inc
fadds
cmpsl
xor
fmuls
roll
lea
enter
movsb
and
sub
hlt
xor
subl
sbb
adc
mov
ljmp
pop
repz
repz
push
pushw
cmp
popf
or
xchg
xchg
inc
inc
aam
fdivl
xchg
lret
dec
clc
out
add
aas
mov
int
ja
jp
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jnp
out
jmp
rcl
int3
cwtl
pop
psrld
bound
insl
or
lods
push
popa
xor
dec
xor
mov
imul
test
in
xor
or
xor
mov
les
call
sbb
sbb
xor
clc
fs
mov
cwtl
sbb
cs
jo
and
xor
dec
mov
dec
cmp
inc
mov
mov
push
adc
icebp
push
outsl
sbb
cli
insl
rorl
jl
sbb
add
cmp
cltd
adc
call
popf
clc
xchg
pop
nop
daa
out
and
les
test
pop
lcall
push
nop
sahf
adc
ror
not
lcall
pop
xor
es
push
jl
jge
cmp
lret
xlat
push
adc
ds
test
les
out
inc
mov
shlb
test
cmp
adc
adc
movsb
fmuls
inc
add
addb
mov
ret
mov
call
dec
insb
fs
adc
ret
incl
and
loope
or
test
dec
dec
ljmp
sbb
dec
aas
sar
mov
mov
mov
dec
scas
sti
pop
test
loope
pop
sub
stc
leave
inc
ja
xor
clc
addl
popa
adc
lods
clc
cwtl
inc
dec
into
mov
adc
inc
ljmp
jb
add
add
push
inc
mov
dec
sbb
ja
cmpxchg
jg
mov
out
sub
fildl
mov
push
leave
nop
adcl
jg
inc
nop
inc
push
push
int
pop
sub
jl
inc
out
mov
xor
mov
inc
dec
jne
aas
lcall
stos
jne
xor
inc
add
fsubl
int
inc
jmp
add
int3
and
ret
rolb
in
add
pop
bound
aam
or
fadds
pop
cmpl
dec
shlb
nop
add
orb
push
jle
add
test
sbbl
popf
es
mov
sarb
loopne
rclb
insb
add
or
inc
in
jne
lret
aaa
pop
xor
out
cmp
pop
out
fcoms
add
insb
cld
pusha
add
inc
ds
jne
mov
fsubrs
xor
les
scas
jg
filds
dec
fisttps
cmpsb
aas
movw
mov
stc
dec
or
jbe
por
addr16
test
inc
jp
push
inc
pop
ret
add
js
inc
sub
loopne
sahf
jb
fdivrl
js
pusha
or
mov
mov
pop
mov
cmp
jmp
add
bound
cmp
add
cmpsl
or
daa
push
fcmovbe
pusha
inc
daa
adc
fadds
daa
mov
or
inc
cld
inc
inc
gs
add
lret
popa
pop
xchg
lods
pop
ja
xor
test
jbe
adc
cmpsl
imul
mov
add
sub
dec
std
adc
jg
repnz
test
ss
mov
add
adc
clc
lea
pop
cmp
data16
push
dec
ss
cld
mov
hlt
add
lea
cli
push
insl
sbb
push
cmp
jo
jge
enter
mov
fcoms
inc
pop
mov
mov
mov
sbb
dec
sahf
clc
fwait
clc
mov
sti
add
push
clc
cld
ds
mov
mov
cmp
inc
hlt
stos
sub
adcl
jne
lea
popa
mov
ds
xlat
sbb
enter
dec
fldenv
or
ret
xor
jmp
aas
or
mov
imul
or
fdivp
gs
ret
inc
or
and
or
pop
inc
daa
testl
shrb
jmp
cmp
and
cmpb
int
adc
add
pop
push
add
add
mov
cmp
jnp
aam
and
and
fsts
fsubs
jae
daa
sbb
repz
jl
inc
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
and
pop
or
loopne
sbb
pop
int
push
or
sub
add
into
cmp
pop
xor
insb
lock
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
enter
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
iret
arpl
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
mov
stc
add
inc
popl
insb
ljmp
call
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
filds
mov
push
lret
xchg
fadds
push
push
clc
push
les
les
mov
daa
fiaddl
xchg
pop
mov
xchg
in
xchg
mov
inc
sbb
adc
pop
in
push
or
cmp
mov
pop
mov
push
dec
clc
in
or
jb
or
pop
jbe
loopne
push
shll
push
test
cmp
cmp
data16
mov
jns
mov
mov
or
ret
jno
lea
mov
mov
pop
mov
test
add
push
dec
mov
or
xchg
lock
dec
sub
lock
fs
add
mov
lock
cmp
sbb
mov
cmpl
xor
add
mov
mov
das
or
ja
xchg
ja
add
add
loop
inc
add
push
xorb
cmpb
movsl
mov
xor
jo
repz
sbb
push
adc
ja
inc
and
jne
decb
leave
add
mov
dec
dec
dec
mov
sub
cmp
dec
add
mov
jle
inc
out
and
fistl
jae
jne
mov
call
sbb
mov
adc
pushf
divb
inc
xor
bnd
push
dec
pop
sub
sbb
inc
gs
repnz
add
xor
dec
jo
dec
in
cmp
test
push
sub
enter
scas
xchg
xchg
xchg
enter
xchg
xchg
cwtl
cltd
enter
lcall
enter
or
addl
xchg
enter
enter
mov
enter
pop
imul
pop
pusha
imul
jo
mov
push
fs
dec
dec
lock
jns
jp
xchg
xchg
insl
mov
push
pop
pop
mov
lea
push
lahf
push
cmc
or
xchg
popf
adc
push
adc
negl
ret
cmpsl
jp
add
adc
inc
mov
inc
sub
jl
scas
adc
fsts
jno
push
push
nop
imul
push
aam
add
mov
pop
push
push
jb
jo
jb
jns
imul
imul
stos
inc
shlb
adc
imul
and
xchg
lret
test
ja
push
out
dec
ret
out
daa
mov
xchg
mov
pop
mov
sbbl
or
in
lock
mov
cli
add
dec
sti
and
xchg
aaa
outsb
fstpt
inc
add
and
fidivs
test
pushf
push
mov
cmp
pop
movsb
push
jo
push
fildl
inc
imul
mov
in
insl
mov
cltd
insb
mov
pop
jg
sbb
mov
cwtl
push
mov
call
aam
not
fs
fsubl
pusha
inc
mov
rep
inc
mov
inc
gs
mov
inc
orb
dec
bound
or
or
mov
lods
inc
push
iret
pop
xchg
out
add
cltd
sbb
insb
inc
fst
movsl
push
add
cmpsb
jge
xchg
addr16
orb
inc
jl
call
popa
sbb
outsl
push
or
sbb
and
inc
ret
adc
dec
or
inc
or
cmp
aas
or
adc
add
out
cmp
les
in
mov
outsb
call
and
add
std
add
clc
push
sbb
psllq
push
adc
pop
jp
sbb
lret
mov
jbe
in
inc
faddl
movsb
jl
dec
enter
js
or
cmpsl
mov
xlat
inc
xchg
push
jno
xor
mov
ja
and
mov
xor
scas
lock
fldenv
xor
and
subb
sub
xorb
jo
aas
mov
repnz
pop
loopne
dec
mov
dec
decl
jle
jl
push
into
xchg
mov
rcll
mov
shrb
xor
fdivrs
leave
cmp
or
jmp
rcrl
push
gs
xchg
mov
sbb
mov
jge
jne
push
adc
dec
mov
and
je
les
dec
mov
or
xor
lock
andl
fidivs
pop
in
in
aaa
push
int
and
movsb
call
in
jo
jae
cld
outsl
test
gs
in
lods
insl
in
or
or
cmp
jo
jmp
cmp
pop
mov
pop
jbe
jne
sub
cmpb
inc
popa
outsl
jno
xchg
leave
sbb
inc
adc
jg
jp
lods
mov
fstl
loope
dec
movsl
add
jno
mov
jnp
add
fdivp
or
fnstcw
cmpsl
mov
ret
test
gs
pushf
xlat
xor
movsl
push
xor
rol
adc
mov
pop
jb
ds
or
jmp
pop
pop
cld
in
adc
xor
pop
loopne
aam
cmp
lods
xchg
cwtl
jg
xor
and
mov
cmp
dec
or
hlt
out
xchg
pop
xchg
pop
je
les
cli
rcrb
and
andl
and
jb
add
dec
xchg
movsl
or
push
dec
lods
inc
mov
mov
adc
inc
popf
ret
push
bound
cli
call
mov
xor
test
jne
push
push
jno
std
cs
dec
xor
cmp
jle
xor
lcall
or
rcrb
sub
je
or
cmc
xor
adc
pop
shrb
push
sub
mov
pop
pop
adc
inc
aaa
orl
inc
gs
sub
or
add
nop
fisttps
clc
jg
sbb
mov
movzwl
ret
push
push
movsb
mov
sbb
lret
je
mov
dec
and
sbb
outsb
mov
iret
xor
and
jmp
jle
in
je
jmp
js
pop
fdivrl
mov
insb
sbb
test
out
jne
loope
rcll
cld
arpl
pop
mov
push
cmpsl
lds
je
sub
xchg
addb
and
add
addr16
lods
xchg
push
cmp
aas
pop
je
mov
cmp
lar
decb
ja
mov
xlat
mov
adc
sbb
or
cli
aad
mov
cmp
insb
loopne
std
in
push
add
or
adc
add
mov
mov
pop
into
jmp
imul
and
aaa
mov
in
fisttpl
int
push
adc
mov
mov
sbbb
ja
jb
add
add
call
out
xchg
and
mov
mov
or
adc
in
push
jl
cmpsl
iret
imul
out
loope
cmpb
xor
arpl
and
ja
insb
movsb
add
sub
sahf
out
pop
cwtl
notb
addb
lret
scas
mov
mov
sbb
or
dec
pushf
xchg
mov
mov
and
fadd
jecxz
popa
dec
ret
jge
scas
cmp
add
sbb
mov
adc
mov
and
push
adc
jne
cmpl
cwtl
pop
pushl
push
movsl
xor
outsb
or
xor
dec
xor
pop
pop
sbb
dec
pop
sbb
xor
fadds
mov
add
leave
push
add
xor
mov
aaa
iret
jmp
cmp
bnd
add
jmp
clc
dec
cld
mov
cs
cltd
push
idivb
mov
or
movsl
and
mov
lock
lea
inc
test
add
jmp
xchg
movsb
push
sub
mov
push
xchg
movl
xchg
jecxz
mov
mov
inc
pop
pusha
inc
sbb
repnz
xor
cmp
add
repnz
pop
adc
faddl
fs
subb
add
push
movsl
jle
neg
mov
incl
cmp
pop
push
ret
call
or
mov
push
ret
mov
test
enter
stos
mov
jg
jp
mov
clc
ret
ss
aam
or
add
ss
push
jge
test
shrb
mov
sti
jo
sub
das
bound
or
jo
xchg
xchg
fdivl
ret
or
enter
jle
inc
xor
clc
inc
jge
add
push
popa
fstpt
inc
jb
in
scas
cmpl
aad
jns
sbb
scas
or
adc
xlat
cmp
les
ret
push
scas
pop
jp
or
cmpsl
mov
or
or
dec
je
jmp
fdivrl
push
pop
stos
jl
adc
imul
sbb
addr16
or
jmp
movsb
popa
sbb
out
sahf
sbb
xchg
daa
fs
loopne
cmove
sub
push
or
shrl
push
jmp
push
mov
mov
xchg
push
or
xorb
sarb
adcb
mull
in
andl
adc
jl
lea
hlt
push
stos
sbb
mov
add
or
jae
mov
test
or
add
mov
mov
add
push
imul
addl
cmp
jl
or
sbb
mov
jmp
iret
and
fstpl
or
cs
cmp
sub
clc
cld
xchg
cmp
ret
or
xor
iret
cmp
add
jl
cmpsb
xor
js
rclb
sbb
pop
outsl
loopne
jne
je
lea
jnp
add
popa
jns
negl
enter
push
cmpsl
mov
imulb
out
flds
fstpt
dec
fstl
movsb
push
inc
add
push
pop
cmpb
dec
jge
mov
fildll
jmp
push
fdivs
jo
cld
inc
cmp
pusha
das
movsb
stos
ss
push
jnp
adc
mov
or
ja
or
jg
xorl
or
mov
dec
push
fadd
add
push
aas
xor
aam
addb
pop
faddl
jnp
dec
xlat
jnp
cmc
xorl
test
mov
iret
shr
cmc
fldt
fstps
arpl
jbe
outsl
inc
adc
out
pop
push
mov
inc
adc
or
arpl
fmuls
sub
sbb
pop
lret
add
mov
mov
push
xor
insb
jge
fistl
aaa
or
cmp
jb
insl
sbbb
les
xchg
rcr
imul
jnp
add
cmp
inc
push
inc
outsl
xor
cmp
and
jmp
std
movq
push
lock
dec
addb
pop
jmp
sbb
sub
push
push
add
jmp
or
pop
ret
jb
and
clc
lea
add
push
jge
pop
pop
sub
jp
adc
jno
pushl
lock
and
fildl
sbb
adc
inc
push
cltd
lret
adc
pop
xchg
mov
je
jp
imul
loope
ja
jb
icebp
xlat
mov
out
or
ret
vpaddsw
lcall
movsb
cmpsb
icebp
dec
add
test
flds
and
fwait
dec
cmp
mov
mov
pop
or
jne
or
mov
or
in
pop
call
adc
sbbl
lods
adc
testl
mov
sub
xchg
aam
das
das
dec
adcl
add
pop
adc
je
addr16
push
dec
push
dec
pop
push
dec
or
add
cmp
jl
invd
dec
push
gs
imul
inc
or
add
inc
mov
pop
repnz
lods
pop
push
mov
or
gs
insl
js
push
cmp
dec
or
in
push
or
cmpsl
or
pop
inc
inc
push
cli
dec
and
orb
sbb
or
or
push
into
sbb
or
or
mov
iret
adc
sbbb
addr16
lret
add
inc
loop
push
insb
cmp
and
cmp
xchg
scas
dec
sarb
adc
clc
outsl
or
incl
mov
mov
mov
add
pop
sbb
cmp
stos
pop
fcoml
ljmp
aad
adc
sbb
scas
push
sub
adc
dec
xlat
pusha
iret
push
imul
push
ja
outsb
addr16
stos
shrl
inc
cmp
pop
mov
test
icebp
nop
movsb
orl
incb
imul
out
orb
jnp
mov
xchg
xor
pop
push
jb
mov
bsf
mov
lods
test
jb
jb
mov
jb
aam
int3
test
inc
xchg
shrb
mov
dec
addb
add
push
inc
insb
imul
xchg
cmpsb
scas
shl
mov
cmpsb
dec
imul
lock
fsubrs
jns
sbb
insb
mov
or
mov
inc
ja
dec
jb
jae,pn
fcoml
push
add
imul
mov
fs
outsl
test
lock
popf
sbb
adc
dec
outsl
sbb
sub
push
xchg
push
out
dec
outsb
adc
fsubrs
xchg
jnp
xor
roll
sbb
push
mov
inc
outsb
insb
call
mov
cmpsl
or
dec
imul
adc
xchg
test
or
movsb
jbe
out
mov
lock
gs
add
push
xchg
out
add
nop
aam
add
ficomps
jo
sbb
fimull
jns
xchg
xchg
xchg
jbe
xchg
cmp
add
adc
push
cmp
inc
jbe
dec
or
push
fsubs
enter
flds
push
add
push
cmpsl
hlt
mov
movsl
cmp
mov
movsl
push
mov
repnz
and
push
xchg
mov
push
or
sub
push
and
dec
lods
outsb
sbbl
in
dec
or
pusha
cmpsl
push
leave
xchg
pusha
mov
mov
mov
mov
pop
nop
adc
out
mov
mov
shrl
push
inc
and
inc
outsb
sarl
mov
or
mov
sarl
out
mov
rorl
imul
pop
or
and
js
sbbl
push
nop
mov
pop
fdivrs
movsl
insl
jo
jb
jbe
push
mov
xor
montmul
mov
cwtl
nop
jb
push
mov
inc
jo
outsl
adc
sbb
xchg
xor
lock
outsb
adc
add
nop
lods
adc
jl
in
push
pusha
scas
add
sahf
mov
push
and
mov
mov
mov
repnz
mov
scas
lods
or
ror
call
add
sub
or
sbb
add
rorl
pop
mov
pushf
shl
fdivl
push
mov
mov
movsb
test
test
movl
and
insb
ret
or
add
fimuls
ror
push
jbe
push
imul
jne
inc
imul
lock
mov
sub
push
and
xchg
fiadds
enter
mov
in
push
and
or
cmpl
lods
dec
inc
lcall
cmp
mov
pop
pop
cmovns
jae
fs
jo
das
sar
jge
das
pushf
jae
push
rclb
sahf
cmpsb
adc
call
iret
fdivl
pop
jl
outsb
adc
sbb
cwtl
mov
mov
int3
data16
fwait
mov
mov
out
mov
dec
roll
insb
xor
mov
or
mov
lcall
mov
jnp
cmp
lock
cmp
mov
inc
arpl
and
xor
push
ljmp
cmpsb
lret
das
dec
jle
xor
nop
aas
jl
cs
movsb
xor
mov
or
xchg
clc
les
into
lock
fadd
pop
push
leave
push
lods
mov
fwait
loope
lret
push
xor
pop
push
lds
outsl
fs
cmp
test
pop
mov
fwait
in
enter
enter
mov
sub
mov
loope
add
push
iret
shlb
js
dec
je
and
out
inc
xchg
inc
out
loopne
or
add
push
in
pop
popf
mov
pop
test
inc
int
push
jns
fimull
xchg
fbstp
stc
fcoms
fsubrs
mov
cwtl
push
or
or
add
or
and
jb
out
sub
and
roll
loopne
push
pushf
adc
pinsrw
or
inc
dec
adc
adc
mov
xchg
jl
xchg
adc
xchg
mov
xchg
mov
inc
jo
mov
repz
js
testl
out
in
ret
mov
mov
daa
cmp
or
in
push
in
adc
in
push
sbb
inc
push
in
and
and
add
sbb
in
in
ds
repz
dec
or
push
and
out
sahf
out
xchg
mov
iret
fnstsw
loope
sahf
jmp
pop
ds
insb
outsl
inc
pop
cs
push
add
jmp
xchg
inc
xor
xchg
pop
adc
outsb
push
repz
iret
cld
fs
iret
repz
pop
fs
clc
push
in
dec
test
mov
push
test
add
or
pop
push
adc
aaa
movsb
jno
filds
xor
clc
sub
mov
aad
gs
pop
push
lahf
jle
pop
fwait
fs
xchg
je
daa
xchg
popf
idivl
fcomp
iret
scas
dec
cmp
fldl
insb
and
pop
fdivrp
inc
std
in
ja
push
pop
add
push
mov
cwtl
mov
popa
rorb
xchg
arpl
jns
xchg
pop
inc
unpckhps
fsubrp
data16
and
adc
gs
cltd
fidivrl
mov
jno
cmpsb
jecxz
adc
mov
mov
xchg
add
inc
fsubrs
pop
push
imul
lret
and
int3
cmp
test
push
xor
jae
lcall
add
pop
sbb
inc
int
dec
addb
jle
int
jmp
xchg
sub
mov
lcall
push
fadds
add
enter
jno
sbb
or
dec
sub
push
inc
insb
or
negb
push
movsb
adc
imul
sti
adc
sti
fwait
icebp
lcall
cli
stc
clc
push
push
push
push
push
push
loop
cmp
jnp
lock
sub
sub
js
cmp
push
pusha
fimuls
jns
mov
dec
push
xor
sbb
push
or
xor
and
mov
xlat
add
sub
aam
add
push
xor
pop
add
test
push
popa
addr16
test
lcall
push
lods
push
or
loopne
mov
les
sbb
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
incb
push
or
push
push
pop
mov
or
and
mov
push
sub
adc
les
mov
out
cmpsb
pop
or
jnp
add
pop
sub
add
cwtl
and
mov
dec
dec
fs
imul
shr
cmpl
pusha
ficoml
inc
movsb
lcall
bound
loopne
frstpm(287
gs
cld
nop
mov
cmpsl
dec
push
mov
pop
dec
mov
aad
jb
stc
push
mov
add
inc
popf
add
jb
leave
jae
fidivl
loopne
loopne
push
inc
lcall
pop
stos
dec
inc
in
popf
lods
xchg
jo
mov
push
mov
dec
pop
cmp
xor
or
adc
dec
adc
outsl
je
push
or
pop
and
jmp
adc
sub
mov
pop
scas
lcall
add
mov
pop
add
mov
and
add
repz
push
sub
jne
ss
jmp
sbb
adc
cmp
add
movsl
mov
push
neg
mov
dec
add
jbe
xor
xor
dec
and
sbb
push
or
nop
vpcomub
mov
je
shl
and
leave
js
pop
xor
shlb
add
pop
or
mov
jae
je
call
out
rorl
clc
mov
dec
daa
fsubrl
loop
sub
add
xchg
pop
jmp
push
and
pop
sbb
pop
jmp
ljmp
inc
add
jb
or
int3
cmp
push
inc
or
lods
stos
and
mov
in
int
or
nop
movsb
mov
hlt
lret
dec
mov
cmp
sahf
fistl
inc
in
xchg
cld
cld
sbb
cmp
sahf
test
addr16
jbe
fimuls
lea
cmp
pop
sub
sbb
dec
sahf
ret
sub
lret
movsl
mov
inc
out
gs
fs
addb
xchg
popf
pushl
or
fimuls
or
dec
call
paddq
inc
cmp
jecxz
sbb
adc
rorb
sub
inc
push
movsb
pusha
add
add
cmpsl
lea
or
sahf
mov
lds
sub
adc
dec
imul
xor
xchg
push
lcall
test
lods
xchg
sbb
imul
pushf
xchg
loopne
inc
adc
xor
push
jmp
loope
sbb
repnz
lcall
mov
cmp
cli
mov
add
movb
sub
iret
mov
lea
pop
add
in
jl
shrl
jmp
push
inc
dec
jne
mov
xor
rorl
xor
cmpsb
inc
lds
inc
sbb
dec
call
push
mov
push
aam
rcr
nop
sub
enter
cmpb
mov
or
dec
popf
cwtl
and
push
pop
add
xchg
dec
mov
and
mov
dec
shll
clc
rcll
les
mov
adcb
in
cld
pop
sub
cltd
fidivrl
add
pop
push
or
cwtl
call
adc
xchg
inc
dec
cmpsl
into
nop
mov
push
sbb
or
and
lcall
or
push
jp
call
jmp
push
in
xor
es
in
cmp
inc
pop
xorl
fcmovnu
push
inc
imul
icebp
cmp
push
push
call
jl
jecxz
dec
call
rolb
paddw
popf
fmull
xchg
mov
sbb
pop
loopne
and
mov
lret
out
mov
and
jge
dec
dec
enter
mov
cwtl
mov
jge
sbbb
faddp
mov
je
pop
jg
pop
xor
aad
popl
pop
add
xchg
inc
add
fnsave
lret
mov
shlb
mov
mov
sbb
cli
xor
pusha
mov
movsb
cmp
adcl
mov
adc
mov
rcr
scas
leave
enter
xchg
rolb
mov
adcb
int
lret
rorl
movsb
jae
pop
loopne
sub
shll
add
xchg
push
imul
add
enter
mov
lods
das
dec
jb
repz
lahf
adc
add
push
fisubl
fadds
movsl
adc
sbb
push
das
add
ret
cmpsb
mov
nop
outsb
adc
push
jo
les
push
test
ja
enter
sbb
pop
fnsave
sbb
add
xchg
mov
inc
push
push
push
inc
fists
xchg
adc
arpl
lret
stos
xchg
fsubp
cmpsl
cmp
jmp
jmp
cmp
je
sub
insb
rcll
and
clc
push
jb
pop
mov
cmpsl
xchg
pusha
or
mov
cltd
inc
cmpsl
xchg
cmp
mov
cs
and
dec
into
mov
and
push
adc
test
cld
inc
push
lds
test
or
adc
add
xlat
or
add
push
or
jae
addr16
mov
or
test
or
int3
mov
push
loope
pop
inc
outsb
cwtl
cwtl
hlt
pop
dec
adc
xchg
in
mov
and
push
pop
popa
and
les
js
rclb
mov
mov
xor
mov
sbb
xor
push
sbb
sub
xchg
add
incb
pusha
mov
sbb
loope
pop
dec
cld
mov
jmp
ret
add
enter
mov
ss
mov
cmp
jne
sbb
sbb
lahf
and
out
xor
sub
mov
in
push
cwtl
add
data16
loopne
add
daa
in
and
adc
or
mov
mov
inc
cmp
mov
or
test
and
shl
cwtl
loope
mov
pop
cmovg
mov
subl
mov
or
cmp
push
mov
and
inc
push
and
insb
pop
dec
loop
sti
xchg
dec
push
xor
sub
les
sbb
xor
add
mov
aaa
stos
mov
sub
cmc
pusha
outsb
xchg
sbb
in
cwtl
jo
sbb
fdivrs
mov
rcll
nop
sahf
mov
sbb
push
aas
xlat
cmp
pop
mov
inc
xchg
lahf
mov
int3
adc
adcb
loope
dec
lock
jae
leave
mov
push
or
clc
sub
sub
jne
push
arpl
pop
idiv
rolb
pop
stc
add
lods
fstpt
xor
into
je
mov
jo
je
mov
inc
fisttps
adc
ret
pop
popf
dec
adc
xor
lea
pop
fnstcw
or
shl
sbb
in
adc
dec
fst
lea
in
in
fsubrs
and
mov
imul
insb
test
fwait
cmp
loopne
jmp
cltd
mov
jl
xchg
aad
jbe
cmp
das
les
ljmp
sbb
idivl
inc
ss
lret
lahf
push
or
mov
fmull
shlb
loop
inc
adc
push
mov
incl
or
leave
aam
mov
xchg
lret
jp
xor
adc
add
nop
mov
mov
shrd
cmp
sahf
xchg
or
mov
pop
inc
decl
mov
sbb
out
popf
andb
loope
loop
adc
or
add
shr
cmc
mov
push
push
sub
pop
inc
xor
je
int
jo
jge
pop
lcall
inc
loopne
divl
dec
inc
ds
xchg
add
sbb
pop
xor
scas
push
push
xor
outsb
inc
inc
ret
or
int
sbb
inc
sahf
add
nop
pop
mov
dec
add
lret
sbb
or
jmp
cmp
sar
pop
add
aad
leave
jmp
inc
cmp
jge
std
push
inc
dec
add
adc
jne
sbb
leave
jbe
cs
loop
andl
xlat
std
jle
adcl
or
or
and
xchg
lea
push
hlt
jecxz
aad
mov
cmp
and
movsb
push
jmp
cwtl
add
dec
lret
das
pop
out
mov
enter
shlb
rcrb
pushf
or
dec
xchg
je
mov
dec
shl
test
sbb
sbb
adc
push
jns
inc
ja
lock
inc
mov
sarl
pop
addb
add
bound
push
and
dec
jne
cmp
sub
jg
dec
hlt
dec
dec
inc
cmp
add
cmp
mov
add
cmpsl
lret
movsl
subl
pop
xor
pop
inc
mov
dec
jno
cmpsb
aas
sbb
rcl
mov
lock
pusha
mov
dec
mov
ja
push
inc
stos
lods
sbb
add
mov
das
jns
mov
js
aam
mov
inc
jne
cmpsl
loop
subl
and
or
leave
jae
dec
dec
and
movsl
xor
xor
aaa
iret
arpl
sub
add
sub
pop
not
xchg
mov
and
and
loop
data16
scas
aam
inc
enter
pop
stos
jb
mov
fistps
add
xor
mov
cmp
dec
or
pop
pop
dec
pop
sar
incl
sbb
call
out
je
movsl
test
inc
xor
in
inc
rol
sbb
push
fisubl
mov
push
lds
or
mov
fisttpl
adc
adc
adc
add
cld
xchg
add
cmovp
sarb
stos
adc
btr
push
add
mov
lock
sbb
push
push
inc
adc
test
ficompl
push
mov
dec
inc
or
dec
test
adcb
mov
sbb
movsl
ja
add
cli
pop
ja
add
bt
jb
ja
push
inc
popf
mov
jp
fistpll
push
inc
cmp
jne
inc
decl
jne
les
mov
xchg
aaa
or
test
call
mov
and
add
rol
in
call
mov
sbb
add
xor
xchg
jg
nop
mov
inc
in
xchg
xchg
fldt
hlt
pop
sub
cmpl
cmp
arpl
mov
cwtl
rolb
outsb
imul
mov
notl
jns
add
cli
xor
xchg
add
dec
leave
push
inc
mov
sub
ret
mov
incb
sbbb
push
adc
xchg
jge
pushl
js
cmp
push
test
movsl
movsb
adcb
dec
sbb
pop
push
mov
scas
xchg
mov
adc
add
add
xchg
mov
aaa
add
or
adc
ja
aad
lea
pop
aam
outsb
flds
dec
push
nop
fistpll
mov
out
jle
push
dec
and
mov
xchg
sbb
add
pop
pop
jnp
sub
lea
and
lcall
mov
or
movsb
subb
adc
int
pop
test
pusha
ret
add
es
push
popa
repnz
jg
enter
jle
mov
test
arpl
clc
icebp
lock
mov
ja
cmp
call
jnp
xorl
mov
xchg
andb
mov
roll
jns
popf
mov
sub
xchg
adc
outsb
nop
xor
xor
xchg
sbb
arpl
inc
mov
ficoms
mov
adc
cs
mov
add
or
and
lods
mov
sub
jno
add
and
dec
and
call
sub
ja
in
outsb
daa
daa
dec
clc
rorl
repz
movsb
xchg
add
adc
jecxz
lahf
adc
dec
cltd
sub
decb
mov
test
adc
push
adc
pop
ficoms
mov
xorb
dec
and
dec
shll
inc
inc
push
jae
in
jecxz
push
mov
dec
in
daa
test
popa
leave
sarl
jo
bound
movsb
jb
popa
fdivrs
pop
shl
lock
pop
in
push
in
sbb
and
inc
shll
mov
loop
popa
les
out
and
add
stos
shrb
jne
xor
pop
mov
enter
stos
aam
aam
xchg
sbb
mov
adc
in
fadds
repnz
mov
sahf
fidivs
fwait
cld
adc
enter
push
outsl
push
jbe
sub
dec
jae
xchg
sbb
clc
and
sub
cmova
lock
loope
test
out
xchg
movsl
cltd
xchg
pushf
mov
inc
outsl
mov
lret
test
sbb
xor
sbb
ss
mov
loopne
mov
ret
rclb
fstpt
rclb
aam
mov
adc
es
loopne
add
sub
roll
mov
push
push
inc
lret
or
fsubrs
ret
fs
fucomi
fwait
pop
call
mov
fimuls
inc
fucomp
and
subb
sarb
in
mov
jns
xor
mov
push
push
push
jo
mov
pop
ficoms
addr16
dec
inc
push
jl
movsb
test
sbb
xor
pop
push
push
jl
and
fcoml
mov
push
cmp
cmp
dec
popa
adc
jns
pop
insl
and
mov
fisubl
insb
and
addb
mov
or
nop
pop
push
add
mov
fmul
call
rcrb
or
call
or
cmpl
ret
test
pop
mov
movl
inc
mov
out
sahf
and
pop
sarl
adc
mov
pop
cmp
or
inc
dec
vminss
sbb
or
outsl
push
rorl
push
lret
xchg
repnz
imul
or
out
addr16
in
inc
inc
pop
call
clc
add
adc
add
mov
sub
lock
mov
enter
adc
push
push
push
xlat
pop
notl
mov
mov
clc
xor
push
sbb
rcll
imul
in
bound
dec
push
in
pop
add
fs
daa
shll
sub
cmpsb
xchg
push
dec
pop
xor
mov
call
dec
inc
sahf
mov
pop
inc
out
jmp
sub
xor
test
and
sbb
and
pop
push
ljmp
aad
into
inc
mov
faddp
or
int
xchg
cmp
mov
das
ret
outsl
call
xor
jg
js
ret
dec
and
pop
jo
adc
lods
jnp
loopne
lock
and
sahf
and
sbb
adc
push
test
cmp
out
in
pushf
sbb
arpl
aaa
mov
in
ret
adc
std
and
adc
clc
pop
les
sbb
jmp
fmuls
lds
mov
or
add
lret
sub
jle
int
lds
or
test
das
add
int
les
inc
sub
leave
roll
dec
stos
les
or
cwtl
arpl
cmp
lea
arpl
pushf
push
xor
cld
in
mov
cmpsl
and
inc
out
sbb
push
inc
add
cmp
lock
pop
pop
jne
testb
lods
std
ds
orb
sbb
imul
out
and
pop
mov
cmpsl
nop
mov
pop
outsb
cs
and
pop
inc
test
dec
in
into
mov
pop
js
xor
inc
addr16
subb
inc
loop
adc
and
jo
cs
xchg
sub
cmp
sbb
mov
fiaddl
jmp
mov
push
scas
sar
mov
into
add
lret
adc
xchg
mov
test
or
add
lcall
aaa
sub
sub
sbb
mov
int3
dec
mov
adcb
ret
push
dec
shlb
inc
pop
andl
add
ds
add
inc
jo
les
addl
inc
lock
pop
arpl
rol
and
cltd
in
inc
test
or
iret
mov
dec
sub
sub
xchg
test
inc
test
push
or
rorb
mov
mov
pop
movsl
or
add
add
pop
mov
mov
cltd
ficoml
outsl
outsl
aas
inc
jbe
je
jg
mov
jmp
rcl
sub
clc
cs
add
jge
lea
lock
jbe
xor
dec
into
push
sbb
or
call
repz
jp
jno
push
mov
mov
jg
mov
ret
push
mov
sub
andl
lret
or
repnz
movb
jle
in
mov
pop
popa
mov
push
sbb
mov
sbb
adc
cmp
loop
test
or
das
int
je
mov
xchg
test
mov
pop
sub
scas
add
xor
dec
mov
inc
sbb
jg
add
sbb
orb
nop
and
mov
push
fisubs
das
adc
jl
repz
fidivl
mov
xchg
push
xchg
cwtl
loop
jl
cmpl
clc
or
inc
hlt
shr
out
aam
fisubl
mov
sbb
movsb
repnz
jg
addr16
inc
jl
and
cmp
jne
mov
or
or
mov
jne
inc
jge
sbb
jle
sub
ficompl
enter
jl
pop
add
add
xchg
adc
out
sbb
mov
sbb
xchg
nop
dec
jo
xchg
mov
pop
add
cmp
addr16
xchg
imul
lret
or
mov
pop
mov
xchg
inc
mov
jge
or
jle
xor
push
push
add
out
ja
cmp
out
js
add
inc
mov
ja
pop
and
sahf
pusha
pop
dec
fidivrl
xor
and
inc
ja
xor
pop
push
insl
ret
sub
test
add
mov
push
pop
subb
popf
js
mov
shl
adc
xchg
ficoms
push
movsb
cmpl
pop
cmp
in
adc
jb
and
add
cs
pop
idivl
shl
cmpsl
pop
cwtl
js
les
inc
andb
push
sbb
adc
push
pop
loopne
jbe
add
mov
xchg
incl
popl
in
push
sbb
add
fdivl
sbb
mov
iret
sbb
xor
add
bound
xor
cwtl
mov
pop
push
xor
mov
mov
adc
sub
sub
shll
xor
test
je
pop
ret
cmp
sub
int3
notl
jb
mov
es
jb
inc
inc
insb
add
loope
xchg
popf
push
lock
pop
int
addb
mov
or
pusha
xchg
and
add
ljmp
or
sbb
add
or
into
pop
and
cltd
jae
mov
out
fidivl
add
and
mov
stc
mov
pop
jbe
insb
cltd
sub
push
ljmp
lret
mov
xchg
jne
pop
mov
lahf
inc
cmpsl
leave
or
adc
inc
bound
loope
add
add
nop
push
les
inc
sub
sbb
out
xor
test
xchg
add
sbb
pop
adc
icebp
xor
sbb
mov
sub
push
inc
xchg
add
pop
pop
aaa
xor
test
in
sbb
xchg
dec
push
mov
out
aam
flds
aad
in
pop
mov
or
pop
pop
xchg
pop
test
movsb
mov
div
in
add
inc
or
rolb
adc
push
push
outsb
fcompl
sbb
call
xor
mov
roll
add
mov
nop
icebp
push
and
aas
mov
mov
and
add
mov
sub
mov
or
fsubr
add
or
nop
fstpl
sarl
jge
enter
or
loopne
fcompl
mov
sub
cs
je
inc
fadd
sbb
mov
pop
or
add
data16
xor
mov
dec
or
aam
and
and
or
dec
ret
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
xchg
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
enter
xchg
dec
pop
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
ret
or
inc
and
cmp
je
or
jp
jne
arpl
push
faddl
jle
rclb
je
mov
pop
arpl
xor
daa
or
dec
xor
mov
jecxz
xor
rcll
ljmp
les
scas
xor
add
jle
lods
adc
cmp
jle
or
add
inc
mov
xlat
test
stos
sahf
add
lds
add
push
or
adc
dec
jns
cmpsb
add
hlt
enter
push
test
aad
xchg
icebp
or
hlt
push
add
add
inc
and
lods
aad
mov
aam
iret
jmp
sahf
les
inc
push
cltd
lcall
ds
les
cltd
shlb
pop
mov
clc
mov
jp
pop
jg
test
push
iret
adc
pushf
push
push
adc
popf
das
push
inc
mov
mov
fisubrl
or
inc
andl
fildl
ja
sbb
or
nop
das
out
xchg
or
adc
sbb
js
lods
pop
daa
scas
sbb
and
xlat
aas
add
unpcklps
push
orb
sar
inc
imul
add
cmpsl
sbb
iret
out
inc
inc
int3
mov
ss
nop
aaa
sub
dec
ds
loope
cmp
or
or
inc
test
xor
inc
pop
adc
or
adc
jbe
ja
mov
ficoms
mov
jne
dec
fwait
xchg
dec
jmp
mov
sub
mov
lea
int
inc
sbb
cmp
dec
or
or
xchg
sbbb
leave
mov
stos
inc
pusha
movsl
dec
inc
cs
add
or
je
test
push
aaa
push
loop
cmp
sbb
inc
xor
push
add
push
mov
dec
fcoms
rcll
cli
aaa
xchg
notb
int
addr16
popa
imul
pop
xchg
push
add
jae
out
add
and
mov
mov
sbb
shlb
movsb
sbb
cs
sub
mov
aas
std
fmuls
xor
mov
popa
xlat
shlb
into
lret
jg
xor
lods
sar
push
and
xchg
imul
or
ret
aam
jo
fsubs
icebp
or
adc
jge
add
xor
xchg
adc
dec
jbe
xor
mov
and
clc
xor
cmpl
icebp
pop
pop
mov
jae
das
repz
inc
imul
xchg
imul
adc
cmp
jge
mov
sub
xor
cld
sub
dec
shrl
or
dec
leave
adc
fwait
psubq
sbb
mov
or
dec
pop
inc
add
int3
clc
cmp
jl
jmp
or
leave
sub
jecxz
dec
pusha
push
aaa
add
cli
cmpsl
andw
sbb
fldenv
arpl
dec
sbb
mov
insl
inc
xchg
pop
leave
cmp
push
fists
cmpl
mov
inc
js
push
mov
and
fidivrl
cs
push
mov
mov
fistl
push
adc
adc
dec
cmp
xchg
shll
sbb
mov
mov
xor
subb
fsubrl
addb
cmp
and
push
sub
or
lret
mov
loope
lret
inc
pop
int3
insb
cmpsb
inc
repnz
aas
adc
pop
orl
add
xor
mov
lock
mov
push
adc
popaw
ret
lock
inc
sbb
das
outsl
xchg
loope
jmp
cmp
pop
dec
adc
adc
xchg
fsubrp
clc
ret
lahf
jne
sbbl
xorl
sbb
add
adc
push
mov
jo
icebp
cmpsl
popa
rcrb
ret
mov
ret
out
mov
sub
jnp
cmpsl
ds
add
sbb
imul
dec
and
add
xchg
push
pop
adc
mov
fsubrs
rcrl
fisttpll
add
fmuls
je
hlt
aaa
test
loopne
pop
xor
mov
lods
shll
test
arpl
decl
xchg
pop
jecxz
shrb
pop
call
int3
es
mov
sbb
orl
push
mov
cli
ja
sbb
cmp
les
dec
mov
movsb
cmp
adcb
sbb
xor
mov
iret
pop
clc
inc
mov
push
fnstcw
adc
sub
jne
push
or
push
push
add
out
loope
cmpl
jne
sbb
rolb
add
shlb
bound
push
loopne
aas
dec
xchg
inc
stc
jl
mov
pop
rolb
out
mov
xor
imul
lea
sub
pop
mov
or
arpl
mov
push
loopne
xor
subl
fwait
xor
push
cld
jmp
mov
push
inc
movsl
inc
ljmp
ds
in
pop
loopne
mov
xchg
subl
sarb
add
cmpb
xor
mov
jmp
push
xlat
es
rolb
out
dec
jne
and
ja
mov
hlt
mov
inc
xchg
jmp
xchg
imul
test
jg
out
cmpsb
cmp
push
push
xchg
add
out
jle
repz
xor
loopne
nop
in
sub
push
jne
pop
je
loope
pop
dec
popa
mov
or
jmp
sbb
cmpsl
insl
out
dec
dec
pop
add
cmp
iret
xchg
ljmp
sub
nop
inc
pushf
lret
mov
jmp
add
jl
pop
xor
mov
jg
sbb
fnstcw
lret
rorb
fsts
lret
stos
cmpsb
mov
push
sbb
dec
mov
std
adc
ljmp
pop
rolb
sub
pop
mov
add
or
jnp
add
xor
cmp
aaa
fistpll
adc
jl
loop
sub
push
popf
dec
jns
jle
push
mov
pop
and
dec
js
inc
outsl
gs
xlat
fldl
sbb
call
or
lods
add
add
mov
mov
xchg
and
test
jbe
or
fists
je
adc
and
jnp
jecxz
sub
jecxz
ss
inc
push
aam
dec
xchg
ret
jg
add
adc
sub
adc
inc
xor
pushf
inc
dec
sub
sbb
das
cmp
pop
mov
iret
sahf
pop
shll
je
mov
inc
push
jmp
rcll
push
pop
and
cmp
cmp
push
pop
push
mov
fimull
pop
add
add
xor
jge
enter
pop
test
mov
or
outsw
xorl
sub
outsb
les
fmulp
ret
push
or
test
enter
call
or
or
cmp
les
paddq
gs
ljmp
mov
arpl
fdivl
vmread
cld
sub
cltd
mov
push
int3
mul
xchg
lock
inc
leave
sbb
push
cmpsb
pusha
dec
push
int
xchg
push
clc
imul
pop
or
cmp
xchg
push
hlt
sub
pop
ret
iret
iret
push
pop
pusha
jae
stc
mov
dec
sbb
adc
ds
rorb
lret
sub
lret
and
jmp
sub
inc
mov
and
ret
sbb
in
lods
jo
cwtl
jbe
add
out
jecxz
inc
adc
clc
movsl
jo
sub
imul
scas
sub
dec
xorl
das
aam
adc
xchg
or
and
int
jne
in
adc
sub
cmp
lods
cwtl
in
enter
add
xor
or
sub
adc
sbb
mov
xchg
fs
mov
popa
in
mov
test
mov
or
add
and
popf
sbb
adc
std
sub
sub
imul
xchg
push
pusha
cld
push
jge
push
negb
jmp
fidivl
or
mov
or
pop
popf
mov
sbb
or
jmp
loopne
pop
push
mov
mov
pop
popf
sbb
scas
jne
sbb
sbb
add
inc
rcrb
rcrb
xchg
pop
push
in
adc
fwait
add
in
adc
pusha
sbb
push
xor
bound
adc
pop
imul
adc
popa
xlat
sub
xor
mov
add
jo
aaa
in
inc
in
jo
xor
xlat
push
lods
adcl
dec
jmp
cmp
lcall
xchg
sbb
out
mov
loope
xchg
cmp
cld
adc
fst
cltd
cwtl
mov
daa
adc
xor
or
or
add
push
xor
pop
push
or
nop
ss
ljmp
pop
out
or
or
sbb
sbb
inc
push
sbb
es
push
dec
add
lcall
sub
ljmp
imul
jge
popa
sub
xor
xlat
pusha
mov
add
imul
mov
xchg
andnps
mov
sbb
cmp
mov
mov
push
ds
add
push
xchg
movd
or
sbb
xor
insb
flds
lock
inc
cs
mov
mov
lret
pushf
xor
cmp
adc
mov
inc
add
xchg
or
stos
add
call
xchg
cmp
stos
xor
aas
scas
add
and
jl
cwtl
add
add
fadd
xchg
mov
in
inc
add
insb
sub
popf
in
into
enter
fsubs
xor
cmp
call
and
jns
fwait
mov
cmp
add
pop
xchg
adc
pop
xchg
or
hlt
xor
jmp
add
aas
xorl
orl
int
mov
push
mov
or
mov
fs
insl
sqrtps
out
or
or
int
repz
add
jo
pop
mov
fldt
lock
jne
mov
push
push
mov
mov
icebp
jbe
rolb
inc
fsubl
and
out
shrl
mov
fcoml
cmp
or
loope
jp
jl
and
pop
xchg
rorb
xlat
mov
fsub
mov
mov
call
or
pop
fmull
mov
inc
xor
stos
hlt
out
das
lods
cmp
dec
aad
lret
mov
xchg
out
xlat
into
or
movsl
leave
sub
popf
lock
add
inc
xor
dec
mov
lret
cmp
lea
sti
loopne
mov
mov
sbb
stos
add
xor
add
iret
mov
gs
imul
push
jo
arpl
xchg
std
rcrl
xor
cmp
movsl
pusha
add
clc
jo
dec
scas
xor
mov
ficoms
pusha
test
loop
inc
sbb
mov
pusha
rcrl
and
hlt
aam
lahf
iret
loop
jmp
mov
scas
lock
mov
add
int
sbb
sbb
cmpsl
jl
push
rcl
add
paddusw
ds
scas
mov
out
js
pusha
test
out
enter
out
lock
jmp
lcall
outsb
icebp
mov
rcl
pmulhw
in
xor
insb
addl
adc
inc
dec
jns
push
pop
cltd
mov
pop
cmc
sbb
das
fadd
repnz
add
xor
cli
mov
ds
pop
repz
cmp
add
cmpsb
hlt
outsl
test
sbb
or
icebp
add
andl
repnz
sbb
xorl
mov
dec
xlat
clc
jge
or
clc
mov
out
mov
cmp
jno
call
jp
add
sbb
xchg
cmc
hlt
mov
xor
inc
daa
add
add
mov
mov
push
xor
push
aaa
lods
xor
xorl
mov
out
mov
sub
jl
fdivl
mov
rcrb
push
hlt
push
outsb
fdiv
mov
daa
xor
inc
addr16
pusha
sub
pusha
out
mov
out
dec
test
clc
daa
cltd
mov
in
xor
lods
enter
rorb
nop
ss
loope
jnp
cmp
push
fldt
mov
xchg
pop
push
out
and
jmp
fsubl
repnz
sub
sbb
adc
sub
stos
sbb
aad
mov
pop
xor
xor
dec
shl
inc
push
sbb
loope
in
rcr
cmp
or
fwait
mov
push
outsl
call
insl
sbb
adc
int3
daa
sbb
pop
mov
hlt
inc
loop
aaa
push
jnp
into
shr
daa
push
fistpll
lea
push
aas
jo
jmp
fcomps
dec
sahf
ret
adc
sbb
mov
loopne
test
hlt
fadd
ret
cmp
jge
adc
nop
mov
or
mov
push
cltd
roll
and
jecxz
addr16
adc
and
add
mov
fdivrl
mov
pop
and
and
je
clc
sbb
cmpb
fisttpl
xor
sbbb
push
sub
cld
add
push
add
jmp
mov
cmp
jne
mov
sbb
sbb
sub
lar
shl
mov
lea
int
mov
pop
les
loopne
dec
bound
push
mov
xor
ret
xchg
stc
popf
sub
or
call
xor
jbe
jmp
outsl
lods
xor
or
dec
pop
lds
add
xor
das
xchg
inc
rcrb
test
xchg
daa
sub
or
in
pushl
ss
push
mov
pop
jge
mov
fbld
lock
arpl
dec
je
or
pop
in
jecxz
or
sub
shrl
dec
testl
push
jmp
shll
cmp
or
add
stc
xchg
lahf
inc
inc
lods
arpl
stc
sarb
push
movsb
jnp
fdivl
push
inc
or
and
ja
push
clc
or
mov
ja
push
mov
ret
jmp
sub
inc
mov
movsl
cld
mov
loope
adc
inc
add
push
out
xchg
aad
cmp
xlat
push
or
push
adc
inc
setnp
mov
xchg
testl
mov
adc
mov
jge
into
mov
and
adc
mov
and
cld
adc
dec
dec
push
cmp
inc
dec
sahf
sbb
sti
cmp
xchg
inc
mov
adc
sti
dec
sub
sbb
push
int3
mov
pop
ja
clc
out
jae
add
pop
push
push
femms
roll
ds
dec
shll
cmpl
inc
jo
cmp
adc
mov
addl
enter
sti
xor
adc
add
out
addr16
dec
sub
lock
sbb
sbb
nop
sbb
add
add
mov
out
dec
cmp
out
adc
add
movsl
je
scas
outsb
sub
shrb
and
scas
rcll
lock
cmp
lods
add
leave
nop
xchg
mov
das
pusha
repz
xchg
test
pop
test
cmc
sub
mov
jno
jb
jecxz
lret
std
cmp
cmp
push
cwtl
push
stos
mov
into
loopne
pop
lock
sahf
out
cmp
push
push
pop
cs
dec
pop
imul
xchg
fiadds
mov
leave
xchg
int3
xor
and
add
scas
nop
sbb
ret
jo
mov
insb
pop
xchg
lods
jmp
das
pop
push
adc
pop
jmp
mov
fadd
imul
adc
sub
stos
pop
das
aad
nop
inc
movsb
js
cld
xor
incb
inc
and
gs
and
fxtract
mov
test
mov
aas
movsb
sbb
adc
mov
xor
enter
jmp
or
faddl
stos
jg
add
mov
in
adc
lahf
loop
add
pop
mov
sbb
sahf
mov
jb
inc
es
ret
inc
inc
push
push
ja
lods
inc
aaa
or
decl
adc
push
push
cmp
adc
enter
insl
xlat
je
mov
lret
in
daa
mov
rorb
dec
movsl
mov
push
or
jl
mov
mov
inc
inc
call
jmp
in
dec
loope
dec
mov
imul
jnp
test
cmpsb
cmp
push
push
sbb
push
inc
sbb
and
xchg
lret
push
pusha
sbb
orb
ljmp
mov
cltd
lret
lods
aad
add
mov
mov
jg
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
in
inc
sarl
pop
adcl
pop
shl
aam
xchg
cli
inc
inc
adc
inc
bound
xorl
mov
inc
ja
movl
dec
cld
shl
rcrl
in
push
dec
enter
jnp
pop
ret
clc
clc
call
cmp
shlb
xchg
jo
scas
xor
mov
jg
sbb
push
jmp
sbb
out
orb
cmp
add
mov
stc
dec
call
in
das
xchg
outsl
mov
mov
or
inc
pop
sub
aas
sbb
xor
mov
xchg
incb
popf
scas
mov
inc
add
push
shr
fidivrs
mov
rcrl
in
add
push
shll
cmp
cwtl
pop
cs
sahf
out
sbb
sub
inc
imul
or
cmc
push
cld
gs
cs
aam
movsbl
popa
ret
xor
sub
cs
jns
add
fiaddl
and
nop
xchg
sub
aam
pusha
sbb
out
shlb
push
jne
insl
loop
mov
sahf
ret
mov
loop
ret
jmp
push
mov
icebp
cmp
lcall
leave
les
mov
and
add
cld
or
repz
xchg
mov
dec
loope
dec
out
sub
push
sbb
jmp
sub
push
mov
add
add
mov
sub
sub
dec
arpl
jmp
data16
mov
jb
in
ret
mov
bswap
dec
call
jl
or
sbb
or
js
adc
or
cmpl
cltd
testb
pop
jg
mov
push
add
shll
and
mov
mov
jb
pusha
xchg
div
push
inc
sbb
add
mov
and
mov
sti
adc
adc
push
add
cmp
aaa
add
and
in
shll
mov
pop
out
in
inc
add
daa
push
push
shrb
add
push
xchg
loopne
adcb
mov
pop
shll
dec
inc
mov
enter
std
push
inc
movsb
mov
cmpl
sbb
mov
push
rcll
fwait
push
push
pop
pop
faddl
notl
jecxz
movsb
xchg
fists
push
cmp
je
sbb
mov
dec
rolb
and
jl
adc
sti
negl
daa
xor
xchg
adc
or
push
push
xchg
jae
pusha
xor
or
data16
or
les
pop
cmpsb
movsl
xor
or
mov
pop
dec
sbb
dec
ja
stos
mov
xchg
or
pop
dec
inc
xor
mov
movsb
jg
addr16
adc
movsl
adc
mov
dec
sbb
inc
loop
imul
or
fisubrs
push
lahf
adc
test
add
mov
mov
and
push
pop
sbb
xor
rorb
jg
or
pop
cli
ret
sti
mov
jno
jle
or
mov
rcrl
sub
jb
adc
lea
mov
pusha
flds
loopne
icebp
sti
sub
imul
sub
or
leave
ds
pop
jnp
sbb
adc
addl
lret
dec
pop
adc
or
adc
adc
sbb
sti
stc
call
orw
addr16
dec
add
push
adc
inc
sbb
sbb
fildl
jmp
adc
repz
add
mov
mov
mov
sub
or
pop
adc
xlat
inc
or
and
pop
lahf
sbb
lock
cwtl
mov
mov
dec
sbb
je
aas
xor
dec
shll
pop
jp
mov
cli
test
es
xchg
and
js
mov
or
mov
and
or
mov
mov
adc
pop
adc
adc
or
mov
adc
scas
sbb
pop
and
shrb
orl
sub
rorb
adc
xchg
inc
outsb
js
adc
xchg
adc
jle
stos
sti
hlt
pop
push
push
adc
xor
xchg
call
jae
inc
aad
rolb
aad
imul
ret
notl
dec
and
and
dec
push
mov
add
lcall
and
or
or
or
sbb
rorl
push
dec
popa
mov
mov
add
push
and
incb
sbb
add
add
cmc
dec
ds
pop
dec
gs
outsl
jo
addr16
and
add
inc
or
pop
or
mov
inc
pop
inc
notl
xchg
push
cs
dec
pop
add
inc
mov
pushf
xchg
lret
imul
sub
push
inc
dec
ja
je
sub
cmp
jne
daa
das
and
jne
cmp
dec
cwtl
mov
dec
mov
pop
shlb
repz
dec
rcl
inc
shlb
cmp
mov
hlt
jno
pop
xor
out
mov
mov
adc
sub
enter
xor
sbb
adc
test
arpl
std
push
inc
dec
jne
les
push
add
mov
into
addr16
push
dec
push
je
adc
jae
cmpsl
mov
sub
stos
sahf
xchg
jnp
or
and
inc
popa
cld
fbld
ljmp
daa
adc
xor
cmpsl
xchg
adc
inc
das
sbb
inc
cmp
pop
sbb
leave
aas
jo
nop
mov
xchg
fs
push
or
outsb
jg
cmp
jg
push
dec
cmp
xlat
dec
inc
ja
xor
jmp
test
clc
pop
shll
test
mov
jmp
or
cmp
js
sbb
andb
jmp
jge
rcrb
call
rolb
lock
imul
add
ja
repnz
xor
mov
lahf
and
mov
jmp
or
inc
lahf
mov
scas
jecxz
xor
or
sbb
jg
cmp
dec
add
inc
and
and
or
pop
xlat
xchg
jge
adc
or
inc
and
stos
add
inc
jmp
adc
or
inc
and
xchg
pop
loopne
jle
orl
dec
lahf
add
in
sbb
adc
movsb
shll
shld
and
push
mov
mov
movsb
jmp
nop
or
loop
test
inc
jl
push
jle
pusha
stc
sub
je
int
or
pusha
pop
or
add
cwtl
mov
fisttps
in
pop
mov
sbb
push
inc
and
in
mov
push
pop
clc
dec
adcb
sbb
pop
adc
mov
dec
inc
pushf
rorl
sbb
or
out
inc
push
pop
xchg
lea
das
xlat
sbb
iret
sub
cld
xor
sbb
ja
lcall
push
sub
arpl
xchg
mov
xchg
pop
xchg
out
bound
dec
popa
inc
dec
cmp
dec
push
push
inc
je
dec
push
out
data16
sub
sbb
adc
out
mov
add
push
pop
xor
mov
inc
jo
xor
fdivrs
xlat
lock
arpl
call
daa
pop
and
jne
pop
adc
push
pusha
scas
frstor
wrmsr
push
pop
bound
sbb
mov
add
xchg
mov
or
cwtl
mov
in
inc
mov
fadds
add
push
sbb
ror
xchg
punpcklwd
pop
cld
jecxz
inc
push
cli
inc
push
push
mov
rol
adc
xor
dec
adc
cmpl
outsb
adc
cwtl
add
jbe
setne
jb
sub
inc
jb
adc
add
addb
adc
dec
ds
cmpsb
push
into
adc
pop
fdivr
add
add
push
addl
lret
mov
out
xor
xor
xor
or
test
cmpsl
add
sarb
push
scas
daa
add
dec
xchg
jg
jmp
loope
adc
push
adc
cmp
lds
sub
sub
incl
shlb
arpl
rclb
cmp
inc
or
add
jae
sbb
cltd
or
in
ret
add
ds
add
adc
add
adc
out
in
dec
add
clc
sbb
push
jmp
pop
movsl
jg
outsb
rcll
adc
hlt
call
insl
add
cmp
sarb
xchg
inc
inc
add
fwait
inc
adc
sti
scas
or
xchg
orb
rolb
mov
push
in
js
adc
xchg
fcompl
push
int3
addl
inc
cld
add
push
sub
pop
loopne
add
cmp
push
and
loope
stos
mov
fcoms
repz
sbb
xor
push
push
outsb
sbb
ret
std
ja
sbb
pop
dec
aaa
mov
cmpsl
rorb
in
rorl
in
push
lret
push
dec
in
mov
ds
out
sub
ret
inc
mov
adcb
mov
pop
mov
cmp
pop
add
sbb
dec
cmp
daa
or
divb
sarl
pop
fbstp
movsl
and
stos
lahf
inc
adc
add
scas
sub
or
sbb
popf
lods
push
and
sub
pop
pop
pop
dec
jb
daa
or
in
adc
sbb
daa
mov
subl
add
gs
adc
insb
sbb
xor
dec
and
adc
pop
loop
scas
xor
or
dec
ljmp
sbb
add
adc
xchg
rorb
add
mov
xor
inc
mov
or
data16
pop
clc
mov
or
or
mov
pop
pop
push
push
mov
add
sti
or
or
add
push
mov
inc
add
pop
add
jo
mov
cmp
fisttpl
pop
xchg
mov
jo
aas
adc
jge
adc
sub
mov
push
or
add
inc
sub
pop
iret
cmp
xor
xor
push
sarb
daa
push
pop
adc
mov
in
lods
mov
je
pop
inc
pop
jle
pop
test
pusha
push
push
dec
pop
add
push
mov
addr16
sub
jge
sbb
adc
icebp
test
cld
push
xchg
insl
nop
adcl
lea
popa
adc
std
mov
cmp
inc
jno
les
pop
xor
add
pop
jge
ret
mov
mov
outsb
inc
pusha
arpl
fildll
jae
orb
pusha
xor
aas
jmp
dec
int3
mov
divb
pop
push
and
sbb
xor
fbld
out
sbb
pop
inc
mov
popa
cltd
add
les
in
into
mov
clc
sub
ret
dec
iret
loopne
and
xchg
hlt
mov
test
xchg
mov
and
dec
mov
sbb
jb
rcrb
ja
jb
jb
jns
jnp
jb
jb
jge
jg
jb
jb
popa
bound
jb
jb
gs
jb
push
jb
jb
insl
outsb
outsl
jb
jb
push
push
push
push
jb
jb
push
push
push
push
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
xor
xor
jb
jb
xor
ss
jb
jb
cmp
cmp
jb
jb
cmp
ds
jb
jb
and
and
xor
xchg
and
inc
mov
push
clc
sub
mov
push
enter
insb
outsl
cmc
ret
cmp
xor
sbb
sqrtps
inc
xor
push
arpl
and
sub
sbb
xchg
mov
inc
outsl
add
push
imul
jo
or
add
adc
xchg
pop
orl
lret
daa
cmp
or
test
imul
add
adc
mov
jae
je
loop
mov
mov
insb
int
jg
mov
enter
movsl
or
xorl
adc
adc
gs
mov
inc
mov
inc
dec
cmc
int
sbb
add
cs
outsb
int
paddsw
add
cs
jo
outsl
sbb
push
inc
popa
jae
aaa
in
mov
or
adc
xor
jl
or
push
xor
fwait
dec
divl
adc
mov
bswap
insb
insl
inc
subb
fwait
decl
push
push
dec
outsl
jo
je
push
inc
sub
or
adc
mov
loopne
nop
and
add
sbb
adc
xor
cmp
aas
mov
loopne
out
push
fwait
cmp
pop
adc
rorl
and
inc
jb
fimull
enter
sub
bound
adc
or
dec
jl
jp
ss
lods
pop
imul
fidivl
or
inc
inc
imul
pop
inc
outsl
jb
jae
es
pop
outsl
lock
mov
pop
cld
ss
sbb
and
testb
jbe
push
aad
mov
inc
lahf
mov
insl
rorl
xor
inc
push
push
js
in
incb
and
imul
cmpsl
inc
sub
imul
rclb
hlt
pop
loop
stc
cmp
cmpsb
and
and
or
stc
loopne
inc
and
div
or
mov
lret
add
icebp
iret
pop
adc
sti
aam
mov
inc
push
nop
add
pop
aas
rclb
sti
ret
push
pop
pusha
cmp
int3
adc
jmp
idivb
and
dec
insb
dec
aas
aas
push
push
dec
gs
enter
jo
jo
mov
cmp
lahf
sub
sub
pop
pusha
mov
mov
mov
jge
push
imul
jns
sub
push
ss
cmp
lea
and
push
cs
sbb
cld
inc
out
lods
inc
xchg
inc
push
mov
lahf
xchg
in
mov
add
in
cld
push
addl
add
rorl
pop
add
xchg
add
sub
xor
and
add
lcall
pop
add
push
addb
je
inc
jmp
scas
xchg
out
es
inc
mov
push
push
cmp
leave
xchg
sbb
add
add
fs
sub
decl
lds
inc
inc
xchg
add
lds
in
add
sub
enter
sbb
daa
inc
inc
inc
subl
push
lock
xchg
xor
sbb
pop
sbb
sbb
push
movsl
push
lret
js
lcall
or
ret
daa
and
pop
aas
push
int3
push
dec
or
or
ficoml
and
rcrb
and
xor
movsb
dec
imul
push
roll
js
jb
jae
loopne
mov
cmp
jo
mov
dec
jl
jne
outsb
testb
out
or
adc
push
inc
xchg
or
push
ficoml
jnp
add
push
inc
arpl
dec
lock
inc
pusha
dec
or
or
fs
dec
outsl
ja
mov
push
cld
push
xchg
add
cmp
or
dec
insb
mov
mov
push
dec
jmp
mov
sbb
sbb
dec
xor
push
cs
lcall
iret
mov
adc
mov
sbb
js
mov
pusha
mov
fisubrs
and
in
mov
ss
pusha
sub
and
fsubrl
pop
int
fidivs
int3
push
sub
movsb
sbb
add
and
jbe
mov
loopne
pop
sub
int
adc
pop
lods
movups
gs
xchg
cltd
pop
and
popa
xor
mov
insl
pop
ret
test
or
dec
mov
addr16
and
add
js
nop
xchg
mov
push
mov
fcomp
fsub
jnp
fildl
or
and
ja
outsl
andb
sbb
push
xchg
hlt
sub
imul
push
and
push
sub
insb
outsb
mov
out
popf
push
es
add
cmp
adc
jge
pusha
in
jnp
out
pop
and
das
lds
scas
push
pusha
sub
pop
iret
js
mov
es
int3
pop
and
mov
pushw
lods
sahf
sahf
mov
pusha
and
add
sbb
pop
out
fistps
add
popa
inc
adc
fists
pop
lods
push
mov
dec
insl
mov
mov
fs
mov
loopne
daa
movsb
outsl
loopne
push
lods
xor
sarb
inc
repnz
mov
jae
div
and
nop
jae
and
inc
pushf
jne
jge
dec
lahf
mov
jbe
aam
mov
ss
sahf
imulb
mov
sub
sbb
add
jo
cmp
cmpb
or
lcall
scas
push
imul
imul
movsb
sub
sub
adc
sub
insl
mov
jae
or
cmp
mov
nop
sub
test
pop
xchg
adc
out
sbb
jo
add
movsb
push
nop
mov
jnp
jnp
aas
je
xchg
rorb
pop
mov
or
mov
fsts
add
in
xlat
mov
push
test
push
fwait
nop
adc
or
outsl
outsb
pop
inc
das
mov
pop
adc
pop
in
test
cmp
dec
sbb
jl
mov
fsubr
push
cld
test
xor
fisubrs
and
xchg
stos
cs
push
lock
xchg
dec
pop
sbb
push
cmp
or
pop
mov
xor
pop
aas
icebp
scas
mov
adc
and
aaa
dec
inc
lcall
les
ret
rol
xor
inc
dec
js
add
jne
lahf
mov
xchg
test
dec
gs
shll
inc
push
push
dec
push
push
xor
sbb
aam
xchg
outsb
pusha
fadd
push
xchg
and
insl
loopne
stc
adc
mov
movsb
xor
adc
mov
and
add
and
inc
ret
fdivs
jbe
pop
rolb
cmp
das
ljmp
push
ret
push
es
add
cmp
xchg
sub
dec
or
ficompl
lods
sub
mov
call
sbb
pop
rolb
and
pop
movl
add
sub
pop
gs
push
sahf
cmp
scas
decl
mov
dec
sete
cmp
shrb
cmp
sar
mov
push
or
notl
adc
fstl
sub
inc
cmp
adc
mov
arpl
mov
int
jnp
add
aaa
int3
adc
and
je
mov
xlat
cmp
mov
push
jb
and
stos
nop
adcl
xor
test
inc
push
jle
add
dec
cmpsb
aad
aas
xor
adc
inc
test
xor
pop
add
lret
lahf
adc
and
jge
pop
cmp
xchg
loopne
scas
or
add
cmp
lock
xor
push
std
leave
fistpl
pop
or
mov
nop
xor
push
jg
inc
adc
fbld
inc
mov
mov
add
push
cmpsl
adc
fisttps
lock
or
rolb
jp
scas
arpl
repz
iret
arpl
jb
outsl
outsb
inc
in
pop
orb
insb
imul
push
xchg
jbe
add
jb
insb
gs
add
fildl
gs
insb
pop
ss
and
pusha
addr16
imul
cwtl
inc
dec
xchg
pusha
dec
pop
iret
pop
gs
insb
outsl
ja
xchg
fildl
inc
jne
push
and
addl
mov
pop
or
jns
push
fadds
add
ja
jge
pop
movsb
insl
inc
dec
stc
adc
data16
push
dec
xor
adc
xor
popa
test
dec
outsl
pop
jo
push
pop
es
subb
or
es
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
xchg
stos
aam
lods
insb
mov
or
cld
shll
jg
gs
or
insl
das
push
fwait
cmp
daa
pop
xchg
fs
lahf
sbb
xor
test
pop
or
pop
rcrl
push
andl
xchg
imul
aaa
adc
adc
jge
or
outsw
inc
push
sub
jg
pop
outsb
jne
inc
icebp
ja
xchg
daa
shufps
and
or
pop
xchg
rcrb
arpl
cltd
sbb
add
sbbl
imul
das
cmp
int
pop
xor
popa
leave
or
sahf
jge
cmc
add
out
push
pusha
jbe
pop
fistpll
xlat
cltd
mov
inc
mov
fwait
adc
adc
mov
addr16
jg
testl
dec
inc
push
push
inc
push
add
test
inc
inc
xchg
xor
notl
dec
inc
dec
dec
arpl
sub
jnp
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
insb
lods
jge
dec
and
out
inc
inc
xor
xor
adc
inc
dec
inc
and
inc
pusha
and
xor
inc
dec
lcall
push
dec
dec
push
dec
dec
mov
aam
fcmovnbe
das
sbb
mov
and
inc
inc
dec
push
mov
dec
inc
dec
inc
inc
jae
or
push
dec
pop
adc
fwait
aas
inc
inc
push
push
push
dec
push
inc
scas
dec
insl
sbb
push
mov
dec
or
jno
mov
clc
push
mov
mov
js
andb
rcl
add
pop
jl
adc
popf
add
mov
pusha
jl
orb
sbbb
jne
add
repnz
mov
ss
pop
mov
lea
outsl
adc
mov
or
fyl2xp1
lea
mov
sub
cmovne
pusha
pop
cmp
les
push
add
push
or
add
add
sub
dec
pusha
inc
out
sbb
mov
inc
add
xor
jo
xor
in
push
jp
cwtl
es
out
mov
or
xchg
add
stos
addr16
pop
aas
sub
lods
add
jmp
loope
sub
xchg
loope
sub
into
cltd
jl
addr16
add
loopne
repnz
ret
mov
dec
jbe
imul
sbb
fdiv
subl
inc
std
xchg
out
das
loopne
adc
lgs
inc
add
sbb
ja
icebp
cmp
or
mov
cmp
jo
inc
in
sub
cli
das
cwtl
add
insb
test
adc
push
cmp
fwait
outsb
adc
inc
clc
push
cmp
or
lret
cmp
into
shlb
lret
std
ds
mov
jp
adc
int3
je
icebp
or
mov
aad
push
ret
xchg
dec
out
xchg
adc
test
inc
or
enter
outsl
push
testb
je
rorb
jmp
adc
mov
aam
add
or
divb
mov
adc
lea
incb
dec
gs
mov
mov
cmp
mov
nop
adc
jo
sarl
dec
pop
xor
movb
push
fsubs
jne
loop
add
xor
popf
fstpt
inc
fildl
or
jmp
push
lods
gs
mov
push
or
sbb
mov
out
jmp
dec
add
xor
sbbl
dec
fadds
xor
sbb
or
xchg
fiaddl
inc
sub
mov
ficoml
test
nop
push
inc
sub
mov
test
in
add
dec
jg
sbb
and
dec
xchg
dec
clc
sbb
or
and
dec
mov
dec
dec
sub
inc
xor
test
cmpl
dec
mov
fdivrs
dec
das
xor
push
das
call
neg
push
inc
jp
mov
nop
xchg
lret
dec
sub
cmp
mov
sbb
inc
sbb
and
xchg
pop
nop
sbb
push
push
clc
and
clc
mov
movb
rolb
add
rolb
ss
in
pop
jb
and
ret
inc
sbbl
inc
loopne
in
loopne
xor
lods
inc
faddl
aad
movsl
add
or
add
aaa
dec
es
cmp
push
cmpsb
add
inc
inc
pop
lock
dec
xor
xor
xchg
push
push
daa
push
pop
push
insb
cmpsl
add
jne
fistpll
cli
inc
jne
subl
mov
inc
test
xor
in
das
das
in
cmc
pop
dec
in
mov
xchg
cmp
or
push
cmp
jns
enter
lock
jl
shl
mov
sbb
mov
xchg
adc
in
dec
leave
or
dec
in
in
ud1
and
pushf
inc
push
jl
pop
inc
and
inc
sub
nop
outsl
cmp
push
pop
push
nop
pop
sbb
add
aas
cmc
inc
in
or
nop
cld
inc
push
out
test
outsb
xchg
mov
and
pop
mov
xor
andb
add
pop
or
ja
push
test
sub
sub
dec
fistpll
adc
mov
mov
scas
insb
das
cmp
or
data16
inc
loopne
push
lret
jnp
fwait
outsb
or
fcomip
jmp
je
cmpsl
mov
add
add
jp
gs
lock
nop
out
xor
in
adc
push
aas
imul
xchg
je
loope
mov
nop
adc
and
pop
jg
enter
cmp
add
push
mov
repnz
push
ret
adc
das
lahf
or
hlt
and
mov
fmull
in
and
and
inc
and
mov
arpl
mov
bound
mov
popa
inc
or
or
mov
lock
imul
mov
add
mov
adc
cmp
mov
adc
fbld
and
sbb
push
or
push
add
loopne
jle
or
pop
or
or
jbe
xlat
xor
push
push
or
push
push
int3
pop
popa
or
into
imul
or
in
call
and
and
ja
int3
xor
mov
mov
xor
bound
pop
xchg
flds
inc
ljmp
ss
xchg
iret
pop
inc
clc
mov
add
or
jecxz
pop
or
popa
mov
rcrl
repnz
push
push
in
mov
inc
xor
inc
int
sbb
ror
add
push
insl
pop
mov
sub
les
incl
sbb
lea
movsb
insl
mov
clc
cmpsb
popf
push
mov
cmpsl
add
xor
inc
sbb
leave
aam
pop
or
sub
and
xchg
loopne
in
sbb
and
nop
es
pusha
push
pop
jb
iret
mov
dec
or
ljmp
test
nop
andb
adc
stos
je
ret
lods
adc
jle
cmp
aaa
cmp
sbb
dec
test
jle
cltd
orb
pop
mov
mov
adc
cmp
rcll
cmp
das
insl
fmuls
cmp
xor
pop
adc
sub
xor
and
repnz
aad
adc
dec
xchg
cld
adc
push
push
andl
cld
scas
mov
adc
pop
xchg
jb
arpl
jo
pop
jb
scas
cmpsl
inc
pop
inc
sub
jbe
inc
add
jb
inc
or
inc
jae
push
subl
shlb
inc
or
je
mov
inc
xchg
push
mov
repnz
aad
movsb
mov
shll
add
dec
and
out
push
sbb
add
es
cmc
cmp
jg
jae
add
arpl
and
orb
mov
inc
rorb
lcall
aam
lock
not
and
mov
dec
sarb
ret
je
jb
xchg
dec
push
push
push
bound
mov
add
adc
cmp
movsb
push
add
or
cmp
mov
mov
xor
push
xor
rolb
mov
decl
enter
sub
repnz
xor
dec
mov
pop
dec
mov
sbb
loopne
ljmp
xor
dec
push
movsl
sbb
dec
scas
sub
mov
iret
testb
xchg
dec
mov
out
ds
xchg
das
pop
enter
mull
mov
les
inc
les
xor
push
jns
ja
aas
xor
nop
mov
daa
jns
insl
dec
inc
cmp
repnz
cmp
call
inc
pusha
pushf
and
insl
add
nop
cld
xor
inc
push
push
inc
mov
cmp
mov
sysexit
mov
leave
sti
adc
das
lea
ficoml
lock
add
mov
addr16
in
es
add
popa
jl
icebp
cmp
imul
jge,pt
add
dec
xchg
adcb
ds
jne
adc
push
int3
push
push
jl
xchg
pusha
inc
dec
test
cmp
js
xchg
push
fisttpl
pusha
or
cmc
fwait
jno
fistl
js
dec
jnp
sub
pop
sbbb
dec
mov
mov
call
mov
sbb
in
push
shll
aam
jle
push
out
pop
imul
insb
push
js
or
sub
or
adc
inc
add
sti
inc
pop
enter
leave
mov
mov
xchg
je
rorb
je
ficompl
loopne
into
mov
clc
testb
shl
jo
divl
shl
and
dec
rcrb
pop
sar
push
pop
dec
pop
aas
fsub
xor
mov
lahf
sarb
je
xor
in
xor
sub
test
sub
add
inc
pop
sub
in
test
push
out
xor
push
stc
jecxz
mov
stos
loope
loope
test
push
cwtl
cmp
sub
int3
inc
ds
push
and
xchg
push
add
mov
rcrl
adc
cmpsb
fdivrl
or
mov
lock
push
sbb
lock
mov
mov
and
cmpsl
sbb
and
fdivrl
insl
insl
mov
jns
pop
or
loopne
pop
rorb
inc
out
adc
sbb
lock
faddl
inc
inc
das
inc
push
dec
push
jo
lea
ret
sbb
loopne
movb
mov
push
movl
inc
pop
out
out
adc
adc
or
sbb
dec
cmp
punpckhdq
adc
fisubrl
add
and
mov
fwait
xchg
lea
add
mov
mov
or
mov
mov
mov
add
inc
mov
inc
add
lods
adc
push
sub
adc
aas
dec
mov
jmp
lcall
push
mov
pop
pop
pop
push
add
cld
xor
dec
jne
mov
add
adc
loopne
fnstsw
push
sbb
inc
or
and
ljmp
aam
dec
lods
ds
in
mov
mov
dec
js
and
icebp
dec
push
inc
and
mov
enter
push
dec
decb
sbb
jecxz
push
out
fildll
adc
jecxz
mov
mov
jmp
cs
clc
sti
movw
mov
cld
push
mov
sbb
rep
rclb
push
adc
jl
out
push
jnp
or
push
rolb
jne
ds
xchg
sub
fidivrs
std
lea
mov
push
pop
push
cmp
lret
cmpsb
cmp
push
addr16
out
and
fbstp
nop
cld
icebp
pop
mov
pusha
lods
xor
pushf
jle
jl
cmp
jae
sbb
cmp
push
xchg
push
add
rcl
push
les
icebp
aaa
dec
sub
fildll
push
movzwl
lea
or
add
push
clc
int3
xchg
lods
adc
mov
add
test
mov
ljmpw
pop
mov
pop
pop
push
push
dec
clc
lret
or
and
xor
rcll
or
aas
push
xor
adc
dec
mov
mov
out
cli
xchg
and
addb
int
inc
xlat
add
mov
add
and
xor
stos
push
xor
push
rorb
mov
je
push
push
push
xor
push
add
xchg
jecxz
decb
mov
add
inc
push
outsl
int3
mov
adcb
mov
mov
pop
cmpsl
fucomip
mov
or
push
push
xor
ds
loope
push
test
scas
dec
cmp
das
fcoms
or
les
in
pop
jge
add
scas
dec
rorb
or
adc
pop
popa
in
movsb
nop
hlt
cld
es
sub
push
in
pop
ja
js
add
pop
jl
rolb
out
imul
repz
or
and
stos
shrl
movl
in
and
aaa
sbbb
insb
pop
cld
push
push
inc
nop
add
mov
add
pop
addb
out
test
pop
lock
test
inc
mov
xchg
xchg
inc
pop
jl
ret
addr16
loope
add
xchg
pop
add
or
pop
add
mov
sbb
pop
dec
cmp
fadd
jg
popf
inc
push
mov
cmp
jg
test
add
icebp
jl
aaa
fdivrs
xchg
cmpb
jg
bound
add
lods
cmp
jle
sub
sbb
sub
or
push
push
pop
jne
inc
mov
and
xchg
lds
or
or
or
adcb
cli
data16
push
sbb
ds
add
dec
jae
pop
fcomp
xchg
pop
add
sarb
rol
insb
xchg
sbb
scas
into
test
jbe
in
mov
add
test
pushf
pop
fsubr
and
pusha
ds
mov
push
loope
or
loopne
test
or
in
pop
ret
ret
push
jg
sahf
sbb
fimuls
loopne
es
cmp
dec
mov
into
gs
sbb
mov
inc
dec
jne
cmp
je
adc
pop
out
inc
xor
ret
loop
cli
sbbl
lock
push
repnz
add
sub
mov
add
mov
bound
inc
lods
cmp
enter
or
fsubrl
insl
imul
mov
pop
cwtl
ret
test
mov
insl
mov
push
mov
faddl
les
ret
lret
call
xor
pusha
jge
negb
pop
cmp
add
push
mov
push
mov
sbb
fdivrs
aad
in
inc
mov
stos
cmpsl
push
sub
or
inc
aaa
mov
and
pop
push
stos
shlb
mov
out
aas
mov
inc
aam
in
sub
stos
in
test
mov
adc
or
sarb
jmp
xor
sbbl
sub
cmp
jl
ret
lea
dec
push
das
sbb
xchg
loope
push
test
in
sub
inc
jl
pop
bound
lock
jb
xor
lahf
test
xor
add
sahf
je
shrb
movl
pop
add
mov
je
dec
or
jle
lock
jmp
push
push
in
and
jmp
mov
jmp
adc
inc
sarl
mov
sub
or
inc
and
jae
sub
add
add
push
push
sub
dec
push
sub
push
adc
mov
fcom
adc
dec
imul
je
lock
imul
add
adc
roll
sub
adc
cmp
add
push
dec
or
popa
pop
incb
inc
mov
fldl
lods
xlat
hlt
js
cmp
rcr
add
aam
leave
adc
inc
hlt
sbb
inc
jbe
pop
jmp
push
xor
int
pop
int3
xor
add
ficoml
sbb
lcall
jns
xor
pop
clc
clc
push
cs
hlt
hlt
pushl
movsl
sbb
add
sbb
push
or
pop
cmpsb
and
cmpsl
lods
icebp
adc
imul
dec
or
push
sbb
adc
call
pusha
xor
out
mov
jo
fisubs
test
mov
pop
push
push
in
hlt
int3
push
jmp
or
loopne
or
mov
clc
xchg
out
popf
call
aam
inc
and
or
mov
faddl
loopne
das
add
push
add
lock
in
and
mov
data16
pop
add
or
xor
mov
xchg
push
in
mov
mov
or
mov
xor
lods
data16
mov
mov
mov
mov
jp
push
outsb
jle
mov
inc
add
cmpsb
insl
fcmovnbe
add
test
out
in
in
imul
mov
out
push
fcoml
nop
scas
lock
and
xchg
adc
cvtpi2ps
add
push
jmp
sar
adc
lcall
js
jno
pop
mov
or
inc
push
or
and
xor
lcall
add
xorl
mov
popa
das
in
push
adc
cmp
mov
fsubs
or
popa
xchg
or
dec
mov
adc
sarl
or
or
xchg
ss
je
imul
inc
int3
mov
pop
outsl
dec
in
mov
clc
stc
inc
dec
hlt
adc
xchg
lods
cli
arpl
mov
or
jmp
adcl
or
cli
cmp
jns
fcomps
push
cmp
inc
add
cmp
arpl
mov
add
jl
push
cmp
mov
iret
mov
ret
mov
js
inc
push
roll
sbb
daa
cmp
mov
ficoml
push
adc
xorb
js
daa
xchg
out
cmpsl
pop
ret
cmp
push
adc
pop
fimull
adcb
and
mov
sarb
pop
xor
push
mov
inc
outsl
jb
lret
outsb
push
fs
add
or
test
add
das
outsb
movsb
mov
addr16
add
jae
stos
pop
mov
xchg
roll
stc
rorb
in
add
adcb
repnz
int3
dec
scas
push
psubw
inc
add
clc
mov
dec
mov
cs
mov
in
mov
lock
sbb
cld
sti
addb
test
inc
push
pop
add
xchg
arpl
ja
popw
imul
bound
daa
pop
sbb
clc
and
bndstx
pop
adcb
gs
mov
mov
add
sub
add
outsl
icebp
popf
mov
ficoms
lret
xor
ja
push
sub
adc
lea
mov
cltd
pop
push
outsb
sbb
sub
xchg
mov
push
int3
and
push
sub
jle
and
inc
cmpl
inc
cmp
gs
or
movb
clc
clc
popl
xchg
pop
push
xlat
xor
push
gs
flds
push
outsl
jle
pop
push
imul
outsl
xorl
dec
push
xor
sbb
rorb
adc
push
inc
inc
sub
mov
add
xor
adc
sbb
pop
mov
mov
out
jno
imul
or
sub
cmp
clc
fs
cmpl
stos
mov
enter
or
xchg
fbstp
and
pop
int3
mov
cmp
outsl
and
push
enter
pop
add
popaw
fstl
jmp
or
or
push
js
mov
push
add
mov
orl
and
out
jne
mov
dec
mov
push
dec
mov
test
adc
xor
mov
rolb
pop
icebp
jns
xor
adc
shr
les
pop
das
clc
rorb
je
mov
sub
dec
faddl
fildl
and
loopne
test
or
mov
push
pop
xchg
pop
mov
push
adc
sbb
sbb
add
fisttps
adc
pusha
ss
lods
imul
test
std
nop
push
adc
or
fcoml
add
pop
ud1
xor
in
das
xlat
dec
inc
loop
arpl
fdivr
pop
dec
add
jo
ja
enter
sub
cmp
jno
jmp
xchg
iret
fidivs
aaa
or
or
rcl
push
das
xor
push
xor
les
and
sbb
xlat
sbb
and
mov
test
xchg
mov
inc
fcomp
sbb
jl
mov
fs
leave
dec
inc
dec
ljmp
and
ret
je
pop
shrl
cmp
add
push
inc
sub
int
push
sahf
inc
outsb
inc
mov
and
add
xor
fldl
bound
pop
xchg
adc
push
sbb
cmpsb
and
fildl
js
sysexit
add
arpl
std
xchg
inc
add
outsl
push
inc
ja
dec
orl
mov
cmp
icebp
mov
or
rcll
int
and
mov
pop
push
sbb
mov
sub
pcmpgtb
push
outsb
and
insb
outsl
add
daa
push
movsb
lock
sbb
fiaddl
xchg
mov
mov
push
rorb
add
int3
dec
adcb
xchg
push
out
push
jo
mulb
ret
fildl
fs
stos
sbbl
clc
gs
iret
cld
sbb
mov
pop
jo
mov
xor
mov
jmp
jne
and
cmp
cli
js
jb
push
adc
fnstenv
js
pop
lock
daa
pop
xor
jns
or
imul
mov
sub
popa
sbb
negl
push
mov
shlb
sti
push
insb
mov
aaa
push
xor
jnp
shlb
lea
adc
in
pop
sbb
fists
in
inc
cs
push
or
in
mov
xor
pop
int3
add
dec
sbb
lahf
or
mov
jg
clc
fwait
dec
mov
mov
test
push
sub
sub
push
sub
scas
cwtl
xchg
fsubl
addr16
push
cmp
jb
es
pop
and
pusha
stos
out
jo
dec
loope
xchg
cltd
or
xchg
out
in
das
add
add
mov
xor
push
fwait
or
ds
push
pop
adc
pop
imul
mov
loop
out
loop
jg
push
call
push
and
and
aaa
inc
pop
test
and
negl
adc
and
lods
inc
sub
js
xchg
dec
in
mov
mov
mov
lods
inc
cs
jmp
mov
es
aam
and
add
and
clc
lock
dec
inc
and
loope
add
adc
ss
fadds
mov
or
push
push
jecxz
call
pop
pop
sarb
mov
push
enter
sbb
or
adc
adc
outsl
pusha
sub
andb
adc
mov
adc
cmpsl
inc
je
lock
cwtl
daa
dec
push
add
push
and
push
xorb
inc
sub
in
xor
dec
adcl
cmpsl
in
addr16
dec
mov
dec
sbb
add
sub
inc
pop
popf
xor
add
sub
xchg
adc
dec
add
sub
sbb
add
addb
ficomps
mov
push
push
sti
cmp
push
add
jp
fcoms
jns
adc
in
dec
repz
test
mov
or
test
aam
das
or
xchg
xlat
fmuls
push
arpl
push
in
pusha
adc
jne
inc
add
repnz
cmp
ja
xchg
lahf
push
add
mov
xchg
popa
ja
inc
in
xor
dec
cmpsl
aas
out
and
sbb
dec
rolb
or
insl
mov
inc
xor
jg
mov
push
push
leave
mov
sbb
mov
aaa
in
icebp
dec
fs
shll
add
bound
pop
mov
and
add
push
and
adc
jg
xlat
or
and
or
pusha
push
and
bts
mov
push
movsl
cltd
and
sub
cld
addr16
add
and
inc
je
push
inc
nopl
imul
adc
sub
leave
loopne
lea
sti
pop
dec
test
dec
enter
fs
and
or
test
xor
xor
movsb
or
test
jb
sub
cmpsb
adc
push
push
push
movsb
in
popa
jns
js
mov
cmp
mov
adc
mov
lods
fidivrs
mov
int
lcall
data16
mov
clc
add
subl
sar
push
add
hlt
pop
jp
clc
pop
add
mov
sbb
pop
jl
mov
push
xchg
pusha
xchg
nop
fs
mov
call
ret
or
ljmp
into
or
rorb
fimull
jo
test
push
sub
or
xchg
pop
mov
push
mov
push
push
repnz
add
lds
push
ret
fdivr
iret
inc
std
add
jae
lock
and
pop
jnp
xchg
inc
sti
mov
fisttpll
das
sbb
adc
mov
test
pop
je
add
push
mov
jl
mov
cld
mov
sti
mov
test
sub
test
imul
pop
loopne
test
je,pn
cmpb
fcomps
movsb
or
xlat
push
mov
adc
push
loop
and
stos
jno
mov
jne
stc
adc
adc
scas
xor
nopl
call
faddl
shl
lcall
sbb
pusha
inc
mov
jnp
lds
sbb
inc
js
pop
sub
mov
cmp
pop
push
sbb
add
adc
pop
fs
adc
test
jno
sbb
xchg
das
aaa
in
push
aas
or
adc
or
adc
nop
or
sbb
or
or
enter
dec
push
mov
frstor
ficoml
push
dec
cmp
jle
dec
fs
or
pushf
jo
dec
cmp
sub
jp
mov
inc
cmp
mov
xor
or
jle
ss
xor
dec
sbb
jg
push
in
pop
pusha
jae
push
sbb
jae
adc
addl
sbb
int
pop
sbb
sbb
and
icebp
and
add
insl
in
add
daa
pop
lahf
cmpl
inc
sbb
insl
push
std
mov
sbb
cmc
jmp
jl
cmpb
adcb
movsb
inc
lock
push
sbb
notl
sub
adc
cltd
inc
xor
ret
aas
pop
pop
jp
mov
or
pop
sub
jmp
sbb
out
test
sub
js
ret
sub
clc
push
popa
popa
and
movsb
inc
je
inc
push
je
aam
je
loopne
pop
cwtl
loop
inc
adcl
jbe
jmp
jmp
push
mov
les
xchg
ljmp
repnz
mov
sbb
lock
subb
inc
add
pop
ret
sbb
push
jae
cmp
add
xchg
cmp
arpl
in
cmpb
dec
adc
push
pop
in
xchg
into
data16
pushf
mov
lock
inc
pop
or
jae
mov
in
addb
mov
mov
rolb
repnz
or
mov
and
fmul
xor
add
test
xchg
add
call
loopne
add
and
fadds
jl
pushf
cmpl
ja
testb
push
sbbl
or
insl
dec
add
mov
pop
sub
aas
mov
shll
addb
aam
and
pop
dec
and
xor
cmp
insl
fnsave
pop
xor
imul
push
jae
bound
stos
dec
xchg
sbb
in
push
shlb
push
xchg
loop
or
jne
and
add
add
cmp
add
add
xchg
xor
in
mov
mov
sub
out
stos
shl
dec
iret
mov
sbb
dec
imul
adcb
pop
add
sbb
dec
mov
sub
xor
bound
xor
xchg
xchg
inc
pop
pop
test
or
cmp
negb
rolb
sti
test
xchg
popf
push
jecxz
xor
add
arpl
int3
and
aaa
mov
sbb
xor
orps
xor
bound
sub
mov
pop
das
mov
or
mov
pop
pusha
pop
aad
and
add
cmpsl
clc
and
aas
adc
es
or
or
pop
ja
dec
fistpll
push
mov
loope
mov
insb
jge
mov
pop
neg
cmpsl
cmp
je
mov
sbb
or
inc
or
dec
js
add
pop
inc
push
lock
mov
pop
sahf
and
es
je
data16
pop
lock
add
inc
lahf
inc
icebp
jp
jno
in
mov
and
push
lock
xchg
xor
call
bound
xchg
add
adc
xorb
daa
not
add
pop
rolb
fs
es
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
jmp
outsl
sti
mov
lods
sbb
sbb
jns
repz
sbb
sbb
jne
sub
or
sub
add
roll
cmovg
js
push
adc
pusha
mov
mov
dec
mov
push
mov
arpl
in
adc
cs
sub
dec
cld
lret
test
or
ret
pop
add
enter
filds
push
or
les
adc
aas
inc
cmp
mov
js
mov
cwtl
or
add
and
ds
movl
xor
add
sub
and
lahf
std
xchg
mov
inc
call
mov
push
fmull
sahf
aaa
xor
sbb
popf
push
and
jbe
pop
or
stos
ds
sub
sbb
xor
sub
fs
or
dec
xchg
jns
enter
outsl
sbb
ds
insl
mov
pusha
stos
add
cmp
add
pop
imul
sbb
adc
jmp
popa
jbe
das
sbb
pop
in
mov
inc
ja
cmp
je
mov
pop
daa
sub
roll
jbe
imul
inc
insl
fdivr
inc
mov
push
cmp
inc
in
jne
jl
and
pop
rolb
adc
xor
dec
mov
xchg
jne
mov
xor
test
stc
push
add
or
nop
and
inc
cmc
je
sub
inc
add
pop
inc
das
adc
and
fisttpl
mov
xor
imul
je
jo
jg
xor
shrb
and
leave
xchg
adc
xchg
inc
lret
movl
push
hlt
fidivs
pop
mov
fwait
jbe
sub
xor
inc
adc
pop
pusha
pop
mov
push
mov
push
and
rolb
stos
add
and
jmp
push
call
mov
inc
xlat
xor
mov
push
push
sub
in
push
sbb
fcoms
xchg
ja
xor
loopne
mov
loopne
or
shrb
and
mov
push
or
or
call
push
inc
lock
xchg
xchg
test
cmp
jbe
sar
sub
push
jecxz
dec
lods
imul
xor
sbb
dec
int
sahf
pop
pop
xor
jg
call
add
into
lock
sub
fldl
inc
and
inc
dec
xor
subl
add
lods
add
jnp
cmpb
inc
sub
and
ss
sbb
daa
test
push
sub
shlb
scas
push
popa
inc
bswap
mov
mov
stc
add
lods
loopne
ds
subl
pop
lcall
mov
nop
dec
mov
fidivrl
leave
hlt
mov
mov
insb
movb
pop
test
adc
in
test
fsubrs
test
stos
sub
push
setae
addb
arpl
fldt
lock
mov
and
sbb
cmpsb
lock
imul
mov
mov
sub
sub
or
and
shlb
js
in
popa
cmpsb
inc
or
cmp
or
test
aaa
fmuls
addr16
inc
xor
inc
in
pop
shlb
push
sub
cli
cmpb
mov
xchg
inc
sub
xchg
push
add
pop
test
and
sub
dec
xchg
gs
or
jns
out
push
fildl
call
ja
mov
lcall
xor
cmp
ss
pop
push
jp
lds
or
sbb
es
add
xchg
pop
adc
lods
dec
imul
ja
lods
and
sub
or
xor
cmp
movsb
jo
stos
and
xchg
push
mov
mov
imul
sarl
xor
push
mov
cmp
sub
sub
or
sub
add
sahf
sub
jno
out
es
xor
cld
or
push
pop
cld
or
js
sbb
dec
test
add
mov
push
add
fadd
or
pop
movb
push
and
cwtl
pop
xchg
jno
test
pop
jge
cld
mov
mov
or
add
pop
add
je
rcll
lret
cs
int
scas
push
push
test
jmp
push
jnp
pop
mov
lcall
ret
shrl
movnti
inc
adc
test
and
sbb
sub
or
push
sbb
adc
ljmp
mov
sub
dec
sub
scas
shll
inc
cmp
pop
sti
mov
lds
add
push
cmp
push
adc
ds
pop
and
sbb
insb
and
dec
outsb
adc
insl
jo
adc
xchg
mov
jl
gs
pop
gs
test
or
add
inc
rcll
call
test
std
call
sbb
inc
mov
pop
dec
inc
or
inc
leave
and
push
sbb
pop
and
sahf
adc
pop
adcb
dec
inc
or
pusha
or
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
push
adc
jno
adc
jo
out
loopne
push
and
inc
lock
add
add
jo
jnp
addb
fnstenv
pusha
stos
add
test
and
and
movups
jns
pop
fadd
xor
das
sub
jno
insb
add
lahf
or
jnp
add
hlt
out
add
clc
sbb
lock
addl
pop
sub
add
sub
movl
jecxz
loope
inc
mov
jne
cmp
addb
sbb
pop
dec
call
sbb
and
inc
outsl
xchg
add
jmp
cmovb
or
in
sub
push
mov
cmp
jmp
lahf
or
sbb
jp
xchg
adc
adc
call
adc
pop
arpl
push
call
mov
jno
pop
ja
dec
jecxz
pop
mov
cltd
lods
outsl
push
mov
sbb
pop
ja
jb
jp
lds
adc
add
mov
push
or
sbb
add
popa
push
mov
pop
and
mov
cmpl
data16
ja
out
lds
in
test
test
mov
iret
sub
ret
ret
daa
in
adc
aaa
iret
jne
mov
xchg
imul
add
inc
push
xlat
adc
mov
mov
lret
int3
cmp
xchg
dec
int3
ffree
insb
ja
pop
sub
test
jmp
add
mov
orl
xor
dec
pop
fisubl
sbb
dec
or
adcl
mov
sbb
mov
mov
dec
movb
push
xor
sbb
cmpb
testl
jge
adc
inc
xchg
mov
push
call
movsb
test
sub
pop
dec
cmp
push
pushf
lret
scas
sbb
push
push
leave
adc
pusha
add
rolb
sub
fwait
ret
jp
mov
push
dec
mov
stos
and
adc
cmp
into
movb
stos
adc
jmp
jl
test
jecxz
or
arpl
shl
add
xlat
daa
roll
movb
add
inc
and
mov
jecxz
lahf
ret
inc
ret
es
push
outsl
lea
and
mov
pushf
or
lcall
jo
add
lock
mov
sbb
lods
jo
inc
jmp
cmp
les
sub
insb
mov
adc
jg
lods
adc
and
jno
in
lcall
pop
js
sbb
add
daa
pop
mov
pop
montmul
cmpsb
push
push
push
dec
jmp
xchg
loopne
imul
stos
xchg
rcr
adc
or
add
ss
pop
imul
fstpl
sbb
mov
stos
mov
les
sbb
in
adc
iret
sahf
or
inc
sbb
insw
rcrb
push
sub
dec
mov
imul
ss
call
xchg
xor
mov
lahf
aad
jp
adc
ficomps
jl
clc
push
addl
lret
mov
push
out
pop
sbb
cltd
add
push
call
daa
pop
pop
add
inc
and
cmp
test
je
test
inc
adc
sti
and
popa
dec
or
mov
ret
inc
in
or
xorl
jne
ss
mov
push
addr16
push
cmp
jl
imul
or
je
inc
dec
add
xor
mov
mov
push
add
dec
pop
xchg
fadds
imul
mov
xor
lock
daa
jbe
dec
or
in
inc
mov
imul
inc
mov
rorl
shl
sub
or
in
jno
sahf
push
leave
inc
push
ror
pop
lods
adc
sub
jo
cmp
aam
jmp
jbe
mov
enter
es
hlt
inc
scas
xchg
cmp
mov
je
adc
mov
add
and
adc
ja
xchg
xchg
cmp
push
outsb
sahf
int3
in
movsb
adc
aam
adc
cmp
stc
adc
lcall
add
or
mov
in
xchg
xchg
cwtl
sahf
leave
inc
xchg
cmp
sbb
lahf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
in
loopne
nop
or
out
mov
mov
rclb
sbb
pop
fsubs
mov
pop
adc
push
mov
movsb
fisttps
xor
or
add
lds
push
mov
jle
test
push
and
push
mov
xchg
xchg
fimuls
dec
sub
int
sub
adc
or
hlt
cmpsb
lock
dec
push
jle
fists
push
push
jmp
sbb
or
repnz
mov
imul
pop
cld
add
mov
shrd
xor
or
dec
mov
xor
sbb
adc
push
sbb
push
inc
or
pop
in
xchg
mov
push
jo
xchg
adc
jl
enter
xacquire
inc
add
or
pusha
das
xchg
or
outsl
adc
push
cmp
push
push
sbb
push
jo
xchg
int
scas
xor
xchg
mov
lea
dec
adc
push
jns
ja
or
adc
je
nop
lea
cmpb
or
sbb
jne
jo
into
lock
or
adc
add
cmp
and
adc
bound
inc
fidivrl
sub
and
or
pop
je
fwait
mov
push
and
jecxz
sub
mov
movsl
inc
xchg
jb
jp
push
add
cmp
xor
pusha
rcl
movsl
mov
and
es
adc
xlat
mov
mov
mov
lahf
inc
js
test
jge
inc
pop
pop
arpl
jb
test
xchg
mov
lret
test
jmp
popf
ljmp
pop
enter
dec
sbb
xlat
jle
movb
rorl
sbb
cmp
mov
xor
scas
aam
test
jb
stc
mov
cmpsl
std
pop
scas
sbb
mov
push
or
jecxz
lds
xlat
push
loopne
lods
dec
pop
insb
and
movsb
add
and
fnstenv
jl
cmp
cmp
sbb
push
movsl
and
dec
and
add
cmpsb
push
out
inc
and
cmp
in
ja
mov
add
sub
cmp
out
pop
shrb
pushf
push
jg
cmpsl
in
xor
or
sub
lea
test
pop
or
sub
inc
ror
aam
adc
imul
mov
push
sbb
cmp
jae
inc
pop
aam
aaa
arpl
cmp
adc
jo
inc
lods
sub
pushf
xor
pop
ss
dec
aam
js
xor
xchg
sbb
adc
adc
rol
mov
sbb
in
daa
and
rcrl
xchg
and
popa
mov
fadd
enter
dec
jbe
mov
push
cmp
xlat
dec
dec
inc
and
or
js
pop
jmp
sub
popf
in
sbb
mov
nop
mulb
sub
dec
sub
pop
jns
bound
hlt
shlb
mov
test
pop
sub
sub
inc
sbb
sahf
add
stos
shrb
lret
adc
sub
jbe
test
and
adc
inc
aas
das
mov
imul
call
add
lock
adc
push
pop
xor
mov
popa
sub
imul
rcrl
or
test
rolb
or
xchg
lock
adc
dec
xchg
adc
movb
enter
inc
and
mov
or
popa
push
xchg
jo
je
pop
xor
sbb
mov
popf
add
lods
xchg
push
dec
jmp
sti
push
and
popa
popf
sbb
sbb
mov
sub
adc
jl
cmp
rcr
das
add
inc
cmc
pusha
jge
imul
fdivrl
lcall
xor
inc
adc
fildl
or
add
mov
mov
jle
cmc
pop
sbb
aad
push
sub
xchg
pop
add
adc
pop
push
inc
jl
jmp
mov
sub
test
loopne
loopne
cmpsb
pop
adc
movzwl
add
imul
imul
push
dec
cmpsl
outsb
testl
xchg
enter
stos
loopne
and
push
cmp
inc
push
inc
imulb
xor
insb
cmp
pop
jmp
xchg
dec
in
cmp
push
cmpsl
xchg
mov
mov
xchg
pop
add
add
pop
adc
push
adcl
ret
jae
stos
pop
and
pmullw
mov
ret
imul
testl
outsl
xor
push
daa
xor
aaa
push
or
cmpsb
add
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
pushf
lahf
aaa
sub
cmpsb
shrl
out
lds
or
cmpsl
pusha
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
mov
mov
js
enter
mov
daa
mov
adc
cs
adc
add
add
pop
and
sub
jecxz
mov
cmpsl
xor
xchg
push
das
mov
add
mov
xorb
in
popf
cmp
sub
jne
mov
inc
and
mov
inc
xchg
ja
lcall
cmp
cmpsl
subb
sbb
adcl
bound
push
aad
aas
and
push
add
dec
mov
in
ret
jb
addr16
mov
sub
sub
inc
out
pop
xchg
insb
je
sbb
aaa
add
aad
cmp
loop
and
jne
push
loop
sub
dec
jnp
aaa
mov
mov
jo
aam
lahf
js
inc
and
adcb
xchg
movsb
je
out
sub
dec
ret
push
adc
mov
push
mov
mov
xor
push
or
jge
clc
testl
repz
sbb
pop
sbb
mov
and
sub
cmp
test
shlb
adc
enter
xchg
fstps
sbb
inc
cmp
or
sub
pop
add
jne
add
jb
aam
xor
jg
pop
sbb
movsb
loop
outsb
hlt
mov
xchg
test
pop
or
mov
arpl
inc
mov
sbb
cld
sub
push
ret
mov
inc
sbb
sub
invd
movups
jne
pop
mov
insb
leave
inc
pop
add
fidivs
inc
mov
push
push
sahf
imul
adc
call
lock
arpl
shlb
pop
fcoml
loopne
les
in
nop
fnstsw
or
mov
adc
mov
inc
push
and
lret
pop
rol
test
rcl
mov
adc
data16
mov
mov
mov
mov
cmp
shlb
sub
mov
lock
das
and
sub
jl
add
lods
sub
adc
mov
sahf
and
mov
js
mov
mov
jl
enter
push
dec
addr16
jo
sarb
push
jns
push
outsl
xor
in
cmp
jmp
mov
mov
sub
aas
int3
mov
lods
int3
adc
or
mov
or
clc
mov
pop
in
nop
mov
mov
cwtl
push
test
add
testb
insb
gs
adc
sbb
pusha
mov
insb
lods
js
inc
leave
mov
mov
add
push
xchg
mov
loop
mov
pop
and
fstl
xor
jo
dec
adc
sbb
pushf
jne
mov
and
add
cmp
pop
mov
imul
test
dec
xchg
out
imul
lock
or
and
dec
xchg
adc
mov
fadds
andb
dec
push
xlat
jbe
xchg
sbb
dec
pop
outsl
jmp
sub
lret
nop
hlt
leave
leave
sub
sub
sbb
push
popf
je
cltd
test
cmpsb
sbb
aaa
adc
cmp
cmp
add
clc
hlt
lock
pushf
pushf
pushf
in
call
mov
fsub
fnsave
clc
in
clc
adc
sub
fcoms
sbb
aas
aas
pop
mov
mov
cmpl
adc
xor
mov
sub
jl
hlt
sbb
pop
aas
xor
or
push
fmul
xchg
jecxz
mov
or
cltd
std
add
in
adc
mov
jmp
lods
je
movb
out
movb
mov
mov
mov
popa
bswap
lock
je
jb
inc
mov
pop
and
mov
push
sub
inc
pop
pop
push
incl
dec
cld
and
add
xchg
xor
xor
je
push
dec
adc
dec
adc
adc
push
or
cmp
sbb
daa
enter
pop
sti
inc
adc
faddl
push
jb
addr16
js
or
es
mov
and
sbb
jo
mov
cmp
test
mov
add
in
xchg
and
or
push
popa
mov
cmp
jle
push
pop
cmp
mov
inc
adc
insb
dec
sub
call
sub
pop
and
and
movsb
push
add
pop
dec
jmp
jmp
push
sbb
sahf
imul
jmp
lods
popa
or
sar
ret
jmp
push
lock
dec
rcll
nop
test
daa
adc
mov
sbb
shlb
mov
inc
sub
or
push
or
jmp
xor
arpl
imul
lock
call
jl
inc
push
mov
or
outsl
mov
nop
or
adc
je
arpl
inc
dec
sahf
out
jne
sub
mov
add
or
dec
fbld
jne
xor
sub
clc
adc
jl
cmp
lods
or
std
pop
mov
push
adc
jle
lea
loope
mov
fcomps
sbb
ds
jb
push
sub
xor
gs
rcrl
push
decb
in
push
lock
dec
inc
pop
cmpsl
sub
dec
adc
jb
sarb
inc
sub
adc
adc
dec
test
jo
test
jge
cmpsb
sub
push
test
mov
adc
add
ret
pop
test
mov
mov
cmp
adc
inc
in
inc
or
gs
pop
sbb
sub
out
mov
fmuls
and
clc
pop
sbb
loop
and
xor
push
sub
cmpsb
test
jne
in
js
repnz
jmp
ds
add
adc
loop
mov
push
push
rorb
adc
add
test
inc
outsb
jne
sahf
rolb
ja
add
or
loopne
jle
fsubs
fmuls
mov
jl
add
mov
jl
or
push
ds
cmpsl
adc
adc
mov
icebp
pushf
mov
push
push
inc
push
and
fstpl
dec
dec
lcall
mov
pop
fs
notb
popf
mov
jg
movsb
xor
std
push
ret
mov
prefetchw
or
add
sub
xchg
cld
mov
pop
rcll
mov
movsb
push
test
cmp
inc
xchg
and
or
cmp
imul
mov
aam
dec
or
push
imul
adc
or
dec
add
sub
clc
or
jo
jnp
mov
mov
adc
popa
xchg
imul
jne
stc
es
fmuls
xor
fs
add
ds
dec
pop
rorb
rclb
arpl
pushf
mov
into
jl
adc
mov
jmp
push
dec
push
and
mov
fmull
push
mov
adc
dec
aam
jb
in
mov
mov
cmp
mov
in
rorl
push
or
out
jmp
pop
repz
repz
pop
daa
das
aaa
push
xor
mov
sub
aaa
sub
sub
sub
sbb
or
es
pop
adc
das
adc
js
mov
or
and
loop
ss
fsts
xchg
es
movaps
adc
es
pop
loope
pop
push
pop
ljmp
cmp
shll
jb
mov
add
pop
repnz
jns
sub
fldt
add
xchg
push
in
or
frstor
mov
lock
sub
inc
ret
cmp
outsb
sub
adc
outsb
adc
call
negl
mov
movsb
jo
sbb
adc
lea
pop
movsl
xchg
or
cmp
push
mov
cmpl
hlt
add
iret
jne
xchg
jo
dec
push
sbb
add
into
in
or
xor
sbb
movsb
adc
fld
cmpb
fmuls
rcrl
xchg
adc
hlt
xor
mov
and
rcll
pusha
enter
and
mov
xchg
sub
cmp
inc
adc
int
cmp
jle
fwait
push
and
prefetcht1
jne
insb
outsl
xor
jo
push
out
sbb
xchg
sub
ljmp
shl
pop
and
xchg
les
out
add
add
xchg
orl
pop
cwtl
fadd
push
xor
mov
cltd
popf
orl
rcll
jmp
test
mov
adc
sub
ss
jbe
test
scas
ror
push
sbb
cmp
into
sarl
mov
sti
dec
psrad
fnstcw
adc
mov
ljmp
arpl
in
daa
jb
add
scas
in
inc
sub
adc
scas
dec
or
push
xor
cmp
enter
pop
jnp
pop
inc
mov
jmp
jge
inc
inc
aad
jo
and
lods
test
fnstcw
dec
jne
and
sbb
or
es
dec
data16
je
enter
inc
sahf
into
pop
and
call
lock
jb
mov
sub
mov
outsb
jno
lods
shlb
push
stos
push
das
sbb
rolb
mov
jns,pn
cmp
lock
or
or
in
shll
xor
mov
pop
daa
xor
mov
pop
addb
cmpsl
push
int3
inc
pop
fsubl
mov
adc
popa
bound
mov
pop
mov
xor
xor
sbb
sub
adc
mov
aad
jle
insb
and
and
sbb
lcall
push
mov
xor
dec
mov
dec
in
js
fdivl
mov
les
scas
test
fsub
pop
or
inc
dec
in
aam
sbb
ds
adc
xchg
outsl
lock
mov
loopne
pop
inc
leave
imul
and
dec
xor
cmp
and
mov
inc
lret
loopne
push
add
das
call
mov
rorl
mov
adc
inc
adc
sub
sbb
mov
jmp
inc
test
mov
lock
lock
inc
xchg
dec
mov
es
sarb
call
jmp
cld
loopne
dec
push
jns
push
inc
lret
call
pop
lock
mov
inc
mov
ret
lds
inc
int3
inc
xchg
xchg
or
and
pop
pop
cmp
mov
xlat
pop
clc
add
int3
out
or
sar
sbb
adcb
push
rolb
stos
dec
int3
lock
test
ret
add
and
dec
imul
movsb
adc
cmp
mov
push
sbb
rclb
daa
fdivr
popf
jmp
int
cld
jle
dec
cmpsl
mov
inc
dec
je
out
push
jmp
xchg
imul
xor
jmp
adc
pop
jmp
mov
adc
push
add
sub
dec
pop
int
add
or
scas
sbbb
testl
cld
out
mov
dec
push
adc
pop
popa
push
js
jne
sbb
jmp
push
adc
in
push
fs
sbb
dec
es
lock
jle
sbb
jle
inc
arpl
or
mov
test
scas
iret
data16
push
cmp
in
xor
jo
pop
repz
pop
repnz
into
subl
je
int
pop
aam
cltd
jbe
pop
cmp
adc
incl
adc
mov
sbb
sub
xor
pop
insb
mov
leave
in
adc
xor
xchg
fxam
pop
push
addr16
dec
jo
cmc
xchg
mov
push
stc
or
out
dec
push
insb
or
outsb
push
or
lret
inc
je
push
xor
dec
mov
inc
cmc
mul
mov
add
inc
inc
fs
add
dec
jl
lret
dec
int3
jo
xchg
test
mov
nop
add
cmp
cmp
pop
gs
add
cmp
in
pop
adcb
arpl
arpl
insl
or
aaa
or
jmp
push
push
inc
daa
push
inc
pusha
ss
inc
adc
cmp
add
inc
outsb
arpl
xor
gs
insl
in
arpl
outsl
ja
mov
xor
popa
scas
andb
pop
outsl
jae
mov
add
nop
push
sub
enter
shlb
bound
xlat
or
inc
adc
sbb
push
push
push
push
xchg
mov
nop
hlt
cld
rorb
xchg
das
dec
addr16
rcrb
loop
divl
push
inc
jb
sub
push
les
push
pop
xchg
inc
out
add
adc
out
pop
pop
add
mov
scas
add
and
mov
scas
push
aad
js
rcrl
pop
inc
push
stc
test
pop
ret
pushf
enter
lcall
or
cmp
sbb
cmp
xchg
iret
lea
or
pop
addb
nop
xchg
and
and
cwtl
pushf
mov
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
fadds
sub
ss
inc
push
movsb
aas
adc
out
pop
mov
adc
pop
arpl
sbb
lea
les
sub
cmp
lea
mov
nop
lret
sbbb
lods
mov
nop
fcompl
nop
lret
cwtl
add
lret
cs
sbb
xor
dec
test
gs
sub
xchg
add
test
movsb
xor
mov
adcb
sub
push
sbb
call
gs
int3
or
rolb
add
aam
test
cmp
dec
xor
xchg
add
pop
in
push
push
movsb
je
test
nop
lret
lock
gs
sub
hlt
clc
add
in
xor
iret
add
add
fcoml
sbb
push
movsb
xor
adc
nop
lret
inc
sbb
add
sbb
and
lods
sub
xchg
add
push
movsb
xor
cld
xor
popa
and
pushl
fldenv
xchg
pop
popa
std
dec
movsl
sub
push
mov
pushf
add
push
sbb
inc
insb
outsl
jae
mov
ss
adc
push
cmp
inc
push
xor
test
fcmovbe
aas
push
in
add
daa
test
je
jne
or
inc
xchg
inc
push
aas
addr16
fs
pop
scas
pop
dec
arpl
jae
ret
sbb
mov
push
dec
fs
lea
add
insb
jns
jp
jae
sbb
out
bound
pop
jge
dec
dec
pop
pop
lahf
lcall
adc
rcr
or
icebp
push
add
bound
adc
xchg
into
es
pop
mov
pop
dec
xor
push
les
daa
mov
xor
jnp
subb
out
cmp
in
push
inc
pop
mov
mov
pushaw
and
and
insl
and
sbb
shll
sbb
inc
bound
jl
out
jno
shll
and
fs
jg
fcompl
das
adc
outsl
addr16
jne
insl
aaa
ss
in
outsb
das
pop
fs
lea
or
mov
faddl
das
sbb
cmp
pushf
loop
outsl
arpl
push
sbb
pop
push
xchg
movntps
inc
pop
outsl
pop
dec
sub
adc
fadds
xchg
mov
and
jl
jp
mov
cmp
xchg
push
add
scas
inc
mov
daa
aad
fnsave
dec
sbb
subl
cmpsb
add
fildl
leave
dec
pop
in
pushf
and
rcr
dec
pop
jb
cmpsb
popf
add
outsl
dec
or
pop
xor
inc
dec
cmp
sbb
addb
add
jno
js
and
pop
or
xchg
or
pop
loope
xor
xchg
pop
call
sub
push
xor
pusha
xchg
and
and
fbld
and
jo
xor
inc
mov
subb
push
push
pop
je
inc
push
pusha
push
jp
adc
test
push
shll
fbld
pop
dec
loop
pushf
outsl
loop
es
xor
mov
push
es
mov
or
sbb
jb
xchg
sub
andl
inc
push
xor
or
adc
pop
movsl
lret
add
inc
mov
pop
cmp
cmp
xchg
mov
lcall
dec
jae
insl
inc
cmpb
fs
add
insb
lods
pusha
test
clc
xor
push
push
inc
inc
jecxz
or
inc
inc
jbe
inc
inc
decb
inc
mov
fs
adc
adc
jnp
sbb
aam
loope
daa
adc
cmp
addl
mov
cmp
je
mov
shlb
add
aaa
xor
ss
sub
imull
loop
xchg
leave
sbb
testl
aaa
cmp
in
inc
mov
or
movsb
pop
inc
sbb
push
out
xchg
rolb
pop
pop
sub
cmp
add
shlb
lret
inc
out
xor
xchg
ss
xor
insb
call
and
aas
in
sub
push
push
dec
rcr
jge
sub
sarb
pusha
cmp
push
leave
inc
add
xor
lds
js
sub
adc
daa
mov
pop
dec
es
xor
mov
scas
or
movsb
pop
mov
daa
push
push
loope
insb
mov
in
adc
pop
add
add
push
shrb
test
arpl
pop
add
je
fmuls
inc
dec
push
ss
pop
in
sub
outsb
outsl
sub
inc
insb
insb
mov
fmul
pop
push
outsl
pop
or
and
sub
inc
mov
fldl
test
mov
adc
or
sbb
cmp
jne
add
mov
out
es
mov
pusha
ficoms
pop
cmp
mov
sub
insl
fs
addr16
push
ficompl
inc
imul
mov
or
shlb
lret
sub
and
mov
mov
inc
dec
mov
add
cs
inc
mov
ja
dec
mov
dec
popf
cmp
lahf
mov
inc
mov
lods
xchg
xchg
out
in
xchg
test
inc
dec
je
in
cmp
jo
insb
push
loopne
pop
es
push
in
lods
lods
push
insb
icebp
sub
subl
dec
cmp
adc
add
cld
dec
mov
das
sbb
adc
in
insb
mov
mov
rorb
jl
aam
mov
jbe
mov
xchg
inc
adc
pushf
adc
cmp
hlt
pop
pop
jo
adc
pop
push
jl
jnp
push
push
cmp
inc
jg
xchg
inc
add
repnz
pop
mov
je
loopne
outsb
fildl
stc
out
jge
cmp
in
add
imul
xor
xor
shll
add
xchg
fldt
mov
sahf
cmp
and
js,pt
and
in
imul
pusha
rorl
int3
dec
std
pop
xchg
inc
jl
xlat
incl
cld
adc
sbb
outsb
sbb
pop
sbb
sub
or
jae
popa
lock
nop
mov
mov
adc
loopne
mulb
xchg
ds
clc
shrb
xchg
add
or
inc
mov
inc
push
adc
pop
push
js
fdivr
orl
jne
add
enter
push
push
cmp
fildll
test
mov
inc
jle
add
or
popa
mov
arpl
lret
int
inc
or
or
addr16
cmpl
pusha
fwait
pop
sbb
adc
lock
nop
inc
and
pusha
adc
xlat
pusha
sub
sar
popa
sahf
or
add
in
jbe
cmp
cmpsb
jp
iret
adc
mov
add
insb
repnz
lcall
insl
popf
adc
fxsave
lock
push
and
dec
enter
out
cmp
fmul
inc
jl
cmp
incl
push
outsl
jo
jo
loop
sahf
pop
fidivrs
sbb
adc
fdivrl
dec
cltd
xchg
hlt
fidivrs
or
pop
xchg
js
mov
roll
add
lods
dec
mov
sbb
xchg
out
push
fsubl
lahf
sbb
les
mov
xchg
mov
sbb
clc
imul
xor
cmp
push
add
push
add
xchg
sub
pop
add
inc
jbe
aad
fwait
adc
insl
negb
and
xchg
mov
lock
ficoms
and
mov
les
int3
pop
and
or
test
sbb
in
mov
xchg
fcom
rolb
inc
cwtl
das
and
or
xchg
ja
pushf
dec
fcomp
and
or
xchg
loopne
loopne
ds
inc
add
push
jo
and
popf
ss
push
mov
daa
and
sbb
inc
ficoms
add
fnstsw
jo
dec
adc
shlb
test
rcrb
pop
push
jmp
rcrl
jbe
insb
or
dec
les
scas
and
adc
add
add
ja
bound
punpckhbw
ret
in
insl
ret
add
or
xchg
hlt
dec
jmp
inc
push
cmp
je
sbb
shl
xchg
mov
xorb
rclb
addl
cmc
ja
fistpl
fdivrs
in
pop
sub
push
lret
dec
dec
pop
inc
or
inc
inc
jnp
enter
add
push
test
pusha
imul
cmpsl
pop
sbb
push
and
or
enter
or
cmp
int3
test
iret
imul
leave
adc
and
aaa
test
push
dec
inc
daa
push
adc
icebp
and
pop
add
js
call
add
jmp
outsl
push
pop
sub
xchg
std
push
or
jb
testl
shrl
add
push
sbb
movsb
and
add
cmpsb
test
adc
inc
dec
mov
repz
mov
dec
dec
or
test
sub
hlt
mov
and
pop
mov
add
inc
test
push
inc
add
sbb
and
addb
dec
fistpll
pop
pop
push
inc
insb
inc
push
push
insb
inc
ja
or
inc
clc
data16
xor
mov
push
js
cwtl
cld
or
push
sub
dec
fldt
or
inc
adc
in
sarl
sbb
fadds
aam
mov
ss
push
call
cmp
xor
inc
mov
call
push
jo
mov
loopne
ds
or
into
or
push
inc
cmp
outsb
and
xor
xchg
sub
mov
mov
dec
icebp
cmp
jnp
and
pop
adc
imul
out
inc
ret
loope
sub
nop
pop
pop
sbb
adc
mov
aaa
test
inc
outsb
and
add
xor
or
iret
or
dec
in
and
or
adc
jo
mov
dec
xchg
push
outsb
dec
adc
mov
dec
dec
jne
cmp
adc
jns
jns
add
sbb
je
test
scas
pop
and
inc
sbb
enter
rcrl
les
cmp
iret
jo
dec
xchg
sub
dec
loopne
push
or
mov
inc
mov
fldl
aam
std
fstl
popa
jno
testb
xor
add
lea
mov
inc
pop
movsl
les
inc
ds
dec
sbb
je
lahf
cs
cmpsl
pop
dec
mov
sbb
arpl
adc
mov
test
xor
enter
shlb
sbb
and
sbb
add
or
mov
cmp
push
cs
cs
test
popa
jecxz
jmp
inc
mov
inc
loopne
push
pop
jmp
ret
fxch
pusha
push
insb
in
ret
pop
and
movsb
push
cmp
pop
cs
pop
lcall
mov
enter
and
std
mov
stc
mov
test
inc
iret
sbb
cmc
test
lret
adcl
shl
fstpl
enter
pop
pop
xchg
add
insb
loopne
sbb
jne
push
push
jns
xchg
adc
outsb
mov
in
or
mov
data16
sub
loope
sbb
inc
pop
sysexit
xchg
sub
outsl
nop
and
aad
rorb
enter
aad
mov
xor
mov
jb
adc
push
mov
neg
inc
pop
xor
outsl
arpl
dec
adc
inc
sahf
mov
or
mov
inc
xchg
test
loop
and
add
mov
inc
enter
push
jns
ljmp
inc
sarb
adc
or
add
push
sub
inc
push
inc
cmp
push
dec
push
cmp
push
jo
out
or
pop
jo
aas
inc
pop
repnz
lock
cltd
inc
jl
fstl
xchg
imul
cld
cmp
inc
add
add
inc
jmp
sahf
xchg
mov
xor
sub
or
push
fsub
cmpsb
aam
cli
imul
call
icebp
in
fs
add
rclb
popa
cmp
faddl
lcall
sub
imul
inc
cmp
push
xor
jle
mov
or
jle
dec
push
sub
adc
fldl
inc
sub
inc
xor
push
inc
inc
or
orb
int
cmp
flds
adcb
or
mov
sub
dec
mov
mov
and
jl
push
lcall
sahf
sbb
daa
and
andb
push
xlat
pop
pop
insl
or
dec
adc
out
inc
xchg
inc
mov
dec
inc
pusha
mov
dec
ret
or
and
xchg
mov
andl
jbe
xchg
add
mov
adc
movsb
je
push
add
js
xchg
push
xchg
mov
sbb
jge
mov
xor
jg
cmp
mov
lcall
jb
adcl
loopne
adc
adc
stc
fstl
mov
jle
cmp
jge
mov
faddl
fstpl
gs
lea
mov
push
add
imulb
lock
sub
jle
xchg
or
jmp
and
cmp
xchg
or
sarb
adc
add
mov
sar
cmpl
sbb
sbb
push
add
sbb
loope
scas
call
push
pop
mov
add
adc
ss
jge
push
or
push
add
or
cmpb
ret
movb
sub
std
mov
fisttps
add
sbb
dec
clc
inc
lods
fwait
push
add
nop
mov
cmpsb
in
pop
xlat
aaa
sbb
test
jns
inc
jnp
and
sbb
dec
sahf
outsl
cmpb
fildl
jne
movb
pop
popa
jmp
cmp
xchg
rclb
aas
dec
cmpb
add
loopne
int
les
cmpb
aam
es
fists
add
jae
xlat
and
cmp
out
and
popf
pop
out
mov
sahf
jp
je
mov
out
add
or
mov
sbb
mov
mov
push
dec
sarl
xlat
xor
mov
jo
inc
adc
nop
jns
and
or
out
js
fwait
js
cmpsl
xchg
and
dec
js
jnp,pn
daa
pop
jb
jge
and
or
add
stos
dec
pop
cmp
in
fidivl
lods
xchg
aaa
sbb
xor
push
dec
in
mov
jb
out
xor
xchg
cmpl
mov
xchg
fisttpll
clc
cs
inc
cmp
cmp
dec
icebp
cmp
pushf
shrl
inc
sub
add
mov
pop
fiadds
dec
jl
adc
pusha
shrb
jl
mov
icebp
fidivs
not
and
jp
and
sub
inc
aam
mov
repz
mov
dec
mov
aaa
jmp
hlt
testb
sbb
ds
jg
nop
xchg
mov
out
add
sub
jae
push
pop
mov
jnp
pop
xor
pop
xor
aad
aam
bound
je
adcl
imul
adcb
ret
add
dec
cmpsb
cmp
in
psraw
in
aaa
imul
fcomi
sbb
xlat
mov
flds
mov
sahf
jnp
lcall
lods
xor
pop
loope
cmpsb
cltd
in
fadds
cmpsl
sbb
shrb
xor
pop
aam
out
adc
mov
scas
ret
shrl
aad
aad
or
aad
addb
aam
add
cmpsl
push
and
add
lcall
std
and
mov
or
add
sbbl
cmp
cmpb
push
jne
mov
stos
dec
mov
adc
mov
into
xor
test
jge
sub
in
push
adc
test
mov
ret
out
mov
cltd
add
outsb
xchg
out
xchg
adc
movsb
aas
push
sbb
lahf
insl
inc
fimuls
adc
push
push
adc
and
pop
sub
repnz
rolb
repz
push
inc
ljmp
pop
clc
and
dec
sbb
dec
dec
jl
icebp
lods
pop
ja
testb
mov
pop
popa
sub
fimull
int3
add
imul
mov
lret
push
pop
mov
jae
repnz
pop
sub
shrl
xchg
hlt
imul
push
xlat
mov
ss
enter
cmp
jmp
push
fsubr
imul
mov
xor
add
mov
rorb
adc
or
or
call
pop
cld
add
lock
dec
mov
shlb
fdivs
pop
add
mulb
push
lods
or
loopne
add
xor
mov
mov
outsb
and
jne
xor
jne
jmp
into
fcomps
call
pop
adc
aas
rcrl
pop
fmul
jecxz
dec
std
pop
pushf
push
popa
test
jae
inc
orb
cmp
les
push
inc
bound
and
dec
sbbb
ljmp
cmp
or
or
leave
lods
mov
xor
mov
mov
sti
and
and
xchg
sub
stos
ss
xchg
aas
sbbl
and
hlt
pop
push
test
in
ss
or
fs
mov
xor
das
rorb
not
and
push
push
mov
cmpsb
subl
xchg
add
mov
stos
mov
pop
movsb
ss
enter
dec
cmp
iret
inc
and
jle
cmpsl
cmp
add
or
mov
adc
adc
xorl
aam
or
mov
pop
push
push
and
xor
lods
pop
adc
cmpl
jbe
incl
data16
pop
aaa
cld
xchg
add
pusha
jnp
sub
fildll
adc
adc
inc
test
mov
add
repz
pop
in
test
pop
mov
jp
dec
clc
adc
mov
jno
adc
add
sbb
adc
push
add
adc
adc
test
testl
adc
sbb
and
push
out
clc
sub
cmp
push
push
sbb
pop
test
push
adc
lock
enter
xlat
sbb
dec
and
or
xchg
sub
sub
push
mov
mov
jle
clc
adc
inc
clc
es
pop
in
in
and
sbb
or
push
sbb
sub
pop
loope
and
lods
pop
sbb
sbb
sbb
iret
je
and
jo
xchg
sbb
rcl
sub
xor
push
jbe
adc
push
and
mov
mov
sub
push
cmp
or
push
push
pusha
mov
pop
cmp
add
rcl
cli
dec
cwtl
stos
inc
pop
rclb
push
mov
lea
cmp
shll
test
or
adc
fcmove
inc
add
lock
add
cwtl
push
mov
shlb
cmpsl
xorb
mov
jns
push
push
or
outsl
jae
mov
mov
dec
add
mov
and
bound
aaa
adc
xchg
adc
shrl
cmp
nop
mov
inc
movsl
xor
ret
mov
scas
mov
add
xchg
mov
sbb
cltd
neg
xchg
mov
xor
imul
movsb
lods
insb
push
pop
pop
addb
pop
adc
movsl
jns
adc
mov
in
adc
or
mov
lea
lea
xchg
cmp
pop
or
jne
pop
nop
into
or
inc
popf
sbb
mov
andb
sub
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
mov
pusha
jmp
arpl
dec
imul
in
xor
cwtl
sbb
in
push
shrb
xchg
sub
mulb
xchg
pop
add
sbb
jecxz
add
sub
frstor
out
mov
push
lods
popa
mov
sbb
ret
add
or
mov
add
hlt
or
fildl
sbb
ret
pop
in
and
decl
sub
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
sbb
push
pop
leave
leave
leave
leave
add
add
leave
leave
leave
leave
add
push
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
pmulhuw
fs
icebp
repnz
in
hlt
cmc
div
mov
mov
clc
das
outsl
inc
iret
adc
inc
out
jle
pusha
dec
cmp
repz
inc
push
cmp
repz
repz
sub
and
repz
xor
adc
or
iret
repz
add
cld
cmp
xor
out
hlt
add
clc
push
in
cmp
repz
aam
iret
repz
int3
fadd
sarb
mov
lods
mov
repz
test
mov
mov
cmp
repz
subb
sahf
add
jo
cmp
cmp
jns
out
cmp
cmp
sahf
out
sahf
cmp
cmp
cmp
jns
out
cmp
cmp
cmp
jns
out
cmp
cmp
popf
out
sahf
cmp
cmp
cmp
cltd
cmp
sub
inc
movsb
dec
rcrb
fs
mov
mov
test
popf
mov
and
jo
inc
jb
and
xchg
subl
out
mov
mov
inc
jl
xchg
pop
mov
ja
pop
pop
sbb
inc
aam
test
push
or
bound
mov
add
xorl
es
jle
and
add
pop
pop
daa
push
sbb
popl
pop
mov
jo
arpl
jo
fcoml
mov
fs
dec
xor
mov
inc
adc
push
or
stos
std
jb
inc
fadd
jb
cmp
add
sub
lahf
or
add
pop
dec
add
adc
push
divl
or
inc
push
xchg
ss
repnz
or
fidivs
sbb
push
inc
inc
adc
jl
jns
adcl
test
push
iret
enter
dec
jo
inc
insb
mov
push
hlt
stos
dec
repnz
loopne
nop
add
call
adc
sbb
mov
push
sub
pop
cmp
sbb
dec
rolb
or
lret
shr
imul
rcrb
cmp
dec
xor
aaa
push
xor
ds
shrl
push
gs
push
stc
imul
pop
push
sub
daa
jb
lahf
xchg
mov
push
inc
xchg
add
test
iret
pop
or
adc
xor
sbb
cmpb
mov
flds
push
add
mov
xor
in
add
adc
add
jmp
add
add
ljmp
hlt
mov
movb
lods
das
add
jg
push
adc
roll
mov
movsb
icebp
fisttpll
mov
push
push
cltd
aaa
or
inc
mov
or
fs
popa
inc
lcall
fnstcw
scas
loope
roll
xchg
cwtl
daa
xorl
mov
fsubr
push
adc
ret
xor
aaa
mov
mov
ret
loopne
in
pop
hlt
mov
jbe
jnp
mov
movsb
xor
xor
or
movl
or
sub
outsb
cmp
popa
rorl
cli
addl
inc
jmp
mov
out
cld
pop
push
pop
add
dec
mov
into
xor
add
mov
je
pushl
test
dec
inc
mov
cmp
push
leave
gs
cmp
pop
inc
stos
cli
test
add
pop
push
nop
push
jb
cmpsl
pop
adc
jns
cmpb
ja
add
mov
dec
inc
push
rorb
lods
pop
push
jl
cmp
in
xor
inc
add
or
xchg
pop
xchg
adc
aam
inc
add
xor
jbe
inc
dec
sub
or
je
push
faddl
scas
lods
pop
mov
pop
fdivrs
dec
fsubs
push
faddl
lds
stos
inc
dec
add
fistpl
in
adc
add
fs
mov
fnsave
sbb
hlt
adc
imul
push
and
push
sub
fcoml
push
mov
and
mov
das
jmp
arpl
add
jo
adc
cmp
xor
add
cmpsl
ljmp
mov
xor
inc
push
sbb
mov
fsts
sub
movsb
or
pop
mov
xor
jp
loope
lds
inc
push
pop
add
shrd
xor
pushf
sbb
movb
cmp
and
pop
leave
mov
sbb
sub
in
adc
or
push
enter
sbb
pop
or
and
ja
dec
imul
sbb
dec
insl
adc
jg
pop
xchg
stos
mov
cmp
inc
add
jg
sbb
int3
scas
mov
rcrb
adc
aam
xchg
inc
mov
push
roll
cmp
scas
icebp
fsubl
pop
enter
sbb
lahf
xchg
mov
pop
ds
mov
lock
or
clc
push
push
push
adc
scas
dec
lods
and
add
pop
and
je
jg
movsb
rcrl
in
adc
int3
sbb
mov
mov
pop
or
inc
stos
cmpsb
iret
push
daa
rol
shrl
xor
adc
sub
loopne
or
js
inc
dec
in
push
push
mov
cmp
mov
fs
push
inc
bound
mov
sbb
loopne
sbb
fcomps
cmp
int3
pop
ficoms
xchg
jno
or
out
je
inc
inc
daa
sub
insl
fnstenv
xchg
dec
and
xor
xor
dec
imul
jo
push
out
lret
out
pop
aas
add
outsb
pop
arpl
insb
push
arpl
imul
imul
inc
outsl
pop
js
bound
out
mov
jo
jb
jb
popa
or
cmp
dec
xlat
out
mov
push
es
cmp
sbb
addr16
imul
mov
mov
mov
mov
fisubs
arpl
insb
daa
push
jnp
out
push
jg
sub
insb
das
insl
sti
ficomps
loop
sbb
and
cmp
pop
daa
out
push
loop
je
jo
mov
jge
jb
arpl
jns
xchg
jbe
outsl
dec
pushw
das
add
imul
imull
push
hlt
jmp
ret
push
fs
and
call
add
movsb
mov
or
cmp
out
push
add
pop
sbb
push
ret
adc
sbb
jle
je
clc
and
xchg
sub
out
jp
or
aam
mov
inc
mov
rcrl
ret
push
sub
push
fisubrl
dec
push
add
push
or
insb
insb
push
push
jg
mov
out
insl
adc
mov
mov
inc
push
jne
pop
sbb
lods
adc
call
push
lahf
icebp
xchg
inc
mov
call
jne
inc
push
mov
sbb
inc
adc
push
push
nop
xchg
fs
scas
mov
adc
adcl
add
push
push
sub
lcall
jns
dec
xchg
lahf
xchg
inc
outsl
gs
test
adc
cwtl
xor
lods
mov
or
cmp
in
imul
roll
xor
sahf
insl
jae
cmp
clc
inc
push
enter
movb
pop
ret
mov
xor
jge
add
mov
jb
or
jb
jmp
sbb
or
and
mov
adc
movsl
repnz
shll
pop
repnz
sub
add
and
sub
sbb
pop
out
or
mov
inc
movsl
add
inc
nop
push
mov
inc
call
adc
sbb
sbb
pusha
int
or
mov
cmp
add
xor
cmpsb
imul
add
push
pop
pop
or
or
or
or
or
or
out
adc
adc
sahf
out
sahf
adc
push
pop
sbb
lcall
sbb
push
pop
and
and
and
nop
cmp
shll
push
inc
pop
imul
pushf
lods
mov
iret
loopne
add
jns
xor
mov
out
fwait
lods
mov
int
lock
adc
cs
repz
cmp
pop
data16
mov
pusha
cmp
and
add
in
lret
add
jb
adc
adc
cs
sbb
sbb
sbb
xchg
lret
push
or
and
and
cs
sub
dec
sub
xchg
lret
adc
adc
movsb
jb
in
inc
push
inc
test
dec
sbb
push
sbb
push
lret
dec
sbb
scas
shr
xchg
pop
sbb
push
movsl
repnz
sub
pop
bound
dec
pop
and
mov
adcl
and
dec
stos
inc
sub
adc
or
add
clc
or
adc
les
sbb
bound
or
imul
inc
in
insb
or
jmp
inc
es
or
push
lea
or
sti
insl
dec
in
js
lock
std
fwait
int
pop
push
jns
push
das
sub
push
add
call
jl
mov
enter
push
mov
int3
mov
push
ja
dec
jnp
pop
mov
loopne
pop
movsb
repnz
loopne
add
dec
pop
mov
xchg
lock
dec
int3
inc
add
fsubs
out
sarb
and
adc
fsubr
push
sub
xchg
bound
and
pop
out
jnp
hlt
or
add
jmp
orb
push
pop
leave
iret
and
adc
hlt
les
xor
mov
out
subl
mov
push
adc
enter
jl
testl
inc
fcomps
pop
cmp
push
inc
inc
pop
into
push
or
xor
mov
sahf
out
xchg
mov
mov
cltd
bound
addr16
sub
inc
aad
je
push
xor
outsb
pushf
sbb
adc
out
dec
inc
leave
sbb
js
or
jae
lahf
adc
and
lcall
sub
jns
sub
or
xchg
push
add
adc
sbb
push
adc
push
jb
adc
test
and
inc
lods
or
pop
scas
xor
add
sbb
push
sbb
adc
or
or
sbb
add
sbb
push
pop
and
xor
mov
inc
leave
push
and
adc
es
daa
adc
push
leave
add
xchg
dec
sub
and
leave
sub
add
xor
cs
mov
inc
push
inc
xor
or
inc
mov
inc
clc
add
xorl
add
and
sub
xor
pop
or
rolb
xchg
sbb
sbb
dec
add
xor
dec
inc
push
insb
push
mov
repnz
push
fsubl
add
arpl
pop
cwtl
or
in
pusha
decl
push
mov
adc
adc
adc
inc
xchg
adc
les
shl
clc
push
jo
dec
push
sti
jo
dec
popa
bound
pop
sub
inc
mov
nop
lock
pop
dec
lods
addr16
xor
test
adc
loope
xchg
push
subl
scas
pop
sbb
inc
imul
adc
fbstp
bound
add
inc
mov
or
nop
add
dec
adc
xchg
add
and
add
test
or
movl
arpl
inc
in
fisttps
add
jb
pop
pop
lods
sbb
adc
sbb
pop
movsl
and
and
mov
inc
add
push
mov
dec
push
outsb
loopne
popa
orl
inc
outsl
test
add
pop
xor
and
jb
xor
leave
daa
sub
rclb
sub
add
add
xchg
inc
dec
enter
sbb
bound
or
popf
js
js
ds
das
dec
gs
loop
sbbb
xor
jbe
cmpb
or
lret
movsb
adc
xchg
xor
or
dec
jne
cmpl
push
push
or
rcl
push
ljmpw
mov
push
ljmp
inc
push
bnd
or
adcl
push
sbb
clc
add
mov
imul
pop
sub
les
jo
sti
fidivs
fiadds
pop
jbe
push
dec
rolb
adc
mov
mov
add
ds
repz
fcoml
jb
loope
dec
or
gs
cmp
out
pop
and
add
mov
mov
or
ss
loop
cmp
sub
in
ja
cmp
fnstcw
lds
sbb
clc
cmp
inc
add
jo
adc
adc
dec
push
loop
inc
sahf
lar
jle
add
lcall
inc
cmp
mov
leave
out
arpl
push
fstl
and
clc
xchg
gs
pop
js
lods
dec
or
cmpsb
xchg
adc
adcb
adc
adc
or
gs
add
or
or
sbbl
cmpsl
inc
push
sbb
js
push
jb
sbb
and
andb
mov
mov
test
aaa
pop
dec
inc
pop
dec
insl
gs
sub
and
adc
decl
xor
jns
dec
popa
js
outsb
addr16
xorb
and
inc
dec
mov
push
xor
outsl
and
loopne
loopne
sub
or
call
jae
mov
imul
or
es
add
aam
les
rcr
std
xchg
sbb
pop
sub
mov
dec
pop
and
add
popa
sub
cmp
out
pop
push
das
or
mov
cmp
inc
xchg
sub
xchg
pop
adc
inc
leave
push
aaa
cmp
sub
repnz
int3
fcomp
cmp
orl
dec
inc
outsl
dec
cmp
inc
push
mov
xchg
call
in
cmp
jo
enter
cmp
xchg
pop
leave
add
sbb
xchg
stos
xchg
inc
mov
xor
decb
xchg
dec
xchg
cmp
xor
add
push
aam
xchg
xor
push
dec
aam
lock
les
adc
push
fiadds
sub
or
inc
xchg
pop
leave
add
jne
jb
mov
or
dec
jae
adc
mov
jo
push
int3
add
xchg
and
fsubl
lret
fisubrl
add
or
orl
jne
cmpsl
pop
and
adc
or
pusha
inc
cmp
jnp
pop
inc
pop
push
xor
inc
add
xor
pop
inc
sbb
jp
inc
xchg
cmp
nop
aas
leave
or
add
ljmp
jne
mov
sub
scas
mov
add
stos
and
sbb
cmp
sbb
or
roll
xchg
push
pop
js
js,pt
and
add
xor
in
sbb
pop
sub
nop
test
mov
jne
or
jo
jae
sbbb
sub
daa
ss
mov
call
enter
bound
sub
out
pushf
dec
fiaddl
pusha
jne
mov
dec
xor
and
xor
xchg
pop
orb
push
leave
push
jb
ss
xor
and
cmp
xchg
dec
cmp
add
add
ds
add
push
leave
inc
inc
inc
mov
dec
cmpsl
pop
or
icebp
and
ds
sahf
inc
aam
inc
or
inc
push
loop
pop
mov
inc
hlt
lret
mov
push
jne
push
test
mov
inc
pushf
push
and
cmp
aam
pusha
xor
sahf
add
ja
sub
jo
mov
jnp
cmp
inc
into
push
test
test
inc
ret
scas
adc
mov
add
outsb
push
jnp
dec
add
push
push
push
push
je
inc
rorb
and
inc
push
faddl
xchg
jbe
cmp
add
inc
aas
xor
sbb
aas
add
cmpsb
cmp
add
mov
cmp
fcos
mov
xor
push
or
jbe
int3
sbb
push
sub
pop
bound
add
push
out
int
dec
or
push
cli
push
sbb
push
push
or
jns
push
clc
add
hlt
js
add
or
sbb
in
pop
test
in
push
jp
fcom
jns
jnp
sahf
rcl
int3
mov
popa
sbb
sbb
mov
add
sub
cmp
sbb
addl
push
dec
push
xor
add
push
jg
lods
or
push
aad
mov
or
inc
inc
out
ljmp
cltd
pop
pop
les
imul
adc
pop
and
leave
push
adc
push
push
push
adc
adc
adc
inc
cmp
cmp
mov
push
les
sbb
jb
sbb
cmp
sbb
or
js
and
and
sbb
sub
cmpsb
xchg
es
sub
sub
sbb
sub
sbb
sbb
fs
xor
pop
cltd
fadds
pop
inc
and
imul
jg
lret
outsb
inc
insb
outsb
inc
nop
jno
add
outsl
inc
aas
and
and
inc
xor
add
jo
xchg
outsl
inc
or
inc
rclb
sbb
sub
dec
push
pushf
mov
imul
add
je
nop
js
ss
fisttps
mov
cwtl
enter
in
mov
add
fsubr
dec
mov
or
movsb
syscall
jnp
lret
addr16
andl
ss
cmp
outsb
adc
popf
jl
std
out
inc
mov
rorb
movl
xchg
push
add
xchg
mov
mov
xor
test
push
and
sbb
and
test
pop
mov
or
insb
into
je
sub
movsl
rcl
notl
lods
mov
push
or
call
dec
into
dec
jnp
cmp
inc
fistl
adc
mov
cltd
les
leave
pop
ret
push
add
pop
xlat
pop
loopne
fidivrl
inc
push
push
push
fcmovnbe
shll
mov
dec
xchg
sub
sbb
add
sbb
push
mov
mov
push
repz
aam
fidivrl
cmp
loope
int
das
sar
movsb
popa
mov
jle
pushf
sub
xchg
mov
rolb
in
gs
loop
mov
mov
jnp
inc
dec
push
rolb
dec
mov
add
lahf
inc
add
mov
push
mov
cmp
ja
push
in
xlat
jle
mov
mov
inc
or
xor
stos
jge
add
jmp
inc
xchg
das
mov
test
push
jmp
iret
sub
imul
jecxz
push
xchg
sub
sbb
clc
sbb
leave
adcb
outsb
test
add
ja
fs
push
nop
push
leave
orb
popf
je
xor
pop
dec
rclb
enter
mov
or
pop
add
aad
outsl
add
or
inc
sbb
push
inc
push
add
test
inc
nop
mov
mov
mull
movl
or
sbb
add
cmpsl
mov
shlb
xchg
pop
jns
daa
add
int
or
mov
je
pop
mov
xchg
inc
orb
iret
adc
mov
jo
fwait
mov
or
xchg
mov
xchg
add
xor
mov
shll
pop
icebp
jecxz
rolb
pusha
push
ficompl
nop
test
andb
xchg
lods
pop
xchg
std
es
and
pushf
test
mov
popf
jo
jne
or
insl
cmc
stos
add
ret
andb
test
jae
push
inc
pusha
sub
and
test
bound
cld
data16
mov
dec
inc
filds
adc
and
or
int
xor
jo
dec
and
mov
or
aas
test
push
cld
sub
mov
xchg
add
jo,pn
rcll
aam
mov
test
cs
xor
lahf
cmpsb
sar
dec
iret
inc
daa
insb
or
mov
pop
xchg
mov
insb
outsb
pop
fcompl
xor
and
dec
cmpsl
addr16
mov
or
movsb
lea
mov
add
mov
sbb
pop
push
insb
sub
cmp
mov
cs
xchg
xchg
jge
es
add
pop
cmp
add
and
pop
in
test
je
push
sbb
mov
add
inc
mov
enter
inc
bound
or
cmp
jns
mov
or
cmp
inc
mov
nop
jno
mov
cmp
sbb
mov
js
sub
pop
cli
push
ret
add
popf
shr
les
add
or
repnz
push
or
dec
push
add
in
add
insb
xor
and
insb
cmp
stos
pop
mov
adc
testb
mov
add
mov
push
es
pop
dec
enter
jo
push
add
and
adc
push
dec
xlat
ss
mov
stc
mov
fsubrp
movups
outsl
cmp
mov
dec
iret
and
xchg
daa
scas
testl
lahf
jo
cmp
icebp
jb
jo
push
das
jge
jnp
shrl
push
mov
dec
pop
sbb
nop
dec
mov
cmpl
push
lret
dec
jnp
add
inc
mov
mov
adcb
cmp
fstl
and
mov
push
lock
je
and
dec
test
push
cs
cmp
inc
in
jl
rclb
pop
popl
repnz
test
lods
sub
or
sbb
test
mov
add
sub
or
push
inc
inc
adc
mov
movsl
push
enter
add
xchg
adcb
pop
pop
and
jo
andb
fmull
out
ss
fimuls
lods
pop
fdivr
cmp
xor
cmp
xor
enter
push
adc
mov
daa
sub
cmp
or
sbb
jmp
add
xchg
and
dec
div
mov
sbb
hlt
and
popa
and
mov
addr16
adc
or
push
push
shr
and
dec
ja
addr16
add
or
or
test
leave
test
and
leave
and
addr16
sub
daa
jg
sahf
push
out
sub
fs
sbb
into
push
movsb
pusha
pop
pusha
xchg
sub
incb
inc
shl
aaa
push
xor
inc
in
lods
mov
adc
sub
imul
mov
push
gs
leave
sub
sarl
pop
test
mov
jle
and
mov
inc
lret
sub
shlb
mov
adcb
dec
rolb
shrb
hlt
dec
addr16
std
jnp
push
lock
int3
inc
inc
cmpsl
push
mov
ja
xchg
xchg
aad
xor
sbb
push
and
jge
jg
inc
jecxz
add
mov
and
and
shll
sbb
push
cmpsb
lret
jmp
cli
in
rorl
sbb
dec
inc
stos
lods
pop
into
movsb
jb
sbb
dec
cld
out
dec
push
mov
es
sub
aas
in
adc
lods
in
xor
dec
xchg
add
mov
cmpsb
mov
add
or
inc
out
dec
or
or
out
dec
ja
adc
push
xchg
xchg
xchg
fildl
dec
adc
sahf
xchg
xchg
pop
adc
arpl
mov
inc
inc
dec
push
pop
into
je
aam
enter
jl
mov
testb
je
mov
xor
xlat
jns
pop
aam
pop
adc
inc
mov
imul
mov
mov
add
and
pop
adc
push
jns
aaa
daa
pop
imul
orb
add
add
inc
adc
nop
dec
and
mov
das
xchg
push
lods
stc
lret
push
add
xchg
xor
pop
aad
add
rorb
adc
jl
push
je
cmpl
or
icebp
and
sbb
xor
stos
or
in
push
daa
sbb
lcall
dec
icebp
flds
add
js
cli
adc
inc
push
adc
cmp
push
daa
jmp
and
je
pop
jo
push
lock
mov
test
addr16
mov
mov
push
sbb
nop
inc
xor
imul
sbb
push
test
pop
mov
faddp
add
sti
add
or
cmp
rol
cmp
stos
pusha
sub
mov
lods
sbb
sbb
sbb
loope
out
xchg
call
fcomps
adc
mov
rclb
mov
ljmp
push
push
or
inc
test
pop
xchg
add
imul
in
push
or
adc
sub
add
pop
shrl
pop
aaa
cmpw
xchg
add
or
icebp
or
mov
push
dec
repz
sbb
sub
pop
js
cmpsl
pop
pushf
adc
mov
cmp
sbb
icebp
sbb
vfrczpd
inc
mov
sti
xchg
mov
pop
andl
push
je
mov
xchg
ss
push
dec
push
mov
ret
mov
dec
push
adc
fcmovnb
push
mov
imul
or
xlat
enter
pop
inc
pop
adc
push
add
out
xchg
or
addb
in
xchg
scas
dec
aaa
roll
into
mov
cmp
movsb
pop
loopne
and
outsl
and
or
cmp
jo
dec
sbbl
push
jl
sbb
inc
sbb
inc
faddl
cmp
in
mov
dec
pop
dec
pop
pop
lahf
nop
sbb
add
mull
push
pop
andl
inc
xor
xchg
or
inc
xchg
loope
outsb
add
lcall
pop
insb
and
sbb
enter
inc
mov
push
loopne
pop
scas
mov
sbb
push
scas
push
roll
mov
add
jp
sbb
data16
sbb
push
enter
fbstp
imull
addb
inc
cmp
jb
cs
add
lock
xchg
jne
in
push
mov
test
sub
stos
fwait
or
mov
push
inc
hlt
inc
mov
and
test
inc
sbb
jns
or
popa
and
or
add
add
inc
cmp
stc
ret
pop
pop
xorb
call
andl
andl
sub
shlb
pop
inc
ret
lahf
int3
and
adc
mov
or
ja
add
repz
inc
inc
pop
es
add
sbbl
rcr
test
test
jne
test
mov
sbb
outsl
adc
roll
inc
and
test
pop
push
sub
and
pop
testb
les
aam
rcl
sahf
notl
add
add
subb
loop
adc
xlat
and
lods
lods
pop
mov
and
mov
push
mov
adc
cmp
mov
movsl
dec
ror
stos
sbb
inc
aaa
mov
test
mov
shlb
or
push
iret
mov
push
pusha
pop
xor
orl
sub
push
mov
leave
loop
mov
inc
popa
gs
data16
and
and
and
inc
das
and
and
nop
and
daa
mov
inc
cmpb
popf
orl
inc
addr16
andl
and
mov
sahf
push
movl
in
pop
and
jne
pop
add
push
add
jg
and
or
mov
inc
sub
or
nop
test
jmp
sub
add
inc
add
push
mov
imul
fisubs
out
and
or
stos
rcl
stc
int3
xchg
lea
adc
andl
xchg
pinsrw
dec
movups
movb
iret
inc
ss
pop
push
cmp
ficoms
pop
jle
adc
push
imul
sbb
pop
pop
bound
add
push
cmp
sub
and
jb
inc
mov
pop
or
flds
cwtl
daa
add
sub
and
or
test
xor
pop
adc
push
xor
or
cmp
mov
scas
adc
scas
or
or
jecxz
cmc
inc
icebp
or
inc
cmp
push
jge
xlat
sbb
outsl
ja
add
orl
dec
shl
or
in
incb
enter
jecxz
pop
mov
mov
negl
mov
pop
mov
vpsrad
outsl
push
movsb
rorb
lahf
add
or
loop
sbb
cs
sub
popf
and
cmp
je
mov
xlat
inc
dec
push
or
xorb
ds
sbb
mov
js
push
gs
incb
pop
lsl
mov
dec
add
adc
iret
inc
push
push
push
dec
dec
xlat
cmc
aaa
sub
xor
outsl
inc
push
addw
xchg
es
rcr
test
xor
or
cltd
jne
pop
sbb
adc
push
es
gs
imul
sbb
sbb
xchg
pushf
mov
mov
scas
and
daa
in
adc
jle
ds
inc
sbb
add
or
ret
ret
jmp
jnp
or
add
pop
shlb
jecxz
aad
dec
cmpsl
add
sub
aas
pop
jb
test
sarb
addr16
clc
sub
lds
mov
jl
mov
push
push
inc
in
xchg
jmp
mov
inc
movsb
fwait
inc
add
cmpsl
inc
adc
nop
xchg
jl
clc
pushf
adc
push
shlb
xchg
sbb
mov
lcall
aas
outsb
jae
push
mov
orb
jae
add
mov
inc
mov
inc
iret
xor
cmp
xchg
cld
cmp
in
and
xchg
into
ss
loopne
jne
cmp
outsb
inc
dec
mov
movq
xchg
and
clc
jo
jno
fcmovne
xchg
xchg
sbb
xor
aaa
mov
ljmp
loopne
pop
movl
repz
test
iret
rep
lods
mov
pop
xor
cmp
gs
dec
add
outsl
stos
lahf
fsubrl
and
aaa
enter
les
jle
and
or
and
mov
inc
jbe
cwtl
mov
mov
push
push
jnp
test
inc
dec
js
jg
dec
inc
add
pusha
mov
or
sub
outsb
cmpsb
clc
or
push
cmpl
adc
dec
and
and
fcmovu
mov
push
cld
mov
sbb
xor
lods
dec
mov
dec
addr16
push
mov
mov
sub
lea
insl
or
cmp
add
pop
xchg
fistl
rclb
inc
test
mov
or
into
add
mov
mov
sbb
xor
dec
adc
xor
pop
and
fiaddl
mov
cmp
push
add
dec
sub
push
adc
daa
mov
push
ret
cmp
frstor
dec
sbb
pop
adc
dec
shr
in
andl
aas
mov
pop
inc
lock
mov
mov
popf
dec
or
lds
adc
xor
xchg
popl
ja
pushf
cmp
pushf
andb
call
mov
lock
mov
and
push
ja
in
in
xlat
sub
aad
shlb
lcall
pop
fs
outsb
jae
das
fistpl
rorb
xchg
xor
add
or
push
xchg
ret
loopne
clc
clc
mov
or
mov
push
aaa
dec
inc
sub
sub
mov
and
sub
push
pop
sbb
cmp
sub
sub
and
dec
gs
dec
xor
sub
adc
fwait
or
ret
movb
int3
and
in
adc
loop
outsl
xchg
or
ja
ret
or
hlt
xchg
aas
mov
mov
test
enter
popa
fwait
addl
rorl
mov
and
lock
lcall
stos
stos
mov
das
dec
cmpsb
add
mov
fisubs
push
lock
enter
sub
xchg
mov
add
cmp
stc
add
orl
dec
xor
dec
jne
jo
inc
call
mov
xchg
inc
push
test
push
mov
or
adc
xor
in
call
flds
repnz
mov
jb
bound
test
add
mov
xchg
ret
incl
inc
ss
lahf
jge
cmp
inc
mov
xor
shlb
mov
and
add
cmp
je
or
je
add
sub
pop
insb
ret
aaa
jnp
mov
mov
loope
push
orb
pop
mov
push
mov
jmp
xor
and
push
jle
inc
lods
movsb
jns
push
scas
xchg
rol
sbb
notl
popf
std
imul
mov
xor
pop
mov
lret
add
mov
xor
sbb
add
lcall
dec
inc
dec
push
add
pop
test
mov
add
dec
cld
test
xor
aaa
aaa
loopne
xchg
mov
or
outsb
push
dec
mov
inc
add
cmc
or
mov
andl
mov
mov
aas
inc
push
sub
pop
adc
sub
cmp
xchg
jne
mov
insl
jbe
fcompl
adc
insb
push
jmp
cmp
pop
fs
repnz
pop
daa
lods
adc
outsl
outsb
lock
pop
inc
test
dec
outsl
cli
les
into
mov
or
add
sbb
push
inc
daa
xor
imul
aam
xchg
push
in
test
adc
adc
fwait
sub
fbld
dec
dec
lock
push
cs
lea
sbb
ret
cmp
lods
add
cmc
or
seto
inc
adc
push
sbb
dec
push
pop
sub
adc
insl
pop
sar
xlat
loopne
mov
push
jb
mov
decb
mov
and
clc
mov
or
mov
outsl
xchg
sbb
cltd
add
mov
jo
and
lods
addb
sbb
sbb
cmp
aaa
and
sahf
filds
mov
mov
push
add
sbb
int3
add
xor
pop
mov
push
mov
clc
push
push
pushf
add
pop
insb
ss
mov
add
add
add
dec
mov
mov
insb
popa
or
adc
or
ds
mov
and
and
mov
xor
mov
add
rorl
enter
or
or
jo
ds
repz
or
xor
loop
je
loope
in
mov
and
rorl
popl
in
cwtl
hlt
mov
and
adc
loopne
sbb
les
iret
fwait
xchg
mov
push
mov
imul
ret
fiadds
cmp
jo
test
loopne
decl
lahf
inc
cwtl
mov
push
and
mov
adc
xor
pop
pusha
sub
leave
xchg
lea
mov
ret
sub
les
add
sub
leave
pop
mov
jns
sbb
insb
push
addb
add
call
cmp
rcr
adc
pop
sub
xor
add
mov
daa
js
test
mov
or
rol
addr16
into
lds
pop
cmp
enter
js
inc
movsb
setbe
jl
push
push
sbb
dec
add
nop
movl
cmpsb
or
aaa
les
inc
nop
es
lret
inc
and
and
call
or
inc
repnz
inc
adc
mov
nop
pop
nop
aaa
loopne
repnz
jle
add
push
xor
insl
bound
fstps
fmuls
jg
push
inc
fildll
scas
add
outsb
test
adc
popa
popf
aaa
mov
mov
fdivs
and
inc
lret
xor
fs
xchg
cmc
add
adc
and
dec
and
rclb
jnp
in
imul
stos
and
add
add
sbb
or
push
punpckhwd
dec
dec
jl
or
sub
mov
add
imul
inc
mov
or
pop
or
imul
les
test
jae
jns
fadds
xchg
add
loope
pop
dec
nop
and
cmovo
imull
and
add
inc
stos
test
leave
cli
push
loope
mov
movl
adcl
rorb
cmp
xchg
pushf
aam
xor
lret
ret
add
xchg
jnp
xchg
or
push
or
and
adc
mov
imul
cmp
imul
and
add
push
shr
addb
mov
pop
or
test
insl
mov
adc
movsb
dec
ret
jmp
inc
mov
dec
mov
jb
testl
and
aaa
and
sahf
mov
cmp
add
inc
iret
or
adc
rclb
or
jnp
sub
ja
add
xchg
fnstenv
push
inc
adc
sub
shlb
cmp
add
jo
orl
jl
jge
clc
nop
adc
cmovs
clc
nop
sti
mov
mov
xchg
cmpsl
add
dec
mov
or
inc
pop
and
push
icebp
popf
mov
aas
and
dec
push
popa
jb
gs
sahf
loope
sbb
inc
ret
mov
imul
or
test
imul
pushf
sub
adc
adc
xor
shll
in
mov
js
add
ja
or
sub
add
mov
mov
jl
sysenter
lods
cmp
sidtl
in
xchg
enter
mov
dec
or
push
adcl
and
xchg
add
enter
nop
icebp
cmc
adc
jmp
pop
ljmp
inc
roll
repnz
cwtl
sbb
xor
jo
or
mov
mov
pop
sub
adc
mov
fists
push
xor
fimull
pop
add
add
js
or
test
addr16
cltd
adc
gs
imul
or
add
xchg
mov
ret
or
push
jmp
dec
sbb
fmull
push
add
sahf
rclb
sbb
repz
lcall
lds
mov
movsb
lcall
cltd
push
popf
pop
lcall
scas
fcoms
or
cmp
movsb
into
int
inc
and
andps
dec
pop
shll
mov
add
out
push
ret
xchg
add
add
pop
sub
test
data16
dec
add
pop
testb
or
or
xor
lock
mov
mov
mov
daa
mov
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
decl
fdivr
ficompl
call
call
call
call
ljmp
call
call
call
dec
push
into
dec
pushl
dec
dec
icebp
dec
scas
sub
iret
jnp
out
bound
test
aam
push
lods
cld
sahf
cmpsl
fnstcw
idivb
mov
hlt
sahf
out
jl
clc
mov
fs
jns
push
jns
cli
movsb
jl
dec
out
test
enter
fnop
xchg
sti
clc
sahf
cmpsl
flds
cld
sub
rolb
sbb
mov
mov
push
xor
xchg
fchs
repnz
js
addr16
out
repz
pusha
call
inc
imul
push
in
add
enter
repz
adc
and
repz
mov
data16
imulb
cmp
hlt
sahf
insb
and
push
int3
aam
ljmp
shl
push
dec
int3
ja
idivb
pop
in
out
sbb
mov
add
leave
popa
xor
push
fwait
jne
clc
xor
or
or
push
or
inc
add
sub
cmp
dec
pop
add
or
add
enter
aas
dec
test
sub
insb
inc
lcall
push
ja
mov
aas
incl
loopne
mov
not
mov
ljmp
shrl
jne
inc
mov
and
jne
cs
or
ficomps
pop
dec
or
nop
or
mov
add
es
ds
and
mov
test
inc
imul
add
adc
imul
jle
push
sbb
dec
insl
or
or
orb
or
push
sahf
mov
ljmp
or
inc
mov
popa
inc
cmove
cmpsl
mov
push
dec
popa
je
xchg
inc
push
push
addr16
xchg
mov
les
adc
adcb
push
sarb
xchg
dec
jp
xchg
rcll
iret
es
jbe
in
fldcw
add
jbe
or
xor
popa
jbe
adc
xchg
mov
dec
xchg
push
mov
cs
xchg
pushf
gs
bound
es
bound
gs
or
jae
jns
mov
sbb
imul
imul
andb
xchg
inc
mov
sub
ss
push
inc
sbb
dec
repz
jns
sbb
jo
fwait
jge
jbe
or
add
jmp
cmpsb
pop
mov
je
enter
inc
mov
inc
add
imul
xchg
pop
cmp
adc
add
ss
int
add
add
sahf
add
pusha
repnz
push
ss
or
push
aad
add
sub
sub
push
add
push
test
test
aas
rol
adc
sbb
sbb
push
add
add
mov
mov
mov
adc
adc
pop
andl
decl
and
mov
mov
mov
add
push
mov
xor
cmp
adc
mov
sti
sbb
repnz
incl
ljmp
inc
inc
inc
inc
loope
inc
add
into
std
mov
inc
test
stc
jne
ljmp
mov
pushl
daa
pop
sub
xor
cmpsl
push
pushf
rclb
xor
repz
je
mov
repz
sub
js
rorb
xor
jl
jns
xor
insb
aaa
mov
sahf
cmpsl
mov
loopne
push
dec
adc
imul
fsubrl
lock
cmpsl
test
push
aam
cld
cmpsl
stc
out
jge
push
jbe
cmpsb
push
or
adc
and
call
repz
movsb
in
es
out
repz
mov
shlb
push
sub
stc
cmp
xor
inc
fs
ds
pushf
call
sbb
inc
in
jnp
jnp
xor
xor
or
dec
mov
sahf
push
inc
push
cwtl
inc
clc
xor
xchg
cmpsl
stc
xor
cs
das
cmp
out
fstl
push
lods
es
push
in
fnstcw
inc
jo
cmp
add
imul
sub
push
jl
push
and
mov
into
and
and
lock
push
mov
mov
cmpsb
cmp
push
dec
push
fs
test
in
push
inc
and
pop
inc
pop
xor
fwait
mov
add
push
mov
adc
sbb
pop
aam
mov
add
test
cmpsl
add
addb
bound
sub
arpl
add
cs
insl
pop
int3
mov
sub
clc
add
ja
adc
mov
xor
dec
js
adc
sub
sbb
cmpsl
mov
mov
pop
jnp
adc
jo
push
mov
push
jnp
jl
add
push
sbb
adc
pop
add
or
test
hlt
pop
pop
mov
rol
out
cmp
push
mov
fisubl
mov
add
sub
and
and
in
pushf
pop
mov
inc
cmp
pop
call
sub
or
nop
add
add
nop
add
and
or
sbb
jae
fmuls
mov
repz
push
cmpsb
ds
dec
mov
repz
rcr
jmp
add
sahf
adc
sub
in
mov
push
je,pn
clc
push
mov
push
xchg
push
add
outsb
out
pushf
ljmp
insl
jne
add
js
jp
fwait
int
cs
jl
add
sbb
in
or
and
xchg
adc
stos
lock
mov
cmp
mov
xchg
pop
add
push
jmp
pushf
les
dec
xor
add
lea
mov
fwait
sbb
inc
sbb
call
sbb
sbb
push
gs
popa
lock
fiadds
je
push
and
sahf
fcmovne
mov
sbb
in
scas
cs
shlb
mov
xorl
add
inc
movl
xor
inc
dec
mull
popa
push
adc
xchg
push
mov
pop
jne
xor
sub
cmp
imul
testb
dec
jne
bound
sub
orb
push
cmp
adc
es
insb
jmp
aad
inc
inc
rcrb
addl
sbb
das
imul
scas
push
or
loopne
dec
mov
cmp
jb
daa
lods
test
pop
lcall
gs
insl
xorb
pop
or
lcall
or
push
inc
repnz
dec
dec
push
push
inc
push
in
loopne
nop
inc
or
add
sbbb
inc
insb
popa
jno
inc
xchg
jg
push
rorb
xchg
daa
dec
push
jo
imul
or
cmovl
push
popa
push
movl
push
pop
inc
and
imul
imul
lock
outsl
daa
enter
cmp
insl
aad
xlat
pop
js
imul
pop
scas
cli
sbb
adc
or
jmp
push
sub
xor
pop
cmpsl
pushf
inc
cmpsb
cltd
jl
dec
lea
fdivs
ljmp
jle
mov
cmp
adc
adc
inc
push
mov
dec
pop
stc
pop
sbb
les
aam
xchg
adc
mov
add
pop
subb
mov
mov
fdivs
jo
mov
or
add
dec
push
lea
fisttpl
add
cmp
push
push
call
or
sbb
das
imul
test
test
mov
fiaddl
mov
sub
push
pop
fiaddl
or
loop
xlat
lock
push
clc
adc
popf
lods
mov
sub
or
sbb
xor
sub
sbb
push
jge
dec
dec
jne
out
lcall
jge
push
lods
add
hlt
aad
es
push
add
adc
or
mov
les
add
mov
mov
lds
dec
shll
adc
dec
shll
sbb
and
shll
sub
inc
ret
scas
xchg
mov
add
push
pop
push
enter
push
movl
daa
ja
sbb
dec
in
dec
dec
xchg
inc
clts
fisubrl
sbb
sahf
add
testl
mov
cmp
mov
sbb
add
sbb
or
je
push
mov
sbbb
ja
scas
add
and
arpl
test
add
pop
loopne
lods
mov
mov
mov
jmp
mov
adc
push
push
adc
mov
jp
or
sub
adc
inc
sbb
js
push
jns
lcall
add
fwait
add
mov
pop
cmp
jg
sub
sbb
leave
push
loopne
hlt
jmp
or
nop
adc
aas
ss
mov
adc
mov
or
push
iret
scas
adc
mov
push
pop
lods
pusha
cmpsb
test
call
pop
test
mov
jecxz
leave
inc
xchg
cmp
cmp
rorb
and
dec
jmp
mov
pop
cmpsl
sub
xlat
pop
pop
fsubr
fsts
test
mov
cmpsb
dec
rol
dec
mov
iret
adc
or
cltd
mov
lea
int
dec
jmp
test
pop
pop
push
les
aas
mov
adc
cmpsl
or
inc
cmpsl
ja
pushf
and
sahf
sub
jae
mov
pmaddwd
rcl
push
pop
loop
dec
xchg
sub
lea
mov
inc
mov
xchg
fdivs
out
inc
movsl
and
out
pop
push
pop
pop
and
mov
lods
mov
popa
in
aam
and
xchg
outsl
push
or
lock
pop
fstl
es
mov
mov
adc
movsb
inc
adc
dec
or
cmp
push
sub
rorb
push
sub
leave
in
bound
jle
or
movsl
push
and
shl
pusha
xchg
test
neg
xchg
inc
inc
push
xor
ret
ja
add
rcl
daa
mov
jg
pop
rcrb
out
xchg
jno
imul
decb
and
and
decl
cmp
fidivl
add
push
popa
sbb
add
ja
sarl
jb
sbb
inc
push
adc
imul
or
movsb
dec
pop
xchg
outsl
pop
mov
les
xchg
test
xlat
int3
ljmp
shl
in
push
roll
and
sti
push
test
sub
test
cmp
out
adc
inc
push
adc
cmp
xor
inc
or
mov
jge
cmp
sbb
mov
je
test
add
movsl
in
sub
cmp
sub
xor
push
mov
sbb
inc
adc
or
push
out
or
push
nop
addr16
or
dec
xor
or
add
mov
sbb
enter
test
add
ljmp
enter
daa
add
pop
or
mov
in
cmpl
xor
mov
fildl
xchg
and
addb
or
cs
in
les
lea
ds
or
hlt
sbbl
or
fcompl
rorb
daa
cmpl
cmp
sub
adc
inc
test
iret
cmp
mov
cmp
mov
shll
das
push
jl
or
sub
sub
sbb
lock
cmpb
rcll
jae
push
jno
decb
js
push
push
sbb
cmp
gs
xor
and
jo
test
cmpsb
mov
daa
repz
pop
sbb
es
pushl
mov
dec
in
mov
iret
cmpb
inc
dec
jne
push
imul
cmp
pop
test
mov
and
call
cmp
divb
popf
or
push
cmp
fbld
pop
and
cmp
ds
dec
mov
subb
pusha
sbb
cmp
sbb
sbb
pop
fisubl
sbb
xor
or
pop
xor
xchg
jbe
imul
push
jo
pusha
adc
push
push
insl
call
lock
xchg
outsb
jae
push
push
pop
inc
cmp
and
adc
dec
loope
ret
jmp
add
sub
or
sub
push
imul
xorb
push
inc
stos
add
or
test
movsb
inc
outsl
fucomp
xchg
movsl
cmp
test
sub
sub
push
xor
add
shrb
sub
lock
or
imul
fdivs
test
mov
jmp
sbb
push
xchg
imul
or
adcl
jo
jl
mov
mov
shrb
and
pop
adc
inc
scas
or
xchg
push
push
pop
fmuls
out
test
jne
push
fs
sbb
data16
or
and
test
dec
cmp
jne
cmp
push
popl
pop
ret
shrb
fnsave
jge
mov
sub
mov
stos
insb
mov
mov
fwait
cmp
push
nop
cmpsl
es
inc
imul
stc
cmp
mov
lea
inc
inc
movb
pop
mov
sbb
ficompl
jmp
sti
cmp
je
jmp
loopne
fistps
jmp
mov
out
movsl
ret
adc
pop
out
add
mov
xor
cmp
mov
das
pop
sbb
out
mov
adc
add
enter
mov
sbb
adc
or
in
loopne
and
mov
mov
cmovae
mov
test
xchg
push
add
cmp
std
push
loop
cmp
mov
aam
cmp
inc
jmp
fcmovnb
ds
push
and
jmp
pop
fmull
mov
push
inc
cmpsb
das
nop
sub
test
xchg
loopne
iret
sbb
push
push
push
cmp
out
pop
nop
lods
sbb
fistpll
and
ficoms
inc
pop
sbb
pop
fdivs
mov
sahf
xor
dec
ficoml
ret
dec
out
dec
test
in
xor
lret
aaa
add
into
jmp
mov
or
stos
xor
cmp
mov
xor
js
or
mov
fistpll
fs
loope
rorl
inc
push
ret
adc
adc
in
sub
mov
mov
ljmp
push
xchg
sub
lea
js
test
jno
sub
lock
xchg
cmp
mov
mov
push
xor
sbb
mov
fwait
jmp
inc
and
and
and
in
fcomp
add
jns
sub
imul
in
imulb
push
push
insl
pop
sub
rclb
add
jmp
pop
xchg
dec
scas
dec
adc
or
pop
sub
inc
jne
or
enter
scas
inc
pop
push
nop
push
dec
insb
push
arpl
push
aas
loopne
and
ss
loopne
xchg
in
insb
cltd
ret
cmpsl
rol
cmp
inc
pop
sbb
fmull
mov
filds
mov
mov
daa
jbe
and
mov
popf
add
xchg
jecxz
in
sub
lea
movsb
mov
jl
xchg
bound
mov
adc
inc
lods
mov
push
and
mov
cmpl
sub
sub
enter
das
dec
push
dec
jmp
inc
mov
test
pop
mov
inc
mov
ljmp
mov
push
dec
sub
add
mov
add
pop
dec
ja
divb
dec
push
sbb
dec
fistps
test
xorb
push
xchg
adc
dec
pusha
jno
aad
mov
stos
pop
ror
adc
into
push
ljmp
mov
mov
add
mov
adc
adc
adc
xchg
sub
mov
clc
mov
aaa
ds
cmpl
incb
or
add
xor
fstps
das
clc
fbld
in
movb
adc
sbb
pusha
mov
hlt
lahf
and
pop
xor
and
ret
pop
movsb
inc
andb
xlat
lret
movsb
clc
lcall
or
or
cli
jmp
and
or
loop
mov
je
or
stc
mov
test
rclb
and
fdivs
fsin
arpl
mov
pusha
jno
outsl
je
test
mov
cmp
sbb
fists
add
ret
cmp
aas
inc
and
or
xor
lcall
sbbl
cmp
pop
pop
mov
add
jo
mov
sub
cmp
sub
push
adc
sbb
cltd
or
xchg
aaa
shlb
push
and
jb
xor
pop
and
mov
cli
hlt
push
and
cmp
rcrb
sbb
jae
mov
in
arpl
mov
call
xor
nop
mov
adc
cmp
je
mov
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
adc
pop
dec
sbb
sbb
pop
sub
xchg
push
enter
lcall
cmp
arpl
je
mov
mov
inc
cmp
jge
mov
je
add
add
and
inc
addl
test
push
mov
xchg
xchg
je
cmpb
or
pop
test
push
or
js
jo
lock
push
pop
inc
rol
mov
insb
pop
sbb
cld
push
lock
cmpsb
xchg
je
aas
jnp
loop
fs
and
dec
iret
jmp
ja
and
mov
mov
fcomps
es
or
push
sar
push
inc
mov
imul
mov
dec
enter
push
aaa
sub
out
popa
add
pop
dec
pop
mov
pop
in
jmp
inc
repz
pop
inc
pop
fs
xchg
sub
jnp
add
cmc
sub
or
lea
lods
jo
mov
mov
adcb
jge
leave
mov
outsl
xorb
lret
or
add
push
fistps
imul
or
roll
push
es
inc
lret
inc
icebp
cmp
ret
dec
adc
cmp
int3
lss
in
mov
ja
outsl
cmc
dec
adc
add
push
sub
andl
dec
or
movntq
out
dec
mov
pusha
hlt
xchg
and
push
adc
cmpsb
cmp
adc
or
xchg
jmp
cld
inc
rorb
nop
adcl
add
add
fcmovnu
jg
jmp
cmp
je
mov
test
jbe
push
adc
inc
lcall
cmp
push
or
inc
fsts
aaa
and
popl
fdivs
cmp
cmp
mov
je
cmp
or
dec
loop
cmpsb
pop
sbb
add
popa
or
sbb
adc
mov
test
in
add
test
ror
shlb
xor
js
and
mov
je
or
push
jl
add
mov
es
inc
das
pop
mov
int3
xchg
aam
cli
inc
mov
and
mov
lret
pusha
ss
pop
aaa
push
fdivs
int
and
in
push
scas
add
sub
lret
stos
pusha
xor
add
xchg
sub
push
adc
sbb
add
sbb
cld
fs
mov
inc
add
mov
mov
mov
mov
add
push
and
nop
addr16
or
or
jo
mov
jne
sahf
dec
sbb
and
adc
push
scas
addr16
out
idivl
or
mov
add
mov
inc
aam
mov
lahf
jo
inc
and
add
popa
cmpl
dec
fistpl
cmp
jp
nop
add
ficoms
int3
out
ss
push
xchg
adc
inc
and
or
or
cmpsb
jno
inc
dec
mov
xorl
fdiv
scas
je
sbb
xchg
jne
cmp
mov
push
add
sbb
stc
inc
jo
xchg
jb
push
xchg
xor
sbb
sbb
aas
add
out
inc
or
mov
mov
xlat
orb
mov
je
mov
ss
jl
imul
pop
push
lcall
mov
aad
je
cmp
ljmp
inc
bound
sbb
jo
iret
sar
xchg
movb
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
jbe
pop
dec
mov
out
xor
adc
ss
push
add
ret
sbb
sbb
or
add
test
sub
add
cmp
cmp
cmpsl
push
gs
inc
mov
rcll
and
test
sub
xor
shrb
je
push
add
and
mov
std
dec
add
pop
ret
jae
ficoml
dec
push
pop
xor
inc
out
add
test
nop
mov
sarb
test
imul
inc
js
fstpt
or
xchg
shr
aaa
add
rcr
and
pop
dec
test
pushl
push
cmpsb
cmc
mov
cmc
lds
push
insb
xchg
push
add
shrb
push
mov
ret
hlt
pop
or
xchg
fcomps
test
adc
sbb
push
orl
and
test
incl
push
cmp
out
lahf
push
mov
inc
or
mov
push
cmp
mov
ret
shl
pop
add
pop
push
mov
xor
or
ds
fdiv
mov
push
xor
push
sbb
std
mov
rorl
fldl
or
mov
inc
daa
dec
dec
push
jo
sub
inc
dec
xchg
aaa
xlat
cmp
std
js
arpl
push
loope
sub
int
xor
in
pop
or
push
and
nop
xor
loope
cmpsl
sub
push
leave
rclb
jle
jne
aas
pop
sahf
xchg
mov
pop
jmp
cmp
clc
jne
add
adc
push
imul
pop
test
and
xchg
xor
nop
jno
shl
jne
cmp
inc
loopne
xchg
mov
xor
je
les
push
out
pop
lods
xor
out
ret
bound
mov
ret
cs
inc
and
pop
shrb
sbb
jb
inc
dec
push
push
dec
test
ss
push
inc
or
test
pusha
inc
or
cmp
and
inc
fs
dec
enter
xchg
or
stc
jb
inc
jbe
das
sbb
cmp
jne
xchg
dec
jne
push
mov
dec
and
push
push
imul
push
cs
mov
xor
cmp
mov
mov
pop
or
lret
inc
add
add
or
iret
dec
and
push
push
xchg
mov
push
add
test
adc
cmp
mov
mov
cmp
adc
cmp
sete
mov
loopne
push
cmp
mov
fisttpl
cs
out
movsb
mov
push
adc
adc
push
pop
fadd
dec
add
or
mov
mov
dec
mov
mov
imul
push
in
jne
mov
shlb
xchg
jg
pop
les
adc
pushf
inc
xor
mov
push
sbb
inc
dec
fists
das
pop
dec
xor
pop
pop
loope
das
rolb
mov
mov
roll
mov
lret
inc
fcmovnu
mov
dec
push
xchg
dec
adc
add
push
inc
or
fwait
cmp
xorb
xlat
adc
pop
std
inc
adc
pop
sub
das
add
push
and
push
jp
sarb
mov
push
fdivrl
mov
add
dec
push
dec
push
adc
mov
shll
push
aam
fisubs
in
cmp
cli
clc
dec
and
ja
cmp
mov
push
bound
xchg
lds
add
mov
cmp
mov
lds
sti
ffree
es
xchg
pop
adc
aam
or
outsl
lretw
enter
pusha
stos
arpl
or
cmpsl
pusha
test
stos
rolb
test
inc
dec
cmp
mov
addl
cmpl
dec
lret
outsb
dec
add
popf
dec
clc
adc
dec
dec
mov
mov
sub
xor
das
ljmp
adc
and
adc
sbb
pop
setbe
mov
lea
inc
push
adc
mov
lahf
jne
sbb
sti
add
jno,pt
subb
mov
add
sbb
adc
pop
push
add
hlt
hlt
pop
jne
inc
ds
mov
fcoms
add
add
addl
mov
test
add
or
lret
jg
fcoms
mov
mov
push
test
inc
xchg
sbbb
fiadds
mov
enter
sub
dec
or
fsub
andb
mov
push
ret
jns
sub
pusha
imul
pop
or
mov
mov
repnz
popa
fadds
flds
mov
andl
daa
fmul
aaa
lret
mov
dec
push
es
pop
or
mov
pop
mov
cmp
je
add
lret
jg
sbb
mov
addb
adc
rolb
jae
call
sub
xor
inc
mov
mov
sbb
loopne
movsb
push
add
xor
add
xor
sbb
push
push
mov
adc
mov
nop
add
xchg
ss
jl
ret
lcall
sahf
or
or
lret
adc
or
or
adc
test
add
adc
int
pop
pop
jecxz
pop
outsb
leave
add
push
jo
pop
nop
shlb
jle
xchg
bound
sbb
push
cmp
xchg
mov
add
loope
jle
or
push
cmp
je
mov
test
popa
push
jae
mov
sub
mov
dec
push
mov
and
testb
je
or
or
je,pn
test
ja
push
sub
push
addr16
or
push
rcll
jle
ljmp
iret
lods
sbb
inc
sub
jb
mov
push
jmp
inc
pop
adc
or
cli
push
push
sbb
inc
dec
or
add
gs
xchg
sbb
cmp
xor
inc
mov
xor
add
mov
or
add
rorb
das
cmp
je
jmp
int
push
xor
dec
in
adc
fldcw
pushf
mov
adc
je
mov
in
dec
rcll
or
pop
push
add
mov
lods
mov
in
mov
cmpsw
es
cmp
lock
mov
jo
add
mov
lea
push
ja
push
xor
mov
imul
jg
adc
addb
lret
and
sub
sbb
pop
cmp
pop
shrb
push
pop
test
test
icebp
sub
xor
aaa
repnz
or
mov
movb
ja
rcrb
add
push
push
ja
es
imull
cmp
orb
push
dec
push
jecxz
cs
push
lret
in
push
or
movsl
sbbb
add
mov
xor
adcb
sbb
call
aam
aas
or
mov
xchg
cmp
shufps
dec
and
and
mov
and
cmp
and
imul
and
pop
pop
xchg
push
pop
xchg
or
pusha
mov
ss
cmp
data16
inc
inc
push
pmaxsw
lahf
dec
cmp
mov
fsubr
cmp
out
aas
iret
enter
ret
lahf
jo
adc
test
rcll
sub
daa
jl
sbb
addr16
insb
mov
inc
fmull
push
pushf
xor
nop
mov
mov
das
mov
mov
aaa
imul
addb
cmp
dec
lock
je
jp
xchg
loop
push
cld
xchg
dec
push
adc
adc
and
adc
mov
or
fcmovbe
add
sahf
notb
mov
stc
mov
adc
jae
shlb
inc
fsubl
or
adc
loope
cmpsb
jo
pop
jle
dec
sbb
sub
cmpb
mulb
push
inc
and
cmp
or
in
inc
fsub
xor
pop
pop
mov
mov
jne
push
sbbl
adc
shl
ja
jle
jg
pop
imul
call
outsb
shl
adc
dec
xor
add
jge
mov
nop
aas
jle
or
pop
mov
lea
push
and
orb
and
hlt
and
jg
adc
xchg
pusha
stos
cmove
mov
push
rolb
aaa
incb
inc
pop
inc
ret
and
loope
add
pop
or
pop
clc
cmp
add
cmpb
jne
sarl
jne
sbb
mov
xchg
lret
pusha
icebp
cmovo
inc
jp
mov
pop
cld
add
push
popa
and
dec
es
flds
push
pop
and
clc
mov
fwait
sbb
jecxz
fs
mov
and
arpl
push
popf
gs
dec
xor
jns
and
add
push
orb
pop
dec
jb
daa
shr
and
psrad
mov
jl
mov
jae
jnp
push
and
push
aam
aas
mov
or
pushl
sbb
imul
push
js
push
dec
dec
lret
push
aam
ja
xor
lret
add
les
in
mov
add
pop
fildl
cmovle
mov
lock
add
lock
lahf
add
jbe
iret
fcoms
xor
mov
dec
adc
dec
or
dec
lret
lret
hlt
lock
ja
ljmp
cs
pop
in
call
push
fsts
add
inc
xchg
adc
jle
dec
jecxz
outsl
xchg
sbb
arpl
sbb
or
stos
jbe
pop
ficoml
scas
and
mov
imul
ss
pop
adc
call
jmp
in
fmull
fildl
fsubp
call
mov
adc
jle
adc
mov
push
fucomp
adc
sarb
mov
add
mov
fmul
clc
daa
pop
sub
inc
add
jo
push
inc
adc
push
cwtl
jl
mov
push
insb
push
mov
cmp
add
scas
mov
push
daa
imul
or
add
and
push
add
cmp
lds
out
into
and
cwtl
or
pusha
mov
mov
jp
cli
shl
roll
cmp
jne
add
inc
fcoms
pushf
rcl
pop
inc
push
sbb
adc
cmp
lock
aaa
sbb
ficomps
lea
ljmp
imul
inc
cmpsb
sub
mov
cmpsl
mov
xchg
mov
aas
sub
cwtl
add
add
xorb
or
outsl
inc
shlb
push
or
add
inc
inc
mov
mov
mov
xchg
dec
mov
xor
pop
add
mov
mov
fsubrs
xchg
pop
pop
loopne
cmp
enter
or
inc
mov
pushf
add
push
pusha
adc
jmp
or
push
adc
adc
mov
ret
mov
or
cmp
push
mov
out
pop
mov
cmp
mov
call
inc
loopne
in
movsb
jne
testb
addl
add
sbbl
xchg
sbb
mov
sbb
ljmp
inc
pop
es
les
pushf
out
cli
in
outsl
or
rorb
lret
mov
push
notl
loopne
adc
pop
mov
xchg
sbb
jo
js
pop
je
cmp
jnp
inc
add
add
je
mov
xchg
sbb
sbb
jb
and
loope
sub
sbb
sahf
je
or
adc
mov
les
and
aad
aaa
adc
ficomps
mov
xor
mov
sbb
pusha
xor
mov
int3
jb
loopne
in
xor
mov
xor
xor
xchg
nop
shrb
test
test
or
adc
cmp
add
mov
inc
inc
hlt
xor
pop
loopne
pop
psubsw
inc
rcr
inc
bound
aas
add
xor
push
pop
mov
cmp
es
xchg
cld
lea
xchg
xchg
leave
jle
faddl
mov
push
jb
call
fnstenv
sbb
and
pop
les
out
enter
and
ret
in
xor
bound
sub
sbb
inc
jo
les
inc
lsl
js
or
xor
push
adc
add
js
jne
or
pop
sbbl
imul
ja
jecxz
mov
data16
mov
jbe
xor
shrb
jmp
sarl
clc
nop
loopne
mov
loopne
iret
dec
sbb
inc
outsl
inc
xchg
jmp
inc
jbe
adc
cmp
and
adc
sbb
xor
dec
xorl
ljmp
push
loope
and
lea
add
ret
les
test
push
and
les
xchg
mov
rcrb
je
int3
pop
add
jns
jno
iret
sub
mov
pusha
aas
ret
xor
push
pop
movsb
inc
or
sar
mulb
sbb
aam
hlt
mov
sub
filds
outsb
bound
sbb
popa
pop
ds
mov
cltd
xor
xchg
imul
sarb
popa
ja
add
or
xchg
or
les
xchg
push
loopne
test
inc
int3
test
add
and
push
subl
jle
cmp
push
je
push
add
imul
rolb
mov
mov
lock
push
pop
stos
shlb
insb
pop
rorb
sarb
adc
xchg
daa
daa
fistps
sub
sub
or
dec
or
jp
ret
and
push
fnstsw
cmp
sub
fstl
mov
or
cmpsl
mov
sub
jge
push
pop
addl
or
lcall
sub
push
add
push
or
mov
or
adcb
ds
dec
inc
xor
adc
sbb
xchg
mov
scas
mov
mov
mov
jnp,pn
mov
mov
add
mov
mov
inc
jae
addr16
inc
push
stc
inc
jmp
add
sub
fwait
mov
and
sbb
and
scas
dec
jp
dec
and
and
sahf
loope
pop
xor
push
mov
pop
mov
icebp
push
push
mov
push
jne
mov
sbbb
cmpb
and
aas
lahf
mov
add
aaa
cmp
addb
out
mov
fs
xchg
pushf
jne
faddl
pushf
add
loope
jg
jb
divl
cmp
es
and
fmuls
or
sub
ja
add
bound
inc
dec
sub
push
mov
aaa
pop
jmp
ret
addl
dec
pop
dec
add
in
sub
clc
notb
jle
push
jmp
xchg
fisubrl
incl
and
adc
inc
sbb
push
and
or
aaa
enter
int
mov
cmp
cmc
sub
cmp
lock
adc
and
orl
pusha
mov
ror
rolb
lock
inc
dec
in
or
lods
or
mov
or
dec
test
add
jmp
aaa
mov
jge
outsb
clc
jbe
cmp
and
rolb
ja
in
pushf
or
mov
mov
loopne
xor
xor
mov
mov
inc
ret
push
sbb
mov
mov
xor
cld
push
mov
pop
or
insb
ja
sbb
xor
adc
add
test
or
add
push
xchg
add
or
jl
push
xchg
loop
mov
lahf
pop
aam
inc
dec
xor
cltd
sub
mov
mov
cmp
and
jnp
pop
insb
mov
and
sbb
adc
xor
mov
inc
cmp
sbb
sbb
xchg
mov
cmp
mov
push
dec
jp
loopne
sbb
in
fmuls
or
ret
testb
cmpw
fiadds
dec
jle
and
and
imul
pop
or
cli
movsb
arpl
aam
and
jae
push
or
dec
mov
iret
roll
lahf
sub
adc
pop
add
adc
fcomps
push
insl
xor
clc
fiaddl
mov
sbb
mov
imul
adc
mov
fst
dec
fwait
mov
lods
inc
dec
jl
addr16
xchg
jmp
or
push
add
add
ffree
gs
dec
inc
cs
cmpsb
cmp
dec
or
dec
cmp
jp
orl
mov
rorb
or
pop
ret
fucomi
rcll
mov
add
rolb
and
sub
lahf
add
mulb
sbb
outsl
and
push
movsb
adc
fiaddl
mov
fadds
xor
or
popa
fs
fs
cmpl
push
shll
movsb
test
imul
mov
call
dec
or
pop
xchg
pop
stc
mov
xor
loopne
cmpsb
add
and
sub
mov
call
and
xor
push
sbb
lock
inc
and
mov
pop
fmuls
leave
test
adc
sub
stos
jmp
out
lds
jo
outsl
enter
add
add
rcrl
pop
xchg
mov
sbb
mov
or
ret
xor
mov
add
jo
dec
and
and
dec
not
les
pusha
out
add
inc
sbbb
push
rorb
mov
outsl
xchg
mov
stc
jle
jg
or
je
push
lock
push
rorl
adc
adc
imul
xchg
xchg
dec
push
dec
or
dec
aaa
loop
jecxz
je
mov
pushf
adc
adc
sbb
inc
sbb
add
loopne
and
or
jmp
push
jne
add
and
push
mov
je
pushf
pop
push
inc
cmovae
push
loop
nop
mov
xlat
jl
rol
push
xlat
pop
insb
cmp
pop
jmp
cmpl
insl
cmpsb
shlb
icebp
and
jo
repnz
aas
xchg
sbb
popa
pusha
mov
or
xchg
jo
ret
or
sub
inc
push
mov
add
loop
aam
sbb
andl
movsl
push
cmpsl
jl
push
aad
mov
or
push
lar
or
or
pop
xlat
lcall
mov
xchg
lock
popf
cmp
pop
out
pop
into
xchg
push
sbb
in
pop
or
xchg
mov
mov
hlt
and
insb
ret
leave
rol
outsl
das
adc
iret
ret
mov
das
xor
inc
pop
and
push
daa
dec
daa
or
add
add
aad
ret
xor
jp
inc
mov
sbb
mov
ljmp
xor
loopne
insl
pop
push
ret
mov
sbb
or
pop
and
push
xor
imul
dec
bound
or
lock
nop
push
sub
insl
jno
mov
cwtl
hlt
or
dec
dec
push
adc
mov
add
push
cld
inc
push
mov
lcall
pop
lcall
popf
rolb
dec
xchg
dec
add
push
xor
sub
sub
dec
and
lock
add
xlat
fimull
mov
stos
popw
inc
arpl
test
mov
daa
pop
and
jmp
cld
int3
popl
imul
inc
outsl
mov
and
sub
add
fnop
push
sub
sarb
movsl
ljmp
add
adc
cmpsl
xor
cmp
sbb
mov
sbb
and
push
inc
cmpsb
sub
adc
and
and
insl
std
loope
mov
cmp
jno
dec
inc
movaps
sbb
mov
push
out
insb
cmc
push
xor
lea
push
and
leave
sarl
sub
inc
jb
pop
xor
pop
leave
or
cwtl
sti
push
shlb
push
or
out
movsl
fld
popa
dec
dec
push
aaa
xor
inc
pop
inc
push
cwtl
push
xor
xor
xchg
popf
sbb
jo
daa
xchg
fcoml
js
sbb
adc
mov
fisubl
lret
push
xchg
addb
jmp
sbb
fsubl
leave
mov
inc
aaa
decl
add
fldl
fcompl
add
fiadds
xor
or
dec
pop
push
mov
icebp
xorb
dec
mov
push
xor
dec
jg
mov
add
and
cli
sbb
add
jns
mov
cwtl
js
push
add
insl
cmp
push
add
jnp
test
lock
sub
sub
fisubs
sub
nop
xor
xor
out
jns
jl
xor
and
std
mov
push
outsb
ret
add
inc
sub
fnstsw
js
dec
je
add
jmp
bnd
in
fcoms
int3
pop
pop
add
popa
xchg
aaa
push
sbb
pop
mov
insb
inc
arpl
stos
push
cmp
out
data16
push
dec
push
cwtl
call
fcoml
cwtl
popa
test
inc
fiaddl
shll
sbb
loopne
pop
sar
arpl
or
lret
add
mov
or
fwait
mov
add
mov
jne
outsl
repz
shlb
jo
xlat
add
and
pop
adc
das
lods
andl
aam
popa
sbb
mov
or
xchg
rolb
inc
dec
aaa
mov
cli
movsb
and
adc
adc
cmp
jb
push
rclb
sub
ret
inc
jmp
adc
nop
es
out
sub
push
or
jne
xor
mov
dec
cmpb
jo
mov
jnp
lea
push
inc
sbb
push
stos
mov
mov
mov
push
mov
pop
loop
sub
call
jmp
test
imul
cwtl
dec
fiaddl
xorl
push
addl
add
insl
mov
mov
xor
inc
mov
pop
ja
imul
xor
bound
mov
inc
or
xchg
mov
sbb
jb
mov
es
and
dec
mov
ffreep
subl
inc
cmp
add
test
or
inc
jl
adc
orl
sub
rclb
movsl
sub
roll
mov
imul
and
lret
inc
mov
jo
mov
or
inc
sbb
aam
ret
pop
ud2
adc
pop
cmp
xchg
inc
movb
lock
dec
lea
mov
lcall
add
js
mov
movhps
leave
add
xor
jl
jmp
in
mov
movsb
cmp
adc
pop
rcrb
pop
daa
add
outsb
push
les
cld
sub
jo
inc
lods
and
enter
dec
add
xchg
hlt
sbb
add
dec
popa
in
inc
dec
pop
add
jmp
jl
cmp
loop
mov
lahf
cld
insb
shrl
add
inc
sbb
hlt
or
addb
or
ret
add
inc
iret
hlt
push
sub
and
rolb
in
pop
mov
pop
jp
push
loop
test
adc
adc
dec
mov
aam
add
jl
pop
mov
out
pop
push
mov
cmp
pop
jmp
jb
and
pop
push
mov
addb
ds
pop
daa
outsl
cmpb
inc
setg
jmp
das
cmp
dec
dec
inc
add
cmp
setle
xor
movsl
imul
dec
sbb
dec
roll
adc
cld
or
xchg
xchg
mov
mov
or
mov
add
lret
push
test
sbb
sbb
sti
mov
mov
popa
ljmp
or
stos
repz
adc
lods
dec
lock
mov
xchg
sbb
xchg
enter
and
enter
imul
push
sub
aaa
pop
out
pop
jo
dec
imul
loope
int
add
subb
mov
loopne
rolb
jmp
aaa
pusha
enter
jmp
xorl
bndstx
es
mov
or
xchg
pushf
std
or
xchg
lret
and
xchg
mov
call
aaa
lock
add
in
call
popf
movb
rolb
imul
out
mov
or
orl
jne
icebp
adc
jecxz
ret
cmpb
dec
sub
aaa
mov
add
jb
sub
xchg
mov
cmp
xchg
cmc
inc
add
pusha
or
pop
xchg
loope
add
push
mov
lock
scas
push
repz
push
or
push
cmp
jbe
iret
bound
mov
adc
jle
sub
mov
mov
lods
or
fs
add
jmp
push
mov
rcll
jmp
clc
xor
mov
fstpt
imul
cld
mov
mov
dec
cmpl
dec
lods
mov
pcmpeqw
movsb
cs
dec
inc
xchg
and
cli
add
xchg
push
imul
jnp
jg
sahf
stos
push
sub
sbb
jnp
sub
insb
insl
and
inc
stos
aam
xchg
sbb
cmpsb
test
adc
fidivrl
hlt
fldl
push
pop
addl
or
sub
out
sbb
subl
dec
cli
sbb
cmp
jne
xchg
call
jmp
movsb
pusha
test
cltd
pushf
add
mov
mov
fildll
jg
push
mov
scas
bound
inc
sbb
or
dec
or
dec
push
cmp
aas
fldt
add
cmp
jge
push
add
mov
and
add
cmp
cmc
xchg
xor
leave
pop
clc
dec
or
or
inc
push
hlt
pop
jnp
sub
int
cs
shl
test
pop
adc
cmpsl
jne
aaa
add
test
add
push
and
sub
push
cmp
dec
test
lock
fcomps
pop
cmp
sbb
cmp
jne
push
add
rcl
sti
push
add
push
adc
mov
pop
sub
cmpsl
sbb
add
adc
push
ds
pop
xor
sub
xor
test
xchg
xchg
daa
stc
xchg
mov
dec
pop
imul
cmpsl
cli
les
add
push
add
push
xor
int3
cmp
pop
cmc
jb
js
pop
and
xor
in
je
nop
and
jbe
adc
gs
pusha
jmp
shr
nopl
jb
jnp
scas
mov
pop
push
imul
test
pusha
push
out
lods
mov
ffreep
call
ffreep
push
mov
adc
std
jne
and
imul
fiadds
cwtl
mov
sub
xchg
sbb
cmp
xor
test
or
adc
xchg
lret
mov
and
mov
xor
sub
sub
imul
cmpb
mov
xor
xor
add
jns
outsl
push
in
and
mov
mov
push
test
add
sbb
movups
add
inc
adc
inc
cli
rcrl
aas
adc
mov
pop
enter
rclb
or
dec
mov
sarb
ret
pop
mov
adc
lret
add
clc
xor
mov
fucomi
mov
inc
pop
pop
xchg
xor
sbb
lcall
into
jg
push
mov
rolb
test
push
movsl
sarb
insb
aas
clc
lret
clc
dec
xor
dec
add
pop
call
sarl
xor
inc
mov
sahf
movsb
popf
movsb
sbb
jae
pop
push
xchg
jne
mov
mov
lcall
mov
inc
shrl
js
lret
rorl
cwtl
mov
xor
fs
cmp
jne
inc
adc
pop
jecxz
mov
insb
mov
xchg
sbb
xor
dec
ss
xchg
xor
mov
pop
insb
idiv
mov
aas
jmp
mov
sbb
fadds
jae
pop
or
lods
adc
mov
sub
arpl
and
fld
imul
inc
pushf
pop
cmp
jle
cmp
lods
jmp
imul
and
dec
sti
fbstp
leave
je
add
sbb
aas
inc
jmp
sahf
cltd
mov
mull
xchg
call
inc
dec
sub
cmpsl
je
loop
sbb
mov
outsl
popa
inc
add
or
add
fdivs
xlat
add
test
mov
test
cwtl
and
sub
daa
push
pop
sbb
sbb
dec
cmp
and
pusha
insb
fimull
into
or
rol
push
js
xchg
push
filds
orl
aam
aam
inc
cmpsl
push
bound
cmp
nop
lret
adc
sub
and
add
inc
jp
adc
ret
mov
add
pop
aaa
and
or
pop
not
ret
sub
je
orl
lods
movsb
mov
mov
push
sub
cmp
popa
mov
push
cmpsb
std
mov
adc
addb
hlt
aam
xor
or
sbb
out
push
add
nop
je
add
or
fstl
add
sbb
daa
mov
sbb
mov
push
xor
nop
mov
pop
push
fs
inc
push
push
dec
add
push
cmp
enter
call
and
add
lods
adc
cwtl
xchg
nop
aam
testb
sub
pop
add
rclb
and
inc
stos
test
cld
insl
adc
inc
dec
dec
push
push
sarb
sbb
add
lea
lcall
stc
jo
push
es
daa
dec
std
or
ja
mov
xchg
push
inc
je
and
add
addr16
arpl
aas
push
roll
inc
movzwl
xor
decl
push
push
out
mov
jnp
push
inc
sarb
hlt
sub
mov
sahf
nopl
lock
xchg
adc
shrb
and
jecxz
sub
add
outsb
add
adc
ret
nop
int
inc
dec
or
inc
inc
decl
push
xor
adc
push
sub
rorl
stc
pop
add
ffreep
imul
or
int3
jne
pop
and
addb
dec
mov
add
int
or
out
cmp
fists
sbb
mov
adc
lods
mov
les
jne
inc
dec
out
and
mov
lea
mov
or
jnp
add
push
loope
pop
aaa
loop
lods
sub
cmp
jecxz
clc
clc
cmpb
mov
popa
jne
sbb
mov
xlat
lea
or
xchg
mov
lods
xorl
loop
out
jl
jnp
adc
add
lock
inc
and
pusha
xchg
je
loopne
cmp
sbb
es
ss
fsubrl
adc
mov
test
mov
rcrb
push
rcrb
fidivl
bound
outsl
test
mov
ret
mov
and
inc
int
adc
xor
cmp
rcll
or
aam
inc
std
and
sub
addr16
or
xchg
jl
pop
repnz
xchg
sbb
jecxz
fiadds
shl
fsubrl
cli
mov
adc
sbb
ss
lahf
orl
and
shrb
add
xchg
and
ja
pop
pop
ja
or
dec
arpl
test
lock
dec
xor
imul
ja
lock
movb
mov
mov
out
mov
push
call
lds
inc
mov
pop
xor
nop
cmpl
in
jg
iret
es
repnz
xchg
mov
jne
push
shlb
sbb
adc
xchg
cld
popf
or
xor
or
push
or
shll
dec
xor
cmc
xchg
rorb
daa
lds
sbb
or
shll
imul
or
cmp
je
jno
mov
inc
inc
pop
sbb
mov
dec
sbb
std
xchg
lcall
adc
dec
shlb
lock
adc
fsubrp
or
cli
movsb
sub
out
and
xchg
mov
decb
ds
pop
mov
push
xlat
loope
cmp
mov
jo
push
arpl
and
inc
filds
cmp
mov
add
test
out
or
jecxz
sbb
mov
mov
mov
sub
ja
push
sbb
pop
sbb
out
xorl
ss
andb
mov
cmp
shrb
jg
clc
lahf
push
add
push
inc
mov
xchg
sub
or
mov
pop
push
xchg
lods
push
pushl
add
and
lods
push
repz
add
jno
test
jne
push
sarb
cltd
mov
sbb
adc
or
adc
sbb
arpl
pop
dec
gs
lahf
mov
adc
push
adc
xor
cmpl
pop
pop
sbbl
rorl
movsl
pop
aad
dec
or
out
imul
sub
xor
insl
cwtl
lcall
sub
ret
call
sar
pop
test
mov
mov
xlat
test
adc
mull
jl
sub
pop
mov
jl
adc
inc
adc
test
add
adc
inc
pop
dec
xchg
mov
push
popa
xchg
movsb
pop
mov
add
add
push
cmp
mov
push
shr
adc
je
push
pop
loope
sub
adc
out
pop
jp
jo
or
adc
or
sub
ret
popl
mov
imulb
adc
sub
cmp
jmp
inc
sbb
outsb
and
test
jno
orb
loopne
inc
in
les
sarb
andb
add
test
xchg
push
mov
mov
pop
jo
and
test
jae
push
adcl
icebp
pop
mov
jmp
mov
cmp
enter
sbb
add
and
mov
sbb
arpl
jecxz
cmp
call
and
iret
dec
add
pusha
xchg
mov
or
in
push
rcll
into
pusha
int3
inc
jle
jb
add
inc
aas
jno
imul
mov
outsl
call
sbb
inc
mov
add
add
inc
xor
cmp
sbbb
sbb
push
data16
mov
mov
add
or
sbb
insl
add
mov
mov
rcr
loop
adc
adc
and
or
jno
addr16
call
xchg
cmp
jge
test
sbb
pusha
and
inc
imul
mov
xor
push
dec
mov
mov
mov
or
and
loope
inc
xchg
cwtl
call
or
xor
loope
lock
and
push
lods
sbb
inc
xor
and
movsl
scas
mov
dec
adc
orb
hlt
pop
call
loope,pn
and
mov
add
out
nop
cmp
sbb
cwtl
movl
movsl
movsl
stos
add
mov
pop
push
xor
fwait
or
stc
push
cmpl
mov
mov
sbb
call
fists
add
call
and
xlat
icebp
clc
push
lock
push
add
adcb
inc
dec
mov
and
imul
mov
pop
loopne
pusha
xor
dec
fiadds
push
gs
loope
iret
cli
inc
sbb
add
xor
sar
xor
insb
rcrb
shr
out
imul
sbb
push
pop
pop
in
dec
shll
inc
stos
lock
leave
jge
or
push
mov
add
orl
shr
in
xchg
or
sbb
xchg
popa
js
dec
unpcklps
pop
or
mov
adc
inc
fwait
inc
es
ss
or
les
pop
xor
and
sbb
push
xchg
adc
jmp
xor
popf
pop
xchg
and
jno
je
pop
cmp
sets
and
in
jno
mov
and
add
push
fiaddl
jmp
in
inc
dec
push
and
push
aad
repnz
mov
xor
dec
xchg
cmp
and
adc
add
push
sbb
or
arpl
cs
ret
add
inc
xor
clc
aam
clc
jecxz
sti
inc
add
sub
shlb
or
insl
rcrb
adc
cmpsb
mov
movb
mov
sbb
push
sti
or
push
ja
inc
or
mov
sub
sub
lcall
pop
pop
sbb
xchg
test
addr16
push
dec
push
das
pop
sbb
divps
pop
mov
and
rol
jne
or
push
adc
shll
adc
inc
iret
sarl
loope
cmpl
sbb
mov
inc
test
stos
and
xchg
xor
or
pop
and
pop
push
pop
inc
nop
daa
aas
pusha
pop
int3
test
inc
nop
inc
popf
pop
and
jg
stc
xchg
mov
add
or
xchg
and
adc
dec
and
mov
jmp
repz
std
mov
jne
scas
sbb
mov
push
mov
sub
test
dec
mov
dec
add
enter
nop
mov
cmpl
int3
fldenv
stos
shl
or
sbb
add
push
popa
cwtl
xchg
inc
mov
add
adc
je
sub
or
xor
out
jo
pop
push
stos
sbb
mov
push
sbb
rcrb
arpl
mov
or
stc
je
inc
call
loopne
adc
push
adc
faddl
sub
xchg
sub
outsl
ret
adc
inc
shll
xchg
adc
add
repz
mov
cmp
xor
xor
mov
or
adc
cs
inc
cmp
inc
pushw
dec
and
inc
mov
push
lea
ret
ss
mov
js
inc
jnp
or
pop
je
movswl
sub
jmp
sbb
add
lods
and
cmpsl
mov
andl
imul
pusha
cmpsl
pusha
sub
push
xor
xchg
rcrl
push
mov
xchg
daa
sbb
dec
cmp
clc
movb
xor
daa
mov
xchg
sub
icebp
xor
das
cld
or
xchg
pop
and
mov
mulb
js
fdivrs
mov
je
cltd
jo
jo
mov
dec
xchg
test
or
sub
test
push
imull
mov
or
and
jne
sub
add
roll
mov
sbb
add
adc
popf
inc
cmp
and
adc
test
and
in
cs
mov
shlb
push
pop
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
les
cmp
stos
mov
mov
sub
mov
pop
sarb
imul
loop
sarl
dec
pop
push
rcl
inc
pop
test
mov
mov
outsb
aam
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
dec
adc
xlat
push
hlt
jmp
fdivs
adc
cmp
xrelease
mov
xor
scas
add
cmp
rclb
or
and
xor
test
dec
rcrl
lea
addr16
pop
and
cmp
rorl
shrb
push
cs
in
adc
mov
out
stos
or
jmp
inc
insl
mov
out
sub
sub
dec
adc
pusha
add
out
xchg
outsb
xlat
icebp
xor
fiaddl
mov
daa
adc
fxch
shrb
and
mov
adc
xchg
add
test
jne
dec
jo
pusha
mov
daa
adc
adc
push
mov
fists
xor
lahf
in
je
mov
loopne
icebp
movaps
jle
push
push
pop
sub
and
mov
add
je
js
sub
sahf
mov
dec
stos
push
fstps
sbb
lea
dec
mov
xor
xchg
sbb
xor
aam
test
inc
sub
mov
add
ftst
xor
pop
loop
ja
roll
jb
les
add
xor
add
pop
push
mov
adc
or
cmp
xchg
mov
pop
inc
jmp
and
sbb
add
jnp
inc
sub
pop
sub
cmp
inc
ret
xchg
pop
cmc
push
ds
sbbl
insb
movsb
or
mov
test
imul
and
adc
int3
scas
dec
mov
or
add
or
adc
scas
test
push
and
add
mov
jg
push
dec
insb
adc
fcomps
enter
jne
movsl
mov
sbb
sbb
cmc
push
and
add
dec
sbb
mov
sbb
cmp
cmpsl
xor
mov
test
jp
jmp
daa
add
push
or
inc
shll
add
push
iret
inc
cs
jb
in
call
and
mov
and
fistpll
add
mov
push
loop
adc
push
push
setle
lea
iret
cs
mov
inc
fdivs
orb
and
sbbl
pusha
arpl
mov
xor
js
pusha
pop
das
insl
pop
out
jno
sbb
add
dec
in
xchg
or
dec
adc
xlat
add
adc
push
and
inc
ja
icebp
push
push
fldenv
adc
add
gs
xchg
jp
sti
popl
pop
aas
mov
and
outsl
dec
xor
pop
mov
or
je
adc
bound
push
cmp
add
js
pop
inc
pusha
adc
push
jbe
pop
mov
js
aaa
pop
sub
or
or
cld
stos
push
dec
jne
push
mov
or
dec
add
add
ret
lcall
push
pop
xchg
out
nop
mov
xchg
and
iret
mov
movb
or
jle
ret
in
xor
scas
or
ds
jmp
aam
insb
jge,pn
sbb
movsl
subl
test
jne
add
js
pusha
dec
mov
inc
pushl
imull
jb
xchg
cli
add
imul
into
xor
test
les
inc
data16
adc
fimull
pop
adc
ljmp
fidivrs
push
sbbb
ret
sub
jp
ret
lds
xchg
out
xchg
dec
cmp
adc
in
xchg
ret
dec
dec
xchg
xchg
invd
filds
mov
cltd
loop
adc
out
icebp
jg
inc
stos
stos
sbb
mov
cwtl
and
cli
repz
aaa
mov
xchg
mov
push
insb
mov
inc
and
push
inc
or
xchg
arpl
mov
cs
mov
xchg
xor
jno
mov
mov
jmp
test
push
or
mov
pop
das
dec
push
push
xchg
jae
xchg
test
sbb
mov
dec
ljmp
test
test
push
mov
jae
pop
push
cmp
pop
pop
outsl
divl
mov
aaa
xor
jns
andb
cmpsl
jle
scas
cmpsb
loopne
and
sub
adcl
pop
std
push
mov
push
cmp
das
in
or
into
dec
push
pop
or
push
test
mov
pop
xor
idivl
mov
adcl
into
jnp
dec
js
testb
jb
add
cli
adc
cmp
pop
shrl
jbe
rcl
addr16
xchg
jmp
stos
jne
push
adc
add
jg
mov
inc
adc
pop
ljmp
in
sbb
xor
add
je
cwtl
outsb
fsts
inc
inc
adc
movsb
xor
pop
rolb
jl
je
call
stos
jmp
or
add
push
stos
pop
or
pushf
faddl
cmp
addl
push
add
cmpl
test
sahf
push
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
mov
sbb
fildll
dec
jecxz
sub
push
adc
pop
jmp
mov
out
rcr
or
cmpl
mov
mov
add
ret
in
inc
push
mov
add
adc
daa
mov
adc
add
add
aaa
mov
pop
inc
les
pop
jb
push
cltd
dec
push
sbb
jmp
inc
shl
jae
jne
pop
iret
adc
cmpsl
movsl
cmp
sub
addb
lods
loop
pop
add
mov
mov
sti
rsqrtps
adc
int
andl
sbb
xor
test
add
sbb
les
je
or
and
push
sub
inc
sbb
les
sbbb
aam
rclb
mov
sbb
les
clc
push
mov
mov
lea
pushl
sahf
push
push
pop
outsb
icebp
and
push
and
jb
xchg
out
push
push
les
push
int
icebp
xor
sub
incb
push
dec
arpl
je
andb
lret
xchg
mov
push
push
xorl
mov
add
mov
ds
sbb
cmpsl
sbb
dec
push
cmp
mov
out
push
xchg
xor
inc
jp
add
or
and
les
je
sub
xor
inc
inc
mov
mov
xor
inc
or
adcb
push
and
mov
fwait
pop
ljmp
sub
xchg
ds
out
mov
cmc
out
add
push
inc
popf
and
test
cmp
int3
cld
lods
cltd
add
dec
lahf
or
shll
fildll
inc
mov
hlt
dec
cmp
mov
add
sarl
push
inc
sub
fildll
loopne
addr16
jg
les
add
lret
add
pushf
xchg
add
xchg
je
and
dec
negl
lods
orl
fdivs
xor
adc
pop
addr16
jbe
pushf
sub
jle
and
daa
mov
aad
imul
sub
loopne
jl
cs
push
jo
mov
negb
xorl
loopne
sbb
add
mov
mov
mov
aam
jo
ret
mov
dec
xchg
adc
and
cmp
fwait
add
mov
call
aaa
xchg
loope
push
scas
shl
or
nop
clc
jge
movsb
lahf
ret
notl
nop
cmpb
out
xor
lds
inc
jp
arpl
cmpsb
push
nop
sti
push
enter
pop
negb
sub
repz
inc
ret
pcmpgtb
xchg
push
jl
pusha
mov
loope
mov
out
pop
pop
outsl
mov
aaa
pop
xor
pop
inc
sbb
dec
addb
inc
sbb
push
push
loopne
dec
lds
push
rolb
movsl
add
dec
pop
push
in
movsb
sbb
sbb
jne,pn
push
add
dec
imul
lods
fwait
out
cli
pop
test
sti
rolb
pop
inc
je
cmp
mov
push
jmp
gs
mov
push
and
xor
add
pushl
andl
mov
or
inc
inc
orl
mov
jle
pop
dec
mov
mov
cwtl
xchg
data16
or
lahf
scas
push
or
adc
ja
es
mov
cwtl
mov
je
pusha
push
in
pop
loopne
pop
adc
inc
xor
sbb
outsl
add
and
sub
iret
cltd
cli
push
add
js
or
adc
punpcklbw
lock
out
inc
push
shufps
in
mov
fcompl
cld
and
pop
ss
leave
adc
xor
arpl
xchg
mov
xchg
adc
ror
cmpl
mov
in
add
into
cmp
adc
ss
aad
and
jo
rorb
jne
bound
sbb
jno
shll
outsl
arpl
pop
push
mov
ret
cmpb
cmp
mov
mov
cmp
xchg
sbb
and
orb
push
cmp
out
adc
fbld
add
pop
pop
mov
mov
adc
or
adc
test
je
push
ret
adcl
icebp
jo
mov
jae
adcl
andl
hlt
push
xchg
mov
je
clc
out
xor
bound
xchg
add
jmp
push
xor
inc
mov
push
sub
or
xchg
adc
addl
xor
dec
dec
add
test
cmp
pop
xor
das
outsl
test
push
fistpll
inc
daa
xchg
lods
sbbb
mov
lea
xor
je
mov
sub
clc
pusha
dec
jne
test
cli
mov
jne
repnz
in
and
mov
aam
cwtl
mov
pop
std
mov
sbbb
inc
pushl
movsb
mov
lea
sub
mov
pop
lock
addr16
or
dec
and
push
lret
pusha
push
adcb
adc
loop
je
add
cmpb
outsl
inc
dec
inc
xor
dec
jge
add
or
jmp
js
push
fimull
xor
push
and
call
cmpl
aas
xor
shlb
add
insb
dec
and
data16
and
lea
mov
ret
ret
test
jno
sbb
push
aam
loop
jne
outsl
and
jno
xchg
and
test
lcall
addr16
frstor
andb
cmc
je
jbe
popa
loope
adcb
pop
xchg
pop
imul
rcr
shlb
or
adc
cmp
sbb
dec
xlat
rcrb
stos
stc
add
or
adc
fsubr
mov
xlat
add
mov
adc
mov
add
sti
test
inc
mov
stos
scas
sub
pop
sub
insl
inc
test
sub
dec
pop
sub
rorb
sub
sub
addb
hlt
or
lahf
mov
xor
insl
mov
sub
push
clc
clc
lock
movsl
cmp
repnz
int
call
or
mov
sub
aam
mov
les
mov
inc
icebp
cmovbe
or
jl
mov
daa
mov
mov
add
and
pop
and
lret
lahf
mov
or
push
movb
mov
add
cmp
add
push
pusha
sbb
cwtl
cmovbe
adc
shrb
or
sbb
add
cs
jmp
pop
add
or
rcll
add
pop
push
dec
mov
dec
mov
inc
in
mov
mov
mov
push
repnz
push
dec
or
call
add
sub
cmp
mov
xor
out
mov
jmp
inc
push
rcr
aam
adc
sarb
dec
dec
or
cmp
push
adc
inc
movsl
cs
ficoms
push
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
mov
fmul
adc
ja
or
mov
into
adc
mov
sub
add
in
js
cmpsb
cmp
inc
leave
mov
add
lcall
pop
cmp
and
fmull
or
pop
mov
sbb
xchg
cmp
mov
sbb
dec
cmp
dec
les
sbb
push
fs
add
fadds
add
mov
adc
pusha
mov
add
and
add
js
sub
das
repnz
or
add
je
pop
pop
pop
pop
jg
pop
add
and
push
lds
dec
xchg
imul
out
xchg
test
jge
xor
xor
dec
xchg
push
add
pop
dec
add
sbb
sub
sbb
xchg
sbb
add
mov
aam
insb
sbb
unpckhps
mov
pop
xor
cmp
jns
insb
xor
lret
push
push
dec
mov
pop
rorb
adc
pusha
sub
incl
dec
shll
int3
imul
or
push
mov
sbb
xlat
inc
mov
lret
mov
jb
push
push
lock
ret
inc
pop
in
mov
add
shrb
fcom
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
sbb
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
jnp
jmp
push
mov
gs
fcmove
mov
mov
js
mov
imulb
or
fldcw
add
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
mov
subl
pop
lcall
inc
outsl
imul
fsubs
daa
adc
inc
out
mov
imul
cmpsb
lea
push
fidivl
insl
inc
cmp
sbbl
aam
cld
data16
push
xor
and
push
sub
lds
jb
sarl
pop
aam
add
and
pop
fdiv
out
hlt
aas
inc
adc
inc
inc
sub
dec
movsl
jb
xchg
dec
or
adc
call
dec
sub
push
rclb
xchg
sbbb
cmp
sbb
cltd
or
or
add
je
jno
mov
test
jo
jg
dec
mov
or
pop
nop
leave
inc
xor
les
aam
stos
or
sbb
jecxz
add
dec
push
cwtl
lds
rol
shr
aas
sbb
push
xchg
cvtps2pi
or
adc
mov
dec
mov
in
push
testl
ret
xchg
jo
js
pop
sbb
andb
add
sub
push
add
push
loop
or
cli
std
adc
or
add
adc
cmp
and
arpl
inc
dec
add
jp
inc
add
inc
cmp
inc
pop
jmp
pop
cwtl
test
xchg
adc
mov
mov
pop
stc
add
mov
inc
shll
stc
dec
sub
test
add
daa
lcall
out
sbb
mov
js
nop
ret
cmp
mov
mov
mov
jne
mov
xchg
push
mov
xorb
ss
in
fistps
imul
pop
inc
add
xchg
push
add
mov
jbe
dec
roll
cmp
add
dec
call
adc
sub
xchg
mov
outsl
imul
add
or
and
dec
popf
movsb
push
xchg
fldl
jo
adc
inc
mov
outsl
out
inc
std
cs
addb
scas
and
adc
cwtl
xchg
fildll
ljmp
sub
adc
dec
jbe
add
inc
mov
mov
dec
cmp
or
mov
adcb
or
movsb
sar
pop
clc
cli
ret
push
pop
in
jno
lahf
cmp
pop
pop
lock
xor
xchg
popa
fadds
hlt
add
add
sbb
or
scas
mov
xchg
lods
mov
divb
inc
sbb
call
repnz
mov
xchg
addr16
add
lods
cmp
push
pop
jbe
add
add
xchg
je
jmp
push
add
cmpl
pop
dec
in
sub
aaa
jge
shlb
jbe
add
pop
movsl
push
or
pop
addb
jno
in
subps
popa
jmp
add
mov
je
inc
xchg
lcall
push
mov
inc
in
add
add
add
push
pop
inc
scas
push
shl
pop
pop
repnz
fnstcw
xor
sub
pusha
cmc
pop
int
addb
rolb
xor
mov
lods
lahf
rolb
dec
xchg
dec
sub
pop
ss
gs
out
cmp
cmp
mov
int
call
or
sub
rcrb
hlt
adc
or
sahf
ficoms
movsl
jp
ret
test
and
xchg
ret
or
cmp
xchg
or
sub
cmpsl
jmp
cmpl
mov
and
std
outsl
arpl
or
xor
adc
or
lods
jle
dec
mov
jle
arpl
mov
bound
push
pop
mov
cmp
faddl
adc
loopne
shll
mov
shl
sub
mov
and
mov
daa
push
cmp
loopne
iret
lock
pop
sub
adc
adc
pop
inc
test
jp
js
cmp
sbb
pop
insl
lds
xchg
or
push
or
mov
movsl
mov
mov
mov
adcb
jne
push
mov
adc
xchg
jmp
cmp
and
adc
inc
sarl
ja
ret
push
push
shlb
les
lds
xor
mov
sub
push
mov
adc
clc
sub
mov
adc
mov
push
cld
in
movsb
dec
inc
sbb
scas
popa
loopne
call
sub
sub
add
out
or
inc
movsl
clc
jg
pusha
or
jle
mov
vcvttss2si
cmpsb
xor
push
stos
or
pop
inc
div
adc
fadds
cmp
out
and
out
inc
sub
push
mov
sbbb
mov
mov
mov
or
jl
mov
test
aaa
cmpsb
push
jg
mov
cwtl
mov
rclb
fs
arpl
jecxz
push
ret
scas
pop
fcoml
mov
cmp
add
es
or
push
js
push
jl
xor
xor
sub
or
loop
rcrb
jno
aas
enter
lods
ret
cmp
je
pop
or
mov
pop
ret
aam
mov
inc
jl
pusha
xor
and
test
insb
mov
gs
arpl
push
or
fs
and
popa
stos
mov
aas
test
aam
dec
test
shl
rclb
lock
cmp
fsubl
pop
movb
sub
faddl
pop
popf
pop
and
repnz
test
xchg
xor
out
or
xor
add
add
mov
jbe
pop
inc
and
mov
mov
fidivl
aaa
rolb
add
mov
leave
enter
add
cmp
int
or
scas
cmp
add
xchg
mov
lret
ffreep
add
adc
adc
adc
push
dec
mov
jne
adc
cltd
cwtl
inc
sbb
or
and
add
mov
adc
and
out
jge
pop
or
or
pop
in
xor
std
lahf
mov
jg
add
mov
jmp
mov
orl
inc
push
mov
and
out
pushf
rolb
test
pop
or
outsb
mov
cmp
enter
sub
ret
push
add
mov
ds
xor
add
enter
out
push
inc
ds
dec
push
inc
insl
mov
dec
adc
jmp
enter
or
jne
repz
test
into
cli
out
jmp
push
push
push
pop
clc
loope
je
xor
int
pop
sbb
sub
insl
cmpsb
movsb
or
and
jno
flds
cwtl
pop
fs
push
mov
aas
mov
mov
jne
cmovo
clc
adc
and
dec
jne
into
inc
inc
out
push
xchg
dec
jmp
add
jb
ja
push
xchg
mov
mov
inc
shrl
jl
sbb
xchg
sub
sbb
shr
aam
ljmp
adc
fs
sub
ja
mov
mov
lock
insb
or
mov
inc
mov
inc
sbb
add
lods
mov
mov
adc
pop
je
test
int3
mov
pop
add
xor
aaa
jo
rorl
mov
ljmp
add
daa
or
xchg
pop
scas
add
xlat
in
cmp
sub
fdivrl
icebp
mov
inc
ss
adc
xchg
adc
lods
mov
xor
hlt
or
out
mov
jae
push
addl
inc
cmp
cmp
ficoml
sub
sub
mov
mov
jl
fdivl
pop
dec
or
adc
and
adc
sub
hlt
ret
jnp
test
inc
loopne
movsb
pop
cwtl
adc
jecxz
ljmp
int
pushf
cmpsb
add
push
add
adc
fs
dec
sbb
jp
push
test
ja
mov
pop
push
adc
jecxz
lds
fdivrs
lock
jp
iret
inc
lods
push
and
hlt
ja
pop
sbb
pop
or
jo
imul
cmp
and
btc
addr16
push
push
and
loope
add
xlat
add
pop
and
pusha
xor
jo
push
mov
mov
pop
push
mov
lret
pop
ret
or
or
mov
vrsqrtps
or
scas
icebp
mov
mov
or
rorb
and
out
popa
mov
sub
cmpsb
pop
or
and
js
push
xor
inc
or
sub
pop
pop
sbb
dec
and
adc
ss
imul
cmc
cmp
outsb
push
pusha
fldt
mov
jo
data16
fistps
push
repnz
add
lcall
lods
or
inc
fbstp
bound
xchg
fistps
lret
fwait
test
aam
add
sub
xchg
push
loope
xchg
into
jle,pn
test
push
adc
aaa
mov
pop
adc
ret
fstps
subb
inc
lcall
lods
sbb
mov
and
xor
add
mov
in
fs
movsl
dec
xchg
jo
das
xchg
mov
mov
out
mov
mov
xor
cmp
cmp
cmp
jecxz
add
xchg
inc
movsb
sub
pop
pop
test
push
xor
or
rcrb
inc
xor
loopne
add
imul
cmp
mov
addl
ret
addl
incl
push
dec
insb
addb
add
jg
and
adc
je
lret
insb
add
push
or
or
mov
pop
jb
mov
xchg
pop
add
or
rorb
push
sbb
addb
sub
fs
flds
fsubs
pop
fwait
js
test
sub
push
aam
dec
dec
and
mov
inc
das
add
ret
cmp
xor
add
sbbl
mov
jmp
ja
sub
in
jg
sbb
mov
inc
adc
hlt
push
pusha
nop
or
test
je
addl
add
in
cwtl
cmp
mov
xor
push
pop
pop
es
cld
and
fs
out
ret
inc
adc
andb
sub
imul
or
ljmp
jmp
or
or
xor
test
or
adc
rorb
xor
xor
mov
pop
aad
and
inc
push
push
das
adc
pop
icebp
xor
sub
jne
pop
mov
dec
mov
fdivr
sbb
inc
std
mov
mov
sub
mov
insl
daa
gs
dec
cwtl
jnp
xor
pop
into
or
cmpsb
or
push
inc
or
int
mov
mov
dec
and
pop
daa
pop
mov
jmp
push
add
cmpsl
inc
cltd
add
xchg
in
inc
adc
adc
push
into
push
pop
add
adc
add
pusha
inc
pusha
jne
cld
jo
rclb
test
sub
mov
adc
sbb
notl
pop
insb
imul
mov
mov
mul
into
dec
mov
add
cmp
xlat
adc
rclb
inc
daa
or
scas
pop
push
inc
movl
adc
inc
mov
or
loopne
or
or
mov
and
jg
mov
push
pop
icebp
dec
jmp
xor
and
and
testb
in
inc
dec
inc
fs
add
mov
xchg
data16
addl
shll
inc
or
xor
loop
or
xchg
or
or
sbb
jo
or
adc
cli
loopne
adc
push
mov
xorb
movsb
shll
js
jmp
mov
daa
fdivs
or
orb
inc
sub
nop
bound
daa
out
test
dec
adc
or
xor
or
xor
loopne
sbb
sbb
sub
pop
les
sbb
push
inc
mov
mov
call
sbb
outsl
inc
fs
sbb
and
test
movhps
jno
xor
enter
and
mov
pop
add
das
or
xchg
xorl
adc
in
xor
arpl
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
mov
pop
or
jo
in
or
sub
sbb
sub
cmp
add
cmp
mov
pop
jns
xor
inc
jae
mov
clc
dec
inc
and
dec
lea
fwait
loope
sbb
out
lock
cmp
dec
cmp
arpl
dec
adc
scas
xchg
bnd
rcrl
dec
dec
and
dec
pushf
loope
cmp
add
imul
push
daa
jne
fdivl
xor
daa
inc
les
inc
icebp
or
popa
jo
or
push
jle
xchg
dec
add
aaa
cld
les
sbb
pushf
or
jl
mov
jbe
fs
push
in
inc
mov
loop
clc
pusha
pop
mov
push
mov
push
lea
aam
adc
xchg
shr
mov
lock
mov
inc
inc
sbb
lock
xchg
and
aas
cmp
lock
sti
std
and
jne
sub
lock
adc
mov
enter
sub
leave
add
lea
sbb
fldenv
push
and
insl
aam
loopne
xchg
push
loopne
aad
icebp
pop
icebp
mov
ret
enter
adc
fsubr
push
jmp
sbbb
inc
es
xor
pushf
in
or
inc
sub
or
xor
and
push
sub
add
shl
pushf
addb
pushw
or
stc
cmpb
movsl
add
and
into
mov
pop
adcl
fnsave
sbb
js
scas
add
bound
mov
add
fisubrs
adc
adc
add
fwait
or
test
rclb
add
fdivrp
xor
sbb
cmp
inc
dec
or
xchg
mov
xchg
adcb
dec
add
and
mov
aas
pop
pop
loopne
sbb
mov
mov
jo
and
sbb
add
mov
add
xor
roll
inc
jl
push
imul
adc
inc
sbb
mov
pop
xorl
insl
rcr
cmp
add
xchg
sbb
or
inc
loope
add
ja
push
lods
or
arpl
cld
popl
jge
dec
sbb
data16
inc
and
imul
nop
pop
add
adc
data16
pop
and
xor
enter
pop
andl
in
imul
inc
call
fsubs
int3
inc
notl
in
rolb
pop
lock
or
or
adc
pop
rcll
push
sbb
jnp
data16
fcoms
popa
out
cmp
or
push
xor
or
sbb
fstps
and
int3
adc
loop
movsb
or
sbb
jb
and
push
mov
bound
push
dec
inc
fsubrs
nop
lcall
and
or
sub
push
push
mov
sahf
or
or
lods
jo
xchg
dec
das
fadds
or
das
test
add
add
push
cmc
xchg
bound
leave
ret
dec
push
icebp
inc
mov
inc
add
jg
sar
jns
adc
push
xor
in
sub
pop
push
jne
add
pusha
mov
sbb
add
imul
adcl
add
or
rol
push
pusha
rclb
cmp
mov
shlb
lods
dec
dec
cmp
into
push
pop
push
outsl
sbb
divb
or
sbb
push
or
pop
mov
cmp
dec
aam
jnp
fs
aaa
add
and
inc
push
xchg
int
xchg
and
xchg
add
ds
inc
inc
stos
adc
or
cmp
push
mov
cmp
sbb
jb
cmc
mov
xchg
aaa
loop
adc
or
hlt
hlt
adc
xor
adcl
sbb
sbb
add
daa
pushf
xchg
mov
adc
aam
inc
adc
dec
rcr
or
clc
sub
pop
push
cmp
sarb
xchg
lods
gs
and
xchg
push
adc
sbb
mov
sarl
lret
push
xor
adc
mov
jl
pusha
mov
pop
push
dec
test
pop
jecxz
enter
test
popa
fs
sbb
fsubrp
fs
repz
or
push
mov
dec
jae
pop
cs
push
pop
or
js
inc
push
mov
repz
pop
pop
in
int3
sbb
jmp
pop
sub
dec
xor
sbb
or
sarb
shlb
roll
das
loope
mov
test
lock
sahf
dec
mov
shrd
add
jg
add
mov
ds
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
sbb
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
or
sbb
mov
test
or
inc
cltd
sbb
lahf
xor
mov
mov
cmp
hlt
test
mov
mov
sub
mov
push
inc
add
pop
push
lods
out
inc
xorl
pushf
mov
add
fisubl
dec
push
imul
adc
sahf
out
loopne
popa
push
pop
inc
sub
jns
daa
lea
adc
addl
in
mov
sbb
adc
lock
cmp
xchg
mov
adc
xchg
or
loopne
dec
lds
mov
mov
and
test
movsl
pop
xor
sub
sbb
lock
push
push
inc
push
lock
and
enter
aas
xor
or
adc
jnp
push
addr16
cmp
mov
or
dec
dec
jbe
push
sbb
pop
jne
mov
mov
andb
dec
jae
cmp
jne
pop
cs
jp
fucom
adc
imul
and
aas
push
sub
fiadds
and
push
lret
imul
mov
inc
cwtl
insb
and
test
and
push
pop
cmpsl
add
xor
adc
push
icebp
adc
pusha
fs
sbb
jo
lock
jae
je
jno
push
cmp
pop
sti
push
push
add
je
pop
xchg
lods
sub
sahf
mov
sbbb
bound
jp
sub
push
push
add
xchg
imul
arpl
and
and
xor
jne
fs
or
es
sbb
xchg
push
dec
jne
mov
daa
push
insb
push
ret
rorl
inc
inc
cmc
sub
add
test
add
add
mov
xor
adc
test
add
ljmp
and
add
push
mov
push
mov
fcmove
cltd
xor
push
adc
cmp
sbb
inc
sub
out
add
lret
inc
enter
test
mov
lahf
clc
jne
inc
iret
pop
cld
je
roll
adc
in
mov
jle
aad
ret
clc
or
jnp
rcll
gs
pop
daa
sbb
mov
jne
cmpsl
ficoms
or
fs
sbb
mov
sarb
add
sbb
pusha
xchg
lea
add
add
mov
std
mov
jg
jle
and
dec
xor
pusha
adc
xchg
inc
testl
in
and
inc
xchg
outsb
jge
jle
jl
xor
lock
ss
and
fdiv
ss
es
push
lahf
jbe
push
call
enter
scas
mov
pop
and
ljmp
xchg
sbb
adc
in
pop
fildl
ficoml
mov
pop
and
xchg
adc
pop
xor
aad
cmpsl
rcrb
mov
in
lret
inc
ja
pop
adc
ss
sbb
mov
jmp
in
adc
add
inc
ds
adc
fistl
cmp
sub
js
loop
sub
cmp
jne
jbe
mov
pop
xor
adc
cltd
pop
std
mov
mov
inc
lret
in
adc
outsw
movsb
lods
inc
pop
das
fadds
pop
test
xchg
or
and
insl
push
pop
hlt
test
push
pushl
outsb
insb
adc
and
and
push
stos
shlb
mov
inc
cmp
pop
add
xchg
mov
inc
test
loope
fmull
test
sub
pop
adc
nop
mov
mov
mov
shlb
jo
pop
ss
inc
lea
mov
push
jl
or
dec
push
pop
mov
jnp
jae
xor
jmp
push
mov
mov
xor
push
mov
add
mov
cwtl
lea
and
pop
outsl
jmp
and
add
sub
aas
jb
imul
sub
test
adc
test
mov
cmpl
imul
mov
idivl
jns
pusha
outsb
pop
mov
xor
ret
push
xchg
jbe
cmpsb
cmp
push
dec
jns
pop
push
popa
jno
flds
fistpl
mov
in
inc
clc
adc
mov
and
inc
add
popf
fcomp
nop
hlt
xchg
sbb
dec
cmp
jne
daa
xor
in
sbb
dec
push
mov
mov
dec
sbb
mov
jo
push
inc
sbb
je
or
mov
mov
ss
add
scas
push
pop
adc
sti
leave
incl
es
lret
xorl
pop
dec
and
and
lea
inc
xor
cmp
lock
lret
lock
mov
lret
add
mov
mov
xchg
add
dec
lcall
sbbb
loope
pop
xchg
add
dec
mov
movswl
mov
lock
ljmp
call
and
ficomps
inc
pop
mov
call
nop
enter
jnp
cmpsl
jnp
cltd
cmp
movsl
adc
sar
loopne
repnz
loopne
pop
pop
or
inc
bnd
add
adc
xchg
mov
jmp
add
add
fiadds
sbb
jle
test
xor
dec
push
incl
sbb
lea
addr16
push
mov
inc
add
or
pop
sub
add
jg
adc
mov
dec
cmp
or
inc
or
cs
jmp
mov
lods
mov
mov
bound
jle
push
or
clc
cld
rorl
ja
dec
cmp
inc
mov
mov
push
adc
shrl
add
out
push
dec
adc
push
pop
lock
fsubs
mov
xor
xor
add
pop
adc
imul
mov
or
pop
jns
dec
add
pop
or
and
push
popa
jl
jnp
nop
fldlg2
out
jo
enter
cwtl
pusha
cs
add
in
sub
mov
inc
jmp
sbbl
subl
pop
in
xchg
jl
or
insl
fwait
out
rclb
cwtl
ret
mov
hlt
es
add
cld
push
sbb
aam
cwtl
test
add
inc
cmp
mov
sbb
and
insb
sub
movsb
jb
xchg
jo
je
lret
js,pn
jl
push
mov
test
inc
sub
test
inc
xchg
inc
push
add
fs
fs
ss
dec
push
fbstp
dec
push
leave
xchg
add
dec
dec
inc
add
insl
jns
fldenv
fcoms
inc
gs
pop
lods
or
fsts
dec
cld
daa
movsb
add
movsl
nop
out
adc
jae
push
cmpsl
test
insl
jo
lret
icebp
movsl
mov
inc
in
inc
out
mov
inc
xchg
dec
jae
enter
pop
cmpsl
mov
cmp
jae
outsl
adc
sbb
push
mov
ret
push
add
or
jge
and
mov
mov
push
mov
push
int
in
sbb
sbb
mov
ficoml
insb
in
jl
imul
je
push
xor
or
repz
push
adc
aam
sub
hlt
or
jmp
ret
mov
dec
out
push
add
inc
xchg
adcl
je
loopne
adc
pop
dec
jle
xor
pop
sub
adc
cs
and
mov
orb
xor
cmpsb
push
pop
in
mov
mov
shl
xchg
leave
and
cmpsb
mov
xchg
bound
sub
insb
mov
add
aaa
repnz
mov
testl
mov
xor
sub
mov
mov
cmp
ret
lret
xor
les
nop
inc
dec
add
xor
mov
sub
xor
leave
sub
xchg
push
aas
xor
movsl
and
mov
movsb
scas
nop
mov
shl
mov
xor
bnd
cmp
push
add
sti
xchg
adcb
andb
testl
adc
push
xchg
imul
aaa
xor
jecxz
inc
outsb
pop
dec
scas
sub
sub
outsl
cmpsl
int
xor
xchg
inc
sbb
mov
ret
or
mov
ret
xor
addr16
scas
xchg
aam
ds
inc
ss
inc
dec
fwait
dec
test
pop
sub
cmpsl
clc
and
xchg
add
repnz
test
leave
or
xchg
fs
sbb
cmp
add
mov
cmpsb
jge
sbb
pusha
jl
sub
push
mov
or
inc
or
out
aaa
xchg
push
pop
idiv
out
cmp
je
mov
adc
xchg
sub
and
sbb
pop
fidivs
push
and
ficoms
repz
jnp
add
jmp
movsb
xorb
push
and
addr16
inc
xchg
pop
jp
mov
add
fwait
mov
cwtl
pop
call
and
nop
out
mov
and
loopne
inc
push
pop
fs
fisubs
add
repz
lcall
pop
mov
cmp
mov
pop
lods
aas
pop
sub
mov
mov
cwtl
mov
cltd
pop
in
gs
and
rorb
test
inc
popa
mov
or
inc
daa
movl
out
or
test
ljmp
lcall
add
and
inc
xchg
nop
mov
inc
dec
add
fwait
outsb
vmread
add
out
dec
ss
notl
push
or
sbb
sub
adc
add
sbb
cmpxchg
pop
pop
mov
ja
repz
lods
push
shlb
cld
adc
sahf
cmp
push
jns
je
jl
and
out
mov
test
das
xchg
push
add
inc
insl
and
and
add
push
adc
shll
notl
add
jo
mov
dec
lcall
arpl
xchg
fs
inc
inc
and
roll
dec
pop
lahf
fwait
and
mov
rclb
inc
xor
add
cmpsb
add
inc
pop
negl
inc
test
jne
xlat
pop
sbb
rcl
add
outsb
sbb
and
sbb
xchg
adc
sbb
movsb
jnp
add
repz
xor
out
cs
push
int
fxch
and
dec
xor
sub
mov
inc
das
dec
add
pusha
sub
lock
or
pop
adc
or
push
bound
test
mov
xor
movsb
sbb
adc
out
xchg
and
pop
mov
inc
sub
dec
rolb
ja
xor
pusha
and
dec
push
ss
aas
inc
dec
stc
sub
sbb
and
or
mov
add
das
xchg
xor
mov
adc
xor
pop
xor
rorl
cmpsl
cmp
mov
mov
xor
cmpsb
mov
adc
pop
bound
jno
les
push
cmp
jle
lahf
loopne
xlat
sub
jle
fldl2t
mov
in
mov
inc
or
inc
push
movb
and
test
mov
loopne
xor
inc
pop
xlat
push
inc
in
repnz
xor
std
adc
inc
scas
mov
xor
fiaddl
imul
mov
dec
popf
dec
lods
xchg
shlb
cwtl
rclb
mov
dec
ret
cld
or
push
sub
pop
mov
int3
dec
push
stc
push
and
dec
push
repz
sbb
inc
sub
cmp
mov
sbb
loop
popf
xchg
out
aad
cwtl
xor
mov
xor
and
add
cmp
mov
stc
int3
mov
mov
dec
jae
mov
push
push
push
or
insb
and
dec
add
sub
pop
movb
lods
xchg
jle
mov
mov
push
pop
sub
aas
add
shrb
xorb
nop
add
lock
pop
add
xor
cwtl
mov
mov
insb
je
dec
aad
lcall
xor
push
push
lret
das
fstps
push
jl
xchg
jl
data16
pop
imul
xchg
lret
sub
jae
add
rcrl
fwait
dec
dec
mov
or
xor
dec
cmp
cmp
mov
movsl
pop
jnp
push
sbb
popa
ss
mov
mov
fs
push
dec
scas
jp
test
fmull
fbstp
sbb
pop
lahf
shrl
out
or
in
and
pop
imul
popf
push
mov
sub
adc
xchg
adc
jne
out
xchg
jo
test
out
mov
pop
dec
mov
clc
movsl
inc
pop
cmp
push
cmp
je
lds
adc
adc
mov
insb
and
ret
jo
cmp
rcrl
sbb
movsb
push
adc
mov
cmpsl
decb
cmp
mov
loop
or
sar
xchg
sbb
jbe
cltd
and
jl
mov
dec
sbb
sub
lds
inc
dec
lods
xor
cmpsb
jl
push
mov
adc
lods
loop
mov
ror
js
insb
xchg
adc
int
pop
jno
jne
cmp
je
test
out
jb
jg
add
je
or
jl
andl
adc
iret
je
jne
sub
mov
lods
mov
fmull
or
jo
jg
pop
adc
adc
pop
push
cmp
push
pop
lahf
lret
mov
shll
sbb
xchg
ja
mov
ficompl
adc
push
or
pop
inc
or
sbb
adc
add
orb
adc
and
lods
orl
mov
pop
mov
mov
cmpb
mov
mov
imul
mov
clc
push
or
inc
pop
or
xor
pop
loope
pop
repz
daa
inc
cwtl
inc
adcl
cltd
ret
rorb
mov
rol
sub
rclb
mov
push
or
scas
punpckhbw
xchg
pop
pop
sbb
es
inc
sbb
lods
pop
xor
adc
and
xchg
pop
and
and
arpl
jge
pop
jno
and
and
sub
mov
mov
or
mov
cmp
or
call
cmpsb
adc
imul
pop
loopne
test
add
mov
test
push
pop
cmp
push
and
mov
and
push
adc
cs
imul
shrl
int
dec
adc
subl
inc
xor
xor
rolb
test
ja
xor
loope
aad
mov
mov
inc
sub
inc
xor
or
outsb
inc
dec
xor
lahf
out
jle
jno
arpl
ja
insl
mov
and
das
popf
je
dec
push
sbb
std
dec
sbb
sbb
daa
push
push
stos
mov
je
xor
scas
push
mov
push
xor
jge
in
mov
cld
mov
shl
and
inc
cmp
inc
add
add
sbb
sbb
add
inc
jne
dec
lods
jne
subb
mov
push
aam
push
mov
dec
xchg
or
inc
and
jb
mov
rorl
aad
or
sub
nop
xchg
divb
and
inc
fbstp
or
mov
gs
push
xorb
test
lods
inc
icebp
aas
or
rcll
pop
sub
add
lods
sub
fadd
xor
ret
adc
movsb
outsb
call
aad
push
pop
or
stos
adc
adc
xchg
iret
pushf
test
cltd
pop
xchg
mov
orb
jl
clc
call
xchg
sbb
add
jmp
icebp
or
xor
lcall
and
inc
cmp
jg
pusha
inc
dec
add
push
mov
scas
jno
jge
cli
jae
push
push
push
rcll
ds
mov
popf
jecxz
or
call
mov
cmp
add
in
jmp
scas
push
sbb
jae
sbb
jnp
hlt
imul
cmp
adc
pusha
pop
add
ret
xor
cmc
mov
dec
mov
inc
cmp
adc
push
jmp
sub
push
scas
test
xor
adc
or
test
xor
pop
mov
and
adc
adc
push
imul
xchg
ret
sub
test
adc
sub
lcall
and
and
sbb
out
ljmp
push
dec
push
fdivr
or
fcoms
imul
xor
fimuls
shlb
sbb
insl
cmp
add
pop
loope
jmp
mov
xor
push
cmp
psraw
incl
xchg
in
movsl
mov
xor
xchg
inc
jo
add
arpl
sub
sahf
adc
dec
xor
and
shlb
aaa
push
pop
xchg
xchg
cmc
add
inc
dec
mov
stos
dec
mov
lahf
enter
mov
shll
cmp
mov
pop
or
inc
cmp
sub
and
test
xadd
loop
push
adc
fldl
adc
shl
xchg
add
xchg
out
adcb
jnp
pop
inc
push
inc
push
pusha
jecxz
lock
sub
xor
call
jmp
incb
loopne
addl
inc
sbb
adc
push
cmp
mov
hlt
xchg
lds
dec
jnp
sub
adcl
mov
popl
sbb
repz
jl
mov
lock
adc
out
pop
push
cs
bound
divl
in
mov
sbb
jnp
ds
sbb
enter
call
lahf
and
mov
mov
pushf
inc
mov
mov
mov
clc
leave
adc
adc
fimull
mov
jnp
mov
ror
sti
mov
adc
jne
mov
xchg
in
test
imul
mov
or
mov
cmc
push
sbb
push
inc
inc
ret
cmp
or
jmp
xorb
and
push
push
insl
push
dec
test
dec
loope
and
movsb
push
mov
shlb
push
mov
sbb
adc
fstl
and
dec
cmp
jl
movsb
mov
int3
pop
sub
sbb
shll
jp
popa
insb
push
push
je
mov
insl
loop
sbb
inc
adc
aaa
fdivrs
sbb
sub
and
divl
jo
inc
loopne
cltd
xor
int
mov
adc
inc
bound
pop
and
cmpsb
aam
mov
dec
and
sbbl
fstps
inc
dec
xor
dec
or
and
rcll
enter
mov
sbbb
daa
and
ret
dec
aam
insl
sub
pop
fisubl
mov
or
scas
or
adc
add
je
push
mov
jmp
cwtl
test
cmp
pop
pop
mov
inc
xchg
cmpsl
sbb
inc
xchg
xchg
mov
dec
hlt
pushl
hlt
mov
dec
clc
popa
clc
inc
mov
mov
and
add
inc
xchg
mov
add
adc
cmpsl
cmp
mov
jecxz
add
lahf
rclb
add
nop
add
cmp
out
jle
movsb
loopne
test
fdivrl
push
jg
clc
sbbl
jne
scas
add
mov
xor
and
and
fiadds
movsb
shlb
mov
jge
and
repnz
jno
and
and
jno
stc
es
cwtl
in
cmp
imul
in
xchg
rclb
push
jo
xor
nop
xchg
dec
jmp
inc
dec
jo
call
sub
sahf
testl
xor
lret
ja
imul
or
add
xlat
out
shrb
scas
adc
xor
or
mov
out
rcrb
cwtl
mov
cmpsl
or
fs
dec
in
arpl
dec
jge
pop
shl
inc
xchg
push
dec
inc
jmp
loopne
push
aas
xor
movsl
cmp
adc
pop
push
lock
outsl
inc
fcoms
cmp
mov
pop
lods
add
fadds
movsb
icebp
cmpb
push
push
xchg
fildl
cmp
shl
mov
mov
das
test
and
and
mov
push
xchg
xchg
shrl
adc
sub
popf
test
test
pop
lock
aaa
cwtl
ret
push
add
dec
cmp
es
or
or
dec
popa
cmp
or
nop
push
shlb
lock
mov
clc
mov
xor
xchg
mov
cmp
cli
test
movl
push
pop
push
fwait
dec
out
sbb
jg
pop
mov
and
xrelease
inc
push
mov
or
xor
sbb
jmp
adc
dec
cmp
test
add
inc
ja
add
pop
xlat
pushf
pop
test
inc
cmp
subl
stos
jb
push
test
cltd
or
xor
les
jno
fdiv
fcoml
mov
addb
ret
jae
les
mov
dec
test
inc
das
jmp
fs
pushf
push
push
or
int
sub
inc
lods
dec
add
sub
add
xchg
pop
xchg
lcall
add
incl
ret
push
add
decl
addb
sarb
lcall
add
dec
add
cmpsb
mov
sub
movsl
mov
cwtl
lods
mov
or
repnz
pusha
dec
outsb
jne
dec
mov
and
test
jae
mov
movups
inc
cs
sub
jge
or
or
popa
jb
add
test
push
jle
adc
stos
add
xor
ja
push
mov
stc
loopne
cmc
bound
insb
add
mov
lcall
movsb
popa
inc
int3
push
dec
mov
pcmpgtw
and
adc
mov
add
int
jle
imul
sbb
movsb
push
xor
push
out
add
pop
fnstsw
icebp
jo
out
adc
pushw
xchg
push
inc
push
gs
and
push
aam
cs
add
adc
mov
ret
cltd
push
mov
cld
push
or
dec
fstps
int
imull
push
or
adc
in
es
pop
mov
add
cmpsb
dec
lret
dec
fidivrs
push
xor
inc
lods
aam
sbbb
inc
or
inc
ds
imul
push
pop
in
push
mov
mov
mov
nop
in
and
int
xlat
sub
xlat
xlat
sahf
out
inc
mov
lods
push
int3
in
enter
lock
pmullw
or
xchg
sub
pop
stos
add
addr16
lods
out
aad
mov
inc
add
sub
fstpl
mov
cmp
repz
sbb
cmp
movsb
scas
and
fwait
cld
pusha
cli
cwtl
sti
mov
test
pop
pop
sbb
test
das
sbb
dec
mov
cmp
fdivr
pop
fdivr
push
lods
stc
in
and
jnp
cmp
idivl
daa
pusha
nop
cmpsl
pop
sbb
jo
sbb
inc
dec
clc
inc
add
inc
add
test
test
add
arpl
imul
adc
cmp
insb
or
inc
add
add
hlt
imul
out
gs
dec
cmp
or
push
and
fs
or
fdiv
js
dec
inc
std
sub
imul
dec
cwtl
push
lock
in
cmp
inc
dec
add
push
jge
dec
and
inc
out
xor
mov
inc
add
das
add
sbb
cld
test
repnz
inc
or
fcomps
jne
cmpsl
adc
xchg
cmp
or
das
lcall
adc
pusha
enter
pop
or
and
aas
mov
arpl
js
and
add
push
dec
pop
inc
ja
pop
mov
adc
xchg
mov
jecxz
test
jb
push
fists
cmpsl
shll
divb
cmp
outsl
push
popa
fs
or
xchg
nop
sbb
iret
sarl
int3
xorb
lea
inc
sub
inc
sbb
mov
add
mov
or
bound
andl
mov
adc
dec
cwtl
cwtl
push
add
sahf
popa
cmp
pop
mov
test
lcall
jnp
mov
and
pop
add
push
push
enter
pop
pop
in
or
adc
unpcklps
pop
cld
adc
dec
fildl
inc
or
sub
scas
lret
jmp
cmp
pop
es
dec
imul
push
xor
add
loope
aad
jl
add
push
mov
pop
xor
popf
filds
in
test
jle
cs
add
pop
in
pusha
push
add
sbb
xor
inc
imul
cmp
mov
sbb
push
or
add
loopne
rcrb
push
lahf
adc
imul
pop
dec
push
add
xchg
adc
lret
pop
cmpsb
push
adc
scas
and
cmp
mov
adc
push
je
xchg
pop
es
jnp,pn
into
cmp
or
pop
mov
movups
in
sbb
or
loope
and
push
or
gs
ds
inc
lret
push
sbb
imul
push
jo
aad
popa
jo
nop
xorb
flds
inc
dec
push
jb
arpl
fsincos
jne
jl
or
or
xchg
and
sar
in
push
cs
mov
sub
insl
popa
cmc
pusha
ljmp
sti
and
sbb
and
push
fstps
int
sub
into
push
push
inc
push
mov
mov
inc
hlt
pop
insb
loopne
sarb
nop
adc
and
cmpsl
popf
and
push
fmuls
sbb
mov
push
push
js
repnz
or
xor
sbbl
fstl
clts
and
and
adc
cmp
xor
cmp
fbld
cmpsb
adc
shll
or
push
imul
jecxz
push
xor
mov
xor
push
leave
pushf
sbb
mov
jo
popa
test
paddsb
out
into
out
inc
ds
sub
sbb
mov
jg
sbb
loope
mov
xchg
nop
pushf
xlat
test
and
inc
jbe
mov
daa
sub
sti
ret
mov
xor
xor
ss
cmp
inc
inc
push
aaa
dec
aam
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
push
rorb
add
push
push
pop
pop
pop
cmc
or
imul
sub
mov
push
xor
pop
js
cs
xchg
dec
lret
push
mov
xor
ljmp
xor
adc
sub
testb
mov
push
cli
and
add
add
addr16
jns
add
add
mov
int3
lcall
rcr
push
xchg
mov
pop
push
pop
cmp
incb
dec
loopne
pop
jb
mov
rorl
lods
dec
sub
sub
clc
add
fildl
je
push
jp
push
jg
rcr
jle
cmc
shll
inc
jge
roll
divb
lahf
mov
mov
cmp
dec
rcll
mov
and
mov
lret
and
cmp
mull
cmp
mov
add
adcl
imul
mov
nop
jmp
inc
sbb
insb
movsb
inc
inc
dec
pusha
sub
dec
call
clc
push
jecxz
mov
lods
or
leave
sbbl
and
aas
les
and
testl
push
sbbb
in
sbbb
adc
pop
xchg
sarb
mov
hlt
je
test
pop
inc
and
sbb
mov
mov
mov
push
cvtps2pd
inc
adc
cmp
jmp
into
or
push
loop
inc
rol
xor
push
or
rorl
fcoms
scas
sub
addl
mov
pusha
idiv
mov
jmp
xor
cs
push
xor
dec
sub
lahf
sub
dec
push
pop
scas
mov
nop
dec
and
jg
xchg
or
jmp
inc
sti
push
add
or
mov
inc
jge
pop
pop
mov
sub
ret
jle
shll
xchg
es
icebp
outsl
hlt
push
push
data16
lea
movl
pop
dec
cmp
aas
push
cmp
ja
insb
fwait
loopne
sbb
xor
pusha
je
mov
add
addr16
loopne
add
mov
lret
arpl
pop
ret
das
call
mov
addb
daa
icebp
insl
clc
lret
loope
mov
pusha
pop
jne
cwtl
ljmp
test
push
jmp
push
jle
sbb
fsubs
es
sub
in
push
in
outsl
sub
lods
cmpsl
lods
sbb
cmp
ja
jo
xlat
cld
lahf
xchg
imul
inc
ljmp
dec
jns
in
push
xor
int
je
pop
cmp
aaa
in
sub
cmp
orb
lahf
movsl
aas
jb
in
or
inc
notl
inc
ret
inc
mov
call
ja
rclb
ja
pop
inc
cmpsl
nop
xchg
and
sbb
inc
sbb
sub
je
adc
xchg
mov
sbb
inc
imul
cmp
pop
mov
push
dec
popf
cmpsl
fs
inc
je
rorl
aaa
push
pop
inc
lret
push
jl
add
cmpb
iret
nop
cmp
fnop
sbb
cmpxchg
add
mov
aas
cmp
fbld
sub
inc
push
push
nop
sbb
dec
sbb
test
pusha
xchg
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
out
and
mov
fwait
aas
mov
je
or
xor
dec
dec
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
sub
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
and
pop
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
adc
xor
aas
jmp
enter
call
mov
dec
jg
cmpl
adc
test
sub
cmpsb
mov
inc
femms
mov
inc
dec
js
push
orw
nop
cmp
add
in
nop
or
add
rolb
mov
or
add
jp
jnp
sub
mov
jl
cmp
pop
imul
faddl
fucomi
dec
pop
pusha
pusha
insb
cmp
push
fmul
xor
pop
enter
push
or
subb
cmp
mov
test
push
outsb
imul
movl
inc
in
or
insb
mov
cmpb
and
loopne
cmc
in
adc
mov
int
aaa
je
sti
lcall
sub
jo
push
adc
pop
flds
lods
cmp
pop
icebp
stc
ja
leave
mov
or
cmp
int
mov
push
idivl
iret
ret
mov
adc
ja
xor
pop
cmp
inc
push
imul
cmp
orb
push
fadds
lret
mov
jge
test
dec
jo
iret
in
insb
sti
cmp
xor
test
lock
adc
divb
cmc
in
push
or
push
in
andl
dec
jmp
inc
push
adcl
xchg
shl
lret
shrb
inc
pop
cmpsl
sbb
pop
sub
or
dec
sti
xchg
adc
fs
out
or
and
das
enter
fsubs
sub
hlt
mov
push
add
test
pop
push
jp
mov
or
movsb
inc
ret
mov
adc
add
int3
dec
and
es
push
pop
lods
testb
shrl
mov
shlb
aas
dec
cld
fstps
xchg
insb
mov
mov
sbb
mov
insl
shrb
fbstp
adc
add
gs
adc
ficoml
test
je
jp
mov
mov
in
jns
mov
lock
cmp
mov
or
sahf
jo
sub
es
popa
decb
inc
mov
xor
inc
loope
stos
jg
push
adc
ret
jo
and
xor
iret
pop
ds
lea
shll
xor
inc
cli
pusha
leave
mov
and
or
adc
lahf
mov
pop
inc
cmp
push
aad
mov
mov
mov
sarl
jmp
jbe
sbb
push
pop
mov
xor
shlb
or
pusha
sbb
outsb
pop
pop
out
je
or
lock
cwtl
jge
adc
int3
outsb
xor
daa
sub
cld
cmpsb
lock
je
ds
imul
inc
out
add
xchg
adcl
iret
nop
nop
push
adc
mov
and
loopne
jecxz
xchg
clc
call
call
mov
xor
ljmp
add
cmp
adc
and
inc
cmp
aaa
add
rorb
mov
and
dec
subb
lahf
hlt
jb
or
sub
sbb
xor
sbb
mov
and
lock
addl
push
cs
adc
lret
or
mov
stos
rcl
iret
ss
aad
jle
jg
fcmovnu
mov
add
sbb
or
push
fwait
sbb
xchg
xchg
sahf
or
orb
dec
loope
or
xor
mov
rcll
cmp
je
mov
subl
mov
sbb
or
int3
push
mov
cwtl
out
push
adc
test
repz
or
mov
xchg
nop
and
daa
test
scas
xchg
adc
push
mov
xchg
add
pop
iret
xor
data16
clc
add
push
imulb
je
inc
or
xchg
fsubs
scas
icebp
push
jns
and
mov
pop
mov
ss
or
adc
mov
shl
push
stos
inc
cmpl
aaa
shlb
movb
cmp
pop
cwtl
and
test
jmp
or
pop
out
and
sbb
hlt
enter
ljmp
std
push
smsw
xchg
lock
call
mov
inc
xlat
and
rolb
adc
pop
inc
data16
sbb
cmp
icebp
and
mov
mov
lods
les
push
sbb
ss
addl
inc
test
ret
mov
nop
into
xchg
xor
fldl
mov
jns
enter
gs
lock
loopne
imul
inc
xor
sub
xor
dec
and
push
sbb
sbb
adc
lret
rolb
sti
in
cltd
xchg
decl
push
fsub
clc
push
add
jle
mov
cmp
invd
das
pop
fisttpl
cmp
cld
adc
dec
cmpsb
jecxz
jmp
orl
dec
adc
pop
mov
jnp
lock
inc
cwtl
pop
add
and
test
jge
repnz
cmp
push
push
inc
adc
fsubr
dec
icebp
push
fsubrs
push
lods
cltd
js
lods
add
mov
ficoml
pop
mov
sbb
sbb
jge
clc
jecxz
popa
cmp
enter
add
popf
mov
sub
push
or
and
es
or
popf
push
add
inc
push
sub
and
sub
roll
mov
movsl
and
mov
cmp
pop
mov
test
ja
mov
aad
stos
movsb
pop
lock
push
lock
adc
add
sub
shrb
sbb
sbb
push
lods
mov
xor
bound
mov
iret
hlt
cmp
push
sbb
hlt
hlt
pop
into
hlt
sub
inc
add
push
rep
lock
imul
test
shlb
inc
jne
mov
push
inc
xor
leave
lock
rorl
sbbb
cld
add
jp
or
ds
pop
fists
sqrtps
loopne
xchg
cmp
int3
gs
outsl
lea
or
add
rorb
adc
or
ja
ja
outsb
aaa
fisttps
sbb
or
push
inc
cmp
dec
add
hlt
push
inc
xchg
jne
mov
pop
mov
ja
or
sbb
jne
loopne
ret
aas
sbb
pushf
call
inc
les
enter
movsl
pusha
dec
push
pushf
and
lcall
cld
mov
adc
and
xor
popa
pop
push
pop
fisttpl
xchg
cmp
sbb
daa
sub
xlat
xchg
pushf
or
add
pusha
aaa
sub
mov
iret
add
mov
sub
jmp
in
push
ret
sub
xor
or
sub
mov
sub
add
inc
add
pop
pop
xchg
loope
shlb
adc
dec
call
ret
pop
lods
inc
sbb
call
or
test
fdivl
inc
mov
les
xor
leave
imul
and
sbb
push
push
call
jo
sub
mov
xchg
jl
call
xor
mov
lret
clc
sub
clc
orl
pop
and
and
dec
lock
clc
leave
add
add
mov
add
je
dec
xor
arpl
push
mov
pop
mov
addl
pop
sbb
or
push
inc
and
pop
test
test
inc
movsb
leave
cltd
mov
and
sbb
cmp
cmp
pop
push
out
cmp
sbb
loopne
cmp
add
cmp
push
mov
data16
rorl
jmp
outsl
sbb
sub
jecxz
push
xor
shl
mov
das
in
xlat
ret
adc
andl
test
cmp
jno
inc
add
or
push
lcall
adc
push
mov
cltd
lcall
or
or
mov
and
push
je
cmovl
popa
add
cmp
push
pusha
inc
push
sbbl
jmp
fistl
add
pop
mov
rolw
add
sub
fs
pusha
push
int
jl
xor
movsb
js
mov
xchg
dec
aas
sub
movl
pop
sub
or
xchg
out
nop
sbb
dec
call
pop
fsubl
mov
pop
sub
dec
mov
orl
mov
xchg
fchs
or
pop
lahf
mov
add
xor
imul
ret
cmp
cwtl
cld
incl
mov
mov
xchg
push
inc
push
mov
xor
sbb
push
in
test
dec
out
test
bndldx
mov
pop
adc
xchg
out
sbb
int
inc
cmp
mov
ds
out
dec
popa
sarl
add
cltd
lret
or
subl
add
cld
ja
sbb
int
in
add
push
mov
xor
cmpb
push
loopne
lock
and
push
add
ret
testb
pop
adc
xchg
or
lea
out
mov
xor
scas
clc
xchg
adc
lods
and
aad
sbb
lock
scas
inc
sbb
inc
pop
dec
xor
shll
dec
dec
frstor
xor
in
lea
fadds
pop
and
and
sub
mov
pop
xchg
and
gs
jb
fwait
cli
pop
or
mov
cmp
inc
lret
and
jmp
aaa
cmp
ret
lods
mov
or
mov
and
and
popf
rolb
pop
add
or
pop
push
or
mov
mov
cmpsl
cmp
pop
or
je
jmp
insb
mov
or
mov
mov
jno
in
fldcw
cmpsl
out
aas
je
adc
pop
lcall
add
mov
push
xchg
dec
movl
sub
aam
inc
cmp
sub
mov
es
pop
mov
mov
mov
nop
dec
lds
mov
int
inc
inc
push
inc
inc
sbb
rcll
dec
je
outsb
ret
or
adc
ret
lahf
fs
xor
xor
lea
mov
jmp
andb
shlb
xchg
push
ljmp
jge
loopne
aad
ds
and
xor
popf
mov
adc
outsl
pop
in
daa
stos
pusha
pop
cmp
es
cwtl
cmp
fs
fstps
add
pushf
or
movb
leavew
fcmovu
mov
xchg
es
movsb
xor
call
bound
js
cmp
sbb
push
pop
pop
mov
inc
shlb
sub
jge
outsb
pop
xchg
imul
jbe
and
stc
gs
popa
cmpsb
lock
or
sub
ljmp
pop
mov
jp
adc
inc
nop
jne
dec
out
pop
addb
push
mov
push
les
ret
pusha
pop
popf
push
inc
push
jae
lcall
xchg
mov
popf
lods
jmp
clc
push
cmp
sahf
gs
insb
popf
xchg
adc
add
inc
and
mov
xor
xlat
dec
ret
push
lcall
inc
lahf
and
add
dec
sbb
repz
inc
and
fwait
or
jle
push
cmpsl
and
and
fs
aas
lret
sbb
and
xchg
sub
dec
pop
or
xor
and
int3
cmpsl
ret
cmp
in
push
push
mov
lret
add
mov
js
test
test
insb
cmp
fsubr
and
xor
mov
test
add
loopne
outsl
sub
jmp
jg
or
pushl
add
mov
sub
mov
popf
push
lahf
mov
mov
adc
dec
mov
inc
jp
sub
inc
leave
xchg
xchg
inc
inc
cld
incl
sbb
dec
or
out
push
or
pop
movl
adc
cmp
lods
out
scas
sbb
add
out
cmpl
loop
ret
iret
mov
imul
js
push
mov
enter
lcall
shlb
ret
mov
fs
jle
stos
inc
lret
push
cmp
inc
test
jnp
adc
test
pop
pushf
xchg
popf
sti
std
dec
cmp
mov
pop
mov
cwtl
xor
push
add
daa
ror
enter
mov
mov
push
stos
iret
ja
es
push
mov
push
xchg
scas
es
pop
mov
inc
pop
xor
popf
mov
xor
jge
inc
inc
xchg
sub
clc
sbb
jmp
mov
jle
push
push
data16
and
mov
xchg
and
fisubrl
push
pop
cmp
inc
ds
xchg
push
cmpsb
cmpsl
movsb
arpl
scas
and
adc
inc
aas
and
jb
pop
sub
pop
and
leave
xor
leave
inc
jb
inc
or
or
pop
je
and
mov
or
fs
push
pop
adc
cs
xor
insb
sub
mov
iret
inc
mov
mov
mov
scas
xor
or
in
fs
push
insl
xor
push
push
cmpsl
add
int3
sbb
jb
xlat
jl
jl
inc
or
js
ja
scas
in
lea
rolb
add
adc
xchg
into
xor
loopne
enter
mov
add
mov
adc
push
rcl
mov
test
adc
add
mov
and
aas
xorb
mov
push
lods
jecxz
adc
in
inc
fwait
cltd
bound
sub
push
sti
inc
imul
mov
pop
push
rcl
rclb
mov
call
rol
or
inc
mov
add
inc
cmpsb
inc
imul
push
notl
mov
mov
inc
push
xchg
adc
lret
in
add
out
jae
ficoml
dec
jne
or
pop
cld
add
out
stc
pop
js
enter
inc
inc
push
lcall
fucom
pop
fsts
pushl
push
ret
mov
js
test
jmp
pushl
dec
inc
add
adc
and
mov
movhps
insl
add
push
orl
add
xchg
sub
scas
pop
sub
sub
imul
mov
mov
push
int3
add
call
sbb
xchg
imul
out
inc
inc
stos
mov
cmp
mov
sbb
hlt
or
sbb
add
xor
imul
scas
add
test
or
hlt
sbb
in
loopne
in
mov
leave
rolb
popf
mov
inc
enter
sbb
dec
dec
xchg
and
jle
or
les
jnp
sub
pop
xor
test
les
sbb
cmp
dec
push
sbb
cmpsl
pop
dec
xor
xor
sbb
aam
je
push
imulb
jno
cmpsb
repnz
pop
iret
les
rclb
aam
mov
rcrb
sbb
cmp
enter
lea
movsl
cmp
dec
fwait
jl
data16
int3
push
stos
push
inc
adc
lds
inc
push
gs
test
rcl
inc
mov
negl
scas
add
stos
xor
adc
jne
push
and
js
xchg
dec
mov
jns
call
dec
fimuls
insb
xor
add
inc
jmp
fdiv
rcrl
xor
xchg
imul
xor
sti
mov
xchg
cmp
dec
jmp
inc
fistpl
punpckhbw
imul
loopne
pop
dec
movsb
lock
repnz
test
orb
divl
loopne
pop
sub
adcl
cmpsl
or
test
pop
iret
add
pop
leave
cmpsb
jno
inc
mov
popa
sbb
add
popa
mov
into
xchg
jne
insl
cltd
and
lods
push
sub
or
mov
sbb
cmp
outsb
sub
xor
test
js
push
and
aad
sbb
aaa
push
mov
pop
ja
fwait
or
pop
test
stos
loopne
sbb
shlb
sarb
test
xlat
call
popf
into
mov
test
sub
dec
or
pop
cmp
mov
pushf
sbb
inc
iret
xorl
lods
and
xchg
inc
imul
sti
and
add
add
pop
decl
sbb
sti
jl
inc
mov
je
sbb
cmp
js
movb
push
addr16
mov
dec
ret
xchg
mov
pop
inc
sbbl
mov
imull
cmpb
movb
popa
adc
int3
daa
add
pop
fistl
xchg
jne
loope
in
fsubl
add
mov
jle
aaa
dec
and
dec
inc
jne
jnp
test
cmp
mov
jne
mov
adc
cmpl
popl
mov
cli
orb
or
adc
pop
push
cmp
add
nop
sti
and
inc
fs
roll
xor
jp
lret
push
sbb
mov
data16
and
inc
arpl
add
adc
push
mov
add
fsubr
and
fwait
cmp
jno
js
or
or
sbb
pop
adc
lret
jae
dec
pushf
adc
stos
inc
xor
fistpl
and
mov
lret
cmpsl
outsl
out
fwait
mov
pusha
or
cmc
dec
and
mov
pusha
push
pop
ret
push
lahf
imul
subl
or
xchg
cwtl
ret
add
or
cwtl
inc
dec
nop
push
add
pusha
call
outsl
hlt
xchg
and
pop
stos
mov
adc
gs
and
push
xor
pushf
mov
out
push
mov
push
jp
hlt
jl
push
sarl
sbb
fs
ljmp
or
sub
daa
gs
pop
xorb
or
call
pop
rclb
shlb
aam
fwait
pop
add
imul
test
js
jb
adc
int3
js
inc
mov
add
pop
jmp
pop
pop
or
daa
push
insb
xchg
add
and
in
and
sti
pop
sbb
or
test
mov
hlt
jg
jnp
jg
stc
pushf
or
and
fs
inc
into
aas
lahf
ss
test
incb
cmp
xor
adc
or
out
pop
push
insb
inc
sbb
or
sbb
or
ret
push
adc
add
or
inc
dec
lret
push
inc
sub
xor
mov
hlt
scas
cmp
inc
dec
dec
jecxz
popa
jno
inc
out
adc
mov
xchg
add
fcompl
shlb
mov
push
add
cmc
popa
fwait
xchg
jbe
or
jbe
jecxz
test
ret
jl
mov
fcoml
in
mov
fwait
test
test
pushf
je
add
adc
jecxz
pop
ret
cmp
xor
add
add
cwtl
pop
leave
arpl
add
mov
testb
add
add
push
add
xor
push
jo
pop
mov
loop
mov
xchg
mov
mov
add
mov
inc
mov
cli
data16
imul
cmc
add
dec
test
push
jge
inc
sub
or
adc
inc
pop
add
shrb
subb
push
pop
pop
in
mov
fisubl
scas
cwtl
xor
repz
cmp
mov
cltd
nop
jbe
push
pop
xor
dec
and
sarb
xchg
push
mov
or
mov
repz
cmp
loope
sub
or
add
push
rorl
pop
push
movsb
or
xorb
pop
cmpsl
cwtl
cmovae
sbb
or
add
xor
ffreep
outsb
push
sub
push
pop
push
adc
and
mov
mov
cli
add
rolb
ret
xor
push
shl
jle
fstl
dec
ret
ret
pop
mov
insl
mov
cmp
add
dec
repz
iret
push
jle
hlt
jne
lea
hlt
adc
xor
jmp
xor
push
test
xor
push
pop
lods
sti
mov
insb
xchg
pop
fadds
lahf
fucomp
sbb
mov
and
push
add
cmpsb
push
add
or
inc
sbbb
cmp
pop
clc
jb
out
dec
xor
jbe
or
insb
fisttpll
das
insb
inc
inc
iret
sbb
xor
addl
cmp
and
lea
orb
cltd
dec
push
sarb
add
sbb
adc
xchg
mov
test
add
push
sub
arpl
xor
add
mov
push
in
sbb
les
dec
js
jecxz
or
pop
testl
pop
hlt
das
mov
mov
inc
or
jge
add
xchg
iret
cmp
adc
cmpsl
lock
inc
jmp
inc
addr16
clc
std
or
xchg
cmp
or
in
sbb
pusha
adc
fs
or
mov
pop
inc
mov
xor
sbb
cld
test
enter
dec
inc
dec
inc
leave
push
push
xor
test
scas
dec
iret
cmp
push
nop
push
sub
mov
daa
in
xor
and
xor
pop
or
ret
sbb
test
or
mov
xchg
add
or
jmp
xor
inc
into
push
sbb
cmp
leave
test
je
pop
push
dec
fs
test
or
push
das
mov
push
incb
and
out
push
push
jmp
and
sbb
jge
xchg
lret
aaa
xor
inc
sub
out
push
jge
fs
hlt
cmpsb
ret
fisttpl
pop
adc
mov
xor
dec
lock
movsl
jge
push
mov
pop
aam
inc
shlb
xlat
aam
or
push
push
inc
in
fimuls
and
into
ja
jno
in
stc
and
mov
cmp
mov
inc
mov
cli
inc
sub
movsb
pop
mov
aaa
jmp
sbb
into
adc
adc
xor
or
or
sbb
add
xor
jne
callw
or
loop
pop
or
jns
jno
mov
lret
or
inc
in
sub
add
inc
into
or
scas
sbb
xchg
in
out
pusha
mov
aaa
in
xchg
sub
andl
lcall
popa
lods
je
push
ss
hlt
js
leave
push
clc
pushf
cltd
call
mov
test
add
ds
mov
xor
inc
insb
jae
dec
or
cmp
je
jb
test
adcb
add
test
outsb
cmp
arpl
xchg
xor
inc
hlt
add
pop
inc
pop
js
adc
and
add
sbb
rolb
lea
mov
push
push
jmp
adc
fsubrl
push
sbb
mov
popa
adcl
jo
aas
mov
orb
add
push
adc
xchg
out
push
xor
ret
aas
cmp
or
cmp
xor
adc
cmp
mov
arpl
fcoms
sub
sbb
jp
pop
imul
cwtl
mov
or
arpl
inc
cmp
mov
or
rcrb
lret
add
adc
dec
xorl
int3
mov
pop
adc
jg
adc
cmp
jne
xor
aaa
fcmovne
adc
add
cmp
shlb
add
dec
cwtl
push
pop
iret
sahf
xchg
jns
cld
inc
out
inc
daa
adc
lcall
add
and
add
loop
repz
in
int
insl
aam
mov
or
mov
js
xchg
adc
loop
sub
outsb
imull
inc
pop
mov
test
sub
sbb
xor
push
pop
jb
push
insb
pmuludq
add
int
add
nop
into
sbb
or
mov
push
vmwrite
repnz
sbb
nop
hlt
xchg
jg
adc
data16
les
lcall
std
jmp
daa
sub
js
out
sub
mov
xchg
add
enter
sub
xchg
lea
stos
add
negb
std
mov
loope
pop
inc
sub
loop
aad
pop
and
inc
push
aam
adc
aam
mov
jl
add
cltd
dec
loopne
mov
mov
adc
nop
inc
xor
jp
cmp
mov
pop
icebp
lret
inc
dec
sbb
mov
and
mov
fimull
cmp
push
or
add
cli
add
addl
mov
cltd
sbb
sub
xor
adc
xor
xor
jge
adc
sub
inc
mov
ficoms
mov
add
clc
ds
or
sub
sub
pop
testb
add
in
enter
repnz
xor
pop
pop
xor
jg
sub
roll
or
into
adc
and
sbb
fcoml
pop
xchg
push
shr
loopne
je
cmp
data16
shl
js
sub
nop
inc
stos
push
test
dec
sbb
add
mov
mov
popa
mov
mov
cmp
adc
xchg
mov
fmuls
add
fchs
jge
mov
fistpl
xor
dec
sub
dec
cmp
push
in
dec
pop
add
inc
fmuls
and
push
xchg
jns
pop
in
loope
dec
leave
inc
jnp
jne
loope
fdivs
dec
test
xchg
push
dec
mov
insb
or
add
jl
cmp
dec
repz
fstp
sbb
push
lds
jecxz
xor
movsb
cwtl
and
test
filds
inc
jg
push
mov
push
arpl
pusha
add
shlb
dec
mov
xor
or
sbb
add
xlat
sti
dec
movl
addl
push
test
cmp
mov
push
add
movsb
adc
inc
fiaddl
push
popa
mov
add
call
inc
jb
pop
je
lret
add
xchg
jne
pop
cmpsb
dec
push
or
in
dec
xor
jp
or
mov
adcl
jmp
jge
xor
sbb
and
repnz
jns
cmpb
rorb
inc
out
push
mov
in
pop
and
add
leave
or
int3
pop
add
daa
lods
sub
jge
lock
pop
std
adc
cmp
mov
repnz
xor
xor
lret
lret
and
mov
push
scas
inc
mov
lahf
test
lcall
sub
fld
ja
sub
mov
pop
imul
lock
outsb
and
inc
push
stos
adc
mov
push
sbb
popa
gs
ficomps
xor
mov
jg
jmp
push
mov
stos
xor
or
dec
dec
stos
imul
xor
or
cmpsl
mov
outsb
sbb
or
cli
add
jne
inc
xor
in
cmp
xorb
mov
aaa
pop
push
xchg
popa
iret
cmpsb
mov
xchg
lds
push
test
mov
outsl
xor
cmc
jmp
xchg
mov
call
add
jne
inc
ret
sbb
pop
ret
sub
sbb
sbb
arpl
xlat
mov
jne
lret
adc
adc
xchg
cmp
cmp
cmp
inc
jg
push
rol
test
push
adc
das
daa
loopne
shlb
cmp
leave
das
pop
adc
out
xor
ljmp
mov
dec
jl
inc
sbb
xchg
inc
js
ret
mov
scas
arpl
and
pop
test
ret
sbb
cmc
nop
rclb
lret
and
and
push
ljmp
sub
sahf
out
push
rolb
dec
ds
sahf
out
inc
inc
or
pop
faddl
out
xchg
cmp
cmp
dec
xor
out
jns
jnp
dec
fsubrs
les
push
cmpb
cmp
and
cmp
mov
push
adc
dec
xor
jae
mov
es
lods
roll
pop
sarb
nop
fsts
mov
jle
and
dec
xor
ret
jne
mov
jno
lahf
mov
lods
jnp
adc
jno
inc
ret
adc
xchg
push
lahf
cmp
dec
add
mov
in
stc
lret
inc
movsb
push
into
add
clc
mov
add
bound
add
mov
mov
leave
add
add
add
push
add
gs
sbb
popa
je
mov
sahf
or
add
daa
dec
add
out
pop
push
dec
or
loop
xor
adc
cmp
and
pop
pop
xor
add
jmp
add
inc
or
repnz
push
imulb
dec
push
dec
sbb
inc
ja
push
pop
pushf
decb
push
pop
sub
and
pop
mov
push
add
movl
push
mov
testl
dec
add
mov
inc
jo
add
sbb
in
push
inc
mov
ret
dec
add
adc
pop
pop
push
insl
mov
fs
jo
add
add
fs
enter
cmp
or
in
mov
cmp
test
in
jo
inc
push
push
pop
sbb
cs
arpl
xchg
out
inc
mov
and
in
push
or
sub
cs
das
mov
push
xor
ja
pop
lret
or
insl
xchg
and
popa
js
fwait
jbe
xlat
pop
in
add
sub
mov
push
sbb
and
or
push
inc
pop
stc
pop
or
push
inc
push
pop
inc
add
push
inc
push
inc
scas
pop
fcoms
call
shl
outsb
clc
pop
jbe
inc
ja
push
shrb
xor
jns
and
xor
les
push
push
pop
in
inc
jp
ret
xorb
xchg
pop
xor
addb
imul
jbe
or
inc
dec
inc
jp
jns
push
xchg
dec
or
mov
and
add
jecxz
sub
adc
lahf
pop
sub
push
bound
dec
mov
mov
pop
ret
cmp
adc
push
ds
es
or
jae
dec
dec
mov
mov
and
sub
ss
mov
add
add
prefetch
or
cmovs
mov
fisttps
sbb
out
mov
das
mov
popa
and
cmp
or
and
mov
test
shl
int
pop
add
push
jb
xor
sahf
push
fs
data16
aaa
add
gs
add
daa
jmp
or
jns
xchg
mov
jo
mov
mov
sub
add
sbb
or
or
int
lret
push
adc
cmpsb
xchg
add
or
sahf
push
or
add
out
cltd
sub
pop
sbb
or
pushf
pusha
ret
jo
addr16
adc
jo
scas
cmp
adc
push
arpl
and
pop
and
push
gs
cltd
loopne
adc
lea
mov
xor
xor
and
mov
xor
mov
rorl
mov
fs
out
mov
mov
push
jb
insl
popa
jb
or
or
mov
pushf
cmpsl
adc
scas
push
outsb
pusha
popa
add
repz
jo
xorb
or
orb
lea
xor
lret
pop
push
xchg
arpl
dec
imul
or
iret
add
enter
or
sbb
loopne
push
rcr
ficomps
sbb
roll
mov
jo
xchg
cmp
sub
dec
das
sti
ret
rcrb
das
xchg
lret
add
adcl
push
jo
jg
push
dec
outsb
jnp
add
mov
fs
loopne
mov
or
clc
pop
add
inc
test
adcl
dec
pop
xchg
add
lcall
xor
cmp
imul
pop
push
xor
push
inc
cwtl
sub
pop
inc
add
stc
jb
inc
cld
pusha
insb
inc
mov
add
inc
jl
inc
sbb
stc
add
test
add
imul
push
inc
mov
imul
in
jb
insb
inc
pusha
jae
sub
bnd
add
addb
inc
push
repnz
mov
inc
les
mov
divl
movsb
sbb
lahf
and
ja
mov
repz
mov
cmp
in
push
push
xor
push
push
iret
fs
or
mov
jno
and
add
ljmp
mov
add
add
add
adc
push
dec
xchg
inc
or
insl
mov
pop
call
add
or
mov
test
test
jp
mov
stos
sub
or
or
mov
pushl
ljmp
ljmp
shl
bound
or
rorb
pop
push
mov
xor
push
clc
pop
nop
cs
movsb
push
faddl
push
in
xchg
hlt
mov
push
push
adc
movsl
sti
into
idivb
clc
clc
cmpsb
ds
xchg
push
int3
jae
cmpsl
fnstcw
fadds
sarb
jl
sahf
imulb
cwtl
es
popf
sahf
push
adc
fnstcw
insb
fsubs
mov
mov
inc
mov
push
lahf
cmpsl
cmp
nop
test
cs
mov
idivb
xchg
jne
imul
pop
pusha
or
pusha
testb
rcrb
push
mov
mov
xor
or
pop
inc
sbbb
cmp
add
sbb
imul
pop
push
adc
aas
pop
lret
shll
cwtl
and
push
or
adc
pop
bswap
loopne
js
push
add
insb
add
mov
push
insb
dec
loope
call
add
rcll
xchg
scas
dec
cs
gs
jg
push
inc
add
push
mov
insl
add
aam
or
adc
add
bound
je
sub
lcall
adc
sub
jne
jecxz
stos
and
cs
pop
loop
inc
scas
push
mov
or
fisubl
xchg
push
in
xlat
cmp
mov
push
lock
dec
inc
mov
sbb
or
sub
or
inc
mov
dec
mov
xor
mov
push
add
rcl
rolb
and
les
into
lds
mov
add
and
ret
sbbb
mov
and
inc
lods
push
test
arpl
das
pop
sbb
int3
adc
dec
or
or
dec
mov
incl
push
sub
or
xor
jmp
movsb
stc
aam
mov
icebp
jmp
mov
sub
dec
sub
cmovs
jbe
lock
out
pop
jns
xchg
pop
push
or
xor
xor
or
cs
insb
fs
dec
fucomi
dec
jecxz
les
adc
push
ret
or
inc
pop
jg
insb
or
jnp
inc
jnp
xor
mov
xor
loopne
and
mov
outsb
inc
vzeroall
inc
mov
xor
jnp
mov
stc
mov
pop
xor
jle
and
xchg
xchg
mov
xor
enter
addb
adcb
push
out
push
sbb
iret
cmp
and
push
mov
in
cmp
and
jne
data16
ja
pshufw
icebp
cwtl
jle
incb
dec
insl
fbstp
inc
repnz
inc
es
movsl
jbe
jle
jl
jmp
aad
pop
xchg
or
in
cmp
cmp
andb
sub
aas
or
pushf
pop
xchg
pop
push
inc
push
stc
in
inc
cmp
push
ds
cmpb
nop
aas
and
sbb
loopne
cwtl
cwtl
cmp
imul
sub
ret
xchg
je
nop
ja
cli
rolb
or
lock
jns
and
fadds
dec
outsb
pop
enter
jns
mov
test
in
mov
jl
test
and
orl
inc
test
leave
dec
dec
or
stc
inc
sahf
push
or
push
add
mov
test
lock
test
inc
inc
and
and
in
inc
xor
adc
dec
in
inc
push
orb
in
inc
push
mov
cmp
ja
push
in
inc
enter
push
in
inc
jns
dec
xor
mov
cmp
add
repnz
inc
inc
push
test
adc
push
dec
mov
cs
dec
push
push
hlt
loopne
sahf
push
das
mov
popa
imul
inc
pop
pop
enter
jbe
rcrb
inc
cmp
adc
les
mov
rcrl
and
jp
pop
lods
inc
pop
in
inc
orb
rcrl
mov
and
repnz
stos
hlt
test
or
xchg
fsubl
mov
mov
xchg
int3
mulb
into
mov
les
lods
push
mov
add
push
pop
sub
inc
adc
testl
adc
xor
inc
imul
inc
mov
iret
push
push
mov
inc
cmp
lret
inc
das
cmp
sysret
sbb
dec
inc
xor
dec
ds
mov
inc
xchg
test
nop
mov
scas
in
inc
and
add
adc
mov
lods
pop
mov
add
mov
dec
push
andps
or
mov
add
pop
or
stos
adc
jge
mov
sbb
xchg
add
mov
sub
jne
cmpsb
out
jmp
push
je
pop
add
push
inc
lock
jne
movsb
aaa
and
call
mov
xor
push
fisubrl
stos
sub
int
les
add
mov
pusha
xchg
sbb
pop
es
sub
inc
pop
inc
ljmp
push
or
adc
dec
pop
mov
bound
fsubrs
add
lret
jl
divb
adc
out
push
hlt
mov
jo
inc
xchg
xor
addl
mov
inc
cld
mov
sub
and
ficomps
ss
stc
lds
or
mov
in
insb
pop
xor
lcall
dec
popa
pop
push
or
inc
inc
mov
ja
dec
cmp
je
push
sbb
or
ss
push
push
or
test
sbb
push
orb
jmp
and
xor
lahf
pop
in
cmp
dec
or
xor
inc
ret
or
movnti
xrstors
xor
ficoms
cmp
inc
or
or
xor
mov
cmp
sub
inc
cs
movsl
into
inc
inc
mov
xor
add
xchg
push
xchg
push
call
mov
jno
jns
sub
je
pop
pop
cmp
dec
xor
cmp
cmp
clc
and
ror
movsl
in
push
loopne
dec
sbb
insb
push
pushf
lock
inc
fdivp
mov
add
add
cs
in
or
adc
pop
es
adc
sbb
sub
fisubl
jb
andb
xchg
int3
movsl
popa
mov
out
ja
testb
sbb
xchg
adc
add
jbe
cs
add
add
xchg
jb
push
fiadds
mov
xchg
push
sahf
xchg
pop
push
jb
test
aam
in
dec
add
dec
enter
negl
ret
pop
pop
pop
push
push
lds
push
es
add
inc
jns
or
test
xchg
and
out
js
stos
pop
add
mov
mov
movsl
push
test
or
push
inc
or
pop
cs
fwait
adc
and
or
sbb
notb
ds
push
inc
add
jge
add
pop
and
es
xor
or
sub
push
inc
rorb
push
adc
aam
inc
test
push
or
outsb
or
shlb
pop
dec
sarb
add
or
sub
or
imul
xor
or
mov
pop
sub
pop
cld
add
sbb
inc
and
inc
add
sub
insl
mov
inc
jno
add
add
xor
push
test
repnz
and
xor
xor
push
hlt
es
mov
dec
and
in
or
adc
dec
leave
mov
xor
add
xchg
push
sub
sub
jne
dec
add
ret
adc
push
add
je
inc
mov
jg
cwtl
inc
xlat
cmp
cmpb
mov
lods
push
push
cmp
xchg
mov
jmp
sub
and
add
mov
inc
add
adc
xchg
sub
pop
mov
lods
jecxz
fadd
repz
xchg
mov
cli
adc
dec
nop
add
sbb
jle
imul
xchg
add
lock
mov
cmp
push
fcomps
add
adc
ret
rorb
and
pusha
adc
inc
mov
insb
inc
sbb
addl
std
popf
push
pop
hlt
neg
jmp
add
test
push
push
inc
pop
xor
xor
push
xor
jmp
push
test
es
or
push
repnz
push
mov
add
mov
cmp
aas
xchg
test
movsb
jmp
outsb
loopne
lret
mov
setl
cmpsl
into
fiaddl
push
sbb
aas
addl
inc
add
hlt
xor
movswl
push
shrl
sub
xorl
ss
push
lret
daa
xchg
jecxz
pop
sbb
rorl
scas
imul
fs
xchg
sbb
shl
inc
cmp
lar
mov
xor
or
jp
ss
cmp
adc
dec
or
adc
and
lret
xchg
pop
test
lea
lods
inc
mov
mov
test
or
ret
rclb
scas
adc
xchg
sti
and
cs
sub
or
jmp
xor
push
jmp
insb
aaa
and
dec
sub
dec
pop
push
aas
sbbb
incl
dec
cmp
ret
fimuls
adc
inc
jmp
insb
leave
mov
sub
push
fisubs
mov
sbb
jmp
sahf
out
push
and
dec
xchg
popf
out
clc
cltd
daa
or
aaa
add
jp
sbb
jo
dec
inc
xor
jl
mov
jle
push
ss
adc
dec
inc
dec
out
fs
shll
and
sbb
sbb
push
sbb
or
and
pop
mov
cmp
movb
push
push
jne
mov
inc
sbbb
or
imul
push
cli
movsb
jno
cmp
andb
pop
sub
or
and
inc
push
push
dec
inc
filds
lock
fisubrs
pusha
popa
inc
jp
adc
pushf
or
xchg
popa
shlb
inc
jae
pop
fs
inc
pop
add
push
add
adc
out
add
push
hlt
outsb
sarl
je
pop
das
rcrb
mov
inc
enter
sbb
pop
xchg
sahf
mov
inc
nop
xchg
dec
xchg
mov
push
pusha
push
and
pusha
mov
pop
or
inc
or
dec
xchg
xor
xchg
add
xor
ds
cwtl
lret
or
dec
insl
and
xchg
push
add
mov
js
dec
push
dec
fadds
cwtl
xor
and
bound
add
cmp
jo
xchg
les
stos
or
cld
mov
popa
dec
xchg
cmp
cmp
dec
xor
inc
sbb
cmp
cmp
sbb
shr
inc
pop
add
ja
js
or
push
xor
and
cmp
cmp
xor
test
push
sub
jb
cmpsl
xchg
pop
sub
or
xlat
cmpsl
push
sbb
and
mov
lods
adc
stos
lock
lods
ret
push
and
push
mov
dec
sbb
clc
sbb
sub
rorb
loop
shll
nop
add
xchg
adc
popf
nop
inc
or
cmp
test
dec
dec
ljmp
out
aas
or
notb
jle
mov
add
movb
mov
dec
lea
scas
ret
xchg
int3
rolb
or
or
test
add
xor
fmuls
je
and
cwtl
jno
outsl
xchg
sub
jno
insb
incl
cmp
andb
push
inc
or
sub
test
mov
xchg
push
sub
and
mov
ds
push
mov
dec
addb
inc
ret
add
mov
je
cmp
pop
in
dec
dec
add
lcall
push
add
mov
mov
sub
mov
mov
add
iret
lock
inc
mov
or
add
inc
mov
fldl
rclb
push
dec
loope
xorl
pop
jae
sub
add
jge
mov
por
mov
pop
dec
and
mov
in
push
inc
cmp
xchg
add
jns
emms
push
inc
lock
pop
sub
push
adc
inc
fcmovu
pop
lock
adc
sarl
xchg
pop
je
mov
sbb
sbb
or
stos
outsl
pusha
adc
fists
pop
or
xchg
test
sbb
test
leave
push
ja
jmp
pop
in
mov
add
loope
sub
loope
pushf
or
negb
inc
mov
xor
or
and
dec
lret
inc
popa
or
repnz
inc
inc
mov
aaa
cmpsb
aad
dec
adc
mov
xor
mov
or
loopne
adc
cli
xor
fcoml
mov
push
cmp
or
sbb
test
sbb
adc
clc
adc
into
push
adc
push
push
lea
push
add
mov
cmp
and
addl
outsl
or
lds
sbb
fucomi
sahf
mov
pop
mov
dec
mov
jle
mov
mov
inc
es
call
in
sbb
mov
or
call
xor
test
xchg
sub
jge
or
out
adc
xchg
push
hlt
fidivs
std
adc
sub
inc
dec
scas
cmp
xchg
add
sbb
adc
mov
or
aam
popa
in
add
ja
repnz
dec
pusha
add
xchg
mov
push
add
xorb
repnz
aaa
lea
movb
cwtl
je
pop
dec
je
mov
addl
push
outsb
add
je
leave
inc
adc
dec
test
hlt
mov
stos
pop
fstps
xor
pop
cmp
pusha
jne
jg
and
jg
mov
cmpsl
pop
test
pop
jns
ret
mov
ds
sbb
mov
or
jae
inc
sub
xor
pop
dec
push
adc
xchg
test
testb
mov
sbb
pop
sbb
fcoms
decb
adc
test
addr16
pop
push
cmp
mov
pop
and
and
out
or
add
arpl
jb
pop
lds
addl
addb
adc
or
cmpsb
sahf
xchg
mov
pop
or
jg
mov
cmp
push
inc
mov
mov
lods
rcrl
pop
sbb
or
xchg
jae
cmp
add
dec
sub
xchg
pop
popl
gs
pop
cld
and
pushf
enter
add
rorb
add
cmp
inc
inc
or
pop
lods
in
shll
addr16
or
or
aaa
mov
scas
loope
stc
cltd
aam
push
sbb
fs
outsl
in
inc
mov
enter
imul
dec
jp
sbb
testb
and
mov
movsl
mov
daa
fisttps
add
ret
pop
js
pushf
and
xor
or
mov
jl
nop
xor
clc
cs
cwtl
xchg
dec
cmpl
inc
cmp
das
aaa
mov
cltd
lea
daa
orl
lret
xor
lock
sub
adc
and
mov
fldl
int3
sub
sub
or
sbb
add
or
and
jl
in
sbbl
stc
fisubl
es
notl
inc
sub
lcall
adc
and
fs
int3
push
test
adc
jne
sbb
and
or
insb
cld
cmpsb
push
push
stos
adc
test
mov
dec
add
jl
jp
dec
out
es
jmp
add
cli
mov
cwtl
pop
mov
mov
push
xchg
or
xchg
xchg
popa
inc
out
xchg
pop
inc
xchg
fwait
mov
sbb
xor
lods
jecxz
popa
cmp
cmp
stc
push
mov
inc
add
cmp
inc
out
out
mov
int
mov
mov
sbb
push
lock
and
or
and
sarl
movsl
ror
add
in
pop
xchg
pop
inc
lods
shlb
ljmp
iret
push
xchg
sub
dec
in
neg
inc
popf
fmull
xchg
add
inc
mov
or
daa
pop
andb
rorb
outsl
bound
xchg
lods
inc
insl
mov
fsubs
mov
ja
loop
mov
push
loope
sub
rcl
cs
sub
setne
dec
mov
pop
insb
dec
jp
jle
jne
cmp
fs
add
cmp
scas
xchg
testb
imul
lds
mov
in
cmp
enter
pop
xchg
loopne
lcall
push
mov
sbb
dec
add
push
imul
out
daa
lods
leave
inc
mov
xchg
fcoml
mov
fcom
xor
adc
ss
out
cltd
mov
imul
jo
dec
pop
dec
add
hlt
adc
push
cld
pop
shlb
push
and
push
and
jo
xchg
clc
adc
das
cmp
sbb
popa
dec
out
pop
jbe
push
or
xchg
repz
sbb
pop
addb
xchg
fnstsw
and
lods
aaa
add
and
push
push
adc
push
jb
sbb
leave
add
insb
and
sub
test
nop
jae
fwait
dec
lea
mov
xchg
mov
in
enter
push
loope
sbbl
and
out
add
test
inc
inc
mov
and
inc
or
loope
jo
out
fildll
mov
xor
mov
pop
or
mov
sbb
call
das
add
popa
sbb
movsb
ret
arpl
out
inc
nop
iret
adc
adc
jns
dec
add
mov
and
mov
scas
push
mul
jo
int
test
in
shlb
imul
cmpsb
xor
sub
lods
cmpsb
pusha
add
mov
xor
lahf
pop
push
mov
stc
shll
or
add
sbb
pop
sub
push
add
imul
hlt
lods
sarb
inc
inc
mov
and
aas
cmpb
hlt
xchg
jnp
sbb
lock
outsl
sbb
das
xlat
andl
pop
pop
pushf
cwtl
mov
cmpb
jp
jl
cmpl
addl
or
mov
out
mov
add
adcl
push
xchg
add
nop
add
out
repnz
mov
mov
mov
aas
push
dec
cs
enter
sbb
frstor
enter
pop
jmp
cmpl
sahf
mov
pusha
xchg
fdiv
cmp
sub
add
mov
or
mov
mov
push
pop
repnz
inc
cmp
sub
mov
add
ss
xchg
xor
xor
gs
pop
sub
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
out
mov
push
outsl
sbb
mov
aad
lock
mov
push
cwtl
pop
mov
in
fwait
or
lods
mov
add
aam
shll
add
je
xchg
inc
dec
dec
insl
stos
xchg
dec
xlat
int3
rcrb
push
push
or
mov
add
test
pusha
mov
int3
adc
jo
mov
mov
fiadds
jbe
or
ficompl
stos
add
cmpb
insb
xchg
enter
xchg
push
pop
testb
fildl
mov
cmpsb
adc
pop
xchg
cmp
cwtl
enter
sub
orl
insb
test
cmp
lods
popf
xor
and
add
add
adc
test
add
lahf
mov
push
out
and
xchg
pop
fiaddl
inc
popf
cmpsb
push
pop
mov
sbb
std
loop
inc
xor
mov
mov
sub
add
sub
lahf
pop
add
and
lea
cli
inc
jg
mov
in
ret
jb
or
push
dec
or
test
dec
xchg
cmp
sbb
jg
insl
lcall
cmpb
xor
pop
pop
aam
pop
jne
sbb
fsubrl
cmpsb
loope,pt
jne
inc
xor
pop
loope
or
fistpl
sub
addr16
and
or
inc
imul
mov
xchg
push
cwtl
repz
push
jbe
fiadds
add
nop
cs
jbe
inc
aam
lret
push
mov
lret
stos
in
jo
lock
test
scas
movsl
sub
lea
adc
insb
pop
or
add
or
rcrb
lea
sub
test
dec
or
pusha
mov
mov
mov
dec
jnp
mov
push
inc
dec
test
jmp
ret
dec
push
stc
pop
hlt
xor
inc
mov
hlt
pop
pop
dec
sub
mov
and
in
lret
sub
shlb
gs
fld
loope
mov
xchg
hlt
nop
add
rorb
pop
push
out
arpl
mov
lock
arpl
cmp
loope
andl
pop
xor
clc
push
rorb
or
adc
adc
adc
lock
mov
or
add
add
mov
data16
xor
repnz
inc
or
or
xor
sbb
add
adc
arpl
and
sbb
adc
leave
movsl
adc
or
inc
outsb
xchg
in
mov
sub
fs
push
mov
or
add
jb
jbe
add
cmovs
sarl
dec
xor
inc
shlb
shlb
pop
leave
cmp
push
adc
xchg
mov
call
arpl
mov
xchg
stc
add
mov
popf
sub
je
and
sarb
add
mov
mov
fiaddl
add
out
pop
sbb
dec
xchg
add
popa
cmp
fidivs
es
shr
add
loope
xor
loopne
adc
ret
jmp
or
daa
movsb
sub
pop
mov
popa
add
dec
jae
inc
adc
popa
dec
mov
adc
or
outsl
lcall
mov
neg
xchg
movsb
testl
in
sbb
cmp
lret
leave
sbbl
leave
arpl
push
fcmovnu
sti
in
sub
inc
pop
decl
pop
add
cs
and
add
notb
push
cmp
jle
sub
push
adc
push
inc
sbb
push
push
aaa
adc
add
andl
push
popa
or
notb
mov
addr16
or
push
adc
lds
mov
or
mov
iret
inc
add
push
pop
lret
cmp
lock
vfnmsub231ps
xor
test
adc
jne
sub
in
in
jne
push
pop
add
xchg
cld
shl
je
js
jle
mov
adc
mov
cmp
xchg
or
pop
sbb
cmp
imul
xor
and
nop
pop
and
and
xor
sub
je
adc
in
aad
leave
pop
inc
mov
test
cli
sarl
mov
aas
inc
jno
pop
inc
ds
rol
icebp
add
sarb
mov
test
jle
movsb
lea
adc
cmp
je
xchg
push
cmp
sbb
xor
bound
mov
mov
iret
jmp
sbb
daa
mov
test
inc
mov
dec
cmc
jo
movsl
and
and
xor
pop
testl
inc
lcall
xchg
movl
push
push
sbb
mul
xchg
mov
cmp
or
add
add
das
adc
bound
inc
jecxz
xchg
push
and
inc
dec
shl
cmp
mov
out
add
push
xchg
aas
addr16
fcompl
pop
sbb
inc
pop
mov
sbb
xor
insl
sbb
add
enter
and
aas
ljmp
adc
adc
shll
jae
and
por
add
cvtps2pd
es
les
jo
inc
setg
int3
jns
test
add
mov
cmpb
in
icebp
imul
xchg
pop
or
arpl
ret
sbb
add
dec
enter
xor
cmp
jl
stos
mov
xchg
test
cmpb
cmpl
es
popf
xor
pusha
ror
xchg
and
arpl
lds
push
jns
daa
xorl
std
or
mov
int
inc
adc
mov
inc
cmp
adc
mov
test
ret
hlt
je
add
mov
mov
jnp
shlb
jo
cld
pushf
movb
popf
xorl
inc
daa
pusha
push
pop
fdivs
xor
repnz
inc
xchg
adc
movsl
sbb
cmpl
hlt
xor
xchg
or
je
enter
adcl
or
push
iret
imul
std
or
and
outsb
sub
dec
je
add
push
mov
ret
inc
mov
sbb
push
add
and
jbe
sbb
jmp
int
fwait
cli
aam
popa
add
cltd
mulb
jmp
aaa
lar
cli
push
mov
lods
pop
data16
or
jae
jnp
push
pusha
inc
jmp
push
sar
cmpsl
lock
adc
push
ret
and
adc
inc
pop
loope
fwait
and
inc
add
dec
cwtl
xor
xor
imul
add
sub
sbb
andb
loopne
orb
and
push
push
inc
scas
sub
cmp
push
push
jo
inc
pop
add
jg
xchg
sub
mov
ja
mov
and
jne
repnz
fld
mov
mov
xor
pop
in
push
or
jb
in
cs
sub
mov
pop
and
sbb
dec
mov
adc
lret
or
shl
xor
bound
popa
add
out
push
dec
adc
mov
mov
inc
xor
mov
ja
add
outsb
mov
data16
push
flds
push
xor
add
cwtl
push
fidivrs
pop
lods
or
adc
cmp
pop
cmp
or
notl
sbb
cmpsl
pop
and
sbbb
xchg
outsl
sbb
push
push
mov
dec
rcr
test
mov
add
jp
sar
dec
mov
push
fisttps
sahf
aam
mov
sub
cmp
cmp
pop
add
push
cmp
fsubrp
pusha
sub
pop
dec
pop
sub
pop
sub
push
sti
addl
in
push
push
xor
adc
xlat
es
adc
add
add
aaa
mov
imul
dec
rclb
add
sbb
cwtl
mov
int
lods
sbb
inc
push
mov
pusha
pop
adc
sbb
or
pop
pop
xchg
rcl
add
push
xor
inc
sub
inc
loopne
adc
incl
add
ja
add
cltd
les
ret
cli
jne
cmpl
subb
and
call
movl
aad
pop
or
jbe
fsubp
add
aas
jb
mov
movsl
sbb
adc
pop
sub
dec
lea
mov
pusha
mov
add
loope
mov
in
and
mov
mov
lcall
push
or
jge
adcl
mov
sbb
sbb
xor
cs
mulb
add
jne
push
inc
lcall
dec
rorb
dec
das
mov
pop
xor
xor
add
inc
xchg
inc
loopne
or
and
push
mov
fdivs
sub
ret
sahf
subb
cld
add
xchg
fiaddl
cmp
inc
dec
pusha
sbb
rcr
scas
or
pop
pusha
jo
in
pop
sub
add
jo
sbb
cmp
ret
and
lret
adcb
sbb
dec
fidivrs
aas
add
push
or
sub
sbb
pop
call
mov
sub
scas
add
jo
insb
xlat
lahf
inc
in
test
or
gs
adcb
test
add
cmc
and
pop
repz
mov
scas
jae
adc
and
push
jae
in
repz
es
add
inc
xchg
mov
mov
xchg
rorb
mov
dec
xchg
add
sbb
or
jno
pop
js
shll
es
sbbl
sub
mov
xor
pop
pop
subl
inc
dec
push
ret
and
and
es
lods
test
or
adc
jge
test
jne
lea
test
pop
mov
hlt
inc
in
push
loopne
or
movhps
shll
lock
dec
shll
add
and
push
jnp
push
cmp
sti
xor
jp
cmp
aaa
orb
mov
jge
sub
mov
pop
incl
decl
clc
inc
fs
out
push
cwtl
pushf
fwait
xchg
xchg
mov
test
call
adc
and
or
loopne
loop
and
popa
and
shl
inc
or
inc
dec
mov
add
inc
cmpl
jne
inc
sahf
inc
bound
cmpl
adc
call
daa
push
inc
mov
inc
cmp
ret
faddl
fbstp
ret
insl
movsb
mov
jne
test
cmp
mov
ja
iret
or
in
sarb
cwtl
mov
or
inc
out
les
pusha
sbb
lock
ret
js
nop
out
jns
mov
dec
cmp
sahf
cs
ret
rorb
je
lret
pop
pop
sub
movsb
dec
xor
incl
dec
insl
jne
cmp
cltd
repz
sbb
fs
adc
dec
mov
movsb
arpl
pop
sbb
mov
es
jbe
jno
dec
dec
into
mov
and
add
inc
jmp
aam
push
or
pop
sbb
shrb
stos
clc
mov
pushf
rclb
adc
aam
sahf
mov
ss
add
pop
pop
popw
cmp
dec
not
mov
add
mov
xor
mov
sti
push
daa
jmp
and
sbb
movsb
mov
sbb
mov
lods
inc
loopne
mov
jmp
dec
nop
fiadds
loopne
or
lea
sbb
jne
sub
push
xchg
xchg
in
sub
jmp
jnp
jnp
or
push
fsubrl
xchg
sahf
mov
sbb
incl
cmp
mov
mov
and
pop
mov
es
jp
push
lods
mov
cltd
push
jp
sbb
outsl
nop
and
or
mov
cwtl
adc
cmp
mov
push
inc
out
sub
orl
xchg
xor
jge
mov
call
and
push
cmc
sbb
xchg
xor
dec
xchg
jbe
mov
sbb
testl
push
out
mov
pop
and
roll
mov
sahf
ss
push
adc
movsl
popa
mov
mov
shlb
pop
pop
aas
sti
decb
dec
iret
je
cmp
je
jg
sbb
mov
loopne
push
sub
mov
push
andl
sbb
cmp
and
mov
mov
test
test
test
pop
inc
adc
cs
mov
ds
cmp
sub
orl
sbb
push
xchg
push
mov
loopne
les
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
mov
dec
dec
mov
cmp
inc
cmp
lahf
js
nop
xor
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
xor
fildl
insb
cltd
hlt
fistl
pop
pop
add
dec
mov
mov
ja
dec
data16
sbb
int
dec
loope
pop
xchg
xchg
inc
push
pop
daa
lods
aam
mov
mov
xchg
mov
dec
jne
arpl
cmp
sub
and
aas
push
or
sub
mov
mov
push
inc
adc
out
xchg
mov
jmp
push
adc
sti
cmp
xchg
mov
nop
loopne
hlt
mov
push
popl
dec
push
addr16
add
shrl
or
stos
das
mov
mov
daa
push
adc
popl
jp
adcl
jno
pop
shlb
sarb
lret
testb
lods
sbb
clc
ficompl
fwait
add
test
xchg
xchg
sbb
mov
sub
sbb
dec
lock
add
mov
movl
fdivs
sbbl
js
push
sbb
add
pop
or
jo
popf
sub
imul
add
pusha
xchg
addr16
adc
mov
xchg
adc
jne
fwait
add
cmp
data16
dec
add
mov
cwtl
sbb
push
or
stos
lret
outsb
or
xchg
and
addb
pop
adc
loopne
inc
sbb
add
sahf
pop
add
inc
xor
add
fmul
and
fbld
imul
mov
cmc
pop
addr16
xor
js
addr16
pop
xchg
dec
add
roll
insl
or
sbb
push
xor
or
add
xor
in
scas
dec
add
pop
out
add
cld
adc
ja
mov
lock
cmp
push
and
das
sub
inc
add
inc
movsb
inc
push
inc
scas
sub
push
xchg
cmp
add
loope
inc
daa
inc
dec
sub
rcrb
rolb
int3
aad
xchg
sbb
rclb
adc
pop
ss
arpl
push
push
mov
jbe
xor
rolb
loope
jmp
iret
dec
xor
loopne
jno
clc
inc
jo
pop
adc
jbe
mov
sbb
add
mov
or
nop
cmp
mov
pop
xchg
jae
push
inc
adc
repnz
enter
push
dec
mov
sub
shlb
push
fsubrl
dec
add
push
sbb
nop
into
push
xchg
mov
paddusb
or
sbb
jno
jno
shlb
or
popw
adc
mulb
or
or
outsb
mov
dec
jmp
pop
into
movb
fldenv
xor
add
dec
out
cmp
out
xor
dec
pop
ret
mov
addr16
lods
test
stos
out
stc
cmp
ljmp
fadds
inc
pop
adc
cmc
mov
mov
or
mov
ret
int
mov
es
add
sbb
sbb
hlt
sub
add
scas
inc
or
loopne
out
and
add
shlb
leave
xlat
outsb
out
xor
leave
sub
mov
push
add
cmpl
int
adc
add
push
add
sbb
das
mov
cmp
hlt
movb
jne
outsb
adc
inc
dec
xlat
add
and
or
cmc
sbb
xchg
fs
cwtl
mov
xchg
ficoml
pop
dec
cltd
xchg
loopne
stc
fiaddl
xor
rorb
cmp
xor
int
idivl
mov
insl
lcall
xor
push
cmp
mov
jmp
fadd
notl
xchg
lea
mov
sub
and
xchg
testb
cmpsb
jne
inc
sbb
in
cmp
adc
or
sub
clc
push
push
sub
loopne
adc
sub
js
inc
jb
or
push
fsts
sub
dec
mov
mov
sub
pop
dec
hlt
adc
in
dec
imul
mov
sub
mulb
xorl
inc
and
daa
lods
data16
and
sbb
insb
rclb
mov
psubd
add
sub
popa
or
add
int
push
loop
mov
scas
fcoml
push
loop
incb
add
jo
or
push
or
adc
in
sub
add
and
in
iret
push
inc
push
inc
dec
cmp
mov
pop
loopne
lock
gs
and
repnz
clc
push
and
sub
lahf
xor
mov
pop
dec
inc
mov
sub
and
push
jmp
jl
popa
pop
mov
xchg
cmc
dec
lret
jb
jmp
lret
gs
add
rcrb
ss
sub
int
jge
ret
xor
mov
mov
sub
mov
or
and
xchg
aaa
pop
sub
jle
push
iret
adc
call
or
bound
mov
clc
mov
sbb
sub
repnz
inc
std
add
rcrl
mov
ds
push
les
cltd
andb
dec
mov
in
rcll
sbb
pop
sub
movl
mov
pop
jne
pop
xchg
mov
sub
mov
xchg
rclb
int3
xor
test
imul
jne
arpl
gs
or
xor
cmp
or
imul
xchg
dec
jns
cvtps2pi
les
push
push
add
dec
or
or
pop
sti
jo
jmp
jne
jne
jmp
clc
xchg
subb
pop
dec
sbb
pop
inc
sbb
inc
add
pop
add
pop
mov
add
inc
popf
cmp
inc
and
mov
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
dec
pop
or
dec
icebp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
movsl
in
aaa
enter
jb
scas
or
insb
in
or
in
sub
lds
jge
test
loope
pop
push
add
add
les
push
shll
das
mov
and
mov
inc
cmp
and
fcomps
push
cmp
adc
and
dec
mov
mov
and
sbb
pushf
adc
add
xor
inc
daa
mov
icebp
addr16
inc
inc
lods
pop
adc
xchg
sbb
sbb
mov
xchg
ja
cmpb
dec
mov
pop
bound
pop
popa
inc
pop
push
add
repnz
push
cld
push
repnz
ret
sahf
inc
add
fildl
in
fisubrs
in
push
and
cmp
jg
dec
mov
popf
xchg
pop
test
adc
bnd
xchg
push
or
scas
aam
mov
inc
mov
or
sub
daa
adc
sbb
jne
jp
xor
xchg
cmp
mov
test
filds
pushf
xor
adc
rclb
xchg
pop
inc
sub
mov
ret
add
add
mov
or
inc
rdpmc
fildl
or
sbb
pop
push
por
js
jmp
cwtl
adc
pop
call
popa
sub
xchg
inc
aaa
in
adcl
cmp
out
xor
inc
and
add
add
cwtl
mov
xchg
add
mov
sub
and
nop
ja
loopne
push
nop
aaa
cmpsl
and
cwtl
sub
shrb
cmp
pop
aas
je
or
jle
add
loopne
cld
inc
inc
add
xchg
loopne
pop
stos
imul
je
mov
sbb
sarl
shll
fs
mov
aad
cwtl
test
insb
xchg
into
lcall
data16
or
arpl
cmpsb
sub
jbe
and
in
inc
mov
sub
ret
add
and
les
ds
aam
cmpb
lret
dec
out
fcmovu
sub
aad
daa
and
mov
sub
mov
push
rol
mov
arpl
mov
dec
pop
cmpsl
push
and
std
xor
add
shlb
sbb
in
pop
jl
sbbl
mov
push
pop
popa
aam
add
cmp
loope
or
cmp
out
in
jo
dec
pop
lock
jo
inc
negl
adc
push
cli
outsb
call
and
sub
mov
xchg
push
push
xor
mov
adc
and
inc
mov
sub
push
add
js
jno
dec
sub
add
rcrb
pop
adc
adc
insb
loope
lea
and
daa
mov
sbbl
nop
xlat
jnp
mov
cmp
push
fistl
mov
xor
push
inc
sarb
lods
js
shrl
nop
das
jne
mov
rclb
sbb
ret
loopne
dec
cmpsl
mov
pop
sub
cwtl
or
dec
addl
xchg
push
xchg
dec
pop
mov
inc
adc
js
push
jbe
ss
loop
incb
cs
mov
sbb
shll
push
rcll
or
scas
popa
out
insl
dec
cmpsb
or
cltd
and
dec
xchg
xchg
and
nop
add
push
pop
lock
cmp
xor
popf
cmp
test
or
push
outsl
sbb
push
ds
ret
pusha
pop
lret
xchg
xchg
xor
loope
xor
nop
or
es
push
out
lods
adcl
or
sbb
or
adc
push
push
sbb
lods
mov
add
and
fisttpl
mov
call
xor
inc
xor
add
test
and
or
scas
testl
cmpl
dec
add
cmp
popf
into
mov
push
imull
jmp
in
push
or
test
rcrl
pcmpeqb
adc
xchg
or
call
js
mov
call
or
sub
out
movsl
mov
add
sub
cmpsb
mov
pop
nop
loopne
xchg
cmpb
ret
es
stc
sti
nop
loope
nop
in
dec
mov
inc
dec
call
cwtl
fidivrs
je
lcall
push
in
dec
or
xchg
cld
and
xchg
loopne
jle
sbb
mov
sub
cmpsl
movsb
shll
mov
jge
add
ja
add
lea
in
stos
popa
push
xchg
ret
outsb
imul
and
or
jns
push
inc
test
and
cmpsb
daa
push
cltd
cmp
shrl
push
sbb
pop
ret
inc
dec
daa
or
mov
cmp
cmp
mov
fiadds
loopne
and
nop
insb
or
mov
iret
popa
add
adc
stos
hlt
mull
and
scas
adc
add
out
jo
je
or
aad
leave
push
adc
cmp
mov
mov
push
mov
add
inc
les
xchg
sub
lcall
add
ret
aam
aaa
scas
push
cmp
add
outsb
add
fnstcw
inc
adc
adc
mov
cmp
sub
mov
add
lcall
aaa
test
popa
pop
adc
lahf
jnp
cmp
mov
or
mov
inc
inc
inc
and
and
mov
adc
ss
ficomps
push
sub
ja
imul
in
sub
cld
leave
and
sbb
inc
add
sbb
xchg
or
cld
cld
repnz
cwtl
out
lods
inc
cmc
adc
or
xchg
imull
sbb
es
mov
xchg
aam
pusha
pop
outsb
add
dec
lock
jmp
inc
mov
sahf
xor
das
lds
inc
cmp
mov
cmp
sub
and
test
xor
dec
jmp
test
and
jmp
jle
pop
and
sbb
sbb
movsb
inc
out
loopne
cmp
add
cmp
cwtl
pop
dec
aam
sub
cmp
sbb
push
push
pop
pushf
xchg
xor
jl
mov
sarb
push
lods
es
add
inc
movsl
xor
and
mov
or
xor
popa
xchg
add
mov
mov
inc
aaa
test
js
fs
idivb
mov
mov
xor
sbb
cmp
mov
cld
xchg
push
inc
pop
mov
and
pop
mov
hlt
xchg
fildl
pop
jno
add
mov
lds
xchg
mov
aas
push
cltd
jbe
inc
fcmovnb
pop
dec
in
dec
cs
dec
dec
push
test
nop
arpl
cwtl
in
pop
pop
sbb
dec
jnp
or
push
push
cmpsl
es
dec
inc
jns,pn
ss
push
ret
or
inc
push
arpl
and
xchg
inc
fs
xchg
cmp
dec
push
pop
iret
inc
cmpsl
movsl
inc
popf
lods
aad
inc
pusha
jmp
movsb
insl
movsl
mov
sbb
orl
push
out
es
js
or
sbb
js
es
nop
xchg
push
call
add
daa
inc
jmp
pusha
mov
mov
sti
out
jl
or
jle
fcomps
sbb
inc
fwait
sbb
repnz
ret
cli
or
mov
jno
mov
jne
out
and
arpl
pop
cmp
stos
xor
xchg
clc
or
jmp
subb
shlb
and
fisubs
jno
fsubs
sub
in
popf
pop
push
rcrl
jg
sbb
push
mov
add
insl
xchg
mov
out
das
fsub
add
adc
daa
mov
js
mov
sub
push
and
xor
imul
scas
mov
inc
scas
push
xchg
mov
lock
out
sbb
cmc
adc
jbe
sbb
mov
jns
cmp
fisubl
into
pop
or
mov
pop
push
enter
push
inc
push
imul
into
add
or
testb
push
push
sub
into
jo
fsubs
and
jae
dec
cmp
cs
sbb
fsubr
std
sbb
cs
imul
push
cmp
jne
ret
dec
out
jno
sbb
mov
mov
mov
rolb
addb
sahf
sbb
mov
inc
sbb
imul
nop
iret
loope
cs
std
ret
cld
mov
pop
popa
and
pusha
pop
inc
adc
lods
gs
adc
shlb
and
jae
jle
outsb
insb
inc
sbb
jl
and
test
mov
aam
imul
cmp
int3
jne
cmpl
std
mov
adc
push
pop
lahf
pop
cs
leave
cmp
mov
mov
or
cmp
add
adc
shrl
or
jae
cmpsb
popf
adc
xor
mov
pop
and
lret
jne
mov
fildl
sahf
adc
dec
ljmp
das
cmp
jne
in
push
push
and
aad
lds
jp
and
jmp
movswl
loopne
ret
incl
pop
add
fmull
iret
insb
lret
stos
cmc
das
push
mov
mov
pop
mov
dec
or
push
dec
sbb
sti
cmp
pop
pop
clc
add
aad
sbb
pop
dec
ja
sbb
adc
pop
dec
inc
in
movl
es
imul
xor
fcmovnu
mov
mov
and
mov
mov
cld
out
dec
inc
pop
or
fimuls
xor
adc
cld
icebp
push
pusha
adc
test
jns
dec
mov
mov
mov
loop
insl
std
push
testb
xor
cmp
and
inc
dec
adc
cmpsl
xchg
dec
testb
and
jmp
adc
es
das
pushf
loopne
cmp
shr
adc
arpl
jle
ret
push
mov
pop
xchg
hlt
mov
addl
and
cltd
inc
mov
out
dec
jae
das
jg
cmp
cld
cltd
jl
daa
ret
dec
rolb
push
subl
jecxz
sub
jne
lret
clc
hlt
push
cmpsb
inc
test
mov
mov
cmp
cs
push
adc
pusha
in
lret
cmp
js
jns
daa
je
jmp
sbb
xor
lods
push
pushf
sbbl
and
ljmp
mov
pop
mov
or
jne
sub
add
cld
push
xchg
xchg
mov
jle
xchg
mov
jo
ja
cmp
mov
fimull
push
hlt
push
add
pop
xor
fidivrs
sarl
and
inc
and
inc
or
xor
lock
mov
pop
xor
daa
pop
add
sbb
mov
aas
xchg
or
cmp
lds
add
inc
mov
inc
push
cmp
sub
mov
cmp
dec
and
ss
add
add
mov
pop
add
inc
ja
cmp
adc
push
ds
bsr
dec
rcll
dec
mov
ret
pop
hlt
je
lods
push
negb
sbb
add
loopne
or
xlat
cmp
test
inc
test
adc
subl
movsl
pusha
adc
xor
xlat
sub
pop
jae
push
cli
insl
fisttps
mov
add
mov
ret
xchg
cltd
sbb
pop
pop
lea
gs
xor
push
xchg
out
mov
adc
and
fists
add
leave
iret
roll
mov
pop
and
add
mov
jne
inc
es
and
add
dec
inc
xlat
xlat
inc
call
mov
jmp
sbb
or
xor
es
inc
in
mov
xchg
lock
xchg
mov
out
xchg
adc
in
sbb
test
mov
fldt
sub
loop
dec
adc
repz
adc
popf
pop
test
inc
or
dec
inc
push
push
mov
add
cltd
lods
mov
mov
sub
and
cmp
mov
sbb
add
imul
pop
xlat
movsb
out
adc
mov
adc
sub
sarb
xor
push
pop
loop
nop
sbb
cmp
xor
je
testl
fcmovnbe
push
mov
cmc
enter
je
mov
inc
pop
nop
test
lock
enter
pop
xor
pop
test
ss
lcall
test
xchg
ds
mov
movsl
bound
and
lock
push
jbe
sbb
mov
adcl
cmp
stc
push
pop
xorb
enter
xchg
mov
mov
lock
clc
mov
cmp
pop
arpl
filds
loopne
dec
inc
pop
add
push
rcrb
sbb
fsubr
or
or
leave
or
ror
push
sbb
in
jno
adc
es
cmpsl
hlt
xor
adc
jp
mov
dec
dec
and
fsubr
xor
into
push
mov
push
push
cmc
and
pop
or
mov
dec
xor
mov
pop
shll
mov
pop
jne
pop
jmp
inc
xlat
hlt
xor
cmp
push
mov
and
andl
xchg
insl
dec
xor
js
mov
mov
shlb
xorb
dec
or
inc
imul
mov
lcall
add
add
sbb
pop
sbb
fiadds
pushl
arpl
daa
or
pop
lock
inc
daa
pop
notb
call
cmp
inc
popl
mov
sti
cwtl
jecxz
add
rclb
inc
loope
sbb
pop
sti
mov
addr16
pop
enter
sub
pop
daa
shlb
test
sbb
dec
inc
dec
dec
dec
inc
and
mov
ljmp
orb
rcrb
add
sub
pop
or
sbbb
jb
inc
hlt
loope
out
and
hlt
mov
imul
add
xchg
pusha
cmp
jmp
daa
je
loope
repnz
test
cmp
sub
add
repnz
xchg
jl
cmp
je
or
sub
and
sbb
dec
mov
jp
xor
nop
addl
shrl
or
scas
xchg
or
cld
sbb
daa
nop
mov
mov
stc
sbb
int3
dec
enter
rolb
mov
daa
and
cld
loopne,pt
int
jp
sbb
or
adc
dec
stc
adc
aam
pusha
inc
aam
roll
ret
pop
add
and
aam
xchg
push
loopne
inc
xlat
lods
mov
lret
dec
fs
mov
sbb
lcall
or
sub
mov
dec
inc
jo
repnz
mov
aaa
ja
xorb
mov
sub
adc
nop
adc
cmp
repz
inc
aam
mov
rolb
dec
stos
ljmp
dec
xor
mov
push
push
fs
sbb
sbb
push
push
mov
fisubl
js
pusha
adc
pop
and
pop
aam
fsubs
popa
adc
add
jmp
pop
je
das
js
mov
fs
jp
or
and
adc
nop
sbb
ja
add
cmpsb
adcb
mov
xchg
xchg
mov
sbb
orl
test
rcr
pop
mov
jo
pop
mov
addr16
je
cs
sub
addb
push
int3
andl
enter
sub
add
jp
rclb
jbe
mov
mov
aad
add
out
or
and
dec
mov
pusha
dec
mov
loop
and
lcall
or
xchg
ljmp
mov
ret
cld
pavgb
je
and
cltd
or
mov
jne
test
add
mov
rcrl
test
or
and
xor
add
jl
sbb
xchg
jne
lret
or
dec
pmullw
pop
lock
add
or
test
in
jne
lods
mov
enter
mov
inc
mov
and
xor
jns
push
push
xor
adc
adc
pop
mov
adcb
and
pop
xor
adc
lea
or
dec
pop
and
int
jbe
adc
push
adc
cmp
cmpb
pop
fadds
iret
mov
pop
sbb
push
data16
mov
xor
mov
or
imul
xor
adc
xor
cmp
shrb
fistps
fwait
out
cmpsb
xchg
and
add
clc
push
jg
adc
inc
or
push
or
lock
movsb
lods
int3
in
into
push
cmc
mov
cmpsb
jbe
lret
aas
outsb
push
lret
dec
mov
jg
bnd
sbb
inc
xor
pop
add
mov
shrl
cmp
adc
cmp
imul
sub
jge
add
bound
jb
lret
insb
js
add
add
frstor
fwait
adc
pop
push
add
frstpm(287
jnp
dec
icebp
add
push
lahf
fbstp
xor
shl
andb
pop
stos
and
or
cmp
icebp
mov
rcrb
test
mov
xor
popf
sub
xchg
lcall
bound
jmp
add
test
pop
cld
js
fsubrs
ficoms
addr16
xchg
rclb
inc
mov
mov
xchg
fistl
repnz
pusha
xchg
add
inc
int3
adc
in
add
andb
test
inc
bound
mov
jbe
push
add
sub
push
ljmp
call
mov
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lods
jle
js
mov
inc
adcb
pop
shl
aad
xlat
inc
mov
add
out
sti
xor
mov
das
call
mov
or
pop
jae
adc
outsl
push
jg
mov
sbb
or
inc
scas
shlb
jp
sub
cmp
nop
js
mov
xchg
sbb
pop
cwtl
movsb
mov
ljmp
sub
loopne
xchg
or
mov
and
and
pop
addl
push
cmp
fildl
or
pop
inc
or
add
and
dec
or
bound
loop
pushf
ret
pop
add
shll
cmpsl
pusha
dec
mov
xchg
into
lock
push
push
add
lret
sbb
sbb
push
inc
shrb
jno
mov
lds
xchg
cmp
jmp
je
xchg
fucomp
fildll
mov
mov
dec
js
mov
imul
out
and
sub
sbb
jmp
test
data16
jnp
test
jecxz
mov
or
jbe
insb
je
pop
xchg
cmp
test
nop
pusha
movsl
sbb
rol
or
stos
clc
popa
arpl
fisubl
add
pop
jo
cmc
sub
cmp
xchg
dec
fdivr
inc
je
sub
inc
push
inc
arpl
arpl
inc
push
inc
push
dec
xchg
mov
inc
pop
push
incl
adc
xlat
add
mov
sub
add
clc
pop
test
andb
mov
pop
icebp
mov
cltd
add
and
ret
iret
adc
xchg
psubq
insl
lock
int
jo
or
xor
inc
sub
xchg
xchg
sub
adc
leave
push
std
adc
hlt
push
ja
leave
pop
dec
pop
popf
mov
mov
mov
lods
sub
fwait
jl
or
adc
shrb
test
nop
cmp
shlb
push
xor
mov
call
xchg
or
fildll
and
cmp
movsl
push
or
in
mov
add
fucomi
push
jne
cmp
stos
push
or
mov
lds
push
fwait
sbb
sub
ja
xor
addb
add
cmp
loopne
pop
fwait
std
and
jnp
push
mov
sbb
test
fimuls
push
jmp
push
xchg
test
daa
mov
jecxz
add
mov
mov
add
lahf
lock
imul
insl
adc
add
and
and
cmpsl
push
xor
cli
fisubrs
test
push
sahf
lea
mov
mov
xor
enter
ljmp
cmpsl
int3
mov
xor
pushf
jnp
je
and
push
out
adc
add
dec
sub
lcall
mov
mov
jne
mov
je
or
sbb
push
inc
push
ljmp
js
inc
daa
cmp
ret
sbb
xor
xor
xor
or
inc
pushf
inc
cmp
fwait
pop
outsb
pop
imul
jmp
mov
repz
xchg
add
sbb
jl
dec
jne
jmp
int
jbe
mov
push
and
add
je
clc
add
mov
lods
fs
rolb
je
xchg
loopne
cmpsl
sbb
add
xor
sbb
jae
mov
adcb
jne
cmp
mov
sub
iret
movsl
mov
jb
in
movsl
xchg
sbb
pop
aad
icebp
xor
or
cmp
cwtl
add
adc
and
sbb
call
sbb
push
scas
cmpl
ret
out
loopne
and
sti
rcrl
ds
das
je
mov
movsl
clc
and
mov
daa
mov
add
nop
and
add
inc
rorb
fcoms
jl
sbb
add
mov
jno
push
call
push
add
leave
shll
adc
sbb
mov
lret
dec
jb
sub
movsl
add
outsl
push
push
adc
and
and
daa
and
inc
aam
add
cmp
sub
jmp
push
push
mov
sub
mov
push
sub
xor
mov
and
pop
mov
cmp
je
fs
jge
mov
jecxz
in
dec
lock
add
cmp
xchg
xor
mov
fidivrl
and
popf
sbb
lock
and
rep
push
test
repnz
lret
push
shrl
inc
test
push
adc
fucomi
adc
sti
add
add
and
or
fs
int3
js
push
inc
in
or
flds
dec
cmp
shl
call
jmp
dec
jno
and
movsb
sbb
inc
or
mov
in
inc
test
xchg
add
movsb
add
mov
in
flds
add
inc
or
jno
insb
popa
movsb
and
xchg
cmpb
pusha
adc
and
add
and
push
rcrl
or
test
pop
mov
pop
lods
or
out
sbb
inc
rolb
mov
nop
mov
add
mov
pop
sarb
pop
xchg
aam
add
sub
stos
popf
push
and
mov
lods
xchg
imul
add
add
xchg
xlat
adc
cmp
sub
add
sub
aaa
pop
xor
dec
rclb
push
or
fsubl
inc
mov
xchg
and
xor
push
test
inc
cmp
cmp
test
out
ret
daa
div
shlb
jge
inc
imul
inc
dec
push
add
sahf
daa
fs
hlt
push
or
pop
mov
sbb
pop
jg
dec
push
jns
and
notl
shr
and
push
lods
pop
popa
loop
nop
das
cmpb
inc
pop
insb
popa
pop
fistpl
fldenv
fimull
fistpl
add
je
iret
nop
sub
jns
test
faddl
add
inc
aas
cmp
xor
aas
fstp
cltd
add
shlb
in
cmp
sub
add
pop
rcrb
loop
or
mov
and
pop
jne
movsb
add
leave
dec
mov
movsl
imul
ret
pop
inc
cmp
shlb
sbb
or
pusha
mov
adc
sub
lock
clc
mov
dec
cltd
sbb
inc
pop
xor
push
cmp
jne
lahf
dec
or
inc
dec
dec
xchg
adc
pop
lock
add
and
cmp
add
scas
and
mov
iret
mov
int3
add
jp
add
add
hlt
adcb
test
cld
xchg
add
sti
dec
add
cmp
lcall
mov
mov
test
xchg
sub
xor
push
arpl
inc
outsb
or
insl
add
sbb
rclb
sub
push
xchg
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
pushf
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
jnp
int3
cmpsl
dec
mov
xor
push
jp
cltd
or
fistps
mov
test
cmp
xor
add
je
cmp
cmp
xchg
lods
fcoms
mov
ja
cmpsb
mov
pop
and
mov
nop
pop
mov
push
fisttpll
sbb
push
xlat
test
daa
push
inc
or
add
or
icebp
ljmp
or
sbb
rcll
jp
or
or
and
les
adc
push
popa
xor
jge
mov
daa
dec
lahf
mov
mov
pop
pop
pop
cmpsb
push
sbb
adc
fdivrl
add
sub
xchg
filds
adc
test
mov
mov
gs
xchg
inc
adc
popa
inc
loope
xor
stc
or
sti
outsl
es
or
pop
pusha
jne
xchg
shl
lcall
mov
adc
sub
inc
pop
repnz
mov
out
push
sbb
xor
pop
test
mov
repnz
xchg
pop
adc
inc
inc
pop
daa
cmpl
jp
mov
mov
push
add
lock
sbb
push
mov
pop
repnz
out
cmp
mov
sarl
or
and
inc
faddl
data16
push
pop
xor
mov
sub
inc
xor
sub
arpl
mov
xlat
inc
movhps
sbb
mov
mov
sarl
insb
push
scas
add
pop
add
ret
jmp
xor
shlb
jle
jo
push
in
or
es
xorl
dec
arpl
movsb
mov
xorl
and
pop
clc
inc
jne
add
arpl
ja
test
xchg
or
sbb
shl
push
incb
jle
ret
loop
mov
sar
mov
xchg
add
jge,pn
mov
sub
or
sar
nopl
and
shrb
adc
insb
stos
insl
mov
jl
loopne
add
pop
pmulhuw
mov
es
and
pop
inc
inc
call
xlat
in
pop
faddp
dec
mov
pop
popa
or
mov
sub
push
push
sbb
je
inc
sbb
dec
xorl
ljmp
bound
outsb
mov
in
mov
in
add
pop
jmp
repz
or
fmuls
push
fiadds
cmc
or
cltd
lret
shll
shrb
into
rcrl
lret
and
push
sahf
xchg
mov
pop
mov
movsb
mov
xor
gs
inc
sbb
push
sbb
push
xlat
jo
or
or
pop
js
cld
mov
icebp
aas
push
and
and
pushf
xchg
orb
push
out
inc
outsl
inc
fcoml
ss
loopne
pop
sbb
into
add
and
add
test
imulb
inc
or
or
push
shll
mov
pop
addl
mov
andb
cmp
mov
or
mov
fs
and
cmp
aas
jmp
jo,pn
mov
and
inc
daa
add
testb
sbb
and
in
ljmp
cmp
int
imul
repnz
lea
jbe
xor
push
out
ja
sahf
rorb
xchg
sti
rcrb
push
aam
out
test
and
push
lea
mov
xchg
js
fwait
aas
jecxz
jge
outsb
or
rcr
sbb
imul
jecxz
xor
xor
xchg
xor
push
sub
sbb
inc
pop
xchg
stos
scas
mov
mov
jge
mov
adc
pusha
pop
pop
je
loopne
call
sbb
repnz
nop
push
sub
fcomps
pop
dec
bound
inc
test
fildl
ret
dec
ss
scas
sub
fadd
pop
sbb
push
add
scas
mov
adc
jl
add
dec
shrb
insb
jo
in
stos
jl
push
imul
sbb
roll
inc
in
add
sub
fcoms
ljmp
mov
cltd
add
call
shrl
ljmp
lcall
add
aam
mov
xchg
sub
xchg
adc
xchg
or
iret
xchg
push
test
rorb
inc
cmp
dec
shr
pop
mov
outsb
inc
cmp
je
test
aaa
test
arpl
lds
imul
mov
sbb
adc
pop
andb
inc
dec
aaa
or
insl
xchg
inc
aad
xchg
xor
gs
add
popa
test
add
nop
lret
push
inc
ljmp
in
and
jae
push
push
add
pop
adc
mov
loopne
adc
inc
je
xor
or
bound
cmp
xchg
mov
jae
sbb
push
adc
push
jl
add
mov
sbb
mov
mov
lret
in
sbb
push
sbb
ljmp
adc
add
enter
es
mov
nop
pop
mov
push
jmp
mov
out
mov
add
cmp
fstpt
cltd
cld
cs
cltd
mov
popa
jb
inc
add
dec
outsl
decb
dec
psubq
std
nop
cmpsl
es
cltd
jmp
gs
mov
inc
aam
pop
mov
aas
or
and
dec
mov
adc
push
in
scas
aas
lret
scas
adc
out
xor
mov
ds
repz
push
mov
sbb
les
dec
test
ja
jmp
pusha
fmull
or
inc
movsb
push
xor
dec
je
adc
jb
ds
xchg
pop
pop
dec
adc
nop
sbb
pusha
lock
stos
and
addr16
sub
dec
jp
cmp
rorl
inc
rcrb
aam
add
adc
cmpb
pop
clc
inc
cmp
mov
jne
jo
out
clc
adc
push
and
push
mov
mov
push
leave
pop
inc
sbb
mov
nop
in
sub
in
pop
rclb
and
out
repz
xor
or
fs
push
out
hlt
mov
inc
xchg
inc
add
pop
movsb
xchg
imul
cmp
fstl
or
aam
fs
outsb
inc
pop
fwait
cmp
or
adc
shll
movsb
mov
mov
cmp
iret
movsl
lret
cmc
jb
inc
mov
pop
dec
fmulp
rsqrtps
insl
push
push
push
jae
sub
fstpl
rcrb
add
sub
push
cld
pusha
push
cs
push
orb
dec
sbbl
push
xchg
outsl
gs
add
in
movl
mov
push
and
inc
addl
stos
fdiv
or
dec
add
inc
sub
inc
adc
jb
add
sbb
loope
enter
out
call
lock
push
loope
out
pop
dec
stos
push
adc
push
into
xor
mov
push
enter
ror
mov
dec
xor
push
push
pop
mov
cli
or
hlt
add
lods
add
icebp
xchg
int3
xor
sub
loopne
adc
and
hlt
fcomip
jne
cmp
xchg
inc
test
fstpl
or
xchg
flds
je
add
repz
je
dec
push
push
mov
aaa
push
pop
lcall
and
subl
stos
or
test
push
mov
repnz
ficoml
test
dec
cld
inc
repnz
pop
dec
cld
sbb
add
pop
ja
add
in
sbb
arpl
or
cld
stos
pop
enter
push
push
push
mov
clc
xchg
inc
push
adc
repz
addr16
lret
inc
sbb
int3
xor
dec
mov
aam
inc
outsl
and
adc
pop
inc
js
into
inc
sub
jmp
inc
add
inc
xor
add
rcrb
sub
mov
das
jae
pop
xchg
add
mov
out
popa
mov
jae
and
fcompl
cmpsl
inc
mov
dec
hlt
inc
in
insl
mov
sti
cmp
inc
inc
fisubrl
cs
push
pop
and
mov
lock
sbb
push
int
add
fwait
cmp
cmpsl
mov
or
push
aas
pop
fidivs
mov
loope
out
dec
hlt
inc
mov
and
inc
mov
add
and
nop
cmpsb
add
xorb
mov
sbb
jmp
push
add
dec
inc
inc
or
push
in
lcall
and
in
lods
mov
call
movsl
xor
or
mov
adcb
mov
or
nop
movsb
mov
or
insl
sbb
jns
dec
jne
push
lea
sbb
add
mull
lahf
sbb
push
cwtl
add
adc
or
add
xchg
inc
enter
out
push
adcb
pop
ljmp
int3
inc
cli
or
and
cmovo
iret
rorb
jae
or
sub
xchg
mov
mov
mov
std
add
xor
lret
loopne
fistpl
xchg
inc
push
adc
mov
or
inc
jmp
mov
push
popa
inc
xor
jmp
jl
or
jg
push
fidivrl
mov
icebp
sub
lock
add
loop
movsb
lahf
out
jns
mov
mov
clc
xchg
mov
add
mov
lea
jno
stc
or
mov
movl
add
dec
adc
fdivrs
mov
int
testl
inc
add
rclb
dec
sbb
mov
adc
aam
and
or
xor
add
js
push
sub
mov
or
mov
sahf
lea
push
outsl
jo
adc
xchg
pop
das
inc
sbb
out
imul
pop
add
mov
gs
lret
enter
push
inc
lods
jmp
and
cmpsl
sbb
and
movsb
push
mov
inc
subb
pushf
sub
sbb
adc
jge
xchg
sahf
or
and
inc
xor
sub
dec
add
or
and
pop
call
mov
mov
jmp
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
sahf
or
adc
sbb
std
stos
in
push
push
push
dec
pop
or
mul
add
shl
pop
jmp
jb
and
jo
nop
inc
call
jnp
movb
add
jnp
add
and
or
jmp
adc
mov
int3
jo
cld
ds
cld
std
call
jmp
pusha
dec
add
loopne
push
add
int3
xor
test
and
lea
outsb
inc
vmread
push
sbb
add
dec
inc
push
cmp
sub
mov
or
cmpsb
inc
repz
adc
or
xor
pop
dec
loop
dec
icebp
and
stos
inc
sub
sbb
aad
lret
out
push
hlt
sub
xor
pop
test
inc
xchg
adc
xor
gs
dec
rorb
jl
xor
add
or
nop
xor
decl
mov
and
test
sub
je
cmp
jb
cmp
ja
test
fisubs
pop
pop
and
fimuls
and
fistl
push
sub
mov
inc
inc
sbb
jne
xchg
ret
in
dec
jne
sub
stc
jp
xor
and
xor
add
je
or
push
mov
lods
inc
shr
push
push
leave
inc
fmull
sbb
lock
or
push
out
outsl
mov
push
imul
jmp
lcall
jl
outsb
add
pushl
sbb
adc
fnstsw
cmp
pop
adc
sti
or
pop
mov
lods
sti
mov
movswl
fcomps
pop
outsl
fxch
fldl
mov
fildll
scas
dec
rorb
out
sub
daa
xchg
ret
mov
dec
pop
push
imull
or
mov
fdivp
pop
es
xor
pop
imul
mov
mov
outsb
gs
inc
mov
hlt
dec
ficoml
outsl
mov
addl
add
test
mov
jno
add
loope
aam
mov
xchg
dec
movb
add
jb
inc
fs
inc
and
adc
and
not
in
cmpb
mov
dec
and
dec
add
loop
and
pop
dec
jl
push
mov
cmpsb
outsl
ja
scas
mov
iret
out
mov
pop
repz
fs
jae
mov
aaa
out
arpl
movsl
ss
pop
fisubs
das
cmp
mov
in
nop
std
xor
xorl
lock
rcll
xchg
std
and
sbb
dec
adc
inc
add
fiaddl
shrb
xchg
adc
jbe
or
adc
inc
sbb
mov
and
sbb
test
stc
ja
fs
lock
xor
cmp
std
out
jns
inc
sbb
sti
fwait
icebp
out
sbb
or
push
fidivs
rclb
aas
aam
data16
inc
in
push
add
adc
movsb
add
push
xchg
push
lods
push
pop
xchg
rclb
psubd
sbb
xor
ja
xorb
add
jecxz
dec
push
cmp
fdivr
xor
lcall
or
ljmp
aaa
pop
loope
pop
movsl
lret
push
push
rclb
loopne
fld
mov
addl
mov
pop
push
aam
mul
ss
lock
out
mov
icebp
inc
sub
cmovno
push
into
mov
daa
in
aas
sti
cld
notb
inc
xor
sbb
fidivrs
repz
adc
stc
bswap
repz
aaa
add
xor
jns
inc
xchg
outsb
in
fs
js
bound
add
mov
aas
jmp
add
pop
or
inc
inc
dec
enter
add
ljmp
pop
push
push
orb
dec
push
inc
jl
in
jge
push
addb
mov
scas
adc
push
rep
es
or
inc
push
adc
push
mov
out
push
in
push
jo
mov
xchg
mov
push
cmpsb
aam
popa
inc
pop
fmulp
and
rcrl
inc
js
lahf
les
push
out
inc
shlb
adc
or
or
pop
xchg
adc
sub
ss
mov
shrb
orb
pop
xchg
fisubl
mov
push
rol
xchg
pusha
inc
mov
and
lahf
sbb
add
xor
leave
xchg
mov
stos
lahf
das
or
pop
repnz
add
repnz
xchg
out
inc
mov
dec
or
dec
xchg
push
xor
xchg
mov
or
mov
out
mov
outsl
out
inc
scas
fs
out
pop
push
pushf
and
into
insb
mov
nop
xchg
xor
add
inc
sub
mov
loop
xchg
js
jl
popa
movsb
xor
pop
insb
aaa
call
add
pop
outsl
jl
and
inc
mov
test
and
add
lahf
or
adc
jp
adc
popf
iret
out
mov
sahf
loope
outsl
pop
sbb
pop
fbld
pop
nop
push
mov
fwait
add
and
cltd
adc
sbb
xlat
mov
inc
ljmp
pop
add
add
gs
faddl
mov
xor
movsb
pop
inc
arpl
test
das
pusha
mov
fmul
mov
and
xor
push
cltd
bound
or
cmp
sbb
sbb
or
dec
inc
in
sub
xor
addl
add
xor
xorb
shl
and
xchg
nop
push
aas
xchg
sbb
scas
ja
nop
and
mov
jne
xor
jl
pop
adc
adc
call
call
adcb
dec
cmp
mov
insb
mov
adc
shll
push
sbbb
add
push
pop
mov
inc
stos
xor
ss
fwait
std
sbbl
mov
mov
clc
mov
add
pop
jg
or
xchg
and
test
ret
or
rcll
cmp
sub
testl
fildl
or
fisttpl
dec
sbb
sbb
xor
add
cmp
add
and
add
add
add
and
or
cmc
or
adc
xor
and
pusha
popf
arpl
jmp
add
xor
pusha
loopne
inc
movsl
mov
cs
xchg
pop
add
enter
fnstcw
add
sub
pop
lcall
and
adc
and
jge
dec
std
xor
shrb
fwait
or
loopne,pn
mov
jmp
seto
fistl
and
and
add
xchg
lock
lock
or
and
test
hlt
jl
push
mov
inc
dec
dec
sub
clc
cld
xor
jp
add
adc
pop
push
push
jl
adc
or
sub
add
orb
mov
adc
fwait
and
cmpsl
dec
mov
add
lcall
add
add
jbe
in
sbb
lock
adc
xlat
aad
insb
test
aad
or
mov
dec
outsl
add
loopne
test
fmuls
mov
jo
je
xchg
adc
dec
hlt
inc
xchg
or
push
or
mov
push
xchg
xchg
or
ss
push
fcmovbe
lret
or
sbb
and
pop
sbb
inc
call
inc
jmp
push
jl
xor
cld
ret
pushf
mov
pop
je
adc
lock
add
shlb
rcl
jne
mov
fldcw
mov
jle
mov
adc
xchg
pop
loopne
or
push
push
mov
shr
jmp
nop
call
mov
lock
xchg
or
pop
xchg
mov
iret
shl
lods
or
aam
adc
inc
testl
push
sbbl
pop
jg
cmova
dec
adc
mov
jle
je
sub
out
push
and
mov
rclb
inc
add
push
or
clc
mull
cltd
shlb
mov
push
aad
cmpsb
adc
or
add
and
push
pcmpgtd
subl
pusha
or
pop
shr
sbb
add
hlt
pop
jbe
adc
sub
ljmp
dec
jecxz
repnz
roll
and
add
or
inc
and
rcll
and
cmovbe
push
xchg
inc
lock
je
push
push
pop
inc
push
clc
mov
add
inc
inc
inc
orb
inc
lock
ljmp
cmp
or
sbb
pop
add
add
cwtl
sbb
xor
sti
sub
shll
les
sub
sub
andl
mov
aaa
pop
push
jae
mov
or
and
in
add
aaa
sbb
mov
xor
pusha
push
repnz
imul
loopne
sbb
ds
dec
inc
jbe
sbb
rcrb
addr16
sub
xorl
repnz
leave
inc
inc
mov
inc
adc
and
iret
dec
orps
in
ret
xor
iret
mov
in
xchg
dec
gs
jno
push
insb
imul
stos
enter
nop
mov
xlat
cwtl
push
adc
push
cld
adc
push
jb
sub
ret
stos
int
shlb
xchg
cmp
es
jb
mov
or
sti
jmp
adc
jno
mov
inc
mov
ss
pushf
mov
sbb
mov
sub
pop
int3
add
into
test
sbb
popl
pop
outsl
insb
gs
outsl
cwtl
cmp
cmp
and
pop
sub
mov
arpl
xor
aaa
dec
outsl
popa
xor
dec
push
push
outsb
jecxz
out
adc
lea
or
ds
repnz
ret
inc
pop
jmp
dec
or
ss
inc
pop
push
jge
adc
or
insb
add
jb
jmp
sub
push
repnz
test
inc
pop
sub
adc
hlt
nop
sti
inc
pop
cmc
adc
pop
mov
enter
lahf
or
pop
lcall
sbb
addr16
dec
ret
les
daa
mov
jmp
psraw
jecxz
dec
cmp
or
pusha
aaa
xchg
arpl
test
mov
pop
push
adc
mov
cmp
push
push
adc
mov
jns
int
fwait
movsl
scas
add
insb
push
push
fsubrs
or
inc
mov
mov
hlt
push
add
call
push
adc
sub
nop
int3
cmpl
sbb
cmp
sbb
pop
or
dec
push
mov
lret
fs
cmp
nop
add
add
nop
add
or
rclb
or
flds
mov
jns
sub
adc
add
nop
and
sub
fs
push
fs
dec
add
xor
test
movsb
xor
add
enter
add
xor
jl
push
fs
mov
fs
mov
nop
and
nop
mov
sbb
nop
add
xor
pop
add
xchg
add
xor
in
fdivs
enter
sbb
xor
or
orb
or
js
icebp
pushf
pop
sbb
cmpsl
cmpb
lds
sarl
sbb
push
out
pop
push
repz
ja
xor
dec
and
xor
push
adc
pop
cmp
repz
in
stc
test
sahf
stos
mov
jnp
cmpsl
clc
add
push
dec
pop
cmp
repz
jb
mov
cmpsb
mov
shrb
mov
out
push
adc
sub
inc
repz
out
pusha
out
add
sahf
out
dec
cwtl
movsl
push
mov
int3
fsts
addb
sub
sbb
xchg
dec
adc
lock
sbb
ss
mov
cmp
push
push
add
push
iret
test
aaa
xor
daa
mov
into
outsb
lock
mulb
adc
push
pop
pusha
pop
xchg
sbb
lahf
xor
in
push
add
mov
push
out
sub
inc
and
push
xchg
sub
sub
xor
and
add
pop
inc
les
or
push
cwtl
cmp
xor
jo
jp
sub
dec
sub
test
adc
sbbb
fwait
mov
dec
pop
dec
insb
loop
mov
push
adc
repz
mov
sbb
push
and
cmp
rcl
cs
idivl
sub
jl
or
push
and
fisubrs
jle
mov
sub
mov
decl
xlat
mov
push
sbb
sbb
mov
fs
inc
sub
imul
cwtl
pop
add
add
mov
fiaddl
and
push
dec
pop
mov
sub
inc
js
or
lea
or
lea
pop
xchg
mov
lods
imul
xchg
xor
out
dec
arpl
mov
ret
mov
mov
mov
mul
pusha
xchg
or
cmpsl
mov
and
inc
fst
add
adc
adc
cli
push
mov
sbb
fistl
push
mov
adc
jne,pn
mov
inc
stos
jecxz
sbb
leave
imul
or
xorl
daa
adc
aas
roll
jne
mov
push
sbb
test
inc
dec
or
inc
sbb
pop
inc
xchg
adc
add
pop
rclb
inc
push
dec
out
inc
hlt
mov
addl
dec
sbb
xor
sub
adc
mov
sub
stc
dec
mov
or
ss
fiaddl
jge
rol
xchg
cmp
inc
cltd
in
dec
cmp
cmp
dec
arpl
mov
dec
sbb
out
movsl
ja
ja
movsb
in
lret
push
inc
and
push
enter
add
loope
push
lret
adc
cmpl
xor
pop
mov
imul
cmpl
or
add
sbb
test
dec
lock
mov
xchg
or
sbb
pop
sub
adcb
jnp
call
leave
or
rclb
mov
mov
pop
jbe
sub
adc
cmp
push
je
jp
out
xchg
dec
pop
xchg
dec
dec
add
inc
push
es
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
fdivl
mov
inc
dec
roll
daa
test
mov
adc
mov
lock
sbb
xchg
fisubl
iret
repz
imul
inc
xchg
jge
popa
adc
adc
lods
add
loope
xor
rorb
addr16
mov
xor
push
or
xchg
and
pop
imul
cltd
gs
sub
xchg
and
lret
jmp
cmc
xor
adc
bound
jge
test
pushw
inc
sbb
cmpsl
icebp
xor
jmp
adc
je
leave
mov
sbb
or
add
incl
jmp
in
dec
es
sub
inc
xor
dec
adc
leave
add
mov
jle
push
mov
push
icebp
ja
movsl
cmp
adc
jmp
mov
stos
inc
lods
pop
xor
lods
adc
fstl
nop
adc
sbb
dec
aas
or
std
in
inc
fiadds
add
fcoml
int
cmp
mov
push
orb
lret
cld
mov
ret
add
mov
and
loop
loope
mov
fs
jne
mov
lret
pop
lret
int
lock
sub
push
push
xchg
inc
pop
pop
dec
jb
daa
aaa
mov
sub
or
push
mov
push
cmp
sub
xchg
cmp
rorl
mov
add
push
test
add
pop
js
sbb
pop
jmp
jl
or
in
mov
jne
push
fildl
pop
in
sbbl
lea
inc
or
inc
jg
jle
and
nop
cmc
test
add
subl
jno
cli
mov
mov
fiadds
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
sub
fcomp
test
sub
mov
adc
jne
inc
arpl
mov
lods
cmpl
add
loope
push
sub
aaa
aad
mov
push
add
lea
mov
push
add
push
inc
movsl
mov
es
dec
push
mov
mov
jae
jo
or
add
jne
stos
jl
push
inc
or
mov
std
jmp
jg
popf
xor
sub
sub
push
inc
sub
mov
or
mov
adc
dec
cmp
mov
or
push
lret
iret
sub
inc
xor
cmpb
cmp
outsb
js
hlt
add
scas
or
add
xchg
aaa
cs
sub
mov
nop
or
nop
mov
or
inc
sbb
fsin
mov
jno
adcl
xor
fadd
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
mov
sahf
xor
xchg
cmp
lds
in
dec
jnp
mov
xor
inc
sub
add
enter
mov
push
inc
and
inc
scas
js
push
outsl
push
mov
pop
jno
xor
cmp
je
inc
cmp
jne
call
jmp
push
cmpl
jne
mov
inc
push
pop
add
dec
cmp
loop
xchg
mov
sbb
push
ret
add
pop
and
ret
pop
aam
mov
adc
jmp
clc
and
out
outsl
loopne
add
xor
idivl
les
stc
adc
push
mov
sbb
pop
or
or
adc
int
daa
leavew
push
in
sbb
call
loope
shrb
adc
lret
or
dec
mov
push
push
push
dec
sbb
fcmovbe
or
hlt
adc
or
sub
inc
loop
sbbb
cmp
inc
sbb
xchg
mov
adc
xlat
add
rcr
mov
rorl
mov
dec
enter
call
movsl
cmp
push
sbb
mov
or
fdiv
lock
and
inc
jle
fmull
icebp
das
or
sbbl
int
mov
jb
and
xchg
pop
sbb
pushw
cwtl
dec
jb
xor
pusha
mov
clc
jmp
pop
mov
sbb
sbb
sbb
sarl
setae
in
dec
lret
add
inc
lea
mov
cmp
add
or
dec
add
std
mov
mov
or
inc
xchg
add
ret
pop
mov
in
pop
test
fs
sbb
or
inc
xchg
xchg
cmpl
imul
inc
dec
stos
fcompl
mov
les
cwtl
insl
test
adc
scas
mov
sub
orl
fucomi
and
lods
insb
cli
or
stos
cmpb
clc
mov
sbb
add
jo
mov
test
xchg
or
jnp
dec
dec
add
adc
sub
pop
scas
sub
dec
xor
hlt
adc
je
jmp
scas
add
jmp
adc
add
pop
xchg
imul
pop
xor
push
cmp
add
call
cmp
sbb
sub
pop
rcl
mov
mov
jge
dec
shlb
push
pop
sub
or
loop
test
adc
popa
imul
pop
jno
and
cmpl
adc
cld
push
and
pop
mov
jge
jae
add
pop
xor
xor
or
aas
rcr
inc
mov
mov
add
rorb
push
cmp
or
daa
inc
sbb
inc
test
or
dec
bound
pop
rclb
or
pop
push
clc
adc
fcoml
jne
and
loopne
test
test
mov
clc
in
outsb
inc
lret
ja
xor
cmc
xor
xlat
and
sarw
pop
lret
enter
leave
xor
dec
inc
xchg
pop
pop
hlt
rorl
test
mov
pop
sbb
xor
enter
pop
dec
cmp
stc
addr16
and
xchg
addl
jg
xchg
fwait
inc
mov
xchg
add
ds
and
ret
mov
sti
xorl
iret
pop
lock
adc
mov
pusha
adc
mov
mov
mov
and
xor
xor
adc
jg
mov
or
jge
movsl
adc
sub
jg
adc
or
popa
lods
xor
xchg
jo
lret
inc
pop
inc
pop
xor
aaa
mov
xor
sbb
add
jmp
adcb
ret
or
ret
and
das
je
adcl
jb
rolb
cmp
sub
mov
nop
adc
fisttpl
test
add
xorb
dec
xchg
push
jae
adc
pop
push
movsb
push
clc
push
push
outsb
push
pushl
xor
scas
add
out
pop
mov
or
loope
and
and
jne
ret
add
xchg
daa
dec
aaa
mov
add
xor
xchg
or
sbb
mov
rolb
adc
aaa
mov
das
push
lahf
inc
push
xor
xchg
xor
or
xchg
xor
and
pop
adc
cmpsl
aas
lret
cmp
cmp
inc
mov
sub
xchg
setge
cs
cmpb
jmp
imul
jecxz
dec
inc
stos
jg
push
sub
jnp
inc
nop
dec
pop
adc
dec
add
mov
sub
repz
cli
mov
pop
jb
sub
jo
inc
dec
test
test
ss
xor
imul
aaa
mov
notb
push
lcall
cmpl
pop
xchg
mov
rclb
loop
ljmp
nop
out
inc
aaa
rol
and
xchg
lret
or
add
les
aaa
lea
lret
mov
mov
mov
sbb
add
fs
and
adc
mov
les
mov
insl
adc
add
cmpsb
inc
pushf
cmp
jo
lods
xchg
fcmovbe
imul
and
xlat
push
cmp
mov
adc
stos
or
adc
nop
push
nop
push
pushf
lcall
fs
mov
and
movb
inc
clc
pop
call
dec
fidivs
adc
mov
movsb
xor
jmp
mov
imul
jl
jno
dec
sti
mov
repnz
clc
sub
push
je
sub
and
or
jecxz
dec
repnz
repnz
mov
lods
xor
and
popa
call
mov
popa
in
je
mov
in
in
jbe
mov
arpl
or
pusha
lahf
add
movsl
fldl
and
cmp
pop
xchg
cli
adc
jge
cwtl
or
adc
dec
shrl
lret
dec
je
pminub
pop
test
push
push
mov
out
lret
aad
jp
daa
cs
sub
mov
shll
push
popf
pop
out
imul
mov
cmp
ja
cmpl
fidivrs
out
inc
sub
and
testl
adc
adc
fistpll
icebp
loope
adc
sbb
xchg
xor
test
or
faddl
push
scas
mov
and
and
test
push
cmp
and
and
and
push
sub
sbb
mov
out
adc
cld
add
xchg
push
cmp
push
pop
add
lcall
pop
mov
fcomps
es
sbb
js
cmp
pop
cmp
xchg
cmp
inc
out
lods
or
and
cmp
or
add
jl
fmul
or
test
dec
icebp
xor
jne
out
mov
or
dec
jge
adc
pop
dec
in
inc
test
inc
pop
insb
in
stos
adc
push
es
sub
or
dec
cltd
mov
pusha
xor
mov
dec
pop
mov
pop
add
mov
test
mov
inc
shlb
and
pushf
pop
cs
cmpsl
push
pop
popa
and
bound
add
pop
popa
dec
mov
and
lock
jo
fwait
push
mov
pop
hlt
cmp
or
pop
je
lret
addl
sub
enter
ja
es
and
leave
mov
add
and
or
add
mov
call
in
add
push
jg
cs
test
imul
bound
popf
adcl
sbb
xchg
sbb
pop
rolb
adc
push
ret
inc
jmp
loopne
mov
inc
inc
push
and
arpl
dec
test
cmp
in
es
inc
and
orl
xor
xor
push
insl
push
xchg
sti
insl
cmp
fs
aaa
sub
cld
addb
inc
xor
inc
lret
add
and
cmp
cmp
aaa
adc
jae
data16
push
inc
aad
xor
or
add
test
cmp
or
xchg
cld
mov
mov
add
sahf
sahf
imul
or
sbb
adc
stos
mov
push
add
call
sbb
scas
or
mov
adc
mov
pop
xchg
add
andb
push
fbld
sbb
push
dec
cmpsl
outsb
test
mov
push
jnp
call
clc
inc
mov
sbb
shlb
and
and
cbtw
cmp
mov
notb
rorl
xchg
or
roll
jl
movsl
adc
xchg
ss
xor
sub
incb
cld
addl
inc
mov
push
fwait
lcall
in
xchg
inc
add
pop
add
jmp
flds
fmuls
int
inc
dec
fcmovnu
stc
pop
or
aas
adc
aaa
inc
loopne
loopne
dec
inc
push
inc
pop
inc
dec
cmpsb
lahf
or
mov
or
sub
aad
mov
add
mov
push
pop
lea
in
ret
inc
or
mov
cmpsl
cmp
bound
pop
pop
mov
fsubrs
movsb
lods
loop
insl
sbb
adc
jo
or
ljmp
cmp
movsl
pop
call
mov
lock
out
or
lods
pop
xor
cmp
or
sbb
rorl
adc
xchg
dec
js
aaa
dec
push
sbb
cmp
mov
ss
inc
xchg
push
mov
cmp
nop
arpl
push
sbb
xchg
outsl
and
adc
je
sbbb
dec
int
mov
filds
add
xchg
sub
mov
out
or
and
sbb
lcall
jge
inc
es
inc
and
inc
push
sub
mov
add
or
or
outsl
rclb
nop
mov
and
dec
mov
push
mov
inc
loop
xchg
fldl
push
ljmp
lock
xor
push
pop
pop
aam
dec
and
dec
sbb
cmp
dec
add
lret
aad
ja
jns
adc
lods
mov
xchg
es
je
push
mov
clc
jbe
xchg
movsl
add
jo
fs
shr
push
aaa
iret
inc
lahf
push
test
ret
jecxz
add
or
add
out
aam
push
jnp
adc
inc
adc
cmpsb
sbb
cmpb
in
xchg
xchg
popf
jmp
adc
test
xchg
ret
ror
fsubl
insl
xchg
cltd
mov
pop
adc
or
add
rorb
xchg
xchg
push
ret
and
xlat
in
push
or
aas
adc
dec
cmp
mov
sub
loop
jne
dec
ss
bound
test
inc
pop
push
jae
mov
ret
inc
cwtl
jno
sbb
dec
les
mov
and
or
xor
je
roll
sbb
cmc
in
sbb
xchg
dec
in
cmp
dec
dec
sbb
dec
js
xchg
scas
cmpl
inc
cmc
clc
sub
in
xchg
sub
daa
nop
test
rorl
inc
pop
pop
sbb
mov
inc
sub
dec
loope
orl
mov
dec
jne
inc
mov
pop
imul
out
frstor
mov
cmp
add
mov
dec
sarb
ja
subl
add
cltd
sbbl
movsl
icebp
clc
xlat
enter
fsubp
dec
inc
cmp
outsb
je
icebp
paddw
clc
or
rcrl
dec
inc
dec
rorb
outsb
push
xchg
xor
int3
mov
insl
dec
jb
into
mov
or
fcomps
adc
and
mov
imul
adc
and
push
inc
dec
jb
add
sub
jge
push
cmp
hlt
ds
adc
or
fdivs
adc
fcom
lods
dec
mov
shll
cltd
mov
sub
into
dec
inc
add
mov
imul
je
sbb
and
push
mov
test
adc
addb
cmc
sti
mov
inc
arpl
pop
sbb
int3
push
mov
movsl
add
cltd
dec
outsl
sub
mov
and
push
add
stc
test
rclb
out
push
inc
and
add
idiv
xor
movsb
push
pop
and
lods
testl
lahf
inc
or
pusha
in
pop
and
sbb
out
cmp
push
lea
sub
jnp
add
adc
mov
cmovo
mov
insb
dec
and
sbb
and
addr16
xchg
push
dec
inc
sub
xor
sbb
aam
push
rorl
jns
dec
jnp
mov
and
cmc
jle
incl
or
aas
adc
push
push
fnstenv
inc
xchg
pop
push
dec
and
jb
push
sbb
cmp
test
dec
inc
mov
sahf
inc
lock
ret
xchg
jle
push
lods
or
lods
pop
inc
xchg
push
mov
ret
fs
jo
push
sub
jb
and
ror
gs
inc
fsubr
das
mov
nop
arpl
es
popa
xor
xchg
xor
icebp
mov
xchg
xor
nop
arpl
lods
cmp
inc
cltd
je
stos
dec
cmp
and
idivb
push
cmp
adc
add
mov
sarl
cmp
xorl
inc
shll
iret
push
popa
mov
loope
aas
rcl
aas
dec
sub
jl
jge
mov
jb
adc
add
sub
dec
sbb
xchg
incl
sbb
test
add
shll
cmpsb
movsb
jge
mov
das
xchg
outsb
inc
enter
out
push
push
addl
js
dec
cmp
sbb
add
jmp
dec
adc
sbb
enterw
xchg
nop
movl
pavgb
inc
cld
sub
jb
jno
les
xchg
mov
scas
jmp
int3
jbe
fistps
jmp
xchg
xor
lea
lods
adc
cmpsb
xlat
push
dec
aam
push
call
inc
popf
mov
in
std
adc
dec
jmp
mov
cli
stos
add
divb
sub
inc
adc
adc
push
and
jmp
cld
cmp
lahf
aam
inc
notl
sbb
mov
stc
sbb
inc
movsl
in
ret
dec
fildl
xchg
insb
adc
or
shlb
dec
ret
cs
cmp
je
and
cmp
cmpsb
adc
inc
ret
mov
pop
xor
pop
dec
xchg
inc
jle
inc
mov
pop
repnz
and
adc
mov
ss
push
mov
push
bound
aam
aam
sub
adc
mov
push
dec
ficoms
scas
notb
sbb
subl
pusha
and
mov
inc
push
lahf
cmp
in
fistpll
push
or
scas
int
adc
leave
loop
nop
in
sbb
nop
insb
data16
push
or
xor
add
and
inc
sub
aaa
and
adcb
sbb
fwait
add
pop
inc
cwtl
pop
inc
and
addr16
fisttpl
and
cmp
push
or
sbb
jns
mov
dec
stos
add
inc
sbb
adc
cmp
int3
mov
fcoms
imul
rclb
and
and
outsl
xchg
or
inc
clc
xchg
testl
mov
mov
imul
mov
inc
or
pop
call
add
dec
fildl
dec
add
or
inc
jae
jno
mov
adc
sbb
dec
pop
leavew
sbb
jns
inc
aam
and
rorl
add
adc
sahf
imul
sub
jo
loope
nop
outsb
mov
ja
mov
fsubrs
jo
jnp
stos
inc
xor
stos
xchg
adcb
les
inc
test
mov
mov
out
sub
adc
outsb
subl
mov
inc
rcl
and
mov
push
inc
inc
ljmp
mov
mov
xor
out
pop
push
sub
fwait
pusha
xchg
or
xchg
dec
or
inc
sub
stos
jge
jp
pop
cltd
out
and
out
lahf
mov
xchg
push
push
notb
xor
or
aas
xor
negl
pop
faddp
into
or
push
cld
sub
nop
into
add
andl
add
mov
rcl
or
cmp
shr
pop
and
pop
mov
sub
jge
gs
or
add
sarl
or
cmp
xchg
adc
adc
arpl
push
leave
adc
mov
sbb
add
inc
mov
in
shlb
fdivs
push
xor
inc
xchg
in
adc
jne
ret
cli
add
inc
pop
adc
sbb
and
das
mov
clc
sub
xor
sbb
aad
testb
xchg
rolb
add
inc
dec
mov
popa
in
add
js
data16
rorb
loop
daa
and
insb
mov
adc
insl
shll
push
sub
add
add
pop
add
dec
xchg
and
add
leave
rorb
and
stos
loope
aaa
adc
sbb
adc
sub
and
jmp
xchg
push
pop
or
sbb
ja
stos
mov
enter
add
push
stc
inc
sahf
out
push
js
sub
adc
shr
test
pop
sbbb
jl
sub
paddq
cmc
lock
faddl
outsb
xor
lods
pop
loope
sub
faddl
or
mov
mov
das
int3
dec
cwtl
adc
sub
in
cmpsl
out
and
mov
es
cwtl
adc
aad
testl
cmp
mov
mov
lret
rcrb
lret
test
mov
mov
adcl
mov
jne
cli
adc
mov
in
push
sub
insb
inc
rcl
repz
push
xor
mov
fcomps
pop
enter
cld
in
mov
loopne
in
sahf
xchg
dec
pop
push
sub
mov
mov
enter
nop
pop
inc
iret
les
lds
adc
cld
xchg
inc
ds
xchg
bound
out
adc
shrb
test
jne
lock
movsb
bound
mov
loop
sahf
bound
cmp
and
sub
mov
addr16
mov
rcrl
mov
pop
es
fst
ret
dec
jmp
and
in
dec
sbb
push
int3
inc
push
popf
rolb
in
inc
fildll
push
inc
and
xchg
sub
in
mov
outsl
fs
sbb
inc
mov
add
xor
rcrb
cmp
aad
xchg
mov
cmp
roll
fcoml
lods
insl
lods
push
nop
add
push
jle
leave
add
insb
fs
xor
in
popf
xchg
frstpm(287
out
mov
cmp
cmp
gs
in
nop
jmp
shrb
jp
jg
test
mov
inc
je
fcoms
inc
enterw
call
filds
repnz
outsl
inc
and
sbb
enter
int
in
jp
add
fdivs
pop
les
iret
pushf
xor
push
adc
xchg
xor
xor
pop
xor
push
or
or
adc
cwtl
push
push
notl
lods
jno
or
insb
test
repz
mov
add
scas
addb
lock
mov
mov
jns
cmp
dec
add
cs
mov
in
orl
dec
add
add
dec
ja
sbb
or
or
popa
push
dec
push
bnd
or
pop
sahf
scas
inc
fisubl
add
push
testb
adc
inc
mov
jns
fs
add
or
pop
gs
mov
mov
out
and
dec
jne
fwait
and
sahf
out
sahf
sbb
adc
or
xchg
sbb
ljmp
loopne
sbb
lret
fsub
jbe
or
pop
add
or
sbb
mov
out
push
push
jp
fisubl
inc
leave
clc
or
aam
push
pop
mov
inc
loopne
jmp
cmpsb
jle
xchg
push
and
cmp
mov
push
out
add
cld
fldt
pop
mov
mov
pop
rcrl
and
dec
cwtl
test
or
or
outsl
mov
xchg
clc
pop
ja
test
lret
sub
repz
or
sbb
nop
xchg
lret
xor
cmp
push
or
or
movb
mov
sbb
inc
js
cmp
adc
pop
and
and
xchg
fsubs
and
sahf
out
out
sub
push
push
or
or
or
into
repz
or
or
cmpsb
push
adc
push
push
mov
adc
pusha
popf
scas
or
sbb
aas
sahf
lret
ja
cmp
or
or
or
sub
jbe
or
mov
pop
jo
push
movsb
decl
mov
and
pop
add
lret
fisubs
ret
and
push
sbb
inc
sahf
or
or
in
in
or
push
push
rcl
jnp
push
pop
adc
dec
adc
add
add
push
add
push
adc
lea
and
adc
clc
cmp
hlt
addr16
pop
movsl
je
das
and
ljmp
hlt
lea
dec
sub
push
or
icebp
xchg
adc
mov
add
and
test
add
adcb
dec
mov
pop
or
add
scas
mov
adc
fsubrp
push
pop
mov
nop
add
and
sbb
mov
dec
lea
enter
push
push
pop
mov
xor
mov
in
outsl
jae
or
ret
push
or
or
in
in
push
add
ret
cld
mov
or
xchg
mov
inc
lea
aam
mov
int
xchg
mov
xor
inc
jmp
dec
loope
aam
mov
xchg
les
mov
cmpsl
sbb
push
popa
in
and
shlb
jle
cmpsl
mov
imul
loopne
pop
cld
outsb
inc
xchg
and
je
dec
lret
adc
pop
mov
cmp
xchg
lret
mov
aas
stos
movsb
aad
inc
insl
mov
pusha
nop
cmp
shrl
fs
fwait
pushf
mov
jb
ret
xor
push
jl
insl
fs
imul
clc
xchg
cltd
push
lods
addl
lods
add
push
ss
inc
sub
imul
mov
fiaddl
jmp
jp
nop
cmc
fists
inc
cld
pop
add
fstpl
arpl
jecxz
fwait
push
push
int3
adc
test
sub
lods
jae
popa
pop
dec
cmp
add
call
scas
test
sub
mov
cmpsb
dec
dec
xor
push
sbb
pop
sarb
imul
jno
out
int3
add
jl
adc
mov
pop
test
scas
jnp
jmp
sbb
add
add
ds
cld
insb
adc
add
lods
nop
ss
ret
push
sub
ss
jmp
and
aam
frstor
pop
enter
decb
test
push
andb
out
fildl
xchg
jb
sub
pop
ja
or
cmp
sub
or
jbe
test
lods
and
popa
pop
fisubs
fstpt
dec
jmp
inc
ljmp
add
and
cmpl
rorb
jno
jmp
and
sub
mov
jg
nop
les
pusha
sub
push
scas
dec
pop
push
add
adc
popa
cwtl
lret
imul
or
inc
fwait
adc
pushf
xor
sbb
jo
add
rclb
or
ror
jmp
nop
scas
push
mov
add
and
fcomps
jns
pop
insl
pop
bound
dec
or
jbe
addr16
xchg
lock
jmp
cmp
sub
xchg
pop
cmp
pop
out
ja
jb
mov
adc
add
or
xchg
testl
rorl
or
mulb
mov
lret
jle
push
cmp
add
xchg
movsb
push
daa
negb
ret
loopne
jns
add
sbb
ja
cltd
and
xchg
dec
jae
add
push
cmp
les
test
add
clc
clc
stos
adcb
rolb
inc
in
pop
jg
jb
pop
push
xchg
cmp
loop
and
push
jo
jle
jg
fs
push
lret
xchg
stos
mov
or
dec
outsl
mov
inc
arpl
lods
add
in
sub
jb
adc
daa
lock
cmpsl
and
add
dec
adc
test
jge
dec
and
adc
push
adc
movsb
je
inc
jp
rcrb
sub
or
pop
cmpsl
pop
mov
jmp
dec
fisubrs
adc
js
movsb
xchg
mov
movsl
and
lods
dec
and
js
cmp
xchg
popa
sub
subb
or
sub
repnz
add
sahf
subl
sbb
test
mov
or
xchg
mov
or
hlt
or
into
movsl
adc
pop
sti
jne
cmp
ja
ret
das
inc
jae
jge
and
xor
ret
xchg
in
pusha
adc
jge
cs
add
data16
addr16
jb
mov
imul
insl
inc
push
inc
popa
test
in
popf
push
add
mov
inc
aam
insb
push
mov
xchg
adc
les
xor
sub
mov
jbe
push
sbb
mov
jo
insb
imul
leave
in
or
xor
cld
cld
adc
fs
shlb
and
pop
addr16
mov
mov
xchg
lock
nop
push
or
jmp
cmp
mov
mov
fcomp
aas
jo
sub
sub
xchg
mov
or
out
sahf
lea
mov
inc
ja
inc
fdivs
enter
fcomp
sub
sahf
xor
sub
xor
je
jl
or
and
lock
aaa
pop
adc
ss
dec
and
stos
mov
add
stos
mov
cmp
mov
cmpsb
jo
lea
repnz
lea
push
mov
call
or
fwait
add
mov
add
mov
sub
push
fistps
movsb
loop
rorl
sbb
xor
dec
nop
add
mov
mov
add
lahf
dec
and
sbbl
sub
push
xchg
xchg
push
xchg
aas
pop
je
and
add
imul
cmp
jl
jl
add
and
mov
in
push
adc
nop
push
enter
insl
dec
cmp
pop
jb
or
jge
pop
jo
add
add
inc
push
dec
jge
jge
je
adcb
xor
or
push
mov
or
je
add
jmp
leave
sarl
inc
inc
pop
jmp
sbb
xor
les
xchg
data16
sub
lahf
xchg
jle
add
inc
or
rclb
mov
cmp
add
jle
and
in
jle
sbb
ret
repz
aad
jo
outsl
psubusw
pop
or
xor
ja
add
dec
dec
sbb
repz
imul
pusha
lods
cli
adc
ret
repz
add
imull
jnp
lods
add
mov
xor
cmp
ret
lcall
jb
mov
inc
mov
sbb
ficomps
xor
xor
adc
sub
cmp
and
adc
inc
inc
cltd
mov
push
or
sub
fldenv
jb
push
xor
dec
cs
mov
jmp
and
ret
push
fnstenv
jmp
fists
fdivl
sub
pop
add
rorb
insb
mov
or
pop
push
clc
mov
add
cmp
repnz
push
xor
add
push
outsl
fwait
sbb
add
je
loop
outsb
xchg
pop
scas
jbe
sbb
iret
or
xor
mov
roll
pop
or
or
jo
insb
cmp
outsl
divl
popf
xor
adc
xor
sbb
push
pop
enter
inc
adc
nop
out
ss
in
sbb
or
jo
shlb
push
push
jg
xorb
aas
mov
int
cmpsl
js
lahf
xchg
jp
adc
test
xor
pop
sub
imul
decl
test
dec
lcall
cmp
jae
loopne
test
add
sub
fdivrl
push
jg
scas
adc
sub
addb
mov
push
lock
sub
add
add
add
jmp
sub
cwtl
aas
movsl
or
sbb
pop
add
jae
and
add
mov
dec
jne
addl
stos
inc
test
pop
xlat
mov
into
push
out
fcmovu
mov
push
test
xchg
push
mov
movsb
add
lahf
add
testl
movsb
fildl
fsubl
pop
in
xor
jne
xorb
hlt
xchg
dec
adc
cmpsl
sbb
inc
movb
mov
or
daa
cmp
ret
imul
jle
or
xchg
or
pop
jbe
sub
push
call
rorb
push
add
mov
sub
filds
insb
out
cmp
jg
dec
sarl
in
subl
pusha
in
dec
inc
cmp
sarl
jb
mov
dec
sbb
jne
stc
and
out
test
mov
add
outsl
stos
sub
addr16
sub
or
pop
lret
ss
je
jl
popf
push
ljmp
dec
mov
clc
outsb
loopne
xchg
add
mov
outsb
ljmp
popf
mov
sub
mov
hlt
sbb
jne
in
clc
lods
cmp
ja
sbb
adc
nop
in
hlt
ja
push
fcoml
icebp
mov
in
sub
hlt
call
es
in
cmpsb
repnz
loop,pn
call
xchg
in
loope
jecxz
mov
loop
cmp
faddl
cltd
add
nop
inc
roll
adc
pop
xor
shrb
popf
les
ror
enter
cwtl
outsl
jmp
leave
mov
pop
pop
jecxz
or
shlb
push
push
bound
xor
or
call
cmp
mov
mov
sub
xchg
or
daa
nop
mov
jge
mov
sbb
out
add
leave
jo
mov
mov
jne
mov
xchg
pushf
or
sbb
andl
jge
popa
and
es
inc
mov
aaa
xor
pop
pop
aam
jecxz
push
add
nop
loopne
test
sub
nop
sbb
mov
xor
incb
jne
sarb
sub
or
ss
sbb
js
mov
mov
mov
jne
lret
sub
test
ja
int3
frstor
push
dec
stos
mov
enter
and
fucomi
xor
les
dec
shl
fistps
xor
pop
rclb
rcl
mov
sub
push
ret
xor
or
push
imul
movsb
sbb
pop
stc
xchg
push
jge
xlat
or
jnp
popf
cmp
push
cld
push
mov
adc
clc
mov
mov
or
out
add
mulb
fbstp
testl
add
sub
or
pop
pop
pop
pop
pop
shlb
insb
pop
popa
fldenv
adc
adc
icebp
imul
mov
cmp
clc
sub
mov
lock
in
fcoml
fdivrs
in
mov
hlt
rclb
popa
hlt
jbe,pt
jge
jne
mov
adc
popa
push
daa
les
push
aad
dec
fidivs
sub
dec
sti
sahf
xor
js
inc
int3
stc
scas
popa
stos
sub
mov
jae
sbb
adc
add
mov
or
inc
jo
jns
cli
and
pop
lcall
dec
cld
mov
jbe
fstl
sub
shr
pop
aas
mov
mov
xlat
mov
add
dec
les
nop
cmp
or
xor
fiaddl
mov
mov
jbe
fdivl
xchg
scas
dec
fidivl
nop
jge
data16
lods
jb
divb
pushl
gs
aaa
sub
fdivrs
mov
cwtl
dec
sti
mov
add
xchg
fwait
push
sarl
clc
adc
or
jecxz
push
add
jo
add
xchg
cmc
in
mov
mov
pop
add
andb
mov
cmp
cmp
jmp
or
lock
or
lcall
imul
add
in
mov
pop
insb
pop
pop
mov
mov
inc
repnz
cmp
jnp
shlb
xor
sti
dec
fldl2e
je,pn
or
inc
or
pop
fldt
movsb
inc
xor
fildll
cs
imul
loopne
rcr
adc
pushf
xor
adc
pop
push
adc
add
adc
xchg
xor
jns
pop
mov
inc
and
push
and
adcl
mov
add
xchg
jp
cmp
mov
insb
jle
scas
add
in
inc
stos
jno
xchg
inc
cmp
cmp
sbb
std
rorb
lock
movb
sete
inc
push
insl
popl
fdivrp
push
mov
pop
das
inc
lret
and
out
loope
mov
call
inc
push
push
mov
arpl
lock
stos
add
cmp
xchg
mov
cmp
in
loopne
inc
shlb
push
in
dec
mov
dec
pusha
cmp
jg
pop
sub
sub
ss
or
notb
dec
xchg
and
xchg
insl
cmp
fnstenv
xchg
xor
orl
sbb
stc
jne
pusha
add
out
sbb
dec
pop
sbb
xchg
dec
xchg
adcl
add
loopne
lods
and
push
lods
inc
inc
scas
movsl
jmp
xchg
std
repz
jmp
adc
shrw
repz
mov
xchg
sbb
outsb
out
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
lret
mov
ret
dec
pop
sbb
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
jge
fmuls
mov
ljmp
sahf
and
sub
call
push
sbb
inc
sbb
sub
aaa
jmp
sbb
clc
push
jge
sahf
xchg
pop
lock
mov
jmp
or
adc
testb
push
and
int3
adc
lea
daa
or
insl
push
dec
jle
mov
rclb
xor
dec
adc
lcall
xchg
sbb
adc
jge
inc
mov
mov
das
mov
inc
or
xchg
inc
mov
cmp
fs
mov
lds
lds
outsb
mov
sub
mov
jecxz
popa
sbb
mov
sub
jne
push
mov
hlt
add
mov
nop
vprotq
or
js
pop
data16
je
xchg
inc
aaa
inc
mov
dec
cmc
pop
and
xchg
je
call
and
jmp
push
cwtl
or
pop
inc
xor
lret
mov
push
in
cmpsb
mov
rcrl
mov
mov
jnp
inc
pop
and
ljmp
cmp
jb
mov
pop
sub
push
mov
mov
ret
sub
jbe
xor
jbe
lods
add
adc
ret
cmp
jae
mov
add
adc
outsl
inc
rorb
push
lods
mov
scas
std
mov
or
mov
stos
ss
outsb
add
ds
jb
inc
sub
xor
lea
dec
adc
sbb
ss
fbstp
or
sbb
gs
cmp
lea
add
jmp
in
add
cvtps2pi
mov
cmp
jbe
jle
pop
add
test
jb
push
or
fldt
je
or
cmpsb
inc
or
test
push
je
mov
cmp
push
sub
fsubs
add
or
jmp
or
mov
int3
inc
mov
adc
gs
sub
and
jmp
mov
jbe
mov
push
and
cli
fs
add
inc
xchg
fsubl
sarb
leave
sarb
mov
cld
lods
cmp
je
sub
lret
loopne
mov
mov
or
shl
in
rcll
or
xchg
lea
adc
pop
pop
inc
add
xor
mov
and
add
imul
inc
cmp
repz
and
add
xchg
jno
incb
push
nop
dec
mov
mov
lcall
add
mov
lock
or
inc
mov
cwtl
popa
sbb
ss
cmp
addl
out
cwtl
sarb
pop
pop
mov
out
ds
inc
add
mov
add
pusha
out
lods
inc
jmp
push
shlb
mov
in
mov
test
add
xor
cmpb
sbb
push
jb
cmp
pop
adc
mov
add
jne
mov
and
or
inc
into
or
add
gs
inc
or
enter
pop
fisubl
mov
clc
data16
and
adc
das
mov
ficoml
sub
inc
sbb
mov
push
das
cmp
sub
data16
loope
leave
xchg
pusha
popa
or
into
je
inc
cmp
xlat
sub
mov
mov
sub
ret
mov
mov
mov
push
sub
add
inc
mov
push
in
cmpsl
imul
sub
mov
ja
sbb
sub
rcrl
pop
stos
jno
jp
pop
xchg
push
test
cmp
mov
mov
pop
nop
stc
add
test
into
dec
int
add
lods
and
push
lahf
sti
pop
lcall
std
inc
mov
cs
mov
popf
in
push
mov
and
and
jg
mov
sub
pop
rcrb
js,pt
cmp
shr
cmp
loop
mov
mov
test
nop
mov
cltd
add
roll
pop
inc
outsl
add
cmp
aaa
cmc
ret
push
or
cmpsl
enter
push
lods
mov
inc
cmp
jne
orb
int
ljmp
jecxz
clc
add
sbb
shr
cmp
dec
mov
pusha
mov
and
out
es
mov
and
addr16
lock
mov
xchg
adc
rolb
lea
mov
mov
inc
pop
dec
sbb
mov
and
ret
add
add
test
push
jge
enter
ljmp
popa
rorb
shr
cmpsb
decl
or
mov
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
add
sbb
push
adc
outsl
call
fadd
fists
int3
iret
push
or
push
imul
lds
or
aas
dec
pop
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
mov
sbb
push
mov
push
movsb
mov
push
stos
add
fcoms
insl
jmp
aad
sbb
ja
cmpb
or
loopne
mov
ret
and
cli
xchg
mov
push
cmpb
inc
addb
xchg
test
ja
in
lret
inc
data16
lds
inc
dec
repnz
iret
popa
lods
loope
dec
sarb
cli
jl
fisttps
jmp
mov
cld
mov
imul
add
aam
lea
lock
jo
inc
xchg
add
jge
mov
and
pop
adc
jo
aas
sahf
adc
ret
clc
lock
xchg
repnz
mov
add
jl
pop
call
ret
xor
add
inc
pusha
sub
adc
add
push
and
mov
push
mov
sbb
mov
xchg
dec
and
mov
sub
xor
imul
adc
xor
jb
ret
lea
outsl
cmpl
jbe
insb
and
mov
pop
cltd
pop
jno
dec
aaa
rcr
add
mov
lea
or
les
or
add
mov
mov
mov
loopne
jbe
mov
dec
or
and
popf
nop
or
adc
cmpsb
inc
xor
xor
lea
sti
push
pop
pusha
mov
cmp
jg
leave
sub
repz
mov
outsb
mov
jae
or
sbb
xchg
rcll
pop
mov
sub
orb
xor
or
mov
or
popl
sbb
outsl
add
xchg
cmpsb
push
cmc
hlt
pop
push
cmp
data16
lret
dec
out
push
cmp
jge
filds
and
jmp
add
inc
xor
mov
mov
xchg
pushf
pop
and
push
push
insb
arpl
xor
mov
loopne
add
jl
add
fdivs
icebp
gs
out
jg
push
shll
sub
add
orl
popa
and
cmpsl
push
mov
scas
inc
cmp
inc
inc
mov
inc
out
push
pop
or
pop
popa
jl
rolb
ja
xchg
in
sbb
or
adc
and
nop
lock
inc
loopne
mov
movsb
int
inc
pop
leave
mov
lock
sbb
inc
xor
push
xchg
adc
adc
pop
xchg
subl
pop
and
enter
or
es
adc
js
push
enter
adc
hlt
lret
decl
testb
and
lds
test
adcl
pop
pop
outsb
clc
nop
push
xchg
push
pop
enter
loop
pusha
out
or
inc
test
add
pop
punpckhwd
or
ja
popl
fsubs
mov
lods
sahf
lea
addb
push
add
add
push
mov
pop
movzbl
xchg
inc
xchg
or
push
rolb
fdivrs
or
jnp
pushf
lds
xor
push
rcrl
lock
or
aas
cli
or
xchg
push
cmp
cmp
sets
xor
lods
or
or
xchg
jne
or
cmp
je
mov
push
aad
mov
testb
cmp
jge
imul
jge
push
or
inc
pushf
imul
std
mov
pop
sbb
dec
adc
dec
fisubrs
sbb
adc
or
fdivl
incl
loopne
add
push
push
push
notl
dec
movsb
out
inc
ret
cs
or
and
add
xchg
xor
pop
push
mov
jmp
mov
push
jle
mov
push
xor
outsl
div
pop
cmpsl
mov
dec
mull
mov
adc
rorl
dec
sbb
inc
mov
and
pusha
in
jle
pop
shr
int
pop
mov
jle
push
and
in
sub
dec
idivl
jmp
jle
cmpb
and
pop
movb
pop
xor
clc
inc
test
stc
add
fistpl
inc
cmp
jne
popa
dec
shlb
or
dec
leave
push
push
or
ret
jmp
xor
mov
mov
dec
push
push
push
pushf
or
adc
jge
or
fcomi
push
push
pusha
ljmp
adc
cmpsl
and
lock
mov
jbe
popl
jg
sbb
add
ret
mov
cmp
lret
or
lahf
push
shlb
inc
adc
int
outsb
fcompl
mov
mov
lods
es
js
shrb
icebp
xchg
int3
push
cmp
jae
sbb
xchg
outsb
mov
dec
mov
mov
mov
push
and
dec
push
jmp
sub
add
das
add
mov
ret
sbb
mov
decl
adc
add
cs
sbb
fistps
inc
add
fistpll
dec
movb
mov
or
or
jns
je
loope
neg
inc
fisttpl
jmp
xor
mov
frstor
add
push
sub
fdivs
es
movsl
jmp
or
mov
inc
cmpsb
xor
out
mov
lahf
or
and
push
push
xor
xchg
push
out
jns
dec
add
pop
fs
sgdtl
shll
add
xor
lds
orl
jne
fldz
jmp
mov
xchg
jecxz
mov
sarb
inc
out
inc
sub
sbb
add
sti
aaa
pop
jns
fchs
and
adcl
rcrl
je
ds
mov
add
fnstsw
not
and
lahf
mov
mov
test
sbb
in
cmp
inc
cmp
enter
cmp
push
xchg
add
pusha
jno
daa
pusha
test
das
dec
add
add
test
and
add
cwtl
je
dec
add
inc
inc
iret
rcrb
addr16
xchg
add
pop
jae
jg
daa
movl
jae
push
nop
or
and
sti
adc
out
iret
inc
insb
outsl
bound
insb
push
jb
or
inc
insl
je
imul
xor
push
aam
dec
out
fs
ret
sbb
sbb
scas
clc
lods
jno
lea
sub
xor
arpl
movsb
cmp
ss
aam
je
sti
mov
mov
push
pop
sub
arpl
mov
or
fldenv
icebp
adcb
pop
cmpl
movsb
pop
daa
sub
cwtl
sbb
add
mov
add
out
jnp
aas
inc
jne
or
xchg
aas
adc
pop
mov
movsb
jbe
inc
push
gs
imul
push
std
and
jb
mov
in
test
incb
cmp
jp
push
push
xchg
dec
in
mov
cld
andps
sbb
push
clc
cvtps2pd
sbb
dec
call
jns
out
and
push
fnsave
int
testl
out
sti
jg
sub
mov
dec
xchg
push
sub
or
aas
mov
add
lds
inc
mov
dec
push
mov
pop
xchg
cs
or
int3
sbb
inc
adc
outsb
pop
add
es
push
add
out
dec
adc
xlat
sbb
cmp
mov
adc
inc
or
mov
test
movsb
test
mov
adc
lods
sub
scas
dec
pusha
sub
fucomp
pop
adc
cli
sub
xchg
das
in
mov
pusha
enter
cmp
subb
iret
mov
inc
mov
scas
bound
fsts
or
insl
in
call
aam
leave
leave
in
in
out
out
enter
scas
rcl
ror
dec
push
jns
scas
fs
scas
loopne
lods
pop
fs
scas
enter
push
loope
scas
bound
pop
sahf
and
xor
xor
pop
xchg
imul
cmp
add
enter
jnp
add
inc
push
sbb
pop
bound
add
adc
mov
xchg
mov
and
mov
adc
adc
notl
sbb
add
jbe
add
faddl
add
fdiv
mov
and
xchg
or
dec
outsl
imul
add
jecxz
ss
add
add
pop
pop
push
pop
or
dec
jne
test
repnz
sbb
lods
fists
stc
sbb
lock
jg
adc
lahf
mov
push
or
sbb
dec
into
dec
pop
push
inc
or
xor
and
pop
jns
mov
sub
jo
movsb
dec
adc
lea
js
cmpsb
in
in
cmp
xlat
or
jno
out
add
mov
xor
ss
add
sub
stos
divl
cmpsl
mov
and
or
nop
les
jmp
pop
mov
mov
mov
add
xchg
xlat
loope
dec
sbb
jmp
inc
test
insb
mov
arpl
inc
mov
inc
sub
mov
ret
mov
nop
sbb
mov
ja
dec
sub
lahf
push
cmp
addb
out
push
enter
mov
jnp
inc
push
cmpsl
shll
push
xor
jae
in
inc
dec
leave
inc
in
mov
mov
mov
pop
dec
add
sbb
fcmovnb
iret
subl
pop
subb
push
inc
loope
lcall
xor
nop
std
add
ljmp
inc
aaa
xchg
push
pop
sub
xchg
aaa
jno
nop
xchg
sbb
mov
js
dec
jmp
mov
and
or
out
dec
orb
movl
in
sub
sub
inc
push
jbe
repz
xor
add
cmp
sbb
data16
adc
mov
xor
int3
inc
pushf
sahf
sahf
or
adc
xchg
roll
add
sub
or
xor
arpl
cli
jnp
jbe
loopne
lock
mov
add
dec
loopne
cltd
xorb
lcall
insb
xor
lds
lds
add
cli
or
fwait
adc
pop
mov
pop
jnp
std
sbb
adc
das
sbb
test
out
xor
jo
cmp
push
xor
and
sub
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
sub
outsl
dec
repnz
dec
shlb
in
sub
xlat
jno
dec
jne
sbb
rcrb
ret
in
xor
dec
lock
inc
mov
xchg
lret
pop
shll
adc
add
icebp
lret
cmpb
lret
or
xchg
mov
popa
push
mov
or
stos
inc
sbb
or
sbb
aas
pop
mov
mov
sbb
out
xor
adc
aaa
mov
nop
aam
orb
movsb
and
push
inc
or
stos
cmp
or
jmp
mov
clc
or
inc
loopne
out
repz
pushf
insb
pop
or
pop
mov
cmpsb
hlt
lods
pusha
pcmpeqb
popf
les
sbb
hlt
lock
xor
test
mov
repz
repz
add
inc
mov
fisubrs
or
xorb
negb
fs
and
enter
xchg
nop
lcall
dec
ja
cmpb
repz
adc
out
out
je
or
je
or
popa
mov
add
test
rorl
jle
les
add
dec
push
insb
fbstp
je
jmp
mov
in
popa
xlat
mov
std
xchg
fwait
ss
mov
inc
mov
xor
xor
dec
inc
in
jl
sub
inc
sub
mov
and
enter
inc
sbb
xchg
ja
sbb
adc
pop
adc
dec
adc
cwtl
inc
inc
mov
jo
mov
ja
fwait
sub
xchg
pop
mov
pop
inc
mov
enter
aam
movsb
and
pop
movsl
fsubrp
mov
adc
ret
and
js
or
ss
xor
pop
fcoms
and
je
lcall
test
mov
xchg
add
push
movsb
enter
sbb
add
lret
cs
adc
add
nop
and
xor
dec
gs
sub
xchg
add
je
enter
jnp
add
arpl
xor
add
iret
es
and
dec
insb
or
mov
add
xchg
iret
dec
xor
xchg
inc
sahf
xchg
scas
fldcw
or
dec
fs
lret
add
pop
aaa
das
fwait
add
outsl
add
push
cwtl
push
jge
sbb
sub
or
jne
push
and
test
mov
fcomp
jge
jge
dec
outsl
fs
mov
leave
insb
gs
aas
push
xchg
xchg
mov
movsb
addr16
adc
loope
or
aaa
jb
pop
sub
in
pop
das
or
je
jae
das
adc
je
in
aaa
lea
pop
inc
outsl
bound
and
and
push
pop
dec
rcrb
sarb
lock
and
xor
outsl
sbb
push
sbb
or
and
ss
xor
pop
push
mov
jmp
push
push
push
or
xor
push
insb
arpl
aaa
sub
imul
inc
sub
mov
or
push
adc
outsb
push
mov
sub
push
inc
les
addb
fildl
mov
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
pop
add
add
data16
jno
adc
in
xor
push
mov
dec
pop
xor
xor
jp
popa
imul
push
push
pop
aaa
sbb
or
das
push
dec
and
lret
iret
pop
or
pop
mov
inc
mov
test
push
xor
add
cld
jae
cmp
mov
sti
dec
sbb
jle
inc
mov
popa
pushw
xor
aaa
or
sbb
dec
inc
decb
cmpsl
inc
sub
jo
popa
cmp
sub
insb
xlat
push
adc
insb
push
imul
jo
cld
addr16
pop
jp
sub
inc
adc
in
jg
inc
pop
dec
dec
inc
inc
dec
dec
inc
push
jg
aas
xor
or
sbb
adc
cmp
nop
pop
dec
push
mov
or
notl
cmp
pop
fists
adc
push
in
pusha
push
test
mov
jne
popa
push
mov
mov
gs
inc
inc
and
inc
xchg
sbb
cmp
sub
ret
push
mov
adc
push
aam
or
xor
inc
pop
pop
push
push
iret
fnstenv
test
aas
call
mov
or
enter
pop
and
push
xor
orps
inc
inc
xor
insl
ja
jbe
xchg
jl
dec
xor
pop
or
cmpsl
push
sbb
push
mov
pop
push
cs
je
sbb
lret
insb
pop
pop
add
sub
dec
shll
sbb
es
and
stos
pop
pop
lods
inc
cmp
pop
or
mov
rcrl
push
test
in
lret
xor
adc
rcrl
pop
pop
push
push
dec
jne
cmp
push
pusha
enter
ds
imul
cli
insb
je
imul
inc
mov
outsl
outsl
jne
cwtl
stos
push
movsb
cmp
pusha
mov
jne
and
pop
pop
mov
cmp
and
pop
pop
popa
add
add
mov
movl
clc
loopne
in
xchg
inc
mov
push
inc
push
stc
addr16
and
inc
cld
fwait
orl
xor
ljmp
pop
iret
xor
popf
aas
or
in
jp
xor
push
inc
rcrl
xor
sub
jne
push
xor
pop
ja
push
jo
cmpb
push
and
mov
push
push
add
jmp
outsl
mov
xchg
jne
cwtl
lea
dec
push
ss
and
push
insb
rorl
mov
or
movsb
add
jbe
movsl
adc
sub
sbb
cmp
pop
pop
and
cmp
fidivrl
mov
cmp
and
insl
aas
xor
xor
xor
aaa
cmp
and
lcall
cmp
in
popf
cmp
xor
outsl
test
cmp
xor
xor
aas
push
dec
xor
aas
cmp
fisttpll
aas
xor
inc
mov
mov
aas
cmp
jg
dec
lcall
cmp
mov
aas
sti
adc
aas
cmp
sub
inc
xor
cmp
rorl
xor
les
inc
aas
ss
aas
comiss
xor
cltd
push
mov
ds
sub
ss
push
push
aas
mov
aaa
pushl
rorl
mov
scas
nop
push
lods
xor
ja
mov
xor
add
mov
inc
xor
rol
xor
cmp
or
aas
jle
add
xor
mov
ja
or
jle
cmp
arpl
das
nop
mov
cmp
xor
xor
cmp
or
aaa
das
cmp
enter
xor
or
xor
cs
adc
aaa
cmp
xor
jl
pushf
inc
cmp
xor
orl
or
in
pop
sbb
das
cmp
xchg
in
cmp
xor
adc
dec
xor
cmp
xor
add
add
jg
outsl
mov
adc
enter
dec
add
add
xor
xor
push
enter
xor
xor
xor
cmp
shll
adc
shrl
and
aaa
mov
mov
or
and
fsubrs
cmp
ss
pop
mov
xor
xor
add
das
xor
jb
stc
add
xor
or
dec
add
addr16
fsts
dec
xor
inc
mov
adc
add
and
out
mov
add
sbb
mov
push
jmp
adc
imul
push
inc
lret
mov
inc
cmp
rolb
sbb
mov
jae
mov
adc
rclb
hlt
je
gs
mov
add
sbb
jno
add
adc
daa
lahf
dec
lret
add
enter
dec
mov
int3
ss
les
adc
pop
cmpsb
into
add
push
mov
xchg
lock
jb
test
pop
sub
fcom
jo
lea
dec
xchg
arpl
pop
nop
data16
incb
jmp
testl
adc
sub
add
pusha
push
mov
pop
leave
sarb
push
sbb
movsb
add
outsb
popa
mov
nop
pop
mov
je
sarb
lret
xchg
cmp
enter
and
sbb
inc
icebp
aad
adc
or
cmp
or
mov
xor
mov
les
dec
js
sbb
leave
aaa
and
mov
xor
sarb
jne
insl
fnstenv
dec
movsl
ret
sub
clc
aad
mov
push
out
clc
add
ficoml
fmuls
dec
iret
jp
inc
shrl
and
or
in
or
and
das
sbb
push
test
push
les
mov
mov
mov
nop
mov
push
pusha
nop
mov
les
add
push
lods
cmp
mov
lods
ss
fcom
sub
loopne
mov
cwtl
in
jb
inc
or
dec
loope
sbb
inc
add
in
loop
fsub
scas
jge
push
sbb
es
jecxz
les
and
xor
gs
jl
sbb
inc
or
inc
fs
push
nop
in
mov
sbb
inc
pop
jb
in
in
add
call
repnz
popa
and
dec
out
roll
imul
clc
fcomi
xchg
jnp
nop
repnz
sbb
ja
jno
add
jb
push
pop
dec
movups
ret
test
adc
call
pop
adc
aad
in
cltd
in
in
pop
loopne
xor
add
mov
gs
pop
fdivrl
nop
mov
call
pop
jp
xchg
pushf
int3
mov
fstp
mov
sub
push
add
dec
aam
aam
shr
or
mov
bound
push
in
les
enter
cmp
mov
cmp
daa
push
movsl
mov
je
stc
ds
popf
jl
xchg
push
nop
xchg
add
daa
jne
lret
pop
jmp
mov
mov
mov
xor
lods
test
mov
push
movsb
imul
jne
xchg
idivb
lcall
in
pushf
pushf
test
repz
leave
jae
pop
cwtl
out
pop
mov
xchg
nop
nop
sbb
mov
movsl
cmc
jo
sbb
mov
xor
lods
sbb
mov
bound
test
movsb
cltd
aaa
adc
pushl
push
mov
out
subb
icebp
xchg
pop
nop
sahf
mov
adcb
pop
rcrb
subl
fcomi
pop
neg
shl
pop
shl
push
or
pop
rclb
xchg
pop
enter
or
loop
pop
mov
ljmp
cmc
test
add
sub
push
ljmp
lds
jno
je
xor
push
jnp
pusha
dec
outsb
jns
push
mov
sbb
mov
dec
dec
push
fs
adc
fs
push
jmp
mov
add
orl
push
jmp
xchg
insb
ljmp
ljmp
xchg
xor
sub
frstor
jne
sbb
sbb
in
sbb
and
and
pop
xchg
rcrb
mov
fsts
xchg
fcomps
dec
ja
ffreep
sbb
aaa
bound
ret
dec
fstpl
dec
addl
dec
push
xchg
hlt
add
inc
cs
inc
xchg
and
mov
xchg
cwtl
pop
add
xor
sbb
aaa
ss
pusha
dec
dec
or
pop
pop
inc
push
push
cmpsb
dec
push
pop
sub
pop
push
xchg
dec
ret
shrl
fnsave
adc
inc
outsl
orl
adc
mov
inc
addr16
dec
mov
out
jno
popa
aas
popa
je
mov
jle
jo
pop
outsb
outsl
mov
pop
and
adc
push
push
add
mov
sbb
mov
and
pop
aas
aaa
mov
jmp
xor
bound
test
mov
inc
xor
sub
inc
cmp
xor
inc
jge
fs
cmp
push
test
add
addr16
push
test
in
pop
mov
lea
pop
fisttps
aam
pop
push
or
dec
push
test
push
dec
inc
pop
jnp
mov
dec
cwtl
adc
jge
mov
xchg
jne
jo
push
sub
xor
repnz
jbe
sub
add
xor
cmp
dec
cmp
in
arpl
gs
pop
mov
dec
and
dec
or
xchg
dec
push
inc
xor
xor
push
es
add
xor
and
repnz
or
cmp
xchg
add
dec
aaa
inc
inc
and
xlat
xor
sub
fldt
adc
popa
pusha
rorl
aam
outsl
add
add
adc
pop
jmp
or
gs
xor
movsb
sbb
and
loopne
add
les
call
xchg
adc
shlb
sub
dec
sub
xor
mov
mov
adc
or
adc
hlt
rcl
mov
dec
xorl
adc
aaa
mov
dec
and
fcoml
mov
rcl
inc
outsb
and
nop
mov
arpl
xor
sub
pop
pop
pop
inc
sbb
mov
xchg
mov
std
psubw
xor
inc
dec
pop
dec
inc
dec
mov
push
jo
xchg
out
xchg
lea
xor
icebp
pop
sbb
and
mov
push
adc
cmp
add
out
stc
cli
pop
cld
sbb
jnp
data16
xor
xor
shrb
test
xor
sub
cmp
gs
pushl
pop
xor
xor
inc
inc
sub
in
cmp
cmp
inc
cmp
and
pop
ss
inc
inc
xor
outsb
cmp
cmp
inc
xor
inc
inc
sahf
jg
inc
cmp
xor
fs
arpl
je
cmp
data16
arpl
xchg
out
pop
add
pop
xor
xor
pop
lahf
cmpsb
test
pop
and
dec
xor
lods
lret
add
pop
inc
pusha
adc
addb
mov
sbbl
inc
push
lcall
adc
sbb
aas
or
push
imul
iret
push
inc
dec
push
push
pop
inc
add
outsl
adc
movb
dec
pop
xor
jno
pop
bound
cmp
je
in
sbb
daa
adc
addr16
adc
inc
je
das
jae
push
test
hlt
mov
les
xchg
insl
bound
and
out
mov
test
stos
cld
aaa
pop
push
jp
push
test
out
nopl
jecxz
dec
test
or
sbb
adc
bound
loop
hlt
fcompl
je
test
pop
add
dec
fisubrs
pop
outsb
int
insb
lock
mov
arpl
push
movsb
adc
movsb
dec
jle
cmp
in
xchg
push
nop
cmpl
add
scas
cmp
test
sub
fnsave
test
mov
lods
lret
xchg
into
mov
pop
testb
in
add
pusha
cld
adc
repnz
pop
test
imul
xchg
lret
mov
push
push
xchg
mov
push
test
cld
xchg
pop
push
ret
dec
add
cmp
jo
jae
adc
ss
cld
inc
mov
pop
cs
les
mov
jp
rorb
xchg
xchg
pop
pop
pop
sub
xor
sbb
mov
cmp
fadds
push
and
fcompl
xchg
cmp
std
and
xor
clc
cmp
push
enter
cld
adc
push
mov
xor
xor
pop
lock
dec
movsl
xor
xor
xchg
adc
push
adc
dec
aaa
sub
sub
in
mov
pop
insb
pop
sar
inc
or
outsb
inc
shll
data16
pop
outsl
es
mov
adc
sbb
mov
add
sbb
rclb
cmp
inc
mov
loop
movsb
and
mov
inc
cmp
lret
shlb
jg
iret
and
jb
jno
bound
imulb
iret
add
sub
cs
inc
inc
pop
call
sbb
hlt
mov
and
rol
sub
in
xor
ja
pop
add
sbb
scas
int3
sbb
imul
fs
loopne
push
cmpsb
in
inc
add
and
pop
jecxz
jmp
loopne
fwait
mov
sub
jle
outsb
jne
aam
pusha
aam
cmp
mov
and
add
adc
add
mov
in
add
and
push
pop
jb
aaa
cmp
repnz
cwtl
xor
mov
adcl
and
add
scas
ficoms
and
adc
mov
je
pushf
fmuls
scas
adc
aad
pushf
push
xor
in
je
test
pop
push
std
dec
mov
sub
dec
les
and
mov
in
pusha
imul
in
cmpsb
mov
pop
xor
push
mov
or
cs
add
xchg
sub
pop
shlb
rolb
inc
divl
std
mov
push
movsb
shrb
js
lods
std
xchg
push
fsubl
push
insb
sub
mov
leave
mov
and
pop
cwtl
pop
mov
xchg
pop
enter
movsb
pushf
pushf
test
nop
mov
nop
mov
cld
test
mov
in
idiv
movsb
outsl
addb
outsl
mov
mov
pop
push
sub
sbbl
add
add
cmpsb
in
cs
sbb
cmp
dec
sbb
fadd
adc
ret
pop
fiadds
push
ss
arpl
pop
or
arpl
pop
push
add
push
das
das
mov
mov
cs
das
pop
sbb
inc
nop
push
fucomip
fs
cmp
inc
add
inc
inc
inc
add
mov
les
stc
bswap
clc
mov
scas
mov
lea
bound
mov
push
cmp
pop
stos
shrb
out
and
jae
push
jbe
add
int3
aam
cmpsb
cs
cwtl
faddl
ja
push
push
insl
das
cmp
xor
addr16
push
loope
push
cmpsl
mov
shlb
adc
shrl
xor
cmp
push
repz
scas
pop
decb
dec
dec
inc
add
das
pop
xchg
jne
jle
loope
arpl
jns
inc
sbb
scas
out
or
ficoml
dec
mov
das
adc
push
adc
push
mov
or
jae
push
sub
fdivs
inc
ds
inc
push
cmp
xchg
jp
cmc
stos
xchg
pop
or
push
loopne
sbb
dec
cmc
popf
push
dec
repnz
cmc
cmp
inc
and
test
cmp
fildl
jmp
push
jle
jmp
add
add
mov
xchg
sbb
enter
mov
in
jmp
dec
inc
inc
push
popf
in
adc
cmp
mov
inc
inc
repnz
test
jl
jbe
cmp
jg
mov
imul
and
mov
mov
dec
xor
inc
sarb
rorb
jo
fwait
xor
sub
and
leave
gs
and
sub
and
sbb
and
push
sbb
fs
add
dec
scas
adc
or
and
adc
inc
sub
or
sbb
movsb
jb
add
or
add
and
xchg
lret
pushf
add
in
and
hlt
cmp
test
and
lock
hlt
push
hlt
mov
add
cmpsb
pusha
sub
xor
adc
neg
mov
aam
sar
insb
shlb
test
mov
test
in
call
dec
daa
adc
in
insb
movsb
jne
int
sbbb
sbb
sahf
pop
scas
fsub
push
mov
pop
aas
pop
sarb
call
aam
xchg
xchg
enter
inc
enter
ljmp
inc
mov
adc
mov
test
mov
jmp
mov
enter
dec
mov
mov
cmp
mov
inc
mov
hlt
call
outsb
and
les
sbb
hlt
xchg
push
loop
push
mov
push
out
fidivrs
sub
in
mov
add
test
je
movsl
leave
repz
cli
je
test
and
cmpsl
stc
dec
in
outsl
sarb
or
adc
movsb
or
and
int3
in
cmp
clc
std
cld
std
adc
and
xor
mov
aam
sbb
shrl
adc
in
mov
pop
daa
gs
sti
push
outsl
cmpsl
and
out
adc
xor
cs
cmc
fsubrp
inc
dec
push
push
aas
xchg
inc
fimuls
dec
dec
dec
mov
popf
push
xchg
out
lret
xor
sarb
push
push
dec
inc
and
push
dec
scas
adc
jbe
mov
ror
aaa
dec
inc
dec
sti
mov
dec
dec
dec
scas
int3
fcmovbe
mov
push
aas
inc
dec
push
xchg
dec
xor
inc
inc
dec
pop
lahf
or
inc
lock
inc
push
nop
inc
push
pop
inc
dec
es
adc
lcall
cmc
push
pop
add
adc
lcall
pop
mov
pop
pushl
and
in
add
out
pop
sub
stos
xchg
sbb
pop
mov
cli
push
dec
out
sahf
sbb
push
idivb
inc
rcrl
add
inc
sub
cmp
orb
push
add
or
rolb
mov
lods
out
jg
lods
jl
imul
aaa
add
dec
mov
dec
sarl
pop
pusha
or
fdivrl
rolb
cmp
or
aam
add
aam
rolb
repnz
in
add
mov
test
push
jge
jo
mov
or
inc
add
jg
and
inc
cmp
sub
sub
sub
sub
xlat
push
es
aaa
xor
push
xor
and
add
adc
add
and
push
cltd
lock
xchg
adc
and
faddl
mov
cmp
add
lahf
lret
xchg
add
sub
add
mov
add
mov
and
add
shl
roll
or
inc
inc
jns
or
mov
ret
fcomps
roll
mov
iret
aaa
mov
push
dec
push
jle
pop
cmp
movsb
mov
ret
mov
hlt
stos
mov
push
inc
imul
sahf
and
or
js
es
cmp
and
mov
dec
dec
mov
daa
jecxz
pop
xor
mov
add
lods
ss
pop
jae
adc
pop
pop
add
push
daa
insb
clc
enter
pop
or
xchg
inc
jae
sbb
int3
movsb
jb
daa
int3
int
cmp
xchg
and
nop
sub
cmpsb
in
les
and
or
rorb
mov
mov
xchg
or
test
mov
adc
enter
mov
cmpxchg
and
adc
enter
stc
stos
and
movsb
or
nop
ud1
or
fstpl
out
xlat
xor
mov
inc
jmp
arpl
addr16
aam
push
insl
outsb
outsl
jo
hlt
jne
ja
jns
rclb
mov
orb
and
push
dec
jns
inc
dec
push
daa
dec
inc
insl
dec
add
and
adc
adc
cmpsb
test
dec
jmp
dec
xor
shl
or
rorb
cld
movsb
xchg
adc
aaa
and
jl
inc
mov
add
push
cld
dec
aaa
fcmovnbe
jne
xchg
std
mov
nop
mov
and
movl
sbb
shlb
mov
rcrb
cmp
push
pop
lock
or
cmp
pop
or
jle
and
insb
jb
and
adc
bound
push
sbb
and
mov
shr
lods
imul
fcmovnu
js
jbe
sub
and
push
lret
xchg
add
jle
inc
idivl
inc
xor
lea
inc
shlb
adc
adc
sbb
mov
jl
inc
adc
dec
popa
and
cs
xor
mov
sti
std
xor
push
dec
inc
push
push
push
push
inc
push
push
xor
mov
or
add
fisttps
jne
call
lock
xchg
addr16
inc
jg
push
leave
mov
cmp
sub
push
jmp
shl
and
shl
mov
adc
mov
into
test
pop
push
inc
aam
movsl
out
mov
fstl
jae
pop
scas
lods
dec
std
aas
scas
mov
push
adc
push
sbb
pop
mov
push
and
adc
insl
scas
insl
dec
or
sub
adc
movl
xchg
insb
add
add
pop
shrl
stos
mov
jmp
xor
xchg
adcb
xor
add
imulb
lds
or
xlat
sbb
adc
xor
sub
cmp
jns
add
shl
or
jno
in
cmpb
adc
mov
cmpsb
scas
movsl
ljmp
mov
ss
cld
or
add
xchg
es
xor
mov
inc
testb
sbbb
scas
and
pop
into
mov
sbb
xor
or
pop
icebp
mov
dec
rcrb
mov
sbb
dec
inc
and
pop
adc
pop
and
dec
xchg
cmpsl
aad
lea
push
jne
imul
and
aaa
leave
test
push
adc
inc
mov
sub
xor
insb
dec
mov
outsb
fnstsw
xchg
clc
and
push
adc
lods
sub
nop
pop
push
and
cmpsb
ret
xlat
xor
sbb
xchg
xchg
or
push
daa
fistpll
adc
and
data16
pop
adc
and
inc
push
call
lods
add
xor
insl
fwait
nop
hlt
sub
and
push
dec
dec
fsubl
aam
pushf
push
test
mov
addb
add
cmp
push
idivl
iret
sarl
adc
mov
pop
lock
pusha
pop
add
daa
add
imul
and
jp
xor
stos
jmp
push
shlb
shlb
punpckhwd
je
into
sbb
sbb
fmull
pop
xchg
jmp
in
test
push
add
or
js
rclb
mov
or
addr16
adc
sub
pop
or
mov
insl
shlb
cmp
sbb
mov
scas
dec
mov
jo
fsubr
popf
in
mov
mov
sub
add
fistps
das
inc
add
push
outsl
mov
and
xchg
add
scas
xlat
or
mov
xchg
shlb
inc
rorb
push
sbb
mov
xchg
dec
push
mov
sub
inc
nop
xchg
inc
pop
repz
mov
add
dec
push
or
inc
pop
cmp
pop
push
ret
push
daa
sti
sbb
xchg
pop
xchg
daa
adc
sub
in
outsl
add
inc
or
jae
mov
xor
inc
sub
push
daa
mov
inc
jmp
mov
neg
xor
sbb
or
add
div
add
jae
sbb
loopne
mov
push
test
add
call
or
add
or
add
xor
stc
xchg
out
inc
add
and
inc
loopne
std
pop
fmuls
pop
inc
inc
daa
and
rclb
dec
push
and
mov
push
rol
inc
sbb
adc
push
fstpt
enter
pop
xor
xchg
cmpl
add
push
jns
lock
call
rorl
inc
sbbb
jge
jno
mov
mov
inc
add
push
rcl
sbb
adc
pop
dec
in
xorb
mov
lods
add
lahf
dec
hlt
fisttpl
mov
dec
jae
scas
xor
outsb
rcl
aam
mov
paddq
cmovno
push
and
mov
mov
sbb
ret
ja
cmp
rclb
ja
enter
xor
enter
jb
pop
nop
les
fs
in
xchg
dec
xor
pusha
rol
movsb
popf
nop
lret
rorb
mov
mov
nop
mov
jg
mov
mov
add
add
push
mov
adc
sarl
in
sbb
mov
and
mov
xchg
xor
mov
cmp
pop
sbb
addl
sbb
popf
fstpl
movsb
mov
push
filds
and
pusha
inc
lods
outsb
mov
jmp
push
mov
cmp
cwtl
push
add
cwtl
stc
adc
jno
lea
imulb
outsl
pinsrw
ret
in
fmuls
test
popa
lods
mov
das
mov
add
xchg
sub
or
mov
das
add
cmp
inc
mov
dec
mov
jne
gs
mov
adcb
add
mov
jb
sahf
je
jb
cmp
jmp
jae
out
xchg
or
inc
pop
or
daa
insb
pusha
pop
push
or
andb
pop
add
pop
pusha
push
mov
push
call
push
inc
or
in
jb
in
inc
or
add
cmp
or
and
xchg
push
inc
xor
cmp
mov
and
and
or
xchg
adc
adc
xchg
jp
push
or
add
clc
into
pop
and
mov
lock
popl
add
mov
mov
lock
popf
sub
in
push
xchg
xlat
xchg
mov
pop
clc
lcall
nop
imul
pop
push
dec
loopne
mov
or
xor
push
les
dec
aas
divb
sbb
pop
sbb
mov
nop
mov
mov
push
adcb
inc
enter
lret
push
lock
sub
or
and
and
fmuls
or
pop
xor
sub
jl
xor
enter
and
add
push
add
movsl
std
roll
sbb
lock
or
and
je
mov
mov
shlb
gs
xchg
loope
adc
sub
je
es
jge
shld
scas
jmp
je
jo
dec
cli
cs
xor
ja
daa
jbe
dec
push
outsl
das
cs
imul
add
ret
out
xor
sbb
add
push
mov
xchg
ds
jb
jb
xor
dec
pop
or
pushf
ficompl
adc
jp
addr16
divl
adc
rcrb
adcl
xor
mov
fistps
data16
push
rclb
or
out
enter
push
cmp
cmp
sahf
out
add
dec
add
xor
cmpsl
pop
imul
inc
daa
imul
and
loope
push
stc
gs
jo
ja
bound
mov
insb
or
das
or
mov
mov
outsb
xchg
fiaddl
cli
dec
push
dec
dec
dec
cmp
addb
cmp
mov
cmpl
push
iret
sbb
imul
dec
push
dec
pushf
lahf
cmp
or
and
cmp
xor
dec
push
add
sub
add
sub
sahf
lods
das
sub
scas
lock
fdivr
xor
fdivr
sbb
arpl
xor
push
movsb
or
and
xor
imul
add
and
sbb
movsb
shll
add
cs
and
lret
add
push
add
int3
mov
clc
xor
jne
mov
test
mov
jo
xchg
fwait
std
add
inc
pop
push
pop
xchg
les
add
leave
adc
inc
xor
and
ret
push
lods
roll
mov
dec
aaa
leave
adc
pop
and
xor
push
xchg
pushf
lret
insb
sub
mov
pop
fwait
jmp
addr16
data16
mov
mov
and
in
and
add
gs
and
dec
inc
xor
loope
xchg
push
cmpsb
adc
fstps
ret
adc
xor
subb
dec
sbb
insl
jae
cmp
cmpsl
push
imul
es
pop
or
mov
addr16
scas
pop
pop
xchg
mov
and
mov
inc
dec
push
push
and
dec
pop
push
dec
das
mov
push
adc
ja
loopne
adc
addl
js
mov
adc
and
or
outsl
arpl
add
testl
push
stc
push
xor
loopne
push
mov
push
aas
lcall
or
test
inc
out
mov
iret
add
sub
inc
jle
push
xorb
out
addr16
add
imul
xor
outsl
hlt
sbb
inc
cmp
or
mov
ds
les
cmp
repz
sbb
mov
jnp
fldcw
mov
inc
add
adc
jl
adc
es
fnstsw
out
xor
fidivrs
out
dec
inc
adc
fcomip
xor
jg
cld
sbb
int3
aam
movsb
fcomp
jnp
ja
test
sbb
push
loopne
inc
inc
push
lods
aaa
lahf
idivl
in
in
inc
adc
xchg
sahf
negl
push
movsb
lods
fimuls
mov
sbb
push
mov
lahf
sarb
adc
in
into
jle
int
mov
push
insb
sbb
cmpsl
stc
fdivp
je
ss
jl
add
iret
aas
int
sub
xchg
inc
add
test
aas
jae
jge
mov
mov
inc
push
or
inc
imul
ljmp
mov
mov
cld
push
adc
adc
pop
mov
lods
push
jl
jns
out
arpl
cwtl
mov
shlb
test
xor
test
jb
lods
xor
imul
jl
mov
push
cwtl
mov
in
clc
adc
inc
push
les
xchg
add
push
lock
cld
je
rclb
fildll
sub
or
inc
cmpsl
pop
cwtl
imulb
rolb
xor
pop
cmp
andb
xor
adc
neg
int
pop
add
and
mov
xor
cmc
lcall
leave
xlat
iret
enter
fcomp
fxch
push
loopne
jecxz
sub
pop
mov
inc
mov
and
and
jno
ja
popa
je
xor
mov
lahf
cmpsl
outsb
or
xor
imul
pushf
addb
or
notl
pop
ja
push
push
mov
adcb
aaa
ss
push
jecxz
sub
or
push
lock
xchg
test
inc
loopne
push
mov
add
clc
sub
scas
push
xor
inc
cmp
repz
push
pop
fs
repz
repz
test
pushf
movsb
lods
mov
les
repz
aam
in
jns
iret
repz
cld
add
or
out
sahf
out
and
xor
out
add
inc
dec
xchg
add
pushf
pushf
fmull
add
fs
inc
cmpsb
sbb
push
inc
sahf
je
lock
jge
push
jle
xchg
daa
and
leave
enter
test
in
cmp
pop
jns
hlt
test
rcrl
and
sahf
mov
add
or
mov
fiaddl
pop
add
adc
mov
cmp
inc
inc
shll
add
jg
ret
inc
or
outsl
aad
or
cmp
das
jno
pop
or
adc
xor
rcll
push
dec
push
push
je
cmp
repz
test
int3
fdivrl
out
in
add
and
out
sahf
out
push
pop
jo
or
movsb
lmsw
add
iret
mov
adc
pusha
imul
repnz
xor
jmp
and
sbb
rclb
js
dec
push
push
outsb
jae
mov
imul
xor
ja
push
js
adc
mov
addb
addb
pop
or
imul
jnp
jecxz
call
adc
jmp
neg
jae
and
pop
add
incl
pop
repnz
jns
push
insb
xor
cmpsb
lret
xchg
jnp
aas
lods
sti
push
test
mov
int3
push
iret
repz
add
or
add
out
jns
cvttps2pi
inc
adc
cmp
repz
adc
out
jns
int
and
xor
out
push
adc
or
cmp
repz
xor
inc
iret
repz
add
jl
pushf
cmp
repz
mov
les
cmp
iret
repz
call
jo
fistps
adc
std
push
adc
cmp
push
add
out
js
nop
pop
iret
repz
out
push
add
cmp
cmp
repz
subb
repz
repz
iret
int3
mov
push
mov
sahf
out
sbb
jns
out
pusha
fidivrs
push
xlat
jns
nop
ljmp
adc
cmp
sub
xor
outsl
cmp
or
loope
divl
or
push
fldcw
pop
ret
add
jle
jmp
roll
or
mov
ret
or
pop
cmp
ds
push
or
pop
and
fcomps
call
jecxz
repz
repz
mov
int3
fsubr
out
jns
iret
cld
or
sbb
addr16
mov
and
xor
inc
dec
sbb
add
xchg
ja
pop
mov
xor
cmp
adc
mov
mov
xor
fmull
divl
jb
cmp
orl
jb
jb
unpcklps
adc
push
ret
and
jb
or
jb
jb
adc
pop
add
shrb
scas
shll
daa
daa
mov
movhps
jno
push
pusha
jbe
push
xorb
out
js
mov
mov
pusha
push
test
mov
adc
cmp
push
adc
mov
ret
push
sbb
repz
shrl
xor
push
insb
iret
repz
jl
pushf
test
enter
cmp
call
sbb
repz
sub
dec
pop
jo
jp
jecxz
pushf
and
add
sbb
notl
add
rol
icebp
scas
imul
sbb
jo
add
mov
aam
incl
add
or
nop
arpl
mov
xor
inc
cmp
repz
push
stc
push
repz
nop
mulb
mov
lcall
add
lock
out
sbb
sub
inc
out
sahf
out
push
in
fs
cmp
je
mov
xchg
add
popa
sbb
dec
and
movsl
sbb
add
cld
adc
std
outsl
and
pop
outsb
ds
or
or
add
popa
imul
cmpsl
lods
pop
ja
in
out
ror
adc
nop
mov
cmpsb
leave
adc
add
mov
jno
addr16
or
rcl
push
imull
add
mov
add
pop
or
imul
sub
add
adc
addr16
add
dec
mov
and
outsb
mov
addr16
pop
add
mov
jg
stc
out
sahf
out
mov
jns
cld
std
incb
add
sahf
out
test
jno
out
add
insb
mov
cs
les
ds
scas
xchg
push
push
add
adc
stc
or
add
adc
and
xor
mov
add
insb
push
imul
push
sub
jl
sti
cld
add
out
incb
cwtl
outsb
aas
add
fwait
incl
push
stc
push
mov
xor
adc
mov
mov
xchg
dec
mov
pop
dec
test
fs
inc
xchg
add
out
ficoms
call
sahf
les
fs
stc
mov
jp
push
enter
xchg
xchg
inc
out
in
scas
cld
push
out
sahf
out
test
sahf
out
sahf
pusha
je
nop
mov
jns
fsubr
clc
or
sbb
cmp
fs
repz
je
pushf
mov
int3
repz
repz
lock
outsb
push
sub
cmp
cmp
pusha
js
scas
push
and
out
sub
cmp
sarl
push
pop
pusha
and
pop
mov
pushf
rolb
cs
dec
repz
xrelease
out
adc
cmpsb
push
pusha
subb
in
or
sub
jl
jge
out
int3
lock
outsb
push
dec
jns
out
sbbb
clc
and
cmp
jo
repz
test
sahf
out
lcall
ja
out
mov
mov
sahf
out
lahf
pop
jl
ds
jns
out
leave
leave
leave
leave
leave
out
sahf
out
leave
leave
lret
out
sahf
lret
lret
jns
out
lret
lret
lret
lret
lret
out
sahf
out
lret
lret
int3
int3
sahf
out
sahf
int3
int3
int3
int3
int3
int3
out
fidivrs
push
pop
jl
dec
repz
mov
and
cmp
repz
insb
test
int3
in
adc
sub
jns
out
pop
je
movsb
jns
jns
mov
out
push
xor
jns
out
fs
lods
sahf
out
faddp
sar
rcl
rcl
sarl
out
rcl
rcl
rcr
jns
out
rcl
rolb
inc
ljmp
cmp
xchg
ss
je
pop
push
into
jbe
ss
cmc
xor
cmp
daa
enter
clc
cmp
out
pop
insb
jmp
lahf
sub
test
push
lahf
loope
xchg
pop
xor
repz
or
pusha
inc
push
pop
shlb
cmpsl
dec
cmp
lahf
adc
out
out
imul
jle
inc
scas
add
cmp
rcl
es
xchg
fmull
lock
ds
enter
sbb
pushf
outsb
clc
inc
lock
subb
jbe
and
jmp
out
sbb
mov
fadd
dec
push
insb
dec
and
fs
pusha
or
mulb
pushf
fcompl
cmpsb
in
mov
sbb
jbe
loop
jnp
data16
mov
enter
pushf
es
jge
pusha
es
ficoms
ja
xlat
pop
push
aam
pop
pop
es
or
jge
ljmp
int3
xor
jle
fidivrs
testl
es
cld
mov
adc
ficoms
pop
adc
sbb
shlb
jle
xlat
mov
add
cld
cs
or
mov
je
cmc
cmp
pop
jecxz
cmp
fildll
outsb
fs
push
push
jl
jns
xlat
cmp
adc
int3
cs
filds
inc
mov
in
add
fdivrs
push
ds
inc
add
data16
and
or
outsl
inc
data16
mov
aas
inc
cmpsb
cmpsb
inc
loopne
sbb
push
andb
in
fsubp
negl
hlt
mov
div
push
sub
loop
icebp
mov
mov
or
mov
cmpsb
loopne
test
dec
jnp
outsl
movsb
out
insb
les
xchg
ja
andb
xor
xchg
cmp
in
ss
mov
xor
pop
mov
fidivrs
jae
ficomps
hlt
xchg
lock
adc
dec
push
pop
pop
data16
int
push
hlt
mov
xor
cmp
testl
mov
in
adc
push
cwtl
dec
mov
add
ficoms
or
pop
push
hlt
jle
add
loopne
xchg
cmpsl
and
mov
push
call
cmp
and
clc
into
aam
or
neg
jnp
and
mov
pop
mov
loopne
push
cld
ja
mov
cmp
push
push
cmp
add
cmp
rol
ja
iret
sysret
in
shl
push
in
dec
cmp
les
push
hlt
push
and
add
mov
sbb
jle
cwtl
pop
andl
aaa
dec
push
pop
cmpsl
stos
divl
push
ja
loopne
outsb
mov
inc
sbb
xlat
das
pop
xchg
xchg
dec
negl
mov
xchg
fs
jns
mov
sbb
xor
jl
xor
pop
cmp
ds
inc
jg
add
imul
add
push
inc
add
sub
lahf
seto
adc
jecxz
lods
mov
and
nop
inc
adc
and
add
mov
add
pop
inc
add
dec
push
str
fsubr
jg
inc
add
dec
add
cs
add
sub
or
and
pop
add
mov
addb
push
dec
aaa
add
pop
dec
add
pop
inc
sbb
and
jge
xlat
adc
push
pop
dec
aaa
push
fnsave
mov
fwait
inc
add
xchg
idivl
xchg
push
loop
sarl
or
pop
pop
jmp
loopne
mov
inc
pop
jae
sub
mov
or
pop
push
or
push
ja
push
push
lret
imulb
and
pop
outsl
pusha
pop
pop
push
fstpt
xorl
inc
or
jnp
mov
inc
repz
cs
es
arpl
cs
and
inc
push
cs
mov
repz
sti
or
inc
sbb
inc
jp
jnp
jnp
dec
dec
push
rsqrtps
lret
ja
push
out
inc
aas
or
rdmsr
cmpl
pop
push
add
inc
aas
or
imul
xor
dec
pop
pop
movsl
push
mov
mov
loope
add
mov
push
cwtl
pusha
push
pop
mov
int
mov
nop
movsb
adcb
and
and
mov
jne
xchg
add
dec
out
jb
outsb
and
les
xor
ret
add
ss
hlt
xchg
sbb
sub
rcrb
aas
add
sbb
xchg
ds
mov
fcomps
xor
sub
addr16
imul
jge
add
cmp
addr16
scas
cmp
or
outsb
and
imul
fiadds
inc
inc
rclb
repnz
inc
and
pusha
inc
inc
push
inc
dec
add
aaa
mov
mov
dec
inc
mov
push
pop
lock
dec
push
test
imul
test
mov
and
lahf
movsb
xchg
cmp
enter
lock
push
gs
outsl
arpl
add
cmpsb
dec
jae
dec
push
dec
insb
mov
daa
dec
and
aam
add
mov
xchg
jae
repnz
sub
daa
cmp
inc
sahf
mov
movsb
insl
cwtl
sub
subb
test
cmpb
adc
push
add
les
cmp
jecxz
dec
cmp
push
jnp
add
enter
flds
sahf
or
and
dec
lret
fwait
into
push
inc
daa
shlb
xchg
adc
nop
or
and
jge
jecxz
xchg
sub
clc
int3
sub
sub
mov
push
test
xor
cs
and
cmp
inc
outsl
insl
ltr
bound
sub
push
push
push
cmpsb
push
movsb
addb
stc
shlb
or
mov
mov
adc
rcrl
push
or
jb
cmpb
cwtl
dec
stos
adc
aaa
popa
xor
and
inc
ja
mov
inc
prefetcht1
cmp
cmp
or
sub
cld
sar
pushf
pushf
pushf
pushf
hlt
lock
call
in
dec
inc
sahf
pushf
aam
sarl
and
dec
xor
rcl
int3
daa
daa
daa
daa
enter
and
mov
inc
scas
xchg
dec
cmp
inc
test
jmp
in
xchg
xor
inc
xor
inc
dec
or
decl
or
push
xchg
clc
mov
mov
mov
and
jbe
sub
call
mov
push
mov
or
xor
and
scas
adc
lret
and
add
orb
jne
sarb
inc
or
add
dec
add
cmp
xchg
mov
iret
push
jae
jmp
call
mov
xchg
and
sbb
incl
cmp
call
or
cmc
std
push
and
xchg
movl
pushl
dec
stc
push
pushf
std
in
adc
adc
push
jle
pop
enter
in
fdivs
or
dec
cmc
dec
pop
ret
xchg
jmp
or
or
in
ja
or
aaa
call
pop
cmpb
std
decl
xchg
das
sbb
inc
mov
pop
ret
cwtl
movsl
jne
push
sbb
inc
mov
adc
std
sub
push
add
push
test
in
cmp
inc
push
cld
jl
repnz
cmp
inc
cmp
inc
sbb
dec
sbb
ja
mov
idiv
inc
repnz
stc
cmp
sbb
incl
std
call
cld
inc
std
push
sub
jmp
dec
scas
in
jge
pushl
movl
add
leave
ss
cld
pushl
ljmp
in
cli
lcall
or
repnz
cld
call
movsl
aaa
enter
mov
jnp
data16
cmpb
and
scas
mov
js
sub
push
movsb
testl
or
je
inc
pop
xlat
cmp
pop
les
les
or
cmp
sti
test
mul
ret
jmp
pop
nop
sbb
adc
or
mov
rcr
pop
adcl
push
call
iret
pushf
sbb
notl
and
add
add
sbb
stos
clc
mov
push
xchg
divl
add
jne
aas
or
sbb
push
add
std
testl
fisttpl
leave
lea
inc
xorl
repnz
shr
mov
icebp
sbb
adc
adc
mov
js
inc
sbb
inc
cmp
cld
sub
ret
inc
and
stos
mov
xchg
jmp
les
les
enter
les
ljmp
add
push
gs
xor
sbb
cmpsb
int3
arpl
and
outsb
xchg
and
sub
test
push
xchg
rclb
cmp
out
inc
sub
incl
xor
adc
scas
aam
mov
xor
scas
and
shr
add
arpl
scas
stos
jl
ljmp
sbb
cli
inc
das
adc
stc
jb
pop
lahf
insb
les
les
rcrb
les
xchg
and
dec
cld
push
and
call
pop
cmc
add
test
jmp
lods
add
adc
incl
or
jo
and
lret
insb
les
clc
inc
cs
xorps
dec
popa
xlat
rcrl
es
push
mov
cmp
jb
xor
sbbb
insb
xchg
pusha
addb
xchg
jl
cmpl
lcall
decl
fdivrl
jo
inc
jo
inc
dec
jle
repnz
ret
inc
add
inc
ss
incl
ret
int3
xchg
dec
dec
jb
lcall
psubw
sub
sub
call
jg
add
notb
sbb
ss
mov
pop
xchg
pop
repnz
lret
add
xchg
sysexit
je
inc
xchg
repz
jmp
cmp
mov
nop
sbb
sub
ja
or
lcall
ret
inc
popa
mov
bound
cmp
insb
jp
jmp
sbb
push
and
mov
mov
popa
mov
adc
and
icebp
es
or
sbb
lret
nop
ljmp
notl
xlat
iret
scas
push
xchg
xchg
add
ret
bound
cs
mov
cmc
sub
clc
or
or
xlat
xchg
les
or
xchg
sahf
lret
mov
jo
inc
adc
cmpl
pop
lods
fucomip
push
xchg
jo
jmp
mov
les
les
mov
pop
add
cmp
cmp
pop
or
and
push
or
and
pop
jns,pt
jo
inc
jo
inc
sbb
jmp
jno
adc
mov
add
add
idiv
cmp
rcrb
ja,pt
lret
testl
jo
inc
insb
les
adc
jmp
daa
add
xor
les
sbb
jp
xor
adc
jl
stc
test
decl
nop
dec
and
decl
adc
dec
add
repnz
hlt
xchg
adc
rorl
push
and
clc
aaa
lret
fildll
sub
pop
mov
outsl
adc
inc
iret
scas
lds
jge
enter
pop
and
std
dec
add
add
bound
dec
pop
lods
push
int3
sub
loopne
push
das
or
stc
mov
ja
adc
cs
loope
aaa
addr16
xor
mov
sub
add
inc
sbb
mov
or
rcr
incl
pop
call
dec
mov
or
push
jl
imul
fs
pop
test
repnz
bswap
jle
in
mov
in
or
add
test
jb
leave
adc
sbb
int
push
jo
xor
cmc
ljmp
imul
add
or
shlb
int
cld
out
imul
mov
push
addb
cmp
push
lock
push
mov
outsl
dec
add
mov
enter
das
push
subb
inc
or
je
and
xchg
dec
pop
ljmp
dec
adc
cmp
dec
pop
ret
hlt
out
mov
loope
stos
ret
jmp
adc
sbbb
test
xchg
add
or
cmp
sub
je
in
ret
push
push
or
call
loop
rcrb
call
pop
aas
mov
xor
lock
or
add
mov
loope
scas
xor
shlb
mov
push
add
out
cmpsb
test
inc
dec
roll
out
xlat
or
ret
adc
cmpsl
mov
daa
push
xchg
dec
mov
loope
jnp
fbld
mov
in
pop
in
test
jne
pop
jnp
hlt
lock
mov
ret
mov
or
lahf
sbb
adc
movsb
call
lahf
fstps
loope
adc
cltd
and
and
cmp
sti
adc
sahf
xchg
adc
push
add
push
add
push
repz
fisttps
push
xrelease
outsb
jnp
xor
sub
fmuls
in
fiadds
inc
pop
lds
add
add
es
loope
insb
int
ret
xchg
pop
mov
ljmp
inc
pop
jg
cli
in
push
dec
out
push
inc
cwtl
dec
aaa
push
and
aam
movsl
sub
ss
es
xchg
cmpsb
test
pop
add
mov
rol
nop
daa
inc
xchg
inc
enter
jnp
cwtl
or
push
cmpsl
xor
and
dec
mov
xor
push
aas
rolb
pop
out
loopne
or
cmp
in
push
push
push
ret
lods
mov
cmp
xlat
cmp
pop
pop
das
call
sub
sub
and
ret
pushf
fcmovnbe
xchg
adc
adc
jbe
jnp
sub
push
call
jnp
jns
add
add
clc
push
xchg
sub
pop
jecxz
push
outsb
call
ret
pop
pop
shr
xor
daa
or
push
call
cld
ds
cmpsb
test
jne
add
add
mov
lahf
in
jg
call
mov
enter
icebp
push
test
jmp
pusha
clc
xlat
adc
sbb
xchg
call
lock
jl
pop
push
in
movsl
sub
xchg
add
add
jl
xchg
test
mov
jmp
add
push
xor
enter
movl
movd
call
in
push
sub
adc
push
mov
js
test
decl
dec
mov
dec
push
jns
jmp
fldt
call
adc
inc
rorl
dec
fnstenv
leave
loope
mov
pusha
cs
jecxz
or
xchg
in
push
cmp
popa
add
fidivrs
in
inc
inc
fldcw
and
cmpsl
sub
scas
stos
dec
or
out
push
push
jmp
in
cmp
add
sub
jg
into
pop
cli
call
pmulhuw
pop
add
add
stc
jnp
jbe
push
enter
jmp
dec
push
inc
adc
inc
push
fstps
pushl
mov
call
js
adc
cmpsl
sub
lods
mov
pop
movsb
into
or
inc
sbb
cmp
repz
mov
or
dec
cmpl
push
xchg
lcall
dec
js
arpl
mov
imul
xor
out
inc
push
js
out
dec
xchg
into
movsl
adc
sbb
sarb
pop
xchg
dec
ret
push
jge
cmp
push
mov
push
gs
dec
outsb
pusha
or
shlb
iret
ret
push
mov
xchg
jo
mov
scas
add
rol
push
cmp
out
xor
lods
jmp
cmp
push
iret
sbb
dec
lea
hlt
test
outsl
xchg
sub
dec
add
repz
or
movb
jle
and
add
cwtl
hlt
das
cmp
xchg
adc
mov
jle
push
lock
push
fs
mov
sbb
mov
shll
scas
int3
call
and
push
mov
call
mov
pop
ret
jmp
jo
cwtl
inc
call
or
mov
pop
fdivrp
stc
and
inc
into
add
add
incl
jb
pop
mov
add
pushf
decb
lcall
jmp
stc
and
sbb
repz
incl
jo
cmp
or
push
sub
ret
xchg
add
fcoms
or
inc
cld
dec
jne
call
dec
or
stc
mov
ret
cmp
std
ss
jns
lea
or
and
xor
mov
and
test
push
or
push
into
sub
pop
cld
std
decl
scas
aaa
and
and
mov
ja
add
add
push
stc
add
icebp
pushl
jl
out
leave
daa
nop
je
lock
pushl
stc
call
lcall
push
dec
cld
sub
loope
or
jl
push
inc
and
mov
sub
xor
aaa
mov
pop
cmp
sbb
or
sub
or
push
je
xchg
xchg
adc
and
loop
jbe
add
dec
push
call
incl
jnp
add
add
jmp
aad
movsb
test
clc
push
cs
xchg
fs
dec
xchg
dec
mov
mov
inc
rcl
outsb
xchg
out
addl
insl
or
mov
into
jge
xor
dec
dec
out
push
push
pop
call
daa
loope
xchg
pop
sub
sub
cwtl
and
fstpt
neg
out
or
loopne
int
std
sahf
aas
movsl
mov
push
push
repnz
pushf
jmp
mov
popa
lock
subb
iret
sti
scas
loopne
dec
fsubrs
sub
adc
and
dec
sub
pop
mov
push
mov
jg
rcll
adc
out
push
das
call
dec
push
test
cs
push
aaa
push
adc
jg
xchg
out
pushf
xor
movl
dec
std
dec
xchg
push
add
sbb
add
or
push
clc
mov
sub
xchg
sbb
call
adc
ss
addb
inc
dec
pop
or
fisubrl
pop
ds
jg
stos
or
cmp
jae
scas
or
ss
sub
pop
cmp
test
sub
or
mov
mov
rcll
movsb
dec
dec
fnsave
sbb
sub
dec
pushf
data16
dec
push
lea
bound
and
and
sub
inc
clc
mov
dec
sbb
or
sbb
dec
arpl
push
imul
inc
cmp
jnp
xor
lahf
rorb
and
sbb
adc
sub
mov
adc
pop
xchg
mov
rolb
int
xor
call
mov
out
inc
pop
pop
sti
or
stos
ljmp
mov
cwtl
and
cs
cwtl
mov
adc
inc
xchg
fisttpll
fwait
xor
inc
pop
push
cld
div
imul
insb
mov
inc
movsl
or
pop
push
mov
xchg
inc
xor
sbbb
leave
std
add
movsl
xchg
or
cmpsb
enter
or
inc
rol
or
in
adc
inc
sbb
jg
divl
imull
sbb
outsl
mov
sti
or
movsl
adc
inc
and
and
iret
sub
sbb
dec
scas
mov
pop
and
or
insb
mov
or
fists
mov
fcmovbe
fistl
call
push
sub
jle
xor
ss
push
pop
int3
imul
push
cmp
iret
jmp
add
xlat
addb
jne
mov
add
sti
sbbb
add
cmp
push
dec
cli
cmp
cmp
cmp
rcl
jmp
push
xchg
aam
xchg
stc
add
sti
pop
cmp
leave
xor
jle
sub
ljmp
call
and
dec
pop
cltd
rclb
out
lock
je
je
adc
inc
pop
jmp
jo
push
or
mov
push
idivb
daa
addr16
pop
jne
insb
push
pop
mov
imul
fidivl
aad
adc
int3
and
lock
ficompl
shr
ds
pop
jno
popa
and
jns
mov
hlt
adc
sbb
cmp
je
in
sbb
and
dec
mov
mov
sbb
adc
clc
dec
in
cli
pop
dec
jne
mov
or
cli
rcll
lock
iret
push
ret
push
pop
idivl
push
cmpsb
add
dec
and
movsb
add
jecxz
dec
dec
cwtl
std
out
push
ljmp
sbb
push
fdivs
push
lock
cwtl
daa
loopne
and
int3
xor
or
les
cwtl
rcll
or
sarb
sbb
and
inc
in
jle
jbe
cmp
test
dec
sbb
std
pop
or
xor
mov
lock
mov
insl
xor
xorb
xor
adc
adc
pop
imul
mov
call
xor
iret
push
cmpsb
cmp
cld
xor
faddl
mov
xrelease
les
out
rorl
push
neg
mov
cmp
or
sub
or
aad
add
jbe
imul
and
stos
and
add
or
call
loope
jbe
push
sbb
sub
sbb
data16
xchg
mov
icebp
mov
mov
mov
mov
test
js
jne
outsl
jle
mov
cmp
jg
sub
push
push
fsts
into
leave
mov
xor
push
das
cmp
push
fucomip
in
mov
je
mov
mov
aas
call
mov
lea
add
loope
jp
cwtl
pop
repnz
push
mov
or
insb
push
pusha
sbb
jmp
push
cltd
mov
sub
jle
mov
imull
loope
dec
mov
pop
cmp
inc
loope
sbb
test
push
mov
or
mov
add
or
andb
inc
jns
adc
outsb
lods
pop
pop
jmp
out
push
lea
subl
and
add
xchg
lock
cli
addl
xor
out
mov
sub
call
sbb
jmp
dec
je
insb
cmpsb
mov
jns
mov
pop
in
sub
push
inc
and
shrb
xor
or
inc
and
xchg
sub
xchg
lret
loopne
enter
stc
ret
fldt
out
xchg
jl
mov
add
test
inc
adc
lock
in
aam
xor
or
scas
call
adc
inc
es
sbb
movb
xor
fdivl
fcomi
in
mov
adc
add
pop
push
loopne
inc
mov
clc
sbb
lods
clc
repz
out
adc
fldl
fs
jecxz
and
leave
in
fs
dec
rorb
add
fs
add
sar
hlt
in
in
lock
call
in
aam
in
in
int3
enter
in
sarb
mov
test
in
in
mov
in
in
mov
in
jl
je
in
in
insb
push
in
cmp
cmp
jb
jb
xor
and
jb
jb
sbb
adc
xchg
jb
push
dec
inc
call
es
mov
test
pop
xor
xchg
and
add
pop
mov
fistps
add
inc
sub
ja
xor
sub
mov
lcall
int
sbb
adc
push
fs
pop
jg
dec
and
push
popa
mov
sub
inc
inc
xchg
sub
xchg
mov
test
mov
inc
bound
xchg
das
pop
and
inc
leave
adc
jg
mov
lods
in
inc
or
bound
jg
mov
dec
ret
adc
and
dec
or
xor
andl
bound
mov
and
test
adc
xchg
filds
sub
and
sub
inc
xchg
mov
lods
rclb
fs
enter
pop
xchg
dec
jne
adc
popa
test
jg
les
aaa
and
enter
inc
popa
adc
mov
dec
or
loopne
mov
push
mov
in
and
call
es
sub
pushl
adcl
out
call
aaa
cmc
ret
dec
mov
push
testb
xchg
test
cmpsl
dec
or
stc
int
js
sarb
adcl
inc
push
call
dec
push
addb
mov
xor
push
adc
jle
mov
mov
adc
sub
mov
lcall
std
and
add
mov
dec
jbe
nop
and
pop
rcll
not
pop
mov
sbb
rcr
lods
mov
dec
inc
push
cmp
xchg
mov
rorb
loope
and
lock
dec
and
les
xor
dec
rcll
lea
mov
sub
ret
pop
sbb
scas
push
push
and
add
sbb
into
sbb
or
add
and
ds
push
and
and
frstor
popf
or
sahf
adc
call
pop
lock
sbb
fisubrl
rcrl
ret
out
mov
add
call
addr16
test
nop
xchg
out
sbb
add
add
out
in
add
lret
lret
hlt
or
jle
hlt
call
loopne
inc
adc
and
cmp
jb
cmp
ja
imul
sub
imul
decl
or
push
out
rcrb
and
cli
and
lea
jns
pop
test
lds
dec
fdivr
cmp
into
arpl
sbb
sarl
dec
lret
mov
sub
call
rol
in
inc
je
or
push
pop
jne
push
xchg
test
fwait
es
das
stc
pop
add
add
div
dec
and
je
insl
pop
les
icebp
scas
in
jb
inc
dec
adc
mov
add
mov
push
or
into
jne
xlat
jp
pop
xor
hlt
dec
rclb
push
mov
push
dec
sbb
dec
fucom
movsb
sbb
in
pushl
in
push
js
dec
ret
mov
or
into
in
dec
in
cwtl
les
mov
call
mov
inc
or
and
pop
shlb
and
sar
call
add
add
add
and
sbb
mov
std
mov
mov
out
jbe
xchg
and
inc
test
and
cwtl
sbb
mov
mov
inc
and
inc
je
jmp
test
xchg
int
incl
xchg
pop
add
ljmp
or
stc
mov
call
adc
movb
ret
cmp
mov
insb
sbb
cmovo
pop
sub
cmp
sbb
pop
dec
sbb
call
jle
rcr
adc
pushf
lods
sbb
jmp
nop
jo
call
cmpsb
inc
sahf
loope
lds
mov
cmpsl
fbld
nop
mov
orb
xor
mov
push
mov
and
sub
orb
cmp
mov
and
pop
fisubrl
fucomi
arpl
xchg
push
arpl
push
jge
and
test
mov
mov
adc
inc
push
cmp
and
repz
out
in
imul
iret
jge
leave
adc
mov
xchg
sub
std
and
cs
fs
xchg
sbb
dec
mov
sbb
pop
dec
push
inc
dec
lea
pushf
jmp
sbb
inc
and
ja
xor
xor
inc
sub
cld
movsb
sbb
sub
lods
jo
pusha
push
jb
and
out
dec
xchg
push
pop
test
shrl
jmp
sbb
sub
jb
je
clc
mov
aas
push
or
jo
das
rolb
sbb
mov
or
test
lock
and
in
jno
sti
xor
stos
rcr
add
or
sbb
test
test
call
inc
inc
jle
lcall
dec
xor
cmpsl
pop
std
add
xor
sub
add
push
pushl
in
into
lods
push
push
and
mov
push
popf
mov
inc
fdivrs
sub
mov
xchg
and
int
mov
repnz
scas
mov
cmc
incl
inc
ret
pusha
dec
cld
out
jp
push
push
push
lea
sbb
xlat
sar
sbb
or
mov
xor
push
pop
and
nop
push
xor
push
popf
cs
sbb
xchg
cwtl
int3
pop
cltd
std
add
dec
mov
sbb
lods
lea
xchg
jl
outsl
xor
int3
hlt
in
fwait
je
inc
insb
mov
jb
lock
dec
clc
fcoms
iret
xor
add
pop
fstpt
ret
loopne
jl
test
xchg
bound
test
sbb
daa
mov
repz
mov
push
les
and
cmpsl
mov
sbb
fists
sar
jmp
and
and
adc
adc
mov
fcom
push
add
and
pop
xchg
clc
aas
cmpsl
dec
cmp
call
lahf
fld
aad
inc
xchg
xchg
jg
call
jns
and
pop
adcl
nop
jo
or
push
repnz
lcall
pop
repnz
mulps
clc
add
out
imul
jmp
sbb
ja
cld
fiadds
xor
addr16
or
adc
shll
std
cmp
pop
mov
pop
adc
out
lock
mov
sbb
add
jmp
rcrb
js
dec
push
push
sbb
xchg
dec
mov
push
jb
jmp
lea
test
mov
or
sahf
mov
xor
loopne
fsubrp
xchg
rcrb
xchg
xchg
call
mov
adc
ret
add
jae
pusha
nop
outsb
sbb
xchg
stos
roll
mov
add
and
jmp
jns
push
cli
fdivrl
cmpsb
or
jnp
dec
dec
pop
call
repz
dec
add
test
cld
loop
pop
xor
add
xchg
sub
and
ret
shl
jb
lods
inc
mov
xchg
neg
jp
in
fimuls
data16
aad
pop
rolb
shrb
out
cmp
cmp
mov
pop
xor
xchg
test
cmp
rcrb
test
pop
push
mov
pop
adc
dec
sub
call
jae
push
xor
sbb
xchg
jno
and
adc
pop
push
dec
adc
in
sbb
push
sub
jge
call
in
add
in
lea
mov
jne
test
and
call
cmp
jns
mov
push
shlb
lods
or
pop
xchg
dec
out
dec
aas
xchg
int
jmp
xor
sbb
leave
jg
sub
pop
loop
mov
pop
dec
sbb
mov
loop
unpckhps
loope
push
or
inc
shll
xor
rorb
sub
orl
pop
dec
adc
fcoml
cmp
add
lret
dec
stos
or
or
jg
sbb
mov
mov
xor
divl
mulb
int
or
fdivl
pop
in
repnz
scas
scas
sbb
sub
mov
mov
inc
call
cmp
dec
je
dec
jne
mov
ljmp
std
movl
jl
dec
sti
jo
xor
or
xchg
sbb
jg
unpcklps
fnstenv
mov
add
lea
xchg
and
or
orb
xchg
mov
xor
and
inc
xchg
push
sub
jbe
cmc
aas
adc
or
mov
dec
shr
jmp
jo
mov
or
psubsb
dec
call
xchg
inc
adc
hlt
call
add
cmc
dec
rorb
out
mov
dec
shrb
add
cmp
dec
sub
jne
adc
jle
jno
xor
pop
xchg
dec
scas
shlb
xor
push
nop
test
mov
shr
cmp
push
decb
out
cmc
sar
ja
clc
jne
jecxz
lods
cmp
je
cmp
je
sub
sahf
imul
adc
out
loop
mov
push
add
inc
sbb
jmp
jle
cmp
je
xor
jmp
mov
stos
es
cmpsb
mov
cmp
jl
mov
add
ljmp
mov
sahf
and
cmp
je
idiv
mov
cmp
je
cmp
je
xchg
je
mov
jmp
sbb
shrb
mov
jmp
lock
rorl
fstps
mov
scas
adc
out
test
fisubrl
lods
mov
in
imul
pop
ror
loopne
scas
pop
jbe
ret
jge
pop
xchg
pop
es
scas
cmpsl
dec
adc
sarb
jg
push
dec
inc
add
add
jb
loope
adc
pop
ret
add
jne
fwait
iret
repz
daa
and
out
push
sbb
ret
repz
and
dec
inc
int
mov
int
sub
hlt
push
shlb
mov
cmp
cld
or
or
xor
mov
mov
in
sbb
sub
lock
pop
jmp
inc
ret
and
sbb
jl
and
dec
shll
cld
fdivs
jmp
jmp
xchg
ds
in
adc
inc
push
inc
cmp
dec
and
jle
mov
dec
cwtl
cli
and
jmp
xlat
jmp
stos
sahf
push
jne
jae
inc
subl
push
mov
sbb
jge
out
leave
test
movsl
sbb
cmpsl
pop
lcall
add
or
push
adc
add
rorb
mov
add
inc
xor
inc
bnd
call
fildl
sbb
in
lret
cld
cld
xor
pop
or
lahf
adc
add
sub
pop
mov
mov
lcall
or
je
sahf
inc
xor
xor
stc
lahf
lock
fildll
mov
sub
int3
fidivl
test
or
fs
or
les
xchg
test
leave
out
mov
mov
sub
xor
xor
push
lock
adcl
and
add
add
add
xor
cmpsl
dec
mov
lods
test
rolb
adcl
or
cmp
ret
add
sbb
lret
xor
daa
int3
and
in
dec
ds
sub
xor
xor
pop
inc
nop
sub
fiaddl
xor
xor
shlb
sti
ljmp
mov
lcall
movsl
lock
xchg
fs
dec
mov
inc
out
les
push
push
or
pop
jne
push
ljmp
pusha
dec
push
dec
aad
add
mov
add
adcl
rclb
or
push
iret
adc
insb
dec
sbb
add
add
pusha
int
jo
aas
jp
pusha
pop
or
js
mov
lcall
jp
jo
mov
xchg
mov
adc
mov
or
push
idivb
dec
int3
mov
xchg
das
das
xor
jo
inc
dec
sar
jl
lret
pop
out
jl
inc
flds
shr
cmpl
dec
fidivrs
xor
pop
jns
data16
call
jo
fwait
aaa
mov
xchg
push
fdiv
insb
mov
xchg
add
call
xchg
rolb
inc
mov
ret
in
in
adc
mov
sub
inc
pop
sahf
lcall
inc
cmp
jge
inc
sbb
clc
es
adc
test
add
cmp
ds
jmp
ret
lret
out
jl
jmp
adc
dec
jo
mov
loope
aas
nop
cmp
xchg
xchg
mov
cmpb
mov
sbb
and
mov
call
inc
jp
dec
sub
scas
rolb
clc
mov
add
paddd
jecxz
lret
loopne
pop
add
jmp
xor
pop
cld
insb
or
push
inc
jmp
mov
pop
push
xchg
jle
sbb
movsl
mov
pop
and
mov
filds
sub
ljmp
push
fidivrl
jle
gs
mov
lret
lcall
ds
nop
inc
addr16
in
mov
adcl
test
xlat
data16
pusha
or
in
lds
sub
call
add
inc
clc
or
jns
sti
or
adc
adc
add
pop
aas
scas
dec
testb
cmpsl
mov
or
push
and
cmpsl
ja
hlt
adc
pushl
mov
leave
fsubrs
ja
and
jmp
xchg
lret
aad
pusha
xchg
inc
movsl
mov
pop
adc
pop
and
ret
fmull
pop
jns
shr
lret
rcr
lea
mov
enter
mov
mov
je
adc
mov
iret
ret
out
icebp
xchg
mov
inc
push
add
ds
mov
lret
push
push
lret
divb
aaa
sub
lcall
push
fildl
fimuls
push
sbb
cli
and
inc
sub
icebp
fs
fisttps
dec
pop
push
add
mov
incl
inc
mov
cmp
mov
repnz
and
xchg
ret
or
jne
jne
mov
xlat
repnz
sub
enter
mov
rcrl
lods
push
or
stos
leave
push
icebp
inc
imul
adcb
data16
jecxz
push
cmc
outsl
outsl
push
test
jmp
jae
inc
xor
mov
mov
dec
rcr
rcrb
call
orb
repnz
imul
std
je
jmp
sbb
das
and
push
imul
ret
or
addr16
mov
cmovne
push
add
pop
mov
mov
push
insb
mov
call
fcmove
testl
and
loopne
add
loop
and
cmp
cmpb
stos
gs
cmpsl
sbb
jae
cmpl
xlat
out
and
add
ret
repz
sbb
shrb
fimuls
ret
repz
ss
es
xchg
push
and
cld
repnz
xchg
addl
dec
mov
cld
int
mov
push
lret
inc
add
or
out
cli
push
xorb
jno
daa
cmp
rcl
adc
jnp
dec
push
rclb
pop
add
sbb
mov
push
push
dec
cs
adc
daa
in
nop
movsl
sti
pop
call
ret
test
mov
mov
in
adc
pop
add
mov
lcall
or
mov
or
test
cmpsl
jge
gs
je
invd
lds
call
push
xchg
shr
or
push
mov
ja
out
andl
fidivrl
push
pusha
adc
lods
in
icebp
mov
lock
call
notb
push
fistps
movl
mov
in
or
push
lahf
lds
mov
out
ret
inc
icebp
test
es
inc
mov
sahf
mov
cmp
fistpll
popf
inc
jno
push
je
inc
dec
outsb
or
insb
icebp
dec
or
push
mov
test
pop
add
test
pop
scas
repnz
xchg
cmp
mov
add
int
test
data16
push
sub
leave
or
repnz
outsl
lock
xchg
cmp
les
scas
rorb
imull
mov
popf
daa
adc
cmp
lss
cmpsl
loop
jo
idiv
push
push
or
stos
aam
lods
or
je
lds
jmp
xor
adc
lock
fs
mov
cwtl
scas
js
inc
mov
cs
mov
lcall
test
cmpsl
sbb
outsb
mov
ds
rorl
and
test
pop
or
add
xor
sub
rcll
enter
call
or
add
push
dec
and
xor
inc
loopne
or
or
pop
mov
adc
mov
dec
adc
dec
add
push
and
sub
ja
ret
or
js
roll
notl
sub
fsubrl
jbe
and
faddl
ja
push
insb
mov
sbb
in
sbb
adc
lret
sbb
or
or
xchg
into
xchg
cmc
cmpsb
adc
mov
pushl
loopne
scas
pop
rcrb
aaa
dec
inc
adc
xchg
pop
cmp
cld
dec
dec
pop
aas
cld
add
sar
jmp
sahf
cld
xchg
cli
and
cmp
insl
shlb
fwait
dec
loop
dec
pop
sub
mov
dec
xlat
jb
jns
sub
jg
ss
cmp
add
out
dec
test
mov
mov
fistl
mov
mull
jns
or
sar
jne
idivl
push
add
mov
inc
popa
xlat
xor
ja
xchg
push
repnz
fisubrl
pop
jae
and
add
lcall
fisttpl
adc
push
or
xor
call
push
mov
dec
fs
mov
outsb
mov
mov
jmp
dec
das
dec
and
fs
mov
dec
inc
push
xor
icebp
adc
mov
out
inc
int3
or
es
fisubrs
incl
adc
push
mov
adc
xchg
add
nop
push
push
or
mov
cmp
mov
shrb
jl
mov
add
inc
outsb
outsl
mov
imul
add
out
cmp
pop
inc
pop
ret
mov
js
add
push
inc
jecxz
int3
scas
add
pop
iret
mov
mov
imul
mov
sbb
sbb
popf
sub
push
fsubp
inc
out
sbb
sbb
sbb
clc
xchg
cmpsl
or
mov
mov
xor
into
xor
data16
addb
add
das
and
clc
pop
pop
call
xchg
les
outsl
popa
pop
mov
xor
data16
and
sbb
pop
mov
jo
iret
or
in
pusha
adc
into
cmp
cmp
sub
iret
mov
xchg
add
in
inc
sub
outsl
repnz
dec
jle
std
xchg
out
pop
add
dec
lods
aas
jne
add
push
aaa
clc
cltd
in
push
push
rcrb
int3
sbb
jbe
in
cld
mov
enter
cmp
rclb
and
inc
sbb
jl
cmp
sbb
and
pop
inc
pop
mov
xor
push
movsl
insb
xchg
cmp
ja
in
or
mov
xor
adc
jo
pop
in
arpl
xlat
xchg
jl
leave
xchg
scas
je
sbb
xchg
adc
loopne
jp
push
add
imul
push
dec
adcl
add
jmp
call
in
jmp
adc
out
mov
inc
add
rorb
ss
fldcw
dec
sbb
sbb
jae
push
pop
mov
xchg
and
pop
xor
xor
rcrl
xor
add
mov
fld
into
cmpsb
mov
and
push
dec
inc
pop
xor
aam
adc
cmpsl
and
lcall
dec
pop
clc
rcrl
dec
cwtl
mov
std
pop
mov
cmp
push
mov
cmp
lcall
jne
mov
test
sbb
and
add
xor
sti
ja
das
bound
mov
push
mov
push
add
jecxz
or
adc
add
xlat
jne
sub
test
fidivrl
rorl
ja
je
add
shr
sub
jo
lock
adc
dec
jmp
inc
and
vmread
jne
mov
inc
cmpsl
mov
decl
scas
push
mov
inc
std
or
jmp
leave
emms
and
xchg
arpl
adc
mov
loope
add
es
mov
in
and
and
call
mov
and
clc
dec
iret
xchg
mov
push
call
adcl
daa
loopne
jo
mov
call
cmp
or
fistps
jnp
add
mov
push
sbb
inc
add
aaa
adc
pop
sarl
rcl
lret
inc
gs
out
mov
std
push
pop
lahf
scas
movb
sbb
pop
psubsw
call
inc
js
dec
inc
scas
inc
or
dec
mov
leave
sbbb
push
jnp
add
addb
cmp
fmul
mov
xlat
pusha
shl
rcl
clc
imul
or
adc
mov
fcom
mov
or
inc
mov
cmp
movsl
mov
dec
adc
sbb
inc
push
and
cmpsb
adc
mov
popa
jecxz
fistpll
lods
lock
insb
ljmp
jle
or
pop
jae
aaa
pusha
repz
fcomp
cmp
jbe
sahf
aad
stos
jne
adc
inc
push
sbb
fisubrs
repnz
adc
pop
sbb
jmp
sti
add
jl
shrl
sub
cmovae
mov
or
inc
loopne
add
jmp
adc
clc
mov
add
add
jl
jl
dec
inc
adc
mov
jge
jle
jg
cld
add
dec
inc
xor
imul
mov
cltd
ret
sarl
sbb
cmpsl
insb
jp
shr
mov
popf
cmp
sub
and
fwait
xchg
cmp
jne
je
sub
lret
or
fiadds
enter
mov
adc
jae
inc
jge
pop
add
ja
stos
push
cmpsl
pop
mov
sarl
or
add
das
adc
sub
xor
sbb
inc
pop
jp
pop
lods
push
pop
add
fsubl
pop
sub
clc
rclb
sahf
fdivrp
xor
add
and
ret
inc
push
movsl
rcrb
and
mov
mov
inc
fwait
aas
lretw
or
addr16
loopne
inc
add
jnp
adc
dec
shlb
call
outsb
add
xor
jbe
cmp
dec
mov
cmp
push
in
inc
jp
adc
mov
sub
nop
test
adc
aad
fs
inc
add
repz
push
pop
mov
sub
pusha
icebp
fsubrs
or
lahf
jbe
pusha
add
or
into
orb
in
sbb
jnp
and
icebp
pop
movsl
push
push
pop
sub
scas
out
push
addr16
jbe
add
jp
call
addl
add
or
pop
mov
sbb
adc
cmp
push
or
inc
cmp
mov
add
adc
dec
mov
lea
xchg
and
mov
test
mov
push
sbb
test
movsb
dec
jb
popa
or
jo
add
and
jg
pop
jmp
add
mov
xchg
jnp
test
pop
jbe
loopne
add
adc
add
in
xchg
pop
push
pop
or
adc
sbb
int
push
push
dec
div
fwait
stos
and
roll
loope
mov
or
inc
cmp
dec
or
in
das
popa
cs
addb
push
jo
je
shr
add
pop
sar
cmp
ja
sub
or
mov
xchg
ja
or
ds
mov
repnz
inc
rorb
insl
roll
insb
mov
aaa
movsb
movzwl
push
fcmovnbe
adc
or
ljmp
in
dec
insl
cld
or
lret
add
mov
mov
jmp
es
shl
or
lret
or
in
imul
dec
sub
jo
cli
insb
sub
repnz
nop
adc
shlb
iret
lret
jo
movsb
fcomps
and
mov
lods
aad
add
dec
add
and
jne
mov
clc
sbb
adc
ret
pop
and
jne
int3
enter
jge
test
add
xor
cltd
dec
loopne
push
je
jle
clc
inc
inc
jl
ja
mov
negb
xlat
call
sbb
or
and
or
pop
hlt
xchg
sub
sar
roll
ficompl
sbb
add
movb
xchg
jle
sub
popf
fdivrs
lds
xchg
int3
into
mov
jmp
adc
dec
cmp
imul
rclb
jo
mov
inc
xor
stos
inc
inc
jle
andl
pop
add
test
xchg
inc
inc
pop
sub
xor
imul
adc
add
jle
loope
sbb
jge
test
xor
decl
sbb
in
lcall
negl
sub
icebp
pop
test
mov
cmp
aaa
mov
mov
inc
and
movsl
das
cli
add
out
sub
sti
add
in
and
fs
xchg
pop
sbb
add
add
and
es
or
pop
xor
movsl
fnsave
ficompl
sub
add
and
pop
fmull
push
cmp
cmpb
and
stos
dec
cmp
pop
lcall
enter
out
les
or
jae
fisubl
and
mov
adc
test
mov
push
dec
adcb
fwait
push
xchg
xor
in
jge
add
mov
mov
mov
mov
push
decb
test
nop
sarb
lcall
fdivl
movsl
inc
rcll
cmp
jae
push
cwtl
data16
nop
mov
nop
sub
xor
int3
out
dec
jb
mov
mov
aam
repnz
orl
xor
shlb
or
bound
incl
daa
popa
cmp
call
add
nop
jmp
add
jmp
fcompl
jns
hlt
mov
adc
push
sub
xchg
test
mov
add
imulb
push
inc
rcrb
cmp
cwtl
mov
dec
mov
incl
call
cs
decl
ror
lock
mov
mov
adc
add
jmp
mov
dec
jmp
fisubs
imul
mov
sbb
sub
enter
orb
jae
push
test
xorl
shrl
inc
lock
lea
lock
or
aas
push
jae
mov
fsubl
mov
mov
cld
cli
rorb
jge
insb
push
sti
pop
jl
or
pusha
lcall
or
imull
or
mov
iret
mov
call
cmc
gs
ljmp
loope
mov
add
inc
les
or
mov
je
mov
jmp
fmull
stos
push
sub
das
push
push
jmp
in
mov
inc
xor
fwait
sub
add
xor
sti
xchg
add
cmp
push
mov
add
pusha
mov
adc
in
sub
jmp
shll
cmp
fldcw
rcrb
repz
adc
les
xor
jmp
mov
and
adc
cli
inc
push
data16
aas
enter
mov
or
xchg
ret
jge
shll
add
lock
push
cmp
lods
movsb
das
pop
js
jge
mov
xchg
imul
fadds
dec
pop
or
jns
shll
add
loop
and
pusha
add
push
mov
clc
mov
mov
mov
mov
pushf
mov
test
mov
sub
add
cmp
xchg
divl
push
mov
subb
pushf
add
call
fstps
rcrb
mov
xchg
cmpl
pop
cmp
js
lahf
add
test
add
inc
inc
popa
or
jbe
lds
adc
cmp
jbe
out
insb
out
jb
adc
or
add
in
fs
jne
push
xchg
jp
rcrb
push
adc
stc
jecxz
mov
lahf
jb
and
jb
fdivrp
repz
mov
mov
mov
dec
cmpsl
jnp
mov
and
inc
int
jl
insl
jb
sbb
cmp
inc
imul
pop
in
cmpsb
int3
dec
push
mov
mov
and
pop
adc
sbbb
inc
or
mov
movb
adc
xor
scas
lods
ret
sar
mov
mov
add
mov
push
fs
mov
adc
sahf
xor
sahf
inc
jg
popf
or
dec
sbb
inc
dec
fldl
lock
or
adc
adc
jne
xchg
mov
push
rolb
sar
xlat
adc
test
sbb
test
push
jle
mov
mov
pop
cmpsl
movb
mov
or
lock
xor
sarl
xchg
in
call
adc
in
call
or
xchg
nop
or
cmp
rorb
call
mov
jno
adc
jne
fisubs
faddl
test
inc
or
pushf
pushf
pushf
pushf
or
adc
pushf
pushf
pushf
sbb
and
test
call
inc
int3
cmc
mov
mov
push
cwtl
shll
cmp
mov
dec
shr
test
popa
push
rolb
fisubs
mov
jno
dec
ret
sbb
hlt
cmp
cmp
out
adc
inc
mov
call
and
mov
loopne
mov
sub
je
in
push
aas
jo
xchg
cmp
mov
xchg
mov
jo
subb
repnz
fsts
aad
mov
jb
lock
stc
jnp
add
add
add
cmpsl
add
mov
lcall
shlb
pop
adc
cmpsl
imul
scas
imul
mull
xor
dec
dec
aaa
pop
inc
mov
xor
faddl
mov
mov
mov
and
fists
push
sub
lret
js
das
or
mov
mov
jg
adc
dec
mov
icebp
enter
rorb
mov
rol
mov
mov
mov
push
pop
js
call
scas
enter
or
sbb
stos
xor
mov
les
dec
not
int3
stos
add
jb
or
cmp
inc
outsb
leave
push
mov
add
xor
sub
add
and
cmpl
cs
push
or
add
inc
mov
dec
imul
jb
das
push
inc
mov
insl
push
fsubl
test
loopne,pt
add
out
pop
dec
insb
adc
call
dec
ficomps
mov
xchg
iret
imul
or
mov
and
cmpb
xchg
jo
push
sbb
push
enter
ljmp
mov
cmpsb
rcll
and
mov
and
sahf
add
dec
push
fildl
dec
cmp
sub
movsl
fmul
ds
jmp
int3
rcrb
inc
sub
adc
sub
mov
mov
es
out
or
jmp
in
ss
das
fidivl
cmp
loope
loope
repnz
xchg
sahf
xor
cmp
xchg
inc
mov
adc
sbb
roll
push
cmpsl
jb
imul
fcoml
sub
lcall
dec
rcll
stos
cmpsl
pop
jg
mov
call
das
push
imul
adc
pop
inc
loop
push
push
xor
pop
sub
dec
xchg
xor
stos
popf
add
lods
jno
ret
or
mov
rclb
mov
je
in
decb
xchg
mov
cmp
pop
subl
nop
insb
jmp
mov
lea
mov
aad
xchg
xor
aam
call
shr
pop
mov
push
xchg
or
shrb
divl
fs
aas
rclb
mov
call
pop
sti
rol
and
loopne
xor
fmul
nop
add
mul
in
and
dec
stc
enter
add
fldcw
push
std
ret
jo
push
test
mov
aad
xchg
add
dec
repz
push
xchg
lahf
push
or
push
and
mov
add
pop
addr16
loop
mov
lret
xchg
call
imul
in
mov
inc
aas
cwtl
adcb
aaa
les
pop
outsb
call
mov
xchg
ret
adc
or
pop
inc
leave
lahf
mov
call
stc
mov
loopne
fdivrs
pushf
pusha
jle
mov
call
nop
push
insl
clc
in
hlt
inc
cmp
sub
jmp
lahf
addps
loopne
add
or
fiaddl
fwait
or
ja
das
or
dec
ror
call
ret
and
pop
push
push
call
lret
push
fldcw
xchg
add
je
aad
or
or
sahf
add
xchg
adc
lret
and
mov
call
cmp
js
push
sub
gs
push
dec
mov
je
mov
jo
dec
ret
pusha
jle
inc
jmp
and
inc
pushw
cmp
int3
ljmp
jle
or
xchg
cli
sbb
add
push
call
je
push
add
xor
mov
lcall
sbb
in
xchg
mov
stos
orb
mov
call
ja
in
call
clc
adcl
lock
cld
add
ret
or
shll
push
mov
cltd
push
jns
adc
setne
rorl
push
and
fldt
xchg
or
push
jae
xchg
pop
fmull
lds
popf
push
xchg
jnp
push
mov
mov
mov
push
and
nop
xchg
mov
jnp
xor
mov
xorl
daa
push
aad
out
jbe
jle
mov
inc
jae
push
xor
inc
jb
and
pop
push
arpl
adc
movsb
jbe
push
push
inc
test
dec
cmp
xor
or
pushf
in
xchg
jge
xlat
xchg
cltd
mov
push
clc
pop
or
push
dec
add
push
jg
sbb
push
sub
sbb
fmul
mov
jp
jmp
shl
add
mov
add
lods
push
sbb
mov
idivb
adc
cmp
xchg
fmull
pop
cmpsl
add
adc
pop
faddl
mov
or
je
mov
push
xor
leave
add
enter
or
adc
std
addr16
call
lods
adc
xor
add
nop
dec
jnp
lret
cmp
ljmp
sbb
jo
sub
sub
fisubrl
mov
lret
test
das
shrb
mov
cwtl
adc
sub
mov
or
hlt
cmpsb
jnp
adcb
adc
jp
mov
je
sub
cmpl
ds
dec
sub
or
mov
addb
add
push
ss
loopne
je
scas
inc
lret
ret
movb
lcall
or
cmp
insb
or
sbb
lods
shl
add
dec
sbb
imulb
adc
lea
sbb
push
xchg
add
jge
mov
jae
mov
sbb
pop
sub
pop
inc
inc
test
fldl
mov
fs
aas
cmp
call
call
mov
adc
loope
inc
cli
push
mov
xor
je
call
clc
popf
cmpsb
push
test
adc
dec
ds
cmpsl
xor
cwtl
pop
cwtl
aam
fst
pusha
or
add
and
ret
lods
lret
nop
mov
fdivrl
mov
in
test
cltd
sub
les
or
out
xchg
xchg
ja
push
je
sub
imul
divb
mov
jmp
cmpl
add
sbb
jne
mov
je
pminsw
pop
mov
sub
add
sub
push
push
fldl
xchg
lods
andl
jl
and
andb
xchg
pop
or
outsb
or
out
xchg
arpl
push
insb
ja
sbb
push
shll
cmp
adc
decl
cld
sub
inc
pop
push
push
mov
sub
ficoml
or
cld
clc
sub
and
rorb
mov
dec
cwtl
cmpsl
addb
inc
fsubr
cli
mov
hlt
js
ds
leave
cmp
sbb
out
hlt
pop
test
xchg
mov
in
mov
xchg
or
cmp
inc
inc
loop
mov
cmc
mov
xchg
or
adc
es
and
dec
jmp
mov
pop
fldenv
ljmp
lock
add
dec
adc
jns
in
scas
or
adc
cs
mov
or
int3
mov
pop
add
insb
cmp
jae
cmp
mov
dec
or
mov
cmp
out
fcom
mov
in
sbb
mov
dec
lods
pushf
and
mov
je
out
insb
mov
mov
ja
ljmp
push
mov
add
movsl
in
jo
out
jae
cmp
fmull
mov
push
jmp
call
das
xchg
push
mov
xor
sarb
mov
push
pop
popf
fldl
mov
inc
xor
out
pop
and
out
pushf
dec
cld
pop
orb
ljmp
add
cmpb
mov
test
mov
cmc
push
mov
mov
call
aaa
cs
xor
in
push
inc
inc
sarl
int
je
scas
mov
negb
jecxz
hlt
dec
hlt
addr16
jge
mov
imul
mov
enter
std
fcoml
pop
int
jne
mov
xchg
sub
sub
push
mov
sbb
adc
sub
sbb
add
inc
sub
roll
and
cld
inc
mov
int
lahf
push
ja
addr16
mov
out
lock
lock
and
fmuls
inc
jbe
in
mov
gs
mov
dec
sbb
inc
nop
xchg
insb
sahf
xchg
pop
mov
xchg
mov
and
ja
sahf
dec
and
invd
push
sbb
dec
rcrl
mov
push
cli
mov
mov
shll
shll
loope
and
xchg
xor
pop
fldz
test
rorb
iret
mov
popa
lea
dec
insb
push
aas
push
fwait
scas
sahf
movsl
mov
rcrb
add
pop
ljmp
outsl
inc
cmp
jmp
or
dec
nop
push
aaa
movsl
mov
cwtl
xchg
lods
loopne
sti
cld
mov
mov
or
imul
sbb
lret
and
shl
inc
adc
and
push
add
fsubrs
imul
lods
sbb
std
roll
mov
call
cmp
push
popf
sbb
idivl
rcl
push
lods
mov
cmc
loop
push
call
push
cmpsl
push
cli
or
xor
or
shl
sbb
dec
ds
or
mov
xor
call
movsb
pop
fsubs
mov
loopne
rcr
mov
test
stos
cmp
jmp
insb
pop
cmp
bnd
and
jp
and
dec
mov
xchg
cmp
mov
pop
adc
cmp
or
xchg
insb
pusha
pop
ficomps
pushf
pop
lds
mov
cli
ljmp
sub
inc
xchg
pop
mov
dec
insb
jmp
outsl
inc
fs
imul
sbb
inc
push
dec
inc
pop
adc
xor
js
and
xor
or
fistpl
push
xor
movsb
and
adc
addb
popf
sub
inc
in
and
or
cltd
int3
add
sahf
out
mov
add
data16
iret
sarl
xchg
push
pushf
inc
nop
fcoml
lcall
sahf
idivl
xchg
push
pusha
xchg
cmp
out
in
insb
dec
cltd
mov
cmp
negl
lcall
bt
stos
stos
mov
add
cmpsl
lgdtl
add
sti
mov
sbb
test
and
xor
xor
jmp
loop
rorl
xor
add
mov
fcoml
sub
fiaddl
xchg
pop
cmp
out
insb
dec
mov
cmp
sub
repnz
enter
mov
pop
es
and
test
fs
add
inc
sahf
or
dec
bound
cmp
repz
xchg
stos
aam
out
ds
lock
adc
and
sahf
out
sahf
inc
pop
push
mov
stos
mov
aam
sti
cmp
out
add
adc
sub
out
mov
bound
xchg
cmpsb
das
enter
iret
repz
push
aad
push
inc
push
push
bound
iret
repz
mov
iret
repz
fdiv
cld
or
out
sahf
cmpsl
sbb
ds
data16
out
sahf
jle
cmpsb
mov
repz
add
sbb
cmp
cmp
repz
insb
adcb
mov
aam
hlt
add
jb
fcoms
fmuls
push
inc
push
sahf
out
sahf
push
data16
jns
shl
data16
fldcw
xor
inc
sub
pop
push
pop
add
adc
pop
cs
jno
xor
add
push
movsl
das
add
imul
and
sbb
call
mov
mov
pop
xor
sub
lahf
ja
push
outsl
and
fldenv
sbb
int3
lds
xchg
mov
mov
cmp
inc
dec
loope
or
and
dec
xor
inc
lret
adc
pop
cmp
or
aaa
cmpb
dec
push
dec
mov
iret
and
push
insb
fildl
dec
inc
sahf
je
push
outsb
ja
jnp
out
push
fs
outsb
add
fildl
shrl
jo
rcll
fs
inc
adc
jb
ret
cmp
push
jns
pop
mov
xchg
add
inc
inc
rorl
fsubrl
pop
enter
stos
dec
xchg
pusha
dec
aaa
adc
fisubrl
fcomps
dec
inc
sbbb
pop
pop
dec
mov
xchg
push
add
sub
lcall
and
lods
pop
js
dec
ret
dec
fsub
mov
or
push
mov
sbb
jnp
imul
adc
das
sub
pop
cltd
inc
mov
adc
testl
inc
inc
inc
cmp
aaa
push
mov
lretw
add
loop
xor
sbb
mov
inc
sub
inc
dec
sarl
push
test
jae
adc
outsl
in
imul
popa
fs
out
mov
popa
ja
jae
inc
inc
push
dec
adcb
sub
fadds
outsl
das
jg
inc
aaa
je
pop
inc
mov
cli
mov
pop
sbb
fcomps
mov
push
inc
dec
push
xorl
enter
daa
sbb
pop
add
sub
inc
push
out
imul
enter
mov
je
sbb
fwait
inc
pop
inc
jae
imul
jle
cmp
mov
add
or
sub
inc
inc
push
fists
and
mov
jg
add
jecxz
and
push
stos
ss
jecxz
xchg
stos
sbb
stos
push
jg
movl
test
inc
filds
push
test
inc
sub
and
cli
je
jo
mov
ja
ret
mov
mov
imul
xchg
add
and
inc
lahf
sbb
xor
pop
mov
cs
push
or
add
movsb
lods
daa
sbb
sub
pop
mov
sbb
xchg
or
imul
add
in
push
sbb
push
fcoml
lock
subb
cmp
pop
inc
mov
push
push
jo
cmp
repz
in
cmp
loopne
clc
jg
fidivrs
and
push
sub
push
add
bswap
out
sahf
imull
cli
push
mov
mov
sahf
mov
jg
in
lea
sub
movsl
jbe
out
inc
add
xor
cmp
jo
pop
and
cltd
das
jo
xchg
push
jb
nop
pop
enter
das
mov
jb
pop
and
loopne
pop
enter
add
add
add
and
clc
mov
add
dec
mov
xchg
adc
push
fwait
xchg
insb
call
or
dec
fidivl
and
push
push
ficoms
incb
fsubrs
dec
lcall
scas
iret
and
sub
ds
out
or
mov
das
push
mov
and
sbb
sbb
add
xchg
add
sbb
fldt
add
out
and
jo
push
decl
mov
js
or
jnp
filds
repz
mov
ja
mov
cmpb
js
cmp
mov
jb
and
movsb
pop
decl
add
xchg
dec
add
stos
stos
scas
jg
jo
pop
repnz
repnz
pop
clts
pop
add
jns
int
adc
push
lock
xchg
and
sub
jmp
push
add
sub
push
and
push
gs
ss
add
fwait
int
mov
or
adc
push
add
and
sub
push
add
inc
clc
prefetch
cmp
jo
push
add
add
out
in
sahf
out
movb
out
lods
test
cmp
es
in
xor
mov
cltd
int3
decl
data16
iret
repz
cltd
out
popf
out
cltd
cltd
cltd
cltd
cs
test
int3
push
lcall
flds
pushw
cltd
int3
jns
sub
xor
out
pop
out
sub
data16
ja
sahf
data16
cs
cltd
jns
out
cltd
cltd
jns
int3
dec
ja
out
int3
int3
daa
fldl
shrl
cwtl
cmpsl
loopne
push
data16
cmp
hlt
xor
xor
ss
out
or
data16
data16
jns
jns
es
int3
jns
out
fisubs
jmp
int3
in
loop
fnsave
push
add
sub
xor
cmpsl
cmp
push
jmp
data16
jns
dec
data16
cltd
cltd
addr16
repz
cltd
and
cs
jnp
cs
dec
das
mov
pushl
ret
loopne
insl
add
add
repz
mov
push
int3
data16
cmp
mov
int3
dec
repz
or
int3
int3
cmpsl
xor
cmp
push
int3
ljmp
addr16
popf
jmp
or
jo
repz
push
cmp
repz
dec
push
cmp
repz
dec
repz
push
cmp
cmp
xchg
out
sub
push
cmpsw
sub
movsl
rcrb
ss
int
add
xchg
xchg
add
add
add
add
add
add
add
add
popl
sbb
addb
push
pop
stc
fsubr
cmp
pop
xor
cli
pop
in
pop
pop
mov
das
mov
add
sti
sti
push
daa
fnstenv
incl
in
addr16
popf
sti
push
pop
mov
add
ja
outsb
dec
in
in
add
cmc
pushf
add
pop
out
fucomip
dec
in
push
outsl
jp
xor
cmp
cltd
imul
and
inc
push
and
mov
pop
and
dec
add
add
cmpsb
pop
lock
iret
jb
and
inc
addb
mov
adc
mov
fstl
jg
mov
cltd
adc
jg
incl
std
fstps
js
mov
cwtl
mov
pslld
js
xchg
mov
js
jo
mov
das
add
mov
int
aas
in
inc
aas
js
mov
jnp
fildll
mov
jle
mov
aas
rcr
incl
js
mov
mov
jns
mov
jo
pop
jge
pop
ja
maskmovq
rorl
pushw
adc
clc
jo
ja
shll
mov
into
scas
pop
mov
xchg
sub
lock
and
das
pop
outsl
pop
stc
out
push
mov
pop
push
sti
mov
xor
cmpsb
in
es
repnz
xlat
pushf
ds
pop
mov
xor
inc
pop
mov
inc
add
pop
pop
pop
outsb
sbb
push
ss
mov
push
jo
and
jg
add
pusha
repnz
pushf
add
add
out
inc
inc
orb
cld
insl
test
clc
push
add
pop
dec
inc
iret
lahf
addb
push
add
add
cmp
inc
cmp
xor
iret
into
in
in
mov
pop
aas
xor
mov
out
ds
cmp
pop
inc
jg
inc
jmp
out
aas
cmp
ss
jg
jl
shlb
add
in
sbb
mov
inc
xchg
or
push
xlat
dec
out
push
lock
ficoms
pop
push
lods
xor
mov
not
fldl
jg
cmp
jae
ds
ja
repnz
push
lock
inc
cmp
in
inc
cmp
loope
sbb
into
addb
aas
sar
testl
jge
out
in
aas
mov
jmp
cmp
or
imul
jmp
aas
jge
int
add
in
add
int3
add
add
or
in
mov
jo
out
adcl
add
das
add
aas
inc
sub
repz
sti
jp
xor
dec
aas
mov
mov
aas
ret
pop
inc
aas
lret
lods
lea
test
mov
mov
jg
aas
pop
les
jp
aas
stc
inc
insb
insb
inc
aas
inc
sti
insl
les
nop
arpl
xchg
test
sbb
and
add
sbb
dec
sub
addr16
lcall
je
jo
cmp
cmp
mov
mov
addr16
mulb
xchg
inc
call
mov
adc
popa
inc
mov
jg
js
push
sbb
imul
adc
push
pop
pop
mov
out
and
out
mov
mov
notb
mov
mov
push
push
jnp
or
add
mov
pop
sbb
pop
push
mov
mov
fnstsw
mov
push
test
ds
shl
push
fstpt
js
jbe
pop
loope
pop
xchg
aas
xchg
gs
mov
notb
hlt
add
xor
push
shrb
pop
bound
arpl
fs
dec
adc
out
int
add
dec
adc
dec
push
pop
call
sub
pop
arpl
rorb
push
jge
add
mov
lcall
out
push
push
nop
jl
add
xor
sub
pop
or
arpl
add
insb
add
cmp
mov
sub
xchg
in
or
sub
xchg
pop
cmp
lahf
and
adc
xchg
push
sbb
jecxz
push
incl
testl
jne
jp
pop
mov
cmp
maxps
adc
jp
bound
dec
jae
xorb
mov
dec
lret
unpcklps
fcoms
xchg
ljmp
pop
idivb
or
adc
mov
mov
pop
popa
sahf
jb
add
or
dec
xor
sarl
addr16
xor
inc
addr16
jecxz
mov
ficoml
incb
aas
adc
adc
andl
sbb
pop
stos
add
jle
bound
or
dec
das
or
out
and
jge
pop
mov
pop
call
pop
xor
xchg
inc
xchg
fcomip
push
ret
jb
inc
add
mov
dec
jne
insb
aas
push
stc
idivl
dec
add
je
add
jbe
jb
jns
arpl
pop
jne
mov
mov
jb
add
aaa
mov
roll
add
or
in
adc
or
jae
loopne
ja
or
je
insl
mov
addb
pop
jo
das
outsl
pop
or
inc
or
rclb
push
and
push
fdivp
mov
andps
gs
or
xchg
pop
push
popa
mov
shr
push
outsl
outsl
push
jnp
pop
pop
mov
pop
or
mov
mov
ret
aas
iret
lock
fnstenv
and
jb
insb
push
je
int
xlat
jnp
sub
movsl
or
push
ja
jle
add
ljmp
lret
lret
js
insb
mov
sarb
iret
add
loop
sbb
or
pmaxub
bound
fs
fiaddl
sbb
or
add
xor
cmp
adc
inc
sub
lahf
pop
jns
sbb
imul
test
aas
pop
add
cmp
dec
out
sahf
je
outsb
inc
jbe
cs
sbb
outsl
cmp
push
cmp
xor
cmpsl
loop
fistps
inc
lcall
mov
imul
push
sahf
out
xor
outsb
and
lret
hlt
push
test
pop
xchg
lock
popa
lahf
add
bound
shr
push
ret
clc
push
bound
popa
cmp
add
loopne
rol
arpl
imul
inc
fcmovnb
inc
cmpsl
dec
orb
push
cmpsl
cmp
pop
shll
out
add
mov
add
rcr
roll
je
add
out
mov
mov
scas
mov
ja
stc
sub
cs
aaa
dec
add
mov
and
popa
ljmp
push
cmp
or
xlat
pop
jae
popa
cmpsl
xchg
test
data16
js
insb
and
cmp
xor
xor
and
out
mov
push
push
inc
sub
popa
fwait
dec
mov
and
mov
ds
ss
ds
jl
jae
jne
outsb
cmp
push
mov
pop
mov
cmp
insl
jbe,pn
mov
fildl
xlat
sbb
jecxz
fistl
popa
insl
int3
dec
push
cs
std
mov
xchg
js,pn
cltd
outsl
jb
jb
and
shl
dec
js
ss
lcall
jo
ja
lcall
mov
adc
iret
add
dec
outsl
sub
outsb
in
cmp
das
dec
sub
in
loopne
hlt
jns
je
cmp
or
addr16
popa
outsb
popa
or
subl
aad
imul
xor
loop
orb
in
jg
xor
xor
xor
arpl
xor
insb
push
shl
jge
pusha
sub
das
jae
or
shrl
or
adc
ret
outsl
mov
mov
xor
arpl
adc
and
xor
andb
and
fsubrl
inc
js
cltd
dec
cwtl
cmp
mov
rorb
pop
add
adc
jne
xor
pop
out
shlb
sti
adc
sbb
or
mov
mov
cld
je
mov
and
push
sub
pop
lea
inc
jg
cs
push
dec
dec
das
xor
xor
sbb
mov
gs
cltd
sub
ficoml
das
popa
sbb
jo
bound
addl
jmp
cmc
orb
jo
push
and
xchg
jnp
dec
scas
xor
pusha
xor
or
xor
sub
aam
mov
data16
jae
xor
cmp
stc
popa
sub
bound
or
mov
xor
xor
mov
das
inc
cmp
or
adc
jp
bound
pop
xchg
jg
xchg
inc
adc
sub
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
cmp
incb
mov
xchg
mov
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
adc
xchg
xchg
call
push
pop
mov
outsl
fucomp
in
lock
decl
inc
dec
dec
xchg
lret
xor
scas
jno
or
stos
jnp
jae
mov
add
dec
xor
dec
dec
call
or
lods
lods
iret
inc
aaa
or
je
outsl
out
daa
xchg
jo
divl
int
rcrb
cmp
lods
call
cmovo
lahf
stos
fprem
rolb
js
les
push
jl
jmp
pop
mov
lcall
movsb
jns
cmp
mov
andl
dec
call
mov
add
out
and
jmp
gs
out
cmp
loop
ss
mov
inc
xchg
push
dec
mov
dec
out
mov
pusha
sti
mov
inc
cmp
sbb
call
inc
inc
sub
push
mov
jmp
mov
or
xor
mov
rcll
inc
and
cmp
xchg
jp
movsb
jb
xchg
ja
fstpt
clc
jns
push
pushl
pop
loop
pop
aam
push
mov
jne
dec
lcall
mov
xchg
add
mov
inc
sbb
rcrb
push
mov
sar
add
std
out
sbb
sbb
fsts
dec
sbb
dec
push
in
insl
jmp
adc
sbb
mov
inc
xrelease
mov
aaa
jae
out
add
test
addr16
decl
pop
rorl
mov
in
inc
enter
xor
insb
jmp
cmp
dec
or
mov
icebp
cwtl
jl
stos
pusha
xchg
leave
inc
out
cmp
lcall
fildll
or
jle
mov
cmp
clc
jmp
mov
pop
in
rclb
movsb
pusha
and
enter
enter
mov
out
ds
inc
js
sahf
or
pusha
cmp
sbb
int3
dec
inc
fneni(8087
repz
mov
pushl
ret
scas
jge
addb
and
xchg
inc
leave
or
in
or
mov
ljmp
adc
and
xlat
cmp
push
bound
outsb
shlb
push
pop
aam
or
lcall
fiaddl
ficompl
js
repz
jecxz
and
push
jge
xor
fildl
cmp
pop
add
frstor
in
stc
je
scas
lret
push
dec
ffree
stc
inc
out
pop
mov
cmp
sahf
or
or
push
jg
loop
and
inc
enter
xchg
xchg
or
add
xorl
test
outsl
rcrb
pop
scas
repz
ljmp
into
mov
subl
loope
insl
and
jnp
fsubl
or
xchg
mov
loopne
loop
sbb
fcmovnb
sahf
push
mov
sbb
adcb
xchg
add
test
mov
pushl
movsl
mov
xchg
sbb
adc
mov
sub
incl
in
and
adc
xchg
sbb
mov
or
sarb
jp
nop
into
enter
decl
icebp
lock
mov
xchg
aaa
out
and
sbb
jle
ljmp
movsb
xchg
sbb
mov
movsl
cwtl
add
fst
mov
xor
lret
call
and
xchg
loope
and
sahf
lahf
dec
fadds
mov
cwtl
les
push
sarb
pop
fs
int
xchg
daa
inc
call
mov
pop
cmp
sbb
pop
pop
cmp
and
push
pop
xchg
test
mov
push
or
ljmp
movsl
imul
fiaddl
sbbb
and
rcl
sub
call
jmp
push
lret
and
mov
clc
loopne
cmp
dec
sub
jno
adc
icebp
in
jecxz
pushl
cwtl
aas
fwait
les
adc
jb
inc
loopne
adc
mov
lcall
pop
stos
jbe,pt
cmc
push
push
cld
imul
cmpsl
xchg
in
fstl
lcall
or
pop
inc
push
sub
cmp
cmp
or
mov
daa
repz
sti
into
test
cli
sbb
repnz
hlt
mov
mov
sarl
fsubs
repz
jmp
movb
push
pop
rcl
xor
cmpsb
xlat
adc
scas
test
lret
ss
fmuls
decl
in
popa
or
popf
dec
sub
xchg
shlb
pop
cmpb
mov
xor
lcall
pop
pop
loop
out
popa
mov
jge
adc
inc
test
out
or
adc
call
push
dec
dec
dec
mov
cs
iret
sbb
lahf
lahf
addr16
mov
dec
pushl
add
add
pop
mov
cltd
jb
inc
add
or
pop
or
icebp
decl
mov
in
push
in
cltd
les
decl
rorb
addr16
repz
int3
xor
addr16
adc
ljmp
inc
jle
dec
pop
fistps
jmp
call
add
das
sti
movb
adc
mov
in
cmc
idivb
decl
ret
lock
xchg
push
inc
mov
clc
dec
mov
aas
xor
jmp
jne
loopne
arpl
mov
mov
jecxz
addb
aam
std
push
iret
pop
xchg
imulb
ljmp
mov
lock
sbb
mov
ss
cmp
and
lcall
call
cmpsb
inc
mov
xlat
or
lcall
jne
dec
int
mov
fisubrl
fdivrs
pop
test
and
sbb
mov
cmpsb
mov
stos
xor
jbe
lcall
mov
fisubl
add
aaa
jg
sahf
push
js
loope
pop
dec
inc
fistpll
es
jmp
mov
xlat
and
inc
dec
ret
fwait
lea
call
add
cmc
pop
xor
or
fstpt
fwait
popf
jp
xchg
push
mov
rcrl
lret
outsb
xor
incl
andb
fsubrs
dec
xchg
sub
repnz
rclb
lea
fidivrl
out
clc
call
sbb
push
ss
out
sub
mov
decl
sub
mov
fisubrl
jbe
push
jmp
pushf
nop
jbe
sub
xchg
pop
inc
cli
push
fstl
xchg
adc
cltd
dec
push
mov
and
or
or
cwtl
jle
mov
xchg
jle
out
pop
cld
lcall
dec
fcmovbe
adc
in
push
lods
sub
lcall
lret
inc
repz
jmp
sub
fisttpll
insb
fisttpl
incl
imulb
sbb
push
fldt
iret
es
mov
jmp
cld
xchg
jae
mov
mov
jge
mov
mov
jmp
ret
pop
testb
fbstp
popf
rcll
push
iret
orl
je
push
push
xchg
mov
mov
lahf
xor
int
mov
shrb
pop
inc
inc
dec
mov
jbe
inc
dec
jg
stos
repnz
pop
cmpb
xchg
inc
rep
or
scas
lds
jg
int
or
in
fwait
mov
hlt
push
dec
mov
sbb
fs
fcmovnbe
mov
aaa
fidivrl
add
inc
pushf
sti
xor
sub
push
jp
mov
mov
pushl
xor
push
xor
test
mov
je
es
pop
popf
pop
add
mov
fcomip
insb
or
roll
jae
mov
cmp
xchg
cs
xor
cmpsb
in
and
js
sbb
sahf
enter
out
mov
push
icebp
mul
cmp
mov
repnz
sbb
sbb
out
cmp
in
mov
sub
jg
mov
imul
enter
imull
jb
call
mov
loop
ljmp
shr
sbb
adc
icebp
jnp
cltd
insl
sti
pop
sub
cmp
mov
je
add
ja
insl
scas
cli
jo
shll
push
cmpsl
out
vpmaddwd
call
inc
xchg
ficoml
jnp
push
adc
adc
cmc
outsl
sar
inc
mov
arpl
add
xchg
sbb
and
inc
xor
mov
jg
mov
leave
xchg
movsl
sbb
or
popw
cmp
xlat
rclb
out
cli
xor
fldt
test
xchg
aaa
dec
popf
dec
adc
mov
cli
outsl
cmp
mov
push
jp
pop
mov
push
push
into
jno
inc
mov
mov
test
sub
mov
popa
outsb
push
sbb
xchg
adc
jne
call
fucomi
idivb
sub
inc
sti
test
xor
aam
pop
push
sub
push
pop
inc
out
cli
cmp
lahf
inc
pop
pop
cmp
scas
lahf
push
xor
sub
mov
je
jmp
mov
sub
inc
inc
mov
sbb
push
pop
insb
mov
adc
cmp
fstpt
mov
cmp
mov
leave
fisubl
mov
xchg
jnp
incl
int
or
xchg
xchg
mov
dec
push
and
fs
outsb
add
arpl
dec
stos
jmp
cmp
gs
lods
push
xor
stos
inc
xchg
lcall
loop
adc
sti
inc
inc
xor
jmp
repnz
jecxz
dec
test
lret
pop
aaa
sub
pop
scas
and
pop
loopne
lods
adc
out
test
xchg
out
lcall
call
pop
orl
jge
inc
push
divl
xchg
mov
lcall
inc
decb
cli
or
push
cmpsb
gs
popa
popw
iret
sbb
outsb
adc
jmp
mov
test
jle
mov
out
mov
pushl
jl
ficompl
fimull
jns
lahf
cmpsl
mov
cltd
mov
push
mov
out
push
xlat
int
lret
call
inc
loop
mov
int3
cmpsb
loopne
daa
pop
cmp
sub
mov
mov
mov
fnstenv
xor
mov
arpl
imul
inc
mov
daa
and
push
aaa
pop
sub
cmp
mov
xor
or
clc
adc
push
sbb
call
cmp
rcll
jns
push
sarl
lea
outsl
dec
jae
incl
dec
rclb
loope
imul
je
adc
mov
cltd
cmp
xchg
ljmp
movsb
lods
cmp
pusha
jl
movsb
shrb
dec
leave
adc
cmc
mov
add
push
cs
leave
insl
aam
inc
mov
xchg
es
xlat
fisttps
aaa
addr16
xchg
stc
clc
mov
lcall
and
sub
push
mov
jnp
int3
stc
js
and
enter
and
sbb
add
xchg
xchg
test
pop
stos
out
ret
loopne
sub
lcall
inc
or
dec
daa
sub
mov
inc
mov
push
es
call
and
cltd
xlat
adc
sti
fsubrl
add
or
and
jnp
mov
decl
test
cli
pushf
pop
ficoml
aam
sar
inc
jno
pop
dec
stc
fists
xchg
stos
call
push
adc
jbe
clc
add
pop
push
jns
or
call
jmp
loopne
stc
in
and
leave
or
jnp
dec
push
lcall
fsubs
cmpsb
pop
pop
push
aam
push
imul
add
divb
movsb
aam
jle
outsl
pop
xchg
test
incl
sub
push
mov
sbb
iret
scas
rol
sub
faddl
ljmp
adc
add
or
or
jns
adc
sub
pop
popa
jbe
lret
out
nop
test
shrl
cli
in
add
inc
add
jmp
jmp
push
sub
pushf
mov
insl
imul
ljmp
in
lahf
pop
loop
cmp
sub
adc
xchg
dec
std
decl
imul
loop
addr16
lea
inc
xchg
fisttpll
aaa
inc
cld
aaa
dec
pop
inc
sub
mov
jg
jl
pop
mov
icebp
cmpsb
or
or
push
mov
and
aaa
std
jg
inc
jbe
sub
lea
ret
cltd
fcomp
fisubrs
pop
ret
call
jno
lahf
and
xchg
mov
pop
mov
xchg
pop
mov
inc
pop
stos
inc
dec
decl
jmp
imul
clc
cs
idivb
mov
jge
leave
jp
or
push
loop
mov
fcmovnb
int3
and
pop
adc
scas
sub
loopne
lods
sub
jbe
jge
jmp
popa
and
repz
lret
out
nop
xlat
sub
fiadds
es
fldcw
mov
rcl
scas
outsb
dec
out
cld
lcall
call
bound
push
push
jg
lahf
fidivl
inc
insl
repz
stos
and
inc
mov
fnstenv
xor
int3
ret
add
mov
dec
mull
dec
cld
mov
mov
ret
lret
push
sub
mov
lcall
arpl
negl
jb
loop
mul
cmp
int
rorl
ljmp
call
jl
aaa
roll
imul
mov
pop
push
push
dec
mov
cltd
test
sbb
jmp
popf
jo
and
testb
jae
dec
push
lret
rcr
js
pop
sbbl
push
loope
or
negl
cmp
jg
out
not
and
inc
insb
push
jl
es
imul
ja
lock
test
lea
fstps
jmp
insb
in
leave
hlt
pand
mov
xor
sub
cmpsl
sbb
std
sbb
xchg
push
clc
dec
popa
pop
push
ret
or
adc
mov
hlt
enter
pushl
add
lret
gs
cmpsb
loop
lock
or
or
insl
or
js
mov
lcall
sbb
cmpsl
adc
push
js
outsb
lret
sbb
repz
or
daa
mov
aas
mov
lods
aas
neg
loope
xchg
jmp
cmp
test
sbb
push
loopne
js
add
and
std
sbb
lcall
rcll
pop
mov
pop
test
sti
je
xchg
dec
jb
popf
jmp
and
rolb
je
fcomps
addb
lcall
sub
inc
inc
dec
cmp
or
jmp
adc
cmc
push
lds
fwait
ret
push
lret
bound
test
adc
aas
aad
xor
sub
fisttps
cltd
jmp
lcall
xorb
push
stos
dec
jg
es
and
div
adc
sbb
and
dec
js
adc
xchg
xor
popa
cmc
xcrypt-ecb
cmpsl
mov
sbb
notl
out
loop
and
scas
pushl
mov
dec
xchg
lcall
jae
push
sbb
adc
mov
and
sbb
or
fmull
and
pop
cmp
incl
decb
adc
add
pop
or
mov
cmpsb
pushf
adc
or
sti
add
out
jnp
mov
cmc
xchg
sbb
in
in
inc
out
and
add
out
scas
cli
jp
adc
sub
pop
mov
inc
stos
loopne
and
pop
cmpsl
sbb
inc
cmp
mov
push
push
mov
sbb
add
xor
pop
insl
sub
mov
jl
mov
pop
or
lods
pushl
jae
in
sub
pop
cs
imul
les
ret
push
fcomip
jns
cs
insb
inc
and
inc
xor
cmpsb
jb
fistl
jge
mov
push
mov
outsb
int3
inc
xchg
mov
cmp
icebp
push
sbb
jg
or
stos
std
sbb
mov
fsubr
aad
cmp
mov
or
dec
aam
adcl
sub
pop
add
movsl
sbb
mov
dec
dec
punpcklbw
mov
mov
mov
decb
inc
sub
sub
pop
call
cmp
mov
inc
out
in
incl
fwait
mov
lock
ficoms
xor
xchg
cwtl
popa
jp
push
movsl
and
into
pop
vmovd
add
orl
inc
sbb
mov
test
call
xchg
std
sarb
jne
xorb
mov
lea
adc
loopne
cli
lret
inc
and
xchg
ret
ret
int3
stos
call
fs
call
or
lods
pop
jl
ds
add
leave
mov
in
and
xorb
ljmp
ds
push
lods
inc
xchg
inc
scas
cmp
jge
mov
mov
mov
push
arpl
dec
cmp
fs
push
jp
aad
jmp
xchg
data16
imul
clc
cld
daa
mov
jae
mov
in
call
jp
sub
xchg
out
in
fisttpll
cli
jbe
mov
add
cld
adc
cli
decl
decl
adcb
xor
pop
ret
jmp
loopne
add
ljmp
mov
xchg
int
lea
fisttps
pop
loopne
cmp
das
push
xchg
mov
sub
cmpsl
jmp
decl
je
es
pop
lret
ljmp
test
pop
push
out
clc
cmp
push
push
add
sbb
sbb
mov
cmpsl
xchg
shlb
or
into
lock
std
dec
mov
xchg
arpl
out
push
add
scas
clc
push
or
aad
test
scas
stos
mov
pushl
pop
repz
xchg
loope
cwtl
cltd
mov
or
das
orl
outsl
ljmp
cmc
dec
stos
es
or
adc
je
xchg
fdivl
sbb
jmp
jg
cs
dec
and
pop
clc
ret
cwtl
fcmovu
stos
xchg
insb
mov
mov
pushf
inc
mov
push
push
dec
imulb
xor
ficomps
mov
ret
ss
icebp
lcall
push
add
sub
mov
call
inc
bound
adcb
jmp
ret
push
push
pop
cmpsb
stc
in
popf
icebp
lcall
adc
popl
add
dec
testl
inc
mov
rol
in
lcall
sahf
je
cmp
adc
jle
xchg
js
push
mov
ret
jg
loope
fildll
mov
int
and
xchg
cmp
add
mov
xor
lcall
push
ret
inc
sub
xor
sub
sbb
aad
inc
les
nop
decl
or
jae
pop
fdivrs
daa
mov
stc
mov
out
fstpl
ljmp
cmp
daa
das
mov
std
mov
push
and
stos
testb
inc
cltd
rol
xchg
decl
divl
sar
loop
xor
or
ja
ss
mov
mov
movsb
hlt
decl
push
outsb
stos
lret
into
hlt
iret
push
enter
adc
out
test
inc
jl
lret
inc
jmp
add
sub
inc
mov
jge
cmc
jl
out
and
xchg
hlt
dec
call
jle
dec
sub
out
mov
sahf
ret
lods
div
fidivl
mov
push
inc
andl
fwait
ffree
mov
pop
scas
pop
add
adc
loop
sub
ds
inc
mov
xchg
decl
inc
out
xchg
mov
aas
pop
ja
nop
push
loopne
and
cwtl
sub
es
rolb
daa
dec
dec
loop
pop
outsb
jp
outsb
fmuls
cmpl
push
cmpb
decl
xchg
out
fsub
inc
adc
push
jnp
sbb
sub
and
popa
dec
cmp
lcall
and
lods
cmp
scas
into
lcall
inc
andb
push
push
fcmovb
ds
and
ljmp
jo
popf
ret
jns
jl
fcomps
adc
cwtl
mov
pop
ret
clc
xor
loop
xor
call
and
mov
scas
cli
jg
mov
push
mov
dec
mov
cmp
jno
sbb
pop
jmp
mov
lret
jp
cmpsl
mov
cmp
cmp
jnp
jbe
aad
movsl
cmp
lcall
gs
pop
test
xadd
xor
push
loope
jns
mov
clc
jnp
mov
adc
fwait
andl
pop
and
aam
push
cmp
lds
addr16
clc
call
rcl
add
mov
mov
aad
lret
cmp
mov
incl
loop
mov
fnstenv
mov
outsl
dec
jmp
dec
mov
inc
cmp
xor
xchg
xor
or
or
fwait
dec
xchg
js
cld
mov
jg
jmp
cmp
and
les
or
js
mov
jno
push
pop
cmpsl
sar
sbb
test
data16
jmp
aas
data16
and
jg
clc
loop,pt
movsl
push
jg
orb
out
xcrypt-cbc
cmpsl
xchg
lods
loop
inc
sub
je
insb
xchg
dec
mov
lcall
mov
in
push
scas
jnp
cs
test
jbe
or
lcall
les
or
push
xchg
nop
std
je
pop
dec
sbb
sahf
ret
cli
adc
xchg
aas
add
cmp
sub
call
pop
clc
lcall
ss
or
movsl
data16
mov
sbb
shl
cmpl
jmp
adc
mov
dec
lods
inc
fldt
pop
faddl
add
dec
iret
stos
es
xchg
add
cmpsl
mov
lret
rcll
call
cwtl
shll
sub
fsubrl
xchg
scas
push
icebp
rcrb
loopne
call
aam
cmp
pop
sbb
jmp
lds
jo
mov
outsl
push
mov
mov
adc
stc
popa
push
and
pop
lods
iret
fmulp
inc
add
loopne
dec
sbb
iret
push
and
popa
push
mov
mov
xor
decl
and
rolb
das
lcall
sti
leave
pop
sbb
ljmp
and
call
adc
cli
or
xor
mov
fidivs
or
ja
jle
xlat
fisubl
lahf
pop
push
xor
cmp
rol
adc
push
dec
mov
into
jg
cmc
out
lds
scas
imul
jae
scas
mov
and
jns
leave
sti
adc
out
in
push
cmp
arpl
sub
aam
repz
add
imulb
mov
jmp
mov
xchg
fucomi
out
lahf
push
add
pop
jno
out
aam
jbe
adc
icebp
mov
je
and
xor
sbb
sub
pushl
and
loop
xlat
test
in
mov
sarb
jne
mov
pop
jns
push
inc
push
es
jmp
imul
cmp
cmpsb
or
adc
aas
pop
push
fs
cwtl
adc
dec
scas
cli
decl
xor
jmp
dec
in
out
jge
push
into
in
arpl
popf
fs
cmp
xchg
cs
inc
stos
inc
xchg
sub
inc
and
add
push
je
dec
xchg
or
jne
cmpsb
pop
cmovne
test
mov
sbb
mov
mov
dec
and
inc
add
lcall
or
inc
adc
inc
jge
adc
mov
js
mov
lea
movsl
iret
fbld
decl
test
mov
xchg
test
jo
scas
cli
ljmp
pop
jl
incl
repnz
test
and
jmp
call
cltd
out
into
mov
xchg
cmp
std
das
addr16
in
stos
movsl
jmp
xchg
fcomi
insb
add
pushf
std
ret
test
aas
adc
gs
cwtl
pop
mov
decl
inc
repnz
in
pop
mov
push
imul
push
and
decl
mov
out
xor
mov
mov
add
out
jge
pop
cmp
or
or
loop
push
out
jp
inc
out
lret
pop
popf
cli
add
iret
cmp
data16
mov
mov
cmpsb
mov
es
and
sahf
repnz
inc
sub
aaa
jns
cmc
incl
repz
sahf
jecxz
std
jne
xchg
cld
in
les
sahf
mov
or
or
ss
push
es
xor
push
sub
jge
jl
js
jbe
scas
mov
xchg
sbb
dec
or
jmp
pop
imul
inc
data16
mov
leave
pop
loop
cmp
incl
jno
hlt
add
nop
fnstcw
outsb
mov
push
sub
add
push
lock
push
sti
push
outsb
cmc
rcll
push
lahf
popa
imul
call
fsubrl
testb
fildl
mov
xchg
gs
mov
mov
xchg
mov
pop
ljmp
lock
fsts
jno
jno
sbb
cmpl
out
push
add
lret
cmp
jg
jmp
mov
cs
rcrb
int
or
sub
lock
stc
pop
icebp
jmp
sub
test
mov
call
out
add
cld
pop
jg
mov
imul
pop
add
sahf
sub
std
jmp
andb
fstp
dec
imul
pop
gs
mov
loop
insl
out
add
sub
call
into
mov
sub
inc
jmp
inc
adc
push
or
jg
pop
mov
or
lcall
leave
xor
lods
neg
decb
sahf
out
and
dec
scas
test
bound
inc
fidivl
sub
mov
pushf
mov
lock
jmp
lcall
testl
push
clc
subb
jecxz
add
mov
push
pop
shll
push
xor
in
cmpsl
sub
mov
sbb
mov
decl
mov
ja
ljmp
and
jle
in
rcrb
std
notb
arpl
decl
pop
mov
fs
adc
sub
mov
inc
mov
mov
push
lock
mov
or
mov
jge
movsl
jg,pn
stos
ljmp
sarl
adc
xor
orb
add
xchg
fiaddl
mov
cli
push
xor
add
inc
ret
dec
inc
das
jecxz
mov
jbe
push
loopne
jmp
repz
jg
jno
lds
fldcw
fs
lret
out
negb
fistps
loop
push
fwait
sarb
lahf
add
ja
arpl
xchg
mov
lret
adc
dec
inc
add
push
and
lret
sub
repnz
fs
insl
push
dec
std
lods
in
scas
sub
ljmp
lds
inc
pop
popa
jl
hlt
sub
ret
lods
or
pop
mov
mov
es
decl
sub
xor
sbb
dec
mov
lods
daa
mov
fistpll
nop
jbe
push
call
xchg
movsb
jbe
lods
jb
ja
pop
loopne
cmpsl
addb
xor
sbb
fcomip
jp
xchg
and
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
push
or
in
out
js
pop
notl
add
and
sbb
push
mov
dec
mov
scas
mov
sbb
mov
rorb
loop
les
push
ljmp
bnd
inc
sub
sub
test
ss
mov
dec
add
add
inc
jp
mov
pop
mov
ffreep
pop
call
shlb
lea
push
mov
push
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
dec
push
hlt
das
clc
call
aad
jno
fldenv
lahf
mov
jno
push
roll
divb
ja
mov
sub
ficoms
push
dec
outsl
cmp
xorl
ljmp
clc
add
pop
push
gs
pop
inc
xchg
cmc
ret
mov
pushl
mov
sub
push
jbe
imul
sub
ficoms
add
shl
mov
push
out
ja
out
jo
adc
pushl
cltd
jp
aad
mov
cltd
scas
out
ja
mov
jmp
cmp
adc
sbb
ljmp
sub
cmp
in
lcall
fbld
pusha
adc
sbb
mov
rcll
test
fildl
push
push
mov
jb
xor
in
push
jp
cltd
sbbb
cmp
jg
decl
xor
pop
dec
test
xor
mov
cltd
inc
mov
sbb
push
dec
call
sar
notl
dec
mov
hlt
fimull
cmp
sbb
mov
inc
lcall
incl
pop
inc
jns
sbb
xor
xchg
inc
lea
call
outsb
push
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
pushf
jg
jecxz
push
or
cmp
xchg
mov
sub
xor
cmp
xchg
push
stc
fldcw
pop
popa
mov
cmp
lods
rolb
aas
in
dec
mov
mov
mov
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
test
decl
push
xchg
sbb
push
call
lock
dec
mov
stos
fldcw
mov
push
cmp
cmpsl
repnz
lea
adc
xchg
shr
sbb
or
shlb
push
xchg
imul
imul
repnz
mov
call
fstps
or
dec
and
mov
addl
pop
or
clc
jb
jg
inc
xor
pushf
push
ret
sbbl
mov
test
and
ljmp
jp
mov
jae
xor
or
ud1
rorb
fiaddl
mov
push
std
call
rcll
inc
imul
cs
bnd
decl
add
scas
jg
or
imul
inc
jl
push
pushf
push
inc
mov
jmp
mov
fidivs
es
aad
dec
pop
pop
scas
rolb
fistpl
and
mov
cmpsb
and
adcl
mov
pop
cmp
sub
mov
js
call
shll
sub
jo
stc
rorb
mov
test
cmp
sub
cmp
jp
cmp
and
int3
lcall
pop
or
mov
or
not
lock
add
or
into
xchg
int3
iret
arpl
shrl
cld
inc
cs
push
pop
adc
ljmp
mov
add
lcall
push
iret
add
dec
iret
sub
ds
loopne
cli
xchg
dec
jmp
inc
ds
fstpl
or
aas
daa
lcall
jg
call
push
fsubrp
rorb
push
loope
or
cmp
sub
data16
lcall
imul
pop
dec
repnz
ljmp
pushf
inc
add
ljmp
xorb
movsb
aaa
sub
out
add
and
stos
pushf
rorb
add
sbbb
jbe
jo
dec
in
arpl
dec
mov
ljmp
daa
xchg
cmp
lock
adc
shr
aad
jg
in
mov
jmp
add
xor
out
xchg
mov
fdivrl
add
mov
in
fisubs
adc
pop
xchg
lods
ret
in
add
aaa
sub
stos
loop
inc
movsl
inc
push
cwtl
jmp
dec
in
int3
repnz
lods
sbb
fdivl
ret
icebp
cld
lock
jb
xchg
or
inc
dec
bound
aam
push
mov
pusha
and
outsb
imul
aas
add
cld
mov
loopne
pushl
or
inc
mov
les
sbbl
and
cmpb
iret
in
loop
fbld
faddl
cmp
pusha
test
stc
mov
test
mov
cltd
lods
push
push
mov
sbb
add
iret
jge
rorb
or
je
subl
mov
js
dec
push
movsb
testb
pop
sbb
jo
test
cli
out
adc
or
data16
imul
cmp
loop
dec
ret
dec
mov
push
or
insl
and
sahf
xchg
cmp
outsb
ds
into
in
paddb
cs
and
push
ss
add
decl
movsb
mov
jae
mulb
push
mov
xchg
mov
push
add
repz
mov
inc
fdivrl
and
shll
push
js
mov
sti
cli
popa
mov
pusha
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
cs
lcall
in
dec
jne
jmp
iret
jb
jne
mov
xchg
cli
pop
clc
aam
xor
jge
mov
ds
jle
int3
adc
js
add
mov
scas
fcomip
mov
call
sub
sbb
in
fiadds
pop
adc
sub
jns
and
lock
lock
repnz
mov
std
sbbb
mov
scas
decl
lock
andb
mov
test
mov
pop
xchg
xor
movsb
mov
scas
add
push
test
dec
pop
mov
int3
sbb
push
push
pop
cmp
inc
sbb
nop
fdivr
cmpl
pmuludq
iret
cli
lcall
decl
ret
popa
lds
shll
fld
push
pop
leave
call
jl
call
xor
insl
xor
inc
inc
das
insb
mov
std
mov
cli
xor
mov
mov
cld
jg
push
stos
mov
add
cs
adc
pop
into
jge
je
jbe
dec
inc
shrb
or
cmpsb
adc
dec
clc
cmpsb
sub
mov
mov
jae
jmp
decl
lahf
and
adc
sub
lds
cs
add
xchg
dec
jno
add
sti
jl
incl
xor
fldz
pop
inc
ljmp
iret
out
test
repz
xor
call
imul
mov
mov
cmp
add
pushw
adc
clc
push
jns
sub
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
orb
ljmp
inc
jbe
repz
jbe
xchg
xchg
mov
sbb
push
dec
lock
jmp
cmp
lds
sub
in
pop
lds
enter
ret
sbb
jo
pop
pextrw
dec
int3
jno
and
incl
test
mov
push
add
arpl
daa
mov
mov
lock
lcall
inc
gs
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
and
pushl
repnz
xor
sarl
xchg
outsl
adc
lcall
bound
pop
cwtl
incl
fsubs
and
jp
mov
adc
in
test
dec
and
gs
cld
fcomip
rcr
repnz
or
ja
in
mov
inc
movsb
inc
adc
ljmp
or
in
push
mov
cmpsl
lea
cld
xor
xchg
pop
mov
scas
call
in
fiaddl
sub
sbb
lods
enter
testb
mov
loope
call
mov
movsl
sbb
int3
fldenv
stos
jecxz
mov
fidivs
xor
fdivrp
jno
jno
ljmp
rcll
imul
orb
and
mov
sub
sti
push
fnstcw
out
jmp
or
aaa
fcompl
sbbb
sub
in
in
shlb
add
mov
pop
xor
jmp
cld
jg
push
fiaddl
lea
inc
imul
and
sar
xchg
aam
jg
sub
dec
out
xor
lcall
mov
call
cwtl
mov
shrb
add
in
dec
cltd
das
mov
mov
cmpsl
fcmovb
jbe
movsb
jl
incl
cmc
scas
cmp
jmp
addb
inc
pop
and
mov
decl
adc
mov
mov
or
jp
push
into
icebp
mov
and
mov
decl
pop
aam
mov
js,pt
lods
add
in
or
divb
decl
stos
cltd
push
add
cmpb
pop
mov
mov
xor
punpckldq
aad
mov
push
jmp
nop
nop
add
dec
das
sub
mov
stos
dec
daa
lret
mov
fwait
adc
enter
inc
pop
jmp
xchg
into
pop
cmp
lods
adc
sbb
jg
iret
stos
cmpsb
or
insl
push
add
rclb
and
mov
sbb
dec
fdivrl
mov
and
and
hlt
nop
inc
or
popf
jecxz
sbb
lods
mov
sbb
hlt
adc
pushl
out
rcll
xor
pop
xor
add
adc
stos
cmp
js
das
mov
ljmp
adc
mov
rcll
or
mov
dec
xchg
dec
adcb
fcomip
decl
icebp
add
sti
push
loope
cmp
push
out
cmpsl
jmp
cmc
fwait
cwtl
gs
cmpl
sub
add
dec
dec
or
test
mov
sub
ss
and
mov
inc
mov
add
mov
jmp
sub
xlat
nop
mov
addr16
xor
xor
pop
movl
test
inc
sub
or
inc
lea
movsb
cs
mov
dec
faddl
xchg
sub
xchg
iret
sub
shll
movsl
scas
arpl
inc
xchg
pusha
scas
mov
mov
inc
ror
and
xchg
or
bound
std
inc
stc
adc
jmp
nop
dec
jmp
xor
movd
or
adc
icebp
scas
jg
pushf
mov
mov
popa
inc
stos
push
mov
mov
shll
xchg
das
test
mov
ljmp
pusha
test
mov
call
ljmp
pop
push
cld
push
loop
or
fnstenv
lcall
sub
or
dec
fistl
push
nop
leave
jg
inc
inc
jmp
dec
xchg
mov
dec
mov
pushl
add
cli
into
dec
mov
adcl
cmp
stos
enter
aam
sbb
decl
test
inc
dec
xchg
orl
pop
dec
stos
lea
cmpsl
jge
decb
nop
mov
stos
fwait
test
in
sbb
test
pushl
add
add
lret
push
cmp
stos
push
sahf
sahf
adc
mov
sar
cltd
cmc
and
cwtl
adc
inc
pop
dec
jg
or
xor
sti
and
sbb
mov
jle
into
push
addr16
cmc
mov
lock
enter
sbb
aas
mov
fwait
cmp
jmp
add
fbld
pop
mov
lahf
push
xchg
leave
dec
or
ds
lock
jnp
jg
sahf
mov
das
cli
pop
ljmp
or
mov
mov
xchg
pop
lcall
add
mov
test
popf
sbb
jmp
jbe
lods
insl
dec
mov
lcall
fst
sub
fdivl
nop
bound
inc
lret
push
stc
inc
or
mov
xchg
cwtl
cmp
push
and
mov
xlat
xor
aad
ljmp
ja
mov
push
adc
push
sub
sub
out
jg
pop
loopne
push
shlb
cli
cld
cs
cltd
xchg
movsl
es
clc
sub
call
fistpl
or
into
scas
outsl
vsqrtpd
xchg
adc
lock
stos
daa
mov
outsb
sbb
ljmp
adc
jne
mov
movsl
cwtl
xor
das
dec
idiv
fistpll
ss
movsb
jg
push
inc
pushf
sub
jae
test
fcomip
jmp
mov
call
test
adc
repz
fidivrs
call
movsb
decl
mov
cli
in
insb
pop
xchg
and
and
aaa
test
fmuls
repz
decl
inc
js
stos
jo
push
shr
fisttpl
ret
and
cld
mov
and
clc
incl
in
arpl
hlt
sbb
decl
repnz
cmpsb
lahf
jecxz
sbb
dec
test
jae
insb
jmp
enter
cltd
pop
dec
xchg
outsl
mov
add
fnstsw
imul
test
movb
adc
in
push
lods
sub
mov
call
pop
ds
dec
ret
cmp
pushl
mov
mov
fistpl
or
repz
sti
popa
mov
push
fs
mov
jl
xchg
mov
cmp
jnp
in
test
jl
inc
lret
xchg
sti
out
push
xchg
in
adc
call
mov
cli
jnp
cmpsl
dec
jl
mov
pushf
lds
cmp
shl
nop
testb
xchg
add
pop
mov
xor
cmp
cmp
lea
mov
in
dec
push
jge
or
jl
pushl
nop
cmp
in
mov
arpl
out
nop
cmpsb
pop
mov
cmc
in
cwtl
mov
ljmp
jge
push
push
jl
pop
scas
jle
jl
push
int3
pushf
pop
js
or
aam
or
hlt
out
cmp
sbb
sbb
jbe
sbb
mov
xor
ret
aad
sahf
movsl
cmp
repnz
lcall
jmp
cmp
ss
fmull
mov
adc
lods
mov
into
jmp
ror
loop
inc
scas
adc
push
mov
xchg
mov
jg
mov
jecxz
sti
call
out
sub
subb
pop
aam
or
outsl
mull
jecxz
cmp
movsb
in
enter
and
jmp
mov
xchg
jne
or
xchg
movsb
test
and
dec
jg
loopne
std
arpl
aaa
mov
cld
mov
cmp
lcall
sbb
cmc
outsb
dec
into
lret
daa
dec
lret
leave
jmp
repz
inc
es
fcomip
ljmp
out
lret
adc
push
xor
and
daa
ljmp
scas
push
ljmp
xor
push
dec
pop
fcompl
sbb
popf
jmp
inc
decl
dec
push
mov
orb
lock
adc
jg
ljmp
dec
push
ds
dec
xor
xchg
cld
dec
jmp
push
xor
xchg
xor
xchg
jmp
adc
lret
cmp
int3
inc
xchg
negb
mul
faddp
das
repnz
aaa
test
pop
xor
sub
or
pusha
adc
ljmp
pop
jno
push
lea
mov
mov
jno
push
push
ss
decl
cmp
movsb
xchg
mov
inc
cwtl
orl
clc
adcl
pop
jg
jg
inc
xchg
mov
push
push
mov
ljmp
clc
pushl
push
out
xor
cli
adc
push
jne
movsl
add
cmp
mov
mov
ljmp
push
xchg
pop
and
xor
call
or
fdivrl
pop
pop
movsl
xor
add
test
mov
insb
push
mov
sub
call
fcmovnu
ljmp
fs
test
pmulhuw
mov
ret
sub
stos
ljmp
add
iret
popf
push
movl
jl
fs
dec
or
inc
out
dec
push
fdiv
xchg
jno
adcb
pop
fiaddl
cwtl
jae
out
cli
sub
jp
arpl
hlt
add
and
xchg
and
mov
ljmp
adc
enter
jmp
jmp
pusha
sbb
fdiv
bound
dec
aaa
sbb
mov
or
dec
xorb
in
cmp
xchg
mov
pop
pop
sbb
addr16
imul
mov
jno
mov
pop
fucom
push
jecxz
or
call
and
leave
mov
stc
scas
dec
test
cmp
test
outsb
xor
cmp
dec
test
repz
cmpsb
xor
sub
arpl
lods
cmp
xor
jp
daa
mov
sbb
imul
mov
mov
inc
mov
rclb
xchg
clc
js
call
pushl
lods
and
repnz
bound
adc
loopne
in
xor
push
or
or
gs
loope
outsl
adc
stc
mov
xor
pop
leave
push
sub
mov
and
push
dec
aam
sub
push
sbb
push
jmp
cmc
int
xchg
jecxz
jns
adc
xor
mov
ja
inc
mov
cmpsb
sbb
mov
dec
xor
or
mov
cmc
and
and
and
scas
popa
mov
push
movsl
je
fidivrl
mov
mov
mov
ret
fldcw
adc
add
inc
dec
movsl
ret
xor
jmp
or
lret
pop
mov
incl
xor
fs
dec
xchg
roll
push
add
pop
scas
adc
mov
sub
incl
dec
std
pextrw
adc
fidivrs
xchg
mov
decl
mov
xchg
imull
pusha
divl
mov
stos
push
aas
xor
push
mov
jg
ljmp
dec
loope
movsb
add
pop
ret
pop
pushf
xor
dec
movsb
add
insb
inc
mov
movsl
sbb
mov
out
in
push
std
and
mov
dec
fcmovne
cli
jl
inc
mov
jp,pn
mov
and
push
mov
cmp
lock
dec
mov
jmp
jmp
push
or
cld
and
lret
addr16
jp
outsl
adc
pop
fdiv
roll
ja
std
ds
sbb
ja
popf
push
jnp
mov
xor
in
mov
sti
ljmp
pop
js
lock
jmp
js
in
sbb
loopne
insb
xor
cmp
mov
or
je
dec
jle
xchg
xchg
fwait
test
push
call
outsl
iret
inc
out
cmp
ffreep
lock
movsb
jle
jne
mov
loop
es
jno
cs
fstps
pop
jb
push
dec
and
sbb
sar
call
inc
dec
push
jg
pusha
pushf
inc
lock
stos
test
sbb
jmp
jno
popf
jge
shll
sahf
roll
add
outsb
jnp
popa
lret
adc
decl
loop
xchg
shlb
push
std
lret
xchg
movsb
psubw
clc
shlb
decl
xchg
or
aas
dec
jae
push
mov
fs
pop
jns
xchg
test
gs
popa
inc
out
jmp
cmpl
lahf
and
push
int3
sub
xchg
inc
xchg
incl
ds
xchg
fmul
pushf
mov
sub
es
fstl
sbb
ficoml
in
dec
cwtl
cmp
push
or
jo
lods
js
mov
cld
lcall
push
adc
lods
push
rorb
in
sbb
dec
jno
dec
call
rolb
adcl
adc
xchg
pusha
xchg
mov
push
add
xchg
daa
mov
xor
mov
mov
cmpsb
outsb
arpl
cmpsl
scas
xor
loopne
dec
jle
pop
adc
cwtl
mov
dec
push
out
sbb
mov
mov
inc
fiaddl
ja
fmull
insb
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
push
inc
jmp
incl
sahf
inc
daa
mov
jge
data16
pop
cmp
std
pusha
pop
adc
cmp
cs
into
jmp
xchg
int
mov
vpinsrw
push
jmp
add
loop
mov
jg
cmp
add
pop
mov
mov
popa
fiaddl
cmc
loopne,pn
mov
mov
loope
add
hlt
pushl
lods
and
lret
jnp
add
sbb
enter
leave
incl
or
xor
lea
and
sub
mov
lahf
incl
adc
sub
cmp
mov
push
mov
rorb
adc
jmp
movsb
mov
pop
xchg
xor
scas
addr16
int
lahf
aad
ret
fidivl
xchg
dec
cmp
inc
jl
cmp
gs
mov
pop
stos
add
xchg
roll
push
ja
lcall
nop
je
imul
lods
shll
in
les
std
stc
lcall
push
out
pushf
and
sub
iret
movl
call
inc
pusha
mov
fdiv
fwait
or
add
es
pop
test
push
fs
push
jg
add
adc
cmp
int
adc
dec
dec
jg
push
addr16
pushl
mov
stos
push
xchg
cmp
jb
mov
popf
aam
loope
dec
mov
push
sub
mov
add
dec
addb
push
inc
in
pop
cmpsb
push
sete
xor
xchg
ljmp
in
jnp
mov
dec
dec
dec
pop
jns
enter
pop
loopne
adc
inc
ljmp
and
movb
rcll
cld
fisubs
loopne
pop
popa
ftst
adcb
and
jmp
js
rcr
jg
dec
les
fstps
lret
stos
mov
das
stos
getsec
jb
sub
movsl
mov
aad
pop
idiv
mov
ljmp
dec
jnp
test
cwtl
push
pop
jnp
shlb
fildl
adc
lcall
lods
sbb
jmp
jle
inc
sbb
dec
mov
dec
mov
or
and
stc
gs
cmp
mov
jb
call
inc
mov
push
sti
cs
repnz
repz
pop
pop
ljmp
ljmp
and
mov
mov
lahf
sub
xchg
or
cli
adc
xor
mov
xchg
outsb
scas
hlt
faddl
xor
cwtl
cmp
cmc
mov
not
push
or
rorl
in
mov
gs
pushl
inc
pop
pop
adc
shr
repz
sti
cmpsl
inc
inc
mov
ret
cs
sbb
jmp
or
ljmp
repz
xor
lods
cwtl
push
in
jns
jbe
sbb
push
imul
mull
push
cmp
lcall
push
lcall
mov
ljmp
lcall
test
mov
push
scas
divb
pushl
xchg
sub
pop
in
loop
adc
test
ret
hlt
adc
call
addr16
stos
sbbl
insl
das
add
mov
and
pushf
iret
addr16
fcompl
inc
push
and
sub
dec
fs
sbb
or
cmc
jmp
test
push
sub
pop
xor
jbe
repnz
mov
push
jge
sub
mov
push
push
fwait
leave
or
push
ss
jl
sbb
lret
jmp
mov
mov
pop
imul
fcomip
jmp
inc
xor
inc
shrb
xor
inc
jae
mov
ja
call
ss
sbb
and
push
push
sbb
into
pop
insb
mov
incl
adc
inc
or
out
sub
push
jecxz
sub
cmc
xchg
or
lcall
fs
pop
outsb
mov
pop
dec
add
mov
mov
ds
jg
add
push
add
cmc
mov
loopne
jecxz
sub
sbb
pop
inc
out
push
cmp
jg
add
popf
add
xchg
mov
test
mov
bswap
lods
push
mov
or
call
adc
adc
pop
dec
mov
push
adc
jo
aas
jg
cmp
inc
nop
pushl
cld
ljmp
push
sarb
sub
out
add
mov
and
sub
ja
push
insl
push
push
movsb
in
adc
outsl
test
outsl
xor
jmp
aas
pusha
cmp
into
mov
cwtl
popf
fildll
xor
jle
dec
or
clc
push
sahf
jg
inc
cld
andl
xchg
cmp
adc
cld
lret
inc
mov
lock
divb
ret
mov
rclb
pushf
imul
rol
in
aad
mov
enter
cmp
in
movsl
jp
jg
ja
cmp
das
lret
popf
pop
or
add
xchg
decl
push
xchg
lods
loopne
xor
call
mov
test
stos
cmpsl
xlat
mov
ljmp
inc
pop
push
call
mov
dec
sbb
sahf
sarl
xor
ljmp
ja
daa
pop
push
into
in
cmp
xchg
sbb
or
std
xor
sbb
lret
mov
lods
pop
xor
mov
sarl
cmp
fldcw
pop
add
pop
xor
xor
jmp
dec
inc
push
xchg
insb
scas
icebp
or
mov
add
adc
ljmp
pusha
dec
dec
dec
stos
add
mov
dec
cli
jg
and
imul
movsb
clc
insl
xor
stos
jne
mov
xchg
push
jg
scas
les
and
insl
not
ds
jb
push
mov
mov
cmp
jbe
pushl
lahf
jg
adc
xor
testb
sbb
cmp
xor
mov
test
loopne
decl
pushf
and
push
mov
lret
sahf
fadds
outsb
push
inc
in
sarl
incl
pop
and
jo
and
int
dec
push
mov
decl
mov
pop
cmp
lds
cmp
sub
push
into
cmc
push
jg
add
out
cmp
jnp
dec
jle
sub
arpl
add
paddsb
arpl
decl
sahf
mov
iret
pop
inc
push
sbb
gs
dec
sub
xchg
in
xor
pop
inc
pinsrw
lcall
out
sbb
dec
push
mov
xor
mov
je
push
xor
inc
ljmp
mov
inc
pop
gs
out
jns
mov
loopne
sbb
cmp
jmp
adc
and
pop
push
adc
je
xchg
jg
push
fbld
push
and
shl
dec
push
add
dec
cmp
ljmp
mov
jg
rcrl
mov
leave
or
cs
in
icebp
filds
cmpb
and
mov
call
jecxz
cld
ds
divb
out
mov
scas
loopne
movsl
or
jmp
repz
and
mov
cld
loope
in
in
lcall
jb
mov
clc
adc
dec
mov
movb
ds
adc
popa
mov
je
nop
push
push
push
loopne
ljmp
adc
and
push
and
lret
lcall
sbb
sub
ljmp
call
pop
aad
dec
icebp
or
out
push
push
vpshuflw
xor
fsubs
loop
sbb
test
pop
gs
into
enter
xchg
sbb
decl
dec
cmpsb
dec
das
xchg
cmp
bound
cmpsl
mov
aas
call
pop
mov
jmp
mov
int3
or
mov
add
in
lea
pop
sbb
jmp
fisttpl
test
cmp
in
and
mov
lahf
xor
ljmp
mov
mov
test
rolb
ljmp
or
push
test
imul
and
cltd
cmp
scas
mov
cmp
add
sbbb
pop
mov
jmp
pop
and
divb
nop
dec
mov
jae
fwait
mov
pop
cmc
ja
pop
or
cld
sbb
and
testl
jg
das
leave
cltd
cld
dec
push
roll
fildll
mov
jge
push
xlat
out
mov
xor
mov
cmp
or
sub
jnp
cmp
mov
push
mov
cmp
inc
mov
call
adc
mov
testl
inc
adc
jbe
mov
inc
movsl
iret
mov
clc
sbb
jmp
mov
rorl
sarb
push
mov
dec
das
lds
call
mov
js
shlb
ds
and
scas
lods
rcrb
and
test
jg
jmp
jo
cltd
adc
mov
movsb
sbb
repz
jmp
jbe
popf
data16
stos
es
call
in
jbe
jns
pop
add
dec
das
stos
fwait
add
loop
cmp
push
in
mov
ljmp
gs
jle
loop
xchg
pop
mov
add
xchg
push
inc
add
fisubrl
push
ljmp
insl
inc
pop
clc
push
cmpsb
scas
sub
mov
add
push
sbb
jecxz
leave
lock
decl
and
push
adc
test
aaa
cmp
cmp
add
pop
push
fildll
mov
fcomp
push
inc
push
movsb
jmp
mov
xchg
lcall
cmpb
shrb
mov
adc
lods
scas
popl
inc
out
lret
in
push
sti
iret
xor
xorl
lods
inc
nop
testl
fsubp
jl
jns
or
addr16
add
call
xor
jo
xchg
xchg
pop
insb
cmp
fcomps
pusha
scas
mov
clc
lcall
mov
popf
cmp
mov
and
xchg
pop
stc
ja
out
cmp
jmp
shll
out
es
flds
mov
lret
int
inc
adc
jmp
lahf
es
dec
adc
mov
into
test
xchg
pop
cs
call
mov
lock
lea
jnp
pop
push
out
adc
cmc
add
call
or
cmp
pop
gs
daa
push
enter
jg
inc
jle
push
mov
in
adc
das
rorb
cmc
fwait
loopne
mov
lea
loop
sbb
decl
cmpsl
outsb
imul
cmp
rcrl
dec
lods
xchg
fiaddl
ljmp
scas
pushl
jno
cld
pop
jl
xchg
ret
inc
dec
push
cmp
sbb
out
enter
icebp
sar
jmp
sub
cmpsb
js
pop
inc
std
cmp
aam
and
pop
dec
insb
sub
cmp
fcomip
jg
shll
dec
test
test
adc
mov
xchg
test
out
clc
ljmp
mov
mov
enter
outsb
push
jecxz
es
fsub
pushl
loop
lret
inc
lock
int
scas
or
xchg
std
test
cmp
call
push
jge
ds
jbe
jae
xchg
out
nop
bound
lret
jecxz
inc
test
std
fadds
sub
xchg
jno
int
mov
mov
add
sub
outsl
add
bnd
add
push
scas
mov
dec
icebp
ja,pn
call
jnp
ds
push
imulb
jae
pop
xchg
inc
ljmp
adc
jns
sahf
incl
mov
xlat
rcr
sbb
notl
arpl
ficompl
ror
lock
ljmp
repz
jle
xor
shl
pop
mov
repz
fucomip
insl
pop
fcos
ljmp
pop
sarl
dec
mov
bound
fists
sbb
mov
mov
ljmp
dec
mov
lahf
xor
dec
adc
cmp
mov
pop
hlt
cmpsb
dec
test
sbb
dec
cs
rcrl
bound
jecxz
jmp
xchg
aaa
imul
bnd
iret
xorb
sub
in
mov
cmp
pushl
dec
adc
stc
push
mulb
jl
push
pop
lods
adc
daa
add
mov
fcomip
lcall
fwait
adc
ret
sub
push
add
or
mov
mov
adc
outsb
jle
lds
or
jle
sub
outsb
xlat
adc
es
sub
inc
testb
decl
cmpsb
rcrl
inc
rorb
jns
aam
add
arpl
push
sbb
mov
and
inc
mov
mov
shrb
dec
std
stc
mov
fstps
add
pop
ja
or
ljmp
cli
fistl
addl
inc
and
popa
mov
xchg
push
or
mov
fldl
push
mov
aad
cmp
loop
inc
xchg
sbb
and
movsb
lcall
adcl
les
dec
push
xor
xchg
jo
mov
and
stc
clc
cltd
inc
cmp
decl
lcall
pop
push
xchg
push
loope,pt
mov
jle
js
mov
xchg
pushf
incl
jecxz
pop
movsl
jecxz
rorb
mov
addr16
lahf
mov
js
lods
pop
jl
scas
mov
ljmp
xchg
or
repnz
das
or
enter
test
stos
leave
insb
pushl
cld
jmp
push
push
lock
jp
adc
xor
sbb
mov
outsb
cmp
incl
add
stos
in
int3
inc
xlat
aad
sub
jnp
aaa
iret
jmp
and
bound
and
jmp
sbb
adc
out
inc
push
ljmp
gs
fucom
inc
fistl
fldl
imul
popf
add
adc
push
dec
pop
push
sub
orl
dec
stos
arpl
mov
stos
repnz
xor
cmp
cmp
out
cmc
out
dec
mov
lcall
loopne
fbld
sbb
testl
inc
cmp
mov
dec
fidivl
adcl
cmpb
pop
jns
xor
pop
mov
out
mov
dec
adc
xor
sub
mov
jmp
popf
insb
loopne
repnz
test
popf
pushf
cs
add
jno
in
xor
gs
mov
mov
lea
lcall
jbe
push
cs
das
dec
mov
xchg
pop
or
xchg
lds
call
cmp
in
loopne
pushf
mov
sbb
lea
xchg
jns
or
out
jg
shlb
incl
jno
inc
push
int3
adc
mov
mov
shr
lds
push
movsl
inc
fdivrl
jno
xchg
dec
push
mov
jle
add
lret
ljmp
mov
test
rcll
mov
adc
clc
xorb
call
sub
es
mov
dec
add
jns
fcmovnb
mov
aaa
mov
jg
mov
cmp
mov
xchg
cmc
dec
inc
mov
add
cli
in
out
adc
scas
loop
mov
cs
pop
shufps
int
push
jne
sbb
lcall
arpl
fidivl
popa
inc
rolb
les
or
mov
push
pushf
daa
pop
data16
shll
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
or
imul
iret
cld
enter
insl
fimull
add
pushf
movsl
sbbl
cmp
fnsave
push
pop
push
push
sub
mov
push
jo
cwtl
add
push
ds
mov
sub
or
push
jnp
add
in
jg
mov
ljmp
pushf
mov
call
push
cld
xlat
out
adc
xor
xor
test
pop
add
mov
pop
jle
adc
adc
stos
dec
xchg
nop
adc
mov
roll
movsl
mov
das
pushl
std
pushl
cmc
aad
fmul
lea
incb
daa
lods
add
adc
pushl
xlat
push
adc
push
sbb
push
in
adc
mov
pop
pop
mov
dec
cmc
mov
push
pop
std
mov
daa
insb
pop
es
into
call
adc
ljmp
xchg
in
iret
dec
xchg
clc
lcall
jae
ja
mov
jge
push
pop
addr16
movsb
dec
mov
push
ljmp
inc
mov
dec
adc
and
fistps
ds
adc
sarb
mov
mov
cmp
xchg
test
fmull
jno
jnp
pop
fsubl
jo
pop
jmp
jo
xchg
inc
xor
pop
subl
cmpsb
fsub
outsl
cmc
lret
scas
xchg
push
xchg
mov
or
mov
mov
xor
xor
dec
xor
lret
dec
sbb
cmp
pop
mov
ljmp
xchg
push
ss
fistpll
adcl
rorb
mov
xchg
xchg
mov
mov
popa
lea
mov
cmp
nop
mov
ds
pop
mov
jp
stos
in
outsl
mov
inc
xchg
mov
fcmovnb
or
insb
fnstsw
je
adc
jmp
cld
inc
dec
adcb
add
js
mov
lretw
pop
jmp
push
cli
mov
add
and
gs
into
mov
fldcw
lret
jmp
cmp
pop
sbb
or
ja
dec
clc
scas
or
or
roll
inc
pop
inc
inc
pop
cmp
add
xchg
jae
rorb
mov
sub
cld
and
stc
adc
sbb
inc
adc
cltd
rcrb
adc
xchg
pop
mov
ljmp
and
mov
lds
pushl
xchg
movsl
mov
dec
sub
push
mov
xchg
lret
fistpll
ds
or
cld
cld
rcrl
fisttpll
lock
mov
xor
xchg
sbb
wrmsr
mov
cwtl
cltd
imul
or
push
xor
fs
cmpsl
adc
pushf
aas
pop
into
loopne
sbb
dec
sbb
push
push
hlt
jo
mov
incl
aaa
roll
push
pusha
addr16
lret
test
ja
repnz
call
xor
out
shlb
push
int3
imul
add
sub
jo
jge
call
ja
std
cmpsl
or
push
cmp
repnz
div
xor
sub
mov
mov
cs
pop
xor
add
fs
ljmp
incl
rcrb
push
sbb
movsb
cvttps2pi
mov
mov
sbb
fstpl
stos
dec
pop
cltd
fisttpl
jo
mov
pop
sbb
sahf
call
push
fidivs
sahf
loope
ljmp
jl
push
stos
stos
lcall
add
outsb
dec
xlat
gs
mov
jmp
outsl
scas
pop
sar
daa
inc
test
aad
ss
pop
icebp
lcall
pusha
push
mov
movsl
faddl
and
inc
dec
ss
rorl
cs
cmp
test
jne
outsb
ret
icebp
movsl
xorl
cs
mov
call
mov
in
imull
dec
notl
pop
nop
loope
nop
sbb
xor
int
jg
cli
jbe
into
mov
adc
in
push
clc
repnz
rcl
pop
add
pop
cs
jg
mov
xor
mov
test
lea
imul
jmp
mov
mov
push
inc
inc
jl
ja
xor
sbb
mov
clc
push
sub
loope
mov
jl
fldcw
cld
ljmp
dec
push
int
mov
js
xchg
rcrl
ds
ds
jle
data16
mov
xor
fld1
js
jnp
mov
jnp
imul
fimull
leave
clc
das
mov
bound
outsl
mov
jbe
shrl
jle
test
pop
hlt
ljmp
xor
push
int3
das
and
pushf
test
fcmovb
loopne
mov
movsb
jle
pop
idiv
pushl
xchg
mov
mov
cld
int3
insb
fstps
cmp
dec
add
call
xchg
imul
cmp
imul
sub
or
mov
push
gs
lods
insl
ja
add
xor
int
add
xor
loopne
decl
lock
jmp
inc
test
adc
mov
std
out
jb
dec
in
in
incl
mov
push
sub
add
push
in
pushf
sub
cmc
mov
mov
mov
decl
stos
jno
nop
cwtl
mov
pop
adc
nop
mov
lds
push
mov
adc
cmp
mov
ret
mov
mov
je
mov
inc
jp
sub
jg
jmp
dec
es
inc
sbb
add
push
cmp
pop
add
sub
adc
call
loopne
inc
mov
stos
enter
sub
sub
movsl
and
aam
jge
in
mov
pushf
dec
pop
dec
arpl
fisubrs
xchg
test
push
dec
adc
insb
cmp
or
mov
inc
out
push
aaa
xor
add
mov
jg
out
nop
mov
mov
inc
inc
pop
inc
jns
fidivrl
rcrl
pop
mov
jg
push
xor
jbe
and
bound
pop
filds
adc
sbb
rorb
mov
bound
adc
pop
scas
mov
call
jmp
cmp
stos
adc
or
push
inc
mov
pop
loop
movsb
fdivr
call
cli
jge
sbb
into
mov
push
xor
mov
add
fimull
arpl
jge
cli
ljmp
push
lret
mov
cmp
mov
subl
addr16
push
ret
sti
scas
pusha
push
or
xor
fwait
mov
inc
aas
jmp
sub
mov
or
dec
mov
dec
or
pushl
shlb
cs
stc
in
dec
xor
inc
cmp
sbb
sub
mov
cmp
jl
sub
in
mov
shl
jp
xor
sti
jne
ljmp
push
xor
pop
push
sub
aam
add
addr16
mov
pop
leave
pop
lods
loopne
ljmp
push
cltd
dec
outsl
jecxz
mov
inc
cmp
mov
push
jmp
add
mov
dec
mov
outsb
test
fnstcw
push
add
cwtl
adc
lea
fs
cmpsl
aam
inc
sbb
ljmp
cmp
xchg
inc
jp
adc
dec
mov
add
mov
movsb
jg
lcall
in
nop
aaa
xchg
cli
stos
scas
sarb
mov
pop
stos
loope
bound
out
fdivrp
mov
sub
decl
clc
push
and
js
xchg
inc
inc
xchg
mov
das
cli
in
test
cmp
addr16
push
fadds
inc
xchg
sbb
lcall
mov
mov
icebp
pop
xor
movsl
clc
out
push
xchg
mov
imul
scas
clc
mov
outsl
jmp
xchg
sub
clc
xor
inc
fs
decl
sbbb
pop
les
es
scas
sbb
std
out
pushl
and
mov
lret
pop
inc
arpl
jge
xor
cmp
jmp
aas
inc
incl
fdivl
incl
sub
in
imul
xor
movsl
adc
sbb
repz
hlt
pop
hlt
lcall
cs
rorb
fadds
outsl
cli
xchg
jp
fistpll
cmp
fists
or
or
roll
cli
decl
lock
leave
mov
stc
fdivrl
adc
in
or
mov
mov
inc
sub
fcomip
ret
pop
jo
sbb
pop
popa
ljmp
sti
inc
push
jae
fwait
xchg
cltd
mov
fcomps
inc
loope
call
push
mov
jmp
repnz
jge
mov
enter
ret
pop
or
push
loope
inc
lahf
sub
into
mov
inc
js
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
pop
fucomi
addr16
cmp
shll
enter
inc
jb
dec
mov
sub
popa
mov
call
and
loop
inc
cli
adc
sub
outsl
cmpl
mov
add
cmp
mov
ret
sbbl
sub
sbb
dec
dec
dec
scas
testl
bound
jg
pop
xchg
jge
aam
out
add
cld
decl
xchg
or
sbb
inc
adc
popa
fwait
data16
rol
ljmp
sub
and
sbb
idivb
cmpsb
loopne
cld
movsl
pop
adc
pushf
jge
mov
mov
or
rclb
into
and
sahf
push
rorb
dec
je
jmp
dec
divb
and
leave
mov
mov
cmc
daa
lcall
mov
mov
lods
stos
ljmp
cld
adcl
popa
lods
dec
aaa
icebp
gs
test
les
incl
loop
clc
fnstsw
test
push
xchg
ret
scas
nop
xor
mov
push
sbb
fcomip
pushl
mov
fildl
lds
or
shrl
xchg
stc
mov
decl
roll
test
pop
push
test
pop
in
fsubrl
roll
adc
add
pop
xchg
mov
xor
cld
in
fistps
sbb
ja
adc
sub
fisttps
sub
cmp
and
jg
dec
hlt
mov
enter
in
lods
repnz
sub
outsl
ret
mov
jnp
sub
gs
sub
mov
es
adc
dec
ljmp
cli
jle
mov
in
aaa
popf
mov
nop
and
xchg
daa
in
mov
imul
decl
cwtl
sub
pop
fwait
mov
scas
jnp
popa
xor
or
jo
lcall
mov
std
inc
lahf
push
scas
cmp
xor
mov
jb
cmpb
mov
out
jb
mov
mov
mov
dec
cmc
xor
sbb
adc
ja
decl
jne
test
bound
mov
lods
adc
in
pusha
xor
cli
out
sub
fstpl
cltd
and
lcall
adc
xchg
lret
sarb
mov
pop
or
fldl
mov
call
insl
jbe
mov
scas
and
inc
dec
jb
lock
pop
je
and
sbb
stos
call
insl
inc
sti
cmc
sbb
sub
aas
mov
stc
pop
stc
pop
out
pop
mov
decl
sbb
mov
xchg
push
lods
xor
jo
jbe
les
mov
fcomip
pop
stos
push
ljmp
int
cmpsb
cmp
push
lods
sti
in
jo
add
in
dec
cmp
shll
fsubrl
loop
inc
pop
jae
aad
les
lods
sub
mov
xor
or
jmp
fistps
orl
mov
adc
push
decl
rcll
sbb
sbb
or
mov
sbb
xor
ljmp
jno
ljmp
nop
negl
and
xor
pop
cltd
call
push
jp
gs
xor
jmp
pushl
lds
sub
nop
push
roll
rorb
nop
notb
and
pop
jmp
pushl
mov
out
sub
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
add
adc
push
stc
in
cltd
cmovl
loopne
arpl
test
cmp
fbld
and
das
xchg
or
in
and
pop
popf
rcr
dec
jb
inc
inc
mov
jmp
mov
cwtl
jnp
fwait
adc
inc
popa
lret
sti
sub
in
pop
cmp
xor
outsb
and
add
cwtl
add
jg
xor
ja
mov
sbb
dec
and
in
lret
jno
cmp
pop
jae
mov
aad
ds
adc
cld
insb
in
ljmp
repnz
mov
jle
cmp
or
xor
pushf
lds
push
cmp
pushl
dec
fs
fsubs
ds
loopne
pop
insl
xchg
pop
sub
add
xchg
mov
mov
jmp
cmc
pop
and
or
pop
fdivrs
mov
and
sahf
nop
das
pop
pop
scas
xchg
mov
lcall
test
in
lret
push
inc
sbb
sub
rolb
aad
cmp
cmp
fs
push
aam
xchg
adc
call
or
repnz
clc
into
mov
jno
cwtl
dec
inc
enter
js
mov
pushl
scas
mov
push
out
cmp
loop
push
push
add
sbb
cmp
jmp
bound
sahf
test
data16
mov
daa
cmp
aas
lock
fdiv
fdivr
incl
or
or
repz
inc
or
and
divb
ja
mov
call
into
lock
or
pop
fdivl
decl
iret
adc
cmpsl
lcall
push
push
push
sub
adc
lcall
jno
into
push
scas
das
lret
das
mov
mov
loopne
jle
enter
repz
ljmp
adc
inc
mov
pop
cli
mov
out
hlt
mov
jge
arpl
dec
ljmp
sub
sub
out
sub
daa
pop
pop
jle
loop
jb
push
add
mov
cmpsb
ja
cli
or
push
pop
cwtl
or
push
or
ss
inc
xchg
clc
push
icebp
in
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
or
out
ljmp
mov
insb
dec
fisubs
mov
sbb
call
mov
lds
jb
cmpsl
stos
lret
adc
je
push
movsl
call
addr16
jmp
push
inc
inc
cli
xor
add
rolb
fadd
scas
mov
push
cmp
jmp
repnz
stos
aad
and
push
bound
mov
sub
mov
pushl
lret
mov
shr
adc
outsl
pop
add
shll
jmp
imul
cmp
outsl
in
inc
test
movsb
jnp
incl
fidivrs
mov
lock
dec
js
je
adc
adc
call
mov
mov
dec
xchg
loope
in
in
push
sbb
out
dec
jbe
nop
jg
ljmp
ret
push
movb
inc
cwtl
xor
pop
jge
mov
roll
into
cmp
inc
xchg
sub
mov
das
adc
jno
cmpsl
out
mov
in
scas
jmp
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
add
in
or
dec
and
out
xchg
aad
mov
sbb
fiaddl
out
jmp
sbb
or
mov
fidivs
push
dec
aad
insb
out
xor
xor
and
xchg
mov
ljmp
cli
mov
les
and
jge
je
dec
dec
add
jns
dec
call
jmp
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
jb
xchg
outsb
mov
lcall
inc
rcr
lea
int
test
sub
mov
pushl
and
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
pop
mov
incl
insb
mov
adc
mov
xor
lahf
mov
cwtl
movsb
dec
xchg
and
sahf
dec
ficomps
call
pushf
and
and
jae
bound
adc
xor
and
inc
push
inc
std
hlt
lds
jmp
or
imull
hlt
pop
sbb
aas
test
push
cmp
jge
into
mov
pop
shll
mov
sti
mov
mov
push
out
jae
add
popf
aas
jmp
jle
test
es
fldcw
bound
and
adc
xor
sbb
imul
testb
pop
fwait
scas
je
adc
popa
add
pop
mov
loopne
pop
les
cmc
sub
aad
dec
shll
fwait
dec
jne
xchg
push
push
jmp
cli
cs
mov
ljmp
push
pop
mov
enter
adc
jno
nop
decb
pushl
cmp
scas
push
dec
mov
iret
or
lret
out
mov
ljmp
push
push
testl
mov
int3
xchg
cmp
sahf
inc
into
mov
in
mov
incl
sti
shlb
or
mov
aad
push
xlat
mov
jmp
iret
std
and
jne
rcl
and
fsubr
popa
fs
jb
lret
pop
pop
sub
popa
insl
and
decl
stc
into
in
jae
xchg
xchg
lock
test
jno
or
popf
push
imul
push
sub
ja
cli
jmp
jb
mov
mov
pop
cmc
mov
sub
pushl
mov
push
jmp
xor
jb
mov
das
ret
rol
push
aad
xor
decb
aam
ljmp
sbb
insl
sbb
nop
in
stc
lods
decl
and
pushf
mov
xchg
inc
lcall
frstor
and
mov
push
adc
faddl
add
inc
shrb
jg
add
outsb
adc
into
mull
decl
or
ds
adc
xor
mov
cltd
inc
adc
push
mov
xchg
adc
sub
out
cs
js
data16
dec
dec
pop
stos
or
inc
dec
add
call
test
sub
in
xchg
aam
xchg
adc
sbb
ud1
xchg
ljmp
lds
sub
add
xor
pop
mov
xchg
xor
ljmp
insl
pushl
mov
lahf
push
fs
popf
test
hlt
sub
insl
mov
dec
xor
jmp
mov
das
push
sub
daa
aam
and
inc
sub
mov
dec
pushf
ffreep
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
popf
mov
std
js
sub
hlt
shrb
pop
arpl
test
les
sbb
and
aam
int
pop
sar
call
adc
jns
popa
xchg
adc
push
outsb
rcll
nop
push
loopne
xorl
loope
call
mov
cltd
out
xchg
dec
or
or
stc
pop
rolb
popa
addb
mov
sbb
xchg
call
mov
jb
xlat
mov
dec
stc
jmp
les
leave
pushf
adc
sbb
in
sub
sub
push
lret
mov
push
stc
sbb
movsl
sbb
lods
rclb
clc
push
stos
mov
push
in
xchg
xor
call
test
shll
xchg
gs
add
mov
inc
scas
cli
mov
adc
jns
jae
popa
das
testb
xor
lock
push
int
xor
add
lods
lods
ret
sahf
fistpl
ret
es
xor
jb
sbb
lcall
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
inc
sbb
repz
cli
mov
pop
push
sbb
xchg
dec
cmp
iret
ja
ljmp
leave
jle
xor
loope
in
pop
cmp
mov
xor
xchg
mov
jmp
imul
mov
scas
push
lret
bound
fistps
insl
dec
cld
jg
out
shl
sbb
cmp
incl
sub
orb
ss
mov
popf
mov
hlt
pop
dec
mov
decl
or
cli
loop
hlt
mov
orl
aam
sbb
and
out
outsb
aaa
fbld
mov
test
ja
jp
pop
mov
inc
adc
push
lds
mov
decl
mov
sub
test
or
pop
ret
fildl
inc
xchg
jno
jns
sar
pop
cld
jmp
adc
call
mov
ret
sub
mov
nop
negb
dec
loop
add
aaa
std
inc
sahf
push
pop
adc
ficompl
aam
xchg
es
or
jo
ljmp
aas
fs
fcmovb
and
xor
xchg
loope
and
outsb
lret
xchg
orb
jns
jae
pushf
xor
push
cmp
adc
mov
out
jno
inc
dec
loop
push
or
lds
test
cmpsb
mov
mov
adc
xor
or
sub
incl
mov
sahf
and
sbb
roll
lcall
pop
xchg
sbb
cli
test
jmp
mov
adc
lcall
xchg
lods
les
or
daa
mov
decl
fucomp
fs
je
push
push
mov
push
ret
mov
mov
jns
call
movsb
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
inc
fsubp
inc
inc
loope
mov
xor
repz
mov
notl
pushf
pusha
nop
mov
decl
push
imul
cs
xchg
ss
mov
out
mov
das
fcoms
inc
sub
call
loop
jne
sahf
add
cli
aad
imull
add
aas
test
ret
cmp
pushl
cld
das
je
sub
lcall
shll
popa
mov
mov
call
adcb
pop
fdivp
lahf
sti
xchg
call
pop
out
out
cmpb
lock
mov
dec
iret
cmc
inc
into
mov
sub
pop
dec
imul
add
rorb
loopne
jmp
sbb
cmp
mov
mov
adc
xchg
out
fdivl
stos
mov
gs
adc
sbb
mov
mov
or
int
mov
mul
add
call
loopne
push
and
xor
cmpsb
mov
inc
cmpsb
movsl
jecxz
stos
and
sbb
ljmp
fbstp
dec
scas
jns
mov
icebp
push
scas
test
into
push
sahf
inc
test
pushf
cmpsb
repnz
incl
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
scas
sub
inc
mov
stos
xlat
incl
push
lds
dec
ds
loope
add
mov
bound
dec
xchg
mov
aaa
jno
push
adc
lcall
arpl
push
mov
and
loope
bnd
addr16
sub
adc
lret
mov
fsubr
jbe
jecxz
mov
mov
xchg
mov
call
push
pop
push
cmpsb
adc
imul
add
negl
decl
ret
pop
and
fs
decl
jp
popf
mov
xor
mov
dec
cmp
sbb
lods
mov
scas
clc
ds
lcall
iret
jmp
test
imul
mov
stos
test
insl
sbbb
push
arpl
ret
sbb
sbb
lock
pop
outsb
roll
cld
call
sbb
mov
xor
stos
int3
les
fdivr
fbstp
jb
xor
dec
mov
mov
sub
cmp
inc
in
xchg
sbb
dec
in
les
inc
add
sbb
xchg
lret
js
movzwl
xlat
clc
push
int3
maskmovq
testl
aad
sub
xor
pop
loope
incl
jmp
movsb
or
fmull
cmp
lock
decl
cmp
jbe
lods
xor
das
ja
jmp
mov
loope
inc
lahf
movsb
sub
call
loopw
loop
push
xchg
pop
popf
jnp
into
ja
shll
cmp
mov
fistpl
jmp
cmp
pop
cmp
icebp
cs
pop
cmp
pop
pop
data16
call
cmpsb
lea
xchg
pop
andb
dec
jb
jb
test
test
pop
aaa
stos
add
xor
cmp
inc
faddl
dec
mov
dec
mov
pusha
data16
aaa
rcrl
dec
jno
decl
xchg
mov
dec
sti
addr16
into
pop
fwait
inc
aas
lea
xchg
cwtl
stc
push
sub
test
xlat
and
xor
int
les
lcall
lods
jnp
and
cs
ror
data16
lcall
ret
frstor
test
jno
dec
cld
push
xchg
lods
add
ljmp
mov
clc
fidivs
xchg
cltd
sub
test
iret
xchg
xchg
call
dec
cmpsl
adc
aas
or
pop
and
faddp
xchg
jmp
notb
xor
data16
cwtl
fwait
push
sub
test
sbb
inc
addr16
jmp
pusha
imul
repnz
jno
das
pop
or
sub
mov
mov
popf
sbb
pop
repz
jne
push
outsl
fs
stos
pop
mov
insb
icebp
data16
call
lret
insb
and
orb
cmp
inc
xchg
and
push
and
push
mov
rcrl
xchg
push
mov
pop
ljmp
enter
in
mov
aad
pop
and
aaa
cmp
xor
jb
cltd
lods
in
repz
jmp
fdiv
mov
enter
cmpsl
xchg
cmp
xchg
pop
push
pop
cmp
mov
ljmp
xor
or
rcll
xor
outsb
sbb
scas
mov
sub
call
movsl
jmp
cmp
cmc
push
mov
inc
loopne
mov
push
insb
xchg
repnz
lds
in
pop
mov
and
mov
cwtl
xor
icebp
rcrl
sbb
xchg
ljmp
mov
or
pop
cmp
not
adc
xchg
imul
insl
pop
cmp
jmp
sub
int3
out
inc
push
inc
mov
mov
xor
ljmp
sub
dec
mov
push
sbb
adcl
lods
add
mov
decl
stos
fcmovne
adc
shll
bnd
adc
ret
into
iret
notb
jnp
std
sahf
inc
sbb
and
cld
jl
add
test
imul
lock
outsl
push
les
insl
mov
icebp
or
cmp
xcrypt-cbc
cmpsl
aam
mov
bnd
and
aad
scas
jle
mov
dec
mov
lods
ss
aas
in
faddp
adc
mov
es
push
jg
ja
stos
sbb
ret
sbb
xchg
icebp
cmp
mov
ljmp
ds
dec
fnstenv
cwtl
xor
aas
xor
add
adc
cld
aaa
fiaddl
or
pop
aas
push
jb
dec
pop
lea
inc
or
faddl
fildl
mov
pop
adc
out
mov
xchg
sbb
sub
out
mov
xchg
pushl
out
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
mov
mov
jl
xchg
outsb
and
ret
adc
testb
cmp
sbb
pop
leave
xor
jmp
sub
mov
ds
andb
lods
lahf
or
and
lcall
jge
test
fs
jb
xor
sbb
fwait
and
lods
je
sbb
pop
incl
test
imul
mov
push
aam
inc
outsl
push
stc
add
call
or
mov
cmc
lret
sbb
jo
push
dec
sahf
dec
push
push
or
ljmp
pop
xchg
cmp
and
push
mov
fstps
daa
stos
shll
xor
pop
lock
ljmp
mov
pop
out
pop
add
aam
or
fsts
fcompl
and
shlb
cmp
inc
fwait
mov
inc
ret
sbb
mov
lcall
xchg
pushf
test
push
push
mov
into
in
or
ret
std
call
push
rclb
mov
xchg
pusha
jg
iret
pop
jb
adc
jp
mov
pop
mov
mov
cmp
xchg
pusha
mov
jb
push
outsb
xlat
cmp
jnp
jg
std
jmp
xor
dec
test
shlb
or
xchg
enter
inc
ret
sub
aaa
jge
mov
mov
aam
out
and
test
xchg
inc
ja
add
lcall
add
xchg
fidivrl
sbb
cmp
rcrl
sbb
dec
mov
insb
cmp
fdivrp
mov
scas
sub
jno
xor
test
sbb
ds
mov
lcall
test
addr16
in
addr16
jmp
pop
fiadds
loop
adc
jg
xlat
stos
pop
insl
push
mov
jae
js
lea
repnz
daa
call
call
mov
insl
loopne
push
repz
mov
loop
adcb
gs
xor
arpl
mov
mov
lock
jbe
mov
shrl
stc
xor
stos
cltd
mov
insb
leave
push
jg
jmp
mov
jl
andb
bound
stc
xchg
pop
mov
dec
jmp
pop
pop
subb
in
jp
scas
push
in
ljmp
dec
stos
xchg
icebp
std
enter
jecxz
jg
cmpxchg
js
inc
test
xor
cmp
cld
and
mov
jmp
addr16
or
rorb
dec
bswap
test
inc
push
or
cmp
inc
ljmp
or
test
push
or
dec
jnp
mov
pushf
sub
pop
inc
pop
clc
decl
fdivrs
movsb
sti
fbstp
jo
ljmp
mov
cmp
inc
repnz
sub
fdivrl
mov
scas
mov
inc
imul
mov
fisttpl
push
and
sahf
adcb
push
ja
push
jl
imul
cli
inc
orb
inc
push
ja
mov
out
mov
jg
popf
roll
test
divl
ljmp
mov
dec
jge
mov
testb
cmp
mov
ror
and
test
in
add
bnd
pop
mov
inc
cmc
cli
int3
cwtl
mov
xor
mov
out
sbb
jb
and
pop
or
add
jg
les
inc
cli
add
pop
and
ljmp
aad
popa
mov
dec
scas
cmp
movsb
loope
xor
mov
stc
in
ficoms
pop
test
pop
insl
dec
repz
movsl
mov
lcall
xchg
call
sbb
add
mov
push
push
rcrl
or
mov
and
xchg
call
push
cltd
or
adc
sub
std
pop
inc
mov
daa
stos
fadd
and
dec
ljmp
sbb
out
or
popl
clc
scas
xchg
sbb
fildl
cmp
adc
adc
push
mov
shrl
jae
xor
aaa
aas
xchg
jns
mov
fists
sti
aam
jb,pt
shll
jge
ds
bound
lcall
cwtl
xchg
fisubs
aaa
or
sahf
cmc
pop
jbe
sbb
jmp
xchg
out
in
dec
xchg
cmp
fmuls
test
xor
outsb
inc
push
sub
aad
mov
xchg
mov
push
cmp
lcall
dec
paddsw
dec
mov
leave
jmp
push
sbb
incl
pop
jmp
jns
loope
lea
mov
xchg
add
inc
lea
icebp
ret
jmp
cs
xchg
pop
mov
gs
sub
mov
inc
pop
dec
push
stos
add
sub
aaa
std
sbb
push
mov
in
rclb
adc
cld
in
call
stos
movl
idivb
and
shrl
enter
aad
mov
mov
cmpl
lds
hlt
xchg
cmc
js
fiaddl
outsb
out
stos
jno
add
dec
pop
clc
jg
mov
xor
mov
rolb
and
xor
push
jne
je
bound
lcall
je
jb
icebp
mov
movsb
and
push
pushf
add
aam
mov
gs
xchg
jb
cmp
mov
ss
adc
stos
int3
fdivs
shlb
out
adc
inc
scas
and
call
push
and
adc
jns
shlb
cmp
mov
inc
fcoms
dec
in
xor
stos
mov
out
pop
ds
mov
push
inc
lret
addr16
faddp
icebp
lcall
jno
shr
out
setbe
in
mov
jae
stos
sub
jg
xor
fs
in
jne
jmp
mov
lcall
xor
faddp
bound
ja
cmp
out
mov
pop
lcall
pop
or
out
sub
sub
adc
dec
mov
inc
inc
arpl
mov
ret
or
and
lcall
fcmovu
pop
sbb
ds
inc
xor
cld
daa
imul
hlt
sbbb
pop
loopne
scas
insl
decb
into
jmp
pop
add
mov
mov
popa
lcall
fdiv
and
or
sbb
sbb
jle
mov
stos
icebp
fs
rcrl
lcall
adc
aam
ds
lds
lret
lret
sbb
clc
dec
dec
and
cmp
iret
jg
pop
std
cmp
into
xchg
subb
push
adc
add
mov
incl
pop
pop
dec
inc
cmpsb
cmp
data16
mov
in
daa
add
xor
popa
push
jp
push
ljmp
incl
adc
and
xor
sub
nop
sbbl
inc
xchg
mull
in
insb
push
jne
pop
xchg
pop
sub
ds
ljmp
xchg
out
mov
int
xlat
call
ljmp
pop
incl
ljmp
jecxz
js
push
mov
pushf
inc
in
cwtl
enter
lea
or
incl
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
mov
cmp
pop
adcb
cmc
pop
jl
jae
clc
push
data16
loope
pop
shlb
jg
decl
mov
dec
cmp
pusha
outsb
insl
nop
aas
adc
jmp
loop
adc
add
add
push
loop
cmp
mov
aam
loopne
call
push
add
call
or
sub
leave
push
imul
testl
call
int
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
jmp
mov
aaa
dec
insb
call
scas
pop
xor
dec
inc
cmp
inc
cmp
mov
loope
add
xchg
sgdtl
pushl
icebp
aas
movsl
movsl
or
sbb
push
jl
jno
shlb
push
sbb
mov
cmp
mov
movsb
push
jno
mov
sbb
dec
fistl
or
arpl
mov
lret
pop
shlb
ja
lret
bound
cmp
jg
push
movsb
mov
inc
decb
sbb
jno
jno
pop
xor
xor
sbb
lcall
jns
inc
dec
adc
popa
mov
sti
fstpt
add
test
out
mulb
mov
push
ljmp
call
fidivl
je
or
push
addb
jo
jmp
out
rcl
mov
mov
jno
xchg
sbb
push
push
call
clc
daa
mov
cs
nop
jo
rcll
adc
add
lret
out
cmp
inc
pop
imul
lcall
test
jne
and
dec
mov
mov
or
pushf
fwait
stos
shlb
or
cmp
ss
xchg
xchg
ds
pushl
lods
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
add
inc
stc
sub
js
sub
jns
pop
mov
xor
fmulp
movsl
jl
mov
jbe
testl
dec
push
push
das
xchg
cld
or
lahf
adc
mov
lds
mov
dec
xlat
stc
ja
arpl
and
mov
shlb
into
jne
mov
repnz
jge
cmp
push
inc
sub
mov
bound
pop
loopne
jmp
adc
pop
xor
mov
and
jmp
jle
in
xchg
mov
cmc
or
dec
sbb
daa
jns
xchg
mov
sahf
mov
dec
nop
pop
push
add
mov
and
jb
into
ljmp
push
xchg
pop
adc
fcomi
push
fstpt
or
xchg
add
pop
ljmp
push
sub
mov
cmpsb
aam
lods
adc
mov
hlt
add
in
add
jg
dec
ret
cs
je
inc
sbb
adc
sbb
sbb
outsb
lcall
push
jae
jb
leave
rcll
xor
arpl
dec
pop
xlat
inc
lock
mov
incl
movsl
sahf
arpl
inc
adc
in
sub
subb
scas
push
lea
rcll
mov
ljmp
add
stc
add
or
sub
or
mov
pop
jg
incl
sbb
in
sahf
fidivs
dec
repnz
sbb
fwait
mov
lahf
pushl
fldcw
push
insl
pop
fsubrs
imul
movsl
or
mov
or
lcall
sub
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
imul
sbbb
clc
incl
mov
pop
pop
arpl
pop
mov
xchg
mov
sbb
or
fwait
sub
pusha
insb
and
mov
jbe
xchg
push
loopne
call
ss
cs
xchg
cmc
aas
sub
jo
movl
test
mov
fcmovne
dec
xor
mov
xlat
sti
movaps
insl
mov
arpl
movsl
fnstsw
mov
ds
fisubs
cmp
cmp
adc
jns
cmp
xlat
adc
rcrb
lods
adc
cmc
lret
aaa
lret
in
xchg
dec
xchg
jno
jl
shlb
mov
jmp
xor
popa
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
inc
xchg
incl
lods
out
incl
shrb
icebp
mov
xchg
nop
cmp
arpl
in
call
or
xchg
and
icebp
mov
xor
xchg
subb
lret
mov
lock
cmpsb
push
std
decl
inc
xor
push
adc
js
stos
sub
jl
lcall
call
aaa
jb
cltd
lods
jecxz
push
dec
jmp
jg
imul
mov
arpl
aad
jno
lahf
cmp
push
add
pusha
scas
clc
decl
pop
push
stos
or
cmpl
ret
repz
dec
lock
cmpsl
ss
insl
xchg
lods
fcomip
incl
fwait
icebp
je
aad
std
fidivrl
or
jecxz
cli
out
adc
inc
xchg
cmp
cld
jno
lahf
aam
inc
out
sbb
jo
aas
outsl
cmp
sub
addr16
mov
cmpsb
jbe
dec
jmp
jae
xor
xchg
fistpll
mov
scas
in
out
std
jns
mov
sbb
mov
cmp
jbe
out
in
add
aam
xor
ja
xchg
out
inc
xor
xor
push
xchg
adc
xchg
ljmp
push
mov
push
jnp
push
sub
adc
and
cli
gs
dec
dec
xchg
ljmp
lcall
jge
sbb
mov
cmp
dec
enter
iret
sbb
sar
add
cs
loopne
mov
je
mov
loopne
mov
xor
lcall
out
add
daa
dec
pop
sti
das
pop
scas
je
push
mov
pop
out
inc
cmp
add
adcl
inc
daa
mov
mov
sarb
out
fucom
fwait
or
std
add
add
lcall
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
es
cld
mov
enter
std
adc
mov
lcall
ss
inc
ds
mov
cltd
pushf
popa
jnp
xor
sti
scas
pushf
xchg
jne
pusha
cli
sub
jmp
lret
into
fists
pop
lret
jae
xchg
loope
pop
mov
xor
es
ljmp
jecxz,pt
and
shrb
sti
fnstcw
pop
mov
pop
movsl
pop
push
fistpl
test
add
clc
call
lcall
or
test
mov
sub
call
or
cmp
inc
lods
fiadds
dec
leave
cmpl
lret
test
icebp
push
fistl
and
cmpsb
sbb
inc
xchg
adc
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
loopne
vpperm
js
fdivrs
mov
incl
sub
arpl
mov
lods
repnz
callw
jle
cmc
test
addb
dec
lock
push
xchg
adc
and
out
add
xchg
xor
loopne
or
ljmp
lcall
pop
sub
fisttpll
dec
lret
mov
insl
popf
xlat
imul
movsb
stc
lahf
gs
ja
xor
loopne
js
push
mov
pop
push
xchg
daa
ljmp
xchg
mull
jns
sub
into
leave
imul
sub
mov
mov
adc
inc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
or
cmp
jmp
lods
mov
into
sahf
loope
lds
sub
lea
mov
lahf
fisttpll
int
mov
scas
jmp
sbb
jle
pop
inc
mov
lret
adc
mov
idivl
icebp
jnp
jnp
mov
xchg
pushl
call
test
in
iret
popf
aas
cmpsl
mov
in
lret
pop
sbb
out
idiv
decl
shr
inc
sub
xchg
bound
insb
ja
mov
nop
add
or
inc
adc
incl
stc
mov
inc
push
in
aam
push
mov
out
inc
mov
fcomip
ljmp
sub
sub
xchg
dec
mov
cmp
ficoms
mov
negb
cs
jae
mov
cmp
stc
sub
adc
pop
jl
jle
or
decl
mov
jl
das
std
mov
pop
outsb
xor
push
sub
jmp
hlt
pop
fnsave
pop
fisubl
in
xor
and
shll
decl
sbb
mov
test
imul
es
push
fstpt
mov
mov
jb
test
cmp
jl
dec
testb
js
lret
xchg
xor
insl
imul
mov
ret
add
lret
jmp
ret
test
shlb
fmull
or
stc
mov
jo
jp
aas
stos
push
into
pop
xor
jg
and
adc
cmpsb
out
sub
dec
aaa
clc
dec
popf
jne
ds
mov
rol
ljmp
lods
pop
jo
es
pusha
stos
mov
xor
out
mov
sbbb
inc
out
dec
and
xor
mov
cmpsb
sbb
sbb
pushl
push
sub
and
sub
popf
push
pop
inc
ss
adc
jg
mov
mov
mov
jno
pusha
lock
dec
xchg
repz
xorb
add
mov
decl
jo
mov
rcr
lea
ljmp
jg
movsb
cmc
imul
in
lods
bound
outsl
data16
inc
mov
ljmp
ret
sub
dec
dec
lea
add
mov
incl
mov
iret
dec
les
pop
xchg
jecxz
and
xchg
xchg
xor
call
inc
xchg
sbb
cmc
cmpb
sbb
push
and
fisttpll
notl
jmp
lods
dec
addr16
stos
add
or
stos
mov
adc
pop
push
shrl
push
decl
sbbb
pop
sub
and
bound
xchg
jp
sbb
xor
lea
jmp
call
std
mov
mov
call
mov
pop
push
loope
and
pushl
jnp
dec
js
insl
lods
lret
and
mov
lret
pop
rolb
test
jmp
or
pop
daa
lahf
int
and
cmpsb
or
lods
xchg
cmp
outsb
iret
stc
push
cmp
nop
fs
push
idiv
aam
cmp
jb
mov
adc
filds
dec
push
push
push
mov
ljmp
sahf
adc
adc
cmp
test
push
pop
or
cs
or
shl
push
cmp
lock
push
add
outsl
pushf
push
cmpsb
insl
adc
pop
jle
ljmp
and
mov
fisttpl
filds
imul
out
cmp
ficoms
cmp
jmp
push
jle
loope
aad
dec
add
pop
dec
sbb
rolb
rcll
pushf
ja
loopne
jecxz
mov
dec
mov
repnz
aas
sub
fstpt
adcl
decl
imul
xchg
mov
mov
mov
leave
popa
test
mov
ficomps
in
movsl
push
push
adc
fldenv
decl
ret
les
mov
fwait
or
call
dec
fwait
ss
push
add
aam
incl
mov
sbb
pop
cs
mov
xlat
das
sbb
mov
cli
rclb
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
inc
dec
insb
xchg
jno
add
xor
pushl
inc
and
mov
and
or
xor
sarl
xchg
add
and
in
mov
incl
and
call
aad
popa
fwait
xchg
sbbb
mov
jns
loopne
push
call
stos
popa
mov
dec
lods
sbb
mov
jecxz
mov
cmp
decl
cwtl
aam
push
mov
inc
cmc
pop
es
cmp
aam
xorl
fsubrl
jne
jg
out
imul
int
std
lods
out
mov
mov
ljmp
fcoml
push
inc
inc
mov
pop
rcl
or
mov
and
aam
dec
sbb
incl
popf
jno
popf
xchg
jb
and
leave
xor
ljmp
outsl
adc
shll
adc
inc
in
sbb
out
or
cmpsl
adc
push
rorb
testl
inc
xor
dec
incl
mov
add
test
cmovbe
mov
mov
jne
ss
sti
stos
sub
ljmp
jl
xchg
pop
inc
gs
push
iret
cld
xor
add
mov
push
data16
movsl
xchg
in
icebp
adc
push
fwait
inc
scas
adc
xchg
jmp
rcrl
or
adc
adc
test
mov
dec
je
jmp
inc
das
add
sti
rclb
push
enter
xor
jp
mov
mov
mov
dec
rol
mov
push
fildl
hlt
inc
bound
add
mov
lret
push
jp
sahf
aas
repnz
out
sahf
in
sbb
sbb
dec
jp
inc
clc
ficomps
add
sub
and
sbb
stos
movsl
add
in
lret
lea
inc
mov
push
or
daa
inc
xor
pop
ret
in
push
mov
scas
or
std
ret
mov
scas
pushl
jecxz
xor
sti
mov
inc
jo
fsubs
sbb
xorl
inc
add
frstor
push
das
out
jle
adc
jle
sub
movsl
and
adc
incl
cmp
mov
jmp
sub
adc
adc
xor
decl
mov
mov
cmpl
jo
jp
jnp
call
sbb
xchg
ds
jnp
adcb
je
icebp
dec
data16
sub
lret
lcall
idiv
test
mov
fsub
repnz
bound
or
xchg
lcall
das
lret
out
cmp
in
shll
jne
clc
repz
push
xchg
arpl
jg
sbb
lcall
push
adc
mov
mov
out
ljmp
sub
push
sbb
repz
pop
int3
ss
or
push
push
shrb
mov
lret
and
jne
push
ljmp
cld
inc
in
push
add
clc
stos
or
sbb
ds
fcomps
idiv
push
std
lcall
xlat
lahf
leave
inc
insb
out
xorb
shl
mov
sar
incl
jmp
dec
call
fldcw
inc
jl,pt
mov
mov
insl
push
pushl
les
ret
push
sub
or
jmp
jge
adc
xchg
fildll
push
lcall
data16
jmp
das
rolb
push
ret
and
push
decl
pushl
out
shl
pop
test
mov
xchg
sbb
frstor
jo
call
or
add
jp
fstps
mov
pop
mov
test
mov
clc
cmp
jns
decl
scas
fisttpl
aas
popf
xor
scas
pop
fldenv
bswap
hlt
sbb
lcall
aam
sub
cli
sbb
test
pop
adcl
inc
inc
mov
sbb
xchg
arpl
insb
fisubs
ja
sbbb
and
daa
jne
leave
ss
mov
ljmp
into
pop
jecxz
or
sub
add
in
gs
inc
insl
mov
mov
pop
push
js
mov
arpl
jg
mov
mov
cltd
in
add
jns
sub
pop
rcl
and
jo
inc
adc
push
rcrl
mov
xchg
out
jbe
sbb
rclb
jg
dec
test
mov
mov
dec
sbb
jb
push
jne
jo
popf
test
mov
dec
sti
insl
sbb
lcall
push
and
imul
jp
lcall
cli
cmp
testl
mov
aam
add
push
out
jg
incl
incb
pop
mov
add
jp
dec
loopne
xchg
mov
cmp
inc
ret
jne
outsb
stc
stc
imull
aas
ss
mov
shrl
aaa
repz
mov
out
fwait
and
lds
outsb
or
mov
lahf
xor
lods
test
mov
inc
rclb
push
lret
daa
mov
mov
or
clc
inc
mov
push
push
decl
andb
pop
cmp
and
push
stos
or
mov
xor
cmpsb
mov
cld
sti
sub
push
dec
cmp
ja
fstp
cmp
cmp
inc
cli
jl
cmp
adc
call
notl
sti
pop
cmp
andl
push
inc
sub
cmp
mov
mov
push
push
jp
stos
cli
aad
ljmp
aam
stos
push
movsb
cmpb
out
sbb
addr16
movsb
sbb
imul
pop
rcrl
mov
stc
cmp
cmp
lret
cmp
lahf
dec
dec
lods
mov
stc
ljmp
stc
sub
xor
lods
push
cmpsb
dec
xchg
int3
sbb
sub
pop
cld
mov
pop
subl
and
push
outsb
sub
cmpsb
jg
push
add
call
inc
sub
sub
cmp
out
adc
add
arpl
lods
lea
sbbl
imul
lcall
mov
jp
or
mov
jno
adc
bound
dec
adc
ret
lea
in
pushl
push
sbb
xchg
test
jle
cmp
sub
jl
xchg
dec
cld
jmp
leave
push
pop
outsl
cltd
dec
add
sbb
mov
fimuls
gs
dec
pop
mov
cli
dec
mov
out
idivb
ja
cltd
pop
or
cmp
bnd
movsb
push
test
ljmp
je
jno
jno
and
mov
enter
pop
mov
arpl
push
sbb
sar
sub
jae
in
lret
jecxz
or
repnz
korw
xor
decl
jns
nop
dec
mov
test
xchg
ss
outsl
data16
cmpsl
flds
imul
sub
push
jmp
fsts
jl
mov
cmpl
scas
adc
or
leave
fwait
sub
data16
jmp
cld
pusha
xor
repz
sbb
and
cmp
shr
pop
dec
daa
mov
mov
lock
push
cmp
call
lea
es
inc
adc
outsl
std
dec
lock
ds
sub
insb
dec
mov
jmp
xchg
or
mov
loop
out
xor
dec
lods
rcrl
inc
cmp
enter
clc
pushl
inc
dec
mov
and
sub
call
dec
arpl
pop
push
or
mov
pushl
jnp
push
cmovg
aam
daa
xor
addr16
mov
mov
outsl
xchg
popa
add
out
pop
mov
cmp
adc
inc
popa
out
and
jne
xchg
pop
inc
jle
arpl
ja
inc
negl
add
xor
or
test
aad
xchg
and
or
or
mov
pop
jns
jp
aaa
or
dec
loopne
sbb
and
lcall
mov
add
mov
pop
inc
pop
xchg
loope
sti
daa
jge
call
push
cli
icebp
aad
das
jnp
dec
pop
pop
loopne
mov
mov
int3
or
pusha
jno
jg
dec
push
mov
adc
in
out
mov
pop
mov
std
jbe
sbb
std
call
lcall
cmp
imul
test
cmp
sub
lahf
mov
mov
ja
rol
aas
dec
push
xchg
std
call
pop
je
add
push
out
inc
sbbb
add
cmpsb
lcall
sub
mov
cvtdq2ps
dec
fadd
fisubs
clc
mov
push
push
adc
pushf
sbb
out
cli
lcall
inc
data16
dec
xor
or
jle
mov
jmp
decl
insb
call
sub
stos
jmp
mov
test
mov
arpl
addr16
out
sbb
jo
loop
xchg
jmp
stos
aam
lock
mov
mov
enter
mov
push
stc
xor
js
rcrb
pop
cmp
addb
xor
scas
xlat
xorl
dec
sbb
lcall
test
outsb
xchg
ja
mov
pop
inc
fidivrl
push
mov
pushl
orb
sbb
or
cmpsb
mov
dec
iret
mov
push
xchg
fs
lcall
pop
test
jecxz
mov
outsl
adc
gs
push
jb
inc
clc
mov
lahf
ds
incl
rcr
imul
lret
cmp
je
jmp
daa
mov
mov
add
lcall
lea
pop
in
insl
cmpl
insl
xrelease
add
call
into
rcrb
fwait
bound
nop
cmp
pop
dec
and
mov
push
testb
invd
push
pop
jmp
cld
pop
pop
adc
add
lahf
inc
nop
xchg
sub
js
jmp
xor
stos
incl
mov
dec
enter
int
arpl
movsb
sub
lcall
jmp
daa
aaa
and
push
les
or
call
cmpsl
mov
jae
or
sahf
test
push
or
sub
loop
pop
mov
inc
lret
dec
ljmp
cli
xchg
ss
adc
pop
push
jecxz
xor
popf
xlat
or
sahf
push
jne
lds
pushl
addr16
xor
jo
insb
divl
xor
or
dec
mov
mov
test
orb
cmpsb
mov
add
jnp
hlt
inc
xor
ljmp
pop
mov
out
mov
mov
xchg
stos
cmp
sub
mov
jmp
mov
pusha
daa
inc
div
inc
sbb
mov
mov
imull
cs
dec
inc
movsl
add
lret
sub
jp
rorb
lea
movsb
les
add
test
or
rolb
add
mov
push
or
ljmp
sub
das
cmpsb
into
lret
in
inc
lods
in
jg
pushf
and
bound
movsb
sub
loopne
fwait
cmp
lcall
mov
mov
jb
test
iret
pop
inc
imul
fbld
enter
mov
push
aad
inc
xor
test
add
xor
call
jmp
mov
dec
dec
dec
pop
in
lock
in
filds
int3
push
jg
add
mov
dec
dec
mov
in
adc
insb
jmp
insb
test
addr16
stos
jmp
pusha
push
pop
pop
xlat
adc
jg
dec
lods
loope
and
ljmp
add
getsec
pushw
mov
sbb
int
lods
mov
mov
jb
rcrb
jge
push
movsb
jmp
and
xchg
lock
mov
lock
sbb
or
sub
ljmp
xlat
add
aam
jae
push
xor
mov
outsl
inc
popa
in
jmp
and
cmp
jo
mov
xchg
negb
in
enter
ljmp
push
mov
test
push
dec
dec
mov
ljmp
faddl
out
push
add
outsl
add
lods
sti
jnp
enter
divl
lcall
add
push
inc
mov
stc
cli
push
adc
fdivr
jg
scas
and
add
lea
hlt
aaa
sbb
les
cmp
sub
sbb
jno
jl
lcall
push
icebp
cmp
cld
addl
add
and
inc
sbb
adc
sti
cld
pop
movsb
or
jg
ds
ja
sarl
aaa
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
cmc
xchg
mov
in
cmp
insb
loopne
loope
incl
bound
jne
stc
fldcw
les
fdivs
push
inc
xor
test
addr16
push
xor
stos
shlb
adc
ret
lds
adc
ljmp
mov
add
aas
adc
mov
into
xchg
sahf
and
adc
or
xchg
mov
xor
mov
fdivrl
push
scas
inc
popa
and
imul
xor
jge
push
sub
sbb
lods
ds
adc
jb
in
cmp
push
mov
fs
decl
jecxz
sub
jmp
pop
sahf
cld
shll
lds
mov
xor
ljmp
xlat
jae
lahf
and
xorb
imul
leave
dec
movsl
xchg
call
ljmp
add
imul
push
xchg
xchg
pushf
stc
mov
cmpsb
mov
mov
sub
xchg
cmp
sbb
ljmp
xor
xorb
imul
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
jmp
push
mov
ds
ret
lods
adc
cmc
sub
sbb
mov
addl
xor
jo
lea
call
popf
out
cmp
cs
insl
mov
pop
loope
mov
ljmp
bound
aas
lret
push
test
mov
stos
push
mov
dec
add
mov
xor
mov
jmp
mov
or
sub
mov
inc
lds
or
xchg
ja
decl
fxch
jle
bnd
ss
lcall
sub
cwtl
das
sub
inc
and
push
adc
ret
jmp
ss
sbb
sbb
aaa
in
iret
mov
sti
inc
inc
repz
std
mov
cltd
xchg
lahf
jmp
push
push
fmull
cli
add
pop
mov
lods
ja
jne
and
outsl
out
pusha
inc
adc
inc
cmp
push
push
iret
mov
adc
rclb
data16
jmp
into
dec
sbb
cs
ret
mov
xlat
jle
nop
fisubrl
std
decl
pop
lahf
mov
aaa
cmpb
sbb
sbb
dec
push
ja
insl
incl
lret
sbb
ret
sarl
and
push
inc
cmc
jmp
cwtl
inc
xchg
out
mov
jmp
loop
xchg
cmp
fisubrl
bound
lock
das
and
test
mov
push
cmc
jmp
mov
std
mov
and
jmp
add
cmc
push
in
sbb
decl
and
arpl
testl
or
xchg
sub
les
add
sbb
fisubl
cmp
sarl
stos
fsts
mov
out
add
and
cmpsl
and
xor
push
lods
adc
push
jl
or
xchg
cld
subb
xchg
outsl
jae
cmc
leave
test
int3
incl
cltd
inc
cmpsl
push
fwait
push
outsb
ret
sbb
popa
data16
sbb
inc
or
bound
add
dec
cmp
clc
and
pushf
popa
in
ljmp
ljmp
sbb
addr16
mov
mov
pop
xchg
shlb
cld
dec
cs
jp
in
test
clc
jmp
icebp
cmc
cmovl
sub
ret
pop
push
in
jl
mov
jb
pusha
or
loopne
incl
xor
pushf
pop
adc
fwait
test
sbb
test
call
rorb
add
mov
add
sub
call
mov
cmpsb
leave
and
mov
fs
clc
dec
js
jge
adc
mov
dec
cltd
out
cmp
xchg
and
add
scas
add
scas
cli
mov
jns
pop
mov
and
cmp
fs
outsl
mov
push
inc
add
ljmp
bound
sbb
or
lea
data16
dec
adc
mov
imul
and
mov
in
jbe
pop
xor
aam
fcoml
add
rcl
sub
es
pop
fidivrl
push
pop
push
pusha
inc
push
add
icebp
jne
adc
lret
add
xor
adc
push
lcall
or
outsb
jne
in
jge
jo
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
inc
mov
dec
cwtl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
mov
int3
push
ss
mov
rclb
mov
push
pop
push
sub
jecxz
loop
rcl
mov
adc
jecxz
stc
fs
call
lock
mov
jle
adc
movsl
data16
push
jns
fdivp
ljmp
inc
and
jbe
sub
mov
push
mov
cmp
xchg
inc
or
enter
rclb
scas
in
jl
pop
sub
or
pushl
add
cld
insb
add
sbb
ret
ds
aaa
mov
mov
aam
add
pop
movsl
cmpsb
into
sar
jb
ja
or
push
lret
incl
mov
sbb
outsb
inc
sbb
jmp
int
rcll
incl
lock
out
pop
cmp
cmpb
inc
cmp
fildl
dec
adc
ljmp
loope
cmpb
testl
sbb
dec
or
inc
dec
lea
pushl
test
xor
stos
jns
pop
out
jne
xor
incl
out
out
and
mov
pop
movsl
mov
int3
pop
sbb
jnp
test
jae
push
mov
jb
or
les
dec
jg
ds
cmp
stos
pop
rcrl
lods
push
aaa
out
outsb
sub
scas
ret
ljmp
das
cli
inc
or
test
adc
rcrb
in
inc
shll
inc
add
data16
mov
pop
pop
adc
adc
xor
mov
jmp
out
adc
lahf
xlat
or
pop
subl
pop
int
cmp
jmp
push
sub
icebp
sbb
cmp
push
cmpsl
mov
xchg
push
inc
adc
lcall
xor
data16
test
add
sub
mov
lcall
fstpl
sbb
adc
cmc
fnstsw
fidivrs
jns
bsf
cmp
movsb
and
xorb
in
adc
loopne
loope
outsb
xor
rorl
call
lahf
scas
xchg
or
cmpsl
pushf
aam
xchg
cmp
push
inc
or
mov
inc
pop
dec
mov
jge
fists
lahf
mov
cmp
and
out
imul
sbb
clc
call
xchg
xor
mov
push
out
dec
testl
aad
icebp
inc
out
clc
call
bound
stos
sub
adc
imul
fcomip
out
daa
mov
int
fists
imul
in
mov
call
cs
fxch
pop
push
mov
xchg
sub
vcvttps2dq
outsb
mov
pop
add
mov
roll
push
mov
mov
out
dec
lea
fimull
subb
sbb
mov
mov
jae
jge
pop
sti
out
sub
jo
aas
clc
cmp
test
jg
sbb
lds
fnstenv
xor
mov
mov
test
xchg
dec
and
mov
dec
loopne
push
pop
add
mov
ja
in
jb
add
outsl
jmp
fsubrl
mov
es
and
loopne
ss
xor
cmp
mov
lcall
jl
jg
jp
lods
or
in
insb
pop
xchg
push
fs
jle
mov
ljmp
mov
fbld
rcl
push
push
lods
xor
sub
loop
test
ret
stc
sbb
cmc
inc
rclb
ja
and
movsb
incl
add
xchg
fdivs
sbb
pop
dec
adc
fdivrp
dec
mov
push
bound
cmp
lods
inc
xchg
jecxz
add
leave
orb
xchg
sbb
inc
inc
stos
lods
xor
push
lock
scas
pusha
je
push
in
es
pop
jb
sbb
test
decl
sub
xchg
jbe
and
sbb
das
sub
lock
jg
js
nop
sbb
das
add
pop
addr16
mov
pop
cli
jp
sbb
incl
imul
mov
shlb
das
mov
xchg
xor
mov
fisubs
imull
je
test
inc
les
sub
iret
fmul
hlt
pop
add
pop
xor
int3
fs
cmpsb
inc
mov
mov
in
mov
xchg
jns
lds
mov
mov
jbe
mov
add
push
ds
lods
push
insb
push
pop
out
daa
lock
sub
call
mov
dec
aad
data16
hlt
in
negb
cmp
shlb
or
std
lcall
cmp
or
enter
fmull
bound
ljmp
rorl
movsb
call
scas
pop
ret
in
jg
jmp
cmp
push
and
dec
shll
ret
stc
es
mov
sub
sarb
jmp
scas
pop
dec
mov
cmc
ret
xchg
push
lret
ljmp
pop
sub
sbb
rcr
into
jg
fstps
fdivrs
call
jne
lock
pushl
imul
test
mov
sub
aaa
or
pop
inc
popf
push
jmp
mov
jle
adc
lcall
pushl
xor
pusha
mov
mov
inc
lds
fstpt
ljmp
jbe
jg
jg
cmp
xor
pop
inc
and
fisubl
push
inc
call
call
or
pop
cmc
pop
and
cmpsb
call
add
fcoms
and
nop
scas
sub
dec
or
lods
int
mov
idiv
mov
ficoml
push
je
xchg
xchg
mov
jae
jb
jne
push
push
cmc
mov
cmp
mov
xchg
pop
rep
inc
rolb
addr16
scas
jo
xchg
fstp
or
lods
stc
mov
stos
xlat
test
add
pop
mov
lds
cmp
jmp
fwait
sub
mov
lcall
push
popl
sub
sub
iret
mov
mov
aam
addl
movsb
dec
mov
add
idiv
call
push
je
fsub
pop
pop
dec
jno
push
pop
test
lods
mov
ret
lds
ficomps
aas
orb
fcomip
sbb
out
add
or
and
xchg
cmc
aam
aad
decl
sarb
dec
cmc
sub
pop
mov
insb
and
adc
lcall
cmp
and
mov
or
ret
aad
jbe
and
xchg
scas
sahf
adc
pop
pushl
lock
das
cli
and
dec
cmp
in
mov
dec
cld
ds
fadd
xchg
pushf
stc
aaa
test
ret
xchg
dec
pop
cmp
push
out
inc
into
into
sbb
loop
and
xchg
in
rclb
jns
add
imul
dec
pop
cld
dec
adc
mov
xor
fcompl
je
scas
in
xchg
xor
call
arpl
mov
sbb
insl
repz
or
push
incl
and
ja
arpl
sub
push
mov
xchg
xor
adc
incl
mov
lock
mull
stos
mov
daa
or
call
mov
nop
cmp
in
enter
sbb
and
pop
jge
dec
pop
call
sbb
scas
imul
subl
lahf
int
fdivl
lods
push
enter
popa
std
jle
mov
sbb
dec
and
sbb
mov
dec
test
insb
jne
out
rorl
inc
xchg
out
cmpsb
cmp
cmp
cmp
sub
call
test
sub
mov
in
lret
fcoml
imul
fimull
cmpsl
ljmp
in
and
adc
pop
pop
push
insl
inc
bound
lahf
mov
sub
clc
incl
xor
jl
popf
adc
sub
pop
int3
inc
jnp
mov
mov
fisubrs
lret
pop
xchg
jo
test
sub
xor
jp
or
rcr
arpl
add
adc
movsl
enter
xchg
popf
or
ljmp
fnstsw
mov
mov
roll
xchg
pop
cmc
fcmovnbe
jo
mov
and
gs
sbb
lcall
cmp
mov
mov
or
pop
sub
cmpsl
mov
add
sbb
mov
xchg
mov
lcall
orb
cmc
mov
daa
dec
jp
mov
pusha
xchg
aaa
pop
in
hlt
add
jg
sub
cmp
dec
dec
mov
push
pop
mov
and
add
xor
adc
ret
adc
cli
cmp
inc
cmp
out
xor
inc
out
sbb
mov
pushf
add
incl
mov
pop
jnp
testl
pushl
pop
and
add
gs
inc
hlt
jne
clc
xchg
jae
cmp
xchg
call
inc
adc
js
ret
jle
in
scas
xchg
divb
cmpsl
sub
sub
decl
cs
iret
mov
and
mov
ret
movsl
loop
xorl
in
loope
mov
adc
xchg
adc
imul
sub
into
mov
pop
cmp
cli
aas
mov
mov
xchg
cmp
adc
pop
int3
mov
int
add
mov
inc
ret
push
mov
cmpsb
jp
dec
aam
andb
pushl
and
int
pop
pop
and
les
mov
popf
sub
hlt
xor
cmp
loop
movsb
insl
sub
push
adc
outsl
mov
jae
mov
int3
mov
push
add
mov
cld
enter
incb
loope
pshufw
loope
jae
xlat
push
clc
ds
push
hlt
mov
sbb
ret
push
shlb
dec
loope
adc
dec
std
xor
loopne
ljmp
adc
lods
push
pop
push
lods
adc
adc
cmp
mov
adc
sbb
or
xor
jns
int
js
ja
decl
insl
test
mov
xor
fstps
cmovs
pushl
mov
mov
addr16
jmp
push
js
jl
xchg
mov
sahf
sahf
xor
sbb
dec
lret
or
inc
push
adc
shrl
ljmp
jb
fstpl
mov
std
pushf
bound
or
adc
movsl
adc
jg
ljmp
inc
mov
les
call
dec
jg
pop
jnp
lcall
jp
ja
sub
sbb
imul
xor
mov
loopne
jg
call
int3
shlb
push
pop
dec
imul
adc
dec
out
mov
arpl
gs
sar
icebp
sbb
sbb
mov
jae
cmpsl
mov
xor
mov
das
scas
stc
rcr
rcrb
repnz
out
mov
xlat
inc
cmp
mov
stos
or
call
pusha
mov
jbe
jnp
data16
mov
pushl
mov
push
test
cmp
ljmp
sarb
mov
jl
stos
xchg
adc
adc
ljmp
jmp
push
sbbb
adc
xchg
test
sbb
mov
mov
lea
fsubrs
sub
jmp
adc
test
in
xchg
push
stc
enter
movsl
cmc
pop
pop
jb
ljmp
add
pop
lret
lods
inc
popf
aam
ret
adc
jl
dec
fmull
push
pop
adc
incl
adc
or
sub
mov
xchg
jp
out
jge
push
fistl
fst
sub
push
movsb
aam
inc
cmp
repz
sub
jo
add
mov
jo
pop
arpl
push
in
call
xchg
jns
dec
out
inc
insb
fcmovu
repz
popa
xchg
and
imul
test
add
jg
popa
jo
inc
jae
xor
or
lods
cmpsl
adc
xchg
insl
fdivr
incl
mov
and
loope
jb
flds
and
xor
inc
sbb
stos
repz
sar
inc
mov
dec
adc
adc
into
in
sub
mov
mov
xor
and
mov
stos
cmp
out
mov
xor
clc
mov
cmc
jae
push
cwtl
and
ljmp
sar
mov
cmp
notl
sbbb
sbb
or
das
cli
incl
push
dec
mov
sbb
js
inc
popa
sti
mov
clc
mov
ret
scas
xor
leave
nop
shrl
cmp
aaa
or
loopne
push
mov
scas
clc
jmp
sbb
mov
push
cmpsl
pushf
lock
or
xchg
in
xchg
incl
mov
push
pop
cmp
push
jne
xchg
mov
subl
lcall
aad
stos
mov
sub
push
cmp
jnp
mov
dec
outsb
popa
das
mov
lcall
add
xlat
sarb
idivl
nop
mov
test
jno
dec
push
sub
cmp
push
jg
sub
out
andl
adc
out
xor
decl
outsb
inc
inc
xchg
and
lods
xchg
jmp
cs
test
sti
mov
jg
scas
dec
mov
or
decl
jp
daa
xlat
add
and
pushf
inc
sbb
mov
decl
add
repnz
inc
sub
push
mov
sub
ja
jmp
incl
push
xchg
push
test
mov
lcall
fs
in
pop
xor
stc
loope
inc
repnz
pop
mov
jmp
jmp
mov
stc
sub
lret
shll
aam
xchg
fistpl
popf
les
outsl
lods
xor
sbb
enter
cmp
push
or
xlat
lahf
sub
add
xchg
sbb
shrb
incl
fisttpll
fs
inc
out
ret
and
xor
pop
clc
xor
int3
xchg
mov
ljmp
rorb
loop
aas
inc
repz
pop
jmp
mov
insb
add
jmp
push
push
je
xchg
pusha
test
js
add
aad
cmp
inc
mov
incl
or
imul
cmc
adc
sbb
inc
inc
adc
cmp
scas
or
push
inc
mov
int3
outsb
jae
push
fisubs
mov
jae
jle
add
mov
call
xlat
or
insl
sbbl
repnz
sub
into
sti
mov
cli
inc
pop
std
push
mov
cmp
push
icebp
es
cmp
xchg
daa
push
cmp
push
jge
adc
push
sbb
pop
rcll
testl
ffree
imul
inc
cli
fadds
cmp
pop
scas
push
loop
testb
sbb
clc
push
js
frstpm(287
xor
leave
mov
sar
lcall
lcall
xchg
data16
fwait
jb
mov
mov
jae
jg
pop
gs
cwtl
cmpsl
inc
test
dec
adc
ficoms
decl
lock
pop
popf
cmp
push
ret
lahf
cmc
mov
mov
in
out
in
push
adc
fistpll
pop
ficomps
push
mov
sbb
fs
xor
outsl
into
sub
or
jecxz
dec
lock
sub
jl
xorl
cmp
repnz
or
add
das
das
ret
out
jle
decl
pop
in
cmpsl
fwait
mov
jecxz
dec
mov
subl
pushl
sub
jnp
dec
fisubl
push
xchg
imul
xor
mov
jle
add
fistl
aaa
popf
es
sar
and
orb
sbb
push
sub
mov
je
inc
out
push
push
xlat
sti
jl
or
out
hlt
icebp
shll
lock
push
dec
pop
sahf
in
xchg
mov
jbe
or
pop
outsl
inc
xchg
ljmp
scas
sub
test
outsl
clc
clc
xchg
sbb
push
jmp
cmp
out
ljmp
jecxz
dec
xchg
push
ror
and
sub
leave
and
jno
sar
ljmp
xchg
or
push
sub
sub
mov
ljmp
jl
jno
push
out
sahf
inc
js
and
mov
jbe
shlb
scas
orb
insb
mov
sub
mov
inc
aad
enter
sbb
je
stc
mov
daa
faddl
aad
fwait
sti
jg
mov
adc
clc
sti
pop
pop
xchg
in
add
fucomip
dec
push
inc
push
insb
fcmovu
adc
gs
std
stos
ss
out
and
orb
imull
fisttps
icebp
lds
push
mov
cli
push
xlat
das
sar
std
movsb
popf
in
mov
cmp
imul
and
imul
sbb
push
add
xor
jmp
in
mov
sbb
sub
sub
ja
mov
cmp
push
in
and
and
out
call
and
mov
orl
push
fwait
iret
dec
ljmp
push
add
iret
adc
jnp
inc
popa
ja,pn
in
xor
or
mov
cmp
cltd
mov
push
xorb
movsl
jnp
enter
mov
outsl
mov
xor
xchg
js
fnstcw
push
fldenv
dec
fcomps
pushf
test
or
xchg
inc
jne
pushf
enter
mulb
jne
popf
fidivrs
incl
push
add
xor
sub
mov
sub
xlat
cmc
push
cltd
popf
cmp
fidivl
jbe
pop
jnp
xor
jg
in
pop
sbb
sbb
test
fnsave
inc
push
hlt
mov
in
outsb
fcompl
incl
sarl
pop
subb
mov
adc
add
insl
add
clc
decl
mov
rol
push
decl
arpl
cmpsb
aas
lcall
in
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
pusha
mov
ljmp
test
cltd
xor
ja
aad
outsb
inc
pop
jg
cmp
inc
or
lods
cmpsl
mov
cmc
pop
aam
adc
jge
jne
mov
fwait
dec
loop
shl
cwtl
loop
add
iret
cmp
lods
push
in
scas
out
xor
jecxz
mov
xchg
daa
pop
popf
inc
arpl
inc
cmp
mov
mov
shrl
xor
mov
or
int
mov
sahf
fst
jle
js
jo
dec
decl
jmp
xchg
insb
sub
jb
nop
dec
mov
cli
sbb
or
call
pushl
sbbb
shr
add
xchg
out
xor
sbb
nop
jnp
and
incl
incb
sub
nop
push
cld
cmpsb
cltd
test
in
ljmp
lods
sbbl
insl
push
jecxz
mov
fisubl
std
lea
mov
fldenv
fistl
push
push
lret
imul
out
js
ljmp
cmp
mov
not
mov
fistl
repz
sahf
mov
jmp
pop
jo
mov
imul
mov
xor
xchg
inc
mov
jae
jae
xchg
cs
jg
inc
push
jbe
xor
add
outsl
xor
loop
sub
mov
sbb
or
call
je
sbb
cmp
and
popf
imul
pushl
cmp
push
pusha
jp
rclb
outsl
adc
xchg
jbe
das
es
arpl
insb
ret
sbb
sti
andb
incl
and
xchg
cmp
push
lods
mov
cmpsb
outsb
fidivrs
mov
push
xchg
and
incl
xchg
pop
cmp
shrl
in
add
bnd
add
jne
push
lcall
insb
in
jle
jno
xchg
repnz
add
dec
mov
push
push
jno
xor
adc
call
cmpsl
out
mov
divl
xchg
pop
jle
mov
incb
test
icebp
sbb
cli
xchg
push
hlt
test
daa
shlb
gs
mov
aam
mov
pusha
or
aaa
xchg
shr
repnz
xchg
push
cmpsb
mov
mov
add
sbbb
cld
jno
cmpl
mov
int
fisttpll
cbtw
cmp
xor
sbb
pop
and
int3
lcall
dec
sbbl
fcompl
xchg
cmpsl
imul
movsb
idivl
pushl
lret
int3
jb
and
add
out
addb
nop
xchg
push
sarb
mov
incl
roll
inc
jmp
cmpsl
jl
aad
or
sub
and
add
fs
pusha
sub
pushl
sbb
jb
pop
shlb
push
or
in
xchg
sub
loope
mov
lea
das
push
pushl
mov
rcll
jno
fwait
pop
add
dec
or
loopne
call
mov
call
mov
sahf
es
sar
inc
cmpsl
xor
xor
pop
mov
adc
or
lcall
pop
js
push
sub
sbb
repz
jmp
mov
shlb
jae
and
inc
int3
sbb
and
mov
clc
jle
in
call
and
mov
testl
fs
enter
das
clc
mov
lret
call
aas
addr16
decl
mov
dec
push
pop
popf
inc
add
mov
mov
dec
ds
lcall
sub
adc
mov
loop
xor
scas
push
call
dec
push
push
clc
lcall
mov
out
mov
pusha
out
mov
popf
and
loope
dec
clc
push
xor
insb
jnp
stos
mov
pop
nop
int3
or
push
shr
mov
sahf
jnp
pop
cltd
ret
rcr
gs
inc
dec
sbb
jmp
mov
dec
push
test
add
lcall
inc
mov
loop
test
in
movsb
pop
fmull
hlt
or
mov
xchg
in
inc
int
jns
loope
cmp
call
xchg
add
jp
fwait
pop
addr16
in
in
cwtl
incl
pushf
mov
xlat
cmp
rclb
xor
jae
clc
mov
and
fistl
inc
mov
sbb
jg
and
xor
cmpsb
sbb
jg
sbb
mov
pop
xchg
sti
jmp
out
cli
pushl
gs
mov
out
lods
add
push
orl
mov
pushl
add
push
test
aad
push
and
sarb
cmc
or
rolb
incl
bound
mov
sub
push
pop
cwtl
add
dec
cmp
popf
fnsave
iret
xchg
jg
call
loop
movsb
ds
mov
pop
sub
pop
stos
pop
out
out
rol
or
insb
or
fisubl
out
sbbb
lret
jg
ret
shl
rclb
test
pop
sub
mov
xchg
and
pop
add
decl
xchg
or
fistpll
cmpsb
cs
ss
inc
mov
call
dec
js
stc
inc
out
test
mov
rcll
pop
or
pushl
in
sarl
in
mov
cmp
inc
push
stos
mov
call
std
push
jnp
cmc
mov
sahf
stos
mov
hlt
mov
sbb
call
fdiv
loopne
out
sbb
mov
stos
in
inc
std
jmp
jmp
xchg
xor
fnstsw
push
dec
jg
cmp
mov
gs
loope
mov
divl
jo
call
iret
les
inc
cmp
lock
xor
jne
mov
popf
test
mov
push
fcomip
sbb
or
clc
idivl
pop
leave
push
and
sbb
icebp
dec
push
fdivl
mov
inc
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
insl
test
decl
cmpsl
mov
add
rorb
call
add
shr
pop
inc
clc
and
add
sbb
jnp
popa
sub
mov
sbbb
movsl
jl
cwtl
adc
or
std
bndstx
jmp
rorl
push
cld
add
or
and
jbe
push
push
cmp
sbb
insb
inc
das
daa
icebp
adc
jg
mov
inc
jecxz
ljmp
mov
dec
cs
pop
sbb
filds
sti
inc
sti
cltd
aaa
leave
xchg
cmpsb
mov
dec
addr16
insl
xor
dec
mov
test
jmp
outsb
push
inc
lds
push
aad
dec
fisubrs
test
pop
dec
cmp
aad
pop
addr16
jmp
lea
outsb
adc
or
xor
push
sub
xor
jle
out
outsb
lods
jmp
sub
hlt
movsl
aad
fildl
add
pusha
cli
jecxz
add
pop
pusha
sub
mov
scas
insl
out
lret
push
cmc
jmp
leave
fcomp
out
lock
push
add
nop
mov
add
pop
pop
xchg
fstpt
fistpll
sbb
repz
lds
gs
mov
pop
inc
addb
xor
ljmp
mov
xchg
fistl
xor
add
mov
or
adc
jg
mov
lret
jp
dec
mov
stos
pop
pop
ret
sub
mov
fldenv
ret
popa
and
mov
and
pop
jnp
pushf
jge
or
incl
inc
adc
fadds
ss
movlhps
into
ljmp
shlb
pop
mov
cmp
mov
mov
shl
jbe
sbb
call
sub
insl
xchg
pop
mov
cwtl
pusha
stos
imul
mov
imul
and
pop
xor
call
pop
lret
gs
xchg
inc
int
mov
sub
sub
popf
dec
cmp
mov
jle
dec
inc
leave
lea
jbe
sbb
fs
shl
cs
fbld
addr16
xor
push
popf
lock
jnp
dec
pop
inc
loopne
clc
incl
push
stos
lds
test
or
mov
call
push
in
test
rcrl
jecxz
dec
inc
addl
cmp
xor
and
fsubrl
pushl
adc
push
das
or
gs
mov
rcrl
or
inc
jmp
add
icebp
loope
jmp
int
addr16
push
incb
lahf
push
out
cli
pop
imul
sbb
js
std
ret
mov
xor
pushl
es
dec
stos
pop
into
das
fisubl
push
nop
push
pop
ret
or
xor
mov
or
xchg
stos
dec
int
inc
adc
leave
cmpsb
cmc
fnsave
icebp
jl
decl
cmp
shll
adc
sub
xchg
pop
sub
decl
call
mov
mov
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
lcall
mov
or
repnz
cmp
aas
std
adc
loop
mov
dec
sar
jl
cmp
pop
sbb
cmp
dec
xchg
cmp
mov
jne
adc
add
repz
js
fs
incl
fldln2
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
out
cmp
divb
es
int
add
or
push
jmp
dec
nop
xchg
adc
push
std
pop
mov
push
cmp
loope
int3
bound
cmp
cmp
ja
call
mov
call
dec
push
sub
xchg
pushl
push
mov
mov
xchg
jge
call
or
and
dec
dec
jg
sub
mov
xchg
notl
es
scas
xlat
test
mov
cmp
jl
jnp
push
ljmp
pop
pop
lods
call
push
xchg
xor
push
aaa
std
mov
enter
sub
sbb
dec
scas
sub
jmp
arpl
push
loop
pop
divb
push
dec
and
xchg
decl
lock
jmp
add
aas
shrd
out
into
outsb
pop
inc
push
int
stos
cwtl
adcb
ljmp
out
test
int
nop
pop
ljmp
lcall
cwtl
inc
xchg
out
adc
cwtl
repnz
push
fisubrl
js
pop
out
mov
and
idiv
xchg
out
lret
js
cmp
sub
fwait
enter
mull
les
mov
enter
inc
int
mov
out
daa
into
add
xlat
loop
std
pushl
dec
push
inc
inc
mov
jns
mov
mov
loop
push
imul
loopne
dec
mov
jmp
mov
ret
lcall
cwtl
pop
test
mov
aaa
ret
mov
cmp
push
mov
ljmp
pop
clc
xchg
imul
pop
or
jae
lds
cs
pop
mov
dec
ljmp
mov
jl
pop
sub
fwait
cmp
pop
xchg
xor
pushf
repz
xlat
mov
inc
jns
jnp
fcomip
ljmp
pop
or
sub
loop
pinsrw
lret
mov
jmp
popa
cld
mov
sahf
pop
insb
jno
movsb
lods
sbb
ror
sbb
dec
lahf
jmp
mov
ljmp
nop
mov
add
push
push
xor
fcmove
lcall
dec
insb
outsl
ret
imul
ljmp
mov
xchg
les
or
movsb
in
pop
push
mov
push
and
add
scas
scas
adc
push
inc
adc
call
nop
push
add
sbbl
xor
clc
push
mov
jmp
xchg
imul
or
lods
pop
bound
rol
xchg
cmc
push
in
test
jg
outsl
mov
cld
stc
jp
stos
icebp
mov
das
xor
test
pmuludq
inc
cmp
fldcw
iret
loopne
jo
push
popf
sub
or
inc
aaa
clc
cmpsl
aaa
mov
out
adc
pushf
push
cwtl
insb
ret
subl
ljmp
repnz
dec
rcl
nop
loop
sti
push
pushf
mov
add
adc
or
and
jmp
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jecxz
loope
cmpsl
push
push
jmp
cmp
jecxz
loope
call
in
jmp
xchg
scas
ss
push
int3
and
imulb
incl
dec
call
cltd
sub
dec
sub
and
addr16
push
dec
lcall
cmp
sahf
or
daa
fnstcw
xchg
mov
lret
add
stos
bound
test
fxch
fldl
or
outsb
jp
xchg
pop
mov
into
sbb
xor
sbb
dec
scas
popa
xlat
outsb
pop
push
dec
sbb
add
push
je
and
fwait
mov
imul
mov
out
jae
adc
dec
or
sbb
jno
sub
call
je
cmp
lcall
jl
mov
mov
jl
push
ljmp
cmpsl
sub
jns
mov
lea
movsl
sbb
decl
mov
push
inc
insl
add
sbb
jnp
dec
fisttps
sub
adc
mov
in
lcall
push
xor
loope
test
decl
leave
cltd
aaa
std
and
movsb
add
pusha
andb
inc
xor
loope
add
std
mov
dec
jg
jp
enter
or
mov
outsb
cld
pushl
jo
xor
jns
shll
bound
xor
pop
das
jae
cli
adc
incl
add
sbb
sub
pop
xor
jae
and
pusha
cmp
decl
cli
add
xchg
out
inc
jle
sub
jg
mov
inc
pop
out
jns
cmp
or
jmp
aas
push
xchg
mov
jge
lretw
mov
mov
movsl
mov
call
clc
loopne
shll
pop
shr
push
sub
ljmp
ja
mov
mov
add
pop
mov
sub
mov
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
int
or
jmp
xor
call
jo
dec
int
js
sub
sti
cmc
fwait
adc
push
cmp
lcall
push
or
sbb
adc
mov
pop
pop
add
add
lock
pop
inc
push
ljmp
std
jmp
add
orb
adc
mov
fisttpll
mov
bound
les
and
int
push
insl
pop
test
jmp
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
icebp
loop
mov
out
push
aaa
aaa
mov
loop
or
stos
pop
and
shrb
sarb
out
mov
mov
call
bound
cmp
in
iret
xchg
adc
xchg
cmp
pop
jne
das
cwtl
imul
clc
jmp
cld
xor
add
push
adc
inc
js
xor
pushf
roll
mov
xlat
xorb
xlat
mov
mov
pushl
cltd
xchg
rorb
jg
add
jge
mov
rorl
mov
push
stos
cltd
mov
cmp
pop
mov
repnz
js
sbb
inc
rorb
xchg
mov
arpl
mov
lods
scas
sbb
cmp
stc
push
jle
xchg
inc
test
mov
jbe
out
filds
lret
jno
dec
sbb
rolb
push
lahf
xchg
add
push
hlt
pushf
inc
hlt
incl
xchg
pop
fs
lret
cmp
push
jl
mov
fwait
add
test
jmp
or
std
ret
inc
andl
clc
dec
ret
adc
shrb
inc
adc
mov
in
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
fstpl
sbb
push
arpl
lcall
dec
ljmp
sub
sbb
xchg
test
xorb
and
mov
ljmp
sbb
sub
test
inc
and
pop
mov
or
popa
test
cltd
insl
pop
push
mov
xchg
push
test
pop
fdivrl
pushl
shlb
sbbl
decl
sub
shll
mov
adc
pop
pop
mov
push
or
dec
mov
icebp
ds
mov
test
pop
imul
ficoml
movsb
mov
push
sbb
sbb
mov
ljmp
push
pushf
ja
in
nop
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
int3
xchg
aaa
mov
std
jl
or
std
mov
loopne
cmp
ss
mull
sub
inc
add
jle
movnti
pop
mov
jle
sti
cwtl
stos
into
add
cmp
lret
ljmp
inc
push
test
in
mov
or
mov
mov
dec
arpl
push
push
adc
ds
sub
cmp
out
push
pop
gs
xor
dec
mov
cld
xor
mov
adc
mov
dec
pop
or
pop
xlat
jnp
imul
cli
je
ljmp
scas
dec
data16
sarb
adc
pop
dec
in
ret
mov
decl
or
mov
mov
pushl
div
or
es
enter
mov
loopne
xlat
adc
mov
ror
cmp
ljmp
dec
int3
pop
insb
push
inc
negb
dec
std
les
je
cli
ror
out
sub
add
in
ljmp
fucomip
pop
push
outsl
xor
je
adc
mov
mov
lret
jle
push
jae
xchg
or
sub
pop
scas
mov
in
clc
mov
dec
sahf
cmp
repnz
imul
lock
shl
mov
ljmp
lahf
sub
mov
mov
jmp
outsl
test
fs
in
repz
xchg
rol
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
jge
jmp
mov
push
xchg
push
lods
aaa
je
clc
js
mov
les
and
inc
rcll
xor
ljmp
rclb
bound
xor
scas
xchg
jl
or
pop
popa
mov
scas
rorl
lcall
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
cmp
mov
dec
movsb
fwait
out
xchg
dec
jg
push
es
cs
push
pop
and
dec
rorl
inc
mov
push
outsl
dec
movsb
in
imul
sbb
gs
imul
ljmp
xor
mov
sbb
or
sbbb
dec
dec
xchg
xchg
sbb
cld
incl
sub
add
cli
sbb
enter
xchg
pop
js
inc
pushl
aam
and
cli
imul
in
fistpl
jmp
cmp
push
push
testl
sbb
mov
fmulp
shr
shlb
or
pop
fldenv
jecxz
push
jle
fnstcw
mov
jge
mov
ljmp
clc
jae
ljmp
pushl
sub
dec
insl
or
fadds
pushl
mov
in
mov
xor
dec
push
loopne
addl
sub
lcall
pop
jg
incl
leave
sbb
popf
push
je
popa
or
enter
lock
into
decl
cwtl
and
push
leave
pop
xchg
push
sbb
mov
mov
sarb
daa
daa
lcall
mov
jne
scas
push
sub
adc
mul
test
testl
out
cli
ljmp
int3
mov
or
cs
and
adc
push
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
mov
popa
lret
rcrl
ljmp
xorb
into
push
cmp
repnz
lcall
das
into
inc
jmp
push
decl
fwait
dec
dec
insb
xor
loop
inc
hlt
loopne
lret
mov
fdivs
imul
or
jb
push
adc
mov
xchg
add
cwtl
fs
jg
decl
fwait
inc
outsl
movsb
pusha
cmp
or
or
icebp
shr
insb
aas
cwtl
leave
movsb
fcoms
fidivrs
sbb
dec
mov
outsb
test
icebp
fadd
js
and
cmp
movsb
and
jle
dec
imul
mov
shl
in
sub
repz
cld
dec
push
xchg
jne
lcall
adc
inc
or
movsl
adc
mov
sub
or
sahf
inc
push
daa
jmp
lock
clc
inc
cmp
cmp
dec
aaa
jl
roll
cmp
pop
data16
mov
rolb
cwtl
daa
xor
lret
cmp
jmp
jmp
xchg
add
jge
xchg
dec
xchg
ljmp
fs
push
push
cmp
int
cmpl
or
popa
data16
xor
add
push
xor
insb
stos
cmovge
jle
incl
push
cmp
sarb
mov
call
pop
xchg
xor
nop
and
enter
cs
repnz
iret
mov
dec
lcall
test
incl
sub
pop
add
inc
inc
dec
or
dec
iret
aaa
push
orl
and
cltd
cltd
cmp
push
ss
cmp
sub
leave
popf
push
mov
or
test
dec
lods
adc
sub
loope
or
pop
xchg
sbb
bound
ja
jg
add
xchg
cmp
movsb
es
lret
sti
ljmp
push
adc
iret
mov
pop
stos
add
lcall
inc
adc
enter
jns
fcmove
sahf
jae
leave
test
inc
lret
xor
popa
fwait
mov
decl
pop
pop
jne
or
xchg
cmpsl
lea
cmc
imul
imul
jb
in
cmp
pushl
mov
lret
dec
cmpsb
push
inc
call
xchg
fcompl
jge
pushf
xorl
cld
xchg
sbb
sbb
rorb
and
mov
popa
iret
adc
push
sub
fwait
add
cmp
in
jp
test
xor
push
imul
aaa
std
pushl
sbb
jg
stos
fiaddl
jmp
and
sti
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
push
lret
mov
sets
pushl
xor
jb
cwtl
std
cmp
pop
xor
ja
push
call
repnz
cmp
pop
div
enter
cpuid
addr16
push
cmp
mov
cmp
mov
aas
imul
push
loop
push
stc
das
and
ljmp
cmp
mov
sbb
mov
mov
pop
loop
push
int
movsl
pop
sbb
pushl
outsb
dec
lahf
loopne
and
je
imul
je
dec
cmpsb
mov
aam
push
jno
jge
adc
sub
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
aas
push
pop
push
sbb
movsb
outsb
xchg
sbb
mov
lods
jg
fsubr
inc
cmp
pop
jno
inc
inc
ja
outsl
lcall
ljmp
or
cmp
jne
dec
pextrw
push
mov
sbb
mov
in
ljmp
lcall
aas
movsl
or
sbbl
sbb
ljmp
cmc
aad
ficoms
leave
imul
jmp
jbe
jne
movsb
push
fcompl
les
clc
aam
ret
sub
dec
or
xchg
sbb
push
mov
push
mov
aas
mov
xchg
in
inc
aad
lock
test
sti
test
lock
cmp
mov
cli
lds
xchg
pushl
add
sub
jbe,pt
stc
cmpsl
inc
cld
xchg
aaa
stc
pop
cmp
loopne
jmp
jae
cmp
jp
lods
aaa
cs
insl
mov
mov
mov
jmp
fldcw
notb
dec
ljmp
jp
jecxz
call
or
rol
cmp
sarl
ljmp
or
cmp
outsb
mov
mov
and
and
push
incl
pop
and
adc
pop
sub
cld
out
pop
aas
cmpb
loope
in
mov
call
test
mov
rolb
imull
imul
xchg
aad
push
inc
xchg
lcall
ljmp
rep
mov
mov
fstpt
push
pusha
sub
dec
mov
test
pushl
bound
aad
mov
and
in
mov
inc
xchg
sti
push
sbb
stos
ljmp
inc
adc
cmp
shlb
testl
mov
mov
mov
adcl
daa
xor
aaa
and
fcomip
pushl
popa
cmpsb
in
insb
pop
adc
sbb
adc
fs
inc
ret
mov
ljmp
cmc
movsl
add
incl
jmp
andl
sbb
jl
and
jg
or
movsl
cwtl
fcomp
aaa
call
and
mov
icebp
outsb
in
xlat
ds
mov
xchg
stos
dec
lahf
mov
decl
push
xchg
clc
jle
cld
je
dec
mulb
mov
bound
dec
inc
movsb
lahf
pusha
in
out
inc
push
andnps
insl
mov
push
ss
aad
pushf
popa
rcrb
inc
cli
ret
fistpl
stos
pop
je
cmp
inc
mov
push
lods
cwtl
dec
je
stos
dec
pop
pop
in
pop
jl
decl
push
pop
push
addr16
lods
andb
les
leave
in
and
pushl
mov
leave
pop
cli
loopne
dec
stos
sbb
dec
in
ret
dec
xlat
sub
fcomip
jmp
lahf
repnz
push
faddl
pop
push
jbe
xlat
nop
and
push
or
jp
js
or
int3
or
adcb
cmpsl
mov
data16
cmc
dec
push
sub
xor
and
lcall
lock
jmp
in
not
fcoms
popf
cmp
int
mov
fbstp
jmp
and
movsb
cld
push
lret
fs
xor
call
and
push
loope
pop
lret
je
pusha
push
fmulp
stc
je
loop
icebp
repnz
lods
int
orb
or
arpl
rorb
jle
pop
andb
push
dec
icebp
and
fsubrs
sbb
cmpsb
pop
mov
xchg
leave
push
hlt
sbb
mov
incl
out
mov
js
xor
add
scas
popf
mov
lods
stos
sub
cmp
adc
ljmp
dec
das
inc
xor
xor
icebp
cmp
mov
fsubrl
dec
cli
pushl
jbe
enter
jae
aam
bound
mov
insb
sti
mov
xorl
or
adc
lcall
jg
jmp
sub
pop
shrb
scas
xor
sbb
sbb
adc
ljmp
jnp
sti
mov
inc
nop
or
lea
pop
adc
test
lcall
dec
cmp
xchg
test
dec
pushf
imul
daa
mov
ljmp
push
add
arpl
sahf
mov
pop
jle
hlt
push
ret
inc
lods
jg
lods
jge
shll
enter
iret
mov
aad
inc
popa
out
ret
pusha
xlat
sbb
jmp
testb
cmp
dec
cmp
or
frndint
call
loope
movsb
setp
pop
and
lods
fdivrp
es
pop
or
pushl
mov
ret
mov
mov
add
fcompl
lahf
ja
leave
pop
pop
mov
mov
hlt
nop
and
xlat
dec
mov
xchg
js
shlb
lea
dec
dec
std
fildll
rorb
push
cmpsl
sbb
add
in
push
inc
mov
lcall
out
outsl
pop
push
inc
fnsave
push
and
call
cmpl
add
mov
decl
test
dec
decl
push
sbb
rclb
addr16
popa
test
lret
mov
js
icebp
sbb
insb
xchg
mov
or
setnp
in
jge
jl
adc
call
add
dec
mov
mov
inc
push
loope
mov
fwait
ret
iret
jmp
imul
aas
jecxz
fdivr
arpl
lcall
sti
dec
filds
jmp
pop
outsl
test
repz
mov
xchg
mov
in
sub
call
scas
push
pop
cli
jge
cmpsl
nop
jno
popa
stc
decl
mov
negl
add
xor
add
mov
push
ret
pop
icebp
call
hlt
jmp
lea
sbb
mov
jnp
insb
xor
mov
lcall
jp
insb
jg
lcall
lds
cmp
adc
in
lcall
adc
fwait
inc
out
arpl
insb
mov
mov
cld
ljmp
cmp
adc
lret
arpl
fs
lcall
inc
fdivl
lcall
ret
jae
xor
lods
jnp
jge
cli
ja
mov
repz
mov
push
mov
cmpsb
fcompl
mov
mov
cmp
lret
mov
xor
ljmp
lret
mov
inc
jle
mov
call
sbb
xchg
stos
or
lret
outsl
cli
sub
xchg
cwtl
or
pop
dec
in
scas
mov
rcll
inc
inc
adc
dec
imul
into
repnz
dec
push
test
clc
fbstp
aam
movsl
pop
mov
jp
lret
pop
lods
sub
fisttpll
inc
jmp
ljmp
js
out
nop
pop
scas
cmp
mov
or
stc
out
jecxz
xchg
fwait
adc
into
mov
sbb
push
mov
cmp
in
pop
test
das
xor
stc
adc
lcall
cs
jno
in
xor
out
sub
cmpsb
sbb
dec
pop
dec
pop
sub
push
sbb
lcall
ja
cmp
cmp
ja
cmp
push
fdivl
into
sub
js
out
ljmp
int
test
and
frstor
jle
or
movl
lods
inc
mov
mov
sub
rcrb
fisubl
cmpsb
dec
and
cld
hlt
jns
add
push
lods
mov
push
das
roll
pop
fidivl
jae
stc
pop
jmp
cmp
dec
shl
gs
out
mov
xchg
test
add
pop
cltd
mov
cmp
rorl
lahf
xlat
xchg
mov
push
rorl
hlt
nop
out
xchg
mov
mov
out
fwait
dec
mov
es
loop
or
jmp
fiaddl
andb
cvttps2pi
lret
mov
xlat
xor
call
push
in
sbbl
pop
xor
cltd
es
jecxz
ret
test
adc
sbb
clc
scas
dec
movsb
sahf
jle
or
push
sbb
ljmp
fcomps
decl
add
aas
les
push
cmp
fs
mov
pushf
pop
or
jbe
cmp
xchg
out
fsub
pop
dec
test
jbe
mov
aaa
sub
insl
ljmp
shll
cli
mov
push
cld
loop
scas
jnp
push
dec
inc
dec
ss
xchg
lcall
js
movsb
test
out
in
test
repnz
repnz
jbe
jae
fwait
adcl
mov
insl
xchg
int
decl
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
test
call
push
or
push
mov
cli
sbb
add
rcr
jg
rclb
push
cli
xchg
stos
ljmp
jmp
cwtl
stc
mov
loop
daa
imul
push
jbe
jbe
incl
idivb
sbb
insl
es
pushl
and
fsubp
xchg
inc
cmc
lcall
lods
pop
call
sub
sahf
lds
filds
jmp
mov
outsl
rcr
or
pop
jnp
cltd
jp
fwait
in
cmp
adc
test
cmp
push
jbe
sub
cmpsl
cs
incl
xchg
adc
and
das
cs
sub
jno
incb
add
adc
jmp
mov
xchg
enter
jmp
jno
dec
xor
or
int3
cltd
iret
add
xchg
cmp
lcall
mov
push
popf
fimull
int
xor
sbb
repz
sub
jo
jmp
sub
lcall
or
or
inc
movsb
sti
add
inc
mov
pop
decl
movsb
sarl
jae
mov
mov
xor
inc
xchg
loope
push
lcall
sbb
repnz
lret
lock
test
outsb
sub
cmp
mov
fdivrp
jg
test
in
les
pop
rclb
pop
nop
and
dec
cmc
bswap
push
loop
divb
loop
ret
cli
loopne
dec
cmc
sub
add
mov
mov
xor
fisttpl
pinsrw
lods
fdivr
imul
sub
fsts
inc
xor
fisttpll
jae
adc
shr
inc
adc
add
xor
push
decl
add
insl
inc
adc
popf
mov
mov
mov
xor
mov
lea
inc
pushl
or
scas
jecxz
insb
mov
push
cmpl
out
icebp
ror
addr16
or
decl
pop
cmp
gs
in
pop
lret
push
mov
test
mov
pushl
arpl
test
jb
sahf
push
iret
push
push
cmovl
add
jg
jmp
jo
sbb
sub
mov
leave
inc
fsts
mov
xor
pushl
mov
inc
repnz
shll
push
or
lds
in
sub
push
arpl
cld
mov
stos
enter
rclb
jb
cmp
push
push
pushl
cmp
push
repnz
mov
xor
push
insl
adc
push
rcr
mov
jmp
sub
jge
or
cmp
add
mov
rcr
sub
and
push
mov
aas
inc
mov
enter
mov
add
les
mov
cwtl
sarl
mov
jge
jg
mov
xor
jae
repz
inc
jne
call
xor
fwait
dec
adc
add
mov
xchg
cmp
adc
cmpsl
pop
lods
inc
pop
cmp
call
pop
xor
stos
je
shl
ljmp
call
sbb
repz
pop
jg
sub
mov
setp
or
out
jne
aas
fdivrl
pop
mov
inc
bound
fisttps
pmaddwd
mov
pop
insl
cmp
mov
pushf
inc
push
xchg
loopne
sub
add
push
cmp
mov
jmp
push
xor
and
inc
or
jmp
mov
pusha
mov
call
iret
mov
xchg
lret
rolb
mov
movsl
push
mov
or
es
loopne
add
mov
push
pop
ret
push
test
out
add
cmpsb
or
lcall
dec
incl
adcb
adc
and
roll
outsl
clc
cmp
jbe,pn
out
push
sbb
mov
jmp
ja
jg
cs
jecxz,pt
ljmp
and
mov
stos
lahf
test
dec
jmp
ljmp
mov
lods
ljmp
cmp
mov
mov
daa
inc
lods
xchg
clc
cwtl
dec
outsl
out
test
lds
fwait
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
pop
and
aas
pushf
adc
push
cmp
mov
jmp
popa
hlt
mov
sbb
call
jb
testb
mov
sbb
or
jg
ficoms
incl
cld
lcall
adc
mov
cmp
cltd
in
adc
fildll
push
sbb
inc
add
mov
or
or
rcrb
mov
jns
pop
ret
adc
and
xor
xchg
sbb
js
decl
xor
loop
cmp
out
xchg
dec
mov
inc
or
test
pusha
scas
xor
rclb
fs
fwait
int3
jg
ljmp
ja
mov
aas
in
jecxz
ficomps
inc
and
nop
rol
and
call
loopne
dec
add
mov
and
ficompl
sub
ljmp
sub
xor
inc
stos
push
and
stc
dec
mov
mov
test
xlat
es
pop
inc
sbb
jne
jp
sar
jg
cmc
lods
ret
jbe
mov
jns
lahf
push
xchg
popa
inc
sbb
aaa
rolb
xor
clc
sub
std
incb
rolb
fwait
js
mov
test
pushl
mov
arpl
xchg
stos
popf
push
test
test
test
dec
stos
dec
sbb
icebp
sbb
jg
call
jo
xor
mov
outsl
out
fsubl
add
clc
repnz
mov
mov
icebp
xlat
adc
jns
aas
or
mov
pop
repz
and
pop
mov
pushl
inc
or
clc
adc
pop
aam
push
hlt
add
jg
jg
shlb
adc
fildll
fcomip
pop
mov
mov
mov
mov
gs
incl
xor
dec
cld
xchg
jbe
out
sbb
xor
lock
mov
ds
jp
loop
xor
jecxz
mov
dec
inc
sub
cli
cld
pop
int3
ljmp
jp
adc
pushl
sbbl
call
loopne
int
jp
fstpl
sarl
stc
call
lahf
adc
sbb
sbb
xlat
loop
aas
movswl
or
mov
jle
es
daa
jecxz
leave
dec
cmp
jl
fmuls
inc
push
mov
cmp
lock
inc
sub
mov
pushf
in
stos
inc
mov
push
xchg
sti
sub
ja
xchg
aas
xorb
xlat
decl
cmp
dec
cmc
in
and
in
in
fstl
ds
data16
lcall
addr16
lock
xrelease
sub
in
mov
mov
cli
pusha
popf
sbb
dec
mov
inc
ret
leave
aas
jae
aam
sbb
cmp
in
in
js
cli
pushl
xchg
jp
repz
fnstenv
xadd
mov
ret
dec
je
hlt
xchg
movl
js
enter
and
icebp
push
mov
add
movsb
mov
std
push
aas
rcll
jmp
cld
push
mov
movsl
push
mov
xor
je
jl
loopne
call
pop
movsl
aaa
adc
mov
or
mov
push
rcll
lods
adc
notb
xorb
je
shlb
pop
imul
roll
arpl
cmp
pushl
std
jnp
sub
aad
cmp
scas
inc
lea
shr
cld
jo
fs
sarl
jmp
scas
inc
push
pop
outsb
sbb
mov
pop
inc
pop
mov
mov
xchg
push
adc
jle
incl
in
loopne
je
subb
and
mov
cmp
lock
notl
cmpsl
jp
sbb
ror
dec
paddsb
jb
inc
movsb
add
cs
fstpt
and
andl
imul
or
hlt
repnz
setae
adc
jbe
lret
lret
test
pop
lcall
ljmpw
add
ret
jno
xor
rcll
or
xchg
mov
sub
and
aad
xchg
sub
sbb
inc
ret
mov
xor
loopne
daa
cmp
test
sbb
shrl
jl
jns
addl
xor
sarb
jg
mov
out
pop
andl
decl
test
out
test
mov
or
mov
test
dec
ljmp
cmpsl
scas
dec
je
or
push
jo
push
rorb
xchg
call
loopne
insb
pop
sarb
inc
ret
lcall
shlb
jg
dec
lcall
insb
mov
hlt
mov
xor
push
ljmp
xor
icebp
mov
jbe
mov
mov
loopne
call
xchg
add
call
test
fstp
mov
lods
xchg
sbb
fcmovnbe
xor
mov
add
adc
out
cli
mov
leave
inc
xchg
jecxz
dec
pusha
cmpsl
in
cmp
loope
cmp
data16
outsl
cli
inc
push
mov
cmp
push
sahf
sub
imul
mov
lcall
dec
call
push
mov
shl
daa
mov
cmp
negb
sub
repz
call
add
sbb
dec
cmp
aad
jne
jecxz
mov
and
xor
mov
or
inc
jg
lods
xor
xchg
pop
ss
jne
lret
push
call
push
aas
add
jmp
dec
lods
mov
xchg
sbb
mov
divb
mov
jmp
adc
movsl
sub
add
jno
les
push
cwtl
jp
in
push
xor
ja
pushl
movsb
add
js
xchg
shlb
cmp
fists
jg
jbe
fmuls
test
inc
jmp
pop
jne
or
push
out
sub
and
loopne
push
popa
or
test
out
out
out
cs
cmp
cmpsl
cwtl
sbb
imul
cwtl
or
lret
cs
xor
and
fcomip
mov
sub
arpl
push
cmp
push
inc
iret
pop
xchg
or
and
imul
fildll
mov
push
mov
stc
loop
ss
dec
jmp
xlat
lods
es
arpl
and
ljmp
mov
jno
xlat
inc
lret
inc
xchg
pop
movsl
sbb
icebp
lods
movsb
outsb
push
ret
ljmp
dec
mov
sub
inc
inc
adc
jle
leave
clc
and
call
out
pop
adc
or
clc
mov
xchg
mov
inc
xchg
xchg
pusha
cwtl
jle
inc
cmp
xchg
add
inc
adc
mov
imul
movsb
mov
xchg
inc
lock
ret
sbb
pushf
lds
and
dec
test
mov
push
arpl
in
add
ljmp
pop
add
add
mov
inc
je
dec
and
mov
mov
insl
jge
decl
xchg
cli
int
jnp
add
test
cltd
out
mov
dec
mov
sub
aas
mov
xor
aaa
mov
inc
push
clc
sub
jmp
dec
lock
mov
test
xor
push
adc
adc
test
cmp
iret
pop
in
push
jge
mov
fs
lahf
decl
outsl
inc
xchg
pusha
mov
or
call
push
bound
stc
into
adc
insl
lret
loop
mov
cwtl
sub
lcall
sub
repz
aam
dec
ret
popf
mov
mov
lods
stos
xchg
mov
out
sbb
mov
push
clc
jl
jmp
mov
xor
das
xchg
jle
lea
pushl
out
sahf
out
loope
dec
mov
xor
pop
sub
push
movsb
repnz
insl
iret
insb
xchg
dec
and
push
jl
sub
mov
mov
aam
jge
cmc
loope
inc
lahf
movsl
data16
out
aad
add
cld
out
xor
cmp
mov
xchg
out
shlb
lret
lret
sub
push
fldcw
in
in
pop
mov
decl
push
and
jns
repz
xchg
je
shlb
xchg
push
call
daa
data16
inc
out
jl
inc
xor
fwait
daa
xchg
jns
out
in
dec
or
xor
ljmp
jg
xchg
cwtl
cmp
push
outsb
roll
add
cmp
pop
shrb
jmp
shrb
mov
into
jbe
sahf
fdivr
jmp
inc
jg
sbb
ss
mov
inc
ds
ljmp
pusha
es
popf
xchg
jmp
xchg
int3
imul
test
das
and
sahf
push
push
mov
push
sbbb
lcall
cs
lahf
pop
xor
sub
jbe
cmpsl
je
jno
inc
jge
mov
pusha
inc
mov
arpl
add
idivl
xchg
xlat
into
daa
or
jl
lods
mov
or
mov
cmp
mov
ss
pop
adc
push
fcoms
xorl
fwait
insb
push
cmp
lcall
lcall
xor
jle
push
jbe
inc
gs
outsb
lret
inc
pop
iret
jle
mov
fcomip
xchg
jle
adc
cmp
add
jmp
cmc
es
lods
ss
scas
mov
xchg
mov
add
inc
pusha
push
push
cmp
test
hlt
and
and
pop
insl
imul
pop
mov
or
in
jecxz
mov
lock
subb
cmpsb
adc
ja
jno
pop
cmp
jmp
flds
rcrl
mov
push
fldt
leave
test
push
test
das
out
test
cmpsb
adc
pop
out
std
stos
pusha
jno
fwait
sbb
mov
negb
lods
js
rolb
adc
call
jp
aaa
mov
jmp
mov
sbb
adc
stos
js
sub
lds
fisttps
call
mov
push
push
icebp
ror
popf
mov
jmp
mov
pop
adc
xchg
orl
movsb
sahf
movsl
add
js
jo
pushl
inc
mov
mov
movsb
mov
push
in
rcrb
fwait
sub
mov
incl
jbe
pop
pop
pop
mov
je
push
pop
and
out
sbb
xchg
sub
lods
in
addr16
das
pusha
mov
mov
pop
push
pop
dec
mov
pop
and
movsb
sbb
xor
dec
ss
int
cmp
in
jle
xchg
repz
fldl
leave
clc
adc
adc
ss
xchg
gs
and
jmp
or
das
in
rcrl
mov
push
pop
sbb
lret
dec
popa
push
pop
or
enter
call
clc
popa
sub
sbb
jno
out
push
shll
fcos
lahf
shl
lret
out
sbb
cli
mov
push
sub
lahf
cwtl
fldt
sub
vmwrite
xchg
leave
cmp
sbb
ss
and
sub
push
dec
lahf
pop
in
gs
add
dec
adc
fisttpl
test
push
jmp
add
cld
mov
inc
repnz
xchg
popf
cltd
mov
cvtps2pd
cmc
mov
mov
gs
pop
outsl
push
incl
jnp
fiaddl
cmp
and
and
nop
lahf
rolb
jl
lcall
push
dec
scas
stos
push
push
icebp
fiadds
stos
scas
xor
ret
or
pop
das
sbb
jl
andps
out
fidivl
push
mov
mov
mov
gs
pop
aad
mov
jnp
ret
push
test
mov
pop
lret
je
xlat
ljmp
out
adc
push
jne
xchg
pushfw
jno
cltd
stc
orb
sub
ljmp
lret
imul
aam
fwait
push
in
sbb
xchg
leave
or
and
shlb
ljmp
or
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
shrl
imul
jmp
in
outsb
clc
roll
mov
add
xchg
je
faddp
aam
mov
xchg
pop
pop
loope
rorl
cmp
pushl
adc
pusha
test
loop
test
inc
loopne
push
or
aad
test
sbb
add
add
fistpll
fwait
inc
jnp
xchg
mov
mov
scas
sti
loopne
pop
dec
repnz
incl
bound
cmp
and
mov
pop
mov
decl
cmp
imull
inc
pop
cmpb
sub
inc
repz
xchg
fcmovb
jge
incl
rcrb
inc
push
rclb
ret
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
jmp
orb
shll
add
add
nop
mov
call
cld
sti
fdivl
sbb
movsb
test
xchg
popf
sahf
push
cwtl
decl
push
xor
xchg
test
and
mov
xor
cmpsl
inc
fwait
inc
cld
es
call
test
pusha
cmp
sbb
sub
adc
and
push
jg
and
cld
mov
sbb
jmp
je
push
push
sbb
jge
leave
popf
xlat
js
push
fs
cmp
sub
fcomip
call
je
xor
mov
xchg
xchg
mov
popl
pop
fnstenv
std
call
pop
arpl
pop
push
add
fdivrp
pop
jno
lods
shl
inc
dec
repz
arpl
aam
stos
xchg
lahf
adc
imul
sbb
pop
loopne
notl
ljmp
and
imul
out
out
dec
dec
scas
loopne
sbb
jmp
repz
jne
pushf
rorb
stos
out
pop
mov
in
xchg
or
or
add
xchg
sub
shll
popf
adc
push
mov
mov
jmp
addr16
cmpsl
sahf
sub
pushl
hlt
jge
xchg
xor
lahf
aaa
cli
add
std
out
out
jb
xchg
jmp
mov
pushf
out
xchg
int3
push
popa
add
dec
stos
inc
call
std
das
mov
mov
adc
add
mov
lods
shl
iret
pop
xchg
inc
mov
fs
fiadds
cli
fdivr
iret
sbb
in
test
test
outsl
movsb
test
sub
or
xchg
aas
pop
loopne
jmp
fsubrl
js
inc
into
popf
cmp
jp
ficoms
inc
pop
adc
pop
xchg
add
dec
mov
dec
mov
repnz
pop
sub
out
cli
inc
cmc
loopne
retw
xor
imul
inc
fbld
pusha
push
pop
clc
call
into
bound
add
lcall
fidivl
cmp
imul
aas
lahf
ljmp
xlat
filds
aaa
std
jmp
xor
mov
bound
test
stos
add
lock
ljmp
jg
int
mov
ja
mov
test
mov
jns
in
clc
adc
pusha
scas
mov
test
pop
and
lods
mov
inc
ljmp
lahf
push
shrl
cmp
inc
add
jbe
jo
xchg
push
dec
pop
jmp
jbe
pushl
cld
addr16
dec
pushf
or
lods
and
icebp
loope
pop
sub
mov
pushl
punpckldq
mov
push
fcomps
popa
addr16
pop
arpl
in
sub
sub
outsl
sarl
add
jl
ljmp
hlt
or
sar
ljmp
mov
ret
add
cbtw
mov
jp
xchg
call
xchg
push
push
mov
stc
jecxz
mov
mov
fucomi
fwait
andl
call
je
sub
push
stos
test
jmp
xlat
xorb
mov
decl
stos
push
push
pop
call
jmp
xor
decl
js
in
outsl
xor
xor
in
inc
aaa
addb
jg
imul
mov
loopne
in
shl
inc
js
mov
std
jns
fs
add
mov
inc
push
sub
sub
addr16
dec
dec
jle
mov
xor
pop
mov
dec
pop
sub
add
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
clc
enter
cli
xor
enter
dec
add
inc
push
fs
add
jo
inc
lods
fsubrs
incl
mov
jmp
or
push
js
cli
sub
mov
test
incl
push
and
inc
inc
mov
cmp
cmp
xchg
mov
and
test
mov
xchg
out
iret
cmp
incl
pushf
push
mov
xchg
ret
jmp
std
ret
push
mov
adc
push
mov
lods
sub
mov
jp
jle
mov
out
xchg
rorb
or
shlb
incl
jae
addl
inc
xchg
add
push
test
movsb
cmpsb
cmp
movsb
shlb
inc
lods
sub
call
flds
mov
and
jo
push
jmp
mov
call
rsqrtps
xchg
outsb
jno
popa
xor
scas
and
out
sub
xor
dec
arpl
mov
push
pop
scas
aaa
mov
mov
lock
mov
jp
call
mov
pop
adc
pop
pushf
sbb
mov
gs
jns
mov
out
rolb
scas
jmp
inc
idivb
je
cld
mov
mov
shll
into
ret
filds
incl
sbb
xchg
add
pop
mov
mov
push
in
and
icebp
ja
cmc
lock
lcall
xchg
bound
or
lcall
lock
or
gs
jmp
mov
cmpl
inc
push
jmp
scas
js
cmp
imul
sub
imul
aam
scas
test
cli
xchg
inc
decl
aad
js
push
cwtl
movsl
dec
dec
addr16
push
lods
loope
cld
outsb
stos
mov
and
sar
xchg
mov
mov
jle
lds
fstpt
pushl
sti
jae
rcrb
push
insb
ds
push
pop
mov
lods
pop
stos
fwait
push
jg
int
dec
mov
mov
in
mov
js
arpl
add
inc
inc
pop
cs
addb
jns
scas
xor
inc
stos
add
sub
fcomps
dec
jmp
pushf
dec
es
inc
cmp
lods
jbe
fdivr
insb
sbb
inc
out
mov
jp
pop
loope
xlat
popa
incl
sbb
icebp
rcrb
cmp
mov
push
add
jae
xchg
incl
pop
je
and
push
repnz
push
test
dec
dec
shll
adc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
cmp
mov
pop
xor
adc
repnz
lods
je
divb
sub
andl
mov
aam
xchg
fimull
mov
sub
lcall
in
xor
rcrb
or
lock
pop
pushf
cmc
addr16
aaa
std
enter
pushl
jbe
jae
mov
jmp
outsl
andb
xchg
pop
mov
mov
pop
push
out
in
mov
mov
loop
cmp
outsl
daa
sbb
ret
mov
rorl
pop
aam
ljmp
cli
inc
sbb
and
rcl
negl
mov
mov
mov
push
faddp
les
mov
dec
mov
xor
sbb
iret
lahf
dec
inc
decl
cs
adc
pop
xor
xchg
mov
repnz
mov
ljmp
out
push
int
dec
jno
mov
jp
and
mov
ljmp
incl
sar
ljmp
sub
loopne
sub
jl
shlb
incl
gs
and
bound
fdiv
dec
push
int3
fpatan
lods
in
mov
test
adc
xchg
out
lcall
mov
call
test
call
rorl
aaa
mov
dec
sahf
ffreep
enter
test
ret
jg
sub
or
addb
stos
subb
mov
roll
daa
or
pop
das
dec
cmp
push
mov
mov
jl
call
shlb
dec
sbb
addr16
xchg
mov
popa
inc
rcrl
je
push
jecxz
in
push
ret
ljmp
add
jp
pop
mov
aaa
xor
clc
mov
nop
ret
sbb
push
out
shr
pop
into
les
and
shrb
repz
ljmp
jl
xchg
push
lcall
sbb
fcmovbe
add
out
xchg
lret
insl
test
arpl
add
dec
sub
pop
roll
daa
push
xor
les
xchg
pusha
clc
incl
push
cmp
movsb
fldcw
push
sti
and
movsl
gs
imul
jp
xor
jne
fcomip
ljmp
addr16
xor
fistpl
adc
rcll
sub
or
or
popa
lcall
mov
in
cvtps2pi
lret
mov
lea
or
icebp
jb
mov
pop
inc
lcall
xchg
fmuls
out
mov
sub
int
jmp
mov
jle
and
add
cwtl
jge
repnz
and
mov
imul
dec
pushl
mov
xlat
push
arpl
inc
inc
jmp
cltd
lock
pushl
sbb
adc
add
rclb
out
cmpsl
outsl
sub
push
shlb
fcomip
xlat
dec
cmp
pop
sbbl
jnp
mov
fdivl
fisubrl
fsubp
inc
in
incl
in
mov
pop
and
test
jl
cmp
ljmp
mov
or
repz
aas
xor
fnstenv
sub
jne
adc
stos
mov
xorb
adc
mov
fstpl
lock
std
call
or
lds
lea
daa
push
sbb
sub
push
xor
mov
xchg
jmp
sarb
test
iret
push
stc
and
push
mov
call
inc
int
ja
jae
and
shlb
in
div
les
pop
lods
mov
cmp
incl
jge
sub
inc
hlt
lret
and
sbb
scas
mov
xor
repz
or
jg
test
ficompl
sahf
jl
cmp
sti
ljmp
adc
filds
jecxz
push
scas
popf
das
divl
fsubrp
movsl
push
ss
incl
mov
adc
push
mov
pusha
jecxz
test
add
out
dec
pop
hlt
sub
aad
xor
adc
jg
out
dec
inc
es
cmpsb
call
in
in
out
or
cwtl
sbb
data16
lcall
cld
mov
movsb
fdiv
dec
sub
lods
xchg
xchg
mov
cmp
loope
call
or
sub
jnp
mov
aaa
test
inc
imul
adc
mov
filds
mov
insb
mov
movsl
mul
or
cli
daa
pop
out
add
jmp
mov
dec
mov
adc
or
cld
bnd
sbb
mov
decl
pop
inc
inc
or
scas
jae
add
ret
push
cmpsl
cmpsb
adc
daa
pop
shll
rcrb
mov
jg
pop
cmp
leave
jg
cmp
inc
nop
or
inc
adc
mov
dec
xor
inc
in
lea
cmpl
inc
icebp
movsb
xchg
popa
mov
test
cmp
out
pop
aaa
shl
scas
pop
dec
shll
decl
ds
cmp
nop
das
ret
xchg
add
mov
ljmp
xlat
orb
push
bound
in
out
pop
ret
mov
in
xchg
clc
mov
mov
ja
shlb
jp
push
imul
out
lcall
decl
sbb
jno
ss
in
faddl
sub
popf
adc
adc
dec
jp
fs
movsl
cld
cltd
outsb
lock
mov
push
and
mov
and
or
repnz
fcomip
add
outsl
and
sbb
or
shll
pop
mov
push
popa
cmp
inc
pop
insb
dec
adc
fsubrl
xchg
inc
insb
dec
cwtl
add
ja
incl
ret
subb
cmp
clc
ljmp
call
in
dec
push
pop
xchg
jbe
cmp
cmpsl
stos
call
lret
mov
adc
push
int3
ljmp
pushf
jno
cmpsb
int
mov
mov
movsl
cmp
xor
push
push
pop
movl
lret
hlt
or
ljmp
inc
fildll
neg
stc
cmp
adc
sti
into
cmp
push
imul
or
decl
jge
mov
and
movsb
stos
mov
lock
ljmp
jg
lcall
cs
xchg
ja
sub
fbstp
out
sbb
and
fs
lcall
sbb
mov
push
icebp
nop
pusha
cmp
mov
mov
aad
sub
push
ret
lods
or
aas
in
and
push
push
aam
ja
mov
cmp
ja
push
call
or
or
pop
pop
loop
fdivrs
call
fiaddl
decl
lret
and
imul
mov
adc
decl
cwtl
out
movl
lds
mov
orb
mov
fisttpl
xchg
lods
aam
mov
cs
sub
jns
pushf
jae
shrb
ljmp
pop
sbb
xchg
mov
sahf
sbb
xchg
xlat
leave
test
add
jb
mov
fwait
decl
push
hlt
or
push
and
ret
fistpl
test
inc
cltd
shl
ljmp
imul
out
aaa
push
xchg
pop
or
lcall
sub
inc
mov
and
pop
inc
repnz
lock
test
aaa
popa
jg
pushl
adc
dec
xchg
dec
and
jl
adc
inc
or
js
cwtl
aad
test
decl
loopne
ja
mov
cli
les
sub
jecxz
ljmp
push
shlb
insb
lock
sar
mov
loope
cmp
mov
mov
ljmp
hlt
shll
pop
inc
xlat
rcrl
push
adc
mov
jb
jle
call
xlat
mov
andl
out
add
out
adc
in
sarl
sub
mov
loopne
inc
sub
jo
mov
mov
notl
dec
cmpsl
push
mov
in
mov
inc
shl
int3
into
pop
mov
add
in
js
loope
mov
and
mov
mov
lcall
push
sbb
fsts
inc
fistpl
sub
out
cltd
lock
negb
cmp
adc
shlb
addb
xor
mov
adc
jmp
rclb
lods
sub
out
cmp
shlb
pop
das
pop
xor
hlt
cmc
ljmp
xchg
inc
fisubrl
mov
sbb
pop
rolb
xor
mov
lcall
stos
lds
loopne
pop
cmp
addr16
ret
push
lahf
cmp
sbb
in
xor
jg
pop
sbb
mov
ja
jnp
fidivs
xor
dec
sub
sbb
das
cli
nop
add
inc
mov
push
push
scas
lcall
movsb
bound
aad
call
sbbb
jae
push
dec
lcall
lcall
add
jg
jmp
or
or
int
pop
inc
xchg
in
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
sub
sub
jp
jo
inc
jbe
jno
jecxz
fwait
push
xor
push
add
lock
incl
and
jnp
ds
dec
add
push
not
push
mov
test
decl
sub
pop
or
ljmp
rol
cmp
xchg
mov
xor
ficompl
mov
stos
mov
jbe
shl
aam
mov
sub
loope
push
xchg
fsubl
incl
out
repz
push
sub
insb
fisubl
cmpsl
popa
fldenv
ds
repz
jge
arpl
jmp
ja
movsl
stc
sbbl
jg
inc
int
lea
cmp
ss
call
std
test
pop
cwtl
sub
or
mov
jbe
insb
xchg
leave
in
mov
inc
mov
jo
in
imul
mov
xor
xchg
xchg
jp
mov
test
mov
adc
decl
repz
xchg
inc
stos
xor
add
pop
fwait
mov
jmp
fwait
xor
inc
repnz
mov
sub
or
cmpsb
push
insl
push
into
dec
hlt
decl
lcallw
test
mov
xchg
jae
and
les
stc
enter
cmp
pop
hlt
fucomip
adc
xor
sub
or
jno
lods
xchg
mov
dec
xchg
jae
fisubrs
pop
ljmp
push
in
sti
push
or
mov
cmp
xor
sub
dec
fmull
call
pop
adc
jle
sub
test
or
in
ret
ljmp
test
addr16
jns
in
hlt
mov
movsb
mov
jg
in
cld
fmuls
adc
mov
icebp
mov
cmp
out
inc
call
out
pop
mov
fs
xor
dec
out
push
mov
mov
add
jmp
mov
fwait
outsb
jae
mov
xor
enter
mov
dec
loope
xor
jecxz
xchg
add
mov
pop
mov
lcall
xor
adc
pushf
mov
jg
xorb
mov
dec
mov
icebp
cmp
xchg
cmp
incl
mov
je
roll
and
mov
push
sbb
vunpckhpd
pushl
stos
mov
fcmovne
loop
ret
xchg
push
ret
xchg
test
call
out
mov
scas
xchg
jl
gs
outsl
dec
jp
pushf
stos
fdivrl
decl
cmp
mov
or
xchg
pusha
bound
jo
int3
lcall
or
mov
test
sbb
and
insb
mov
mov
ljmp
and
test
enter
mov
movsb
xorl
mov
loop
js
adc
sbb
out
stos
test
jne
mov
decl
pop
fisubrs
or
mov
repnz
inc
jp
xor
aam
or
ljmp
or
sbb
mulb
xor
sarb
cmp
lock
dec
xor
dec
pop
cmp
sbb
cmpb
daa
jo
movsb
jb
lods
adc
mov
in
test
int3
stos
sarb
loopne
aam
int3
ljmp
xchg
jl
negl
fs
push
jnp
sbb
lret
lds
test
fwait
push
sbb
xor
inc
cmp
imul
rcr
xor
push
cmp
fisubrs
call
outsl
popa
inc
push
mov
fdivl
ds
insb
add
jmp
cmp
mov
fcomip
jmp
inc
in
and
pop
or
cmp
fwait
testb
ss
and
sbbb
dec
mov
mov
out
or
ljmp
incl
jmp
push
test
fsubrs
sub
sbb
es
mov
ljmp
jb
ret
and
scas
fmull
xchg
hlt
push
adc
nop
adc
incl
xchg
lahf
fisubrl
jmp
cltd
pop
out
dec
scas
xchg
sbb
int3
dec
jle
adc
dec
xchg
dec
jge
lcall
xchg
dec
sbb
dec
pusha
xlat
js
test
aaa
mov
or
pop
jge
jnp
dec
mov
dec
test
push
and
push
jecxz
adc
test
mov
push
into
cmp
mov
and
cmpsl
push
and
call
or
xchg
outsl
sbb
subb
pushf
cld
dec
int3
out
adc
subl
imul
inc
xchg
scas
cmpsb
ljmp
mov
scas
rol
lret
pop
test
jmp
xchg
out
xor
aam
lock
push
and
cltd
imul
addr16
out
fistpll
sbbb
mov
mov
pop
sbb
aam
popa
or
xchg
mov
or
jge
popf
or
mov
test
add
shlb
cld
std
bound
jge
out
add
imul
call
adc
stos
mov
or
or
or
iret
adc
fcomip
incl
or
clc
out
dec
mov
mov
and
in
cld
push
clc
cmpsl
scas
or
mov
orb
gs
out
sbb
decl
std
decl
jmp
out
cltd
leave
mov
fidivl
dec
decl
pushl
dec
das
cwtl
stos
mov
bound
in
rolb
pushaw
rcrl
decl
sbb
mov
das
and
outsl
inc
dec
or
call
rcl
jno
call
std
decl
xorl
into
xor
cmpsl
inc
jo
stc
xor
ds
gs
insl
stc
pusha
xor
fdivs
rclb
or
in
mov
mov
in
mov
test
testl
mov
xor
jno
adc
lock
or
sbb
pusha
call
fsts
xor
adc
std
adc
arpl
cmp
jp
and
jb
js
jae
movsb
pop
inc
push
testl
jmp
fnstsw
pop
daa
sub
or
sar
dec
das
fildl
or
push
daa
movsb
add
insb
lcall
xchg
adc
dec
incl
movsl
ja
dec
add
push
loop
leave
push
jg
shll
xchg
shrl
push
push
pop
incl
xor
orl
push
inc
sti
cmc
pop
bound
rclb
mov
adc
call
sti
cmpsb
cmp
mov
push
inc
sub
jg
test
jbe
sar
jmp
cs
fsubp
sbb
adc
lea
mov
mov
mov
clc
decl
cmp
shlb
outsl
sbb
jecxz
ret
call
cld
notb
cmp
movsl
and
std
or
push
lds
ljmp
rorl
push
dec
aaa
push
xchg
rcrl
cmc
leave
test
push
cld
dec
decl
sub
mov
dec
lock
or
iret
dec
push
incl
ja
outsb
nop
mulb
stos
outsb
and
or
push
pop
or
ljmp
pop
jno
out
mov
adc
sub
aam
lock
cmp
pop
push
push
ja
ja
xchg
lods
adc
cmp
jp
aas
cmp
daa
cmp
adc
ljmp
xchg
jmp
into
in
pop
gs
adc
cld
repnz
lods
int
xchg
fwait
popf
sub
incl
sbb
mov
push
test
scas
mov
roll
jb
sub
ljmp
jg
xor
bound
test
adc
push
nop
icebp
mov
outsb
mov
fisubl
jne
mov
xor
je
mov
mov
inc
inc
and
inc
lods
imul
call
in
jg
or
incl
mov
enter
inc
andl
sti
bound
pop
xchg
out
orl
add
pushl
sbb
leave
lds
add
inc
sahf
dec
pop
sbb
stos
push
into
fimull
cmpsb
enter
incl
or
jge
jmp
sub
hlt
ljmp
cmpsb
test
sahf
cli
es
aaa
into
inc
mov
dec
nop
aas
xor
repz
ljmp
xchg
jl
jnp
int
or
lock
repnz
xlat
shll
fiadds
push
hlt
inc
cmc
mov
and
lods
xchg
imull
les
jle
adc
decl
je
lret
pop
lahf
pop
popf
in
jnp
ret
lret
push
xchg
mov
and
mov
ljmp
mov
inc
incl
divb
imul
mov
daa
xchg
mov
lds
pop
pop
scas
jb
popa
fistl
sbb
lcall
cmove
fildll
lahf
push
xchg
and
mov
std
sub
dec
sbb
xlat
rcll
dec
xchg
mov
dec
push
push
fmul
cli
sbb
xor
out
inc
cltd
push
pushf
lcall
ljmp
jl
push
mov
push
add
inc
add
in
nop
dec
int3
dec
lock
fsubs
out
call
pop
fs
pop
cltd
adc
in
cmpsl
sub
rclb
jle
hlt
loop
jmp
cwtl
xchg
pop
test
jbe
jle
fwait
ljmp
aas
mov
lcall
add
pop
jp
push
dec
shlb
pusha
sbb
sbb
and
daa
fmuls
xor
decl
cltd
out
push
adc
and
dec
cmpsl
or
and
dec
repnz
mov
std
mov
incl
stos
mov
adc
cmovs
out
pop
std
lahf
lock
jg
adc
cld
mov
mov
test
lret
nop
push
push
sbb
cli
lcall
scas
pop
arpl
xor
sub
dec
dec
jns
call
divl
sbb
and
add
les
or
mov
test
ljmp
rcrl
xchg
aas
popf
or
sub
js
sar
dec
popa
push
imul
jmp
push
xor
pop
lcall
repz
incl
popa
in
sbb
pop
loope
out
mov
cmp
add
cmp
fisubrl
test
filds
stos
lds
dec
cli
xchg
aam
xor
xchg
arpl
or
call
cli
dec
xor
xchg
push
js
and
xchg
add
fs
add
and
ljmp
add
pop
mov
aas
add
test
push
sarb
pop
je
pop
ds
xor
fstpt
je
in
notl
add
sub
hlt
testb
clc
fbld
mov
stos
decl
xchg
xchg
in
xchg
cmp
jmp
cld
test
inc
jae
pushl
pop
adc
je
icebp
jbe
mov
mov
sub
sub
mov
lds
mov
push
cwtl
push
xchg
out
inc
iret
push
cmp
xlat
stc
lcall
iret
push
arpl
mov
leave
cld
in
mov
xor
out
push
in
xchg
addr16
fadds
fwait
xchg
cmpsl
mov
or
push
call
cmpsb
outsb
pop
and
stos
sbb
dec
xchg
cmp
fisttpl
daa
iret
jns
cmp
sub
enter
notl
cmp
xor
mov
mov
cwtl
dec
xor
call
fcompl
lods
jp
ret
push
stc
in
lret
inc
adc
in
test
out
dec
sub
adc
lcall
lret
and
cs
and
or
into
mov
jle
hlt
sarl
pushl
mov
sarl
js
add
clc
jge
popf
scas
xchg
int3
int3
jg
and
mov
mov
insl
loopne
punpckhdq
shlb
push
jno
sbb
ljmp
mov
cmp
jmp
ss
mov
push
or
xchg
xchg
sbb
call
mov
out
or
pop
dec
stc
push
cmp
inc
cmp
sbb
and
ljmp
jl
cmpsl
pop
sub
stc
and
dec
lcall
xor
iret
dec
adc
iret
lock
mov
push
mov
in
pop
pop
sub
or
adc
pop
cmc
fwait
mov
out
lcall
mov
push
cmp
dec
jno
int3
xchg
lahf
scas
and
push
dec
or
mov
dec
xchg
repz
cmp
test
adc
jno
inc
ret
idiv
jmp
fs
adc
push
jle
sti
shl
inc
xlat
fldt
add
mov
sbb
pushl
cmpsl
insl
cs
jne
sub
sbb
mov
pop
outsl
js
hlt
dec
jecxz
incl
hlt
rcl
mov
loope
leave
rcl
pushl
push
shr
inc
sub
inc
pop
popa
mov
insl
mov
lret
ret
pop
xchg
xor
pushl
inc
push
negl
ret
xchg
imul
out
daa
push
rcll
add
cli
outsl
fldln2
xor
les
dec
test
cmc
mov
sahf
insb
pop
insb
mov
cmp
dec
scas
add
jbe
insb
repnz
cmp
aad
mov
repnz
call
mov
jmp
lahf
inc
faddp
sbb
shll
xchg
adc
adc
sub
jmp
das
daa
js
sub
push
xor
int
sub
add
aas
repnz
push
inc
or
dec
jb
inc
push
fs
rcrb
sahf
xlat
dec
fstl
in
pop
cmp
inc
push
cmp
lret
mov
inc
out
jbe
push
xor
nop
inc
adc
push
aas
inc
sub
inc
mov
ljmp
rcrl
pop
and
pop
jg
pop
and
pop
std
jg
incl
cltd
leave
xor
jmp
popa
out
pop
jmp
dec
in
loope
pop
pushl
call
out
push
aas
jnp
cmpsb
push
ficompl
shll
mov
adc
jg
js
push
pop
sub
jb
sub
xor
clc
jo
decl
mov
movsb
int
stos
in
pop
and
imul
push
imul
movsl
mov
aad
bound
cmc
mov
push
adc
lcall
pop
jne
movsl
lods
mov
aad
in
or
popf
mov
sub
decl
jle
jns
jmp
scas
mov
xchg
test
mov
mov
js
imul
jle
test
lods
xor
mov
imul
push
jbe
rolb
pop
xor
jl
sbb
test
mov
dec
xchg
xchg
dec
pop
daa
cld
fcomip
stos
ret
jp
mov
lret
shlb
inc
xor
inc
test
mov
mov
dec
push
pop
inc
fstpt
lcall
decl
sti
dec
sarb
int3
mov
sbb
ret
inc
adc
fwait
sub
gs
jmp
and
or
pop
xor
in
movb
xchg
inc
add
jge
fadd
mov
adcb
mov
lcall
test
inc
out
jp
jg
call
push
adc
fists
jmp
subl
push
add
loope
mov
sbb
lock
incl
iret
and
jnp
add
push
es
or
jns
xchg
dec
xchg
dec
ljmp
push
sbb
cmp
iret
enter
push
pop
das
clc
ljmp
push
ret
scas
hlt
push
cmp
repnz
aas
mov
pop
and
fcomip
addr16
loope
out
xchg
jne
xlat
adc
push
pusha
sub
cmp
add
push
mov
xchg
ljmp
or
rcrl
lods
inc
into
sbb
sub
imul
fstps
fisttps
pop
mov
enter
mov
xor
test
call
sub
inc
minps
loopw
dec
lods
and
shlb
xchg
inc
xor
mov
inc
fwait
and
out
pop
arpl
cs
inc
inc
ficompl
push
insl
je
lcall
int
dec
outsl
les
or
int
shrb
push
pop
push
decl
pop
pop
mov
mov
cs
push
outsl
push
aam
cmpsb
sub
jge
shrb
add
inc
push
cli
jno
or
pop
std
sbb
sbb
decl
sbb
cmp
pop
movsl
fadd
and
scas
shll
pop
push
mov
cld
jecxz
sbb
dec
cmp
push
and
inc
inc
movsb
or
fisttps
nop
insl
negb
jle
mov
jb
jb
push
cltd
jg
icebp
cmpsl
clc
jg
incb
jl
mov
mov
sub
push
jg
pop
pop
loopne
adc
rcl
mov
pop
loopne
add
jp
icebp
cmp
into
mov
rcrl
fcoml
ret
into
jg
arpl
lcall
xchg
dec
mov
sub
mov
loop
call
loopne
xadd
cmp
scas
mov
leave
adc
int3
hlt
xchg
push
xlat
inc
cmp
fcomip
decl
notl
push
clc
dec
inc
push
into
sub
jo
hlt
stc
pop
ljmp
call
jnp
sahf
decl
cmc
sub
not
pop
sbb
rcrb
push
call
sar
ficoms
jecxz
pop
push
push
scas
jbe
cmp
inc
mov
mov
cmpsl
mov
push
jnp
rcr
pop
sbb
movl
xchg
sub
cmc
mov
idiv
pop
adc
or
cld
in
xchg
sysenter
push
cld
testb
in
popa
sbbb
call
mov
hlt
mov
loop
sbb
lret
in
jae
sub
sub
cld
pop
cmp
rcr
in
lds
enter
lcall
jmp
mov
decl
aaa
fcmovb
enter
in
add
dec
pop
pop
out
adc
mov
loope
and
xor
jmp
lds
xor
xchg
or
sub
fcomip
bound
stc
dec
or
rcl
mov
jle
fcoml
mov
sub
gs
pushl
push
ja
dec
scas
not
add
jb
mov
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
decl
xchg
jg
sbbl
push
mov
sahf
loopne
fnstsw
xor
jmp
imul
pop
fstpl
hlt
jp
mov
div
jmp
pop
lock
aaa
pop
dec
ss
mov
jp
add
sahf
stos
dec
test
adc
popa
popa
roll
inc
jge
cmc
or
das
gs
push
sub
cs
ljmp
out
movb
mov
sub
mov
jne
sbb
xchg
cld
push
inc
mov
cmp
imul
mov
push
jae
push
mov
notl
dec
stos
mov
call
fs
ss
pop
xor
leave
loope,pt
pop
loopne
lret
jo
lcall
in
data16
outsb
lods
push
cmp
pop
xor
add
in
cmp
mov
rorb
int3
das
xor
mov
cwtl
loope
stos
cltd
mov
jecxz
in
push
xor
fisubrl
adc
decb
xchg
mov
and
ljmp
add
xchg
jbe
scas
mov
xchg
or
sar
cli
cmp
movsb
push
pop
sti
lods
je
in
daa
cli
in
push
mov
hlt
push
push
mov
scas
inc
sbbb
mov
in
dec
push
adc
decl
xchg
mov
or
jge
fmull
pop
stc
imull
stos
xor
xchg
jae
push
push
push
xchg
test
scas
add
jb
aas
dec
pop
xor
fsub
inc
xor
jns
call
cld
faddp
pop
movl
cmpsb
push
xor
stos
fisttps
adc
xchg
xor
stos
in
xchg
add
push
mov
dec
ret
push
jbe
and
imul
aam
add
jle
jmp
das
sub
inc
add
adc
jge
clc
add
ret
push
loopne
sbbb
xchg
and
push
loop
fsubrp
or
push
nop
cli
incl
jle
insl
enter
popl
mov
cmp
inc
movsb
les
pop
mov
add
je
mov
fwait
or
xor
lcall
inc
rcll
rcll
and
inc
jle
add
and
inc
daa
push
adc
sbb
or
pushf
mov
clc
xor
lods
xchg
addr16
aam
mov
mov
cwtl
fstp
lahf
fistpl
xor
ljmp
pop
mov
pop
sbb
arpl
das
mov
std
sub
enter
inc
bound
repz
je
test
pop
clc
stos
or
test
lcall
xor
mov
push
sarb
inc
sbb
subl
xchg
lods
push
lcall
pop
pusha
pusha
fmull
shrl
fwait
jbe
push
lds
pop
push
adc
lods
and
xchg
lcall
dec
pop
inc
lcall
lods
sub
pop
mov
adc
mov
stos
repnz
insl
jg
call
cwtl
scas
clc
hlt
lods
lods
scas
gs
or
loope
xlat
push
jno
cmp
dec
or
sar
into
mov
arpl
adc
cmp
call
repz
testb
sbb
add
cmp
mov
mov
and
ret
pop
in
jnp
sbb
xor
sub
dec
lds
adc
dec
cld
ljmp
sbb
pusha
leave
inc
xchg
xor
mov
jle
pop
push
movsb
sub
fdiv
inc
xchg
push
dec
stc
or
out
pop
jae
xchg
pushf
inc
add
fs
and
dec
stc
mov
jae
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
call
cmp
mov
data16
cmp
inc
sbb
ret
sbb
push
xchg
stos
jae
adc
and
dec
iret
iret
jp
enter
xchg
and
cmp
decl
jp
or
jg
jnp
cld
cwtl
add
dec
push
dec
out
call
cld
sbb
xchg
sub
lea
clc
mov
call
pop
out
test
mov
lcall
fcoml
shll
push
add
ret
call
or
cmp
push
iret
pop
mov
cmp
jmp
iret
out
les
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
lock
movsb
imul
lret
xchg
pop
cmc
fcomip
testl
jle,pn
mov
outsb
cmpsb
jo
cmp
or
sub
mov
rol
jmp
movsb
mov
ljmp
push
in
push
sub
dec
mov
jnp
enter
pop
inc
add
pop
push
jmp
fsubrl
repz
addb
pusha
mov
stos
cmp
insl
movsl
mov
pushl
aam
push
js
sub
fnstenv
mov
mov
and
loopne
lret
sub
sbb
andb
mov
mov
ds
sub
mov
fnstcw
adc
sbb
shl
jmp
ficompl
shl
adc
clc
inc
and
adc
add
imul
imul
decl
outsl
jecxz
inc
ds
jnp
in
mov
mov
insb
rol
subl
lcall
jecxz
sahf
call
push
insl
pop
jno
es
mov
and
fistps
call
andb
xor
inc
dec
xor
mov
popf
out
pop
xchg
push
pop
jnp
push
fnstenv
std
lcall
orps
repnz
shl
daa
outsb
or
xor
pusha
add
aas
rcrw
xchg
push
mov
mov
loopne
cmpl
popa
mov
call
adc
xor
repnz
mov
int3
je
mov
mov
jmp
enter
sbb
out
movsb
jg
dec
psubsw
or
shl
jmp
mov
mov
incl
into
cmpsb
adc
push
cmc
jle
sbb
jecxz
jmp
xor
mov
test
inc
dec
dec
fcomip
lcall
dec
sbb
dec
lcall
xchg
mov
fucom
mov
ljmp
jg
mov
or
inc
xchg
add
call
aam
paddusw
enter
sti
mov
and
mov
loopne
lcall
mov
loop
mov
lret
mov
add
shl
sbb
sbb
icebp
pushl
xor
loop
mov
mov
cwtl
sub
and
loopne
mov
mov
sbb
decl
cld
iret
and
cmpl
das
or
cltd
loope
cmpsl
pop
in
iret
loopne
cmpsl
lea
cmp
pop
lods
and
jecxz
out
and
dec
or
cwtl
daa
xor
xor
jg
xor
ljmp
inc
popf
jp
clc
stc
nop
inc
int3
push
jg
sbb
jmp
fdivs
adc
mov
aas
and
jae
loope
icebp
sub
mov
cmc
add
add
mov
or
mov
insb
test
inc
loope
mov
stos
mov
arpl
int3
rorl
mov
cmpsl
inc
jns
decl
out
jo
add
add
push
movl
aas
xchg
fstpl
incl
add
mov
jecxz
cmp
and
push
jnp
mov
xor
ljmp
jmp
adc
push
pop
int
xlat
dec
decl
imul
sbb
cmp
or
incl
jp
outsb
lock
jp
and
adc
mov
ljmp
repz
adc
enter
cli
decl
aaa
cld
mov
sti
cmc
sub
mov
jmp
pop
fs
outsl
mov
and
cmp
xchg
xor
mov
jg
incl
inc
mov
out
aad
fstps
add
cmp
mov
lods
fsub
fdivrs
cmp
jmp
gs
rcll
add
xchg
and
adc
and
push
pop
fsubs
fcoms
ljmp
rolb
testl
jno
lods
shrb
lcall
loop
or
add
adc
mov
sub
fcmovu
jg
push
std
jp
push
sbb
push
fdiv
cmp
mov
into
out
inc
sub
ljmp
fidivs
jno
push
cmpsl
lcall
movsb
hlt
sbb
nop
push
cmp
decl
ljmp
xchg
push
call
or
jnp
lret
mov
pushl
adc
xchg
xchg
push
andb
out
fnstsw
xor
xchg
xor
decl
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
sahf
outsl
dec
out
mov
dec
push
push
insl
fadds
and
ljmp
xor
xchg
movsb
in
and
int3
rcr
mov
xchg
sbb
ljmp
rclb
adc
dec
mov
movsl
dec
pop
loop
out
pop
insl
add
sub
inc
repnz
dec
xor
decl
dec
out
rorl
sbb
movsl
or
stc
addb
sbb
jecxz
cld
inc
sbb
inc
inc
push
rclb
mov
lret
xchg
shrb
cmpsb
fiaddl
mov
fwait
lea
cmp
dec
mov
fdiv
adc
xchg
xchg
aad
mov
mov
pop
jmp
mov
jmp
mov
es
shll
jecxz
lds
call
cmp
mov
push
leave
iret
pop
sub
out
insb
dec
or
cmc
outsb
sbbl
jl
daa
mov
test
ljmp
push
push
or
mov
mov
add
xor
movsb
lea
das
nop
inc
popa
jmp
mov
mov
aas
int3
insb
popf
sahf
stos
pushf
in
neg
inc
push
dec
push
sub
repz
add
lret
or
in
mov
dec
mov
stc
sbb
ret
sbb
mov
int
lcall
repnz
lds
and
adc
lret
mov
fdivr
jmp
dec
push
fwait
aas
dec
call
lahf
pop
lock
in
out
push
xor
xlat
jbe
loop
ja
std
icebp
add
lcall
shl
lret
mov
or
cltd
add
iret
repnz
movsb
lods
test
stc
dec
lock
decl
jb
dec
mov
dec
mov
sti
std
xor
add
out
sbb
sbb
lret
fisttps
divl
outsl
add
xor
mov
jb
repz
imul
push
rcrb
adc
adc
inc
movsl
jno
cmc
stos
add
adc
mov
sub
popa
incl
mov
and
push
or
push
out
mov
push
xchg
push
loop
fists
cld
popa
int
loopne
out
pushf
adc
xor
push
xchg
add
mov
adc
decl
out
pushf
mov
and
repz
popf
mov
or
xor
ljmp
cli
inc
mov
sahf
xor
xor
aas
adc
addl
call
sub
stos
cmp
dec
mov
push
or
negl
sub
sub
orb
outsb
das
pop
jns
jg
movsl
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
ljmp
test
ficomps
pop
das
push
push
lds
and
fdivs
in
mov
negl
mov
test
and
jp
mov
sub
cmp
inc
repnz
in
sub
dec
testl
push
jae
jb
out
sub
xor
push
popa
add
jg
lret
push
jmp
outsb
jb
mov
leave
xor
mov
daa
test
push
addl
fnstenv
jb
mov
ljmp
adc
add
fdiv
sti
idivl
pusha
rorb
push
incl
adc
inc
jg
fadds
sub
mov
ret
lock
fs
pushl
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
cmp
jg
incl
push
and
shll
test
cmp
inc
push
push
mov
loop
ljmp
or
js
and
lret
out
add
movsl
push
mov
push
jl
cmpb
add
pop
xchg
mov
cmp
jo
mov
add
fwait
mov
inc
jnp
incl
add
sbb
daa
dec
lahf
add
nop
xor
and
jl
ret
aam
in
fisttpll
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
int
fildl
sub
xor
dec
inc
ret
add
xor
sub
divb
rorb
jbe
pop
cmp
sbb
arpl
dec
jae
jp
cmp
out
xchg
adc
mov
mov
cmp
push
mov
push
cmp
xor
jle
es
ljmp
in
mov
dec
out
xor
lcall
push
aad
push
ficomps
fistpl
fwait
nop
or
adc
test
jg
andb
cmp
insb
add
dec
or
pushl
fwait
sbb
inc
pop
ret
adc
les
dec
add
jbe
or
lcall
mov
repnz
leave
mov
push
jle
sub
inc
pop
pop
lock
test
jle
ret
das
into
pop
sbb
push
es
mov
popf
adc
leave
jne
cld
ror
inc
mov
out
call
sub
mov
daa
shlb
mov
ss
outsb
or
clc
inc
out
pop
testl
push
sbb
lret
pop
sub
xchg
repz
std
aam
mov
mov
arpl
mov
jle
jo
jl
xor
aaa
sti
lcall
test
push
push
lods
add
daa
push
dec
nop
call
ret
fcomip
xchg
push
loop
mov
pop
outsl
js
jo
sub
movsb
jns
pop
inc
sub
add
scas
cltd
fs
frstor
push
adcb
hlt
jmp
pushf
and
or
les
popa
arpl
movsb
iret
lahf
sub
adc
fistps
mov
sbb
in
push
jno
inc
mov
test
xor
mov
xor
call
mov
dec
je
mov
push
mov
sub
push
cld
lods
cmp
ljmp
stos
cli
ljmp
dec
mov
mov
pushf
push
ljmp
mov
enter
or
in
mov
adc
mov
jo
sbb
mov
lcall
test
fs
ret
shlb
or
lds
pop
mov
incl
pop
sbb
inc
sbb
push
mov
or
lcall
int
or
sbb
mov
fsubrl
inc
out
mov
je
mov
lods
lock
das
add
adc
add
push
pop
xor
xor
xor
in
movsb
or
mov
sarb
decl
xchg
bnd
rol
push
js
lret
lcall
adc
cmc
pop
out
xor
enter
mov
mov
mov
push
hlt
ret
lcall
mov
jns
lcall
test
pushf
cmpb
call
sbb
data16
push
inc
or
dec
jmp
inc
stc
xor
xor
and
mov
mov
pusha
dec
repz
dec
dec
jae
outsl
sub
nop
jg
jg
popf
xorl
jecxz
mov
add
mov
fldt
cld
repz
in
lret
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
rcrb
out
into
lods
std
or
fildll
xor
int
jg
call
sbb
push
out
out
push
jae
imul
mov
loopne
mov
xchg
lods
lods
adc
ljmp
clc
fs
cmp
insb
pop
lea
movsb
insl
mov
pop
sti
add
out
xchg
adc
xor
lret
lods
aad
lret
clc
cmp
xor
out
pop
dec
or
std
mov
stos
cli
fwait
push
mov
jo
xor
or
dec
fsubrl
test
sub
testb
mov
fbld
icebp
push
mov
pop
ficoms
xchg
jb
pusha
movsb
push
cmpsl
inc
lods
ljmp
or
mov
mov
and
jo
repnz
add
rcll
arpl
stos
rcll
sub
ljmp
lret
jb
mov
test
jmp
inc
out
jb
sub
imulb
fadd
pop
lcall
sbb
bound
inc
dec
test
cmpsl
or
shlb
mov
pusha
xor
rolb
call
sub
or
cmpsb
push
dec
dec
mov
xchg
arpl
test
xor
jle
mov
in
jmp
pop
loopne
or
pusha
xorb
ss
xor
mov
mov
or
add
or
mov
jmp
outsl
xor
loop
ja
in
add
push
adc
xchg
add
inc
sbb
call
mov
pop
xor
stos
rcr
push
sbb
sbb
in
mov
dec
xor
popf
xor
ret
inc
mov
out
push
mov
cmp
xor
out
xor
mov
rcll
sub
test
ljmp
and
and
int
push
repz
out
or
popa
push
xor
xchg
mov
mov
mov
inc
xlat
sbb
mov
pushl
mov
dec
mov
jae
cmp
adc
popf
leave
adc
inc
aad
jmp
jne
jo
fldenv
mov
fldt
outsb
push
sbb
mov
mov
leavew
call
loopne
push
jp
sbb
insb
pop
in
negb
lods
pop
xchg
xor
in
mov
pop
stc
in
jne
daa
movsl
je
jmp
lcall
call
sahf
mov
adc
mov
fnstcw
lcall
in
sbb
fimuls
adc
ljmp
push
push
mov
fsubrs
test
jge
xorb
adc
out
xlat
mov
call
add
in
mov
addb
push
int3
jae
inc
out
pop
rorb
jge
test
jns
aas
mov
data16
fcomps
cmp
scas
xor
adc
fidivrl
mov
mov
incl
movsl
sub
push
jp
jo
je
pop
pop
pusha
dec
dec
push
inc
inc
dec
push
sti
incl
insb
out
and
rorb
or
ljmp
sub
imul
xorb
xchg
cli
call
sub
jne
xchg
fisttpll
mov
test
add
add
fprem
decl
cmp
push
lods
xchg
fsubs
dec
jg
sbb
jle
cmp
dec
decl
sbb
push
fdivrl
fnstcw
jmp
incl
sbb
aas
rorl
jecxz
mov
inc
stos
sub
mov
scas
sbb
pushf
pushl
and
repnz
pop
aaa
inc
add
push
repnz
popf
cld
orb
pop
ljmp
add
sarb
mov
icebp
push
add
sub
jmp
pop
fcmovb
cmp
xchg
dec
add
push
gs
push
adc
lcall
mov
mov
cmp
dec
jae
mov
cmp
mov
xchg
nop
cs
cmp
sub
or
xchg
lahf
mov
jg
jle
cwtl
inc
in
push
inc
or
push
sar
das
clc
sub
mov
clc
int3
jl
sub
jae
mov
mov
insb
xlat
xchg
aad
stc
in
lock
jg
pushf
aad
push
mov
daa
inc
or
push
aam
cltd
sbb
and
inc
fbld
scas
data16
jne
mov
popa
mov
inc
jae
adc
pushf
mov
call
inc
pop
sub
cmp
dec
lock
mov
test
jmp
jge
sbb
jecxz
xor
lcall
cwtl
and
divb
mov
add
in
mov
outsl
mov
pop
push
fwait
cltd
pop
mov
mov
and
sar
ljmp
pop
jno
sbb
lods
jae
stos
rorl
nop
scas
jge
mov
push
mov
pop
in
push
push
pop
in
incl
clc
popf
or
js
jle
and
mov
aas
out
test
mov
cmp
pusha
xchg
popf
jl
in
dec
or
push
push
xor
mov
xchg
outsl
push
call
fdivs
dec
jmp
stc
lcall
cmc
ljmp
scas
and
push
pop
mov
fildll
push
test
inc
dec
lock
fbstp
adc
cli
lods
jg
movl
mov
xor
movsl
aad
loopne
or
lods
pop
loop
dec
outsl
es
aas
push
sbb
int
mulb
call
aad
clc
cmc
lret
stc
pop
cmp
lods
jbe
popf
dec
rorl
imul
inc
pop
icebp
inc
xchg
ret
shlb
pop
bound
hlt
pushl
daa
cmp
mov
dec
fists
dec
adc
loop
mov
xor
call
dec
push
test
data16
and
popa
jno
int
repz
dec
xchg
pop
cmp
cmpsb
mov
jo
iret
jns
add
add
pushl
push
cmp
cs
jo
mov
imul
lock
jg
scas
inc
pop
sbb
sarb
packssdw
movsb
ret
cmp
fsts
pushl
push
and
ret
div
fs
xor
xchg
mov
hlt
mov
jno
jecxz
pop
jp
incl
out
inc
jnp
and
and
mov
xor
stos
sbb
add
pop
pop
icebp
ljmp
mov
lret
xor
fidivrl
int3
and
aam
mov
lock
sub
sti
jmp
and
sarl
std
lahf
jmp
cli
pop
lahf
out
incb
jg
out
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
adc
daa
xchg
add
jmp
xlat
xor
mov
mov
mov
stc
inc
add
in
push
loopne
mov
mov
pushl
mov
pop
mov
jns
subl
xor
loope
testb
jmp
lcall
data16
ds
sub
ds
punpcklwd
js
mov
sub
sub
incl
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
test
pop
pop
lods
dec
or
loop
ljmp
adc
stos
stc
imul
ja
mov
pop
mov
xor
or
inc
jo
mov
js
cmpsl
inc
inc
mov
push
mov
std
push
jp
dec
call
xor
mov
je
or
sub
jmp
sar
rcrb
mov
adc
sub
popf
lahf
jmp
xchg
outsb
arpl
push
call
adc
sub
and
jg
fistps
js
jl
push
and
push
mov
pop
jb
pop
mov
call
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cmp
test
cmp
ljmp
call
mov
xchg
popf
enter
addr16
mov
daa
cs
scas
dec
test
push
test
dec
cmp
mov
lods
push
push
mov
sbb
pop
cmpl
adc
pop
pushf
jmp
call
mov
cmp
sbb
inc
out
xor
add
inc
cmp
cmp
cmp
pop
je
insl
std
sti
movsb
iret
jg
xchg
mov
mov
loop
sub
incl
gs
das
out
jae
aas
jo
mov
dec
mov
sahf
mov
incl
fwait
subl
mov
jle
mov
xchg
aam
jb
stc
lods
pop
cwtl
aad
decl
mov
aad
add
mov
rorl
pop
ret
jg
lret
outsl
dec
aas
lods
lcall
pusha
fisttpl
push
and
je
scas
clc
incl
inc
cmpb
xchg
loop
jge
cmp
iret
mov
aam
call
and
cmpsb
cwtl
pop
imul
jp
imul
aaa
scas
push
xorb
sarb
pushl
xor
sbb
mov
pusha
fisubrs
push
inc
xorl
add
jmp
pop
fwait
mov
insl
mov
adc
pop
mov
jecxz
sbb
negb
jmp
sub
push
addr16
imul
mov
sbb
jg
ret
and
js
lahf
jo
jl
push
movsb
aad
call
bnd
mov
ret
mov
sbb
cmp
jbe
mov
xlat
sti
mov
jg
pop
mov
sbb
cmpb
ja
lret
lcall
xchg
inc
sub
cmp
or
clc
sub
inc
or
loope
pusha
lds
push
jg
pop
cmc
ds
rcrb
xor
cmc
cmp
inc
ret
sahf
push
cmpsl
cmp
cld
xor
cwtl
aad
inc
notb
cmp
or
pop
fdivrl
aam
inc
adc
xor
popl
aam
pop
inc
jmp
inc
lds
xor
decl
lock
lock
push
clc
mov
in
flds
cmpsl
cmp
cmpb
sbb
pushl
or
dec
in
pop
jge
push
sub
test
sarb
xchg
les
mov
push
jp
aas
repnz
ss
andb
mov
sbb
cmp
into
movsl
cmp
or
icebp
mov
cltd
aad
std
out
jne
adc
call
loop
stos
mov
pop
add
or
cmpsb
fwait
mov
icebp
mov
ljmp
incb
or
cld
inc
push
imul
mov
rorb
pushf
movsb
test
inc
les
lods
mov
jmp
js
or
sbb
out
and
push
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
cld
dec
loope
loopne
in
adc
push
mov
daa
mov
xor
mov
icebp
addl
inc
jmp
xchg
dec
lods
lock
add
gs
out
sub
aad
lcall
add
push
mov
push
jne
inc
mov
add
mov
mov
push
clc
incl
jp
jno
loope
pop
in
cmp
push
dec
dec
xchg
push
gs
decl
dec
cmp
or
push
xchg
inc
rolb
jae
dec
push
pushf
pusha
cld
in
pop
pop
jge
imul
jo
das
cmp
ret
lcall
inc
mov
dec
push
mov
push
fcoml
test
addr16
and
xor
lcall
call
lret
xchg
iret
pop
mov
push
aaa
and
pop
xchg
rclb
inc
cld
fists
mov
out
mov
popa
mov
mov
call
clc
sbb
mov
pop
mov
pop
lahf
or
or
call
hlt
stc
sub
jne
or
mov
jnp
sti
or
repnz
or
ret
adc
pop
lds
mov
out
shrl
addl
es
sbb
sbb
inc
in
mov
ljmp
cld
jns
mov
ror
dec
cs
mov
sbb
jbe
dec
mov
mov
xlat
mov
mov
pop
pusha
addr16
xchg
xchg
sub
shll
sti
popf
lods
xchg
mov
popl
xchg
ljmp
sar
lock
add
sub
loopne
mov
jmp
mov
dec
cmp
std
iret
add
jmp
scas
mov
xor
sub
cmp
or
call
roll
sbbb
pop
pop
inc
and
jl
add
add
sbb
fldt
mov
xor
mov
pop
pminsw
dec
xchg
push
fcompl
cli
jnp
addr16
mov
ficompl
outsl
fdiv
cmp
inc
push
nop
sahf
jno
insl
adc
je
mov
cmc
call
movsb
or
andl
inc
and
xchg
mov
and
jg
int
or
ret
mov
or
sbb
stos
mov
mov
lret
mov
sbb
sbb
fs
mov
jmp
jno
pop
sahf
and
lods
jo
pop
icebp
js
push
aas
xchg
inc
inc
xorb
mov
hlt
fcomip
dec
leave
adc
mov
mov
ljmp
sbb
inc
mov
cmp
cmc
enter
dec
mov
adc
mov
sub
mov
adc
sub
sbb
dec
jno
jbe
pop
jl
cmp
push
popf
aad
sub
loopne
push
imul
fcos
pushl
jge
mov
fucom
mov
mov
pop
pushf
in
jns
push
addr16
sub
sub
lcall
lcall
xor
scas
pop
cltd
nop
xor
jmp
mov
cli
push
fucom
sub
lahf
or
call
mov
shlb
mov
mov
lock
incl
shrl
fs
sbb
xchg
mov
mov
push
push
xchg
inc
jns
popa
sub
stos
sbb
arpl
mov
push
dec
or
in
push
cmp
cmp
pop
and
rorl
push
and
mov
jle
lods
pop
aaa
xchg
sti
clc
cmpsl
adc
popf
cmp
mov
lods
jmp
jnp
sbb
pop
push
neg
xchg
or
adc
ljmp
push
jg
mov
test
aad
mov
adc
mov
ljmp
subb
inc
lret
push
or
lds
arpl
jp
lock
lds
test
cmp
mov
and
call
xchg
ret
xchg
mov
adc
icebp
or
data16
pop
add
lcall
fwait
pop
mov
iret
sbb
cmp
dec
mov
pop
push
xor
jmp
pop
and
mov
push
mov
xchg
mov
adc
js
fs
movsl
xlat
fmuls
testb
xor
in
bound
inc
ja
lcall
adc
ljmp
cmpl
sbb
leave
push
xor
or
adc
cmpsl
jle
mov
pushl
jbe
pop
lods
test
jns
dec
jne
adc
icebp
add
adc
rclb
sbb
add
lods
stc
stos
add
cmpsl
mov
in
pushl
mov
je
je
fstps
ds
push
call
call
daa
xchg
nop
stos
smsw
sub
popf
add
push
jg
in
adc
sbb
adc
and
mov
repz
inc
mov
mov
ljmp
mov
lcall
aad
push
add
xchg
jl
jmp
cltd
xchg
les
fisttpl
add
inc
pushl
cmc
cmp
loopne
xchg
push
cli
fucomp
test
stos
ljmp
andl
xchg
test
sub
cmp
cli
mov
incl
out
movsl
sbb
pop
movsl
cmp
mov
cmp
pushl
and
xchg
sbb
aad
lods
dec
arpl
pushl
pop
pop
inc
pop
xlat
mov
jge
or
sub
push
jge
inc
mov
sub
lcall
ss
mov
shll
and
add
in
cmp
sbb
and
mov
outsb
jmp
pop
ja
sbb
test
decl
or
jmp
and
and
icebp
sub
test
push
xor
push
hlt
ljmp
xor
mov
fs
aas
pop
add
fidivrs
xchg
adc
leave
mov
cmp
pop
xor
fwait
jle
icebp
aas
cmp
cmp
push
sbb
or
or
cmp
std
xor
push
pop
push
rcr
in
adc
pusha
add
ds
lcall
and
jle
inc
js
stos
or
sarl
jle
icebp
int
sti
push
xchg
aaa
repz
ds
cmp
std
sub
pushf
sub
mov
dec
mov
jne
xchg
xchg
add
fistps
mov
jg
pop
decl
test
push
adc
mov
lret
or
mov
mov
xlat
clc
lcall
mov
fildl
push
lock
cs
ss
call
outsl
and
fcomps
xchg
fsubl
sub
lods
data16
and
fadds
mov
inc
dec
fbstp
xchg
test
pop
inc
mov
xlat
aas
dec
loopne
or
imul
jo
pushf
cmp
mov
jno
js
cmp
xchg
aaa
icebp
jecxz
mov
mov
gs
add
and
dec
cmpsl
aaa
jmp
xor
icebp
sbb
js
and
test
gs
and
or
adc
jmp
in
sbb
ds
or
cmp
sahf
xchg
ds
ja
adc
call
lahf
sbbb
sub
decb
ljmp
mov
in
jmp
mov
inc
jbe
mov
ljmp
xchg
les
sub
adc
jmp
cmp
jmp
ficoms
push
jmp
cmp
lret
gs
rorl
icebp
jne
call
fsubrl
ljmp
push
dec
mov
pop
cmp
js
mov
inc
mov
in
out
xchg
push
mov
add
test
cmp
xor
cli
imul
xor
mov
mov
jp
mov
mov
dec
fs
dec
mov
fstpt
mov
mov
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
cmpsb
jmp
stos
xor
add
add
mov
out
je
push
rcrl
mov
inc
rcll
jno
pushl
roll
lea
inc
and
inc
add
bnd
push
movsl
mov
pushf
xor
sbb
fdivs
push
mov
cmp
xlat
sbb
incl
xlat
and
pop
aaa
mov
lock
and
pop
iret
jne
adc
mov
lcall
aaa
cmp
adc
scas
loop
sub
loopne
xor
or
int
sub
aaa
adc
shrl
push
jb
push
pop
sahf
cmp
ds
jmp
dec
es
sar
mov
xchg
incl
cli
xor
xchg
adc
std
mov
test
jbe
icebp
int3
inc
sbb
and
sub
inc
in
pushl
cmp
or
outsl
test
in
out
iret
fcmovnbe
pop
sub
jp
xchg
jae
js
cmp
decl
icebp
int3
cmp
or
or
repz
ret
cmpsl
xchg
ds
xchg
stos
sbb
fcomip
gs
das
sub
mov
mov
testl
imul
mov
movsb
imul
mov
cli
jno
cmpsw
dec
cmp
test
adc
in
dec
rcll
aas
jmp
es
cmp
and
jge
cld
push
sub
clc
ljmp
test
imul
jmp
jp
insl
ds
push
scas
pushf
sub
int
or
fmuls
lcall
xor
pushf
mov
xlat
ret
dec
jmp
je
cmpsb
sahf
and
jmp
repnz
fisubs
fs
out
mov
mov
jae
stos
lcall
lock
addr16
mov
cmpsl
in
decl
stos
push
mov
cld
fbstp
lds
aad
add
lea
stos
sub
pop
push
push
push
push
xchg
and
jle
xor
sub
lcall
inc
xlat
jmp
mov
xchg
and
or
aaa
iret
arpl
add
mov
mov
test
ljmp
cmpsb
xchg
push
mov
in
push
jb
xlat
in
mov
test
mov
or
lcall
mov
mov
lods
test
cmp
incb
stos
lods
popa
clc
sbbl
dec
cmp
adc
pop
movsb
popf
cmc
shll
and
adc
cmpsb
push
adc
out
mov
in
add
pop
stos
lahf
sbb
lea
aas
mov
fdivrs
push
inc
sarl
cmp
incl
xchg
xor
outsl
push
sub
out
push
loop
adc
addps
jns
jg
movsl
mov
xchg
lods
shll
clc
lods
sub
mov
jge
add
xchg
or
pop
push
and
cwtl
imul
xor
sub
lods
testl
or
mov
sbb
jmp
orb
inc
adc
jnp
call
leave
push
sbb
in
jge
or
ljmp
add
mov
mov
jno
or
or
std
xchg
es
rorb
in
ljmp
xchg
adc
lcall
rcll
loope
pop
sti
mov
mov
push
test
sub
repnz
cmpsl
rcrb
lea
pop
jge
and
pop
ja
jbe
outsb
outsl
aaa
push
std
pushl
das
push
dec
inc
leave
push
or
sbb
sub
ljmp
add
movsl
out
push
mov
add
pop
add
jbe
mov
notb
arpl
xor
add
pop
decl
addr16
std
adc
xor
iret
jle
sbbl
inc
imul
jns
lcall
out
and
adc
fsubs
cli
push
ret
push
sub
js
add
decl
rorl
add
add
pop
add
lret
inc
fucomip
sbbb
out
ss
ljmp
jmp
shll
ret
sub
fcomp
add
into
ret
ljmp
js
sub
xor
add
inc
pop
insl
cmc
mov
or
cs
es
and
jg
mov
pop
stos
add
std
sbb
push
sbbb
dec
mov
mov
push
in
movsl
popa
add
fcmove
push
sub
dec
imul
mov
pop
out
xorb
dec
hlt
mov
fnstenv
pop
pop
jno
adc
incl
stos
ds
pop
pop
xor
subl
cld
add
dec
call
pop
mov
mov
fwait
nop
mov
jo
jb
fisttps
pop
ret
mov
mov
dec
sarl
cwtl
je
jle
push
insl
mov
mov
xchg
filds
dec
leave
add
ret
je
push
jae
add
test
xchg
incl
dec
dec
jl
dec
push
mov
inc
or
idiv
call
fsts
aad
lods
in
mov
mov
hlt
jecxz
cmp
ljmp
or
mov
das
xchg
add
jnp
mov
js
cli
call
dec
movsb
movsl
shl
xchg
or
jne
add
push
out
out
pushf
aam
jp
pushl
insb
cltd
cwtl
pop
mov
inc
mov
push
push
es
add
movb
jg
mov
push
cli
lea
iret
and
sub
pop
dec
loop
filds
mov
mov
xchg
mov
xchg
stos
dec
cld
sbb
push
xchg
mov
dec
ljmp
je
adc
xchg
jnp
inc
clc
cmpsb
sbb
push
ds
loop
ljmp
sbb
dec
imulb
add
in
adc
icebp
leave
cmp
jmp
fildll
or
shrb
sbb
pop
inc
pop
cmp
push
jb
mov
xor
adc
test
cmp
pop
inc
xor
out
imul
iret
cmp
inc
lret
data16
mov
decl
pop
lock
adc
std
inc
popa
out
sti
mov
mov
ljmp
mov
cmp
aas
jge
fucomi
rorl
xchg
cmp
jbe
add
das
sar
test
jge
lods
xor
andl
mov
or
ret
ljmp
or
pop
cmp
jns
and
das
mov
pop
xchg
lock
ds
in
lds
xchg
push
cmpsb
mov
xchg
fistpll
and
dec
inc
stos
movsb
jecxz
xchg
aaa
adc
jmp
fcom
xchg
mov
aad
mov
and
popa
push
push
loop
or
xchg
cmc
cld
sub
sub
jmp
mov
pop
add
add
add
push
sbb
cmp
jle
xor
or
shlb
push
add
mov
inc
jl
jg
bswap
dec
fs
lcall
mov
cli
lcall
sahf
stc
jb
and
pop
dec
je
jmp
mov
ljmp
icebp
xchg
out
iret
push
xor
xchg
and
clc
lock
xchg
test
out
sbb
or
int
xchg
xor
mov
add
adc
stos
and
or
lcall
fs
adc
outsb
fs
repz
or
sub
xchg
jl
cld
incl
pop
xchg
sub
xor
mov
je
adc
add
lret
jmp
jecxz
lcall
fdivrs
ja
inc
add
sbb
dec
push
and
bound
dec
pop
xor
pop
pusha
lods
dec
cs
test
mov
sub
sbbl
xchg
jb
and
cli
repz
add
xchg
fs
ds
mov
ret
sub
push
xchg
mov
scas
shrb
jmp
jp
lcall
loopne
add
ljmp
sbb
xchg
lahf
in
rcrb
loop
mov
andl
mov
and
xchg
ljmp
pop
inc
push
mov
adc
pop
mov
dec
or
mov
mov
push
sub
or
int3
lcall
nop
loopne
push
mov
adc
stos
add
and
ljmp
sbb
ds
insl
ficompl
push
sub
cmp
bound
fistps
cmpsl
fmull
rcr
je
lock
repz
ret
and
and
xlat
push
dec
push
mov
lea
add
sbb
adc
or
and
popf
ja
adc
lods
add
inc
fisubrl
cwtl
out
or
xchg
lahf
out
mov
pop
decl
cmpsb
pop
cli
pop
ficoml
adc
roll
pop
lahf
cmp
cmp
inc
stos
cmp
xlat
jp,pt
mov
xor
lods
sub
lock
push
fiaddl
jmp
cmp
and
sub
jle
sbb
sbb
out
sahf
fwait
mov
push
sahf
add
loope
sbb
or
mov
std
fmuls
cmp
push
call
push
jb
test
add
lds
cld
fbld
outsl
cmp
mov
sub
sub
lcall
shrb
dec
fimuls
cmp
push
push
xor
add
fldpi
pop
pop
adc
stos
push
mov
and
std
les
pop
loopne
jg
sbb
or
sbb
push
sub
repz
incl
dec
dec
xchg
fcmove
aad
imul
outsl
rcrl
xchg
pop
sbb
and
outsb
movsl
pop
ljmp
pop
test
ja
and
adc
adc
pop
ficoml
xchg
pop
sub
or
outsl
clc
subb
add
mov
sub
jg
or
arpl
dec
dec
mov
mov
mov
imul
jle
push
push
stos
lods
sti
dec
stc
or
mov
fstl
iret
movsl
mov
cmovnp
pop
mov
aaa
or
loope
jmp
xchg
mov
jnp
push
inc
mov
pop
lcall
jg
add
in
test
jl
cmc
loop
push
push
adc
sarb
call
push
idivb
xor
xor
aam
jb
push
cmp
fsubrs
push
outsl
cli
lcall
cmp
popf
hlt
dec
adc
jb
pop
js
xor
ljmp
xchg
shrb
out
xchg
add
mov
xlat
arpl
incl
jae
movsl
xor
or
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
in
xchg
addr16
cwtl
xchg
sub
icebp
arpl
nop
cwtl
jmp
clc
mov
icebp
shrb
pop
inc
jecxz
fstl
cwtl
je
or
sub
lcall
cmp
jo
enter
rorb
addl
push
es
lret
or
mov
inc
adc
sbb
sub
std
add
mov
scas
pop
sbb
sub
inc
sub
mov
jb
inc
dec
lock
ljmp
jle
dec
and
and
xchg
hlt
xchg
add
push
loope
lahf
push
mov
mov
xchg
inc
adc
inc
loopne
testb
mov
ljmp
and
leave
jo
iret
iret
adc
sbb
inc
sbb
in
stc
test
sar
call
jmp
fdivrl
insl
xor
ja
push
xor
dec
cwtl
adc
insb
pushf
fcompl
lcall
mov
cmp
jmp
mov
leave
push
or
pop
loope
jg
mov
and
cmp
mov
sub
aad
into
imul
lret
int
call
out
xchg
dec
sbb
cmp
inc
or
dec
test
cmp
xchg
insl
sub
incl
shll
cmp
lcall
into
xlat
and
idiv
stos
push
sub
push
mov
pop
sub
gs
test
ljmp
cmpsb
leave
gs
cs
mov
mov
pusha
outsl
arpl
sbb
pushl
cld
push
jo
sub
scas
inc
ds
cmp
mov
jae
sub
adc
pop
decl
push
in
das
and
xor
adc
int3
repz
pushf
pop
imul
loop
mov
adc
pop
lock
shrl
in
popa
aad
inc
push
ficoms
mov
push
ret
jl
mov
lea
xor
test
sbb
mov
loope
push
idivl
inc
mov
jmp
test
in
jae
pop
imul
mov
rol
outsb
sub
jmp
aam
mov
outsb
xchg
rorb
in
or
out
ret
aaa
push
jmp
shll
push
mov
loopne
push
enter
mov
roll
mov
push
scas
mov
shlb
mov
fnsave
mov
or
mov
jne
push
dec
js
and
call
ret
mov
icebp
lret
sbb
jne
cmc
sbb
jmp
stc
xchg
sub
mov
mov
int3
cmp
imull
push
xor
inc
sahf
and
sub
incl
cmp
sbb
dec
push
mov
sub
jb
mov
mov
xchg
mov
xchg
or
idivl
loop
cltd
and
jg
pop
xchg
xchg
mov
icebp
out
lods
sti
int3
stos
lods
inc
nop
lcall
or
repz
fwait
les
mov
jl,pt
adc
test
xor
add
add
jae
or
jl
outsl
cwtl
int3
mov
push
mov
out
ss
inc
pop
lcall
iret
daa
and
push
call
decl
cmp
jno
lcall
ljmp
addr16
jg
call
or
jnp
jmp
xchg
lea
loope
mov
mov
and
cmp
inc
cmpsl
dec
jns
inc
and
roll
jae
push
ljmp
js
cmpsb
dec
stos
mov
cwtl
sub
dec
adc
aaa
das
repz
scas
mov
call
std
sbb
int
cmp
push
test
jne
repnz
rcll
jmp
xchg
mov
adc
xchg
jne
repz
rcl
cmpsl
iret
and
push
scas
mov
std
clc
push
mov
inc
leave
mov
lcall
xor
pop
icebp
call
mov
jns
dec
sub
cmp
test
inc
jnp,pt
jbe
call
jno
in
cld
mov
or
arpl
mov
pop
mov
sbbb
clc
inc
dec
jno
sbb
xchg
xor
or
mov
ss
ljmp
and
add
push
push
inc
xchg
inc
pop
mov
mov
outsl
ss
incl
add
xchg
int
lock
and
incl
popa
out
mov
and
dec
mov
dec
repz
mov
in
arpl
xchg
sbb
stos
push
ljmp
jmp
in
rcrl
aad
loope
popf
scas
and
mov
leave
ljmp
jns
popa
pop
add
loope
or
dec
dec
leave
das
ja
pminub
je
or
xchg
flds
jmp
cmp
xchg
xchg
stc
inc
adcb
mov
insb
cmc
out
push
pop
std
incl
es
iret
jbe
imul
sbb
test
scas
mov
fcomps
les
and
decl
adcb
fwait
mov
ss
push
dec
lret
cmp
test
incl
mov
xor
mov
aad
add
add
loop
cmc
cld
jle
mov
scas
lcall
movsl
sub
pop
vmptrst
ja
mov
pop
ljmp
decl
sbb
shll
jmp
mov
stos
inc
mov
push
out
test
sbb
bnd
repz
loopne
adc
repz
jmp
out
loop
mov
shl
cmp
fsts
adc
pushf
ljmp
decl
out
cmpsl
shll
push
inc
fimull
add
pusha
data16
adc
in
cmp
jmp
out
clc
dec
push
add
mov
sarb
xor
xchg
mov
inc
hlt
or
mov
jmp
mov
and
insl
arpl
pop
test
add
ret
mov
xorb
jg
ret
ljmp
cmpsl
cmpsl
dec
push
fldl
movsl
gs
mov
ror
and
sbb
repnz
test
call
cmp
mov
movl
pop
dec
add
ret
jle
or
das
ret
xchg
mov
inc
sbb
jecxz
out
inc
jge
mov
adc
incl
leave
cmp
in
in
add
fadds
and
cltd
aam
xchg
inc
xor
sbb
add
lcall
jmp
mov
popf
lahf
fstpl
fildl
jmp
or
les
xor
mov
dec
lea
jp
sahf
fcomps
push
jmp
push
loopne
call
xlat
adc
mov
scas
loope
inc
push
adc
lcall
dec
call
adc
lea
gs
stos
fxsave
js
clc
cmp
filds
in
add
push
subl
mov
pop
dec
cmp
inc
movsb
push
sti
and
fxch
out
sbb
or
aas
ljmp
cmp
or
cwtl
pop
dec
sub
add
jmp
rorb
xor
add
mov
xor
ljmp
adc
push
stos
mov
adc
sahf
adc
addl
push
das
mov
sbb
ret
decl
mov
test
mov
mov
ds
pop
stos
mov
loope
inc
adc
mov
inc
data16
test
test
mov
mov
pop
or
test
cmpsl
fisubrs
out
ret
or
inc
or
pop
cmc
ljmp
sbb
inc
jbe
mov
sbb
adc
fiadds
xchg
fldenvs
ljmp
decl
testl
in
xor
adcb
push
push
out
fmulp
rcrb
test
jns
std
mov
bound
ljmp
mov
test
or
mov
idivl
sbb
add
xchg
repz
out
dec
mov
lahf
jmp
inc
xchg
movb
mov
outsl
mov
and
or
or
aad
ljmp
fidivrs
adc
roll
loop
push
pop
popa
jp
int3
mov
jns
cltd
jle
cmpsb
incb
hlt
pushl
xchg
imul
jecxz
mov
imul
xor
incl
mov
or
or
jge
in
andb
add
fdivl
or
aaa
push
in
out
jne
inc
das
shlb
mov
out
add
jle
loopne
ljmp
jp
ss
add
aam
jp
sbb
and
push
call
mov
orb
rcll
inc
fdivrl
sub
mov
mov
adc
cmp
fdivrs
hlt
pop
add
lods
rorb
lods
jle
fwait
call
xchg
insl
and
lods
or
es
loop
cmp
xorps
cli
rolb
or
stos
sub
aad
and
adc
inc
cmpsb
xchg
decl
test
lcall
mov
loopne
xchg
insb
cmp
repnz
lret
cmp
decl
sub
dec
xor
jmp
mov
sub
pushl
or
inc
dec
das
movsb
enter
jg
loop
mov
in
ds
std
cmp
repz
es
fisttps
cmc
pop
mov
ljmp
sub
adc
outsb
jg
jne
and
dec
mov
sbb
pushf
mov
inc
call
ficomps
icebp
popa
aad
adc
icebp
int
ljmp
fcmovu
ja
sub
add
push
sub
sub
loop
mov
fdivr
lcall
daa
add
adc
in
std
loop
inc
adc
mov
inc
push
xchg
call
sarb
jle
jmp
dec
mov
stos
xchg
mov
orb
jmp
jl
ljmp
in
out
jmp
or
popa
enter
lock
mov
cmp
cli
nop
addr16
push
cwtl
or
xor
in
ret
arpl
push
pop
test
jp
pop
sub
bound
call
enter
mov
mov
out
imul
pop
stos
fcoml
lcall
pushl
gs
stc
pop
mov
add
ret
fdivrs
mov
push
push
mov
arpl
lcall
push
dec
sub
test
stos
add
fidivs
jns
cmp
mov
push
lcall
xchg
lcall
fcos
arpl
bound
movsb
push
pop
popf
int
in
mov
shr
push
or
dec
cwtl
cmp
ljmp
pop
or
push
inc
shrb
xor
pop
stos
sub
scas
pushl
ds
icebp
mov
xchg
imul
out
mov
fldenv
mov
rolb
xchg
addr16
and
outsl
in
stc
pop
cmp
sub
and
push
cmp
decl
push
add
ljmp
jnp
adc
add
ds
inc
jl
call
mov
das
ljmp
mov
ficompl
stos
jp
dec
bound
pushl
cmpsb
sub
jae
push
mov
xor
inc
lret
fcomip
ss
leave
lock
cld
and
dec
or
and
imul
pop
push
insb
movsl
hlt
ja
mov
cmp
int
xor
push
fsts
scas
jne
mov
pop
xchg
std
ljmp
xchg
pop
insl
cmpl
cmp
jge
jmp
cltd
loopne
out
or
mov
lods
xchg
lods
aaa
ret
enter
bound
xor
pushl
into
fsub
adc
adc
cmpsl
and
cli
adc
xchg
mov
out
incl
xchg
xchg
pop
icebp
jno
add
add
dec
xor
sub
call
mov
mov
jg
jno
adc
test
push
fnstenv
dec
dec
dec
rorl
sarl
test
cltd
cs
into
jecxz
ficompl
lea
ss
sbb
xchg
cld
push
and
and
inc
inc
dec
xchg
pmulhuw
mov
xchg
xor
sub
aaa
or
icebp
out
mov
jbe
jg
jg
lods
into
out
xchg
mov
stos
or
aad
jmp
stos
mov
sub
mov
ret
scas
int3
pop
sub
lods
xchg
mov
scas
decl
roll
xor
test
push
xchg
jmp
cmp
shr
out
rcrl
xor
inc
add
jmp
xchg
lock
pushl
insl
popa
dec
fcoml
sti
mov
adc
mov
cmpsb
sbb
cmp
imul
ss
jg
ljmp
das
popf
ljmp
and
add
pushf
cs
ret
inc
xor
ljmp
cmpl
jle,pn
jmp
bound
mov
mov
cmp
ljmp
sbb
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
dec
lahf
jmp
push
pop
ljmp
push
and
idivb
ret
cld
mov
mov
addb
cmc
ljmp
mov
popa
mov
push
or
add
and
int
roll
mov
rclb
sbb
bound
mov
jg
data16
push
cmc
dec
data16
or
add
jecxz
mov
movl
add
arpl
sub
dec
jno
aad
and
and
pop
cld
or
cs
inc
xchg
jmp
and
cmp
insb
out
cmp
std
loope
jmp
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
push
in
int
cmc
adc
cmp
outsl
or
lahf
jecxz
sbb
sbb
or
shrb
call
lds
inc
out
inc
aaa
ljmp
adc
rorl
ljmp
add
rorl
shll
dec
jl
lods
push
or
ficompl
lcall
int
aam
into
test
imull
jo
jbe
inc
in
mov
imulb
popf
js
dec
test
push
mov
push
cltd
fcom
inc
jecxz
fnstenv
je
adc
fnstcw
mov
clc
test
arpl
test
stos
pop
loope
or
dec
adc
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
push
mov
push
cmp
call
std
lahf
daa
mov
mov
xchg
mov
sub
xchg
rol
push
jp
call
dec
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
jle
push
pushl
std
call
dec
add
mov
ja
dec
xchg
mov
mov
in
call
or
mov
mov
sbbl
cmpsb
addb
lcall
sub
rcr
movsl
ds
xor
daa
or
inc
push
lods
push
cld
repnz
insb
jne
shrb
and
ljmp
xchg
adc
push
sbb
lahf
mov
jle
cmp
adcb
decl
fs
addr16
jge,pn
mov
jmp
test
xor
push
es
in
std
mov
rolb
into
sbb
xorl
in
mov
lcall
shll
scas
je
cmpsl
ror
dec
je
aaa
inc
jge
jg
jg
mov
dec
pop
test
and
ljmp
pop
push
stos
inc
test
jle
mov
pop
pop
mov
jp
iret
or
lret
adcb
cs
jmp
add
addl
push
mov
mov
adc
lcall
push
mov
scas
sar
pop
jnp
inc
pop
hlt
loop
or
ljmp
push
or
popa
mov
inc
fimull
aad
rcrb
jo
ljmp
nop
pop
xchg
cmp
push
sti
add
cs
daa
cmp
les
inc
push
pop
js
dec
cmp
mov
mov
leave
es
mov
leave
shrb
and
incl
inc
shll
stc
neg
push
shlb
xor
dec
inc
mov
inc
ljmp
and
mov
pop
movsb
arpl
addl
call
aas
cmp
cmpsl
je
fidivl
xlat
dec
fimuls
in
lret
fisubl
outsl
mov
xchg
decl
cld
insb
cs
fs
and
fadd
std
jnp
mov
jno
mov
ljmp
pop
leave
jge
dec
test
cmc
sub
mov
cmp
ret
in
or
clc
dec
mov
push
lcall
fwait
decl
gs
sbb
arpl
out
lret
mov
jmp
mov
dec
sub
shlb
push
xor
mov
cmp
mov
push
das
rcrb
enter
enter
mov
sub
jmp
fcomip
fcoml
std
mov
pusha
sbb
or
push
hlt
lcall
aam
add
jmp
out
jl
jmp
jae
push
out
je
dec
mov
rcr
fwait
push
ror
pop
nop
aad
fadds
jge
mov
shl
das
dec
and
mov
jo
inc
aas
jle
cwtl
sar
incl
cmc
test
mov
or
or
fwait
and
inc
aaa
push
sahf
loop
icebp
dec
xchg
xor
adc
fcmovbe
call
inc
sub
fdivrs
sub
loop
std
lods
sub
pop
out
imul
addr16
stos
or
sub
mov
lock
mov
jecxz
call
popa
pop
outsb
outsb
out
fs
pop
int3
mov
sbb
int
in
mov
xor
aas
push
and
pop
and
dec
xchg
sti
stos
int
scas
mov
mov
jmp
ss
ss
sbbb
leave
dec
mov
pushl
sbb
pop
addr16
outsl
add
xchg
inc
pusha
cmpsb
add
insl
fdivs
pushl
push
lods
adc
in
sbbb
mov
cli
pop
aaa
mov
aas
les
sbb
sub
cmp
lock
jbe
push
mov
jmp
push
call
add
mov
imulb
out
stos
xchg
jb
aas
adc
push
or
lret
and
mov
inc
push
ljmp
ret
jmp
cmc
faddl
ja
loopne
adc
sub
sahf
js
xor
fistps
dec
aas
and
dec
and
jae
orl
pop
movsl
pshufw
cmc
push
mov
cmp
mov
fidivrs
int3
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
neg
mov
jg
in
insl
or
fwait
push
jbe
sbb
das
repz
imulb
cmp
leave
jmp
pop
ret
adc
arpl
shll
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
incl
jo
imul
or
lahf
je
loope
sbbb
jmp
lods
lods
in
adc
cmp
movsb
xchg
in
sub
jno
icebp
cmp
pop
pusha
pop
mov
hlt
popa
outsl
sbb
rorl
adc
xchg
inc
adc
call
ljmp
sbbl
pushf
sbb
loop
lock
jg
mov
lret
cmpsl
xchg
add
lcall
inc
mov
fadd
pop
push
or
xchg
mov
fcoms
das
xor
pushl
xorl
push
ret
xchg
test
fbstp
int3
aam
mov
test
rcrb
inc
jg
push
test
mov
pushf
pop
sub
outsb
data16
push
mov
push
loop
add
fdivrl
into
jns
cwtl
insb
test
lock
call
fs
jnp
mov
fnstsw
inc
jmp
mov
sub
push
notb
hlt
push
push
stos
sti
sub
sbb
ljmp
addb
inc
mov
inc
push
movsb
mov
cmp
out
ljmp
or
pop
jmp
imul
lret
outsb
imul
mov
sbb
lcall
sub
jo
loope
int3
jp
shll
scas
in
scas
popf
scas
movsb
pop
mov
ljmp
xchg
ss
sub
enter
pop
xor
sub
dec
ljmp
jmp
fcomip
jmp
dec
cmp
jne
shll
daa
mull
cmp
xbegin
jmp
jb
mov
gs
mov
pop
mov
jb
and
out
out
jge
xorl
mov
in
inc
inc
fisttpll
out
out
out
es
test
sub
pop
pmovmskb
fcomip
xchg
cld
lods
ret
add
std
mov
rcrb
lcall
test
adc
shll
fcmovbe
cmp
bound
pop
loopne
jmp
icebp
lret
xchg
sub
data16
int3
fdivrs
push
adcl
ret
rcrb
xchg
mov
jge
mov
add
mov
xor
sub
ljmp
sub
int
lahf
sub
lea
sub
adc
xor
pop
imul
mov
mov
int
or
cmp
test
ret
cli
and
negb
add
push
jl
push
negl
outsl
xchg
dec
inc
gs
call
inc
mov
mov
jbe
dec
sub
dec
pushf
sub
fnstcw
pop
sub
lock
sub
outsb
ffree
sbb
outsb
ljmp
sub
adc
cwtl
ja
int3
stos
mov
cmp
ljmp
fldenv
inc
push
shrl
ret
gs
sbb
mov
xlat
jmp
ljmp
sti
pop
xorl
call
push
daa
xchg
and
lock
call
hlt
rcll
les
ljmp
rcrl
inc
movsl
mov
push
rcr
es
loope
pop
dec
and
out
popf
or
jmp
mov
rcrb
mov
pop
icebp
js
or
mov
sbb
add
add
adc
movsl
in
fwait
pop
jge
cld
imul
imul
add
es
aam
push
add
mov
das
or
leave
fimuls
push
pushl
mov
decb
cli
mov
adc
in
mov
adcb
pop
push
add
int
pop
inc
adc
add
pop
sub
mov
inc
pop
ja
scas
loop
sar
out
or
addr16
pop
pop
inc
cltd
jg
xchg
shll
jmp
aam
jmp
fiaddl
jmp
push
sbb
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
arpl
pushl
incb
or
dec
roll
lods
or
mov
inc
fistpll
push
icebp
in
inc
int
ljmp
dec
jmp
fcmovne
sub
or
sub
incl
imul
imul
repz
add
push
fcomip
idiv
push
lcall
inc
ja
loop
push
mov
pop
or
cmp
insb
adc
sbb
test
fs
cmp
call
sbbl
xchg
and
mov
xor
popf
add
xlat
loopne
jnp
lahf
movsb
push
pusha
mov
add
clc
and
cmp
cmpl
call
push
xor
icebp
jmp
fimull
ljmp
dec
sub
push
add
sbb
dec
cmp
cmp
icebp
loope
in
std
push
cmp
std
lcall
inc
sub
xchg
into
xchg
push
dec
and
loope
push
aas
pop
ret
pop
mov
jg
pop
xor
cmp
stc
sbb
inc
mov
paddq
in
stos
and
insb
xchg
fistpl
lods
mov
call
les
mov
pusha
fwait
daa
or
xlat
sub
incl
cltd
test
mov
scas
ljmp
jo
hlt
not
mov
adc
lcall
mov
jno
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
sub
js
pushl
lods
xchg
sub
sbb
cmp
aaa
and
gs
push
lds
dec
dec
cli
scas
movsb
pop
loope
push
mov
mov
lea
cmp
lahf
sub
lea
xchg
mov
scas
add
clc
push
dec
dec
or
push
cltd
loop
call
mov
aaa
xor
jo
mov
inc
sub
orl
ret
mov
cmc
cltd
pop
mov
xchg
fwait
cmp
adc
ret
jg
ljmp
xchg
mov
cmpb
movsb
push
or
inc
scas
popa
push
xchg
sahf
xor
incl
iret
xchg
test
cmp
xchg
mov
sbb
lahf
or
in
sub
push
mov
clc
inc
add
push
pop
push
enter
mov
pusha
repnz
adc
adc
mov
shlb
pop
les
push
fs
or
mov
fnstenv
les
jmp
add
daa
pop
cmp
out
sbb
scas
jl
clc
cmpsb
dec
mov
sub
decl
test
iret
mov
and
cmp
repz
mov
jmp
cltd
mov
pop
jecxz
or
and
sbb
int3
setl
sub
dec
lcall
ret
adc
test
es
test
adc
call
xor
sub
mov
lret
push
mov
scas
inc
fsts
pop
flds
or
pop
push
rcll
lret
inc
lahf
leave
push
rol
xchg
shll
adc
jl
imul
call
cmp
pop
shrb
fcoms
pop
pop
jo
push
and
cmp
pushl
ds
rolb
fmull
mov
mov
call
sbb
fsts
and
sbb
out
mov
push
mov
lods
adc
das
call
pop
dec
mov
cs
movsb
fimuls
imul
mov
sbb
lods
iret
mov
xchg
cmc
clc
cmp
sbb
or
in
jmp
stos
aad
bound
gs
call
std
leave
mov
jne
jecxz
sub
xor
and
mov
pop
mov
sub
dec
add
orb
xchg
add
mov
dec
inc
test
pop
pop
xchg
gs
inc
addr16
shrl
icebp
push
scas
pusha
mov
notb
push
mov
pop
cmc
jg
mov
sub
repnz
add
add
mov
in
loopne
cmp
xchg
stos
pop
popa
inc
scas
pop
mov
pop
outsb
xchg
nop
sub
gs
fiadds
xor
in
sbb
jne
adc
daa
cmp
shl
add
rclb
int3
push
mov
mov
inc
jns
add
lock
rcr
adc
xchg
mov
ljmp
push
scas
add
loopne
mov
dec
sbb
outsb
aas
add
jge
cmc
mov
fwait
std
insb
sub
jae
lods
xor
add
addr16
lods
sbbl
ljmp
mov
add
push
call
and
dec
inc
lds
fisttps
pushl
lcall
subb
scas
in
add
adc
out
loope
push
movsl
jg
mov
pop
fsubl
adc
adc
pushl
aad
sub
add
shlb
cmp
or
cltd
or
cmp
aaa
cltd
fbld
cmpb
aas
and
lea
jl
push
push
test
out
insb
pop
lret
xchg
push
ficoml
decl
dec
fdivrs
fcom
inc
std
jae
xchg
ljmp
incl
ds
lock
lcall
fcoml
jb
xchg
sub
sahf
or
les
aad
iret
dec
xor
pop
das
sub
mov
int3
int3
jmp
mov
adc
addr16
lcall
test
cmp
or
mov
sti
push
cmpsl
and
das
cmp
fiadds
popf
ljmp
rorb
in
mov
shl
xchg
adc
and
sbb
insl
pusha
push
pushl
aam
mov
sub
nop
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
xchg
std
jmp
adc
sbb
lahf
xrelease
adc
test
lods
ss
lcall
pushf
cld
stc
xchg
dec
or
mov
sahf
dec
test
xlat
cmpsl
stos
repz
pushl
adc
jb
mov
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
jmp
push
out
es
push
inc
jmp
mov
inc
jp
lea
negb
decl
cmpsl
push
test
mov
or
sub
out
or
push
stos
in
cmpsb
dec
jb
jecxz
and
out
xor
mov
cmp
out
pop
out
jmp
dec
mov
push
addr16
test
lds
lahf
outsl
clc
pushl
stos
jno
xor
mov
insb
sahf
inc
test
mov
aad
inc
mov
and
pop
int3
mov
sbb
mov
dec
adc
iret
in
int
cmp
hlt
push
es
call
sahf
mov
jg
fwait
loope
xchg
sub
hlt
mov
repz
aas
pop
mov
cli
xchg
dec
mov
mov
jbe
fstp
fisttpll
ret
pop
jp
mov
pop
shlb
das
cmp
add
cmp
sar
lea
push
pushl
mov
nop
mov
inc
pop
xchg
add
mov
mov
scas
push
nop
push
call
mov
sarl
and
jnp
pop
lcall
cmp
add
xchg
dec
pop
xlat
loope
pop
enter
std
adc
bound
jns
incl
jmp
pop
in
divl
lock
daa
repz
sub
rcl
lcall
adc
jle
sub
lods
out
pop
subl
xchg
dec
xor
sbb
xchg
ja
push
into
in
mov
mov
mov
sahf
sub
push
jne
jb
pop
mov
and
xchg
add
ljmp
mov
into
enter
in
cs
scas
sbb
xor
push
andl
call
lods
negl
xchg
mov
fisubrl
jge
imul
pop
gs
xchg
lock
call
mov
fnstsw
fisubs
popf
adc
jg
ljmp
loop
or
lcall
lcall
pop
sbb
les
jo
cmp
lcall
int
dec
in
sbb
push
dec
pop
jno
mov
mov
aam
fbstp
cmp
lods
jns
jmp
xchg
cmpsl
push
aam
adc
jl
mov
movsb
subl
cmp
fcomip
jmp
pop
mov
scas
insb
or
fdivr
lods
push
jecxz
cmp
pushl
cmpsb
jl
push
enter
xchg
orb
inc
sti
pop
stos
call
pushf
cmpsb
in
imul
lcall
lods
inc
ret
mov
sub
cmpsl
pusha
out
mov
jg
orb
std
mov
repnz
aam
pop
fdivl
fcom
inc
sar
pushl
in
cld
push
cmpsb
jbe
std
lods
outsb
pop
jae
cmp
pushl
ret
lods
mov
in
mov
arpl
or
jge
push
in
bndstx
outsb
enter
sarl
lock
mov
xor
cs
adc
jecxz
push
rcrl
inc
jne
push
ror
pusha
add
xchg
cmpsl
arpl
xor
jecxz
mov
mov
mov
cmp
mov
jbe
inc
jae
and
sub
js
xchg
mulb
pop
pop
push
loop
inc
pop
mov
imul
add
cmp
lds
pop
jb
mov
xor
jg
mov
pop
cld
or
mov
sub
inc
mov
jb
int3
rclb
mov
dec
cmp
pop
adc
rorb
xchg
dec
adc
rorb
lahf
outsb
mov
pushl
lock
dec
lods
in
in
lods
stc
sarl
dec
mov
mov
jmp
fcoms
and
mov
ja
push
mov
aaa
or
mov
push
test
sti
cmpsb
mov
jp
sbb
push
test
jg
lcall
add
pop
lea
push
mov
xor
insb
sub
and
das
pushl
rcrl
or
dec
imul
negb
adc
scas
mov
adcb
pop
clc
clc
outsb
cmp
pop
mov
ret
xchg
fistpll
add
mov
in
add
jmp
cli
out
xor
cmc
loop
daa
mov
daa
pop
jmp
outsl
mov
pushl
or
dec
repnz
or
ljmp
adc
lret
mov
mov
mov
jns
push
icebp
xorb
pop
jge
pop
mov
mov
sub
sti
fbld
jmp
mov
adc
dec
fstpl
fcmovu
js
ja
mov
mov
cwtl
rcll
adc
dec
leave
jecxz
in
das
xchg
or
aaa
cld
push
push
dec
jecxz
jg
lcall
aaa
mov
cmpsb
sub
mov
lods
les
fidivs
arpl
scas
or
imul
loop
pop
dec
inc
pop
iret
cli
out
adc
mov
out
mov
dec
or
ffree
xor
outsl
push
insl
psllq
stc
mov
push
adc
lds
fisubrl
pop
ljmp
inc
mov
jmp
jnp
xor
cltd
imul
pop
adc
push
mov
or
add
cmp
test
fildl
lahf
push
cmp
or
lcall
xor
sub
mov
or
fiaddl
mov
scas
addr16
mov
cld
cmp
aad
movsl
into
cmpl
fnsave
out
inc
aaa
movsb
decb
lock
jmp
mov
pusha
adc
ret
jp
sub
out
mov
int
movsb
mov
inc
jmp
sub
clc
or
pop
sub
lcall
cmp
cld
add
sbb
pop
ret
sahf
dec
clc
lcall
cmp
pop
rol
into
pop
mov
mov
popa
xchg
add
inc
pop
in
leave
inc
dec
lret
sbb
mov
test
ljmp
xor
lret
sbb
or
cmp
rorl
call
mov
shll
push
hlt
mov
outsb
push
das
repnz
je
dec
repnz
add
or
in
adc
xchg
nop
mov
outsb
xor
adc
jg
cli
push
pop
pop
hlt
fisubrs
sbb
mov
push
xor
xchg
ret
mov
cwtl
push
dec
cltd
jb
adc
push
mov
scas
lock
pop
mov
adc
xlat
mov
mov
lods
xchg
lock
jl
imul
push
dec
mov
movsb
sbb
xor
ljmp
push
push
loope
mov
test
das
sarb
add
push
aaa
mov
sbb
repz
daa
call
xchg
fldt
jae
cmp
inc
jmp
mov
jmp
or
jne
adc
jg
or
jg
mov
in
mov
or
mov
jae
icebp
jecxz
and
push
push
call
push
mov
aaa
jo
mov
fcoml
scas
sbb
add
or
bound
push
fcmovnu
sahf
stos
add
test
jecxz
rorl
loope
add
pop
or
in
push
sub
inc
mov
ljmp
call
push
and
pop
testl
cmpsl
mov
rol
pop
call
std
call
jg
daa
sti
or
mov
sbb
out
and
lcall
mov
xor
test
and
outsb
imul
push
and
call
shl
into
mov
loopne
mov
fidivrl
mull
imull
sbb
cmp
clc
icebp
aad
cld
cwtl
push
inc
push
xor
ljmp
imul
incl
xor
clc
sub
mov
std
pop
xor
imul
push
sub
repz
mov
fmuls
dec
int
sahf
push
std
and
push
loope
sub
mov
call
in
stos
sub
cmpsb
nop
jp
mov
sub
add
addr16
dec
sbb
clc
andb
sti
dec
fbld
test
lret
push
jge
sub
adc
sar
jg
mov
out
rcrb
rorl
mov
cmp
ljmp
sub
xlat
aam
mov
call
add
xor
rol
ljmp
cli
dec
enter
jge
ud1
mov
sbb
adc
sub
push
sub
rcrl
push
lock
ljmp
loop
loopne
lea
push
pop
fcompl
jnp
ljmp
pop
jmp
sbb
fwait
ja
arpl
scas
jmp
scas
enter
and
icebp
jmp
cmpsb
clc
repz
rolb
aad
xor
or
push
jp
or
or
aas
xchg
test
sbb
sahf
movsl
in
xchg
mov
loope
mov
repz
jg
cmp
push
fistl
out
test
cmc
mov
push
mov
jp
push
mov
xor
or
repz
test
stc
mov
scas
sub
stc
sub
rolb
jmp
xchg
cli
and
incl
cmp
jmp
sbb
lods
stc
mov
cwtl
outsb
mov
push
bswap
movsb
or
pushl
data16
lahf
and
jge
cld
xchg
mov
adc
xor
stos
adc
mov
and
cwtl
push
jg
pop
inc
test
test
jmp
xlat
fmuls
mov
mov
mov
mov
aam
xchg
pop
fadd
popl
arpl
sbb
pop
inc
aam
shrl
sahf
adc
sbb
mov
mov
insb
adc
xchg
and
mov
mov
xchg
nop
mov
bound
in
sahf
xor
lods
and
and
push
jecxz
lods
ljmp
test
jae
aaa
xchg
cmp
jmp
out
movsb
pop
pushl
xor
mov
lcall
xor
or
out
cltd
outsl
pushl
mov
mov
js
push
mov
push
aaa
in
dec
pop
lret
xchg
sub
stos
push
call
pop
fs
in
dec
lret
mov
pop
aad
adc
cld
mov
xor
mov
icebp
lcall
xor
xor
cwtl
les
call
lret
stos
mov
xor
xchg
iret
cmp
sbb
inc
idiv
sahf
sahf
mov
mov
jmp
lcall
and
pop
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
add
std
lcall
or
mov
fcoml
push
outsl
bnd
cmpsl
inc
dec
mov
pushl
dec
sub
insb
fidivrl
jmp
inc
outsl
dec
xor
sbb
imulb
aam
shrl
mov
and
mov
fucom
mul
pushl
pop
jae
scas
mov
in
movsb
mov
cmpb
push
loope
or
sub
push
incl
jle
lods
jne
sub
lea
push
aam
sbb
or
lods
test
sub
pop
fistpl
push
shl
pop
and
xchg
clc
call
aaa
mov
and
jb
xor
movsb
mov
xor
aad
mov
mov
rorb
lods
fwait
lcall
pushl
jmp
inc
loope
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
call
clc
pop
fildll
add
ss
mov
push
cmp
pushl
ret
mov
ljmp
xor
lock
and
lret
cli
jmp
push
sbb
je
sahf
and
rcrb
jmp
pop
in
or
repz
jmp
jns
insb
xchg
adc
dec
ret
inc
out
movsl
mov
in
ljmp
aaa
sti
test
jns
adcl
aad
lods
pop
inc
cld
out
mov
push
dec
ljmp
decl
jmp
cltd
xor
fwait
inc
cmpsb
cld
popf
adc
in
cmpb
mov
xchg
add
loope
outsb
sbb
loope
cmpb
ljmp
jge
cmp
nop
scas
mov
mov
int3
sbbb
insl
jno
inc
mov
arpl
arpl
inc
mov
lcall
xor
push
xchg
pop
lods
xor
ja
xor
adc
aaa
pop
js
mov
jns
add
jmp
push
sahf
add
push
out
int3
pop
mov
arpl
mov
mov
ss
stos
mov
push
das
shl
lock
sub
incl
push
pop
pop
mov
xor
add
cmp
pushl
das
adc
pop
jne
mov
imul
add
dec
xchg
pop
call
push
mov
push
xor
pop
cmc
clc
daa
add
data16
adc
pop
xchg
and
cld
ljmp
inc
iret
std
mov
int3
or
fistps
xor
icebp
nop
out
jg
add
rcrb
gs
mov
ret
mov
pusha
test
sub
fiaddl
xor
outsb
loopnew
adc
gs
das
xor
hlt
jle
inc
mov
jmp
js
mov
incl
nop
add
add
mov
mov
mov
or
ss
push
mov
inc
mov
mov
jle
fwait
jb
in
test
dec
xchg
push
adc
sbbl
cmp
xchg
and
in
inc
and
popa
imul
test
decl
xchg
enter
clc
xorl
add
cmpsl
xor
pop
mov
lcall
push
pop
lea
movsb
inc
mov
test
pop
mov
sub
call
pushf
pop
lds
pop
and
call
pop
ljmp
lods
push
aaa
xor
loopne
mov
inc
cmp
xor
xchg
push
lcall
clc
mov
bound
lods
push
pop
andb
sbb
jnp
test
bound
xor
inc
data16
adc
outsl
clc
call
push
scas
addr16
movsb
jbe
jp
arpl
xor
scas
test
call
sbb
add
mov
stos
xchg
cli
clc
lods
mov
mov
xor
jmp
mov
add
cmp
repz
loop
pop
push
notb
xor
mov
mov
decl
btc
not
jbe
xor
push
pop
setne
imulb
testl
jmp
lods
adc
add
imull
push
jl
push
jno
outsl
sbb
test
jmp
arpl
stos
fdiv
or
lahf
cmp
shl
mov
in
test
shl
jno
lods
sub
mov
clc
decl
or
gs
mov
push
adc
adc
rcrb
sar
cmp
jg
mov
sbb
pop
and
pop
inc
clc
outsl
loope
cmc
mov
loop
pop
push
cmovb
inc
decl
push
scas
push
addr16
fsubrs
or
decl
cltd
push
push
cli
ret
imul
dec
stos
rol
mov
hlt
pushl
mov
cmp
mov
inc
xor
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
incl
xlat
adc
xchg
add
sbb
pop
adc
fcomps
inc
cli
push
aas
cmp
and
jnp
sub
lods
sbb
aaa
jecxz
jbe
mov
adc
pushl
mov
inc
mov
or
inc
mov
clc
sbb
in
je
testl
cmc
jl
jnp
cmc
cmc
cmp
lock
decl
jecxz
add
jns
sub
push
in
mov
add
add
sbb
hlt
jne
cmp
mov
mov
push
push
insb
lret
lcall
xchg
aad
aad
in
adc
out
dec
sub
orl
iret
cmp
inc
push
and
jmp
cltd
icebp
sbb
adc
aas
add
lcall
outsb
mull
es
mov
popl
or
dec
pop
inc
inc
xor
jg
decl
ret
fisttpl
das
sbb
dec
mov
lds
mov
cmp
call
lds
sub
push
call
decl
movsb
outsl
stos
test
cmp
decl
inc
mov
in
dec
aam
xchg
test
lock
popa
or
cmpsb
decb
push
movsl
cmpsb
sub
mov
jg
adc
subb
sbb
jmp
mov
test
mov
nop
dec
repnz
test
incb
imul
adc
ljmp
pop
ret
clc
das
loop
daa
inc
xchg
sbb
pushf
in
sub
decl
cwtl
and
aaa
fwait
test
dec
add
mov
inc
test
hlt
xor
jmp
sbb
jle
xchg
pop
popf
sti
mov
int3
pop
xor
cltd
xchg
addl
incl
es
mov
pop
pop
adc
je
psllq
cwtl
sub
or
movsl
fldl
mov
add
or
sbb
lods
scas
ficompl
mov
pop
out
dec
pushl
and
xchg
inc
test
lcall
cmp
orb
inc
push
sbb
pop
sahf
and
dec
jmp
dec
xor
scas
xor
cmp
arpl
and
mov
movsb
cli
outsb
int
or
movsl
pushl
cltd
fisubl
xchg
mov
popw
sbb
add
sbb
pushf
jne
icebp
mov
push
cwtl
jbe
mov
jmp
pop
loop
or
rol
rolb
out
inc
xchg
stos
dec
in
dec
dec
jle
dec
std
pop
loopne
scas
lds
jle
mov
lahf
push
pop
dec
loope
jg
dec
enter
jno
pop
xchg
sahf
xchg
mov
leave
inc
dec
mov
scas
push
push
stc
js
std
add
mov
add
lock
test
icebp
lahf
movsl
push
dec
clc
incl
flds
sar
sbb
adc
test
jmp
cs
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
push
neg
sti
ljmp
mov
insl
repnz
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
mov
cmpsb
in
push
ficoms
push
lret
jbe
imul
movl
in
push
orps
loop
decl
call
or
bnd
xlat
jle
jno
inc
cmp
cmc
rcrb
into
mov
jmp
add
insl
pop
jg
icebp
es
xchg
fadd
xor
das
xor
xchg
shrl
shll
adc
push
xchg
add
cltd
loopne
mov
pusha
sbb
inc
pop
lcall
xchg
mov
es
pop
pushl
jecxz
mov
pop
jmp
ljmp
jmp
jo
hlt
mov
cmpl
imulb
pop
jecxz
cmp
ja
scas
daa
pop
jmp
test
sub
enter
mov
test
cmpl
pop
jge
sub
roll
test
pop
sbb
sahf
pop
add
xor
shlb
and
inc
filds
shll
daa
lods
dec
xchg
push
xor
jno
fsubrl
dec
pushl
xlat
cwtl
mov
and
ret
into
push
xchg
pushf
cmp
test
mov
xor
and
jmp
test
mov
xchg
push
daa
sbb
loopne
mov
imul
ja
add
call
and
fistl
hlt
adc
sub
out
outsb
addr16
and
lcall
aas
cmp
bound
push
rcrb
rolb
movsb
sbb
inc
fildl
lretw
fimuls
push
or
in
mov
and
mov
mov
in
pusha
iret
loopne
and
pop
inc
dec
mov
jg
bound
scas
dec
movl
dec
add
sbb
out
mov
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
imulb
jmp
sbb
rcr
fsubl
arpl
test
clc
cli
gs
inc
push
mov
xchg
aaa
push
mov
shl
jnp
dec
addb
push
fisttps
cmp
ds
jo,pt
pop
test
jmp
idivl
inc
inc
mov
sub
outsl
mov
inc
ret
mov
movsb
mov
inc
fdivrs
inc
inc
push
mov
pushf
xchg
sub
ljmp
jmp
cld
dec
mov
pop
jne
cmpsb
adc
scas
mov
mov
lock
sarb
xchg
imul
dec
ljmp
pushl
push
pop
sbb
xchg
fsubrl
pop
inc
shrb
popf
ret
aas
inc
xchg
popa
mov
mov
fs
fcoms
or
pusha
sahf
out
fs
inc
lcall
out
clc
movsl
and
sub
cmp
cli
scas
and
adc
shrl
incl
stc
pusha
into
call
push
push
add
lcall
inc
mov
fidivl
and
xor
push
sbb
cmpsb
mov
je
mov
adc
ss
or
sti
fdivp
dec
fimull
shlb
lret
loope
fwait
cmp
mov
lret
jmp
pop
ds
call
jmp
dec
fmuls
out
int
adc
xchg
ficompl
mov
insb
aas
mov
pop
and
inc
mov
ret
xchg
cmp
push
pop
rcrb
out
pop
sbb
jmp
mov
decl
or
es
mov
adc
cmp
dec
mov
in
ljmp
push
sbb
mov
dec
jecxz
inc
mov
sti
pop
int3
xchg
aaa
test
jmp
outsb
in
adc
xor
ljmp
sub
repnz
mov
in
mov
gs
lcall
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
addr16
ljmp
cld
or
popa
push
dec
mov
dec
adc
lcall
pop
cmc
dec
jecxz
in
xchg
dec
mov
cltd
jg
and
and
xor
push
iret
in
cs
sub
insb
mov
mov
mov
xor
adc
ror
pop
in
lods
ljmp
dec
scas
jge
or
push
loopne
clc
mov
into
repz
mov
lcall
xor
movaps
xchg
xchg
call
and
mov
sub
inc
fs
dec
adc
ror
inc
ds
mov
ljmp
dec
mov
stos
and
jp
fnstcw
bound
cmp
cmpsb
push
inc
push
jle
mov
roll
adcl
sub
hlt
stos
adc
add
mov
ret
mov
test
ljmp
xchg
cwtl
xchg
jno
add
ljmp
rcr
xchg
jg
aas
fdivl
iret
and
or
pushl
sub
enter
pop
jnp
or
fisubl
or
push
scas
decl
test
sub
inc
pushf
frstor
sbb
jne
aam
outsl
dec
mov
ljmp
fsubl
imul
lods
or
repnz
add
xlat
sbb
popf
pop
mov
jmp
repz
xchg
pusha
xor
dec
popa
stc
subl
pop
xchg
fiaddl
ret
push
fbld
ja
cmc
xor
push
lods
xlat
adc
repnz
mov
mov
jg
fisttpl
cmp
idiv
pop
lea
jle
roll
mov
pop
popa
js
lret
push
push
ja
jle
cmp
adc
sub
mov
sbb
int
dec
lret
pop
mov
aaa
shll
jns
jg
lahf
cltd
mov
std
jmp
pop
sahf
iret
push
sti
rolb
insl
cmp
pop
pop
mov
ss
rclb
pop
sub
cmp
lock
mov
push
xchg
and
dec
mov
xchg
xchg
dec
jle
ret
xchg
cli
dec
and
test
loop
sbb
jb
popf
add
dec
je
js
call
imul
cli
das
loop
insl
mov
lds
pop
fadds
mov
adc
call
pusha
adcb
sbb
test
mov
mov
push
inc
mov
and
or
pushl
cmpsl
or
pop
pop
movsb
daa
outsl
rorl
int3
sbb
in
and
mov
arpl
call
out
inc
icebp
xchg
mov
jno
mov
push
imul
add
call
imul
jb
add
mov
add
addr16
fidivl
pop
sbb
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
aad
xchg
or
jg
hlt
mov
ljmp
popa
inc
adc
dec
lcall
movsl
stc
xorl
mov
pop
sub
jnp
inc
ror
add
mov
push
test
aas
outsb
add
xchg
and
sbb
divb
and
xlat
ret
out
cli
sar
aad
pop
or
sahf
push
out
imul
xchg
mov
and
rcrl
lcall
jae
jp
adc
les
xchg
push
push
pop
push
sbb
and
cmpl
add
repnz
jmp
push
add
mov
add
pushf
shll
dec
sub
xchg
pop
jno
cmp
lcall
int3
and
mov
mov
je
mov
cmp
pop
inc
mov
add
xlat
pop
sahf
or
idivl
fsin
xor
inc
xor
fildll
std
test
std
xchg
add
jbe
int3
add
sub
fwait
lods
fimuls
mov
cmpsb
dec
mov
fisubl
movl
adc
test
jmp
aas
adc
dec
jbe
movsl
loope
dec
xchg
es
jmp
and
ret
inc
inc
jecxz
popf
test
std
xchg
xor
cmp
mov
stos
mov
jae
fwait
adc
or
pop
andb
push
jmp
inc
bound
out
pop
xchg
sahf
inc
jno
sbb
mov
sub
mov
mov
pop
mov
repnz
pop
cli
decl
inc
xchg
mov
clc
ret
incl
lcall
mov
dec
mov
mov
sub
mov
es
lcall
jae
add
mov
mov
or
or
mov
mov
jmp
hlt
decl
or
mov
push
xchg
cltd
aad
jb
dec
push
lods
mov
mov
or
test
add
sahf
js
hlt
pop
push
inc
ljmp
addb
jge
in
repnz
outsb
sub
pushl
dec
xchg
mov
test
cli
lods
cmpsl
or
incb
insb
mov
jbe
aas
push
pop
dec
jmp
icebp
sbb
popf
push
es
push
inc
cmp
mov
incl
xchg
ja
leave
jnp
mov
push
test
mov
xchg
ds
dec
mov
and
cmp
and
loopne
cmpsb
jg
add
jge
push
xor
jg
xchg
ds
sub
and
xor
pushf
out
mov
xchg
fs
popf
mov
cmc
xor
jae
mov
push
sbb
push
roll
into
dec
and
jnp
jbe
sub
ljmp
fistl
mov
ret
popa
out
rorb
cmp
cmpsl
repnz
push
mov
sahf
sub
incl
push
adc
add
data16
clc
les
jge
mov
mov
outsl
aas
inc
loope
mov
cmp
fcoms
fbld
sub
cmpl
mov
std
lock
dec
arpl
dec
jae
fcomip
mov
mov
add
jp
ffree
popf
imul
xlat
jg
jno
cmp
imul
pop
pop
out
inc
pop
add
iret
inc
pop
mov
incl
ljmp
xor
test
push
aas
shl
pop
jge
je
or
pop
ja
out
xor
inc
xlat
rcr
movsb
cmc
cs
cmpsb
sbb
test
pop
cmp
xor
xchg
mov
push
cwtl
insl
cs
fwait
sarl
cmpsl
mov
dec
sarl
mov
jb
cmpsb
push
jecxz
incl
repz
xchg
push
push
repz
lock
sbb
and
popl
cmp
stos
jae
push
mov
and
repnz
push
adc
fs
imul
mov
cli
pop
ljmp
mov
pop
fwait
adc
outsb
hlt
inc
fwait
sub
pop
cmp
or
incl
mov
out
mov
lret
mov
fldl
in
add
loopne
jg
pushl
cmpsl
hlt
adc
cmp
adc
pop
push
or
cmp
fsubrs
insl
aam
decl
pop
xchg
repz
scas
test
dec
insb
or
push
lret
dec
mov
mov
insl
xchg
inc
mov
xor
mov
pushf
fimuls
add
test
jmpw
clc
scas
arpl
jecxz
mov
stc
outsl
push
lret
cltd
pop
leave
jp
xchg
push
rorb
mov
out
push
hlt
js
xor
sub
in
push
sub
push
subb
int3
pop
sti
adc
push
xchg
insb
mov
mov
stc
pop
lret
decl
inc
xor
pop
adc
das
jb
sar
cld
icebp
or
cltd
arpl
adc
xchg
adc
test
adc
push
and
decl
rcrb
cmp
xchg
scas
in
inc
in
fdivr
mov
sahf
mov
ds
pushl
in
inc
enter
lods
cmpsl
repz
pop
push
mov
decl
aas
fildll
or
and
lret
lods
or
lretw
and
xchg
aam
ss
dec
xchg
jge
xor
mov
stc
std
pop
loopne
and
sub
je
gs
out
cwtl
jne
sbb
popf
fs
adc
cmc
inc
sub
test
call
frstor
pop
or
ja
inc
mov
sbb
aaa
push
sub
ljmp
cli
roll
sbb
jno
add
sbb
sti
mov
mov
add
pushl
std
cld
adc
bound
test
gs
repnz
aas
sti
mov
lcall
loope
ja
jb,pt
jbe
xchg
sub
mov
mov
jg
shll
xorl
dec
stos
dec
jae
push
ds
dec
or
fiaddl
fcomps
jo
gs
jg
dec
push
test
cld
mov
arpl
sub
data16
incl
jo
mov
mov
push
imul
loope
into
push
mov
sbb
push
lcall
inc
pop
ja
mov
leave
mov
push
ret
enter
sub
mov
hlt
popl
inc
inc
mov
es
out
imul
dec
imul
cmp
mov
fs
or
decl
ja
fbld
jge
push
push
repnz
dec
imul
sbb
decl
lahf
push
adc
dec
sbb
or
cltd
sbb
mov
xchg
jns
ljmp
hlt
jb
inc
cld
insb
or
push
lcall
push
sbb
push
repnz
decl
add
arpl
insl
adc
lock
jo
sbb
pop
test
stos
push
cmp
jbe
pop
pop
in
loopne
adc
pusha
inc
push
pop
in
lret
in
push
aad
imul
push
xchg
jp
inc
mov
xchg
lcall
mov
sub
xchg
xor
inc
fadds
cmp
cmpsl
cmpsl
imul
mov
push
dec
rcll
movsl
lods
incb
mov
outsb
fdiv
out
sub
mov
leave
pop
arpl
lods
sbbl
inc
add
mov
fcmovb
arpl
jl
out
mov
ja
orl
and
or
pushl
mov
or
jle
call
adc
add
arpl
pop
mov
cmp
mov
push
fs
pop
adc
call
add
sbb
or
incl
cld
decl
out
adc
ret
lock
mov
out
and
fmull
pop
cld
fisttpl
mov
inc
ficompl
cmpsb
push
popa
pop
int
les
sar
decl
pop
cmp
movsb
data16
aam
ret
mov
mov
add
adc
jg
jo
xor
push
push
rcrl
jle
ds
dec
pop
sub
popf
lods
je
call
cld
bound
cld
jp
cli
mov
imul
adc
add
loop
jge
cmp
pop
loopne
addr16
add
mov
mov
sbb
xor
jo
xor
lock
jg
stc
xor
jge
mov
in
clc
addr16
data16
push
std
and
sub
cwtl
loope
pop
dec
push
fldcw
out
push
cs
jecxz
xlat
or
pop
fsts
lcall
cmpsb
lock
insb
lds
gs
popf
icebp
jmp
xchg
pushl
jo
stos
add
daa
mov
dec
cld
push
or
and
nop
ljmp
xchg
loope
jmp
cmpsl
imul
incl
ret
xchg
into
sbb
adc
jecxz
dec
sbb
adc
test
or
push
xchg
shrl
pop
cmp
add
icebp
int3
in
into
pop
xlat
adc
mov
mov
rsm
push
inc
mov
and
push
cmpsb
jge
mov
add
mov
mov
xchg
fisttps
cwtl
shll
or
ljmp
out
in
loope
cmp
testb
jmp
push
pop
mov
sbb
mov
sbbl
jbe
jg
add
incl
dec
shl
fistl
sbb
and
decb
outsl
int3
test
cld
jmp
mov
outsb
sub
sbb
cld
and
lcall
mov
data16
mov
outsb
ds
push
cmpsb
xchg
ljmp
cmc
adc
int3
enter
lahf
sbb
outsb
sbbb
fbld
movsl
add
into
inc
jecxz
out
jns
push
or
pushl
daa
cmc
cltd
xorl
lds
popa
mov
xchg
mov
push
mov
push
dec
lcall
icebp
insb
cmp
add
jae
cmp
xlat
movsl
inc
mov
pushf
pop
push
add
and
dec
push
lods
fs
stos
inc
pop
loope
ljmp
adc
andl
mov
stos
xchg
shll
pop
cli
pushl
roll
and
insl
std
lcall
aam
fcompl
stos
int3
psrlq
jg
mov
pop
sbbb
add
inc
inc
mov
inc
xchg
xchg
lea
ljmp
in
scas
sbb
cmpsb
inc
xor
rolb
xor
test
out
movsb
das
jne
pop
xchg
add
out
icebp
rclb
or
mov
jg
sub
fcoml
adc
mov
sub
mov
cwtl
ljmp
cmpsb
mov
sbb
rcr
popa
stos
xchg
stc
into
aas
mov
mulb
popf
sahf
add
ud0
decl
repnz
movsb
cld
push
cwtl
xchg
jbe
in
popf
cmp
push
pushl
cmp
sbb
arpl
push
adc
sub
jb
adc
push
loop
lcall
xor
repz
call
dec
cs
outsb
xchg
addr16
pop
lcall
shlb
loope
enter
pushf
ss
into
divl
dec
fildl
movsl
sbb
addr16
call
lcall
scas
mov
ljmp
jmp
add
mov
nop
lods
push
sahf
lds
scas
mov
mov
xor
cld
jns
lods
cmp
gs
jae
iret
or
mov
jns
lret
lcall
into
mov
outsb
out
nopl
push
fs
xchg
add
push
sar
hlt
xchg
clc
adc
decl
push
movsb
or
loopne
loopne
push
andb
sbb
test
push
mov
push
mov
je
push
addr16
push
es
mov
xchg
push
inc
or
inc
lret
fs
pushl
and
mov
jle
jno
mov
pop
sbb
add
push
or
insb
push
rolb
fldcw
sub
mov
call
sarl
dec
adc
add
pop
xchg
icebp
arpl
data16
inc
lahf
mov
jmp
mov
jnp
cli
lcall
cmp
cld
add
dec
pop
ss
mov
sarb
mov
xchg
clc
mov
enter
movsb
loopne
call
sub
sbb
outsb
in
fisubrl
jle
arpl
mov
mov
sub
vmovups
imul
std
sbb
pushl
xor
out
sub
push
scas
push
imul
cmp
rolb
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xor
sar
cmp
push
test
ja
mov
dec
inc
sbb
incl
pop
jmp
fisttps
sti
loopne
mov
add
lea
inc
stos
xchg
xor
jne
rorl
cwtl
je
pop
pop
ss
dec
xor
xchg
test
lahf
cmp
scas
clc
call
jmp
and
scas
cld
mov
push
mov
mov
jnp
add
decl
inc
xor
test
pushf
sub
enter
mov
lock
mov
outsl
xchg
pop
cld
aaa
adcl
rorb
mov
adcl
and
enter
cmovp
jmp
inc
pop
cli
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
xor
inc
xchg
dec
inc
mov
test
xor
out
call
imul
mov
pop
push
add
pushl
sub
fldcw
sahf
fisttpl
fnstcw
add
push
mov
jmp
push
and
push
leave
in
pop
jg
dec
idivb
pop
wbinvd
jmp
push
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pop
js
insb
out
lcall
leave
jle
jp
jle
sbb
and
das
pop
iret
xor
fwait
jb
adc
lcall
mov
mov
or
sbb
cmp
xchg
xor
push
test
pushl
jmp
dec
jb
rol
xchg
xchg
sbb
ror
sbb
push
mov
out
and
or
push
je
mov
out
frstor
cmpsl
add
call
mov
hlt
gs
je
xchg
xchg
mov
aad
push
dec
lcall
xor
addb
jmp
cmpsl
in
aaa
cmp
mov
out
rorb
call
js
sahf
pop
cwtl
add
xor
loop
mov
and
insl
mov
lcall
orl
std
mov
out
loope
ret
jnp
dec
stc
jae
add
mov
fcoms
addr16
or
leave
add
mov
movsl
idivb
lods
test
fwait
repnz
and
xor
incl
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
repnz
pop
cmp
popa
jg
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
adc
jb
lret
call
stos
int
pop
sbb
fistpll
mov
sti
jmp
decl
in
mov
aaa
push
cmc
daa
negb
ja
jb
pop
clc
jae
and
scas
iret
and
fistpl
push
ficoms
fistpll
add
add
mov
push
sar
das
push
call
xchg
fstpl
mov
sub
sub
ljmp
jg
adc
add
xchg
mov
pop
sbbl
xchg
sar
jmp
addl
add
aaa
fldcw
xchg
iret
hlt
cmc
jbe
inc
jb
lock
xchg
sub
loope
hlt
rol
and
aas
mov
jne
pop
std
dec
sub
jl
dec
sbb
iret
into
mov
sbb
jb
jmp
pop
decl
and
insl
dec
mov
sub
mov
xor
xchg
pushl
inc
out
xlat
mov
xor
sbb
imul
cmpsl
cmp
pop
call
mov
addr16
cli
cmp
push
cmp
cwtl
pusha
shlb
xor
pop
cmp
jnp
adc
and
aas
cmp
ds
cwtl
push
ds
push
lea
lcall
dec
mov
mov
nop
vunpcklpd
call
psllw
xchg
arpl
inc
mov
cmpsl
out
adc
daa
inc
or
pop
push
cmovb
or
les
pop
lock
int
push
or
ret
xchg
xor
jb
sbb
test
fcomip
pushl
mov
jb
jge
jo
out
adc
mov
cmp
ret
sbb
mov
adc
mov
movsl
xor
mov
jmp
mov
dec
cld
fistpll
aad
jno
and
loop
ss
insl
outsl
mov
mov
mov
xor
push
cmp
aaa
mov
add
add
ljmp
xchg
cmpsb
xor
incb
lcall
rcll
jecxz
shll
insl
add
mov
inc
lcall
lods
sub
scas
or
push
lahf
mov
jge
dec
arpl
lods
arpl
out
push
in
fcomip
decl
ret
inc
fcoml
fldl
lock
loopne
xchg
cs
mov
jg
decl
xor
cli
outsb
add
mov
pop
adc
sbb
ljmp
aam
mov
xchg
bound
cmp
cwtl
insb
xor
lcall
jbe
jne
mov
push
cmp
pop
inc
pop
in
mov
xor
cmp
pop
repnz
mov
jae
lret
xor
call
fs
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
shl
dec
inc
pop
push
jmp
dec
in
lret
daa
int
sti
sbb
and
sub
xor
daa
mov
loopne
call
adc
or
femms
frstor
loope
call
out
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
outsl
push
dec
aad
cmp
pushl
clc
in
insl
mov
rolb
mov
stos
leave
add
dec
add
jl
pop
mov
incl
insl
lahf
xchg
and
add
mov
lods
sbb
outsb
icebp
and
pop
mov
stos
popf
pop
mov
lcall
or
loope
clc
enter
and
cmp
outsl
shll
and
hlt
add
pop
or
sbb
out
lcall
es
es
push
xor
call
add
jnp
jnp
push
addr16
stos
fsubrl
mov
loope
decl
xchg
mov
or
xchg
adc
stos
push
and
decl
dec
push
jl
in
fisttpll
aam
jmp
pop
mov
outsl
add
jnp
mov
andb
xor
adc
test
in
cmc
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
mull
xor
les
cmc
int3
loopne
call
ljmp
mov
and
lds
jb
mov
cld
pop
enter
push
inc
mov
insl
mov
shlb
push
add
or
jns
push
aaa
sar
xor
xchg
mov
mov
aad
jmp
roll
xor
mov
pop
mov
pop
movsb
call
jg
and
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
and
pop
call
or
pushf
dec
inc
jae
loop
enter
mov
clc
cmp
jmp
stos
ljmp
sub
or
push
jb
pop
loope
nop
mov
jmp
sub
lret
ja
xor
cltd
cld
or
pop
pop
test
add
mov
mov
add
insl
ficompl
rorb
mov
fcomip
mov
mov
fwait
jl
gs
out
pop
jl
ss
jmp
cltd
pop
pop
jl
inc
dec
inc
pop
mov
test
icebp
std
jmp
ret
jl
inc
or
rcll
xchg
scas
add
pop
ljmp
addr16
mov
mov
jnp
cmp
cmp
or
sub
push
insb
stos
push
repnz
std
jg
fadds
jg
xchg
push
mov
jne
jnp
cmp
clc
data16
xchg
mov
push
cmpsb
je
clc
ljmp
mov
xor
jo
mov
mov
dec
pushf
lcall
pushl
pop
push
loopne
mov
xor
out
mov
pusha
ljmp
sbb
jmp
pop
gs
andl
xor
sahf
ja
sahf
mov
mov
gs
ljmp
adc
rcrb
push
popa
into
push
loopne
das
mov
xor
adc
push
aam
add
ljmp
out
cli
rcr
pop
imul
scas
add
sbb
js
add
jbe
into
lcall
adc
xchg
xor
test
mov
faddp
mov
dec
ds
sbb
push
pop
push
mov
dec
cmp
jne
mov
sub
push
test
test
stc
lcall
jae
es
pop
ss
es
std
mov
push
pusha
test
xor
pusha
imul
decl
incb
out
xchg
pop
stc
daa
repz
mov
mov
stc
stos
xor
stos
in
push
fistl
dec
push
push
decl
xchg
sub
cmp
cmp
add
lcall
mov
mov
jge
pop
sahf
aad
mov
ljmp
ss
ret
sahf
pusha
dec
iret
pop
mov
in
ja
mov
jno
hlt
call
xor
jl
pop
rol
sub
mov
jp
ljmp
hlt
decl
add
insl
push
jae
pop
jbe
adc
xor
mov
push
cmpsl
cmp
in
repnz
ds
in
mov
xchg
cmpsl
fisubs
rcrl
cld
scas
jno
ljmp
test
hlt
int3
mov
ljmp
dec
clc
shll
cltd
cmp
mov
mov
lret
inc
rclb
fidivrl
dec
aam
jecxz
inc
adc
jp
scas
add
aad
movsl
pop
add
sub
jmp
mov
xorl
sub
dec
mov
mov
ds
jmp
mov
xor
mov
xchg
jno
sub
into
push
test
mov
sar
incl
sub
ds
xor
sbb
movsb
fisubl
imulb
sbb
push
jmp
push
mov
adc
sahf
xor
and
into
lahf
cmpsl
subb
xor
ret
shrb
cmpsb
sub
outsl
or
sbb
aam
ljmp
sahf
xchg
imul
inc
fisttpll
mov
ss
das
jecxz
sahf
in
div
adc
jge
scas
dec
je
call
inc
lea
das
mov
mov
xor
or
movsl
push
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jns
scas
or
jmp
decl
jne
stos
and
mov
pop
stc
dec
aas
fildl
inc
cmp
jge
movsl
out
jge
xor
testb
jg
jmp
fwait
xchg
mov
dec
into
mov
cmpsb
jle
or
std
dec
fisttps
ss
dec
popa
rolb
rol
cmp
clc
sbb
arpl
dec
and
cmp
sbbb
aaa
lock
ljmp
in
xchg
push
mov
push
sub
cmp
sub
loop
add
pop
loopne
insl
jg
loop
test
cwtl
movsl
es
adc
pushf
inc
jae
call
in
cmpsl
clc
mov
fmull
pushf
and
sub
gs
push
dec
in
jb
pusha
es
lahf
mov
inc
js
mov
scas
movb
jne
iret
mov
xchg
pop
mov
iret
xor
push
inc
xor
ss
es
push
jmp
inc
jne
cmp
les
or
fldcw
xchg
sbb
mov
cmp
push
mov
gs
ljmp
and
imul
dec
lock
dec
mov
das
jp
lret
scas
cmp
cmp
pushl
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
or
fisttps
testb
decl
leave
mov
stos
mov
clc
xchg
imul
clc
fdivr
lcall
pushl
jp
sub
cmpsb
cmpsl
jb
fs
daa
sbb
inc
cmp
xchg
fdivrl
lods
or
xchg
incl
add
inc
scas
pop
jmp
dec
inc
maskmovq
divl
sub
cld
incl
mov
ds
int
jecxz
shl
and
lods
sbb
fsubrl
outsl
test
decl
lods
stc
pop
cmpsl
insl
cmp
dec
xchg
dec
mov
jmp
enter
add
xchg
comiss
test
push
mov
fdivr
loop
call
fdivrp
push
push
mov
insl
mov
ja
stc
push
xor
addr16
cwtl
cld
xchg
cld
ljmp
subb
pop
out
aaa
pushf
push
jne
mov
dec
adc
or
adc
icebp
ret
mov
sub
test
iret
imul
out
cli
jg
add
aas
adc
sbb
add
hlt
jmp
lret
push
mulb
ljmp
and
mov
jle
outsl
pushf
xlat
adc
subl
dec
stos
mov
pop
repnz
pushf
push
out
test
or
shrb
mov
pushl
xchg
pop
repz
mov
cmp
jecxz
mov
cmp
xchg
repz
shr
lods
dec
call
push
inc
imul
nop
inc
bound
mov
mov
adc
mov
push
pop
ja
sbb
lcall
mov
dec
mov
jbe
iret
fs
mov
out
inc
inc
out
cmp
data16
xchg
in
std
in
dec
js
lret
ja
mov
inc
frstor
dec
std
pushl
or
add
shrl
divb
sahf
repz
mov
pop
or
enter
cmp
movsl
test
je
call
pop
imul
loope
adc
xchg
jg
mov
xor
repz
xor
jmp
decl
aaa
xlat
lock
stos
adc
pop
lret
push
mov
repz
jbe
stos
rclb
lcall
inc
sbb
ficomps
imul
sbb
loop
pop
std
loope
dec
pop
aad
in
cli
out
mov
repnz
aas
dec
jne
js
push
out
pop
cmp
movsb
jmp
sub
lods
cltd
in
loop
xor
clc
movsl
shlb
mov
cmp
or
sahf
jp
outsb
popf
adc
cmp
sbb
call
cmp
xor
adc
lcall
mov
push
ret
cwtl
cs
lcall
test
cmp
test
push
cmp
pop
mov
enter
inc
aam
fistps
inc
mov
add
in
push
pushf
sbb
mov
xlat
pop
cld
lcall
loope
clc
mov
jae
dec
in
or
test
push
insb
test
jg
ljmp
jbe
add
icebp
cmp
out
enter
in
add
sub
cld
and
mov
jg
mov
mov
pop
ja
scas
pop
shrl
adcb
ja
mov
ds
jg
cmp
xor
inc
sti
dec
push
jmp
popa
shll
xchg
in
orl
push
jns
lds
rorl
push
jb
xchg
ret
cli
lahf
lret
std
xor
xchg
xor
add
test
hlt
mov
enter
call
jle
out
loopne
negb
lahf
idivb
dec
jle
mov
fsubrl
mov
ljmp
jle
xchg
xchg
sub
out
cmp
inc
push
mov
dec
jmp
pop
shl
push
mov
loope
pop
or
add
bound
cli
out
dec
repz
int
adc
xchg
icebp
push
cmpsb
ret
mov
dec
subl
icebp
lock
jb
mov
incb
out
adc
lods
es
or
out
arpl
lock
inc
xchg
addb
les
loopne
sbb
fsubrs
or
inc
cmp
push
jae
sbb
jp,pn
xchg
and
ja
jb
xchg
ja
pop
lea
cmp
mov
pop
stos
movsl
xor
sbb
aam
pop
push
push
pop
jecxz
pushl
inc
in
mov
int3
mov
push
inc
dec
pop
push
popa
scas
sar
mov
nop
mov
icebp
push
clc
loop
in
fmuls
cmp
jg
dec
mov
dec
jle
pop
test
pop
les
inc
jns
shrb
dec
imul
insb
dec
xor
xchg
insl
inc
int3
andl
mov
addb
jmp
jnp
adc
popf
int3
add
xorl
push
adc
mov
jg
imul
mov
push
cmp
pop
bound
add
push
jle
jge
mov
addr16
xor
stos
aad
test
and
cmp
jg
cmpsb
mov
lcall
jle
pop
clc
jecxz
ret
int3
xchg
sub
outsl
rcrb
popa
mov
push
scas
jne
xor
pusha
adc
repz
hlt
jns
add
inc
mov
cmpsl
and
sbb
daa
fcomip
ljmp
jmp
inc
lds
test
in
sub
ja
xchg
xlat
push
ljmp
mov
push
inc
pushf
mov
les
stos
inc
fidivs
cmp
and
mov
ljmp
jp
fwait
movsb
pop
aad
decl
xlat
iret
mov
xor
adc
pop
fisttpl
stos
add
push
pop
jl
negl
mov
daa
lods
add
mov
decl
idivb
iret
adc
mov
jno
inc
inc
je
fsubs
loop
xchg
mov
pop
pop
adc
mov
scas
insl
dec
sar
ret
jmp
inc
imul
cs
dec
and
push
iret
xlat
leave
js
push
push
mov
lcall
mov
aam
push
jmp
outsb
call
and
hlt
dec
mov
hlt
push
add
sahf
out
jecxz
mov
mov
out
imul
add
adc
push
and
inc
xchg
lret
sbb
dec
in
decl
jo
jb
push
xor
pop
ret
add
mov
xchg
jnp
push
xchg
test
decl
push
mov
popf
dec
jo
cmpsl
int
inc
in
fstpl
jns
movsb
mov
scas
add
ljmp
xor
pop
fisubs
cmp
push
lods
pop
cld
scas
shlb
pop
gs
cld
mov
dec
lret
sub
push
add
sbb
jmp
call
loop
clc
jmp
mov
jg
mov
outsl
lock
dec
ja
sar
movsb
movsl
adc
cmp
xchg
and
mov
jnp
mov
cmpsl
sub
mov
lret
enter
test
pushl
adc
mov
push
mov
add
sbb
adc
rcrb
inc
add
jmp
jnp
lds
int
or
xchg
mov
loopne
sti
mov
push
sbb
pop
inc
sbb
addb
and
mov
xchg
mov
push
cmc
mov
stos
push
cli
push
or
iret
mov
cld
or
pop
add
incl
inc
mov
xor
clc
div
xchg
fistps
xchg
lahf
mov
cmp
jae
xchg
cmp
sub
mov
mov
mov
push
xchg
dec
decl
adc
pop
enter
fidivs
pop
imul
movl
iret
mov
mov
mov
loop
loope
adc
mov
xor
aad
fidivs
cwtl
jnp
call
mov
adc
add
call
or
mov
setp
cmp
call
pop
xchg
mov
cmp
mov
lret
push
outsb
mov
shl
movsb
add
lcall
shlb
jmp
push
jno
mov
push
hlt
fcoml
pop
jg
jmp
outsl
std
jp
add
les
cmpsl
xchg
incl
xor
inc
pop
mov
sub
lret
push
adc
imul
jmp
mov
mov
ret
cmp
out
mov
xlat
add
adc
xor
out
decl
and
rolb
mov
xor
fldt
push
jne
in
xor
pushl
leave
clc
test
popa
call
xor
dec
decb
lock
ljmp
fs
xor
jmp
adc
das
mov
sbb
div
aad
scas
clc
inc
add
ret
push
jbe
test
push
inc
loop
jmp
mov
inc
fucom
push
in
pusha
xor
fcomps
xor
call
xchg
mov
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
fcmove
clc
and
cli
lcall
xor
jns
pushf
jnp
and
loop
dec
and
aam
sti
gs
ljmp
pop
fs
jb
pop
mov
shl
dec
inc
push
or
cmp
call
push
nop
icebp
ljmp
sahf
inc
inc
enter
rep
mov
pushl
pop
sbb
ss
decl
xor
repz
lea
rcrl
scas
mov
aam
or
add
lea
fcomps
int3
dec
xor
jnp
xchg
movb
sub
andl
add
lds
jge
mov
jmp
cmp
mov
addr16
imul
mov
aas
inc
aam
mov
in
pop
movsl
jnp
jo
lea
leave
call
rorb
xor
jns
dec
cmp
mov
cmp
mov
insl
mov
xchg
mul
mov
inc
or
sbb
jecxz
push
pusha
daa
dec
insl
arpl
icebp
xor
pushl
std
pusha
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
addl
clc
dec
insl
rolb
sbb
pop
pushf
cli
and
xor
sahf
mov
push
insb
lahf
insl
xchg
cmpsb
movsl
incl
dec
ficompl
popf
out
add
shr
pushl
mov
test
add
cmc
shll
sbb
ljmp
push
dec
jb
sar
fcoml
in
push
out
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
mov
fisubrl
mov
jo
inc
mov
shll
dec
xchg
popf
sbbl
push
lahf
sbb
mov
enter
stos
mov
push
or
or
out
dec
incl
call
negl
xchg
mov
daa
xchg
add
push
adc
int3
mov
ljmp
mov
push
and
mov
jbe
inc
and
popa
sti
adc
ljmp
incb
inc
jl
adc
mov
mov
and
jmp
xor
xchg
js
mov
adc
ss
mov
cli
dec
movsb
js
pop
call
adc
lcall
mov
psllw
fstps
or
jmp
push
mov
scas
dec
mov
jge
xorl
adc
lea
data16
sahf
orl
mov
incl
ret
cmp
sbb
in
loope
pop
adc
inc
dec
repz
popa
lods
rcrl
sbbl
adc
in
sbb
sti
test
cli
int3
lahf
mov
int
mov
dec
add
xchg
and
pushl
sub
ljmp
cmpl
lea
lcall
in
fwait
dec
cwtl
insl
xlat
in
pop
and
push
ret
pop
push
iret
push
cmp
jmp
mov
inc
jne
jge
aad
std
orb
or
pop
cwtl
push
jl
dec
loop
mov
mov
inc
popa
arpl
or
lock
shrl
and
test
dec
test
cltd
in
negl
cli
jg
adcl
cmp
int3
push
cwtl
cwtl
sar
ljmp
test
in
mov
stc
ljmp
sub
adc
mov
jl
test
jmp
xor
ss
mov
or
aaa
into
push
pop
inc
iret
aaa
cmp
mov
push
xchg
fidivrl
sarb
jns
ljmp
dec
sbb
sub
les
sub
es
ljmp
lock
movsb
xchg
jns
xchg
sub
lods
ds
cwtl
sbb
mov
subb
pop
ljmp
out
pop
aaa
in
push
cmp
jae
xor
jle
fwait
incl
mov
mov
fadd
xor
div
or
xchg
cwtl
jo
decl
sub
out
cmc
pop
pop
dec
jns
jmp
adc
pop
pop
push
push
icebp
imul
decl
decb
xchg
mov
into
popa
mov
cmp
out
jl
test
cmp
decl
dec
aam
xchg
psrld
push
dec
cmpb
std
out
adc
xor
ss
fnstenv
inc
cmp
ja
xchg
out
lds
mov
pop
mov
pushf
adc
pusha
out
xchg
xor
scas
sub
adc
lds
test
sub
cmp
push
fadd
out
sti
es
sbb
ljmp
in
stos
ficoms
lock
or
adc
into
and
sub
jecxz
ljmp
lcall
pop
pop
cltd
inc
dec
pop
roll
mov
inc
in
jecxz
test
into
pop
out
mov
lcall
test
cmc
dec
dec
mov
mov
push
bound
inc
fldenv
dec
fisubrs
dec
enter
add
std
mov
scas
out
mov
dec
insl
in
in
push
sub
mov
xor
adc
adc
pop
cmp
xor
in
pop
call
cli
int
or
cwtl
loopne
dec
pushf
inc
mov
test
fs
jecxz
aad
test
xor
xor
jge
xor
and
imul
add
push
dec
inc
ljmp
adc
or
jo
xchg
icebp
jmp
fildl
lds
imull
pop
into
or
lcall
leave
add
push
adc
les
gs
lods
inc
pop
adcb
jns
ja
xchg
movsb
xchg
dec
mov
aad
pushf
dec
or
xchg
adc
mov
xchg
jbe
fdiv
lcall
pop
sbb
pusha
cmp
or
cmp
cmp
lahf
mov
cmove
test
orb
loope
lcall
lcall
and
pop
push
sub
decl
in
or
fiadds
scas
insb
mov
test
pusha
sub
call
out
test
pop
jmp
out
pushf
mov
xor
mov
dec
repnz
dec
mov
incl
test
mov
or
sti
jns
add
sub
mov
popl
dec
mov
ljmp
mov
scas
push
jne
es
push
std
lcall
pop
push
lcall
and
mov
inc
jecxz
and
lahf
jmp
clc
fists
sbb
jb
lcall
leave
stos
adc
adc
and
jnp
dec
js,pn
lcall
stos
adc
les
ror
lods
dec
mov
mov
push
jp
ljmp
ss
fcomip
dec
fdivrs
and
mov
dec
inc
mov
mov
iret
filds
push
mov
jno
ljmp
clc
pushl
push
or
add
jl
mov
adc
cld
dec
add
sbb
push
test
idiv
in
shrb
out
jne
mov
inc
dec
sub
xor
or
loopne
jbe
out
icebp
mov
lods
push
push
into
adc
or
lcall
test
mov
push
pop
dec
inc
cli
imul
cld
mov
lahf
cltd
xor
sbb
jmp
xor
jnp
jp
ret
mov
mov
stos
movq
sub
or
mov
mov
jmp
icebp
shrb
pop
jnp
jbe
and
lds
mov
lods
adc
pop
loopne
std
repnz
and
mov
mov
xchg
sbb
je
pop
fistps
cmpsl
imul
cmp
ljmp
jg
push
rcr
xchg
dec
jle
jge
dec
dec
imull
rcr
loop
call
cmc
jo
incl
in
cmp
testb
ljmp
jb
out
incl
repz
out
fdivl
frstor
or
mov
je
jp
incl
mov
mov
adc
shll
ret
add
push
call
sbb
mov
ss
inc
shrl
and
ljmp
stos
push
cmp
jmp
inc
mov
jno
push
or
and
mov
clc
jns
or
test
shrb
pop
push
test
jg
mov
out
push
testl
loope
sti
in
fisttpll
outsl
cs
cmp
cs
inc
sbb
mov
pop
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
cld
mov
pop
fs
xchg
loopne
pop
add
cmp
push
or
mov
aas
rclb
lock
and
mov
loopne
ljmp
cli
cwtl
lods
xchg
cli
movsb
mov
clc
xchg
add
mov
fbstp
sbbl
arpl
clc
in
loopne
dec
ljmp
loop
fcoms
nop
mov
xlat
cs
fisubrl
mov
scas
test
xchg
and
or
cmp
shlb
sarl
cmc
adc
sahf
in
pop
xchg
mov
int3
lds
js
or
mov
dec
jmp
xchg
jbe
dec
jg
sti
xchg
testl
dec
jmp
ss
int3
pop
xchg
mov
insb
pop
ljmp
lock
dec
adc
sub
cs
psubw
rorb
popa
lret
repnz
and
call
lcall
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
shrl
hlt
and
decl
cmpsl
xchg
scas
pop
lock
pop
and
mov
xorb
mov
mov
mov
jl
ja
pushl
mov
push
gs
ds
mov
orb
imul
aaa
cmc
cmp
jp
inc
icebp
push
lcall
fbld
xchg
dec
add
inc
cmp
sbb
decl
mov
sub
or
push
push
xchg
pushf
sub
xchg
cmpsb
ljmp
jge
int3
cmp
arpl
sahf
fldl
lret
fs
scas
lea
lcall
cmp
jae
dec
leave
sbb
mov
inc
sbb
fdiv
pushl
and
sbb
jecxz
cmpsb
add
cmp
adc
fbstp
and
lods
jb
fidivrl
or
jmp
lods
cmc
popf
dec
add
fbld
or
mov
push
dec
pop
adc
sbb
dec
pop
test
adc
aad
shrl
idiv
ljmp
sub
mov
out
xchg
cmp
aas
or
repnz
lcall
out
dec
imul
and
xor
stc
dec
xor
out
push
lds
sbb
movsl
inc
or
mov
jae
mov
adc
or
adc
push
ljmp
insb
inc
das
sar
cwtl
aam
movsb
enter
ficompl
cmp
rorl
outsb
xor
sub
ljmp
push
in
arpl
xchg
lds
insl
daa
push
in
pop
out
and
push
xchg
or
dec
add
mov
mov
cmp
rolb
jne
loope
mov
push
xchg
iret
in
leave
add
and
push
and
add
sub
cli
cmp
movsb
or
pop
dec
jmp
sub
les
fsubrs
or
or
push
mov
cld
xchg
flds
jbe
repz
adc
adc
jecxz
push
popf
testl
cmp
or
xchg
sti
dec
pushf
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
lret
aam
dec
jle
enter
call
in
cmpsb
arpl
out
imul
or
mov
insb
mov
push
xchg
add
mov
sub
subb
ret
pop
or
test
leave
addr16
xchg
lds
fdiv
cmpsb
adc
inc
andl
add
cmp
jmp
mov
jno
sub
leave
inc
adc
dec
scas
loopne
mov
je
arpl
stos
jae
xlat
addr16
sti
sbbl
mov
push
fstpl
add
test
in
and
xor
push
shll
lret
stos
push
xorl
jnp
inc
sub
daa
fmuls
xor
jmp
jmp
incl
mov
daa
jmp
cmpb
test
mov
jp
mov
stos
nop
out
jnp
cmp
push
pop
aaa
lock
call
leave
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
cmp
jbe
call
push
or
scas
cmp
xchg
rorl
add
cmpl
jecxz
loopne
mov
pop
mov
push
lea
or
repz
pop
push
cmc
mov
pop
add
jmp
sahf
loopne
push
adc
cmp
jmp
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
push
dec
lcall
cmpsl
imul
pop
aad
xchg
xchg
les
jae
dec
decl
xor
cs
xor
push
jmp
in
mov
lret
jmp
mov
adc
adc
int
push
mov
mov
cmp
inc
add
jg
int3
insb
mov
or
jnp
and
pop
imul
fdivrp
mov
jae
andl
push
sub
lcall
js
pop
adc
pop
movsl
mov
mov
fwait
lea
insb
mov
mov
push
jbe
push
mov
sbb
mov
pushf
test
pop
pop
jg
fidivrs
fdivrs
xor
stos
cld
shl
mov
dec
jne
add
ljmp
xor
fiadds
mov
add
pop
repz
dec
ds
push
push
into
jl
mov
xchg
or
jo
xor
cmpsb
test
mov
sti
test
dec
cmp
incl
pushf
mov
outsl
jnp
adc
aam
jl
mov
mov
sbb
clc
push
xchg
sahf
aam
push
outsl
adc
cmp
bound
call
fs
jnp
popf
stos
xor
pop
cmpsb
inc
or
add
adc
inc
jecxz
call
cli
mov
mov
icebp
fistpll
mov
icebp
inc
mov
fidivrl
jae
mov
push
negl
int
ds
fildll
push
dec
push
jbe
sbb
or
test
mov
xchg
inc
xlat
mov
adc
inc
or
stos
pop
cld
push
sbb
xlat
ret
mov
outsb
idivb
sbb
jmp
icebp
fmuls
add
into
mov
shl
xchg
xchg
imul
xchg
cmp
movb
ret
faddp
test
adc
pop
dec
jge
stc
loop
lahf
cmp
stos
imul
ffree
jg
jno
push
nop
push
cmp
jmp
pop
out
dec
dec
imul
lahf
mov
sbb
out
fsts
push
mov
push
mov
mov
mov
pop
shrl
push
insl
loop
push
inc
repz
outsb
ret
sbb
loope
dec
mov
fs
out
jmp
fsubs
push
in
ljmp
loop
out
arpl
add
call
imulb
repnz
or
dec
in
xor
cli
movsl
push
pop
sub
mov
shrb
int
xor
decl
lcall
adc
test
negl
incl
mov
orl
int3
dec
ret
mov
inc
mov
adc
outsb
push
in
aad
scas
push
fs
shrb
shld
mov
inc
jne
fs
hlt
cmpsb
ljmp
lock
or
sbbl
enter
adc
add
aaa
fmull
mov
inc
pushf
js
inc
jge
xor
xchg
rcl
adc
sub
and
call
xorb
jno
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
lcall
ds
int
clc
adc
ret
lahf
dec
xor
push
andb
testb
aam
jmp
repnz
sbb
pushf
iret
iret
jg
or
in
in
mov
subl
inc
pop
fstl
ficoml
mov
jecxz
pop
test
or
hlt
add
mov
cmp
add
jmp
xchg
xor
into
sahf
pop
sub
mov
scas
xchg
sarb
nop
gs
sub
jmp
rcr
adcb
imul
aaa
mov
arpl
fnstcw
push
lock
jmp
cli
movlps
cmp
mov
adc
nop
dec
pop
into
mov
xchg
push
test
fists
mov
add
xor
lods
shll
add
push
xchg
pop
cmpsl
das
mov
lods
jmp
sub
movsb
pop
hlt
push
lret
enter
sarl
adc
loopne
outsl
xchg
pop
push
leave
or
pop
dec
stos
mov
dec
mov
clc
sub
xor
fs
incl
setnp
aad
pop
aaa
imulb
out
test
fstl
push
adc
cmp
pushf
cmp
mov
incl
sti
jmp
mov
nop
dec
aad
dec
push
xor
ficompl
ret
mov
into
gs
pushl
sarb
test
pop
mov
or
sbb
and
out
push
sbb
js
jo
push
add
push
mov
aam
je
mov
dec
jmp
adc
xchg
int
jg
pop
aaa
into
mov
cltd
inc
in
dec
mov
fists
rcrb
mov
sar
pushl
sub
dec
movsb
and
fiaddl
lahf
pusha
or
mov
adc
cs
in
pop
push
or
jmp
pop
inc
jns
out
scas
cmp
dec
lcall
decl
mov
and
mov
aaa
rcl
lods
or
sbb
lods
ja
movsb
mov
std
mov
cmp
or
jge
jmp
in
mov
mov
jo
xor
pusha
mov
xchg
xor
xchg
mov
cmpl
cli
pushf
xchg
int
incb
pop
inc
leave
repnz
mov
mov
mov
in
gs
cmp
or
insb
aam
rcll
mov
call
mov
pop
xlat
or
pop
push
js
cli
adc
filds
flds
jbe
cld
inc
imul
incl
int3
mov
push
and
add
inc
repnz
and
inc
or
imul
or
stos
test
mov
lods
jmp
push
jne
sti
jmp
mov
cs
jg
int
ja
adc
enter
adc
xchg
std
add
push
loop
je
add
and
jg
cli
incl
adc
daa
add
ljmp
in
xchg
mov
lock
ljmp
mov
lock
ljmp
and
jecxz
dec
or
rorb
les
inc
movsb
xor
push
loopne
mov
imul
xor
add
nop
pop
cli
mov
xor
clc
aas
in
jl
lods
aam
sbb
jbe
xchg
fst
mov
cmpsl
sub
or
fdivs
jg
pushl
jns
jmp
cli
push
push
jbe
cli
add
add
dec
xchg
mov
pusha
lods
call
cmpsb
inc
cmp
out
cwtl
push
mov
nop
into
xor
and
js
lcall
outsl
add
rcrb
nop
mov
pop
sbb
xchg
sub
ja
lahf
and
fcoml
dec
out
dec
sub
adc
movsl
inc
sahf
sti
push
jmp
add
jmp
mov
leave
mov
mov
les
sub
mov
jmp
fwait
push
mov
sbb
fs
add
push
or
add
je
lea
dec
ret
jmp
mov
push
cld
fistpll
push
jge
sbb
cmp
lcall
shll
rep
or
jmp
sar
pusha
xchg
jmp
push
jg
and
roll
mov
xchg
xor
sbb
out
and
inc
scas
xor
xor
xchg
add
lock
push
xor
or
dec
inc
cli
ret
jle
loop
jmp
fprem
mov
outsl
cli
fadd
fsubp
jle
pop
cmpsb
sub
dec
push
jle
lcall
fisubrs
cmp
out
mov
mov
in
leave
int
jge
mov
test
ljmp
jmp
lods
repz
frstor
cmp
pop
dec
mov
pop
call
cmpb
jmp
xor
aas
setno
jo
xchg
jecxz
nop
repnz
dec
std
imul
or
pushl
push
out
dec
mov
adc
movntq
out
imul
jns
pop
xchg
or
dec
add
call
mov
xchg
cmpsl
loope
lret
mov
adc
mov
in
decl
pop
xor
ss
mov
lret
adc
in
mov
fdivrl
sahf
and
jmp
dec
push
pop
leave
jmp
push
outsb
je
adc
jbe
xor
add
xchg
jb
sbb
lcall
clc
push
adc
push
jbe
push
add
mov
incl
out
mov
insb
arpl
adc
push
ljmp
xchg
cmp
and
ljmp
out
push
out
or
xchg
jg
jl
in
in
cmp
cmc
inc
aad
push
xor
add
out
stc
xor
inc
xchg
xor
outsl
das
clc
ja
xchg
mov
xchg
pop
push
jl
bt
decl
push
jp
fimuls
pop
mov
scas
pop
mov
lcall
js
sbb
mov
cwtl
inc
cmp
ja
jnp
dec
adc
cltd
clc
pop
sarl
pusha
fs
out
clc
jg
mov
lcall
xchg
stos
jp
aaa
fwait
mov
mov
decl
imul
in
movsl
orl
lods
pop
inc
addr16
test
std
ljmp
lds
cmp
xor
jecxz
jle
xor
dec
nop
ljmp
xorl
fldenv
in
stos
mulb
in
data16
cli
xchg
loop
dec
lcall
jmp
jns
pop
add
test
insl
loop
mov
arpl
fldl
lods
movsb
jl
ret
push
jecxz
cmp
incl
inc
stos
or
xor
mov
sub
dec
xor
adc
sub
out
add
pop
cld
mov
cli
cmc
xor
test
mov
les
loop
dec
lcall
dec
in
pop
imul
shl
and
shrl
or
pop
fnsave
xchg
lcall
call
dec
mov
mov
push
test
jnp
fnstsw
mov
adc
push
nop
ds
dec
and
push
imul
cwtl
pop
inc
jg
icebp
enter
jbe
outsb
clc
dec
mov
cmp
xor
shr
outsb
call
sbb
adc
cmp
pop
arpl
push
jne
dec
xchg
in
push
fbstp
fmul
lods
addr16
ret
pushl
insl
mov
xor
mov
pop
pop
push
mov
or
xchg
outsl
stc
aaa
cmp
lock
mov
repnz
adc
jl
xchg
xor
sub
cmpsl
out
cmpb
int3
xchg
mov
lods
mov
mov
and
push
enter
pusha
sarb
xor
inc
fcoms
and
call
popa
ja
xchg
mov
sbb
lret
and
push
or
aaa
mov
ud0
jg
push
repz
out
add
jns
lcall
scas
push
or
jmp
roll
sbb
fidivl
mov
out
xchg
mov
push
mov
push
push
inc
jmp
xor
fwait
mov
dec
mov
mov
js
add
call
test
mov
xchg
aas
je
imul
sub
cmp
inc
inc
std
jns
repz
ja
test
cmp
pushl
jg
ljmp
jle
jp
mov
fs
in
sbb
rol
int
push
jl
es
in
pop
imul
dec
arpl
clc
int
es
xor
pop
je
adc
and
outsb
or
sub
add
dec
gs
mov
mov
fsub
push
out
mov
fwait
ljmp
mov
aad
mov
jnp
fdivr
incl
jo
and
sbb
in
std
aam
and
dec
fisttpll
clc
sub
lahf
push
inc
xchg
mov
inc
mov
dec
mov
lret
or
jmp
pop
fnop
fisttpl
dec
push
push
sarl
clc
js
insl
add
scas
jg
lret
fabs
fsubp
and
dec
mov
add
sbb
call
bound
call
mov
xchg
dec
loopne
push
pop
add
cmp
push
jns
fisubrl
cmp
jle
jno
enter
xor
jmp
jl
rorl
decl
lods
adc
lea
movsl
jmp
jecxz
fsts
xlat
and
cmc
ja
stc
pop
in
xchg
sbb
dec
mov
lock
ljmp
push
push
icebp
scas
imull
xchg
ret
mov
cmpsb
pop
ja
shr
jecxz
rcrl
xchg
aad
lock
mov
dec
aas
adcl
dec
adc
incl
or
outsb
mov
xor
push
cmpl
es
add
nop
dec
xlat
xor
call
pop
jbe
sahf
cmp
pop
push
mov
test
mov
aam
fnstenv
inc
call
adc
incb
jb
xchg
int3
enter
in
mov
jno
outsl
cli
std
pop
or
dec
testl
pusha
sbb
ret
jnp
outsl
mov
fcomip
subb
aaa
movntps
dec
xchg
jge
cmp
call
ror
scas
lock
incl
mov
test
jge
jmp
xchg
or
xchg
cmp
cwtl
shrl
stos
scas
sub
pop
sbb
lret
add
inc
xor
sar
mov
or
fbld
sti
out
std
mov
and
lcall
dec
sbb
pop
pop
add
cmp
pop
test
pusha
jb
jge
jmp
pushf
xorl
mov
and
push
cs
xchg
add
adcb
cmp
dec
jno
ret
incb
xchg
and
jae
mov
inc
jl
add
jae
cli
xor
insl
insl
mov
jne
mov
jp
shl
shl
pop
mov
cmp
mov
bnd
in
inc
fisttps
incb
loop
scas
test
inc
fnsave
pop
fcmovne
push
sub
cmp
push
cmp
add
lcall
std
stos
pop
mov
xlat
loop
cld
and
push
push
movsl
stos
filds
rcl
inc
fldenv
and
out
dec
insb
or
pushl
lret
stos
dec
cs
mov
xor
ds
cmc
xor
mov
enter
cld
adc
out
mov
in
repnz
add
pusha
test
in
pop
in
push
clc
lods
push
sti
jnp
xor
add
fcoms
fcmovu
call
sub
jae
ficoms
ss
pop
outsl
mov
lea
popf
sub
add
lcall
out
arpl
jns
mov
xor
sbb
cmpsb
stc
int3
adc
and
jae
je
and
sbb
scas
sbb
into
shr
ss
push
push
push
sbbb
fistl
js
push
mov
ljmp
mov
cmpsl
rcrb
call
sarl
arpl
hlt
call
adcl
ds
nop
inc
sti
sub
cmp
jg
inc
or
rcrl
sbb
jp
dec
cmp
sub
repnz
jg
push
outsl
push
xor
icebp
xor
mov
cltd
cwtl
out
sub
lcall
xor
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
mov
pop
loop
xchg
hlt
jmp
push
cwtl
xchg
jge
cmp
jp
sar
decl
mov
cwtl
push
and
ds
in
ror
shlb
dec
jmp
inc
aas
jns
jne
jg
outsb
adc
rcll
push
out
mov
mov
cmc
in
dec
inc
push
vmaxps
incl
or
stos
pop
rorb
testl
or
or
lock
adc
xor
dec
add
hlt
inc
lcall
cli
cmp
lahf
adc
es
lcall
popa
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
and
cmp
inc
ds
cmp
pushl
mov
fcoml
xor
test
js
jge
sti
and
aas
add
int3
andb
fcmovbe
push
and
shl
pop
cs
cmp
fnstenv
pop
mov
or
pusha
adc
or
mov
pop
inc
lea
aam
sbb
add
dec
scas
clc
outsl
adc
xchg
outsl
call
rclb
ljmp
xor
mov
inc
mov
iret
sub
setge
mov
fwait
mov
decl
daa
pop
popf
mov
sti
mov
js
arpl
lea
cmp
sub
clc
inc
rorl
cmpsl
cmc
icebp
notl
mov
mov
lcall
lahf
ss
mov
mov
icebp
jmp
add
loope
das
clc
ficomps
jnp
and
negb
inc
clc
repnz
fsubrl
push
and
clc
mov
jmp
pusha
out
and
xchg
jb
shlb
jge
sbb
incl
outsl
imulb
in
add
pop
aad
push
cmpsl
cltd
adc
pop
jns
call
test
pop
and
call
mov
insl
loopne
in
push
test
cmp
addr16
int
inc
dec
pop
test
rclb
dec
cmc
lahf
sub
add
rol
pop
pop
jg
test
nop
clc
aam
fwait
shrb
les
pop
outsl
ljmp
cli
inc
imul
imul
ljmp
dec
jnp
lods
and
pushl
out
es
jle
lds
pop
imul
daa
jle
or
or
pushl
and
testl
lret
out
cld
out
mov
cmpsb
mov
and
mov
repz
aam
ficompl
das
aaa
cmp
jg
jmp
aas
pop
fnstcw
xor
clc
pop
jmp
jae
sub
in
jge
fimuls
lds
mov
mov
andb
sahf
gs
xchg
pop
sbb
mov
sub
sub
lcall
xor
mov
xlat
rorb
ret
mov
dec
pushf
sub
push
ljmp
ljmp
sub
mov
iret
push
inc
in
jb
sub
enter
lods
test
imull
std
fcomip
fisubrs
and
cmp
add
xor
imul
pushl
and
jno
xor
insb
lds
out
sbb
lods
xchg
je
ljmp
mov
xchg
mov
push
push
out
out
or
mov
cli
out
add
and
pop
inc
outsl
clc
rcll
pop
mov
sahf
sbb
sub
adc
jmp
arpl
loopne
gs
mov
push
push
sub
xor
inc
cmpsl
out
subl
std
adc
shll
sub
fdivr
in
xor
pop
lods
pop
ret
and
push
loopne
loopne
test
cld
in
add
mov
sbb
cmp
push
dec
pop
cmpsl
hlt
in
pop
lea
scas
sbb
lcall
hlt
data16
mov
add
fcomi
inc
aaa
ficompl
js
xchg
loop
mov
cli
mov
mov
xchg
inc
es
and
sub
pusha
loopne
pushl
fwait
dec
push
ds
sbb
ljmp
testl
pop
inc
test
mov
fs
cmp
pop
push
call
xor
ret
inc
cmpsl
data16
cmp
fs
pushl
jae
xchg
enter
stc
push
mov
insl
adc
mov
cli
arpl
out
jg
jp
ljmp
push
xor
dec
cmp
addl
jle
pushw
sub
mov
scas
jmp
popa
lds
xor
inc
daa
add
fmull
out
fisttps
data16
test
sub
test
jle
mov
test
xchg
decl
jmp
xchg
mov
jbe
mov
or
cltd
jg
pusha
out
cmp
jns
inc
push
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
dec
loopne
iret
mov
mov
sbb
lods
xchg
aad
dec
aaa
and
cld
aad
fnsave
mov
mov
loope
sbb
test
mov
pop
dec
repz
arpl
fs
mov
inc
pop
push
mov
mov
push
std
fildll
sahf
cmp
or
movsb
add
jns
and
aam
incl
dec
dec
pop
jnp
push
in
lds
leave
cmp
jo
repz
ds
std
cmp
aam
mov
push
push
arpl
push
add
rcll
jle
xchg
repnz
mov
add
shr
lds
mov
outsl
mov
daa
cmp
std
jmp
cmc
stos
ret
sti
adc
je
out
inc
pop
add
jmp
icebp
lods
and
test
xlat
push
mov
loopne
in
movsl
popf
sbb
decl
lock
adc
nop
adc
insl
pop
stos
sbb
jae
jne
mov
sbb
sahf
push
lcall
or
arpl
lahf
repnz
mov
cltd
movsb
lods
imul
mov
or
ljmp
cli
clc
or
lret
pushf
cmp
dec
or
insl
stos
push
xlat
push
lock
push
out
lcall
hlt
lret
cmp
dec
arpl
fadds
mov
push
mov
or
incl
fwait
jne
test
jge
shrb
call
std
pop
dec
cmp
lods
push
fwait
sbb
in
stc
inc
mov
add
mov
cmp
ja
sub
and
stc
add
incl
or
lock
mov
movsl
js
int3
xor
lcall
sub
ljmp
sbbl
mov
mov
fists
inc
mov
aas
push
dec
xchg
xchg
mov
cmp
xchg
sbb
aas
and
fwait
mov
jp
lcall
in
cmp
jb
incl
fnstenv
mov
das
pop
hlt
mov
xor
rorl
or
jmp
push
test
push
mov
inc
outsl
add
loopne
pop
pop
insb
in
cmpsb
inc
dec
pop
mov
popa
add
mov
daa
hlt
dec
dec
into
in
mov
add
mov
leave
ret
jo
mov
push
pop
mov
jmp
mov
adc
jp
xor
dec
lcall
mov
lret
lock
inc
insb
mov
sub
pop
clc
movsl
mov
adc
pushl
ljmp
aaa
filds
shrl
cmp
orl
decl
mov
cmp
xchg
sub
push
ret
popf
fsubl
push
pop
mov
in
xorl
sbb
fisubl
xor
and
push
pushf
call
call
jbe
pop
ss
jmp
rcll
mov
mov
int3
fnstsw
nop
sub
mov
cs
in
gs
call
in
outsl
scas
xchg
dec
repnz
fdivrs
cmp
push
push
pop
outsb
mov
movsl
mov
push
loop
xchg
mov
pushl
insl
or
daa
xchg
shrl
and
push
in
rorb
loopne
decl
mov
jnp
dec
imulb
mov
jmp
stos
and
mov
sub
push
jp,pt
scas
stos
xlat
add
jne
push
lods
push
cmpsb
mov
ljmp
add
fst
pop
xchg
cmp
lahf
mov
jmp
aas
jno
or
iret
lock
mov
in
popa
into
ror
fistpl
aad
mov
aas
imull
ret
dec
call
not
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
fnstsw
inc
daa
xchg
test
pop
push
in
jmp
inc
je
mov
clc
lahf
in
pop
inc
pause
jbe
add
ret
test
cwtl
in
push
dec
rcrl
mov
xor
shlb
push
cs
js
daa
add
jg
ljmp
or
pop
aam
rcl
ljmp
jno
pop
fnsave
notl
cli
aaa
mov
pop
adc
lock
imul
inc
or
jge
arpl
dec
aas
mov
imul
jnp
jno
call
adc
andb
inc
mov
pop
mov
mov
clc
fildll
mov
xor
cmp
xchg
xor
push
pushl
mov
dec
xlat
lea
ror
ret
add
cmp
pop
xor
out
scas
pusha
mov
pushl
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
lcall
adc
or
pop
lcall
rcrl
fcom
cmpl
hlt
addr16
pop
adc
add
sbb
stos
adc
mov
sub
inc
je
inc
fnstenv
inc
das
test
or
sub
cmp
inc
mov
jle
js
in
jo
push
push
adc
push
ds
sahf
pop
cmp
ljmp
cmc
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
adc
lret
mov
loop
dec
dec
xor
mov
decl
in
dec
mov
icebp
test
fdivrl
jne
repz
incl
dec
mov
adc
and
or
sti
lret
loopne,pn
sub
add
jle
dec
mov
outsb
xchg
cmp
push
and
push
mov
stos
push
sub
imul
jecxz
repz
cmc
mov
pusha
dec
push
decl
push
sbb
jecxz
push
pop
icebp
lock
movsb
adc
dec
xchg
push
fildll
and
sbb
xchg
and
mov
sub
scas
ds
xchg
pop
xor
cwtl
xor
bound
pop
movsb
mov
jp
orb
mov
or
jg
pop
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
sub
jg
cmc
test
inc
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
cld
test
add
call
mov
inc
push
lods
mov
add
arpl
mov
repz
roll
xchg
cmpb
mov
repnz
adc
sub
hlt
jg
iret
cmp
pop
pop
pop
cmc
jmp
rolb
xor
jno
sbb
arpl
add
jp
sub
call
cmp
scas
out
mov
or
mov
push
inc
jg
push
daa
ds
ljmp
mov
add
sub
mov
cmp
test
movsb
cld
pusha
pop
mov
test
int
lcall
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
lcall
push
add
and
jge
mov
shrl
out
push
loope
mov
mov
jmp
stos
incb
mov
cmpsl
sbb
out
fdivrs
push
ret
mov
jg
ljmp
in
push
mov
xchg
cmp
in
fiadds
incl
sub
push
int
pop
lock
ljmp
repz
out
xor
fildll
push
push
or
mov
or
mov
inc
movhps
xor
das
clc
adc
push
xor
mov
inc
pop
in
sub
fistps
fs
mov
pop
or
insb
pop
or
test
push
jge
pop
cmp
enter
mov
xchg
push
clc
pop
push
push
out
int
mov
dec
aam
inc
sbb
or
fistps
repz
jns
in
insb
inc
ljmp
adc
pop
push
fcmovnb
das
add
sbb
adc
inc
push
pop
cmp
das
int3
xchg
rcrb
mov
popa
test
insl
and
mov
cmc
xor
xchg
sub
mov
jbe
lret
aaa
and
stos
data16
aas
ds
out
jb
into
xor
in
sub
mov
lcall
mov
push
loope
jmp
add
out
xchg
cli
xchg
or
mov
movl
outsl
and
mov
loope
ljmp
divb
out
xchg
int3
or
sbb
lcall
inc
add
mov
pop
cmp
inc
mul
loope
decl
outsb
js
aad
out
cmpsl
dec
subb
dec
xor
adc
shll
push
dec
decl
mov
mov
adc
mov
or
jno
jno
pusha
push
incl
js
inc
cmp
scas
and
test
mov
inc
push
mov
call
pop
mov
fsubrl
jno
cmp
xor
les
pop
repnz
out
sbb
fists
out
gs
repz
incl
idivb
inc
clc
scas
mov
test
ljmp
imul
mov
dec
arpl
cld
xor
jecxz
pop
lock
cld
sbb
and
arpl
iret
sbb
test
in
cmp
ret
popf
popa
iret
mov
int3
mov
push
xor
cmpsb
je
dec
push
cwtl
sbb
or
push
lcall
pop
repz
cld
jmp
daa
xlat
scas
out
dec
stc
ficoms
and
jg
mov
add
insb
mov
mov
rclb
enter
mov
mov
out
xchg
pop
xor
dec
mov
push
inc
jb
lock
mov
lds
fsubl
dec
mov
adc
decl
lahf
cmpsl
sbb
mov
in
xchg
xor
mov
jmp
lock
jmp
sub
rolb
mov
dec
repnz
push
xor
test
daa
cmp
pop
push
xchg
pop
scas
in
cmp
mov
gs
dec
test
mov
cmp
mov
push
xchg
decl
imul
push
pop
shll
xchg
jecxz
sti
jnp
mov
jmp
cwtl
inc
pop
setle
adc
scas
dec
loope
and
inc
xor
scas
xchg
jmp
ss
jmp
scas
gs
js
dec
add
jae
into
dec
cmp
mov
dec
outsl
pop
cmp
ficompl
xchg
ds
adc
or
xorb
adc
pop
push
jmp
ret
mov
test
cmp
mov
xchg
dec
shl
jmp
repnz
jo
xchg
je
inc
or
adc
sub
or
add
cmpsb
into
xor
cld
push
cmp
mov
cmp
call
aad
add
cld
orl
stos
push
test
xchg
pop
ds
or
dec
mov
xchg
sbb
jle
xchg
push
xor
xor
sub
popa
pop
jo
pop
mov
lock
mov
mov
call
pop
push
fs
gs
mov
adc
xchg
clts
inc
mov
jmp
sbb
jg
call
fstpt
pop
iret
cmp
mov
shl
cli
dec
imul
hlt
xchg
aad
lcall
sbb
add
xor
lret
popf
icebp
pop
push
ud2
ds
sub
fwait
sub
dec
roll
rcr
lods
sub
scas
cmpsl
xchg
jbe
outsb
into
shl
test
rcr
push
xchg
out
and
in
mov
clc
pop
in
sub
or
push
jno
test
cli
decl
cmp
push
push
daa
loope
stos
fcomp
cmp
lods
je
sub
ljmp
fidivrl
in
push
loope
repnz
push
loop
sbb
jmp
jmp
sub
fsubl
xchg
pop
mov
xchg
push
jge
jbe
sbb
and
cmp
filds
push
sahf
dec
pushf
ja
loopnew
pop
pop
out
sub
jb
push
sub
int
adcl
mov
mov
sub
jnp
adc
inc
xchg
cmp
ljmp
mov
int
out
mov
and
or
je
divl
repnz
push
xlat
das
negb
imul
inc
cltd
mov
jmp
cli
or
inc
add
mov
lret
push
pop
adc
fwait
sbb
push
cmp
lds
decl
jmp
push
jns
fdecstp
repnz
push
int
adcb
mov
sbb
out
insl
scas
lea
pop
loopne
ja
jo
push
mov
es
sub
adc
push
push
pusha
fimull
push
push
adc
ljmp
shrb
xor
movsb
or
insb
loopne
clc
in
push
fidivrl
ljmp
pop
in
mov
cwtl
add
pop
and
lcall
sub
fwait
push
lret
in
imul
fldenv
pop
test
sub
adc
mov
std
dec
sbb
data16
or
in
fldcw
sub
nop
aad
stc
cld
mov
mov
mov
gs
jb
push
mov
sbb
or
or
cmp
jo
fdivs
xchg
add
mov
mov
add
sarl
mov
cmp
sub
mov
decl
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
pop
fbstp
mov
addb
out
push
lock
push
jmp
ret
adc
mov
popf
and
pop
lock
subl
inc
in
add
addb
mov
mov
pushf
cmp
push
pop
cmpsb
dec
shr
adc
stos
mov
pop
ret
jge
sub
dec
sbb
mov
aad
xchg
jecxz
jle
aaa
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
fld
pushf
iret
jl
jnp
pop
cli
decl
test
mov
icebp
add
mov
popf
stos
pushl
cmpsb
arpl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
jl
dec
call
ljmp
out
inc
cmp
push
adc
dec
loopne
and
leave
rcll
xor
fs
push
loop
xchg
mov
adc
jns
jo
outsb
push
jnp
dec
testb
call
mov
lock
cmpsl
stos
mov
push
mov
hlt
mov
cltd
add
fwait
lcall
into
jo
clc
pop
test
adc
loop
xor
mov
call
das
in
push
daa
jl
push
fcoml
cmpl
mov
lock
outsb
cmp
scas
cmp
std
add
pusha
ret
stos
ret
or
ret
out
lret
sub
fcompl
xchg
cmp
mov
pushl
adc
push
jg
dec
cmp
out
fstpl
or
add
cmp
sub
ljmp
pop
sbb
pop
movsl
jecxz
fnstcw
das
mov
call
and
xlat
fbld
pushf
add
into
and
leave
clc
addps
dec
lcall
test
iret
idiv
call
int
cmp
cmp
jno
jmp
jge
ja
and
or
or
decl
mov
cmc
aaa
xchg
jb
mov
das
or
filds
cmp
data16
jle
mov
lods
xlat
out
es
sbb
fcomip
xor
jmp
jg
adc
sahf
sub
stos
push
leave
cli
lret
movsb
dec
mov
loopne
jae
inc
sbb
mov
mov
pop
sub
mov
test
sub
inc
dec
lcall
jns
mov
data16
mov
mov
pop
or
push
pop
mov
lret
push
mov
inc
clc
decl
push
js
xchg
push
push
xor
mov
hlt
cmpb
cmp
mov
push
mov
mov
lds
mov
xlat
mov
lcall
xchg
and
pop
mov
sbb
xor
jnp
jg
out
or
pop
arpl
push
mov
xchg
pop
clc
inc
push
lea
les
and
pop
jp
dec
mov
call
sbb
mov
ds
push
cmpsb
mov
push
add
jp
or
pushf
mov
xor
out
cwtl
mov
adcl
out
mov
add
add
cmp
mov
jmp
cmp
inc
aas
mov
jle
jge
fs
xor
dec
sbb
jb
jg
add
mov
mov
mov
adc
pop
mov
cmp
jbe
dec
jbe
jbe
mov
and
orb
mov
jge
dec
sub
lcall
out
pop
out
mov
push
add
into
add
dec
arpl
sbb
fildll
lret
push
sub
cmpsl
stc
dec
mov
sbb
lahf
jle
or
pop
sub
aad
pushl
xlat
inc
fimull
dec
jbe
cmp
cltd
in
add
subb
movsb
mov
jp
mov
xor
aam
adc
into
mov
pop
dec
mov
outsl
gs
inc
cmp
pop
stos
xor
jae
pop
pop
movsl
mov
int
in
mov
push
pusha
sbb
mov
cmc
sub
insb
adc
mov
clc
shll
sbb
jmp
or
shl
add
negb
mov
pop
iret
dec
mov
in
loop
xchg
inc
shr
sub
lcall
cli
push
popa
sub
adc
mov
imul
ds
shl
lods
enter
decl
fstl
or
jbe
insl
cmp
sub
int
int
sbb
lea
incl
pop
jnp
xchg
in
add
dec
xlat
or
dec
adc
rcr
cmp
in
cs
dec
pop
sub
ja
icebp
int3
mov
jecxz
loop
sar
inc
nop
sub
xchg
sub
out
addb
scas
stos
rcr
or
dec
or
mov
js
adc
call
loop
cli
imul
jl
cmc
add
cmpb
mov
int3
and
pop
mov
fdivs
fistps
jns
insb
ljmp
popa
cmp
sbb
add
inc
ljmp
cli
jg
arpl
rcll
into
sarb
jecxz
addl
cmc
sub
loopne
call
clc
frstor
push
dec
movsb
lea
out
add
enter
std
dec
sub
out
push
outsl
sub
pop
cmp
push
push
aas
and
call
out
sbb
sbb
test
mov
rcll
sub
inc
stos
mov
push
jnp
and
jl
sets
cli
iret
jecxz
ss
pushf
and
push
ljmp
mov
jnp
dec
pop
xchg
dec
rol
pop
in
adc
in
and
outsb
int
inc
test
in
xchg
sti
pusha
lret
cmp
stos
decl
xchg
in
fsubrp
cmpsl
cmp
pop
fiaddl
pushl
pop
cli
rcll
cmp
pop
adc
shrb
inc
cmpsb
push
dec
fmul
popf
jmp
jb
jg
push
cmp
or
jno
add
xchg
inc
or
inc
sbb
mov
lcall
jle
pop
fwait
inc
leave
sub
inc
testb
fcoms
aam
cwtl
adc
mov
xorl
jmp
mov
ljmp
repnz
dec
and
mov
mov
or
sbb
cmpsb
sub
gs
fs
call
inc
sub
stos
sub
dec
mov
adc
jecxz
sbb
in
add
ljmp
adcl
xchg
sbb
es
sub
scas
enter
mov
dec
data16
mov
xchg
cmpb
lahf
push
add
repnz
sar
cs
daa
arpl
jp
push
or
in
inc
leave
sbb
jmp
out
cs
nop
or
les
sub
push
sub
fcomip
fists
sbb
insb
addl
jg
popa
mov
mov
pushl
xchg
adc
aad
out
icebp
inc
loopne
addl
jae
push
lods
loopne
dec
xchg
cmp
or
ljmp
ficomps
test
or
sbbl
subl
inc
add
adcb
lret
mov
mov
arpl
mov
repnz
nop
sbb
subl
xor
or
outsl
mov
stc
and
jl
add
data16
push
imul
daa
cmpsb
adc
incl
popf
stos
arpl
inc
aaa
push
adc
mov
push
enter
jno
and
nop
lock
mov
aas
dec
adc
call
jne
ret
and
xchg
mov
dec
mov
jne
hlt
sahf
push
mov
or
popa
test
mov
jo
jns
daa
adcb
insl
ja
lcall
mov
jl
into
scas
or
xchg
pop
sub
fadd
movsl
and
int3
mov
decl
and
xor
out
scas
js
and
pop
jnp
stc
mov
cmp
call
sub
sbb
and
xchg
xchg
jmp
pop
movsl
decl
daa
or
adc
out
cli
sub
dec
or
es
in
lret
mov
xchg
add
mov
xor
ljmp
xchg
xchg
mov
fs
inc
mov
mov
idivb
loop
enter
loopne
stos
push
sub
pop
or
jae
push
ss
xchg
cmp
movsb
mov
stos
push
ja
add
cs
and
das
adc
jae
mov
stos
sub
or
push
jns
loop
call
ds
fimuls
inc
push
mov
mov
pop
jmp
movsl
or
mov
adc
cli
lcall
cmpsb
pusha
daa
jbe
and
scas
jmp
mov
fnstenv
je
ficompl
jbe
out
or
pop
fwait
cmc
bound
int3
or
add
ds
aas
idivb
out
data16
insb
jne
push
leave
cltd
sub
mov
andl
sbb
notl
das
and
lahf
jae
out
fidivl
out
pop
or
test
mov
filds
push
mov
ret
mov
or
push
push
fistpll
jmp
cmp
xchg
sbb
outsb
lock
lcall
mov
add
imul
data16
pushl
std
in
dec
test
add
mov
ds
mov
inc
testl
incl
mov
sub
lods
lahf
icebp
cmpsl
xchg
lods
push
mov
cld
ret
lods
in
in
sub
pop
cmp
out
inc
sub
popa
loope
lcall
pop
xor
dec
and
cld
mov
cld
js
aad
loopne
addr16
sahf
adc
jmp
cmpsb
mov
movsb
andl
jmp
cmpsl
xchg
mov
adc
push
iret
push
add
adc
ficompl
sbb
in
jg
mov
arpl
mov
push
jnp
mov
inc
push
loop
mov
aas
scas
or
mov
mov
or
xor
xlat
lea
jmp
mov
sub
jae
fcompl
hlt
cltd
sub
scas
push
sub
popf
and
jmp
test
std
incl
mov
inc
repz
xchg
xor
push
dec
adc
rcll
add
xchg
pop
aad
push
icebp
repz
sti
lds
mov
or
mov
pushl
or
xor
bound
gs
shll
pop
mov
incl
scas
pop
cmp
pop
enter
es
fidivrs
aam
lds
xor
adc
mov
fistps
xlat
inc
sbb
lods
dec
daa
xchg
cmp
or
pop
cmp
xor
lcall
mov
fs
aaa
shll
cltd
cmp
arpl
loope
sbb
sbb
cmp
dec
inc
aaa
cld
pop
cli
sub
nop
sbb
incl
push
outsb
xchg
pushf
jecxz
rcrb
scas
into
sub
icebp
or
orl
mov
jmp
orl
lods
mov
sbb
xchg
das
jnp
popa
sub
cmp
sbb
mov
std
pop
add
test
fucomip
test
xchg
call
aas
movsb
imul
sbb
jp
jno
xchg
cwtl
mov
push
xchg
push
inc
out
pop
adc
dec
ljmp
in
mov
mov
in
mov
cwtl
mov
aaa
jl
or
int3
jae
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
jmp
sarl
adc
and
dec
fneni(8087
dec
push
out
cltd
cmp
adc
mov
mov
cwtl
xchg
lcall
sbb
fwait
imul
push
pop
jge
stos
les
hlt
cmp
fdivrs
xchg
test
mov
js
das
xchg
fidivrl
mov
test
pop
jecxz
mov
xchg
dec
ds
mov
mov
shlb
mov
pop
sbb
repnz
ja
mov
insb
pusha
insb
imul
call
lods
int3
aaa
sar
adc
sub
fs
push
inc
inc
xor
les
cmpsl
mulb
decl
add
fistps
xchg
and
mov
js
lods
jp
pushl
mov
imul
scas
fsubrs
pop
je
sub
jge
arpl
jp
push
stos
jbe
lcall
jne
imul
pop
or
decl
repnz
loop
lods
iret
call
sbb
sub
xorl
or
rcrl
jge
in
mov
test
gs
mov
jecxz
js
call
mov
xor
dec
imul
stos
add
sbb
inc
mov
mov
lds
outsb
cli
sub
pushf
sbb
add
cmc
lcall
push
lret
mov
gs
pop
movsb
push
dec
or
mov
std
xchg
adc
lret
aad
add
adc
add
sub
out
nop
lock
inc
loopne
loop
mov
stos
dec
imulb
pop
loopne
lret
ja
rcll
mov
in
leave
dec
sub
add
scas
mov
es
nopl
out
ficoml
xor
xor
inc
push
decl
pushl
pop
xor
push
ds
pop
cld
push
insb
lret
and
outsl
dec
mov
jg
cmp
enter
addb
xor
cmp
ljmp
ds
leave
cmc
pop
shrb
arpl
xor
je
ret
int
push
mov
rorl
adc
mov
iret
jecxz
mov
ljmp
out
push
lods
rcr
dec
daa
mov
cwtl
inc
adc
and
pop
hlt
jg
sahf
push
mov
lcall
pop
xchg
iret
push
aaa
scas
aam
add
lcall
pop
mov
into
mov
fstl
rcrb
add
push
sahf
add
cmp
test
or
mov
cmp
inc
inc
adc
mov
xor
mov
push
jecxz
jmp
pusha
sbb
push
inc
push
sub
sub
xlat
dec
inc
mov
cmp
add
in
jmp
ds
ret
movsl
or
insb
pop
mov
push
rcrl
adc
pushl
sub
and
mov
xorl
loopne
sub
jmp
test
inc
mov
jnp
ds
xor
in
jns
xchg
xchg
lods
sub
pop
cmpsl
popa
mov
call
inc
mov
xor
sbb
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
pushf
dec
pop
add
out
xchg
add
les
adc
ljmp
cld
xchg
push
outsl
shrl
outsb
inc
les
fsubs
cmp
push
or
jg
fbstp
jl
jb
pop
pop
fmuls
lea
jne
mov
fs
les
push
test
push
add
ret
pushl
sbb
jb
cmp
add
or
inc
sub
subb
dec
outsb
call
clc
das
pop
push
adc
sbb
cli
mov
pusha
shlb
mov
ljmp
outsb
mov
xor
lods
imul
dec
xor
daa
lahf
out
clc
call
mov
ljmp
and
sbb
inc
push
enter
lcall
mov
pop
sub
cs
inc
rcrl
decl
movsl
mov
push
xchg
vunpcklpd
xchg
dec
sbb
sbb
sbb
jmp
sbb
xchg
and
push
cwtl
push
cmpsl
or
cld
xchg
cmp
jae
daa
int
jecxz
decl
cltd
rorl
mov
sub
pop
dec
test
out
mov
int
repnz
fcomip
and
pop
enter
inc
jge
addr16
jb
imul
jbe
movsl
lods
jg
repz
push
sub
sub
inc
or
dec
mov
and
jg
or
inc
mov
cmp
sbb
ret
add
out
sbb
fwait
mov
dec
leave
addr16
mov
lahf
int3
mov
mov
aam
mov
test
mov
imul
mov
pushf
pop
sub
cs
add
test
clc
inc
jl
jmp
mov
cmc
loopne
lcall
and
add
mov
mov
pusha
cmp
adc
fsubrl
or
mov
sbb
mov
pushl
neg
or
dec
xor
loopne
mov
outsb
lahf
out
xchg
out
cwtl
sub
ret
push
xchg
mov
in
ss
xchg
mov
out
pop
pop
add
jg
fs
adc
cmc
or
ds
xor
dec
xchg
ljmp
fsubl
fcmovb
xchg
nop
fdivrs
lea
je
and
pop
push
cmp
pop
inc
xchg
push
fiaddl
imul
fwait
mov
mov
loopne
mov
and
ljmp
clc
dec
ljmp
paddusw
xchg
stc
or
pop
enter
dec
mov
cltd
aaa
cld
decl
std
push
mov
push
xor
add
addr16
jmp
or
xchg
mov
mov
cmp
fadd
outsl
cmp
mov
aam
scas
ljmp
cld
cmp
jecxz
idivl
and
call
in
mull
call
adc
xor
int
outsb
and
ret
and
mov
loop
xor
mov
mov
adc
ss
xor
sti
in
adcl
pushl
and
shrl
cwtl
pop
and
mov
push
sub
imul
lcall
popa
pop
das
mov
mov
xlat
insb
jns
xchg
and
fmuls
ss
mov
xor
mov
rdmsr
stos
fnsave
and
xlat
adc
jmp
enter
jne
aaa
test
mov
xchg
pop
cwtl
out
cld
add
adc
and
call
cs
fimuls
adc
add
jae
push
jg
dec
sbb
pusha
inc
leave
xchg
push
mov
adc
imul
xlat
jno
lret
enter
pushl
lret
aad
fs
xor
jle
jge
outsl
or
xchg
in
std
incl
mov
xchg
pop
sub
into
or
pop
mov
filds
faddl
bound
fiadds
push
adc
dec
fs
pushl
lea
jbe
int
cwtl
jge
push
fs
loop
or
dec
rorl
pop
push
test
in
fisubs
mov
and
test
call
ljmp
dec
jnp
int3
sti
loope
cmp
xchg
mov
cmp
adc
mulb
sti
mov
mov
clc
xor
ficompl
jbe
jmp
jecxz
adc
xor
add
jge
pop
int
and
stos
ret
xlat
dec
icebp
push
lods
xchg
idiv
mov
ret
xchg
popf
push
cwtl
jecxz
loope
aaa
dec
outsb
or
gs
pop
pop
pop
pushf
cld
cld
rcl
jb
mov
jl
sbb
jmp
mov
icebp
decl
shll
idivb
push
add
jecxz
imul
mov
repnz
ljmp
mov
outsb
stos
in
ds
sub
cli
mov
jge
jmp
fcomip
rclb
dec
add
inc
imul
pushf
nop
fwait
test
insl
repnz
decl
pop
mov
add
mov
inc
in
push
adc
repnz
sub
enter
out
inc
loope
lods
addr16
ljmp
and
push
inc
insb
dec
xchg
fdivrl
xchg
loope
call
sbbb
inc
sub
psubw
fsubrs
addr16
mov
cmc
ljmp
or
fdivrs
inc
cli
and
out
adc
subl
xchg
es
xchg
pop
and
inc
mov
xorb
jne
cmp
les
jno
in
fldenv
icebp
mov
scas
std
add
add
sbb
push
les
cmp
decl
mov
lods
cwtl
push
sbb
loope
mov
adc
xlat
jnp
sahf
incl
test
adc
jne
aaa
fcom
rcr
pop
mov
clc
outsb
push
xor
jecxz
lcall
push
out
cmpsl
xor
jno
sahf
mov
pop
fstpt
enter
push
out
aaa
call
and
out
bound
inc
test
shrb
pop
or
lret
pop
js
pop
xor
decl
push
jge,pn
cmc
lcall
repz
movsl
inc
jne
movsl
test
out
cmp
inc
mov
arpl
mov
sbb
cmp
std
sarb
inc
pop
cmpsb
sub
xor
mov
les
mov
jno
push
push
lods
xchg
xchg
js
movsl
adc
cmp
aad
mov
test
outsl
jno
pop
or
xor
incl
mov
pop
hlt
jne
leave
or
jo
cmp
sbb
or
xor
add
lds
jle
mov
cmc
pop
jns
test
or
jg
lock
xchg
stos
addr16
push
xchg
pop
dec
xlat
sbb
pop
in
ljmp
adc
mov
imul
lahf
outsl
test
lea
pop
cmpb
ds
aas
and
insl
push
dec
xchg
clc
jmp
xlat
mov
pop
cmp
iret
xor
add
mov
shl
jg
ljmp
dec
sbb
iret
push
jg
iret
push
xchg
xchg
xchg
jo
xchg
fmulp
daa
es
xchg
fcomip
jmp
out
lcall
shlb
int
mov
and
ljmp
jae
mov
daa
adc
lahf
jg
mov
dec
adc
out
mov
fcomip
jg
inc
push
push
aam
push
jo
jo
sti
xor
out
test
std
jge
dec
ret
add
pop
jp
pop
sub
jns
mov
iret
or
jmp
scas
ret
insl
stc
dec
stos
sti
test
or
fs
lcall
clc
popa
lahf
in
ds
imul
pushl
insb
jge
jg
or
cld
and
xor
icebp
stos
in
jp
sub
lahf
or
dec
push
daa
pop
insb
call
jl
mov
dec
pop
cmpsb
mov
stos
loopne
jae
jno
fcomip
xchg
shrb
push
sbb
xor
sub
icebp
pop
xor
sbb
sub
pop
clc
rcr
movsl
js
add
call
push
icebp
addr16
je
inc
adc
js
lret
lret
xor
xchg
je
lods
pop
call
or
xor
andb
pop
loopne
in
sbb
std
shlb
addr16
cmp
sti
ljmp
hlt
test
gs
mov
out
test
fmulp
lret
shll
ljmp
mov
repnz
adc
bound
cwtl
nop
sbb
negl
jns
push
incl
fidivrs
popf
arpl
in
mov
test
enter
add
pop
add
mov
stos
imul
or
decb
inc
jo
sub
ret
mov
jo
inc
lcall
test
mov
sbb
push
shlb
inc
push
push
sub
inc
std
jbe
mov
jmp
cwtl
mov
data16
cs
dec
idivb
daa
outsb
xchg
jae
and
lret
xlat
das
xor
mov
xor
jg
ja
push
jle
sbb
xchg
mov
andl
aad
push
mov
das
mov
test
xchg
jo
ljmp
push
or
inc
xor
cmp
add
cld
pop
sbb
mov
cmp
stc
pop
pushl
sub
sbbb
xchg
lock
aam
sub
pusha
shl
cwtl
jb
scas
sbb
ljmp
idiv
and
sar
jo
rcll
cmpsb
cli
dec
cmp
arpl
jmp
ss
add
sub
inc
mov
add
adc
jo
pop
mov
adc
sbb
pushl
mov
and
mov
adc
sub
pop
cli
mov
scas
imul
incl
leave
mov
in
dec
inc
sbb
adc
sbb
fst
fidivrl
xor
inc
lods
cmpb
jecxz
icebp
or
or
adc
jg
les
and
jae
pusha
cli
clc
out
lret
les
jg
outsl
jle
hlt
inc
sub
xchg
loopne
pop
leave
mov
insl
xchg
push
or
sub
jae
mov
jbe
xchg
ljmp
loope
sbb
aam
jmp
push
jbe
incl
and
fsubs
int3
jle
xchg
mov
out
ds
bound
loopne
jmp
sub
rorb
cmp
push
adc
jbe
xchg
inc
inc
sbbb
leave
out
add
cmp
pushl
in
sbb
mov
test
mov
enter
ja
mov
call
cld
loope
sbb
dec
rcrb
dec
inc
out
movsl
mov
inc
aad
decl
mov
fldcw
sbb
cltd
jp
mov
mov
pop
iret
xor
push
inc
cmc
movsb
mov
pop
mov
icebp
cmp
xchg
lds
pushf
shlb
js
pop
ret
add
addb
movsb
pop
dec
negb
adc
icebp
out
xor
pushl
les
repnz
enter
mov
flds
outsl
stc
cmc
jnp
mov
dec
jmp
mov
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
adc
jmp
push
xchg
fwait
lds
movsl
test
mov
pop
push
ja
xchg
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
push
sbb
inc
dec
test
enter
fcoms
out
push
jbe
jnp
test
imulb
mov
xor
das
es
pop
scas
std
jmp
cltd
push
cmc
jg
lcall
sbb
inc
add
ss
add
int3
mov
adc
mov
lcall
sbb
sarb
outsl
in
cmp
ja
push
mov
pop
inc
pop
adc
movlps
cmp
and
cmpsl
and
jo
mov
xor
jno
mov
mov
mov
out
sarb
in
cli
and
jne
cld
shll
sbb
incl
add
pop
cli
adc
xor
fdivrp
or
inc
sub
imul
sbb
jg
jno
mov
dec
pop
lock
out
pushf
movsb
insb
dec
scas
xchg
rcrl
xor
adc
pushl
or
mov
fsubl
inc
rcrb
icebp
xor
add
add
out
xchg
inc
test
ss
jg
sbb
sbb
cmp
int3
push
das
push
icebp
jnp
pop
lods
ljmp
les
ljmp
jmp
inc
mov
mov
scas
aaa
popf
test
mov
lahf
pop
xchg
icebp
loop
outsl
cli
sti
orl
jb
lods
push
pop
lahf
or
push
ljmp
mov
push
outsl
adc
into
sub
and
mul
data16
mov
lret
std
cmp
aam
mov
mov
push
ja
or
clc
adc
push
sar
jns
xchg
pusha
shrl
loope
popf
or
fmuls
xchg
mov
mov
daa
push
dec
mov
jg
jecxz
jns
pminub
int
out
sbb
pop
xor
inc
decl
or
xchg
sbb
cli
sbb
dec
dec
shlb
call
add
mov
repz
fsubl
jne
pop
sub
push
ret
pushl
lret
clc
es
push
ljmp
push
xchg
call
decl
dec
imul
lods
leave
pop
push
push
jne
dec
divl
adc
sbb
jae
into
sbb
push
ljmp
stos
pushf
sbb
test
xlat
or
je
test
in
call
daa
xchg
stc
shlb
lret
pop
rcr
popa
cmpsl
pop
pop
mov
scas
nop
lock
cmpsl
sub
jo
icebp
das
repz
dec
insl
mov
stc
pushl
cltd
add
ja
sub
jmp
sub
pushf
test
lret
adc
int
mov
xchg
mov
and
hlt
jmp
cmp
into
pusha
rcll
loop
push
xchg
jae
or
enter
popf
in
fcomip
call
ret
inc
pop
push
pop
iret
ficoms
lret
or
adc
out
jg
cli
call
popf
mov
push
or
aad
xchg
out
mov
and
out
lahf
add
call
inc
call
pop
push
and
clc
mov
fidivl
cmpsl
xlat
and
hlt
inc
dec
out
inc
lods
loop
pop
xchg
pop
dec
jg
add
ds
add
incl
cmc
aaa
cmc
fs
or
enter
enter
mov
pushl
test
arpl
mov
lods
jnp
dec
push
dec
cli
in
push
inc
out
push
ret
cltd
insb
dec
mov
push
pushl
xchg
pop
mov
test
ret
movsl
adc
push
mov
icebp
test
ds
push
les
popf
push
inc
cmp
test
rolb
push
mov
xchg
cmp
push
add
cli
and
dec
imul
loope
call
jle
cmp
mov
xor
rcll
test
mov
std
inc
jnp
lcall
and
mov
jb
into
mov
xchg
cli
or
pushl
lret
jl
mov
shrb
xchg
movsb
cmpsb
cmp
or
pop
pop
movsb
mov
pushl
roll
push
xlat
or
push
lahf
jmp
mov
mov
dec
cld
call
push
cmp
sahf
cmpsb
and
leave
call
sub
dec
and
outsb
dec
faddp
adc
sbb
and
cltd
jb
punpckhbw
scas
ja
inc
adc
test
ja
gs
xchg
roll
xchg
push
lret
cmp
jmp
cmpsb
add
mov
push
sbb
scas
shll
adc
cmp
mov
rcl
jge
dec
jecxz
inc
aas
pop
mov
decl
push
jmp
ficomps
out
and
push
test
inc
ds
mov
mov
and
push
int3
test
roll
jmp
out
mov
iret
xchg
ret
mov
gs
aam
add
or
lcall
loope
mov
int3
mov
mov
cmpsl
push
xchg
xlat
mov
adc
dec
push
lcall
push
mov
mov
and
push
mov
sub
sub
cmpsl
pop
xchg
sbb
enter
pushl
test
movsl
stc
push
cltd
mov
xchg
push
dec
scas
push
mov
fwait
in
adc
inc
out
rcrl
roll
in
stos
sbb
inc
xchg
or
mov
xchg
test
ret
rolb
std
arpl
movq
subb
call
outsb
adc
dec
clc
jg
xlat
pop
lcall
je
shr
dec
push
sub
sub
call
imul
arpl
movsl
xor
stos
or
sub
divl
int3
mov
adc
test
push
in
pushl
xchg
adcb
cmp
mov
fwait
imul
test
int3
movsb
xchg
hlt
pusha
scas
ds
mov
push
push
cmc
fsubs
jne
mov
call
frstor
scas
sub
push
add
shll
cmpsl
dec
push
outsb
test
mov
mov
mov
fwait
jns
xor
mov
or
and
push
lock
xchg
sub
lcall
sub
enter
out
gs
movsl
test
lahf
sbbl
sub
int
ds
fcomip
push
or
and
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
add
call
cmp
fisttpll
mov
mov
insl
scas
xchg
rcl
leave
das
and
push
push
scas
mov
lods
sar
in
jg
fwait
imull
xchg
mov
dec
jne
inc
cwtl
jmp
outsb
mov
mov
addb
out
push
dec
lods
adc
mov
repnz
outsb
enter
iret
loop
decl
inc
test
icebp
popa
xchg
ret
fldt
add
mov
xchg
cmpsl
inc
in
test
out
jle
movsb
data16
jl
ret
loope
std
add
in
ljmp
push
out
and
dec
ret
jg
lods
mov
fisubs
arpl
mov
int
push
jns
in
mov
andl
adc
mov
or
cmp
std
sub
aas
icebp
fcmovnb
mov
decl
mov
adc
lods
clc
sti
leave
test
loopne
test
or
mov
stc
mov
push
push
push
lret
and
jbe
insl
add
clc
add
mov
push
cmp
outsl
xchg
pop
movsl
pop
dec
mov
dec
stc
push
xchg
sbb
imul
call
les
xchg
lock
ss
movsl
cs
mov
and
das
mov
decl
pop
push
dec
lcall
dec
leave
inc
test
aaa
jle
push
sarl
jmp
sub
fcomip
outsl
cltd
mov
inc
das
pushl
push
and
cld
ror
stc
lods
jbe
stos
dec
out
fiadds
xor
cmp
mov
and
jne
pop
pop
out
dec
pop
lcall
cld
call
cld
lcall
xchg
loope
and
fadds
xchg
scas
jno
jne
jecxz
cld
mov
jmp
add
leave
aam
jle
jnp
and
les
mov
repnz
push
jp
arpl
push
or
sub
or
push
add
lods
shll
pop
aas
lcall
decl
stos
mov
pop
pop
mov
sarb
dec
sub
xchg
mov
xchg
loop
cld
add
mov
sti
inc
sbb
into
cmp
push
jle
decl
sub
cmp
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
mov
lds
mov
stos
sbb
test
adc
cs
mov
and
jmp
fsubl
adc
cmp
out
mov
jp
loope
out
or
mov
call
ja
or
ja
push
subb
sti
cmp
in
pop
pushf
inc
sbb
movsl
das
es
out
stos
dec
push
mov
xor
jecxz
cltd
popa
inc
jne
addr16
lret
sbb
mov
ret
subl
xor
mov
sbb
xor
jae
sbb
ljmp
pop
subl
add
pusha
subl
xorb
popa
fs
cmp
movsb
mov
ljmp
out
pop
in
cmp
aaa
mov
cld
mov
das
fwait
jbe
sbb
sub
ljmp
add
sarb
or
in
cmp
into
jle
inc
test
cmpl
dec
mov
lahf
lock
fsubs
ja
mov
push
cmpsb
mov
mov
rcll
mov
lea
sbb
stos
decl
imul
lods
addb
scas
mov
arpl
adcb
jmp
data16
enter
pop
mov
sbb
mov
xchg
movsb
lea
jmp
incl
test
xchg
mov
push
xor
scas
push
inc
sbb
mov
clc
aas
dec
daa
les
jmp
clc
pop
pop
shl
lods
xchg
jne
sbb
push
mov
mul
adc
ljmp
adc
ljmp
sub
sbb
jae
add
inc
dec
pop
lds
ss
ds
aas
lods
sub
fldcw
lcall
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
and
aam
aas
mov
push
cmp
push
das
or
push
jp
add
mov
mov
dec
js
in
pop
or
cmp
and
inc
shrb
leave
ss
xor
mov
lcall
out
aas
push
xchg
mov
les
and
nop
dec
dec
scas
mov
aam
icebp
pop
sbb
dec
sbb
das
aam
pop
loopne
cs
mov
mov
mov
pop
test
inc
ja
shrl
cmc
cmp
into
lds
inc
mov
nop
scas
push
js
ss
sbb
jg
ljmp
jo
sbbb
fstpt
jmp
jp
mov
inc
fildll
call
out
cmp
dec
cli
nop
test
sbb
fs
push
test
movsl
mov
fs
aad
aam
test
push
cmp
mov
jg
ljmp
lods
and
xor
js
jbe
dec
in
adc
jmp
push
je
push
jne
mov
xchg
mov
xchg
or
jp
xchg
inc
rcl
movl
pusha
jl
scas
out
sahf
sbb
test
xchg
xor
ficoml
pop
jge
xor
jmp
adc
or
sub
mov
and
mov
scas
cld
pop
mov
push
jae
inc
daa
inc
add
leave
ret
es
in
sub
mov
sar
stos
xor
jae
fidivl
loop
leave
testl
ljmp
or
xor
clc
mov
mov
sbb
xchg
cmp
bound
pop
in
cmp
incl
cwtl
pop
ss
dec
lods
jmp
xchg
adc
in
xor
ret
loope
std
pop
gs
mov
inc
dec
je
je
mov
mov
call
fidivl
je
call
inc
jne
lret
cmp
repnz
add
sub
dec
pushf
mov
vmovapd
sbb
aad
and
add
into
and
sbb
mov
pop
repnz
loop
rolb
pushf
lahf
and
aad
sub
mov
gs
lcall
rolb
fdivrp
xor
notb
add
inc
rorb
push
xchg
xchg
inc
icebp
xchg
mov
int3
aam
sub
es
lea
je
testb
enter
xchg
dec
push
roll
lods
jb
jecxz
decl
fwait
je
imul
aaa
and
inc
xchg
pusha
imul
xchg
xlat
out
fcom
popl
je
jg
xchg
ss
imul
negb
aam
ds
std
call
or
leave
imul
gs
mov
inc
outsb
mov
decl
adcb
neg
xor
push
jbe
fld
or
lds
outsl
cmpsl
lods
jle
and
sub
subb
lcall
call
lcall
ja
xchg
mov
aam
mov
push
cld
incl
jnp
dec
loope
and
ror
mov
mov
sub
jg
and
mov
fcmovnbe
add
jg
sarb
xchg
outsb
out
movsb
mov
pushf
xor
pushl
lret
in
push
sub
sarb
pop
divb
mov
sti
std
mov
push
adc
cltd
and
lret
pop
sbb
hlt
xor
hlt
sbb
incb
add
lret
es
out
lcall
xchg
mov
movsb
pop
xor
hlt
mov
test
and
std
pop
pop
jmp
ljmp
lahf
iret
dec
mov
lahf
movl
dec
or
shl
xor
mov
cmp
or
and
adc
mov
xor
je
leave
and
xchg
xchg
mov
jge
and
pop
sub
adc
gs
dec
fildl
std
add
loop
jmp
rclb
jns
mov
imul
mov
ja
adc
pushl
dec
adc
addr16
int
gs
lret
sbb
jnp
imul
ljmp
pop
fcom
push
xchg
adc
popf
into
mov
insb
out
mov
xchg
divb
add
cmp
mov
sbb
cwtl
inc
cwtl
cld
aaa
and
pop
adc
scas
jmp
rcl
mov
out
xchg
mov
hlt
mov
mov
push
call
test
xchg
mov
adc
mov
repnz
sbb
xchg
cmpsl
je
fneni(8087
sub
outsb
or
dec
repz
cmc
pop
jle
mov
mov
and
ljmp
cmp
int
xchg
add
sub
push
popa
scas
imull
hlt
mov
push
mov
jns
cld
popf
call
push
xchg
mov
cmpsl
add
ljmp
sub
cmp
xor
pop
imul
pushl
xchg
fnstenv
sbb
stos
repz
jns
pop
push
mov
cmp
fdivl
incl
bound
xchg
rcr
pop
out
rolb
aas
test
or
jg
pushl
int3
loop
pop
adc
inc
inc
into
push
mov
mov
rcll
cltd
clc
cmp
jne
aam
inc
mov
outsb
mov
test
gs
pushl
or
sub
mov
push
nop
test
dec
dec
jbe
lret
jo
push
sub
jg
inc
cld
icebp
push
test
mov
ljmp
call
out
out
dec
push
jge
fcoms
shlb
daa
in
ljmp
movsb
ljmp
sub
jmp
mov
fwait
and
push
aam
out
xor
subl
repz
imul
add
int3
ds
xchg
sbb
ljmp
mov
arpl
lea
mov
pop
jnp
adc
sahf
sar
pushl
jb
outsl
dec
into
lret
push
inc
repz
lods
push
adc
cli
sub
ret
repnz
dec
lea
xor
push
bound
lahf
sbbl
mov
sbb
jp
push
negl
xchg
inc
dec
mov
mov
mov
sub
outsl
or
in
call
mov
xchg
dec
xor
jl
push
push
mov
in
pop
xchg
or
outsb
push
jge
ficompl
pusha
insl
mov
ret
push
out
cltd
dec
push
sbb
and
cmc
inc
jbe
mov
xchg
ret
adc
pushl
roll
inc
xor
in
mov
mov
int3
sub
mov
enter
ljmp
mov
sti
jg
cmp
mov
test
aaa
repnz
js
push
iret
aaa
fstl
adc
lcall
and
xchg
cmp
out
lods
dec
cmp
fsts
jbe
nop
lea
popf
mov
jg
js
adcl
int
fsubrl
xor
jle
and
pop
aas
push
rolb
sbb
call
fcoml
sbb
or
inc
dec
cmp
leave
pop
dec
mov
adc
clc
mov
and
or
push
or
or
adc
or
adc
push
test
movsl
test
mov
call
mov
shlb
fdivp
aam
test
adc
stos
aad
sarb
mov
lods
cld
or
outsl
lahf
hlt
fldcw
call
adc
jmp
flds
fists
sbb
push
int
push
mov
lahf
sbb
sbb
xchg
call
lret
into
les
mov
test
xchg
mov
fisubl
pop
divl
fsubs
lods
enter
into
dec
scas
sub
adc
insl
sbb
xchg
int
nop
sub
lods
jbe
pushl
mov
es
bound
aad
dec
or
pop
test
jle
jno
dec
ljmp
incl
pop
pop
xchg
xor
mov
xor
jne
aam
pop
push
stos
push
sar
dec
mov
aad
push
jo
jecxz
xchg
or
pop
pop
jno
add
mov
ljmp
mov
add
aad
xchg
ljmp
ja
test
ficomps
insl
add
cli
std
pop
loopne
cld
ss
jge
mov
fcmovnu
arpl
lret
hlt
pop
pop
xor
xchg
test
xor
adc
lcall
sub
pusha
aaa
xor
lcall
mov
push
popf
dec
popa
xchg
fs
jg
mov
aaa
mov
mov
rorb
mov
call
stc
xchg
jb
or
push
loopne
fisubrl
iret
ljmp
popf
xchg
sbb
push
fwait
mov
ret
push
loope
enter
leave
scas
pop
jmp
pop
xor
add
inc
inc
jbe
insb
stos
mov
movsb
insb
jge
cltd
mov
bound
cltd
xchg
sub
push
xchg
ficompl
sbb
mov
adc
ficompl
pop
lret
mov
push
sahf
mov
test
dec
loop
jp
idivl
dec
popf
pop
ret
in
out
je
call
dec
out
mov
stos
aam
pop
ljmp
clc
shll
mov
mov
jmp
or
out
repz
fcoms
dec
call
inc
insl
sti
adcb
scas
decl
ljmp
imulb
pop
out
orl
movsb
sbb
jb
inc
mov
out
daa
mov
push
cmp
aas
push
xchg
pop
add
mov
xchg
call
leave
in
mov
das
mov
addb
and
pop
dec
ja
xorb
idivb
incl
sub
pop
es
repnz
rclb
aad
dec
xchg
pop
mov
and
jne
hlt
fucomi
lods
outsb
call
ja
dec
pusha
cmp
dec
insb
stc
mov
aaa
das
jl
jae
call
pop
add
cmp
ljmp
popf
pmulhw
or
pushl
sub
xor
dec
push
inc
add
mov
decb
fdivrs
in
bound
adc
or
push
pop
out
imul
js
xchg
arpl
orl
mov
pusha
pop
push
pop
es
sub
jnp
test
jg
pushf
mov
in
jnp
mov
mov
sti
inc
push
inc
clc
mov
cmp
incl
andl
fwait
xchg
jp
push
ja
pop
push
popf
fldcw
dec
frstor
shll
decl
lret
pop
and
int
repnz
mov
hlt
shlb
cmp
orb
movsl
les
fadds
js
lret
and
xorl
or
xor
cmp
ficoml
push
push
aad
sbb
test
lcall
xorb
sahf
sbb
call
fwait
jle
xchg
incb
sub
andb
js
bound
clc
loopne
lock
sub
ljmp
pop
ja
test
test
inc
and
xor
sub
jno
lods
jp
mov
out
incl
das
cli
or
sub
xchg
sub
in
ljmp
insl
loop
cmp
pushl
push
call
popf
adc
cmpb
dec
mov
std
adc
xlat
hlt
xchg
incl
mov
sub
sbb
inc
hlt
loop
sub
out
ljmp
push
push
pushf
pmaxsw
mov
pop
sahf
idivb
sbb
jmp
xor
and
mov
jge
sub
push
and
cmp
fnclex
dec
pop
sbb
push
or
jg
ja
inc
xor
pop
jb
push
hlt
popf
mov
sbb
pop
xchg
jg
lret
sbb
sub
dec
adc
imul
xchg
repnz
ljmp
outsl
cmc
scas
inc
loope
mov
ret
cmp
inc
out
enter
mov
pushl
leave
add
lcall
sbbl
in
xchg
adc
adc
js
std
test
xchg
fdivl
xchg
push
sub
jmp
aad
jle
fiaddl
addr16
movl
fcmovbe
shl
dec
fs
pushl
jo
leave
add
dec
ret
imulb
xor
mov
push
mov
imul
adcl
cld
push
mov
inc
fcomi
lods
xchg
mov
fiadds
ret
adc
adc
push
jmp
int
push
decl
lock
mov
orl
cmp
call
push
fxtract
jo
cwtl
mov
insl
mov
pushf
mov
outsb
or
cmpsl
push
jbe
cmpsb
sub
xlat
cmp
cmp
cs
xor
insl
test
out
daa
adc
out
clc
neg
in
xor
lea
sbb
and
subl
clc
iret
cli
les
test
mov
aaa
inc
shr
inc
nop
xlat
jo
cltd
jg
imul
mov
shrb
and
rcll
or
push
int3
aam
enter
and
lods
iret
ljmp
pop
sbb
sbb
sub
pop
cmpb
mov
das
push
loope
mov
call
sub
vpsubusw
inc
ljmp
aam
filds
cwtl
dec
ret
iret
sbb
sti
aad
je
fs
cmc
xor
sti
mov
pop
sub
data16
repnz
fs
dec
ljmp
jbe
inc
lods
pushl
notb
sbb
inc
cmp
fidivrs
pop
ds
jmp
leave
stc
lods
aam
lcall
decl
push
nop
dec
scas
mov
arpl
and
cmp
icebp
jae
jl
push
adc
ljmp
push
cltd
sbb
and
push
jb
jmp
fmul
and
decl
lock
imull
xchg
je
ror
cmpsl
dec
sbb
aad
addr16
jl
pushl
or
pop
and
inc
mov
shrl
jmp
push
push
cmp
fstpt
jb
int3
jns
push
cli
leave
and
mov
in
ret
cmpsb
adc
xchg
ljmp
mov
mov
pushl
shrl
das
add
cmc
popf
xlat
movzwl
mov
and
or
xchg
ljmp
aas
mov
ss
ljmp
cmp
or
mov
ret
lcall
stos
pop
sub
pop
fsubrl
cwtl
or
push
data16
hlt
pop
mov
mov
stos
and
cwtl
lock
mov
adc
inc
cmp
not
push
movsl
test
jno
js
mov
inc
mov
aas
shl
stos
inc
pop
add
pushf
into
pop
dec
sub
dec
mov
in
insb
incl
jp
pop
lods
out
imul
inc
pop
add
jmp
jmp
and
cmpsb
push
mov
sbb
xchg
or
test
imul
inc
ds
fbstp
pusha
dec
mov
mov
hlt
js
jmp
xchg
add
call
mov
adc
mov
fnsetpm(287
sub
pop
mov
out
cmpsb
hlt
mov
push
or
sub
std
sub
or
jp
scas
les
shll
xchg
xor
mov
cmp
cmpb
inc
xchg
push
call
or
add
call
xchg
test
lret
or
mov
sbb
arpl
xchg
pop
gs
les
jg
mov
pop
sbb
repnz
fistl
adc
enter
pushl
std
lods
push
mov
aam
jnp
rorb
out
aam
jp
test
jo
popf
xor
pushl
mov
cld
pop
mov
popa
jecxz
addr16
out
fldt
fidivrs
je
repnz
jmp
out
xchg
or
xchg
test
lcall
cs
out
jne
loop
loope
aaa
subl
cld
jo
in
fdivrl
jno
incl
imull
pop
xor
jo
dec
xchg
sti
cmp
icebp
xchg
jg
jmp
mov
or
test
and
xchg
shl
sbb
pusha
mov
dec
dec
pusha
adc
and
cmpsb
rcr
insl
inc
fnstsw
adc
cmp
setp
add
int
push
cmpsb
pop
xchg
pop
xor
sub
mov
adcb
push
sub
jmp
scas
sbb
test
add
xchg
mov
into
js
xlat
ljmp
test
loop
call
adc
shrl
dec
or
sub
fisubl
cmp
hlt
dec
fists
or
sbbb
sub
cld
jle
jnp
cmp
into
aad
xor
mov
dec
hlt
fcoms
inc
xor
mov
pop
lods
arpl
sbb
adc
xchg
xlat
lea
mov
dec
mov
inc
movsl
mov
sub
out
int
xor
xor
cmp
dec
pushl
sub
jp
mov
push
sbb
dec
mov
and
mov
mov
mov
in
incl
jg
hlt
call
addb
in
dec
fcompl
jg
or
fimuls
add
sarl
dec
setno
mov
pushl
jg
lahf
mov
out
mov
push
add
pushf
lds
inc
pop
lods
jg
add
xor
mov
add
mov
stos
cmc
sub
dec
push
push
add
push
and
test
mov
cmp
call
cmp
cmc
or
xor
jmp
or
jb
sar
dec
shlb
and
scas
cmpb
adc
ret
movsl
and
adc
and
add
scas
lods
xor
stos
jmp
pusha
adc
xchg
ds
fld
mov
arpl
mov
in
and
xor
dec
adc
or
jl
jg
mov
push
sbb
je
lret
add
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
sahf
sahf
ljmp
sub
mov
sarb
arpl
add
call
mov
out
sbb
dec
movsb
je
xor
es
ljmp
pushf
lock
call
xlat
leave
sti
testb
pop
jl
imul
push
jae
loop
mov
lock
add
push
adcb
xor
int
pop
xchg
nop
mov
in
or
mulb
mov
shrl
decl
pop
sbb
mov
cmpsl
dec
xchg
push
jns
mov
sub
push
nop
outsl
xchg
pop
sub
add
push
or
push
cltd
sub
call
jle
shlb
adcb
pop
es
loope
ret
push
dec
xor
fcmovu
and
sbb
into
pop
sbb
sub
lods
add
mov
mov
insl
and
xchg
test
incl
mov
mov
mov
jnp
subl
outsb
filds
cs
incl
inc
xlat
loope
jmp
sbbb
das
aad
cmp
lret
mov
loopne
roll
push
incl
bound
sub
jle
inc
mov
push
dec
and
mov
dec
xor
iret
sbb
sub
adc
imul
ds
shlb
in
shl
ljmp
lea
ja
cmp
incl
push
pop
mov
sub
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
incl
pushf
jne
sub
sub
mov
jge
ljmp
fdivrs
mov
sbbl
sub
decb
jmp
mov
adc
andb
daa
fcompl
mov
test
ret
cmpsl
test
rcl
es
cld
out
add
bnd
sub
cmp
or
mov
pushl
and
loopne
ret
fistpll
add
push
push
lret
xor
push
dec
popa
jns
push
dec
outsl
or
cmp
cld
pop
jnp
add
xchg
orb
mov
das
dec
fcomip
add
data16
sbb
sub
pop
fcoms
pop
fidivs
decl
adc
xchg
adc
mov
loope
or
lods
jnp
xor
xor
jns
test
cld
sbb
pop
xorb
ljmp
lea
jns
enter
fwait
fdivr
dec
in
xor
dec
frstor
fwait
cwtl
or
push
lcall
fwait
jmp
sub
push
or
add
mov
call
mov
jno
mov
mov
std
in
subb
sub
sti
adc
insb
loopne
popa
enter
adc
lock
xchg
mov
scas
fildl
mov
cwtl
imul
or
xor
xchg
xchg
add
and
aas
aas
or
sbb
out
stos
or
pushl
insb
pop
out
inc
stc
inc
popf
dec
test
mov
pop
call
loopne
lods
aam
fisubrs
xchg
lcall
ljmp
call
cltd
fwait
mov
push
pusha
aam
not
sbb
and
stos
mov
mov
das
sar
or
add
dec
hlt
cmp
loope
cltd
addr16
cmp
pop
inc
icebp
notl
inc
insl
gs
jnp
jo
out
ror
lods
fisubl
jl
and
push
std
lret
jnp
std
mov
inc
push
xor
push
imul
dec
or
jg
jl
add
stc
jge
adc
mov
jo
cs
lods
lcall
js
jmp
sbb
stos
lcall
sti
jg
cld
sbb
movsl
add
adc
inc
test
sub
iret
test
inc
add
pop
sar
decl
int3
and
xchg
mov
mov
cmp
daa
and
fnstcw
mov
jg
lret
or
mov
rcl
lret
push
add
scas
mov
or
idiv
pushl
cwtl
inc
scas
aas
xlat
mov
push
push
jns
cmc
arpl
push
inc
mov
loope
pushl
mov
cmp
jbe
xor
test
div
repnz
cli
xor
cli
in
fists
call
mov
pop
push
cs
adc
mov
decl
lahf
and
je
cmp
xchg
mov
mov
std
pusha
out
inc
push
repnz
sar
cwtl
arpl
mov
test
jb
mov
out
sarl
sbb
ljmp
push
pop
je
or
cwtl
addr16
clc
push
mov
dec
xor
and
adc
push
lock
adc
sbb
aas
xchg
and
fwait
dec
call
mov
cltd
and
lret
popa
xor
push
sbb
mov
jb
xor
popa
adc
sbb
insl
lcall
insl
cmc
and
mov
sub
ljmp
sbb
pop
cs
jne
stc
mov
cli
jg
stos
mov
sbbb
adc
cmp
fisubrs
xor
mov
jg
outsl
lret
and
mov
cmp
test
xchg
cs
fsubs
popf
in
test
mov
dec
sbb
ret
mul
dec
movsb
ljmp
jmp
sbb
ljmp
xchg
fcoml
call
sub
adc
jp
decl
mov
jno
call
sbb
pop
and
dec
pop
sahf
pop
push
je
mov
call
push
xor
push
jg
mov
loop
je
fildl
decl
cmp
push
nop
idivb
test
lods
mov
movsl
movsl
call
jmp
cmp
test
inc
insl
mov
mov
xor
inc
and
into
and
ret
pop
test
cli
xor
notb
addr16
jmp
js
nop
scas
lds
cld
mov
pop
enter
shll
adcb
mov
sahf
pusha
jo
ja
das
adc
call
repz
cltd
arpl
jae
mov
call
inc
push
push
mov
repz
test
xchg
comiss
loop
hlt
adc
or
xchg
in
mov
movsl
les
mov
shlb
mov
decl
ret
xor
sahf
lret
dec
mov
loop
hlt
xorb
fisubrs
and
popl
lock
inc
std
dec
sbb
fistpl
cmpsb
or
adc
rol
in
decl
rolb
test
xchg
iret
xchg
cmc
mov
and
xor
mov
outsb
cltd
fildll
mov
inc
aas
in
cwtl
sub
or
and
incl
pop
cld
arpl
imul
out
add
test
pop
roll
or
jmp
cmp
fnstsw
and
rolb
mov
jae
ljmp
pop
jecxz
mov
pushf
cltd
or
cmp
fbld
rcrb
std
push
inc
in
jb
out
loopne
xor
push
add
mov
push
stc
in
ljmp
sbb
jne
shr
cmpl
xchg
or
int
mov
negb
incl
fidivs
push
cmp
or
add
or
inc
pop
xchg
cmp
sub
in
enter
call
sbb
popf
and
lods
xlat
aad
dec
pop
mov
imul
jo
mov
rcll
into
subl
and
ljmp
call
mov
xchg
sub
div
dec
or
mov
jb
xorl
sub
aaa
sub
inc
mov
pushl
loopne
lcall
aam
pushf
loope
dec
dec
enter
pop
in
inc
push
xchg
outsb
decl
sbb
rolb
addr16
ja
jne
jo
test
test
add
int3
dec
out
and
int
decl
idiv
pop
test
xchg
gs
jmp
or
fwait
popf
push
sub
fnsave
loop
sub
xor
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
pushl
sub
xchg
ss
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
mov
xchg
into
leave
in
xor
inc
mov
and
lret
rolb
mov
pop
popa
ss
adc
push
xchg
test
cmpsb
jmp
nop
xlat
enter
or
incl
xchg
xchg
mov
dec
fstpt
loopne
xchg
pop
mov
cmp
sub
adc
mov
int3
cmp
loop
mov
cld
mov
ds
sub
jmp
dec
pop
test
jae
in
mov
popa
add
dec
cbtw
imul
ret
mov
pushl
orl
lcall
sbb
xchg
bound
int
lock
cmpsb
dec
mov
cmp
call
movsb
mov
cmp
popf
jge
adc
insl
xchg
jo
sarl
jge
mov
adc
pushl
fcmovnbe
inc
ret
das
inc
cmp
mov
xchg
aaa
cld
call
jo
lds
call
scas
sbb
jle
jp
outsl
fnsave
jl
test
divb
push
cmp
inc
mov
dec
sub
adc
or
xor
push
mov
xorb
inc
xchg
out
cmp
adc
ficomps
aad
dec
pop
sbb
adc
pop
decl
lock
push
insb
push
dec
into
jbe
icebp
sub
inc
repz
pop
mov
out
mov
mov
gs
push
lret
mov
ja
sub
fdivrs
jbe
mov
lcall
imul
or
ds
sbb
cmp
jmp
xor
cwtl
mov
int
loope
es
sar
jo
pop
push
sahf
push
sbb
cmpsb
fsubs
mov
gs
add
adc
push
movsl
repnz
lahf
pop
cmp
mov
mov
fdivr
mov
cmp
fwait
push
faddl
pusha
xchg
mov
fistpll
jbe
movsb
jmp
ljmp
pop
movsl
out
cltd
pop
xchg
inc
push
mov
xor
mov
fdiv
mov
sbb
pop
cmp
aaa
cld
decl
inc
ja
aam
jno
out
adc
in
ja
jecxz
cs
lock
fcmovu
imul
cmp
inc
lcall
add
push
adc
in
mov
jg
adc
add
ljmp
ret
nop
int3
out
push
mov
fadds
mov
cld
incl
aas
adc
aas
ljmp
xor
fstps
mov
pop
push
inc
mov
cld
call
lods
sub
mov
push
push
scas
aad
adc
sti
push
popa
std
imul
inc
cld
repz
pop
ds
sbb
mov
lcall
cmp
fnstsw
popf
pop
xorl
or
shlb
ja
cmp
nop
cmp
mov
scas
incl
fwait
imul
mov
jne
and
pop
pushl
pop
push
jge
pushf
cli
rcl
cmp
mov
aam
mov
lods
lods
add
out
add
mov
je
fldt
test
add
call
test
test
mov
bswap
xor
cwtl
test
pop
sbb
dec
add
jns
loope
sub
mov
mov
sub
jle
and
or
ficompl
cmp
mov
add
mov
mov
cmpsl
or
inc
hlt
lods
imul
or
mov
sub
mov
fcmovnb
fwait
sub
mov
mov
and
mov
push
cmp
pop
mov
xor
xchg
inc
xorl
mov
inc
rorl
cmp
shrl
jo
iret
data16
sbb
lcall
enter
push
adc
cmc
stc
mov
mov
pop
mov
mov
bound
pop
jbe
add
pusha
jae
rolb
sbb
xchg
mov
loope
ret
mov
cmp
mov
lcall
sbb
je
push
mov
add
gs
push
xor
mov
popf
xchg
xor
or
es
dec
outsl
push
fbld
mov
pop
adc
fwait
incl
iret
popa
or
aaa
loopne
cmp
movb
sub
push
cmc
mov
lods
xchg
arpl
cmp
pop
mov
pop
popf
xchg
subb
sub
sub
enter
int
xchg
sub
xor
pop
cmp
ljmp
ja
mov
hlt
pop
dec
inc
call
jge
call
adc
incl
clc
xor
out
push
pop
sbb
dec
cs
decl
cld
lods
hlt
sub
push
loopne
cld
and
pop
or
pushl
inc
push
out
xchg
gs
adc
rorb
cltd
jge
push
mov
pushl
enter
ljmp
xchg
into
push
jmp
aas
aad
int
or
fnsave
jp
icebp
lcall
cwtl
adc
cmp
loopne
jg
inc
sbb
xor
cmp
jle
insb
or
adc
pop
outsl
and
dec
call
push
stc
fdivr
ret
add
sbb
faddp
cmp
push
cmp
xchg
lods
push
pop
sbb
das
sar
and
push
mov
xchg
ffreep
mov
inc
mov
lcall
fs
fxtract
loop
pop
aad
cmc
pop
sub
mov
sbbl
cmp
incl
test
andb
scas
xchg
mov
call
popl
clc
stos
decl
cmpsl
fisubl
std
sbb
cmc
pop
sub
dec
mov
add
cld
stos
out
pminub
mov
fildll
movsb
pop
mov
mov
int
or
sbb
sarb
jns
out
and
lahf
sub
or
xor
mov
jmp
in
mov
call
xchg
std
jne
jp
adc
or
into
xchg
aas
mov
inc
lcall
inc
jp
sbb
jecxz
jmp
enter
jecxz
or
cltd
pushl
popl
push
jo
lahf
mov
push
dec
fildll
arpl
cmp
and
adc
ss
cmp
add
push
adc
in
into
cwtl
pop
mov
pop
icebp
sarb
leave
adcl
lahf
out
lcall
fs
xor
pusha
cmp
out
pop
inc
int3
cmp
ret
pushl
cld
lcall
xor
vmread
lea
cs
ljmp
stc
popa
and
call
add
dec
in
push
loopne
lret
aam
sub
sbb
insl
sbb
or
fildll
pop
xchg
jmp
lahf
dec
sbb
jmp
scas
jae
cli
cmp
test
clc
scas
clc
pop
ds
push
xchg
loopne
cltd
inc
pop
fidivs
andb
cltd
jne
jecxz
pop
cmp
pop
adc
push
add
pop
loop
arpl
mov
and
call
and
aaa
in
sbb
insl
cmpsb
and
enter
xchg
pop
pop
inc
inc
xor
mov
jmp
xchg
xchg
insb
cli
sbb
imul
mov
orl
sbb
ljmp
xor
cs
sbb
cmp
cmc
loope
pop
fdivp
leave
pop
sahf
stc
or
movsl
or
xchg
mov
jmp
addb
dec
gs
incl
scas
cmp
cmpsl
ljmp
sar
pusha
outsl
and
xor
push
lock
jg
pop
lcall
aaa
mov
sbb
fidivl
cltd
push
out
clc
enter
test
scas
lcall
push
cmp
jns
movsl
out
cmp
fistl
jmp
jle
add
out
mov
scas
aad
add
mov
int
cmpsb
or
mov
sar
decl
adc
ror
sbb
test
inc
call
jns
mov
or
sub
imul
repnz
les
mov
lcall
inc
cmp
jecxz
outsb
jl
jp
xchg
mov
in
inc
jne
scas
push
mov
mov
stos
push
jmp
xor
out
addb
pop
mov
lret
push
dec
push
push
jp
mov
push
jno
push
mov
add
jl
clc
jp
loopne
out
add
lret
es
outsb
mov
call
lods
adc
jns
push
xlat
loop
mov
xchg
sub
bound
cmpsb
icebp
ljmp
cli
aas
std
pop
out
push
adcb
cwtl
xchg
pop
adc
sahf
stos
fs
xchg
lahf
decl
mov
test
cmp
adc
fs
call
add
incl
jo
cwtl
out
loop
addr16
sub
popf
std
popa
jae
and
sti
insb
or
pushl
jbe
xchg
lods
inc
sbb
sbb
and
dec
sbb
mov
jg
xor
adc
pop
jno
inc
mov
adc
sub
int3
ret
call
adc
push
imul
es
jp
jnp
or
out
jg
jae
je
cwtl
mov
jmp
outsl
or
data16
inc
sbb
cmp
aas
fcomip
jmp
pop
xchg
aad
ret
adc
push
js
stc
mov
push
xor
pusha
rclb
sub
lahf
scas
inc
mov
pop
das
xor
ljmp
pop
push
mov
adc
or
test
fcomip
push
test
or
xchg
mov
outsl
dec
nop
lcall
and
fwait
sahf
sub
pop
fdivl
push
mov
adc
testb
daa
dec
jmp
adc
movsl
fsubrl
ljmp
mov
jle
cmp
push
mov
std
cmp
ficoml
cli
inc
sti
negb
loope
sti
mov
leave
ret
mov
push
or
lcall
sahf
lods
jae
mov
inc
push
jo
or
pop
lea
xor
ljmp
mov
loopne,pn
into
xor
in
ffree
inc
std
push
and
in
shll
and
stos
mov
fstl
pop
or
inc
fidivl
jle
lret
dec
or
cwtl
mov
cli
rcll
aad
out
jmp
jecxz
loop
add
push
pop
adc
push
push
adc
cmp
mov
inc
adc
inc
jns
clc
cwtl
and
mov
decl
into
pop
out
xchg
arpl
fidivrs
shlb
jae
push
mov
decl
pop
lods
in
and
push
iret
stos
cs
sbb
mov
loopne
dec
clc
test
call
dec
aaa
cmpsl
popa
xchg
movsb
sub
xor
and
cmp
cmp
bound
push
xor
or
mov
mov
mov
ljmp
mov
xlat
stos
and
push
mov
inc
subl
sbb
pop
call
call
fimuls
xor
loopne
int3
sarb
shlb
ss
inc
fwait
cmp
call
mov
rcrb
push
pop
ljmp
push
cmp
fwait
out
dec
and
add
incl
push
mov
nop
ds
add
cmp
xor
and
jbe
jg
push
xchg
or
gs
popf
fisttpll
or
jbe
call
lds
cmp
ficompl
mov
jno
xor
stos
inc
jne
dec
sbb
sbb
sti
mov
mov
fimull
cmc
inc
inc
cltd
hlt
pop
mov
xor
decl
cmpsl
push
fiadds
dec
mov
lods
movsb
movsb
sbb
mov
lods
aaa
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
call
cmp
pop
sub
aaa
xacquire
gs
dec
testb
xchg
mov
mov
outsb
call
or
ss
scas
loope
adc
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
adc
ljmp
out
fs
mov
leave
mov
mov
test
mov
push
arpl
into
lods
stos
pop
and
repz
dec
mov
ud0
jmp
xlat
gs
cmp
in
cmp
sti
mov
pop
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
mov
pop
jl
iret
xchg
jp
cmp
in
pop
scas
call
stc
movsb
jo
dec
out
out
clc
jmp
fwait
leave
push
fwait
loopne
imul
js
pusha
and
add
mov
ret
mov
pushl
lods
arpl
sbbl
adc
xor
lcall
lcall
lock
fstpl
js
mov
sti
push
aad
sub
clc
ljmp
add
popf
mov
jo
in
addr16
sub
push
decl
add
push
enter
adc
jb
push
enter
jg
xchg
aas
xor
movsl
cltd
inc
lcall
aam
pop
push
lahf
or
cli
jmp
mov
sbb
jg
mov
mov
jecxz
loopne
std
pushl
dec
sub
ret
push
cs
gs
jo
mov
jg
pop
push
out
xor
cltd
mov
orb
decl
add
jmp
sub
mov
mov
xor
inc
mov
pop
cmp
lea
dec
fcompl
shll
xchg
xchg
aam
daa
lcall
sti
ljmp
fnsave
or
outsl
jmp
out
addr16
or
xlat
add
loope
pushl
pop
cld
xchg
popw
mov
xchg
xor
jmp
call
push
inc
cmc
xchg
xchg
xor
adc
mov
clc
jg
mov
out
and
cld
sub
fcomps
cmp
test
mov
cmp
mov
and
cmp
das
clc
push
mov
or
insl
loope
cmp
jno
push
ja
imul
cmp
pop
pusha
xor
out
push
sub
lea
inc
aam
mov
dec
pop
cmc
decl
pusha
insl
mov
mov
adc
xchg
dec
scas
jne
cmpsb
lcall
insl
call
cld
sbb
popf
negb
fistps
mov
sti
cltd
mov
xor
sahf
dec
aas
rorl
lahf
out
or
push
dec
or
adcb
ljmp
xchg
repz
sbb
in
dec
je
jl
sub
mov
jmp
insl
and
push
clc
mov
mov
loop
jp
sbbl
sub
bound
xchg
mov
outsl
xchg
ljmp
movsl
push
aam
dec
enter
ds
cmc
fcmove
mov
daa
fists
aaa
call
sub
push
scas
pop
es
call
mov
lret
in
adc
lret
clc
popa
and
xor
insl
pop
mov
and
iret
dec
sbb
rcrb
xor
xchg
sub
insl
mov
jg
lock
ret
mov
int3
mov
idivl
incl
outsl
adc
pop
out
or
je
stos
push
sbb
loopne
lahf
enter
mov
out
mov
sub
mov
rcr
mov
or
incl
xorb
mov
push
shl
add
lcall
jno
js
test
xor
je
sbb
xchg
cwtl
mov
call
adc
xchg
test
scas
insb
rcl
mov
pop
add
shrl
icebp
adc
inc
pop
es
call
sub
ret
sbb
push
pop
pushf
xchg
lcall
sub
push
scas
jns
dec
cmp
test
addr16
in
jmp
sub
aam
dec
adc
ficompl
add
decl
ret
pop
adc
lcall
mov
mov
clc
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
mov
or
mov
insb
push
sbb
sub
cmp
push
pop
hlt
jmp
mov
mov
or
jbe
xchg
call
in
outsb
test
rcrb
sbb
jg
adc
jno
pushf
fiaddl
push
iret
add
cmp
ja
lods
dec
sub
sti
and
lahf
add
push
mov
and
mov
mov
push
out
out
xchg
fdiv
cmpsl
imul
xor
sarb
dec
incl
cwtl
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
and
or
inc
sbb
sbb
fs
sbb
ljmp
jmp
pop
xchg
dec
push
shl
popa
mov
fdivr
cmpl
incl
pop
lods
mov
leave
pushf
data16
call
inc
es
pop
xor
inc
or
or
test
leave
dec
les
mov
notb
pushl
jne
cltd
je
push
cmc
loop
fildll
cmpsb
fsts
in
lret
and
or
call
mov
mul
stc
addb
mov
and
lcall
jns
inc
mov
or
lds
inc
pop
mov
jg
push
sbb
cmp
xchg
cmp
mov
out
push
inc
enter
call
xchg
cli
add
je
lods
add
std
fidivrs
push
dec
icebp
push
sbb
pavgw
aad
insl
cmp
mov
arpl
clc
lds
mov
les
fisubrs
incl
cs
data16
cmp
push
addr16
pop
outsb
lea
pop
adc
jmp
mov
aaa
sbb
sti
fisubs
ret
adc
faddl
add
pop
out
and
jg
pushl
fcmovbe
cli
mov
mov
adc
out
shrb
adc
test
dec
and
xor
test
jg
sbb
sbb
incb
jmp
lock
data16
adc
inc
jmp
push
decl
popa
movsb
rclb
popa
ss
mov
xchg
adc
push
lods
push
lods
inc
sub
sbb
or
out
fs
dec
mov
jmp
stos
sub
adc
push
aas
shrb
inc
add
outsl
dec
pop
and
lret
inc
inc
jecxz
jge
and
or
pop
mov
in
ljmp
dec
pop
aad
push
mov
ljmp
xchg
sub
jg
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
cmp
fs
jmp
push
mov
add
ss
mov
fcompl
inc
and
jbe
pop
mov
jb
push
rorl
arpl
or
clc
ret
gs
adc
sub
out
mov
sbb
cmp
push
xchg
add
inc
jb
mov
push
ja
ljmp
or
mov
pop
jle
mov
adc
call
ljmp
cmc
rclb
stos
sub
ss
cmpsl
mov
jmp
decl
stos
pop
jae
xor
das
or
jne
sub
push
cmc
mov
cmpb
dec
cmpsl
aas
call
inc
ja
fcmove
mov
adc
jmp
sub
lret
pmaxsw
xor
dec
enter
test
or
mov
and
ss
mov
mov
push
xchg
stos
xchg
dec
cmp
pop
test
mov
lea
dec
jl
sub
leave
push
xchg
mov
int
cmp
ret
dec
mov
fmull
xchg
mov
ljmp
cli
jge
xchg
stos
gs
xor
push
fisttps
out
ss
sub
test
call
ljmp
xlat
or
cmp
dec
stc
xor
fdivs
popl
cld
jns
rcl
xchg
arpl
ljmp
iret
mov
incl
lret
mov
xchg
lea
hlt
outsl
dec
inc
stos
add
mov
mov
pop
aam
decb
cmpsb
mov
xchg
mov
in
cld
lods
int
jg
dec
notb
mov
sahf
pop
mov
cmp
idiv
stos
imul
mov
jno
jb
lds
inc
jae
leave
outsb
pushf
sbb
inc
aaa
loopne
push
mov
ds
mov
cmp
test
subb
incb
fildll
xchg
cmpsl
fidivl
divb
mov
adc
outsb
idivl
adc
mov
dec
jmp
pop
lea
push
mov
and
mov
es
scas
add
test
cmp
inc
ficomps
sub
push
add
incl
inc
mov
loope
or
cld
outsb
cwtl
xor
mov
dec
add
mov
stos
jl
add
insb
pop
pop
add
push
mov
dec
mov
jnp
icebp
cmp
jae
xchg
or
shrb
shrb
sbb
fisubs
scas
xor
decl
add
adc
cmp
xchg
dec
dec
lock
jmp
mov
adc
testl
mov
sbb
pushl
push
fcoms
dec
xchg
lret
adc
jno
shll
pop
icebp
jmp
xor
movsl
stos
mov
out
cmp
test
jecxz
push
out
fimuls
pushl
daa
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lea
push
jp
insb
cmc
cmp
pop
popf
xor
ret
xchg
lods
or
fs
lods
jmp
ret
test
xchg
mov
aam
push
push
andb
jg
pop
pop
shll
mov
add
jg
inc
pop
xor
push
pop
test
ret
lock
mov
xchg
mov
push
fsubrs
in
mov
xchg
ja
ret
scas
insl
pop
lea
loop
add
mov
and
ret
arpl
jl,pt
xchg
inc
insl
add
mov
push
lds
and
sub
dec
enter
pushl
cmpsb
push
sub
insl
jno
dec
mov
es
mov
dec
in
or
pusha
fwait
sar
push
imul
das
jns
popa
push
test
sbb
hlt
pop
mov
pop
lods
push
movsb
scas
xchg
out
es
pop
loope
pop
divl
sub
cmp
adc
aam
ret
data16
jmp
test
stc
pop
inc
ffreep
or
repnz
and
cvtps2pi
decl
pop
pop
rcrb
pop
out
pop
push
or
sbb
fisubrl
clc
iret
adc
loop
cli
clc
inc
cmp
sub
pop
sti
mov
cmpsl
xor
jg
decl
mov
jg
stos
je
cld
mov
mov
adcl
icebp
sub
int
pop
loopne
lcall
es
jp
xchg
add
in
cltd
jge
inc
sar
pushl
insb
cmp
mov
loopne
lahf
sbb
or
rol
insl
xchg
jl
jns
jmp
add
jmp
idivb
or
daa
out
push
mov
out
pop
pop
inc
pusha
dec
sub
test
clc
fcmovb
fsubr
loop
je
pop
add
movb
arpl
cmp
jg
mov
je
mov
and
mov
or
cmp
dec
push
lcall
dec
xor
pushf
shrl
xlat
pop
add
imul
xor
sub
js
aam
cmpb
mov
jle
fdivs
cs
cld
scas
add
push
inc
xchg
fdiv
mul
dec
mov
jae
jbe
mov
das
ffreep
cmp
aaa
mov
pushl
and
mov
push
push
pop
push
push
jb
repz
and
lds
fimull
dec
fs
pop
mov
sbb
inc
mov
push
jae
pop
seto
filds
pop
push
cmp
jno
push
sub
scas
xor
pop
hlt
cmp
ds
loope
jg
mov
dec
push
imul
inc
std
stc
jmp
push
cltd
cltd
mov
sbb
cmpsb
es
dec
aaa
cltd
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
stos
xchg
jmp
cli
jo
mov
lods
add
or
incl
mov
test
sub
js
or
cmpb
sbb
enter
push
pop
cld
incl
sub
insl
cmpb
push
cmp
jmp
decl
cmpsb
cmpb
xchg
testb
bound
or
ljmp
inc
xchg
xchg
data16
ljmp
sbb
test
pop
adc
fdivrs
jns
add
in
inc
lock
jo
jg
inc
pushl
outsb
hlt
dec
into
or
dec
or
call
mov
xor
sub
cmc
fs
lcall
mov
arpl
push
sub
jns
sub
sub
adc
fs
jmp
lock
mov
push
lahf
clc
out
pop
outsb
push
jl
loope
xor
fadds
std
call
test
inc
aaa
stos
sti
mov
inc
inc
jmp
mov
lcall
icebp
mov
or
pop
xlat
adc
and
and
xchg
mov
enter
and
cmpl
scas
rorl
mov
call
inc
mov
jp
inc
inc
dec
iret
adc
das
lcall
mov
outsl
adc
jg
jmp
jns
pop
jge
mov
inc
lea
mov
pushl
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
cmp
sbb
add
mov
jl
inc
xchg
and
clc
incl
mov
ss
inc
add
sub
cmp
add
lds
xor
sti
and
hlt
test
movsl
add
cmpl
jmp
hlt
adc
das
mov
pop
fstl
jo
cli
cmp
xor
call
lahf
arpl
dec
xor
mov
dec
rclb
xor
out
into
test
mov
jno
test
mov
adc
xchg
arpl
inc
sub
test
adcl
mov
sub
dec
in
mov
out
popf
push
mov
mov
dec
pop
mov
cld
into
xor
test
mov
outsl
adc
lcall
insl
dec
jecxz
out
jb
in
and
jg
data16
cmp
jge
ret
mov
fwait
imul
xchg
movsb
sar
push
ret
shll
shrb
mov
mov
stos
push
incl
cwtl
es
xchg
adc
adc
cltd
imul
leave
jmp
mov
call
int
mov
divb
loope
jo
jne
jbe
data16
lret
dec
repz
mov
in
adc
xor
cmp
adc
addr16
jmp
sbb
and
cmpsb
call
fists
push
lret
negb
into
jmp
add
adcb
ljmp
aam
add
iret
das
xor
mov
lds
ljmp
pushf
adc
mov
sbb
out
jne
and
ret
add
cwtl
mov
xchg
push
std
incl
inc
sahf
push
pop
mov
std
adc
mov
or
mov
inc
ret
fimull
mov
mov
mov
pop
aas
mov
or
shll
cld
jmp
shll
cmpsb
xor
add
jo
push
xchg
loope
jmp
ss
call
lock
jmp
and
lret
add
fs
mov
sbb
jmp
sub
dec
outsb
das
fwait
rep
div
lock
mov
mov
sub
outsb
mov
mov
mov
cwtl
push
xor
pushl
cld
decl
lcall
out
sar
and
pop
mov
push
inc
cmp
mov
scas
aam
aas
xor
ljmp
out
sbb
push
mov
insl
into
inc
and
xchg
pushl
aad
cmp
push
xor
inc
jb
fcomip
sbb
xchg
xor
inc
pushf
sar
pushl
sub
push
cmp
mov
cmpsl
mov
inc
repz
jmp
stc
mov
pop
mov
enter
jl
mov
cmp
xchg
lret
cwtl
sub
test
pop
mov
jecxz
inc
and
jg
and
dec
jg
jae
xorl
dec
cld
inc
dec
jno
ja
mov
jg
call
popa
std
rclb
test
push
xor
movb
incl
test
mov
mov
ficompl
pop
incl
loope
mov
dec
jnp
add
imul
xor
jmp
xchg
shlb
in
aam
or
divl
xor
es
add
push
lcall
scas
mov
lock
dec
sub
icebp
rcrl
mov
cmp
dec
mov
mov
mov
aaa
cli
sub
xor
push
jae
jmp
jecxz
imul
push
sbb
mov
pop
mov
sub
jne
int3
xlat
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
jo
std
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
in
mov
or
int3
aaa
js
pushl
ret
adc
or
sbb
outsb
dec
aas
out
mov
ljmp
decl
das
hlt
mov
in
pop
push
roll
in
outsb
jns
xchg
push
incl
lods
mov
mov
xchg
adc
gs
scas
dec
xchg
or
jle
outsb
mov
push
xchg
jecxz
aaa
fcom
pushl
or
call
dec
inc
and
call
or
test
fwait
xchg
push
add
xor
decl
ljmp
xlat
dec
movsb
inc
adc
sti
das
sbb
call
xchg
loope
mov
loop
aad
movsl
repnz
jmp
lcall
loope
pop
pushf
divb
flds
dec
iret
mov
sub
jnp
std
decl
mov
sub
inc
pop
cwtl
jnp
stos
add
mov
mov
lock
xchg
add
xchg
das
lret
rcrb
lcall
fwait
insl
xlat
or
push
adc
bound
das
clc
fstps
popa
push
outsl
jg
adc
push
mov
mov
shl
add
ja
incl
cld
pop
push
jno
xorb
jo
fwait
mov
pop
adc
xor
clc
mov
mov
mov
mov
jmp
jl,pn
inc
add
mov
mov
inc
pop
out
es
dec
enter
sub
dec
inc
inc
sub
cmp
and
mov
jno
add
cltd
rcrl
call
xchg
imul
pop
sti
out
in
sub
adc
xor
adc
call
inc
mov
jae
enter
push
push
aaa
popf
mov
out
cmp
decl
icebp
inc
adc
scas
in
dec
sub
in
or
mov
pop
repz
dec
xchg
and
repz
xchg
sbb
into
dec
flds
in
mov
incl
mov
pop
cmc
add
xchg
or
fisttpl
mov
loopne
pop
loopne
incl
adc
mov
mov
cli
mov
into
idiv
fistpll
pop
je
cmpl
clc
mov
add
in
mov
addb
popa
sub
push
enter
xor
adc
mov
push
cmc
xchg
inc
pusha
or
cmp
push
inc
cmpsb
push
pop
jne
push
das
mov
lea
cmp
mov
loop
fnstsw
cli
jg
jmp
mov
and
test
clc
jmp
dec
outsb
incl
dec
je
popf
mov
or
rolb
iret
push
movsl
aad
mov
pop
mov
stos
call
mov
cld
mov
addr16
dec
js
notb
movsl
outsl
xor
jmp
dec
push
int3
mov
popa
jbe
adc
xor
cli
xchg
cmpsl
ja
cwtl
pushf
pushl
ja
mov
xor
hlt
cmp
adc
scas
jmp
add
into
push
push
pop
add
ljmp
cli
dec
add
jae
insb
test
xchg
aad
cmp
jp
push
pop
inc
mov
pushl
fcom
mov
push
sti
dec
loopne
and
dec
test
jmp
mov
xor
decl
jecxz
sub
xchg
add
pop
add
xchg
popf
adc
cmp
ljmp
and
lcall
mov
mov
les
mov
push
mov
inc
lret
jge
aas
and
dec
outsl
jb
lods
adc
test
mov
dec
sbb
and
pop
fwait
dec
das
in
cmp
inc
push
movl
data16
popa
inc
dec
sub
orl
scas
xchg
orl
scas
pop
and
call
fwait
xlat
data16
push
jp
in
push
and
push
or
mov
lcall
bound
rcr
xchg
and
pop
cltd
jge
ljmp
xor
dec
push
sbb
sbb
sti
mov
fsubr
pop
mov
cmp
push
cmpsb
jmp
sbb
add
jo
xchg
push
pop
imul
and
pusha
fiaddl
cltd
sbb
aaa
std
outsl
cli
pop
push
sbb
stos
rclb
pop
lret
test
jmp
cld
call
pop
popa
insl
mov
cmp
insb
or
mov
pop
ljmp
inc
out
push
dec
push
dec
sub
add
add
ret
stos
pop
mov
jl
call
pop
cmpsl
je
js
mov
cs
push
and
lock
or
add
inc
fs
rcrb
add
sar
dec
daa
sbb
pop
push
lds
popa
jno
or
fistps
sar
ljmp
adc
inc
test
mov
dec
or
mov
push
lahf
dec
lret
arpl
inc
sahf
ljmp
jge
mov
addr16
imul
cmp
cmp
and
mov
or
call
push
outsb
stos
or
cli
dec
mov
int3
test
inc
test
jo
aas
lret
xchg
or
incl
push
rorl
mov
mov
mov
shl
hlt
call
ljmp
incl
add
inc
out
adc
mov
adc
adcb
dec
out
cmp
call
sub
int
sahf
xlat
repnz
js
and
in
nop
inc
pushf
or
mov
dec
cmp
outsl
dec
dec
xor
ljmp
mov
scas
add
mov
loope
nop
lods
in
inc
sbb
xor
adc
popf
test
sbb
pop
lret
jnp
mov
jmp
xchg
cli
lcall
pop
ret
or
xor
stos
loopne
pop
fisubs
pop
inc
push
mov
loopne
shlb
outsb
xchg
mov
ljmp
push
xor
pop
mov
shll
test
or
dec
lret
jbe
mov
aaa
mov
stos
jp
or
in
fistpl
push
or
add
jmp
idivb
dec
sub
inc
jbe
push
add
into
daa
divl
mov
sbb
push
out
lock
fcompp
dec
and
inc
dec
xchg
sbb
mov
sub
pusha
ljmp
int
push
rol
iret
enter
sbb
dec
subb
mov
or
pushl
pop
jo
add
sub
pop
push
or
jge
lahf
push
mov
xchg
cltd
mov
icebp
xor
jl
fdivrs
inc
paddd
xlat
sub
in
lods
dec
mov
jnp
das
mov
ret
andl
xchg
adc
jecxz
inc
stos
in
pop
popf
ss
mov
dec
subb
mov
idivb
xor
sbb
shrb
daa
pop
lret
out
xor
and
inc
pop
lea
sub
mov
out
jns
push
push
aaa
cltd
sub
js
mov
xor
pop
std
add
xor
pop
leave
js
into
pop
out
jmp
fiadds
cmpsl
sti
repz
mov
sbb
fst
and
cld
cld
ret
adc
aaa
nop
fs
add
dec
xor
jmp
add
mov
movsb
and
cmp
dec
mov
add
call
lcall
adc
enter
sub
clc
mov
ljmp
shlb
in
sub
dec
push
pop
inc
mov
cli
add
mov
jge
in
push
nop
inc
dec
js
xor
fcoml
repz
push
mov
rcll
push
out
shlb
pusha
push
fsts
dec
in
cmpl
cmp
cmpsl
es
out
imul
dec
lcall
cmpb
cwtl
sbb
pop
push
jg
hlt
ljmp
jnp
add
jle
clc
inc
out
setno
fistpll
test
dec
imul
pusha
xchg
adc
test
adc
fbld
int3
sub
into
dec
jmp
shll
push
cmp
cmp
dec
xor
xchg
push
sub
mov
dec
push
pop
and
aad
incl
xchg
dec
ds
movsl
fmul
xor
fwait
fwait
movb
mov
outsl
lret
lcall
push
cmpsb
shl
pop
or
push
cwtl
les
fdivl
pop
dec
push
sub
jmp
cltd
push
out
jg
dec
sahf
cmp
es
sahf
and
push
scas
addr16
jg
jge
repz
sti
jp
sub
nop
jle
je
out
f2xm1
inc
loop
or
sbb
das
mov
or
sub
ss
push
xlat
outsl
cli
mov
jg
mov
out
sub
fdivrs
adc
ljmp
dec
sbb
pushf
dec
mov
push
adc
adc
xor
gs
mov
or
xchg
cmp
jno
jb
test
in
rcrl
addb
lods
inc
icebp
cli
je
pushl
push
lock
pop
lcall
push
aas
or
sbb
inc
inc
incl
cld
adc
jge
sbb
mov
xor
les
dec
add
sub
push
stos
fstpl
in
xor
shlb
pop
cli
inc
scas
movsl
mov
sub
jo
or
mov
pop
push
xlat
fmul
push
push
in
jl
ljmp
cmpsb
jae
test
xlat
dec
loop
add
adc
xlat
mov
aaa
test
call
shlb
mov
xor
mov
xor
push
cmc
addr16
pushf
adc
cmp
decl
enter
add
and
xlat
fisttpll
mov
mov
into
or
cmc
jmp
jmp
xor
and
incl
stos
fsubl
xchg
repnz
testb
decl
lock
sub
jb
cmc
add
jle
mov
jge
call
inc
xor
lcall
adc
cs
mov
in
sbb
dec
xchg
xor
and
xor
xor
add
rcr
mov
pushl
adc
push
and
xchg
stc
mov
add
rclb
repnz
ds
stos
mov
ret
jmp
out
rolb
call
sbb
inc
xchg
test
xchg
cltd
out
xchg
mov
div
lcall
mov
std
adc
rclb
mov
xchg
adc
xchg
jb
gs
pop
xchg
pushf
sbb
pmuludq
cs
or
push
mov
fldcw
stos
mov
mov
xchg
ljmp
inc
xchg
add
cld
outsb
testl
cmp
inc
jge
out
push
mov
arpl
in
out
out
push
in
or
jmp
pop
mov
aam
call
test
jbe
es
cmpsl
in
sbb
scas
push
sbb
insb
sbb
dec
xchg
jmp
cmpsb
pop
xchg
and
xlat
cs
and
mov
push
lret
lds
dec
push
in
jbe
jmp
bound
lcall
or
or
push
imul
push
ficoms
inc
clc
inc
das
mov
ja
data16
call
adc
and
mov
cmp
mov
pop
dec
jnp
dec
mov
adc
lcall
xchg
insb
xchg
sbb
jns
movl
jp
or
push
pop
pop
jp
lods
dec
stos
mov
cmc
and
jbe
outsb
sub
sahf
pop
in
jg
cmpsb
repnz
and
dec
cmc
dec
shl
jp
data16
dec
ja
clc
and
das
pop
rorl
ss
and
sub
sbb
clc
lret
cld
loopne
outsl
loop
incl
add
es
imulb
mov
pushl
scas
and
sahf
adc
xchg
xor
push
mov
adc
idivl
loopne
iret
inc
std
shrb
negb
xchg
cmc
popa
mov
vpsubsw
movsl
ret
mov
inc
add
ljmp
adc
xor
and
inc
jmp
decl
mov
and
loop
popa
out
ds
movsb
xchg
aam
sub
loop
jle
clc
jno
mov
push
clc
in
aam
popl
cltd
inc
jae
jno
jmp
push
pop
outsl
jae
jl
sahf
xchg
pop
loop
push
xor
cmp
sbb
push
sub
add
lcall
jecxz
scas
fstp
decl
push
imul
imul
dec
ljmp
insl
push
mov
data16
js
icebp
fsts
or
sbb
ljmp
shll
lret
pusha
push
mov
xchg
jge
leave
dec
outsb
ds
cwtl
stc
adc
jg
fisttps
jg
pop
mov
mov
jecxz
outsb
sbb
mov
pushf
mov
aaa
int3
loopne
hlt
sub
sarl
clc
incl
arpl
and
enter
ficoml
test
lcall
stos
and
ljmp
mov
insb
sub
bound
fcmovnu
dec
mov
mov
ljmp
push
or
hlt
outsb
out
pop
pop
call
push
lcall
decl
dec
ss
push
popf
inc
pop
lret
inc
cmp
fs
ljmp
lret
xchg
mov
rcr
popf
mov
mov
imul
aaa
pop
mov
lcall
inc
nop
mov
sub
dec
pushf
pop
cs
aaa
adc
cwtl
popf
repz
js
fidivl
in
mov
jnp
mov
loopne
mov
testb
cmp
scas
loopne
out
xabort
fildl
mov
ret
sub
cmpsb
cmpl
pop
daa
push
xor
cmc
jl
fs
arpl
scas
and
xor
shrb
adc
jl
pop
pushl
std
jecxz
add
repnz
adc
add
aas
cmc
ret
rol
mov
ds
push
rcrb
cltd
cmpsb
jecxz
std
sti
mov
cmp
adc
insb
xor
or
lods
inc
stos
sahf
pop
cmpsl
or
scas
rorl
stos
push
fld
or
mov
or
mov
cwtl
jbe
gs
mov
and
pop
jecxz
in
repnz
into
lods
lods
cwtl
int3
repnz
fs
lcall
out
xchg
push
mov
adc
ret
fiaddl
mov
or
xlat
mov
idiv
ffreep
sti
gs
pop
lods
bnd
jb
cwtl
sbb
jne
outsl
addb
pop
and
sbb
incl
or
cmp
out
push
inc
or
inc
ret
dec
add
ljmp
les
ret
pop
insl
loop
shrl
mov
addr16
pop
cld
xor
sti
xor
movsl
jb
out
insb
push
rol
loop
int3
pushf
mov
enter
add
pop
shl
and
sahf
mov
sti
js
xchg
mov
pushl
lds
sbb
loop
ret
lahf
inc
jmp
sbb
jecxz
incl
popf
cwtl
out
and
and
adc
xor
lcall
inc
ret
push
dec
cmp
popf
bswap
inc
sti
mov
enter
pop
mov
xchg
call
decl
out
ss
loopne
test
fmuls
mov
cmpsl
xor
xor
add
decl
mov
mov
mov
xchg
daa
aam
lcall
xor
les
xor
scas
ficoml
js
shll
pop
dec
fisubs
jl
mov
xor
jbe
in
push
cwtl
mov
push
push
add
call
cli
div
push
xor
pusha
mov
cmp
pushl
cli
imulb
daa
pusha
movsb
sarl
mov
xlat
add
jmp
dec
jmp
adc
add
mov
and
sahf
xchg
jecxz
aad
cmp
xchg
aaa
lret
clc
push
jns
stc
decl
adc
mov
nop
xchg
dec
xchg
dec
loopne
dec
shlb
xor
decl
jle
push
mov
add
fwait
sbb
aaa
and
stos
insl
fstpl
mov
dec
cmp
loop
pop
in
jg
cmp
nop
cmp
jnp
xchg
lods
mov
push
std
or
and
cwtl
out
mov
xchg
cmp
xchg
mov
push
call
test
add
sbb
movsl
inc
je
pop
jnp
push
outsb
mov
sbb
test
or
xor
incl
add
and
in
push
das
xchg
mov
pushf
and
cmpsl
cld
jmp
sub
das
cmp
stos
into
pop
sub
adc
int
loopne
clc
hlt
ljmp
sbb
pushl
cs
fbld
inc
rcll
sub
or
sti
out
push
cmp
pop
mov
jmp
insl
rolb
mov
adc
sub
outsl
mov
mov
and
mov
mov
addl
gs
daa
outsb
ds
cld
jno
jmp
push
push
push
sti
or
pop
pop
pop
inc
or
or
add
or
dec
ljmp
jns
movsb
push
aas
mov
cs
mov
jmp
pop
adc
test
sbb
aam
xchg
shlb
xor
add
lcall
ljmp
push
stc
dec
push
mov
push
lret
push
mov
fs
aaa
mov
sbb
fildll
scas
mov
xor
sbb
out
mov
and
leave
xchg
xchg
rcll
push
push
pop
call
movsl
dec
fcomps
cmp
lods
pop
call
push
xchg
sub
add
mov
sbb
stc
subl
lcall
and
loope
sub
int
ja
add
mov
fimuls
add
sarl
lock
sub
lcall
pop
jle
stos
add
cli
std
add
arpl
in
into
sbb
int
pop
movsb
test
enter
aaa
mov
fdivrl
adc
push
mov
jle
xchg
xchg
cmp
gs
out
sarl
shll
lcall
mov
dec
mov
adc
imul
ret
int3
popa
and
loope
in
sbb
push
lcall
outsl
xor
int
in
jl
fistl
inc
aam
movsb
ljmp
dec
loope
lea
and
popa
nop
jb
mov
pusha
inc
dec
test
aas
aaa
mov
mov
scas
std
sbb
shl
bound
mov
add
push
mov
test
ljmp
fistps
and
xchg
clc
xor
pop
gs
push
call
movsb
push
repnz
in
or
aaa
mov
mov
xlat
aas
xchg
cmpsb
mov
jb
lahf
test
loop
clc
jnp
inc
mov
cmp
loop
push
nop
mov
das
lret
xchg
int3
mov
or
stc
in
les
lahf
lahf
ret
jmp
add
cmpsb
push
xchg
icebp
cwtl
fs
sub
mov
daa
outsl
dec
out
mov
movsb
in
inc
loopne
inc
jp
out
sub
sub
cwtl
ja
mov
mov
or
vaddsubpd
stos
decl
scas
inc
or
adc
lcall
or
push
filds
enter
ss
inc
aad
incl
std
pop
mov
std
dec
push
sar
neg
repz
pop
xchg
mov
test
lahf
mov
xchg
jl
add
shrb
xchg
lcall
push
or
inc
fcmovbe
pop
pop
into
les
pusha
fwait
in
fwait
jg
leave
add
mov
xorb
lret
jo
hlt
pop
pop
mov
sub
lcall
pusha
pop
es
push
loop
push
insb
cmc
push
inc
decl
dec
push
push
push
leave
dec
cmp
jmp
push
dec
ret
stos
and
std
subb
mov
decl
es
loope
push
cwtl
add
jb
lods
fdivrl
sub
pop
inc
pushf
fnstsw
mov
xchg
into
xor
into
loopne
or
inc
sti
hlt
xor
loope
sub
sub
stos
loopne
mov
incl
xchg
lcall
pop
aad
and
out
ja
decl
add
or
or
fstpt
in
pop
cwtl
pop
jge
jmp
mov
jg
push
jae
in
sub
loop
movsl
adc
decl
inc
jecxz
push
mov
movsb
sub
cs
xchg
push
out
call
sbb
pop
sub
lods
sti
mov
loopne
inc
add
ror
mov
jge
cmp
fcomps
leave
enter
je
loopne
sbb
xor
fisubrl
xchg
mov
dec
mov
insb
or
cmp
pop
aas
jp
xchg
inc
cli
lcall
or
or
jg
mov
mov
sarl
xchg
xor
sbb
or
inc
pushl
inc
jmp
push
push
mov
in
sbb
xor
mov
imul
stos
leave
inc
push
loope
mov
rcll
std
incl
push
in
or
cmp
cmp
les
cld
cwtl
sbb
pushl
jns
mov
out
loopne
push
adcl
lret
call
into
pop
mov
clc
idivb
lods
int
shl
test
das
lods
ss
jl
jmp
fstpl
pop
sbbl
sti
mov
push
daa
dec
and
es
aam
call
int3
dec
fcoml
inc
jb
mov
bound
mov
pusha
fcomi
les
sbb
jae
decl
ljmp
leave
mov
cmp
jae
xor
and
cmp
pop
xorb
jo
adc
mov
adc
or
je
std
sbb
fs
cmp
jg
aam
stc
scas
movsb
xor
add
push
sbb
sub
sub
inc
pushl
mul
les
sbbl
daa
add
dec
loopne
aad
stos
fidivl
dec
sbb
fidivrl
and
mov
jo
js
cwtl
jmp
mov
push
fisttps
jecxz
nop
les
or
ljmp
xchg
filds
fs
mov
aad
adc
je
sti
test
repz
loop
mov
movsb
xchg
xor
add
lds
pop
dec
sub
gs
lcall
add
sub
test
hlt
cmpsl
xchg
pop
sahf
dec
enter
shrb
xchg
mov
jmp
jnp
push
shlb
dec
roll
cmpsl
js
pop
popa
jge
cmpsb
dec
test
ljmp
shrb
push
das
nop
cmc
pushl
testl
incl
pusha
sti
or
fadd
mov
ja
cmp
scas
pop
sub
mov
fdiv
jg
fldt
andb
cld
incl
mov
mov
lods
xor
lock
cmc
and
or
mov
call
xchg
jns
add
sbb
jg
inc
jns
incb
imul
ja
call
pop
pop
out
mov
in
inc
or
sbb
decl
jno
pop
xor
and
cmp
fstpt
stos
in
outsb
test
enter
push
shr
jb
add
std
stc
dec
inc
je
pop
sbb
inc
jle
notb
pusha
loop
pushl
pop
dec
sub
aaa
xchg
call
jo
mov
test
add
mov
stos
push
mov
call
and
cld
mov
call
dec
bound
xchg
dec
loope
jmp
or
jg
orb
cwtl
sub
mov
or
lcall
test
inc
sbb
hlt
sbb
or
fidivl
or
call
adc
clc
cmp
je
cmp
movsl
clc
enter
cld
repnz
dec
ljmp
sar
stos
cmpsb
lcall
in
lret
into
mov
je
push
sbb
pop
ret
fstps
fiaddl
fisttps
adc
xor
enter
jbe
lods
jmp
jge
jecxz
dec
lods
js
sub
iret
cmp
dec
je
iret
dec
and
test
mov
movsl
push
dec
mov
xor
cmp
xchg
mov
pushl
fbld
int3
mov
cmpsb
jo,pn
mov
mov
repz
in
ja
and
lea
xor
js
call
dec
test
insl
and
cmp
mov
pop
add
and
sub
lcall
repnz
sbb
xchg
ds
loopne
incl
jle
push
sbb
test
lret
cmpsb
xchg
xor
or
sbb
call
mov
pop
fadds
adc
sbb
leave
inc
sar
xchg
jecxz
push
call
dec
xor
rclb
adc
add
ds
adc
inc
in
add
call
test
inc
repnz
pop
inc
das
cmp
filds
mov
lcall
adc
push
addr16
sub
xor
mov
adc
movsl
xchg
or
call
dec
push
sbb
add
and
stos
mov
or
repz
xchg
out
clc
jnp
stos
lcall
push
sub
sub
ljmp
mov
int
loop
jbe
out
in
sub
int3
sub
and
mov
or
pop
pop
xor
add
aad
das
jecxz
push
lcall
ljmp
ljmp
fists
fld
cli
das
add
and
ljmp
cmc
jne
cmp
inc
dec
je
dec
jno
dec
push
pop
mov
inc
sub
aas
addr16
cmp
cmp
push
adc
mov
mov
cwtl
cmp
fidivs
jbe
mov
push
les
sbb
push
sub
clc
push
cmp
pop
cmp
adcb
into
xor
test
test
faddl
decl
sbb
xor
das
mov
ljmp
add
popa
das
addr16
fcoms
stos
or
ljmp
adc
out
js
int
jbe
push
out
pop
mov
pop
xor
filds
and
ret
push
clc
pop
or
xlat
sbbl
inc
mov
call
jae
sub
scas
mov
fadds
pop
stc
stos
cmp
ljmp
inc
aaa
push
mov
push
cmp
in
and
test
loop
sub
movsb
cmp
clc
mov
iret
jbe
hlt
fsubp
insl
push
dec
imul
add
hlt
gs
fwait
mov
xlat
in
mov
inc
mov
incl
mov
push
hlt
mov
ret
sub
xchg
push
xchg
ljmp
ljmp
add
dec
mov
hlt
imul
cmc
jmp
mov
ljmp
in
jecxz
rolb
pop
mov
dec
es
stos
jge
loope
jg
lea
lock
cltd
daa
aad
push
push
call
ljmp
das
pop
add
jns
sarb
lahf
or
fcmovne
stc
mov
dec
idivb
nop
hlt
decl
mov
fisttpl
loope
and
rol
outsl
clc
lcall
lds
les
push
cmc
rdtsc
divl
jecxz
in
or
or
decl
dec
ficompl
cmp
fwait
stos
pop
out
les
jmp
pop
jae
cld
adc
dec
or
fs
inc
jmp
lcall
pop
cmp
mov
pop
xchg
xor
inc
data16
jg
push
icebp
gs
sti
das
xchg
adcb
gs
stos
mov
sbb
fsubp
lds
fistpl
and
addl
shrb
push
ja
push
dec
pop
sub
jmp
cs
out
adc
movb
push
adc
incl
test
aaa
mov
icebp
pop
scas
push
xchg
adc
fs
xor
decl
mov
pop
cmp
scas
rcrl
pop
xor
cmc
lds
push
int3
arpl
inc
stos
xor
or
add
adc
xchg
xchg
lods
jbe
cmp
aas
fninit
and
xor
lret
mov
daa
jl
stc
or
mov
scas
add
and
mov
cld
decl
jl
mov
jae
adc
mov
mov
mov
pop
xchg
pushl
sbb
and
mov
decb
gs
ljmp
fwait
test
or
adc
xor
out
rcll
add
into
repz
clc
jmp
sbbl
sbb
push
mov
or
mov
cmp
adc
ficompl
pop
push
jae
jmp
ljmp
mov
hlt
adc
addl
filds
sub
mov
sarb
call
adc
loop
mov
and
clc
sbbl
xor
inc
sub
xor
xchg
fsubr
mov
cmp
mov
fnsave
adc
rorl
fldcw
out
mov
inc
pushf
mov
mov
adc
outsb
lret
jo
rcll
lcall
outsl
add
cmpsb
or
or
jns
sub
mov
leave
mov
sahf
sbb
xchg
call
mov
mov
mov
imul
xchg
inc
jecxz
sbb
call
pop
push
repz
pusha
cli
pop
ret
adc
push
std
xor
lret
mov
and
mov
pop
pop
cmp
or
fbstp
pop
pavgb
lds
sbb
imul
shl
test
push
add
mov
test
in
xchg
ljmp
ja
sbb
mov
jg
push
mov
pmulhuw
fstpt
out
sub
jg
and
xchg
cmp
frstor
mov
mov
push
adc
jmp
fs
mov
aad
pusha
or
jns
mov
jns
decl
outsb
fwait
das
hlt
es
push
mov
shr
stc
or
push
jp
ljmp
rclb
jp
fisubrs
mov
popa
test
pop
jne
dec
scas
sbb
std
fnstcw
dec
shrb
push
mov
rorl
iret
mov
out
pop
and
icebp
xchg
sub
add
cs
mov
lret
mov
sbb
sbb
mov
mov
sar
call
ror
pushf
xorl
mov
jne
mov
mov
jle
adc
enter
sbb
and
push
mov
mov
xorb
or
pop
outsb
xlat
add
sti
mov
mov
cmp
shl
adc
push
adc
inc
lods
sbb
imul
inc
dec
and
lret
fildll
push
enter
or
and
leave
xlat
jne
adc
call
lahf
mov
movsl
shll
lea
test
jns
scas
pop
add
pushl
ret
or
jae
scas
ret
sbb
mov
sub
push
stc
cmpl
decl
fwait
xchg
xor
mov
mov
arpl
sub
je
or
mov
aam
and
and
call
mov
xchg
test
ljmp
lods
aad
xchg
scas
leave
pop
jbe
mov
inc
sbb
je
ljmp
std
decb
lcall
call
or
dec
rorb
push
loopne
loopne
push
lods
das
pop
std
jbe
mulb
jbe
jp
xchg
mov
dec
xchg
in
in
fdivrs
jmp
lock
lahf
gs
sahf
jmp
sub
cwtl
ds
cmpsl
inc
cmpl
ret
cmp
lods
pop
into
adc
push
icebp
fmull
sbb
lcall
mov
jnp
hlt
lea
into
mov
sbb
aas
loope
fldcw
test
mov
lcall
jg
hlt
mov
xor
notb
mov
std
push
iret
incl
fwait
pop
out
pop
ficoml
addr16
or
out
xchg
jno
iret
stos
call
incl
mov
and
rol
movsl
push
xor
out
mov
xor
decl
cmp
clc
push
cmpb
add
int3
pusha
pop
pop
stos
into
dec
mov
iret
filds
xor
ss
sahf
dec
mov
adc
std
sub
test
pop
xchg
ljmp
cmp
das
stc
out
inc
divb
leave
sbb
or
xor
or
xchg
cmpsb
jbe
jb
in
not
xchg
inc
in
mov
xchg
jg
loop
push
mov
or
jp
sub
xor
push
call
mov
push
lret
push
inc
mov
test
push
mov
bound
push
clc
jb
dec
adc
pushl
mov
aas
add
cli
or
lods
int3
add
icebp
cli
jp
test
inc
in
pushl
dec
fdivrs
or
shl
daa
add
xchg
decb
mov
bound
cs
mov
cmpsb
pop
idiv
pushl
scas
or
jb
mov
not
mov
lods
mov
mov
ljmp
mov
les
cwtl
fdivrs
dec
clc
sahf
out
mov
std
pop
les
stos
aad
data16
push
leave
lret
cmpsl
adc
xchg
scas
push
leave
pop
cmc
movsb
aam
xor
leave
push
shll
cmp
xchg
mov
fadd
aas
mov
movsb
jbe
mov
negl
xchg
negb
test
arpl
xchg
in
mov
mov
cmp
ljmp
or
and
inc
repz
add
mov
lea
out
cli
xor
mov
fisubl
sub
popa
cmp
mov
lret
push
and
out
pop
loopne
fnstsw
repnz
inc
lods
shl
push
jmp
adc
dec
out
sbb
std
hlt
inc
adc
cmp
out
dec
or
out
inc
and
xor
ja
mov
sbb
lods
sub
data16
loop
lret
inc
cmp
push
mov
icebp
jmp
or
fucom
lods
ss
mov
loope
ret
adc
and
loopne
popa
loop
popa
orb
fiaddl
sahf
and
mov
pop
lcall
xchg
cmpsl
loop
pop
fcmove
sbb
bound
push
mov
and
shl
mull
jmp
aam
jae
dec
mov
cmp
movsb
or
and
push
jge
fildll
xor
pop
mov
sub
push
fmuls
or
push
scas
pop
sbbb
push
aad
inc
push
in
mov
lock
adc
add
insb
mov
scas
cmp
int3
ljmp
hlt
loopne
mov
insl
add
push
pop
fidivrl
call
jmp
bound
jle
imul
das
shr
sbb
movsb
adc
sbb
clc
push
sub
ds
outsl
clc
test
sbb
sub
imul
data16
mov
out
push
pop
rcll
push
xor
push
and
and
pushf
pop
movsb
and
mov
mov
push
aaa
xchg
lcall
xor
stos
sub
stos
cwtl
sub
xor
or
mov
cwtl
jg
fcomip
xchg
lods
xchg
lret
mov
icebp
mov
hlt
sbb
mov
cmpsb
pop
push
iret
adc
sub
out
pop
pusha
jae
xchg
mov
loopne
iret
dec
jge
mov
pop
lock
push
movl
jecxz
mov
pop
xchg
out
mov
incl
div
insl
gs
pushf
pusha
xchg
add
jle
adc
adc
adc
inc
decl
sbbl
adc
dec
push
or
mov
or
fisttpll
xlat
xorl
inc
push
xchg
notb
mov
or
fxch
cmpsb
in
mov
outsl
repz
repnz
push
adc
aaa
repnz
js,pn
mov
in
loope
fistpll
les
flds
mov
pop
mov
jbe
call
ljmp
xchg
insl
jb
scas
aaa
or
icebp
cltd
lahf
dec
mov
push
incl
mov
jle
test
push
push
mov
cmp
inc
jae
int3
rcrb
out
lahf
push
or
call
and
outsb
push
or
mov
pop
cli
lcall
push
and
cmp
bound
inc
sub
ja
dec
mov
adcl
sub
xlat
popa
xchg
call
xor
stc
cmp
and
js,pt
lock
add
sbb
and
jb
imul
stos
ljmp
xchg
les
jmp
incl
in
xor
xor
xchg
jle
call
sub
mov
mov
mov
addr16
lahf
lcall
add
mov
pop
sarl
mov
int
imul
or
incl
cmc
mov
loop
shrb
push
jmp
repz
and
jl
jle
mov
nop
pop
mov
inc
xor
jno
movsl
adc
and
jmp
jmp
mov
add
das
or
mov
out
push
scas
lods
clc
clc
in
decl
scas
and
test
pushl
es
fcmovb
cmp
cs
pop
mov
adc
adc
add
mov
pop
mov
mov
bound
inc
xchg
call
push
popa
cmp
jmp
jge
mov
lock
test
pop
int3
cmp
arpl
or
test
inc
mov
gs
pop
cmp
andb
xchg
test
outsb
mov
push
incl
jbe
loopne
in
inc
pushf
int
fcoms
iret
or
les
enter
fcos
pushl
sbb
adc
xor
bound
inc
ret
into
orb
repnz
adc
scas
pop
gs
and
jmp
jl
or
out
pop
xor
mov
stos
dec
aam
jp
stos
ja
decl
push
addr16
lods
add
sub
dec
mov
inc
adc
fcomip
incl
test
push
mov
xor
xchg
repz
cmp
cli
jns
sub
inc
xchg
sbb
ds
add
and
push
aas
dec
insl
lcall
pusha
movsl
xor
mov
mov
in
jb
sbb
ljmp
mov
pop
push
ret
jl
adc
jge,pn
xor
mov
imul
cmp
push
out
clc
add
pushf
test
and
je
xor
aaa
and
sar
pushl
cwtl
lods
in
test
mov
sub
jmp
ret
push
cmc
and
cmpsb
sub
call
ss
mov
daa
mov
jno
fsub
mov
xchg
outsb
shld
and
pop
lret
push
ljmp
test
xchg
out
xor
loop
xor
arpl
pop
daa
scas
mov
shr
popf
cmpsb
out
cli
call
insb
int
jle
inc
daa
xchg
or
pop
dec
xchg
push
adc
lcall
add
inc
cmpl
int
fildll
dec
jns
loopne
ss
addr16
scas
cmpsl
sbb
decl
xor
insl
push
cmpb
jmp
ljmp
scas
dec
cmc
jecxz
and
je
mov
ss
jns
inc
lret
jl
incl
cltd
lret
dec
push
pop
inc
xor
and
enter
push
mov
jb
pop
xor
dec
jl
jmp
hlt
mov
cmp
pop
jle
jnp
cmpsl
shll
sub
push
mov
fcomip
fildll
movsb
sbb
or
std
mov
orb
mov
cmp
inc
adc
mov
xchg
in
jl
push
out
dec
sbb
mov
jg
insb
lods
inc
xor
xor
xchg
cmp
push
fnsave
popf
inc
jb
pop
jmp
sbb
out
addb
xor
mov
jmp
push
ljmp
xor
push
cmp
hlt
pusha
jmp
xchg
mov
sbb
push
int3
icebp
xlat
mov
xchg
les
lcall
xchg
fs
mov
mov
addr16
outsb
pop
clc
and
mov
es
aas
loopne
js
mov
mov
addb
xchg
or
mov
pushf
sub
pop
fsubrs
push
fcom
dec
sar
decl
push
add
insb
mov
push
add
pop
daa
rcr
sbb
jl
ljmp
pop
inc
popa
shrl
xchg
out
mov
pop
cmpb
pop
cmpb
sahf
adc
sub
icebp
adc
and
ljmp
mov
sbb
cmp
push
ja
xchg
in
ffree
xlat
or
call
add
hlt
jb
and
inc
push
ds
decl
lock
pop
in
and
loop
push
push
lea
lock
dec
sbb
pop
dec
aam
call
or
jnp
adcl
inc
loope
inc
cwtl
cmp
xorl
inc
shl
cmc
js
jecxz
cmc
test
decl
aaa
aas
cmp
pusha
in
xchg
sub
mov
cmp
pop
clc
pop
outsl
lods
outsl
cmc
mov
cli
pop
mul
add
leave
outsb
xchg
xor
es
shlb
cmpsb
push
dec
xlat
rdtsc
aaa
inc
push
push
stos
or
lcall
jo
dec
sarb
push
jno
out
adc
decl
sbb
push
sub
incl
mov
push
ds
cmpsb
stos
sbb
and
mov
icebp
pushl
mov
pop
xor
add
xchg
nop
or
cltd
adc
hlt
ljmp
sbb
add
outsb
das
push
adc
lea
aaa
mov
and
dec
dec
cwtl
pinsrw
lock
jmp
sub
mov
sbb
xlat
xchg
xor
cmp
std
lds
std
lcall
fnstenv
pop
mov
mov
dec
lahf
out
ficompl
push
jl
and
inc
dec
push
ja
jmp
cwtl
jnp
jecxz
je
not
mov
mov
mov
inc
push
inc
push
mov
lods
sbb
xor
decl
sbb
out
dec
and
pop
adc
cld
adc
add
sbb
mov
sti
pop
ljmp
inc
cmc
jp
sar
cli
dec
adc
jne
movsb
add
mov
test
fwait
adc
sbb
xchg
hlt
in
fcmovne
les
mov
pushf
push
pop
inc
add
jb
mov
mov
incl
into
mulps
pushl
adc
iret
stos
out
push
lods
sbb
mov
orb
inc
cmpsb
adcl
push
pushl
scas
xchg
jbe
adc
mov
ss
inc
pop
xchg
adc
xor
push
mov
dec
repnz
jg
inc
and
in
mov
aaa
scas
fidivs
or
or
xor
lcall
inc
xlat
mov
dec
mov
and
pop
add
and
push
jmp
cmp
out
lea
lods
ror
les
ret
pop
outsl
xchg
jg
loop
cs
jl
pop
xchg
call
icebp
and
or
pusha
sbb
mov
push
decl
iret
aad
stc
sub
inc
in
sub
stos
popl
imull
ljmp
sub
dec
sub
nop
les
jae
nop
xor
pop
push
out
pop
imul
mov
pop
outsl
jle
test
dec
movsl
mov
mov
jp
push
lods
and
loopne
mov
pop
inc
scas
outsb
push
and
mov
repz
mov
and
pop
mov
decl
je
or
jge
lret
out
pushf
outsl
or
ja
les
lock
mov
push
roll
lret
mov
pop
add
mov
fcomip
pop
lods
ss
jecxz
test
hlt
cld
fistl
outsb
mov
iret
shl
push
lock
inc
leave
mov
bound
inc
ljmp
fsubs
mov
or
stc
add
lock
mov
ret
lcall
repnz
cmc
and
xor
iret
push
lcall
jbe
in
xchg
in
dec
sbb
mov
add
fimull
inc
mov
iret
insb
lods
pop
jp
mov
inc
cltd
cmc
or
adc
lds
mov
pop
nop
enter
jle
jge
jg
and
xchg
push
sahf
xchg
lret
cli
ret
jne
bound
adc
sub
rcrb
push
add
pop
aad
sar
adc
fisttpll
push
push
xchg
call
clc
jns
loope
mov
mov
jno
cmp
fwait
sahf
jnp
sub
leave
pop
push
mov
and
mov
dec
ret
or
popf
mov
rcll
pop
test
mov
xchg
fisubrs
jp
jo
and
cmp
andb
dec
xchg
push
mov
popf
test
shll
cmp
mov
xchg
test
insb
incl
push
test
cwtl
add
std
lret
popf
data16
mov
icebp
xchg
cmp
out
ljmp
jb
xlat
or
jle
pushf
loope
inc
insl
ss
repz
adc
push
mov
lcall
rcll
loopne
int
push
mov
js
push
inc
sti
stos
movsb
dec
add
inc
incl
mov
xchg
xchg
xor
int3
push
loope
mov
mov
call
popa
pop
push
ds
cmp
lea
std
pop
xchg
jp
loop
dec
cld
aam
push
lcall
or
lahf
mov
mov
aas
pop
and
sti
mov
pop
xor
dec
push
push
jnp
jecxz
cmp
roll
fmul
inc
fdivrl
daa
and
mov
and
ljmp
jle
call
dec
idivl
movsl
add
inc
fldl
sar
aaa
std
call
mov
adc
iret
test
or
sub
int
mov
ljmp
shlb
mov
push
test
or
aas
mov
push
and
inc
call
mov
xchg
std
insb
pop
xor
stc
lcall
fists
jg
adc
cmpsl
xchg
jle
mov
mov
mov
jmp
int
adc
jne
jl
pop
sbb
js
add
jecxz
gs
aaa
lret
push
mov
sti
iret
jle
cmp
call
fstpt
mov
xor
dec
push
and
mov
pop
lret
insl
incl
mov
nop
in
mov
dec
lcallw
jno
cmp
sahf
repnz
add
push
lahf
inc
mov
jnp
shr
aaa
in
sub
lcall
dec
ret
in
test
mov
aam
lahf
inc
mov
fidivrs
jbe
jnp
int3
jns
mov
call
into
jne
lds
nop
sub
out
loop
aad
aas
sbb
stc
pop
lods
dec
ret
sbb
orb
ljmp
jl
movsb
jmp
push
shlb
xchg
xchg
fdivr
pop
pop
bound
scas
ret
mov
sbb
adc
inc
add
or
adc
jmp
add
daa
pop
roll
data16
cmpsl
or
pushl
jno
push
dec
add
mov
jne
jmp
inc
ljmp
nop
shrl
lds
adc
jns
cmovge
mov
js
adc
icebp
mulb
and
lea
out
xor
dec
sbb
aaa
test
inc
lock
mov
int
mov
mov
dec
bnd
pop
lahf
clc
movsb
shlb
mov
je
incl
sbb
adc
negl
pushf
inc
xlat
and
pusha
insb
adcl
ja
fwait
mov
sub
scas
jl
aad
lods
adc
pushl
int3
adc
pop
push
sbb
mov
out
sbb
aas
add
rcrl
imul
push
push
mov
mov
ljmp
stc
sarb
jmp
stos
mov
rorb
sahf
mov
push
dec
aaa
dec
negb
call
jbe
in
shlb
cmpsb
js
xor
incl
or
add
in
pop
mov
inc
mov
mov
mov
ja
call
and
mov
jb
lcall
int
std
pop
imul
incl
dec
lods
mov
js
aaa
add
sub
insb
xor
incl
lcall
mov
sub
arpl
pushl
insb
cmp
inc
push
out
orb
sahf
adc
dec
rorb
call
ja
inc
fldz
loop
jnp
adc
insb
pop
adc
sub
jecxz
cltd
mov
outsb
add
xchg
fisubrl
imul
in
in
fxch
push
cmpsl
nop
pusha
xchg
jo
pop
cwtl
mov
jns
icebp
mov
je
sarb
dec
xchg
mov
sub
xchg
dec
test
jle
lret
pop
iret
sub
jecxz
jle
rcll
sbb
std
lods
jp
hlt
hlt
decl
in
mov
clc
cmc
cmp
std
rclb
or
and
mov
cmp
jae
or
inc
cmp
aaa
fcmovnb
mov
shl
cwtl
call
mov
rolb
clc
or
std
test
lcall
ds
mov
cmp
sbb
pop
ret
les
outsl
insb
in
cmp
push
inc
js
sbb
mov
mov
mov
lret
repz
scas
sbb
dec
call
enter
cmpsb
sub
insl
aam
cmpsb
out
add
pop
fdivrl
jmp
in
dec
sbb
xor
xchg
repz
daa
mov
mov
ja
ret
mov
jp
icebp
rorb
sub
fiaddl
daa
push
and
jmp
call
dec
push
xchg
jg
inc
in
jae
repnz
ss
inc
and
mov
ret
rclb
sbb
inc
adc
jmp
xchg
mov
mov
push
mov
ds
aad
jmp
dec
mov
les
or
loope
mov
hlt
rep
and
cs
push
sahf
lcall
push
in
fisubrl
fs
cmp
jae
mov
pushf
xor
sbb
mov
mov
lea
fstl
cmp
sub
mov
mov
pop
mov
outsl
push
add
jg
adc
aaa
rorl
js
dec
ljmp
ds
std
lds
ss
ja
mov
ja
jmp
sbb
lahf
and
add
sbbb
cmp
incl
mov
add
pushf
or
sarl
in
lods
lods
mov
daa
pushl
arpl
push
call
pushf
repz
inc
insl
ss
es
jg
or
ficoml
es
call
xchg
mov
lods
pop
dec
lcall
inc
dec
popa
imul
jmp
pop
sbb
dec
aaa
bound
add
xchg
mov
stos
les
mov
test
nop
loop
sub
fdivr
ljmp
push
xor
mov
dec
and
and
dec
mov
pop
mov
call
out
in
push
mov
and
lret
scas
test
sahf
pushf
rcrb
fcomp
outsb
push
mov
push
pushl
pop
shlb
lods
sbb
sarl
xchg
js
mov
pop
cmpsb
push
out
stos
jge
movsb
outsl
and
dec
sarl
push
insl
adc
inc
dec
mov
fwait
int
scas
adc
jmp
cmp
outsb
rolb
jmp
loop
cmc
mov
imul
mov
pop
adc
or
stos
dec
cmp
rcrl
imul
mov
push
js
jnp
add
nop
mov
xchg
lea
lret
icebp
mov
cmp
out
mov
push
mov
sar
ja
xchg
cmp
mov
insb
sbb
jl
mov
movsl
xor
idiv
incl
mov
gs
movsb
loopne
cmpsl
cwtl
scas
nop
lods
sahf
jle
mov
pop
mov
rorb
std
jmp
lret
dec
jecxz
cmp
inc
or
cmp
ret
mov
mov
decl
add
popf
imul
sar
or
rorl
jnp
comiss
ljmp
dec
xchg
jecxz
xorb
push
xchg
mov
or
cmp
xchg
mov
incl
cmc
divb
mov
push
or
mov
dec
push
inc
xchg
loope
std
dec
and
pop
nop
jb
into
add
cmpsb
mov
add
mov
gs
adc
jo
mov
jb
imul
in
pop
mov
xor
push
cmpsb
cld
mov
imul
andb
pop
ror
stos
jg
mov
and
cmp
les
aam
add
notb
xor
call
in
pop
sbb
or
add
cmp
in
cmp
and
sbb
sbb
push
addr16
jmp
push
aaa
add
jle
pop
push
jb
jecxz
fisttps
mov
xchg
jns
mov
enter
sbb
xchg
inc
cmp
stos
inc
imul
xchg
int
dec
or
mov
lcall
jg
push
das
loopne
mov
out
rcrl
push
shrb
mov
decl
push
cli
out
adc
add
jne
sub
es
stos
addr16
es
sub
mov
loop
cmp
gs
pop
lcall
decl
out
and
ja
adc
cmp
inc
xchg
sub
mov
mov
sub
outsl
ljmp
popa
push
insb
clc
add
mov
sub
hlt
add
push
inc
mov
cmp
je
sub
gs
mov
xchg
jl
jae
mov
in
sbb
cmc
or
adc
divb
jmp
fmull
jg
jo
push
inc
cmpsl
cmpsb
aad
shll
bound
jmp
jecxz
loop
sbb
push
pushl
pushf
sbbl
cmpsb
or
daa
ss
jne
ljmp
sbb
cmp
out
mov
andl
and
jmp
adc
cmp
out
sub
push
addl
std
dec
sahf
js
div
jg
lcall
movsl
mov
xchg
shlb
xchg
sbb
add
sbb
lcall
or
aaa
gs
push
orl
xchg
xlat
loopne
shlb
lret
decl
mov
sarb
aaa
and
out
mov
xchg
or
mov
clc
incl
stos
and
add
mov
push
push
bound
insb
je
call
icebp
mov
lret
cmpl
pop
cwtl
xor
sbb
jl
roll
xchg
xchg
xchg
iret
scas
sub
sti
jmp
mull
int
repz
ret
div
inc
loopne
je
pop
loop
fwait
add
ss
mov
xchg
ss
andb
cmc
add
les
fwait
sbb
or
push
pop
ljmp
add
lock
decb
lods
lock
loopne,pt
dec
or
fnsave
inc
jb
cmc
js
push
mov
pushl
orl
imul
jnp
fcmovnbe
and
mov
lcall
push
inc
jl
mov
loop
fcomi
loopne
jmp
cmp
or
incl
std
pop
or
mov
jg
stos
lods
mov
xchg
jmp
mov
sub
aad
pop
dec
andb
xchg
andb
decl
outsl
mov
or
jo
sbb
jb
or
test
sbb
mov
adc
sbb
fs
dec
pop
xchg
and
sbb
adc
sbb
or
sbb
outsl
cli
ljmp
xchg
std
pop
popf
sahf
or
and
push
sbb
ljmp
clc
jmp
stc
pop
inc
mov
mov
inc
jmp
mov
and
jmp
bound
sub
and
pop
xor
mov
test
ljmp
mov
add
jmp
mov
dec
pop
rcrl
pop
dec
std
xor
ficompl
jmp
xchg
nop
mov
and
popa
daa
add
cmp
jae
rcrl
out
mov
lock
xorl
pop
jecxz
imul
pop
inc
xor
popa
pop
rorb
bound
pop
inc
sbb
xor
lods
outsb
enter
ljmp
cmp
loope
jg
out
cmp
inc
push
add
pop
jae
mov
jle
jns
push
push
push
repz
lret
dec
sub
in
push
mov
lcall
and
ljmp
cmpb
xor
imul
lcall
pop
shlb
lcall
dec
push
mov
pop
dec
rcrl
adc
subb
pop
xlat
cmp
cmp
out
les
cmp
adc
mov
pop
mov
mov
aam
jb
xchg
sub
sbb
mov
cld
loope
lahf
das
pusha
test
iret
xchg
es
inc
je
fwait
cmpsb
rolb
incl
pop
test
mov
jo
push
stc
push
inc
mov
xchg
jmp
and
std
xchg
and
adc
inc
xor
inc
scas
add
mov
sub
incl
jbe
nop
cmpsl
fstl
movsl
mov
ss
fwait
movl
push
push
shrl
fcomps
push
out
xchg
and
lahf
ret
xor
out
shlb
push
mov
sub
pushl
loopne
aad
mov
mov
mov
push
jge
shlb
lcall
daa
mov
fldenv
sub
in
jae
mov
xor
ljmp
push
les
lcall
jl
adc
fwait
cs
incl
lds
loope
sarb
pop
into
push
xchg
xor
orb
enter
shll
adc
jmp
lods
lahf
outsb
gs
sbb
addb
pop
push
into
repnz
jbe
push
movswl
mov
scas
mov
sti
xchg
lds
jp
jno
sbb
adcb
loop
lock
sbb
popf
xchg
add
push
gs
dec
movaps
lcall
xor
imul
pop
mov
sti
ret
lret
pusha
mov
rclb
jmp
inc
std
mov
mov
cmpsl
dec
mov
in
xchg
sub
fs
mov
xor
decl
daa
in
inc
cmpsb
lcall
cmp
mov
decl
lcall
xor
and
sub
imul
xchg
add
inc
push
pop
outsb
call
out
repnz
cmp
push
xor
fwait
sub
decl
sub
scas
sub
mov
in
fsubs
sbb
xchg
xor
pop
push
jmp
push
mov
cmp
stos
out
loopne
jmp
xchg
jg
cmp
xchg
and
add
push
movsb
movd
insl
stos
popf
adc
jmp
loope
pop
je
add
dec
xor
sarl
fbld
int3
dec
mov
nop
pop
fidivl
mov
ret
sti
stos
pop
xor
add
hlt
sbb
dec
aas
pop
jge
incb
das
sub
test
xor
inc
cmp
out
ljmp
cmp
outsb
add
push
ret
jbe
call
xchg
xor
fwait
add
or
loope
or
xchg
clc
decl
popf
es
notb
aad
hlt
sub
dec
mov
add
pop
dec
flds
aad
stc
es
mov
dec
mov
into
mov
test
fidivrl
sub
cmp
cmp
movsl
nop
scas
adc
mov
push
in
jnp
add
pusha
clc
mov
mov
lea
sbb
pusha
jg
hlt
push
sbb
iret
push
xchg
popf
pop
gs
mov
mov
test
jle
mov
adc
inc
jecxz
int3
push
ds
push
mov
mov
or
lcall
and
jmp
adc
and
in
dec
add
jg
subl
jmp
cmp
arpl
mov
les
dec
das
mov
push
and
mov
test
jmp
pop
imul
int
adc
adc
shr
outsb
jl
aaa
sbb
push
or
add
mov
leave
jnp
or
idiv
call
cmp
mov
add
dec
test
push
leave
pop
in
imul
cwtl
fistpl
mov
imul
jo
push
mov
cmpsl
and
lcall
fiadds
mov
xor
mov
inc
sub
ret
ret
shlb
mov
inc
in
mov
aad
icebp
fists
sbb
jno
aad
sub
jmp
cltd
xlat
daa
cmp
cmp
xor
ja
jnp
pop
jne
nop
xchg
sahf
sahf
mov
dec
and
arpl
xor
or
adc
dec
shl
jo
shlb
push
pop
dec
incl
cmc
ret
add
rcl
or
decl
push
inc
mov
jmp
mov
mov
ds
dec
add
sub
std
dec
ret
sub
push
xor
lods
xor
and
cmp
lret
and
stos
sbb
jp
out
jmp
push
push
aam
vprotd
jns
icebp
push
push
pop
cli
fwait
shlb
call
subl
ss
in
fsts
sub
int
mov
mov
stc
in
rcll
lods
movsl
cmp
adc
jecxz
lcall
int3
fisttpl
lahf
jmp
iret
push
add
mov
aas
pop
fcompl
inc
popl
dec
repz
loop
ljmp
mov
dec
pushf
jl
pop
ja
std
jp
adc
and
xor
mov
imul
lcall
sbb
add
outsb
pop
call
lock
decl
cs
adc
xchg
adcb
inc
xchg
cmp
sub
decl
cmp
add
arpl
mov
imull
mov
inc
ljmp
cli
enter
repz
xlat
cli
insb
push
and
xchg
test
cmp
es
or
movl
mov
repnz
inc
js
js
pop
pop
mov
decl
test
fsubs
cmp
cmpsb
pop
xor
addr16
cld
pop
inc
mov
inc
or
js
fcmove
dec
or
pushf
je
ss
push
inc
call
sbb
call
xor
dec
je
out
neg
mov
add
out
fisubs
leave
imul
lcall
xchg
stos
xchg
or
pop
mov
xchg
xor
jg
jge
add
ljmp
push
std
les
lcall
jge
pop
inc
mov
pop
jae
xchg
push
cmp
pushl
enter
xor
aad
lock
mov
push
jnp
xor
mov
xlat
rorb
stos
jmp
inc
std
push
jecxz
inc
cmc
lea
xchg
adc
fdivrl
xor
int3
ljmp
dec
insb
mov
fldl
add
cmp
mov
inc
out
cld
adc
push
jge
xchg
loope
jge
inc
popa
pushf
js
lcall
test
sahf
idiv
lahf
sbb
add
test
sahf
in
push
cmpsl
add
incl
insb
adc
pushf
cmp
push
push
mov
jp
fisttpl
in
mov
arpl
xchg
je
mov
or
idiv
ljmp
xor
stos
icebp
ljmp
mov
push
lods
sbb
jmp
mov
mov
mov
sarl
mov
in
xchg
pop
sbb
mov
movsb
inc
xor
sbb
pushl
test
js
lret
gs
pushl
and
stos
inc
shrl
add
push
lcall
incl
adc
xchg
clc
xchg
ds
push
shlb
or
xchg
out
cli
pushl
loopne
test
ja
mov
xchg
jno
add
data16
dec
stc
decl
lcall
sub
xchg
sbb
mov
fcom
out
rcr
shr
sub
pop
and
jne
push
pop
mov
cmc
roll
mov
mov
cli
gs
push
xlat
lods
loopne
cmpsb
lods
cmp
pop
mov
call
sti
aas
mov
outsl
cmp
cs
ss
insb
mov
pop
inc
in
cmpsb
dec
out
mov
nop
sar
pop
hlt
dec
mov
mov
sbb
icebp
mov
dec
push
sub
ljmp
xor
loopne
jne
in
loope
shl
iretw
pop
inc
adc
scas
pusha
shlb
call
jge
push
dec
fwait
bound
cmp
jmp
testl
mov
add
cmpsb
cmpl
in
out
adc
hlt
ljmp
scas
xor
imul
rol
xchg
sbb
outsb
decl
in
sub
dec
mov
test
leave
or
push
jle
dec
pop
imul
cld
push
sub
dec
sbb
jb
adc
mov
stos
mov
sbb
call
fwait
insb
nop
lds
push
push
mov
cld
cmpsl
scas
add
dec
mov
push
cltd
test
incl
sahf
xchg
mov
mov
push
xchg
and
lret
or
push
pop
push
mov
jle
ja
les
in
call
cmpsl
sbbl
call
adc
jle
outsl
icebp
cmp
loopne
loope
adc
jecxz
dec
test
add
sahf
lret
jbe
lcall
pop
dec
stos
or
ss
pop
mov
adc
mov
sbb
or
filds
inc
adc
ret
dec
xchg
inc
mov
out
dec
dec
adc
dec
or
fisttps
addr16
adc
cmp
aaa
insb
cli
or
out
test
cmp
orl
ret
sahf
xchg
shll
jg
mov
fsubr
mov
scas
pop
sub
xlat
dec
loopne
ret
iret
rorb
mov
incl
mov
mov
pop
dec
and
mov
cmp
lcall
cmpsb
cmpsl
movsl
test
lea
xchg
xchg
outsl
lcall
push
cwtl
mov
cmp
push
jbe
and
imul
pop
out
fwait
push
outsl
sub
pushf
out
fmull
loop
pusha
fdiv
push
outsb
push
nop
pop
inc
push
in
sbb
jnp
cmp
std
push
nop
pushl
les
mov
xor
ret
inc
loopne
lock
lcall
bound
mov
jecxz
sbb
outsb
cli
mov
xor
pop
inc
sbb
inc
call
repz
sbb
push
xor
ja
cmp
bound
dec
push
leave
adc
jmp
mov
scas
sar
ficoms
mov
jle
in
adc
inc
inc
and
incl
pop
out
mov
sub
lock
inc
les
push
xor
scas
inc
jne
and
js
push
jbe
push
frstor
sbb
jne
fs
cmpsb
mov
out
test
mov
sub
inc
xchg
adc
test
jno
fsubrl
mov
or
inc
lret
mov
sub
mov
jno
jne
push
mov
or
call
and
sbb
loopne
sahf
stos
sbb
cwtl
mov
jecxz
movsl
inc
decl
or
or
mov
fsubrl
insb
mov
xchg
in
inc
sub
inc
aas
mov
jo
jle
xchg
and
add
cwtl
jmp
pop
dec
ret
ret
jbe
movb
xchg
sub
xor
cmp
add
ljmp
ds
in
sbb
testl
orl
mov
cmp
or
mov
sub
add
cmp
je
cltd
bound
pop
out
cmpsl
or
add
int3
cld
adc
xchg
gs
xchg
xlat
imull
out
popf
addr16
rorb
lock
lcall
int3
jecxz
ret
std
cmp
adc
pop
or
sti
cmpl
sbb
add
ljmp
mov
mov
scas
xor
gs
dec
js
scas
icebp
cltd
cmc
jae
es
push
sub
ljmp
xlat
mov
pop
adc
cmp
push
mov
cmp
rorl
cld
fists
or
gs
mov
and
xchg
mov
pushl
sbb
cmpsl
jns
dec
sbb
ljmp
and
stos
sbbl
std
mov
jg
or
rclb
xchg
inc
and
inc
mov
push
xchg
mov
jae
stos
mov
inc
sbb
pop
mov
das
ds
xor
jb
pop
jnp
jecxz
mul
mov
xchg
mov
jle
adc
sti
inc
dec
lds
xchg
inc
sub
jg
decl
mov
push
lods
fwait
push
cmc
leave
jg
push
loop
mov
pop
xchg
add
jmp
addl
out
lock
popa
cld
jo
repnz
cmpsb
jp
mov
sub
dec
mov
pushf
test
sti
pop
popa
std
ljmp
lock
mov
lea
sbb
lcall
inc
inc
cmc
xor
adc
out
and
push
leave
mov
add
test
mov
jp
test
mov
in
xor
jecxz
scas
test
jnp
es
cli
adc
xchg
jne
mov
aas
cmp
pop
and
aas
xchg
pop
js
fcomps
jmp
sub
sub
movsl
fldenv
aaa
repz
ds
inc
mov
shl
xchg
and
jecxz
ss
push
movsl
mov
fidivrs
lcall
mov
mov
cmpsl
ja
sti
lock
and
pop
xchg
sub
push
mov
testl
mov
mov
fdivrl
std
sub
lock
xor
sbb
add
pop
xor
outsl
imul
jbe
imul
jnp
call
xchg
icebp
das
mov
idivl
ret
sbb
fs
call
popf
inc
in
loope
cs
lods
loopne
xchg
sub
xchg
cmp
xor
mov
push
jne
mov
decb
jp
int
pop
out
xor
jg
inc
mov
repnz
jo
mov
rorb
incl
stc
lea
js
inc
mov
push
sbb
push
incl
lahf
in
je
and
decl
or
scas
sub
push
jb
ret
ljmp
sbb
jg
call
pop
mov
movsl
daa
and
pop
jg
mov
fisubs
scas
lret
pop
mov
icebp
fwait
pop
inc
jnp
dec
leave
in
ja
ret
pop
bound
sbb
mov
call
jnp
jb
shlb
push
lea
int
jmp
add
testl
decl
scas
xchg
mov
fsubl
test
pop
sbb
repz
cmpsl
stos
and
in
jne
push
clc
pushl
mov
packsswb
fcomip
cmp
add
in
bound
fmull
pusha
lods
sub
xchg
add
fnstenv
xor
cwtl
clc
fimull
add
jmp
cmp
dec
int
icebp
cld
pop
push
xchg
scas
jle
push
xchg
clc
sbb
outsl
ljmp
xchg
sar
xchg
test
jp
sar
jmp
loop
call
lods
push
sub
mov
enter
in
and
jg
idivl
adc
mov
inc
push
stc
mov
neg
add
minps
lods
push
fistpl
loopne
imul
pop
mov
inc
in
les
faddp
pushl
adc
test
ljmp
movsb
xchg
or
xor
adc
add
jnp
daa
cmc
ret
ret
jge
sbb
jmp
jns
mov
cmp
push
jno
sti
loop
mov
dec
sub
sbb
add
mov
inc
xor
jmp
movsl
pop
jle
push
fadd
ss
jmp
insl
pop
orb
jg
das
clc
xor
pop
ja
mov
cli
mov
push
lock
push
sub
xor
sahf
sub
loope
out
jmp
push
sbb
clc
cmc
fs
cmc
cld
sti
stos
jo
pop
cs
ljmp
ds
xor
fs
aam
icebp
xchg
lea
scas
gs
xchg
push
sub
sub
lahf
dec
jp
out
xchg
push
clc
mov
std
push
add
scas
mov
jb
mov
cmpsb
decl
dec
add
scas
or
and
mov
int
fwait
cmc
pushl
std
les
aaa
sub
out
and
cmp
ds
cmc
adc
cmpb
jno
cmc
mov
lcall
and
rcrl
icebp
stos
in
cmp
shll
pop
xor
push
dec
push
mov
push
lcall
test
push
jecxz
pop
jbe
out
push
nop
mov
push
inc
mov
movsb
incb
loope
call
std
mov
rorb
lret
aaa
and
imul
mov
and
ljmp
mov
loop
add
imull
lock
jo
or
add
sbb
add
xchg
movsb
jmp
xchg
mov
inc
test
call
sbb
xor
rcrb
inc
lahf
das
pop
mov
mov
int
jae
in
dec
add
lcall
aad
stc
sahf
loop
sti
jbe
ret
mov
fidivrs
adc
ljmp
gs
adc
std
cmp
imul
push
add
pop
xchg
jo
ds
sub
sub
pushl
adc
popl
sbb
adc
iret
fcmovb
jo
sahf
repnz
mov
aas
xor
dec
clc
sbb
or
jne
xchg
inc
cmp
cmp
jle
incl
aaa
arpl
hlt
and
or
jnp
sub
out
jne
mov
pop
and
xchg
ljmp
adc
mov
cmp
jecxz
aad
fistl
add
inc
pushf
xor
push
sub
insb
cld
jmp
push
inc
cmp
dec
outsl
pop
fwait
push
xchg
incl
adc
inc
cmpsl
push
incl
sub
pop
fcoms
adc
insl
and
aas
or
subl
faddp
sarl
jg
pushf
and
push
mov
push
outsb
jbe
cmp
mov
push
insb
fucomip
andb
cmp
popa
ffree
xchg
lock
pushl
mov
push
add
inc
sbb
stos
out
push
mov
dec
call
out
inc
pop
pop
je
ljmp
xchg
loop
mov
lds
jl
sub
sub
dec
shrl
roll
aas
sbb
das
push
test
test
push
push
xor
js
out
sbb
xchg
sub
repz
pushl
test
pop
lods
mov
cli
jmp
ja
leave
pop
shrb
rorb
pop
pop
ljmp
mov
enter
lods
push
das
imul
push
das
mov
lcall
decb
mov
aaa
push
dec
mov
stos
enter
adc
in
cmpb
dec
idiv
pushl
hlt
scas
inc
data16
and
jbe
mov
test
imul
sbb
pop
mov
cmp
lahf
ljmp
lcall
pushf
test
inc
movsb
incl
pop
lds
pop
outsl
sbb
aad
adc
mov
sbb
xor
loope
mov
or
lods
or
decl
imull
scas
hlt
cli
daa
sub
dec
mov
cmc
and
call
mov
jae
call
loope
jne
jg
enter
cmp
ret
pop
les
out
gs
cmpsb
sbb
rol
hlt
aad
enter
repnz
sbb
insb
out
sub
inc
ret
inc
int3
fistpl
xor
pushl
add
addr16
push
in
push
mov
std
ljmp
adc
cmp
inc
or
jl
mov
adc
pop
xor
jle
cld
call
into
call
dec
sub
out
pop
sahf
imul
cmp
das
sar
adcb
xchg
cltd
jbe
mov
stos
mov
sub
fiadds
push
shlb
cmp
push
stc
call
mov
mov
mov
mov
pop
xor
add
inc
xchg
mov
pusha
loop
jmp
mov
test
ljmp
inc
repz
mov
sbb
dec
xchg
inc
cmp
std
into
or
jno
jle
into
jg
sbb
cs
and
lcall
fdivr
pop
call
in
dec
dec
hlt
sub
xchg
mov
adc
adc
pop
jnp
sar
mov
cld
mov
cli
insb
roll
dec
dec
dec
cld
mov
jne
jo
xchg
iret
sar
ja
shl
test
xchg
pushf
or
lcall
add
cwtl
stc
test
jle
jmp
cltd
out
scas
cmp
decl
mov
jae
push
cmpsl
xchg
test
test
mov
adc
inc
jb
mov
xor
xor
inc
clc
int
int3
hlt
sbb
dec
fldl
lods
push
addr16
inc
rorl
and
fs
add
add
pusha
mov
sbb
cmp
jmp
leave
jp
setnp
call
in
add
sbb
incl
bound
fcoml
xchg
int3
cwtl
mov
daa
repz
scas
dec
xor
outsl
or
inc
ret
pop
cwtl
das
movsb
xor
or
add
jnp
dec
or
aaa
cld
frstpm(287
mov
sub
aad
imul
ret
push
ret
sbb
stos
add
les
outsl
push
bound
icebp
jge
aaa
iret
stos
and
je
scas
adc
pop
in
xchg
sbb
lock
pusha
cli
in
out
lcall
jns
call
jb
jo
dec
ret
sti
cmp
sbb
push
lahf
inc
jg
sub
pop
jno
pusha
imul
mov
cmc
decl
xor
movsl
pusha
pop
or
fdivl
mov
jecxz
xlat
ss
pop
mov
cltd
loope
jns
int
fcoml
sbb
lods
mov
add
push
iret
sti
hlt
inc
xchg
insb
or
decl
mov
cld
fcmovnu
cmpsl
int3
cmp
lret
mov
cmp
jmp
rol
ja
push
fidivrl
cmp
mov
and
lods
sbb
jge
jb
dec
pushl
fstpt
sub
sub
xor
hlt
mov
mov
das
cli
pop
loope
lret
and
shll
sti
and
mov
xchg
call
sub
mov
cli
lret
aad
stos
pushf
rcll
jns
iret
cmp
aas
inc
stos
popf
ss
lcall
cmp
insb
mov
cmp
sub
sub
and
je
pop
call
fcoms
inc
push
mov
imul
xchg
jmp
inc
dec
jg
aad
in
xor
xor
mov
dec
adc
and
jb
mov
push
std
call
mov
insl
das
sub
cwtl
in
popf
add
xor
orl
sar
jmp
sub
sti
sbb
jp
and
push
pop
jns
mov
sub
lret
mov
or
sbb
cmp
jno
lret
aas
ds
jg
je
out
outsl
es
mov
scas
cli
mov
jbe
inc
mov
popa
les
push
sub
adc
jg
call
mov
inc
xor
mov
enter
inc
cld
inc
loopne
xor
ret
clc
fcoml
and
jle
js
sbb
das
sarb
rclb
adc
stos
loop
push
out
add
out
les
push
into
and
inc
xchg
call
insl
lahf
sbb
xchg
outsb
inc
xchg
insl
js
negb
insl
aad
pop
mov
or
je
inc
js
inc
pop
inc
inc
loope
push
pop
cwtl
sbb
lret
jp
addl
loopne
cmc
in
loope
pop
incl
ss
cli
cmp
fmul
mov
push
movsb
mov
fstpt
pop
ret
cld
mov
cmp
or
and
movsb
cmpsl
stos
pop
jl
popf
inc
int3
mov
or
loopne
scas
or
cmc
call
lcall
adc
and
xchg
push
not
jp
sbb
in
xor
pop
ficompl
push
mov
mov
loope
out
sti
loope
mov
jp
rcrb
rep
push
call
fs
in
in
dec
push
lock
clc
popa
repnz
sbb
adc
sub
mov
fimull
jo
cwtl
bound
lcall
lcall
lret
cmpsb
mov
jo
mov
cmp
call
mov
jle
pop
outsb
or
into
cwtl
dec
mov
imul
rolb
incl
repnz
sahf
dec
add
test
aam
nop
pop
mov
incl
pushf
lcall
in
lret
push
mov
movsl
mov
jno
or
ljmp
pop
mov
icebp
sub
into
add
jmp
xchg
pop
bound
in
add
add
enter
cmpsl
cltd
ds
data16
lcall
loopne
jae
push
int
stos
jl
inc
mov
andl
movb
cmpsb
incl
mov
mov
or
shl
inc
aaa
cmpsl
jmp
add
into
sarb
stc
dec
stc
pop
fisubrs
sbb
scas
mov
in
xor
cli
call
sub
aam
pop
lods
sbb
xchg
jmp
lret
test
xchg
or
lcall
pop
imul
or
pop
mov
or
mov
xchg
adc
cwtl
push
add
lret
jg
pushl
sahf
push
cmpsl
and
dec
cmpsb
pop
les
fldenv
pop
add
pop
cld
push
lds
pusha
or
and
cltd
loopne
inc
pop
xorb
cli
lods
rclb
xchg
add
incl
es
mov
mov
cmp
dec
add
add
dec
dec
pusha
setne
mov
sub
pop
jbe
mov
jecxz
in
push
roll
push
std
add
cmpb
ljmp
in
jnp
fisubrl
jmp
dec
inc
pop
cld
cmp
or
out
mov
fdivr
ljmp
sahf
jae
out
insb
lret
cmp
fldcw
in
cld
imul
xor
push
dec
push
xchg
push
and
add
out
mov
cs
out
fstps
push
aam
ret
aaa
lret
inc
inc
sti
cs
sbb
test
push
jno
add
push
dec
sub
pop
jg
mov
rcrb
mov
data16
fsubl
arpl
test
and
into
mov
jmp
xor
mov
call
insb
enter
sub
imul
add
inc
pop
cmpsb
cmp
and
jmp
out
cmp
ja
popa
and
out
mov
pop
mov
jg
adc
fcoml
xor
pop
fimull
test
dec
dec
mov
jmp
insb
adc
jae
pop
adc
or
jge
cmc
inc
lock
outsl
jmp
xor
mov
std
pushf
dec
and
push
push
das
adc
movsl
or
sbb
iret
mov
loop
pushl
out
push
imul
notb
cs
pop
adc
cltd
in
hlt
notb
fbld
inc
dec
out
xor
dec
adc
sub
adc
repz
push
call
and
test
enter
sbbb
rolb
xor
incl
lahf
daa
cltd
mov
add
int3
dec
dec
ss
xchg
jne
push
pop
mov
pop
fnstsw
jbe
ss
jecxz
add
test
outsb
fsubr
adc
pushl
outsl
std
test
imulb
add
andl
into
sub
pop
shll
jmp
psadbw
ret
xchg
cltd
insb
dec
movsl
mov
fsubr
clc
inc
sarl
dec
pop
sub
scas
insb
sbb
sahf
scas
and
inc
jno
cmpsb
or
imul
call
jge
push
cmp
rcr
in
xchg
and
fldenv
xchg
repnz
lcall
or
inc
adc
jbe
and
enter
pop
imul
push
ja
incl
jecxz
cmp
hlt
ret
mov
sbb
movsb
outsb
inc
loop
mov
rclb
xchg
jg
incl
stos
imull
push
popa
xchg
icebp
rcll
push
jl
dec
iret
fwait
clc
mov
lods
mov
scas
mov
inc
ljmp
ds
rcrb
pusha
rcll
lret
fiadds
add
cmp
ljmp
and
xor
or
push
nop
inc
fdivs
dec
lods
inc
xchg
or
xor
cmp
call
pop
pop
adc
mov
shlb
movsb
push
aad
inc
cmp
jl
push
insb
into
sbb
dec
cmpsb
hlt
call
pusha
xchg
xchg
jae
ljmp
out
sub
ljmp
es
dec
pusha
push
cmp
sub
xchg
jg
imul
aam
mov
pop
mov
pushf
incl
incl
sub
xor
mov
inc
xchg
mov
test
xchg
cmc
mov
aas
xchg
mov
sub
test
xchg
inc
xor
add
push
cmp
cld
adc
lcall
add
push
and
fsubl
ret
xor
sbb
xchg
bound
and
xor
lcall
testb
pop
mov
xchg
add
fdivs
test
sub
pop
iret
fucompp
cmp
mov
shlb
fs
jp
mov
cmpsb
flds
lcall
jmp
jg
sub
out
imul
lcall
sti
sub
push
adc
push
jne
cli
jp
inc
pop
mov
clc
enter
call
jno
cmc
jns
mov
inc
repz
inc
imull
in
lock
mov
es
push
or
loope
pop
or
loope
cltd
add
pop
out
into
lods
ljmp
test
cmp
test
xchg
test
xchg
leave
or
inc
jmp
std
andb
mov
add
xor
out
cli
dec
inc
pusha
cmp
adc
test
xchg
aad
pop
sbb
mov
mov
dec
aad
ret
jl
mov
xor
fs
daa
data16
xor
hlt
pop
insl
pop
std
jmp
pop
stc
negb
cmp
xor
or
adc
sbb
jne
mov
xor
shrb
clc
push
xchg
pop
mov
hlt
lods
repz
push
lods
or
push
lods
push
cmp
lock
jmp
fwait
jmp
fisttps
adc
fimuls
or
enter
mov
and
incl
jge
lea
and
ss
mov
dec
add
xchg
sti
arpl
dec
shrl
les
xchg
push
push
pushl
xlat
mov
sti
cli
dec
dec
imul
repz
andl
mov
pop
mov
out
sub
lret
fsub
out
lahf
inc
jnp
cwtl
in
pop
outsb
subl
sub
ljmp
in
shrb
cmp
scas
fldl
jb
lock
pushl
xchg
out
adc
push
jp
rolb
sahf
push
iret
sbbl
jns
clc
cmp
push
cmp
mov
lcall
pop
jl
mov
movsl
stos
cld
push
lcall
jne
out
imul
addr16
xchg
cwtl
and
std
jl
dec
sar
pushf
out
mov
loopne
stos
roll
pop
cld
std
or
push
or
xchg
or
hlt
dec
pop
insl
orl
ljmp
es
lret
aam
rclb
mov
fidivrl
in
ljmp
jmp
lret
push
scas
pop
aad
stos
hlt
cs
xchg
and
repz
cld
jmp
out
adcl
sbb
sub
int
sbb
pushl
jo
adc
shlb
sbb
mov
mov
lcall
xor
cmp
xor
in
mov
dec
fs
mov
mov
push
cmp
decl
xorl
mov
mov
pop
and
xchg
add
cmp
pop
or
mov
call
dec
push
btcl
push
cmp
fiadds
repz
cmpsl
ret
push
lahf
cmp
cmp
jg
test
fld
cmpsb
or
fnsave
or
adc
adc
out
std
decl
and
iret
mov
repnz
lods
sarl
cli
push
push
adc
push
pushl
mov
xchg
cwtl
jle
cld
sub
xchg
int3
jae
lock
decl
pop
pop
daa
lock
adc
shlb
or
sti
push
fcompl
loop
cmp
add
incl
dec
mov
data16
jbe
lahf
insl
cltd
cwtl
cld
outsl
push
jecxz
xchg
pop
sarl
or
incl
ja
repnz
push
loopne
shr
mov
pushf
lock
push
icebp
jg
cli
push
fnstsw
push
sbb
loop
imulb
inc
testl
pop
mov
mov
mov
into
and
scas
arpl
pusha
fs
pop
push
cmp
pushl
dec
push
ss
mov
and
xchg
add
xor
and
mov
pushl
adc
add
sbb
ja
pop
in
ficoms
lret
mov
mov
movsl
negl
or
mov
push
inc
push
adc
scas
push
rol
mov
es
mov
pop
add
dec
daa
cmp
jg
mov
add
in
movsl
test
test
cmp
stos
dec
push
mov
jne
call
stos
mov
leave
mov
ja
inc
or
clc
sbb
sub
mov
or
mov
lret
inc
mov
enter
aas
out
roll
cli
ret
icebp
jno
jmp
pop
mov
xor
fwait
push
test
iret
test
push
scas
xor
aam
cmpl
sub
adc
jg
xchg
sbb
cmc
cmpl
mov
pop
jns
cmp
cmc
add
mov
or
inc
or
loope
xchg
xor
mov
decl
stc
inc
arpl
outsl
ficompl
out
dec
fidivl
pop
cld
aas
dec
lock
cld
jo
pop
ja
aad
dec
push
rep
jle
push
ret
push
movsb
ljmp
lds
jo
adc
stos
sub
hlt
sub
loop
pop
xlat
or
mov
inc
sub
popf
cmp
xor
dec
movsb
push
les
test
fbstp
pushl
cld
xor
out
inc
bound
addr16
in
dec
adc
sti
pop
push
xor
adc
lds
dec
addr16
popf
popa
jb
out
cmp
out
jne
imul
decl
ljmp
xchg
dec
fidivrs
pop
mov
sbb
mov
fistps
mov
jmp
insb
ss
lds
mov
incl
ja
sahf
aam
subb
add
in
loope
js
shl
xor
mov
sub
adc
rol
fdivrs
sbb
flds
fwait
call
jns
mov
jo
cltd
mov
sbb
inc
mov
incl
or
cmovbe
fidivs
lods
mov
movsb
dec
push
jns
arpl
mov
and
add
into
jp
movsl
or
mov
lret
and
mov
sbb
outsb
xchg
sbb
cmp
push
es
sub
adc
pushl
adc
ret
or
adc
pusha
rclb
rcrl
js
jmp
ret
jbe
ret
mov
test
push
cltd
and
jnp
inc
xchg
pop
xchg
jno
pop
add
jecxz
decl
fwait
and
fimull
stos
int
add
xor
incl
add
pop
arpl
sub
jns
xor
xor
insb
jg
lcall
testb
outsb
adc
lahf
xor
sub
idivb
dec
divb
sahf
adc
xchg
scas
push
mov
jg
in
pop
push
and
mov
cmp
call
out
mov
push
cmp
pushl
mov
fisubrl
inc
and
int3
fs
enter
jmp
je
lods
call
sbb
xor
xchg
lret
mov
fbstp
pop
ljmp
push
xlat
xchg
adc
inc
jmp
mov
movsb
pop
push
mov
leave
pop
outsl
jle
int
adc
dec
sbb
scas
jb
inc
jnp
orb
jno
or
fisubl
mov
es
ljmp
add
pop
imul
xchg
cmp
jmp
mov
xchg
mov
cmp
loop
jbe
jo
xchg
mov
or
inc
mov
decl
dec
sahf
fstl
inc
xor
int3
push
xor
jae
test
ljmp
fisubs
sbb
pop
insb
fucomp
scas
shll
inc
movsl
stos
dec
or
aam
jmp
mov
and
cmp
sub
sub
mov
xchg
pusha
mov
fbstp
fnstcw
mov
out
inc
adc
iret
lods
int3
repnz
pushl
pop
mov
adc
cmp
xchg
sub
xchg
imul
arpl
mov
mov
xchg
movsb
inc
and
jg
push
lret
incl
sarb
add
ljmp
pop
out
pop
xchg
mov
call
js
cmp
mov
jo
inc
lods
es
rorl
lds
pop
aaa
ljmp
xor
xor
scas
in
sub
in
mov
inc
inc
setg
pop
mov
shlb
scas
sbbb
sbb
and
aas
xchg
push
scas
das
js
stc
iret
xchg
ret
xor
and
or
mov
fs
and
xchg
cmp
pop
mov
sbb
arpl
sbb
mov
popa
push
imul
or
dec
out
call
add
inc
leave
mov
mov
outsb
or
insb
movsl
cmp
loope
icebp
decl
test
add
add
xor
int3
cmp
int3
ret
fcmovb
pushf
lds
add
enter
addl
adc
mov
sti
into
push
in
pop
mov
fwait
decl
mov
xchg
xlat
in
mov
xor
js
cmp
dec
sti
cmpb
shl
cmpsb
incl
ret
mov
into
hlt
rolb
jmp
hlt
rolb
test
push
xlat
neg
and
decl
lret
xchg
and
stc
jmp
ret
mov
mov
ljmp
sub
es
sbbb
or
clc
and
aas
push
lahf
or
fxch
aas
jnp
fdivrs
pop
insb
test
mov
pop
push
xor
pop
fmull
decl
or
int
insl
movsl
dec
xor
mov
xor
pushl
pop
cmp
mov
rcll
outsb
xor
xchg
sub
or
lods
rclb
mov
ljmp
adc
test
in
fsubs
out
cli
mov
sbb
cli
not
xor
cld
pushl
push
mov
aad
mov
pop
lock
jg
push
es
xor
jg
inc
int3
lea
dec
iret
inc
bound
add
sbb
jg
cmp
stos
addr16
jle
repnz
pop
inc
rorl
test
mov
sbb
xor
mov
cmp
outsb
cld
das
or
sti
pop
or
movsb
pop
imull
inc
mov
cmp
push
sub
inc
jo
outsl
jge
hlt
and
jns
das
jg
lret
aad
nop
push
mov
sbb
push
icebp
adc
add
cmc
daa
mov
les
xor
sti
sub
or
mov
xchg
inc
inc
pop
clc
call
xor
imul
mov
ljmp
jno
xchg
mov
loopne
adc
pushf
cvtdq2ps
or
mov
cld
idiv
scas
adc
aam
inc
in
out
adc
mov
mov
xor
scas
pushl
sbb
adc
push
adc
out
mov
repz
test
mov
call
gs
mov
xor
adc
out
jmp
sub
cmc
mov
in
xchg
ljmp
pop
add
mov
outsl
test
dec
outsl
inc
adc
mov
lods
push
sahf
sar
cld
jecxz
sti
mov
les
inc
subl
lret
sub
mov
insb
and
ds
js
dec
mov
jg
and
jle
xchg
test
inc
popa
fs
jmp
xchg
adc
dec
and
sti
push
in
cmp
arpl
movsl
pop
mov
push
adc
cld
call
jp
or
int3
push
cmpsb
and
xchg
jg
nop
dec
ss
clc
mov
std
stos
lret
jg
ljmp
add
call
dec
pop
popf
mov
sbb
clc
idivl
dec
push
popf
stos
iret
nop
clc
cmp
push
stos
ljmp
cmp
add
mov
jmp
int
xchg
sbb
ljmp
or
shlb
sub
or
jnp
xor
mov
cmp
scas
xchg
xchg
rcl
sbb
mov
mov
clc
out
inc
cmp
js
push
cld
decl
test
out
sub
mov
outsb
aaa
dec
xor
fwait
add
ljmp
ss
mov
sbb
stos
inc
lods
test
push
pushl
mov
add
jge
je
sarb
dec
call
popa
int3
ljmp
int
lahf
xor
xchg
fistpll
call
or
and
das
das
dec
sbb
mov
stc
hlt
in
jecxz
push
mov
push
and
jge
rcr
test
gs
pop
ret
in
sub
mov
and
push
push
cmp
ljmp
and
xchg
aaa
adc
inc
in
pop
call
adc
xchg
rolb
lret
or
jmp
inc
loop
rorl
aad
jae
fidivrs
popa
out
mov
xchg
inc
and
out
fimuls
sarl
bound
mov
push
inc
leave
cmp
sahf
stc
in
jge
and
out
mov
dec
dec
push
fcoms
jno
pop
sbb
inc
mov
je
repnz
cs
rorl
es
adc
fmuls
dec
xchg
cmp
inc
pop
mov
jmp
push
adc
jae
insb
test
insb
xor
loop
and
jg
adc
in
lods
rcrl
dec
adc
add
lds
cld
orl
incl
inc
ljmp
pop
dec
lahf
mov
arpl
cmp
mov
test
test
dec
push
call
roll
sbb
and
jmp
xchg
xchg
lds
pusha
mov
out
push
ds
sub
fiaddl
filds
icebp
das
ds
int
decb
push
loop
fisttpl
arpl
pavgw
mov
out
or
mov
or
mov
stos
sar
dec
repz
lret
jmp
mov
lcall
mov
xor
call
pusha
cmp
sub
mov
repz
daa
sub
push
push
icebp
call
sbb
stos
xchg
sub
xchg
mov
pusha
cmp
fildll
cmpsl
pop
fwait
mov
popa
stc
push
sub
cmp
pop
push
icebp
cmp
pushl
dec
out
mov
scas
cmc
imul
movsb
jp
inc
inc
sbb
fcos
decl
fsubl
pop
jmp
or
or
jmp
push
in
imul
add
incl
sti
mov
fsts
add
and
testb
pop
sub
inc
jbe
sub
jl
call
pop
mov
xchg
andps
inc
fwait
push
iret
or
and
jl,pn
mov
add
ljmp
insb
xor
and
fiadds
in
mov
and
sub
inc
pop
push
movsl
and
cmp
or
xchg
and
xchg
data16
dec
dec
mov
gs
popf
mov
ljmp
xchg
sub
pop
mov
jmp
jmp
fwait
in
leave
in
pop
sub
mov
push
js
sbb
xchg
ljmp
stos
xchg
cmp
or
dec
xor
mov
outsl
or
lret
imul
aaa
mov
xchg
fs
xor
add
mov
pop
outsb
fbstp
dec
ljmp
jnp
or
loope
ret
push
pop
mov
popf
push
jg
lcall
out
data16
sar
pop
lret
inc
mov
divl
mov
cli
mov
or
jl
sbb
fidivrl
bound
add
movb
pop
adc
adc
ret
out
sub
idiv
jmp
push
je
mov
push
orb
imull
lea
sbb
fbstp
xor
cmpsb
clc
lods
loopne
and
push
pop
xchg
out
adc
mov
pushl
fdivr
fs
push
scas
aas
stos
repz
and
fnstenv
in
repz
inc
icebp
fidivrl
add
add
jle
mov
call
aad
cmp
mov
jmp
lahf
pop
jge
and
ret
sbb
jne
lret
ds
call
pop
es
push
jns
push
lcall
or
rol
push
incl
jae
ret
and
movsb
idivl
jbe
scas
loopne
jl
mov
lcall
jmp
xchg
sti
fcomps
dec
xor
push
mov
outsb
xlat
cmp
ja
push
scas
jnp
xchg
pop
fbld
pop
lcall
ljmp
inc
xchg
xlat
mov
test
cmp
inc
cmp
push
add
int3
repz
decl
pop
inc
mov
negl
mov
sub
lahf
sbb
pop
aas
cli
jbe
outsb
lea
cmpsb
jbe
pop
mov
or
push
into
aad
dec
aad
add
lret
test
pushl
jno
ja
scas
xor
test
push
popf
lods
inc
and
cwtl
rep
jns
jb
mov
decl
dec
jecxz
lret
mov
mov
lahf
sub
call
push
jo
cmpsl
push
stos
pop
xchg
and
outsl
fiadds
lret
pushf
lock
fisubl
clc
fistpll
jg
test
push
lods
into
lret
xchg
inc
enter
pop
fcmovu
push
imul
mov
sbb
decl
ret
and
jg
insl
sbb
lret
stc
pop
fsubrs
test
sub
mov
fidivrl
jl
aaa
pop
lcall
push
and
lock
sti
call
inc
mov
icebp
mov
stos
shrb
cwtl
mov
jb
jg
pop
or
iret
push
std
repz
stc
stos
mov
inc
out
or
jmp
lcall
incl
iret
mulb
call
adc
mov
lds
scas
decl
cmp
inc
int3
jno
push
mov
pop
sub
js
gs
push
adc
sbb
call
inc
icebp
mov
xlat
mov
or
push
sbb
sarl
xor
das
insb
xor
incl
aad
or
arpl
and
dec
add
ljmp
sub
add
jmp
out
in
movsl
add
sub
ret
xchg
xchg
lds
outsl
sbb
ret
jle
cld
and
in
fistpll
mov
mov
inc
adc
push
mov
call
mov
leave
adc
pop
incl
jmp
pop
cltd
mov
fstl
pop
inc
mov
int
mov
lcall
xor
ds
adc
or
dec
je
popw
mov
lods
fdivs
cmp
jbe
jo
incl
out
jmp
cld
cmp
push
nop
cmpsl
hlt
xchg
shll
imul
sbb
and
lcall
sbb
cwtl
je
add
gs
jb
pop
mov
shl
dec
cli
mov
mov
or
stos
jmp
jae
aaa
imul
aas
mov
or
sbb
std
ficoml
mov
test
push
mov
pop
dec
ror
adc
repnz
movsl
repnz
nop
cmp
mov
call
fcmove
lcall
ljmp
popa
add
pop
out
js
cli
jnp
or
repz
out
sbb
std
stos
in
popf
pop
negb
movaps
cld
mov
mov
jmp
add
mov
mov
pop
xchg
xlat
shl
lods
lds
cli
test
mov
jb
sbb
mov
xlat
ret
dec
dec
mul
jo
sbb
push
adc
mov
pop
ljmp
dec
lods
mov
testl
stc
sar
sbb
add
dec
shrb
xor
and
jg
lcall
test
int3
cltd
lods
sub
ss
test
cli
out
repz
decl
cmp
clc
loopne
add
inc
insb
fwait
stc
inc
out
or
mov
mov
pop
mov
lods
test
std
incl
add
dec
jo
mov
push
push
sub
enter
scas
push
outsb
mov
lahf
cmp
fdivl
mov
ljmp
sub
call
mov
movsl
loopne
dec
add
pushl
loopne
fs
stc
and
and
mov
jle
rorl
bnd
add
sbb
clc
in
das
cli
and
pusha
inc
je
decl
mov
test
push
mov
jmp
jle
cmp
test
jbe
inc
sbb
cli
nop
pushf
mov
sbb
sub
jmp
jne
rcr
cmp
nop
and
loop
or
aaa
ret
daa
insl
repz
es
fsubrl
push
sub
mul
dec
adc
dec
jb
arpl
mov
push
and
bound
loop
push
jmp
push
popa
out
fildl
out
and
test
and
stos
mov
add
add
fimuls
cmpl
jne
pop
pop
cmc
jbe
adc
aad
xor
fcompl
push
pop
inc
jmp
mov
jg
dec
cld
jp
jg
jnp
adc
add
or
pushl
cltd
xchg
jnp
push
jle
jg
aaa
clc
inc
clc
push
add
rclb
negl
mov
ja
jb
xchg
punpckhwd
or
and
lcall
mov
mov
lcall
cmp
orl
mov
outsb
ret
inc
call
test
lea
jae
add
imul
std
push
jmp
nop
push
add
lcall
mov
call
andb
lcall
ljmp
or
daa
xlat
xor
inc
shrl
imul
jb
pushl
mov
not
xchg
pop
ret
mov
mov
pop
dec
mov
push
jmp
inc
gs
das
add
xchg
repnz
push
xchg
mov
xor
cmp
incl
jmp
ja
jno
je
fcoms
cmp
fcmovne
outsl
ret
xor
mov
dec
or
ljmp
or
adc
repz
add
scas
gs
stos
push
dec
cmp
or
cmp
mov
outsb
das
cmp
test
lcall
push
pop
and
adc
inc
arpl
pop
adc
lock
cli
bound
xor
mov
and
lahf
imul
or
imul
jp
adc
in
mov
mov
into
test
inc
dec
movsl
adc
incl
iret
stos
xchg
push
ret
ljmp
ds
pop
outsl
outsl
or
or
sahf
pop
cmp
jnp
sbb
mov
daa
rcl
int3
dec
lcall
and
cmpsb
cmp
and
idiv
lcall
xlat
mov
cld
sti
mov
ds
out
nop
jecxz
or
lahf
pop
push
fwait
mov
xlat
in
out
lahf
insb
faddl
cmp
ret
and
bound
in
xchg
mov
mov
xchg
mov
lret
xchg
pop
jecxz
fdivr
jmp
jge
pop
fst
lods
fldt
loop
push
loop
mov
sahf
lret
push
ss
jg
pushf
jp
xchg
adc
adc
call
mov
test
clc
sub
push
sbb
and
lcall
inc
aad
lods
push
lods
outsl
xor
adc
es
mov
cmp
sub
mov
cmp
imul
jmp
incb
adc
hlt
sahf
pusha
repnz
jo
movsb
incl
xchg
gs
mov
mov
in
into
or
mov
sbb
sub
pop
adc
aam
ss
inc
cwtl
aam
cwtl
dec
lods
adc
in
clc
decl
mov
inc
test
movsb
sar
jo
call
xchg
lds
movsb
pop
pop
jns
out
mov
sub
pop
add
decl
jmp
mov
aad
pop
push
rcrb
adc
loopne
add
pop
aad
pushl
loop
xchg
push
jb
es
push
cwtl
int
icebp
sub
insb
aas
incl
jle
and
or
dec
ja
dec
lods
mov
jmp
pushfw
jne
jl
shll
lret
jp
cmpsb
inc
in
stc
in
sbb
push
dec
inc
inc
jmp
adc
sbb
lcall
push
popf
xor
clc
pop
orb
fnsave
addr16
repz
cs
ljmp
ror
test
iret
inc
dec
add
decl
test
and
call
jg
or
out
cmp
xchg
into
jle
and
sbb
jmp
int3
int3
jmp
pop
pop
inc
jge
xor
push
lret
mov
mov
mov
cmpsl
mov
push
xor
xchg
lock
adc
shlb
imul
lcall
movsl
and
mov
adc
and
push
pop
jmp
lcall
jns
mov
pop
mov
nop
pop
push
mov
fldenv
jle
mov
sar
push
aam
mov
gs
lcall
jbe
push
jmp
cld
mov
push
pop
adcb
sti
jg
or
test
test
lcall
decl
jno
cld
xchg
push
fistps
push
sbb
jmp
ds
jecxz
or
mov
fcomip
and
pop
or
stc
pop
inc
cmp
mov
mov
mov
dec
inc
and
adc
popa
test
jmp
and
insl
hlt
loop
pop
fisubs
incl
call
pop
and
movsl
xor
addb
movsl
pop
xchg
adc
fcomip
out
and
cmp
adc
inc
movsl
mov
mov
or
jle
jge
decl
push
jp
or
aas
inc
adc
xor
pop
call
aad
repz
sub
dec
jle
out
lahf
jbe
ret
mov
insb
sbb
ljmp
lret
fisubs
cmpsl
or
and
inc
lcall
in
fcomps
ljmp
jbe
jg
popa
inc
outsb
xor
adc
jmp
jb
cmpsb
loop
pushf
dec
stos
mov
fcoms
inc
mov
dec
pusha
inc
and
jmp
pop
inc
adc
jmp
lahf
mov
jp
fwait
mov
dec
xlat
ffree
mov
scas
pop
scas
jne
aad
decl
pop
xchg
out
pusha
mov
stos
xor
fst
add
xor
out
and
jmp
decl
inc
clc
jp
dec
mov
in
mov
ljmp
sbb
pop
cmp
test
mov
sub
aas
out
imul
pop
dec
push
push
test
jmp
add
pop
mov
mov
jecxz
cmpsb
pushf
jbe
aas
mov
rcrb
mov
out
in
jl
insl
fwait
adc
loope
jbe
das
aas
xchg
gs
push
adc
mov
out
mov
push
push
mov
and
add
fptan
pop
imul
cli
ja
dec
push
pushl
arpl
jae
push
out
mov
sub
int3
into
xor
out
std
decl
push
cmp
xlat
clc
xchg
cmp
bound
xor
lea
fildll
pushf
mov
sub
mov
jle
fwait
and
jg
push
filds
test
pusha
jecxz
mov
pop
std
cmp
fldt
adc
dec
xchg
das
jmp
mov
jg
rorb
and
loop
dec
nop
cmpl
sbb
jge
enter
ljmp
sbb
xchg
mov
scas
decl
out
repz
mov
cli
loop
adc
jge
test
cmp
mov
mov
push
cmp
jge
xchg
inc
and
jg
movsb
outsb
rclb
ljmp
mov
push
insl
iret
out
sub
ficomps
push
sbb
lcall
dec
xor
jae
pop
push
cmp
stos
call
and
sbb
xchg
std
ret
js
cmp
ljmpw
je
adc
add
mov
repnz
dec
mov
icebp
das
aam
lcall
push
sub
mov
mov
mov
jo
mov
dec
in
lods
pop
jle
cltd
loope
jmp
mov
sbb
pop
clc
jmp
xchg
sbb
je
hlt
mov
cltd
mov
dec
icebp
jnp
push
cmp
ljmp
push
inc
xchg
cmpsb
rorb
add
add
maxps
es
add
call
loope
sub
roll
cs
jne
out
decl
nop
sbb
dec
scas
sbb
ljmp
sub
mov
popa
pop
add
inc
dec
sbb
push
addl
lahf
push
sub
pop
incl
dec
loop,pt
sti
testb
xor
mov
into
mov
fdivs
pushl
dec
sbb
aam
inc
int
aas
mov
andb
pop
out
sbb
inc
inc
sbbl
cld
out
cli
pushl
add
push
mov
xor
pop
jl
push
call
or
push
pop
fmull
jo
fdivrs
outsl
das
cli
mov
mov
adc
add
out
mov
sbb
jbe
imul
cmp
mov
incl
cld
int3
adc
push
xor
xchg
lret
push
and
and
into
jle
lcall
cmc
cmp
incl
sub
test
dec
mov
adc
lcall
xor
into
stc
lods
and
loopne
and
jno
lret
and
xor
fnstcw
adc
decl
lock
and
jg
pop
push
sub
xor
xchg
sub
into
loopne
jmp
push
daa
or
push
jno
push
jns
sub
jg
mov
mulb
mov
mov
ss
call
pop
mov
fcom
jae
ds
mov
aaa
inc
call
outsb
jnp
pop
fdivrp
push
ficoms
fstps
insb
mov
loope
push
xor
add
fildl
sub
in
test
and
cmp
xchg
pop
lds
cwtl
lret
movsb
incl
mov
in
push
xlat
push
push
insb
je
dec
test
or
cmpsl
shr
fstpt
lock
jmp
push
mov
jnp
cs
sub
icebp
int
adc
icebp
dec
sub
call
pop
decl
cli
pop
fdivrs
sub
pop
imul
cmpsl
adc
test
mov
decl
and
or
pop
ret
ffree
push
xchg
dec
xchg
fidivrl
notb
lods
aas
clc
in
adc
mov
sub
sub
outsl
jg
adc
inc
xor
cld
push
jl
jnp
mov
popf
push
test
adc
test
jmp
stc
fcompl
jno
cmp
fisttpl
mov
fsubrs
shlb
lcall
inc
test
cmpsl
arpl
lods
push
ret
xchg
dec
mov
dec
call
cmp
cmp
fcoml
das
ss
cmp
shl
fldcw
mov
test
mov
pop
pop
adc
shlb
mov
call
push
adc
push
mov
mov
ficoms
inc
add
jg
je
jbe
mov
mov
push
je
jb
jmp
lods
pop
mov
jae
inc
ret
push
pop
dec
mov
test
dec
and
cs
pusha
fwait
or
ret
fistps
push
inc
mov
in
out
cmp
ret
sbb
rcrl
repnz
xor
call
or
and
rcll
fsubrl
movsl
inc
jg
aad
jmp
adc
and
ljmp
scas
inc
mov
in
pop
lods
lea
sbb
mov
movsb
inc
sub
lds
xor
fsqrt
xchg
lock
cmp
mov
daa
clc
mov
insb
jo
sbb
pushf
mov
int3
daa
dec
in
lods
ljmp
int
clc
inc
pop
sbb
cs
cmp
inc
pushf
xchg
repz
mov
push
mov
int3
in
jp
push
pop
jnp,pn
decl
and
sbb
mov
mov
das
xchg
cmpsl
insl
mov
cmp
dec
pop
jmp
and
dec
and
inc
cmp
orb
adc
push
or
pcmpgtw
lock
ret
xchg
stos
push
jecxz
mov
mov
loopne
xchg
pushf
jg
adcb
and
loopne
popf
mov
repnz
fwait
adc
ljmp
aam
jnp
cmp
xor
mov
mov
aam
fbstp
pop
aad
rcrl
stos
mov
call
pushl
pop
in
and
jl
fistpl
jbe
addr16
cwtl
lcall
xchg
inc
xchg
shll
rcrb
dec
jg
inc
int
testb
sub
or
jmp
popf
add
in
pop
fwait
repnz
imul
sarl
fisttps
or
add
enter
dec
enter
inc
out
cli
mov
jp
lcall
mov
sbb
or
push
ljmp
addr16
pushf
pushf
jp
out
cmp
decl
mov
dec
daa
out
mov
insl
pop
mov
decl
push
mov
popf
js
pop
lret
and
push
aas
pushl
fmull
lods
mov
pop
dec
dec
adc
push
adc
dec
into
and
add
sbb
adc
incl
sub
fsubrs
in
add
jmp
daa
inc
mov
outsl
add
icebp
mov
repz
xchg
push
sub
stc
std
mov
ret
pop
cmc
jnp
cltd
stos
cmp
inc
mov
cmovae
test
dec
xor
cmc
orl
add
lcall
shr
ljmp
rorl
int
leave
movsb
jg
insb
and
jle
cwtl
mov
cwtl
mov
mov
jmp
in
inc
jle
out
addr16
sbb
lcall
pop
or
test
cwtl
je
scas
jnp
pop
test
inc
in
jmp
outsl
gs
jmp
and
inc
or
jb
sbb
mov
fnstsw
dec
pop
or
les
inc
cmp
xor
divb
scas
mov
push
push
into
pop
addr16
sbbl
jl
xchg
push
add
or
xchg
int
ss
or
mov
add
shll
adc
xor
scas
or
sbbb
repz
test
stos
add
call
dec
and
xchg
lock
out
push
sbb
sbb
sbb
scas
lock
dec
das
xorl
incl
cld
jb
pop
add
sbbl
call
aad
cmc
jns
mov
jg
cmpsb
cmc
gs
xorl
mov
test
push
mov
or
fs
nop
push
mov
push
or
jae
xchg
or
out
jl
dec
cmpsl
ret
mov
adc
and
xchg
and
pop
std
call
pop
jecxz
push
out
sub
stos
add
xor
lcall
cli
je
mov
lahf
inc
adc
inc
push
ljmp
rcrb
ja
mov
in
adc
push
aad
or
add
ljmp
sbb
push
scas
inc
and
negl
push
xor
and
incl
mov
inc
push
movsl
mov
sbb
sbb
popf
xchg
sbb
jg
or
push
mov
enter
dec
push
dec
mov
push
sarl
popf
xor
cmp
add
xor
jg
test
and
lret
aam
inc
into
in
fdivl
imul
cmp
mov
aad
cmpsb
stos
insl
sarl
lods
cli
xor
sub
mov
out
push
ss
mov
ljmp
inc
xchg
sti
mov
std
imul
add
mov
fisttps
pushl
mov
fimull
dec
dec
inc
push
les
jbe
fyl2x
mov
idiv
sar
outsl
ja
negl
jp
out
insb
sbb
nop
cli
ficoml
sar
decl
jb
sbb
add
mov
lds
lea
fmull
int3
pushl
scas
mov
ja
sar
sbb
in
dec
gs
cwtl
cwtl
add
dec
sti
xor
imul
ljmp
xchg
push
sub
mov
fwait
sbb
pop
xchg
in
sub
xor
in
pop
add
shl
lcall
cs
aas
in
rcll
mov
add
in
fstpl
lret
push
push
repz
jl
call
cltd
mov
ljmp
lret
sub
arpl
shlb
not
push
ror
jp
pushl
inc
and
xchg
int
fidivl
rorl
add
sbbb
or
loope
nop
ljmp
loopne
les
dec
inc
popa
dec
jle
and
es
xlat
loop
inc
xchg
in
xchg
mov
push
aam
cmp
sbb
xchg
pop
mov
mov
cmp
jmp
decl
or
or
ja
cmp
mov
pop
movaps
incl
mov
push
ljmp
hlt
mov
push
fwait
jo
xor
and
ljmp
lods
xchg
adc
dec
push
push
les
test
repnz
dec
jl
mov
push
jp
cmpsb
mov
stos
pop
add
cmp
mov
stc
jne
pop
cmp
mov
adc
int3
repz
test
dec
sahf
loopne
das
mov
or
jge
or
in
xorl
lcall
add
mov
movb
pop
into
hlt
mov
adc
ret
mov
or
pop
inc
stos
jns
pop
sbb
jg
push
std
jg
and
mov
xchg
push
mov
fisttps
push
ficoml
sub
mov
lret
dec
icebp
push
es
out
enter
mov
push
mov
sub
fcmovnu
pop
jp
daa
jb
sbb
pop
in
pop
pop
sub
adc
inc
pushf
xor
incl
sbb
xor
fnstenv
mov
mov
push
push
sbb
mov
cld
icebp
ss
repz
lret
inc
adc
mov
mov
xor
mov
mov
xchg
mov
cld
or
mov
sub
sub
adc
les
lret
sbb
lcall
adc
jae
cmp
mov
in
inc
cwtl
xchg
scas
and
inc
mov
mov
push
or
sub
enter
inc
mov
cli
subl
mov
cmc
or
mov
jecxz
cltd
push
loope
leave
inc
fbld
ljmp
cltd
cmp
gs
mov
xchg
in
repnz
push
inc
hlt
mov
dec
call
lea
mov
aas
xor
inc
pusha
fists
scas
pop
mov
js
mov
rcll
inc
xor
call
movsb
xchg
ljmp
gs
sub
aad
scas
jo
xor
pusha
sbb
xchg
cli
pop
ud0
mov
ret
and
add
mov
cli
decl
enter
adcl
stos
inc
sub
cmp
ljmp
push
adcb
mov
fldcw
push
ja
cmpsb
push
cltd
out
add
jg
aas
sub
mov
sbb
fwait
jns
add
ljmp
inc
sub
sub
jne
mov
outsb
push
mov
mull
xor
test
adc
push
mov
mov
sub
jmp
jle
cmp
stc
cmp
mov
mov
jbe
sbb
stos
cmp
pop
leave
add
call
aad
xorb
repnz
scas
in
js
push
dec
pop
mov
sarl
or
lods
fnstcw
mov
sahf
insl
inc
adc
push
das
scas
push
sti
leave
es
js
fcoms
sbb
jp
jmp
mov
sbb
xchg
std
lcall
push
sbb
dec
push
test
ftst
in
lods
dec
and
mov
sbb
ret
pop
andb
jo
push
cmp
lcall
lods
rcrb
mov
cmp
out
daa
xlat
mov
cmpsl
aas
mov
loope
leave
sbb
repnz
sub
cmp
mov
insl
mov
fstps
xchg
xor
decl
sub
imul
jle
insl
pop
mov
push
jmp
jg
xchg
das
or
jo
dec
push
xor
pop
jo
call
repnz
mov
cmp
push
data16
sbb
adc
mov
aad
jno
ljmp
fnsave
testb
push
in
lret
add
or
and
push
inc
sti
push
decl
cmp
pop
into
nop
pop
inc
pushf
xor
add
mov
leave
mov
xchg
jns
or
inc
jg
lret
adc
into
and
cwtl
mov
pop
and
imulb
frstor
rcrl
jne
mov
jg
fwait
popf
push
add
das
sub
cmp
orl
insb
fdivr
gs
fmul
incl
dec
mov
mulb
fcoms
pop
jmp
push
mov
cmpsb
cwtl
mov
pushl
clc
dec
and
rcrb
jno
aam
jnp
pop
add
dec
inc
call
pop
jns
movsb
jno
jmp
jmp
leave
mov
aam
movsl
or
mov
push
pop
or
jnp
mov
test
cmpsb
jnp
sahf
ljmp
jbe
bound
cmp
sbb
gs
adc
lret
jo
shlb
divb
aad
movsl
pop
jns
out
fidivrl
mov
inc
mov
jmp
adc
out
lret
imul
mov
hlt
mov
jmp
cmp
lcall
outsb
addr16
arpl
pop
mov
bound
fsubp
push
popf
aam
xorl
ljmp
mov
cmpsb
pause
fsubs
xor
xchg
xchg
nop
cmp
jp
or
call
rorb
dec
iret
cltd
mov
in
jecxz
and
mov
sub
and
mov
mov
sbb
jne
mov
adc
stos
movsb
incl
cmp
in
js
cmp
and
jl
iret
sub
mov
incl
sti
cvtps2pi
lods
cli
pop
popf
xchg
test
stos
inc
std
cmp
call
daa
mov
mov
call
in
xchg
jle
lcall
call
add
xchg
inc
outsl
mov
push
and
inc
mov
pusha
mov
mov
xor
mov
ljmp
fisttps
and
xchg
jg
inc
inc
push
cwtl
mulb
mov
imul
pop
aaa
nop
mov
leave
hlt
decl
xchg
xor
xor
scas
mov
push
aad
cmpb
push
out
mov
pop
ficompl
cmp
gs
xchg
dec
pop
scas
test
mov
push
push
out
push
add
pop
xchg
jne
dec
dec
in
movl
incl
bnd
jg
cmp
int3
and
push
addl
loopne
filds
arpl
add
fs
sahf
pop
jae
mov
push
or
or
inc
stc
insl
sbb
aas
ljmp
sbbl
lock
mov
inc
mov
cmp
jle
ret
jp
fnstcw
ror
mov
adc
loop
pop
cmp
cld
jmp
mov
push
outsb
xchg
push
mov
cs
jg
jg
pop
shll
ja
mov
inc
jge
scas
mov
incl
xchg
push
fldcw
xlat
lods
cmp
mov
xchg
mov
ljmp
mov
insl
pop
push
xchg
pop
sbb
lret
push
shlb
pop
loopne
xchg
mov
jns
dec
out
fcomip
mov
mov
xor
push
test
mov
inc
insb
mov
cmpb
incb
xchg
or
jecxz
aam
jmp
and
dec
jno
lock
aas
fs
jns
adc
mov
mov
sub
ret
enter
aas
cmp
jb
dec
clc
rcrl
fmuls
lea
jg
inc
xor
fisttps
in
lods
sti
dec
mov
test
fsubs
loopne
cmp
lcall
jmp
inc
dec
adc
sbb
out
into
dec
enter
xchg
xchg
or
je
pop
pusha
loop
fstp
pop
add
mov
pusha
add
ret
xor
push
mov
sbb
jno
inc
push
test
loope
pusha
clc
mov
loop
call
xor
mov
cmpsl
jl
inc
and
decl
jmp
ljmp
dec
aam
in
mov
mov
push
movsl
push
sub
inc
in
addr16
fdiv
sub
xor
push
sub
pop
sbb
pop
iret
aad
dec
test
incl
aaa
popf
pop
lea
jp
nop
jl
es
and
jg
sub
out
cmp
leave
or
push
cmpsl
js
clc
cld
mov
std
inc
sub
push
add
dec
in
xor
pushl
push
dec
sbb
cmp
push
xor
sub
test
jp
push
dec
incl
scas
jmp
jmp
or
cmp
icebp
in
mov
int3
stos
ss
push
je
outsl
mov
pop
pushf
loopne
stos
pop
fyl2xp1
xchg
ja
scas
js
inc
cld
pushl
xor
lods
arpl
out
inc
in
and
sbbb
jo
jne
jg
jb
cli
inc
dec
xor
mov
test
adc
xorb
pushl
pop
xor
outsl
aam
jo
mov
fisubs
std
in
lods
rorl
cmpl
lock
repnz
sub
aad
std
idivl
add
or
call
push
out
shll
outsl
inc
push
lea
ja
popa
dec
adc
fisubrs
scas
and
jmp
fwait
aam
inc
jae
pop
je
fwait
push
andl
les
les
mov
paddd
xchg
or
pop
js
add
clc
rclb
fidivrl
sbb
and
mov
jnp
outsl
jnp
adc
rol
sahf
inc
and
mov
lahf
das
xor
lea
jg
sub
xchg
push
jl
mov
test
ljmp
pop
notl
leave
in
adc
ja
lock
mov
incl
xchg
pop
inc
shrl
es
cld
mov
ja
fidivs
in
sar
add
sbb
fwait
les
xchg
adc
push
and
adc
out
ja
xchg
test
pop
inc
fldenv
mov
jnp
or
jmp
pop
cmc
adc
jmp
add
mov
or
pushf
arpl
pushl
mov
mov
enter
call
pop
adc
push
xor
xchg
cwtl
repnz
ficompl
mov
ds
fildll
repz
lods
xchg
jmp
push
mov
cmp
popa
gs
loopne
or
loope
cli
cltd
rorl
enter
mov
sub
sbb
shrb
cli
ja
sbb
add
int3
outsb
push
std
imul
cld
mov
or
xor
mov
xor
jnp
mov
or
ljmp
notb
pusha
rol
fstpl
cld
pop
adc
mov
lahf
sbb
mov
lea
addr16
lret
or
stos
pop
jae
gs
push
fcmovbe
pop
fidivs
jg
adc
fiadds
xor
gs
je
inc
hlt
daa
cmp
popf
cmpsl
cmpsl
cmc
out
cli
inc
aad
les
repz
decb
shlb
cli
pusha
mov
xorl
outsl
xor
out
dec
xchg
xchg
fs
mov
add
jmp
and
sbb
test
lret
mov
xchg
sbb
call
clc
aad
int
in
sbb
bnd
inc
in
ljmp
mov
fdivl
int3
arpl
xor
push
pushl
sbb
mov
call
mov
imul
sbb
or
pushl
pop
push
cmp
movsb
mov
mov
dec
lret
adc
call
pop
xor
std
or
int
xchg
inc
jns
js
jne
mov
add
jbe
cmp
fcompl
push
dec
clc
pop
and
popa
lcall
cwtl
and
cs
sub
jbe
ljmp
rcl
jae
shll
aas
sub
sub
aad
dec
lods
in
in
cld
lea
mov
xchg
imulb
pop
mov
call
movl
mov
fnstcw
push
sub
gs
ljmp
and
cmp
imul
and
mov
push
fadd
jg
mov
aaa
pop
into
inc
push
fwait
dec
loopne
fnstenv
xor
sub
out
cli
mov
xor
mov
test
pop
jnp
sbb
cwtl
int3
adcb
ljmp
xchg
push
mov
sbb
stos
push
inc
mov
cmpsl
lret
incl
fidivl
cmpsl
mov
jne
inc
nop
fwait
mov
popf
push
xor
pop
scas
push
pop
mov
test
rclb
mov
or
js
dec
sub
lcall
popa
into
adc
gs
out
xchg
mov
xlat
lret
lret
and
test
mov
pushl
dec
fsub
clc
sub
fstpt
out
hlt
popa
sbb
mov
mov
dec
push
pop
inc
test
jge
and
out
movsb
stos
iret
xchg
dec
adc
mov
data16
push
push
insb
stos
and
jg
movsb
dec
call
push
pusha
add
cli
lods
xor
aaa
lods
push
xlat
jns
out
filds
or
sar
jge
imul
andb
pop
test
xchg
jae
xchg
jle
mov
push
xchg
mov
fnstcw
adc
inc
clc
out
incl
cmp
jb
cmpsl
xchg
fidivl
pop
add
call
mov
jle
sar
loope
pop
das
das
fistpl
dec
mov
cli
mov
fildl
das
adcl
sbb
popl
fwait
fwait
mov
mov
push
pop
scas
sub
out
push
and
mov
dec
jbe
loopne
mov
and
jmp
xchg
mov
in
int
jno
pop
stos
pop
jb
aad
and
jne
jns
dec
aas
outsb
jg
insl
sub
adc
decl
movsb
sbb
or
add
adc
ljmp
stc
cmp
sub
lcall
sbb
xchg
and
dec
std
lahf
andl
mov
push
out
jmp
call
subb
pop
dec
xchg
in
xchg
mov
mov
ficomps
mov
push
dec
dec
adc
add
pop
pushf
mov
fidivs
push
cmp
pop
sahf
jmp
sub
xlat
lcall
insl
sub
dec
xchg
dec
out
push
movsl
mov
lret
insb
subl
fisttps
adc
xchg
mov
fdivrs
xchg
jmp
mov
clc
fs
or
in
mov
out
into
outsl
clc
or
hlt
mov
cs
jg
dec
daa
push
xor
pop
enter
inc
xor
xchg
and
push
outsb
inc
ja
lcall
insb
jle
cltd
mov
popf
mov
jb
sbb
xor
aas
aad
clc
mov
int3
xlat
fucomi
movsb
pushf
scas
cmpsl
jmp
xchg
fmuls
sbb
call
jmp
aas
xchg
mov
fwait
sub
dec
push
std
sarb
testb
fcoms
aad
and
dec
mov
inc
mov
clc
stos
add
mov
jmp
add
mov
stc
adc
ja
jnp
xchg
repnz
incl
mov
mov
cltd
cli
push
mov
push
sbb
and
or
mov
mov
fisubs
out
movsb
sub
pushl
jge
insb
cmp
inc
sub
fistpl
xor
or
divb
jmp
enter
xor
push
dec
sub
mov
movsb
dec
pop
idivb
insb
adc
shlb
shrb
cmpsl
mov
das
push
out
sub
mov
mov
jle
imul
fldt
scas
popf
mov
out
pop
in
into
clc
push
jnp
dec
dec
fistl
xchg
dec
ret
in
push
xchg
pcmpeqb
pushl
aas
pop
inc
stos
notb
data16
push
nop
and
ds
fsubl
mov
loop
xor
fidivrs
push
sbb
push
or
dec
nop
outsl
les
cli
idiv
push
inc
xor
inc
jecxz
pop
xchg
ficoms
sbb
loopne
jmp
and
jge
in
sbb
mov
outsl
ss
mov
loopne
enter
scas
in
cmp
decl
stos
mov
mov
sub
jo
push
ss
mov
dec
xor
incl
mov
and
fisttpl
arpl
sahf
lods
fcmovnu
cld
call
xchg
add
daa
push
out
out
mov
ds
out
dec
jae
iret
cmp
pushl
dec
movsb
shl
xlat
cmp
push
and
movsl
cmp
dec
push
pop
cmp
pushl
imul
cmp
scas
adc
and
rcll
jne
xor
jmp
dec
loopne
mov
loopne
cmp
and
dec
sub
mov
mov
jg
rcll
mov
pmaxub
pop
push
jb
sub
rorl
or
mov
xchg
dec
in
cwtl
cmp
shlb
jp
sub
pop
jle
in
mov
outsl
clc
mov
sub
mov
dec
mov
xchg
add
incl
jle
pop
xor
or
push
cld
push
nop
ljmp
cmpsl
out
adc
jne
pushl
andl
jl
add
into
ds
cmp
push
and
mov
pop
cmp
lret
xchg
mov
in
inc
scas
and
cmp
popf
stos
xchg
clc
pop
fdivr
decl
dec
cmp
xchg
mov
mov
dec
inc
jle
shll
sahf
movsb
xor
adc
aaa
mov
vpsrld
mov
shll
ljmp
and
fistpll
inc
rclb
loope
test
push
sbb
sub
xlat
sbb
lcall
jmp
jae
mov
outsb
mov
cltd
pop
jo
mov
ret
pop
xchg
mov
decl
decb
push
in
mov
dec
add
and
sub
dec
push
add
pop
inc
shlb
arpl
cmp
outsb
push
fdivr
shr
and
xchg
or
imul
ja
xchg
mov
sbb
call
mov
add
or
out
or
inc
ja
clc
lcall
dec
xor
je
shlb
add
push
bswap
inc
sbb
inc
cltd
cmp
or
out
clc
decl
pop
and
bnd
pop
push
add
mov
dec
add
inc
push
push
hlt
incl
repnz
sub
dec
add
inc
or
out
scas
movsb
les
or
pushf
loop
into
into
cmp
fistps
add
add
data16
dec
cmp
jmp
sub
lahf
jo
test
lcall
in
ret
jecxz
pop
loope
clc
add
mov
rclb
lcall
mov
call
push
orb
iret
jno
out
or
andb
jmp
xchg
aad
mov
ja
imul
lret
shll
sbb
inc
push
loope
bound
mov
pushf
mov
inc
fists
pusha
add
dec
imul
ss
out
enter
sbb
scas
xchg
inc
aam
cmp
pop
aad
leave
inc
push
fsts
add
repz
int
jbe
pop
das
mov
jmp
adc
sbb
lods
popa
leave
mov
mov
push
mov
mulb
outsl
sub
ljmp
popa
pop
push
mov
stc
stos
xchg
std
inc
xor
mov
pop
adc
iret
jg
decl
push
mov
mov
or
inc
ret
cltd
adc
dec
fldl
ljmp
movsb
gs
mov
mov
in
das
or
data16
pop
enter
inc
dec
pushf
or
in
mov
decl
mov
fimull
pop
scas
test
incl
xor
cli
pop
scas
xchg
mov
insl
shrl
shlb
inc
outsb
or
push
sar
ljmp
push
or
bnd
shrb
push
out
add
add
fs
mov
mov
test
xor
out
cli
lcall
mov
pop
mov
jnp
je
pushf
fdiv
push
adc
incl
test
mov
sbb
ja
push
jg
cmp
push
pushf
and
insl
mov
out
notb
fldcw
pop
popf
outsl
aad
inc
pop
push
xchg
xchg
or
dec
push
je
dec
incl
adc
inc
mov
push
imul
movsl
sub
call
sbb
cmc
mov
sahf
mov
xchg
js
nop
rorl
lcall
cmc
call
xchg
leave
sahf
lcallw
inc
incl
dec
sahf
in
mov
cltd
lods
mov
jle
xorb
add
jnp
xor
iret
arpl
inc
add
stos
int
jmp
into
push
cmc
mov
jae
push
jns
pop
test
loope
or
mov
sub
mov
pop
sub
call
mov
out
adc
insl
dec
add
jmp
xchg
xchg
scas
dec
cmc
clc
out
push
sbb
lret
rcll
lea
jns
cwtl
icebp
out
mov
fidivrl
xchg
mov
cmp
loopne
test
mov
or
movsb
cs
pop
iret
outsl
mov
or
test
in
ss
mov
xchg
clc
sbb
xor
jle
daa
sub
call
int
jmp
and
repnz
jmp
push
or
cmp
lcall
into
mov
dec
test
sub
xchg
enter
jno
push
add
add
cmpsb
stos
subl
out
dec
jge
xor
adcb
xor
sbb
fsqrt
call
add
call
lods
stos
xor
sbb
pop
leave
adc
call
cli
xor
test
ret
mov
pop
jo
fwait
std
in
mov
mov
popf
sbb
push
cld
inc
xlat
sbb
or
clc
jns
mov
cmp
lods
fcmove
in
inc
mov
movsb
push
popf
and
inc
jns
and
in
jns
mov
jl
sbb
aad
lret
adc
mov
jb
jp
jle
shl
in
sbb
incl
hlt
out
shrb
mov
pop
out
outsb
das
dec
imul
loopne
repnz
sbb
adc
outsl
cli
decl
decl
nop
enter
cmc
lret
mov
push
add
loopne
jns
pop
pop
outsb
or
iret
jne
or
ljmp
adc
mov
xlat
pop
xor
xchg
mov
ds
lret
test
fwait
ljmp
xchg
int
gs
pop
mov
pop
xlat
adcb
cmc
mov
xchg
popa
scas
mov
and
call
mov
push
cmp
mov
fisttpll
loop
out
sbb
and
mov
das
clc
jge
mov
mov
sub
inc
movsl
gs
test
fs
mov
loop
sti
iret
xor
xor
push
insl
cmp
es
outsb
cli
add
mov
fiadds
mov
fst
xchg
inc
mov
mov
pop
sbb
and
jg
out
les
orl
add
pop
iret
add
jl
push
fs
lcall
into
cmp
mov
in
cmpsl
inc
and
push
ja
pop
sub
pushl
sub
mov
into
push
mov
adc
pop
and
inc
movsb
and
les
sub
fsubl
inc
push
loopne
jns
pop
pop
sbb
outsl
scas
js
inc
lods
idivl
mov
fistpl
xchg
hlt
lcall
pusha
jb
popf
push
dec
fiaddl
xchg
repz
mov
mov
fistpll
add
fadds
lock
cltd
enter
mov
jg
mov
mov
lret
push
mov
in
sub
jb
jl
dec
sub
ljmp
lahf
mov
dec
cs
xchg
pop
subl
sbb
fidivrl
rclb
mov
xor
cli
mov
cld
test
push
mov
cwtl
bound
mov
inc
mov
or
pusha
cmp
mov
aas
sti
shrl
out
es
mov
xchg
pusha
cmpsl
jmp
rcr
out
jecxz
lods
jmp
add
loopne
mov
aam
insl
les
push
adc
mov
push
mov
pop
mov
in
add
cmp
lcall
add
xchg
xorl
mov
add
adc
jmp
cmp
das
nop
push
mov
popf
std
lds
shrb
pop
add
decl
xchg
adc
data16
mov
mov
pop
nop
test
out
js
mov
clc
adc
xor
pop
std
faddl
dec
lret
xchg
xchg
test
test
pop
cmc
mov
lcall
test
or
push
jmp
lcall
lcall
int3
test
pop
fadds
push
adcb
push
pop
sub
jnp
pop
call
xor
rorb
lods
xchg
sbb
leave
mov
mov
idivb
cmpsl
pusha
loopne
ljmp
add
xorb
hlt
mov
in
push
dec
clc
stos
mov
in
lcall
pushl
xor
push
inc
xchg
js
mov
ret
add
and
int3
es
pushl
xor
stos
mov
mov
push
jmp
lcall
shll
xor
movb
fldt
mov
scas
je
add
dec
xchg
lods
lock
out
jl
cltd
add
div
mov
or
or
inc
es
inc
push
cmp
mov
pop
pop
icebp
arpl
into
mov
je
sbb
fdivl
inc
fs
jp
decl
lcall
ret
push
fidivrs
xchg
clc
pop
xorl
dec
adc
jo
inc
push
lahf
ljmp
cmpsb
sbb
pushl
fisubrs
adc
pop
cmp
xchg
ret
xor
push
mov
movsl
repz
lcall
push
xchg
movsl
or
add
div
mov
mov
mov
mov
insb
pop
mov
cmp
hlt
jmp
insl
push
out
add
adc
fcmovbe
push
jmp
test
rep
mov
mov
mov
filds
cmp
inc
shll
fwait
jbe
aam
iret
std
in
sbb
sub
incl
cltd
xor
and
psrlw
mov
test
pop
not
inc
ljmp
sbb
jmp
test
push
push
stos
fxch
jmp
cltd
cmp
sbb
shrb
loopne
jl
stos
xchg
and
out
int3
ficoms
je
push
cltd
lds
jg
lods
sbb
sub
ds
lret
ret
incl
push
shr
jae
mov
insb
sar
push
inc
fldt
sti
clc
lock
jecxz
insl
jg
gs
pop
xchg
or
xchg
sub
mov
push
leave
add
adc
dec
sahf
xchg
mov
ljmp
mov
movsl
or
leave
fisubs
sbb
dec
inc
ja
ss
jmp
ljmp
lea
cs
hlt
iret
dec
fcomp
pop
cmp
pop
pop
clc
aam
repnz
pop
and
inc
adc
rol
cmp
mov
stos
jmp
enter
in
addr16
call
push
and
adc
dec
mov
sbb
pushl
stos
sahf
dec
mov
pop
popl
dec
mov
inc
jns
fcomps
lods
out
jmp
sbb
or
xchg
push
push
inc
jp
dec
xchg
or
dec
push
xlat
mov
shlb
std
dec
repnz
push
imul
test
dec
xchg
pop
aas
push
jge
out
jg
dec
xchg
imul
ret
push
dec
testb
dec
sbb
dec
clc
fmuls
push
inc
mov
mov
repz
icebp
ss
fstpl
ds
cmpsb
insb
outsl
lcall
mov
pop
xchg
sbbb
fdivrl
divb
sub
mov
orl
aaa
dec
push
or
call
lcall
je
pop
scas
icebp
lahf
bound
xchg
fld
int
push
fisubrs
jmp
lcall
and
jmp
clc
popf
nop
icebp
mov
push
adc
lods
imul
xchg
test
lcall
xor
fisubrl
aad
mov
rcll
xchg
cmp
adc
pushl
push
pushl
outsl
out
lcall
pop
push
mov
cmp
sub
add
push
aad
mov
sbb
or
decl
mov
iret
cmp
mov
mov
mov
pop
ss
fdiv
ljmp
lcall
mov
xchg
or
shrb
mov
dec
pusha
pop
cli
in
mov
inc
xchg
mov
fcoml
ljmp
adc
sar
jo
adc
jmp
int3
sub
jnp
aaa
push
mov
divl
cmp
xchg
aas
imul
and
xor
lcall
lds
cmpsb
cmp
jmp
ljmp
in
cwtl
ds
and
dec
ss
mov
xchg
in
mov
call
popa
out
pop
jno
mov
in
lret
pop
imulb
fbld
dec
jle
fs
adc
outsb
mov
bound
icebp
push
dec
adc
rorb
sub
push
enter
inc
sbb
inc
fiadds
loopne
inc
int
or
mov
sub
pop
sub
cld
imul
mov
add
mov
aas
call
hlt
inc
dec
push
dec
stos
ds
std
push
mov
mov
lock
add
push
push
scas
xchg
ret
adc
repz
sbb
or
cmp
sub
stos
aas
mov
push
mov
aas
scas
jmp
enter
sbbl
out
pop
mov
jg
push
dec
mov
int
mov
in
add
jmp
sbb
sub
xchg
leave
cmpsb
lcall
data16
and
loop
and
sub
inc
insb
cld
out
loope
sub
xorb
mov
and
stos
sbb
mov
inc
iret
cmpsb
xchg
pop
hlt
jae
xor
mov
push
dec
xchg
sbb
shll
loopne
or
xchg
idiv
dec
scas
jg
lahf
int3
xchg
outsb
inc
and
inc
mov
xchg
jae
mov
xlat
inc
jnp
es
lods
push
lock
in
dec
fisttpl
pop
ljmp
sbb
lock
xchg
loope
loope
movsl
test
in
push
out
sub
xor
lcall
mov
lock
lcall
rcll
mov
lret
jnp
scas
pop
in
rcrb
jmp
repz
sbb
cmc
lcall
cli
cmp
loop
sub
lods
daa
in
add
xlat
or
out
cli
mov
cmp
rcr
mov
or
mov
data16
pusha
addl
fdivl
dec
jne
xor
cmpsb
test
push
lcall
scas
gs
dec
mov
cltd
sub
mov
and
and
xchg
aad
pop
or
mov
jg
loopne
push
fs
enter
decl
xlat
pop
and
aas
jae
rcrb
pop
sbb
sub
jle
push
dec
mov
xor
and
imul
inc
loopne
cli
data16
add
mov
dec
jno
push
pusha
inc
cltd
xchg
frstor
lcall
inc
loop
pushf
lcall
pop
and
pushf
xor
lcall
les
jp
mov
jg
jbe
sub
fwait
xchg
outsl
dec
mov
sar
push
decl
lahf
add
testb
popf
sahf
movsl
gs
push
mov
jae
mov
dec
push
leave
cmp
pop
scas
decl
bound
pop
push
mov
push
mov
mov
or
cmp
mov
add
mov
push
mov
push
in
std
or
push
xchg
addr16
imul
ret
iret
iret
pop
inc
mov
sub
inc
cmp
call
repnz
cmp
sbb
lds
std
sub
fstpt
int3
sarl
out
lock
add
sub
xor
pusha
mov
and
leave
cmpsb
rcrb
out
cli
incl
or
pushf
je
leave
inc
scas
xchg
sbb
fwait
or
ja
xor
out
clc
ret
sbb
jge
popf
adc
jp
inc
jae
dec
inc
pop
scas
cli
jmp
test
lock
sbb
into
pop
adc
pusha
and
jno
pushl
mov
pop
push
sub
xchg
pop
mov
pusha
push
out
jg
sub
mov
stos
xchg
ret
mov
mov
sbb
push
inc
inc
dec
add
lods
lods
sub
push
push
inc
pop
cmp
inc
mov
aas
jmp
xchg
std
fadds
movb
push
dec
pop
shr
jnp
fsubrp
mov
punpckhdq
popf
or
das
call
jg
dec
fld
pop
scas
cld
cmpsl
test
dec
jb
lods
mov
inc
or
or
sbbl
push
clc
pushl
repnz
insb
loop
sub
mov
and
es
pushl
mov
inc
mov
jg
push
inc
or
mov
fmulp
push
insb
jae
lcall
repz
cmp
or
inc
adc
jle
negl
movsl
ret
insl
pop
lock
push
btr
adc
movsl
dec
mov
inc
jecxz
dec
and
add
jmp
cmc
lret
mov
xchg
fsubrs
addr16
fs
cmpsb
xchg
movsl
lea
lcall
pusha
jno
mov
xchg
xchg
mov
or
jle
mov
movl
shlb
ljmp
fs
out
movsb
or
js
cmp
clc
ljmp
popf
mov
mov
pop
sub
addb
mov
mov
add
adc
outsb
ljmp
xchg
clc
or
dec
pop
lock
pushl
push
pop
dec
cmpsl
cmc
push
popf
enter
out
mov
adc
aad
mov
call
decl
hlt
sahf
push
clc
mov
fimull
adc
pushf
mov
in
es
sub
xchg
dec
jmp
xchg
fsubrs
mov
cwtl
sbb
sahf
lds
pop
stc
mov
sub
bound
add
sub
mov
xchg
pop
arpl
ljmp
push
push
loopne
sub
test
sbb
push
jno
mov
mov
inc
ds
jmp
std
inc
fcoms
or
or
insb
jmp
lock
dec
adc
and
imull
ljmp
jo
jmp
and
int
icebp
pop
add
push
aam
jns
and
inc
jns
cmp
idivb
stos
pop
movb
dec
sbb
push
scas
inc
mov
ljmp
popa
stos
cwtl
arpl
jb
ljmp
stos
outsl
push
test
or
mov
lahf
sub
stos
mov
jnp
test
jne
popf
pop
loop
imul
subl
call
mov
add
push
mov
aam
fldt
jnp
repz
mov
mov
jl
out
andl
push
sub
fs
mov
sbbb
ljmp
decb
sub
dec
xchg
cmpb
cmp
gs
inc
pusha
push
xchg
into
add
pop
rol
popf
xlat
pop
cwtl
or
ds
gs
pop
movsb
mov
mov
cmpsl
xchg
or
mov
sub
gs
sub
imul
lea
in
pushl
test
into
js
ret
repnz
jmp
mov
test
loopne
insb
repz
add
fnstcw
lahf
loop
loope
ficompl
push
or
cmp
sarb
insl
push
adc
or
hlt
cltd
mov
je
in
jns
or
dec
test
adc
out
mov
xor
jecxz
mov
add
mov
jmp
incl
and
sahf
push
shl
cli
cwtl
bound
pusha
lock
fmuls
les
repz
test
and
adc
and
in
jbe
sbb
and
mov
in
out
test
aaa
jnp
mov
push
xchg
and
loop
test
jg
ljmp
mov
cmp
lret
pushf
xchg
sub
es
fcompl
lcall
pop
jmp
nop
out
in
sub
mov
imulb
lods
mov
aam
fwait
dec
pushf
dec
jge
call
push
xor
mov
leave
movsl
xchg
push
cmpsl
xchg
jmp
jmp
es
ljmp
ljmp
jae
adc
jno
and
cmp
mov
pop
inc
call
fildll
pop
sar
jecxz
cmp
mov
adc
popf
lret
ljmp
jne
into
mov
nop
rcl
cwtl
movsl
dec
add
push
stos
jmp
fdivrp
fldt
mov
cmp
shlb
lret
popf
call
insb
pop
xor
adc
outsl
call
movsl
gs
rorl
sbb
push
mov
lret
jle
insl
fists
mov
mov
aaa
insl
xor
sbb
std
mov
in
lcall
test
call
lods
add
pop
idiv
mov
pop
or
negl
xchg
rolb
mov
jne
fists
lcall
movsb
test
cmp
adc
mov
sbb
scas
insb
pusha
jmp
dec
cmpl
cltd
jae
stos
pop
push
push
js
sbb
lds
dec
and
hlt
lcall
xchg
push
rcll
mov
mov
cwtl
push
arpl
add
loopne
popa
adc
aam
data16
mov
add
cs
mov
ljmp
push
push
jae
or
xchg
sbb
add
aas
pop
adc
xor
dec
hlt
mov
incl
pop
repz
test
mov
jne
mov
ja
sub
decl
popa
jle
cli
push
and
add
in
mov
cltd
stc
sbb
pop
iret
xchg
cli
xchg
push
mov
pop
repnz
and
push
xor
xor
add
ss
lcall
adc
aaa
mov
lds
mov
movsl
mov
test
sbb
and
repz
loop
test
jmp
and
dec
jno
inc
push
sub
bound
lock
push
add
jl
inc
ljmp
test
cmc
popf
sub
sbb
mov
xchg
and
xchg
mov
movsb
mov
jno
out
lret
jnp
rolb
or
jno
cmp
push
rcrb
pop
int
test
decl
lock
and
out
dec
inc
mov
cwtl
or
xor
mov
call
xchg
lds
lret
push
mov
mov
imul
and
fidivrs
cmpsb
cmp
add
es
nop
jp
sbbl
nop
sarl
adc
jnp
or
cld
xchg
jg
out
inc
dec
pop
in
lret
xor
mov
inc
stc
cmpsl
mov
inc
and
insl
xchg
push
lret
les
jns
inc
mov
lcall
cmp
incl
mov
cwtl
adc
ss
and
jne
aaa
mov
sub
data16
xchg
out
mov
scas
test
cld
pop
adc
aaa
lods
clc
push
aad
arpl
cs
out
lock
xor
pop
lahf
mov
xchg
cli
lcall
std
sub
in
push
dec
pop
mov
inc
mov
loop
ljmp
clc
decl
or
or
inc
iret
mov
add
sar
sarb
loope
clc
call
mov
jmp
add
cs
sar
sbb
xor
or
pop
mov
ljmp
into
push
xchg
test
mov
lds
call
push
jecxz
mov
mov
mov
aas
ja
push
mov
pushl
inc
sar
adc
cld
pop
in
xchg
movsl
and
cmpsb
lahf
or
jg
jl
ljmp
dec
cs
push
je
push
stc
mov
add
gs
inc
incl
and
add
mov
mov
and
icebp
pop
or
dec
jbe
cmc
test
jl
pop
dec
cmp
sti
or
lcall
incl
cld
ja
rol
cmp
mov
xchg
out
xor
dec
lods
fwait
pop
mov
lock
pop
jl
mov
ffree
sbbb
xor
xor
movsl
out
push
test
in
mov
call
xlat
hlt
out
icebp
pusha
lock
or
loope
sub
test
and
test
aad
xor
sti
lods
jl
sbb
fisttpl
adc
xor
sbb
pushf
imul
or
imul
mov
loop
pushl
lret
xor
subb
jb
sbb
lds
call
call
imul
insb
lods
call
xchg
push
mov
add
mov
cltd
and
mov
or
sti
and
inc
popf
insb
mov
std
call
aaa
mov
sahf
mov
scas
imul
sbb
pop
jo
adc
adc
add
mov
sbb
call
sub
mov
icebp
xchg
or
mov
arpl
jg
mov
dec
dec
mov
clc
xchg
pushf
xorb
out
fwait
test
jg
int
or
cmc
push
ja
sbb
jo
lds
jae
mov
movsb
jmp
incb
ficoml
lea
inc
jbe
mov
xor
lcall
aad
mov
scas
xchg
jno
xchg
popf
pop
in
jg
inc
pushl
movsl
out
in
push
movsb
popa
cmp
scas
imul
push
jne
jg
pop
std
mov
push
bound
in
ja
jp
hlt
mov
inc
fcmovnbe
pop
test
lds
js
outsl
mov
lret
stos
sbb
bound
repnz
and
push
movl
cmpsl
push
mov
cmp
test
or
stos
jg
xor
int
shl
mov
repnz
int3
fdivl
pusha
sub
pop
sub
mov
fwait
and
pop
mov
pop
xchg
sahf
mov
mov
addr16
incl
inc
cmp
jbe,pt
push
jl
jno
ret
fisttps
or
arpl
xor
scas
test
call
test
stos
flds
add
sbb
cmp
xchg
shlb
inc
push
add
out
pop
lcall
outsl
mov
push
dec
inc
adc
dec
mov
sti
inc
jno
sbbb
out
cli
mov
sbb
decb
lahf
rorb
lret
dec
xor
pop
fs
mov
lcall
add
mov
ss
call
inc
fcmovu
lea
out
mov
or
push
adc
in
in
push
repnz
xchg
lds
leave
dec
xor
out
pop
aam
icebp
lcall
jle
pop
push
lret
sarl
jle
add
jmp
and
jnp
lcall
inc
xchg
lock
in
xor
jg
and
push
sub
jge
lcall
jg
cmp
mov
jmp
aam
mov
jb
ljmp
imul
hlt
jb
jg
cmp
xor
out
push
jns
insl
mov
popf
gs
divl
or
add
call
jle
mov
cli
pop
je
lcall
ficompl
add
sbb
flds
xchg
ret
pop
fwait
and
mov
shlb
cmp
sbb
jge
or
mov
mov
dec
jo
lock
les
mov
ds
cltd
movsw
mov
rorl
fildl
nop
xor
push
stc
outsb
jg
shlb
add
lss
or
rorl
fisttpll
lcall
add
push
pusha
insl
clc
jg
decl
cmpsb
rorb
pushf
xchg
cmp
jg
sti
mull
loopne
enter
or
loop
call
cmp
add
inc
ljmp
sub
test
xchg
mov
lods
xchg
cmp
cmp
or
call
dec
enter
mov
add
cmp
loopne
ljmp
dec
push
test
and
jmp
mov
ds
jno
fwait
and
pushl
mov
sub
js
rcl
jb
stc
imul
and
cli
js
mov
addl
push
add
push
scas
pop
push
mov
jns
cmp
call
jl
lret
dec
push
mov
in
cmp
cmpsl
pop
add
add
mov
cmp
divl
cmpsl
push
add
adc
fiadds
push
inc
loopne
jmp
adcb
fs
inc
and
dec
xor
pop
lock
lock
mov
adc
ljmp
iret
push
fs
jg
inc
pop
rclb
push
pcmpgtw
mov
call
jge
imul
add
jo
mov
jns
xchg
jmp
es
dec
mov
mov
add
mov
incb
cmp
cld
push
call
jno
inc
out
mov
push
adc
sbb
ret
rcrb
push
cmpxchg
adc
fwait
mov
in
je
dec
sub
cltd
call
out
fidivl
sbb
lds
sub
inc
jb
dec
scas
mov
scas
outsl
lock
xchg
mov
sahf
inc
lcall
xor
loope
loop
xor
pop
lds
xchg
js
cmp
cmp
fcoml
decl
sbb
mov
or
and
int3
pop
mov
rcll
fistps
dec
pop
int
inc
aad
lcall
hlt
lods
ret
push
rcrb
pop
push
leave
mov
lock
into
insb
jns
jne
mov
outsl
xchg
hlt
sbb
sbb
mov
cmp
jecxz
stos
gs
xchg
outsl
add
addr16
mov
mov
mov
sahf
testl
lds
sub
shlb
add
insb
std
mov
inc
adc
outsl
sub
inc
xor
push
cwtl
mov
mov
xchg
add
mov
pushl
ds
mov
add
xchg
add
mov
imul
inc
pop
or
mov
ljmp
mov
mov
inc
out
push
orl
jne
and
cmp
lret
or
mov
out
clc
aaa
aaa
lcall
jmp
cmpsb
sub
and
push
mov
popa
loopne
push
lods
outsb
fsubr
or
fs
or
aam
add
dec
pop
mov
bound
clc
adc
fcmovnu
in
sbbb
jg
mov
popl
inc
movsb
jb
out
pop
xor
push
pop
ljmp
adc
and
add
call
out
mov
stc
out
dec
inc
cmc
jmp
jg
dec
sti
out
loope
mov
xchg
or
add
arpl
and
dec
push
je
iret
sbb
jecxz
std
filds
and
inc
lds
jbe
iret
sub
pushl
and
jo
aad
sub
imul
incb
and
pop
rolb
add
mov
scas
mov
xor
mov
enter
jmp
incl
popa
push
inc
sbb
outsb
pop
add
sbb
dec
mov
mov
xor
lret
into
scas
clc
incl
scas
sub
aad
cli
lret
xlat
sbb
xlat
fwait
push
jl
loopne
sbbb
inc
or
out
movsb
xlat
or
fimuls
sti
hlt
jmp
cmpsl
push
pop
addb
test
cmc
adc
flds
es
popf
add
outsl
pop
sub
jnp
xchg
and
int
or
adc
call
push
stc
cltd
outsb
aas
and
pop
fprem
mov
jecxz
dec
mov
call
out
pop
push
mov
ret
daa
divb
sub
mov
push
sbb
lcall
fsubl
stos
push
jmp
test
mov
fildl
sti
xchg
leave
dec
mov
push
fstl
decl
pusha
xchg
stos
scas
mov
and
out
bound
lcall
fwait
add
and
push
pop
into
pop
lahf
mov
inc
pop
aaa
clc
call
loopne
push
pop
fisubl
or
jmp
xchg
inc
mov
incl
in
test
sbb
out
adc
mov
pushl
into
into
xchg
out
ss
cmc
decb
mov
ss
mov
push
ljmp
fmul
aas
out
dec
xor
repnz
cmp
sahf
mov
sbb
pop
loopne
call
push
xchg
cmp
inc
jne
repnz
lds
xchg
xor
stos
sub
sbb
imul
push
add
or
sbb
lcall
ja
mov
push
xchg
imul
xor
rcrb
into
inc
jo
jb
add
aad
filds
push
cmp
cli
adc
mulb
lahf
add
pop
ja
call
lds
cmc
pushf
mov
mov
cmp
loope
pop
je
mov
test
call
inc
add
je
dec
jo
mov
mov
test
mov
push
test
dec
call
adc
in
aam
cmpsl
js
xchg
xor
or
push
stos
leave
out
jmp
or
push
or
out
cmp
not
call
out
popf
inc
push
mov
mov
pop
xor
iret
xchg
dec
inc
mov
dec
pcmpeqb
clc
and
roll
sbb
jg
xchg
sub
gs
jp
in
inc
push
loopne
ljmp
outsl
cmp
popf
es
nop
daa
cmp
aam
inc
mov
incl
push
adc
sbb
clc
add
pushl
and
mov
jle
fwait
lds
insb
ss
sub
dec
insb
adc
in
incl
fiadds
xchg
shlb
inc
xchg
in
pop
cmp
repnz
out
aam
sbb
sarb
jmp
out
sbb
ret
and
mov
cwtl
lods
js
dec
outsb
push
out
mov
cmpsl
divl
decl
mov
lods
sarb
mov
and
jg
test
dec
mov
hlt
fwait
or
lcall
xchg
sar
adc
jne,pt
incl
jmp
xor
jae
jp
lret
jecxz
add
jne
mov
or
out
mov
lods
lcall
mov
xor
addr16
ret
add
jge
inc
mov
ret
out
jnp
fadd
push
es
fcompl
movsl
mov
sub
or
pop
stos
jge
add
xchg
aaa
adc
stos
ljmp
icebp
adc
fcomip
call
pop
inc
faddp
mov
sti
xchg
mov
xor
stc
pop
into
jne
adc
cltd
pop
push
xchg
scas
adc
nop
hlt
xchg
or
adc
inc
sub
out
mov
push
icebp
fcomp
add
imul
and
call
das
ljmp
mov
push
sub
imulb
xor
lret
or
mov
mov
jno
xchg
push
mov
adc
jnp,pn
fisttpl
mov
jecxz
mov
incl
ret
or
std
mov
ljmp
shlb
dec
in
pushl
adc
shrb
xchg
roll
ljmp
adc
and
mov
jmp
aaa
sub
fiadds
sub
repnz
jmp
dec
jb
bnd
add
mov
sarb
cmp
sbb
adc
lcall
mov
adc
call
cmc
fistpl
stc
xor
dec
and
and
pop
sub
in
push
in
dec
leave
test
cmp
dec
data16
mov
out
pushf
out
add
jmp
cmp
lcall
fcomip
sar
lcall
js
test
and
movsb
loopne
push
push
jge
scas
incl
xchg
push
outsb
inc
jle
das
mov
cmp
insl
xchg
add
pusha
xchg
xor
push
sahf
int3
mov
shlb
ljmp
loope
into
cs
adc
mov
jae
pop
xor
push
pop
mov
pop
imul
jmp
push
pushf
inc
xor
pop
les
sbb
mov
pop
icebp
incl
ret
pop
test
cwtl
mov
or
test
std
arpl
mov
mov
xor
jo
ds
out
lods
dec
jmp
push
adc
mov
inc
mov
mov
jmp
inc
cltd
movsl
shrl
push
sar
je
lcall
popf
insb
out
sub
or
aas
adc
mov
dec
cmp
mov
jae
roll
add
cld
fstl
dec
insb
ret
cmp
jbe
jb
add
lock
mov
jmp
iret
pop
mov
inc
ja
jg
jns
ljmp
shl
data16
push
sub
das
push
popf
and
dec
and
mov
xchg
dec
lds
adc
mov
jle
scas
jb
or
pop
pushf
xchg
lcall
adc
lock
push
dec
and
call
outsb
stos
mov
dec
ljmp
das
cmp
jl
fs
ss
inc
mov
fidivrl
mull
lods
decl
loope
pushf
pop
clc
repz
push
imul
jecxz
mov
ja
inc
cmpl
lahf
int
pop
push
sar
xchg
and
sub
jmp
fstpt
push
shlb
popf
mov
jae
mov
lret
push
insb
ret
pop
xor
dec
mov
push
cmpsb
mov
rcr
loopne
lahf
jecxz
addl
out
mov
add
xor
loope
xchg
repz
push
inc
jp
mov
ret
mov
and
adc
push
xor
call
scas
insb
leave
outsl
pop
jo
sbb
call
test
mov
dec
or
inc
push
imul
pushf
out
add
jno
mov
sub
sub
dec
cmp
js
inc
movsl
lods
das
call
in
xor
sti
cld
push
call
loop
shrb
adc
clc
aam
mov
fnstenv
dec
jmp
into
push
rcll
inc
dec
outsb
int
loop
loopne
movsl
cld
outsb
cmp
fsubs
decl
pop
jg
testb
sbb
cltd
and
mov
jne
mov
mov
hlt
push
ljmp
out
and
call
mov
xor
clc
cmp
cmc
iret
int3
pop
insl
xchg
cmpsl
je,pn
das
mov
test
movsb
arpl
gs
rorl
lcall
mov
shlb
pop
pop
sbb
adc
lcall
mov
ljmp
jb
pop
inc
add
fadds
sbb
mov
pushf
mov
mov
jo
xor
push
xchg
leave
lea
add
inc
and
or
ljmp
xor
xchg
jle
xchg
in
cmpsb
cmp
outsl
and
jnp
dec
jb
push
mov
adc
fdivr
and
lods
pop
in
call
mov
rolb
lock
sub
xor
sub
pushl
repz
outsb
cmp
mov
xor
clc
fwait
js
inc
push
negb
mov
adc
test
cmp
std
sbb
es
sar
call
test
sbbl
xchg
mov
call
cmp
fwait
test
jg
sti
and
loop
out
out
adc
loope
sub
adc
jno
lock
decl
imul
sbbb
sbb
lret
inc
sbb
push
cmpsb
push
es
jge
push
cmp
add
call
jmp
data16
icebp
ficompl
testb
cmpsb
add
daa
fnsave
ret
sub
dec
pushl
lret
ja
cmp
cmpsb
in
aaa
push
xchg
jo
in
cwtl
mov
aad
mov
jne
inc
or
push
lret
fisubl
lret
stos
lret
aas
cmp
aad
and
sbb
in
pop
mov
mov
loopne
lods
mov
les
in
sbb
sbb
dec
pushf
repz
sbb
es
ss
jg
mov
jmp
push
jecxz
jbe
cli
or
lods
jp
out
and
cmc
incl
icebp
sbb
ss
in
dec
insl
jno
push
pop
ljmp
and
lret
inc
push
sub
jp
push
out
rol
roll
lods
jg
popf
sahf
fs
add
mov
mov
jg
pop
ljmp
mov
dec
inc
sahf
lds
mov
out
iret
incl
shll
inc
stos
into
push
adc
mov
sbb
dec
ss
adc
add
sub
call
mov
xchg
inc
addr16
shll
js
mov
push
enter
dec
dec
out
push
shlb
mov
inc
cmpb
mov
cmpsb
mov
inc
jns
movsb
push
aam
pmaxsw
add
pushl
lea
sbb
cmp
push
cld
imul
test
dec
inc
or
pushl
insl
addb
cmp
aaa
xlat
ds
cli
cltd
loop
sbb
rcrb
pop
and
push
sub
pop
cld
inc
mov
xor
es
das
jnp
cwtl
mov
mov
jo
mov
jns
decl
xor
mov
cli
mov
xchg
mov
leave
jecxz
or
xchg
cs
jmp
sub
xchg
sub
jp
sar
sbb
mov
ret
rolb
inc
loope
cmc
mov
ljmp
ret
dec
rcll
mov
cmp
je
lds
insl
std
scas
cmp
xchg
push
rcrl
loope
imulb
pop
enter
decl
popa
or
or
cmpsl
adc
or
mov
sbb
aaa
js
jno
xchg
in
out
jmp
outsl
decb
out
cmp
dec
mov
lods
push
daa
stos
out
fsubl
sbb
js
ficoml
out
lock
sar
sarb
push
lret
iret
jmp
mov
mov
clc
aam
mov
and
push
jo
into
fdivr
mov
pop
outsl
cmp
sub
fs
fistpll
pop
push
jne
out
decl
aas
js
sbb
sub
push
mov
add
mov
inc
fcos
ljmp
xchg
mov
sarb
in
mov
enter
and
pop
subl
mov
imul
pop
and
lret
xchg
jp
adc
push
cld
decl
leave
adc
xor
out
shl
mov
lret
jns
or
and
leave
lcall
jecxz
dec
ret
insl
and
pop
xlat
pop
dec
adc
in
inc
adc
test
pushl
pop
imul
mov
shrb
jns
mov
cmp
cs
insb
xchg
push
subl
dec
jbe
mov
xor
ljmp
aam
inc
dec
jle
xor
and
add
fiaddl
jb
lcall
enter
iret
xor
fdivrl
loop
pop
fnstsw
pop
mov
fcomip
mov
jp
and
nop
adc
jmp
hlt
decl
popf
sub
clc
std
inc
add
clc
mov
and
mov
mov
xor
push
aad
leave
inc
call
inc
and
xor
insb
mov
cwtl
aad
mov
int3
or
sub
pushf
mov
dec
mov
pop
jge
or
mov
into
mov
ret
mov
xlat
add
mov
pop
pop
adc
or
call
jno
xchg
insb
sub
aas
xchg
popf
mov
mov
mov
out
imul
cmp
push
cmp
sub
jmp
jp
jg
inc
dec
sbb
sub
mov
pop
push
xor
incl
push
push
push
mov
or
pop
pop
mov
jno
pop
xlat
sub
xchg
loop
call
push
pop
scas
in
sub
mov
enter
test
stos
sbb
adc
lahf
pushf
decl
pusha
loope
xchg
mov
cwtl
mov
inc
out
inc
int3
add
lcall
cwtl
shlb
popf
movsl
inc
lods
pop
subl
rcrl
mov
shlb
cwtl
push
add
call
jae
pop
lea
xor
enter
shll
xchg
cltd
dec
repnz
jg
enter
mov
movsl
sub
and
gs
xor
enter
mov
decl
mov
xor
addr16
aas
shlb
cli
pop
xchg
rorb
jae
or
ret
dec
scas
sarb
push
pop
and
inc
shlb
imul
mov
inc
shrb
loopne
jg
add
dec
inc
ret
int
call
push
and
push
mov
xor
fcmovnu
fstl
mov
decl
xchg
lds
je
add
xchg
addl
fimuls
ud0
push
adc
push
loopne
xor
pop
je
xchg
aas
iret
in
rcrb
out
enter
loop
inc
es
pushl
jb
jle
mov
out
inc
popf
or
addr16
jge
mov
jp
call
mov
mov
xchg
incb
in
pop
fwait
mov
pop
inc
shrb
lret
repnz
outsl
xchg
loopne
rorl
nop
mov
and
push
es
cs
sub
movsl
pop
pop
mov
outsb
std
mov
lcall
sub
and
xor
stos
sbb
jno
aad
sbb
jg
cmp
xchg
sub
mov
ret
in
pop
inc
and
fwait
scas
lock
jmp
dec
pop
push
aaa
rorb
pop
mov
add
cmp
std
in
fbld
in
jg
sbb
cli
ds
push
test
sahf
adc
pop
lcall
movsl
or
leave
int3
xor
movb
imul
out
cltd
push
bound
mov
pushl
lret
xlat
mov
rcl
and
dec
into
mov
sar
mov
adc
lods
jno
cli
loopne
lods
lcall
dec
xorb
xor
dec
dec
rcrb
xor
into
inc
adc
mov
add
lds
pusha
outsb
adc
arpl
pop
std
lcall
cli
add
lods
sbbl
sub
sub
gs
orl
call
fwait
sbb
ror
mov
jg
dec
xchg
lods
arpl
pop
lods
add
movsl
icebp
lds
lcall
popf
inc
push
pop
jmp
test
ret
mov
mov
rcr
inc
mov
sbb
or
inc
ljmp
jge
adc
adc
dec
and
cmpsb
fdiv
filds
cmp
xor
or
push
pop
xor
je
in
das
xor
lcall
mov
push
aad
xchg
jle
sub
jns
js
xchg
xchg
pop
loopne
jg
scas
lods
dec
fdiv
out
mov
dec
cltd
adc
push
stc
sub
les
ljmp
aad
fcoml
sub
repnz
xor
aam
jne
scas
adc
jmp
push
in
dec
or
scas
je
fiadds
les
push
sbb
call
imul
push
sahf
repnz
std
add
iret
popf
cld
das
xchg
decl
xchg
ret
push
fstpl
mov
daa
ret
dec
sub
fiadds
in
in
xchg
pop
jns
in
test
imul
mov
cs
xor
inc
pop
xor
mov
push
and
sbb
outsb
jo
loope
ljmp
jge
adc
leave
icebp
adc
inc
cmp
stos
mov
gs
and
adc
and
pushl
xchg
dec
mov
fsubrs
repnz
jb
das
sbb
loopne
push
aas
pop
dec
or
mov
xor
xchg
push
cld
out
sub
cmp
push
stos
fildl
loop
lods
rcrb
insb
out
ret
inc
xor
dec
ja
stos
incl
sbb
repz
ljmp
cwtl
rcrl
incl
loop
jo
xchg
jbe
inc
sahf
jbe
movsb
in
jmp
int3
lret
xchg
push
and
repnz
insl
jmp
std
ljmp
lcall
sahf
cmpsb
xor
pop
jg
std
jg
fcomp
iret
push
mov
addr16
call
xchg
negl
add
sbb
pop
nop
ds
mov
scas
out
ljmp
orb
and
shrl
in
and
rcrb
fisttps
or
movsb
jg
inc
mov
lcall
jmp
aam
fnstcw
outsl
movsb
pop
sub
xchg
push
jle
cld
clc
shlb
out
jbe
imul
sarb
or
and
shl
das
inc
pop
jns
cwtl
insb
nop
lock
incl
popf
mov
fsts
lret
lea
shl
outsl
mov
push
insb
mov
push
adc
mov
dec
out
jns
mov
orl
sbb
push
test
test
add
cmp
mov
fldcw
inc
shlb
mul
pop
ljmp
inc
int3
out
movsb
jmp
insl
nop
push
sub
ret
or
dec
adc
push
ljmp
psllq
imul
cmp
inc
out
and
out
or
clc
xchg
orl
lea
pop
pop
fildll
adc
mov
mov
test
je
and
sub
sub
imul
fdivrs
jmp
and
sub
mov
push
repz
sahf
xchg
pop
xor
add
fbld
nop
pop
inc
cwtl
sbb
inc
int3
xchg
decl
or
inc
inc
sub
xchg
stc
mov
int
jg
jg
and
ds
into
jnp
jle
fs
gs
add
std
pushl
or
stos
jle
push
les
sarb
adc
std
jmp
cmp
cmp
jb
jmp
cwtl
inc
push
jbe
in
cmp
in
sbb
int3
push
dec
mov
mov
push
in
cld
push
lret
sbb
sub
addb
sub
out
lock
out
mov
out
stos
xchg
push
shrb
mov
imul
jp
pop
iret
negl
ljmp
js
mov
cmp
sub
pushf
inc
sub
aad
push
dec
lock
push
jb
mov
jae
sbb
sub
push
sub
or
inc
rcrl
loop
jg
out
jg
jg
xor
mov
cld
push
jg
daa
xor
jmp
addr16
dec
js
je
or
mov
je
rorb
ljmp
push
iret
das
je
pop
fsub
or
pop
sub
je
mov
mov
xor
das
mov
call
fsts
xor
cld
jmp
pop
mov
jg
jb
nop
fdivrl
bound
sti
xor
shrl
in
pop
mov
sub
mov
mov
mov
sub
jmp
xor
fdivr
add
pop
aaa
in
xchg
out
js
test
xor
dec
cmp
adc
fdivrl
xor
int
stc
ficompl
xor
out
push
push
sub
std
fidivs
fidivs
sbb
cmc
and
or
movsbl
lcall
mov
movsl
jns
jne
data16
mov
inc
mov
dec
inc
data16
xchg
cltd
jge
adc
sub
xchg
fnstsw
or
loopne
sahf
pop
push
pop
mov
clc
mov
incl
addr16
enter
xor
xlat
jmp
fs
inc
adc
incl
push
xchg
ds
jnp
arpl
arpl
filds
cmp
inc
es
stc
cmp
push
sahf
xor
icebp
loop
inc
jnp
filds
xchg
fildll
jnp
push
jle
pop
aad
mov
mov
xchg
jne,pt
add
cmp
das
sbb
lret
inc
cmp
jmp
lock
or
xor
pop
fdivrs
in
jns
vxorps
imul
mov
icebp
push
and
mov
scas
rsqrtps
push
pop
call
sarl
inc
std
push
jg
fsts
mov
mov
jge
or
pop
push
cwtl
and
mov
and
inc
ret
xor
jb
nop
mov
ja
jmp
daa
fsubrl
fisttpl
aad
cmp
mov
mov
out
movsl
and
cmp
mov
lock
mov
xchg
sub
test
add
fcoml
xchg
js
decl
ljmp
jle
sub
xadd
xchg
and
cmpsb
fistpl
pop
cmpb
sar
aam
mov
mov
test
iret
inc
jnp
dec
in
lcall
je
xchg
syscall
jns
or
ljmp
add
test
or
call
mov
sahf
roll
je
lock
sub
push
push
xor
ljmp
ds
fidivl
mov
xlat
and
test
fisttps
das
loope
mov
test
and
insl
stc
push
mov
sti
mov
movb
fadds
in
adc
ljmp
jge
dec
cmp
sub
adc
xor
dec
jg
repz
test
bound
dec
jecxz
inc
test
lcall
sub
and
clc
push
inc
shlb
pop
shrb
vmwrite
xor
in
or
cli
pushl
call
jmp
testl
lds
fwait
cmpb
jb
les
adc
and
push
add
int
or
and
jl
int
or
sub
push
fwait
cs
incl
rol
in
push
sbb
jmp
lea
leave
add
js
and
jmp
adc
jl
and
add
sub
sbb
call
dec
ret
xchg
leave
inc
inc
add
lcall
leave
fwait
in
rclb
sub
mull
sub
jmp
dec
pusha
bnd
cmpsl
mov
stc
jae
mov
imul
mov
fisttpll
sub
fimull
and
fisubrs
vmaxps
pop
fsubp
jp
mov
mov
ret
and
mov
test
fidivrl
cmpsb
andl
clc
aaa
mov
adc
cmpsl
clc
and
test
int
mov
and
or
mov
out
clc
dec
repz
mov
movsl
pusha
adc
sar
mov
andb
das
fisttpl
jne
negl
into
pushf
scas
mov
cmpsl
test
sub
aaa
cmp
jg
dec
sar
add
add
movsl
xor
or
pushl
les
cmpl
push
mov
cmp
lods
fildll
cmp
cmp
cli
test
insb
les
loope
ljmp
mov
movsb
pop
mov
movsb
cmp
push
jnp
lcallw
mov
mov
std
cmp
dec
jp
bound
mov
mov
ss
in
ret
clc
xchg
mov
mov
fmull
jmp
mov
stos
or
out
addr16
into
movsl
pop
push
cmp
imul
mov
mov
mov
and
bound
push
sar
call
loop
popf
in
stos
push
pop
out
jno
xor
daa
mov
jg
jg
mov
push
jbe
loopne
in
lods
pop
push
sbb
jle
xchg
jnp
icebp
test
cmp
sub
les
xchg
dec
add
mov
add
and
or
or
sub
imul
jo
sar
xchg
jp
les
lock
add
leave
test
shll
iret
arpl
pushl
inc
adc
lea
insb
mov
dec
aaa
jb
xor
jge
adc
pusha
ds
lcall
jns
mov
inc
inc
dec
mov
jbe
xchg
pop
mov
lcall
fnstenv
jmp
mov
iret
dec
lret
test
and
pop
dec
mov
lret
add
pop
jns
mov
cmp
push
bound
loope
sahf
aad
fisttpl
push
push
fsubrl
inc
pusha
cld
leave
mov
aad
pop
aad
cmp
add
cmpsl
fistps
add
les
notl
push
jb
mov
or
jae
jnp
test
or
mov
cmp
ret
gs
pushl
jge
test
sub
mov
ret
mov
mov
ljmp
push
cmp
mov
mov
lcall
adc
jle
push
stc
inc
call
into
lods
jns
pop
xchg
pop
inc
lds
pop
mov
lea
cs
add
in
incl
loopne
das
xor
inc
gs
sbb
or
inc
dec
push
jmp
sub
lcall
lret
xchg
and
inc
jecxz
leave
mov
jb
add
mov
or
fcomip
jmp
cld
mov
loop
xchg
pop
dec
xor
push
mov
xor
je
jmp
arpl
mov
call
jp
divl
int
repz
dec
mov
pop
sti
cwtl
test
push
test
cmpb
cmp
push
xor
insl
and
xchg
lcall
mov
sahf
inc
ret
xor
aas
or
cmp
pop
aam
jne
sub
and
movsb
push
jae
inc
push
jge
shrb
push
sarl
jg
or
sbb
cmp
pusha
add
lret
jno
cwtl
out
inc
fbstp
sbb
das
cli
call
lea
xchg
cmc
xchg
add
cmp
push
push
mov
mov
int3
aad
arpl
incl
test
dec
mov
in
push
rcrb
lret
jb
movsl
mov
fisttpl
call
mov
inc
mov
fdivrl
pushf
xor
iret
jge
push
pushf
jbe
je
xchg
mov
cli
mov
sub
add
push
sbb
and
and
jmp
xor
adc
push
ret
arpl
push
insl
es
cmpsb
dec
call
jno
lcall
mov
inc
fcompl
insb
mov
cmpsb
nop
mov
fistl
mov
gs
ja
add
mov
mov
mov
fnstenv
or
aaa
hlt
ljmp
lock
xchg
push
outsb
push
fisubrs
movsl
cmp
aaa
or
ljmp
sub
sub
pop
and
sub
inc
push
scas
push
mov
mov
mov
push
pop
or
pop
xchg
inc
repz
pop
push
pop
ss
add
incl
popa
add
pop
mov
incl
lret
scas
xchg
push
mov
push
inc
xor
pushl
xchg
cmp
addb
lods
rcrl
push
pushf
pop
push
clc
sbb
call
xchg
arpl
pop
or
mov
sub
dec
inc
add
clc
mov
test
pop
sub
mov
aas
cmp
push
push
jmp
jg
outsl
sbb
push
adc
jne
fldl
out
lret
mov
pop
daa
shlb
sarl
or
pop
fsts
pop
pushf
xor
adc
dec
sub
pop
lahf
sub
sbb
add
scas
pop
jl
jb
dec
cli
mov
jg
mov
add
jmp
call
ss
mov
out
jbe
jmp
stos
aad
decb
mov
in
jmp
jle
incl
imul
mov
jg
loope
add
adc
cs
decl
and
out
jbe
push
jo
jl
or
add
decl
aas
push
pop
lock
mov
incb
push
mov
stos
fwait
addr16
cmp
dec
push
sub
mov
jmp
fadds
ljmp
sar
incl
stos
mov
dec
fists
sub
decl
daa
xchg
int3
in
jmp
ret
or
leave
mov
fadd
stc
dec
add
lret
add
mov
jmp
adc
fdivs
loopne
sbb
mov
ss
mov
lcall
into
xor
repnz
jae
cltd
insl
cmp
mov
aam
and
sti
adc
and
rclb
jg
gs
imul
jo
shlb
aad
je
mov
and
jmp
or
dec
add
out
mov
jecxz
bound
cli
pop
fs
lcall
insb
mov
xor
jae
cmpsl
mov
nop
xor
pushl
xorl
push
loopne
lret
cmp
imul
loope
mov
or
out
and
cmp
push
mov
out
iret
mov
into
sub
rep
int
push
push
xor
xchg
call
imul
jne
pushf
aaa
lods
fmulp
test
out
pop
test
xchg
notb
and
xchg
lahf
mov
enter
jae
mov
sahf
cltd
xor
xchg
das
negb
filds
add
dec
and
mov
fcmovnbe
sbb
rcrb
cwtl
nop
mov
dec
mov
mov
into
fists
jmp
dec
nop
call
int
xor
or
negb
xchg
fdivrl
movsl
mov
cmp
inc
inc
es
xchg
hlt
xchg
mov
mov
std
out
jmp
jnp
push
push
mov
mov
inc
cmp
rolb
jle
mov
daa
jnp
jle
pop
cmpsl
jle
scas
cmp
inc
stc
ret
cwtl
push
adc
fsubrl
cmp
add
ljmp
into
fs
pop
xor
xor
sbb
dec
imul
test
mov
notl
push
andl
lret
cli
pop
mov
mov
dec
and
ret
scas
mov
inc
mov
adc
movsl
mov
xor
das
jp
pop
fbld
mov
aas
mov
xchg
push
push
leave
sahf
pusha
pop
roll
and
or
jmp
jnp
add
mov
decl
push
jmp
xchg
add
lods
pop
test
xchg
dec
mov
in
in
mov
ljmp
pop
imul
and
pushl
cmp
divl
mov
or
ds
push
xchg
jg
or
stc
fisttpl
sahf
dec
jecxz
mov
lea
jge
testl
pop
aaa
add
dec
mov
stos
or
fildll
jmp
incl
aaa
cmpsb
lea
push
jb
into
mov
in
ret
rorl
jne
or
call
inc
push
sbb
mov
cld
fidivrs
add
cld
adc
pop
scas
mov
mov
adc
faddl
push
sub
lret
push
lret
int3
jno
lods
and
repz
dec
pop
adc
fildll
cmp
xchg
xchg
xchg
dec
add
iret
mov
push
sbb
fwait
add
push
mov
loope
lret
add
and
xor
pushf
jp
repz
jmp
xchg
fsubrs
pop
jp
mov
incl
test
loope
das
sarl
pusha
aad
pop
mov
or
sub
bound
ja
jg
test
jmp
add
cmpsb
pop
push
pop
cmp
adc
mov
cmp
mov
mov
sub
mov
push
mov
jb
cmp
fimull
and
test
inc
xchg
mov
fildl
pop
cmp
mov
mov
pop
cmpsl
aas
rorb
call
cmp
push
adc
cld
inc
push
lret
loope
xor
nop
mov
int3
ljmp
add
lcall
in
int3
lods
sub
mov
sub
cmpsb
pop
mov
push
adc
decl
cmpsb
jmp
sub
out
inc
pop
test
xchg
mov
or
mov
leave
push
in
mov
adc
xchg
insb
push
push
aam
inc
cmpsb
sub
rol
leave
lods
push
sbb
inc
cmpsl
clc
and
jecxz
push
les
cltd
ficompl
jae
pop
sbb
jnp
jns
lcall
push
mov
add
mov
pop
stc
in
dec
mov
test
js
adc
cmp
push
sbb
cld
cltd
or
popa
loop
out
in
jmp
aaa
js
cmp
jle
xchg
sub
xor
xchg
pop
sbb
pop
dec
in
int
enter
jne
dec
jmp
push
xor
mov
gs
mov
cwtl
imul
inc
pop
fs
popa
add
sahf
and
mov
out
pop
lock
dec
test
mov
add
mov
shll
out
ss
pushl
ja
add
cld
sub
imul
int3
sub
outsl
lret
jl
dec
aas
sbb
and
decl
sbb
xchg
in
test
ljmp
sbb
daa
std
call
mov
out
mov
das
mov
xchg
imul
pop
mov
outsb
ljmp
dec
jl
popf
inc
insb
neg
ljmp
andb
incl
lods
lcall
jg
dec
movsl
pop
filds
push
and
clc
inc
mov
adc
lcall
cmp
push
inc
jo
cmp
addl
test
xor
pop
xor
ljmp
aam
or
cmpsl
push
inc
ja
lods
mov
xchg
test
xchg
sub
jg
in
or
or
sbb
adcl
testb
jo
decl
movsb
cmp
cwtl
out
mov
loopne
xchg
scas
cwtl
mov
xchg
mov
call
xchg
cmpsl
fildll
les
fcomip
push
push
ret
ret
imul
test
iret
ljmp
pop
mov
shlb
in
test
inc
xor
mov
add
adc
push
dec
in
shrl
sbb
push
and
mov
addr16
ljmp
call
stos
inc
cmp
add
aam
mov
rolb
or
lcall
faddl
pop
fidivs
jecxz
pop
or
repnz
orb
mov
cld
push
mov
cmp
xorb
repz
push
lods
int3
scas
adc
ja
movsl
sub
xor
ficomps
and
jp
pop
test
lods
ds
mov
ljmp
xacquire
mov
xchg
test
out
pcmpgtb
adc
mov
inc
sbb
ret
mov
mov
jnp
idiv
push
mov
test
fnstcw
inc
push
jp
inc
jmp
mov
and
ja
clc
cmp
aas
jecxz
fucomi
or
aam
orl
incl
xorb
xor
cmpl
sbb
or
xor
ljmp
daa
notl
sbb
mov
xchg
lea
or
mov
add
jbe
mov
imulb
int
inc
or
jg
scas
xchg
iret
xor
out
and
incl
push
dec
xchg
mov
dec
out
dec
cld
call
ds
lods
add
fdivr
jg
in
call
fists
ljmp
mov
in
pop
sub
aam
mov
pop
mov
inc
decl
mov
icebp
sbb
push
mov
dec
cli
gs
pop
icebp
ret
dec
jae
cld
xor
call
sub
iret
lcall
push
mov
jg
pop
add
xchg
int3
fnstsw
pop
in
cmc
mov
shlb
lds
and
xchg
call
inc
popf
mov
mov
sti
sub
je
sbb
dec
adc
sbbb
pushf
gs
incl
into
add
shrb
loopne
inc
les
insb
out
inc
or
lret
mov
incl
jle
add
test
test
dec
jae
jle
pop
pop
addr16
lcall
dec
mov
and
lea
xorb
mov
movsb
adc
jns
loopne
pushl
pushf
andb
insb
inc
mov
inc
rorl
outsl
jb
dec
ljmp
call
or
cltd
jb
mov
pusha
mov
aam
daa
jge
shl
pop
cltd
dec
aam
loope
decl
pop
pushf
mov
into
mov
jns
fstl
adc
lods
jecxz
enter
decl
sub
mov
stos
cmovge
in
fnstsw
cmp
jl
paddusb
loop
inc
fwait
mov
lock
ja
test
ret
ljmp
or
repz
sbb
cmpsb
imul
daa
sti
loop
push
imul
add
fisubrl
scas
jnp
dec
ret
inc
int
mov
mov
inc
insl
pusha
aas
inc
mov
in
xlat
jp
imul
loopne
fisttps
jg
std
cmp
pop
dec
in
imul
adc
adc
xchg
outsb
outsl
push
repnz
pop
nop
rclb
ljmp
inc
adc
mov
fs
fs
xchg
decl
ret
in
cmp
push
push
xchg
pushf
icebp
xchg
dec
mov
pop
shl
incl
cs
xlat
sbbb
xor
add
aaa
scas
jg
aaa
pop
inc
cwtl
sbb
sar
dec
and
pop
push
or
mov
sbb
outsb
addr16
inc
or
clc
ret
dec
xchg
and
ljmp
clc
push
gs
test
lret
fbld
lock
push
lds
inc
or
fdiv
sti
lcall
fmul
jo
mov
push
sub
xchg
insl
mov
cli
test
bound
cs
lcall
fwait
call
inc
repnz
cld
leave
cmp
jge
out
daa
ljmp
ja
shll
call
cld
loop
sbb
pop
std
loopne
vcvtsd2ss
xor
mov
es
lea
pop
xchg
lcall
lea
or
adc
in
inc
mov
dec
insb
out
imul
jb
sbb
ljmp
into
or
or
data16
push
jnp
mov
sbb
repnz
in
es
pop
loop
out
test
inc
add
dec
push
ljmp
or
incl
or
cmp
test
ftst
jnp
cmp
insb
insl
popa
cmp
aam
cli
jg
adcb
iret
sub
test
mov
call
ret
mov
dec
shr
hlt
lret
mov
push
adcb
sub
es
or
and
je
dec
incb
jge
call
jb
out
fwait
or
pop
or
xchg
pop
enter
inc
lcall
mov
dec
inc
aas
dec
cli
sbb
gs
fdivrs
icebp
jl
fadds
add
and
cwtl
and
sbb
and
fsubrs
mov
call
cld
mov
int3
ljmp
inc
rclb
mov
jmp
mov
dec
jb
orb
es
jbe
clc
xor
or
push
pop
fwait
xchg
lods
filds
andb
loopne
cmp
mov
stos
add
add
and
mov
stos
mov
push
mov
daa
jl
int3
shl
push
mov
les
sub
cmpsl
sub
xor
lods
loop
mov
inc
pushf
pop
roll
gs
mov
jmp
mov
and
iret
push
insb
sub
jp
shrb
jns
push
adc
out
test
jg
out
test
mov
cli
sbb
stc
std
jnp
das
mull
pop
push
mov
jnp
movsl
jo
jg
call
xor
pushf
mov
dec
lea
jne
lret
push
inc
into
seta
fnsave
enter
add
gs
out
pop
inc
ret
pushl
cmp
arpl
mov
scas
dec
mov
pop
sti
adc
and
ljmp
adc
push
xchg
incl
icebp
cli
dec
push
push
out
incl
in
pusha
aam
fsubrl
xchg
jo
sbb
sbb
cmp
or
sbb
sbb
dec
sbb
jle
sub
mov
aas
pushf
cmpsl
add
in
in
ss
cmpsb
loope
mov
inc
test
out
adc
add
cwtl
inc
dec
xor
clc
mov
sub
sbb
imul
inc
cmpsl
loope
jge
dec
xchg
test
fisttps
xchg
sarb
adc
add
cmp
add
add
stos
cmp
shll
dec
js
mov
add
shrl
dec
xlat
and
push
or
ljmp
mov
fidivrl
call
push
loopne
incl
loope
ja
dec
push
rclb
lret
fmuls
lret
andl
in
aam
xchg
inc
add
cmp
cmp
aaa
cli
divl
add
xchg
cltd
xchg
push
out
in
mov
push
in
les
push
inc
aas
test
out
xchg
jecxz
inc
bound
std
cmp
mov
out
mov
or
and
mulb
ljmp
scas
dec
andb
fstpl
movsb
xchg
pushl
pop
push
inc
or
fs
adc
mov
add
pop
jb
insl
lods
lods
rcrl
lcall
scas
mov
xor
iret
std
sbb
stos
insb
push
fs
jle
adc
jecxz,pn
inc
jle
js
lahf
xor
and
ret
inc
mov
adc
and
lea
pushl
jnp
jne
cmp
push
outsl
and
call
push
out
sub
jnp
int
jns
xchg
xchg
mov
incl
pop
jno
push
out
push
into
adc
push
dec
pop
ret
or
jo
or
idiv
rolb
and
in
mov
es
decl
dec
adc
out
jnp
pop
jno
cmc
outsb
stos
ret
aas
adc
scas
inc
stos
test
xchg
jnp
dec
sti
inc
cld
or
stos
je
add
rol
subl
mov
shlb
mov
mov
push
ja
bnd
or
test
push
dec
mov
sahf
sub
negb
inc
std
mov
jle
stos
or
mov
mov
dec
jg
insl
data16
and
ret
test
test
sti
lret
jmp
fisttpll
nop
insl
pusha
or
sub
sahf
cld
jg
cmp
or
cmp
std
dec
push
add
dec
test
rorl
xchg
xchg
ja
sti
or
testb
roll
push
cmc
test
mov
rorb
dec
inc
lods
cmp
push
add
cltd
rol
add
or
incl
add
pop
shl
daa
jo
sbb
rorl
leave
scas
loop
lcall
adc
pushl
out
rorb
push
cmp
stos
repz
push
mov
mov
and
das
cld
js
adc
fs
cld
dec
fwait
outsl
orb
sub
jl
stc
push
orb
dec
pusha
cs
fildll
mov
xchg
push
pop
pop
fcoml
push
mov
or
out
cwtl
dec
jmp
mov
or
test
in
xor
xchg
cmp
inc
cld
pusha
int3
mov
xchg
pop
adc
hlt
jns
mov
mov
mov
repz
mov
leave
mov
sbb
stos
rcrl
dec
pop
pop
adc
inc
push
sbb
mov
ret
sbb
inc
leave
decl
hlt
lock
jnp
mov
xor
dec
andb
inc
adc
std
decl
cld
xor
ljmp
mov
shrl
fldcw
repnz
dec
outsb
test
test
stos
mov
jnp
cltd
loop
outsb
repnz
pop
incl
or
and
in
cmp
sub
dec
in
lret
in
cs
and
cmpl
jmp
aad
cmp
xchg
lahf
mov
inc
decl
sbb
pop
das
ja
mov
test
call
lret
jno
mov
nop
dec
lock
subl
and
iret
push
adc
clc
decl
insl
xlat
fstl
movsl
cmp
inc
fildl
cld
rolb
inc
jl
es
fcos
ret
repnz
mov
icebp
sub
push
push
sub
xchg
jg
aad
and
shrb
jmp
sub
mov
xor
decl
jl
in
insb
jne
xchg
sahf
mov
aaa
pop
es
sub
add
adc
enter
dec
inc
mov
push
ljmp
movsb
rcll
out
jle
incb
imul
or
mov
or
aad
divb
dec
pushf
es
aaa
addr16
xchg
mov
dec
std
imul
mov
jb
adc
fwait
and
pop
jp
imul
ja
test
push
jo
add
pop
mov
arpl
decl
js
into
loop
adc
pop
mov
ret
add
jns
adc
scas
push
lret
jae
adc
loopne
ljmp
cmpsl
mov
bnd
jl
jae
cmpsl
test
push
add
mov
cli
mov
sbb
fldt
mov
ja
outsb
sub
incl
ljmp
mov
inc
icebp
jl
in
stos
lret
mov
jecxz
js
add
lods
inc
mov
insl
imul
insl
imul
sub
dec
dec
scas
push
jecxz
sbb
dec
and
repnz
testl
sarl
xchg
jmp
fnop
sbb
dec
inc
pop
jge
or
sbb
mov
mov
inc
xlat
lds
js
mov
popf
clc
scas
loopne
mov
mov
xchg
test
jbe
adc
inc
inc
pop
andl
call
adc
mov
fldt
jle
in
mov
xchg
pop
pop
hlt
push
or
aad
sbb
scas
dec
xor
incl
dec
popa
je
jl
cmp
push
mov
push
lods
pop
mov
dec
insb
dec
add
shl
mov
push
and
pop
xor
sbb
lcall
or
sbb
cltd
push
movsb
lret
xorl
xchg
jg
push
push
sbb
call
xorb
pop
fbstp
sti
cmp
jmp
hlt
xchg
adc
ljmp
lret
xor
call
mov
xchg
adc
fs
cmp
das
sar
mov
push
xchg
xchg
inc
add
int3
lret
sbb
movsl
ficompl
cmp
pop
in
imul
mov
cmp
movsb
xor
stc
imul
int3
das
out
or
lret
stc
lcall
je
mov
call
xor
dec
or
xor
sub
pop
test
ficompl
int
xor
inc
dec
incl
fwait
and
pushf
int3
enter
xchg
jo
sti
mov
call
jb
add
incl
mov
je
push
xchg
js
sub
sub
mov
stos
cmp
imul
jecxz
push
mov
es
int
adc
popf
push
cli
jmp
into
arpl
jge
mov
fwait
sub
lds
icebp
add
and
jmp
mov
int3
xlat
lea
stos
and
or
int3
sub
mov
xor
xchg
icebp
fisubs
cmc
dec
push
pop
mov
xor
lcall
jbe
popa
js
cmp
out
cmpsl
cmp
cmp
push
call
jmp
mov
sti
movsl
in
std
mov
mov
inc
or
pop
std
iret
push
sbb
push
jle
test
pop
xchg
shl
xlat
pushl
adc
loopne
js
mov
int
fdivrl
pop
imul
jmp
xor
xchg
mov
loopne
xchg
stc
test
rcll
dec
or
hlt
ljmp
scas
test
adc
out
xchg
out
inc
push
push
clc
sub
adc
pushl
lods
repnz
push
ja
pusha
into
jae
cmp
leave
cmpsl
jle
aad
inc
or
mov
std
cmpl
test
jmp
cmc
adc
out
and
call
mov
js
clc
sub
jns
mov
jo
icebp
jmp
jmp
cmpsb
sbb
sbb
mov
pusha
loopne
lds
cwtl
fadds
incl
ljmp
mov
ja
xor
leave
ja
call
adcl
ds
fabs
pop
fucompp
lock
cmpb
std
movsb
cwtl
sub
fisubrl
sbb
aaa
lret
pop
mov
fisubrs
jp
ss
push
add
mov
mov
adc
cs
aad
movsb
push
dec
out
clc
ret
lcall
jae
inc
movsl
lret
lea
hlt
dec
jmp
add
lahf
daa
in
pop
movsb
mov
test
cld
ljmp
push
imul
sub
in
divl
and
mov
mov
iret
add
mov
sar
jne
xchg
jle
movsb
loopne
repz
imul
decl
outsb
pop
and
sub
fldcw
ret
mov
inc
sub
fstpt
divb
jmp
popa
pop
dec
movsb
pop
mov
sbb
cmpsl
rcrl
cld
cli
ret
imul
adc
mov
mov
sub
xchg
ss
mov
pop
lret
mov
or
pop
and
push
or
adc
and
add
js
das
mov
gs
sub
pushf
or
push
pop
cld
pop
ljmp
jbe
ss
mov
push
add
das
xchg
hlt
pusha
push
sbb
repnz
mov
test
hlt
mov
sub
fnsave
es
stc
push
cmpsb
pop
popf
xchg
es
pushl
cmp
nop
dec
into
pop
loopne
fidivrl
fidivl
jne
add
test
fisubl
call
dec
rol
jl
lods
push
test
int
and
or
cld
popa
cmp
dec
inc
lcall
adc
mov
pop
mov
xchg
or
lea
fstl
adc
jmp
sbb
adc
or
mov
push
imul
ja
mov
sub
mov
jp
jecxz
call
xchg
into
out
mov
jg
mov
pop
mov
in
pop
leave
push
push
aas
adc
dec
xor
mov
pop
mov
add
jae
push
addr16
les
ljmp
push
push
je
mov
cmpl
js
adc
lcall
mov
sbb
out
enter
mov
dec
jae
rolb
subb
jmp
or
and
adc
sahf
sub
call
popf
popa
aas
add
pop
enter
loopne
clc
call
shll
xchg
mov
mov
fs
rorl
xor
ljmp
stos
aaa
cmp
stos
push
mov
xchg
je
cmp
shrl
rolb
ljmp
cld
or
subl
enter
sarb
adc
decl
lock
mov
ret
xchg
stos
mov
pop
cmp
repz
jg
lds
dec
jne
add
add
dec
into
test
sub
jg
mov
das
xor
and
lret
adc
stos
cmp
imul
aas
fstl
adc
scas
dec
inc
leave
in
mulb
out
add
aaa
loopne,pn
sahf
mov
adc
adc
pop
inc
xor
mov
dec
cld
into
je
mov
mov
mov
icebp
adc
adc
mov
mov
adc
ret
fistps
sbb
pushl
mov
jnp
xchg
cmc
cmp
push
call
pusha
mov
jo
mov
mov
add
cmpsb
cmpsl
das
push
lods
cli
scas
cmp
xor
dec
xchg
adc
dec
inc
or
jmp
sbb
push
popf
cmp
xchg
mov
lds
or
ljmp
sar
decl
lcall
jno
adc
pop
dec
iret
jl
add
dec
jno
idivb
xchg
jl
dec
cli
call
jae
das
and
add
and
stos
repz
pushl
scas
push
cmpb
sbb
out
jbe
mov
nop
mov
add
loope
push
or
incl
mov
iret
testb
mov
repnz
mov
lcall
aas
clc
insl
inc
js
clc
or
jge
adc
fsubr
sbb
idivl
sbb
lock
scas
cli
mov
int3
aaa
pushf
push
sbb
pushf
jecxz
lret
adc
or
fwait
in
cmpsl
pushf
dec
pop
pop
test
les
cmp
adc
lds
mov
stos
loope
sahf
pop
mov
call
testl
fbstp
dec
mov
sbb
lahf
add
xchg
lock
cmp
xor
out
sub
push
sub
decl
and
lds
mov
cmpsb
dec
daa
adc
pop
divl
dec
jno
sarb
cmp
and
push
mov
xchg
mov
mov
add
jbe
scas
clc
jmp
push
in
jge
lods
push
add
push
mov
arpl
jne
and
out
sarb
scas
and
incl
push
lods
push
std
hlt
fwait
std
test
add
stos
push
push
fldl2e
out
mov
orb
loope
mov
xor
loopne
adc
or
jmp
sahf
push
stos
add
test
aas
cli
lods
pop
into
push
inc
sbb
push
repnz
fnsave
daa
outsl
int
addr16
pop
hlt
call
inc
xchg
rcll
and
cmpsb
cmp
sub
xor
cmp
push
ljmp
sub
fbld
adc
repz
dec
ja
sub
and
aam
cmc
scas
mov
loope
push
or
cmpsl
sbb
lcall
into
mov
and
dec
stos
test
lds
xor
xchg
sbb
push
out
jge
push
and
cmc
mov
out
add
mov
inc
test
mov
lcall
jmp
subl
sahf
lods
fcompl
scas
mov
ljmp
push
add
or
test
and
cli
mov
jbe
add
rcl
arpl
out
adc
fiadds
inc
cmp
xor
jmp
int3
inc
mov
aam
js
fdivl
cmpsb
xchg
enter
sbb
icebp
loop
jge
mov
test
inc
addr16
jae
inc
lcall
and
add
pop
xchg
pop
dec
testl
xchg
pushl
arpl
das
js
cltd
sahf
pop
inc
dec
and
xchg
test
mov
jmp
add
inc
repz
or
lahf
nop
int
pusha
inc
xor
sar
ljmp
pop
les
arpl
clc
or
mov
or
fisubl
jbe
pushl
pop
imul
adc
fstpl
xor
push
cld
xchg
xchg
insb
in
sub
mov
lcall
or
stc
xlat
cmp
jp
int3
fstpt
repnz
filds
jmp
push
push
pop
pop
mov
into
jne
js
es
stc
imul
dec
pop
int
sti
rorb
jmp
inc
shll
js
inc
or
das
das
fisttps
arpl
push
fdivl
aad
mov
and
in
sub
cwtl
fcomip
incl
push
fildll
les
mov
outsb
out
icebp
data16
call
mov
jne
sbb
test
iret
push
push
mov
pop
push
fwait
rclb
jae
pushl
adc
sub
inc
or
push
jb
lret
test
sub
fsts
push
xchg
mov
call
rcll
mov
cld
mov
push
lds
or
xchg
or
jmp
das
jae
and
loop
lahf
cmp
ljmp
jns
push
push
or
jo
dec
sbb
rolb
mov
jo
shll
rclb
hlt
loope
loopne
or
decl
sti
pop
inc
add
divl
pusha
cwtl
dec
pop
inc
int3
stc
fwait
adcl
mov
call
jne
popf
push
nop
addr16
imul
jl
mull
mov
mov
inc
jb
es
mov
push
cmpb
into
or
pushl
ret
push
cmp
ds
xchg
outsl
lcall
sarl
cmp
fiaddl
inc
add
rcrb
imul
or
ret
std
outsb
sar
in
jb
inc
mov
push
cmc
mov
gs
adc
pop
push
push
pop
cli
repz
xor
decl
sbb
push
scas
mov
xchg
mov
insb
push
pop
out
sub
dec
add
inc
mov
gs
sub
in
mov
push
add
mov
dec
push
jae
jle
pop
add
orb
jae
mov
enter
mov
cmp
push
cmp
xchg
pop
xchg
fucom
push
sti
mov
adc
mov
inc
or
lds
orb
and
das
testb
mov
fcomps
icebp
fs
ljmp
popf
test
inc
out
xor
fcmovnb
or
dec
arpl
js
mov
mov
nop
cmpsl
jb
and
dec
data16
cmp
imul
loop
mov
fmul
in
lods
fisttpl
dec
subb
xchg
lods
or
cmp
push
pusha
xchg
adc
lcall
push
loope
mov
call
clc
repnz
ljmp
push
loope
push
dec
dec
in
in
mov
push
pop
and
pop
outsl
scas
ljmp
in
movsl
xchg
inc
test
loope
xor
orb
loopne
test
dec
dec
push
cmp
fcmove
in
mov
daa
adc
fsubrs
in
jbe
inc
lea
inc
and
jo
jl
mov
push
sub
push
jl
cmp
push
cmp
cld
mov
jle
clc
test
lahf
or
jecxz
pushf
jb
fnstsw
mov
sbb
scas
jg
dec
jle
nop
out
inc
in
pop
cltd
loop
decl
nop
jns
push
xchg
push
jmp
pop
pop
mov
push
ja
jno
hlt
sbb
add
je
ret
xor
mov
push
pop
push
out
and
fisttps
adc
je
pushf
test
push
jae
mov
sbb
rcl
pusha
sbb
call
outsb
js
movsl
lock
mov
jbe
or
sub
out
ret
movsl
scas
fs
mov
ds
popa
pop
lcall
imul
verw
mov
xchg
cmpsl
es
cwtl
mov
mov
sti
or
ds
lcall
push
mov
and
jb
fldenv
insl
push
inc
pop
leave
add
jmp
dec
scas
sbb
inc
cwtl
adc
inc
sbb
and
mov
sub
xor
push
sub
dec
popf
out
incl
xchg
inc
arpl
les
push
mov
sbb
sbb
mov
pusha
xchg
cmp
lret
or
in
cmp
cmp
cmp
push
jnp
cld
lcall
xor
popa
movsl
incl
push
in
jl
adc
lcall
jecxz
adc
xchg
decl
andb
or
stos
cmc
adc
jl
daa
loopne
call
cld
movsl
or
test
jae
popa
inc
frstor
movsb
cs
cs
lock
mov
pushl
es
sbb
pop
sub
ds
xor
test
and
addl
jecxz
jg
jmp
or
and
out
rol
adc
out
int
dec
cmp
jecxz
mov
xchg
pop
xor
xchg
push
dec
sub
or
fcoml
inc
push
mov
adc
jp
shrl
sub
push
sahf
imul
mov
mov
or
inc
sahf
rol
jle
sbb
call
dec
in
xchg
retw
xor
and
je
popa
mov
xchg
pcmpeqb
lcall
mov
dec
push
stos
pop
lea
push
or
incl
cld
dec
lock
imul
daa
jl
icebp
mov
aam
cmc
xor
jbe
xlat
cmp
and
cwtl
mov
pop
mov
push
sbb
daa
xor
je
inc
push
enter
imul
adc
lcall
loop
testb
decl
in
popa
sarl
push
cmp
stc
and
aaa
lea
repnz
xor
fistpl
aas
push
jns
add
cmp
hlt
leave
push
xor
sub
call
icebp
push
lea
mov
or
or
decl
sti
sub
and
stos
mov
cmp
jns
mov
shrb
pushl
repnz
jg
cli
loop
adc
leave
push
imul
iret
pop
sub
push
mov
decl
push
sub
test
mov
vmread
shll
gs
dec
or
adc
fcmovbe
xor
mov
movl
fldcw
push
mov
mov
in
and
push
mov
or
sub
push
inc
mov
add
sbb
cmc
out
mov
adc
fs
stos
in
incl
cld
call
mov
rclb
lret
lods
rorb
cmpsb
jl
ljmp
filds
std
xor
call
movsl
or
in
dec
mov
js
lds
jg
mov
push
add
test
ljmp
std
lcall
incl
mov
sahf
es
dec
out
jns
jnp
gs
push
into
mov
jbe
push
xchg
out
xor
out
cli
sub
jo
adc
lahf
push
mov
jmp
test
frstor
jmp
hlt
push
add
and
fisubrl
mov
popf
fstpl
daa
andb
enter
pushl
dec
repz
shlb
inc
icebp
daa
in
daa
or
xchg
xchg
cmpsb
add
jp
xor
incl
jp
sub
sbb
ljmp
aam
sbb
fistpl
decl
cwtl
movsb
xchg
hlt
int
sub
iret
mov
mov
mov
ljmp
aad
add
pusha
cmpsl
inc
in
add
cmp
in
mov
stc
cmp
lds
xchg
repnz
movsl
aad
and
pop
subb
dec
push
push
stos
jle
xchg
push
lret
or
jmp
icebp
rolb
or
cli
cmpxchg
push
cmp
lods
jmp
out
lods
sub
add
imul
sbb
jp
inc
and
or
add
jg
mov
jge
cmpsl
dec
cmp
ljmp
jmp
iret
jp
cltd
popf
arpl
pop
mov
push
cld
movsl
je
ljmp
jmp
roll
out
sub
das
xor
pop
and
sub
and
filds
jl
cmp
out
mov
ds
pop
pop
pop
cld
jg
xor
test
in
push
sbb
sub
loopne
mov
popf
jmp
and
bound
dec
ficoml
sbb
imul
inc
push
or
out
decl
jle
hlt
ffree
aam
data16
nop
adc
lock
shl
xor
loop
cmpsl
mov
decl
add
mov
out
pop
mov
push
in
pushl
push
dec
dec
mov
sub
mov
mov
sub
xchg
adc
lcall
adcl
inc
push
out
xor
sub
jle
add
scas
push
pop
mov
pushl
adc
nop
push
insl
pop
imul
ret
hlt
xor
inc
icebp
lea
xor
test
push
clc
pushl
mov
aam
xchg
loop
loopne
into
inc
mov
decl
in
pop
sub
fs
out
hlt
push
pop
push
mov
insb
and
inc
pop
mov
pushf
fwait
pop
mov
int
lock
dec
lret
lcall
and
add
push
data16
loop
dec
jmp
jle
dec
lock
adc
mov
xor
jns
add
mov
mov
mov
push
sub
adcl
xchg
cmp
mov
push
insl
inc
push
cmc
insb
lods
jno
fnsave
addb
fstpl
xlat
loop
sub
jae
push
mov
scas
xchg
mov
sarb
in
bound
jecxz
out
imul
inc
mov
adcl
lahf
adc
xor
mov
inc
lods
fwait
loop
jmp
jecxz
dec
pop
lock
inc
lods
test
pop
pop
movsl
inc
inc
jns
add
lahf
push
les
imul
and
mov
mov
inc
jle
xchg
lock
gs
jnp
ljmp
or
jne
lret
mov
seto
sbb
sub
rcll
xlat
push
fcom
mov
mov
xor
xchg
je
pop
lahf
call
pop
pop
or
cmp
xchg
mov
add
lea
adc
roll
adc
or
adc
add
push
jp
incl
jbe
pop
push
mov
xchg
and
enter
lret
shrb
xchg
jnp
outsb
mov
jmp
addl
cmp
mov
cmp
cmp
cmp
addr16
cmpsl
imul
xor
mov
scas
dec
jmp
ljmp
mov
add
mov
pop
pop
lea
call
js,pt
adc
lcall
jae
add
xchg
in
insl
aam
mov
mov
xchg
adcl
push
jne
adc
clc
pushf
stc
pop
lcall
pusha
add
pop
sbbl
js
xchg
pop
fwait
rcr
aas
insb
jg
test
pop
retw
mov
adc
insb
push
shrl
les
nop
add
sbbb
scas
add
loope
mov
outsl
push
ja
cmp
push
pop
add
loop
xor
dec
mov
pusha
xchg
lock
inc
and
scas
dec
mov
sbb
cmp
cwtl
push
incl
cmp
sub
sbb
in
or
sbb
inc
pop
outsb
mul
push
leave
sub
movsl
jmp
mull
mov
jl
js
adc
inc
inc
mov
decl
cltd
daa
adc
adc
enter
dec
pop
push
mov
mov
das
mov
aam
mov
repz
aad
xchg
outsb
sbb
push
sti
xchg
xchg
xchg
cmc
sti
fadd
scas
pop
lods
adc
in
push
xchg
mov
movsl
stos
pushf
mov
cmp
cltd
aam
mov
scas
test
inc
lret
inc
rclb
push
aas
mov
lcall
or
mov
dec
push
pop
stos
jmp
jnp
mov
aas
jg
nop
loopne
mov
push
mov
nop
orb
inc
pop
pop
push
ds
cltd
jmp
and
repz
fcoml
push
cltd
mov
sbb
jl
insl
ja
push
mov
jmp
push
in
fs
xchg
nop
lock
xchg
dec
sub
add
popf
mov
fs
arpl
inc
test
mov
cmc
add
js
and
and
push
mov
or
cs
decl
mov
xor
sub
and
cmpl
out
shll
daa
mov
dec
xchg
push
mov
jg
pop
into
loop
test
ljmp
aam
dec
cs
xchg
push
je
repz
dec
js
popa
stc
outsl
sub
cmpsb
arpl
sbb
adcb
ljmp
fimull
in
mov
hlt
in
jne
outsl
adc
or
xor
push
or
jns
xor
call
data16
outsl
out
out
stos
jmp
xchg
int
cmp
mov
sbb
mov
pop
ret
popa
inc
test
push
cmp
cs
lds
cmp
fidivrl
leave
jmp
sub
aaa
push
sub
dec
incl
aad
out
pop
ret
dec
sahf
inc
sub
orps
push
aad
jg
popa
std
lahf
cmp
sbb
loope
arpl
pushl
loop
lret
xor
mov
lods
in
push
out
scas
outsb
leave
xor
pusha
enter
jmp
out
es
mov
mov
repnz
int3
int
mov
out
lahf
push
add
xchg
fsubs
adc
scas
js
or
stos
int
dec
fisttpl
je
subb
fdivr
mov
push
cmc
mov
rcl
jno
adc
ss
test
mov
rclb
cld
jmp
je
push
icebp
or
sub
and
jecxz
gs
dec
pushl
xchg
jne
dec
push
sbb
push
test
cs
mov
jg
and
or
sub
xor
xchg
cmp
mov
or
lcall
pushf
add
or
cmpb
hlt
stos
pop
mov
sbb
pushf
lea
jne
int
icebp
inc
incl
fistpll
sub
leave
imul
fwait
cmc
insl
lock
cmpsb
movsb
in
movsb
jbe
jb
std
je
mov
into
scas
pop
mov
shl
xlat
jge
out
repz
push
mov
lcall
add
in
dec
int3
xchg
sbb
jae
sbb
xchg
inc
loope
cli
idivb
xchg
add
mov
addl
jg
cmp
pop
jnp
lock
cmc
sbb
jnp
jg
sub
xor
push
mov
and
mov
subps
sub
mov
decl
sub
enter
sub
addr16
popf
dec
mov
cltd
xor
add
cld
decl
mov
mov
mov
loopne
mov
jns
outsl
add
mov
std
mov
push
adc
cmp
test
in
dec
jmp
pop
ret
imul
fnstenv
jl
stos
test
lcall
iret
das
fnstenv
mov
call
push
jecxz
pushf
mov
xchg
pop
hlt
sub
repz
push
pushf
call
push
and
out
movsl
popf
dec
filds
js
out
mov
push
pop
and
ja
push
jmp
call
and
stos
sbb
pop
mov
adc
mov
lock
inc
jno
out
out
xor
push
or
dec
mov
call
orb
cmp
aam
filds
hlt
sub
je
adc
push
xlat
sahf
mov
lock
enter
pushf
iret
ds
rolb
repz
lcall
mov
cmc
mov
rolb
inc
repz
jge
sub
lcall
out
sbb
out
push
pushf
int
icebp
frstor
repz
pop
add
lods
call
sub
dec
jmp
incl
pop
lcall
dec
jl
inc
ret
xchg
in
push
in
sti
pop
lahf
lods
lcall
mov
xchg
daa
outsl
sbb
add
ja
test
ss
loopne
cltd
sub
xchg
sar
cmp
pop
ljmp
mov
jo
scas
clc
lcall
dec
fs
mov
cmp
movsb
mov
and
jl
call
sahf
jg
and
add
ds
insl
or
cmpl
add
fldcw
jmp
stos
pop
xchg
lock
int3
mov
movsb
rsm
and
cmp
stos
cltd
lods
divl
mov
jns
sub
xchg
dec
out
test
fucomp
add
in
cmp
dec
mov
jl
shlb
dec
jle
mov
sbb
in
insb
jle
call
pusha
mov
inc
pop
dec
dec
push
nop
sbb
ror
ljmp
stos
mov
fwait
cmpsb
out
jno
inc
pop
mov
inc
mov
xor
cs
ror
jae
jge
push
mov
sub
xlat
jns
sbb
sbbb
test
or
push
pop
test
mov
xchg
sbb
enter
or
or
and
ret
test
cmp
lods
shl
sbb
in
fisubs
and
sti
xor
pop
insb
jmp
cmp
adc
call
dec
repnz
iret
fwait
test
lcall
pop
les
inc
icebp
sbb
jp
mov
sti
and
dec
in
pop
pushf
and
mov
sbb
std
pushl
std
dec
and
es
bound
sbb
mov
sarb
inc
cld
lret
pop
dec
ficomps
out
sti
aad
lock
mov
lcall
movsl
mov
loop
push
inc
push
dec
scas
aam
xor
add
or
push
inc
stos
add
out
cli
fwait
push
mov
test
cmp
dec
std
mov
call
mov
add
pusha
sub
or
loopne
xchg
shll
fistps
pop
ljmp
xor
std
pop
mov
pop
or
pop
loop
rorb
push
sahf
data16
mov
sar
imulb
mov
dec
ss
mov
mov
xchg
in
mov
mov
add
inc
and
adc
or
in
inc
fbstp
jg
push
pop
int
imul
push
orl
out
mov
push
out
add
je
mov
or
lcall
push
nop
mov
adc
push
pusha
stc
add
lcall
dec
xchg
outsb
cmp
iret
mov
inc
mov
imul
add
jmp
iret
pushf
xchg
movsb
mov
sub
xor
xlat
xchg
xchg
add
add
ljmp
addr16
imul
shlb
in
ljmp
cmp
sbb
das
pop
incl
ds
adc
icebp
xchg
xor
pusha
fnstcw
out
data16
xor
or
ljmp
and
jle
xor
cmpsl
nop
out
daa
pop
mov
push
iret
pushl
in
pusha
mov
or
xor
push
and
andb
in
cwtl
in
mov
iret
cmc
int
pushl
xchg
sarb
dec
cwtl
out
ja
push
enter
push
movsl
xor
push
push
pop
inc
out
subb
jmp
or
outsb
fimuls
pushf
push
movb
fstl
in
arpl
jmp
js
cmpsb
jns
es
sbb
adc
cmp
into
sub
fistl
sbb
pop
lret
dec
lret
ficoml
imul
fdivs
push
inc
mov
inc
sbb
jns
incl
fists
push
aad
pop
inc
mov
or
and
jle
insl
ljmp
decl
shll
ret
jno
inc
ljmp
pop
mov
cmpsb
decl
xor
sub
cmp
jmp
and
fs
add
fcom
mov
aas
leave
ljmp
sub
shlb
cmpsb
cmp
fwait
lret
cmp
sar
scas
dec
xor
mov
pop
bound
cwtl
and
xor
loop
and
rcl
inc
fnstsw
and
addr16
jbe
dec
mov
or
sbb
mov
sahf
xchg
sub
rcl
add
pop
je
and
sub
sbb
decl
aam
ficompl
jae
push
cmp
xchg
jge
inc
inc
sub
pusha
pop
add
lcall
enter
pop
xor
mov
pushf
inc
out
ss
and
jns
call
or
jge
scas
xor
dec
inc
leave
xlat
push
es
sbb
leave
shll
jmp
jne
mov
fsubrl
repnz
adc
add
dec
or
fistps
add
ljmp
lods
xor
inc
push
pop
push
and
mov
xchg
and
out
std
das
lea
sbb
jp
add
outsb
pop
aad
xchg
cmp
jb
or
test
cmpsl
sub
mov
adcl
out
popf
adc
mov
jmp
nop
inc
mov
xchg
loopne
xor
mov
cltd
fwait
jg
mov
mov
lds
outsb
inc
insb
inc
add
lds
fucom
arpl
xchg
cmp
jp
icebp
cmp
call
pop
mov
xchg
sti
aas
fimuls
clc
jne
ljmp
loopne
ds
sbb
mov
pop
or
test
pop
lret
sahf
cwtl
aad
mov
pushl
or
xchg
or
xchg
shrl
pop
jmp
fisubrl
dec
jnp
mov
jns
incl
and
sahf
xor
dec
iret
inc
test
call
dec
pop
mov
loopne
mov
nop
pop
loope
push
cmp
lahf
mov
dec
in
decl
jne
adc
xchg
fs
in
inc
jl
mov
imul
out
call
cmp
mov
mov
movsb
mov
adc
ja
fisubs
decl
xor
fwait
les
inc
push
aas
ss
popw
sbb
in
and
hlt
jo
mov
or
negl
cmp
cmp
cmp
or
cld
xor
inc
std
lea
jo
xor
out
subb
lock
out
and
les
test
jg
outsb
mov
jns
sub
ljmp
subb
pusha
fsubrp
cmp
xchg
jg
ljmp
xchg
scas
push
adc
push
test
mov
sub
xor
call
iret
inc
outsb
dec
mov
gs
pushf
or
test
loop
pop
pop
rorl
fisubrs
jmp
inc
adc
cmpb
repz
stos
mov
insb
fists
xchg
pushl
push
movsb
mov
dec
push
push
and
dec
or
push
call
cmp
insb
cli
fsubp
jnp
add
push
sub
lret
jl
aas
xor
mov
insb
icebp
jle
adc
adc
aad
dec
testl
decl
jns
mov
cmp
sbb
in
stos
push
outsb
fucomi
and
push
adc
fistpl
ljmp
stc
vmovsldup
push
push
lcall
pop
dec
mov
inc
xor
lods
incl
dec
movsb
cs
mov
cltd
jle
adc
or
test
lcall
sbb
cmp
rcrb
jmp
add
jmp
mov
nop
mov
shlb
cmp
hlt
bound
shl
js
inc
fidivrs
dec
jp
fsubrs
stos
jne
out
jb
cmc
xor
xlat
lahf
loopne
inc
jno
cmpsl
popa
call
xchg
push
leave
or
xor
xchg
imul
js
pop
lock
jmp
sahf
inc
add
sub
push
mov
adc
es
jmp
cmp
mov
push
sbb
in
and
cmpsl
test
stos
stos
addr16
jo
cmp
add
out
inc
decl
lods
mov
sub
enter
out
inc
je
add
repnz
pop
mov
lcall
rclb
mov
vxorps
mov
fcoml
push
cld
outsl
pop
sbb
call
add
lcall
mov
adcl
in
cmp
push
arpl
lcall
push
cmp
roll
xchg
ds
lret
dec
stos
test
cld
or
push
repz
mov
sbb
mov
jo
pop
popf
mov
cld
mov
jnp
mov
xor
pushl
decl
sti
out
je
sbb
dec
insb
stc
mov
cmp
ljmp
jmp
inc
sbb
add
pop
sbb
movsb
mov
ljmp
xchg
insl
cmp
cmp
jle
xor
sub
insb
pop
and
add
lds
lock
fcomi
adc
call
mov
xchg
lcall
mov
mov
xor
add
arpl
cltd
cld
cmp
sub
ljmp
dec
jp
clc
cltd
dec
testl
mov
stos
cmp
std
incl
and
cld
std
xchg
fstl
cmp
sti
jo
jbe
jb
and
adc
jb
pop
fstps
mov
fnsave
xor
lcall
imul
push
das
ss
sahf
jnp
inc
cmp
imul
jg
sbb
mov
lret
push
and
rolb
push
cmc
in
out
jmp
repnz
fstps
adc
das
subl
ljmp
or
in
mov
ja
dec
xor
jno
ficomps
jne
loope
pop
cmp
jns
inc
cmp
ds
movsl
push
jl
in
inc
out
ret
repz
bound
or
lcall
shr
mov
mov
popa
int3
push
cmpsb
xor
jp,pn
dec
stc
mov
icebp
mov
inc
jp
stos
je
and
movsl
xchg
stos
fisubl
mov
cwtl
cmpsl
adc
clc
cmp
jb
or
aaa
dec
stc
mov
mov
xchg
cmp
cli
pushf
std
mov
sbb
daa
int3
or
add
jl
js
push
xchg
jb
jg
cmp
loop
insl
test
sti
fcomps
bound
mov
dec
cld
lahf
pop
sub
and
shlb
cmp
mov
jle
sub
frstor
outsl
insl
mov
aam
loopne
cmp
or
icebp
jns
call
ja
mov
sti
mov
pop
add
and
xchg
xor
lods
leave
movsl
bound
gs
sahf
mov
bnd
and
mov
femms
js
stos
ljmp
add
outsl
dec
out
dec
dec
mov
adc
pop
adc
dec
inc
insl
cmpsb
adcl
enter
sbb
out
add
fucomp
jge
add
lods
cld
xor
dec
pop
lcall
in
cwtl
orl
out
inc
lock
pop
arpl
mov
pushl
pushf
rep
jo
push
test
adc
adc
aam
adc
cld
ljmp
mov
stc
push
or
jecxz
js
push
iret
daa
inc
idiv
pushl
adc
mov
fs
pushf
xchg
xchg
or
inc
xorb
js
lahf
sar
pop
or
shlb
pushf
mov
inc
mov
sbb
enter
ret
pop
repz
sbbb
inc
lods
xchg
shll
and
jg
pop
lcall
xacquire
mov
je
mov
sti
inc
out
cli
push
jno
jnp
pop
into
mov
push
mov
fdivs
xor
jbe
imul
lods
decl
addr16
test
inc
movsb
xor
mov
ljmp
xchg
call
clc
repz
ficomps
daa
outsb
sbb
jne
cmpb
or
test
jne
fld
pushl
addr16
insl
pop
mov
out
mov
ljmp
jle
sarl
mov
lcall
xchg
into
sbb
int
cwtl
imul
movb
popf
incl
icebp
pop
movl
popf
test
jg
sbb
repz
lcall
sub
loopne
fldenv
repnz
out
test
jae
ss
add
mov
lcall
jmp
adc
in
xorl
or
gs
cmp
inc
push
dec
or
out
mov
aas
or
adc
xor
or
fnsave
pop
lret
fucom
jmp
inc
sbb
enter
call
and
pop
aam
loopne
sbb
and
in
scas
mov
mov
hlt
in
jmp
test
xorl
pop
shlb
and
in
jge
mov
sbb
dec
xchg
jns
sub
call
xchg
addl
xchg
loop
xlat
pusha
ljmp
fucomi
adc
add
mov
or
mov
and
inc
ljmp
jge
sbb
test
dec
mov
push
xchg
cmp
inc
popf
pushf
adc
mov
jno
lret
cmc
xchg
jmp
jbe
mov
dec
dec
mov
dec
xchg
dec
cmp
fs
dec
sub
aaa
cld
jbe
mov
and
push
jae
push
ret
or
lcall
orb
and
sbb
pop
sbb
mov
mov
incl
mov
push
push
mov
cld
jl
ret
movsl
push
into
popa
stc
inc
xchg
mov
das
adc
lcall
jbe
negl
in
or
jnp
inc
mov
cld
inc
in
loop
push
jns
pop
mov
sbbl
scas
mov
mov
loopne
insb
jge
mov
adc
fs
insb
in
mov
jmp
imul
xchg
push
fldl
imulb
or
hlt
pop
xor
jp
cli
xor
xchg
sbb
andl
in
test
mov
out
jns
add
cmp
add
sub
add
movsl
jg
repnz
mov
iret
jle
push
mov
jae
mov
mov
jo
data16
dec
leave
push
add
push
rcrl
inc
shlb
mov
data16
mov
nop
mov
scas
lods
mov
sbb
inc
inc
ljmp
pushl
xlat
pop
ds
cmc
mov
fistl
andl
shll
mov
ljmp
sub
addb
loop
mov
jmp
test
movsb
pop
lods
into
por
filds
fimuls
pop
mov
adc
xchg
dec
add
fcoms
push
push
jg
repz
ret
add
add
xchg
mov
mov
imul
jge
aad
jnp
jnp
cltd
or
xor
mov
sub
pushf
lcall
push
filds
adc
int3
xchg
jns
or
sub
pushl
hlt
jo
adc
dec
mull
jne
or
mov
int
test
jmp
mov
aad
addr16
adc
outsb
outsl
push
cld
lcall
cmp
cmpsb
inc
test
jb
imul
int3
imul
mov
es
inc
mov
add
daa
gs
push
rorb
dec
out
xchg
push
jmp
mov
dec
jp
and
push
jg
std
adc
repnz
add
dec
or
ds
aad
adc
ret
fwait
incl
gs
test
shlb
aaa
fsubrp
shlb
jg
sbb
gs
push
xor
sub
mov
lods
pop
and
pop
fcom
fwait
lcall
jg
and
stos
in
sbb
out
cld
dec
sti
in
adc
rcr
jg
hlt
xchg
je
imul
mov
sbb
xchg
insb
mov
mov
adc
daa
sbb
cmovb
test
incl
xor
leave
ret
push
filds
inc
mov
mov
decl
mov
mov
sub
fldcw
adc
in
sub
adc
mov
ret
xor
sub
pop
mov
loopne
push
mov
adcb
inc
sub
jg
sub
dec
mov
adc
cld
pop
aad
hlt
ljmp
pop
cmpsl
imul
jae
imul
cs
outsl
pusha
jle
call
ljmp
ljmp
xor
xchg
mov
ljmp
dec
mov
mov
push
es
call
and
inc
out
mov
test
push
mov
les
ljmp
out
mov
fistps
fbstp
sbb
push
and
jmp
pushf
data16
inc
mov
xchg
rcr
xchg
adc
sbb
mov
jg
and
mov
es
dec
sub
pop
cmc
inc
inc
fistpll
inc
in
pop
add
into
cld
pushl
xor
neg
int3
aad
test
adc
sub
dec
repnz
lret
rolb
xor
or
push
div
add
mov
popa
fdivrs
lock
cli
add
push
outsb
jmp
cmp
xor
incl
xchg
cmpsb
adc
aam
jmp
mov
xchg
jo
int3
sub
in
xchg
sub
dec
or
iret
inc
sbb
fisttps
cmp
adc
sbb
dec
in
int3
sbb
rorb
cmp
decl
lcall
ja
mov
or
lret
mov
sar
mov
fwait
push
and
sbb
mov
test
pop
addb
out
shll
mov
dec
adc
push
insb
mov
mov
fdivr
cwtl
add
icebp
jp
decl
xchg
sbb
mov
mov
xchg
leave
jl
jno
pushl
mov
sbb
movsl
pop
cmpsb
push
repnz
int3
addr16
cltd
xor
lret
mov
mov
jmp
pusha
addr16
mov
xor
mov
lcall
add
test
inc
test
jmp
cmp
out
xchg
dec
jno
fptan
mov
jp
ljmp
lock
fnstsw
xchg
ds
xor
lds
jno
loop
add
jmp
xchg
call
mov
enter
cltd
loope
arpl
mov
out
dec
xchg
inc
into
jnp
pushl
sbb
mov
pop
push
pop
inc
mov
mov
imull
lds
adc
push
test
lret
push
repz
mov
mov
pop
sbbb
and
pushf
sub
inc
jb
je
das
xor
xchg
and
outsb
loop
push
call
lahf
adc
mov
call
fcomps
ljmp
clc
mov
sbb
mov
jmp
fcmovne
test
lret
jl
and
nop
fs
jge
mov
and
jg
jmp
popf
inc
cmp
outsl
or
daa
aaa
mov
prefetcht1
mov
icebp
pushl
cmpsb
fisttpll
cld
cmpsb
dec
pop
sbbb
fwait
mov
or
pushl
repz
fnstenv
jbe
out
mov
out
push
push
in
mov
push
xchg
jmp
mov
push
pop
mov
sbbb
xor
insl
cmp
imul
push
dec
nop
ret
aas
cmp
out
dec
loop
imull
and
xchg
jl
insb
loop
insl
add
cmp
shrb
xor
dec
clc
pop
inc
mov
aad
add
mov
cmp
lret
dec
xchg
and
inc
mov
and
push
push
xchg
cmp
aaa
cmp
int3
cmp
out
scas
sub
add
aad
loopne
fcomps
pop
xchg
inc
sub
scas
jg
divb
xchg
hlt
dec
sbb
popf
adc
xchg
lcall
shrb
scas
jns
inc
fsubs
lds
test
mov
jl
push
and
fisttpll
push
push
bound
cmp
scas
cltd
imul
decl
std
and
bound
lods
lea
enter
fnstcw
call
mov
loope
cmp
cmc
dec
push
aas
stos
sti
daa
repz
dec
inc
mov
ret
fstpt
lahf
outsb
ljmp
fcomp
push
mov
mov
sub
xorb
or
jnp
loop
decl
pop
pop
mov
dec
dec
je
lret
inc
mov
xor
dec
data16
jno
in
xchg
ljmp
pop
repnz
lods
mov
popf
scas
jg
ljmp
ret
mov
cmp
jecxz
cmp
outsl
jnp
std
fmuls
xchg
daa
fcomps
pop
push
adc
repz
inc
xchg
inc
mov
decl
gs
test
and
cmp
sti
imul
cs
and
lret
xchg
inc
movsb
loopne
ljmp
pop
pop
fdivrs
jns
push
jb
lods
mov
xor
stos
cmp
xchg
sub
xchg
clc
arpl
xchg
cmp
cmp
jg
pusha
push
sbb
addr16
stos
mov
mov
shl
push
call
gs
xchg
stc
or
xor
and
inc
or
add
fbstp
pop
cwtl
in
mov
pop
enter
fdivr
jp
adc
sbb
cmp
sbb
incl
sub
or
or
jle
fwait
lock
xlat
inc
jmp
and
sbb
xorb
idiv
inc
xor
les
aaa
test
push
xor
adc
ds
push
inc
mov
mov
stos
mov
xor
adc
popa
dec
cmpsb
lahf
inc
incl
sub
scas
push
mov
gs
push
movl
incl
lods
pop
inc
fbstp
mov
pop
jp
pushf
add
js
test
repnz
mov
xor
pop
clc
push
cli
lcall
aaa
cmpsb
xor
lcall
jecxz
dec
xor
aaa
rolb
ror
call
lret
or
rolb
pushf
xor
dec
int
mov
repnz
mov
test
sub
xor
fidivl
jge
incl
sbb
js
cltd
cld
movsb
stos
inc
xchg
and
repnz
or
orl
call
leave
and
inc
sbb
mov
add
fisubs
andl
mov
mov
pusha
js
add
mov
push
inc
faddp
pop
gs
mov
jp
sub
mov
lret
das
ja
xorb
incl
aad
out
add
in
cmc
stos
sbb
test
jp
inc
std
pushl
aam
inc
gs
fsubl
cwtl
pop
test
jl
jae
jg
call
mov
mov
cmp
mov
pop
xor
rcrb
mov
mov
stc
mov
cli
pushf
pop
add
lods
pop
dec
pop
les
out
movsl
cmp
rorl
jmp
mov
call
into
mov
inc
cmpsl
jle
mov
pop
cmpsb
adc
sar
lcall
in
dec
jp
mov
sbb
jecxz
add
push
mov
jg
push
ljmp
xor
xchg
sub
jno
ret
adc
mov
pushl
dec
dec
mov
lcall
fs
xor
shlb
shrb
aaa
lcall
fbld
sbb
movsb
inc
cmp
mov
add
mov
xlat
rolb
cmp
dec
je
ljmp
fimull
xchg
jb
xor
xchg
sahf
int3
orb
pop
ljmp
lahf
jle
jo
ss
jnp
in
outsl
dec
dec
pop
dec
and
into
push
jp
frstor
decl
ljmp
mov
push
sub
mov
pop
mov
xchg
fistpll
jnp
adc
mov
push
push
jbe
dec
mov
es
aaa
mov
xor
dec
mov
jecxz
mov
je
cmp
pop
xchg
mov
xor
and
xchg
notl
int3
sar
call
inc
stos
ret
insl
loope
fiaddl
or
xor
shrl
add
fcomip
ljmp
inc
loop
xor
out
insb
sub
push
decl
popa
and
jle
rcrb
shlb
arpl
cs
jl
into
enter
xchg
mov
mov
cmp
cwtl
xor
lcall
mov
call
movsl
sbbb
inc
shll
cmp
dec
push
jl
stc
pop
inc
cmp
mov
pop
pop
mov
cmpsl
xchg
and
and
and
fldenv
call
mov
push
arpl
mov
sarl
mov
mov
or
shlb
sub
xchg
loopne
mov
lea
cmc
fldt
fisubl
mov
sub
decl
dec
and
xchg
leave
push
jbe
rcrl
jb
push
jg
hlt
adc
push
int3
sub
scas
mov
xchg
fs
mov
shrb
inc
mov
sbb
ficoms
mov
ret
lahf
mov
lret
mov
out
loope
and
iret
pusha
mov
cmpsl
xchg
mov
pushl
imul
fbld
cwtl
and
rorb
mov
test
jg
xchg
mov
and
pop
dec
fmull
and
xchg
test
add
xor
pop
or
or
jmp
push
xchg
aas
jbe
jg
cmpsb
lcall
xor
add
sbb
out
sbb
mov
or
jns
mov
jmp
ret
dec
cmpsb
icebp
popa
outsb
das
nop
pop
push
out
sbb
xchg
sbb
out
cmp
adc
adc
mov
loopne
lods
push
adc
adcb
rcll
add
fbstp
fldl
inc
std
aaa
insl
pop
push
xchg
ret
clc
xchg
mov
cmc
sti
aad
cli
not
insl
incl
xor
scas
popl
adc
mov
adc
jne
dec
out
shll
out
pushf
ret
lcall
lea
xchg
fwait
cmpsb
push
repnz
addr16
out
or
jg
fwait
xchg
movsb
lret
cltd
subb
jne
or
fxam
loop
mov
xor
xor
push
pop
mov
push
mov
mov
add
into
movsb
loop
pusha
add
xchg
icebp
int3
popa
fcmovu
pop
pop
call
loopne
dec
fucomp
divl
insb
cltd
push
data16
xchg
push
inc
add
call
loopne
lcall
loop
ljmp
and
hlt
out
call
outsl
clc
call
daa
push
imul
pushf
mov
jnp
push
jmp
sub
imul
pop
adc
scas
cmp
pushl
fidivs
test
dec
outsb
mov
add
es
ljmp
push
cli
push
push
dec
and
pop
jge
out
inc
inc
jmp
jmp
mov
les
dec
inc
imul
mov
push
in
push
lods
jp
decl
in
lock
incl
dec
push
jb
dec
cmp
icebp
and
lcall
mov
mov
aas
add
pop
loope
sbb
insl
idivb
and
mov
out
ljmp
dec
ss
pusha
pop
mov
push
lret
call
xchg
dec
cmpsb
rolb
movsb
push
jnp
inc
aaa
out
push
pop
sahf
icebp
sub
addr16
ljmp
mov
out
mov
test
add
aam
ficoms
or
decl
mov
enter
jp
dec
adc
shl
cmpsb
sbb
jecxz
jmp
hlt
call
imul
push
out
or
out
imul
cmpb
xchg
xchg
sbb
mov
xlat
mov
add
sbb
or
xchg
jo
idiv
incl
int
mov
ret
xchg
mov
mov
insb
dec
fwait
pop
sbb
fidivrs
incl
xchg
dec
imul
lret
ret
mov
rol
mov
shl
and
call
test
daa
mov
cli
mov
fcoml
add
cmp
int3
dec
jne
jl
loopne
call
push
inc
mov
or
scas
dec
cltd
push
mov
call
push
cmp
andb
inc
adc
xchg
sub
sbb
cld
outsl
mov
push
incl
bound
push
ret
repz
test
jbe
adc
in
sar
incl
rcl
dec
movsl
jbe
out
insb
mov
add
cmp
cmpsl
push
pop
orl
ret
xor
clc
movsb
stos
in
sarl
mov
das
cmp
fdivr
adc
xlat
push
cmp
aaa
inc
push
sub
cmp
out
sbb
int3
outsl
add
les
int3
sub
jno
jns
add
imul
mov
jmp
lcall
pop
push
dec
mov
outsl
add
jne
jg
fistps
push
pop
dec
lret
addr16
ret
cld
jge
mov
mov
call
ljmp
enter
push
iret
xor
int3
nop
dec
out
xchg
iret
lods
jecxz
mov
dec
cmc
sbb
and
test
or
negb
lcall
mov
mov
incb
aam
sbb
mov
adc
push
mov
decl
test
test
mov
sbb
cli
adc
sbb
jg
inc
sbb
mov
movsb
dec
add
pop
push
mov
fld
out
pop
cmp
adcb
mov
ffree
stos
repnz
cmp
sbb
mov
test
insl
add
aas
in
xor
lcall
call
in
test
and
cmpsb
mov
push
cld
clc
dec
insl
inc
icebp
sbb
push
add
popa
push
aas
mov
add
jmp
mov
dec
lds
mov
cmp
adc
stc
outsl
push
popa
cmp
sbb
fldcw
jne
jge
mov
ret
dec
out
popf
shll
fnstenv
jnp
rorl
incl
push
sbb
adc
adc
loopne
dec
mov
adc
iret
sahf
jecxz
jp
push
out
cmp
pop
decl
lret
int3
jl
fst
jg
test
mov
or
out
xchg
jns
lds
loop
sbb
mov
flds
cld
test
push
mov
addr16
ja
addr16
mov
outsl
cmc
mov
push
out
mov
pop
jp
lret
mov
lahf
popa
mov
push
mov
jns
xor
stos
incl
inc
adc
stos
or
movsb
and
adc
cmp
pop
and
cmpb
jno
pandn
dec
adc
adc
add
cmpb
push
adc
jg
ljmp
push
jmp
sub
mov
jne
pop
fbld
inc
jae
push
lds
mov
loopne
xchg
call
popf
loop
ret
pop
shll
push
dec
and
notb
das
or
add
jns
pop
xchg
xchg
jmp
dec
test
adc
jg
mov
mov
in
mov
not
pop
inc
jle
pop
lock
in
jno
stc
sahf
testl
xchg
or
dec
sbb
stos
mov
xorl
icebp
ja
jg
or
loopne
jle
mov
imul
mov
push
ljmp
enter
jne
push
aam
mov
fs
pop
lds
pop
loopne
incl
mov
pop
icebp
loope
and
push
aam
add
push
inc
ljmp
in
sbb
sbb
and
pop
loope
xchg
fdivs
or
adc
or
jmp
loop
jo,pn
negb
pusha
inc
cwtl
pop
dec
out
mov
cli
or
pusha
lret
xchg
inc
clc
pusha
into
insb
push
aas
pushf
push
lock
push
loop
lcall
aad
test
arpl
pop
sub
and
orl
or
pushl
or
pop
outsb
ds
pop
jne
negl
rorl
inc
push
nop
mov
inc
test
das
clc
xor
cmc
pop
push
push
pop
enter
push
xchg
aaa
dec
cld
sahf
push
call
inc
lahf
jecxz
mov
dec
pop
pop
push
inc
out
xor
cmpsb
sarb
or
fistpll
aad
push
or
mov
add
les
test
cli
sub
xor
jmp
movsl
ret
jb
adc
pushf
imul
push
test
int3
fabs
loop
sub
incl
mov
cmp
xchg
lret
loope
das
call
aad
ds
xchg
popf
fsubl
fdivrl
push
iret
addl
in
cmp
mov
pushl
xchg
push
ss
cwtl
shll
sbb
mov
loopne
into
add
pop
pop
jns
std
int
sti
icebp
fistps
mov
js
mov
xchg
dec
or
jecxz
lcall
and
add
sub
aad
jb
jge
addr16
fwait
sub
lcall
in
cmp
mov
xor
sub
sub
bound
cmp
inc
inc
shll
and
sub
int
movsb
pop
mov
icebp
dec
insl
dec
sbb
mov
pop
xchg
push
add
test
adc
dec
pop
mov
inc
fcompl
mov
xor
dec
push
jb
push
mov
mov
pop
inc
adc
lea
inc
cmpsl
mov
out
enter
and
cmpl
cmp
incl
xor
test
mov
fmuls
andl
sahf
and
jmp
decl
push
sti
cld
dec
dec
cli
dec
jge
fadds
repnz
adc
leave
mov
mov
jne
decl
xorb
push
or
and
loopne
fdivrs
hlt
dec
sub
lret
adc
mov
mov
incl
jecxz
dec
std
jl
inc
dec
bound
into
shll
movsb
sub
and
cmpsb
sbb
ljmp
data16
sub
inc
int3
lcall
std
repnz
mov
jnp
cmp
pushf
xchg
test
mov
enter
decl
mov
mov
rorb
lea
inc
ds
cmpsb
jecxz
rorb
inc
sarb
test
sti
iret
mov
jmp
dec
outsb
and
xchg
push
ss
sti
mov
or
xchg
fisubrl
mov
insb
in
das
xor
jl
fs
mov
jle
roll
cmp
rcll
stos
push
or
sub
pushl
dec
mov
cmp
nop
or
cmp
jp
adc
jmp
pop
xor
pop
or
lea
out
and
insb
testl
xchg
mov
loope
push
and
mov
mov
pop
lods
clc
lods
fwait
push
lahf
into
repnz
mov
sti
out
clc
icebp
ljmp
inc
mov
int3
mov
dec
sbb
cmp
aad
pop
jg
push
movsl
ficoms
stos
jae
lea
loopne
test
addr16
mov
sbb
dec
push
dec
shll
orl
call
in
in
stos
jge
sbb
je
cmp
or
cmpsl
mov
mov
adc
sub
cmc
test
mov
mov
or
inc
pusha
xor
loopne
fdivr
adcl
decl
out
aaa
out
adc
push
jg
fwait
jmp
stc
inc
xchg
xchg
sbb
clc
loop
or
jmp
cmp
inc
ja
mov
xor
cmpsb
aas
mov
nop
push
decl
xor
imul
cmovle
push
xchg
subb
push
cld
fstp
add
sub
nop
xchg
shl
push
xchg
subb
push
decl
mov
jb
ds
dec
fs
aad
fsub
pop
or
and
cmc
lcall
push
pop
rorl
and
or
jmp
adcl
cwtl
lods
sbb
xor
mov
loopne
sub
decl
sub
xor
or
arpl
lcall
fwait
inc
dec
mov
movl
jae
leave
jmp
push
out
pop
idiv
push
jmp
xor
dec
lahf
mov
popa
lret
cmp
cwtl
movsb
lahf
sbb
cmc
lcall
pusha
xchg
cmp
mov
xchg
iret
lods
outsl
clc
sbb
lock
sahf
rolb
clc
sbb
or
xchg
or
mov
mov
ffreep
jns
jmp
cwtl
out
cmp
in
xor
mov
push
test
pop
movb
ljmp
je
inc
leave
out
mov
out
icebp
je
sub
sub
scas
mov
pop
loop
je
gs
idiv
incl
in
int
fs
mov
cmp
push
mov
sbb
mov
push
outsl
add
push
mov
pop
cmp
cmp
jp
mov
adc
xchg
xchg
adc
xor
notb
cmc
cmp
incl
negb
adcb
out
or
adc
adc
ficompl
in
clc
jne
mov
adc
lods
xchg
add
pop
pop
push
ss
pusha
mov
push
cmp
gs
or
test
imul
inc
push
pop
mov
mov
adc
scas
pop
cli
adc
push
xor
movsl
dec
mov
push
push
jmp
and
cmp
lods
lods
js
imul
mov
fldl
outsb
jecxz
adc
cmp
es
inc
inc
in
push
dec
popf
outsl
sub
mov
push
push
inc
xchg
add
and
data16
mov
inc
inc
ret
and
shll
push
xchg
adcl
jg
adc
mov
leave
inc
sub
mov
xchg
cmp
sbb
jmp
and
push
jle
clc
sbb
push
xor
xor
sbb
jmp
push
subl
xor
sar
lahf
xor
mov
xor
push
repnz
mov
pop
clc
dec
test
lds
mov
push
mov
lret
pop
fucomip
lea
push
mov
push
jle
mov
pusha
ja
sbb
bound
imul
pop
insb
add
icebp
fldcw
and
outsl
leave
xor
decl
jle
sarl
clc
adc
and
jecxz
sub
pop
movsl
ret
stc
inc
xor
jns
xchg
loop
lcall
inc
or
adc
push
mov
out
lock
lock
xor
test
lret
sbb
push
add
aad
lcall
sub
or
mov
xchg
lcall
out
cltd
cmp
jge
mov
and
es
or
xchg
mov
or
jnp
lcall
inc
push
cmp
pop
sbb
jl
test
xor
fnstsw
scas
add
dec
and
mov
mov
fldl
fstpl
clc
outsb
or
or
mov
loopne
scas
push
jmp
pop
mov
insl
add
lret
cmp
push
and
pop
add
gs
mov
movsl
adc
add
xchg
xchg
out
outsl
cli
jg
fsubrp
aad
push
push
pop
mov
popf
dec
xor
xor
js
xlat
or
stc
push
lea
jo
xchg
testl
mov
arpl
aaa
adc
dec
fiadds
and
jb
leave
je
or
push
loopne
enter
cmc
mov
mov
gs
mov
call
lods
pop
ret
dec
pop
xchg
sbbb
mov
stos
xchg
call
and
sub
lea
jl
push
sbb
jmp
stos
jne
cmp
ljmp
dec
rcrb
aam
xor
in
jae
int
mov
mov
sti
or
lea
cmp
test
sahf
bound
sbbl
lcall
pusha
pop
icebp
sbb
sbb
mov
mov
inc
test
das
sub
lea
dec
mov
dec
ljmp
dec
cmp
cmpsl
pop
js
inc
jb
adc
ficomps
lret
dec
cltd
adc
pop
jg
or
addr16
fadds
dec
sbb
pop
lock
inc
negl
push
call
pop
push
dec
lods
adc
mov
mov
mov
ret
lcall
or
filds
inc
mov
fldcw
sbb
mov
jg
pushl
inc
sub
jns
cmp
arpl
fidivrl
mull
mov
jae
push
xchg
adcl
rcl
sbb
jle
xchg
stc
fsubp
out
mov
xlat
jb
ret
imul
cs
sbb
mov
pop
sbb
ja
and
xchg
mov
insb
jmp
jno
decl
cmp
jae
mov
pop
dec
or
inc
push
jae
sarb
mov
arpl
clc
mov
xor
bound
mov
mov
lcall
push
ja
mov
les
mov
add
mov
xchg
outsl
sub
add
incl
imul
mov
adc
lock
clc
popf
mov
push
and
push
jge
push
hlt
js
sti
incb
out
or
jbe
jbe
cmp
mov
pushl
jmp
add
dec
jb
mov
ficoms
xchg
fst
push
shlb
std
push
jmp
in
lods
inc
and
mov
ja
in
dec
sub
jbe
adc
add
lret
test
incl
inc
hlt
xor
popf
mov
xchg
mov
lods
js
mov
mov
jmp
in
lret
pushf
std
mov
pop
cld
call
xor
insl
jbe
mov
xor
das
movsb
test
sbb
sti
jle
aaa
aad
inc
dec
push
mov
mov
push
lcall
repz
jae
fidivrs
jo
ss
push
jecxz
push
pop
call
es
mov
fimuls
push
rcrb
pop
fildll
xor
fisttpl
xchg
pop
test
mov
popf
pushf
movsb
fwait
jl
jmp
cmpsb
cmpsb
out
xchg
js
mov
imul
loop
lock
add
ljmp
dec
scas
mov
cld
sub
cld
sub
inc
mov
out
in
or
lock
call
xor
inc
xchg
int3
or
dec
push
nop
gs
sahf
sub
cmp
xor
sbb
jnp
mov
nop
fdivr
jl
xchg
fs
ljmp
out
pop
jnp
xor
cmpsb
cmp
jmp
sub
sub
pop
dec
pusha
mov
mov
aad
jle
push
xor
jecxz
ljmp
clc
mov
lock
jbe
mov
jns
leave
pushf
mov
cs
int3
sbb
jmp
mov
mov
push
pop
sub
add
js
add
xor
pop
cmpsl
and
imul
xchg
lea
pop
add
bound
into
jl
fbld
ljmp
icebp
mov
pop
addr16
inc
stos
jle
push
sbb
je
xchg
in
and
cmp
or
aaa
lret
add
std
mov
or
pop
push
ljmp
incb
loope
lea
pop
fprem1
mov
jg
inc
dec
stc
js
in
leave
dec
sbb
adc
cld
sub
xor
mov
xor
push
clc
inc
sub
sahf
jge
int
clc
scas
popf
xor
cmp
jge
push
cmc
insl
cli
xor
pop
cmp
aas
arpl
and
push
lret
lods
lods
pop
sub
cmpsl
decl
dec
stos
shll
dec
test
pusha
xchg
inc
movsb
adc
sbb
lret
lret
pushl
std
ljmp
enter
jg
int
xchg
mov
inc
dec
addr16
lds
loopne
stc
shr
shr
stc
es
mov
adc
outsl
lcall
push
xor
sahf
adc
lret
mov
pop
xchg
mull
cli
pushl
pop
mov
int3
adc
push
shl
lret
dec
insb
push
mov
xchg
das
push
fwait
or
mov
pop
pop
inc
jne
dec
mov
test
xor
imul
fistpl
mov
xchg
idivl
not
and
add
push
push
pop
mov
sub
std
enter
or
mov
or
mov
data16
jg
cli
inc
cmp
test
sbb
sub
add
jl
fsubl
lcall
sub
push
and
in
xchg
je
or
incl
push
jg
in
scas
fists
or
stos
cld
lods
addr16
lret
xchg
sbb
test
iret
clc
ret
cmp
iret
movsl
jl
pop
orb
jnp
sar
jg
inc
dec
sub
xlat
sti
mov
fmuls
mov
cmp
ja
inc
ja
nop
icebp
or
outsb
rorl
ljmp
xchg
mov
decl
mov
jns
sbb
jno
sub
pop
movsl
ds
fcoms
sbb
jo
rolb
ds
jmp
test
pop
into
test
movsl
xchg
xor
in
or
cld
jge
shrl
sub
jb
add
add
jg
add
push
and
add
cli
adc
push
pop
cld
mov
sub
ljmp
and
cmp
cs
test
sbb
popa
add
dec
pusha
mov
loope,pt
ja
fistl
shll
pop
sbb
aas
mov
dec
and
adc
jo
shrl
les
xor
mov
sub
cli
dec
or
cmp
dec
pusha
jb
imul
mov
in
cmp
push
adc
sub
out
scas
or
pop
push
pop
push
adc
fwait
mov
jg
xchg
inc
inc
dec
mov
mov
mov
push
pop
data16
stos
pusha
sub
or
insl
xor
fsubl
cmp
jmp
jg
mov
adc
or
pushf
mov
loope
incl
jb
cmp
aam
push
adc
and
mov
cmc
push
push
mov
sbb
sub
pushl
mov
in
mov
lcall
mov
ret
gs
stos
sub
lds
jecxz
lcall
lcall
and
pop
scas
xchg
mov
nop
not
outsb
xor
pushl
mov
sbb
dec
pushf
daa
inc
ss
sbb
rorb
out
ss
cs
cmc
incl
fs
in
mov
sbb
shl
ss
push
out
lcall
lods
sub
xlat
push
sarb
sbb
lcall
gs
negb
aas
int
sbb
sub
dec
dec
jb
lcall
int
or
loopne
lcall
and
mov
push
gs
bound
fs
pop
addr16
push
sbb
cld
pop
lock
pop
mov
xor
mov
dec
jmp
clc
lret
sbb
ljmp
pushl
cmp
cli
shl
stc
pusha
push
jecxz
test
jno
xor
sarb
lea
call
loope
vmread
mov
mov
mov
mov
lds
jecxz
out
sub
scas
cld
test
jmp
lcall
dec
dec
pop
dec
lods
filds
push
sub
pop
jle
test
jmp
jae
andb
in
popa
push
add
imul
sbb
push
pop
movsl
cmpsb
xor
cmp
pop
aas
mov
imul
out
fwait
negb
fs
roll
jmp
cltd
scas
mov
fs
dec
gs
scas
or
je
xor
test
mov
sbb
jne
mov
or
bound
xor
out
rorb
and
sbbb
jp
test
and
ljmp
xchg
xor
or
sar
cltd
orl
pop
lcall
fdivl
sub
test
xchg
mov
add
std
incl
inc
in
gs
cmpl
inc
fstpl
pop
pushf
sub
jae
xrelease
insb
or
jecxz
ljmp
push
scas
outsl
imul
adc
das
add
add
mov
adc
mov
and
dec
mov
lds
push
inc
bound
jb
mov
arpl
rclb
pop
in
fbld
and
shrl
inc
out
fs
mov
jo
or
mov
test
test
lds
xor
xor
decl
outsl
cmp
xchg
and
les
cmp
call
xor
inc
lahf
push
test
and
mov
inc
jecxz
add
out
inc
xchg
mov
or
std
das
push
jb
adc
sbbb
ret
xchg
aad
incl
fidivrl
pop
add
cs
push
mov
subb
mov
ljmp
sar
jge
mov
mov
dec
enter
inc
mov
ljmp
fdivrl
xor
fnstcw
fldl
mov
xorb
sub
jmp
popw
pop
fistpll
mov
or
cld
pop
mov
aas
out
lock
mov
lods
add
inc
push
adc
pushw
decl
fstpt
cwtl
and
nop
dec
adc
dec
daa
sbb
sub
jmp
add
inc
subl
dec
mov
outsb
sahf
outsb
jbe
es
xor
push
addr16
stos
jecxz
push
or
jecxz
loopne
inc
in
aam
add
jmp
dec
cwtl
push
jns
cmp
sub
adcl
pushl
jne
fisubrl
push
movb
xchg
pusha
ret
pop
push
hlt
push
sub
sahf
test
lcall
xlat
into
repz
adc
test
loopne
jae
fnsave
icebp
int3
into
xchg
loopne
insb
pop
leave
inc
add
add
cmpsl
jne
jmp
pusha
xchg
jmp
aas
add
cs
fistpll
lcall
sahf
in
loopne
cli
mov
xchg
xchg
popf
cld
movsl
cli
push
addr16
and
add
xor
mov
fdivrs
movsb
and
addl
push
pop
adc
imul
jb
jecxz
mov
cmp
mov
mov
and
fidivrl
xor
bound
call
xchg
lahf
push
sahf
daa
adc
inc
stos
pop
jecxz
inc
std
jae
push
cs
dec
and
clc
mov
roll
aad
mov
push
and
arpl
aaa
icebp
push
hlt
dec
stc
hlt
lods
push
xchg
sub
movsl
repnz
inc
retw
mov
mov
push
cmp
jbe
imul
stos
or
xchg
lcall
xor
fcom
cmp
lods
mov
loop
mov
rorb
pushf
es
ss
add
call
dec
sub
xor
fsubs
test
ret
dec
loopne
adc
pop
mov
leave
mov
jo
push
mov
aam
test
fwait
xchg
sbb
adc
xchg
sarb
int
loope
or
das
cmpsb
cmp
mov
sub
test
clc
ljmp
adc
les
adc
dec
push
xor
adc
es
incl
pop
cwtl
iret
dec
sbb
int3
mov
and
pusha
cwtl
sbb
rorb
ljmp
aad
sbb
fwait
adc
lahf
aaa
lret
mov
es
cmp
mov
dec
mov
out
push
imulb
fimull
lret
popa
into
cmp
push
stos
dec
sub
test
decl
in
ret
adc
pop
sub
push
cld
cmp
or
lock
pop
loopne
call
push
xlat
jne
sub
mov
jno
fsubrl
push
hlt
das
mov
notb
push
leave
mov
adc
popf
and
add
outsl
ret
push
std
decl
cld
lcall
outsl
ja
pop
cld
mov
mov
mov
jl
test
adc
jmp
hlt
call
xchg
mov
push
jno
test
mov
mov
pop
jae
adc
lcall
lods
pushf
xor
incl
call
mov
rcrb
and
js
inc
rcrb
lcall
lret
jnp
mov
cmp
test
incl
pop
jo
outsb
out
je
ss
inc
push
jae
pop
pause
gs
fcoml
testb
jmp
rcrb
loopne
add
lock
call
rorb
adcl
adc
fcmovbe
call
outsb
xor
xchg
pop
mov
shrl
jmp
es
ss
movzbl
test
push
inc
and
adc
cmpsl
aam
js
xchg
jae
ljmp
in
repz
mov
lods
cmpb
mov
ljmp
adc
and
xchg
push
sub
pusha
arpl
int3
push
mov
aad
lcall
and
push
insb
or
and
sub
mov
orb
sbb
cmp
lcall
xor
sbb
int
and
mov
ljmp
lcall
outsb
outsl
push
mov
pop
rclb
js
push
out
or
pop
imul
insl
jne
adc
ljmp
decl
jo
mov
push
cmpsl
fstps
dec
jecxz
daa
pop
fucomp
lahf
in
mov
hlt
aam
lcall
cmp
push
outsb
mov
jo,pn
test
or
push
cltd
sti
lods
pusha
icebp
ja
jge
xchg
mov
sbb
mov
adc
and
aas
lds
decl
adc
adc
pop
cmp
mov
add
rclb
jle
into
int3
jmp
das
sub
pop
mov
mov
xchg
sahf
nop
cmp
or
fs
mov
repz
mov
ljmp
adcb
fldl
pushf
imul
arpl
rep
inc
jl
incl
pop
mov
jmp
cmp
popl
lods
pop
mov
repz
sti
outsb
cmp
pop
sahf
fcmovnb
test
shl
inc
movb
out
jg
sub
cwtl
outsl
cwtl
dec
adc
jle
dec
stos
test
js
xchg
jecxz
decl
js
js
sahf
iret
pop
push
ss
gs
movsl
test
cwtl
test
mov
cld
fsub
mov
das
or
jbe
lea
xchg
scas
jmp
adc
mov
sbb
cmpsb
mov
and
ljmp
outsb
fdivrs
pusha
and
call
cwtl
lods
and
xor
lcall
pushl
xor
leave
add
mov
xor
inc
sti
and
add
lcall
sbb
sbb
pop
mov
wrmsr
in
call
aas
push
cmpl
cmp
icebp
sti
mov
mov
sub
jge
xor
pop
std
jecxz
dec
cltd
add
into
pop
inc
clc
sbb
xor
std
pushl
xlat
mov
stos
sbb
scas
fidivrs
aas
jle
push
add
enter
jp
mov
push
xchg
cli
sbb
loop
out
shl
or
dec
out
ljmp
movsl
dec
push
lcall
in
mov
cmp
adc
pushf
push
cmpsb
adc
jmp
stc
dec
int
data16
ljmp
pushl
daa
dec
push
test
dec
lods
xchg
cmp
outsb
pop
inc
pop
xchg
rolb
scas
sub
push
push
outsl
ljmp
imul
pop
iret
or
mov
dec
cltd
mov
or
pushl
or
test
adc
dec
pop
fcompl
popa
lea
mov
daa
xor
sti
xorb
ljmp
scas
mov
loopne
jg
ret
aad
jmp
dec
and
push
pop
fwait
ret
sbb
sti
sbb
dec
out
cli
js
test
movsb
inc
or
clc
or
pop
fs
cmp
fidivs
jmp
shrl
cmpsb
jl
out
test
or
fwait
popa
sub
sbb
int
out
clc
call
push
scas
dec
mov
es
jnp
pop
test
sub
ljmp
aam
pusha
xchg
inc
xchg
jmp
mov
rcr
dec
add
jo
sub
cmpsl
int
bound
jmp
push
xchg
push
xchg
loope
push
bound
pop
icebp
adc
loope
stc
sub
jne
gs
xor
xor
fildll
add
pop
sarl
cmp
rcrl
add
xchg
stos
stc
jne
inc
adc
cmp
sub
pop
aas
jbe
and
imul
call
push
mov
jae
in
xlat
popa
sub
mov
adc
iret
cmp
shll
or
call
dec
lahf
sbb
xor
xchg
jne
inc
mov
std
ljmp
and
mov
lds
nop
test
xchg
pop
ljmp
std
pushl
fsubrp
cmp
mov
aas
push
lcall
and
leave
out
cld
push
jl
sub
jne
icebp
lock
popa
and
outsb
cwtl
fdivs
xor
mov
iret
int3
shrb
push
icebp
call
call
loopne
xchg
data16
imul
xor
pop
js
lods
ljmp
icebp
sub
adc
mov
sub
inc
ud0
jmp
cmc
repz
cmp
leave
enter
push
loope
sbb
sub
aad
add
decl
sbb
add
scas
inc
icebp
repnz
cli
popa
idivl
xchg
and
and
lcall
jmp
repnz
add
std
ss
popf
test
sti
addr16
decl
fs
mov
mov
insl
test
inc
cmp
xor
movsl
xchg
mov
inc
sub
push
enter
test
aad
incl
jnp
aaa
inc
ret
cmpsl
dec
fistps
test
mov
outsb
mov
and
rcr
xor
sub
xchg
jge
repnz
daa
popa
xchg
or
lcall
and
repnz
cltd
push
lock
jmp
or
push
lock
nop
arpl
cmp
jp
pop
mov
lods
sub
push
fldcw
insb
popa
loop
mov
mov
lods
inc
imul
inc
mov
dec
fnstcw
jge
mov
out
call
dec
jae
in
xor
call
jmp
lea
lret
lea
xchg
xchg
cmp
ja
pop
cwtl
push
setns
jmp
subb
daa
aad
jecxz
jl
lods
out
jecxz
sub
pop
mov
sub
pop
mov
call
push
ffreep
cmpsl
xchg
adc
cmp
cmp
fmull
cli
pop
rol
mov
loop
in
sysret
xchg
mov
loop
pushf
shll
std
cmp
mov
insb
pop
jno
in
incl
cmp
mov
lahf
push
movsb
std
pusha
out
repz
pcmpgtb
inc
in
rorb
mov
outsl
decl
bound
fsts
inc
iret
mov
inc
inc
and
dec
fsubp
in
test
incl
dec
and
jle
xor
pushf
pop
inc
push
loope
jb
push
and
and
and
decl
insb
dec
clc
cli
mov
mov
mul
mov
and
clc
aas
out
ljmp
add
pushl
add
shrb
fiadds
bound
add
in
xchg
mov
and
lcall
jmp
pop
push
idivb
sbb
pop
andl
repnz
nop
enter
jns
cmp
fwait
cld
repnz
jo
jne
xor
push
dec
sbb
xchg
movsl
push
outsl
inc
mov
ljmp
stos
inc
popa
int3
popf
enter
outsb
imul
or
sahf
xchg
int
inc
jno
add
xchg
lods
in
mov
fmuls
push
movsl
stc
jo
push
sub
cmp
jo
and
int3
lret
jbe
out
pop
insb
lock
add
pop
dec
pushf
into
add
mov
ljmp
lock
jmp
movsb
fsts
dec
mov
xor
ljmp
nop
cmp
andl
decl
or
insl
mov
xchg
and
sbb
rorl
movsb
stos
rcrb
mov
jle
pop
and
jg
fisttpl
fistl
mov
js
xor
fnstenv
xor
sarl
jg
mov
mov
sub
negl
sub
jmp
pusha
decb
sub
cvttps2pi
xchg
jns
mov
pop
mov
xchg
push
jg
into
test
cli
ljmp
int
dec
and
mov
push
rclb
and
push
subl
mov
test
decl
cmpsb
lcall
shrl
jmp
outsl
jle
jb
arpl
xchg
test
cmp
pop
push
inc
sub
sub
icebp
fcmovbe
loopne
fcomip
scas
je
movsl
dec
cmc
pop
imul
div
cmp
out
mov
cmp
aam
incl
jae
cli
ljmp
rcrl
das
pop
jp
dec
in
repnz
mov
inc
jmp
xor
inc
fldt
push
dec
jb
mov
test
and
xchg
sub
imul
pop
dec
nop
push
pushl
cld
insb
add
push
in
test
call
sbb
call
test
sub
frstor
jl
lock
stc
cwtl
outsl
push
punpcklbw
int
cmp
sbb
lods
mov
fsubp
jg
mov
mov
cmp
test
decl
call
mov
repnz
test
es
xorl
dec
add
xchg
in
insb
pop
ficoms
mov
rcl
xor
push
mov
jge
outsl
adc
stos
scas
adc
jmp
add
jo
pop
incb
push
jno
sbb
cmp
loopne
pop
xor
xchg
xor
push
jns
ret
test
jb
or
in
rclb
addr16
dec
int3
aaa
sbb
pushl
pop
or
mov
stc
push
fiadds
jmp
xor
out
or
fwait
mov
aaa
add
sbb
dec
push
enter
mov
inc
and
inc
push
inc
cmp
cwtl
in
and
mov
call
andl
out
mov
je
xor
sub
mov
les
shlb
cld
je
mov
cmpsl
das
and
lcall
ds
roll
mov
enter
ds
or
fstl
xor
filds
xchg
mov
adc
decl
push
std
jmp
add
call
lock
xlat
lret
outsb
pop
lahf
pop
lock
cld
cmp
rclb
fnstcw
push
repz
aas
push
xor
mov
sub
push
adc
cmpsb
incl
dec
insl
mov
xlat
mov
into
outsl
setae
adc
add
sub
call
jns
shl
jecxz
fdivs
cmp
stc
stos
xor
sbb
inc
int
ljmp
loopne
cmp
adc
ret
push
rcrb
jg
push
and
into
and
call
std
bnd
cmp
cmp
cmp
and
push
aas
loope
sub
mov
add
inc
sub
xchg
jp
cmc
adc
ja
pop
adc
lcall
les
push
imul
xchg
jl
leave
subl
je
sbb
add
test
ljmp
loopne
mov
ret
mov
mov
das
call
int
or
ss
ss
and
pop
dec
es
inc
jge
sar
jmp
mov
shl
jp
and
ret
fiaddl
decl
adc
dec
test
int
mov
lods
xchg
mov
adc
les
lods
ljmp
push
pushf
mov
inc
mov
or
out
ret
xchg
adcb
loop
push
mov
pop
fs
into
in
fwait
into
inc
out
cld
mov
jecxz
mov
aas
sbb
data16
getsec
gs
mov
rolb
dec
sub
jg
fwait
xor
pop
call
sub
mov
jle
or
decl
in
inc
in
lcall
xchg
nop
sbb
sar
mov
aad
pushf
popa
shrb
js
inc
cmpsb
loope
push
or
movsl
cltd
sub
xor
testb
cmc
ja
cmc
inc
test
mov
ljmp
mov
stc
cmp
out
pop
push
out
lds
lds
pop
fistps
ljmp
pop
adc
adc
out
xchg
xor
push
pop
mov
jmp
movsb
aaa
xchg
fs
and
sbb
jne
fmull
add
adc
decl
cmc
mov
aas
sub
popf
fildl
ja
cmpsl
cmp
or
cmpsb
mov
pusha
pop
pop
jo
ss
xor
jg
sbbb
sbb
pop
fwait
nop
xchg
adcl
jg
rol
std
dec
mov
fisubrl
xchg
gs
clc
jmp
ret
iret
or
out
mov
adc
les
pop
clc
pop
cmpsb
addr16
mov
xchg
aad
dec
les
mov
adc
jae
stos
and
fildl
push
jge
cmpsb
test
xchg
push
test
push
cwtl
cld
jmp
decl
push
jb
dec
outsb
sti
ds
test
dec
mov
xor
data16
add
ljmp
adc
push
mov
inc
std
mov
nop
cmpb
adc
add
push
dec
lea
pop
dec
pop
jne
call
mov
or
in
lods
xchg
shll
sub
cld
mov
adc
hlt
xor
or
sbb
adc
mov
or
ljmp
sti
mov
inc
push
push
das
sub
and
push
mov
decl
xchg
dec
dec
xor
jle
jne
lret
cli
sbb
mov
aad
shr
cmp
lcall
es
dec
pusha
inc
cmp
lahf
clc
call
sahf
lret
push
xchg
cltd
jecxz
jbe
cld
cld
lcall
cld
jnp
push
jno
pushf
jle
lret
pop
lds
xchg
cmp
xor
mov
pop
cld
fbld
mov
jo
jbe
stos
pop
push
sub
data16
fcoml
cmp
adc
lret
test
inc
jae
loopne
cmp
cmpsl
mov
and
push
mov
insl
push
jecxz
dec
dec
jbe
test
out
inc
out
outsl
fdivs
jae
push
inc
ficoms
icebp
outsl
xchg
adc
aam
ja
insl
cmpsl
cltd
ss
ljmp
inc
jmp
in
mov
adc
enter
ljmp
inc
icebp
stos
add
roll
xor
leave
cwtl
mov
sub
or
sub
xor
pop
mov
and
into
enter
jecxz
mov
in
inc
sbb
xor
in
in
popl
xor
inc
decl
jge
and
xor
fsubrl
mov
and
cmp
push
cltd
xor
cltd
and
call
loop
cmp
clc
mov
daa
rorb
xor
repnz
mov
dec
jbe
pushl
mov
or
cld
pop
inc
loope
out
jecxz
sbb
out
adc
push
fimuls
or
rol
test
pusha
in
pop
pop
in
mov
lcall
xor
push
out
xchg
fisubrl
lods
sub
pop
gs
mov
fldz
jle
inc
jmp
fmuls
cld
xlat
mov
fldt
mov
leave
xor
mov
jle
aas
cltd
mov
sbb
ret
sahf
lret
xchg
lahf
repnz
xchg
out
mov
addr16
dec
inc
pop
push
ret
sbb
fisubrs
jbe
cmp
ljmp
insl
inc
clc
fldcw
test
pop
and
in
into
push
fdivr
decl
popa
in
test
cli
fildll
mov
clc
jl
and
data16
lods
or
jne
jnp
sbb
fcmovnb
scas
cwtl
mov
int3
orb
pop
test
sti
ss
dec
pop
scas
ret
out
aad
push
cli
jno
or
or
mov
int
lret
dec
iret
shrb
cs
cmpsb
or
push
out
in
inc
mov
icebp
or
pop
mov
decl
cs
movsl
xchg
pop
adc
mov
repz
mov
xchg
jmp
into
aas
jnp
sub
movsl
sub
ljmp
inc
push
add
pop
dec
dec
imul
dec
xor
xor
add
jp
ja
sbb
xchg
iret
out
lods
xchg
nop
loopne
add
testl
stc
jl
xor
std
aas
sub
addl
repnz
cmc
cld
int3
sbb
add
cmpsb
js
leave
lock
int
push
jg
lcall
addb
int3
sub
ss
cmp
cmp
jg
cmp
stos
adc
inc
hlt
sbb
shlb
repnz
jg
negb
pop
sub
xor
or
aam
sub
inc
pop
pmovmskb
lcall
cmp
repnz
nop
jmp
fstps
addr16
shrl
cmpb
and
mov
mov
sub
pop
int
xor
jmp
fisubrs
pop
mov
lcall
outsl
sbb
imul
fabs
pop
ljmp
cmpb
stc
in
leave
ret
mov
jg
pusha
mov
sti
popa
pop
or
mov
sbb
xchg
xchg
daa
mov
push
test
enter
dec
adc
fadds
push
push
mov
testb
pop
in
sub
scas
test
mov
jge
ljmp
cwtl
sti
jne
pop
add
sbb
xadd
aad
mov
sub
incl
dec
in
je
xchg
popa
scas
lret
fnstcw
mov
sbb
mov
mov
cmp
stos
outsl
prefetch
push
fiadds
addr16
clc
incl
cmpsb
add
cli
mov
pop
cld
ljmp
mov
mov
push
aas
push
daa
and
mov
pop
dec
xchg
mov
xor
inc
adc
call
insb
pop
popf
adc
push
mov
loopne
add
jnp
adc
notb
shlb
decl
and
mov
daa
fdivrs
aam
mov
push
cmp
or
add
cmp
xchg
sub
imul
cli
jo
jle
push
cmp
loope
hlt
filds
aas
div
xchg
lcall
aad
shl
bound
mov
daa
fwait
in
aad
data16
mov
jmp
clc
mov
fcomip
cmp
xchg
decl
out
lods
mov
test
incl
adc
imul
mov
jns
and
add
mov
es
jg
jmp
add
bound
and
jno
sub
fildll
lock
pushl
cmp
addr16
movsb
mov
popa
push
sub
mov
das
jo
jg
ds
push
inc
sbb
ljmp
jle
add
or
cmp
ljmp
out
mov
cmc
aad
mov
test
std
jmp
arpl
movsb
sbb
imull
push
adc
nop
dec
cmpsb
out
cli
push
mov
ficompl
add
dec
cmpsb
ds
xchg
loope
ret
and
push
or
loop
add
out
cwtl
dec
lea
gs
xchg
jno
dec
stos
sbb
ret
pop
pushl
out
int
jmp
cmpb
mov
sbb
fdivrp
cltd
jmp
mov
std
bound
and
in
add
add
mov
cli
daa
in
in
loop
or
mov
mov
adc
cmpsb
pusha
aam
and
jmp
insb
push
pop
push
xor
mov
int
push
fistps
jg
je
cmp
sbb
sub
mov
int
push
jmp
pop
xlat
dec
cmpsl
aam
sbb
sub
mov
xchg
adc
cmp
add
pop
jb
lock
call
fists
bound
xchg
clc
push
out
jbe
imul
mov
aam
fcomip
loop
xchg
gs
clc
stos
xor
or
stos
icebp
add
stc
mov
incl
popa
outsb
roll
sti
rorl
gs
ljmp
fyl2xp1
cmp
jbe
std
enter
pushf
xchg
mov
mov
lea
push
lret
ja
cmpsl
xchg
fdiv
daa
test
and
out
push
and
leave
mulb
clc
jmp
push
test
lcall
stc
call
jmp
int3
rcrl
lock
lret
mov
insb
pop
push
jnp
sti
icebp
sub
jnp
sbb
stos
ds
imul
jge
sbb
adc
out
imulb
lcall
ret
mov
add
mov
fistpll
incl
incb
and
cwtl
mulb
insb
mov
popa
or
out
sti
sbb
jnp
mov
loop
add
bound
int
add
or
imul
mov
ret
outsb
ljmp
xchg
cmp
ljmp
xlat
push
addr16
repnz
sbb
and
gs
sub
incl
and
insb
cmp
mov
mov
call
sub
jecxz
sub
inc
xlat
sub
aaa
sub
sub
and
mov
jg
incl
jecxz
clc
dec
ljmp
mov
push
aam
mov
push
fcmovb
ljmp
inc
or
call
dec
mov
into
sbbb
sub
jle
clc
decl
cli
outsl
shll
and
shr
shll
jns
mov
daa
jb
sub
mov
or
and
pop
lret
push
fs
push
adc
xchg
cwtl
fcoms
jmp
cwtl
cmp
fildl
popf
adc
inc
scas
add
dec
std
cmp
movsb
mov
mov
fwait
jns
std
xchg
mov
jmp
dec
push
pop
or
test
push
dec
stc
je
jp,pt
mov
mov
jo
fcoms
push
inc
aad
xchg
push
jbe
jae
test
aas
xchg
mov
sbb
test
fidivl
cli
call
pop
dec
sub
and
outsl
in
push
cld
adc
sub
push
pop
xor
add
lret
mov
jl
mov
mulb
fiadds
mov
add
es
mov
daa
mov
lock
sub
fnstsw
mov
sti
leave
sahf
xchg
outsb
push
and
call
sarb
imul
lock
inc
add
roll
call
xor
and
xchg
mov
popf
sbb
repnz
push
sub
dec
mov
pushl
lds
stos
inc
mov
rcrl
inc
push
shlb
popf
sar
lcall
bound
cwtl
loope
xchg
leave
fdivr
mov
aad
mov
add
xchg
repnz
mov
pushl
bound
lcall
fsubs
call
push
jl
test
xor
rcrl
pop
leave
pop
das
pushf
loop
fcom
mov
push
cmp
fldt
in
adc
in
mov
hlt
pushl
add
test
xlat
lods
aaa
inc
mov
add
pop
rcr
mov
data16
out
leave
mov
lcall
pop
pusha
inc
sub
incl
mov
jle
ret
repz
mov
addr16
incl
mov
testl
incl
jle
pushf
loope
bound
cmc
ret
fsubrl
incl
cmp
inc
xor
cmpsb
in
sbb
inc
cmpsb
add
movsb
lods
or
out
adc
inc
aas
shrb
or
orl
lcall
sub
ret
xchg
mov
addr16
testl
mov
mov
bound
imul
lock
mov
call
test
icebp
mov
idivl
mov
xor
and
push
in
push
mov
mov
ja
pushl
xchg
sbb
xorb
push
mov
cld
call
aam
adc
and
pusha
insl
cmp
clc
push
jb
jbe
cmpb
jle
or
cmp
sbb
cld
outsb
sbb
cmp
inc
push
ret
sti
fdivrs
pushl
movsb
jle
insb
out
xchg
adc
lcall
sbb
pop
cli
call
mov
jmp
push
cmpsl
lods
sarb
mov
mov
sbb
and
mov
jmp
cmp
inc
adc
pop
dec
adcl
mov
mov
add
fistps
sub
daa
cmc
outsb
loop
in
and
jmp
pop
pop
jge
push
fistpl
cmp
and
mov
push
mov
jo
nop
aad
repnz
ljmp
ss
in
test
in
dec
in
inc
mov
sbb
outsb
fsub
jne
inc
in
push
pop
mov
ljmp
sbb
rdmsr
or
cmp
jecxz
cmc
testl
mov
xor
push
jns
pushf
and
loope
je
decl
arpl
mov
repnz
das
dec
scas
daa
arpl
xchg
inc
dec
ja
adc
int3
xchg
sub
hlt
push
mov
jo
mov
sbb
rclb
les
dec
ss
cwtl
add
pusha
jecxz
xor
jg
lret
jnp
dec
push
jp
sub
popa
cltd
popf
jl
js
mov
jne
dec
pop
push
lods
mov
lcall
jae
shrb
insl
insl
cld
mov
mov
or
push
cmpsb
and
dec
jne
sbb
hlt
lcall
pop
sbb
add
cmp
nop
fwait
repz
loope
cmp
adc
add
add
popa
pop
push
fidivs
cmp
call
mov
jg
inc
test
jg
sub
inc
pop
sub
repnz
push
sbb
pop
adc
pop
ret
sub
andb
ss
lcall
std
adc
out
adc
clc
fwait
dec
sub
aaa
sbb
cwtl
into
sti
scas
and
jns
clc
mov
cmp
and
out
shll
add
add
jmp
out
pusha
sub
mov
mov
mov
jne
add
sub
cld
addr16
add
or
push
sub
inc
mov
sbb
sub
lods
lcall
dec
adc
out
xor
mov
in
jg
mov
in
cltd
push
dec
data16
or
pop
inc
stc
hlt
and
adc
cmp
fidivrs
or
mov
add
data16
cmp
repnz
pop
gs
cmc
adc
test
sahf
inc
mov
xchg
fimull
add
cmp
xchg
dec
inc
cs
push
call
cmp
push
push
cs
sub
dec
std
mov
dec
push
or
inc
push
into
popf
test
sbb
mov
mov
mov
jne
sahf
mov
aas
shll
pop
rcll
aaa
nop
jp
call
xor
fsubp
ror
jnp
and
xor
lcall
pusha
js
push
std
pop
movsb
mov
into
loop
int3
mov
and
inc
clc
ja
sar
dec
cmpsb
sahf
insb
cmp
stos
mov
enter
pop
ljmp
pop
pop
and
and
enter
daa
test
jg
scas
inc
orl
mov
push
leave
xchg
jge
sub
inc
mov
popf
cltd
inc
andb
ds
mov
xchg
pushl
addr16
cli
mov
add
int3
out
mov
and
cmpsl
out
clc
lcall
mov
arpl
test
fwait
aam
jno
cmp
adc
cwtl
push
pop
or
mov
push
adc
mov
sub
add
xchg
xchg
pop
call
dec
cmp
xchg
iret
ss
cmc
mov
rcll
mov
rolb
dec
add
lock
and
lea
das
sar
jp
xchg
or
mov
lock
xor
aas
sbb
lock
jmp
test
add
add
add
jns
subl
incl
xchg
xor
jl
ljmp
dec
cltd
mov
sub
cltd
add
cs
mov
add
fwait
cmp
sub
call
clc
mov
xor
sbb
stos
sti
push
mov
mov
mov
in
aas
mov
cmp
stos
imul
pushl
aam
aaa
push
cmp
add
mov
popa
cmp
cwtl
cmp
sub
sar
push
mov
test
sbb
xchg
nop
mov
cmp
mov
imull
and
shlb
popa
arpl
outsl
adc
lret
test
pushl
ret
push
cltd
inc
mov
psraw
or
rorb
jp
cmp
scas
incl
sbb
les
push
mov
fnsave
and
es
jb
shll
ljmp
ljmp
js
or
lock
cmp
push
cmp
mov
pop
fnstenv
sbb
shrb
jmp
jg
mov
ljmp
xlat
pop
push
dec
pop
in
or
add
or
ljmp
call
or
jg
not
lock
fcmovu
in
outsb
add
lock
dec
mov
and
incl
lock
dec
xor
aam
aam
or
js
adc
mov
sub
pushl
lods
xlat
mov
test
stos
pushf
cmp
xchg
mov
ret
lcall
incl
jle
shrl
inc
lea
cmp
mov
in
cmp
ret
jg
jmp
xchg
xor
mov
shll
inc
jge
adc
and
mov
dec
cmpb
xchg
ret
and
popa
icebp
dec
xchg
sahf
adc
std
cli
popf
pop
cld
push
iret
arpl
cmp
fildll
fdivrl
or
sbb
and
aaa
mov
jle
jg
cmp
imul
icebp
jp
popa
pop
leave
pop
push
test
out
in
jmp
das
jns
push
sub
add
sub
jno
jp
push
mov
sub
cmpsb
popa
into
xchg
pop
and
cmp
scas
adc
inc
sbb
jle
lds
arpl
bound
ret
in
int
nop
xchg
or
sbbl
call
clc
insb
pushf
xor
imul
fs
and
lea
cmp
cmp
lcall
ljmp
mov
xchg
inc
mov
inc
adcb
aad
aad
call
std
call
in
test
adc
push
inc
daa
dec
addl
mov
push
decl
fwait
sti
dec
push
or
iret
mov
jg
aam
incb
inc
jge
lea
xchg
pusha
leave
dec
ja
call
mov
inc
pop
xchg
cmp
jb
mov
lret
clc
aaa
ret
rcrb
pop
sbbb
sbb
ljmp
xor
cmpsb
sub
lret
sbb
dec
leave
sub
pop
scas
xor
fwait
push
dec
mov
into
nop
decl
mov
hlt
iret
or
or
movsb
test
mov
mov
jbe
jne
lret
mov
dec
aaa
es
aaa
pop
insl
mov
mov
push
lret
gs
inc
gs
rolb
inc
push
push
bound
adc
xor
popa
call
push
adc
bound
rcrb
sbb
pop
pop
push
xor
or
and
cld
out
clc
mov
or
adc
pop
jo
dec
mov
cld
mov
fbstp
incl
mov
fs
xchg
jge
xchg
xchg
mov
and
jmp
ljmp
mov
das
outsb
xchg
or
fsubp
add
sbb
movsb
and
in
jmp
fsubs
dec
mov
aad
hlt
dec
jmp
cmp
push
shlb
cmp
outsb
xchg
adc
push
std
popf
xor
jbe
lcall
cs
cmp
lcall
jb
cmpl
mov
add
inc
mov
xchg
and
loope
lcall
lods
adc
jl
lods
imul
das
xchg
add
decl
dec
xchg
dec
pop
adc
lods
addr16
pop
mov
jmp
add
cmp
in
sbb
jmp
std
dec
jno,pt
sub
or
mov
mov
dec
or
mov
push
aas
fcmovnu
shr
les
mov
cmp
add
aad
repnz
shr
inc
jno
mov
ljmp
or
add
mov
push
xchg
dec
das
test
mov
ret
xchg
popf
stos
sbb
dec
pop
icebp
pushl
jp
dec
out
fnstenv
dec
adc
and
xchg
push
negl
jmp
xor
mov
mov
fidivs
pop
movsl
push
jne
ja
mov
inc
jge
insl
add
sub
push
push
js
adc
xchg
imul
pushl
jno
sub
pushf
jo
test
ljmp
push
out
mov
repz
dec
outsb
push
jmp
or
xor
cmp
lods
push
inc
mov
cmp
sub
fbstp
and
dec
nop
pop
fisubrl
xor
and
cmpsb
nopl
mov
push
xchg
jmp
inc
rorb
inc
mov
sar
xor
out
cli
call
add
mov
inc
xchg
cli
pop
stos
mov
xlat
xchg
xchg
or
mov
xchg
enter
push
sub
jae
push
mov
call
inc
or
pop
fadds
lods
or
or
out
hlt
mov
movsb
adc
xor
adc
sar
xor
test
mov
push
fwait
and
cs
push
out
iret
mov
sub
scas
cwtl
jge
cmc
ljmp
pop
fildll
mov
aaa
add
into
cmpsl
pop
pop
sbb
jmp
lcall
aaa
xor
mov
cmp
adc
in
xchg
hlt
jmp
cmp
fisttpll
out
cli
les
push
cmp
jns
lcall
ss
fs
xchg
into
dec
jle
jl
add
push
dec
lahf
into
movsl
dec
mov
push
xor
add
sbb
sahf
add
mov
dec
ror
bound
data16
dec
pop
out
int3
lock
ds
and
fwait
mov
mov
ds
decl
xchg
scas
in
mov
stos
popf
seto
rol
decl
mov
in
add
cmp
loope
movsb
insb
cmp
xor
push
and
jl
ljmp
add
mov
dec
sub
loope
fildl
and
dec
mov
sub
mov
scas
xlat
jb
aaa
cmp
cltd
dec
cmc
push
lea
xchg
mov
mov
or
mov
adc
cld
jns
jmp
je
gs
sub
mov
sbb
push
inc
mov
cli
mov
clc
add
int
add
decl
pop
pop
fildll
fxam
imul
pop
in
fs
jg
jae
xchg
cmp
sbb
mov
xchg
or
push
mov
aam
mov
jmp
mov
fadds
sbb
xchg
push
rcll
and
adc
dec
cs
std
fbstp
repz
mov
and
add
jnp
cmp
or
adc
sbb
adc
add
xor
frstor
cld
and
nop
xor
mov
sar
decl
lock
adc
jp
outsb
xor
lock
lcall
jbe
push
shrl
js
leave
out
in
test
dec
sub
ljmp
jno
xchg
push
repz
dec
push
je
cs
mov
xor
insl
fildll
jmp
add
mov
scas
cmpsl
jge
adc
into
xor
push
popf
aas
cwtl
jne
push
mov
cli
cmp
and
xchg
xlat
xor
mov
fisubs
lea
call
mov
test
jno
incl
lret
aaa
lods
into
in
pop
xlat
sbb
mov
or
pop
inc
push
cmp
mov
xchg
mov
outsb
jne
fdivrp
decl
scas
imul
xlat
mov
inc
add
jp
pop
and
enter
fsubs
pop
lock
pop
fistpl
push
mov
mov
imul
push
in
cmp
adc
inc
loope
je
inc
mov
mov
cmp
shll
incl
sub
pushf
rcl
lret
pop
sub
push
push
mov
js
pushf
loopne
insb
hlt
cmp
icebp
decl
insb
inc
test
int3
cmpsb
cs
xor
jle
add
leave
pop
cmpb
jmp
outsl
add
xchg
jecxz
jle
js
test
bound
pushl
loopne
bound
std
lcall
jp
out
cmp
int3
adc
repnz
inc
push
ja
cmpsb
mov
sub
int3
pop
hlt
loop
rcl
mov
negb
push
loopne
jecxz
jl
pop
jecxz
rorb
imul
sbb
mov
hlt
push
addb
inc
mov
call
jae
mov
rcll
leave
inc
out
ss
decl
loop
stos
cmp
xor
call
leave
mov
mov
jle
ljmp
push
cli
cmp
lahf
lods
cli
sti
xor
stos
adc
add
call
cmpsb
stos
lods
mov
call
xchg
es
xor
mov
call
xchg
shl
inc
sub
fdiv
aaa
and
jl
scas
inc
sub
mov
adc
outsl
js
and
jg
add
icebp
in
lock
xchg
sbb
rorb
and
adc
dec
ja
addr16
sbb
decl
popa
loop
or
out
cmp
add
and
je
pop
testl
pushl
fidivl
jb
into
xchg
fcmovne
movsl
jb
cmp
mov
jg
repnz
mov
mov
and
sub
cmp
aaa
lock
cmp
pop
cltd
fbld
clc
push
adc
add
fcompl
clc
lahf
pushl
aad
cmp
jle
shrl
push
stos
pop
sub
int3
cwtl
sbb
lock
mov
push
stc
pusha
jmp
cltd
cmp
mov
and
mov
xchg
cld
ds
add
sbb
jp
adc
call
adc
aad
adc
addr16
pop
mov
out
stc
jmp
sarl
jg
mov
ljmp
in
stc
pop
movsl
add
rorb
imul
sub
jg
push
lret
inc
mov
aad
shr
mov
mov
mov
pop
sarw
or
sti
fwait
xor
in
lods
repz
fwait
ljmp
mov
lods
arpl
int
clc
andb
push
and
jmp
cmp
sub
icebp
ljmp
lahf
add
cmc
into
fistps
push
push
imul
add
sub
scas
pop
inc
xchg
ss
lock
cltd
inc
loope
call
fbstp
andb
pop
sbb
mov
out
lret
push
sti
or
clc
lcall
fldt
sub
inc
mov
push
movsl
lret
mov
dec
cld
mov
push
push
jge
icebp
repnz
jg
pop
insb
in
sub
or
out
cmp
pop
clc
insb
xor
lock
xchg
dec
inc
add
clc
orl
jle
pop
inc
xchg
add
daa
aaa
and
sub
or
pop
sarb
mov
cwtl
nop
adc
mov
or
ljmp
daa
push
mov
aam
inc
or
push
pop
js
cmpsb
mov
bound
loop
clc
sub
pop
ljmp
cmp
inc
pop
add
pop
add
fsubr
cs
ljmp
jecxz
ja
mov
and
push
mov
pop
imul
mov
inc
or
xchg
add
repz
loope
andl
jmp
dec
inc
repz
mov
mov
mov
mov
je
lods
mov
dec
decl
xor
mov
shl
cmpsl
push
or
call
in
insl
push
sti
pop
sbb
sub
add
or
bound
and
push
cmc
xchg
decl
adcb
sti
and
cld
xchg
or
pop
mov
push
push
xchg
fwait
add
mov
enter
xor
stc
jo
stos
xchg
inc
call
dec
mov
incl
pop
movsl
orb
adc
jae
out
lods
mov
filds
fimull
push
pop
insl
adc
aad
insb
ljmp
clc
enter
inc
cltd
clc
aad
outsb
sub
aas
mov
or
clc
mov
fcoms
inc
jno
mov
jge
inc
push
leave
jno
rcl
out
mov
std
jge
lcallw
cmpsb
or
out
ljmp
iret
ljmp
aaa
fs
mov
das
repz
ss
lcall
dec
cltd
mov
mov
movsl
insb
adc
leave
test
mov
lds
sub
dec
xorb
incl
in
and
inc
mov
inc
jb
sbb
jge
imul
pop
popl
bound
jmp
sbb
stc
movsb
or
test
jbe
cmp
lock
cltd
ud0
lcall
fwait
ds
int
int3
subl
in
sub
mov
movsl
jle
call
inc
dec
cmp
add
ja
xchg
lock
push
shll
pop
cmp
jle
lcall
es
add
dec
aas
hlt
sbbb
push
pushl
fadds
mov
addl
mov
js
pushl
std
call
jecxz
mov
adc
pop
mov
mov
mov
ljmp
aas
xor
lret
pop
hlt
loop
arpl
js
lods
fistl
and
adc
push
sahf
push
sbb
mov
pop
idiv
sahf
cmpsb
imul
sbb
cltd
decl
inc
enter
shrb
in
or
pop
xchg
lds
dec
sub
ljmp
mov
rcll
lret
arpl
jne
mov
in
das
outsb
call
or
call
cmp
lods
xchg
fwait
rcrb
nop
dec
mov
dec
sub
clc
iret
lock
faddl
pusha
cld
call
sub
shl
mov
aaa
cs
stos
nop
js
jmp
and
test
hlt
lret
rcr
add
inc
pushl
sub
bound
stos
dec
sub
nop
inc
test
fwait
out
call
inc
cmp
icebp
add
mov
in
xchg
data16
sarb
push
iret
arpl
jecxz
sub
xchg
lcall
mov
xor
fistpl
pop
sti
inc
hlt
inc
int3
pop
bound
scas
call
xchg
mov
mov
int3
subl
into
scas
cmp
mov
in
dec
pop
sbb
and
jl
xor
aas
dec
pusha
add
add
sub
lcall
decl
adc
outsl
fisubrl
popf
xor
aaa
jns
into
xor
and
data16
pop
mov
pand
pop
call
fcmovbe
outsl
pop
test
js
add
movsl
imul
loopne
mov
hlt
and
lret
icebp
in
mov
jg
out
cltd
ficomps
jmp
xchg
ja
jnp
lahf
test
arpl
jl
fdivrl
sbb
loopne
lods
dec
pop
lea
rcll
push
ljmp
aas
flds
mov
test
jnp
add
incl
pushw
mov
sub
or
push
test
fs
filds
inc
sub
scas
test
lret
aaa
mov
fbld
push
stos
jnp
cld
inc
ret
jns
insl
aad
push
jnp
mov
sbb
das
clc
pushl
xor
mov
aam
sbb
pop
jns
ljmp
mov
dec
cmp
shll
imul
cmp
std
addr16
mov
aam
mov
push
lcall
xchg
decl
sbb
fsubrl
xchg
xor
cmpl
ret
inc
dec
scas
push
cld
call
mov
ja
dec
into
iret
adc
ds
lea
pop
loop
jg
jns
loop
pop
jbe
pushl
xchg
sub
inc
xchg
add
mov
cwtl
notb
sub
orl
mov
mov
cltd
fwait
cmp
ss
xchg
lcall
out
pop
ret
xlat
fiadds
ja
mov
jbe
push
xchg
xchg
pop
jle
mov
arpl
lcall
imul
sti
mov
ljmp
mov
sub
and
call
jbe
stc
dec
mov
ficomps
lock
push
inc
enter
call
outsb
daa
mov
fadds
xor
add
jecxz
out
pop
pop
call
decl
pop
movsb
jge
lret
ret
and
std
add
movsb
out
dec
inc
stc
punpcklbw
fcomip
pushl
dec
and
inc
or
sub
test
outsb
les
jle
jae
inc
lahf
cli
inc
test
xchg
xchg
out
cld
sbb
pop
push
cmp
xchg
inc
dec
test
dec
lods
cmp
call
push
sbb
out
lods
test
rorl
daa
sbb
pop
mov
sarb
in
inc
xor
and
xorb
not
ljmp
clc
in
cld
dec
xor
mov
xchg
imul
adc
outsl
cli
jmp
fisttpl
add
jns
sti
xchg
stc
cld
pushf
push
ret
mov
call
xor
hlt
aad
xchg
mov
sub
jecxz
jnp
or
mov
fwait
jbe
mov
cmp
sub
leave
sbb
push
iret
stc
mov
ja
sbb
push
hlt
orb
and
cld
mov
sub
pop
lcall
mov
icebp
mov
fnstsw
insb
ljmp
stos
and
pusha
mov
or
xor
and
xchg
fistps
mov
pushf
sbb
lods
and
push
xor
les
sub
stc
aad
in
decl
or
mov
je
or
roll
jg
fs
mov
loope
push
add
sub
jmp
jmp
lahf
in
fisttpl
fistpll
in
cmp
test
movsb
jecxz
orb
scas
jg
jbe
jns
test
or
sbb
lds
pop
sub
out
movsb
jno
sub
push
jne
lahf
js
shr
pop
scas
sbb
ds
mov
inc
adc
sahf
jno
inc
xor
inc
cmc
mov
test
int3
xchg
add
inc
mov
sbb
mov
incl
sti
cmp
stc
push
pop
fdivl
xchg
cmp
shrl
xchg
xchg
push
cmp
mov
incl
lea
testb
scas
inc
mov
inc
xor
xlat
roll
add
daa
xor
call
pop
xor
mov
adc
gs
std
dec
rorl
clc
cmc
or
lret
add
dec
jns
sub
pop
sbbb
test
jmp
enter
ss
fwait
loope
decl
mov
outsb
pushf
rcll
xor
cltd
xchg
shll
and
mov
lea
cli
rcrb
fldt
out
scas
jecxz
pop
inc
subl
push
dec
mov
test
dec
cld
jmp
cmp
xchg
pop
repnz
ja
jbe
insb
and
insl
sti
sar
jg
inc
mov
push
or
sub
aas
enter
mov
jbe
loopne
jmp
decl
inc
mov
mov
andb
pop
and
pusha
dec
and
jae
add
decl
dec
jo
mov
lret
gs
and
xorl
incl
push
leave
jmp
xchg
jnp
or
cltd
push
mov
jbe
cld
adc
sti
cli
je
sub
sub
call
lods
inc
dec
jecxz
jmp
push
pop
cs
jnp
andl
fcomps
push
mov
or
dec
decl
lock
xlat
push
into
push
std
scas
cwtl
jg
stos
pop
add
mov
xor
in
cli
sub
pop
xor
dec
stos
mov
inc
xor
and
jbe
xchg
mov
dec
insb
cwtl
jmp
add
movsb
jne
ficomps
out
mov
mov
aaa
cwtl
negl
outsb
dec
loope
mov
ljmp
push
out
jecxz
pusha
shll
push
fsubrl
mov
decl
mov
addb
out
lahf
cmp
xor
mov
jecxz
push
ljmp
iret
and
or
lock
jbe,pn
std
add
lret
addb
or
in
push
sbb
xchg
push
adc
mov
subb
lock
jmp
inc
xchg
fcom
xor
out
cmp
dec
sub
xchg
popa
jns
adc
incl
jmp
fsubl
nop
sarb
int3
and
pop
add
rorb
mov
mov
mov
pop
in
push
arpl
xrelease
xchg
insb
xor
cld
push
pop
sub
popf
call
sub
sub
call
sub
lods
sbb
cmpl
push
cmp
pushl
mov
adc
add
mov
push
stos
mov
icebp
xchg
popa
test
ljmp
hlt
inc
cmp
xchg
cmpsb
inc
scas
movsl
bound
cmp
fimull
jno
popa
mov
lcall
mov
mov
xchg
jle
fsubl
or
sub
out
test
sti
incl
loope
dec
jl
int
pop
cmp
sub
push
add
decl
mov
aas
addr16
shl
loopne,pn
jecxz
test
pop
sahf
rorb
fildll
add
jle
sbb
out
pop
add
pop
popa
lcall
pop
add
xchg
mov
mov
fidivs
mov
pextrw
stos
repnz
jle
push
and
push
add
inc
or
mov
push
aaa
stc
mov
and
cmp
jg
mov
cli
jp
int
repz
inc
into
pop
sbb
movsl
negl
outsl
push
push
repnz
sbb
decl
mov
out
pop
inc
xchg
mov
daa
ret
sahf
cmp
pushf
xchg
loopne
int
xchg
dec
xchg
pop
push
movsl
xor
daa
scas
pop
icebp
pusha
decl
mov
test
or
push
add
xchg
or
out
mov
mov
jl
push
or
pop
xchg
aaa
clc
fs
push
push
in
pushl
and
cs
pop
pushf
sub
push
adcb
test
sti
dec
pop
mov
adc
fdivs
pop
stc
je
inc
rorb
and
scas
dec
sub
dec
icebp
lods
lea
in
cwtl
inc
lods
sti
orb
dec
loope
sbb
test
in
into
insl
mov
out
inc
cs
dec
pop
jg
incl
dec
cltd
mov
rcll
cld
insl
inc
adc
test
clc
call
jge
aad
rorl
jb
lcall
pop
inc
or
and
fistps
incl
cs
rclb
xor
fisttpll
xor
xchg
adc
mov
mov
xor
decl
adc
inc
int3
ljmp
sbb
mov
or
mov
call
imull
das
cmpsl
xor
jmp
pusha
dec
pop
jecxz
loop
ljmp
add
push
cmp
mov
mov
jnp
mov
mov
mov
sub
add
std
fwait
mov
pushl
xchg
xchg
pushf
cmp
sbb
xchg
jno
fsubrs
push
pushl
clc
cmpsb
push
movsb
loope
mov
push
clc
aas
test
xchg
xchg
xchg
jae
imul
add
xor
lret
inc
pop
clc
popl
jge
pusha
lcall
sbbb
pop
pop
push
sbbl
ja
ljmp
out
mov
mov
xor
lds
aad
ret
dec
xchg
in
test
mov
int3
mov
push
xchg
mov
or
dec
shlb
lock
dec
jl
adc
arpl
bound
xor
sbb
or
repnz
ja
aaa
scas
pushf
movsb
cwtl
cmc
jecxz
pushl
test
outsl
and
xor
call
enter
push
dec
and
inc
dec
jae
adc
xor
pop
aas
xor
insb
sub
call
aas
or
movsl
push
arpl
push
enter
inc
pop
push
lret
icebp
ror
ljmp
pop
subl
shlb
call
push
test
stc
scas
das
es
incl
sbb
incb
pop
std
xchg
and
negl
addr16
push
fists
push
loop
jp
decl
mov
sti
xor
inc
lock
and
out
stos
in
inc
insb
push
shlb
mov
out
pop
pop
sbb
sub
dec
dec
jg
sahf
test
bound
inc
pop
subl
pop
pop
icebp
dec
fs
sbb
mov
pop
lock
lcall
xlat
jge
adc
mov
cmp
adc
test
adc
jmp
dec
dec
test
mov
xor
sub
lea
pop
lds
pop
push
mov
pop
pop
aaa
fcomip
lcall
testb
dec
loop
test
or
fadds
in
ds
sbb
clc
adc
xor
iret
or
pop
in
push
shr
xchg
mov
add
inc
lret
out
ljmp
jae
fwait
ret
inc
jp
jp
jle
gs
sub
out
ljmp
ja
mov
aaa
jnp
jne
xchg
stc
or
mov
add
movsl
call
stos
test
mov
test
pop
jmp
lret
addb
or
lret
adcl
add
dec
or
lcall
push
sbb
clc
lock
repnz
out
adc
in
jb
jg
ljmp
pop
jno
mov
mov
inc
arpl
jne
jno
hlt
cmp
jnp
shll
sbb
mov
insb
call
xor
lock
cmc
pop
pop
fsubrp
and
or
jne
es
cmc
lods
pop
adc
sub
in
push
loop
sub
add
jl
xor
shlb
insb
movsl
or
cltd
sbb
mov
mov
sahf
or
test
sarb
out
shlb
ret
and
and
mov
jmp
push
nop
mov
insl
pop
hlt
mov
adc
aaa
mov
imul
mov
jmp
cmc
dec
sub
dec
mov
je
mov
ret
mov
mov
fbld
push
out
cmp
or
leave
or
out
jnp
pop
test
lcall
push
pushl
pop
icebp
xchg
inc
sub
mov
xchg
iret
sub
pop
mov
mov
jbe
in
or
pushl
insl
bound
push
clc
dec
xor
and
fbld
pushf
in
jecxz
inc
push
pop
movsb
xchg
xchg
ficoms
fldl
jo
lods
jg
nop
outsl
xor
sbb
sete
fisubrs
je
jnp
mov
stos
jo
mov
pop
imul
xchg
mov
inc
test
ja
enter
ljmp
filds
je
outsb
or
cs
push
icebp
test
cli
in
test
mov
leave
push
pop
push
aaa
aad
ds
ljmp
movsl
shrl
push
mov
and
mov
pop
pop
or
enter
sar
ffreep
mov
das
std
incl
lods
jmp
ja
push
push
sbb
xchg
jbe
add
dec
mov
addl
aad
pusha
cltd
add
into
mov
push
xchg
negb
outsb
add
cmc
int3
imul
add
fucom
insb
mov
mov
mov
jmp
inc
cmpsb
aad
mov
mov
jmp
mov
pop
rcll
xor
test
es
lea
cli
test
cld
mov
push
sar
popa
pop
mov
call
in
mov
add
andl
push
pop
lcall
movsl
inc
or
sbb
push
dec
adc
jge
fisubrl
dec
das
imul
movsb
cmpsl
mov
fstps
pop
add
repz
rcrb
int3
sbb
std
mov
scas
cmp
sbb
lcall
inc
lods
minps
cld
xor
adc
jno
popf
mov
out
out
sbb
jmp
dec
push
cmp
out
or
mov
fistpl
rorl
mov
out
mov
decl
lock
enter
ds
dec
shll
pushf
xor
je,pn
sbb
sbb
push
into
or
lods
test
lahf
mov
sub
xor
push
dec
shlb
jo
dec
sbb
adc
stos
fists
inc
and
leave
test
mov
sub
xchg
jmp
ja
fsubl
imul
or
sti
pusha
data16
inc
rcll
clc
fistpl
cli
fwait
push
xor
mov
outsb
adc
inc
cmp
call
sbb
or
mov
push
mov
repz
repnz
ljmp
arpl
pop
push
pop
insb
fcmovb
sub
lods
xlat
imul
mov
add
sub
lcall
js
je
mov
dec
mov
inc
push
cmpl
jmp
repz
das
pusha
mov
inc
popa
insb
add
test
push
shr
aam
jno
jg
mov
aad
in
pop
and
decl
or
or
push
sub
popa
out
enter
mov
jmp
add
pop
xor
pop
int
and
shll
jmp
mov
loope
lods
xor
push
bound
cmpb
pop
sbb
dec
int
inc
pushl
std
inc
dec
lcall
dec
insl
xchg
jp
clc
lods
outsb
pop
cmc
lcall
push
out
fs
fsubp
rcrl
inc
rorb
cmp
add
pushl
dec
jmp
shlb
push
inc
loope
jg
scas
clc
rorb
lret
jne
push
arpl
sbb
xchg
std
jne
mov
pop
outsl
inc
jmp
inc
sbb
xor
pop
out
mov
bound
call
xchg
adc
jmp
xchg
dec
inc
nop
cmp
lahf
data16
aas
pop
push
dec
iret
in
xor
inc
js
and
sub
iret
ljmp
iret
sahf
pop
jp
and
push
xchg
mov
inc
sbb
mul
je
mov
fsubrs
sub
mov
xor
pushf
mov
inc
jp
mov
sub
fs
ljmp
popa
fsubrl
adc
sbb
ss
push
mov
pop
xor
sarb
jmp
add
sbb
iret
call
xor
subl
js
cmp
lahf
je
pop
mov
fisttps
or
push
clc
sub
jo
sbb
mov
mov
nop
lcall
decl
sub
les
data16
cmp
jb
xor
push
loope
jecxz
call
test
and
cmp
pushf
scas
sub
mov
movsb
fucomip
mov
dec
cmp
pop
insb
leave
mov
push
call
jecxz
std
lret
push
es
pop
hlt
pushf
imul
loope
mov
js
sbb
in
xor
loop
in
mov
out
jnp
scas
sarl
bound
outsb
in
dec
decl
clc
movsl
loopne
jl
pop
mov
inc
and
lcall
or
adc
xchg
inc
ret
in
stos
and
dec
rcrb
fcmovnb
ljmp
push
std
jge
pop
lea
ficoml
call
sbb
mov
sbb
sbb
test
mov
repz
outsl
inc
imul
fldt
inc
loopne
inc
sub
and
inc
dec
inc
dec
fisttps
pop
cmpsb
mov
xor
mov
xchg
in
cmp
lret
push
and
pop
iret
fcomip
call
insl
insb
fwait
pop
imul
fdivr
nop
mov
cltd
sbb
rorb
clc
pushl
cld
shl
inc
inc
or
loope
adc
jne
cli
xchg
movsl
jno
add
or
ljmp
inc
xchg
fcoml
xchg
in
loope
mov
adc
mov
test
imul
and
icebp
inc
stos
cmp
add
xor
inc
popa
in
call
cld
das
jmp
out
lods
pusha
ret
stos
push
mov
xlat
lods
mov
stos
aaa
mov
xchg
jo
sub
sub
inc
push
imul
xor
xchg
sub
push
pushf
lods
cmpsb
xor
or
decb
pop
adc
scas
cmpsl
sbb
push
incl
pop
decl
pop
jp
or
sbb
xchg
popf
decl
sbb
push
mov
jmp
cmc
notl
sub
icebp
dec
daa
int
push
ret
add
jno
mov
bnd
mov
dec
and
insl
xchg
ljmp
and
cltd
and
and
gs
rclb
sub
adc
out
clc
cmp
lods
loope
and
add
aam
lods
jl
xlat
mov
cwtl
stos
and
das
sar
jecxz
dec
arpl
loop
mov
mov
inc
int
push
call
lcall
aaa
in
cmpsb
mov
xorb
scas
in
rclb
mov
push
test
test
cmp
das
nop
or
jle
sub
mov
jle
shll
jg
push
cmp
lods
xchg
inc
push
xor
nop
sbb
push
es
clc
call
out
sub
cltd
mov
cmp
in
push
push
data16
decb
repz
ja
sbb
mov
loopne
pop
incb
imul
pop
adc
lea
pop
or
dec
xor
sbb
adcb
fists
mov
fstpl
stos
and
push
jns
test
pop
push
aad
and
pusha
sbb
out
imul
mov
mov
push
mov
cmc
cltd
adc
pop
ret
jo
std
jg
mov
inc
xchg
nop
adcb
inc
add
in
lahf
xor
or
ret
mov
cld
call
dec
jecxz
or
jne
push
mov
pop
cld
jmp
mov
lret
xchg
int
pop
sti
pusha
cmp
test
addb
mov
pop
cld
ljmp
jmp
mov
cli
or
pop
pop
out
adc
pushl
and
rcl
cmp
pop
sub
lods
pop
xor
add
in
mov
push
mov
popa
sbb
lret
mov
sub
nop
shlb
sub
addl
mov
leave
out
mov
mov
cmp
cmp
adc
ret
add
and
in
pop
stos
ljmp
jbe
clc
notb
outsl
sub
gs
jmp
xchg
testl
sub
into
mov
pushf
sub
adc
je
pop
and
arpl
xor
fs
sbbl
mov
or
push
xor
jg
cmpsb
sti
hlt
cwtl
insb
jno
add
lcall
mov
out
stos
mov
add
mov
jae
cmc
jl
rcll
sub
mov
push
cmp
scas
or
repz
notb
sub
cwtl
pop
add
repz
aas
and
fwait
mov
pop
push
cld
hlt
sbb
aaa
scas
mov
cwtl
inc
or
xchg
or
loop
and
lcall
push
mov
aam
cli
add
push
clc
dec
sub
aam
lret
xor
decl
sysenter
daa
inc
clc
insb
js
mov
fwait
inc
push
mov
imul
xchg
bound
and
adc
pop
cmc
fcoml
dec
xchg
mov
cmp
jg
insl
push
out
mov
add
in
mov
pushf
push
inc
sbb
cmp
outsl
cli
dec
cltd
sub
leave
fiadds
lret
sbb
dec
pop
push
divb
xor
cmp
dec
ljmp
sbb
push
fst
add
out
mov
dec
push
out
aas
out
mov
dec
lahf
ljmp
insb
push
jp
lahf
int
jle
fwait
sub
das
mov
lcall
divl
cmp
and
dec
loope
inc
jo
mov
in
fcompl
ja
inc
cmc
jp
mov
pop
movsb
adc
sbb
mov
push
mov
sub
into
pop
jle
pushf
adc
fsubr
stc
sub
hlt
mov
incl
je
pop
adc
dec
inc
pop
adc
and
ljmp
rclb
jno
ljmp
xchg
sub
push
daa
inc
lds
cs
cmpb
cmp
xchg
inc
push
mov
sarl
jmp
mov
daa
pop
push
lock
xlat
mov
pop
cmp
call
pop
add
inc
movb
setle
int
push
std
ljmp
cmpsb
inc
sub
push
cs
subb
xchg
inc
push
fdivl
jle
ja
ljmp
nop
loopne
gs
stos
sub
xor
pop
loop
cli
jbe
inc
jb
shrl
add
call
xor
mov
mov
mov
xchg
push
xor
insb
xchg
jne
out
mov
ljmp
cmpsb
xorl
inc
incl
addr16
repz
cs
popf
fucomip
sub
ds
jmp
adc
mov
xchg
sahf
dec
aam
dec
adc
ret
shll
push
jmp
lcall
xlat
pop
repnz
xchg
add
lods
sub
loopne
sbb
sbb
mov
push
pop
pop
test
mov
push
and
or
mov
xchg
cs
dec
pushf
pop
ss
arpl
jb
and
lds
pushl
int3
fcmovnbe
decl
call
sarb
in
hlt
jb
pop
jo
add
lock
jbe
mov
cmp
mov
jg
push
fldcw
adc
jl
ror
or
add
std
jmp
dec
hlt
fcomip
mov
add
jne
add
clc
pop
inc
jb
sti
push
mov
popf
mov
ja
out
shr
test
xchg
cmc
call
aad
mov
ljmp
clc
addb
sbb
ficomps
push
scas
lods
adc
cs
aas
cmp
push
xor
xchg
jle
push
fcoms
fimull
outsl
push
outsl
out
and
jle
sbb
lods
movsb
mov
inc
jno
and
cld
jmp
lret
ror
jp
or
imul
hlt
mov
xor
jl
dec
jp
andl
push
outsl
decl
pop
xor
push
pop
lret
adc
pop
mov
in
pusha
orb
es
call
ljmp
mov
mov
loope
stc
lcall
mov
cmp
pop
cmc
ret
mov
arpl
sahf
mov
adc
add
adc
repz
pop
rclb
repz
filds
pushl
sbb
mov
xor
dec
movq
dec
hlt
movsl
fcomip
scas
mov
pop
es
repnz
mov
xchg
pop
test
popf
pushf
divb
ljmp
aaa
add
xor
in
test
js
pop
ret
ret
jnp
pop
int3
fildll
call
loopne
arpl
mov
xchg
xchg
loopne
dec
cmpl
fiadds
sbb
incl
push
xchg
mov
pop
xor
sub
ffreep
nop
pushf
fnstsw
cmp
xchg
rorl
inc
fadds
xlat
cmpsl
daa
cmp
imul
ljmp
mov
mov
call
inc
inc
mov
push
jnp
scas
pop
arpl
sub
sub
add
pop
sbb
fstl
sahf
dec
test
fsubl
ret
shlb
daa
push
lods
fiaddl
enter
mov
xchg
adc
int3
aaa
lods
xchg
fsubs
inc
cli
incl
fistpll
fimull
incl
sub
sub
mov
mov
sub
lods
cmp
aad
decl
loopne
pop
mov
sbb
push
push
lahf
fldl
xor
lea
stos
sbb
xor
jge
sti
daa
outsb
inc
stc
cmpsb
loope
cltd
test
call
divb
shrb
lret
repz
xchg
test
mov
lock
incl
out
rcll
jb
adc
in
sti
nop
jbe
sub
adc
call
enter
push
daa
call
pop
ret
mov
push
cld
adc
movsb
iret
jg
movsb
cmpsb
sub
push
repnz
inc
out
outsl
cwtl
mov
popf
scas
mov
pop
or
sub
aaa
call
push
arpl
mov
and
push
int
ret
into
xchg
jg
xchg
add
push
decl
enter
pushl
push
in
inc
push
ja
push
push
repz
mov
repz
shll
das
outsl
fdiv
je
pop
jecxz
and
sub
aam
or
fbld
shlb
inc
xlat
dec
ss
cli
js
call
mov
mov
mov
cmp
je
mov
pusha
pop
out
xchg
inc
push
rcll
fsub
decl
lahf
xchg
lods
mov
push
sbb
sbb
pusha
jecxz
push
mov
aas
xor
inc
shlb
mov
mov
inc
in
movsl
pop
rcrl
pop
out
cli
frstor
jae
xchg
dec
xchg
mov
sahf
lea
or
pushl
sbb
inc
inc
out
inc
push
or
pop
scas
or
or
cmp
call
and
cmp
cmp
or
add
dec
fbstp
popf
imul
incl
es
push
push
lock
pop
xchg
icebp
mov
stos
cmp
nop
cmc
mov
jmp
scas
and
lret
test
stos
pop
mov
adc
and
inc
sarb
mov
loop
pop
gs
ds
ret
cmp
outsl
ljmp
adc
shl
je
fistpll
pushf
jg
inc
stc
addr16
cmc
and
jp
dec
xchg
mov
push
cmpsb
sbb
jbe
xchg
clc
pusha
daa
out
or
decl
shl
pop
fistpll
sub
aad
scas
in
ljmp
clc
inc
push
shlb
mov
push
sbb
lcall
enter
stos
adc
sbb
push
xor
push
lahf
repz
mov
mov
stos
sub
mov
roll
mov
lods
inc
pop
icebp
xchg
test
inc
lock
decl
inc
test
push
mov
push
sub
push
add
aad
push
sarl
stc
xor
cmp
mov
ljmp
pop
inc
cmp
mov
or
adc
das
dec
add
pop
mov
stc
out
xchg
push
cmp
rolb
filds
push
push
rorl
pop
cld
decl
aaa
fadd
sbb
xor
lods
add
fwait
cmp
lret
pop
jb
subb
lahf
mov
and
imul
mov
mov
mov
jge
mov
or
iret
sti
ret
jae
rcrb
in
mov
test
mov
test
pusha
test
outsl
dec
lret
rclb
shll
negl
mov
call
push
mov
stc
cmp
movsb
fbstp
lock
sub
and
call
lret
in
fistps
xchg
test
and
or
add
and
imul
dec
inc
loope
out
mov
test
sbb
leave
es
xchg
out
popa
clc
std
in
push
push
jnp
int3
mov
jg
jmp
cmpsl
stc
leave
dec
das
imul
pop
xchg
adc
and
cld
adc
dec
enter
sar
decl
nop
jp
call
icebp
nop
xchg
mov
fstpt
mov
and
add
xor
jo
jno
fstpt
ror
adc
push
sbb
ljmp
pushf
xchg
and
mov
adc
inc
push
sbb
cmpb
jmp
sub
or
xor
adc
lea
mov
nop
sbb
push
neg
popf
adc
aas
mov
decl
fcoms
add
mov
jbe
std
mov
add
ljmp
cmp
inc
pop
lods
push
add
lcall
cmp
cmp
das
mov
icebp
aad
mov
jbe
incl
sti
rorb
ja
push
xchg
pushw
xadd
insl
gs
or
mov
cli
fwait
or
xor
and
xchg
pop
cmc
pop
mov
xchg
lcall
sub
xchg
xor
xor
popa
test
imul
inc
jge
push
ljmp
rorb
in
int
mov
mov
in
ljmp
call
lret
xor
lcallw
pop
lahf
or
sbb
and
fsub
addb
mov
scas
stos
mov
fsubs
out
and
mov
push
out
ljmp
jb
dec
lea
fsubrl
cmp
mov
lds
xchg
les
sar
cs
dec
cld
out
daa
arpl
jl
sub
sar
aaa
cmpsb
or
mov
xchg
pop
jle
mov
or
incl
push
int3
push
xchg
dec
cli
add
scas
es
lock
popa
mov
cli
cmp
decl
int3
popa
sbb
std
or
sti
shll
mov
adc
or
xor
mov
pop
or
xchg
or
movsb
shl
shlb
insl
push
std
scas
clc
sub
fcmovnb
sti
adc
cmp
dec
int3
lret
jmp
inc
cmp
fbld
or
pop
inc
ficomps
mov
psubq
mov
mov
cmp
jmp
jmp
lret
dec
imul
pop
out
je
sub
dec
in
test
lds
inc
int3
lcall
and
xlat
shl
daa
scas
add
jle
and
pushl
rol
mov
lds
into
movsl
fcos
mov
loopne
mov
popa
shll
push
jmp
arpl
mov
test
aad
mov
push
mov
pop
mov
xchg
dec
pop
das
lock
ljmp
ja
mov
fs
push
call
mov
test
jmp
fldl
jae
pop
sub
mov
or
call
mov
sahf
ljmp
rcl
cmpsb
push
enter
aad
mov
ljmp
cmpb
js
lods
pop
aam
pushf
cmp
xchg
ds
cld
sbb
cwtl
adc
sub
cs
outsb
out
lret
xchg
imul
jb
push
or
lcall
das
cmpb
push
daa
adc
dec
add
push
lahf
jbe
mov
test
sbb
mov
stos
cmpsl
sbb
sub
test
imul
popa
subl
sbb
inc
and
into
shlb
dec
pushl
xchg
sbb
pop
pop
outsb
jno
jecxz
or
stos
shrl
jae
bound
lcall
fildl
cmpb
in
stc
mov
scas
xchg
or
xor
loop
pop
mov
mov
ljmp
mov
mov
jb
cmp
lock
adc
adc
mov
dec
mov
out
sbb
pop
test
imul
mov
jne
or
arpl
lret
cs
mov
pop
pop
orl
lcall
mov
dec
in
mov
mov
add
and
aam
dec
imul
jmp
decl
inc
sub
and
pop
mov
cmp
mov
imul
cmp
cmc
nop
cld
in
pop
sbb
incl
inc
clc
mov
push
add
popa
stos
inc
jmp
inc
and
out
je
pushf
xlat
add
jg
incl
lea
dec
jle
dec
or
sub
mov
incl
cltd
add
and
popf
repz
in
loopne
rorl
and
xchg
aas
and
leave
push
add
roll
decl
xchg
dec
cld
lods
pop
aad
jmp
add
mov
cmp
adc
push
dec
mov
stc
xchg
dec
push
repnz
jp
jmp
add
adc
in
push
fs
mov
fstpl
xor
jns
lret
mov
cld
pushl
mov
enter
fcompl
inc
mov
adc
pusha
mov
cmp
ffreep
lds
rcll
lcall
scas
loopne
lcall
pop
sbb
imul
mov
or
push
lds
cld
dec
in
jge
mov
adcb
and
push
bound
fcmove
xchg
dec
jmp
sbb
and
cwtl
cmp
movsb
repnz
jae
clc
dec
jge
fldcw
inc
jno
sar
filds
fsubrl
ss
cwtl
sbbb
jmp
je
adcl
call
mov
push
jmp
push
imul
ja
ljmp
pop
outsb
rclb
and
cmp
fwait
inc
shlb
sbb
and
xor
inc
hlt
push
jne
jne
push
repnz
xchg
pop
mov
incl
mov
loopne
rcrb
addr16
les
pusha
fidivl
ljmp
adc
sarl
sub
mov
xlat
pop
bound
jns
das
sub
insb
dec
in
cmp
mov
add
pop
icebp
dec
in
mov
cmp
ret
sahf
fnstcw
call
out
les
cmp
dec
sbb
aam
out
and
pop
iret
jno
setbe
call
push
sub
push
mov
mov
pop
pop
sub
lahf
cmpl
es
decl
sbb
sub
cmp
inc
add
mov
call
in
pusha
arpl
jnp
mov
cld
lcall
call
sub
pop
push
mov
int
fs
adc
fwait
inc
stos
cld
ja
push
mov
sbb
lret
fmull
popa
addb
call
mov
ror
cs
push
in
pushf
inc
or
es
fnstsw
push
pop
xor
mov
jnp
ljmp
lahf
inc
adc
mov
push
add
lea
xchg
ss
je
imul
jmp
das
cmp
add
mov
mov
cld
insb
xchg
aam
cltd
push
movq
sub
xor
fadds
cmp
int3
jge
inc
push
daa
sbb
lods
cmpb
mov
outsl
add
out
jl
and
dec
jge
xacquire
dec
lods
sarl
imul
lods
dec
push
arpl
lcall
ljmp
push
cltd
popa
jle
xchg
faddl
fistpl
aam
mov
jecxz
add
xchg
mov
icebp
lcall
lods
cld
or
xchg
das
dec
fstps
ret
push
in
mov
inc
jge
push
leave
into
pop
cld
lcall
shlb
iret
add
rcll
jecxz
ljmp
ret
pop
int
push
xchg
loop
and
adc
add
xor
jmp
lcall
ss
int3
inc
repnz
xchg
xchg
jno
xchg
stos
mov
pop
jl
decl
mov
push
inc
pop
imul
cld
fisubrl
cmpsb
out
pushf
inc
gs
xchg
fwait
mov
fldcw
pushf
dec
mov
mov
jmp
ja
nop
out
push
and
cld
int
call
sbb
mov
xor
addl
call
bound
aas
sub
xor
cmp
out
cltd
es
clc
mov
add
mov
lret
adc
cmc
mov
in
cmp
and
loope
mov
cmp
cmp
cld
and
xchg
push
xor
push
push
cld
mov
aam
clc
icebp
jbe
push
pop
inc
push
jmp
lcall
test
loop
sub
adc
imul
jns
pop
test
add
cmpb
andb
push
loop
clc
call
rorb
stos
cmp
cmc
stos
les
lea
or
loopne
mov
mov
and
inc
jl
rcll
daa
cmp
push
xor
outsl
addb
pop
pop
push
add
xchg
dec
lods
jmp
jge
cltd
mov
jp
pushl
cld
insb
int3
out
arpl
out
loopne
xchg
rclb
xchg
mul
popf
aad
add
aad
incl
flds
fsub
dec
sbb
xchg
pop
add
adc
jb
push
outsl
clc
cmpsb
push
inc
std
mov
mov
sub
test
divb
lcall
sbb
loope
ljmp
je
cmp
sub
pop
dec
cmpl
jmp
bound
jp
xor
adc
jp
fiadds
in
popa
add
cmc
dec
push
cld
pop
insb
lods
dec
shrb
je
xor
arpl
rcrl
jg
test
mov
sub
adc
mov
daa
cmpsb
sbb
call
inc
mov
out
and
inc
gs
xchg
adc
dec
adc
pop
jnp
mov
or
adc
push
sbb
insl
push
lea
loopne
xchg
push
ret
incl
aas
xchg
mov
add
out
movsb
pop
fwait
shll
cmc
mov
push
sub
xchg
mov
mov
jle
mov
mov
or
pop
out
jbe
dec
icebp
clc
jg
test
subl
push
cltd
or
or
sbb
jno
xchg
sbb
mov
jp
lds
out
es
jns
xchg
scas
cs
cmpsb
leave
lret
xchg
call
lret
adc
push
cmpsl
mov
or
imulb
inc
jmp
fcomps
xor
xchg
pop
gs
aas
pop
or
movsb
push
int3
xchg
cmc
dec
lcall
outsb
ja
ja
jmp
xor
jbe
xor
in
add
call
sbb
mov
push
sbb
std
dec
or
xchg
popa
xor
xor
lret
das
cli
shlb
mov
jbe
jmp
dec
push
mov
mov
sub
mov
ret
inc
adc
xchg
jl
daa
add
call
pushl
mov
out
ret
xor
out
jg
in
sbb
add
pop
movsb
out
xchg
adc
xor
add
jl
jg
inc
mov
int3
xchg
popa
daa
scas
push
xchg
out
pop
out
xchg
push
ret
and
leave
xchg
or
mov
loope
lds
cmp
movsl
xor
int
cmp
pushl
dec
mov
out
loopne
icebp
iret
or
mov
int3
dec
jns,pt
ljmp
mov
rclb
or
je
cmpsb
lods
push
sti
ljmp
rcrb
adc
xor
or
loopne
enter
cmp
or
hlt
inc
pushf
pusha
jo
imul
push
xor
out
sbb
ljmp
mov
outsb
ss
outsl
js
js
dec
sarl
repnz
aam
xchg
inc
in
jmp
call
cmp
xchg
mov
xchg
and
xor
stc
repz
mov
adc
adc
adc
dec
cmp
daa
inc
sbbl
jecxz
pushl
mov
mov
mov
lods
add
adc
mov
flds
pop
icebp
mov
add
idivl
mov
mov
push
xor
mov
jg
into
andb
pop
xor
ljmp
in
divb
mov
xor
inc
inc
jbe
rorb
and
decl
es
pop
mov
cmp
test
js
sub
mov
inc
or
ljmp
out
dec
cmpsl
xchg
sbb
xchg
fstps
movsl
nop
push
popa
jb
pushl
std
mov
or
imul
mov
movsl
inc
push
cmpsl
test
pop
das
movsb
cmp
clc
adc
mov
in
lods
xchg
mov
push
in
cli
retw
push
and
jle
mov
sub
lods
push
and
test
jl
pushl
add
inc
out
pop
mov
sub
xor
mov
rcll
test
xor
mov
jae
test
stos
add
adc
or
xor
pop
and
xchg
incl
roll
and
lods
dec
push
int
shlb
pop
cmp
sub
pop
fwait
dec
sub
cmc
jmp
daa
out
lahf
data16
mov
outsb
jle
dec
jge
push
ja
adc
mov
gs
mov
push
decl
add
dec
popa
add
aas
sbb
push
popf
decl
jl
push
cli
scas
ds
xlat
aas
adc
shll
ds
stos
add
neg
hlt
jmp
cld
sbb
cltd
mov
sub
jle
ffreep
ljmp
xor
movsl
scas
lahf
fwait
push
push
jmp
push
loop
sar
ljmp
es
pusha
add
mov
dec
orw
aam
sti
mov
decl
mov
hlt
stc
mov
or
jmp
cmc
movsl
ljmp
in
ss
sbb
movl
and
repz
cld
pushl
mov
out
test
ret
jnp
shrl
mov
pushl
push
mov
push
mov
cmp
mov
lret
mov
jge
ret
sub
outsb
sbb
decl
mov
fldcw
outsb
push
mov
xorb
cwtl
add
addb
bound
sub
adc
push
fisttpll
or
push
pop
fildll
cld
nop
inc
loopne
lds
mov
mov
sub
shl
out
jo
jne
inc
mov
ljmp
cli
pusha
mov
pop
lcall
pop
mov
into
decl
mov
pop
fsub
dec
pop
outsl
outsl
add
lret
push
inc
dec
mov
fmul
pop
aad
push
inc
sahf
push
xchg
mov
out
ror
inc
loop
xchg
sub
or
mov
ror
xor
mov
add
push
les
scas
ds
cmp
jns
test
incl
ljmp
repnz
dec
orb
nop
repz
add
jnp
std
jae
push
pop
push
sub
or
push
cmc
dec
jg
push
lds
hlt
mov
jne
jno
jo
ss
or
int3
push
fistl
outsl
ljmp
and
mov
es
mov
shlb
dec
int3
pop
sub
push
fdivl
insb
shlb
pop
mov
jbe
mov
shl
cmp
das
outsl
add
mov
clc
call
mov
stc
nop
jmp
or
ja
dec
inc
pop
aad
or
push
stc
xchg
sbb
dec
fistpll
stos
pop
imul
mov
in
add
add
es
mov
inc
jmp
push
fbld
jecxz
divl
push
mov
imul
jmp
call
lret
mov
loope
or
hlt
cmp
jno
mov
popf
mov
mov
sub
stos
push
sbb
in
outsb
iret
sbb
mov
xchg
jg,pt
pop
jne
es
xlat
push
and
mov
call
mov
pop
test
push
pop
sarb
fisubl
addb
mov
nop
or
mov
jg
movsb
nop
pop
lahf
ljmp
adc
or
cmp
jae
pop
mov
xchg
dec
and
fwait
jge
adc
sbb
test
popa
jl
add
push
inc
sar
mov
sarb
lahf
push
and
cmp
es
fistpll
loopne
je
mov
sub
shll
jp
incl
inc
cmpsl
push
inc
arpl
lret
mov
fisttpll
dec
mov
les
xor
loop
call
subb
insl
xchg
mov
pop
dec
inc
sub
movsb
test
iret
dec
icebp
ljmp
inc
mov
ret
add
int3
das
jne
mov
sbb
or
aam
stos
and
popa
imulb
and
add
insl
je
nop
xchg
daa
in
mov
mov
into
ljmp
lcall
dec
ljmp
and
mov
lret
addl
call
lret
loop
clc
jmp
mov
xchg
jb
repz
imul
ret
mov
sub
adc
lock
mov
divl
arpl
mov
repz
insl
mov
shrb
mov
arpl
sub
push
incl
test
xchg
in
cmp
mov
std
pop
sarl
push
call
cmc
mov
mov
jge
or
outsl
jg
lods
lea
incl
push
pop
rcr
sbb
jecxz
ret
adc
fwait
test
sbb
rcl
or
jns
lods
inc
fistps
lret
lret
inc
pop
cmpsb
xchg
icebp
add
jo
cmp
ja
aad
and
sbb
inc
jae
in
inc
and
mov
xor
jne
mov
aas
xor
or
pop
lock
in
repnz
or
aad
add
bound
mov
fists
into
xorb
call
push
fdivs
icebp
pop
cwtl
es
stos
iret
loop
pushl
test
popa
pop
nop
dec
inc
in
xor
pop
scas
rcrb
out
adc
data16
push
incl
les
pop
imul
sbb
test
sub
mov
xor
lods
sbb
inc
xchg
dec
xor
and
incl
lock
testl
out
in
inc
icebp
scas
adc
inc
cli
gs
xchg
ljmp
in
xchg
pop
jecxz
ficoml
dec
xchg
popl
cmp
movsb
addb
hlt
pop
mov
cmp
mov
or
icebp
push
jo
scas
ret
imul
iret
arpl
dec
pop
push
imul
or
dec
or
xlat
cli
jmp
es
mov
mov
ficoml
icebp
icebp
in
sub
sub
movups
ljmp
mov
inc
sub
sub
sbb
call
jmp
dec
out
or
and
xchg
mov
and
dec
jnp
sarb
sahf
add
cmp
pop
push
and
shlb
enter
mov
xlat
enter
cmp
loopne
addr16
sbb
loopne,pt
fldenv
lret
cmpsl
or
dec
fsubrl
adcl
mov
fucomp
hlt
lea
bound
loopne
pop
mov
pushl
xchg
push
fstpl
stc
mov
inc
mov
xor
add
xchg
mov
mov
lods
mov
add
test
ret
jmp
je
sbb
sub
mov
mov
icebp
pop
das
cltd
push
and
pop
scas
std
gs
pop
insl
cmp
sub
insl
dec
or
pop
xchg
push
cmpl
or
dec
cmpsb
lcall
cmp
testb
test
test
leave
lods
iret
push
pop
aas
mov
and
cwtl
dec
leave
jg
shll
movsb
or
jo
pop
jg
lcall
add
test
arpl
jb
xor
loope
jmp
es
mov
ja
mov
inc
arpl
in
call
push
mov
enter
sub
jl
fstpl
mov
sbb
nop
lock
pushl
mov
cmp
lods
shrl
and
mov
stc
popa
mov
pushl
pop
sub
adc
ficomps
cmp
imul
cli
incl
xchg
adc
mov
push
hlt
cmp
imul
pop
or
leave
fnstcw
insl
cmpl
and
lret
je
inc
or
loopne
lods
cmp
aad
mov
bound
push
sbb
and
sub
fcomi
fisttps
fstpl
mov
mov
fcoms
sbb
jp
mov
push
stos
cmp
or
pop
mov
rclb
ficomps
xchg
inc
ja
mov
cli
dec
adc
sub
into
fs
xchg
adc
scas
ljmp
movsl
pop
mov
push
ret
mov
sbb
add
jmp
aaa
shrl
jl
inc
xor
jo
nop
add
jp
push
mov
gs
aas
inc
and
adc
loope
les
mov
or
ljmp
inc
ljmp
aad
inc
adc
xor
mov
xor
mov
cmp
decl
into
enter
imul
cmp
mov
mov
bnd
fadds
xchg
lds
sbb
iret
js
and
out
push
ljmp
inc
push
test
mov
dec
dec
imul
xchg
xchg
xchg
clc
nop
bound
pop
cmp
sub
in
mov
lods
xchg
sbb
xchg
mov
inc
stos
fsubrl
mov
dec
loopne
pop
jle
out
jmp
lock
or
int
dec
insb
cltd
mov
movsb
or
adc
rorb
insl
data16
loope
mov
mov
pop
jmp
into
subb
and
mov
sahf
nop
scas
adc
add
pop
lods
mov
decl
cs
aas
das
pop
dec
xchg
out
lods
mov
xchg
pushf
jge
inc
testl
ds
xchg
sbb
dec
jecxz
push
ja
int
imul
pop
sub
andnps
fldl
std
push
xor
jmp
cmpsl
iret
lods
adc
or
insb
iret
mov
push
fs
cmc
or
inc
and
test
pop
push
das
loop
dec
and
setnp
dec
xchg
mov
aas
xchg
cmc
outsb
mov
xchg
dec
cmpsl
fdivs
sbb
add
xlat
or
and
push
sbb
out
clc
mov
sub
mov
and
and
sbb
xor
inc
adc
orb
cmp
decb
lcall
sbb
into
mov
mov
insb
outsb
sub
cmp
cmc
hlt
xchg
xchg
and
imul
inc
lcall
in
mov
cli
push
ret
mov
or
into
cmp
sbb
push
dec
loop
sbb
push
lcall
cmp
in
fadds
dec
jg
dec
add
inc
dec
out
lock
xlat
pop
push
jmp
aad
aas
add
adc
outsb
jb
test
jno
decl
cmp
mov
push
jl
sbb
sbb
jmp
div
decl
sbb
dec
ret
pusha
in
lret
cmp
jmp
lods
shrl
ja
stc
xor
shlb
add
xchg
adc
add
call
neg
mov
adcl
jns
and
xchg
lods
add
sbb
jmp
push
jp
out
jne
testl
or
mov
mov
mov
insb
aaa
std
scas
mov
test
and
adc
xchg
sbb
jmp
sbb
imul
in
out
or
pop
dec
inc
dec
jle
sub
mov
xchg
add
les
push
mov
fildll
test
xor
or
xor
add
cli
push
jge
xor
scas
insb
mov
out
stos
into
cmp
sub
sbb
in
cmpb
cld
xor
sbb
and
push
mov
mov
cld
loope
inc
and
sbb
lea
sub
xor
sub
rorl
outsl
adc
decl
aam
ret
ljmp
push
daa
pop
push
ds
push
and
incl
dec
xchg
cmp
mov
hlt
push
je
sar
lcall
or
addb
dec
xchg
inc
inc
outsb
mov
pop
add
inc
pop
adc
repz
scas
xrelease
mov
adc
jl
mov
fwait
push
dec
lock
ljmp
and
test
sbb
ss
repz
daa
xor
loope
mov
decl
inc
xchg
pop
sub
mov
cmp
fidivrl
js
xor
pop
out
sbb
jno
and
inc
push
int
push
decb
lock
cmpsl
pop
rcrl
mov
test
dec
jg
fwait
movsb
push
es
add
movsl
jg
adc
jmp
shlb
stc
dec
mov
mov
xorb
mov
aaa
or
dec
sti
sub
add
sbbl
cld
call
push
inc
mov
jae
sarl
jle
neg
imul
jmp
sub
aas
cmp
or
ret
jae
scas
rorb
cwtl
dec
inc
inc
cmp
push
cmp
inc
mov
add
dec
neg
or
lcall
das
sub
mov
out
icebp
outsb
test
sti
mov
jns
sbb
add
cmc
out
ljmp
andl
xchg
lcall
cmc
lcall
add
in
out
insl
or
or
or
adc
mov
sbb
mov
test
mov
repz
inc
lret
jle
jg
arpl
lcall
cmp
loopne
sub
and
or
xchg
adcl
js
enter
testb
ror
addr16
add
xchg
loope
popa
inc
sahf
loopne
stc
cmc
adc
out
xor
cmp
add
cld
pushl
bound
popa
adc
fs
ljmp
mov
mov
fucomp
jne
dec
and
pop
pop
repnz
aas
mov
sub
mov
jl
pop
cmp
decl
cmpsl
jp
ficompl
mov
roll
add
jmp
test
inc
mov
cmpsb
adc
lock
std
call
out
mov
rorl
fcomps
ds
out
call
pusha
mov
xchg
push
sbb
ret
clc
sub
ljmp
inc
fmulp
insb
mov
sbbb
push
lock
fcoms
repz
jbe
imull
pop
jb
insb
lds
addr16
or
lahf
mov
nop
test
scas
jg
lret
sub
cmp
adc
mov
and
das
push
xchg
or
incl
push
and
in
add
sahf
jl
in
rorl
outsb
push
scas
enter
inc
out
std
daa
icebp
mov
jmp
rorb
cmp
push
lcall
xchg
sub
pop
xchg
fsubrs
mov
sarl
jle
loope
and
mov
cmp
cwtl
adc
lcall
xchg
mov
repz
add
mov
dec
mov
xchg
xor
push
jmp
xchg
cmp
cs
and
inc
iret
jmp
test
dec
je
enter
stos
sub
sub
call
push
rolb
push
inc
push
mov
rclb
add
lcall
mov
fdivrs
dec
fisubs
lret
std
out
fs
nop
loop
cmp
out
test
dec
sbb
pushl
bound
sub
adc
in
jo
push
xor
cmp
lcall
sub
and
clc
mov
jge
movsl
ss
cli
mov
addr16
gs
mov
sub
jb
aas
mov
cmp
inc
pushl
test
jne
pop
inc
das
dec
sbb
xchg
or
xchg
dec
cmpsb
and
pop
dec
pop
add
stc
inc
push
sbb
decl
jno
or
mov
adc
rclb
std
call
movsl
std
inc
cmp
push
lds
daa
cmpsl
jo
arpl
mov
lret
mov
incl
jmp
cmpsl
aad
arpl
ja
mov
push
adc
mov
mov
xor
stc
or
decl
adc
loopne
ret
mov
push
xchg
js
aad
subb
imul
mov
test
push
add
filds
jecxz
mov
pop
adc
jns
mov
fistl
dec
pop
or
sti
mov
sbb
inc
jecxz
call
xor
pushf
scas
fstpl
add
mov
cmp
decl
shlb
test
push
inc
ss
mov
and
jnp
movsb
addb
inc
lcall
mov
mov
dec
icebp
aas
push
fs
ds
inc
pusha
mov
clc
aas
orl
sbb
popf
test
icebp
xor
adc
data16
out
mov
pop
inc
out
lret
mov
scas
mov
mov
ss
mov
call
loopne
dec
outsb
mov
mov
lea
jae
pop
and
repnz
call
jp
adc
popa
imul
mov
mov
pop
test
pop
std
ja
mov
sub
dec
or
jno,pn
push
mov
dec
jb
lret
test
push
jp
mov
xchg
mov
mov
mov
jg
cmp
sbb
std
lods
fs
loop
mov
mov
mov
jnp
bound
inc
sbb
lcall
and
insl
mov
dec
inc
ljmp
sbb
repz
popw
movaps
inc
adc
fldcw
mov
pushl
cld
rorl
js
cmp
lret
aaa
adc
pop
lock
cmpsb
dec
or
mov
in
adcl
dec
xchg
push
pop
and
rorl
push
cld
sub
add
test
sub
inc
cld
ljmp
pop
inc
lods
movb
incb
stos
loop
insl
dec
lahf
dec
sahf
ret
cmp
dec
dec
je
pop
ds
and
jle
lock
jmp
jmp
and
xchg
push
mov
js
adc
push
rcrb
lahf
mov
cmp
cli
jge
pop
jge
push
je
jne
dec
lcall
dec
pop
pushl
mov
pop
jb
sub
sub
aas
lcall
push
fcomi
bound
lods
lcall
xor
or
insl
iret
out
jle
sahf
cwtl
sub
loope
and
xchg
fistl
icebp
mov
loop
pop
rclb
shlb
pushl
mov
roll
aas
fdivrs
pop
mov
fisttps
mov
arpl
sbb
in
test
mov
enter
bnd
mov
and
cmp
push
cli
inc
sbb
pushf
xchg
jmp
mov
cld
les
pop
aaa
xchg
subb
mov
jnp
dec
sub
ljmp
js
push
push
ficoms
and
lret
sahf
cmp
stos
in
pop
jb
ljmp
cmpsb
inc
mov
push
jno
push
or
push
mov
add
cmc
add
jmp
call
fsubp
stc
stos
mov
adc
out
imul
add
adc
call
sub
add
ss
cwtl
mov
mov
or
fisubrs
push
incl
pop
iret
push
add
push
mov
xor
add
inc
mov
push
xor
xchg
scas
rol
int
mov
push
mov
push
in
xchg
popf
mov
decl
pop
xor
fldt
add
outsl
outsb
in
sbb
mov
nop
out
cli
ljmp
mov
jg
xor
imul
inc
pop
xor
out
iret
xor
dec
ljmp
je
dec
cld
dec
rdmsr
pop
sti
mov
lcall
dec
jecxz
mov
pop
sub
mov
jle
mov
push
je
pop
aad
fsts
pop
add
sbb
ljmp
clc
sti
sub
mov
sub
sbb
call
adcb
mov
negl
inc
mov
pop
cmpb
sbb
inc
test
mov
mov
add
clc
test
repz
pusha
cmpxchg
addr16
lock
push
sub
add
xchg
and
jmp
jmp
dec
add
jmp
push
pop
jp
stos
rcll
fcomip
pushl
call
cwtl
cld
cmc
jbe
pop
xchg
push
fistl
call
or
sbb
pop
push
gs
or
popw
jmp
xor
and
adc
in
mov
out
xchg
jmp
fildll
and
mov
shrb
out
cmp
negl
decb
inc
pop
int3
out
cmpsl
and
pop
std
pushl
mov
cmp
fldenv
pop
stc
leave
sbb
cmp
cli
cltd
cmp
testb
mov
out
mov
repnz
and
jb
stos
sub
mov
iret
lds
push
xor
jg
adc
mov
cmp
dec
mov
pop
mov
lcall
call
mov
adcb
std
or
xor
sub
and
pushf
jnp
xchg
frstor
shll
and
ljmp
lcall
and
add
mov
push
arpl
clc
decl
scas
xorb
test
loopne
scas
dec
adc
nop
clc
fistpll
andb
or
aam
lcall
icebp
imul
cli
jecxz
bound
jle
xchg
test
vmovshdup
jl
dec
jmp
jmp
add
jne
and
adc
pop
lods
cs
in
lret
jg
sub
arpl
insb
or
jb
mulb
icebp
dec
jp
repnz
adc
mov
or
or
popl
sar
jmp
cmp
scas
iret
push
mov
nop
and
icebp
out
lock
xchg
stos
aam
fwait
add
incl
xchg
xor
rcrb
cmpsb
dec
cltd
arpl
add
or
xlat
dec
jecxz
jge
mov
js
stos
sbb
movsl
mov
call
mov
ret
bound
popf
sbb
cwtl
sbb
sti
gs
add
jle
xor
inc
push
pop
flds
sahf
add
popf
push
repz
lcall
icebp
outsb
es
mov
inc
sbb
mov
lds
lods
stc
jbe
cmpb
incl
icebp
enter
call
jmp
adc
ljmp
nop
mov
outsl
idivb
xchg
cld
out
or
lret
pushw
lret
enter
movsl
cmp
or
pushl
xor
mov
mov
push
filds
outsb
dec
popa
es
jge
lods
inc
mov
pop
cmpsb
jg
mov
in
ljmp
ficoms
cmp
adc
dec
pop
rcrb
xor
aas
test
jae
push
daa
and
decl
sub
jno
inc
inc
xchg
jmp
jle
insb
decb
cwtl
mov
mov
ror
cmc
hlt
incl
rcl
pop
ret
in
notb
jecxz
and
push
mov
fcomps
fwait
call
pop
jle
sbb
sbb
xchg
mov
push
add
add
mov
aad
cwtl
cmp
ljmp
daa
out
enter
jecxz
sbb
mov
mov
cmp
pusha
add
and
add
call
push
xor
sahf
adc
sbb
xchg
leave
adc
mov
into
jbe
xor
or
xchg
mov
lods
add
loope
add
andb
xor
adc
decl
adc
dec
mov
into
outsb
and
jns
dec
pop
adc
jecxz
rolb
insb
aad
decl
add
and
int
dec
es
mov
mov
adc
fcomp
push
mov
jg
fisttps
int
xlat
sbb
lcall
push
or
insb
stos
popa
mov
loope
es
xchg
subb
mov
and
daa
xor
test
add
mov
or
out
scas
pop
adc
mov
imul
std
std
xor
mov
rol
sbb
cld
jno
cli
mov
rclb
inc
sbb
mov
pop
movsb
cmpb
xchg
dec
les
gs
cmp
inc
int3
in
and
mov
pop
mov
cli
nop
pop
shrb
test
mov
sub
ss
roll
mov
int3
mov
lock
lcall
aad
jg
lods
cltd
fistps
sub
xor
test
add
push
push
sar
decl
cs
or
mov
bound
xchg
ljmp
dec
adc
fsubl
xchg
sub
stos
sbb
jle
xor
sbbl
inc
mov
or
pop
testl
popf
lock
imul
dec
incl
mov
xor
leave
mov
cmp
add
jp
and
xchg
aas
cmp
jmp
xchg
mov
clc
dec
cmp
icebp
ja
cmp
rolb
addr16
lock
mov
dec
jp
jg
outsb
cli
dec
pop
fs
cld
clc
fadds
clc
pop
and
xor
mov
jp
icebp
mov
cmp
cld
pusha
xchg
pushl
imul
jl
mov
jae
mov
inc
inc
test
jl
jg
data16
stc
das
dec
lea
das
sbb
sbb
and
aad
adc
xor
or
iret
sbb
nop
popf
add
inc
jno
dec
lock
lea
roll
sbb
adc
js
lock
xor
cli
ljmp
les
out
cmp
mov
inc
cwtl
enter
xchg
mov
stos
jl
icebp
sbb
cmp
jl
pop
cmp
int
int
cmpsl
lods
rcll
scas
adc
add
pop
lods
inc
movsb
jp
pop
loope
inc
std
in
ljmp
daa
sub
xchg
mov
jg
clc
dec
lahf
and
iret
popa
cmp
mov
sub
fwait
aaa
addr16
out
add
incl
mov
dec
in
dec
fs
xor
cmpsb
xchg
xchg
mov
pop
icebp
ja
mov
mov
call
or
pushl
scas
inc
int3
adc
addl
fwait
daa
dec
cld
jp
cmp
mov
incl
or
daa
xchg
lods
sarb
and
mov
inc
xor
xlat
dec
into
hlt
ds
sub
out
push
dec
roll
jmp
gs
test
and
shlb
jns
add
mov
push
push
adcb
popf
adc
cmpl
out
decl
and
sbb
in
es
outsb
push
outsb
aam
mov
imul
ds
mov
cmp
je
or
mov
xchg
xchg
xor
pop
loop
mov
aaa
rcl
push
adc
jmp
pop
scas
mov
inc
mov
cmp
inc
jno,pt
xchg
push
mov
dec
add
in
xor
pop
lcall
ret
jp
aas
xor
pop
mov
out
ljmp
add
push
mov
pushl
cld
ljmp
cli
popa
xchg
or
jbe
movsb
fildl
inc
decl
push
lock
fnstsw
jb
into
ss
lds
sbb
cmp
mov
aas
lcall
pop
sub
ret
jle
push
popf
jl
ja
loop
loop
rorb
ja
mov
jo
sbb
scas
add
sahf
lock
loope
inc
fnstcw
lcall
and
daa
mov
jmp
inc
test
pop
dec
inc
mov
mov
pushl
mov
cmp
jecxz
sar
mov
dec
sbb
decl
pop
pop
mov
cltd
loopne
lret
cltd
outsb
std
mov
mov
cmp
cwtl
pop
adc
jg
not
sbb
call
xor
pushf
mulb
add
aam
xchg
into
pop
dec
cli
jmp
inc
in
mov
adcb
aam
fmuls
outsb
lods
jb
mov
xor
andl
fstpt
cmpsl
andb
hlt
scas
outsl
clc
jg
xor
fs
mulb
jbe
mov
fisttps
fadds
xor
incl
mov
jo
cmp
in
ljmp
test
int3
aas
xchg
ljmp
pushl
push
daa
rcr
jl
insb
or
or
cli
mov
adc
cmpsl
pop
mov
jl
ljmp
cli
cs
fdivr
jno
inc
out
cmpsl
insl
mov
sbb
je
and
xchg
mov
push
push
push
jl
inc
arpl
mov
sub
jecxz
pop
cli
call
sbb
pop
and
stos
decl
push
popa
mov
jp
mov
push
xchg
leave
push
je
hlt
push
out
lock
fs
call
push
lret
xchg
mov
mov
fisubrs
frstor
sbb
ljmp
je
xchg
cmp
push
pop
inc
pop
mov
mov
rclb
sbb
jmp
fs
mov
stos
jle
push
ret
cmp
pop
fisttps
lods
fldt
jmp
enter
incl
loop
mov
je
inc
scas
call
decl
cmpsb
fbstp
int
mov
push
xor
lods
loop
cmc
stos
insb
jp
xchg
orb
outsl
ret
in
jle
lods
bound
popf
arpl
pop
cs
push
push
in
mov
call
ss
inc
sbb
mov
outsb
dec
mov
sub
dec
mov
xor
and
decl
ja
fdivs
in
jl
mov
ret
jns
dec
daa
aas
idiv
loop
xchg
jecxz
mov
push
mov
cmp
mov
push
dec
ud0
lcall
or
sarl
lret
push
movsb
push
sbb
mov
fs
inc
pushl
dec
jbe
arpl
das
insl
pop
mov
xor
ljmp
push
mov
incl
scas
sbb
and
jo
mov
push
ss
sbbl
loopne
jmp
xor
data16
cwtl
xor
jbe
addr16
push
mov
not
push
call
les
jne
repz
jbe
mov
pop
cmp
push
js
mov
add
cmpsb
sbb
pop
push
xchg
dec
test
jmp
data16
mov
das
and
cmc
out
lcall
addr16
in
xchg
add
inc
mov
fwait
cli
lds
loop
mov
sub
scas
mov
and
ds
outsb
inc
rorl
pushl
enter
ljmp
sub
stos
sub
arpl
jb
dec
dec
stc
jmp
xor
and
push
fists
mov
sub
incl
add
xor
test
flds
and
imul
mov
cld
aam
nop
pop
xor
sub
lock
outsl
sbb
push
mov
push
jle
push
pushf
aam
and
rorb
xor
and
or
cmp
cmpsb
les
jl
jb
jne
dec
sbb
popa
push
aam
adc
pop
mov
xchg
faddl
decl
stc
insb
aaa
movb
and
sti
int
rcrb
push
shlb
adc
add
jge
inc
push
loop
pop
sub
xchg
inc
fisubl
cmc
ljmp
repnz
insl
jge
decl
mov
fcos
orl
lahf
sbbb
mov
cli
scas
xchg
push
lret
daa
xchg
movsl
jbe
stos
loop
dec
icebp
call
cld
and
lods
jl
and
pop
lods
decl
dec
movsb
add
add
stc
movsl
clc
or
pop
lret
cmp
pusha
arpl
fdivrl
cwtl
sbb
subl
add
clc
or
call
mov
shll
mov
xchg
imul
and
pushl
inc
mov
mov
jbe
dec
subl
test
inc
in
jmp
or
cmp
jnp
or
leave
in
mov
adc
cmp
nop
mov
clc
into
clc
sbb
add
aam
cwtl
cmpsl
and
lcall
sbb
outsl
bound
sti
mov
out
mov
cmpsb
mov
cltd
mov
push
movsl
div
ret
insb
add
cmp
sti
incl
push
orb
nop
xor
jle
hlt
jecxz
pop
mov
sbb
movsl
aad
jg
in
dec
adc
mov
sbb
mov
xor
cmp
mov
jl
scas
xchg
test
rorl
xchg
mov
lds
cld
call
lcall
or
int3
cmp
dec
mov
sub
in
decl
ficoms
insb
dec
fistps
xchg
jp
xor
inc
jmp
dec
dec
ljmp
inc
rorl
adc
inc
inc
sub
arpl
loope
sub
pusha
mov
stos
push
hlt
add
push
mov
dec
mov
insb
xor
add
ja
jg
rolb
incb
into
cli
xchg
sub
xchg
dec
sub
cmc
ljmp
add
push
js
and
inc
inc
pushf
jo
jmp
jbe
jg
in
lldt
pop
push
repnz
sti
shrl
test
jmp
jmp
arpl
ss
jno
filds
jne
jg
int
adc
mov
add
ljmp
movsb
scas
jecxz
add
mov
popf
rcrb
inc
push
xor
cli
adc
std
adc
pop
mov
mov
xchg
insl
ficompl
decl
or
cmpsb
ror
pushf
lds
lods
lahf
and
sbbl
and
push
push
test
call
ds
or
pushl
mov
pop
fisttps
pop
in
mov
lret
fs
jg
hlt
cmc
jns
hlt
adc
inc
or
dec
pop
js
jg
enter
push
pop
nop
mov
inc
jnp
inc
std
cmp
sbb
pushl
fadd
subl
adc
inc
dec
aas
lahf
sub
jns
mov
push
sti
ja
jmp
mull
push
imul
mov
pushl
cwtl
fdivs
lea
and
adc
add
lcall
jno
pusha
call
xor
cli
popf
xchg
jp
arpl
jl
in
incl
mov
push
insb
out
sbb
sbb
in
pushl
in
imulb
shlb
push
sub
lcall
mov
and
cld
lcall
shl
pop
xor
negl
ljmp
inc
fdiv
push
and
in
adc
faddp
aaa
mov
movsb
xor
add
push
mov
out
clc
out
sub
aas
sar
add
mov
outsl
or
nop
mov
es
std
decl
pusha
push
push
adc
jbe
stos
jae
mov
jae
lea
xor
xchg
jle
psubsw
pushl
lret
rcrl
aaa
ret
test
xor
cmpsb
inc
push
inc
in
lcall
dec
dec
nop
sub
out
sbb
jne
decl
inc
decl
or
sub
xchg
retw
jg
jmp
in
add
in
mov
fstps
mov
cmp
pop
ljmp
pop
jns
xor
pop
lds
iret
sub
jg
cltd
into
in
shlb
sbb
xchg
lahf
xor
enter
in
mov
pop
xlat
jg
in
adc
push
imul
bnd
dec
push
mov
loopne
aam
shl
fcmovne
xchg
or
add
push
ret
das
int3
add
push
push
jb
call
mov
sahf
sub
pop
popa
imul
mov
icebp
inc
adc
push
jne
push
pop
inc
pop
jle
std
sar
ljmp
adc
cmp
mov
loop
add
fimuls
mov
jo
jmp
mov
fs
jae
rcl
ret
mov
push
pushf
xor
call
pop
arpl
or
lahf
mov
mov
add
or
mov
leave
outsl
out
mov
mov
inc
stos
or
jg
cld
incl
test
add
in
sbb
bound
jmp
inc
dec
pushf
adc
jno
addr16
test
cmp
xor
jnp
cltd
pop
sub
adc
cld
cmp
dec
sub
pushf
lods
mov
bound
loop
pop
rcrl
or
xchg
inc
push
pop
out
xor
lock
loopne
aam
outsb
popa
pop
pushl
std
outsl
push
mov
add
xchg
lods
ss
rolb
lea
popf
repz
ljmp
rol
push
add
adc
test
fiadds
outsl
into
push
or
push
push
insl
ss
mov
testb
imul
mov
cld
ljmp
mov
iret
imul
cmp
popa
daa
inc
mov
fsin
rcll
push
cmp
jg
popa
jo
cmp
fwait
pusha
fwait
push
stos
pop
adc
incl
adc
cmp
testb
in
dec
into
pop
sbb
call
cli
test
jmp
ret
xchg
jnp
jl
lods
insl
ljmp
dec
gs
push
fwait
jp
mov
icebp
lahf
movsb
int
and
mov
mov
lods
push
pusha
mov
and
jp
idiv
scas
push
cmp
and
mov
mov
call
mov
jmp
push
loop
das
shr
mov
call
std
fs
jecxz
stos
and
sub
fcoms
or
mov
mul
xchg
and
lds
mov
sub
shrb
pop
dec
dec
incl
fdivl
jae
lods
scas
push
mov
sar
test
and
test
aas
popf
adc
mov
repnz
and
decl
loop
sbb
int3
fsubrs
xor
cmp
stos
jge
mov
mov
and
push
in
sbb
push
cld
push
scas
cwtl
enter
mov
push
fdivs
xchg
sbb
add
cmp
mov
pinsrw
jno
mov
and
lcall
hlt
scas
arpl
add
mov
push
ret
inc
or
xchg
pop
fstl
adc
xor
xor
insl
lahf
sbb
fsubrl
lret
fcoms
adc
pop
ja
decl
pop
outsb
dec
mov
add
mov
scas
sbb
pushl
shlb
inc
push
mov
mov
push
pusha
nop
loopne
sarl
cs
loop
xorl
jmp
fisubl
push
mov
out
push
cli
sbb
and
ljmp
or
inc
cmp
sti
xchg
jl
dec
out
fldcw
mov
sub
divb
push
ljmp
or
fmull
push
outsb
pushf
repnz
cwtl
mov
xor
jle
ficompl
fsubrs
push
test
int
mov
fistpl
adc
xchg
adc
jge
jmp
xchg
mov
sti
mov
xacquire
and
call
pushf
popf
stos
loop
ficoms
cmpsl
incl
jae
out
call
loopne
rclb
addr16
jecxz
data16
js
lock
lcall
incl
sub
loope
aas
ja
lock
pushl
jle
sub
inc
fadd
xchg
jbe
lock
pop
subl
testl
pop
and
add
lds
xor
cmp
pop
rcl
xor
xchg
xchg
and
ljmp
mov
das
into
or
pop
jbe
mov
lods
sub
cmp
ret
insb
outsb
mov
fdivr
outsl
outsb
imul
push
and
test
decl
cmove
pushw
and
add
ja
leave
fistl
pop
mov
call
push
mov
fs
cmpl
mov
pop
bound
mov
push
jae
jmp
cli
add
adc
mov
pusha
movsb
mov
jmp
jns
frstor
xchg
or
inc
addl
push
sar
sub
and
mov
cmp
push
sub
mov
add
cmp
pushl
xor
xlat
ret
call
and
and
jae
adc
popf
push
xchg
movsl
pusha
jne
call
mov
sbb
popa
mov
loopne
lret
mov
sub
ja
popa
jmp
fwait
insb
clc
call
cmp
sbb
and
ljmp
fisubs
and
out
stos
pop
pushf
outsb
inc
xor
jg
nop
sbb
sbb
xchg
mov
fwait
call
adc
imulb
or
xchg
cmpsb
mov
iret
ret
repz
rcl
mov
mov
data16
push
ja
push
out
lret
mov
jb
rcrl
call
nop
cmp
jp
roll
adc
cld
les
test
push
in
pop
ljmp
aas
sub
inc
or
mov
cmp
mov
inc
sub
das
mov
inc
std
cmc
inc
int3
mov
mov
inc
call
adc
ficompl
jle
mov
ja
mov
cmp
xor
lds
and
call
sbb
lods
and
sub
pushf
ljmp
mov
sbb
decl
xchg
or
hlt
xorl
mull
mov
gs
lds
in
jae
lcall
outsb
inc
inc
ljmp
mov
xor
mov
jg
mov
pushf
lahf
je
aaa
add
out
cld
and
stos
cld
adc
and
loope
xchg
push
decl
inc
and
mov
add
fwait
ret
dec
mov
or
xchg
sbb
inc
jb
mov
fwait
inc
mov
jae
nop
fcoml
das
cli
jge
mov
gs
push
push
aas
gs
rcl
sub
mov
int
ss
cmp
stos
xlat
icebp
inc
pop
xor
jl
into
inc
lcall
ljmp
aas
adc
dec
sub
ret
movsl
pop
jl
int
repz
jg
adc
xlat
das
mov
les
mov
call
sbb
cs
add
xor
bound
aam
mov
mov
rclb
enter
out
push
stc
cmp
xor
cli
aam
mov
xor
decl
insb
in
inc
pop
std
int
shrb
stos
and
add
add
push
push
mov
push
das
or
shrb
popa
push
decl
xor
imul
insl
outsl
fs
sbb
cs
jne
inc
adc
cmp
std
xchg
or
adc
dec
cmp
ja
das
or
mov
in
mov
sub
lahf
stc
pop
int3
and
add
inc
pop
orb
in
lsl
or
or
jo
push
rclb
xorl
inc
add
add
loope
and
adc
push
and
inc
cmpsb
test
fldcw
adc
push
pop
xor
shlb
sahf
jbe
incl
nop
dec
leave
repz
popa
nop
dec
jle
adc
dec
inc
lds
leave
jb
add
cld
ljmp
xor
and
data16
add
js
inc
ficompl
insb
cs
push
and
add
aas
sub
add
roll
sub
incl
inc
jle
mov
shll
idiv
inc
jg
sub
cmp
jl
pop
ret
inc
andl
andl
xchg
sbb
loop
jle
adc
add
pushf
xor
xchg
sbb
sub
cmp
or
pushl
rclb
pop
or
dec
push
adc
int
mov
push
push
ret
jle
lea
mov
aaa
insb
iret
lret
fiadds
or
aas
or
mov
sbb
pop
pop
fildll
dec
outsl
outsl
jg
jge
jg
or
mov
pop
or
adc
or
pop
add
cs
pop
outsb
mov
sbb
cmpsb
lret
testb
decl
neg
fildll
inc
cmpl
icebp
jl
inc
adc
mov
pushf
add
fists
jo
scas
mov
adc
lock
lcall
and
arpl
ja
neg
fisttps
mov
or
mov
ret
mov
out
outsl
ss
lea
mov
mov
xchg
aas
mov
dec
je
sub
dec
inc
sbb
add
sub
ja
and
sbb
decl
adc
call
jmp
addr16
mov
push
insb
or
add
adc
int3
data16
jnp
cmovnp
xor
or
lcall
mov
add
cwtl
pop
mov
mov
push
mov
sub
shll
xorl
xor
mov
ljmp
dec
inc
das
add
and
adc
mov
sbb
and
pushl
jl
das
dec
shlb
or
or
push
push
lods
sbb
and
sbb
or
repnz
fiaddl
mov
call
and
cmp
je
push
lea
and
mov
sti
push
mov
xor
ret
mov
push
mov
lods
push
xchg
dec
mov
mov
incl
add
hlt
stos
sub
push
mov
mov
mov
jg
clc
push
sub
mov
xchg
mov
mov
or
or
decl
popa
adc
pop
leave
jg
frstor
arpl
dec
push
xor
shll
shlb
and
jmp
ret
ljmp
cmp
daa
mov
jecxz
mov
push
push
xchg
push
pop
pop
icebp
jg
or
mov
insl
mov
idiv
call
pop
cmp
add
dec
in
mov
or
adc
decl
test
insl
push
mov
push
adc
cmp
loope
int3
insb
adc
ret
jle
pop
push
push
pop
mov
adc
mov
lea
out
cltd
and
jecxz
push
data16
or
or
inc
sub
inc
push
and
sub
popf
mov
push
insl
mov
pop
adc
sub
add
jbe
cld
incl
popf
inc
push
in
jl
lock
in
push
stos
scas
dec
push
dec
out
fstpt
fcmovne
in
inc
add
cmp
mov
in
idivb
lea
lea
or
add
decb
shl
add
inc
push
data16
outsl
pop
mov
jle
or
adc
hlt
je
popf
sub
xchg
mov
mov
in
movsl
fisttps
sti
sbb
add
cmp
jb
sub
aas
sub
outsl
mov
mov
imul
sar
fildll
outsb
pop
std
jg
fisttpll
sbb
add
incl
rcrl
jb
push
lea
fstps
out
or
jbe
fcomip
decl
pop
fbld
or
sub
loope
test
inc
push
mov
out
popf
mov
pop
jb
sub
jmp
nop
sbb
or
push
sub
fnstcw
push
push
cld
or
mov
test
fidivrl
push
adc
or
lret
sbb
mov
inc
adc
pop
les
jp
sbb
repz
xorl
ret
cmp
rcrb
fnstcw
aam
mov
or
fnsave
push
aam
pushl
lea
pop
imul
push
lcall
mov
out
outsl
adc
ss
lcall
mov
push
xchg
pop
lods
fwait
cmp
and
outsl
je
sti
je
sbb
lcall
call
rol
push
aas
int3
pop
addr16
mov
jb
pop
aas
loopne
add
sbb
ljmp
xor
adc
fwait
push
sbb
mov
and
add
ljmp
push
daa
sbb
scas
iret
xor
clc
into
pop
xchg
mov
sahf
pop
test
out
mov
data16
push
gs
push
mov
sbb
out
clc
jecxz
fdivl
lock
aam
shrb
push
aaa
mov
insl
arpl
xor
push
mov
faddp
insb
adc
call
add
or
shll
mov
push
lods
push
jnp
testl
pop
aam
int3
ds
fwait
lods
sti
mov
dec
sbb
mov
push
adcl
rolb
mov
push
nop
leave
cmp
pusha
cmp
ret
adc
icebp
ret
clc
fldl
push
jg
lcall
std
ljmp
insb
in
push
push
push
push
faddl
call
scas
fs
inc
push
push
push
ret
sbb
push
neg
sbb
add
jge
dec
leave
pop
xchg
gs
test
or
adc
sbb
pop
insb
or
sub
scas
fistl
jmp
ljmp
cmp
je
movb
push
mov
orb
sub
fdivrp
jmp
ffree
not
push
add
pop
and
add
jo
mov
adc
sub
aam
in
lods
xchg
xchg
and
aad
cltd
push
cmp
or
sub
icebp
adc
decl
xor
out
cmp
sbb
add
or
pop
cld
pushf
lock
mov
mov
incl
add
cltd
xor
add
and
sahf
movsl
dec
push
jmp
jno
shr
mov
mov
ss
sub
mov
mov
xchg
mov
idiv
inc
or
lea
out
push
adc
add
mov
pop
fisttpll
cmp
pushl
jns
pop
jmp
dec
pop
and
jmp
pop
fisubrl
cmp
push
pop
cltd
shl
dec
clc
sbb
and
or
lahf
cmp
push
rep
jle,pn
ljmp
push
mov
cmp
out
xlat
mov
pop
pop
pop
jne
inc
xor
test
sahf
push
lock
xlat
mov
xor
push
xor
jg
jg
mov
nop
or
xchg
mov
sbb
mov
cltd
into
adc
adc
or
lcall
jmp
xchg
loopne
clc
movsl
and
xor
jbe
dec
aad
sarb
sbb
dec
pop
cli
jp
pop
dec
jp
push
movsb
cld
and
test
mov
ljmp
sbb
mov
imul
pop
add
pop
jbe
and
lea
aaa
mov
filds
ss
push
inc
xchg
dec
cmp
dec
cld
outsl
push
jb
decl
mov
mov
lea
sub
adc
mov
ja
shrb
lahf
push
jmp
xchg
xor
gs
cmp
call
adc
cmpl
in
push
sbb
popa
add
jne
inc
mov
dec
inc
cltd
or
lcall
pop
ds
adc
and
inc
es
dec
xchg
shl
lock
clc
push
adc
and
push
dec
sub
xchg
sbb
rorb
cld
lcall
cmp
dec
xchg
mov
pop
inc
out
es
enter
sahf
int3
mov
outsl
push
jne
push
push
test
insl
imul
push
les
xor
or
int3
loopne
ds
sarb
push
sbb
cmp
fsubrs
sbb
ljmp
and
mov
sub
inc
pop
jle
push
pop
cmp
ljmp
adc
xor
cmp
pop
cmp
push
call
xor
push
mov
insb
lock
push
lcall
push
push
jbe
daa
loope
xor
sub
or
mov
dec
inc
call
aaa
punpckhbw
push
fistpl
xchg
sbb
ljmp
fstp
insl
add
lods
mov
inc
push
cmp
sbb
decl
xor
cmp
pop
xchg
lcall
sub
idiv
inc
fdivrs
cmpb
or
inc
mov
or
cmp
mov
pop
sub
pushl
pop
aas
clc
jg
mov
sub
pop
push
repz
scas
xor
cs
adc
cmp
mov
jmp
push
out
inc
mov
sti
fwait
inc
repz
jl
lea
adc
shlb
add
out
cmp
add
xchg
pop
fbstp
cmp
jl
movsl
sbb
adc
mov
cmp
mov
jb
fisttpl
scas
or
push
das
js
mov
imul
push
cs
cmp
mov
incl
pop
inc
dec
lcall
add
mov
neg
stos
and
cmp
mov
std
movsb
icebp
incl
pop
clc
ja
pop
jp
into
push
adc
in
mov
cmpb
sub
adc
aas
mov
sub
ljmp
mov
lcall
adc
jns
loope
jbe
adc
test
call
ja
push
pop
lock
cmpb
pop
cmp
jmp
fdivrl
pusha
aas
cmp
cli
addb
std
or
inc
add
adc
jmp
jbe
push
push
push
cmc
ljmp
and
pop
mov
lods
loope
stos
pop
hlt
jg
jne
sub
dec
jbe
int
pop
cmp
adc
adc
inc
xchg
mov
adc
jne
testl
lock
fidivrs
test
shrl
in
ljmp
fwait
adc
add
push
int3
push
add
or
xor
dec
stc
mov
in
sar
lcall
push
pop
out
dec
cmpsl
mov
adc
pop
loopne
hlt
rcrb
add
adc
jg
cmp
xchg
aas
inc
jg
mov
cli
popf
add
mov
push
rcrb
movsb
hlt
fbld
repnz
jle
mov
cmp
fnstsw
xor
jmp
adc
and
popf
jmp
cld
jmp
sti
and
icebp
xchg
adc
cmpsb
pop
sbbl
subl
xchg
jb
scas
decl
push
sbb
pop
fs
mov
sub
lock
pop
push
add
shrl
in
lea
inc
xchg
mov
fnstcw
inc
repnz
sub
adc
incl
call
mov
inc
push
inc
push
fnstcw
xor
fcoml
push
arpl
push
scas
adcl
decl
xor
cmc
sub
dec
cmp
cmc
mov
shrl
cmp
dec
push
cld
pushl
inc
cmp
std
fcomp
adc
dec
jmp
mov
pop
and
jno
rorl
xchg
mov
adc
dec
add
ret
cmpb
inc
cmpb
jne
add
loop
fdivrs
pushl
xchg
push
insl
pop
nop
xor
mov
and
cmpsb
arpl
add
lcall
adc
dec
adc
or
xchg
mov
jge
jmp
jge
pushl
out
inc
dec
sbb
roll
fucomi
pop
mov
adc
sub
decl
dec
fbstp
mov
mov
leave
fdivr
jmp
inc
sbb
mov
push
mov
imul
sub
incl
adc
inc
dec
cmp
adc
lea
test
jns
jae
fldt
rclb
or
mov
or
add
mov
add
mov
push
push
mov
in
cwtl
mov
nop
add
or
ret
push
rcrb
outsl
xchg
jge
adcb
insl
mov
mov
sub
ds
inc
jb
push
adc
jns
or
popf
pop
cmp
sbb
sub
ret
pusha
pop
sbb
add
xchg
cmpsl
addr16
decl
call
xchg
in
add
fcomip
xorl
mov
jle
mov
mov
ljmp
pop
push
cmp
xchg
inc
jmp
mov
add
cmp
add
ja
std
push
mov
inc
push
or
add
add
inc
inc
lock
je
mov
jl
test
clc
dec
decl
mov
mov
ljmp
hlt
nop
mov
sti
enter
sbb
push
pop
dec
mov
fisttpl
imul
add
incl
inc
rcrb
pusha
xorb
or
dec
xor
inc
dec
jo
cmp
test
adc
cmp
incl
lock
rolb
jle
adc
stc
push
mov
ljmp
cs
decl
inc
call
mov
or
push
sbb
lcall
fldcw
scas
es
sbb
aaa
adc
jmp
xchg
int3
pop
push
shl
push
sub
icebp
lea
call
add
repz
and
fwait
or
add
mov
mov
mov
jg
out
mov
roll
or
loope
ss
add
fnstsw
mov
pop
cmp
scas
sub
mov
shlb
jle
push
add
subl
fmuls
incl
dec
enter
lea
lods
mov
pop
lods
sbb
fdivrp
call
xchg
or
clc
add
lods
repz
clc
imul
inc
std
out
cmp
rcrb
cmp
jg
and
pop
push
fisubrl
mov
add
mov
rcll
call
dec
add
mov
hlt
add
xlat
fcmovu
lock
sub
sub
and
sub
ljmp
lds
xchg
adc
jmp
lock
sbb
lea
inc
loop
add
lcall
jle
xor
add
mov
xor
neg
cli
into
inc
jle
mov
jle
decl
push
jl
std
push
stos
mov
les
ficomps
enter
push
dec
vmwrite
call
adc
jle
inc
xlat
mov
inc
icebp
xorl
add
inc
mov
subl
stos
jl
xchg
mov
mov
je
cmp
push
pop
xor
rolb
call
enter
adc
and
lods
lcall
sub
in
popa
push
pop
lods
into
inc
decb
or
mov
or
jg
addr16
inc
pop
sbb
sub
insb
into
lahf
loop
mov
in
je
rclb
pop
add
adc
xor
jg
sub
xchg
sub
adcl
jns
mov
mov
rclb
add
pop
popa
movb
lods
and
jg
pop
inc
aam
mov
faddl
fmull
push
jne
arpl
call
aam
out
clc
decl
das
push
mov
adc
decb
call
sti
movl
mov
lcall
ret
push
lds
or
or
pop
push
mov
xchg
push
dec
ljmp
adc
test
or
aad
adc
fcomi
mov
push
fs
add
je
cmc
cmp
adc
and
adc
mov
mov
inc
cld
ljmp
and
and
scas
pop
mov
xor
jg
push
add
add
inc
jo
adc
in
mov
roll
fildll
decl
jbe
xchg
cmp
ret
ja
jmp
push
iret
dec
and
ljmp
or
cmpsb
xor
or
in
lds
jmp
lea
cmp
inc
sbb
int3
pop
call
add
or
pop
fisttpll
movsl
inc
mov
and
sahf
add
add
jmp
mov
lcall
je
xchg
fwait
sbb
cli
push
dec
add
and
sbb
adc
je
cmc
fcmovbe
add
dec
xor
nopl
mov
pop
cmp
popa
movsl
cs
xor
push
cld
inc
fadds
insl
sarb
push
sbb
loope
cmp
inc
xchg
mov
inc
push
ljmp
push
mov
ss
add
aam
aad
push
push
fisubl
lcall
pop
adc
ljmp
call
push
push
ret
imul
push
test
and
push
push
out
jae
push
leave
pop
popa
mov
push
call
sbb
shlb
mov
pop
jl
test
fsubrs
push
lea
sahf
je
out
js
pop
call
pop
sub
cmp
push
push
or
mov
mov
ljmp
pop
mov
iret
mov
stc
ret
jecxz
or
mov
call
sarb
mov
xor
je
mov
cmc
add
mov
stc
mov
pop
mov
sub
loop
nop
shl
popf
mov
ja
fistpll
cwtl
push
aad
decl
xchg
shl
out
xor
push
mov
sar
jg
add
or
or
pop
push
mov
mov
hlt
push
scas
ret
stos
sahf
mov
call
cltd
sbb
sub
aas
xchg
cmp
mov
mov
cmpsb
aaa
stc
cmp
mov
adc
ljmp
sub
bswap
sub
fdivs
and
jle
xor
push
je
xchg
iret
sar
shlb
inc
es
cli
lcall
push
or
xor
adc
scas
cli
pushl
sub
and
adc
js
movsl
add
push
mov
add
and
cmc
inc
push
fnstenv
and
xor
std
ds
push
jg
mov
lock
sbb
jnp
dec
decl
or
hlt
inc
sahf
cltd
out
clc
sbb
mov
insl
push
push
fyl2xp1
pop
mov
imul
cmp
or
cs
loop
loope
mov
cld
mov
lock
inc
cmp
jne
pop
push
or
inc
pop
cmp
mov
aad
mov
ja
mov
jg
dec
cmp
add
lods
jl
add
adc
mov
lock
ds
addr16
cmp
pop
sbb
pop
add
inc
xchg
jo
int3
sbb
xchg
pop
or
xchg
sub
cmpsb
push
lock
jp
and
xchg
pop
adc
fbstp
test
mov
mov
movsb
mov
popa
inc
sahf
xor
scas
decl
push
mov
insl
andl
pop
mov
mov
push
pop
mov
call
lret
mov
movsw
jnp
movsl
imul
cli
shrb
pushl
cld
jle
adc
pushl
mov
mov
push
test
or
and
mov
repnz
jg
mov
mov
mov
inc
cmpsl
push
aad
sbb
in
inc
rcll
sbb
jg
je
mov
push
push
inc
add
clc
mov
add
sar
add
addr16
aam
mov
mov
adc
mov
mov
loop
inc
ret
pop
fcoms
and
rcr
shlb
das
mov
fsubrl
mov
les
jne
in
fcompl
jnp
les
jae
lcall
push
test
xchg
push
xchg
sub
xorb
dec
jo
jbe
mov
xor
jl
pusha
xor
or
test
push
andb
inc
clc
call
push
test
test
mov
pusha
xchg
call
rorb
xor
jo
ljmp
adc
stos
and
inc
lcall
jmp
mov
push
jge
add
test
jmp
int3
jg
mov
and
add
cmp
mov
inc
mov
and
adc
sbb
dec
stos
mov
jns
inc
or
popa
nop
inc
adc
decl
mov
cs
inc
add
dec
and
add
jge
add
xor
or
or
sti
or
jle
mov
or
outsl
mov
or
aaa
push
aaa
fidivrs
jg
pop
jge
pop
hlt
jle
mov
xor
mulb
jno
dec
cltd
jae
jb
imul
ljmp
ret
or
out
sbb
add
push
imul
ret
jmp
ret
cld
call
clc
pop
adc
xor
jmp
push
pop
incl
mov
lods
loopne
push
push
dec
push
es
dec
fisttpl
rcl
incl
or
mov
in
add
unpcklps
add
sub
ljmp
rolb
dec
adc
jne
ret
xchg
sbb
jbe
sbb
push
jle
adc
ja
mov
push
sub
xchg
ljmp
add
jecxz
aas
enter
dec
sbb
add
mov
or
jno
inc
ljmp
ja
mov
decl
push
call
inc
nop
movzwl
add
add
pop
xor
inc
adc
outsb
inc
or
cmp
or
test
jae
shll
dec
adc
fisttps
and
or
call
mov
mov
addb
pusha
lea
sub
sbb
outsl
mov
sub
inc
arpl
cmp
pop
lcall
xorb
push
push
pop
rclb
xor
repz
or
or
jnp
iret
mov
es
and
xor
or
jl
xchg
pop
jb
orb
sub
aas
jg
inc
scas
in
pop
mov
in
mov
sbb
pushf
call
and
sbb
cs
cmpb
je
or
mov
arpl
inc
test
sub
cmp
ja
out
cmpl
or
or
jg
lods
jo
or
pop
popw
mov
test
or
ret
sub
sub
mov
in
lock
pop
rclb
sub
hlt
dec
std
incl
mov
fucomi
jae
and
inc
icebp
ljmp
inc
xchg
fildll
shll
or
sub
repnz
sbb
sbb
incl
dec
push
sub
ja
ja
fisttpll
inc
data16
add
xchg
jle
dec
mov
je,pt
jle
aaa
cmp
je
jmp
push
inc
cmp
xor
jmp
pop
xor
adc
pushl
or
lods
mov
loopne
pop
adc
lea
lds
out
jp
xorb
int3
testb
inc
call
cld
mov
add
pop
addl
sbbl
cli
inc
cli
fimull
inc
mov
sbb
inc
std
ljmp
pop
rclb
fwait
add
leave
mov
orl
push
push
test
adc
aaa
mov
xchg
in
add
call
push
dec
clc
mov
fildl
out
sbb
cmp
test
mov
inc
outsb
call
mov
sar
jmp
adc
add
frstor
adc
mov
add
pop
pop
mov
ja
xor
jecxz
and
test
xor
outsb
in
jmp
scas
cli
pushl
sub
je
setno
sbb
push
sub
mov
incl
jnp
push
dec
clc
push
or
push
mov
jbe
mov
inc
call
sbb
cmpb
inc
outsb
push
sbb
decl
lret
enter
pop
imulb
jnp
and
aad
or
sub
mov
sub
mov
stos
push
testb
and
inc
std
ljmp
or
mov
or
fstp
and
push
and
fildll
push
jle
or
inc
pop
mov
mov
sub
outsl
cld
in
cli
sbb
sar
jg
outsb
rolb
movb
test
lret
cmp
das
stc
es
outsl
mov
mov
add
or
push
mov
dec
cld
jmp
test
lret
aas
push
push
jno
arpl
push
xor
pop
pop
or
fnstsw
jmp
xor
sub
stc
cmp
mov
add
cmp
dec
add
je
lock
rclb
cld
cltd
das
mov
xchg
mov
jge
btc
loop
xchg
outsl
mov
enter
stos
pop
push
adc
jo
cmp
movsl
cmp
gs
push
movsb
adc
test
inc
jnp
or
dec
mov
int3
inc
add
ljmp
mov
outsb
cmpsb
cwtl
aad
aam
mov
push
sub
jl
cmp
jae
xchg
sub
sub
aam
jl
incl
or
mov
ss
xchg
pushl
cld
or
mov
sahf
sbb
aaa
push
push
jnp
dec
mov
sbb
mov
sbb
dec
or
imul
sahf
mov
sti
pop
push
lods
xchg
lods
push
cld
mov
sar
lcall
dec
movzbl
fidivs
hlt
or
jns
xor
outsl
int
pop
outsb
add
popa
iret
movsl
adc
stos
jo
or
sub
sub
mov
and
cmp
in
rclb
xchg
xchg
cmp
pause
cmp
push
mov
decl
jae
incl
stos
mov
outsl
xchg
add
sbb
imul
ret
jg
fldln2
cs
negl
fstps
xor
test
incl
and
leave
or
sub
es
mov
xor
rorl
or
adc
lahf
jne
sbb
cmp
push
sbb
pusha
jl
mov
mov
lcall
mov
push
jl
push
mov
pop
lcall
mov
lcall
gs
mov
add
inc
pop
push
scas
pop
popa
pop
push
lcall
adc
ror
sarl
cmp
push
lcall
test
das
dec
mov
mov
jmp
mov
and
sbb
cltd
jp
inc
or
xorb
xchg
push
in
xchg
pop
cmp
push
pop
loope
cmp
push
adc
fisubrl
ret
or
shrb
mov
or
dec
js
orl
pushl
cld
add
cmpsb
add
sahf
pushf
and
cmp
xor
incl
icebp
nop
xor
ss
cli
rcrl
inc
pusha
or
decl
xor
fwait
push
xchg
sub
aaa
cld
cmpsb
mov
sahf
add
inc
mov
push
decl
clc
adc
jg
inc
push
xor
add
decl
jo
push
lock
and
ljmp
inc
jo
jnp
pushl
std
incl
jl
xchg
lods
out
or
mov
testl
mov
dec
sbb
push
push
icebp
inc
cltd
mov
xchg
lods
cmp
or
adc
dec
les
incl
cld
sbb
js
push
pop
clc
sbb
cmp
jbe
mov
stos
fsubs
pop
ljmp
cmp
pop
mov
icebp
pushl
fdivrs
xor
sub
mov
or
incl
dec
fcomps
fldenv
mov
ljmp
xchg
cs
add
test
mov
xor
call
xchg
out
push
lea
stc
lock
mov
je
and
mov
mov
push
mov
sbb
cld
push
mov
test
in
out
lods
clc
imul
pushf
add
cmp
je
add
jmp
les
mov
mov
mov
jbe
pop
or
pop
push
inc
daa
add
cmp
fadds
sub
add
lock
or
mov
scas
mov
jae
jo
test
fdivr
ljmp
lods
stos
cmpsl
fildl
aas
jbe
test
push
dec
hlt
push
cmpsl
mov
cli
jne
cmp
push
std
push
std
dec
jbe
xor
jo
lret
dec
sets
cld
outsb
std
std
jb
jmp
jg
and
sar
cltd
scas
sub
mov
sahf
jb
add
insl
ds
or
hlt
clc
js
addl
jns
push
bound
lcall
mov
testb
or
push
adc
jle
mov
cmpb
test
pop
push
mov
out
stc
push
in
jg
lcall
pop
sub
cmp
jl
add
inc
or
testl
or
push
ja
pushl
xchg
push
jnp
jmp
rorl
pop
or
je
test
cmp
sub
jp
xor
fisubrl
call
and
test
or
push
fwait
sub
out
cmpsb
test
pop
fdivs
push
add
sbb
pushl
xor
cmp
adc
out
and
and
sbb
cltd
nop
imul
sub
lcall
mov
sbb
mov
xor
dec
add
call
add
add
sbb
pusha
mov
ret
push
xorb
xor
push
decl
jl
adc
outsb
and
add
sti
loop
inc
loope
fnstcw
or
jg
mov
and
adcb
pushl
sub
imul
or
mov
pop
inc
cmp
pop
xor
out
sbb
decl
sbb
jge
push
pop
pop
lea
loope
je
xchg
pushfw
incl
jb
mov
add
icebp
pop
mov
rorb
mov
add
incl
inc
pop
dec
add
ret
clc
adc
cmp
fmuls
rcll
sbb
inc
add
or
lcall
adc
xchg
jl
push
sbb
mov
ljmp
outsl
sub
mov
loop
rcll
aaa
nop
ret
sub
ljmp
cmp
in
rorl
addr16
fldcw
mov
push
in
or
jg
call
add
mov
pushf
das
aaa
movsb
cmp
pop
jmp
lret
fiadds
addr16
pushl
adc
pop
fstps
push
fldcw
push
push
mov
push
or
mov
incl
jle
pop
xor
xchg
cmp
dec
jns
jmp
push
mov
decl
add
stos
mov
mov
pop
pop
fs
idivb
pop
push
fs
fistpll
aaa
imull
push
pop
pop
dec
dec
mov
mov
nop
or
or
ljmp
pushl
dec
mov
js
sar
add
jmp
push
push
jg
sbb
cmp
pop
jmp
fsubs
sub
mov
and
add
pop
jnp
fisubrl
cs
push
scas
inc
sub
aaa
addr16
add
orb
xchg
inc
addb
adc
fildll
or
add
rol
pop
adc
icebp
pop
cmp
add
dec
pop
mov
inc
push
add
out
add
xchg
ret
inc
incl
js
pop
repz
scas
pop
xlat
sub
cmp
enter
push
incl
aas
pop
dec
xor
inc
aaa
mov
es
jle
add
decl
cmp
dec
cmc
in
mov
clc
jg
scas
sbb
std
enter
scas
sub
fiaddl
and
or
mov
insb
pop
sbb
clc
add
out
lcall
sbb
lock
popf
rclb
test
add
pushl
xchg
xchg
push
push
push
dec
bound
aam
pop
mov
jp
or
shrl
or
pop
lea
loopne
sub
sbb
and
insl
incl
repnz
cld
add
out
or
jae
adc
inc
add
xchg
xchg
xchg
mov
pop
cwtl
cmpsb
psubb
mov
faddl
add
sbb
inc
in
inc
hlt
adc
jg
jmp
cli
mov
xchg
jb
fcompl
inc
mov
pushl
std
mov
aam
jmp
fmuls
adc
sub
add
shl
aaa
mov
insl
test
in
push
pop
xor
or
pop
decl
xor
icebp
jmp
push
mov
pop
xchg
inc
add
xor
push
inc
pushl
cld
push
popa
nop
movsb
mov
inc
mov
aaa
rclb
leave
xlat
mov
xor
inc
inc
dec
jg
addl
push
mov
xor
divl
mov
push
fs
test
inc
clc
xor
aas
and
pop
mov
mov
sbb
ja
clc
jns
pop
mov
decb
pushl
js
push
adc
cmp
jl
add
mov
jae
jge
adc
fsubrl
cmp
dec
sbb
ds
sbb
fcoms
jno
int3
mov
gs
cld
dec
lds
in
jl
ljmp
ljmp
fimuls
test
sbb
lret
insl
add
daa
cmc
push
popf
in
repnz
clc
lcall
cmp
mov
xchg
sarb
incl
cmp
je
test
mov
add
cli
hlt
cli
or
cmp
mov
jg
sbb
mov
mov
sbb
ret
dec
pusha
sub
mov
sbb
insb
lea
sbb
xor
out
cwtl
bound
mov
fidivl
add
ret
jg
cmpsl
sub
mov
sub
in
fistl
sub
movsb
pop
movsb
jbe
faddl
xchg
mov
push
sarb
xchg
ss
fcoml
push
fists
cmp
mov
adc
pop
add
or
mov
lods
cld
dec
loop
aaa
std
pop
mov
push
mov
mov
jnp
out
add
icebp
dec
sub
fildll
inc
xchg
and
aam
lahf
mov
mov
jg
faddl
add
push
inc
imul
adc
scas
push
or
sbb
call
into
push
xor
mov
ss
fmul
fs
frstor
pop
aam
in
mov
fsubl
fs
jle
in
inc
fiaddl
popa
push
les
fisttpl
scas
lock
cmpl
hlt
add
sbb
fisubrl
sbbl
nop
add
pop
imul
adc
and
incl
out
stos
jns
pop
jae
adc
pop
push
cmp
jp
push
mov
ljmp
push
scas
sbb
jg
les
sbb
cmpb
sbb
mov
sbb
push
mov
int3
mov
cmp
jmp
test
mov
mov
inc
shll
push
xor
inc
push
add
fstpl
lea
into
cmp
in
fs
in
dec
std
jg
push
clc
jl
mov
sbbl
push
lcall
cs
inc
mov
ficoml
jns
mov
push
dec
lea
int
mov
jl
dec
or
in
notb
lods
adc
inc
inc
and
push
dec
or
jbe
clc
mov
daa
push
or
inc
std
decl
xor
ret
mov
data16
dec
fmull
jg
mov
mov
add
inc
popa
push
mov
jg
imul
lock
xchg
in
into
adc
inc
lcall
leave
xor
push
mov
jl
push
push
std
lcall
dec
mov
je
iret
jl
pop
inc
pop
leave
pop
test
mov
cltd
gs
aad
sbbb
mov
add
loopne
jl
test
add
faddl
shrb
mov
xchg
mov
divb
imul
mov
or
outsb
aam
test
or
xor
decl
insl
mov
loop
loop
push
add
mov
push
dec
push
add
inc
pop
inc
ljmp
cmp
test
pusha
xor
insl
or
jmp
aas
shlb
insb
cs
ljmp
add
fwait
jae
mov
or
js
dec
mov
clc
das
in
imul
jge
jp
popa
push
jmp
inc
xchg
leave
test
sub
addr16
in
inc
push
fsubr
mov
inc
inc
jns
mov
mov
sub
filds
add
in
stos
sbb
cmp
mov
cmp
cmp
lods
mov
jmp
pop
push
xchg
je
dec
outsl
ljmp
mov
add
jge
mov
or
enter
incl
cmp
sbb
sbb
cmp
push
dec
sub
mov
pop
dec
movsb
in
sub
ljmp
in
lea
dec
shlb
dec
in
or
mov
mov
andb
add
sbb
push
incl
dec
push
dec
add
sub
xor
push
lds
or
das
les
cltd
insb
adc
lcall
int3
add
ret
mov
fidivl
js
nop
pop
rorb
out
loop
push
imul
das
and
in
pminsw
and
in
add
add
ljmp
test
pop
xchg
shr
dec
in
pop
sub
enter
mov
lcall
inc
jle
insb
inc
cmpsb
fwait
call
lcall
push
mov
lock
xor
lcall
sbb
mov
cmpsb
incl
push
jecxz
test
fmuls
adc
push
jp
lock
call
dec
inc
mov
popa
ds
inc
pop
push
jne
sbb
and
push
iret
stc
clc
pop
dec
aad
mov
pop
mov
push
lcall
and
aas
das
jne
mov
popa
fisubs
incl
push
jg
sbb
mov
jmp
add
adc
pop
or
or
xor
arpl
call
std
cmpb
or
or
testl
inc
notl
icebp
std
adc
incl
std
stos
jmp
inc
test
rclb
sub
inc
add
jns
add
push
push
jo
divb
xor
fsubs
sti
cli
lret
loope
add
in
ljmp
sbb
dec
shll
lock
and
add
push
or
or
decb
sti
xchg
mov
mov
call
push
movsb
push
or
test
pop
or
and
dec
push
pop
pop
or
pop
ljmp
cmp
add
jle
lea
sbb
je
shrl
call
sbb
icebp
xorb
movsl
cmc
push
enter
or
xor
sti
push
clc
pop
ss
hlt
jmp
inc
or
xbegin
leave
add
lock
jmp
and
sub
cmc
sbb
in
pushf
das
repz
fwait
and
xchg
or
add
icebp
or
mov
fiadds
std
imul
fs
out
push
xchg
push
aaa
stos
push
negb
fisttps
sub
scas
push
je
jmp
mov
inc
jno
lret
add
jp
push
sti
addl
orb
fstps
sub
js
xchg
pop
cld
pop
add
fs
add
push
or
xchg
mov
pop
xlat
push
iret
push
pop
push
sbb
cld
aaa
inc
jne
mov
jle
mov
jae
add
mov
mov
jp
mov
clc
daa
hlt
sti
add
lret
inc
cmp
sti
in
jg
mov
and
addr16
inc
pop
inc
test
fsubs
push
ret
fwait
insl
xor
hlt
idivl
adc
jg
inc
push
and
xchg
insl
in
fisubl
testb
jl
jae
rcrl
push
lods
add
sub
test
aas
fiadds
cmp
fdivr
mov
rol
mov
add
jmp
in
and
cld
and
mov
lea
clc
dec
dec
cli
mov
xchg
push
xor
incl
push
and
pop
sbb
gs
ret
mov
adc
pushl
out
nop
mov
test
push
mov
decl
ja
out
dec
or
cmp
dec
sbb
dec
testl
icebp
incl
and
inc
cmp
add
mov
cmpsb
fsubs
inc
jl
sub
imul
push
mov
call
cmp
or
ja
icebp
nop
fisttps
pop
add
daa
pop
add
fcompl
push
or
sar
mov
cmp
cmp
mov
jl
push
adc
adc
jg
nop
ret
dec
mov
inc
mov
in
xor
in
add
mov
mov
dec
mov
scas
inc
ss
sbb
sbb
andl
mov
pusha
cltd
mov
inc
add
pcmpgtb
mov
add
sti
in
insb
call
sbb
and
in
ffreep
cmpsl
cwtl
adc
push
imul
cli
add
cld
sbb
push
sbb
mov
aaa
sbb
leave
cmp
inc
loopne
adc
clc
decb
push
inc
dec
jmp
fs
cmc
ljmp
pushl
sbb
iret
mov
cmpsb
idivb
pop
dec
adc
jns
lahf
mov
fildl
jmp
pop
fmull
mov
das
fstps
inc
xchg
cmp
jl
mov
call
mov
jb
dec
pusha
pushf
fldenv
in
lret
jge
dec
cmp
jge
push
cld
ret
pop
ljmp
pop
push
and
xchg
add
dec
fwait
sbb
lock
add
jmp
call
jle
xor
movsl
xor
add
pop
inc
in
dec
in
in
pop
pop
out
cmpsb
mov
push
add
ljmp
xor
inc
mov
pushl
fcmovnu
xchg
push
sbb
inc
mov
std
sub
add
lahf
sar
ljmp
stos
fnstsw
and
js
or
sub
and
mov
push
lcall
pushf
mov
inc
rorl
ljmp
pop
cmp
cmp
push
int3
in
push
std
fidivl
push
mov
pushl
mov
fsub
jp
mov
mov
mov
nop
and
sti
movsb
adc
sbb
loopne
lcall
movsl
sarb
add
cli
push
sbb
clc
mov
and
call
insl
ret
adc
ss
out
mov
stos
or
stos
dec
ljmp
scas
cli
scas
mov
loopne
rorl
insb
push
rclb
jae
aaa
adc
inc
addb
sbbl
lcall
mov
inc
mov
cmp
call
call
fs
mov
mov
dec
mov
sbb
xchg
inc
es
and
jl
dec
dec
mov
rcl
mov
incl
jge
cmp
sti
mov
push
shl
sub
jmp
adc
cmp
sbb
andl
push
or
mov
decl
inc
loop
mov
and
or
jo
mov
push
xchg
add
arpl
pusha
sbb
imull
lods
insb
das
and
ljmp
push
cmp
push
lods
and
adc
inc
sarl
xor
daa
lret
ud0
incl
jl
adc
mov
pop
jb
xchg
cwtl
inc
cmp
push
fists
jmp
mov
and
fbstp
or
jl
cmp
pop
pop
test
cmp
pop
cwtl
loope
fs
mov
loope
in
lods
add
pop
and
xorl
adc
movsb
jnp
jl
sar
dec
pop
or
mov
enter
int3
frstor
add
into
inc
or
dec
pushf
mov
shll
orb
int
pushl
xor
xchg
cltd
pop
pop
lods
add
loop
jge
ret
cmpsb
movsl
cs
call
fs
sbb
ljmp
mov
lea
sub
jl
arpl
insb
stos
xor
imul
or
test
mov
mov
and
adc
or
pusha
xchg
dec
jmp
jl
lock
push
bswap
aaa
test
mov
test
dec
lcall
cmpsb
in
pop
cmp
ret
enter
aam
mov
out
jmp
repnz
fiadds
adc
insb
fisubs
mov
js
test
scas
mov
dec
mov
adc
or
mov
imul
xor
add
setns
push
push
enter
loope
test
test
push
pop
cld
xchg
loope
cli
nop
inc
inc
movsb
fbstp
rcrb
enter
shll
fmull
push
in
sbb
in
cmp
jo
sar
add
xchg
pop
int3
fcomps
pop
add
cmpsb
movsb
cmp
and
mov
jg
inc
pop
inc
dec
fs
sub
shlb
test
dec
sbb
fstps
nop
in
incl
out
aas
mov
jns
xor
adc
xchg
xor
popa
lahf
sub
fists
jnp
jg
decl
sub
mov
and
negb
xor
lcall
pusha
mov
stc
mov
jbe
ljmp
push
add
and
hlt
test
fcomip
cmpsb
scas
ss
jo
rcr
cs
pop
aas
pop
cli
pushl
adc
out
pusha
adcl
lods
push
cltd
fstpt
mov
decl
push
fbstp
mov
aam
sarb
and
push
and
sbb
movsl
cmp
jl
in
and
pushf
cmpsb
add
pop
push
add
int
and
gs
pop
inc
fists
push
pop
inc
pop
repnz
fdivrs
xor
xlat
push
test
sbb
stos
xchg
push
pop
pop
pop
push
jbe
push
call
es
push
lods
add
or
cld
or
cwtl
dec
andl
in
pop
xor
xchg
lock
call
add
xorb
int
arpl
mov
xchg
cmc
mov
in
loop
mov
fisubl
leave
aas
adc
mov
lock
ja
decb
and
pop
fcomps
add
sub
test
mov
add
hlt
and
push
cmp
or
pop
ja
add
push
mov
mov
cli
push
jle
addsubps
jge
lea
xor
add
or
inc
mov
push
dec
decl
ja
outsl
jmp
pushf
push
insb
inc
sbb
jg
inc
nop
mov
aas
lea
push
push
mov
add
pushl
hlt
sbb
sbbb
cmp
and
jmp
or
enter
mov
add
push
notb
lea
test
mov
movsl
push
inc
jmp
xor
dec
insl
dec
incl
dec
adc
fimull
adc
sbb
push
je
cmpsl
mov
adc
cs
fstpt
fs
add
pop
pop
rolb
das
icebp
dec
or
xor
push
mov
jnp
rclb
sbb
dec
inc
movsl
cmp
fsubl
popa
adc
pop
xor
in
adc
je
add
jg
lcall
rcll
dec
fists
hlt
in
pop
incl
insb
sbb
ds
mov
dec
push
shlb
test
adc
and
pop
ljmp
sarb
add
je
popa
test
push
jne
xchg
inc
or
clc
incl
xchg
xchg
mov
stos
and
call
sub
ret
add
xchg
pop
jo
incl
fsubs
push
dec
inc
push
push
and
sub
pushl
cld
incl
shlb
push
or
fldcw
push
pop
popa
enter
jg
push
adc
sbb
mov
sub
push
mov
push
and
inc
adc
hlt
call
movsb
push
ret
lds
mov
fsubrl
hlt
and
call
or
xchg
mov
arpl
int
mov
lock
stos
into
inc
sbb
mov
ljmp
imul
mov
rcll
pop
ficoms
add
dec
es
idiv
jne
mov
call
jo
test
adcb
ret
or
imul
push
out
push
loopne
jg
mov
lcall
lcall
or
cmp
cld
ja
jmp
jl
cmp
add
mov
insb
sbb
mov
add
dec
insb
push
daa
popa
lods
ficoml
xor
xchg
inc
lock
sahf
arpl
adc
decl
hlt
icebp
jl
xorb
in
scas
es
sti
pop
push
or
add
addr16
jl
or
sub
or
enter
push
inc
cli
jp
cmpsl
out
ljmp
mov
popf
fs
jl
xor
xchg
sti
mov
or
inc
xchg
movsl
xlat
insb
insb
jl
jbe
and
pushf
int
sahf
sbb
push
out
add
jmp
push
xor
sbb
adc
in
sub
jmp
nop
add
pop
stc
jl
or
ljmp
jo
dec
adc
sbb
inc
popf
pop
mov
xchg
inc
mov
add
incl
push
data16
pushf
shll
cs
mov
jmp
or
sarb
lret
cs
push
test
dec
ss
loopne
jmp
jb
push
push
and
out
mov
dec
dec
mov
push
mov
xchg
pop
inc
mov
or
incl
imul
xchg
test
sbbb
dec
mov
lods
pop
stc
fidivs
pop
lock
pushl
adc
inc
push
mov
es
jg
test
push
lret
jbe
rol
sti
and
mov
inc
dec
aam
mov
pushl
push
stos
adc
adc
mov
inc
out
xlat
xor
andb
stos
push
inc
or
or
outsb
xor
es
sbb
pop
cld
add
xchg
fildl
pop
pop
pop
std
and
call
lcall
imul
mov
inc
xor
lcall
fdivrp
fisttps
add
popf
cmp
adc
and
cmp
cld
adc
mov
aaa
cmp
push
add
pusha
into
xor
je
cmp
push
mov
pop
into
and
adc
dec
mov
mov
jo
lds
dec
dec
mov
rcr
mov
push
dec
pop
add
xlat
and
incl
jmp
bound
pop
inc
nop
into
pop
jl
xchg
xor
sbb
sub
mov
jb
pop
incl
xor
aam
insb
lahf
jns
cmc
ljmp
ss
push
and
jnp
jl
jmp
jl
pop
or
add
insl
inc
push
rcrl
clc
mov
push
cmc
push
scas
add
inc
pushf
call
int3
mov
adcb
push
addr16
push
jnp
call
inc
addr16
scas
and
push
mov
sbb
adc
push
cltd
pop
out
pop
jl
cmp
lds
inc
or
cmp
test
push
mov
aaa
dec
mov
insb
call
inc
jno
dec
mov
sbb
sbb
add
test
les
pop
arpl
arpl
and
xchg
repz
fists
cmpsl
popa
lcall
lcall
adc
pop
aad
ret
into
or
idiv
jg
mov
lcall
adc
movsb
xchg
xchg
jle
pop
adc
adc
fistpl
adc
add
dec
cmp
push
add
js
mov
call
ljmp
xor
rclb
xchg
jp
icebp
jg
adc
enter
mov
pop
lods
and
mov
outsl
pusha
or
rcll
sbb
pop
popa
ja
mov
mov
and
fimull
push
jmp
add
jne
add
jmp
fdivrs
and
fs
adc
push
arpl
repnz
repnz
jmp
add
jmp
push
or
scas
cwtl
add
push
rolb
sub
out
in
push
mov
icebp
and
cmpsb
jge
rep
push
adc
xlat
add
std
dec
inc
pop
adc
jnp
inc
loopne
push
dec
jne
lcall
inc
imul
incl
dec
mov
inc
push
incb
push
mov
ret
mov
pop
or
popa
add
pop
js
sub
shrb
imul
ljmp
or
adc
popa
push
push
mov
pop
pop
mov
and
rorl
sbb
xchg
ja
sbb
and
jge
pop
cmc
lcall
mov
add
sbb
imul
pop
fdiv
pop
call
daa
push
sbbb
pop
cld
stos
cmp
or
inc
pop
cmp
adc
loopne
mov
inc
or
lcall
inc
or
pop
push
popa
hlt
xchg
test
ret
sub
sbb
mov
pushl
rolb
lcall
pusha
lock
jne
daa
loope
je
dec
cld
lcall
ja
jne
addr16
outsl
repnz
lock
nop
fimull
add
dec
mulps
call
mov
and
lret
movsb
movsl
push
stos
aas
les
pop
adc
adc
mov
enter
cs
decl
test
mov
out
pop
xchg
hlt
sub
xor
bound
out
mov
xor
popa
int
adc
call
add
pop
add
adc
push
jne
mov
dec
aas
pusha
cmp
xchg
mov
pushl
adc
and
inc
shlb
push
insl
jg
add
adc
inc
ret
push
push
mov
mov
mov
out
or
pop
inc
inc
xchg
pushl
cld
adc
and
dec
hlt
add
xor
xchg
mov
loopne
es
ljmp
lcall
xor
in
repnz
sbb
add
or
add
xchg
sbbb
jb
dec
int3
or
loope
cmp
dec
js
test
push
jmp
push
jmp
inc
flds
out
or
insb
xchg
mov
rolb
ljmp
test
cli
enter
shr
fdivl
jg
popa
mov
je
push
into
push
das
sub
fsubr
icebp
dec
incl
jmp
mov
mov
rorb
bound
loope
push
inc
insl
orb
cwtl
add
pop
out
arpl
cmp
push
lar
cmpsl
sbb
dec
dec
dec
cmp
push
jecxz
add
dec
adc
pop
loopne
mov
das
add
ret
mov
xor
inc
jmp
mov
adc
xor
loope
popa
in
inc
add
pop
aam
jmp
lock
add
decb
mov
lods
xor
pushf
inc
or
insb
fcomip
pushl
jl
jmp
fistl
shrl
rolb
dec
pop
adc
sbb
mov
enter
movb
inc
shr
mov
sbb
and
push
and
add
jle
mov
mov
or
daa
sahf
clc
decl
add
xchg
add
insb
pop
divb
int3
mov
and
sbb
aam
jns
dec
orb
sbb
and
sbbl
push
fsts
xlat
pushf
inc
cmp
inc
scas
in
ljmp
pop
adc
and
call
sub
pop
shrl
call
rcrb
pop
inc
mov
xor
sbb
sbb
movsb
sbb
sub
jmp
subl
in
nop
xor
inc
add
adc
or
cltd
in
push
jg
and
call
pop
and
cmpsb
push
jmp
incl
jmp
push
mov
and
adc
lret
mov
lret
sbb
and
sub
dec
lahf
or
cmp
pop
or
mov
or
xchg
or
ja
cmp
jno
jo
clc
decl
sub
push
or
cmc
cmp
leave
or
in
pop
adc
fdivr
sub
decl
call
xor
test
sbb
icebp
je
movsb
sbb
sbb
test
ss
add
lea
adc
int3
and
sub
xor
into
outsl
mov
incl
xor
add
mov
and
lcall
add
decl
push
dec
cmp
pop
cmp
mov
xchg
test
adc
jb
shrb
imul
lcall
push
sub
adc
jle
push
sub
add
add
lahf
pop
int
push
loop
jb
sar
jg
push
jns
js
std
or
in
mov
lea
mov
dec
jo
hlt
pop
pushl
inc
dec
adcb
adc
jno
jo
stos
nop
jo
dec
in
fdiv
incl
fs
mulb
sub
pop
insl
movsb
sti
add
push
cmc
pushl
addl
push
in
insb
inc
rcrb
jo
js
icebp
sahf
mov
rcll
bound
jmp
add
mov
mov
push
xor
fisubs
push
pop
mov
and
stc
add
clc
dec
ljmp
cmp
jbe
or
mov
jmp
lock
loop
jmp
mov
dec
adc
loopne
push
or
scas
cli
mov
popa
push
test
hlt
jo
std
ds
lea
jmp
test
add
dec
lock
loop
in
dec
push
push
push
cmp
mov
sbb
cmp
js
add
dec
or
inc
xor
add
xchg
out
mov
adc
or
adc
sub
inc
mov
mov
and
sti
push
sub
mov
xor
adc
test
xorl
adc
test
mov
out
mov
inc
sub
insb
push
xor
ljmp
push
fs
aaa
not
insb
pop
xchg
stos
mov
mov
insb
ljmp
xor
test
dec
mov
cmp
jg
jmp
mov
mov
mov
lea
push
jnp
jo
ljmp
mov
cli
ljmp
push
cmp
nop
nop
add
xchg
inc
pop
je
sti
incl
outsb
scas
sub
cmpb
push
cmp
std
ss
dec
je
addb
add
jle
and
icebp
lcall
or
dec
into
push
pop
mov
dec
movsb
and
decl
sbb
add
or
xchg
rclb
enter
loopne
jp
or
xor
pushl
or
in
mov
add
cmp
je
sub
add
add
out
fisubrs
xchg
sub
add
pop
push
xor
add
pop
or
repz
jp
xchg
test
xchg
mov
cmpsl
test
add
adc
lcall
xchg
fnstenv
push
mov
push
push
das
xorb
mov
push
adc
std
addr16
pop
hlt
mov
or
das
mov
add
shl
add
sarb
push
cmp
in
mov
cmpsl
mov
add
mov
sub
cld
lcall
decl
dec
pop
sbb
or
add
dec
inc
sbb
stos
pop
je
jp
adc
add
jo
or
dec
fildl
jge
faddl
incl
cmp
mov
xor
pop
dec
outsl
pop
sub
cwtl
outsb
neg
and
push
pop
inc
call
clc
dec
jb
inc
push
ja
and
pop
dec
jbe
mov
mov
call
adc
or
es
ds
xor
rolb
daa
jge
stos
mov
inc
ljmp
je
or
mov
out
test
imul
jge
mov
or
fldl
fwait
sub
imul
icebp
xchg
adc
ljmp
mov
sbb
push
ss
out
rorb
pop
add
xor
orb
and
pop
sub
addl
sbb
pop
pop
test
jg
add
shrb
insb
in
stos
dec
xchg
call
mov
mov
pop
fwait
and
mov
fs
lcall
cld
call
sub
leave
enter
mov
sbb
lcall
dec
or
in
pop
mov
testb
mov
call
pop
shlb
cmp
hlt
aad
jo
popa
push
push
push
jb
xchg
decl
in
je
cmp
test
mov
inc
add
cmp
mov
rorb
call
mov
xchg
mov
roll
inc
aaa
jmp
xchg
out
adc
adc
loope
jle
lcall
test
mov
cwtl
and
xor
jns
in
push
je
je
in
or
test
lcall
and
or
and
adc
adc
sub
loopne
das
inc
push
pop
pop
js
lcall
pusha
adc
xor
mov
mov
mov
inc
push
sub
pusha
mov
sbb
ficompl
cmp
ja
push
jecxz
lcall
in
push
xchg
mov
add
pop
push
pop
mov
pushf
mov
add
adc
das
cmpb
mov
add
sbb
mov
push
scas
das
shrb
gs
push
cmpsl
test
out
pusha
jg
adcl
pop
push
insb
add
or
xchg
lcall
loopne
test
ret
sbb
lods
and
jo
icebp
push
add
js
adc
dec
in
call
cmp
push
mov
mov
pop
sbb
cmp
inc
test
sar
decl
jns
test
popa
or
adc
jno
cs
imul
adc
mov
lea
push
loope
decl
mov
xchg
cld
push
push
popa
mov
sbb
sbb
sub
clc
decl
adc
test
xor
dec
mov
in
push
movsb
and
inc
cmp
jbe
or
ljmp
jbe
pop
orb
push
jnp
and
fcoms
or
adc
add
cwtl
mov
mov
cmp
roll
cmp
call
pop
cltd
or
mov
test
cltd
inc
sbb
sub
xchg
fcomip
sub
sbb
mov
push
jne
add
sti
aaa
std
decl
pop
movsl
enter
inc
aam
jb
or
fdivs
or
cmc
aas
orb
leave
dec
lahf
dec
or
pop
sbb
popw
adc
out
dec
aam
push
push
push
fisttpll
hlt
add
and
pop
inc
add
cmp
lods
in
or
jg
jmp
adc
jo
add
test
and
mov
les
xor
mov
fdivs
xchg
stos
decl
pop
repnz
pop
fdivrs
push
push
ret
ret
mov
jg
adc
repnz
push
inc
in
inc
cwtl
xor
loopne
popf
pop
dec
mov
sub
adc
add
inc
add
enter
add
mov
mov
push
cmp
incl
lret
and
or
inc
lock
add
xor
sar
decl
dec
and
int3
or
insb
repz
sbb
ds
or
pusha
xor
or
rcr
jne
pushl
inc
les
add
jo
das
push
add
mov
imul
insb
in
imul
fistpll
add
insl
sbb
stc
jb
ficoml
in
pushf
add
sti
mov
inc
add
jge
sub
mov
jb
lcall
push
inc
inc
push
push
ljmp
or
out
call
add
pushl
pop
push
jnp
xor
push
lock
jg
insb
jmp
lods
push
jo
dec
inc
in
mov
push
out
jbe
push
and
and
out
sbb
push
inc
or
xor
inc
xchg
cmpb
xor
mov
cwtl
lock
mov
push
inc
jmp
in
cmpsb
and
jnp
fldenv
in
cmp
mov
push
lods
push
sub
push
or
sbb
test
hlt
call
xor
jl
push
loop
cmc
ds
mov
call
es
xchg
sbb
sub
sti
push
das
stos
fistps
cli
sub
push
and
and
mov
mov
mov
add
sbb
loopne
scas
inc
adc
mov
jbe
out
or
repnz
lcall
fdivrs
fdivs
loop
jb,pt
ja
jbe
stos
pop
pop
pushw
rcl
fcomps
je
fwait
or
pushl
mov
pusha
sbb
mov
test
jg
mov
sbb
or
push
add
pop
std
lcall
scas
ja
cmp
insb
and
jo
and
add
add
clc
jmp
les
or
mov
mov
cmp
lock
insb
mov
inc
xchg
nop
xchg
xor
push
push
jecxz
xor
dec
mov
pushf
test
cmp
call
int3
dec
mov
fwait
push
fcomip
pop
inc
loope
scas
dec
pop
push
pop
lea
jl
adc
pushl
mov
insl
and
sub
aaa
add
mov
and
decl
sahf
arpl
aam
ret
mov
divb
push
test
push
clc
pop
dec
jbe
push
sub
inc
sbb
and
stos
xor
push
notl
jl
fcomip
dec
dec
xchg
mov
push
add
sub
fcomip
mov
pop
jmp
and
lock
in
and
sub
adc
shlb
incl
stos
scas
enter
pusha
shrb
loopne
enter
pop
sbb
push
aad
nop
clc
incl
adc
inc
lcall
push
or
clc
mov
shlb
adc
inc
out
ljmp
xlat
sub
mov
rcll
fisubl
inc
in
loopne
mov
call
loopne
and
test
xchg
shlb
mov
pop
lods
mov
xchg
pop
xchg
lock
sub
push
xchg
push
mov
rclb
std
lcall
pop
out
lcall
xor
cmpsb
jp
cli
add
cmpl
dec
cli
pushl
mov
sbbb
ja
pop
xor
add
cmp
aaa
adc
add
js
imul
nop
out
aas
xchg
and
lcall
push
decl
and
mov
js
test
pop
cmpsb
ret
xchg
int3
in
jg
dec
mov
call
pushf
sub
xchg
inc
push
repnz
mov
sbb
xor
and
call
xchg
dec
int3
int3
push
ds
pusha
pop
sbb
nop
dec
dec
cmp
mov
cmp
adcb
and
mov
push
scas
cli
jg
rcrb
inc
jge
cmp
dec
popf
xchg
fcomip
filds
addb
outsb
push
cmp
fldl
fs
cmp
cmpb
pushf
mov
or
call
sbb
xor
ja
popf
add
pop
or
push
mov
bswap
pop
mov
add
call
and
test
mov
sahf
sbb
sahf
push
je
test
xchg
lea
mov
adc
sub
ljmp
cmp
push
push
xor
call
loopne
xchg
out
and
sub
insb
sbb
sbb
out
adc
test
add
inc
lock
push
out
clc
jns
cmp
shlb
andw
dec
jbe
cmp
dec
fwait
clc
pushl
and
mov
daa
fstp
pop
or
adc
add
loope
inc
push
ja
adc
in
jp
dec
fildl
ret
jne
adc
push
mov
pop
or
notb
nop
fsts
push
in
jg
jmp
mov
xor
js
inc
ret
sahf
mov
mov
lcall
push
popf
lea
inc
mov
out
popf
inc
mov
insl
push
int
push
and
adc
mov
jmp
leave
or
cmp
cmp
icebp
sahf
push
xor
lcall
inc
out
push
daa
rorl
test
adc
aas
mov
test
jmp
pushl
sbb
jmp
loopne
mov
sub
push
push
mov
outsl
jo
adc
sarb
mov
rcll
adcb
sbb
xchg
fimull
int3
pop
js
mov
data16
cmp
aaa
and
and
jnp
cmp
clc
ljmp
idivl
jne
cmp
mov
xor
jmp
cmp
xchg
int3
out
or
adc
arpl
addr16
jg
pop
int3
test
xchg
pusha
xchg
jo
dec
and
mov
stc
push
out
pop
mov
imul
xchg
add
push
test
inc
sti
ficoms
pop
enter
add
adc
out
add
or
pusha
mov
js
mov
sub
dec
int3
add
adc
pusha
add
mov
dec
or
or
test
mov
inc
sub
xchg
xchg
mov
les
pop
loopne
mov
ss
pusha
inc
enter
xchg
mov
shlb
repz
jbe
pop
inc
cli
push
sar
aam
or
pop
jbe
inc
xor
cld
scas
pop
cs
cmp
jmp
dec
push
pusha
nop
push
jmp
sbb
xchg
xor
in
call
push
push
push
add
add
lods
dec
add
add
push
inc
imul
or
and
lcall
fiadds
sub
pop
jmp
adc
or
lcall
pushf
sub
xor
pop
jb
jae
sbb
add
nop
stc
in
mov
push
push
jne
cmpl
add
movsb
mov
sbb
dec
mov
inc
stos
add
adc
push
and
out
cmp
mov
jmp
mov
sub
pop
adc
dec
add
les
add
push
rcll
scas
mov
or
scas
cmp
mov
ret
push
adc
stos
nop
add
cmp
dec
push
lahf
dec
dec
jb
pushf
call
mov
enter
loopne
in
call
sbb
out
test
mov
dec
cld
ds
push
mov
jge
ljmp
or
dec
mov
mov
sub
mov
sub
add
test
inc
add
rolb
dec
fisubl
std
lcall
gs
mov
mov
push
pop
xor
push
loope
or
jg
lcall
sub
ret
out
and
aam
jo
add
mov
dec
push
cmpsl
mov
jg
push
lds
mov
sbb
mov
test
sbb
dec
pop
cmp
scas
push
add
dec
test
sub
push
std
pop
pop
sub
or
and
xor
inc
sub
xlat
and
cli
dec
lea
stc
dec
mov
incl
jl
inc
sahf
pop
insb
mov
das
jl
nop
mov
sub
cld
dec
jmp
mov
xor
add
push
lcall
push
sub
add
insb
lcall
int
into
shlb
xor
adc
lcall
jp
add
cmp
sbb
int3
cltd
mov
sub
mov
sbb
clc
or
ficompl
inc
outsl
inc
adc
movsl
pop
testb
clc
addr16
test
dec
xchg
fistl
add
mov
cmpsb
mov
decl
int
mov
add
dec
jle
and
dec
and
mov
inc
lcall
popa
addr16
das
rcrl
sbb
sbb
push
inc
mov
inc
roll
pusha
push
rcrb
or
popa
iret
or
movsl
ljmp
aam
fdivrs
dec
add
mov
fiaddl
xchg
daa
jecxz
xchg
inc
add
in
call
idiv
mov
adc
or
cwtl
sub
das
or
rcr
call
lea
push
mov
add
pop
cmpb
pop
ss
inc
and
push
lds
add
mov
fstpl
rclb
xor
decl
lock
mov
inc
mov
xchg
fistpll
clc
push
xchg
or
sub
testb
and
clc
dec
push
jnp
adc
dec
cmp
xor
cmp
or
push
shlb
sub
push
popa
jmp
jmp
aas
sbb
enter
aas
pop
add
sub
inc
inc
xlat
dec
pusha
mov
mov
jbe
imul
mov
push
xor
cld
jg
jg
sub
xchg
sbb
push
xor
xor
or
pop
mov
pushf
push
or
mov
pop
out
xor
test
pop
sub
int3
mov
push
jle
lcall
lea
and
repz
cmp
adc
insl
adc
mov
je
mov
xor
icebp
incl
bound
icebp
add
add
add
in
sub
orl
in
dec
adc
out
les
xor
xor
pop
lods
jmp
push
jmp
mov
sbb
sbb
lcall
xor
fisttpl
js
add
sbbl
add
fstp
or
or
add
lahf
fnstsw
test
decl
pop
jmp
dec
mov
mov
mov
lds
mov
sub
xor
add
adc
iret
adc
push
incl
addr16
or
jo
aas
and
incl
lahf
jp
fs
js
ss
je
jp
add
mov
lahf
mov
xor
rcrb
mov
sbb
push
mov
decl
out
js
push
and
cmp
frstor
sti
sahf
xor
daa
xchg
cmp
fmull
call
and
leave
and
pushf
pop
jb
loopne
out
enter
enter
fldt
icebp
sti
pop
je
or
cmp
mov
xor
sub
and
lcall
fimull
icebp
or
ret
aad
decl
add
push
mov
popa
inc
test
push
mov
add
sbb
jg
cmp
jmp
push
sbb
add
movsb
xor
scas
xchg
cltd
in
jmp
push
pop
adc
sub
lcall
nop
and
adc
xchg
dec
add
pop
push
fcoml
cmp
mov
incl
and
fadds
push
ljmp
lock
sbb
ljmp
xchg
pop
call
ss
lret
pop
pusha
filds
push
popl
mov
add
add
xor
clc
adc
lcall
adc
dec
enter
jb
push
fcoml
cmp
adc
mov
fcompl
insb
mov
cmp
adc
dec
sbb
faddl
xor
pop
inc
clc
push
jg
adc
je
sub
lret
mov
scas
sub
and
sbb
out
repz
mov
add
lock
ljmp
push
gs
subb
push
push
out
push
inc
decl
loopne
inc
sub
and
or
add
orl
outsl
stos
pop
cli
decl
lock
sbb
or
jmp
push
push
sbb
decl
test
jbe
push
mov
mov
fcos
inc
pusha
or
jmp
fldcw
fisttpl
lea
mov
sbb
jns
mov
add
je
push
shl
push
sahf
ret
icebp
inc
and
add
repnz
mov
ljmp
clc
insb
sahf
outsl
cmp
dec
push
cmp
push
dec
test
inc
notb
call
faddl
cmp
jbe
int
pop
lds
push
call
addr16
xchg
test
sbb
push
out
ljmp
adc
push
mov
xor
hlt
mov
sub
cmp
dec
mov
add
push
push
xlat
cmp
std
dec
fisubl
pop
dec
popa
inc
test
lcall
cwtl
sbb
sbb
xor
push
push
or
rcll
sub
mov
mov
xor
inc
inc
dec
cmc
cmp
sar
call
jg
sub
test
push
mov
xor
xor
cmpsb
or
mov
cmpsb
imul
mov
cmpsb
xor
adc
or
push
sub
test
sub
outsl
cmp
rcrb
add
push
add
cs
cmp
icebp
ljmp
push
cld
push
push
lea
add
testl
push
hlt
push
adc
hlt
aas
or
or
jbe
dec
add
push
adc
sti
pusha
pop
inc
insb
cmpsb
add
pop
in
ljmp
pop
andb
out
ret
sti
xor
inc
sub
cwtl
mov
ss
incl
lret
push
mov
mov
adc
fnstsw
in
add
scas
and
or
stc
inc
inc
cmp
jl
loop
fistpll
cltd
sub
mov
aad
stos
inc
std
pop
or
cmc
lcall
lock
fwait
push
mov
add
mov
pusha
imulb
sahf
sbb
mov
pop
inc
mov
sub
xor
dec
out
or
dec
orb
sahf
add
pop
movl
push
mov
jmp
mov
cmc
fisubrl
or
pop
pushf
cmpsb
mov
pop
negl
cmpsl
sub
or
ret
fwait
sbb
xchg
clc
ljmp
push
adc
lea
or
sub
push
movsl
adc
stos
mov
test
dec
test
dec
mov
adc
sbb
inc
lcall
push
xchg
jne
xchg
lcall
jg
push
or
movsl
jl
sbb
jne
decl
pop
or
xchg
xor
inc
jo
ljmp
or
outsl
mov
add
cmp
pop
test
add
cmp
cmp
sub
jmp
mov
sbb
xchg
lock
pop
xor
mov
dec
xor
xchg
sbb
dec
orb
call
testb
mov
outsb
insb
and
cmp
add
mov
cld
jg
push
cmp
push
push
popf
fwait
xor
ss
lret
aas
popa
loopne
incl
fistpll
dec
cmp
jl
jnp
pushf
lcall
dec
shl
add
push
or
movsl
cld
flds
xchg
and
fstps
push
mov
loope
les
out
cli
cmp
movsb
adc
in
or
aas
push
fstps
sbb
and
call
sub
push
add
or
stos
fldl
outsl
outsl
scas
jmp
pop
repnz
in
and
rolb
and
xchg
dec
repz
fwait
push
aam
add
pop
rorl
es
push
mov
push
or
sbb
pop
xchg
or
je
out
scas
lea
cwtl
mov
sub
mov
or
call
mov
xchg
adc
sahf
loope
or
filds
incl
cmpsl
or
push
adc
mov
pop
mov
dec
pushf
push
notl
lea
cld
call
jbe
pop
enter
std
rclb
fists
push
push
lea
mov
adc
inc
inc
fcoml
sbb
cs
lock
or
leave
lock
pop
lods
inc
inc
pop
xlat
cmp
cmp
or
sbb
mov
or
outsl
jg
adc
fsubs
inc
bound
sbb
pop
pop
and
mov
incl
jl
es
sbb
imul
push
stos
push
insb
inc
into
fcomip
inc
sub
or
adc
movsb
imul
or
incl
jo
push
cmp
stos
push
mov
jge
or
cmp
decl
push
pop
pop
mov
fstpt
cmpsl
sbb
mov
jge
adc
aam
pop
pop
push
std
jg
inc
shl
bound
movsl
shrb
inc
add
jbe
dec
jbe,pt
sub
mov
icebp
mov
insl
lcall
mov
bound
aas
xchg
sub
add
aad
and
adc
lret
sub
mov
call
shr
and
jmp
pop
std
mov
dec
mov
adc
in
mov
rol
mov
jbe
push
repnz
pop
mov
jb
pushl
call
push
push
shrb
fmull
sti
shl
outsb
mov
jmp
clc
mov
das
add
or
addl
pop
test
dec
cwtl
xchg
adc
sub
lods
andb
and
mov
ret
inc
in
fsubl
add
aam
int3
bswap
sarb
mov
test
nop
mov
mov
sbb
mov
push
push
push
lods
push
pop
pop
lcall
push
scas
mov
cmp
enter
inc
repz
call
shrl
jno
cmp
push
add
stc
in
orl
out
and
mov
into
cmpl
loop
xchg
and
call
nop
sub
or
loopne
push
xor
push
fnstcw
and
pop
call
cmc
mov
shll
loopne
cmp
stos
push
mov
fiadds
call
leave
mov
jmp
mov
stos
inc
add
push
add
cltd
int
shrl
cmp
imul
and
jbe
pop
jns
sbb
add
das
sarb
and
cmpsb
fisubrl
icebp
pop
xor
jge
lock
call
shr
mov
mov
sbb
inc
fmull
gs
jg
lds
out
sbb
clc
call
std
mov
sbb
arpl
inc
push
cmp
outsb
and
dec
mov
push
clc
incl
out
shlb
add
or
pop
dec
loope
fmuls
mov
or
pop
mov
jg
pusha
xchg
push
push
mov
sbb
sub
arpl
push
adc
mov
mov
jg
push
lods
jo
adc
add
dec
test
xchg
mov
push
sti
jge
inc
test
sub
add
mov
mov
cmp
sub
loope
sar
aad
rclb
add
call
adc
add
loope
pop
mov
xchg
push
add
and
add
sbb
adc
sbb
xchg
push
frstor
decl
and
dec
int3
adc
or
dec
mov
jmp
adc
aaa
sub
outsb
xchg
loopne
cld
sbb
or
loopne
sahf
fildl
push
inc
std
mov
and
rolb
int3
xor
adc
mov
loopne
add
mov
and
sub
mov
or
repnz
lock
adc
clc
inc
pmaxsw
fsts
inc
add
imull
push
or
add
jbe
cld
std
mov
addr16
add
es
call
inc
cmpsb
imul
adcb
dec
cld
inc
insl
jae
das
gs
lahf
orb
fcomi
call
imul
inc
popf
cmpsb
mov
sbbb
insb
jb
shlb
add
in
mov
sub
sar
jmp
inc
inc
dec
outsl
fwait
mov
push
insb
jne
inc
or
push
cmpsb
aam
xor
mov
les
pop
push
popa
jbe
cmpb
jno
push
sub
je
adc
xchg
incl
rcr
gs
xor
pop
mov
gs
or
sbb
inc
add
mov
push
ret
data16
dec
inc
push
sbb
sbb
data16
test
sub
inc
xchg
int
jo
push
adc
add
call
cltd
mov
adc
add
or
pop
mulb
sub
xchg
test
ljmp
sbb
jbe
sti
and
je
xchg
jne
mov
and
jo
ret
mov
add
std
adc
cmpsb
nop
or
cmp
and
pop
decl
in
xchg
aam
fwait
mov
cmp
cmp
pop
jl
pop
popa
jae
add
ds
aaa
add
mov
cs
call
xor
fidivs
jns
cmp
imul
pushl
arpl
inc
fxch
outsb
arpl
push
xchg
outsb
pop
fs
cltd
mov
sbb
dec
fisttps
jge
xor
imul
mov
cmp
popa
pusha
inc
fs
xor
sbb
imul
mov
mov
jb
insb
sar
das
cmp
aas
ljmp
jl
sti
std
mov
imul
xor
and
inc
outsl
fimull
jno
outsb
jae
les
push
dec
imul
mov
dec
addr16
movsb
mov
jp
and
ja
dec
pop
clc
pushl
and
and
sub
inc
insl
mov
inc
mov
jl
je
pop
fcmovnu
cmp
ljmp
and
cmp
or
insb
sub
into
icebp
imul
data16
lcall
pop
pop
mov
push
cs
and
sti
out
imul
gs
lock
sub
in
mov
lcall
fsts
sti
add
xor
cs
adc
movsb
sbb
std
dec
shlb
call
inc
test
loopne
outsb
push
outsb
add
dec
inc
or
push
out
xor
mov
ja
je
xchg
xor
adc
jae
decl
jle
je
inc
insb
mov
in
out
cltd
outsb
add
aam
jne
daa
decl
in
ret
inc
mov
push
mov
adc
push
out
ljmp
jbe
movsb
js
cwtl
jae
jb
pop
mov
inc
std
lcall
jns
ficoms
arpl
sbb
mov
mov
and
xor
imul
jmp
pop
jae
ret
scas
push
pop
insb
inc
arpl
cmp
pushl
add
movd
push
bound
aaa
and
mov
sbb
insb
jnp
cmpsb
lcall
adc
loope
pop
fdivs
test
insl
mov
decl
jne
popf
pop
imul
or
sbb
iret
ret
ja
pop
jo
aad
dec
xor
outsb
ret
popa
insl
or
dec
sarl
dec
adc
dec
out
rcrb
outsl
nop
mov
ret
insl
pop
insl
jecxz
stos
out
in
insl
fcmovnu
addr16
std
add
aam
mov
mov
mov
pop
jle
jnp
popa
mov
jo
outsl
out
js
sub
push
ss
scas
jb
push
adc
aas
mov
sar
push
push
pop
pop
imul
arpl
outsl
fadd
xchg
jg
pop
sar
inc
pop
and
push
outsb
stc
insb
sub
bound
adc
sahf
imul
aas
sbb
sbb
lret
add
mov
bound
inc
arpl
cmp
test
aad
pop
jno
daa
iret
out
lods
out
lods
imul
push
loopne
or
jg
outsl
and
mov
insb
scas
and
sbb
ja
cld
pushl
or
js
mov
fcompp
adc
fs
pushl
loope
insb
ret
sbb
outsb
inc
xor
repnz
arpl
shll
ljmp
daa
mov
add
pusha
or
xorb
scas
jae
es
enter
ljmp
add
ret
sbb
and
pop
or
mov
or
inc
rcr
fistpll
sub
adc
or
fbld
or
cmpsl
movsl
je
imul
adc
lret
pop
popa
adc
mov
frstpm(287
in
loopne
fildll
or
mov
jns
enter
ret
or
push
sbb
xor
iret
flds
dec
and
push
or
js
xchg
pop
jg
imul
filds
dec
push
push
jae
add
sbb
pushl
and
je
xchg
fwait
jne
xor
pusha
adc
arpl
pop
fmul
mov
adc
mov
jnp
das
pop
sbb
inc
pop
outsb
fsubrs
enter
aas
int
pop
jae
or
and
arpl
sarl
xchg
push
xchg
int3
sbb
sarl
pop
add
pop
push
int3
mov
cld
incl
inc
pop
or
out
dec
push
inc
or
push
ljmp
add
pop
dec
or
mov
incl
gs
arpl
sub
and
incl
sbb
insb
sbb
inc
sub
and
pop
out
ret
jle
lcall
pushl
daa
stos
dec
xchg
out
insl
xchg
and
or
ss
or
arpl
mov
lcall
sub
out
and
pop
push
inc
imul
arpl
out
cld
xchg
call
pop
psubsw
and
jg
rcr
dec
inc
lods
hlt
jp
and
mov
or
inc
xor
pusha
imulb
dec
jo
fildll
loope
mov
ja
mov
ret
push
pop
push
inc
call
xor
cmp
fildll
mov
jl
out
xor
arpl
data16
cmp
jg
inc
push
mov
xchg
xor
inc
lahf
mov
jp
adc
push
sbb
in
mov
xor
popa
pusha
inc
jp
or
mov
sbb
lret
fisttps
ret
jp
pop
icebp
add
and
andl
adc
faddp
mov
call
jb
in
mov
cmc
ja
or
mov
jg
push
cld
push
xchg
pop
fwait
leave
scas
inc
sbb
lahf
bound
sub
jmp
inc
jmp
sub
dec
mov
xor
jae
sbb
cmp
pop
jb
dec
mov
pop
mov
jmp
insb
cmp
jnp
int3
bound
mov
dec
outsb
nop
sbb
xlat
stc
sbb
ret
sub
insb
pop
sub
mov
xor
mov
ljmp
iret
jb
sbb
mov
incl
pop
xchg
dec
mov
ret
imul
fwait
or
jg
mov
mov
js
leave
pop
push
xor
push
addl
lret
mov
push
ret
lods
fistpl
pop
hlt
sbbl
aas
nop
popl
mov
in
lds
or
push
rolb
imul
pop
pop
fcmovnu
mov
loope
jo
pop
xor
je
and
mov
stos
add
dec
fldl
sub
sub
jo
lret
dec
xchg
inc
and
mov
dec
pusha
loopne
fwait
imul
push
fimuls
push
popa
mov
and
leave
or
fnstsw
push
shll
mov
push
pushl
push
mov
or
mov
scas
adc
bound
cmp
out
adc
jle
push
mov
xchg
dec
inc
jns
inc
inc
cld
incl
out
outsl
ficompl
fildl
or
sbb
jl
or
push
std
mov
in
mov
xlat
and
and
jg
sub
mov
mul
xchg
jae
jns
xor
decl
ljmp
popa
repz
jbe
mov
fs
insl
push
sbb
pusha
lret
pushw
adc
dec
nopl
pop
jbe
push
jb
xor
je
lcall
jmp
addr16
dec
push
addl
hlt
bound
jecxz
sti
sub
in
or
or
jo
add
shrl
ljmp
xlat
push
sarb
xor
xlat
popa
outsl
in
rcrb
push
sbb
adc
adc
fstps
cli
jae
jp
cmp
mov
jbe
and
inc
push
push
adc
inc
jb
push
and
adcb
sbb
incl
iret
dec
gs
scas
arpl
insl
lcall
inc
add
sti
sub
popa
ljmp
wrmsr
mov
cmpsl
cmp
xlat
fwait
xchg
decl
call
and
imul
jg
mov
movl
push
or
jmp
push
mov
sub
lods
data16
mov
mov
cs
add
pop
jo
pushl
arpl
shrl
adc
fldcw
dec
jecxz
adc
aam
outsb
push
ljmp
xchg
pushf
jl
es
cmp
xchg
dec
cmp
sub
lret
pop
inc
inc
jecxz
rcrb
adc
das
push
sbb
hlt
push
stos
and
cmp
loop
dec
adc
pop
fistpl
lds
xchg
decl
mov
dec
lcall
or
dec
add
mov
repnz
fadd
decl
bound
push
std
push
dec
inc
or
and
mov
pop
inc
sbb
sti
push
cmp
and
sub
jg
sbb
sbb
adc
lret
sahf
inc
js
dec
cld
lcall
pop
or
mov
mov
xor
cmp
test
mov
les
aaa
cld
lcall
jae
sub
popa
das
js
aas
sub
and
sub
out
shll
push
cld
mov
push
andl
and
inc
lds
dec
inc
pop
into
mov
lcall
cld
adc
bound
cmpsb
jne
sub
ret
mov
dec
add
mov
add
xor
lea
fisubrs
incl
loope
dec
dec
and
out
sbb
add
xchg
pushf
cld
jg
aas
test
stc
das
push
push
inc
inc
dec
dec
inc
mov
lock
sub
je
fsts
push
testl
push
popa
adc
pop
pop
pop
stos
std
adc
out
dec
push
inc
dec
mulb
jb
emms
lret
mov
or
and
adc
roll
xchg
jg
mov
adc
sub
and
adc
jmp
cli
decl
jp
test
and
sub
dec
scas
xor
roll
fsubs
push
dec
pop
add
stos
push
mov
cwtl
jo
push
fildll
dec
mov
jns
pushf
imul
inc
add
push
inc
jo
das
inc
and
push
and
cmpl
push
sub
mov
cs
fdivs
mov
repz
pushl
gs
dec
add
push
cmp
or
test
pop
inc
xchg
mov
pop
or
xchg
inc
adc
lcall
push
xor
frndint
mov
das
in
inc
mov
push
xchg
xchg
incl
inc
fs
test
call
fimuls
subb
push
test
xchg
and
lods
dec
std
testl
jmp
bound
jg
shlb
push
dec
jne
test
inc
mov
sub
pop
mov
dec
jbe
add
ds
inc
pop
ljmp
sub
xor
push
push
loop
mov
mov
dec
mov
push
insb
and
add
cmp
sub
push
push
jae
push
push
push
sbb
pop
mov
push
shr
fidivl
lcall
and
jo
fsubs
dec
push
jae
mov
in
push
pushf
leave
jo
or
add
push
outsl
gs
movb
xchg
and
aas
add
ss
incl
incb
fs
jns
incl
pop
incl
jns
add
cmp
popa
mov
out
add
aaa
std
add
lock
enter
cld
fildll
xor
loopne
sarl
in
pushl
or
dec
mov
aaa
sub
incl
xchg
and
jg
add
ret
clc
mov
incl
add
add
outsb
or
sti
enter
sbb
cmc
out
rolb
xlat
sub
outsb
add
test
lods
dec
add
ljmp
push
cwtl
push
push
push
ud0
add
jl
mov
add
lret
ja
ljmp
lods
ljmp
add
sbb
insb
sub
add
arpl
inc
xor
daa
and
push
mov
lcall
imul
push
or
sub
pushl
lret
push
or
push
int
or
xor
mov
mov
sub
inc
mov
dec
push
and
pushl
and
add
gs
inc
sbb
arpl
jne
jne
adc
jb
mov
or
int3
addr16
and
add
add
pop
add
fadd
lcall
jns
dec
addb
sbb
add
xchg
ja
inc
ret
jmp
sbb
ja
stos
pop
sbb
das
mov
sbb
push
mov
push
test
decl
cs
xor
shr
scas
call
jns
popa
fcoml
add
imul
loop
pushl
push
loopne
sub
sub
xor
inc
push
and
in
push
jnp
pop
fwait
adc
add
add
mov
xor
mov
aad
xor
or
jne
nop
hlt
call
pusha
add
fdivrs
push
push
add
cmc
test
jbe
insb
ja
push
cmp
out
clc
lea
js
push
mov
mov
mov
jmp
es
insl
jg
push
sub
mov
push
fbld
add
iret
pop
and
jb
add
mov
inc
mov
jge
sbb
std
aad
inc
lock
es
int
add
pushl
push
outsl
fidivl
outsb
gs
inc
xchg
sbb
xor
push
inc
sub
ss
push
jecxz
cmp
ja
pop
fcos
lcall
mov
fcomps
jp
cmp
push
sbb
test
outsb
insb
or
hlt
lahf
jb
xor
cmp
orb
mov
jle
and
fs
ljmp
mov
fs
jbe
mov
stc
mov
fmuls
inc
sub
test
mov
fmuls
std
test
sbb
loopne
sub
ja
cmp
popa
bound
adc
mov
in
gs
dec
popa
sub
sub
xchg
mov
incl
pop
out
xor
or
adc
aad
pop
pop
mov
add
add
dec
cmpsb
adc
sbb
cmp
mov
incl
mov
xor
xchg
es
lsl
xchg
or
loop
add
mov
outsl
and
xor
call
popa
movsb
hlt
ja
inc
mov
and
inc
mov
or
dec
xor
or
fmuls
sub
inc
dec
mov
sub
ret
jo
mov
adc
or
add
pop
data16
lock
ss
mov
add
fcoml
int3
gs
ljmp
fimuls
jb
jae
sbb
pop
jmp
add
adc
pop
arpl
xchg
dec
pop
or
or
sti
cmpb
data16
jae
adc
fldt
push
ss
mov
jo
je
adc
pop
add
arpl
add
pop
mov
outsb
out
incl
jb
loop
dec
lods
insb
ds
mov
push
fwait
and
out
ljmp
pop
mov
in
xchg
test
out
dec
ret
jb
popf
pop
sbb
bound
ss
cwtl
jmp
fstpt
dec
pop
sub
out
cmpsb
jae
out
mov
pop
or
dec
ljmp
aas
aas
xor
inc
pop
push
add
adc
fwait
mov
push
dec
pop
lcall
lock
aad
or
push
mov
pop
dec
jbe
jne
xchg
int
cmpsl
xchg
decl
stc
lcall
push
push
sbb
pop
and
push
subl
addr16
call
faddl
int3
dec
push
xchg
inc
loopne
xchg
dec
add
ss
push
aad
dec
lock
or
dec
outsl
pop
jns
or
popf
mov
clc
inc
lcall
mov
jg
adc
lcall
pushf
push
icebp
js
and
adcl
adc
mov
cmc
data16
cmp
ja
mov
sub
pop
stos
jp
jb
mov
insb
arpl
jo
cmc
call
cmp
mov
inc
cs
das
lock
sbbb
andl
push
dec
lcall
fnstenv
or
add
inc
xor
cmc
push
imul
xchg
push
mov
in
outsl
adc
jmp
inc
sub
pop
jnp
add
icebp
outsl
add
cs
fstps
outsl
addr16
outsl
test
cmpb
inc
jae
call
mov
and
int
imul
ret
inc
inc
xchg
sub
adc
decl
sub
ds
jo
xchg
and
das
rcrl
and
je
decl
leave
and
mov
pop
mulb
and
mov
flds
mov
lds
aaa
call
cmp
mov
fcoms
pop
mov
in
mov
jns
aas
icebp
push
mov
ljmp
pop
outsl
inc
sbb
xchg
jb
xor
shll
or
pop
loopne
js
les
aam
rcr
decl
dec
mov
or
sub
cmp
incl
inc
ss
rol
inc
sbb
fmuls
fisubl
lock
incl
dec
shlb
cmp
imul
inc
dec
out
cmp
jbe
push
es
sbb
mov
loopne,pn
pop
sub
or
cmp
fisttps
loope
mov
add
or
push
cmp
push
add
mov
add
adc
xchg
arpl
push
jp
in
mov
pop
jno
push
push
cmc
stos
cs
push
xor
adc
clc
cmpsl
adc
push
idivb
mov
je
xchg
or
pushl
ret
out
lods
mov
daa
notrack
add
mov
add
es
cmpsb
movsb
cmp
adc
mov
rorb
ja
push
jg
sbb
push
push
sbb
out
or
pop
add
add
pop
add
lea
inc
cmp
nop
mov
inc
jbe
jg
ret
push
push
sub
adc
jb
mov
xor
jae
jne
sbb
adc
pushf
push
cmc
jbe
xor
fcomps
mov
pop
leave
sbb
mov
pop
jne
inc
cmp
adc
add
add
outsl
push
rolb
add
dec
jne
ret
inc
ret
nop
mov
pop
rcl
push
into
mov
or
add
sub
clc
sti
icebp
add
jmp
idivl
into
mov
fs
cmpb
xchg
ret
push
jl
decl
fadd
rclb
les
clc
sub
add
ja
mov
loop
and
inc
or
dec
lea
repz
mov
rclb
pushf
or
fmull
aam
in
repnz
push
sub
pop
pop
cmp
aaa
ljmp
mov
sbb
lahf
insb
adc
call
lea
in
jg
and
pusha
sub
sub
pop
popa
push
mov
add
les
sub
jmp
mov
dec
add
scas
xor
add
rorl
and
sbbb
fcmove
add
das
or
pusha
roll
add
pop
leave
jnp
data16
jo
mov
repz
push
inc
push
dec
repz
dec
rcrb
adc
cmpsb
pop
and
pop
clc
mov
mov
and
cwtl
adc
mov
add
aam
inc
dec
push
cmp
mov
mov
pop
insb
adc
or
mov
add
inc
repnz
push
add
add
loop
add
fwait
rcll
pusha
dec
iret
movl
mov
mov
mov
xchg
or
inc
mov
scas
sub
add
xor
cs
cs
mov
fisubrl
je
push
popa
push
mov
cmpsb
movsl
scas
push
mov
add
xor
sub
and
jo
jle
or
add
dec
xchg
andb
das
cmpsl
outsb
aas
imul
js
scas
xor
mov
test
movsl
rcrb
outsl
daa
add
sub
mov
mov
inc
lret
adc
lcall
pop
repnz
in
jae
iret
cmp
inc
hlt
ds
repnz
dec
cld
pop
add
aam
addr16
fs
jns
repz
jl
mov
jb
paddq
loop
xor
jbe
cmpsl
inc
invd
dec
inc
push
dec
inc
icebp
inc
mov
dec
ret
inc
inc
push
loopnew
push
fldl
jg
inc
inc
adc
jbe
jb
adc
lods
push
dec
insb
dec
pop
inc
mov
push
dec
dec
dec
dec
adc
mov
insb
push
mov
cmpsl
push
imul
xchg
inc
insl
push
sub
test
cmpl
add
push
push
scas
sbb
mov
out
xchg
push
cmc
or
push
insl
fidivl
jb
add
push
add
sub
cmpsb
les
daa
add
rcll
add
add
add
rolb
sbb
or
inc
add
popa
add
add
incb
aas
movsl
xchg
or
nop
pop
aas
cmp
iret
xchg
lock
jmp
rol
xchg
mov
pop
or
push
aas
push
xor
jg
add
addb
adcl
cmp
insb
xchg
add
dec
in
rorl
psubb
addr16
int
out
push
out
ficompl
cmpsl
loope
cmp
add
loopne
pop
movsl
loope
lock
sbb
pop
push
aas
fidivrs
pop
andb
mov
cmpsl
sub
xor
push
pop
std
out
int
cmp
add
xchg
jbe
popf
out
jle
rolb
or
jo
xor
jnp
iret
rolb
incb
lock
jl
aas
pushl
or
push
in
iret
leave
add
nopl
es
repz
add
add
nopl
cs
enter
add
clc
mov
or
mov
daa
add
mov
add
das
aas
dec
or
negl
daa
add
pop
insb
ds
push
std
clc
lock
aas
mov
pop
clc
dec
add
mov
outsl
jnp
inc
pop
outsl
clc
popl
jb
pusha
mov
push
jnp
inc
add
xlat
pop
sbb
sub
addb
pminub
aas
pop
jle
fsubrs
ret
addr16
pop
inc
xchg
fnstcw
adc
adc
cmp
inc
xchg
aas
nopl
jae
push
mov
stos
sbb
cld
pop
push
lods
and
aaa
add
adc
lock
push
aad
jo
loop
adc
cs
std
fldcw
or
jle
or
push
sub
in
fnstcw
inc
addl
pusha
jp
ss
xor
sbb
push
push
sbb
jne
mov
xchg
ret
shll
cmp
sbb
jl
sbb
push
sbb
or
fdivr
je
incl
out
mov
aam
arpl
aam
push
sbb
aam
pop
sbb
add
sbb
add
or
add
mov
sub
adc
mov
jle
daa
sbb
cmp
xor
daa
and
cs
pop
lret
fisubs
adc
and
jae
fidivl
inc
cmp
clc
dec
push
dec
push
jae
int
mov
push
push
daa
inc
outsb
fucom
cmp
daa
xchg
mov
ss
sbb
cltd
sarl
mov
jge
stc
push
ja
push
daa
ret
mov
sbb
or
add
mov
lahf
adc
cmp
xor
cmp
inc
and
cmpl
xor
and
fiadds
mov
daa
in
jns
dec
sub
repz
xor
mov
repnz
dec
sub
clc
xor
call
dec
and
push
fnstsw
mov
int3
push
cmp
and
and
cmp
jmp
mov
push
dec
pop
push
cmp
fldenv
xor
push
xlat
repnz
jnp
lret
push
and
xor
push
or
fistl
mov
in
push
xbegin
sbb
andl
adc
lahf
jne
decb
add
ja
testl
inc
inc
inc
or
dec
ljmp
insb
aas
scas
dec
push
pop
xor
outsb
daa
addr16
inc
aad
mov
dec
dec
cs
mov
out
in
adc
sub
movsb
sub
dec
clc
add
test
adc
daa
add
mov
in
fdivs
mov
stos
mov
sbb
jl
adc
xor
inc
arpl
ret
cmc
mov
ds
shll
xor
arpl
add
daa
lahf
cmp
data16
leave
xchg
inc
mov
out
fidivl
push
push
fwait
daa
push
outsb
paddusb
in
es
fstpl
dec
lret
ljmp
inc
inc
es
daa
dec
into
fld1
cmp
daa
xor
xor
in
repz
sub
jecxz
jp
push
and
test
xor
in
inc
rolb
or
stos
movsb
xchg
mov
inc
repz
daa
xor
xor
cmpsb
arpl
das
or
js
bound
in
into
xchg
lahf
daa
push
inc
sub
push
mov
dec
push
xor
push
sub
sub
add
outsb
data16
inc
jge
and
out
push
inc
mov
daa
cmpl
and
inc
aas
call
aas
clc
daa
fsubrs
jo
pop
pop
lock
jns
fsubs
movsb
pop
xor
fimuls
mov
dec
xchg
daa
mov
subl
mov
lahf
jmp
in
loope
divl
adc
adcb
mov
fsubrl
out
xor
cmp
sbb
xchg
xchg
sbb
loop
fwait
addl
pop
adc
daa
popf
in
dec
in
jl
and
clc
or
insb
mull
sbb
xchg
fcoms
mov
dec
xor
dec
xor
dec
daa
jo
fldt
dec
daa
dec
daa
clc
dec
fidivrl
cltd
or
dec
sarb
dec
jl
push
pop
out
pop
dec
rorl
sbb
out
mov
incl
push
pop
cltd
cltd
push
mov
mov
insb
js
cltd
cltd
and
xchg
test
daa
cmpsl
mov
xchg
repz
cmp
push
xor
and
les
dec
jb
push
mov
adc
inc
mov
in
es
push
daa
cmp
int
jb
shlb
push
stos
sub
cmpb
adc
cmp
pop
sub
inc
jae
lahf
lods
sbb
out
inc
mov
test
adc
push
or
pusha
test
das
repnz
aas
daa
aaa
jl
jns
or
cwtl
or
jno
and
cwtl
stos
sub
aaa
fs
jne
daa
insl
mov
jmp
pushf
outsb
push
imul
sbb
fstpt
fcomps
fnsave
push
testl
out
jmp
insb
test
cmp
mov
scas
jp
seta
push
xor
pop
jb
sbb
or
lods
xchg
add
lahf
pop
scas
mov
xor
sub
jae
xor
out
int3
sahf
xor
add
mov
or
inc
aaa
add
xor
xor
fisubrl
sub
pop
test
lcall
jae
mov
xor
rcrb
shrl
repnz
pop
jg
mov
jmp
repz
inc
or
dec
pushf
add
aam
ja
incl
inc
repz
dec
mov
aas
xor
add
xor
aaa
outsl
ja
js
sbb
lret
lret
mov
jo
pushl
lods
loope
in
add
xor
insl
cltd
fsubrs
mov
ja
outsb
ja
jno
cmpb
aas
xor
rolb
pop
call
aad
jle
add
pop
jg
insb
addb
adc
mov
ja
xor
ja
incl
pop
add
xor
scas
pop
cmc
and
popl
jo
fdivs
dec
in
mov
xor
adc
pushf
ljmp
in
jl
sti
jno
int
xor
jae
add
mov
sbb
int3
in
push
sbb
arpl
add
out
lcall
mov
decb
test
out
ja
pop
das
ret
mov
aas
aas
lret
es
adc
idivl
cmp
js
mov
cmp
idivl
aaa
ja
mov
xchg
cs
sbb
orl
in
sbbb
adc
out
xchg
add
aaa
add
aas
lock
popa
out
add
xor
shlb
push
movsl
jnp,pn
xchg
aaa
jbe
das
aaa
jae
pop
mov
in
outsb
sbb
aaa
jae
insb
fcmovnu
cmpsl
das
add
ja
and
mov
cli
outsb
cli
pop
aaa
pop
jne
pop
aaa
add
out
in
js
ja
push
jae
arpl
mov
pop
iret
cmp
ret
add
dec
ret
mov
aaa
jo
aaa
mov
repz
pop
scas
add
pop
jae
mov
aaa
cmpsb
loope
and
pop
outsl
andb
ud0
das
sub
nopl
lock
add
enter
pop
mov
lock
jmp
xchg
dec
add
outsb
xchg
pop
fwait
xor
or
filds
and
mov
smsw
adc
sub
dec
ljmp
pop
dec
aas
adc
lods
lods
xchg
inc
lret
push
mov
mov
int3
add
sti
mov
or
inc
imul
jb
out
xchg
dec
iret
or
push
data16
dec
and
push
fistps
add
and
xchg
hlt
sahf
outsl
stos
add
mov
jne
outsb
outsb
andl
fidivrs
sbbb
sahf
inc
push
arpl
xchg
das
fldt
push
xchg
popa
insb
add
sbb
mull
push
data16
mov
cmpsb
dec
push
and
out
fimull
sub
jbe
insb
mov
inc
imul
sub
shll
sbb
popa
pop
insl
sbb
jne
push
push
add
jp
notl
jp
sub
ljmp
push
mov
and
lcall
popa
ss
hlt
pusha
mov
sbb
jb
outsb
dec
ja
movsl
jmp
push
push
xchg
aaa
jnp
fwait
addr16
daa
xchg
inc
pop
addr16
cs
or
loope
jnp
inc
mov
sbb
xorl
pop
push
sti
sbb
ss
jnp
jne
and
insl
clc
xchg
push
loop
adc
push
push
push
push
xchg
icebp
and
insl
add
pop
xor
jae
popf
mov
mov
das
xchg
push
push
add
jo
cmp
xor
push
push
in
sbb
scas
dec
mov
arpl
loop
xchg
or
cmp
mov
gs
inc
arpl
sub
or
cmpsl
xor
or
repz
xchg
dec
pop
adc
rcrl
mov
add
outsb
or
mov
loop
inc
orl
mov
sbb
add
mov
dec
mov
push
jp
or
dec
or
xor
cvttps2pi
lds
or
inc
ss
sti
sbb
xor
idivl
adc
inc
rolb
jo
arpl
shrl
shl
mov
mov
jb
xor
stos
cs
and
daa
ret
daa
sub
sbb
or
mov
out
jne
sub
or
jmp
imul
push
lods
jnp
inc
xchg
pop
ja
mov
mov
mov
arpl
shll
fwait
pop
adc
out
add
lock
adc
inc
imul
inc
inc
adc
lock
call
add
jbe
rcll
jbe
add
jo
out
insb
mov
xchg
imul
cmp
or
or
xchg
imull
jne
je
pop
adc
mov
mov
scas
or
imul
lods
xor
aas
xor
and
jne
add
inc
jecxz
inc
adc
push
fwait
pusha
pop
lahf
push
push
cmpsb
loope
rorl
push
jnp
hlt
mov
adc
mov
fwait
or
inc
fildl
js
mov
stos
cwtl
fcmovbe
aas
addr16
sbb
push
lret
add
push
inc
cmp
movl
mov
ds
add
pop
push
insb
lds
pushf
pop
inc
add
pop
out
in
ljmp
inc
add
pop
loope
adc
ljmp
out
mov
or
imul
push
cmp
mov
push
jne
and
loope
push
or
popa
stos
movsl
sbb
hlt
mov
ljmp
cmp
and
sbb
das
adc
popa
adc
mov
shll
iret
jae
add
mov
rcrl
mov
outsl
negl
insl
xchg
push
or
mov
push
addl
roll
dec
adc
fs
push
loop
xchg
aam
movl
mov
sbb
mov
adcl
inc
sbb
fwait
sahf
aam
add
or
rolb
push
test
xor
and
jbe
fstp
pop
sub
insb
push
add
pop
mov
scas
xchg
iret
insb
mov
insl
ja
add
xchg
aam
dec
pop
add
pop
jae
das
outsl
cmp
mov
dec
xor
imul
lret
xchg
mov
inc
sub
mov
mov
mov
push
adc
jp
aaa
inc
dec
add
dec
inc
mov
push
call
add
push
loop
sbb
imul
outsl
xlat
xlat
and
fistpll
mov
outsl
sub
sbb
and
fsubl
jmp
adc
mov
scas
add
push
or
pop
mov
xor
es
pop
cmp
add
dec
lds
add
addl
sub
push
or
jns
es
xchg
icebp
pop
fadd
cmp
es
fldt
andl
or
sub
pop
pop
pusha
push
imul
xor
push
ds
arpl
addb
push
jo
and
outsl
mov
or
xorb
mov
adc
arpl
pop
aad
addr16
sti
lahf
mov
les
mov
add
xchg
push
push
jno
out
es
adc
jo
push
ja
cwtl
push
rolb
and
call
mov
shll
mov
aaa
pop
xlat
fiaddl
sub
movsl
add
mov
scas
je
stos
jbe
cmp
xchg
arpl
js
sub
cmp
sbb
ret
aaa
aaa
imul
or
add
stos
shrl
aaa
inc
fs
dec
out
jmp
dec
jle
xor
mov
jg
ja
outsl
inc
sub
push
jae
in
xor
outsb
adc
daa
lcall
cmpsl
insl
mov
dec
sbb
mov
aas
inc
and
jnp
lds
pop
fimull
ja
scas
push
shlb
sub
pop
pop
or
bound
push
leave
inc
fistps
sti
addr16
jb
arpl
sbb
inc
push
sbb
pop
loop
jo
jg
cmovae
lcall
jb
or
sub
mov
mulb
daa
das
xlat
xor
lods
in
xor
mov
out
sbb
lcall
mov
insb
repnz
inc
daa
xlat
xchg
mov
mov
rorb
mov
add
and
jo
mov
pop
adc
aas
icebp
push
lods
movb
cmp
add
outsl
insb
or
cmp
popa
adc
out
or
pop
cltd
lods
sbb
pop
push
js
fisubs
lcall
ss
pop
pop
add
sbb
shrb
lcall
push
pop
je
add
push
pop
push
sub
and
xor
out
out
lcall
mov
shrb
dec
clc
fiaddl
push
push
sti
pop
arpl
mov
and
sahf
lods
pop
daa
cmpsl
lret
loopne
jp
jmp
fucomip
pop
push
or
mov
or
ret
adc
sbb
inc
adc
arpl
inc
stos
ret
and
sub
mov
daa
mov
das
add
inc
mov
daa
pop
fists
ja
jo
add
inc
rcl
divl
aad
mov
cmp
adc
imul
sbb
xchg
arpl
or
mov
add
sbb
mov
mov
sbb
pop
mov
xchg
sbb
pop
dec
daa
bound
sbb
pop
iret
sub
addl
push
mov
ja
movsl
lds
ja
mov
and
ret
push
mov
xchg
push
mov
pop
negl
aas
insb
push
imul
imul
imul
dec
adc
add
sbb
xor
cmp
xor
mov
lods
mov
sbb
xor
mov
mov
aaa
sub
push
hlt
push
filds
and
mov
stos
dec
xchg
sti
add
lret
jb
mov
icebp
adc
jae
and
push
mov
sbb
sbb
ret
pop
popa
inc
mov
pop
pop
frstor
loopne
jae
sub
daa
adc
cmpsl
scas
mov
repz
jp
arpl
or
pop
lcall
jb
shll
or
or
sar
ljmp
sbb
test
push
mov
push
loop
lds
cmpsb
cmp
cmc
outsb
shlb
or
dec
adc
sbb
inc
push
sub
xor
sub
stos
inc
cmpsl
jbe
fbld
mov
push
cmpsl
out
insb
rorl
fcmovb
adc
dec
and
or
fwait
imul
outsb
mov
inc
daa
mov
xchg
or
fs
jg
or
outsl
pop
es
push
mov
scas
call
adc
cs
loopne
pop
pop
lds
adc
pop
ret
out
or
sbb
mov
fldt
mov
mov
shrb
sarb
lret
testl
sub
xlat
rolb
xlat
les
inc
daa
pusha
xlat
ja
cvttps2pi
push
inc
into
cli
test
push
mov
push
arpl
inc
aas
ret
daa
mov
xlat
insb
iret
insb
out
push
push
or
imul
popa
enter
xlat
daa
daa
lea
repnz
in
or
jp
inc
sti
inc
fmuls
or
fwait
sub
inc
push
and
insl
push
or
pusha
push
sbbl
sub
sub
adc
stos
mov
pop
clc
rorb
adc
loop
addr16
push
mov
mov
pop
cmpsl
cmpsb
adc
dec
insb
pop
mov
sbb
xor
imul
push
mov
dec
out
and
fwait
and
xchg
or
sbbb
cmpsb
add
push
lret
das
mov
sub
lods
ret
push
dec
addl
sub
sbb
out
push
pop
imulb
insl
xchg
les
or
mov
or
les
and
stos
scas
ljmp
cmp
cli
outsl
lret
add
testl
lea
popf
dec
mov
mov
push
inc
lods
sub
mov
je
cmp
addl
inc
je
and
jg
ss
jmp
pop
aad
xchg
add
arpl
mov
mov
stos
push
lea
popa
push
bound
pop
arpl
ret
adc
les
sub
ret
add
mov
xor
aaa
sub
mov
aas
push
imul
xchg
push
loope
es
mov
das
adcl
or
dec
ljmp
pop
adc
mov
rclb
xor
xchg
pusha
adc
insb
sbb
and
or
pop
movsl
jbe
movsb
cmp
cmp
cmp
jmp
and
imul
push
stos
mov
and
add
push
dec
and
test
addr16
arpl
stos
jbe
xchg
les
or
fwait
gs
push
sbb
jg
jg
sub
or
mov
adc
adc
mov
add
mov
outsb
add
adc
adc
push
push
out
mov
popa
andl
dec
lea
sti
mov
jns
shrl
scas
or
push
xchg
push
mov
mov
or
jo
stos
inc
add
es
push
adcb
cmp
icebp
mov
xchg
dec
iret
ljmp
es
aaa
mov
repz
add
fwait
cmp
push
dec
ljmp
xchg
ret
inc
popa
inc
xchg
mov
adc
cmc
lretw
mov
push
adcb
inc
inc
mov
xor
adc
or
xor
daa
insl
jecxz
jo
add
mov
cmp
popf
sub
mov
or
pop
imul
push
push
dec
inc
fstpt
add
adc
andl
mov
jae
sub
sub
jbe
insb
or
jnp
sarl
shlb
fnstcw
sbb
push
rcl
dec
mov
or
push
jb
jae
push
push
cwtl
push
push
jo
dec
adc
cltd
push
inc
fisubl
dec
and
filds
adc
rorb
fistpl
jb
sub
sbb
dec
pusha
rcrb
or
and
jbe
rcll
mov
push
mov
aad
loop
shll
popf
andl
adc
lret
mov
popa
mov
jo
mov
icebp
ss
popa
sbb
push
jo
out
fmuls
jns
and
rcrb
mov
scas
xchg
aas
lcall
out
push
dec
xorb
adc
gs
sbb
ficoms
cmp
adc
ror
leave
inc
cmp
pop
push
js
adc
bound
movsb
lock
mov
push
shll
shrb
push
push
loope
mov
pop
js
rolb
push
insl
inc
movl
inc
xchg
ret
jbe
adc
push
xorb
push
jb
stc
mov
jne
pop
inc
popa
je
xorl
cmpsb
mov
mov
mov
adc
and
mov
mov
add
inc
js
in
inc
cmp
enter
inc
sbbl
add
and
popa
rorl
inc
in
insb
xchg
rcrl
jbe
add
aad
or
sub
inc
test
xchg
and
and
or
sbb
out
inc
push
cs
sbb
pop
pop
jl
or
addr16
ja
and
shlb
push
nop
or
movsb
rclb
movsb
orl
mov
adc
xor
movsb
lds
test
or
iret
or
xchg
push
or
add
cmc
test
in
add
repz
ret
sub
test
inc
addr16
les
fyl2x
loopne
inc
cltd
leave
or
rolb
add
or
jns
test
popl
or
fldl
mov
jmp
add
sbb
adc
sub
mov
add
add
adc
cs
insb
mov
mov
mov
push
pop
or
rcrb
add
and
fimuls
adc
add
push
or
push
add
inc
outsb
lcall
iret
ficompl
mov
inc
int
sti
xor
xor
outsb
mov
cmpsl
xchg
std
repz
pushf
mov
cmp
adc
or
lahf
jbe
ja
fidivs
pop
pop
dec
jae
call
pushf
fadds
mov
cmp
lock
add
jns
jle
data16
insb
lea
out
fs
sahf
loopne
sahf
lret
xlat
scas
shrl
adc
popf
inc
outsb
jnp
sub
aaa
clc
cli
inc
jo
mov
mov
fisubrs
cld
inc
push
jno
ss
jnp
jp
push
mov
mov
cmp
lahf
mov
mov
push
pushf
nop
leave
xor
aas
push
leave
xchg
pop
sub
or
jge
movsb
popf
ljmp
mov
dec
repnz
mov
cmp
in
in
icebp
fs
or
test
lea
int
or
loop
xor
dec
cmp
jmp
addr16
int
in
mov
inc
call
das
lods
mov
push
jns
jbe
cmp
cmp
jb
push
incb
imul
pop
shll
push
jnp
mov
pushf
jno
pop
xlat
loopne
lods
mov
inc
insb
cmpsl
ljmp
mov
xchg
outsl
out
inc
imul
jb
arpl
out
in
lock
incl
push
jge
cmpsl
inc
dec
push
dec
inc
outsl
popl
jecxz
dec
pusha
test
lods
bound
ljmp
pop
jg
or
push
addr16
adc
scas
pop
inc
jo
into
mov
jbe
adc
idiv
push
out
repz
push
sbb
mov
pop
aaa
adc
ror
pop
cmp
call
decl
inc
push
fs
pop
xor
jmp
in
testb
jne
push
pop
loopne
push
cmpsl
mov
fninit
inc
fisubl
out
xchg
aas
cmp
push
mov
call
dec
pop
lods
mov
int
popa
jmp
jge
lods
js
push
xchg
push
lock
into
pop
jo
out
nop
test
mov
decl
into
repz
mov
pop
cmpsb
jg
jno
insl
jo
inc
outsl
scas
add
add
pushl
jnp
les
xchg
lods
push
xchg
lahf
call
ss
ds
mov
movsb
pop
sbb
stc
cli
xchg
fnstenv
xor
in
xchg
lods
push
aam
loope
xchg
lods
adc
pushl
fimull
outsb
mov
adc
das
cmp
push
and
mov
cmpsl
pop
movsb
mov
aaa
xchg
stos
daa
aas
fsub
icebp
cmc
dec
cmc
fsubp
pop
mov
mov
jge
mov
pop
nop
loope
rcr
lahf
cmpsl
mov
xchg
push
push
mov
stos
fucom
push
add
mov
inc
stos
incb
jmp
mov
lock
sub
mov
loope
lods
push
pushf
lcall
push
test
pop
sub
push
in
out
add
xor
add
push
incl
out
pop
fistpll
pop
xor
cmp
xchg
add
sub
xor
mov
mov
mov
into
adc
lcall
push
cli
fldcw
dec
idiv
add
incl
dec
out
dec
in
loop
cmp
loopne
fmuls
push
fcmovnu
repz
jbe
push
add
push
loope
add
in
cmp
iret
dec
repnz
sahf
std
push
push
incl
pushl
clc
pop
push
cmc
negb
sub
popa
xchg
imul
lcall
sahf
scas
call
mov
cs
popa
xchg
ljmp
push
mov
sahf
int
mov
dec
aad
loopne
dec
jecxz
jmp
das
pusha
push
push
sahf
notl
or
add
inc
arpl
dec
mov
icebp
lock
push
repnz
sub
cmc
hlt
testb
cmc
hlt
repz
out
je
fisubs
cmp
int
add
push
fimuls
and
insb
mov
push
push
icebp
push
cli
pop
mov
shl
add
adc
test
pusha
mov
in
sti
cli
push
cld
or
mul
push
add
lcall
ds
jnp
jl
pop
pusha
ljmp
insb
ss
pusha
lcall
jb
sbb
outsl
mov
jmp
fistl
push
pop
or
aad
int
out
cli
div
scas
cld
into
lock
push
idiv
push
repz
xor
pushl
fcompp
sar
push
pusha
jmpw
push
insb
push
fldcw
mov
push
out
push
repnz
daa
cld
out
add
ret
mov
frndint
mov
jmp
loope
jg
fcmovnu
fcos
out
in
loop
rcl
sar
mov
xchg
xchg
xor
in
mov
jmp
pop
jmp
push
imul
cld
push
and
push
push
push
std
cwtl
sub
cmpsb
fwait
pushf
cmpsb
add
es
scas
test
call
ror
in
in
outsb
fcomip
pop
push
into
iret
int3
lcall
push
lcall
addr16
dec
addr16
pop
pusha
imul
pop
push
icebp
into
pop
imull
lea
pop
pop
push
es
repnz
cli
pushl
pop
stos
inc
sarl
jecxz
incl
decl
call
pop
pop
rcl
out
xchg
divl
lods
fcomps
push
push
imul
pop
inc
add
fidivrl
negb
cli
push
inc
pusha
bound
push
push
in
leave
popa
arpl
daa
add
pop
push
cld
dec
cmp
mov
popf
xchg
dec
inc
out
call
lret
subb
push
fisubrl
insl
or
into
rcl
inc
xchg
xchg
mov
pop
pop
push
outsl
fucomi
out
addr16
pop
data16
das
pusha
mov
add
repz
cld
and
pop
and
arpl
mov
cmp
bound
push
push
out
push
incb
xchg
in
in
jmp
inc
xchg
ret
clc
outsl
mov
popa
outsb
call
mov
cs
ficoms
filds
add
jbe
std
mulb
daa
int
addr16
daa
sub
xchg
out
fs
push
cmc
push
popa
neg
mov
shll
loope
lahf
mov
cld
clc
sti
decb
push
insb
ss
iret
iret
cs
movsb
test
ss
push
lods
push
pop
push
or
pop
outsl
mov
jne
bound
xlat
lcall
outsl
insl
repnz
fwait
mov
push
popa
hlt
fs
fcmovu
rcrl
jmp
rcr
data16
int
jns
stos
out
aam
jmp
repz
pusha
lahf
add
out
mov
xlat
int
popf
push
add
add
out
hlt
fcmovbe
scas
inc
and
xchg
fdivr
mov
movsl
pop
ficomps
into
pop
insb
pop
adc
mov
pop
mov
mov
into
cld
sahf
iret
cs
int
gs
add
pop
das
out
push
push
repnz
dec
aam
sub
incl
sbb
out
and
push
fidivl
fisubs
mov
insb
xor
into
insb
decb
push
sar
pop
fbld
jmp
scas
sti
fisubrs
loopne
pop
insl
push
insb
jo
jb
push
insl
insb
imul
popf
insb
sub
ret
fimuls
in
jmp
in
call
fistpl
jo
sbb
jbe
fs
xchg
imul
outsb
pop
cmp
jbe
sahf
pop
out
in
daa
iret
mov
push
out
out
lock
mov
ret
into
ret
jbe
arpl
jns
fwait
loop
in
push
cli
fistpll
lea
pop
test
jns
repz
inc
sar
es
push
ljmp
pop
call
fistpl
iret
sahf
insl
aam
in
dec
in
fstps
clc
std
filds
pop
decb
idivl
repz
idiv
cmc
pushf
mov
inc
jmp
jmp
neg
jle
int
js
out
xor
xor
mov
mov
repnz
mov
push
cmpsb
daa
cmp
xlat
test
push
dec
mov
aas
icebp
ljmp
xor
outsb
jg
test
cmpsl
addl
mov
scas
pop
sub
mov
incl
adcb
icebp
pop
jge
insl
mov
incb
daa
in
in
stc
pop
mov
arpl
scas
bound
repz
andb
jecxz
mov
enter
clc
mov
out
mov
xchg
push
aam
inc
out
cltd
div
out
shl
pop
mov
in
xchg
neg
pop
xchg
lret
xchg
xchg
pop
jmp
loope
or
aaa
icebp
jmp
dec
jnp
mov
imul
push
out
clc
into
nop
cld
out
lahf
imul
pop
xchg
jae
into
daa
fcomip
cmp
xchg
sub
popa
dec
fwait
xchg
sub
cli
pop
jle
into
jnp
testb
std
jnp
mov
out
mov
xor
mov
insl
mov
xor
pushf
rol
out
push
mov
std
jbe
std
jmp
jns
out
sub
jns
ljmp
mov
neg
xchg
cli
fsubs
sub
fsubrl
loopne
in
sub
aas
fdivp
xor
or
jle
ss
xchg
out
mov
testb
clc
std
pop
cltd
sahf
int
or
aam
ss
inc
das
push
jnp
loop
stos
in
push
fdecstp
sub
div
iret
idivb
push
repz
sub
iret
pop
cwtl
insl
dec
adc
test
xor
in
cli
dec
push
pop
cmp
insl
jnp
adc
out
faddl
dec
mov
ds
cli
into
std
xlat
pop
shll
out
inc
aad
insl
pop
push
leave
icebp
repnz
shlb
fists
imul
fwait
inc
pop
ds
pop
dec
popf
pushf
push
mov
fldcw
aaa
aam
clc
pop
ja
pmaxsw
es
xor
inc
bound
sub
mov
popf
pop
lahf
ds
pop
and
sete
pusha
hlt
imul
pop
push
aam
nop
in
fsts
jne
repnz
push
sahf
js
sub
sbb
fdivl
fnsave
mov
test
flds
lcall
xor
push
jo
push
cmpsb
pop
xor
adc
ss
hlt
mov
decl
dec
push
push
push
into
jmp
push
and
idiv
lcall
push
int3
call
push
leave
decl
lret
faddl
hlt
lods
push
sub
jmp
sti
jo
push
test
jbe
stc
incl
das
add
mov
lahf
mov
std
mov
ret
inc
vshufps
mov
stos
mov
jmp
xchg
ljmp
loopne
dec
into
fnsave
dec
call
icebp
push
into
push
incb
inc
jg
xor
pop
push
mov
jb
inc
int3
test
out
repnz
out
mov
cs
push
repz
mov
push
cld
aaa
sahf
call
jp
and
jle
in
xchg
inc
ss
in
push
push
clc
pop
incb
fs
ja
add
jmp
add
sahf
mov
out
rcr
sbb
add
sarl
js
xchg
cmpsb
mov
bound
outsb
into
arpl
push
int3
rdtsc
jmp
cli
aas
push
pop
repz
int
outsl
data16
xchg
out
mov
jbe
out
lcall
imul
arpl
daa
gs
arpl
sbb
test
pop
enter
pop
pop
xchg
orb
push
arpl
mov
cmpsb
mov
stc
push
mov
jnp
hlt
sub
jg
das
xlat
xlat
mov
insb
insb
insl
jmp
cmp
into
inc
pop
mov
dec
inc
movsb
and
cld
mov
mov
pop
pop
push
js
adcl
scas
jo
pushl
dec
notl
cmpsl
mov
jle
or
lcall
ds
pop
imul
icebp
scas
pop
ds
dec
movd
arpl
bound
dec
jno
lea
fdivl
inc
ficoms
shr
cmp
adc
cwtl
mov
fwait
mov
popa
inc
add
add
bound
sbb
lods
popw
gs
mov
mov
outsb
mov
leave
push
lock
cmc
ss
jle
fs
mov
push
fcoms
cmpsb
sbb
xchg
push
jmp
jge
push
jbe
add
dec
xchg
push
xor
xor
aad
inc
mov
push
jle
rcr
push
xchg
mov
scas
jecxz
pop
mov
sti
xchg
pop
imul
ud0
jbe
out
ds
lods
or
push
inc
add
mov
add
and
mov
push
test
xor
push
fistpll
rcr
data16
cmpsl
lahf
jg
int3
jp
insb
jbe
xchg
xchg
pusha
add
outsb
js
pop
push
mov
scas
pop
jmp
pop
pop
out
test
push
rorl
cmpsb
insb
std
sbb
arpl
mov
daa
pop
inc
sub
and
xchg
add
out
in
pop
push
xor
loop
shrb
fisubs
ljmp
scas
cmpsb
sub
pop
jbe
push
fsubrp
lret
notl
sti
push
cli
fistl
push
xor
mov
insb
ss
xor
cmpsb
sub
pop
mov
mov
in
out
or
mov
idiv
stos
icebp
xor
sahf
shrb
push
test
mov
xchg
fwait
scas
mov
daa
push
and
in
js
insb
inc
into
es
push
sti
in
int
scas
popl
xchg
mov
out
or
push
repnz
ror
xor
repz
outsb
mov
scas
xchg
pop
xchg
pop
fistpll
repz
daa
dec
arpl
roll
pop
imul
dec
shrl
out
iret
in
cmc
mov
jle
setne
sub
xor
test
sub
call
xor
sub
jbe
fdivl
xchg
xchg
mov
sbb
xchg
incl
sti
jge
or
ds
push
sahf
sub
mov
mov
shl
mov
cmpsb
daa
dec
fadds
cld
rorb
insb
out
out
mov
inc
loop
daa
sub
fsubl
ss
push
inc
jae
ds
jecxz
sub
xchg
lds
es
sahf
cwtl
fwait
aad
xchg
imul
push
dec
fiadds
and
xor
stc
push
std
out
gs
push
outsb
das
lock
fidivs
pop
dec
rcr
stc
cld
scas
sahf
pop
sbb
adc
popf
ds
negl
dec
mov
mov
sub
daa
push
call
sahf
int
pop
xchg
push
out
outsl
out
hlt
sti
sub
outsb
iret
mov
ja
cmpsl
lahf
jo
mov
lahf
lahf
negl
xchg
xchg
xchg
push
xchg
cltd
clc
mov
cld
pop
pop
mov
bound
cmp
jo
pusha
adc
add
sbb
xor
ss
sbb
mov
dec
je
cs
add
push
adc
adc
cmp
and
pop
mov
xchg
and
ret
jle
sahf
cs
and
push
add
andl
les
les
mov
adc
cmp
mov
pop
jno
adc
in
std
test
xchg
pop
adc
dec
pop
mov
pop
pop
dec
pop
add
nop
lock
rclb
jae
iret
adc
sti
ljmp
movb
test
fwait
mov
test
pusha
sbb
sar
mov
rclb
movsb
dec
mov
push
pop
mov
jp
inc
cmp
jno
and
pusha
xchg
push
lea
sub
sub
gs
xor
fs
ss
pushl
arpl
xor
xor
jge
test
out
mov
dec
inc
pop
jnp
mov
outsl
fucomi
in
xor
inc
lret
inc
adc
xor
sbb
cli
cmpb
inc
inc
push
inc
daa
pop
fimuls
jp
xor
cmp
xor
and
clc
inc
xor
repz
cmp
push
xor
xor
inc
inc
inc
inc
xor
mov
xor
sub
cmp
aaa
xor
sahf
inc
inc
aaa
push
ss
sub
int3
adc
enter
outsb
imul
adc
imul
dec
imul
dec
and
inc
cmp
sub
shrl
dec
xor
xor
inc
dec
cmp
cmp
inc
xor
adc
sbb
ss
xor
and
gs
xor
jecxz
push
xor
push
pop
mov
jp
fcoml
mov
or
imulb
gs
and
and
shlb
pop
or
push
dec
outsl
cwtl
push
push
in
pop
cltd
add
dec
push
or
push
add
les
or
or
sub
mov
bound
pop
outsb
arpl
add
add
add
or
dec
popa
in
pop
xor
add
incl
inc
fwait
inc
sub
fwait
inc
or
mov
loope
cltd
push
adc
and
push
add
cmp
add
or
or
adc
or
rcll
pop
or
sub
dec
pop
int3
adc
jg
insl
dec
jb
sbbb
dec
loop
popf
or
shll
or
and
mov
add
push
push
or
loopne
fdivs
and
add
outsl
or
les
or
roll
push
add
mov
bound
pop
inc
test
adc
cwtl
sub
push
inc
lods
add
dec
add
or
repnz
or
cmp
jno
or
add
aas
lea
aaa
in
add
mov
add
lahf
inc
adc
or
sub
push
xor
pop
popa
inc
cmp
std
inc
inc
and
js
pop
sbb
sub
rcll
xchg
sub
cmp
or
push
and
cmp
in
xor
lds
test
xor
or
sub
das
movsb
add
pop
push
add
cltd
adc
sbb
lea
leave
rol
lea
cmp
push
add
push
push
pusha
adc
add
add
add
push
add
sub
mov
es
jo
sub
and
test
mov
mov
jb
xlat
bound
dec
popa
add
inc
cmp
flds
dec
add
fistpl
add
jbe
orb
rclb
push
mov
pop
loope
movsl
adc
loope
scas
cmp
flds
pop
sbb
add
daa
xchg
or
inc
loope
ja
scas
mov
bound
popa
adc
std
push
movsl
xchg
xchg
or
sbb
fstpl
es
add
mov
add
cmpsl
pop
out
mov
and
cmpsl
or
adc
inc
pop
test
inc
data16
cmp
lcall
add
add
leave
xchg
pop
leave
add
push
sbbb
dec
int
and
add
push
jo
inc
aam
mov
ja
and
lcall
imul
loop
call
fistpl
inc
imul
inc
jmp
lahf
add
add
push
gs
je
andb
pop
mov
push
dec
mov
inc
sarl
xchg
fnsave
push
lcall
sub
adc
imul
fs
mov
and
lods
add
jno
std
dec
cmp
cmc
push
outsb
insb
les
ss
cwtl
inc
icebp
pop
shrb
mov
sbb
mov
mov
pop
mov
mov
inc
and
out
dec
pop
and
mov
je
sarl
subl
xchg
mov
ret
ljmp
into
aas
sbb
pop
lods
ja
lods
jo
cltd
jp
adc
sbb
dec
rcr
and
mov
push
dec
pop
mov
add
push
shrb
imul
pop
inc
jmp
pop
sbb
inc
jmp
adc
rcrl
add
add
shlb
and
push
inc
sub
and
dec
fs
aas
sub
jo
jecxz
push
push
addr16
inc
inc
push
push
shl
pop
popf
mov
mov
rorl
sbb
adc
addl
mov
pop
outsb
sbb
xor
cwtl
ret
pop
loope
mov
dec
sub
jbe
in
gs
lock
mov
or
aam
push
orb
xchg
adc
subl
mov
sbb
pop
out
push
xlat
sbb
mov
add
jecxz
lods
lret
popa
sar
xchg
repnz
fldt
xchg
or
inc
mov
inc
pop
xchg
addr16
xchg
sbbl
push
adc
pop
imul
xchg
nop
sbb
dec
add
mov
popa
shll
sbb
cmc
sub
mov
mov
lods
push
jl
pusha
ja
inc
mov
add
adc
xor
mov
das
pop
xor
sbb
adc
push
xor
imul
add
add
pop
push
outsb
push
mov
rorb
push
gs
sub
dec
icebp
arpl
addb
and
dec
xchg
mov
addr16
inc
rclb
xor
dec
cmp
fwait
int
dec
pop
mov
inc
pop
repz
pop
jae
push
sbb
aaa
jmp
and
pop
jmp
cmpsl
test
ds
xchg
fcoml
cmp
inc
xchg
out
in
and
adc
jae
mov
pop
fcomps
sub
das
sub
jo
sub
dec
outsl
or
ss
sbb
mov
aad
inc
add
jbe
cld
or
sub
and
negl
and
inc
sub
push
jle
roll
lods
pop
inc
imul
add
sub
mov
jb
sub
in
mov
clc
aaa
cld
dec
mov
adc
popa
add
mov
inc
insb
mov
sbb
sbb
dec
jb
stos
pop
xor
andl
inc
aam
pop
enter
ficoml
xchg
dec
mov
movsl
iret
dec
out
ret
inc
push
dec
push
xor
fists
ss
push
push
test
sbb
mov
movsl
push
int
ss
and
xchg
dec
add
push
ljmp
sbb
jge
push
outsb
sbb
inc
inc
imul
adc
outsb
mov
and
push
scas
push
fidivrl
outsb
adc
fmull
sub
jnp
ficomps
sub
jp
sbb
push
fldl
out
dec
xchg
and
sub
push
fnstenv
dec
cs
fiadds
inc
inc
jmp
and
insl
jmp
pop
sbb
xor
daa
inc
pusha
mov
push
push
and
fwait
pop
fldcw
lds
adc
insl
mov
mov
pop
or
and
sbb
je
adc
mov
xor
mov
cmp
and
movl
icebp
icebp
pop
sbbl
mov
pop
bound
mov
fs
fsubs
jae
rol
cltd
push
push
adc
xlat
push
cmp
and
xchg
test
dec
aam
mov
bound
addl
aam
mov
mov
fisubl
push
daa
jnp
sub
inc
ret
and
rcr
adc
push
add
fldl2t
sbbb
add
dec
and
mov
cmp
mov
mov
or
or
test
or
ficoml
shlb
popa
in
adc
push
aad
loope
aaa
sub
and
sub
adc
test
or
inc
inc
jno
je
fnclex
inc
push
pushf
add
pusha
popa
data16
inc
adc
mov
or
call
sub
gs
cld
mov
pop
add
sub
push
or
xchg
mov
mov
lods
sub
add
pusha
addl
andb
lcall
es
adc
arpl
in
sub
arpl
aaa
lret
pop
sub
shll
adc
shrl
and
pop
in
pop
dec
aam
cmpsb
or
jp
sahf
mov
push
test
ss
xchg
and
cmp
inc
ror
add
movsl
add
inc
xchg
push
call
jo
arpl
ret
rcl
repnz
jae
bound
push
cmpsb
in
lea
out
push
sti
sub
or
ret
jge
cmp
mov
pop
sub
xor
jbe
data16
ret
pop
push
mov
or
inc
negb
jae
mov
popf
xor
add
pop
pusha
pop
mov
or
lret
pop
std
arpl
ss
inc
sbb
mov
lods
pop
pop
xchg
sbb
in
and
pop
cltd
push
ret
jo
aam
insb
or
or
test
cmp
insb
ret
add
jne
push
jo
sbb
push
inc
pop
ss
cmp
mov
push
test
aaa
in
push
outsl
orb
imul
imul
test
jno
loope
mov
push
dec
cmpsl
shrl
dec
int3
xor
mov
aad
pop
inc
daa
push
and
out
hlt
inc
mov
and
pusha
popf
cmpsb
xchg
aaa
inc
xor
sahf
data16
dec
jb
pop
out
cmpsb
cs
pop
and
sub
jo
adc
push
push
mov
mov
sbb
fs
cmp
sub
adc
testl
hlt
cmpb
sbb
shrb
fcmovnu
andl
adc
and
fdivs
test
sbb
fdivs
popa
sbb
mov
data16
sbb
insl
imul
jno
cmp
push
jb
pop
xchg
push
lds
cmp
mov
and
sbb
out
and
popf
or
popa
aad
sbb
inc
inc
inc
dec
lods
loopne
sbb
adc
xchg
mov
loope
lret
dec
push
pop
test
roll
insb
and
in
rclb
pop
mov
add
daa
or
mov
adc
and
xchg
sub
and
inc
sub
or
fisubs
inc
adc
xor
xorl
nop
imul
pop
outsl
fcmovnb
sbb
pop
jecxz
int3
outsl
or
fwait
sbb
and
movd
in
pop
add
mov
movsl
cwtl
dec
sbb
adc
and
inc
and
and
sbb
and
outsl
xchg
and
nop
lea
adc
add
imul
rcl
sub
lds
lods
sbb
mov
fsubr
gs
data16
adc
movsb
sub
dec
adc
pop
and
jmp
xchg
inc
jg
subb
add
bound
fs
dec
mov
inc
sub
mov
pop
push
xor
jo
dec
loopne
mov
test
adc
lds
dec
je
bound
popa
add
js
dec
outsl
mov
scas
pusha
sbb
adcl
cmpsl
dec
int3
test
xor
pusha
pushf
not
roll
and
addb
jns
jbe
push
push
adc
insb
xchg
cmc
push
adc
pop
xlat
or
js
push
jns
or
or
movsl
cmp
add
and
add
aas
mov
add
mov
add
sbb
daa
and
sbbb
sbb
and
int
add
add
cmp
lret
jnp
inc
out
dec
sub
adc
mov
pop
mov
jns
pop
xchg
mov
test
stc
test
daa
ljmp
sub
das
add
push
add
add
inc
incl
add
add
add
inc
add
inc
xchg
pop
push
inc
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
cmp
pusha
cmp
mov
