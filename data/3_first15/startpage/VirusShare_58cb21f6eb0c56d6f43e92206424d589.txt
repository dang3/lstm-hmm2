mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
frstor
dec
jmp
les
or
cmp
std
push
out
push
cmpsb
test
sub
mov
mov
loop
insl
fwait
push
je
add
sub
inc
sbb
pop
into
lret
loop
jno
xor
and
adc
mov
jns
bound
and
arpl
jg
xlat
fsubs
or
add
ds
add
cmpsl
insb
push
mov
cld
mov
cmp
mov
pop
call
xchg
dec
jmp
test
loop
jb
and
mov
icebp
mov
sbb
mov
push
jo
cmp
lea
pop
mov
push
or
and
dec
jno
je
pop
mov
cmp
mov
pop
btc
scas
jns
mov
icebp
lods
or
std
ljmp
push
ror
out
fbstp
xor
aaa
ret
xor
dec
mov
cld
mov
in
mov
and
inc
sbb
setnp
outsb
pop
cmpsl
addr16
or
or
dec
fucomp
ljmp
rol
lret
int
sbb
jp
jge
cld
imul
aaa
jecxz
xor
inc
int
sub
test
adc
je
out
pop
cmp
lods
mov
lea
je
in
adc
pop
rorl
jmp
and
inc
les
fidivs
mov
and
mov
or
repz
xchg
sub
mov
inc
push
push
cmp
pop
loopne
xchg
cwtl
mov
shrl
ss
sub
faddp
jge
int3
scas
add
test
pop
push
mov
jecxz
xor
cmp
sub
rcrl
lods
addr16
cs
in
xchg
test
fstpl
mov
pop
insl
ret
add
repnz
jl
mov
jno
or
outsb
xchg
cwtl
insl
loop
cmp
dec
inc
adc
aad
push
ja
mov
sub
sbb
sub
into
fidivrl
cmp
xor
mov
sbb
jae
pop
xchg
push
mov
mov
sbb
imul
xor
adc
out
xchg
fdiv
fidivrl
imul
mov
dec
sub
jp
xor
out
lcall
sbb
popf
je
sahf
mov
jbe
cmp
add
xchg
push
mov
in
stos
mov
clc
lret
dec
popf
int3
aad
hlt
pushw
jbe
aam
lea
std
pop
cli
cwtl
cltd
cltd
pop
cmp
insb
pop
dec
dec
xor
inc
negl
dec
cli
jge
pop
lea
mov
int
cmp
ds
adc
nop
das
mov
jno
arpl
jb
push
fsub
xchg
pop
xchg
mov
add
arpl
pop
js
and
mov
into
fs
rcll
aad
push
lea
pop
mov
sbb
push
jmp
mov
pop
shlb
push
fbstp
dec
mov
fidivrs
rol
lds
pop
cmp
jmp
into
cmc
mov
mov
cmpl
jmp
dec
popl
xor
int
cmp
xor
fiaddl
xor
mov
xchg
notb
xor
int3
iret
xor
fsubrs
idivl
movsb
fiaddl
sub
aas
fnsetpm(287
jnp
lock
test
repz
mov
cmp
dec
jae
nop
ljmp
jne
xor
or
pop
stos
lock
test
sbb
adc
repz
add
pop
mov
xorb
push
out
jecxz
sbb
int3
push
setle
cli
push
ja
adc
or
std
cltd
jne
push
cwtl
mov
lcall
mov
movsb
mov
cmp
shll
mov
dec
xlat
adc
mov
mov
lret
fwait
bound
ljmp
daa
fbstp
add
mov
or
sub
popf
aas
fdivl
mov
repnz
push
sbb
test
mov
cmp
dec
out
mov
fcomps
rcll
enter
or
shrl
or
and
and
iret
fsub
mov
sub
jo
dec
fnstcw
rclb
sub
inc
outsl
mov
inc
adc
imul
in
pop
xor
shl
outsl
jmp
jnp
push
popa
aad
jb
pop
jb
enter
pop
push
mov
xchg
sbb
pop
jns
pushl
lret
jb
add
test
sbb
mov
shrl
dec
into
call
mov
xchg
enter
inc
push
stos
or
mov
push
cmc
mov
int
or
dec
es
xor
add
clc
xchg
test
adc
in
jnp
mov
push
into
fisttps
pop
repnz
sbbl
int3
shll
shll
cmp
pop
ret
or
test
mov
fmul
hlt
pop
daa
sub
les
fcoml
test
in
mov
push
subb
mov
dec
call
jne
popa
sarb
dec
sub
push
into
xchg
jne
cmpb
aad
cmpsb
push
test
inc
pavgb
mov
loopne
xor
addr16
sbb
mov
test
cltd
xor
test
xchg
popl
pushf
je
mov
and
add
push
cld
loop
or
sbbb
loopne
imul
sub
jb
push
fidivl
test
pop
pop
mov
push
fxch
xlat
sub
inc
ficoml
dec
push
aaa
scas
add
xchg
ja
ljmp
and
push
loop
mov
xor
dec
sbb
aad
mov
lahf
inc
and
push
cmpsb
out
sub
out
stos
inc
int
ja
add
push
jecxz
adc
add
repz
and
xor
stc
adc
pop
xchg
nop
xchg
mov
add
rcrb
int3
mov
and
jmp
or
dec
ds
cmc
dec
jmp
mov
sbb
sbb
jb
loope
pop
sbb
les
adc
in
arpl
movsb
dec
add
pusha
mov
inc
jmp
cmp
pushf
into
mov
test
adc
pop
sbb
loopne
clc
fcmovnu
xchg
outsl
iret
sub
aad
cmp
xchg
lods
xchg
cld
cld
and
jle
pop
fdivl
pop
js
adc
sbb
mov
jge
int3
stc
insl
pop
je
movsl
xor
mov
pop
into
sahf
adc
fcomps
sbb
sub
aam
je
js
pop
pushf
int3
sub
mov
jae
movsb
das
loope
cmp
fmul
in
mov
mov
push
icebp
decb
scas
inc
lock
sbb
ror
mov
dec
lods
pusha
bt
inc
rorl
lods
or
pop
inc
jnp
stos
jbe
sub
ret
mov
lds
bound
daa
gs
jp
arpl
shrb
sub
pop
sub
loopne
pushf
mov
scas
mov
out
jo
sub
inc
stos
fwait
xchg
imul
movb
out
inc
call
dec
push
xorl
shlb
aas
shlb
xor
cmpsl
mov
sub
mov
daa
inc
ret
add
and
pop
sub
jb
xchg
and
addr16
sub
and
mov
mov
cmc
dec
cmc
mov
imul
call
xchg
ret
add
lock
lock
loopne
sbb
cltd
aam
pop
mov
in
cmp
and
push
scas
dec
insb
cmp
test
in
or
dec
std
repz
jnp
ret
jo
in
cltd
out
sbb
fs
adc
mov
mov
shr
push
sbb
push
mov
popl
int3
xchg
jns
adc
pop
popa
faddl
repnz
pop
jmp
or
xchg
xor
lcall
push
lods
sub
xor
shlb
cmc
cmp
push
pop
adc
gs
xchg
mov
bound
bound
jb
inc
fmulp
fsts
aam
lret
mov
fsts
punpckldq
movsb
fdivrs
mov
or
roll
shrl
push
popa
xor
xchg
jle
sub
mov
adc
adc
lret
mov
mov
mov
pop
ja
fsub
sbb
mov
lahf
sub
les
or
sbb
mov
pop
outsb
int
mov
jmp
ss
and
out
and
inc
rcrb
stc
negb
out
inc
pop
add
rcr
shrl
jmp
stos
jp
out
sub
fimuls
popa
fsubl
movsb
mov
add
sbb
loopne
mov
lahf
lea
xor
sub
adc
and
push
mov
push
and
enter
andb
xchg
int3
dec
loop
outsl
fneni(8087
out
pop
push
and
jne
test
and
aam
mov
in
adc
lock
push
adc
sub
call
fidivrs
dec
sub
adc
lahf
decl
inc
xchg
shrl
or
adc
inc
xor
scas
in
out
xor
jmp
push
out
mov
cmpsl
popa
movsb
mov
push
int
lock
out
nop
lods
rclb
rcrl
orl
jbe
add
add
mov
loope
push
je
jecxz
mov
pop
daa
dec
add
fsubs
jno
and
sub
jmp
inc
mov
fsubrl
jp
lcall
xchg
call
push
addr16
adc
add
insb
cs
mov
scas
iret
sbb
insl
dec
out
push
adc
loope
insb
insb
dec
aam
xor
nop
mov
lods
xor
into
push
pop
dec
sbb
lcall
adc
sub
rcl
mov
lea
lds
jg
mov
pop
jmp
lret
test
sbb
push
rcr
rcrl
in
mov
add
fildll
arpl
xchg
in
add
cmp
mov
in
mov
repz
loopne
mov
or
ljmp
outsl
das
pop
js
insb
popf
aas
andl
outsl
pop
jne
ja
push
jnp
add
jle
imul
loope
cld
xor
jle
popa
mov
xchg
pop
mov
and
leave
in
sub
cmc
ffreep
mov
cmpsb
ljmp
inc
push
pcmpgtw
insl
mov
xor
mov
add
cmpsl
pop
mov
movsl
lahf
adc
rol
and
cmpsl
pop
test
jb
in
rcrb
arpl
in
cld
or
outsb
mov
out
test
fcomp
cmp
cmp
mov
jnp
loop
into
cmpsb
adc
ss
cmp
jns
lret
ret
ret
push
push
mov
adc
ja
sbb
les
push
inc
sbb
cwtl
test
lret
mov
pop
mov
mov
or
push
inc
pushf
imul
xor
cli
addl
inc
fdivrs
push
loop
sbb
add
adc
dec
bound
jp
fnstcw
stc
cli
es
outsb
xchg
loop
mov
cmpsb
xchg
and
pop
inc
add
jae
cltd
pop
stos
mov
out
adc
inc
pop
inc
cmp
jne
sti
jno
inc
and
lahf
sbbl
sbb
pop
inc
cmp
cmp
inc
jg
inc
popa
add
jge
int
pop
cltd
cmc
arpl
ret
insl
jo
fdivs
ret
repz
jb
sbb
bound
push
addb
rolb
rorl
push
std
pop
adc
out
shl
mov
inc
xchg
in
adc
mov
daa
or
insl
mov
mul
and
add
mov
sbb
loop
jg
scas
xchg
cmp
push
xchg
mov
aas
fwait
jecxz
out
inc
pop
mov
insb
adc
pop
and
gs
insl
scas
pop
dec
cmpsb
out
ja
add
pop
stos
inc
xor
dec
addr16
cld
cli
clc
inc
ficompl
pop
or
dec
pop
lret
cmpsb
in
out
je
mov
mov
xchg
in
test
mov
ror
jno
lret
xlat
xchg
xor
test
clc
pop
add
jmp
lcall
test
repz
pop
sbbb
ss
outsl
in
push
xchg
inc
aas
out
lock
scas
mov
daa
ss
inc
daa
jbe
adc
cs
sbb
mov
repz
xchg
paddb
jb
daa
lods
jmp
mov
in
ljmp
ja
mov
inc
push
xchg
sbb
icebp
inc
push
mov
mov
test
mov
test
idivl
xor
lock
test
rcr
aam
repnz
call
add
icebp
clc
sbb
and
inc
xor
mov
out
scas
adc
lods
mov
cmp
pop
push
inc
into
jbe
jne
xchg
imul
lahf
mov
sbb
imul
lods
xchg
iret
lahf
push
pop
xor
mov
ss
shll
mov
adc
mov
dec
mov
mov
xor
rcrb
popa
dec
adc
cli
enter
sbb
jae
add
dec
or
cli
xlat
dec
cld
xor
cmpsb
lock
adc
mov
popa
lock
fmuls
sbb
aad
shr
lcall
leave
ss
clc
sbb
and
in
stos
sbb
sahf
mov
fstpl
gs
cmp
shll
or
mov
mov
pop
pushf
dec
or
dec
in
adc
jmp
das
fdivrs
faddp
or
inc
mov
mov
jmp
mov
fs
sub
insb
jne
movsb
mov
call
sub
jno
push
movsl
mov
lcall
loope
and
leave
loopne
mov
and
jg
fldl
pop
add
push
mov
loop
mov
jae
stc
mov
cmp
daa
jae
pop
insb
inc
push
jecxz
or
dec
das
xorl
mov
and
imul
repz
jmp
add
mov
sahf
std
lret
das
movsl
arpl
sti
cwtl
push
mov
ds
int3
add
push
pop
sbb
jno
inc
push
cs
jg
cmp
sub
add
xlat
out
mov
lcall
movl
jo
jnp
inc
pop
xor
lahf
and
inc
pop
cmpsb
shlb
xchg
or
pop
mov
testl
fndisi(8087
pop
std
fadd
ror
push
sti
mov
fsts
inc
dec
mov
dec
add
sti
jne
push
push
jae
nop
sub
es
nop
enter
leave
xor
pusha
pop
xchg
mov
in
cmp
inc
in
dec
out
and
dec
lcall
shll
aaa
shrl
xchg
and
int3
orl
adc
or
std
adcb
fstl
jge
nop
sbb
push
sbb
inc
ret
push
or
inc
mov
cli
shrb
ljmp
mov
out
enter
loop
sbb
mov
pop
jb
aaa
mov
inc
dec
add
inc
sbb
mov
mov
lfs
testl
and
xchg
push
pop
mov
sahf
jno
gs
icebp
pop
xlat
stc
jecxz,pt
cmpsb
sahf
xchg
push
sbb
pop
inc
jns
push
sub
ret
movb
inc
sub
adc
nop
pop
xor
cmc
cmp
push
push
insb
rcrl
inc
aas
mov
jo
xchg
inc
fnstcw
xor
rcrl
insb
loop
jnp
dec
jb
pop
sbb
xchg
lret
lret
pop
imul
stc
enter
push
mov
loope
add
test
and
sbb
jge
mov
lret
lret
sti
inc
xor
and
loopne
insb
inc
push
fwait
mov
pop
hlt
mov
and
jle
mov
pushfw
inc
jecxz
fwait
pop
jb
push
shr
popa
in
xchg
ja
sarb
and
popf
outsl
inc
das
lret
lds
inc
nop
movsl
cmc
dec
add
enter
scas
mov
dec
nop
mov
mov
dec
xor
jno
aas
rolb
push
inc
jge
stos
shrl
add
lods
and
pop
test
adc
pop
mov
outsl
push
es
gs
mov
sub
mov
or
arpl
jns
inc
das
adc
pusha
jae
add
and
in
cld
push
push
mov
mov
mov
sub
repnz
std
push
or
loopne
adc
mov
push
push
adc
loopne
ds
fldenv
sub
es
loopne
mov
outsb
inc
push
push
mov
or
int3
mov
popf
mov
cli
mov
aad
push
pop
xchg
mov
push
add
in
mov
sbb
shll
pop
icebp
sbb
cmc
dec
insl
test
sbb
aad
sbb
adc
jbe
push
fcmove
scas
sbb
int3
xchg
sub
jo
sbb
daa
jo
xor
jae
cmp
test
xor
xchg
inc
sti
pmuludq
add
jge
cmpsl
fdivrs
mov
adc
cld
jbe
push
jecxz
cwtl
add
push
mov
imul
test
xor
xchg
repnz
adc
add
xor
ss
stos
jne
fwait
call
out
pop
ja
js
adc
push
daa
sbbl
sbb
enter
jl
test
mov
jo
cmp
insl
pusha
add
inc
inc
push
adc
push
jb
pusha
add
cmp
jae
xchg
cmp
push
jnp
insb
push
lcall
mov
mov
fdivs
adc
cmp
dec
aam
jle
push
mov
jg
pop
sub
negl
lods
cwtl
or
mov
movsl
sub
cmp
jp,pn
fldenv
aaa
jb
imul
mov
mov
scas
lods
gs
ret
sbb
push
aaa
test
fwait
jns
sti
push
pop
test
inc
repz
test
push
dec
scas
push
push
push
gs
jns
cmp
rorl
jmp
jle
cli
jmp
mov
inc
inc
add
jno
and
add
adc
and
add
mov
jno
lcall
pop
jae
mov
xlat
lahf
fisubrl
inc
cmp
dec
mov
rorl
xchg
jmp
sub
pop
cmp
icebp
rcll
adc
lds
cmp
xchg
aad
sub
cmpsl
lahf
sub
jmp
push
xor
sub
dec
mov
jno
jnp
movb
mov
add
adc
and
test
in
orb
icebp
xor
in
jecxz
and
jb
bnd
sbb
out
repz
imul
add
sbb
sbbl
mov
or
push
mov
lahf
pop
inc
xchg
pop
cld
mov
or
das
iret
hlt
push
xorb
psllq
xor
repnz
jl
inc
jns
out
xacquire
iret
ret
cmp
loopne
es
mov
mov
scas
xchg
out
xor
dec
ss
shlb
and
push
jecxz
xor
xchg
push
adc
jp
or
xchg
lahf
xchg
div
mov
out
lods
js
and
push
aam
and
or
xor
inc
test
xor
in
ljmp
mov
outsl
mov
mov
in
mov
adc
lods
ret
mov
or
cli
or
rorl
inc
xchg
xor
xor
mov
jnp,pt
enter
or
cmp
mov
lea
cmpsl
xchg
or
out
push
fwait
and
pop
ss
iret
aas
xor
imul
pop
arpl
scas
mov
cmc
dec
ljmp
xor
push
scas
mov
test
int
imul
loopne
push
sarl
mov
or
xchg
mov
push
sti
insl
aas
das
lcall
xchg
pop
jbe
jo
cltd
xchg
dec
nop
sti
cld
dec
mov
fcmovnb
fmul
jno
xchg
push
push
sub
leave
ret
lret
inc
fistpll
and
adc
inc
sub
xchg
inc
lahf
sbb
xlat
mov
pop
mov
imul
and
pusha
add
sbb
jl
mov
and
jg
aaa
ffreep
xor
aas
dec
pop
mov
cmp
inc
insb
dec
add
mov
out
cs
fists
gs
fs
xchg
cmp
push
lcall
mov
jno
cmpsb
shll
adc
sbb
aam
cltd
scas
nop
and
int
adc
je
inc
inc
adc
xchg
xchg
sub
cmp
sbb
cmp
mov
sbb
dec
adc
pop
dec
sub
aam
insb
jge
sub
xchg
idivb
mov
outsb
mov
ss
daa
xor
pop
adc
scas
lods
movsb
cltd
sbbb
pusha
repnz
mov
aas
xor
sbb
mov
pop
ja
in
scas
pop
dec
bound
push
loop
repz
shll
xlat
jne
int
jp
repz
loop
lahf
enter
cmpsl
jmp
add
loope
ss
cmc
mov
repz
fwait
lods
jecxz
mov
xchg
add
iret
arpl
or
jmp
scas
fwait
stc
mov
dec
in
cld
sub
mov
insb
cmp
cmc
repnz
lahf
sbb
mov
mov
mov
xchg
and
out
sub
test
test
dec
js
and
rorb
lea
popf
outsb
adc
push
out
clc
test
cmp
and
ss
adc
jnp
imul
fmull
sub
xchg
sarl
cmp
pop
ret
rcll
int3
shll
out
pop
outsb
in
and
outsl
mov
mov
jecxz
aas
nop
movsb
je
mov
loop
mov
rcl
or
pop
fbstp
jmp
loopne
push
mov
push
inc
cmp
xchg
scas
ret
daa
call
mov
cmpsl
int
dec
push
mov
ret
cmc
mov
inc
ljmp
pop
push
dec
lods
rorl
jo
push
mov
pop
mov
jg
outsl
jb
insl
outsl
sub
xor
js
xchg
add
mov
and
and
ret
sub
xor
es
xchg
cmp
push
jbe
lcall
fwait
out
dec
cmpsb
or
sbb
pop
mov
push
subl
push
cmpsb
insl
ror
daa
and
std
bnd
rcrl
inc
mov
adc
into
push
pop
leave
loopne
sti
test
fwait
inc
cmp
movsb
add
mov
push
push
cwtl
nop
fbld
add
mov
cli
mov
and
xor
outsl
dec
bound
mov
loopne
pop
aam
fs
push
and
fstps
and
mov
outsl
jo
or
fdivrl
imul
aad
dec
sbb
cld
test
mov
pop
jmp
adc
sub
lcall
enter
loop
jge
rcl
imul
ja
sub
loopne
fidivs
xchg
pop
out
pop
pop
jo
repz
and
and
jnp
mov
shll
add
sbb
mov
clc
imul
scas
dec
insl
in
or
out
push
shlb
jmp
or
sub
leave
sub
adc
push
dec
mov
notb
mov
sbb
xchg
aaa
into
add
pusha
call
addl
xlat
inc
repz
insl
outsb
push
outsl
loop
arpl
test
inc
add
fs
mov
jmp
mov
jmp
stos
xchg
lds
xchg
inc
xor
test
pusha
pop
int
xor
sbb
aam
or
mov
or
xor
aaa
xchg
dec
inc
ret
push
jnp
dec
jecxz
push
lock
cli
movsl
or
xor
jp
scas
daa
xchg
std
test
jb
adc
push
inc
pop
out
lock
pop
push
push
shll
mov
pop
mov
push
scas
push
repnz
sub
cs
mov
xor
nop
sub
inc
inc
call
xor
adc
mov
sub
cltd
mov
adc
daa
subl
icebp
loope
daa
sbb
jl
lahf
adc
inc
sub
mov
pop
cmpsb
sti
xor
mov
test
mov
lcall
mov
data16
jns
or
or
push
inc
xchg
mov
stc
cmp
flds
xchg
jb
notb
scas
xor
xor
gs
sbb
push
addb
stos
test
add
ret
jne
stos
adc
mov
sub
mov
push
out
loope
int3
cmp
xchg
insb
adc
inc
adc
pop
fdiv
jnp
loop
sbb
cmpsl
jno
cli
adc
mov
mov
cmp
dec
jne
insb
sub
inc
xor
adcl
lds
jo
xor
jns
mov
adc
repz
sub
add
mov
roll
inc
jle
cmpsb
xchg
stc
add
sub
stc
dec
mov
movb
int
inc
jbe
pushf
sbb
xchg
or
pop
insb
out
jecxz
imul
cmp
mov
cmpsl
jecxz
orl
xor
xor
ds
daa
fsubl
add
divl
pop
inc
sub
cli
scas
das
outsb
xchg
daa
popa
sub
cld
jle
jbe
push
pop
mov
jge
sbb
pushf
jne
in
mov
inc
call
sahf
test
pop
xlat
scas
dec
cmp
push
popa
movsb
mov
xchg
je
int3
add
repnz
xor
xor
lret
and
test
push
pop
jle
pop
les
je
adcb
mov
or
fnstcw
lret
add
stos
lcall
fadds
pusha
icebp
jp
cmp
sbb
dec
pop
sbb
sub
aad
out
clc
std
dec
ret
mov
pop
insl
insl
inc
sti
pop
adcl
jae
aaa
sub
jg
add
ss
cs
and
cltd
xor
imul
and
rcrb
or
pop
aaa
or
or
mov
mov
bound
xor
mov
in
cmp
pop
mov
test
shrb
pop
imul
cmp
mov
imul
movsl
shll
add
mov
lods
fidivl
cltd
xor
daa
iret
sub
and
add
aad
repz
mov
les
mov
in
imul
pop
lcall
neg
sbb
icebp
lods
add
rolb
loope
fists
lret
push
into
fldl
pop
outsb
filds
add
rcrb
fildll
scas
loopne
push
js
mov
jecxz
jb
push
aad
cmpsb
adc
adc
cwtl
pop
fimull
decl
inc
scas
out
cmpsl
les
push
mov
sbb
mov
shl
movsb
lcall
pop
movsl
sub
push
push
cmp
and
or
pushf
sarb
inc
into
dec
out
clc
add
mov
lcall
outsl
cli
std
dec
push
push
add
in
leave
fistpll
mov
std
push
mov
fsub
enter
fdivrs
push
stos
adc
mov
mov
add
test
aad
or
imul
dec
jne
jo
enter
out
lret
in
data16
cmp
movsl
xor
ss
xor
mov
loop
aas
enter
arpl
clc
arpl
and
int
aaa
xchg
insb
inc
addr16
pushf
add
shrl
sarb
push
in
fwait
in
or
test
add
incl
or
xchg
mov
cwtl
mov
dec
mov
sbb
in
ljmp
dec
sbb
movsb
push
xchg
and
sub
das
in
xchg
mov
pop
outsl
divb
shrb
repnz
lret
add
jo
ficoml
and
sti
bnd
jns
pop
dec
sub
mov
enter
pop
in
sbb
insb
inc
xchg
lcall
mov
push
mov
inc
mov
inc
push
ja
sbb
es
mov
mov
mov
setp
cltd
roll
lret
and
mov
add
pop
scas
push
push
rcl
fbstp
dec
ds
jo
xchg
clc
js
fwait
es
andw
popa
testl
mov
loop
jo
out
cltd
stos
mov
call
and
loopne
mov
addr16
adc
lahf
dec
mov
inc
mov
push
stos
lea
adc
jp
mov
ret
popa
xchg
sub
or
jae
and
imulb
jmp
test
shll
div
dec
scas
shrl
in
xchg
cmp
out
test
mov
jecxz
push
mov
push
adc
adc
das
rorb
pop
lds
fs
mov
loope
jnp
jmp
es
inc
jp
sbb
cwtl
cwtl
movsb
inc
xchg
lds
loopne
sbb
mov
rcl
enter
lock
test
cmp
in
cmpsl
jp
dec
aaa
mov
addr16
cmp
xchg
jns
insl
imul
mov
subl
sbb
incb
or
sbb
mov
cwtl
leave
out
jbe
pop
mov
or
aas
dec
jp
stos
mov
add
fistpll
push
and
mov
sti
fmulp
pop
negb
aam
test
test
xchg
test
push
cmp
xor
add
ret
pop
addr16
lods
cmpl
cmp
js
xchg
dec
lock
pop
enter
push
out
push
int3
adc
movsb
add
daa
mov
pop
aad
mov
mov
imul
and
xchg
ss
sub
xor
add
stos
pop
int3
push
sarl
in
sbb
in
xor
adc
fdivrs
fwait
out
adc
pop
push
test
jne
push
xchg
inc
push
and
mov
add
jb
or
jmp
sar
testb
leave
fs
aad
xor
mov
ret
dec
int
xor
bound
icebp
and
and
adc
sbb
cmp
xor
pop
cs
sub
mov
call
push
cmp
or
sar
repz
cmp
fs
fsubl
adc
inc
inc
imul
insb
fstpl
andl
push
leave
jo
out
and
pop
int3
adc
fnstenv
aaa
out
mov
lods
and
das
jb
xlat
lods
mov
pop
inc
and
aas
add
stc
mov
inc
adc
xchg
and
pop
mov
in
popl
sahf
sub
pop
imul
pop
ljmp
and
sub
leave
loopne
into
in
dec
add
push
call
jae
jne
stos
aas
dec
push
adc
pop
loopne
rorb
pop
insb
adcl
call
pop
cmp
adc
cmpsb
repz
push
pop
xor
pop
mov
dec
in
lods
cmpsl
lods
and
mov
fdivrl
mov
inc
cs
xchg
leave
mov
repnz
dec
stc
dec
xor
cmp
push
ljmp
nop
aam
sbb
cld
or
or
das
fs
mov
add
icebp
jne
mov
rcr
or
clc
pop
pop
jno
leave
jne
mov
bound
cmc
sbb
movsb
dec
pushf
push
or
and
stos
dec
rcrl
cmp
xchg
and
popa
mov
lret
rorl
mov
dec
push
js
push
leave
adc
repz
inc
mov
lahf
or
and
int3
push
out
cmpsb
mov
les
aam
fmuls
xchg
mov
inc
imulb
xor
mov
sbb
lret
inc
leave
sbb
sbb
cmpsl
and
xchg
xchg
xchg
xlat
push
xor
mov
js
jbe
out
push
mov
cwtl
es
and
or
lahf
loop
out
push
addb
cmp
push
nop
enter
add
scas
sbb
aad
scas
push
aam
xor
cmpsl
adc
mov
sbb
insl
in
fs
das
lods
das
pop
loope
jge
out
aaa
push
jb
ja
push
ja
or
or
fcomps
arpl
dec
loope
mov
cmpsl
mov
stc
xor
js
ret
fisubl
mov
mov
pop
jge
mov
mov
inc
jecxz
inc
mov
jbe
imul
roll
mov
jp
repz
cmpb
or
pop
iret
add
outsl
push
test
pop
cmp
jp
out
out
xchg
xor
aas
pop
xchg
sbb
je
cwtl
int
lret
cmp
xor
repnz
out
or
fildll
dec
enter
dec
jno
in
jl
pop
push
movsb
aaa
xchg
gs
xchg
adc
lret
pop
jbe
ss
js
jl
js
inc
push
mov
pop
fbstp
inc
lret
sbb
mov
insl
xchg
or
lret
push
aam
stos
call
aam
mov
mov
rorb
decb
aad
movsl
sbb
xchg
and
js,pn
stos
add
ljmp
jp
js
xchg
xorl
sar
dec
pop
sbb
stos
or
popa
push
cld
dec
fs
jge
pop
lret
jp
es
dec
xchg
jb
mov
mov
lcall
cmpb
xchg
jb
mov
fwait
sarb
jecxz
xlat
into
popf
xor
jae
add
lods
out
ja
int
stos
shr
shl
imul
or
gs
sbb
inc
xor
ds
repnz
jecxz
mov
mov
aad
movsl
sbb
mov
inc
ljmp
test
push
mov
jno
les
std
xchg
loopne
inc
dec
mov
and
mov
ljmp
insl
in
fsubrl
aas
pop
xchg
xchg
xorb
mov
dec
pushf
cmp
div
sahf
shr
aas
ljmp
sbb
xchg
dec
test
rcr
or
and
jnp
pop
aaa
pop
ret
stc
adc
jae
xchg
das
leave
outsb
cld
sub
adc
xor
notb
mov
pop
lcall
ret
cltd
jbe
xor
movl
adc
inc
fisubl
jmp
or
xchg
dec
sbb
ret
mov
adc
mov
jns
popa
jae
arpl
pop
jp
mov
cld
add
push
adcl
fldl
push
rcll
dec
or
lcall
inc
out
inc
out
insb
cmp
popa
mov
pop
mov
push
dec
fmuls
aaa
push
aaa
mov
shlb
push
std
dec
push
jb
pop
cmpsb
incb
and
push
scas
pushf
ret
push
fmull
daa
icebp
add
ficompl
sub
or
in
xchg
pop
push
inc
mov
or
out
mov
movsb
ret
fistpll
or
push
ret
dec
loopne
fs
jle
adc
sahf
fwait
std
add
stos
jae
adc
pusha
enter
mov
lret
jnp
push
push
cmc
mov
xchg
cmc
cmp
stc
dec
mov
ret
inc
xchg
mov
add
les
insb
or
mov
xor
pop
fiadds
jle
sahf
mov
push
sbb
inc
mov
fidivs
mov
in
cltd
divb
mov
cmp
pop
xor
pushf
repnz
rcrb
xchg
push
sub
cmp
or
jbe
enter
jb
pop
add
pusha
mov
jle
loopne
xchg
mov
inc
dec
sahf
sbb
xchg
in
pushf
xchg
nop
stos
lcall
cmp
stc
jl
xor
mov
add
test
inc
xor
lds
push
inc
jae
in
push
dec
pop
cmc
dec
dec
sar
push
leave
aad
imul
repz
cmp
decl
out
insb
mov
jmp
push
scas
xchg
shlb
fadd
inc
sahf
inc
dec
xlat
mov
pop
xor
jmp
les
scas
mov
jl
adc
in
xor
jae
loope
nop
gs
stos
dec
std
xor
push
loop
sub
sbb
mov
lods
or
add
hlt
mov
mov
xor
adc
or
dec
mov
or
push
dec
hlt
scas
xchg
ss
outsb
cs
lds
adc
jne
and
mov
sbb
mov
fwait
pop
cmp
xor
imul
lods
inc
inc
mov
out
jmp
jae
stos
sub
fsincos
hlt
pmulhw
aaa
rolb
idivl
add
gs
and
push
mov
int
outsb
int3
or
push
add
rcr
jmp
jb
lret
xor
xor
movsl
mov
mov
rcr
rorl
aam
mov
aaa
xchg
push
mov
arpl
nop
push
inc
out
dec
lods
stc
add
and
shll
fstpt
jg
out
xor
lods
movsb
clc
jnp
cmpsl
sbb
lea
lock
fldl2e
mov
loop
pusha
repnz
sub
testl
xor
lcall
mov
cmp
dec
data16
or
fcomps
inc
dec
aad
in
mov
bound
test
sbb
outsl
ds
sub
add
cmp
pop
fs
sub
orl
adc
mov
inc
jle
mulb
cmp
repnz
call
xor
dec
mul
jns
lods
imul
je
mov
push
sub
lock
fsubrl
or
lock
mov
cli
pop
fwait
jbe
push
les
mov
pop
pusha
mov
pop
ljmp
jge
pusha
push
leave
shrb
cltd
jns
cmp
nop
ret
lods
inc
aad
addl
movsl
movsl
and
je
roll
adc
jge
sbb
inc
or
dec
cmp
or
clc
repz
xchg
mov
pusha
insl
test
mov
add
pop
sbb
push
xchg
clc
pop
leave
and
inc
inc
jne
push
and
pop
pop
mov
into
ret
mov
popf
push
inc
dec
pop
scas
add
cmpsb
jne
lds
cmc
testl
das
loopne
mov
call
mov
lret
repnz
data16
in
je
pop
faddl
in
mov
fisttps
sbb
fisttpl
cmpsl
sbb
xchg
xchg
pop
mov
test
stos
cmpsb
in
adc
vpmacsdd
jnp
and
cs
out
jecxz
enter
ret
sub
les
pop
cmp
repnz
sbb
lret
dec
xchg
movsl
int3
lahf
xchg
popf
sub
mov
xor
mov
pop
data16
add
aad
xchg
mov
adc
loope
mov
imul
adc
lods
iret
fcomps
pop
mov
jp
sti
bound
stos
daa
int
call
mov
dec
movsb
jecxz
aam
xchg
jo
mov
je
adc
jnp
jg
in
fcomi
jbe
gs
xchg
dec
cmc
ss
push
sub
add
push
inc
push
mov
out
xchg
jo
add
cltd
sbb
movsb
loop
inc
loope
mov
pop
ret
inc
xchg
sub
bound
sbb
jp
mov
stos
cmp
jne
cld
js
push
stos
mov
lds
insl
jns
mov
stc
jno
push
add
in
mov
loop
lea
sub
loopne
dec
addr16
xchg
das
pop
out
fisttps
ljmp
sbb
dec
inc
push
outsb
pop
test
jne
push
sub
insb
cltd
jns
mov
mulb
cwtl
mov
std
jnp
mov
cmpsl
and
lahf
pop
stc
fwait
ja
fmull
inc
test
jmp
jnp
test
popa
sbb
cmp
mov
std
out
push
insb
mov
ljmp
loop
adc
mov
mov
xchg
mov
and
jge
cmovne
ljmp
sahf
lahf
push
inc
jle
pop
sbb
dec
push
xchg
rcl
mov
push
push
mov
subb
imull
jb
outsl
loop
add
int3
xor
out
cmc
and
mov
inc
mov
lahf
xor
cmpsl
ja
mov
sub
cmp
pop
ss
cltd
mov
sbb
test
fnstenv
jae
mov
adc
and
aad
jns,pt
xor
jne
aad
pop
jae
xor
push
adc
and
push
mov
add
xor
cmpsb
push
jbe
inc
ja
in
jle
xchg
mov
pop
cmp
pop
mov
fsubrp
add
and
call
imul
jl
inc
mov
mov
mov
setns
insb
fidivs
mov
cmp
sub
sbb
loope
adc
lock
mov
ds
cmc
xor
mov
clc
aad
sbb
xchg
and
stos
xchg
icebp
and
fnstsw
stos
cmp
enter
xlat
movsb
sahf
lcall
in
stos
jns
scas
add
xor
jge
push
and
icebp
dec
dec
out
pop
add
in
xchg
in
mov
and
xchg
icebp
jnp
jp
aas
imul
enter
cld
cmp
adc
push
mov
xor
das
out
in
sti
push
pop
mulb
test
lret
jb
jp
addl
xor
aaa
xchg
repz
jle
mov
pop
shl
mov
cmp
scas
cmp
mov
mov
xchg
fadd
xor
add
out
fadds
negb
adc
mov
hlt
and
shl
or
mov
mov
into
pop
pop
movsl
push
sub
mov
mov
sub
xor
gs
push
test
xor
nop
call
stos
pop
movsb
ds
adc
push
add
shr
lods
pop
xchg
lahf
jmp
cli
mov
dec
outsb
fdivp
pop
jle
xchg
jp
jns
fisttpl
lret
jno
cmp
int3
out
scas
je
ret
sub
mov
aad
ret
add
out
inc
or
aad
sbb
jae
testl
push
mov
clc
mov
sub
jmp
dec
outsb
lods
pop
movsb
out
mov
adc
bound
add
cltd
xchg
inc
mov
pop
push
test
xor
std
shll
push
call
jp
ljmp
in
jmp
ljmp
mov
cmp
adc
imul
adc
or
rorb
sbb
lods
sti
bound
mov
inc
in
push
xor
inc
int
jns
mov
push
dec
movsb
xchg
fstpl
jb
mov
dec
jb
sub
cwtl
push
into
xchg
loope
pop
lea
push
cltd
fisubrs
jmp
cwtl
mov
mov
inc
cltd
in
sarb
add
movsb
push
scas
out
pop
call
xchg
inc
inc
sbb
xchg
nop
or
je
das
inc
cmp
movsb
mov
jecxz
incl
pop
call
add
sbb
pop
loope
ret
push
cmp
pop
xor
sti
out
icebp
lock
mov
lock
cmc
pop
into
push
xor
jecxz
sbb
lods
sbb
sbb
fwait
out
fadd
inc
sti
or
fimuls
lret
fucomp
daa
movsb
fucomi
clc
xchg
mov
push
mov
es
dec
cmp
test
loopne
mov
test
in
mov
jge
int
inc
out
lret
jmp
call
xlat
dec
add
push
or
pushf
mov
div
pop
cmp
pushf
std
leave
or
and
inc
inc
jle
push
ds
loop
adc
sbb
fwait
jne
pop
mull
aad
rcll
call
rclb
mov
sbb
addl
loop
test
hlt
mov
fsubrl
or
popa
stos
hlt
mov
and
sub
scas
sbb
rcr
out
sub
jo
sbb
cmpsl
fisubs
xchg
in
mov
popa
and
jb
push
outsl
mov
insl
xchg
cmp
push
imul
inc
into
sub
pop
pop
cwtl
dec
xchg
mov
out
or
movsl
les
and
arpl
les
xchg
scas
orb
pop
ljmp
cmp
iret
das
insb
cmc
enter
adc
mov
inc
jmp
clc
lret
jbe
and
xchg
lods
ds
mov
int
mov
inc
push
mov
inc
insl
movsl
es
ja
lahf
std
cld
xchg
lcall
sub
popf
lds
fidivs
int
aas
pop
and
mov
pop
fbld
idivb
andb
subb
cmp
mov
xchg
or
enter
sub
jb
xchg
aaa
dec
sti
sbb
and
pop
cmovge
roll
inc
arpl
jle
xor
nop
ret
test
popf
repz
loope
sub
das
sub
cmp
orl
in
pop
adc
repnz
dec
int
mov
pop
sub
lock
arpl
je
arpl
rcrb
jg
lock
pop
nop
and
fldt
sub
sbb
push
out
int3
mov
ret
addr16
inc
movsl
je
mov
sbb
test
out
or
sub
xor
lods
loope
jns
sarb
mov
lds
outsl
andl
fisubs
xchg
std
inc
push
adc
rol
ja
jge
push
xchg
in
ja,pt
enter
rorl
inc
je
pop
mov
mov
pop
or
sub
add
push
out
adc
lcall
mov
sbb
orl
scas
addr16
test
ret
fcomp
fisubl
outsl
rolb
add
mov
adc
repnz
sbb
push
xor
dec
mov
jo
push
jno
ljmp
idiv
jne
fdivr
mov
loopne
mov
std
xor
add
lods
adc
jle
clc
or
push
add
mov
into
sub
xor
sbb
in
lock
scas
pop
xor
cmpsl
jge
push
movsb
pop
xchg
gs
jns
ret
cmpsb
inc
aam
xchg
daa
and
dec
push
daa
xlat
cli
cmp
push
lea
icebp
popf
sub
or
mov
daa
je
mov
mov
inc
mov
and
insl
xchg
pop
shrl
divb
adc
into
pop
mov
mov
pop
sti
fmulp
push
arpl
rolb
pushf
movsl
fwait
inc
bound
jle
dec
cmc
push
dec
jmp
mov
mov
xchg
iret
dec
pop
out
imul
jnp
scas
inc
mov
test
sub
xchg
mov
jns
movsb
nop
pop
mov
adc
das
pushf
out
lock
dec
lods
sbb
fldl
dec
rolb
cmc
imulb
cmp
xchg
jmp
or
pop
repnz
ja
ljmp
pushf
mov
add
adc
mov
cwtl
repnz
mov
adc
mov
fwait
lret
lcall
xor
cltd
jmp
pop
adc
ljmp
rcrb
pop
adc
cltd
adc
out
pop
and
in
inc
sub
add
js
nop
das
cmp
mov
test
adc
addb
mov
dec
mov
mov
mov
sub
mov
je
inc
bsf
cmp
jns
xchg
jp
dec
into
and
int
mov
pop
std
movsb
jecxz
push
mov
hlt
out
push
adc
pusha
push
shr
aad
mov
leave
ret
dec
cmp
clc
push
iret
sti
stos
shll
mov
add
mov
jno
fstps
lea
int
nop
ret
jl
dec
push
lods
stos
stos
shlb
movb
and
lods
add
fistpl
fidivrl
std
iret
movsl
mov
adc
sub
jno
cmpsb
fldl
leave
adc
dec
movsb
mov
dec
nop
sbb
pop
paddb
sbb
mov
sbb
cmp
push
or
iret
daa
orl
inc
sahf
jg
pop
add
lcall
jbe
icebp
xor
jb
push
call
aam
and
mov
cld
sub
enter
enter
mov
sbbl
push
lahf
cmp
cmp
lahf
cmp
push
pop
xor
add
xor
popa
add
and
xchg
clc
push
leave
nop
lods
pop
jns
faddp
inc
icebp
cmp
adc
inc
repz
pop
and
int
mov
movb
clc
add
jnp
vmread
add
scas
je
push
shl
orb
jb
sarl
or
cmc
push
jg
sub
nop
andb
cmp
mov
sbb
in
mov
mov
es
jno
roll
int3
cmp
adc
test
add
jg
push
jmp
push
adc
mov
xor
pop
inc
adc
test
mov
or
jbe
inc
in
adc
in
and
fisttps
bound
sbbl
int3
sbb
xor
add
pop
lds
cmpb
mov
add
add
xchg
jno
push
inc
mov
aaa
push
lock
cltd
push
ret
sub
push
and
insl
stos
pop
stos
rcl
repnz
mov
nop
out
push
jbe
icebp
push
pop
aam
hlt
pop
inc
sub
push
fisubl
cmpsb
pusha
test
jb
je
jle
loop
movsl
jp
test
fldenv
aam
in
ja
notb
mov
imul
lret
mov
hlt
push
cmp
pop
push
jae
mov
mov
rorb
iret
xchg
jo
daa
mov
lahf
pop
test
int3
mov
out
ja
pop
push
jecxz
and
fxtract
or
sbb
mov
add
or
and
push
and
lods
jle,pt
mov
negl
or
enter
in
adc
lods
sbb
gs
xchg
inc
mov
mov
test
xlat
aaa
pop
or
daa
mov
push
push
test
das
cmp
hlt
and
popa
fcomps
dec
and
sub
je
lods
xor
jg
cmpsl
mov
pop
mov
loope
cwtl
cmpsb
mov
push
lahf
lock
out
xchg
roll
outsb
lock
xor
and
int3
pop
dec
push
inc
arpl
push
xchg
pop
dec
and
in
notb
jecxz
insb
leave
pop
mov
cmp
dec
sbb
cmc
inc
outsl
ret
inc
iret
fwait
mov
cmp
xor
shlb
lret
mov
bound
push
lret
add
adc
xchg
rcll
lret
loopne
fwait
ret
and
out
or
addr16
repz
jne
push
iret
xchg
or
sbb
inc
fcomp
push
sub
xor
nop
push
stc
mov
adc
ret
ljmp
data16
addr16
jmp
pop
mov
cmp
repz
pop
scas
loop
test
sbb
push
xor
xchg
xchg
addl
pop
orb
fmulp
aas
and
insb
inc
mov
mov
sbb
or
in
ja
out
xchg
in
mov
or
or
push
or
jg
in
popa
popf
mov
scas
mov
and
add
shll
das
scas
popf
movsl
jge
mov
jmp
mov
xor
pusha
dec
stos
and
lods
repnz
decl
dec
xchg
fcoms
lret
sbb
fcompl
xchg
notb
lods
mov
dec
and
add
add
mov
mov
movhps
rorl
call
inc
fmull
fistpl
outsl
cmc
mov
or
icebp
cld
nop
pop
arpl
imul
adc
sub
ret
xchg
xor
in
pop
adc
in
fdiv
imul
mov
dec
test
mov
jnp
and
inc
das
xor
jne
sub
shrl
scas
mov
push
push
ja
arpl
push
fldz
inc
ficoml
cmp
orb
dec
cmpsb
outsl
dec
faddp
imul
lea
xor
std
pop
imul
sbb
pushf
lods
sbb
out
sbb
mov
aad
xor
iret
cmp
mov
cli
mov
ljmp
sbb
mov
dec
stc
jg
cmp
jae
out
mov
js
rclb
movsb
push
dec
inc
daa
dec
repnz
lahf
int
scas
ljmp
push
xor
cmp
jbe
ret
xchg
and
pop
sub
imul
xchg
out
cmp
xchg
aam
or
imul
add
sbb
mov
or
fsubrs
cmpsl
sbb
jle
in
fiaddl
das
sub
jl
loope
lahf
loopne
clc
shll
inc
imul
into
pop
ret
push
mov
insb
sarb
sarb
cmpsl
stc
decb
scas
cs
ss
scas
inc
fcoms
std
movsb
sbb
or
fiadds
dec
in
or
mov
lods
jecxz
mov
dec
lcall
data16
int3
mov
inc
bound
loopne
sti
decb
cmp
test
addb
orl
inc
insb
sbb
stos
test
insb
adc
test
pop
and
sub
mov
xor
out
movl
adc
sub
ret
movsl
lcall
das
or
mov
mov
popa
fcomps
inc
xor
outsb
loop
leave
lods
cmp
jg
pop
sub
mov
xlat
sbb
adc
push
popf
mov
out
cs
lret
jge
pop
outsl
xor
sub
mov
mov
sbb
sbb
repnz
je
mov
adc
xor
dec
push
inc
aas
jmp
int
or
mov
in
aas
ja
cwtl
test
or
xchg
push
daa
xchg
mov
inc
hlt
cmp
in
sub
cmp
loop
or
adc
xor
stos
insb
jo
push
sub
jmp
mov
push
mov
add
sbb
sbb
stos
je
dec
dec
ficoml
ljmp
dec
ja
and
pop
pop
sub
out
jns
xchg
mov
mov
js
mov
aaa
dec
push
test
shlb
mov
push
mov
xchg
aam
xchg
mov
out
outsl
aas
inc
shrl
push
push
jmp
cs
das
xchg
add
and
sub
sub
stc
or
aaa
arpl
pushf
popa
in
cltd
stos
sub
mov
cs
pusha
popf
test
in
or
dec
jle
leave
mov
nop
push
sub
jnp
or
mov
and
scas
fldenv
fnstenv
mov
jp
jp
and
add
mov
ret
cmc
pop
xchg
xor
and
out
out
mov
jne
fwait
cmp
mov
repnz
fimull
xor
vpmuludq
mov
mov
mov
lods
mov
or
ljmp
mov
xorl
inc
jg
stos
or
bound
pop
pop
push
cmp
dec
xchg
sub
mov
adcb
and
sarb
add
je
lods
mov
rcrb
fsubs
push
and
popl
in
rolb
jnp
popa
add
jb
sti
dec
add
stos
push
rorb
xchg
pushl
divl
push
mov
cmp
push
dec
dec
inc
mov
pop
cmp
push
outsl
xchg
cmpsl
fdivrs
pop
jle
out
shll
inc
sub
jo
rcr
popa
xlat
or
or
dec
in
sub
cmp
cmp
xor
xchg
xchg
mov
into
mov
pop
pop
lret
add
jbe
ficompl
jle
movsl
push
push
and
dec
sub
repz
scas
stos
cmpsb
jno
pop
ja
cmpsl
dec
out
xor
jne
aad
hlt
mov
loopne
mov
cmpsb
insb
imul
cmp
popf
stos
fs
pop
pop
mov
data16
out
dec
out
cmpsl
adc
cmpl
int
addr16
je
loope
in
aam
enter
jmp
test
lods
mov
inc
add
fldt
les
pushf
mov
pop
pushf
fisttpl
dec
imull
test
cmp
xor
cmp
pop
pusha
nop
jmp
andl
dec
cmp
dec
imul
inc
xchg
add
loop
add
nop
sbb
mov
sbb
out
xor
sbb
cmp
dec
xchg
and
dec
cmp
xchg
packssdw
jne
dec
aaa
xchg
cmp
push
xor
lret
mov
dec
jg
jbe
mov
xchg
les
or
imul
pop
hlt
and
fidivs
pop
xchg
inc
pop
mov
shlb
sahf
imul
or
jbe
int
mov
push
fadds
cmp
fistpl
scas
mov
cmc
rclb
xor
std
mov
aad
scas
shrb
cmpsb
xchg
fdivrl
lea
jns
push
cmp
jnp
or
adc
or
lds
pop
out
icebp
lret
dec
rcl
int3
push
and
test
xchg
int3
leave
and
inc
add
dec
je
aam
lret
jno
xchg
or
add
out
inc
fxch
inc
jno
inc
scas
mov
mov
sub
cmp
aam
gs
lahf
das
mov
scas
inc
jae
push
fcmovb
pusha
and
xchg
movsl
mov
orb
stos
shll
add
mov
cmpsb
pop
iret
sbb
cmpsb
in
xorl
std
pop
push
adc
lds
pusha
xor
cmpsl
icebp
sub
pop
imul
cmp
xchg
nop
pop
add
mov
sub
shrb
or
es
add
jg
pop
cwtl
aas
ja
mov
jnp
aaa
dec
mov
push
sahf
in
xchg
push
inc
mov
push
xor
add
cmp
jg
notb
lahf
and
jg
mov
fwait
ret
cs
add
sbb
loope
imul
lcall
push
dec
cmpsl
xchg
cmp
add
and
sbb
xor
xorb
jp
rcrb
lret
adc
mov
dec
out
jb
sbb
fs
lcall
xchg
in
adc
call
fcmovbe
aad
insl
sub
mov
or
imul
clc
sahf
push
ret
mov
daa
add
lret
jns
into
clc
jge
pop
das
xchg
inc
arpl
lock
nop
std
pop
in
popa
push
lods
mov
pop
push
xchg
outsl
cmp
ror
push
xor
imul
out
imul
mov
xchg
xorl
sbb
outsb
inc
xchg
mov
fldcw
imul
outsb
leave
loopne
addb
mov
popf
rcr
test
mov
dec
ret
jae
sub
mov
cli
js,pt
mov
loopne
movsl
out
sub
dec
sbb
loope
pop
int3
leave
insb
dec
rcl
out
lretw
scas
jne
cltd
xchg
sarb
sbb
popf
ja
mov
idiv
xor
test
cvtps2pi
fstp
pop
ja
out
ja
and
sti
mov
repnz
fldt
dec
add
ljmp
xor
xor
jge
push
jne
mov
push
mov
or
jae
cwtl
sbb
mov
aam
out
popa
ja
cmp
xchg
cmp
inc
roll
add
add
scas
mov
dec
inc
or
cmc
imul
pop
cmp
rolb
and
adc
inc
mov
das
dec
or
loopne
int
sbb
sbb
add
mov
outsb
or
mov
shl
xchg
popf
pop
adc
xor
inc
dec
mov
loope
mov
lahf
sbb
pinsrw
lret
popf
mov
sbb
notb
cmp
push
aaa
nop
cmp
mov
aam
jle
out
or
stos
pop
push
test
es
push
cmc
out
xor
imul
push
je
and
xchg
xchg
pop
or
outsl
jl
lock
push
bnd
mov
movsl
mov
dec
addr16
ss
out
mov
jnp
push
inc
xchg
out
repz
jne
cmp
popf
lahf
add
sub
xchg
orb
mov
pop
push
jb
leave
out
mov
xchg
push
jp
xchg
enter
lahf
jecxz
out
sub
and
mov
sub
scas
add
xor
sbb
div
xchg
xchg
xchg
mov
out
in
add
adc
das
sti
mov
mov
sbb
outsb
xchg
sub
dec
cmp
xchg
add
in
adc
movsl
sarb
movsb
cmpsl
xor
mov
fildl
dec
push
fstl
mov
in
sbb
pop
stc
int3
rcrl
pop
cltd
cmp
dec
add
gs
ret
xchg
xor
stos
hlt
cmpb
mov
mov
lahf
test
sti
cmpsb
test
add
xor
push
jle
jmp
cmc
mov
and
inc
cmpl
gs
push
rclb
push
lock
mov
fcoms
fadds
movsb
jg
loope
fnstcw
fdivr
stos
add
push
not
out
outsl
sbb
push
adc
rcrl
inc
mov
rolb
add
outsb
cli
jle
push
mov
aas
mov
mov
rcl
out
sub
pushl
mov
inc
pop
or
push
ret
insl
mov
sahf
inc
dec
cli
pop
shlb
xor
and
test
jne
xor
inc
xchg
aaa
inc
cli
lods
mov
int
adc
jmp
jbe
mov
test
add
in
jge
jae
xchg
pop
ret
stc
imul
cs
push
push
addr16
adc
adcb
mov
push
sbb
jp
fwait
push
lea
cltd
inc
shr
les
movlps
movsb
pop
pop
mov
cld
add
mov
jno
push
out
jbe
pop
push
mov
aam
fisttpl
into
fsubr
add
push
into
imul
or
insl
jg
mov
scas
mov
dec
add
subl
fistl
ljmp
test
cld
movsb
test
cmpb
mov
loop
jge
lds
in
pushf
scas
adc
xor
lret
add
dec
jl
pop
xchg
and
pop
pop
mov
bound
pusha
xchg
xor
stos
pop
into
sub
cltd
inc
sub
addr16
adc
leave
lcall
fmuls
not
sahf
cs
stc
enter
push
sahf
sub
pop
sbb
push
mov
loop
std
stos
call
gs
ss
push
out
add
adc
or
mov
fisubrl
outsl
adc
dec
imul
fs
stc
mov
rorl
push
jnp
xor
jmp
sbb
inc
subl
fs
scas
shrb
sbb
cmp
mov
popf
hlt
adc
or
int
pushf
push
jno
push
mov
aaa
lret
rcrb
cli
sti
ss
sub
pushf
cwtl
adc
je
in
cmpsb
frstor
pop
inc
sbb
fs
cmp
test
lea
pop
sahf
jno,pn
sbb
aaa
mov
pop
push
aam
sub
mov
sti
jb
test
jns
out
xchg
loop
lahf
mov
sub
leave
cmc
adc
mov
mov
loop
cs
sti
mov
in
je
mov
imul
daa
jl
or
out
test
mov
addb
fs
sbb
sub
mov
fwait
cmp
movsl
mov
shrb
adc
cmp
arpl
cmpsl
sbb
pop
loopne
mov
push
mov
out
mov
addr16
fstpt
pop
inc
lret
aam
clc
mov
faddl
gs
out
dec
std
scas
push
daa
call
and
and
aad
push
dec
fldcw
not
cmpsb
inc
push
cltd
jecxz
lock
xchg
into
jns
mov
imul
ds
push
dec
sub
adc
dec
xchg
cmc
mov
add
fsubr
insb
insl
testb
int3
pop
jecxz
push
xor
insb
sub
mov
sub
pop
dec
xor
xor
lea
repz
mov
and
xchg
js
push
faddl
lcall
mov
dec
mov
shr
sbb
roll
mov
xchg
test
into
push
mov
mov
js
xor
mov
mov
sub
pop
sbb
cmp
jb
pop
out
popf
adcb
rclb
out
std
pusha
add
ret
das
mov
mov
jle
daa
ljmp
rol
lret
pushf
test
or
sti
bnd
inc
mov
cs
adc
inc
sahf
cmpsl
pushf
in
iret
movl
iret
lahf
sub
push
xchg
xchg
adc
or
cld
cwtl
xchg
adc
btr
repnz
loopne
sub
mov
xlat
insb
data16
sbbb
je
dec
sbb
lcall
xor
or
sub
sbb
mov
in
and
mov
add
xchg
add
xchg
lods
mov
ret
pop
xchg
in
leave
jg
or
subb
inc
jns
cmp
addr16
enter
inc
dec
imul
inc
lods
add
mov
pop
and
xor
cmp
nop
push
rcrb
out
push
xchg
in
jae
push
daa
push
jbe
inc
pop
push
aas
dec
inc
es
pop
fsts
sub
call
js
gs
mov
ret
int
sahf
aad
push
shlb
lock
adc
pop
mov
add
out
cmpsb
cmp
xchg
inc
ja
pop
or
popa
mov
pusha
sarl
cwtl
testb
cmp
sub
stc
xor
retw
add
dec
xchg
xchg
or
loopne
sub
std
adc
scas
aaa
fstps
jnp
mov
mov
loopne
xor
add
movsl
inc
mov
pushf
cmpsl
imul
xor
or
or
cmp
mov
shr
dec
cmp
add
test
xorl
ljmp
negl
pop
repz
pop
xor
push
cwtl
mov
insl
in
push
stos
aas
inc
sub
push
fdivrs
xchg
out
mov
mov
mov
shll
mov
cmp
int3
sub
lahf
aam
or
mov
cltd
pop
sub
orl
test
subl
push
mov
pop
into
mov
jp
pop
addr16
lcall
adc
jg
cmp
pusha
ret
mov
sub
inc
imul
and
sub
xorl
adc
test
in
xchg
out
jne
dec
bound
push
pop
inc
test
mov
cmp
outsl
fcom
nop
jnp
mov
bound
add
xchg
lock
jmp
stos
int3
cmp
dec
bnd
adc
bound
les
add
loope
xchg
data16
stos
dec
scas
insb
outsb
push
shll
jmp
inc
int
mov
mov
xchg
stos
outsb
shl
lret
lock
test
movsl
pop
aas
xchg
sbb
mov
xlat
dec
test
cwtl
test
dec
inc
lahf
sbb
out
lea
sbb
in
popf
jge
jns
jmp
dec
add
push
jns
xchg
dec
decb
call
push
lret
jno
cld
out
enter
iret
push
into
pusha
aam
mov
add
test
jno
fldcw
cmp
imul
mov
cwtl
lahf
mov
in
repnz
push
rcl
and
or
jo
test
in
jge
in
push
out
in
inc
test
fadds
jecxz
ljmp
add
fisubrs
add
leave
and
in
int3
push
pop
loope
xlat
xchg
mov
xchg
fists
pop
insb
lods
cwtl
popf
jb
jbe
jo
mov
int
sub
sbb
mov
mov
mov
and
and
xor
sbb
sub
jne
sbb
outsl
popa
xor
pop
insb
inc
jo
jne
push
imul
rol
xchg
sub
ss
lock
scas
fs
xor
push
jl,pt
jle
fwait
cwtl
sbb
out
sbb
loop
call
lods
out
fnstcw
hlt
sub
xor
mov
fwait
out
and
cmpsb
sub
out
mov
xor
sbb
lea
out
bound
loop
push
mov
enter
sbb
pop
out
mov
cwtl
subb
out
fwait
xchg
pop
test
imul
inc
jp
add
xchg
add
pop
adc
inc
in
sbb
ljmp
sbb
sbb
xchg
xchg
mov
mov
not
push
sub
loope
xor
mov
loopne
xchg
sbb
adc
xchg
inc
popf
pop
jae
pusha
cmp
mov
cmp
subb
loopne
enter
data16
jo
mov
ds
test
fidivrl
push
jno
ret
cmpb
mov
jnp
mov
jae
jno
inc
cmp
divb
xchg
mov
pop
jb
push
add
insb
add
mov
adc
cmpsb
in
cltd
stos
push
mov
sti
hlt
loope
xor
adc
mov
dec
xor
in
test
popa
push
push
xor
xor
mov
push
pushf
sti
lods
sub
orb
fidivl
dec
xchg
dec
xchg
mov
dec
mov
insb
mov
adc
dec
push
cmp
lahf
ror
notl
pop
jge
or
popf
aas
lcall
inc
xor
jp
ljmp
adc
mov
outsl
and
nop
dec
jne
xchg
push
xchg
jmp
add
or
sub
xor
inc
addr16
pop
aas
inc
imul
in
stc
idivl
mov
mov
lretw
jle
dec
push
and
insb
das
push
mov
xlat
scas
xor
or
push
adc
fs
out
movsb
jns
je
add
lret
fwait
stc
test
jp
ret
in
cld
call
scas
adc
test
jb
insl
mov
push
xchg
out
fwait
icebp
dec
xchg
or
xlat
or
add
mov
mov
and
jecxz
ror
add
add
popaw
popf
cmpb
sbb
jns
dec
push
xlat
fdivr
vphadduwq
jno
or
popf
nop
stos
int
mov
mov
mov
pop
les
cmp
cmp
jns
jle
add
out
or
imul
stos
sbb
dec
scas
fsubrp
mov
fwait
scas
addr16
and
dec
mov
pusha
pop
adc
pop
xor
imul
je
xor
dec
pop
or
pop
fsubs
test
add
cmp
sbb
dec
lret
test
ret
cmpsl
enter
aad
mov
les
push
xor
mov
mov
add
sub
rol
scas
nop
test
loopne
xchg
push
cli
push
xchg
aam
sub
ss
int3
rep
cmpsb
movsl
push
xchg
dec
scas
push
mov
icebp
push
sahf
out
jb
sub
icebp
mov
xor
out
cmp
pop
lea
mov
or
sub
mov
adc
clc
jp
sbb
fcom
fisubrs
inc
jge
clc
shrl
sahf
scas
pop
mov
testb
pop
jns
jp,pt
cli
mov
xchg
or
xchg
lcall
fisubl
test
mov
add
add
inc
or
iret
cmp
adc
mov
jg
ds
push
sbb
aaa
cmp
lods
call
xor
adc
jae
inc
dec
mov
imul
xlat
ficompl
testl
clc
jne
or
nop
dec
stos
out
loopne
mov
scas
fimull
testb
pop
pop
xchg
in
rorb
stc
cmpsl
test
xchg
test
xchg
xor
jmp
inc
imul
jg
and
in
fdiv
pop
loop
xchg
stos
loope
fwait
mov
sub
cli
mov
sarl
repnz
jbe
stos
rcrb
sbb
lret
out
into
lock
sbb
mov
int
sub
popa
frstor
push
out
aam
xor
in
mov
cmp
mov
jb
inc
in
stos
inc
adc
pop
xlat
mov
cwtl
mov
xchg
add
out
mov
and
test
stc
aas
int3
xor
mov
lahf
rolb
enter
arpl
xchg
inc
xor
popa
push
cwtl
pop
hlt
test
mov
addb
dec
subl
shll
xchg
cltd
mov
cmpsb
in
mov
stos
scas
xor
imull
and
xchg
pop
sbb
shlb
sub
shr
pop
mov
xor
int
pop
cwtl
rolb
fwait
sub
mov
lret
subl
insl
outsl
pop
mov
xchg
cmpl
das
cmpb
dec
les
sahf
mov
fcmove
or
adc
mov
in
sti
aam
sbb
stc
jmp
adc
and
xchg
les
add
xchg
call
loope
cld
mov
xor
gs
fcmove
aam
jmp
stos
mov
repz
dec
jb
les
xchg
call
xor
push
xchg
ss
pop
sbb
sti
mov
addr16
inc
or
push
stos
xchg
mov
insl
aas
negb
cwtl
xor
loopw
sar
jmp
pop
sbb
movsb
clc
xchg
out
mov
fstl
jae
mov
fildll
leave
xlat
cltd
inc
std
mov
outsb
out
push
xchg
sub
data16
pusha
imul
outsl
xchg
inc
ret
add
sub
mov
out
jmp
adc
in
bnd
in
xchg
mov
and
ds
les
repnz
fistl
inc
mov
lret
sub
cmc
imul
jecxz
not
aaa
dec
into
sub
and
add
add
sub
pusha
or
stc
push
addb
cmpsb
out
pop
sub
inc
push
xchg
jne
cmp
pop
sbb
fisttpl
mov
cmc
test
je
jbe
mov
or
mov
je
mov
ret
jmp
fdiv
mov
lahf
add
adc
test
dec
cmp
repz
sbb
dec
cwtl
mov
std
aad
cltd
add
mov
roll
fdivrs
lods
imul
lea
cmc
cmc
pop
es
bound
iret
pop
aad
mov
shr
mov
cld
loope
fs
insl
jns
adc
mov
inc
test
stos
dec
xor
dec
push
mov
add
dec
shrl
dec
fidivrl
or
mov
pop
stos
push
jmp
loope
xchg
lret
push
xor
aam
mov
xor
xchg
mov
jecxz
push
add
jle
scas
xchg
inc
cmp
mov
popa
mov
dec
sbb
adc
insl
ljmp
or
ret
sbb
adc
stc
xchg
or
fs
xchg
mov
stos
flds
int
orl
lcall
cmove
pop
enter
testb
aam
mov
dec
xor
adc
push
js
add
inc
lods
xor
sub
jae
mov
sub
and
or
jle
and
cmp
arpl
cwtl
mov
adc
push
pop
loopne
mov
movsl
mov
notb
sbb
cld
in
stos
jns
movsl
cmpsb
pop
movsb
pop
or
cmc
mov
dec
dec
inc
out
call
inc
test
adcl
stc
or
and
cwtl
scas
pop
xchg
and
xchg
mov
jmp
sub
push
out
or
mov
jno
pop
mov
jb
push
xor
xor
jp
inc
bound
cmp
cmp
ret
adcb
ljmp
das
push
xchg
out
ret
push
in
adc
popa
pop
nop
mov
mov
jo
movsb
test
mov
xchg
jne
out
jbe
mov
sub
inc
pop
jge
shrl
mov
cli
imul
aam
bound
cwtl
movsl
xor
fnstcw
push
mov
lahf
cmp
sub
int3
lea
ret
xchg
fists
sbb
mov
sub
iret
in
hlt
ds
int3
scas
loop
cli
fldl
push
pop
cmp
rorl
fsin
add
pop
lods
icebp
add
pop
pushf
mov
stc
int
jbe
cmp
data16
fcomip
and
and
scas
sbb
scas
inc
mov
mov
imul
cmc
clc
ret
cmpsl
pusha
pop
das
push
scas
mov
sbb
mov
scas
pop
arpl
sbb
call
adc
std
aas
mov
fdiv
jp
pop
das
sub
test
ds
pop
sbb
dec
sbb
fs
test
inc
fwait
daa
sub
xchg
sbb
rcll
jns
push
dec
sub
lret
rcr
inc
test
or
repz
cs
aad
js
call
hlt
fisubrs
insl
cmp
sbb
adc
ret
fsubs
jne
push
fmull
aas
jecxz
adc
mov
icebp
movsl
push
pusha
outsb
push
repnz
rorl
cld
stos
rcrl
imulb
stos
cmp
ret
imul
mov
cwtl
xchg
jl
push
cmpsl
out
xor
xor
xchg
xchg
in
xchg
jg
pop
pusha
and
rorb
jae
xor
lods
stos
arpl
pop
push
in
mov
cmp
or
xchg
mov
jp
mov
insl
lock
mov
mov
sar
push
popl
jne
lods
and
xlat
icebp
lcall
and
test
aam
mov
adc
and
shlb
pop
aaa
add
push
xchg
mov
xchg
add
in
mov
sahf
xor
outsl
mov
sbb
xchg
mov
daa
adc
add
xlat
shrb
cmp
test
das
adc
cmc
shll
ret
cmp
aaa
shrl
out
in
push
xlat
adcl
fcmove
fstpt
jne
inc
call
ret
stos
cmpsl
scas
insb
lods
mov
gs
lock
addb
push
push
fimull
outsl
pop
mov
dec
test
addr16
aad
push
push
int3
mov
int3
stc
sub
dec
aaa
pop
xor
ds
mov
xchg
mov
mov
jge
ja
jl
in
inc
stos
cld
inc
xor
xchg
cmp
sbb
mov
xchg
or
movsl
insl
in
in
cs
xor
or
dec
es
aam
push
push
add
jmp
adc
sbb
jg
loope
mov
and
pop
fistpl
xchg
cmpsl
sbb
loop
pop
mov
jge
sbbb
out
push
stos
push
xchg
mov
mov
sbb
outsl
mov
scas
xchg
add
cmp
adc
sub
es
dec
lock
push
pshufw
mov
sbb
outsl
jecxz
imul
jmp
repnz
adc
mov
jmp
aam
jmp
out
ret
rep
mov
xor
jp
cmp
lahf
or
cmp
pop
cltd
xorl
in
lds
inc
xor
sub
in
xor
das
xchg
pop
xchg
pusha
push
fs
push
or
insl
movsl
or
lahf
xor
dec
xor
ja
test
out
adc
pushf
imul
mov
outsl
xchg
xor
bound
loopne
push
cmc
mov
fld
loopne
aam
sbb
out
sbb
das
rcl
outsl
jo
cmpsl
imul
adc
xchg
cmp
adc
xchg
loope
pop
jmp
enter
jns
mov
lret
lcall
mov
mov
and
cmp
adc
inc
sahf
jo
mov
test
mov
dec
and
mov
push
push
sbb
stos
shrl
popf
xor
mov
test
les
aaa
jb
cmpsl
rorl
cmp
mov
jl
jl
jo
cs
clc
mov
mov
push
sub
or
mov
cs
test
xor
psubsw
lea
jns
mov
sbb
mov
lods
int3
roll
inc
jo
cmpsl
sbbb
sub
int
pop
xor
test
test
mov
push
daa
cmpsl
sbb
dec
inc
addl
sub
ret
or
xor
or
or
inc
cmpsb
push
sub
push
sub
mov
mov
stc
cltd
jae
pushf
outsl
aaa
xchg
push
imul
negb
repnz
add
or
inc
js
arpl
je
sub
insl
or
daa
xor
sub
mov
daa
icebp
and
jae
jl
leave
bound
jno
dec
and
jo
pop
pop
fildl
inc
mov
add
cmp
jne
push
dec
insb
push
sbbl
int3
push
xchg
push
jecxz
or
lods
test
xchg
cmpsb
cmpl
xor
dec
nop
les
pushf
add
lahf
jp
mov
sub
jg
int
push
cwtl
in
call
adc
mov
repnz
les
mul
xor
cmpsb
and
inc
divl
test
xor
inc
mov
pushf
jo
mov
mov
mov
dec
push
jb
inc
in
jmp
lea
repnz
fwait
lods
jb
xor
out
cmp
jae
pusha
pop
xchg
sti
cmp
mov
pop
aaa
pop
dec
push
adcl
std
lods
push
test
in
inc
sub
xorb
int3
push
jbe
pop
lods
cmp
cltd
lea
outsl
cltd
dec
lret
into
pop
and
inc
dec
and
rcrb
repnz
bound
lods
ret
pop
push
pop
cli
mov
ficompl
push
test
mov
in
iret
sbb
adc
push
pop
clc
xor
lock
add
inc
nop
lret
mov
call
inc
loope
aam
dec
xchg
leave
sahf
cwtl
sub
xchg
stos
ljmp
mov
adc
jnp
rcrb
gs
lcall
add
mov
sbb
fmul
cmpsl
lods
or
mov
ljmp
pop
mov
jg,pt
daa
movsl
sbb
fistpll
and
fucom
filds
inc
pop
cmp
call
in
rcll
imul
push
mov
dec
xchg
loope
into
mov
loope
std
cmpsl
adc
shl
movsb
inc
imul
jbe
leave
lcall
test
pop
dec
mov
aaa
sbb
jno
mov
ja
sahf
jnp
mov
inc
push
orb
inc
push
fiaddl
adc
ffree
and
cwtl
lods
iret
jmp
adc
int3
push
mov
push
fs
adc
mull
cmpsb
xor
jmp
and
aam
mov
pop
lods
aad
jmp
in
cld
mov
mov
dec
loope
je
jbe
add
sub
ret
or
pop
sbb
lods
test
jae
xor
dec
insb
test
add
iret
jns
mov
pusha
gs
mov
lea
rclb
shlb
lcall
xchg
sbb
mov
mov
pop
sbb
push
inc
cmc
jp
cmp
adc
lea
xor
push
hlt
push
mov
push
mov
out
sahf
bound
insb
push
jnp
or
in
add
outsl
and
inc
xchg
movsb
and
out
mov
inc
insl
add
and
cmp
jb
mov
xor
lea
dec
imul
sub
loopne
mov
and
jns
shrb
xchg
sbb
cmp
addl
jbe
jg
mov
jmp
xchg
pop
fs
mov
mov
dec
pop
aaa
fnsave
hlt
js
lds
inc
or
repnz
mov
scas
pusha
jne
shrb
pop
add
pop
mov
cmp
add
fwait
and
or
push
push
adc
cmp
mov
and
mov
loopne
inc
mov
sub
aas
iret
push
push
mov
add
sbb
data16
dec
jb
fnstsw
cmp
pop
cmc
aad
pop
xchg
call
xor
mov
dec
adc
incb
out
sbb
fadd
mov
int3
cli
ja
push
cmp
aas
push
cltd
jg
enter
mov
jg
sbb
fs
rcrl
lret
popf
add
xchg
push
xor
pop
add
xchg
and
or
dec
jo
scas
sbb
cmp
mov
sarb
jge
negb
add
adc
sti
xor
add
cmp
cli
lcall
pushf
dec
xlat
xor
dec
lods
je
push
cmp
roll
inc
push
lods
cli
inc
das
jle
popf
aas
sarb
lods
jo
mov
push
jne
cld
cld
jl
mov
jo
test
mov
shrl
sbb
stos
add
mov
push
and
loope
pop
sub
cmp
sub
and
or
mov
addr16
out
mov
push
jecxz
xor
push
bound
pmaxsw
aam
sub
mov
iret
loope
scas
xchg
sarl
cmp
out
addr16
in
pop
flds
es
mov
sti
xchg
push
xor
lds
ljmp
push
add
insb
fldenv
ljmp
scas
inc
out
adc
ret
mov
in
add
mov
repnz
nop
mov
xchg
fwait
push
xchg
jecxz
jmp
push
jo
xchg
add
push
cmp
add
imul
enter
mov
xchg
push
pop
inc
pop
cli
rcrl
incl
cmp
int
js
pop
int
addl
insb
mov
inc
fnstenv
rcll
sbb
and
mov
adc
adcb
test
inc
insb
inc
adc
test
testl
nop
cmpsl
xlat
not
fldt
mov
pusha
mov
cwtl
insl
rcrl
lret
mov
cli
xchg
jle
jl
mov
pop
je
and
int3
aad
adc
push
mov
and
gs
test
add
push
lods
stos
mov
fs
sub
mov
mov
inc
jle
cmp
xchg
dec
mov
mov
sub
lret
xchg
xchg
push
inc
js
push
push
mov
sbb
repnz
xchg
adcl
pusha
fldt
nop
mov
push
sbb
xchg
sbb
cmp
clc
jns
pusha
out
push
cmpsb
in
push
ret
jle
pop
pusha
or
xchg
ja
insl
cmc
adc
add
or
mov
imul
jne
add
adc
ja
pop
add
pop
fucomp
xchg
mov
orb
dec
fsubl
pop
adc
push
lahf
aad
mov
mov
test
bound
out
add
fwait
push
mov
sti
push
test
in
mov
mov
cld
es
or
outsb
lret
sbb
fidivl
push
jl
mulb
xlat
xchg
jae
push
lret
mov
xor
push
pop
rcll
rcrb
lods
xchg
in
dec
add
arpl
push
push
movl
jmp
aaa
stos
outsb
mov
and
mov
jle
ret
sti
jae
movsb
cli
loopne
test
das
popf
out
pop
pop
xor
push
xchg
das
leave
push
arpl
add
fsub
jg
xor
fstpl
push
xchg
mov
gs
mov
mov
adc
xlat
insl
push
inc
mov
test
mov
mov
aam
push
sarb
bound
dec
aam
dec
or
scas
mov
pop
arpl
cld
in
stc
jp
in
rcrl
inc
pop
push
lock
cs
jecxz
stos
lret
jl
cmc
xor
loopne
cmp
jp
aaa
and
cmc
lods
xor
repz
ffreep
sbb
push
rorl
mov
cmp
pusha
rolb
pop
lahf
setl
in
cmp
out
dec
pop
mov
dec
xorb
cmp
inc
jo
sbb
push
andl
mov
or
jnp
int
mov
mov
lods
and
add
subl
jne
popf
insw
or
fcompl
stos
adc
mov
jns
scas
mov
push
pop
xchg
adc
outsb
stos
leave
cmp
lcall
das
and
fwait
sub
mov
jae
mov
fdivrs
scas
sub
stos
push
xor
lock
lock
ds
test
mov
pop
cmp
inc
add
push
xor
repz
jne
out
jns
insl
frstor
jbe
lds
pop
or
movsl
xorb
popf
cmp
jnp
out
daa
loope
xchg
insb
add
xchg
movsl
inc
and
sub
mov
mov
aaa
inc
lods
je
lret
out
mov
into
jl
lea
lods
fisubs
outsb
mov
pop
xor
lods
dec
nop
xchg
dec
jne
in
dec
shl
push
andl
jl
mov
jecxz
dec
push
mov
mov
xor
push
out
push
aad
sub
xor
cmp
ss
mov
cmp
xchg
lcall
loope
and
mov
enter
or
jle
jle
scas
push
mov
jg
and
bound
insb
push
test
lods
cld
jb
lret
push
jne
shll
inc
dec
xchg
sub
out
and
push
rorl
stos
insl
mov
hlt
lods
ret
push
inc
insb
xor
out
jns
jne
rcr
movsl
gs
add
ret
js
jne
pusha
cmp
insb
lds
negb
push
push
sbb
add
lods
mov
sbb
fnstsw
test
pop
push
jle
xor
pop
fdiv
jbe
sub
or
insb
ss
jno
and
dec
or
outsl
aam
jnp
test
int3
addr16
mov
xchg
out
movsl
fdivr
jno
mov
test
pop
ffreep
outsl
int3
mov
jge
gs
imull
sbb
adc
pop
nop
pop
in
xchg
inc
pop
cmp
shlb
dec
das
sbb
ret
and
push
std
loope
adc
cs
pushf
pop
push
xchg
jg
mov
in
shlb
and
gs
xchg
rclb
dec
ljmp
pop
fucomp
dec
lea
xlat
dec
shll
stc
mov
mov
les
jmp
popf
stos
sbb
fs
xor
jp
imul
popa
stc
movsl
jl
add
sub
clc
sub
push
clc
sub
sub
jg
nop
add
shlb
push
mov
jnp
or
imul
outsb
adcb
push
inc
andl
push
dec
sbb
movsl
jbe
nop
loopne
push
divl
push
call
cli
ljmp
add
rcll
aas
or
sbb
cmpsl
test
inc
ret
flds
dec
adc
pop
dec
mov
popa
xchg
dec
fidivs
cmp
jl
mov
scas
add
dec
ret
cmp
cmp
xchg
movsb
loopne
push
mov
adc
js
stc
bswap
in
mov
and
mov
mov
lret
int
repz
cmp
and
xchg
hlt
push
cmp
ret
and
xchg
negl
mull
inc
cltd
out
dec
fisubrl
or
jmp
lcall
sub
daa
lahf
stos
fld
cld
adc
int3
cmp
jns
sti
fldt
cmp
imul
shll
inc
mov
movsb
sbb
mov
lods
adc
mov
lcall
in
adc
jmp
scas
loopne
or
mov
ljmp
hlt
sbb
mov
ljmp
les
aad
rcrl
adc
and
ss
push
add
sub
neg
fistps
sub
cli
pop
jno
pop
xchg
sbbl
mov
in
fldt
out
jmp
jnp
or
xor
test
push
int3
xchg
mov
pusha
fwait
jle
xor
jl
mov
xor
mov
push
int3
inc
aam
dec
jp
test
inc
popf
mov
jp
push
or
xchg
cmpsl
cmc
inc
jg
dec
fcoml
mov
in
cmp
in
jae
cmp
or
inc
mov
in
jmp
push
lahf
daa
in
mov
xor
push
out
data16
sbb
and
adc
mov
xchg
movsb
xchg
pop
pop
ret
stc
fsubs
in
pop
dec
fmull
gs
sahf
ror
in
mov
in
inc
xchg
dec
inc
mov
inc
xchg
clc
subb
out
ja
loope
sub
or
sub
push
add
stc
fldenv
jmpw
sbb
das
dec
cmpb
out
add
adc
aaa
repnz
bound
adc
fstp
pop
shlb
call
sbb
or
leave
imul
mov
pushf
xor
inc
loop
aad
xchg
adc
std
stos
rolb
push
out
xor
das
flds
mov
mov
push
push
hlt
jb
cmc
rolb
push
sub
imul
push
cs
in
int3
pop
ja
xchg
or
add
and
std
rcll
idivb
inc
jo
arpl
jmp
loopne
mov
daa
dec
leave
nop
push
pop
mov
cmpb
push
and
xchg
shl
cli
add
mov
jg
and
xlat
adc
popf
or
imul
addr16
loope
fcmovnbe
adcb
sbb
lds
fadds
repnz
jno
fidivrl
test
xchg
cmc
lret
fldenv
js
add
les
pop
lret
cwtl
shl
jle
push
call
mov
fisttps
push
xchg
popa
xor
mov
incb
rcll
testl
mov
mov
adc
subb
mov
sarl
shl
xchg
push
sub
inc
int3
pop
stos
xchg
cs
adc
sub
pop
cld
lahf
xor
lret
popf
mov
fwait
call
mov
xchg
mov
dec
or
xor
xchg
push
lods
or
and
dec
push
call
or
scas
outsl
std
xchg
inc
pop
push
in
hlt
mov
aad
mov
mov
sti
push
xchg
je
loope
daa
sarl
lods
fadd
and
test
mov
push
daa
xor
imul
inc
or
int3
mov
add
stos
mov
leave
imull
mov
outsl
cmp
xchg
rclb
imul
mov
mov
inc
cli
xor
or
adc
fabs
arpl
inc
rorl
fisubl
mov
xorl
sbb
pop
test
cli
push
push
xor
inc
add
pop
push
jno
cmp
ficompl
lahf
arpl
das
shlb
cld
push
push
faddl
mov
addr16
stos
sbb
sti
ss
add
sub
loop
lret
clc
sbb
cmp
or
lahf
cmp
mov
stos
or
ficoml
movd
mov
packsswb
mov
test
loopne
mov
cmpsb
cltd
lret
push
add
add
stos
or
push
sub
push
mov
fstps
mov
ds
or
sub
fistpl
push
lds
sarl
movsb
or
sbb
jp
mov
cmc
es
fcoms
or
pop
add
cmp
xchg
lcall
imul
out
mov
sub
push
ret
pop
mov
int
xchg
mov
cld
mov
cmpsb
popl
inc
frstor
sbbb
imul
in
xchg
mov
or
out
mov
fildl
lea
inc
inc
cmp
add
mov
mov
mov
movb
das
xor
movsl
test
cmp
nop
adcb
mov
stos
in
inc
sbb
cmpsb
insl
shlb
sahf
jp
sti
xchg
aaa
repnz
loope
fldt
les
push
mov
fldenv
mov
inc
jge
adc
lea
in
sub
loop
jb
sub
into
add
es
fmull
inc
jl
out
fldcw
ret
or
pop
lods
or
inc
or
dec
mov
mov
xchg
pop
cltd
aam
push
fwait
mov
jb
jnp
and
scas
fisubrl
push
and
bound
bound
cwtl
ret
add
pop
add
fiaddl
mov
pop
lock
push
sub
xorl
lahf
pop
sbb
jle
test
cli
subl
xchg
leave
mov
aas
cs
gs
jp
dec
mov
cs
pop
sbb
or
xlat
fsubs
cmp
repnz
cmpsb
xchg
mov
cmp
and
mov
fs
or
and
pop
lods
imul
push
popa
jmp
mov
push
shr
repnz
lods
repnz
cld
into
inc
mov
imul
sub
mov
test
xor
stc
les
xor
jbe
xchg
cmp
cmp
test
out
sti
scas
ljmp
mov
cmc
add
cld
rcll
push
rcrb
jns
gs
jl
mov
adcl
nop
hlt
pushf
adc
inc
cmp
sub
into
jb
bound
dec
and
ds
xor
lret
push
fsts
mov
test
cmp
mov
lods
xchg
mov
jecxz
scas
adc
sbb
in
movntps
adc
jp
push
ljmp
ds
loopne
cltd
and
cmp
push
mov
and
adc
push
popf
scas
xor
into
add
loope
mov
imul
clc
sbb
inc
inc
xchg
popa
gs
rcrb
and
movsb
or
and
sub
jmp
jg
aas
ret
jle
add
adcb
mov
fwait
int
sarb
xor
shr
pop
cmp
xor
insl
push
int
rcrb
inc
in
push
stc
mov
popl
push
repz
lods
add
push
jo
lahf
imul
mov
lods
cs
test
cwtl
sbb
inc
aad
jno
mov
xor
out
outsl
push
xchg
and
je
inc
clc
push
mov
push
jnp
dec
dec
lock
add
adc
or
mov
cmpsl
dec
mov
test
lea
cmpsl
adc
xor
fld
and
cmc
fimuls
sbb
push
mov
lret
in
addr16
das
in
scas
arpl
enter
and
mov
in
insl
fmull
mov
fldl
xor
pop
movsl
jg
sbb
lret
lea
push
fidivrs
mov
pop
sbb
in
cmp
lahf
xor
mov
cmp
loope
or
push
mov
subl
add
rol
mov
out
xlat
inc
cmp
test
xchg
loopne
out
inc
mov
dec
divl
push
call
sub
inc
push
cld
inc
mov
mov
cmc
mov
xor
lods
or
mov
iret
add
and
fildll
cmp
push
fwait
dec
jae
clc
and
je
jns
jmp
push
scas
andb
sbb
jmp
add
mov
and
pop
adc
cmp
or
jg
mov
adc
inc
into
std
imul
xor
test
ret
cltd
pusha
jno
mov
or
out
or
jle
cmpsb
jno
adc
lods
pop
je
cltd
or
jbe,pn
push
fnstsw
dec
xor
sub
push
adc
stos
mov
jl
pop
loope
pop
push
cmp
lahf
jg
pop
popa
pop
lcall
jg
js
addl
sti
xchg
pop
mov
repnz
mov
call
aam
adc
adc
xchg
and
mov
jp
mov
repnz
pop
cmp
jno
and
pop
inc
scas
sub
mov
dec
mov
push
push
jl
es
in
cli
jl
fisubs
incl
xchg
inc
loope
repz
pop
inc
or
adc
cmp
and
rcr
push
shrb
test
ljmp
dec
andb
out
mov
loopne
int3
jmp
jae
data16
xchg
mov
inc
push
fbstp
xor
lcall
shlb
test
rorl
jb
jecxz
sahf
out
mov
sub
out
dec
aaa
and
lret
mov
out
adc
mov
ret
adc
bound
test
test
stc
insb
fdivrs
aad
bnd
in
dec
cmp
lods
fistpl
jnp
lahf
push
iret
cmp
aam
cwtl
sub
int3
xchg
and
es
in
mov
shlb
mov
sub
pop
loope
mov
add
mov
xchg
lahf
lds
into
fidivrs
push
xor
adc
sbb
imul
pusha
sub
loop
popa
push
mov
mov
mov
mov
sbb
out
lods
stos
stos
mov
dec
into
or
inc
sarb
jae
fdiv
inc
frstor
insl
inc
xlat
jle
mov
push
stc
nop
or
adc
cmp
popf
shrb
or
push
insb
out
push
sbb
sub
sub
das
jno
ficompl
cmp
pusha
mov
sbb
mov
test
shrl
push
fcomps
fs
dec
int3
loope
shll
push
add
lret
or
dec
nop
out
jp
mov
insb
cmp
cmp
mov
lods
or
test
addl
inc
jbe
jmp
nop
ret
pop
mov
dec
xor
mov
pop
mov
add
xchg
and
mov
inc
das
cs
fmuls
test
jmp
in
mov
cmp
xor
mov
sbb
movsl
mov
xchg
negb
scas
or
stc
stos
cmp
lcall
movsl
jb
cmp
movsb
addr16
push
pop
out
popf
adc
xor
xlat
mov
stc
fnstsw
negb
test
push
and
sub
mov
dec
test
psrad
mov
push
jecxz
pop
fidivs
sbb
addr16
mov
xor
loopne
in
mov
pop
adc
movsb
or
xchg
jg
and
ljmp
xlat
mov
push
ret
cmp
cld
xchg
xchg
stos
sub
adc
xor
add
jnp
testb
data16
bound
iret
icebp
mov
jecxz
aad
test
pop
fistpll
pop
mov
jmp
sub
adc
xchg
aam
jg
in
dec
push
ljmp
inc
or
leave
jbe
xor
sbb
push
stc
out
inc
mov
sbb
mov
outsl
dec
xchg
inc
cmp
bound
into
scas
fs
cmp
push
cmp
fst
loopne
pop
jl
adc
pusha
stos
fsubs
rolb
int3
mov
or
pop
pop
inc
or
lcall
inc
loope
subb
aaa
int3
xchg
es
pop
adc
in
cmpsb
ljmp
fdivrp
aaa
int3
ror
dec
push
add
negl
inc
dec
movsl
mov
gs
adc
inc
je
lock
sub
or
out
mov
xchg
inc
gs
out
inc
pop
or
shlb
adc
xor
test
stos
mov
mov
ja
psraw
fwait
into
in
les
ficoml
push
ja
into
add
cli
in
cs
xorl
xlat
inc
int3
je
cmc
repz
mov
insl
pop
fcmovnbe
arpl
jae
mov
xor
jae
or
or
jnp
pop
jae
xchg
mov
popf
dec
jo
nop
mov
pushf
je
icebp
scas
lret
xchg
xchg
pop
sub
in
add
jl
xchg
inc
mov
push
rorb
cmpsl
pop
mov
fisubrs
mov
ds
cmp
int
pop
xchg
ficomps
xor
jmp
add
lods
push
mov
push
dec
ds
add
add
inc
or
rorb
pop
pop
dec
rorb
mov
fs
sub
inc
mov
out
icebp
ljmp
outsl
pop
adc
in
lea
std
repnz
bound
sbb
push
mov
into
or
mov
adc
jl
sub
jl
and
in
dec
cld
sbb
jnp
and
push
push
dec
cld
xor
ret
xchg
mov
call
fisubrl
stc
in
adc
jno
dec
ljmp
in
mov
push
ret
fdivrp
pusha
loop
pop
mov
movl
cwtl
andb
jg
pop
out
enter
shll
divl
sbb
test
dec
scas
jno
cmpsb
add
test
or
dec
inc
lea
fisubrl
test
jo
ret
jo
mov
xchg
or
arpl
enter
or
pop
in
mov
test
jns
dec
cmp
inc
inc
mov
scas
aaa
aam
xor
adc
push
pop
or
into
jnp
push
cmp
or
and
xchg
mov
test
popa
or
lea
push
outsb
push
lods
test
and
outsb
fdivl
fstps
xchg
jb
in
mov
data16
xor
pop
dec
xchg
popf
xchg
dec
sarl
pop
arpl
xchg
in
mov
dec
fwait
lret
lcall
inc
repnz
js
sbb
pop
sbbl
lret
add
js
arpl
js
cmc
out
in
xchg
jns
mov
inc
xchg
push
cmp
inc
loope
in
pusha
lret
inc
test
cmc
jl
imul
mov
mov
xor
push
pop
xchg
xor
outsb
mov
add
sub
dec
inc
cmp
push
or
jbe
dec
out
dec
and
popf
jg
es
xor
icebp
js
out
and
sbb
fildl
insb
and
es
mov
pop
leave
xor
shll
sub
cmc
pop
xlat
jg
sub
push
clc
jl
sub
jne
jp
out
testb
lods
mov
lret
mov
push
iret
dec
and
cs
aaa
in
lahf
jbe
pop
sti
jl
pop
push
pop
xor
jae
xor
mov
insb
fcoms
push
sub
sbb
inc
xor
inc
daa
sub
loopne
push
sub
mov
int3
push
sub
cmpsb
mov
bnd
jo
xor
ss
stos
repnz
jge
xchg
mov
loop
or
fcomi
cmp
pop
push
xchg
pop
les
aas
aas
aad
and
into
leave
dec
fucomi
mov
xor
jp
orb
into
sbb
ljmp
jp
in
popa
aas
ret
pop
into
das
js
mov
sbb
sbb
mov
sub
push
inc
into
mov
cmp
fcoms
std
inc
shll
inc
mov
data16
dec
cwtl
inc
loop
lock
or
leave
xchg
arpl
mov
rcll
lea
sbb
ja
push
mov
or
add
adc
clc
cmp
outsl
sbb
aaa
pusha
cmc
mov
ja
mov
lahf
inc
mov
rcll
test
outsl
inc
xor
in
subl
or
inc
insl
stc
sar
mov
pushf
test
and
and
pop
adc
repnz
jno
sti
add
fistpll
sahf
adc
mov
std
mov
mov
repnz
cmpsl
shl
add
andb
incl
pop
add
imul
scas
or
dec
aam
or
inc
mov
pop
inc
mov
xorb
in
push
pop
push
loop
sub
mov
rorb
lcall
iret
test
mov
jne
xchg
je
or
add
and
loop
xchg
pop
shrl
cli
cmp
adc
lds
pop
pop
sbbb
sub
mov
cmp
fwait
jmp
aam
sahf
mov
mov
sbb
mov
dec
fmull
std
js
lret
xorb
std
notl
cld
test
inc
rclb
sbb
orl
scas
in
lcall
xchg
mov
cmp
xchg
dec
imul
ret
std
jne
push
mov
inc
aaa
push
icebp
into
popa
mov
xchg
je
cmp
or
iret
add
into
movsb
subl
or
stc
add
shll
repz
jns
xchg
push
dec
push
push
out
pop
mov
pop
shl
and
xor
pop
push
pop
pop
mov
ret
nop
mov
adc
imul
sbb
xor
xchg
mov
jge
shl
and
mov
cmpsb
iret
into
cmp
lea
iret
adc
push
sub
jno
repnz
xchg
aad
or
jmp
push
icebp
xchg
aaa
shlb
sbb
xchg
mov
lahf
les
adc
rcll
cmp
push
pop
cwtl
sub
scas
fs
add
cmp
adc
xor
dec
cltd
movsl
fidivl
rcr
enter
adc
mov
lahf
mov
sub
jecxz
push
loope
test
and
and
shll
jae
pushf
test
repz
lahf
and
hlt
push
movsb
dec
loopne
test
lea
ret
pop
mov
xchg
sbb
and
rorb
mov
test
sbb
sti
push
push
icebp
popa
inc
xlat
jmp
or
in
sar
fnsave
inc
xchg
daa
ja
imul
stc
add
in
repz
inc
inc
repnz
fsubr
ss
cmpsb
mov
pop
outsb
sbb
push
into
divb
jl
lds
dec
je
fs
mov
test
lods
arpl
aaa
inc
stc
pushf
fdivs
lods
sbb
push
shrl
xor
push
xchg
mov
sub
ja
jnp
mov
aaa
sbb
aad
sbb
xor
orl
cmp
fmull
loope
dec
jmp
imul
sub
pushf
sbb
shrl
cli
in
mov
xchg
cmc
add
outsb
pushl
jp
xchg
and
adc
cwtl
jp
lock
lock
cmp
push
or
icebp
mov
sub
adc
out
mull
fwait
push
dec
imul
aam
cmpsl
popf
sbb
incl
test
sti
lods
push
cld
lea
subl
mov
inc
nop
lcall
push
pop
subb
pop
gs
push
fidivrl
test
cmp
mov
mov
mov
pop
in
or
fwait
mov
push
ds
sub
sbb
push
xor
mov
psubd
rorl
jns
mov
sbbl
push
aad
mov
stos
xor
sahf
js
in
pop
pusha
pop
mov
dec
shl
repz
adcb
mov
dec
in
das
push
popf
cmp
fstpt
jle
pop
sbb
fisubs
je
faddp
mov
daa
pop
jmp
in
dec
xor
es
and
add
and
jmp
adcb
mov
inc
cmp
stos
jnp
dec
imul
hlt
dec
ret
cmp
sbb
mov
mov
mov
int3
mov
xor
pop
daa
fidivs
push
fisubl
inc
movsb
lahf
sub
lds
adc
ljmp
sub
mov
and
xchg
mov
stc
xchg
pusha
dec
adc
cmc
cmc
popf
ljmp
jne
push
push
insb
mov
test
rolb
ljmp
inc
ja
jg
in
mov
or
shlb
stos
adc
andl
xchg
push
movsb
adcl
test
inc
ret
lahf
cmp
and
add
or
dec
sub
dec
dec
arpl
pop
lock
insl
cmp
jl
stos
jne
lahf
xor
sbb
std
pop
mov
xchg
add
data16
sbb
adc
and
lahf
mov
std
cmpsb
push
push
mov
xchg
xchg
aas
fldcw
mov
adc
mov
mov
inc
xchg
cwtl
lods
pop
nop
rcrb
addr16
cmp
push
mov
mov
or
insb
pushf
test
mov
in
pusha
je
lods
in
lret
ljmp
push
pop
jno
lods
orb
lods
pop
mov
inc
xlat
fisubrs
mov
jae
lods
push
loope
mov
std
push
insb
xchg
fdivs
iret
test
mov
push
pusha
pop
roll
xor
daa
jmp
nop
or
sub
pop
push
test
mov
popf
andb
jecxz
rcr
in
out
repnz
rclb
mov
cmp
ljmp
mov
mov
and
dec
loop
mov
shll
test
dec
adc
pop
aaa
mov
rcl
movsb
addr16
pop
outsl
xchg
ficomps
fdecstp
or
sub
mov
xor
daa
test
and
and
in
inc
cwtl
out
or
out
and
lahf
xchg
cmp
hlt
cmp
push
mov
xlat
sub
push
xchg
push
andl
push
aad
or
movsl
fnstsw
mov
mov
les
sub
adc
push
push
jp
mov
mov
add
rclb
sub
mov
push
movsl
cmc
xchg
sbb
add
adc
fbstp
addl
ret
addr16
or
fists
pusha
pop
cmp
mulb
cld
cltd
scas
cld
mov
push
xor
aad
jl
push
add
icebp
fildll
xchg
jno
imul
je
mov
xor
and
xor
andl
outsb
pusha
std
adc
jge
in
sub
jecxz
dec
ret
fcmovbe
add
addr16
xor
adc
shll
push
lock
loopne
hlt
js
mov
adc
out
jnp
or
mov
je
push
out
xchg
jmp
lea
mov
aad
lret
cmpsl
lock
mul
les
adc
adc
stc
movsl
fsub
dec
and
in
ljmp
pop
or
cltd
xchg
fildll
sub
les
call
push
out
push
add
cs
xor
dec
or
loope
mov
adc
cs
push
mov
enter
gs
inc
daa
and
out
adc
mov
lahf
je
inc
lret
jns
push
ficompl
mov
cs
int3
add
mov
fucomi
dec
xor
cmp
imul
mull
mov
or
or
or
mov
imul
stos
and
pusha
adcl
stc
mov
jno
or
ret
and
negl
in
mov
popa
movsb
and
popf
sahf
jmp
push
lahf
in
lret
mov
aam
sbb
scas
loope
test
adc
es
add
ljmp
test
xchg
push
iret
xchg
pop
dec
lcall
and
pop
mov
sub
adc
bound
adc
rclb
in
adc
add
jl
popf
shll
xchg
mov
cwtl
push
and
shlb
jmp
sahf
lods
mov
sbb
and
mov
mov
add
push
push
lea
mov
push
fwait
xchg
or
sbb
push
mov
hlt
ja
adc
cmp
in
gs
les
inc
lret
rcrb
xor
cmp
cli
repnz
cmpb
sbb
loope
mov
xchg
ja
xchg
scas
or
and
mov
fbld
fimull
cmpsb
adc
xchg
sbb
or
outsb
lods
out
xchg
mov
rorl
out
mov
xor
aad
fstps
and
test
hlt
popa
popf
xor
mov
or
ficoml
lcall
test
jecxz
jne
inc
stos
dec
xor
std
cmp
mov
sbb
push
and
inc
sub
insl
pop
dec
jl
mov
jp
push
jecxz
add
push
in
ret
ljmp
mov
push
jne
jmp
subl
push
mov
sarb
sub
mov
out
add
sahf
jmp
xor
arpl
lcall
ds
inc
add
inc
insl
cmp
mov
adc
mov
sub
sub
sub
push
xchg
jg
orl
pop
out
dec
out
loop
data16
jg
adc
mov
inc
mov
mov
push
sub
sub
aaa
push
mov
xor
sub
mov
mov
ds
bound
mov
inc
add
push
or
and
ret
jp
rolb
jns
shl
jnp
or
test
aaa
inc
insl
scas
or
shlb
iret
idivl
and
cmc
shlb
dec
popa
mov
inc
sbb
jns
jae
repz
repnz
and
pop
push
pushf
mov
aad
out
mov
loop
nop
mov
aad
jno
push
test
fcmovb
or
sbbl
fcom
xchg
jo
call
jno
divb
popf
and
push
cmp
loop
call
mov
and
dec
cmpsb
or
lock
rcrl
in
or
push
mov
mov
cwtl
mov
ja
mov
faddl
shlb
popf
repz
sysret
mov
or
inc
push
push
bound
inc
es
and
bnd
fistpl
add
jns
addr16
jne
sbb
adc
int3
push
negl
inc
inc
mov
adc
and
les
pop
push
mov
in
pop
fucom
jo
pop
data16
test
mov
xchg
mov
jbe
mov
mov
pop
inc
push
or
or
shll
sub
mov
fadds
mov
add
inc
push
sub
ret
push
scas
and
rcl
xchg
fdivrs
arpl
mov
movsb
sub
cwtl
out
pop
stos
add
sub
jb
dec
sbb
iret
hlt
jg
imul
repnz
mov
arpl
add
jno
inc
pop
sbb
mov
sub
movl
and
in
nop
data16
pop
jmp
cmc
sbb
repz
jbe
sub
jnp
dec
pop
xlat
push
pop
clc
fstpt
sub
adc
dec
xor
hlt
sbb
xor
fmuls
enter
pop
aaa
cli
and
cmp
mov
dec
xchg
jmp
xor
test
cmp
insb
xchg
xor
out
cs
pop
adc
xchg
push
cmp
stos
sub
addl
add
es
inc
jnp
fcoml
sbbl
xchg
push
adc
cmp
data16
cmpsb
cmc
push
aas
ret
push
shrl
insl
jne
dec
push
add
dec
rclb
pop
push
fdivr
jns
clc
dec
or
insl
gs
jmp
leave
mov
dec
je
loopne
sbb
pop
push
mov
jl
or
adcl
jne
cltd
lahf
pop
inc
sbbb
lahf
cmc
repz
adc
out
jb
jmp
jle
cli
adc
push
mov
ds
jno
cli
inc
fs
ja
in
cli
push
shlb
mov
mov
mov
pusha
shrb
xlat
mov
test
adc
in
out
pop
jecxz
aaa
mov
pop
dec
cmp
insb
lds
push
imul
inc
lods
imul
sbb
cmc
out
sbbb
mov
sahf
cmpsb
and
mov
mov
ljmp
lahf
aad
hlt
push
inc
add
mov
das
mov
mov
cltd
vmulpd
jne
cmp
imul
push
mov
mov
andl
call
test
jp
in
xchg
nop
xlat
icebp
movsl
je
inc
inc
sahf
sub
filds
mov
mov
xchg
test
rdpmc
fcmovb
ret
adc
adc
xor
xchg
mov
push
adc
imull
dec
cmp
aad
popa
popa
push
inc
and
push
jge
nop
cmp
and
adcl
std
xchg
std
in
push
push
cmp
cld
popa
stos
xchg
lock
push
lahf
cli
popf
cmp
push
push
push
movsl
dec
lock
outsb
sub
adc
shl
mov
mov
das
popa
xor
loope
sbb
shrl
push
nop
mov
sbb
xor
out
inc
test
mov
xor
xor
out
fsubrs
aam
fwait
orb
push
out
pop
mov
shlb
dec
cmp
push
jp
popf
fsubs
xchg
lret
adc
add
add
cmpsb
insb
dec
cmp
add
add
push
add
add
add
orb
add
push
add
addb
add
cmpsb
insb
dec
cmp
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
cmpsb
insb
dec
cmp
add
add
add
add
js
add
add
add
nop
add
add
add
add
add
add
add
add
lock
les
add
cmpsb
insb
dec
cmp
add
add
add
add
enter
pop
icebp
add
xor
add
cmpsb
insb
dec
cmp
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmpsb
insb
dec
cmp
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
xorb
adc
add
add
add
cmpsb
insb
dec
cmp
add
add
add
add
mov
add
and
add
adc
add
cmpsb
insb
dec
cmp
add
add
add
add
mov
add
xor
add
cld
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
adc
add
add
add
incl
add
add
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
inc
add
add
add
add
inc
add
add
add
add
add
int3
fnsave
sub
rorb
mov
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
lcall
add
add
or
push
inc
and
mov
test
cmpsl
mov
lock
or
mov
out
xor
inc
cmp
mov
add
pop
bswap
sbb
inc
adc
push
repnz
mov
jnp
jno
cmpsb
cmp
icebp
imul
call
mov
ret
rol
add
repz
cmpsl
add
icebp
add
adc
mov
mov
add
sub
repz
mov
sbb
cwtl
push
or
mov
push
stos
add
nop
cmpl
je
jae
sbb
push
mov
cmp
mov
rep
cld
repnz
sbb
add
xchg
outsl
add
push
scas
aas
cwtl
lcall
sbb
call
xor
mov
sbb
inc
cltd
push
xchg
push
inc
iret
xchg
aaa
and
mov
dec
notb
bound
sbb
int
mov
sub
or
test
pusha
lcall
mov
inc
inc
push
or
je
jnp
xchg
stos
sbb
lea
mov
test
or
loope
fidivrl
sbb
mov
aas
pop
mov
sbb
lahf
cmp
push
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficoms
and
movsl
dec
inc
mov
movb
add
mov
mov
or
ret
repnz
dec
ds
xor
sbb
dec
cmpsb
cmp
adc
add
pop
pop
pop
pop
ret
les
cld
mov
pop
sub
loopne
push
add
adc
xchg
and
enter
mov
jle
shl
sti
mov
nop
pop
je
push
mov
ss
xchg
xor
inc
stos
pop
add
jmp
mov
ret
lods
push
jne
xor
leave
push
adc
inc
int
shll
adc
xchg
mov
scas
pop
or
hlt
cltd
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
xlat
cmpb
inc
cmp
test
jge
xchg
xchg
xchg
repnz
pop
mov
adc
add
cmp
jge,pn
aam
inc
movzbl
insl
push
cld
sub
call
dec
mov
jne
mov
cmp
rorb
rclb
xchg
inc
push
push
add
cmc
int3
inc
jmp
enter
mov
cmp
sub
sub
pop
or
js
rcrb
and
xor
sub
data16
jbe
push
or
call
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
lds
dec
or
add
pop
movsl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
cmp
in
aas
rorb
enter
pop
mov
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
mov
add
bound
cmpb
pop
mov
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
out
pop
insl
jae
bound
mov
in
sbb
mov
rclb
scas
adc
inc
loop
and
jecxz
lcall
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
fadds
add
sahf
data16
push
inc
gs
dec
pop
adc
push
xchg
fs
sbb
stos
outsl
loopne
xor
ss
mov
call
cmp
inc
inc
jmp
repz
imul
insl
pop
sbb
sbb
clc
add
inc
cmp
add
lea
push
add
test
shr
pusha
loope
push
lea
sub
adc
push
or
add
sbb
sub
jb
gs
test
sub
shlb
mov
and
scas
loop
adc
push
jnp
push
lea
add
mov
cmpsb
dec
push
js
jo
insb
push
imul
and
jecxz
lahf
or
jae
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
xchg
daa
arpl
jae
fwait
xor
pop
dec
outsl
push
dec
popa
addr16
inc
outsl
js
shll
js
data16
cmp
int
cmpl
push
dec
movsb
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
orl
lcall
mov
insl
cmp
xchg
or
and
cmp
cmpsb
xor
dec
xor
add
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
pushf
push
add
mov
push
add
or
add
or
add
add
inc
add
add
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
adc
insb
adc
pop
adc
pusha
adc
