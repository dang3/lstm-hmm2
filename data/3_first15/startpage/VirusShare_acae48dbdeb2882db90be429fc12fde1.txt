mov
add
or
insb
inc
sbb
add
jl
mov
push
movsl
add
cs
int
add
in
insb
xor
outsl
pop
jae
pop
push
jo
jno
or
add
jb
pop
cmp
jbe
ja
js
ss
in
jns
jp
outsl
jnp
mov
lcall
and
xorl
jbe
leave
sub
scas
adc
mov
sub
add
mov
jo
mov
dec
mov
add
inc
mov
mov
ret
mov
pop
imul
pextrw
mov
or
out
fnsave
faddl
mov
add
sub
gs
cli
pop
mov
es
mov
mov
jg
cmp
mov
and
add
mov
pushf
mov
movsb
imul
aam
add
lret
mov
rol
data16
cli
xchg
gs
in
mov
and
movl
sbb
enter
nop
enter
adc
sbb
ja
mov
cmpsb
fnstenv
pop
adc
incb
je,pn
lcall
andl
pop
xlat
pop
mov
scas
dec
rcl
sahf
adc
out
lock
icebp
xchg
lret
inc
mov
fisubrl
mov
mov
aas
ljmp
xlat
insb
dec
pusha
adc
movsl
pop
lods
add
ss
data16
lret
dec
jbe
out
add
out
add
loope
shrl
imul
jne
lods
and
nop
fnstenvs
or
jmp
in
add
add
scas
imul
sbb
jle
cmp
and
enter
sbb
sbb
adc
and
xor
xor
and
xchg
xchg
out
loopne
lods
adc
sub
and
xchg
add
adc
js
cmp
jns
pop
adcb
insb
adc
and
out
movsb
adc
adc
push
jnp
cmp
adc
dec
in
adc
cmp
sbb
adc
jo
out
fs
adc
iret
cmp
mov
test
out
cmp
lret
dec
adc
adc
adc
inc
sahf
and
cld
cwtl
adc
xor
fwait
cmp
pop
jge
enter
dec
int3
adc
sbb
iret
mov
adc
adcb
lock
sahf
adc
cmp
fwait
jmp
adc
xor
rolb
test
clc
adc
in
xor
xor
in
repnz
or
sub
add
or
adc
add
push
call
aas
rcrl
sbb
push
xchg
ficoms
add
mov
add
mov
addr16
addr16
gs
jo
gs
jo
ljmp
jge
mov
adc
repz
push
inc
dec
mov
sahf
aas
jne
lcall
jp
dec
popl
mov
xor
or
jo
adc
push
ljmp
cmp
outsl
jb
or
outsb
je
insb
outsb
gs
js
insb
adc
inc
push
pushl
jne
and
cli
xor
xor
inc
sbb
incl
adc
mov
pop
js
fwait
out
and
push
pushf
add
adc
jnp
sbb
in
cltd
mov
sbb
mov
add
pop
add
add
jo
add
repnz
test
adc
lods
pop
mov
push
xor
xor
bound
arpl
cs
xor
iret
insb
insb
sub
push
or
bound
cmpsl
lock
push
imul
mov
je
pop
js
and
xchg
mov
mov
imul
jo
jns
jp
pop
xchg
xor
xor
adc
bound
and
loope,pt
frstor
and
insb
pop
inc
pop
jb
ret
sbb
insb
ja
mov
push
mov
dec
jle
add
jbe
jo
pop
xchg
aas
jns
xor
sbbb
xchg
test
add
rorl
pop
and
push
fcomps
sti
dec
mov
shll
sbb
unpckhps
xor
subl
push
mov
lret
clc
dec
push
sbb
ljmp
mov
pop
inc
jecxz
pop
arpl
push
cmp
sub
hlt
scas
dec
add
adc
inc
add
xchg
shrl
or
sbb
or
psubusb
imul
icebp
mov
sahf
push
push
stos
jbe
mov
dec
add
add
cmp
add
int
xchg
aad
inc
add
push
jecxz
sub
sbbl
aaa
imul
fsubr
pop
das
inc
pop
pop
cmp
jbe
aaa
sbb
das
addl
clc
jg
push
dec
outsl
fs
inc
imul
inc
push
jg
cli
xor
sub
xor
mov
and
push
fwait
mov
add
adc
and
fcmovu
xor
or
add
xlat
arpl
lcall
xor
gs
adc
imul
add
je
jmp
push
outsb
jo
mov
cwtl
inc
imul
bound
jae
dec
aam
jb
orl
outsb
xchg
add
sbbl
jns
pusha
xor
push
orl
inc
push
and
cs
or
jae
inc
dec
push
fs
mov
js
mov
xchg
mov
stos
sarb
sbb
scas
scas
int
mov
imul
mov
dec
inc
pop
add
sbb
push
mov
adc
or
sub
xlat
add
mov
sub
sub
mov
xor
xor
ss
add
arpl
cmp
mov
dec
add
add
fwait
int
pop
mov
jb
or
cmpl
mov
push
cltd
inc
out
adc
inc
push
sbb
add
mov
add
scas
std
pop
leave
jmp
ja
mov
cmp
push
ret
jecxz
cmp
sub
jno
xchg
pop
int
rorb
aad
cmp
sbb
orl
mov
imul
lea
outsl
pop
jb
insl
cmp
or
xor
and
pop
inc
dec
sbb
cmovne
push
lods
repz
bound
cmp
cwtl
sub
sbb
sbb
cmpsl
cs
mov
loopne
and
xor
sub
loope
mov
and
insl
add
xor
inc
popa
imul
test
pop
and
cmpsb
fistpl
xor
insb
outsl
push
dec
mov
fs
jae
rcr
subl
adc
inc
subl
xchg
je
bound
xchg
jmp
ret
push
lahf
adc
jnp
inc
push
add
add
int3
ja
arpl
addps
lock
or
sub
sbb
sub
imul
adc
jg
and
jge
mov
mov
sbbl
jno
loopne
fistl
pop
frstor
xor
popa
iret
jae
in
and
and
mov
jne
xorb
inc
js
or
outsb
loope
mov
andl
dec
jge
sti
sub
jns
pop
pop
daa
mov
sub
outsl
and
and
sub
das
adcb
add
dec
nop
insl
popa
adc
mov
sbb
mov
and
subl
addr16
push
inc
dec
fcomps
insl
aaa
in
movsb
sub
rcrb
ret
add
or
cmp
or
movsb
loope
adc
sbb
and
lret
cwtl
push
stos
xchg
nop
push
repnz
jns
js
sbb
inc
ja
out
loope
push
push
out
iret
inc
dec
xor
cmpsl
or
out
mov
inc
ret
dec
iret
add
jo
xchg
aam
dec
rorl
jmp
jp
in
mov
popa
jge
lea
mov
xor
icebp
arpl
shrb
jge
js
xchg
jmp
fisttpll
and
xor
xor
jae
add
dec
jns
sbb
push
nop
subl
and
xor
xorb
pop
mov
stos
test
icebp
out
push
ljmp
or
inc
sbb
adc
inc
test
and
fldl
jae
push
pop
xchg
test
add
or
filds
ret
imul
pop
cmp
gs
in
int
adc
add
test
sbb
adc
pop
out
mov
les
cmp
jno
aam
adc
sub
and
mov
cs
imul
imul
mov
imul
jnp
dec
push
daa
es
loop
push
add
pmaxub
inc
mov
xor
xchg
adc
mov
pop
test
sub
dec
jmp
mov
andnps
shrb
pusha
jecxz
addr16
sbb
inc
sub
and
push
imul
fdivl
fldcw
hlt
rclb
lods
mov
or
sldt
mov
add
lret
or
or
xor
cmp
cmp
aas
je
and
push
pop
sbb
xor
pop
xor
jbe
or
cmp
out
xor
ss
cmp
xor
xor
and
lret
push
popa
inc
imul
xor
and
or
adc
and
push
push
insb
pusha
or
add
stos
pop
xchg
adc
add
std
leave
ret
and
notl
and
add
addr16
daa
popf
add
and
das
daa
jnp
es
xor
pop
jl
jmp
mov
add
dec
ret
xlat
mov
inc
cwtl
inc
dec
mov
mov
mov
add
dec
rcll
and
sub
jmp
mov
shrb
add
ret
push
adc
xor
aas
fstpt
loope
sti
pop
and
sub
inc
or
lds
leave
sub
nop
add
cltd
dec
es
leave
xor
xchg
dec
test
sahf
xor
xchg
sub
add
jae
inc
enter
jb
sbb
or
xor
lret
sbb
sub
cs
dec
mov
add
pop
daa
add
inc
xchg
mov
xor
pusha
add
scas
mov
es
test
pmuludq
or
popa
popa
push
xchg
rdpmc
loope
pop
or
mov
jae
aaa
sbb
push
addl
loope
push
cltd
fistl
fldl
jne
sbb
add
testl
sahf
dec
mov
and
dec
push
jno
flds
mov
or
add
das
adc
fsts
shll
lods
and
xor
cs
mov
sub
jmp
idivl
inc
sub
pop
add
mov
mov
inc
pop
add
dec
and
addr16
call
cmp
add
cmpsl
adc
xor
cmpsl
loopne
sub
xchg
in
sbb
fs
and
xor
fwait
dec
sub
aad
mov
adc
ja
addb
cmpsl
inc
dec
and
movq
lahf
les
sbb
or
push
and
int
and
ficoml
mov
dec
insl
sbb
lea
push
emms
iret
jb
test
xorl
sub
xchg
jne
push
and
add
push
sbb
inc
jno
xchg
add
test
in
push
fldl
inc
add
and
jns
jmp
adc
add
push
xchg
scas
sbb
xchg
add
xchg
icebp
movb
outsl
mov
hlt
stos
or
leave
ja
or
sbb
idivl
bound
lds
inc
dec
mov
cmc
fidivrs
adcl
and
test
inc
dec
add
stc
sub
add
push
cmp
daa
insl
adc
or
add
dec
ss
xor
jge
lcall
ss
or
jae
nop
mov
add
xor
testl
or
sbb
pop
insl
xchg
into
xor
sub
add
jecxz
roll
mov
mov
daa
pop
cmovae
call
jge
mov
bound
xor
in
insl
jae
and
jmp
aas
js
adc
jp
cmp
aas
sub
arpl
ret
jecxz
nop
adcl
xlat
je
gs
jne
or
and
outsl
xor
xor
dec
xlat
sarb
cmp
inc
inc
adc
divl
adc
mov
cmp
ja
mov
mov
xchg
add
mov
pop
int
inc
pop
add
lods
dec
ja
xchg
xchg
jbe
lock
pop
lds
xor
clc
dec
ljmp
pusha
xor
cmp
push
dec
shll
push
dec
inc
adc
add
jns
cmp
popf
adcl
add
lahf
inc
adc
insb
adc
bound
pop
jge
sub
xchg
sub
sbb
sarl
add
mov
daa
inc
adc
fisubs
sbb
in
jecxz
jns
ja
pop
jo
inc
pop
jns
sbb
push
push
mov
push
imull
inc
mov
or
dec
push
inc
cmp
pop
dec
xor
imul
xor
ret
push
data16
inc
inc
or
cmp
sub
push
mov
outsl
and
mov
in
mov
add
nop
dec
push
jnp
adc
pop
pop
xor
pop
fwait
cmpsl
and
push
in
adc
mov
add
push
jmp
and
cmp
addl
femms
mov
push
pop
mov
push
inc
inc
ss
dec
dec
or
jbe
popa
dec
gs
stc
daa
sti
outsb
inc
jae
jb
push
cmp
je
xor
jb
mov
outsb
insb
outsl
arpl
repz
mulb
popa
jb
fs
outsl
popa
fs
gs
sub
sbb
push
pop
and
sti
fs
jle
outsl
outsl
insb
push
dec
jne
insb
and
gs
mov
mov
cmp
push
inc
popa
cltd
lret
or
orl
scas
push
or
sbb
jl
in
mov
jno
imul
popf
push
outsl
lds
outsl
movsb
out
jnp
sbb
inc
outsb
jae
pop
add
adc
sub
fs
faddl
pop
dec
cmp
add
dec
dec
sahf
insb
push
mov
lahf
mov
add
or
mov
dec
es
addr16
cmovl
gs
gs
cmp
add
jge
das
xor
sub
addb
aam
sarl
inc
dec
cmp
jnp
mov
inc
outsl
leave
dec
jbe
jo
jo
andl
pop
scas
lret
xor
or
mov
in
cmp
pushw
xor
jne
test
dec
xor
jnp
dec
and
xchg
pop
aaa
nop
ja
inc
cld
gs
dec
imul
jnp
outsl
jbe
pop
xor
or
mov
sbb
adc
insb
add
aas
fmull
jb
cmpsl
and
dec
scas
arpl
fists
xor
cmpsl
testb
push
push
jns
imul
jo
ja
jne
mov
idiv
pop
insl
jbe
data16
rorl
jo
inc
add
imul
xchg
mov
push
push
jb
adc
or
ss
movsl
jo
xlat
push
jb
jno
jnp
js
pop
sub
mov
sbb
or
push
sub
adc
lahf
insb
cmp
aaa
jnp
push
dec
outsb
faddl
add
test
push
stc
pop
addb
push
lds
imul
jge
push
jo
push
inc
jmp
gs
and
cmpsb
mov
daa
je
inc
mov
aas
add
xor
push
mov
cmp
sarl
cmp
dec
mov
pusha
add
xchg
insb
addb
jne
and
pop
add
inc
and
jne
adc
adc
and
nop
lea
push
xor
add
add
jmp
mov
xchg
add
mov
out
xchg
shrb
dec
and
xor
and
imull
cmp
jo
sub
push
popw
inc
adc
add
xor
mov
or
or
inc
in
xor
push
jnp
pop
adc
adc
add
addr16
jae
dec
addr16
adc
xchg
add
dec
mov
push
adcl
das
add
mov
or
shlb
data16
cmp
xor
repz
outsl
cmp
inc
and
arpl
dec
push
out
sbb
dec
cwtl
push
mov
sub
jge
dec
aaa
out
mov
jg
pusha
rol
inc
inc
dec
and
add
jae
insl
or
pop
inc
cs
push
lret
out
mov
xor
pusha
push
addr16
add
out
sbb
addr16
pop
or
inc
mov
inc
pop
dec
test
fsubp
sbb
cmpsl
aas
les
lcall
add
and
add
add
push
mov
sub
push
and
push
mov
pop
sti
decl
addl
inc
in
mov
and
lock
jnp
push
hlt
cld
add
je
mov
push
adc
jnp
fisttpll
inc
mov
lea
and
aaa
fisubs
xor
add
inc
sub
push
sbb
sub
mov
push
lea
push
pop
fs
adc
xlat
std
dec
add
and
or
popf
and
dec
xor
sub
rorb
add
mov
mov
sti
pop
inc
add
push
push
or
pop
or
or
popa
cs
xor
pop
enter
lahf
sbb
enter
push
push
loopne
mov
push
lock
push
mov
shlb
push
cmc
adcl
pop
in
mov
lea
rorb
cs
jb
and
xor
xchg
orb
inc
xchg
mov
cmc
push
loop
add
or
cmc
pop
adcl
in
mov
test
gs
lea
cs
enter
xor
sbb
enter
adc
dec
movb
and
test
xor
cltd
dec
loope
daa
mov
and
pop
repnz
incl
dec
es
add
dec
inc
sub
mov
lods
push
mov
sub
lods
insb
adc
mov
pop
sub
dec
push
dec
dec
dec
dec
mov
pop
cld
incb
add
nop
inc
add
sbb
test
shlb
add
and
or
or
dec
sbb
and
or
jns
jo
dec
es
mov
lock
inc
add
sbb
cltd
dec
dec
adc
cwtl
daa
mov
push
into
fs
adc
sub
and
decb
loop
dec
dec
cwtl
sub
sub
dec
or
sub
sbb
lds
lea
pushf
xchg
pop
push
stos
or
sbb
pop
xchg
push
or
or
sub
sub
incb
add
xor
xchg
or
je
fs
sub
adc
mov
sub
push
xor
nop
xchg
push
adc
subb
cs
es
xchg
cmc
mov
push
xor
fs
adc
dec
es
leave
push
adc
scas
mov
pop
nop
je
dec
and
lret
dec
adc
xchg
sbb
push
and
and
sbbl
or
lods
xchg
out
pushf
sub
mov
test
xorb
movd
push
out
mov
add
push
xchg
or
xor
cltd
inc
adc
xor
push
and
je
xlat
in
xor
insb
popl
pop
mov
fstpl
daa
fistl
enter
mov
cmp
push
mov
and
das
sub
mov
and
pushf
test
aad
in
mov
jge
jmp
jecxz
and
test
je
sbb
sub
nopl
adc
inc
jo
in
out
insb
xor
or
pushf
ret
clc
or
sbb
dec
xchg
sbb
cwtl
sbb
pop
cli
cwtl
sbb
mov
in
ret
pop
leave
addb
sub
or
sbb
fdivr
cmp
and
sarb
or
pushf
jne
inc
inc
inc
mov
insb
pop
dec
cmp
inc
inc
inc
sub
and
mov
inc
add
in
mov
xchg
mov
push
jae
mov
inc
repz
loopne
insb
mov
out
jb
mov
mov
shrl
xor
in
push
insb
xchg
push
fs
push
test
mov
mov
cmp
pusha
pushf
jge
inc
or
fmull
sub
and
mov
adc
and
pop
sbb
push
enter
cwtl
lods
mov
sbb
pop
test
xor
fdivrl
sub
punpckhwd
lcall
int3
inc
sbb
addr16
add
push
lods
cmp
iret
scas
scas
sti
js
push
push
xchg
es
std
in
fldcw
xor
and
jge
add
mov
or
xchg
popf
int
push
sahf
pushf
push
popf
fsts
push
jns
jb
mov
pop
sub
sub
pop
lea
inc
or
insb
test
jo
sub
cmp
in
xchg
xchg
mov
xchg
add
je
fiadds
je
fs
and
adc
dec
sbb
lock
shlb
push
sub
lcall
or
sbb
sub
jl
pop
push
jbe
mov
cmp
orl
arpl
leave
push
dec
test
mov
sub
es
xchg
je
mov
fs
and
push
cmc
insl
nop
cmp
ficomps
pop
push
cmc
movsb
sub
fnstenv
jns
cmpsl
adc
lock
xor
test
lock
xchg
enter
clc
xor
push
xchg
pop
aaa
sub
and
in
push
xchg
lock
mov
aaa
mov
cmp
mov
inc
jne
nop
push
mov
inc
xor
aam
push
enter
adc
adc
cmp
cmp
cmp
lcall
add
cmpsl
or
nop
push
nop
inc
mov
mov
pusha
test
nop
pop
adc
jl
cmp
xchg
mov
enter
dec
dec
and
dec
sub
cmp
dec
pushf
dec
add
sbb
lret
sub
jge
shrd
or
clc
push
sbb
nop
sub
fsubrl
in
lret
cmp
mov
cmp
inc
sub
jecxz
and
inc
dec
and
push
adc
jp
cmp
adc
loop
mov
js
sub
jmp
mov
cmpb
cmp
add
and
mov
nop
inc
enter
push
sbb
fwait
pusha
movsb
push
fmull
xor
push
mov
add
loop
dec
xchg
dec
pushf
repnz
push
and
dec
xchg
sub
add
jecxz
sub
nop
add
adc
adc
rclb
adc
pop
les
repnz
inc
pop
les
and
cwtl
add
orl
mov
push
and
add
popa
lock
xor
rclb
or
cmp
push
sub
and
add
dec
and
lea
arpl
xchg
rcll
out
mov
test
in
pop
je
stos
arpl
shl
inc
sub
mov
add
push
data16
jmp
andl
popl
in
and
popa
adc
lea
cmp
rclb
adc
into
out
fmull
shrb
dec
pop
dec
notb
mov
enter
adc
mov
dec
fs
aas
mov
add
nop
pop
test
mov
jmp
js
xchg
dec
pop
and
adc
in
bound
cld
dec
push
xchg
leave
xor
cltd
dec
or
jae
inc
and
inc
sbb
sub
cmp
movsl
pop
pop
adc
in
mov
or
test
adc
mov
fimuls
or
rcl
inc
rcr
mov
add
xor
add
pop
push
push
call
adc
push
mov
dec
push
adc
adc
add
test
inc
push
mov
mov
mov
movsb
fucomi
ret
pop
test
push
sbb
shlb
mov
xchg
push
jmp
jge
jl
cmp
das
pop
push
fmull
outsb
push
ljmp
aam
mov
enter
in
in
in
and
dec
nop
push
cld
push
dec
inc
dec
inc
daa
sbb
cmp
decb
in
and
push
adc
pop
mov
xor
enter
xchg
jnp
testb
adcb
inc
push
roll
je
push
push
lock
or
inc
or
push
fsubs
xchg
popf
out
sub
enter
test
or
add
popf
icebp
mov
imul
repz
inc
inc
adc
or
sub
clc
push
es
pop
dec
lcall
sbb
adc
pop
popa
sahf
outsl
push
ret
push
insb
test
fidivrl
repnz
or
push
and
xchg
pop
leave
adc
pop
hlt
add
pop
inc
xchg
push
mov
xchg
adc
push
idivb
and
call
retw
or
or
sub
cltd
dec
orb
xor
popf
loopne
or
dec
fcoml
mov
jl
dec
pop
insb
pop
mov
enter
lea
push
imul
or
push
or
aaa
mov
sbb
nop
nop
das
jns
leave
sub
add
int
and
and
dec
and
lret
mov
jge
add
mov
mov
mov
ljmp
xchg
xchg
xchg
xchg
pop
cmp
sbb
mov
mov
pop
fcompl
mov
ret
push
movsb
call
les
out
scas
shlb
rclb
pop
push
dec
and
ss
dec
mov
sbb
push
mov
and
adc
xor
add
cmpb
add
add
das
div
or
hlt
dec
push
mov
sub
add
xor
push
jne
jecxz
insb
out
or
stos
fmull
cmp
sbb
je
mov
mov
aam
jne
or
or
push
ffree
push
mov
inc
mov
inc
or
js
mov
insb
inc
fsubs
inc
jo
sbb
loopne
xor
sub
and
sub
js
mov
add
adc
sbb
mov
jns
loope
out
jae
mov
andb
adc
pop
movsb
mov
lods
dec
sbb
xchg
xchg
imul
es
dec
ret
push
mov
pushf
and
lods
mov
xor
and
in
inc
inc
scas
insb
add
push
and
int3
dec
mov
mov
xchg
mov
push
sbb
adc
arpl
mov
sahf
test
mov
cwtl
cld
mov
sbb
inc
add
mov
mov
xchg
movswl
loop
inc
sahf
popf
jnp
insb
mov
shlb
push
or
cmp
sahf
pushf
movsl
lret
sar
dec
add
fwait
xchg
daa
fnsave
lock
inc
shrb
test
push
mov
shlb
dec
mov
push
sarb
insb
mov
pop
pop
popa
pushf
jg
dec
mov
inc
or
pop
mov
inc
push
decl
loope
test
out
sbb
pop
inc
pushf
xor
lea
sbb
fisttpl
int
aam
fmuls
add
sbb
push
loopne
test
xor
inc
inc
sti
enter
outsb
inc
sbb
pop
or
out
je
sbb
adc
pop
test
add
test
push
mov
xor
push
int3
ret
xchg
adc
aas
pop
xor
outsb
mov
lea
ljmp
outsb
or
nop
aam
dec
adc
push
push
shll
sbb
jns
dec
cwtl
pushf
mov
sub
js
and
mov
test
or
jb
insb
jo
and
or
movsb
cs
mov
push
mov
dec
sub
cwtl
push
stc
leave
xor
push
pop
int3
andb
pop
pop
xchg
daa
or
push
andb
aad
aas
jne
add
dec
pushf
mov
out
push
movsb
js
sub
lahf
cmp
test
add
push
test
leave
repz
je
pop
fsubl
or
or
dec
arpl
dec
and
scas
mov
movsb
cwtl
outsl
scas
or
pop
xor
and
cwtl
mov
test
inc
in
rolb
sahf
push
adc
mov
insb
stos
loope
sbb
mov
test
test
or
scas
dec
inc
stos
adc
pop
pop
sub
test
orl
sub
push
lahf
adc
movsb
pushf
clc
xchg
push
mov
mov
icebp
and
jb
rclb
mov
or
push
mov
rorl
sbb
gs
mov
pop
pop
or
jae,pt
shrb
and
mov
xchg
cs
incb
in
sub
or
cmc
xor
adc
jb
mov
inc
loope
sbb
push
add
cwtl
xor
adc
pop
sbb
inc
sahf
int
pop
filds
push
idivb
movsb
mov
insl
lods
xchg
mov
fnstcw
adc
and
pop
inc
adcl
fsubrl
and
notb
cmp
inc
adc
iret
jecxz
inc
mov
add
aam
adc
je
popf
cwtl
push
loopne
in
loop
pop
xchg
call
daa
sarb
push
or
pop
or
jae
fwait
subl
cld
fdivr
sbb
in
mov
or
std
mov
add
in
adc
xor
addr16
mov
and
mov
mov
sarb
enter
pop
add
pop
xchg
enter
mov
jae
adcb
mov
inc
bound
xor
mov
xor
mov
add
inc
mov
leave
ds
sub
push
push
int
push
inc
pop
and
sbb
dec
mov
dec
fists
in
cmp
sbb
fwait
adc
mov
and
push
lods
out
cmp
sti
xchg
pushf
out
push
fcomps
xchg
jno
inc
cmp
adc
add
jne
cmp
jae
cmpsl
fistpl
fmuls
or
cmpl
data16
or
inc
fists
push
or
pop
add
and
aad
sbb
dec
sbb
push
test
push
je
fs
push
int3
loopne
fcoml
adc
out
xor
xchg
add
xor
mov
inc
mov
xor
icebp
add
outsl
nop
gs
push
outsl
push
xchg
xchg
fistps
bswap
into
inc
mov
inc
dec
mov
adc
fcompl
sub
mov
mov
or
int3
mov
jg
js
stos
pop
sub
loop
cmpl
add
xor
ret
jecxz
loopne,pn
jmp
movl
ret
push
dec
jb
loope
aad
xchg
outsl
popa
xor
sub
jmp
sub
ja
jae
movsl
fnstcw
adc
adc
mov
test
rolb
cwtl
sbbl
sub
imul
hlt
or
fcompp
adc
sbb
je
adc
push
test
arpl
push
mov
xchg
in
scas
int
test
and
push
sbb
lea
das
pavgb
popf
xchg
push
orb
test
fwait
pop
fldenv
andb
cmp
mov
enter
xchg
xchg
in
in
int3
es
cwtl
push
mov
rolb
mov
dec
xor
in
ret
inc
dec
es
adc
lods
test
nop
movsb
gs
sbb
or
into
inc
xchg
mov
imul
loopne
neg
dec
movsb
push
and
sahf
or
push
jge
enter
xor
mov
fsubs
adc
adc
pop
test
inc
ss
dec
call
adc
mov
fistps
and
lcall
imul
inc
scas
popl
cmp
cmpsl
dec
sbb
popa
adc
fisubl
dec
sahf
sar
aam
xchg
movsb
insl
and
ret
xchg
sbb
xchg
leave
fs
in
jl
or
cltd
add
sbb
insb
push
and
insb
sub
pop
fisttpl
xchg
lret
mov
icebp
rcr
xor
nop
inc
loopne
sbb
mov
mov
jp
fs
and
adc
and
and
xor
ss
testl
sub
sbb
xor
inc
dec
or
mov
push
cld
pop
dec
adc
xchg
sub
ret
mov
or
mov
nop
push
js
sub
xchg
ljmp
ficoms
enter
sbb
sub
cld
aam
test
mov
or
inc
in
cld
lret
dec
cmp
lret
inc
lea
dec
inc
mov
xchg
or
sbb
insl
jo
pop
sbb
inc
out
sub
or
loope
cmpl
or
mov
xchg
push
testl
repz
jg
out
adc
pushfw
shrb
xor
inc
movsl
inc
out
filds
shld
and
outsl
inc
cmp
jbe
jb,pt
adcl
pop
in
mov
xchg
shl
add
mov
rorb
shll
lock
jmp
mov
and
cwtl
cmp
popa
das
push
pop
push
and
loopne
ret
mov
subl
scas
cmovno
fs
mov
into
and
test
nop
pop
ret
popf
pop
ret
dec
or
xor
rorb
add
and
mov
push
mov
dec
repnz
movsb
cmp
imul
shrb
xor
or
outsl
rolb
adc
xorb
add
fs
cs
pop
xor
bound
and
jb
and
mov
adc
xlat
jo
sbbb
dec
in
and
jl
lret
xor
je
pushf
pop
dec
sub
scas
and
fs
xchg
cmpsl
lods
push
mov
jb
lds
or
sub
shll
inc
scas
fs
and
insb
pop
push
inc
cwtl
jl
enter
cmp
cmp
xor
and
cmp
jo
leave
enter
jl
sub
repnz
xchg
decl
dec
test
or
xchg
movsb
pop
jge
dec
push
jb
push
popa
and
push
jge
push
and
or
enter
push
add
jge
jl,pt
inc
es
add
adc
in
js
xchg
or
outsb
or
pop
add
enter
or
and
or
jo
jecxz
add
add
sbb
xchg
push
mov
add
cs
stos
sub
sbb
xor
jg
push
pop
adc
in
lcall
test
or
out
stos
add
sub
mov
add
outsl
fcomps
aam
les
lret
mov
movsb
xchg
test
insb
mov
add
insb
data16
sbb
dec
int3
mov
push
push
adcb
xchg
fwait
mov
lds
mov
adc
test
xchg
aad
lea
mov
iret
sub
pushl
inc
or
and
adc
cmpl
std
push
xor
adc
gs
push
and
add
popf
mov
adc
push
fcoms
mov
mov
mov
scas
aad
fmull
leave
repz
sarb
dec
fildl
fdivr
or
faddl
test
jne
lea
cmpsl
and
movsb
sbb
pop
mov
fildl
or
adc
roll
xlat
js
inc
cmp
aam
xchg
pop
mov
mov
adc
xor
in
jo
inc
sub
pushl
mov
into
fsubs
add
aam
inc
inc
or
xchg
ja
aas
les
sbb
inc
add
pusha
add
nop
inc
fdivrs
in
in
fsubr
jns
dec
or
nop
xor
fdivrs
sub
xor
push
ss
fmul
dec
andb
enter
xchg
and
test
mov
sbb
or
fmull
add
add
clc
movsb
int3
inc
or
addr16
push
cmp
in
or
mov
test
loopne
mov
enter
stos
dec
add
cs
mov
call
mov
adc
sub
push
orb
daa
pusha
pop
fcomps
sbb
call
dec
push
cmp
dec
arpl
in
mov
je
loopne
jne
mov
xchg
sti
lcall
adc
sub
add
cmpl
jne
push
cmpsb
or
dec
nop
or
dec
in
adc
dec
adc
mov
or
aaa
pusha
adc
sbb
sbb
jp
sub
pop
jns
xchg
pop
adc
adc
cmp
sub
sbb
jl
pop
fs
adc
push
enter
in
test
mov
add
loopne
pause
add
loopne
mov
and
adc
mov
lea
or
enter
lods
loop
xchg
loope
xchg
sub
punpckhbw
sbb
pop
fsubs
sub
or
xchg
sbb
mov
mov
or
xchg
adc
cmp
jp
pop
int3
nop
xchg
adcl
xlat
push
add
pop
adcb
jmp
stos
xor
push
add
pop
push
cmp
xor
push
sbb
fs
push
pop
pop
sti
insl
cmp
jl
push
jbe
cs
lods
mov
xchg
push
nop
sub
adcb
lock
stos
dec
sbb
adc
cmp
daa
adc
cs
push
fs
and
push
rcll
orb
fldenv
sbb
add
and
push
pop
pop
jo
mov
dec
push
shl
int
mov
hlt
jle
sbb
jb
jle
inc
aaa
pop
jne
shlb
fcoms
sbb
sub
ret
mov
dec
push
mov
incl
adc
lds
loope
pop
ret
sbb
inc
inc
daa
and
adc
add
shlb
daa
imul
icebp
push
and
adc
dec
mov
and
pusha
pop
xchg
int
popcnt
fmulp
into
testl
leave
push
pusha
cld
or
ret
imul
inc
and
dec
dec
inc
mov
imul
push
dec
ret
jmp
mov
push
add
pop
xchg
pushf
movsb
adc
xor
sub
dec
lcall
insb
out
push
dec
push
lea
imul
outsl
ror
add
inc
mov
lcall
stc
pop
sbb
sbb
sbb
jle
nop
aam
lods
arpl
mov
sbb
lods
push
nop
add
mov
sbbl
pusha
sbb
mov
cmp
sbb
fs
xchg
dec
and
inc
cmpsb
pop
loopne
xchg
and
add
and
popf
pushf
insb
add
and
pop
add
into
and
push
dec
jp
and
loop
mov
dec
push
aam
or
sbb
mov
mov
mov
int3
pop
int3
push
add
jno
cwtl
or
shll
or
movl
mov
sub
es
iret
add
push
sub
adc
add
adcb
and
fldln2
mov
dec
mov
xor
adcl
or
and
inc
adc
mov
or
mov
or
or
pop
add
orl
pop
or
or
and
push
out
lcall
push
mov
push
mov
inc
push
jb
lret
lods
in
push
and
test
test
fsubrl
inc
inc
or
lods
dec
push
in
sbb
xor
mov
cs
nop
hlt
sub
sub
and
and
push
mov
bound
mov
dec
les
adc
cmp
nop
adc
test
inc
addr16
pop
or
pop
les
mov
sub
or
add
jne
sub
pop
inc
lcall
pop
fdivs
inc
or
inc
mov
and
sahf
push
mov
sbb
aaa
push
test
xorl
adc
push
xor
sub
stc
pop
cmp
add
dec
arpl
inc
inc
out
mov
data16
popa
outsb
or
push
inc
inc
add
push
add
inc
inc
bound
add
inc
test
imul
or
mov
push
pop
insl
ss
push
add
insl
xor
out
fs
incl
add
popa
das
inc
push
inc
inc
mov
add
xor
mov
add
call
call
popl
arpl
push
movsl
add
lret
jb
jg
or
ret
add
xor
lcall
loope
fsubrl
outsb
scas
js
add
imul
pushl
push
inc
dec
push
pop
push
dec
dec
dec
pop
gs
shll
insl
jo
insb
fldcw
mov
or
insl
inc
imul
arpl
outsb
xorl
and
inc
push
inc
xor
rcr
fcmovb
sbbb
popa
xchg
neg
xchg
lcall
lret
jno
je
sub
gs
sbb
popa
out
xchg
jb
popa
arpl
inc
js
dec
mov
fs
jb
mov
adc
or
and
movb
xor
addb
jmp
daa
out
add
inc
rorb
adc
mov
inc
int
jp
pop
sub
push
inc
jmp
sub
add
dec
int
jbe
mov
stos
adc
pusha
and
sbb
push
stos
bound
and
into
jg
inc
push
mov
xor
or
pop
inc
or
adc
sbb
sub
mov
mov
lcall
push
pop
mov
je
add
outsb
and
clc
push
insl
jne
mov
add
test
adc
sub
jo
lds
dec
push
add
add
cmp
jmp
jp
add
add
add
or
sbb
enter
push
add
add
mov
add
xor
pop
add
or
sbb
fadd
pop
push
add
ljmp
das
fmuls
cld
ret
push
xor
mov
mov
daa
or
je
add
nop
lock
loope
nop
cwtl
cli
pusha
cs
or
or
and
or
insb
int3
cld
shrb
jae
arpl
adc
adc
mov
in
or
add
add
addb
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
