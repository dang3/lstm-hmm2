mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
sub
sub
andb
clc
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
push
adc
or
mov
sub
clc
psubsb
and
cmp
add
push
jnp
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
test
add
inc
xor
and
xchg
fidivrl
addr16
cmp
lahf
cwtl
add
cltd
mov
sti
sbb
mov
mov
sbb
aas
and
adc
add
mov
mov
xor
pop
jne
mov
rclb
call
push
pop
jp
mov
mov
sub
sbb
ret
sub
inc
fcoml
clc
jg
adc
sarl
mov
inc
repz
lds
test
leave
jmp
mov
jmp
mov
mov
add
adc
adc
into
ret
ds
mov
cmp
divl
mov
loope
je
dec
js
rep
xchg
add
out
outsl
inc
je
cld
lea
xor
std
xor
jecxz
mov
addb
push
or
add
mov
test
and
cmp
jbe
cmp
xchg
cmpb
add
out
in
mov
jmp
cmp
mov
imul
sub
add
ja
mov
repz
in
sbb
idiv
push
popa
ja
push
mov
mov
xor
jmp
outsb
idiv
enter
adc
mov
mov
inc
inc
adc
pop
in
ja
shl
pop
call
test
clc
call
add
or
in
test
divb
mov
xlat
ret
push
push
jno
nop
mov
sbb
jmp
and
lods
int
shll
sub
data16
jmp
fiaddl
dec
jmp
mov
popa
jb
cmp
ja
sub
xor
clc
ret
nop
mov
fldcw
jbe
mov
mov
push
sub
fists
fwait
pop
pop
pop
push
int
ja
or
flds
fwait
orw
insb
fists
mov
sub
pop
inc
test
test
mov
mov
data16
cmp
in
mov
mov
jbe
mov
pop
push
sbb
pop
nop
dec
add
cmpl
pop
movl
jmp
and
mov
call
sbb
xor
shl
sub
push
adc
mov
add
decb
adc
push
sbb
jo
push
addb
rcl
cld
xchg
jae
into
push
es
jae
xchg
push
addl
mov
cwtl
divl
pop
dec
sete
cmp
scas
jo
sbb
jmp
nop
push
adc
aas
pop
lods
in
cs
adc
sub
dec
je
mov
cs
andb
movsl
mov
push
or
daa
das
inc
pop
sarb
add
push
rclb
and
and
shlb
cmpsb
push
xchg
push
push
push
lea
push
sbb
lock
cmp
mov
cmpl
dec
decw
int
mov
dec
pushl
outsl
out
out
sub
lock
jbe
xchg
push
aaa
xor
in
or
scas
rorl
mov
dec
mov
jae
cmpb
mov
inc
jmp
push
xchg
sub
jp
pop
idivl
jbe
cmp
or
test
cmp
pop
clc
stos
es
call
pop
fistl
hlt
jmp
cmc
jne
movsb
je
popf
pop
pop
jle
mov
pop
mov
xor
xchg
loopne
cmp
cs
push
stos
sbb
call
cmpsl
ljmp
fldl
std
sbb
fdivl
leave
mov
lea
mov
mov
or
push
insl
in
or
sti
mov
push
lea
pop
mov
lret
jmp
inc
adc
filds
dec
sub
sub
ljmp
shll
fucomi
pop
cmp
testl
add
lods
rcrl
xchg
or
sbb
push
and
fdivs
divb
das
ja
and
push
aad
sub
sbb
cld
adc
sub
mov
adc
mov
je
mov
scas
jg
xchg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
ud0
inc
add
mov
jbe
mov
jmp
mov
or
or
lret
lret
pop
mov
mov
inc
inc
and
pop
jo
popa
mov
push
xchg
inc
inc
incl
cmp
add
push
shr
je
mov
mov
cmp
jne
scas
clc
pop
hlt
dec
je
mov
add
aaa
add
or
pushl
in
loop
push
adc
add
and
je
mov
cmp
jne
dec
je
mov
jbe
cmpsb
stc
cmp
jne
or
adc
add
mov
rclb
cmp
jne
shr
shr
sbb
out
scas
orb
mov
shr
or
iret
inc
dec
dec
pop
cmp
stc
aaa
fistps
add
and
mov
cmp
jne
dec
sarl
out
dec
and
add
bound
xor
pop
jecxz
xlat
jg
xchg
mov
mov
shl
or
out
pusha
orb
stos
mov
stos
pop
daa
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
call
push
jmp
or
faddl
clc
ja
lea
push
add
push
idiv
pop
jl
out
int
or
jge
jmp
inc
mov
js
pop
sub
jmp
in
push
lods
lds
pushf
mov
filds
cmpsl
jb
and
add
pusha
xchg
pushf
add
aad
sbb
dec
cwtl
pop
xor
mov
iret
sub
sub
mov
adc
jnp
cmp
loopne
pop
mov
imul
movd
adc
and
add
adc
js
sub
cmp
jg
add
adc
rcll
shrl
call
mov
adc
jmp
xchg
adc
dec
or
mov
arpl
mov
xor
inc
fs
mov
push
fstpt
and
test
jg
cwtl
jmp
push
idiv
mov
add
or
aad
add
cmp
xchg
int3
outsb
jmp
xor
add
pusha
ss
lahf
mov
mov
push
cmp
repnz
cltd
outsb
sar
je
inc
mov
dec
jne
pop
mov
add
sub
adc
cmpsb
sub
fbstp
cmp
and
test
mov
test
jbe
orl
testl
call
pcmpeqb
jb
cmp
cltd
xor
and
ss
iret
mov
push
adc
dec
sub
xor
sbb
dec
je
stc
jmp
fstp
fldt
fldz
mov
pop
or
sub
jg
aas
sbb
leave
daa
mov
cli
or
leave
daa
lahf
inc
pushf
or
ret
mov
adc
enter
xchg
cwtl
push
and
sbb
in
pop
stc
add
mov
or
sub
test
out
sub
pop
stc
xor
mov
lds
mov
stc
lahf
incl
cmp
fidivrs
call
mov
bound
fwait
inc
cmpb
xlat
fadds
outsb
xor
xchg
pushl
pushl
test
into
sbb
rorl
mov
push
pop
test
mov
or
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
incl
mov
mov
addr16
leave
repnz
bound
and
cld
gs
incl
mov
sub
inc
aad
iret
decl
js
inc
mov
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
jg
dec
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
es
mov
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
lcall
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
decl
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
lcall
mov
mov
mov
popa
mov
and
addr16
push
daa
mov
subb
and
and
outsb
bound
xor
jmp
shl
xor
shll
out
mov
pop
jne
push
pop
cmp
repz
adc
cmp
popa
pushl
ficoms
movzwl
lea
push
push
fisubl
fdivrl
mov
dec
mov
push
std
push
xor
movl
ljmpw
add
dec
mov
sub
mov
sarl
out
mov
jmp
push
clc
pop
aas
or
decl
xlat
mov
dec
inc
push
push
inc
push
inc
pop
incl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
hlt
ljmp
mov
ljmp
mov
mov
xor
mov
sub
push
inc
rep
push
or
push
mov
fdivp
mov
jne
dec
mov
xor
and
jne
stos
repnz
mov
xchg
fsubl
xchg
jo
pop
js
inc
sub
ffreep
into
or
sbb
mov
jge
adc
rcr
test
or
sub
out
jge
sub
adc
popl
jmp
xor
jle
inc
scas
clc
lods
int3
outsb
loopne
mov
or
push
cld
mov
mov
jl
mov
xor
push
shr
dec
repz
out
push
jnp
mov
sub
pop
mov
fisttps
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
in
ret
aaa
lods
mov
mov
mov
pop
and
adc
pop
inc
cmp
xchg
stos
cmp
jae
paddd
add
orb
and
loope
inc
xchg
add
add
jo
mov
fcomip
mov
inc
idivb
mov
pop
xchg
cmp
mov
sub
sbb
add
mov
add
imulb
stc
push
push
mov
push
add
pop
lea
push
cmpsl
fdivrl
dec
setne
scas
fwait
add
mov
xor
mov
mov
lock
xor
jb
imul
fmull
or
jne
or
cmp
mov
fcoml
vmovdqa
add
fisubrs
test
test
mov
mov
cmp
jge
shll
dec
jle
jne
mov
add
loope
jmp
lret
adc
inc
xchg
add
repnz
je
pop
in
negb
pop
add
sub
mov
jno
je
cld
pop
cs
xchg
add
jle
mov
out
mov
int3
inc
mov
mov
fcomp
xor
das
mov
shlb
inc
dec
out
es
loop
dec
orb
pop
push
inc
pusha
dec
aam
or
data16
mov
mov
rolb
pop
lcall
mov
push
xor
popa
pop
dec
out
decl
xchg
adc
pop
dec
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
cmpsb
jmp
add
sbb
jecxz
dec
cmp
cmp
sub
popf
enter
sbb
lcall
pop
jmp
push
xor
call
mov
shlb
jl
push
hlt
xor
call
adc
mov
mov
movl
cmp
enter
or
pop
sub
data16
mov
or
cmpsl
cmpsl
pop
inc
or
fnstcw
xor
call
sbb
popf
pop
and
call
pop
scas
cmpb
mov
cli
in
push
call
push
test
mov
push
pusha
push
ss
or
add
jns,pn
add
or
imul
push
push
and
mov
mov
cmpb
je
or
jne
movsbl
inc
or
jmp
add
daa
xchg
xchg
sub
push
jecxz
in
inc
pusha
sbb
adc
xor
loop
fdivrl
adc
loopne
dec
jecxz
pop
movb
add
jne
fidivrs
mov
dec
adc
outsb
ret
add
adc
je
stos
mov
or
cmp
push
je
dec
adc
or
jbe
test
std
pop
dec
arpl
push
pop
cmp
int
mov
enter
adc
jne
jbe
adc
mov
or
push
jns
jo
dec
add
fsubs
push
sbb
mov
sub
push
outsb
popf
adcb
xchg
cmp
sub
adc
loopne
mov
add
xchg
add
fildll
fstpl
jmp
xlat
mov
ret
sbb
inc
or
pop
mov
and
je
dec
or
mov
jne
mov
pop
or
xor
fs
or
add
lds
mov
out
outsl
xor
aas
repnz
addb
cmp
inc
and
jne
xchg
mov
mov
or
mov
jg
pushw
cmp
fnstsw
shll
mov
mov
out
daa
cmp
lahf
adc
push
adc
adc
adc
add
push
pop
aas
pop
adc
mov
dec
loope
mov
jmp
setge
pusha
pop
pop
cmpsb
movl
ja
ret
push
subb
lahf
outsb
mov
fcomps
call
push
push
mov
fists
fs
mov
inc
dec
lock
mov
inc
or
inc
add
testl
jle
cmp
insb
fisubrl
adc
adc
cs
iret
jae
mov
push
lods
inc
pushf
jle
pop
insl
mov
shlb
test
ret
aad
fisttpl
add
cmp
frstor
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
jne
pop
in
sub
add
jmp
sub
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
mov
jmp
mov
mov
jmp
mov
jmp
mov
pusha
addl
test
xchg
push
or
dec
inc
sub
pop
incb
sbb
pminub
push
movl
test
pop
test
adc
inc
mov
je
add
cli
sbb
rcr
fsts
inc
sti
sub
mov
roll
push
sub
or
xor
xchg
ja
ret
loope
test
movsb
fmul
dec
call
cmp
lret
in
aas
mov
cmp
or
add
or
cmp
jne
xchg
push
mov
adc
es
ja
xchg
ret
or
or
jo
daa
popl
test
jle
dec
mov
inc
insb
aas
icebp
inc
fiadds
call
and
jecxz
adc
xor
lahf
xor
push
mov
lock
dec
mov
insb
js
and
repz
add
sbbb
dec
mov
movl
adc
and
inc
leave
loopne
inc
pop
fwait
mov
jg
stos
mov
call
or
bnd
cmp
adc
push
dec
push
add
add
incb
push
jbe
adc
dec
jne
pop
pop
pop
inc
xorl
sbbb
jmp
es
cmpxchg
inc
or
loopne
lcall
mov
mov
mov
jnp
lock
mov
es
sti
mov
dec
cmpsb
rcl
fcoml
mov
fsts
cmp
jbe
sbb
lahf
loopne
fucomip
xor
sbb
inc
movsl
pop
sbb
aam
pop
inc
adc
ja
add
mov
mov
pop
push
xor
leave
pop
push
cmpsb
dec
rorl
cmpsl
mov
and
adc
cmp
push
les
mov
adc
push
push
jne
jg
test
mov
add
inc
inc
pop
ret
mov
test
stos
pop
push
fwait
jge
cmp
rolb
addl
mov
gs
cmpb
push
cmpl
xor
add
jae
jl
cmp
mov
call
and
dec
and
aas
mov
mov
xor
loopne
push
jne
popa
or
add
imull
add
fwait
inc
adc
scas
xor
push
scas
dec
shl
inc
adc
sarb
or
push
insl
jo
or
add
adc
add
cld
in
jne
cmp
inc
lods
daa
adc
mov
ret
pop
push
add
mov
cmp
push
push
popl
aad
dec
or
pop
mov
adc
incl
push
lea
push
mov
push
les
push
sbb
add
or
jnp
dec
and
inc
jg
sarb
sub
insb
mov
pop
push
dec
sarb
pop
jmp
jbe
xchg
adc
adc
das
xchg
jle
paddusw
mov
add
loopne
push
sti
or
gs
movw
pop
or
pop
mov
sub
insl
cs
pusha
or
mov
das
pop
or
loopne
ds
cmp
rorb
jo
sbb
xchg
push
mov
pushf
cmp
mov
mov
clc
lret
aad
push
cmp
aaa
fsubs
rcrl
add
cld
inc
stos
orl
mov
fbstp
jmp
lea
cmp
push
sbb
vmread
mov
xor
cmovge
outsl
loopne
mov
adc
ret
sbb
imul
les
jge
xor
or
call
loop
cmp
xchg
mov
nop
xor
mov
je
inc
jae
mov
or
out
mov
add
jmp
inc
add
jmp
push
pop
sub
and
pop
pop
mov
idiv
or
push
push
addr16
in
add
jae
jbe
add
or
js
sbb
push
repnz
icebp
gs
add
pop
pop
xor
push
ret
push
and
pop
cld
or
gs
ret
fnstcw
or
and
pop
add
clc
dec
js
aas
xchg
test
jmp
clc
or
ljmp
pop
loope
pop
icebp
and
mov
adc
mov
cmp
sub
inc
lock
scas
popa
cmpl
je
cmp
mov
cmpsl
xor
jo
rorl
add
cld
add
mov
sti
sbb
dec
mov
lds
push
sbb
xchg
dec
mov
dec
clc
mov
mov
jmp
mov
movsb
dec
pop
mov
xor
mov
push
mov
inc
cld
dec
jmp
sub
ret
testb
push
cmp
fs
dec
jne
mov
or
ja
jge
and
aaa
add
dec
ret
pop
ljmp
inc
pushf
sbb
loopne
or
add
pop
dec
jne
mov
push
int3
and
dec
loopne
pop
lea
jmp
xchg
das
out
jmp
add
push
sub
imul
mov
inc
pop
jmp
and
rcrl
andl
sub
lret
loope
jo
jo
stos
add
and
jmp
aam
cmc
adcl
inc
hlt
jnp
in
lods
pop
add
add
mov
cmp
inc
cmc
and
mov
adc
dec
inc
data16
add
es
mov
daa
cmp
hlt
mov
outsb
sub
dec
jl
pop
shrb
cld
cmp
jge
sub
jbe
jb
adc
push
cltd
popa
push
fnsave
adc
shr
in
mov
jmp
mov
outsl
pop
cmp
push
std
dec
jl
sub
mov
mov
sbb
inc
sub
add
lea
inc
dec
movsb
add
ret
push
push
dec
cmp
or
lds
scas
push
lahf
cltd
mov
push
mov
fistps
xlat
adc
imul
test
jg
cmp
mov
mov
lea
lock
push
clc
mov
cmpsb
jmp
pushf
xor
jg
adc
push
insb
dec
js
mov
inc
jb
adc
add
push
pop
adc
addb
inc
lret
fcompl
sub
pop
mov
fbld
push
int3
dec
push
lahf
out
and
sbb
inc
add
xlat
xor
mov
fwait
or
jno
cld
lods
jmp
out
loopne
inc
jnp
sar
pop
cmp
ret
push
pop
jg
mov
jle
ljmp
ret
mov
leave
sbb
aad
mov
rcr
pop
jp
pusha
sub
mov
sub
ret
std
sub
or
in
or
push
das
sbb
pusha
test
shlb
push
sub
sahf
dec
lea
push
cmp
int3
ljmp
mov
rcll
push
add
mov
jno
cs
enter
jmp
pop
call
jle
push
mov
or
nop
jae
aas
and
clc
addb
or
outsl
push
subl
push
das
int3
pop
pushl
mov
je
xchg
and
or
scas
add
and
pop
add
add
int
mov
adc
sbb
je
ss
push
and
pop
fcom
adc
dec
add
data16
call
push
cvtps2pd
or
mov
clc
dec
imul
stc
jge
ds
cmp
jge
xor
dec
insb
pop
dec
cmp
nop
pushf
lcall
maskmovq
mull
clc
push
lods
add
add
or
dec
or
mov
je
daa
cltd
cmp
mov
les
stos
test
out
cmc
in
scas
dec
mov
add
xchg
xchg
push
int3
mov
mov
sub
std
adc
mov
mov
fistpll
fistpll
cwtl
cmp
xlat
test
fldl
mov
call
lods
pop
push
add
or
or
and
or
je
cmp
je
cmp
mov
je
mov
jbe
scas
mov
jp
dec
imul
clc
jmp
adc
or
adc
loopne
das
shr
cmp
mov
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
jb
popf
sub
lock
sub
push
jmp
pop
in
test
fstpl
or
call
adcl
loopne
jns
inc
and
data16
pop
jbe
test
push
pop
pop
cmp
and
test
int3
jg
aad
movsl
jae
and
pop
int3
cmp
sbb
fists
xor
jmp
es
daa
nop
sbb
dec
insb
sub
jmp
inc
test
inc
cmp
sub
add
test
cmp
lock
and
icebp
jmp
push
xchg
xchg
add
movsb
rcrl
adc
movsl
mov
jg
inc
add
pop
ss
clc
push
push
add
sarl
minps
into
mov
pop
xor
pop
push
mov
cmp
xor
or
aaa
aaa
aaa
or
dec
or
jo
imul
adc
inc
pop
dec
mov
fs
xchg
loopne
xchg
jmp
and
mov
jl
adc
pop
iret
adc
add
je
clc
or
fdivrp
popa
inc
inc
mov
jmp
aas
add
cmp
and
popa
adc
and
mov
jne
aad
rclb
sbb
fnstsw
cmpsl
or
iret
mov
and
mov
push
test
push
popa
jge
or
in
pushf
out
scas
jmp
rorb
out
sub
mov
enter
sbb
jp
push
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
sbb
cmpsl
testb
add
inc
ljmp
fnstcw
pop
mov
jo
add
je
cmp
out
cmp
nop
lret
push
dec
adc
popa
adc
popa
xchg
sub
jp
push
hlt
xor
push
pop
movsb
push
push
fstpl
adc
pop
mov
aad
sbb
adc
and
stc
cmpl
dec
push
pop
mov
inc
xor
push
mov
jle
inc
mov
clc
jmp
push
test
enter
les
mov
add
cmp
xor
or
aas
sarb
mull
mov
sub
sar
cli
out
dec
adc
pop
pop
ret
add
jo
jbe
lock
cmp
in
sbb
or
or
sti
xchg
sub
jl
mov
mov
mov
sub
inc
jmp
cmp
and
out
mov
or
add
je
cmp
mov
cmp
je
daa
xor
mov
add
sub
inc
popa
aaa
in
insl
and
or
push
stc
push
jb
pop
out
test
out
push
mov
and
loopne
out
xor
sbb
aaa
jmp
push
sti
or
xor
or
jb
jmp
jl
andl
inc
sub
jbe
jmp
jg
mov
cltd
inc
jno
xor
cld
adc
movsb
rol
subb
lret
inc
sbb
mov
clc
lods
inc
xor
ljmp
lods
push
jl
xchg
xor
mul
and
adc
rolb
neg
push
cmp
jae
push
jo
bound
xor
push
adc
inc
push
or
or
lcall
sub
shl
dec
inc
push
dec
push
xor
roll
nop
sub
adc
insb
jmp
pusha
icebp
sti
mov
add
pushf
sarb
je
dec
add
inc
je
adc
or
mov
aaa
adc
push
mov
jmp
sbb
test
sub
jmp
into
leave
cmc
add
popa
pop
or
push
repnz
pop
add
add
cmp
pop
mov
xchg
icebp
jne
add
lods
rolb
ss
lock
popfw
or
push
push
into
inc
add
mov
stos
les
push
call
xor
dec
imulb
jbe
insl
call
sub
inc
call
inc
sbb
cmp
jne
mov
cmp
jge
mov
sbb
lahf
loopne
fwait
mov
ret
lock
add
lea
ljmp
stc
mov
pop
decl
stos
mov
jo
stc
fcoml
lret
in
jge
xlat
sahf
or
or
and
inc
test
insb
inc
push
xlat
mov
cmp
mov
add
fldl
jno
pushf
jbe
movl
or
add
cmpsl
lock
lock
test
add
cs
mov
cmpsl
cmpl
jle
cwtl
or
xchg
dec
data16
inc
data16
or
mov
cmp
das
mov
lcall
dec
jne
enter
mov
movsl
pop
lds
cmp
add
scas
scas
push
add
mov
adc
pop
jo
mov
adc
outsl
sahf
or
push
loop
cld
or
out
lock
mull
adc
sbb
movl
push
xlat
cmp
jle
repnz
xor
pop
lock
or
mov
orb
ret
mov
mov
mov
ss
adc
xchg
hlt
jo
rorl
jge
add
and
or
xor
popa
mov
pop
xchg
dec
push
xchg
pop
inc
xchg
test
dec
loopne
xor
inc
rcrl
out
inc
mov
jg
mov
cmpsl
xor
decl
icebp
adc
push
adc
icebp
or
aad
aam
pop
and
movsb
xchg
inc
dec
in
ret
pop
ja
sbb
adc
dec
or
aaa
push
push
push
mov
incl
movsl
pop
pop
mov
hlt
pop
pop
in
sbb
mov
push
pop
add
jne
inc
cmpsb
jbe
cwtl
inc
sbb
in
loop
mov
dec
jne
les
push
pop
or
sbb
les
popa
mov
inc
xor
sbb
test
bound
and
shrl
adc
fcompl
sbb
add
cli
inc
aam
sbb
cli
pop
loopne
shl
ret
jmp
dec
mov
test
cmp
jne
pop
nop
mov
or
icebp
dec
sbb
push
bound
add
push
ja
xchg
ret
or
pop
test
test
call
rcrb
je
sti
pop
jne
sub
in
sbb
sti
pop
cmp
js
pop
jne
add
dec
jp
pop
fwait
mov
andb
out
and
mov
ljmp
mov
iret
or
sub
loopne
mov
add
inc
cmp
cltd
sub
add
push
gs
imul
out
and
je
pusha
rorb
cmp
outsb
notl
test
sub
dec
push
push
mov
inc
mov
aad
rolb
lahf
test
dec
std
incl
pop
ret
imul
gs
xor
cs
insb
ret
sbb
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
ja
inc
stc
outsl
loopne
sbb
push
neg
aaa
sbb
inc
out
and
push
sub
add
xchg
mov
and
addl
pop
pop
dec
icebp
lods
test
add
mov
call
out
inc
je
movsb
xor
int
aas
iret
les
add
push
repnz
fs
inc
nop
jae
lods
aas
sti
and
loopne
lcall
sbb
loope
pop
cmpb
repz
or
stc
jnp
mov
jmp
dec
cmpb
rol
xor
lock
jae
sub
inc
and
sub
sbb
pop
lahf
push
or
push
mov
icebp
push
je
das
ljmp
xor
cmc
add
in
adc
popa
and
outsl
data16
popa
jb
inc
mov
mulb
gs
aaa
jg
rclb
inc
cltd
dec
aam
dec
hlt
andl
xchg
and
add
jb
sbb
xor
jbe
mov
sbb
xchg
add
mov
rolb
out
jp
mov
add
mov
jge
aad
fmuls
dec
sbb
flds
ret
cli
mov
orl
push
mov
or
xchg
pop
mov
inc
xchg
and
lcall
fadd
xor
mov
sbb
pushf
cmp
test
int3
inc
sub
popa
subb
jp
lods
sbb
dec
push
das
pusha
cmp
jo
pop
or
or
add
jne
orl
push
ljmp
pusha
cmpsl
mov
call
sub
adc
in
bound
push
lock
mov
mov
loopne
push
inc
mov
int
imul
mov
sub
xchg
sbb
test
pop
daa
jnp
and
pop
sbb
ret
sbb
loop
mov
push
lea
or
daa
lock
cmpsl
push
adc
adc
or
das
sub
mov
mov
add
lods
push
add
add
popa
mov
pop
dec
and
push
or
test
popa
rep
jns
and
add
cld
call
mov
outsl
movhps
push
inc
xchg
mov
insl
lods
pushf
pop
fidivl
leave
out
adcb
movzwl
ljmp
incl
cli
jg
push
mov
inc
jmp
cmp
pop
add
pop
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
push
and
and
rolb
int
add
dec
or
cmp
jb
or
js
add
xor
and
sbb
cmp
dec
jbe
pop
add
cmp
push
lock
lea
ret
mov
mov
mov
aaa
lahf
or
push
push
dec
inc
mov
jnp
icebp
jmp
loopne
cmc
fdiv
add
inc
test
je
fnstsw
loop
or
jae
and
je
jl
push
cmp
adc
mov
and
cmp
jne
pmuludq
cwtl
and
or
mov
pop
clc
out
bound
dec
dec
dec
cld
mov
mov
jle
mov
inc
lcall
loopne
jo
adc
or
lock
and
inc
inc
mov
jbe
jae
ret
xor
mov
int
sbb
cli
xorb
sbb
sbb
jb
inc
mov
and
daa
out
arpl
fs
jns
scas
aam
pushf
rolb
je
adc
pusha
ret
lea
xorl
add
les
fldenv
push
sub
or
jmp
adc
enter
mov
repz
mov
nop
push
mov
mov
cmp
pop
sbb
rolb
loopne
leave
ds
cmp
cmp
cmp
cmp
add
and
fdivrl
and
or
pop
gs
aas
sub
jo
push
gs
and
add
pop
bound
arpl
aas
loopne
sub
add
orl
sti
addb
clc
aaa
mov
mov
xchg
pop
pop
mov
lock
shlb
pop
lea
push
push
xchg
adc
add
push
cmp
mov
cmp
and
neg
xchg
je
cmp
or
dec
xor
mov
xchg
aam
in
daa
sub
add
or
dec
xchg
mov
push
in
mov
jp
clc
sbbl
movb
jb
cmpsl
xor
push
sub
int3
ja
and
loopne
cwtl
imul
and
leave
divl
in
push
mov
mov
mov
lods
xchg
in
mov
sub
stos
iret
cmp
jbe
shlb
and
jmp
mov
ja
imul
ja
mov
adc
jmp
daa
mov
push
push
roll
lcall
jnp
and
inc
cmpl
imul
and
sti
mov
jl
sub
or
mov
outsl
jmp
or
leave
jne
mov
mov
jns
push
pop
adc
xor
push
and
mov
test
lret
ja
repz
sub
push
add
fwait
mov
or
or
sarb
xor
jg
fwait
in
pop
xor
fcoml
xchg
cmp
push
andl
push
add
inc
add
inc
ljmp
sbbl
push
mov
push
or
lods
je
cmp
cs
xchg
mov
xor
shlb
sbb
fs
gs
push
gs
add
sbb
inc
adc
scas
insl
fimull
popa
bound
inc
push
fistpll
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
lcall
push
outsl
insl
bound
outsl
js
imul
ja
nop
push
cmp
push
dec
ja
dec
inc
push
inc
add
xor
je
add
outsb
daa
aas
out
pop
addps
dec
dec
push
dec
dec
mov
and
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
leave
leave
lods
test
fs
in
in
enter
in
in
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
arpl
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
cmp
jns
mov
cmp
cmp
xor
sub
cmp
cmp
cmp
sub
cmp
cmp
sbb
cmp
cmp
adc
or
mov
cmp
cld
data16
pushf
pushf
pushf
pushf
hlt
lock
call
in
mov
ror
mov
cmp
sarb
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
insb
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
daa
daa
mov
adc
adc
jns
daa
daa
add
cld
cmp
cmp
clc
hlt
lock
cmp
cmp
call
cmp
cmp
aam
int3
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
fs
pushf
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
sbb
mov
shl
or
and
dec
loopne
mov
es
popf
lods
mov
inc
or
and
xor
dec
testl
xchg
dec
mov
scas
push
and
add
ljmp
pop
mov
pushf
mov
pusha
push
sub
xchg
arpl
pop
lret
fwait
lahf
test
xchg
mov
jns
sbb
adc
out
sahf
sbb
and
and
movsl
mov
and
cmp
jmp
mov
pop
ret
scas
int
outsb
inc
cmpsl
shrl
and
push
stc
ja
shrb
mov
ret
mov
pop
mov
cmp
mov
mov
push
push
jo
mov
cmpsb
jmp
gs
mov
bound
dec
inc
or
inc
je
sbb
pop
or
xchg
movl
mov
filds
dec
popa
gs
cwtl
and
push
dec
inc
inc
dec
add
in
or
daa
outsl
adc
and
dec
out
adc
push
dec
pop
and
mov
push
push
pop
sub
pop
cs
inc
dec
pop
dec
dec
dec
inc
push
das
mov
stc
jne
add
mov
xor
xchg
or
jl
jl
push
jmp
psllw
in
in
repz
cmc
in
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
jmp
loope
in
in
jecxz
in
in
in
out
jmp
ljmp
in
out
rcl
in
in
rcl
aam
in
in
xlat
fcomp
in
in
fcmovu
in
in
rol
in
in
ret
in
mov
leave
in
in
lret
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
in
in
mov
in
cmpsb
cmpsl
test
in
in
stos
stos
lods
lods
in
in
scas
scas
nop
xchg
cltd
in
out
lahf
cmpl
mov
cwtl
cs
ds
or
push
inc
imul
or
sub
mov
push
fwait
insb
mov
mov
jp
leave
mov
jp
push
dec
pusha
daa
push
jg
xor
xchg
add
adc
inc
js
gs
stos
std
jo
imul
dec
dec
and
movl
pushf
jo
nop
aam
aam
dec
and
inc
dec
jne
dec
dec
gs
outsl
pop
mov
push
xor
fbld
or
outsb
mov
mov
scas
mov
push
ret
lret
push
push
loopne
xor
jnp
daa
fisubrl
xlat
inc
jl
inc
jl
push
push
and
push
sbb
mov
scas
cwtl
hlt
dec
ljmp
or
imul
outsl
nop
lock
mov
mov
outsb
sbbl
jge
add
dec
or
dec
jbe
cmp
ja
pop
mov
cmp
adc
pusha
pop
dec
mov
in
jge
nop
cld
scas
cld
pop
jge
mov
imul
add
shrl
ret
insl
jle
lods
scas
shll
sbb
rcl
jg
add
fcmovu
add
push
outsb
fs
pop
scas
mov
shrb
js
mov
mov
mov
or
push
sbb
or
inc
popa
jae
adc
sahf
add
shll
inc
mov
cmp
mov
or
inc
add
lock
insb
popa
je
in
sbb
ds
ds
rcll
lock
and
ficompl
nop
sub
stos
adcb
push
arpl
adc
test
ret
or
je
insb
inc
fsubrl
ds
fisubrl
adc
imul
orb
inc
addb
fs
cwtl
mov
int
bound
fiaddl
hlt
mov
outsl
cmpsl
or
data16
push
addl
or
or
inc
push
stos
push
test
or
mov
addr16
cld
push
mov
data16
sarb
cs
or
add
dec
invd
xor
inc
insb
jae
in
cmp
test
add
and
addr16
inc
cld
fldt
push
adc
jb
popa
fs
push
fs
dec
les
int3
sbbl
mov
in
xor
mov
or
repz
aam
xchg
fwait
push
movsl
xor
iret
jno
orl
jnp
sbb
push
loopne
sbb
mov
test
mov
mov
int
pushf
rcr
and
dec
jne
push
mov
and
inc
push
fsubrs
outsb
arpl
cmp
pop
inc
xchg
fadds
movsb
ret
test
lock
repz
mov
add
cmpl
enter
dec
out
mov
xchg
sbbl
insl
ss
push
pop
lock
jp
mov
ljmp
push
mov
jmp
push
adc
or
mov
mov
les
gs
pop
fstpt
dec
push
or
xor
mov
push
add
mov
add
dec
rcrl
and
idiv
sub
ret
mov
les
sbb
decb
inc
dec
xor
lcall
pop
add
pop
push
dec
mov
call
or
jbe
inc
bound
leave
repz
je
movzbl
push
push
jmp
mov
sbb
lahf
lods
pop
add
ror
or
xor
repz
jne
inc
jne
inc
inc
ds
mov
sub
in
add
orl
push
ljmp
push
sub
out
and
sti
je
loopne
out
sub
pop
mov
sbb
stos
mov
inc
jl
ja
test
pop
ret
insl
inc
rolb
or
jecxz
bound
pop
jb
mov
cltd
adc
jmp
ret
test
and
mov
nop
or
cltd
outsb
jo
add
clc
cs
inc
js
andl
add
fnstcw
add
insl
not
faddp
js
ljmp
aaa
adc
add
repz
cmpb
jbe
adc
sarl
and
pushf
inc
rcr
push
sub
inc
jecxz
enter
imul
xchg
ret
push
push
mov
jns
insl
in
or
mov
and
push
jns
hlt
imul
adc
pop
mov
in
fsin
je
ljmp
jge
add
es
inc
and
cmp
out
mov
add
sub
and
adc
jl
arpl
mov
or
aas
jne
loopne
sti
ja
lea
fwait
dec
imul
loope
jne
or
xlat
sbb
aaa
js
jp
xor
lcall
add
push
adc
sub
push
mov
add
pop
or
sbb
cmpb
and
sub
and
push
int3
add
xchg
pop
lock
or
xchg
sub
jo
in
pop
popa
clc
xchg
test
lock
aaa
dec
sti
decl
mov
sub
je
jae
aam
mov
cmp
jl
inc
mov
or
push
incl
pop
or
sbb
or
jae
inc
dec
jne
mov
out
or
jne
sarb
paddusb
mov
sub
mov
inc
std
push
xor
div
dec
jle
cli
cmp
push
pop
mov
lock
inc
ljmp
jbe
add
mov
sub
jmp
xchg
cmpsb
add
dec
jne
push
mov
sub
leave
push
outsb
addl
sub
xor
add
and
jo
lcall
negl
and
pop
mov
jnp
xor
dec
inc
and
cmpsb
mov
pusha
lcall
xchg
imul
add
fs
fnstsw
je
push
ud0
insb
and
fistps
ret
add
add
sub
add
sbb
fprem
fdivr
mov
xor
outsl
add
lods
push
sub
rcrl
loope
xchg
cmc
adc
ffree
ffree
ffree
fstpl
cmp
rcrb
add
test
frstor
push
loope
data16
jnp
and
lods
jmp
xchg
inc
push
push
mov
inc
aaa
push
cmove
sub
cmp
orb
mov
jp
or
mov
aaa
xor
inc
jne
lock
add
jo
test
sarb
jg
movsl
pushf
ss
cmpsl
mov
rol
cmp
inc
push
aas
inc
js
jge
add
push
fcoml
and
sbb
pop
xor
sub
xchg
dec
mov
pop
sti
int
nop
insl
nop
loopne
add
fldl
jns
add
or
addl
push
movb
rcll
je
and
push
mov
jmp
js
cmp
add
inc
jecxz
push
pusha
sbb
loope
scas
push
cmc
and
lret
lock
xchg
lods
add
inc
out
adc
insl
lock
jle
aas
add
xchg
add
ss
push
fcmovu
ret
in
mov
pop
jge
pop
addr16
int3
test
nop
nop
add
mov
ja
push
push
inc
in
xchg
sub
xor
bound
test
mov
and
ucomiss
nop
scas
mov
rorb
cmp
lock
clc
or
je
das
es
out
cmp
ja
mov
and
add
xor
push
outsb
dec
pop
sub
hlt
shlb
mov
dec
push
ds
call
inc
pop
sbb
mov
dec
idivl
jne
cltd
aaa
push
cmp
mov
push
or
iret
pop
rol
testl
push
pop
sub
mov
es
loopne
mov
sahf
push
jnp
mov
inc
and
call
rolb
pop
xchg
aas
pushf
into
xchg
xchg
fbstp
adc
cmp
cmp
sbb
clc
adc
ficoms
loopne
lcall
hlt
and
xor
insb
stc
dec
inc
cld
or
mov
xchg
les
pop
pop
es
push
scas
iret
test
test
shlb
add
out
leave
push
add
pop
pop
movsb
cmp
mov
test
and
icebp
mov
in
xor
add
movl
testb
clc
ret
adc
ss
outsb
sbb
dec
sbb
add
inc
pop
hlt
andl
cmp
addr16
pop
pusha
ret
test
test
rclb
popa
push
cmp
leave
inc
xchg
mov
xor
int3
jmp
adc
push
andb
inc
sbb
jl
loopne
inc
adc
in
and
loopne
inc
sub
shrl
jecxz
adc
mov
movsl
adcl
mov
push
inc
mov
xchg
mov
jg
not
and
mov
aad
iret
pop
pop
rclb
sub
orl
jmp
mov
out
cmp
pop
add
je
jae
pop
insb
movsb
pop
orl
cmp
nopl
add
add
lahf
mov
je
mov
pop
or
mov
mov
mov
add
mov
add
mov
xlat
popf
jne
dec
cli
jg
mov
sbb
mov
test
test
pop
jns
aaa
xchg
mov
insb
mov
cs
mov
sahf
mov
dec
pop
jns
mov
mov
repnz
xor
mov
ds
clc
or
jge
mov
out
sarl
mov
lock
mov
orb
mov
faddl
in
aam
outsl
lock
in
mov
jne
rcll
addr16
adc
ss
js
bnd
push
enter
push
push
mov
pop
jbe
imul
call
outsl
jno
aaa
call
add
dec
cli
jl
cmpsl
pop
es
push
hlt
clc
cld
push
jne
inc
xchg
lock
push
cld
imull
into
inc
sub
push
in
mov
outsb
and
test
dec
mov
mov
repz
lock
add
xlat
mov
xor
fsubrs
mov
fisubl
xor
mov
dec
lock
mov
dec
das
lea
daa
and
cmp
xchg
mov
rorb
test
rorl
lds
mov
aam
jo
cltd
rcl
pop
ret
add
insl
pop
and
lret
dec
pop
xor
testl
pop
cli
mov
fstps
pop
pusha
rcrb
mov
nop
out
das
lods
clc
mov
test
add
shll
pop
mov
xlat
mov
xor
xor
repz
cli
cmpsb
mov
mov
inc
cli
inc
movsl
jnp
and
pop
cmp
fdivrs
inc
hlt
cli
ljmp
jae
sbb
or
pop
sbb
push
mov
xchg
jmp
push
sub
sbb
ljmp
shll
scas
xchg
inc
xor
xor
xchg
divb
cmp
dec
je
mov
mov
pop
sub
jbe
rcrl
insb
sbb
pop
inc
lods
mov
mov
push
add
shll
mov
cmpsl
pop
and
enter
out
into
sub
dec
fstpt
mov
addr16
xchg
jle,pn
jmp
rclb
and
push
sub
fldenv
scas
jg
cmp
jbe
pop
sbb
dec
int
adc
dec
pushf
lret
mov
push
xchg
mov
add
cmp
sbb
shrb
and
mov
mov
inc
lcall
ret
bound
adc
test
or
jnp
add
push
mov
xor
jle
sub
push
jge
js
mov
lret
fimull
push
or
dec
jne
xchg
sub
jmp
jmp
sar
mov
mov
push
add
std
arpl
into
cmp
jne
cs
and
lods
jmp
pop
lds
inc
ljmp
pop
in
mov
fcoms
sbb
jmp
push
mov
fildl
sub
jae
shl
mov
sti
outsb
movsb
xchg
pop
mov
rep
sbb
mov
xchg
decl
push
in
xchg
pop
pop
mov
mov
pushf
jmp
sub
xor
cmp
cld
pop
cli
cmp
imul
mov
add
and
mov
stos
fnsetpm(287
pop
dec
mov
bnd
pop
mov
or
jl
mov
ret
je
sarb
or
sar
ror
test
push
pop
pop
jne
lea
mov
jge
ret
fistps
xchg
inc
cltd
mov
lcall
cmp
out
in
fimuls
into
sbb
pushf
sub
cmp
xchg
xchg
fdivp
dec
fsubrs
rorl
lea
cmpsb
or
and
lret
stos
sub
je
pop
sbb
test
push
js
lahf
shr
mov
push
pop
outsb
adc
faddl
lock
sbb
mov
test
lahf
ret
sbb
add
mov
aad
cltd
jge
mov
xor
inc
inc
in
add
inc
lods
and
jmp
mov
sub
dec
jecxz
xor
es
aas
and
repnz
call
pop
js
mov
dec
shl
add
hlt
dec
or
dec
fdivl
or
jmp
jecxz
push
jne
push
dec
mov
rcrb
leave
roll
aad
std
test
fdivs
outsb
mov
mov
je
mov
or
je
mov
inc
je
mov
dec
jnp
add
hlt
dec
jl
mov
mov
loope
pop
cmp
jbe
mov
popa
mov
xchg
adc
fdivrl
ds
pop
mov
push
mov
loopne
mov
inc
iret
dec
mov
pusha
fwait
dec
clc
xchg
ret
xor
and
cs
int3
lahf
ds
bound
scas
stos
dec
sbb
daa
sub
cmc
test
inc
les
fdivrs
push
cld
xchg
lock
mov
push
and
jg
in
mov
mov
dec
test
dec
in
test
push
add
sub
xchg
push
mov
jne
pusha
mov
fdivrs
fmull
sbb
clc
dec
cld
lea
insb
fildl
add
cs
pop
rcr
cmp
jl
jmp
add
insl
add
cltd
loope
addps
push
lea
sti
and
sub
xchg
outsl
push
lea
cmpl
xor
stos
or
cli
pop
orb
pop
jge
mov
neg
jmp
or
add
scas
enter
xchg
push
mov
mov
fs
pop
sub
mov
inc
dec
shr
leave
jg
dec
mov
adc
add
pop
pop
pop
aam
ja
push
or
mov
mov
mov
cli
mov
mov
mov
or
arpl
push
add
add
loope
mov
add
mov
cs
daa
inc
cmp
add
rorb
ja
sar
rorb
push
sub
aas
jae
mov
sti
lea
stos
or
sub
mov
push
add
ja
mov
mov
add
pop
pop
mov
scas
push
or
rorl
jmp
enter
xor
push
pushf
push
lahf
dec
dec
insb
jp
cld
inc
dec
inc
dec
lods
or
xor
jge
divb
mov
std
mov
ljmp
ret
dec
aam
adc
jg
cmp
jl
pop
sbb
push
push
stos
je,pn
mov
stos
neg
mov
rep
jmp
inc
inc
mov
loop
movlps
les
stos
pop
pop
inc
clc
dec
test
gs
push
add
push
mov
repnz
fildll
sbb
sub
mov
add
leave
mov
mov
mov
cmpsb
lret
mov
adc
mov
mov
sub
aaa
cmp
scas
je
mov
dec
mov
repz
inc
lods
push
rcrl
jne
sbb
mov
and
push
sti
add
jecxz
js
je
inc
jne
pop
mov
ret
xchg
fnstsw
cmp
repnz
or
repnz
or
cmp
lret
rclb
adc
pushf
fwait
imul
inc
je
push
push
cmp
or
mov
or
push
notb
add
or
popf
pop
pop
inc
loop
push
mov
test
sub
mov
bnd
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
fstps
loopne
add
sub
dec
dec
cmp
mov
out
xchg
pop
jmp
std
je
inc
das
repnz
cmp
stos
or
inc
push
cli
adc
or
xor
aaa
inc
ja
inc
inc
imul
je,pn
imul
test
enter
cmp
xor
inc
fabs
push
jg
sarl
and
scas
insb
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
das
add
push
cmp
xor
stos
xchg
add
jns
mov
nop
sub
jge
pushf
mov
cmp
jae
cmpb
jb
movb
js
decb
and
cmp
jmp
xor
xor
jmp
add
cmp
inc
xor
push
mov
push
shr
mov
add
dec
dec
clc
xchg
out
xor
dec
inc
adc
jp
dec
loopne
call
rorl
je
push
pop
lds
push
add
or
or
lods
adc
jl
pushl
inc
sub
mov
loopne
jae
dec
add
xchg
rolb
mov
fildll
cli
cld
inc
xor
mov
pop
xchg
fwait
mov
das
rclb
pushf
and
jne
and
sub
cmp
pop
in
fsubl
inc
or
ljmp
enter
push
add
divl
pop
jmp
sbb
push
je
mov
iret
es
mov
add
sub
inc
ret
outsl
jns
fwait
sarl
loop
jl
fldz
cmpsb
xchg
mov
ds
lods
lods
out
aaa
or
icebp
daa
mov
loope
pusha
jne
inc
sbb
dec
and
fistpll
out
fldl
sub
pop
add
jg
jne
mov
push
xor
sahf
add
push
cld
inc
jbe
mov
adc
aas
jmp
fstpt
pop
dec
pop
add
test
mov
push
test
insl
js
js
and
push
int3
out
sbb
and
add
jae
fimull
cmpsb
fiaddl
jmp
aaa
mov
adc
or
es
jnp
or
push
inc
imul
push
cmp
aaa
cmp
andl
stos
pop
outsl
sbb
pcmpeqb
add
and
inc
adc
push
push
rcl
mov
xor
fistps
jne
lods
in
add
clc
push
mov
dec
in
insl
mov
mov
out
js
cld
and
cmp
mov
and
ss
or
ja
mov
insb
aam
xchg
cmp
ficoml
lock
push
sbb
fwait
scas
push
repnz
mov
in
cmpsb
xchg
xor
cmp
inc
or
sub
mov
in
adc
mov
xor
push
adc
test
mov
sbb
lea
or
sarl
dec
or
cmp
inc
stc
arpl
push
jae
inc
jecxz
inc
cmp
sub
add
pop
cmpsl
cmc
imul
adc
call
or
add
xor
cld
adc
fstpl
fwait
add
andb
pop
pop
mov
movsb
dec
fistps
jno
adc
addr16
orb
or
lcall
push
jbe
js
cmp
out
sti
add
bnd
insb
pushl
add
ljmp
mov
dec
mov
pop
mov
mov
push
cmp
and
mov
outsb
fld1
add
pop
mov
add
and
fldenv
mov
or
mov
mov
popa
shll
stos
pop
lret
shl
idiv
add
in
cmp
movsb
jg
add
lea
inc
pop
cmpl
jb
ja
and
jb
or
jb
add
fistps
cmp
ja
adc
fisttps
inc
enter
add
inc
dec
jne
sub
roll
cltd
idiv
imul
loope
shl
add
sub
mov
stc
add
pusha
ret
or
test
jne
inc
std
std
cwtl
mov
clc
mov
mov
inc
add
pop
pop
pop
inc
inc
movsl
push
mov
popa
adc
and
dec
popa
test
leave
jg
fdivrl
orl
ret
push
mov
lcall
test
cmp
jl
sbb
add
fistps
add
xchg
mov
ss
lock
or
dec
lock
imul
mov
push
sub
repnz
pop
xchg
cs
loopne
cmp
sub
or
or
push
ret
mov
rclb
enter
fst
add
insb
pusha
loop
cmp
jb
adc
ljmp
pop
sbb
push
push
dec
push
hlt
and
fwait
lea
stc
sbb
mov
mov
pop
jecxz
sbb
int3
or
scas
cmp
pop
mov
rcrl
and
add
cmp
push
and
sub
sub
repnz
mov
adc
lock
sbb
sbb
inc
xchg
sbb
mov
adc
ljmp
pop
shrb
mov
cmp
mov
sbb
jle
mov
and
imull
dec
jne
or
add
mulb
divb
adc
xor
xchg
add
add
inc
sub
in
lock
or
push
pop
add
add
testl
adc
inc
rcl
addb
or
sub
cmp
je
push
inc
call
inc
hlt
out
push
cmpb
sub
mov
push
lea
in
scas
sti
jbe
push
lock
repnz
or
movb
jb
test
outsl
jecxz
push
in
lret
out
stc
jge
call
mov
sahf
jecxz
outsl
call
ljmp
es
pop
stos
mov
cmp
inc
pusha
adc
in
out
repnz
sub
or
xor
std
cmp
push
stos
mov
adc
dec
sub
or
inc
pusha
mov
or
dec
push
inc
es
or
jge
cmp
mov
pusha
mov
sti
std
adc
cmp
push
sub
adc
mov
dec
jo
jns
add
lock
gs
add
out
arpl
mov
ret
loope
push
mov
inc
cmp
imul
xchg
in
outsl
ret
in
sbb
in
ret
and
dec
jbe
or
bswap
insb
lods
jmp
sbb
add
jmp
xor
jle
stos
jecxz
push
inc
cmpb
jne
push
orl
pusha
and
out
lahf
out
xchg
out
jns
add
add
add
push
or
fadds
movsb
sub
jp
add
cmp
push
jo
add
sub
incl
lcall
mov
int3
jp
push
das
mov
inc
rorb
insl
cmc
adc
lock
and
andb
jae
mov
pop
cmp
jne
mov
xor
xchg
loopne
jl
fisubs
push
andb
not
mov
pushf
or
or
or
imul
add
fstp
fcoms
or
or
or
scas
js
subb
push
pop
test
xchg
out
xor
scas
xchg
mov
repz
pop
int3
mov
mov
outsl
aam
and
rcrb
pop
pop
sbb
aam
push
and
lret
out
mov
cltd
cltd
sbb
pop
bound
std
inc
mov
andb
push
lea
and
jl
lcall
shrb
cmp
pop
jo
ret
sbb
xor
lock
test
sub
adcl
popa
test
outsb
fucomi
dec
je
add
jmp
out
aad
xor
popf
sub
mov
push
dec
and
and
push
daa
pushf
jl
imul
popa
and
pop
lods
loope
les
or
mov
loope
lock
and
add
adc
out
shll
je
or
push
jmp
sub
cmp
pop
je
jmp
cmpb
dec
mov
jle
cltd
test
sbb
add
stc
inc
adc
cmpsb
lahf
add
rolb
jmp
cmp
xor
mov
stos
stos
inc
lods
test
popa
mov
test
ret
dec
push
test
cmp
movsb
test
adc
or
or
jle
and
push
dec
bound
pop
sub
inc
inc
call
js
push
add
jb
test
add
dec
es
stos
loope
mov
mov
stos
mov
lcall
addl
daa
jns
cltd
nop
lret
add
add
loopne
push
ja
jns
adc
pushf
jns
mov
and
dec
es
outsl
push
cs
cmc
xchg
lea
lret
sbbb
add
lock
popa
sti
out
ret
mov
adc
or
call
or
lods
into
jge
xor
popf
add
inc
fisubs
push
dec
enter
je
inc
cwtl
jmp
push
sbb
aas
sbb
push
test
sahf
jmp
incl
add
sub
aam
mov
sub
scas
sbb
or
pop
push
jmp
mov
xchg
adc
cli
clc
inc
mov
or
decb
cmovno
push
dec
mov
adc
add
inc
sub
jno
ja
insl
add
rorb
jo
ret
jne
or
mov
imul
lea
mov
stos
lahf
or
ffree
les
xchg
mov
and
sub
jg
hlt
rcrb
je
mov
xor
roll
jae
call
sbb
fwait
mov
cmp
js
lcall
pop
add
lock
pop
inc
lcall
add
sarb
adc
sub
jae
and
jo
clc
add
popf
adc
ret
add
mov
push
movsb
sti
ret
fidivs
popa
or
in
sbb
jecxz
mov
xor
ljmp
xor
sbb
sub
mov
shll
test
lock
dec
sub
push
mov
out
mov
fwait
pop
jl
pop
dec
loopw
in
cmp
jne
incl
lods
pop
arpl
fbstp
mov
sub
and
sub
je
dec
je
sub
fsincos
pop
push
sub
je
jmp
mov
jmp
push
push
push
dec
jbe
icebp
push
jbe
push
inc
mov
jle
fadd
dec
shlb
add
inc
ljmp
xor
gs
add
cmp
add
pop
call
cmpsl
call
cmp
jecxz
or
outsb
mov
mov
lock
sbb
adc
ds
inc
mov
jmp
xchg
adc
pop
jne
mov
xlat
jne
jg
and
fcoml
jne
cmp
jg
lret
movsb
cli
pop
adc
shlb
cltd
xor
sub
add
jg
xchg
test
add
add
js
insb
stos
stos
out
add
adc
pop
dec
push
cmovs
gs
jno
add
scas
fmuls
fadds
xor
fsub
in
adc
cs
xchg
mov
out
mov
loopne
test
xchg
xchg
test
add
cmpsb
xor
out
push
adcl
addr16
jmp
icebp
cmpsb
jl
mov
add
and
int
sti
dec
rcrb
mov
cmpsb
les
mov
jge
lods
popf
ret
dec
jne
int3
lock
adc
hlt
lods
movsb
fcom
test
stc
sbb
mov
pop
repnz
sbb
add
push
dec
and
add
lock
fwait
push
pop
shll
imulb
jb
sub
inc
and
cmp
push
mov
and
in
call
sbb
inc
mov
ss
repnz
sbb
nop
out
jmp
std
les
int3
out
cmpsl
sbb
mov
jo
jge
add
fildll
cs
flds
xchg
imul
fmull
lock
jg
aaa
add
cmpb
jle
and
fs
jne
fadds
pop
ss
add
or
xor
jp
xchg
mov
cmp
xchg
mov
mov
mov
int3
fwait
test
cmpsb
push
mov
jne
cmpsb
and
sarl
xchg
imul
add
daa
fcmovnb
imul
add
fsubrl
fidivrs
inc
lcall
das
pop
or
pusha
xor
or
push
out
dec
jb
push
mov
add
and
in
jno
cmpsb
mov
fs
jo
lret
cs
pop
jge
repnz
fildl
mov
jge
dec
frstor
mov
xorb
push
call
lods
add
pop
sub
or
inc
adc
ljmp
inc
add
data16
xor
or
fdivrs
in
or
orl
sbb
add
pop
inc
or
xor
inc
add
and
test
cmp
xor
push
inc
ds
inc
ja
jne
packssdw
sbb
mov
or
add
push
or
add
adc
dec
push
mov
aaa
inc
push
sbb
add
push
scas
sbb
pusha
xor
into
inc
lods
mov
cmpsl
je
ret
xchg
or
int
pop
xor
stos
mov
push
call
inc
sbb
testb
pop
add
sbb
outsl
push
cmp
ret
jne
mov
imul
daa
fnstsw
sbb
fcmovne
pop
jb
sbb
fwait
jmp
sbb
mov
lret
adc
fisttpll
adc
out
les
push
xchg
dec
or
ficoml
push
arpl
in
mov
jmp
inc
mov
sub
jb
or
je
or
xchg
jmp
add
xor
cltd
pop
clc
mov
ljmp
lret
jmp
or
leave
pop
mov
cltd
pop
jnp
loope
mov
addl
dec
in
mov
add
adc
leave
movsl
lods
in
loope
sbb
dec
push
mov
jecxz
push
inc
push
adc
jl
sbb
ja
test
mov
nop
or
lcall
mov
lods
sbb
or
or
cmp
lock
inc
inc
movl
adc
cld
inc
lock
in
mov
inc
repnz
or
push
sub
pop
add
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
mov
imul
jbe
add
xor
push
jl
je
xchg
jne
lock
adc
adc
popf
mov
add
mov
cmp
rclb
insb
incl
mov
inc
jl
mov
mov
insb
sar
data16
out
in
xadd
bound
mov
es
or
popa
or
fcmovu
jbe
loopne
sar
and
add
subl
loope
les
sbb
pop
xchg
outsl
ret
hlt
add
fsubrs
push
add
jno
mov
and
out
xor
and
push
mov
dec
inc
push
jecxz
mov
clc
nop
fs
out
ret
or
insl
mov
inc
add
sub
mov
jmp
sbb
fwait
mov
sbb
je
scas
sbb
add
hlt
jmp
notl
mov
orb
sbb
test
mov
pop
jg
inc
jg
lods
add
les
push
jmp
insl
cmovp
shll
jmp
mov
jmp
iret
adc
ret
add
push
mov
sbb
jmp
and
xor
jmp
in
push
push
push
leave
in
jle
pop
mov
orb
cmpb
cmp
add
add
sub
fsubl
daa
and
jecxz
cmp
push
sub
pop
test
cmp
lea
test
mov
popf
pop
adc
add
and
cmp
test
dec
cmp
and
imul
aaa
lahf
xor
cmp
sub
nop
cmpsb
dec
mov
xor
xor
ja
data16
xchg
test
les
mov
sub
imulb
in
mov
fidivrl
fsubrs
push
or
dec
not
pop
mov
push
jle
xchg
cld
dec
fadds
and
dec
add
popa
rorb
mov
fwait
daa
test
sbb
lock
test
lahf
dec
cmp
mov
sub
popf
sarb
mov
xor
push
lea
int3
xchg
push
out
stos
ja
movsb
pcmpgtd
je
out
or
cs
or
cmp
pop
mov
or
inc
loope
jo
jmp
je
adc
inc
and
xor
jae
dec
mov
pop
push
cld
hlt
pushf
pop
lock
sub
cwtl
loope
test
inc
xor
daa
sbb
pop
push
push
mov
arpl
sub
bound
addr16
cwtl
adc
das
in
sbb
xchg
xor
insb
pop
icebp
sub
fildl
or
sub
pop
repnz
push
dec
test
adc
or
add
les
popa
les
sar
imul
sub
mov
ja
add
jnp
and
ret
sahf
cmc
mov
inc
mov
add
inc
or
pop
cmpb
jge
lahf
outsl
sub
pushf
sbb
or
test
xchg
in
sub
xchg
dec
xlat
xor
gs
pop
scas
int3
lods
or
cmp
jbe
jne
sbb
xor
mov
jmp
into
es
or
cwtl
inc
fscale
or
pop
lods
mov
pop
xchg
sbb
shll
aas
xlat
pop
push
push
rcl
lret
adc
sub
ficoms
jnp
rorb
pushf
and
lea
adc
jb
jbe
and
mov
mov
jmp
jmp
loopne
icebp
sub
cld
add
inc
mov
mov
mov
aad
mov
lds
insb
ficompl
inc
or
jge
clc
js
insl
jne
in
push
loopne
xchg
dec
loopne
ret
lea
xor
add
and
int3
mov
insl
add
push
mov
push
adc
xor
sbb
les
movsb
rclb
push
xchg
pop
enter
push
push
cmp
je
jmp
push
cs
aas
xor
inc
xor
lcall
and
add
push
imul
mov
push
xchg
inc
adc
mov
push
add
aaa
nop
cmpsb
adc
pop
lcall
in
insl
iret
lret
mov
es
adc
je
sub
inc
faddl
sbb
xor
lock
inc
or
or
stos
xchg
adc
test
jne
inc
ret
in
movsl
add
int3
xchg
fs
and
pop
dec
decb
push
add
jl
mov
shlb
jl
cs
push
push
enter
shrb
mov
cmp
clc
mov
outsb
and
xchg
out
roll
sub
stc
mov
mov
int
xchg
add
sbb
nop
rcl
adc
cmpb
cltd
or
cmp
int3
aad
cmp
sbb
out
mov
gs
int3
cld
std
rolb
ss
ljmp
jae
jae
inc
loopne
fdivrl
mov
xor
in
inc
data16
hlt
xor
lock
cmp
shl
xchg
jnp
adc
test
push
push
jp
cmp
mov
push
xchg
mov
and
outsl
scas
mov
mov
ljmp
inc
adc
dec
andb
jp
fwait
add
cmp
lods
int3
xor
cmp
bound
mov
leave
inc
adc
push
inc
inc
sub
mov
mov
cwtl
push
sbb
movb
inc
pusha
imul
es
in
pop
inc
pushf
pushf
adc
dec
orl
aaa
or
rorl
xor
das
xchg
ret
push
stc
and
inc
adc
inc
inc
cltd
push
push
daa
push
insb
incl
cmp
mov
loop
adc
push
lahf
jge
mov
shlb
sbb
adc
jmp
jmp
mov
cmpl
jnp
mov
jl
pcmpeqw
cmp
cmpsl
jle
mov
fucomip
shl
or
es
push
rolb
sub
adc
jne
pop
aam
clc
xor
jae
popf
arpl
mov
xchg
movsb
mov
cmp
pop
sbb
cmp
xor
popa
and
stos
sub
mov
adc
xchg
ret
or
fstpt
iret
sub
div
adc
push
adc
mov
cmpb
adc
xchg
pusha
pusha
adc
add
xchg
aad
or
scas
xchg
mov
add
adc
aas
mov
sti
xchg
or
sub
and
loope
add
jns
dec
or
inc
data16
add
add
xchg
add
add
aad
adc
add
je
xor
jo
cmp
leave
cmp
rcrb
daa
inc
shll
mov
or
test
in
mov
inc
pop
jg
mov
scas
lock
jbe
das
adc
jl
mov
and
xor
inc
insb
or
inc
inc
inc
jge
shlb
sub
jg
lock
mov
mov
lock
ljmp
lods
fstpt
jl
jne
sbb
mov
xor
push
jmp
nop
dec
or
mov
mov
push
pop
jmp
insb
or
fildll
push
in
push
push
mov
dec
cmp
lock
push
mov
jg
xchg
or
or
push
fwait
es
jns
es
xor
mov
jge
pop
mov
fdivrs
scas
pop
shrb
sub
aaa
push
daa
ja
movl
xor
add
push
shrl
shll
mov
and
xor
adc
int3
and
ja
pop
aam
mov
adc
ljmp
test
adc
nop
addr16
jnp
push
adc
and
dec
jno
and
mov
xchg
scas
imul
add
inc
or
mov
insl
das
cmp
std
push
cs
xor
shrb
add
jbe
pop
in
adc
jmp
xchg
push
outsl
sbb
sub
andb
aas
add
mov
sahf
jge
hlt
inc
ja
add
fs
inc
cmp
addb
jl
js
jge
xchg
or
cmp
notl
adc
addb
xor
lock
push
add
scas
or
iret
clc
sub
aaa
inc
inc
add
dec
in
or
sub
test
cmp
jbe
iret
or
bound
add
inc
mov
movsl
add
adc
pusha
repnz
shrl
xchg
popa
push
xor
stos
stos
test
je
lcall
and
jne
pop
hlt
loopne
xchg
jl
aad
pop
enter
jae
and
outsb
jmp
in
pop
clc
insl
fmul
pop
aad
loope
dec
lods
mov
inc
or
push
mov
fwait
cld
call
fidivs
push
mov
sub
jb
inc
mov
cs
push
cld
inc
sti
stos
sbb
lret
jne
mov
out
or
sub
or
pop
dec
ret
xlat
clc
pop
ja
pop
or
inc
scas
je
sbb
out
push
movl
dec
add
jns
mov
mov
dec
data16
enter
outsl
push
faddl
mov
or
arpl
mov
mov
std
add
test
pusha
lds
in
or
mov
iret
push
cmp
mov
or
mov
in
ret
mov
popa
mov
out
push
mov
inc
inc
cmp
pop
jne
lea
mov
sub
loope
movsl
clc
imul
pop
xchg
jnp
rorl
adc
inc
push
dec
jne
jmp
push
loop
fsubrs
cmp
and
pop
arpl
push
mov
sub
dec
jne
push
enter
jne
je
test
add
ret
push
xor
xchg
or
outsb
sbb
pop
add
jmp
sbb
bound
fcompl
mov
mov
movsb
inc
call
sbb
mov
repnz
jb
scas
cmp
push
mov
jb
in
insl
das
xchg
out
leave
mov
pop
push
cwtl
xor
fcoml
mov
test
mov
and
fcomp
mov
jge
cmp
jle
fidivl
leave
add
sub
mov
cmp
xchg
sbb
int3
mov
and
add
or
xor
fidivl
in
test
dec
sahf
mov
aas
ret
adc
ds
shl
inc
clc
mov
add
push
cld
push
jbe
push
hlt
mov
das
adc
test
je
push
add
into
fld
mov
sbb
jg
and
das
fs
outsl
scas
insl
add
fs
mov
adc
insl
pop
lods
xlat
mov
inc
push
or
dec
pop
mov
adc
int3
pop
jbe
jp
push
cmp
out
in
pop
mov
shlb
jne
imul
mov
xchg
fcomi
inc
or
je
xchg
xchg
or
lea
jmp
fisubrl
fisttpll
daa
mov
nop
inc
jecxz
lret
outsb
xchg
mov
fwait
hlt
xchg
jge
adcb
fsubrs
push
incl
pop
xor
dec
add
sbb
outsb
test
pop
dec
add
sahf
add
pop
clc
sub
test
test
xorl
and
testl
fsubrp
pop
mov
fcompl
jae
mov
cmp
leave
cld
push
in
icebp
mov
dec
es
in
push
fstps
and
repz
add
stos
adc
dec
pop
cltd
test
or
dec
in
lods
inc
fcoml
filds
lret
lods
mov
pop
outsl
mov
sbb
out
and
sbb
inc
repz
xlat
sbb
enter
adc
mov
push
insl
imul
xor
or
mov
sahf
lock
sub
in
imul
gs
and
mov
inc
and
cmp
xchg
lock
inc
in
pop
dec
ret
xchg
sub
add
cmp
cmpsl
mov
lock
mov
push
or
in
in
clc
mov
sbb
inc
cmp
jne
cli
and
test
dec
test
jle
sub
pusha
mov
nop
jo
fistl
inc
jmp
es
lret
mov
sbb
sbb
int
dec
pusha
mov
in
mov
add
add
ljmp
out
loopne
push
into
or
adc
push
fstps
pop
mov
inc
or
mov
inc
test
xor
add
cmpsl
test
lds
xchg
jb
mov
mov
push
jg
pop
and
inc
or
add
pusha
xlat
test
push
test
adc
dec
lods
or
das
pop
hlt
add
lock
sub
movl
sar
add
loopne
outsb
loope
in
or
adc
sbb
jbe
jb
and
pop
dec
addb
imul
iret
dec
sahf
sub
dec
or
mov
inc
pop
pop
or
adc
cmp
out
mov
mov
pop
enter
mov
sbb
pop
sbb
adc
pop
adc
clc
mov
jnp
or
and
jl
iret
enter
add
sub
inc
stc
int
test
loopne
seta
mov
lea
into
loope
cld
int3
lock
adc
xor
sbb
data16
in
aam
orb
das
int
cld
mov
xchg
sub
lds
xchg
ret
incl
adc
sub
fnstenv
testb
inc
decl
cmpl
pop
imul
add
roll
adc
ja
sbb
clc
pop
mov
orb
inc
or
add
mov
inc
cmp
mov
rolb
xchg
dec
movsb
dec
inc
cld
jo
je
mov
pop
fs
push
ja
dec
or
dec
jg
xchg
out
xor
int
enter
or
jmp
or
sbb
adc
pushf
mov
xor
cmp
xor
cmpsl
mov
add
or
and
inc
or
loope
or
xor
enter
cmp
adc
fcmovnbe
sbb
jne
cmp
jns
mov
loope
push
fnstcw
andb
jle
mov
xor
dec
loop
jge
and
insl
rclb
daa
jmp
xor
popf
arpl
push
roll
mov
ret
int3
mov
lahf
pop
pop
fmull
lret
int
repz
rolb
faddl
cmp
adc
insl
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
outsb
jo
sahf
out
cwtl
pop
dec
nop
movsb
mov
subb
push
adc
cmp
push
jae
imul
jle
lods
jnp
inc
ds
scas
inc
push
xor
mov
mov
jl
mov
adc
sbb
in
repnz
mov
adc
or
or
add
leave
jnp
inc
mov
xor
fldl
inc
clc
push
jo
hlt
mov
inc
lock
in
inc
mov
call
add
lods
inc
faddl
mov
out
aam
shrb
add
out
popf
int3
push
mov
sbb
repnz
mov
test
cs
mov
cmpsl
xlat
mov
cwtl
out
out
fidivs
out
test
mov
movsb
pop
test
leave
xor
mov
enter
jbe
leave
xor
popf
push
mov
lahf
mov
lock
fiaddl
push
sarl
int3
mov
mov
dec
outsl
sbb
inc
and
and
fnstsw
cmp
adc
xchg
add
adc
add
int3
cmp
dec
xor
orb
jge
sub
and
add
push
or
in
addb
and
xchg
inc
push
jb
nop
test
xor
adc
xchg
les
mov
enter
out
adc
shlb
and
shl
daa
jecxz
jg
xor
jecxz
jl
cmp
addb
push
sub
jl
pop
pop
or
in
clc
or
xchg
out
xchg
push
or
js
push
addr16
mov
jge
jge
enter
add
test
aaa
ss
adc
imul
ret
dec
rorb
fcoms
iret
xchg
push
fs
call
adc
leave
cmp
xor
inc
mov
shll
sbb
jg
call
addr16
ss
adcl
test
pop
jne
adc
xchg
dec
enter
and
inc
jmp
nop
or
pop
leave
xchg
and
es
clc
jecxz
ljmp
clc
lea
jge
pop
jg
dec
push
cmc
sbb
adc
mov
cmp
clc
jo
sub
xlat
ret
dec
addl
jbe
add
jns
adc
cld
jb
and
orb
jecxz
ljmp
or
add
adc
movsb
mov
and
sbb
adc
jmp
or
or
cltd
clc
add
out
inc
xchg
adc
adc
adc
pop
adcb
push
sbbb
mov
cld
sbb
movsb
filds
std
push
orl
repnz
ret
or
in
fldl
mov
add
mov
aam
mov
test
test
lret
sub
fs
mov
cltd
fs
inc
mov
xchg
dec
push
rcrb
dec
les
xchg
dec
es
push
lret
pushf
js
out
xchg
lret
fcoms
xchg
lret
nop
faddl
gs
mov
lret
out
jmp
out
xchg
shr
inc
ljmp
mov
hlt
lea
out
jmp
out
clc
mov
enter
je
push
into
dec
pusha
pop
inc
push
inc
push
jns
pop
daa
dec
add
cld
jge
repnz
je
fs
jne
das
dec
jne
mov
pop
mov
imul
in
and
add
jb
insl
jo
repnz
xor
jb
insl
push
je
pop
push
cmp
sub
sahf
and
bound
popf
sbb
jae
pop
inc
jns
add
pop
outsl
xchg
xchg
out
cld
push
xchg
and
in
cld
add
ljmp
gs
add
and
pop
add
adc
inc
fistpll
push
sbbb
out
cltd
jnp
enter
mov
adc
push
mov
sub
mov
mov
add
pop
inc
push
pop
push
fs
cwtl
sarl
js
pusha
or
jns
lret
iret
int3
shrb
inc
cld
pop
lods
xchg
xchg
lock
adc
dec
dec
inc
mov
nop
inc
testb
adc
test
or
jae
cmpsb
clc
cmc
das
jo
adc
adc
add
jo
or
test
mov
and
sbb
nop
add
xchg
inc
push
in
hlt
hlt
hlt
int3
out
faddp
int3
int
fiaddl
in
cmpsb
jg
sahf
mov
add
lret
mov
jg
adc
aaa
stc
push
mov
js
push
icebp
pop
test
enter
out
sti
cmpsb
inc
dec
test
jbe
gs
adc
cmp
push
xor
adc
or
jbe
imul
pop
inc
push
push
sub
pop
sub
xchg
xchg
repnz
adcl
mov
mov
jg
nop
push
sbb
adc
pop
mov
push
hlt
hlt
ficoms
or
and
sbb
repz
mov
push
mov
pop
mov
jb
loope
arpl
and
push
and
xchg
outsb
adc
js
push
and
in
test
test
dec
loope
and
push
iret
sbb
mov
in
inc
jb
add
daa
xchg
ret
iret
push
cmc
push
cmc
fiadds
insl
jo
sbbb
mov
inc
sub
nop
adc
and
roll
push
outsb
divb
pop
mov
movsl
int
ds
mov
push
sub
or
fadd
out
sbb
divb
outsl
bound
inc
fs
mov
repnz
pop
inc
xor
in
idivb
push
mov
jmp
in
adc
test
jno
cmp
dec
outsb
es
dec
push
jns
es
mov
popf
nop
lock
cli
in
add
pusha
sbb
testl
loopne
sub
cmp
test
clc
in
pushf
add
clc
test
inc
push
and
mov
add
jg
rclb
add
fwait
addl
jbe
clc
sub
or
pop
sbb
ljmp
movl
dec
push
sbb
fs
push
nop
or
imul
add
enter
cwtl
adc
mov
inc
jo
xchg
iret
pop
inc
dec
pop
out
mov
mov
pop
dec
mov
mov
repz
ds
lock
hlt
dec
ds
in
mov
cmc
xchg
cmp
cld
call
insb
adc
popl
inc
or
xor
sarb
jae
xor
enter
mov
ja
ror
int3
or
imul
jae
fwait
out
add
mov
movb
nop
sbbl
mov
or
out
inc
sub
fdivs
call
int3
sub
cltd
repnz
push
add
push
pusha
roll
in
push
aad
jmp
adc
jmp
test
addr16
orb
adc
std
adc
or
and
sub
cmp
xchg
mov
jmp
inc
in
and
jg
push
ja
mov
jne
enter
xlat
xor
xchg
inc
cmpb
cmp
cmp
mov
push
popa
pop
out
shlb
push
insl
cmp
roll
and
test
mov
add
loop
xchg
orl
imul
lahf
ret
xchg
daa
push
jge
idivl
incl
ja
popf
insb
jnp
and
pushf
xchg
jne
mov
mov
pushf
xchg
out
lods
mov
or
les
sbbb
ljmp
pop
in
pop
mov
call
pop
test
pop
or
in
ret
pop
ret
outsb
push
add
pop
and
add
pandn
jne
les
je
dec
orb
xchg
lea
and
movzwl
push
lcall
rcrl
imul
lea
or
or
inc
add
aas
cmp
clc
fistpl
out
mov
adcl
fs
dec
inc
das
sahf
and
sbb
lea
push
pop
in
repz
dec
jnp
dec
pop
pusha
out
sarb
subb
in
test
data16
fsubl
fsts
jl
repnz
jge
mov
cld
xlat
xor
ja
sbb
adc
or
loopne
loopne
bound
jne
jmp
mov
inc
sub
or
add
jmp
xor
div
and
fsubr
and
movsl
hlt
inc
cmpsl
add
imul
or
push
add
and
or
pop
jb
mov
push
add
shll
je
ret
aas
jns
and
clc
push
inc
es
fimull
call
sub
push
push
pop
in
or
adc
push
inc
loopne
xor
enter
in
and
loopne
std
dec
and
or
xchg
cmpl
jae
adc
pop
or
push
dec
inc
test
and
shr
in
cmp
lds
and
in
push
mov
aad
sbb
xchg
sub
jmp
push
fstpt
out
cmpsl
cmpl
push
movsb
fiaddl
add
call
decl
push
xchg
cmpsl
sbb
adc
jns
pop
mov
mov
jbe
je
push
and
dec
incl
adc
cmp
je
add
sbb
ljmp
dec
add
and
repz
inc
out
js
sub
mov
inc
scas
sbb
in
mov
shrb
or
pop
adc
lock
lock
je
pop
jne
push
mov
insl
inc
fwait
inc
add
or
or
test
push
dec
or
cmp
aad
mov
outsl
cltd
int
inc
xchg
and
mov
orb
hlt
js
call
inc
movsb
push
add
movsl
pusha
out
push
mov
mov
repnz
add
sub
mov
sarb
or
adc
xchg
fnstenv
inc
cmp
sub
repz
gs
cwtl
outsb
xchg
out
imulb
inc
mov
and
lret
iret
jnp
push
in
std
or
inc
stos
or
mov
xor
fisttps
hlt
push
daa
mov
leave
and
xor
xor
frstor
or
clc
out
add
bnd
mov
insb
fidivl
push
ficompl
rolb
arpl
cmp
adc
jmp
and
enter
add
add
add
pop
ja
pop
dec
mov
push
js
push
jecxz
aam
aaa
and
loope
jl
sub
jmp
cld
xor
and
push
adc
insb
lret
je
inc
jmp
testb
jne
mov
imul
lcall
push
hlt
or
stos
sbb
sbb
aam
mov
pop
lock
inc
adc
sarl
rorl
pushf
sbb
dec
sbb
iret
mov
idivl
out
inc
or
fs
fisubl
and
insb
outsb
xchg
bound
mov
aas
jmp
imul
pusha
or
and
cmp
cmp
test
sub
add
enter
push
xor
in
inc
dec
xor
dec
js
push
sub
add
cmove
jb
lret
movhps
stc
push
adc
lods
icebp
push
push
mov
mov
push
cmp
into
test
jbe
jae
ret
sbb
ret
push
push
pop
add
pop
pop
add
add
sub
movsb
add
pop
hlt
mov
inc
push
lds
push
scas
or
repnz
xlat
sbb
rorl
push
sti
mov
sbb
or
imul
lock
lret
fstp
orb
cmp
adc
pop
push
ss
stc
bound
cmp
mov
add
sahf
out
sahf
adc
mov
repz
and
cmp
insl
pop
daa
in
decb
es
cmpb
mov
inc
cmpsl
sbb
xlat
pop
in
cmp
loopne
and
add
in
add
push
and
insb
ljmp
xor
adc
clc
frstor
xchg
sbb
sbb
and
jb
push
sbb
cmp
leave
pop
aas
cmc
and
shlb
pusha
nop
xchg
call
xchg
add
out
inc
xor
jp
add
lret
cmpl
hlt
divb
mov
add
add
adc
roll
dec
and
fwait
xchg
dec
insb
jmp
mov
sbb
sti
pop
or
das
ftst
fwait
inc
out
iret
inc
push
mov
clc
push
and
dec
jo
xor
cld
pop
setns
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
ret
sub
js
mov
mov
or
xchg
jp
add
pop
mov
cli
sarl
call
cmpsl
outsb
push
mov
mov
or
push
mov
mov
popa
xchg
push
or
mov
jmp
lret
adc
in
cmp
and
fimuls
pusha
das
inc
and
aaa
inc
push
jle
cs
cli
movsl
push
mov
push
add
je
sub
rcll
data16
pop
lods
or
xor
push
sbb
pop
adc
or
nop
mov
cmovno
arpl
aaa
or
repz
out
xchg
mov
shl
lahf
out
ds
cmp
or
push
insb
fiadds
jnp
or
jns
mov
push
pop
jg
call
imul
je
aas
sub
fwait
out
movswl
sbb
aam
xor
pushf
push
sar
cmp
pop
jnp
cwtl
loope
and
push
adc
push
push
stc
push
sbb
mov
and
shll
rol
mov
xor
enter
mov
xor
cwtl
je
dec
mov
adc
outsl
gs
idivl
test
push
push
inc
arpl
fisubl
lret
mov
push
pop
scas
or
cmp
repz
push
aas
bound
jmp
jb
in
add
sahf
out
mov
add
outsl
push
jno
pop
fldcw
fst
ds
and
push
inc
push
sub
and
mov
mov
pop
imul
sub
sbb
femms
xor
sbb
js
sbb
jb
aaa
and
xlat
mov
push
notl
and
jmp
dec
jmp
or
sbb
mov
addr16
jb
mov
add
jle
or
add
mov
rcll
xor
outsb
pop
or
mov
jmp
rcpps
sub
in
xsave
fadds
cmp
mov
out
and
sbb
fldt
jb
push
jo
pop
push
je
leave
sbbl
lret
adc
leave
add
arpl
loopne
fisttpll
adc
in
in
jo
clc
or
add
or
jnp
inc
adc
pop
push
and
xor
mov
jmp
jo
in
jp
xchg
out
in
mov
mov
sub
cmp
adc
adcb
pop
jmp
pusha
xchg
pop
add
adc
adcb
adc
adc
out
cmp
or
add
sub
loop
cmc
push
xadd
jns
adc
and
sbbl
inc
mov
and
dec
push
call
mov
adc
and
mov
adc
push
adc
sahf
in
flds
repz
add
mov
pop
adc
lahf
imul
mov
dec
xor
xlat
inc
inc
adc
test
stos
add
andb
adc
call
sbb
sbb
mov
mov
inc
xchg
add
and
fucomp
pop
push
bound
aaa
cltd
jne
stc
sub
shlb
sbb
int3
and
inc
pop
movl
mov
mov
and
push
adc
bound
lret
hlt
loope
mov
lock
sub
dec
pop
outsb
idivb
xchg
lea
cmp
or
imul
jmp
dec
call
addb
ss
xor
in
mov
pusha
jns
int3
xor
jae
jno
xchg
fldl
enter
xabort
sub
addr16
and
call
xor
subl
sbb
outsb
ficoml
xor
call
sbb
ja
adc
add
icebp
adc
test
enter
lret
sti
sahf
out
push
push
bound
out
fdivr
push
pop
lods
je
iret
repz
xor
cmp
repz
pop
outsl
or
movsb
clc
lock
adc
daa
push
dec
jb
push
cmp
ss
lds
mov
xor
or
xor
xchg
fisttpl
and
add
sub
push
rolb
mov
and
mov
and
push
or
push
add
cmp
pusha
test
sbb
adc
jl
xchg
and
xchg
mov
test
sbb
mov
int3
ljmp
pop
adc
aas
push
mov
repz
gs
xchg
push
fwait
sub
mov
xchg
arpl
inc
and
pop
movsb
sub
mov
push
movsl
jmp
and
mov
mov
pop
daa
adc
add
inc
out
cmp
jmp
loope
sbb
imul
inc
test
adc
fildll
jmpw
pop
lcall
scas
inc
mov
negb
and
jb
inc
adc
xor
testb
loope
xchg
mov
xchg
pop
movsl
dec
fadds
jg
add
addr16
sbb
nop
sub
mov
or
adc
xor
cmp
push
mov
jns
mov
sbb
orl
and
or
mov
or
popf
jns
rolb
das
add
jp
cmp
mov
push
cmp
iret
repz
jne
lahf
mov
inc
fnsetpm(287
jnp
sbb
sbb
sahf
call
adc
sub
push
sub
sbb
or
push
rcr
xchg
sbb
sbb
and
flds
or
inc
cmp
fstp
imul
and
mov
mul
sti
push
incl
pusha
dec
mov
inc
daa
add
mov
cli
xorl
rcll
jmp
das
sbb
add
seta
fistps
pop
hlt
repz
jns
add
push
sub
fstl
inc
jle
rolb
lea
iret
repz
movsl
mov
push
mov
int
sbb
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
inc
movb
add
rorb
aas
jmp
cmp
aam
je
cmpsb
xor
mov
mov
add
sub
neg
ret
push
jb
sbb
int
clc
push
add
data16
jmp
addr16
or
fstpl
dec
ds
mov
add
daa
aam
popf
rorl
loopne
rolb
mov
popa
mov
and
mov
pop
leave
stos
sbb
jge
xchg
push
add
test
sub
or
pop
loopne
inc
push
add
in
sub
push
push
out
sahf
out
xchg
jl
ret
and
fdivp
fsubl
daa
stc
push
and
cmp
push
jns
mov
xchg
dec
mov
clc
adc
add
inc
filds
adc
flds
add
imul
rorl
mov
adc
cmpsb
ffree
cmp
fildl
sub
pop
push
loopne
push
xor
std
inc
sub
insb
adc
inc
imul
pop
aaa
fcomps
mull
mov
adc
or
andb
sarl
mov
adc
and
and
jge
out
arpl
and
mov
adc
mov
push
fiaddl
add
repz
pop
es
loope
enter
sbb
add
sahf
xchg
test
and
sbb
inc
imul
inc
add
sub
sarb
daa
mov
outsl
popa
inc
sub
ds
adc
push
gs
pop
cmp
push
adc
aam
mov
sub
adc
jmp
push
or
mulb
fstpt
daa
lock
fldt
daa
cmp
bound
and
imul
adc
cs
mov
daa
push
push
push
jnp
movsl
and
stos
xor
fstp
aas
out
fs
fisttpl
sbbl
dec
mov
jnp
and
gs
and
fildll
sub
sub
lods
inc
xor
and
shlb
add
pop
add
adc
inc
into
loopne
aad
es
inc
push
pop
dec
sub
outsb
inc
jb
xor
aam
loopne
mov
fs
add
pusha
inc
mov
jecxz
adc
xlat
jl
sbb
xchg
adc
fcomip
hlt
push
and
inc
push
dec
insl
out
mov
push
lock
mov
jbe
pop
in
enter
daa
dec
push
enter
hlt
daa
scas
es
es
andl
push
ljmp
and
and
into
fdivp
je
sahf
xor
pop
dec
pop
pop
adc
iret
je
mov
add
pop
sbb
pop
fisttpl
dec
pop
jns
dec
dec
lahf
inc
adc
or
sub
lahf
push
mov
or
lods
lahf
sbb
sub
dec
adc
or
sub
mov
rorb
inc
mov
out
xchg
test
sub
pop
subl
scas
cmp
ret
inc
rcrl
pop
daa
ljmp
push
sub
mov
mov
outsl
push
adc
cmp
fsubrl
dec
leave
jns
dec
jns
push
test
sbb
and
pop
dec
pop
clc
pop
dec
adc
sub
sub
inc
or
repnz
in
xchg
and
push
in
and
dec
sub
scas
pusha
rolb
insl
iret
push
enter
push
fildll
dec
and
push
inc
jb
cmp
sub
sub
xchg
push
add
jge
sub
dec
addl
mov
push
cs
fs
cmp
leave
jbe
cwtl
test
das
mov
mov
roll
jl
out
out
push
or
and
enter
imul
lcall
jl
les
frstpm(287
mov
and
sbb
pop
out
sub
in
pop
sbb
mov
les
push
insl
mov
mov
xorl
push
inc
sbb
jae
nop
and
jecxz
inc
xchg
push
mov
pop
cld
inc
movsb
cmp
into
pop
pusha
dec
xor
and
imul
cmp
scas
lret
push
call
lock
and
inc
daa
fildl
and
movsb
sub
push
mov
ror
repnz
cmp
add
mov
cmp
mov
orl
lods
mov
xchg
pusha
xor
dec
pop
int3
inc
popa
test
add
push
or
orb
xchg
xchg
movb
lahf
outsl
nop
or
cmpl
addl
popf
push
mov
lods
mov
mov
lcall
movsb
clc
mov
add
xor
add
inc
fisubrl
ds
es
lock
or
add
in
test
addl
inc
and
or
sub
mov
dec
inc
inc
adc
adc
add
dec
xchg
add
add
cmp
xlat
jg
adcl
cmp
pusha
xchg
jno
xor
xchg
arpl
cmp
es
adc
cmp
sbbl
mov
dec
and
lods
in
cmp
or
and
nop
lds
adc
push
adc
mov
cmpb
or
xor
and
lret
mov
push
inc
mov
and
pusha
xor
xor
xor
sti
and
fwait
cmp
push
test
icebp
push
out
lcall
jnp
repz
pushf
mov
push
iret
jae
ds
ss
pop
and
daa
xor
jae
xor
pushf
sub
add
and
cs
cld
sarb
mov
fidivs
rcr
mov
jnp
xor
or
clc
mov
inc
aas
bound
cld
push
xchg
adc
in
xchg
imul
lock
sbb
add
sub
add
js
in
dec
cmp
mov
ds
and
xchg
into
push
or
loopne
xchg
jbe
rorl
pop
push
fsubl
xchg
jo
test
jae
test
aam
aaa
adc
jb
shlb
cs
dec
add
jns
call
hlt
bound
mov
sti
int
push
outsl
push
les
add
or
mov
cmp
mov
add
sarb
adc
xor
lock
iret
rcrl
loope
cmp
fwait
imulb
inc
cmp
push
add
repz
imul
in
ret
adc
push
mov
popa
push
adc
cmp
xchg
pop
in
mov
fnsave
and
pop
pop
jb
shrb
pusha
ja
test
mov
xchg
pop
pusha
aaa
shlb
popf
movsb
mov
nop
inc
mov
xchg
or
pushf
cwtl
mov
sbb
cwtl
xor
stos
xchg
jno
sub
xchg
jmp
adcl
jmp
pushf
inc
sub
and
fcoml
mov
and
addl
xchg
cmp
in
or
mov
or
mov
adc
mov
in
nop
pop
and
out
jmp
and
add
jne
js
jecxz
dec
cmpsb
nop
inc
test
cmp
pop
test
in
sbb
push
leave
stos
or
mov
sub
inc
jb
mov
mov
shlb
cmp
cltd
mov
in
fs
inc
dec
ret
pop
cmp
inc
dec
sbb
mov
add
cmpl
lds
adc
jns
push
push
push
fiadds
fbld
xor
push
es
sahf
out
imul
fstpt
repz
pop
je
mov
adc
lods
cmp
fs
dec
dec
or
sub
adc
fadds
fdivs
push
inc
dec
fadds
push
inc
push
push
adc
push
jb
cmp
cmp
in
in
test
adc
aaa
loopne
enter
movsbl
les
fdivs
and
aam
and
ror
jl
subb
jo
pop
xchg
imul
inc
sub
insb
enter
mov
xchg
cmpsl
sub
mov
dec
ds
pop
mov
ds
repz
and
aas
pop
aas
inc
out
cltd
mov
outsl
push
sbb
mov
clc
cmp
add
shrb
xor
xchg
mov
mov
aaa
aaa
mov
mov
int3
xorl
mov
mov
fadds
push
es
popa
test
test
adc
cwtl
movsb
aaa
movsb
aad
sbb
cmp
sbb
ret
imul
lods
or
outsl
aaa
cmp
mov
cltd
xor
cmp
sub
popa
shl
mov
add
mov
and
test
nop
add
sbb
lds
jno
das
mov
push
inc
popa
add
or
repz
test
gs
dec
sub
jl
inc
and
cmp
pusha
or
mov
push
push
or
test
push
fsubs
test
push
sub
jmp
jmp
dec
xor
js
dec
cmpsb
add
or
push
stos
ja
data16
rclb
call
or
adc
inc
inc
cli
dec
jp
out
out
dec
lret
ret
sub
cmp
push
dec
pop
lea
sub
cmp
outsb
inc
insl
inc
cs
xchg
or
add
adc
pop
int3
or
and
add
push
push
xor
jle
cmp
xor
mov
mov
pop
jmp
movw
push
out
testb
imul
inc
out
popa
arpl
xchg
jg
push
adc
mov
xchg
sub
faddl
dec
adc
sub
push
inc
aas
adc
sub
sub
fldt
push
dec
bound
dec
or
push
and
push
and
and
daa
xor
xor
lret
repnz
dec
xlat
and
dec
inc
and
fstpl
fwait
into
and
push
add
js
sub
adc
xchg
mov
ds
xchg
mov
gs
outsl
enter
cmp
adc
push
and
xorl
add
or
shl
inc
shll
mov
pop
mov
outsl
push
or
nop
mov
sub
xchg
mov
inc
nop
inc
or
inc
inc
add
movsl
pop
and
test
push
ss
jnp
mov
es
cmp
mov
test
adc
and
mov
add
lods
pop
add
push
aaa
shrl
decb
sbb
mov
fbld
je
xor
push
mov
cmpl
ja
jmp
and
sarl
push
xorb
sbb
cmp
jmp
outsb
cmc
lods
add
test
push
jp
aas
rolb
aaa
cli
inc
imul
cmp
adc
xchg
jmp
faddp
pop
add
xchg
and
out
fmull
push
pop
decb
jb
xchg
pop
cs
cmp
and
mov
or
addl
jns
add
mov
jmp
xchg
or
sbb
pop
inc
pop
arpl
push
ds
add
adc
xchg
mov
mov
add
mov
cmpsl
addr16
insb
test
int
jbe
mov
imul
insb
lea
adc
lahf
in
dec
xor
push
outsb
imul
inc
arpl
clc
stc
push
pushf
pop
add
inc
iret
jb
sbb
inc
jns
and
sbb
xchg
and
add
push
jb
adc
clc
cmp
cmp
bound
mov
out
int3
fidivs
mov
scas
xlat
mov
popf
add
add
mov
jbe
das
add
clc
fbstp
sbb
cmp
mov
outsb
inc
popa
cmpsl
int3
pop
mov
dec
sbb
jg
sti
or
sub
jl
inc
jl
mov
pop
iret
adc
test
push
or
dec
and
and
stc
dec
test
mov
mov
or
adc
inc
outsb
jns
xchg
sub
and
push
gs
pop
or
push
ret
jmp
and
ss
test
pop
pop
cltd
out
jp
into
pusha
or
adc
or
xchg
ljmp
cmp
xor
cmp
es
and
out
out
dec
push
cmp
js
add
dec
arpl
sbb
and
adc
pop
icebp
dec
stos
mov
into
popf
cld
pop
scas
or
clc
dec
pop
sub
jle
push
xchg
mov
xor
adc
cmp
push
js
out
sub
push
pop
dec
mulb
sbb
and
xchg
lods
test
add
push
lock
dec
xor
add
or
or
inc
popf
or
aam
fisttpl
mov
adc
mov
adc
sahf
decb
pop
push
or
mov
sahf
into
icebp
fwait
mov
bound
inc
hlt
jg
push
cli
pop
jp
mov
mov
cmp
jg
mov
push
dec
jne
arpl
and
add
ss
cmp
test
popa
std
and
or
or
and
xor
aaa
int3
sub
mov
sub
adc
gs
imul
dec
sbb
xor
xchg
jno
inc
fs
pop
lods
push
sub
pusha
arpl
xchg
movb
or
lods
pop
pop
mov
pop
cmp
mov
mov
cs
in
mov
mov
movsb
mov
addb
mov
ss
div
push
adc
sbb
xchg
jbe
addb
adc
inc
xlat
dec
call
inc
outsb
jg
inc
call
je
or
add
sub
pop
out
es
sbb
fcmovnbe
jge
in
cwtl
jne
jecxz
push
mov
push
push
imul
imul
sbb
mov
mov
loopne
or
das
dec
loopne
scas
add
push
mov
inc
jle
pushl
dec
jns
push
sbb
inc
lahf
es
shlb
xlat
fmull
push
or
loopne
scas
sti
sbb
xor
sub
adc
out
sbb
rclb
xchg
fcmovnu
cmp
or
mov
fcoml
arpl
mov
aaa
hlt
lods
mov
outsl
mov
jmp
and
clc
adcl
or
jne
inc
push
lea
repz
xchg
push
addr16
lea
js
cltd
dec
sbb
fabs
inc
push
push
fnstsw
push
push
mov
sbb
ss
push
lds
jge
jbe
je
repz
hlt
sahf
negl
movsl
stos
addr16
xorb
and
inc
inc
cmp
jle
mov
xchg
xor
decb
mov
push
leave
adc
mov
loop
add
add
icebp
and
xchg
dec
dec
push
sub
mov
lods
scas
sub
inc
mov
test
inc
cmp
add
call
sbb
xchg
add
daa
cmp
je
xorb
stos
inc
xor
dec
cmp
lcall
bound
pop
scas
jmp
mov
nop
adc
call
adc
jl
inc
xor
cld
adc
add
call
imull
dec
sub
adc
mov
sub
loop
cmp
adc
fildl
inc
hlt
idiv
inc
xchg
pop
xorl
decl
outsb
or
adc
bound
orl
inc
push
imul
mov
inc
js
and
shrb
sbb
sub
cwtl
inc
mov
js
repz
sbbb
fdivrs
jo
fcompl
mov
adc
add
jp
mov
rorb
or
or
aaa
aaa
mov
or
je
pcmpeqb
mov
rorb
or
lahf
push
add
push
add
dec
cld
aas
jne
andb
push
in
clc
arpl
insb
sbb
lods
and
fdivp
inc
push
clc
and
push
inc
jl
scas
andl
jle
sarl
inc
fistps
sarb
jg
daa
inc
and
mov
push
hlt
inc
test
dec
jo
out
lods
cmp
jg
ficomps
sbb
nop
add
imul
rorb
push
push
outsb
lock
icebp
or
fcmovne
shrl
jle
jg
sbb
ret
or
or
xchg
fisttpll
pop
mov
imul
push
pop
es
movsl
mov
jg
push
call
cmpsb
sti
inc
popf
jecxz
pop
add
and
stc
mov
adc
push
and
fstpt
sub
add
mov
pop
ja
testb
mov
repnz
cmp
data16
insb
and
shll
aad
call
and
dec
mov
icebp
insl
jg
xor
adc
sbb
sbb
pusha
push
add
mov
add
jae
and
sahf
push
jp
mov
adc
or
or
fcoms
in
movsl
dec
push
fadds
and
cmp
stc
adc
sub
cld
dec
add
sbb
and
fidivs
lds
push
ds
inc
xchg
inc
out
lock
nop
mov
add
rclb
ds
lahf
add
stc
jmp
pop
or
cmp
pop
mov
xor
inc
scas
sub
mov
imul
fsub
sub
jle
fwait
sbb
lods
push
pop
mov
rolb
add
xor
fistl
push
pop
mov
dec
inc
fadds
cmpsl
xor
fmuls
roll
lea
enter
movsb
and
sub
hlt
xor
subl
sbb
adc
mov
ljmp
pop
repz
repz
push
pushw
cmp
popf
or
xchg
xchg
inc
inc
aam
fdivl
xchg
lret
dec
clc
out
add
aas
mov
int
ja
jp
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jnp
out
jmp
rcl
int3
cwtl
pop
psrld
bound
insl
or
lods
push
popa
xor
dec
xor
mov
imul
test
in
xor
or
xor
mov
les
call
sbb
sbb
xor
clc
fs
mov
cwtl
sbb
cs
jo
and
xor
dec
mov
dec
cmp
inc
mov
mov
push
adc
icebp
push
outsl
sbb
cli
insl
rorl
jl
sbb
add
cmp
cltd
adc
call
popf
clc
xchg
pop
nop
daa
out
and
les
test
pop
lcall
push
nop
sahf
adc
ror
not
lcall
pop
xor
es
push
jl
jge
cmp
lret
xlat
push
adc
ds
test
les
out
inc
mov
shlb
test
cmp
adc
adc
movsb
fmuls
inc
add
addb
mov
ret
mov
call
dec
insb
fs
adc
ret
incl
and
loope
or
test
dec
dec
ljmp
sbb
dec
aas
sar
mov
mov
mov
dec
scas
sti
pop
test
loope
pop
sub
stc
leave
inc
ja
xor
clc
addl
popa
adc
lods
clc
cwtl
inc
dec
into
mov
adc
inc
ljmp
jb
add
add
push
inc
mov
dec
sbb
ja
cmpxchg
jg
mov
out
sub
fildl
mov
push
leave
nop
adcl
jg
inc
nop
inc
push
push
int
pop
sub
jl
inc
out
mov
xor
mov
inc
dec
jne
aas
lcall
stos
jne
xor
inc
add
fsubl
int
inc
jmp
add
int3
and
ret
rolb
in
add
pop
bound
aam
or
fadds
pop
cmpl
dec
shlb
nop
add
orb
push
jle
add
test
sbbl
popf
es
mov
sarb
loopne
rclb
insb
add
or
inc
in
jne
lret
aaa
pop
xor
out
cmp
pop
out
fcoms
add
insb
cld
pusha
add
inc
ds
jne
mov
fsubrs
xor
les
scas
jg
filds
dec
fisttps
cmpsb
aas
movw
mov
stc
dec
or
jbe
por
addr16
test
inc
jp
push
inc
pop
ret
add
js
inc
sub
loopne
sahf
jb
fdivrl
js
pusha
or
mov
mov
pop
mov
cmp
jmp
add
bound
cmp
add
cmpsl
or
daa
push
fcmovbe
pusha
inc
daa
adc
fadds
daa
mov
or
inc
cld
inc
inc
gs
add
lret
popa
pop
xchg
lods
pop
ja
xor
test
jbe
adc
cmpsl
imul
mov
add
sub
dec
std
adc
jg
repnz
test
ss
mov
add
adc
clc
lea
pop
cmp
data16
push
dec
ss
cld
mov
hlt
add
lea
cli
push
insl
sbb
push
cmp
jo
jge
enter
mov
fcoms
inc
pop
mov
mov
mov
sbb
dec
sahf
clc
fwait
clc
mov
sti
add
push
clc
cld
ds
mov
mov
cmp
inc
hlt
stos
sub
adcl
jne
lea
popa
mov
ds
xlat
sbb
enter
dec
fldenv
or
ret
xor
jmp
aas
or
mov
imul
or
fdivp
gs
ret
inc
or
and
or
pop
inc
daa
testl
shrb
jmp
cmp
and
cmpb
int
adc
add
pop
push
add
add
mov
cmp
jnp
aam
and
and
fsts
fsubs
jae
daa
sbb
repz
jl
inc
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
and
pop
or
loopne
sbb
pop
int
push
or
sub
add
into
cmp
pop
xor
insb
lock
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
enter
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
iret
arpl
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
mov
stc
add
inc
popl
insb
ljmp
call
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
filds
mov
push
lret
xchg
fadds
push
push
clc
push
les
les
mov
daa
fiaddl
xchg
pop
mov
xchg
in
xchg
mov
inc
sbb
adc
pop
in
push
or
cmp
mov
pop
mov
push
dec
clc
in
or
jb
or
pop
jbe
loopne
push
shll
push
test
cmp
cmp
data16
mov
jns
mov
mov
or
ret
jno
lea
mov
mov
pop
mov
test
add
push
dec
mov
or
xchg
lock
dec
sub
lock
fs
add
mov
lock
cmp
sbb
mov
cmpl
xor
add
mov
mov
das
or
ja
xchg
ja
add
add
loop
inc
add
push
xorb
cmpb
movsl
mov
xor
jo
repz
sbb
push
adc
ja
inc
and
jne
decb
leave
add
mov
dec
dec
dec
mov
sub
cmp
dec
add
mov
jle
inc
out
and
fistl
jae
jne
mov
call
sbb
mov
adc
pushf
divb
inc
xor
bnd
push
dec
pop
sub
sbb
inc
gs
repnz
add
xor
dec
jo
dec
in
cmp
test
push
sub
enter
scas
xchg
xchg
xchg
enter
xchg
xchg
cwtl
cltd
enter
lcall
enter
or
addl
xchg
enter
enter
mov
enter
pop
imul
pop
pusha
imul
jo
mov
push
fs
dec
dec
lock
jns
jp
xchg
xchg
insl
mov
push
pop
pop
mov
lea
push
lahf
push
cmc
or
xchg
popf
adc
push
adc
negl
ret
cmpsl
jp
add
adc
inc
mov
inc
sub
jl
scas
adc
fsts
jno
push
push
nop
imul
push
aam
add
mov
pop
push
push
jb
jo
jb
jns
imul
imul
stos
inc
shlb
adc
imul
and
xchg
lret
test
ja
push
out
dec
ret
out
daa
mov
xchg
mov
pop
mov
sbbl
or
in
lock
mov
cli
add
dec
sti
and
xchg
aaa
outsb
fstpt
inc
add
and
fidivs
test
pushf
push
mov
cmp
pop
movsb
push
jo
push
fildl
inc
imul
mov
in
insl
mov
cltd
insb
mov
pop
jg
sbb
mov
cwtl
push
mov
call
aam
not
fs
fsubl
pusha
inc
mov
rep
inc
mov
inc
gs
mov
inc
orb
dec
bound
or
or
mov
lods
inc
push
iret
pop
xchg
out
add
cltd
sbb
insb
inc
fst
movsl
push
add
cmpsb
jge
xchg
addr16
orb
inc
jl
call
popa
sbb
outsl
push
or
sbb
and
inc
ret
adc
dec
or
inc
or
cmp
aas
or
adc
add
out
cmp
les
in
mov
outsb
call
and
add
std
add
clc
push
sbb
psllq
push
adc
pop
jp
sbb
lret
mov
jbe
in
inc
faddl
movsb
jl
dec
enter
js
or
cmpsl
mov
xlat
inc
xchg
push
jno
xor
mov
ja
and
mov
xor
scas
lock
fldenv
xor
and
subb
sub
xorb
jo
aas
mov
repnz
pop
loopne
dec
mov
dec
decl
jle
jl
push
into
xchg
mov
rcll
mov
shrb
xor
fdivrs
leave
cmp
or
jmp
rcrl
push
gs
xchg
mov
sbb
mov
jge
jne
push
adc
dec
mov
and
je
les
dec
mov
or
xor
lock
andl
fidivs
pop
in
in
aaa
push
int
and
movsb
call
in
jo
jae
cld
outsl
test
gs
in
lods
insl
in
or
or
cmp
jo
jmp
cmp
pop
mov
pop
jbe
jne
sub
cmpb
inc
popa
outsl
jno
xchg
leave
sbb
inc
adc
jg
jp
lods
mov
fstl
loope
dec
movsl
add
jno
mov
jnp
add
fdivp
or
fnstcw
cmpsl
mov
ret
test
gs
pushf
xlat
xor
movsl
push
xor
rol
adc
mov
pop
jb
ds
or
jmp
pop
pop
cld
in
adc
xor
pop
loopne
aam
cmp
lods
xchg
cwtl
jg
xor
and
mov
cmp
dec
or
hlt
out
xchg
pop
xchg
pop
je
les
cli
rcrb
and
andl
and
jb
add
dec
xchg
movsl
or
push
dec
lods
inc
mov
mov
adc
inc
popf
ret
push
bound
cli
call
mov
xor
test
jne
push
push
jno
std
cs
dec
xor
cmp
jle
xor
lcall
or
rcrb
sub
je
or
cmc
xor
adc
pop
shrb
push
sub
mov
pop
pop
adc
inc
aaa
orl
inc
gs
sub
or
add
nop
fisttps
clc
jg
sbb
mov
movzwl
ret
push
push
movsb
mov
sbb
lret
je
mov
dec
and
sbb
outsb
mov
iret
xor
and
jmp
jle
in
je
jmp
js
pop
fdivrl
mov
insb
sbb
test
out
jne
loope
rcll
cld
arpl
pop
mov
push
cmpsl
lds
je
sub
xchg
addb
and
add
addr16
lods
xchg
push
cmp
aas
pop
je
mov
cmp
lar
decb
ja
mov
xlat
mov
adc
sbb
or
cli
aad
mov
cmp
insb
loopne
std
in
push
add
or
adc
add
mov
mov
pop
into
jmp
imul
and
aaa
mov
in
fisttpl
int
push
adc
mov
mov
sbbb
ja
jb
add
add
call
out
xchg
and
mov
mov
or
adc
in
push
jl
cmpsl
iret
imul
out
loope
cmpb
xor
arpl
and
ja
insb
movsb
add
sub
sahf
out
pop
cwtl
notb
addb
lret
scas
mov
mov
sbb
or
dec
pushf
xchg
mov
mov
and
fadd
jecxz
popa
dec
ret
jge
scas
cmp
add
sbb
mov
adc
mov
and
push
adc
jne
cmpl
cwtl
pop
pushl
push
movsl
xor
outsb
or
xor
dec
xor
pop
pop
sbb
dec
pop
sbb
xor
fadds
mov
add
leave
push
add
xor
mov
aaa
iret
jmp
cmp
bnd
add
jmp
clc
dec
cld
mov
cs
cltd
push
idivb
mov
or
movsl
and
mov
lock
lea
inc
test
add
jmp
xchg
movsb
push
sub
mov
push
xchg
movl
xchg
jecxz
mov
mov
inc
pop
pusha
inc
sbb
repnz
xor
cmp
add
repnz
pop
adc
faddl
fs
subb
add
push
movsl
jle
neg
mov
incl
cmp
pop
push
ret
call
or
mov
push
ret
mov
test
enter
stos
mov
jg
jp
mov
clc
ret
ss
aam
or
add
ss
push
jge
test
shrb
mov
sti
jo
sub
das
bound
or
jo
xchg
xchg
fdivl
ret
or
enter
jle
inc
xor
clc
inc
jge
add
push
popa
fstpt
inc
jb
in
scas
cmpl
aad
jns
sbb
scas
or
adc
xlat
cmp
les
ret
push
scas
pop
jp
or
cmpsl
mov
or
or
dec
je
jmp
fdivrl
push
pop
stos
jl
adc
imul
sbb
addr16
or
jmp
movsb
popa
sbb
out
sahf
sbb
xchg
daa
fs
loopne
cmove
sub
push
or
shrl
push
jmp
push
mov
mov
xchg
push
or
xorb
sarb
adcb
mull
in
andl
adc
jl
lea
hlt
push
stos
sbb
mov
add
or
jae
mov
test
or
add
mov
mov
add
push
imul
addl
cmp
jl
or
sbb
mov
jmp
iret
and
fstpl
or
cs
cmp
sub
clc
cld
xchg
cmp
ret
or
xor
iret
cmp
add
jl
cmpsb
xor
js
rclb
sbb
pop
outsl
loopne
jne
je
lea
jnp
add
popa
jns
negl
enter
push
cmpsl
mov
imulb
out
flds
fstpt
dec
fstl
movsb
push
inc
add
push
pop
cmpb
dec
jge
mov
fildll
jmp
push
fdivs
jo
cld
inc
cmp
pusha
das
movsb
stos
ss
push
jnp
adc
mov
or
ja
or
jg
xorl
or
mov
dec
push
fadd
add
push
aas
xor
aam
addb
pop
faddl
jnp
dec
xlat
jnp
cmc
xorl
test
mov
iret
shr
cmc
fldt
fstps
arpl
jbe
outsl
inc
adc
out
pop
push
mov
inc
adc
or
arpl
fmuls
sub
sbb
pop
lret
add
mov
mov
push
xor
insb
jge
fistl
aaa
or
cmp
jb
insl
sbbb
les
xchg
rcr
imul
jnp
add
cmp
inc
push
inc
outsl
xor
cmp
and
jmp
std
movq
push
lock
dec
addb
pop
jmp
sbb
sub
push
push
add
jmp
or
pop
ret
jb
and
clc
lea
add
push
jge
pop
pop
sub
jp
adc
jno
pushl
lock
and
fildl
sbb
adc
inc
push
cltd
lret
adc
pop
xchg
mov
je
jp
imul
loope
ja
jb
icebp
xlat
mov
out
or
ret
vpaddsw
lcall
movsb
cmpsb
icebp
dec
add
test
flds
and
fwait
dec
cmp
mov
mov
pop
or
jne
or
mov
or
in
pop
call
adc
sbbl
lods
adc
testl
mov
sub
xchg
aam
das
das
dec
adcl
add
pop
adc
je
addr16
push
dec
push
dec
pop
push
dec
or
add
cmp
jl
invd
dec
push
gs
imul
inc
or
add
inc
mov
pop
repnz
lods
pop
push
mov
or
gs
insl
js
push
cmp
dec
or
in
push
or
cmpsl
or
pop
inc
inc
push
cli
dec
and
orb
sbb
or
or
push
into
sbb
or
or
mov
iret
adc
sbbb
addr16
lret
add
inc
loop
push
insb
cmp
and
cmp
xchg
scas
dec
sarb
adc
clc
outsl
or
incl
mov
mov
mov
add
pop
sbb
cmp
stos
pop
fcoml
ljmp
aad
adc
sbb
scas
push
sub
adc
dec
xlat
pusha
iret
push
imul
push
ja
outsb
addr16
stos
shrl
inc
cmp
pop
mov
test
icebp
nop
movsb
orl
incb
imul
out
orb
jnp
mov
xchg
xor
pop
push
jb
mov
bsf
mov
lods
test
jb
jb
mov
jb
aam
int3
test
inc
xchg
shrb
mov
dec
addb
add
push
inc
insb
imul
xchg
cmpsb
scas
shl
mov
cmpsb
dec
imul
lock
fsubrs
jns
sbb
insb
mov
or
mov
inc
ja
dec
jb
jae,pn
fcoml
push
add
imul
mov
fs
outsl
test
lock
popf
sbb
adc
dec
outsl
sbb
sub
push
xchg
push
out
dec
outsb
adc
fsubrs
xchg
jnp
xor
roll
sbb
push
mov
inc
outsb
insb
call
mov
cmpsl
or
dec
imul
adc
xchg
test
or
movsb
jbe
out
mov
lock
gs
add
push
xchg
out
add
nop
aam
add
ficomps
jo
sbb
fimull
jns
xchg
xchg
xchg
jbe
xchg
cmp
add
adc
push
cmp
inc
jbe
dec
or
push
fsubs
enter
flds
push
add
push
cmpsl
hlt
mov
movsl
cmp
mov
movsl
push
mov
repnz
and
push
xchg
mov
push
or
sub
push
and
dec
lods
outsb
sbbl
in
dec
or
pusha
cmpsl
push
leave
xchg
pusha
mov
mov
mov
mov
pop
nop
adc
out
mov
mov
shrl
push
inc
and
inc
outsb
sarl
mov
or
mov
sarl
out
mov
rorl
imul
pop
or
and
js
sbbl
push
nop
mov
pop
fdivrs
movsl
insl
jo
jb
jbe
push
mov
xor
montmul
mov
cwtl
nop
jb
push
mov
inc
jo
outsl
adc
sbb
xchg
xor
lock
outsb
adc
add
nop
lods
adc
jl
in
push
pusha
scas
add
sahf
mov
push
and
mov
mov
mov
repnz
mov
scas
lods
or
ror
call
add
sub
or
sbb
add
rorl
pop
mov
pushf
shl
fdivl
push
mov
mov
movsb
test
test
movl
and
insb
ret
or
add
fimuls
ror
push
jbe
push
imul
jne
inc
imul
lock
mov
sub
push
and
xchg
fiadds
enter
mov
in
push
and
or
cmpl
lods
dec
inc
lcall
cmp
mov
pop
pop
cmovns
jae
fs
jo
das
sar
jge
das
pushf
jae
push
rclb
sahf
cmpsb
adc
call
iret
fdivl
pop
jl
outsb
adc
sbb
cwtl
mov
mov
int3
data16
fwait
mov
mov
out
mov
dec
roll
insb
xor
mov
or
mov
lcall
mov
jnp
cmp
lock
cmp
mov
inc
arpl
and
xor
push
ljmp
cmpsb
lret
das
dec
jle
xor
nop
aas
jl
cs
movsb
xor
mov
or
xchg
clc
les
into
lock
fadd
pop
push
leave
push
lods
mov
fwait
loope
lret
push
xor
pop
push
lds
outsl
fs
cmp
test
pop
mov
fwait
in
enter
enter
mov
sub
mov
loope
add
push
iret
shlb
js
dec
je
and
out
inc
xchg
inc
out
loopne
or
add
push
in
pop
popf
mov
pop
test
inc
int
push
jns
fimull
xchg
fbstp
stc
fcoms
fsubrs
mov
cwtl
push
or
or
add
or
and
jb
out
sub
and
roll
loopne
push
pushf
adc
pinsrw
or
inc
dec
adc
adc
mov
xchg
jl
xchg
adc
xchg
mov
xchg
mov
inc
jo
mov
repz
js
testl
out
in
ret
mov
mov
daa
cmp
or
in
push
in
adc
in
push
sbb
inc
push
in
and
and
add
sbb
in
in
ds
repz
dec
or
push
and
out
sahf
out
xchg
mov
iret
fnstsw
loope
sahf
jmp
pop
ds
insb
outsl
inc
pop
cs
push
add
jmp
xchg
inc
xor
xchg
pop
adc
outsb
push
repz
iret
cld
fs
iret
repz
pop
fs
clc
push
in
dec
test
mov
push
test
add
or
pop
push
adc
aaa
movsb
jno
filds
xor
clc
sub
mov
aad
gs
pop
push
lahf
jle
pop
fwait
fs
xchg
je
daa
xchg
popf
idivl
fcomp
iret
scas
dec
cmp
fldl
insb
and
pop
fdivrp
inc
std
in
ja
push
pop
add
push
mov
cwtl
mov
popa
rorb
xchg
arpl
jns
xchg
pop
inc
unpckhps
fsubrp
data16
and
adc
gs
cltd
fidivrl
mov
jno
cmpsb
jecxz
adc
mov
mov
xchg
add
inc
fsubrs
pop
push
imul
lret
and
int3
cmp
test
push
xor
jae
lcall
add
pop
sbb
inc
int
dec
addb
jle
int
jmp
xchg
sub
mov
lcall
push
fadds
add
enter
jno
sbb
or
dec
sub
push
inc
insb
or
negb
push
movsb
adc
imul
sti
adc
sti
fwait
icebp
lcall
cli
stc
clc
push
push
push
push
push
push
loop
cmp
jnp
lock
sub
sub
js
cmp
push
pusha
fimuls
jns
mov
dec
push
xor
sbb
push
or
xor
and
mov
xlat
add
sub
aam
add
push
xor
pop
add
test
push
popa
addr16
test
lcall
push
lods
push
or
loopne
mov
les
sbb
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
incb
push
or
push
push
pop
mov
or
and
mov
push
sub
adc
les
mov
out
cmpsb
pop
or
jnp
add
pop
sub
add
cwtl
and
mov
dec
dec
fs
imul
shr
cmpl
pusha
ficoml
inc
movsb
lcall
bound
loopne
frstpm(287
gs
cld
nop
mov
cmpsl
dec
push
mov
pop
dec
mov
aad
jb
stc
push
mov
add
inc
popf
add
jb
leave
jae
fidivl
loopne
loopne
push
inc
lcall
pop
stos
dec
inc
in
popf
lods
xchg
jo
mov
push
mov
dec
pop
cmp
xor
or
adc
dec
adc
outsl
je
push
or
pop
and
jmp
adc
sub
mov
pop
scas
lcall
add
mov
pop
add
mov
and
add
repz
push
sub
jne
ss
jmp
sbb
adc
cmp
add
movsl
mov
push
neg
mov
dec
add
jbe
xor
xor
dec
and
sbb
push
or
nop
vpcomub
mov
je
shl
and
leave
js
pop
xor
shlb
add
pop
or
mov
jae
je
call
out
rorl
clc
mov
dec
daa
fsubrl
loop
sub
add
xchg
pop
jmp
push
and
pop
sbb
pop
jmp
ljmp
inc
add
jb
or
int3
cmp
push
inc
or
lods
stos
and
mov
in
int
or
nop
movsb
mov
hlt
lret
dec
mov
cmp
sahf
fistl
inc
in
xchg
cld
cld
sbb
cmp
sahf
test
addr16
jbe
fimuls
lea
cmp
pop
sub
sbb
dec
sahf
ret
sub
lret
movsl
mov
inc
out
gs
fs
addb
xchg
popf
pushl
or
fimuls
or
dec
call
paddq
inc
cmp
jecxz
sbb
adc
rorb
sub
inc
push
movsb
pusha
add
add
cmpsl
lea
or
sahf
mov
lds
sub
adc
dec
imul
xor
xchg
push
lcall
test
lods
xchg
sbb
imul
pushf
xchg
loopne
inc
adc
xor
push
jmp
loope
sbb
repnz
lcall
mov
cmp
cli
mov
add
movb
sub
iret
mov
lea
pop
add
in
jl
shrl
jmp
push
inc
dec
jne
mov
xor
rorl
xor
cmpsb
inc
lds
inc
sbb
dec
call
push
mov
push
aam
rcr
nop
sub
enter
cmpb
mov
or
dec
popf
cwtl
and
push
pop
add
xchg
dec
mov
and
mov
dec
shll
clc
rcll
les
mov
adcb
in
cld
pop
sub
cltd
fidivrl
add
pop
push
or
cwtl
call
adc
xchg
inc
dec
cmpsl
into
nop
mov
push
sbb
or
and
lcall
or
push
jp
call
jmp
push
in
xor
es
in
cmp
inc
pop
xorl
fcmovnu
push
inc
imul
icebp
cmp
push
push
call
jl
jecxz
dec
call
rolb
paddw
popf
fmull
xchg
mov
sbb
pop
loopne
and
mov
lret
out
mov
and
jge
dec
dec
enter
mov
cwtl
mov
jge
sbbb
faddp
mov
je
pop
jg
pop
xor
aad
popl
pop
add
xchg
inc
add
fnsave
lret
mov
shlb
mov
mov
sbb
cli
xor
pusha
mov
movsb
cmp
adcl
mov
adc
mov
rcr
scas
leave
enter
xchg
rolb
mov
adcb
int
lret
rorl
movsb
jae
pop
loopne
sub
shll
add
xchg
push
imul
add
enter
mov
lods
das
dec
jb
repz
lahf
adc
add
push
fisubl
fadds
movsl
adc
sbb
push
das
add
ret
cmpsb
mov
nop
outsb
adc
push
jo
les
push
test
ja
enter
sbb
pop
fnsave
sbb
add
xchg
mov
inc
push
push
push
inc
fists
xchg
adc
arpl
lret
stos
xchg
fsubp
cmpsl
cmp
jmp
jmp
cmp
je
sub
insb
rcll
and
clc
push
jb
pop
mov
cmpsl
xchg
pusha
or
mov
cltd
inc
cmpsl
xchg
cmp
mov
cs
and
dec
into
mov
and
push
adc
test
cld
inc
push
lds
test
or
adc
add
xlat
or
add
push
or
jae
addr16
mov
or
test
or
int3
mov
push
loope
pop
inc
outsb
cwtl
cwtl
hlt
pop
dec
adc
xchg
in
mov
and
push
pop
popa
and
les
js
rclb
mov
mov
xor
mov
sbb
xor
push
sbb
sub
xchg
add
incb
pusha
mov
sbb
loope
pop
dec
cld
mov
jmp
ret
add
enter
mov
ss
mov
cmp
jne
sbb
sbb
lahf
and
out
xor
sub
mov
in
push
cwtl
add
data16
loopne
add
daa
in
and
adc
or
mov
mov
inc
cmp
mov
or
test
and
shl
cwtl
loope
mov
pop
cmovg
mov
subl
mov
or
cmp
push
mov
and
inc
push
and
insb
pop
dec
loop
sti
xchg
dec
push
xor
sub
les
sbb
xor
add
mov
aaa
stos
mov
sub
cmc
pusha
outsb
xchg
sbb
in
cwtl
jo
sbb
fdivrs
mov
rcll
nop
sahf
mov
sbb
push
aas
xlat
cmp
pop
mov
inc
xchg
lahf
mov
int3
adc
adcb
loope
dec
lock
jae
leave
mov
push
or
clc
sub
sub
jne
push
arpl
pop
idiv
rolb
pop
stc
add
lods
fstpt
xor
into
je
mov
jo
je
mov
inc
fisttps
adc
ret
pop
popf
dec
adc
xor
lea
pop
fnstcw
or
shl
sbb
in
adc
dec
fst
lea
in
in
fsubrs
and
mov
imul
insb
test
fwait
cmp
loopne
jmp
cltd
mov
jl
xchg
aad
jbe
cmp
das
les
ljmp
sbb
idivl
inc
ss
lret
lahf
push
or
mov
fmull
shlb
loop
inc
adc
push
mov
incl
or
leave
aam
mov
xchg
lret
jp
xor
adc
add
nop
mov
mov
shrd
cmp
sahf
xchg
or
mov
pop
inc
decl
mov
sbb
out
popf
andb
loope
loop
adc
or
add
shr
cmc
mov
push
push
sub
pop
inc
xor
je
int
jo
jge
pop
lcall
inc
loopne
divl
dec
inc
ds
xchg
add
sbb
pop
xor
scas
push
push
xor
outsb
inc
inc
ret
or
int
sbb
inc
sahf
add
nop
pop
mov
dec
add
lret
sbb
or
jmp
cmp
sar
pop
add
aad
leave
jmp
inc
cmp
jge
std
push
inc
dec
add
adc
jne
sbb
leave
jbe
cs
loop
andl
xlat
std
jle
adcl
or
or
and
xchg
lea
push
hlt
jecxz
aad
mov
cmp
and
movsb
push
jmp
cwtl
add
dec
lret
das
pop
out
mov
enter
shlb
rcrb
pushf
or
dec
xchg
je
mov
dec
shl
test
sbb
sbb
adc
push
jns
inc
ja
lock
inc
mov
sarl
pop
addb
add
bound
push
and
dec
jne
cmp
sub
jg
dec
hlt
dec
dec
inc
cmp
add
cmp
mov
add
cmpsl
lret
movsl
subl
pop
xor
pop
inc
mov
dec
jno
cmpsb
aas
sbb
rcl
mov
lock
pusha
mov
dec
mov
ja
push
inc
stos
lods
sbb
add
mov
das
jns
mov
js
aam
mov
inc
jne
cmpsl
loop
subl
and
or
leave
jae
dec
dec
and
movsl
xor
xor
aaa
iret
arpl
sub
add
sub
pop
not
xchg
mov
and
and
loop
data16
scas
aam
inc
enter
pop
stos
jb
mov
fistps
add
xor
mov
cmp
dec
or
pop
pop
dec
pop
sar
incl
sbb
call
out
je
movsl
test
inc
xor
in
inc
rol
sbb
push
fisubl
mov
push
lds
or
mov
fisttpl
adc
adc
adc
add
cld
xchg
add
cmovp
sarb
stos
adc
btr
push
add
mov
lock
sbb
push
push
inc
adc
test
ficompl
push
mov
dec
inc
or
dec
test
adcb
mov
sbb
movsl
ja
add
cli
pop
ja
add
bt
jb
ja
push
inc
popf
mov
jp
fistpll
push
inc
cmp
jne
inc
decl
jne
les
mov
xchg
aaa
or
test
call
mov
and
add
rol
in
call
mov
sbb
add
xor
xchg
jg
nop
mov
inc
in
xchg
xchg
fldt
hlt
pop
sub
cmpl
cmp
arpl
mov
cwtl
rolb
outsb
imul
mov
notl
jns
add
cli
xor
xchg
add
dec
leave
push
inc
mov
sub
ret
mov
incb
sbbb
push
adc
xchg
jge
pushl
js
cmp
push
test
movsl
movsb
adcb
dec
sbb
pop
push
mov
scas
xchg
mov
adc
add
add
xchg
mov
aaa
add
or
adc
ja
aad
lea
pop
aam
outsb
flds
dec
push
nop
fistpll
mov
out
jle
push
dec
and
mov
xchg
sbb
add
pop
pop
jnp
sub
lea
and
lcall
mov
or
movsb
subb
adc
int
pop
test
pusha
ret
add
es
push
popa
repnz
jg
enter
jle
mov
test
arpl
clc
icebp
lock
mov
ja
cmp
call
jnp
xorl
mov
xchg
andb
mov
roll
jns
popf
mov
sub
xchg
adc
outsb
nop
xor
xor
xchg
sbb
arpl
inc
mov
ficoms
mov
adc
cs
mov
add
or
and
lods
mov
sub
jno
add
and
dec
and
call
sub
ja
in
outsb
daa
daa
dec
clc
rorl
repz
movsb
xchg
add
adc
jecxz
lahf
adc
dec
cltd
sub
decb
mov
test
adc
push
adc
pop
ficoms
mov
xorb
dec
and
dec
shll
inc
inc
push
jae
in
jecxz
push
mov
dec
in
daa
test
popa
leave
sarl
jo
bound
movsb
jb
popa
fdivrs
pop
shl
lock
pop
in
push
in
sbb
and
inc
shll
mov
loop
popa
les
out
and
add
stos
shrb
jne
xor
pop
mov
enter
stos
aam
aam
xchg
sbb
mov
adc
in
fadds
repnz
mov
sahf
fidivs
fwait
cld
adc
enter
push
outsl
push
jbe
sub
dec
jae
xchg
sbb
clc
and
sub
cmova
lock
loope
test
out
xchg
movsl
cltd
xchg
pushf
mov
inc
outsl
mov
lret
test
sbb
xor
sbb
ss
mov
loopne
mov
ret
rclb
fstpt
rclb
aam
mov
adc
es
loopne
add
sub
roll
mov
push
push
inc
lret
or
fsubrs
ret
fs
fucomi
fwait
pop
call
mov
fimuls
inc
fucomp
and
subb
sarb
in
mov
jns
xor
mov
push
push
push
jo
mov
pop
ficoms
addr16
dec
inc
push
jl
movsb
test
sbb
xor
pop
push
push
jl
and
fcoml
mov
push
cmp
cmp
dec
popa
adc
jns
pop
insl
and
mov
fisubl
insb
and
addb
mov
or
nop
pop
push
add
mov
fmul
call
rcrb
or
call
or
cmpl
ret
test
pop
mov
movl
inc
mov
out
sahf
and
pop
sarl
adc
mov
pop
cmp
or
inc
dec
vminss
sbb
or
outsl
push
rorl
push
lret
xchg
repnz
imul
or
out
addr16
in
inc
inc
pop
call
clc
add
adc
add
mov
sub
lock
mov
enter
adc
push
push
push
xlat
pop
notl
mov
mov
clc
xor
push
sbb
rcll
imul
in
bound
dec
push
in
pop
add
fs
daa
shll
sub
cmpsb
xchg
push
dec
pop
xor
mov
call
dec
inc
sahf
mov
pop
inc
out
jmp
sub
xor
test
and
sbb
and
pop
push
ljmp
aad
into
inc
mov
faddp
or
int
xchg
cmp
mov
das
ret
outsl
call
xor
jg
js
ret
dec
and
pop
jo
adc
lods
jnp
loopne
lock
and
sahf
and
sbb
adc
push
test
cmp
out
in
pushf
sbb
arpl
aaa
mov
in
ret
adc
std
and
adc
clc
pop
les
sbb
jmp
fmuls
lds
mov
or
add
lret
sub
jle
int
lds
or
test
das
add
int
les
inc
sub
leave
roll
dec
stos
les
or
cwtl
arpl
cmp
lea
arpl
pushf
push
xor
cld
in
mov
cmpsl
and
inc
out
sbb
push
inc
add
cmp
lock
pop
pop
jne
testb
lods
std
ds
orb
sbb
imul
out
and
pop
mov
cmpsl
nop
mov
pop
outsb
cs
and
pop
inc
test
dec
in
into
mov
pop
js
xor
inc
addr16
subb
inc
loop
adc
and
jo
cs
xchg
sub
cmp
sbb
mov
fiaddl
jmp
mov
push
scas
sar
mov
into
add
lret
adc
xchg
mov
test
or
add
lcall
aaa
sub
sub
sbb
mov
int3
dec
mov
adcb
ret
push
dec
shlb
inc
pop
andl
add
ds
add
inc
jo
les
addl
inc
lock
pop
arpl
rol
and
cltd
in
inc
test
or
iret
mov
dec
sub
sub
xchg
test
inc
test
push
or
rorb
mov
mov
pop
movsl
or
add
add
pop
mov
mov
cltd
ficoml
outsl
outsl
aas
inc
jbe
je
jg
mov
jmp
rcl
sub
clc
cs
add
jge
lea
lock
jbe
xor
dec
into
push
sbb
or
call
repz
jp
jno
push
mov
mov
jg
mov
ret
push
mov
sub
andl
lret
or
repnz
movb
jle
in
mov
pop
popa
mov
push
sbb
mov
sbb
adc
cmp
loop
test
or
das
int
je
mov
xchg
test
mov
pop
sub
scas
add
xor
dec
mov
inc
sbb
jg
add
sbb
orb
nop
and
mov
push
fisubs
das
adc
jl
repz
fidivl
mov
xchg
push
xchg
cwtl
loop
jl
cmpl
clc
or
inc
hlt
shr
out
aam
fisubl
mov
sbb
movsb
repnz
jg
addr16
inc
jl
and
cmp
jne
mov
or
or
mov
jne
inc
jge
sbb
jle
sub
ficompl
enter
jl
pop
add
add
xchg
adc
out
sbb
mov
sbb
xchg
nop
dec
jo
xchg
mov
pop
add
cmp
addr16
xchg
imul
lret
or
mov
pop
mov
xchg
inc
mov
jge
or
jle
xor
push
push
add
out
ja
cmp
out
js
add
inc
mov
ja
pop
and
sahf
pusha
pop
dec
fidivrl
xor
and
inc
ja
xor
pop
push
insl
ret
sub
test
add
mov
push
pop
subb
popf
js
mov
shl
adc
xchg
ficoms
push
movsb
cmpl
pop
cmp
in
adc
jb
and
add
cs
pop
idivl
shl
cmpsl
pop
cwtl
js
les
inc
andb
push
sbb
adc
push
pop
loopne
jbe
add
mov
xchg
incl
popl
in
push
sbb
add
fdivl
sbb
mov
iret
sbb
xor
add
bound
xor
cwtl
mov
pop
push
xor
mov
mov
adc
sub
sub
shll
xor
test
je
pop
ret
cmp
sub
int3
notl
jb
mov
es
jb
inc
inc
insb
add
loope
xchg
popf
push
lock
pop
int
addb
mov
or
pusha
xchg
and
add
ljmp
or
sbb
add
or
into
pop
and
cltd
jae
mov
out
fidivl
add
and
mov
stc
mov
pop
jbe
insb
cltd
sub
push
ljmp
lret
mov
xchg
jne
pop
mov
lahf
inc
cmpsl
leave
or
adc
inc
bound
loope
add
add
nop
push
les
inc
sub
sbb
out
xor
test
xchg
add
sbb
pop
adc
icebp
xor
sbb
mov
sub
push
inc
xchg
add
pop
pop
aaa
xor
test
in
sbb
xchg
dec
push
mov
out
aam
flds
aad
in
pop
mov
or
pop
pop
xchg
pop
test
movsb
mov
div
in
add
inc
or
rolb
adc
push
push
outsb
fcompl
sbb
call
xor
mov
roll
add
mov
nop
icebp
push
and
aas
mov
mov
and
add
mov
sub
mov
or
fsubr
add
or
nop
fstpl
sarl
jge
enter
or
loopne
fcompl
mov
sub
cs
je
inc
fadd
sbb
mov
pop
or
add
data16
xor
mov
dec
or
aam
and
and
or
dec
ret
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
xchg
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
enter
xchg
dec
pop
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
ret
or
inc
and
cmp
je
or
jp
jne
arpl
push
faddl
jle
rclb
je
mov
pop
arpl
xor
daa
or
dec
xor
mov
jecxz
xor
rcll
ljmp
les
scas
xor
add
jle
lods
adc
cmp
jle
or
add
inc
mov
xlat
test
stos
sahf
add
lds
add
push
or
adc
dec
jns
cmpsb
add
hlt
enter
push
test
aad
xchg
icebp
or
hlt
push
add
add
inc
and
lods
aad
mov
aam
iret
jmp
sahf
les
inc
push
cltd
lcall
ds
les
cltd
shlb
pop
mov
clc
mov
jp
pop
jg
test
push
iret
adc
pushf
push
push
adc
popf
das
push
inc
mov
mov
fisubrl
or
inc
andl
fildl
ja
sbb
or
nop
das
out
xchg
or
adc
sbb
js
lods
pop
daa
scas
sbb
and
xlat
aas
add
unpcklps
push
orb
sar
inc
imul
add
cmpsl
sbb
iret
out
inc
inc
int3
mov
ss
nop
aaa
sub
dec
ds
loope
cmp
or
or
inc
test
xor
inc
pop
adc
or
adc
jbe
ja
mov
ficoms
mov
jne
dec
fwait
xchg
dec
jmp
mov
sub
mov
lea
int
inc
sbb
cmp
dec
or
or
xchg
sbbb
leave
mov
stos
inc
pusha
movsl
dec
inc
cs
add
or
je
test
push
aaa
push
loop
cmp
sbb
inc
xor
push
add
push
mov
dec
fcoms
rcll
cli
aaa
xchg
notb
int
addr16
popa
imul
pop
xchg
push
add
jae
out
add
and
mov
mov
sbb
shlb
movsb
sbb
cs
sub
mov
aas
std
fmuls
xor
mov
popa
xlat
shlb
into
lret
jg
xor
lods
sar
push
and
xchg
imul
or
ret
aam
jo
fsubs
icebp
or
adc
jge
add
xor
xchg
adc
dec
jbe
xor
mov
and
clc
xor
cmpl
icebp
pop
pop
mov
jae
das
repz
inc
imul
xchg
imul
adc
cmp
jge
mov
sub
xor
cld
sub
dec
shrl
or
dec
leave
adc
fwait
psubq
sbb
mov
or
dec
pop
inc
add
int3
clc
cmp
jl
jmp
or
leave
sub
jecxz
dec
pusha
push
aaa
add
cli
cmpsl
andw
sbb
fldenv
arpl
dec
sbb
mov
insl
inc
xchg
pop
leave
cmp
push
fists
cmpl
mov
inc
js
push
mov
and
fidivrl
cs
push
mov
mov
fistl
push
adc
adc
dec
cmp
xchg
shll
sbb
mov
mov
xor
subb
fsubrl
addb
cmp
and
push
sub
or
lret
mov
loope
lret
inc
pop
int3
insb
cmpsb
inc
repnz
aas
adc
pop
orl
add
xor
mov
lock
mov
push
adc
popaw
ret
lock
inc
sbb
das
outsl
xchg
loope
jmp
cmp
pop
dec
adc
adc
xchg
fsubrp
clc
ret
lahf
jne
sbbl
xorl
sbb
add
adc
push
mov
jo
icebp
cmpsl
popa
rcrb
ret
mov
ret
out
mov
sub
jnp
cmpsl
ds
add
sbb
imul
dec
and
add
xchg
push
pop
adc
mov
fsubrs
rcrl
fisttpll
add
fmuls
je
hlt
aaa
test
loopne
pop
xor
mov
lods
shll
test
arpl
decl
xchg
pop
jecxz
shrb
pop
call
int3
es
mov
sbb
orl
push
mov
cli
ja
sbb
cmp
les
dec
mov
movsb
cmp
adcb
sbb
xor
mov
iret
pop
clc
inc
mov
push
fnstcw
adc
sub
jne
push
or
push
push
add
out
loope
cmpl
jne
sbb
rolb
add
shlb
bound
push
loopne
aas
dec
xchg
inc
stc
jl
mov
pop
rolb
out
mov
xor
imul
lea
sub
pop
mov
or
arpl
mov
push
loopne
xor
subl
fwait
xor
push
cld
jmp
mov
push
inc
movsl
inc
ljmp
ds
in
pop
loopne
mov
xchg
subl
sarb
add
cmpb
xor
mov
jmp
push
xlat
es
rolb
out
dec
jne
and
ja
mov
hlt
mov
inc
xchg
jmp
xchg
imul
test
jg
out
cmpsb
cmp
push
push
xchg
add
out
jle
repz
xor
loopne
nop
in
sub
push
jne
pop
je
loope
pop
dec
popa
mov
or
jmp
sbb
cmpsl
insl
out
dec
dec
pop
add
cmp
iret
xchg
ljmp
sub
nop
inc
pushf
lret
mov
jmp
add
jl
pop
xor
mov
jg
sbb
fnstcw
lret
rorb
fsts
lret
stos
cmpsb
mov
push
sbb
dec
mov
std
adc
ljmp
pop
rolb
sub
pop
mov
add
or
jnp
add
xor
cmp
aaa
fistpll
adc
jl
loop
sub
push
popf
dec
jns
jle
push
mov
pop
and
dec
js
inc
outsl
gs
xlat
fldl
sbb
call
or
lods
add
add
mov
mov
xchg
and
test
jbe
or
fists
je
adc
and
jnp
jecxz
sub
jecxz
ss
inc
push
aam
dec
xchg
ret
jg
add
adc
sub
adc
inc
xor
pushf
inc
dec
sub
sbb
das
cmp
pop
mov
iret
sahf
pop
shll
je
mov
inc
push
jmp
rcll
push
pop
and
cmp
cmp
push
pop
push
mov
fimull
pop
add
add
xor
jge
enter
pop
test
mov
or
outsw
xorl
sub
outsb
les
fmulp
ret
push
or
test
enter
call
or
or
cmp
les
paddq
gs
ljmp
mov
arpl
fdivl
vmread
cld
sub
cltd
mov
push
int3
mul
xchg
lock
inc
leave
sbb
push
cmpsb
pusha
dec
push
int
xchg
push
clc
imul
pop
or
cmp
xchg
push
hlt
sub
pop
ret
iret
iret
push
pop
pusha
jae
stc
mov
dec
sbb
adc
ds
rorb
lret
sub
lret
and
jmp
sub
inc
mov
and
ret
sbb
in
lods
jo
cwtl
jbe
add
out
jecxz
inc
adc
clc
movsl
jo
sub
imul
scas
sub
dec
xorl
das
aam
adc
xchg
or
and
int
jne
in
adc
sub
cmp
lods
cwtl
in
enter
add
xor
or
sub
adc
sbb
mov
xchg
fs
mov
popa
in
mov
test
mov
or
add
and
popf
sbb
adc
std
sub
sub
imul
xchg
push
pusha
cld
push
jge
push
negb
jmp
fidivl
or
mov
or
pop
popf
mov
sbb
or
jmp
loopne
pop
push
mov
mov
pop
popf
sbb
scas
jne
sbb
sbb
add
inc
rcrb
rcrb
xchg
pop
push
in
adc
fwait
add
in
adc
pusha
sbb
push
xor
bound
adc
pop
imul
adc
popa
xlat
sub
xor
mov
add
jo
aaa
in
inc
in
jo
xor
xlat
push
lods
adcl
dec
jmp
cmp
lcall
xchg
sbb
out
mov
loope
xchg
cmp
cld
adc
fst
cltd
cwtl
mov
daa
adc
xor
or
or
add
push
xor
pop
push
or
nop
ss
ljmp
pop
out
or
or
sbb
sbb
inc
push
sbb
es
push
dec
add
lcall
sub
ljmp
imul
jge
popa
sub
xor
xlat
pusha
mov
add
imul
mov
xchg
andnps
mov
sbb
cmp
mov
mov
push
ds
add
push
xchg
movd
or
sbb
xor
insb
flds
lock
inc
cs
mov
mov
lret
pushf
xor
cmp
adc
mov
inc
add
xchg
or
stos
add
call
xchg
cmp
stos
xor
aas
scas
add
and
jl
cwtl
add
add
fadd
xchg
mov
in
inc
add
insb
sub
popf
in
into
enter
fsubs
xor
cmp
call
and
jns
fwait
mov
cmp
add
pop
xchg
adc
pop
xchg
or
hlt
xor
jmp
add
aas
xorl
orl
int
mov
push
mov
or
mov
fs
insl
sqrtps
out
or
or
int
repz
add
jo
pop
mov
fldt
lock
jne
mov
push
push
mov
mov
icebp
jbe
rolb
inc
fsubl
and
out
shrl
mov
fcoml
cmp
or
loope
jp
jl
and
pop
xchg
rorb
xlat
mov
fsub
mov
mov
call
or
pop
fmull
mov
inc
xor
stos
hlt
out
das
lods
cmp
dec
aad
lret
mov
xchg
out
xlat
into
or
movsl
leave
sub
popf
lock
add
inc
xor
dec
mov
lret
cmp
lea
sti
loopne
mov
mov
sbb
stos
add
xor
add
iret
mov
gs
imul
push
jo
arpl
xchg
std
rcrl
xor
cmp
movsl
pusha
add
clc
jo
dec
scas
xor
mov
ficoms
pusha
test
loop
inc
sbb
mov
pusha
rcrl
and
hlt
aam
lahf
iret
loop
jmp
mov
scas
lock
mov
add
int
sbb
sbb
cmpsl
jl
push
rcl
add
paddusw
ds
scas
mov
out
js
pusha
test
out
enter
out
lock
jmp
lcall
outsb
icebp
mov
rcl
pmulhw
in
xor
insb
addl
adc
inc
dec
jns
push
pop
cltd
mov
pop
cmc
sbb
das
fadd
repnz
add
xor
cli
mov
ds
pop
repz
cmp
add
cmpsb
hlt
outsl
test
sbb
or
icebp
add
andl
repnz
sbb
xorl
mov
dec
xlat
clc
jge
or
clc
mov
out
mov
cmp
jno
call
jp
add
sbb
xchg
cmc
hlt
mov
xor
inc
daa
add
add
mov
mov
push
xor
push
aaa
lods
xor
xorl
mov
out
mov
sub
jl
fdivl
mov
rcrb
push
hlt
push
outsb
fdiv
mov
daa
xor
inc
addr16
pusha
sub
pusha
out
mov
out
dec
test
clc
daa
cltd
mov
in
xor
lods
enter
rorb
nop
ss
loope
jnp
cmp
push
fldt
mov
xchg
pop
push
out
and
jmp
fsubl
repnz
sub
sbb
adc
sub
stos
sbb
aad
mov
pop
xor
xor
dec
shl
inc
push
sbb
loope
in
rcr
cmp
or
fwait
mov
push
outsl
call
insl
sbb
adc
int3
daa
sbb
pop
mov
hlt
inc
loop
aaa
push
jnp
into
shr
daa
push
fistpll
lea
push
aas
jo
jmp
fcomps
dec
sahf
ret
adc
sbb
mov
loopne
test
hlt
fadd
ret
cmp
jge
adc
nop
mov
or
mov
push
cltd
roll
and
jecxz
addr16
adc
and
add
mov
fdivrl
mov
pop
and
and
je
clc
sbb
cmpb
fisttpl
xor
sbbb
push
sub
cld
add
push
add
jmp
mov
cmp
jne
mov
sbb
sbb
sub
lar
shl
mov
lea
int
mov
pop
les
loopne
dec
bound
push
mov
xor
ret
xchg
stc
popf
sub
or
call
xor
jbe
jmp
outsl
lods
xor
or
dec
pop
lds
add
xor
das
xchg
inc
rcrb
test
xchg
daa
sub
or
in
pushl
ss
push
mov
pop
jge
mov
fbld
lock
arpl
dec
je
or
pop
in
jecxz
or
sub
shrl
dec
testl
push
jmp
shll
cmp
or
add
stc
xchg
lahf
inc
inc
lods
arpl
stc
sarb
push
movsb
jnp
fdivl
push
inc
or
and
ja
push
clc
or
mov
ja
push
mov
ret
jmp
sub
inc
mov
movsl
cld
mov
loope
adc
inc
add
push
out
xchg
aad
cmp
xlat
push
or
push
adc
inc
setnp
mov
xchg
testl
mov
adc
mov
jge
into
mov
and
adc
mov
and
cld
adc
dec
dec
push
cmp
inc
dec
sahf
sbb
sti
cmp
xchg
inc
mov
adc
sti
dec
sub
sbb
push
int3
mov
pop
ja
clc
out
jae
add
pop
push
push
femms
roll
ds
dec
shll
cmpl
inc
jo
cmp
adc
mov
addl
enter
sti
xor
adc
add
out
addr16
dec
sub
lock
sbb
sbb
nop
sbb
add
add
mov
out
dec
cmp
out
adc
add
movsl
je
scas
outsb
sub
shrb
and
scas
rcll
lock
cmp
lods
add
leave
nop
xchg
mov
das
pusha
repz
xchg
test
pop
test
cmc
sub
mov
jno
jb
jecxz
lret
std
cmp
cmp
push
cwtl
push
stos
mov
into
loopne
pop
lock
sahf
out
cmp
push
push
pop
cs
dec
pop
imul
xchg
fiadds
mov
leave
xchg
int3
xor
and
add
scas
nop
sbb
ret
jo
mov
insb
pop
xchg
lods
jmp
das
pop
push
adc
pop
jmp
mov
fadd
imul
adc
sub
stos
pop
das
aad
nop
inc
movsb
js
cld
xor
incb
inc
and
gs
and
fxtract
mov
test
mov
aas
movsb
sbb
adc
mov
xor
enter
jmp
or
faddl
stos
jg
add
mov
in
adc
lahf
loop
add
pop
mov
sbb
sahf
mov
jb
inc
es
ret
inc
inc
push
push
ja
lods
inc
aaa
or
decl
adc
push
push
cmp
adc
enter
insl
xlat
je
mov
lret
in
daa
mov
rorb
dec
movsl
mov
push
or
jl
mov
mov
inc
inc
call
jmp
in
dec
loope
dec
mov
imul
jnp
test
cmpsb
cmp
push
push
sbb
push
inc
sbb
and
xchg
lret
push
pusha
sbb
orb
ljmp
mov
cltd
lret
lods
aad
add
mov
mov
jg
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
in
inc
sarl
pop
adcl
pop
shl
aam
xchg
cli
inc
inc
adc
inc
bound
xorl
mov
inc
ja
movl
dec
cld
shl
rcrl
in
push
dec
enter
jnp
pop
ret
clc
clc
call
cmp
shlb
xchg
jo
scas
xor
mov
jg
sbb
push
jmp
sbb
out
orb
cmp
add
mov
stc
dec
call
in
das
xchg
outsl
mov
mov
or
inc
pop
sub
aas
sbb
xor
mov
xchg
incb
popf
scas
mov
inc
add
push
shr
fidivrs
mov
rcrl
in
add
push
shll
cmp
cwtl
pop
cs
sahf
out
sbb
sub
inc
imul
or
cmc
push
cld
gs
cs
aam
movsbl
popa
ret
xor
sub
cs
jns
add
fiaddl
and
nop
xchg
sub
aam
pusha
sbb
out
shlb
push
jne
insl
loop
mov
sahf
ret
mov
loop
ret
jmp
push
mov
icebp
cmp
lcall
leave
les
mov
and
add
cld
or
repz
xchg
mov
dec
loope
dec
out
sub
push
sbb
jmp
sub
push
mov
add
add
mov
sub
sub
dec
arpl
jmp
data16
mov
jb
in
ret
mov
bswap
dec
call
jl
or
sbb
or
js
adc
or
cmpl
cltd
testb
pop
jg
mov
push
add
shll
and
mov
mov
jb
pusha
xchg
div
push
inc
sbb
add
mov
and
mov
sti
adc
adc
push
add
cmp
aaa
add
and
in
shll
mov
pop
out
in
inc
add
daa
push
push
shrb
add
push
xchg
loopne
adcb
mov
pop
shll
dec
inc
mov
enter
std
push
inc
movsb
mov
cmpl
sbb
mov
push
rcll
fwait
push
push
pop
pop
faddl
notl
jecxz
movsb
xchg
fists
push
cmp
je
sbb
mov
dec
rolb
and
jl
adc
sti
negl
daa
xor
xchg
adc
or
push
push
xchg
jae
pusha
xor
or
data16
or
les
pop
cmpsb
movsl
xor
or
mov
pop
dec
sbb
dec
ja
stos
mov
xchg
or
pop
dec
inc
xor
mov
movsb
jg
addr16
adc
movsl
adc
mov
dec
sbb
inc
loop
imul
or
fisubrs
push
lahf
adc
test
add
mov
mov
and
push
pop
sbb
xor
rorb
jg
or
pop
cli
ret
sti
mov
jno
jle
or
mov
rcrl
sub
jb
adc
lea
mov
pusha
flds
loopne
icebp
sti
sub
imul
sub
or
leave
ds
pop
jnp
sbb
adc
addl
lret
dec
pop
adc
or
adc
adc
sbb
sti
stc
call
orw
addr16
dec
add
push
adc
inc
sbb
sbb
fildl
jmp
adc
repz
add
mov
mov
mov
sub
or
pop
adc
xlat
inc
or
and
pop
lahf
sbb
lock
cwtl
mov
mov
dec
sbb
je
aas
xor
dec
shll
pop
jp
mov
cli
test
es
xchg
and
js
mov
or
mov
and
or
mov
mov
adc
pop
adc
adc
or
mov
adc
scas
sbb
pop
and
shrb
orl
sub
rorb
adc
xchg
inc
outsb
js
adc
xchg
adc
jle
stos
sti
hlt
pop
push
push
adc
xor
xchg
call
jae
inc
aad
rolb
aad
imul
ret
notl
dec
and
and
dec
push
mov
add
lcall
and
or
or
or
sbb
rorl
push
dec
popa
mov
mov
add
push
and
incb
sbb
add
add
cmc
dec
ds
pop
dec
gs
outsl
jo
addr16
and
add
inc
or
pop
or
mov
inc
pop
inc
notl
xchg
push
cs
dec
pop
add
inc
mov
pushf
xchg
lret
imul
sub
push
inc
dec
ja
je
sub
cmp
jne
daa
das
and
jne
cmp
dec
cwtl
mov
dec
mov
pop
shlb
repz
dec
rcl
inc
shlb
cmp
mov
hlt
jno
pop
xor
out
mov
mov
adc
sub
enter
xor
sbb
adc
test
arpl
std
push
inc
dec
jne
les
push
add
mov
into
addr16
push
dec
push
je
adc
jae
cmpsl
mov
sub
stos
sahf
xchg
jnp
or
and
inc
popa
cld
fbld
ljmp
daa
adc
xor
cmpsl
xchg
adc
inc
das
sbb
inc
cmp
pop
sbb
leave
aas
jo
nop
mov
xchg
fs
push
or
outsb
jg
cmp
jg
push
dec
cmp
xlat
dec
inc
ja
xor
jmp
test
clc
pop
shll
test
mov
jmp
or
cmp
js
sbb
andb
jmp
jge
rcrb
call
rolb
lock
imul
add
ja
repnz
xor
mov
lahf
and
mov
jmp
or
inc
lahf
mov
scas
jecxz
xor
or
sbb
jg
cmp
dec
add
inc
and
and
or
pop
xlat
xchg
jge
adc
or
inc
and
stos
add
inc
jmp
adc
or
inc
and
xchg
pop
loopne
jle
orl
dec
lahf
add
in
sbb
adc
movsb
shll
shld
and
push
mov
mov
movsb
jmp
nop
or
loop
test
inc
jl
push
jle
pusha
stc
sub
je
int
or
pusha
pop
or
add
cwtl
mov
fisttps
in
pop
mov
sbb
push
inc
and
in
mov
push
pop
clc
dec
adcb
sbb
pop
adc
mov
dec
inc
pushf
rorl
sbb
or
out
inc
push
pop
xchg
lea
das
xlat
sbb
iret
sub
cld
xor
sbb
ja
lcall
push
sub
arpl
xchg
mov
xchg
pop
xchg
out
bound
dec
popa
inc
dec
cmp
dec
push
push
inc
je
dec
push
out
data16
sub
sbb
adc
out
mov
add
push
pop
xor
mov
inc
jo
xor
fdivrs
xlat
lock
arpl
call
daa
pop
and
jne
pop
adc
push
pusha
scas
frstor
wrmsr
push
pop
bound
sbb
mov
add
xchg
mov
or
cwtl
mov
in
inc
mov
fadds
add
push
sbb
ror
xchg
punpcklwd
pop
cld
jecxz
inc
push
cli
inc
push
push
mov
rol
adc
xor
dec
adc
cmpl
outsb
adc
cwtl
add
jbe
setne
jb
sub
inc
jb
adc
add
addb
adc
dec
ds
cmpsb
push
into
adc
pop
fdivr
add
add
push
addl
lret
mov
out
xor
xor
xor
or
test
cmpsl
add
sarb
push
scas
daa
add
dec
xchg
jg
jmp
loope
adc
push
adc
cmp
lds
sub
sub
incl
shlb
arpl
rclb
cmp
inc
or
add
jae
sbb
cltd
or
in
ret
add
ds
add
adc
add
adc
out
in
dec
add
clc
sbb
push
jmp
pop
movsl
jg
outsb
rcll
adc
hlt
call
insl
add
cmp
sarb
xchg
inc
inc
add
fwait
inc
adc
sti
scas
or
xchg
orb
rolb
mov
push
in
js
adc
xchg
fcompl
push
int3
addl
inc
cld
add
push
sub
pop
loopne
add
cmp
push
and
loope
stos
mov
fcoms
repz
sbb
xor
push
push
outsb
sbb
ret
std
ja
sbb
pop
dec
aaa
mov
cmpsl
rorb
in
rorl
in
push
lret
push
dec
in
mov
ds
out
sub
ret
inc
mov
adcb
mov
pop
mov
cmp
pop
add
sbb
dec
cmp
daa
or
divb
sarl
pop
fbstp
movsl
and
stos
lahf
inc
adc
add
scas
sub
or
sbb
popf
lods
push
and
sub
pop
pop
pop
dec
jb
daa
or
in
adc
sbb
daa
mov
subl
add
gs
adc
insb
sbb
xor
dec
and
adc
pop
loop
scas
xor
or
dec
ljmp
sbb
add
adc
xchg
rorb
add
mov
xor
inc
mov
or
data16
pop
clc
mov
or
or
mov
pop
pop
push
push
mov
add
sti
or
or
add
push
mov
inc
add
pop
add
jo
mov
cmp
fisttpl
pop
xchg
mov
jo
aas
adc
jge
adc
sub
mov
push
or
add
inc
sub
pop
iret
cmp
xor
xor
push
sarb
daa
push
pop
adc
mov
in
lods
mov
je
pop
inc
pop
jle
pop
test
pusha
push
push
dec
pop
add
push
mov
addr16
sub
jge
sbb
adc
icebp
test
cld
push
xchg
insl
nop
adcl
lea
popa
adc
std
mov
cmp
inc
jno
les
pop
xor
add
pop
jge
ret
mov
mov
outsb
inc
pusha
arpl
fildll
jae
orb
pusha
xor
aas
jmp
dec
int3
mov
divb
pop
push
and
sbb
xor
fbld
out
sbb
pop
inc
mov
popa
cltd
add
les
in
into
mov
clc
sub
ret
dec
iret
loopne
and
xchg
hlt
mov
test
xchg
mov
and
dec
mov
sbb
jb
rcrb
ja
jb
jb
jns
jnp
jb
jb
jge
jg
jb
jb
popa
bound
jb
jb
gs
jb
push
jb
jb
insl
outsb
outsl
jb
jb
push
push
push
push
jb
jb
push
push
push
push
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
xor
xor
jb
jb
xor
ss
jb
jb
cmp
cmp
jb
jb
cmp
ds
jb
jb
and
and
xor
xchg
and
inc
mov
push
clc
sub
mov
push
enter
insb
outsl
cmc
ret
cmp
xor
sbb
sqrtps
inc
xor
push
arpl
and
sub
sbb
xchg
mov
inc
outsl
add
push
imul
jo
or
add
adc
xchg
pop
orl
lret
daa
cmp
or
test
imul
add
adc
mov
jae
je
loop
mov
mov
insb
int
jg
mov
enter
movsl
or
xorl
adc
adc
gs
mov
inc
mov
inc
dec
cmc
int
sbb
add
cs
outsb
int
paddsw
add
cs
jo
outsl
sbb
push
inc
popa
jae
aaa
in
mov
or
adc
xor
jl
or
push
xor
fwait
dec
divl
adc
mov
bswap
insb
insl
inc
subb
fwait
decl
push
push
dec
outsl
jo
je
push
inc
sub
or
adc
mov
loopne
nop
and
add
sbb
adc
xor
cmp
aas
mov
loopne
out
push
fwait
cmp
pop
adc
rorl
and
inc
jb
fimull
enter
sub
bound
adc
or
dec
jl
jp
ss
lods
pop
imul
fidivl
or
inc
inc
imul
pop
inc
outsl
jb
jae
es
pop
outsl
lock
mov
pop
cld
ss
sbb
and
testb
jbe
push
aad
mov
inc
lahf
mov
insl
rorl
xor
inc
push
push
js
in
incb
and
imul
cmpsl
inc
sub
imul
rclb
hlt
pop
loop
stc
cmp
cmpsb
and
and
or
stc
loopne
inc
and
div
or
mov
lret
add
icebp
iret
pop
adc
sti
aam
mov
inc
push
nop
add
pop
aas
rclb
sti
ret
push
pop
pusha
cmp
int3
adc
jmp
idivb
and
dec
insb
dec
aas
aas
push
push
dec
gs
enter
jo
jo
mov
cmp
lahf
sub
sub
pop
pusha
mov
mov
mov
jge
push
imul
jns
sub
push
ss
cmp
lea
and
push
cs
sbb
cld
inc
out
lods
inc
xchg
inc
push
mov
lahf
xchg
in
mov
add
in
cld
push
addl
add
rorl
pop
add
xchg
add
sub
xor
and
add
lcall
pop
add
push
addb
je
inc
jmp
scas
xchg
out
es
inc
mov
push
push
cmp
leave
xchg
sbb
add
add
fs
sub
decl
lds
inc
inc
xchg
add
lds
in
add
sub
enter
sbb
daa
inc
inc
inc
subl
push
lock
xchg
xor
sbb
pop
sbb
sbb
push
movsl
push
lret
js
lcall
or
ret
daa
and
pop
aas
push
int3
push
dec
or
or
ficoml
and
rcrb
and
xor
movsb
dec
imul
push
roll
js
jb
jae
loopne
mov
cmp
jo
mov
dec
jl
jne
outsb
testb
out
or
adc
push
inc
xchg
or
push
ficoml
jnp
add
push
inc
arpl
dec
lock
inc
pusha
dec
or
or
fs
dec
outsl
ja
mov
push
cld
push
xchg
add
cmp
or
dec
insb
mov
mov
push
dec
jmp
mov
sbb
sbb
dec
xor
push
cs
lcall
iret
mov
adc
mov
sbb
js
mov
pusha
mov
fisubrs
and
in
mov
ss
pusha
sub
and
fsubrl
pop
int
fidivs
int3
push
sub
movsb
sbb
add
and
jbe
mov
loopne
pop
sub
int
adc
pop
lods
movups
gs
xchg
cltd
pop
and
popa
xor
mov
insl
pop
ret
test
or
dec
mov
addr16
and
add
js
nop
xchg
mov
push
mov
fcomp
fsub
jnp
fildl
or
and
ja
outsl
andb
sbb
push
xchg
hlt
sub
imul
push
and
push
sub
insb
outsb
mov
out
popf
push
es
add
cmp
adc
jge
pusha
in
jnp
out
pop
and
das
lds
scas
push
pusha
sub
pop
iret
js
mov
es
int3
pop
and
mov
pushw
lods
sahf
sahf
mov
pusha
and
add
sbb
pop
out
fistps
add
popa
inc
adc
fists
pop
lods
push
mov
dec
insl
mov
mov
fs
mov
loopne
daa
movsb
outsl
loopne
push
lods
xor
sarb
inc
repnz
mov
jae
div
and
nop
jae
and
inc
pushf
jne
jge
dec
lahf
mov
jbe
aam
mov
ss
sahf
imulb
mov
sub
sbb
add
jo
cmp
cmpb
or
lcall
scas
push
imul
imul
movsb
sub
sub
adc
sub
insl
mov
jae
or
cmp
mov
nop
sub
test
pop
xchg
adc
out
sbb
jo
add
movsb
push
nop
mov
jnp
jnp
aas
je
xchg
rorb
pop
mov
or
mov
fsts
add
in
xlat
mov
push
test
push
fwait
nop
adc
or
outsl
outsb
pop
inc
das
mov
pop
adc
pop
in
test
cmp
dec
sbb
jl
mov
fsubr
push
cld
test
xor
fisubrs
and
xchg
stos
cs
push
lock
xchg
dec
pop
sbb
push
cmp
or
pop
mov
xor
pop
aas
icebp
scas
mov
adc
and
aaa
dec
inc
lcall
les
ret
rol
xor
inc
dec
js
add
jne
lahf
mov
xchg
test
dec
gs
shll
inc
push
push
dec
push
push
xor
sbb
aam
xchg
outsb
pusha
fadd
push
xchg
and
insl
loopne
stc
adc
mov
movsb
xor
adc
mov
and
add
and
inc
ret
fdivs
jbe
pop
rolb
cmp
das
ljmp
push
ret
push
es
add
cmp
xchg
sub
dec
or
ficompl
lods
sub
mov
call
sbb
pop
rolb
and
pop
movl
add
sub
pop
gs
push
sahf
cmp
scas
decl
mov
dec
sete
cmp
shrb
cmp
sar
mov
push
or
notl
adc
fstl
sub
inc
cmp
adc
mov
arpl
mov
int
jnp
add
aaa
int3
adc
and
je
mov
xlat
cmp
mov
push
jb
and
stos
nop
adcl
xor
test
inc
push
jle
add
dec
cmpsb
aad
aas
xor
adc
inc
test
xor
pop
add
lret
lahf
adc
and
jge
pop
cmp
xchg
loopne
scas
or
add
cmp
lock
xor
push
std
leave
fistpl
pop
or
mov
nop
xor
push
jg
inc
adc
fbld
inc
mov
mov
add
push
cmpsl
adc
fisttps
lock
or
rolb
jp
scas
arpl
repz
iret
arpl
jb
outsl
outsb
inc
in
pop
orb
insb
imul
push
xchg
jbe
add
jb
insb
gs
add
fildl
gs
insb
pop
ss
and
pusha
addr16
imul
cwtl
inc
dec
xchg
pusha
dec
pop
iret
pop
gs
insb
outsl
ja
xchg
fildl
inc
jne
push
and
addl
mov
pop
or
jns
push
fadds
add
ja
jge
pop
movsb
insl
inc
dec
stc
adc
data16
push
dec
xor
adc
xor
popa
test
dec
outsl
pop
jo
push
pop
es
subb
or
es
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
xchg
stos
aam
lods
insb
mov
or
cld
shll
jg
gs
or
insl
das
push
fwait
cmp
daa
pop
xchg
fs
lahf
sbb
xor
test
pop
or
pop
rcrl
push
andl
xchg
imul
aaa
adc
adc
jge
or
outsw
inc
push
sub
jg
pop
outsb
jne
inc
icebp
ja
xchg
daa
shufps
and
or
pop
xchg
rcrb
arpl
cltd
sbb
add
sbbl
imul
das
cmp
int
pop
xor
popa
leave
or
sahf
jge
cmc
add
out
push
pusha
jbe
pop
fistpll
xlat
cltd
mov
inc
mov
fwait
adc
adc
mov
addr16
jg
testl
dec
inc
push
push
inc
push
add
test
inc
inc
xchg
xor
notl
dec
inc
dec
dec
arpl
sub
jnp
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
insb
lods
jge
dec
and
out
inc
inc
xor
xor
adc
inc
dec
inc
and
inc
pusha
and
xor
inc
dec
lcall
push
dec
dec
push
dec
dec
mov
aam
fcmovnbe
das
sbb
mov
and
inc
inc
dec
push
mov
dec
inc
dec
inc
inc
jae
or
push
dec
pop
adc
fwait
aas
inc
inc
push
push
push
dec
push
inc
scas
dec
insl
sbb
push
mov
dec
or
jno
mov
clc
push
mov
mov
js
andb
rcl
add
pop
jl
adc
popf
add
mov
pusha
jl
orb
sbbb
jne
add
repnz
mov
ss
pop
mov
lea
outsl
adc
mov
or
fyl2xp1
lea
mov
sub
cmovne
pusha
pop
cmp
les
push
add
push
or
add
add
sub
dec
pusha
inc
out
sbb
mov
inc
add
xor
jo
xor
in
push
jp
cwtl
es
out
mov
or
xchg
add
stos
addr16
pop
aas
sub
lods
add
jmp
loope
sub
xchg
loope
sub
into
cltd
jl
addr16
add
loopne
repnz
ret
mov
dec
jbe
imul
sbb
fdiv
subl
inc
std
xchg
out
das
loopne
adc
lgs
inc
add
sbb
ja
icebp
cmp
or
mov
cmp
jo
inc
in
sub
cli
das
cwtl
add
insb
test
adc
push
cmp
fwait
outsb
adc
inc
clc
push
cmp
or
lret
cmp
into
shlb
lret
std
ds
mov
jp
adc
int3
je
icebp
or
mov
aad
push
ret
xchg
dec
out
xchg
adc
test
inc
or
enter
outsl
push
testb
je
rorb
jmp
adc
mov
aam
add
or
divb
mov
adc
lea
incb
dec
gs
mov
mov
cmp
mov
nop
adc
jo
sarl
dec
pop
xor
movb
push
fsubs
jne
loop
add
xor
popf
fstpt
inc
fildl
or
jmp
push
lods
gs
mov
push
or
sbb
mov
out
jmp
dec
add
xor
sbbl
dec
fadds
xor
sbb
or
xchg
fiaddl
inc
sub
mov
ficoml
test
nop
push
inc
sub
mov
test
in
add
dec
jg
sbb
and
dec
xchg
dec
clc
sbb
or
and
dec
mov
dec
dec
sub
inc
xor
test
cmpl
dec
mov
fdivrs
dec
das
xor
push
das
call
neg
push
inc
jp
mov
nop
xchg
lret
dec
sub
cmp
mov
sbb
inc
sbb
and
xchg
pop
nop
sbb
push
push
clc
and
clc
mov
movb
rolb
add
rolb
ss
in
pop
jb
and
ret
inc
sbbl
inc
loopne
in
loopne
xor
lods
inc
faddl
aad
movsl
add
or
add
aaa
dec
es
cmp
push
cmpsb
add
inc
inc
pop
lock
dec
xor
xor
xchg
push
push
daa
push
pop
push
insb
cmpsl
add
jne
fistpll
cli
inc
jne
subl
mov
inc
test
xor
in
das
das
in
cmc
pop
dec
in
mov
xchg
cmp
or
push
cmp
jns
enter
lock
jl
shl
mov
sbb
mov
xchg
adc
in
dec
leave
or
dec
in
in
ud1
and
pushf
inc
push
jl
pop
inc
and
inc
sub
nop
outsl
cmp
push
pop
push
nop
pop
sbb
add
aas
cmc
inc
in
or
nop
cld
inc
push
out
test
outsb
xchg
mov
and
pop
mov
xor
andb
add
pop
or
ja
push
test
sub
sub
dec
fistpll
adc
mov
mov
scas
insb
das
cmp
or
data16
inc
loopne
push
lret
jnp
fwait
outsb
or
fcomip
jmp
je
cmpsl
mov
add
add
jp
gs
lock
nop
out
xor
in
adc
push
aas
imul
xchg
je
loope
mov
nop
adc
and
pop
jg
enter
cmp
add
push
mov
repnz
push
ret
adc
das
lahf
or
hlt
and
mov
fmull
in
and
and
inc
and
mov
arpl
mov
bound
mov
popa
inc
or
or
mov
lock
imul
mov
add
mov
adc
cmp
mov
adc
fbld
and
sbb
push
or
push
add
loopne
jle
or
pop
or
or
jbe
xlat
xor
push
push
or
push
push
int3
pop
popa
or
into
imul
or
in
call
and
and
ja
int3
xor
mov
mov
xor
bound
pop
xchg
flds
inc
ljmp
ss
xchg
iret
pop
inc
clc
mov
add
or
jecxz
pop
or
popa
mov
rcrl
repnz
push
push
in
mov
inc
xor
inc
int
sbb
ror
add
push
insl
pop
mov
sub
les
incl
sbb
lea
movsb
insl
mov
clc
cmpsb
popf
push
mov
cmpsl
add
xor
inc
sbb
leave
aam
pop
or
sub
and
xchg
loopne
in
sbb
and
nop
es
pusha
push
pop
jb
iret
mov
dec
or
ljmp
test
nop
andb
adc
stos
je
ret
lods
adc
jle
cmp
aaa
cmp
sbb
dec
test
jle
cltd
orb
pop
mov
mov
adc
cmp
rcll
cmp
das
insl
fmuls
cmp
xor
pop
adc
sub
xor
and
repnz
aad
adc
dec
xchg
cld
adc
push
push
andl
cld
scas
mov
adc
pop
xchg
jb
arpl
jo
pop
jb
scas
cmpsl
inc
pop
inc
sub
jbe
inc
add
jb
inc
or
inc
jae
push
subl
shlb
inc
or
je
mov
inc
xchg
push
mov
repnz
aad
movsb
mov
shll
add
dec
and
out
push
sbb
add
es
cmc
cmp
jg
jae
add
arpl
and
orb
mov
inc
rorb
lcall
aam
lock
not
and
mov
dec
sarb
ret
je
jb
xchg
dec
push
push
push
bound
mov
add
adc
cmp
movsb
push
add
or
cmp
mov
mov
xor
push
xor
rolb
mov
decl
enter
sub
repnz
xor
dec
mov
pop
dec
mov
sbb
loopne
ljmp
xor
dec
push
movsl
sbb
dec
scas
sub
mov
iret
testb
xchg
dec
mov
out
ds
xchg
das
pop
enter
mull
mov
les
inc
les
xor
push
jns
ja
aas
xor
nop
mov
daa
jns
insl
dec
inc
cmp
repnz
cmp
call
inc
pusha
pushf
and
insl
add
nop
cld
xor
inc
push
push
inc
mov
cmp
mov
sysexit
mov
leave
sti
adc
das
lea
ficoml
lock
add
mov
addr16
in
es
add
popa
jl
icebp
cmp
imul
jge,pt
add
dec
xchg
adcb
ds
jne
adc
push
int3
push
push
jl
xchg
pusha
inc
dec
test
cmp
js
xchg
push
fisttpl
pusha
or
cmc
fwait
jno
fistl
js
dec
jnp
sub
pop
sbbb
dec
mov
mov
call
mov
sbb
in
push
shll
aam
jle
push
out
pop
imul
insb
push
js
or
sub
or
adc
inc
add
sti
inc
pop
enter
leave
mov
mov
xchg
je
rorb
je
ficompl
loopne
into
mov
clc
testb
shl
jo
divl
shl
and
dec
rcrb
pop
sar
push
pop
dec
pop
aas
fsub
xor
mov
lahf
sarb
je
xor
in
xor
sub
test
sub
add
inc
pop
sub
in
test
push
out
xor
push
stc
jecxz
mov
stos
loope
loope
test
push
cwtl
cmp
sub
int3
inc
ds
push
and
xchg
push
add
mov
rcrl
adc
cmpsb
fdivrl
or
mov
lock
push
sbb
lock
mov
mov
and
cmpsl
sbb
and
fdivrl
insl
insl
mov
jns
pop
or
loopne
pop
rorb
inc
out
adc
sbb
lock
faddl
inc
inc
das
inc
push
dec
push
jo
lea
ret
sbb
loopne
movb
mov
push
movl
inc
pop
out
out
adc
adc
or
sbb
dec
cmp
punpckhdq
adc
fisubrl
add
and
mov
fwait
xchg
lea
add
mov
mov
or
mov
mov
mov
add
inc
mov
inc
add
lods
adc
push
sub
adc
aas
dec
mov
jmp
lcall
push
mov
pop
pop
pop
push
add
cld
xor
dec
jne
mov
add
adc
loopne
fnstsw
push
sbb
inc
or
and
ljmp
aam
dec
lods
ds
in
mov
mov
dec
js
and
icebp
dec
push
inc
and
mov
enter
push
dec
decb
sbb
jecxz
push
out
fildll
adc
jecxz
mov
mov
jmp
cs
clc
sti
movw
mov
cld
push
mov
sbb
rep
rclb
push
adc
jl
out
push
jnp
or
push
rolb
jne
ds
xchg
sub
fidivrs
std
lea
mov
push
pop
push
cmp
lret
cmpsb
cmp
push
addr16
out
and
fbstp
nop
cld
icebp
pop
mov
pusha
lods
xor
pushf
jle
jl
cmp
jae
sbb
cmp
push
xchg
push
add
rcl
push
les
icebp
aaa
dec
sub
fildll
push
movzwl
lea
or
add
push
clc
int3
xchg
lods
adc
mov
add
test
mov
ljmpw
pop
mov
pop
pop
push
push
dec
clc
lret
or
and
xor
rcll
or
aas
push
xor
adc
dec
mov
mov
out
cli
xchg
and
addb
int
inc
xlat
add
mov
add
and
xor
stos
push
xor
push
rorb
mov
je
push
push
push
xor
push
add
xchg
jecxz
decb
mov
add
inc
push
outsl
int3
mov
adcb
mov
mov
pop
cmpsl
fucomip
mov
or
push
push
xor
ds
loope
push
test
scas
dec
cmp
das
fcoms
or
les
in
pop
jge
add
scas
dec
rorb
or
adc
pop
popa
in
movsb
nop
hlt
cld
es
sub
push
in
pop
ja
js
add
pop
jl
rolb
out
imul
repz
or
and
stos
shrl
movl
in
and
aaa
sbbb
insb
pop
cld
push
push
inc
nop
add
mov
add
pop
addb
out
test
pop
lock
test
inc
mov
xchg
xchg
inc
pop
jl
ret
addr16
loope
add
xchg
pop
add
or
pop
add
mov
sbb
pop
dec
cmp
fadd
jg
popf
inc
push
mov
cmp
jg
test
add
icebp
jl
aaa
fdivrs
xchg
cmpb
jg
bound
add
lods
cmp
jle
sub
sbb
sub
or
push
push
pop
jne
inc
mov
and
xchg
lds
or
or
or
adcb
cli
data16
push
sbb
ds
add
dec
jae
pop
fcomp
xchg
pop
add
sarb
rol
insb
xchg
sbb
scas
into
test
jbe
in
mov
add
test
pushf
pop
fsubr
and
pusha
ds
mov
push
loope
or
loopne
test
or
in
pop
ret
ret
push
jg
sahf
sbb
fimuls
loopne
es
cmp
dec
mov
into
gs
sbb
mov
inc
dec
jne
cmp
je
adc
pop
out
inc
xor
ret
loop
cli
sbbl
lock
push
repnz
add
sub
mov
add
mov
bound
inc
lods
cmp
enter
or
fsubrl
insl
imul
mov
pop
cwtl
ret
test
mov
insl
mov
push
mov
faddl
les
ret
lret
call
xor
pusha
jge
negb
pop
cmp
add
push
mov
push
mov
sbb
fdivrs
aad
in
inc
mov
stos
cmpsl
push
sub
or
inc
aaa
mov
and
pop
push
stos
shlb
mov
out
aas
mov
inc
aam
in
sub
stos
in
test
mov
adc
or
sarb
jmp
xor
sbbl
sub
cmp
jl
ret
lea
dec
push
das
sbb
xchg
loope
push
test
in
sub
inc
jl
pop
bound
lock
jb
xor
lahf
test
xor
add
sahf
je
shrb
movl
pop
add
mov
je
dec
or
jle
lock
jmp
push
push
in
and
jmp
mov
jmp
adc
inc
sarl
mov
sub
or
inc
and
jae
sub
add
add
push
push
sub
dec
push
sub
push
adc
mov
fcom
adc
dec
imul
je
lock
imul
add
adc
roll
sub
adc
cmp
add
push
dec
or
popa
pop
incb
inc
mov
fldl
lods
xlat
hlt
js
cmp
rcr
add
aam
leave
adc
inc
hlt
sbb
inc
jbe
pop
jmp
push
xor
int
pop
int3
xor
add
ficoml
sbb
lcall
jns
xor
pop
clc
clc
push
cs
hlt
hlt
pushl
movsl
sbb
add
sbb
push
or
pop
cmpsb
and
cmpsl
lods
icebp
adc
imul
dec
or
push
sbb
adc
call
pusha
xor
out
mov
jo
fisubs
test
mov
pop
push
push
in
hlt
int3
push
jmp
or
loopne
or
mov
clc
xchg
out
popf
call
aam
inc
and
or
mov
faddl
loopne
das
add
push
add
lock
in
and
mov
data16
pop
add
or
xor
mov
xchg
push
in
mov
mov
or
mov
xor
lods
data16
mov
mov
mov
mov
jp
push
outsb
jle
mov
inc
add
cmpsb
insl
fcmovnbe
add
test
out
in
in
imul
mov
out
push
fcoml
nop
scas
lock
and
xchg
adc
cvtpi2ps
add
push
jmp
sar
adc
lcall
js
jno
pop
mov
or
inc
push
or
and
xor
lcall
add
xorl
mov
popa
das
in
push
adc
cmp
mov
fsubs
or
popa
xchg
or
dec
mov
adc
sarl
or
or
xchg
ss
je
imul
inc
int3
mov
pop
outsl
dec
in
mov
clc
stc
inc
dec
hlt
adc
xchg
lods
cli
arpl
mov
or
jmp
adcl
or
cli
cmp
jns
fcomps
push
cmp
inc
add
cmp
arpl
mov
add
jl
push
cmp
mov
iret
mov
ret
mov
js
inc
push
roll
sbb
daa
cmp
mov
ficoml
push
adc
xorb
js
daa
xchg
out
cmpsl
pop
ret
cmp
push
adc
pop
fimull
adcb
and
mov
sarb
pop
xor
push
mov
inc
outsl
jb
lret
outsb
push
fs
add
or
test
add
das
outsb
movsb
mov
addr16
add
jae
stos
pop
mov
xchg
roll
stc
rorb
in
add
adcb
repnz
int3
dec
scas
push
psubw
inc
add
clc
mov
dec
mov
cs
mov
in
mov
lock
sbb
cld
sti
addb
test
inc
push
pop
add
xchg
arpl
ja
popw
imul
bound
daa
pop
sbb
clc
and
bndstx
pop
adcb
gs
mov
mov
add
sub
add
outsl
icebp
popf
mov
ficoms
lret
xor
ja
push
sub
adc
lea
mov
cltd
pop
push
outsb
sbb
sub
xchg
mov
push
int3
and
push
sub
jle
and
inc
cmpl
inc
cmp
gs
or
movb
clc
clc
popl
xchg
pop
push
xlat
xor
push
gs
flds
push
outsl
jle
pop
push
imul
outsl
xorl
dec
push
xor
sbb
rorb
adc
push
inc
inc
sub
mov
add
xor
adc
sbb
pop
mov
mov
out
jno
imul
or
sub
cmp
clc
fs
cmpl
stos
mov
enter
or
xchg
fbstp
and
pop
int3
mov
cmp
outsl
and
push
enter
pop
add
popaw
fstl
jmp
or
or
push
js
mov
push
add
mov
orl
and
out
jne
mov
dec
mov
push
dec
mov
test
adc
xor
mov
rolb
pop
icebp
jns
xor
adc
shr
les
pop
das
clc
rorb
je
mov
sub
dec
faddl
fildl
and
loopne
test
or
mov
push
pop
xchg
pop
mov
push
adc
sbb
sbb
add
fisttps
adc
pusha
ss
lods
imul
test
std
nop
push
adc
or
fcoml
add
pop
ud1
xor
in
das
xlat
dec
inc
loop
arpl
fdivr
pop
dec
add
jo
ja
enter
sub
cmp
jno
jmp
xchg
iret
fidivs
aaa
or
or
rcl
push
das
xor
push
xor
les
and
sbb
xlat
sbb
and
mov
test
xchg
mov
inc
fcomp
sbb
jl
mov
fs
leave
dec
inc
dec
ljmp
and
ret
je
pop
shrl
cmp
add
push
inc
sub
int
push
sahf
inc
outsb
inc
mov
and
add
xor
fldl
bound
pop
xchg
adc
push
sbb
cmpsb
and
fildl
js
sysexit
add
arpl
std
xchg
inc
add
outsl
push
inc
ja
dec
orl
mov
cmp
icebp
mov
or
rcll
int
and
mov
pop
push
sbb
mov
sub
pcmpgtb
push
outsb
and
insb
outsl
add
daa
push
movsb
lock
sbb
fiaddl
xchg
mov
mov
push
rorb
add
int3
dec
adcb
xchg
push
out
push
jo
mulb
ret
fildl
fs
stos
sbbl
clc
gs
iret
cld
sbb
mov
pop
jo
mov
xor
mov
jmp
jne
and
cmp
cli
js
jb
push
adc
fnstenv
js
pop
lock
daa
pop
xor
jns
or
imul
mov
sub
popa
sbb
negl
push
mov
shlb
sti
push
insb
mov
aaa
push
xor
jnp
shlb
lea
adc
in
pop
sbb
fists
in
inc
cs
push
or
in
mov
xor
pop
int3
add
dec
sbb
lahf
or
mov
jg
clc
fwait
dec
mov
mov
test
push
sub
sub
push
sub
scas
cwtl
xchg
fsubl
addr16
push
cmp
jb
es
pop
and
pusha
stos
out
jo
dec
loope
xchg
cltd
or
xchg
out
in
das
add
add
mov
xor
push
fwait
or
ds
push
pop
adc
pop
imul
mov
loop
out
loop
jg
push
call
push
and
and
aaa
inc
pop
test
and
negl
adc
and
lods
inc
sub
js
xchg
dec
in
mov
mov
mov
lods
inc
cs
jmp
mov
es
aam
and
add
and
clc
lock
dec
inc
and
loope
add
adc
ss
fadds
mov
or
push
push
jecxz
call
pop
pop
sarb
mov
push
enter
sbb
or
adc
adc
outsl
pusha
sub
andb
adc
mov
adc
cmpsl
inc
je
lock
cwtl
daa
dec
push
add
push
and
push
xorb
inc
sub
in
xor
dec
adcl
cmpsl
in
addr16
dec
mov
dec
sbb
add
sub
inc
pop
popf
xor
add
sub
xchg
adc
dec
add
sub
sbb
add
addb
ficomps
mov
push
push
sti
cmp
push
add
jp
fcoms
jns
adc
in
dec
repz
test
mov
or
test
aam
das
or
xchg
xlat
fmuls
push
arpl
push
in
pusha
adc
jne
inc
add
repnz
cmp
ja
xchg
lahf
push
add
mov
xchg
popa
ja
inc
in
xor
dec
cmpsl
aas
out
and
sbb
dec
rolb
or
insl
mov
inc
xor
jg
mov
push
push
leave
mov
sbb
mov
aaa
in
icebp
dec
fs
shll
add
bound
pop
mov
and
add
push
and
adc
jg
xlat
or
and
or
pusha
push
and
bts
mov
push
movsl
cltd
and
sub
cld
addr16
add
and
inc
je
push
inc
nopl
imul
adc
sub
leave
loopne
lea
sti
pop
dec
test
dec
enter
fs
and
or
test
xor
xor
movsb
or
test
jb
sub
cmpsb
adc
push
push
push
movsb
in
popa
jns
js
mov
cmp
mov
adc
mov
lods
fidivrs
mov
int
lcall
data16
mov
clc
add
subl
sar
push
add
hlt
pop
jp
clc
pop
add
mov
sbb
pop
jl
mov
push
xchg
pusha
xchg
nop
fs
mov
call
ret
or
ljmp
into
or
rorb
fimull
jo
test
push
sub
or
xchg
pop
mov
push
mov
push
push
repnz
add
lds
push
ret
fdivr
iret
inc
std
add
jae
lock
and
pop
jnp
xchg
inc
sti
mov
fisttpll
das
sbb
adc
mov
test
pop
je
add
push
mov
jl
mov
cld
mov
sti
mov
test
sub
test
imul
pop
loopne
test
je,pn
cmpb
fcomps
movsb
or
xlat
push
mov
adc
push
loop
and
stos
jno
mov
jne
stc
adc
adc
scas
xor
nopl
call
faddl
shl
lcall
sbb
pusha
inc
mov
jnp
lds
sbb
inc
js
pop
sub
mov
cmp
pop
push
sbb
add
adc
pop
fs
adc
test
jno
sbb
xchg
das
aaa
in
push
aas
or
adc
or
adc
nop
or
sbb
or
or
enter
dec
push
mov
frstor
ficoml
push
dec
cmp
jle
dec
fs
or
pushf
jo
dec
cmp
sub
jp
mov
inc
cmp
mov
xor
or
jle
ss
xor
dec
sbb
jg
push
in
pop
pusha
jae
push
sbb
jae
adc
addl
sbb
int
pop
sbb
sbb
and
icebp
and
add
insl
in
add
daa
pop
lahf
cmpl
inc
sbb
insl
push
std
mov
sbb
cmc
jmp
jl
cmpb
adcb
movsb
inc
lock
push
sbb
notl
sub
adc
cltd
inc
xor
ret
aas
pop
pop
jp
mov
or
pop
sub
jmp
sbb
out
test
sub
js
ret
sub
clc
push
popa
popa
and
movsb
inc
je
inc
push
je
aam
je
loopne
pop
cwtl
loop
inc
adcl
jbe
jmp
jmp
push
mov
les
xchg
ljmp
repnz
mov
sbb
lock
subb
inc
add
pop
ret
sbb
push
jae
cmp
add
xchg
cmp
arpl
in
cmpb
dec
adc
push
pop
in
xchg
into
data16
pushf
mov
lock
inc
pop
or
jae
mov
in
addb
mov
mov
rolb
repnz
or
mov
and
fmul
xor
add
test
xchg
add
call
loopne
add
and
fadds
jl
pushf
cmpl
ja
testb
push
sbbl
or
insl
dec
add
mov
pop
sub
aas
mov
shll
addb
aam
and
pop
dec
and
xor
cmp
insl
fnsave
pop
xor
imul
push
jae
bound
stos
dec
xchg
sbb
in
push
shlb
push
xchg
loop
or
jne
and
add
add
cmp
add
add
xchg
xor
in
mov
mov
sub
out
stos
shl
dec
iret
mov
sbb
dec
imul
adcb
pop
add
sbb
dec
mov
sub
xor
bound
xor
xchg
xchg
inc
pop
pop
test
or
cmp
negb
rolb
sti
test
xchg
popf
push
jecxz
xor
add
arpl
int3
and
aaa
mov
sbb
xor
orps
xor
bound
sub
mov
pop
das
mov
or
mov
pop
pusha
pop
aad
and
add
cmpsl
clc
and
aas
adc
es
or
or
pop
ja
dec
fistpll
push
mov
loope
mov
insb
jge
mov
pop
neg
cmpsl
cmp
je
mov
sbb
or
inc
or
dec
js
add
pop
inc
push
lock
mov
pop
sahf
and
es
je
data16
pop
lock
add
inc
lahf
inc
icebp
jp
jno
in
mov
and
push
lock
xchg
xor
call
bound
xchg
add
adc
xorb
daa
not
add
pop
rolb
fs
es
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
jmp
outsl
sti
mov
lods
sbb
sbb
jns
repz
sbb
sbb
jne
sub
or
sub
add
roll
cmovg
js
push
adc
pusha
mov
mov
dec
mov
push
mov
arpl
in
adc
cs
sub
dec
cld
lret
test
or
ret
pop
add
enter
filds
push
or
les
adc
aas
inc
cmp
mov
js
mov
cwtl
or
add
and
ds
movl
xor
add
sub
and
lahf
std
xchg
mov
inc
call
mov
push
fmull
sahf
aaa
xor
sbb
popf
push
and
jbe
pop
or
stos
ds
sub
sbb
xor
sub
fs
or
dec
xchg
jns
enter
outsl
sbb
ds
insl
mov
pusha
stos
add
cmp
add
pop
imul
sbb
adc
jmp
popa
jbe
das
sbb
pop
in
mov
inc
ja
cmp
je
mov
pop
daa
sub
roll
jbe
imul
inc
insl
fdivr
inc
mov
push
cmp
inc
in
jne
jl
and
pop
rolb
adc
xor
dec
mov
xchg
jne
mov
xor
test
stc
push
add
or
nop
and
inc
cmc
je
sub
inc
add
pop
inc
das
adc
and
fisttpl
mov
xor
imul
je
jo
jg
xor
shrb
and
leave
xchg
adc
xchg
inc
lret
movl
push
hlt
fidivs
pop
mov
fwait
jbe
sub
xor
inc
adc
pop
pusha
pop
mov
push
mov
push
and
rolb
stos
add
and
jmp
push
call
mov
inc
xlat
xor
mov
push
push
sub
in
push
sbb
fcoms
xchg
ja
xor
loopne
mov
loopne
or
shrb
and
mov
push
or
or
call
push
inc
lock
xchg
xchg
test
cmp
jbe
sar
sub
push
jecxz
dec
lods
imul
xor
sbb
dec
int
sahf
pop
pop
xor
jg
call
add
into
lock
sub
fldl
inc
and
inc
dec
xor
subl
add
lods
add
jnp
cmpb
inc
sub
and
ss
sbb
daa
test
push
sub
shlb
scas
push
popa
inc
bswap
mov
mov
stc
add
lods
loopne
ds
subl
pop
lcall
mov
nop
dec
mov
fidivrl
leave
hlt
mov
mov
insb
movb
pop
test
adc
in
test
fsubrs
test
stos
sub
push
setae
addb
arpl
fldt
lock
mov
and
sbb
cmpsb
lock
imul
mov
mov
sub
sub
or
and
shlb
js
in
popa
cmpsb
inc
or
cmp
or
test
aaa
fmuls
addr16
inc
xor
inc
in
pop
shlb
push
sub
cli
cmpb
mov
xchg
inc
sub
xchg
push
add
pop
test
and
sub
dec
xchg
gs
or
jns
out
push
fildl
call
ja
mov
lcall
xor
cmp
ss
pop
push
jp
lds
or
sbb
es
add
xchg
pop
adc
lods
dec
imul
ja
lods
and
sub
or
xor
cmp
movsb
jo
stos
and
xchg
push
mov
mov
imul
sarl
xor
push
mov
cmp
sub
sub
or
sub
add
sahf
sub
jno
out
es
xor
cld
or
push
pop
cld
or
js
sbb
dec
test
add
mov
push
add
fadd
or
pop
movb
push
and
cwtl
pop
xchg
jno
test
pop
jge
cld
mov
mov
or
add
pop
add
je
rcll
lret
cs
int
scas
push
push
test
jmp
push
jnp
pop
mov
lcall
ret
shrl
movnti
inc
adc
test
and
sbb
sub
or
push
sbb
adc
ljmp
mov
sub
dec
sub
scas
shll
inc
cmp
pop
sti
mov
lds
add
push
cmp
push
adc
ds
pop
and
sbb
insb
and
dec
outsb
adc
insl
jo
adc
xchg
mov
jl
gs
pop
gs
test
or
add
inc
rcll
call
test
std
call
sbb
inc
mov
pop
dec
inc
or
inc
leave
and
push
sbb
pop
and
sahf
adc
pop
adcb
dec
inc
or
pusha
or
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
push
adc
jno
adc
jo
out
loopne
push
and
inc
lock
add
add
jo
jnp
addb
fnstenv
pusha
stos
add
test
and
and
movups
jns
pop
fadd
xor
das
sub
jno
insb
add
lahf
or
jnp
add
hlt
out
add
clc
sbb
lock
addl
pop
sub
add
sub
movl
jecxz
loope
inc
mov
jne
cmp
addb
sbb
pop
dec
call
sbb
and
inc
outsl
xchg
add
jmp
cmovb
or
in
sub
push
mov
cmp
jmp
lahf
or
sbb
jp
xchg
adc
adc
call
adc
pop
arpl
push
call
mov
jno
pop
ja
dec
jecxz
pop
mov
cltd
lods
outsl
push
mov
sbb
pop
ja
jb
jp
lds
adc
add
mov
push
or
sbb
add
popa
push
mov
pop
and
mov
cmpl
data16
ja
out
lds
in
test
test
mov
iret
sub
ret
ret
daa
in
adc
aaa
iret
jne
mov
xchg
imul
add
inc
push
xlat
adc
mov
mov
lret
int3
cmp
xchg
dec
int3
ffree
insb
ja
pop
sub
test
jmp
add
mov
orl
xor
dec
pop
fisubl
sbb
dec
or
adcl
mov
sbb
mov
mov
dec
movb
push
xor
sbb
cmpb
testl
jge
adc
inc
xchg
mov
push
call
movsb
test
sub
pop
dec
cmp
push
pushf
lret
scas
sbb
push
push
leave
adc
pusha
add
rolb
sub
fwait
ret
jp
mov
push
dec
mov
stos
and
adc
cmp
into
movb
stos
adc
jmp
jl
test
jecxz
or
arpl
shl
add
xlat
daa
roll
movb
add
inc
and
mov
jecxz
lahf
ret
inc
ret
es
push
outsl
lea
and
mov
pushf
or
lcall
jo
add
lock
mov
sbb
lods
jo
inc
jmp
cmp
les
sub
insb
mov
adc
jg
lods
adc
and
jno
in
lcall
pop
js
sbb
add
daa
pop
mov
pop
montmul
cmpsb
push
push
push
dec
jmp
xchg
loopne
imul
stos
xchg
rcr
adc
or
add
ss
pop
imul
fstpl
sbb
mov
stos
mov
les
sbb
in
adc
iret
sahf
or
inc
sbb
insw
rcrb
push
sub
dec
mov
imul
ss
call
xchg
xor
mov
lahf
aad
jp
adc
ficomps
jl
clc
push
addl
lret
mov
push
out
pop
sbb
cltd
add
push
call
daa
pop
pop
add
inc
and
cmp
test
je
test
inc
adc
sti
and
popa
dec
or
mov
ret
inc
in
or
xorl
jne
ss
mov
push
addr16
push
cmp
jl
imul
or
je
inc
dec
add
xor
mov
mov
push
add
dec
pop
xchg
fadds
imul
mov
xor
lock
daa
jbe
dec
or
in
inc
mov
imul
inc
mov
rorl
shl
sub
or
in
jno
sahf
push
leave
inc
push
ror
pop
lods
adc
sub
jo
cmp
aam
jmp
jbe
mov
enter
es
hlt
inc
scas
xchg
cmp
mov
je
adc
mov
add
and
adc
ja
xchg
xchg
cmp
push
outsb
sahf
int3
in
movsb
adc
aam
adc
cmp
stc
adc
lcall
add
or
mov
in
xchg
xchg
cwtl
sahf
leave
inc
xchg
cmp
sbb
lahf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
in
loopne
nop
or
out
mov
mov
rclb
sbb
pop
fsubs
mov
pop
adc
push
mov
movsb
fisttps
xor
or
add
lds
push
mov
jle
test
push
and
push
mov
xchg
xchg
fimuls
dec
sub
int
sub
adc
or
hlt
cmpsb
lock
dec
push
jle
fists
push
push
jmp
sbb
or
repnz
mov
imul
pop
cld
add
mov
shrd
xor
or
dec
mov
xor
sbb
adc
push
sbb
push
inc
or
pop
in
xchg
mov
push
jo
xchg
adc
jl
enter
xacquire
inc
add
or
pusha
das
xchg
or
outsl
adc
push
cmp
push
push
sbb
push
jo
xchg
int
scas
xor
xchg
mov
lea
dec
adc
push
jns
ja
or
adc
je
nop
lea
cmpb
or
sbb
jne
jo
into
lock
or
adc
add
cmp
and
adc
bound
inc
fidivrl
sub
and
or
pop
je
fwait
mov
push
and
jecxz
sub
mov
movsl
inc
xchg
jb
jp
push
add
cmp
xor
pusha
rcl
movsl
mov
and
es
adc
xlat
mov
mov
mov
lahf
inc
js
test
jge
inc
pop
pop
arpl
jb
test
xchg
mov
lret
test
jmp
popf
ljmp
pop
enter
dec
sbb
xlat
jle
movb
rorl
sbb
cmp
mov
xor
scas
aam
test
jb
stc
mov
cmpsl
std
pop
scas
sbb
mov
push
or
jecxz
lds
xlat
push
loopne
lods
dec
pop
insb
and
movsb
add
and
fnstenv
jl
cmp
cmp
sbb
push
movsl
and
dec
and
add
cmpsb
push
out
inc
and
cmp
in
ja
mov
add
sub
cmp
out
pop
shrb
pushf
push
jg
cmpsl
in
xor
or
sub
lea
test
pop
or
sub
inc
ror
aam
adc
imul
mov
push
sbb
cmp
jae
inc
pop
aam
aaa
arpl
cmp
adc
jo
inc
lods
sub
pushf
xor
pop
ss
dec
aam
js
xor
xchg
sbb
adc
adc
rol
mov
sbb
in
daa
and
rcrl
xchg
and
popa
mov
fadd
enter
dec
jbe
mov
push
cmp
xlat
dec
dec
inc
and
or
js
pop
jmp
sub
popf
in
sbb
mov
nop
mulb
sub
dec
sub
pop
jns
bound
hlt
shlb
mov
test
pop
sub
sub
inc
sbb
sahf
add
stos
shrb
lret
adc
sub
jbe
test
and
adc
inc
aas
das
mov
imul
call
add
lock
adc
push
pop
xor
mov
popa
sub
imul
rcrl
or
test
rolb
or
xchg
lock
adc
dec
xchg
adc
movb
enter
inc
and
mov
or
popa
push
xchg
jo
je
pop
xor
sbb
mov
popf
add
lods
xchg
push
dec
jmp
sti
push
and
popa
popf
sbb
sbb
mov
sub
adc
jl
cmp
rcr
das
add
inc
cmc
pusha
jge
imul
fdivrl
lcall
xor
inc
adc
fildl
or
add
mov
mov
jle
cmc
pop
sbb
aad
push
sub
xchg
pop
add
adc
pop
push
inc
jl
jmp
mov
sub
test
loopne
loopne
cmpsb
pop
adc
movzwl
add
imul
imul
push
dec
cmpsl
outsb
testl
xchg
enter
stos
loopne
and
push
cmp
inc
push
inc
imulb
xor
insb
cmp
pop
jmp
xchg
dec
in
cmp
push
cmpsl
xchg
mov
mov
xchg
pop
add
add
pop
adc
push
adcl
ret
jae
stos
pop
and
pmullw
mov
ret
imul
testl
outsl
xor
push
daa
xor
aaa
push
or
cmpsb
add
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
pushf
lahf
aaa
sub
cmpsb
shrl
out
lds
or
cmpsl
pusha
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
mov
mov
js
enter
mov
daa
mov
adc
cs
adc
add
add
pop
and
sub
jecxz
mov
cmpsl
xor
xchg
push
das
mov
add
mov
xorb
in
popf
cmp
sub
jne
mov
inc
and
mov
inc
xchg
ja
lcall
cmp
cmpsl
subb
sbb
adcl
bound
push
aad
aas
and
push
add
dec
mov
in
ret
jb
addr16
mov
sub
sub
inc
out
pop
xchg
insb
je
sbb
aaa
add
aad
cmp
loop
and
jne
push
loop
sub
dec
jnp
aaa
mov
mov
jo
aam
lahf
js
inc
and
adcb
xchg
movsb
je
out
sub
dec
ret
push
adc
mov
push
mov
mov
xor
push
or
jge
clc
testl
repz
sbb
pop
sbb
mov
and
sub
cmp
test
shlb
adc
enter
xchg
fstps
sbb
inc
cmp
or
sub
pop
add
jne
add
jb
aam
xor
jg
pop
sbb
movsb
loop
outsb
hlt
mov
xchg
test
pop
or
mov
arpl
inc
mov
sbb
cld
sub
push
ret
mov
inc
sbb
sub
invd
movups
jne
pop
mov
insb
leave
inc
pop
add
fidivs
inc
mov
push
push
sahf
imul
adc
call
lock
arpl
shlb
pop
fcoml
loopne
les
in
nop
fnstsw
or
mov
adc
mov
inc
push
and
lret
pop
rol
test
rcl
mov
adc
data16
mov
mov
mov
mov
cmp
shlb
sub
mov
lock
das
and
sub
jl
add
lods
sub
adc
mov
sahf
and
mov
js
mov
mov
jl
enter
push
dec
addr16
jo
sarb
push
jns
push
outsl
xor
in
cmp
jmp
mov
mov
sub
aas
int3
mov
lods
int3
adc
or
mov
or
clc
mov
pop
in
nop
mov
mov
cwtl
push
test
add
testb
insb
gs
adc
sbb
pusha
mov
insb
lods
js
inc
leave
mov
mov
add
push
xchg
mov
loop
mov
pop
and
fstl
xor
jo
dec
adc
sbb
pushf
jne
mov
and
add
cmp
pop
mov
imul
test
dec
xchg
out
imul
lock
or
and
dec
xchg
adc
mov
fadds
andb
dec
push
xlat
jbe
xchg
sbb
dec
pop
outsl
jmp
sub
lret
nop
hlt
leave
leave
sub
sub
sbb
push
popf
je
cltd
test
cmpsb
sbb
aaa
adc
cmp
cmp
add
clc
hlt
lock
pushf
pushf
pushf
in
call
mov
fsub
fnsave
clc
in
clc
adc
sub
fcoms
sbb
aas
aas
pop
mov
mov
cmpl
adc
xor
mov
sub
jl
hlt
sbb
pop
aas
xor
or
push
fmul
xchg
jecxz
mov
or
cltd
std
add
in
adc
mov
jmp
lods
je
movb
out
movb
mov
mov
mov
popa
bswap
lock
je
jb
inc
mov
pop
and
mov
push
sub
inc
pop
pop
push
incl
dec
cld
and
add
xchg
xor
xor
je
push
dec
adc
dec
adc
adc
push
or
cmp
sbb
daa
enter
pop
sti
inc
adc
faddl
push
jb
addr16
js
or
es
mov
and
sbb
jo
mov
cmp
test
mov
add
in
xchg
and
or
push
popa
mov
cmp
jle
push
pop
cmp
mov
inc
adc
insb
dec
sub
call
sub
pop
and
and
movsb
push
add
pop
dec
jmp
jmp
push
sbb
sahf
imul
jmp
lods
popa
or
sar
ret
jmp
push
lock
dec
rcll
nop
test
daa
adc
mov
sbb
shlb
mov
inc
sub
or
push
or
jmp
xor
arpl
imul
lock
call
jl
inc
push
mov
or
outsl
mov
nop
or
adc
je
arpl
inc
dec
sahf
out
jne
sub
mov
add
or
dec
fbld
jne
xor
sub
clc
adc
jl
cmp
lods
or
std
pop
mov
push
adc
jle
lea
loope
mov
fcomps
sbb
ds
jb
push
sub
xor
gs
rcrl
push
decb
in
push
lock
dec
inc
pop
cmpsl
sub
dec
adc
jb
sarb
inc
sub
adc
adc
dec
test
jo
test
jge
cmpsb
sub
push
test
mov
adc
add
ret
pop
test
mov
mov
cmp
adc
inc
in
inc
or
gs
pop
sbb
sub
out
mov
fmuls
and
clc
pop
sbb
loop
and
xor
push
sub
cmpsb
test
jne
in
js
repnz
jmp
ds
add
adc
loop
mov
push
push
rorb
adc
add
test
inc
outsb
jne
sahf
rolb
ja
add
or
loopne
jle
fsubs
fmuls
mov
jl
add
mov
jl
or
push
ds
cmpsl
adc
adc
mov
icebp
pushf
mov
push
push
inc
push
and
fstpl
dec
dec
lcall
mov
pop
fs
notb
popf
mov
jg
movsb
xor
std
push
ret
mov
prefetchw
or
add
sub
xchg
cld
mov
pop
rcll
mov
movsb
push
test
cmp
inc
xchg
and
or
cmp
imul
mov
aam
dec
or
push
imul
adc
or
dec
add
sub
clc
or
jo
jnp
mov
mov
adc
popa
xchg
imul
jne
stc
es
fmuls
xor
fs
add
ds
dec
pop
rorb
rclb
arpl
pushf
mov
into
jl
adc
mov
jmp
push
dec
push
and
mov
fmull
push
mov
adc
dec
aam
jb
in
mov
mov
cmp
mov
in
rorl
push
or
out
jmp
pop
repz
repz
pop
daa
das
aaa
push
xor
mov
sub
aaa
sub
sub
sub
sbb
or
es
pop
adc
das
adc
js
mov
or
and
loop
ss
fsts
xchg
es
movaps
adc
es
pop
loope
pop
push
pop
ljmp
cmp
shll
jb
mov
add
pop
repnz
jns
sub
fldt
add
xchg
push
in
or
frstor
mov
lock
sub
inc
ret
cmp
outsb
sub
adc
outsb
adc
call
negl
mov
movsb
jo
sbb
adc
lea
pop
movsl
xchg
or
cmp
push
mov
cmpl
hlt
add
iret
jne
xchg
jo
dec
push
sbb
add
into
in
or
xor
sbb
movsb
adc
fld
cmpb
fmuls
rcrl
xchg
adc
hlt
xor
mov
and
rcll
pusha
enter
and
mov
xchg
sub
cmp
inc
adc
int
cmp
jle
fwait
push
and
prefetcht1
jne
insb
outsl
xor
jo
push
out
sbb
xchg
sub
ljmp
shl
pop
and
xchg
les
out
add
add
xchg
orl
pop
cwtl
fadd
push
xor
mov
cltd
popf
orl
rcll
jmp
test
mov
adc
sub
ss
jbe
test
scas
ror
push
sbb
cmp
into
sarl
mov
sti
dec
psrad
fnstcw
adc
mov
ljmp
arpl
in
daa
jb
add
scas
in
inc
sub
adc
scas
dec
or
push
xor
cmp
enter
pop
jnp
pop
inc
mov
jmp
jge
inc
inc
aad
jo
and
lods
test
fnstcw
dec
jne
and
sbb
or
es
dec
data16
je
enter
inc
sahf
into
pop
and
call
lock
jb
mov
sub
mov
outsb
jno
lods
shlb
push
stos
push
das
sbb
rolb
mov
jns,pn
cmp
lock
or
or
in
shll
xor
mov
pop
daa
xor
mov
pop
addb
cmpsl
push
int3
inc
pop
fsubl
mov
adc
popa
bound
mov
pop
mov
xor
xor
sbb
sub
adc
mov
aad
jle
insb
and
and
sbb
lcall
push
mov
xor
dec
mov
dec
in
js
fdivl
mov
les
scas
test
fsub
pop
or
inc
dec
in
aam
sbb
ds
adc
xchg
outsl
lock
mov
loopne
pop
inc
leave
imul
and
dec
xor
cmp
and
mov
inc
lret
loopne
push
add
das
call
mov
rorl
mov
adc
inc
adc
sub
sbb
mov
jmp
inc
test
mov
lock
lock
inc
xchg
dec
mov
es
sarb
call
jmp
cld
loopne
dec
push
jns
push
inc
lret
call
pop
lock
mov
inc
mov
ret
lds
inc
int3
inc
xchg
xchg
or
and
pop
pop
cmp
mov
xlat
pop
clc
add
int3
out
or
sar
sbb
adcb
push
rolb
stos
dec
int3
lock
test
ret
add
and
dec
imul
movsb
adc
cmp
mov
push
sbb
rclb
daa
fdivr
popf
jmp
int
cld
jle
dec
cmpsl
mov
inc
dec
je
out
push
jmp
xchg
imul
xor
jmp
adc
pop
jmp
mov
adc
push
add
sub
dec
pop
int
add
or
scas
sbbb
testl
cld
out
mov
dec
push
adc
pop
popa
push
js
jne
sbb
jmp
push
adc
in
push
fs
sbb
dec
es
lock
jle
sbb
jle
inc
arpl
or
mov
test
scas
iret
data16
push
cmp
in
xor
jo
pop
repz
pop
repnz
into
subl
je
int
pop
aam
cltd
jbe
pop
cmp
adc
incl
adc
mov
sbb
sub
xor
pop
insb
mov
leave
in
adc
xor
xchg
fxam
pop
push
addr16
dec
jo
cmc
xchg
mov
push
stc
or
out
dec
push
insb
or
outsb
push
or
lret
inc
je
push
xor
dec
mov
inc
cmc
mul
mov
add
inc
inc
fs
add
dec
jl
lret
dec
int3
jo
xchg
test
mov
nop
add
cmp
cmp
pop
gs
add
cmp
in
pop
adcb
arpl
arpl
insl
or
aaa
or
jmp
push
push
inc
daa
push
inc
pusha
ss
inc
adc
cmp
add
inc
outsb
arpl
xor
gs
insl
in
arpl
outsl
ja
mov
xor
popa
scas
andb
pop
outsl
jae
mov
add
nop
push
sub
enter
shlb
bound
xlat
or
inc
adc
sbb
push
push
push
push
xchg
mov
nop
hlt
cld
rorb
xchg
das
dec
addr16
rcrb
loop
divl
push
inc
jb
sub
push
les
push
pop
xchg
inc
out
add
adc
out
pop
pop
add
mov
scas
add
and
mov
scas
push
aad
js
rcrl
pop
inc
push
stc
test
pop
ret
pushf
enter
lcall
or
cmp
sbb
cmp
xchg
iret
lea
or
pop
addb
nop
xchg
and
and
cwtl
pushf
mov
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
fadds
sub
ss
inc
push
movsb
aas
adc
out
pop
mov
adc
pop
arpl
sbb
lea
les
sub
cmp
lea
mov
nop
lret
sbbb
lods
mov
nop
fcompl
nop
lret
cwtl
add
lret
cs
sbb
xor
dec
test
gs
sub
xchg
add
test
movsb
xor
mov
adcb
sub
push
sbb
call
gs
int3
or
rolb
add
aam
test
cmp
dec
xor
xchg
add
pop
in
push
push
movsb
je
test
nop
lret
lock
gs
sub
hlt
clc
add
in
xor
iret
add
add
fcoml
sbb
push
movsb
xor
adc
nop
lret
inc
sbb
add
sbb
and
lods
sub
xchg
add
push
movsb
xor
cld
xor
popa
and
pushl
fldenv
xchg
pop
popa
std
dec
movsl
sub
push
mov
pushf
add
push
sbb
inc
insb
outsl
jae
mov
ss
adc
push
cmp
inc
push
xor
test
fcmovbe
aas
push
in
add
daa
test
je
jne
or
inc
xchg
inc
push
aas
addr16
fs
pop
scas
pop
dec
arpl
jae
ret
sbb
mov
push
dec
fs
lea
add
insb
jns
jp
jae
sbb
out
bound
pop
jge
dec
dec
pop
pop
lahf
lcall
adc
rcr
or
icebp
push
add
bound
adc
xchg
into
es
pop
mov
pop
dec
xor
push
les
daa
mov
xor
jnp
subb
out
cmp
in
push
inc
pop
mov
mov
pushaw
and
and
insl
and
sbb
shll
sbb
inc
bound
jl
out
jno
shll
and
fs
jg
fcompl
das
adc
outsl
addr16
jne
insl
aaa
ss
in
outsb
das
pop
fs
lea
or
mov
faddl
das
sbb
cmp
pushf
loop
outsl
arpl
push
sbb
pop
push
xchg
movntps
inc
pop
outsl
pop
dec
sub
adc
fadds
xchg
mov
and
jl
jp
mov
cmp
xchg
push
add
scas
inc
mov
daa
aad
fnsave
dec
sbb
subl
cmpsb
add
fildl
leave
dec
pop
in
pushf
and
rcr
dec
pop
jb
cmpsb
popf
add
outsl
dec
or
pop
xor
inc
dec
cmp
sbb
addb
add
jno
js
and
pop
or
xchg
or
pop
loope
xor
xchg
pop
call
sub
push
xor
pusha
xchg
and
and
fbld
and
jo
xor
inc
mov
subb
push
push
pop
je
inc
push
pusha
push
jp
adc
test
push
shll
fbld
pop
dec
loop
pushf
outsl
loop
es
xor
mov
push
es
mov
or
sbb
jb
xchg
sub
andl
inc
push
xor
or
adc
pop
movsl
lret
add
inc
mov
pop
cmp
cmp
xchg
mov
lcall
dec
jae
insl
inc
cmpb
fs
add
insb
lods
pusha
test
clc
xor
push
push
inc
inc
jecxz
or
inc
inc
jbe
inc
inc
decb
inc
mov
fs
adc
adc
jnp
sbb
aam
loope
daa
adc
cmp
addl
mov
cmp
je
mov
shlb
add
aaa
xor
ss
sub
imull
loop
xchg
leave
sbb
testl
aaa
cmp
in
inc
mov
or
movsb
pop
inc
sbb
push
out
xchg
rolb
pop
pop
sub
cmp
add
shlb
lret
inc
out
xor
xchg
ss
xor
insb
call
and
aas
in
sub
push
push
dec
rcr
jge
sub
sarb
pusha
cmp
push
leave
inc
add
xor
lds
js
sub
adc
daa
mov
pop
dec
es
xor
mov
scas
or
movsb
pop
mov
daa
push
push
loope
insb
mov
in
adc
pop
add
add
push
shrb
test
arpl
pop
add
je
fmuls
inc
dec
push
ss
pop
in
sub
outsb
outsl
sub
inc
insb
insb
mov
fmul
pop
push
outsl
pop
or
and
sub
inc
mov
fldl
test
mov
adc
or
sbb
cmp
jne
add
mov
out
es
mov
pusha
ficoms
pop
cmp
mov
sub
insl
fs
addr16
push
ficompl
inc
imul
mov
or
shlb
lret
sub
and
mov
mov
inc
dec
mov
add
cs
inc
mov
ja
dec
mov
dec
popf
cmp
lahf
mov
inc
mov
lods
xchg
xchg
out
in
xchg
test
inc
dec
je
in
cmp
jo
insb
push
loopne
pop
es
push
in
lods
lods
push
insb
icebp
sub
subl
dec
cmp
adc
add
cld
dec
mov
das
sbb
adc
in
insb
mov
mov
rorb
jl
aam
mov
jbe
mov
xchg
inc
adc
pushf
adc
cmp
hlt
pop
pop
jo
adc
pop
push
jl
jnp
push
push
cmp
inc
jg
xchg
inc
add
repnz
pop
mov
je
loopne
outsb
fildl
stc
out
jge
cmp
in
add
imul
xor
xor
shll
add
xchg
fldt
mov
sahf
cmp
and
js,pt
and
in
imul
pusha
rorl
int3
dec
std
pop
xchg
inc
jl
xlat
incl
cld
adc
sbb
outsb
sbb
pop
sbb
sub
or
jae
popa
lock
nop
mov
mov
adc
loopne
mulb
xchg
ds
clc
shrb
xchg
add
or
inc
mov
inc
push
adc
pop
push
js
fdivr
orl
jne
add
enter
push
push
cmp
fildll
test
mov
inc
jle
add
or
popa
mov
arpl
lret
int
inc
or
or
addr16
cmpl
pusha
fwait
pop
sbb
adc
lock
nop
inc
and
pusha
adc
xlat
pusha
sub
sar
popa
sahf
or
add
in
jbe
cmp
cmpsb
jp
iret
adc
mov
add
insb
repnz
lcall
insl
popf
adc
fxsave
lock
push
and
dec
enter
out
cmp
fmul
inc
jl
cmp
incl
push
outsl
jo
jo
loop
sahf
pop
fidivrs
sbb
adc
fdivrl
dec
cltd
xchg
hlt
fidivrs
or
pop
xchg
js
mov
roll
add
lods
dec
mov
sbb
xchg
out
push
fsubl
lahf
sbb
les
mov
xchg
mov
sbb
clc
imul
xor
cmp
push
add
push
add
xchg
sub
pop
add
inc
jbe
aad
fwait
adc
insl
negb
and
xchg
mov
lock
ficoms
and
mov
les
int3
pop
and
or
test
sbb
in
mov
xchg
fcom
rolb
inc
cwtl
das
and
or
xchg
ja
pushf
dec
fcomp
and
or
xchg
loopne
loopne
ds
inc
add
push
jo
and
popf
ss
push
mov
daa
and
sbb
inc
ficoms
add
fnstsw
jo
dec
adc
shlb
test
rcrb
pop
push
jmp
rcrl
jbe
insb
or
dec
les
scas
and
adc
add
add
ja
bound
punpckhbw
ret
in
insl
ret
add
or
xchg
hlt
dec
jmp
inc
push
cmp
je
sbb
shl
xchg
mov
xorb
rclb
addl
cmc
ja
fistpl
fdivrs
in
pop
sub
push
lret
dec
dec
pop
inc
or
inc
inc
jnp
enter
add
push
test
pusha
imul
cmpsl
pop
sbb
push
and
or
enter
or
cmp
int3
test
iret
imul
leave
adc
and
aaa
test
push
dec
inc
daa
push
adc
icebp
and
pop
add
js
call
add
jmp
outsl
push
pop
sub
xchg
std
push
or
jb
testl
shrl
add
push
sbb
movsb
and
add
cmpsb
test
adc
inc
dec
mov
repz
mov
dec
dec
or
test
sub
hlt
mov
and
pop
mov
add
inc
test
push
inc
add
sbb
and
addb
dec
fistpll
pop
pop
push
inc
insb
inc
push
push
insb
inc
ja
or
inc
clc
data16
xor
mov
push
js
cwtl
cld
or
push
sub
dec
fldt
or
inc
adc
in
sarl
sbb
fadds
aam
mov
ss
push
call
cmp
xor
inc
mov
call
push
jo
mov
loopne
ds
or
into
or
push
inc
cmp
outsb
and
xor
xchg
sub
mov
mov
dec
icebp
cmp
jnp
and
pop
adc
imul
out
inc
ret
loope
sub
nop
pop
pop
sbb
adc
mov
aaa
test
inc
outsb
and
add
xor
or
iret
or
dec
in
and
or
adc
jo
mov
dec
xchg
push
outsb
dec
adc
mov
dec
dec
jne
cmp
adc
jns
jns
add
sbb
je
test
scas
pop
and
inc
sbb
enter
rcrl
les
cmp
iret
jo
dec
xchg
sub
dec
loopne
push
or
mov
inc
mov
fldl
aam
std
fstl
popa
jno
testb
xor
add
lea
mov
inc
pop
movsl
les
inc
ds
dec
sbb
je
lahf
cs
cmpsl
pop
dec
mov
sbb
arpl
adc
mov
test
xor
enter
shlb
sbb
and
sbb
add
or
mov
cmp
push
cs
cs
test
popa
jecxz
jmp
inc
mov
inc
loopne
push
pop
jmp
ret
fxch
pusha
push
insb
in
ret
pop
and
movsb
push
cmp
pop
cs
pop
lcall
mov
enter
and
std
mov
stc
mov
test
inc
iret
sbb
cmc
test
lret
adcl
shl
fstpl
enter
pop
pop
xchg
add
insb
loopne
sbb
jne
push
push
jns
xchg
adc
outsb
mov
in
or
mov
data16
sub
loope
sbb
inc
pop
sysexit
xchg
sub
outsl
nop
and
aad
rorb
enter
aad
mov
xor
mov
jb
adc
push
mov
neg
inc
pop
xor
outsl
arpl
dec
adc
inc
sahf
mov
or
mov
inc
xchg
test
loop
and
add
mov
inc
enter
push
jns
ljmp
inc
sarb
adc
or
add
push
sub
inc
push
inc
cmp
push
dec
push
cmp
push
jo
out
or
pop
jo
aas
inc
pop
repnz
lock
cltd
inc
jl
fstl
xchg
imul
cld
cmp
inc
add
add
inc
jmp
sahf
xchg
mov
xor
sub
or
push
fsub
cmpsb
aam
cli
imul
call
icebp
in
fs
add
rclb
popa
cmp
faddl
lcall
sub
imul
inc
cmp
push
xor
jle
mov
or
jle
dec
push
sub
adc
fldl
inc
sub
inc
xor
push
inc
inc
or
orb
int
cmp
flds
adcb
or
mov
sub
dec
mov
mov
and
jl
push
lcall
sahf
sbb
daa
and
andb
push
xlat
pop
pop
insl
or
dec
adc
out
inc
xchg
inc
mov
dec
inc
pusha
mov
dec
ret
or
and
xchg
mov
andl
jbe
xchg
add
mov
adc
movsb
je
push
add
js
xchg
push
xchg
mov
sbb
jge
mov
xor
jg
cmp
mov
lcall
jb
adcl
loopne
adc
adc
stc
fstl
mov
jle
cmp
jge
mov
faddl
fstpl
gs
lea
mov
push
add
imulb
lock
sub
jle
xchg
or
jmp
and
cmp
xchg
or
sarb
adc
add
mov
sar
cmpl
sbb
sbb
push
add
sbb
loope
scas
call
push
pop
mov
add
adc
ss
jge
push
or
push
add
or
cmpb
ret
movb
sub
std
mov
fisttps
add
sbb
dec
clc
inc
lods
fwait
push
add
nop
mov
cmpsb
in
pop
xlat
aaa
sbb
test
jns
inc
jnp
and
sbb
dec
sahf
outsl
cmpb
fildl
jne
movb
pop
popa
jmp
cmp
xchg
rclb
aas
dec
cmpb
add
loopne
int
les
cmpb
aam
es
fists
add
jae
xlat
and
cmp
out
and
popf
pop
out
mov
sahf
jp
je
mov
out
add
or
mov
sbb
mov
mov
push
dec
sarl
xlat
xor
mov
jo
inc
adc
nop
jns
and
or
out
js
fwait
js
cmpsl
xchg
and
dec
js
jnp,pn
daa
pop
jb
jge
and
or
add
stos
dec
pop
cmp
in
fidivl
lods
xchg
aaa
sbb
xor
push
dec
in
mov
jb
out
xor
xchg
cmpl
mov
xchg
fisttpll
clc
cs
inc
cmp
cmp
dec
icebp
cmp
pushf
shrl
inc
sub
add
mov
pop
fiadds
dec
jl
adc
pusha
shrb
jl
mov
icebp
fidivs
not
and
jp
and
sub
inc
aam
mov
repz
mov
dec
mov
aaa
jmp
hlt
testb
sbb
ds
jg
nop
xchg
mov
out
add
sub
jae
push
pop
mov
jnp
pop
xor
pop
xor
aad
aam
bound
je
adcl
imul
adcb
ret
add
dec
cmpsb
cmp
in
psraw
in
aaa
imul
fcomi
sbb
xlat
mov
flds
mov
sahf
jnp
lcall
lods
xor
pop
loope
cmpsb
cltd
in
fadds
cmpsl
sbb
shrb
xor
pop
aam
out
adc
mov
scas
ret
shrl
aad
aad
or
aad
addb
aam
add
cmpsl
push
and
add
lcall
std
and
mov
or
add
sbbl
cmp
cmpb
push
jne
mov
stos
dec
mov
adc
mov
into
xor
test
jge
sub
in
push
adc
test
mov
ret
out
mov
cltd
add
outsb
xchg
out
xchg
adc
movsb
aas
push
sbb
lahf
insl
inc
fimuls
adc
push
push
adc
and
pop
sub
repnz
rolb
repz
push
inc
ljmp
pop
clc
and
dec
sbb
dec
dec
jl
icebp
lods
pop
ja
testb
mov
pop
popa
sub
fimull
int3
add
imul
mov
lret
push
pop
mov
jae
repnz
pop
sub
shrl
xchg
hlt
imul
push
xlat
mov
ss
enter
cmp
jmp
push
fsubr
imul
mov
xor
add
mov
rorb
adc
or
or
call
pop
cld
add
lock
dec
mov
shlb
fdivs
pop
add
mulb
push
lods
or
loopne
add
xor
mov
mov
outsb
and
jne
xor
jne
jmp
into
fcomps
call
pop
adc
aas
rcrl
pop
fmul
jecxz
dec
std
pop
pushf
push
popa
test
jae
inc
orb
cmp
les
push
inc
bound
and
dec
sbbb
ljmp
cmp
or
or
leave
lods
mov
xor
mov
mov
sti
and
and
xchg
sub
stos
ss
xchg
aas
sbbl
and
hlt
pop
push
test
in
ss
or
fs
mov
xor
das
rorb
not
and
push
push
mov
cmpsb
subl
xchg
add
mov
stos
mov
pop
movsb
ss
enter
dec
cmp
iret
inc
and
jle
cmpsl
cmp
add
or
mov
adc
adc
xorl
aam
or
mov
pop
push
push
and
xor
lods
pop
adc
cmpl
jbe
incl
data16
pop
aaa
cld
xchg
add
pusha
jnp
sub
fildll
adc
adc
inc
test
mov
add
repz
pop
in
test
pop
mov
jp
dec
clc
adc
mov
jno
adc
add
sbb
adc
push
add
adc
adc
test
testl
adc
sbb
and
push
out
clc
sub
cmp
push
push
sbb
pop
test
push
adc
lock
enter
xlat
sbb
dec
and
or
xchg
sub
sub
push
mov
mov
jle
clc
adc
inc
clc
es
pop
in
in
and
sbb
or
push
sbb
sub
pop
loope
and
lods
pop
sbb
sbb
sbb
iret
je
and
jo
xchg
sbb
rcl
sub
xor
push
jbe
adc
push
and
mov
mov
sub
push
cmp
or
push
push
pusha
mov
pop
cmp
add
rcl
cli
dec
cwtl
stos
inc
pop
rclb
push
mov
lea
cmp
shll
test
or
adc
fcmove
inc
add
lock
add
cwtl
push
mov
shlb
cmpsl
xorb
mov
jns
push
push
or
outsl
jae
mov
mov
dec
add
mov
and
bound
aaa
adc
xchg
adc
shrl
cmp
nop
mov
inc
movsl
xor
ret
mov
scas
mov
add
xchg
mov
sbb
cltd
neg
xchg
mov
xor
imul
movsb
lods
insb
push
pop
pop
addb
pop
adc
movsl
jns
adc
mov
in
adc
or
mov
lea
lea
xchg
cmp
pop
or
jne
pop
nop
into
or
inc
popf
sbb
mov
andb
sub
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
mov
pusha
jmp
arpl
dec
imul
in
xor
cwtl
sbb
in
push
shrb
xchg
sub
mulb
xchg
pop
add
sbb
jecxz
add
sub
frstor
out
mov
push
lods
popa
mov
sbb
ret
add
or
mov
add
hlt
or
fildl
sbb
ret
pop
in
and
decl
sub
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
sbb
push
pop
leave
leave
leave
leave
add
add
leave
leave
leave
leave
add
push
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
pmulhuw
fs
icebp
repnz
in
hlt
cmc
div
mov
mov
clc
das
outsl
inc
iret
adc
inc
out
jle
pusha
dec
cmp
repz
inc
push
cmp
repz
repz
sub
and
repz
xor
adc
or
iret
repz
add
cld
cmp
xor
out
hlt
add
clc
push
in
cmp
repz
aam
iret
repz
int3
fadd
sarb
mov
lods
mov
repz
test
mov
mov
cmp
repz
subb
sahf
add
jo
cmp
cmp
jns
out
cmp
cmp
sahf
out
sahf
cmp
cmp
cmp
jns
out
cmp
cmp
cmp
jns
out
cmp
cmp
popf
out
sahf
cmp
cmp
cmp
cltd
cmp
sub
inc
movsb
dec
rcrb
fs
mov
mov
test
popf
mov
and
jo
inc
jb
and
xchg
subl
out
mov
mov
inc
jl
xchg
pop
mov
ja
pop
pop
sbb
inc
aam
test
push
or
bound
mov
add
xorl
es
jle
and
add
pop
pop
daa
push
sbb
popl
pop
mov
jo
arpl
jo
fcoml
mov
fs
dec
xor
mov
inc
adc
push
or
stos
std
jb
inc
fadd
jb
cmp
add
sub
lahf
or
add
pop
dec
add
adc
push
divl
or
inc
push
xchg
ss
repnz
or
fidivs
sbb
push
inc
inc
adc
jl
jns
adcl
test
push
iret
enter
dec
jo
inc
insb
mov
push
hlt
stos
dec
repnz
loopne
nop
add
call
adc
sbb
mov
push
sub
pop
cmp
sbb
dec
rolb
or
lret
shr
imul
rcrb
cmp
dec
xor
aaa
push
xor
ds
shrl
push
gs
push
stc
imul
pop
push
sub
daa
jb
lahf
xchg
mov
push
inc
xchg
add
test
iret
pop
or
adc
xor
sbb
cmpb
mov
flds
push
add
mov
xor
in
add
adc
add
jmp
add
add
ljmp
hlt
mov
movb
lods
das
add
jg
push
adc
roll
mov
movsb
icebp
fisttpll
mov
push
push
cltd
aaa
or
inc
mov
or
fs
popa
inc
lcall
fnstcw
scas
loope
roll
xchg
cwtl
daa
xorl
mov
fsubr
push
adc
ret
xor
aaa
mov
mov
ret
loopne
in
pop
hlt
mov
jbe
jnp
mov
movsb
xor
xor
or
movl
or
sub
outsb
cmp
popa
rorl
cli
addl
inc
jmp
mov
out
cld
pop
push
pop
add
dec
mov
into
xor
add
mov
je
pushl
test
dec
inc
mov
cmp
push
leave
gs
cmp
pop
inc
stos
cli
test
add
pop
push
nop
push
jb
cmpsl
pop
adc
jns
cmpb
ja
add
mov
dec
inc
push
rorb
lods
pop
push
jl
cmp
in
xor
inc
add
or
xchg
pop
xchg
adc
aam
inc
add
xor
jbe
inc
dec
sub
or
je
push
faddl
scas
lods
pop
mov
pop
fdivrs
dec
fsubs
push
faddl
lds
stos
inc
dec
add
fistpl
in
adc
add
fs
mov
fnsave
sbb
hlt
adc
imul
push
and
push
sub
fcoml
push
mov
and
mov
das
jmp
arpl
add
jo
adc
cmp
xor
add
cmpsl
ljmp
mov
xor
inc
push
sbb
mov
fsts
sub
movsb
or
pop
mov
xor
jp
loope
lds
inc
push
pop
add
shrd
xor
pushf
sbb
movb
cmp
and
pop
leave
mov
sbb
sub
in
adc
or
push
enter
sbb
pop
or
and
ja
dec
imul
sbb
dec
insl
adc
jg
pop
xchg
stos
mov
cmp
inc
add
jg
sbb
int3
scas
mov
rcrb
adc
aam
xchg
inc
mov
push
roll
cmp
scas
icebp
fsubl
pop
enter
sbb
lahf
xchg
mov
pop
ds
mov
lock
or
clc
push
push
push
adc
scas
dec
lods
and
add
pop
and
je
jg
movsb
rcrl
in
adc
int3
sbb
mov
mov
pop
or
inc
stos
cmpsb
iret
push
daa
rol
shrl
xor
adc
sub
loopne
or
js
inc
dec
in
push
push
mov
cmp
mov
fs
push
inc
bound
mov
sbb
loopne
sbb
fcomps
cmp
int3
pop
ficoms
xchg
jno
or
out
je
inc
inc
daa
sub
insl
fnstenv
xchg
dec
and
xor
xor
dec
imul
jo
push
out
lret
out
pop
aas
add
outsb
pop
arpl
insb
push
arpl
imul
imul
inc
outsl
pop
js
bound
out
mov
jo
jb
jb
popa
or
cmp
dec
xlat
out
mov
push
es
cmp
sbb
addr16
imul
mov
mov
mov
mov
fisubs
arpl
insb
daa
push
jnp
out
push
jg
sub
insb
das
insl
sti
ficomps
loop
sbb
and
cmp
pop
daa
out
push
loop
je
jo
mov
jge
jb
arpl
jns
xchg
jbe
outsl
dec
pushw
das
add
imul
imull
push
hlt
jmp
ret
push
fs
and
call
add
movsb
mov
or
cmp
out
push
add
pop
sbb
push
ret
adc
sbb
jle
je
clc
and
xchg
sub
out
jp
or
aam
mov
inc
mov
rcrl
ret
push
sub
push
fisubrl
dec
push
add
push
or
insb
insb
push
push
jg
mov
out
insl
adc
mov
mov
inc
push
jne
pop
sbb
lods
adc
call
push
lahf
icebp
xchg
inc
mov
call
jne
inc
push
mov
sbb
inc
adc
push
push
nop
xchg
fs
scas
mov
adc
adcl
add
push
push
sub
lcall
jns
dec
xchg
lahf
xchg
inc
outsl
gs
test
adc
cwtl
xor
lods
mov
or
cmp
in
imul
roll
xor
sahf
insl
jae
cmp
clc
inc
push
enter
movb
pop
ret
mov
xor
jge
add
mov
jb
or
jb
jmp
sbb
or
and
mov
adc
movsl
repnz
shll
pop
repnz
sub
add
and
sub
sbb
pop
out
or
mov
inc
movsl
add
inc
nop
push
mov
inc
call
adc
sbb
sbb
pusha
int
or
mov
cmp
add
xor
cmpsb
imul
add
push
pop
pop
or
or
or
or
or
or
out
adc
adc
sahf
out
sahf
adc
push
pop
sbb
lcall
sbb
push
pop
and
and
and
nop
cmp
shll
push
inc
pop
imul
pushf
lods
mov
iret
loopne
add
jns
xor
mov
out
fwait
lods
mov
int
lock
adc
cs
repz
cmp
pop
data16
mov
pusha
cmp
and
add
in
lret
add
jb
adc
adc
cs
sbb
sbb
sbb
xchg
lret
push
or
and
and
cs
sub
dec
sub
xchg
lret
adc
adc
movsb
jb
in
inc
push
inc
test
dec
sbb
push
sbb
push
lret
dec
sbb
scas
shr
xchg
pop
sbb
push
movsl
repnz
sub
pop
bound
dec
pop
and
mov
adcl
and
dec
stos
inc
sub
adc
or
add
clc
or
adc
les
sbb
bound
or
imul
inc
in
insb
or
jmp
inc
es
or
push
lea
or
sti
insl
dec
in
js
lock
std
fwait
int
pop
push
jns
push
das
sub
push
add
call
jl
mov
enter
push
mov
int3
mov
push
ja
dec
jnp
pop
mov
loopne
pop
movsb
repnz
loopne
add
dec
pop
mov
xchg
lock
dec
int3
inc
add
fsubs
out
sarb
and
adc
fsubr
push
sub
xchg
bound
and
pop
out
jnp
hlt
or
add
jmp
orb
push
pop
leave
iret
and
adc
hlt
les
xor
mov
out
subl
mov
push
adc
enter
jl
testl
inc
fcomps
pop
cmp
push
inc
inc
pop
into
push
or
xor
mov
sahf
out
xchg
mov
mov
cltd
bound
addr16
sub
inc
aad
je
push
xor
outsb
pushf
sbb
adc
out
dec
inc
leave
sbb
js
or
jae
lahf
adc
and
lcall
sub
jns
sub
or
xchg
push
add
adc
sbb
push
adc
push
jb
adc
test
and
inc
lods
or
pop
scas
xor
add
sbb
push
sbb
adc
or
or
sbb
add
sbb
push
pop
and
xor
mov
inc
leave
push
and
adc
es
daa
adc
push
leave
add
xchg
dec
sub
and
leave
sub
add
xor
cs
mov
inc
push
inc
xor
or
inc
mov
inc
clc
add
xorl
add
and
sub
xor
pop
or
rolb
xchg
sbb
sbb
dec
add
xor
dec
inc
push
insb
push
mov
repnz
push
fsubl
add
arpl
pop
cwtl
or
in
pusha
decl
push
mov
adc
adc
adc
inc
xchg
adc
les
shl
clc
push
jo
dec
push
sti
jo
dec
popa
bound
pop
sub
inc
mov
nop
lock
pop
dec
lods
addr16
xor
test
adc
loope
xchg
push
subl
scas
pop
sbb
inc
imul
adc
fbstp
bound
add
inc
mov
or
nop
add
dec
adc
xchg
add
and
add
test
or
movl
arpl
inc
in
fisttps
add
jb
pop
pop
lods
sbb
adc
sbb
pop
movsl
and
and
mov
inc
add
push
mov
dec
push
outsb
loopne
popa
orl
inc
outsl
test
add
pop
xor
and
jb
xor
leave
daa
sub
rclb
sub
add
add
xchg
inc
dec
enter
sbb
bound
or
popf
js
js
ds
das
dec
gs
loop
sbbb
xor
jbe
cmpb
or
lret
movsb
adc
xchg
xor
or
dec
jne
cmpl
push
push
or
rcl
push
ljmpw
mov
push
ljmp
inc
push
bnd
or
adcl
push
sbb
clc
add
mov
imul
pop
sub
les
jo
sti
fidivs
fiadds
pop
jbe
push
dec
rolb
adc
mov
mov
add
ds
repz
fcoml
jb
loope
dec
or
gs
cmp
out
pop
and
add
mov
mov
or
ss
loop
cmp
sub
in
ja
cmp
fnstcw
lds
sbb
clc
cmp
inc
add
jo
adc
adc
dec
push
loop
inc
sahf
lar
jle
add
lcall
inc
cmp
mov
leave
out
arpl
push
fstl
and
clc
xchg
gs
pop
js
lods
dec
or
cmpsb
xchg
adc
adcb
adc
adc
or
gs
add
or
or
sbbl
cmpsl
inc
push
sbb
js
push
jb
sbb
and
andb
mov
mov
test
aaa
pop
dec
inc
pop
dec
insl
gs
sub
and
adc
decl
xor
jns
dec
popa
js
outsb
addr16
xorb
and
inc
dec
mov
push
xor
outsl
and
loopne
loopne
sub
or
call
jae
mov
imul
or
es
add
aam
les
rcr
std
xchg
sbb
pop
sub
mov
dec
pop
and
add
popa
sub
cmp
out
pop
push
das
or
mov
cmp
inc
xchg
sub
xchg
pop
adc
inc
leave
push
aaa
cmp
sub
repnz
int3
fcomp
cmp
orl
dec
inc
outsl
dec
cmp
inc
push
mov
xchg
call
in
cmp
jo
enter
cmp
xchg
pop
leave
add
sbb
xchg
stos
xchg
inc
mov
xor
decb
xchg
dec
xchg
cmp
xor
add
push
aam
xchg
xor
push
dec
aam
lock
les
adc
push
fiadds
sub
or
inc
xchg
pop
leave
add
jne
jb
mov
or
dec
jae
adc
mov
jo
push
int3
add
xchg
and
fsubl
lret
fisubrl
add
or
orl
jne
cmpsl
pop
and
adc
or
pusha
inc
cmp
jnp
pop
inc
pop
push
xor
inc
add
xor
pop
inc
sbb
jp
inc
xchg
cmp
nop
aas
leave
or
add
ljmp
jne
mov
sub
scas
mov
add
stos
and
sbb
cmp
sbb
or
roll
xchg
push
pop
js
js,pt
and
add
xor
in
sbb
pop
sub
nop
test
mov
jne
or
jo
jae
sbbb
sub
daa
ss
mov
call
enter
bound
sub
out
pushf
dec
fiaddl
pusha
jne
mov
dec
xor
and
xor
xchg
pop
orb
push
leave
push
jb
ss
xor
and
cmp
xchg
dec
cmp
add
add
ds
add
push
leave
inc
inc
inc
mov
dec
cmpsl
pop
or
icebp
and
ds
sahf
inc
aam
inc
or
inc
push
loop
pop
mov
inc
hlt
lret
mov
push
jne
push
test
mov
inc
pushf
push
and
cmp
aam
pusha
xor
sahf
add
ja
sub
jo
mov
jnp
cmp
inc
into
push
test
test
inc
ret
scas
adc
mov
add
outsb
push
jnp
dec
add
push
push
push
push
je
inc
rorb
and
inc
push
faddl
xchg
jbe
cmp
add
inc
aas
xor
sbb
aas
add
cmpsb
cmp
add
mov
cmp
fcos
mov
xor
push
or
jbe
int3
sbb
push
sub
pop
bound
add
push
out
int
dec
or
push
cli
push
sbb
push
push
or
jns
push
clc
add
hlt
js
add
or
sbb
in
pop
test
in
push
jp
fcom
jns
jnp
sahf
rcl
int3
mov
popa
sbb
sbb
mov
add
sub
cmp
sbb
addl
push
dec
push
xor
add
push
jg
lods
or
push
aad
mov
or
inc
inc
out
ljmp
cltd
pop
pop
les
imul
adc
pop
and
leave
push
adc
push
push
push
adc
adc
adc
inc
cmp
cmp
mov
push
les
sbb
jb
sbb
cmp
sbb
or
js
and
and
sbb
sub
cmpsb
xchg
es
sub
sub
sbb
sub
sbb
sbb
fs
xor
pop
cltd
fadds
pop
inc
and
imul
jg
lret
outsb
inc
insb
outsb
inc
nop
jno
add
outsl
inc
aas
and
and
inc
xor
add
jo
xchg
outsl
inc
or
inc
rclb
sbb
sub
dec
push
pushf
mov
imul
add
je
nop
js
ss
fisttps
mov
cwtl
enter
in
mov
add
fsubr
dec
mov
or
movsb
syscall
jnp
lret
addr16
andl
ss
cmp
outsb
adc
popf
jl
std
out
inc
mov
rorb
movl
xchg
push
add
xchg
mov
mov
xor
test
push
and
sbb
and
test
pop
mov
or
insb
into
je
sub
movsl
rcl
notl
lods
mov
push
or
call
dec
into
dec
jnp
cmp
inc
fistl
adc
mov
cltd
les
leave
pop
ret
push
add
pop
xlat
pop
loopne
fidivrl
inc
push
push
push
fcmovnbe
shll
mov
dec
xchg
sub
sbb
add
sbb
push
mov
mov
push
repz
aam
fidivrl
cmp
loope
int
das
sar
movsb
popa
mov
jle
pushf
sub
xchg
mov
rolb
in
gs
loop
mov
mov
jnp
inc
dec
push
rolb
dec
mov
add
lahf
inc
add
mov
push
mov
cmp
ja
push
in
xlat
jle
mov
mov
inc
or
xor
stos
jge
add
jmp
inc
xchg
das
mov
test
push
jmp
iret
sub
imul
jecxz
push
xchg
sub
sbb
clc
sbb
leave
adcb
outsb
test
add
ja
fs
push
nop
push
leave
orb
popf
je
xor
pop
dec
rclb
enter
mov
or
pop
add
aad
outsl
add
or
inc
sbb
push
inc
push
add
test
inc
nop
mov
mov
mull
movl
or
sbb
add
cmpsl
mov
shlb
xchg
pop
jns
daa
add
int
or
mov
je
pop
mov
xchg
inc
orb
iret
adc
mov
jo
fwait
mov
or
xchg
mov
xchg
add
xor
mov
shll
pop
icebp
jecxz
rolb
pusha
push
ficompl
nop
test
andb
xchg
lods
pop
xchg
std
es
and
pushf
test
mov
popf
jo
jne
or
insl
cmc
stos
add
ret
andb
test
jae
push
inc
pusha
sub
and
test
bound
cld
data16
mov
dec
inc
filds
adc
and
or
int
xor
jo
dec
and
mov
or
aas
test
push
cld
sub
mov
xchg
add
jo,pn
rcll
aam
mov
test
cs
xor
lahf
cmpsb
sar
dec
iret
inc
daa
insb
or
mov
pop
xchg
mov
insb
outsb
pop
fcompl
xor
and
dec
cmpsl
addr16
mov
or
movsb
lea
mov
add
mov
sbb
pop
push
insb
sub
cmp
mov
cs
xchg
xchg
jge
es
add
pop
cmp
add
and
pop
in
test
je
push
sbb
mov
add
inc
mov
enter
inc
bound
or
cmp
jns
mov
or
cmp
inc
mov
nop
jno
mov
cmp
sbb
mov
js
sub
pop
cli
push
ret
add
popf
shr
les
add
or
repnz
push
or
dec
push
add
in
add
insb
xor
and
insb
cmp
stos
pop
mov
adc
testb
mov
add
mov
push
es
pop
dec
enter
jo
push
add
and
adc
push
dec
xlat
ss
mov
stc
mov
fsubrp
movups
outsl
cmp
mov
dec
iret
and
xchg
daa
scas
testl
lahf
jo
cmp
icebp
jb
jo
push
das
jge
jnp
shrl
push
mov
dec
pop
sbb
nop
dec
mov
cmpl
push
lret
dec
jnp
add
inc
mov
mov
adcb
cmp
fstl
and
mov
push
lock
je
and
dec
test
push
cs
cmp
inc
in
jl
rclb
pop
popl
repnz
test
lods
sub
or
sbb
test
mov
add
sub
or
push
inc
inc
adc
mov
movsl
push
enter
add
xchg
adcb
pop
pop
and
jo
andb
fmull
out
ss
fimuls
lods
pop
fdivr
cmp
xor
cmp
xor
enter
push
adc
mov
daa
sub
cmp
or
sbb
jmp
add
xchg
and
dec
div
mov
sbb
hlt
and
popa
and
mov
addr16
adc
or
push
push
shr
and
dec
ja
addr16
add
or
or
test
leave
test
and
leave
and
addr16
sub
daa
jg
sahf
push
out
sub
fs
sbb
into
push
movsb
pusha
pop
pusha
xchg
sub
incb
inc
shl
aaa
push
xor
inc
in
lods
mov
adc
sub
imul
mov
push
gs
leave
sub
sarl
pop
test
mov
jle
and
mov
inc
lret
sub
shlb
mov
adcb
dec
rolb
shrb
hlt
dec
addr16
std
jnp
push
lock
int3
inc
inc
cmpsl
push
mov
ja
xchg
xchg
aad
xor
sbb
push
and
jge
jg
inc
jecxz
add
mov
and
and
shll
sbb
push
cmpsb
lret
jmp
cli
in
rorl
sbb
dec
inc
stos
lods
pop
into
movsb
jb
sbb
dec
cld
out
dec
push
mov
es
sub
aas
in
adc
lods
in
xor
dec
xchg
add
mov
cmpsb
mov
add
or
inc
out
dec
or
or
out
dec
ja
adc
push
xchg
xchg
xchg
fildl
dec
adc
sahf
xchg
xchg
pop
adc
arpl
mov
inc
inc
dec
push
pop
into
je
aam
enter
jl
mov
testb
je
mov
xor
xlat
jns
pop
aam
pop
adc
inc
mov
imul
mov
mov
add
and
pop
adc
push
jns
aaa
daa
pop
imul
orb
add
add
inc
adc
nop
dec
and
mov
das
xchg
push
lods
stc
lret
push
add
xchg
xor
pop
aad
add
rorb
adc
jl
push
je
cmpl
or
icebp
and
sbb
xor
stos
or
in
push
daa
sbb
lcall
dec
icebp
flds
add
js
cli
adc
inc
push
adc
cmp
push
daa
jmp
and
je
pop
jo
push
lock
mov
test
addr16
mov
mov
push
sbb
nop
inc
xor
imul
sbb
push
test
pop
mov
faddp
add
sti
add
or
cmp
rol
cmp
stos
pusha
sub
mov
lods
sbb
sbb
sbb
loope
out
xchg
call
fcomps
adc
mov
rclb
mov
ljmp
push
push
or
inc
test
pop
xchg
add
imul
in
push
or
adc
sub
add
pop
shrl
pop
aaa
cmpw
xchg
add
or
icebp
or
mov
push
dec
repz
sbb
sub
pop
js
cmpsl
pop
pushf
adc
mov
cmp
sbb
icebp
sbb
vfrczpd
inc
mov
sti
xchg
mov
pop
andl
push
je
mov
xchg
ss
push
dec
push
mov
ret
mov
dec
push
adc
fcmovnb
push
mov
imul
or
xlat
enter
pop
inc
pop
adc
push
add
out
xchg
or
addb
in
xchg
scas
dec
aaa
roll
into
mov
cmp
movsb
pop
loopne
and
outsl
and
or
cmp
jo
dec
sbbl
push
jl
sbb
inc
sbb
inc
faddl
cmp
in
mov
dec
pop
dec
pop
pop
lahf
nop
sbb
add
mull
push
pop
andl
inc
xor
xchg
or
inc
xchg
loope
outsb
add
lcall
pop
insb
and
sbb
enter
inc
mov
push
loopne
pop
scas
mov
sbb
push
scas
push
roll
mov
add
jp
sbb
data16
sbb
push
enter
fbstp
imull
addb
inc
cmp
jb
cs
add
lock
xchg
jne
in
push
mov
test
sub
stos
fwait
or
mov
push
inc
hlt
inc
mov
and
test
inc
sbb
jns
or
popa
and
or
add
add
inc
cmp
stc
ret
pop
pop
xorb
call
andl
andl
sub
shlb
pop
inc
ret
lahf
int3
and
adc
mov
or
ja
add
repz
inc
inc
pop
es
add
sbbl
rcr
test
test
jne
test
mov
sbb
outsl
adc
roll
inc
and
test
pop
push
sub
and
pop
testb
les
aam
rcl
sahf
notl
add
add
subb
loop
adc
xlat
and
lods
lods
pop
mov
and
mov
push
mov
adc
cmp
mov
movsl
dec
ror
stos
sbb
inc
aaa
mov
test
mov
shlb
or
push
iret
mov
push
pusha
pop
xor
orl
sub
push
mov
leave
loop
mov
inc
popa
gs
data16
and
and
and
inc
das
and
and
nop
and
daa
mov
inc
cmpb
popf
orl
inc
addr16
andl
and
mov
sahf
push
movl
in
pop
and
jne
pop
add
push
add
jg
and
or
mov
inc
sub
or
nop
test
jmp
sub
add
inc
add
push
mov
imul
fisubs
out
and
or
stos
rcl
stc
int3
xchg
lea
adc
andl
xchg
pinsrw
dec
movups
movb
iret
inc
ss
pop
push
cmp
ficoms
pop
jle
adc
push
imul
sbb
pop
pop
bound
add
push
cmp
sub
and
jb
inc
mov
pop
or
flds
cwtl
daa
add
sub
and
or
test
xor
pop
adc
push
xor
or
cmp
mov
scas
adc
scas
or
or
jecxz
cmc
inc
icebp
or
inc
cmp
push
jge
xlat
sbb
outsl
ja
add
orl
dec
shl
or
in
incb
enter
jecxz
pop
mov
mov
negl
mov
pop
mov
vpsrad
outsl
push
movsb
rorb
lahf
add
or
loop
sbb
cs
sub
popf
and
cmp
je
mov
xlat
inc
dec
push
or
xorb
ds
sbb
mov
js
push
gs
incb
pop
lsl
mov
dec
add
adc
iret
inc
push
push
push
dec
dec
xlat
cmc
aaa
sub
xor
outsl
inc
push
addw
xchg
es
rcr
test
xor
or
cltd
jne
pop
sbb
adc
push
es
gs
imul
sbb
sbb
xchg
pushf
mov
mov
scas
and
daa
in
adc
jle
ds
inc
sbb
add
or
ret
ret
jmp
jnp
or
add
pop
shlb
jecxz
aad
dec
cmpsl
add
sub
aas
pop
jb
test
sarb
addr16
clc
sub
lds
mov
jl
mov
push
push
inc
in
xchg
jmp
mov
inc
movsb
fwait
inc
add
cmpsl
inc
adc
nop
xchg
jl
clc
pushf
adc
push
shlb
xchg
sbb
mov
lcall
aas
outsb
jae
push
mov
orb
jae
add
mov
inc
mov
inc
iret
xor
cmp
xchg
cld
cmp
in
and
xchg
into
ss
loopne
jne
cmp
outsb
inc
dec
mov
movq
xchg
and
clc
jo
jno
fcmovne
xchg
xchg
sbb
xor
aaa
mov
ljmp
loopne
pop
movl
repz
test
iret
rep
lods
mov
pop
xor
cmp
gs
dec
add
outsl
stos
lahf
fsubrl
and
aaa
enter
les
jle
and
or
and
mov
inc
jbe
cwtl
mov
mov
push
push
jnp
test
inc
dec
js
jg
dec
inc
add
pusha
mov
or
sub
outsb
cmpsb
clc
or
push
cmpl
adc
dec
and
and
fcmovu
mov
push
cld
mov
sbb
xor
lods
dec
mov
dec
addr16
push
mov
mov
sub
lea
insl
or
cmp
add
pop
xchg
fistl
rclb
inc
test
mov
or
into
add
mov
mov
sbb
xor
dec
adc
xor
pop
and
fiaddl
mov
cmp
push
add
dec
sub
push
adc
daa
mov
push
ret
cmp
frstor
dec
sbb
pop
adc
dec
shr
in
andl
aas
mov
pop
inc
lock
mov
mov
popf
dec
or
lds
adc
xor
xchg
popl
ja
pushf
cmp
pushf
andb
call
mov
lock
mov
and
push
ja
in
in
xlat
sub
aad
shlb
lcall
pop
fs
outsb
jae
das
fistpl
rorb
xchg
xor
add
or
push
xchg
ret
loopne
clc
clc
mov
or
mov
push
aaa
dec
inc
sub
sub
mov
and
sub
push
pop
sbb
cmp
sub
sub
and
dec
gs
dec
xor
sub
adc
fwait
or
ret
movb
int3
and
in
adc
loop
outsl
xchg
or
ja
ret
or
hlt
xchg
aas
mov
mov
test
enter
popa
fwait
addl
rorl
mov
and
lock
lcall
stos
stos
mov
das
dec
cmpsb
add
mov
fisubs
push
lock
enter
sub
xchg
mov
add
cmp
stc
add
orl
dec
xor
dec
jne
jo
inc
call
mov
xchg
inc
push
test
push
mov
or
adc
xor
in
call
flds
repnz
mov
jb
bound
test
add
mov
xchg
ret
incl
inc
ss
lahf
jge
cmp
inc
mov
xor
shlb
mov
and
add
cmp
je
or
je
add
sub
pop
insb
ret
aaa
jnp
mov
mov
loope
push
orb
pop
mov
push
mov
jmp
xor
and
push
jle
inc
lods
movsb
jns
push
scas
xchg
rol
sbb
notl
popf
std
imul
mov
xor
pop
mov
lret
add
mov
xor
sbb
add
lcall
dec
inc
dec
push
add
pop
test
mov
add
dec
cld
test
xor
aaa
aaa
loopne
xchg
mov
or
outsb
push
dec
mov
inc
add
cmc
or
mov
andl
mov
mov
aas
inc
push
sub
pop
adc
sub
cmp
xchg
jne
mov
insl
jbe
fcompl
adc
insb
push
jmp
cmp
pop
fs
repnz
pop
daa
lods
adc
outsl
outsb
lock
pop
inc
test
dec
outsl
cli
les
into
mov
or
add
sbb
push
inc
daa
xor
imul
aam
xchg
push
in
test
adc
adc
fwait
sub
fbld
dec
dec
lock
push
cs
lea
sbb
ret
cmp
lods
add
cmc
or
seto
inc
adc
push
sbb
dec
push
pop
sub
adc
insl
pop
sar
xlat
loopne
mov
push
jb
mov
decb
mov
and
clc
mov
or
mov
outsl
xchg
sbb
cltd
add
mov
jo
and
lods
addb
sbb
sbb
cmp
aaa
and
sahf
filds
mov
mov
push
add
sbb
int3
add
xor
pop
mov
push
mov
clc
push
push
pushf
add
pop
insb
ss
mov
add
add
add
dec
mov
mov
insb
popa
or
adc
or
ds
mov
and
and
mov
xor
mov
add
rorl
enter
or
or
jo
ds
repz
or
xor
loop
je
loope
in
mov
and
rorl
popl
in
cwtl
hlt
mov
and
adc
loopne
sbb
les
iret
fwait
xchg
mov
push
mov
imul
ret
fiadds
cmp
jo
test
loopne
decl
lahf
inc
cwtl
mov
push
and
mov
adc
xor
pop
pusha
sub
leave
xchg
lea
mov
ret
sub
les
add
sub
leave
pop
mov
jns
sbb
insb
push
addb
add
call
cmp
rcr
adc
pop
sub
xor
add
mov
daa
js
test
mov
or
rol
addr16
into
lds
pop
cmp
enter
js
inc
movsb
setbe
jl
push
push
sbb
dec
add
nop
movl
cmpsb
or
aaa
les
inc
nop
es
lret
inc
and
and
call
or
inc
repnz
inc
adc
mov
nop
pop
nop
aaa
loopne
repnz
jle
add
push
xor
insl
bound
fstps
fmuls
jg
push
inc
fildll
scas
add
outsb
test
adc
popa
popf
aaa
mov
mov
fdivs
and
inc
lret
xor
fs
xchg
cmc
add
adc
and
dec
and
rclb
jnp
in
imul
stos
and
add
add
sbb
or
push
punpckhwd
dec
dec
jl
or
sub
mov
add
imul
inc
mov
or
pop
or
imul
les
test
jae
jns
fadds
xchg
add
loope
pop
dec
nop
and
cmovo
imull
and
add
inc
stos
test
leave
cli
push
loope
mov
movl
adcl
rorb
cmp
xchg
pushf
aam
xor
lret
ret
add
xchg
jnp
xchg
or
push
or
and
adc
mov
imul
cmp
imul
and
add
push
shr
addb
mov
pop
or
test
insl
mov
adc
movsb
dec
ret
jmp
inc
mov
dec
mov
jb
testl
and
aaa
and
sahf
mov
cmp
add
inc
iret
or
adc
rclb
or
jnp
sub
ja
add
xchg
fnstenv
push
inc
adc
sub
shlb
cmp
add
jo
orl
jl
jge
clc
nop
adc
cmovs
clc
nop
sti
mov
mov
xchg
cmpsl
add
dec
mov
or
inc
pop
and
push
icebp
popf
mov
aas
and
dec
push
popa
jb
gs
sahf
loope
sbb
inc
ret
mov
imul
or
test
imul
pushf
sub
adc
adc
xor
shll
in
mov
js
add
ja
or
sub
add
mov
mov
jl
sysenter
lods
cmp
sidtl
in
xchg
enter
mov
dec
or
push
adcl
and
xchg
add
enter
nop
icebp
cmc
adc
jmp
pop
ljmp
inc
roll
repnz
cwtl
sbb
xor
jo
or
mov
mov
pop
sub
adc
mov
fists
push
xor
fimull
pop
add
add
js
or
test
addr16
cltd
adc
gs
imul
or
add
xchg
mov
ret
or
push
jmp
dec
sbb
fmull
push
add
sahf
rclb
sbb
repz
lcall
lds
mov
movsb
lcall
cltd
push
popf
pop
lcall
scas
fcoms
or
cmp
movsb
into
int
inc
and
andps
dec
pop
shll
mov
add
out
push
ret
xchg
add
add
pop
sub
test
data16
dec
add
pop
testb
or
or
xor
lock
mov
mov
mov
daa
mov
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
decl
fdivr
ficompl
call
call
call
call
ljmp
call
call
call
dec
push
into
dec
pushl
dec
dec
icebp
dec
scas
sub
iret
jnp
out
bound
test
aam
push
lods
cld
sahf
cmpsl
fnstcw
idivb
mov
hlt
sahf
out
jl
clc
mov
fs
jns
push
jns
cli
movsb
jl
dec
out
test
enter
fnop
xchg
sti
clc
sahf
cmpsl
flds
cld
sub
rolb
sbb
mov
mov
push
xor
xchg
fchs
repnz
js
addr16
out
repz
pusha
call
inc
imul
push
in
add
enter
repz
adc
and
repz
mov
data16
imulb
cmp
hlt
sahf
insb
and
push
int3
aam
ljmp
shl
push
dec
int3
ja
idivb
pop
in
out
sbb
mov
add
leave
popa
xor
push
fwait
jne
clc
xor
or
or
push
or
inc
add
sub
cmp
dec
pop
add
or
add
enter
aas
dec
test
sub
insb
inc
lcall
push
ja
mov
aas
incl
loopne
mov
not
mov
ljmp
shrl
jne
inc
mov
and
jne
cs
or
ficomps
pop
dec
or
nop
or
mov
add
es
ds
and
mov
test
inc
imul
add
adc
imul
jle
push
sbb
dec
insl
or
or
orb
or
push
sahf
mov
ljmp
or
inc
mov
popa
inc
cmove
cmpsl
mov
push
dec
popa
je
xchg
inc
push
push
addr16
xchg
mov
les
adc
adcb
push
sarb
xchg
dec
jp
xchg
rcll
iret
es
jbe
in
fldcw
add
jbe
or
xor
popa
jbe
adc
xchg
mov
dec
xchg
push
mov
cs
xchg
pushf
gs
bound
es
bound
gs
or
jae
jns
mov
sbb
imul
imul
andb
xchg
inc
mov
sub
ss
push
inc
sbb
dec
repz
jns
sbb
jo
fwait
jge
jbe
or
add
jmp
cmpsb
pop
mov
je
enter
inc
mov
inc
add
imul
xchg
pop
cmp
adc
add
ss
int
add
add
sahf
add
pusha
repnz
push
ss
or
push
aad
add
sub
sub
push
add
push
test
test
aas
rol
adc
sbb
sbb
push
add
add
mov
mov
mov
adc
adc
pop
andl
decl
and
mov
mov
mov
add
push
mov
xor
cmp
adc
mov
sti
sbb
repnz
incl
ljmp
inc
inc
inc
inc
loope
inc
add
into
std
mov
inc
test
stc
jne
ljmp
mov
pushl
daa
pop
sub
xor
cmpsl
push
pushf
rclb
xor
repz
je
mov
repz
sub
js
rorb
xor
jl
jns
xor
insb
aaa
mov
sahf
cmpsl
mov
loopne
push
dec
adc
imul
fsubrl
lock
cmpsl
test
push
aam
cld
cmpsl
stc
out
jge
push
jbe
cmpsb
push
or
adc
and
call
repz
movsb
in
es
out
repz
mov
shlb
push
sub
stc
cmp
xor
inc
fs
ds
pushf
call
sbb
inc
in
jnp
jnp
xor
xor
or
dec
mov
sahf
push
inc
push
cwtl
inc
clc
xor
xchg
cmpsl
stc
xor
cs
das
cmp
out
fstl
push
lods
es
push
in
fnstcw
inc
jo
cmp
add
imul
sub
push
jl
push
and
mov
into
and
and
lock
push
mov
mov
cmpsb
cmp
push
dec
push
fs
test
in
push
inc
and
pop
inc
pop
xor
fwait
mov
add
push
mov
adc
sbb
pop
aam
mov
add
test
cmpsl
add
addb
bound
sub
arpl
add
cs
insl
pop
int3
mov
sub
clc
add
ja
adc
mov
xor
dec
js
adc
sub
sbb
cmpsl
mov
mov
pop
jnp
adc
jo
push
mov
push
jnp
jl
add
push
sbb
adc
pop
add
or
test
hlt
pop
pop
mov
rol
out
cmp
push
mov
fisubl
mov
add
sub
and
and
in
pushf
pop
mov
inc
cmp
pop
call
sub
or
nop
add
add
nop
add
and
or
sbb
jae
fmuls
mov
repz
push
cmpsb
ds
dec
mov
repz
rcr
jmp
add
sahf
adc
sub
in
mov
push
je,pn
clc
push
mov
push
xchg
push
add
outsb
out
pushf
ljmp
insl
jne
add
js
jp
fwait
int
cs
jl
add
sbb
in
or
and
xchg
adc
stos
lock
mov
cmp
mov
xchg
pop
add
push
jmp
pushf
les
dec
xor
add
lea
mov
fwait
sbb
inc
sbb
call
sbb
sbb
push
gs
popa
lock
fiadds
je
push
and
sahf
fcmovne
mov
sbb
in
scas
cs
shlb
mov
xorl
add
inc
movl
xor
inc
dec
mull
popa
push
adc
xchg
push
mov
pop
jne
xor
sub
cmp
imul
testb
dec
jne
bound
sub
orb
push
cmp
adc
es
insb
jmp
aad
inc
inc
rcrb
addl
sbb
das
imul
scas
push
or
loopne
dec
mov
cmp
jb
daa
lods
test
pop
lcall
gs
insl
xorb
pop
or
lcall
or
push
inc
repnz
dec
dec
push
push
inc
push
in
loopne
nop
inc
or
add
sbbb
inc
insb
popa
jno
inc
xchg
jg
push
rorb
xchg
daa
dec
push
jo
imul
or
cmovl
push
popa
push
movl
push
pop
inc
and
imul
imul
lock
outsl
daa
enter
cmp
insl
aad
xlat
pop
js
imul
pop
scas
cli
sbb
adc
or
jmp
push
sub
xor
pop
cmpsl
pushf
inc
cmpsb
cltd
jl
dec
lea
fdivs
ljmp
jle
mov
cmp
adc
adc
inc
push
mov
dec
pop
stc
pop
sbb
les
aam
xchg
adc
mov
add
pop
subb
mov
mov
fdivs
jo
mov
or
add
dec
push
lea
fisttpl
add
cmp
push
push
call
or
sbb
das
imul
test
test
mov
fiaddl
mov
sub
push
pop
fiaddl
or
loop
xlat
lock
push
clc
adc
popf
lods
mov
sub
or
sbb
xor
sub
sbb
push
jge
dec
dec
jne
out
lcall
jge
push
lods
add
hlt
aad
es
push
add
adc
or
mov
les
add
mov
mov
lds
dec
shll
adc
dec
shll
sbb
and
shll
sub
inc
ret
scas
xchg
mov
add
push
pop
push
enter
push
movl
daa
ja
sbb
dec
in
dec
dec
xchg
inc
clts
fisubrl
sbb
sahf
add
testl
mov
cmp
mov
sbb
add
sbb
or
je
push
mov
sbbb
ja
scas
add
and
arpl
test
add
pop
loopne
lods
mov
mov
mov
jmp
mov
adc
push
push
adc
mov
jp
or
sub
adc
inc
sbb
js
push
jns
lcall
add
fwait
add
mov
pop
cmp
jg
sub
sbb
leave
push
loopne
hlt
jmp
or
nop
adc
aas
ss
mov
adc
mov
or
push
iret
scas
adc
mov
push
pop
lods
pusha
cmpsb
test
call
pop
test
mov
jecxz
leave
inc
xchg
cmp
cmp
rorb
and
dec
jmp
mov
pop
cmpsl
sub
xlat
pop
pop
fsubr
fsts
test
mov
cmpsb
dec
rol
dec
mov
iret
adc
or
cltd
mov
lea
int
dec
jmp
test
pop
pop
push
les
aas
mov
adc
cmpsl
or
inc
cmpsl
ja
pushf
and
sahf
sub
jae
mov
pmaddwd
rcl
push
pop
loop
dec
xchg
sub
lea
mov
inc
mov
xchg
fdivs
out
inc
movsl
and
out
pop
push
pop
pop
and
mov
lods
mov
popa
in
aam
and
xchg
outsl
push
or
lock
pop
fstl
es
mov
mov
adc
movsb
inc
adc
dec
or
cmp
push
sub
rorb
push
sub
leave
in
bound
jle
or
movsl
push
and
shl
pusha
xchg
test
neg
xchg
inc
inc
push
xor
ret
ja
add
rcl
daa
mov
jg
pop
rcrb
out
xchg
jno
imul
decb
and
and
decl
cmp
fidivl
add
push
popa
sbb
add
ja
sarl
jb
sbb
inc
push
adc
imul
or
movsb
dec
pop
xchg
outsl
pop
mov
les
xchg
test
xlat
int3
ljmp
shl
in
push
roll
and
sti
push
test
sub
test
cmp
out
adc
inc
push
adc
cmp
xor
inc
or
mov
jge
cmp
sbb
mov
je
test
add
movsl
in
sub
cmp
sub
xor
push
mov
sbb
inc
adc
or
push
out
or
push
nop
addr16
or
dec
xor
or
add
mov
sbb
enter
test
add
ljmp
enter
daa
add
pop
or
mov
in
cmpl
xor
mov
fildl
xchg
and
addb
or
cs
in
les
lea
ds
or
hlt
sbbl
or
fcompl
rorb
daa
cmpl
cmp
sub
adc
inc
test
iret
cmp
mov
cmp
mov
shll
das
push
jl
or
sub
sub
sbb
lock
cmpb
rcll
jae
push
jno
decb
js
push
push
sbb
cmp
gs
xor
and
jo
test
cmpsb
mov
daa
repz
pop
sbb
es
pushl
mov
dec
in
mov
iret
cmpb
inc
dec
jne
push
imul
cmp
pop
test
mov
and
call
cmp
divb
popf
or
push
cmp
fbld
pop
and
cmp
ds
dec
mov
subb
pusha
sbb
cmp
sbb
sbb
pop
fisubl
sbb
xor
or
pop
xor
xchg
jbe
imul
push
jo
pusha
adc
push
push
insl
call
lock
xchg
outsb
jae
push
push
pop
inc
cmp
and
adc
dec
loope
ret
jmp
add
sub
or
sub
push
imul
xorb
push
inc
stos
add
or
test
movsb
inc
outsl
fucomp
xchg
movsl
cmp
test
sub
sub
push
xor
add
shrb
sub
lock
or
imul
fdivs
test
mov
jmp
sbb
push
xchg
imul
or
adcl
jo
jl
mov
mov
shrb
and
pop
adc
inc
scas
or
xchg
push
push
pop
fmuls
out
test
jne
push
fs
sbb
data16
or
and
test
dec
cmp
jne
cmp
push
popl
pop
ret
shrb
fnsave
jge
mov
sub
mov
stos
insb
mov
mov
fwait
cmp
push
nop
cmpsl
es
inc
imul
stc
cmp
mov
lea
inc
inc
movb
pop
mov
sbb
ficompl
jmp
sti
cmp
je
jmp
loopne
fistps
jmp
mov
out
movsl
ret
adc
pop
out
add
mov
xor
cmp
mov
das
pop
sbb
out
mov
adc
add
enter
mov
sbb
adc
or
in
loopne
and
mov
mov
cmovae
mov
test
xchg
push
add
cmp
std
push
loop
cmp
mov
aam
cmp
inc
jmp
fcmovnb
ds
push
and
jmp
pop
fmull
mov
push
inc
cmpsb
das
nop
sub
test
xchg
loopne
iret
sbb
push
push
push
cmp
out
pop
nop
lods
sbb
fistpll
and
ficoms
inc
pop
sbb
pop
fdivs
mov
sahf
xor
dec
ficoml
ret
dec
out
dec
test
in
xor
lret
aaa
add
into
jmp
mov
or
stos
xor
cmp
mov
xor
js
or
mov
fistpll
fs
loope
rorl
inc
push
ret
adc
adc
in
sub
mov
mov
ljmp
push
xchg
sub
lea
js
test
jno
sub
lock
xchg
cmp
mov
mov
push
xor
sbb
mov
fwait
jmp
inc
and
and
and
in
fcomp
add
jns
sub
imul
in
imulb
push
push
insl
pop
sub
rclb
add
jmp
pop
xchg
dec
scas
dec
adc
or
pop
sub
inc
jne
or
enter
scas
inc
pop
push
nop
push
dec
insb
push
arpl
push
aas
loopne
and
ss
loopne
xchg
in
insb
cltd
ret
cmpsl
rol
cmp
inc
pop
sbb
fmull
mov
filds
mov
mov
daa
jbe
and
mov
popf
add
xchg
jecxz
in
sub
lea
movsb
mov
jl
xchg
bound
mov
adc
inc
lods
mov
push
and
mov
cmpl
sub
sub
enter
das
dec
push
dec
jmp
inc
mov
test
pop
mov
inc
mov
ljmp
mov
push
dec
sub
add
mov
add
pop
dec
ja
divb
dec
push
sbb
dec
fistps
test
xorb
push
xchg
adc
dec
pusha
jno
aad
mov
stos
pop
ror
adc
into
push
ljmp
mov
mov
add
mov
adc
adc
adc
xchg
sub
mov
clc
mov
aaa
ds
cmpl
incb
or
add
xor
fstps
das
clc
fbld
in
movb
adc
sbb
pusha
mov
hlt
lahf
and
pop
xor
and
ret
pop
movsb
inc
andb
xlat
lret
movsb
clc
lcall
or
or
cli
jmp
and
or
loop
mov
je
or
stc
mov
test
rclb
and
fdivs
fsin
arpl
mov
pusha
jno
outsl
je
test
mov
cmp
sbb
fists
add
ret
cmp
aas
inc
and
or
xor
lcall
sbbl
cmp
pop
pop
mov
add
jo
mov
sub
cmp
sub
push
adc
sbb
cltd
or
xchg
aaa
shlb
push
and
jb
xor
pop
and
mov
cli
hlt
push
and
cmp
rcrb
sbb
jae
mov
in
arpl
mov
call
xor
nop
mov
adc
cmp
je
mov
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
adc
pop
dec
sbb
sbb
pop
sub
xchg
push
enter
lcall
cmp
arpl
je
mov
mov
inc
cmp
jge
mov
je
add
add
and
inc
addl
test
push
mov
xchg
xchg
je
cmpb
or
pop
test
push
or
js
jo
lock
push
pop
inc
rol
mov
insb
pop
sbb
cld
push
lock
cmpsb
xchg
je
aas
jnp
loop
fs
and
dec
iret
jmp
ja
and
mov
mov
fcomps
es
or
push
sar
push
inc
mov
imul
mov
dec
enter
push
aaa
sub
out
popa
add
pop
dec
pop
mov
pop
in
jmp
inc
repz
pop
inc
pop
fs
xchg
sub
jnp
add
cmc
sub
or
lea
lods
jo
mov
mov
adcb
jge
leave
mov
outsl
xorb
lret
or
add
push
fistps
imul
or
roll
push
es
inc
lret
inc
icebp
cmp
ret
dec
adc
cmp
int3
lss
in
mov
ja
outsl
cmc
dec
adc
add
push
sub
andl
dec
or
movntq
out
dec
mov
pusha
hlt
xchg
and
push
adc
cmpsb
cmp
adc
or
xchg
jmp
cld
inc
rorb
nop
adcl
add
add
fcmovnu
jg
jmp
cmp
je
mov
test
jbe
push
adc
inc
lcall
cmp
push
or
inc
fsts
aaa
and
popl
fdivs
cmp
cmp
mov
je
cmp
or
dec
loop
cmpsb
pop
sbb
add
popa
or
sbb
adc
mov
test
in
add
test
ror
shlb
xor
js
and
mov
je
or
push
jl
add
mov
es
inc
das
pop
mov
int3
xchg
aam
cli
inc
mov
and
mov
lret
pusha
ss
pop
aaa
push
fdivs
int
and
in
push
scas
add
sub
lret
stos
pusha
xor
add
xchg
sub
push
adc
sbb
add
sbb
cld
fs
mov
inc
add
mov
mov
mov
mov
add
push
and
nop
addr16
or
or
jo
mov
jne
sahf
dec
sbb
and
adc
push
scas
addr16
out
idivl
or
mov
add
mov
inc
aam
mov
lahf
jo
inc
and
add
popa
cmpl
dec
fistpl
cmp
jp
nop
add
ficoms
int3
out
ss
push
xchg
adc
inc
and
or
or
cmpsb
jno
inc
dec
mov
xorl
fdiv
scas
je
sbb
xchg
jne
cmp
mov
push
add
sbb
stc
inc
jo
xchg
jb
push
xchg
xor
sbb
sbb
aas
add
out
inc
or
mov
mov
xlat
orb
mov
je
mov
ss
jl
imul
pop
push
lcall
mov
aad
je
cmp
ljmp
inc
bound
sbb
jo
iret
sar
xchg
movb
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
jbe
pop
dec
mov
out
xor
adc
ss
push
add
ret
sbb
sbb
or
add
test
sub
add
cmp
cmp
cmpsl
push
gs
inc
mov
rcll
and
test
sub
xor
shrb
je
push
add
and
mov
std
dec
add
pop
ret
jae
ficoml
dec
push
pop
xor
inc
out
add
test
nop
mov
sarb
test
imul
inc
js
fstpt
or
xchg
shr
aaa
add
rcr
and
pop
dec
test
pushl
push
cmpsb
cmc
mov
cmc
lds
push
insb
xchg
push
add
shrb
push
mov
ret
hlt
pop
or
xchg
fcomps
test
adc
sbb
push
orl
and
test
incl
push
cmp
out
lahf
push
mov
inc
or
mov
push
cmp
mov
ret
shl
pop
add
pop
push
mov
xor
or
ds
fdiv
mov
push
xor
push
sbb
std
mov
rorl
fldl
or
mov
inc
daa
dec
dec
push
jo
sub
inc
dec
xchg
aaa
xlat
cmp
std
js
arpl
push
loope
sub
int
xor
in
pop
or
push
and
nop
xor
loope
cmpsl
sub
push
leave
rclb
jle
jne
aas
pop
sahf
xchg
mov
pop
jmp
cmp
clc
jne
add
adc
push
imul
pop
test
and
xchg
xor
nop
jno
shl
jne
cmp
inc
loopne
xchg
mov
xor
je
les
push
out
pop
lods
xor
out
ret
bound
mov
ret
cs
inc
and
pop
shrb
sbb
jb
inc
dec
push
push
dec
test
ss
push
inc
or
test
pusha
inc
or
cmp
and
inc
fs
dec
enter
xchg
or
stc
jb
inc
jbe
das
sbb
cmp
jne
xchg
dec
jne
push
mov
dec
and
push
push
imul
push
cs
mov
xor
cmp
mov
mov
pop
or
lret
inc
add
add
or
iret
dec
and
push
push
xchg
mov
push
add
test
adc
cmp
mov
mov
cmp
adc
cmp
sete
mov
loopne
push
cmp
mov
fisttpl
cs
out
movsb
mov
push
adc
adc
push
pop
fadd
dec
add
or
mov
mov
dec
mov
mov
imul
push
in
jne
mov
shlb
xchg
jg
pop
les
adc
pushf
inc
xor
mov
push
sbb
inc
dec
fists
das
pop
dec
xor
pop
pop
loope
das
rolb
mov
mov
roll
mov
lret
inc
fcmovnu
mov
dec
push
xchg
dec
adc
add
push
inc
or
fwait
cmp
xorb
xlat
adc
pop
std
inc
adc
pop
sub
das
add
push
and
push
jp
sarb
mov
push
fdivrl
mov
add
dec
push
dec
push
adc
mov
shll
push
aam
fisubs
in
cmp
cli
clc
dec
and
ja
cmp
mov
push
bound
xchg
lds
add
mov
cmp
mov
lds
sti
ffree
es
xchg
pop
adc
aam
or
outsl
lretw
enter
pusha
stos
arpl
or
cmpsl
pusha
test
stos
rolb
test
inc
dec
cmp
mov
addl
cmpl
dec
lret
outsb
dec
add
popf
dec
clc
adc
dec
dec
mov
mov
sub
xor
das
ljmp
adc
and
adc
sbb
pop
setbe
mov
lea
inc
push
adc
mov
lahf
jne
sbb
sti
add
jno,pt
subb
mov
add
sbb
adc
pop
push
add
hlt
hlt
pop
jne
inc
ds
mov
fcoms
add
add
addl
mov
test
add
or
lret
jg
fcoms
mov
mov
push
test
inc
xchg
sbbb
fiadds
mov
enter
sub
dec
or
fsub
andb
mov
push
ret
jns
sub
pusha
imul
pop
or
mov
mov
repnz
popa
fadds
flds
mov
andl
daa
fmul
aaa
lret
mov
dec
push
es
pop
or
mov
pop
mov
cmp
je
add
lret
jg
sbb
mov
addb
adc
rolb
jae
call
sub
xor
inc
mov
mov
sbb
loopne
movsb
push
add
xor
add
xor
sbb
push
push
mov
adc
mov
nop
add
xchg
ss
jl
ret
lcall
sahf
or
or
lret
adc
or
or
adc
test
add
adc
int
pop
pop
jecxz
pop
outsb
leave
add
push
jo
pop
nop
shlb
jle
xchg
bound
sbb
push
cmp
xchg
mov
add
loope
jle
or
push
cmp
je
mov
test
popa
push
jae
mov
sub
mov
dec
push
mov
and
testb
je
or
or
je,pn
test
ja
push
sub
push
addr16
or
push
rcll
jle
ljmp
iret
lods
sbb
inc
sub
jb
mov
push
jmp
inc
pop
adc
or
cli
push
push
sbb
inc
dec
or
add
gs
xchg
sbb
cmp
xor
inc
mov
xor
add
mov
or
add
rorb
das
cmp
je
jmp
int
push
xor
dec
in
adc
fldcw
pushf
mov
adc
je
mov
in
dec
rcll
or
pop
push
add
mov
lods
mov
in
mov
cmpsw
es
cmp
lock
mov
jo
add
mov
lea
push
ja
push
xor
mov
imul
jg
adc
addb
lret
and
sub
sbb
pop
cmp
pop
shrb
push
pop
test
test
icebp
sub
xor
aaa
repnz
or
mov
movb
ja
rcrb
add
push
push
ja
es
imull
cmp
orb
push
dec
push
jecxz
cs
push
lret
in
push
or
movsl
sbbb
add
mov
xor
adcb
sbb
call
aam
aas
or
mov
xchg
cmp
shufps
dec
and
and
mov
and
cmp
and
imul
and
pop
pop
xchg
push
pop
xchg
or
pusha
mov
ss
cmp
data16
inc
inc
push
pmaxsw
lahf
dec
cmp
mov
fsubr
cmp
out
aas
iret
enter
ret
lahf
jo
adc
test
rcll
sub
daa
jl
sbb
addr16
insb
mov
inc
fmull
push
pushf
xor
nop
mov
mov
das
mov
mov
aaa
imul
addb
cmp
dec
lock
je
jp
xchg
loop
push
cld
xchg
dec
push
adc
adc
and
adc
mov
or
fcmovbe
add
sahf
notb
mov
stc
mov
adc
jae
shlb
inc
fsubl
or
adc
loope
cmpsb
jo
pop
jle
dec
sbb
sub
cmpb
mulb
push
inc
and
cmp
or
in
inc
fsub
xor
pop
pop
mov
mov
jne
push
sbbl
adc
shl
ja
jle
jg
pop
imul
call
outsb
shl
adc
dec
xor
add
jge
mov
nop
aas
jle
or
pop
mov
lea
push
and
orb
and
hlt
and
jg
adc
xchg
pusha
stos
cmove
mov
push
rolb
aaa
incb
inc
pop
inc
ret
and
loope
add
pop
or
pop
clc
cmp
add
cmpb
jne
sarl
jne
sbb
mov
xchg
lret
pusha
icebp
cmovo
inc
jp
mov
pop
cld
add
push
popa
and
dec
es
flds
push
pop
and
clc
mov
fwait
sbb
jecxz
fs
mov
and
arpl
push
popf
gs
dec
xor
jns
and
add
push
orb
pop
dec
jb
daa
shr
and
psrad
mov
jl
mov
jae
jnp
push
and
push
aam
aas
mov
or
pushl
sbb
imul
push
js
push
dec
dec
lret
push
aam
ja
xor
lret
add
les
in
mov
add
pop
fildl
cmovle
mov
lock
add
lock
lahf
add
jbe
iret
fcoms
xor
mov
dec
adc
dec
or
dec
lret
lret
hlt
lock
ja
ljmp
cs
pop
in
call
push
fsts
add
inc
xchg
adc
jle
dec
jecxz
outsl
xchg
sbb
arpl
sbb
or
stos
jbe
pop
ficoml
scas
and
mov
imul
ss
pop
adc
call
jmp
in
fmull
fildl
fsubp
call
mov
adc
jle
adc
mov
push
fucomp
adc
sarb
mov
add
mov
fmul
clc
daa
pop
sub
inc
add
jo
push
inc
adc
push
cwtl
jl
mov
push
insb
push
mov
cmp
add
scas
mov
push
daa
imul
or
add
and
push
add
cmp
lds
out
into
and
cwtl
or
pusha
mov
mov
jp
cli
shl
roll
cmp
jne
add
inc
fcoms
pushf
rcl
pop
inc
push
sbb
adc
cmp
lock
aaa
sbb
ficomps
lea
ljmp
imul
inc
cmpsb
sub
mov
cmpsl
mov
xchg
mov
aas
sub
cwtl
add
add
xorb
or
outsl
inc
shlb
push
or
add
inc
inc
mov
mov
mov
xchg
dec
mov
xor
pop
add
mov
mov
fsubrs
xchg
pop
pop
loopne
cmp
enter
or
inc
mov
pushf
add
push
pusha
adc
jmp
or
push
adc
adc
mov
ret
mov
or
cmp
push
mov
out
pop
mov
cmp
mov
call
inc
loopne
in
movsb
jne
testb
addl
add
sbbl
xchg
sbb
mov
sbb
ljmp
inc
pop
es
les
pushf
out
cli
in
outsl
or
rorb
lret
mov
push
notl
loopne
adc
pop
mov
xchg
sbb
jo
js
pop
je
cmp
jnp
inc
add
add
je
mov
xchg
sbb
sbb
jb
and
loope
sub
sbb
sahf
je
or
adc
mov
les
and
aad
aaa
adc
ficomps
mov
xor
mov
sbb
pusha
xor
mov
int3
jb
loopne
in
xor
mov
xor
xor
xchg
nop
shrb
test
test
or
adc
cmp
add
mov
inc
inc
hlt
xor
pop
loopne
pop
psubsw
inc
rcr
inc
bound
aas
add
xor
push
pop
mov
cmp
es
xchg
cld
lea
xchg
xchg
leave
jle
faddl
mov
push
jb
call
fnstenv
sbb
and
pop
les
out
enter
and
ret
in
xor
bound
sub
sbb
inc
jo
les
inc
lsl
js
or
xor
push
adc
add
js
jne
or
pop
sbbl
imul
ja
jecxz
mov
data16
mov
jbe
xor
shrb
jmp
sarl
clc
nop
loopne
mov
loopne
iret
dec
sbb
inc
outsl
inc
xchg
jmp
inc
jbe
adc
cmp
and
adc
sbb
xor
dec
xorl
ljmp
push
loope
and
lea
add
ret
les
test
push
and
les
xchg
mov
rcrb
je
int3
pop
add
jns
jno
iret
sub
mov
pusha
aas
ret
xor
push
pop
movsb
inc
or
sar
mulb
sbb
aam
hlt
mov
sub
filds
outsb
bound
sbb
popa
pop
ds
mov
cltd
xor
xchg
imul
sarb
popa
ja
add
or
xchg
or
les
xchg
push
loopne
test
inc
int3
test
add
and
push
subl
jle
cmp
push
je
push
add
imul
rolb
mov
mov
lock
push
pop
stos
shlb
insb
pop
rorb
sarb
adc
xchg
daa
daa
fistps
sub
sub
or
dec
or
jp
ret
and
push
fnstsw
cmp
sub
fstl
mov
or
cmpsl
mov
sub
jge
push
pop
addl
or
lcall
sub
push
add
push
or
mov
or
adcb
ds
dec
inc
xor
adc
sbb
xchg
mov
scas
mov
mov
mov
jnp,pn
mov
mov
add
mov
mov
inc
jae
addr16
inc
push
stc
inc
jmp
add
sub
fwait
mov
and
sbb
and
scas
dec
jp
dec
and
and
sahf
loope
pop
xor
push
mov
pop
mov
icebp
push
push
mov
push
jne
mov
sbbb
cmpb
and
aas
lahf
mov
add
aaa
cmp
addb
out
mov
fs
xchg
pushf
jne
faddl
pushf
add
loope
jg
jb
divl
cmp
es
and
fmuls
or
sub
ja
add
bound
inc
dec
sub
push
mov
aaa
pop
jmp
ret
addl
dec
pop
dec
add
in
sub
clc
notb
jle
push
jmp
xchg
fisubrl
incl
and
adc
inc
sbb
push
and
or
aaa
enter
int
mov
cmp
cmc
sub
cmp
lock
adc
and
orl
pusha
mov
ror
rolb
lock
inc
dec
in
or
lods
or
mov
or
dec
test
add
jmp
aaa
mov
jge
outsb
clc
jbe
cmp
and
rolb
ja
in
pushf
or
mov
mov
loopne
xor
xor
mov
mov
inc
ret
push
sbb
mov
mov
xor
cld
push
mov
pop
or
insb
ja
sbb
xor
adc
add
test
or
add
push
xchg
add
or
jl
push
xchg
loop
mov
lahf
pop
aam
inc
dec
xor
cltd
sub
mov
mov
cmp
and
jnp
pop
insb
mov
and
sbb
adc
xor
mov
inc
cmp
sbb
sbb
xchg
mov
cmp
mov
push
dec
jp
loopne
sbb
in
fmuls
or
ret
testb
cmpw
fiadds
dec
jle
and
and
imul
pop
or
cli
movsb
arpl
aam
and
jae
push
or
dec
mov
iret
roll
lahf
sub
adc
pop
add
adc
fcomps
push
insl
xor
clc
fiaddl
mov
sbb
mov
imul
adc
mov
fst
dec
fwait
mov
lods
inc
dec
jl
addr16
xchg
jmp
or
push
add
add
ffree
gs
dec
inc
cs
cmpsb
cmp
dec
or
dec
cmp
jp
orl
mov
rorb
or
pop
ret
fucomi
rcll
mov
add
rolb
and
sub
lahf
add
mulb
sbb
outsl
and
push
movsb
adc
fiaddl
mov
fadds
xor
or
popa
fs
fs
cmpl
push
shll
movsb
test
imul
mov
call
dec
or
pop
xchg
pop
stc
mov
xor
loopne
cmpsb
add
and
sub
mov
call
and
xor
push
sbb
lock
inc
and
mov
pop
fmuls
leave
test
adc
sub
stos
jmp
out
lds
jo
outsl
enter
add
add
rcrl
pop
xchg
mov
sbb
mov
or
ret
xor
mov
add
jo
dec
and
and
dec
not
les
pusha
out
add
inc
sbbb
push
rorb
mov
outsl
xchg
mov
stc
jle
jg
or
je
push
lock
push
rorl
adc
adc
imul
xchg
xchg
dec
push
dec
or
dec
aaa
loop
jecxz
je
mov
pushf
adc
adc
sbb
inc
sbb
add
loopne
and
or
jmp
push
jne
add
and
push
mov
je
pushf
pop
push
inc
cmovae
push
loop
nop
mov
xlat
jl
rol
push
xlat
pop
insb
cmp
pop
jmp
cmpl
insl
cmpsb
shlb
icebp
and
jo
repnz
aas
xchg
sbb
popa
pusha
mov
or
xchg
jo
ret
or
sub
inc
push
mov
add
loop
aam
sbb
andl
movsl
push
cmpsl
jl
push
aad
mov
or
push
lar
or
or
pop
xlat
lcall
mov
xchg
lock
popf
cmp
pop
out
pop
into
xchg
push
sbb
in
pop
or
xchg
mov
mov
hlt
and
insb
ret
leave
rol
outsl
das
adc
iret
ret
mov
das
xor
inc
pop
and
push
daa
dec
daa
or
add
add
aad
ret
xor
jp
inc
mov
sbb
mov
ljmp
xor
loopne
insl
pop
push
ret
mov
sbb
or
pop
and
push
xor
imul
dec
bound
or
lock
nop
push
sub
insl
jno
mov
cwtl
hlt
or
dec
dec
push
adc
mov
add
push
cld
inc
push
mov
lcall
pop
lcall
popf
rolb
dec
xchg
dec
add
push
xor
sub
sub
dec
and
lock
add
xlat
fimull
mov
stos
popw
inc
arpl
test
mov
daa
pop
and
jmp
cld
int3
popl
imul
inc
outsl
mov
and
sub
add
fnop
push
sub
sarb
movsl
ljmp
add
adc
cmpsl
xor
cmp
sbb
mov
sbb
and
push
inc
cmpsb
sub
adc
and
and
insl
std
loope
mov
cmp
jno
dec
inc
movaps
sbb
mov
push
out
insb
cmc
push
xor
lea
push
and
leave
sarl
sub
inc
jb
pop
xor
pop
leave
or
cwtl
sti
push
shlb
push
or
out
movsl
fld
popa
dec
dec
push
aaa
xor
inc
pop
inc
push
cwtl
push
xor
xor
xchg
popf
sbb
jo
daa
xchg
fcoml
js
sbb
adc
mov
fisubl
lret
push
xchg
addb
jmp
sbb
fsubl
leave
mov
inc
aaa
decl
add
fldl
fcompl
add
fiadds
xor
or
dec
pop
push
mov
icebp
xorb
dec
mov
push
xor
dec
jg
mov
add
and
cli
sbb
add
jns
mov
cwtl
js
push
add
insl
cmp
push
add
jnp
test
lock
sub
sub
fisubs
sub
nop
xor
xor
out
jns
jl
xor
and
std
mov
push
outsb
ret
add
inc
sub
fnstsw
js
dec
je
add
jmp
bnd
in
fcoms
int3
pop
pop
add
popa
xchg
aaa
push
sbb
pop
mov
insb
inc
arpl
stos
push
cmp
out
data16
push
dec
push
cwtl
call
fcoml
cwtl
popa
test
inc
fiaddl
shll
sbb
loopne
pop
sar
arpl
or
lret
add
mov
or
fwait
mov
add
mov
jne
outsl
repz
shlb
jo
xlat
add
and
pop
adc
das
lods
andl
aam
popa
sbb
mov
or
xchg
rolb
inc
dec
aaa
mov
cli
movsb
and
adc
adc
cmp
jb
push
rclb
sub
ret
inc
jmp
adc
nop
es
out
sub
push
or
jne
xor
mov
dec
cmpb
jo
mov
jnp
lea
push
inc
sbb
push
stos
mov
mov
mov
push
mov
pop
loop
sub
call
jmp
test
imul
cwtl
dec
fiaddl
xorl
push
addl
add
insl
mov
mov
xor
inc
mov
pop
ja
imul
xor
bound
mov
inc
or
xchg
mov
sbb
jb
mov
es
and
dec
mov
ffreep
subl
inc
cmp
add
test
or
inc
jl
adc
orl
sub
rclb
movsl
sub
roll
mov
imul
and
lret
inc
mov
jo
mov
or
inc
sbb
aam
ret
pop
ud2
adc
pop
cmp
xchg
inc
movb
lock
dec
lea
mov
lcall
add
js
mov
movhps
leave
add
xor
jl
jmp
in
mov
movsb
cmp
adc
pop
rcrb
pop
daa
add
outsb
push
les
cld
sub
jo
inc
lods
and
enter
dec
add
xchg
hlt
sbb
add
dec
popa
in
inc
dec
pop
add
jmp
jl
cmp
loop
mov
lahf
cld
insb
shrl
add
inc
sbb
hlt
or
addb
or
ret
add
inc
iret
hlt
push
sub
and
rolb
in
pop
mov
pop
jp
push
loop
test
adc
adc
dec
mov
aam
add
jl
pop
mov
out
pop
push
mov
cmp
pop
jmp
jb
and
pop
push
mov
addb
ds
pop
daa
outsl
cmpb
inc
setg
jmp
das
cmp
dec
dec
inc
add
cmp
setle
xor
movsl
imul
dec
sbb
dec
roll
adc
cld
or
xchg
xchg
mov
mov
or
mov
add
lret
push
test
sbb
sbb
sti
mov
mov
popa
ljmp
or
stos
repz
adc
lods
dec
lock
mov
xchg
sbb
xchg
enter
and
enter
imul
push
sub
aaa
pop
out
pop
jo
dec
imul
loope
int
add
subb
mov
loopne
rolb
jmp
aaa
pusha
enter
jmp
xorl
bndstx
es
mov
or
xchg
pushf
std
or
xchg
lret
and
xchg
mov
call
aaa
lock
add
in
call
popf
movb
rolb
imul
out
mov
or
orl
jne
icebp
adc
jecxz
ret
cmpb
dec
sub
aaa
mov
add
jb
sub
xchg
mov
cmp
xchg
cmc
inc
add
pusha
or
pop
xchg
loope
add
push
mov
lock
scas
push
repz
push
or
push
cmp
jbe
iret
bound
mov
adc
jle
sub
mov
mov
lods
or
fs
add
jmp
push
mov
rcll
jmp
clc
xor
mov
fstpt
imul
cld
mov
mov
dec
cmpl
dec
lods
mov
pcmpeqw
movsb
cs
dec
inc
xchg
and
cli
add
xchg
push
imul
jnp
jg
sahf
stos
push
sub
sbb
jnp
sub
insb
insl
and
inc
stos
aam
xchg
sbb
cmpsb
test
adc
fidivrl
hlt
fldl
push
pop
addl
or
sub
out
sbb
subl
dec
cli
sbb
cmp
jne
xchg
call
jmp
movsb
pusha
test
cltd
pushf
add
mov
mov
fildll
jg
push
mov
scas
bound
inc
sbb
or
dec
or
dec
push
cmp
aas
fldt
add
cmp
jge
push
add
mov
and
add
cmp
cmc
xchg
xor
leave
pop
clc
dec
or
or
inc
push
hlt
pop
jnp
sub
int
cs
shl
test
pop
adc
cmpsl
jne
aaa
add
test
add
push
and
sub
push
cmp
dec
test
lock
fcomps
pop
cmp
sbb
cmp
jne
push
add
rcl
sti
push
add
push
adc
mov
pop
sub
cmpsl
sbb
add
adc
push
ds
pop
xor
sub
xor
test
xchg
xchg
daa
stc
xchg
mov
dec
pop
imul
cmpsl
cli
les
add
push
add
push
xor
int3
cmp
pop
cmc
jb
js
pop
and
xor
in
je
nop
and
jbe
adc
gs
pusha
jmp
shr
nopl
jb
jnp
scas
mov
pop
push
imul
test
pusha
push
out
lods
mov
ffreep
call
ffreep
push
mov
adc
std
jne
and
imul
fiadds
cwtl
mov
sub
xchg
sbb
cmp
xor
test
or
adc
xchg
lret
mov
and
mov
xor
sub
sub
imul
cmpb
mov
xor
xor
add
jns
outsl
push
in
and
mov
mov
push
test
add
sbb
movups
add
inc
adc
inc
cli
rcrl
aas
adc
mov
pop
enter
rclb
or
dec
mov
sarb
ret
pop
mov
adc
lret
add
clc
xor
mov
fucomi
mov
inc
pop
pop
xchg
xor
sbb
lcall
into
jg
push
mov
rolb
test
push
movsl
sarb
insb
aas
clc
lret
clc
dec
xor
dec
add
pop
call
sarl
xor
inc
mov
sahf
movsb
popf
movsb
sbb
jae
pop
push
xchg
jne
mov
mov
lcall
mov
inc
shrl
js
lret
rorl
cwtl
mov
xor
fs
cmp
jne
inc
adc
pop
jecxz
mov
insb
mov
xchg
sbb
xor
dec
ss
xchg
xor
mov
pop
insb
idiv
mov
aas
jmp
mov
sbb
fadds
jae
pop
or
lods
adc
mov
sub
arpl
and
fld
imul
inc
pushf
pop
cmp
jle
cmp
lods
jmp
imul
and
dec
sti
fbstp
leave
je
add
sbb
aas
inc
jmp
sahf
cltd
mov
mull
xchg
call
inc
dec
sub
cmpsl
je
loop
sbb
mov
outsl
popa
inc
add
or
add
fdivs
xlat
add
test
mov
test
cwtl
and
sub
daa
push
pop
sbb
sbb
dec
cmp
and
pusha
insb
fimull
into
or
rol
push
js
xchg
push
filds
orl
aam
aam
inc
cmpsl
push
bound
cmp
nop
lret
adc
sub
and
add
inc
jp
adc
ret
mov
add
pop
aaa
and
or
pop
not
ret
sub
je
orl
lods
movsb
mov
mov
push
sub
cmp
popa
mov
push
cmpsb
std
mov
adc
addb
hlt
aam
xor
or
sbb
out
push
add
nop
je
add
or
fstl
add
sbb
daa
mov
sbb
mov
push
xor
nop
mov
pop
push
fs
inc
push
push
dec
add
push
cmp
enter
call
and
add
lods
adc
cwtl
xchg
nop
aam
testb
sub
pop
add
rclb
and
inc
stos
test
cld
insl
adc
inc
dec
dec
push
push
sarb
sbb
add
lea
lcall
stc
jo
push
es
daa
dec
std
or
ja
mov
xchg
push
inc
je
and
add
addr16
arpl
aas
push
roll
inc
movzwl
xor
decl
push
push
out
mov
jnp
push
inc
sarb
hlt
sub
mov
sahf
nopl
lock
xchg
adc
shrb
and
jecxz
sub
add
outsb
add
adc
ret
nop
int
inc
dec
or
inc
inc
decl
push
xor
adc
push
sub
rorl
stc
pop
add
ffreep
imul
or
int3
jne
pop
and
addb
dec
mov
add
int
or
out
cmp
fists
sbb
mov
adc
lods
mov
les
jne
inc
dec
out
and
mov
lea
mov
or
jnp
add
push
loope
pop
aaa
loop
lods
sub
cmp
jecxz
clc
clc
cmpb
mov
popa
jne
sbb
mov
xlat
lea
or
xchg
mov
lods
xorl
loop
out
jl
jnp
adc
add
lock
inc
and
pusha
xchg
je
loopne
cmp
sbb
es
ss
fsubrl
adc
mov
test
mov
rcrb
push
rcrb
fidivl
bound
outsl
test
mov
ret
mov
and
inc
int
adc
xor
cmp
rcll
or
aam
inc
std
and
sub
addr16
or
xchg
jl
pop
repnz
xchg
sbb
jecxz
fiadds
shl
fsubrl
cli
mov
adc
sbb
ss
lahf
orl
and
shrb
add
xchg
and
ja
pop
pop
ja
or
dec
arpl
test
lock
dec
xor
imul
ja
lock
movb
mov
mov
out
mov
push
call
lds
inc
mov
pop
xor
nop
cmpl
in
jg
iret
es
repnz
xchg
mov
jne
push
shlb
sbb
adc
xchg
cld
popf
or
xor
or
push
or
shll
dec
xor
cmc
xchg
rorb
daa
lds
sbb
or
shll
imul
or
cmp
je
jno
mov
inc
inc
pop
sbb
mov
dec
sbb
std
xchg
lcall
adc
dec
shlb
lock
adc
fsubrp
or
cli
movsb
sub
out
and
xchg
mov
decb
ds
pop
mov
push
xlat
loope
cmp
mov
jo
push
arpl
and
inc
filds
cmp
mov
add
test
out
or
jecxz
sbb
mov
mov
mov
sub
ja
push
sbb
pop
sbb
out
xorl
ss
andb
mov
cmp
shrb
jg
clc
lahf
push
add
push
inc
mov
xchg
sub
or
mov
pop
push
xchg
lods
push
pushl
add
and
lods
push
repz
add
jno
test
jne
push
sarb
cltd
mov
sbb
adc
or
adc
sbb
arpl
pop
dec
gs
lahf
mov
adc
push
adc
xor
cmpl
pop
pop
sbbl
rorl
movsl
pop
aad
dec
or
out
imul
sub
xor
insl
cwtl
lcall
sub
ret
call
sar
pop
test
mov
mov
xlat
test
adc
mull
jl
sub
pop
mov
jl
adc
inc
adc
test
add
adc
inc
pop
dec
xchg
mov
push
popa
xchg
movsb
pop
mov
add
add
push
cmp
mov
push
shr
adc
je
push
pop
loope
sub
adc
out
pop
jp
jo
or
adc
or
sub
ret
popl
mov
imulb
adc
sub
cmp
jmp
inc
sbb
outsb
and
test
jno
orb
loopne
inc
in
les
sarb
andb
add
test
xchg
push
mov
mov
pop
jo
and
test
jae
push
adcl
icebp
pop
mov
jmp
mov
cmp
enter
sbb
add
and
mov
sbb
arpl
jecxz
cmp
call
and
iret
dec
add
pusha
xchg
mov
or
in
push
rcll
into
pusha
int3
inc
jle
jb
add
inc
aas
jno
imul
mov
outsl
call
sbb
inc
mov
add
add
inc
xor
cmp
sbbb
sbb
push
data16
mov
mov
add
or
sbb
insl
add
mov
mov
rcr
loop
adc
adc
and
or
jno
addr16
call
xchg
cmp
jge
test
sbb
pusha
and
inc
imul
mov
xor
push
dec
mov
mov
mov
or
and
loope
inc
xchg
cwtl
call
or
xor
loope
lock
and
push
lods
sbb
inc
xor
and
movsl
scas
mov
dec
adc
orb
hlt
pop
call
loope,pn
and
mov
add
out
nop
cmp
sbb
cwtl
movl
movsl
movsl
stos
add
mov
pop
push
xor
fwait
or
stc
push
cmpl
mov
mov
sbb
call
fists
add
call
and
xlat
icebp
clc
push
lock
push
add
adcb
inc
dec
mov
and
imul
mov
pop
loopne
pusha
xor
dec
fiadds
push
gs
loope
iret
cli
inc
sbb
add
xor
sar
xor
insb
rcrb
shr
out
imul
sbb
push
pop
pop
in
dec
shll
inc
stos
lock
leave
jge
or
push
mov
add
orl
shr
in
xchg
or
sbb
xchg
popa
js
dec
unpcklps
pop
or
mov
adc
inc
fwait
inc
es
ss
or
les
pop
xor
and
sbb
push
xchg
adc
jmp
xor
popf
pop
xchg
and
jno
je
pop
cmp
sets
and
in
jno
mov
and
add
push
fiaddl
jmp
in
inc
dec
push
and
push
aad
repnz
mov
xor
dec
xchg
cmp
and
adc
add
push
sbb
or
arpl
cs
ret
add
inc
xor
clc
aam
clc
jecxz
sti
inc
add
sub
shlb
or
insl
rcrb
adc
cmpsb
mov
movb
mov
sbb
push
sti
or
push
ja
inc
or
mov
sub
sub
lcall
pop
pop
sbb
xchg
test
addr16
push
dec
push
das
pop
sbb
divps
pop
mov
and
rol
jne
or
push
adc
shll
adc
inc
iret
sarl
loope
cmpl
sbb
mov
inc
test
stos
and
xchg
xor
or
pop
and
pop
push
pop
inc
nop
daa
aas
pusha
pop
int3
test
inc
nop
inc
popf
pop
and
jg
stc
xchg
mov
add
or
xchg
and
adc
dec
and
mov
jmp
repz
std
mov
jne
scas
sbb
mov
push
mov
sub
test
dec
mov
dec
add
enter
nop
mov
cmpl
int3
fldenv
stos
shl
or
sbb
add
push
popa
cwtl
xchg
inc
mov
add
adc
je
sub
or
xor
out
jo
pop
push
stos
sbb
mov
push
sbb
rcrb
arpl
mov
or
stc
je
inc
call
loopne
adc
push
adc
faddl
sub
xchg
sub
outsl
ret
adc
inc
shll
xchg
adc
add
repz
mov
cmp
xor
xor
mov
or
adc
cs
inc
cmp
inc
pushw
dec
and
inc
mov
push
lea
ret
ss
mov
js
inc
jnp
or
pop
je
movswl
sub
jmp
sbb
add
lods
and
cmpsl
mov
andl
imul
pusha
cmpsl
pusha
sub
push
xor
xchg
rcrl
push
mov
xchg
daa
sbb
dec
cmp
clc
movb
xor
daa
mov
xchg
sub
icebp
xor
das
cld
or
xchg
pop
and
mov
mulb
js
fdivrs
mov
je
cltd
jo
jo
mov
dec
xchg
test
or
sub
test
push
imull
mov
or
and
jne
sub
add
roll
mov
sbb
add
adc
popf
inc
cmp
and
adc
test
and
in
cs
mov
shlb
push
pop
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
les
cmp
stos
mov
mov
sub
mov
pop
sarb
imul
loop
sarl
dec
pop
push
rcl
inc
pop
test
mov
mov
outsb
aam
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
dec
adc
xlat
push
hlt
jmp
fdivs
adc
cmp
xrelease
mov
xor
scas
add
cmp
rclb
or
and
xor
test
dec
rcrl
lea
addr16
pop
and
cmp
rorl
shrb
push
cs
in
adc
mov
out
stos
or
jmp
inc
insl
mov
out
sub
sub
dec
adc
pusha
add
out
xchg
outsb
xlat
icebp
xor
fiaddl
mov
daa
adc
fxch
shrb
and
mov
adc
xchg
add
test
jne
dec
jo
pusha
mov
daa
adc
adc
push
mov
fists
xor
lahf
in
je
mov
loopne
icebp
movaps
jle
push
push
pop
sub
and
mov
add
je
js
sub
sahf
mov
dec
stos
push
fstps
sbb
lea
dec
mov
xor
xchg
sbb
xor
aam
test
inc
sub
mov
add
ftst
xor
pop
loop
ja
roll
jb
les
add
xor
add
pop
push
mov
adc
or
cmp
xchg
mov
pop
inc
jmp
and
sbb
add
jnp
inc
sub
pop
sub
cmp
inc
ret
xchg
pop
cmc
push
ds
sbbl
insb
movsb
or
mov
test
imul
and
adc
int3
scas
dec
mov
or
add
or
adc
scas
test
push
and
add
mov
jg
push
dec
insb
adc
fcomps
enter
jne
movsl
mov
sbb
sbb
cmc
push
and
add
dec
sbb
mov
sbb
cmp
cmpsl
xor
mov
test
jp
jmp
daa
add
push
or
inc
shll
add
push
iret
inc
cs
jb
in
call
and
mov
and
fistpll
add
mov
push
loop
adc
push
push
setle
lea
iret
cs
mov
inc
fdivs
orb
and
sbbl
pusha
arpl
mov
xor
js
pusha
pop
das
insl
pop
out
jno
sbb
add
dec
in
xchg
or
dec
adc
xlat
add
adc
push
and
inc
ja
icebp
push
push
fldenv
adc
add
gs
xchg
jp
sti
popl
pop
aas
mov
and
outsl
dec
xor
pop
mov
or
je
adc
bound
push
cmp
add
js
pop
inc
pusha
adc
push
jbe
pop
mov
js
aaa
pop
sub
or
or
cld
stos
push
dec
jne
push
mov
or
dec
add
add
ret
lcall
push
pop
xchg
out
nop
mov
xchg
and
iret
mov
movb
or
jle
ret
in
xor
scas
or
ds
jmp
aam
insb
jge,pn
sbb
movsl
subl
test
jne
add
js
pusha
dec
mov
inc
pushl
imull
jb
xchg
cli
add
imul
into
xor
test
les
inc
data16
adc
fimull
pop
adc
ljmp
fidivrs
push
sbbb
ret
sub
jp
ret
lds
xchg
out
xchg
dec
cmp
adc
in
xchg
ret
dec
dec
xchg
xchg
invd
filds
mov
cltd
loop
adc
out
icebp
jg
inc
stos
stos
sbb
mov
cwtl
and
cli
repz
aaa
mov
xchg
mov
push
insb
mov
inc
and
push
inc
or
xchg
arpl
mov
cs
mov
xchg
xor
jno
mov
mov
jmp
test
push
or
mov
pop
das
dec
push
push
xchg
jae
xchg
test
sbb
mov
dec
ljmp
test
test
push
mov
jae
pop
push
cmp
pop
pop
outsl
divl
mov
aaa
xor
jns
andb
cmpsl
jle
scas
cmpsb
loopne
and
sub
adcl
pop
std
push
mov
push
cmp
das
in
or
into
dec
push
pop
or
push
test
mov
pop
xor
idivl
mov
adcl
into
jnp
dec
js
testb
jb
add
cli
adc
cmp
pop
shrl
jbe
rcl
addr16
xchg
jmp
stos
jne
push
adc
add
jg
mov
inc
adc
pop
ljmp
in
sbb
xor
add
je
cwtl
outsb
fsts
inc
inc
adc
movsb
xor
pop
rolb
jl
je
call
stos
jmp
or
add
push
stos
pop
or
pushf
faddl
cmp
addl
push
add
cmpl
test
sahf
push
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
mov
sbb
fildll
dec
jecxz
sub
push
adc
pop
jmp
mov
out
rcr
or
cmpl
mov
mov
add
ret
in
inc
push
mov
add
adc
daa
mov
adc
add
add
aaa
mov
pop
inc
les
pop
jb
push
cltd
dec
push
sbb
jmp
inc
shl
jae
jne
pop
iret
adc
cmpsl
movsl
cmp
sub
addb
lods
loop
pop
add
mov
mov
sti
rsqrtps
adc
int
andl
sbb
xor
test
add
sbb
les
je
or
and
push
sub
inc
sbb
les
sbbb
aam
rclb
mov
sbb
les
clc
push
mov
mov
lea
pushl
sahf
push
push
pop
outsb
icebp
and
push
and
jb
xchg
out
push
push
les
push
int
icebp
xor
sub
incb
push
dec
arpl
je
andb
lret
xchg
mov
push
push
xorl
mov
add
mov
ds
sbb
cmpsl
sbb
dec
push
cmp
mov
out
push
xchg
xor
inc
jp
add
or
and
les
je
sub
xor
inc
inc
mov
mov
xor
inc
or
adcb
push
and
mov
fwait
pop
ljmp
sub
xchg
ds
out
mov
cmc
out
add
push
inc
popf
and
test
cmp
int3
cld
lods
cltd
add
dec
lahf
or
shll
fildll
inc
mov
hlt
dec
cmp
mov
add
sarl
push
inc
sub
fildll
loopne
addr16
jg
les
add
lret
add
pushf
xchg
add
xchg
je
and
dec
negl
lods
orl
fdivs
xor
adc
pop
addr16
jbe
pushf
sub
jle
and
daa
mov
aad
imul
sub
loopne
jl
cs
push
jo
mov
negb
xorl
loopne
sbb
add
mov
mov
mov
aam
jo
ret
mov
dec
xchg
adc
and
cmp
fwait
add
mov
call
aaa
xchg
loope
push
scas
shl
or
nop
clc
jge
movsb
lahf
ret
notl
nop
cmpb
out
xor
lds
inc
jp
arpl
cmpsb
push
nop
sti
push
enter
pop
negb
sub
repz
inc
ret
pcmpgtb
xchg
push
jl
pusha
mov
loope
mov
out
pop
pop
outsl
mov
aaa
pop
xor
pop
inc
sbb
dec
addb
inc
sbb
push
push
loopne
dec
lds
push
rolb
movsl
add
dec
pop
push
in
movsb
sbb
sbb
jne,pn
push
add
dec
imul
lods
fwait
out
cli
pop
test
sti
rolb
pop
inc
je
cmp
mov
push
jmp
gs
mov
push
and
xor
add
pushl
andl
mov
or
inc
inc
orl
mov
jle
pop
dec
mov
mov
cwtl
xchg
data16
or
lahf
scas
push
or
adc
ja
es
mov
cwtl
mov
je
pusha
push
in
pop
loopne
pop
adc
inc
xor
sbb
outsl
add
and
sub
iret
cltd
cli
push
add
js
or
adc
punpcklbw
lock
out
inc
push
shufps
in
mov
fcompl
cld
and
pop
ss
leave
adc
xor
arpl
xchg
mov
xchg
adc
ror
cmpl
mov
in
add
into
cmp
adc
ss
aad
and
jo
rorb
jne
bound
sbb
jno
shll
outsl
arpl
pop
push
mov
ret
cmpb
cmp
mov
mov
cmp
xchg
sbb
and
orb
push
cmp
out
adc
fbld
add
pop
pop
mov
mov
adc
or
adc
test
je
push
ret
adcl
icebp
jo
mov
jae
adcl
andl
hlt
push
xchg
mov
je
clc
out
xor
bound
xchg
add
jmp
push
xor
inc
mov
push
sub
or
xchg
adc
addl
xor
dec
dec
add
test
cmp
pop
xor
das
outsl
test
push
fistpll
inc
daa
xchg
lods
sbbb
mov
lea
xor
je
mov
sub
clc
pusha
dec
jne
test
cli
mov
jne
repnz
in
and
mov
aam
cwtl
mov
pop
std
mov
sbbb
inc
pushl
movsb
mov
lea
sub
mov
pop
lock
addr16
or
dec
and
push
lret
pusha
push
adcb
adc
loop
je
add
cmpb
outsl
inc
dec
inc
xor
dec
jge
add
or
jmp
js
push
fimull
xor
push
and
call
cmpl
aas
xor
shlb
add
insb
dec
and
data16
and
lea
mov
ret
ret
test
jno
sbb
push
aam
loop
jne
outsl
and
jno
xchg
and
test
lcall
addr16
frstor
andb
cmc
je
jbe
popa
loope
adcb
pop
xchg
pop
imul
rcr
shlb
or
adc
cmp
sbb
dec
xlat
rcrb
stos
stc
add
or
adc
fsubr
mov
xlat
add
mov
adc
mov
add
sti
test
inc
mov
stos
scas
sub
pop
sub
insl
inc
test
sub
dec
pop
sub
rorb
sub
sub
addb
hlt
or
lahf
mov
xor
insl
mov
sub
push
clc
clc
lock
movsl
cmp
repnz
int
call
or
mov
sub
aam
mov
les
mov
inc
icebp
cmovbe
or
jl
mov
daa
mov
mov
add
and
pop
and
lret
lahf
mov
or
push
movb
mov
add
cmp
add
push
pusha
sbb
cwtl
cmovbe
adc
shrb
or
sbb
add
cs
jmp
pop
add
or
rcll
add
pop
push
dec
mov
dec
mov
inc
in
mov
mov
mov
push
repnz
push
dec
or
call
add
sub
cmp
mov
xor
out
mov
jmp
inc
push
rcr
aam
adc
sarb
dec
dec
or
cmp
push
adc
inc
movsl
cs
ficoms
push
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
mov
fmul
adc
ja
or
mov
into
adc
mov
sub
add
in
js
cmpsb
cmp
inc
leave
mov
add
lcall
pop
cmp
and
fmull
or
pop
mov
sbb
xchg
cmp
mov
sbb
dec
cmp
dec
les
sbb
push
fs
add
fadds
add
mov
adc
pusha
mov
add
and
add
js
sub
das
repnz
or
add
je
pop
pop
pop
pop
jg
pop
add
and
push
lds
dec
xchg
imul
out
xchg
test
jge
xor
xor
dec
xchg
push
add
pop
dec
add
sbb
sub
sbb
xchg
sbb
add
mov
aam
insb
sbb
unpckhps
mov
pop
xor
cmp
jns
insb
xor
lret
push
push
dec
mov
pop
rorb
adc
pusha
sub
incl
dec
shll
int3
imul
or
push
mov
sbb
xlat
inc
mov
lret
mov
jb
push
push
lock
ret
inc
pop
in
mov
add
shrb
fcom
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
sbb
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
jnp
jmp
push
mov
gs
fcmove
mov
mov
js
mov
imulb
or
fldcw
add
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
mov
subl
pop
lcall
inc
outsl
imul
fsubs
daa
adc
inc
out
mov
imul
cmpsb
lea
push
fidivl
insl
inc
cmp
sbbl
aam
cld
data16
push
xor
and
push
sub
lds
jb
sarl
pop
aam
add
and
pop
fdiv
out
hlt
aas
inc
adc
inc
inc
sub
dec
movsl
jb
xchg
dec
or
adc
call
dec
sub
push
rclb
xchg
sbbb
cmp
sbb
cltd
or
or
add
je
jno
mov
test
jo
jg
dec
mov
or
pop
nop
leave
inc
xor
les
aam
stos
or
sbb
jecxz
add
dec
push
cwtl
lds
rol
shr
aas
sbb
push
xchg
cvtps2pi
or
adc
mov
dec
mov
in
push
testl
ret
xchg
jo
js
pop
sbb
andb
add
sub
push
add
push
loop
or
cli
std
adc
or
add
adc
cmp
and
arpl
inc
dec
add
jp
inc
add
inc
cmp
inc
pop
jmp
pop
cwtl
test
xchg
adc
mov
mov
pop
stc
add
mov
inc
shll
stc
dec
sub
test
add
daa
lcall
out
sbb
mov
js
nop
ret
cmp
mov
mov
mov
jne
mov
xchg
push
mov
xorb
ss
in
fistps
imul
pop
inc
add
xchg
push
add
mov
jbe
dec
roll
cmp
add
dec
call
adc
sub
xchg
mov
outsl
imul
add
or
and
dec
popf
movsb
push
xchg
fldl
jo
adc
inc
mov
outsl
out
inc
std
cs
addb
scas
and
adc
cwtl
xchg
fildll
ljmp
sub
adc
dec
jbe
add
inc
mov
mov
dec
cmp
or
mov
adcb
or
movsb
sar
pop
clc
cli
ret
push
pop
in
jno
lahf
cmp
pop
pop
lock
xor
xchg
popa
fadds
hlt
add
add
sbb
or
scas
mov
xchg
lods
mov
divb
inc
sbb
call
repnz
mov
xchg
addr16
add
lods
cmp
push
pop
jbe
add
add
xchg
je
jmp
push
add
cmpl
pop
dec
in
sub
aaa
jge
shlb
jbe
add
pop
movsl
push
or
pop
addb
jno
in
subps
popa
jmp
add
mov
je
inc
xchg
lcall
push
mov
inc
in
add
add
add
push
pop
inc
scas
push
shl
pop
pop
repnz
fnstcw
xor
sub
pusha
cmc
pop
int
addb
rolb
xor
mov
lods
lahf
rolb
dec
xchg
dec
sub
pop
ss
gs
out
cmp
cmp
mov
int
call
or
sub
rcrb
hlt
adc
or
sahf
ficoms
movsl
jp
ret
test
and
xchg
ret
or
cmp
xchg
or
sub
cmpsl
jmp
cmpl
mov
and
std
outsl
arpl
or
xor
adc
or
lods
jle
dec
mov
jle
arpl
mov
bound
push
pop
mov
cmp
faddl
adc
loopne
shll
mov
shl
sub
mov
and
mov
daa
push
cmp
loopne
iret
lock
pop
sub
adc
adc
pop
inc
test
jp
js
cmp
sbb
pop
insl
lds
xchg
or
push
or
mov
movsl
mov
mov
mov
adcb
jne
push
mov
adc
xchg
jmp
cmp
and
adc
inc
sarl
ja
ret
push
push
shlb
les
lds
xor
mov
sub
push
mov
adc
clc
sub
mov
adc
mov
push
cld
in
movsb
dec
inc
sbb
scas
popa
loopne
call
sub
sub
add
out
or
inc
movsl
clc
jg
pusha
or
jle
mov
vcvttss2si
cmpsb
xor
push
stos
or
pop
inc
div
adc
fadds
cmp
out
and
out
inc
sub
push
mov
sbbb
mov
mov
mov
or
jl
mov
test
aaa
cmpsb
push
jg
mov
cwtl
mov
rclb
fs
arpl
jecxz
push
ret
scas
pop
fcoml
mov
cmp
add
es
or
push
js
push
jl
xor
xor
sub
or
loop
rcrb
jno
aas
enter
lods
ret
cmp
je
pop
or
mov
pop
ret
aam
mov
inc
jl
pusha
xor
and
test
insb
mov
gs
arpl
push
or
fs
and
popa
stos
mov
aas
test
aam
dec
test
shl
rclb
lock
cmp
fsubl
pop
movb
sub
faddl
pop
popf
pop
and
repnz
test
xchg
xor
out
or
xor
add
add
mov
jbe
pop
inc
and
mov
mov
fidivl
aaa
rolb
add
mov
leave
enter
add
cmp
int
or
scas
cmp
add
xchg
mov
lret
ffreep
add
adc
adc
adc
push
dec
mov
jne
adc
cltd
cwtl
inc
sbb
or
and
add
mov
adc
and
out
jge
pop
or
or
pop
in
xor
std
lahf
mov
jg
add
mov
jmp
mov
orl
inc
push
mov
and
out
pushf
rolb
test
pop
or
outsb
mov
cmp
enter
sub
ret
push
add
mov
ds
xor
add
enter
out
push
inc
ds
dec
push
inc
insl
mov
dec
adc
jmp
enter
or
jne
repz
test
into
cli
out
jmp
push
push
push
pop
clc
loope
je
xor
int
pop
sbb
sub
insl
cmpsb
movsb
or
and
jno
flds
cwtl
pop
fs
push
mov
aas
mov
mov
jne
cmovo
clc
adc
and
dec
jne
into
inc
inc
out
push
xchg
dec
jmp
add
jb
ja
push
xchg
mov
mov
inc
shrl
jl
sbb
xchg
sub
sbb
shr
aam
ljmp
adc
fs
sub
ja
mov
mov
lock
insb
or
mov
inc
mov
inc
sbb
add
lods
mov
mov
adc
pop
je
test
int3
mov
pop
add
xor
aaa
jo
rorl
mov
ljmp
add
daa
or
xchg
pop
scas
add
xlat
in
cmp
sub
fdivrl
icebp
mov
inc
ss
adc
xchg
adc
lods
mov
xor
hlt
or
out
mov
jae
push
addl
inc
cmp
cmp
ficoml
sub
sub
mov
mov
jl
fdivl
pop
dec
or
adc
and
adc
sub
hlt
ret
jnp
test
inc
loopne
movsb
pop
cwtl
adc
jecxz
ljmp
int
pushf
cmpsb
add
push
add
adc
fs
dec
sbb
jp
push
test
ja
mov
pop
push
adc
jecxz
lds
fdivrs
lock
jp
iret
inc
lods
push
and
hlt
ja
pop
sbb
pop
or
jo
imul
cmp
and
btc
addr16
push
push
and
loope
add
xlat
add
pop
and
pusha
xor
jo
push
mov
mov
pop
push
mov
lret
pop
ret
or
or
mov
vrsqrtps
or
scas
icebp
mov
mov
or
rorb
and
out
popa
mov
sub
cmpsb
pop
or
and
js
push
xor
inc
or
sub
pop
pop
sbb
dec
and
adc
ss
imul
cmc
cmp
outsb
push
pusha
fldt
mov
jo
data16
fistps
push
repnz
add
lcall
lods
or
inc
fbstp
bound
xchg
fistps
lret
fwait
test
aam
add
sub
xchg
push
loope
xchg
into
jle,pn
test
push
adc
aaa
mov
pop
adc
ret
fstps
subb
inc
lcall
lods
sbb
mov
and
xor
add
mov
in
fs
movsl
dec
xchg
jo
das
xchg
mov
mov
out
mov
mov
xor
cmp
cmp
cmp
jecxz
add
xchg
inc
movsb
sub
pop
pop
test
push
xor
or
rcrb
inc
xor
loopne
add
imul
cmp
mov
addl
ret
addl
incl
push
dec
insb
addb
add
jg
and
adc
je
lret
insb
add
push
or
or
mov
pop
jb
mov
xchg
pop
add
or
rorb
push
sbb
addb
sub
fs
flds
fsubs
pop
fwait
js
test
sub
push
aam
dec
dec
and
mov
inc
das
add
ret
cmp
xor
add
sbbl
mov
jmp
ja
sub
in
jg
sbb
mov
inc
adc
hlt
push
pusha
nop
or
test
je
addl
add
in
cwtl
cmp
mov
xor
push
pop
pop
es
cld
and
fs
out
ret
inc
adc
andb
sub
imul
or
ljmp
jmp
or
or
xor
test
or
adc
rorb
xor
xor
mov
pop
aad
and
inc
push
push
das
adc
pop
icebp
xor
sub
jne
pop
mov
dec
mov
fdivr
sbb
inc
std
mov
mov
sub
mov
insl
daa
gs
dec
cwtl
jnp
xor
pop
into
or
cmpsb
or
push
inc
or
int
mov
mov
dec
and
pop
daa
pop
mov
jmp
push
add
cmpsl
inc
cltd
add
xchg
in
inc
adc
adc
push
into
push
pop
add
adc
add
pusha
inc
pusha
jne
cld
jo
rclb
test
sub
mov
adc
sbb
notl
pop
insb
imul
mov
mov
mul
into
dec
mov
add
cmp
xlat
adc
rclb
inc
daa
or
scas
pop
push
inc
movl
adc
inc
mov
or
loopne
or
or
mov
and
jg
mov
push
pop
icebp
dec
jmp
xor
and
and
testb
in
inc
dec
inc
fs
add
mov
xchg
data16
addl
shll
inc
or
xor
loop
or
xchg
or
or
sbb
jo
or
adc
cli
loopne
adc
push
mov
xorb
movsb
shll
js
jmp
mov
daa
fdivs
or
orb
inc
sub
nop
bound
daa
out
test
dec
adc
or
xor
or
xor
loopne
sbb
sbb
sub
pop
les
sbb
push
inc
mov
mov
call
sbb
outsl
inc
fs
sbb
and
test
movhps
jno
xor
enter
and
mov
pop
add
das
or
xchg
xorl
adc
in
xor
arpl
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
mov
pop
or
jo
in
or
sub
sbb
sub
cmp
add
cmp
mov
pop
jns
xor
inc
jae
mov
clc
dec
inc
and
dec
lea
fwait
loope
sbb
out
lock
cmp
dec
cmp
arpl
dec
adc
scas
xchg
bnd
rcrl
dec
dec
and
dec
pushf
loope
cmp
add
imul
push
daa
jne
fdivl
xor
daa
inc
les
inc
icebp
or
popa
jo
or
push
jle
xchg
dec
add
aaa
cld
les
sbb
pushf
or
jl
mov
jbe
fs
push
in
inc
mov
loop
clc
pusha
pop
mov
push
mov
push
lea
aam
adc
xchg
shr
mov
lock
mov
inc
inc
sbb
lock
xchg
and
aas
cmp
lock
sti
std
and
jne
sub
lock
adc
mov
enter
sub
leave
add
lea
sbb
fldenv
push
and
insl
aam
loopne
xchg
push
loopne
aad
icebp
pop
icebp
mov
ret
enter
adc
fsubr
push
jmp
sbbb
inc
es
xor
pushf
in
or
inc
sub
or
xor
and
push
sub
add
shl
pushf
addb
pushw
or
stc
cmpb
movsl
add
and
into
mov
pop
adcl
fnsave
sbb
js
scas
add
bound
mov
add
fisubrs
adc
adc
add
fwait
or
test
rclb
add
fdivrp
xor
sbb
cmp
inc
dec
or
xchg
mov
xchg
adcb
dec
add
and
mov
aas
pop
pop
loopne
sbb
mov
mov
jo
and
sbb
add
mov
add
xor
roll
inc
jl
push
imul
adc
inc
sbb
mov
pop
xorl
insl
rcr
cmp
add
xchg
sbb
or
inc
loope
add
ja
push
lods
or
arpl
cld
popl
jge
dec
sbb
data16
inc
and
imul
nop
pop
add
adc
data16
pop
and
xor
enter
pop
andl
in
imul
inc
call
fsubs
int3
inc
notl
in
rolb
pop
lock
or
or
adc
pop
rcll
push
sbb
jnp
data16
fcoms
popa
out
cmp
or
push
xor
or
sbb
fstps
and
int3
adc
loop
movsb
or
sbb
jb
and
push
mov
bound
push
dec
inc
fsubrs
nop
lcall
and
or
sub
push
push
mov
sahf
or
or
lods
jo
xchg
dec
das
fadds
or
das
test
add
add
push
cmc
xchg
bound
leave
ret
dec
push
icebp
inc
mov
inc
add
jg
sar
jns
adc
push
xor
in
sub
pop
push
jne
add
pusha
mov
sbb
add
imul
adcl
add
or
rol
push
pusha
rclb
cmp
mov
shlb
lods
dec
dec
cmp
into
push
pop
push
outsl
sbb
divb
or
sbb
push
or
pop
mov
cmp
dec
aam
jnp
fs
aaa
add
and
inc
push
xchg
int
xchg
and
xchg
add
ds
inc
inc
stos
adc
or
cmp
push
mov
cmp
sbb
jb
cmc
mov
xchg
aaa
loop
adc
or
hlt
hlt
adc
xor
adcl
sbb
sbb
add
daa
pushf
xchg
mov
adc
aam
inc
adc
dec
rcr
or
clc
sub
pop
push
cmp
sarb
xchg
lods
gs
and
xchg
push
adc
sbb
mov
sarl
lret
push
xor
adc
mov
jl
pusha
mov
pop
push
dec
test
pop
jecxz
enter
test
popa
fs
sbb
fsubrp
fs
repz
or
push
mov
dec
jae
pop
cs
push
pop
or
js
inc
push
mov
repz
pop
pop
in
int3
sbb
jmp
pop
sub
dec
xor
sbb
or
sarb
shlb
roll
das
loope
mov
test
lock
sahf
dec
mov
shrd
add
jg
add
mov
ds
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
sbb
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
or
sbb
mov
test
or
inc
cltd
sbb
lahf
xor
mov
mov
cmp
hlt
test
mov
mov
sub
mov
push
inc
add
pop
push
lods
out
inc
xorl
pushf
mov
add
fisubl
dec
push
imul
adc
sahf
out
loopne
popa
push
pop
inc
sub
jns
daa
lea
adc
addl
in
mov
sbb
adc
lock
cmp
xchg
mov
adc
xchg
or
loopne
dec
lds
mov
mov
and
test
movsl
pop
xor
sub
sbb
lock
push
push
inc
push
lock
and
enter
aas
xor
or
adc
jnp
push
addr16
cmp
mov
or
dec
dec
jbe
push
sbb
pop
jne
mov
mov
andb
dec
jae
cmp
jne
pop
cs
jp
fucom
adc
imul
and
aas
push
sub
fiadds
and
push
lret
imul
mov
inc
cwtl
insb
and
test
and
push
pop
cmpsl
add
xor
adc
push
icebp
adc
pusha
fs
sbb
jo
lock
jae
je
jno
push
cmp
pop
sti
push
push
add
je
pop
xchg
lods
sub
sahf
mov
sbbb
bound
jp
sub
push
push
add
xchg
imul
arpl
and
and
xor
jne
fs
or
es
sbb
xchg
push
dec
jne
mov
daa
push
insb
push
ret
rorl
inc
inc
cmc
sub
add
test
add
add
mov
xor
adc
test
add
ljmp
and
add
push
mov
push
mov
fcmove
cltd
xor
push
adc
cmp
sbb
inc
sub
out
add
lret
inc
enter
test
mov
lahf
clc
jne
inc
iret
pop
cld
je
roll
adc
in
mov
jle
aad
ret
clc
or
jnp
rcll
gs
pop
daa
sbb
mov
jne
cmpsl
ficoms
or
fs
sbb
mov
sarb
add
sbb
pusha
xchg
lea
add
add
mov
std
mov
jg
jle
and
dec
xor
pusha
adc
xchg
inc
testl
in
and
inc
xchg
outsb
jge
jle
jl
xor
lock
ss
and
fdiv
ss
es
push
lahf
jbe
push
call
enter
scas
mov
pop
and
ljmp
xchg
sbb
adc
in
pop
fildl
ficoml
mov
pop
and
xchg
adc
pop
xor
aad
cmpsl
rcrb
mov
in
lret
inc
ja
pop
adc
ss
sbb
mov
jmp
in
adc
add
inc
ds
adc
fistl
cmp
sub
js
loop
sub
cmp
jne
jbe
mov
pop
xor
adc
cltd
pop
std
mov
mov
inc
lret
in
adc
outsw
movsb
lods
inc
pop
das
fadds
pop
test
xchg
or
and
insl
push
pop
hlt
test
push
pushl
outsb
insb
adc
and
and
push
stos
shlb
mov
inc
cmp
pop
add
xchg
mov
inc
test
loope
fmull
test
sub
pop
adc
nop
mov
mov
mov
shlb
jo
pop
ss
inc
lea
mov
push
jl
or
dec
push
pop
mov
jnp
jae
xor
jmp
push
mov
mov
xor
push
mov
add
mov
cwtl
lea
and
pop
outsl
jmp
and
add
sub
aas
jb
imul
sub
test
adc
test
mov
cmpl
imul
mov
idivl
jns
pusha
outsb
pop
mov
xor
ret
push
xchg
jbe
cmpsb
cmp
push
dec
jns
pop
push
popa
jno
flds
fistpl
mov
in
inc
clc
adc
mov
and
inc
add
popf
fcomp
nop
hlt
xchg
sbb
dec
cmp
jne
daa
xor
in
sbb
dec
push
mov
mov
dec
sbb
mov
jo
push
inc
sbb
je
or
mov
mov
ss
add
scas
push
pop
adc
sti
leave
incl
es
lret
xorl
pop
dec
and
and
lea
inc
xor
cmp
lock
lret
lock
mov
lret
add
mov
mov
xchg
add
dec
lcall
sbbb
loope
pop
xchg
add
dec
mov
movswl
mov
lock
ljmp
call
and
ficomps
inc
pop
mov
call
nop
enter
jnp
cmpsl
jnp
cltd
cmp
movsl
adc
sar
loopne
repnz
loopne
pop
pop
or
inc
bnd
add
adc
xchg
mov
jmp
add
add
fiadds
sbb
jle
test
xor
dec
push
incl
sbb
lea
addr16
push
mov
inc
add
or
pop
sub
add
jg
adc
mov
dec
cmp
or
inc
or
cs
jmp
mov
lods
mov
mov
bound
jle
push
or
clc
cld
rorl
ja
dec
cmp
inc
mov
mov
push
adc
shrl
add
out
push
dec
adc
push
pop
lock
fsubs
mov
xor
xor
add
pop
adc
imul
mov
or
pop
jns
dec
add
pop
or
and
push
popa
jl
jnp
nop
fldlg2
out
jo
enter
cwtl
pusha
cs
add
in
sub
mov
inc
jmp
sbbl
subl
pop
in
xchg
jl
or
insl
fwait
out
rclb
cwtl
ret
mov
hlt
es
add
cld
push
sbb
aam
cwtl
test
add
inc
cmp
mov
sbb
and
insb
sub
movsb
jb
xchg
jo
je
lret
js,pn
jl
push
mov
test
inc
sub
test
inc
xchg
inc
push
add
fs
fs
ss
dec
push
fbstp
dec
push
leave
xchg
add
dec
dec
inc
add
insl
jns
fldenv
fcoms
inc
gs
pop
lods
or
fsts
dec
cld
daa
movsb
add
movsl
nop
out
adc
jae
push
cmpsl
test
insl
jo
lret
icebp
movsl
mov
inc
in
inc
out
mov
inc
xchg
dec
jae
enter
pop
cmpsl
mov
cmp
jae
outsl
adc
sbb
push
mov
ret
push
add
or
jge
and
mov
mov
push
mov
push
int
in
sbb
sbb
mov
ficoml
insb
in
jl
imul
je
push
xor
or
repz
push
adc
aam
sub
hlt
or
jmp
ret
mov
dec
out
push
add
inc
xchg
adcl
je
loopne
adc
pop
dec
jle
xor
pop
sub
adc
cs
and
mov
orb
xor
cmpsb
push
pop
in
mov
mov
shl
xchg
leave
and
cmpsb
mov
xchg
bound
sub
insb
mov
add
aaa
repnz
mov
testl
mov
xor
sub
mov
mov
cmp
ret
lret
xor
les
nop
inc
dec
add
xor
mov
sub
xor
leave
sub
xchg
push
aas
xor
movsl
and
mov
movsb
scas
nop
mov
shl
mov
xor
bnd
cmp
push
add
sti
xchg
adcb
andb
testl
adc
push
xchg
imul
aaa
xor
jecxz
inc
outsb
pop
dec
scas
sub
sub
outsl
cmpsl
int
xor
xchg
inc
sbb
mov
ret
or
mov
ret
xor
addr16
scas
xchg
aam
ds
inc
ss
inc
dec
fwait
dec
test
pop
sub
cmpsl
clc
and
xchg
add
repnz
test
leave
or
xchg
fs
sbb
cmp
add
mov
cmpsb
jge
sbb
pusha
jl
sub
push
mov
or
inc
or
out
aaa
xchg
push
pop
idiv
out
cmp
je
mov
adc
xchg
sub
and
sbb
pop
fidivs
push
and
ficoms
repz
jnp
add
jmp
movsb
xorb
push
and
addr16
inc
xchg
pop
jp
mov
add
fwait
mov
cwtl
pop
call
and
nop
out
mov
and
loopne
inc
push
pop
fs
fisubs
add
repz
lcall
pop
mov
cmp
mov
pop
lods
aas
pop
sub
mov
mov
cwtl
mov
cltd
pop
in
gs
and
rorb
test
inc
popa
mov
or
inc
daa
movl
out
or
test
ljmp
lcall
add
and
inc
xchg
nop
mov
inc
dec
add
fwait
outsb
vmread
add
out
dec
ss
notl
push
or
sbb
sub
adc
add
sbb
cmpxchg
pop
pop
mov
ja
repz
lods
push
shlb
cld
adc
sahf
cmp
push
jns
je
jl
and
out
mov
test
das
xchg
push
add
inc
insl
and
and
add
push
adc
shll
notl
add
jo
mov
dec
lcall
arpl
xchg
fs
inc
inc
and
roll
dec
pop
lahf
fwait
and
mov
rclb
inc
xor
add
cmpsb
add
inc
pop
negl
inc
test
jne
xlat
pop
sbb
rcl
add
outsb
sbb
and
sbb
xchg
adc
sbb
movsb
jnp
add
repz
xor
out
cs
push
int
fxch
and
dec
xor
sub
mov
inc
das
dec
add
pusha
sub
lock
or
pop
adc
or
push
bound
test
mov
xor
movsb
sbb
adc
out
xchg
and
pop
mov
inc
sub
dec
rolb
ja
xor
pusha
and
dec
push
ss
aas
inc
dec
stc
sub
sbb
and
or
mov
add
das
xchg
xor
mov
adc
xor
pop
xor
rorl
cmpsl
cmp
mov
mov
xor
cmpsb
mov
adc
pop
bound
jno
les
push
cmp
jle
lahf
loopne
xlat
sub
jle
fldl2t
mov
in
mov
inc
or
inc
push
movb
and
test
mov
loopne
xor
inc
pop
xlat
push
inc
in
repnz
xor
std
adc
inc
scas
mov
xor
fiaddl
imul
mov
dec
popf
dec
lods
xchg
shlb
cwtl
rclb
mov
dec
ret
cld
or
push
sub
pop
mov
int3
dec
push
stc
push
and
dec
push
repz
sbb
inc
sub
cmp
mov
sbb
loop
popf
xchg
out
aad
cwtl
xor
mov
xor
and
add
cmp
mov
stc
int3
mov
mov
dec
jae
mov
push
push
push
or
insb
and
dec
add
sub
pop
movb
lods
xchg
jle
mov
mov
push
pop
sub
aas
add
shrb
xorb
nop
add
lock
pop
add
xor
cwtl
mov
mov
insb
je
dec
aad
lcall
xor
push
push
lret
das
fstps
push
jl
xchg
jl
data16
pop
imul
xchg
lret
sub
jae
add
rcrl
fwait
dec
dec
mov
or
xor
dec
cmp
cmp
mov
movsl
pop
jnp
push
sbb
popa
ss
mov
mov
fs
push
dec
scas
jp
test
fmull
fbstp
sbb
pop
lahf
shrl
out
or
in
and
pop
imul
popf
push
mov
sub
adc
xchg
adc
jne
out
xchg
jo
test
out
mov
pop
dec
mov
clc
movsl
inc
pop
cmp
push
cmp
je
lds
adc
adc
mov
insb
and
ret
jo
cmp
rcrl
sbb
movsb
push
adc
mov
cmpsl
decb
cmp
mov
loop
or
sar
xchg
sbb
jbe
cltd
and
jl
mov
dec
sbb
sub
lds
inc
dec
lods
xor
cmpsb
jl
push
mov
adc
lods
loop
mov
ror
js
insb
xchg
adc
int
pop
jno
jne
cmp
je
test
out
jb
jg
add
je
or
jl
andl
adc
iret
je
jne
sub
mov
lods
mov
fmull
or
jo
jg
pop
adc
adc
pop
push
cmp
push
pop
lahf
lret
mov
shll
sbb
xchg
ja
mov
ficompl
adc
push
or
pop
inc
or
sbb
adc
add
orb
adc
and
lods
orl
mov
pop
mov
mov
cmpb
mov
mov
imul
mov
clc
push
or
inc
pop
or
xor
pop
loope
pop
repz
daa
inc
cwtl
inc
adcl
cltd
ret
rorb
mov
rol
sub
rclb
mov
push
or
scas
punpckhbw
xchg
pop
pop
sbb
es
inc
sbb
lods
pop
xor
adc
and
xchg
pop
and
and
arpl
jge
pop
jno
and
and
sub
mov
mov
or
mov
cmp
or
call
cmpsb
adc
imul
pop
loopne
test
add
mov
test
push
pop
cmp
push
and
mov
and
push
adc
cs
imul
shrl
int
dec
adc
subl
inc
xor
xor
rolb
test
ja
xor
loope
aad
mov
mov
inc
sub
inc
xor
or
outsb
inc
dec
xor
lahf
out
jle
jno
arpl
ja
insl
mov
and
das
popf
je
dec
push
sbb
std
dec
sbb
sbb
daa
push
push
stos
mov
je
xor
scas
push
mov
push
xor
jge
in
mov
cld
mov
shl
and
inc
cmp
inc
add
add
sbb
sbb
add
inc
jne
dec
lods
jne
subb
mov
push
aam
push
mov
dec
xchg
or
inc
and
jb
mov
rorl
aad
or
sub
nop
xchg
divb
and
inc
fbstp
or
mov
gs
push
xorb
test
lods
inc
icebp
aas
or
rcll
pop
sub
add
lods
sub
fadd
xor
ret
adc
movsb
outsb
call
aad
push
pop
or
stos
adc
adc
xchg
iret
pushf
test
cltd
pop
xchg
mov
orb
jl
clc
call
xchg
sbb
add
jmp
icebp
or
xor
lcall
and
inc
cmp
jg
pusha
inc
dec
add
push
mov
scas
jno
jge
cli
jae
push
push
push
rcll
ds
mov
popf
jecxz
or
call
mov
cmp
add
in
jmp
scas
push
sbb
jae
sbb
jnp
hlt
imul
cmp
adc
pusha
pop
add
ret
xor
cmc
mov
dec
mov
inc
cmp
adc
push
jmp
sub
push
scas
test
xor
adc
or
test
xor
pop
mov
and
adc
adc
push
imul
xchg
ret
sub
test
adc
sub
lcall
and
and
sbb
out
ljmp
push
dec
push
fdivr
or
fcoms
imul
xor
fimuls
shlb
sbb
insl
cmp
add
pop
loope
jmp
mov
xor
push
cmp
psraw
incl
xchg
in
movsl
mov
xor
xchg
inc
jo
add
arpl
sub
sahf
adc
dec
xor
and
shlb
aaa
push
pop
xchg
xchg
cmc
add
inc
dec
mov
stos
dec
mov
lahf
enter
mov
shll
cmp
mov
pop
or
inc
cmp
sub
and
test
xadd
loop
push
adc
fldl
adc
shl
xchg
add
xchg
out
adcb
jnp
pop
inc
push
inc
push
pusha
jecxz
lock
sub
xor
call
jmp
incb
loopne
addl
inc
sbb
adc
push
cmp
mov
hlt
xchg
lds
dec
jnp
sub
adcl
mov
popl
sbb
repz
jl
mov
lock
adc
out
pop
push
cs
bound
divl
in
mov
sbb
jnp
ds
sbb
enter
call
lahf
and
mov
mov
pushf
inc
mov
mov
mov
clc
leave
adc
adc
fimull
mov
jnp
mov
ror
sti
mov
adc
jne
mov
xchg
in
test
imul
mov
or
mov
cmc
push
sbb
push
inc
inc
ret
cmp
or
jmp
xorb
and
push
push
insl
push
dec
test
dec
loope
and
movsb
push
mov
shlb
push
mov
sbb
adc
fstl
and
dec
cmp
jl
movsb
mov
int3
pop
sub
sbb
shll
jp
popa
insb
push
push
je
mov
insl
loop
sbb
inc
adc
aaa
fdivrs
sbb
sub
and
divl
jo
inc
loopne
cltd
xor
int
mov
adc
inc
bound
pop
and
cmpsb
aam
mov
dec
and
sbbl
fstps
inc
dec
xor
dec
or
and
rcll
enter
mov
sbbb
daa
and
ret
dec
aam
insl
sub
pop
fisubl
mov
or
scas
or
adc
add
je
push
mov
jmp
cwtl
test
cmp
pop
pop
mov
inc
xchg
cmpsl
sbb
inc
xchg
xchg
mov
dec
hlt
pushl
hlt
mov
dec
clc
popa
clc
inc
mov
mov
and
add
inc
xchg
mov
add
adc
cmpsl
cmp
mov
jecxz
add
lahf
rclb
add
nop
add
cmp
out
jle
movsb
loopne
test
fdivrl
push
jg
clc
sbbl
jne
scas
add
mov
xor
and
and
fiadds
movsb
shlb
mov
jge
and
repnz
jno
and
and
jno
stc
es
cwtl
in
cmp
imul
in
xchg
rclb
push
jo
xor
nop
xchg
dec
jmp
inc
dec
jo
call
sub
sahf
testl
xor
lret
ja
imul
or
add
xlat
out
shrb
scas
adc
xor
or
mov
out
rcrb
cwtl
mov
cmpsl
or
fs
dec
in
arpl
dec
jge
pop
shl
inc
xchg
push
dec
inc
jmp
loopne
push
aas
xor
movsl
cmp
adc
pop
push
lock
outsl
inc
fcoms
cmp
mov
pop
lods
add
fadds
movsb
icebp
cmpb
push
push
xchg
fildl
cmp
shl
mov
mov
das
test
and
and
mov
push
xchg
xchg
shrl
adc
sub
popf
test
test
pop
lock
aaa
cwtl
ret
push
add
dec
cmp
es
or
or
dec
popa
cmp
or
nop
push
shlb
lock
mov
clc
mov
xor
xchg
mov
cmp
cli
test
movl
push
pop
push
fwait
dec
out
sbb
jg
pop
mov
and
xrelease
inc
push
mov
or
xor
sbb
jmp
adc
dec
cmp
test
add
inc
ja
add
pop
xlat
pushf
pop
test
inc
cmp
subl
stos
jb
push
test
cltd
or
xor
les
jno
fdiv
fcoml
mov
addb
ret
jae
les
mov
dec
test
inc
das
jmp
fs
pushf
push
push
or
int
sub
inc
lods
dec
add
sub
add
xchg
pop
xchg
lcall
add
incl
ret
push
add
decl
addb
sarb
lcall
add
dec
add
cmpsb
mov
sub
movsl
mov
cwtl
lods
mov
or
repnz
pusha
dec
outsb
jne
dec
mov
and
test
jae
mov
movups
inc
cs
sub
jge
or
or
popa
jb
add
test
push
jle
adc
stos
add
xor
ja
push
mov
stc
loopne
cmc
bound
insb
add
mov
lcall
movsb
popa
inc
int3
push
dec
mov
pcmpgtw
and
adc
mov
add
int
jle
imul
sbb
movsb
push
xor
push
out
add
pop
fnstsw
icebp
jo
out
adc
pushw
xchg
push
inc
push
gs
and
push
aam
cs
add
adc
mov
ret
cltd
push
mov
cld
push
or
dec
fstps
int
imull
push
or
adc
in
es
pop
mov
add
cmpsb
dec
lret
dec
fidivrs
push
xor
inc
lods
aam
sbbb
inc
or
inc
ds
imul
push
pop
in
push
mov
mov
mov
nop
in
and
int
xlat
sub
xlat
xlat
sahf
out
inc
mov
lods
push
int3
in
enter
lock
pmullw
or
xchg
sub
pop
stos
add
addr16
lods
out
aad
mov
inc
add
sub
fstpl
mov
cmp
repz
sbb
cmp
movsb
scas
and
fwait
cld
pusha
cli
cwtl
sti
mov
test
pop
pop
sbb
test
das
sbb
dec
mov
cmp
fdivr
pop
fdivr
push
lods
stc
in
and
jnp
cmp
idivl
daa
pusha
nop
cmpsl
pop
sbb
jo
sbb
inc
dec
clc
inc
add
inc
add
test
test
add
arpl
imul
adc
cmp
insb
or
inc
add
add
hlt
imul
out
gs
dec
cmp
or
push
and
fs
or
fdiv
js
dec
inc
std
sub
imul
dec
cwtl
push
lock
in
cmp
inc
dec
add
push
jge
dec
and
inc
out
xor
mov
inc
add
das
add
sbb
cld
test
repnz
inc
or
fcomps
jne
cmpsl
adc
xchg
cmp
or
das
lcall
adc
pusha
enter
pop
or
and
aas
mov
arpl
js
and
add
push
dec
pop
inc
ja
pop
mov
adc
xchg
mov
jecxz
test
jb
push
fists
cmpsl
shll
divb
cmp
outsl
push
popa
fs
or
xchg
nop
sbb
iret
sarl
int3
xorb
lea
inc
sub
inc
sbb
mov
add
mov
or
bound
andl
mov
adc
dec
cwtl
cwtl
push
add
sahf
popa
cmp
pop
mov
test
lcall
jnp
mov
and
pop
add
push
push
enter
pop
pop
in
or
adc
unpcklps
pop
cld
adc
dec
fildl
inc
or
sub
scas
lret
jmp
cmp
pop
es
dec
imul
push
xor
add
loope
aad
jl
add
push
mov
pop
xor
popf
filds
in
test
jle
cs
add
pop
in
pusha
push
add
sbb
xor
inc
imul
cmp
mov
sbb
push
or
add
loopne
rcrb
push
lahf
adc
imul
pop
dec
push
add
xchg
adc
lret
pop
cmpsb
push
adc
scas
and
cmp
mov
adc
push
je
xchg
pop
es
jnp,pn
into
cmp
or
pop
mov
movups
in
sbb
or
loope
and
push
or
gs
ds
inc
lret
push
sbb
imul
push
jo
aad
popa
jo
nop
xorb
flds
inc
dec
push
jb
arpl
fsincos
jne
jl
or
or
xchg
and
sar
in
push
cs
mov
sub
insl
popa
cmc
pusha
ljmp
sti
and
sbb
and
push
fstps
int
sub
into
push
push
inc
push
mov
mov
inc
hlt
pop
insb
loopne
sarb
nop
adc
and
cmpsl
popf
and
push
fmuls
sbb
mov
push
push
js
repnz
or
xor
sbbl
fstl
clts
and
and
adc
cmp
xor
cmp
fbld
cmpsb
adc
shll
or
push
imul
jecxz
push
xor
mov
xor
push
leave
pushf
sbb
mov
jo
popa
test
paddsb
out
into
out
inc
ds
sub
sbb
mov
jg
sbb
loope
mov
xchg
nop
pushf
xlat
test
and
inc
jbe
mov
daa
sub
sti
ret
mov
xor
xor
ss
cmp
inc
inc
push
aaa
dec
aam
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
push
rorb
add
push
push
pop
pop
pop
cmc
or
imul
sub
mov
push
xor
pop
js
cs
xchg
dec
lret
push
mov
xor
ljmp
xor
adc
sub
testb
mov
push
cli
and
add
add
addr16
jns
add
add
mov
int3
lcall
rcr
push
xchg
mov
pop
push
pop
cmp
incb
dec
loopne
pop
jb
mov
rorl
lods
dec
sub
sub
clc
add
fildl
je
push
jp
push
jg
rcr
jle
cmc
shll
inc
jge
roll
divb
lahf
mov
mov
cmp
dec
rcll
mov
and
mov
lret
and
cmp
mull
cmp
mov
add
adcl
imul
mov
nop
jmp
inc
sbb
insb
movsb
inc
inc
dec
pusha
sub
dec
call
clc
push
jecxz
mov
lods
or
leave
sbbl
and
aas
les
and
testl
push
sbbb
in
sbbb
adc
pop
xchg
sarb
mov
hlt
je
test
pop
inc
and
sbb
mov
mov
mov
push
cvtps2pd
inc
adc
cmp
jmp
into
or
push
loop
inc
rol
xor
push
or
rorl
fcoms
scas
sub
addl
mov
pusha
idiv
mov
jmp
xor
cs
push
xor
dec
sub
lahf
sub
dec
push
pop
scas
mov
nop
dec
and
jg
xchg
or
jmp
inc
sti
push
add
or
mov
inc
jge
pop
pop
mov
sub
ret
jle
shll
xchg
es
icebp
outsl
hlt
push
push
data16
lea
movl
pop
dec
cmp
aas
push
cmp
ja
insb
fwait
loopne
sbb
xor
pusha
je
mov
add
addr16
loopne
add
mov
lret
arpl
pop
ret
das
call
mov
addb
daa
icebp
insl
clc
lret
loope
mov
pusha
pop
jne
cwtl
ljmp
test
push
jmp
push
jle
sbb
fsubs
es
sub
in
push
in
outsl
sub
lods
cmpsl
lods
sbb
cmp
ja
jo
xlat
cld
lahf
xchg
imul
inc
ljmp
dec
jns
in
push
xor
int
je
pop
cmp
aaa
in
sub
cmp
orb
lahf
movsl
aas
jb
in
or
inc
notl
inc
ret
inc
mov
call
ja
rclb
ja
pop
inc
cmpsl
nop
xchg
and
sbb
inc
sbb
sub
je
adc
xchg
mov
sbb
inc
imul
cmp
pop
mov
push
dec
popf
cmpsl
fs
inc
je
rorl
aaa
push
pop
inc
lret
push
jl
add
cmpb
iret
nop
cmp
fnop
sbb
cmpxchg
add
mov
aas
cmp
fbld
sub
inc
push
push
nop
sbb
dec
sbb
test
pusha
xchg
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
out
and
mov
fwait
aas
mov
je
or
xor
dec
dec
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
sub
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
and
pop
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
adc
xor
aas
jmp
enter
call
mov
dec
jg
cmpl
adc
test
sub
cmpsb
mov
inc
femms
mov
inc
dec
js
push
orw
nop
cmp
add
in
nop
or
add
rolb
mov
or
add
jp
jnp
sub
mov
jl
cmp
pop
imul
faddl
fucomi
dec
pop
pusha
pusha
insb
cmp
push
fmul
xor
pop
enter
push
or
subb
cmp
mov
test
push
outsb
imul
movl
inc
in
or
insb
mov
cmpb
and
loopne
cmc
in
adc
mov
int
aaa
je
sti
lcall
sub
jo
push
adc
pop
flds
lods
cmp
pop
icebp
stc
ja
leave
mov
or
cmp
int
mov
push
idivl
iret
ret
mov
adc
ja
xor
pop
cmp
inc
push
imul
cmp
orb
push
fadds
lret
mov
jge
test
dec
jo
iret
in
insb
sti
cmp
xor
test
lock
adc
divb
cmc
in
push
or
push
in
andl
dec
jmp
inc
push
adcl
xchg
shl
lret
shrb
inc
pop
cmpsl
sbb
pop
sub
or
dec
sti
xchg
adc
fs
out
or
and
das
enter
fsubs
sub
hlt
mov
push
add
test
pop
push
jp
mov
or
movsb
inc
ret
mov
adc
add
int3
dec
and
es
push
pop
lods
testb
shrl
mov
shlb
aas
dec
cld
fstps
xchg
insb
mov
mov
sbb
mov
insl
shrb
fbstp
adc
add
gs
adc
ficoml
test
je
jp
mov
mov
in
jns
mov
lock
cmp
mov
or
sahf
jo
sub
es
popa
decb
inc
mov
xor
inc
loope
stos
jg
push
adc
ret
jo
and
xor
iret
pop
ds
lea
shll
xor
inc
cli
pusha
leave
mov
and
or
adc
lahf
mov
pop
inc
cmp
push
aad
mov
mov
mov
sarl
jmp
jbe
sbb
push
pop
mov
xor
shlb
or
pusha
sbb
outsb
pop
pop
out
je
or
lock
cwtl
jge
adc
int3
outsb
xor
daa
sub
cld
cmpsb
lock
je
ds
imul
inc
out
add
xchg
adcl
iret
nop
nop
push
adc
mov
and
loopne
jecxz
xchg
clc
call
call
mov
xor
ljmp
add
cmp
adc
and
inc
cmp
aaa
add
rorb
mov
and
dec
subb
lahf
hlt
jb
or
sub
sbb
xor
sbb
mov
and
lock
addl
push
cs
adc
lret
or
mov
stos
rcl
iret
ss
aad
jle
jg
fcmovnu
mov
add
sbb
or
push
fwait
sbb
xchg
xchg
sahf
or
orb
dec
loope
or
xor
mov
rcll
cmp
je
mov
subl
mov
sbb
or
int3
push
mov
cwtl
out
push
adc
test
repz
or
mov
xchg
nop
and
daa
test
scas
xchg
adc
push
mov
xchg
add
pop
iret
xor
data16
clc
add
push
imulb
je
inc
or
xchg
fsubs
scas
icebp
push
jns
and
mov
pop
mov
ss
or
adc
mov
shl
push
stos
inc
cmpl
aaa
shlb
movb
cmp
pop
cwtl
and
test
jmp
or
pop
out
and
sbb
hlt
enter
ljmp
std
push
smsw
xchg
lock
call
mov
inc
xlat
and
rolb
adc
pop
inc
data16
sbb
cmp
icebp
and
mov
mov
lods
les
push
sbb
ss
addl
inc
test
ret
mov
nop
into
xchg
xor
fldl
mov
jns
enter
gs
lock
loopne
imul
inc
xor
sub
xor
dec
and
push
sbb
sbb
adc
lret
rolb
sti
in
cltd
xchg
decl
push
fsub
clc
push
add
jle
mov
cmp
invd
das
pop
fisttpl
cmp
cld
adc
dec
cmpsb
jecxz
jmp
orl
dec
adc
pop
mov
jnp
lock
inc
cwtl
pop
add
and
test
jge
repnz
cmp
push
push
inc
adc
fsubr
dec
icebp
push
fsubrs
push
lods
cltd
js
lods
add
mov
ficoml
pop
mov
sbb
sbb
jge
clc
jecxz
popa
cmp
enter
add
popf
mov
sub
push
or
and
es
or
popf
push
add
inc
push
sub
and
sub
roll
mov
movsl
and
mov
cmp
pop
mov
test
ja
mov
aad
stos
movsb
pop
lock
push
lock
adc
add
sub
shrb
sbb
sbb
push
lods
mov
xor
bound
mov
iret
hlt
cmp
push
sbb
hlt
hlt
pop
into
hlt
sub
inc
add
push
rep
lock
imul
test
shlb
inc
jne
mov
push
inc
xor
leave
lock
rorl
sbbb
cld
add
jp
or
ds
pop
fists
sqrtps
loopne
xchg
cmp
int3
gs
outsl
lea
or
add
rorb
adc
or
ja
ja
outsb
aaa
fisttps
sbb
or
push
inc
cmp
dec
add
hlt
push
inc
xchg
jne
mov
pop
mov
ja
or
sbb
jne
loopne
ret
aas
sbb
pushf
call
inc
les
enter
movsl
pusha
dec
push
pushf
and
lcall
cld
mov
adc
and
xor
popa
pop
push
pop
fisttpl
xchg
cmp
sbb
daa
sub
xlat
xchg
pushf
or
add
pusha
aaa
sub
mov
iret
add
mov
sub
jmp
in
push
ret
sub
xor
or
sub
mov
sub
add
inc
add
pop
pop
xchg
loope
shlb
adc
dec
call
ret
pop
lods
inc
sbb
call
or
test
fdivl
inc
mov
les
xor
leave
imul
and
sbb
push
push
call
jo
sub
mov
xchg
jl
call
xor
mov
lret
clc
sub
clc
orl
pop
and
and
dec
lock
clc
leave
add
add
mov
add
je
dec
xor
arpl
push
mov
pop
mov
addl
pop
sbb
or
push
inc
and
pop
test
test
inc
movsb
leave
cltd
mov
and
sbb
cmp
cmp
pop
push
out
cmp
sbb
loopne
cmp
add
cmp
push
mov
data16
rorl
jmp
outsl
sbb
sub
jecxz
push
xor
shl
mov
das
in
xlat
ret
adc
andl
test
cmp
jno
inc
add
or
push
lcall
adc
push
mov
cltd
lcall
or
or
mov
and
push
je
cmovl
popa
add
cmp
push
pusha
inc
push
sbbl
jmp
fistl
add
pop
mov
rolw
add
sub
fs
pusha
push
int
jl
xor
movsb
js
mov
xchg
dec
aas
sub
movl
pop
sub
or
xchg
out
nop
sbb
dec
call
pop
fsubl
mov
pop
sub
dec
mov
orl
mov
xchg
fchs
or
pop
lahf
mov
add
xor
imul
ret
cmp
cwtl
cld
incl
mov
mov
xchg
push
inc
push
mov
xor
sbb
push
in
test
dec
out
test
bndldx
mov
pop
adc
xchg
out
sbb
int
inc
cmp
mov
ds
out
dec
popa
sarl
add
cltd
lret
or
subl
add
cld
ja
sbb
int
in
add
push
mov
xor
cmpb
push
loopne
lock
and
push
add
ret
testb
pop
adc
xchg
or
lea
out
mov
xor
scas
clc
xchg
adc
lods
and
aad
sbb
lock
scas
inc
sbb
inc
pop
dec
xor
shll
dec
dec
frstor
xor
in
lea
fadds
pop
and
and
sub
mov
pop
xchg
and
gs
jb
fwait
cli
pop
or
mov
cmp
inc
lret
and
jmp
aaa
cmp
ret
lods
mov
or
mov
and
and
popf
rolb
pop
add
or
pop
push
or
mov
mov
cmpsl
cmp
pop
or
je
jmp
insb
mov
or
mov
mov
jno
in
fldcw
cmpsl
out
aas
je
adc
pop
lcall
add
mov
push
xchg
dec
movl
sub
aam
inc
cmp
sub
mov
es
pop
mov
mov
mov
nop
dec
lds
mov
int
inc
inc
push
inc
inc
sbb
rcll
dec
je
outsb
ret
or
adc
ret
lahf
fs
xor
xor
lea
mov
jmp
andb
shlb
xchg
push
ljmp
jge
loopne
aad
ds
and
xor
popf
mov
adc
outsl
pop
in
daa
stos
pusha
pop
cmp
es
cwtl
cmp
fs
fstps
add
pushf
or
movb
leavew
fcmovu
mov
xchg
es
movsb
xor
call
bound
js
cmp
sbb
push
pop
pop
mov
inc
shlb
sub
jge
outsb
pop
xchg
imul
jbe
and
stc
gs
popa
cmpsb
lock
or
sub
ljmp
pop
mov
jp
adc
inc
nop
jne
dec
out
pop
addb
push
mov
push
les
ret
pusha
pop
popf
push
inc
push
jae
lcall
xchg
mov
popf
lods
jmp
clc
push
cmp
sahf
gs
insb
popf
xchg
adc
add
inc
and
mov
xor
xlat
dec
ret
push
lcall
inc
lahf
and
add
dec
sbb
repz
inc
and
fwait
or
jle
push
cmpsl
and
and
fs
aas
lret
sbb
and
xchg
sub
dec
pop
or
xor
and
int3
cmpsl
ret
cmp
in
push
push
mov
lret
add
mov
js
test
test
insb
cmp
fsubr
and
xor
mov
test
add
loopne
outsl
sub
jmp
jg
or
pushl
add
mov
sub
mov
popf
push
lahf
mov
mov
adc
dec
mov
inc
jp
sub
inc
leave
xchg
xchg
inc
inc
cld
incl
sbb
dec
or
out
push
or
pop
movl
adc
cmp
lods
out
scas
sbb
add
out
cmpl
loop
ret
iret
mov
imul
js
push
mov
enter
lcall
shlb
ret
mov
fs
jle
stos
inc
lret
push
cmp
inc
test
jnp
adc
test
pop
pushf
xchg
popf
sti
std
dec
cmp
mov
pop
mov
cwtl
xor
push
add
daa
ror
enter
mov
mov
push
stos
iret
ja
es
push
mov
push
xchg
scas
es
pop
mov
inc
pop
xor
popf
mov
xor
jge
inc
inc
xchg
sub
clc
sbb
jmp
mov
jle
push
push
data16
and
mov
xchg
and
fisubrl
push
pop
cmp
inc
ds
xchg
push
cmpsb
cmpsl
movsb
arpl
scas
and
adc
inc
aas
and
jb
pop
sub
pop
and
leave
xor
leave
inc
jb
inc
or
or
pop
je
and
mov
or
fs
push
pop
adc
cs
xor
insb
sub
mov
iret
inc
mov
mov
mov
scas
xor
or
in
fs
push
insl
xor
push
push
cmpsl
add
int3
sbb
jb
xlat
jl
jl
inc
or
js
ja
scas
in
lea
rolb
add
adc
xchg
into
xor
loopne
enter
mov
add
mov
adc
push
rcl
mov
test
adc
add
mov
and
aas
xorb
mov
push
lods
jecxz
adc
in
inc
fwait
cltd
bound
sub
push
sti
inc
imul
mov
pop
push
rcl
rclb
mov
call
rol
or
inc
mov
add
inc
cmpsb
inc
imul
push
notl
mov
mov
inc
push
xchg
adc
lret
in
add
out
jae
ficoml
dec
jne
or
pop
cld
add
out
stc
pop
js
enter
inc
inc
push
lcall
fucom
pop
fsts
pushl
push
ret
mov
js
test
jmp
pushl
dec
inc
add
adc
and
mov
movhps
insl
add
push
orl
add
xchg
sub
scas
pop
sub
sub
imul
mov
mov
push
int3
add
call
sbb
xchg
imul
out
inc
inc
stos
mov
cmp
mov
sbb
hlt
or
sbb
add
xor
imul
scas
add
test
or
hlt
sbb
in
loopne
in
mov
leave
rolb
popf
mov
inc
enter
sbb
dec
dec
xchg
and
jle
or
les
jnp
sub
pop
xor
test
les
sbb
cmp
dec
push
sbb
cmpsl
pop
dec
xor
xor
sbb
aam
je
push
imulb
jno
cmpsb
repnz
pop
iret
les
rclb
aam
mov
rcrb
sbb
cmp
enter
lea
movsl
cmp
dec
fwait
jl
data16
int3
push
stos
push
inc
adc
lds
inc
push
gs
test
rcl
inc
mov
negl
scas
add
stos
xor
adc
jne
push
and
js
xchg
dec
mov
jns
call
dec
fimuls
insb
xor
add
inc
jmp
fdiv
rcrl
xor
xchg
imul
xor
sti
mov
xchg
cmp
dec
jmp
inc
fistpl
punpckhbw
imul
loopne
pop
dec
movsb
lock
repnz
test
orb
divl
loopne
pop
sub
adcl
cmpsl
or
test
pop
iret
add
pop
leave
cmpsb
jno
inc
mov
popa
sbb
add
popa
mov
into
xchg
jne
insl
cltd
and
lods
push
sub
or
mov
sbb
cmp
outsb
sub
xor
test
js
push
and
aad
sbb
aaa
push
mov
pop
ja
fwait
or
pop
test
stos
loopne
sbb
shlb
sarb
test
xlat
call
popf
into
mov
test
sub
dec
or
pop
cmp
mov
pushf
sbb
inc
iret
xorl
lods
and
xchg
inc
imul
sti
and
add
add
pop
decl
sbb
sti
jl
inc
mov
je
sbb
cmp
js
movb
push
addr16
mov
dec
ret
xchg
mov
pop
inc
sbbl
mov
imull
cmpb
movb
popa
adc
int3
daa
add
pop
fistl
xchg
jne
loope
in
fsubl
add
mov
jle
aaa
dec
and
dec
inc
jne
jnp
test
cmp
mov
jne
mov
adc
cmpl
popl
mov
cli
orb
or
adc
pop
push
cmp
add
nop
sti
and
inc
fs
roll
xor
jp
lret
push
sbb
mov
data16
and
inc
arpl
add
adc
push
mov
add
fsubr
and
fwait
cmp
jno
js
or
or
sbb
pop
adc
lret
jae
dec
pushf
adc
stos
inc
xor
fistpl
and
mov
lret
cmpsl
outsl
out
fwait
mov
pusha
or
cmc
dec
and
mov
pusha
push
pop
ret
push
lahf
imul
subl
or
xchg
cwtl
ret
add
or
cwtl
inc
dec
nop
push
add
pusha
call
outsl
hlt
xchg
and
pop
stos
mov
adc
gs
and
push
xor
pushf
mov
out
push
mov
push
jp
hlt
jl
push
sarl
sbb
fs
ljmp
or
sub
daa
gs
pop
xorb
or
call
pop
rclb
shlb
aam
fwait
pop
add
imul
test
js
jb
adc
int3
js
inc
mov
add
pop
jmp
pop
pop
or
daa
push
insb
xchg
add
and
in
and
sti
pop
sbb
or
test
mov
hlt
jg
jnp
jg
stc
pushf
or
and
fs
inc
into
aas
lahf
ss
test
incb
cmp
xor
adc
or
out
pop
push
insb
inc
sbb
or
sbb
or
ret
push
adc
add
or
inc
dec
lret
push
inc
sub
xor
mov
hlt
scas
cmp
inc
dec
dec
jecxz
popa
jno
inc
out
adc
mov
xchg
add
fcompl
shlb
mov
push
add
cmc
popa
fwait
xchg
jbe
or
jbe
jecxz
test
ret
jl
mov
fcoml
in
mov
fwait
test
test
pushf
je
add
adc
jecxz
pop
ret
cmp
xor
add
add
cwtl
pop
leave
arpl
add
mov
testb
add
add
push
add
xor
push
jo
pop
mov
loop
mov
xchg
mov
mov
add
mov
inc
mov
cli
data16
imul
cmc
add
dec
test
push
jge
inc
sub
or
adc
inc
pop
add
shrb
subb
push
pop
pop
in
mov
fisubl
scas
cwtl
xor
repz
cmp
mov
cltd
nop
jbe
push
pop
xor
dec
and
sarb
xchg
push
mov
or
mov
repz
cmp
loope
sub
or
add
push
rorl
pop
push
movsb
or
xorb
pop
cmpsl
cwtl
cmovae
sbb
or
add
xor
ffreep
outsb
push
sub
push
pop
push
adc
and
mov
mov
cli
add
rolb
ret
xor
push
shl
jle
fstl
dec
ret
ret
pop
mov
insl
mov
cmp
add
dec
repz
iret
push
jle
hlt
jne
lea
hlt
adc
xor
jmp
xor
push
test
xor
push
pop
lods
sti
mov
insb
xchg
pop
fadds
lahf
fucomp
sbb
mov
and
push
add
cmpsb
push
add
or
inc
sbbb
cmp
pop
clc
jb
out
dec
xor
jbe
or
insb
fisttpll
das
insb
inc
inc
iret
sbb
xor
addl
cmp
and
lea
orb
cltd
dec
push
sarb
add
sbb
adc
xchg
mov
test
add
push
sub
arpl
xor
add
mov
push
in
sbb
les
dec
js
jecxz
or
pop
testl
pop
hlt
das
mov
mov
inc
or
jge
add
xchg
iret
cmp
adc
cmpsl
lock
inc
jmp
inc
addr16
clc
std
or
xchg
cmp
or
in
sbb
pusha
adc
fs
or
mov
pop
inc
mov
xor
sbb
cld
test
enter
dec
inc
dec
inc
leave
push
push
xor
test
scas
dec
iret
cmp
push
nop
push
sub
mov
daa
in
xor
and
xor
pop
or
ret
sbb
test
or
mov
xchg
add
or
jmp
xor
inc
into
push
sbb
cmp
leave
test
je
pop
push
dec
fs
test
or
push
das
mov
push
incb
and
out
push
push
jmp
and
sbb
jge
xchg
lret
aaa
xor
inc
sub
out
push
jge
fs
hlt
cmpsb
ret
fisttpl
pop
adc
mov
xor
dec
lock
movsl
jge
push
mov
pop
aam
inc
shlb
xlat
aam
or
push
push
inc
in
fimuls
and
into
ja
jno
in
stc
and
mov
cmp
mov
inc
mov
cli
inc
sub
movsb
pop
mov
aaa
jmp
sbb
into
adc
adc
xor
or
or
sbb
add
xor
jne
callw
or
loop
pop
or
jns
jno
mov
lret
or
inc
in
sub
add
inc
into
or
scas
sbb
xchg
in
out
pusha
mov
aaa
in
xchg
sub
andl
lcall
popa
lods
je
push
ss
hlt
js
leave
push
clc
pushf
cltd
call
mov
test
add
ds
mov
xor
inc
insb
jae
dec
or
cmp
je
jb
test
adcb
add
test
outsb
cmp
arpl
xchg
xor
inc
hlt
add
pop
inc
pop
js
adc
and
add
sbb
rolb
lea
mov
push
push
jmp
adc
fsubrl
push
sbb
mov
popa
adcl
jo
aas
mov
orb
add
push
adc
xchg
out
push
xor
ret
aas
cmp
or
cmp
xor
adc
cmp
mov
arpl
fcoms
sub
sbb
jp
pop
imul
cwtl
mov
or
arpl
inc
cmp
mov
or
rcrb
lret
add
adc
dec
xorl
int3
mov
pop
adc
jg
adc
cmp
jne
xor
aaa
fcmovne
adc
add
cmp
shlb
add
dec
cwtl
push
pop
iret
sahf
xchg
jns
cld
inc
out
inc
daa
adc
lcall
add
and
add
loop
repz
in
int
insl
aam
mov
or
mov
js
xchg
adc
loop
sub
outsb
imull
inc
pop
mov
test
sub
sbb
xor
push
pop
jb
push
insb
pmuludq
add
int
add
nop
into
sbb
or
mov
push
vmwrite
repnz
sbb
nop
hlt
xchg
jg
adc
data16
les
lcall
std
jmp
daa
sub
js
out
sub
mov
xchg
add
enter
sub
xchg
lea
stos
add
negb
std
mov
loope
pop
inc
sub
loop
aad
pop
and
inc
push
aam
adc
aam
mov
jl
add
cltd
dec
loopne
mov
mov
adc
nop
inc
xor
jp
cmp
mov
pop
icebp
lret
inc
dec
sbb
mov
and
mov
fimull
cmp
push
or
add
cli
add
addl
mov
cltd
sbb
sub
xor
adc
xor
xor
jge
adc
sub
inc
mov
ficoms
mov
add
clc
ds
or
sub
sub
pop
testb
add
in
enter
repnz
xor
pop
pop
xor
jg
sub
roll
or
into
adc
and
sbb
fcoml
pop
xchg
push
shr
loopne
je
cmp
data16
shl
js
sub
nop
inc
stos
push
test
dec
sbb
add
mov
mov
popa
mov
mov
cmp
adc
xchg
mov
fmuls
add
fchs
jge
mov
fistpl
xor
dec
sub
dec
cmp
push
in
dec
pop
add
inc
fmuls
and
push
xchg
jns
pop
in
loope
dec
leave
inc
jnp
jne
loope
fdivs
dec
test
xchg
push
dec
mov
insb
or
add
jl
cmp
dec
repz
fstp
sbb
push
lds
jecxz
xor
movsb
cwtl
and
test
filds
inc
jg
push
mov
push
arpl
pusha
add
shlb
dec
mov
xor
or
sbb
add
xlat
sti
dec
movl
addl
push
test
cmp
mov
push
add
movsb
adc
inc
fiaddl
push
popa
mov
add
call
inc
jb
pop
je
lret
add
xchg
jne
pop
cmpsb
dec
push
or
in
dec
xor
jp
or
mov
adcl
jmp
jge
xor
sbb
and
repnz
jns
cmpb
rorb
inc
out
push
mov
in
pop
and
add
leave
or
int3
pop
add
daa
lods
sub
jge
lock
pop
std
adc
cmp
mov
repnz
xor
xor
lret
lret
and
mov
push
scas
inc
mov
lahf
test
lcall
sub
fld
ja
sub
mov
pop
imul
lock
outsb
and
inc
push
stos
adc
mov
push
sbb
popa
gs
ficomps
xor
mov
jg
jmp
push
mov
stos
xor
or
dec
dec
stos
imul
xor
or
cmpsl
mov
outsb
sbb
or
cli
add
jne
inc
xor
in
cmp
xorb
mov
aaa
pop
push
xchg
popa
iret
cmpsb
mov
xchg
lds
push
test
mov
outsl
xor
cmc
jmp
xchg
mov
call
add
jne
inc
ret
sbb
pop
ret
sub
sbb
sbb
arpl
xlat
mov
jne
lret
adc
adc
xchg
cmp
cmp
cmp
inc
jg
push
rol
test
push
adc
das
daa
loopne
shlb
cmp
leave
das
pop
adc
out
xor
ljmp
mov
dec
jl
inc
sbb
xchg
inc
js
ret
mov
scas
arpl
and
pop
test
ret
sbb
cmc
nop
rclb
lret
and
and
push
ljmp
sub
sahf
out
push
rolb
dec
ds
sahf
out
inc
inc
or
pop
faddl
out
xchg
cmp
cmp
dec
xor
out
jns
jnp
dec
fsubrs
les
push
cmpb
cmp
and
cmp
mov
push
adc
dec
xor
jae
mov
es
lods
roll
pop
sarb
nop
fsts
mov
jle
and
dec
xor
ret
jne
mov
jno
lahf
mov
lods
jnp
adc
jno
inc
ret
adc
xchg
push
lahf
cmp
dec
add
mov
in
stc
lret
inc
movsb
push
into
add
clc
mov
add
bound
add
mov
mov
leave
add
add
add
push
add
gs
sbb
popa
je
mov
sahf
or
add
daa
dec
add
out
pop
push
dec
or
loop
xor
adc
cmp
and
pop
pop
xor
add
jmp
add
inc
or
repnz
push
imulb
dec
push
dec
sbb
inc
ja
push
pop
pushf
decb
push
pop
sub
and
pop
mov
push
add
movl
push
mov
testl
dec
add
mov
inc
jo
add
sbb
in
push
inc
mov
ret
dec
add
adc
pop
pop
push
insl
mov
fs
jo
add
add
fs
enter
cmp
or
in
mov
cmp
test
in
jo
inc
push
push
pop
sbb
cs
arpl
xchg
out
inc
mov
and
in
push
or
sub
cs
das
mov
push
xor
ja
pop
lret
or
insl
xchg
and
popa
js
fwait
jbe
xlat
pop
in
add
sub
mov
push
sbb
and
or
push
inc
pop
stc
pop
or
push
inc
push
pop
inc
add
push
inc
push
inc
scas
pop
fcoms
call
shl
outsb
clc
pop
jbe
inc
ja
push
shrb
xor
jns
and
xor
les
push
push
pop
in
inc
jp
ret
xorb
xchg
pop
xor
addb
imul
jbe
or
inc
dec
inc
jp
jns
push
xchg
dec
or
mov
and
add
jecxz
sub
adc
lahf
pop
sub
push
bound
dec
mov
mov
pop
ret
cmp
adc
push
ds
es
or
jae
dec
dec
mov
mov
and
sub
ss
mov
add
add
prefetch
or
cmovs
mov
fisttps
sbb
out
mov
das
mov
popa
and
cmp
or
and
mov
test
shl
int
pop
add
push
jb
xor
sahf
push
fs
data16
aaa
add
gs
add
daa
jmp
or
jns
xchg
mov
jo
mov
mov
sub
add
sbb
or
or
int
lret
push
adc
cmpsb
xchg
add
or
sahf
push
or
add
out
cltd
sub
pop
sbb
or
pushf
pusha
ret
jo
addr16
adc
jo
scas
cmp
adc
push
arpl
and
pop
and
push
gs
cltd
loopne
adc
lea
mov
xor
xor
and
mov
xor
mov
rorl
mov
fs
out
mov
mov
push
jb
insl
popa
jb
or
or
mov
pushf
cmpsl
adc
scas
push
outsb
pusha
popa
add
repz
jo
xorb
or
orb
lea
xor
lret
pop
push
xchg
arpl
dec
imul
or
iret
add
enter
or
sbb
loopne
push
rcr
ficomps
sbb
roll
mov
jo
xchg
cmp
sub
dec
das
sti
ret
rcrb
das
xchg
lret
add
adcl
push
jo
jg
push
dec
outsb
jnp
add
mov
fs
loopne
mov
or
clc
pop
add
inc
test
adcl
dec
pop
xchg
add
lcall
xor
cmp
imul
pop
push
xor
push
inc
cwtl
sub
pop
inc
add
stc
jb
inc
cld
pusha
insb
inc
mov
add
inc
jl
inc
sbb
stc
add
test
add
imul
push
inc
mov
imul
in
jb
insb
inc
pusha
jae
sub
bnd
add
addb
inc
push
repnz
mov
inc
les
mov
divl
movsb
sbb
lahf
and
ja
mov
repz
mov
cmp
in
push
push
xor
push
push
iret
fs
or
mov
jno
and
add
ljmp
mov
add
add
add
adc
push
dec
xchg
inc
or
insl
mov
pop
call
add
or
mov
test
test
jp
mov
stos
sub
or
or
mov
pushl
ljmp
ljmp
shl
bound
or
rorb
pop
push
mov
xor
push
clc
pop
nop
cs
movsb
push
faddl
push
in
xchg
hlt
mov
push
push
adc
movsl
sti
into
idivb
clc
clc
cmpsb
ds
xchg
push
int3
jae
cmpsl
fnstcw
fadds
sarb
jl
sahf
imulb
cwtl
es
popf
sahf
push
adc
fnstcw
insb
fsubs
mov
mov
inc
mov
push
lahf
cmpsl
cmp
nop
test
cs
mov
idivb
xchg
jne
imul
pop
pusha
or
pusha
testb
rcrb
push
mov
mov
xor
or
pop
inc
sbbb
cmp
add
sbb
imul
pop
push
adc
aas
pop
lret
shll
cwtl
and
push
or
adc
pop
bswap
loopne
js
push
add
insb
add
mov
push
insb
dec
loope
call
add
rcll
xchg
scas
dec
cs
gs
jg
push
inc
add
push
mov
insl
add
aam
or
adc
add
bound
je
sub
lcall
adc
sub
jne
jecxz
stos
and
cs
pop
loop
inc
scas
push
mov
or
fisubl
xchg
push
in
xlat
cmp
mov
push
lock
dec
inc
mov
sbb
or
sub
or
inc
mov
dec
mov
xor
mov
push
add
rcl
rolb
and
les
into
lds
mov
add
and
ret
sbbb
mov
and
inc
lods
push
test
arpl
das
pop
sbb
int3
adc
dec
or
or
dec
mov
incl
push
sub
or
xor
jmp
movsb
stc
aam
mov
icebp
jmp
mov
sub
dec
sub
cmovs
jbe
lock
out
pop
jns
xchg
pop
push
or
xor
xor
or
cs
insb
fs
dec
fucomi
dec
jecxz
les
adc
push
ret
or
inc
pop
jg
insb
or
jnp
inc
jnp
xor
mov
xor
loopne
and
mov
outsb
inc
vzeroall
inc
mov
xor
jnp
mov
stc
mov
pop
xor
jle
and
xchg
xchg
mov
xor
enter
addb
adcb
push
out
push
sbb
iret
cmp
and
push
mov
in
cmp
and
jne
data16
ja
pshufw
icebp
cwtl
jle
incb
dec
insl
fbstp
inc
repnz
inc
es
movsl
jbe
jle
jl
jmp
aad
pop
xchg
or
in
cmp
cmp
andb
sub
aas
or
pushf
pop
xchg
pop
push
inc
push
stc
in
inc
cmp
push
ds
cmpb
nop
aas
and
sbb
loopne
cwtl
cwtl
cmp
imul
sub
ret
xchg
je
nop
ja
cli
rolb
or
lock
jns
and
fadds
dec
outsb
pop
enter
jns
mov
test
in
mov
jl
test
and
orl
inc
test
leave
dec
dec
or
stc
inc
sahf
push
or
push
add
mov
test
lock
test
inc
inc
and
and
in
inc
xor
adc
dec
in
inc
push
orb
in
inc
push
mov
cmp
ja
push
in
inc
enter
push
in
inc
jns
dec
xor
mov
cmp
add
repnz
inc
inc
push
test
adc
push
dec
mov
cs
dec
push
push
hlt
loopne
sahf
push
das
mov
popa
imul
inc
pop
pop
enter
jbe
rcrb
inc
cmp
adc
les
mov
rcrl
and
jp
pop
lods
inc
pop
in
inc
orb
rcrl
mov
and
repnz
stos
hlt
test
or
xchg
fsubl
mov
mov
xchg
int3
mulb
into
mov
les
lods
push
mov
add
push
pop
sub
inc
adc
testl
adc
xor
inc
imul
inc
mov
iret
push
push
mov
inc
cmp
lret
inc
das
cmp
sysret
sbb
dec
inc
xor
dec
ds
mov
inc
xchg
test
nop
mov
scas
in
inc
and
add
adc
mov
lods
pop
mov
add
mov
dec
push
andps
or
mov
add
pop
or
stos
adc
jge
mov
sbb
xchg
add
mov
sub
jne
cmpsb
out
jmp
push
je
pop
add
push
inc
lock
jne
movsb
aaa
and
call
mov
xor
push
fisubrl
stos
sub
int
les
add
mov
pusha
xchg
sbb
pop
es
sub
inc
pop
inc
ljmp
push
or
adc
dec
pop
mov
bound
fsubrs
add
lret
jl
divb
adc
out
push
hlt
mov
jo
inc
xchg
xor
addl
mov
inc
cld
mov
sub
and
ficomps
ss
stc
lds
or
mov
in
insb
pop
xor
lcall
dec
popa
pop
push
or
inc
inc
mov
ja
dec
cmp
je
push
sbb
or
ss
push
push
or
test
sbb
push
orb
jmp
and
xor
lahf
pop
in
cmp
dec
or
xor
inc
ret
or
movnti
xrstors
xor
ficoms
cmp
inc
or
or
xor
mov
cmp
sub
inc
cs
movsl
into
inc
inc
mov
xor
add
xchg
push
xchg
push
call
mov
jno
jns
sub
je
pop
pop
cmp
dec
xor
cmp
cmp
clc
and
ror
movsl
in
push
loopne
dec
sbb
insb
push
pushf
lock
inc
fdivp
mov
add
add
cs
in
or
adc
pop
es
adc
sbb
sub
fisubl
jb
andb
xchg
int3
movsl
popa
mov
out
ja
testb
sbb
xchg
adc
add
jbe
cs
add
add
xchg
jb
push
fiadds
mov
xchg
push
sahf
xchg
pop
push
jb
test
aam
in
dec
add
dec
enter
negl
ret
pop
pop
pop
push
push
lds
push
es
add
inc
jns
or
test
xchg
and
out
js
stos
pop
add
mov
mov
movsl
push
test
or
push
inc
or
pop
cs
fwait
adc
and
or
sbb
notb
ds
push
inc
add
jge
add
pop
and
es
xor
or
sub
push
inc
rorb
push
adc
aam
inc
test
push
or
outsb
or
shlb
pop
dec
sarb
add
or
sub
or
imul
xor
or
mov
pop
sub
pop
cld
add
sbb
inc
and
inc
add
sub
insl
mov
inc
jno
add
add
xor
push
test
repnz
and
xor
xor
push
hlt
es
mov
dec
and
in
or
adc
dec
leave
mov
xor
add
xchg
push
sub
sub
jne
dec
add
ret
adc
push
add
je
inc
mov
jg
cwtl
inc
xlat
cmp
cmpb
mov
lods
push
push
cmp
xchg
mov
jmp
sub
and
add
mov
inc
add
adc
xchg
sub
pop
mov
lods
jecxz
fadd
repz
xchg
mov
cli
adc
dec
nop
add
sbb
jle
imul
xchg
add
lock
mov
cmp
push
fcomps
add
adc
ret
rorb
and
pusha
adc
inc
mov
insb
inc
sbb
addl
std
popf
push
pop
hlt
neg
jmp
add
test
push
push
inc
pop
xor
xor
push
xor
jmp
push
test
es
or
push
repnz
push
mov
add
mov
cmp
aas
xchg
test
movsb
jmp
outsb
loopne
lret
mov
setl
cmpsl
into
fiaddl
push
sbb
aas
addl
inc
add
hlt
xor
movswl
push
shrl
sub
xorl
ss
push
lret
daa
xchg
jecxz
pop
sbb
rorl
scas
imul
fs
xchg
sbb
shl
inc
cmp
lar
mov
xor
or
jp
ss
cmp
adc
dec
or
adc
and
lret
xchg
pop
test
lea
lods
inc
mov
mov
test
or
ret
rclb
scas
adc
xchg
sti
and
cs
sub
or
jmp
xor
push
jmp
insb
aaa
and
dec
sub
dec
pop
push
aas
sbbb
incl
dec
cmp
ret
fimuls
adc
inc
jmp
insb
leave
mov
sub
push
fisubs
mov
sbb
jmp
sahf
out
push
and
dec
xchg
popf
out
clc
cltd
daa
or
aaa
add
jp
sbb
jo
dec
inc
xor
jl
mov
jle
push
ss
adc
dec
inc
dec
out
fs
shll
and
sbb
sbb
push
sbb
or
and
pop
mov
cmp
movb
push
push
jne
mov
inc
sbbb
or
imul
push
cli
movsb
jno
cmp
andb
pop
sub
or
and
inc
push
push
dec
inc
filds
lock
fisubrs
pusha
popa
inc
jp
adc
pushf
or
xchg
popa
shlb
inc
jae
pop
fs
inc
pop
add
push
add
adc
out
add
push
hlt
outsb
sarl
je
pop
das
rcrb
mov
inc
enter
sbb
pop
xchg
sahf
mov
inc
nop
xchg
dec
xchg
mov
push
pusha
push
and
pusha
mov
pop
or
inc
or
dec
xchg
xor
xchg
add
xor
ds
cwtl
lret
or
dec
insl
and
xchg
push
add
mov
js
dec
push
dec
fadds
cwtl
xor
and
bound
add
cmp
jo
xchg
les
stos
or
cld
mov
popa
dec
xchg
cmp
cmp
dec
xor
inc
sbb
cmp
cmp
sbb
shr
inc
pop
add
ja
js
or
push
xor
and
cmp
cmp
xor
test
push
sub
jb
cmpsl
xchg
pop
sub
or
xlat
cmpsl
push
sbb
and
mov
lods
adc
stos
lock
lods
ret
push
and
push
mov
dec
sbb
clc
sbb
sub
rorb
loop
shll
nop
add
xchg
adc
popf
nop
inc
or
cmp
test
dec
dec
ljmp
out
aas
or
notb
jle
mov
add
movb
mov
dec
lea
scas
ret
xchg
int3
rolb
or
or
test
add
xor
fmuls
je
and
cwtl
jno
outsl
xchg
sub
jno
insb
incl
cmp
andb
push
inc
or
sub
test
mov
xchg
push
sub
and
mov
ds
push
mov
dec
addb
inc
ret
add
mov
je
cmp
pop
in
dec
dec
add
lcall
push
add
mov
mov
sub
mov
mov
add
iret
lock
inc
mov
or
add
inc
mov
fldl
rclb
push
dec
loope
xorl
pop
jae
sub
add
jge
mov
por
mov
pop
dec
and
mov
in
push
inc
cmp
xchg
add
jns
emms
push
inc
lock
pop
sub
push
adc
inc
fcmovu
pop
lock
adc
sarl
xchg
pop
je
mov
sbb
sbb
or
stos
outsl
pusha
adc
fists
pop
or
xchg
test
sbb
test
leave
push
ja
jmp
pop
in
mov
add
loope
sub
loope
pushf
or
negb
inc
mov
xor
or
and
dec
lret
inc
popa
or
repnz
inc
inc
mov
aaa
cmpsb
aad
dec
adc
mov
xor
mov
or
loopne
adc
cli
xor
fcoml
mov
push
cmp
or
sbb
test
sbb
adc
clc
adc
into
push
adc
push
push
lea
push
add
mov
cmp
and
addl
outsl
or
lds
sbb
fucomi
sahf
mov
pop
mov
dec
mov
jle
mov
mov
inc
es
call
in
sbb
mov
or
call
xor
test
xchg
sub
jge
or
out
adc
xchg
push
hlt
fidivs
std
adc
sub
inc
dec
scas
cmp
xchg
add
sbb
adc
mov
or
aam
popa
in
add
ja
repnz
dec
pusha
add
xchg
mov
push
add
xorb
repnz
aaa
lea
movb
cwtl
je
pop
dec
je
mov
addl
push
outsb
add
je
leave
inc
adc
dec
test
hlt
mov
stos
pop
fstps
xor
pop
cmp
pusha
jne
jg
and
jg
mov
cmpsl
pop
test
pop
jns
ret
mov
ds
sbb
mov
or
jae
inc
sub
xor
pop
dec
push
adc
xchg
test
testb
mov
sbb
pop
sbb
fcoms
decb
adc
test
addr16
pop
push
cmp
mov
pop
and
and
out
or
add
arpl
jb
pop
lds
addl
addb
adc
or
cmpsb
sahf
xchg
mov
pop
or
jg
mov
cmp
push
inc
mov
mov
lods
rcrl
pop
sbb
or
xchg
jae
cmp
add
dec
sub
xchg
pop
popl
gs
pop
cld
and
pushf
enter
add
rorb
add
cmp
inc
inc
or
pop
lods
in
shll
addr16
or
or
aaa
mov
scas
loope
stc
cltd
aam
push
sbb
fs
outsl
in
inc
mov
enter
imul
dec
jp
sbb
testb
and
mov
movsl
mov
daa
fisttps
add
ret
pop
js
pushf
and
xor
or
mov
jl
nop
xor
clc
cs
cwtl
xchg
dec
cmpl
inc
cmp
das
aaa
mov
cltd
lea
daa
orl
lret
xor
lock
sub
adc
and
mov
fldl
int3
sub
sub
or
sbb
add
or
and
jl
in
sbbl
stc
fisubl
es
notl
inc
sub
lcall
adc
and
fs
int3
push
test
adc
jne
sbb
and
or
insb
cld
cmpsb
push
push
stos
adc
test
mov
dec
add
jl
jp
dec
out
es
jmp
add
cli
mov
cwtl
pop
mov
mov
push
xchg
or
xchg
xchg
popa
inc
out
xchg
pop
inc
xchg
fwait
mov
sbb
xor
lods
jecxz
popa
cmp
cmp
stc
push
mov
inc
add
cmp
inc
out
out
mov
int
mov
mov
sbb
push
lock
and
or
and
sarl
movsl
ror
add
in
pop
xchg
pop
inc
lods
shlb
ljmp
iret
push
xchg
sub
dec
in
neg
inc
popf
fmull
xchg
add
inc
mov
or
daa
pop
andb
rorb
outsl
bound
xchg
lods
inc
insl
mov
fsubs
mov
ja
loop
mov
push
loope
sub
rcl
cs
sub
setne
dec
mov
pop
insb
dec
jp
jle
jne
cmp
fs
add
cmp
scas
xchg
testb
imul
lds
mov
in
cmp
enter
pop
xchg
loopne
lcall
push
mov
sbb
dec
add
push
imul
out
daa
lods
leave
inc
mov
xchg
fcoml
mov
fcom
xor
adc
ss
out
cltd
mov
imul
jo
dec
pop
dec
add
hlt
adc
push
cld
pop
shlb
push
and
push
and
jo
xchg
clc
adc
das
cmp
sbb
popa
dec
out
pop
jbe
push
or
xchg
repz
sbb
pop
addb
xchg
fnstsw
and
lods
aaa
add
and
push
push
adc
push
jb
sbb
leave
add
insb
and
sub
test
nop
jae
fwait
dec
lea
mov
xchg
mov
in
enter
push
loope
sbbl
and
out
add
test
inc
inc
mov
and
inc
or
loope
jo
out
fildll
mov
xor
mov
pop
or
mov
sbb
call
das
add
popa
sbb
movsb
ret
arpl
out
inc
nop
iret
adc
adc
jns
dec
add
mov
and
mov
scas
push
mul
jo
int
test
in
shlb
imul
cmpsb
xor
sub
lods
cmpsb
pusha
add
mov
xor
lahf
pop
push
mov
stc
shll
or
add
sbb
pop
sub
push
add
imul
hlt
lods
sarb
inc
inc
mov
and
aas
cmpb
hlt
xchg
jnp
sbb
lock
outsl
sbb
das
xlat
andl
pop
pop
pushf
cwtl
mov
cmpb
jp
jl
cmpl
addl
or
mov
out
mov
add
adcl
push
xchg
add
nop
add
out
repnz
mov
mov
mov
aas
push
dec
cs
enter
sbb
frstor
enter
pop
jmp
cmpl
sahf
mov
pusha
xchg
fdiv
cmp
sub
add
mov
or
mov
mov
push
pop
repnz
inc
cmp
sub
mov
add
ss
xchg
xor
xor
gs
pop
sub
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
out
mov
push
outsl
sbb
mov
aad
lock
mov
push
cwtl
pop
mov
in
fwait
or
lods
mov
add
aam
shll
add
je
xchg
inc
dec
dec
insl
stos
xchg
dec
xlat
int3
rcrb
push
push
or
mov
add
test
pusha
mov
int3
adc
jo
mov
mov
fiadds
jbe
or
ficompl
stos
add
cmpb
insb
xchg
enter
xchg
push
pop
testb
fildl
mov
cmpsb
adc
pop
xchg
cmp
cwtl
enter
sub
orl
insb
test
cmp
lods
popf
xor
and
add
add
adc
test
add
lahf
mov
push
out
and
xchg
pop
fiaddl
inc
popf
cmpsb
push
pop
mov
sbb
std
loop
inc
xor
mov
mov
sub
add
sub
lahf
pop
add
and
lea
cli
inc
jg
mov
in
ret
jb
or
push
dec
or
test
dec
xchg
cmp
sbb
jg
insl
lcall
cmpb
xor
pop
pop
aam
pop
jne
sbb
fsubrl
cmpsb
loope,pt
jne
inc
xor
pop
loope
or
fistpl
sub
addr16
and
or
inc
imul
mov
xchg
push
cwtl
repz
push
jbe
fiadds
add
nop
cs
jbe
inc
aam
lret
push
mov
lret
stos
in
jo
lock
test
scas
movsl
sub
lea
adc
insb
pop
or
add
or
rcrb
lea
sub
test
dec
or
pusha
mov
mov
mov
dec
jnp
mov
push
inc
dec
test
jmp
ret
dec
push
stc
pop
hlt
xor
inc
mov
hlt
pop
pop
dec
sub
mov
and
in
lret
sub
shlb
gs
fld
loope
mov
xchg
hlt
nop
add
rorb
pop
push
out
arpl
mov
lock
arpl
cmp
loope
andl
pop
xor
clc
push
rorb
or
adc
adc
adc
lock
mov
or
add
add
mov
data16
xor
repnz
inc
or
or
xor
sbb
add
adc
arpl
and
sbb
adc
leave
movsl
adc
or
inc
outsb
xchg
in
mov
sub
fs
push
mov
or
add
jb
jbe
add
cmovs
sarl
dec
xor
inc
shlb
shlb
pop
leave
cmp
push
adc
xchg
mov
call
arpl
mov
xchg
stc
add
mov
popf
sub
je
and
sarb
add
mov
mov
fiaddl
add
out
pop
sbb
dec
xchg
add
popa
cmp
fidivs
es
shr
add
loope
xor
loopne
adc
ret
jmp
or
daa
movsb
sub
pop
mov
popa
add
dec
jae
inc
adc
popa
dec
mov
adc
or
outsl
lcall
mov
neg
xchg
movsb
testl
in
sbb
cmp
lret
leave
sbbl
leave
arpl
push
fcmovnu
sti
in
sub
inc
pop
decl
pop
add
cs
and
add
notb
push
cmp
jle
sub
push
adc
push
inc
sbb
push
push
aaa
adc
add
andl
push
popa
or
notb
mov
addr16
or
push
adc
lds
mov
or
mov
iret
inc
add
push
pop
lret
cmp
lock
vfnmsub231ps
xor
test
adc
jne
sub
in
in
jne
push
pop
add
xchg
cld
shl
je
js
jle
mov
adc
mov
cmp
xchg
or
pop
sbb
cmp
imul
xor
and
nop
pop
and
and
xor
sub
je
adc
in
aad
leave
pop
inc
mov
test
cli
sarl
mov
aas
inc
jno
pop
inc
ds
rol
icebp
add
sarb
mov
test
jle
movsb
lea
adc
cmp
je
xchg
push
cmp
sbb
xor
bound
mov
mov
iret
jmp
sbb
daa
mov
test
inc
mov
dec
cmc
jo
movsl
and
and
xor
pop
testl
inc
lcall
xchg
movl
push
push
sbb
mul
xchg
mov
cmp
or
add
add
das
adc
bound
inc
jecxz
xchg
push
and
inc
dec
shl
cmp
mov
out
add
push
xchg
aas
addr16
fcompl
pop
sbb
inc
pop
mov
sbb
xor
insl
sbb
add
enter
and
aas
ljmp
adc
adc
shll
jae
and
por
add
cvtps2pd
es
les
jo
inc
setg
int3
jns
test
add
mov
cmpb
in
icebp
imul
xchg
pop
or
arpl
ret
sbb
add
dec
enter
xor
cmp
jl
stos
mov
xchg
test
cmpb
cmpl
es
popf
xor
pusha
ror
xchg
and
arpl
lds
push
jns
daa
xorl
std
or
mov
int
inc
adc
mov
inc
cmp
adc
mov
test
ret
hlt
je
add
mov
mov
jnp
shlb
jo
cld
pushf
movb
popf
xorl
inc
daa
pusha
push
pop
fdivs
xor
repnz
inc
xchg
adc
movsl
sbb
cmpl
hlt
xor
xchg
or
je
enter
adcl
or
push
iret
imul
std
or
and
outsb
sub
dec
je
add
push
mov
ret
inc
mov
sbb
push
add
and
jbe
sbb
jmp
int
fwait
cli
aam
popa
add
cltd
mulb
jmp
aaa
lar
cli
push
mov
lods
pop
data16
or
jae
jnp
push
pusha
inc
jmp
push
sar
cmpsl
lock
adc
push
ret
and
adc
inc
pop
loope
fwait
and
inc
add
dec
cwtl
xor
xor
imul
add
sub
sbb
andb
loopne
orb
and
push
push
inc
scas
sub
cmp
push
push
jo
inc
pop
add
jg
xchg
sub
mov
ja
mov
and
jne
repnz
fld
mov
mov
xor
pop
in
push
or
jb
in
cs
sub
mov
pop
and
sbb
dec
mov
adc
lret
or
shl
xor
bound
popa
add
out
push
dec
adc
mov
mov
inc
xor
mov
ja
add
outsb
mov
data16
push
flds
push
xor
add
cwtl
push
fidivrs
pop
lods
or
adc
cmp
pop
cmp
or
notl
sbb
cmpsl
pop
and
sbbb
xchg
outsl
sbb
push
push
mov
dec
rcr
test
mov
add
jp
sar
dec
mov
push
fisttps
sahf
aam
mov
sub
cmp
cmp
pop
add
push
cmp
fsubrp
pusha
sub
pop
dec
pop
sub
pop
sub
push
sti
addl
in
push
push
xor
adc
xlat
es
adc
add
add
aaa
mov
imul
dec
rclb
add
sbb
cwtl
mov
int
lods
sbb
inc
push
mov
pusha
pop
adc
sbb
or
pop
pop
xchg
rcl
add
push
xor
inc
sub
inc
loopne
adc
incl
add
ja
add
cltd
les
ret
cli
jne
cmpl
subb
and
call
movl
aad
pop
or
jbe
fsubp
add
aas
jb
mov
movsl
sbb
adc
pop
sub
dec
lea
mov
pusha
mov
add
loope
mov
in
and
mov
mov
lcall
push
or
jge
adcl
mov
sbb
sbb
xor
cs
mulb
add
jne
push
inc
lcall
dec
rorb
dec
das
mov
pop
xor
xor
add
inc
xchg
inc
loopne
or
and
push
mov
fdivs
sub
ret
sahf
subb
cld
add
xchg
fiaddl
cmp
inc
dec
pusha
sbb
rcr
scas
or
pop
pusha
jo
in
pop
sub
add
jo
sbb
cmp
ret
and
lret
adcb
sbb
dec
fidivrs
aas
add
push
or
sub
sbb
pop
call
mov
sub
scas
add
jo
insb
xlat
lahf
inc
in
test
or
gs
adcb
test
add
cmc
and
pop
repz
mov
scas
jae
adc
and
push
jae
in
repz
es
add
inc
xchg
mov
mov
xchg
rorb
mov
dec
xchg
add
sbb
or
jno
pop
js
shll
es
sbbl
sub
mov
xor
pop
pop
subl
inc
dec
push
ret
and
and
es
lods
test
or
adc
jge
test
jne
lea
test
pop
mov
hlt
inc
in
push
loopne
or
movhps
shll
lock
dec
shll
add
and
push
jnp
push
cmp
sti
xor
jp
cmp
aaa
orb
mov
jge
sub
mov
pop
incl
decl
clc
inc
fs
out
push
cwtl
pushf
fwait
xchg
xchg
mov
test
call
adc
and
or
loopne
loop
and
popa
and
shl
inc
or
inc
dec
mov
add
inc
cmpl
jne
inc
sahf
inc
bound
cmpl
adc
call
daa
push
inc
mov
inc
cmp
ret
faddl
fbstp
ret
insl
movsb
mov
jne
test
cmp
mov
ja
iret
or
in
sarb
cwtl
mov
or
inc
out
les
pusha
sbb
lock
ret
js
nop
out
jns
mov
dec
cmp
sahf
cs
ret
rorb
je
lret
pop
pop
sub
movsb
dec
xor
incl
dec
insl
jne
cmp
cltd
repz
sbb
fs
adc
dec
mov
movsb
arpl
pop
sbb
mov
es
jbe
jno
dec
dec
into
mov
and
add
inc
jmp
aam
push
or
pop
sbb
shrb
stos
clc
mov
pushf
rclb
adc
aam
sahf
mov
ss
add
pop
pop
popw
cmp
dec
not
mov
add
mov
xor
mov
sti
push
daa
jmp
and
sbb
movsb
mov
sbb
mov
lods
inc
loopne
mov
jmp
dec
nop
fiadds
loopne
or
lea
sbb
jne
sub
push
xchg
xchg
in
sub
jmp
jnp
jnp
or
push
fsubrl
xchg
sahf
mov
sbb
incl
cmp
mov
mov
and
pop
mov
es
jp
push
lods
mov
cltd
push
jp
sbb
outsl
nop
and
or
mov
cwtl
adc
cmp
mov
push
inc
out
sub
orl
xchg
xor
jge
mov
call
and
push
cmc
sbb
xchg
xor
dec
xchg
jbe
mov
sbb
testl
push
out
mov
pop
and
roll
mov
sahf
ss
push
adc
movsl
popa
mov
mov
shlb
pop
pop
aas
sti
decb
dec
iret
je
cmp
je
jg
sbb
mov
loopne
push
sub
mov
push
andl
sbb
cmp
and
mov
mov
test
test
test
pop
inc
adc
cs
mov
ds
cmp
sub
orl
sbb
push
xchg
push
mov
loopne
les
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
mov
dec
dec
mov
cmp
inc
cmp
lahf
js
nop
xor
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
xor
fildl
insb
cltd
hlt
fistl
pop
pop
add
dec
mov
mov
ja
dec
data16
sbb
int
dec
loope
pop
xchg
xchg
inc
push
pop
daa
lods
aam
mov
mov
xchg
mov
dec
jne
arpl
cmp
sub
and
aas
push
or
sub
mov
mov
push
inc
adc
out
xchg
mov
jmp
push
adc
sti
cmp
xchg
mov
nop
loopne
hlt
mov
push
popl
dec
push
addr16
add
shrl
or
stos
das
mov
mov
daa
push
adc
popl
jp
adcl
jno
pop
shlb
sarb
lret
testb
lods
sbb
clc
ficompl
fwait
add
test
xchg
xchg
sbb
mov
sub
sbb
dec
lock
add
mov
movl
fdivs
sbbl
js
push
sbb
add
pop
or
jo
popf
sub
imul
add
pusha
xchg
addr16
adc
mov
xchg
adc
jne
fwait
add
cmp
data16
dec
add
mov
cwtl
sbb
push
or
stos
lret
outsb
or
xchg
and
addb
pop
adc
loopne
inc
sbb
add
sahf
pop
add
inc
xor
add
fmul
and
fbld
imul
mov
cmc
pop
addr16
xor
js
addr16
pop
xchg
dec
add
roll
insl
or
sbb
push
xor
or
add
xor
in
scas
dec
add
pop
out
add
cld
adc
ja
mov
lock
cmp
push
and
das
sub
inc
add
inc
movsb
inc
push
inc
scas
sub
push
xchg
cmp
add
loope
inc
daa
inc
dec
sub
rcrb
rolb
int3
aad
xchg
sbb
rclb
adc
pop
ss
arpl
push
push
mov
jbe
xor
rolb
loope
jmp
iret
dec
xor
loopne
jno
clc
inc
jo
pop
adc
jbe
mov
sbb
add
mov
or
nop
cmp
mov
pop
xchg
jae
push
inc
adc
repnz
enter
push
dec
mov
sub
shlb
push
fsubrl
dec
add
push
sbb
nop
into
push
xchg
mov
paddusb
or
sbb
jno
jno
shlb
or
popw
adc
mulb
or
or
outsb
mov
dec
jmp
pop
into
movb
fldenv
xor
add
dec
out
cmp
out
xor
dec
pop
ret
mov
addr16
lods
test
stos
out
stc
cmp
ljmp
fadds
inc
pop
adc
cmc
mov
mov
or
mov
ret
int
mov
es
add
sbb
sbb
hlt
sub
add
scas
inc
or
loopne
out
and
add
shlb
leave
xlat
outsb
out
xor
leave
sub
mov
push
add
cmpl
int
adc
add
push
add
sbb
das
mov
cmp
hlt
movb
jne
outsb
adc
inc
dec
xlat
add
and
or
cmc
sbb
xchg
fs
cwtl
mov
xchg
ficoml
pop
dec
cltd
xchg
loopne
stc
fiaddl
xor
rorb
cmp
xor
int
idivl
mov
insl
lcall
xor
push
cmp
mov
jmp
fadd
notl
xchg
lea
mov
sub
and
xchg
testb
cmpsb
jne
inc
sbb
in
cmp
adc
or
sub
clc
push
push
sub
loopne
adc
sub
js
inc
jb
or
push
fsts
sub
dec
mov
mov
sub
pop
dec
hlt
adc
in
dec
imul
mov
sub
mulb
xorl
inc
and
daa
lods
data16
and
sbb
insb
rclb
mov
psubd
add
sub
popa
or
add
int
push
loop
mov
scas
fcoml
push
loop
incb
add
jo
or
push
or
adc
in
sub
add
and
in
iret
push
inc
push
inc
dec
cmp
mov
pop
loopne
lock
gs
and
repnz
clc
push
and
sub
lahf
xor
mov
pop
dec
inc
mov
sub
and
push
jmp
jl
popa
pop
mov
xchg
cmc
dec
lret
jb
jmp
lret
gs
add
rcrb
ss
sub
int
jge
ret
xor
mov
mov
sub
mov
or
and
xchg
aaa
pop
sub
jle
push
iret
adc
call
or
bound
mov
clc
mov
sbb
sub
repnz
inc
std
add
rcrl
mov
ds
push
les
cltd
andb
dec
mov
in
rcll
sbb
pop
sub
movl
mov
pop
jne
pop
xchg
mov
sub
mov
xchg
rclb
int3
xor
test
imul
jne
arpl
gs
or
xor
cmp
or
imul
xchg
dec
jns
cvtps2pi
les
push
push
add
dec
or
or
pop
sti
jo
jmp
jne
jne
jmp
clc
xchg
subb
pop
dec
sbb
pop
inc
sbb
inc
add
pop
add
pop
mov
add
inc
popf
cmp
inc
and
mov
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
dec
pop
or
dec
icebp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
movsl
in
aaa
enter
jb
scas
or
insb
in
or
in
sub
lds
jge
test
loope
pop
push
add
add
les
push
shll
das
mov
and
mov
inc
cmp
and
fcomps
push
cmp
adc
and
dec
mov
mov
and
sbb
pushf
adc
add
xor
inc
daa
mov
icebp
addr16
inc
inc
lods
pop
adc
xchg
sbb
sbb
mov
xchg
ja
cmpb
dec
mov
pop
bound
pop
popa
inc
pop
push
add
repnz
push
cld
push
repnz
ret
sahf
inc
add
fildl
in
fisubrs
in
push
and
cmp
jg
dec
mov
popf
xchg
pop
test
adc
bnd
xchg
push
or
scas
aam
mov
inc
mov
or
sub
daa
adc
sbb
jne
jp
xor
xchg
cmp
mov
test
filds
pushf
xor
adc
rclb
xchg
pop
inc
sub
mov
ret
add
add
mov
or
inc
rdpmc
fildl
or
sbb
pop
push
por
js
jmp
cwtl
adc
pop
call
popa
sub
xchg
inc
aaa
in
adcl
cmp
out
xor
inc
and
add
add
cwtl
mov
xchg
add
mov
sub
and
nop
ja
loopne
push
nop
aaa
cmpsl
and
cwtl
sub
shrb
cmp
pop
aas
je
or
jle
add
loopne
cld
inc
inc
add
xchg
loopne
pop
stos
imul
je
mov
sbb
sarl
shll
fs
mov
aad
cwtl
test
insb
xchg
into
lcall
data16
or
arpl
cmpsb
sub
jbe
and
in
inc
mov
sub
ret
add
and
les
ds
aam
cmpb
lret
dec
out
fcmovu
sub
aad
daa
and
mov
sub
mov
push
rol
mov
arpl
mov
dec
pop
cmpsl
push
and
std
xor
add
shlb
sbb
in
pop
jl
sbbl
mov
push
pop
popa
aam
add
cmp
loope
or
cmp
out
in
jo
dec
pop
lock
jo
inc
negl
adc
push
cli
outsb
call
and
sub
mov
xchg
push
push
xor
mov
adc
and
inc
mov
sub
push
add
js
jno
dec
sub
add
rcrb
pop
adc
adc
insb
loope
lea
and
daa
mov
sbbl
nop
xlat
jnp
mov
cmp
push
fistl
mov
xor
push
inc
sarb
lods
js
shrl
nop
das
jne
mov
rclb
sbb
ret
loopne
dec
cmpsl
mov
pop
sub
cwtl
or
dec
addl
xchg
push
xchg
dec
pop
mov
inc
adc
js
push
jbe
ss
loop
incb
cs
mov
sbb
shll
push
rcll
or
scas
popa
out
insl
dec
cmpsb
or
cltd
and
dec
xchg
xchg
and
nop
add
push
pop
lock
cmp
xor
popf
cmp
test
or
push
outsl
sbb
push
ds
ret
pusha
pop
lret
xchg
xchg
xor
loope
xor
nop
or
es
push
out
lods
adcl
or
sbb
or
adc
push
push
sbb
lods
mov
add
and
fisttpl
mov
call
xor
inc
xor
add
test
and
or
scas
testl
cmpl
dec
add
cmp
popf
into
mov
push
imull
jmp
in
push
or
test
rcrl
pcmpeqb
adc
xchg
or
call
js
mov
call
or
sub
out
movsl
mov
add
sub
cmpsb
mov
pop
nop
loopne
xchg
cmpb
ret
es
stc
sti
nop
loope
nop
in
dec
mov
inc
dec
call
cwtl
fidivrs
je
lcall
push
in
dec
or
xchg
cld
and
xchg
loopne
jle
sbb
mov
sub
cmpsl
movsb
shll
mov
jge
add
ja
add
lea
in
stos
popa
push
xchg
ret
outsb
imul
and
or
jns
push
inc
test
and
cmpsb
daa
push
cltd
cmp
shrl
push
sbb
pop
ret
inc
dec
daa
or
mov
cmp
cmp
mov
fiadds
loopne
and
nop
insb
or
mov
iret
popa
add
adc
stos
hlt
mull
and
scas
adc
add
out
jo
je
or
aad
leave
push
adc
cmp
mov
mov
push
mov
add
inc
les
xchg
sub
lcall
add
ret
aam
aaa
scas
push
cmp
add
outsb
add
fnstcw
inc
adc
adc
mov
cmp
sub
mov
add
lcall
aaa
test
popa
pop
adc
lahf
jnp
cmp
mov
or
mov
inc
inc
inc
and
and
mov
adc
ss
ficomps
push
sub
ja
imul
in
sub
cld
leave
and
sbb
inc
add
sbb
xchg
or
cld
cld
repnz
cwtl
out
lods
inc
cmc
adc
or
xchg
imull
sbb
es
mov
xchg
aam
pusha
pop
outsb
add
dec
lock
jmp
inc
mov
sahf
xor
das
lds
inc
cmp
mov
cmp
sub
and
test
xor
dec
jmp
test
and
jmp
jle
pop
and
sbb
sbb
movsb
inc
out
loopne
cmp
add
cmp
cwtl
pop
dec
aam
sub
cmp
sbb
push
push
pop
pushf
xchg
xor
jl
mov
sarb
push
lods
es
add
inc
movsl
xor
and
mov
or
xor
popa
xchg
add
mov
mov
inc
aaa
test
js
fs
idivb
mov
mov
xor
sbb
cmp
mov
cld
xchg
push
inc
pop
mov
and
pop
mov
hlt
xchg
fildl
pop
jno
add
mov
lds
xchg
mov
aas
push
cltd
jbe
inc
fcmovnb
pop
dec
in
dec
cs
dec
dec
push
test
nop
arpl
cwtl
in
pop
pop
sbb
dec
jnp
or
push
push
cmpsl
es
dec
inc
jns,pn
ss
push
ret
or
inc
push
arpl
and
xchg
inc
fs
xchg
cmp
dec
push
pop
iret
inc
cmpsl
movsl
inc
popf
lods
aad
inc
pusha
jmp
movsb
insl
movsl
mov
sbb
orl
push
out
es
js
or
sbb
js
es
nop
xchg
push
call
add
daa
inc
jmp
pusha
mov
mov
sti
out
jl
or
jle
fcomps
sbb
inc
fwait
sbb
repnz
ret
cli
or
mov
jno
mov
jne
out
and
arpl
pop
cmp
stos
xor
xchg
clc
or
jmp
subb
shlb
and
fisubs
jno
fsubs
sub
in
popf
pop
push
rcrl
jg
sbb
push
mov
add
insl
xchg
mov
out
das
fsub
add
adc
daa
mov
js
mov
sub
push
and
xor
imul
scas
mov
inc
scas
push
xchg
mov
lock
out
sbb
cmc
adc
jbe
sbb
mov
jns
cmp
fisubl
into
pop
or
mov
pop
push
enter
push
inc
push
imul
into
add
or
testb
push
push
sub
into
jo
fsubs
and
jae
dec
cmp
cs
sbb
fsubr
std
sbb
cs
imul
push
cmp
jne
ret
dec
out
jno
sbb
mov
mov
mov
rolb
addb
sahf
sbb
mov
inc
sbb
imul
nop
iret
loope
cs
std
ret
cld
mov
pop
popa
and
pusha
pop
inc
adc
lods
gs
adc
shlb
and
jae
jle
outsb
insb
inc
sbb
jl
and
test
mov
aam
imul
cmp
int3
jne
cmpl
std
mov
adc
push
pop
lahf
pop
cs
leave
cmp
mov
mov
or
cmp
add
adc
shrl
or
jae
cmpsb
popf
adc
xor
mov
pop
and
lret
jne
mov
fildl
sahf
adc
dec
ljmp
das
cmp
jne
in
push
push
and
aad
lds
jp
and
jmp
movswl
loopne
ret
incl
pop
add
fmull
iret
insb
lret
stos
cmc
das
push
mov
mov
pop
mov
dec
or
push
dec
sbb
sti
cmp
pop
pop
clc
add
aad
sbb
pop
dec
ja
sbb
adc
pop
dec
inc
in
movl
es
imul
xor
fcmovnu
mov
mov
and
mov
mov
cld
out
dec
inc
pop
or
fimuls
xor
adc
cld
icebp
push
pusha
adc
test
jns
dec
mov
mov
mov
loop
insl
std
push
testb
xor
cmp
and
inc
dec
adc
cmpsl
xchg
dec
testb
and
jmp
adc
es
das
pushf
loopne
cmp
shr
adc
arpl
jle
ret
push
mov
pop
xchg
hlt
mov
addl
and
cltd
inc
mov
out
dec
jae
das
jg
cmp
cld
cltd
jl
daa
ret
dec
rolb
push
subl
jecxz
sub
jne
lret
clc
hlt
push
cmpsb
inc
test
mov
mov
cmp
cs
push
adc
pusha
in
lret
cmp
js
jns
daa
je
jmp
sbb
xor
lods
push
pushf
sbbl
and
ljmp
mov
pop
mov
or
jne
sub
add
cld
push
xchg
xchg
mov
jle
xchg
mov
jo
ja
cmp
mov
fimull
push
hlt
push
add
pop
xor
fidivrs
sarl
and
inc
and
inc
or
xor
lock
mov
pop
xor
daa
pop
add
sbb
mov
aas
xchg
or
cmp
lds
add
inc
mov
inc
push
cmp
sub
mov
cmp
dec
and
ss
add
add
mov
pop
add
inc
ja
cmp
adc
push
ds
bsr
dec
rcll
dec
mov
ret
pop
hlt
je
lods
push
negb
sbb
add
loopne
or
xlat
cmp
test
inc
test
adc
subl
movsl
pusha
adc
xor
xlat
sub
pop
jae
push
cli
insl
fisttps
mov
add
mov
ret
xchg
cltd
sbb
pop
pop
lea
gs
xor
push
xchg
out
mov
adc
and
fists
add
leave
iret
roll
mov
pop
and
add
mov
jne
inc
es
and
add
dec
inc
xlat
xlat
inc
call
mov
jmp
sbb
or
xor
es
inc
in
mov
xchg
lock
xchg
mov
out
xchg
adc
in
sbb
test
mov
fldt
sub
loop
dec
adc
repz
adc
popf
pop
test
inc
or
dec
inc
push
push
mov
add
cltd
lods
mov
mov
sub
and
cmp
mov
sbb
add
imul
pop
xlat
movsb
out
adc
mov
adc
sub
sarb
xor
push
pop
loop
nop
sbb
cmp
xor
je
testl
fcmovnbe
push
mov
cmc
enter
je
mov
inc
pop
nop
test
lock
enter
pop
xor
pop
test
ss
lcall
test
xchg
ds
mov
movsl
bound
and
lock
push
jbe
sbb
mov
adcl
cmp
stc
push
pop
xorb
enter
xchg
mov
mov
lock
clc
mov
cmp
pop
arpl
filds
loopne
dec
inc
pop
add
push
rcrb
sbb
fsubr
or
or
leave
or
ror
push
sbb
in
jno
adc
es
cmpsl
hlt
xor
adc
jp
mov
dec
dec
and
fsubr
xor
into
push
mov
push
push
cmc
and
pop
or
mov
dec
xor
mov
pop
shll
mov
pop
jne
pop
jmp
inc
xlat
hlt
xor
cmp
push
mov
and
andl
xchg
insl
dec
xor
js
mov
mov
shlb
xorb
dec
or
inc
imul
mov
lcall
add
add
sbb
pop
sbb
fiadds
pushl
arpl
daa
or
pop
lock
inc
daa
pop
notb
call
cmp
inc
popl
mov
sti
cwtl
jecxz
add
rclb
inc
loope
sbb
pop
sti
mov
addr16
pop
enter
sub
pop
daa
shlb
test
sbb
dec
inc
dec
dec
dec
inc
and
mov
ljmp
orb
rcrb
add
sub
pop
or
sbbb
jb
inc
hlt
loope
out
and
hlt
mov
imul
add
xchg
pusha
cmp
jmp
daa
je
loope
repnz
test
cmp
sub
add
repnz
xchg
jl
cmp
je
or
sub
and
sbb
dec
mov
jp
xor
nop
addl
shrl
or
scas
xchg
or
cld
sbb
daa
nop
mov
mov
stc
sbb
int3
dec
enter
rolb
mov
daa
and
cld
loopne,pt
int
jp
sbb
or
adc
dec
stc
adc
aam
pusha
inc
aam
roll
ret
pop
add
and
aam
xchg
push
loopne
inc
xlat
lods
mov
lret
dec
fs
mov
sbb
lcall
or
sub
mov
dec
inc
jo
repnz
mov
aaa
ja
xorb
mov
sub
adc
nop
adc
cmp
repz
inc
aam
mov
rolb
dec
stos
ljmp
dec
xor
mov
push
push
fs
sbb
sbb
push
push
mov
fisubl
js
pusha
adc
pop
and
pop
aam
fsubs
popa
adc
add
jmp
pop
je
das
js
mov
fs
jp
or
and
adc
nop
sbb
ja
add
cmpsb
adcb
mov
xchg
xchg
mov
sbb
orl
test
rcr
pop
mov
jo
pop
mov
addr16
je
cs
sub
addb
push
int3
andl
enter
sub
add
jp
rclb
jbe
mov
mov
aad
add
out
or
and
dec
mov
pusha
dec
mov
loop
and
lcall
or
xchg
ljmp
mov
ret
cld
pavgb
je
and
cltd
or
mov
jne
test
add
mov
rcrl
test
or
and
xor
add
jl
sbb
xchg
jne
lret
or
dec
pmullw
pop
lock
add
or
test
in
jne
lods
mov
enter
mov
inc
mov
and
xor
jns
push
push
xor
adc
adc
pop
mov
adcb
and
pop
xor
adc
lea
or
dec
pop
and
int
jbe
adc
push
adc
cmp
cmpb
pop
fadds
iret
mov
pop
sbb
push
data16
mov
xor
mov
or
imul
xor
adc
xor
cmp
shrb
fistps
fwait
out
cmpsb
xchg
and
add
clc
push
jg
adc
inc
or
push
or
lock
movsb
lods
int3
in
into
push
cmc
mov
cmpsb
jbe
lret
aas
outsb
push
lret
dec
mov
jg
bnd
sbb
inc
xor
pop
add
mov
shrl
cmp
adc
cmp
imul
sub
jge
add
bound
jb
lret
insb
js
add
add
frstor
fwait
adc
pop
push
add
frstpm(287
jnp
dec
icebp
add
push
lahf
fbstp
xor
shl
andb
pop
stos
and
or
cmp
icebp
mov
rcrb
test
mov
xor
popf
sub
xchg
lcall
bound
jmp
add
test
pop
cld
js
fsubrs
ficoms
addr16
xchg
rclb
inc
mov
mov
xchg
fistl
repnz
pusha
xchg
add
inc
int3
adc
in
add
andb
test
inc
bound
mov
jbe
push
add
sub
push
ljmp
call
mov
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lods
jle
js
mov
inc
adcb
pop
shl
aad
xlat
inc
mov
add
out
sti
xor
mov
das
call
mov
or
pop
jae
adc
outsl
push
jg
mov
sbb
or
inc
scas
shlb
jp
sub
cmp
nop
js
mov
xchg
sbb
pop
cwtl
movsb
mov
ljmp
sub
loopne
xchg
or
mov
and
and
pop
addl
push
cmp
fildl
or
pop
inc
or
add
and
dec
or
bound
loop
pushf
ret
pop
add
shll
cmpsl
pusha
dec
mov
xchg
into
lock
push
push
add
lret
sbb
sbb
push
inc
shrb
jno
mov
lds
xchg
cmp
jmp
je
xchg
fucomp
fildll
mov
mov
dec
js
mov
imul
out
and
sub
sbb
jmp
test
data16
jnp
test
jecxz
mov
or
jbe
insb
je
pop
xchg
cmp
test
nop
pusha
movsl
sbb
rol
or
stos
clc
popa
arpl
fisubl
add
pop
jo
cmc
sub
cmp
xchg
dec
fdivr
inc
je
sub
inc
push
inc
arpl
arpl
inc
push
inc
push
dec
xchg
mov
inc
pop
push
incl
adc
xlat
add
mov
sub
add
clc
pop
test
andb
mov
pop
icebp
mov
cltd
add
and
ret
iret
adc
xchg
psubq
insl
lock
int
jo
or
xor
inc
sub
xchg
xchg
sub
adc
leave
push
std
adc
hlt
push
ja
leave
pop
dec
pop
popf
mov
mov
mov
lods
sub
fwait
jl
or
adc
shrb
test
nop
cmp
shlb
push
xor
mov
call
xchg
or
fildll
and
cmp
movsl
push
or
in
mov
add
fucomi
push
jne
cmp
stos
push
or
mov
lds
push
fwait
sbb
sub
ja
xor
addb
add
cmp
loopne
pop
fwait
std
and
jnp
push
mov
sbb
test
fimuls
push
jmp
push
xchg
test
daa
mov
jecxz
add
mov
mov
add
lahf
lock
imul
insl
adc
add
and
and
cmpsl
push
xor
cli
fisubrs
test
push
sahf
lea
mov
mov
xor
enter
ljmp
cmpsl
int3
mov
xor
pushf
jnp
je
and
push
out
adc
add
dec
sub
lcall
mov
mov
jne
mov
je
or
sbb
push
inc
push
ljmp
js
inc
daa
cmp
ret
sbb
xor
xor
xor
or
inc
pushf
inc
cmp
fwait
pop
outsb
pop
imul
jmp
mov
repz
xchg
add
sbb
jl
dec
jne
jmp
int
jbe
mov
push
and
add
je
clc
add
mov
lods
fs
rolb
je
xchg
loopne
cmpsl
sbb
add
xor
sbb
jae
mov
adcb
jne
cmp
mov
sub
iret
movsl
mov
jb
in
movsl
xchg
sbb
pop
aad
icebp
xor
or
cmp
cwtl
add
adc
and
sbb
call
sbb
push
scas
cmpl
ret
out
loopne
and
sti
rcrl
ds
das
je
mov
movsl
clc
and
mov
daa
mov
add
nop
and
add
inc
rorb
fcoms
jl
sbb
add
mov
jno
push
call
push
add
leave
shll
adc
sbb
mov
lret
dec
jb
sub
movsl
add
outsl
push
push
adc
and
and
daa
and
inc
aam
add
cmp
sub
jmp
push
push
mov
sub
mov
push
sub
xor
mov
and
pop
mov
cmp
je
fs
jge
mov
jecxz
in
dec
lock
add
cmp
xchg
xor
mov
fidivrl
and
popf
sbb
lock
and
rep
push
test
repnz
lret
push
shrl
inc
test
push
adc
fucomi
adc
sti
add
add
and
or
fs
int3
js
push
inc
in
or
flds
dec
cmp
shl
call
jmp
dec
jno
and
movsb
sbb
inc
or
mov
in
inc
test
xchg
add
movsb
add
mov
in
flds
add
inc
or
jno
insb
popa
movsb
and
xchg
cmpb
pusha
adc
and
add
and
push
rcrl
or
test
pop
mov
pop
lods
or
out
sbb
inc
rolb
mov
nop
mov
add
mov
pop
sarb
pop
xchg
aam
add
sub
stos
popf
push
and
mov
lods
xchg
imul
add
add
xchg
xlat
adc
cmp
sub
add
sub
aaa
pop
xor
dec
rclb
push
or
fsubl
inc
mov
xchg
and
xor
push
test
inc
cmp
cmp
test
out
ret
daa
div
shlb
jge
inc
imul
inc
dec
push
add
sahf
daa
fs
hlt
push
or
pop
mov
sbb
pop
jg
dec
push
jns
and
notl
shr
and
push
lods
pop
popa
loop
nop
das
cmpb
inc
pop
insb
popa
pop
fistpl
fldenv
fimull
fistpl
add
je
iret
nop
sub
jns
test
faddl
add
inc
aas
cmp
xor
aas
fstp
cltd
add
shlb
in
cmp
sub
add
pop
rcrb
loop
or
mov
and
pop
jne
movsb
add
leave
dec
mov
movsl
imul
ret
pop
inc
cmp
shlb
sbb
or
pusha
mov
adc
sub
lock
clc
mov
dec
cltd
sbb
inc
pop
xor
push
cmp
jne
lahf
dec
or
inc
dec
dec
xchg
adc
pop
lock
add
and
cmp
add
scas
and
mov
iret
mov
int3
add
jp
add
add
hlt
adcb
test
cld
xchg
add
sti
dec
add
cmp
lcall
mov
mov
test
xchg
sub
xor
push
arpl
inc
outsb
or
insl
add
sbb
rclb
sub
push
xchg
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
pushf
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
jnp
int3
cmpsl
dec
mov
xor
push
jp
cltd
or
fistps
mov
test
cmp
xor
add
je
cmp
cmp
xchg
lods
fcoms
mov
ja
cmpsb
mov
pop
and
mov
nop
pop
mov
push
fisttpll
sbb
push
xlat
test
daa
push
inc
or
add
or
icebp
ljmp
or
sbb
rcll
jp
or
or
and
les
adc
push
popa
xor
jge
mov
daa
dec
lahf
mov
mov
pop
pop
pop
cmpsb
push
sbb
adc
fdivrl
add
sub
xchg
filds
adc
test
mov
mov
gs
xchg
inc
adc
popa
inc
loope
xor
stc
or
sti
outsl
es
or
pop
pusha
jne
xchg
shl
lcall
mov
adc
sub
inc
pop
repnz
mov
out
push
sbb
xor
pop
test
mov
repnz
xchg
pop
adc
inc
inc
pop
daa
cmpl
jp
mov
mov
push
add
lock
sbb
push
mov
pop
repnz
out
cmp
mov
sarl
or
and
inc
faddl
data16
push
pop
xor
mov
sub
inc
xor
sub
arpl
mov
xlat
inc
movhps
sbb
mov
mov
sarl
insb
push
scas
add
pop
add
ret
jmp
xor
shlb
jle
jo
push
in
or
es
xorl
dec
arpl
movsb
mov
xorl
and
pop
clc
inc
jne
add
arpl
ja
test
xchg
or
sbb
shl
push
incb
jle
ret
loop
mov
sar
mov
xchg
add
jge,pn
mov
sub
or
sar
nopl
and
shrb
adc
insb
stos
insl
mov
jl
loopne
add
pop
pmulhuw
mov
es
and
pop
inc
inc
call
xlat
in
pop
faddp
dec
mov
pop
popa
or
mov
sub
push
push
sbb
je
inc
sbb
dec
xorl
ljmp
bound
outsb
mov
in
mov
in
add
pop
jmp
repz
or
fmuls
push
fiadds
cmc
or
cltd
lret
shll
shrb
into
rcrl
lret
and
push
sahf
xchg
mov
pop
mov
movsb
mov
xor
gs
inc
sbb
push
sbb
push
xlat
jo
or
or
pop
js
cld
mov
icebp
aas
push
and
and
pushf
xchg
orb
push
out
inc
outsl
inc
fcoml
ss
loopne
pop
sbb
into
add
and
add
test
imulb
inc
or
or
push
shll
mov
pop
addl
mov
andb
cmp
mov
or
mov
fs
and
cmp
aas
jmp
jo,pn
mov
and
inc
daa
add
testb
sbb
and
in
ljmp
cmp
int
imul
repnz
lea
jbe
xor
push
out
ja
sahf
rorb
xchg
sti
rcrb
push
aam
out
test
and
push
lea
mov
xchg
js
fwait
aas
jecxz
jge
outsb
or
rcr
sbb
imul
jecxz
xor
xor
xchg
xor
push
sub
sbb
inc
pop
xchg
stos
scas
mov
mov
jge
mov
adc
pusha
pop
pop
je
loopne
call
sbb
repnz
nop
push
sub
fcomps
pop
dec
bound
inc
test
fildl
ret
dec
ss
scas
sub
fadd
pop
sbb
push
add
scas
mov
adc
jl
add
dec
shrb
insb
jo
in
stos
jl
push
imul
sbb
roll
inc
in
add
sub
fcoms
ljmp
mov
cltd
add
call
shrl
ljmp
lcall
add
aam
mov
xchg
sub
xchg
adc
xchg
or
iret
xchg
push
test
rorb
inc
cmp
dec
shr
pop
mov
outsb
inc
cmp
je
test
aaa
test
arpl
lds
imul
mov
sbb
adc
pop
andb
inc
dec
aaa
or
insl
xchg
inc
aad
xchg
xor
gs
add
popa
test
add
nop
lret
push
inc
ljmp
in
and
jae
push
push
add
pop
adc
mov
loopne
adc
inc
je
xor
or
bound
cmp
xchg
mov
jae
sbb
push
adc
push
jl
add
mov
sbb
mov
mov
lret
in
sbb
push
sbb
ljmp
adc
add
enter
es
mov
nop
pop
mov
push
jmp
mov
out
mov
add
cmp
fstpt
cltd
cld
cs
cltd
mov
popa
jb
inc
add
dec
outsl
decb
dec
psubq
std
nop
cmpsl
es
cltd
jmp
gs
mov
inc
aam
pop
mov
aas
or
and
dec
mov
adc
push
in
scas
aas
lret
scas
adc
out
xor
mov
ds
repz
push
mov
sbb
les
dec
test
ja
jmp
pusha
fmull
or
inc
movsb
push
xor
dec
je
adc
jb
ds
xchg
pop
pop
dec
adc
nop
sbb
pusha
lock
stos
and
addr16
sub
dec
jp
cmp
rorl
inc
rcrb
aam
add
adc
cmpb
pop
clc
inc
cmp
mov
jne
jo
out
clc
adc
push
and
push
mov
mov
push
leave
pop
inc
sbb
mov
nop
in
sub
in
pop
rclb
and
out
repz
xor
or
fs
push
out
hlt
mov
inc
xchg
inc
add
pop
movsb
xchg
imul
cmp
fstl
or
aam
fs
outsb
inc
pop
fwait
cmp
or
adc
shll
movsb
mov
mov
cmp
iret
movsl
lret
cmc
jb
inc
mov
pop
dec
fmulp
rsqrtps
insl
push
push
push
jae
sub
fstpl
rcrb
add
sub
push
cld
pusha
push
cs
push
orb
dec
sbbl
push
xchg
outsl
gs
add
in
movl
mov
push
and
inc
addl
stos
fdiv
or
dec
add
inc
sub
inc
adc
jb
add
sbb
loope
enter
out
call
lock
push
loope
out
pop
dec
stos
push
adc
push
into
xor
mov
push
enter
ror
mov
dec
xor
push
push
pop
mov
cli
or
hlt
add
lods
add
icebp
xchg
int3
xor
sub
loopne
adc
and
hlt
fcomip
jne
cmp
xchg
inc
test
fstpl
or
xchg
flds
je
add
repz
je
dec
push
push
mov
aaa
push
pop
lcall
and
subl
stos
or
test
push
mov
repnz
ficoml
test
dec
cld
inc
repnz
pop
dec
cld
sbb
add
pop
ja
add
in
sbb
arpl
or
cld
stos
pop
enter
push
push
push
mov
clc
xchg
inc
push
adc
repz
addr16
lret
inc
sbb
int3
xor
dec
mov
aam
inc
outsl
and
adc
pop
inc
js
into
inc
sub
jmp
inc
add
inc
xor
add
rcrb
sub
mov
das
jae
pop
xchg
add
mov
out
popa
mov
jae
and
fcompl
cmpsl
inc
mov
dec
hlt
inc
in
insl
mov
sti
cmp
inc
inc
fisubrl
cs
push
pop
and
mov
lock
sbb
push
int
add
fwait
cmp
cmpsl
mov
or
push
aas
pop
fidivs
mov
loope
out
dec
hlt
inc
mov
and
inc
mov
add
and
nop
cmpsb
add
xorb
mov
sbb
jmp
push
add
dec
inc
inc
or
push
in
lcall
and
in
lods
mov
call
movsl
xor
or
mov
adcb
mov
or
nop
movsb
mov
or
insl
sbb
jns
dec
jne
push
lea
sbb
add
mull
lahf
sbb
push
cwtl
add
adc
or
add
xchg
inc
enter
out
push
adcb
pop
ljmp
int3
inc
cli
or
and
cmovo
iret
rorb
jae
or
sub
xchg
mov
mov
mov
std
add
xor
lret
loopne
fistpl
xchg
inc
push
adc
mov
or
inc
jmp
mov
push
popa
inc
xor
jmp
jl
or
jg
push
fidivrl
mov
icebp
sub
lock
add
loop
movsb
lahf
out
jns
mov
mov
clc
xchg
mov
add
mov
lea
jno
stc
or
mov
movl
add
dec
adc
fdivrs
mov
int
testl
inc
add
rclb
dec
sbb
mov
adc
aam
and
or
xor
add
js
push
sub
mov
or
mov
sahf
lea
push
outsl
jo
adc
xchg
pop
das
inc
sbb
out
imul
pop
add
mov
gs
lret
enter
push
inc
lods
jmp
and
cmpsl
sbb
and
movsb
push
mov
inc
subb
pushf
sub
sbb
adc
jge
xchg
sahf
or
and
inc
xor
sub
dec
add
or
and
pop
call
mov
mov
jmp
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
sahf
or
adc
sbb
std
stos
in
push
push
push
dec
pop
or
mul
add
shl
pop
jmp
jb
and
jo
nop
inc
call
jnp
movb
add
jnp
add
and
or
jmp
adc
mov
int3
jo
cld
ds
cld
std
call
jmp
pusha
dec
add
loopne
push
add
int3
xor
test
and
lea
outsb
inc
vmread
push
sbb
add
dec
inc
push
cmp
sub
mov
or
cmpsb
inc
repz
adc
or
xor
pop
dec
loop
dec
icebp
and
stos
inc
sub
sbb
aad
lret
out
push
hlt
sub
xor
pop
test
inc
xchg
adc
xor
gs
dec
rorb
jl
xor
add
or
nop
xor
decl
mov
and
test
sub
je
cmp
jb
cmp
ja
test
fisubs
pop
pop
and
fimuls
and
fistl
push
sub
mov
inc
inc
sbb
jne
xchg
ret
in
dec
jne
sub
stc
jp
xor
and
xor
add
je
or
push
mov
lods
inc
shr
push
push
leave
inc
fmull
sbb
lock
or
push
out
outsl
mov
push
imul
jmp
lcall
jl
outsb
add
pushl
sbb
adc
fnstsw
cmp
pop
adc
sti
or
pop
mov
lods
sti
mov
movswl
fcomps
pop
outsl
fxch
fldl
mov
fildll
scas
dec
rorb
out
sub
daa
xchg
ret
mov
dec
pop
push
imull
or
mov
fdivp
pop
es
xor
pop
imul
mov
mov
outsb
gs
inc
mov
hlt
dec
ficoml
outsl
mov
addl
add
test
mov
jno
add
loope
aam
mov
xchg
dec
movb
add
jb
inc
fs
inc
and
adc
and
not
in
cmpb
mov
dec
and
dec
add
loop
and
pop
dec
jl
push
mov
cmpsb
outsl
ja
scas
mov
iret
out
mov
pop
repz
fs
jae
mov
aaa
out
arpl
movsl
ss
pop
fisubs
das
cmp
mov
in
nop
std
xor
xorl
lock
rcll
xchg
std
and
sbb
dec
adc
inc
add
fiaddl
shrb
xchg
adc
jbe
or
adc
inc
sbb
mov
and
sbb
test
stc
ja
fs
lock
xor
cmp
std
out
jns
inc
sbb
sti
fwait
icebp
out
sbb
or
push
fidivs
rclb
aas
aam
data16
inc
in
push
add
adc
movsb
add
push
xchg
push
lods
push
pop
xchg
rclb
psubd
sbb
xor
ja
xorb
add
jecxz
dec
push
cmp
fdivr
xor
lcall
or
ljmp
aaa
pop
loope
pop
movsl
lret
push
push
rclb
loopne
fld
mov
addl
mov
pop
push
aam
mul
ss
lock
out
mov
icebp
inc
sub
cmovno
push
into
mov
daa
in
aas
sti
cld
notb
inc
xor
sbb
fidivrs
repz
adc
stc
bswap
repz
aaa
add
xor
jns
inc
xchg
outsb
in
fs
js
bound
add
mov
aas
jmp
add
pop
or
inc
inc
dec
enter
add
ljmp
pop
push
push
orb
dec
push
inc
jl
in
jge
push
addb
mov
scas
adc
push
rep
es
or
inc
push
adc
push
mov
out
push
in
push
jo
mov
xchg
mov
push
cmpsb
aam
popa
inc
pop
fmulp
and
rcrl
inc
js
lahf
les
push
out
inc
shlb
adc
or
or
pop
xchg
adc
sub
ss
mov
shrb
orb
pop
xchg
fisubl
mov
push
rol
xchg
pusha
inc
mov
and
lahf
sbb
add
xor
leave
xchg
mov
stos
lahf
das
or
pop
repnz
add
repnz
xchg
out
inc
mov
dec
or
dec
xchg
push
xor
xchg
mov
or
mov
out
mov
outsl
out
inc
scas
fs
out
pop
push
pushf
and
into
insb
mov
nop
xchg
xor
add
inc
sub
mov
loop
xchg
js
jl
popa
movsb
xor
pop
insb
aaa
call
add
pop
outsl
jl
and
inc
mov
test
and
add
lahf
or
adc
jp
adc
popf
iret
out
mov
sahf
loope
outsl
pop
sbb
pop
fbld
pop
nop
push
mov
fwait
add
and
cltd
adc
sbb
xlat
mov
inc
ljmp
pop
add
add
gs
faddl
mov
xor
movsb
pop
inc
arpl
test
das
pusha
mov
fmul
mov
and
xor
push
cltd
bound
or
cmp
sbb
sbb
or
dec
inc
in
sub
xor
addl
add
xor
xorb
shl
and
xchg
nop
push
aas
xchg
sbb
scas
ja
nop
and
mov
jne
xor
jl
pop
adc
adc
call
call
adcb
dec
cmp
mov
insb
mov
adc
shll
push
sbbb
add
push
pop
mov
inc
stos
xor
ss
fwait
std
sbbl
mov
mov
clc
mov
add
pop
jg
or
xchg
and
test
ret
or
rcll
cmp
sub
testl
fildl
or
fisttpl
dec
sbb
sbb
xor
add
cmp
add
and
add
add
add
and
or
cmc
or
adc
xor
and
pusha
popf
arpl
jmp
add
xor
pusha
loopne
inc
movsl
mov
cs
xchg
pop
add
enter
fnstcw
add
sub
pop
lcall
and
adc
and
jge
dec
std
xor
shrb
fwait
or
loopne,pn
mov
jmp
seto
fistl
and
and
add
xchg
lock
lock
or
and
test
hlt
jl
push
mov
inc
dec
dec
sub
clc
cld
xor
jp
add
adc
pop
push
push
jl
adc
or
sub
add
orb
mov
adc
fwait
and
cmpsl
dec
mov
add
lcall
add
add
jbe
in
sbb
lock
adc
xlat
aad
insb
test
aad
or
mov
dec
outsl
add
loopne
test
fmuls
mov
jo
je
xchg
adc
dec
hlt
inc
xchg
or
push
or
mov
push
xchg
xchg
or
ss
push
fcmovbe
lret
or
sbb
and
pop
sbb
inc
call
inc
jmp
push
jl
xor
cld
ret
pushf
mov
pop
je
adc
lock
add
shlb
rcl
jne
mov
fldcw
mov
jle
mov
adc
xchg
pop
loopne
or
push
push
mov
shr
jmp
nop
call
mov
lock
xchg
or
pop
xchg
mov
iret
shl
lods
or
aam
adc
inc
testl
push
sbbl
pop
jg
cmova
dec
adc
mov
jle
je
sub
out
push
and
mov
rclb
inc
add
push
or
clc
mull
cltd
shlb
mov
push
aad
cmpsb
adc
or
add
and
push
pcmpgtd
subl
pusha
or
pop
shr
sbb
add
hlt
pop
jbe
adc
sub
ljmp
dec
jecxz
repnz
roll
and
add
or
inc
and
rcll
and
cmovbe
push
xchg
inc
lock
je
push
push
pop
inc
push
clc
mov
add
inc
inc
inc
orb
inc
lock
ljmp
cmp
or
sbb
pop
add
add
cwtl
sbb
xor
sti
sub
shll
les
sub
sub
andl
mov
aaa
pop
push
jae
mov
or
and
in
add
aaa
sbb
mov
xor
pusha
push
repnz
imul
loopne
sbb
ds
dec
inc
jbe
sbb
rcrb
addr16
sub
xorl
repnz
leave
inc
inc
mov
inc
adc
and
iret
dec
orps
in
ret
xor
iret
mov
in
xchg
dec
gs
jno
push
insb
imul
stos
enter
nop
mov
xlat
cwtl
push
adc
push
cld
adc
push
jb
sub
ret
stos
int
shlb
xchg
cmp
es
jb
mov
or
sti
jmp
adc
jno
mov
inc
mov
ss
pushf
mov
sbb
mov
sub
pop
int3
add
into
test
sbb
popl
pop
outsl
insb
gs
outsl
cwtl
cmp
cmp
and
pop
sub
mov
arpl
xor
aaa
dec
outsl
popa
xor
dec
push
push
outsb
jecxz
out
adc
lea
or
ds
repnz
ret
inc
pop
jmp
dec
or
ss
inc
pop
push
jge
adc
or
insb
add
jb
jmp
sub
push
repnz
test
inc
pop
sub
adc
hlt
nop
sti
inc
pop
cmc
adc
pop
mov
enter
lahf
or
pop
lcall
sbb
addr16
dec
ret
les
daa
mov
jmp
psraw
jecxz
dec
cmp
or
pusha
aaa
xchg
arpl
test
mov
pop
push
adc
mov
cmp
push
push
adc
mov
jns
int
fwait
movsl
scas
add
insb
push
push
fsubrs
or
inc
mov
mov
hlt
push
add
call
push
adc
sub
nop
int3
cmpl
sbb
cmp
sbb
pop
or
dec
push
mov
lret
fs
cmp
nop
add
add
nop
add
or
rclb
or
flds
mov
jns
sub
adc
add
nop
and
sub
fs
push
fs
dec
add
xor
test
movsb
xor
add
enter
add
xor
jl
push
fs
mov
fs
mov
nop
and
nop
mov
sbb
nop
add
xor
pop
add
xchg
add
xor
in
fdivs
enter
sbb
xor
or
orb
or
js
icebp
pushf
pop
sbb
cmpsl
cmpb
lds
sarl
sbb
push
out
pop
push
repz
ja
xor
dec
and
xor
push
adc
pop
cmp
repz
in
stc
test
sahf
stos
mov
jnp
cmpsl
clc
add
push
dec
pop
cmp
repz
jb
mov
cmpsb
mov
shrb
mov
out
push
adc
sub
inc
repz
out
pusha
out
add
sahf
out
dec
cwtl
movsl
push
mov
int3
fsts
addb
sub
sbb
xchg
dec
adc
lock
sbb
ss
mov
cmp
push
push
add
push
iret
test
aaa
xor
daa
mov
into
outsb
lock
mulb
adc
push
pop
pusha
pop
xchg
sbb
lahf
xor
in
push
add
mov
push
out
sub
inc
and
push
xchg
sub
sub
xor
and
add
pop
inc
les
or
push
cwtl
cmp
xor
jo
jp
sub
dec
sub
test
adc
sbbb
fwait
mov
dec
pop
dec
insb
loop
mov
push
adc
repz
mov
sbb
push
and
cmp
rcl
cs
idivl
sub
jl
or
push
and
fisubrs
jle
mov
sub
mov
decl
xlat
mov
push
sbb
sbb
mov
fs
inc
sub
imul
cwtl
pop
add
add
mov
fiaddl
and
push
dec
pop
mov
sub
inc
js
or
lea
or
lea
pop
xchg
mov
lods
imul
xchg
xor
out
dec
arpl
mov
ret
mov
mov
mov
mul
pusha
xchg
or
cmpsl
mov
and
inc
fst
add
adc
adc
cli
push
mov
sbb
fistl
push
mov
adc
jne,pn
mov
inc
stos
jecxz
sbb
leave
imul
or
xorl
daa
adc
aas
roll
jne
mov
push
sbb
test
inc
dec
or
inc
sbb
pop
inc
xchg
adc
add
pop
rclb
inc
push
dec
out
inc
hlt
mov
addl
dec
sbb
xor
sub
adc
mov
sub
stc
dec
mov
or
ss
fiaddl
jge
rol
xchg
cmp
inc
cltd
in
dec
cmp
cmp
dec
arpl
mov
dec
sbb
out
movsl
ja
ja
movsb
in
lret
push
inc
and
push
enter
add
loope
push
lret
adc
cmpl
xor
pop
mov
imul
cmpl
or
add
sbb
test
dec
lock
mov
xchg
or
sbb
pop
sub
adcb
jnp
call
leave
or
rclb
mov
mov
pop
jbe
sub
adc
cmp
push
je
jp
out
xchg
dec
pop
xchg
dec
dec
add
inc
push
es
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
fdivl
mov
inc
dec
roll
daa
test
mov
adc
mov
lock
sbb
xchg
fisubl
iret
repz
imul
inc
xchg
jge
popa
adc
adc
lods
add
loope
xor
rorb
addr16
mov
xor
push
or
xchg
and
pop
imul
cltd
gs
sub
xchg
and
lret
jmp
cmc
xor
adc
bound
jge
test
pushw
inc
sbb
cmpsl
icebp
xor
jmp
adc
je
leave
mov
sbb
or
add
incl
jmp
in
dec
es
sub
inc
xor
dec
adc
leave
add
mov
jle
push
mov
push
icebp
ja
movsl
cmp
adc
jmp
mov
stos
inc
lods
pop
xor
lods
adc
fstl
nop
adc
sbb
dec
aas
or
std
in
inc
fiadds
add
fcoml
int
cmp
mov
push
orb
lret
cld
mov
ret
add
mov
and
loop
loope
mov
fs
jne
mov
lret
pop
lret
int
lock
sub
push
push
xchg
inc
pop
pop
dec
jb
daa
aaa
mov
sub
or
push
mov
push
cmp
sub
xchg
cmp
rorl
mov
add
push
test
add
pop
js
sbb
pop
jmp
jl
or
in
mov
jne
push
fildl
pop
in
sbbl
lea
inc
or
inc
jg
jle
and
nop
cmc
test
add
subl
jno
cli
mov
mov
fiadds
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
sub
fcomp
test
sub
mov
adc
jne
inc
arpl
mov
lods
cmpl
add
loope
push
sub
aaa
aad
mov
push
add
lea
mov
push
add
push
inc
movsl
mov
es
dec
push
mov
mov
jae
jo
or
add
jne
stos
jl
push
inc
or
mov
std
jmp
jg
popf
xor
sub
sub
push
inc
sub
mov
or
mov
adc
dec
cmp
mov
or
push
lret
iret
sub
inc
xor
cmpb
cmp
outsb
js
hlt
add
scas
or
add
xchg
aaa
cs
sub
mov
nop
or
nop
mov
or
inc
sbb
fsin
mov
jno
adcl
xor
fadd
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
mov
sahf
xor
xchg
cmp
lds
in
dec
jnp
mov
xor
inc
sub
add
enter
mov
push
inc
and
inc
scas
js
push
outsl
push
mov
pop
jno
xor
cmp
je
inc
cmp
jne
call
jmp
push
cmpl
jne
mov
inc
push
pop
add
dec
cmp
loop
xchg
mov
sbb
push
ret
add
pop
and
ret
pop
aam
mov
adc
jmp
clc
and
out
outsl
loopne
add
xor
idivl
les
stc
adc
push
mov
sbb
pop
or
or
adc
int
daa
leavew
push
in
sbb
call
loope
shrb
adc
lret
or
dec
mov
push
push
push
dec
sbb
fcmovbe
or
hlt
adc
or
sub
inc
loop
sbbb
cmp
inc
sbb
xchg
mov
adc
xlat
add
rcr
mov
rorl
mov
dec
enter
call
movsl
cmp
push
sbb
mov
or
fdiv
lock
and
inc
jle
fmull
icebp
das
or
sbbl
int
mov
jb
and
xchg
pop
sbb
pushw
cwtl
dec
jb
xor
pusha
mov
clc
jmp
pop
mov
sbb
sbb
sbb
sarl
setae
in
dec
lret
add
inc
lea
mov
cmp
add
or
dec
add
std
mov
mov
or
inc
xchg
add
ret
pop
mov
in
pop
test
fs
sbb
or
inc
xchg
xchg
cmpl
imul
inc
dec
stos
fcompl
mov
les
cwtl
insl
test
adc
scas
mov
sub
orl
fucomi
and
lods
insb
cli
or
stos
cmpb
clc
mov
sbb
add
jo
mov
test
xchg
or
jnp
dec
dec
add
adc
sub
pop
scas
sub
dec
xor
hlt
adc
je
jmp
scas
add
jmp
adc
add
pop
xchg
imul
pop
xor
push
cmp
add
call
cmp
sbb
sub
pop
rcl
mov
mov
jge
dec
shlb
push
pop
sub
or
loop
test
adc
popa
imul
pop
jno
and
cmpl
adc
cld
push
and
pop
mov
jge
jae
add
pop
xor
xor
or
aas
rcr
inc
mov
mov
add
rorb
push
cmp
or
daa
inc
sbb
inc
test
or
dec
bound
pop
rclb
or
pop
push
clc
adc
fcoml
jne
and
loopne
test
test
mov
clc
in
outsb
inc
lret
ja
xor
cmc
xor
xlat
and
sarw
pop
lret
enter
leave
xor
dec
inc
xchg
pop
pop
hlt
rorl
test
mov
pop
sbb
xor
enter
pop
dec
cmp
stc
addr16
and
xchg
addl
jg
xchg
fwait
inc
mov
xchg
add
ds
and
ret
mov
sti
xorl
iret
pop
lock
adc
mov
pusha
adc
mov
mov
mov
and
xor
xor
adc
jg
mov
or
jge
movsl
adc
sub
jg
adc
or
popa
lods
xor
xchg
jo
lret
inc
pop
inc
pop
xor
aaa
mov
xor
sbb
add
jmp
adcb
ret
or
ret
and
das
je
adcl
jb
rolb
cmp
sub
mov
nop
adc
fisttpl
test
add
xorb
dec
xchg
push
jae
adc
pop
push
movsb
push
clc
push
push
outsb
push
pushl
xor
scas
add
out
pop
mov
or
loope
and
and
jne
ret
add
xchg
daa
dec
aaa
mov
add
xor
xchg
or
sbb
mov
rolb
adc
aaa
mov
das
push
lahf
inc
push
xor
xchg
xor
or
xchg
xor
and
pop
adc
cmpsl
aas
lret
cmp
cmp
inc
mov
sub
xchg
setge
cs
cmpb
jmp
imul
jecxz
dec
inc
stos
jg
push
sub
jnp
inc
nop
dec
pop
adc
dec
add
mov
sub
repz
cli
mov
pop
jb
sub
jo
inc
dec
test
test
ss
xor
imul
aaa
mov
notb
push
lcall
cmpl
pop
xchg
mov
rclb
loop
ljmp
nop
out
inc
aaa
rol
and
xchg
lret
or
add
les
aaa
lea
lret
mov
mov
mov
sbb
add
fs
and
adc
mov
les
mov
insl
adc
add
cmpsb
inc
pushf
cmp
jo
lods
xchg
fcmovbe
imul
and
xlat
push
cmp
mov
adc
stos
or
adc
nop
push
nop
push
pushf
lcall
fs
mov
and
movb
inc
clc
pop
call
dec
fidivs
adc
mov
movsb
xor
jmp
mov
imul
jl
jno
dec
sti
mov
repnz
clc
sub
push
je
sub
and
or
jecxz
dec
repnz
repnz
mov
lods
xor
and
popa
call
mov
popa
in
je
mov
in
in
jbe
mov
arpl
or
pusha
lahf
add
movsl
fldl
and
cmp
pop
xchg
cli
adc
jge
cwtl
or
adc
dec
shrl
lret
dec
je
pminub
pop
test
push
push
mov
out
lret
aad
jp
daa
cs
sub
mov
shll
push
popf
pop
out
imul
mov
cmp
ja
cmpl
fidivrs
out
inc
sub
and
testl
adc
adc
fistpll
icebp
loope
adc
sbb
xchg
xor
test
or
faddl
push
scas
mov
and
and
test
push
cmp
and
and
and
push
sub
sbb
mov
out
adc
cld
add
xchg
push
cmp
push
pop
add
lcall
pop
mov
fcomps
es
sbb
js
cmp
pop
cmp
xchg
cmp
inc
out
lods
or
and
cmp
or
add
jl
fmul
or
test
dec
icebp
xor
jne
out
mov
or
dec
jge
adc
pop
dec
in
inc
test
inc
pop
insb
in
stos
adc
push
es
sub
or
dec
cltd
mov
pusha
xor
mov
dec
pop
mov
pop
add
mov
test
mov
inc
shlb
and
pushf
pop
cs
cmpsl
push
pop
popa
and
bound
add
pop
popa
dec
mov
and
lock
jo
fwait
push
mov
pop
hlt
cmp
or
pop
je
lret
addl
sub
enter
ja
es
and
leave
mov
add
and
or
add
mov
call
in
add
push
jg
cs
test
imul
bound
popf
adcl
sbb
xchg
sbb
pop
rolb
adc
push
ret
inc
jmp
loopne
mov
inc
inc
push
and
arpl
dec
test
cmp
in
es
inc
and
orl
xor
xor
push
insl
push
xchg
sti
insl
cmp
fs
aaa
sub
cld
addb
inc
xor
inc
lret
add
and
cmp
cmp
aaa
adc
jae
data16
push
inc
aad
xor
or
add
test
cmp
or
xchg
cld
mov
mov
add
sahf
sahf
imul
or
sbb
adc
stos
mov
push
add
call
sbb
scas
or
mov
adc
mov
pop
xchg
add
andb
push
fbld
sbb
push
dec
cmpsl
outsb
test
mov
push
jnp
call
clc
inc
mov
sbb
shlb
and
and
cbtw
cmp
mov
notb
rorl
xchg
or
roll
jl
movsl
adc
xchg
ss
xor
sub
incb
cld
addl
inc
mov
push
fwait
lcall
in
xchg
inc
add
pop
add
jmp
flds
fmuls
int
inc
dec
fcmovnu
stc
pop
or
aas
adc
aaa
inc
loopne
loopne
dec
inc
push
inc
pop
inc
dec
cmpsb
lahf
or
mov
or
sub
aad
mov
add
mov
push
pop
lea
in
ret
inc
or
mov
cmpsl
cmp
bound
pop
pop
mov
fsubrs
movsb
lods
loop
insl
sbb
adc
jo
or
ljmp
cmp
movsl
pop
call
mov
lock
out
or
lods
pop
xor
cmp
or
sbb
rorl
adc
xchg
dec
js
aaa
dec
push
sbb
cmp
mov
ss
inc
xchg
push
mov
cmp
nop
arpl
push
sbb
xchg
outsl
and
adc
je
sbbb
dec
int
mov
filds
add
xchg
sub
mov
out
or
and
sbb
lcall
jge
inc
es
inc
and
inc
push
sub
mov
add
or
or
outsl
rclb
nop
mov
and
dec
mov
push
mov
inc
loop
xchg
fldl
push
ljmp
lock
xor
push
pop
pop
aam
dec
and
dec
sbb
cmp
dec
add
lret
aad
ja
jns
adc
lods
mov
xchg
es
je
push
mov
clc
jbe
xchg
movsl
add
jo
fs
shr
push
aaa
iret
inc
lahf
push
test
ret
jecxz
add
or
add
out
aam
push
jnp
adc
inc
adc
cmpsb
sbb
cmpb
in
xchg
xchg
popf
jmp
adc
test
xchg
ret
ror
fsubl
insl
xchg
cltd
mov
pop
adc
or
add
rorb
xchg
xchg
push
ret
and
xlat
in
push
or
aas
adc
dec
cmp
mov
sub
loop
jne
dec
ss
bound
test
inc
pop
push
jae
mov
ret
inc
cwtl
jno
sbb
dec
les
mov
and
or
xor
je
roll
sbb
cmc
in
sbb
xchg
dec
in
cmp
dec
dec
sbb
dec
js
xchg
scas
cmpl
inc
cmc
clc
sub
in
xchg
sub
daa
nop
test
rorl
inc
pop
pop
sbb
mov
inc
sub
dec
loope
orl
mov
dec
jne
inc
mov
pop
imul
out
frstor
mov
cmp
add
mov
dec
sarb
ja
subl
add
cltd
sbbl
movsl
icebp
clc
xlat
enter
fsubp
dec
inc
cmp
outsb
je
icebp
paddw
clc
or
rcrl
dec
inc
dec
rorb
outsb
push
xchg
xor
int3
mov
insl
dec
jb
into
mov
or
fcomps
adc
and
mov
imul
adc
and
push
inc
dec
jb
add
sub
jge
push
cmp
hlt
ds
adc
or
fdivs
adc
fcom
lods
dec
mov
shll
cltd
mov
sub
into
dec
inc
add
mov
imul
je
sbb
and
push
mov
test
adc
addb
cmc
sti
mov
inc
arpl
pop
sbb
int3
push
mov
movsl
add
cltd
dec
outsl
sub
mov
and
push
add
stc
test
rclb
out
push
inc
and
add
idiv
xor
movsb
push
pop
and
lods
testl
lahf
inc
or
pusha
in
pop
and
sbb
out
cmp
push
lea
sub
jnp
add
adc
mov
cmovo
mov
insb
dec
and
sbb
and
addr16
xchg
push
dec
inc
sub
xor
sbb
aam
push
rorl
jns
dec
jnp
mov
and
cmc
jle
incl
or
aas
adc
push
push
fnstenv
inc
xchg
pop
push
dec
and
jb
push
sbb
cmp
test
dec
inc
mov
sahf
inc
lock
ret
xchg
jle
push
lods
or
lods
pop
inc
xchg
push
mov
ret
fs
jo
push
sub
jb
and
ror
gs
inc
fsubr
das
mov
nop
arpl
es
popa
xor
xchg
xor
icebp
mov
xchg
xor
nop
arpl
lods
cmp
inc
cltd
je
stos
dec
cmp
and
idivb
push
cmp
adc
add
mov
sarl
cmp
xorl
inc
shll
iret
push
popa
mov
loope
aas
rcl
aas
dec
sub
jl
jge
mov
jb
adc
add
sub
dec
sbb
xchg
incl
sbb
test
add
shll
cmpsb
movsb
jge
mov
das
xchg
outsb
inc
enter
out
push
push
addl
js
dec
cmp
sbb
add
jmp
dec
adc
sbb
enterw
xchg
nop
movl
pavgb
inc
cld
sub
jb
jno
les
xchg
mov
scas
jmp
int3
jbe
fistps
jmp
xchg
xor
lea
lods
adc
cmpsb
xlat
push
dec
aam
push
call
inc
popf
mov
in
std
adc
dec
jmp
mov
cli
stos
add
divb
sub
inc
adc
adc
push
and
jmp
cld
cmp
lahf
aam
inc
notl
sbb
mov
stc
sbb
inc
movsl
in
ret
dec
fildl
xchg
insb
adc
or
shlb
dec
ret
cs
cmp
je
and
cmp
cmpsb
adc
inc
ret
mov
pop
xor
pop
dec
xchg
inc
jle
inc
mov
pop
repnz
and
adc
mov
ss
push
mov
push
bound
aam
aam
sub
adc
mov
push
dec
ficoms
scas
notb
sbb
subl
pusha
and
mov
inc
push
lahf
cmp
in
fistpll
push
or
scas
int
adc
leave
loop
nop
in
sbb
nop
insb
data16
push
or
xor
add
and
inc
sub
aaa
and
adcb
sbb
fwait
add
pop
inc
cwtl
pop
inc
and
addr16
fisttpl
and
cmp
push
or
sbb
jns
mov
dec
stos
add
inc
sbb
adc
cmp
int3
mov
fcoms
imul
rclb
and
and
outsl
xchg
or
inc
clc
xchg
testl
mov
mov
imul
mov
inc
or
pop
call
add
dec
fildl
dec
add
or
inc
jae
jno
mov
adc
sbb
dec
pop
leavew
sbb
jns
inc
aam
and
rorl
add
adc
sahf
imul
sub
jo
loope
nop
outsb
mov
ja
mov
fsubrs
jo
jnp
stos
inc
xor
stos
xchg
adcb
les
inc
test
mov
mov
out
sub
adc
outsb
subl
mov
inc
rcl
and
mov
push
inc
inc
ljmp
mov
mov
xor
out
pop
push
sub
fwait
pusha
xchg
or
xchg
dec
or
inc
sub
stos
jge
jp
pop
cltd
out
and
out
lahf
mov
xchg
push
push
notb
xor
or
aas
xor
negl
pop
faddp
into
or
push
cld
sub
nop
into
add
andl
add
mov
rcl
or
cmp
shr
pop
and
pop
mov
sub
jge
gs
or
add
sarl
or
cmp
xchg
adc
adc
arpl
push
leave
adc
mov
sbb
add
inc
mov
in
shlb
fdivs
push
xor
inc
xchg
in
adc
jne
ret
cli
add
inc
pop
adc
sbb
and
das
mov
clc
sub
xor
sbb
aad
testb
xchg
rolb
add
inc
dec
mov
popa
in
add
js
data16
rorb
loop
daa
and
insb
mov
adc
insl
shll
push
sub
add
add
pop
add
dec
xchg
and
add
leave
rorb
and
stos
loope
aaa
adc
sbb
adc
sub
and
jmp
xchg
push
pop
or
sbb
ja
stos
mov
enter
add
push
stc
inc
sahf
out
push
js
sub
adc
shr
test
pop
sbbb
jl
sub
paddq
cmc
lock
faddl
outsb
xor
lods
pop
loope
sub
faddl
or
mov
mov
das
int3
dec
cwtl
adc
sub
in
cmpsl
out
and
mov
es
cwtl
adc
aad
testl
cmp
mov
mov
lret
rcrb
lret
test
mov
mov
adcl
mov
jne
cli
adc
mov
in
push
sub
insb
inc
rcl
repz
push
xor
mov
fcomps
pop
enter
cld
in
mov
loopne
in
sahf
xchg
dec
pop
push
sub
mov
mov
enter
nop
pop
inc
iret
les
lds
adc
cld
xchg
inc
ds
xchg
bound
out
adc
shrb
test
jne
lock
movsb
bound
mov
loop
sahf
bound
cmp
and
sub
mov
addr16
mov
rcrl
mov
pop
es
fst
ret
dec
jmp
and
in
dec
sbb
push
int3
inc
push
popf
rolb
in
inc
fildll
push
inc
and
xchg
sub
in
mov
outsl
fs
sbb
inc
mov
add
xor
rcrb
cmp
aad
xchg
mov
cmp
roll
fcoml
lods
insl
lods
push
nop
add
push
jle
leave
add
insb
fs
xor
in
popf
xchg
frstpm(287
out
mov
cmp
cmp
gs
in
nop
jmp
shrb
jp
jg
test
mov
inc
je
fcoms
inc
enterw
call
filds
repnz
outsl
inc
and
sbb
enter
int
in
jp
add
fdivs
pop
les
iret
pushf
xor
push
adc
xchg
xor
xor
pop
xor
push
or
or
adc
cwtl
push
push
notl
lods
jno
or
insb
test
repz
mov
add
scas
addb
lock
mov
mov
jns
cmp
dec
add
cs
mov
in
orl
dec
add
add
dec
ja
sbb
or
or
popa
push
dec
push
bnd
or
pop
sahf
scas
inc
fisubl
add
push
testb
adc
inc
mov
jns
fs
add
or
pop
gs
mov
mov
out
and
dec
jne
fwait
and
sahf
out
sahf
sbb
adc
or
xchg
sbb
ljmp
loopne
sbb
lret
fsub
jbe
or
pop
add
or
sbb
mov
out
push
push
jp
fisubl
inc
leave
clc
or
aam
push
pop
mov
inc
loopne
jmp
cmpsb
jle
xchg
push
and
cmp
mov
push
out
add
cld
fldt
pop
mov
mov
pop
rcrl
and
dec
cwtl
test
or
or
outsl
mov
xchg
clc
pop
ja
test
lret
sub
repz
or
sbb
nop
xchg
lret
xor
cmp
push
or
or
movb
mov
sbb
inc
js
cmp
adc
pop
and
and
xchg
fsubs
and
sahf
out
out
sub
push
push
or
or
or
into
repz
or
or
cmpsb
push
adc
push
push
mov
adc
pusha
popf
scas
or
sbb
aas
sahf
lret
ja
cmp
or
or
or
sub
jbe
or
mov
pop
jo
push
movsb
decl
mov
and
pop
add
lret
fisubs
ret
and
push
sbb
inc
sahf
or
or
in
in
or
push
push
rcl
jnp
push
pop
adc
dec
adc
add
add
push
add
push
adc
lea
and
adc
clc
cmp
hlt
addr16
pop
movsl
je
das
and
ljmp
hlt
lea
dec
sub
push
or
icebp
xchg
adc
mov
add
and
test
add
adcb
dec
mov
pop
or
add
scas
mov
adc
fsubrp
push
pop
mov
nop
add
and
sbb
mov
dec
lea
enter
push
push
pop
mov
xor
mov
in
outsl
jae
or
ret
push
or
or
in
in
push
add
ret
cld
mov
or
xchg
mov
inc
lea
aam
mov
int
xchg
mov
xor
inc
jmp
dec
loope
aam
mov
xchg
les
mov
cmpsl
sbb
push
popa
in
and
shlb
jle
cmpsl
mov
imul
loopne
pop
cld
outsb
inc
xchg
and
je
dec
lret
adc
pop
mov
cmp
xchg
lret
mov
aas
stos
movsb
aad
inc
insl
mov
pusha
nop
cmp
shrl
fs
fwait
pushf
mov
jb
ret
xor
push
jl
insl
fs
imul
clc
xchg
cltd
push
lods
addl
lods
add
push
ss
inc
sub
imul
mov
fiaddl
jmp
jp
nop
cmc
fists
inc
cld
pop
add
fstpl
arpl
jecxz
fwait
push
push
int3
adc
test
sub
lods
jae
popa
pop
dec
cmp
add
call
scas
test
sub
mov
cmpsb
dec
dec
xor
push
sbb
pop
sarb
imul
jno
out
int3
add
jl
adc
mov
pop
test
scas
jnp
jmp
sbb
add
add
ds
cld
insb
adc
add
lods
nop
ss
ret
push
sub
ss
jmp
and
aam
frstor
pop
enter
decb
test
push
andb
out
fildl
xchg
jb
sub
pop
ja
or
cmp
sub
or
jbe
test
lods
and
popa
pop
fisubs
fstpt
dec
jmp
inc
ljmp
add
and
cmpl
rorb
jno
jmp
and
sub
mov
jg
nop
les
pusha
sub
push
scas
dec
pop
push
add
adc
popa
cwtl
lret
imul
or
inc
fwait
adc
pushf
xor
sbb
jo
add
rclb
or
ror
jmp
nop
scas
push
mov
add
and
fcomps
jns
pop
insl
pop
bound
dec
or
jbe
addr16
xchg
lock
jmp
cmp
sub
xchg
pop
cmp
pop
out
ja
jb
mov
adc
add
or
xchg
testl
rorl
or
mulb
mov
lret
jle
push
cmp
add
xchg
movsb
push
daa
negb
ret
loopne
jns
add
sbb
ja
cltd
and
xchg
dec
jae
add
push
cmp
les
test
add
clc
clc
stos
adcb
rolb
inc
in
pop
jg
jb
pop
push
xchg
cmp
loop
and
push
jo
jle
jg
fs
push
lret
xchg
stos
mov
or
dec
outsl
mov
inc
arpl
lods
add
in
sub
jb
adc
daa
lock
cmpsl
and
add
dec
adc
test
jge
dec
and
adc
push
adc
movsb
je
inc
jp
rcrb
sub
or
pop
cmpsl
pop
mov
jmp
dec
fisubrs
adc
js
movsb
xchg
mov
movsl
and
lods
dec
and
js
cmp
xchg
popa
sub
subb
or
sub
repnz
add
sahf
subl
sbb
test
mov
or
xchg
mov
or
hlt
or
into
movsl
adc
pop
sti
jne
cmp
ja
ret
das
inc
jae
jge
and
xor
ret
xchg
in
pusha
adc
jge
cs
add
data16
addr16
jb
mov
imul
insl
inc
push
inc
popa
test
in
popf
push
add
mov
inc
aam
insb
push
mov
xchg
adc
les
xor
sub
mov
jbe
push
sbb
mov
jo
insb
imul
leave
in
or
xor
cld
cld
adc
fs
shlb
and
pop
addr16
mov
mov
xchg
lock
nop
push
or
jmp
cmp
mov
mov
fcomp
aas
jo
sub
sub
xchg
mov
or
out
sahf
lea
mov
inc
ja
inc
fdivs
enter
fcomp
sub
sahf
xor
sub
xor
je
jl
or
and
lock
aaa
pop
adc
ss
dec
and
stos
mov
add
stos
mov
cmp
mov
cmpsb
jo
lea
repnz
lea
push
mov
call
or
fwait
add
mov
add
mov
sub
push
fistps
movsb
loop
rorl
sbb
xor
dec
nop
add
mov
mov
add
lahf
dec
and
sbbl
sub
push
xchg
xchg
push
xchg
aas
pop
je
and
add
imul
cmp
jl
jl
add
and
mov
in
push
adc
nop
push
enter
insl
dec
cmp
pop
jb
or
jge
pop
jo
add
add
inc
push
dec
jge
jge
je
adcb
xor
or
push
mov
or
je
add
jmp
leave
sarl
inc
inc
pop
jmp
sbb
xor
les
xchg
data16
sub
lahf
xchg
jle
add
inc
or
rclb
mov
cmp
add
jle
and
in
jle
sbb
ret
repz
aad
jo
outsl
psubusw
pop
or
xor
ja
add
dec
dec
sbb
repz
imul
pusha
lods
cli
adc
ret
repz
add
imull
jnp
lods
add
mov
xor
cmp
ret
lcall
jb
mov
inc
mov
sbb
ficomps
xor
xor
adc
sub
cmp
and
adc
inc
inc
cltd
mov
push
or
sub
fldenv
jb
push
xor
dec
cs
mov
jmp
and
ret
push
fnstenv
jmp
fists
fdivl
sub
pop
add
rorb
insb
mov
or
pop
push
clc
mov
add
cmp
repnz
push
xor
add
push
outsl
fwait
sbb
add
je
loop
outsb
xchg
pop
scas
jbe
sbb
iret
or
xor
mov
roll
pop
or
or
jo
insb
cmp
outsl
divl
popf
xor
adc
xor
sbb
push
pop
enter
inc
adc
nop
out
ss
in
sbb
or
jo
shlb
push
push
jg
xorb
aas
mov
int
cmpsl
js
lahf
xchg
jp
adc
test
xor
pop
sub
imul
decl
test
dec
lcall
cmp
jae
loopne
test
add
sub
fdivrl
push
jg
scas
adc
sub
addb
mov
push
lock
sub
add
add
add
jmp
sub
cwtl
aas
movsl
or
sbb
pop
add
jae
and
add
mov
dec
jne
addl
stos
inc
test
pop
xlat
mov
into
push
out
fcmovu
mov
push
test
xchg
push
mov
movsb
add
lahf
add
testl
movsb
fildl
fsubl
pop
in
xor
jne
xorb
hlt
xchg
dec
adc
cmpsl
sbb
inc
movb
mov
or
daa
cmp
ret
imul
jle
or
xchg
or
pop
jbe
sub
push
call
rorb
push
add
mov
sub
filds
insb
out
cmp
jg
dec
sarl
in
subl
pusha
in
dec
inc
cmp
sarl
jb
mov
dec
sbb
jne
stc
and
out
test
mov
add
outsl
stos
sub
addr16
sub
or
pop
lret
ss
je
jl
popf
push
ljmp
dec
mov
clc
outsb
loopne
xchg
add
mov
outsb
ljmp
popf
mov
sub
mov
hlt
sbb
jne
in
clc
lods
cmp
ja
sbb
adc
nop
in
hlt
ja
push
fcoml
icebp
mov
in
sub
hlt
call
es
in
cmpsb
repnz
loop,pn
call
xchg
in
loope
jecxz
mov
loop
cmp
faddl
cltd
add
nop
inc
roll
adc
pop
xor
shrb
popf
les
ror
enter
cwtl
outsl
jmp
leave
mov
pop
pop
jecxz
or
shlb
push
push
bound
xor
or
call
cmp
mov
mov
sub
xchg
or
daa
nop
mov
jge
mov
sbb
out
add
leave
jo
mov
mov
jne
mov
xchg
pushf
or
sbb
andl
jge
popa
and
es
inc
mov
aaa
xor
pop
pop
aam
jecxz
push
add
nop
loopne
test
sub
nop
sbb
mov
xor
incb
jne
sarb
sub
or
ss
sbb
js
mov
mov
mov
jne
lret
sub
test
ja
int3
frstor
push
dec
stos
mov
enter
and
fucomi
xor
les
dec
shl
fistps
xor
pop
rclb
rcl
mov
sub
push
ret
xor
or
push
imul
movsb
sbb
pop
stc
xchg
push
jge
xlat
or
jnp
popf
cmp
push
cld
push
mov
adc
clc
mov
mov
or
out
add
mulb
fbstp
testl
add
sub
or
pop
pop
pop
pop
pop
shlb
insb
pop
popa
fldenv
adc
adc
icebp
imul
mov
cmp
clc
sub
mov
lock
in
fcoml
fdivrs
in
mov
hlt
rclb
popa
hlt
jbe,pt
jge
jne
mov
adc
popa
push
daa
les
push
aad
dec
fidivs
sub
dec
sti
sahf
xor
js
inc
int3
stc
scas
popa
stos
sub
mov
jae
sbb
adc
add
mov
or
inc
jo
jns
cli
and
pop
lcall
dec
cld
mov
jbe
fstl
sub
shr
pop
aas
mov
mov
xlat
mov
add
dec
les
nop
cmp
or
xor
fiaddl
mov
mov
jbe
fdivl
xchg
scas
dec
fidivl
nop
jge
data16
lods
jb
divb
pushl
gs
aaa
sub
fdivrs
mov
cwtl
dec
sti
mov
add
xchg
fwait
push
sarl
clc
adc
or
jecxz
push
add
jo
add
xchg
cmc
in
mov
mov
pop
add
andb
mov
cmp
cmp
jmp
or
lock
or
lcall
imul
add
in
mov
pop
insb
pop
pop
mov
mov
inc
repnz
cmp
jnp
shlb
xor
sti
dec
fldl2e
je,pn
or
inc
or
pop
fldt
movsb
inc
xor
fildll
cs
imul
loopne
rcr
adc
pushf
xor
adc
pop
push
adc
add
adc
xchg
xor
jns
pop
mov
inc
and
push
and
adcl
mov
add
xchg
jp
cmp
mov
insb
jle
scas
add
in
inc
stos
jno
xchg
inc
cmp
cmp
sbb
std
rorb
lock
movb
sete
inc
push
insl
popl
fdivrp
push
mov
pop
das
inc
lret
and
out
loope
mov
call
inc
push
push
mov
arpl
lock
stos
add
cmp
xchg
mov
cmp
in
loopne
inc
shlb
push
in
dec
mov
dec
pusha
cmp
jg
pop
sub
sub
ss
or
notb
dec
xchg
and
xchg
insl
cmp
fnstenv
xchg
xor
orl
sbb
stc
jne
pusha
add
out
sbb
dec
pop
sbb
xchg
dec
xchg
adcl
add
loopne
lods
and
push
lods
inc
inc
scas
movsl
jmp
xchg
std
repz
jmp
adc
shrw
repz
mov
xchg
sbb
outsb
out
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
lret
mov
ret
dec
pop
sbb
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
jge
fmuls
mov
ljmp
sahf
and
sub
call
push
sbb
inc
sbb
sub
aaa
jmp
sbb
clc
push
jge
sahf
xchg
pop
lock
mov
jmp
or
adc
testb
push
and
int3
adc
lea
daa
or
insl
push
dec
jle
mov
rclb
xor
dec
adc
lcall
xchg
sbb
adc
jge
inc
mov
mov
das
mov
inc
or
xchg
inc
mov
cmp
fs
mov
lds
lds
outsb
mov
sub
mov
jecxz
popa
sbb
mov
sub
jne
push
mov
hlt
add
mov
nop
vprotq
or
js
pop
data16
je
xchg
inc
aaa
inc
mov
dec
cmc
pop
and
xchg
je
call
and
jmp
push
cwtl
or
pop
inc
xor
lret
mov
push
in
cmpsb
mov
rcrl
mov
mov
jnp
inc
pop
and
ljmp
cmp
jb
mov
pop
sub
push
mov
mov
ret
sub
jbe
xor
jbe
lods
add
adc
ret
cmp
jae
mov
add
adc
outsl
inc
rorb
push
lods
mov
scas
std
mov
or
mov
stos
ss
outsb
add
ds
jb
inc
sub
xor
lea
dec
adc
sbb
ss
fbstp
or
sbb
gs
cmp
lea
add
jmp
in
add
cvtps2pi
mov
cmp
jbe
jle
pop
add
test
jb
push
or
fldt
je
or
cmpsb
inc
or
test
push
je
mov
cmp
push
sub
fsubs
add
or
jmp
or
mov
int3
inc
mov
adc
gs
sub
and
jmp
mov
jbe
mov
push
and
cli
fs
add
inc
xchg
fsubl
sarb
leave
sarb
mov
cld
lods
cmp
je
sub
lret
loopne
mov
mov
or
shl
in
rcll
or
xchg
lea
adc
pop
pop
inc
add
xor
mov
and
add
imul
inc
cmp
repz
and
add
xchg
jno
incb
push
nop
dec
mov
mov
lcall
add
mov
lock
or
inc
mov
cwtl
popa
sbb
ss
cmp
addl
out
cwtl
sarb
pop
pop
mov
out
ds
inc
add
mov
add
pusha
out
lods
inc
jmp
push
shlb
mov
in
mov
test
add
xor
cmpb
sbb
push
jb
cmp
pop
adc
mov
add
jne
mov
and
or
inc
into
or
add
gs
inc
or
enter
pop
fisubl
mov
clc
data16
and
adc
das
mov
ficoml
sub
inc
sbb
mov
push
das
cmp
sub
data16
loope
leave
xchg
pusha
popa
or
into
je
inc
cmp
xlat
sub
mov
mov
sub
ret
mov
mov
mov
push
sub
add
inc
mov
push
in
cmpsl
imul
sub
mov
ja
sbb
sub
rcrl
pop
stos
jno
jp
pop
xchg
push
test
cmp
mov
mov
pop
nop
stc
add
test
into
dec
int
add
lods
and
push
lahf
sti
pop
lcall
std
inc
mov
cs
mov
popf
in
push
mov
and
and
jg
mov
sub
pop
rcrb
js,pt
cmp
shr
cmp
loop
mov
mov
test
nop
mov
cltd
add
roll
pop
inc
outsl
add
cmp
aaa
cmc
ret
push
or
cmpsl
enter
push
lods
mov
inc
cmp
jne
orb
int
ljmp
jecxz
clc
add
sbb
shr
cmp
dec
mov
pusha
mov
and
out
es
mov
and
addr16
lock
mov
xchg
adc
rolb
lea
mov
mov
inc
pop
dec
sbb
mov
and
ret
add
add
test
push
jge
enter
ljmp
popa
rorb
shr
cmpsb
decl
or
mov
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
add
sbb
push
adc
outsl
call
fadd
fists
int3
iret
push
or
push
imul
lds
or
aas
dec
pop
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
mov
sbb
push
mov
push
movsb
mov
push
stos
add
fcoms
insl
jmp
aad
sbb
ja
cmpb
or
loopne
mov
ret
and
cli
xchg
mov
push
cmpb
inc
addb
xchg
test
ja
in
lret
inc
data16
lds
inc
dec
repnz
iret
popa
lods
loope
dec
sarb
cli
jl
fisttps
jmp
mov
cld
mov
imul
add
aam
lea
lock
jo
inc
xchg
add
jge
mov
and
pop
adc
jo
aas
sahf
adc
ret
clc
lock
xchg
repnz
mov
add
jl
pop
call
ret
xor
add
inc
pusha
sub
adc
add
push
and
mov
push
mov
sbb
mov
xchg
dec
and
mov
sub
xor
imul
adc
xor
jb
ret
lea
outsl
cmpl
jbe
insb
and
mov
pop
cltd
pop
jno
dec
aaa
rcr
add
mov
lea
or
les
or
add
mov
mov
mov
loopne
jbe
mov
dec
or
and
popf
nop
or
adc
cmpsb
inc
xor
xor
lea
sti
push
pop
pusha
mov
cmp
jg
leave
sub
repz
mov
outsb
mov
jae
or
sbb
xchg
rcll
pop
mov
sub
orb
xor
or
mov
or
popl
sbb
outsl
add
xchg
cmpsb
push
cmc
hlt
pop
push
cmp
data16
lret
dec
out
push
cmp
jge
filds
and
jmp
add
inc
xor
mov
mov
xchg
pushf
pop
and
push
push
insb
arpl
xor
mov
loopne
add
jl
add
fdivs
icebp
gs
out
jg
push
shll
sub
add
orl
popa
and
cmpsl
push
mov
scas
inc
cmp
inc
inc
mov
inc
out
push
pop
or
pop
popa
jl
rolb
ja
xchg
in
sbb
or
adc
and
nop
lock
inc
loopne
mov
movsb
int
inc
pop
leave
mov
lock
sbb
inc
xor
push
xchg
adc
adc
pop
xchg
subl
pop
and
enter
or
es
adc
js
push
enter
adc
hlt
lret
decl
testb
and
lds
test
adcl
pop
pop
outsb
clc
nop
push
xchg
push
pop
enter
loop
pusha
out
or
inc
test
add
pop
punpckhwd
or
ja
popl
fsubs
mov
lods
sahf
lea
addb
push
add
add
push
mov
pop
movzbl
xchg
inc
xchg
or
push
rolb
fdivrs
or
jnp
pushf
lds
xor
push
rcrl
lock
or
aas
cli
or
xchg
push
cmp
cmp
sets
xor
lods
or
or
xchg
jne
or
cmp
je
mov
push
aad
mov
testb
cmp
jge
imul
jge
push
or
inc
pushf
imul
std
mov
pop
sbb
dec
adc
dec
fisubrs
sbb
adc
or
fdivl
incl
loopne
add
push
push
push
notl
dec
movsb
out
inc
ret
cs
or
and
add
xchg
xor
pop
push
mov
jmp
mov
push
jle
mov
push
xor
outsl
div
pop
cmpsl
mov
dec
mull
mov
adc
rorl
dec
sbb
inc
mov
and
pusha
in
jle
pop
shr
int
pop
mov
jle
push
and
in
sub
dec
idivl
jmp
jle
cmpb
and
pop
movb
pop
xor
clc
inc
test
stc
add
fistpl
inc
cmp
jne
popa
dec
shlb
or
dec
leave
push
push
or
ret
jmp
xor
mov
mov
dec
push
push
push
pushf
or
adc
jge
or
fcomi
push
push
pusha
ljmp
adc
cmpsl
and
lock
mov
jbe
popl
jg
sbb
add
ret
mov
cmp
lret
or
lahf
push
shlb
inc
adc
int
outsb
fcompl
mov
mov
lods
es
js
shrb
icebp
xchg
int3
push
cmp
jae
sbb
xchg
outsb
mov
dec
mov
mov
mov
push
and
dec
push
jmp
sub
add
das
add
mov
ret
sbb
mov
decl
adc
add
cs
sbb
fistps
inc
add
fistpll
dec
movb
mov
or
or
jns
je
loope
neg
inc
fisttpl
jmp
xor
mov
frstor
add
push
sub
fdivs
es
movsl
jmp
or
mov
inc
cmpsb
xor
out
mov
lahf
or
and
push
push
xor
xchg
push
out
jns
dec
add
pop
fs
sgdtl
shll
add
xor
lds
orl
jne
fldz
jmp
mov
xchg
jecxz
mov
sarb
inc
out
inc
sub
sbb
add
sti
aaa
pop
jns
fchs
and
adcl
rcrl
je
ds
mov
add
fnstsw
not
and
lahf
mov
mov
test
sbb
in
cmp
inc
cmp
enter
cmp
push
xchg
add
pusha
jno
daa
pusha
test
das
dec
add
add
test
and
add
cwtl
je
dec
add
inc
inc
iret
rcrb
addr16
xchg
add
pop
jae
jg
daa
movl
jae
push
nop
or
and
sti
adc
out
iret
inc
insb
outsl
bound
insb
push
jb
or
inc
insl
je
imul
xor
push
aam
dec
out
fs
ret
sbb
sbb
scas
clc
lods
jno
lea
sub
xor
arpl
movsb
cmp
ss
aam
je
sti
mov
mov
push
pop
sub
arpl
mov
or
fldenv
icebp
adcb
pop
cmpl
movsb
pop
daa
sub
cwtl
sbb
add
mov
add
out
jnp
aas
inc
jne
or
xchg
aas
adc
pop
mov
movsb
jbe
inc
push
gs
imul
push
std
and
jb
mov
in
test
incb
cmp
jp
push
push
xchg
dec
in
mov
cld
andps
sbb
push
clc
cvtps2pd
sbb
dec
call
jns
out
and
push
fnsave
int
testl
out
sti
jg
sub
mov
dec
xchg
push
sub
or
aas
mov
add
lds
inc
mov
dec
push
mov
pop
xchg
cs
or
int3
sbb
inc
adc
outsb
pop
add
es
push
add
out
dec
adc
xlat
sbb
cmp
mov
adc
inc
or
mov
test
movsb
test
mov
adc
lods
sub
scas
dec
pusha
sub
fucomp
pop
adc
cli
sub
xchg
das
in
mov
pusha
enter
cmp
subb
iret
mov
inc
mov
scas
bound
fsts
or
insl
in
call
aam
leave
leave
in
in
out
out
enter
scas
rcl
ror
dec
push
jns
scas
fs
scas
loopne
lods
pop
fs
scas
enter
push
loope
scas
bound
pop
sahf
and
xor
xor
pop
xchg
imul
cmp
add
enter
jnp
add
inc
push
sbb
pop
bound
add
adc
mov
xchg
mov
and
mov
adc
adc
notl
sbb
add
jbe
add
faddl
add
fdiv
mov
and
xchg
or
dec
outsl
imul
add
jecxz
ss
add
add
pop
pop
push
pop
or
dec
jne
test
repnz
sbb
lods
fists
stc
sbb
lock
jg
adc
lahf
mov
push
or
sbb
dec
into
dec
pop
push
inc
or
xor
and
pop
jns
mov
sub
jo
movsb
dec
adc
lea
js
cmpsb
in
in
cmp
xlat
or
jno
out
add
mov
xor
ss
add
sub
stos
divl
cmpsl
mov
and
or
nop
les
jmp
pop
mov
mov
mov
add
xchg
xlat
loope
dec
sbb
jmp
inc
test
insb
mov
arpl
inc
mov
inc
sub
mov
ret
mov
nop
sbb
mov
ja
dec
sub
lahf
push
cmp
addb
out
push
enter
mov
jnp
inc
push
cmpsl
shll
push
xor
jae
in
inc
dec
leave
inc
in
mov
mov
mov
pop
dec
add
sbb
fcmovnb
iret
subl
pop
subb
push
inc
loope
lcall
xor
nop
std
add
ljmp
inc
aaa
xchg
push
pop
sub
xchg
aaa
jno
nop
xchg
sbb
mov
js
dec
jmp
mov
and
or
out
dec
orb
movl
in
sub
sub
inc
push
jbe
repz
xor
add
cmp
sbb
data16
adc
mov
xor
int3
inc
pushf
sahf
sahf
or
adc
xchg
roll
add
sub
or
xor
arpl
cli
jnp
jbe
loopne
lock
mov
add
dec
loopne
cltd
xorb
lcall
insb
xor
lds
lds
add
cli
or
fwait
adc
pop
mov
pop
jnp
std
sbb
adc
das
sbb
test
out
xor
jo
cmp
push
xor
and
sub
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
sub
outsl
dec
repnz
dec
shlb
in
sub
xlat
jno
dec
jne
sbb
rcrb
ret
in
xor
dec
lock
inc
mov
xchg
lret
pop
shll
adc
add
icebp
lret
cmpb
lret
or
xchg
mov
popa
push
mov
or
stos
inc
sbb
or
sbb
aas
pop
mov
mov
sbb
out
xor
adc
aaa
mov
nop
aam
orb
movsb
and
push
inc
or
stos
cmp
or
jmp
mov
clc
or
inc
loopne
out
repz
pushf
insb
pop
or
pop
mov
cmpsb
hlt
lods
pusha
pcmpeqb
popf
les
sbb
hlt
lock
xor
test
mov
repz
repz
add
inc
mov
fisubrs
or
xorb
negb
fs
and
enter
xchg
nop
lcall
dec
ja
cmpb
repz
adc
out
out
je
or
je
or
popa
mov
add
test
rorl
jle
les
add
dec
push
insb
fbstp
je
jmp
mov
in
popa
xlat
mov
std
xchg
fwait
ss
mov
inc
mov
xor
xor
dec
inc
in
jl
sub
inc
sub
mov
and
enter
inc
sbb
xchg
ja
sbb
adc
pop
adc
dec
adc
cwtl
inc
inc
mov
jo
mov
ja
fwait
sub
xchg
pop
mov
pop
inc
mov
enter
aam
movsb
and
pop
movsl
fsubrp
mov
adc
ret
and
js
or
ss
xor
pop
fcoms
and
je
lcall
test
mov
xchg
add
push
movsb
enter
sbb
add
lret
cs
adc
add
nop
and
xor
dec
gs
sub
xchg
add
je
enter
jnp
add
arpl
xor
add
iret
es
and
dec
insb
or
mov
add
xchg
iret
dec
xor
xchg
inc
sahf
xchg
scas
fldcw
or
dec
fs
lret
add
pop
aaa
das
fwait
add
outsl
add
push
cwtl
push
jge
sbb
sub
or
jne
push
and
test
mov
fcomp
jge
jge
dec
outsl
fs
mov
leave
insb
gs
aas
push
xchg
xchg
mov
movsb
addr16
adc
loope
or
aaa
jb
pop
sub
in
pop
das
or
je
jae
das
adc
je
in
aaa
lea
pop
inc
outsl
bound
and
and
push
pop
dec
rcrb
sarb
lock
and
xor
outsl
sbb
push
sbb
or
and
ss
xor
pop
push
mov
jmp
push
push
push
or
xor
push
insb
arpl
aaa
sub
imul
inc
sub
mov
or
push
adc
outsb
push
mov
sub
push
inc
les
addb
fildl
mov
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
pop
add
add
data16
jno
adc
in
xor
push
mov
dec
pop
xor
xor
jp
popa
imul
push
push
pop
aaa
sbb
or
das
push
dec
and
lret
iret
pop
or
pop
mov
inc
mov
test
push
xor
add
cld
jae
cmp
mov
sti
dec
sbb
jle
inc
mov
popa
pushw
xor
aaa
or
sbb
dec
inc
decb
cmpsl
inc
sub
jo
popa
cmp
sub
insb
xlat
push
adc
insb
push
imul
jo
cld
addr16
pop
jp
sub
inc
adc
in
jg
inc
pop
dec
dec
inc
inc
dec
dec
inc
push
jg
aas
xor
or
sbb
adc
cmp
nop
pop
dec
push
mov
or
notl
cmp
pop
fists
adc
push
in
pusha
push
test
mov
jne
popa
push
mov
mov
gs
inc
inc
and
inc
xchg
sbb
cmp
sub
ret
push
mov
adc
push
aam
or
xor
inc
pop
pop
push
push
iret
fnstenv
test
aas
call
mov
or
enter
pop
and
push
xor
orps
inc
inc
xor
insl
ja
jbe
xchg
jl
dec
xor
pop
or
cmpsl
push
sbb
push
mov
pop
push
cs
je
sbb
lret
insb
pop
pop
add
sub
dec
shll
sbb
es
and
stos
pop
pop
lods
inc
cmp
pop
or
mov
rcrl
push
test
in
lret
xor
adc
rcrl
pop
pop
push
push
dec
jne
cmp
push
pusha
enter
ds
imul
cli
insb
je
imul
inc
mov
outsl
outsl
jne
cwtl
stos
push
movsb
cmp
pusha
mov
jne
and
pop
pop
mov
cmp
and
pop
pop
popa
add
add
mov
movl
clc
loopne
in
xchg
inc
mov
push
inc
push
stc
addr16
and
inc
cld
fwait
orl
xor
ljmp
pop
iret
xor
popf
aas
or
in
jp
xor
push
inc
rcrl
xor
sub
jne
push
xor
pop
ja
push
jo
cmpb
push
and
mov
push
push
add
jmp
outsl
mov
xchg
jne
cwtl
lea
dec
push
ss
and
push
insb
rorl
mov
or
movsb
add
jbe
movsl
adc
sub
sbb
cmp
pop
pop
and
cmp
fidivrl
mov
cmp
and
insl
aas
xor
xor
xor
aaa
cmp
and
lcall
cmp
in
popf
cmp
xor
outsl
test
cmp
xor
xor
aas
push
dec
xor
aas
cmp
fisttpll
aas
xor
inc
mov
mov
aas
cmp
jg
dec
lcall
cmp
mov
aas
sti
adc
aas
cmp
sub
inc
xor
cmp
rorl
xor
les
inc
aas
ss
aas
comiss
xor
cltd
push
mov
ds
sub
ss
push
push
aas
mov
aaa
pushl
rorl
mov
scas
nop
push
lods
xor
ja
mov
xor
add
mov
inc
xor
rol
xor
cmp
or
aas
jle
add
xor
mov
ja
or
jle
cmp
arpl
das
nop
mov
cmp
xor
xor
cmp
or
aaa
das
cmp
enter
xor
or
xor
cs
adc
aaa
cmp
xor
jl
pushf
inc
cmp
xor
orl
or
in
pop
sbb
das
cmp
xchg
in
cmp
xor
adc
dec
xor
cmp
xor
add
add
jg
outsl
mov
adc
enter
dec
add
add
xor
xor
push
enter
xor
xor
xor
cmp
shll
adc
shrl
and
aaa
mov
mov
or
and
fsubrs
cmp
ss
pop
mov
xor
xor
add
das
xor
jb
stc
add
xor
or
dec
add
addr16
fsts
dec
xor
inc
mov
adc
add
and
out
mov
add
sbb
mov
push
jmp
adc
imul
push
inc
lret
mov
inc
cmp
rolb
sbb
mov
jae
mov
adc
rclb
hlt
je
gs
mov
add
sbb
jno
add
adc
daa
lahf
dec
lret
add
enter
dec
mov
int3
ss
les
adc
pop
cmpsb
into
add
push
mov
xchg
lock
jb
test
pop
sub
fcom
jo
lea
dec
xchg
arpl
pop
nop
data16
incb
jmp
testl
adc
sub
add
pusha
push
mov
pop
leave
sarb
push
sbb
movsb
add
outsb
popa
mov
nop
pop
mov
je
sarb
lret
xchg
cmp
enter
and
sbb
inc
icebp
aad
adc
or
cmp
or
mov
xor
mov
les
dec
js
sbb
leave
aaa
and
mov
xor
sarb
jne
insl
fnstenv
dec
movsl
ret
sub
clc
aad
mov
push
out
clc
add
ficoml
fmuls
dec
iret
jp
inc
shrl
and
or
in
or
and
das
sbb
push
test
push
les
mov
mov
mov
nop
mov
push
pusha
nop
mov
les
add
push
lods
cmp
mov
lods
ss
fcom
sub
loopne
mov
cwtl
in
jb
inc
or
dec
loope
sbb
inc
add
in
loop
fsub
scas
jge
push
sbb
es
jecxz
les
and
xor
gs
jl
sbb
inc
or
inc
fs
push
nop
in
mov
sbb
inc
pop
jb
in
in
add
call
repnz
popa
and
dec
out
roll
imul
clc
fcomi
xchg
jnp
nop
repnz
sbb
ja
jno
add
jb
push
pop
dec
movups
ret
test
adc
call
pop
adc
aad
in
cltd
in
in
pop
loopne
xor
add
mov
gs
pop
fdivrl
nop
mov
call
cmpb
repz
mov
fstp
mov
sub
push
add
dec
aam
aam
shr
or
mov
bound
push
in
les
enter
cmp
mov
cmp
daa
push
movsl
mov
je
stc
ds
popf
jl
xchg
push
nop
xchg
add
daa
jne
lret
pop
jmp
mov
mov
mov
xor
lods
test
mov
push
movsb
imul
jne
xchg
idivb
lcall
in
pushf
pushf
test
cmc
inc
mov
iret
and
iret
out
pop
mov
fbld
sbb
mov
sub
fidivs
or
loopne
nop
imul
lods
sbb
mov
bound
or
jl
data16
test
ljmp
dec
cmp
ljmp
mov
add
sub
xchg
pop
inc
jp
mov
popf
lar
scas
mov
dec
outsl
int
scas
pop
fistpl
pop
pop
fisubrl
xchg
shl
push
or
xchg
pop
dec
push
ljmp
and
sub
mov
mov
cmp
sbb
dec
mov
rep
in
ret
mov
jp
pop
jno
rcrl
push
jnp
subb
jns
push
mov
fs
inc
inc
in
es
nop
xchg
add
push
lock
and
cmp
xor
cmp
rcll
add
mov
movsl
rclb
xchg
stos
push
pop
jl
xor
xchg
xor
sub
jbe
and
sbb
sbb
and
jb
sbb
add
mov
mov
fldenv
xchg
fmuls
lds
aaa
aaa
adc
mov
sub
dec
addl
dec
push
inc
cs
movsb
pop
rorb
inc
xchg
and
sbbl
add
xor
fildl
ss
pusha
dec
dec
dec
arpl
std
inc
pop
pop
inc
push
push
cmpsb
dec
push
pop
mov
pop
push
xchg
dec
ret
or
dec
fnsave
xchg
lock
outsl
orl
test
mov
inc
addr16
push
dec
ret
out
mov
or
popa
je
mov
idivb
outsb
outsl
mov
pop
and
shll
add
pushf
push
addr16
or
ret
pop
jb
daa
or
aas
aaa
cmpb
xor
bound
inc
adc
xor
sub
inc
push
in
and
xor
inc
jge
fs
cmp
add
xor
xchg
in
pop
aas
mov
fisttps
aam
pop
push
dec
dec
push
push
loope
test
push
dec
inc
pop
jnp
mov
or
pop
jge
mov
xchg
jne
jo
push
sub
xor
sub
xchg
out
mov
add
xor
cmp
xor
arpl
gs
pop
scas
repnz
das
lods
dec
and
dec
or
cmpsl
pop
mov
xor
xor
add
push
xor
add
cmp
jno
rcll
or
lahf
das
cmp
xchg
sbb
dec
aaa
add
add
fsubl
fldt
adc
or
or
imul
jle
sub
pop
xlat
dec
adc
aas
out
mov
mov
and
cs
aad
cmp
sub
add
pop
inc
add
popa
and
pop
decl
xchg
adc
shlb
push
enter
cmp
xchg
andl
ret
jecxz
pop
and
fmuls
mov
dec
or
orl
mov
jl
pop
and
and
jecxz
mov
mov
xchg
dec
bound
push
hlt
mov
jg
xchg
test
inc
sbb
pusha
aam
mov
ljmp
dec
dec
inc
inc
dec
pop
dec
inc
dec
add
addb
out
xchg
insl
cmp
or
pop
sbb
aas
cmpsl
or
cwtl
nop
cmp
addb
inc
stc
aad
loopne
xlat
jnp
data16
xor
xor
test
jle
jg
xor
sub
cmp
gs
scas
xor
xor
inc
inc
sub
out
xorl
xor
or
in
insl
pusha
pop
ss
inc
inc
xor
outsb
cmp
inc
pop
inc
xor
inc
inc
clc
idiv
add
inc
cmp
xor
fs
arpl
add
cmp
data16
arpl
cmpsb
out
pop
add
pop
xor
xor
pop
lahf
sub
mov
mov
pop
cs
inc
add
movsl
pop
adc
or
pop
push
sbb
adc
mov
mov
orl
sarl
pop
bound
imul
iret
push
inc
dec
push
push
pop
inc
add
mov
das
xor
test
mov
mov
mov
cmp
cmp
je
insb
out
daa
adc
addr16
sahf
clc
add
das
jae
add
mov
mov
pop
repnz
inc
and
jne
lods
cld
cmp
dec
ja
mov
and
inc
pop
dec
mov
fs
xor
imul
dec
shlb
test
iret
jb
inc
pop
pop
add
cld
lds
lock
inc
fsubrs
or
mov
sbb
call
repnz
in
xchg
push
inc
lcall
leave
and
cld
pop
std
lea
sub
lods
subl
pop
jo
movsb
in
test
cmp
fs
cld
adc
rorb
outsl
pop
pop
dec
sbb
push
mov
out
pop
nop
sbb
push
sub
in
push
insb
adc
sbb
inc
mov
cltd
add
sub
xchg
jbe
inc
mov
cld
loope
mov
lea
jbe
repnz
and
cmp
cld
gs
jno
and
mov
daa
jne
roll
and
pop
xchg
jns
pop
insb
pop
sar
adc
xorb
imul
mov
adc
pop
mov
test
and
xor
ljmp
cs
sbb
rclb
jns
dec
fdivrs
xchg
lock
cmp
push
sbb
cmp
lock
test
nop
mov
jae
cwtl
mov
inc
popf
call
xchg
or
xor
mov
xor
xor
in
cs
sbb
and
in
rclb
gs
adc
inc
cmp
lods
loop
lret
lahf
sbb
jno
bound
add
cs
push
lea
xchg
cs
inc
inc
pop
and
jmp
scas
and
rol
xor
push
xchg
add
push
je
push
pop
push
fs
push
inc
xor
xor
pop
call
and
and
in
movsl
add
push
and
jo
pop
inc
push
jae
scas
push
push
stos
sbbb
sub
aaa
test
mov
jmp
out
and
pop
push
ds
xor
adc
clc
mov
dec
rorl
mov
repz
jbe
fs
xchg
hlt
sbb
sarl
fistpll
fimuls
pop
push
je
and
fistpl
scas
movsb
push
loope
mov
mov
dec
fnstsw
int3
std
dec
repnz
dec
pop
xchg
or
mov
sbb
dec
les
xchg
cmp
push
les
sub
xor
sub
inc
sarb
nop
mov
loope
repz
cmp
push
adc
mov
adc
push
mov
test
mov
add
pusha
sbb
adc
iret
push
cmp
sub
test
ret
jae
std
mov
clc
movsb
xchg
nop
dec
add
xor
cmp
std
scas
movsb
add
push
adc
mov
adc
or
cwtl
cmp
pop
sbb
xchg
xchg
nop
or
and
dec
cmpsb
nop
nop
cmp
test
mov
nop
test
mov
ret
outsl
cmpb
roll
sub
push
cmc
sub
lret
enter
incb
xchg
sub
xchg
aam
sbb
add
sbb
negb
lods
push
pop
push
sub
mov
je
fbld
aam
jp
push
pusha
imul
das
das
mov
int3
punpckhbw
pop
cs
das
aas
pop
std
call
inc
xor
cmp
inc
xor
inc
inc
add
mov
inc
xor
inc
int
mov
clc
mov
scas
mov
popa
outsl
bound
mov
ds
jl
sti
add
das
shll
das
add
pop
mov
inc
add
int3
aam
cmpsb
je,pn
adc
aaa
ja
addl
ja
aas
fisubrl
enter
jo
add
outsb
xor
mov
xchg
pop
dec
ja
xchg
mov
adc
daa
mov
cmp
push
repz
mov
cld
xchg
or
dec
dec
inc
lods
das
test
jne
cmpsb
scas
and
jns
push
pop
mov
out
or
pop
adc
fbld
or
insb
jae
cmpsb
add
test
inc
xlat
push
aas
call
jl
or
pop
adc
pop
or
sbb
cmp
add
js
enter
pushf
add
sbb
pop
cmpsb
dec
je
je
mov
int
push
cld
adc
jne
sahf
dec
sbb
loope
lock
fdivl
sti
pop
push
out
lea
xchg
add
enter
in
jo
mov
insb
or
cmpsb
insb
fmull
lret
push
xchg
jo
mov
enter
cli
mov
xchg
pop
ljmp
sub
aaa
leave
sbb
xchg
fs
icebp
push
mov
dec
xor
pusha
pusha
nop
je
movsb
xor
jo
fwait
pop
lret
leave
pop
pop
pop
inc
jb
nop
inc
and
inc
jb
push
push
pop
xchg
dec
push
xchg
dec
dec
dec
insb
sbb
inc
push
sbb
fs
add
cmp
dec
gs
scas
cmp
mov
nop
push
push
ljmp
pop
xor
pushf
and
jb
pushf
sub
push
sbb
sub
push
xchg
and
sbb
in
icebp
mov
cmp
push
les
cmp
sub
mov
sbb
das
aaa
nop
repz
data16
cmp
jl
insl
pop
shlb
lea
outsb
add
adc
int
dec
lret
sbb
pop
scas
movsb
jne
push
orb
or
mov
or
pop
aas
mov
cld
repnz
incb
xchg
push
cs
add
add
nop
mov
xchg
lret
clc
repnz
bnd
pop
lock
mov
mov
divl
test
sub
leavew
out
movsb
movsl
push
jo
imul
popf
bound
cltd
call
adcl
lds
push
loopne
int
jbe,pn
pop
push
fdivs
enter
mov
repnz
cmpsl
dec
and
in
mov
sbb
shr
push
inc
psubsb
add
pop
xor
jb
and
pop
xchg
mov
sar
push
mov
test
sarb
mov
xor
jmp
test
xorl
sub
inc
dec
xor
inc
push
pop
push
sub
inc
cld
cld
sti
fsubs
pop
inc
cld
inc
pop
push
cmp
push
push
popf
jmp
clc
lea
dec
popa
ret
add
sub
movsb
cli
call
dec
lea
bound
js
push
or
sub
mov
test
pop
xlat
rol
adc
das
movsl
mov
sbb
inc
dec
push
push
aas
ljmp
pop
add
dec
inc
popf
inc
ds
dec
dec
push
pop
xor
lret
out
scas
mov
pop
aas
mov
pop
push
dec
inc
and
push
dec
sbb
mov
adc
inc
pop
dec
dec
dec
scas
int3
xor
dec
sti
fcmovbe
mov
push
aas
inc
dec
push
inc
inc
dec
pop
lock
xchg
nop
inc
push
or
dec
es
inc
aas
cmc
push
pop
xor
pop
pop
and
push
outsl
adc
xchg
mov
push
roll
pop
imul
fsubr
sbb
lock
sar
ss
push
sahf
mov
inc
xor
cmpsl
scas
cmpsb
js
adc
xchg
add
addr16
cmp
sub
adc
sub
addr16
cmp
cwtl
js
fistpll
aam
sbb
fstpt
std
xchg
add
lea
fsubs
jnp
xchg
mov
scas
dec
fdivrl
jo
cld
mov
push
test
add
fistps
mov
stc
in
int3
add
mov
nop
rolb
ja
sub
xor
mov
pushl
jg
and
inc
cmp
sub
sub
sub
sub
inc
cmp
and
xor
pop
xor
dec
xchg
pop
jb
sub
push
mov
xlat
mov
push
inc
jb
inc
cltd
lock
xor
pusha
dec
enter
lcall
repz
add
add
mov
pop
and
mov
inc
repnz
sub
addl
enter
in
pop
inc
insl
and
push
or
mov
or
jge
push
rcrb
xchg
dec
mov
iret
aaa
mov
cmp
jle
pop
xchg
push
mov
std
lods
mov
dec
stos
jge
movsl
mov
or
aam
mov
ret
cmp
and
outsl
cmpsl
in
decl
sub
xor
mov
adc
movsb
mov
mov
adc
pop
daa
mov
clc
or
inc
push
jmp
cmp
int3
sbb
xchg
add
mov
xchg
enter
inc
jb
pop
leave
adc
and
pushf
sbb
shl
jb
inc
or
lock
mov
xchg
pushf
pop
mov
mov
add
sbb
cmova
cmp
mov
push
sub
leave
xchg
or
adc
adc
sbb
or
mov
paddusb
jmp
sbb
adc
bound
gs
pop
push
ljmp
insb
insl
outsb
outsl
jo
movsb
jne
ja
jns
add
outsl
imul
aaa
jae
dec
popa
orb
push
push
dec
jns
inc
dec
push
daa
dec
inc
mov
xchg
or
mov
ret
shrb
pop
lcall
dec
add
mov
xchg
jb
or
lcall
pop
push
dec
add
shr
sub
inc
mov
add
rolb
push
mov
mov
lods
repz
loopne
jne
aaa
std
cmp
mov
mov
jge
mov
int3
shrb
add
test
mov
das
lods
mov
sbb
add
cmp
mov
cmp
pop
fisubrs
test
xchg
and
xchg
and
lock
pop
out
imul
dec
imul
roll
or
jmp
iret
shlb
fidivrs
fwait
and
int
shrl
mov
jne
add
mov
inc
lock
sbb
inc
jno
lods
sub
in
lea
and
mov
jo
adc
jl
mulb
inc
cmp
jo
sbb
push
adc
daa
push
dec
inc
push
push
xor
popa
jmp
push
inc
pop
mov
xchg
jbe
jge
pop
or
int
pop
adc
call
add
jae
sub
adc
add
sub
test
loop
xor
cmp
inc
jb
movsb
cmp
shl
rclb
cmp
movsb
movsl
je
jge
jg
test
pop
add
orl
add
popf
jge
xchg
cmp
dec
popf
pop
out
scas
fwait
or
sbb
push
lds
push
xchg
in
fisubl
and
adc
or
sub
inc
sbb
pop
adc
adc
cmp
cmp
and
mov
add
ja
int3
inc
stos
mov
jmp
mov
sub
mov
adc
loopne
add
and
push
push
and
lea
inc
pushl
rcrl
clc
cwtl
or
enter
cmp
inc
popa
mov
sub
or
popf
mov
jo
cmp
adc
inc
pop
cld
xor
xchg
out
dec
lods
dec
shl
jne
outsl
xchg
pop
xor
nop
jge
mov
in
inc
cmp
push
shl
inc
mov
mov
push
pop
sbb
ret
adc
ret
mov
adc
clc
inc
movsb
mov
mov
and
lret
lcall
nop
ss
cmpsl
sti
push
dec
mov
push
jne
imul
mov
and
dec
nop
outsb
jb
dec
lods
adc
xor
adc
daa
fcmovb
dec
inc
ret
sub
cmp
adc
stos
insb
pop
jecxz
xchg
pop
or
jl
loopne
adc
push
or
push
cmp
pusha
aam
sub
add
mov
xchg
xor
jmp
jns
pop
mov
daa
movsb
dec
add
jmp
outsl
adc
sbb
xchg
inc
int3
adc
imul
addb
xor
and
and
test
mov
repz
psubw
and
aam
hlt
adc
nop
lret
aam
add
sbb
sahf
xlat
push
mov
mov
dec
push
arpl
je
pop
dec
push
xchg
out
add
add
add
daa
pop
movsb
jb
ja
jp
push
cmpsb
nop
mov
push
stos
jmp
sbb
in
xchg
and
xorl
sbb
cltd
enterw
sbb
rol
rcr
mov
fwait
cmp
push
push
add
aas
add
lds
sub
adc
imul
mov
lds
std
or
push
xchg
dec
sub
fcomps
call
popf
in
mov
stos
add
mov
cmp
adc
add
imul
jmp
push
outsb
fs
outsl
and
add
and
scas
pop
stos
pop
or
idiv
inc
pop
inc
mov
dec
mov
xor
ret
xor
push
mov
cmp
nop
xchg
dec
pop
inc
aad
les
add
movsb
xor
cwtl
sbb
push
adc
pop
mov
or
sbb
adc
cmp
adc
cmp
adc
jbe
or
fimuls
pop
and
cmp
add
jo
adc
daa
divb
xor
sbb
push
add
add
and
mov
adc
and
stos
or
cmp
add
pop
inc
out
in
adc
sub
and
push
nop
movl
pop
ljmp
dec
loop
xchg
add
push
and
test
dec
xor
daa
or
sbb
adc
push
jb
and
inc
loopne
add
out
push
das
sarl
imul
shrl
adc
call
jb
and
jmp
and
jo
mov
pop
ficompl
inc
fs
push
jo
pushw
imul
sbb
sbbl
lret
dec
ret
mov
insl
push
cmovo
xor
mov
mov
push
and
xchg
rcl
aam
mov
and
and
cmp
and
add
or
leave
fcomps
cmpb
fs
ficoml
enter
stc
push
pusha
test
les
dec
ret
mov
rorb
inc
out
push
pusha
shl
leave
add
mov
add
jmp
mov
sbb
inc
mov
int
fdiv
ret
mov
add
loopne
cmp
cmp
and
jnp
rolb
and
lock
cmpsb
mov
in
mov
sbb
sbb
add
lcall
aad
jmp
incl
mov
test
add
xchg
xchg
jbe
mov
rol
sbb
add
cwtl
cmpb
fstps
fdivs
ret
test
test
subl
xchg
inc
adc
jo
xchg
mov
xor
mov
ds
inc
dec
mov
sbb
mov
rcll
popf
xorb
sbbl
and
jp
nop
pop
inc
xchg
repz
jae
dec
jmp
lret
leave
cmp
push
inc
pop
insb
cs
or
dec
sbb
pop
daa
xchg
mov
add
pop
pusha
or
xchg
inc
cs
and
inc
or
pushf
push
inc
sub
cmp
inc
enter
or
or
and
repz
cmp
cmp
xchg
out
jb
and
or
adc
xchg
lret
and
adc
add
cmp
scas
mov
cmp
imul
push
inc
push
add
lret
pop
ret
lahf
lock
fldcw
adc
nop
outsb
cmp
sub
mov
stos
adc
test
cltd
pop
fwait
dec
dec
in
in
and
fidivl
fimull
adc
and
test
mov
push
loope
ficompl
testl
jo
push
les
push
aas
test
mov
cwtl
sbb
mov
adc
or
push
push
testb
and
jb
lret
xor
adcb
or
rcrl
cli
add
or
es
stos
movsl
xchg
hlt
aas
or
add
test
es
add
sbb
inc
pop
rorl
adc
cmp
adc
loopne
or
xchg
inc
sbb
mov
mov
jecxz
jle
adc
inc
es
ret
add
adc
dec
inc
xchg
inc
jg
add
add
cs
jbe
pop
xchg
aam
xor
imul
sub
xor
xor
sbb
add
adc
sbb
popa
jb
xor
adc
or
adc
cltd
mov
sub
nop
push
fldcw
push
xor
add
negl
pusha
outsl
jnp
xor
test
add
movsl
adc
push
jo
stos
data16
addl
enter
push
jns
out
push
cmp
xchg
xor
inc
pop
push
daa
das
xchg
movsl
in
shll
xchg
ja
fsubs
and
daa
js
jae
or
ja
bound
sbbb
movsb
mov
fistps
shrb
decl
dec
data16
push
rorb
xor
adc
mov
movsb
ja
out
push
inc
push
outsl
insl
pusha
iret
sbb
imul
dec
push
dec
pushf
lahf
cmp
lods
xor
shr
mov
xor
add
adc
inc
cmp
idiv
aas
addb
or
lock
push
sub
jecxz
fdivr
fstp
std
mov
xchg
or
push
mov
aam
push
iret
jl
mov
les
sbb
pop
sbb
jae,pn
jmp
xchg
push
cwtl
enter
repnz
add
ds
add
push
mov
or
in
repz
ret
sar
std
inc
sub
pop
pushf
fstpl
push
xor
pop
xchg
add
dec
rorb
lea
sbb
jbe
lea
subl
and
rorb
lea
enter
lret
les
movsb
mov
sub
dec
bound
cwtl
addr16
in
pop
leave
cwtl
out
sub
fstpt
sbb
or
fcoml
and
xor
push
dec
mov
mov
ret
adc
ja
insl
jae
fbld
ss
in
int
push
imul
xor
add
cltd
scas
inc
cmp
adc
and
xor
movsl
filds
dec
push
push
and
cmpsw
or
lods
mov
mov
stos
emms
adc
ss
jo
and
scas
push
stc
mov
data16
sub
dec
es
clc
sub
add
pop
fsubs
sub
arpl
sub
jmp
xchg
xor
inc
push
xor
loopne
push
mov
push
aam
cld
jnp
jne
or
test
inc
add
outsb
lods
out
in
jle
push
andb
jl
iret
add
imul
sarl
sbb
inc
cmp
or
mov
stc
xor
les
cmp
imul
dec
pop
sbb
mov
out
stc
data16
mov
inc
add
adc
lcall
ss
mov
xor
iret
sarl
mov
mov
adc
filds
cld
push
sahf
out
sbb
int3
aam
movsb
fadds
test
jnp
sti
push
sbb
push
loopne
inc
inc
push
lods
jl
out
ds
in
inc
adc
or
shl
push
movsb
lods
dec
jnp
cmp
push
add
push
mov
imul
push
lcall
jle
xchg
jge
insb
sbb
je
xor
jnp
ss
jl
add
sub
stc
cmpsl
sub
xchg
inc
add
test
or
outsb
mov
dec
nop
mov
inc
push
or
inc
add
xchg
std
movsb
jmp
or
mov
notl
mov
push
adc
adc
xrelease
lods
push
jl
arpl
iret
shll
cwtl
mov
shl
xor
test
mov
lahf
cmpsb
cmp
xor
ja
push
in
mov
push
cwtl
mov
push
adc
in
push
pop
inc
add
push
push
cld
sub
add
pop
loope
adc
sub
mov
dec
dec
dec
test
or
ret
sbb
rolb
xor
popa
and
push
shl
sbbb
adc
jnp
out
push
aas
pop
add
and
cli
dec
data16
xor
lret
int3
enter
enter
fcomp
fxch
xchg
jne
das
in
fnstsw
loope
sbb
adc
xor
mov
mov
and
popa
je
xor
movsl
inc
mov
push
shll
xor
jp
push
adc
das
add
idivl
filds
dec
push
mov
cmp
shlb
or
add
push
and
xchg
jg
mov
push
cld
fistpl
mov
add
and
ds
xor
jns
out
inc
dec
push
pop
sahf
out
sahf
fs
je
test
pushf
movsb
lods
mov
jns
out
int3
aam
int
jns
in
hlt
cld
add
or
iret
repz
sbb
sub
cmpb
repz
dec
dec
dec
outsb
ja
add
add
and
add
gs
dec
mov
jge
enter
push
jle
add
repnz
mov
cmpl
cmp
cmp
jnp
test
rcrl
iret
rcr
mov
jns
pop
add
and
or
in
pop
pop
add
add
fstl
or
push
mov
outsb
adc
mov
cs
jg
or
cmc
push
addb
pop
fisttps
push
out
xchg
adc
cld
or
add
adc
push
dec
xchg
repz
repz
je
cwtl
test
cmpsl
stc
cmp
int3
fsubr
add
sahf
out
sahf
and
inc
push
pop
jo
lahf
out
adcb
mov
outsl
sbbl
push
imul
pusha
aas
mov
push
push
inc
xor
dec
scas
jl
jmp
inc
pop
sbb
push
push
sbb
or
or
test
popaw
xlat
inc
push
js
adc
sbbb
xorb
addb
push
loopne
cmc
js
push
lock
call
adc
jmp
and
pop
add
fidivs
pop
push
insb
xor
repz
stos
cld
cmpsb
lret
xchg
sti
push
test
mov
iret
repz
int3
push
add
or
jnp
out
add
cvttps2pi
iret
repz
inc
adc
insb
or
add
cwtl
sbb
scas
push
adc
or
add
push
sbb
xor
cmp
repz
add
jl
cmp
repz
cmp
les
aam
call
invlpga
pop
adc
out
sahf
addr16
push
adc
out
sahf
add
nop
cmp
sub
pop
out
push
add
repz
repz
push
subb
cmp
addl
int3
mov
sahf
mov
mov
sahf
out
sahf
mov
js
sahf
out
out
nop
ljmp
adc
cmp
idivl
js
mov
or
push
setp
rorl
pop
mov
testb
pop
jno
sub
mov
adc
mov
mov
inc
loop
out
mov
dec
pop
daa
fcomps
push
push
call
repz
push
push
mov
int3
fcompl
cld
or
sbb
repz
jnp
addr16
es
adc
sub
repz
cmp
sbb
addb
mov
andb
xor
or
pop
adc
pop
sbb
and
xor
cmp
ljmp
sti
paddusb
push
incb
pushf
pushf
pushf
pushf
add
adc
xchg
jo
pushf
adc
and
pop
adc
pushf
pushf
pushf
add
sbb
jo
pushf
pushf
add
scas
leave
leave
insl
and
adc
pop
ret
leave
push
or
jbe
out
sahf
out
xorb
mov
cwtl
nop
test
mulb
inc
dec
repz
test
mov
jmp
sbb
xchg
sbb
subl
inc
ret
repz
lock
sbb
sub
push
cmp
repz
jl
pushf
test
cmp
repz
pop
cmp
repz
dec
pop
in
cmp
repz
pushf
and
add
adc
fnstenv
imul
or
jmp
add
pushf
jo
add
adc
call
cmp
pop
or
nop
arpl
add
lods
push
mov
std
xor
cmp
repz
inc
cli
push
stc
iret
repz
push
idivb
repz
cmc
mov
iret
repz
lock
out
sahf
out
scas
lock
sub
out
sahf
out
inc
in
push
in
fs
sahf
out
jmp
ljmp
mov
push
mov
decl
inc
insb
imul
add
cmp
push
mov
ds
ficompl
jno
or
or
add
inc
cmpsl
lods
inc
mov
into
inc
adc
nop
mov
stos
ficompl
insb
jne
jb
inc
addr16
mov
adc
inc
add
pop
roll
inc
xchg
notb
pop
pop
add
das
or
add
add
outsb
push
mov
out
jns
xchg
sub
fldt
cmp
inc
add
xchg
outsl
leave
lods
pop
pop
add
fiaddl
mov
jns
cld
std
out
sahf
out
add
addb
xchg
add
pop
loop
dec
mov
inc
aaa
lea
scas
imul
scas
push
add
adc
sbb
dec
std
xor
adc
outsl
adc
and
xor
adc
iret
repz
es
push
imul
out
cli
mov
cld
add
out
xor
aas
add
mov
stc
push
mov
xor
adc
call
add
xor
gs
xchg
dec
mov
call
fs
inc
xchg
add
out
push
or
rcll
cmp
insl
ds
sbb
jp
jne
gs
enter
out
in
sahf
cmpsl
stc
cmp
cld
push
or
and
inc
jns
out
push
pusha
je
nop
out
sahf
out
mov
fsubr
iret
repz
clc
or
cmp
repz
je
pushf
mov
cmp
repz
stos
outsb
cmp
sub
pusha
js
jns
das
scas
push
and
xor
lahf
out
sahf
inc
dec
push
pop
pusha
and
ds
repz
sbbb
out
cs
dec
mov
lock
cmpsb
push
pusha
andb
in
or
sub
out
sahf
push
jl
int3
lock
out
sahf
ja
push
dec
sbbb
clc
and
cmp
cmp
repz
test
out
call
pop
out
sahf
out
pushf
mov
out
sbb
mov
pop
jl
ds
sahf
out
enter
sahf
out
sahf
leave
leave
leave
leave
leave
lret
out
lret
lret
jns
out
lret
lret
sahf
out
sahf
lret
lret
lret
lret
lret
int3
jns
out
int3
int3
int3
int3
int3
sahf
ja
out
int3
int
pop
jl
sahf
out
pushf
mov
repz
shll
push
insb
test
repz
pushf
mov
in
adc
out
lcall
jge
out
movsb
mov
sahf
out
fsubrp
push
xor
fs
jns
idivl
sar
rcl
shl
jns
out
rcl
rcl
sahf
out
sahf
rcl
rcl
rcl
aam
sahf
ja
inc
pop
je
lea
test
pop
sub
push
ja
jbe
dec
jge
movsl
ss
cmp
daa
mov
loopne
push
pop
insb
jmp
lahf
cmp
mov
xchg
pop
jl
mov
xor
dec
or
pusha
inc
push
pop
rorl
mov
lahf
adc
jnp
imull
pop
jle
inc
scas
jno
imul
ds
es
notl
imull
jle,pt
push
ds
pop
iret
jnp
enter
push
pushf
outsb
clc
mov
jmp
inc
adc
cmp
mov
out
mov
xlat
fadd
dec
push
insb
xor
and
cmpsb
ss
mov
movsb
es
fcompl
cmpsb
push
arpl
mov
daa
neg
jnp
jbe
data16
mov
enter
sahf
jne
mov
es
out
int
ficoms
push
aam
pop
pop
fbstp
outsb
or
push
int3
xor
jle
inc
mov
sbb
xor
add
cld
cmpsb
adc
ficoms
iret
xchg
pop
faddp
xor
shr
out
jle
cs
add
cld
jmp
jmp
cs
call
cmp
pop
dec
pop
testl
sub
dec
push
push
ret
mov
mov
adc
mov
cs
push
pop
inc
dec
cmp
ja
mov
mov
mov
push
fsub
fs
add
data16
pop
neg
add
and
clc
inc
data16
or
aas
inc
cmpsb
mov
inc
push
andb
in
pop
mov
mov
imulb
out
mov
sbb
pop
mov
js
or
push
test
lds
jmp
les
clc
sahf
push
loopne
int3
ja
andb
test
in
mov
fdivl
xor
fdivp
pushf
jnp
mov
pop
ficomps
hlt
out
sbb
push
dec
ss
adc
dec
push
pop
repz
mov
push
hlt
mov
xor
cmp
adc
jnp
sti
push
mov
cwtl
dec
mov
fsubp
jle
testl
add
loopne
xchg
sub
cmpsw
and
pop
push
call
push
dec
daa
scas
xchg
push
clc
mov
aam
or
and
mov
clc
cs
jle
cld
ja
cmp
cmp
or
dec
out
push
push
cmp
out
sahf
cmp
iret
jns
xor
maskmovq
testl
les
push
or
xchg
lods
jbe
fdivrl
loopne
js
cwtl
pop
aaa
dec
push
iret
xor
adc
or
ss
js
iret
jmp
mov
inc
sbb
lds
mov
das
pop
xchg
xchg
cmc
push
sahf
nop
dec
cmpsb
in
mov
xchg
jnp
mov
int3
es
sbb
xor
push
iret
ret
jnp
xor
inc
inc
jg
lcall
add
sub
add
add
add
inc
add
mov
stos
and
mov
jae
adc
or
mov
sub
lahf
mov
inc
add
add
add
add
inc
add
dec
add
cs
add
jbe
cmp
xor
dec
es
add
notb
inc
add
jnp
out
push
dec
aaa
add
pop
inc
sbb
mov
jnp
and
adc
push
pop
fcompl
push
pop
dec
add
inc
add
adc
xchg
push
outsb
lock
loop
push
inc
mov
aaa
insl
mov
jmp
inc
pop
jae
out
sbb
adc
or
repz
mov
push
ja
push
push
cmpl
into
push
and
roll
fstpt
push
mov
or
push
faddp
xlat
mov
or
repz
or
rcrb
dec
arpl
inc
dec
and
inc
push
cs
mov
sti
or
inc
sbb
inc
fdivp
fsubp
jp
dec
dec
push
rsqrtps
lods
ret
jnp
lret
inc
aas
or
sarl
push
add
inc
aas
in
jmp
fimuls
jle
imul
push
dec
pop
pop
pop
test
xchg
iret
paddsw
dec
gs
sbb
frstor
or
and
add
nop
xchg
jo
aam
sub
and
xorb
addb
jne
and
nop
cli
movsb
arpl
or
or
fstl
mov
add
sbb
sub
cld
syscall
str
sbb
xchg
ds
sbb
mov
mov
push
mov
jg
fbstp
or
add
cmp
imul
packuswb
add
decb
ficoml
iret
sub
xor
scas
inc
inc
dec
inc
inc
rclb
xchg
inc
add
push
pusha
inc
inc
push
inc
dec
in
in
dec
add
xchg
dec
inc
and
idiv
mov
push
pop
dec
push
test
add
and
rorb
inc
je
in
inc
sub
or
and
add
dec
xor
outsl
arpl
add
pop
insl
adc
and
fstl
lahf
aam
add
inc
mov
into
jae
daa
insl
daa
test
insl
cwtl
sub
subb
add
adc
push
add
in
mov
xor
or
or
adc
out
mov
andb
andb
enter
adc
jb
fwait
push
push
lock
push
inc
sbb
movsb
cmp
or
and
nop
xor
xchg
sub
fadds
xorb
int3
sub
xchg
sub
inc
or
test
and
inc
outsl
insl
ltr
cmc
inc
add
sbb
sub
mov
mov
adc
es
mov
mov
flds
mov
xor
adc
adcb
jns
inc
sbbb
xchg
adc
or
aaa
and
loope
outsb
lret
adc
inc
prefetcht0
dec
dec
adc
or
dec
dec
dec
dec
sub
cld
shlb
daa
daa
and
hlt
lock
daa
daa
daa
daa
call
daa
daa
daa
fcom
inc
rcll
cmp
leave
leave
leave
enter
enter
leave
leave
sarb
dec
cmp
inc
mov
pushl
inc
xor
inc
inc
and
incl
xchg
loope
add
add
dec
add
repnz
push
into
call
jns
mov
mov
push
push
or
or
loope
test
add
xchg
mov
xor
adc
fiadds
inc
mov
popf
inc
or
movsl
sub
sub
cmp
push
push
xchg
xor
or
or
cli
adc
das
gs
in
incl
cmp
pop
inc
divb
mov
pop
dec
ds
inc
inc
add
push
ds
jl
std
lcall
leave
xchg
dec
adc
jb
mov
lock
inc
xlat
ss
xchg
mov
or
sbb
ds
push
or
ja
or
aaa
push
xchg
and
call
in
xchg
adc
les
sub
movsl
jne
push
mov
xchg
mov
or
adc
cmc
sub
add
inc
stos
add
inc
idivl
inc
xchg
jl
lahf
push
cld
cmp
inc
xchg
and
cmp
inc
fsincos
ja
pop
jo
add
xchg
jl
sub
dec
les
aas
inc
ds
cld
incl
repnz
ds
std
incl
cld
inc
mov
sub
std
decl
sub
xchg
jl
cld
jge
pushl
std
call
lea
jb
xor
and
cld
ljmp
stc
push
bnd
inc
cli
inc
popa
sbbb
xchg
mov
pushf
test
pushf
outsl
test
pushl
repnz
and
mov
gs
cmpb
movsl
fwait
jmp
and
dec
dec
cmp
mov
testl
cmp
or
je
inc
xor
les
les
or
rcl
dec
test
adc
sub
pop
in
pop
notb
les
add
mov
adcl
push
call
inc
pop
ret
negl
scas
add
push
clc
pop
out
loope
cmp
mov
stos
clc
mov
pop
pop
divl
adc
mov
cwtl
inc
roll
mov
testl
std
testl
adc
dec
cmpl
inc
sub
mov
jmp
loope
aaa
sbb
lds
jecxz
and
xor
les
aas
dec
scas
sbb
inc
mov
aaa
and
add
gs
lret
incl
leave
inc
and
les
repnz
push
enter
les
cmp
adc
clc
cmpb
add
cmpsb
int3
cmc
sbb
ret
sbb
ja
mov
and
and
cmp
nop
lret
lds
incl
rep
mov
mov
mov
pop
mov
mov
ljmp
je
inc
jmp
lahf
add
ljmp
sbb
cwtl
pop
das
adc
fcoml
jo
insb
les
xchg
dec
mov
les
xchg
push
daa
adc
and
or
dec
lahf
cwtl
push
sub
call
pop
cmc
jl
xchg
and
jmp
adcb
incl
test
fisttpll
bound
mov
les
les
in
jl
clc
call
push
push
xor
pop
insb
aam
repnz
dec
lea
xchg
mov
xchg
jo
xchg
pusha
stc
and
mov
lcall
pushl
dec
and
mov
add
jo
inc
jo
inc
pop
mov
inc
add
inc
ss
call
pusha
int3
xchg
fsubrl
xor
adc
mov
lcall
add
notb
sbb
ss
dec
enter
repnz
xchg
xchg
lret
inc
enter
je
inc
xchg
jp
and
inc
ret
mov
mov
mov
push
adc
sbb
xor
xchg
ret
inc
fsubs
mov
xchg
cmp
sarl
setg
adc
dec
and
call
dec
fsubrs
pop
repz
icebp
es
or
mov
sub
notl
imul
in
popa
add
add
and
jmp
pop
mov
adc
lret
les
or
or
lret
les
loope
mov
sbb
mov
mov
clc
jmp
ret
xor
les
in
adc
pop
lods
and
call
sub
push
xchg
les
repnz
les
clc
cmp
add
dec
leave
and
push
push
mov
ret
xchg
nop
inc
jo
jo
inc
jo
pop
ret
inc
stc
test
xchg
inc
jno
sub
in
mov
xor
add
xor
xor
enter
ss
jmp
ja,pt
or
cld
jl
jno
les
les
imul
sbb
test
xor
add
inc
mov
xlat
push
jp
inc
jle
inc
jae
idiv
jmp
adc
pop
clc
jmp
stc
inc
arpl
sbb
pop
test
pop
out
in
xor
das
hlt
xchg
jo
cmp
adc
mov
mov
jae
jp
clc
fists
into
lea
mov
outsl
adc
imul
or
repnz
dec
sarl
pop
and
push
mov
or
push
jg
add
lods
dec
sbb
mov
jle
xor
or
jmp
dec
dec
or
inc
fstps
inc
cld
xor
mov
cmp
cmove
mov
rorb
push
push
lods
add
rorl
adcb
sbb
call
jmp
cld
sub
pop
mov
push
ret
stc
mov
in
or
add
mov
test
cmp
sbbb
psubsw
mov
and
ljmp
imul
add
or
shlb
push
incl
shrb
call
add
mov
pop
leave
adc
push
or
loop
sbb
or
inc
mov
test
fildl
push
inc
or
je
and
adc
sbb
mov
push
and
adc
lock
out
mov
cmp
stos
ret
adc
cmp
in
mov
xor
cmp
jle
in
ret
push
push
or
call
sub
rcrb
call
pop
aas
ss
xor
in
cmp
xchg
mov
dec
or
add
call
sub
shlb
pop
js
or
mov
loope
add
mov
mov
mov
test
xlat
xchg
lock
nop
or
adc
mov
cmc
insb
dec
clc
sub
push
xchg
mov
cmp
xchg
push
fbld
pop
in
test
jne
pop
cmp
mov
ret
pop
cmpsb
test
mov
or
dec
sti
or
out
movsb
fstps
loope
mov
adc
push
imul
mov
jle
xchg
adc
out
jle
cmp
adc
repz
fisttps
sbbb
push
repz
dec
push
bound
and
or
sub
roll
add
add
es
clc
cmp
pop
int
ret
pop
insb
xchg
ljmp
jbe
pop
iret
cli
in
push
xchg
adc
dec
out
aaa
cmpsl
sbb
movsl
rorl
popa
xor
lahf
or
nop
aaa
ss
incl
add
loopne
int3
fmulp
push
pop
test
dec
adc
rolb
jbe
xor
pop
out
adc
cmp
in
xchg
xor
push
dec
js
andl
inc
push
mov
movaps
sbb
and
mov
dec
sub
push
call
cmpsb
test
add
add
aam
add
int
jecxz
push
xchg
jo
mov
cltd
pop
mov
pop
xor
lock
push
call
cmp
or
add
xchg
jne
add
add
test
imul
iret
daa
stc
in
push
in
stc
in
aam
jle
push
jmp
xchg
xchg
aas
cmp
sbb
xchg
call
and
xor
cmp
sub
and
imul
test
and
ds
mov
jmp
add
rclb
add
movl
fadds
andnps
in
push
push
mov
jg
mov
sub
dec
push
jns
jmp
fldt
incl
adc
inc
arpl
repz
insb
pusha
lock
fnstenv
leave
pusha
cmp
insb
jecxz
or
stc
gs
and
imul
fs
jo
push
and
stos
push
push
jmp
dec
push
subb
jns
add
add
pop
cli
call
add
lcall
add
add
add
in
jnp
call
xchg
push
cmpsl
nop
addl
test
pushl
call
pop
sub
pop
adc
mov
dec
or
cmp
in
rolb
adc
mov
lcall
and
add
loope
push
pop
in
das
mov
adc
mov
mov
outsl
mov
out
inc
jae
push
push
js
out
adc
sbb
icebp
push
movsb
rol
or
pop
das
add
xchg
lock
jge
inc
cltd
xor
divl
sti
mov
xor
ret
push
mov
sbb
or
and
add
jnp
sub
xor
leave
xchg
loopne
lods
jmp
cltd
adc
iret
sbb
pop
lea
hlt
test
scas
in
dec
add
repz
add
fistpl
pop
shlb
and
add
mov
xchg
add
xchg
rorl
mov
mov
push
jbe
addl
push
cmp
dec
sbb
xor
mov
jl
scas
int3
incl
and
xchg
movsb
test
sbb
push
ret
lcall
cmpsb
add
addr16
and
and
aaa
sub
mov
xchg
fdivrp
into
add
add
pushl
stc
sbbb
lcall
test
lcall
repnz
ds
repz
incl
cmp
xor
push
je
dec
lock
std
das
or
inc
cld
dec
jne
call
leave
or
decl
popa
dec
icebp
std
ss
lods
xor
push
jbe
push
clc
inc
or
xchg
pop
dec
inc
shll
sub
sbb
test
popa
jbe
or
sub
pop
cld
std
decl
add
jmp
pop
mov
or
icebp
decl
pop
mov
or
out
and
lock
pushl
daa
std
decl
dec
jp,pt
icebp
push
dec
cld
mov
or
jl
push
das
dec
add
call
or
out
push
call
cmp
int
lods
sbbb
or
sub
dec
test
inc
push
xchg
xchg
rcrb
loop
dec
xchg
adc
adc
or
add
add
push
dec
jae
cs
xchg
adc
sub
lock
shl
pushl
jmp
adc
imul
lahf
insl
xlat
popa
jl
add
jge
mov
inc
or
pop
clc
inc
adc
push
fsubl
pop
repz
dec
sub
sub
aas
neg
fstpt
cmpsb
mov
out
fnsave
push
mov
push
inc
inc
dec
ja
stos
iret
test
xlat
push
jae,pt
pop
rol
pop
dec
dec
fdivrs
sahf
imull
sub
adc
and
add
fcomip
mov
push
das
call
sbb
mov
push
sub
or
adc
pushf
xor
xchg
push
decl
inc
nop
mov
jmp
dec
or
add
fists
add
mov
pop
jle
jmp
call
rol
push
rolb
push
dec
out
loope
add
outsb
or
fidivrs
cmp
jae
scas
ficoml
push
or
pop
cmp
push
add
jne
hlt
or
out
fs
mov
gs
push
pushf
movsb
daa
pop
push
sahf
xchg
jl
cmp
jle
fdivs
testb
sbb
inc
inc
cwtl
cmp
and
ds
das
and
mov
inc
clc
xchg
push
xor
dec
sbb
dec
arpl
add
sbb
push
mov
sub
sbb
testl
rorb
xor
loop,pt
inc
fsubrs
incb
stos
dec
popa
xor
mov
jae
fstps
xor
call
mov
ficoms
xor
sbb
iret
stos
ljmp
repnz
and
aad
inc
inc
test
pop
in
xchg
mov
cmp
xchg
cs
div
and
insb
mov
mov
pop
clc
or
lret
push
push
pop
push
mov
xchg
inc
xor
call
in
leave
std
xchg
or
aaa
sbb
cli
dec
mov
in
sub
xor
loopne
cli
mov
fucomip
jmp
divl
push
sbb
out
fldl
outsl
mov
mov
mull
rcrb
sub
or
mov
scas
mov
inc
call
inc
jnp
inc
sbb
push
jno
pop
fcomp
adc
call
mov
push
ret
call
push
idivl
xor
int3
push
pop
aam
and
lods
sbb
jmp
adc
pop
add
dec
jne
sub
mov
lock
in
mov
add
lods
pushf
add
sarb
cli
cmp
cmp
xchg
pushf
lods
idivl
scas
rcl
jmp
add
stc
or
sub
repz
mov
push
lcall
ljmp
cld
dec
mov
insb
mov
dec
sti
pop
jmp
ret
je
adc
inc
pop
jmp
jl
xchg
push
loopne
sub
dec
rcl
mov
pop
pop
ret
jne
insb
push
mov
cwtl
stc
fidivl
aad
pushl
jmp
dec
ds
and
xchg
or
or
div
adc
sbb
cmp
add
and
les
push
dec
mov
mov
sbb
arpl
ss
adc
dec
jne
mov
inc
fs
or
cli
jae
pop
testb
pop
dec
add
mov
dec
or
xchg
sbb
jecxz
sti
dec
dec
push
ljmp
sbb
or
add
lret
fdivs
jle
dec
sarb
ror
adc
jbe
push
adc
cmpsl
loop
enter
or
jl
dec
lcall
std
outsb
cmpsb
dec
addr16
jbe
cmp
lcall
pop
mov
and
dec
mov
sub
lock
sub
cmp
in
mov
adc
sbb
jne
out
jne
add
insb
js
pop
or
cld
jb
adc
add
adc
shlb
call
test
cmpsb
cmp
pop
out
lods
cld
xor
fmull
adc
xchg
cmpsl
or
xor
add
rcpps
fcomp
cmp
jnp
xor
sub
mov
repnz
shll
sub
int3
dec
ret
and
dec
in
push
add
add
or
fcmovb
add
push
fadds
push
jbe
push
sbb
icebp
mov
daa
sbb
icebp
mov
mov
add
ja
mov
mov
sbb
js
insb
or
mov
cs
pushf
xchg
cmp
jg
sub
push
push
mov
xor
cmp
mov
pop
pop
pop
xchg
out
jle
shll
in
mov
call
adc
mov
mov
ret
dec
pop
stos
insb
or
pop
repnz
lcall
add
sbb
jmp
mov
jle
scas
ret
mov
int3
dec
mov
pop
ret
sarl
xor
inc
mov
sub
mov
addr16
adcb
add
push
or
mov
ret
andb
pop
loop
adc
or
xchg
leave
jmp
out
mov
lea
xor
aam
push
out
and
push
aaa
cmp
lock
cli
or
adc
push
pop
sub
sub
outsb
inc
and
call
xlat
insb
jmp
clc
xor
inc
daa
pop
mov
sub
push
inc
and
dec
ds
push
mov
and
pop
inc
in
and
ja
test
stc
loopne
std
and
ret
fldt
out
adc
gs
imul
inc
add
inc
sub
in
mov
dec
adc
mov
loopne
xor
xor
scas
call
iret
pop
inc
es
add
xor
fscale
xor
fmull
sub
ss
mov
mov
dec
mov
repz
sub
ret
jmp
xchg
fbld
fldl
jmp
enter
dec
dec
enter
rorb
add
cld
ror
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
in
leave
leave
push
in
in
cmp
xor
in
in
and
sbb
in
in
adc
hlt
mov
daa
push
dec
inc
pop
es
or
and
fs
incl
adc
fs
add
push
inc
mov
fcomps
ss
xor
sub
inc
insb
adc
lcall
adc
xchg
mov
inc
push
adc
ret
mov
jg
pop
inc
mov
pop
adc
or
in
pop
test
sbb
sub
sub
or
les
push
dec
inc
jg
leave
xchg
and
pusha
dec
iret
jg
test
insb
or
imul
sbb
pusha
les
dec
inc
or
mov
push
ja
sub
push
enter
sub
adc
scas
xchg
and
or
push
pusha
jg
mov
and
enter
hlt
insb
adc
pop
xchg
nop
inc
cmp
jmp
out
jg
outsb
dec
ret
nop
mov
xchg
aas
push
jae
ret
xchg
rorl
cwtl
mov
and
dec
ret
das
dec
ds
ljmp
ljmp
and
xor
int
cmc
ret
dec
testb
pop
pop
and
add
repnz
incl
clc
xor
sbb
call
xchg
cmp
test
jb
outsl
xor
mov
mov
adc
or
adc
call
iret
jle
push
std
and
add
dec
inc
or
pop
jbe
xor
push
maskmovq
pop
mov
sbb
mov
dec
inc
push
inc
xor
cmpl
pop
and
inc
dec
inc
cmp
jne
inc
dec
ret
jle
pop
sbb
jl
test
xchg
mov
mov
sbb
or
jg
scas
push
push
in
adc
inc
add
pusha
into
add
inc
sbb
xor
and
and
mov
inc
adc
cmp
jmp
call
pop
lock
dec
cmpb
sub
js
or
dec
inc
sbb
enter
int
adc
mov
mov
sub
xor
in
jne
int
and
sbb
add
add
add
daa
out
lret
lret
std
cld
lret
and
jmp
jmp
ficoms
mov
push
cmp
cld
adc
pushl
cmp
ja
imul
sub
decl
dec
shll
push
pop
xor
dec
push
pop
aam
fisubs
dec
test
sahf
out
push
lds
dec
into
arpl
nop
dec
das
pop
je
lret
xor
pop
jge
sub
call
inc
je
or
push
pop
jne
iret
addb
sub
lea
mov
shl
icebp
dec
fisubrl
dec
mov
scas
in
and
add
push
jno
mov
xchg
lock
inc
cmpsb
adc
jp
or
add
dec
shlb
inc
pop
xlat
pop
xor
and
adc
pushf
fucom
in
inc
sbb
or
sti
rclb
mov
test
jb
into
in
les
pop
mov
lock
push
je
inc
xor
mov
dec
aas
sar
jmp
inc
ss
add
mov
ja
loope
lret
lea
push
xchg
jbe
incb
out
sub
sbb
mov
cmpsl
test
lea
cmc
and
inc
je
add
xchg
int
incl
loope
ljmp
loopne
decl
adcl
cmp
in
push
call
xlat
data16
arpl
test
cs
fisttpl
gs
jbe
pop
dec
sbb
pop
in
push
cmp
adc
jmp
cmp
or
call
and
loope
lds
or
test
fists
aas
xor
mov
dec
mov
pop
push
sub
cwtl
add
mov
add
iret
sub
jmp
sub
push
or
jo
push
jge
mov
mov
adc
jecxz
nop
nop
pushf
mov
mov
shlb
mov
enter
push
imul
mov
and
fisubs
mov
std
and
cs
and
xchg
xchg
sbb
dec
aaa
dec
xor
pushf
mov
dec
std
pushf
xor
popf
lods
jmp
sub
or
nop
out
cwtl
mov
movsb
inc
dec
gs
sub
cld
test
lret
aaa
push
inc
sub
lods
in
add
jo
and
rcrl
imul
jnp
push
pop
test
or
nop
xchg
cmpl
and
push
ds
mov
outsb
cmpsl
fdivl
push
pusha
pop
test
aas
sbb
loopne
mov
ficomps
mov
jecxz
loopne
stos
call
jns
leave
adc
fldcw
test
adc
inc
iret
call
or
jmp
lods
sbbb
popa
push
xchg
cmpsl
pop
std
add
add
ljmp
loop
push
incl
push
and
movsl
popa
fiaddl
rolb
jnp
inc
fdivrs
dec
sbb
inc
push
fwait
sbb
cli
or
rcrl
dec
xor
mov
cmc
incl
cmc
push
orb
push
xor
iret
xchg
and
adc
lcall
sbb
in
jo
push
pop
and
sbb
push
cs
sbb
sti
addr16
xchg
cwtl
add
dec
mov
mov
mov
addb
xor
lahf
hlt
in
or
or
fwait
je
inc
and
inc
jb
lock
iret
xor
movzbl
nop
mov
push
or
loopne
jl
test
or
dec
les
dec
mov
scas
enter
les
test
inc
lds
xlat
addb
lds
sbb
fists
sar
incl
push
adc
adc
inc
jle
fcom
decl
pop
xchg
jo
add
fldcw
adc
call
jmp
xor
lods
scas
imull
orl
push
stc
call
add
movsb
repnz
dec
loope
mov
rorl
pop
in
add
mov
testl
iret
pop
xchg
bswap
clc
imul
cmp
and
outsl
xchg
ja
cld
ficoms
xor
loop
add
ja
call
mov
xorb
xor
mov
mov
sub
sub
mov
loope
add
mov
cmp
call
xlat
sub
sbb
into
shrb
cmp
xchg
dec
cmp
jg
test
jb
jmp
mov
sbb
test
inc
sahf
mov
cmp
jle
fsubrp
xchg
rcr
xchg
lahf
push
mov
stos
xchg
gs
es
pop
insl
add
neg
xor
cmpsl
or
dec
dec
rcll
insb
jmp
add
lock
insl
mov
mov
cmpsb
xchg
push
cmpsb
hlt
or
jnp
out
icebp
cwtl
popf
add
mov
insb
push
test
xor
pop
sub
xchg
faddl
mov
push
test
fsub
iret
flds
inc
mov
add
push
scas
cmp
pop
in
aad
shlb
iret
and
cmp
mov
xchg
xchg
mov
into
add
pop
adc
dec
mov
mov
dec
mov
cmc
or
or
loopne
imul
xchg
pop
orl
aas
xor
jno
push
xor
and
dec
out
pop
xchg
mov
sbb
lret
aas
mov
add
adc
adc
adc
in
imul
call
dec
push
fstpl
jge
jno
cmc
jmp
dec
pop
push
shlb
lods
or
fwait
lahf
or
icebp
jmp
xor
mov
xchg
jg
or
jg
inc
mov
xchg
dec
sbb
mov
mov
loop
unpckhps
nop
bound
or
push
dec
push
sub
xchg
and
out
orl
jns
aas
pop
jo
pushl
xor
mov
dec
stos
or
dec
push
or
or
mov
inc
lcall
divl
or
fsubrl
cmp
jne
pop
in
cmp
inc
iret
in
sub
mov
push
lcall
mov
inc
call
je
dec
jne
mov
sbb
xor
ljmp
dec
mov
jmp
loop
es
xor
add
xchg
unpcklps
fnstenv
mov
sub
cmp
add
lea
aaa
inc
int
or
mov
mov
popa
xor
pop
mov
xchg
inc
or
sub
dec
sbb
hlt
pop
or
adc
jge
dec
shr
jmp
dec
inc
or
and
mov
dec
or
psubsb
cli
dec
std
in
mov
or
and
mov
inc
aas
jmp
xlat
out
mov
or
int3
orb
loop
into
jne
adc
mov
sbb
dec
xchg
les
scas
gs
add
fldl
imul
jecxz
jne
and
push
decb
shlb
clc
jne
jecxz
out
je
cmp
je
sub
cmp
out
loop
mov
push
add
xor
sbb
ret
jle
cmp
push
dec
lock
imul
out
cmpsb
mov
adc
jl
jo
pop
add
sahf
and
jns
fstpl
sub
sub
xor
je
cmp
loope
in
gs
xchg
je
mov
jmp
inc
jmp
xchg
mov
xor
mov
jmp
cmpl
sarl
loope
dec
mov
or
mov
loope
adc
mov
push
int3
fldenv
sti
jmp
push
in
mov
add
mov
cmp
pop
ret
jge
pop
pop
dec
xlat
pop
xchg
pop
es
adc
rolb
jmp
add
add
jb
js
adcb
or
ret
lea
ret
or
sahf
push
push
out
fwait
daa
and
out
sahf
out
push
sbb
inc
in
xchg
dec
inc
aam
dec
int
outsl
negb
hlt
mov
cmp
cld
or
scas
or
inc
pusha
mov
mov
pop
push
mov
mov
call
mov
pop
and
jl
clc
pop
dec
clc
and
dec
fdivs
jmp
ljmp
andb
xchg
jle
jmp
push
inc
xchg
xor
jge
or
loopne
xor
gs
es
jmp
stos
xchg
cmp
sahf
addb
addl
nop
repnz
xchg
movsl
adc
jge
nop
movsl
aas
xor
into
sbb
stc
pop
call
mov
or
add
mov
adc
adc
in
or
ret
popa
sub
call
fldt
add
xor
or
adc
ret
or
sub
mov
dec
inc
xchg
or
mov
or
je
repnz
add
xor
mov
fildll
mov
sub
fbstp
xor
add
lret
push
out
or
imul
mov
mov
add
stos
aas
iret
xchg
pop
sub
mov
mov
sub
dec
push
xchg
shll
xor
and
lock
out
add
cli
and
add
add
js
add
add
xor
dec
aam
lods
mull
dec
aad
cld
xor
shr
inc
jp
add
call
inc
add
cwtl
inc
mov
xor
in
xor
dec
dec
aad
push
fidivrs
xor
pop
inc
cld
fiaddl
xor
xor
inc
push
and
rolb
movsb
inc
dec
test
dec
loope
pop
mov
lcall
xchg
fs
mov
pop
push
shlb
dec
add
or
xchg
sbb
ljmp
dec
lock
rcl
add
adcl
insl
add
xchg
rclb
es
iret
sbb
add
shlb
faddl
call
fwait
inc
jp
js
mov
xchg
mov
lcall
roll
xlat
popl
jo
cld
out
mov
adc
add
mov
or
or
idivb
xchg
das
add
popl
add
cli
jl
pop
mov
add
clc
shr
jns
or
stc
dec
ficomps
loope
sbb
data16
call
adc
cwtl
sub
mov
xchg
mov
xchg
add
mov
dec
incl
or
inc
mov
mov
shlb
cmp
fldenv
hlt
call
cmp
jge
inc
sbb
clc
mov
in
xchg
dec
adc
add
cmp
iret
in
xchg
ds
jmp
ret
sbb
adc
ret
mov
rclb
je
cmp
lahf
stos
mov
sbb
and
mov
push
hlt
in
push
call
inc
test
pop
movsl
cmc
enter
clc
xchg
add
mov
ja
pushf
sbb
loopne
push
or
cld
pop
add
jmp
xor
pop
sbb
fsincos
jmp
push
inc
jmp
xchg
dec
jne
imul
sbb
xor
fildll
sub
jno
sub
stos
and
and
pop
and
inc
gs
lea
xor
adc
fstl
loopew,pt
in
jp
in
mov
inc
or
daa
sbb
sub
jns,pt
jo
data16
in
lds
jl
mov
sub
roll
adc
loope
lret
jg
sbb
push
xchg
faddl
faddl
testl
push
dec
mulb
ljmp
std
cmp
out
ficompl
fldenv
adc
decl
dec
mov
std
sbb
and
leave
fdivs
fsubs
jmp
xchg
lret
dec
imul
aaa
push
cvtpi2ps
repnz
aaa
ret
ja
call
mov
repz
daa
imul
mov
mov
add
mov
or
lods
and
xor
out
fsubp
inc
push
add
ds
push
push
lret
ret
aas
divb
mov
mov
jno
dec
push
xchg
jmp
outsl
sub
mov
sbb
sbb
cli
and
icebp
adc
push
addl
pop
outsl
inc
jmp
mov
incl
inc
mov
repnz
and
xchg
ret
test
jno
or
jne
jne
nop
xor
aaa
push
xchg
mov
pop
sbb
call
leave
loopne
fstpl
inc
inc
imul
lahf
inc
ja
data16
aam
add
xchg
outsl
outsl
push
arpl
pusha
mov
mov
pop
call
das
out
jne
rcr
shlb
cmp
mov
imul
shrl
or
lock
jnp
mov
repnz
imul
pop
inc
cmp
xor
cld
rcl
and
in
mov
push
pop
mov
inc
or
hlt
mov
pop
mov
std
test
xor
testl
shrb
and
jmp
jb
testl
cmp
jns
lds
cmpsl
adc
pop
xor
cmpl
rcl
out
and
repz
lcall
mov
adc
cmp
push
push
das
test
ss
and
cld
and
cltd
fs
mov
jne
dec
fdivr
cld
int
lret
mov
incl
call
xchg
sti
out
xor
stos
cmc
cmp
lds
scas
insb
leave
les
jecxz
and
jnp
jl
pop
xlat
dec
push
pop
add
sbb
test
and
push
push
dec
or
negl
add
pop
call
fsubs
fs
ret
popa
movsb
mov
lret
inc
in
mov
inc
outsb
inc
and
rorl
sub
or
push
lret
test
cs
je
xchg
test
invd
lds
fldcw
into
stos
and
mov
cmpl
add
adc
incb
in
mov
lock
push
call
fwait
add
fiadds
mov
in
or
lahf
xchg
cmp
or
aaa
mov
icebp
jnp
iret
jne
jp
add
or
mov
mov
loop
cmp
cltd
push
je
cmp
or
sub
test
sbb
bound
pop
scas
pop
popl
jp
in
mov
sbb
add
lret
aam
jo
adc
or
js
roll
in
push
decl
outsl
push
jo
adc
outsb
clc
les
loope
maskmovq
imull
dec
repnz
fstpt
inc
sbb
mov
packuswb
negl
and
push
mov
rep
or
mov
adc
and
jmp
add
fldenv
mov
cwtl
xchg
jo
scas
js
cld
mov
out
mov
sub
es
lcall
sbb
outsl
xchg
add
sbb
std
mov
rorl
ret
adc
into
push
mov
or
subl
bound
shll
pusha
ret
lahf
xor
js
cmp
push
or
mov
inc
add
sbb
or
adc
adc
sbb
adc
popf
fwait
push
adc
orb
and
test
inc
out
mov
or
pop
push
clc
add
jbe,pn
and
aad
mov
cmp
ja
jge
lret
cs
and
in
cmpl
popa
mov
inc
push
xchg
popf
xor
mov
jnp
xchg
aam
lock
adcl
add
imul
add
cmp
inc
jb
or
cld
add
icebp
in
in
cli
and
cmp
insl
rclb
bound
ret
sub
or
adc
jb
push
xorl
push
and
inc
dec
rcrb
cwtl
test
jmp
fistl
xchg
jmp
out
bound
iret
rorl
or
inc
je
sar
mov
push
push
repz
inc
aas
fdivl
sahf
or
or
notl
jns
sub
pop
icebp
add
into
lcall
fisttpl
or
je
call
icebp
fsubrs
dec
lret
test
inc
mov
inc
xchg
iret
hlt
mov
insl
pop
dec
les
and
fs
and
lret
jg
shl
imulb
mov
add
add
jno
mov
or
es
fisubrs
incl
add
repz
in
push
cmp
nop
xor
adc
addl
sbb
lds
rcrb
pop
cmpsb
xchg
inc
mov
dec
or
ljmp
mov
add
push
outsb
lret
or
sub
lcall
shlb
addr16
push
inc
add
pop
iret
mov
mov
sbb
adc
std
pop
cltd
shlb
iret
sbb
dec
or
jp
mov
out
sbb
sbb
shlb
mov
mov
enter
testb
xorl
push
push
or
loopne
iret
aaa
sub
adc
cmp
pop
call
popa
gs
dec
jle
and
mov
sbb
iret
or
rolb
stc
jge
insl
js
call
sbb
mov
push
in
jl
divl
clc
dec
jle
std
jl
sbb
dec
lods
aas
jne
dec
shrl
lahf
sub
popf
cmp
enter
jbe
in
cld
mov
pop
jo
xchg
jbe
xchg
xorb
sbb
jl
rclb
enter
xchg
pop
int
and
movsl
insb
adc
ja
or
in
in
push
xor
adc
arpl
in
dec
dec
xlat
xchg
scas
je
sbb
test
pop
cmpsl
dec
jp
push
sub
mov
sub
je
sbb
xchg
mov
decl
mov
add
mov
dec
jne
mov
add
test
leave
cmp
xlat
inc
ret
fidivs
stos
inc
pop
mov
xchg
push
test
andb
pop
shll
ret
pop
or
mov
lods
jb
cmp
xchg
fld
lea
and
push
dec
inc
mov
sbb
into
cli
call
and
or
clc
idivb
push
cwtl
mov
nop
test
mov
in
pop
jmp
stc
call
inc
mov
test
sbb
adc
mov
lret
popa
add
dec
and
bound
mov
push
mov
push
add
jecxz
xor
or
adc
add
jge
iret
xor
cmp
aaa
mov
sub
iret
mov
or
jmp
jnp
add
adc
dec
jmp
leave
js
addl
jne
xchg
mov
and
inc
les
pop
stc
cmpsl
mov
dec
scas
push
xchg
jo
pop
lods
inc
std
add
adc
leave
add
inc
setne
and
in
or
in
and
jne
es
add
das
loope
cmp
adc
cmpsb
test
call
push
push
dec
add
dec
xchg
mov
call
leave
adc
call
sti
out
movsl
loopne
add
cs
dec
int3
test
lahf
adc
cmp
add
lods
lahf
rolb
pusha
inc
or
sub
orl
mov
cmp
mov
lock
mov
pop
lahf
scas
or
cmp
mov
xor
call
cmp
and
xorb
dec
mov
push
cld
mov
add
cmp
iret
dec
enter
xlat
or
scas
add
or
jae
nop
mov
mov
dec
je
cmp
lea
test
sub
push
jl
cmp
dec
sbb
or
xor
xchg
sub
mov
cmpsl
outsl
aad
or
fisttps
lock
ljmp
jle
or
cmpl
fsubrs
or
add
cmp
sahf
aad
sbb
push
sbb
fisubrs
repnz
adc
pop
sbb
jmp
sti
add
jl
shll
mov
adc
addr16
loopne
inc
jmp
adc
out
pop
je
lods
daa
outsl
add
imul
jl
adc
js
xor
pop
jge
jle
jg
das
add
push
dec
pop
dec
inc
xor
mov
das
push
push
dec
add
dec
or
cltd
jl
xor
xor
testl
jp
xchg
cmp
sub
and
pop
xchg
cmp
jne
je
sub
es
or
les
stc
lods
mov
adc
sub
sbb
mov
stos
lds
mov
or
bnd
dec
jge
mov
mov
cmc
dec
or
xorl
loop
pop
jp
pop
lods
loop
nop
ret
cli
push
cmpsl
fsubl
push
call
xchg
xor
addb
xchg
ret
inc
push
test
and
testb
cmp
pop
adc
aas
add
add
jnp
dec
fldpi
cmpsl
rolb
or
dec
shlb
call
dec
adcb
outsb
add
push
jbe
cmp
dec
jo
insl
pusha
mov
psrld
addl
add
xor
jae
je
jb
dec
inc
bswap
add
pop
push
pop
jmp
fsubrs
pushl
rorb
mov
call
and
or
xchg
xor
movl
jno
add
push
xor
cmp
call
aas
testb
sub
or
pop
gs
fimull
movsb
push
pop
inc
mov
and
mov
push
pop
imul
dec
mov
fdivl
and
mov
or
xchg
sbb
add
xchg
adc
int3
and
lret
cmp
jmp
add
mov
mov
dec
add
or
inc
sbb
add
add
incl
mov
and
aas
in
jmp
pop
push
pop
xorb
push
sbb
out
lock
dec
div
fwait
stos
and
outsl
cmp
loope
mov
or
inc
cmp
dec
or
in
jae
push
or
add
or
push
jo
loope
pushl
jmp
in
cmp
ja
sub
or
mov
push
hlt
ds
sbb
repnz
inc
rorb
pusha
sarl
mov
aaa
movsb
movzwl
push
or
ljmp
bnd
cld
or
lret
je
cld
stc
add
sbb
sbb
jmp
or
ret
pop
mov
loopne
or
dec
sub
jo
cli
nop
pop
subl
sbb
mov
add
jp
lret
jo
and
push
lahf
popa
adc
pop
andl
mov
xlat
add
dec
add
and
push
fbld
jmp
insl
shl
push
adc
jne
sub
call
jg
popf
jge
js
and
cltd
add
lods
adc
or
inc
inc
jl
in
sub
negb
rcrb
mov
call
and
fs
mov
mov
popa
movzbl
sar
out
cli
roll
sbb
add
movb
mov
dec
fs
insb
cwtl
mov
idivb
lds
jge
shll
or
repz
fcoms
sub
pusha
into
rolb
fsubl
stos
inc
inc
jle
leave
in
test
ss
pop
add
stc
cmp
xor
jmp
addl
pop
mov
mov
xlat
adcl
mov
or
fstpt
pop
inc
pop
je
sub
decl
sbb
push
lcall
add
sbb
pop
mov
inc
inc
mov
cmp
cwtl
xor
shll
add
out
sub
sti
add
in
sbb
mov
dec
push
lock
pushl
add
xchg
mov
mulb
es
inc
cmp
xor
in
shl
dec
ficompl
sub
add
mov
pop
fmull
push
jo
adc
cmpb
and
and
mov
jbe
dec
int3
sub
mov
les
or
sarl
movsl
mov
and
mov
adc
test
cli
or
mov
push
dec
adcb
inc
dec
cmp
incl
mov
fwait
xor
std
jbe
stos
xorl
dec
mov
push
decb
test
and
mov
adc
je
dec
fcoml
mov
mov
inc
rcll
cmp
jae
jbe
test
push
cwtl
data16
nop
sub
sub
out
dec
jb
mov
sbb
sarb
xor
xorb
adc
or
push
dec
add
xor
lcall
nop
jmp
add
movsb
lock
jmp
hlt
add
adc
push
pop
and
sub
pop
mov
add
rorb
mov
sbb
fwait
add
cmp
jne
jo
push
push
int3
in
lock
ret
mov
mov
add
jmp
mov
dec
jmp
dec
adc
push
fistpl
stos
sbb
sub
enter
jl
or
pop
xor
jge
lock
inc
lock
lea
out
cli
or
lcall
mov
mov
dec
mov
sub
cli
rolb
inc
jge
insb
push
sti
pop
jl
push
rcll
or
movsb
movsb
or
mov
sbb
push
xchg
mov
scas
mov
mov
cmc
jae
ljmp
lahf
cvtsd2si
les
les
or
mov
je
mov
jmp
pop
aad
or
jmp
das
push
adc
jmp
sbb
cltd
lods
repz
stc
sbb
add
loope
sub
loopne
sti
xchg
add
dec
testl
loopne
roll
pop
and
inc
sub
jmp
push
test
sub
cmpsl
imul
adc
xor
test
mov
add
hlt
jmp
adc
dec
xorl
xor
inc
sub
enter
movsb
push
xor
rorb
cmpsb
add
add
lock
aam
aad
push
stc
rcrb
lea
js
or
fadds
dec
pop
or
fs
shll
sub
outsb
and
pusha
add
mov
in
in
lods
stos
clc
pop
mov
ja
mov
pushf
inc
mov
jne
out
or
shl
cmp
sub
mov
and
jb
jbe
cmp
insb
mov
sar
fcmove
xor
xchg
add
sbb
lea
stos
mov
cltd
sbb
pop
cwtl
sahf
mov
cmp
fwait
std
and
lea
inc
or
inc
pusha
sub
jge
adc
cmp
jbe
jae
jmp
out
adc
or
add
cmp
fisttpll
jp
push
mov
mov
jecxz
aad
rcl
adc
lcall
repnz
mov
dec
and
mov
mov
mov
fstpl
sub
pop
mov
out
push
insl
jb
sbb
add
imul
popf
push
sbb
inc
mov
lcall
sbbb
xor
ja
mov
push
test
sub
mov
outsl
xor
adc
dec
sar
mov
mov
add
mov
mov
add
add
sahf
xor
cli
sub
mov
or
dec
sbb
inc
dec
test
lock
dec
cwtl
or
inc
adc
aam
mov
cmpb
call
rol
cli
sahf
orb
test
xchg
ja
mov
cmp
push
push
cmpsl
std
mov
jle
pop
cmpsl
movb
mov
or
xor
sarl
xchg
in
call
and
or
or
pop
xor
shl
clc
sub
jmp
lock
rorb
das
cmpsb
cmpsb
movsb
add
rorl
adc
jne
ss
push
inc
cmc
sub
or
pmulhuw
in
add
or
in
in
adc
sbb
inc
dec
inc
out
xchg
enter
int3
cmc
mov
shll
les
test
inc
and
rolb
fisubs
mov
jno
adc
cmpsb
sbb
hlt
jnp
mov
lods
out
adc
inc
mov
or
mov
call
and
loopne
dec
inc
mov
je
clc
sbbl
pop
mov
xchg
dec
subl
jo
subb
xlat
lock
xchg
aad
xchg
xchg
and
xchg
mov
jge
incb
add
add
adc
ds
cmp
pop
leave
adc
cmpsl
imul
scas
adc
add
mov
dec
push
pop
push
mov
cmpsb
stc
loopne
dec
xlat
mov
mov
mov
sbb
dec
push
inc
sahf
dec
lret
imul
mov
jmp
es
mov
icebp
mov
dec
mov
mov
rol
mov
mov
mov
lock
cmp
jle
pop
inc
loopne
enter
cltd
and
test
inc
xchg
mov
les
fisubl
movsl
jbe
not
pop
or
or
andl
lds
cwtl
xor
sub
xor
cmp
ja
sbb
and
cmp
pop
pop
inc
mov
pop
mov
jb
and
push
orl
push
fsubl
dec
lock
loopnew
add
out
bound
out
and
repnz
pop
adc
dec
and
stos
dec
pop
mov
lcall
adc
cmpb
lock
push
mov
dec
push
fimull
out
pop
lret
adc
or
call
arpl
je
roll
cwtl
dec
adc
xchg
pop
sbb
shl
sahf
fisttpl
lock
cmp
or
movsl
fmul
ds
mov
int3
or
cmp
push
inc
leave
push
fistl
pusha
mov
push
push
out
es
jbe
shlb
jmp
in
ss
adc
jno
das
fimull
cmp
and
and
inc
cld
push
rorb
clc
adc
sbb
in
mov
test
xchg
lret
mov
xor
cwtl
cmpl
fwait
sbb
in
mov
xor
push
insl
xor
dec
call
bnd
lock
popf
dec
jmp
push
push
ja
xor
or
adc
mov
or
pop
xchg
pop
pop
in
inc
add
ret
adc
inc
mov
lcall
mov
inc
sar
xchg
adc
mov
lea
pop
sbb
cld
or
cmpsb
shr
dec
jne
lods
pop
cmpsl
jb
nop
xchg
mov
fs
into
pusha
int3
mov
aad
xchg
xor
jae
sub
aad
rol
cmp
call
inc
xorl
divl
fs
xchg
xchg
xchg
in
cmp
loope
xchg
inc
mov
call
ja
movsb
iret
and
sub
and
mov
and
dec
inc
push
iret
adcl
rolb
test
mov
aad
xchg
add
push
xchg
lahf
push
or
adc
mov
andb
test
call
adc
mov
fwait
add
mov
mov
mov
outsb
call
or
ret
outsl
pop
pop
mov
inc
incb
call
cmpsl
dec
push
loopne
ffreep
loope
pusha
jle
sahf
xorl
call
in
hlt
fidivrl
pusha
mov
jmp
lahf
push
repnz
rclb
sbb
add
sahf
xchg
orl
jge
js
iret
and
push
pop
outsl
movsb
and
pop
push
inc
pop
ss
push
call
mov
jl
cmp
and
aad
xor
xor
adc
lret
sbb
xchg
outsl
arpl
pop
call
add
outsb
sbb
gs
push
insb
and
outsb
mov
add
pusha
jle
dec
cmpsl
or
sbb
rolb
data16
xor
cmp
jge
push
push
jle
or
xchg
cli
sbb
add
mov
call
je
adc
adc
pop
call
adc
call
jp
xchg
mov
pushf
xor
cmp
mov
call
movsb
jb
mov
into
lock
cld
lret
sbb
ret
or
shll
call
mov
sub
enter
setne
sbb
int
mov
sub
xchg
push
dec
push
sub
dec
push
pop
popf
dec
mov
in
xchg
inc
pushf
mov
in
fcomi
xchg
aad
leave
jecxz
test
filds
out
xor
push
xchg
rorl
aad
inc
mov
mov
xchg
inc
or
cmp
nop
xor
xchg
add
lcall
shlb
xor
push
add
xchg
pop
fcom
inc
dec
or
and
xchg
sti
xchg
jge
xlat
xchg
dec
insb
fmull
das
push
push
clc
pop
xchg
fdecstp
enter
dec
add
push
or
mov
mov
jl
cmp
cmp
cmp
imull
inc
repz
add
mov
test
cmovne
inc
lods
push
sbb
adc
idivb
add
cmp
jle
mov
mov
mov
loope
lahf
adc
mov
or
movsl
repz
je
jmp
mov
sub
or
out
aas
adc
jmp
call
mov
add
in
mov
lret
cmp
ljmp
sbb
push
or
rcrl
mov
fmul
test
xorl
mov
pushf
fadds
mov
ret
mov
mov
hlt
cmpsb
jnp
movsb
jo
mov
adc
je
sub
subl
adc
pop
dec
sub
and
cld
push
and
mov
push
xchg
pop
dec
and
clc
mov
inc
lret
ret
cs
call
int3
add
pop
fsubr
or
or
sbb
lods
add
dec
sbb
and
adc
negl
sbb
push
shr
and
mov
sbb
pop
iret
add
lcall
pop
insl
add
cmp
loop
jno
call
loopne
maxps
push
daa
sahf
pop
mov
xor
je
call
in
ss
push
test
adc
bnd
adc
cwtl
aam
mov
pop
mov
adc
jmp
lret
int
jge
or
dec
xchg
imul
cltd
sub
outsb
sub
adc
mov
jno
and
xchg
imul
divb
xlat
adc
cmpl
pusha
testb
jne
mov
je
pminsw
xchg
test
xor
inc
adc
push
xchg
roll
pop
lods
add
or
mov
loopne
insb
cli
outsb
or
out
in
adc
mulb
xor
sbb
or
fistl
cmp
adc
inc
loopne
sub
inc
pop
push
push
sbb
cltd
add
out
and
cld
clc
sub
pop
cltd
jbe
and
mov
ret
dec
test
cmpsb
aas
jl
addr16
fsubr
cli
mov
hlt
stc
jl
hlt
leave
cmp
sbb
out
and
hlt
mov
es
and
mov
jns
fwait
and
hlt
fstl
lahf
loop
shl
mov
xchg
jo
xor
or
and
cmpsl
mov
mov
call
and
ljmp
lock
xchg
dec
loopne
sub
adc
fidivrl
adc
cs
mov
mov
and
or
js,pt
ret
popa
pop
adc
cmp
std
sbb
or
or
mov
pop
push
out
fcom
mov
xchg
or
psubusw
pushf
and
mov
je
repz
frstor
repz
xchg
push
mov
add
movsl
dec
jns
sub
cmp
fmull
mov
sahf
jmp
call
xor
sbb
jnp
push
mov
add
mov
lahf
push
ljmp
xor
loope
inc
xor
test
cmpsb
mov
ljmp
out
dec
testb
cmp
xchg
mov
test
mov
aaa
call
cmpsl
mov
call
test
repnz
cmpsl
push
imulb
testl
je
push
lret
lea
xchg
jge
xlat
std
mov
mov
fdivrl
out
out
enter
pop
int
jne
mov
lock
call
cld
adc
push
out
inc
int
movsl
sub
and
cmp
add
sub
xor
jb
lds
jle
int
lahf
mov
inc
sbb
xchg
lock
cmp
out
dec
mov
sahf
addr16
pop
repnz
fisubl
mov
dec
sbb
adc
inc
nop
xchg
insb
sahf
mov
mov
and
xchg
xchg
repz
jo
push
sbb
lcall
push
cli
dec
mov
mov
adc
lahf
sub
jae
adc
daa
xchg
xor
enter
mov
rorb
xchg
popa
lea
jecxz
mov
dec
insb
mov
sahf
movsl
mov
rorb
cmp
pop
call
and
mov
sub
add
jmp
insb
js
fimull
nop
push
aaa
movsl
mov
add
xchg
cld
mov
inc
js
arpl
js
sbb
lret
and
xlat
xorb
shlb
pop
jecxz
add
pop
movb
mov
adc
out
mov
lods
sbb
ss
bound
call
call
mov
jne
js
cmp
mov
div
loop
push
call
lahf
mov
push
push
inc
push
or
cs
pusha
jle
hlt
adc
fnstcw
ds
inc
mov
cld
jp
pop
ljmp
movsb
pop
fsubs
mov
sahf
scas
mov
sub
mov
lds
xchg
test
pop
repz
insl
pop
cmp
repnz
rcrl
xor
mov
xchg
cmp
or
ficoml
add
shr
or
add
loop
ficomps
pushf
out
sarl
cli
inc
or
mov
ret
call
dec
pop
add
dec
outsb
outsb
outsl
inc
fs
jecxz
sbb
inc
push
dec
inc
pop
adc
cmp
sub
fs
push
dec
add
and
sbb
sbb
push
popf
and
or
pop
cmpsl
add
iret
repz
add
cmp
lea
push
out
in
data16
call
fdivl
add
lahf
xchg
aas
push
mov
loopne
pop
and
iret
repz
in
insb
dec
cltd
out
mov
cmp
hlt
jb
jnp
lcall
jae
jb
stos
stos
mov
cmp
cmpsl
lgdtl
fcmovnb
sbb
and
or
aas
sbb
sub
xor
lea
push
pop
dec
jg
fwait
outsb
or
cmp
xor
add
inc
sbb
fcompl
inc
imul
rcl
icebp
popl
ss
cmp
mov
cmp
sub
out
fiadds
xor
dec
es
and
cmp
fcoms
rolb
flds
jl
es
rorb
out
sahf
idivl
xchg
stos
aam
repz
in
adc
and
cmp
repz
pop
push
mov
cmp
repz
ds
in
add
adc
out
mov
sub
out
punpckldq
xchg
repz
fsubr
cli
sahf
testl
inc
push
push
bound
out
jo
mov
out
int3
fdiv
cld
iret
repz
or
sbb
ds
data16
repz
mov
iret
repz
add
sbb
out
sahf
out
push
insb
adcb
mov
aam
hlt
xchg
fdivrs
push
fmuls
push
cmp
repz
adcb
scas
ret
data16
notb
xor
add
add
mov
add
push
jae
movsl
das
loopne
lea
or
push
imul
and
sbb
add
aaa
pop
xor
clc
xchg
ja
and
leave
push
outsl
addr16
lds
xchg
and
sbb
push
cwtl
lea
jns
add
or
pop
lret
sub
or
pop
outsb
sub
cmp
ja
or
adc
mov
inc
push
dec
inc
sahf
je
push
outsb
ja
sarl
pop
push
push
fs
or
fcom
push
pop
cmpb
fs
jo
cs
push
add
sub
cmp
dec
xor
cmpsl
jb
adc
adc
jecxz
shrl
push
pop
add
pop
xchg
add
mov
rclb
add
fcompl
fdivrs
jbe
mov
and
addr16
test
insb
pop
repnz
ret
dec
ret
dec
xchg
mov
and
sub
ja
test
sbb
push
xchg
imul
adc
xor
inc
mov
outsl
xlat
testl
jp
je
add
push
mov
cmp
cmp
pop
lret
xor
and
and
push
pop
rol
inc
jno
mov
outsl
divl
jl
lahf
pop
imul
popa
fs
in
mov
ja
jae
inc
inc
push
dec
addb
fcoms
jae
sbb
lret
das
pop
adc
push
hlt
pop
mov
pop
mov
and
fadds
push
inc
xchg
bound
push
fsubs
mov
sub
mov
xor
shll
push
fmuls
jecxz
shll
outsb
xchg
add
cltd
jle
pop
mov
addb
bound
lods
scas
sub
inc
push
cli
add
inc
gs
divl
fwait
push
add
push
mov
inc
outsl
inc
jecxz
lea
and
sbb
push
pop
sbb
add
sbb
out
or
sub
xchg
push
test
inc
fsts
lret
push
fisubs
je
jo
jne
add
jae
sbb
push
mov
lret
xchg
mov
shrl
xor
mov
sbb
or
inc
jbe
mov
inc
or
and
adc
mov
insl
jge
inc
jno
call
or
mov
imul
add
clc
rol
in
push
fcoml
lock
push
rorl
pop
int
ret
dec
xchg
cmp
daa
or
jns
jo
mov
enter
out
loopne
clc
jg
outsl
imul
push
sub
push
add
iret
repz
cs
push
mov
mov
repz
jg
mov
sub
mov
add
xor
push
jb
das
dec
adc
or
push
cltd
das
jo
dec
cs
adcb
das
mov
nop
or
rcl
repnz
repz
lcall
push
aas
pop
dec
and
push
adc
push
dec
mov
nop
pop
adc
push
int
sbb
add
sbb
or
fwait
push
and
push
pop
mov
dec
push
shlb
incb
fdivs
repz
cmp
mov
mov
pushf
sub
daa
fnstcw
add
das
lea
xor
mov
and
inc
enter
stc
rolb
xchg
jmp
push
outsl
jnp
gs
xchg
add
fstp
fldenv
pop
jo
push
decl
mov
js
or
jnp
fistpll
mov
mov
pop
ja
mov
cmpb
jo
js
and
das
movsb
pop
decl
add
repnz
daa
add
stos
stos
scas
jg
jo
dec
faddp
mov
pop
clts
pop
add
iret
mov
push
lock
push
and
and
stos
mov
popa
xlat
inc
add
add
mov
insb
add
adc
push
add
fwait
int
add
add
add
dec
add
mov
push
add
add
out
in
sahf
out
movb
out
lods
test
cwtl
xor
es
in
xor
sahf
out
push
cwtd
int3
decl
jnp
jns
data16
mov
cltd
cltd
cltd
cltd
xchg
ja
out
int3
int3
int3
push
push
mov
flds
pushw
cltd
iret
mov
iret
int3
incl
add
xor
cmp
loopne
xor
cs
into
repz
cs
out
loopne
iret
cltd
cltd
cltd
jns
int3
jmp
int3
int3
daa
lcall
sahf
out
inc
sub
repz
add
data16
out
hlt
xor
xor
or
data16
cmp
rorl
data16
cmp
data16
int3
out
cmp
jnp
es
jmp
int3
pop
mov
push
add
sub
xchg
cmpsl
push
xor
jmp
data16
scas
cmp
xor
cltd
insb
lds
cltd
cltd
cltd
and
insb
lds
ljmp
int3
dec
push
pushf
cmpsl
jmp
jno
sbb
mov
mov
lods
js
ja
push
cltd
int3
mov
push
int3
data16
out
notl
cs
cwtd
int3
jns
cmp
insb
cs
int3
int3
xchg
cmpsb
pusha
xor
int3
decl
mov
or
jns
out
jo
jmp
jns
out
dec
lcall
int3
jns
out
lcall
incl
movsl
inc
jns
cs
inc
xor
out
cmpsl
ds
rcrb
mov
insb
add
ja
xchg
xchg
add
insb
ss
int
mov
xlat
add
add
add
mov
icebp
add
add
sbb
popl
push
pop
pop
mov
xor
cli
pop
in
pop
pop
xchg
cld
and
pop
add
sti
sti
and
ss
push
aas
lcall
sti
ljmp
repz
in
sti
push
pop
mov
add
fsubr
jmp
pop
cmc
pushf
add
cld
in
sti
add
dec
in
push
outsl
jp
xor
out
jae,pn
cmp
in
pop
inc
push
and
fldcw
and
pop
dec
add
pusha
fnstenv
lock
iret
dec
push
test
add
add
pop
ja
aaa
iret
incb
js
fstl
jg
mov
cltd
stc
psubq
xorb
clc
std
fstps
js
mov
cwtl
mov
inc
incb
js
xchg
mov
js
jo
mov
and
orb
inc
aas
js
mov
out
fisttpl
jnp
fwait
mov
mov
js
fistpll
xchg
js
mov
mov
outsl
into
outsl
mov
pop
jge
pop
ja
cmp
shr
notl
adc
clc
jo
bound
mov
ja
js
mov
mov
scas
pop
mov
xchg
jmp
or
sub
add
and
das
pop
in
and
pushf
sbbl
xorl
stos
pop
push
sti
fistl
inc
repnz
lcall
pop
add
inc
pop
mov
shrb
pop
lods
arpl
lods
pop
add
rclb
push
jo
and
jg
add
sahf
addr16
xchg
pusha
add
add
cmp
push
clc
cld
lods
nop
lret
clc
stc
or
lahf
addb
or
ljmp
add
mov
xor
fstps
add
lahf
inc
into
mov
mov
mov
pop
cmp
add
testl
test
inc
jg
jl
shlb
popf
mov
jg
mov
loope
in
adc
mov
leave
sbb
add
lock
dec
in
inc
jg
xor
mov
sbb
push
add
cmp
jae
in
out
inc
fidivrs
pop
push
lock
inc
cmp
fistpl
ds
lcall
inc
lahf
aas
fcomps
jge
cmpl
push
inc
ds
jmp
cmp
insl
mov
aas
push
in
add
jmp
outsl
mov
jnp
add
in
add
ljmp
in
lods
cmp
std
xchg
sbb
mov
add
lds
add
aas
inc
add
sti
jp
xor
dec
aas
and
ret
pop
inc
aas
mov
daa
mov
rolb
or
divb
fdivs
les
inc
aas
pop
mov
sti
lea
push
xor
aas
jb
les
xchg
push
add
ret
and
and
dec
repz
decl
addr16
test
gs
cmp
cmp
mov
dec
or
aaa
testb
sub
gs
xchg
adc
push
inc
or
pop
push
jg
js
push
sbb
dec
daa
cwtl
std
cmp
push
pop
pop
mov
out
add
sbb
fs
xchg
idivb
push
push
jnp
or
ja
push
bound
pop
xchg
pop
sbb
pop
push
mov
mov
fucomp
in
ja
jp
mov
push
test
ds
fisubs
outsl
rol
js
jbe
pop
loope
pop
xchg
aas
xchg
gs
adc
add
xchg
fs
loopne
push
jg
hlt
push
shrb
pop
bound
aaa
arpl
fs
dec
cs
int3
mov
dec
adc
dec
push
pop
add
ret
pop
pop
arpl
rorb
jb
pop
add
mov
lcall
sbb
sub
add
and
int
sub
pop
or
or
mov
mov
insb
outsl
ja
add
adc
jns
mov
sub
xor
dec
bound
xchg
pop
cmp
lahf
pusha
fcomi
and
sbb
jecxz
in
loopne
push
pop
xchg
pop
sub
jp
pop
adc
mov
cmp
maxps
ret
and
dec
jae
mov
mov
add
dec
pop
lock
xchg
ljmp
mov
fisubl
daa
push
or
adc
mov
sahf
jb
add
or
sub
call
jle
addr16
xor
call
mov
loop
pop
incb
aas
adc
adc
sub
ljmp
les
pop
mov
or
dec
das
loope
cmp
adc
jne
push
pop
call
xchg
xlat
das
dec
adc
dec
xchg
push
inc
bnd
lret
dec
jb
inc
add
mov
fstpl
jns
jne
insb
aas
aas
lcall
push
jo
dec
add
je
add
mov
arpl
pop
jne
arpl
fbstp
add
xlat
pushw
imul
mov
es
or
jae
imull
js
or
je
insl
mov
addb
or
das
outsl
pop
or
inc
dec
inc
fiaddl
push
jnp
ja
out
andpd
gs
or
jo
fs
push
mov
mov
outsl
outsl
push
jnp
imul
pop
or
arpl
push
ret
aas
iret
aas
fldt
and
jb
insb
push
je
int
xlat
jnp
sub
pop
fwait
push
ja
jle
std
cltd
decl
add
lret
js
insb
mov
das
loopne
adc
psrad
sbb
pop
pmaxub
in
mov
fiaddl
sbb
loope
mov
add
lret
dec
adc
inc
gs
jp
dec
lahf
pop
outsl
push
mov
xorb
pop
andl
add
add
mov
gs
out
sub
ret
push
xor
fdiv
jnp
sahf
inc
add
inc
inc
lcall
mov
imul
repz
xor
outsb
and
mov
mov
xchg
push
sbb
popa
lahf
add
lcall
push
clc
push
bound
xor
pop
add
xor
clc
imul
imul
inc
fcmovnb
je
inc
push
inc
dec
add
clc
cmpsl
jae
xchg
out
add
icebp
sahf
gs
or
insb
sub
jnp
push
xchg
jns
addr16
je
add
sbb
push
mov
outsl
mov
ja
pop
inc
roll
dec
add
mov
add
andb
sub
cmp
cmp
ds
xchg
mov
pop
data16
js
insb
and
push
pushf
cmp
and
outsb
out
or
pushw
sbb
push
inc
sub
sub
gs
mov
fbstp
ss
sti
mov
jl
jae
jne
outsb
cmp
push
xor
sub
push
sub
cmp
insl
jbe,pn
mov
pop
jo
fs
push
xlat
inc
adc
add
xchg
imul
push
call
lcall
outsl
jb
insb
inc
mov
enter
dec
js
and
aaa
or
and
mov
xor
and
les
add
dec
outsl
inc
ret
lods
cmp
add
hlt
jns
je
cmp
addr16
sub
subl
pop
js
scas
sub
push
push
ss
jne
jo
data16
js
std
dec
repz
ss
xor
arpl
xor
insb
or
mov
shrl
jae
inc
and
bound
sub
ss
mov
dec
in
add
mov
gs
insl
sub
push
cltd
dec
xor
pop
adc
rorb
pop
in
cwtl
ret
jne
xor
rcrb
ja
das
bound
subb
jns
add
xchg
aaa
mov
cld
je
mov
fs
mov
mov
mov
enter
cs
push
dec
dec
das
xor
xor
add
xor
cltd
insb
add
das
popa
sbb
adc
cmp
insb
aad
pop
xchg
mov
lds
incl
mov
cmc
jo
push
and
xchg
jnp
push
cmpsb
rclb
xor
pusha
xor
xor
sub
sub
js
push
lahf
aaa
add
xor
jge
jae
xor
aas
cmp
popa
sub
bound
or
fsubr
mov
out
xor
mov
xor
mov
das
inc
cmp
dec
jg
loop
or
jp
bound
pop
fists
add
add
cmp
icebp
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
subl
mov
xchg
mov
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
test
call
mov
call
push
pop
mov
outsl
fucomp
in
jg
aam
adc
inc
dec
dec
xchg
lret
xor
scas
jno
or
stos
jnp
jae
mov
add
dec
xor
dec
dec
call
or
ljmp
or
je
outsl
out
daa
xchg
jo
divl
int
rcrb
cmp
test
incb
cmovo
push
xor
test
out
xchg
clc
imul
jmp
pop
mov
lcall
cmp
mov
andl
dec
call
mov
add
cli
out
and
push
jmp
out
cmp
loop
ss
mov
inc
xchg
push
dec
mov
dec
out
mov
pusha
sti
mov
inc
cmp
sbb
call
sub
push
mov
jmp
mov
or
xor
mov
sar
inc
call
dec
sbb
xchg
jp
movsb
jb
xchg
ja
fstpt
ret
clc
jns
mov
loopne
scas
bound
rcrl
push
mov
jne
dec
lcall
aaa
rcr
inc
push
add
mov
inc
sbb
rolb
push
mov
stos
pop
fwait
aam
std
out
sbb
sbb
fsts
dec
sbb
dec
push
jmp
xor
pop
mov
fiadds
test
mov
inc
xrelease
mov
aaa
jae
out
add
incl
repnz
pop
rorl
mov
in
inc
enter
xor
push
pop
insb
fs
cmp
dec
or
mov
icebp
cwtl
jl
stos
pusha
xchg
leave
inc
out
cmp
lcall
pushl
mov
dec
mov
cmp
ljmp
cmp
mov
pop
in
rclb
movsb
pusha
and
enter
enter
mov
lcall
js
sahf
or
pusha
cmp
sbb
int3
dec
inc
fneni(8087
repz
mov
inc
das
repz
ret
scas
jge
addb
and
xchg
inc
leave
or
in
or
jmp
lods
lods
sub
test
je
and
xlat
cmp
push
bound
outsb
shlb
push
pop
aam
or
call
dec
mov
sti
xchg
lahf
idivl
repz
jecxz
and
push
jg
lock
xor
pop
pop
add
frstor
in
stc
je
scas
lret
push
decl
stc
inc
out
pop
mov
cmp
sahf
or
or
push
jg
loop
lcall
cs
enter
xchg
xchg
or
add
xorl
test
outsl
rcrb
pop
scas
push
ds
sub
mov
subl
loope
insl
and
jnp
fsubl
or
lcall
xchg
mov
loopne
loop
sbb
fcmovnb
sahf
push
mov
sbb
adcb
xchg
add
test
inc
ret
mov
mov
xchg
sbb
adc
mov
jg
je
in
and
adc
xchg
sbb
mov
or
sarb
jp
call
jbe
cltd
add
sahf
test
mov
xchg
aaa
out
and
sbb
call
insb
jle
cs
mov
xchg
sbb
mov
movsl
cwtl
add
fst
mov
xor
dec
mov
shlb
or
push
lea
xchg
loope
and
sahf
lahf
dec
fadds
mov
dec
cli
push
cld
cwtl
les
push
dec
test
int
xchg
daa
inc
incl
mov
pop
cmp
sbb
pop
pop
cmp
and
push
pop
xchg
test
mov
inc
push
or
movsl
imul
fiaddl
sbbb
and
rcl
sub
inc
ret
cmp
mov
clc
loopne
cmp
dec
sub
jno
adc
icebp
in
decl
cwtl
aas
fwait
les
adc
jb
inc
loopne
adc
or
push
loope
pop
stos
jbe,pt
cmc
push
push
cld
imul
cmpsl
xchg
in
fstl
sbb
cmp
pop
inc
push
sub
cmp
cmp
or
mov
pushl
repz
into
test
cli
sbb
repnz
hlt
mov
mov
sarl
fdivr
jmp
repz
sbbb
pop
rcl
xor
cmpsb
xlat
adc
scas
test
lret
ss
mov
dec
sahf
mov
in
popa
or
popf
dec
sub
xchg
shlb
pop
cmpb
mov
mov
pop
pop
loop
out
popa
mov
jge
adc
inc
test
out
or
adc
pushl
icebp
roll
dec
dec
dec
mov
cs
iret
sbb
lahf
lahf
addr16
mov
pushl
dec
mov
mov
add
pop
mov
cltd
jb
inc
add
or
ss
cmp
dec
pop
or
in
cltd
cs
mov
mov
fwait
mov
and
addr16
repz
int3
xor
addr16
adc
lock
inc
icebp
push
inc
jle
dec
pop
fistps
pushl
xchg
sub
dec
pusha
ljmp
cmp
mov
inc
and
mov
cmc
mov
mov
aam
das
xchg
push
inc
mov
clc
dec
mov
aas
fbstp
push
jne
loopne
arpl
mov
mov
jecxz
addb
aam
std
push
iret
pop
xchg
imulb
lret
mov
dec
lock
sbb
mov
ss
cmp
and
mov
cmpsb
inc
mov
xlat
or
lcall
jne
dec
int
mov
fisubrl
fdivrs
pop
test
and
sbb
mov
cmpsb
mov
stos
xor
jge
cwtl
ljmp
mov
add
aaa
jg
sahf
push
js
loope
pop
dec
inc
filds
jp
jecxz
lods
xlat
and
inc
dec
ret
fwait
lea
or
add
cmc
pop
xor
or
fstpt
fwait
popf
jp
xchg
push
mov
rcrl
lret
lcall
xor
andb
fsubrs
dec
xchg
sub
repnz
rclb
outsw
clc
sbb
call
sbb
push
ss
out
sub
jg
mov
sub
mov
fisubrl
jbe
push
jmp
pushf
nop
jbe
sub
call
fstl
xchg
adc
cltd
dec
push
mov
and
or
or
cwtl
jle
mov
xchg
incl
out
xor
rorl
cltd
in
in
push
lods
sub
inc
mov
ret
lret
inc
repz
jmp
sub
fisttpll
insb
fisttpl
lock
iret
mov
sahf
or
sbb
push
fldt
iret
es
ljmp
adc
mov
mov
jge
mov
mov
loope
leave
movsl
adc
pop
testb
fbstp
popf
rcll
push
iret
orl
jmp
add
xchg
mov
mov
lahf
xor
int
mov
shrb
incl
dec
mov
jbe
inc
dec
jg
stos
repnz
pop
cmpb
xchg
inc
rep
or
ljmp
int
or
in
fwait
mov
hlt
push
dec
mov
sbb
in
fs
fcmovnbe
mov
aaa
fidivrl
add
inc
pushf
sti
xor
sub
push
jp
mov
mov
jmp
in
xchg
dec
cmpsb
pop
push
xor
test
mov
je
es
pop
popf
pop
icebp
lcall
insb
or
roll
jae
mov
cmp
xchg
cs
xor
shr
and
js
sbb
sahf
enter
out
mov
push
icebp
push
in
mov
repnz
sbb
sbb
out
cmp
in
mov
sub
dec
ret
inc
mov
imul
enter
imull
jb
call
mov
jg
ljmp
loop
shr
sbb
adc
icebp
jnp
cltd
insl
sti
pop
sub
cmp
push
push
clc
decl
insl
scas
cli
jo
shll
push
cmpsl
out
mov
cmc
inc
xchg
ficoml
jnp
push
adc
adc
ljmp
sbb
add
xchg
sbb
and
inc
xor
mov
movsb
cmpl
xchg
movsl
sbb
or
popw
cmp
xlat
rclb
pop
aad
imul
xchg
adc
decl
fstpt
daa
movsl
push
mov
push
jp
pop
mov
push
push
into
jno
incl
test
test
sub
mov
popa
outsb
push
sbb
xchg
call
loope
xlat
fucomi
idivb
sub
inc
sti
test
xor
aam
pop
push
sub
lcall
call
pop
inc
cmp
lahf
inc
pop
pop
cmp
scas
lahf
push
xor
sub
mov
ljmp
jbe
pop
ds
mov
sub
inc
inc
mov
sbb
push
lcall
mov
idivb
stos
jle
icebp
test
jns
mov
cmp
mov
leave
fisubl
mov
call
push
dec
aam
sub
faddl
dec
push
and
fs
outsb
add
cmc
jmp
dec
loop
fsubs
lods
push
xor
stos
inc
xchg
lcall
loop
adc
outsl
lcall
movb
fstps
inc
mov
repnz
jecxz
dec
test
lret
pop
aaa
sub
cld
rcrb
mov
cmpsb
test
xchg
out
jg
call
pop
orl
jge
inc
push
divl
call
decb
cli
or
push
cmpsb
gs
popa
popw
iret
sbb
clc
call
outsb
mov
mov
test
jle
mov
out
mov
decl
jl
ficompl
fimull
jns
lahf
cmpsl
mov
cltd
mov
push
mov
push
inc
out
xlat
int
lret
call
inc
loop
mov
int3
cmpsb
loopne
daa
pop
cmp
sub
mov
inc
mov
stc
fnstenv
xor
mov
arpl
imul
lcall
mov
push
aaa
pop
sub
cmp
mov
xor
or
clc
adc
mov
test
or
cmp
rcll
jns
push
sarl
lea
outsl
decl
add
dec
rclb
loope
imul
je
adc
mov
cltd
cmp
xchg
jmp
lods
cmp
pusha
jl
movsb
shrb
dec
leave
adc
cmc
mov
ljmp
xchg
stos
push
cs
leave
insl
aam
inc
mov
xchg
es
xlat
fisttps
aaa
addr16
xchg
stc
clc
decl
and
sub
push
mov
jnp
int3
stc
js
and
enter
and
call
loopne
sbb
xor
ljmp
out
ret
loopne
decl
lock
sub
inc
or
dec
daa
sub
mov
inc
mov
call
je
and
cltd
xlat
adc
sti
fsubrl
add
or
and
cli
jnp
mov
stc
test
cli
pushf
pop
ficoml
aam
sar
inc
jno
pop
dec
stc
fists
xchg
stos
jmp
and
add
pop
push
jns
or
pop
std
jmp
inc
jmp
loopne
stc
in
and
leave
or
jnp
push
dec
push
sbb
data16
cmpsb
pop
pop
push
aam
push
imul
add
divb
movsb
aam
jle
outsl
pop
call
add
push
mov
sbb
iret
scas
rol
sub
faddl
sub
jle
add
or
or
jns
adc
sub
pop
popa
jbe
les
fsubrl
cs
in
add
inc
call
incl
aaa
jmp
mov
movsl
and
pushf
mov
insl
imul
aad
lock
ljmp
loop
cmp
sub
adc
lcall
jg
dec
movsb
popa
sub
pop
addr16
lea
inc
xchg
fisttpll
mov
cmpsb
dec
pop
inc
sub
mov
push
cli
jl
pop
mov
icebp
cmpsb
or
or
push
mov
and
ljmp
inc
inc
jbe
sub
lea
ret
cltd
fcomp
fisubrs
lcall
ret
jno
lahf
and
xchg
mov
pop
mov
xchg
pop
mov
inc
pop
jg
mov
out
sbb
inc
imul
clc
cs
idivb
call
mov
leave
jp
or
push
loop
mov
fcmovnb
int3
and
pop
adc
scas
sub
loopne
lods
sub
pushl
jge
mov
and
repz
lret
out
nop
xlat
sub
fiadds
es
scas
outsb
dec
jmp
imul
lock
bound
push
push
jg
lahf
fidivl
inc
insl
repz
test
sub
inc
mov
fnstenv
xor
pop
cmp
int3
ret
lea
dec
inc
dec
mull
dec
cld
mov
mov
ret
lret
push
sub
mov
arpl
negl
jb
loop
mul
cmp
int
rorl
ljmp
push
sarb
roll
imul
mov
pop
push
push
dec
mov
cltd
test
lcall
stos
test
and
testb
jae
dec
push
lret
rcr
js
pop
sbbl
push
cmp
sbb
cltd
dec
in
aad
enter
jg
out
not
and
inc
insb
push
jl
or
sbb
inc
cmp
lock
test
lea
fstps
jmp
cmp
insb
in
leave
hlt
pand
mov
xor
sub
cmpsl
lcall
cltd
pop
std
sbb
xchg
push
clc
dec
popa
pop
push
ret
or
adc
mov
push
enter
add
lret
gs
cmpsb
loop
lock
or
or
insl
or
js
mov
mov
cmpsl
adc
push
js
outsb
lret
sbb
repz
or
inc
jmp
mov
mov
lods
aas
neg
loope
xchg
jmp
cmp
test
sbb
jmp
push
js
add
and
std
sbb
lcall
rcll
pop
call
mov
aad
pop
test
sti
je
xchg
dec
jb
popf
jmp
and
rolb
je
fcomps
cmp
incl
cmp
sub
inc
inc
dec
cmp
or
jmp
adc
cmc
push
jg
fwait
test
xchg
bound
test
adc
aas
aad
xor
sub
fisttps
cltd
jmp
imul
jae
clc
push
stos
dec
jg
es
and
div
adc
decl
sbb
js
adc
xchg
xor
popa
cmc
xcrypt-ecb
cmpsl
mov
sbb
notl
out
loop
cmc
jmp
and
xchg
mov
dec
xchg
lcall
jae
push
sbb
call
lret
or
leave
cmp
mov
or
fmull
and
lcall
inc
cmp
dec
mov
adc
add
pop
or
mov
cmpsb
pushf
adc
ljmp
push
sti
add
out
jnp
mov
cmc
xchg
sbb
in
in
inc
out
and
add
jmp
out
jp
adc
sub
pop
mov
inc
stos
loopne
and
pop
cmpsl
sbb
inc
cmp
jmp
mov
shr
inc
sbb
add
xor
pop
insl
sub
mov
jl
mov
pop
decl
imulb
jae
in
sub
pop
cs
imul
les
ret
push
jns
cs
insb
inc
and
inc
xor
cmpsb
jb
fistl
jge
jmp
push
rorl
dec
push
mov
cmp
icebp
push
sbb
jg
call
decl
mov
fsubr
aad
cmp
mov
call
inc
lret
adcl
sub
pop
add
movsl
sbb
mov
dec
dec
punpcklbw
mov
ret
lcall
sub
sub
pop
call
cmp
mov
inc
out
in
add
fwait
mov
lock
ficoms
xor
xchg
cwtl
popa
jp
call
and
jle
add
orl
inc
sbb
mov
test
add
gs
std
sarb
jne
xorb
mov
add
decl
lret
inc
and
xchg
ret
ret
int3
stos
call
call
xor
or
lods
pop
jl
ds
add
leave
mov
in
mov
jmp
add
mov
call
push
lods
inc
xchg
inc
scas
cmp
jge
mov
mov
mov
push
arpl
dec
cmp
fs
push
jp
jmp
and
xchg
data16
imul
clc
cld
daa
mov
jae
mov
jmp
push
movsb
jp
sub
xchg
out
in
fisttpll
cli
jbe
mov
add
cld
adc
jmp
jmp
xchg
loop
negb
ret
jmp
loopne
incl
pop
xchg
int
lea
fisttps
pop
loopne
cmp
das
push
xchg
mov
sub
incl
out
je
es
pop
lret
ljmp
test
pop
push
incl
push
push
add
sbb
sbb
mov
cmpsl
xchg
shlb
or
into
lock
ljmp
pop
test
dec
mov
xchg
arpl
out
push
add
scas
clc
push
or
aad
test
scas
ljmp
outsl
cltd
ja
repz
xchg
loope
cwtl
cltd
mov
or
das
orl
jmp
sbb
cmc
dec
stos
es
or
adc
je
xchg
fdivl
sbb
ljmp
clc
into
jmp
cs
dec
and
pop
clc
ret
cwtl
fcmovu
stos
xchg
insb
mov
mov
xlat
lcall
pushf
inc
fnstenv
imulb
xor
ficomps
mov
ret
jmp
lret
ss
and
popa
dec
sub
mov
mov
mov
inc
bound
adcb
jmp
ret
push
push
pop
cmpsb
stc
in
popf
pop
sbbl
or
inc
mov
jge
testl
inc
mov
rol
in
ljmp
mov
jns
pop
lcall
js
push
mov
inc
stc
push
jg
loope
fildll
mov
int
and
xchg
cmp
add
mov
pushl
pop
inc
push
push
ret
inc
sub
xor
sub
sbb
aad
inc
les
jmp
or
jae
pop
fdivrs
daa
mov
stc
mov
out
fstpl
mov
daa
das
mov
std
mov
push
and
stos
testb
inc
cltd
call
rolb
cld
loop
xor
or
ja
ss
mov
mov
incl
hlt
dec
and
stos
lret
into
hlt
iret
push
enter
adc
out
test
inc
jl
lret
shr
movsl
cltd
nop
add
sub
inc
mov
jge
cmc
jl
out
and
call
mov
dec
sub
out
mov
sahf
ret
lods
div
fidivl
mov
push
jg
incl
and
shll
sub
cmpsl
cmpsb
lock
cltd
inc
mov
call
inc
out
xchg
mov
aas
pop
ja
nop
push
loopne
and
cwtl
sub
incl
inc
jecxz
daa
dec
dec
loop
pop
outsb
jp
outsb
fmuls
cmpl
call
jns
lods
xchg
out
fsub
inc
adc
push
jnp
sbb
sub
and
popa
dec
cmp
lcall
lods
cmp
scas
into
lcall
inc
andb
push
push
fcmovb
ds
and
aaa
pop
and
popf
ret
jns
jl
fcomps
adc
cwtl
mov
adc
ret
aas
loop
xor
call
and
mov
jmp
inc
lret
mov
push
mov
dec
mov
cmp
jno
sbb
jmp
ror
jp
cmpsl
mov
cmp
cmp
jnp
jbe
aad
dec
movsl
cmp
gs
pop
test
xadd
xor
push
loope
jns
mov
clc
jnp
mov
test
xor
arpl
pop
and
aam
push
cmp
lds
lcall
aas
push
jg
rcl
add
mov
mov
aad
lret
cmp
mov
mov
lret
mov
fnstenv
mov
outsl
dec
jmp
dec
pushl
mov
fdivrl
adc
xlat
xchg
push
dec
xchg
js
cld
mov
pushl
push
loop
bound
add
into
js
mov
jno
push
cli
jg
incl
cmpsl
popl
shll
adc
jmp
aas
data16
and
outsl
and
loop,pt
movsl
push
jg
orb
out
xcrypt-cbc
cmpsl
xchg
lods
loop
inc
sub
je
insb
xchg
dec
decl
ja
mov
in
push
scas
jnp
cs
test
jbe
decl
les
or
push
xchg
nop
std
je
pop
dec
sbb
sahf
ret
cli
adc
jns
lock
xchg
aas
add
jecxz
sar
ljmp
pop
clc
lcall
ss
or
movsl
data16
mov
sbb
outsl
clc
decl
scas
jmp
adc
mov
dec
lods
inc
sti
push
ret
cmpsl
pop
faddl
add
addr16
iret
stos
es
xchg
add
cmpsl
mov
lret
mov
lock
shll
sub
fsubrl
xchg
scas
push
icebp
rcrb
decl
cmp
pop
sbb
jmp
lds
jo
mov
outsl
push
call
mov
icebp
sbb
adc
stc
popa
push
and
pop
lods
iret
fiadds
cld
dec
inc
add
sbb
iret
push
and
popa
push
mov
mov
xor
ljmp
scas
jae
dec
xchg
inc
fsubrl
lcall
sti
leave
pop
sbb
ljmp
jmp
and
dec
adc
cli
or
xor
mov
fidivs
or
ja
std
jle
fisubl
lahf
pop
push
xor
cmp
rol
adc
push
dec
mov
out
into
in
cmc
out
lds
scas
imul
jae
scas
mov
and
jns
leave
scas
cli
sti
adc
cmp
arpl
sub
aam
repz
add
imulb
cli
decl
xor
fucomi
out
lahf
push
add
pop
jno
out
aam
jbe
cmp
outsl
adc
je
and
xor
sbb
decl
mov
in
lds
and
loop
xlat
test
in
mov
mov
cmp
jne
mov
pop
jns
push
inc
push
pushl
imul
cmp
cmpsb
or
adc
aas
pop
push
fs
cwtl
push
call
push
out
jmp
dec
in
out
jge
push
into
in
arpl
call
popf
fs
xchg
cs
inc
stos
inc
xchg
sub
inc
and
add
insl
xchg
je
dec
xchg
or
jne
cmpsb
pop
cmovne
mov
push
loop
add
pushl
stc
mov
adc
mov
mov
dec
and
inc
add
js
lcall
repnz
adc
inc
jge
adc
mov
js
mov
lea
dec
ljmp
test
xchg
call
ljmp
mov
mov
cmp
test
and
js
xchg
rcrb
jp
pusha
mov
pop
cmp
std
das
addr16
in
jmp
stos
movsl
loope
fcomi
insb
add
pushf
std
ret
test
aas
adc
gs
cwtl
pop
mov
lcall
adc
roll
xchg
in
pop
mov
push
imul
push
and
jmp
cmp
dec
xchg
xor
mov
mov
add
out
jge
pop
cmp
or
or
hlt
pop
scas
clc
loop
push
out
lret
pop
popf
cli
add
iret
cmp
pushl
fsubl
adc
mov
push
and
sahf
repnz
inc
sub
aaa
jns
cmc
inc
jne
data16
sahf
jecxz
std
jne
xchg
cld
in
les
sahf
mov
or
or
pushl
or
xor
push
sub
jge
jl
js
jbe
scas
mov
xchg
sbb
decl
xchg
data16
imul
inc
data16
mov
leave
pop
loop
cmp
jmp
push
push
adc
dec
hlt
add
nop
fnstcw
outsb
mov
push
sub
add
push
push
aaa
push
sti
push
outsb
cmc
rcll
push
lahf
popa
imul
call
fsubrl
testb
xlat
jmp
fildl
inc
les
and
mov
xchg
mov
call
pop
scas
test
fsts
jno
jno
sbb
cmpl
out
push
add
lret
cmp
cli
fcomi
inc
jmp
mov
cs
rcrb
int
or
sub
sub
push
cmc
stc
jmp
sub
test
mov
call
out
add
scas
nop
icebp
loop
pop
xor
imul
pop
add
sahf
sub
decl
push
xor
mov
fimuls
call
mov
lock
nop
insl
out
add
jmp
xchg
mov
jmp
inc
adc
push
or
jg
pop
mov
dec
or
xor
lods
neg
decb
sahf
out
and
dec
scas
test
call
xor
fidivl
sub
mov
pushf
mov
lock
jg
mov
les
rclb
clc
subb
jecxz
add
mov
cld
pop
shll
push
xor
in
cmpsl
sub
mov
sbb
mov
lds
and
jb
sub
outsl
frstor
in
jle
in
rcrb
std
notb
fcomip
ror
arpl
dec
dec
jno
mov
fs
adc
sub
mov
in
push
inc
mov
mov
push
lock
mov
or
mov
jge
movsl
push
ljmp
jg
sub
sarl
adc
xor
shlb
pop
add
xchg
fiaddl
jmp
xor
add
inc
ret
dec
inc
das
jecxz
mov
jbe
push
loopne
jmp
lcall
inc
jg
jno
lds
fldcw
fs
lret
out
negb
fistps
adc
push
cld
loop
push
mov
push
lahf
add
ja
arpl
lock
mov
mov
fbstp
enter
push
lret
sub
repnz
fs
insl
push
dec
std
lods
in
scas
sub
lds
inc
pop
popa
jl
hlt
sub
ret
lods
or
pop
mov
mov
ds
sub
xor
sbb
dec
mov
lods
daa
mov
fistpll
nop
pushl
push
adc
xchg
movsb
jbe
lods
jb
ja
pop
loopne
cmpsl
addb
xor
cmp
call
sbb
jp
xchg
and
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
loopne
std
decl
mov
pop
notl
add
and
sbb
push
mov
jmp
inc
ss
push
inc
mov
rorb
loop
les
push
in
mov
push
inc
sub
sub
test
ss
mov
dec
add
incl
xchg
jecxz
or
sub
pop
pop
mov
ffreep
pop
call
shlb
lea
ficoms
mov
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
add
push
hlt
rcl
in
jno
fldenv
lahf
mov
jno
push
roll
divb
clc
dec
lods
mov
sub
ficoms
push
dec
outsl
cmp
xorl
loopne
mov
jnp
push
gs
pop
inc
xchg
cmc
ret
mov
push
pop
lea
inc
push
jbe
imul
sub
call
loopne
xchg
fnstenv
shl
mov
push
out
ja
out
std
pushl
adc
cltd
jp
aad
mov
cltd
scas
out
ja
mov
jmp
cmp
adc
mov
sub
cmp
in
lcall
lcall
mov
ljmp
rcll
test
fildl
call
std
call
lcall
mov
jp
cltd
sbbb
cmp
decl
sysexit
sbb
cmp
pop
dec
test
xor
mov
cltd
inc
mov
sbb
mov
dec
sar
notl
dec
mov
hlt
fimull
cmp
sbb
decl
pushl
pop
fsubs
inc
jns
sbb
xor
xchg
inc
call
fwait
das
loopne
push
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
outsl
cli
std
imul
mov
sub
xor
cmp
xchg
push
incl
stc
fldcw
pop
popa
mov
cmp
lods
rolb
aas
in
jmp
mov
hlt
repnz
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
test
ljmp
xchg
sbb
push
call
lock
dec
mov
stos
fldcw
fmuls
jle
cmpsl
repnz
lea
adc
xchg
shr
sbb
ljmp
or
xor
push
xchg
imul
imul
repnz
mov
jg
xchg
push
in
popf
scas
sbb
add
dec
and
mov
addl
pop
or
clc
jb
mov
xor
pushf
push
ret
sbbl
mov
test
jmp
adc
and
out
les
nop
inc
mov
xchg
pop
not
dec
rcl
std
stos
fiaddl
mov
rcll
inc
imul
cs
bnd
jg
add
scas
jg
or
imul
incl
hlt
pushf
push
inc
mov
jmp
mov
fidivs
es
aad
dec
pop
pop
scas
inc
add
ljmp
and
mov
cmpsb
and
adcl
mov
pop
cmp
jle
jg
and
jno
js
call
shll
sub
jo
stc
rorb
mov
test
incl
dec
cmp
sub
cmp
jp
cmp
and
int3
lcall
pop
icebp
jg
decl
dec
icebp
not
lock
add
or
into
xchg
int3
iret
arpl
shrl
xor
cs
push
pop
adc
ljmp
mov
lcall
pusha
push
lock
dec
iret
sub
ds
lcall
cli
xchg
dec
jmp
inc
ds
fstpl
or
aas
daa
lcall
outsl
incl
push
fsubrp
rorb
push
loope
or
cmp
sub
jg
call
jge
mov
js
rcrb
mull
ljmp
pushf
inc
lcall
add
xor
outsb
roll
arpl
xchg
add
and
stos
pushf
pop
sbbb
rorb
lods
mov
xchg
jp
nop
jo
dec
in
arpl
decl
pop
stos
inc
or
jmp
int3
adc
shr
aad
jg
in
mov
fldcw
add
xor
out
xchg
mov
fdivrl
add
pushl
out
sub
sub
fisubs
adc
pop
xchg
lods
ret
in
add
aaa
sub
stos
loop
inc
movsl
incl
cwtl
arpl
in
int3
repnz
lods
sbb
fdivl
ret
icebp
cld
lock
jb
xchg
or
call
test
dec
bound
aam
push
mov
pusha
and
outsb
imul
aas
add
cld
mov
call
cli
loopne
loope
jae
inc
mov
les
sbbl
and
cmpb
iret
in
cmp
dec
sbb
sti
pusha
test
stc
call
xchg
sbb
test
mov
cltd
lods
push
push
mov
sbb
add
iret
jge
rorb
call
subl
mov
js
dec
push
movsb
testb
pop
sbb
jo
test
lcall
stos
mov
jecxz
lcall
les
pop
jl
cmp
loop
dec
ret
dec
mov
push
or
insl
and
lcall
xchg
pop
fcmovu
outsb
ds
into
in
paddb
cs
and
push
ss
add
sarl
out
push
or
xor
jae
mulb
push
mov
xchg
mov
push
add
add
repz
mov
inc
fdivrl
and
shll
push
js
mov
mov
mov
pusha
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
mov
orl
cld
loop
iret
jb
jne
mov
xchg
dec
cli
pop
clc
aam
xor
jge
mov
ds
jle
int3
adc
js
add
mov
push
scas
mov
call
sub
sbb
in
fiadds
pop
adc
aaa
cld
push
sub
lock
lock
repnz
mov
std
sbbb
mov
pushl
and
mov
test
mov
pop
xchg
call
pushf
aad
mov
scas
add
push
test
dec
pop
mov
int3
sbb
push
call
cmp
sbb
nop
fdivr
cmpl
pmuludq
iret
cli
lcall
gs
mov
pop
fcmove
ret
popa
lds
shll
fld
push
pop
leave
call
pushl
outsb
cs
xor
inc
inc
das
insb
mov
std
mov
cli
xor
mov
lcall
or
mov
add
cs
adc
pop
into
jge
je
jbe
fcomip
int3
inc
shrb
or
cmpsb
adc
dec
clc
cmpsb
sub
mov
mov
pushl
jmp
jne
sub
adc
sub
lds
cs
add
xchg
dec
jno
add
call
imul
cmp
leave
fldz
pop
inc
ljmp
iret
out
test
repz
call
inc
adc
imul
mov
mov
cmp
add
pushw
call
xor
jns
sub
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
orb
incl
jbe
xchg
xchg
mov
sbb
push
lcall
dec
lock
cmp
lds
sub
in
pop
lds
enter
ret
sbb
jo
pop
pextrw
dec
int3
pushl
and
test
mov
push
add
arpl
daa
mov
pushl
sub
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
pushl
and
xor
sarl
xchg
outsl
adc
lcall
bound
decl
das
add
xchg
mov
adc
in
test
dec
and
mov
rcr
repnz
or
ja
in
mov
inc
movsb
decl
or
in
push
mov
cmpsl
lea
cld
xor
xchg
pop
pushl
mov
addl
ja
sub
sbb
lods
enter
testb
mov
push
inc
call
mov
movsl
sbb
int3
fldenv
stos
call
clc
jecxz
fidivl
xor
fdivrp
jno
ljmp
add
rcll
imul
orb
and
mov
ljmp
mov
push
fnstcw
out
jmp
or
aaa
fcompl
sbbb
sub
in
fildl
mov
sarb
pop
xor
jmp
ljmp
jbe
push
fiaddl
lea
inc
imul
and
sar
xchg
aam
scas
and
or
dec
out
xor
lcall
mov
rolb
or
fildl
in
dec
cltd
das
mov
mov
cmpsl
fcmovb
jbe
jmp
add
cmc
scas
cmp
jmp
addb
inc
pop
and
mov
decl
mov
mov
out
adc
mov
mov
or
jp
push
into
icebp
mov
and
pushl
mov
pop
aam
mov
js,pt
lods
add
in
or
mulb
out
mov
xchg
sub
mov
jge
popf
pop
mov
pushl
insb
dec
lock
xor
punpckldq
aad
mov
push
jg
pop
in
nop
add
dec
das
sub
mov
stos
dec
daa
lret
mov
fwait
adc
lcall
jmp
xchg
into
pop
cmp
lods
adc
sbb
jg
jg
dec
lds
push
add
rclb
and
mov
sbb
dec
fdivr
mov
push
outsb
add
or
popf
jecxz
sbb
lods
mov
sbb
push
adc
mov
mov
adc
xor
pop
xor
add
adc
stos
cmp
js
das
mov
pop
ret
ret
pop
fadds
pop
rcll
or
mov
dec
xchg
dec
cmpb
push
popl
add
sti
push
loope
cmp
push
jmp
andb
cmp
cmpl
sub
add
dec
dec
or
ja
fcoms
mov
cmp
ss
and
mov
inc
mov
add
mov
jmp
nop
mov
addr16
xor
xor
pop
xor
add
test
inc
sub
or
inc
lea
movsb
pushl
jg
add
and
add
call
mov
fistpl
scas
arpl
xchg
pusha
scas
mov
mov
inc
ror
and
xchg
or
bound
std
inc
stc
call
mov
gs
dec
jmp
xor
movd
or
adc
icebp
scas
jg
pushf
mov
mov
popa
inc
stos
push
mov
mov
shll
xchg
das
test
lock
ljmp
pusha
test
mov
call
ljmp
jmp
push
hlt
loop
or
fnstenv
lcall
sub
or
dec
fistl
push
nop
dec
call
mov
xor
mov
add
cli
into
dec
mov
adcl
inc
and
outsl
stos
enter
aam
sbb
test
inc
dec
xchg
orl
jp
scas
out
dec
stos
lea
cmpsl
jge
shlb
ljmp
test
in
sbb
test
jp
loop
add
add
dec
test
cmp
stos
push
sahf
sahf
adc
mov
cmc
and
cwtl
adc
inc
pop
ljmp
clc
dec
jg
or
xor
sti
and
sbb
adc
push
addr16
cmc
mov
fcomip
lock
enter
sbb
aas
mov
fwait
and
enter
mov
lahf
inc
call
leave
dec
or
ds
lock
jnp
jg
sahf
mov
daa
mov
sar
adc
sahf
rcll
xchg
push
mov
mov
xchg
pop
xchg
iret
daa
dec
mov
mov
test
popf
sbb
add
lahf
jbe
lods
insl
dec
mov
decl
aam
push
sbb
shrl
fdivl
nop
bound
inc
or
mov
xchg
cwtl
addr16
lcall
push
and
mov
xlat
xor
lods
in
and
leave
cmp
mov
push
adc
insl
out
xor
sub
sub
out
pop
loopne
push
shlb
cli
cld
cs
cltd
xchg
movsl
es
clc
sub
sbb
into
scas
outsl
vsqrtpd
call
and
mov
stos
daa
mov
outsb
sbb
adc
jne
mov
jmp
sarb
idiv
fistpll
ss
movsb
push
push
dec
inc
pushf
ljmp
jae
test
and
push
in
test
lcall
repz
fidivrs
push
jge
decl
mov
cli
in
ljmp
and
and
aaa
test
fmuls
repz
dec
lcall
push
shr
fisttpl
mov
and
cld
mov
and
loopne
dec
in
arpl
hlt
sbb
xor
mov
jecxz
sbb
dec
test
jae
insb
jmp
enter
cltd
pop
dec
ret
call
popa
dec
fnstsw
imul
cmp
loop
leave
icebp
mov
in
push
lods
sub
imul
decl
cmp
ja
mov
mov
test
jg
fistpl
or
repz
popa
mov
push
fs
mov
jl
xchg
mov
cmp
jnp
in
test
jl
inc
dec
xchg
sti
out
push
xchg
in
adc
call
cli
jnp
cmpsl
dec
jl
mov
pushl
cmp
shl
nop
testb
xchg
cld
lcall
aad
call
cmp
lea
mov
in
dec
push
jge
or
jl
pushl
nop
cmp
jmp
inc
in
mov
arpl
out
nop
cmpsb
pop
mov
cmc
in
cwtl
mov
sub
push
push
jl
pop
scas
jle
jl
ljmp
int3
pushf
pop
js
or
aam
or
hlt
out
cmp
inc
sbb
jbe
sbb
mov
xor
mov
dec
out
aad
sahf
movsl
cmp
repnz
in
cmp
ss
fmull
decl
xor
int3
lods
mov
into
and
ror
loop
inc
scas
adc
push
mov
mov
jns
loopne
lds
jecxz
sti
push
out
sub
subb
pop
aam
or
pop
mov
addr16
movsb
in
enter
and
mov
xchg
jne
or
xchg
ljmp
movsb
test
and
dec
std
arpl
aaa
mov
jecxz
adc
outsb
cmp
outsl
mov
push
outsb
dec
into
lret
daa
dec
lret
leave
jmp
repz
inc
es
or
fmul
add
adc
push
xor
or
das
imul
mov
add
scas
push
ljmp
pushl
and
repz
dec
pop
fcompl
sbb
popf
dec
xor
dec
push
mov
filds
filds
adc
scas
sbb
loop
dec
push
ds
dec
xor
clc
dec
adc
xchg
cld
dec
mov
xchg
xor
xchg
jmp
aaa
jge
mov
push
lret
cmp
negb
mul
faddp
das
call
ss
test
pop
xor
sub
or
pusha
adc
pop
repnz
pop
jno
push
lea
imul
sbb
dec
jno
push
push
ss
inc
movsb
xchg
mov
inc
cwtl
orl
xchg
dec
pop
inc
jg
jg
inc
xchg
mov
push
push
mov
jno
push
out
xor
cli
adc
incl
movsl
add
cmp
mov
mov
ljmp
ljmp
push
xchg
pop
and
xor
or
fdivrl
pop
pop
movsl
xor
in
add
test
mov
insb
push
mov
sub
xchg
pusha
insb
pop
das
fcmovnu
ljmp
jmp
fnstcw
in
jb
faddp
sub
lods
movsb
mov
mov
arpl
iret
popf
push
jg
incl
popf
mov
sbb
jl
fs
dec
or
inc
out
pop
decl
fdiv
xchg
jno
adcb
pop
fiaddl
cwtl
jae
sub
jp
arpl
hlt
incl
jl
loop
inc
push
xchg
and
mov
adc
enter
jmp
jmp
pusha
sbb
jb
pusha
enter
xchg
adc
mov
aaa
sbb
lds
popf
or
dec
xorb
in
cmp
ljmp
xchg
mov
pop
pop
sbb
addr16
imul
outsl
dec
xchg
jno
mov
pop
lcall
fucom
push
jecxz
or
and
leave
mov
stc
scas
dec
test
call
cmp
test
outsb
xor
cmp
test
repz
cmpsb
xor
sub
arpl
decl
lods
cmp
xor
jp
daa
mov
sbb
imul
dec
mov
inc
mov
lcall
push
fnstsw
xor
call
test
int
bound
adc
decl
jmp
inc
in
xor
push
or
or
gs
in
stc
mov
xor
pop
leave
push
pushl
cld
sub
mov
and
push
dec
aam
sub
or
push
jmp
cmc
int
xchg
idiv
jmp
mov
mov
sub
jmp
sbb
mov
ljmp
or
mov
cmc
and
add
aad
popa
mov
push
movsl
pushl
jns
mov
mov
mov
ret
fldcw
lds
inc
dec
movsl
ret
xor
pushl
jmp
or
lret
pop
mov
xchg
jmp
loope
fs
dec
xchg
roll
lcall
add
pop
scas
adc
mov
sub
std
pextrw
adc
fidivrs
std
fs
xchg
xchg
mov
mov
xchg
imull
pusha
divl
incl
sub
pop
stos
push
aas
xor
push
mov
insl
and
dec
loope
movsb
add
pop
ret
pop
pushf
out
clc
xor
dec
movsb
add
insb
rorl
movsl
sbb
mov
decl
fucomi
in
push
std
and
mov
dec
fcmovne
cli
jl
inc
mov
cs
jp
mov
and
push
mov
cmp
lock
dec
mov
jmp
cmpsl
push
cmp
adc
bound
pop
sti
cld
and
decl
lret
addr16
jp
outsl
adc
pop
fdiv
roll
ja
int
sbb
ja
popf
push
jnp
mov
jmp
push
psrad
in
mov
mov
div
mov
ljmp
jmp
js
in
sbb
loopne
insb
xor
cmp
mov
or
fcoml
xor
jle
xchg
xchg
fwait
test
push
fcmovnbe
outsl
iret
inc
out
cmp
ffreep
add
addr16
movsb
jle
jne
mov
loop
es
fstps
ljmp
cs
jb
push
dec
and
sbb
rcll
dec
push
jg
pusha
pushf
incl
jle
stos
test
sbb
jmp
jno
popf
jge
shll
sahf
roll
je
aaa
dec
add
outsb
jnp
popa
lret
adc
lds
loop
xchg
shlb
clc
or
push
std
lret
xchg
movsb
psubw
clc
shlb
xchg
or
aas
dec
jae
mov
jnp
pop
jns
xchg
test
gs
popa
inc
jmp
cmpl
lahf
dec
fistps
shrl
int3
sub
xchg
inc
xchg
andl
mov
fmul
pushf
mov
sub
fstl
sbb
ficoml
inc
out
dec
cwtl
cmp
push
or
jo
lods
js
mov
in
inc
pop
jmp
push
adc
or
jg
lods
push
rorb
in
sbb
dec
jno
push
cmp
test
repnz
adc
xchg
pusha
xchg
mov
push
sti
mov
mov
xor
mov
mov
cmpsb
outsb
arpl
cmpsl
scas
xor
loopne
jg
dec
jle
pop
adc
cwtl
mov
dec
push
out
sbb
mov
mov
incl
xchg
fmull
insb
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
push
inc
jmp
rcrl
jge
data16
pop
cmp
std
pusha
pop
adc
cmp
cs
ljmp
int
mov
vpinsrw
push
jmp
add
loop
mov
cmp
ja
test
add
pop
mov
mov
stos
fiadds
inc
mov
mov
loope
add
hlt
jmp
lret
jnp
add
sbb
enter
jmp
leave
test
icebp
arpl
or
xor
lea
and
sub
mov
cmp
shrl
sbb
adc
mov
push
mov
rorb
adc
ljmp
enter
pop
xchg
xor
scas
addr16
int
lahf
aad
ret
fidivl
xchg
dec
cmp
jno
cs
mov
pop
stos
add
xchg
roll
push
jg
ja
dec
scas
mov
imul
lods
shll
in
pushl
pop
stc
lcall
push
out
pushf
and
sub
iret
movl
lcall
inc
pusha
mov
fdiv
fwait
or
add
es
pop
test
push
fs
jmp
xchg
out
push
jg
add
adc
cmp
int
adc
dec
dec
jg
push
addr16
xor
xor
mov
stos
push
xchg
cmp
jb
mov
popf
aam
loope
dec
mov
push
sub
push
test
cmp
icebp
add
dec
addb
push
inc
in
pop
cmpsb
push
sete
xor
and
ljmp
mov
dec
dec
dec
pop
jns
enter
add
inc
inc
ljmp
and
movb
jmp
push
fisubs
loopne
pop
popa
ftst
adcb
and
jmp
js
ljmp
cli
pop
rcr
les
fstps
lret
stos
mov
das
stos
getsec
jb
sub
movsl
mov
aad
incl
lret
mov
xor
test
cwtl
push
pop
jnp
shlb
incl
adc
cltd
arpl
popa
stos
jmp
jle
inc
sbb
dec
mov
lcall
dec
mov
test
gs
cmp
mov
jmp
jb
sbb
cld
xchg
cmp
push
sti
cs
repnz
repz
pop
pop
ljmp
jmp
and
mov
mov
lahf
sub
xchg
or
cli
adc
xor
mov
xchg
ljmp
hlt
faddl
xor
cwtl
cmp
cmc
mov
not
push
or
rorl
in
mov
ljmp
inc
pop
pop
adc
shr
repz
sti
cmpsl
inc
inc
mov
ret
pop
std
ljmp
das
sbb
jmp
or
ljmp
repz
xor
lods
lcall
jbe
sbb
push
imul
mull
push
cmp
lcall
decl
out
mov
ljmp
lcall
test
mov
push
scas
divb
sarb
imul
pop
in
loop
adc
test
ret
hlt
add
dec
push
adc
addr16
stos
sbbl
insl
jmp
ljmp
add
pop
pushf
iret
addr16
fcompl
inc
push
and
sub
dec
fs
mov
xchg
jmp
test
push
sub
pop
xor
sbb
mov
mov
push
jge
sub
mov
push
push
fwait
leave
or
call
jl
sbb
lret
jmp
mov
mov
pop
imul
cmp
addb
sub
cli
inc
jae
mov
jmp
jge
add
cwtl
or
sub
push
push
sbb
into
pop
insb
mov
adc
inc
or
out
sub
push
jecxz
sub
cmc
xchg
pushl
pop
ljmp
dec
std
sbb
add
mov
mov
ljmp
xor
pop
inc
push
add
cmc
mov
loopne
jecxz
sub
sbb
pop
inc
out
push
cmp
ljmp
shr
add
popf
add
xchg
mov
test
mov
bswap
lods
push
decl
repnz
sbb
popa
adc
pop
dec
mov
push
adc
jo
aas
jg
cmp
xchg
decl
nop
imul
sub
call
lods
sub
out
xor
decl
push
imull
push
movsb
in
adc
outsl
test
outsl
xor
pushl
in
pusha
cmp
into
mov
cwtl
popf
fildll
xor
jle
dec
or
outsl
cmpsb
mov
clc
push
sahf
andl
xchg
mov
cmc
mov
lret
inc
cld
mov
sbb
divb
ret
mov
rclb
pushf
imul
rol
in
aad
mov
enter
cmp
in
movsl
jp
scas
clc
mov
dec
cmp
das
lret
popf
pop
or
add
xchg
decl
push
xchg
xchg
push
lock
mov
test
stos
cmpsl
xlat
decl
push
call
mov
dec
sbb
sahf
sarl
decl
mov
int3
daa
pop
push
into
in
cmp
xchg
sbb
or
std
xor
sbb
dec
mov
mov
sarl
cmp
fldcw
pop
add
pop
pushl
push
xor
dec
inc
push
xchg
insb
scas
icebp
or
mov
add
stos
clc
call
mov
sub
pusha
dec
dec
dec
stos
add
mov
out
dec
dec
and
imul
movsb
clc
insl
xor
stos
jne
mov
xchg
push
outsl
clc
push
les
and
insl
not
ds
jb
push
mov
mov
cmp
jbe
jno
lahf
jg
adc
xor
testb
sbb
cmp
xor
mov
pushl
test
pushf
and
push
mov
lret
sahf
fadds
outsb
push
inc
das
clc
jmp
pop
and
jo
and
int
dec
push
mov
jmp
je
mov
call
addr16
pop
cmp
lds
cmp
sub
push
dec
cmc
push
jg
add
out
cmp
jnp
dec
jle
sub
arpl
add
paddsb
call
in
mov
adc
cltd
sahf
mov
iret
pop
inc
push
sbb
gs
dec
sub
xchg
in
xor
pop
incl
les
out
sbb
dec
push
mov
xor
mov
je
push
xor
cmc
dec
and
mov
inc
pop
gs
out
jns
mov
loopne
sbb
mov
adc
and
pop
push
adc
je
xchg
jg
push
fbld
push
and
inc
loopne
call
testb
mov
lock
xchg
out
sub
repnz
imul
mov
leave
or
cs
sbb
jmp
mov
sub
jmp
cmp
mov
call
jecxz
cld
ds
divb
out
mov
scas
loopne
mov
and
mov
cld
loope
in
in
lcall
jb
mov
clc
std
call
mov
outsl
movb
ds
adc
popa
mov
je
nop
push
push
push
cld
mov
loope
mov
and
push
and
lret
lcall
sbb
sub
mov
adc
pop
aad
dec
icebp
or
out
push
push
vpshuflw
decl
jmp
push
sbb
test
pop
gs
into
enter
xchg
sbb
jg
aam
cmpsb
dec
das
xchg
cmp
bound
cmpsl
mov
aas
call
inc
pop
mov
mov
int3
or
mov
add
in
lea
pop
sbb
call
push
jmp
mov
test
cmp
in
and
mov
lahf
xor
decl
push
test
rolb
ljmp
or
data16
call
mov
add
test
cmp
scas
mov
cmp
add
sbbb
pop
mov
aad
es
and
divb
nop
dec
mov
jae
stos
scas
lcall
dec
mov
xor
xchg
add
testl
jo
and
das
leave
cltd
cld
dec
push
roll
fildll
mov
jge
push
xlat
out
mov
inc
xchg
xor
cmp
or
sub
jnp
cmp
mov
push
mov
cmp
jmp
inc
mov
adc
mov
testl
inc
adc
jbe
mov
inc
movsl
iret
mov
incl
cmpsb
fdivr
sbb
jmp
mov
rorl
sarb
push
mov
dec
das
mov
insb
mov
js
shlb
ds
and
scas
lods
rcrb
and
test
out
xchg
psubsw
pop
inc
jo
cltd
adc
mov
movsb
sbb
repz
jmp
jbe
popf
data16
stos
decl
dec
int3
ret
in
jbe
jns
pop
add
dec
das
stos
fwait
add
loop
cmp
push
in
call
in
jle
loop
xchg
pop
mov
add
xchg
push
inc
add
ljmp
fisubrl
cs
inc
pop
clc
push
cmpsb
scas
sub
mov
add
push
sbb
jmp
sbb
mov
dec
xchg
shlb
mov
push
adc
test
aaa
cmp
cmp
add
pop
push
lcall
lods
ss
popf
push
mov
fcomp
push
inc
push
movsb
jmp
mov
xchg
pop
nop
jl
pop
jo
inc
testb
mov
adc
lods
scas
popl
inc
out
lret
cli
and
lock
iret
xor
xorl
lods
inc
nop
testl
fsubp
jl
jns
or
sar
gs
xor
jo
xchg
xchg
pop
insb
cmp
fcomps
pusha
scas
mov
ljmp
in
rcrb
loope
mov
and
xchg
pop
stc
ja
lcall
shll
out
es
flds
mov
lret
int
inc
add
mov
and
adc
mov
into
test
xchg
pop
cs
ljmp
lock
lea
jnp
pop
push
out
adc
cmc
incl
mov
or
cmp
pop
gs
daa
push
enter
jg
inc
jle
push
mov
in
adc
call
scas
shl
fwait
loopne
mov
lea
loop
lcall
dec
pop
mov
or
repz
outsb
imul
cmp
rcrl
dec
lods
xchg
fiaddl
ljmp
lcall
scas
aaa
jno
cld
pop
jl
xchg
ret
inc
dec
push
cmp
sbb
out
enter
call
ret
icebp
in
sbb
cmpsb
js
pop
inc
std
cmp
aam
and
pop
dec
insb
sub
cmp
fwait
das
push
scas
shll
dec
test
test
adc
mov
xchg
test
ljmp
dec
sub
mov
mov
enter
outsb
push
jecxz
es
incl
fsub
sahf
lret
inc
lock
int
scas
or
xchg
std
test
fcomip
cmp
jge
ds
jbe
jae
xchg
out
nop
bound
lret
cmc
jmp
add
inc
xor
sbb
mov
mov
add
sub
dec
and
bnd
add
push
scas
mov
dec
icebp
ljmp
ja
push
add
ds
push
imulb
jae
pop
xchg
inc
ljmp
adc
mov
rcrb
xlat
rcr
sbb
notl
arpl
ficompl
decl
repz
jle
xor
shl
pop
mov
repz
fucomip
ljmp
fldcw
pop
sarl
dec
mov
bound
fists
sbb
insb
ljmp
push
sub
test
mov
lahf
xor
dec
and
idivb
mov
mov
pushl
rcrb
dec
cs
rcrl
bound
hlt
pop
mov
fldz
incb
aaa
imul
bnd
iret
subb
mov
aam
mov
call
cmp
js
dec
adc
stc
push
mulb
jl
push
pop
lods
adc
daa
add
mov
jmp
mov
ret
sub
push
add
or
mov
mov
adc
push
outsb
jle
dec
movsb
enter
dec
call
rep
xlat
adc
es
sub
inc
idiv
incl
shlb
rcrl
inc
rorb
jns
aam
add
arpl
push
sbb
mov
jl
xchg
inc
mov
mov
shrb
dec
std
stc
mov
fstps
add
pop
ja
incl
loopne
ja
push
pop
xlat
addl
inc
and
popa
mov
xchg
push
decl
xor
mov
fldl
push
mov
aad
cmp
loop
inc
xchg
sbb
and
incl
fstpl
adcl
les
dec
push
xor
xchg
jo
mov
and
stc
clc
cltd
incl
dec
inc
lcall
pop
push
xchg
push
loope,pt
mov
jle
js
mov
call
jecxz
pop
movsl
jecxz
rorb
mov
addr16
lahf
mov
js
lods
pop
jl
fcomip
cli
scas
mov
incb
pop
repnz
das
or
enter
test
incl
insb
and
cmp
pop
push
lock
jp
adc
xor
sbb
mov
ljmp
xor
add
stos
in
int3
inc
xlat
aad
sub
jnp
aaa
iret
jmp
and
bound
and
and
stos
loope
xor
clc
lea
out
inc
push
ljmp
gs
fucom
inc
fistl
fldl
decl
push
dec
adc
push
dec
pop
push
sub
orl
dec
stos
loopne
ret
jmp
fwait
mov
stos
repnz
xor
cmp
cmp
out
cmc
call
loopne
out
dec
pop
aaa
lcall
loopne
fbld
sbb
decl
or
mov
mov
dec
fidivl
adcl
incl
subb
aad
mov
out
mov
dec
adc
xor
pushl
ljmp
shll
stos
popf
insb
loopne
repnz
test
popf
pushf
cs
add
jno
add
in
xor
mov
mov
lea
lcall
adc
push
cs
das
dec
mov
xchg
pop
or
xchg
lds
lcall
push
in
loopne
pushf
mov
sbb
lea
xchg
jns
or
out
jg
call
gs
imul
int3
adc
mov
mov
shr
lds
push
movsl
inc
lret
jmp
mov
jle
add
mov
mov
cmp
rcll
mov
adc
clc
xorb
ljmp
sub
es
mov
dec
add
jns
fcmovnb
mov
aaa
mov
jg
mov
cmp
mov
xchg
cmc
dec
inc
mov
add
jne
sub
in
out
adc
scas
loop
mov
cs
pop
shufps
int
push
cld
pushl
sbb
arpl
fidivl
popa
inc
rolb
les
or
call
mov
pushf
daa
pop
data16
shll
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
decl
push
imul
dec
jmp
into
pushf
movsl
sbbl
cmp
fnsave
push
or
pop
push
sub
mov
push
jo
cwtl
add
push
ds
mov
jmp
push
jnp
add
in
jg
mov
ljmp
pushf
mov
fnsetpm(287
push
cld
xlat
out
adc
xor
xor
test
pop
add
mov
pushl
pop
jle
adc
adc
stos
dec
xchg
nop
adc
mov
roll
movsl
jmp
das
jo
cmc
aad
fmul
lea
incb
daa
lods
add
jmp
adc
out
push
adc
push
sbb
push
in
adc
mov
pop
pop
mov
decl
mov
pop
std
mov
daa
insb
pop
es
into
call
adc
ljmp
sub
call
jae
ja
mov
jge
push
pop
addr16
fistpll
mov
ljmp
inc
mov
dec
adc
and
fistps
ds
adc
sarb
mov
jg
out
cmp
xchg
test
fmull
jno
jnp
pop
fsubl
pushl
pop
loop
mov
xor
pop
subl
cmpsb
fsub
outsl
cmc
lret
scas
call
clc
xchg
push
xchg
adc
sub
mov
pushl
out
lret
xor
lret
dec
sbb
cmp
pop
mov
ljmp
xchg
push
ss
fldt
mov
int
inc
dec
in
lahf
rorb
mov
call
popa
lea
mov
cmp
nop
mov
ds
pop
mov
jp
stos
pushl
cld
popf
in
outsl
dec
jnp
inc
xchg
mov
fcmovnb
or
insb
fnstsw
je
adc
incl
cld
inc
dec
adcb
add
js
mov
lretw
mov
push
cli
mov
add
and
gs
into
mov
push
pop
or
push
icebp
jmp
pop
sbb
or
ja
dec
clc
scas
loope
decl
cmp
psrlw
inc
pop
inc
inc
pop
cmp
add
xchg
jae
mov
xor
jno
lcall
out
and
stc
adc
push
cld
ret
bound
push
adc
cltd
rcrb
adc
xchg
lock
std
pop
mov
add
jge
sbb
popf
sub
fisttps
jae
xchg
movsl
mov
dec
sub
push
mov
xchg
lret
fistpll
ds
decl
push
cld
rcrl
fisttpll
lock
mov
xor
xchg
sbb
wrmsr
ljmp
test
push
mov
and
decl
xor
das
adc
pushf
aas
pop
into
loopne
sbb
dec
sbb
push
push
hlt
jo
pushl
mov
add
xchg
roll
push
pusha
addr16
lret
test
ja
push
call
imul
imul
add
sub
jo
jge
call
lods
jne
cmpsl
or
push
cmp
repnz
idiv
push
xor
in
mov
mov
cs
pop
xor
add
fs
ljmp
xchg
fisttpl
push
push
sbb
movsb
cvttps2pi
mov
mov
sbb
fstpl
stos
dec
pop
lock
lcall
mov
pop
sbb
sahf
call
push
fidivs
sahf
loope
das
sar
ljmp
stos
stos
lcall
add
outsb
dec
xlat
pushl
std
jmp
idivl
jmp
outsl
scas
pop
sar
daa
inc
test
aad
ss
inc
fdiv
pusha
push
mov
movsl
faddl
and
inc
dec
outsl
cli
ss
pop
cmp
test
jne
outsb
ret
icebp
movsl
xorl
inc
cs
push
out
sub
imull
dec
notl
pop
nop
loope
nop
sbb
xor
int
das
clc
fistpll
mov
adc
in
push
clc
repnz
rcl
pop
add
out
add
lcall
dec
xor
mov
test
lea
imul
jnp
push
mov
mov
mov
push
inc
inc
jl
ja
xor
sbb
ljmp
insb
nop
add
stc
mov
jl
fldcw
call
dec
push
int
mov
js
xchg
rcrl
ds
ds
jle
data16
mov
xor
fld1
js
jnp
mov
imull
in
repz
dec
in
leave
clc
das
mov
bound
pop
addl
jmp
sub
mov
incl
fsubp
scas
xor
leave
divb
push
int3
das
and
pushf
test
fcmovb
loopne
mov
movsb
jle
ljmp
xchg
mov
mov
cld
int3
insb
fstps
cmp
dec
add
ljmp
jg
xchg
imul
cmp
imul
sar
ljmp
push
aas
push
gs
lods
insl
ja
add
xor
int
add
xor
jg
jg
xor
in
push
dec
inc
test
adc
mov
std
out
jb
dec
in
in
inc
ret
mov
push
sub
add
push
in
pushf
sub
cmc
mov
mov
mov
in
mov
mov
stos
jno
nop
cwtl
mov
pop
adc
nop
mov
lds
push
mov
call
mov
dec
int3
rol
add
pop
pop
mov
and
ret
inc
jp
sub
js
repz
loopne
inc
sbb
add
push
cmp
pop
add
sub
call
sahf
notl
loopne
inc
mov
stos
enter
sub
sub
movsl
and
push
xor
jge
in
mov
pushf
dec
pop
dec
arpl
fisubrs
xchg
test
push
dec
adc
inc
xchg
insb
cmp
or
mov
inc
out
push
aaa
xor
add
mov
pushl
add
nop
mov
mov
inc
inc
pop
inc
jns
fidivrl
rcrl
dec
clc
lcall
sarb
push
xor
jbe
and
bound
pop
cmp
adc
sbb
rorb
mov
bound
adc
pop
scas
mov
bound
jmp
nop
push
stos
adc
or
push
inc
mov
pop
loop
movsb
lcall
cli
jge
sbb
into
mov
push
xor
mov
add
fimull
arpl
lcall
jge
sub
push
lret
mov
cmp
mov
subl
addr16
push
ret
sti
pop
call
push
or
xor
fwait
mov
inc
aas
pop
hlt
fildll
mov
andb
ds
out
sub
lcall
or
shlb
cs
stc
in
dec
xor
inc
cmp
sbb
sub
std
incl
mov
shrl
in
mov
shl
jp
xor
in
sti
jne
push
xor
pop
push
sub
aam
add
addr16
mov
pop
leave
pop
lods
lock
mov
cld
jae
cltd
dec
outsl
jecxz
mov
inc
cmp
ja
xor
lcall
inc
loop
jae
mov
outsb
test
jmp
mov
cwtl
adc
lea
fs
cmpsl
aam
inc
sbb
call
push
xchg
inc
jp
adc
dec
mov
add
mov
ljmp
mov
push
and
mov
xchg
cli
stos
scas
sarb
std
decl
loope
bound
out
fdivrp
mov
sub
sbb
lea
js
xchg
inc
inc
xchg
mov
inc
adc
test
cmp
addr16
push
fadds
inc
xchg
sbb
jmp
cs
mov
mov
icebp
pop
xor
movsl
clc
out
push
xchg
mov
imul
pushl
sahf
mov
outsl
jmp
xchg
sub
clc
xor
inc
lcall
jmp
add
mov
push
dec
pop
les
es
scas
sbb
std
out
jbe
and
mov
lret
pop
inc
arpl
jge
xor
cmp
jmp
aas
inc
incl
fdivl
add
inc
test
xchg
push
imul
xor
movsl
adc
sbb
repz
pushl
negl
cs
rorb
fadds
outsl
cli
xchg
jp
lcall
outsl
cmp
fists
or
or
roll
call
mov
stc
fdivrl
adc
in
or
mov
mov
inc
sub
cmp
cltd
xchg
add
pop
jo
sbb
pop
popa
ljmp
sti
inc
push
jae
fwait
lcall
loopne
cltd
mov
lcall
in
loopne
decl
mov
repnz
jge
mov
enter
ret
pop
or
push
loope
inc
decl
into
mov
inc
js
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
pop
fucomi
addr16
cmp
shll
enter
inc
jb
dec
mov
sub
inc
popa
mov
and
loop
inc
cli
adc
sub
outsl
cmpl
inc
call
add
cmp
mov
ret
sbbl
sti
or
aas
sbb
dec
dec
dec
scas
testl
sub
test
jg
pop
xchg
jge
aam
out
incl
push
jle
xchg
or
sbb
inc
adc
popa
fwait
data16
rol
ljmp
sub
and
incl
xchg
xchg
idivb
cmpsb
loopne
cld
movsl
pop
adc
pushf
pushl
jg
je,pt
mov
or
rclb
into
and
sahf
push
sar
decl
dec
je
dec
divb
and
leave
mov
mov
cmc
daa
lcall
mov
cmc
decl
cld
adcl
popa
lods
dec
aaa
icebp
gs
test
les
lock
sub
fnstsw
test
push
xchg
ret
scas
nop
xor
mov
cmp
mov
xor
mov
fildl
lds
or
shrl
call
roll
test
pop
push
test
pop
in
fsubrl
roll
adc
add
pop
xchg
mov
mov
fistps
sbb
ja
adc
sub
fisttps
sub
cmp
and
fcos
outsl
mov
fcomip
mov
enter
in
lods
repnz
jmp
into
sub
push
mov
out
dec
gs
sub
mov
es
adc
decl
push
dec
jle
mov
in
aaa
popf
mov
nop
and
xchg
daa
in
mov
decl
imul
cwtl
sub
pop
fwait
mov
scas
jnp
popa
xor
or
jo
lcall
pop
jecxz
inc
lahf
push
scas
cmp
xor
mov
jb
cmpb
mov
hlt
out
jb
mov
mov
mov
dec
cmc
xor
sbb
jmp
adc
or
test
bound
mov
lods
adc
in
filds
pop
jmp
inc
out
sub
fstpl
cltd
jmp
inc
and
adc
xchg
lret
sarb
mov
pop
or
fldl
mov
call
les
shrl
mov
scas
and
inc
dec
jb
lock
pop
je
and
inc
sbb
adc
sti
cmc
sbb
sub
aas
mov
stc
pop
stc
pop
out
pop
mov
inc
aas
and
mov
xchg
push
lods
xor
jo
jbe
lcall
inc
and
ljmp
int
cmpsb
cmp
push
lods
sti
in
pushl
add
mov
shll
fsubrl
loop
inc
pop
jae
aad
les
lods
sub
jmp
pop
fisubrl
xor
or
jmp
fistps
orl
mov
call
push
dec
inc
ja
push
nop/reserved
sbb
or
mov
sbb
clc
xor
sub
ljmp
nop
negl
and
xor
pop
cltd
call
push
jp
gs
xor
jmp
xor
mov
out
xchg
scas
nop
push
roll
rorb
nop
notb
and
pop
jmp
arpl
adc
mov
shrb
add
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
lcall
xor
stc
in
cltd
cmovl
loopne
arpl
test
cmp
ljmp
das
xchg
or
in
and
pop
popf
rcr
dec
jb
inc
inc
mov
mov
je
xorb
test
jnp
fwait
adc
incl
lret
sti
sub
in
pop
cmp
xor
outsb
and
add
cwtl
out
clc
xor
add
ja
mov
sbb
dec
and
in
lret
jno
inc
cld
cmp
xchg
aad
ds
adc
cld
insb
in
scas
test
adc
mov
jle
cmp
or
xor
pushf
lds
incl
cmp
dec
fs
fsubs
ds
loopne
pop
insl
xchg
pop
sub
add
xchg
mov
or
pop
and
or
pop
fdivrs
mov
and
sahf
nop
das
pop
pop
scas
xchg
ljmp
mov
sbb
in
lret
push
inc
sbb
sub
rolb
aad
cmp
sub
xor
add
push
aam
xchg
adc
mov
mov
push
fdiv
adc
clc
into
mov
jno
cwtl
dec
inc
enter
js
decl
scas
mov
push
out
cmp
loop
push
push
add
sbb
cmp
and
sbb
push
test
data16
mov
daa
cmp
aas
lock
lcall
fdiv
fsubrs
mov
or
repz
inc
or
and
divb
push
std
fnsave
cwtl
xlat
sbb
lock
or
pop
fdivl
mov
adc
cmpsl
lcall
push
push
push
sub
adc
lcall
mov
jno
into
push
scas
das
lret
das
mov
mov
loopne
jle
enter
mov
mov
mov
and
inc
nop
stos
push
out
hlt
mov
jge
arpl
jmp
sub
out
sub
daa
pop
pop
jle
loop
jb
call
xchg
mov
cmpsb
ja
cli
or
push
pop
cwtl
or
push
or
ss
cmp
cmc
icebp
in
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
or
lcall
mov
xor
adcl
ja
jecxz
sbb
call
xchg
mov
lds
jb
cmpsl
stos
lret
adc
je
push
movsl
call
call
fsubs
stc
pop
push
inc
inc
cli
xor
add
rolb
fadd
scas
mov
decl
push
push
pop
repnz
stos
aad
and
push
bound
mov
sub
jmp
mov
es
mov
shr
adc
outsl
pop
add
cld
call
fs
sti
sti
add
ret
inc
inc
outsl
in
inc
test
movsb
jnp
mov
insb
fidivrs
mov
lock
dec
js
je
adc
out
imul
mov
mov
dec
xchg
loope
in
in
push
sbb
out
dec
jbe
incl
nop
jg
ret
push
movb
inc
cwtl
xor
pop
jge
mov
sar
incl
into
cmp
xchg
sub
mov
das
adc
jno
cmpsl
out
mov
inc
in
and
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
add
fcmovnu
mov
or
dec
and
out
xchg
aad
mov
sbb
fiaddl
dec
jecxz
daa
sbb
or
mov
fidivs
push
dec
aad
insb
out
xor
xor
and
incl
push
xchg
mov
inc
call
add
or
and
jge
je
dec
dec
add
jns
decl
loop
or
jg
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
jb
xchg
ljmp
in
or
clc
outsb
inc
rcr
lea
int
test
sub
mov
call
dec
and
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
data16
lcall
adc
insb
mov
adc
mov
xor
lahf
mov
cwtl
movsb
dec
xchg
and
sahf
decl
pop
xchg
pop
push
push
sbbl
bound
adc
xor
and
inc
push
inc
std
hlt
lds
mov
jno
or
imull
hlt
pop
sbb
aas
test
push
cmp
call
cld
jge
into
sub
pop
shll
mov
sti
mov
mov
push
out
jae
add
pushl
popf
aas
and
test
es
fldcw
bound
and
adc
xor
jmp
sbb
cmp
pop
fwait
scas
je
adc
popa
add
lcall
mov
sub
sub
aad
dec
shll
fwait
dec
jne
xchg
push
push
jmp
cli
push
ljmp
mov
sub
pop
mov
enter
adc
jno
nop
jg
loop
repnz
les
lcall
dec
mov
iret
or
lret
out
cli
mov
push
testl
mov
int3
xchg
cmp
sahf
inc
into
mov
in
lcall
mov
cmpl
shlb
or
mov
aad
push
xlat
mov
lcall
std
and
jne
rcl
and
fsubr
popa
fs
jb
lret
pop
pop
sub
popa
ljmp
dec
dec
das
stc
into
in
jae
xchg
xchg
lock
test
jno
or
popf
push
imul
scas
dec
incl
sub
out
mov
pushf
ljmp
rorb
pop
std
ljmp
mov
je
or
dec
xor
jb
mov
das
ret
rol
push
aad
jg
ljmp
test
aam
ljmp
sbb
insl
sbb
nop
in
inc
stc
lods
dec
and
ja
pushf
mov
xchg
inc
lcall
frstor
and
ljmp
pop
icebp
adc
faddl
add
inc
shrb
jg
add
outsb
adc
into
push
movsl
xor
mov
sub
ds
adc
xor
mov
cltd
inc
adc
push
mov
jo
xchg
lods
sub
out
cs
js
data16
dec
dec
pop
stos
or
inc
dec
add
incl
stc
and
jb
aam
xchg
adc
sbb
ud1
decl
lds
sub
add
xor
pop
mov
ljmp
xor
sub
pop
insl
pushl
mov
lahf
push
fs
popf
test
hlt
sub
insl
mov
fcomip
call
dec
xor
arpl
js
push
sub
daa
aam
and
sti
inc
sub
cmp
decb
ffreep
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
lcall
sub
hlt
shrb
pop
arpl
test
les
sbb
and
aam
int
pop
jmp
mov
adc
push
outsb
rcll
nop
push
loopne
xorl
inc
loope
xchg
push
add
movsl
outsb
dec
cltd
out
xchg
dec
or
or
stc
pop
rolb
popa
addb
mov
sbb
xchg
call
mov
jb
xlat
mov
fimuls
and
les
leave
pushf
adc
sbb
in
sub
sub
jg
dec
push
lret
stc
sbb
movsl
sbb
lods
rclb
clc
push
mov
lcall
push
in
xchg
xor
call
test
shll
xchg
ljmp
outsl
mov
inc
scas
cli
mov
adc
jns
jae
popa
das
testb
xor
lock
push
int
xor
xchg
pop
icebp
aad
lods
ret
sahf
fistpl
ret
es
xor
jb
cld
lcall
push
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
inc
sbb
repz
call
mov
push
sbb
xchg
dec
cmp
iret
pop
cmc
decl
leave
jle
xor
loope
in
pop
cmp
mov
xor
xchg
mov
dec
clc
mov
mov
jo
jg
push
lret
bound
fistps
insl
dec
cld
jg
out
shl
sbb
lcall
inc
cmp
sub
orb
ss
mov
popf
mov
hlt
pop
dec
mov
dec
and
mov
sar
loop
hlt
mov
orl
aam
sbb
and
lcall
aaa
fbld
mov
test
ja
jp
pop
mov
inc
adc
push
lds
mov
jmp
mov
pushf
xor
mov
pop
test
or
pop
ret
fildl
inc
xchg
jno
incl
shl
adc
call
mov
ret
sub
mov
nop
negb
dec
loop
ja
cmpsb
incl
push
pop
adc
ficompl
aam
xchg
es
or
lcall
fs
fcmovb
and
xor
xchg
loope
and
outsb
lret
xchg
orb
decl
daa
jns
jae
pushf
xor
push
cmp
adc
mov
out
jno
inc
dec
loop
inc
push
or
daa
dec
test
cmpsb
mov
mov
adc
xor
or
sub
sbb
stc
add
mov
sahf
and
sbb
roll
lcall
pop
xchg
sbb
call
cli
test
mov
adc
lcall
xchg
lods
les
or
daa
mov
jmp
dec
fucomp
fs
je
push
push
mov
push
ret
mov
mov
clc
jns
push
jecxz
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
incl
lds
movsl
mov
xor
repz
mov
notl
pushf
pusha
nop
jmp
mov
push
imul
cs
xchg
ss
mov
out
mov
das
cs
call
inc
sub
fistl
inc
in
cmp
sahf
add
cli
aad
imull
add
aas
test
ret
cmp
incl
sub
lcall
shll
popa
mov
pushl
adc
pop
fdivp
lahf
sti
xchg
call
pop
out
out
cmpb
lock
fsqrt
mov
cmc
inc
into
mov
ljmp
pop
iret
imul
add
rorb
loopne
jmp
sbb
cmp
mov
mov
xchg
out
fdivl
jmp
stos
mov
sbb
mov
mov
or
int
mov
mul
add
mov
sub
lock
and
xor
cmpsb
mov
inc
cmpsb
movsl
jecxz
stos
and
call
sbb
sub
mov
jp
decl
jns
mov
icebp
push
scas
test
into
push
sahf
inc
test
pushf
cmpsb
push
push
inc
nop
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
scas
sub
inc
mov
pushl
push
lds
dec
ds
loope
add
mov
bound
dec
xchg
mov
aaa
jno
decl
adc
xor
or
mov
in
inc
and
loope
bnd
addr16
sub
mov
mov
mov
fsubr
jbe
jecxz
mov
mov
xchg
mov
push
pop
push
cmpsb
adc
imul
add
negl
decl
ret
pop
and
mov
push
sub
xchg
jp
popf
mov
xor
mov
dec
cmp
sbb
lods
mov
ds
stos
ds
lcall
iret
jmp
test
imul
mov
int3
jno
insl
sbbb
push
arpl
ret
sbb
sbb
lock
cmp
xchg
pop
outsb
push
jb
lret
mov
xor
stos
int3
les
lcall
jb
xor
dec
mov
mov
sub
jmp
in
xchg
sbb
dec
in
les
inc
add
sbb
xchg
lret
js
movzwl
pushl
xlat
repnz
maskmovq
testl
aad
sub
xor
pop
loope
mov
push
pop
movsb
or
fmull
cmp
call
das
cli
fdivrs
jbe
lods
xor
das
ja
jmp
mov
loope
inc
lahf
jmp
in
loop
push
xchg
pop
popf
jnp
into
ja
shll
cmp
mov
lcall
cltd
test
int3
dec
inc
cmp
pop
cmp
icebp
cs
pop
cmp
lcall
shlw
xchg
pop
andb
dec
jb
jb
test
test
pop
aaa
stos
add
xor
jg
mov
sub
mov
dec
mov
pusha
data16
aaa
rcrl
decl
xchg
mov
adc
dec
sti
addr16
into
pop
fwait
inc
aas
lea
xchg
cwtl
stc
push
ljmp
xor
int
les
lcall
lods
jnp
and
cs
call
lret
add
add
frstor
test
jno
dec
cld
push
xchg
lods
add
jle
sub
clc
fidivs
xchg
cltd
sub
test
iret
xchg
xchg
sbb
xchg
imul
inc
dec
cmpsl
adc
aas
or
pop
and
faddp
xchg
jmp
notb
fcomip
ret
aad
data16
cwtl
fwait
push
sub
test
sbb
fcomip
jle
addr16
test
pop
jp
inc
repnz
jno
das
pop
or
inc
add
idivl
mov
sbb
pop
repz
jne
push
outsl
fs
jg
stos
pop
jle
test
decb
call
lret
insb
and
orb
pushl
fadd
xchg
and
push
and
push
mov
rcrl
xchg
push
mov
pop
ljmp
lcall
fcom
cmpsb
pop
and
aaa
cmp
xor
jb
cltd
lods
in
repz
jmp
jmp
mov
enter
cmpsl
xchg
cmp
xchg
pop
push
pop
cmp
mov
incl
sub
or
rcll
xor
outsb
sbb
scas
mov
decl
lds
push
or
jae
std
cmc
push
mov
inc
loopne
mov
push
insb
xchg
repnz
inc
sahf
xchg
in
pop
mov
and
mov
cwtl
xor
icebp
rcrl
sbb
call
xchg
sub
mov
or
pop
cmp
not
adc
xchg
imul
insl
pop
cmp
sbb
out
inc
push
inc
mov
mov
xor
jg
cmp
sub
dec
mov
push
sbb
adcl
lods
add
jmp
stos
fcmovne
adc
shll
bnd
adc
ret
into
iret
notb
jnp
std
sahf
inc
sbb
jmp
jae
jl
add
test
imul
lock
outsl
push
les
insl
mov
icebp
decl
xcrypt-cbc
cmpsl
aam
mov
bnd
and
aad
scas
jle
cli
mov
ret
mov
stos
lods
aas
in
faddp
adc
mov
es
das
sub
ja
stos
sbb
ret
sbb
xchg
icebp
cmp
mov
call
ds
dec
fnstenv
cwtl
xor
aas
xor
add
adc
fdivr
aaa
fiaddl
or
pop
aas
push
jb
dec
pop
lea
inc
or
faddl
cmc
fildl
mov
out
mov
xchg
sbb
sub
out
mov
xchg
fbld
mov
out
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
call
in
mov
jl
xchg
outsb
and
ret
adc
testb
cmp
sbb
pop
leave
xor
fcompl
sub
mov
dec
jecxz
adc
push
idivl
into
andb
lods
lahf
decl
shrl
lcall
jb
xor
sbb
fwait
and
lods
je
jmp
jge
imul
test
xor
imul
mov
push
aam
inc
outsl
push
stc
add
incl
or
mov
cmc
lret
sbb
jo
push
dec
sahf
dec
push
push
decl
xchg
cmp
and
push
mov
fstps
daa
stos
shll
xor
pop
lock
jmp
xchg
insl
sub
out
pop
add
aam
or
fsts
fcompl
and
shlb
orb
inc
ret
sbb
mov
rcr
jno
xor
xchg
pushf
test
push
push
mov
into
in
or
ret
decl
es
adc
rclb
mov
xchg
pusha
jg
iret
pop
jb
adc
jp
mov
pop
mov
pushl
and
xchg
pusha
mov
jb
push
outsb
xlat
cmp
jnp
jg
std
and
dec
test
shlb
or
xchg
enter
inc
ret
sub
pushl
jge
mov
mov
aam
out
and
test
xchg
inc
ja
add
cmp
add
xchg
fidivrl
sbb
cmp
rcrl
sbb
dec
mov
insb
cmp
call
dec
test
enter
sub
jno
xor
test
sbb
ds
fcos
call
mov
pop
out
inc
test
in
addr16
jmp
pop
fiadds
loop
adc
in
adc
jg
xlat
stos
pop
insl
push
mov
jae
js
lea
repnz
daa
call
inc
mov
test
sbb
jge
inc
mov
loop
adcb
gs
xor
arpl
jmp
test
into
lock
jbe
mov
shrl
stc
xor
stos
cltd
mov
ljmp
ljmp
and
jl
andb
bound
stc
xchg
pop
decl
pop
subb
in
jp
scas
push
in
ljmp
dec
stos
xchg
icebp
std
enter
scas
cli
pop
mov
repz
js
inc
test
xor
cmp
cld
and
pushl
mov
or
push
dec
bswap
test
inc
push
or
cmp
aad
cli
stos
inc
outsb
ret
imulb
pop
and
testb
mov
pushf
sub
pop
jg
inc
pop
fdivrs
movsb
sti
fbstp
jo
ljmp
mov
cmp
mov
mov
sub
outsl
fdivrl
mov
scas
mov
inc
imul
mov
fisttpl
push
and
sahf
adcb
push
ja
push
jl
hlt
inc
imul
xchg
ja
mov
out
mov
das
call
pop
icebp
pop
or
push
xor
push
jge
mov
testb
cmp
mov
ror
and
pushl
test
add
bnd
pop
mov
inc
cmc
cli
int3
cwtl
mov
xor
ljmp
out
sbb
jb
and
pop
or
add
jg
les
inc
cli
add
pop
and
xchg
pop
js
aad
popa
mov
dec
scas
cmp
movsb
loope
xor
mov
stc
in
fisubrs
pop
test
pop
movsl
mov
lcall
jmp
jns
mov
push
push
rcrl
or
mov
jmp
sbb
mov
test
sub
std
pop
inc
mov
daa
stos
fadd
and
jecxz
rclb
pop
scas
popl
clc
scas
xchg
sbb
pushl
sarb
dec
mov
or
insl
adc
jae
xor
aaa
aas
incl
mov
fists
sti
aam
jb,pt
shll
jge
ds
bound
rcrl
xchg
fisubs
aaa
or
sahf
cmc
pop
jbe
sbb
jmp
xchg
out
in
fbstp
int
cmp
fmuls
test
xor
outsb
inc
push
sub
aad
mov
xchg
mov
decl
incl
dec
paddsw
dec
mov
leave
jmp
push
sbb
jmp
cmp
inc
pop
jmp
jns
loope
lea
mov
xchg
add
inc
lea
push
ret
ds
xchg
pop
mov
gs
sub
mov
inc
pop
dec
push
stos
mov
cmpsb
incl
or
sbb
push
mov
in
rclb
adc
jmp
cld
in
inc
insb
xor
stos
movl
idivb
and
shrl
enter
ljmp
clc
call
mov
inc
sbb
adc
xchg
cmc
js
fiaddl
outsb
out
stos
jno
add
das
es
jmp
mov
lcall
xchg
lcall
inc
pop
push
push
jne
je
bound
lcall
je
jb
push
incl
mov
pushf
add
aam
mov
gs
xchg
jb
cmp
mov
ss
xlat
stos
int3
fdivs
shlb
out
adc
inc
ljmp
push
and
adc
jns
shlb
cmp
mov
incl
push
enter
shrb
mov
sbb
push
mov
push
inc
lret
addr16
faddp
icebp
cltd
mov
sub
or
out
out
setbe
in
mov
jae
stos
ljmp
shrb
xor
fs
in
jne
jmp
mov
aad
cld
lahf
daa
inc
das
and
add
ret
loopne
mov
out
ja
cmp
out
mov
insl
jmp
mov
test
ret
xchg
push
lcall
inc
inc
arpl
mov
ret
or
and
lcall
jle
add
cmpsl
mov
mov
mov
inc
xor
cld
daa
imul
hlt
incl
cld
incl
decb
into
jmp
pop
add
mov
mov
mov
and
or
sbb
sbb
jle
mov
stos
icebp
fs
rcrl
pop
lods
mov
pop
pop
aas
out
mov
and
test
lret
sahf
inc
adc
pop
clc
dec
dec
and
das
clc
mov
cmp
into
xchg
subb
push
adc
incl
pop
dec
inc
cmpsb
cmp
data16
mov
in
daa
add
xor
popa
push
in
jp
push
inc
jns
xchg
daa
xchg
gs
and
xor
sub
nop
sbbl
inc
xchg
mull
in
insb
push
jne
pop
xchg
pop
sub
decl
sub
mov
xlat
call
ljmp
mov
jecxz
js
push
mov
pushf
inc
in
cwtl
enter
lea
decl
imul
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
mov
cmp
decl
lock
adc
push
call
and
clc
push
data16
loope
pop
sar
clc
pushl
aam
fwait
dec
das
stc
mov
dec
cmp
pusha
outsb
insl
nop
aas
adc
or
in
jmp
add
add
push
loop
cmp
mov
call
cmp
push
int
add
call
or
sub
leave
push
imul
testl
call
and
int
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
jmp
mov
pushl
dec
insb
adc
fmull
cmp
inc
cmp
mov
loope
add
xchg
sgdtl
xor
aas
movsl
movsl
or
sbb
push
jl
jno
shlb
push
sbb
mov
cmp
hlt
incl
dec
mov
sbb
decl
xchg
or
arpl
mov
lret
pop
shlb
ja
lret
bound
ljmp
jns
jl
mov
inc
decb
sbb
jno
jno
pop
xor
xor
decl
jns
inc
dec
adc
popa
mov
sti
fstpt
add
test
out
mulb
call
xchg
mov
call
fidivl
je
or
push
addb
in
pushl
jmp
rcl
mov
mov
jno
xchg
sbb
push
ljmp
mov
cs
nop
jo
rcll
adc
add
jnp
out
pop
cli
inc
pop
imul
lcall
test
jne
and
dec
mov
push
pushl
fwait
stos
shlb
or
cmp
ss
call
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
decl
push
ret
stc
sub
js
sub
jns
pop
mov
xor
fmulp
movsl
jl
mov
jbe
neg
decl
mov
das
xchg
cld
or
lahf
adc
mov
lds
mov
aas
dec
xlat
stc
ja
arpl
and
mov
shlb
into
jne
mov
and
push
cmp
dec
pop
push
inc
sub
mov
bound
cld
fistpll
loope
dec
jmp
fistps
xor
mov
and
lcall
jmp
in
xchg
mov
cmc
or
dec
sbb
daa
jns
xchg
mov
push
rcl
and
pop
push
add
mov
and
lcall
jb
into
out
push
adc
fcomi
push
fstpt
or
xchg
add
incl
pop
outsb
adcb
add
aam
lods
adc
mov
hlt
add
in
ljmp
dec
ret
cs
je
inc
sbb
adc
sbb
sbb
outsb
lcall
inc
lock
jb
leave
rcll
xor
arpl
dec
pop
xlat
inc
lock
mov
and
push
add
inc
adc
in
sub
subb
scas
push
lea
rcll
call
adc
add
stc
add
or
sub
or
ljmp
pushl
sbb
in
sahf
fidivs
dec
repnz
sbb
fwait
decl
scas
out
shrb
fists
pop
fsubrs
imul
movsl
or
mov
ljmp
jbe
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
imul
sbbb
pop
mov
mov
pop
pop
arpl
pop
mov
xchg
jg
lcall
pusha
insb
and
mov
jbe
xchg
push
jg
call
cs
xchg
cmc
aas
sub
jo
movl
test
mov
pushl
enter
inc
mov
xlat
sti
movaps
insl
mov
arpl
movsl
fnstsw
pushl
push
test
popa
cmp
adc
jns
cmp
xlat
adc
rcrb
push
std
mov
lret
aaa
lret
in
xchg
dec
xchg
jno
jl
rol
pushl
sbb
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
pop
pop
ret
inc
rep
out
andl
mov
aas
aaa
mov
int
movsl
lret
and
xchg
and
icebp
mov
mov
xchg
subb
lret
mov
lock
cmpsb
or
inc
aas
shll
js
ljmp
stos
sub
jl
lcall
jb
cltd
lods
jecxz
push
dec
ljmp
add
scas
jle
mov
decl
mov
out
push
add
pusha
push
pop
push
stos
or
cmpl
ret
call
dec
lock
cmpsl
ss
insl
xchg
cmpb
fwait
icebp
je
aad
std
pop
mov
testb
push
jecxz
xchg
incl
inc
xchg
cmp
cld
jno
lahf
aam
out
sbb
jo
aas
outsl
cmp
mov
mov
das
and
adc
dec
mov
jae
xor
xchg
fistpll
jnp
jg
xchg
scas
in
out
std
jns
mov
sbb
pusha
cmp
xchg
outsl
rorl
cmp
ja
xchg
out
inc
xor
loopne
fwait
jp
fstl
adc
xchg
test
scas
movb
dec
aam
je
jnp
incl
jae
sub
in
cmpsl
cli
gs
dec
dec
xchg
pop
idivl
sbb
mov
decl
enter
iret
sbb
cmc
cs
loopne
mov
je
mov
loopne
incl
imul
push
out
add
daa
dec
pop
sti
das
pop
scas
je
ljmp
push
mov
pop
out
inc
cmp
add
adcl
mov
mov
sar
jg
js
out
fucom
fwait
or
std
add
add
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
jmp
push
cld
mov
enter
std
adc
mov
ss
inc
ds
mov
lcall
xor
sti
scas
pushf
xchg
jne
pusha
cli
sub
imul
cmpsl
push
into
fists
jmp
pop
lret
jae
xchg
loope
pop
mov
xor
imul
and
shrb
sti
fnstcw
lcall
aam
data16
pop
push
fistpl
test
add
lcall
or
test
mov
sbb
push
arpl
loope
call
or
sbb
inc
lods
fiadds
dec
leave
incl
cltd
jns
and
sbb
push
stos
and
cmpsb
sbb
inc
xchg
call
mov
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
jmp
ljmp
xchg
fdivrs
mov
lods
sub
arpl
mov
call
repnz
callw
jle
cmc
test
addb
jl
push
xchg
adc
and
ljmp
out
add
xchg
xor
loopne
insl
dec
lcall
pop
sub
inc
loope
cmovs
mov
insl
popf
xlat
imul
inc
ja
xor
pushl
js
push
mov
pop
push
xchg
daa
das
xchg
mull
jns
sub
decl
push
sub
mov
mov
adc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
or
cmp
lods
mov
into
sahf
loope
lds
call
inc
stos
fiaddl
push
movsb
mov
lahf
fisttpll
int
mov
push
jle
pop
inc
mov
lret
call
adc
mov
idivl
icebp
jnp
jnp
mov
xchg
mov
xchg
into
xchg
push
in
cmpsl
in
dec
mov
in
iret
popf
aas
cmpsl
mov
in
lret
pop
sbb
out
idiv
dec
rol
in
fiadds
xchg
bound
pushl
mov
nop
add
or
inc
adc
inc
push
std
stc
mov
inc
push
in
lcall
inc
push
mov
out
inc
mov
ljmp
sub
sub
cmp
pop
add
int3
ficoms
mov
repnz
jae
mov
fdivrs
lahf
jnp
aad
sub
adc
pop
jl
jle
or
mov
jl
das
std
mov
decl
push
mov
outsb
xor
push
sub
popa
fdivp
pop
fnsave
pop
fisubl
lods
mov
daa
and
shll
add
xchg
mov
pushf
adc
jg
mov
test
imul
es
push
fstpt
mov
dec
call
jg
adc
cmp
jl
dec
testb
or
lds
xor
inc
insl
imul
mov
ret
add
lret
ret
test
shlb
fsubrl
decl
or
stc
mov
jo
jp
aas
stos
push
into
pop
xor
adc
cmpsb
out
sub
add
lret
dec
popf
jne
ds
mov
rol
pop
jo
es
pusha
call
mov
xor
out
mov
sbbb
and
xor
mov
lcall
cmpsb
sbb
sbb
ja
push
sub
and
sub
ljmp
in
popf
push
pop
inc
ss
adc
jg
mov
mov
and
stos
icebp
jg
xchg
repz
xorb
add
mov
test
jo
mov
fistps
rcr
lea
ljmp
cmc
imul
xchg
hlt
js
lods
bound
outsl
data16
inc
mov
sbb
loopne
lcall
sub
dec
dec
lea
add
mov
dec
lock
mov
xchg
jecxz
and
xchg
xchg
xor
adc
sbb
cmc
cmpb
decl
and
fisttpll
notl
fsubrs
stos
add
cs
incl
stos
mov
adc
pop
push
shrl
push
or
sbbb
pop
sub
and
call
bound
xchg
jp
sbb
xor
lea
fs
sarl
fstpt
call
icebp
pop
push
mov
pop
push
loope
and
jnp
dec
js
insl
lods
lret
and
sub
loope
mov
lret
pop
rolb
test
and
or
pop
daa
lahf
int
and
inc
add
or
lods
xchg
cmp
outsb
iret
stc
push
cmp
idiv
aam
cmp
jb
mov
mov
adc
filds
dec
push
push
push
mov
push
adc
int
push
fnstcw
repnz
pushl
push
pop
or
cs
or
shl
push
cmp
repz
outsl
pushf
push
cmpsb
insl
adc
pop
jle
lcall
ljmp
and
mov
fisttpl
mov
cmp
jg
fnstcw
or
xchg
pop
cmp
cmp
push
jle
loope
aad
dec
add
std
lcall
sbb
rolb
rcll
pushf
ja
loopne
jecxz
rorb
insb
xchg
mov
pushl
test
sub
sub
rcr
cmp
or
imul
push
adc
mov
shlb
leave
popa
test
push
mov
ficomps
in
movsl
push
push
adc
fldenv
les
mov
lcall
lods
call
dec
fwait
ss
push
add
aam
mov
sbb
pop
cs
mov
xlat
das
lcall
cli
rclb
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
call
inc
dec
insb
xchg
jno
add
xor
bound
inc
and
mov
and
or
incl
xor
sarl
xchg
add
and
in
inc
or
push
call
aad
popa
fwait
lcall
call
out
lock
xchg
mov
stos
popa
mov
dec
lods
sbb
mov
jecxz
mov
dec
loop
aam
push
mov
inc
cmc
decl
lock
mov
cmp
aam
xorl
mov
imul
mov
std
lods
out
mov
mov
push
in
inc
inc
mov
sub
rcl
or
mov
and
aam
dec
sbb
popf
jno
popf
xchg
jb
and
dec
mov
and
jno
sbb
mov
out
inc
outsl
adc
adc
inc
in
sbb
out
decl
cmpsl
adc
push
rorb
testl
inc
xor
dec
inc
fsubs
add
test
incl
cmovbe
mov
mov
jne
ss
stos
sub
ljmp
incl
movsb
jl
xchg
pop
inc
gs
push
iret
cld
xor
add
sahf
adc
movsl
xchg
in
jg
icebp
adc
push
fwait
inc
scas
adc
add
lahf
clc
cld
cmc
test
fcomip
adc
adc
test
mov
dec
je
ret
inc
das
add
sti
rclb
pushl
std
decl
enter
xor
jp
mov
es
stc
mov
mov
call
inc
lret
bound
add
dec
jno
lret
push
jp
sahf
aas
pop
push
dec
out
sahf
in
sbb
sbb
dec
jp
inc
ficomps
add
sub
jmp
push
xchg
push
stos
movsl
add
in
lret
lea
inc
mov
inc
xor
pop
ret
in
push
cld
mov
or
std
ret
mov
scas
xor
sti
mov
inc
jmp
sbb
and
xorl
and
das
out
jle
adc
jle
pushl
ljmp
jg
adc
pop
popa
cmp
mov
jmp
inc
in
or
fs
mov
adc
xor
in
enter
jg
inc
mov
mov
sbb
adc
adc
sbb
xchg
or
ds
jnp
adcb
je
icebp
dec
data16
sub
lret
idiv
test
jmp
repnz
bound
or
xchg
sbb
lret
out
cmp
in
shll
jne
ret
incl
jno
push
xchg
arpl
jg
sbb
push
adc
mov
stos
and
out
ljmp
sub
sbb
repz
pop
int3
ss
or
add
mov
push
push
shrb
mov
lret
and
jne
push
stos
leave
cld
inc
in
push
add
clc
stos
or
call
sbb
ds
fcomps
negl
xlat
lahf
leave
inc
insb
out
xorb
stos
mov
mov
rcl
test
xor
sub
dec
call
fimull
inc
jl,pt
mov
mov
insl
push
aaa
les
ret
push
sub
lock
decl
push
push
dec
jge
adc
xchg
fildll
push
lcall
jmp
add
ret
and
push
mov
jg
adc
shl
pop
test
mov
enter
xchg
sbb
frstor
jo
or
add
jp
fcos
lcall
mov
pop
mov
test
mov
clc
cmp
jns
lea
fisttpl
aas
popf
xor
jecxz
incl
scas
pop
fldenv
bswap
hlt
sbb
sub
mov
xchg
and
pushl
test
pop
adcl
sbb
xchg
aaa
std
jmp
insb
fisubs
ja
sbbb
and
daa
jne
leave
ss
shr
in
stos
decl
fcmovne
pop
jecxz
or
sub
add
in
filds
mov
mov
pop
push
js
mov
rorb
inc
mov
mov
incl
hlt
cltd
in
add
jns
sub
and
jo
inc
adc
incl
sbb
lcall
int3
cmp
jl
das
clc
call
sbb
rclb
or
sbb
jb
hlt
call
jne
jo
popf
test
mov
dec
sti
insl
sbb
jg
push
and
imul
jp
jno
cmp
testl
ljmp
enter
or
test
test
pushl
incb
pop
mov
out
clc
add
ficoml
rol
or
outsb
stc
stc
imull
aas
fs
pushl
jno
mov
shrl
aaa
repz
mov
out
jb
jg
outsb
or
mov
lahf
xor
lods
test
inc
rclb
push
lret
jmp
mov
mov
or
clc
inc
mov
push
push
dec
incl
xor
pop
cmp
and
lcall
push
stos
or
mov
xor
cmpsb
mov
sti
sub
push
dec
cmp
ja
fstp
cmp
jg
movsb
xlat
stos
fbstp
fidivrl
jne
inc
cli
jl
cmp
adc
push
add
push
cwtl
sti
pop
cld
mov
and
sbb
dec
cmp
mov
aaa
push
push
call
adc
pop
stos
cli
aad
shlb
repnz
push
movsb
incl
sbb
addr16
movsb
sbb
imul
stc
cmp
cmp
dec
xchg
jne
enter
lahf
dec
dec
lods
mov
stc
add
stc
sub
xor
lods
lcall
push
cmpsb
dec
xchg
int3
sbb
sub
pop
subl
incl
outsb
sub
cmpsb
jg
push
add
inc
sub
sub
cmp
out
adc
sti
mov
addb
sub
mov
mov
jp
or
mov
jno
adc
lcall
bound
dec
adc
ret
lea
in
push
sbb
xchg
test
aas
rorl
dec
pusha
stc
test
loope
leave
jg
scas
mov
pop
outsl
cltd
dec
add
mov
decl
gs
dec
pop
mov
cli
dec
mov
out
idivb
or
cmp
mov
jbe
movsb
push
test
ljmp
jno
and
clc
mov
enter
pop
mov
arpl
push
sbb
mov
add
jae
in
ljmp
lret
jecxz
or
repnz
korw
xor
jns
nop
dec
mov
test
xchg
pushl
daa
outsl
data16
cmpsl
flds
imul
sub
push
daa
fsts
jl
mov
cmpl
jmp
adc
or
leave
fwait
sub
jmpw
or
sub
fisttps
shll
cmp
shr
pop
dec
daa
mov
lock
push
cmp
ljmp
call
lea
es
inc
adc
outsl
std
enter
and
mov
dec
push
cld
ljmp
andb
cwtl
jmp
xchg
or
mov
jbe
dec
ljmp
test
cmp
enter
clc
mov
dec
pop
adc
mov
and
sub
inc
call
dec
arpl
pop
push
or
mov
push
cmovg
aam
daa
xor
stc
xor
jge
ljmp
mov
mov
and
adc
addr16
fsubrl
mov
cmp
adc
out
and
jne
xchg
pop
inc
jle
jmp
mov
cltd
loop
sti
add
mov
lret
xor
push
jnp
test
and
push
sarl
fildll
mov
pop
jns
jp
clc
jecxz
sar
push
fs
loopne
sbb
and
push
inc
mov
incl
cld
mov
pop
inc
pop
xchg
loope
sti
daa
jge
cli
icebp
aad
das
jnp
dec
lcall
loopne
mov
mov
int3
or
pusha
jno
iret
push
mov
adc
in
out
mov
ljmp
std
jbe
sbb
ret
inc
sbb
inc
mov
cmp
imul
test
cmp
jg
fstps
fs
ja
rol
aas
dec
push
std
call
pop
je
add
lock
cmp
pop
aas
into
pop
add
cmpsb
lahf
loope
jns
sub
mov
cvtdq2ps
decl
fisubs
clc
mov
push
push
adc
pushf
sbb
inc
data16
dec
xor
or
lcall
insl
jle
mov
jmp
fcomip
fildll
bound
sub
or
roll
fstps
pop
cmc
arpl
addr16
out
sbb
jo
loop
xchg
stos
subl
pop
mov
adc
mov
enter
adcl
add
rcrb
pop
cmp
cmp
ja
inc
sbb
dec
xor
dec
sbb
lcall
test
pushl
ja
mov
pop
inc
fidivrl
push
mov
xor
orb
sbb
or
jg
clc
jmp
xchg
inc
dec
iret
mov
push
xchg
cmpsl
pop
test
jecxz
mov
ljmp
mov
fdiv
push
jb
inc
clc
mov
lahf
ds
add
fisubrs
cli
in
or
fiadds
imul
cmp
jbe
int3
daa
mov
mov
add
lea
pop
in
insl
incl
or
insl
xrelease
add
into
rcrb
fwait
bound
nop
cmp
pop
ljmp
pop
dec
and
mov
push
testb
invd
push
pop
aam
pop
pop
adc
add
lahf
xorb
incl
xchg
sub
js
jmp
xor
mov
pop
cmc
pop
enter
int
arpl
movsb
sub
fimuls
out
adc
daa
aaa
jmp
push
les
or
jl
cmpsl
mov
jae
or
sahf
test
inc
call
or
sub
loop
pop
mov
inc
lret
dec
xchg
ss
adc
lcall
push
jecxz
xor
popf
xlat
or
sahf
push
jne
lds
addr16
xor
jo
insb
divl
xor
pop
loopne
enter
and
icebp
mov
cmpl
lret
push
call
insl
lds
movsl
shl
ljmp
xor
scas
inc
pop
mov
lcall
mov
mov
xchg
stos
cmp
sub
mov
adc
jmp
incl
repnz
sbb
mov
mov
imull
cs
dec
shll
lret
sub
jp
jmp
dec
fcoml
lea
movsb
les
add
test
sbb
rolb
add
jnp
das
mov
push
inc
and
jg
inc
add
mov
mov
jg
pushf
jmp
bound
movsb
sub
loopne
fwait
sbb
mov
jb
test
hlt
subb
out
xor
enter
mov
lcall
inc
xor
test
add
xor
jmp
mov
jecxz
dec
dec
pop
in
lock
in
filds
int3
push
jg
add
incl
dec
add
xor
in
adc
insb
popa
insb
test
addr16
stos
jmp
jmp
pop
pop
xlat
adc
jg
dec
lods
loope
and
mov
getsec
pushw
mov
call
dec
inc
lods
dec
push
dec
pushl
rcrb
scas
push
push
std
jge
push
movsb
jmp
and
mov
lock
call
aas
or
sub
push
adc
mov
jo
std
call
lods
jae
push
xor
mov
outsl
inc
popa
popa
add
sbb
mov
pop
fimull
xchg
negb
in
enter
push
mov
test
push
dec
sar
decl
movsb
dec
inc
dec
ljmp
faddl
out
push
add
mov
divl
lcall
outsl
decl
dec
push
push
adc
fsubrs
out
add
incl
stc
notb
lods
dec
loop
les
cmp
sub
sbb
jno
jl
lcall
je
jg
push
icebp
cmp
cld
addl
add
inc
inc
sbb
adc
sti
cld
pop
out
add
lock
ja
sarl
lock
ljmp
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
movsl
inc
mov
in
cmp
insb
loopne
push
bound
jne
stc
fldcw
les
pushl
cld
fdivs
push
inc
xor
dec
addr16
push
xor
stos
shlb
adc
add
lds
lods
decl
pop
push
ret
or
pop
dec
add
aas
sbb
cs
into
xchg
lcall
mov
sbb
in
mov
xor
mov
scas
inc
popa
and
mov
lcall
inc
jge
cmc
sub
sbb
lods
ds
fisubl
adc
jb
in
cmp
push
mov
fs
jbe
push
nop
xor
adc
jmp
pop
sahf
cld
shll
lds
mov
xor
xlat
jae
lahf
and
clc
incl
movsl
repnz
leave
dec
movsl
xchg
call
imul
push
pushl
mov
stc
mov
mov
mov
pushl
sub
xchg
cmp
sbb
imul
idivl
dec
imul
call
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
mov
ds
ret
lods
adc
cmp
push
sub
sbb
mov
addl
mov
fisttps
pop
mov
cmp
cs
insl
mov
iret
sti
jg
pop
loope
mov
ljmp
bound
cs
stos
push
mov
dec
jg
incl
mov
xor
mov
mov
or
incl
mov
roll
pop
sbb
popa
fwait
xchg
mov
dec
inc
leave
fxch
jle
bnd
ss
decb
mov
cwtl
dec
sbb
add
adc
ret
cmp
in
dec
aaa
aaa
push
add
jmp
xor
mov
sti
inc
inc
repz
sub
cltd
jmp
cmpsb
push
push
fmull
mov
pop
mov
lods
ja
jne
and
dec
mov
pusha
inc
adc
inc
cmp
pop
push
iret
mov
adc
rclb
data16
daa
into
dec
sbb
cs
cmp
ret
mov
xlat
jle
nop
fisubrl
xor
lahf
mov
aaa
cmpb
ljmp
or
add
icebp
dec
push
ja
insl
inc
lret
lret
sbb
ret
sarl
or
daa
cmpsb
and
push
inc
cmc
jmp
cwtl
inc
xchg
out
mov
je
loop
xchg
cmp
fisubrl
pushl
das
and
test
mov
push
gs
jge
mov
and
jmp
mov
pop
andl
decl
and
arpl
testl
or
push
in
xchg
sub
les
add
sbb
fisubl
jle
add
mov
out
add
out
movsb
imul
and
xor
push
lods
adc
xor
push
mov
cld
subb
xchg
outsl
jae
cmc
leave
test
int3
add
push
outsb
ret
sbb
xchg
ds
ja
data16
sbb
or
bound
add
ljmp
cltd
dec
cmp
clc
and
pushf
popa
in
ljmp
imul
addr16
mov
mov
lcall
shlb
cld
dec
cs
jp
in
test
clc
and
cmc
cmovl
sub
inc
jb
pop
push
in
jl
mov
jb
pusha
or
out
xor
pushf
pop
adc
add
push
cld
fwait
test
sbb
test
or
incl
cltd
push
xchg
add
add
sub
cmpsb
leave
and
mov
loopne
jmp
fs
clc
dec
js
jge
adc
test
lcall
and
add
scas
add
jns
pop
mov
and
call
push
cmp
fs
outsl
mov
hlt
inc
add
ljmp
jmp
push
dec
bound
sbb
or
lea
iretw
adc
mov
imul
in
int3
mov
and
mov
in
jbe
pop
xor
aam
xchg
mov
xchg
loope
rcl
jmp
es
pop
fidivrl
push
pop
push
pusha
inc
push
xchg
icebp
jne
adc
lret
add
xor
mov
cmpsb
cmp
std
push
lcall
or
outsb
jne
in
jge
jg
pushl
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
and
std
decl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
jnp
dec
int3
push
ss
push
std
pushl
or
add
pop
push
sub
jecxz
loop
mov
jecxz
stos
or
cli
stc
fs
jmp
out
push
ss
adc
movsl
data16
push
jns
jae
and
jbe
sub
mov
fwait
cmp
mov
or
add
call
xchg
ja
aaa
shrl
movhps
jne
add
cld
insb
add
sbb
jl
sub
ds
aaa
mov
jns
xlat
aam
add
mov
movsl
cmpsb
into
sar
jb
ja
or
push
lret
xlat
std
mov
sbb
outsb
inc
sbb
call
add
jmp
int
rcll
pop
fsubr
pop
cmp
cmpb
inc
cmp
fildl
dec
adc
sub
or
mov
lods
insb
incl
dec
or
inc
dec
lea
jg
repnz
xor
fcomip
ljmp
out
jne
xor
test
loope
fucom
and
incl
movsl
mov
int3
pop
sbb
adc
dec
jae
push
mov
das
sar
jb
or
les
dec
ds
cmp
icebp
jmp
lods
push
aaa
out
outsb
sub
scas
ret
mov
push
std
or
inc
or
jg
adc
pop
dec
in
inc
shll
add
data16
mov
std
cmpsb
and
clc
adc
xor
out
adc
lahf
xlat
or
pop
subl
jno
idivb
pop
int
cmp
mov
push
sub
icebp
sbb
incl
cmp
push
cmpsl
mov
xchg
push
inc
adc
mov
xor
data16
call
test
add
sub
mov
lcall
sbb
adc
cmc
fnstsw
fidivrs
jns
bsf
cmp
xor
ljmp
in
adc
loopne
loope
outsb
xor
rorl
sub
scas
xchg
or
cmpsl
pushf
call
or
mov
inc
or
mov
pop
dec
mov
jge
fists
lahf
decl
arpl
test
je
popa
cmp
sbb
xchg
xor
mov
push
out
decl
aad
mov
aad
icebp
inc
call
bound
cmp
sbb
in
shl
in
pop
andl
daa
mov
lcall
int
fists
imul
in
mov
cs
fxch
pop
push
mov
decl
xchg
sub
vcvttps2dq
outsb
mov
pop
add
icebp
hlt
or
je
mov
mov
jmp
xchg
dec
lea
fimull
subb
mov
jae
jge
incl
sti
out
sub
jo
aas
clc
cmp
test
adc
and
mov
jg
adc
out
mov
mov
test
xchg
dec
and
mov
dec
loopne
push
lcall
test
jmp
mov
ja
in
jb
add
outsl
gs
jp
or
es
jmp
jmp
loopne
ss
xor
cmp
mov
jl
jg
jp
lods
or
mov
pop
xchg
push
fs
jle
mov
sub
fbld
rcl
push
push
ljmp
cld
adc
loop
test
ret
stc
sbb
rcl
cmp
and
movsb
loop
incl
add
xchg
fdivs
sbb
fdivrp
dec
mov
or
dec
push
bound
inc
xchg
jecxz
add
leave
orb
dec
decl
inc
xchg
sbb
inc
inc
stos
lods
xor
pusha
je
dec
in
in
es
pop
jb
sbb
test
imul
lcall
leave
jae
sbb
das
sub
vmread
sbb
das
add
decl
pop
addr16
mov
pop
cli
jp
sbb
imul
mov
shlb
ljmp
cmp
xor
mov
fisubs
imull
je
test
outsb
sbb
je
fmul
hlt
push
pop
add
pop
xor
int3
fs
mov
mov
loopne
and
lds
mov
mov
jbe
subb
push
lcall
mov
dec
daa
lock
sub
lea
push
or
dec
aad
mov
into
hlt
in
negb
cmp
shlb
sahf
cs
lods
adc
outsb
or
enter
jg
mov
push
rorl
movsb
call
scas
pop
clc
pop
sub
ret
in
cmp
push
and
or
scas
aam
shll
ret
stc
es
mov
push
mov
pushl
dec
mov
cmc
ret
xchg
push
lret
bound
sbb
rcr
jg
into
jg
fstps
fdivrs
call
jne
dec
outsb
cld
push
imul
test
add
mov
sub
jg
pushl
xor
inc
jle
adc
mov
cmp
lret
pusha
mov
jg
insl
mov
inc
lds
fstpt
push
mov
fstpt
jg
cmp
mov
xchg
or
cld
cmp
and
fisubl
push
inc
call
insb
mov
incl
call
sar
cmc
pop
and
cmpsb
movb
adc
inc
push
nop
scas
sub
cli
movsl
xor
in
int
mov
idivb
insb
lcall
call
xchg
mov
jae
jb
jne
push
push
cmc
mov
xchg
mov
xchg
pop
rep
inc
aaa
cld
call
inc
out
cmp
scas
jo
xchg
fstp
or
lods
stc
push
push
stos
xlat
test
incl
pop
mov
lds
cmp
jmp
fwait
sub
in
imul
lock
push
sub
sub
iret
mov
mov
aam
push
dec
pop
movsb
dec
mov
outsl
xor
leave
add
notl
push
je
fsub
pop
pop
decl
lahf
push
pop
test
lods
mov
ret
lds
fimuls
aas
orb
fcomip
sbb
jg
call
add
or
and
xchg
cmc
aam
sarb
dec
cmc
sub
scas
cli
jns
pop
mov
insb
and
adc
pop
cmp
and
mov
or
jmp
inc
aad
jbe
and
xchg
scas
sahf
adc
lock
das
cli
and
dec
mov
sbb
movsl
lock
dec
cld
ds
adc
sbb
pushf
stc
aaa
test
call
cld
mov
dec
pop
cmp
lods
inc
into
into
sbb
loop
jmp
adc
push
inc
insl
imul
dec
lret
adc
mov
xor
incl
je
scas
in
xchg
xor
out
push
xchg
xchg
arpl
mov
decl
js
sbb
insl
repz
or
push
arpl
cmpsb
fimull
insb
push
ja
arpl
sub
out
cli
call
push
mov
xchg
xor
adc
mov
lock
mov
fnsave
out
rep
mov
daa
or
mov
nop
cmp
in
enter
cld
sbb
sbb
and
pop
jge
dec
pop
rcrb
sbb
scas
imul
subl
lahf
int
lret
cli
call
fdivl
lods
push
enter
popa
std
jle
cmp
pushl
incl
dec
and
sbb
sbb
mov
insb
jne
out
call
mov
xchg
out
cmpsb
cmp
cmp
cmp
sub
clc
sub
mov
stc
in
in
lret
fcoml
imul
fimull
cmpsl
lods
xchg
in
bound
adc
pop
lcall
dec
insl
inc
bound
lahf
mov
sub
inc
aam
daa
jl
popf
adc
decw
inc
repnz
pop
int3
inc
jnp
mov
mov
pop
pop
pop
xchg
cmp
pushl
test
sub
xor
jp
or
rcr
arpl
rcll
push
movsl
test
xlat
jae
xchg
popf
or
lret
mov
jg
outsb
fidivl
inc
sbb
xchg
aad
sub
aam
pop
loopne
sbb
lcall
cmp
mov
bound
ljmp
sub
cmpsl
mov
add
sbb
mov
xchg
mov
or
mov
daa
dec
jp
mov
pushl
pusha
xchg
aaa
pop
in
hlt
add
jg
sub
cmp
dec
dec
mov
push
pop
mov
incl
add
adc
ret
adc
sbb
inc
cmp
out
xor
pop
pushl
sbb
mov
pushf
add
inc
mov
testl
call
pushl
pop
and
add
gs
test
cmp
incl
dec
xchg
fildl
dec
sbb
call
ret
jle
in
scas
xchg
divb
cmpsl
sub
sub
dec
add
xchg
iret
mov
mov
in
fwait
ret
movsl
loop
xorl
loope
mov
adc
xchg
adc
imul
sub
into
mov
pop
cmp
aas
mov
mov
xchg
cmp
adc
push
int3
mov
int
add
mov
fildll
sub
ret
mov
cmpsb
jp
dec
aam
andb
xor
int
pop
pop
and
les
lcall
sub
hlt
xor
cmp
loop
movsb
insl
sub
outsl
aaa
jge
bound
jae
dec
int3
mov
push
add
push
sahf
push
xor
jge
cld
enter
sahf
loope
pshufw
loope
jae
xlat
decl
push
cli
push
clc
ds
sub
sbb
ret
incl
shlb
dec
loope
adc
dec
std
xor
sub
mov
lods
push
pop
push
lods
call
cld
call
cmpsb
daa
hlt
sbb
test
jns
mov
insl
xchg
lahf
sbb
or
xor
jns
int
js
or
dec
shrb
hlt
cld
ljmp
mov
lahf
sub
mov
mov
addr16
pushl
loope
js
jl
xchg
mov
dec
sahf
sahf
xor
sbb
dec
lret
or
inc
push
adc
shrl
jb
fstpl
mov
std
ljmp
clc
lcall
dec
inc
or
adc
movsl
adc
ljmp
inc
mov
js
les
call
dec
jg
pop
jnp
jp
ja
sub
sbb
loop
add
divl
enter
jnp
loopne
xlat
int3
shlb
push
pop
dec
imul
sub
ljmp
mov
arpl
gs
sbb
sbb
mov
jae
add
cmpsl
mov
xor
mov
fadd
pop
or
cmpsb
fcomip
jmp
out
mov
xlat
inc
cmp
mov
push
cs
mov
jbe
jnp
jmpw
andl
mov
add
mov
push
test
cmp
mov
push
pushf
mov
jl
stos
xchg
adc
adc
ljmp
outsb
into
push
sbbb
adc
pusha
lea
inc
xchg
test
sbb
mov
or
mov
fsubrs
sub
jmp
out
in
xchg
push
stc
enter
pop
mov
movsl
cmc
pop
pop
jb
test
add
pop
lret
lods
inc
popf
aam
ljmp
ret
adc
jl
dec
fmull
push
pop
adc
adc
or
sub
mov
ljmp
das
xchg
jp
out
jge
push
fst
sub
push
movsb
aam
jg
push
cmp
repz
sub
jo
xchg
int3
mov
mov
arpl
ljmp
in
xchg
xor
dec
ret
xchg
jns
dec
out
inc
insb
fcmovu
repz
popa
xchg
and
imul
out
xor
test
add
inc
jae
xor
or
lods
cmpsl
adc
xchg
fldcw
xor
nop
xchg
mov
and
loope
jb
flds
and
xor
inc
sbb
cli
fldcw
pop
cmc
xchg
adc
adc
into
in
sub
aaa
or
lock
xor
and
mov
stos
cmp
out
mov
sbb
aad
test
jae
push
cwtl
incl
mov
mov
cmp
notl
sbbb
sbb
or
lock
sti
xlat
sub
rclb
mov
sbb
js
inc
popa
call
sti
mov
repnz
mov
push
mov
xor
leave
nop
shrl
cmp
add
loopne
push
mov
jge
daa
sbb
mov
push
cmpsl
pushf
lock
or
fcomip
call
test
cmp
push
jne
xchg
mov
cmp
ljmp
xlat
fwait
push
insl
nop
fcom
pop
stos
mov
sub
push
cmp
jnp
mov
dec
outsb
popa
ljmp
mov
pop
sbb
xlat
sarb
idivl
nop
mov
test
jno
dec
push
sub
cmp
das
inc
vsqrtpd
out
andl
adc
out
pushl
push
rorb
outsb
inc
inc
xchg
and
lods
xchg
jmp
cs
test
sti
mov
jg
scas
pop
popa
loopne
dec
mov
jp
daa
xlat
add
and
pushf
idiv
incl
dec
add
repnz
inc
sub
push
mov
sub
lcall
cmc
ja
xchg
xor
ljmp
test
mov
jg
insb
jo
in
pop
xor
stc
loope
inc
repnz
pop
mov
incl
enter
sub
lret
shll
aam
xchg
fistpl
popf
les
outsl
lods
xor
sbb
jmp
dec
enter
push
or
xlat
lahf
sub
add
xchg
sbb
shrb
mov
fisttpll
fs
inc
out
ret
and
xor
pop
clc
xor
int3
xchg
mov
sub
rorb
loop
jo
inc
repz
pop
jmp
mov
fcomip
insb
add
push
push
je
xchg
pusha
test
js
add
aad
cmp
incl
hlt
add
jno
imul
cmc
adc
sbb
inc
inc
adc
cmp
scas
decl
inc
mov
int3
outsb
jae
push
fisubs
mov
jae
jle
add
mov
dec
jne
xlat
or
insl
sbbl
repnz
sub
into
sti
mov
cli
inc
pop
repz
cmp
push
icebp
es
cmp
xchg
daa
push
cmp
push
jge
ljmp
mov
mov
xchg
pusha
push
call
testl
or
out
sub
add
cmp
pop
scas
push
loop
data16
and
mov
sbb
clc
push
js
frstpm(287
xor
clc
dec
mov
popf
aas
mov
shlb
jbe
xchg
data16
fwait
jb
mov
mov
jae
ljmp
dec
negl
mov
cwtl
cmpsl
inc
test
dec
adc
ficoms
decl
lock
pushl
pop
popf
cmp
push
ret
lahf
cmc
mov
mov
in
out
in
push
adc
fistl
mov
or
pop
popa
push
mov
sbb
fs
xor
or
fmulp
or
out
jecxz,pn
dec
lock
sub
jl
fcomip
das
clc
xorl
mov
or
add
das
das
ret
fcomip
out
jle
or
in
cmpsl
fwait
mov
jecxz
dec
mov
adc
sbb
jbe
sub
jnp
dec
fisubl
push
xchg
imul
xor
mov
rol
or
push
jae
popf
es
sar
and
sar
incl
aam
adc
push
sub
mov
je
inc
out
push
push
xlat
sti
jl
jg
mov
shll
lock
push
dec
pop
sahf
in
xchg
mov
jbe
or
ljmp
pop
outsl
xchg
ljmp
scas
sub
test
outsl
clc
clc
xchg
sbb
push
jmp
cmp
call
xchg
push
jecxz
dec
xchg
push
ror
and
sub
leave
and
call
jno
sarl
dec
xchg
or
push
sub
sub
lcall
mov
out
sahf
inc
js
and
mov
jbe
shlb
and
jle
shrb
sub
lcall
xor
aad
enter
sbb
je
stc
mov
daa
faddl
aad
fwait
sti
jg
mov
jb
imul
pop
xchg
in
add
mov
push
insb
fcmovu
adc
gs
std
stos
ss
out
and
orb
fwait
sub
jmp
sub
lds
push
mov
add
push
popf
in
mov
cmp
imul
out
test
jg
movsl
out
sbb
push
decl
in
mov
sbb
sub
sub
scas
pushl
add
mov
push
in
and
and
incl
mov
call
and
mov
orl
push
fwait
iret
dec
ljmp
push
add
iret
cli
call
push
dec
jnp
inc
popa
ja,pn
in
xor
or
mov
cmp
cltd
mov
push
nop
mov
adc
sar
call
insb
mov
mov
data16
and
fnstcw
push
fldenv
jmp
jg
test
or
xchg
inc
jne
pushf
enter
mulb
jne
lcall
push
add
xor
sub
mov
sub
cmc
sbb
movsb
cli
fidivl
jbe
pop
jnp
xor
out
add
pop
sbb
sbb
test
fnsave
inc
push
hlt
mov
in
fcomip
ljmp
pop
xor
pop
subb
mov
adc
pusha
sbb
incl
rep
dec
outsb
mov
rol
push
lcall
dec
lea
push
cmpsb
aas
lcall
in
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
ret
add
inc
arpl
ficompl
xchg
ja
aad
ljmp
lock
inc
pop
std
inc
sbbl
or
lods
cmpsl
std
ljmp
pop
aam
adc
jge
jne
mov
fwait
dec
loop
shl
cwtl
cld
pop
loopne
and
push
loope
cmp
lods
push
in
scas
out
xor
cld
call
and
xchg
xchg
daa
pop
popf
inc
arpl
inc
cmp
call
pushl
outsb
movsl
xor
mov
or
int
mov
sahf
fst
jle
js
pushl
dec
or
dec
inc
sub
sub
jb
nop
dec
mov
cli
sbb
or
call
popa
push
mov
push
sbbb
shr
add
xchg
out
xor
sbb
nop
jnp
mov
lcall
sub
nop
push
cld
cmpsb
cltd
test
push
in
mov
jl
fcoms
pop
insl
push
jecxz
mov
fisubl
ljmp
aam
lea
mov
fldenv
fistl
push
push
lret
imul
lcall
out
js
fiadds
sarb
cmp
mov
not
mov
fistl
repz
sahf
mov
jo
mov
imul
mov
xor
xchg
inc
mov
jae
jae
ljmp
clc
call
jbe
xor
add
outsl
xor
loop
sub
pop
inc
loop
mov
sbb
je
sbb
cmp
and
popf
imul
mov
cwtl
cmp
push
pusha
jp
rclb
outsl
adc
lds
fsubr
sbb
sub
ret
sbb
sti
incl
and
xchg
cmp
push
lods
mov
cmpsb
outsb
fidivrs
mov
push
xchg
cli
jmp
sbb
xchg
sub
shrl
in
add
bnd
add
jne
push
pushl
insl
lcall
int
in
repnz
add
dec
mov
push
push
jno
pushl
rclb
mov
sbb
pop
jle
mov
incb
test
icebp
sbb
jmp
rolb
outsb
ss
pop
gs
ja
sub
in
mov
sbb
cli
jmp
cli
pusha
or
repnz
xchg
push
call
adc
cmpsb
mov
rolb
sbb
sahf
mov
incl
icebp
cmpl
mov
int
fisttpll
cbtw
cmp
xor
sbb
pop
jmp
add
popf
lock
sub
sbb
inc
fcompl
xchg
cmpsl
imul
movsb
idiv
mov
lret
int3
jb
and
add
out
addb
nop
xchg
push
sarb
jg
xchg
inc
movsl
roll
inc
jmp
cmpsl
jl
aad
or
sub
and
add
fs
pusha
decl
jb
pop
shlb
push
or
in
xchg
sub
loope
mov
jmp
das
jne
mov
rcll
jno
fwait
pop
add
dec
or
loopne
call
mov
pushl
mov
sahf
es
sar
inc
cmpsl
xor
xor
pop
mov
adc
or
ljmp
push
sub
sbb
repz
jmp
mov
outsb
fmuls
add
push
inc
int3
sbb
and
ljmp
call
and
mov
testl
fs
incb
mov
lret
call
aas
addr16
mov
cli
fnstenv
popf
inc
add
mov
mov
fisttps
movsl
cmp
push
nop
sub
adc
mov
loop
xor
scas
push
ljmp
shr
jb
push
push
clc
lcall
mov
out
mov
pusha
out
mov
popf
and
ljmp
jbe
leave
clc
push
xor
insb
jnp
stos
mov
pop
nop
int3
or
push
shr
mov
sahf
jnp
pop
cltd
ret
rcr
gs
inc
dec
sbb
jmp
mov
dec
push
test
call
inc
pop
jbe
mov
loop
test
in
movsb
pop
fmull
hlt
or
mov
ljmp
xchg
in
inc
int
jns
loope
cmp
call
xchg
add
jp
fwait
pop
addr16
in
jmp
pop
cwtl
subb
movsl
pushf
mov
xlat
cmp
rclb
xor
jae
clc
mov
jg
or
in
xchg
sbb
cmpsb
adc
mov
sbb
jg
and
xor
ljmp
rcrb
repz
jmp
jg
data16
gs
mov
out
lods
add
push
orl
mov
imul
add
push
test
aad
push
and
sarb
cmc
or
sar
lcall
inc
bound
mov
sub
push
pop
cwtl
add
dec
cmp
popf
out
adc
aaa
iret
xchg
in
jle
loop
movsb
ds
mov
pop
sub
pop
clc
lcall
stos
pop
out
les
insb
or
fisubl
out
sbbb
out
lret
cmp
lock
test
pop
sub
mov
xchg
and
call
div
dec
cmp
cmp
test
call
inc
mov
mov
dec
js
stc
inc
out
test
mov
rcll
pop
or
cmp
mov
repz
sarl
in
mov
cmp
inc
push
stos
mov
call
lahf
sahf
push
jnp
cmc
mov
sahf
stos
mov
hlt
mov
sbb
push
clc
jmp
loopne
out
sbb
mov
test
ljmp
das
cli
and
cwtl
ficoms
fnstsw
push
dec
out
and
cmpsl
cmp
add
loope
mov
divl
call
jo
ror
les
inc
cmp
lock
xor
jne
mov
popf
test
mov
mov
sbb
or
clc
idivl
pop
leave
push
and
sbb
push
dec
push
fdivl
mov
inc
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
aas
insl
test
cmpsl
mov
add
rorb
incl
add
shr
pop
inc
clc
and
add
sbb
jnp
popa
sub
incl
pop
scas
in
movsl
jl
cwtl
adc
or
std
bndstx
jmp
sar
decl
push
cld
add
or
and
jbe
push
push
cmp
sbb
insb
inc
das
daa
icebp
adc
decl
push
pop
insb
sub
lret
ljmp
mov
dec
cs
pop
sbb
clc
filds
sti
cltd
aaa
leave
xchg
cmpsb
mov
dec
addr16
insl
xor
dec
mov
test
jmp
fcomps
sub
and
jnp
mov
or
xor
cmp
aad
pushl
push
mov
fwait
outsb
adc
or
xor
push
sub
xor
jle
out
lcall
lods
and
jo
hlt
movsl
aad
fildl
add
pusha
cli
jecxz
add
pop
pusha
sub
mov
scas
insl
out
jmp
fcomp
out
lock
push
add
nop
mov
add
pop
pop
xchg
fstpt
mov
ja
repz
lds
gs
mov
pop
inc
addb
aad
call
mov
xchg
fistl
xor
add
mov
or
decl
sub
stos
jg
mov
lret
jp
dec
mov
stos
pop
pop
ret
sub
pushl
test
push
gs
popa
and
mov
and
pop
jnp
pushf
jge
inc
or
dec
adc
mov
fadds
ss
movlhps
into
ljmp
mov
nop
cmp
mov
mov
shl
jbe
sbb
mov
shrl
pop
mov
cwtl
pusha
stos
imul
mov
imul
and
lcall
inc
xchg
lahf
jo
jns
pop
lret
gs
xchg
inc
int
mov
sub
sub
call
cld
popf
dec
adcl
mov
dec
inc
leave
lea
jbe
sbb
fs
sar
cmp
push
cs
mov
addr16
xor
push
popf
lock
jnp
dec
pop
inc
adc
push
stos
lds
test
or
mov
stos
add
pop
push
in
test
rcrl
jecxz
dec
inc
addl
cmp
xor
and
cmp
imul
das
or
gs
mov
rcrl
or
inc
jmp
add
icebp
loope
jmp
int
addr16
push
incb
lcall
enter
imul
sbb
js
std
ret
mov
xor
sti
into
loop
outsb
pop
xchg
inc
es
dec
stos
pop
into
das
fisubl
push
nop
push
pop
ret
or
xor
in
mov
or
xchg
stos
dec
int
inc
adc
leave
cmpsb
cmc
fnsave
fildll
loop
icebp
jl
shll
adc
sub
xchg
pop
sub
decl
mov
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
ljmp
dec
or
sub
jmp
adc
lcall
jmp
aas
mov
jl
cmp
pop
sbb
cmp
dec
xchg
mov
sbb
xor
mov
jne
adc
add
repz
js
lcall
in
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
out
cmp
jmp
divb
addr16
filds
cwtl
bound
mov
push
dec
nop
xchg
ljmp
rclb
xor
sub
bound
cmp
loopne
pushl
sbb
fcom
call
dec
push
clc
ljmp
cld
xchg
jo
push
mov
mov
xchg
jge
call
or
and
dec
out
dec
push
sub
mov
xchg
notl
es
scas
xlat
test
mov
lcall
mov
jl
jnp
push
ljmp
pop
pop
lods
call
push
xchg
cmpsb
pushl
std
xor
push
inc
mov
enter
sub
sbb
dec
loopne
ljmp
test
cmp
and
push
inc
repnz
dec
and
xchg
fcomip
pop
inc
jbe
lock
jmp
add
aas
shrd
out
into
outsb
pop
inc
push
int
stos
loop
jg
cwtl
xor
jno
out
test
int
nop
pop
ljmp
decl
out
adc
cwtl
repnz
push
fisubrl
js
pop
out
ljmp
lret
js
cmp
sub
fwait
enter
mull
les
hlt
jg
fcmove
mov
pop
mov
out
daa
into
add
xlat
lods
lcall
aaa
dec
push
inc
inc
mov
jns
mov
mov
loop
push
imul
loopne
dec
mov
jmp
pushl
adc
in
cwtl
pop
test
mov
aaa
ret
mov
cmp
push
mov
ljmp
xchg
jb
sub
sub
jge
lea
lds
cs
pop
decl
aas
pop
sub
fwait
cmp
pop
xchg
xor
pushf
repz
xlat
mov
inc
lcall
jns
jnp
lahf
pop
or
sub
loop
pinsrw
lret
fdivl
out
cld
mov
sahf
pop
insb
jno
movsb
lods
sbb
ror
sbb
dec
lahf
jmp
mov
nop
mov
add
push
push
xor
fcmove
lcall
dec
insb
outsl
ret
imul
aad
sub
mov
xchg
les
or
movsb
in
lcall
cmc
mov
push
and
add
scas
scas
adc
push
inc
cmp
and
xchg
dec
popa
push
int3
nop
push
add
sbbl
xor
clc
push
fcomip
cmc
mov
push
subb
xchg
imul
or
lods
pop
bound
rol
xchg
cmc
ljmp
cli
in
push
in
test
cld
stc
jp
stos
icebp
mov
das
xor
incl
lods
jnp
jbe
fldcw
iret
loopne
jo
push
popf
sub
or
inc
aaa
clc
cmpsl
aaa
icebp
lcall
cwtl
insb
ret
subl
fucomip
sub
mov
dec
rcl
nop
loop
sti
push
pushf
mov
add
adc
or
call
push
and
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jecxz
loope
cmpsl
push
push
jmp
aaa
cld
cmp
jecxz
imul
jmp
xchg
scas
ss
push
int3
and
incl
dec
mov
xlat
repnz
cltd
sub
dec
sub
and
addr16
push
decl
xor
cmp
sahf
or
daa
fnstcw
xchg
mov
lret
add
stos
bound
test
movsb
push
rcr
int
adcl
push
jne
int3
outsb
jp
xchg
pop
mov
into
sbb
xor
lcall
popa
xlat
outsb
pop
push
dec
sbb
add
push
je
and
fwait
mov
call
shrb
sub
cs
mov
out
jae
adc
dec
or
sbb
jno
cmp
mov
je
cmp
lcall
jl
mov
mov
jl
push
mov
and
cmpsl
sub
jns
mov
lea
movsl
std
lcall
sbb
pop
and
sahf
push
inc
insl
add
sbb
jnp
dec
mov
adc
mov
in
lcall
push
xor
jmp
cmp
aaa
std
and
movsb
add
pusha
andb
inc
xor
loope
add
ljmp
dec
jg
jp
enter
or
mov
outsb
jmp
movsl
jne
dec
scas
jns
shll
bound
xor
pop
das
jae
cli
ds
call
mov
mov
sbb
sub
pop
xor
jae
and
incl
dec
pusha
dec
jmp
out
inc
jle
sub
ss
sub
cmpsl
lock
pop
out
jns
cmp
lcall
in
push
xchg
mov
jge
lretw
mov
mov
movsl
mov
ljmp
or
insl
shll
pop
shr
push
sub
pushl
pop
dec
daa
ja
mov
mov
add
pop
mov
icebp
jg
aas
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
int
or
lcall
es
call
jo
dec
int
js
sub
sti
cmc
fwait
adc
push
cmp
lcall
lcall
fwait
sbb
adc
mov
pop
pop
add
add
lock
std
incl
unpckhps
cmc
roll
inc
xchg
cwtl
orb
adc
call
sbb
pop
bound
les
and
int
push
insl
pop
test
inc
fldt
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
icebp
loop
mov
out
push
aaa
call
aaa
mov
stos
pop
and
shrb
sarb
out
mov
lcall
dec
dec
lock
cmp
in
iret
xchg
adc
xchg
cmp
pop
jne
das
cwtl
imul
xor
add
push
adc
inc
js
xor
pushf
adc
call
xchg
mov
xlat
xorb
xlat
mov
mov
decl
xchg
loop
push
jg
add
jge
mov
rorl
jmp
cltd
mov
cmp
pop
mov
repnz
js
pushl
and
mov
rorb
xchg
mov
arpl
mov
loopne
inc
lods
scas
pop
jb
pop
xchg
stc
push
jle
xchg
inc
test
mov
jbe
out
mov
pop
jno
dec
sbb
rolb
push
lahf
xchg
add
push
hlt
lcall
pop
fs
lret
cmp
push
jl
mov
fwait
add
jns
test
or
std
ret
inc
andl
clc
dec
ret
adc
shrb
inc
adc
mov
ljmp
shr
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
fstpl
sbb
call
sub
dec
ljmp
sub
sbb
xchg
test
xorb
and
inc
mov
sbb
sub
test
inc
and
pop
mov
lcall
insl
pusha
push
popa
test
cltd
insl
pop
push
mov
xchg
push
test
pop
fdivr
cs
mov
clc
push
inc
sbbl
fnsave
dec
gs
shll
mov
adc
pop
pop
mov
push
or
dec
mov
icebp
call
clc
ds
mov
or
pop
imul
cmp
xchg
movsb
mov
push
sbb
sbb
mov
ljmp
push
mov
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
int3
xchg
aaa
mov
std
jl
or
aaa
lret
std
and
inc
cmp
ss
mull
push
ret
sbb
jle
movnti
pop
mov
jle
sti
cwtl
stos
into
add
cmp
decl
imul
or
jge
sbb
mov
mov
incl
arpl
push
push
adc
ds
sub
cmp
out
push
pop
gs
pushl
fcmovne
mov
cld
xor
mov
adc
mov
dec
pop
or
pop
xlat
jnp
imul
decl
add
imul
jnp
adc
pop
dec
in
ret
mov
jg
or
fisubrs
or
mov
mov
jnp
jne
cli
div
or
es
enter
mov
loopne
xlat
adc
mov
ror
aas
cmp
shll
jg
int3
pop
insb
push
inc
negb
dec
std
les
je
cli
ror
out
std
ljmp
nop
dec
sbb
push
outsl
xor
je
adc
mov
adc
lret
jle
push
jae
xchg
or
sub
pop
mov
clc
mov
dec
sahf
cmp
repnz
imul
lock
sar
push
or
sub
lahf
sub
mov
mov
jmp
outsl
test
fs
in
push
incb
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
decl
jge
mov
xor
xchg
push
lods
aaa
je
clc
js
mov
les
and
inc
sar
call
xor
xchg
xchg
lock
jbe
xchg
lods
test
or
sub
mov
ljmp
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
cmp
mov
inc
dec
movsb
out
xchg
dec
jg
push
es
cs
push
pop
and
jg
icebp
int
dec
hlt
jbe
fldl
mov
push
outsl
dec
movsb
in
imul
sbb
gs
decl
xor
mov
sbb
or
sbbb
dec
dec
xchg
xchg
cmp
lcall
jl
xchg
add
add
cli
sbb
enter
xchg
pop
js
inc
xor
aam
and
cli
imul
in
fistpl
jmp
jae
push
mov
fiadds
sbb
mov
fmulp
shl
call
fldenv
jecxz
push
jle
fnstcw
mov
jge
mov
incl
imul
gs
inc
movsl
scas
pushl
sub
dec
insl
or
ljmp
inc
jne
mov
in
mov
xor
dec
push
loopne
addl
sub
lcall
decl
sbb
popf
push
je
popa
or
enter
push
into
into
dec
and
leave
pop
xchg
push
sbb
mov
mov
sarb
daa
daa
jg
lcall
scas
push
sub
adc
mul
test
testl
rcrb
ljmp
int3
mov
or
cs
and
call
dec
shl
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
mov
popa
lret
rcrl
pushl
lods
pop
sub
adc
push
cmp
repnz
lcall
das
into
inc
jmp
mov
jl
jge
fwait
dec
dec
insb
xor
loop
inc
hlt
loopne
lret
mov
and
add
mov
xchg
pop
mov
test
shll
inc
adc
mov
xchg
add
ljmp
cli
lcall
fwait
inc
outsl
movsb
pusha
cmp
or
or
icebp
call
ljmp
xchg
and
xchg
out
sub
fidivrs
sbb
dec
mov
outsb
test
icebp
fadd
js
and
movsb
and
jle
dec
imul
mov
shl
in
sub
repz
cld
dec
call
jne
lret
jo
pop
inc
or
movsl
adc
mov
sub
or
sahf
incl
daa
in
repnz
clc
inc
cmp
cmp
dec
aaa
jl
roll
cmp
pop
data16
jg
push
pusha
inc
mov
rolb
cwtl
daa
xor
lret
cmp
jmp
jmp
xchg
add
jge
call
fs
push
push
cmp
int
cmpl
or
popa
data16
inc
xor
fldt
dec
fwait
pop
sub
incl
push
cmp
sarb
mov
adc
xor
nop
and
enter
cs
repnz
iret
mov
dec
lcall
mov
cmpsb
jb
xchg
sub
pop
add
inc
inc
dec
or
dec
iret
aaa
push
orl
and
aas
cltd
cltd
push
ss
cmp
sub
leave
popf
push
mov
or
mov
incl
or
push
or
pop
xchg
sbb
bound
ja
ljmp
mov
mov
mov
movsb
es
call
sti
pop
add
adc
iret
mov
lcall
add
inc
adc
enter
jns
fcmove
sahf
jae
leave
test
inc
lret
xor
popa
lcall
pop
jne
or
xchg
cmpsl
lea
cmc
imul
imul
jb
in
cmp
xchg
insl
mov
lret
dec
cmpsb
push
inc
call
xchg
fcompl
jge
pushf
cmp
and
push
dec
cld
xchg
sbb
sbb
rorb
and
mov
popa
dec
adc
add
cmp
in
jp
test
xor
push
imul
and
loope
push
pop
xchg
sbb
jg
stos
fiaddl
jmp
and
incl
sti
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
push
lret
mov
decl
cwtl
jne
sbb
xor
jb
cwtl
std
cmp
pop
xor
ja
push
ljmp
addb
sbb
enter
cpuid
addr16
jg
jmp
cmp
cmp
mov
aas
imul
push
loop
push
in
stc
das
and
cmp
mov
sbb
mov
mov
pop
loop
push
int
movsl
pop
sbb
pushl
adc
je
je
imul
je
dec
cmpsb
mov
aam
push
jno
jge
adc
sub
jmp
pop
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
aas
push
pop
push
sbb
movsb
call
std
outsb
xchg
sbb
subb
fstpl
fldl
ja
outsl
lcall
pushl
jns
or
cmp
jne
dec
pextrw
push
mov
sbb
mov
in
ljmp
inc
pop
iret
aas
movsl
or
sbbl
sbb
ljmp
cmc
aad
ficoms
leave
imul
mov
pop
jbe
jne
movsb
push
fcompl
les
clc
aam
ret
sub
dec
or
push
xchg
divl
adc
push
sahf
aas
mov
xchg
in
inc
aad
icebp
jg
mov
jae
test
lock
cmp
mov
cli
lds
xchg
lcall
mov
fistpll
ret
ss
jbe,pt
stc
cmpsl
inc
cld
xchg
aaa
bound
sbb
stc
pop
cmp
jae
cmp
jp
lods
aaa
cs
mov
ret
or
test
jb
jmp
fldcw
notb
insl
lcall
jecxz
call
or
rol
cmp
sar
mov
rcr
or
cmp
outsb
mov
mov
and
jmp
push
inc
mov
pop
and
adc
pop
sub
cld
out
pop
aas
cmpb
loope
in
mov
decl
jecxz
push
cwtl
and
rolb
imull
imul
xchg
aad
push
inc
xchg
lcall
aad
inc
pop
rep
mov
mov
fstpt
push
pusha
sub
dec
mov
jmp
test
bound
aad
mov
and
in
mov
inc
xchg
sti
push
sbb
stos
ljmp
inc
push
call
mov
cmp
shlb
testl
mov
mov
lock
push
daa
xor
aaa
lcall
xor
cmpsb
in
insb
pop
adc
sbb
adc
fs
inc
ret
aaa
inc
std
jmp
aad
xchg
movsl
add
call
and
sbb
jl
and
jg
or
movsl
cwtl
fdivrs
fdivs
call
push
xchg
or
outsb
in
xlat
ds
mov
xchg
stos
dec
lahf
fcomip
pushl
pop
xlat
add
in
dec
mulb
mov
bound
dec
inc
jmp
push
andnps
insl
mov
push
ss
aad
pushf
popa
rcrb
jg
inc
cli
ret
pop
stos
pop
je
cmp
inc
mov
push
lods
cwtl
dec
je
stos
dec
pop
pop
fcomip
in
pop
jl
je
jmp
pop
push
addr16
lods
andb
les
leave
in
std
call
and
sarl
mov
leave
pop
cli
loopne
dec
stos
sbb
dec
in
ret
dec
mov
sub
in
repnz
push
faddl
pop
push
jbe
xlat
nop
and
push
or
incl
test
js
or
int3
or
adcb
cmpsl
mov
data16
cmc
dec
push
sub
mov
cmpsb
jne
leave
lock
jmp
in
not
fcoms
popf
lock
mov
fbstp
jmp
and
movsb
cld
push
lret
fs
xor
lcall
push
adc
stc
push
loope
pop
lret
je
pusha
push
fmulp
stc
je
loop
icebp
repnz
lods
int
fs
decl
push
stc
arpl
rorb
jle
pop
andb
push
mov
and
fsubrs
sbb
cmpsb
pop
mov
xchg
leave
push
hlt
sbb
mov
addb
inc
adc
mov
js
xor
add
scas
popf
mov
lods
stos
sub
cmp
pop
cmc
idiv
adc
dec
das
inc
xor
xor
icebp
cmp
mov
fdivr
ljmp
dec
cli
ss
enter
jae
aam
bound
mov
insb
sti
mov
xorl
adc
inc
push
outsl
pop
lcall
jg
or
sub
pop
shrb
scas
xor
sbb
sbb
dec
adc
sti
sti
mov
inc
nop
or
lea
pop
adc
test
orl
test
dec
test
dec
pushf
imul
cmc
es
daa
fcmovnu
mov
call
push
add
arpl
sahf
mov
pop
jle
hlt
push
ljmp
ret
inc
lods
lods
jge
shll
enter
iret
mov
aad
inc
popa
out
ret
pusha
xlat
lcall
das
test
and
or
cmp
or
mov
mov
lcall
and
lods
fdivrp
es
pop
ds
decl
cmp
dec
mov
add
push
adc
mov
add
fcompl
lahf
ja
leave
call
pop
pop
mov
cmp
cmp
xlat
dec
mov
xchg
js
shlb
in
add
decb
std
fildll
rorb
push
cmpsl
sbb
add
in
ljmp
inc
pop
out
xlat
outsl
pop
push
inc
fnsave
push
and
call
cmpl
add
mov
mov
aaa
test
dec
decl
push
sbb
rclb
addr16
popa
test
lret
jmp
xor
js
icebp
sbb
insb
xchg
mov
or
setnp
in
jge
jl
mov
mov
xchg
add
dec
mov
mov
inc
push
loope
mov
fwait
ret
incl
fisubl
imul
aas
jecxz
fdivr
arpl
lcall
sti
dec
filds
xor
test
repz
mov
xchg
mov
in
bound
loop
sarl
adc
scas
push
pop
cli
jge
cmpsl
nop
jno
decl
add
popf
rcrb
mov
pop
clc
daa
xor
add
mov
push
sub
inc
push
outsb
push
insb
hlt
jmp
lea
sbb
mov
jnp
insb
xor
jg
jmp
insb
jg
lcall
lds
cmp
adc
mov
pop
mov
incl
ret
out
arpl
insb
mov
mov
cmpsb
jle
sub
adc
lret
arpl
fs
lcall
incl
xor
ret
jae
xor
lods
jnp
jge
cli
ja
mov
repz
mov
hlt
call
mov
mov
cmp
lret
mov
xor
andb
pop
dec
fimuls
lret
mov
inc
jle
mov
call
sbb
xchg
stos
decl
or
lret
xchg
mov
xchg
cwtl
or
pop
dec
in
scas
mov
ljmp
test
xchg
mov
sbb
imul
into
repnz
dec
push
test
jp
lret
pop
lods
sub
fisttpll
ljmp
js
out
nop
pop
scas
cmp
mov
or
stc
out
jecxz
xchg
fwait
adc
out
into
mov
sbb
jnp
cmp
in
pop
test
das
xor
stc
adc
sbb
dec
jno
in
xor
out
sub
cmpsb
sbb
dec
pop
dec
pop
sub
push
jmp
ja
cmp
cmp
ja
cmp
push
fdivl
into
sub
js
ljmp
test
and
frstor
jle
or
movl
lods
inc
mov
mov
sub
rcrb
fisubl
lcall
mov
cld
hlt
jns
add
push
lods
mov
push
das
roll
lret
fidivl
jae
stc
pop
jmp
cmp
dec
shl
decl
gs
mov
xchg
test
add
pop
cltd
mov
cmp
rorl
lahf
xlat
xchg
mov
jl
cmc
rorl
hlt
nop
out
xchg
mov
mov
out
fwait
dec
mov
es
jmp
out
and
add
xorl
out
push
leave
xlat
xor
call
push
ret
mov
xor
xor
cltd
es
jecxz
ret
test
adc
sbb
fwait
jg
mov
scas
dec
movsb
sahf
jle
or
push
sbb
ljmp
xor
std
sbb
push
inc
cmp
std
call
add
cli
jmp
pop
adc
pushf
pop
or
jbe
cmp
xchg
lcall
repnz
pop
dec
test
jbe
mov
aaa
sub
call
mov
cli
mov
push
cld
loop
scas
jnp
push
dec
inc
dec
ss
xchg
jmp
js
movsb
test
out
in
test
repnz
repnz
jbe
jae
fwait
adcl
mov
ljmp
int
verw
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
push
rcrb
push
mov
cli
sbb
add
rcr
jg
rclb
push
call
test
stc
mov
loop
daa
imul
push
jbe
adc
xor
idivb
sbb
lcall
insl
es
and
fsubp
xchg
inc
cmc
lcall
lods
pop
ss
fildll
scas
sahf
lds
jmp
mov
outsl
rcr
or
pop
jnp
cltd
mov
jp
fwait
in
cmp
stos
test
cmp
call
xchg
or
adc
and
das
cs
sub
mov
incb
add
adc
jmp
out
xchg
enter
jmp
jno
dec
lcall
xor
or
int3
cltd
iret
add
xchg
pop
mov
or
fimull
jmp
int
xor
sbb
repz
sub
push
xchg
dec
add
int3
lcall
mov
movsb
sti
add
inc
mov
pop
xchg
pop
mov
movsb
sarl
jae
mov
in
mov
pop
std
xor
inc
xchg
loope
push
sbb
repnz
lock
lcall
xor
test
outsb
sub
cmp
mov
fimuls
ljmp
pop
rclb
pop
nop
and
bswap
push
loop
divb
call
std
loop
ret
cli
loopne
dec
cmc
sub
add
mov
xor
decl
pinsrw
lods
fdivr
imul
sub
push
inc
xor
fisttpll
jae
adc
incl
inc
adc
add
xor
push
or
inc
and
adc
popf
mov
mov
lcall
or
push
mov
inc
ja
or
scas
jecxz
insb
mov
decl
cli
mov
jns
hlt
shl
in
icebp
ror
adc
pop
cmp
gs
in
jg
pop
lret
push
mov
test
mov
arpl
test
in
add
pop
sahf
push
iret
push
push
cmovl
add
data16
sbb
sub
out
cli
mov
leave
inc
fsts
mov
xor
adc
inc
repnz
pushl
arpl
push
or
lds
in
sub
push
arpl
stos
enter
rclb
decl
cmp
push
push
jb
cmp
push
repnz
mov
call
dec
xor
push
insl
adc
push
rcr
mov
jmp
sub
jge
or
cmp
mov
dec
out
mov
rcr
sub
and
push
mov
ret
mov
push
mov
incl
les
mov
cwtl
sarl
mov
jge
ljmp
into
xor
jae
repz
inc
jne
adc
fwait
dec
adc
add
decl
mov
xchg
cmp
adc
cmpsl
pop
lods
inc
call
pop
xor
stos
clc
decl
lock
shl
ljmp
xor
lcall
pop
les
out
mov
setp
or
inc
out
jne
aas
fdivrl
pop
mov
inc
bound
cmc
frstor
pop
insl
cmp
mov
pushf
inc
push
xchg
loopne
sub
add
push
cmp
mov
dec
leave
or
sub
jmp
xchg
jb
pop
mov
pusha
mov
iret
mov
xchg
lret
rolb
mov
movsl
call
sub
or
es
loopne
add
mov
pop
ret
push
test
out
add
pushl
and
xchg
xor
dec
sbbb
mov
lcall
and
roll
outsl
clc
cmp
out
push
sbb
mov
add
ljmp
jmp
ja
jg
cs
jecxz,pt
pusha
filds
stos
lahf
test
dec
jmp
lods
mov
addr16
lods
ljmp
decl
and
cmp
mov
mov
daa
inc
lods
xchg
clc
cwtl
dec
lds
fwait
in
popf
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
inc
out
jno
and
aas
pushf
adc
push
cmp
lcall
add
mov
push
adc
jb
idiv
decl
add
adc
and
ficoms
sahf
push
and
adc
mov
notl
stc
xchg
cmp
cltd
in
adc
mov
fs
mov
cmp
aam
ret
inc
jb
clc
rcrb
pusha
jns
pop
ret
adc
icebp
incl
sub
xchg
sbb
js
mov
xor
loop
cmp
lcall
xor
push
xchg
dec
mov
ret
or
test
jmp
xor
rclb
fs
fwait
int3
scas
dec
sbb
dec
ja
mov
aas
in
jecxz
xlat
ljmp
ficomps
inc
and
nop
rol
and
dec
add
mov
add
and
ficompl
imul
ja
psllq
xchg
rcll
lcall
loopne
stos
push
and
dec
mov
mov
test
and
sbb
es
pop
inc
sbb
jne
jp
shrl
ljmp
jns
lahf
push
xchg
popa
inc
sbb
aaa
rolb
js
popw
std
incb
sar
ljmp
outsl
mov
test
mov
arpl
xchg
stos
popf
push
incl
test
dec
stos
dec
sbb
icebp
sbb
push
int
inc
xor
mov
outsl
ljmp
clc
out
fsubl
add
clc
repnz
xchg
sti
jns
div
aas
or
mov
pop
repz
and
pop
mov
bound
or
inc
inc
sar
adc
pop
aam
push
hlt
add
jg
jg
shlb
add
lods
mov
mov
mov
cmc
pop
mov
mov
mov
mov
fidivs
xor
jle
or
xchg
jbe
out
sbb
xor
lock
mov
jl
jmp
pushl
bound
jecxz
mov
dec
inc
cld
pop
int3
ljmp
jp
adc
pop
inc
pop
jle
adc
jno
sbbl
ljmp
mov
test
int
jp
fstpl
sarl
stc
push
gs
adc
sbb
sbb
xlat
call
jmp
mov
jb
xchg
in
jle
es
daa
jecxz
dec
dec
cmp
jl
fmuls
inc
push
mov
cmp
lock
inc
sub
mov
inc
cmp
and
inc
mov
push
xchg
sti
sub
ja
xchg
aas
xorb
xlat
decl
cmp
push
dec
cmc
in
and
in
in
fstl
ds
data16
dec
addr16
lock
repz
lcall
sub
in
mov
mov
cli
pusha
popf
sbb
inc
ret
leave
aas
jae
aam
jmp
sbb
cmp
in
in
js
xor
hlt
xchg
xchg
jae
lcall
decl
rorb
dec
arpl
push
ret
dec
je
hlt
xchg
movl
in
lods
and
icebp
push
jle
test
fidivrs
movsb
mov
std
push
out
or
mov
pushl
lcall
imul
mov
jne
xchg
pop
movsl
aaa
adc
mov
out
mov
cmp
ljmp
lods
and
xchg
or
jb
xchg
je
decl
shlb
pop
imul
roll
arpl
cmp
jnp
sub
aad
cmp
incl
scas
inc
lea
shr
cld
jo
fs
sarl
int3
pop
xrelease
sbb
mov
inc
pop
inc
pop
mov
mov
xchg
push
adc
jle
jb
pop
loopne
je
subb
and
push
mov
cmp
lock
notl
cmpsl
jp
sbb
ror
dec
paddsb
jb
incl
outsl
cs
fstpt
and
andl
pop
xor
ja
hlt
repnz
clc
fmull
xchg
popf
js
or
adc
jbe
lret
lret
test
pop
ljmpw
andb
add
ret
jno
xor
rcll
or
xchg
mov
sub
and
aad
xchg
pop
fildl
stos
inc
ret
mov
xor
loopne
daa
cmp
test
sbb
shrl
jl
jns
lcall
addl
xor
sarb
jg
mov
out
pop
andl
xor
out
test
mov
xchg
add
dec
or
mov
test
dec
arpl
cmpsl
scas
dec
je
or
cld
jg
popa
push
jo
push
rorb
xchg
lea
out
clc
mov
inc
ret
lcall
shlb
lcall
ljmp
insb
mov
hlt
mov
xor
push
sub
xor
icebp
mov
ljmp
push
call
xchg
add
aam
pop
stos
fstp
mov
lods
xchg
push
sbb
fcmovnbe
xor
mov
add
adc
leave
inc
xchg
jecxz
dec
pusha
lcall
cmpsl
in
cmp
loope
cmp
data16
push
mov
cmp
decl
sahf
sub
imul
mov
jns
xlat
dec
call
push
mov
lcall
shl
daa
mov
cmp
negb
sub
repz
sbb
dec
cmp
aad
mov
mov
and
xor
mov
or
inc
lods
xor
xchg
pop
ss
jne
out
cli
mov
les
mov
aas
add
mov
lods
mov
xchg
lcall
lahf
mov
sarl
dec
sub
aaa
mov
vunpckhpd
das
adc
movsl
sub
ljmp
les
push
cwtl
jp
in
push
xor
ja
xor
shlb
cmp
call
jg
jbe
fmuls
test
inc
out
jne
or
push
out
sub
call
push
popa
or
test
out
out
out
cs
cmp
cmpsl
cwtl
sbb
imul
incl
dec
adc
or
lret
cs
xor
and
testb
fistl
ficoml
cld
incl
pop
xchg
or
and
imul
dec
and
mov
in
loop
ss
jo
lods
es
arpl
and
loopne
fisubrs
push
sarb
jno
xlat
inc
lret
inc
xchg
incl
sbb
icebp
lods
movsb
outsb
push
ret
gs
mov
inc
inc
inc
adc
jle
leave
clc
and
call
inc
xor
fs
fcomip
xchg
mov
inc
xchg
xchg
pusha
cwtl
jle
inc
or
add
ljmp
imul
movsb
mov
xchg
ret
sbb
pushf
lds
and
dec
xchg
dec
test
mov
push
arpl
in
add
mov
add
mov
inc
je
dec
and
mov
mov
insl
jge
xchg
cli
int
ja
jnp
add
test
cltd
out
mov
sub
inc
sub
mov
insl
xor
aaa
mov
inc
push
data16
lock
mov
test
decl
push
adc
adc
cld
jecxz
dec
iret
pop
incl
mov
dec
fs
lahf
dec
cmpsl
outsl
inc
xchg
pusha
mov
or
call
call
push
bound
stc
into
adc
insl
lret
loop
push
mov
cwtl
sub
clc
pop
hlt
lcall
xchg
inc
sub
repz
aam
popf
mov
mov
lods
stos
xchg
pushl
mov
out
sbb
ss
clc
jl
jmp
mov
call
inc
xor
das
xchg
jle
lea
imul
sahf
out
loope
dec
mov
decl
pop
sub
push
movsb
repnz
insl
iret
insb
xchg
dec
and
jl
sub
mov
mov
aam
es
decl
gs
lahf
movsl
data16
out
aad
add
ljmp
inc
and
xchg
push
xchg
mov
sbb
pushl
stos
lret
lret
sub
push
fldcw
in
in
pop
mov
es
and
jns
repz
ljmp
xchg
je
shlb
xchg
push
xchg
mov
addr16
daa
data16
inc
out
jl
inc
pushl
out
fwait
daa
xchg
jns
out
in
dec
or
xor
ljmp
cmp
push
outsb
roll
add
cld
mov
mov
jmp
shrb
dec
sahf
push
or
stc
jmp
inc
jg
sbb
cmpl
imul
ljmp
aad
xor
xchg
cmpsb
ljmp
pop
and
test
test
dec
inc
das
and
sahf
push
push
mov
push
sbbb
xor
lahf
pop
xor
sub
jmp
cmpsl
je
jno
inc
jge
mov
pusha
inc
mov
arpl
xchg
jp
xchg
lcall
into
daa
or
jl
lods
mov
or
mov
fwait
cmp
xchg
inc
mov
ss
pop
fs
call
popa
push
fcoms
xorl
fwait
insb
push
cmp
lcall
sub
push
jbe
inc
gs
cmp
ljmp
inc
pop
iret
jle
mov
xchg
jle
mov
cmp
mov
repz
fs
in
es
lods
ss
scas
mov
jmp
xchg
mov
add
inc
pusha
push
push
cmp
ficoms
adc
adc
ljmp
mov
jno
adc
mov
or
in
jecxz
xor
dec
mov
adc
shll
adc
ja
jno
pop
cmp
and
xchg
clc
xchg
rcrl
jg
mov
push
fldt
leave
test
push
test
das
out
test
pop
out
std
stos
jmp
aad
sbb
mov
negb
lods
js
rolb
adc
aaa
mov
jmp
mov
jmp
lcall
jae
adc
stos
js
sub
lds
adc
xorb
cmp
xor
lret
popf
mov
mov
pop
adc
call
movsb
sahf
movsl
add
js
jo
sarb
cmc
hlt
popf
cmpsb
movsb
mov
ljmp
rcrb
fwait
sub
mov
in
pop
pop
pop
mov
je
push
pop
and
lcall
out
sbb
xchg
sub
lods
in
addr16
das
pusha
pop
mov
pop
push
pop
dec
mov
pushl
pop
and
movsb
sbb
xor
dec
ss
int
cmp
jle
xchg
repz
fldl
leave
clc
adc
adc
ss
xchg
gs
and
imulb
in
rcrl
mov
push
lcall
inc
mov
pop
or
enter
xchg
in
sub
pop
clc
popa
sub
sbb
mov
push
shll
fcos
lahf
shl
lret
sbb
cli
mov
push
sub
ljmp
subl
leave
cmp
jg
and
fisttps
sub
push
in
gs
add
incl
stos
fisttpl
test
push
sub
mov
inc
repnz
xchg
popf
cltd
mov
incl
cvtps2pd
cmc
mov
mov
gs
pop
outsl
push
test
nop
out
lahf
jnp
fiaddl
cmp
call
dec
pop
nop
lahf
rolb
jl
lcall
orb
push
icebp
aad
inc
add
xchg
mov
jg
das
sbb
jl
andps
out
fidivl
push
mov
icebp
inc
pushl
adc
pop
aad
call
jmp
test
mov
pop
lret
je
mov
test
data16
out
cli
pushf
jno
cltd
stc
orb
sub
or
mov
cmp
repnz
lcall
xchg
leave
or
and
shlb
mov
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
shrl
imul
lahf
outsb
clc
roll
mov
add
xchg
je
incl
aam
mov
xchg
pop
pop
loope
rorl
cmp
sbb
dec
mov
inc
loopne
cmp
pushl
push
or
aad
test
sbb
add
jle
fwait
inc
jnp
xchg
mov
pusha
loopne
iret
mov
scas
sti
loopne
pop
dec
repnz
stos
test
cmp
and
mov
pop
mov
adc
outsl
mov
cmp
jg
inc
inc
sub
inc
repz
xchg
fcmovb
jge
and
pop
or
inc
push
rclb
ret
lcall
iret
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
mov
orb
shll
incl
stos
sbb
and
inc
sahf
nop
mov
call
aaa
sbb
movsb
test
xchg
jg
test
add
xchg
test
and
call
or
xor
cmpsl
inc
fwait
inc
cld
es
push
sbb
test
pusha
cmp
sbb
scas
clc
lcall
cmpsb
and
dec
les
repnz
mov
outsb
cmp
cmc
out
bound
push
sbb
jge
fcomip
dec
popf
xlat
js
push
fs
cmp
sub
shlb
and
mov
fwait
dec
sbb
pop
pop
fnstenv
out
pop
ljmp
cli
push
add
fdivrp
pop
jno
shrb
dec
repz
arpl
aam
stos
sti
lahf
adc
imul
vlddqu
jmp
push
and
imul
leave
std
popf
ret
out
dec
dec
scas
loopne
sbb
jmp
repz
jne
pushf
rorb
int
pop
clc
stos
out
pop
mov
in
xchg
or
xchg
clc
rcrb
insb
xchg
sub
mov
ss
push
sar
pushl
cmpsl
mov
in
shlb
sahf
xor
jge
xchg
xor
lahf
jg
pushl
cli
add
std
out
out
jb
xchg
jmp
mov
pushf
jmp
mov
add
dec
stos
inc
call
std
das
mov
mov
inc
add
mov
out
shl
iret
pop
xchg
inc
mov
jg
fiadds
cli
fdivr
iret
sbb
in
test
test
dec
data16
sub
or
decl
mov
fsubrl
js
inc
into
popf
incl
cld
cmp
jp
ficoms
pop
adc
pop
xchg
add
dec
mov
pop
add
mov
repnz
pop
sub
loopne
retw
decl
movsb
lcall
insb
cmpsl
les
fbld
pusha
nop
adc
bound
add
decl
or
cmp
fidivl
cmp
imul
lcall
sub
lahf
ljmp
xlat
filds
mov
xor
mov
jmp
cmp
lock
add
lock
cmp
push
mov
ja
push
std
decl
mov
jns
in
clc
adc
pusha
scas
test
pop
aad
jmp
insl
imul
int3
jl
push
ror
cmp
inc
add
xchg
das
jp
pusha
jo
xchg
push
dec
pop
jmp
jbe
push
dec
pushf
or
decl
add
icebp
loope
pop
sub
mov
xor
bound
mov
cmp
call
sbb
lret
pop
arpl
in
sub
sub
outsl
sarl
nop
mov
jne
out
pop
sub
xchg
hlt
or
rclb
sbb
cmp
add
cbtw
mov
jp
xchg
push
movsb
xchg
push
push
mov
stc
jecxz
lcall
cli
mov
fucomi
fwait
andl
in
sub
push
stos
test
inc
jnp
adc
out
mov
xlat
xorb
mov
sub
decl
jg
adcl
cmp
dec
dec
and
in
outsl
xor
fcomip
inc
fnstenv
in
inc
aaa
addb
stos
outsb
popf
orl
mov
loopne
in
shl
inc
js
mov
fs
add
mov
inc
push
sub
ljmp
test
jle
dec
jle
mov
sbb
pop
sub
add
ljmp
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
clc
enter
cli
xor
enter
lcall
dec
add
inc
push
fs
add
jo
lods
fsubrs
incl
mov
jmp
lcall
push
js
cli
sub
mov
test
test
in
movsb
push
and
decl
mov
cmp
cmp
xchg
mov
xor
test
mov
ljmp
xor
jns
inc
mov
xchg
ret
jmp
std
ret
push
clc
decl
push
mov
lods
sub
mov
lock
out
xchg
call
rorb
or
shlb
mov
sbb
xchg
add
jl
incl
test
movsb
cmpsb
cmp
movsb
shlb
inc
lods
sub
ret
sub
jbe
mov
call
cli
cwtl
jo
push
jmp
mov
or
push
rolb
fldcw
stos
popa
xor
scas
and
out
sub
xor
arpl
mov
push
pop
ljmp
cmp
mov
lock
mov
jp
push
andl
adc
pop
pushf
lcall
cmpsl
outsb
sbb
push
jns
mov
out
rolb
movsb
dec
rolb
mov
call
sti
cld
mov
mov
shll
into
ret
filds
sbb
xchg
add
pop
mov
mov
dec
add
push
in
and
icebp
ja
cmc
lock
out
xchg
bound
aam
decl
mov
mov
xchg
lock
or
mov
fbld
cmpl
inc
push
jmp
cmp
imul
sub
sub
mov
scas
scas
test
cli
xchg
inc
aad
js
push
cwtl
movsl
dec
aaa
std
jg
leave
dec
dec
addr16
push
lods
loope
cld
outsb
stos
mov
and
shll
movsl
ud0
mov
lds
sti
jae
rcrb
push
insb
ds
ljmp
clc
push
pop
mov
lods
pop
stos
fwait
push
dec
mov
mov
in
mov
lcall
add
arpl
add
inc
inc
pop
cs
addb
jns
stos
add
sub
fdivr
call
jle
dec
sbb
dec
jmp
pushf
dec
es
sarb
repz
jbe
fdivr
insb
lcall
inc
out
mov
jp
pop
loope
xlat
popa
pop
sbb
icebp
rcrb
cmp
ljmp
mov
push
add
jae
xchg
pop
je
and
push
repnz
push
test
dec
decl
arpl
add
cmc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
cmp
mov
lcall
adc
repnz
lods
je
divb
sub
popa
lret
mov
xchg
call
cld
fimull
mov
sub
cwtl
mov
push
pop
mov
or
jmp
lock
pop
pushf
cmc
addr16
aaa
std
enter
mov
mov
mov
mov
jmp
call
cmp
pop
mov
mov
pop
in
out
in
mov
add
ret
cmp
outsl
daa
sbb
incl
ret
mov
rorl
pop
aam
sbb
and
jns
xlat
rcl
negl
mov
mov
pop
jae
sar
inc
and
dec
mov
xor
sbb
iret
lahf
dec
inc
mov
xor
jg
pop
xchg
mov
repnz
mov
sub
inc
pop
hlt
out
fdivr
decl
mov
add
ljmp
mov
dec
ljmp
call
sub
loopne
sub
jl
shlb
inc
and
bound
fdivr
pushl
testb
scas
neg
cli
jmp
fpatan
lods
in
mov
test
adc
call
cmp
sbb
call
rcl
aas
cmp
push
aaa
mov
xor
inc
dec
sahf
ffreep
enter
test
ret
imul
lcall
dec
mov
test
sbb
cmp
mov
aas
and
or
lcall
dec
cmp
push
mov
mov
jl
rcl
mov
push
outsb
js
sbb
addr16
xchg
pushl
cwtl
push
inc
arpl
push
jecxz
in
push
ret
insb
clc
std
add
jp
pop
mov
outsb
clc
or
xor
clc
mov
nop
ret
sbb
inc
shr
pop
into
les
jg
jmp
xor
push
repz
ljmp
jl
xchg
push
sbb
fcmovbe
add
data16
out
xchg
lret
insl
test
arpl
lret
sub
pop
roll
daa
push
xor
pop
cmp
les
xchg
pusha
clc
inc
jb
push
cmp
movsb
fldcw
push
sti
and
ljmp
xchg
movsl
gs
imul
jp
xor
jne
sub
xorb
iret
rcrb
fistpl
ds
mov
test
fmull
pop
inc
rcll
call
insb
and
mov
popa
sbb
push
xchg
lret
mov
lea
inc
or
icebp
jb
mov
pop
inc
lcall
out
mov
decl
sub
int
jmp
mov
and
add
cwtl
jge
jmp
aas
and
mov
imul
into
leave
out
xchg
aaa
xchg
clc
mov
arpl
inc
lock
jg
push
inc
adc
rclb
loop
lods
test
cmpsl
outsl
sub
push
shlb
cmp
pop
sbbl
lcall
fnstcw
mov
fdivl
fisubrl
fsubp
inc
in
mov
scas
incl
and
test
jl
cmp
mov
or
repz
aas
xor
std
jg
or
xor
jne
adc
jae
pop
xorb
adc
pop
cmc
call
mov
fstpl
lock
std
call
dec
inc
lea
daa
call
mov
jnp
push
xor
mov
xchg
jmp
shrb
stc
and
jg
adcb
popf
adc
inc
int
ja
jae
and
sar
jmp
in
div
les
pop
lods
mov
cmp
xchg
push
jge
sub
inc
xor
push
lret
and
sbb
scas
mov
xor
repz
or
incl
scas
push
sub
neg
pop
add
sti
adc
filds
jecxz
call
push
scas
popf
das
divl
fsubrp
movsl
push
ss
mov
adc
push
decl
mov
pusha
jecxz
test
add
out
jno
jge
aas
adc
scas
xor
adc
out
dec
inc
es
cmpsb
call
sub
in
out
or
cwtl
sbb
data16
mov
push
mov
dec
sub
lods
xchg
xchg
mov
cmp
loope
movsl
or
sub
jnp
mov
push
test
inc
imul
adc
mov
mov
lcall
mul
or
cli
daa
pop
out
add
mov
dec
mov
adc
test
mov
cld
bnd
sbb
mov
pop
inc
inc
or
scas
jae
clc
mov
ret
push
cmpsl
cmpsb
adc
daa
pop
shll
idiv
push
jmp
mov
jg
pop
cmp
leave
jg
cmp
les
cli
inc
adc
mov
jmp
push
lods
inc
in
lea
cmpl
popa
mov
test
ljmp
cmp
out
pop
aaa
shl
scas
pop
dec
shll
movsb
push
ds
cmp
call
fnstsw
ret
xchg
add
mov
push
pavgw
mov
cli
js
mov
mov
in
xchg
clc
mov
mov
add
decl
jbe
pop
jp
push
imul
out
lcall
pop
add
ljmp
ss
in
faddl
sub
pop
mov
push
jp
fs
movsl
cld
cltd
outsb
lock
mov
push
and
mov
inc
nop
jne
sub
or
repnz
jecxz
and
incl
or
shll
pop
mov
push
popa
cmp
pop
insb
dec
adc
fsubrl
sub
and
cwtl
add
ja
mov
fildll
stos
lret
xor
test
call
in
dec
call
jbe
cmp
cmpsl
stos
push
jl
mov
adc
push
int3
ljmp
incl
mov
jno
cmpsb
int
mov
mov
movsl
cmc
outsb
push
push
pop
movl
mov
test
push
pop
pusha
inc
fildll
push
cmp
adc
sti
into
cmp
push
imul
or
jge
mov
and
lcall
movsb
stos
mov
lock
ljmp
lahf
sub
mov
xchg
xchg
ja
ljmp
sub
fbstp
out
sbb
and
sbb
mov
push
icebp
nop
pusha
subb
mov
mov
push
ret
lods
cs
jle
aas
in
and
push
push
mov
xor
and
addl
push
aam
decl
cmp
loop
fdivrs
call
fiaddl
lret
and
imul
jmp
adc
decl
cwtl
out
movl
fdivr
cltd
push
orb
fwait
dec
loope
cmp
mov
pop
adc
ljmp
sub
dec
sub
jns
pushf
jae
shrb
sbb
sbb
xchg
mov
sahf
sbb
decl
xlat
leave
test
add
jb
mov
arpl
hlt
or
push
and
movsb
fs
iret
ret
fistpl
test
inc
cltd
shl
and
mov
jg
inc
out
aaa
push
xchg
pop
or
pop
loopne
sub
inc
mov
and
incl
in
lock
test
aaa
popa
je
in
push
dec
xchg
dec
and
jl
ljmp
adc
inc
or
js
cwtl
aad
mov
jle
loopne
ja
mov
add
jmp
les
sub
jecxz
xor
cwtl
clc
dec
jne
lock
sar
in
loope
incl
ja
bound
hlt
shll
pop
inc
xlat
rcrl
sub
adc
mov
jb
jle
xlat
mov
andl
out
add
cwtl
movsb
jle
out
adc
in
sarl
sub
mov
loopne
shrl
sbb
rcrb
int3
jmp
decl
notl
dec
cmpsl
push
mov
in
mov
int3
into
pop
mov
add
mov
push
js
loope
mov
and
mov
mov
push
sbb
fsts
jmp
mov
fistpl
sub
out
cltd
lock
negb
pop
addl
jmp
addb
xor
mov
adc
push
xchg
cmpsl
lods
sub
dec
fucomip
cmp
shlb
pop
das
pop
xor
hlt
xchg
inc
fisubrl
mov
ljmp
xchg
out
pop
rolb
xor
mov
lds
loopne
pop
cmp
addr16
ljmp
inc
push
lahf
cmp
sbb
in
xor
sbb
mov
ja
incb
jnp
fidivs
xor
dec
sub
sbb
pushf
pop
dec
jp
decl
push
push
scas
lcall
movsb
bound
push
pushf
sbbb
jae
push
dec
lcall
popa
sub
ret
lcall
add
jmp
or
or
call
mov
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
mov
jp
jo
mov
jbe
jno
jecxz
fwait
push
xor
push
add
lock
and
in
and
jnp
jmp
mov
dec
add
push
not
push
mov
test
push
sub
pop
or
call
ljmp
rol
cmp
xchg
mov
mov
stos
mov
jbe
pushl
cmc
aam
mov
sub
loope
push
xchg
fsubl
out
repz
push
sub
insb
jmp
cmpsl
popa
fldenv
ds
repz
jge
arpl
movsl
stc
sbbl
jg
incl
inc
int
lea
cmp
ss
test
pop
cwtl
sub
clc
ljmp
sub
dec
add
mov
add
insb
insb
xchg
leave
in
in
decl
aaa
inc
mov
jo
in
imul
jnp
lahf
call
call
lea
addr16
mov
adc
into
shrl
lcall
xchg
inc
stos
xor
add
pop
fwait
mov
daa
fwait
xor
inc
repnz
mov
ljmp
sub
or
cmpsb
push
insl
push
into
dec
push
lcallw
test
mov
xchg
jae
and
les
stc
enter
cmp
adc
xor
decl
popa
pusha
or
jno
lods
xchg
mov
into
xchg
jae
fisubrs
pop
ljmp
ljmp
push
or
mov
xor
sub
dec
fmull
call
jmp
jle
sub
test
or
in
sub
test
addr16
jns
in
outsl
clc
lcall
jnp
adc
push
in
cld
fmuls
adc
mov
shl
or
dec
insl
mov
push
inc
out
pop
mov
fs
pushl
dec
out
push
mov
mov
add
shlb
mov
fwait
outsb
decl
mov
fwait
xchg
fisttpl
inc
xor
jecxz
xchg
add
mov
cs
lcall
ljmp
pushl
jl
pop
adc
pushf
mov
mov
mov
mov
incl
cmp
xchg
cmp
inc
mov
shlb
add
and
jmp
cltd
xor
sbb
vunpckhpd
stos
mov
fcmovne
loop
ret
decl
add
xchg
push
ret
xchg
shr
mov
scas
xchg
jl
gs
outsl
dec
mov
pushf
stos
fdivrl
push
mov
mov
push
push
loop
add
mov
xchg
pusha
bound
jo
int3
lcall
adc
cmp
jg
test
and
insb
mov
mov
and
test
enter
enter
mov
movsb
xorl
fisubs
lcall
sbb
out
stos
test
jne
mov
mov
and
pop
fisubrs
or
lcall
pop
repnz
inc
jp
xor
aam
or
or
sbb
fdiv
bound
push
lret
sarb
cmp
fbstp
decl
cmp
ljmp
fcompl
cmp
push
movsb
jb
lods
gs
in
test
int3
stos
sarb
fisttps
aam
int3
push
xchg
jl
negl
cld
fs
push
jnp
sbb
lret
lds
std
lcall
push
sbb
xor
inc
cmp
imul
add
jg
incb
mov
cmp
fisubrs
xchg
outsl
popa
inc
push
mov
fdivl
ds
lods
dec
jg
insb
add
jmp
cmp
mov
add
cmc
pop
or
movsb
lcall
inc
cmp
fwait
testb
ss
mov
mov
ljmp
int
or
ljmp
push
pushf
jmp
push
incl
outsb
out
sub
ret
lock
mov
popa
ret
and
jg
les
jnp
adcb
nop
adc
xchg
lahf
fisubrl
jmp
cltd
pop
out
dec
scas
xchg
sbb
int3
dec
jle
adc
dec
xchg
sbb
inc
in
test
lcall
dec
pusha
xlat
js
test
aaa
mov
or
pop
jge
pop
dec
mov
dec
test
std
mov
rcrb
push
jecxz
adc
test
xor
mov
orb
and
push
or
xchg
outsl
sbb
subb
pushf
add
cld
dec
int3
out
adc
subl
imul
inc
xchg
scas
cmpsb
dec
pop
mov
data16
lret
rclb
push
xor
aam
lock
std
call
insb
adc
jne
and
push
jge
addr16
out
loope
sbbb
pop
sbb
aam
popa
or
xchg
ds
jge
popf
or
mov
cld
and
imulb
add
std
bound
jge
out
add
add
xchg
fisubl
sbb
mov
ljmp
xchg
and
xor
or
iret
adc
inc
push
jle
int
xchg
inc
hlt
clc
out
lcall
dec
mov
mov
and
in
cmpsl
scas
or
mov
incl
icebp
aad
ret
out
sbb
shlb
iret
in
imul
leave
fbld
les
mov
das
pop
and
cwtl
stos
mov
incl
mov
enter
mov
rcrl
push
mov
das
and
outsl
jg
inc
dec
or
call
rcl
jno
dec
inc
xorl
into
xor
cmpsl
inc
jo
jmp
scas
gs
insl
stc
pusha
xor
fdivs
rclb
or
in
call
std
dec
mov
adc
outsl
and
movl
mov
adc
jmp
lret
scas
lock
or
sbb
pusha
push
jbe
push
divb
aaa
adc
std
adc
fsts
arpl
cmp
jp
and
jb
js
jae
movsb
pop
inc
push
testl
adc
fnstsw
pop
daa
sub
or
ror
das
fildl
or
push
jmp
movsb
add
insb
lcall
xchg
adc
incb
movsl
ja
dec
add
push
loop
leave
push
mov
shll
xchg
shrl
push
push
inc
outsl
xor
orl
push
inc
mov
pop
bound
rclb
mov
popa
jb
sti
cmpsb
cmp
pushl
pop
push
inc
sub
jg
test
jbe
shll
cs
fsubp
sbb
adc
call
lea
mov
mov
mov
jns
mov
pop
rcr
add
je
and
mov
xchg
mov
pop
push
cmp
incl
dec
std
or
push
lds
out
rorl
push
dec
aaa
call
xchg
rcrl
cmc
leave
test
push
leave
decl
sub
std
mov
mov
dec
lock
or
iret
dec
push
js
nop
mulb
stos
lcall
outsb
and
or
push
pop
or
pop
jno
out
mov
lock
call
and
aam
lock
cmp
pop
push
push
ja
lods
adc
cmp
jp
aas
decl
daa
cmp
adc
les
out
into
in
pop
jmp
call
add
repnz
lods
int
xchg
fwait
popf
sub
sbb
mov
das
clc
jmp
mov
roll
jb
sub
lcall
movsb
imul
in
in
unpcklps
xor
pusha
push
fisubl
and
push
scas
mov
icebp
mov
mov
inc
and
out
lods
imul
call
in
jg
or
mov
enter
inc
cmp
sub
inc
sar
bound
pop
xchg
out
orl
add
mov
les
lds
add
fsubl
and
pop
sbb
stos
push
into
fimull
cmpsb
enter
mov
dec
jmp
out
jge
incl
sub
cmpsb
test
sahf
cli
es
aaa
into
or
mov
dec
nop
aas
xor
repz
xchg
jl
jmp
jnp
int
or
lock
repnz
xlat
shll
pcmpeqb
push
hlt
inc
cmc
mov
jmp
lods
xchg
imull
les
jle
adc
push
je
lret
pop
lahf
pop
popf
in
jnp
call
cs
mov
ljmp
mov
inc
inc
ja
mov
xchg
lea
jg
shlb
stos
daa
xchg
mov
lds
pop
pop
scas
jb
popa
fistl
sbb
or
cmove
fildll
jg
xchg
or
push
daa
in
into
sbb
xlat
rcll
dec
xchg
mov
cmpsb
jg
mov
dec
push
push
fmul
sub
xor
out
incl
jecxz
cltd
push
pushf
lcall
test
mov
push
add
inc
add
cmpsb
mov
in
nop
dec
int3
dec
lock
fsubs
out
fs
pop
cltd
adc
in
fcomip
cmpsl
sub
rclb
jle
hlt
loop
sahf
dec
rorl
sub
loope
pushl
jle
fwait
ljmp
aas
mov
sbb
pop
jp
push
dec
shlb
pusha
lcall
rolb
and
daa
fmuls
xor
cltd
out
push
adc
and
dec
cmpsl
or
decl
and
dec
repnz
mov
std
mov
mov
adc
lcall
aad
dec
dec
andb
out
std
lahf
lock
jg
adc
cld
mov
fcomip
mov
test
lret
nop
push
push
sbb
pop
in
jge
pop
arpl
xor
sub
pop
bound
dec
jns
push
mov
mov
int3
sbb
sbb
pushl
fildl
les
or
mov
test
ljmp
xchg
ljmp
xchg
loopne
popf
or
sub
js
lret
imul
jmp
push
xor
pop
lcall
shrb
fstps
pop
loope
out
mov
cmp
add
cmp
fisubrl
test
lds
dec
cli
call
xchg
arpl
or
adc
dec
xor
xchg
push
js
ljmp
xchg
and
and
pop
add
pop
mov
aas
add
call
test
push
sarb
pop
je
pop
ds
xor
sbb
notl
add
sub
lcall
sar
fbld
mov
xchg
mov
in
xchg
cmp
jg
jmp
cld
test
inc
jae
mov
sbb
pop
pop
adc
je
icebp
jbe
decl
sub
sub
mov
lds
mov
cwtl
push
xchg
out
inc
iret
push
cmp
pushl
push
add
syscall
lods
iret
push
arpl
mov
leave
in
mov
xor
out
push
in
cmp
xchg
addr16
fadds
fwait
xchg
cmpsl
mov
or
push
pop
and
stos
sbb
dec
lcall
xchg
cmp
fisttpl
daa
iret
jns
cmp
sub
enter
notl
cmp
xor
mov
mov
cwtl
dec
xor
fcompl
lods
jp
ret
call
stc
in
lret
inc
adc
in
test
out
dec
sub
adc
lret
and
cs
and
incl
mov
mov
jle
hlt
sarl
mov
sarl
js
add
ja
mov
popf
scas
xchg
int3
int3
jg
and
cmp
cmp
push
mov
movsl
push
fistps
push
jno
sbb
outsl
jg
xorl
fwait
imul
ss
mov
push
or
xchg
xchg
sbb
mov
out
or
pop
dec
stc
aad
outsb
cli
push
cmp
inc
cmp
sbb
and
xchg
call
cmpsl
pop
sub
stc
and
dec
pop
jge
enter
xchg
bound
iret
jle
push
push
mov
push
mov
in
pop
pop
sub
or
adc
out
ljmp
push
rcl
mov
push
cmp
jno
int3
xchg
lahf
scas
and
js
push
dec
or
mov
dec
xchg
repz
ss
int
call
adc
jno
inc
ret
mulb
fs
adc
push
jle
sti
shl
inc
xlat
fldt
add
mov
sbb
insl
cs
jne
sub
sbb
push
mov
outsl
js
hlt
dec
jecxz
dec
test
mov
mov
loope
leave
shll
push
shr
inc
sub
inc
pop
popa
mov
cli
jl
insl
mov
lret
ret
pop
xchg
xor
inc
pop
call
pop
pop
ret
xchg
imul
out
daa
push
rcll
add
xor
les
xchg
pop
insl
dec
test
cmc
mov
sahf
insb
pop
insb
mov
pusha
pop
dec
scas
add
jbe
ljmp
jp
mov
push
shr
aad
mov
repnz
mov
jmp
lahf
incl
rcrb
shll
xchg
adc
adc
sub
das
daa
js
sub
push
incl
sub
add
aas
repnz
push
rorb
push
fs
rcrb
add
push
mov
sbb
add
push
cmp
lret
mov
inc
out
std
pushl
push
xor
nop
inc
adc
push
aas
inc
sub
inc
mov
mov
ss
and
push
push
pop
jg
pop
and
pop
std
xchg
jo
test
bnd
ljmp
out
pop
jmp
dec
in
loope
pop
ja
call
out
push
aas
jnp
inc
cmpsb
push
ficompl
shll
mov
adc
js
push
pop
sub
jb
sub
out
cli
cmpsl
fmulp
mov
test
xor
xchg
popa
xchg
movsb
int
icebp
ljmp
xchg
pop
cld
cmp
cmc
icebp
jg
push
imul
mov
stos
cmc
mov
scas
xchg
mov
adc
pop
jne
movsl
lods
mov
jg
call
in
or
popf
mov
sub
xor
jmp
decl
loope
pop
sbb
ret
xlat
xchg
stos
mov
imul
ljmp
lods
xor
mov
imul
xorl
mov
aam
cli
sbb
test
mov
dec
xchg
xchg
dec
pop
daa
stos
ret
jp
mov
mov
cli
lret
shlb
inc
xor
inc
test
mov
push
jg
mov
in
rcll
ds
dec
sti
dec
sarb
int3
decl
lods
sbb
ret
inc
adc
fwait
sub
gs
mov
or
pop
xor
call
in
movb
xchg
inc
add
jge
sarb
xchg
pop
inc
sti
test
cmpb
sbb
loop
out
jp
aam
adc
fists
jmp
cmp
sbb
add
loope
mov
sbb
lock
loopne
and
jnp
cli
cmp
outsl
jno
es
or
jns
xchg
dec
xchg
dec
pop
dec
je
sbb
std
ljmp
cmp
iret
enter
push
pop
into
push
ret
scas
hlt
push
sbb
add
cwtl
inc
repnz
aas
mov
pop
and
loope
out
call
push
pusha
sub
cmp
add
push
mov
xchg
or
rcrl
dec
ljmp
int3
sub
imul
fstps
mov
repnz
arpl
imull
jo
inc
minps
loopw
dec
lods
pushl
pop
hlt
and
shlb
mov
inc
fwait
and
out
lcall
adc
arpl
inc
inc
ficompl
push
insl
je
pop
pop
int
dec
outsl
les
or
decl
push
mov
push
pop
push
fisttpll
pop
pop
mov
mov
cs
cmp
cmpsb
sub
jge
shrb
add
cli
jno
or
mov
sbb
sbb
sbb
cmp
js
movsl
fadd
and
scas
shll
pop
push
mov
push
push
and
loopne
push
in
inc
movsb
or
nop
insl
test
lcall
jle
mov
jb
jb
push
cltd
jg
icebp
cmpsl
test
jmp
or
das
mov
mov
sub
push
loopne
out
clc
js
or
rcl
mov
lret
icebp
cmp
scas
clc
incl
into
mov
rcrl
fcoml
ret
into
arpl
lcall
push
cmp
xchg
dec
mov
sub
mov
loop
xadd
incl
mov
leave
adc
int3
hlt
xchg
push
xlat
inc
cmp
dec
in
pop
push
clc
dec
inc
push
mov
ja
mov
stc
pop
ljmp
add
int
mov
sahf
decl
cmc
sub
not
pop
sbb
rcrb
push
push
sar
ficoms
jecxz
lcall
push
scas
jbe
cmp
inc
mov
mov
cmpsl
mov
rcr
pop
sbb
movl
decl
mov
sub
cmc
mov
fistl
imul
ljmp
sysenter
push
cld
testb
in
popa
sbbb
outsl
and
mov
loop
lcall
scas
jecxz
notb
jae
sub
sub
pop
cmp
rcr
in
lds
call
enter
lcall
jmp
mov
dec
pop
aaa
fcmovb
enter
in
add
lcall
pop
out
adc
mov
loope
and
xor
fsubrs
cld
xor
cmp
out
clc
xchg
or
sub
bound
stc
dec
or
out
rcl
mov
jle
fcoml
mov
sub
gs
mov
notb
dec
scas
not
add
incl
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
movsl
inc
dec
jbe
jg
sbbl
decl
sahf
loopne
fnstsw
xor
mov
sbbb
sbb
std
jp
mov
div
jmp
pop
lock
aaa
pop
dec
ss
mov
scas
jnp
clc
add
xor
adc
push
repz
or
call
das
gs
push
sub
cs
bound
add
jge
std
decl
loopne
cmp
add
pop
mov
cmp
pushl
imul
mov
push
jae
push
mov
notl
int3
stos
mov
call
fs
ss
cmp
pop
xor
leave
loope,pt
pop
loopne
lret
jo
inc
data16
outsb
lods
push
ljmp
cmp
pop
xor
add
in
cmp
mov
xor
mov
cwtl
jmp
sub
cltd
mov
jecxz
in
push
xor
fisubrl
dec
cli
xchg
mov
and
inc
push
loop
ljmp
call
cmp
scas
mov
xchg
or
cmp
movsb
outsb
adc
call
sti
lods
je
in
daa
cli
in
push
mov
call
push
mov
scas
inc
sbbb
mov
in
dec
push
adc
mov
jno
mov
mov
or
jge
fdivr
decl
pop
stc
imull
stos
xor
xchg
jae
push
push
jle
js
test
scas
add
bound
aas
dec
pop
xor
fsub
inc
xor
jns
les
test
push
mov
mov
mov
push
xor
stos
mov
jmp
jbe
stos
in
xchg
add
push
xchg
add
ret
hlt
call
mov
jae
aaa
aam
add
jle
das
sub
inc
pushl
add
adc
jge
add
ret
push
loopne
sbbb
xchg
and
in
mov
push
loop
fsubrp
or
push
test
fisubrl
cmpsb
jg
pop
or
add
cmp
pop
mov
incl
jl
push
je
mov
fwait
or
xor
lahf
pop
insl
push
rcll
and
inc
jle
add
and
inc
daa
push
adc
sbb
or
pushf
mov
xor
lods
xchg
addr16
aam
mov
jl
pushl
lahf
fistpl
xor
ljmp
sbb
arpl
das
mov
jne
rolb
jmp
pushf
repz
je
test
pop
clc
stos
or
test
cpuid
sub
mov
dec
jl
inc
sbb
subl
xchg
lods
push
pop
pusha
pusha
fmull
incl
jl
jbe
push
lds
pop
push
adc
lods
and
dec
pop
inc
lcall
lods
sub
fcomip
negl
mov
adc
mov
stos
repnz
insl
cli
sbbb
lods
scas
gs
ljmp
adc
or
loope
xlat
push
jno
xchg
int
js
dec
or
inc
std
cld
into
mov
arpl
adc
cmp
xchg
sbb
testb
push
sbb
add
cmp
mov
mov
and
ret
pop
in
jnp
sbb
decl
xor
sub
dec
lds
adc
sbb
pusha
leave
inc
pushl
mov
arpl
pushf
jle
pop
push
movsb
sub
fdivr
push
inc
xchg
push
dec
stc
or
out
pop
jae
xchg
pushf
rolb
fs
and
dec
stc
mov
pushl
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
xchg
das
ret
cmp
mov
jmp
cwtl
cmp
inc
sbb
ret
sbb
xchg
stos
jae
adc
and
dec
mov
iret
jp
enter
xchg
and
cmpb
lcall
jg
jnp
cld
cwtl
add
dec
push
dec
out
push
je
sbb
xchg
sub
clc
incl
lea
clc
mov
call
pop
out
test
mov
xor
fcoml
jg
shll
push
add
xchg
adc
xchg
or
cmp
fisttps
push
iret
pop
mov
cmp
hlt
iret
out
cld
inc
les
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
jmp
cmp
sbb
xchg
nop
add
icebp
xchg
lret
xchg
testl
cs
ljmp
xchg
call
cmp
mov
in
mov
decl
lock
jmp
movsb
mov
push
in
push
sub
dec
mov
jg
incl
cmp
inc
add
pop
push
jecxz
lods
xchg
push
sub
addb
call
dec
pusha
mov
stos
cmp
insl
movsl
mov
jnp
ljmp
xchg
fnstenv
mov
xor
loopne
lret
std
ljmp
sbb
andb
mov
mov
data16
data16
sbb
movsb
jns
and
in
ficompl
shl
adc
clc
inc
and
call
sub
imul
imul
mov
fldcw
outsl
outsl
jecxz
inc
ds
jnp
in
mov
mov
insb
rol
subl
jle
jecxz
sahf
call
call
jno
es
mov
and
fistps
aam
and
xor
inc
dec
xor
or
test
jmp
out
pop
xchg
push
pop
jnp
push
fstps
orps
repnz
cmpsb
lcall
xlat
shl
daa
outsb
or
xor
rcrw
xchg
push
push
call
dec
push
mov
loopne
cmpl
popa
mov
outsb
dec
adc
xor
repnz
mov
int3
je
mov
fdivs
add
enter
sbb
out
movsb
jg
dec
psubsw
or
shl
jmp
mov
mov
ljmp
into
cmpsb
adc
push
cmc
jle
sbb
jecxz
jmp
xor
mov
test
lcall
dec
cwtl
dec
jp
add
loop
lcall
xchg
mov
fldl
std
jmp
mov
sbb
inc
xchg
add
jmp
jecxz
fldl
enter
sti
mov
and
mov
call
loopne
pop
mov
loop
mov
lret
mov
add
shl
sbb
sbb
pushl
jae
xor
loop
mov
mov
cwtl
sub
and
cld
add
enter
sahf
filds
or
iret
and
cmpl
das
or
cltd
loope
cmpsl
pop
in
iret
loopne
cmpsl
lea
pushl
lods
and
jecxz
out
and
dec
or
cwtl
daa
xor
xor
jg
xor
incl
popf
jp
clc
stc
nop
inc
int3
push
jg
sbb
jmp
fdivs
pushl
adc
aas
and
jae
loope
icebp
sub
mov
add
call
cmc
add
andl
inc
movsb
mov
insb
test
lcall
inc
loope
pop
push
mov
or
mov
cmp
adc
jns
jg
lcall
add
push
movl
aas
xchg
lcall
add
mov
jecxz
cmp
and
push
jnp
mov
xor
ljmp
pop
movsb
out
inc
or
mov
jmp
outsl
push
pop
int
xlat
dec
decl
imul
sbb
cmp
call
or
cmp
jp
and
adc
mov
ljmp
repz
adc
inc
dec
cmp
mov
sti
cmc
sub
mov
jmp
bound
outsl
mov
and
cmp
xchg
xor
mov
inc
add
out
aad
fstps
add
cmp
mov
lods
fsub
fdivrs
pushl
sbb
rcll
add
xchg
and
adc
and
push
pop
fsubs
incl
add
shl
popf
sub
in
hlt
je
jno
lods
shrb
ljmp
mov
add
adc
mov
decl
sub
fnstcw
push
std
jp
push
sbb
push
fdiv
cmp
mov
into
out
inc
sub
push
ljmp
cmp
lcall
movsb
hlt
sbb
nop
push
loop
mov
sbb
jecxz
gs
xchg
push
call
or
jnp
decl
adc
xchg
xchg
push
andb
out
fnstsw
xor
xchg
call
xor
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
sahf
outsl
dec
out
mov
dec
push
push
insl
fadds
and
xor
xchg
movsb
in
and
int3
rcr
mov
xchg
sbb
decl
adc
ja
hlt
dec
mov
movsl
dec
pop
loop
out
pop
insl
add
sub
inc
repnz
decl
repnz
stc
dec
out
rorl
sbb
movsl
or
stc
addb
sbb
cmp
pusha
shll
mov
push
rclb
mov
lret
xchg
shrb
cmpsb
fiaddl
mov
fwait
jg
mov
out
mov
fdiv
adc
xchg
xchg
call
cmp
dec
push
pop
jmp
mov
jmp
mov
es
shll
cwtl
ret
hlt
call
cmp
mov
push
leave
iret
pop
sub
out
insb
dec
or
cmc
outsb
sbbl
jl
daa
mov
idiv
dec
jmp
push
push
or
mov
mov
add
xor
movsb
lea
das
call
hlt
int3
insb
popf
sahf
stos
pushf
in
neg
inc
push
dec
push
sub
repz
add
lret
inc
and
adc
dec
mov
stc
sbb
ret
sbb
mov
int
decl
insl
repnz
lds
and
adc
lret
mov
incl
in
push
fwait
aas
dec
call
lahf
pop
lock
in
out
push
xor
xlat
ljmp
loop
add
lcall
shl
push
adc
dec
lds
or
cltd
add
iret
repnz
movsb
lods
test
mov
jb
dec
mov
dec
mov
sti
std
xor
add
out
sbb
sbb
lret
lcall
or
jo
outsl
add
xor
mov
jb
repz
imul
push
dec
cmc
rcrb
adc
adc
inc
movsl
jno
cmc
stos
add
adc
mov
sub
incl
cwtl
test
cltd
lret
jne
mov
and
push
or
push
out
mov
push
xchg
push
loop
cmp
cld
popa
int
loopne
out
pushf
adc
xor
push
xchg
add
mov
adc
mov
add
out
pushf
mov
and
repz
popf
mov
or
incl
dec
xor
mov
sahf
xor
xor
aas
adc
addl
incl
sub
stos
cmp
dec
mov
push
or
negl
sub
sub
incl
outsb
das
pop
jns
jg
movsl
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
call
add
cmp
das
push
push
lds
sar
jmp
scas
cmp
mov
jo
iret
in
mov
negl
pushl
mov
or
jp
mov
sub
cmp
inc
repnz
in
sub
dec
test
push
inc
lahf
push
jae
jb
out
sub
xor
push
popa
add
out
mov
lret
push
jmp
outsb
jb
mov
leave
xor
add
ljmp
xchg
out
push
addl
fnstenv
fdivs
ljmp
adc
add
fdiv
sti
idivl
pusha
rorb
lcall
inc
cli
adc
inc
jg
fadds
sub
mov
ret
lock
jmp
ja
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
cli
lcall
and
shll
test
cmp
inc
push
push
mov
jmp
imul
js
and
lret
out
add
movsl
push
mov
cld
sbb
jl
cmpb
add
pop
xchg
mov
cmp
jo
mov
add
fwait
mov
mov
jnp
jmp
sbb
daa
dec
lahf
add
nop
xor
jmp
bound
jl
ret
aam
in
fisttpll
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
lcall
addr16
add
sub
xor
dec
inc
ret
add
xor
sub
divb
rorb
jbe
push
pushl
cmp
enter
jp
cmp
out
xchg
adc
mov
sub
fisttps
lret
cmp
push
mov
push
cmp
xor
jle
lcall
xor
in
mov
dec
out
xor
lcall
push
aad
push
fdivrp
lcall
mov
test
nop
or
adc
test
jg
andb
cmp
insb
add
decl
cmp
fwait
sbb
inc
pop
ret
adc
les
dec
add
jbe
decl
or
into
inc
test
mov
repnz
leave
mov
push
jle
sub
inc
pop
pop
lock
decl
jle
ret
das
into
pop
sbb
push
es
mov
popf
adc
leave
jne
cld
ror
inc
mov
in
sub
mov
daa
shlb
mov
ss
outsb
decl
inc
clc
inc
out
pop
testl
push
sbb
lret
pop
sub
xchg
repz
std
aam
aam
lcall
cli
scas
arpl
mov
jle
jo
jl
xor
aaa
sti
jg
adc
xchg
test
push
push
lods
add
daa
push
dec
nop
call
adc
ret
js
dec
loop
mov
pop
outsl
js
jo
sub
ljmp
movsb
jns
pop
inc
sub
add
scas
cltd
fs
frstor
push
mov
incl
and
or
les
popa
arpl
movsb
iret
lahf
sub
fisttpl
sbb
sbb
in
push
jno
inc
mov
test
xor
mov
call
shll
xchg
pop
inc
cmp
dec
ss
dec
je
mov
push
mov
sub
push
cld
incl
ljmp
outsl
jo
loop
dec
mov
mov
pushf
call
popa
das
mov
enter
or
in
mov
adc
mov
jo
sbb
mov
inc
inc
dec
test
fs
ret
shlb
or
lds
lcall
mov
inc
popa
pop
sbb
inc
sbb
push
mov
or
lcall
int
decl
pop
sbb
fsubrl
inc
out
mov
je
mov
lods
lock
das
add
into
mov
leave
and
insb
jg
push
pop
xor
mov
xor
in
movsb
or
mov
sar
mov
test
bnd
rol
push
js
lret
lcall
adc
cmc
pop
out
mov
lret
enter
mov
mov
push
mov
ret
mov
jns
lcall
test
pushf
cmpb
ret
cmpsl
push
std
xchg
sbb
data16
push
inc
or
dec
jmp
inc
stc
xor
xor
and
repz
mov
mov
mov
pusha
dec
repz
dec
dec
jae
outsl
sub
out
clc
out
nop
adc
xorl
jecxz
mov
add
pushl
mov
int
cld
repz
in
lret
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
lock
cld
dec
rcrb
or
fildll
xor
cli
ljmp
int
xchg
sahf
stos
cmp
cld
push
out
out
push
jae
imul
clc
xchg
fimull
mov
pop
incl
in
pop
lea
movsb
insl
mov
pop
sti
add
out
xchg
adc
push
les
aad
lret
clc
cmp
xor
out
pop
dec
or
std
mov
stos
cli
aaa
std
fistpl
xor
or
dec
fsubrl
test
sub
daa
icebp
incl
testb
icebp
push
mov
pop
ficoms
xchg
jb
pusha
movsb
push
jmp
mov
insb
and
mov
and
jo
repnz
add
rcll
pushl
arpl
rcll
sub
ljmp
lret
jb
mov
fbstp
pop
inc
out
jb
sub
imulb
fadd
pop
decl
sbb
bound
inc
dec
test
cmpsl
or
shlb
mov
pusha
xor
sar
incl
int
pop
sbb
push
dec
dec
mov
xchg
arpl
test
xor
jle
mov
lcall
xlat
in
in
loopne
or
pusha
xorb
ss
xor
mov
mov
add
cmp
lcall
mov
outsl
xor
loop
ja
in
add
push
adc
xchg
jecxz
lcall
add
aad
mov
test
sbb
lcall
in
mov
dec
xor
popf
xor
ret
inc
mov
out
push
mov
cmp
decl
xor
out
xor
mov
rcll
sub
test
or
fildll
sbb
sub
jecxz
int
push
repz
fcomip
jmp
scas
or
movb
xchg
mov
mov
mov
pop
icebp
incl
sbb
mov
dec
mov
jae
cmp
adc
popf
leave
adc
pushl
inc
aad
jne
jo
fldenv
mov
fldt
outsb
push
sbb
mov
mov
incl
cld
movsl
leavew
imul
cwtl
hlt
jp
sbb
insb
pop
in
negb
lods
pop
xchg
std
pushl
dec
test
outsl
call
in
jne
daa
movsl
je
jmp
lcall
mov
arpl
and
mov
fnstcw
lcall
in
sbb
fimuls
jmp
adc
push
mov
fsubrs
test
jge
xorb
adc
out
xlat
mov
xor
push
xchg
mov
dec
or
cs
mov
addb
push
int3
jae
inc
out
pop
rorb
jge
test
pop
cmp
adc
pop
fdivrl
scas
xor
adc
fidivrl
mov
mov
addb
lret
jmp
xor
jp
jo
je
pop
pop
pusha
dec
dec
leave
push
lcall
inc
inc
add
sub
mov
rorb
or
jg
push
lret
mov
out
sbb
sub
scas
inc
jmp
jno
fisttpll
mov
test
add
incl
cmp
push
lods
xchg
fsubs
dec
jg
sbb
jle
cmp
dec
filds
add
push
fdivrl
fcos
cmp
dec
test
inc
mov
rorl
jecxz
mov
inc
stos
sub
mov
scas
lcall
cli
pushf
mov
and
rcrl
jg
push
repnz
pop
aaa
inc
add
push
repnz
popf
cld
lcall
orb
inc
lahf
dec
dec
add
sarb
mov
icebp
push
add
jmp
jb
mov
lds
xchg
dec
add
push
gs
jg
adc
mov
mov
cmp
dec
jae
mov
cmp
mov
xchg
nop
fdivr
orl
lahf
mov
jg
jle
cwtl
inc
in
push
inc
or
incl
in
xor
int3
jl
sub
jae
mov
mov
insb
xlat
xchg
aad
stc
out
in
lds
icebp
inc
mov
inc
or
push
aam
cltd
sbb
and
inc
lcall
and
scas
data16
jne
mov
popa
mov
inc
jae
adc
lcall
pusha
roll
enter
lock
mov
test
jmp
jge
sbb
std
decl
lock
xor
pop
mov
loope
mov
add
mov
fadds
outsl
mov
pop
push
fwait
cltd
pop
mov
mov
incl
imul
sbb
lods
jae
stos
rorl
nop
scas
jge
mov
and
sahf
push
mov
pop
in
push
push
dec
add
or
in
popf
or
js
jle
and
mov
test
mov
cmp
pusha
xchg
popf
jl
aaa
inc
sar
dec
or
push
push
xor
mov
icebp
call
xchg
outsl
adc
xor
xlat
jns
inc
stc
lcall
call
lds
push
pop
mov
fildll
push
test
inc
dec
mov
or
cli
lods
jg
movl
mov
xor
movsl
aad
loopne
or
lods
pop
loop
dec
outsl
es
aas
push
sbb
int
div
ljmp
jge
clc
cmc
lret
stc
pop
cmp
lods
jbe
popf
dec
rorl
lods
cli
or
push
pop
inc
pop
icebp
inc
xchg
ret
shlb
mov
incl
bound
daa
cmp
mov
dec
fists
dec
adc
loop
mov
mov
scas
lcall
or
and
popa
jno
int
repz
lock
in
mov
mov
imul
cmp
clc
cli
incl
jge
xor
or
imul
lcall
jae
and
andl
xchg
inc
lock
ljmp
mov
pop
sbb
sarb
packssdw
movsb
ret
cmp
fcos
call
enter
fs
xor
xchg
mov
hlt
mov
jno
scas
clc
jmp
sbb
pop
out
inc
jnp
and
and
mov
xor
stos
sbb
add
pop
sub
incl
xor
mov
jnp
int3
and
aam
mov
lock
ljmp
push
xchg
lock
sarl
std
lahf
jmp
cli
pop
lahf
out
incb
ljmp
and
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
adc
daa
xchg
add
cwtl
inc
lret
xlat
xor
mov
mov
mov
stc
inc
add
in
push
pop
icebp
jmp
pop
mov
mov
pop
mov
jns
subl
xor
loope
testb
jmp
fdivs
pop
dec
data16
ds
sub
ds
punpcklwd
js
mov
sub
lcall
add
pop
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
test
pop
pop
lods
dec
or
mov
adc
stos
stc
imul
ja
mov
or
lahf
jg
enter
mov
js
cmpsl
inc
inc
mov
push
mov
std
push
jp
mov
xor
mov
je
or
sub
jmp
cld
rcrb
mov
adc
sub
popf
lahf
jmp
xchg
outsb
arpl
xchg
es
leave
insl
add
jp
sub
and
das
cli
mov
mov
push
and
push
mov
pop
jb
pop
mov
in
or
pop
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cmp
test
decl
sahf
push
xchg
mov
xchg
popf
enter
addr16
mov
daa
cs
scas
dec
test
add
test
aaa
ret
data16
mov
lods
push
push
mov
sbb
pop
bound
std
cmpl
pushf
mov
dec
push
cmp
cmp
sbb
inc
out
xor
add
leave
jecxz
ret
cmp
cmp
pop
je
pushl
jg
xchg
mov
mov
loop
filds
gs
das
out
jae
aas
jo
mov
pop
dec
call
cld
push
inc
arpl
push
pop
mov
lcall
jle
mov
xchg
aam
jb
stc
lods
pop
cwtl
or
mov
aad
add
scas
cli
ljmp
pop
filds
rorl
pop
ret
lret
outsl
dec
aas
lods
lcall
pop
cmc
jmp
fisttpl
push
and
je
inc
pusha
inc
cmpb
xchg
call
jge
cmp
iret
mov
aam
fcmovbe
and
cmpsb
cwtl
pop
imul
icebp
jp
imul
aaa
scas
push
xorb
sarb
lret
push
mov
lcall
fisubrs
push
inc
xorl
add
cmpsl
aas
and
mov
insl
mov
lcall
pop
jmp
pop
jecxz
sbb
negb
push
addr16
imul
jbe
xchg
incl
pop
jo
cmp
push
movsb
aad
ja
mov
ret
call
std
mov
sbb
cmp
jbe
adc
mov
jg
pushl
pop
mov
sbb
cmpb
ja
lret
inc
sub
cmp
decl
popa
clc
sub
inc
or
loope
pusha
lds
push
ds
rcrb
xor
ljmp
dec
fiaddl
xor
cld
xor
cwtl
aad
inc
notb
cmp
or
pop
fdivrl
aam
les
mov
cmc
adc
inc
loopne,pn
call
jmp
inc
jmp
inc
lds
xor
lock
push
shlb
std
jg
mov
in
flds
cmpsl
cmp
xchg
jns
decl
dec
in
cmp
cld
dec
in
pop
jge
push
sar
ljmp
test
sarb
xchg
les
jecxz
repnz
ss
jg
jg
das
iret
pop
and
adc
movsl
cmp
or
icebp
out
mov
cltd
aad
std
out
jne
adc
loop
stos
mov
pop
add
mov
shlb
mov
insl
mov
inc
mov
push
imul
pushl
pushf
movsb
test
inc
les
lods
mov
or
sbb
out
and
jmp
push
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
dec
loope
loopne
in
adc
push
mov
decl
daa
mov
xor
mov
icebp
addl
add
xchg
dec
lods
lock
add
gs
ljmp
sub
out
sub
aad
es
push
mov
push
jne
decl
mov
add
mov
mov
push
clc
add
jp
jno
loope
pop
in
cmp
mov
dec
dec
xchg
push
gs
mov
cmp
sbb
decl
or
push
xchg
inc
rolb
jae
dec
push
pushf
loop
daa
pop
pop
jge
imul
jmp
push
jo
das
cmp
ret
mov
push
mov
push
fcoml
incl
and
xor
lcall
lret
xchg
iret
pop
mov
pushl
aaa
and
pop
xchg
rclb
adc
out
mov
popa
sbb
mov
cld
mov
pop
ljmp
ljmp
lcall
jne
or
mov
call
jnp
sti
or
repnz
or
ret
adc
xchg
adc
mov
out
sar
jmp
pop
outsb
addl
std
sbb
sbb
fbld
in
mov
ljmp
out
ror
cld
decl
inc
mov
sbb
jbe
dec
mov
mov
xlat
lret
fisttpll
cltd
xchg
xchg
sub
pushl
shll
sti
popf
lods
xchg
mov
popl
xchg
jo
push
add
dec
jbe
mov
enter
pop
and
push
icebp
pop
std
iret
add
add
scas
mov
xor
sub
cmp
xchg
not
xchg
and
test
jp
jecxz
decl
inc
lcall
loop
pop
inc
and
add
lcall
mov
fldt
mov
xor
mov
xchg
push
adc
fcompl
cli
jnp
addr16
mov
ficompl
cmp
inc
push
nop
sahf
jno
insl
adc
decl
bound
mov
sbb
and
mov
pop
jbe,pt
xchg
mov
and
int3
int
or
ret
std
ljmp
push
fwait
sbb
stos
mov
mov
sar
js
pushl
sbb
sbb
fs
mov
loop
xor
xchg
pop
sahf
and
lods
mov
sbbb
dec
push
aas
xchg
inc
inc
xorb
mov
dec
leave
adc
mov
incl
cmpb
mov
sbb
sti
mov
cmp
cmc
enter
dec
mov
fmuls
inc
mov
jg
loopne
aad
sbb
mov
sbb
jno
jbe
pop
jl
cmp
call
popf
aad
sub
loopne
push
imul
fnstenv
jge
mov
fucom
mov
mov
pop
lcall
push
addr16
sub
sub
lcall
pop
push
scas
pop
cltd
nop
xor
call
jmp
mov
cli
push
fucom
sub
lahf
or
pop
push
mov
shlb
mov
mov
loop
imul
ds
lcall
add
fs
sbb
xchg
lss
push
push
xchg
inc
jns
popa
sub
stos
sbb
arpl
or
call
cmp
cmp
pop
and
lock
and
mov
jle
lods
pop
aaa
xchg
loopne
mov
adc
popf
cmp
je
lods
jmp
call
xor
sbb
pop
push
neg
xchg
or
adc
adc
jmp
cwtl
adcl
sti
ljmp
and
pop
adc
mov
pop
adc
incl
xor
or
lds
arpl
lds
test
lcall
pop
cmp
mov
and
xchg
fbld
or
xchg
mov
pushl
xchg
icebp
or
data16
pop
add
adc
fwait
pop
mov
iret
sbb
jmp
cmp
dec
mov
pop
push
xor
and
mov
push
mov
xchg
mov
adc
js
fs
movsl
xlat
fmuls
testb
in
bound
inc
add
dec
lcall
adc
int
data16
sbb
leave
call
jb
xor
jo
adc
cmpsl
jle
mov
lahf
arpl
pop
lods
test
jns
push
cld
decl
lods
adc
icebp
add
adc
rclb
sbb
cmp
push
inc
bound
cmpsl
mov
mov
je
mov
cltd
push
in
push
push
pop
xchg
xchg
nop
stos
smsw
mov
cwtl
sub
popf
add
push
in
adc
sbb
adc
ljmp
and
mov
repz
and
sbb
fwait
jmp
decl
mov
lcall
aad
push
add
xchg
jl
cltd
xchg
les
fisttpl
add
ljmp
pushl
cmc
cmp
loopne
xchg
push
cli
fucomp
test
stos
xchg
repz
xchg
test
fcomip
cmc
push
cmp
hlt
cli
mov
int3
xchg
out
movsl
sbb
pop
movsl
cmp
inc
push
mov
cmp
pushf
jecxz
ljmp
not
in
dec
arpl
pop
pop
inc
pop
xlat
mov
jge
or
roll
cld
ljmp
les
popf
inc
mov
sub
inc
pop
out
jg
mov
shll
and
add
in
cmp
sbb
and
call
mov
outsb
jmp
pop
ja
sbb
test
lret
inc
or
jmp
jmp
repnz
icebp
sub
test
push
xor
push
hlt
sub
dec
cli
mov
fs
aas
outsl
cli
lcall
xchg
jge
xchg
adc
leave
mov
cmp
pop
xor
aas
cmp
cmp
push
sti
jg
sbb
or
or
idiv
xor
push
pushl
jge
push
rcr
in
adc
pusha
add
loop
lcall
pushl
and
jle
inc
js
stos
or
sarl
jle
icebp
int
sti
push
xchg
aaa
repz
push
cmp
ds
cmp
std
sub
pushf
sub
mov
jne
xchg
xchg
add
lcall
pop
dec
inc
mov
jg
pop
dec
das
test
push
adc
decl
lock
lret
or
mov
mov
xlat
cltd
or
iret
mov
shll
or
lock
cs
ss
call
popf
jmp
faddl
call
xor
lods
data16
and
xchg
ljmp
rcrb
fbstp
xchg
test
pop
inc
mov
xlat
aas
fdivrl
fmuls
pop
or
imul
push
decl
adc
js
cmp
xchg
aaa
icebp
jecxz
mov
lahf
gs
call
add
and
dec
cmpsl
aaa
pusha
shlb
icebp
sbb
js
jmp
jecxz
sub
test
jecxz
and
or
adc
in
sbb
ds
decl
cmp
sahf
xchg
ds
ja
xchg
mov
sbbb
sub
push
or
decl
ljmp
ljmp
jmp
stos
ret
inc
jbe
mov
test
xchg
das
scas
xchg
les
sub
call
jmp
cmp
jmp
ficoms
push
jmp
out
adc
gs
decl
sbb
pop
call
fsubrl
push
dec
mov
pop
cmp
pop
cmp
js
mov
inc
mov
in
out
xchg
push
mov
cmp
ljmp
daa
cli
imul
xor
jp
mov
ja
pushl
dec
mov
fstpt
add
mov
in
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
aas
stos
xor
add
add
mov
out
je
fcomip
clc
push
rcrl
mov
inc
rcll
jno
xor
roll
lea
inc
jmp
xor
jne
jmp
push
movsl
mov
pushf
xor
fdivs
push
mov
fdivl
mov
xlat
sbb
sbb
and
pop
aaa
mov
lcall
ret
fnstenv
and
pop
iret
jne
adc
mov
aaa
cmp
adc
pushl
scas
loop
sub
loopne
xor
or
int
sub
shrl
push
incl
jb
push
pop
sahf
cmp
ds
jmp
dec
decl
es
sar
mov
xchg
xor
fildll
ds
xchg
adc
jo
test
jbe
icebp
jmp
sbb
and
sub
inc
in
cmp
or
outsl
test
in
out
iret
fcmovnbe
pop
sub
jp
xchg
jae
js
cmp
cmpsb
scas
jbe
icebp
int3
cmp
or
incl
or
repz
ret
cmpsl
xchg
ds
xchg
stos
sbb
das
sub
mov
jmp
testl
imul
fwait
mov
mov
inc
cli
jno
cmpsw
dec
cmp
test
adc
xchg
push
jmp
es
mov
and
jge
cld
push
sub
test
imul
and
mov
insl
ds
push
scas
lcall
int
or
fmuls
xor
pushf
mov
xlat
ret
ljmp
add
and
out
shl
cmpl
es
jmp
fs
out
mov
mov
jae
mov
adc
addr16
jg
shr
mov
cmpsl
in
dec
push
stos
push
mov
cld
fbstp
lds
aad
lcall
adc
inc
aaa
stos
sub
pop
push
push
push
push
test
out
xor
xor
sub
inc
xlat
jmp
mov
xchg
and
or
in
aaa
iret
arpl
add
mov
mov
test
ljmp
inc
dec
lcall
pop
in
push
jb
xlat
in
mov
test
mov
pop
adc
mov
data16
add
lods
test
cmp
lods
popa
clc
cmp
frstor
dec
cli
dec
cmp
adc
pop
movsb
popf
cmc
sar
jmp
mov
adc
cmpsb
push
adc
out
mov
js
stos
lahf
sbb
pushl
aas
mov
fdivrs
push
inc
sarl
cmp
iret
xchg
xor
outsl
push
sub
out
pushl
loop
adc
addps
jns
mov
xchg
scas
mov
xchg
lods
shll
clc
lods
sub
add
xchg
or
rorb
mov
xor
sub
lods
testl
lcall
or
mov
sbb
movsb
xchg
repnz
les
repnz
std
incl
mov
call
sbb
in
jge
push
xor
xchg
jno
and
ljmp
add
bound
or
or
jmp
data16
ret
ds
call
lret
andl
push
std
fwait
inc
rcll
loope
pop
sti
mov
mov
int
test
sub
repnz
jmp
lea
pop
jge
and
pop
ja
jbe
outsb
outsl
jne
das
push
dec
inc
leave
push
or
sbb
xor
stos
sub
add
decl
movsl
out
push
mov
add
jl
ljmp
cmpsb
test
mov
cs
add
pop
dec
jmp
repz
std
adc
push
xor
iret
jle
sbbl
inc
imul
les
or
adc
incl
fsubs
cli
push
ret
push
sub
js
add
stc
rorl
add
add
pop
add
dec
pop
and
out
sbbb
out
ss
ljmp
jle
xor
mov
cli
lcall
fcomp
add
into
fwait
sub
pusha
clc
push
xor
add
inc
pop
insl
cmc
mov
dec
outsl
mov
mov
leave
cltd
es
and
icebp
cwtl
stos
pop
stos
add
std
lcall
sbb
push
sbbb
dec
mov
mov
add
fcmove
push
sub
mov
rorb
cli
int
jmp
jne
push
dec
hlt
mov
fnstenv
pop
cld
pop
pop
jno
adc
xchg
pop
xor
mov
sub
je
ss
cld
add
sub
mov
fwait
nop
mov
or
shll
jb
dec
js
ret
mov
mov
dec
dec
sarl
cwtl
je
jle
push
insl
mov
mov
xchg
leave
leave
add
ret
je
push
jae
add
cmp
stc
icebp
test
xchg
fs
dec
dec
jl
dec
and
mov
mov
inc
or
notb
jmp
std
lods
in
mov
mov
hlt
jecxz
cmp
push
sahf
lea
mov
call
mov
dec
rolb
fisttpl
movsb
movsl
shl
xchg
or
inc
dec
jne
add
push
out
out
pushf
aam
jp
in
int3
insb
cltd
cwtl
pop
mov
jmp
incl
es
add
movb
inc
dec
cld
ljmp
mov
lea
iret
and
sub
filds
dec
insl
fnstenv
mov
mov
xchg
mov
cld
sbb
fisttps
push
xchg
mov
dec
fisubrl
je
adc
lcall
pop
inc
clc
cmpsb
sbb
push
ds
loop
imul
imulb
add
lcall
in
adc
icebp
leave
cmp
popa
xchg
call
jbe
shrb
sbb
pop
inc
cmp
push
jb
mov
xor
subb
jmp
sarl
test
cmp
push
jg
jmp
mov
sub
inc
lret
data16
mov
sar
mov
lock
call
adc
std
inc
popa
out
sti
mov
mov
enter
adc
ljmp
xor
ljmp
xchg
cmp
jbe
add
test
jge
lods
xor
andl
pop
rcl
mov
or
ret
sub
or
pop
cmp
jns
jmp
das
mov
pop
xchg
lock
ds
in
lds
xchg
hlt
cmpsb
mov
xchg
fistpll
jmp
dec
inc
stos
movsb
jecxz
xchg
aaa
adc
fcom
xchg
mov
aad
mov
and
jmp
push
loop
or
xchg
cmc
cld
sub
sub
cltd
or
es
incl
add
push
sbb
cmp
loop
lret
ds
pushl
push
add
mov
inc
jl
jg
bswap
dec
fs
popf
in
aaa
adc
int
push
fcomip
jge
sahf
stc
jb
and
pop
dec
je
jmp
mov
mov
lcall
push
xor
xchg
and
clc
lock
xchg
test
or
int
xchg
xor
ljmp
jmp
add
adc
stos
and
or
fs
adc
outsb
jmp
xchg
or
sub
xchg
jl
xchg
fwait
pop
cltd
pop
xchg
sub
xor
mov
add
pop
test
movl
mov
pop
inc
pop
dec
xchg
inc
ret
lcall
fdivrs
ja
inc
add
pusha
mov
push
std
jg
add
xor
pop
pusha
lods
dec
cs
test
jmp
jno
sub
pushl
sub
sub
repz
add
xchg
fs
mov
ret
sub
push
push
xchg
mov
scas
shrb
jmp
jp
xor
test
loopne
add
ljmp
incl
iret
fcomps
notb
rcrb
loop
mov
andl
xor
xchg
ljmp
imul
jne
mov
test
mov
data16
mov
push
sub
stos
jmp
imul
nop
loopne
call
mov
adc
stos
add
and
ljmp
imul
push
fldt
mov
cmp
bound
pop
cmpsl
fmull
rcr
je
lock
push
ret
and
and
xlat
push
xor
js
push
jle
jmp
xchg
sbb
adc
jp
sahf
scas
lret
mov
lret
add
inc
fisubrl
cwtl
out
or
fildll
aas
dec
cmp
dec
lods
cmpsb
pop
cli
pop
ficoml
adc
jmp
roll
pop
lahf
cmp
cmp
les
cmp
xlat
jp,pt
mov
mov
pop
lods
sub
lock
push
fiaddl
in
gs
icebp
sub
jle
sbb
sbb
out
or
mov
push
push
sahf
add
loope
sbb
or
insb
repz
std
fmuls
cmp
push
lcall
hlt
call
push
jb
test
add
lds
add
in
ljmp
or
or
stc
sub
sub
scas
sbb
pushl
mov
stos
pusha
cmp
push
push
xor
fldpi
pop
pop
adc
stos
push
mov
das
sar
and
std
les
sbbl
mov
in
jmp
add
test
out
xor
add
dec
dec
xchg
fcmove
aad
imul
mov
mov
es
pop
sbb
and
outsb
movsl
pop
sub
ja
and
adc
mov
and
sub
push
lret
sub
or
lods
xor
add
call
add
mov
sub
ljmp
hlt
pop
cmp
dec
mov
mov
add
and
insb
ja
clc
ja
push
stos
lods
sti
dec
stc
or
enter
call
iret
movsl
mov
cmovnp
pop
mov
aaa
or
cli
xchg
mov
jnp
push
inc
mov
sub
bound
pop
lcall
add
in
test
jl
cmc
loop
call
push
push
adc
sarb
call
mov
xor
xor
mov
pop
aam
jb
push
cmp
fsubrs
push
sahf
cmp
lea
in
xlat
js
popf
hlt
decl
dec
adc
jb
pop
js
xor
and
adc
call
or
bound
adc
movsl
xor
or
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
cwtl
xchg
sub
icebp
arpl
push
cwtl
jmp
clc
mov
icebp
shrb
fstl
mov
sbb
pop
repnz
fistpl
cmp
jo
enter
rorb
lcall
push
bound
es
lret
or
mov
mov
and
insb
inc
xchg
outsb
inc
cld
outsl
clc
std
add
mov
scas
pop
sbb
cmp
ljmp
mov
jb
inc
dec
lock
mov
and
and
xchg
hlt
xchg
add
push
jmp
fstpl
inc
mov
xchg
inc
adc
inc
loopne
testb
mov
ljmp
incl
leave
jo
iret
iret
adc
sbb
inc
sbb
in
stc
test
cmp
pop
push
jmp
movsb
loop
xor
ja
push
xor
dec
cwtl
adc
insb
pushf
fcompl
jmp
adc
mov
cmp
jmp
mov
leave
push
or
pop
loope
mov
jg
mov
dec
cmp
mov
sub
aad
into
cld
jg
xor
icebp
pop
int
call
out
xchg
dec
sbb
cmp
inc
loope
pushl
dec
test
cmp
xchg
insl
sub
incl
shll
mov
xlat
and
idiv
stos
push
sub
push
mov
pop
sub
gs
test
decl
cld
cs
mov
mov
pusha
outsl
arpl
sbb
ljmp
pop
sub
scas
inc
ds
cmp
mov
jae
sub
adc
ljmp
pop
or
push
in
das
and
xor
adc
int3
repz
pushf
pop
imul
loop
mov
adc
gs
into
pushf
ficompl
scas
out
jmp
imul
ficoms
mov
push
push
ret
mov
lea
xor
test
sbb
mov
loope
push
div
jg
inc
jmp
test
in
jae
pop
imul
mov
rol
outsb
sub
push
sbb
stc
mov
outsb
xchg
rorb
in
or
out
ret
aaa
push
fwait
enter
shll
push
mov
loopne
push
enter
mov
sar
incl
mov
sub
xor
fnsave
mov
or
mov
jne
push
dec
js
incl
jmp
push
xor
lret
sbb
jne
push
sbb
sub
mov
mov
int3
cmp
imull
push
xor
inc
sahf
and
sub
pop
lock
mov
sbb
dec
push
mov
sub
push
cld
call
jb
or
mov
xchg
mov
xchg
or
idivl
loop
ljmp
cli
cltd
and
pop
xchg
xchg
mov
icebp
out
lods
sti
int3
stos
lods
inc
nop
lcall
push
sahf
xor
leave
fwait
les
mov
jl,pt
adc
test
xor
add
add
jae
ljmp
outsl
cwtl
int3
mov
push
mov
out
ss
inc
pop
lcall
iret
daa
ljmp
push
or
cmp
jno
lcall
ljmp
addr16
arpl
xchg
outsb
dec
mov
push
jmp
xchg
lea
loope
mov
cmc
call
sub
mov
cmpsl
dec
jns
inc
and
roll
pushl
push
scas
out
mov
dec
stos
mov
cwtl
sub
dec
adc
aaa
das
repz
jmp
sbb
int
cmp
push
test
jne
repnz
rcll
sbb
imul
adc
xchg
jne
repz
rcl
cmpsl
ljmp
cli
iret
and
std
clc
push
mov
inc
leave
mov
lcall
call
xor
xchg
repz
jns
dec
sub
cmp
test
inc
jnp,pt
loop
jmp
stos
sub
jno
in
cld
mov
or
arpl
mov
pop
mov
cs
pop
inc
ret
dec
jno
sbb
xchg
xor
or
mov
jg
pushl
gs
and
add
push
push
inc
xchg
inc
pop
mov
mov
jmp
adc
cmpb
ljmp
xchg
fsubs
sti
xchg
out
mov
and
dec
mov
dec
repz
mov
in
arpl
xchg
sbb
decl
push
mov
in
rcrl
aad
loope
popf
scas
and
mov
jmp
leave
sub
jns
popa
pop
add
loope
or
dec
dec
leave
das
ja
pminub
je
or
ja
call
push
cmp
stc
inc
adcb
mov
insb
cmc
data16
femms
add
mov
jno
iret
jbe
imul
sbb
test
cmp
iret
scas
or
xchg
les
pushl
adcb
fwait
mov
ss
push
dec
lret
cmp
test
js
jne
in
ret
mov
xor
mov
aad
add
add
sti
loop
cld
jle
mov
scas
lcall
movsl
sub
pop
vmptrst
ja
mov
stos
ljmp
decl
sbb
shll
pop
inc
popa
sub
mov
push
out
test
sbb
bnd
repz
loopne
adc
repz
lcall
out
loop
mov
shl
cmp
fsts
adc
pushf
ljmp
fcomip
mov
out
cmpsl
shll
push
inc
fimull
add
pusha
data16
adc
in
cmp
sbb
mov
mov
sarb
xor
xchg
mov
inc
hlt
or
decl
and
insl
arpl
pop
test
add
ret
mov
xorb
jg
ret
push
cmpsl
dec
push
fldl
movsl
gs
mov
ror
and
sbb
repnz
inc
test
adc
cmp
mov
movl
pop
dec
add
ret
jle
or
lret
push
ret
inc
sbb
jecxz
out
inc
jge
mov
pushl
adc
add
leave
cmp
in
in
add
fadds
and
cltd
aam
xchg
inc
xor
sbb
incl
add
jmp
mov
popf
lahf
fstpl
mov
or
les
xor
mov
dec
lea
jp
sahf
fcomps
push
jmp
call
adcb
adc
mov
scas
loope
inc
push
adc
lcall
jmp
lea
gs
stos
nop
ljmp
xchg
sbb
filds
in
add
push
subl
mov
push
pop
dec
shlb
and
fxch
out
sbb
or
aas
fcomip
xchg
push
outsb
adc
fimull
cwtl
pop
dec
sub
lcall
dec
lret
repz
adc
aam
cmpsb
or
incl
lds
sahf
adc
addl
push
das
mov
clc
inc
sbb
mov
test
mov
mov
ds
pop
stos
mov
ljmp
pop
lds
mov
inc
data16
test
test
mov
pushl
or
aaa
insb
pop
or
test
cmpsl
fisubrs
out
ret
or
inc
or
in
ret
push
cmc
add
inc
jbe
mov
sbb
adc
fiadds
xchg
decw
push
dec
add
inc
ret
sub
adcb
push
push
out
jecxz
pushl
mov
jns
std
mov
bound
incl
insl
test
or
mov
idivl
sbb
add
xchg
repz
out
dec
mov
ljmp
lahf
and
movb
mov
outsl
mov
and
or
decl
aad
or
mov
adc
roll
loop
push
pop
popa
jp
int3
mov
jns
cltd
jle
decl
inc
je
std
xchg
imul
jecxz
mov
imul
pop
dec
or
mov
or
or
mov
in
andb
add
fdivl
or
aaa
push
in
out
add
lret
inc
mov
mov
js
sub
lcall
jle
loopne
addl
lock
ss
add
aam
jp
sbb
and
pushl
mov
orb
rcll
inc
fdivrl
sub
mov
mov
adc
cmp
clc
jge
fadds
adc
rorb
lods
jle
fwait
rclb
lods
or
es
loop
cmp
xorps
cli
rolb
test
stos
aad
and
adc
inc
jg
xchg
dec
mov
jne
xchg
rcrl
test
cmp
loopne
xchg
insb
cmp
repnz
pushl
lret
cmp
sub
dec
xor
jmp
mov
icebp
mov
and
or
inc
dec
das
movsb
enter
ljmp
ss
mov
ds
std
cmp
repz
es
fisttps
cmc
pop
mov
mov
and
adc
outsb
jg
jne
and
dec
mov
call
loopne
sbb
jg
inc
call
ficomps
icebp
popa
aad
adc
int
popaw
fcmovu
ja
sub
add
push
sub
sub
loop
mov
jmp
lea
adc
in
std
loop
inc
adc
mov
incl
xchg
push
rcl
jnp
jle
jmp
dec
mov
stos
xchg
mov
orb
jmp
jmp
jl
stos
mov
mov
mov
adc
enter
lock
mov
jle
cmp
addr16
push
cwtl
or
xor
in
ret
arpl
push
pop
test
jp
pop
sub
pushl
mov
or
xchg
jne
mov
stc
out
imul
pop
stos
fcoml
lcall
inc
cmpsl
jle
mov
icebp
stc
pop
mov
add
ret
fdivrs
mov
push
push
mov
dec
xor
sbb
sub
test
stos
add
fidivs
jns
cmp
mov
push
lcall
jmp
or
rcr
jmp
ret
mov
int
in
mov
shr
push
or
dec
lcall
push
addr16
push
inc
shrb
xor
pop
stos
sub
scas
pushl
jmp
xor
xchg
imul
out
mov
flds
cmc
ja
cmpsb
mov
add
lods
out
clc
decl
cmp
sub
and
push
cmp
insb
mov
inc
push
stos
bound
dec
out
jnp
adc
add
ds
ljmp
call
mov
das
ljmp
mov
ficompl
stos
jp
dec
ljmp
icebp
sub
jae
push
mov
xor
ud0
sbb
rolb
ss
leave
lock
cld
and
dec
or
and
decl
insb
movsl
hlt
ja
mov
cmp
int
xor
push
fsts
scas
jne
lock
pop
sub
xchg
pop
insl
cmpl
cmp
jge
fbstp
mov
or
mov
lods
xchg
lods
aaa
ret
enter
bound
pushl
cmp
mov
add
inc
into
fsub
adc
adc
cmpsl
and
cli
adc
xchg
mov
lock
sbb
out
jg
xchg
xchg
pop
icebp
jno
add
add
dec
xor
sub
decl
fs
out
or
jno
adc
test
push
fnstenv
dec
dec
decl
mov
js
test
cltd
cs
into
jecxz
ficompl
lea
ss
sbb
lcall
outsl
xchg
hlt
and
and
inc
inc
dec
xchg
pmulhuw
mov
xchg
xor
sub
stos
or
icebp
out
mov
jbe
jg
jg
lods
into
out
xchg
mov
stos
or
out
lret
dec
stos
mov
sub
mov
ret
scas
int3
pop
sub
lods
xchg
pushl
roll
xor
test
push
xchg
jmp
cmp
shr
out
sbb
loopne
rcrl
xor
aaa
xchg
lock
hlt
inc
jne
insl
popa
dec
fcoml
sti
mov
adc
mov
cmpsb
sbb
cmp
imul
outsl
std
sbb
das
popf
ljmp
and
add
pushf
cs
ret
call
incl
les
and
pop
jmp
bound
mov
mov
call
subb
lret
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
dec
lahf
jmp
jg
inc
push
pop
shrb
and
idivb
ret
cld
mov
mov
addb
bound
push
mov
push
or
mov
xchg
and
int
roll
mov
rclb
sbb
bound
mov
pop
and
std
push
cmc
dec
data16
or
add
jecxz
mov
mov
aam
add
arpl
sub
dec
jno
aad
and
incl
or
cs
inc
xchg
jmp
and
cmp
insb
out
cmp
std
loope
jmp
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
incl
int
cmc
adc
cmp
outsl
or
lahf
jecxz
sbb
sbb
or
decl
lds
inc
out
inc
aaa
ljmp
adc
rorl
clc
ret
lret
add
rorl
shll
dec
jl
lods
push
or
ficompl
sbb
mov
dec
jmp
imull
jo
jbe
inc
in
mov
call
sub
dec
test
push
mov
push
cltd
fcom
inc
jecxz
fnstenv
je
ja
call
jmp
adc
clc
test
arpl
test
stos
pop
loope
decl
bound
leave
adc
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
push
mov
push
cmp
sbb
daa
mov
mov
xchg
mov
sub
xchg
rol
push
jp
incl
dec
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
jle
jmp
les
dec
add
mov
ja
dec
xchg
mov
mov
pushl
xor
lcall
mov
sbbl
cmpsb
addb
jmp
rcrb
xor
fldenv
xor
daa
or
inc
push
lods
push
cld
repnz
cs
cli
lret
push
decl
adc
push
sbb
lahf
mov
jle
cmp
adcb
jg
dec
shl
addr16
jge,pn
mov
jmp
test
xor
push
scas
jmp
push
in
mov
rolb
into
sbb
xorl
in
mov
inc
xor
scas
je
cmpsl
ror
dec
je
aaa
inc
jge
jg
jg
mov
dec
pop
test
in
and
pop
push
stos
inc
test
jle
mov
pop
pop
mov
jp
iret
or
lret
adcb
ljmp
and
jle
addl
push
mov
mov
adc
lcall
test
jbe
popa
scas
sar
pop
jnp
inc
pop
hlt
loop
or
hlt
sub
sbb
xor
popa
mov
inc
fimull
aad
rcrb
jo
nop
pop
xchg
cmp
push
sti
add
cs
daa
cmp
les
inc
push
pop
js
dec
cmp
mov
ljmp
mov
mov
leave
shrb
and
shll
stc
neg
push
add
shlb
xor
dec
inc
mov
inc
mov
incl
mov
inc
clc
xor
mov
aas
cmp
cmpsl
je
pushl
xlat
dec
fimuls
in
lret
fisubl
outsl
mov
xchg
paddb
ljmp
in
out
fs
call
std
jnp
mov
jno
mov
push
pop
mov
sar
decl
or
and
cmc
sub
mov
cmp
or
clc
dec
mov
ljmp
sbb
push
lcall
mov
mov
sbb
arpl
js
jg
out
lret
mov
jmp
sub
das
cli
out
shlb
push
xor
mov
cmp
mov
mov
add
in
ror
jne
push
enter
mov
sub
icebp
fdivr
fists
std
mov
pusha
sbb
or
pop
add
jmp
out
fldl
xorl
mov
rcr
lcall
pop
nop
aad
fadds
jge
mov
shl
das
mov
jo
inc
aas
jle
cwtl
decl
test
sti
inc
xor
cmc
test
mov
or
or
cli
lcall
push
sahf
loop
icebp
dec
xchg
xor
adc
sarb
daa
mov
cld
call
fdivrs
std
lods
sub
pop
out
imul
andl
jmp
ljmp
pop
mov
lock
mov
jecxz
push
jge
pop
outsb
outsb
out
fs
pop
int3
mov
imul
es
mov
xor
aas
push
and
hlt
ljmp
stos
int
scas
mov
mov
cmp
mov
jbe
std
jg
pushl
add
sbbb
leave
dec
mov
mov
addr16
outsl
pushl
clc
xchg
inc
pusha
cmpsb
add
insl
fdivs
lods
adc
in
sbbb
call
cmpsl
mov
in
pop
aaa
mov
aas
les
decl
sub
cmp
lock
jbe
push
mov
dec
rorl
call
add
mov
imulb
out
stos
xchg
jb
adc
push
or
lret
and
and
mov
inc
push
ljmp
ret
faddl
ja
loopne
adc
sub
mov
mov
popa
inc
fistps
cmovns
add
mov
cmp
jo
push
add
sub
push
stc
cmp
mov
fidivrs
das
mov
dec
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
neg
mov
in
insl
or
call
push
jbe
sbb
das
repz
imulb
cmp
leave
and
ja
adc
arpl
inc
es
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
xchg
imul
jno
int3
and
add
lahf
je
loope
sbbb
in
adc
cmp
movsb
xchg
in
sub
push
mov
jge
dec
icebp
cmp
pop
pusha
pop
rcr
sub
jmp
sbb
rorl
adc
xchg
inc
adc
call
sbbl
pushf
sbb
loop
push
push
jg
mov
lret
cmpsl
xchg
add
xlat
icebp
sub
scas
das
rcr
ret
call
push
or
xchg
mov
fcoms
jne
xorl
incl
push
xchg
fbstp
int3
aam
mov
test
jg
mov
ss
lock
inc
push
test
ljmp
mov
pushf
pop
sub
outsb
data16
push
mov
push
loop
rcr
mov
into
jns
mov
insb
test
call
fs
jnp
mov
add
call
fnstsw
inc
jmp
mov
sub
push
adc
push
push
stos
sti
sub
sbb
add
add
into
inc
push
jmp
cmp
out
ljmp
or
pop
and
pop
bswap
inc
data16
imul
incl
test
pop
lcall
sub
int3
jp
inc
xor
das
scas
in
scas
popf
scas
movsb
pop
mov
cs
ss
sub
enter
pop
xor
cld
sub
dec
ljmp
jmp
dec
cmp
jne
shll
mov
dec
fbstp
clc
jp
loop
adc
pop
mov
cld
mov
js
inc
xchg
pop
out
out
jge
xorl
mov
in
inc
fisttpll
out
out
out
es
mov
in
test
sub
pop
setbe
lods
or
cli
inc
xchg
jnp
push
std
mov
rcrb
test
call
fst
mov
mov
cmp
bound
and
lret
xchg
sub
incl
cld
shlb
dec
fdivrs
push
adcl
ja
ret
jmp
jge
mov
add
mov
xor
sub
dec
pushf
lahf
sub
pushl
push
mov
jg
adc
xor
pop
imul
cmp
ds
or
cmp
pushl
cmp
negb
add
jl
push
negl
outsl
xchg
dec
inc
gs
out
call
inc
mov
mov
jbe
dec
sub
dec
pushf
fnstcw
pop
sub
lock
or
scas
sub
outsb
ffree
sbb
outsb
hlt
and
decl
fdivrp
addr16
ja
int3
stos
mov
cmp
inc
inc
push
shrl
ret
mov
out
sbb
mov
xlat
jmp
lods
pusha
mov
xorl
incl
imul
cwtl
push
daa
xchg
and
lock
rcll
mov
rcrl
inc
movsl
mov
es
loope
pop
dec
sub
jmp
out
popf
or
jmp
mov
rcrb
mov
or
mov
sbb
lcall
fsubr
es
movsl
in
fwait
pop
jge
cld
imul
mov
add
es
aam
ljmp
xor
enter
or
leave
fimuls
mov
decb
cli
mov
adc
in
mov
adcb
pop
testl
adc
add
jmp
mov
inc
pop
ja
scas
loop
shr
or
addr16
pop
pop
inc
cltd
jg
call
jmp
aam
jmp
fiaddl
gs
sbb
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
arpl
jns
or
dec
roll
fcomip
jl
lods
or
mov
rcr
push
icebp
in
inc
int
ljmp
pushl
cltd
dec
jmp
fcmovne
sub
or
sub
pop
imul
imul
push
jecxz
add
push
fcomip
idiv
push
lcall
loop
push
mov
pop
or
cmp
ljmp
mov
dec
and
rol
push
jb
pop
cmp
sbbl
xchg
and
mov
xor
jmp
xlat
loopne
jnp
lahf
movsb
push
pusha
mov
cmp
ljmp
rolb
fcoml
mov
xor
jbe
jo
fimull
ljmp
dec
sub
push
add
mov
add
sar
jg
push
loope
in
std
push
cmp
cs
sub
xchg
into
xchg
push
dec
ljmp
jmp
loope
push
aas
pop
ret
pop
mov
ja
push
or
jg
push
subb
das
in
stos
and
insb
xchg
sbb
lods
mov
call
inc
popf
adc
fldcw
mov
pusha
fwait
daa
or
xlat
sub
cltd
test
mov
ljmp
je
pop
jo
hlt
not
mov
adc
mov
jno
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
sub
js
jne
lods
xchg
sub
sbb
cmp
into
icebp
test
and
gs
push
lds
cli
scas
movsb
pop
loope
push
mov
or
sub
push
sbb
sbb
inc
lea
adc
clc
ljmp
inc
enter
hlt
push
cltd
loop
mov
aaa
xor
mov
inc
sub
orl
ret
adc
or
cltd
pop
mov
cli
mov
cmp
adc
ret
mov
xchg
mov
cmpb
ljmp
push
or
inc
scas
popa
push
xchg
sahf
xor
cmpl
inc
mov
cmp
xchg
mov
jns
mov
lahf
or
in
sub
push
mov
ret
add
push
pop
push
lcall
pusha
mov
sahf
movsl
mov
adc
adc
jo
xor
insb
lcall
push
push
fs
or
mov
fnstenv
les
bound
pop
cmp
out
sbb
jmp
clc
cmpsb
dec
mov
sub
dec
inc
dec
test
iret
mov
mov
push
ret
cmp
repz
mov
cltd
mov
pop
jecxz
or
incl
and
sbb
int3
setl
sub
rcrl
mov
adc
test
es
dec
sti
mov
call
xor
sub
mov
movsb
inc
lret
push
mov
ljmp
flds
or
pop
push
rcll
lahf
leave
push
rol
jle
shll
adc
jl
imul
fcmovnu
push
jo
shrb
fcoms
pop
pop
jo
push
and
cmpb
rolb
fmull
mov
lret
in
cmp
cmpsb
sbb
fsts
js
rcrb
out
mov
push
mov
lods
adc
into
sbb
mov
cs
movsb
ljmp
imul
mov
sbb
lods
iret
mov
cmp
sbb
sti
or
in
jmp
stos
aad
bound
adcl
leave
mov
jne
jecxz
sub
ljmp
xor
and
mov
pop
mov
sub
add
orb
xchg
outsl
cli
incl
dec
iret
mov
dec
inc
test
pop
pop
xchg
gs
inc
addr16
inc
mov
clc
ljmp
xchg
lcall
in
mov
sub
repnz
add
ljmp
enter
dec
push
in
loopne
ficoml
pop
mov
in
lds
sub
gs
fiadds
xor
in
sbb
jne
adc
jmp
daa
cmp
shl
add
rclb
int3
push
jp
mov
inc
jns
add
call
lock
rcr
adc
xchg
mov
stos
push
scas
add
call
jmp
js
dec
loopne
sbb
outsb
aas
add
jge
dec
adc
fwait
std
insb
sub
dec
mov
lods
xor
add
addr16
lods
sbbl
mov
incl
push
push
call
and
dec
inc
lds
fisttps
push
mov
add
hlt
jmp
scas
in
add
adc
out
loope
push
movsl
mov
movsb
fs
push
sbb
adc
adc
adc
cmc
test
lcall
shlb
cmp
or
cltd
or
cltd
fbld
cmpb
and
pop
lock
and
lea
jl
push
push
decl
mov
out
insb
pop
lret
xchg
push
ficoml
pop
pop
mov
fdivrs
fcom
inc
incl
sar
jae
xchg
ljmp
mov
ds
lock
lcall
sahf
fcmovu
adc
fcoml
jb
xchg
or
dec
repnz
aad
fdivr
iret
dec
xor
pop
das
sub
dec
jmp
mov
adc
addr16
aad
push
sbb
aaa
jno
inc
pushl
and
das
cmp
fiadds
popf
rorb
in
mov
shl
push
jg
adc
and
sbb
insl
pusha
push
jnp
aam
mov
sub
push
nop
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
xchg
and
sbb
lahf
xrelease
mov
dec
adc
test
lods
ss
lcall
ljmp
mov
ja
pop
repnz
dec
test
xlat
cmpsl
stos
repz
adc
jb
mov
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
call
adc
push
inc
jmp
scas
clc
mov
inc
jp
lea
negb
decl
cmpsl
mov
mov
frstor
cmc
or
sub
stos
in
cmpsb
dec
jb
jecxz
decl
dec
jno
mov
cmp
out
pop
out
rcr
dec
mov
lcall
je
sub
and
cltd
xchg
push
jle
lahf
jne
stos
jno
xor
mov
insb
sahf
inc
sar
or
sbb
pop
inc
mov
and
pop
int3
loope
push
mov
dec
call
dec
adc
iret
in
int
data16
push
es
call
lock
icebp
dec
sahf
mov
fwait
loope
xchg
sub
hlt
mov
mov
sti
mov
pop
mov
cli
xchg
dec
mov
fnsave
leave
fstp
fisttpll
pushl
mov
pop
shlb
das
ficoml
adc
jg
sti
lea
push
lcall
js
inc
pop
xchg
incl
cs
add
dec
mov
scas
push
nop
xchg
lea
cmp
push
sarl
and
ret
jnp
pop
lcall
cmp
add
loope
pop
enter
jg
and
std
adc
bound
jns
pop
jmp
pop
in
divl
decl
nop
lock
daa
repz
sub
sbb
lock
rcrl
les
sub
lods
jmp
cli
out
pop
subl
sbb
decl
lock
ja
push
into
in
mov
dec
xor
hlt
sahf
sub
decl
inc
pop
mov
and
xchg
add
sub
into
enter
in
cs
lcall
sbb
xor
push
andl
push
ja
negl
xchg
mov
gs
fisubrl
jge
imul
pop
gs
xchg
call
mov
fnstsw
fisubs
dec
adc
lcall
ljmp
loop
or
mov
outsl
adc
pop
sbb
les
jo
cmp
insb
dec
in
sbb
push
dec
pop
jno
mov
call
xor
and
adc
pop
jb
jns
xchg
cmpsl
push
aam
adc
jl
mov
movsb
subl
cmp
and
pop
mov
scas
insb
mov
ljmp
je
test
cmpsb
jl
push
enter
xchg
orb
lcall
sti
pop
stos
call
pushf
cmpsb
in
imul
out
push
lods
inc
ret
mov
sub
loope
ljmp
mov
ljmp
and
popf
aam
pop
fdivl
fcom
mov
shlb
cld
push
cmpsb
jbe
std
lods
pop
out
push
in
insb
cmp
incl
mov
arpl
or
push
in
bndstx
outsb
enter
decl
dec
lock
mov
xor
cs
adc
cltd
loopne
clc
or
jne
jg
ljmp
add
pop
ror
pusha
add
xchg
cmpsl
arpl
xor
jecxz
das
out
mov
mov
call
in
cmp
mov
jbe
inc
jae
and
loope
js
xchg
mulb
pop
pop
call
inc
inc
pop
mov
imul
add
cmp
lds
inc
std
shll
sbb
out
jg
mov
mov
pushf
dec
xchg
call
sbb
sub
jb
int3
rclb
mov
jg
xchg
dec
cmp
pop
adc
rorb
rorb
lahf
ljmp
mov
outsb
lock
dec
lods
in
in
lods
adc
sar
sarl
dec
mov
pushl
test
or
test
push
and
mov
ja
mov
aaa
or
mov
push
jmp
dec
fildll
lds
sbb
push
test
jg
sbb
add
pop
lea
mov
mov
xor
insb
sub
and
das
ja
rcrl
or
dec
imul
lcall
pop
xchg
add
mov
scas
mov
adcb
cmp
push
sbb
es
mov
fistps
aas
add
mov
in
add
jmp
xchg
call
decl
mov
daa
pop
jmp
outsl
mov
or
dec
repnz
or
ljmp
jmp
lret
mov
mov
mov
jns
push
icebp
xorb
incl
loope
inc
mov
test
fbld
xchg
pushf
fidivs
jg
lcall
fcmovu
js
ja
mov
mov
cwtl
rcll
jecxz
in
das
xchg
or
aaa
mov
push
push
dec
jecxz
xchg
scas
add
ljmp
cmp
sub
mov
lods
les
fiadds
or
imul
loop
popf
mov
fwait
pop
dec
inc
pop
iret
adc
mov
decl
out
mov
dec
or
ffree
xor
repz
jg
mov
call
out
push
adc
lds
fisubrl
pop
das
inc
mov
jmp
jnp
pushl
test
shl
pop
adc
push
mov
or
loopne
push
test
fildl
add
lahf
push
cmp
or
xor
sub
mov
push
or
fiaddl
mov
scas
addr16
inc
es
xchg
cld
cmp
aad
jmp
loop
cs
fnsave
out
inc
aaa
movsb
and
pusha
adc
ret
adc
push
sub
out
mov
xchg
lret
mov
popa
pusha
jle
sub
clc
or
pop
sahf
dec
call
add
mov
adc
sbb
pop
ret
sahf
dec
clc
inc
jg
and
pop
rol
into
pop
mov
mov
popa
xchg
vsubss
leave
inc
dec
lret
sbb
incl
mov
data16
call
sbb
or
cmp
rorl
jmp
jno
mov
fists
mov
outsb
push
das
repnz
je
dec
repnz
into
or
in
adc
xchg
nop
mov
ljmp
aaa
adc
pop
pop
hlt
fisubrs
incl
push
xor
xchg
ret
cwtl
call
call
cltd
jb
adc
push
mov
cmp
outsl
call
xlat
mov
mov
lods
xchg
lock
imul
push
dec
mov
movsb
sbb
out
clc
lcall
xor
ljmp
mov
test
das
sarb
pushl
push
aaa
mov
sbb
repz
daa
xchg
fldt
jae
mov
loop
adc
mov
jmp
adc
jne
adc
jg
jg
icebp
or
jg
mov
in
mov
or
mov
pop
dec
ret
jne
pop
icebp
jecxz
and
push
push
call
push
jl
jo
mov
fcoml
scas
jg
push
std
sbb
add
or
bound
push
fcomps
mov
inc
int
dec
jecxz
rorl
loope
add
pop
in
push
sub
inc
mov
ljmp
imul
or
add
ljmp
ss
pop
testl
cmpsl
mov
rol
pop
sarb
daa
sti
or
mov
mov
add
out
and
dec
mov
xor
test
std
and
outsb
imul
push
and
adc
shl
into
mov
loopne
sbb
int
adc
arpl
imull
sbb
cmp
cld
cwtl
push
inc
call
mov
push
pop
out
push
add
enter
add
xor
clc
sub
mov
pop
cld
call
std
pop
xor
imul
push
sub
repz
insb
ja
fmuls
dec
int
call
ss
loope
sub
mov
mov
in
in
stos
sub
cmpsb
nop
jp
pushl
add
addr16
dec
sbb
clc
andb
mov
test
lret
clc
outsl
pop
cmpsl
push
jge
sub
adc
rclb
cwtl
decl
out
rcrb
rorl
mov
cmp
push
lret
scas
push
out
xlat
aam
mov
call
add
xor
rol
ljmp
dec
enter
jge
ud1
mov
lcall
lods
cmp
jl
cmp
repz
sub
rcrl
stos
popa
add
lea
inc
add
push
pop
fcompl
jnp
pop
jmp
sbb
fwait
ja
lcall
jmp
scas
enter
and
clc
repz
rolb
aad
xor
cmp
ja
push
jp
or
or
aas
xchg
sbb
mov
xchg
mov
loope
mov
repz
data16
cmp
push
sbb
cli
test
cmc
mov
push
mov
jp
push
mov
lret
rorl
popf
and
dec
lods
repz
test
stc
mov
scas
sub
stc
sub
mov
adc
imul
cmpsl
in
cmp
jmp
sbb
ljmp
outsb
mov
push
bswap
movsb
or
and
data16
lahf
and
sar
out
push
jge
cld
xchg
mov
adc
lods
push
jle
mov
call
cmp
cwtl
push
jg
pop
inc
test
test
xlat
fmuls
mov
mov
incl
loopne
pusha
lcall
cld
pop
fadd
popl
arpl
dec
pop
inc
aam
shrl
aaa
mov
sbb
mov
scas
insb
adc
xchg
and
push
jl
sbb
mov
pushf
sub
bound
in
sahf
or
and
and
push
jecxz
adc
lods
sahf
mov
leave
test
jae
pushl
xchg
cmp
jmp
out
movsb
pop
bound
xor
mov
lcall
mov
sub
xor
or
out
cltd
outsl
xor
mov
mov
js
push
mov
inc
push
aaa
in
dec
pop
lret
xchg
sub
stos
push
jne
fs
in
dec
lret
mov
mov
mov
mov
xor
mov
xor
xor
cwtl
les
sub
faddl
call
lret
stos
mov
lahf
cs
iret
cmp
sbb
inc
idiv
sahf
sahf
mov
mov
jmp
cmp
mov
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
add
sbb
xchg
adc
imul
push
les
outsl
bnd
cmpsl
inc
dec
mov
fistps
dec
sub
lcall
cli
insb
fidivrl
in
outsl
dec
xor
sbb
imulb
aam
call
lods
add
mov
mov
and
mov
fucom
mul
je
mov
mov
in
sar
jmp
lahf
cmpb
push
loope
or
sub
push
and
or
std
lea
push
aam
sbb
lods
test
ljmp
inc
pop
fistpl
push
shl
pop
and
xlat
aaa
mov
and
jb
xor
movsb
cli
cs
mov
xor
insb
cmpsl
test
xchg
sbb
mov
xchg
mov
pop
dec
jmp
inc
loope
ljmp
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
pop
fildll
add
mov
push
mov
push
cmp
mov
ljmp
xor
call
push
lock
and
lret
push
sbb
je
sahf
pushl
and
rcrb
in
or
repz
jmp
aad
cmp
xor
xchg
adc
dec
ret
inc
out
movsl
mov
sti
negb
add
adcl
aad
lods
pop
and
jg
mov
test
arpl
ss
into
cmp
cltd
xor
fwait
cmp
cld
popf
adc
in
cmpb
mov
push
decl
outsb
sbb
loope
cmpb
ljmp
nop
scas
mov
mov
int3
subb
xor
mov
arpl
arpl
inc
mov
test
pop
lods
pushl
ja
xor
adc
aaa
pop
js
mov
jns
bound
sahf
add
push
out
int3
pop
mov
arpl
cmp
or
mov
ljmp
pop
in
lock
sub
fsubrs
push
pop
pop
decl
mov
mov
cmp
adc
pop
jne
mov
jg
jmp
imul
add
dec
xchg
push
mov
push
mov
outsb
xor
pop
cmc
clc
daa
add
data16
adc
pop
xchg
decl
aad
ror
inc
iret
std
mov
int3
adc
ljmp
xor
icebp
nop
out
ljmp
pop
rcrb
gs
mov
ret
mov
pusha
xor
fiaddl
xor
outsb
test
loopne
adc
adcb
jle
inc
mov
jmp
js
mov
nop
add
add
mov
jmp
mov
or
ss
push
mov
mov
mov
jle
fwait
jb
adc
dec
nop
dec
xchg
push
adc
sbbl
push
movsb
mov
jg
cli
in
inc
and
popa
imul
test
aas
jecxz
enter
clc
xorl
fistpl
and
cmpsl
xor
pop
mov
je
lock
lea
mov
inc
mov
test
pop
mov
sub
pushf
pop
lds
pop
and
call
inc
mov
xor
ljmp
lods
push
aaa
xor
inc
cmp
xor
ljmp
jge
inc
clc
mov
bound
lods
push
pop
andb
lcall
in
mov
jno
bound
xor
inc
data16
adc
xchg
push
scas
addr16
movsb
jbe
jp
arpl
decl
lods
xor
scas
test
incl
push
lods
mov
mov
xor
mov
mov
add
cmp
repz
loop
pop
push
notb
xor
mov
mov
btc
not
jbe
xor
call
cmp
setne
imulb
testl
jmp
lods
adc
add
ljmp
push
jl
push
jno
outsl
sbb
test
and
stos
fdiv
or
lahf
cmp
shl
pushl
add
imul
jno
lods
sub
mov
or
gs
mov
push
adc
mov
adc
rcrb
jg
mov
sbb
pop
and
shr
lods
pop
inc
clc
outsl
loope
xorl
inc
dec
movl
mov
push
scas
push
addr16
fsubrs
or
cltd
push
push
cli
ret
imul
incl
dec
stos
rol
mov
hlt
jbe
mov
cmp
mov
inc
xor
lcall
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
xchg
mov
mov
shll
ss
incl
ja
sbb
pop
adc
fcomps
inc
icebp
aas
cmp
and
jnp
sub
lods
cs
lcall
aaa
jecxz
jbe
mov
adc
decl
sub
add
fimull
scas
mulb
clc
sbb
in
je
testl
call
mov
cmc
jl
jnp
cmc
cmc
cmp
lock
dec
sub
fwait
add
jns
sub
mov
mov
add
add
sbb
hlt
xorb
add
stos
cs
clc
push
insb
lret
bound
in
adc
out
decl
orl
iret
cmp
inc
push
data16
or
or
add
and
popa
es
clc
decl
or
dec
pop
inc
inc
xor
decb
ret
fisttpl
das
sbb
dec
ljmp
mov
lds
mov
cmp
xchg
rcrb
fldcw
aam
call
test
push
fisttpll
movsb
outsl
stos
test
cmp
call
decl
inc
mov
in
dec
aam
xchg
test
lock
popa
or
movsl
cmpsb
sub
les
pop
mov
jo
sbb
subb
sbb
jmp
mov
test
mov
nop
dec
repnz
inc
lods
imul
adc
jo
or
fwait
fs
das
loop
daa
inc
incl
xchg
sbb
pushf
in
sub
dec
sbb
push
lods
mov
and
add
mov
inc
test
hlt
xor
xchg
fisubs
dec
xchg
pop
popf
sti
mov
int3
pop
xor
cltd
xchg
addl
push
mov
pop
pop
adc
clc
je
psllq
cwtl
sub
or
movsl
fldl
mov
add
or
lcall
sbb
lods
scas
ficompl
mov
pop
out
dec
call
mov
mov
test
jmp
mov
add
push
sbb
pop
sahf
and
decl
or
jmp
andb
mov
movsb
cli
outsb
int
or
call
into
movsl
jo
cltd
fisubl
xchg
mov
popw
sbb
add
sbb
pushf
jne
icebp
mov
push
cwtl
jbe
out
cli
decl
jmp
sbb
pop
or
rol
rolb
out
inc
xchg
stos
dec
in
dec
dec
incl
cld
jle
dec
scas
lds
jle
mov
lahf
push
pop
dec
loope
scas
push
test
scas
jno
pop
xchg
sahf
xchg
mov
leave
mov
dec
mov
sub
add
std
add
mov
add
lock
test
or
push
lahf
movsl
inc
aad
inc
not
std
sbb
adc
test
push
or
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
push
push
sub
mov
insl
repnz
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
dec
mov
push
ficoms
push
lret
jbe
imul
inc
or
movl
orps
mov
sub
fwait
and
imul
jmp
jle
jno
inc
cmp
cmc
shl
lcall
into
in
cmp
jg
icebp
es
xchg
fadd
xor
das
xor
xchg
shrl
rol
fbstp
in
push
xchg
add
cltd
loopne
mov
pusha
sbb
inc
pop
mov
gs
mov
es
pop
pushl
jecxz
mov
decl
lcall
jmp
and
jo
hlt
mov
cmpl
imulb
pop
jecxz
cmp
ja
ljmp
cli
or
pop
rcrb
sub
enter
mov
test
cmpl
pop
jge
sub
push
rcrl
mov
xchg
arpl
shlb
and
cld
inc
jle
shll
daa
lods
dec
xchg
push
xor
jno
fsubrl
dec
mov
dec
cmp
xlat
cwtl
mov
and
ret
into
push
xchg
pushf
cmp
test
mov
xor
jmp
or
out
lock
xchg
push
daa
sbb
loopne
mov
imul
ja
jmp
and
fistl
hlt
adc
sub
out
outsb
addr16
jmp
sbb
out
aas
cmp
bound
push
rcrb
rolb
movsb
sbb
inc
fildl
insb
pop
fimuls
push
or
in
mov
lcall
nop
data16
jns
cmpb
pusha
iret
loopne
and
pop
inc
dec
mov
out
mov
dec
movl
dec
add
sbb
lcall
mov
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
push
test
rcr
fsubl
arpl
test
clc
cli
gs
inc
push
mov
xchg
aaa
push
decl
idivl
dec
addb
push
fisttps
cmp
ds
jo,pt
jmp
pop
test
idivl
inc
inc
mov
sub
outsl
mov
inc
ret
mov
movsb
mov
std
lcall
fdivrs
inc
push
mov
pushf
xchg
sub
ljmp
jmp
pushl
or
int
dec
test
pop
jne
cmpsb
adc
scas
mov
mov
lock
sarb
hlt
cmpsb
sbb
gs
ljmp
js
mov
lret
push
pop
sbb
xchg
fsubrl
pop
inc
shrb
popf
ret
aas
call
cld
inc
xchg
popa
lahf
scas
or
or
pusha
sahf
out
fs
inc
lcall
incl
add
sub
cmp
cli
scas
and
adc
shrl
sub
adc
stc
pusha
into
call
push
push
add
lcall
incl
neg
jbe
and
xor
push
sbb
cmpsb
mov
je
mov
adc
ss
or
sti
fdivp
dec
fimull
shlb
lret
loope
fwait
cmp
mov
lret
jmp
pop
ds
call
pmulhw
dec
fmuls
out
int
adc
xchg
ficompl
mov
insb
aas
mov
pop
and
inc
test
cmp
push
pop
rcrb
out
pop
sbb
jmp
mov
jg
add
jge
inc
mov
stos
mov
adc
cmp
dec
mov
in
inc
in
push
push
sbb
mov
dec
jecxz
inc
mov
sti
pop
int3
lock
rclb
outsb
in
adc
xor
call
sub
repnz
mov
in
mov
jmp
pop
gs
ret
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
addr16
mov
insb
push
jl
pop
cld
or
popa
push
dec
mov
dec
adc
lcall
ljmp
or
jecxz
in
xchg
dec
mov
cltd
jg
and
and
xor
push
iret
in
mov
insb
mov
mov
mov
xor
adc
ror
std
stos
and
xchg
out
dec
scas
jge
or
push
loopne
jg
dec
js
pop
into
repz
mov
ljmp
adc
stos
movaps
xchg
xchg
call
and
push
dec
adc
ror
inc
ds
mov
call
dec
mov
stos
and
jp
fnstcw
bound
fcomip
adc
loope
inc
push
jle
mov
roll
adcl
sub
hlt
stos
adc
add
mov
ret
mov
dec
jmp
xchg
cwtl
xchg
jno
add
ljmp
rcr
xchg
jg
aas
fdivl
add
dec
and
ja
sub
enter
pop
jnp
or
fisubl
or
push
jg
scas
dec
out
test
sub
inc
pushf
frstor
sbb
jne
aam
outsl
decl
in
repz
imul
lods
or
repnz
add
xlat
sbb
loopne
pushl
pop
and
xor
xchg
pusha
xor
dec
popa
stc
subl
stos
xchg
fiaddl
ret
ljmp
cmc
xor
push
lods
xlat
adc
repnz
push
sarl
jg
fisttpl
cmp
lcall
sub
roll
mov
pop
popa
js
lret
push
push
ja
mov
insl
loopne
pop
cmp
call
push
sahf
jbe
sbb
int
dec
lret
pop
mov
aaa
shll
ljmp
lahf
cltd
mov
std
jmp
pop
sahf
iret
push
sti
rolb
insl
cmp
pop
cld
jmp
pop
pop
sub
xchg
insl
stc
not
and
sbb
xchg
jp
mov
fnstenv
or
xchg
and
dec
mov
xchg
xchg
dec
jle
ret
lcall
leave
and
test
loop
sbb
jb
popf
add
dec
je
js
call
imul
incl
sub
lahf
in
pop
lds
pop
fadds
mov
adc
mov
pusha
adcb
sbb
test
mov
mov
push
inc
mov
and
ljmp
xor
movsb
daa
outsl
rorl
int3
sbb
in
and
mov
arpl
mov
push
xchg
mov
pop
or
mov
push
imul
add
mov
xchg
ja
lahf
pusha
imul
jb
add
mov
add
addr16
call
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
aad
xchg
or
jg
push
mov
inc
adc
dec
lcall
movsl
stc
xorl
mov
pop
sub
jnp
inc
sar
ja
dec
add
sbb
into
scas
and
outsb
add
xchg
and
sbb
divb
and
lcall
and
ret
aad
pop
or
sahf
push
out
imul
xchg
mov
and
call
pop
push
push
jae
jp
adc
les
xchg
push
push
pop
push
sbb
and
cmpl
add
decl
repnz
movsb
aad
xchg
stc
mov
in
mov
lods
xchg
dec
sub
xchg
lcall
and
int3
and
mov
mov
je
mov
cmp
pop
inc
loopne
jg
test
or
idivl
fsin
xor
inc
xor
mov
std
xchg
add
jbe
int3
add
sub
fwait
aaa
dec
cli
ljmp
dec
mov
fisubl
cmp
cltd
movl
into
jmp
aas
adc
dec
jbe
movsl
loope
dec
call
push
ret
inc
inc
jecxz
popf
test
std
xchg
xor
cmp
mov
stos
mov
mov
ret
lret
sub
push
addr16
andb
push
jmp
inc
jg
push
out
pop
xchg
sahf
inc
jno
sbb
mov
sub
mov
mov
pop
mov
dec
push
out
mov
inc
xchg
mov
clc
ret
fbld
dec
sahf
call
testl
mov
sub
mov
incl
cmc
cld
add
mov
mov
or
or
mov
mov
pushl
mov
or
mov
push
xchg
cltd
aad
jb
dec
push
lods
mov
cmp
stc
push
sub
jl
mov
jle
add
sahf
js
hlt
pop
add
decl
add
xchg
in
repnz
outsb
sub
mov
sbb
xchg
mov
test
cli
lods
cmpsl
or
incb
insb
mov
jbe
imul
icebp
sbb
popf
push
es
push
inc
cmp
rorb
inc
mov
leave
jnp
mov
push
cli
jg
addl
ds
dec
mov
and
cmp
and
outsl
nop
mov
jge
push
xor
jg
xchg
pusha
and
ds
sub
pop
jbe
test
lcall
xor
mov
cmc
xor
outsl
cli
pushl
mov
sbb
push
roll
into
dec
and
jnp
jbe
ljmp
xchg
lret
insb
inc
imul
mov
ret
popa
out
rorb
cmp
cmpsl
repnz
push
mov
and
add
push
adc
add
data16
clc
les
jge
mov
mov
outsl
aas
inc
loope
mov
cmp
fcoms
cld
jg
cmpsl
sub
cmpl
mov
std
lock
dec
arpl
dec
jae
sbb
call
mov
repz
and
ffree
popf
imul
xlat
jg
fdivl
cmp
imul
pop
pop
out
inc
pop
add
iret
inc
pop
mov
pop
in
ds
popf
ljmp
xor
test
push
aas
shl
pop
jge
je
or
lcall
incb
ja
inc
xlat
rcr
movsb
cmc
cs
cmpsb
sbb
incl
xor
xchg
mov
push
cwtl
insl
cs
fwait
sarl
cmpsl
mov
dec
sarl
mov
jb
pushl
cmpsb
push
inc
dec
jnp
xchg
push
push
repz
lock
sbb
and
popl
cmp
stos
jae
push
pushl
pop
xchg
or
adc
mov
push
adc
fs
imul
mov
ljmp
mov
pop
fwait
adc
outsb
hlt
inc
fwait
sub
pop
cmp
jnp
jp
or
es
mov
lea
fists
jmp
add
popf
add
out
clc
dec
loopne
jbe
cmpsl
hlt
adc
cmp
adc
pop
push
or
cmp
fsubrs
ljmp
pusha
mov
jb
pop
xchg
repz
scas
test
dec
insb
or
push
lret
dec
mov
call
mov
mov
mov
pushf
fimuls
add
test
jmpw
clc
ljmp
mov
stc
outsl
push
lret
cltd
pop
leave
jp
xchg
push
rorb
mov
shrb
lret
sub
in
push
sub
push
cmp
jbe
pop
sti
adc
push
xchg
insb
mov
mov
stc
pop
lret
jg
cmp
sub
pop
adc
das
jb
mov
or
cltd
arpl
adc
xchg
adc
test
adc
mov
push
rcrb
cmp
xchg
scas
in
inc
in
fdivr
mov
sahf
mov
lcall
ds
adc
enter
lods
cmpsl
repz
pop
push
mov
pop
mov
pop
aas
fildll
or
and
lret
lods
or
lretw
and
push
lock
xchg
aam
dec
xchg
jge
xor
incl
cld
pushl
sub
je
gs
out
cwtl
jne
sbb
popf
fs
aam
addr16
adc
cmc
inc
sub
decl
test
rcr
dec
pop
or
ja
inc
mov
sbb
aaa
push
sub
call
cli
roll
sbb
jno
add
sbb
add
es
in
jmp
cld
adc
bound
test
gs
repnz
aas
sti
mov
imul
repz
and
jb
jbe
xchg
sub
mov
out
into
dec
shll
xorl
dec
stos
dec
jae
push
ds
sub
fcomps
jo
ljmp
test
cld
mov
arpl
sub
fisubs
subl
in
les
imul
loope
into
push
mov
sbb
mov
push
icebp
aaa
add
mov
leave
mov
push
ret
enter
call
cmovns
inc
mov
es
out
imul
dec
imul
cmp
add
mov
fs
or
decl
cs
fs
xchg
dec
imul
cld
lcall
pop
dec
lds
sbb
or
cltd
sbb
mov
xchg
lea
jb
inc
cld
insb
or
push
lcall
push
sbb
call
repnz
clc
add
arpl
insl
adc
lock
jo
sbb
pop
test
pop
cmc
incl
push
pusha
jbe
pop
pop
in
loopne
adc
pusha
inc
push
pop
in
jg
lret
in
push
aad
imul
push
xchg
jp
inc
mov
lcall
lods
aaa
lcall
mov
sub
xchg
xor
inc
fadds
cmp
cmpsl
cmpsl
imul
jp
mov
push
dec
rcll
movsl
lods
incb
mov
outsb
fdivr
lcall
out
sub
mov
leave
pop
arpl
lods
sbbl
inc
add
mov
fcmovb
arpl
sbb
out
xorl
cli
sbb
shll
lods
and
or
incl
out
and
scas
or
jle
call
adc
add
arpl
pushl
pop
cmp
mov
push
fs
pop
adc
call
add
sbb
cmp
or
aad
out
cs
ret
lock
mov
out
and
cmpb
fmull
mov
inc
ficompl
cmpsb
push
popa
pop
int
clc
pushl
les
dec
out
stos
pop
cmp
movsb
data16
aam
ret
mov
mov
add
ljmp
adc
mov
xchg
fwait
push
cmpsl
repnz
push
rcrl
jle
ds
dec
pop
sub
incl
bound
cld
jp
cli
mov
imul
adc
add
ss
fsub
inc
into
std
cmp
pop
loopne
addr16
add
clc
pushl
sahf
mov
sbb
xor
jo
xor
lock
jg
stc
pushl
test
push
daa
clc
addr16
data16
push
std
and
sub
cwtl
loope
pop
cmc
ja
decl
fstps
cmp
jecxz
xlat
or
pop
fsts
decl
ficoms
xchg
insb
lds
gs
popf
icebp
jmp
push
mov
stos
mov
stos
add
daa
mov
dec
cld
push
or
and
nop
inc
xor
loope
jmp
cmpsl
imul
ljmp
mov
inc
xchg
into
sbb
adc
jecxz
dec
sbb
adc
test
orl
shrl
pop
cmp
add
icebp
int3
in
into
pop
xlat
adc
mov
lods
int
pop
jp
stos
push
inc
mov
and
push
pushl
cmpsb
jge
push
int3
add
mov
mov
xchg
fisttps
jg
lcall
mov
in
loope
cmp
testb
xor
sub
fsts
mov
sbb
mov
sbbl
jbe
jg
lcall
dec
shl
fistl
sbb
and
decb
outsl
dec
test
mov
outsb
sub
sbb
cld
and
jg
out
ss
mov
data16
mov
outsb
ds
push
cmpsb
xchg
ljmp
icebp
adc
int3
enter
lahf
sbb
outsb
sbbb
sbb
movsl
add
into
inc
jecxz
out
jns
push
or
lcall
daa
cmc
cltd
xorl
lds
popa
mov
xchg
mov
push
mov
decl
push
dec
fwait
sti
ljmp
ljmp
add
inc
ljmp
cs
mov
lcall
and
dec
push
lods
fs
stos
inc
pop
loope
call
adc
andl
mov
stos
xchg
jmp
push
shll
roll
and
lcall
cltd
adc
popa
aam
fcompl
stos
int3
psrlq
out
mov
and
sbbb
add
inc
inc
mov
inc
rol
incl
mov
push
sub
shlb
xor
movsb
das
jne
pop
xchg
add
out
icebp
rclb
movsl
xor
mov
jg
sub
aaa
mov
cwtl
fcoml
adc
mov
sub
pushl
cmpsb
mov
sbb
rcr
popa
stos
xchg
stc
into
aas
mov
mulb
popf
sahf
fcomip
add
cmpsb
jmp
movsb
cld
push
cwtl
xchg
jbe
in
popf
cmp
mov
push
cmp
sbb
arpl
push
adc
sub
jb
adc
push
cld
decl
sub
push
movsb
imul
cs
outsb
xchg
addr16
pop
lcall
shlb
loope
enter
pushf
ss
into
divl
dec
fildl
movsl
sbb
jg
jg
addr16
pop
test
ljmp
ljmp
jmp
add
cmc
inc
je
push
sahf
lds
scas
mov
fisttps
mov
xor
cld
jns
lods
cmp
gs
jae
iret
or
mov
jns
incl
pop
add
mov
outsb
out
nopl
push
fs
xchg
add
push
sar
hlt
xchg
clc
adc
or
loopne
loopne
push
andb
sbb
test
push
mov
push
outsb
loopne
mov
jle
es
mov
xchg
push
inc
or
inc
lret
decl
dec
push
jns
cltd
loope
adc
mov
jle
jno
mov
pop
sbb
add
clc
in
imul
sarl
hlt
mov
jmp
pushl
xlat
sarl
dec
adc
add
pop
xchg
icebp
arpl
data16
inc
lahf
mov
jmp
mov
decl
lock
jnp
cmp
cld
add
dec
pop
ss
mov
sarb
dec
mov
xchg
clc
mov
enter
mov
jmp
enter
push
outsb
in
fisubrl
jle
arpl
mov
mov
lods
cs
imul
std
sbb
outsb
inc
cmpsb
xchg
add
out
sub
push
scas
push
imul
sbb
cmp
rolb
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xor
sar
fdivr
call
cmp
ss
ja
mov
lcall
dec
inc
sbb
jmp
fisttps
sti
loopne
mov
add
decl
xchg
xor
jne
rorl
cwtl
je
pop
pop
ss
dec
xor
xchg
test
adc
cmp
jmp
and
scas
cld
mov
push
mov
mov
jnp
filds
call
xchg
in
insl
test
pushf
sub
enter
sbb
sub
xchg
outsl
xchg
pop
cld
pushl
adcl
idivb
jle
adc
adcl
and
enter
cmovp
xchg
and
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
xor
incl
dec
lds
je
xor
out
call
imul
mov
pop
push
ljmp
jo
ljmp
fisttpl
fnstcw
add
push
mov
cltd
add
and
push
leave
in
pop
jg
dec
idivb
lcall
or
push
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pop
js
ljmp
sbb
leave
jle
jp
jle
sbb
and
das
pop
iret
xor
fwait
pushl
adc
cmp
xchg
mov
mov
or
sbb
cmp
xchg
xor
push
test
decl
dec
jb
rol
xchg
xchg
sbb
ror
sbb
dec
cmp
pop
out
and
or
push
je
mov
out
frstor
cmpsl
add
pushl
test
inc
lods
cmc
xor
je
xchg
xchg
mov
aad
push
dec
mov
mulb
pop
sti
addb
jmp
cmpsl
in
aaa
cmp
mov
out
ljmp
dec
xchg
mov
sahf
pop
cwtl
add
xor
loop
mov
and
insl
mov
sti
je
sbb
xchg
sub
mov
out
loope
ret
jnp
dec
stc
jae
add
decl
in
add
leave
add
mov
movsl
idivb
lods
test
fwait
repnz
and
pushl
sbb
add
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
repnz
pop
cmp
jmp
insb
popa
jg
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
adc
jb
jmp
lret
stos
int
pop
sbb
fistpll
mov
sti
jmp
fisttps
in
mov
aaa
push
cmc
daa
negb
ja
jb
pop
clc
jae
and
iret
fistpl
push
ficoms
fistpll
add
add
mov
push
clc
incl
mov
pop
sarb
sub
ljmp
xchg
je
shl
sub
aad
push
test
xor
sub
sbbl
incl
scas
xchg
loope
pop
std
add
aaa
fldcw
xchg
iret
hlt
cmc
jbe
inc
jb
lock
xchg
sub
loope
hlt
rol
and
aas
mov
jmp
xchg
lret
cwtl
jl
dec
sbb
iret
into
mov
sbb
jb
jmp
movsb
pushl
pop
insl
dec
mov
sub
mov
pushl
xchg
inc
out
xlat
mov
xor
sbb
imul
cmpsl
cmp
pop
call
mov
ljmp
pop
cmp
push
cmp
cwtl
pusha
shlb
xor
pop
cmp
lcall
and
aas
cmp
ds
cwtl
push
ds
push
lea
jg
sub
mov
nop
vunpcklpd
or
mov
icebp
enter
inc
mov
cmpsl
out
adc
daa
inc
or
pop
push
decl
inc
test
or
les
pop
lock
int
push
or
ret
xchg
xor
jb
sbb
mov
dec
leave
aaa
mov
jb
jge
jo
out
adc
mov
cmp
ret
sbb
fldl
sbb
loopne
mov
mov
movsl
xor
mov
jmp
jmp
mov
fistpll
aad
jno
and
loop
ss
insl
outsl
mov
mov
pop
adc
mov
fidivl
mov
xor
sub
nop
dec
aaa
mov
loopne
ljmp
add
xchg
cmpsb
xor
incb
ljmp
jecxz,pt
shll
insl
add
decl
lods
sub
scas
or
push
lahf
mov
jge
dec
arpl
lods
arpl
out
mov
in
pop
ret
inc
fcoml
fldl
lock
loopne
xchg
ljmp
ljmp
popa
mov
xor
cli
outsb
add
mov
pop
adc
sbb
decl
in
movsl
xlat
aam
mov
xchg
bound
cmp
cwtl
insb
xor
ljmp
or
jne
mov
push
cmp
pop
inc
pop
in
mov
xor
ret
test
mov
jae
dec
xor
fs
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
shl
dec
incl
push
daa
dec
in
lret
daa
int
sti
sbb
and
sub
xor
daa
mov
sub
xchg
or
pop
nop
or
femms
frstor
pushl
je
shr
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
outsl
push
dec
aad
cmp
inc
dec
jmp
clc
in
insl
mov
rolb
mov
stos
leave
add
dec
add
jl
lcall
cmpsl
inc
xor
lahf
xchg
and
add
mov
lods
sbb
outsb
icebp
and
pop
mov
stos
popf
call
mov
loope
clc
enter
and
cmp
outsl
shll
and
hlt
loopne
bound
sbb
out
lcall
sbb
out
push
xor
add
mov
mov
imul
jb
std
lcall
mov
and
shr
or
xchg
adc
stos
push
and
jg
sub
push
dec
push
jl
in
fisttpll
incl
aam
add
mov
outsl
add
jnp
mov
andb
xor
adc
test
in
cmc
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
mull
xor
les
cmc
mov
loopne
stos
add
loope
mov
and
lds
jb
mov
cld
pop
enter
and
out
jbe
mov
and
icebp
push
add
or
jns
push
jg
cmp
xor
xchg
mov
mov
mov
adcb
xor
mov
pop
mov
pop
movsb
call
les
ljmp
jb
sti
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
jmp
mov
ret
inc
jae
loop
enter
mov
clc
cmp
jmp
cmc
lcall
lock
or
push
jb
pop
loope
nop
mov
pop
cld
bound
sub
lret
ja
xor
cltd
cld
or
pop
pop
test
add
pushl
jp
or
add
insl
ficompl
rorb
inc
mov
mov
mov
fwait
jl
gs
out
pop
jl
ss
jg
cld
loop
pop
pop
jl
inc
dec
inc
pop
mov
test
icebp
std
jmp
ret
jl
inc
or
sar
xchg
and
push
xor
arpl
shlb
mov
lock
fists
dec
scas
cmp
or
sub
push
insb
mov
push
repnz
jg
xchg
push
mov
jne
jnp
pop
inc
add
cmp
xchg
mov
add
cmpsb
je
test
das
mov
xor
jo
mov
mov
dec
pushf
lcall
push
jo
pop
push
loopne
mov
xor
out
mov
pusha
ljmp
sbb
jl
nop
mov
pop
gs
andl
xor
sahf
ja
sahf
mov
mov
gs
incl
and
rcrb
push
popa
into
push
loopne
das
mov
xor
adc
push
aam
cmp
es
out
cli
rcr
pop
imul
scas
add
sbb
js
add
jbe
into
lcall
push
cwtl
aam
sbb
test
mov
faddp
mov
dec
ds
sbb
ljmp
push
mov
dec
cmp
jne
mov
sub
push
test
incl
es
pop
ss
es
std
mov
push
pusha
test
xor
jmp
push
dec
test
test
out
xchg
pop
stc
daa
repz
mov
mov
stc
ljmp
push
fistl
dec
push
push
decl
xchg
sub
cmp
cmp
add
incl
mov
mov
jge
pop
sahf
aad
mov
cmc
fisttps
jo
lret
ret
sahf
pusha
dec
iret
pop
mov
in
ja
mov
pushl
daa
cmp
pop
jl
pop
rol
sub
mov
jp
decl
mov
dec
add
insl
push
jae
pop
jbe
adc
xor
mov
jmp
cmpsl
cmp
in
repnz
ds
in
mov
xchg
cmpsl
fisubs
sarl
pop
ljmp
bound
push
shrl
mov
pop
add
or
and
lock
decl
nop
or
sbb
xlat
fidivrl
dec
aam
jecxz
inc
adc
out
clc
xchg
add
aad
movsl
pop
add
sub
pop
jl
gs
mov
xorl
sub
dec
mov
pushl
into
xor
mov
xchg
jno
sub
into
push
test
mov
call
sub
ds
xor
sbb
movsb
fisubl
imulb
cmp
faddl
mov
push
mov
adc
sahf
xor
and
into
lahf
cmpsl
cmp
jg
scas
mov
sub
shrb
cmpsb
sub
outsl
or
sbb
jg
aam
sahf
xchg
imul
inc
fisttpll
mov
ss
das
jmp
mov
aas
jge
scas
dec
je
call
inc
lea
das
mov
mov
decl
movsl
push
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jns
scas
or
mov
sbb
inc
and
pop
jne
stos
and
mov
pop
stc
dec
aas
fildl
dec
push
push
cmp
jge
movsl
out
jge
xor
testb
das
cli
fildll
xchg
mov
dec
into
mov
cmpsb
jle
or
dec
push
dec
into
fisttps
ss
dec
popa
rolb
rol
cmp
jg
je
sahf
arpl
dec
and
cmp
sbbb
jg
xorb
xchg
push
mov
push
sub
cmp
sub
cld
or
pop
loopne
insl
jg
loop
test
cwtl
movsl
es
adc
mov
sbb
push
clc
mov
fmull
pushf
and
sub
fxch
gs
dec
in
jb
pusha
es
lahf
mov
inc
js
mov
scas
movb
jne
iret
mov
xchg
clc
inc
xchg
pop
ja
xor
push
inc
xor
ss
jmp
xchg
push
inc
jne
cmp
les
or
fldcw
xchg
sbb
mov
cmp
push
mov
gs
incl
and
lock
dec
mov
das
jp
lret
scas
cmp
cmp
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
or
fisttps
testb
sub
mov
stos
mov
clc
xchg
imul
clc
fdivr
lcall
push
jbe
ss
sub
cmpsb
cmpsl
jb
fs
daa
sbb
inc
cmp
xchg
fdivrl
lods
decl
xchg
andb
add
inc
scas
pop
jmp
dec
inc
maskmovq
divl
sub
incl
cld
inc
orl
call
and
lods
sbb
mov
ljmp
stc
pop
cmpsl
insl
cmp
dec
xchg
dec
mov
mov
cltd
add
xchg
comiss
test
push
mov
lcall
call
fdivrp
push
push
mov
insl
mov
ja
stc
push
xor
addr16
cwtl
cld
xchg
cld
incl
pop
out
aaa
pushf
push
jne
mov
dec
adc
icebp
pushl
adc
icebp
ret
mov
sub
test
iret
imul
ljmp
aas
adc
sbb
add
hlt
jmp
lret
push
mulb
js
xchg
stos
sub
test
and
mov
jle
outsl
pushf
xlat
adc
subl
call
int3
xchg
leave
stos
mov
pop
repnz
pushf
push
out
test
or
sar
ljmp
mov
pop
repz
mov
cmp
jecxz
mov
cmp
xchg
repz
sar
in
lods
dec
rcll
imul
nop
inc
bound
mov
mov
adc
mov
push
pop
ja
jmp
mov
dec
mov
jbe
iret
fs
mov
out
inc
inc
out
cmp
data16
xchg
in
std
in
dec
js
lret
ja
mov
inc
frstor
decl
mov
cltd
mov
or
add
shrl
divb
sahf
repz
jg
lods
mov
push
xchg
xchg
cmpsl
imul
lcall
loopne
pop
imul
loope
adc
xchg
jg
mov
xor
repz
xor
jmp
jmp
or
aaa
xlat
lock
stos
adc
pop
lret
push
mov
repz
jbe
ljmp
sbb
ficomps
imul
sbb
loop
pop
std
loope
dec
pop
fstl
repnz
aas
dec
jne
js
pop
pop
cmp
movsb
jmp
sub
lods
cltd
in
loop
clc
dec
add
xor
shlb
cmp
inc
and
sahf
jp
outsb
popf
adc
cmp
lcall
sbb
cmp
xor
adc
lcall
mov
push
ret
cwtl
jg
cmp
iret
inc
insb
test
cmp
test
push
cmp
pop
mov
enter
jmp
repz
fistps
inc
mov
add
in
push
pushf
sbb
mov
lcall
int
popf
sbb
nop
jg
mov
jae
dec
in
or
test
push
insb
out
test
ljmp
jbe
add
icebp
cmp
out
enter
in
mov
test
and
mov
lcall
push
mov
mov
pop
ja
scas
pop
shrl
adcb
ja
ljmp
pushl
xor
inc
sti
dec
push
jmp
popa
shll
xchg
in
orl
mov
repnz
push
rorl
push
jb
xchg
ret
cli
lahf
dec
sub
std
xor
xchg
xor
add
test
hlt
mov
enter
ja
pusha
cltd
call
loopne
negb
lahf
idivb
dec
jle
mov
mov
mov
ljmp
jle
xchg
xchg
sub
out
cmp
inc
push
decl
shl
push
mov
loope
pop
or
add
bound
cli
out
dec
repz
dec
xchg
adc
cmpsb
ret
mov
dec
subl
icebp
lock
jb
mov
incb
sbb
es
or
out
arpl
lock
dec
inc
xchg
test
lods
loopne
sbb
fsubrs
or
inc
cmp
push
jae
sbb
jp,pn
xchg
and
ja
jb
xchg
ja
pop
lea
ljmp
xorl
xor
sbb
aam
pop
push
in
push
pop
mov
cwtl
or
inc
in
mov
int3
mov
push
inc
dec
pop
push
popa
scas
cli
pushl
mov
ja
int
push
clc
loop
in
fmuls
cmp
das
hlt
test
mov
dec
jle
pop
test
pop
les
inc
jns
inc
shrb
dec
imul
insb
dec
xor
xchg
insl
inc
int3
andl
mov
cmpb
std
adc
lock
push
jnp
adc
hlt
ljmp
xorl
push
adc
mov
outsl
int3
imul
mov
push
cmp
pop
bound
add
push
jle
sbb
jge
mov
xchg
pushf
in
xchg
stos
aad
test
and
cmp
jg
mov
mov
enter
pop
clc
jecxz
ret
int3
xchg
sub
outsl
rcrb
jmp
jo
scas
jne
xor
pusha
adc
repz
hlt
jns
add
inc
mov
cmpsl
and
sbb
sbb
incl
daa
sub
jmp
lds
test
in
sub
ja
decl
push
mov
push
inc
pushf
mov
les
stos
inc
fidivs
cmp
and
sub
jl
bound
dec
jp
fwait
movsb
pop
aad
mov
into
xlat
iret
mov
xor
adc
pop
fisttpl
lock
mov
jl
negl
mov
daa
lods
fisttps
loope
xor
idivb
iret
adc
mov
jg
sbb
out
outsl
inc
inc
je
fsubs
loop
xchg
mov
pop
pop
adc
mov
scas
ljmp
ljmp
shll
imul
cs
dec
and
push
iret
xlat
leave
js
push
push
jecxz
call
mov
aam
push
jmp
outsb
call
and
hlt
dec
mov
call
div
testl
xlat
jecxz
mov
mov
out
imul
add
adc
or
lret
lock
decl
in
cmp
test
in
xor
pop
ret
add
mov
xchg
jnp
push
xchg
test
dec
or
mov
mov
popf
dec
jo
cmpsl
int
inc
in
fstpl
jns
movsb
mov
ljmp
mov
xor
pop
fisubs
cmp
push
lods
pop
cld
scas
shlb
pushl
std
inc
pop
gs
repz
lret
sub
push
add
lcall
push
push
jecxz
aas
arpl
jmp
mov
jg
mov
outsl
lock
dec
ja
sar
jmp
and
mov
jnp
mov
cmpsl
sub
mov
lret
enter
dec
test
adc
mov
push
mov
add
sbb
adc
rcrb
lcall
xor
inc
xor
daa
fdivl
xchg
mov
loopne
sti
mov
push
sbb
pop
inc
sbb
addb
and
jmp
sar
xchg
mov
push
cmc
mov
stos
push
cli
push
or
iret
mov
cld
or
pop
add
ret
jp
push
inc
mov
xor
clc
div
xchg
fistps
xchg
lahf
mov
cmp
jae
xchg
lock
cmc
mov
mov
mov
decl
xchg
dec
push
adc
pop
enter
fidivs
pop
imul
movl
call
loopne
iret
mov
out
inc
mov
loop
loope
adc
mov
xor
cwtl
jnp
call
mov
and
call
js
nop
pop
or
mov
setp
lcall
aad
xchg
mov
cmp
mov
lret
push
outsb
mov
shl
movsb
add
lcall
sbb
add
fbld
jno
mov
push
hlt
fcoml
pop
jg
jmp
outsl
std
jp
add
pushl
cmpsl
xchg
sbb
cmp
mov
mov
subb
lret
push
adc
imul
ret
mov
jns
stc
ret
cmp
out
mov
xlat
add
adc
xor
cld
inc
out
add
dec
rolb
mov
xor
fldt
push
jne
in
es
sbb
repz
popa
call
xor
decl
or
fs
xor
jmp
adc
das
mov
sbb
div
aad
adc
ret
push
jbe
test
incb
mov
aam
inc
fucom
push
in
pusha
xor
fcomps
fbstp
aad
mov
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
fcmove
clc
and
pop
and
xor
jns
pushf
jnp
and
loop
dec
and
aam
sti
gs
call
mov
lods
pop
fs
jb
pop
mov
shl
dec
inc
push
or
cmp
xor
xlat
push
nop
icebp
ljmp
sahf
inc
inc
enter
rep
mov
pushl
pop
sar
lcall
add
dec
and
stos
repz
lea
rcrl
scas
mov
aam
or
add
lea
fcomps
int3
dec
xor
jnp
xchg
pushl
sub
andl
add
lds
jge
mov
decl
jmp
call
pushf
xchg
addr16
imul
mov
aas
pushl
cli
inc
aam
sti
aam
adc
jnp
jo
lea
sbb
mov
dec
mov
gs
clc
incl
sub
cmp
mov
insl
mov
xchg
mul
mov
or
or
daa
jecxz
push
pusha
daa
dec
insl
arpl
icebp
xor
cld
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
addl
adc
pop
sbb
pop
pushf
cli
and
xor
mov
lahf
insl
xchg
cmpsb
movsl
incl
dec
ficompl
popf
out
add
sub
je
mov
mov
incb
jno
cmc
shll
sbb
dec
std
decl
fwait
pop
lea
dec
jb
sar
fcoml
jmp
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
mov
fisubrl
mov
jg
hlt
in
jo
inc
or
shll
dec
xchg
popf
sbbl
push
lahf
sbb
mov
enter
stos
mov
push
or
or
jmp
in
dec
pop
call
negl
xchg
mov
daa
xchg
add
push
adc
int3
mov
shlb
lods
aas
xchg
repnz
push
and
mov
jbe
inc
and
popa
sti
adc
inc
in
cltd
inc
cmovne
xchg
mov
mov
and
jmp
xor
xchg
mov
insl
mov
lods
ss
mov
cli
dec
movsb
js
pop
call
mov
xorb
je
ljmp
decl
inc
or
scas
dec
mov
jge
xorl
adc
lea
data16
sahf
orl
mov
push
das
cmp
ret
cmp
sbb
in
loope
pop
adc
inc
dec
repz
popa
lods
rcrl
sbbl
adc
in
sbb
sti
test
cli
int3
lahf
mov
int
mov
dec
add
incl
in
xchg
xor
ljmp
cmpl
lea
decl
fs
fwait
dec
cwtl
insl
xlat
in
pop
and
push
ret
pop
push
iret
push
cmp
jmp
jmp
inc
jge
aad
std
orb
or
pop
cwtl
push
jl
dec
loop
mov
mov
inc
rcrl
jmp
cld
dec
lahf
shrl
and
test
dec
test
cltd
in
ljmp
push
jo
inc
cltd
sarb
int3
push
cwtl
cwtl
sar
call
incb
test
in
mov
stc
ljmp
sub
adc
mov
jl
ljmp
lods
push
xchg
xor
ss
mov
or
aaa
into
push
pop
inc
iret
aaa
pushl
cmp
sbb
xchg
fidivrl
sarb
jns
ljmp
ljmp
shrb
cld
les
sub
es
ljmp
lock
movsb
xchg
jns
cld
fists
xlat
mov
mov
sahf
mov
subb
or
xor
pusha
shr
out
pop
aaa
in
push
cmp
jae
xor
ljmp
mov
mov
fadd
xor
div
or
xchg
cwtl
jg
jg
xchg
xor
sub
out
cmc
pop
pop
dec
jns
jmp
adc
pop
pop
push
push
jg
push
imul
orl
into
popa
mov
cmp
out
jl
test
out
jae
out
xchg
psrld
push
dec
cmpb
std
out
adc
xor
ss
call
pop
pop
fnstenv
inc
cmp
ja
xchg
out
lds
mov
pop
mov
pushf
adc
pusha
out
adc
xor
aad
sub
cmp
push
fadd
out
sti
es
in
sbb
xchg
stos
ficoms
lock
or
adc
into
and
sub
jecxz
ljmp
xor
pop
pop
cltd
inc
dec
pop
roll
mov
inc
in
jecxz
test
into
pop
out
incl
sbb
pop
mov
cmc
dec
dec
mov
mov
push
bound
inc
fldenv
dec
fisubrs
dec
enter
ljmp
lahf
ret
and
ss
insl
in
in
push
sub
mov
xor
adc
adc
pop
cmp
xor
or
fsubr
pop
int
or
cwtl
loopne
dec
pushf
inc
mov
lcall
test
int
popf
add
xorl
mov
xchg
xor
and
add
ljmp
es
dec
inc
ljmp
adc
or
jmp
int
xchg
fildl
lds
imull
pop
into
or
decl
leave
add
push
adc
les
gs
lods
inc
pop
incl
ja
xchg
movsb
xchg
dec
mov
aad
pushf
dec
or
xchg
adc
mov
test
incl
sbb
pusha
cmp
or
jg
xchg
cmp
sub
cmp
lahf
mov
cmove
test
bound
call
orb
push
lcall
and
pop
push
sub
jg
in
or
fiadds
scas
insb
mov
test
pusha
sub
jmp
out
test
pop
jmp
out
pushf
mov
xor
mov
dec
repnz
decl
inc
jo
mov
mov
loopne
jns
add
sub
call
jecxz
mov
add
inc
addr16
ljmp
mov
scas
push
jne
es
incl
clc
adc
rcrb
test
and
mov
inc
jecxz
and
incl
lahf
loopne
fists
sbb
jb
lcall
leave
stos
adc
adc
and
jnp
dec
ljmp
js
sbb
ret
repnz
fnop
iret
lods
dec
mov
mov
push
jp
ljmp
mov
dec
fdivrs
and
mov
dec
inc
mov
mov
iret
filds
push
mov
add
mov
enter
push
or
add
jl
mov
adc
cld
dec
add
sbb
mov
shrb
out
jne
mov
inc
dec
sub
xor
or
loopne
pop
cmp
jbe
mov
lods
push
push
into
adc
or
ljmp
test
mov
push
pop
dec
inc
cli
imul
cld
mov
lahf
cltd
xor
sbb
jmp
xor
jp
ret
mov
mov
stos
movq
sub
or
mov
decl
in
data16
shrb
pop
jnp
jbe
and
lds
mov
lods
adc
cld
fcompl
repnz
and
mov
mov
xchg
sbb
je
pop
fistps
xor
incl
jb
and
jmp
or
out
and
mov
jle
jge
dec
dec
imull
rcr
loop
call
cld
push
jo
in
cmp
testb
ljmp
jb
out
mov
repz
out
fdivl
frstor
or
mov
je
inc
cmpsl
mov
mov
adc
shll
ret
add
push
decl
push
sbb
mov
ss
inc
shrl
decl
lock
push
cmp
jmp
inc
mov
jno
push
or
and
icebp
or
jns
or
test
shrb
ljmp
test
call
push
testl
decl
or
in
fisttpll
outsl
cs
cmp
cs
inc
sbb
aaa
bound
fcompl
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
cld
mov
pop
fs
dec
xchg
pop
cmp
push
or
mov
aas
rclb
lock
and
mov
cmc
jmp
loopne
iret
idiv
cwtl
lods
xchg
cli
movsb
mov
clc
xchg
add
mov
fisubrl
adc
cltd
jmp
cltd
aas
dec
lods
add
push
clc
in
jmp
mov
sub
loop
fcoms
nop
mov
xlat
cs
fisubrl
mov
scas
test
cli
push
xchg
and
movsl
inc
aas
push
xor
sarl
ljmp
sahf
in
pop
xchg
mov
int3
lds
js
or
mov
dec
jmp
xchg
out
clc
pushl
dec
sti
xchg
testl
dec
jmp
ss
int3
pop
xchg
mov
cld
insb
pop
insb
movsb
xor
dec
adc
sub
cs
psubw
rorb
popa
lret
repnz
and
and
push
xor
je
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
shrl
hlt
jmp
xchg
scas
pop
lock
pop
and
mov
xorb
mov
mov
mov
scas
jmp
jl
jecxz
pop
in
insb
sbb
push
gs
ds
mov
orb
imul
popa
std
das
clc
aaa
cmc
cmp
jp
inc
icebp
push
lcall
fwait
insb
jl
xchg
dec
add
inc
cmp
mov
sbb
cmp
lret
mov
push
push
xchg
pushf
sub
xchg
push
incl
cmpsb
pop
leave
jge
int3
cmp
arpl
sahf
fldl
lret
fs
scas
lea
xchg
cmp
jae
dec
leave
sbb
mov
inc
sbb
fdiv
push
mov
pop
sbb
jecxz
cmpsb
add
cmp
adc
lcall
push
ja
mov
and
insb
lcall
jmp
lods
cmc
popf
dec
fildl
adc
or
mov
push
dec
pop
adc
sbb
dec
pop
test
adc
aad
sar
ljmp
mov
cmp
mov
out
xchg
cmp
aas
or
repnz
fistpll
movsb
pop
test
dec
imul
and
xor
stc
dec
xor
out
push
lds
sbb
movsl
mov
incl
pop
xchg
jae
mov
adc
or
adc
push
ljmp
insb
incl
jbe
cwtl
aam
movsb
enter
ficompl
cmp
rorl
jle
ljmp
inc
push
push
in
arpl
xchg
lds
insl
daa
push
in
pop
lcall
movsl
dec
subb
dec
js
dec
add
pushl
or
xchg
dec
stc
jne
loope
mov
push
xchg
iret
in
leave
add
and
push
add
add
cli
cmp
or
std
loop
or
movsl
push
xor
jmp
les
ljmp
in
adc
negl
mov
cld
xchg
flds
jbe
repz
fcomip
xor
xchg
adc
jecxz
push
popf
testl
cmp
or
cmp
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
lret
aam
dec
jle
jmp
popa
cmpsb
arpl
out
imul
or
mov
insb
mov
push
xchg
aad
dec
mov
sub
subb
ret
lcall
mov
cltd
adc
lds
fdiv
cmpsb
adc
inc
andl
add
cmp
cmp
hlt
jno
sub
leave
inc
adc
dec
scas
loopne
pushl
sub
push
je
arpl
stos
jae
xlat
addr16
sti
sbbl
mov
push
movsl
out
pop
aad
jecxz
jle
in
and
xor
push
shll
lret
stos
push
add
jnp
inc
sub
daa
fmuls
xor
jmp
jmp
mov
mov
sub
jmp
cmpb
test
arpl
mov
jp
mov
stos
nop
out
jnp
cmp
push
pop
aaa
push
add
aam
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
cmp
pushl
lock
sub
scas
cmp
xchg
rorl
add
cmpl
jecxz
je
jmp
data16
int
pop
enter
or
repz
stos
stos
ja
pop
fidivl
jmp
sahf
loopne
dec
push
adc
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
fcomip
lcall
dec
lcall
pop
aad
xchg
xchg
les
jae
dec
mov
mov
fidivs
mov
push
jmp
in
mov
out
clc
sub
cmpsb
mov
adc
adc
int
or
mov
int
mov
cmp
inc
add
mov
mov
or
jnp
and
pop
imul
fdivrp
pusha
cld
ljmp
mov
adcb
jne
xor
decl
bound
pop
adc
pop
movsl
mov
mov
fwait
lea
insb
lock
decl
or
aad
cltd
jb
aas
and
pop
out
xchg
fidivrs
fdivrs
xor
stos
cld
shl
mov
dec
jne
add
inc
clc
insb
xor
inc
fiadds
mov
add
pop
repz
dec
ds
push
push
into
jl
call
mov
jo
xor
cmpsb
test
mov
sti
test
dec
cs
pushl
inc
mov
mov
outsl
jnp
adc
aam
jl
mov
mov
sbb
lcall
push
aam
xchg
sahf
aam
push
outsl
adc
cmp
bound
ljmp
clc
popf
stos
xor
pop
cmpsb
inc
or
add
adc
decl
fucomp
cmpsl
adc
inc
cli
mov
mov
icebp
fistpll
mov
ljmp
icebp
mov
fidivrl
jae
mov
push
negl
int
cmp
dec
push
jbe
sbb
ljmp
fwait
or
mov
adc
inc
or
cmp
stos
cmc
sbb
xlat
ret
mov
outsb
idivb
sbb
jmp
loopne
push
fmuls
xor
mov
shl
xchg
xchg
imul
xchg
cmp
cli
mov
dec
faddp
test
adc
pop
dec
jge
stc
loop
lahf
cmp
stos
imul
ljmp
push
nop
push
cmp
jmp
pop
out
dec
dec
imul
lahf
jmp
inc
mov
adc
mov
push
mov
mov
fstl
dec
pop
shrl
push
insl
loop
push
inc
repz
outsb
ret
sbb
loope
test
test
out
jmp
fsubs
decl
pop
loop
out
arpl
add
call
imulb
repnz
or
dec
ljmp
pop
in
xor
sub
mov
shrb
int
xor
mov
jmp
cmp
imul
ljmp
sub
and
inc
das
jp
int3
dec
ret
mov
jg
out
rorl
jle
xchg
shrb
shld
mov
inc
jne
hlt
inc
fs
outsl
lret
lock
or
sbbl
enter
adc
add
xchg
in
inc
pushf
js
inc
jge
xor
xchg
rcl
adc
sub
inc
and
xor
lea
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
decl
int
clc
adc
ret
lahf
dec
xor
push
andb
testb
out
pop
aam
repnz
sbb
pushf
iret
iret
jg
or
in
in
mov
std
pop
std
mov
pop
fstl
ficoml
or
rcrb
lds
mov
iret
cmp
pushl
add
xchg
xor
into
sahf
pop
sub
mov
scas
xchg
sarb
nop
gs
ljmp
mov
faddl
cmp
imul
aaa
mov
arpl
fnstcw
dec
jg
or
movlps
cmp
mov
adc
nop
dec
pop
into
mov
xchg
push
test
lcall
push
adc
mov
add
xor
lods
shll
add
push
xchg
pop
cmpsl
das
cmc
decl
and
popa
cmp
mov
movsb
pop
hlt
push
lret
enter
sarl
adc
cld
dec
mov
push
leave
or
pop
dec
stos
mov
dec
mov
jg
add
xor
fs
fildll
setnp
aad
pop
aaa
imulb
out
test
fstl
loop
adc
jle
cmp
pop
pusha
mov
mov
nop
dec
aad
dec
push
xor
ficompl
ret
mov
dec
gs
js
push
sarb
test
pop
mov
or
sbb
and
jmp
push
out
push
sbb
js
jo
push
add
push
mov
aam
je
mov
dec
jmp
adc
xchg
out
cli
sbb
dec
pop
aaa
into
mov
cltd
inc
in
dec
mov
fists
rcrb
pushl
js
dec
movsb
and
fiaddl
lahf
pusha
or
mov
adc
cs
or
jmp
add
jns
out
scas
cmp
dec
lcall
mov
mov
and
mov
aaa
rcl
lods
or
sbb
lods
ja
movsb
jmp
push
xchg
push
jecxz
xor
xchg
sub
fimull
lods
push
pusha
sbb
outsb
jge
out
orb
mov
jo
xor
pusha
mov
xchg
xor
xchg
mov
cmp
aaa
jo
xchg
int
incb
pop
inc
leave
repnz
mov
cld
ljmp
gs
cmp
or
insb
aam
rcll
mov
jmp
xlat
or
pop
push
js
cli
adc
filds
flds
jbe
pop
icebp
cld
inc
imul
mov
push
and
add
inc
repnz
and
inc
or
cli
ljmp
testl
or
lods
jmp
push
jne
sti
jmp
mov
cs
ljmp
cli
int
ja
adc
enter
adc
xchg
std
add
push
loop
je
add
dec
lcall
and
jg
adc
notb
frstor
add
ljmp
clc
fildll
in
xchg
mov
lock
ljmp
call
scas
and
jecxz
dec
or
rorb
les
inc
movsb
jg
sbb
loopne
mov
imul
xor
add
nop
pop
cli
mov
xor
clc
aas
in
jl
lods
aam
sbb
jbe
xchg
fst
mov
cmpsl
sub
or
fdivs
decl
gs
jmp
cli
push
push
jbe
cli
add
add
dec
xchg
cmc
decl
inc
cmp
out
cwtl
push
mov
nop
into
xor
and
js
lcall
or
xchg
mov
pop
sbb
lcall
xchg
cmp
fcoml
dec
out
dec
sub
adc
movsl
inc
lcall
shr
xlat
fdivrl
mov
leave
mov
mov
les
sub
jmp
dec
mov
sbb
sbb
fs
add
push
or
add
je
lea
fcomip
decl
inc
dec
cmp
jb
aam
or
push
jge
sbb
cli
test
pop
rcl
gs
rep
or
jmp
sar
pusha
xchg
jmp
push
jg
and
fcomip
inc
test
mov
xchg
xor
sbb
out
and
inc
scas
xor
xor
add
mov
xor
or
dec
incl
ret
jle
loop
jmp
fprem
mov
outsl
cli
fadd
fsubp
jle
pop
cmpsb
sub
dec
push
fcos
fidivrl
pop
cltd
fisubrs
cmp
out
mov
mov
in
leave
int
jge
mov
test
inc
dec
sub
lods
repz
frstor
cmp
pop
dec
mov
pop
call
addb
mov
xor
aas
setno
jo
xchg
jecxz
nop
repnz
dec
std
imul
jmp
push
out
dec
mov
adc
movntq
out
imul
jns
pop
xchg
or
jmp
mov
enter
sbb
call
mov
xchg
cmpsl
loope
lret
mov
adc
mov
push
jl
dec
push
xor
adc
xchg
cmp
dec
mov
lret
adc
in
mov
fdivrl
sahf
and
lds
jl
mov
jmp
push
outsb
je
adc
jbe
xor
add
xchg
jb
adc
ljmp
clc
push
adc
push
jbe
push
fcomip
add
mov
subb
out
mov
insb
arpl
adc
push
ljmp
sti
sbb
cmp
and
ljmp
out
push
out
or
xchg
ljmp
lcall
sti
aam
or
push
xor
add
out
stc
xor
inc
xchg
add
pop
outsl
xchg
mov
xchg
pop
push
jl
jmp
push
jp
fimuls
pop
mov
scas
pop
mov
lcall
js
sbb
pushl
inc
push
cmp
addr16
dec
adc
cltd
clc
pop
sarl
pusha
lcall
mov
lcall
xchg
stos
jp
aaa
fwait
mov
incl
mov
sbb
in
fimull
inc
movsl
orl
lods
pop
inc
addr16
test
movsl
clc
jp
std
dec
mov
add
out
xor
jecxz
jle
xor
push
dec
nop
xorl
fldenv
in
stos
mulb
in
data16
cli
xchg
loop
dec
lcall
jmp
mov
and
jns
pop
add
test
insl
loop
mov
arpl
fldl
lods
movsb
jl
ret
push
jecxz
std
cmp
inc
es
stos
or
xor
mov
sub
dec
xor
adc
sub
out
add
incl
mov
cli
cmc
xor
test
mov
les
jmp
orb
ret
push
bound
imul
shl
and
shrl
or
pop
decl
lock
fnsave
xchg
pop
dec
mov
mov
push
test
jnp
fnstsw
cld
pop
and
xchg
aam
dec
and
push
imul
ljmp
cwtl
pop
inc
enter
jbe
outsb
clc
dec
mov
cmp
xor
call
out
outsb
push
mov
cmp
pop
arpl
push
jne
dec
xchg
in
push
fbstp
fmul
lods
jmp
ret
xor
sub
mov
pop
pop
push
mov
or
xchg
outsl
stc
aaa
cmp
sbb
mov
ret
imul
mov
repnz
adc
jl
xchg
xor
sub
cmpsl
out
adcb
cmp
lods
mov
mov
and
push
enter
incl
jns
fcoms
and
call
popa
pushl
pushl
xchg
jae
sbb
lret
and
push
or
aaa
fs
ljmp
push
repz
out
add
jns
lcall
scas
push
decl
inc
mov
ja
fidivl
mov
out
xchg
mov
push
mov
call
push
jmp
xor
fwait
mov
dec
mov
mov
js
loopne
decl
sbb
mov
xchg
aas
je
imul
and
cmp
inc
inc
std
jns
repz
ja
incl
aaa
add
insb
ljmp
jle
jp
mov
fs
in
sbb
mov
push
jl
es
in
pop
imul
std
lcall
loope
int
es
xor
pop
je
adc
and
dec
add
sub
add
dec
gs
mov
jmp
xchg
xor
mov
fwait
ljmp
mov
aad
mov
jnp
fdivr
mov
loop
jecxz
cwtl
mov
sbb
in
std
aam
and
dec
fisttpll
fnstsw
nop
lahf
push
inc
xchg
mov
inc
mov
dec
mov
lret
cli
decl
fwait
repz
fnop
fisttpl
dec
push
push
sarl
clc
js
insl
add
out
fs
adc
and
dec
mov
add
incl
add
push
inc
bound
call
mov
xchg
dec
loopne
push
pop
add
cmp
in
push
jns
lods
sub
inc
cmpsl
cmp
jle
jno
enter
xor
jmp
jl
icebp
call
addps
pop
and
push
lods
jecxz
fsts
pop
cld
stos
xlat
and
pop
in
xchg
sbb
dec
mov
jg
lock
push
push
icebp
scas
imull
xchg
ret
mov
cmpsb
pop
ja
shr
jecxz
rcrl
lcall
xchg
mov
andb
testl
mov
or
outsb
mov
xor
push
cmpl
es
add
nop
dec
xlat
pushl
push
add
pop
jbe
sahf
cmp
pop
push
mov
test
mov
aam
fcos
pushl
inc
call
adc
incb
jb
xchg
int3
enter
in
mov
jmp
jno
std
pop
or
dec
testl
pusha
sbb
ret
jnp
sbb
jmp
mov
and
sbb
sub
dec
xchg
jge
pop
loopne
cmp
lret
in
incl
mov
ljmp
or
xchg
cmp
cwtl
shrl
stos
scas
sub
pop
sbb
lret
add
call
inc
xor
shr
fbld
sti
out
std
mov
and
ljmp
fs
sbb
pop
pop
add
cmp
pop
test
pusha
jb
ljmp
or
pushf
xorl
mov
and
push
cs
xchg
add
adcb
pushl
pop
ret
incb
xchg
and
jae
mov
inc
jl
add
jae
call
cli
xor
push
inc
adc
inc
mov
jp
shl
shl
pop
mov
cmp
mov
bnd
in
inc
jg
fisttps
cmp
fnsave
pop
fcmovne
push
sub
cmp
push
loopne
incl
std
stos
pop
mov
xlat
loop
cld
and
push
push
movsl
cmc
lcall
loop
fldenv
and
out
dec
inc
lcall
jb
lret
stos
dec
cs
mov
xor
ds
cmc
xor
call
push
je
enter
cld
adc
out
mov
in
repnz
add
pusha
test
push
or
in
pop
in
lods
push
sti
jnp
xor
add
fdivr
call
fcmovu
shrl
jbe
jae
ficoms
ss
pop
outsl
mov
lea
popf
sub
mov
mov
sub
ds
sbb
cmpsb
stc
int3
adc
and
jae
sbb
scas
sbb
decl
ss
push
push
push
sbbb
fistl
js
push
mov
lcall
ljmp
mov
rcrb
call
sarl
arpl
jg
fists
adcl
ds
nop
inc
sti
sub
cmp
out
nop
inc
or
rcrl
sbb
jp
dec
cmp
sub
ljmp
shl
push
outsl
push
xor
icebp
xor
mov
cltd
cwtl
out
sub
icebp
push
fcomps
xor
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
mov
xchg
jmp
icebp
mov
jge
cmp
jl
adc
mov
cwtl
push
and
ds
in
ror
shlb
dec
jmp
inc
aas
jns
jne
ljmp
and
outsb
adc
rcll
push
out
mov
mov
cmc
in
dec
inc
push
inc
hlt
pop
add
jne
stos
pop
rorb
testl
or
or
lock
pop
adc
add
hlt
inc
lcall
cli
cmp
lahf
call
es
dec
popa
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
and
cmp
inc
ds
jmp
fnstsw
ss
mov
fcoml
xor
test
js
jge
sti
and
aas
add
dec
andb
rcrb
and
shl
pop
cs
cmp
fnstenv
pop
mov
or
pusha
lock
mov
fdiv
andb
inc
pop
inc
lea
aam
sbb
add
dec
adc
je
outsl
call
rclb
mov
imul
rorl
pushf
inc
mov
iret
sub
setge
mov
lcall
xchg
push
popf
mov
sti
mov
js
arpl
lea
cmp
incl
mov
adc
out
cmc
icebp
notl
mov
mov
mov
fstpt
movsb
popa
jle
mov
mov
icebp
jmp
cld
incl
ficomps
jnp
and
negb
inc
clc
repnz
fsubrl
push
and
pushl
lods
sub
imul
and
xchg
jb
shlb
jge
sbb
mov
stos
mov
cmp
cld
push
and
adc
pop
jns
test
pop
and
call
mov
insl
loopne
in
push
test
cmp
mov
int
pop
test
rclb
dec
cmc
lahf
sub
add
rol
xchg
call
aam
fwait
shrb
les
incl
lcall
outsl
imul
imul
ljmp
dec
jnp
lods
and
pop
pop
mov
inc
inc
sbb
out
es
jle
lds
pop
imul
daa
jle
or
or
jmp
cmp
testl
lret
out
cld
lcall
cmpsb
mov
and
mov
repz
aam
ficompl
out
clc
ljmp
aaa
cmp
aas
pop
fnstcw
xor
clc
pop
jmp
jae
sub
in
jge
fimuls
call
mov
hlt
sbb
andb
sahf
gs
xchg
pop
sbb
mov
ljmp
sub
xor
mov
xlat
rorb
ret
mov
dec
pushf
sub
jmp
sub
mov
iret
push
inc
in
jb
sub
enter
lods
test
fwait
lcall
sbb
test
scas
jnp
cmp
add
xor
imul
push
mov
and
jno
xor
insb
lds
out
sbb
lods
call
sbb
mov
cmpsl
and
push
out
out
or
mov
pushl
cwtl
pop
mov
pop
inc
outsl
clc
rcll
pop
mov
sahf
sbb
sub
in
adc
and
arpl
loopne
gs
mov
push
push
sub
xor
decl
inc
cmpsl
out
subl
std
adc
shll
sub
fdivr
in
xor
clc
mov
push
loopne
loopne
test
cld
in
add
mov
sbb
cmp
push
dec
pop
cmpsl
hlt
in
pop
lea
mov
data16
mov
add
fcomi
inc
aaa
ficompl
push
cld
jg
js
xor
mov
mov
xchg
inc
es
and
cld
lcall
hlt
ss
dec
push
ds
sbb
ljmp
testl
or
dec
outsl
mov
fs
cmp
mov
ja
sub
mov
mov
icebp
ds
cmpsl
data16
cmp
fs
dec
iret
push
mov
clc
loope
xchg
xchg
enter
stc
push
mov
insl
adc
mov
cli
outsl
mov
jmp
out
jp
ljmp
push
xor
dec
cmp
jl
mov
daa
pushf
jle
pushw
sub
jle
mov
popa
lds
xor
inc
daa
add
fmull
out
lcall
aad
in
jno
test
jle
mov
test
call
jmp
xchg
mov
jbe
mov
or
cltd
jg
pusha
out
cmp
fnstcw
push
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
dec
loopne
incl
mov
enter
sbb
lods
xchg
aad
dec
aaa
and
cld
aad
fnsave
mov
pushl
xchg
add
xchg
loope
sbb
test
mov
pop
dec
repz
or
mov
arpl
inc
pop
push
mov
mov
stos
lcall
into
sahf
cmp
or
movsb
add
jns
and
decl
dec
pop
jnp
push
in
lds
leave
cmp
jo
repz
lcall
sbb
lea
add
mov
inc
xorb
push
arpl
push
add
rcll
jle
xchg
hlt
push
sub
dec
add
shr
lds
mov
outsl
mov
daa
cmp
stos
lcall
loop
stos
ret
sti
adc
je
out
inc
pop
add
fcomip
add
lods
and
test
xlat
push
mov
loopne
in
jg
movsl
popf
sbb
adc
nop
adc
insl
pop
lds
lock
jne
mov
sbb
pushl
sahf
push
pop
jae
mov
arpl
lahf
repnz
mov
cltd
movsb
lods
imul
mov
incl
add
ds
or
lret
pushf
cmp
dec
or
insl
stos
push
xlat
push
lock
decl
lock
push
out
lret
cmp
dec
arpl
fadds
mov
push
mov
enter
cmp
nop
push
addr16
jne
test
jge
shrb
mov
dec
cmp
lods
push
fwait
sbb
in
stc
inc
mov
add
push
add
imul
xlat
and
stc
add
sbbl
mov
cltd
mov
enter
movsl
js
int3
xor
lcall
mov
jnp
cltd
sbbl
mov
mov
fists
push
cld
mov
aas
push
dec
xchg
xchg
mov
cmp
xchg
sbb
aas
and
fwait
mov
decl
pop
pop
fwait
jl
cmp
jb
incl
fnstenv
mov
das
pop
hlt
mov
xor
rorl
cmp
hlt
and
test
push
mov
inc
outsl
add
loopne
pop
pop
insb
in
cmpsb
inc
dec
pop
mov
popa
add
mov
cmp
hlt
int3
dec
into
in
mov
add
mov
leave
ret
jo
mov
push
pop
jo
jmp
cmc
dec
inc
mov
adc
jp
xor
dec
decl
lcall
fisttpl
lock
inc
insb
mov
sub
pop
clc
movsl
mov
call
dec
mov
roll
adc
aaa
filds
shrl
cmp
orl
ds
inc
mov
mov
cmp
xchg
sub
push
ret
popf
fsubl
push
pop
mov
in
incl
mov
call
xor
and
push
pushf
call
call
jbe
ljmp
ss
push
repnz
mov
int3
fnstsw
nop
sub
mov
cs
in
jmp
mov
xchg
dec
repnz
fdivrs
cmp
push
push
pop
outsb
mov
movsl
mov
push
loop
xchg
sar
mov
insl
or
daa
xchg
shrl
and
push
in
rorb
jg
ret
jle
jp
movsb
dec
imulb
mov
jmp
stos
and
call
es
sarl
jp
scas
stos
xlat
add
jne
push
lods
push
jmp
mov
add
fst
pop
xchg
cmp
lahf
mov
jmp
aas
jno
or
dec
lock
mov
in
popa
into
ror
fistpl
aad
mov
aas
imull
pushl
dec
nop
ds
insb
inc
not
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
fnstsw
inc
daa
xchg
test
mov
repnz
mov
xor
inc
je
mov
clc
lahf
in
pop
inc
pause
jbe
add
cmpsb
jo
mov
cwtl
in
push
dec
lcall
sub
xor
shlb
push
cs
js
daa
add
pushl
inc
or
pop
aam
rcl
ljmp
jno
pop
fnsave
notl
incl
sub
lock
imul
or
insl
push
inc
or
jge
arpl
dec
aas
mov
imul
jnp
jg
lcall
aaa
mov
lods
sub
mov
pop
mov
incl
mov
lock
mov
push
outsb
lret
xchg
xor
ljmp
dec
xlat
lea
ror
ret
add
cmp
pop
xor
out
scas
jmp
pop
mov
mov
int3
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
lcall
adc
or
call
dec
rcrl
fcom
cmpl
hlt
addr16
pop
adc
incl
std
sbb
cmpsl
cmp
inc
je
inc
fnstenv
inc
das
test
or
sub
dec
or
mov
jle
js
in
jo
push
push
adc
push
ds
sahf
pop
cmp
ljmp
cmc
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
adc
call
mov
push
push
loop
dec
dec
xor
mov
dec
jle
adc
in
dec
mov
icebp
test
fdivrl
pushl
repz
dec
mov
adc
and
or
sti
lret
loopne,pn
sub
add
jle
dec
mov
outsb
call
jmp
mov
stos
push
sub
imul
jecxz
repz
cmc
mov
jg
jmp
push
cmp
push
sbb
jecxz
push
pop
icebp
lock
movsb
adc
dec
xchg
out
clc
call
lods
dec
and
sbb
xchg
and
mov
sub
scas
ds
xchg
pop
cmpsb
pushl
repnz
and
icebp
pop
pop
movsb
mov
jp
orb
mov
sar
scas
or
pop
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
sub
ljmp
in
call
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
cld
test
add
dec
or
pop
push
inc
push
lods
mov
add
arpl
mov
repz
roll
mov
cmpb
mov
sub
hlt
jg
iret
cmp
ljmp
popa
cmpsl
rolb
xor
jno
sbb
arpl
add
jp
sub
decl
xor
mov
or
mov
push
inc
jg
call
ds
cli
mov
add
sub
mov
cmp
test
movsb
cld
pusha
pop
mov
incl
lret
jo
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
decl
lcall
push
add
and
jge
mov
shrl
out
push
loope
pushl
incb
mov
cmpsl
sbb
out
fdivrs
push
ret
mov
call
push
mov
xchg
cmp
in
pushl
push
int
pop
lock
ljmp
repz
out
xor
fildll
pushl
call
or
popf
or
mov
inc
movhps
add
adc
push
xor
mov
inc
pop
in
sub
lcall
cwtl
fwait
xor
mov
or
insb
pop
or
test
push
jge
pop
cmp
enter
incl
push
sub
push
push
out
int
mov
dec
aam
inc
sbb
ljmp
repz
jns
in
insb
inc
ljmp
adc
clc
and
fistpl
adc
inc
push
pop
push
incl
sbb
mov
frstor
es
and
ja
or
cmc
xor
xchg
sub
mov
jbe
lret
add
or
data16
aas
ds
lcall
mov
xor
in
sub
mov
lcall
cld
pushl
add
out
xchg
cli
xchg
or
mov
movl
dec
and
aam
repnz
mov
loope
call
adc
divb
out
xchg
int3
or
sbb
lcall
aas
push
into
lahf
inc
dec
mov
pop
cmp
inc
idiv
push
out
dec
popf
outsb
js
aad
out
cmpsl
dec
subb
dec
xor
adc
shll
incl
push
dec
dec
mov
mov
adc
mov
or
jno
jno
pop
lock
inc
pusha
push
add
js
inc
cmp
scas
and
test
mov
inc
push
mov
out
push
pop
pop
mov
fsubrl
jno
cmp
xor
les
ljmp
sub
pop
popf
fists
out
gs
repz
mov
mov
inc
clc
scas
mov
test
jg
sub
ret
mov
dec
arpl
cld
xor
incb
sbb
and
arpl
iret
sbb
idiv
inc
lahf
in
scas
ds
inc
ljmp
mov
int3
mov
push
xor
cmpsb
je
dec
push
orl
push
lcall
pop
repz
lock
mov
out
dec
stc
ficoms
and
ljmp
loop
mov
add
insb
mov
mov
rclb
enter
lcall
sbb
push
out
xchg
pop
xor
dec
mov
push
inc
jb
call
mov
add
and
outsb
add
movsl
adc
mov
mov
push
sub
lret
mov
in
xchg
xor
dec
mov
lock
jmp
sub
ljmp
adc
add
push
xor
test
daa
cmp
dec
push
xchg
pop
scas
in
cmp
pushl
sbb
jae
gs
dec
test
mov
cmp
mov
push
xchg
jg
dec
inc
push
mov
iret
push
pop
shll
xchg
jecxz
sti
jnp
pushl
mov
movsl
push
xchg
inc
inc
cwtl
inc
pop
setle
adc
scas
dec
loope
and
inc
xor
scas
xchg
jmp
pushl
and
scas
gs
js
dec
add
jae
into
dec
cmp
mov
decl
pop
cmp
ficompl
xchg
ds
adc
or
xorb
adc
lcall
ret
mov
test
cmp
mov
xchg
dec
shl
jmp
repnz
jo
xchg
je
mov
into
mulps
add
cmpsb
into
xor
cld
push
cmp
mov
pushl
cmp
aad
add
cld
orl
stos
push
test
decl
xchg
ds
or
dec
mov
xchg
sbb
jle
xchg
push
xor
xor
inc
ds
pop
jo
pop
mov
lock
mov
mov
pushl
push
fs
gs
mov
adc
xchg
clts
inc
mov
jmp
outsl
clc
jmp
out
lods
lahf
sarb
fstpt
pop
iret
cmp
mov
shl
cli
dec
imul
hlt
call
bound
jl
xor
lret
popf
icebp
pop
push
ud2
ds
sub
fwait
sub
dec
dec
sarl
clc
scas
cmpsl
xchg
jbe
outsb
into
shl
test
rcr
push
xchg
lcall
hlt
clc
pop
in
sub
or
push
pop
pushl
test
cmp
push
push
daa
loope
stos
fcomp
cmp
lods
je
vmaxsd
mov
in
push
loope
repnz
push
loop
sbb
jg
and
sub
fsubl
xchg
pop
mov
xchg
push
jge
jbe
sbb
and
cmp
mov
dec
pushf
ja
loopnew
pop
pop
out
sub
jb
push
sub
int
cmp
std
call
mov
sub
jnp
adc
inc
xchg
cmp
ljmp
mov
sbb
int
decl
cmp
or
je
divl
repnz
push
xlat
das
negb
imul
inc
lcall
or
inc
add
mov
lret
push
pop
adc
fwait
sbb
push
cmp
jg
inc
popa
sub
jns
fdecstp
repnz
push
int
cmpb
call
mov
out
insl
scas
lea
pop
loopne
ja
call
std
jo
push
loop
es
sub
adc
push
push
pusha
fimull
push
incl
outsl
cmp
xor
movsb
or
insb
loopne
clc
in
push
fidivrl
decl
pop
or
cwtl
add
pop
and
jmp
sbbl
negb
imul
fldenv
pop
test
sub
adc
inc
mov
outsb
data16
or
in
fldcw
sub
nop
aad
stc
cld
mov
mov
decl
or
imul
mov
stos
lret
fisttpl
cld
or
cmp
jo
call
std
mov
add
mov
mov
add
sarl
mov
cmp
sub
mov
in
enter
add
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
pop
fbstp
mov
fldl
imul
iret
mov
pmaddwd
jp
and
imul
inc
in
add
addb
loopne
in
mull
pushf
cmp
push
pop
cmpsb
dec
shr
adc
ljmp
stos
mov
pop
ret
jge
sub
dec
sbb
mov
aad
call
aaa
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
fld
pushf
iret
jl
lcall
jnp
push
xor
pop
mov
icebp
add
mov
popf
cmc
incl
arpl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
jl
ljmp
movsl
out
inc
cmp
push
adc
dec
loopne
and
leave
rcll
mov
pushl
fs
push
loop
xchg
mov
adc
jns
jo
outsb
push
jnp
dec
testb
ljmp
call
mov
stos
mov
push
mov
hlt
mov
cltd
add
mov
sahf
into
jo
clc
pop
test
adc
loop
xor
mov
cld
leave
outsl
shrl
in
push
daa
jl
push
fcoml
cmpl
mov
lock
outsb
cmp
scas
cmp
movsb
andl
hlt
stos
ret
or
ret
out
lret
sub
fcompl
xchg
cmp
lcall
push
ss
push
jg
dec
cmp
out
fstpl
or
add
cmp
ljmp
jg
ljmp
pop
sbb
pop
movsl
jecxz
fnstcw
das
mov
call
jmp
xlat
fbld
pushf
add
into
and
leave
clc
addps
dec
lcall
test
aas
iret
notb
int
cmp
cmp
jno
jmp
jge
ja
and
or
push
or
adc
aaa
xchg
jb
mov
das
or
filds
cmp
data16
jle
mov
decl
mov
cmp
inc
jg
adc
sahf
sub
fprem
jg
push
cli
lret
movsb
dec
mov
loopne
jae
inc
sbb
mov
cli
pushl
sub
rcrb
dec
pop
mov
test
sub
decl
dec
lcall
jns
mov
jl
fisttpll
mov
call
pop
or
push
pop
mov
lret
push
mov
sbb
push
js
xchg
push
push
xor
sub
ljmp
push
inc
mov
mov
push
mov
mov
lds
mov
xlat
mov
hlt
xchg
and
pop
mov
sbb
xor
std
in
jnp
jg
out
or
pop
arpl
push
or
int3
xchg
pop
clc
inc
loop
ljmp
ss
hlt
les
and
pop
jp
dec
mov
adc
push
cmp
lea
push
cmpsb
mov
push
add
pushf
mov
lcall
xor
stos
adcl
out
mov
ljmp
int3
les
add
cmp
mov
jmp
cmp
inc
aas
pushl
push
fs
xor
dec
sbb
jb
jg
mov
mov
mov
adc
pushl
push
push
iret
jbe
jbe
jbe
mov
and
cmpb
decl
lds
jge
dec
sub
aam
shll
bound
decl
loopne
cs
add
dec
arpl
sbb
fnstcw
repnz
cmpsl
stc
decl
mov
sbb
lahf
jle
or
pop
sub
aad
and
push
xlat
inc
fimull
decl
out
stc
test
fwait
add
into
subb
movsb
mov
xor
aam
adc
mov
pop
dec
mov
outsl
gs
cmp
pop
stos
xor
jae
pop
jle
lcall
mov
int
in
mov
push
pusha
sbb
mov
adc
mov
xchg
or
shll
sbb
or
shl
add
negb
push
cmpsb
dec
jp
in
pop
iret
dec
mov
in
loop
xchg
inc
shr
sub
cli
push
popa
sub
adc
mov
ljmp
jp
cmp
lods
scas
ds
shl
lods
enter
xor
shlb
sbb
ljmp
jb
lds
xchg
push
xor
or
push
jge
xchg
in
add
dec
xlat
or
data16
clc
dec
adc
rcr
cmp
incl
cmc
dec
pop
sub
ja
icebp
int3
mov
jecxz
inc
nop
sub
xchg
sub
cmp
das
out
addb
scas
stos
rcr
lock
decl
mov
js
adc
mov
addr16
decl
jl
cmc
add
cmpb
mov
int3
and
pop
mov
psubusb
fistps
jns
insb
ljmp
clc
lcall
cli
popa
cmp
sbb
add
inc
int
inc
adc
sarb
incl
shl
addl
cmc
sub
loopne
frstor
push
dec
movsb
lea
out
mov
pushf
xor
int3
sub
out
push
outsl
sub
jmp
jle
cmp
push
push
aas
and
mov
ljmp
mov
rcll
sub
lds
adc
adc
jno
jl
sets
cli
iret
jecxz
ss
pushf
and
push
sub
xchg
dec
rol
pop
in
adc
in
and
outsb
int
inc
test
in
xchg
sti
pusha
lret
cmp
xchg
in
fsubrp
cmpsl
aad
jp
cmp
pop
fiaddl
cli
call
push
xor
jbe
shrb
inc
cmpsb
push
dec
fmul
popf
arpl
cmp
or
jno
cmp
hlt
xchg
inc
or
inc
sbb
mov
jle,pn
pop
fwait
inc
leave
sub
enter
inc
testb
fcoms
aam
cwtl
adc
call
dec
jge
jbe
ljmp
aaa
mov
scas
test
jae
repnz
dec
and
mov
lods
repz
fistpl
sbb
fs
nop
push
arpl
inc
sub
stos
sub
dec
mov
adc
jecxz
sbb
in
sub
and
leave
je
adc
dec
sub
es
cli
sar
mov
dec
cli
jmp
or
mov
lahf
push
add
repnz
daa
arpl
jp
push
or
add
in
inc
leave
sbb
cs
nop
or
sbb
add
addr16
and
insb
addl
lcall
mov
mov
xchg
adc
aad
out
icebp
inc
loopne
cmp
mov
lahf
ss
push
lods
loopne
dec
xchg
cmp
or
sbb
or
sbbl
sti
dec
or
push
out
mov
sub
push
test
sub
shlb
mov
repnz
incl
sbb
subl
xor
or
outsl
mov
xchg
fistpll
mov
decl
or
adc
sbb
push
cmpsb
adc
mov
arpl
inc
aaa
push
adc
jns
mov
push
enter
jno
and
and
outsb
inc
mov
aas
dec
mov
shlb
decl
stos
shl
xor
jne
hlt
sahf
push
loop
dec
xchg
bound
jo
call
sbb
daa
adcb
insl
ja
int3
mov
jl
into
scas
or
call
fstpl
lds
mov
mov
mov
xor
out
scas
js
and
pop
jnp
stc
mov
cmp
sub
sbb
and
xchg
xchg
pop
jmp
pop
movsl
decl
daa
or
adc
sub
dec
decl
and
pop
in
lret
mov
xchg
add
mov
xor
mov
call
sahf
pop
pop
xchg
cld
pushl
mov
mov
idivb
xor
loopne
stos
push
sub
push
call
push
jae
push
ss
xchg
cmp
pop
add
test
loope
test
insb
adc
jae
mov
pushl
pop
stos
sub
or
push
jns
loop
ds
fimuls
inc
push
mov
mov
lcall
movsb
adc
or
movsl
or
mov
adc
pop
cmpsb
pusha
daa
jbe
and
scas
jmp
mov
jbe
push
push
fnstenv
je
ficompl
jbe
or
pop
fwait
cmc
bound
sti
int3
or
add
ds
aas
idivb
jae
insb
jne
push
leave
cltd
sub
movsb
aaa
cld
mov
andl
sbb
notl
jae
out
sub
incl
jae
out
pop
or
test
mov
lcall
push
mov
ret
mov
or
push
push
fistpll
and
cmp
xchg
sbb
outsb
lock
pushl
lcall
mov
add
imul
data16
dec
test
add
mov
incl
ds
mov
inc
testl
jo
mov
sub
cmp
add
lods
push
mov
in
sub
pop
cmp
cmp
out
inc
sub
popa
loope
pop
xor
dec
and
cld
mov
sti
mov
js
aad
loopne
addr16
sahf
adc
fbld
lds
lods
mov
and
ss
adc
push
iret
push
add
incl
mov
incb
adc
popf
loop
nop
jno
imul
ljmp
cmp
in
adcl
xor
push
loop
mov
aas
scas
or
push
mov
mov
or
xor
xlat
lea
sub
jae
fcompl
hlt
lcall
scas
push
sub
popf
and
jmp
test
mov
inc
repz
xchg
xor
mov
dec
adc
rcll
sbb
pop
aad
lcall
sti
lds
mov
or
mov
or
xor
dec
jmp
bound
gs
shll
pop
mov
pop
cmp
pop
enter
es
mov
push
fidivrs
aam
lds
xor
adc
mov
fistps
xlat
inc
sbb
lods
dec
jmp
xchg
cmp
or
pop
cmp
xor
jg
or
jecxz
or
shll
cltd
cmp
arpl
loope
fisttps
pusha
mov
jg
xor
inc
aaa
cld
pop
cli
sub
nop
sbb
xchg
push
fstps
outsb
xchg
pushf
jecxz
rcrb
scas
les
scas
into
sub
icebp
or
orl
mov
movsb
and
xchg
orl
lods
mov
loopne
ficompl
and
sub
cmp
sbb
mov
jmp
jecxz
fucomip
test
xchg
adc
movsb
imul
sbb
jp
lcall
sub
push
xchg
push
inc
out
pop
adc
xor
loopne
in
mov
mov
jg
dec
lods
in
mov
pop
cwtl
aaa
jl
or
int3
pushl
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
sarl
adc
and
dec
fneni(8087
dec
push
out
cltd
cmp
adc
mov
mov
cwtl
xchg
sbb
sbb
fwait
imul
push
adc
lcall
stos
les
hlt
cmp
fdivrs
out
mov
js
das
xchg
fidivrl
mov
test
call
dec
ds
mov
mov
test
xor
shlb
mov
pop
sbb
repnz
fsubrl
insb
imul
or
jecxz
mov
lods
int3
adc
sub
fs
push
inc
mov
xor
mulb
adc
mov
fistps
call
cld
xchg
and
mov
js
lods
jp
mov
cmp
jecxz
shrl
clc
imul
ljmp
cmpsl
push
pop
je
sub
jge
arpl
jp
push
stos
jbe
lcall
idiv
pushl
imul
pop
or
jmp
push
lods
iret
call
icebp
jns
lcall
or
mov
ffreep
pop
pop
fstpt
in
mov
pushl
std
iret
test
gs
mov
jecxz
js
mov
xor
dec
imul
stos
add
lcall
jl
movsl
lods
dec
pop
popl
pushf
push
inc
lock
icebp
pushf
sbb
add
adc
lcall
clc
ljmp
stos
lcall
dec
or
mov
std
xchg
adc
popl
sub
fildl
add
das
inc
shrl
incl
daa
loop
mov
stos
dec
cld
lcall
inc
insb
lret
ja
rcll
incl
mov
in
leave
dec
sub
repnz
mov
es
nopl
out
push
ficoml
xor
xor
inc
push
jno
pop
xor
push
ds
pop
clc
jg
cld
push
insb
lret
and
outsl
dec
mov
xor
enter
ljmp
and
xor
cmp
ljmp
pop
shrb
arpl
jmp
ret
int
push
mov
rorl
enter
lcall
mov
call
xor
push
lods
rcr
dec
daa
mov
scas
clc
jns
cwtl
inc
adc
and
lcall
loope
addl
pop
xchg
iret
push
aaa
scas
aam
add
pop
mov
into
mov
fstl
hlt
call
sahf
std
jne
add
push
sahf
add
cmp
test
or
lcall
lcall
es
mov
xor
mov
push
jecxz
mov
pusha
sbb
call
push
sub
sub
xlat
dec
inc
mov
cmp
add
data16
in
ret
movsl
or
mov
ja
rcrl
adc
mov
and
dec
jne
mov
xorl
loopne
sub
inc
mov
jnp
ds
xor
push
das
add
xchg
lods
sub
pop
cmpsl
popa
mov
inc
mov
xor
sbb
decl
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
pushf
dec
pop
add
out
xchg
add
incl
adc
ljmp
xchg
push
outsl
shrl
outsb
inc
les
fcomps
in
fisttps
inc
mov
les
ljmp
clc
mov
pop
pop
fmuls
lea
jne
mov
fs
les
call
ficomps
add
ret
mov
inc
jl
sbb
jb
cmp
push
add
or
inc
sub
subb
dec
outsb
clc
das
pop
push
adc
jmp
arpl
push
sbb
mov
pusha
shlb
mov
outsb
mov
xor
lods
imul
xchg
sbb
sbb
dec
xor
daa
lahf
rorb
gs
and
lcall
cmp
out
push
enter
mov
test
mov
cs
inc
rcrl
popl
mov
push
xchg
lcall
and
jmp
sbb
sbb
sbb
gs
jb
dec
dec
xchg
and
push
cwtl
lcall
cmpsl
or
cld
xchg
cmp
jae
daa
int
mov
cltd
rorl
mov
sub
pop
dec
test
out
mov
int
repnz
pop
enter
decl
lahf
addr16
jb
imul
jbe
movsl
repz
push
sub
cmc
inc
aaa
sub
inc
or
dec
mov
or
inc
mov
dec
and
cmp
sbb
sbb
fwait
mov
dec
pushl
ror
mov
int3
mov
mov
lcall
sbb
sarl
pop
imul
nop
dec
push
pushf
pop
sub
cs
add
incl
pop
clc
inc
jl
jmp
mov
cmc
loopne
andl
rolb
mov
pushl
mov
pusha
cmp
sbb
sub
or
mov
cwtl
divb
mov
ja
neg
or
dec
xor
ljmp
cmp
outsb
lahf
out
xchg
out
cwtl
sub
mov
in
ss
clc
ljmp
xchg
mov
out
pop
pop
add
sbb
adc
decl
inc
cmc
or
ds
xor
dec
xchg
ljmp
rcll
and
pushl
outsb
cmc
pop
push
cmp
pop
inc
xchg
push
fiaddl
mov
decl
dec
mov
loopne
mov
and
enter
mov
fucom
incl
pop
enter
dec
mov
cltd
or
std
push
mov
push
incl
dec
xor
addr16
mov
or
xchg
mov
ljmp
es
fadd
outsl
cmp
mov
aam
scas
hlt
or
cld
cmp
ljmp
clc
inc
aaa
xor
imulb
in
mull
dec
jno
sbb
outsb
and
sbb
pushl
and
mov
loop
xor
dec
sub
mov
stc
adc
ss
xor
sti
in
adcl
jb
and
shrl
call
inc
cwtl
pop
and
mov
push
sub
imul
push
popa
pop
das
mov
mov
xlat
or
ljmp
xchg
and
fmuls
ss
mov
xor
xchg
stos
fnsave
and
xlat
adc
jecxz
xchg
dec
mov
jle
test
jmp
xchg
pop
cwtl
out
cld
add
adc
cs
fimuls
adc
add
jae
incl
cmp
mov
sub
jo
inc
leave
xchg
push
mov
movl
aam
jb
sbb
enter
lret
aad
fs
inc
adc
or
jge
outsl
or
mov
xchg
rcll
mov
or
pop
sub
into
or
je
push
inc
filds
faddl
gs
mov
in
stos
fiadds
push
adc
dec
fs
lea
jbe
int
cwtl
jge
push
fs
loop
or
dec
rorl
pop
push
test
mov
and
pop
loopne
gs
call
push
mov
int3
sti
loope
cmp
cmp
pushf
mov
xchg
mov
fidivrl
aad
push
mulb
sti
mov
ret
dec
adc
mov
clc
xor
ficompl
jbe
pop
jecxz
adc
xor
add
jge
std
lcall
int
and
stos
ret
xlat
dec
icebp
push
lods
xchg
notb
or
push
pop
popf
push
jmp
pushl
cwtl
jecxz
loope
aaa
dec
outsb
or
gs
cld
cld
rcl
mov
jl
sbb
jmp
mov
mov
xor
imul
aas
push
int
incl
lret
imul
mov
repnz
mov
fwait
ljmp
in
ds
sub
cli
mov
jge
jmp
loope
dec
add
incl
inc
in
scas
scas
jae
pushf
nop
fwait
test
insl
repnz
mov
xor
jp
mov
incl
push
adc
repnz
sub
enter
loope
lods
addr16
ljmp
inc
cmp
pop
mov
xchg
fdivrl
xchg
loope
dec
sbbb
inc
sub
inc
add
decl
stc
sub
stos
aas
lods
jae
addr16
mov
mov
jp
inc
cli
and
out
adc
subl
xchg
pop
mov
inc
mov
xorb
jne
cmp
push
in
fldenv
cmp
mov
scas
std
add
add
sbb
push
les
cmp
mov
lods
cwtl
push
sbb
loope
mov
push
or
push
xlat
jnp
sahf
add
test
adc
jne
aaa
fcom
rcr
pop
mov
clc
outsb
push
xor
enter
xor
jno
sahf
mov
pop
pushl
fstpt
enter
push
out
aaa
push
sti
and
out
bound
inc
test
mov
pop
or
lret
pop
js
pop
xor
dec
push
push
jge,pn
cmc
lcall
dec
repz
movsl
inc
jne
movsl
test
out
cmp
inc
push
pop
arpl
mov
nop
js
xchg
sbb
cmp
sarb
inc
pop
cmpsb
sub
xor
mov
and
mov
inc
jb
mov
push
push
lods
xchg
xchg
js
movsl
adc
cmp
aad
mov
test
outsl
jno
pop
or
xor
xchg
mov
pop
hlt
jne
leave
or
jo
shrb
data16
or
xor
add
mov
cmc
pop
jns
mov
fwait
aas
fldenv
xchg
stos
addr16
ljmp
and
push
xchg
pop
dec
xlat
sbb
pop
in
das
adc
mov
imul
sti
popf
pop
sbbb
and
pop
sub
pop
aas
and
insl
jg
and
dec
xchg
cmpsl
lret
ret
xchg
xlat
xlat
mov
pop
cmp
or
xor
add
mov
shl
sahf
dec
sbb
iret
push
jg
iret
ljmp
xchg
jo
xchg
fmulp
daa
es
xchg
and
lcall
shlb
fwait
xchg
pop
int
mov
and
out
jae
mov
daa
adc
outsl
aaa
std
lahf
jg
mov
dec
adc
out
mov
inc
push
push
aam
push
lcall
cmp
jo
sti
xor
test
std
jge
dec
inc
les
add
pop
jp
pop
sub
jns
mov
iret
or
or
dec
stos
sti
test
test
cmpsl
add
arpl
clc
popa
lahf
in
ds
jmp
adc
imul
insb
jge
jg
or
incl
and
xor
icebp
stos
in
jp
sub
lahf
leave
push
daa
pop
insb
call
jl
dec
sub
ljmp
cmp
mov
jae
jno
shrb
incl
sbb
xor
sub
icebp
pop
xor
cmpsl
sub
pop
clc
rcr
movsl
js
add
lcall
mov
in
push
icebp
addr16
je
adc
js
lret
lret
cld
pushl
xchg
je
lods
pop
call
or
xor
andb
xchg
mov
xchg
pop
dec
std
shlb
fiadds
cmp
sti
ljmp
jle
add
mov
call
iret
pop
outsl
fstpt
fmulp
lret
shll
in
jecxz
mov
out
repnz
adc
bound
cwtl
nop
sbb
negl
jns
push
adc
and
fidivrs
ljmp
xchg
imul
test
enter
add
call
movsb
mov
stos
imul
or
jg
fbstp
sub
ret
mov
jo
inc
pop
sahf
test
mov
sbb
push
call
bound
sub
inc
std
jbe
mov
out
mov
data16
cs
nop
decl
idivb
daa
outsb
xchg
jae
and
lret
popf
mov
cli
inc
dec
jne
cmpsl
dec
xorl
jle
sbb
xchg
adc
jmp
andl
aad
push
mov
incl
or
jns
adc
pop
push
or
inc
xor
cmp
lcall
add
cld
pop
sbb
mov
cmp
stc
pop
sub
sbbb
xchg
lock
jmp
aam
sub
pusha
shl
cwtl
jb
scas
sbb
sarb
idiv
and
sar
jo
incl
adcl
ss
add
sub
inc
mov
incl
lea
xchg
adc
jo
pop
mov
adc
sbb
std
and
mov
jmp
and
adc
pop
cli
mov
scas
imul
mov
and
in
dec
inc
sbb
jno
mov
fst
fidivrl
in
xlat
inc
lods
cmp
adc
mov
or
or
adc
jg
les
dec
jbe
xor
jae
pusha
cli
clc
out
lret
les
outsl
jle
hlt
inc
sub
ljmp
rclb
daa
pop
leave
mov
insl
xchg
testb
loop
in
icebp
jae
mov
jbe
call
sbb
loope
sbb
aam
jmp
push
jbe
adc
push
ljmp
incl
xchg
mov
out
ds
bound
loopne
lea
cmp
mov
add
cmp
push
call
jmp
in
xchg
inc
inc
sbbb
leave
out
add
cmp
in
sbb
mov
lcall
pop
mov
enter
ja
mov
adc
loope
sbb
dec
inc
cwtl
sbb
fisttpl
lea
andb
inc
aad
mov
fldcw
sbb
pushl
cltd
jp
mov
mov
pop
iret
xor
push
cmc
movsb
mov
pop
mov
icebp
cmp
mov
dec
and
shlb
js
pop
ret
ret
movsb
pop
jmp
sbb
icebp
out
xor
or
mov
enter
pushl
sbbb
outsl
stc
cmc
jnp
mov
dec
cmpsb
push
mov
xchg
mov
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
mov
push
xchg
fwait
lds
movsl
test
or
cld
leave
mov
pop
push
in
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
lock
inc
dec
test
dec
into
std
mov
xchg
orb
jbe
jnp
test
mov
xor
das
es
jg
incl
scas
std
jmp
cltd
push
cmc
sbb
inc
add
ss
add
ljmp
ror
add
loope
adc
mov
jbe
sbb
sarb
outsl
in
cmp
jmp
dec
pop
inc
pop
adc
movlps
fnstsw
cmpsl
pusha
sbb
jo
sahf
cmpsl
and
jo
mov
xor
jno
mov
mov
mov
popa
pop
pop
push
in
cli
and
jne
incl
cld
sbb
shll
sbb
xchg
ljmp
add
sar
out
clc
fdivrp
or
inc
sub
imul
sbb
jno
mov
dec
pop
lock
pop
fidivrl
insb
dec
scas
xchg
rcrl
xor
adc
insb
push
add
push
mov
fsubl
adc
jmp
icebp
xor
add
add
incl
test
stc
jg
sbb
sbb
cmp
int3
push
jnp
pop
lods
ljmp
inc
and
daa
inc
mov
mov
decl
shlb
icebp
lahf
pop
xchg
icebp
loop
orl
jb
lods
push
pop
lahf
or
aaa
std
dec
jle
sbb
imul
mov
adc
into
sub
and
add
dec
mul
data16
mov
lret
std
cmp
aam
mov
mov
push
ja
or
clc
adc
push
jns
xchg
pusha
shrl
loope
popf
or
fdivr
das
cli
decl
xchg
mov
mov
daa
push
dec
mov
jecxz
jns
pminub
int
out
jg
lcall
mov
pop
xor
inc
or
xchg
sbb
and
sbb
dec
dec
shlb
aad
add
mov
repz
decl
dec
stos
jne
pop
sub
push
ret
es
push
ljmp
dec
cmc
or
xchg
call
aaa
cmp
mov
jmp
lods
leave
pop
push
push
jne
dec
divl
adc
sbb
jae
into
sbb
ljmp
stos
pushf
sbb
incl
add
test
xchg
jmp
xchg
stc
shlb
std
ljmp
ss
pop
rcr
popa
cmpsl
pop
pop
mov
or
call
das
repz
dec
insl
mov
stc
xor
sub
add
jmp
sub
pushf
test
lret
ljmp
mov
xchg
mov
and
pop
mov
rcll
loop
decl
or
enter
popf
in
rol
inc
pop
push
pop
iret
ficoms
lret
or
cmp
xchg
add
mov
rcr
inc
jg
popf
mov
push
or
aad
call
xchg
xchg
out
mov
and
out
lahf
add
xchg
inc
lock
push
inc
call
pop
push
jmp
ja
clc
mov
fidivl
cmpsl
xlat
and
dec
out
inc
lods
loop
pop
xchg
pop
dec
decl
dec
cli
ds
add
ljmp
adc
dec
jmp
mov
and
enter
enter
mov
jo
cmp
mov
lods
jnp
call
dec
push
dec
cli
in
push
inc
out
push
ret
cltd
insb
dec
mov
push
xor
xchg
pop
mov
test
js
ret
movsl
adc
push
mov
icebp
test
inc
xchg
popf
lock
ljmp
inc
cmp
test
rolb
push
mov
push
add
cli
and
call
adc
push
ljmp
xor
and
lcall
rcll
test
mov
std
inc
jnp
jg
imul
adc
into
mov
xchg
cli
or
lret
jl
mov
shrb
push
cmpsb
and
push
or
or
pop
pop
movsb
mov
xor
lods
in
jns
xorl
call
or
push
lahf
jmp
mov
mov
dec
aad
cmp
sahf
cmpsb
and
call
push
mov
xchg
dec
das
dec
dec
and
adc
lcall
sub
and
cltd
jb
punpckhbw
scas
ja
inc
jecxz
sub
gs
xchg
roll
xchg
mov
lret
cmp
enter
sbb
push
push
sbb
scas
shll
adc
jle
mov
rcl
jge
dec
jecxz
inc
aas
pop
mov
push
and
int
jle
jg
ficomps
out
and
push
test
inc
ds
mov
and
push
lcall
push
int3
test
roll
in
pop
iret
xchg
ret
mov
call
mov
mov
aam
add
or
pop
in
loope
mov
int3
mov
aam
pop
push
dec
fwait
je
push
xchg
xlat
mov
call
or
push
lcall
push
mov
int3
and
push
mov
sub
ljmp
cmpsl
pop
xchg
sbb
enter
test
movsl
stc
push
cltd
mov
xchg
push
dec
ljmp
mov
add
aaa
inc
out
rcrl
rcrl
subl
mov
fcomip
ljmp
xchg
test
ret
sar
or
jg
subb
call
cli
xchg
outsb
adc
dec
clc
lcall
ljmp
je,pn
shr
dec
push
sub
adc
mov
fists
sarl
xor
xchg
ja
int3
mov
push
jns
inc
adc
test
push
in
ljmp
jp
jne
scas
ljmp
adc
out
scas
fwait
repnz
test
pusha
scas
ds
mov
mov
push
cmc
fsubs
jne
mov
aam
mov
scas
sub
push
add
jmp
shll
cmpsl
dec
push
outsb
test
mov
rorl
mov
mov
ljmp
pop
or
and
push
lock
xchg
sub
pop
movl
in
movsl
mov
punpckldq
lahf
sbbl
sub
int
ds
or
and
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
and
fisttpll
mov
div
push
scas
xchg
rcl
leave
ljmp
punpckhdq
push
scas
mov
lods
shrb
push
fsubl
xchg
mov
mov
jne
inc
cwtl
jmp
outsb
mov
mov
out
push
decl
adc
mov
repnz
outsb
enter
iret
loop
dec
cwtl
inc
test
icebp
popa
xchg
ret
fldt
incl
mov
xchg
cmpsl
inc
in
test
out
jle
movsb
data16
jl
ret
loope
mov
add
in
ljmp
push
out
and
dec
ret
out
sbb
popa
mov
xchg
ja
bnd
loop
or
mov
andl
ret
out
dec
addr16
mov
or
je
sub
aas
icebp
fcmovnb
shrl
lock
jne
adc
cld
jg
in
adc
lods
clc
sti
leave
test
loopne
test
or
mov
stc
mov
push
push
push
lret
jmp
inc
and
jbe
insl
add
clc
add
mov
lock
outsl
xchg
lcall
pop
dec
mov
dec
stc
push
xchg
sbb
imul
rcll
loope
ds
xchg
jg
push
push
ss
movsl
cs
mov
and
das
mov
sbb
dec
std
lcall
out
iret
leave
inc
test
aaa
jle
push
push
out
push
jmp
sub
fcomip
outsl
cltd
ljmp
pop
ja
or
aam
ror
stc
lods
jbe
ja
decl
adcl
inc
cmpsb
push
or
sub
dec
incl
pop
out
dec
pop
lcall
cld
call
cld
xchg
loope
and
mov
xchg
scas
jno
jne
jecxz
cld
jecxz
push
leave
aam
jle
jnp
and
ss
std
pinsrw
lock
cmp
and
out
cmp
shll
pop
aas
lcall
push
and
pop
pop
mov
dec
mov
sarb
dec
sub
xchg
mov
xchg
loop
into
popf
mov
sti
inc
sbb
into
mov
popf
mov
stc
push
jle
sar
jg
jbe
cmp
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
xchg
andb
lds
mov
stos
lcall
test
adc
cs
mov
and
fsubl
adc
cmp
out
decl
stos
jp
loope
out
or
mov
adc
ja
or
ja
dec
push
subb
sti
cmp
in
pop
pushf
inc
sbb
test
add
pop
mov
shll
jmp
mov
pushf
addr16
lret
sbb
mov
ret
subl
inc
popa
fdivl
mov
sbb
xor
jae
sbb
pop
subl
add
jmp
insl
cmp
pop
cmp
shlb
push
pop
in
cmp
aaa
mov
stc
cld
mov
das
fwait
jbe
sbb
sub
sub
add
sarb
mov
decl
in
cmp
into
jle
inc
test
cmpl
lock
sbb
mov
and
mov
push
cmpsb
mov
call
and
rcll
mov
lea
sbb
imul
lods
addb
lcall
scas
mov
arpl
adcb
addr16
jle
pop
mov
decl
mov
xchg
movsb
lea
jmp
mov
push
stos
jnp
mov
call
pop
scas
push
inc
sbb
mov
clc
aas
dec
daa
les
in
clc
pop
pop
shl
lods
xchg
jne
sbb
call
push
mov
mul
adc
ljmp
adc
popf
fs
sbb
push
add
push
inc
dec
pop
lds
ss
ds
aas
lods
sub
fldcw
pop
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
jmp
aam
aas
mov
push
cmp
or
push
jp
add
cmp
cmp
sub
dec
js
in
pop
or
cmp
sbb
sub
into
jbe
cmc
call
test
leave
ss
xor
mov
jg
out
aas
push
xchg
mov
sar
ret
les
and
nop
dec
dec
scas
sub
mov
test
push
sar
into
sbb
loopne
clc
ljmp
mov
mov
mov
mov
pop
xchg
inc
ja
shrl
aaa
adc
pop
mov
lds
mov
mov
nop
scas
push
js
ss
sbb
push
pushf
add
dec
or
out
or
fstpt
jmp
jp
mov
inc
fildll
imul
dec
cli
nop
test
pop
pop
xchg
cld
fs
push
test
movsl
mov
test
imul
scas
clc
ljmp
push
cmp
mov
mov
sub
shll
and
jmp
adc
jbe
dec
in
adc
loop
je
push
jne
mov
call
aad
fistl
add
jl
scas
out
sahf
sbb
test
mov
cmp
xchg
mov
rcrb
out
xor
pop
cld
adc
out
or
sub
mov
and
cwtl
mov
mov
push
jae
pop
cmc
incl
add
leave
ret
es
in
sub
mov
xor
jae
incl
mov
xchg
testl
xor
clc
mov
mov
ljmp
pop
bndstx
xchg
cmp
bound
pop
in
cmp
ss
dec
lods
jmp
ss
dec
std
incl
insl
lock
xor
ret
loope
mov
mov
je
je
mov
mov
call
fidivl
je
decb
pop
lret
cmp
ljmp
push
mov
inc
add
sub
dec
pushf
mov
vmovapd
rolb
and
mov
mov
sbb
int
pop
repnz
loop
rolb
jecxz
call
pushf
lahf
and
aad
sub
mov
gs
lret
inc
clc
mov
xchg
xor
mov
sbb
dec
jb
xchg
inc
icebp
xchg
mov
int3
aam
fcomip
inc
sub
es
lea
je
test
dec
xchg
xchg
dec
push
roll
xchg
dec
cld
push
lods
jb
jecxz
ss
mov
incl
mov
and
inc
xchg
pusha
imul
xchg
xlat
out
fcom
popl
je
jg
xchg
pushl
leave
imul
negb
aam
ds
xchg
and
ds
imul
decl
cmp
mov
inc
outsb
mov
scas
jg
std
adcb
neg
xor
push
jbe
fld
or
lods
jle
jmp
lcall
das
sub
subb
call
lcall
push
sbb
aam
mov
aam
mov
push
add
dec
loope
and
shll
test
dec
mov
mov
sub
adc
out
bound
pop
fcmovnbe
sarb
xchg
outsb
incl
jmp
test
mov
pushf
xor
inc
shr
push
sub
sarb
pop
divb
mov
sti
std
mov
and
incl
sbb
cmp
add
sbb
incb
pop
jno
sub
aam
cmpl
jae
popa
push
xchg
mov
mov
jmp
xor
hlt
mov
test
and
sub
nop
push
mov
pushl
inc
ficompl
jae
data16
movl
divl
mov
or
loopne
or
and
adc
mov
xor
lcall
leave
and
xchg
xchg
mov
cld
pop
sub
adc
gs
dec
mov
cld
decl
add
loop
jmp
rclb
jns
jmp
imul
mov
ja
adc
dec
adc
addr16
cmp
ror
cmpsb
gs
lret
sbb
jnp
imul
fcomps
fcom
push
xchg
adc
call
into
mov
insb
out
mov
xchg
divb
add
dec
xchg
lret
mov
sbb
cwtl
incl
cld
aaa
and
pop
adc
scas
adc
aad
dec
data16
incl
leave
push
push
adc
mov
push
rolb
mov
mov
clc
xchg
shrb
jecxz
sbb
xchg
cmpsl
je
fneni(8087
sub
outsb
lret
repz
cmc
pop
jle
mov
add
add
push
sarb
int
xchg
add
test
push
cmp
lds
scas
imull
inc
sti
xor
lcall
rcrl
lods
jns
cld
popf
aad
xchg
mov
cmpsl
add
ljmp
cmp
xor
pop
imul
xlat
xchg
fnstenv
sbb
stos
repz
inc
xlat
addr16
pop
push
mov
cmp
fdivl
bound
mov
rcr
pop
out
rolb
aas
test
or
int3
loop
pop
adc
ljmp
dec
inc
inc
into
push
mov
mov
rcll
jne
aam
ljmp
push
mov
test
gs
cmp
pop
or
sub
mov
push
mov
call
jbe
lret
jo
push
sub
icebp
push
test
das
xor
xor
xor
push
inc
out
out
dec
push
jge
fcoms
shlb
daa
in
ljmp
outsl
jne
jns
bound
lock
aam
out
xor
andl
decl
add
int3
ds
xchg
sbb
push
mov
arpl
lea
call
mov
push
repz
jnp
adc
sahf
shll
jb
outsl
dec
into
lret
push
call
scas
jno
repz
lods
push
adc
cli
sub
adc
dec
lea
xor
mov
mov
jg
iret
mov
sbb
jp
push
negl
ret
call
mov
mov
pop
outsl
or
std
aaa
mov
in
call
mov
xor
repz
jne
jl
push
push
mov
in
pop
xchg
or
outsb
push
jge
sbb
pusha
insl
mov
ret
push
out
clc
cltd
dec
push
sbb
and
cmc
inc
jbe
mov
xchg
ret
adc
roll
inc
xor
in
mov
decl
int3
sub
mov
enter
mov
sti
jg
cmp
mov
lcall
std
test
aaa
repnz
js
push
iret
aaa
fstl
adc
call
lods
dec
cmp
pushl
mov
nop
lea
popf
mov
jg
js
adcl
int
fsubrl
pushl
fdivrl
and
pop
aas
push
rolb
sbb
insl
jae
push
sbb
or
push
insl
ds
inc
dec
cmp
leave
pop
dec
mov
adc
aam
jg
test
mov
push
or
decl
fists
hlt
or
adc
push
test
movsl
test
mov
mov
shlb
fdivp
aam
mov
rorb
stos
aad
sarb
jbe
lods
cld
or
outsl
jg
mov
adc
jmp
flds
fists
lcall
jns
push
int
push
mov
lahf
sbb
sbb
xchg
lret
into
les
mov
ljmp
test
xchg
mov
fisubl
pop
divl
and
into
dec
scas
sub
jmp
adc
insl
sbb
xchg
int
nop
sub
lods
jbe
mov
jne
outsl
mov
es
bound
aad
call
or
pop
test
jle
jno
dec
ljmp
pop
pop
xchg
xor
mov
xor
jne
aam
pop
push
stos
push
int
adc
leave
and
call
pushf
incl
out
pop
jno
add
mov
push
xlat
pop
lods
add
aad
cld
call
mov
test
ficomps
insl
add
cli
cld
ss
jge
mov
mov
fsubl
dec
lods
pushf
jnp
pop
xor
xchg
ljmp
test
sahf
hlt
adc
sub
pusha
aaa
xor
call
jo
lcall
mov
push
popf
jp
sub
push
outsb
mov
ljmp
dec
mov
rorb
mov
xchg
jb
or
push
loopne
call
nop
mov
and
movb
popf
xchg
sbb
hlt
fwait
mov
ret
push
loope
enter
incl
scas
pop
jmp
pop
xor
add
xchg
insb
stos
mov
movsb
insb
jge
cltd
call
xor
cmc
xchg
bound
cltd
xchg
sub
xchg
ficompl
sbb
mov
adc
ficompl
jge
or
pop
lret
mov
push
sahf
rcrb
call
ja
cmpsl
jp
idivl
dec
popf
pop
ret
in
out
je
rorb
icebp
mov
stos
aam
pop
ljmp
mov
xlat
mov
shll
mov
mov
mov
or
jmp
shl
inc
fcoms
dec
call
inc
insl
sti
adcb
ljmp
imulb
pop
out
fcomip
orl
movsb
sbb
jb
inc
fsubr
daa
mov
push
cmp
aas
push
call
in
pop
add
mov
xchg
aam
in
mov
das
mov
cmp
incl
and
pop
dec
ja
xorb
testb
cmp
pop
repnz
out
clc
dec
rclb
aad
dec
xchg
decl
push
divb
hlt
fucomi
lods
outsb
xchg
movsb
inc
sarl
mov
pusha
cmp
dec
cld
call
insb
stc
mov
aaa
das
jl
jae
call
cmp
ljmp
popf
pmulhw
decl
adc
add
sub
xor
dec
mov
inc
add
mov
decb
fdivrs
in
bound
hlt
dec
push
pop
out
lcall
loop
stos
adc
dec
outsb
js
xchg
arpl
orl
mov
pusha
mov
push
pop
es
sub
jnp
test
jg
pushf
mov
insl
loope
decl
mov
sti
inc
push
inc
clc
mov
cmp
data16
xchg
jp
push
ja
call
pop
push
popf
fldcw
dec
frstor
shll
rclb
sbb
pop
and
int
jmp
outsl
mov
hlt
shlb
cmp
orb
test
mov
pushl
dec
roll
xor
cmp
ficoml
push
aad
sbb
test
lcall
incl
xchg
and
mov
fwait
jle
xchg
incb
sub
andb
js
bound
clc
loopne
lock
sub
and
ja
test
clc
fcomip
incl
lds
inc
and
xor
inc
jno
lods
jp
inc
call
xchg
mov
out
incl
iret
sub
xchg
sub
scas
incl
in
ljmp
insl
loop
cmp
inc
push
call
popf
adc
fiadds
test
xchg
insl
dec
mov
xlat
hlt
addl
mov
sub
dec
lock
inc
hlt
loop
sub
out
push
push
pushf
pmaxsw
ljmp
fistps
mov
sbb
xor
and
mov
jge
sub
cli
cmp
and
cmp
fnclex
dec
pop
sbb
push
or
js
inc
xor
pop
outsl
cli
pushl
push
hlt
popf
mov
sbb
pop
xchg
jb
sbb
sub
xchg
jp
dec
adc
imul
xchg
repnz
outsl
cmc
scas
inc
loope
mov
ret
fdivrs
sub
enter
mov
out
xor
inc
leave
add
lcall
decl
mov
dec
rcl
fdivr
in
xchg
pop
adc
js
std
test
xchg
fdivr
mov
sub
adc
push
sub
movsl
in
lock
aad
jle
fiaddl
addr16
popa
aaa
into
lock
fcmovbe
shl
dec
fs
jo
leave
add
dec
ret
idiv
scas
ljmp
xor
mov
push
mov
imul
sub
jmp
das
inc
fcomi
lods
xchg
mov
fiadds
sub
mov
push
jmp
dec
pop
clc
pusha
int
push
mov
orl
cmp
jg
call
push
fxtract
jo
cwtl
mov
insl
mov
pushf
mov
outsb
cli
decl
aam
push
jbe
cmpsb
sub
xlat
cmp
cmp
cs
fwait
daa
adc
ljmp
call
in
xor
lea
pop
and
subl
clc
iret
cli
or
mov
les
test
mov
inc
nop
xlat
jo
cltd
jg
imul
jne
shrb
and
lcall
rcll
or
push
int3
aam
enter
and
lods
iret
push
sbb
sub
pop
jmp
in
jae
xchg
das
push
loope
mov
shrl
vpsubusw
inc
ljmp
sbb
filds
cwtl
dec
ret
iret
sti
aad
je
fs
cmc
xor
sti
mov
lcall
pop
sub
idivl
fs
jg
dec
dec
ljmp
jbe
inc
lods
mov
sbb
imul
lock
jmp
fidivrs
pop
ds
jmp
leave
stc
lods
aam
or
dec
scas
mov
arpl
andb
dec
repz
jae
jl
adc
ljmp
push
lcall
enter
jmp
fmul
and
das
imull
xchg
je
ror
cmpsl
dec
sbb
jg
rcl
pop
addr16
jl
jb
or
pop
and
ljmp
inc
mov
shrl
jmp
push
push
cmp
adc
pushl
sarb
int3
jns
push
cli
leave
and
mov
in
ret
cmpsb
call
rcll
pop
push
mov
mov
add
adc
shrl
das
add
cmc
call
movzwl
mov
and
or
xor
inc
lret
shll
jg
aas
mov
ss
ljmp
cmp
test
leave
ret
lcall
xchg
cmc
fwait
cmpsl
stos
pop
sub
cwtl
or
incl
hlt
pop
mov
mov
stos
and
xor
mov
adc
inc
std
ljmp
push
movsl
test
jno
js
lock
mov
aas
shl
stos
inc
pop
call
add
pushf
into
pop
dec
sub
dec
mov
in
insb
xchg
lret
sub
out
imul
incl
add
jmp
jmp
and
cmpsb
push
test
outsl
inc
xchg
or
test
imul
push
or
imul
ds
pusha
dec
mov
mov
jg
inc
hlt
js
jmp
xchg
add
pop
ss
adc
mov
incl
jg
in
xor
pop
mov
hlt
mov
push
or
sub
std
mov
ljmp
pop
or
jp
scas
les
shll
xchg
xor
mov
out
mov
cmp
inc
xchg
push
call
or
add
test
lret
or
mov
hlt
inc
sbb
arpl
xchg
pop
gs
les
jne
ljmp
sbb
repnz
fistl
adc
enter
jo
std
lods
push
mov
aam
jnp
inc
rorb
out
aam
jp
test
jo
popf
xor
in
mov
cld
pop
mov
popa
ljmp
in
out
fldt
fidivrs
je
repnz
jmp
jmp
rolb
mov
pushf
popf
out
imul
out
jne
loop
loope
aaa
add
je
insl
lock
jo
in
fdivrl
jno
ds
cmp
or
mov
xchg
sti
cmp
icebp
xchg
loopne
mov
or
test
ljmp
mov
shl
sbb
pusha
mov
dec
pusha
adc
and
cmpsb
rcr
insl
incl
jbe
xchg
adc
movsb
cmp
setp
push
cmpsb
pop
xchg
pop
xor
jmp
xchg
cmp
and
adcb
push
sub
scas
sbb
test
add
xchg
mov
out
jb
into
js
xlat
ljmp
test
loop
push
adc
shrl
dec
or
sub
cmp
fisubl
cmp
hlt
dec
fists
or
sbbb
lds
cmp
jg
into
aad
xor
mov
dec
hlt
fcoms
shlb
mov
pop
lods
arpl
std
lcall
adc
xchg
xlat
lea
mov
dec
mov
inc
movsl
xor
rolb
ror
call
and
ss
cmp
dec
xor
sahf
xlat
and
test
call
and
jl
ret
xor
rorl
sub
hlt
call
addb
inc
mov
sub
dec
fcompl
adc
lods
push
fimuls
call
and
cli
and
cmp
dec
setno
mov
lahf
mov
out
mov
push
ss
add
pushf
lds
inc
pop
lods
ljmp
scas
adc
jge
pop
fnstenv
push
add
mov
stos
cmc
sub
std
scas
lock
dec
push
push
add
push
and
mov
add
cmp
call
loopne
xchg
mov
mov
aaa
cld
jmp
or
jb
sar
dec
shlb
cmp
push
sbb
ret
movsl
and
andl
lods
xor
stos
jmp
mov
gs
ret
mov
arpl
mov
in
and
pushl
mov
test
movsb
dec
adc
or
jl
jg
mov
xchg
adc
sub
je
lret
add
ja
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
sahf
sahf
ljmp
roll
sub
mov
sarb
arpl
add
mov
out
sbb
jge
bound
je
xor
es
ljmp
pushf
adc
xlat
leave
sti
testb
pop
jl
imul
sbb
ljmp
jae
loop
mov
lock
add
push
adcb
enter
mov
in
or
mulb
mov
shrl
leave
jp
pop
sbb
mov
push
lret
cmpsl
dec
xchg
push
jns
mov
sub
dec
jns
sub
add
push
or
push
cltd
sub
jle
shlb
adcb
pop
es
push
dec
xor
fcmovu
and
sbb
sub
lods
add
in
mov
mov
insl
and
xchg
test
cmpb
xor
mov
mov
mov
jnp
subl
outsb
filds
add
xlat
loope
jmp
sbbb
das
call
jns
jne
lret
mov
loopne
roll
push
andl
inc
adc
aad
jp
incl
push
out
push
dec
and
mov
xor
iret
sbb
sub
mov
fidivrl
rolb
mov
ljmp
xchg
cmc
nop
add
lcall
ret
ja
cmp
push
pop
mov
sub
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
dec
pushf
jne
sub
sub
call
cld
pushl
add
fdivrs
and
in
cwtl
or
dec
sub
dec
nop
mov
sub
xor
loop
fistpll
andb
daa
fcompl
mov
test
rcl
es
cld
out
add
pushl
bnd
sub
cmp
or
mov
inc
and
loopne
ret
fistpll
add
push
push
lret
xor
hlt
dec
popa
jns
push
dec
outsl
or
cmp
pushl
jnp
add
xchg
orb
mov
das
dec
add
data16
sbb
incl
sub
pop
fcoms
pop
fidivs
inc
xchg
adc
mov
lcall
xlat
lods
jnp
xor
xor
jns
test
sbb
pop
xorb
ljmp
push
mov
lea
jns
enter
fdivr
dec
in
xor
dec
frstor
jl
pop
adc
cwtl
or
push
sbb
subb
cmc
add
mov
push
call
mov
jno
mov
mov
mov
incl
sti
adc
insb
loopne
popa
enter
adc
inc
lcall
scas
add
mov
scas
fildl
mov
cwtl
imul
iret
xchg
xchg
incl
and
aas
aas
or
sbb
out
stos
or
mov
dec
insb
pop
out
inc
stc
inc
add
mov
popf
dec
test
mov
pop
into
lods
aam
fisubrs
xchg
lcall
ljmp
mov
cltd
fwait
mov
push
pusha
aam
clc
push
xlat
sbb
and
stos
mov
mov
or
add
dec
ljmp
incb
loope
cltd
addr16
icebp
notl
inc
insl
gs
stos
jnp
jo
out
ror
lods
fisubl
jl
and
mov
mov
inc
incl
xor
push
imul
dec
or
jl
add
stc
jge
adc
mov
dec
pop
nop
jo
cs
or
jmp
sbb
stos
lcall
cmp
lock
add
adc
inc
test
loopne
mov
sub
iret
test
inc
add
pop
or
int3
and
xchg
mov
das
clc
dec
mov
cmp
daa
and
fnstcw
test
pop
and
mov
push
call
aad
jne
push
add
scas
mov
or
divb
cwtl
inc
scas
aas
xlat
mov
push
push
jmp
data16
cmc
arpl
push
inc
mov
loope
fnsave
mov
cmp
pushl
jbe
xor
test
div
repnz
cli
xor
nop
inc
fadd
or
fnstcw
jns
push
sbb
pop
push
cs
adc
mov
rolb
lahf
and
je
cmp
xchg
mov
lcall
lret
mov
std
pusha
out
inc
push
repnz
rcrb
in
dec
imul
inc
daa
lahf
jb
mov
out
sarl
sbb
cmp
push
pop
je
or
call
cwtl
addr16
clc
push
mov
lret
and
adc
push
lock
adc
mov
int
je
sub
xchg
and
fwait
dec
nop
fistl
mov
cltd
and
dec
mov
popa
xor
push
sbb
mov
jb
xor
popa
adc
pop
insl
lcall
mov
and
mov
sub
daa
pop
cs
jne
stc
mov
xchg
push
push
and
mov
sbbb
adc
dec
ljmp
cmp
fisubrs
xor
mov
lret
and
ljmp
dec
out
sub
cs
fsubs
popf
in
test
decl
dec
sub
inc
mov
out
movsb
ljmp
mov
dec
push
incl
les
push
xchg
fcoml
imul
push
sub
adc
and
jp
decl
mov
jno
jp
ljmp
push
cmpsb
push
dec
pop
sahf
pop
push
je
mov
xchg
bnd
xor
fcos
decl
push
jg
mov
loop
je
fildl
adc
or
mov
nop
mov
push
jl
mov
or
mov
movsl
movsl
jmp
cmp
sti
test
inc
insl
mov
mov
xor
ret
enter
ret
pop
test
cltd
fadd
pop
cli
xor
notb
addr16
jmp
js
nop
scas
lds
cld
mov
jge
pop
enter
shll
adcb
mov
sahf
pusha
jo
ja
das
ljmp
sbb
shl
mull
cltd
arpl
jae
mov
push
push
mov
repz
mov
mov
int3
xchg
comiss
loop
hlt
adc
in
mov
movsl
incl
les
mov
shlb
mov
ret
xor
sahf
lret
dec
mov
adc
repnz
call
fisubrs
and
popl
lock
enter
sub
and
jae
jg
test
or
adc
rol
in
add
xchg
out
clc
ret
iret
xchg
cmc
mov
and
xor
or
cltd
fildll
mov
inc
lcall
aas
in
cwtl
sub
or
and
negb
jno
cld
arpl
imul
jmp
out
add
test
pop
roll
or
jmp
lcall
and
rclb
incl
mov
mov
dec
mov
pop
pushf
cmp
cltd
or
cmp
rcrb
std
call
in
jb
out
loopne
xor
push
add
mov
push
stc
in
imul
hlt
in
mov
out
pushl
shr
cmpl
xchg
or
int
mov
testb
mov
pop
fisubrs
cmp
mov
or
test
and
inc
pop
xchg
jg
cmp
sub
in
enter
cltd
gs
sub
popf
and
lods
xlat
incl
cld
aad
dec
pop
mov
imul
jo
add
xlat
sbb
subl
nop
dec
inc
andb
and
lcall
and
xchg
sub
div
dec
mov
jb
xorl
sub
outsl
mov
in
inc
mov
mov
push
js
loopne
lcall
incl
nop
dec
dec
enter
pop
in
inc
push
xchg
outsb
nopl
cld
ss
push
pushl
jo
test
test
add
int3
dec
out
and
dec
psadbw
pop
test
xchg
gs
mov
or
fwait
popf
push
sub
es
sub
xor
incl
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
sub
xchg
pushl
std
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
bound
in
sub
inc
mov
and
lret
rolb
ss
pushl
shrb
test
jmp
nop
xlat
mov
scas
aam
or
mov
xchg
xchg
jmp
mov
dec
fstpt
loopne
xchg
pop
mov
pop
sub
adc
mov
int3
cmp
out
sub
mov
cld
mov
ds
sub
popa
push
jae
in
mov
popa
incl
in
cbtw
imul
ret
mov
pop
xchg
sbb
pop
std
mov
fstl
fstl
movsb
addr16
push
jae
cmpsb
dec
mov
cmp
add
and
outsb
movsb
mov
cmp
popf
jge
pop
cli
call
xchg
mov
xchg
jo
sarl
jge
mov
adc
inc
ret
jmp
adc
mov
xchg
adc
jo
lds
call
incl
xchg
push
in
push
jle
jp
outsl
jl
test
divb
mov
scas
xchg
ret
mov
dec
sub
adc
or
and
push
mov
xorb
inc
xchg
out
addl
ljmp
ficomps
aad
dec
pop
sbb
adc
pop
bound
jg
push
insb
push
dec
into
jbe
icebp
sub
inc
repz
pop
mov
out
mov
mov
gs
push
dec
xchg
add
inc
push
fdivrs
jbe
mov
fisubrs
test
loopne
js
dec
mov
push
ds
sbb
cmp
jmp
xor
cwtl
jg
push
int
loope
es
sar
push
jo
pop
push
sahf
push
sbb
cmpsb
fsubs
mov
aam
movsb
jne
idiv
call
movsl
repnz
lahf
pop
cmp
mov
mov
fdivr
mov
cli
fwait
push
faddl
pusha
xchg
decl
icebp
fistpll
jbe
movsb
jmp
dec
mov
out
cltd
pop
xchg
inc
push
adc
orl
jg
cmc
fdiv
mov
sbb
pop
cmp
mov
ja
aam
jno
out
or
dec
in
ja
jecxz
cs
lock
decl
cmp
pushf
cmp
inc
hlt
inc
add
push
adc
mov
scas
rcll
jg
adc
add
mov
jmp
ret
nop
int3
jmp
jg
mov
fadds
mov
add
aas
adc
aas
ljmp
ljmp
je
ja
mov
pop
sbb
push
or
test
sub
mov
mov
call
scas
aad
adc
sti
push
popa
std
imul
cmpsl
pop
lock
ljmp
xchg
call
sbb
cmp
fnstsw
popf
pop
adcl
hlt
inc
xchg
shl
sub
jg
jne
mov
ja
cmp
nop
cmp
mov
dec
fwait
imul
mov
jne
or
cmc
add
pop
push
cmc
jb
dec
jge
pushf
cli
rcl
cmp
mov
aam
jb
es
lods
lods
add
out
add
jmp
test
fldt
test
add
test
test
mov
ud0
dec
xor
cwtl
test
pop
sbb
dec
add
jns
loope
sub
mov
mov
ljmp
jle
and
or
ficompl
cmp
flds
sub
mov
mov
ljmp
xchg
xchg
hlt
lods
imul
or
sbb
fcmovnb
fwait
sub
call
mov
mov
and
mov
idivb
enter
fnstenv
stos
call
incl
out
xorl
mov
inc
rorl
shrl
jo
jg
iret
data16
sbb
lcall
enter
push
pop
cmc
stc
mov
mov
mov
mov
mov
bound
shll
out
rolb
incl
mov
loope
ret
mov
cmp
cwtl
sbb
nop
sub
and
mov
icebp
pushl
mov
loope
js
push
xor
popf
xchg
xor
jg
or
es
dec
outsl
push
fbld
mov
pop
adc
add
popa
or
aaa
loopne
cmp
sar
rol
inc
sub
push
mov
lods
xchg
arpl
cmp
pop
inc
movsb
decl
imul
xchg
sub
dec
sbb
test
and
test
sahf
xlat
stc
pop
cmp
push
cld
push
jno
ret
int3
push
ljmp
pop
dec
inc
call
jge
adc
incl
jecxz
clc
xor
out
push
pop
sbb
dec
cs
cld
lods
hlt
sub
push
loopne
fisttps
js
and
pop
jb
inc
push
out
xchg
gs
adc
sar
jg
decb
cltd
jge
push
mov
inc
enter
ljmp
mov
push
jmp
aas
aad
int
or
xlat
lea
icebp
lcall
cwtl
outsl
mov
cmp
inc
sbb
xor
cmp
add
pushl
bound
pop
outsl
and
dec
call
jl
fdivr
ret
add
sbb
faddp
xchg
add
clc
xchg
clc
jg
test
and
push
mov
incl
mov
inc
mov
jns
hlt
loop
pop
aad
cmc
pop
fcomip
sub
mov
sbbl
add
test
andb
scas
xchg
mov
jg
call
call
popl
mov
push
push
fisubs
sbb
sbb
pop
sub
dec
mov
add
pminub
jg
test
aas
fildll
movsb
pop
mov
in
int
or
lcall
jmp
sbb
sarb
jns
and
mov
or
cld
pushl
xor
mov
jmp
in
or
jmp
push
hlt
or
into
xchg
aas
mov
movsb
xor
pop
sbb
call
xor
enter
jecxz
or
cltd
mov
xlat
inc
or
sbb
jmp
add
and
imul
test
jl
divl
push
cmp
add
jmp
push
adc
in
into
cwtl
pop
mov
pop
icebp
sarb
mov
mov
lahf
out
fs
xor
mov
jl
out
pop
inc
int3
cmp
ret
pop
cmc
xor
vmread
lea
incl
push
sbb
popa
and
add
dec
in
push
loopne
lret
lcall
call
arpl
push
sbb
insl
sbb
or
bound
pop
xchg
jmp
lahf
dec
adc
jmp
sbb
inc
or
pop
ds
push
xchg
loopne
lock
fidivs
andb
cltd
jne
jecxz
pop
adc
push
add
pop
jmp
arpl
mov
and
and
aaa
in
sbb
insl
jmp
push
enter
xchg
pop
pop
inc
inc
xor
mov
push
insb
cli
sbb
imul
mov
mov
mov
orl
sbb
jmp
hlt
cs
sbb
cmp
cmc
loope
pop
fdivp
leave
pop
sahf
stc
or
movsl
or
xchg
and
jmp
dec
gs
incl
cli
jg
ljmp
adc
loopne
movsb
pusha
outsl
and
xor
das
adc
push
push
repz
stc
aaa
mov
push
ja
sbb
fidivl
enter
mov
or
scas
cmp
jns
jg
out
cmp
fistl
jmp
add
out
mov
ljmp
mov
int
cmpsb
or
mov
rorl
adc
ror
sbb
test
inc
lock
call
jns
mov
or
sub
imul
decl
fld
pop
aam
cmp
jecxz
outsb
jl
jp
xchg
fdivl
adc
mov
stos
push
jmp
xor
push
jnp
mov
xchg
clc
decl
push
dec
push
push
jp
sub
pop
push
jno
push
mov
add
jl
push
loopne
out
add
lret
or
loope
es
outsb
mov
lods
adc
jns
decl
xlat
loop
mov
xchg
sub
bound
cmpsb
icebp
aas
std
pop
out
push
adcb
incl
xchg
pop
adc
sahf
stos
fs
xchg
lahf
jnp
lret
inc
cmp
adc
cmp
cmp
sbb
mov
popl
jo
cwtl
out
loop
addr16
sub
cmpsb
pushl
popf
std
popa
jae
and
sti
insb
or
jbe
xchg
lods
inc
sbb
sbb
incb
test
mov
mov
jle
adc
incl
inc
mov
adc
sub
int3
dec
ljmp
incl
es
jp
jnp
or
out
test
je
cwtl
mov
jmp
mov
call
data16
inc
sbb
cmp
aas
loopne
xchg
aad
ret
adc
adc
cmp
push
js
stc
mov
push
xor
pusha
rclb
lock
mov
inc
mov
pop
sub
push
mov
adc
or
test
test
jg
decl
adc
xchg
mov
outsl
dec
and
fwait
sahf
sub
pop
adc
incl
fdivl
push
mov
adc
mov
ret
daa
fistpll
dec
jmp
adc
movsl
fsubl
jecxz
mov
jle
cmp
filds
push
mov
std
cmp
fcmovb
sti
negb
loope
sti
mov
leave
jmp
inc
mov
push
or
jae
mov
icebp
decl
push
jo
or
pop
lea
xor
ljmp
incl
inc
loopne,pn
into
xor
in
ffree
inc
in
shll
mov
mov
insb
popa
sub
pop
pop
or
jg
pushl
inc
fidivl
jle
lret
dec
or
cwtl
mov
arpl
aad
lcall
out
jmp
jecxz
loop
add
push
pop
adc
repnz
adc
cmp
incl
aaa
inc
adc
inc
jns
clc
cwtl
and
mov
into
pop
out
xchg
arpl
push
loop
cltd
fidivrs
shlb
jae
push
mov
lods
in
and
push
iret
ljmp
jecxz
int3
cmpsb
sbb
loopne
dec
clc
test
fmull
cmpsl
popa
xchg
movsb
sub
jle
pushl
xor
and
cmp
cmp
bound
push
mov
inc
jg
mov
mov
xchg
xor
xlat
stos
and
lcall
mov
push
mov
inc
subl
sbb
pop
push
dec
xor
loopne
int3
mov
shlb
ss
inc
fwait
cmp
mov
rcrb
push
pop
ljmp
rcl
div
push
cmp
fwait
out
dec
and
xchg
adc
ds
add
das
sar
cmp
xor
and
jbe
push
xchg
or
jg,pt
mov
popf
fisttpll
or
jbe
adc
lds
cmp
ficompl
lcall
dec
jno
xor
stos
inc
jne
dec
sbb
sti
mov
mov
fimull
inc
jecxz
push
cmc
inc
inc
cltd
hlt
pop
mov
xor
ds
cmpsl
pop
enter
fiadds
dec
mov
lods
movsb
movsb
sbb
push
lods
pushl
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
cmp
pop
sub
aaa
xacquire
gs
incl
dec
testb
xchg
mov
mov
outsb
push
mov
ss
scas
loope
adc
jmp
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
adc
ljmp
jmp
out
fs
mov
leave
mov
mov
test
mov
dec
mov
lods
stos
pop
jmp
sub
repz
dec
mov
and
gs
cmp
in
cmp
sti
mov
cld
call
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
sub
iret
xchg
jp
cmp
pushl
in
pop
scas
call
stc
movsb
jo
dec
out
gs
fwait
leave
push
fwait
loopne
imul
js
lcall
das
mov
ret
mov
mov
lods
xchg
sbbl
dec
add
jae
lcall
xchg
mov
js
xchg
or
push
lock
fnstsw
lcall
js
mov
sti
push
aad
sub
add
popf
mov
jo
in
loope
jmp
dec
in
movsb
rcr
je
mov
mov
add
cli
mov
mov
adc
jb
push
enter
aas
xor
movsl
cltd
inc
jg
lcall
cs
aam
pop
push
lahf
or
mov
sbb
scas
incl
jg
mov
mov
jecxz
loopne
dec
sub
ret
mov
push
inc
mov
das
jo
mov
push
out
ljmp
xor
cltd
mov
orb
dec
inc
add
jmp
sub
aas
leave
lcall
mov
xor
inc
fiaddl
lea
dec
fadd
pushl
pop
xor
aaa
push
xchg
xchg
aam
daa
sti
ljmp
fnsave
or
jg
outsl
jmp
out
addr16
or
xlat
add
loope
mov
popw
mov
push
xchg
xor
jmp
or
sbb
push
inc
cmc
xchg
xchg
xor
call
jmp
push
imul
mov
out
and
cld
rorl
fcomps
cmp
test
mov
clc
filds
or
cmp
mov
or
insl
incl
cmp
jno
push
ja
imul
add
xor
out
push
sub
ljmp
inc
aam
mov
dec
pop
dec
add
mov
mov
adc
jmp
jecxz
lcall
insl
mov
popf
idiv
incl
mov
adc
cltd
mov
aas
rorl
lahf
out
or
inc
jecxz
push
dec
or
adcb
repz
sbb
in
dec
xlat
pushl
or
mov
mov
jmp
insl
and
push
aad
bound
decl
sbb
adc
movsl
sub
bound
xchg
mov
scas
stos
ljmp
shll
aam
dec
enter
ds
mov
daa
fists
aaa
call
pop
sahf
push
fwait
sub
push
scas
pop
es
cmp
aas
mov
lret
daa
test
clc
popa
and
xor
insl
pop
mov
jg
dec
sbb
rcrb
xor
xchg
sub
insl
mov
jp
ljmp
push
ret
mov
int3
mov
idivl
adc
pop
out
or
jle
jne
push
sbb
loopne
lahf
enter
mov
mov
dec
lea
lcall
rcr
mov
xchg
je
adc
insl
stos
jg
push
shl
add
mov
test
xor
cld
incl
je
sbb
xchg
cwtl
mov
call
adc
insb
rcl
jmp
pop
add
shrl
icebp
adc
inc
pop
es
sub
ret
sbb
push
pop
pushf
call
shrl
mov
push
scas
jns
cmp
test
addr16
in
jmp
mov
hlt
aam
dec
adc
ficompl
xor
jl
sub
pop
adc
lcall
das
sahf
sub
and
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
out
xor
arpl
mov
insb
jg
call
sbb
sub
cmp
push
mov
mov
push
decl
or
jbe
xchg
push
neg
in
outsb
test
rcrb
sbb
jmp
jg
adc
jno
pushf
fiaddl
push
iret
add
enter
lods
dec
sub
jmp
data16
and
lahf
add
push
mov
and
lock
push
out
out
jmp
fdiv
cmpsl
imul
xor
sarb
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
ljmp
and
or
inc
sbb
sbb
fs
sbb
jge
jmp
pop
xchg
dec
pushl
cld
push
shl
popa
mov
fdivr
cmpl
lods
mov
leave
pushf
xchg
test
push
sbb
push
inc
es
pop
xor
inc
or
or
test
leave
dec
les
mov
push
adc
cltd
sbb
gs
je
push
cmc
loop
fildll
cmpsb
fsts
in
and
dec
and
adc
inc
je
mov
and
jns
inc
mov
or
lds
inc
pop
mov
ljmp
cmp
xchg
cmp
mov
out
push
incl
imul
cli
add
je
lods
add
std
fidivrs
push
dec
icebp
push
sbb
pavgw
jg
call
push
insl
mov
arpl
clc
lds
mov
les
mov
outsb
jb
cs
data16
cmp
push
addr16
pop
outsb
lea
incl
adc
mov
aaa
sbb
sti
fisubs
ret
adc
faddl
add
pop
out
and
call
jg
scas
fcmovbe
cli
mov
mov
adc
out
shrb
adc
ljmp
ret
dec
xor
test
jg
sbb
sbb
incb
fisttps
lock
data16
adc
inc
jmp
or
call
push
movsb
rclb
popa
ss
aaa
std
lcall
inc
psubw
lods
push
lods
inc
sub
sbb
or
out
or
add
stos
sub
adc
push
aas
sar
mov
and
dec
pop
and
lret
inc
inc
jecxz
jge
and
or
mov
mov
cmp
add
pop
push
mov
ljmp
xchg
ljmp
sub
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
incl
inc
sub
adc
mov
add
call
ss
adc
sbb
pop
mov
jb
push
rorl
arpl
decl
test
clc
ret
gs
adc
sub
out
mov
sbb
cmp
push
incl
ljmp
ja
ljmp
or
mov
pop
jle
mov
decl
ljmp
cmc
rclb
stos
sub
ss
cmpsl
mov
pushl
jmp
stos
pop
jae
xor
das
or
jne
sub
push
cmc
mov
cmpb
dec
cmpsl
ljmp
js
fcmove
mov
adc
jmp
sub
lret
pmaxsw
ljmp
clc
pushl
xchg
xorl
or
mov
and
ss
clc
mov
outsb
jns
xchg
stos
xchg
dec
cmp
pop
test
mov
lea
pushl
pop
cmp
es
pop
cld
leave
push
xchg
mov
int
cmp
ret
dec
mov
fmull
incl
call
xchg
stos
gs
xor
push
fisttps
out
ss
sub
test
call
imul
push
data16
xlat
or
cmp
dec
stc
xor
fdivs
call
decl
rcl
xchg
arpl
ljmp
iret
mov
ret
daa
and
fwait
lret
mov
xchg
lea
hlt
outsl
dec
inc
stos
add
mov
mov
lcall
cmpsb
mov
xchg
mov
in
cld
lods
int
ljmp
dec
notb
mov
sahf
pop
mov
cmp
idiv
stos
imul
call
sbb
clc
stos
jb
lds
inc
jae
leave
outsb
pushf
sbb
call
inc
aaa
repnz
ds
mov
cmp
test
subb
incb
mov
fidivl
divb
mov
adc
outsb
divl
inc
aam
adc
dec
dec
jmp
pop
pushl
outsb
aad
imul
push
push
mov
es
scas
add
jg
cli
mov
xchg
cmp
inc
ficomps
sub
push
cmp
inc
push
repnz
pop
loope
or
cld
outsb
call
rcrb
add
fldl
gs
jl
add
xchg
insb
pop
pop
add
push
mov
dec
mov
pushl
lea
icebp
cmp
jae
xchg
or
shrb
shrb
sbb
fisubs
mov
in
add
adc
cmp
xchg
dec
dec
lock
jmp
push
repnz
adc
testl
mov
sbb
jmp
or
push
jmp
cmc
xor
das
jno
shll
incl
mov
stos
mov
out
cmp
test
jecxz
push
out
fimuls
xor
daa
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lcall
insb
cmc
cmp
pop
popf
xor
ret
xchg
lods
or
fs
incl
ret
test
xchg
mov
aam
push
push
andb
outsl
movsb
pop
pop
shll
mov
add
fisubrl
pop
test
ret
lock
mov
xchg
mov
call
lods
mov
les
ja
ret
scas
insl
pop
lea
loop
add
mov
and
ret
jmp
pop
jl,pt
xchg
inc
insl
add
mov
push
lds
and
sub
decl
mov
sbb
sub
insl
jno
dec
mov
es
mov
dec
in
adc
decl
or
imul
das
jns
popa
push
test
sbb
hlt
pop
mov
bound
xor
in
out
es
pop
loope
pop
divl
pop
dec
std
push
sub
adc
aam
ret
data16
loop
add
test
stc
pop
inc
ffreep
or
repnz
and
cvtps2pi
mov
mov
pop
adc
or
sbb
ljmp
test
inc
loop
cli
clc
inc
cmp
sub
pop
sti
mov
cmpsl
xor
ljmp
jg
or
mov
jg
stos
je
cld
mov
mov
adcl
icebp
sub
cld
incl
push
sbb
sbb
jp
xchg
add
in
cltd
jge
inc
shlb
insb
cmp
mov
loopne
lahf
sbb
or
rol
insl
xchg
jl
jns
add
jmp
idivb
or
daa
out
push
mov
out
pop
pop
inc
pusha
dec
ljmp
test
fcmovb
fsubr
loop
je
pop
add
movb
arpl
cmp
icebp
rolb
lcall
mov
or
cmp
std
dec
push
sbb
mov
shrl
xlat
pop
add
imul
xor
sub
js
aam
fadds
loopne
jecxz
mov
fdivs
cs
cld
scas
add
ljmp
out
mov
jae
jbe
mov
das
ffreep
cmp
aaa
mov
sbb
and
mov
push
push
pop
push
push
jb
repz
and
lds
fimull
outsl
clc
cld
dec
mov
pop
sbb
inc
mov
push
jae
pop
seto
add
mov
xlat
jno
push
sub
scas
xor
leave
sbb
cmp
ds
loope
jg
mov
dec
push
imul
je
stc
jmp
push
cltd
cltd
mov
sbb
fbld
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
or
decl
xchg
jo
mov
lods
add
or
mov
add
movsl
inc
clc
and
bt
jmp
cmp
cmp
lock
int3
push
mov
lds
jnp
dec
push
cmp
jmp
jnp
mov
jns
xlat
xchg
testb
bound
or
ljmp
inc
call
dec
sbb
int
pop
adc
fdivrs
jns
add
in
inc
lock
jo
jg
inc
pushl
outsb
iret
into
or
dec
or
call
mov
xor
sub
cmc
fs
mov
arpl
push
sub
jns
sub
sub
call
xor
push
jns
lock
mov
push
lahf
clc
out
pop
outsb
push
jl
loope
xor
ljmp
call
test
inc
aaa
stos
sti
mov
inc
inc
jmp
sti
call
mov
add
mov
or
pop
xlat
adc
and
and
xchg
inc
cmc
out
mov
and
cmpl
scas
rorl
mov
mov
jp
inc
inc
dec
iret
adc
das
lcall
mov
outsl
adc
decl
xor
pop
jge
mov
inc
lea
cmp
and
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
cmp
sbb
add
mov
jl
or
xchg
and
mov
ss
fistpll
add
sub
cmp
add
lds
xor
sti
and
hlt
ljmp
add
cmpl
lcall
hlt
adc
das
mov
pop
fstl
jo
cli
cmp
xor
xchg
in
lahf
arpl
dec
xor
mov
dec
rclb
xor
lcall
push
fisttpll
test
mov
adc
xchg
decl
arpl
fildl
test
daa
sub
xor
dec
in
mov
out
cld
lcall
in
mov
das
cld
into
xor
test
mov
outsl
adc
jg
sub
jb
in
and
jg
data16
incl
ret
mov
fwait
imul
xchg
decl
jg
rol
shll
shrb
mov
mov
pop
lock
fistps
adc
adc
cltd
imul
jmp
mov
call
int
mov
divb
loope
jo
jne
jbe
data16
inc
lret
repz
mov
in
adc
xor
cmp
adc
call
sbb
and
cmpsb
call
fists
push
lret
negb
jmp
add
adcb
ljmp
aam
add
iret
das
xor
mov
inc
push
cmp
pushf
adc
mov
sbb
out
jne
and
ret
add
cwtl
mov
xchg
push
leave
adc
sahf
push
pop
mov
std
adc
mov
or
xchg
mov
mov
mov
pop
aas
mov
or
hlt
jmp
shll
sbb
jb
cmpsb
xor
add
jo
push
jg
loope
sbb
call
lock
jmp
and
lret
add
fs
mov
sbb
ljmp
xchg
jmp
das
fwait
rep
div
lock
mov
mov
sub
outsb
mov
mov
mov
cwtl
incl
xor
lcall
out
sar
and
pop
mov
lcall
inc
and
mov
scas
aam
aas
xor
ljmp
out
sbb
push
mov
insl
into
inc
and
pop
lock
incl
push
cmp
push
xor
inc
jb
sbb
and
push
xor
incl
shll
sub
push
cmp
mov
cmpsl
mov
inc
repz
jmp
pushl
sti
enter
jl
mov
cmp
xchg
lret
mov
cld
mov
movb
fninit
pushf
inc
and
mov
or
pusha
xorl
dec
cld
inc
dec
jno
ljmp
mov
popa
std
rclb
test
push
xor
fildll
loope
adc
test
mov
mov
ficompl
pop
mov
mov
testb
sbb
ficomps
out
stos
cli
incl
xor
ljmp
adc
mov
add
in
aam
divl
xor
es
add
push
jg
mov
mov
lock
dec
sub
icebp
rcrl
mov
dec
xchg
or
inc
push
mov
aaa
cli
sub
xor
fcomip
call
push
jae
pop
inc
jecxz
imul
push
sbb
mov
pop
mov
pushl
test
int3
xlat
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
jo
std
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
rcll
call
int3
aaa
mov
inc
dec
in
ret
adc
or
sbb
outsb
dec
aas
out
mov
ljmp
rorb
das
hlt
mov
in
pop
push
roll
in
outsb
jns
xchg
push
incl
mov
ljmp
mov
rcll
gs
scas
dec
xchg
or
jle
outsb
mov
push
push
fwait
cli
call
aad
aad
xchg
cmovs
lcall
sub
fsubrp
scas
pop
add
test
fwait
xchg
push
add
pop
sub
jp
xor
jae
or
int
xlat
dec
movsb
inc
adc
jg
sti
das
sbb
mov
mov
loop
aad
movsl
repnz
jmp
inc
inc
scas
sbb
loope
pop
pushf
divb
flds
dec
iret
mov
sub
incl
bsr
mov
jae
flds
cwtl
jnp
stos
add
mov
mov
pushl
xchg
add
xchg
das
lret
push
clc
call
fwait
sub
fwait
insl
xlat
or
push
adc
ljmp
psubusw
popa
push
outsl
jg
adc
push
mov
mov
shl
add
hlt
decl
xchg
cld
pop
push
jno
xorb
jo
fwait
mov
pop
adc
xor
mov
mov
mov
mov
jmp
jl,pn
inc
add
mov
mov
dec
jmp
es
dec
enter
ljmp
inc
or
inc
sub
cmp
and
mov
jno
add
lcall
adc
jne
xchg
xchg
in
lret
out
in
sub
adc
xor
call
pop
adc
pop
aam
adc
add
push
push
aaa
popf
mov
out
cmp
lcall
mov
inc
adc
scas
in
dec
sub
in
or
mov
pop
repz
ljmp
dec
and
repz
xchg
sbb
into
dec
flds
in
mov
addl
ficoms
outsb
ljmp
adc
xchg
or
fisttpl
mov
cld
decl
sbb
adc
mov
mov
cli
mov
fistl
std
sbb
imull
dec
cmpl
clc
mov
pop
hlt
incl
in
and
shr
andb
repz
add
divb
adc
out
cli
call
mov
pusha
or
cmp
push
inc
cmpsb
push
pop
jne
push
add
pop
cmp
mov
loop
fnstsw
scas
insb
aaa
jmp
mov
and
test
clc
jmp
incl
dec
je
popf
mov
or
rolb
iret
push
movsl
aad
mov
aad
in
pop
mov
jns
mov
mov
addr16
dec
js
notb
movsl
ljmp
mov
dec
push
int3
mov
popa
jbe
adc
xor
cli
xchg
cmpsl
ja
cwtl
pushf
pushl
push
std
ljmp
je
jno
aam
cmp
adc
scas
jmp
add
into
push
push
incl
pop
add
dec
add
jae
insb
test
xchg
aad
cmp
jp
push
pop
inc
mov
jmp
ja
xor
sarb
push
sti
dec
loopne
and
dec
test
jmp
decl
jecxz
sub
xchg
add
pop
add
xchg
popf
adc
cmp
ljmp
ljmp
add
jns
insl
mov
les
mov
push
mov
inc
lret
jge
aas
and
incl
leave
outsl
jb
lods
adc
test
mov
dec
sbb
and
pop
fwait
dec
das
in
cmp
inc
push
pop
lock
incl
data16
popa
inc
dec
sub
orl
scas
xchg
orl
decl
scas
pop
rcrl
jp
in
push
and
push
or
mov
lcall
bound
rcr
xchg
and
pop
cltd
jge
incl
int3
dec
push
sbb
sbb
sti
mov
fsubr
pop
mov
cmp
push
cmpsb
mov
add
jo
xchg
push
pop
imul
and
pusha
fiaddl
cltd
sbb
pushl
insb
xor
lock
adc
ljmp
pop
popa
insl
mov
cmp
insb
or
mov
pop
ljmp
inc
out
push
dec
push
dec
sub
add
add
ret
stos
das
cli
lcall
push
and
jae
add
cs
push
and
lock
or
lods
clc
inc
fs
rcrb
add
fsubr
ror
sbb
pop
push
lds
popa
jno
or
fistps
decl
shrl
adc
inc
test
mov
dec
or
mov
push
lahf
dec
lret
arpl
incl
inc
sahf
scas
cmpsl
test
xchg
imul
cmp
cmp
and
mov
mov
mov
scas
push
outsb
stos
or
cli
dec
mov
int3
test
inc
test
jo
aas
dec
xchg
or
push
rorl
mov
mov
mov
shl
hlt
call
ljmp
pop
push
adcl
adc
mov
adc
adcb
dec
out
lcall
stc
int
sahf
xlat
repnz
js
and
in
nop
inc
pushf
or
mov
dec
cmp
outsl
dec
decl
cmc
sub
mov
scas
add
mov
loope
nop
lods
in
inc
sbb
xor
mov
add
push
and
pop
lret
jnp
mov
jmp
cmp
xchg
pop
pop
pop
ret
or
xor
stos
loopne
pop
fisubs
pop
inc
push
mov
cld
pop
pop
arpl
aas
cltd
add
jg
push
xor
pop
mov
shll
test
or
dec
lret
jbe
call
loopne
mov
aaa
inc
mov
jp
or
in
fistpl
push
or
add
jmp
jae
sbb
cmp
sub
inc
jbe
push
add
into
daa
divl
jmp
dec
jo
sbb
push
out
lock
fcompp
dec
and
inc
dec
xchg
sbb
mov
sub
sbb
xchg
cltd
repz
ljmp
rol
iret
enter
lock
fistpl
sub
mov
or
ljmp
pop
jo
add
sub
pop
push
or
jge
lahf
push
mov
mov
mov
mov
js
inc
paddd
xlat
sub
in
lods
decl
xchg
das
mov
ret
andl
xchg
adc
jecxz
inc
stos
in
pop
xchg
mov
subb
mov
idivb
or
ljmp
pop
lret
out
xor
and
inc
pop
lea
sub
mov
out
jns
adc
js
mov
xor
jmp
add
xor
pop
leave
js
into
pop
out
jmp
fiadds
cmpsl
sti
push
mov
and
cld
cld
ret
adc
aaa
nop
fs
add
dec
xor
jmp
xchg
push
add
and
cmp
dec
mov
add
push
jecxz
call
adc
enter
sub
clc
fcomip
mov
test
shlb
in
sub
dec
push
pop
inc
mov
cli
add
pushl
fs
lea
adc
dec
js
outsl
clc
ljmp
mov
add
adc
jns
out
shlb
pusha
push
fcos
call
les
mov
es
out
imul
dec
lcall
outsl
nop
lods
test
sbb
pop
push
ljmp
inc
push
and
push
jle
clc
inc
out
setno
ss
cmp
pusha
xchg
adc
test
adc
fbld
int3
sub
into
dec
jmp
jmp
cmp
cmp
dec
xor
xchg
push
sub
mov
dec
push
pop
and
lcall
aad
cmp
int3
xchg
dec
ds
movsl
fmul
xor
fwait
fwait
movb
mov
ljmp
fcompl
push
cmpsb
shl
pop
or
push
cwtl
les
fdivl
pop
dec
push
ljmp
push
out
jg
dec
sahf
cmp
es
sahf
and
push
out
cli
pushl
addr16
repz
sti
jp
sub
nop
jle
je
out
f2xm1
inc
loop
lcall
decl
lods
das
sbb
das
mov
or
sub
ss
push
xlat
outsl
cli
mov
decl
xchg
fidivl
fdivrs
adc
ljmp
ljmp
mov
mov
push
adc
adc
xor
loopne
fsubrl
mov
fwait
jb
test
in
rcrl
addb
lods
inc
icebp
cli
je
decl
push
lock
pop
lcall
push
aas
or
sbb
pop
cmp
inc
inc
adc
jge
sbb
mov
xor
les
scas
sub
add
sub
push
stos
fstpl
in
xor
shlb
incl
mov
mov
sub
jo
or
mov
pop
push
xlat
fmul
push
push
in
jl
decl
cmpsb
jae
test
xlat
dec
loop
add
adc
xlat
mov
aaa
test
incl
shlb
mov
xor
mov
xor
push
cmc
addr16
pushf
adc
cmp
sub
ror
add
add
and
xlat
fisttpll
mov
mov
into
or
cmc
jmp
jmp
jmp
xchg
lods
xor
stos
fsubl
xchg
repnz
testb
cmp
mov
int3
movsb
dec
xchg
lock
sub
jb
cmc
add
jle
mov
jge
call
ljmp
sbbl
shrb
mov
mov
in
sbb
dec
xchg
xor
and
xor
push
xor
call
call
adc
lods
call
xlat
stc
mov
add
rclb
repnz
ds
stos
pushl
out
rolb
call
sbb
inc
xchg
test
xchg
cltd
out
xchg
pushl
mov
std
adc
rclb
mov
xchg
adc
xchg
jb
gs
mov
xchg
cs
or
ja
ret
mov
fldcw
stos
mov
call
mov
enter
add
cld
outsb
testl
call
add
test
mov
arpl
in
out
out
push
in
or
jmp
pop
mov
ljmp
test
jbe
es
cmpsl
in
sbb
scas
push
sbb
insb
sbb
ljmp
dec
xchg
mov
cmpsb
pop
xchg
and
xlat
cs
and
mov
push
lret
lds
dec
jmp
call
jbe
loope
pop
add
push
scas
lcall
or
or
push
imul
push
ficoms
inc
clc
inc
das
mov
ja
ljmp
cli
call
adc
and
mov
cmp
mov
pop
dec
jnp
dec
mov
inc
and
sbb
xchg
insb
xchg
sbb
jns
movl
jp
or
push
pop
pop
jp
icebp
dec
mov
lods
dec
stos
and
jbe
outsb
sub
sahf
pop
in
ljmp
cmpsb
repnz
and
dec
cmc
dec
shl
jp
data16
add
jmp
mov
ja
clc
and
das
pop
rorl
ss
and
sub
sbb
clc
lret
cld
loopne
outsl
clc
lcall
loop
and
sub
imulb
mov
push
or
cmp
sahf
adc
xchg
pop
pop
cmp
adc
idivl
loopne
iret
inc
std
shrb
nop
int3
aad
cmc
popa
mov
vpsubsw
movsl
ret
mov
ljmp
adc
xor
and
std
fists
ds
and
loop
popa
out
ds
movsb
xchg
jg
in
aam
sub
loop
jle
clc
jno
mov
add
fs
aam
popl
cltd
inc
pushl
jno
shrb
outsl
jae
jl
sahf
xchg
pop
loop
push
xor
cmp
sbb
push
sub
add
cld
push
pop
dec
cltd
scas
fstp
decl
push
imul
imul
jmp
ret
cmpsl
cmpsl
inc
xchg
insl
push
mov
data16
js
icebp
fsts
or
sbb
call
ljmp
arpl
push
mov
xchg
jge
leave
dec
outsb
ds
cwtl
stc
adc
jg
lcall
pop
mov
mov
jecxz
outsb
sbb
dec
adc
pushf
mov
aaa
int3
loopne
hlt
sub
sar
mov
mov
enter
ficoml
test
lcall
stos
and
decl
shlb
bound
add
xlat
lret
dec
mov
mov
call
bound
push
or
hlt
outsb
out
pop
pop
call
push
lcall
inc
faddl
ss
push
popf
inc
pop
lret
inc
cmp
fs
incl
mov
rcr
popf
mov
mov
imul
aaa
lcall
leave
fwait
cmp
xchg
imul
inc
dec
pushf
pop
cs
aaa
adc
cwtl
popf
repz
js
fcomip
fidivl
jnp
mov
loopne
mov
testb
cmp
scas
loopne
out
xabort
incl
xorl
cmpsb
cmpl
pop
daa
push
xor
cmc
jl
fs
arpl
lock
aas
fidivrs
xor
shrb
adc
jmp
jecxz
add
repnz
adc
add
aas
cmc
ret
rol
mov
decl
cwtl
mov
cltd
cmpsb
jecxz
std
sti
mov
cmp
adc
insb
xor
or
stos
sahf
pop
cmpsl
or
scas
rorl
stos
push
fld
or
jg
imul
or
mov
gs
mov
push
jecxz
in
repnz
into
lods
lods
cwtl
jg
test
int3
repnz
fs
xchg
push
mov
adc
ret
cmp
fiaddl
mov
or
xlat
mov
test
gs
pop
lods
bnd
incl
cld
in
cbtw
sbb
jne
outsl
addb
pop
and
sbb
lods
pop
aas
or
test
cmp
out
push
inc
or
inc
ret
dec
add
push
ret
incl
insl
loop
shrl
mov
addr16
sbb
fcomip
fsubs
insb
push
rol
loop
int3
pushf
mov
enter
incl
pop
shl
and
sahf
mov
js
xchg
mov
pushl
ljmp
lods
cmp
jne
out
ret
lahf
inc
jmp
sbb
jge
push
cmpsb
popf
cwtl
out
and
and
adc
mov
or
shlb
repnz
ret
push
dec
cmp
popf
decl
int3
inc
sti
mov
enter
pop
mov
xchg
aad
xor
jae
rolb
sbb
fstp
lgs
xor
xor
push
mov
mov
dec
sar
mov
xchg
daa
aam
fidivl
pushl
xor
scas
ficoml
js
shll
pop
int
cmpsl
jno
sbbl
xchg
mov
jge
xor
in
push
cwtl
mov
push
push
add
div
push
xor
ljmp
mov
cmp
mov
lcall
dec
push
daa
pusha
jmp
test
mov
xlat
add
jmp
dec
out
lods
repnz
loope
add
mov
and
mov
sahf
xchg
jecxz
aad
cmp
xchg
aaa
lret
clc
idivl
stc
decl
adc
mov
sar
lahf
nop
xchg
dec
xchg
dec
loopne
dec
shlb
xor
xor
cld
subb
add
fwait
sbb
aaa
and
stos
insl
fstpl
outsb
dec
cmp
loop
ljmp
mov
pop
in
push
cmp
nop
cmp
jnp
call
std
or
and
cwtl
out
mov
xchg
cmp
xchg
mov
push
call
decl
sbb
movsl
inc
je
pop
jnp
push
outsb
or
mov
pushl
test
or
xchg
cmpsl
imulb
es
in
push
rolb
inc
xor
pushf
and
cmpsl
loop
je
shrl
cmp
stos
into
pop
sub
xchg
dec
adc
int
loopne
clc
hlt
ljmp
sbb
dec
fbld
inc
rcll
ljmp
dec
test
sub
out
push
cmp
pop
mov
inc
sub
mov
ljmp
decl
sub
outsl
mov
mov
and
in
mov
addl
gs
and
sbb
outsb
ds
jmp
push
push
push
sti
or
lcall
pop
pop
pop
inc
or
or
add
leave
ljmp
jns
fsubl
outsl
movsb
push
aas
mov
sbb
lcall
sub
mov
and
jne
mov
sub
out
shlb
xor
ljmp
push
push
cltd
sar
dec
push
mov
push
push
cmp
sbb
mov
cmpsb
scas
mov
xor
sbb
ret
jecxz
mov
xchg
xchg
rcll
push
adc
push
push
pop
call
inc
jo
mov
cmp
lods
pop
xchg
push
xchg
sub
add
mov
inc
mov
sbb
stc
subl
lcall
and
loope
sub
int
ja
add
mov
fimuls
add
sarl
lock
sub
into
mov
stos
add
cli
std
incl
arpl
in
into
sbb
int
pop
movsb
test
enter
aaa
pop
fdivrl
adc
push
mov
jle
imul
gs
jg
push
out
sarl
shll
pop
cmp
adc
imul
push
inc
aas
stc
int3
popa
and
loope
in
sbb
push
outsl
xor
int
call
in
jl
fistl
inc
aam
movsb
ljmp
lea
and
popa
nop
jb
pop
std
mov
dec
test
aas
aaa
mov
insb
les
shl
bound
into
mov
mov
push
cmpsb
push
mov
test
jg
jg
fistps
and
xchg
clc
xor
pop
gs
call
movsb
push
repnz
in
or
xchg
jle
std
aaa
mov
mov
mov
pushl
cli
loop
clc
jnp
inc
mov
cmp
mov
das
lret
xchg
int3
mov
or
fcoms
mov
xor
lahf
lahf
ret
bound
adc
fs
incl
mov
mov
daa
outsl
dec
out
mov
movsb
mov
xor
push
and
mov
sti
mov
mov
or
vaddsubpd
stos
or
in
enter
sub
or
push
filds
enter
ss
inc
aad
dec
lcall
pushl
pop
clc
std
dec
push
sar
neg
repz
pop
xchg
mov
mov
push
dec
dec
xchg
jl
push
incl
jge
outsb
xchg
lcall
sar
inc
fcmovbe
pop
pop
into
les
pusha
fwait
in
fwait
fs
outsl
xor
mov
xorb
stos
cs
pop
pop
mov
sub
es
push
jg
loop
push
insb
cmc
push
inc
or
dec
push
push
push
leave
dec
cmp
mov
xchg
push
dec
ret
stos
and
std
subb
es
loope
push
cwtl
jmp
icebp
incl
jb
lods
fdivrl
sub
fnstsw
mov
xor
into
loopne
or
inc
sti
hlt
xor
loope
sub
sub
loopne
call
mov
and
inc
jg
mov
aad
and
out
ja
int
pop
or
fstpt
into
dec
loopne
in
pop
cwtl
pop
jge
jmp
dec
cmpsl
jg
ljmp
xlat
lahf
int
dec
in
sub
loop
movsl
adc
inc
push
mov
movsb
sub
aaa
daa
sbb
cs
xchg
push
out
sbb
pop
sub
lods
sti
mov
loopne
inc
add
ror
mov
jge
fcomps
leave
enter
je
loopne
sbb
jg
mov
fisubrl
xchg
mov
mov
insb
or
cmp
pop
aas
jp
ljmp
xchg
inc
cli
lcall
or
cltd
mov
mov
sarl
add
test
xchg
xor
sbb
or
jno
inc
jmp
push
push
mov
jmp
pop
xor
pop
imul
stos
leave
inc
push
loope
mov
dec
adc
nop
rcll
jbe
in
or
call
aad
mov
imul
sar
cwtl
sbb
push
mov
out
loopne
cmc
jmp
lret
call
into
pop
mov
clc
int
out
hlt
shl
test
das
lods
ss
jl
retw
fstpl
pop
sbbl
sti
mov
push
daa
dec
and
es
aam
int3
dec
fcoml
inc
jb
pushl
xchg
ss
xor
cmc
les
sbb
jae
stos
jp
rorb
leave
mov
cmp
jg
add
jae
xor
stos
pop
xorb
jo
adc
mov
pushf
or
scas
adc
std
sbb
fs
cmp
mov
scas
movsb
pushl
jp
add
push
sbb
sub
sub
inc
xor
loope
push
inc
sbbl
jmp
add
dec
loopne
aad
stos
fidivl
dec
sbb
fidivrl
and
mov
jo
js
cwtl
jmp
or
xchg
and
fisttps
jecxz
nop
les
or
xchg
filds
fs
mov
inc
aad
adc
je
sti
test
repz
loop
leave
push
movsb
xchg
xor
add
out
jmp
js
inc
xchg
pop
dec
sub
sbb
sub
in
mov
mov
clc
hlt
cmpsl
xchg
pop
sahf
dec
enter
shrb
xchg
mov
mov
jnp
push
shlb
incl
roll
cmpsl
js
pop
popa
jge
cmpsb
dec
stos
adc
sub
ret
sbb
imul
shlb
testl
incl
pusha
sti
incl
les
jp
pop
sub
mov
lcall
lock
fldt
andb
test
bound
mov
lods
xor
jb
and
je
adc
cld
mov
jns
add
sbb
mov
xlat
inc
jns
incb
imul
nop
jmp
pop
out
mov
decl
stos
in
inc
or
sbb
jno
pop
xor
and
lcall
xchg
fstpt
stos
in
outsb
test
enter
inc
jb
add
std
stc
push
decl
arpl
sbb
inc
jle
notb
pusha
xor
jge
dec
sub
aaa
xchg
call
jo
mov
test
pushl
into
adc
xor
stos
push
mov
orl
das
clc
dec
call
dec
bound
xchg
dec
loope
jmp
orb
cwtl
sub
nop
pop
fs
mov
and
xor
aad
sbb
add
or
mov
cmp
dec
xchg
fidivl
or
adc
clc
cmp
je
out
cli
test
enter
cld
repnz
dec
jne
cmpsb
lcall
incl
je
push
sbb
fstps
fiaddl
fisttps
adc
xor
hlt
mov
or
mov
mov
lods
lock
fistpll
sub
iret
cmp
dec
je
iret
dec
and
movsl
push
dec
mov
dec
or
xor
dec
pushl
fbld
jg
hlt
dec
mov
cmpsb
jo,pn
mov
std
in
incl
cld
pushl
and
lea
xor
js
test
insl
and
pushl
cmp
mov
pop
add
and
sbb
repnz
sbb
xchg
ds
pop
add
insl
push
sbb
ljmp
lret
cmpsb
xchg
xor
or
cmp
mov
in
pop
fadds
fadds
jecxz
adc
sbb
ljmp
pop
push
pusha
dec
xor
rclb
ljmp
adc
add
ds
adc
inc
in
loopne
mov
test
inc
repnz
pop
inc
lcall
das
cmp
filds
mov
pop
jo
pop
jae
addr16
sub
call
xor
mov
adc
movsl
xchg
or
sbb
add
jecxz
call
xchg
repz
xchg
out
clc
jnp
nop
jl
fwait
push
sub
ljmp
xchg
out
sub
xor
inc
xchg
lret
mov
int
loop
jbe
out
in
fsubrl
cmp
sub
and
mov
or
pop
pop
sbbl
jecxz
push
lcall
inc
outsb
movsb
lret
mov
ljmp
fists
fld
cli
das
add
and
dec
ret
cwtl
cmc
jne
cmp
push
inc
ret
dec
je
dec
jno
dec
push
pop
fs
jae
mov
cli
aas
addr16
cmp
cmp
push
adc
jo
les
incb
cwtl
cmp
fidivs
jbe
mov
xchg
and
add
sbb
push
sub
lods
pop
cmp
incl
xor
test
test
faddl
dec
add
push
int3
xor
das
mov
ljmp
add
popa
das
addr16
fcoms
stos
push
adc
out
js
int
jbe
push
sbb
loope
out
pop
mov
pop
xor
ljmp
ret
push
clc
pop
or
xlat
sbbl
inc
mov
jle
adc
sub
ljmp
shrb
pop
stc
stos
cmp
inc
aaa
push
mov
push
cmp
dec
std
jmp
xchg
and
test
loop
sub
movsb
cmp
sub
jbe
add
add
fsubp
insl
push
dec
imul
pop
hlt
gs
fwait
mov
xlat
in
mov
inc
mov
mov
call
iret
ret
sub
xchg
push
xchg
ljmp
fcoms
pushf
out
dec
imul
pop
add
cmc
jmp
mov
outsb
ds
jecxz
rolb
fistps
cmc
xabort
dec
es
stos
jge
loope
jg
int3
mov
aad
push
push
mov
test
das
pop
add
jns
sar
jnp
lahf
or
fcmovne
stc
mov
dec
idivb
xchg
mov
fisttpl
loope
and
adc
les
xchg
fisubrl
popa
jmp
xor
aaa
jecxz
in
or
or
lcall
sbb
scas
xor
and
out
les
jae
cld
adc
dec
or
cmp
jno
inc
jmp
mov
pop
cmp
jmp
pop
xchg
xor
inc
data16
hlt
icebp
gs
sti
das
xchg
adcb
gs
or
das
cli
stos
mov
sbb
fsubp
lds
and
cmp
jg
test
imul
jne
dec
pop
mov
cs
jg
jmp
lea
repnz
push
adc
aaa
mov
icebp
pop
scas
push
decl
lock
adc
fs
xor
movsb
pop
out
pop
mov
pop
cmp
fldt
xor
cmc
lds
push
int3
arpl
stos
xor
or
add
lcall
xchg
lods
jbe
cmp
aas
fninit
and
xor
jl
icebp
stc
or
mov
scas
add
and
mov
cld
jnp
add
sbb
pop
add
fistps
jae
adc
mov
mov
mov
pop
xchg
and
jmp
scas
mov
decb
outsb
lea
adc
xor
lcall
out
rcll
add
into
repz
dec
sbbl
sbb
push
mov
mov
lea
cmp
loope
imul
ficompl
call
add
jae
jmp
push
mov
hlt
adc
call
stos
scas
dec
filds
sub
mov
sarb
push
sub
pop
mov
loop
mov
and
decl
sbbl
xor
inc
sub
xor
xchg
fsubr
mov
ret
fnsave
adc
sar
decl
fldcw
out
mov
inc
pushf
mov
mov
mov
movd
jns
jo
rcll
decl
stc
sub
cmpsb
or
or
jns
sub
jmp
mov
leave
mov
sahf
sbb
mov
mov
mov
fcomip
imul
xchg
inc
jecxz
sbb
xlat
pop
push
repz
pusha
cli
pop
ret
adc
mov
xor
lret
mov
and
mov
clc
add
mov
push
out
je
pop
pop
pavgb
dec
imul
scas
clc
ljmp
hlt
push
add
mov
xchg
ljmp
xor
sbb
sbb
cli
fstpt
and
rolb
ljmp
pop
mov
frstor
mov
mov
adc
jmp
fs
mov
pop
aad
pusha
or
jns
mov
jns
add
cmpsb
and
das
hlt
es
push
decl
stc
or
push
jp
insb
lcall
rclb
jp
fisubrs
pushl
test
test
pop
jne
dec
scas
sbb
stc
cmovl
lods
sub
mov
ljmp
mov
dec
loope
iret
mov
out
pop
and
icebp
pop
std
call
fsts
mov
lret
mov
push
or
call
push
mov
cli
mov
rcll
ror
pushf
xorl
mov
jne
pushl
inc
jae
in
mov
jle
adc
enter
sbb
and
mov
insb
xor
mov
xorb
cli
dec
or
pop
outsb
xlat
add
sti
mov
jmp
push
cmp
shl
adc
push
adc
inc
lods
sbb
rorb
dec
fildll
subl
andl
hlt
dec
ljmp
rolb
leave
xlat
jne
adc
lahf
mov
jmp
aas
test
jns
scas
pop
add
or
jae
scas
ret
sbb
jmp
subl
cmpl
dec
pushf
fwait
xchg
xor
mov
mov
arpl
ljmp
sahf
pop
dec
fsubrl
or
insl
and
and
mov
xchg
test
dec
ljmp
lods
aad
xchg
scas
leave
pop
jbe
mov
adc
sub
inc
mov
or
lcall
fcomip
pushl
or
dec
rorb
inc
push
lods
das
pop
std
jbe
idiv
jmp
jbe
jp
xchg
mov
dec
xchg
in
in
fdivrs
lock
lahf
gs
sahf
jmp
ret
and
out
cmpsl
inc
cmpl
pop
into
adc
push
icebp
fdivrl
and
inc
imul
push
dec
mov
mov
lea
into
mov
sbb
aas
loope
fldcw
out
xor
push
mov
lcall
cld
sahf
ds
call
cld
out
inc
notb
mov
std
push
iret
test
push
dec
ljmp
adc
jmp
or
out
xchg
jno
iret
stos
call
sbb
and
rol
movsl
push
lcall
xor
out
mov
xor
cmp
clc
push
cmpb
add
jmp
pop
pop
stos
into
dec
mov
iret
filds
xor
mov
adc
lock
std
sub
test
pop
xchg
cmp
ljmp
stc
out
inc
divb
leave
sbb
or
xor
das
xchg
cmpsb
jbe
jb
in
mov
aad
adc
xchg
out
int3
push
mov
or
jp
sub
xor
push
mov
push
lret
push
inc
mov
test
push
sub
test
sti
sub
clc
jb
dec
adc
push
push
aas
add
decl
lods
int3
add
icebp
cli
jp
test
inc
in
mov
lret
pop
push
dec
fdivrs
or
movsl
sbb
shl
daa
add
xchg
decb
pop
cs
mov
cmp
pusha
sahf
icebp
pop
xlat
cmpsb
pop
imulb
or
jb
mov
not
mov
lods
mov
mov
push
test
fcomip
decl
cwtl
fdivrs
dec
clc
sahf
out
mov
pop
les
stos
aad
data16
push
dec
lret
cmpsl
adc
xchg
scas
push
leave
pop
cmc
movsb
aam
xor
leave
push
cmp
xchg
mov
fadd
aas
xor
lret
jl
dec
negl
xchg
negb
jg
arpl
xchg
in
mov
mov
push
pop
andb
push
dec
jge
pop
jg
inc
repz
add
mov
lea
pusha
jg
mov
subl
cmp
push
push
and
mov
ret
ljmp
push
add
jbe
dec
out
sbb
std
hlt
ljmp
pop
or
dec
or
out
inc
and
xor
xor
adc
adcl
fldt
sub
xor
rolb
push
mov
or
fucom
lods
ss
mov
sub
cmp
loope
ret
adc
and
lcall
pop
fiaddl
sahf
and
mov
pop
push
xchg
cmpsl
loop
pop
fcmove
sbb
bound
jmp
push
mov
and
shl
mull
movsb
mov
dec
mov
cmp
movsb
or
das
mov
sbb
push
jge
xor
pop
sar
mov
sub
push
fmuls
or
push
scas
cmp
adcl
aad
inc
loopne
or
in
mov
lock
adc
je
movsl
fwait
scas
cmp
out
mov
shlb
pop
ljmp
jno
insl
add
push
pop
fidivrl
call
arpl
popf
push
mulb
jle
imul
or
shr
sbb
movsb
adc
sbb
clc
push
sub
subb
in
dec
imul
data16
mov
out
push
pop
rcll
push
xor
and
and
pushf
pop
movsb
or
jmp
sbb
mov
mov
push
aaa
xchg
xor
call
lret
stos
sub
stos
cwtl
sub
xor
or
mov
cwtl
xchg
lods
ljmp
mov
call
sbb
and
push
iret
adc
sub
or
out
pop
pusha
jae
xchg
mov
loopne
iret
dec
jge
mov
movl
dec
jecxz
mov
pop
xchg
out
mov
subl
ret
insl
gs
pushf
pusha
mov
incl
mov
push
dec
push
adc
inc
fs
sbbl
xor
lret
xchg
adc
dec
push
or
or
fisttpll
call
cli
xlat
xorl
inc
push
xchg
notb
mov
fxch
cmpsb
in
mov
outsl
repz
repnz
push
mov
fwait
xor
xor
adc
mov
in
loope
les
flds
fstpt
mov
pop
mov
jbe
call
add
pop
xchg
insl
jb
scas
aaa
or
and
add
dec
mov
push
add
push
xor
btr
and
call
repz
loopne
cmp
inc
jae
int3
rcrb
out
lahf
push
loopne,pt
jno
jae
decl
sti
or
mov
pop
cli
inc
push
and
cmp
bound
jmp
push
inc
sub
ja
dec
mov
adcl
sub
popa
xchg
call
decl
cmp
and
js,pt
lock
add
add
imul
clc
fs
lret
sub
jns
jge
incl
inc
aad
inc
imul
xchg
test
in
fs
jle
mov
pushl
dec
arpl
fwait
xchg
mov
addr16
lahf
pop
dec
add
mov
pop
sarl
jmp
int
imul
or
inc
push
mov
mov
loop
call
insl
cli
push
jmp
repz
and
jl
jle
mov
nop
pop
mov
inc
pushl
jno
movsl
adc
and
jmp
jl
xchg
add
das
or
mov
pop
adc
sahf
dec
scas
popa
push
scas
lods
clc
clc
in
decl
ljmp
sub
or
jnp
adc
cmp
cs
pop
mov
hlt
jmp
adc
adc
add
mov
pop
mov
ljmp
mov
inc
xchg
call
push
popa
and
lods
mov
lock
test
ljmp
pop
int3
cmp
arpl
or
test
loopne
pop
cmp
pushl
jl
andb
xchg
test
outsb
mov
push
add
shrb
jnp
repnz
inc
pushf
int
fcoms
iret
or
les
enter
fnstenv
sbb
adc
xor
jmp
inc
ret
into
orb
repnz
adc
scas
pop
gs
jecxz
dec
or
out
pop
xor
mov
test
icebp
xor
jp
stos
push
addr16
lods
add
sub
decl
xor
popf
mov
jmp
movsl
pop
push
mov
sbb
add
xor
xchg
repz
cmp
sub
inc
xchg
sbb
ds
pushl
sbb
add
and
push
aas
dec
insl
popf
movsl
mov
xor
mov
mov
mov
in
jb
sbb
scas
add
mov
push
ret
jl
adc
decl
jge,pn
xor
mov
imul
cmp
push
fs
cmp
test
and
lcall
xchg
aaa
and
sar
jno
cwtl
lods
in
test
mov
sub
loop
add
in
push
cmc
and
cmpsb
sub
xlat
ss
mov
daa
mov
jno
fsub
pushl
movsl
lods
xor
ss
and
pop
lret
push
push
test
xchg
out
xor
loop
pushl
push
mov
scas
mov
shr
popf
cmpsb
xchg
cwtl
pop
push
add
mov
lcall
or
pop
dec
xchg
push
adc
xor
xor
add
inc
cmp
jle
inc
int
fildll
dec
jns
loopne
ss
addr16
scas
cmpsl
sti
sub
fnsave
push
sbbb
mov
popf
jmp
scas
dec
cmc
jecxz
jmp
mov
mov
mov
ss
jns
inc
lret
jl
cltd
lret
dec
push
pop
inc
xor
ljmp
in
aam
stos
mov
push
mov
jb
pop
xor
clc
hlt
mov
cmp
out
pop
jle
jnp
cmpsl
shll
sub
push
mov
movsb
sbb
or
std
push
mov
push
pop
cmp
inc
add
push
out
dec
sbb
ljmp
test
inc
xor
xor
nop
lock
call
xor
jmp
sbb
lcall
mov
mov
jmp
sub
ljmp
lock
je
xchg
xchg
mov
sbb
push
int3
icebp
xlat
mov
xchg
les
mov
cmpb
or
fwait
cmp
pop
mov
shll
sbb
inc
aas
loopne
hlt
mov
mov
addb
mov
or
mov
pushf
sub
pop
fsubrs
push
fcom
dec
rcrl
std
ljmp
shlb
pop
daa
rcr
sbb
jl
cmpsb
mov
cmpsl
pop
inc
popa
shrl
xchg
decl
lock
adc
pop
pop
cmpb
and
clc
mov
add
adc
or
rcr
cli
incl
dec
test
push
cmp
push
ja
xchg
in
ffree
xlat
aam
jmp
pop
mov
jg
cs
ds
xchg
fisubs
lock
pop
in
and
jmp
adc
sbb
lock
dec
sbb
pop
rorl
inc
dec
jnp
adcl
inc
loope
inc
hlt
sub
xorl
fcmovbe
loopne
js
jecxz
cmc
test
aaa
aas
cmp
or
out
pusha
in
xchg
sub
mov
sbbl
lods
outsl
cmc
push
incl
mov
cli
pop
mul
add
dec
and
decl
es
shlb
cmpsb
push
dec
xlat
rdtsc
aaa
inc
push
push
stos
or
sub
xor
js
push
jno
call
decl
sbb
push
sub
add
ja
fstpt
sti
cmpsb
xchg
ljmp
mov
icebp
es
or
incl
add
xchg
nop
or
cltd
adc
hlt
sub
add
outsb
das
push
adc
js
sub
pop
and
dec
dec
cwtl
pinsrw
cmpsb
das
subb
sub
mov
sbb
and
jge
xlat
xchg
xor
cmp
std
lds
adc
xor
bound
aaa
mov
ljmp
out
ficompl
decl
das
inc
dec
push
ja
and
je
not
mov
mov
ljmp
mov
inc
push
inc
push
mov
lods
sbb
jmp
sbb
out
dec
mov
out
pop
adc
cld
adc
sbb
incl
mov
sti
pop
shl
fcmovbe
stc
cli
dec
adc
jne
decl
mov
mov
fcompl
xchg
hlt
in
lcall
les
adc
jmp
xor
incl
into
mulps
adc
iret
stos
out
push
lods
sbb
incl
mov
orb
inc
cmpsb
adcl
push
xor
scas
xchg
jbe
adc
mov
ss
cli
incl
xchg
adc
xor
push
mov
dec
repnz
and
in
mov
out
ret
fidivs
or
or
xor
inc
xlat
mov
dec
mov
and
call
pop
add
and
push
jmp
ja
arpl
ror
les
das
push
lock
pop
outsl
xchg
es
cs
jl
pop
xchg
call
cmp
and
or
pusha
sbb
mov
push
ja
mov
add
aad
stc
sub
incl
sub
push
stos
popl
imull
sub
lods
nop
sub
mov
les
ss
outsl
jae
nop
xor
pop
push
out
pop
imul
jle
test
dec
jmp
fidivs
lods
and
loopne
call
push
and
mov
call
jo
jl
mov
and
pop
mov
movsl
je
or
jge
lret
out
pushf
outsl
or
sbb
push
ja
les
lock
mov
mov
xor
mov
pop
add
mov
lods
ss
jecxz
ljmp
test
hlt
cld
fistl
outsb
mov
iret
shl
in
sbb
mov
dec
add
rolb
fsubs
mov
lcall
pop
or
stc
add
lock
mov
ret
aas
cmc
and
xor
sub
insl
mov
jbe
in
xchg
call
rorb
aam
xchg
inc
push
add
fcmovb
mov
iret
insb
lods
pop
jp
mov
inc
pushl
lcall
adc
lds
adc
and
jle
jge
jg
and
xchg
push
sahf
xchg
lret
ret
jne
bound
adc
pop
cmp
sub
rcrb
push
add
pop
aad
aas
fisttpll
push
fldl
ds
clc
jns
loope
mov
fcomip
lcall
push
jno
cmp
fwait
sahf
jnp
sub
leave
pop
push
mov
push
and
mov
dec
ret
or
popf
mov
rcll
adc
fistpll
mov
call
push
jo
and
cmp
andb
xor
mov
popf
test
jl
push
shll
cmp
mov
aaa
mov
mov
mov
inc
inc
push
test
cwtl
add
std
lret
jmp
popf
data16
mov
icebp
xchg
cmp
out
jb
xlat
or
jle
lcall
or
repz
adc
push
mov
pop
inc
rcll
loopne
int
push
mov
pushl
mov
xchg
js
push
inc
sti
stos
movsb
dec
add
inc
jne
cmc
mov
std
mov
stos
js
int3
push
loope
mov
mov
popa
pop
push
ds
cmp
push
pop
insb
dec
lea
std
pop
xchg
jp
int3
cld
aam
push
lcall
or
notl
cmp
aas
pop
and
xor
int
xor
dec
push
push
jnp
outsl
mov
roll
fmul
inc
fdivrl
daa
and
mov
aad
xor
loopne
jne
jmp
idivl
int
dec
idivl
movsl
add
inc
fldl
rcll
mov
adc
iret
test
jmp
sub
int
mov
mov
arpl
mov
jg
pushf
dec
test
test
or
aas
mov
dec
es
call
mov
int
loop
xchg
std
insb
pop
xor
stc
nop
pop
shr
add
adc
cmpsl
xchg
jg
jle
mov
mov
mov
int
adc
jne
jl
pop
sbb
js
add
jecxz
gs
aaa
lret
push
mov
sti
iret
jle
cmp
xchg
pop
mov
mov
xor
incl
dec
push
and
mov
pop
lret
insl
mov
movsb
mov
dec
lcallw
jno
push
sahf
repnz
add
push
lcall
adc
jnp
shr
aaa
in
sub
dec
jg
ret
in
test
mov
fdiv
outsl
mov
fistps
xchg
pop
xchg
jnp
int3
jns
mov
call
jmp
into
jne
lds
nop
sub
out
loop
aad
aas
mov
pop
lods
dec
ret
sbb
orb
pop
jl
movsb
jmp
push
shlb
xchg
xchg
jmp
pop
pop
bound
scas
ret
mov
sbb
adc
add
or
adc
jmp
incl
daa
pop
roll
data16
cmpsl
or
jno
push
dec
add
add
insb
bnd
jne
jmp
inc
inc
cmc
push
cli
lcall
xor
ficompl
jns
cmovge
pushl
js
adc
icebp
mulb
and
lea
sbb
aaa
ja
lcall
jb
inc
lock
mov
int
out
adc
decl
bnd
pop
lahf
clc
movsb
shlb
mov
je
iret
sbb
adc
negl
scas
lcall
aaa
xchg
jl
insb
adcl
mov
mov
loopne
jns
call
xorl
pop
push
sbb
mov
jg
paddusw
pop
sbb
aas
sbb
fwait
ljmp
clc
mov
testl
imul
jmp
stos
mov
out
push
rorb
sahf
mov
push
dec
aaa
dec
negb
call
cmp
jbe
in
shlb
cmpsb
js
xor
daa
mov
or
add
std
in
pop
mov
inc
mov
mov
mov
daa
and
mov
add
ljmp
jb
lcall
int
std
pop
imul
clc
fildll
add
sub
insb
xor
add
lcall
incl
and
xchg
dec
xor
insb
cmp
inc
push
out
cmp
decl
push
rorb
call
ja
inc
fldz
loop
jnp
adc
insb
pop
adc
std
ljmp
pop
outsb
add
xchg
fisubrl
imul
fxch
push
cmpsl
nop
pusha
xchg
jo
pop
mov
jns
mov
je
sarb
dec
xchg
mov
test
jle
lret
jno
lcall
sub
jecxz
jle
rcll
sbb
std
lods
jp
hlt
sub
test
sbb
mov
clc
cmc
cmp
std
rclb
lcall
and
mov
cmp
jae
or
inc
cmp
mov
jo
inc
push
shl
cwtl
mov
mov
jo
rolb
clc
or
std
test
pop
imul
dec
insb
cmp
dec
push
sbb
pop
ret
les
outsl
insb
in
cmp
push
inc
js
sbb
mov
mov
pop
cmp
mov
lret
repz
scas
sbb
xchg
pop
test
mov
out
mov
cmpsb
sub
mov
aam
cmpsb
out
add
pop
fdivrl
dec
sbb
xor
xchg
ljmp
test
and
daa
mov
mov
pop
mov
jp
icebp
rorb
sub
hlt
decl
push
fiaddl
daa
test
jmp
call
ljmp
and
push
xchg
movsb
inc
in
jae
repnz
ss
jmp
inc
cmp
ret
rclb
sbb
inc
out
mov
mov
push
mov
iret
ds
aad
jmp
mov
stos
pushl
or
loope
mov
hlt
rep
and
cs
push
sahf
in
fisubrl
fs
decl
push
cmp
jae
mov
pushf
xor
sbb
mov
lea
fstl
mov
add
mov
pop
mov
outsl
push
add
jg
lock
bound
js
dec
cld
es
decl
mov
ss
ja
mov
and
cmp
lahf
and
add
ljmp
sbbb
subb
mov
icebp
add
pushf
or
lcall
jmp
cmp
lods
mov
xor
arpl
push
call
pushf
repz
out
movsb
icebp
xor
inc
insl
ss
or
ficoml
es
call
xchg
mov
lods
pop
int
cmc
mov
inc
dec
popa
imul
loopne
mov
jmp
pop
sbb
dec
aaa
bound
add
xchg
mov
mov
test
ljmp
rorb
out
cli
fsubrs
push
xor
mov
dec
and
lcall
dec
and
pop
adc
ret
je
mov
pop
mov
adc
ds
push
mov
and
dec
dec
scas
test
sahf
pushf
rcrb
fcomp
outsb
push
mov
push
xor
pop
shlb
lods
sbb
out
sarl
xchg
js
mov
pop
cmpsb
push
out
stos
jge
movsb
outsl
and
dec
sarl
call
adc
inc
dec
mov
fwait
int
scas
and
outsb
rolb
call
cli
jmp
loop
cmc
push
mov
faddl
adc
decl
xchg
sub
jecxz
dec
cmp
rcrl
imul
mov
icebp
js
jnp
add
nop
mov
lcall
xchg
lea
lret
icebp
mov
cmp
out
mov
push
adc
sar
ja
xchg
cmp
xlat
stc
push
mov
insb
sbb
mov
xor
testb
loop
gs
movsb
loopne
cmpsl
cwtl
ljmp
adc
xor
outsb
pop
mov
rorb
dec
jecxz
cmp
inc
or
ljmp
mov
mov
add
popf
imul
sar
jg
cli
or
rorl
jnp
comiss
dec
xchg
jecxz
xorb
push
xchg
mov
ljmp
cmp
xchg
mov
js
cmc
divb
mov
push
mov
je
dec
mov
xchg
inc
xchg
lret
and
pop
nop
jb
into
add
aaa
cld
mov
sbb
addb
pushf
pop
mov
rclb
ljmp
mov
jb
imul
mov
xor
push
cmpsb
cld
mov
ljmp
ljmp
test
adc
fmul
test
ror
stos
push
mov
and
cmp
inc
mov
pop
lods
cs
add
notb
xor
call
sbb
or
add
cmp
in
cmp
and
sbb
sbb
push
addr16
aas
int
aaa
add
jle
pop
push
sbb
cld
pushf
jb
jecxz
mov
sysenter
pop
mov
xchg
ljmp
jns
mov
enter
sbb
xchg
sarb
dec
xlat
scas
shrb
and
dec
outsl
xchg
int
dec
or
mov
lcall
loopne
mov
or
sbb
rcrl
push
shrb
mov
cli
out
adc
add
incl
bnd
sub
es
stos
addr16
es
sub
push
loop
cmp
gs
call
enter
lcall
and
ja
adc
cmp
lcall
hlt
inc
xchg
sub
mov
mov
sub
outsb
clc
popa
push
insb
clc
add
mov
sub
hlt
in
incl
xor
outsl
dec
push
inc
mov
cmp
je
sub
gs
xchg
jl
jae
mov
decl
in
sbb
cmc
or
adc
divb
jge
fmull
jg
jo
call
cmpsl
cmpsb
aad
shll
bound
and
jae
loop
sbb
push
jg
pushl
pushf
sbbl
cmpsb
or
daa
ss
jne
mov
fs
.byte
loopne
cld
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
imul
testl
or
dec
insb
imul
add
out
fcmovne
pop
pop
dec
and
addr16
push
xor
data16
das
add
jns
test
push
outsl
jb
add
stc
scas
lcall
mov
cmp
call
outsl
jne
insb
andb
sti
rcrb
jne
jb
outsb
arpl
nop
rclb
pop
add
mov
aas
add
push
je
mov
or
push
sbb
iret
in
imul
imulb
je
and
or
and
repz
add
cmp
out
mov
cmp
sti
jg
push
dec
bound
arpl
pop
sbb
cld
lcall
insl
test
dec
insb
mov
cmp
gs
add
pop
ffree
leave
inc
add
or
imul
add
pop
add
add
in
dec
addl
jmp
adc
sbb
mov
adc
fnstsw
mov
mov
minps
xor
inc
dec
jb
int
pusha
shlb
adc
loope
in
fs
jle
jle
push
mov
enter
inc
clc
popa
jns
ja
mov
mov
jno
add
push
inc
popa
push
push
imul
inc
add
xchg
xchg
fisttpl
lock
in
call
in
enter
aam
int3
or
fcmovne
leave
leave
enter
setae
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
iret
add
aas
nop
fmull
dec
mov
unpcklps
dec
inc
sahf
mov
sub
sub
andb
clc
xchg
xchg
js
push
add
mov
pushl
ja
add
add
xor
ret
jb
cmp
addr16
punpckhbw
in
pusha
pop
pop
push
lahf
int
jge
mov
add
push
add
out
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
incl
rorb
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
movsb
test
xchg
mov
mov
mov
testb
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
fistpl
cmp
push
or
push
or
ret
and
mov
sub
inc
mov
or
inc
add
adc
insb
fistpl
jne
aaa
sub
jne
mov
sbbl
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
testb
add
int
bound
jne
mov
dec
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
testl
mov
mov
cmp
mov
ss
add
xchg
scas
dec
sarl
push
push
jg
clc
mov
test
xchg
mov
mov
dec
orb
call
push
and
push
mov
fstl
data16
dec
add
fsts
sbb
imul
or
mov
pushf
cmpl
in
mov
test
pandn
mov
mov
or
mov
call
faddl
lds
popf
jmp
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
fcmovnu
popa
addr16
sub
sbb
jmp
push
in
or
add
mov
cmp
sub
pop
cmp
outsb
jle
sbb
sbb
sbb
pop
jg
jne
push
adc
hlt
outsl
mov
mov
sub
add
jb
sbb
loop
mov
roll
mov
sub
or
lds
xorl
jle
add
and
mov
cmp
or
or
jbe
scas
adc
xorl
sti
push
push
xorl
adc
sbb
mov
xchg
or
push
jb
mov
mov
xor
jmp
mov
nop
out
sub
outsb
jg
adc
cmp
jae
mov
cmp
jae
or
or
std
add
add
xorb
add
rorb
ja
loopne
clc
mov
aas
or
add
repnz
shlb
cmp
cmpsl
inc
idivb
inc
xlat
mov
pop
fdivl
cmpsl
jg
je
mov
inc
jl,pt
aas
or
leave
push
pop
push
dec
pop
sti
stos
scas
and
cmpl
movsl
and
fs
push
push
mov
jp
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
fidivs
push
sub
clc
lcall
or
nop
lods
call
jne
sub
sbb
fcoms
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
xlat
js
faddl
xchg
lock
popf
adc
push
pop
xchg
call
mov
mov
lcall
cmp
lock
jae
mov
out
popa
sbb
rorl
popf
andb
sti
jno
pop
push
test
je
imul
lock
add
adc
add
jecxz
mov
sub
sbb
add
mov
push
push
pushl
mov
push
xor
dec
push
adc
or
mov
sub
clc
psubsb
and
cmp
add
push
jnp
sbb
leave
jle
hlt
inc
cmp
in
mov
cmp
add
les
pop
jo
ds
pop
pop
push
adc
sub
jg
sub
lods
jmp
mov
into
sbb
test
rcrb
inc
mov
mov
xor
add
insb
rolb
add
test
imul
outsl
mov
adc
je
bound
nop
inc
lock
mov
sbb
loopne
adc
pushf
fistpl
push
cmp
cmp
add
adc
clc
dec
or
adc
test
jns
add
roll
stc
add
and
insl
aaa
daa
dec
mov
sub
mov
xchg
sbbb
cmp
mov
push
pop
add
or
mov
ret
fldl
or
cli
lcall
sbb
xchg
lea
cmp
jl
movl
add
sahf
bound
mov
leave
add
mov
mov
and
out
jle
or
std
mov
sub
test
cld
xchg
adc
adc
daa
fists
lods
jbe
or
push
or
push
jle
outsl
stos
rolb
cwtl
xchg
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
fisubrs
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
cmp
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
clc
add
adc
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
push
mov
push
pop
add
sub
cmp
push
outsb
iret
orl
sbb
or
insb
sbb
rcll
adc
movb
daa
or
adc
inc
push
or
fdivrl
ret
jg
lock
mov
cwtl
pinsrw
or
loop
ret
notl
push
mov
cmp
pusha
xchg
in
pop
add
xchg
xchg
push
adc
repz
sub
mov
sub
sub
xchg
jbe
jp
out
subl
mov
mov
and
test
mov
lock
and
pusha
pop
pop
inc
in
ret
pop
int3
rol
pusha
or
mov
jmp
add
push
fdivrl
adc
or
ljmp
lock
push
cmp
adc
mov
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
pop
cmp
orb
cmpl
adc
inc
add
xor
mov
out
sub
popf
push
jmp
cli
xlat
dec
inc
and
leave
jmp
adc
jne
js
cmp
cmp
or
pop
add
inc
xlat
test
aam
xor
pop
movsb
pusha
or
je
sbb
jle
inc
cld
jbe
lahf
push
repnz
xor
push
push
mov
sbbl
jmp
pop
or
sti
mov
mov
roll
clc
loop
xchg
or
movb
loopne
aaa
xor
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
ret
lods
inc
pushf
or
pop
lea
or
mov
in
add
add
sbb
mov
sbb
punpckldq
cmp
add
cltd
xor
inc
and
or
adc
arpl
or
pop
pop
test
pop
pop
push
push
sbb
mov
or
jne
out
or
nop
xchg
pop
into
jo
xor
mov
mov
test
jne
test
sbb
fisttpl
ja
decl
lock
add
add
add
mov
mov
add
push
or
test
jge
xor
cmp
das
add
pop
mov
mov
cmp
mov
js
stos
in
and
jle
sbb
js
jg
dec
mov
adc
ret
sbb
scas
or
inc
cli
testl
mov
mov
movl
dec
add
inc
adc
rcl
shll
pop
mov
sbbb
pop
jg
adc
lea
test
lock
call
scas
addr16
pop
loope
add
mov
lock
push
jecxz
fsts
and
sbbl
notb
adcl
cli
add
jge
sub
jne
mov
popf
or
xor
rorb
add
scas
push
sbb
mov
cmp
imul
sub
fnsave
cmpl
iret
adc
in
pop
shl
xor
dec
daa
add
inc
lahf
add
add
dec
or
mov
loopne
sub
popa
dec
add
aad
pop
sub
add
mov
jo
movsb
push
pop
mov
loop
fadd
shr
xchg
or
add
xchg
mov
mov
add
cs
and
fdiv
cmpl
enter
or
adc
adc
sbb
mov
adc
dec
xor
enter
seto
jecxz
in
loope
jecxz
sbb
add
cmpsb
dec
pop
clc
out
adc
ret
mov
fldt
insl
ret
add
inc
adc
mov
dec
sbb
jbe
mov
add
cmp
push
aas
cmpsb
test
jle
adc
negb
dec
jmp
xor
mov
and
leave
repz
je
rcrl
jg
or
sbb
enter
sub
in
pop
or
add
push
jmp
mov
subl
bound
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
test
add
inc
xor
and
xchg
fidivrl
addr16
cmp
lahf
cwtl
add
cltd
mov
sti
sbb
mov
mov
sbb
aas
and
adc
add
mov
mov
xor
pop
jne
mov
rclb
call
push
pop
jp
mov
mov
sub
sbb
ret
sub
inc
fcoml
clc
jg
adc
sarl
mov
inc
repz
lds
test
leave
jmp
mov
jmp
mov
mov
add
adc
adc
into
ret
ds
mov
cmp
divl
mov
loope
je
dec
js
rep
xchg
add
out
outsl
inc
je
cld
lea
xor
std
xor
jecxz
mov
addb
push
or
add
mov
test
and
cmp
jbe
cmp
xchg
cmpb
add
out
in
mov
jmp
cmp
mov
imul
sub
add
ja
mov
repz
in
sbb
idiv
push
popa
ja
push
mov
mov
xor
jmp
outsb
idiv
enter
adc
mov
mov
inc
inc
adc
pop
in
ja
shl
pop
call
test
clc
call
add
or
in
test
divb
mov
xlat
ret
push
push
jno
nop
mov
sbb
jmp
and
lods
int
shll
sub
data16
jmp
fiaddl
dec
jmp
mov
popa
jb
cmp
ja
sub
xor
clc
ret
nop
mov
fldcw
jbe
mov
mov
push
sub
fists
fwait
pop
pop
pop
push
int
ja
or
flds
fwait
orw
insb
fists
mov
sub
pop
inc
test
test
mov
mov
data16
cmp
in
mov
mov
jbe
mov
pop
push
sbb
pop
nop
dec
add
cmpl
pop
movl
jmp
and
mov
call
sbb
xor
shl
sub
push
adc
mov
add
decb
adc
push
sbb
jo
push
addb
rcl
cld
xchg
jae
into
push
es
jae
xchg
push
addl
mov
cwtl
divl
pop
dec
sete
cmp
scas
jo
sbb
jmp
nop
push
adc
aas
pop
lods
in
cs
adc
sub
dec
je
mov
cs
andb
movsl
mov
push
or
daa
das
inc
pop
sarb
add
push
rclb
and
and
shlb
cmpsb
push
xchg
push
push
push
lea
push
sbb
lock
cmp
mov
cmpl
dec
decw
int
mov
dec
pushl
outsl
out
out
sub
lock
jbe
xchg
push
aaa
xor
in
or
scas
rorl
mov
dec
mov
jae
cmpb
mov
inc
jmp
push
xchg
sub
jp
pop
idivl
jbe
cmp
or
test
cmp
pop
clc
stos
es
call
pop
fistl
hlt
jmp
cmc
jne
movsb
je
popf
pop
pop
jle
mov
pop
mov
xor
xchg
loopne
cmp
cs
push
stos
sbb
call
cmpsl
ljmp
fldl
std
sbb
fdivl
leave
mov
lea
mov
mov
or
push
insl
in
or
sti
mov
push
lea
pop
mov
lret
jmp
inc
adc
filds
dec
sub
sub
ljmp
shll
fucomi
pop
cmp
testl
add
lods
rcrl
xchg
or
sbb
push
and
fdivs
divb
das
ja
and
push
aad
sub
sbb
cld
adc
sub
mov
adc
mov
je
mov
scas
jg
xchg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
ud0
inc
add
mov
jbe
mov
jmp
mov
or
or
lret
lret
pop
mov
mov
inc
inc
and
pop
jo
popa
mov
push
xchg
inc
inc
incl
cmp
add
push
shr
je
mov
mov
cmp
jne
scas
clc
pop
hlt
dec
je
mov
add
aaa
add
or
pushl
in
loop
push
adc
add
and
je
mov
cmp
jne
dec
je
mov
jbe
cmpsb
stc
cmp
jne
or
adc
add
mov
rclb
cmp
jne
shr
shr
sbb
out
scas
orb
mov
shr
or
iret
inc
dec
dec
pop
cmp
stc
aaa
fistps
add
and
mov
cmp
jne
dec
sarl
out
dec
and
add
bound
xor
pop
jecxz
xlat
jg
xchg
mov
mov
shl
or
out
pusha
orb
stos
mov
stos
pop
daa
mov
mov
mov
push
inc
cmp
out
sti
and
add
je
and
rcr
int
je
pop
je
xor
dec
and
call
push
jmp
or
faddl
clc
ja
lea
push
add
push
idiv
pop
jl
out
int
or
jge
jmp
inc
mov
js
pop
sub
jmp
in
push
lods
lds
pushf
mov
filds
cmpsl
jb
and
add
pusha
xchg
pushf
add
aad
sbb
dec
cwtl
pop
xor
mov
iret
sub
sub
mov
adc
jnp
cmp
loopne
pop
mov
imul
movd
adc
and
add
adc
js
sub
cmp
jg
add
adc
rcll
shrl
call
mov
adc
jmp
xchg
adc
dec
or
mov
arpl
mov
xor
inc
fs
mov
push
fstpt
and
test
jg
cwtl
jmp
push
idiv
mov
add
or
aad
add
cmp
xchg
int3
outsb
jmp
xor
add
pusha
ss
lahf
mov
mov
push
cmp
repnz
cltd
outsb
sar
je
inc
mov
dec
jne
pop
mov
add
sub
adc
cmpsb
sub
fbstp
cmp
and
test
mov
test
jbe
orl
testl
call
pcmpeqb
jb
cmp
cltd
xor
and
ss
iret
mov
push
adc
dec
sub
xor
sbb
dec
je
stc
jmp
fstp
fldt
fldz
mov
pop
or
sub
jg
aas
sbb
leave
daa
mov
cli
or
leave
daa
lahf
inc
pushf
or
ret
mov
adc
enter
xchg
cwtl
push
and
sbb
in
pop
stc
add
mov
or
sub
test
out
sub
pop
stc
xor
mov
lds
mov
stc
lahf
incl
cmp
fidivrs
call
mov
bound
fwait
inc
cmpb
xlat
fadds
outsb
xor
xchg
pushl
pushl
test
into
sbb
rorl
mov
push
pop
test
mov
or
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
incl
mov
mov
addr16
leave
repnz
bound
and
cld
gs
incl
mov
sub
inc
aad
iret
decl
js
inc
mov
stos
mov
cmp
inc
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
jg
dec
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
es
mov
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
lcall
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
decl
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
lcall
mov
mov
mov
popa
mov
and
addr16
push
daa
mov
subb
and
and
outsb
bound
xor
jmp
shl
xor
shll
out
mov
pop
jne
push
pop
cmp
repz
adc
cmp
popa
pushl
ficoms
movzwl
lea
push
push
fisubl
fdivrl
mov
dec
mov
push
std
push
xor
movl
ljmpw
add
dec
mov
sub
mov
sarl
out
mov
jmp
push
clc
pop
aas
or
decl
xlat
mov
dec
inc
push
push
inc
push
inc
pop
incl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
hlt
ljmp
mov
ljmp
mov
mov
xor
mov
sub
push
inc
rep
push
or
push
mov
fdivp
mov
jne
dec
mov
xor
and
jne
stos
repnz
mov
xchg
fsubl
xchg
jo
pop
js
inc
sub
ffreep
into
or
sbb
mov
jge
adc
rcr
test
or
sub
out
jge
sub
adc
popl
jmp
xor
jle
inc
scas
clc
lods
int3
outsb
loopne
mov
or
push
cld
mov
mov
jl
mov
xor
push
shr
dec
repz
out
push
jnp
mov
sub
pop
mov
fisttps
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
in
ret
aaa
lods
mov
mov
mov
pop
and
adc
pop
inc
cmp
xchg
stos
cmp
jae
paddd
add
orb
and
loope
inc
xchg
add
add
jo
mov
fcomip
mov
inc
idivb
mov
pop
xchg
cmp
mov
sub
sbb
add
mov
add
imulb
stc
push
push
mov
push
add
pop
lea
push
cmpsl
fdivrl
dec
setne
scas
fwait
add
mov
xor
mov
mov
lock
xor
jb
imul
fmull
or
jne
or
cmp
mov
fcoml
vmovdqa
add
fisubrs
test
test
mov
mov
cmp
jge
shll
dec
jle
jne
mov
add
loope
jmp
lret
adc
inc
xchg
add
repnz
je
pop
in
negb
pop
add
sub
mov
jno
je
cld
pop
cs
xchg
add
jle
mov
out
mov
int3
inc
mov
mov
fcomp
xor
das
mov
shlb
inc
dec
out
es
loop
dec
orb
pop
push
inc
pusha
dec
aam
or
data16
mov
mov
rolb
pop
lcall
mov
push
xor
popa
pop
dec
out
decl
xchg
adc
pop
dec
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
cmpsb
jmp
add
sbb
jecxz
dec
cmp
cmp
sub
popf
enter
sbb
lcall
pop
jmp
push
xor
call
mov
shlb
jl
push
hlt
xor
call
adc
mov
mov
movl
cmp
enter
or
pop
sub
data16
mov
or
cmpsl
cmpsl
pop
inc
or
fnstcw
xor
call
sbb
popf
pop
and
call
pop
scas
cmpb
mov
cli
in
push
call
push
test
mov
push
pusha
push
ss
or
add
jns,pn
add
or
imul
push
push
and
mov
mov
cmpb
je
or
jne
movsbl
inc
or
jmp
add
daa
xchg
xchg
sub
push
jecxz
in
inc
pusha
sbb
adc
xor
loop
fdivrl
adc
loopne
dec
jecxz
pop
movb
add
jne
fidivrs
mov
dec
adc
outsb
ret
add
adc
je
stos
mov
or
cmp
push
je
dec
adc
or
jbe
test
std
pop
dec
arpl
push
pop
cmp
int
mov
enter
adc
jne
jbe
adc
mov
or
push
jns
jo
dec
add
fsubs
push
sbb
mov
sub
push
outsb
popf
adcb
xchg
cmp
sub
adc
loopne
mov
add
xchg
add
fildll
fstpl
jmp
xlat
mov
ret
sbb
inc
or
pop
mov
and
je
dec
or
mov
jne
mov
pop
or
xor
fs
or
add
lds
mov
out
outsl
xor
aas
repnz
addb
cmp
inc
and
jne
xchg
mov
mov
or
mov
jg
pushw
cmp
fnstsw
shll
mov
mov
out
daa
cmp
lahf
adc
push
adc
adc
adc
add
push
pop
aas
pop
adc
mov
dec
loope
mov
jmp
setge
pusha
pop
pop
cmpsb
movl
ja
ret
push
subb
lahf
outsb
mov
fcomps
call
push
push
mov
fists
fs
mov
inc
dec
lock
mov
inc
or
inc
add
testl
jle
cmp
insb
fisubrl
adc
adc
cs
iret
jae
mov
push
lods
inc
pushf
jle
pop
insl
mov
shlb
test
ret
aad
fisttpl
add
cmp
frstor
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
jne
pop
in
sub
add
jmp
sub
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
mov
jmp
mov
mov
jmp
mov
jmp
mov
pusha
addl
test
xchg
push
or
dec
inc
sub
pop
incb
sbb
pminub
push
movl
test
pop
test
adc
inc
mov
je
add
cli
sbb
rcr
fsts
inc
sti
sub
mov
roll
push
sub
or
xor
xchg
ja
ret
loope
test
movsb
fmul
dec
call
cmp
lret
in
aas
mov
cmp
or
add
or
cmp
jne
xchg
push
mov
adc
es
ja
xchg
ret
or
or
jo
daa
popl
test
jle
dec
mov
inc
insb
aas
icebp
inc
fiadds
call
and
jecxz
adc
xor
lahf
xor
push
mov
lock
dec
mov
insb
js
and
repz
add
sbbb
dec
mov
movl
adc
and
inc
leave
loopne
inc
pop
fwait
mov
jg
stos
mov
call
or
bnd
cmp
adc
push
dec
push
add
add
incb
push
jbe
adc
dec
jne
pop
pop
pop
inc
xorl
sbbb
jmp
es
cmpxchg
inc
or
loopne
lcall
mov
mov
mov
jnp
lock
mov
es
sti
mov
dec
cmpsb
rcl
fcoml
mov
fsts
cmp
jbe
sbb
lahf
loopne
fucomip
xor
sbb
inc
movsl
pop
sbb
aam
pop
inc
adc
ja
add
mov
mov
pop
push
xor
leave
pop
push
cmpsb
dec
rorl
cmpsl
mov
and
adc
cmp
push
les
mov
adc
push
push
jne
jg
test
mov
add
inc
inc
pop
ret
mov
test
stos
pop
push
fwait
jge
cmp
rolb
addl
mov
gs
cmpb
push
cmpl
xor
add
jae
jl
cmp
mov
call
and
dec
and
aas
mov
mov
xor
loopne
push
jne
popa
or
add
imull
add
fwait
inc
adc
scas
xor
push
scas
dec
shl
inc
adc
sarb
or
push
insl
jo
or
add
adc
add
cld
in
jne
cmp
inc
lods
daa
adc
mov
ret
pop
push
add
mov
cmp
push
push
popl
aad
dec
or
pop
mov
adc
incl
push
lea
push
mov
push
les
push
sbb
add
or
jnp
dec
and
inc
jg
sarb
sub
insb
mov
pop
push
dec
sarb
pop
jmp
jbe
xchg
adc
adc
das
xchg
jle
paddusw
mov
add
loopne
push
sti
or
gs
movw
pop
or
pop
mov
sub
insl
cs
pusha
or
mov
das
pop
or
loopne
ds
cmp
rorb
jo
sbb
xchg
push
mov
pushf
cmp
mov
mov
clc
lret
aad
push
cmp
aaa
fsubs
rcrl
add
cld
inc
stos
orl
mov
fbstp
jmp
lea
cmp
push
sbb
vmread
mov
xor
cmovge
outsl
loopne
mov
adc
ret
sbb
imul
les
jge
xor
or
call
loop
cmp
xchg
mov
nop
xor
mov
je
inc
jae
mov
or
out
mov
add
jmp
inc
add
jmp
push
pop
sub
and
pop
pop
mov
idiv
or
push
push
addr16
in
add
jae
jbe
add
or
js
sbb
push
repnz
icebp
gs
add
pop
pop
xor
push
ret
push
and
pop
cld
or
gs
ret
fnstcw
or
and
pop
add
clc
dec
js
aas
xchg
test
jmp
clc
or
ljmp
pop
loope
pop
icebp
and
mov
adc
mov
cmp
sub
inc
lock
scas
popa
cmpl
je
cmp
mov
cmpsl
xor
jo
rorl
add
cld
add
mov
sti
sbb
dec
mov
lds
push
sbb
xchg
dec
mov
dec
clc
mov
mov
jmp
mov
movsb
dec
pop
mov
xor
mov
push
mov
inc
cld
dec
jmp
sub
ret
testb
push
cmp
fs
dec
jne
mov
or
ja
jge
and
aaa
add
dec
ret
pop
ljmp
inc
pushf
sbb
loopne
or
add
pop
dec
jne
mov
push
int3
and
dec
loopne
pop
lea
jmp
xchg
das
out
jmp
add
push
sub
imul
mov
inc
pop
jmp
and
rcrl
andl
sub
lret
loope
jo
jo
stos
add
and
jmp
aam
cmc
adcl
inc
hlt
jnp
in
lods
pop
add
add
mov
cmp
inc
cmc
and
mov
adc
dec
inc
data16
add
es
mov
daa
cmp
hlt
mov
outsb
sub
dec
jl
pop
shrb
cld
cmp
jge
sub
jbe
jb
adc
push
cltd
popa
push
fnsave
adc
shr
in
mov
jmp
mov
outsl
pop
cmp
push
std
dec
jl
sub
mov
mov
sbb
inc
sub
add
lea
inc
dec
movsb
add
ret
push
push
dec
cmp
or
lds
scas
push
lahf
cltd
mov
push
mov
fistps
xlat
adc
imul
test
jg
cmp
mov
mov
lea
lock
push
clc
mov
cmpsb
jmp
pushf
xor
jg
adc
push
insb
dec
js
mov
inc
jb
adc
add
push
pop
adc
addb
inc
lret
fcompl
sub
pop
mov
fbld
push
int3
dec
push
lahf
out
and
sbb
inc
add
xlat
xor
mov
fwait
or
jno
cld
lods
jmp
out
loopne
inc
jnp
sar
pop
cmp
ret
push
pop
jg
mov
jle
ljmp
ret
mov
leave
sbb
aad
mov
rcr
pop
jp
pusha
sub
mov
sub
ret
std
sub
or
in
or
push
das
sbb
pusha
test
shlb
push
sub
sahf
dec
lea
push
cmp
int3
ljmp
mov
rcll
push
add
mov
jno
cs
enter
jmp
pop
call
jle
push
mov
or
nop
jae
aas
and
clc
addb
or
outsl
push
subl
push
das
int3
pop
pushl
mov
je
xchg
and
or
scas
add
and
pop
add
add
int
mov
adc
sbb
je
ss
push
and
pop
fcom
adc
dec
add
data16
call
push
cvtps2pd
or
mov
clc
dec
imul
stc
jge
ds
cmp
jge
xor
dec
insb
pop
dec
cmp
nop
pushf
lcall
maskmovq
mull
clc
push
lods
add
add
or
dec
or
mov
je
daa
cltd
cmp
mov
les
stos
test
out
cmc
in
scas
dec
mov
add
xchg
xchg
push
int3
mov
mov
sub
std
adc
mov
mov
fistpll
fistpll
cwtl
cmp
xlat
test
fldl
mov
call
lods
pop
push
add
or
or
and
or
je
cmp
je
cmp
mov
je
mov
jbe
scas
mov
jp
dec
imul
clc
jmp
adc
or
adc
loopne
das
shr
cmp
mov
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
jb
popf
sub
lock
sub
push
jmp
pop
in
test
fstpl
or
call
adcl
loopne
jns
inc
and
data16
pop
jbe
test
push
pop
pop
cmp
and
test
int3
jg
aad
movsl
jae
and
pop
int3
cmp
sbb
fists
xor
jmp
es
daa
nop
sbb
dec
insb
sub
jmp
inc
test
inc
cmp
sub
add
test
cmp
lock
and
icebp
jmp
push
xchg
xchg
add
movsb
rcrl
adc
movsl
mov
jg
inc
add
pop
ss
clc
push
push
add
sarl
minps
into
mov
pop
xor
pop
push
mov
cmp
xor
or
aaa
aaa
aaa
or
dec
or
jo
imul
adc
inc
pop
dec
mov
fs
xchg
loopne
xchg
jmp
and
mov
jl
adc
pop
iret
adc
add
je
clc
or
fdivrp
popa
inc
inc
mov
jmp
aas
add
cmp
and
popa
adc
and
mov
jne
aad
rclb
sbb
fnstsw
cmpsl
or
iret
mov
and
mov
push
test
push
popa
jge
or
in
pushf
out
scas
jmp
rorb
out
sub
mov
enter
sbb
jp
push
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
sbb
cmpsl
testb
add
inc
ljmp
fnstcw
pop
mov
jo
add
je
cmp
out
cmp
nop
lret
push
dec
adc
popa
adc
popa
xchg
sub
jp
push
hlt
xor
push
pop
movsb
push
push
fstpl
adc
pop
mov
aad
sbb
adc
and
stc
cmpl
dec
push
pop
mov
inc
xor
push
mov
jle
inc
mov
clc
jmp
push
test
enter
les
mov
add
cmp
xor
or
aas
sarb
mull
mov
sub
sar
cli
out
dec
adc
pop
pop
ret
add
jo
jbe
lock
cmp
in
sbb
or
or
sti
xchg
sub
jl
mov
mov
mov
sub
inc
jmp
cmp
and
out
mov
or
add
je
cmp
mov
cmp
je
daa
xor
mov
add
sub
inc
popa
aaa
in
insl
and
or
push
stc
push
jb
pop
out
test
out
push
mov
and
loopne
out
xor
sbb
aaa
jmp
push
sti
or
xor
or
jb
jmp
jl
andl
inc
sub
jbe
jmp
jg
mov
cltd
inc
jno
xor
cld
adc
movsb
rol
subb
lret
inc
sbb
mov
clc
lods
inc
xor
ljmp
lods
push
jl
xchg
xor
mul
and
adc
rolb
neg
push
cmp
jae
push
jo
bound
xor
push
adc
inc
push
or
or
lcall
sub
shl
dec
inc
push
dec
push
xor
roll
nop
sub
adc
insb
jmp
pusha
icebp
sti
mov
add
pushf
sarb
je
dec
add
inc
je
adc
or
mov
aaa
adc
push
mov
jmp
sbb
test
sub
jmp
into
leave
cmc
add
popa
pop
or
push
repnz
pop
add
add
cmp
pop
mov
xchg
icebp
jne
add
lods
rolb
ss
lock
popfw
or
push
push
into
inc
add
mov
stos
les
push
call
xor
dec
imulb
jbe
insl
call
sub
inc
call
inc
sbb
cmp
jne
mov
cmp
jge
mov
sbb
lahf
loopne
fwait
mov
ret
lock
add
lea
ljmp
stc
mov
pop
decl
stos
mov
jo
stc
fcoml
lret
in
jge
xlat
sahf
or
or
and
inc
test
insb
inc
push
xlat
mov
cmp
mov
add
fldl
jno
pushf
jbe
movl
or
add
cmpsl
lock
lock
test
add
cs
mov
cmpsl
cmpl
jle
cwtl
or
xchg
dec
data16
inc
data16
or
mov
cmp
das
mov
lcall
dec
jne
enter
mov
movsl
pop
lds
cmp
add
scas
scas
push
add
mov
adc
pop
jo
mov
adc
outsl
sahf
or
push
loop
cld
or
out
lock
mull
adc
sbb
movl
push
xlat
cmp
jle
repnz
xor
pop
lock
or
mov
orb
ret
mov
mov
mov
ss
adc
xchg
hlt
jo
rorl
jge
add
and
or
xor
popa
mov
pop
xchg
dec
push
xchg
pop
inc
xchg
test
dec
loopne
xor
inc
rcrl
out
inc
mov
jg
mov
cmpsl
xor
decl
icebp
adc
push
adc
icebp
or
aad
aam
pop
and
movsb
xchg
inc
dec
in
ret
pop
ja
sbb
adc
dec
or
aaa
push
push
push
mov
incl
movsl
pop
pop
mov
hlt
pop
pop
in
sbb
mov
push
pop
add
jne
inc
cmpsb
jbe
cwtl
inc
sbb
in
loop
mov
dec
jne
les
push
pop
or
sbb
les
popa
mov
inc
xor
sbb
test
bound
and
shrl
adc
fcompl
sbb
add
cli
inc
aam
sbb
cli
pop
loopne
shl
ret
jmp
dec
mov
test
cmp
jne
pop
nop
mov
or
icebp
dec
sbb
push
bound
add
push
ja
xchg
ret
or
pop
test
test
call
rcrb
je
sti
pop
jne
sub
in
sbb
sti
pop
cmp
js
pop
jne
add
dec
jp
pop
fwait
mov
andb
out
and
mov
ljmp
mov
iret
or
sub
loopne
mov
add
inc
cmp
cltd
sub
add
push
gs
imul
out
and
je
pusha
rorb
cmp
outsb
notl
test
sub
dec
push
push
mov
inc
mov
aad
rolb
lahf
test
dec
std
incl
pop
ret
imul
gs
xor
cs
insb
ret
sbb
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
ja
inc
stc
outsl
loopne
sbb
push
neg
aaa
sbb
inc
out
and
push
sub
add
xchg
mov
and
addl
pop
pop
dec
icebp
lods
test
add
mov
call
out
inc
je
movsb
xor
int
aas
iret
les
add
push
repnz
fs
inc
nop
jae
lods
aas
sti
and
loopne
lcall
sbb
loope
pop
cmpb
repz
or
stc
jnp
mov
jmp
dec
cmpb
rol
xor
lock
jae
sub
inc
and
sub
sbb
pop
lahf
push
or
push
mov
icebp
push
je
das
ljmp
xor
cmc
add
in
adc
popa
and
outsl
data16
popa
jb
inc
mov
mulb
gs
aaa
jg
rclb
inc
cltd
dec
aam
dec
hlt
andl
xchg
and
add
jb
sbb
xor
jbe
mov
sbb
xchg
add
mov
rolb
out
jp
mov
add
mov
jge
aad
fmuls
dec
sbb
flds
ret
cli
mov
orl
push
mov
or
xchg
pop
mov
inc
xchg
and
lcall
fadd
xor
mov
sbb
pushf
cmp
test
int3
inc
sub
popa
subb
jp
lods
sbb
dec
push
das
pusha
cmp
jo
pop
or
or
add
jne
orl
push
ljmp
pusha
cmpsl
mov
call
sub
adc
in
bound
push
lock
mov
mov
loopne
push
inc
mov
int
imul
mov
sub
xchg
sbb
test
pop
daa
jnp
and
pop
sbb
ret
sbb
loop
mov
push
lea
or
daa
lock
cmpsl
push
adc
adc
or
das
sub
mov
mov
add
lods
push
add
add
popa
mov
pop
dec
and
push
or
test
popa
rep
jns
and
add
cld
call
mov
outsl
movhps
push
inc
xchg
mov
insl
lods
pushf
pop
fidivl
leave
out
adcb
movzwl
ljmp
incl
cli
jg
push
mov
inc
jmp
cmp
pop
add
pop
cld
in
xorb
shr
or
mov
adc
sbb
mov
and
lret
add
push
and
and
rolb
int
add
dec
or
cmp
jb
or
js
add
xor
and
sbb
cmp
dec
jbe
pop
add
cmp
push
lock
lea
ret
mov
mov
mov
aaa
lahf
or
push
push
dec
inc
mov
jnp
icebp
jmp
loopne
cmc
fdiv
add
inc
test
je
fnstsw
loop
or
jae
and
je
jl
push
cmp
adc
mov
and
cmp
jne
pmuludq
cwtl
and
or
mov
pop
clc
out
bound
dec
dec
dec
cld
mov
mov
jle
mov
inc
lcall
loopne
jo
adc
or
lock
and
inc
inc
mov
jbe
jae
ret
xor
mov
int
sbb
cli
xorb
sbb
sbb
jb
inc
mov
and
daa
out
arpl
fs
jns
scas
aam
pushf
rolb
je
adc
pusha
ret
lea
xorl
add
les
fldenv
push
sub
or
jmp
adc
enter
mov
repz
mov
nop
push
mov
mov
cmp
pop
sbb
rolb
loopne
leave
ds
cmp
cmp
cmp
cmp
add
and
fdivrl
and
or
pop
gs
aas
sub
jo
push
gs
and
add
pop
bound
arpl
aas
loopne
sub
add
orl
sti
addb
clc
aaa
mov
mov
xchg
pop
pop
mov
lock
shlb
pop
lea
push
push
xchg
adc
add
push
cmp
mov
cmp
and
neg
xchg
je
cmp
or
dec
xor
mov
xchg
aam
in
daa
sub
add
or
dec
xchg
mov
push
in
mov
jp
clc
sbbl
movb
jb
cmpsl
xor
push
sub
int3
ja
and
loopne
cwtl
imul
and
leave
divl
in
push
mov
mov
mov
lods
xchg
in
mov
sub
stos
iret
cmp
jbe
shlb
and
jmp
mov
ja
imul
ja
mov
adc
jmp
daa
mov
push
push
roll
lcall
jnp
and
inc
cmpl
imul
and
sti
mov
jl
sub
or
mov
outsl
jmp
or
leave
jne
mov
mov
jns
push
pop
adc
xor
push
and
mov
test
lret
ja
repz
sub
push
add
fwait
mov
or
or
sarb
xor
jg
fwait
in
pop
xor
fcoml
xchg
cmp
push
andl
push
add
inc
add
inc
ljmp
sbbl
push
mov
push
or
lods
je
cmp
cs
xchg
mov
xor
shlb
sbb
fs
gs
push
gs
add
sbb
inc
adc
scas
insl
fimull
popa
bound
inc
push
fistpll
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
lcall
push
outsl
insl
bound
outsl
js
imul
ja
nop
push
cmp
push
dec
ja
dec
inc
push
inc
add
xor
je
add
outsb
daa
aas
out
pop
addps
dec
dec
push
dec
dec
mov
and
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
leave
leave
lods
test
fs
in
in
enter
in
in
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
arpl
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
cmp
jns
mov
cmp
cmp
xor
sub
cmp
cmp
cmp
sub
cmp
cmp
sbb
cmp
cmp
adc
or
mov
cmp
cld
data16
pushf
pushf
pushf
pushf
hlt
lock
call
in
mov
ror
mov
cmp
sarb
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
insb
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
daa
daa
mov
adc
adc
jns
daa
daa
add
cld
cmp
cmp
clc
hlt
lock
cmp
cmp
call
cmp
cmp
aam
int3
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
fs
pushf
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
sbb
mov
shl
or
and
dec
loopne
mov
es
popf
lods
mov
inc
or
and
xor
dec
testl
xchg
dec
mov
scas
push
and
add
ljmp
pop
mov
pushf
mov
pusha
push
sub
xchg
arpl
pop
lret
fwait
lahf
test
xchg
mov
jns
sbb
adc
out
sahf
sbb
and
and
movsl
mov
and
cmp
jmp
mov
pop
ret
scas
int
outsb
inc
cmpsl
shrl
and
push
stc
ja
shrb
mov
ret
mov
pop
mov
cmp
mov
mov
push
push
jo
mov
cmpsb
jmp
gs
mov
bound
dec
inc
or
inc
je
sbb
pop
or
xchg
movl
mov
filds
dec
popa
gs
cwtl
and
push
dec
inc
inc
dec
add
in
or
daa
outsl
adc
and
dec
out
adc
push
dec
pop
and
mov
push
push
pop
sub
pop
cs
inc
dec
pop
dec
dec
dec
inc
push
das
mov
stc
jne
add
mov
xor
xchg
or
jl
jl
push
jmp
psllw
in
in
repz
cmc
in
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
jmp
loope
in
in
jecxz
in
in
in
out
jmp
ljmp
in
out
rcl
in
in
rcl
aam
in
in
xlat
fcomp
in
in
fcmovu
in
in
rol
in
in
ret
in
mov
leave
in
in
lret
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
in
in
mov
in
cmpsb
cmpsl
test
in
in
stos
stos
lods
lods
in
in
scas
scas
nop
xchg
cltd
in
out
lahf
cmpl
mov
cwtl
cs
ds
or
push
inc
imul
or
sub
mov
push
fwait
insb
mov
mov
jp
leave
mov
jp
push
dec
pusha
daa
push
jg
xor
xchg
add
adc
inc
js
gs
stos
std
jo
imul
dec
dec
and
movl
pushf
jo
nop
aam
aam
dec
and
inc
dec
jne
dec
dec
gs
outsl
pop
mov
push
xor
fbld
or
outsb
mov
mov
scas
mov
push
ret
lret
push
push
loopne
xor
jnp
daa
fisubrl
xlat
inc
jl
inc
jl
push
push
and
push
sbb
mov
scas
cwtl
hlt
dec
ljmp
or
imul
outsl
nop
lock
mov
mov
outsb
sbbl
jge
add
dec
or
dec
jbe
cmp
ja
pop
mov
cmp
adc
pusha
pop
dec
mov
in
jge
nop
cld
scas
cld
pop
jge
mov
imul
add
shrl
ret
insl
jle
lods
scas
shll
sbb
rcl
jg
add
fcmovu
add
push
outsb
fs
pop
scas
mov
shrb
js
mov
mov
mov
or
push
sbb
or
inc
popa
jae
adc
sahf
add
shll
inc
mov
cmp
mov
or
inc
add
lock
insb
popa
je
in
sbb
ds
ds
rcll
lock
and
ficompl
nop
sub
stos
adcb
push
arpl
adc
test
ret
or
je
insb
inc
fsubrl
ds
fisubrl
adc
imul
orb
inc
addb
fs
cwtl
mov
int
bound
fiaddl
hlt
mov
outsl
cmpsl
or
data16
push
addl
or
or
inc
push
stos
push
test
or
mov
addr16
cld
push
mov
data16
sarb
cs
or
add
dec
invd
xor
inc
insb
jae
in
cmp
test
add
and
addr16
inc
cld
fldt
push
adc
jb
popa
fs
push
fs
dec
les
int3
sbbl
mov
in
xor
mov
or
repz
aam
xchg
fwait
push
movsl
xor
iret
jno
orl
jnp
sbb
push
loopne
sbb
mov
test
mov
mov
int
pushf
rcr
and
dec
jne
push
mov
and
inc
push
fsubrs
outsb
arpl
cmp
pop
inc
xchg
fadds
movsb
ret
test
lock
repz
mov
add
cmpl
enter
dec
out
mov
xchg
sbbl
insl
ss
push
pop
lock
jp
mov
ljmp
push
mov
jmp
push
adc
or
mov
mov
les
gs
pop
fstpt
dec
push
or
xor
mov
push
add
mov
add
dec
rcrl
and
idiv
sub
ret
mov
les
sbb
decb
inc
dec
xor
lcall
pop
add
pop
push
dec
mov
call
or
jbe
inc
bound
leave
repz
je
movzbl
push
push
jmp
mov
sbb
lahf
lods
pop
add
ror
or
xor
repz
jne
inc
jne
inc
inc
ds
mov
sub
in
add
orl
push
ljmp
push
sub
out
and
sti
je
loopne
out
sub
pop
mov
sbb
stos
mov
inc
jl
ja
test
pop
ret
insl
inc
rolb
or
jecxz
bound
pop
jb
mov
cltd
adc
jmp
ret
test
and
mov
nop
or
cltd
outsb
jo
add
clc
cs
inc
js
andl
add
fnstcw
add
insl
not
faddp
js
ljmp
aaa
adc
add
repz
cmpb
jbe
adc
sarl
and
pushf
inc
rcr
push
sub
inc
jecxz
enter
imul
xchg
ret
push
push
mov
jns
insl
in
or
mov
and
push
jns
hlt
imul
adc
pop
mov
in
fsin
je
ljmp
jge
add
es
inc
and
cmp
out
mov
add
sub
and
adc
jl
arpl
mov
or
aas
jne
loopne
sti
ja
lea
fwait
dec
imul
loope
jne
or
xlat
sbb
aaa
js
jp
xor
lcall
add
push
adc
sub
push
mov
add
pop
or
sbb
cmpb
and
sub
and
push
int3
add
xchg
pop
lock
or
xchg
sub
jo
in
pop
popa
clc
xchg
test
lock
aaa
dec
sti
decl
mov
sub
je
jae
aam
mov
cmp
jl
inc
mov
or
push
incl
pop
or
sbb
or
jae
inc
dec
jne
mov
out
or
jne
sarb
paddusb
mov
sub
mov
inc
std
push
xor
div
dec
jle
cli
cmp
push
pop
mov
lock
inc
ljmp
jbe
add
mov
sub
jmp
xchg
cmpsb
add
dec
jne
push
mov
sub
leave
push
outsb
addl
sub
xor
add
and
jo
lcall
negl
and
pop
mov
jnp
xor
dec
inc
and
cmpsb
mov
pusha
lcall
xchg
imul
add
fs
fnstsw
je
push
ud0
insb
and
fistps
ret
add
add
sub
add
sbb
fprem
fdivr
mov
xor
outsl
add
lods
push
sub
rcrl
loope
xchg
cmc
adc
ffree
ffree
ffree
fstpl
cmp
rcrb
add
test
frstor
push
loope
data16
jnp
and
lods
jmp
xchg
inc
push
push
mov
inc
aaa
push
cmove
sub
cmp
orb
mov
jp
or
mov
aaa
xor
inc
jne
lock
add
jo
test
sarb
jg
movsl
pushf
ss
cmpsl
mov
rol
cmp
inc
push
aas
inc
js
jge
add
push
fcoml
and
sbb
pop
xor
sub
xchg
dec
mov
pop
sti
int
nop
insl
nop
loopne
add
fldl
jns
add
or
addl
push
movb
rcll
je
and
push
mov
jmp
js
cmp
add
inc
jecxz
push
pusha
sbb
loope
scas
push
cmc
and
lret
lock
xchg
lods
add
inc
out
adc
insl
lock
jle
aas
add
xchg
add
ss
push
fcmovu
ret
in
mov
pop
jge
pop
addr16
int3
test
nop
nop
add
mov
ja
push
push
inc
in
xchg
sub
xor
bound
test
mov
and
ucomiss
nop
scas
mov
rorb
cmp
lock
clc
or
je
das
es
out
cmp
ja
mov
and
add
xor
push
outsb
dec
pop
sub
hlt
shlb
mov
dec
push
ds
call
inc
pop
sbb
mov
dec
idivl
jne
cltd
aaa
push
cmp
mov
push
or
iret
pop
rol
testl
push
pop
sub
mov
es
loopne
mov
sahf
push
jnp
mov
inc
and
call
rolb
pop
xchg
aas
pushf
into
xchg
xchg
fbstp
adc
cmp
cmp
sbb
clc
adc
ficoms
loopne
lcall
hlt
and
xor
insb
stc
dec
inc
cld
or
mov
xchg
les
pop
pop
es
push
scas
iret
test
test
shlb
add
out
leave
push
add
pop
pop
movsb
cmp
mov
test
and
icebp
mov
in
xor
add
movl
testb
clc
ret
adc
ss
outsb
sbb
dec
sbb
add
inc
pop
hlt
andl
cmp
addr16
pop
pusha
ret
test
test
rclb
popa
push
cmp
leave
inc
xchg
mov
xor
int3
jmp
adc
push
andb
inc
sbb
jl
loopne
inc
adc
in
and
loopne
inc
sub
shrl
jecxz
adc
mov
movsl
adcl
mov
push
inc
mov
xchg
mov
jg
not
and
mov
aad
iret
pop
pop
rclb
sub
orl
jmp
mov
out
cmp
pop
add
je
jae
pop
insb
movsb
pop
orl
cmp
nopl
add
add
lahf
mov
je
mov
pop
or
mov
mov
mov
add
mov
add
mov
xlat
popf
jne
dec
cli
jg
mov
sbb
mov
test
test
pop
jns
aaa
xchg
mov
insb
mov
cs
mov
sahf
mov
dec
pop
jns
mov
mov
repnz
xor
mov
ds
clc
or
jge
mov
out
sarl
mov
lock
mov
orb
mov
faddl
in
aam
outsl
lock
in
mov
jne
rcll
addr16
adc
ss
js
bnd
push
enter
push
push
mov
pop
jbe
imul
call
outsl
jno
aaa
call
add
dec
cli
jl
cmpsl
pop
es
push
hlt
clc
cld
push
jne
inc
xchg
lock
push
cld
imull
into
inc
sub
push
in
mov
outsb
and
test
dec
mov
mov
repz
lock
add
xlat
mov
xor
fsubrs
mov
fisubl
xor
mov
dec
lock
mov
dec
das
lea
daa
and
cmp
xchg
mov
rorb
test
rorl
lds
mov
aam
jo
cltd
rcl
pop
ret
add
insl
pop
and
lret
dec
pop
xor
testl
pop
cli
mov
fstps
pop
pusha
rcrb
mov
nop
out
das
lods
clc
mov
test
add
shll
pop
mov
xlat
mov
xor
xor
repz
cli
cmpsb
mov
mov
inc
cli
inc
movsl
jnp
and
pop
cmp
fdivrs
inc
hlt
cli
ljmp
jae
sbb
or
pop
sbb
push
mov
xchg
jmp
push
sub
sbb
ljmp
shll
scas
xchg
inc
xor
xor
xchg
divb
cmp
dec
je
mov
mov
pop
sub
jbe
rcrl
insb
sbb
pop
inc
lods
mov
mov
push
add
shll
mov
cmpsl
pop
and
enter
out
into
sub
dec
fstpt
mov
addr16
xchg
jle,pn
jmp
rclb
and
push
sub
fldenv
scas
jg
cmp
jbe
pop
sbb
dec
int
adc
dec
pushf
lret
mov
push
xchg
mov
add
cmp
sbb
shrb
and
mov
mov
inc
lcall
ret
bound
adc
test
or
jnp
add
push
mov
xor
jle
sub
push
jge
js
mov
lret
fimull
push
or
dec
jne
xchg
sub
jmp
jmp
sar
mov
mov
push
add
std
arpl
into
cmp
jne
cs
and
lods
jmp
pop
lds
inc
ljmp
pop
in
mov
fcoms
sbb
jmp
push
mov
fildl
sub
jae
shl
mov
sti
outsb
movsb
xchg
pop
mov
rep
sbb
mov
xchg
decl
push
in
xchg
pop
pop
mov
mov
pushf
jmp
sub
xor
cmp
cld
pop
cli
cmp
imul
mov
add
and
mov
stos
fnsetpm(287
pop
dec
mov
bnd
pop
mov
or
jl
mov
ret
je
sarb
or
sar
ror
test
push
pop
pop
jne
lea
mov
jge
ret
fistps
xchg
inc
cltd
mov
lcall
cmp
out
in
fimuls
into
sbb
pushf
sub
cmp
xchg
xchg
fdivp
dec
fsubrs
rorl
lea
cmpsb
or
and
lret
stos
sub
je
pop
sbb
test
push
js
lahf
shr
mov
push
pop
outsb
adc
faddl
lock
sbb
mov
test
lahf
ret
sbb
add
mov
aad
cltd
jge
mov
xor
inc
inc
in
add
inc
lods
and
jmp
mov
sub
dec
jecxz
xor
es
aas
and
repnz
call
pop
js
mov
dec
shl
add
hlt
dec
or
dec
fdivl
or
jmp
jecxz
push
jne
push
dec
mov
rcrb
leave
roll
aad
std
test
fdivs
outsb
mov
mov
je
mov
or
je
mov
inc
je
mov
dec
jnp
add
hlt
dec
jl
mov
mov
loope
pop
cmp
jbe
mov
popa
mov
xchg
adc
fdivrl
ds
pop
mov
push
mov
loopne
mov
inc
iret
dec
mov
pusha
fwait
dec
clc
xchg
ret
xor
and
cs
int3
lahf
ds
bound
scas
stos
dec
sbb
daa
sub
cmc
test
inc
les
fdivrs
push
cld
xchg
lock
mov
push
and
jg
in
mov
mov
dec
test
dec
in
test
push
add
sub
xchg
push
mov
jne
pusha
mov
fdivrs
fmull
sbb
clc
dec
cld
lea
insb
fildl
add
cs
pop
rcr
cmp
jl
jmp
add
insl
add
cltd
loope
addps
push
lea
sti
and
sub
xchg
outsl
push
lea
cmpl
xor
stos
or
cli
pop
orb
pop
jge
mov
neg
jmp
or
add
scas
enter
xchg
push
mov
mov
fs
pop
sub
mov
inc
dec
shr
leave
jg
dec
mov
adc
add
pop
pop
pop
aam
ja
push
or
mov
mov
mov
cli
mov
mov
mov
or
arpl
push
add
add
loope
mov
add
mov
cs
daa
inc
cmp
add
rorb
ja
sar
rorb
push
sub
aas
jae
mov
sti
lea
stos
or
sub
mov
push
add
ja
mov
mov
add
pop
pop
mov
scas
push
or
rorl
jmp
enter
xor
push
pushf
push
lahf
dec
dec
insb
jp
cld
inc
dec
inc
dec
lods
or
xor
jge
divb
mov
std
mov
ljmp
ret
dec
aam
adc
jg
cmp
jl
pop
sbb
push
push
stos
je,pn
mov
stos
neg
mov
rep
jmp
inc
inc
mov
loop
movlps
les
stos
pop
pop
inc
clc
dec
test
gs
push
add
push
mov
repnz
fildll
sbb
sub
mov
add
leave
mov
mov
mov
cmpsb
lret
mov
adc
mov
mov
sub
aaa
cmp
scas
je
mov
dec
mov
repz
inc
lods
push
rcrl
jne
sbb
mov
and
push
sti
add
jecxz
js
je
inc
jne
pop
mov
ret
xchg
fnstsw
cmp
repnz
or
repnz
or
cmp
lret
rclb
adc
pushf
fwait
imul
inc
je
push
push
cmp
or
mov
or
push
notb
add
or
popf
pop
pop
inc
loop
push
mov
test
sub
mov
bnd
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
fstps
loopne
add
sub
dec
dec
cmp
mov
out
xchg
pop
jmp
std
je
inc
das
repnz
cmp
stos
or
inc
push
cli
adc
or
xor
aaa
inc
ja
inc
inc
imul
je,pn
imul
test
enter
cmp
xor
inc
fabs
push
jg
sarl
and
scas
insb
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
das
add
push
cmp
xor
stos
xchg
add
jns
mov
nop
sub
jge
pushf
mov
cmp
jae
cmpb
jb
movb
js
decb
and
cmp
jmp
xor
xor
jmp
add
cmp
inc
xor
push
mov
push
shr
mov
add
dec
dec
clc
xchg
out
xor
dec
inc
adc
jp
dec
loopne
call
rorl
je
push
pop
lds
push
add
or
or
lods
adc
jl
pushl
inc
sub
mov
loopne
jae
dec
add
xchg
rolb
mov
fildll
cli
cld
inc
xor
mov
pop
xchg
fwait
mov
das
rclb
pushf
and
jne
and
sub
cmp
pop
in
fsubl
inc
or
ljmp
enter
push
add
divl
pop
jmp
sbb
push
je
mov
iret
es
mov
add
sub
inc
ret
outsl
jns
fwait
sarl
loop
jl
fldz
cmpsb
xchg
mov
ds
lods
lods
out
aaa
or
icebp
daa
mov
loope
pusha
jne
inc
sbb
dec
and
fistpll
out
fldl
sub
pop
add
jg
jne
mov
push
xor
sahf
add
push
cld
inc
jbe
mov
adc
aas
jmp
fstpt
pop
dec
pop
add
test
mov
push
test
insl
js
js
and
push
int3
out
sbb
and
add
jae
fimull
cmpsb
fiaddl
jmp
aaa
mov
adc
or
es
jnp
or
push
inc
imul
push
cmp
aaa
cmp
andl
stos
pop
outsl
sbb
pcmpeqb
add
and
inc
adc
push
push
rcl
mov
xor
fistps
jne
lods
in
add
clc
push
mov
dec
in
insl
mov
mov
out
js
cld
and
cmp
mov
and
ss
or
ja
mov
insb
aam
xchg
cmp
ficoml
lock
push
sbb
fwait
scas
push
repnz
mov
in
cmpsb
xchg
xor
cmp
inc
or
sub
mov
in
adc
mov
xor
push
adc
test
mov
sbb
lea
or
sarl
dec
or
cmp
inc
stc
arpl
push
jae
inc
jecxz
inc
cmp
sub
add
pop
cmpsl
cmc
imul
adc
call
or
add
xor
cld
adc
fstpl
fwait
add
andb
pop
pop
mov
movsb
dec
fistps
jno
adc
addr16
orb
or
lcall
push
jbe
js
cmp
out
sti
add
bnd
insb
pushl
add
ljmp
mov
dec
mov
pop
mov
mov
push
cmp
and
mov
outsb
fld1
add
pop
mov
add
and
fldenv
mov
or
mov
mov
popa
shll
stos
pop
lret
shl
idiv
add
in
cmp
movsb
jg
add
lea
inc
pop
cmpl
jb
ja
and
jb
or
jb
add
fistps
cmp
ja
adc
fisttps
inc
enter
add
inc
dec
jne
sub
roll
cltd
idiv
imul
loope
shl
add
sub
mov
stc
add
pusha
ret
or
test
jne
inc
std
std
cwtl
mov
clc
mov
mov
inc
add
pop
pop
pop
inc
inc
movsl
push
mov
popa
adc
and
dec
popa
test
leave
jg
fdivrl
orl
ret
push
mov
lcall
test
cmp
jl
sbb
add
fistps
add
xchg
mov
ss
lock
or
dec
lock
imul
mov
push
sub
repnz
pop
xchg
cs
loopne
cmp
sub
or
or
push
ret
mov
rclb
enter
fst
add
insb
pusha
loop
cmp
jb
adc
ljmp
pop
sbb
push
push
dec
push
hlt
and
fwait
lea
stc
sbb
mov
mov
pop
jecxz
sbb
int3
or
scas
cmp
pop
mov
rcrl
and
add
cmp
push
and
sub
sub
repnz
mov
adc
lock
sbb
sbb
inc
xchg
sbb
mov
adc
ljmp
pop
shrb
mov
cmp
mov
sbb
jle
mov
and
imull
dec
jne
or
add
mulb
divb
adc
xor
xchg
add
add
inc
sub
in
lock
or
push
pop
add
add
testl
adc
inc
rcl
addb
or
sub
cmp
je
push
inc
call
inc
hlt
out
push
cmpb
sub
mov
push
lea
in
scas
sti
jbe
push
lock
repnz
or
movb
jb
test
outsl
jecxz
push
in
lret
out
stc
jge
call
mov
sahf
jecxz
outsl
call
ljmp
es
pop
stos
mov
cmp
inc
pusha
adc
in
out
repnz
sub
or
xor
std
cmp
push
stos
mov
adc
dec
sub
or
inc
pusha
mov
or
dec
push
inc
es
or
jge
cmp
mov
pusha
mov
sti
std
adc
cmp
push
sub
adc
mov
dec
jo
jns
add
lock
gs
add
out
arpl
mov
ret
loope
push
mov
inc
cmp
imul
xchg
in
outsl
ret
in
sbb
in
ret
and
dec
jbe
or
bswap
insb
lods
jmp
sbb
add
jmp
xor
jle
stos
jecxz
push
inc
cmpb
jne
push
orl
pusha
and
out
lahf
out
xchg
out
jns
add
add
add
push
or
fadds
movsb
sub
jp
add
cmp
push
jo
add
sub
incl
lcall
mov
int3
jp
push
das
mov
inc
rorb
insl
cmc
adc
lock
and
andb
jae
mov
pop
cmp
jne
mov
xor
xchg
loopne
jl
fisubs
push
andb
not
mov
pushf
or
or
or
imul
add
fstp
fcoms
or
or
or
scas
js
subb
push
pop
test
xchg
out
xor
scas
xchg
mov
repz
pop
int3
mov
mov
outsl
aam
and
rcrb
pop
pop
sbb
aam
push
and
lret
out
mov
cltd
cltd
sbb
pop
bound
std
inc
mov
andb
push
lea
and
jl
lcall
shrb
cmp
pop
jo
ret
sbb
xor
lock
test
sub
adcl
popa
test
outsb
fucomi
dec
je
add
jmp
out
aad
xor
popf
sub
mov
push
dec
and
and
push
daa
pushf
jl
imul
popa
and
pop
lods
loope
les
or
mov
loope
lock
and
add
adc
out
shll
je
or
push
jmp
sub
cmp
pop
je
jmp
cmpb
dec
mov
jle
cltd
test
sbb
add
stc
inc
adc
cmpsb
lahf
add
rolb
jmp
cmp
xor
mov
stos
stos
inc
lods
test
popa
mov
test
ret
dec
push
test
cmp
movsb
test
adc
or
or
jle
and
push
dec
bound
pop
sub
inc
inc
call
js
push
add
jb
test
add
dec
es
stos
loope
mov
mov
stos
mov
lcall
addl
daa
jns
cltd
nop
lret
add
add
loopne
push
ja
jns
adc
pushf
jns
mov
and
dec
es
outsl
push
cs
cmc
xchg
lea
lret
sbbb
add
lock
popa
sti
out
ret
mov
adc
or
call
or
lods
into
jge
xor
popf
add
inc
fisubs
push
dec
enter
je
inc
cwtl
jmp
push
sbb
aas
sbb
push
test
sahf
jmp
incl
add
sub
aam
mov
sub
scas
sbb
or
pop
push
jmp
mov
xchg
adc
cli
clc
inc
mov
or
decb
cmovno
push
dec
mov
adc
add
inc
sub
jno
ja
insl
add
rorb
jo
ret
jne
or
mov
imul
lea
mov
stos
lahf
or
ffree
les
xchg
mov
and
sub
jg
hlt
rcrb
je
mov
xor
roll
jae
call
sbb
fwait
mov
cmp
js
lcall
pop
add
lock
pop
inc
lcall
add
sarb
adc
sub
jae
and
jo
clc
add
popf
adc
ret
add
mov
push
movsb
sti
ret
fidivs
popa
or
in
sbb
jecxz
mov
xor
ljmp
xor
sbb
sub
mov
shll
test
lock
dec
sub
push
mov
out
mov
fwait
pop
jl
pop
dec
loopw
in
cmp
jne
incl
lods
pop
arpl
fbstp
mov
sub
and
sub
je
dec
je
sub
fsincos
pop
push
sub
je
jmp
mov
jmp
push
push
push
dec
jbe
icebp
push
jbe
push
inc
mov
jle
fadd
dec
shlb
add
inc
ljmp
xor
gs
add
cmp
add
pop
call
cmpsl
call
cmp
jecxz
or
outsb
mov
mov
lock
sbb
adc
ds
inc
mov
jmp
xchg
adc
pop
jne
mov
xlat
jne
jg
and
fcoml
jne
cmp
jg
lret
movsb
cli
pop
adc
shlb
cltd
xor
sub
add
jg
xchg
test
add
add
js
insb
stos
stos
out
add
adc
pop
dec
push
cmovs
gs
jno
add
scas
fmuls
fadds
xor
fsub
in
adc
cs
xchg
mov
out
mov
loopne
test
xchg
xchg
test
add
cmpsb
xor
out
push
adcl
addr16
jmp
icebp
cmpsb
jl
mov
add
and
int
sti
dec
rcrb
mov
cmpsb
les
mov
jge
lods
popf
ret
dec
jne
int3
lock
adc
hlt
lods
movsb
fcom
test
stc
sbb
mov
pop
repnz
sbb
add
push
dec
and
add
lock
fwait
push
pop
shll
imulb
jb
sub
inc
and
cmp
push
mov
and
in
call
sbb
inc
mov
ss
repnz
sbb
nop
out
jmp
std
les
int3
out
cmpsl
sbb
mov
jo
jge
add
fildll
cs
flds
xchg
imul
fmull
lock
jg
aaa
add
cmpb
jle
and
fs
jne
fadds
pop
ss
add
or
xor
jp
xchg
mov
cmp
xchg
mov
mov
mov
int3
fwait
test
cmpsb
push
mov
jne
cmpsb
and
sarl
xchg
imul
add
daa
fcmovnb
imul
add
fsubrl
fidivrs
inc
lcall
das
pop
or
pusha
xor
or
push
out
dec
jb
push
mov
add
and
in
jno
cmpsb
mov
fs
jo
lret
cs
pop
jge
repnz
fildl
mov
jge
dec
frstor
mov
xorb
push
call
lods
add
pop
sub
or
inc
adc
ljmp
inc
add
data16
xor
or
fdivrs
in
or
orl
sbb
add
pop
inc
or
xor
inc
add
and
test
cmp
xor
push
inc
ds
inc
ja
jne
packssdw
sbb
mov
or
add
push
or
add
adc
dec
push
mov
aaa
inc
push
sbb
add
push
scas
sbb
pusha
xor
into
inc
lods
mov
cmpsl
je
ret
xchg
or
int
pop
xor
stos
mov
push
call
inc
sbb
testb
pop
add
sbb
outsl
push
cmp
ret
jne
mov
imul
daa
fnstsw
sbb
fcmovne
pop
jb
sbb
fwait
jmp
sbb
mov
lret
adc
fisttpll
adc
out
les
push
xchg
dec
or
ficoml
push
arpl
in
mov
jmp
inc
mov
sub
jb
or
je
or
xchg
jmp
add
xor
cltd
pop
clc
mov
ljmp
lret
jmp
or
leave
pop
mov
cltd
pop
jnp
loope
mov
addl
dec
in
mov
add
adc
leave
movsl
lods
in
loope
sbb
dec
push
mov
jecxz
push
inc
push
adc
jl
sbb
ja
test
mov
nop
or
lcall
mov
lods
sbb
or
or
cmp
lock
inc
inc
movl
adc
cld
inc
lock
in
mov
inc
repnz
or
push
sub
pop
add
xchg
push
pop
and
xor
in
faddl
xchg
popa
loope
dec
call
ret
es
call
out
sbb
aas
mov
imul
jbe
add
xor
push
jl
je
xchg
jne
lock
adc
adc
popf
mov
add
mov
cmp
rclb
insb
incl
mov
inc
jl
mov
mov
insb
sar
data16
out
in
xadd
bound
mov
es
or
popa
or
fcmovu
jbe
loopne
sar
and
add
subl
loope
les
sbb
pop
xchg
outsl
ret
hlt
add
fsubrs
push
add
jno
mov
and
out
xor
and
push
mov
dec
inc
push
jecxz
mov
clc
nop
fs
out
ret
or
insl
mov
inc
add
sub
mov
jmp
sbb
fwait
mov
sbb
je
scas
sbb
add
hlt
jmp
notl
mov
orb
sbb
test
mov
pop
jg
inc
jg
lods
add
les
push
jmp
insl
cmovp
shll
jmp
mov
jmp
iret
adc
ret
add
push
mov
sbb
jmp
and
xor
jmp
in
push
push
push
leave
in
jle
pop
mov
orb
cmpb
cmp
add
add
sub
fsubl
daa
and
jecxz
cmp
push
sub
pop
test
cmp
lea
test
mov
popf
pop
adc
add
and
cmp
test
dec
cmp
and
imul
aaa
lahf
xor
cmp
sub
nop
cmpsb
dec
mov
xor
xor
ja
data16
xchg
test
les
mov
sub
imulb
in
mov
fidivrl
fsubrs
push
or
dec
not
pop
mov
push
jle
xchg
cld
dec
fadds
and
dec
add
popa
rorb
mov
fwait
daa
test
sbb
lock
test
lahf
dec
cmp
mov
sub
popf
sarb
mov
xor
push
lea
int3
xchg
push
out
stos
ja
movsb
pcmpgtd
je
out
or
cs
or
cmp
pop
mov
or
inc
loope
jo
jmp
je
adc
inc
and
xor
jae
dec
mov
pop
push
cld
hlt
pushf
pop
lock
sub
cwtl
loope
test
inc
xor
daa
sbb
pop
push
push
mov
arpl
sub
bound
addr16
cwtl
adc
das
in
sbb
xchg
xor
insb
pop
icebp
sub
fildl
or
sub
pop
repnz
push
dec
test
adc
or
add
les
popa
les
sar
imul
sub
mov
ja
add
jnp
and
ret
sahf
cmc
mov
inc
mov
add
inc
or
pop
cmpb
jge
lahf
outsl
sub
pushf
sbb
or
test
xchg
in
sub
xchg
dec
xlat
xor
gs
pop
scas
int3
lods
or
cmp
jbe
jne
sbb
xor
mov
jmp
into
es
or
cwtl
inc
fscale
or
pop
lods
mov
pop
xchg
sbb
shll
aas
xlat
pop
push
push
rcl
lret
adc
sub
ficoms
jnp
rorb
pushf
and
lea
adc
jb
jbe
and
mov
mov
jmp
jmp
loopne
icebp
sub
cld
add
inc
mov
mov
mov
aad
mov
lds
insb
ficompl
inc
or
jge
clc
js
insl
jne
in
push
loopne
xchg
dec
loopne
ret
lea
xor
add
and
int3
mov
insl
add
push
mov
push
adc
xor
sbb
les
movsb
rclb
push
xchg
pop
enter
push
push
cmp
je
jmp
push
cs
aas
xor
inc
xor
lcall
and
add
push
imul
mov
push
xchg
inc
adc
mov
push
add
aaa
nop
cmpsb
adc
pop
lcall
in
insl
iret
lret
mov
es
adc
je
sub
inc
faddl
sbb
xor
lock
inc
or
or
stos
xchg
adc
test
jne
inc
ret
in
movsl
add
int3
xchg
fs
and
pop
dec
decb
push
add
jl
mov
shlb
jl
cs
push
push
enter
shrb
mov
cmp
clc
mov
outsb
and
xchg
out
roll
sub
stc
mov
mov
int
xchg
add
sbb
nop
rcl
adc
cmpb
cltd
or
cmp
int3
aad
cmp
sbb
out
mov
gs
int3
cld
std
rolb
ss
ljmp
jae
jae
inc
loopne
fdivrl
mov
xor
in
inc
data16
hlt
xor
lock
cmp
shl
xchg
jnp
adc
test
push
push
jp
cmp
mov
push
xchg
mov
and
outsl
scas
mov
mov
ljmp
inc
adc
dec
andb
jp
fwait
add
cmp
lods
int3
xor
cmp
bound
mov
leave
inc
adc
push
inc
inc
sub
mov
mov
cwtl
push
sbb
movb
inc
pusha
imul
es
in
pop
inc
pushf
pushf
adc
dec
orl
aaa
or
rorl
xor
das
xchg
ret
push
stc
and
inc
adc
inc
inc
cltd
push
push
daa
push
insb
incl
cmp
mov
loop
adc
push
lahf
jge
mov
shlb
sbb
adc
jmp
jmp
mov
cmpl
jnp
mov
jl
pcmpeqw
cmp
cmpsl
jle
mov
fucomip
shl
or
es
push
rolb
sub
adc
jne
pop
aam
clc
xor
jae
popf
arpl
mov
xchg
movsb
mov
cmp
pop
sbb
cmp
xor
popa
and
stos
sub
mov
adc
xchg
ret
or
fstpt
iret
sub
div
adc
push
adc
mov
cmpb
adc
xchg
pusha
pusha
adc
add
xchg
aad
or
scas
xchg
mov
add
adc
aas
mov
sti
xchg
or
sub
and
loope
add
jns
dec
or
inc
data16
add
add
xchg
add
add
aad
adc
add
je
xor
jo
cmp
leave
cmp
rcrb
daa
inc
shll
mov
or
test
in
mov
inc
pop
jg
mov
scas
lock
jbe
das
adc
jl
mov
and
xor
inc
insb
or
inc
inc
inc
jge
shlb
sub
jg
lock
mov
mov
lock
ljmp
lods
fstpt
jl
jne
sbb
mov
xor
push
jmp
nop
dec
or
mov
mov
push
pop
jmp
insb
or
fildll
push
in
push
push
mov
dec
cmp
lock
push
mov
jg
xchg
or
or
push
fwait
es
jns
es
xor
mov
jge
pop
mov
fdivrs
scas
pop
shrb
sub
aaa
push
daa
ja
movl
xor
add
push
shrl
shll
mov
and
xor
adc
int3
and
ja
pop
aam
mov
adc
ljmp
test
adc
nop
addr16
jnp
push
adc
and
dec
jno
and
mov
xchg
scas
imul
add
inc
or
mov
insl
das
cmp
std
push
cs
xor
shrb
add
jbe
pop
in
adc
jmp
xchg
push
outsl
sbb
sub
andb
aas
add
mov
sahf
jge
hlt
inc
ja
add
fs
inc
cmp
addb
jl
js
jge
xchg
or
cmp
notl
adc
addb
xor
lock
push
add
scas
or
iret
clc
sub
aaa
inc
inc
add
dec
in
or
sub
test
cmp
jbe
iret
or
bound
add
inc
mov
movsl
add
adc
pusha
repnz
shrl
xchg
popa
push
xor
stos
stos
test
je
lcall
and
jne
pop
hlt
loopne
xchg
jl
aad
pop
enter
jae
and
outsb
jmp
in
pop
clc
insl
fmul
pop
aad
loope
dec
lods
mov
inc
or
push
mov
fwait
cld
call
fidivs
push
mov
sub
jb
inc
mov
cs
push
cld
inc
sti
stos
sbb
lret
jne
mov
out
or
sub
or
pop
dec
ret
xlat
clc
pop
ja
pop
or
inc
scas
je
sbb
out
push
movl
dec
add
jns
mov
mov
dec
data16
enter
outsl
push
faddl
mov
or
arpl
mov
mov
std
add
test
pusha
lds
in
or
mov
iret
push
cmp
mov
or
mov
in
ret
mov
popa
mov
out
push
mov
inc
inc
cmp
pop
jne
lea
mov
sub
loope
movsl
clc
imul
pop
xchg
jnp
rorl
adc
inc
push
dec
jne
jmp
push
loop
fsubrs
cmp
and
pop
arpl
push
mov
sub
dec
jne
push
enter
jne
je
test
add
ret
push
xor
xchg
or
outsb
sbb
pop
add
jmp
sbb
bound
fcompl
mov
mov
movsb
inc
call
sbb
mov
repnz
jb
scas
cmp
push
mov
jb
in
insl
das
xchg
out
leave
mov
pop
push
cwtl
xor
fcoml
mov
test
mov
and
fcomp
mov
jge
cmp
jle
fidivl
leave
add
sub
mov
cmp
xchg
sbb
int3
mov
and
add
or
xor
fidivl
in
test
dec
sahf
mov
aas
ret
adc
ds
shl
inc
clc
mov
add
push
cld
push
jbe
push
hlt
mov
das
adc
test
je
push
add
into
fld
mov
sbb
jg
and
das
fs
outsl
scas
insl
add
fs
mov
adc
insl
pop
lods
xlat
mov
inc
push
or
dec
pop
mov
adc
int3
pop
jbe
jp
push
cmp
out
in
pop
mov
shlb
jne
imul
mov
xchg
fcomi
inc
or
je
xchg
xchg
or
lea
jmp
fisubrl
fisttpll
daa
mov
nop
inc
jecxz
lret
outsb
xchg
mov
fwait
hlt
xchg
jge
adcb
fsubrs
push
incl
pop
xor
dec
add
sbb
outsb
test
pop
dec
add
sahf
add
pop
clc
sub
test
test
xorl
and
testl
fsubrp
pop
mov
fcompl
jae
mov
cmp
leave
cld
push
in
icebp
mov
dec
es
in
push
fstps
and
repz
add
stos
adc
dec
pop
cltd
test
or
dec
in
lods
inc
fcoml
filds
lret
lods
mov
pop
outsl
mov
sbb
out
and
sbb
inc
repz
xlat
sbb
enter
adc
mov
push
insl
imul
xor
or
mov
sahf
lock
sub
in
imul
gs
and
mov
inc
and
cmp
xchg
lock
inc
in
pop
dec
ret
xchg
sub
add
cmp
cmpsl
mov
lock
mov
push
or
in
in
clc
mov
sbb
inc
cmp
jne
cli
and
test
dec
test
jle
sub
pusha
mov
nop
jo
fistl
inc
jmp
es
lret
mov
sbb
sbb
int
dec
pusha
mov
in
mov
add
add
ljmp
out
loopne
push
into
or
adc
push
fstps
pop
mov
inc
or
mov
inc
test
xor
add
cmpsl
test
lds
xchg
jb
mov
mov
push
jg
pop
and
inc
or
add
pusha
xlat
test
push
test
adc
dec
lods
or
das
pop
hlt
add
lock
sub
movl
sar
add
loopne
outsb
loope
in
or
adc
sbb
jbe
jb
and
pop
dec
addb
imul
iret
dec
sahf
sub
dec
or
mov
inc
pop
pop
or
adc
cmp
out
mov
mov
pop
enter
mov
sbb
pop
sbb
adc
pop
adc
clc
mov
jnp
or
and
jl
iret
enter
add
sub
inc
stc
int
test
loopne
seta
mov
lea
into
loope
cld
int3
lock
adc
xor
sbb
data16
in
aam
orb
das
int
cld
mov
xchg
sub
lds
xchg
ret
incl
adc
sub
fnstenv
testb
inc
decl
cmpl
pop
imul
add
roll
adc
ja
sbb
clc
pop
mov
orb
inc
or
add
mov
inc
cmp
mov
rolb
xchg
dec
movsb
dec
inc
cld
jo
je
mov
pop
fs
push
ja
dec
or
dec
jg
xchg
out
xor
int
enter
or
jmp
or
sbb
adc
pushf
mov
xor
cmp
xor
cmpsl
mov
add
or
and
inc
or
loope
or
xor
enter
cmp
adc
fcmovnbe
sbb
jne
cmp
jns
mov
loope
push
fnstcw
andb
jle
mov
xor
dec
loop
jge
and
insl
rclb
daa
jmp
xor
popf
arpl
push
roll
mov
ret
int3
mov
lahf
pop
pop
fmull
lret
int
repz
rolb
faddl
cmp
adc
insl
push
pusha
loopne
mov
fsubrs
iret
jnp
enter
push
pop
mov
cmp
test
aam
outsb
jo
sahf
out
cwtl
pop
dec
nop
movsb
mov
subb
push
adc
cmp
push
jae
imul
jle
lods
jnp
inc
ds
scas
inc
push
xor
mov
mov
jl
mov
adc
sbb
in
repnz
mov
adc
or
or
add
leave
jnp
inc
mov
xor
fldl
inc
clc
push
jo
hlt
mov
inc
lock
in
inc
mov
call
add
lods
inc
faddl
mov
out
aam
shrb
add
out
popf
int3
push
mov
sbb
repnz
mov
test
cs
mov
cmpsl
xlat
mov
cwtl
out
out
fidivs
out
test
mov
movsb
pop
test
leave
xor
mov
enter
jbe
leave
xor
popf
push
mov
lahf
mov
lock
fiaddl
push
sarl
int3
mov
mov
dec
outsl
sbb
inc
and
and
fnstsw
cmp
adc
xchg
add
adc
add
int3
cmp
dec
xor
orb
jge
sub
and
add
push
or
in
addb
and
xchg
inc
push
jb
nop
test
xor
adc
xchg
les
mov
enter
out
adc
shlb
and
shl
daa
jecxz
jg
xor
jecxz
jl
cmp
addb
push
sub
jl
pop
pop
or
in
clc
or
xchg
out
xchg
push
or
js
push
addr16
mov
jge
jge
enter
add
test
aaa
ss
adc
imul
ret
dec
rorb
fcoms
iret
xchg
push
fs
call
adc
leave
cmp
xor
inc
mov
shll
sbb
jg
call
addr16
ss
adcl
test
pop
jne
adc
xchg
dec
enter
and
inc
jmp
nop
or
pop
leave
xchg
and
es
clc
jecxz
ljmp
clc
lea
jge
pop
jg
dec
push
cmc
sbb
adc
mov
cmp
clc
jo
sub
xlat
ret
dec
addl
jbe
add
jns
adc
cld
jb
and
orb
jecxz
ljmp
or
add
adc
movsb
mov
and
sbb
adc
jmp
or
or
cltd
clc
add
out
inc
xchg
adc
adc
adc
pop
adcb
push
sbbb
mov
cld
sbb
movsb
filds
std
push
orl
repnz
ret
or
in
fldl
mov
add
mov
aam
mov
test
test
lret
sub
fs
mov
cltd
fs
inc
mov
xchg
dec
push
rcrb
dec
les
xchg
dec
es
push
lret
pushf
js
out
xchg
lret
fcoms
xchg
lret
nop
faddl
gs
mov
lret
out
jmp
out
xchg
shr
inc
ljmp
mov
hlt
lea
out
jmp
out
clc
mov
enter
je
push
into
dec
pusha
pop
inc
push
inc
push
jns
pop
daa
dec
add
cld
jge
repnz
je
fs
jne
das
dec
jne
mov
pop
mov
imul
in
and
add
jb
insl
jo
repnz
xor
jb
insl
push
je
pop
push
cmp
sub
sahf
and
bound
popf
sbb
jae
pop
inc
jns
add
pop
outsl
xchg
xchg
out
cld
push
xchg
and
in
cld
add
ljmp
gs
add
and
pop
add
adc
inc
fistpll
push
sbbb
out
cltd
jnp
enter
mov
adc
push
mov
sub
mov
mov
add
pop
inc
push
pop
push
fs
cwtl
sarl
js
pusha
or
jns
lret
iret
int3
shrb
inc
cld
pop
lods
xchg
xchg
lock
adc
dec
dec
inc
mov
nop
inc
testb
adc
test
or
jae
cmpsb
clc
cmc
das
jo
adc
adc
add
jo
or
test
mov
and
sbb
nop
add
xchg
inc
push
in
hlt
hlt
hlt
int3
out
faddp
int3
int
fiaddl
in
cmpsb
jg
sahf
mov
add
lret
mov
jg
adc
aaa
stc
push
mov
js
push
icebp
pop
test
enter
out
sti
cmpsb
inc
dec
test
jbe
gs
adc
cmp
push
xor
adc
or
jbe
imul
pop
inc
push
push
sub
pop
sub
xchg
xchg
repnz
adcl
mov
mov
jg
nop
push
sbb
adc
pop
mov
push
hlt
hlt
ficoms
or
and
sbb
repz
mov
push
mov
pop
mov
jb
loope
arpl
and
push
and
xchg
outsb
adc
js
push
and
in
test
test
dec
loope
and
push
iret
sbb
mov
in
inc
jb
add
daa
xchg
ret
iret
push
cmc
push
cmc
fiadds
insl
jo
sbbb
mov
inc
sub
nop
adc
and
roll
push
outsb
divb
pop
mov
movsl
int
ds
mov
push
sub
or
fadd
out
sbb
divb
outsl
bound
inc
fs
mov
repnz
pop
inc
xor
in
idivb
push
mov
jmp
in
adc
test
jno
cmp
dec
outsb
es
dec
push
jns
es
mov
popf
nop
lock
cli
in
add
pusha
sbb
testl
loopne
sub
cmp
test
clc
in
pushf
add
clc
test
inc
push
and
mov
add
jg
rclb
add
fwait
addl
jbe
clc
sub
or
pop
sbb
ljmp
movl
dec
push
sbb
fs
push
nop
or
imul
add
enter
cwtl
adc
mov
inc
jo
xchg
iret
pop
inc
dec
pop
out
mov
mov
pop
dec
mov
mov
repz
ds
lock
hlt
dec
ds
in
mov
cmc
xchg
cmp
cld
call
insb
adc
popl
inc
or
xor
sarb
jae
xor
enter
mov
ja
ror
int3
or
imul
jae
fwait
out
add
mov
movb
nop
sbbl
mov
or
out
inc
sub
fdivs
call
int3
sub
cltd
repnz
push
add
push
pusha
roll
in
push
aad
jmp
adc
jmp
test
addr16
orb
adc
std
adc
or
and
sub
cmp
xchg
mov
jmp
inc
in
and
jg
push
ja
mov
jne
enter
xlat
xor
xchg
inc
cmpb
cmp
cmp
mov
push
popa
pop
out
shlb
push
insl
cmp
roll
and
test
mov
add
loop
xchg
orl
imul
lahf
ret
xchg
daa
push
jge
idivl
incl
ja
popf
insb
jnp
and
pushf
xchg
jne
mov
mov
pushf
xchg
out
lods
mov
or
les
sbbb
ljmp
pop
in
pop
mov
call
pop
test
pop
or
in
ret
pop
ret
outsb
push
add
pop
and
add
pandn
jne
les
je
dec
orb
xchg
lea
and
movzwl
push
lcall
rcrl
imul
lea
or
or
inc
add
aas
cmp
clc
fistpl
out
mov
adcl
fs
dec
inc
das
sahf
and
sbb
lea
push
pop
in
repz
dec
jnp
dec
pop
pusha
out
sarb
subb
in
test
data16
fsubl
fsts
jl
repnz
jge
mov
cld
xlat
xor
ja
sbb
adc
or
loopne
loopne
bound
jne
jmp
mov
inc
sub
or
add
jmp
xor
div
and
fsubr
and
movsl
hlt
inc
cmpsl
add
imul
or
push
add
and
or
pop
jb
mov
push
add
shll
je
ret
aas
jns
and
clc
push
inc
es
fimull
call
sub
push
push
pop
in
or
adc
push
inc
loopne
xor
enter
in
and
loopne
std
dec
and
or
xchg
cmpl
jae
adc
pop
or
push
dec
inc
test
and
shr
in
cmp
lds
and
in
push
mov
aad
sbb
xchg
sub
jmp
push
fstpt
out
cmpsl
cmpl
push
movsb
fiaddl
add
call
decl
push
xchg
cmpsl
sbb
adc
jns
pop
mov
mov
jbe
je
push
and
dec
incl
adc
cmp
je
add
sbb
ljmp
dec
add
and
repz
inc
out
js
sub
mov
inc
scas
sbb
in
mov
shrb
or
pop
adc
lock
lock
je
pop
jne
push
mov
insl
inc
fwait
inc
add
or
or
test
push
dec
or
cmp
aad
mov
outsl
cltd
int
inc
xchg
and
mov
orb
hlt
js
call
inc
movsb
push
add
movsl
pusha
out
push
mov
mov
repnz
add
sub
mov
sarb
or
adc
xchg
fnstenv
inc
cmp
sub
repz
gs
cwtl
outsb
xchg
out
imulb
inc
mov
and
lret
iret
jnp
push
in
std
or
inc
stos
or
mov
xor
fisttps
hlt
push
daa
mov
leave
and
xor
xor
frstor
or
clc
out
add
bnd
mov
insb
fidivl
push
ficompl
rolb
arpl
cmp
adc
jmp
and
enter
add
add
add
pop
ja
pop
dec
mov
push
js
push
jecxz
aam
aaa
and
loope
jl
sub
jmp
cld
xor
and
push
adc
insb
lret
je
inc
jmp
testb
jne
mov
imul
lcall
push
hlt
or
stos
sbb
sbb
aam
mov
pop
lock
inc
adc
sarl
rorl
pushf
sbb
dec
sbb
iret
mov
idivl
out
inc
or
fs
fisubl
and
insb
outsb
xchg
bound
mov
aas
jmp
imul
pusha
or
and
cmp
cmp
test
sub
add
enter
push
xor
in
inc
dec
xor
dec
js
push
sub
add
cmove
jb
lret
movhps
stc
push
adc
lods
icebp
push
push
mov
mov
push
cmp
into
test
jbe
jae
ret
sbb
ret
push
push
pop
add
pop
pop
add
add
sub
movsb
add
pop
hlt
mov
inc
push
lds
push
scas
or
repnz
xlat
sbb
rorl
push
sti
mov
sbb
or
imul
lock
lret
fstp
orb
cmp
adc
pop
push
ss
stc
bound
cmp
mov
add
sahf
out
sahf
adc
mov
repz
and
cmp
insl
pop
daa
in
decb
es
cmpb
mov
inc
cmpsl
sbb
xlat
pop
in
cmp
loopne
and
add
in
add
push
and
insb
ljmp
xor
adc
clc
frstor
xchg
sbb
sbb
and
jb
push
sbb
cmp
leave
pop
aas
cmc
and
shlb
pusha
nop
xchg
call
xchg
add
out
inc
xor
jp
add
lret
cmpl
hlt
divb
mov
add
add
adc
roll
dec
and
fwait
xchg
dec
insb
jmp
mov
sbb
sti
pop
or
das
ftst
fwait
inc
out
iret
inc
push
mov
clc
push
and
dec
jo
xor
cld
pop
setns
or
sti
std
jg
sub
xor
repnz
clc
fcomip
lea
ret
sub
js
mov
mov
or
xchg
jp
add
pop
mov
cli
sarl
call
cmpsl
outsb
push
mov
mov
or
push
mov
mov
popa
xchg
push
or
mov
jmp
lret
adc
in
cmp
and
fimuls
pusha
das
inc
and
aaa
inc
push
jle
cs
cli
movsl
push
mov
push
add
je
sub
rcll
data16
pop
lods
or
xor
push
sbb
pop
adc
or
nop
mov
cmovno
arpl
aaa
or
repz
out
xchg
mov
shl
lahf
out
ds
cmp
or
push
insb
fiadds
jnp
or
jns
mov
push
pop
jg
call
imul
je
aas
sub
fwait
out
movswl
sbb
aam
xor
pushf
push
sar
cmp
pop
jnp
cwtl
loope
and
push
adc
push
push
stc
push
sbb
mov
and
shll
rol
mov
xor
enter
mov
xor
cwtl
je
dec
mov
adc
outsl
gs
idivl
test
push
push
inc
arpl
fisubl
lret
mov
push
pop
scas
or
cmp
repz
push
aas
bound
jmp
jb
in
add
sahf
out
mov
add
outsl
push
jno
pop
fldcw
fst
ds
and
push
inc
push
sub
and
mov
mov
pop
imul
sub
sbb
femms
xor
sbb
js
sbb
jb
aaa
and
xlat
mov
push
notl
and
jmp
dec
jmp
or
sbb
mov
addr16
jb
mov
add
jle
or
add
mov
rcll
xor
outsb
pop
or
mov
jmp
rcpps
sub
in
xsave
fadds
cmp
mov
out
and
sbb
fldt
jb
push
jo
pop
push
je
leave
sbbl
lret
adc
leave
add
arpl
loopne
fisttpll
adc
in
in
jo
clc
or
add
or
jnp
inc
adc
pop
push
and
xor
mov
jmp
jo
in
jp
xchg
out
in
mov
mov
sub
cmp
adc
adcb
pop
jmp
pusha
xchg
pop
add
adc
adcb
adc
adc
out
cmp
or
add
sub
loop
cmc
push
xadd
jns
adc
and
sbbl
inc
mov
and
dec
push
call
mov
adc
and
mov
adc
push
adc
sahf
in
flds
repz
add
mov
pop
adc
lahf
imul
mov
dec
xor
xlat
inc
inc
adc
test
stos
add
andb
adc
call
sbb
sbb
mov
mov
inc
xchg
add
and
fucomp
pop
push
bound
aaa
cltd
jne
stc
sub
shlb
sbb
int3
and
inc
pop
movl
mov
mov
and
push
adc
bound
lret
hlt
loope
mov
lock
sub
dec
pop
outsb
idivb
xchg
lea
cmp
or
imul
jmp
dec
call
addb
ss
xor
in
mov
pusha
jns
int3
xor
jae
jno
xchg
fldl
enter
xabort
sub
addr16
and
call
xor
subl
sbb
outsb
ficoml
xor
call
sbb
ja
adc
add
icebp
adc
test
enter
lret
sti
sahf
out
push
push
bound
out
fdivr
push
pop
lods
je
iret
repz
xor
cmp
repz
pop
outsl
or
movsb
clc
lock
adc
daa
push
dec
jb
push
cmp
ss
lds
mov
xor
or
xor
xchg
fisttpl
and
add
sub
push
rolb
mov
and
mov
and
push
or
push
add
cmp
pusha
test
sbb
adc
jl
xchg
and
xchg
mov
test
sbb
mov
int3
ljmp
pop
adc
aas
push
mov
repz
gs
xchg
push
fwait
sub
mov
xchg
arpl
inc
and
pop
movsb
sub
mov
push
movsl
jmp
and
mov
mov
pop
daa
adc
add
inc
out
cmp
jmp
loope
sbb
imul
inc
test
adc
fildll
jmpw
pop
lcall
scas
inc
mov
negb
and
jb
inc
adc
xor
testb
loope
xchg
mov
xchg
pop
movsl
dec
fadds
jg
add
addr16
sbb
nop
sub
mov
or
adc
xor
cmp
push
mov
jns
mov
sbb
orl
and
or
mov
or
popf
jns
rolb
das
add
jp
cmp
mov
push
cmp
iret
repz
jne
lahf
mov
inc
fnsetpm(287
jnp
sbb
sbb
sahf
call
adc
sub
push
sub
sbb
or
push
rcr
xchg
sbb
sbb
and
flds
or
inc
cmp
fstp
imul
and
mov
mul
sti
push
incl
pusha
dec
mov
inc
daa
add
mov
cli
xorl
rcll
jmp
das
sbb
add
seta
fistps
pop
hlt
repz
jns
add
push
sub
fstl
inc
jle
rolb
lea
iret
repz
movsl
mov
push
mov
int
sbb
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
inc
movb
add
rorb
aas
jmp
cmp
aam
je
cmpsb
xor
mov
mov
add
sub
neg
ret
push
jb
sbb
int
clc
push
add
data16
jmp
addr16
or
fstpl
dec
ds
mov
add
daa
aam
popf
rorl
loopne
rolb
mov
popa
mov
and
mov
pop
leave
stos
sbb
jge
xchg
push
add
test
sub
or
pop
loopne
inc
push
add
in
sub
push
push
out
sahf
out
xchg
jl
ret
and
fdivp
fsubl
daa
stc
push
and
cmp
push
jns
mov
xchg
dec
mov
clc
adc
add
inc
filds
adc
flds
add
imul
rorl
mov
adc
cmpsb
ffree
cmp
fildl
sub
pop
push
loopne
push
xor
std
inc
sub
insb
adc
inc
imul
pop
aaa
fcomps
mull
mov
adc
or
andb
sarl
mov
adc
and
and
jge
out
arpl
and
mov
adc
mov
push
fiaddl
add
repz
pop
es
loope
enter
sbb
add
sahf
xchg
test
and
sbb
inc
imul
inc
add
sub
sarb
daa
mov
outsl
popa
inc
sub
ds
adc
push
gs
pop
cmp
push
adc
aam
mov
sub
adc
jmp
push
or
mulb
fstpt
daa
lock
fldt
daa
cmp
bound
and
imul
adc
cs
mov
daa
push
push
push
jnp
movsl
and
stos
xor
fstp
aas
out
fs
fisttpl
sbbl
dec
mov
jnp
and
gs
and
fildll
sub
sub
lods
inc
xor
and
shlb
add
pop
add
adc
inc
into
loopne
aad
es
inc
push
pop
dec
sub
outsb
inc
jb
xor
aam
loopne
mov
fs
add
pusha
inc
mov
jecxz
adc
xlat
jl
sbb
xchg
adc
fcomip
hlt
push
and
inc
push
dec
insl
out
mov
push
lock
mov
jbe
pop
in
enter
daa
dec
push
enter
hlt
daa
scas
es
es
andl
push
ljmp
and
and
into
fdivp
je
sahf
xor
pop
dec
pop
pop
adc
iret
je
mov
add
pop
sbb
pop
fisttpl
dec
pop
jns
dec
dec
lahf
inc
adc
or
sub
lahf
push
mov
or
lods
lahf
sbb
sub
dec
adc
or
sub
mov
rorb
inc
mov
out
xchg
test
sub
pop
subl
scas
cmp
ret
inc
rcrl
pop
daa
ljmp
push
sub
mov
mov
outsl
push
adc
cmp
fsubrl
dec
leave
jns
dec
jns
push
test
sbb
and
pop
dec
pop
clc
pop
dec
adc
sub
sub
inc
or
repnz
in
xchg
and
push
in
and
dec
sub
scas
pusha
rolb
insl
iret
push
enter
push
fildll
dec
and
push
inc
jb
cmp
sub
sub
xchg
push
add
jge
sub
dec
addl
mov
push
cs
fs
cmp
leave
jbe
cwtl
test
das
mov
mov
roll
jl
out
out
push
or
and
enter
imul
lcall
jl
les
frstpm(287
mov
and
sbb
pop
out
sub
in
pop
sbb
mov
les
push
insl
mov
mov
xorl
push
inc
sbb
jae
nop
and
jecxz
inc
xchg
push
mov
pop
cld
inc
movsb
cmp
into
pop
pusha
dec
xor
and
imul
cmp
scas
lret
push
call
lock
and
inc
daa
fildl
and
movsb
sub
push
mov
ror
repnz
cmp
add
mov
cmp
mov
orl
lods
mov
xchg
pusha
xor
dec
pop
int3
inc
popa
test
add
push
or
orb
xchg
xchg
movb
lahf
outsl
nop
or
cmpl
addl
popf
push
mov
lods
mov
mov
lcall
movsb
clc
mov
add
xor
add
inc
fisubrl
ds
es
lock
or
add
in
test
addl
inc
and
or
sub
mov
dec
inc
inc
adc
adc
add
dec
xchg
add
add
cmp
xlat
jg
adcl
cmp
pusha
xchg
jno
xor
xchg
arpl
cmp
es
adc
cmp
sbbl
mov
dec
and
lods
in
cmp
or
and
nop
lds
adc
push
adc
mov
cmpb
or
xor
and
lret
mov
push
inc
mov
and
pusha
xor
xor
xor
sti
and
fwait
cmp
push
test
icebp
push
out
lcall
jnp
repz
pushf
mov
push
iret
jae
ds
ss
pop
and
daa
xor
jae
xor
pushf
sub
add
and
cs
cld
sarb
mov
fidivs
rcr
mov
jnp
xor
or
clc
mov
inc
aas
bound
cld
push
xchg
adc
in
xchg
imul
lock
sbb
add
sub
add
js
in
dec
cmp
mov
ds
and
xchg
into
push
or
loopne
xchg
jbe
rorl
pop
push
fsubl
xchg
jo
test
jae
test
aam
aaa
adc
jb
shlb
cs
dec
add
jns
call
hlt
bound
mov
sti
int
push
outsl
push
les
add
or
mov
cmp
mov
add
sarb
adc
xor
lock
iret
rcrl
loope
cmp
fwait
imulb
inc
cmp
push
add
repz
imul
in
ret
adc
push
mov
popa
push
adc
cmp
xchg
pop
in
mov
fnsave
and
pop
pop
jb
shrb
pusha
ja
test
mov
xchg
pop
pusha
aaa
shlb
popf
movsb
mov
nop
inc
mov
xchg
or
pushf
cwtl
mov
sbb
cwtl
xor
stos
xchg
jno
sub
xchg
jmp
adcl
jmp
pushf
inc
sub
and
fcoml
mov
and
addl
xchg
cmp
in
or
mov
or
mov
adc
mov
in
nop
pop
and
out
jmp
and
add
jne
js
jecxz
dec
cmpsb
nop
inc
test
cmp
pop
test
in
sbb
push
leave
stos
or
mov
sub
inc
jb
mov
mov
shlb
cmp
cltd
mov
in
fs
inc
dec
ret
pop
cmp
inc
dec
sbb
mov
add
cmpl
lds
adc
jns
push
push
push
fiadds
fbld
xor
push
es
sahf
out
imul
fstpt
repz
pop
je
mov
adc
lods
cmp
fs
dec
dec
or
sub
adc
fadds
fdivs
push
inc
dec
fadds
push
inc
push
push
adc
push
jb
cmp
cmp
in
in
test
adc
aaa
loopne
enter
movsbl
les
fdivs
and
aam
and
ror
jl
subb
jo
pop
xchg
imul
inc
sub
insb
enter
mov
xchg
cmpsl
sub
mov
dec
ds
pop
mov
ds
repz
and
aas
pop
aas
inc
out
cltd
mov
outsl
push
sbb
mov
clc
cmp
add
shrb
xor
xchg
mov
mov
aaa
aaa
mov
mov
int3
xorl
mov
mov
fadds
push
es
popa
test
test
adc
cwtl
movsb
aaa
movsb
aad
sbb
cmp
sbb
ret
imul
lods
or
outsl
aaa
cmp
mov
cltd
xor
cmp
sub
popa
shl
mov
add
mov
and
test
nop
add
sbb
lds
jno
das
mov
push
inc
popa
add
or
repz
test
gs
dec
sub
jl
inc
and
cmp
pusha
or
mov
push
push
or
test
push
fsubs
test
push
sub
jmp
jmp
dec
xor
js
dec
cmpsb
add
or
push
stos
ja
data16
rclb
call
or
adc
inc
inc
cli
dec
jp
out
out
dec
lret
ret
sub
cmp
push
dec
pop
lea
sub
cmp
outsb
inc
insl
inc
cs
xchg
or
add
adc
pop
int3
or
and
add
push
push
xor
jle
cmp
xor
mov
mov
pop
jmp
movw
push
out
testb
imul
inc
out
popa
arpl
xchg
jg
push
adc
mov
xchg
sub
faddl
dec
adc
sub
push
inc
aas
adc
sub
sub
fldt
push
dec
bound
dec
or
push
and
push
and
and
daa
xor
xor
lret
repnz
dec
xlat
and
dec
inc
and
fstpl
fwait
into
and
push
add
js
sub
adc
xchg
mov
ds
xchg
mov
gs
outsl
enter
cmp
adc
push
and
xorl
add
or
shl
inc
shll
mov
pop
mov
outsl
push
or
nop
mov
sub
xchg
mov
inc
nop
inc
or
inc
inc
add
movsl
pop
and
test
push
ss
jnp
mov
es
cmp
mov
test
adc
and
mov
add
lods
pop
add
push
aaa
shrl
decb
sbb
mov
fbld
je
xor
push
mov
cmpl
ja
jmp
and
sarl
push
xorb
sbb
cmp
jmp
outsb
cmc
lods
add
test
push
jp
aas
rolb
aaa
cli
inc
imul
cmp
adc
xchg
jmp
faddp
pop
add
xchg
and
out
fmull
push
pop
decb
jb
xchg
pop
cs
cmp
and
mov
or
addl
jns
add
mov
jmp
xchg
or
sbb
pop
inc
pop
arpl
push
ds
add
adc
xchg
mov
mov
add
mov
cmpsl
addr16
insb
test
int
jbe
mov
imul
insb
lea
adc
lahf
in
dec
xor
push
outsb
imul
inc
arpl
clc
stc
push
pushf
pop
add
inc
iret
jb
sbb
inc
jns
and
sbb
xchg
and
add
push
jb
adc
clc
cmp
cmp
bound
mov
out
int3
fidivs
mov
scas
xlat
mov
popf
add
add
mov
jbe
das
add
clc
fbstp
sbb
cmp
mov
outsb
inc
popa
cmpsl
int3
pop
mov
dec
sbb
jg
sti
or
sub
jl
inc
jl
mov
pop
iret
adc
test
push
or
dec
and
and
stc
dec
test
mov
mov
or
adc
inc
outsb
jns
xchg
sub
and
push
gs
pop
or
push
ret
jmp
and
ss
test
pop
pop
cltd
out
jp
into
pusha
or
adc
or
xchg
ljmp
cmp
xor
cmp
es
and
out
out
dec
push
cmp
js
add
dec
arpl
sbb
and
adc
pop
icebp
dec
stos
mov
into
popf
cld
pop
scas
or
clc
dec
pop
sub
jle
push
xchg
mov
xor
adc
cmp
push
js
out
sub
push
pop
dec
mulb
sbb
and
xchg
lods
test
add
push
lock
dec
xor
add
or
or
inc
popf
or
aam
fisttpl
mov
adc
mov
adc
sahf
decb
pop
push
or
mov
sahf
into
icebp
fwait
mov
bound
inc
hlt
jg
push
cli
pop
jp
mov
mov
cmp
jg
mov
push
dec
jne
arpl
and
add
ss
cmp
test
popa
std
and
or
or
and
xor
aaa
int3
sub
mov
sub
adc
gs
imul
dec
sbb
xor
xchg
jno
inc
fs
pop
lods
push
sub
pusha
arpl
xchg
movb
or
lods
pop
pop
mov
pop
cmp
mov
mov
cs
in
mov
mov
movsb
mov
addb
mov
ss
div
push
adc
sbb
xchg
jbe
addb
adc
inc
xlat
dec
call
inc
outsb
jg
inc
call
je
or
add
sub
pop
out
es
sbb
fcmovnbe
jge
in
cwtl
jne
jecxz
push
mov
push
push
imul
imul
sbb
mov
mov
loopne
or
das
dec
loopne
scas
add
push
mov
inc
jle
pushl
dec
jns
push
sbb
inc
lahf
es
shlb
xlat
fmull
push
or
loopne
scas
sti
sbb
xor
sub
adc
out
sbb
rclb
xchg
fcmovnu
cmp
or
mov
fcoml
arpl
mov
aaa
hlt
lods
mov
outsl
mov
jmp
and
clc
adcl
or
jne
inc
push
lea
repz
xchg
push
addr16
lea
js
cltd
dec
sbb
fabs
inc
push
push
fnstsw
push
push
mov
sbb
ss
push
lds
jge
jbe
je
repz
hlt
sahf
negl
movsl
stos
addr16
xorb
and
inc
inc
cmp
jle
mov
xchg
xor
decb
mov
push
leave
adc
mov
loop
add
add
icebp
and
xchg
dec
dec
push
sub
mov
lods
scas
sub
inc
mov
test
inc
cmp
add
call
sbb
xchg
add
daa
cmp
je
xorb
stos
inc
xor
dec
cmp
lcall
bound
pop
scas
jmp
mov
nop
adc
call
adc
jl
inc
xor
cld
adc
add
call
imull
dec
sub
adc
mov
sub
loop
cmp
adc
fildl
inc
hlt
idiv
inc
xchg
pop
xorl
decl
outsb
or
adc
bound
orl
inc
push
imul
mov
inc
js
and
shrb
sbb
sub
cwtl
inc
mov
js
repz
sbbb
fdivrs
jo
fcompl
mov
adc
add
jp
mov
rorb
or
or
aaa
aaa
mov
or
je
pcmpeqb
mov
rorb
or
lahf
push
add
push
add
dec
cld
aas
jne
andb
push
in
clc
arpl
insb
sbb
lods
and
fdivp
inc
push
clc
and
push
inc
jl
scas
andl
jle
sarl
inc
fistps
sarb
jg
daa
inc
and
mov
push
hlt
inc
test
dec
jo
out
lods
cmp
jg
ficomps
sbb
nop
add
imul
rorb
push
push
outsb
lock
icebp
or
fcmovne
shrl
jle
jg
sbb
ret
or
or
xchg
fisttpll
pop
mov
imul
push
pop
es
movsl
mov
jg
push
call
cmpsb
sti
inc
popf
jecxz
pop
add
and
stc
mov
adc
push
and
fstpt
sub
add
mov
pop
ja
testb
mov
repnz
cmp
data16
insb
and
shll
aad
call
and
dec
mov
icebp
insl
jg
xor
adc
sbb
sbb
pusha
push
add
mov
add
jae
and
sahf
push
jp
mov
adc
or
or
fcoms
in
movsl
dec
push
fadds
and
cmp
stc
adc
sub
cld
dec
add
sbb
and
fidivs
lds
push
ds
inc
xchg
inc
out
lock
nop
mov
add
rclb
ds
lahf
add
stc
jmp
pop
or
cmp
pop
mov
xor
inc
scas
sub
mov
imul
fsub
sub
jle
fwait
sbb
lods
push
pop
mov
rolb
add
xor
fistl
push
pop
mov
dec
inc
fadds
cmpsl
xor
fmuls
roll
lea
enter
movsb
and
sub
hlt
xor
subl
sbb
adc
mov
ljmp
pop
repz
repz
push
pushw
cmp
popf
or
xchg
xchg
inc
inc
aam
fdivl
xchg
lret
dec
clc
out
add
aas
mov
int
ja
jp
pop
sbb
sbb
sbb
and
sbb
inc
cmpsb
push
movsl
sbb
xor
jnp
out
jmp
rcl
int3
cwtl
pop
psrld
bound
insl
or
lods
push
popa
xor
dec
xor
mov
imul
test
in
xor
or
xor
mov
les
call
sbb
sbb
xor
clc
fs
mov
cwtl
sbb
cs
jo
and
xor
dec
mov
dec
cmp
inc
mov
mov
push
adc
icebp
push
outsl
sbb
cli
insl
rorl
jl
sbb
add
cmp
cltd
adc
call
popf
clc
xchg
pop
nop
daa
out
and
les
test
pop
lcall
push
nop
sahf
adc
ror
not
lcall
pop
xor
es
push
jl
jge
cmp
lret
xlat
push
adc
ds
test
les
out
inc
mov
shlb
test
cmp
adc
adc
movsb
fmuls
inc
add
addb
mov
ret
mov
call
dec
insb
fs
adc
ret
incl
and
loope
or
test
dec
dec
ljmp
sbb
dec
aas
sar
mov
mov
mov
dec
scas
sti
pop
test
loope
pop
sub
stc
leave
inc
ja
xor
clc
addl
popa
adc
lods
clc
cwtl
inc
dec
into
mov
adc
inc
ljmp
jb
add
add
push
inc
mov
dec
sbb
ja
cmpxchg
jg
mov
out
sub
fildl
mov
push
leave
nop
adcl
jg
inc
nop
inc
push
push
int
pop
sub
jl
inc
out
mov
xor
mov
inc
dec
jne
aas
lcall
stos
jne
xor
inc
add
fsubl
int
inc
jmp
add
int3
and
ret
rolb
in
add
pop
bound
aam
or
fadds
pop
cmpl
dec
shlb
nop
add
orb
push
jle
add
test
sbbl
popf
es
mov
sarb
loopne
rclb
insb
add
or
inc
in
jne
lret
aaa
pop
xor
out
cmp
pop
out
fcoms
add
insb
cld
pusha
add
inc
ds
jne
mov
fsubrs
xor
les
scas
jg
filds
dec
fisttps
cmpsb
aas
movw
mov
stc
dec
or
jbe
por
addr16
test
inc
jp
push
inc
pop
ret
add
js
inc
sub
loopne
sahf
jb
fdivrl
js
pusha
or
mov
mov
pop
mov
cmp
jmp
add
bound
cmp
add
cmpsl
or
daa
push
fcmovbe
pusha
inc
daa
adc
fadds
daa
mov
or
inc
cld
inc
inc
gs
add
lret
popa
pop
xchg
lods
pop
ja
xor
test
jbe
adc
cmpsl
imul
mov
add
sub
dec
std
adc
jg
repnz
test
ss
mov
add
adc
clc
lea
pop
cmp
data16
push
dec
ss
cld
mov
hlt
add
lea
cli
push
insl
sbb
push
cmp
jo
jge
enter
mov
fcoms
inc
pop
mov
mov
mov
sbb
dec
sahf
clc
fwait
clc
mov
sti
add
push
clc
cld
ds
mov
mov
cmp
inc
hlt
stos
sub
adcl
jne
lea
popa
mov
ds
xlat
sbb
enter
dec
fldenv
or
ret
xor
jmp
aas
or
mov
imul
or
fdivp
gs
ret
inc
or
and
or
pop
inc
daa
testl
shrb
jmp
cmp
and
cmpb
int
adc
add
pop
push
add
add
mov
cmp
jnp
aam
and
and
fsts
fsubs
jae
daa
sbb
repz
jl
inc
hlt
pop
and
das
les
mov
add
cld
xchg
movsb
add
or
and
xchg
es
jp
and
pop
or
loopne
sbb
pop
int
push
or
sub
add
into
cmp
pop
xor
insb
lock
ret
sarb
addr16
aad
jecxz
jne
test
push
jecxz
aaa
jle
dec
enter
add
inc
adc
sub
push
and
gs
xor
or
mov
sbb
loop
loop
xor
outsb
xchg
rolb
iret
arpl
or
pop
dec
jmp
jge
or
cltd
out
push
jge
scas
lds
xlat
xchg
mov
stc
add
inc
popl
insb
ljmp
call
scas
add
cmp
cmp
or
push
sbb
push
jl
sbb
pusha
in
sbb
push
push
test
ds
xacquire
push
adc
and
filds
mov
push
lret
xchg
fadds
push
push
clc
push
les
les
mov
daa
fiaddl
xchg
pop
mov
xchg
in
xchg
mov
inc
sbb
adc
pop
in
push
or
cmp
mov
pop
mov
push
dec
clc
in
or
jb
or
pop
jbe
loopne
push
shll
push
test
cmp
cmp
data16
mov
jns
mov
mov
or
ret
jno
lea
mov
mov
pop
mov
test
add
push
dec
mov
or
xchg
lock
dec
sub
lock
fs
add
mov
lock
cmp
sbb
mov
cmpl
xor
add
mov
mov
das
or
ja
xchg
ja
add
add
loop
inc
add
push
xorb
cmpb
movsl
mov
xor
jo
repz
sbb
push
adc
ja
inc
and
jne
decb
leave
add
mov
dec
dec
dec
mov
sub
cmp
dec
add
mov
jle
inc
out
and
fistl
jae
jne
mov
call
sbb
mov
adc
pushf
divb
inc
xor
bnd
push
dec
pop
sub
sbb
inc
gs
repnz
add
xor
dec
jo
dec
in
cmp
test
push
sub
enter
scas
xchg
xchg
xchg
enter
xchg
xchg
cwtl
cltd
enter
lcall
enter
or
addl
xchg
enter
enter
mov
enter
pop
imul
pop
pusha
imul
jo
mov
push
fs
dec
dec
lock
jns
jp
xchg
xchg
insl
mov
push
pop
pop
mov
lea
push
lahf
push
cmc
or
xchg
popf
adc
push
adc
negl
ret
cmpsl
jp
add
adc
inc
mov
inc
sub
jl
scas
adc
fsts
jno
push
push
nop
imul
push
aam
add
mov
pop
push
push
jb
jo
jb
jns
imul
imul
stos
inc
shlb
adc
imul
and
xchg
lret
test
ja
push
out
dec
ret
out
daa
mov
xchg
mov
pop
mov
sbbl
or
in
lock
mov
cli
add
dec
sti
and
xchg
aaa
outsb
fstpt
inc
add
and
fidivs
test
pushf
push
mov
cmp
pop
movsb
push
jo
push
fildl
inc
imul
mov
in
insl
mov
cltd
insb
mov
pop
jg
sbb
mov
cwtl
push
mov
call
aam
not
fs
fsubl
pusha
inc
mov
rep
inc
mov
inc
gs
mov
inc
orb
dec
bound
or
or
mov
lods
inc
push
iret
pop
xchg
out
add
cltd
sbb
insb
inc
fst
movsl
push
add
cmpsb
jge
xchg
addr16
orb
inc
jl
call
popa
sbb
outsl
push
or
sbb
and
inc
ret
adc
dec
or
inc
or
cmp
aas
or
adc
add
out
cmp
les
in
mov
outsb
call
and
add
std
add
clc
push
sbb
psllq
push
adc
pop
jp
sbb
lret
mov
jbe
in
inc
faddl
movsb
jl
dec
enter
js
or
cmpsl
mov
xlat
inc
xchg
push
jno
xor
mov
ja
and
mov
xor
scas
lock
fldenv
xor
and
subb
sub
xorb
jo
aas
mov
repnz
pop
loopne
dec
mov
dec
decl
jle
jl
push
into
xchg
mov
rcll
mov
shrb
xor
fdivrs
leave
cmp
or
jmp
rcrl
push
gs
xchg
mov
sbb
mov
jge
jne
push
adc
dec
mov
and
je
les
dec
mov
or
xor
lock
andl
fidivs
pop
in
in
aaa
push
int
and
movsb
call
in
jo
jae
cld
outsl
test
gs
in
lods
insl
in
or
or
cmp
jo
jmp
cmp
pop
mov
pop
jbe
jne
sub
cmpb
inc
popa
outsl
jno
xchg
leave
sbb
inc
adc
jg
jp
lods
mov
fstl
loope
dec
movsl
add
jno
mov
jnp
add
fdivp
or
fnstcw
cmpsl
mov
ret
test
gs
pushf
xlat
xor
movsl
push
xor
rol
adc
mov
pop
jb
ds
or
jmp
pop
pop
cld
in
adc
xor
pop
loopne
aam
cmp
lods
xchg
cwtl
jg
xor
and
mov
cmp
dec
or
hlt
out
xchg
pop
xchg
pop
je
les
cli
rcrb
and
andl
and
jb
add
dec
xchg
movsl
or
push
dec
lods
inc
mov
mov
adc
inc
popf
ret
push
bound
cli
call
mov
xor
test
jne
push
push
jno
std
cs
dec
xor
cmp
jle
xor
lcall
or
rcrb
sub
je
or
cmc
xor
adc
pop
shrb
push
sub
mov
pop
pop
adc
inc
aaa
orl
inc
gs
sub
or
add
nop
fisttps
clc
jg
sbb
mov
movzwl
ret
push
push
movsb
mov
sbb
lret
je
mov
dec
and
sbb
outsb
mov
iret
xor
and
jmp
jle
in
je
jmp
js
pop
fdivrl
mov
insb
sbb
test
out
jne
loope
rcll
cld
arpl
pop
mov
push
cmpsl
lds
je
sub
xchg
addb
and
add
addr16
lods
xchg
push
cmp
aas
pop
je
mov
cmp
lar
decb
ja
mov
xlat
mov
adc
sbb
or
cli
aad
mov
cmp
insb
loopne
std
in
push
add
or
adc
add
mov
mov
pop
into
jmp
imul
and
aaa
mov
in
fisttpl
int
push
adc
mov
mov
sbbb
ja
jb
add
add
call
out
xchg
and
mov
mov
or
adc
in
push
jl
cmpsl
iret
imul
out
loope
cmpb
xor
arpl
and
ja
insb
movsb
add
sub
sahf
out
pop
cwtl
notb
addb
lret
scas
mov
mov
sbb
or
dec
pushf
xchg
mov
mov
and
fadd
jecxz
popa
dec
ret
jge
scas
cmp
add
sbb
mov
adc
mov
and
push
adc
jne
cmpl
cwtl
pop
pushl
push
movsl
xor
outsb
or
xor
dec
xor
pop
pop
sbb
dec
pop
sbb
xor
fadds
mov
add
leave
push
add
xor
mov
aaa
iret
jmp
cmp
bnd
add
jmp
clc
dec
cld
mov
cs
cltd
push
idivb
mov
or
movsl
and
mov
lock
lea
inc
test
add
jmp
xchg
movsb
push
sub
mov
push
xchg
movl
xchg
jecxz
mov
mov
inc
pop
pusha
inc
sbb
repnz
xor
cmp
add
repnz
pop
adc
faddl
fs
subb
add
push
movsl
jle
neg
mov
incl
cmp
pop
push
ret
call
or
mov
push
ret
mov
test
enter
stos
mov
jg
jp
mov
clc
ret
ss
aam
or
add
ss
push
jge
test
shrb
mov
sti
jo
sub
das
bound
or
jo
xchg
xchg
fdivl
ret
or
enter
jle
inc
xor
clc
inc
jge
add
push
popa
fstpt
inc
jb
in
scas
cmpl
aad
jns
sbb
scas
or
adc
xlat
cmp
les
ret
push
scas
pop
jp
or
cmpsl
mov
or
or
dec
je
jmp
fdivrl
push
pop
stos
jl
adc
imul
sbb
addr16
or
jmp
movsb
popa
sbb
out
sahf
sbb
xchg
daa
fs
loopne
cmove
sub
push
or
shrl
push
jmp
push
mov
mov
xchg
push
or
xorb
sarb
adcb
mull
in
andl
adc
jl
lea
hlt
push
stos
sbb
mov
add
or
jae
mov
test
or
add
mov
mov
add
push
imul
addl
cmp
jl
or
sbb
mov
jmp
iret
and
fstpl
or
cs
cmp
sub
clc
cld
xchg
cmp
ret
or
xor
iret
cmp
add
jl
cmpsb
xor
js
rclb
sbb
pop
outsl
loopne
jne
je
lea
jnp
add
popa
jns
negl
enter
push
cmpsl
mov
imulb
out
flds
fstpt
dec
fstl
movsb
push
inc
add
push
pop
cmpb
dec
jge
mov
fildll
jmp
push
fdivs
jo
cld
inc
cmp
pusha
das
movsb
stos
ss
push
jnp
adc
mov
or
ja
or
jg
xorl
or
mov
dec
push
fadd
add
push
aas
xor
aam
addb
pop
faddl
jnp
dec
xlat
jnp
cmc
xorl
test
mov
iret
shr
cmc
fldt
fstps
arpl
jbe
outsl
inc
adc
out
pop
push
mov
inc
adc
or
arpl
fmuls
sub
sbb
pop
lret
add
mov
mov
push
xor
insb
jge
fistl
aaa
or
cmp
jb
insl
sbbb
les
xchg
rcr
imul
jnp
add
cmp
inc
push
inc
outsl
xor
cmp
and
jmp
std
movq
push
lock
dec
addb
pop
jmp
sbb
sub
push
push
add
jmp
or
pop
ret
jb
and
clc
lea
add
push
jge
pop
pop
sub
jp
adc
jno
pushl
lock
and
fildl
sbb
adc
inc
push
cltd
lret
adc
pop
xchg
mov
je
jp
imul
loope
ja
jb
icebp
xlat
mov
out
or
ret
vpaddsw
lcall
movsb
cmpsb
icebp
dec
add
test
flds
and
fwait
dec
cmp
mov
mov
pop
or
jne
or
mov
or
in
pop
call
adc
sbbl
lods
adc
testl
mov
sub
xchg
aam
das
das
dec
adcl
add
pop
adc
je
addr16
push
dec
push
dec
pop
push
dec
or
add
cmp
jl
invd
dec
push
gs
imul
inc
or
add
inc
mov
pop
repnz
lods
pop
push
mov
or
gs
insl
js
push
cmp
dec
or
in
push
or
cmpsl
or
pop
inc
inc
push
cli
dec
and
orb
sbb
or
or
push
into
sbb
or
or
mov
iret
adc
sbbb
addr16
lret
add
inc
loop
push
insb
cmp
and
cmp
xchg
scas
dec
sarb
adc
clc
outsl
or
incl
mov
mov
mov
add
pop
sbb
cmp
stos
pop
fcoml
ljmp
aad
adc
sbb
scas
push
sub
adc
dec
xlat
pusha
iret
push
imul
push
ja
outsb
addr16
stos
shrl
inc
cmp
pop
mov
test
icebp
nop
movsb
orl
incb
imul
out
orb
jnp
mov
xchg
xor
pop
push
jb
mov
bsf
mov
lods
test
jb
jb
mov
jb
aam
int3
test
inc
xchg
shrb
mov
dec
addb
add
push
inc
insb
imul
xchg
cmpsb
scas
shl
mov
cmpsb
dec
imul
lock
fsubrs
jns
sbb
insb
mov
or
mov
inc
ja
dec
jb
jae,pn
fcoml
push
add
imul
mov
fs
outsl
test
lock
popf
sbb
adc
dec
outsl
sbb
sub
push
xchg
push
out
dec
outsb
adc
fsubrs
xchg
jnp
xor
roll
sbb
push
mov
inc
outsb
insb
call
mov
cmpsl
or
dec
imul
adc
xchg
test
or
movsb
jbe
out
mov
lock
gs
add
push
xchg
out
add
nop
aam
add
ficomps
jo
sbb
fimull
jns
xchg
xchg
xchg
jbe
xchg
cmp
add
adc
push
cmp
inc
jbe
dec
or
push
fsubs
enter
flds
push
add
push
cmpsl
hlt
mov
movsl
cmp
mov
movsl
push
mov
repnz
and
push
xchg
mov
push
or
sub
push
and
dec
lods
outsb
sbbl
in
dec
or
pusha
cmpsl
push
leave
xchg
pusha
mov
mov
mov
mov
pop
nop
adc
out
mov
mov
shrl
push
inc
and
inc
outsb
sarl
mov
or
mov
sarl
out
mov
rorl
imul
pop
or
and
js
sbbl
push
nop
mov
pop
fdivrs
movsl
insl
jo
jb
jbe
push
mov
xor
montmul
mov
cwtl
nop
jb
push
mov
inc
jo
outsl
adc
sbb
xchg
xor
lock
outsb
adc
add
nop
lods
adc
jl
in
push
pusha
scas
add
sahf
mov
push
and
mov
mov
mov
repnz
mov
scas
lods
or
ror
call
add
sub
or
sbb
add
rorl
pop
mov
pushf
shl
fdivl
push
mov
mov
movsb
test
test
movl
and
insb
ret
or
add
fimuls
ror
push
jbe
push
imul
jne
inc
imul
lock
mov
sub
push
and
xchg
fiadds
enter
mov
in
push
and
or
cmpl
lods
dec
inc
lcall
cmp
mov
pop
pop
cmovns
jae
fs
jo
das
sar
jge
das
pushf
jae
push
rclb
sahf
cmpsb
adc
call
iret
fdivl
pop
jl
outsb
adc
sbb
cwtl
mov
mov
int3
data16
fwait
mov
mov
out
mov
dec
roll
insb
xor
mov
or
mov
lcall
mov
jnp
cmp
lock
cmp
mov
inc
arpl
and
xor
push
ljmp
cmpsb
lret
das
dec
jle
xor
nop
aas
jl
cs
movsb
xor
mov
or
xchg
clc
les
into
lock
fadd
pop
push
leave
push
lods
mov
fwait
loope
lret
push
xor
pop
push
lds
outsl
fs
cmp
test
pop
mov
fwait
in
enter
enter
mov
sub
mov
loope
add
push
iret
shlb
js
dec
je
and
out
inc
xchg
inc
out
loopne
or
add
push
in
pop
popf
mov
pop
test
inc
int
push
jns
fimull
xchg
fbstp
stc
fcoms
fsubrs
mov
cwtl
push
or
or
add
or
and
jb
out
sub
and
roll
loopne
push
pushf
adc
pinsrw
or
inc
dec
adc
adc
mov
xchg
jl
xchg
adc
xchg
mov
xchg
mov
inc
jo
mov
repz
js
testl
out
in
ret
mov
mov
daa
cmp
or
in
push
in
adc
in
push
sbb
inc
push
in
and
and
add
sbb
in
in
ds
repz
dec
or
push
and
out
sahf
out
xchg
mov
iret
fnstsw
loope
sahf
jmp
pop
ds
insb
outsl
inc
pop
cs
push
add
jmp
xchg
inc
xor
xchg
pop
adc
outsb
push
repz
iret
cld
fs
iret
repz
pop
fs
clc
push
in
dec
test
mov
push
test
add
or
pop
push
adc
aaa
movsb
jno
filds
xor
clc
sub
mov
aad
gs
pop
push
lahf
jle
pop
fwait
fs
xchg
je
daa
xchg
popf
idivl
fcomp
iret
scas
dec
cmp
fldl
insb
and
pop
fdivrp
inc
std
in
ja
push
pop
add
push
mov
cwtl
mov
popa
rorb
xchg
arpl
jns
xchg
pop
inc
unpckhps
fsubrp
data16
and
adc
gs
cltd
fidivrl
mov
jno
cmpsb
jecxz
adc
mov
mov
xchg
add
inc
fsubrs
pop
push
imul
lret
and
int3
cmp
test
push
xor
jae
lcall
add
pop
sbb
inc
int
dec
addb
jle
int
jmp
xchg
sub
mov
lcall
push
fadds
add
enter
jno
sbb
or
dec
sub
push
inc
insb
or
negb
push
movsb
adc
imul
sti
adc
sti
fwait
icebp
lcall
cli
stc
clc
push
push
push
push
push
push
loop
cmp
jnp
lock
sub
sub
js
cmp
push
pusha
fimuls
jns
mov
dec
push
xor
sbb
push
or
xor
and
mov
xlat
add
sub
aam
add
push
xor
pop
add
test
push
popa
addr16
test
lcall
push
lods
push
or
loopne
mov
les
sbb
push
inc
push
mov
push
push
arpl
sahf
dec
scas
dec
enter
incb
push
or
push
push
pop
mov
or
and
mov
push
sub
adc
les
mov
out
cmpsb
pop
or
jnp
add
pop
sub
add
cwtl
and
mov
dec
dec
fs
imul
shr
cmpl
pusha
ficoml
inc
movsb
lcall
bound
loopne
frstpm(287
gs
cld
nop
mov
cmpsl
dec
push
mov
pop
dec
mov
aad
jb
stc
push
mov
add
inc
popf
add
jb
leave
jae
fidivl
loopne
loopne
push
inc
lcall
pop
stos
dec
inc
in
popf
lods
xchg
jo
mov
push
mov
dec
pop
cmp
xor
or
adc
dec
adc
outsl
je
push
or
pop
and
jmp
adc
sub
mov
pop
scas
lcall
add
mov
pop
add
mov
and
add
repz
push
sub
jne
ss
jmp
sbb
adc
cmp
add
movsl
mov
push
neg
mov
dec
add
jbe
xor
xor
dec
and
sbb
push
or
nop
vpcomub
mov
je
shl
and
leave
js
pop
xor
shlb
add
pop
or
mov
jae
je
call
out
rorl
clc
mov
dec
daa
fsubrl
loop
sub
add
xchg
pop
jmp
push
and
pop
sbb
pop
jmp
ljmp
inc
add
jb
or
int3
cmp
push
inc
or
lods
stos
and
mov
in
int
or
nop
movsb
mov
hlt
lret
dec
mov
cmp
sahf
fistl
inc
in
xchg
cld
cld
sbb
cmp
sahf
test
addr16
jbe
fimuls
lea
cmp
pop
sub
sbb
dec
sahf
ret
sub
lret
movsl
mov
inc
out
gs
fs
addb
xchg
popf
pushl
or
fimuls
or
dec
call
paddq
inc
cmp
jecxz
sbb
adc
rorb
sub
inc
push
movsb
pusha
add
add
cmpsl
lea
or
sahf
mov
lds
sub
adc
dec
imul
xor
xchg
push
lcall
test
lods
xchg
sbb
imul
pushf
xchg
loopne
inc
adc
xor
push
jmp
loope
sbb
repnz
lcall
mov
cmp
cli
mov
add
movb
sub
iret
mov
lea
pop
add
in
jl
shrl
jmp
push
inc
dec
jne
mov
xor
rorl
xor
cmpsb
inc
lds
inc
sbb
dec
call
push
mov
push
aam
rcr
nop
sub
enter
cmpb
mov
or
dec
popf
cwtl
and
push
pop
add
xchg
dec
mov
and
mov
dec
shll
clc
rcll
les
mov
adcb
in
cld
pop
sub
cltd
fidivrl
add
pop
push
or
cwtl
call
adc
xchg
inc
dec
cmpsl
into
nop
mov
push
sbb
or
and
lcall
or
push
jp
call
jmp
push
in
xor
es
in
cmp
inc
pop
xorl
fcmovnu
push
inc
imul
icebp
cmp
push
push
call
jl
jecxz
dec
call
rolb
paddw
popf
fmull
xchg
mov
sbb
pop
loopne
and
mov
lret
out
mov
and
jge
dec
dec
enter
mov
cwtl
mov
jge
sbbb
faddp
mov
je
pop
jg
pop
xor
aad
popl
pop
add
xchg
inc
add
fnsave
lret
mov
shlb
mov
mov
sbb
cli
xor
pusha
mov
movsb
cmp
adcl
mov
adc
mov
rcr
scas
leave
enter
xchg
rolb
mov
adcb
int
lret
rorl
movsb
jae
pop
loopne
sub
shll
add
xchg
push
imul
add
enter
mov
lods
das
dec
jb
repz
lahf
adc
add
push
fisubl
fadds
movsl
adc
sbb
push
das
add
ret
cmpsb
mov
nop
outsb
adc
push
jo
les
push
test
ja
enter
sbb
pop
fnsave
sbb
add
xchg
mov
inc
push
push
push
inc
fists
xchg
adc
arpl
lret
stos
xchg
fsubp
cmpsl
cmp
jmp
jmp
cmp
je
sub
insb
rcll
and
clc
push
jb
pop
mov
cmpsl
xchg
pusha
or
mov
cltd
inc
cmpsl
xchg
cmp
mov
cs
and
dec
into
mov
and
push
adc
test
cld
inc
push
lds
test
or
adc
add
xlat
or
add
push
or
jae
addr16
mov
or
test
or
int3
mov
push
loope
pop
inc
outsb
cwtl
cwtl
hlt
pop
dec
adc
xchg
in
mov
and
push
pop
popa
and
les
js
rclb
mov
mov
xor
mov
sbb
xor
push
sbb
sub
xchg
add
incb
pusha
mov
sbb
loope
pop
dec
cld
mov
jmp
ret
add
enter
mov
ss
mov
cmp
jne
sbb
sbb
lahf
and
out
xor
sub
mov
in
push
cwtl
add
data16
loopne
add
daa
in
and
adc
or
mov
mov
inc
cmp
mov
or
test
and
shl
cwtl
loope
mov
pop
cmovg
mov
subl
mov
or
cmp
push
mov
and
inc
push
and
insb
pop
dec
loop
sti
xchg
dec
push
xor
sub
les
sbb
xor
add
mov
aaa
stos
mov
sub
cmc
pusha
outsb
xchg
sbb
in
cwtl
jo
sbb
fdivrs
mov
rcll
nop
sahf
mov
sbb
push
aas
xlat
cmp
pop
mov
inc
xchg
lahf
mov
int3
adc
adcb
loope
dec
lock
jae
leave
mov
push
or
clc
sub
sub
jne
push
arpl
pop
idiv
rolb
pop
stc
add
lods
fstpt
xor
into
je
mov
jo
je
mov
inc
fisttps
adc
ret
pop
popf
dec
adc
xor
lea
pop
fnstcw
or
shl
sbb
in
adc
dec
fst
lea
in
in
fsubrs
and
mov
imul
insb
test
fwait
cmp
loopne
jmp
cltd
mov
jl
xchg
aad
jbe
cmp
das
les
ljmp
sbb
idivl
inc
ss
lret
lahf
push
or
mov
fmull
shlb
loop
inc
adc
push
mov
incl
or
leave
aam
mov
xchg
lret
jp
xor
adc
add
nop
mov
mov
shrd
cmp
sahf
xchg
or
mov
pop
inc
decl
mov
sbb
out
popf
andb
loope
loop
adc
or
add
shr
cmc
mov
push
push
sub
pop
inc
xor
je
int
jo
jge
pop
lcall
inc
loopne
divl
dec
inc
ds
xchg
add
sbb
pop
xor
scas
push
push
xor
outsb
inc
inc
ret
or
int
sbb
inc
sahf
add
nop
pop
mov
dec
add
lret
sbb
or
jmp
cmp
sar
pop
add
aad
leave
jmp
inc
cmp
jge
std
push
inc
dec
add
adc
jne
sbb
leave
jbe
cs
loop
andl
xlat
std
jle
adcl
or
or
and
xchg
lea
push
hlt
jecxz
aad
mov
cmp
and
movsb
push
jmp
cwtl
add
dec
lret
das
pop
out
mov
enter
shlb
rcrb
pushf
or
dec
xchg
je
mov
dec
shl
test
sbb
sbb
adc
push
jns
inc
ja
lock
inc
mov
sarl
pop
addb
add
bound
push
and
dec
jne
cmp
sub
jg
dec
hlt
dec
dec
inc
cmp
add
cmp
mov
add
cmpsl
lret
movsl
subl
pop
xor
pop
inc
mov
dec
jno
cmpsb
aas
sbb
rcl
mov
lock
pusha
mov
dec
mov
ja
push
inc
stos
lods
sbb
add
mov
das
jns
mov
js
aam
mov
inc
jne
cmpsl
loop
subl
and
or
leave
jae
dec
dec
and
movsl
xor
xor
aaa
iret
arpl
sub
add
sub
pop
not
xchg
mov
and
and
loop
data16
scas
aam
inc
enter
pop
stos
jb
mov
fistps
add
xor
mov
cmp
dec
or
pop
pop
dec
pop
sar
incl
sbb
call
out
je
movsl
test
inc
xor
in
inc
rol
sbb
push
fisubl
mov
push
lds
or
mov
fisttpl
adc
adc
adc
add
cld
xchg
add
cmovp
sarb
stos
adc
btr
push
add
mov
lock
sbb
push
push
inc
adc
test
ficompl
push
mov
dec
inc
or
dec
test
adcb
mov
sbb
movsl
ja
add
cli
pop
ja
add
bt
jb
ja
push
inc
popf
mov
jp
fistpll
push
inc
cmp
jne
inc
decl
jne
les
mov
xchg
aaa
or
test
call
mov
and
add
rol
in
call
mov
sbb
add
xor
xchg
jg
nop
mov
inc
in
xchg
xchg
fldt
hlt
pop
sub
cmpl
cmp
arpl
mov
cwtl
rolb
outsb
imul
mov
notl
jns
add
cli
xor
xchg
add
dec
leave
push
inc
mov
sub
ret
mov
incb
sbbb
push
adc
xchg
jge
pushl
js
cmp
push
test
movsl
movsb
adcb
dec
sbb
pop
push
mov
scas
xchg
mov
adc
add
add
xchg
mov
aaa
add
or
adc
ja
aad
lea
pop
aam
outsb
flds
dec
push
nop
fistpll
mov
out
jle
push
dec
and
mov
xchg
sbb
add
pop
pop
jnp
sub
lea
and
lcall
mov
or
movsb
subb
adc
int
pop
test
pusha
ret
add
es
push
popa
repnz
jg
enter
jle
mov
test
arpl
clc
icebp
lock
mov
ja
cmp
call
jnp
xorl
mov
xchg
andb
mov
roll
jns
popf
mov
sub
xchg
adc
outsb
nop
xor
xor
xchg
sbb
arpl
inc
mov
ficoms
mov
adc
cs
mov
add
or
and
lods
mov
sub
jno
add
and
dec
and
call
sub
ja
in
outsb
daa
daa
dec
clc
rorl
repz
movsb
xchg
add
adc
jecxz
lahf
adc
dec
cltd
sub
decb
mov
test
adc
push
adc
pop
ficoms
mov
xorb
dec
and
dec
shll
inc
inc
push
jae
in
jecxz
push
mov
dec
in
daa
test
popa
leave
sarl
jo
bound
movsb
jb
popa
fdivrs
pop
shl
lock
pop
in
push
in
sbb
and
inc
shll
mov
loop
popa
les
out
and
add
stos
shrb
jne
xor
pop
mov
enter
stos
aam
aam
xchg
sbb
mov
adc
in
fadds
repnz
mov
sahf
fidivs
fwait
cld
adc
enter
push
outsl
push
jbe
sub
dec
jae
xchg
sbb
clc
and
sub
cmova
lock
loope
test
out
xchg
movsl
cltd
xchg
pushf
mov
inc
outsl
mov
lret
test
sbb
xor
sbb
ss
mov
loopne
mov
ret
rclb
fstpt
rclb
aam
mov
adc
es
loopne
add
sub
roll
mov
push
push
inc
lret
or
fsubrs
ret
fs
fucomi
fwait
pop
call
mov
fimuls
inc
fucomp
and
subb
sarb
in
mov
jns
xor
mov
push
push
push
jo
mov
pop
ficoms
addr16
dec
inc
push
jl
movsb
test
sbb
xor
pop
push
push
jl
and
fcoml
mov
push
cmp
cmp
dec
popa
adc
jns
pop
insl
and
mov
fisubl
insb
and
addb
mov
or
nop
pop
push
add
mov
fmul
call
rcrb
or
call
or
cmpl
ret
test
pop
mov
movl
inc
mov
out
sahf
and
pop
sarl
adc
mov
pop
cmp
or
inc
dec
vminss
sbb
or
outsl
push
rorl
push
lret
xchg
repnz
imul
or
out
addr16
in
inc
inc
pop
call
clc
add
adc
add
mov
sub
lock
mov
enter
adc
push
push
push
xlat
pop
notl
mov
mov
clc
xor
push
sbb
rcll
imul
in
bound
dec
push
in
pop
add
fs
daa
shll
sub
cmpsb
xchg
push
dec
pop
xor
mov
call
dec
inc
sahf
mov
pop
inc
out
jmp
sub
xor
test
and
sbb
and
pop
push
ljmp
aad
into
inc
mov
faddp
or
int
xchg
cmp
mov
das
ret
outsl
call
xor
jg
js
ret
dec
and
pop
jo
adc
lods
jnp
loopne
lock
and
sahf
and
sbb
adc
push
test
cmp
out
in
pushf
sbb
arpl
aaa
mov
in
ret
adc
std
and
adc
clc
pop
les
sbb
jmp
fmuls
lds
mov
or
add
lret
sub
jle
int
lds
or
test
das
add
int
les
inc
sub
leave
roll
dec
stos
les
or
cwtl
arpl
cmp
lea
arpl
pushf
push
xor
cld
in
mov
cmpsl
and
inc
out
sbb
push
inc
add
cmp
lock
pop
pop
jne
testb
lods
std
ds
orb
sbb
imul
out
and
pop
mov
cmpsl
nop
mov
pop
outsb
cs
and
pop
inc
test
dec
in
into
mov
pop
js
xor
inc
addr16
subb
inc
loop
adc
and
jo
cs
xchg
sub
cmp
sbb
mov
fiaddl
jmp
mov
push
scas
sar
mov
into
add
lret
adc
xchg
mov
test
or
add
lcall
aaa
sub
sub
sbb
mov
int3
dec
mov
adcb
ret
push
dec
shlb
inc
pop
andl
add
ds
add
inc
jo
les
addl
inc
lock
pop
arpl
rol
and
cltd
in
inc
test
or
iret
mov
dec
sub
sub
xchg
test
inc
test
push
or
rorb
mov
mov
pop
movsl
or
add
add
pop
mov
mov
cltd
ficoml
outsl
outsl
aas
inc
jbe
je
jg
mov
jmp
rcl
sub
clc
cs
add
jge
lea
lock
jbe
xor
dec
into
push
sbb
or
call
repz
jp
jno
push
mov
mov
jg
mov
ret
push
mov
sub
andl
lret
or
repnz
movb
jle
in
mov
pop
popa
mov
push
sbb
mov
sbb
adc
cmp
loop
test
or
das
int
je
mov
xchg
test
mov
pop
sub
scas
add
xor
dec
mov
inc
sbb
jg
add
sbb
orb
nop
and
mov
push
fisubs
das
adc
jl
repz
fidivl
mov
xchg
push
xchg
cwtl
loop
jl
cmpl
clc
or
inc
hlt
shr
out
aam
fisubl
mov
sbb
movsb
repnz
jg
addr16
inc
jl
and
cmp
jne
mov
or
or
mov
jne
inc
jge
sbb
jle
sub
ficompl
enter
jl
pop
add
add
xchg
adc
out
sbb
mov
sbb
xchg
nop
dec
jo
xchg
mov
pop
add
cmp
addr16
xchg
imul
lret
or
mov
pop
mov
xchg
inc
mov
jge
or
jle
xor
push
push
add
out
ja
cmp
out
js
add
inc
mov
ja
pop
and
sahf
pusha
pop
dec
fidivrl
xor
and
inc
ja
xor
pop
push
insl
ret
sub
test
add
mov
push
pop
subb
popf
js
mov
shl
adc
xchg
ficoms
push
movsb
cmpl
pop
cmp
in
adc
jb
and
add
cs
pop
idivl
shl
cmpsl
pop
cwtl
js
les
inc
andb
push
sbb
adc
push
pop
loopne
jbe
add
mov
xchg
incl
popl
in
push
sbb
add
fdivl
sbb
mov
iret
sbb
xor
add
bound
xor
cwtl
mov
pop
push
xor
mov
mov
adc
sub
sub
shll
xor
test
je
pop
ret
cmp
sub
int3
notl
jb
mov
es
jb
inc
inc
insb
add
loope
xchg
popf
push
lock
pop
int
addb
mov
or
pusha
xchg
and
add
ljmp
or
sbb
add
or
into
pop
and
cltd
jae
mov
out
fidivl
add
and
mov
stc
mov
pop
jbe
insb
cltd
sub
push
ljmp
lret
mov
xchg
jne
pop
mov
lahf
inc
cmpsl
leave
or
adc
inc
bound
loope
add
add
nop
push
les
inc
sub
sbb
out
xor
test
xchg
add
sbb
pop
adc
icebp
xor
sbb
mov
sub
push
inc
xchg
add
pop
pop
aaa
xor
test
in
sbb
xchg
dec
push
mov
out
aam
flds
aad
in
pop
mov
or
pop
pop
xchg
pop
test
movsb
mov
div
in
add
inc
or
rolb
adc
push
push
outsb
fcompl
sbb
call
xor
mov
roll
add
mov
nop
icebp
push
and
aas
mov
mov
and
add
mov
sub
mov
or
fsubr
add
or
nop
fstpl
sarl
jge
enter
or
loopne
fcompl
mov
sub
cs
je
inc
fadd
sbb
mov
pop
or
add
data16
xor
mov
dec
or
aam
and
and
or
dec
ret
loopne
cmp
jne
jecxz
je
or
mov
jae
push
mov
in
jmp
or
dec
or
adc
iret
or
push
add
sbb
push
ret
ss
dec
mov
pop
mov
daa
xchg
shlb
in
imul
aas
test
add
mov
popf
addl
lock
pop
jp
test
inc
addb
mov
dec
aam
pusha
daa
loope
rorb
enter
xchg
dec
pop
jecxz
cmp
cmp
jge
data16
dec
je
adc
cmp
jp
add
or
adc
lock
ret
or
inc
and
cmp
je
or
jp
jne
arpl
push
faddl
jle
rclb
je
mov
pop
arpl
xor
daa
or
dec
xor
mov
jecxz
xor
rcll
ljmp
les
scas
xor
add
jle
lods
adc
cmp
jle
or
add
inc
mov
xlat
test
stos
sahf
add
lds
add
push
or
adc
dec
jns
cmpsb
add
hlt
enter
push
test
aad
xchg
icebp
or
hlt
push
add
add
inc
and
lods
aad
mov
aam
iret
jmp
sahf
les
inc
push
cltd
lcall
ds
les
cltd
shlb
pop
mov
clc
mov
jp
pop
jg
test
push
iret
adc
pushf
push
push
adc
popf
das
push
inc
mov
mov
fisubrl
or
inc
andl
fildl
ja
sbb
or
nop
das
out
xchg
or
adc
sbb
js
lods
pop
daa
scas
sbb
and
xlat
aas
add
unpcklps
push
orb
sar
inc
imul
add
cmpsl
sbb
iret
out
inc
inc
int3
mov
ss
nop
aaa
sub
dec
ds
loope
cmp
or
or
inc
test
xor
inc
pop
adc
or
adc
jbe
ja
mov
ficoms
mov
jne
dec
fwait
xchg
dec
jmp
mov
sub
mov
lea
int
inc
sbb
cmp
dec
or
or
xchg
sbbb
leave
mov
stos
inc
pusha
movsl
dec
inc
cs
add
or
je
test
push
aaa
push
loop
cmp
sbb
inc
xor
push
add
push
mov
dec
fcoms
rcll
cli
aaa
xchg
notb
int
addr16
popa
imul
pop
xchg
push
add
jae
out
add
and
mov
mov
sbb
shlb
movsb
sbb
cs
sub
mov
aas
std
fmuls
xor
mov
popa
xlat
shlb
into
lret
jg
xor
lods
sar
push
and
xchg
imul
or
ret
aam
jo
fsubs
icebp
or
adc
jge
add
xor
xchg
adc
dec
jbe
xor
mov
and
clc
xor
cmpl
icebp
pop
pop
mov
jae
das
repz
inc
imul
xchg
imul
adc
cmp
jge
mov
sub
xor
cld
sub
dec
shrl
or
dec
leave
adc
fwait
psubq
sbb
mov
or
dec
pop
inc
add
int3
clc
cmp
jl
jmp
or
leave
sub
jecxz
dec
pusha
push
aaa
add
cli
cmpsl
andw
sbb
fldenv
arpl
dec
sbb
mov
insl
inc
xchg
pop
leave
cmp
push
fists
cmpl
mov
inc
js
push
mov
and
fidivrl
cs
push
mov
mov
fistl
push
adc
adc
dec
cmp
xchg
shll
sbb
mov
mov
xor
subb
fsubrl
addb
cmp
and
push
sub
or
lret
mov
loope
lret
inc
pop
int3
insb
cmpsb
inc
repnz
aas
adc
pop
orl
add
xor
mov
lock
mov
push
adc
popaw
ret
lock
inc
sbb
das
outsl
xchg
loope
jmp
cmp
pop
dec
adc
adc
xchg
fsubrp
clc
ret
lahf
jne
sbbl
xorl
sbb
add
adc
push
mov
jo
icebp
cmpsl
popa
rcrb
ret
mov
ret
out
mov
sub
jnp
cmpsl
ds
add
sbb
imul
dec
and
add
xchg
push
pop
adc
mov
fsubrs
rcrl
fisttpll
add
fmuls
je
hlt
aaa
test
loopne
pop
xor
mov
lods
shll
test
arpl
decl
xchg
pop
jecxz
shrb
pop
call
int3
es
mov
sbb
orl
push
mov
cli
ja
sbb
cmp
les
dec
mov
movsb
cmp
adcb
sbb
xor
mov
iret
pop
clc
inc
mov
push
fnstcw
adc
sub
jne
push
or
push
push
add
out
loope
cmpl
jne
sbb
rolb
add
shlb
bound
push
loopne
aas
dec
xchg
inc
stc
jl
mov
pop
rolb
out
mov
xor
imul
lea
sub
pop
mov
or
arpl
mov
push
loopne
xor
subl
fwait
xor
push
cld
jmp
mov
push
inc
movsl
inc
ljmp
ds
in
pop
loopne
mov
xchg
subl
sarb
add
cmpb
xor
mov
jmp
push
xlat
es
rolb
out
dec
jne
and
ja
mov
hlt
mov
inc
xchg
jmp
xchg
imul
test
jg
out
cmpsb
cmp
push
push
xchg
add
out
jle
repz
xor
loopne
nop
in
sub
push
jne
pop
je
loope
pop
dec
popa
mov
or
jmp
sbb
cmpsl
insl
out
dec
dec
pop
add
cmp
iret
xchg
ljmp
sub
nop
inc
pushf
lret
mov
jmp
add
jl
pop
xor
mov
jg
sbb
fnstcw
lret
rorb
fsts
lret
stos
cmpsb
mov
push
sbb
dec
mov
std
adc
ljmp
pop
rolb
sub
pop
mov
add
or
jnp
add
xor
cmp
aaa
fistpll
adc
jl
loop
sub
push
popf
dec
jns
jle
push
mov
pop
and
dec
js
inc
outsl
gs
xlat
fldl
sbb
call
or
lods
add
add
mov
mov
xchg
and
test
jbe
or
fists
je
adc
and
jnp
jecxz
sub
jecxz
ss
inc
push
aam
dec
xchg
ret
jg
add
adc
sub
adc
inc
xor
pushf
inc
dec
sub
sbb
das
cmp
pop
mov
iret
sahf
pop
shll
je
mov
inc
push
jmp
rcll
push
pop
and
cmp
cmp
push
pop
push
mov
fimull
pop
add
add
xor
jge
enter
pop
test
mov
or
outsw
xorl
sub
outsb
les
fmulp
ret
push
or
test
enter
call
or
or
cmp
les
paddq
gs
ljmp
mov
arpl
fdivl
vmread
cld
sub
cltd
mov
push
int3
mul
xchg
lock
inc
leave
sbb
push
cmpsb
pusha
dec
push
int
xchg
push
clc
imul
pop
or
cmp
xchg
push
hlt
sub
pop
ret
iret
iret
push
pop
pusha
jae
stc
mov
dec
sbb
adc
ds
rorb
lret
sub
lret
and
jmp
sub
inc
mov
and
ret
sbb
in
lods
jo
cwtl
jbe
add
out
jecxz
inc
adc
clc
movsl
jo
sub
imul
scas
sub
dec
xorl
das
aam
adc
xchg
or
and
int
jne
in
adc
sub
cmp
lods
cwtl
in
enter
add
xor
or
sub
adc
sbb
mov
xchg
fs
mov
popa
in
mov
test
mov
or
add
and
popf
sbb
adc
std
sub
sub
imul
xchg
push
pusha
cld
push
jge
push
negb
jmp
fidivl
or
mov
or
pop
popf
mov
sbb
or
jmp
loopne
pop
push
mov
mov
pop
popf
sbb
scas
jne
sbb
sbb
add
inc
rcrb
rcrb
xchg
pop
push
in
adc
fwait
add
in
adc
pusha
sbb
push
xor
bound
adc
pop
imul
adc
popa
xlat
sub
xor
mov
add
jo
aaa
in
inc
in
jo
xor
xlat
push
lods
adcl
dec
jmp
cmp
lcall
xchg
sbb
out
mov
loope
xchg
cmp
cld
adc
fst
cltd
cwtl
mov
daa
adc
xor
or
or
add
push
xor
pop
push
or
nop
ss
ljmp
pop
out
or
or
sbb
sbb
inc
push
sbb
es
push
dec
add
lcall
sub
ljmp
imul
jge
popa
sub
xor
xlat
pusha
mov
add
imul
mov
xchg
andnps
mov
sbb
cmp
mov
mov
push
ds
add
push
xchg
movd
or
sbb
xor
insb
flds
lock
inc
cs
mov
mov
lret
pushf
xor
cmp
adc
mov
inc
add
xchg
or
stos
add
call
xchg
cmp
stos
xor
aas
scas
add
and
jl
cwtl
add
add
fadd
xchg
mov
in
inc
add
insb
sub
popf
in
into
enter
fsubs
xor
cmp
call
and
jns
fwait
mov
cmp
add
pop
xchg
adc
pop
xchg
or
hlt
xor
jmp
add
aas
xorl
orl
int
mov
push
mov
or
mov
fs
insl
sqrtps
out
or
or
int
repz
add
jo
pop
mov
fldt
lock
jne
mov
push
push
mov
mov
icebp
jbe
rolb
inc
fsubl
and
out
shrl
mov
fcoml
cmp
or
loope
jp
jl
and
pop
xchg
rorb
xlat
mov
fsub
mov
mov
call
or
pop
fmull
mov
inc
xor
stos
hlt
out
das
lods
cmp
dec
aad
lret
mov
xchg
out
xlat
into
or
movsl
leave
sub
popf
lock
add
inc
xor
dec
mov
lret
cmp
lea
sti
loopne
mov
mov
sbb
stos
add
xor
add
iret
mov
gs
imul
push
jo
arpl
xchg
std
rcrl
xor
cmp
movsl
pusha
add
clc
jo
dec
scas
xor
mov
ficoms
pusha
test
loop
inc
sbb
mov
pusha
rcrl
and
hlt
aam
lahf
iret
loop
jmp
mov
scas
lock
mov
add
int
sbb
sbb
cmpsl
jl
push
rcl
add
paddusw
ds
scas
mov
out
js
pusha
test
out
enter
out
lock
jmp
lcall
outsb
icebp
mov
rcl
pmulhw
in
xor
insb
addl
adc
inc
dec
jns
push
pop
cltd
mov
pop
cmc
sbb
das
fadd
repnz
add
xor
cli
mov
ds
pop
repz
cmp
add
cmpsb
hlt
outsl
test
sbb
or
icebp
add
andl
repnz
sbb
xorl
mov
dec
xlat
clc
jge
or
clc
mov
out
mov
cmp
jno
call
jp
add
sbb
xchg
cmc
hlt
mov
xor
inc
daa
add
add
mov
mov
push
xor
push
aaa
lods
xor
xorl
mov
out
mov
sub
jl
fdivl
mov
rcrb
push
hlt
push
outsb
fdiv
mov
daa
xor
inc
addr16
pusha
sub
pusha
out
mov
out
dec
test
clc
daa
cltd
mov
in
xor
lods
enter
rorb
nop
ss
loope
jnp
cmp
push
fldt
mov
xchg
pop
push
out
and
jmp
fsubl
repnz
sub
sbb
adc
sub
stos
sbb
aad
mov
pop
xor
xor
dec
shl
inc
push
sbb
loope
in
rcr
cmp
or
fwait
mov
push
outsl
call
insl
sbb
adc
int3
daa
sbb
pop
mov
hlt
inc
loop
aaa
push
jnp
into
shr
daa
push
fistpll
lea
push
aas
jo
jmp
fcomps
dec
sahf
ret
adc
sbb
mov
loopne
test
hlt
fadd
ret
cmp
jge
adc
nop
mov
or
mov
push
cltd
roll
and
jecxz
addr16
adc
and
add
mov
fdivrl
mov
pop
and
and
je
clc
sbb
cmpb
fisttpl
xor
sbbb
push
sub
cld
add
push
add
jmp
mov
cmp
jne
mov
sbb
sbb
sub
lar
shl
mov
lea
int
mov
pop
les
loopne
dec
bound
push
mov
xor
ret
xchg
stc
popf
sub
or
call
xor
jbe
jmp
outsl
lods
xor
or
dec
pop
lds
add
xor
das
xchg
inc
rcrb
test
xchg
daa
sub
or
in
pushl
ss
push
mov
pop
jge
mov
fbld
lock
arpl
dec
je
or
pop
in
jecxz
or
sub
shrl
dec
testl
push
jmp
shll
cmp
or
add
stc
xchg
lahf
inc
inc
lods
arpl
stc
sarb
push
movsb
jnp
fdivl
push
inc
or
and
ja
push
clc
or
mov
ja
push
mov
ret
jmp
sub
inc
mov
movsl
cld
mov
loope
adc
inc
add
push
out
xchg
aad
cmp
xlat
push
or
push
adc
inc
setnp
mov
xchg
testl
mov
adc
mov
jge
into
mov
and
adc
mov
and
cld
adc
dec
dec
push
cmp
inc
dec
sahf
sbb
sti
cmp
xchg
inc
mov
adc
sti
dec
sub
sbb
push
int3
mov
pop
ja
clc
out
jae
add
pop
push
push
femms
roll
ds
dec
shll
cmpl
inc
jo
cmp
adc
mov
addl
enter
sti
xor
adc
add
out
addr16
dec
sub
lock
sbb
sbb
nop
sbb
add
add
mov
out
dec
cmp
out
adc
add
movsl
je
scas
outsb
sub
shrb
and
scas
rcll
lock
cmp
lods
add
leave
nop
xchg
mov
das
pusha
repz
xchg
test
pop
test
cmc
sub
mov
jno
jb
jecxz
lret
std
cmp
cmp
push
cwtl
push
stos
mov
into
loopne
pop
lock
sahf
out
cmp
push
push
pop
cs
dec
pop
imul
xchg
fiadds
mov
leave
xchg
int3
xor
and
add
scas
nop
sbb
ret
jo
mov
insb
pop
xchg
lods
jmp
das
pop
push
adc
pop
jmp
mov
fadd
imul
adc
sub
stos
pop
das
aad
nop
inc
movsb
js
cld
xor
incb
inc
and
gs
and
fxtract
mov
test
mov
aas
movsb
sbb
adc
mov
xor
enter
jmp
or
faddl
stos
jg
add
mov
in
adc
lahf
loop
add
pop
mov
sbb
sahf
mov
jb
inc
es
ret
inc
inc
push
push
ja
lods
inc
aaa
or
decl
adc
push
push
cmp
adc
enter
insl
xlat
je
mov
lret
in
daa
mov
rorb
dec
movsl
mov
push
or
jl
mov
mov
inc
inc
call
jmp
in
dec
loope
dec
mov
imul
jnp
test
cmpsb
cmp
push
push
sbb
push
inc
sbb
and
xchg
lret
push
pusha
sbb
orb
ljmp
mov
cltd
lret
lods
aad
add
mov
mov
jg
adc
cmp
pop
dec
or
pop
push
int
sub
and
mov
jg
js
xchg
inc
shlb
in
inc
sarl
pop
adcl
pop
shl
aam
xchg
cli
inc
inc
adc
inc
bound
xorl
mov
inc
ja
movl
dec
cld
shl
rcrl
in
push
dec
enter
jnp
pop
ret
clc
clc
call
cmp
shlb
xchg
jo
scas
xor
mov
jg
sbb
push
jmp
sbb
out
orb
cmp
add
mov
stc
dec
call
in
das
xchg
outsl
mov
mov
or
inc
pop
sub
aas
sbb
xor
mov
xchg
incb
popf
scas
mov
inc
add
push
shr
fidivrs
mov
rcrl
in
add
push
shll
cmp
cwtl
pop
cs
sahf
out
sbb
sub
inc
imul
or
cmc
push
cld
gs
cs
aam
movsbl
popa
ret
xor
sub
cs
jns
add
fiaddl
and
nop
xchg
sub
aam
pusha
sbb
out
shlb
push
jne
insl
loop
mov
sahf
ret
mov
loop
ret
jmp
push
mov
icebp
cmp
lcall
leave
les
mov
and
add
cld
or
repz
xchg
mov
dec
loope
dec
out
sub
push
sbb
jmp
sub
push
mov
add
add
mov
sub
sub
dec
arpl
jmp
data16
mov
jb
in
ret
mov
bswap
dec
call
jl
or
sbb
or
js
adc
or
cmpl
cltd
testb
pop
jg
mov
push
add
shll
and
mov
mov
jb
pusha
xchg
div
push
inc
sbb
add
mov
and
mov
sti
adc
adc
push
add
cmp
aaa
add
and
in
shll
mov
pop
out
in
inc
add
daa
push
push
shrb
add
push
xchg
loopne
adcb
mov
pop
shll
dec
inc
mov
enter
std
push
inc
movsb
mov
cmpl
sbb
mov
push
rcll
fwait
push
push
pop
pop
faddl
notl
jecxz
movsb
xchg
fists
push
cmp
je
sbb
mov
dec
rolb
and
jl
adc
sti
negl
daa
xor
xchg
adc
or
push
push
xchg
jae
pusha
xor
or
data16
or
les
pop
cmpsb
movsl
xor
or
mov
pop
dec
sbb
dec
ja
stos
mov
xchg
or
pop
dec
inc
xor
mov
movsb
jg
addr16
adc
movsl
adc
mov
dec
sbb
inc
loop
imul
or
fisubrs
push
lahf
adc
test
add
mov
mov
and
push
pop
sbb
xor
rorb
jg
or
pop
cli
ret
sti
mov
jno
jle
or
mov
rcrl
sub
jb
adc
lea
mov
pusha
flds
loopne
icebp
sti
sub
imul
sub
or
leave
ds
pop
jnp
sbb
adc
addl
lret
dec
pop
adc
or
adc
adc
sbb
sti
stc
call
orw
addr16
dec
add
push
adc
inc
sbb
sbb
fildl
jmp
adc
repz
add
mov
mov
mov
sub
or
pop
adc
xlat
inc
or
and
pop
lahf
sbb
lock
cwtl
mov
mov
dec
sbb
je
aas
xor
dec
shll
pop
jp
mov
cli
test
es
xchg
and
js
mov
or
mov
and
or
mov
mov
adc
pop
adc
adc
or
mov
adc
scas
sbb
pop
and
shrb
orl
sub
rorb
adc
xchg
inc
outsb
js
adc
xchg
adc
jle
stos
sti
hlt
pop
push
push
adc
xor
xchg
call
jae
inc
aad
rolb
aad
imul
ret
notl
dec
and
and
dec
push
mov
add
lcall
and
or
or
or
sbb
rorl
push
dec
popa
mov
mov
add
push
and
incb
sbb
add
add
cmc
dec
ds
pop
dec
gs
outsl
jo
addr16
and
add
inc
or
pop
or
mov
inc
pop
inc
notl
xchg
push
cs
dec
pop
add
inc
mov
pushf
xchg
lret
imul
sub
push
inc
dec
ja
je
sub
cmp
jne
daa
das
and
jne
cmp
dec
cwtl
mov
dec
mov
pop
shlb
repz
dec
rcl
inc
shlb
cmp
mov
hlt
jno
pop
xor
out
mov
mov
adc
sub
enter
xor
sbb
adc
test
arpl
std
push
inc
dec
jne
les
push
add
mov
into
addr16
push
dec
push
je
adc
jae
cmpsl
mov
sub
stos
sahf
xchg
jnp
or
and
inc
popa
cld
fbld
ljmp
daa
adc
xor
cmpsl
xchg
adc
inc
das
sbb
inc
cmp
pop
sbb
leave
aas
jo
nop
mov
xchg
fs
push
or
outsb
jg
cmp
jg
push
dec
cmp
xlat
dec
inc
ja
xor
jmp
test
clc
pop
shll
test
mov
jmp
or
cmp
js
sbb
andb
jmp
jge
rcrb
call
rolb
lock
imul
add
ja
repnz
xor
mov
lahf
and
mov
jmp
or
inc
lahf
mov
scas
jecxz
xor
or
sbb
jg
cmp
dec
add
inc
and
and
or
pop
xlat
xchg
jge
adc
or
inc
and
stos
add
inc
jmp
adc
or
inc
and
xchg
pop
loopne
jle
orl
dec
lahf
add
in
sbb
adc
movsb
shll
shld
and
push
mov
mov
movsb
jmp
nop
or
loop
test
inc
jl
push
jle
pusha
stc
sub
je
int
or
pusha
pop
or
add
cwtl
mov
fisttps
in
pop
mov
sbb
push
inc
and
in
mov
push
pop
clc
dec
adcb
sbb
pop
adc
mov
dec
inc
pushf
rorl
sbb
or
out
inc
push
pop
xchg
lea
das
xlat
sbb
iret
sub
cld
xor
sbb
ja
lcall
push
sub
arpl
xchg
mov
xchg
pop
xchg
out
bound
dec
popa
inc
dec
cmp
dec
push
push
inc
je
dec
push
out
data16
sub
sbb
adc
out
mov
add
push
pop
xor
mov
inc
jo
xor
fdivrs
xlat
lock
arpl
call
daa
pop
and
jne
pop
adc
push
pusha
scas
frstor
wrmsr
push
pop
bound
sbb
mov
add
xchg
mov
or
cwtl
mov
in
inc
mov
fadds
add
push
sbb
ror
xchg
punpcklwd
pop
cld
jecxz
inc
push
cli
inc
push
push
mov
rol
adc
xor
dec
adc
cmpl
outsb
adc
cwtl
add
jbe
setne
jb
sub
inc
jb
adc
add
addb
adc
dec
ds
cmpsb
push
into
adc
pop
fdivr
add
add
push
addl
lret
mov
out
xor
xor
xor
or
test
cmpsl
add
sarb
push
scas
daa
add
dec
xchg
jg
jmp
loope
adc
push
adc
cmp
lds
sub
sub
incl
shlb
arpl
rclb
cmp
inc
or
add
jae
sbb
cltd
or
in
ret
add
ds
add
adc
add
adc
out
in
dec
add
clc
sbb
push
jmp
pop
movsl
jg
outsb
rcll
adc
hlt
call
insl
add
cmp
sarb
xchg
inc
inc
add
fwait
inc
adc
sti
scas
or
xchg
orb
rolb
mov
push
in
js
adc
xchg
fcompl
push
int3
addl
inc
cld
add
push
sub
pop
loopne
add
cmp
push
and
loope
stos
mov
fcoms
repz
sbb
xor
push
push
outsb
sbb
ret
std
ja
sbb
pop
dec
aaa
mov
cmpsl
rorb
in
rorl
in
push
lret
push
dec
in
mov
ds
out
sub
ret
inc
mov
adcb
mov
pop
mov
cmp
pop
add
sbb
dec
cmp
daa
or
divb
sarl
pop
fbstp
movsl
and
stos
lahf
inc
adc
add
scas
sub
or
sbb
popf
lods
push
and
sub
pop
pop
pop
dec
jb
daa
or
in
adc
sbb
daa
mov
subl
add
gs
adc
insb
sbb
xor
dec
and
adc
pop
loop
scas
xor
or
dec
ljmp
sbb
add
adc
xchg
rorb
add
mov
xor
inc
mov
or
data16
pop
clc
mov
or
or
mov
pop
pop
push
push
mov
add
sti
or
or
add
push
mov
inc
add
pop
add
jo
mov
cmp
fisttpl
pop
xchg
mov
jo
aas
adc
jge
adc
sub
mov
push
or
add
inc
sub
pop
iret
cmp
xor
xor
push
sarb
daa
push
pop
adc
mov
in
lods
mov
je
pop
inc
pop
jle
pop
test
pusha
push
push
dec
pop
add
push
mov
addr16
sub
jge
sbb
adc
icebp
test
cld
push
xchg
insl
nop
adcl
lea
popa
adc
std
mov
cmp
inc
jno
les
pop
xor
add
pop
jge
ret
mov
mov
outsb
inc
pusha
arpl
fildll
jae
orb
pusha
xor
aas
jmp
dec
int3
mov
divb
pop
push
and
sbb
xor
fbld
out
sbb
pop
inc
mov
popa
cltd
add
les
in
into
mov
clc
sub
ret
dec
iret
loopne
and
xchg
hlt
mov
test
xchg
mov
and
dec
mov
sbb
jb
rcrb
ja
jb
jb
jns
jnp
jb
jb
jge
jg
jb
jb
popa
bound
jb
jb
gs
jb
push
jb
jb
insl
outsb
outsl
jb
jb
push
push
push
push
jb
jb
push
push
push
push
jb
jb
pop
pop
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
inc
inc
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
xor
xor
jb
jb
xor
ss
jb
jb
cmp
cmp
jb
jb
cmp
ds
jb
jb
and
and
xor
xchg
and
inc
mov
push
clc
sub
mov
push
enter
insb
outsl
cmc
ret
cmp
xor
sbb
sqrtps
inc
xor
push
arpl
and
sub
sbb
xchg
mov
inc
outsl
add
push
imul
jo
or
add
adc
xchg
pop
orl
lret
daa
cmp
or
test
imul
add
adc
mov
jae
je
loop
mov
mov
insb
int
jg
mov
enter
movsl
or
xorl
adc
adc
gs
mov
inc
mov
inc
dec
cmc
int
sbb
add
cs
outsb
int
paddsw
add
cs
jo
outsl
sbb
push
inc
popa
jae
aaa
in
mov
or
adc
xor
jl
or
push
xor
fwait
dec
divl
adc
mov
bswap
insb
insl
inc
subb
fwait
decl
push
push
dec
outsl
jo
je
push
inc
sub
or
adc
mov
loopne
nop
and
add
sbb
adc
xor
cmp
aas
mov
loopne
out
push
fwait
cmp
pop
adc
rorl
and
inc
jb
fimull
enter
sub
bound
adc
or
dec
jl
jp
ss
lods
pop
imul
fidivl
or
inc
inc
imul
pop
inc
outsl
jb
jae
es
pop
outsl
lock
mov
pop
cld
ss
sbb
and
testb
jbe
push
aad
mov
inc
lahf
mov
insl
rorl
xor
inc
push
push
js
in
incb
and
imul
cmpsl
inc
sub
imul
rclb
hlt
pop
loop
stc
cmp
cmpsb
and
and
or
stc
loopne
inc
and
div
or
mov
lret
add
icebp
iret
pop
adc
sti
aam
mov
inc
push
nop
add
pop
aas
rclb
sti
ret
push
pop
pusha
cmp
int3
adc
jmp
idivb
and
dec
insb
dec
aas
aas
push
push
dec
gs
enter
jo
jo
mov
cmp
lahf
sub
sub
pop
pusha
mov
mov
mov
jge
push
imul
jns
sub
push
ss
cmp
lea
and
push
cs
sbb
cld
inc
out
lods
inc
xchg
inc
push
mov
lahf
xchg
in
mov
add
in
cld
push
addl
add
rorl
pop
add
xchg
add
sub
xor
and
add
lcall
pop
add
push
addb
je
inc
jmp
scas
xchg
out
es
inc
mov
push
push
cmp
leave
xchg
sbb
add
add
fs
sub
decl
lds
inc
inc
xchg
add
lds
in
add
sub
enter
sbb
daa
inc
inc
inc
subl
push
lock
xchg
xor
sbb
pop
sbb
sbb
push
movsl
push
lret
js
lcall
or
ret
daa
and
pop
aas
push
int3
push
dec
or
or
ficoml
and
rcrb
and
xor
movsb
dec
imul
push
roll
js
jb
jae
loopne
mov
cmp
jo
mov
dec
jl
jne
outsb
testb
out
or
adc
push
inc
xchg
or
push
ficoml
jnp
add
push
inc
arpl
dec
lock
inc
pusha
dec
or
or
fs
dec
outsl
ja
mov
push
cld
push
xchg
add
cmp
or
dec
insb
mov
mov
push
dec
jmp
mov
sbb
sbb
dec
xor
push
cs
lcall
iret
mov
adc
mov
sbb
js
mov
pusha
mov
fisubrs
and
in
mov
ss
pusha
sub
and
fsubrl
pop
int
fidivs
int3
push
sub
movsb
sbb
add
and
jbe
mov
loopne
pop
sub
int
adc
pop
lods
movups
gs
xchg
cltd
pop
and
popa
xor
mov
insl
pop
ret
test
or
dec
mov
addr16
and
add
js
nop
xchg
mov
push
mov
fcomp
fsub
jnp
fildl
or
and
ja
outsl
andb
sbb
push
xchg
hlt
sub
imul
push
and
push
sub
insb
outsb
mov
out
popf
push
es
add
cmp
adc
jge
pusha
in
jnp
out
pop
and
das
lds
scas
push
pusha
sub
pop
iret
js
mov
es
int3
pop
and
mov
pushw
lods
sahf
sahf
mov
pusha
and
add
sbb
pop
out
fistps
add
popa
inc
adc
fists
pop
lods
push
mov
dec
insl
mov
mov
fs
mov
loopne
daa
movsb
outsl
loopne
push
lods
xor
sarb
inc
repnz
mov
jae
div
and
nop
jae
and
inc
pushf
jne
jge
dec
lahf
mov
jbe
aam
mov
ss
sahf
imulb
mov
sub
sbb
add
jo
cmp
cmpb
or
lcall
scas
push
imul
imul
movsb
sub
sub
adc
sub
insl
mov
jae
or
cmp
mov
nop
sub
test
pop
xchg
adc
out
sbb
jo
add
movsb
push
nop
mov
jnp
jnp
aas
je
xchg
rorb
pop
mov
or
mov
fsts
add
in
xlat
mov
push
test
push
fwait
nop
adc
or
outsl
outsb
pop
inc
das
mov
pop
adc
pop
in
test
cmp
dec
sbb
jl
mov
fsubr
push
cld
test
xor
fisubrs
and
xchg
stos
cs
push
lock
xchg
dec
pop
sbb
push
cmp
or
pop
mov
xor
pop
aas
icebp
scas
mov
adc
and
aaa
dec
inc
lcall
les
ret
rol
xor
inc
dec
js
add
jne
lahf
mov
xchg
test
dec
gs
shll
inc
push
push
dec
push
push
xor
sbb
aam
xchg
outsb
pusha
fadd
push
xchg
and
insl
loopne
stc
adc
mov
movsb
xor
adc
mov
and
add
and
inc
ret
fdivs
jbe
pop
rolb
cmp
das
ljmp
push
ret
push
es
add
cmp
xchg
sub
dec
or
ficompl
lods
sub
mov
call
sbb
pop
rolb
and
pop
movl
add
sub
pop
gs
push
sahf
cmp
scas
decl
mov
dec
sete
cmp
shrb
cmp
sar
mov
push
or
notl
adc
fstl
sub
inc
cmp
adc
mov
arpl
mov
int
jnp
add
aaa
int3
adc
and
je
mov
xlat
cmp
mov
push
jb
and
stos
nop
adcl
xor
test
inc
push
jle
add
dec
cmpsb
aad
aas
xor
adc
inc
test
xor
pop
add
lret
lahf
adc
and
jge
pop
cmp
xchg
loopne
scas
or
add
cmp
lock
xor
push
std
leave
fistpl
pop
or
mov
nop
xor
push
jg
inc
adc
fbld
inc
mov
mov
add
push
cmpsl
adc
fisttps
lock
or
rolb
jp
scas
arpl
repz
iret
arpl
jb
outsl
outsb
inc
in
pop
orb
insb
imul
push
xchg
jbe
add
jb
insb
gs
add
fildl
gs
insb
pop
ss
and
pusha
addr16
imul
cwtl
inc
dec
xchg
pusha
dec
pop
iret
pop
gs
insb
outsl
ja
xchg
fildl
inc
jne
push
and
addl
mov
pop
or
jns
push
fadds
add
ja
jge
pop
movsb
insl
inc
dec
stc
adc
data16
push
dec
xor
adc
xor
popa
test
dec
outsl
pop
jo
push
pop
es
subb
or
es
inc
push
addr16
pop
jnp
or
inc
je
inc
push
xchg
int3
xchg
stos
aam
lods
insb
mov
or
cld
shll
jg
gs
or
insl
das
push
fwait
cmp
daa
pop
xchg
fs
lahf
sbb
xor
test
pop
or
pop
rcrl
push
andl
xchg
imul
aaa
adc
adc
jge
or
outsw
inc
push
sub
jg
pop
outsb
jne
inc
icebp
ja
xchg
daa
shufps
and
or
pop
xchg
rcrb
arpl
cltd
sbb
add
sbbl
imul
das
cmp
int
pop
xor
popa
leave
or
sahf
jge
cmc
add
out
push
pusha
jbe
pop
fistpll
xlat
cltd
mov
inc
mov
fwait
adc
adc
mov
addr16
jg
testl
dec
inc
push
push
inc
push
add
test
inc
inc
xchg
xor
notl
dec
inc
dec
dec
arpl
sub
jnp
inc
inc
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
insb
lods
jge
dec
and
out
inc
inc
xor
xor
adc
inc
dec
inc
and
inc
pusha
and
xor
inc
dec
lcall
push
dec
dec
push
dec
dec
mov
aam
fcmovnbe
das
sbb
mov
and
inc
inc
dec
push
mov
dec
inc
dec
inc
inc
jae
or
push
dec
pop
adc
fwait
aas
inc
inc
push
push
push
dec
push
inc
scas
dec
insl
sbb
push
mov
dec
or
jno
mov
clc
push
mov
mov
js
andb
rcl
add
pop
jl
adc
popf
add
mov
pusha
jl
orb
sbbb
jne
add
repnz
mov
ss
pop
mov
lea
outsl
adc
mov
or
fyl2xp1
lea
mov
sub
cmovne
pusha
pop
cmp
les
push
add
push
or
add
add
sub
dec
pusha
inc
out
sbb
mov
inc
add
xor
jo
xor
in
push
jp
cwtl
es
out
mov
or
xchg
add
stos
addr16
pop
aas
sub
lods
add
jmp
loope
sub
xchg
loope
sub
into
cltd
jl
addr16
add
loopne
repnz
ret
mov
dec
jbe
imul
sbb
fdiv
subl
inc
std
xchg
out
das
loopne
adc
lgs
inc
add
sbb
ja
icebp
cmp
or
mov
cmp
jo
inc
in
sub
cli
das
cwtl
add
insb
test
adc
push
cmp
fwait
outsb
adc
inc
clc
push
cmp
or
lret
cmp
into
shlb
lret
std
ds
mov
jp
adc
int3
je
icebp
or
mov
aad
push
ret
xchg
dec
out
xchg
adc
test
inc
or
enter
outsl
push
testb
je
rorb
jmp
adc
mov
aam
add
or
divb
mov
adc
lea
incb
dec
gs
mov
mov
cmp
mov
nop
adc
jo
sarl
dec
pop
xor
movb
push
fsubs
jne
loop
add
xor
popf
fstpt
inc
fildl
or
jmp
push
lods
gs
mov
push
or
sbb
mov
out
jmp
dec
add
xor
sbbl
dec
fadds
xor
sbb
or
xchg
fiaddl
inc
sub
mov
ficoml
test
nop
push
inc
sub
mov
test
in
add
dec
jg
sbb
and
dec
xchg
dec
clc
sbb
or
and
dec
mov
dec
dec
sub
inc
xor
test
cmpl
dec
mov
fdivrs
dec
das
xor
push
das
call
neg
push
inc
jp
mov
nop
xchg
lret
dec
sub
cmp
mov
sbb
inc
sbb
and
xchg
pop
nop
sbb
push
push
clc
and
clc
mov
movb
rolb
add
rolb
ss
in
pop
jb
and
ret
inc
sbbl
inc
loopne
in
loopne
xor
lods
inc
faddl
aad
movsl
add
or
add
aaa
dec
es
cmp
push
cmpsb
add
inc
inc
pop
lock
dec
xor
xor
xchg
push
push
daa
push
pop
push
insb
cmpsl
add
jne
fistpll
cli
inc
jne
subl
mov
inc
test
xor
in
das
das
in
cmc
pop
dec
in
mov
xchg
cmp
or
push
cmp
jns
enter
lock
jl
shl
mov
sbb
mov
xchg
adc
in
dec
leave
or
dec
in
in
ud1
and
pushf
inc
push
jl
pop
inc
and
inc
sub
nop
outsl
cmp
push
pop
push
nop
pop
sbb
add
aas
cmc
inc
in
or
nop
cld
inc
push
out
test
outsb
xchg
mov
and
pop
mov
xor
andb
add
pop
or
ja
push
test
sub
sub
dec
fistpll
adc
mov
mov
scas
insb
das
cmp
or
data16
inc
loopne
push
lret
jnp
fwait
outsb
or
fcomip
jmp
je
cmpsl
mov
add
add
jp
gs
lock
nop
out
xor
in
adc
push
aas
imul
xchg
je
loope
mov
nop
adc
and
pop
jg
enter
cmp
add
push
mov
repnz
push
ret
adc
das
lahf
or
hlt
and
mov
fmull
in
and
and
inc
and
mov
arpl
mov
bound
mov
popa
inc
or
or
mov
lock
imul
mov
add
mov
adc
cmp
mov
adc
fbld
and
sbb
push
or
push
add
loopne
jle
or
pop
or
or
jbe
xlat
xor
push
push
or
push
push
int3
pop
popa
or
into
imul
or
in
call
and
and
ja
int3
xor
mov
mov
xor
bound
pop
xchg
flds
inc
ljmp
ss
xchg
iret
pop
inc
clc
mov
add
or
jecxz
pop
or
popa
mov
rcrl
repnz
push
push
in
mov
inc
xor
inc
int
sbb
ror
add
push
insl
pop
mov
sub
les
incl
sbb
lea
movsb
insl
mov
clc
cmpsb
popf
push
mov
cmpsl
add
xor
inc
sbb
leave
aam
pop
or
sub
and
xchg
loopne
in
sbb
and
nop
es
pusha
push
pop
jb
iret
mov
dec
or
ljmp
test
nop
andb
adc
stos
je
ret
lods
adc
jle
cmp
aaa
cmp
sbb
dec
test
jle
cltd
orb
pop
mov
mov
adc
cmp
rcll
cmp
das
insl
fmuls
cmp
xor
pop
adc
sub
xor
and
repnz
aad
adc
dec
xchg
cld
adc
push
push
andl
cld
scas
mov
adc
pop
xchg
jb
arpl
jo
pop
jb
scas
cmpsl
inc
pop
inc
sub
jbe
inc
add
jb
inc
or
inc
jae
push
subl
shlb
inc
or
je
mov
inc
xchg
push
mov
repnz
aad
movsb
mov
shll
add
dec
and
out
push
sbb
add
es
cmc
cmp
jg
jae
add
arpl
and
orb
mov
inc
rorb
lcall
aam
lock
not
and
mov
dec
sarb
ret
je
jb
xchg
dec
push
push
push
bound
mov
add
adc
cmp
movsb
push
add
or
cmp
mov
mov
xor
push
xor
rolb
mov
decl
enter
sub
repnz
xor
dec
mov
pop
dec
mov
sbb
loopne
ljmp
xor
dec
push
movsl
sbb
dec
scas
sub
mov
iret
testb
xchg
dec
mov
out
ds
xchg
das
pop
enter
mull
mov
les
inc
les
xor
push
jns
ja
aas
xor
nop
mov
daa
jns
insl
dec
inc
cmp
repnz
cmp
call
inc
pusha
pushf
and
insl
add
nop
cld
xor
inc
push
push
inc
mov
cmp
mov
sysexit
mov
leave
sti
adc
das
lea
ficoml
lock
add
mov
addr16
in
es
add
popa
jl
icebp
cmp
imul
jge,pt
add
dec
xchg
adcb
ds
jne
adc
push
int3
push
push
jl
xchg
pusha
inc
dec
test
cmp
js
xchg
push
fisttpl
pusha
or
cmc
fwait
jno
fistl
js
dec
jnp
sub
pop
sbbb
dec
mov
mov
call
mov
sbb
in
push
shll
aam
jle
push
out
pop
imul
insb
push
js
or
sub
or
adc
inc
add
sti
inc
pop
enter
leave
mov
mov
xchg
je
rorb
je
ficompl
loopne
into
mov
clc
testb
shl
jo
divl
shl
and
dec
rcrb
pop
sar
push
pop
dec
pop
aas
fsub
xor
mov
lahf
sarb
je
xor
in
xor
sub
test
sub
add
inc
pop
sub
in
test
push
out
xor
push
stc
jecxz
mov
stos
loope
loope
test
push
cwtl
cmp
sub
int3
inc
ds
push
and
xchg
push
add
mov
rcrl
adc
cmpsb
fdivrl
or
mov
lock
push
sbb
lock
mov
mov
and
cmpsl
sbb
and
fdivrl
insl
insl
mov
jns
pop
or
loopne
pop
rorb
inc
out
adc
sbb
lock
faddl
inc
inc
das
inc
push
dec
push
jo
lea
ret
sbb
loopne
movb
mov
push
movl
inc
pop
out
out
adc
adc
or
sbb
dec
cmp
punpckhdq
adc
fisubrl
add
and
mov
fwait
xchg
lea
add
mov
mov
or
mov
mov
mov
add
inc
mov
inc
add
lods
adc
push
sub
adc
aas
dec
mov
jmp
lcall
push
mov
pop
pop
pop
push
add
cld
xor
dec
jne
mov
add
adc
loopne
fnstsw
push
sbb
inc
or
and
ljmp
aam
dec
lods
ds
in
mov
mov
dec
js
and
icebp
dec
push
inc
and
mov
enter
push
dec
decb
sbb
jecxz
push
out
fildll
adc
jecxz
mov
mov
jmp
cs
clc
sti
movw
mov
cld
push
mov
sbb
rep
rclb
push
adc
jl
out
push
jnp
or
push
rolb
jne
ds
xchg
sub
fidivrs
std
lea
mov
push
pop
push
cmp
lret
cmpsb
cmp
push
addr16
out
and
fbstp
nop
cld
icebp
pop
mov
pusha
lods
xor
pushf
jle
jl
cmp
jae
sbb
cmp
push
xchg
push
add
rcl
push
les
icebp
aaa
dec
sub
fildll
push
movzwl
lea
or
add
push
clc
int3
xchg
lods
adc
mov
add
test
mov
ljmpw
pop
mov
pop
pop
push
push
dec
clc
lret
or
and
xor
rcll
or
aas
push
xor
adc
dec
mov
mov
out
cli
xchg
and
addb
int
inc
xlat
add
mov
add
and
xor
stos
push
xor
push
rorb
mov
je
push
push
push
xor
push
add
xchg
jecxz
decb
mov
add
inc
push
outsl
int3
mov
adcb
mov
mov
pop
cmpsl
fucomip
mov
or
push
push
xor
ds
loope
push
test
scas
dec
cmp
das
fcoms
or
les
in
pop
jge
add
scas
dec
rorb
or
adc
pop
popa
in
movsb
nop
hlt
cld
es
sub
push
in
pop
ja
js
add
pop
jl
rolb
out
imul
repz
or
and
stos
shrl
movl
in
and
aaa
sbbb
insb
pop
cld
push
push
inc
nop
add
mov
add
pop
addb
out
test
pop
lock
test
inc
mov
xchg
xchg
inc
pop
jl
ret
addr16
loope
add
xchg
pop
add
or
pop
add
mov
sbb
pop
dec
cmp
fadd
jg
popf
inc
push
mov
cmp
jg
test
add
icebp
jl
aaa
fdivrs
xchg
cmpb
jg
bound
add
lods
cmp
jle
sub
sbb
sub
or
push
push
pop
jne
inc
mov
and
xchg
lds
or
or
or
adcb
cli
data16
push
sbb
ds
add
dec
jae
pop
fcomp
xchg
pop
add
sarb
rol
insb
xchg
sbb
scas
into
test
jbe
in
mov
add
test
pushf
pop
fsubr
and
pusha
ds
mov
push
loope
or
loopne
test
or
in
pop
ret
ret
push
jg
sahf
sbb
fimuls
loopne
es
cmp
dec
mov
into
gs
sbb
mov
inc
dec
jne
cmp
je
adc
pop
out
inc
xor
ret
loop
cli
sbbl
lock
push
repnz
add
sub
mov
add
mov
bound
inc
lods
cmp
enter
or
fsubrl
insl
imul
mov
pop
cwtl
ret
test
mov
insl
mov
push
mov
faddl
les
ret
lret
call
xor
pusha
jge
negb
pop
cmp
add
push
mov
push
mov
sbb
fdivrs
aad
in
inc
mov
stos
cmpsl
push
sub
or
inc
aaa
mov
and
pop
push
stos
shlb
mov
out
aas
mov
inc
aam
in
sub
stos
in
test
mov
adc
or
sarb
jmp
xor
sbbl
sub
cmp
jl
ret
lea
dec
push
das
sbb
xchg
loope
push
test
in
sub
inc
jl
pop
bound
lock
jb
xor
lahf
test
xor
add
sahf
je
shrb
movl
pop
add
mov
je
dec
or
jle
lock
jmp
push
push
in
and
jmp
mov
jmp
adc
inc
sarl
mov
sub
or
inc
and
jae
sub
add
add
push
push
sub
dec
push
sub
push
adc
mov
fcom
adc
dec
imul
je
lock
imul
add
adc
roll
sub
adc
cmp
add
push
dec
or
popa
pop
incb
inc
mov
fldl
lods
xlat
hlt
js
cmp
rcr
add
aam
leave
adc
inc
hlt
sbb
inc
jbe
pop
jmp
push
xor
int
pop
int3
xor
add
ficoml
sbb
lcall
jns
xor
pop
clc
clc
push
cs
hlt
hlt
pushl
movsl
sbb
add
sbb
push
or
pop
cmpsb
and
cmpsl
lods
icebp
adc
imul
dec
or
push
sbb
adc
call
pusha
xor
out
mov
jo
fisubs
test
mov
pop
push
push
in
hlt
int3
push
jmp
or
loopne
or
mov
clc
xchg
out
popf
call
aam
inc
and
or
mov
faddl
loopne
das
add
push
add
lock
in
and
mov
data16
pop
add
or
xor
mov
xchg
push
in
mov
mov
or
mov
xor
lods
data16
mov
mov
mov
mov
jp
push
outsb
jle
mov
inc
add
cmpsb
insl
fcmovnbe
add
test
out
in
in
imul
mov
out
push
fcoml
nop
scas
lock
and
xchg
adc
cvtpi2ps
add
push
jmp
sar
adc
lcall
js
jno
pop
mov
or
inc
push
or
and
xor
lcall
add
xorl
mov
popa
das
in
push
adc
cmp
mov
fsubs
or
popa
xchg
or
dec
mov
adc
sarl
or
or
xchg
ss
je
imul
inc
int3
mov
pop
outsl
dec
in
mov
clc
stc
inc
dec
hlt
adc
xchg
lods
cli
arpl
mov
or
jmp
adcl
or
cli
cmp
jns
fcomps
push
cmp
inc
add
cmp
arpl
mov
add
jl
push
cmp
mov
iret
mov
ret
mov
js
inc
push
roll
sbb
daa
cmp
mov
ficoml
push
adc
xorb
js
daa
xchg
out
cmpsl
pop
ret
cmp
push
adc
pop
fimull
adcb
and
mov
sarb
pop
xor
push
mov
inc
outsl
jb
lret
outsb
push
fs
add
or
test
add
das
outsb
movsb
mov
addr16
add
jae
stos
pop
mov
xchg
roll
stc
rorb
in
add
adcb
repnz
int3
dec
scas
push
psubw
inc
add
clc
mov
dec
mov
cs
mov
in
mov
lock
sbb
cld
sti
addb
test
inc
push
pop
add
xchg
arpl
ja
popw
imul
bound
daa
pop
sbb
clc
and
bndstx
pop
adcb
gs
mov
mov
add
sub
add
outsl
icebp
popf
mov
ficoms
lret
xor
ja
push
sub
adc
lea
mov
cltd
pop
push
outsb
sbb
sub
xchg
mov
push
int3
and
push
sub
jle
and
inc
cmpl
inc
cmp
gs
or
movb
clc
clc
popl
xchg
pop
push
xlat
xor
push
gs
flds
push
outsl
jle
pop
push
imul
outsl
xorl
dec
push
xor
sbb
rorb
adc
push
inc
inc
sub
mov
add
xor
adc
sbb
pop
mov
mov
out
jno
imul
or
sub
cmp
clc
fs
cmpl
stos
mov
enter
or
xchg
fbstp
and
pop
int3
mov
cmp
outsl
and
push
enter
pop
add
popaw
fstl
jmp
or
or
push
js
mov
push
add
mov
orl
and
out
jne
mov
dec
mov
push
dec
mov
test
adc
xor
mov
rolb
pop
icebp
jns
xor
adc
shr
les
pop
das
clc
rorb
je
mov
sub
dec
faddl
fildl
and
loopne
test
or
mov
push
pop
xchg
pop
mov
push
adc
sbb
sbb
add
fisttps
adc
pusha
ss
lods
imul
test
std
nop
push
adc
or
fcoml
add
pop
ud1
xor
in
das
xlat
dec
inc
loop
arpl
fdivr
pop
dec
add
jo
ja
enter
sub
cmp
jno
jmp
xchg
iret
fidivs
aaa
or
or
rcl
push
das
xor
push
xor
les
and
sbb
xlat
sbb
and
mov
test
xchg
mov
inc
fcomp
sbb
jl
mov
fs
leave
dec
inc
dec
ljmp
and
ret
je
pop
shrl
cmp
add
push
inc
sub
int
push
sahf
inc
outsb
inc
mov
and
add
xor
fldl
bound
pop
xchg
adc
push
sbb
cmpsb
and
fildl
js
sysexit
add
arpl
std
xchg
inc
add
outsl
push
inc
ja
dec
orl
mov
cmp
icebp
mov
or
rcll
int
and
mov
pop
push
sbb
mov
sub
pcmpgtb
push
outsb
and
insb
outsl
add
daa
push
movsb
lock
sbb
fiaddl
xchg
mov
mov
push
rorb
add
int3
dec
adcb
xchg
push
out
push
jo
mulb
ret
fildl
fs
stos
sbbl
clc
gs
iret
cld
sbb
mov
pop
jo
mov
xor
mov
jmp
jne
and
cmp
cli
js
jb
push
adc
fnstenv
js
pop
lock
daa
pop
xor
jns
or
imul
mov
sub
popa
sbb
negl
push
mov
shlb
sti
push
insb
mov
aaa
push
xor
jnp
shlb
lea
adc
in
pop
sbb
fists
in
inc
cs
push
or
in
mov
xor
pop
int3
add
dec
sbb
lahf
or
mov
jg
clc
fwait
dec
mov
mov
test
push
sub
sub
push
sub
scas
cwtl
xchg
fsubl
addr16
push
cmp
jb
es
pop
and
pusha
stos
out
jo
dec
loope
xchg
cltd
or
xchg
out
in
das
add
add
mov
xor
push
fwait
or
ds
push
pop
adc
pop
imul
mov
loop
out
loop
jg
push
call
push
and
and
aaa
inc
pop
test
and
negl
adc
and
lods
inc
sub
js
xchg
dec
in
mov
mov
mov
lods
inc
cs
jmp
mov
es
aam
and
add
and
clc
lock
dec
inc
and
loope
add
adc
ss
fadds
mov
or
push
push
jecxz
call
pop
pop
sarb
mov
push
enter
sbb
or
adc
adc
outsl
pusha
sub
andb
adc
mov
adc
cmpsl
inc
je
lock
cwtl
daa
dec
push
add
push
and
push
xorb
inc
sub
in
xor
dec
adcl
cmpsl
in
addr16
dec
mov
dec
sbb
add
sub
inc
pop
popf
xor
add
sub
xchg
adc
dec
add
sub
sbb
add
addb
ficomps
mov
push
push
sti
cmp
push
add
jp
fcoms
jns
adc
in
dec
repz
test
mov
or
test
aam
das
or
xchg
xlat
fmuls
push
arpl
push
in
pusha
adc
jne
inc
add
repnz
cmp
ja
xchg
lahf
push
add
mov
xchg
popa
ja
inc
in
xor
dec
cmpsl
aas
out
and
sbb
dec
rolb
or
insl
mov
inc
xor
jg
mov
push
push
leave
mov
sbb
mov
aaa
in
icebp
dec
fs
shll
add
bound
pop
mov
and
add
push
and
adc
jg
xlat
or
and
or
pusha
push
and
bts
mov
push
movsl
cltd
and
sub
cld
addr16
add
and
inc
je
push
inc
nopl
imul
adc
sub
leave
loopne
lea
sti
pop
dec
test
dec
enter
fs
and
or
test
xor
xor
movsb
or
test
jb
sub
cmpsb
adc
push
push
push
movsb
in
popa
jns
js
mov
cmp
mov
adc
mov
lods
fidivrs
mov
int
lcall
data16
mov
clc
add
subl
sar
push
add
hlt
pop
jp
clc
pop
add
mov
sbb
pop
jl
mov
push
xchg
pusha
xchg
nop
fs
mov
call
ret
or
ljmp
into
or
rorb
fimull
jo
test
push
sub
or
xchg
pop
mov
push
mov
push
push
repnz
add
lds
push
ret
fdivr
iret
inc
std
add
jae
lock
and
pop
jnp
xchg
inc
sti
mov
fisttpll
das
sbb
adc
mov
test
pop
je
add
push
mov
jl
mov
cld
mov
sti
mov
test
sub
test
imul
pop
loopne
test
je,pn
cmpb
fcomps
movsb
or
xlat
push
mov
adc
push
loop
and
stos
jno
mov
jne
stc
adc
adc
scas
xor
nopl
call
faddl
shl
lcall
sbb
pusha
inc
mov
jnp
lds
sbb
inc
js
pop
sub
mov
cmp
pop
push
sbb
add
adc
pop
fs
adc
test
jno
sbb
xchg
das
aaa
in
push
aas
or
adc
or
adc
nop
or
sbb
or
or
enter
dec
push
mov
frstor
ficoml
push
dec
cmp
jle
dec
fs
or
pushf
jo
dec
cmp
sub
jp
mov
inc
cmp
mov
xor
or
jle
ss
xor
dec
sbb
jg
push
in
pop
pusha
jae
push
sbb
jae
adc
addl
sbb
int
pop
sbb
sbb
and
icebp
and
add
insl
in
add
daa
pop
lahf
cmpl
inc
sbb
insl
push
std
mov
sbb
cmc
jmp
jl
cmpb
adcb
movsb
inc
lock
push
sbb
notl
sub
adc
cltd
inc
xor
ret
aas
pop
pop
jp
mov
or
pop
sub
jmp
sbb
out
test
sub
js
ret
sub
clc
push
popa
popa
and
movsb
inc
je
inc
push
je
aam
je
loopne
pop
cwtl
loop
inc
adcl
jbe
jmp
jmp
push
mov
les
xchg
ljmp
repnz
mov
sbb
lock
subb
inc
add
pop
ret
sbb
push
jae
cmp
add
xchg
cmp
arpl
in
cmpb
dec
adc
push
pop
in
xchg
into
data16
pushf
mov
lock
inc
pop
or
jae
mov
in
addb
mov
mov
rolb
repnz
or
mov
and
fmul
xor
add
test
xchg
add
call
loopne
add
and
fadds
jl
pushf
cmpl
ja
testb
push
sbbl
or
insl
dec
add
mov
pop
sub
aas
mov
shll
addb
aam
and
pop
dec
and
xor
cmp
insl
fnsave
pop
xor
imul
push
jae
bound
stos
dec
xchg
sbb
in
push
shlb
push
xchg
loop
or
jne
and
add
add
cmp
add
add
xchg
xor
in
mov
mov
sub
out
stos
shl
dec
iret
mov
sbb
dec
imul
adcb
pop
add
sbb
dec
mov
sub
xor
bound
xor
xchg
xchg
inc
pop
pop
test
or
cmp
negb
rolb
sti
test
xchg
popf
push
jecxz
xor
add
arpl
int3
and
aaa
mov
sbb
xor
orps
xor
bound
sub
mov
pop
das
mov
or
mov
pop
pusha
pop
aad
and
add
cmpsl
clc
and
aas
adc
es
or
or
pop
ja
dec
fistpll
push
mov
loope
mov
insb
jge
mov
pop
neg
cmpsl
cmp
je
mov
sbb
or
inc
or
dec
js
add
pop
inc
push
lock
mov
pop
sahf
and
es
je
data16
pop
lock
add
inc
lahf
inc
icebp
jp
jno
in
mov
and
push
lock
xchg
xor
call
bound
xchg
add
adc
xorb
daa
not
add
pop
rolb
fs
es
adc
jb
shll
inc
loopne
xchg
fbld
sbb
and
add
xchg
xchg
incl
decl
pop
jmp
outsl
sti
mov
lods
sbb
sbb
jns
repz
sbb
sbb
jne
sub
or
sub
add
roll
cmovg
js
push
adc
pusha
mov
mov
dec
mov
push
mov
arpl
in
adc
cs
sub
dec
cld
lret
test
or
ret
pop
add
enter
filds
push
or
les
adc
aas
inc
cmp
mov
js
mov
cwtl
or
add
and
ds
movl
xor
add
sub
and
lahf
std
xchg
mov
inc
call
mov
push
fmull
sahf
aaa
xor
sbb
popf
push
and
jbe
pop
or
stos
ds
sub
sbb
xor
sub
fs
or
dec
xchg
jns
enter
outsl
sbb
ds
insl
mov
pusha
stos
add
cmp
add
pop
imul
sbb
adc
jmp
popa
jbe
das
sbb
pop
in
mov
inc
ja
cmp
je
mov
pop
daa
sub
roll
jbe
imul
inc
insl
fdivr
inc
mov
push
cmp
inc
in
jne
jl
and
pop
rolb
adc
xor
dec
mov
xchg
jne
mov
xor
test
stc
push
add
or
nop
and
inc
cmc
je
sub
inc
add
pop
inc
das
adc
and
fisttpl
mov
xor
imul
je
jo
jg
xor
shrb
and
leave
xchg
adc
xchg
inc
lret
movl
push
hlt
fidivs
pop
mov
fwait
jbe
sub
xor
inc
adc
pop
pusha
pop
mov
push
mov
push
and
rolb
stos
add
and
jmp
push
call
mov
inc
xlat
xor
mov
push
push
sub
in
push
sbb
fcoms
xchg
ja
xor
loopne
mov
loopne
or
shrb
and
mov
push
or
or
call
push
inc
lock
xchg
xchg
test
cmp
jbe
sar
sub
push
jecxz
dec
lods
imul
xor
sbb
dec
int
sahf
pop
pop
xor
jg
call
add
into
lock
sub
fldl
inc
and
inc
dec
xor
subl
add
lods
add
jnp
cmpb
inc
sub
and
ss
sbb
daa
test
push
sub
shlb
scas
push
popa
inc
bswap
mov
mov
stc
add
lods
loopne
ds
subl
pop
lcall
mov
nop
dec
mov
fidivrl
leave
hlt
mov
mov
insb
movb
pop
test
adc
in
test
fsubrs
test
stos
sub
push
setae
addb
arpl
fldt
lock
mov
and
sbb
cmpsb
lock
imul
mov
mov
sub
sub
or
and
shlb
js
in
popa
cmpsb
inc
or
cmp
or
test
aaa
fmuls
addr16
inc
xor
inc
in
pop
shlb
push
sub
cli
cmpb
mov
xchg
inc
sub
xchg
push
add
pop
test
and
sub
dec
xchg
gs
or
jns
out
push
fildl
call
ja
mov
lcall
xor
cmp
ss
pop
push
jp
lds
or
sbb
es
add
xchg
pop
adc
lods
dec
imul
ja
lods
and
sub
or
xor
cmp
movsb
jo
stos
and
xchg
push
mov
mov
imul
sarl
xor
push
mov
cmp
sub
sub
or
sub
add
sahf
sub
jno
out
es
xor
cld
or
push
pop
cld
or
js
sbb
dec
test
add
mov
push
add
fadd
or
pop
movb
push
and
cwtl
pop
xchg
jno
test
pop
jge
cld
mov
mov
or
add
pop
add
je
rcll
lret
cs
int
scas
push
push
test
jmp
push
jnp
pop
mov
lcall
ret
shrl
movnti
inc
adc
test
and
sbb
sub
or
push
sbb
adc
ljmp
mov
sub
dec
sub
scas
shll
inc
cmp
pop
sti
mov
lds
add
push
cmp
push
adc
ds
pop
and
sbb
insb
and
dec
outsb
adc
insl
jo
adc
xchg
mov
jl
gs
pop
gs
test
or
add
inc
rcll
call
test
std
call
sbb
inc
mov
pop
dec
inc
or
inc
leave
and
push
sbb
pop
and
sahf
adc
pop
adcb
dec
inc
or
pusha
or
mov
orl
xchg
mov
mov
sbb
adc
das
adc
mov
push
adc
jno
adc
jo
out
loopne
push
and
inc
lock
add
add
jo
jnp
addb
fnstenv
pusha
stos
add
test
and
and
movups
jns
pop
fadd
xor
das
sub
jno
insb
add
lahf
or
jnp
add
hlt
out
add
clc
sbb
lock
addl
pop
sub
add
sub
movl
jecxz
loope
inc
mov
jne
cmp
addb
sbb
pop
dec
call
sbb
and
inc
outsl
xchg
add
jmp
cmovb
or
in
sub
push
mov
cmp
jmp
lahf
or
sbb
jp
xchg
adc
adc
call
adc
pop
arpl
push
call
mov
jno
pop
ja
dec
jecxz
pop
mov
cltd
lods
outsl
push
mov
sbb
pop
ja
jb
jp
lds
adc
add
mov
push
or
sbb
add
popa
push
mov
pop
and
mov
cmpl
data16
ja
out
lds
in
test
test
mov
iret
sub
ret
ret
daa
in
adc
aaa
iret
jne
mov
xchg
imul
add
inc
push
xlat
adc
mov
mov
lret
int3
cmp
xchg
dec
int3
ffree
insb
ja
pop
sub
test
jmp
add
mov
orl
xor
dec
pop
fisubl
sbb
dec
or
adcl
mov
sbb
mov
mov
dec
movb
push
xor
sbb
cmpb
testl
jge
adc
inc
xchg
mov
push
call
movsb
test
sub
pop
dec
cmp
push
pushf
lret
scas
sbb
push
push
leave
adc
pusha
add
rolb
sub
fwait
ret
jp
mov
push
dec
mov
stos
and
adc
cmp
into
movb
stos
adc
jmp
jl
test
jecxz
or
arpl
shl
add
xlat
daa
roll
movb
add
inc
and
mov
jecxz
lahf
ret
inc
ret
es
push
outsl
lea
and
mov
pushf
or
lcall
jo
add
lock
mov
sbb
lods
jo
inc
jmp
cmp
les
sub
insb
mov
adc
jg
lods
adc
and
jno
in
lcall
pop
js
sbb
add
daa
pop
mov
pop
montmul
cmpsb
push
push
push
dec
jmp
xchg
loopne
imul
stos
xchg
rcr
adc
or
add
ss
pop
imul
fstpl
sbb
mov
stos
mov
les
sbb
in
adc
iret
sahf
or
inc
sbb
insw
rcrb
push
sub
dec
mov
imul
ss
call
xchg
xor
mov
lahf
aad
jp
adc
ficomps
jl
clc
push
addl
lret
mov
push
out
pop
sbb
cltd
add
push
call
daa
pop
pop
add
inc
and
cmp
test
je
test
inc
adc
sti
and
popa
dec
or
mov
ret
inc
in
or
xorl
jne
ss
mov
push
addr16
push
cmp
jl
imul
or
je
inc
dec
add
xor
mov
mov
push
add
dec
pop
xchg
fadds
imul
mov
xor
lock
daa
jbe
dec
or
in
inc
mov
imul
inc
mov
rorl
shl
sub
or
in
jno
sahf
push
leave
inc
push
ror
pop
lods
adc
sub
jo
cmp
aam
jmp
jbe
mov
enter
es
hlt
inc
scas
xchg
cmp
mov
je
adc
mov
add
and
adc
ja
xchg
xchg
cmp
push
outsb
sahf
int3
in
movsb
adc
aam
adc
cmp
stc
adc
lcall
add
or
mov
in
xchg
xchg
cwtl
sahf
leave
inc
xchg
cmp
sbb
lahf
ja
sub
in
out
or
insb
rcll
pop
jbe
adc
adc
dec
and
push
adc
fs
mov
push
push
and
jnp
sbb
adc
and
and
and
add
in
loopne
nop
or
out
mov
mov
rclb
sbb
pop
fsubs
mov
pop
adc
push
mov
movsb
fisttps
xor
or
add
lds
push
mov
jle
test
push
and
push
mov
xchg
xchg
fimuls
dec
sub
int
sub
adc
or
hlt
cmpsb
lock
dec
push
jle
fists
push
push
jmp
sbb
or
repnz
mov
imul
pop
cld
add
mov
shrd
xor
or
dec
mov
xor
sbb
adc
push
sbb
push
inc
or
pop
in
xchg
mov
push
jo
xchg
adc
jl
enter
xacquire
inc
add
or
pusha
das
xchg
or
outsl
adc
push
cmp
push
push
sbb
push
jo
xchg
int
scas
xor
xchg
mov
lea
dec
adc
push
jns
ja
or
adc
je
nop
lea
cmpb
or
sbb
jne
jo
into
lock
or
adc
add
cmp
and
adc
bound
inc
fidivrl
sub
and
or
pop
je
fwait
mov
push
and
jecxz
sub
mov
movsl
inc
xchg
jb
jp
push
add
cmp
xor
pusha
rcl
movsl
mov
and
es
adc
xlat
mov
mov
mov
lahf
inc
js
test
jge
inc
pop
pop
arpl
jb
test
xchg
mov
lret
test
jmp
popf
ljmp
pop
enter
dec
sbb
xlat
jle
movb
rorl
sbb
cmp
mov
xor
scas
aam
test
jb
stc
mov
cmpsl
std
pop
scas
sbb
mov
push
or
jecxz
lds
xlat
push
loopne
lods
dec
pop
insb
and
movsb
add
and
fnstenv
jl
cmp
cmp
sbb
push
movsl
and
dec
and
add
cmpsb
push
out
inc
and
cmp
in
ja
mov
add
sub
cmp
out
pop
shrb
pushf
push
jg
cmpsl
in
xor
or
sub
lea
test
pop
or
sub
inc
ror
aam
adc
imul
mov
push
sbb
cmp
jae
inc
pop
aam
aaa
arpl
cmp
adc
jo
inc
lods
sub
pushf
xor
pop
ss
dec
aam
js
xor
xchg
sbb
adc
adc
rol
mov
sbb
in
daa
and
rcrl
xchg
and
popa
mov
fadd
enter
dec
jbe
mov
push
cmp
xlat
dec
dec
inc
and
or
js
pop
jmp
sub
popf
in
sbb
mov
nop
mulb
sub
dec
sub
pop
jns
bound
hlt
shlb
mov
test
pop
sub
sub
inc
sbb
sahf
add
stos
shrb
lret
adc
sub
jbe
test
and
adc
inc
aas
das
mov
imul
call
add
lock
adc
push
pop
xor
mov
popa
sub
imul
rcrl
or
test
rolb
or
xchg
lock
adc
dec
xchg
adc
movb
enter
inc
and
mov
or
popa
push
xchg
jo
je
pop
xor
sbb
mov
popf
add
lods
xchg
push
dec
jmp
sti
push
and
popa
popf
sbb
sbb
mov
sub
adc
jl
cmp
rcr
das
add
inc
cmc
pusha
jge
imul
fdivrl
lcall
xor
inc
adc
fildl
or
add
mov
mov
jle
cmc
pop
sbb
aad
push
sub
xchg
pop
add
adc
pop
push
inc
jl
jmp
mov
sub
test
loopne
loopne
cmpsb
pop
adc
movzwl
add
imul
imul
push
dec
cmpsl
outsb
testl
xchg
enter
stos
loopne
and
push
cmp
inc
push
inc
imulb
xor
insb
cmp
pop
jmp
xchg
dec
in
cmp
push
cmpsl
xchg
mov
mov
xchg
pop
add
add
pop
adc
push
adcl
ret
jae
stos
pop
and
pmullw
mov
ret
imul
testl
outsl
xor
push
daa
xor
aaa
push
or
cmpsb
add
xchg
shlb
or
shlb
pop
mov
jns
inc
mov
ret
mov
sub
xlat
pushf
lahf
aaa
sub
cmpsb
shrl
out
lds
or
cmpsl
pusha
or
imul
fldcw
pop
push
cmpsl
rclb
icebp
mov
add
mov
mov
js
enter
mov
daa
mov
adc
cs
adc
add
add
pop
and
sub
jecxz
mov
cmpsl
xor
xchg
push
das
mov
add
mov
xorb
in
popf
cmp
sub
jne
mov
inc
and
mov
inc
xchg
ja
lcall
cmp
cmpsl
subb
sbb
adcl
bound
push
aad
aas
and
push
add
dec
mov
in
ret
jb
addr16
mov
sub
sub
inc
out
pop
xchg
insb
je
sbb
aaa
add
aad
cmp
loop
and
jne
push
loop
sub
dec
jnp
aaa
mov
mov
jo
aam
lahf
js
inc
and
adcb
xchg
movsb
je
out
sub
dec
ret
push
adc
mov
push
mov
mov
xor
push
or
jge
clc
testl
repz
sbb
pop
sbb
mov
and
sub
cmp
test
shlb
adc
enter
xchg
fstps
sbb
inc
cmp
or
sub
pop
add
jne
add
jb
aam
xor
jg
pop
sbb
movsb
loop
outsb
hlt
mov
xchg
test
pop
or
mov
arpl
inc
mov
sbb
cld
sub
push
ret
mov
inc
sbb
sub
invd
movups
jne
pop
mov
insb
leave
inc
pop
add
fidivs
inc
mov
push
push
sahf
imul
adc
call
lock
arpl
shlb
pop
fcoml
loopne
les
in
nop
fnstsw
or
mov
adc
mov
inc
push
and
lret
pop
rol
test
rcl
mov
adc
data16
mov
mov
mov
mov
cmp
shlb
sub
mov
lock
das
and
sub
jl
add
lods
sub
adc
mov
sahf
and
mov
js
mov
mov
jl
enter
push
dec
addr16
jo
sarb
push
jns
push
outsl
xor
in
cmp
jmp
mov
mov
sub
aas
int3
mov
lods
int3
adc
or
mov
or
clc
mov
pop
in
nop
mov
mov
cwtl
push
test
add
testb
insb
gs
adc
sbb
pusha
mov
insb
lods
js
inc
leave
mov
mov
add
push
xchg
mov
loop
mov
pop
and
fstl
xor
jo
dec
adc
sbb
pushf
jne
mov
and
add
cmp
pop
mov
imul
test
dec
xchg
out
imul
lock
or
and
dec
xchg
adc
mov
fadds
andb
dec
push
xlat
jbe
xchg
sbb
dec
pop
outsl
jmp
sub
lret
nop
hlt
leave
leave
sub
sub
sbb
push
popf
je
cltd
test
cmpsb
sbb
aaa
adc
cmp
cmp
add
clc
hlt
lock
pushf
pushf
pushf
in
call
mov
fsub
fnsave
clc
in
clc
adc
sub
fcoms
sbb
aas
aas
pop
mov
mov
cmpl
adc
xor
mov
sub
jl
hlt
sbb
pop
aas
xor
or
push
fmul
xchg
jecxz
mov
or
cltd
std
add
in
adc
mov
jmp
lods
je
movb
out
movb
mov
mov
mov
popa
bswap
lock
je
jb
inc
mov
pop
and
mov
push
sub
inc
pop
pop
push
incl
dec
cld
and
add
xchg
xor
xor
je
push
dec
adc
dec
adc
adc
push
or
cmp
sbb
daa
enter
pop
sti
inc
adc
faddl
push
jb
addr16
js
or
es
mov
and
sbb
jo
mov
cmp
test
mov
add
in
xchg
and
or
push
popa
mov
cmp
jle
push
pop
cmp
mov
inc
adc
insb
dec
sub
call
sub
pop
and
and
movsb
push
add
pop
dec
jmp
jmp
push
sbb
sahf
imul
jmp
lods
popa
or
sar
ret
jmp
push
lock
dec
rcll
nop
test
daa
adc
mov
sbb
shlb
mov
inc
sub
or
push
or
jmp
xor
arpl
imul
lock
call
jl
inc
push
mov
or
outsl
mov
nop
or
adc
je
arpl
inc
dec
sahf
out
jne
sub
mov
add
or
dec
fbld
jne
xor
sub
clc
adc
jl
cmp
lods
or
std
pop
mov
push
adc
jle
lea
loope
mov
fcomps
sbb
ds
jb
push
sub
xor
gs
rcrl
push
decb
in
push
lock
dec
inc
pop
cmpsl
sub
dec
adc
jb
sarb
inc
sub
adc
adc
dec
test
jo
test
jge
cmpsb
sub
push
test
mov
adc
add
ret
pop
test
mov
mov
cmp
adc
inc
in
inc
or
gs
pop
sbb
sub
out
mov
fmuls
and
clc
pop
sbb
loop
and
xor
push
sub
cmpsb
test
jne
in
js
repnz
jmp
ds
add
adc
loop
mov
push
push
rorb
adc
add
test
inc
outsb
jne
sahf
rolb
ja
add
or
loopne
jle
fsubs
fmuls
mov
jl
add
mov
jl
or
push
ds
cmpsl
adc
adc
mov
icebp
pushf
mov
push
push
inc
push
and
fstpl
dec
dec
lcall
mov
pop
fs
notb
popf
mov
jg
movsb
xor
std
push
ret
mov
prefetchw
or
add
sub
xchg
cld
mov
pop
rcll
mov
movsb
push
test
cmp
inc
xchg
and
or
cmp
imul
mov
aam
dec
or
push
imul
adc
or
dec
add
sub
clc
or
jo
jnp
mov
mov
adc
popa
xchg
imul
jne
stc
es
fmuls
xor
fs
add
ds
dec
pop
rorb
rclb
arpl
pushf
mov
into
jl
adc
mov
jmp
push
dec
push
and
mov
fmull
push
mov
adc
dec
aam
jb
in
mov
mov
cmp
mov
in
rorl
push
or
out
jmp
pop
repz
repz
pop
daa
das
aaa
push
xor
mov
sub
aaa
sub
sub
sub
sbb
or
es
pop
adc
das
adc
js
mov
or
and
loop
ss
fsts
xchg
es
movaps
adc
es
pop
loope
pop
push
pop
ljmp
cmp
shll
jb
mov
add
pop
repnz
jns
sub
fldt
add
xchg
push
in
or
frstor
mov
lock
sub
inc
ret
cmp
outsb
sub
adc
outsb
adc
call
negl
mov
movsb
jo
sbb
adc
lea
pop
movsl
xchg
or
cmp
push
mov
cmpl
hlt
add
iret
jne
xchg
jo
dec
push
sbb
add
into
in
or
xor
sbb
movsb
adc
fld
cmpb
fmuls
rcrl
xchg
adc
hlt
xor
mov
and
rcll
pusha
enter
and
mov
xchg
sub
cmp
inc
adc
int
cmp
jle
fwait
push
and
prefetcht1
jne
insb
outsl
xor
jo
push
out
sbb
xchg
sub
ljmp
shl
pop
and
xchg
les
out
add
add
xchg
orl
pop
cwtl
fadd
push
xor
mov
cltd
popf
orl
rcll
jmp
test
mov
adc
sub
ss
jbe
test
scas
ror
push
sbb
cmp
into
sarl
mov
sti
dec
psrad
fnstcw
adc
mov
ljmp
arpl
in
daa
jb
add
scas
in
inc
sub
adc
scas
dec
or
push
xor
cmp
enter
pop
jnp
pop
inc
mov
jmp
jge
inc
inc
aad
jo
and
lods
test
fnstcw
dec
jne
and
sbb
or
es
dec
data16
je
enter
inc
sahf
into
pop
and
call
lock
jb
mov
sub
mov
outsb
jno
lods
shlb
push
stos
push
das
sbb
rolb
mov
jns,pn
cmp
lock
or
or
in
shll
xor
mov
pop
daa
xor
mov
pop
addb
cmpsl
push
int3
inc
pop
fsubl
mov
adc
popa
bound
mov
pop
mov
xor
xor
sbb
sub
adc
mov
aad
jle
insb
and
and
sbb
lcall
push
mov
xor
dec
mov
dec
in
js
fdivl
mov
les
scas
test
fsub
pop
or
inc
dec
in
aam
sbb
ds
adc
xchg
outsl
lock
mov
loopne
pop
inc
leave
imul
and
dec
xor
cmp
and
mov
inc
lret
loopne
push
add
das
call
mov
rorl
mov
adc
inc
adc
sub
sbb
mov
jmp
inc
test
mov
lock
lock
inc
xchg
dec
mov
es
sarb
call
jmp
cld
loopne
dec
push
jns
push
inc
lret
call
pop
lock
mov
inc
mov
ret
lds
inc
int3
inc
xchg
xchg
or
and
pop
pop
cmp
mov
xlat
pop
clc
add
int3
out
or
sar
sbb
adcb
push
rolb
stos
dec
int3
lock
test
ret
add
and
dec
imul
movsb
adc
cmp
mov
push
sbb
rclb
daa
fdivr
popf
jmp
int
cld
jle
dec
cmpsl
mov
inc
dec
je
out
push
jmp
xchg
imul
xor
jmp
adc
pop
jmp
mov
adc
push
add
sub
dec
pop
int
add
or
scas
sbbb
testl
cld
out
mov
dec
push
adc
pop
popa
push
js
jne
sbb
jmp
push
adc
in
push
fs
sbb
dec
es
lock
jle
sbb
jle
inc
arpl
or
mov
test
scas
iret
data16
push
cmp
in
xor
jo
pop
repz
pop
repnz
into
subl
je
int
pop
aam
cltd
jbe
pop
cmp
adc
incl
adc
mov
sbb
sub
xor
pop
insb
mov
leave
in
adc
xor
xchg
fxam
pop
push
addr16
dec
jo
cmc
xchg
mov
push
stc
or
out
dec
push
insb
or
outsb
push
or
lret
inc
je
push
xor
dec
mov
inc
cmc
mul
mov
add
inc
inc
fs
add
dec
jl
lret
dec
int3
jo
xchg
test
mov
nop
add
cmp
cmp
pop
gs
add
cmp
in
pop
adcb
arpl
arpl
insl
or
aaa
or
jmp
push
push
inc
daa
push
inc
pusha
ss
inc
adc
cmp
add
inc
outsb
arpl
xor
gs
insl
in
arpl
outsl
ja
mov
xor
popa
scas
andb
pop
outsl
jae
mov
add
nop
push
sub
enter
shlb
bound
xlat
or
inc
adc
sbb
push
push
push
push
xchg
mov
nop
hlt
cld
rorb
xchg
das
dec
addr16
rcrb
loop
divl
push
inc
jb
sub
push
les
push
pop
xchg
inc
out
add
adc
out
pop
pop
add
mov
scas
add
and
mov
scas
push
aad
js
rcrl
pop
inc
push
stc
test
pop
ret
pushf
enter
lcall
or
cmp
sbb
cmp
xchg
iret
lea
or
pop
addb
nop
xchg
and
and
cwtl
pushf
mov
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
fadds
sub
ss
inc
push
movsb
aas
adc
out
pop
mov
adc
pop
arpl
sbb
lea
les
sub
cmp
lea
mov
nop
lret
sbbb
lods
mov
nop
fcompl
nop
lret
cwtl
add
lret
cs
sbb
xor
dec
test
gs
sub
xchg
add
test
movsb
xor
mov
adcb
sub
push
sbb
call
gs
int3
or
rolb
add
aam
test
cmp
dec
xor
xchg
add
pop
in
push
push
movsb
je
test
nop
lret
lock
gs
sub
hlt
clc
add
in
xor
iret
add
add
fcoml
sbb
push
movsb
xor
adc
nop
lret
inc
sbb
add
sbb
and
lods
sub
xchg
add
push
movsb
xor
cld
xor
popa
and
pushl
fldenv
xchg
pop
popa
std
dec
movsl
sub
push
mov
pushf
add
push
sbb
inc
insb
outsl
jae
mov
ss
adc
push
cmp
inc
push
xor
test
fcmovbe
aas
push
in
add
daa
test
je
jne
or
inc
xchg
inc
push
aas
addr16
fs
pop
scas
pop
dec
arpl
jae
ret
sbb
mov
push
dec
fs
lea
add
insb
jns
jp
jae
sbb
out
bound
pop
jge
dec
dec
pop
pop
lahf
lcall
adc
rcr
or
icebp
push
add
bound
adc
xchg
into
es
pop
mov
pop
dec
xor
push
les
daa
mov
xor
jnp
subb
out
cmp
in
push
inc
pop
mov
mov
pushaw
and
and
insl
and
sbb
shll
sbb
inc
bound
jl
out
jno
shll
and
fs
jg
fcompl
das
adc
outsl
addr16
jne
insl
aaa
ss
in
outsb
das
pop
fs
lea
or
mov
faddl
das
sbb
cmp
pushf
loop
outsl
arpl
push
sbb
pop
push
xchg
movntps
inc
pop
outsl
pop
dec
sub
adc
fadds
xchg
mov
and
jl
jp
mov
cmp
xchg
push
add
scas
inc
mov
daa
aad
fnsave
dec
sbb
subl
cmpsb
add
fildl
leave
dec
pop
in
pushf
and
rcr
dec
pop
jb
cmpsb
popf
add
outsl
dec
or
pop
xor
inc
dec
cmp
sbb
addb
add
jno
js
and
pop
or
xchg
or
pop
loope
xor
xchg
pop
call
sub
push
xor
pusha
xchg
and
and
fbld
and
jo
xor
inc
mov
subb
push
push
pop
je
inc
push
pusha
push
jp
adc
test
push
shll
fbld
pop
dec
loop
pushf
outsl
loop
es
xor
mov
push
es
mov
or
sbb
jb
xchg
sub
andl
inc
push
xor
or
adc
pop
movsl
lret
add
inc
mov
pop
cmp
cmp
xchg
mov
lcall
dec
jae
insl
inc
cmpb
fs
add
insb
lods
pusha
test
clc
xor
push
push
inc
inc
jecxz
or
inc
inc
jbe
inc
inc
decb
inc
mov
fs
adc
adc
jnp
sbb
aam
loope
daa
adc
cmp
addl
mov
cmp
je
mov
shlb
add
aaa
xor
ss
sub
imull
loop
xchg
leave
sbb
testl
aaa
cmp
in
inc
mov
or
movsb
pop
inc
sbb
push
out
xchg
rolb
pop
pop
sub
cmp
add
shlb
lret
inc
out
xor
xchg
ss
xor
insb
call
and
aas
in
sub
push
push
dec
rcr
jge
sub
sarb
pusha
cmp
push
leave
inc
add
xor
lds
js
sub
adc
daa
mov
pop
dec
es
xor
mov
scas
or
movsb
pop
mov
daa
push
push
loope
insb
mov
in
adc
pop
add
add
push
shrb
test
arpl
pop
add
je
fmuls
inc
dec
push
ss
pop
in
sub
outsb
outsl
sub
inc
insb
insb
mov
fmul
pop
push
outsl
pop
or
and
sub
inc
mov
fldl
test
mov
adc
or
sbb
cmp
jne
add
mov
out
es
mov
pusha
ficoms
pop
cmp
mov
sub
insl
fs
addr16
push
ficompl
inc
imul
mov
or
shlb
lret
sub
and
mov
mov
inc
dec
mov
add
cs
inc
mov
ja
dec
mov
dec
popf
cmp
lahf
mov
inc
mov
lods
xchg
xchg
out
in
xchg
test
inc
dec
je
in
cmp
jo
insb
push
loopne
pop
es
push
in
lods
lods
push
insb
icebp
sub
subl
dec
cmp
adc
add
cld
dec
mov
das
sbb
adc
in
insb
mov
mov
rorb
jl
aam
mov
jbe
mov
xchg
inc
adc
pushf
adc
cmp
hlt
pop
pop
jo
adc
pop
push
jl
jnp
push
push
cmp
inc
jg
xchg
inc
add
repnz
pop
mov
je
loopne
outsb
fildl
stc
out
jge
cmp
in
add
imul
xor
xor
shll
add
xchg
fldt
mov
sahf
cmp
and
js,pt
and
in
imul
pusha
rorl
int3
dec
std
pop
xchg
inc
jl
xlat
incl
cld
adc
sbb
outsb
sbb
pop
sbb
sub
or
jae
popa
lock
nop
mov
mov
adc
loopne
mulb
xchg
ds
clc
shrb
xchg
add
or
inc
mov
inc
push
adc
pop
push
js
fdivr
orl
jne
add
enter
push
push
cmp
fildll
test
mov
inc
jle
add
or
popa
mov
arpl
lret
int
inc
or
or
addr16
cmpl
pusha
fwait
pop
sbb
adc
lock
nop
inc
and
pusha
adc
xlat
pusha
sub
sar
popa
sahf
or
add
in
jbe
cmp
cmpsb
jp
iret
adc
mov
add
insb
repnz
lcall
insl
popf
adc
fxsave
lock
push
and
dec
enter
out
cmp
fmul
inc
jl
cmp
incl
push
outsl
jo
jo
loop
sahf
pop
fidivrs
sbb
adc
fdivrl
dec
cltd
xchg
hlt
fidivrs
or
pop
xchg
js
mov
roll
add
lods
dec
mov
sbb
xchg
out
push
fsubl
lahf
sbb
les
mov
xchg
mov
sbb
clc
imul
xor
cmp
push
add
push
add
xchg
sub
pop
add
inc
jbe
aad
fwait
adc
insl
negb
and
xchg
mov
lock
ficoms
and
mov
les
int3
pop
and
or
test
sbb
in
mov
xchg
fcom
rolb
inc
cwtl
das
and
or
xchg
ja
pushf
dec
fcomp
and
or
xchg
loopne
loopne
ds
inc
add
push
jo
and
popf
ss
push
mov
daa
and
sbb
inc
ficoms
add
fnstsw
jo
dec
adc
shlb
test
rcrb
pop
push
jmp
rcrl
jbe
insb
or
dec
les
scas
and
adc
add
add
ja
bound
punpckhbw
ret
in
insl
ret
add
or
xchg
hlt
dec
jmp
inc
push
cmp
je
sbb
shl
xchg
mov
xorb
rclb
addl
cmc
ja
fistpl
fdivrs
in
pop
sub
push
lret
dec
dec
pop
inc
or
inc
inc
jnp
enter
add
push
test
pusha
imul
cmpsl
pop
sbb
push
and
or
enter
or
cmp
int3
test
iret
imul
leave
adc
and
aaa
test
push
dec
inc
daa
push
adc
icebp
and
pop
add
js
call
add
jmp
outsl
push
pop
sub
xchg
std
push
or
jb
testl
shrl
add
push
sbb
movsb
and
add
cmpsb
test
adc
inc
dec
mov
repz
mov
dec
dec
or
test
sub
hlt
mov
and
pop
mov
add
inc
test
push
inc
add
sbb
and
addb
dec
fistpll
pop
pop
push
inc
insb
inc
push
push
insb
inc
ja
or
inc
clc
data16
xor
mov
push
js
cwtl
cld
or
push
sub
dec
fldt
or
inc
adc
in
sarl
sbb
fadds
aam
mov
ss
push
call
cmp
xor
inc
mov
call
push
jo
mov
loopne
ds
or
into
or
push
inc
cmp
outsb
and
xor
xchg
sub
mov
mov
dec
icebp
cmp
jnp
and
pop
adc
imul
out
inc
ret
loope
sub
nop
pop
pop
sbb
adc
mov
aaa
test
inc
outsb
and
add
xor
or
iret
or
dec
in
and
or
adc
jo
mov
dec
xchg
push
outsb
dec
adc
mov
dec
dec
jne
cmp
adc
jns
jns
add
sbb
je
test
scas
pop
and
inc
sbb
enter
rcrl
les
cmp
iret
jo
dec
xchg
sub
dec
loopne
push
or
mov
inc
mov
fldl
aam
std
fstl
popa
jno
testb
xor
add
lea
mov
inc
pop
movsl
les
inc
ds
dec
sbb
je
lahf
cs
cmpsl
pop
dec
mov
sbb
arpl
adc
mov
test
xor
enter
shlb
sbb
and
sbb
add
or
mov
cmp
push
cs
cs
test
popa
jecxz
jmp
inc
mov
inc
loopne
push
pop
jmp
ret
fxch
pusha
push
insb
in
ret
pop
and
movsb
push
cmp
pop
cs
pop
lcall
mov
enter
and
std
mov
stc
mov
test
inc
iret
sbb
cmc
test
lret
adcl
shl
fstpl
enter
pop
pop
xchg
add
insb
loopne
sbb
jne
push
push
jns
xchg
adc
outsb
mov
in
or
mov
data16
sub
loope
sbb
inc
pop
sysexit
xchg
sub
outsl
nop
and
aad
rorb
enter
aad
mov
xor
mov
jb
adc
push
mov
neg
inc
pop
xor
outsl
arpl
dec
adc
inc
sahf
mov
or
mov
inc
xchg
test
loop
and
add
mov
inc
enter
push
jns
ljmp
inc
sarb
adc
or
add
push
sub
inc
push
inc
cmp
push
dec
push
cmp
push
jo
out
or
pop
jo
aas
inc
pop
repnz
lock
cltd
inc
jl
fstl
xchg
imul
cld
cmp
inc
add
add
inc
jmp
sahf
xchg
mov
xor
sub
or
push
fsub
cmpsb
aam
cli
imul
call
icebp
in
fs
add
rclb
popa
cmp
faddl
lcall
sub
imul
inc
cmp
push
xor
jle
mov
or
jle
dec
push
sub
adc
fldl
inc
sub
inc
xor
push
inc
inc
or
orb
int
cmp
flds
adcb
or
mov
sub
dec
mov
mov
and
jl
push
lcall
sahf
sbb
daa
and
andb
push
xlat
pop
pop
insl
or
dec
adc
out
inc
xchg
inc
mov
dec
inc
pusha
mov
dec
ret
or
and
xchg
mov
andl
jbe
xchg
add
mov
adc
movsb
je
push
add
js
xchg
push
xchg
mov
sbb
jge
mov
xor
jg
cmp
mov
lcall
jb
adcl
loopne
adc
adc
stc
fstl
mov
jle
cmp
jge
mov
faddl
fstpl
gs
lea
mov
push
add
imulb
lock
sub
jle
xchg
or
jmp
and
cmp
xchg
or
sarb
adc
add
mov
sar
cmpl
sbb
sbb
push
add
sbb
loope
scas
call
push
pop
mov
add
adc
ss
jge
push
or
push
add
or
cmpb
ret
movb
sub
std
mov
fisttps
add
sbb
dec
clc
inc
lods
fwait
push
add
nop
mov
cmpsb
in
pop
xlat
aaa
sbb
test
jns
inc
jnp
and
sbb
dec
sahf
outsl
cmpb
fildl
jne
movb
pop
popa
jmp
cmp
xchg
rclb
aas
dec
cmpb
add
loopne
int
les
cmpb
aam
es
fists
add
jae
xlat
and
cmp
out
and
popf
pop
out
mov
sahf
jp
je
mov
out
add
or
mov
sbb
mov
mov
push
dec
sarl
xlat
xor
mov
jo
inc
adc
nop
jns
and
or
out
js
fwait
js
cmpsl
xchg
and
dec
js
jnp,pn
daa
pop
jb
jge
and
or
add
stos
dec
pop
cmp
in
fidivl
lods
xchg
aaa
sbb
xor
push
dec
in
mov
jb
out
xor
xchg
cmpl
mov
xchg
fisttpll
clc
cs
inc
cmp
cmp
dec
icebp
cmp
pushf
shrl
inc
sub
add
mov
pop
fiadds
dec
jl
adc
pusha
shrb
jl
mov
icebp
fidivs
not
and
jp
and
sub
inc
aam
mov
repz
mov
dec
mov
aaa
jmp
hlt
testb
sbb
ds
jg
nop
xchg
mov
out
add
sub
jae
push
pop
mov
jnp
pop
xor
pop
xor
aad
aam
bound
je
adcl
imul
adcb
ret
add
dec
cmpsb
cmp
in
psraw
in
aaa
imul
fcomi
sbb
xlat
mov
flds
mov
sahf
jnp
lcall
lods
xor
pop
loope
cmpsb
cltd
in
fadds
cmpsl
sbb
shrb
xor
pop
aam
out
adc
mov
scas
ret
shrl
aad
aad
or
aad
addb
aam
add
cmpsl
push
and
add
lcall
std
and
mov
or
add
sbbl
cmp
cmpb
push
jne
mov
stos
dec
mov
adc
mov
into
xor
test
jge
sub
in
push
adc
test
mov
ret
out
mov
cltd
add
outsb
xchg
out
xchg
adc
movsb
aas
push
sbb
lahf
insl
inc
fimuls
adc
push
push
adc
and
pop
sub
repnz
rolb
repz
push
inc
ljmp
pop
clc
and
dec
sbb
dec
dec
jl
icebp
lods
pop
ja
testb
mov
pop
popa
sub
fimull
int3
add
imul
mov
lret
push
pop
mov
jae
repnz
pop
sub
shrl
xchg
hlt
imul
push
xlat
mov
ss
enter
cmp
jmp
push
fsubr
imul
mov
xor
add
mov
rorb
adc
or
or
call
pop
cld
add
lock
dec
mov
shlb
fdivs
pop
add
mulb
push
lods
or
loopne
add
xor
mov
mov
outsb
and
jne
xor
jne
jmp
into
fcomps
call
pop
adc
aas
rcrl
pop
fmul
jecxz
dec
std
pop
pushf
push
popa
test
jae
inc
orb
cmp
les
push
inc
bound
and
dec
sbbb
ljmp
cmp
or
or
leave
lods
mov
xor
mov
mov
sti
and
and
xchg
sub
stos
ss
xchg
aas
sbbl
and
hlt
pop
push
test
in
ss
or
fs
mov
xor
das
rorb
not
and
push
push
mov
cmpsb
subl
xchg
add
mov
stos
mov
pop
movsb
ss
enter
dec
cmp
iret
inc
and
jle
cmpsl
cmp
add
or
mov
adc
adc
xorl
aam
or
mov
pop
push
push
and
xor
lods
pop
adc
cmpl
jbe
incl
data16
pop
aaa
cld
xchg
add
pusha
jnp
sub
fildll
adc
adc
inc
test
mov
add
repz
pop
in
test
pop
mov
jp
dec
clc
adc
mov
jno
adc
add
sbb
adc
push
add
adc
adc
test
testl
adc
sbb
and
push
out
clc
sub
cmp
push
push
sbb
pop
test
push
adc
lock
enter
xlat
sbb
dec
and
or
xchg
sub
sub
push
mov
mov
jle
clc
adc
inc
clc
es
pop
in
in
and
sbb
or
push
sbb
sub
pop
loope
and
lods
pop
sbb
sbb
sbb
iret
je
and
jo
xchg
sbb
rcl
sub
xor
push
jbe
adc
push
and
mov
mov
sub
push
cmp
or
push
push
pusha
mov
pop
cmp
add
rcl
cli
dec
cwtl
stos
inc
pop
rclb
push
mov
lea
cmp
shll
test
or
adc
fcmove
inc
add
lock
add
cwtl
push
mov
shlb
cmpsl
xorb
mov
jns
push
push
or
outsl
jae
mov
mov
dec
add
mov
and
bound
aaa
adc
xchg
adc
shrl
cmp
nop
mov
inc
movsl
xor
ret
mov
scas
mov
add
xchg
mov
sbb
cltd
neg
xchg
mov
xor
imul
movsb
lods
insb
push
pop
pop
addb
pop
adc
movsl
jns
adc
mov
in
adc
or
mov
lea
lea
xchg
cmp
pop
or
jne
pop
nop
into
or
inc
popf
sbb
mov
andb
sub
jl
jnp
stos
mov
jnp
jb
xor
jge
dec
inc
sbb
mov
pusha
jmp
arpl
dec
imul
in
xor
cwtl
sbb
in
push
shrb
xchg
sub
mulb
xchg
pop
add
sbb
jecxz
add
sub
frstor
out
mov
push
lods
popa
mov
sbb
ret
add
or
mov
add
hlt
or
fildl
sbb
ret
pop
in
and
decl
sub
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
sbb
push
pop
leave
leave
leave
leave
add
add
leave
leave
leave
leave
add
push
pop
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
pmulhuw
fs
icebp
repnz
in
hlt
cmc
div
mov
mov
clc
das
outsl
inc
iret
adc
inc
out
jle
pusha
dec
cmp
repz
inc
push
cmp
repz
repz
sub
and
repz
xor
adc
or
iret
repz
add
cld
cmp
xor
out
hlt
add
clc
push
in
cmp
repz
aam
iret
repz
int3
fadd
sarb
mov
lods
mov
repz
test
mov
mov
cmp
repz
subb
sahf
add
jo
cmp
cmp
jns
out
cmp
cmp
sahf
out
sahf
cmp
cmp
cmp
jns
out
cmp
cmp
cmp
jns
out
cmp
cmp
popf
out
sahf
cmp
cmp
cmp
cltd
cmp
sub
inc
movsb
dec
rcrb
fs
mov
mov
test
popf
mov
and
jo
inc
jb
and
xchg
subl
out
mov
mov
inc
jl
xchg
pop
mov
ja
pop
pop
sbb
inc
aam
test
push
or
bound
mov
add
xorl
es
jle
and
add
pop
pop
daa
push
sbb
popl
pop
mov
jo
arpl
jo
fcoml
mov
fs
dec
xor
mov
inc
adc
push
or
stos
std
jb
inc
fadd
jb
cmp
add
sub
lahf
or
add
pop
dec
add
adc
push
divl
or
inc
push
xchg
ss
repnz
or
fidivs
sbb
push
inc
inc
adc
jl
jns
adcl
test
push
iret
enter
dec
jo
inc
insb
mov
push
hlt
stos
dec
repnz
loopne
nop
add
call
adc
sbb
mov
push
sub
pop
cmp
sbb
dec
rolb
or
lret
shr
imul
rcrb
cmp
dec
xor
aaa
push
xor
ds
shrl
push
gs
push
stc
imul
pop
push
sub
daa
jb
lahf
xchg
mov
push
inc
xchg
add
test
iret
pop
or
adc
xor
sbb
cmpb
mov
flds
push
add
mov
xor
in
add
adc
add
jmp
add
add
ljmp
hlt
mov
movb
lods
das
add
jg
push
adc
roll
mov
movsb
icebp
fisttpll
mov
push
push
cltd
aaa
or
inc
mov
or
fs
popa
inc
lcall
fnstcw
scas
loope
roll
xchg
cwtl
daa
xorl
mov
fsubr
push
adc
ret
xor
aaa
mov
mov
ret
loopne
in
pop
hlt
mov
jbe
jnp
mov
movsb
xor
xor
or
movl
or
sub
outsb
cmp
popa
rorl
cli
addl
inc
jmp
mov
out
cld
pop
push
pop
add
dec
mov
into
xor
add
mov
je
pushl
test
dec
inc
mov
cmp
push
leave
gs
cmp
pop
inc
stos
cli
test
add
pop
push
nop
push
jb
cmpsl
pop
adc
jns
cmpb
ja
add
mov
dec
inc
push
rorb
lods
pop
push
jl
cmp
in
xor
inc
add
or
xchg
pop
xchg
adc
aam
inc
add
xor
jbe
inc
dec
sub
or
je
push
faddl
scas
lods
pop
mov
pop
fdivrs
dec
fsubs
push
faddl
lds
stos
inc
dec
add
fistpl
in
adc
add
fs
mov
fnsave
sbb
hlt
adc
imul
push
and
push
sub
fcoml
push
mov
and
mov
das
jmp
arpl
add
jo
adc
cmp
xor
add
cmpsl
ljmp
mov
xor
inc
push
sbb
mov
fsts
sub
movsb
or
pop
mov
xor
jp
loope
lds
inc
push
pop
add
shrd
xor
pushf
sbb
movb
cmp
and
pop
leave
mov
sbb
sub
in
adc
or
push
enter
sbb
pop
or
and
ja
dec
imul
sbb
dec
insl
adc
jg
pop
xchg
stos
mov
cmp
inc
add
jg
sbb
int3
scas
mov
rcrb
adc
aam
xchg
inc
mov
push
roll
cmp
scas
icebp
fsubl
pop
enter
sbb
lahf
xchg
mov
pop
ds
mov
lock
or
clc
push
push
push
adc
scas
dec
lods
and
add
pop
and
je
jg
movsb
rcrl
in
adc
int3
sbb
mov
mov
pop
or
inc
stos
cmpsb
iret
push
daa
rol
shrl
xor
adc
sub
loopne
or
js
inc
dec
in
push
push
mov
cmp
mov
fs
push
inc
bound
mov
sbb
loopne
sbb
fcomps
cmp
int3
pop
ficoms
xchg
jno
or
out
je
inc
inc
daa
sub
insl
fnstenv
xchg
dec
and
xor
xor
dec
imul
jo
push
out
lret
out
pop
aas
add
outsb
pop
arpl
insb
push
arpl
imul
imul
inc
outsl
pop
js
bound
out
mov
jo
jb
jb
popa
or
cmp
dec
xlat
out
mov
push
es
cmp
sbb
addr16
imul
mov
mov
mov
mov
fisubs
arpl
insb
daa
push
jnp
out
push
jg
sub
insb
das
insl
sti
ficomps
loop
sbb
and
cmp
pop
daa
out
push
loop
je
jo
mov
jge
jb
arpl
jns
xchg
jbe
outsl
dec
pushw
das
add
imul
imull
push
hlt
jmp
ret
push
fs
and
call
add
movsb
mov
or
cmp
out
push
add
pop
sbb
push
ret
adc
sbb
jle
je
clc
and
xchg
sub
out
jp
or
aam
mov
inc
mov
rcrl
ret
push
sub
push
fisubrl
dec
push
add
push
or
insb
insb
push
push
jg
mov
out
insl
adc
mov
mov
inc
push
jne
pop
sbb
lods
adc
call
push
lahf
icebp
xchg
inc
mov
call
jne
inc
push
mov
sbb
inc
adc
push
push
nop
xchg
fs
scas
mov
adc
adcl
add
push
push
sub
lcall
jns
dec
xchg
lahf
xchg
inc
outsl
gs
test
adc
cwtl
xor
lods
mov
or
cmp
in
imul
roll
xor
sahf
insl
jae
cmp
clc
inc
push
enter
movb
pop
ret
mov
xor
jge
add
mov
jb
or
jb
jmp
sbb
or
and
mov
adc
movsl
repnz
shll
pop
repnz
sub
add
and
sub
sbb
pop
out
or
mov
inc
movsl
add
inc
nop
push
mov
inc
call
adc
sbb
sbb
pusha
int
or
mov
cmp
add
xor
cmpsb
imul
add
push
pop
pop
or
or
or
or
or
or
out
adc
adc
sahf
out
sahf
adc
push
pop
sbb
lcall
sbb
push
pop
and
and
and
nop
cmp
shll
push
inc
pop
imul
pushf
lods
mov
iret
loopne
add
jns
xor
mov
out
fwait
lods
mov
int
lock
adc
cs
repz
cmp
pop
data16
mov
pusha
cmp
and
add
in
lret
add
jb
adc
adc
cs
sbb
sbb
sbb
xchg
lret
push
or
and
and
cs
sub
dec
sub
xchg
lret
adc
adc
movsb
jb
in
inc
push
inc
test
dec
sbb
push
sbb
push
lret
dec
sbb
scas
shr
xchg
pop
sbb
push
movsl
repnz
sub
pop
bound
dec
pop
and
mov
adcl
and
dec
stos
inc
sub
adc
or
add
clc
or
adc
les
sbb
bound
or
imul
inc
in
insb
or
jmp
inc
es
or
push
lea
or
sti
insl
dec
in
js
lock
std
fwait
int
pop
push
jns
push
das
sub
push
add
call
jl
mov
enter
push
mov
int3
mov
push
ja
dec
jnp
pop
mov
loopne
pop
movsb
repnz
loopne
add
dec
pop
mov
xchg
lock
dec
int3
inc
add
fsubs
out
sarb
and
adc
fsubr
push
sub
xchg
bound
and
pop
out
jnp
hlt
or
add
jmp
orb
push
pop
leave
iret
and
adc
hlt
les
xor
mov
out
subl
mov
push
adc
enter
jl
testl
inc
fcomps
pop
cmp
push
inc
inc
pop
into
push
or
xor
mov
sahf
out
xchg
mov
mov
cltd
bound
addr16
sub
inc
aad
je
push
xor
outsb
pushf
sbb
adc
out
dec
inc
leave
sbb
js
or
jae
lahf
adc
and
lcall
sub
jns
sub
or
xchg
push
add
adc
sbb
push
adc
push
jb
adc
test
and
inc
lods
or
pop
scas
xor
add
sbb
push
sbb
adc
or
or
sbb
add
sbb
push
pop
and
xor
mov
inc
leave
push
and
adc
es
daa
adc
push
leave
add
xchg
dec
sub
and
leave
sub
add
xor
cs
mov
inc
push
inc
xor
or
inc
mov
inc
clc
add
xorl
add
and
sub
xor
pop
or
rolb
xchg
sbb
sbb
dec
add
xor
dec
inc
push
insb
push
mov
repnz
push
fsubl
add
arpl
pop
cwtl
or
in
pusha
decl
push
mov
adc
adc
adc
inc
xchg
adc
les
shl
clc
push
jo
dec
push
sti
jo
dec
popa
bound
pop
sub
inc
mov
nop
lock
pop
dec
lods
addr16
xor
test
adc
loope
xchg
push
subl
scas
pop
sbb
inc
imul
adc
fbstp
bound
add
inc
mov
or
nop
add
dec
adc
xchg
add
and
add
test
or
movl
arpl
inc
in
fisttps
add
jb
pop
pop
lods
sbb
adc
sbb
pop
movsl
and
and
mov
inc
add
push
mov
dec
push
outsb
loopne
popa
orl
inc
outsl
test
add
pop
xor
and
jb
xor
leave
daa
sub
rclb
sub
add
add
xchg
inc
dec
enter
sbb
bound
or
popf
js
js
ds
das
dec
gs
loop
sbbb
xor
jbe
cmpb
or
lret
movsb
adc
xchg
xor
or
dec
jne
cmpl
push
push
or
rcl
push
ljmpw
mov
push
ljmp
inc
push
bnd
or
adcl
push
sbb
clc
add
mov
imul
pop
sub
les
jo
sti
fidivs
fiadds
pop
jbe
push
dec
rolb
adc
mov
mov
add
ds
repz
fcoml
jb
loope
dec
or
gs
cmp
out
pop
and
add
mov
mov
or
ss
loop
cmp
sub
in
ja
cmp
fnstcw
lds
sbb
clc
cmp
inc
add
jo
adc
adc
dec
push
loop
inc
sahf
lar
jle
add
lcall
inc
cmp
mov
leave
out
arpl
push
fstl
and
clc
xchg
gs
pop
js
lods
dec
or
cmpsb
xchg
adc
adcb
adc
adc
or
gs
add
or
or
sbbl
cmpsl
inc
push
sbb
js
push
jb
sbb
and
andb
mov
mov
test
aaa
pop
dec
inc
pop
dec
insl
gs
sub
and
adc
decl
xor
jns
dec
popa
js
outsb
addr16
xorb
and
inc
dec
mov
push
xor
outsl
and
loopne
loopne
sub
or
call
jae
mov
imul
or
es
add
aam
les
rcr
std
xchg
sbb
pop
sub
mov
dec
pop
and
add
popa
sub
cmp
out
pop
push
das
or
mov
cmp
inc
xchg
sub
xchg
pop
adc
inc
leave
push
aaa
cmp
sub
repnz
int3
fcomp
cmp
orl
dec
inc
outsl
dec
cmp
inc
push
mov
xchg
call
in
cmp
jo
enter
cmp
xchg
pop
leave
add
sbb
xchg
stos
xchg
inc
mov
xor
decb
xchg
dec
xchg
cmp
xor
add
push
aam
xchg
xor
push
dec
aam
lock
les
adc
push
fiadds
sub
or
inc
xchg
pop
leave
add
jne
jb
mov
or
dec
jae
adc
mov
jo
push
int3
add
xchg
and
fsubl
lret
fisubrl
add
or
orl
jne
cmpsl
pop
and
adc
or
pusha
inc
cmp
jnp
pop
inc
pop
push
xor
inc
add
xor
pop
inc
sbb
jp
inc
xchg
cmp
nop
aas
leave
or
add
ljmp
jne
mov
sub
scas
mov
add
stos
and
sbb
cmp
sbb
or
roll
xchg
push
pop
js
js,pt
and
add
xor
in
sbb
pop
sub
nop
test
mov
jne
or
jo
jae
sbbb
sub
daa
ss
mov
call
enter
bound
sub
out
pushf
dec
fiaddl
pusha
jne
mov
dec
xor
and
xor
xchg
pop
orb
push
leave
push
jb
ss
xor
and
cmp
xchg
dec
cmp
add
add
ds
add
push
leave
inc
inc
inc
mov
dec
cmpsl
pop
or
icebp
and
ds
sahf
inc
aam
inc
or
inc
push
loop
pop
mov
inc
hlt
lret
mov
push
jne
push
test
mov
inc
pushf
push
and
cmp
aam
pusha
xor
sahf
add
ja
sub
jo
mov
jnp
cmp
inc
into
push
test
test
inc
ret
scas
adc
mov
add
outsb
push
jnp
dec
add
push
push
push
push
je
inc
rorb
and
inc
push
faddl
xchg
jbe
cmp
add
inc
aas
xor
sbb
aas
add
cmpsb
cmp
add
mov
cmp
fcos
mov
xor
push
or
jbe
int3
sbb
push
sub
pop
bound
add
push
out
int
dec
or
push
cli
push
sbb
push
push
or
jns
push
clc
add
hlt
js
add
or
sbb
in
pop
test
in
push
jp
fcom
jns
jnp
sahf
rcl
int3
mov
popa
sbb
sbb
mov
add
sub
cmp
sbb
addl
push
dec
push
xor
add
push
jg
lods
or
push
aad
mov
or
inc
inc
out
ljmp
cltd
pop
pop
les
imul
adc
pop
and
leave
push
adc
push
push
push
adc
adc
adc
inc
cmp
cmp
mov
push
les
sbb
jb
sbb
cmp
sbb
or
js
and
and
sbb
sub
cmpsb
xchg
es
sub
sub
sbb
sub
sbb
sbb
fs
xor
pop
cltd
fadds
pop
inc
and
imul
jg
lret
outsb
inc
insb
outsb
inc
nop
jno
add
outsl
inc
aas
and
and
inc
xor
add
jo
xchg
outsl
inc
or
inc
rclb
sbb
sub
dec
push
pushf
mov
imul
add
je
nop
js
ss
fisttps
mov
cwtl
enter
in
mov
add
fsubr
dec
mov
or
movsb
syscall
jnp
lret
addr16
andl
ss
cmp
outsb
adc
popf
jl
std
out
inc
mov
rorb
movl
xchg
push
add
xchg
mov
mov
xor
test
push
and
sbb
and
test
pop
mov
or
insb
into
je
sub
movsl
rcl
notl
lods
mov
push
or
call
dec
into
dec
jnp
cmp
inc
fistl
adc
mov
cltd
les
leave
pop
ret
push
add
pop
xlat
pop
loopne
fidivrl
inc
push
push
push
fcmovnbe
shll
mov
dec
xchg
sub
sbb
add
sbb
push
mov
mov
push
repz
aam
fidivrl
cmp
loope
int
das
sar
movsb
popa
mov
jle
pushf
sub
xchg
mov
rolb
in
gs
loop
mov
mov
jnp
inc
dec
push
rolb
dec
mov
add
lahf
inc
add
mov
push
mov
cmp
ja
push
in
xlat
jle
mov
mov
inc
or
xor
stos
jge
add
jmp
inc
xchg
das
mov
test
push
jmp
iret
sub
imul
jecxz
push
xchg
sub
sbb
clc
sbb
leave
adcb
outsb
test
add
ja
fs
push
nop
push
leave
orb
popf
je
xor
pop
dec
rclb
enter
mov
or
pop
add
aad
outsl
add
or
inc
sbb
push
inc
push
add
test
inc
nop
mov
mov
mull
movl
or
sbb
add
cmpsl
mov
shlb
xchg
pop
jns
daa
add
int
or
mov
je
pop
mov
xchg
inc
orb
iret
adc
mov
jo
fwait
mov
or
xchg
mov
xchg
add
xor
mov
shll
pop
icebp
jecxz
rolb
pusha
push
ficompl
nop
test
andb
xchg
lods
pop
xchg
std
es
and
pushf
test
mov
popf
jo
jne
or
insl
cmc
stos
add
ret
andb
test
jae
push
inc
pusha
sub
and
test
bound
cld
data16
mov
dec
inc
filds
adc
and
or
int
xor
jo
dec
and
mov
or
aas
test
push
cld
sub
mov
xchg
add
jo,pn
rcll
aam
mov
test
cs
xor
lahf
cmpsb
sar
dec
iret
inc
daa
insb
or
mov
pop
xchg
mov
insb
outsb
pop
fcompl
xor
and
dec
cmpsl
addr16
mov
or
movsb
lea
mov
add
mov
sbb
pop
push
insb
sub
cmp
mov
cs
xchg
xchg
jge
es
add
pop
cmp
add
and
pop
in
test
je
push
sbb
mov
add
inc
mov
enter
inc
bound
or
cmp
jns
mov
or
cmp
inc
mov
nop
jno
mov
cmp
sbb
mov
js
sub
pop
cli
push
ret
add
popf
shr
les
add
or
repnz
push
or
dec
push
add
in
add
insb
xor
and
insb
cmp
stos
pop
mov
adc
testb
mov
add
mov
push
es
pop
dec
enter
jo
push
add
and
adc
push
dec
xlat
ss
mov
stc
mov
fsubrp
movups
outsl
cmp
mov
dec
iret
and
xchg
daa
scas
testl
lahf
jo
cmp
icebp
jb
jo
push
das
jge
jnp
shrl
push
mov
dec
pop
sbb
nop
dec
mov
cmpl
push
lret
dec
jnp
add
inc
mov
mov
adcb
cmp
fstl
and
mov
push
lock
je
and
dec
test
push
cs
cmp
inc
in
jl
rclb
pop
popl
repnz
test
lods
sub
or
sbb
test
mov
add
sub
or
push
inc
inc
adc
mov
movsl
push
enter
add
xchg
adcb
pop
pop
and
jo
andb
fmull
out
ss
fimuls
lods
pop
fdivr
cmp
xor
cmp
xor
enter
push
adc
mov
daa
sub
cmp
or
sbb
jmp
add
xchg
and
dec
div
mov
sbb
hlt
and
popa
and
mov
addr16
adc
or
push
push
shr
and
dec
ja
addr16
add
or
or
test
leave
test
and
leave
and
addr16
sub
daa
jg
sahf
push
out
sub
fs
sbb
into
push
movsb
pusha
pop
pusha
xchg
sub
incb
inc
shl
aaa
push
xor
inc
in
lods
mov
adc
sub
imul
mov
push
gs
leave
sub
sarl
pop
test
mov
jle
and
mov
inc
lret
sub
shlb
mov
adcb
dec
rolb
shrb
hlt
dec
addr16
std
jnp
push
lock
int3
inc
inc
cmpsl
push
mov
ja
xchg
xchg
aad
xor
sbb
push
and
jge
jg
inc
jecxz
add
mov
and
and
shll
sbb
push
cmpsb
lret
jmp
cli
in
rorl
sbb
dec
inc
stos
lods
pop
into
movsb
jb
sbb
dec
cld
out
dec
push
mov
es
sub
aas
in
adc
lods
in
xor
dec
xchg
add
mov
cmpsb
mov
add
or
inc
out
dec
or
or
out
dec
ja
adc
push
xchg
xchg
xchg
fildl
dec
adc
sahf
xchg
xchg
pop
adc
arpl
mov
inc
inc
dec
push
pop
into
je
aam
enter
jl
mov
testb
je
mov
xor
xlat
jns
pop
aam
pop
adc
inc
mov
imul
mov
mov
add
and
pop
adc
push
jns
aaa
daa
pop
imul
orb
add
add
inc
adc
nop
dec
and
mov
das
xchg
push
lods
stc
lret
push
add
xchg
xor
pop
aad
add
rorb
adc
jl
push
je
cmpl
or
icebp
and
sbb
xor
stos
or
in
push
daa
sbb
lcall
dec
icebp
flds
add
js
cli
adc
inc
push
adc
cmp
push
daa
jmp
and
je
pop
jo
push
lock
mov
test
addr16
mov
mov
push
sbb
nop
inc
xor
imul
sbb
push
test
pop
mov
faddp
add
sti
add
or
cmp
rol
cmp
stos
pusha
sub
mov
lods
sbb
sbb
sbb
loope
out
xchg
call
fcomps
adc
mov
rclb
mov
ljmp
push
push
or
inc
test
pop
xchg
add
imul
in
push
or
adc
sub
add
pop
shrl
pop
aaa
cmpw
xchg
add
or
icebp
or
mov
push
dec
repz
sbb
sub
pop
js
cmpsl
pop
pushf
adc
mov
cmp
sbb
icebp
sbb
vfrczpd
inc
mov
sti
xchg
mov
pop
andl
push
je
mov
xchg
ss
push
dec
push
mov
ret
mov
dec
push
adc
fcmovnb
push
mov
imul
or
xlat
enter
pop
inc
pop
adc
push
add
out
xchg
or
addb
in
xchg
scas
dec
aaa
roll
into
mov
cmp
movsb
pop
loopne
and
outsl
and
or
cmp
jo
dec
sbbl
push
jl
sbb
inc
sbb
inc
faddl
cmp
in
mov
dec
pop
dec
pop
pop
lahf
nop
sbb
add
mull
push
pop
andl
inc
xor
xchg
or
inc
xchg
loope
outsb
add
lcall
pop
insb
and
sbb
enter
inc
mov
push
loopne
pop
scas
mov
sbb
push
scas
push
roll
mov
add
jp
sbb
data16
sbb
push
enter
fbstp
imull
addb
inc
cmp
jb
cs
add
lock
xchg
jne
in
push
mov
test
sub
stos
fwait
or
mov
push
inc
hlt
inc
mov
and
test
inc
sbb
jns
or
popa
and
or
add
add
inc
cmp
stc
ret
pop
pop
xorb
call
andl
andl
sub
shlb
pop
inc
ret
lahf
int3
and
adc
mov
or
ja
add
repz
inc
inc
pop
es
add
sbbl
rcr
test
test
jne
test
mov
sbb
outsl
adc
roll
inc
and
test
pop
push
sub
and
pop
testb
les
aam
rcl
sahf
notl
add
add
subb
loop
adc
xlat
and
lods
lods
pop
mov
and
mov
push
mov
adc
cmp
mov
movsl
dec
ror
stos
sbb
inc
aaa
mov
test
mov
shlb
or
push
iret
mov
push
pusha
pop
xor
orl
sub
push
mov
leave
loop
mov
inc
popa
gs
data16
and
and
and
inc
das
and
and
nop
and
daa
mov
inc
cmpb
popf
orl
inc
addr16
andl
and
mov
sahf
push
movl
in
pop
and
jne
pop
add
push
add
jg
and
or
mov
inc
sub
or
nop
test
jmp
sub
add
inc
add
push
mov
imul
fisubs
out
and
or
stos
rcl
stc
int3
xchg
lea
adc
andl
xchg
pinsrw
dec
movups
movb
iret
inc
ss
pop
push
cmp
ficoms
pop
jle
adc
push
imul
sbb
pop
pop
bound
add
push
cmp
sub
and
jb
inc
mov
pop
or
flds
cwtl
daa
add
sub
and
or
test
xor
pop
adc
push
xor
or
cmp
mov
scas
adc
scas
or
or
jecxz
cmc
inc
icebp
or
inc
cmp
push
jge
xlat
sbb
outsl
ja
add
orl
dec
shl
or
in
incb
enter
jecxz
pop
mov
mov
negl
mov
pop
mov
vpsrad
outsl
push
movsb
rorb
lahf
add
or
loop
sbb
cs
sub
popf
and
cmp
je
mov
xlat
inc
dec
push
or
xorb
ds
sbb
mov
js
push
gs
incb
pop
lsl
mov
dec
add
adc
iret
inc
push
push
push
dec
dec
xlat
cmc
aaa
sub
xor
outsl
inc
push
addw
xchg
es
rcr
test
xor
or
cltd
jne
pop
sbb
adc
push
es
gs
imul
sbb
sbb
xchg
pushf
mov
mov
scas
and
daa
in
adc
jle
ds
inc
sbb
add
or
ret
ret
jmp
jnp
or
add
pop
shlb
jecxz
aad
dec
cmpsl
add
sub
aas
pop
jb
test
sarb
addr16
clc
sub
lds
mov
jl
mov
push
push
inc
in
xchg
jmp
mov
inc
movsb
fwait
inc
add
cmpsl
inc
adc
nop
xchg
jl
clc
pushf
adc
push
shlb
xchg
sbb
mov
lcall
aas
outsb
jae
push
mov
orb
jae
add
mov
inc
mov
inc
iret
xor
cmp
xchg
cld
cmp
in
and
xchg
into
ss
loopne
jne
cmp
outsb
inc
dec
mov
movq
xchg
and
clc
jo
jno
fcmovne
xchg
xchg
sbb
xor
aaa
mov
ljmp
loopne
pop
movl
repz
test
iret
rep
lods
mov
pop
xor
cmp
gs
dec
add
outsl
stos
lahf
fsubrl
and
aaa
enter
les
jle
and
or
and
mov
inc
jbe
cwtl
mov
mov
push
push
jnp
test
inc
dec
js
jg
dec
inc
add
pusha
mov
or
sub
outsb
cmpsb
clc
or
push
cmpl
adc
dec
and
and
fcmovu
mov
push
cld
mov
sbb
xor
lods
dec
mov
dec
addr16
push
mov
mov
sub
lea
insl
or
cmp
add
pop
xchg
fistl
rclb
inc
test
mov
or
into
add
mov
mov
sbb
xor
dec
adc
xor
pop
and
fiaddl
mov
cmp
push
add
dec
sub
push
adc
daa
mov
push
ret
cmp
frstor
dec
sbb
pop
adc
dec
shr
in
andl
aas
mov
pop
inc
lock
mov
mov
popf
dec
or
lds
adc
xor
xchg
popl
ja
pushf
cmp
pushf
andb
call
mov
lock
mov
and
push
ja
in
in
xlat
sub
aad
shlb
lcall
pop
fs
outsb
jae
das
fistpl
rorb
xchg
xor
add
or
push
xchg
ret
loopne
clc
clc
mov
or
mov
push
aaa
dec
inc
sub
sub
mov
and
sub
push
pop
sbb
cmp
sub
sub
and
dec
gs
dec
xor
sub
adc
fwait
or
ret
movb
int3
and
in
adc
loop
outsl
xchg
or
ja
ret
or
hlt
xchg
aas
mov
mov
test
enter
popa
fwait
addl
rorl
mov
and
lock
lcall
stos
stos
mov
das
dec
cmpsb
add
mov
fisubs
push
lock
enter
sub
xchg
mov
add
cmp
stc
add
orl
dec
xor
dec
jne
jo
inc
call
mov
xchg
inc
push
test
push
mov
or
adc
xor
in
call
flds
repnz
mov
jb
bound
test
add
mov
xchg
ret
incl
inc
ss
lahf
jge
cmp
inc
mov
xor
shlb
mov
and
add
cmp
je
or
je
add
sub
pop
insb
ret
aaa
jnp
mov
mov
loope
push
orb
pop
mov
push
mov
jmp
xor
and
push
jle
inc
lods
movsb
jns
push
scas
xchg
rol
sbb
notl
popf
std
imul
mov
xor
pop
mov
lret
add
mov
xor
sbb
add
lcall
dec
inc
dec
push
add
pop
test
mov
add
dec
cld
test
xor
aaa
aaa
loopne
xchg
mov
or
outsb
push
dec
mov
inc
add
cmc
or
mov
andl
mov
mov
aas
inc
push
sub
pop
adc
sub
cmp
xchg
jne
mov
insl
jbe
fcompl
adc
insb
push
jmp
cmp
pop
fs
repnz
pop
daa
lods
adc
outsl
outsb
lock
pop
inc
test
dec
outsl
cli
les
into
mov
or
add
sbb
push
inc
daa
xor
imul
aam
xchg
push
in
test
adc
adc
fwait
sub
fbld
dec
dec
lock
push
cs
lea
sbb
ret
cmp
lods
add
cmc
or
seto
inc
adc
push
sbb
dec
push
pop
sub
adc
insl
pop
sar
xlat
loopne
mov
push
jb
mov
decb
mov
and
clc
mov
or
mov
outsl
xchg
sbb
cltd
add
mov
jo
and
lods
addb
sbb
sbb
cmp
aaa
and
sahf
filds
mov
mov
push
add
sbb
int3
add
xor
pop
mov
push
mov
clc
push
push
pushf
add
pop
insb
ss
mov
add
add
add
dec
mov
mov
insb
popa
or
adc
or
ds
mov
and
and
mov
xor
mov
add
rorl
enter
or
or
jo
ds
repz
or
xor
loop
je
loope
in
mov
and
rorl
popl
in
cwtl
hlt
mov
and
adc
loopne
sbb
les
iret
fwait
xchg
mov
push
mov
imul
ret
fiadds
cmp
jo
test
loopne
decl
lahf
inc
cwtl
mov
push
and
mov
adc
xor
pop
pusha
sub
leave
xchg
lea
mov
ret
sub
les
add
sub
leave
pop
mov
jns
sbb
insb
push
addb
add
call
cmp
rcr
adc
pop
sub
xor
add
mov
daa
js
test
mov
or
rol
addr16
into
lds
pop
cmp
enter
js
inc
movsb
setbe
jl
push
push
sbb
dec
add
nop
movl
cmpsb
or
aaa
les
inc
nop
es
lret
inc
and
and
call
or
inc
repnz
inc
adc
mov
nop
pop
nop
aaa
loopne
repnz
jle
add
push
xor
insl
bound
fstps
fmuls
jg
push
inc
fildll
scas
add
outsb
test
adc
popa
popf
aaa
mov
mov
fdivs
and
inc
lret
xor
fs
xchg
cmc
add
adc
and
dec
and
rclb
jnp
in
imul
stos
and
add
add
sbb
or
push
punpckhwd
dec
dec
jl
or
sub
mov
add
imul
inc
mov
or
pop
or
imul
les
test
jae
jns
fadds
xchg
add
loope
pop
dec
nop
and
cmovo
imull
and
add
inc
stos
test
leave
cli
push
loope
mov
movl
adcl
rorb
cmp
xchg
pushf
aam
xor
lret
ret
add
xchg
jnp
xchg
or
push
or
and
adc
mov
imul
cmp
imul
and
add
push
shr
addb
mov
pop
or
test
insl
mov
adc
movsb
dec
ret
jmp
inc
mov
dec
mov
jb
testl
and
aaa
and
sahf
mov
cmp
add
inc
iret
or
adc
rclb
or
jnp
sub
ja
add
xchg
fnstenv
push
inc
adc
sub
shlb
cmp
add
jo
orl
jl
jge
clc
nop
adc
cmovs
clc
nop
sti
mov
mov
xchg
cmpsl
add
dec
mov
or
inc
pop
and
push
icebp
popf
mov
aas
and
dec
push
popa
jb
gs
sahf
loope
sbb
inc
ret
mov
imul
or
test
imul
pushf
sub
adc
adc
xor
shll
in
mov
js
add
ja
or
sub
add
mov
mov
jl
sysenter
lods
cmp
sidtl
in
xchg
enter
mov
dec
or
push
adcl
and
xchg
add
enter
nop
icebp
cmc
adc
jmp
pop
ljmp
inc
roll
repnz
cwtl
sbb
xor
jo
or
mov
mov
pop
sub
adc
mov
fists
push
xor
fimull
pop
add
add
js
or
test
addr16
cltd
adc
gs
imul
or
add
xchg
mov
ret
or
push
jmp
dec
sbb
fmull
push
add
sahf
rclb
sbb
repz
lcall
lds
mov
movsb
lcall
cltd
push
popf
pop
lcall
scas
fcoms
or
cmp
movsb
into
int
inc
and
andps
dec
pop
shll
mov
add
out
push
ret
xchg
add
add
pop
sub
test
data16
dec
add
pop
testb
or
or
xor
lock
mov
mov
mov
daa
mov
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
decl
fdivr
ficompl
call
call
call
call
ljmp
call
call
call
dec
push
into
dec
pushl
dec
dec
icebp
dec
scas
sub
iret
jnp
out
bound
test
aam
push
lods
cld
sahf
cmpsl
fnstcw
idivb
mov
hlt
sahf
out
jl
clc
mov
fs
jns
push
jns
cli
movsb
jl
dec
out
test
enter
fnop
xchg
sti
clc
sahf
cmpsl
flds
cld
sub
rolb
sbb
mov
mov
push
xor
xchg
fchs
repnz
js
addr16
out
repz
pusha
call
inc
imul
push
in
add
enter
repz
adc
and
repz
mov
data16
imulb
cmp
hlt
sahf
insb
and
push
int3
aam
ljmp
shl
push
dec
int3
ja
idivb
pop
in
out
sbb
mov
add
leave
popa
xor
push
fwait
jne
clc
xor
or
or
push
or
inc
add
sub
cmp
dec
pop
add
or
add
enter
aas
dec
test
sub
insb
inc
lcall
push
ja
mov
aas
incl
loopne
mov
not
mov
ljmp
shrl
jne
inc
mov
and
jne
cs
or
ficomps
pop
dec
or
nop
or
mov
add
es
ds
and
mov
test
inc
imul
add
adc
imul
jle
push
sbb
dec
insl
or
or
orb
or
push
sahf
mov
ljmp
or
inc
mov
popa
inc
cmove
cmpsl
mov
push
dec
popa
je
xchg
inc
push
push
addr16
xchg
mov
les
adc
adcb
push
sarb
xchg
dec
jp
xchg
rcll
iret
es
jbe
in
fldcw
add
jbe
or
xor
popa
jbe
adc
xchg
mov
dec
xchg
push
mov
cs
xchg
pushf
gs
bound
es
bound
gs
or
jae
jns
mov
sbb
imul
imul
andb
xchg
inc
mov
sub
ss
push
inc
sbb
dec
repz
jns
sbb
jo
fwait
jge
jbe
or
add
jmp
cmpsb
pop
mov
je
enter
inc
mov
inc
add
imul
xchg
pop
cmp
adc
add
ss
int
add
add
sahf
add
pusha
repnz
push
ss
or
push
aad
add
sub
sub
push
add
push
test
test
aas
rol
adc
sbb
sbb
push
add
add
mov
mov
mov
adc
adc
pop
andl
decl
and
mov
mov
mov
add
push
mov
xor
cmp
adc
mov
sti
sbb
repnz
incl
ljmp
inc
inc
inc
inc
loope
inc
add
into
std
mov
inc
test
stc
jne
ljmp
mov
pushl
daa
pop
sub
xor
cmpsl
push
pushf
rclb
xor
repz
je
mov
repz
sub
js
rorb
xor
jl
jns
xor
insb
aaa
mov
sahf
cmpsl
mov
loopne
push
dec
adc
imul
fsubrl
lock
cmpsl
test
push
aam
cld
cmpsl
stc
out
jge
push
jbe
cmpsb
push
or
adc
and
call
repz
movsb
in
es
out
repz
mov
shlb
push
sub
stc
cmp
xor
inc
fs
ds
pushf
call
sbb
inc
in
jnp
jnp
xor
xor
or
dec
mov
sahf
push
inc
push
cwtl
inc
clc
xor
xchg
cmpsl
stc
xor
cs
das
cmp
out
fstl
push
lods
es
push
in
fnstcw
inc
jo
cmp
add
imul
sub
push
jl
push
and
mov
into
and
and
lock
push
mov
mov
cmpsb
cmp
push
dec
push
fs
test
in
push
inc
and
pop
inc
pop
xor
fwait
mov
add
push
mov
adc
sbb
pop
aam
mov
add
test
cmpsl
add
addb
bound
sub
arpl
add
cs
insl
pop
int3
mov
sub
clc
add
ja
adc
mov
xor
dec
js
adc
sub
sbb
cmpsl
mov
mov
pop
jnp
adc
jo
push
mov
push
jnp
jl
add
push
sbb
adc
pop
add
or
test
hlt
pop
pop
mov
rol
out
cmp
push
mov
fisubl
mov
add
sub
and
and
in
pushf
pop
mov
inc
cmp
pop
call
sub
or
nop
add
add
nop
add
and
or
sbb
jae
fmuls
mov
repz
push
cmpsb
ds
dec
mov
repz
rcr
jmp
add
sahf
adc
sub
in
mov
push
je,pn
clc
push
mov
push
xchg
push
add
outsb
out
pushf
ljmp
insl
jne
add
js
jp
fwait
int
cs
jl
add
sbb
in
or
and
xchg
adc
stos
lock
mov
cmp
mov
xchg
pop
add
push
jmp
pushf
les
dec
xor
add
lea
mov
fwait
sbb
inc
sbb
call
sbb
sbb
push
gs
popa
lock
fiadds
je
push
and
sahf
fcmovne
mov
sbb
in
scas
cs
shlb
mov
xorl
add
inc
movl
xor
inc
dec
mull
popa
push
adc
xchg
push
mov
pop
jne
xor
sub
cmp
imul
testb
dec
jne
bound
sub
orb
push
cmp
adc
es
insb
jmp
aad
inc
inc
rcrb
addl
sbb
das
imul
scas
push
or
loopne
dec
mov
cmp
jb
daa
lods
test
pop
lcall
gs
insl
xorb
pop
or
lcall
or
push
inc
repnz
dec
dec
push
push
inc
push
in
loopne
nop
inc
or
add
sbbb
inc
insb
popa
jno
inc
xchg
jg
push
rorb
xchg
daa
dec
push
jo
imul
or
cmovl
push
popa
push
movl
push
pop
inc
and
imul
imul
lock
outsl
daa
enter
cmp
insl
aad
xlat
pop
js
imul
pop
scas
cli
sbb
adc
or
jmp
push
sub
xor
pop
cmpsl
pushf
inc
cmpsb
cltd
jl
dec
lea
fdivs
ljmp
jle
mov
cmp
adc
adc
inc
push
mov
dec
pop
stc
pop
sbb
les
aam
xchg
adc
mov
add
pop
subb
mov
mov
fdivs
jo
mov
or
add
dec
push
lea
fisttpl
add
cmp
push
push
call
or
sbb
das
imul
test
test
mov
fiaddl
mov
sub
push
pop
fiaddl
or
loop
xlat
lock
push
clc
adc
popf
lods
mov
sub
or
sbb
xor
sub
sbb
push
jge
dec
dec
jne
out
lcall
jge
push
lods
add
hlt
aad
es
push
add
adc
or
mov
les
add
mov
mov
lds
dec
shll
adc
dec
shll
sbb
and
shll
sub
inc
ret
scas
xchg
mov
add
push
pop
push
enter
push
movl
daa
ja
sbb
dec
in
dec
dec
xchg
inc
clts
fisubrl
sbb
sahf
add
testl
mov
cmp
mov
sbb
add
sbb
or
je
push
mov
sbbb
ja
scas
add
and
arpl
test
add
pop
loopne
lods
mov
mov
mov
jmp
mov
adc
push
push
adc
mov
jp
or
sub
adc
inc
sbb
js
push
jns
lcall
add
fwait
add
mov
pop
cmp
jg
sub
sbb
leave
push
loopne
hlt
jmp
or
nop
adc
aas
ss
mov
adc
mov
or
push
iret
scas
adc
mov
push
pop
lods
pusha
cmpsb
test
call
pop
test
mov
jecxz
leave
inc
xchg
cmp
cmp
rorb
and
dec
jmp
mov
pop
cmpsl
sub
xlat
pop
pop
fsubr
fsts
test
mov
cmpsb
dec
rol
dec
mov
iret
adc
or
cltd
mov
lea
int
dec
jmp
test
pop
pop
push
les
aas
mov
adc
cmpsl
or
inc
cmpsl
ja
pushf
and
sahf
sub
jae
mov
pmaddwd
rcl
push
pop
loop
dec
xchg
sub
lea
mov
inc
mov
xchg
fdivs
out
inc
movsl
and
out
pop
push
pop
pop
and
mov
lods
mov
popa
in
aam
and
xchg
outsl
push
or
lock
pop
fstl
es
mov
mov
adc
movsb
inc
adc
dec
or
cmp
push
sub
rorb
push
sub
leave
in
bound
jle
or
movsl
push
and
shl
pusha
xchg
test
neg
xchg
inc
inc
push
xor
ret
ja
add
rcl
daa
mov
jg
pop
rcrb
out
xchg
jno
imul
decb
and
and
decl
cmp
fidivl
add
push
popa
sbb
add
ja
sarl
jb
sbb
inc
push
adc
imul
or
movsb
dec
pop
xchg
outsl
pop
mov
les
xchg
test
xlat
int3
ljmp
shl
in
push
roll
and
sti
push
test
sub
test
cmp
out
adc
inc
push
adc
cmp
xor
inc
or
mov
jge
cmp
sbb
mov
je
test
add
movsl
in
sub
cmp
sub
xor
push
mov
sbb
inc
adc
or
push
out
or
push
nop
addr16
or
dec
xor
or
add
mov
sbb
enter
test
add
ljmp
enter
daa
add
pop
or
mov
in
cmpl
xor
mov
fildl
xchg
and
addb
or
cs
in
les
lea
ds
or
hlt
sbbl
or
fcompl
rorb
daa
cmpl
cmp
sub
adc
inc
test
iret
cmp
mov
cmp
mov
shll
das
push
jl
or
sub
sub
sbb
lock
cmpb
rcll
jae
push
jno
decb
js
push
push
sbb
cmp
gs
xor
and
jo
test
cmpsb
mov
daa
repz
pop
sbb
es
pushl
mov
dec
in
mov
iret
cmpb
inc
dec
jne
push
imul
cmp
pop
test
mov
and
call
cmp
divb
popf
or
push
cmp
fbld
pop
and
cmp
ds
dec
mov
subb
pusha
sbb
cmp
sbb
sbb
pop
fisubl
sbb
xor
or
pop
xor
xchg
jbe
imul
push
jo
pusha
adc
push
push
insl
call
lock
xchg
outsb
jae
push
push
pop
inc
cmp
and
adc
dec
loope
ret
jmp
add
sub
or
sub
push
imul
xorb
push
inc
stos
add
or
test
movsb
inc
outsl
fucomp
xchg
movsl
cmp
test
sub
sub
push
xor
add
shrb
sub
lock
or
imul
fdivs
test
mov
jmp
sbb
push
xchg
imul
or
adcl
jo
jl
mov
mov
shrb
and
pop
adc
inc
scas
or
xchg
push
push
pop
fmuls
out
test
jne
push
fs
sbb
data16
or
and
test
dec
cmp
jne
cmp
push
popl
pop
ret
shrb
fnsave
jge
mov
sub
mov
stos
insb
mov
mov
fwait
cmp
push
nop
cmpsl
es
inc
imul
stc
cmp
mov
lea
inc
inc
movb
pop
mov
sbb
ficompl
jmp
sti
cmp
je
jmp
loopne
fistps
jmp
mov
out
movsl
ret
adc
pop
out
add
mov
xor
cmp
mov
das
pop
sbb
out
mov
adc
add
enter
mov
sbb
adc
or
in
loopne
and
mov
mov
cmovae
mov
test
xchg
push
add
cmp
std
push
loop
cmp
mov
aam
cmp
inc
jmp
fcmovnb
ds
push
and
jmp
pop
fmull
mov
push
inc
cmpsb
das
nop
sub
test
xchg
loopne
iret
sbb
push
push
push
cmp
out
pop
nop
lods
sbb
fistpll
and
ficoms
inc
pop
sbb
pop
fdivs
mov
sahf
xor
dec
ficoml
ret
dec
out
dec
test
in
xor
lret
aaa
add
into
jmp
mov
or
stos
xor
cmp
mov
xor
js
or
mov
fistpll
fs
loope
rorl
inc
push
ret
adc
adc
in
sub
mov
mov
ljmp
push
xchg
sub
lea
js
test
jno
sub
lock
xchg
cmp
mov
mov
push
xor
sbb
mov
fwait
jmp
inc
and
and
and
in
fcomp
add
jns
sub
imul
in
imulb
push
push
insl
pop
sub
rclb
add
jmp
pop
xchg
dec
scas
dec
adc
or
pop
sub
inc
jne
or
enter
scas
inc
pop
push
nop
push
dec
insb
push
arpl
push
aas
loopne
and
ss
loopne
xchg
in
insb
cltd
ret
cmpsl
rol
cmp
inc
pop
sbb
fmull
mov
filds
mov
mov
daa
jbe
and
mov
popf
add
xchg
jecxz
in
sub
lea
movsb
mov
jl
xchg
bound
mov
adc
inc
lods
mov
push
and
mov
cmpl
sub
sub
enter
das
dec
push
dec
jmp
inc
mov
test
pop
mov
inc
mov
ljmp
mov
push
dec
sub
add
mov
add
pop
dec
ja
divb
dec
push
sbb
dec
fistps
test
xorb
push
xchg
adc
dec
pusha
jno
aad
mov
stos
pop
ror
adc
into
push
ljmp
mov
mov
add
mov
adc
adc
adc
xchg
sub
mov
clc
mov
aaa
ds
cmpl
incb
or
add
xor
fstps
das
clc
fbld
in
movb
adc
sbb
pusha
mov
hlt
lahf
and
pop
xor
and
ret
pop
movsb
inc
andb
xlat
lret
movsb
clc
lcall
or
or
cli
jmp
and
or
loop
mov
je
or
stc
mov
test
rclb
and
fdivs
fsin
arpl
mov
pusha
jno
outsl
je
test
mov
cmp
sbb
fists
add
ret
cmp
aas
inc
and
or
xor
lcall
sbbl
cmp
pop
pop
mov
add
jo
mov
sub
cmp
sub
push
adc
sbb
cltd
or
xchg
aaa
shlb
push
and
jb
xor
pop
and
mov
cli
hlt
push
and
cmp
rcrb
sbb
jae
mov
in
arpl
mov
call
xor
nop
mov
adc
cmp
je
mov
ret
jecxz
sub
push
repz
inc
faddp
sbb
xor
shlb
nop
inc
adc
pop
dec
sbb
sbb
pop
sub
xchg
push
enter
lcall
cmp
arpl
je
mov
mov
inc
cmp
jge
mov
je
add
add
and
inc
addl
test
push
mov
xchg
xchg
je
cmpb
or
pop
test
push
or
js
jo
lock
push
pop
inc
rol
mov
insb
pop
sbb
cld
push
lock
cmpsb
xchg
je
aas
jnp
loop
fs
and
dec
iret
jmp
ja
and
mov
mov
fcomps
es
or
push
sar
push
inc
mov
imul
mov
dec
enter
push
aaa
sub
out
popa
add
pop
dec
pop
mov
pop
in
jmp
inc
repz
pop
inc
pop
fs
xchg
sub
jnp
add
cmc
sub
or
lea
lods
jo
mov
mov
adcb
jge
leave
mov
outsl
xorb
lret
or
add
push
fistps
imul
or
roll
push
es
inc
lret
inc
icebp
cmp
ret
dec
adc
cmp
int3
lss
in
mov
ja
outsl
cmc
dec
adc
add
push
sub
andl
dec
or
movntq
out
dec
mov
pusha
hlt
xchg
and
push
adc
cmpsb
cmp
adc
or
xchg
jmp
cld
inc
rorb
nop
adcl
add
add
fcmovnu
jg
jmp
cmp
je
mov
test
jbe
push
adc
inc
lcall
cmp
push
or
inc
fsts
aaa
and
popl
fdivs
cmp
cmp
mov
je
cmp
or
dec
loop
cmpsb
pop
sbb
add
popa
or
sbb
adc
mov
test
in
add
test
ror
shlb
xor
js
and
mov
je
or
push
jl
add
mov
es
inc
das
pop
mov
int3
xchg
aam
cli
inc
mov
and
mov
lret
pusha
ss
pop
aaa
push
fdivs
int
and
in
push
scas
add
sub
lret
stos
pusha
xor
add
xchg
sub
push
adc
sbb
add
sbb
cld
fs
mov
inc
add
mov
mov
mov
mov
add
push
and
nop
addr16
or
or
jo
mov
jne
sahf
dec
sbb
and
adc
push
scas
addr16
out
idivl
or
mov
add
mov
inc
aam
mov
lahf
jo
inc
and
add
popa
cmpl
dec
fistpl
cmp
jp
nop
add
ficoms
int3
out
ss
push
xchg
adc
inc
and
or
or
cmpsb
jno
inc
dec
mov
xorl
fdiv
scas
je
sbb
xchg
jne
cmp
mov
push
add
sbb
stc
inc
jo
xchg
jb
push
xchg
xor
sbb
sbb
aas
add
out
inc
or
mov
mov
xlat
orb
mov
je
mov
ss
jl
imul
pop
push
lcall
mov
aad
je
cmp
ljmp
inc
bound
sbb
jo
iret
sar
xchg
movb
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
jbe
pop
dec
mov
out
xor
adc
ss
push
add
ret
sbb
sbb
or
add
test
sub
add
cmp
cmp
cmpsl
push
gs
inc
mov
rcll
and
test
sub
xor
shrb
je
push
add
and
mov
std
dec
add
pop
ret
jae
ficoml
dec
push
pop
xor
inc
out
add
test
nop
mov
sarb
test
imul
inc
js
fstpt
or
xchg
shr
aaa
add
rcr
and
pop
dec
test
pushl
push
cmpsb
cmc
mov
cmc
lds
push
insb
xchg
push
add
shrb
push
mov
ret
hlt
pop
or
xchg
fcomps
test
adc
sbb
push
orl
and
test
incl
push
cmp
out
lahf
push
mov
inc
or
mov
push
cmp
mov
ret
shl
pop
add
pop
push
mov
xor
or
ds
fdiv
mov
push
xor
push
sbb
std
mov
rorl
fldl
or
mov
inc
daa
dec
dec
push
jo
sub
inc
dec
xchg
aaa
xlat
cmp
std
js
arpl
push
loope
sub
int
xor
in
pop
or
push
and
nop
xor
loope
cmpsl
sub
push
leave
rclb
jle
jne
aas
pop
sahf
xchg
mov
pop
jmp
cmp
clc
jne
add
adc
push
imul
pop
test
and
xchg
xor
nop
jno
shl
jne
cmp
inc
loopne
xchg
mov
xor
je
les
push
out
pop
lods
xor
out
ret
bound
mov
ret
cs
inc
and
pop
shrb
sbb
jb
inc
dec
push
push
dec
test
ss
push
inc
or
test
pusha
inc
or
cmp
and
inc
fs
dec
enter
xchg
or
stc
jb
inc
jbe
das
sbb
cmp
jne
xchg
dec
jne
push
mov
dec
and
push
push
imul
push
cs
mov
xor
cmp
mov
mov
pop
or
lret
inc
add
add
or
iret
dec
and
push
push
xchg
mov
push
add
test
adc
cmp
mov
mov
cmp
adc
cmp
sete
mov
loopne
push
cmp
mov
fisttpl
cs
out
movsb
mov
push
adc
adc
push
pop
fadd
dec
add
or
mov
mov
dec
mov
mov
imul
push
in
jne
mov
shlb
xchg
jg
pop
les
adc
pushf
inc
xor
mov
push
sbb
inc
dec
fists
das
pop
dec
xor
pop
pop
loope
das
rolb
mov
mov
roll
mov
lret
inc
fcmovnu
mov
dec
push
xchg
dec
adc
add
push
inc
or
fwait
cmp
xorb
xlat
adc
pop
std
inc
adc
pop
sub
das
add
push
and
push
jp
sarb
mov
push
fdivrl
mov
add
dec
push
dec
push
adc
mov
shll
push
aam
fisubs
in
cmp
cli
clc
dec
and
ja
cmp
mov
push
bound
xchg
lds
add
mov
cmp
mov
lds
sti
ffree
es
xchg
pop
adc
aam
or
outsl
lretw
enter
pusha
stos
arpl
or
cmpsl
pusha
test
stos
rolb
test
inc
dec
cmp
mov
addl
cmpl
dec
lret
outsb
dec
add
popf
dec
clc
adc
dec
dec
mov
mov
sub
xor
das
ljmp
adc
and
adc
sbb
pop
setbe
mov
lea
inc
push
adc
mov
lahf
jne
sbb
sti
add
jno,pt
subb
mov
add
sbb
adc
pop
push
add
hlt
hlt
pop
jne
inc
ds
mov
fcoms
add
add
addl
mov
test
add
or
lret
jg
fcoms
mov
mov
push
test
inc
xchg
sbbb
fiadds
mov
enter
sub
dec
or
fsub
andb
mov
push
ret
jns
sub
pusha
imul
pop
or
mov
mov
repnz
popa
fadds
flds
mov
andl
daa
fmul
aaa
lret
mov
dec
push
es
pop
or
mov
pop
mov
cmp
je
add
lret
jg
sbb
mov
addb
adc
rolb
jae
call
sub
xor
inc
mov
mov
sbb
loopne
movsb
push
add
xor
add
xor
sbb
push
push
mov
adc
mov
nop
add
xchg
ss
jl
ret
lcall
sahf
or
or
lret
adc
or
or
adc
test
add
adc
int
pop
pop
jecxz
pop
outsb
leave
add
push
jo
pop
nop
shlb
jle
xchg
bound
sbb
push
cmp
xchg
mov
add
loope
jle
or
push
cmp
je
mov
test
popa
push
jae
mov
sub
mov
dec
push
mov
and
testb
je
or
or
je,pn
test
ja
push
sub
push
addr16
or
push
rcll
jle
ljmp
iret
lods
sbb
inc
sub
jb
mov
push
jmp
inc
pop
adc
or
cli
push
push
sbb
inc
dec
or
add
gs
xchg
sbb
cmp
xor
inc
mov
xor
add
mov
or
add
rorb
das
cmp
je
jmp
int
push
xor
dec
in
adc
fldcw
pushf
mov
adc
je
mov
in
dec
rcll
or
pop
push
add
mov
lods
mov
in
mov
cmpsw
es
cmp
lock
mov
jo
add
mov
lea
push
ja
push
xor
mov
imul
jg
adc
addb
lret
and
sub
sbb
pop
cmp
pop
shrb
push
pop
test
test
icebp
sub
xor
aaa
repnz
or
mov
movb
ja
rcrb
add
push
push
ja
es
imull
cmp
orb
push
dec
push
jecxz
cs
push
lret
in
push
or
movsl
sbbb
add
mov
xor
adcb
sbb
call
aam
aas
or
mov
xchg
cmp
shufps
dec
and
and
mov
and
cmp
and
imul
and
pop
pop
xchg
push
pop
xchg
or
pusha
mov
ss
cmp
data16
inc
inc
push
pmaxsw
lahf
dec
cmp
mov
fsubr
cmp
out
aas
iret
enter
ret
lahf
jo
adc
test
rcll
sub
daa
jl
sbb
addr16
insb
mov
inc
fmull
push
pushf
xor
nop
mov
mov
das
mov
mov
aaa
imul
addb
cmp
dec
lock
je
jp
xchg
loop
push
cld
xchg
dec
push
adc
adc
and
adc
mov
or
fcmovbe
add
sahf
notb
mov
stc
mov
adc
jae
shlb
inc
fsubl
or
adc
loope
cmpsb
jo
pop
jle
dec
sbb
sub
cmpb
mulb
push
inc
and
cmp
or
in
inc
fsub
xor
pop
pop
mov
mov
jne
push
sbbl
adc
shl
ja
jle
jg
pop
imul
call
outsb
shl
adc
dec
xor
add
jge
mov
nop
aas
jle
or
pop
mov
lea
push
and
orb
and
hlt
and
jg
adc
xchg
pusha
stos
cmove
mov
push
rolb
aaa
incb
inc
pop
inc
ret
and
loope
add
pop
or
pop
clc
cmp
add
cmpb
jne
sarl
jne
sbb
mov
xchg
lret
pusha
icebp
cmovo
inc
jp
mov
pop
cld
add
push
popa
and
dec
es
flds
push
pop
and
clc
mov
fwait
sbb
jecxz
fs
mov
and
arpl
push
popf
gs
dec
xor
jns
and
add
push
orb
pop
dec
jb
daa
shr
and
psrad
mov
jl
mov
jae
jnp
push
and
push
aam
aas
mov
or
pushl
sbb
imul
push
js
push
dec
dec
lret
push
aam
ja
xor
lret
add
les
in
mov
add
pop
fildl
cmovle
mov
lock
add
lock
lahf
add
jbe
iret
fcoms
xor
mov
dec
adc
dec
or
dec
lret
lret
hlt
lock
ja
ljmp
cs
pop
in
call
push
fsts
add
inc
xchg
adc
jle
dec
jecxz
outsl
xchg
sbb
arpl
sbb
or
stos
jbe
pop
ficoml
scas
and
mov
imul
ss
pop
adc
call
jmp
in
fmull
fildl
fsubp
call
mov
adc
jle
adc
mov
push
fucomp
adc
sarb
mov
add
mov
fmul
clc
daa
pop
sub
inc
add
jo
push
inc
adc
push
cwtl
jl
mov
push
insb
push
mov
cmp
add
scas
mov
push
daa
imul
or
add
and
push
add
cmp
lds
out
into
and
cwtl
or
pusha
mov
mov
jp
cli
shl
roll
cmp
jne
add
inc
fcoms
pushf
rcl
pop
inc
push
sbb
adc
cmp
lock
aaa
sbb
ficomps
lea
ljmp
imul
inc
cmpsb
sub
mov
cmpsl
mov
xchg
mov
aas
sub
cwtl
add
add
xorb
or
outsl
inc
shlb
push
or
add
inc
inc
mov
mov
mov
xchg
dec
mov
xor
pop
add
mov
mov
fsubrs
xchg
pop
pop
loopne
cmp
enter
or
inc
mov
pushf
add
push
pusha
adc
jmp
or
push
adc
adc
mov
ret
mov
or
cmp
push
mov
out
pop
mov
cmp
mov
call
inc
loopne
in
movsb
jne
testb
addl
add
sbbl
xchg
sbb
mov
sbb
ljmp
inc
pop
es
les
pushf
out
cli
in
outsl
or
rorb
lret
mov
push
notl
loopne
adc
pop
mov
xchg
sbb
jo
js
pop
je
cmp
jnp
inc
add
add
je
mov
xchg
sbb
sbb
jb
and
loope
sub
sbb
sahf
je
or
adc
mov
les
and
aad
aaa
adc
ficomps
mov
xor
mov
sbb
pusha
xor
mov
int3
jb
loopne
in
xor
mov
xor
xor
xchg
nop
shrb
test
test
or
adc
cmp
add
mov
inc
inc
hlt
xor
pop
loopne
pop
psubsw
inc
rcr
inc
bound
aas
add
xor
push
pop
mov
cmp
es
xchg
cld
lea
xchg
xchg
leave
jle
faddl
mov
push
jb
call
fnstenv
sbb
and
pop
les
out
enter
and
ret
in
xor
bound
sub
sbb
inc
jo
les
inc
lsl
js
or
xor
push
adc
add
js
jne
or
pop
sbbl
imul
ja
jecxz
mov
data16
mov
jbe
xor
shrb
jmp
sarl
clc
nop
loopne
mov
loopne
iret
dec
sbb
inc
outsl
inc
xchg
jmp
inc
jbe
adc
cmp
and
adc
sbb
xor
dec
xorl
ljmp
push
loope
and
lea
add
ret
les
test
push
and
les
xchg
mov
rcrb
je
int3
pop
add
jns
jno
iret
sub
mov
pusha
aas
ret
xor
push
pop
movsb
inc
or
sar
mulb
sbb
aam
hlt
mov
sub
filds
outsb
bound
sbb
popa
pop
ds
mov
cltd
xor
xchg
imul
sarb
popa
ja
add
or
xchg
or
les
xchg
push
loopne
test
inc
int3
test
add
and
push
subl
jle
cmp
push
je
push
add
imul
rolb
mov
mov
lock
push
pop
stos
shlb
insb
pop
rorb
sarb
adc
xchg
daa
daa
fistps
sub
sub
or
dec
or
jp
ret
and
push
fnstsw
cmp
sub
fstl
mov
or
cmpsl
mov
sub
jge
push
pop
addl
or
lcall
sub
push
add
push
or
mov
or
adcb
ds
dec
inc
xor
adc
sbb
xchg
mov
scas
mov
mov
mov
jnp,pn
mov
mov
add
mov
mov
inc
jae
addr16
inc
push
stc
inc
jmp
add
sub
fwait
mov
and
sbb
and
scas
dec
jp
dec
and
and
sahf
loope
pop
xor
push
mov
pop
mov
icebp
push
push
mov
push
jne
mov
sbbb
cmpb
and
aas
lahf
mov
add
aaa
cmp
addb
out
mov
fs
xchg
pushf
jne
faddl
pushf
add
loope
jg
jb
divl
cmp
es
and
fmuls
or
sub
ja
add
bound
inc
dec
sub
push
mov
aaa
pop
jmp
ret
addl
dec
pop
dec
add
in
sub
clc
notb
jle
push
jmp
xchg
fisubrl
incl
and
adc
inc
sbb
push
and
or
aaa
enter
int
mov
cmp
cmc
sub
cmp
lock
adc
and
orl
pusha
mov
ror
rolb
lock
inc
dec
in
or
lods
or
mov
or
dec
test
add
jmp
aaa
mov
jge
outsb
clc
jbe
cmp
and
rolb
ja
in
pushf
or
mov
mov
loopne
xor
xor
mov
mov
inc
ret
push
sbb
mov
mov
xor
cld
push
mov
pop
or
insb
ja
sbb
xor
adc
add
test
or
add
push
xchg
add
or
jl
push
xchg
loop
mov
lahf
pop
aam
inc
dec
xor
cltd
sub
mov
mov
cmp
and
jnp
pop
insb
mov
and
sbb
adc
xor
mov
inc
cmp
sbb
sbb
xchg
mov
cmp
mov
push
dec
jp
loopne
sbb
in
fmuls
or
ret
testb
cmpw
fiadds
dec
jle
and
and
imul
pop
or
cli
movsb
arpl
aam
and
jae
push
or
dec
mov
iret
roll
lahf
sub
adc
pop
add
adc
fcomps
push
insl
xor
clc
fiaddl
mov
sbb
mov
imul
adc
mov
fst
dec
fwait
mov
lods
inc
dec
jl
addr16
xchg
jmp
or
push
add
add
ffree
gs
dec
inc
cs
cmpsb
cmp
dec
or
dec
cmp
jp
orl
mov
rorb
or
pop
ret
fucomi
rcll
mov
add
rolb
and
sub
lahf
add
mulb
sbb
outsl
and
push
movsb
adc
fiaddl
mov
fadds
xor
or
popa
fs
fs
cmpl
push
shll
movsb
test
imul
mov
call
dec
or
pop
xchg
pop
stc
mov
xor
loopne
cmpsb
add
and
sub
mov
call
and
xor
push
sbb
lock
inc
and
mov
pop
fmuls
leave
test
adc
sub
stos
jmp
out
lds
jo
outsl
enter
add
add
rcrl
pop
xchg
mov
sbb
mov
or
ret
xor
mov
add
jo
dec
and
and
dec
not
les
pusha
out
add
inc
sbbb
push
rorb
mov
outsl
xchg
mov
stc
jle
jg
or
je
push
lock
push
rorl
adc
adc
imul
xchg
xchg
dec
push
dec
or
dec
aaa
loop
jecxz
je
mov
pushf
adc
adc
sbb
inc
sbb
add
loopne
and
or
jmp
push
jne
add
and
push
mov
je
pushf
pop
push
inc
cmovae
push
loop
nop
mov
xlat
jl
rol
push
xlat
pop
insb
cmp
pop
jmp
cmpl
insl
cmpsb
shlb
icebp
and
jo
repnz
aas
xchg
sbb
popa
pusha
mov
or
xchg
jo
ret
or
sub
inc
push
mov
add
loop
aam
sbb
andl
movsl
push
cmpsl
jl
push
aad
mov
or
push
lar
or
or
pop
xlat
lcall
mov
xchg
lock
popf
cmp
pop
out
pop
into
xchg
push
sbb
in
pop
or
xchg
mov
mov
hlt
and
insb
ret
leave
rol
outsl
das
adc
iret
ret
mov
das
xor
inc
pop
and
push
daa
dec
daa
or
add
add
aad
ret
xor
jp
inc
mov
sbb
mov
ljmp
xor
loopne
insl
pop
push
ret
mov
sbb
or
pop
and
push
xor
imul
dec
bound
or
lock
nop
push
sub
insl
jno
mov
cwtl
hlt
or
dec
dec
push
adc
mov
add
push
cld
inc
push
mov
lcall
pop
lcall
popf
rolb
dec
xchg
dec
add
push
xor
sub
sub
dec
and
lock
add
xlat
fimull
mov
stos
popw
inc
arpl
test
mov
daa
pop
and
jmp
cld
int3
popl
imul
inc
outsl
mov
and
sub
add
fnop
push
sub
sarb
movsl
ljmp
add
adc
cmpsl
xor
cmp
sbb
mov
sbb
and
push
inc
cmpsb
sub
adc
and
and
insl
std
loope
mov
cmp
jno
dec
inc
movaps
sbb
mov
push
out
insb
cmc
push
xor
lea
push
and
leave
sarl
sub
inc
jb
pop
xor
pop
leave
or
cwtl
sti
push
shlb
push
or
out
movsl
fld
popa
dec
dec
push
aaa
xor
inc
pop
inc
push
cwtl
push
xor
xor
xchg
popf
sbb
jo
daa
xchg
fcoml
js
sbb
adc
mov
fisubl
lret
push
xchg
addb
jmp
sbb
fsubl
leave
mov
inc
aaa
decl
add
fldl
fcompl
add
fiadds
xor
or
dec
pop
push
mov
icebp
xorb
dec
mov
push
xor
dec
jg
mov
add
and
cli
sbb
add
jns
mov
cwtl
js
push
add
insl
cmp
push
add
jnp
test
lock
sub
sub
fisubs
sub
nop
xor
xor
out
jns
jl
xor
and
std
mov
push
outsb
ret
add
inc
sub
fnstsw
js
dec
je
add
jmp
bnd
in
fcoms
int3
pop
pop
add
popa
xchg
aaa
push
sbb
pop
mov
insb
inc
arpl
stos
push
cmp
out
data16
push
dec
push
cwtl
call
fcoml
cwtl
popa
test
inc
fiaddl
shll
sbb
loopne
pop
sar
arpl
or
lret
add
mov
or
fwait
mov
add
mov
jne
outsl
repz
shlb
jo
xlat
add
and
pop
adc
das
lods
andl
aam
popa
sbb
mov
or
xchg
rolb
inc
dec
aaa
mov
cli
movsb
and
adc
adc
cmp
jb
push
rclb
sub
ret
inc
jmp
adc
nop
es
out
sub
push
or
jne
xor
mov
dec
cmpb
jo
mov
jnp
lea
push
inc
sbb
push
stos
mov
mov
mov
push
mov
pop
loop
sub
call
jmp
test
imul
cwtl
dec
fiaddl
xorl
push
addl
add
insl
mov
mov
xor
inc
mov
pop
ja
imul
xor
bound
mov
inc
or
xchg
mov
sbb
jb
mov
es
and
dec
mov
ffreep
subl
inc
cmp
add
test
or
inc
jl
adc
orl
sub
rclb
movsl
sub
roll
mov
imul
and
lret
inc
mov
jo
mov
or
inc
sbb
aam
ret
pop
ud2
adc
pop
cmp
xchg
inc
movb
lock
dec
lea
mov
lcall
add
js
mov
movhps
leave
add
xor
jl
jmp
in
mov
movsb
cmp
adc
pop
rcrb
pop
daa
add
outsb
push
les
cld
sub
jo
inc
lods
and
enter
dec
add
xchg
hlt
sbb
add
dec
popa
in
inc
dec
pop
add
jmp
jl
cmp
loop
mov
lahf
cld
insb
shrl
add
inc
sbb
hlt
or
addb
or
ret
add
inc
iret
hlt
push
sub
and
rolb
in
pop
mov
pop
jp
push
loop
test
adc
adc
dec
mov
aam
add
jl
pop
mov
out
pop
push
mov
cmp
pop
jmp
jb
and
pop
push
mov
addb
ds
pop
daa
outsl
cmpb
inc
setg
jmp
das
cmp
dec
dec
inc
add
cmp
setle
xor
movsl
imul
dec
sbb
dec
roll
adc
cld
or
xchg
xchg
mov
mov
or
mov
add
lret
push
test
sbb
sbb
sti
mov
mov
popa
ljmp
or
stos
repz
adc
lods
dec
lock
mov
xchg
sbb
xchg
enter
and
enter
imul
push
sub
aaa
pop
out
pop
jo
dec
imul
loope
int
add
subb
mov
loopne
rolb
jmp
aaa
pusha
enter
jmp
xorl
bndstx
es
mov
or
xchg
pushf
std
or
xchg
lret
and
xchg
mov
call
aaa
lock
add
in
call
popf
movb
rolb
imul
out
mov
or
orl
jne
icebp
adc
jecxz
ret
cmpb
dec
sub
aaa
mov
add
jb
sub
xchg
mov
cmp
xchg
cmc
inc
add
pusha
or
pop
xchg
loope
add
push
mov
lock
scas
push
repz
push
or
push
cmp
jbe
iret
bound
mov
adc
jle
sub
mov
mov
lods
or
fs
add
jmp
push
mov
rcll
jmp
clc
xor
mov
fstpt
imul
cld
mov
mov
dec
cmpl
dec
lods
mov
pcmpeqw
movsb
cs
dec
inc
xchg
and
cli
add
xchg
push
imul
jnp
jg
sahf
stos
push
sub
sbb
jnp
sub
insb
insl
and
inc
stos
aam
xchg
sbb
cmpsb
test
adc
fidivrl
hlt
fldl
push
pop
addl
or
sub
out
sbb
subl
dec
cli
sbb
cmp
jne
xchg
call
jmp
movsb
pusha
test
cltd
pushf
add
mov
mov
fildll
jg
push
mov
scas
bound
inc
sbb
or
dec
or
dec
push
cmp
aas
fldt
add
cmp
jge
push
add
mov
and
add
cmp
cmc
xchg
xor
leave
pop
clc
dec
or
or
inc
push
hlt
pop
jnp
sub
int
cs
shl
test
pop
adc
cmpsl
jne
aaa
add
test
add
push
and
sub
push
cmp
dec
test
lock
fcomps
pop
cmp
sbb
cmp
jne
push
add
rcl
sti
push
add
push
adc
mov
pop
sub
cmpsl
sbb
add
adc
push
ds
pop
xor
sub
xor
test
xchg
xchg
daa
stc
xchg
mov
dec
pop
imul
cmpsl
cli
les
add
push
add
push
xor
int3
cmp
pop
cmc
jb
js
pop
and
xor
in
je
nop
and
jbe
adc
gs
pusha
jmp
shr
nopl
jb
jnp
scas
mov
pop
push
imul
test
pusha
push
out
lods
mov
ffreep
call
ffreep
push
mov
adc
std
jne
and
imul
fiadds
cwtl
mov
sub
xchg
sbb
cmp
xor
test
or
adc
xchg
lret
mov
and
mov
xor
sub
sub
imul
cmpb
mov
xor
xor
add
jns
outsl
push
in
and
mov
mov
push
test
add
sbb
movups
add
inc
adc
inc
cli
rcrl
aas
adc
mov
pop
enter
rclb
or
dec
mov
sarb
ret
pop
mov
adc
lret
add
clc
xor
mov
fucomi
mov
inc
pop
pop
xchg
xor
sbb
lcall
into
jg
push
mov
rolb
test
push
movsl
sarb
insb
aas
clc
lret
clc
dec
xor
dec
add
pop
call
sarl
xor
inc
mov
sahf
movsb
popf
movsb
sbb
jae
pop
push
xchg
jne
mov
mov
lcall
mov
inc
shrl
js
lret
rorl
cwtl
mov
xor
fs
cmp
jne
inc
adc
pop
jecxz
mov
insb
mov
xchg
sbb
xor
dec
ss
xchg
xor
mov
pop
insb
idiv
mov
aas
jmp
mov
sbb
fadds
jae
pop
or
lods
adc
mov
sub
arpl
and
fld
imul
inc
pushf
pop
cmp
jle
cmp
lods
jmp
imul
and
dec
sti
fbstp
leave
je
add
sbb
aas
inc
jmp
sahf
cltd
mov
mull
xchg
call
inc
dec
sub
cmpsl
je
loop
sbb
mov
outsl
popa
inc
add
or
add
fdivs
xlat
add
test
mov
test
cwtl
and
sub
daa
push
pop
sbb
sbb
dec
cmp
and
pusha
insb
fimull
into
or
rol
push
js
xchg
push
filds
orl
aam
aam
inc
cmpsl
push
bound
cmp
nop
lret
adc
sub
and
add
inc
jp
adc
ret
mov
add
pop
aaa
and
or
pop
not
ret
sub
je
orl
lods
movsb
mov
mov
push
sub
cmp
popa
mov
push
cmpsb
std
mov
adc
addb
hlt
aam
xor
or
sbb
out
push
add
nop
je
add
or
fstl
add
sbb
daa
mov
sbb
mov
push
xor
nop
mov
pop
push
fs
inc
push
push
dec
add
push
cmp
enter
call
and
add
lods
adc
cwtl
xchg
nop
aam
testb
sub
pop
add
rclb
and
inc
stos
test
cld
insl
adc
inc
dec
dec
push
push
sarb
sbb
add
lea
lcall
stc
jo
push
es
daa
dec
std
or
ja
mov
xchg
push
inc
je
and
add
addr16
arpl
aas
push
roll
inc
movzwl
xor
decl
push
push
out
mov
jnp
push
inc
sarb
hlt
sub
mov
sahf
nopl
lock
xchg
adc
shrb
and
jecxz
sub
add
outsb
add
adc
ret
nop
int
inc
dec
or
inc
inc
decl
push
xor
adc
push
sub
rorl
stc
pop
add
ffreep
imul
or
int3
jne
pop
and
addb
dec
mov
add
int
or
out
cmp
fists
sbb
mov
adc
lods
mov
les
jne
inc
dec
out
and
mov
lea
mov
or
jnp
add
push
loope
pop
aaa
loop
lods
sub
cmp
jecxz
clc
clc
cmpb
mov
popa
jne
sbb
mov
xlat
lea
or
xchg
mov
lods
xorl
loop
out
jl
jnp
adc
add
lock
inc
and
pusha
xchg
je
loopne
cmp
sbb
es
ss
fsubrl
adc
mov
test
mov
rcrb
push
rcrb
fidivl
bound
outsl
test
mov
ret
mov
and
inc
int
adc
xor
cmp
rcll
or
aam
inc
std
and
sub
addr16
or
xchg
jl
pop
repnz
xchg
sbb
jecxz
fiadds
shl
fsubrl
cli
mov
adc
sbb
ss
lahf
orl
and
shrb
add
xchg
and
ja
pop
pop
ja
or
dec
arpl
test
lock
dec
xor
imul
ja
lock
movb
mov
mov
out
mov
push
call
lds
inc
mov
pop
xor
nop
cmpl
in
jg
iret
es
repnz
xchg
mov
jne
push
shlb
sbb
adc
xchg
cld
popf
or
xor
or
push
or
shll
dec
xor
cmc
xchg
rorb
daa
lds
sbb
or
shll
imul
or
cmp
je
jno
mov
inc
inc
pop
sbb
mov
dec
sbb
std
xchg
lcall
adc
dec
shlb
lock
adc
fsubrp
or
cli
movsb
sub
out
and
xchg
mov
decb
ds
pop
mov
push
xlat
loope
cmp
mov
jo
push
arpl
and
inc
filds
cmp
mov
add
test
out
or
jecxz
sbb
mov
mov
mov
sub
ja
push
sbb
pop
sbb
out
xorl
ss
andb
mov
cmp
shrb
jg
clc
lahf
push
add
push
inc
mov
xchg
sub
or
mov
pop
push
xchg
lods
push
pushl
add
and
lods
push
repz
add
jno
test
jne
push
sarb
cltd
mov
sbb
adc
or
adc
sbb
arpl
pop
dec
gs
lahf
mov
adc
push
adc
xor
cmpl
pop
pop
sbbl
rorl
movsl
pop
aad
dec
or
out
imul
sub
xor
insl
cwtl
lcall
sub
ret
call
sar
pop
test
mov
mov
xlat
test
adc
mull
jl
sub
pop
mov
jl
adc
inc
adc
test
add
adc
inc
pop
dec
xchg
mov
push
popa
xchg
movsb
pop
mov
add
add
push
cmp
mov
push
shr
adc
je
push
pop
loope
sub
adc
out
pop
jp
jo
or
adc
or
sub
ret
popl
mov
imulb
adc
sub
cmp
jmp
inc
sbb
outsb
and
test
jno
orb
loopne
inc
in
les
sarb
andb
add
test
xchg
push
mov
mov
pop
jo
and
test
jae
push
adcl
icebp
pop
mov
jmp
mov
cmp
enter
sbb
add
and
mov
sbb
arpl
jecxz
cmp
call
and
iret
dec
add
pusha
xchg
mov
or
in
push
rcll
into
pusha
int3
inc
jle
jb
add
inc
aas
jno
imul
mov
outsl
call
sbb
inc
mov
add
add
inc
xor
cmp
sbbb
sbb
push
data16
mov
mov
add
or
sbb
insl
add
mov
mov
rcr
loop
adc
adc
and
or
jno
addr16
call
xchg
cmp
jge
test
sbb
pusha
and
inc
imul
mov
xor
push
dec
mov
mov
mov
or
and
loope
inc
xchg
cwtl
call
or
xor
loope
lock
and
push
lods
sbb
inc
xor
and
movsl
scas
mov
dec
adc
orb
hlt
pop
call
loope,pn
and
mov
add
out
nop
cmp
sbb
cwtl
movl
movsl
movsl
stos
add
mov
pop
push
xor
fwait
or
stc
push
cmpl
mov
mov
sbb
call
fists
add
call
and
xlat
icebp
clc
push
lock
push
add
adcb
inc
dec
mov
and
imul
mov
pop
loopne
pusha
xor
dec
fiadds
push
gs
loope
iret
cli
inc
sbb
add
xor
sar
xor
insb
rcrb
shr
out
imul
sbb
push
pop
pop
in
dec
shll
inc
stos
lock
leave
jge
or
push
mov
add
orl
shr
in
xchg
or
sbb
xchg
popa
js
dec
unpcklps
pop
or
mov
adc
inc
fwait
inc
es
ss
or
les
pop
xor
and
sbb
push
xchg
adc
jmp
xor
popf
pop
xchg
and
jno
je
pop
cmp
sets
and
in
jno
mov
and
add
push
fiaddl
jmp
in
inc
dec
push
and
push
aad
repnz
mov
xor
dec
xchg
cmp
and
adc
add
push
sbb
or
arpl
cs
ret
add
inc
xor
clc
aam
clc
jecxz
sti
inc
add
sub
shlb
or
insl
rcrb
adc
cmpsb
mov
movb
mov
sbb
push
sti
or
push
ja
inc
or
mov
sub
sub
lcall
pop
pop
sbb
xchg
test
addr16
push
dec
push
das
pop
sbb
divps
pop
mov
and
rol
jne
or
push
adc
shll
adc
inc
iret
sarl
loope
cmpl
sbb
mov
inc
test
stos
and
xchg
xor
or
pop
and
pop
push
pop
inc
nop
daa
aas
pusha
pop
int3
test
inc
nop
inc
popf
pop
and
jg
stc
xchg
mov
add
or
xchg
and
adc
dec
and
mov
jmp
repz
std
mov
jne
scas
sbb
mov
push
mov
sub
test
dec
mov
dec
add
enter
nop
mov
cmpl
int3
fldenv
stos
shl
or
sbb
add
push
popa
cwtl
xchg
inc
mov
add
adc
je
sub
or
xor
out
jo
pop
push
stos
sbb
mov
push
sbb
rcrb
arpl
mov
or
stc
je
inc
call
loopne
adc
push
adc
faddl
sub
xchg
sub
outsl
ret
adc
inc
shll
xchg
adc
add
repz
mov
cmp
xor
xor
mov
or
adc
cs
inc
cmp
inc
pushw
dec
and
inc
mov
push
lea
ret
ss
mov
js
inc
jnp
or
pop
je
movswl
sub
jmp
sbb
add
lods
and
cmpsl
mov
andl
imul
pusha
cmpsl
pusha
sub
push
xor
xchg
rcrl
push
mov
xchg
daa
sbb
dec
cmp
clc
movb
xor
daa
mov
xchg
sub
icebp
xor
das
cld
or
xchg
pop
and
mov
mulb
js
fdivrs
mov
je
cltd
jo
jo
mov
dec
xchg
test
or
sub
test
push
imull
mov
or
and
jne
sub
add
roll
mov
sbb
add
adc
popf
inc
cmp
and
adc
test
and
in
cs
mov
shlb
push
pop
mov
inc
xchg
lret
rorb
cmp
lret
or
adc
adc
les
cmp
stos
mov
mov
sub
mov
pop
sarb
imul
loop
sarl
dec
pop
push
rcl
inc
pop
test
mov
mov
outsb
aam
ja
aaa
ret
pop
andl
pop
loopne
jle
mov
iret
dec
adc
xlat
push
hlt
jmp
fdivs
adc
cmp
xrelease
mov
xor
scas
add
cmp
rclb
or
and
xor
test
dec
rcrl
lea
addr16
pop
and
cmp
rorl
shrb
push
cs
in
adc
mov
out
stos
or
jmp
inc
insl
mov
out
sub
sub
dec
adc
pusha
add
out
xchg
outsb
xlat
icebp
xor
fiaddl
mov
daa
adc
fxch
shrb
and
mov
adc
xchg
add
test
jne
dec
jo
pusha
mov
daa
adc
adc
push
mov
fists
xor
lahf
in
je
mov
loopne
icebp
movaps
jle
push
push
pop
sub
and
mov
add
je
js
sub
sahf
mov
dec
stos
push
fstps
sbb
lea
dec
mov
xor
xchg
sbb
xor
aam
test
inc
sub
mov
add
ftst
xor
pop
loop
ja
roll
jb
les
add
xor
add
pop
push
mov
adc
or
cmp
xchg
mov
pop
inc
jmp
and
sbb
add
jnp
inc
sub
pop
sub
cmp
inc
ret
xchg
pop
cmc
push
ds
sbbl
insb
movsb
or
mov
test
imul
and
adc
int3
scas
dec
mov
or
add
or
adc
scas
test
push
and
add
mov
jg
push
dec
insb
adc
fcomps
enter
jne
movsl
mov
sbb
sbb
cmc
push
and
add
dec
sbb
mov
sbb
cmp
cmpsl
xor
mov
test
jp
jmp
daa
add
push
or
inc
shll
add
push
iret
inc
cs
jb
in
call
and
mov
and
fistpll
add
mov
push
loop
adc
push
push
setle
lea
iret
cs
mov
inc
fdivs
orb
and
sbbl
pusha
arpl
mov
xor
js
pusha
pop
das
insl
pop
out
jno
sbb
add
dec
in
xchg
or
dec
adc
xlat
add
adc
push
and
inc
ja
icebp
push
push
fldenv
adc
add
gs
xchg
jp
sti
popl
pop
aas
mov
and
outsl
dec
xor
pop
mov
or
je
adc
bound
push
cmp
add
js
pop
inc
pusha
adc
push
jbe
pop
mov
js
aaa
pop
sub
or
or
cld
stos
push
dec
jne
push
mov
or
dec
add
add
ret
lcall
push
pop
xchg
out
nop
mov
xchg
and
iret
mov
movb
or
jle
ret
in
xor
scas
or
ds
jmp
aam
insb
jge,pn
sbb
movsl
subl
test
jne
add
js
pusha
dec
mov
inc
pushl
imull
jb
xchg
cli
add
imul
into
xor
test
les
inc
data16
adc
fimull
pop
adc
ljmp
fidivrs
push
sbbb
ret
sub
jp
ret
lds
xchg
out
xchg
dec
cmp
adc
in
xchg
ret
dec
dec
xchg
xchg
invd
filds
mov
cltd
loop
adc
out
icebp
jg
inc
stos
stos
sbb
mov
cwtl
and
cli
repz
aaa
mov
xchg
mov
push
insb
mov
inc
and
push
inc
or
xchg
arpl
mov
cs
mov
xchg
xor
jno
mov
mov
jmp
test
push
or
mov
pop
das
dec
push
push
xchg
jae
xchg
test
sbb
mov
dec
ljmp
test
test
push
mov
jae
pop
push
cmp
pop
pop
outsl
divl
mov
aaa
xor
jns
andb
cmpsl
jle
scas
cmpsb
loopne
and
sub
adcl
pop
std
push
mov
push
cmp
das
in
or
into
dec
push
pop
or
push
test
mov
pop
xor
idivl
mov
adcl
into
jnp
dec
js
testb
jb
add
cli
adc
cmp
pop
shrl
jbe
rcl
addr16
xchg
jmp
stos
jne
push
adc
add
jg
mov
inc
adc
pop
ljmp
in
sbb
xor
add
je
cwtl
outsb
fsts
inc
inc
adc
movsb
xor
pop
rolb
jl
je
call
stos
jmp
or
add
push
stos
pop
or
pushf
faddl
cmp
addl
push
add
cmpl
test
sahf
push
movsb
lods
dec
add
jae,pn
lods
or
xor
xor
cmp
stos
mov
sbb
fildll
dec
jecxz
sub
push
adc
pop
jmp
mov
out
rcr
or
cmpl
mov
mov
add
ret
in
inc
push
mov
add
adc
daa
mov
adc
add
add
aaa
mov
pop
inc
les
pop
jb
push
cltd
dec
push
sbb
jmp
inc
shl
jae
jne
pop
iret
adc
cmpsl
movsl
cmp
sub
addb
lods
loop
pop
add
mov
mov
sti
rsqrtps
adc
int
andl
sbb
xor
test
add
sbb
les
je
or
and
push
sub
inc
sbb
les
sbbb
aam
rclb
mov
sbb
les
clc
push
mov
mov
lea
pushl
sahf
push
push
pop
outsb
icebp
and
push
and
jb
xchg
out
push
push
les
push
int
icebp
xor
sub
incb
push
dec
arpl
je
andb
lret
xchg
mov
push
push
xorl
mov
add
mov
ds
sbb
cmpsl
sbb
dec
push
cmp
mov
out
push
xchg
xor
inc
jp
add
or
and
les
je
sub
xor
inc
inc
mov
mov
xor
inc
or
adcb
push
and
mov
fwait
pop
ljmp
sub
xchg
ds
out
mov
cmc
out
add
push
inc
popf
and
test
cmp
int3
cld
lods
cltd
add
dec
lahf
or
shll
fildll
inc
mov
hlt
dec
cmp
mov
add
sarl
push
inc
sub
fildll
loopne
addr16
jg
les
add
lret
add
pushf
xchg
add
xchg
je
and
dec
negl
lods
orl
fdivs
xor
adc
pop
addr16
jbe
pushf
sub
jle
and
daa
mov
aad
imul
sub
loopne
jl
cs
push
jo
mov
negb
xorl
loopne
sbb
add
mov
mov
mov
aam
jo
ret
mov
dec
xchg
adc
and
cmp
fwait
add
mov
call
aaa
xchg
loope
push
scas
shl
or
nop
clc
jge
movsb
lahf
ret
notl
nop
cmpb
out
xor
lds
inc
jp
arpl
cmpsb
push
nop
sti
push
enter
pop
negb
sub
repz
inc
ret
pcmpgtb
xchg
push
jl
pusha
mov
loope
mov
out
pop
pop
outsl
mov
aaa
pop
xor
pop
inc
sbb
dec
addb
inc
sbb
push
push
loopne
dec
lds
push
rolb
movsl
add
dec
pop
push
in
movsb
sbb
sbb
jne,pn
push
add
dec
imul
lods
fwait
out
cli
pop
test
sti
rolb
pop
inc
je
cmp
mov
push
jmp
gs
mov
push
and
xor
add
pushl
andl
mov
or
inc
inc
orl
mov
jle
pop
dec
mov
mov
cwtl
xchg
data16
or
lahf
scas
push
or
adc
ja
es
mov
cwtl
mov
je
pusha
push
in
pop
loopne
pop
adc
inc
xor
sbb
outsl
add
and
sub
iret
cltd
cli
push
add
js
or
adc
punpcklbw
lock
out
inc
push
shufps
in
mov
fcompl
cld
and
pop
ss
leave
adc
xor
arpl
xchg
mov
xchg
adc
ror
cmpl
mov
in
add
into
cmp
adc
ss
aad
and
jo
rorb
jne
bound
sbb
jno
shll
outsl
arpl
pop
push
mov
ret
cmpb
cmp
mov
mov
cmp
xchg
sbb
and
orb
push
cmp
out
adc
fbld
add
pop
pop
mov
mov
adc
or
adc
test
je
push
ret
adcl
icebp
jo
mov
jae
adcl
andl
hlt
push
xchg
mov
je
clc
out
xor
bound
xchg
add
jmp
push
xor
inc
mov
push
sub
or
xchg
adc
addl
xor
dec
dec
add
test
cmp
pop
xor
das
outsl
test
push
fistpll
inc
daa
xchg
lods
sbbb
mov
lea
xor
je
mov
sub
clc
pusha
dec
jne
test
cli
mov
jne
repnz
in
and
mov
aam
cwtl
mov
pop
std
mov
sbbb
inc
pushl
movsb
mov
lea
sub
mov
pop
lock
addr16
or
dec
and
push
lret
pusha
push
adcb
adc
loop
je
add
cmpb
outsl
inc
dec
inc
xor
dec
jge
add
or
jmp
js
push
fimull
xor
push
and
call
cmpl
aas
xor
shlb
add
insb
dec
and
data16
and
lea
mov
ret
ret
test
jno
sbb
push
aam
loop
jne
outsl
and
jno
xchg
and
test
lcall
addr16
frstor
andb
cmc
je
jbe
popa
loope
adcb
pop
xchg
pop
imul
rcr
shlb
or
adc
cmp
sbb
dec
xlat
rcrb
stos
stc
add
or
adc
fsubr
mov
xlat
add
mov
adc
mov
add
sti
test
inc
mov
stos
scas
sub
pop
sub
insl
inc
test
sub
dec
pop
sub
rorb
sub
sub
addb
hlt
or
lahf
mov
xor
insl
mov
sub
push
clc
clc
lock
movsl
cmp
repnz
int
call
or
mov
sub
aam
mov
les
mov
inc
icebp
cmovbe
or
jl
mov
daa
mov
mov
add
and
pop
and
lret
lahf
mov
or
push
movb
mov
add
cmp
add
push
pusha
sbb
cwtl
cmovbe
adc
shrb
or
sbb
add
cs
jmp
pop
add
or
rcll
add
pop
push
dec
mov
dec
mov
inc
in
mov
mov
mov
push
repnz
push
dec
or
call
add
sub
cmp
mov
xor
out
mov
jmp
inc
push
rcr
aam
adc
sarb
dec
dec
or
cmp
push
adc
inc
movsl
cs
ficoms
push
mov
and
jle
adc
jp
dec
add
add
dec
sub
mov
out
cmpsb
mov
mov
fmul
adc
ja
or
mov
into
adc
mov
sub
add
in
js
cmpsb
cmp
inc
leave
mov
add
lcall
pop
cmp
and
fmull
or
pop
mov
sbb
xchg
cmp
mov
sbb
dec
cmp
dec
les
sbb
push
fs
add
fadds
add
mov
adc
pusha
mov
add
and
add
js
sub
das
repnz
or
add
je
pop
pop
pop
pop
jg
pop
add
and
push
lds
dec
xchg
imul
out
xchg
test
jge
xor
xor
dec
xchg
push
add
pop
dec
add
sbb
sub
sbb
xchg
sbb
add
mov
aam
insb
sbb
unpckhps
mov
pop
xor
cmp
jns
insb
xor
lret
push
push
dec
mov
pop
rorb
adc
pusha
sub
incl
dec
shll
int3
imul
or
push
mov
sbb
xlat
inc
mov
lret
mov
jb
push
push
lock
ret
inc
pop
in
mov
add
shrb
fcom
mov
add
cmp
adc
aad
push
clc
xchg
xor
xor
sub
test
fmull
dec
movsl
ror
hlt
add
and
cltd
icebp
pop
pusha
dec
sbb
cmp
mov
sbb
scas
clc
xor
sub
lcall
fiaddl
xchg
in
sbb
dec
jbe
int
mov
pop
pop
sub
fwait
nop
gs
sub
mov
shl
and
dec
out
shl
jnp
jmp
push
mov
gs
fcmove
mov
mov
js
mov
imulb
or
fldcw
add
adc
enter
pop
add
inc
or
jns
insb
add
sub
gs
mov
mov
subl
pop
lcall
inc
outsl
imul
fsubs
daa
adc
inc
out
mov
imul
cmpsb
lea
push
fidivl
insl
inc
cmp
sbbl
aam
cld
data16
push
xor
and
push
sub
lds
jb
sarl
pop
aam
add
and
pop
fdiv
out
hlt
aas
inc
adc
inc
inc
sub
dec
movsl
jb
xchg
dec
or
adc
call
dec
sub
push
rclb
xchg
sbbb
cmp
sbb
cltd
or
or
add
je
jno
mov
test
jo
jg
dec
mov
or
pop
nop
leave
inc
xor
les
aam
stos
or
sbb
jecxz
add
dec
push
cwtl
lds
rol
shr
aas
sbb
push
xchg
cvtps2pi
or
adc
mov
dec
mov
in
push
testl
ret
xchg
jo
js
pop
sbb
andb
add
sub
push
add
push
loop
or
cli
std
adc
or
add
adc
cmp
and
arpl
inc
dec
add
jp
inc
add
inc
cmp
inc
pop
jmp
pop
cwtl
test
xchg
adc
mov
mov
pop
stc
add
mov
inc
shll
stc
dec
sub
test
add
daa
lcall
out
sbb
mov
js
nop
ret
cmp
mov
mov
mov
jne
mov
xchg
push
mov
xorb
ss
in
fistps
imul
pop
inc
add
xchg
push
add
mov
jbe
dec
roll
cmp
add
dec
call
adc
sub
xchg
mov
outsl
imul
add
or
and
dec
popf
movsb
push
xchg
fldl
jo
adc
inc
mov
outsl
out
inc
std
cs
addb
scas
and
adc
cwtl
xchg
fildll
ljmp
sub
adc
dec
jbe
add
inc
mov
mov
dec
cmp
or
mov
adcb
or
movsb
sar
pop
clc
cli
ret
push
pop
in
jno
lahf
cmp
pop
pop
lock
xor
xchg
popa
fadds
hlt
add
add
sbb
or
scas
mov
xchg
lods
mov
divb
inc
sbb
call
repnz
mov
xchg
addr16
add
lods
cmp
push
pop
jbe
add
add
xchg
je
jmp
push
add
cmpl
pop
dec
in
sub
aaa
jge
shlb
jbe
add
pop
movsl
push
or
pop
addb
jno
in
subps
popa
jmp
add
mov
je
inc
xchg
lcall
push
mov
inc
in
add
add
add
push
pop
inc
scas
push
shl
pop
pop
repnz
fnstcw
xor
sub
pusha
cmc
pop
int
addb
rolb
xor
mov
lods
lahf
rolb
dec
xchg
dec
sub
pop
ss
gs
out
cmp
cmp
mov
int
call
or
sub
rcrb
hlt
adc
or
sahf
ficoms
movsl
jp
ret
test
and
xchg
ret
or
cmp
xchg
or
sub
cmpsl
jmp
cmpl
mov
and
std
outsl
arpl
or
xor
adc
or
lods
jle
dec
mov
jle
arpl
mov
bound
push
pop
mov
cmp
faddl
adc
loopne
shll
mov
shl
sub
mov
and
mov
daa
push
cmp
loopne
iret
lock
pop
sub
adc
adc
pop
inc
test
jp
js
cmp
sbb
pop
insl
lds
xchg
or
push
or
mov
movsl
mov
mov
mov
adcb
jne
push
mov
adc
xchg
jmp
cmp
and
adc
inc
sarl
ja
ret
push
push
shlb
les
lds
xor
mov
sub
push
mov
adc
clc
sub
mov
adc
mov
push
cld
in
movsb
dec
inc
sbb
scas
popa
loopne
call
sub
sub
add
out
or
inc
movsl
clc
jg
pusha
or
jle
mov
vcvttss2si
cmpsb
xor
push
stos
or
pop
inc
div
adc
fadds
cmp
out
and
out
inc
sub
push
mov
sbbb
mov
mov
mov
or
jl
mov
test
aaa
cmpsb
push
jg
mov
cwtl
mov
rclb
fs
arpl
jecxz
push
ret
scas
pop
fcoml
mov
cmp
add
es
or
push
js
push
jl
xor
xor
sub
or
loop
rcrb
jno
aas
enter
lods
ret
cmp
je
pop
or
mov
pop
ret
aam
mov
inc
jl
pusha
xor
and
test
insb
mov
gs
arpl
push
or
fs
and
popa
stos
mov
aas
test
aam
dec
test
shl
rclb
lock
cmp
fsubl
pop
movb
sub
faddl
pop
popf
pop
and
repnz
test
xchg
xor
out
or
xor
add
add
mov
jbe
pop
inc
and
mov
mov
fidivl
aaa
rolb
add
mov
leave
enter
add
cmp
int
or
scas
cmp
add
xchg
mov
lret
ffreep
add
adc
adc
adc
push
dec
mov
jne
adc
cltd
cwtl
inc
sbb
or
and
add
mov
adc
and
out
jge
pop
or
or
pop
in
xor
std
lahf
mov
jg
add
mov
jmp
mov
orl
inc
push
mov
and
out
pushf
rolb
test
pop
or
outsb
mov
cmp
enter
sub
ret
push
add
mov
ds
xor
add
enter
out
push
inc
ds
dec
push
inc
insl
mov
dec
adc
jmp
enter
or
jne
repz
test
into
cli
out
jmp
push
push
push
pop
clc
loope
je
xor
int
pop
sbb
sub
insl
cmpsb
movsb
or
and
jno
flds
cwtl
pop
fs
push
mov
aas
mov
mov
jne
cmovo
clc
adc
and
dec
jne
into
inc
inc
out
push
xchg
dec
jmp
add
jb
ja
push
xchg
mov
mov
inc
shrl
jl
sbb
xchg
sub
sbb
shr
aam
ljmp
adc
fs
sub
ja
mov
mov
lock
insb
or
mov
inc
mov
inc
sbb
add
lods
mov
mov
adc
pop
je
test
int3
mov
pop
add
xor
aaa
jo
rorl
mov
ljmp
add
daa
or
xchg
pop
scas
add
xlat
in
cmp
sub
fdivrl
icebp
mov
inc
ss
adc
xchg
adc
lods
mov
xor
hlt
or
out
mov
jae
push
addl
inc
cmp
cmp
ficoml
sub
sub
mov
mov
jl
fdivl
pop
dec
or
adc
and
adc
sub
hlt
ret
jnp
test
inc
loopne
movsb
pop
cwtl
adc
jecxz
ljmp
int
pushf
cmpsb
add
push
add
adc
fs
dec
sbb
jp
push
test
ja
mov
pop
push
adc
jecxz
lds
fdivrs
lock
jp
iret
inc
lods
push
and
hlt
ja
pop
sbb
pop
or
jo
imul
cmp
and
btc
addr16
push
push
and
loope
add
xlat
add
pop
and
pusha
xor
jo
push
mov
mov
pop
push
mov
lret
pop
ret
or
or
mov
vrsqrtps
or
scas
icebp
mov
mov
or
rorb
and
out
popa
mov
sub
cmpsb
pop
or
and
js
push
xor
inc
or
sub
pop
pop
sbb
dec
and
adc
ss
imul
cmc
cmp
outsb
push
pusha
fldt
mov
jo
data16
fistps
push
repnz
add
lcall
lods
or
inc
fbstp
bound
xchg
fistps
lret
fwait
test
aam
add
sub
xchg
push
loope
xchg
into
jle,pn
test
push
adc
aaa
mov
pop
adc
ret
fstps
subb
inc
lcall
lods
sbb
mov
and
xor
add
mov
in
fs
movsl
dec
xchg
jo
das
xchg
mov
mov
out
mov
mov
xor
cmp
cmp
cmp
jecxz
add
xchg
inc
movsb
sub
pop
pop
test
push
xor
or
rcrb
inc
xor
loopne
add
imul
cmp
mov
addl
ret
addl
incl
push
dec
insb
addb
add
jg
and
adc
je
lret
insb
add
push
or
or
mov
pop
jb
mov
xchg
pop
add
or
rorb
push
sbb
addb
sub
fs
flds
fsubs
pop
fwait
js
test
sub
push
aam
dec
dec
and
mov
inc
das
add
ret
cmp
xor
add
sbbl
mov
jmp
ja
sub
in
jg
sbb
mov
inc
adc
hlt
push
pusha
nop
or
test
je
addl
add
in
cwtl
cmp
mov
xor
push
pop
pop
es
cld
and
fs
out
ret
inc
adc
andb
sub
imul
or
ljmp
jmp
or
or
xor
test
or
adc
rorb
xor
xor
mov
pop
aad
and
inc
push
push
das
adc
pop
icebp
xor
sub
jne
pop
mov
dec
mov
fdivr
sbb
inc
std
mov
mov
sub
mov
insl
daa
gs
dec
cwtl
jnp
xor
pop
into
or
cmpsb
or
push
inc
or
int
mov
mov
dec
and
pop
daa
pop
mov
jmp
push
add
cmpsl
inc
cltd
add
xchg
in
inc
adc
adc
push
into
push
pop
add
adc
add
pusha
inc
pusha
jne
cld
jo
rclb
test
sub
mov
adc
sbb
notl
pop
insb
imul
mov
mov
mul
into
dec
mov
add
cmp
xlat
adc
rclb
inc
daa
or
scas
pop
push
inc
movl
adc
inc
mov
or
loopne
or
or
mov
and
jg
mov
push
pop
icebp
dec
jmp
xor
and
and
testb
in
inc
dec
inc
fs
add
mov
xchg
data16
addl
shll
inc
or
xor
loop
or
xchg
or
or
sbb
jo
or
adc
cli
loopne
adc
push
mov
xorb
movsb
shll
js
jmp
mov
daa
fdivs
or
orb
inc
sub
nop
bound
daa
out
test
dec
adc
or
xor
or
xor
loopne
sbb
sbb
sub
pop
les
sbb
push
inc
mov
mov
call
sbb
outsl
inc
fs
sbb
and
test
movhps
jno
xor
enter
and
mov
pop
add
das
or
xchg
xorl
adc
in
xor
arpl
add
add
fdivrs
add
cmp
shlb
iret
mov
mov
pop
or
data16
aam
clc
sbb
jle
jb
cmp
xor
push
cmp
rolb
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
insl
and
out
or
scas
add
pop
jg
cmp
jl
sti
pop
mov
ret
push
sti
adc
or
jmp
cmc
sbb
mov
push
sbb
lahf
mov
pop
or
jo
in
or
sub
sbb
sub
cmp
add
cmp
mov
pop
jns
xor
inc
jae
mov
clc
dec
inc
and
dec
lea
fwait
loope
sbb
out
lock
cmp
dec
cmp
arpl
dec
adc
scas
xchg
bnd
rcrl
dec
dec
and
dec
pushf
loope
cmp
add
imul
push
daa
jne
fdivl
xor
daa
inc
les
inc
icebp
or
popa
jo
or
push
jle
xchg
dec
add
aaa
cld
les
sbb
pushf
or
jl
mov
jbe
fs
push
in
inc
mov
loop
clc
pusha
pop
mov
push
mov
push
lea
aam
adc
xchg
shr
mov
lock
mov
inc
inc
sbb
lock
xchg
and
aas
cmp
lock
sti
std
and
jne
sub
lock
adc
mov
enter
sub
leave
add
lea
sbb
fldenv
push
and
insl
aam
loopne
xchg
push
loopne
aad
icebp
pop
icebp
mov
ret
enter
adc
fsubr
push
jmp
sbbb
inc
es
xor
pushf
in
or
inc
sub
or
xor
and
push
sub
add
shl
pushf
addb
pushw
or
stc
cmpb
movsl
add
and
into
mov
pop
adcl
fnsave
sbb
js
scas
add
bound
mov
add
fisubrs
adc
adc
add
fwait
or
test
rclb
add
fdivrp
xor
sbb
cmp
inc
dec
or
xchg
mov
xchg
adcb
dec
add
and
mov
aas
pop
pop
loopne
sbb
mov
mov
jo
and
sbb
add
mov
add
xor
roll
inc
jl
push
imul
adc
inc
sbb
mov
pop
xorl
insl
rcr
cmp
add
xchg
sbb
or
inc
loope
add
ja
push
lods
or
arpl
cld
popl
jge
dec
sbb
data16
inc
and
imul
nop
pop
add
adc
data16
pop
and
xor
enter
pop
andl
in
imul
inc
call
fsubs
int3
inc
notl
in
rolb
pop
lock
or
or
adc
pop
rcll
push
sbb
jnp
data16
fcoms
popa
out
cmp
or
push
xor
or
sbb
fstps
and
int3
adc
loop
movsb
or
sbb
jb
and
push
mov
bound
push
dec
inc
fsubrs
nop
lcall
and
or
sub
push
push
mov
sahf
or
or
lods
jo
xchg
dec
das
fadds
or
das
test
add
add
push
cmc
xchg
bound
leave
ret
dec
push
icebp
inc
mov
inc
add
jg
sar
jns
adc
push
xor
in
sub
pop
push
jne
add
pusha
mov
sbb
add
imul
adcl
add
or
rol
push
pusha
rclb
cmp
mov
shlb
lods
dec
dec
cmp
into
push
pop
push
outsl
sbb
divb
or
sbb
push
or
pop
mov
cmp
dec
aam
jnp
fs
aaa
add
and
inc
push
xchg
int
xchg
and
xchg
add
ds
inc
inc
stos
adc
or
cmp
push
mov
cmp
sbb
jb
cmc
mov
xchg
aaa
loop
adc
or
hlt
hlt
adc
xor
adcl
sbb
sbb
add
daa
pushf
xchg
mov
adc
aam
inc
adc
dec
rcr
or
clc
sub
pop
push
cmp
sarb
xchg
lods
gs
and
xchg
push
adc
sbb
mov
sarl
lret
push
xor
adc
mov
jl
pusha
mov
pop
push
dec
test
pop
jecxz
enter
test
popa
fs
sbb
fsubrp
fs
repz
or
push
mov
dec
jae
pop
cs
push
pop
or
js
inc
push
mov
repz
pop
pop
in
int3
sbb
jmp
pop
sub
dec
xor
sbb
or
sarb
shlb
roll
das
loope
mov
test
lock
sahf
dec
mov
shrd
add
jg
add
mov
ds
mov
sbb
mov
adc
adc
or
xchg
and
xchg
push
jo
sbb
push
adc
lret
adc
sarb
mov
push
jl
xor
flds
jge
fmull
mov
push
pop
jecxz
sbb
insb
lret
nop
add
ja
push
add
push
fldt
or
inc
dec
or
sbb
mov
test
or
inc
cltd
sbb
lahf
xor
mov
mov
cmp
hlt
test
mov
mov
sub
mov
push
inc
add
pop
push
lods
out
inc
xorl
pushf
mov
add
fisubl
dec
push
imul
adc
sahf
out
loopne
popa
push
pop
inc
sub
jns
daa
lea
adc
addl
in
mov
sbb
adc
lock
cmp
xchg
mov
adc
xchg
or
loopne
dec
lds
mov
mov
and
test
movsl
pop
xor
sub
sbb
lock
push
push
inc
push
lock
and
enter
aas
xor
or
adc
jnp
push
addr16
cmp
mov
or
dec
dec
jbe
push
sbb
pop
jne
mov
mov
andb
dec
jae
cmp
jne
pop
cs
jp
fucom
adc
imul
and
aas
push
sub
fiadds
and
push
lret
imul
mov
inc
cwtl
insb
and
test
and
push
pop
cmpsl
add
xor
adc
push
icebp
adc
pusha
fs
sbb
jo
lock
jae
je
jno
push
cmp
pop
sti
push
push
add
je
pop
xchg
lods
sub
sahf
mov
sbbb
bound
jp
sub
push
push
add
xchg
imul
arpl
and
and
xor
jne
fs
or
es
sbb
xchg
push
dec
jne
mov
daa
push
insb
push
ret
rorl
inc
inc
cmc
sub
add
test
add
add
mov
xor
adc
test
add
ljmp
and
add
push
mov
push
mov
fcmove
cltd
xor
push
adc
cmp
sbb
inc
sub
out
add
lret
inc
enter
test
mov
lahf
clc
jne
inc
iret
pop
cld
je
roll
adc
in
mov
jle
aad
ret
clc
or
jnp
rcll
gs
pop
daa
sbb
mov
jne
cmpsl
ficoms
or
fs
sbb
mov
sarb
add
sbb
pusha
xchg
lea
add
add
mov
std
mov
jg
jle
and
dec
xor
pusha
adc
xchg
inc
testl
in
and
inc
xchg
outsb
jge
jle
jl
xor
lock
ss
and
fdiv
ss
es
push
lahf
jbe
push
call
enter
scas
mov
pop
and
ljmp
xchg
sbb
adc
in
pop
fildl
ficoml
mov
pop
and
xchg
adc
pop
xor
aad
cmpsl
rcrb
mov
in
lret
inc
ja
pop
adc
ss
sbb
mov
jmp
in
adc
add
inc
ds
adc
fistl
cmp
sub
js
loop
sub
cmp
jne
jbe
mov
pop
xor
adc
cltd
pop
std
mov
mov
inc
lret
in
adc
outsw
movsb
lods
inc
pop
das
fadds
pop
test
xchg
or
and
insl
push
pop
hlt
test
push
pushl
outsb
insb
adc
and
and
push
stos
shlb
mov
inc
cmp
pop
add
xchg
mov
inc
test
loope
fmull
test
sub
pop
adc
nop
mov
mov
mov
shlb
jo
pop
ss
inc
lea
mov
push
jl
or
dec
push
pop
mov
jnp
jae
xor
jmp
push
mov
mov
xor
push
mov
add
mov
cwtl
lea
and
pop
outsl
jmp
and
add
sub
aas
jb
imul
sub
test
adc
test
mov
cmpl
imul
mov
idivl
jns
pusha
outsb
pop
mov
xor
ret
push
xchg
jbe
cmpsb
cmp
push
dec
jns
pop
push
popa
jno
flds
fistpl
mov
in
inc
clc
adc
mov
and
inc
add
popf
fcomp
nop
hlt
xchg
sbb
dec
cmp
jne
daa
xor
in
sbb
dec
push
mov
mov
dec
sbb
mov
jo
push
inc
sbb
je
or
mov
mov
ss
add
scas
push
pop
adc
sti
leave
incl
es
lret
xorl
pop
dec
and
and
lea
inc
xor
cmp
lock
lret
lock
mov
lret
add
mov
mov
xchg
add
dec
lcall
sbbb
loope
pop
xchg
add
dec
mov
movswl
mov
lock
ljmp
call
and
ficomps
inc
pop
mov
call
nop
enter
jnp
cmpsl
jnp
cltd
cmp
movsl
adc
sar
loopne
repnz
loopne
pop
pop
or
inc
bnd
add
adc
xchg
mov
jmp
add
add
fiadds
sbb
jle
test
xor
dec
push
incl
sbb
lea
addr16
push
mov
inc
add
or
pop
sub
add
jg
adc
mov
dec
cmp
or
inc
or
cs
jmp
mov
lods
mov
mov
bound
jle
push
or
clc
cld
rorl
ja
dec
cmp
inc
mov
mov
push
adc
shrl
add
out
push
dec
adc
push
pop
lock
fsubs
mov
xor
xor
add
pop
adc
imul
mov
or
pop
jns
dec
add
pop
or
and
push
popa
jl
jnp
nop
fldlg2
out
jo
enter
cwtl
pusha
cs
add
in
sub
mov
inc
jmp
sbbl
subl
pop
in
xchg
jl
or
insl
fwait
out
rclb
cwtl
ret
mov
hlt
es
add
cld
push
sbb
aam
cwtl
test
add
inc
cmp
mov
sbb
and
insb
sub
movsb
jb
xchg
jo
je
lret
js,pn
jl
push
mov
test
inc
sub
test
inc
xchg
inc
push
add
fs
fs
ss
dec
push
fbstp
dec
push
leave
xchg
add
dec
dec
inc
add
insl
jns
fldenv
fcoms
inc
gs
pop
lods
or
fsts
dec
cld
daa
movsb
add
movsl
nop
out
adc
jae
push
cmpsl
test
insl
jo
lret
icebp
movsl
mov
inc
in
inc
out
mov
inc
xchg
dec
jae
enter
pop
cmpsl
mov
cmp
jae
outsl
adc
sbb
push
mov
ret
push
add
or
jge
and
mov
mov
push
mov
push
int
in
sbb
sbb
mov
ficoml
insb
in
jl
imul
je
push
xor
or
repz
push
adc
aam
sub
hlt
or
jmp
ret
mov
dec
out
push
add
inc
xchg
adcl
je
loopne
adc
pop
dec
jle
xor
pop
sub
adc
cs
and
mov
orb
xor
cmpsb
push
pop
in
mov
mov
shl
xchg
leave
and
cmpsb
mov
xchg
bound
sub
insb
mov
add
aaa
repnz
mov
testl
mov
xor
sub
mov
mov
cmp
ret
lret
xor
les
nop
inc
dec
add
xor
mov
sub
xor
leave
sub
xchg
push
aas
xor
movsl
and
mov
movsb
scas
nop
mov
shl
mov
xor
bnd
cmp
push
add
sti
xchg
adcb
andb
testl
adc
push
xchg
imul
aaa
xor
jecxz
inc
outsb
pop
dec
scas
sub
sub
outsl
cmpsl
int
xor
xchg
inc
sbb
mov
ret
or
mov
ret
xor
addr16
scas
xchg
aam
ds
inc
ss
inc
dec
fwait
dec
test
pop
sub
cmpsl
clc
and
xchg
add
repnz
test
leave
or
xchg
fs
sbb
cmp
add
mov
cmpsb
jge
sbb
pusha
jl
sub
push
mov
or
inc
or
out
aaa
xchg
push
pop
idiv
out
cmp
je
mov
adc
xchg
sub
and
sbb
pop
fidivs
push
and
ficoms
repz
jnp
add
jmp
movsb
xorb
push
and
addr16
inc
xchg
pop
jp
mov
add
fwait
mov
cwtl
pop
call
and
nop
out
mov
and
loopne
inc
push
pop
fs
fisubs
add
repz
lcall
pop
mov
cmp
mov
pop
lods
aas
pop
sub
mov
mov
cwtl
mov
cltd
pop
in
gs
and
rorb
test
inc
popa
mov
or
inc
daa
movl
out
or
test
ljmp
lcall
add
and
inc
xchg
nop
mov
inc
dec
add
fwait
outsb
vmread
add
out
dec
ss
notl
push
or
sbb
sub
adc
add
sbb
cmpxchg
pop
pop
mov
ja
repz
lods
push
shlb
cld
adc
sahf
cmp
push
jns
je
jl
and
out
mov
test
das
xchg
push
add
inc
insl
and
and
add
push
adc
shll
notl
add
jo
mov
dec
lcall
arpl
xchg
fs
inc
inc
and
roll
dec
pop
lahf
fwait
and
mov
rclb
inc
xor
add
cmpsb
add
inc
pop
negl
inc
test
jne
xlat
pop
sbb
rcl
add
outsb
sbb
and
sbb
xchg
adc
sbb
movsb
jnp
add
repz
xor
out
cs
push
int
fxch
and
dec
xor
sub
mov
inc
das
dec
add
pusha
sub
lock
or
pop
adc
or
push
bound
test
mov
xor
movsb
sbb
adc
out
xchg
and
pop
mov
inc
sub
dec
rolb
ja
xor
pusha
and
dec
push
ss
aas
inc
dec
stc
sub
sbb
and
or
mov
add
das
xchg
xor
mov
adc
xor
pop
xor
rorl
cmpsl
cmp
mov
mov
xor
cmpsb
mov
adc
pop
bound
jno
les
push
cmp
jle
lahf
loopne
xlat
sub
jle
fldl2t
mov
in
mov
inc
or
inc
push
movb
and
test
mov
loopne
xor
inc
pop
xlat
push
inc
in
repnz
xor
std
adc
inc
scas
mov
xor
fiaddl
imul
mov
dec
popf
dec
lods
xchg
shlb
cwtl
rclb
mov
dec
ret
cld
or
push
sub
pop
mov
int3
dec
push
stc
push
and
dec
push
repz
sbb
inc
sub
cmp
mov
sbb
loop
popf
xchg
out
aad
cwtl
xor
mov
xor
and
add
cmp
mov
stc
int3
mov
mov
dec
jae
mov
push
push
push
or
insb
and
dec
add
sub
pop
movb
lods
xchg
jle
mov
mov
push
pop
sub
aas
add
shrb
xorb
nop
add
lock
pop
add
xor
cwtl
mov
mov
insb
je
dec
aad
lcall
xor
push
push
lret
das
fstps
push
jl
xchg
jl
data16
pop
imul
xchg
lret
sub
jae
add
rcrl
fwait
dec
dec
mov
or
xor
dec
cmp
cmp
mov
movsl
pop
jnp
push
sbb
popa
ss
mov
mov
fs
push
dec
scas
jp
test
fmull
fbstp
sbb
pop
lahf
shrl
out
or
in
and
pop
imul
popf
push
mov
sub
adc
xchg
adc
jne
out
xchg
jo
test
out
mov
pop
dec
mov
clc
movsl
inc
pop
cmp
push
cmp
je
lds
adc
adc
mov
insb
and
ret
jo
cmp
rcrl
sbb
movsb
push
adc
mov
cmpsl
decb
cmp
mov
loop
or
sar
xchg
sbb
jbe
cltd
and
jl
mov
dec
sbb
sub
lds
inc
dec
lods
xor
cmpsb
jl
push
mov
adc
lods
loop
mov
ror
js
insb
xchg
adc
int
pop
jno
jne
cmp
je
test
out
jb
jg
add
je
or
jl
andl
adc
iret
je
jne
sub
mov
lods
mov
fmull
or
jo
jg
pop
adc
adc
pop
push
cmp
push
pop
lahf
lret
mov
shll
sbb
xchg
ja
mov
ficompl
adc
push
or
pop
inc
or
sbb
adc
add
orb
adc
and
lods
orl
mov
pop
mov
mov
cmpb
mov
mov
imul
mov
clc
push
or
inc
pop
or
xor
pop
loope
pop
repz
daa
inc
cwtl
inc
adcl
cltd
ret
rorb
mov
rol
sub
rclb
mov
push
or
scas
punpckhbw
xchg
pop
pop
sbb
es
inc
sbb
lods
pop
xor
adc
and
xchg
pop
and
and
arpl
jge
pop
jno
and
and
sub
mov
mov
or
mov
cmp
or
call
cmpsb
adc
imul
pop
loopne
test
add
mov
test
push
pop
cmp
push
and
mov
and
push
adc
cs
imul
shrl
int
dec
adc
subl
inc
xor
xor
rolb
test
ja
xor
loope
aad
mov
mov
inc
sub
inc
xor
or
outsb
inc
dec
xor
lahf
out
jle
jno
arpl
ja
insl
mov
and
das
popf
je
dec
push
sbb
std
dec
sbb
sbb
daa
push
push
stos
mov
je
xor
scas
push
mov
push
xor
jge
in
mov
cld
mov
shl
and
inc
cmp
inc
add
add
sbb
sbb
add
inc
jne
dec
lods
jne
subb
mov
push
aam
push
mov
dec
xchg
or
inc
and
jb
mov
rorl
aad
or
sub
nop
xchg
divb
and
inc
fbstp
or
mov
gs
push
xorb
test
lods
inc
icebp
aas
or
rcll
pop
sub
add
lods
sub
fadd
xor
ret
adc
movsb
outsb
call
aad
push
pop
or
stos
adc
adc
xchg
iret
pushf
test
cltd
pop
xchg
mov
orb
jl
clc
call
xchg
sbb
add
jmp
icebp
or
xor
lcall
and
inc
cmp
jg
pusha
inc
dec
add
push
mov
scas
jno
jge
cli
jae
push
push
push
rcll
ds
mov
popf
jecxz
or
call
mov
cmp
add
in
jmp
scas
push
sbb
jae
sbb
jnp
hlt
imul
cmp
adc
pusha
pop
add
ret
xor
cmc
mov
dec
mov
inc
cmp
adc
push
jmp
sub
push
scas
test
xor
adc
or
test
xor
pop
mov
and
adc
adc
push
imul
xchg
ret
sub
test
adc
sub
lcall
and
and
sbb
out
ljmp
push
dec
push
fdivr
or
fcoms
imul
xor
fimuls
shlb
sbb
insl
cmp
add
pop
loope
jmp
mov
xor
push
cmp
psraw
incl
xchg
in
movsl
mov
xor
xchg
inc
jo
add
arpl
sub
sahf
adc
dec
xor
and
shlb
aaa
push
pop
xchg
xchg
cmc
add
inc
dec
mov
stos
dec
mov
lahf
enter
mov
shll
cmp
mov
pop
or
inc
cmp
sub
and
test
xadd
loop
push
adc
fldl
adc
shl
xchg
add
xchg
out
adcb
jnp
pop
inc
push
inc
push
pusha
jecxz
lock
sub
xor
call
jmp
incb
loopne
addl
inc
sbb
adc
push
cmp
mov
hlt
xchg
lds
dec
jnp
sub
adcl
mov
popl
sbb
repz
jl
mov
lock
adc
out
pop
push
cs
bound
divl
in
mov
sbb
jnp
ds
sbb
enter
call
lahf
and
mov
mov
pushf
inc
mov
mov
mov
clc
leave
adc
adc
fimull
mov
jnp
mov
ror
sti
mov
adc
jne
mov
xchg
in
test
imul
mov
or
mov
cmc
push
sbb
push
inc
inc
ret
cmp
or
jmp
xorb
and
push
push
insl
push
dec
test
dec
loope
and
movsb
push
mov
shlb
push
mov
sbb
adc
fstl
and
dec
cmp
jl
movsb
mov
int3
pop
sub
sbb
shll
jp
popa
insb
push
push
je
mov
insl
loop
sbb
inc
adc
aaa
fdivrs
sbb
sub
and
divl
jo
inc
loopne
cltd
xor
int
mov
adc
inc
bound
pop
and
cmpsb
aam
mov
dec
and
sbbl
fstps
inc
dec
xor
dec
or
and
rcll
enter
mov
sbbb
daa
and
ret
dec
aam
insl
sub
pop
fisubl
mov
or
scas
or
adc
add
je
push
mov
jmp
cwtl
test
cmp
pop
pop
mov
inc
xchg
cmpsl
sbb
inc
xchg
xchg
mov
dec
hlt
pushl
hlt
mov
dec
clc
popa
clc
inc
mov
mov
and
add
inc
xchg
mov
add
adc
cmpsl
cmp
mov
jecxz
add
lahf
rclb
add
nop
add
cmp
out
jle
movsb
loopne
test
fdivrl
push
jg
clc
sbbl
jne
scas
add
mov
xor
and
and
fiadds
movsb
shlb
mov
jge
and
repnz
jno
and
and
jno
stc
es
cwtl
in
cmp
imul
in
xchg
rclb
push
jo
xor
nop
xchg
dec
jmp
inc
dec
jo
call
sub
sahf
testl
xor
lret
ja
imul
or
add
xlat
out
shrb
scas
adc
xor
or
mov
out
rcrb
cwtl
mov
cmpsl
or
fs
dec
in
arpl
dec
jge
pop
shl
inc
xchg
push
dec
inc
jmp
loopne
push
aas
xor
movsl
cmp
adc
pop
push
lock
outsl
inc
fcoms
cmp
mov
pop
lods
add
fadds
movsb
icebp
cmpb
push
push
xchg
fildl
cmp
shl
mov
mov
das
test
and
and
mov
push
xchg
xchg
shrl
adc
sub
popf
test
test
pop
lock
aaa
cwtl
ret
push
add
dec
cmp
es
or
or
dec
popa
cmp
or
nop
push
shlb
lock
mov
clc
mov
xor
xchg
mov
cmp
cli
test
movl
push
pop
push
fwait
dec
out
sbb
jg
pop
mov
and
xrelease
inc
push
mov
or
xor
sbb
jmp
adc
dec
cmp
test
add
inc
ja
add
pop
xlat
pushf
pop
test
inc
cmp
subl
stos
jb
push
test
cltd
or
xor
les
jno
fdiv
fcoml
mov
addb
ret
jae
les
mov
dec
test
inc
das
jmp
fs
pushf
push
push
or
int
sub
inc
lods
dec
add
sub
add
xchg
pop
xchg
lcall
add
incl
ret
push
add
decl
addb
sarb
lcall
add
dec
add
cmpsb
mov
sub
movsl
mov
cwtl
lods
mov
or
repnz
pusha
dec
outsb
jne
dec
mov
and
test
jae
mov
movups
inc
cs
sub
jge
or
or
popa
jb
add
test
push
jle
adc
stos
add
xor
ja
push
mov
stc
loopne
cmc
bound
insb
add
mov
lcall
movsb
popa
inc
int3
push
dec
mov
pcmpgtw
and
adc
mov
add
int
jle
imul
sbb
movsb
push
xor
push
out
add
pop
fnstsw
icebp
jo
out
adc
pushw
xchg
push
inc
push
gs
and
push
aam
cs
add
adc
mov
ret
cltd
push
mov
cld
push
or
dec
fstps
int
imull
push
or
adc
in
es
pop
mov
add
cmpsb
dec
lret
dec
fidivrs
push
xor
inc
lods
aam
sbbb
inc
or
inc
ds
imul
push
pop
in
push
mov
mov
mov
nop
in
and
int
xlat
sub
xlat
xlat
sahf
out
inc
mov
lods
push
int3
in
enter
lock
pmullw
or
xchg
sub
pop
stos
add
addr16
lods
out
aad
mov
inc
add
sub
fstpl
mov
cmp
repz
sbb
cmp
movsb
scas
and
fwait
cld
pusha
cli
cwtl
sti
mov
test
pop
pop
sbb
test
das
sbb
dec
mov
cmp
fdivr
pop
fdivr
push
lods
stc
in
and
jnp
cmp
idivl
daa
pusha
nop
cmpsl
pop
sbb
jo
sbb
inc
dec
clc
inc
add
inc
add
test
test
add
arpl
imul
adc
cmp
insb
or
inc
add
add
hlt
imul
out
gs
dec
cmp
or
push
and
fs
or
fdiv
js
dec
inc
std
sub
imul
dec
cwtl
push
lock
in
cmp
inc
dec
add
push
jge
dec
and
inc
out
xor
mov
inc
add
das
add
sbb
cld
test
repnz
inc
or
fcomps
jne
cmpsl
adc
xchg
cmp
or
das
lcall
adc
pusha
enter
pop
or
and
aas
mov
arpl
js
and
add
push
dec
pop
inc
ja
pop
mov
adc
xchg
mov
jecxz
test
jb
push
fists
cmpsl
shll
divb
cmp
outsl
push
popa
fs
or
xchg
nop
sbb
iret
sarl
int3
xorb
lea
inc
sub
inc
sbb
mov
add
mov
or
bound
andl
mov
adc
dec
cwtl
cwtl
push
add
sahf
popa
cmp
pop
mov
test
lcall
jnp
mov
and
pop
add
push
push
enter
pop
pop
in
or
adc
unpcklps
pop
cld
adc
dec
fildl
inc
or
sub
scas
lret
jmp
cmp
pop
es
dec
imul
push
xor
add
loope
aad
jl
add
push
mov
pop
xor
popf
filds
in
test
jle
cs
add
pop
in
pusha
push
add
sbb
xor
inc
imul
cmp
mov
sbb
push
or
add
loopne
rcrb
push
lahf
adc
imul
pop
dec
push
add
xchg
adc
lret
pop
cmpsb
push
adc
scas
and
cmp
mov
adc
push
je
xchg
pop
es
jnp,pn
into
cmp
or
pop
mov
movups
in
sbb
or
loope
and
push
or
gs
ds
inc
lret
push
sbb
imul
push
jo
aad
popa
jo
nop
xorb
flds
inc
dec
push
jb
arpl
fsincos
jne
jl
or
or
xchg
and
sar
in
push
cs
mov
sub
insl
popa
cmc
pusha
ljmp
sti
and
sbb
and
push
fstps
int
sub
into
push
push
inc
push
mov
mov
inc
hlt
pop
insb
loopne
sarb
nop
adc
and
cmpsl
popf
and
push
fmuls
sbb
mov
push
push
js
repnz
or
xor
sbbl
fstl
clts
and
and
adc
cmp
xor
cmp
fbld
cmpsb
adc
shll
or
push
imul
jecxz
push
xor
mov
xor
push
leave
pushf
sbb
mov
jo
popa
test
paddsb
out
into
out
inc
ds
sub
sbb
mov
jg
sbb
loope
mov
xchg
nop
pushf
xlat
test
and
inc
jbe
mov
daa
sub
sti
ret
mov
xor
xor
ss
cmp
inc
inc
push
aaa
dec
aam
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
push
rorb
add
push
push
pop
pop
pop
cmc
or
imul
sub
mov
push
xor
pop
js
cs
xchg
dec
lret
push
mov
xor
ljmp
xor
adc
sub
testb
mov
push
cli
and
add
add
addr16
jns
add
add
mov
int3
lcall
rcr
push
xchg
mov
pop
push
pop
cmp
incb
dec
loopne
pop
jb
mov
rorl
lods
dec
sub
sub
clc
add
fildl
je
push
jp
push
jg
rcr
jle
cmc
shll
inc
jge
roll
divb
lahf
mov
mov
cmp
dec
rcll
mov
and
mov
lret
and
cmp
mull
cmp
mov
add
adcl
imul
mov
nop
jmp
inc
sbb
insb
movsb
inc
inc
dec
pusha
sub
dec
call
clc
push
jecxz
mov
lods
or
leave
sbbl
and
aas
les
and
testl
push
sbbb
in
sbbb
adc
pop
xchg
sarb
mov
hlt
je
test
pop
inc
and
sbb
mov
mov
mov
push
cvtps2pd
inc
adc
cmp
jmp
into
or
push
loop
inc
rol
xor
push
or
rorl
fcoms
scas
sub
addl
mov
pusha
idiv
mov
jmp
xor
cs
push
xor
dec
sub
lahf
sub
dec
push
pop
scas
mov
nop
dec
and
jg
xchg
or
jmp
inc
sti
push
add
or
mov
inc
jge
pop
pop
mov
sub
ret
jle
shll
xchg
es
icebp
outsl
hlt
push
push
data16
lea
movl
pop
dec
cmp
aas
push
cmp
ja
insb
fwait
loopne
sbb
xor
pusha
je
mov
add
addr16
loopne
add
mov
lret
arpl
pop
ret
das
call
mov
addb
daa
icebp
insl
clc
lret
loope
mov
pusha
pop
jne
cwtl
ljmp
test
push
jmp
push
jle
sbb
fsubs
es
sub
in
push
in
outsl
sub
lods
cmpsl
lods
sbb
cmp
ja
jo
xlat
cld
lahf
xchg
imul
inc
ljmp
dec
jns
in
push
xor
int
je
pop
cmp
aaa
in
sub
cmp
orb
lahf
movsl
aas
jb
in
or
inc
notl
inc
ret
inc
mov
call
ja
rclb
ja
pop
inc
cmpsl
nop
xchg
and
sbb
inc
sbb
sub
je
adc
xchg
mov
sbb
inc
imul
cmp
pop
mov
push
dec
popf
cmpsl
fs
inc
je
rorl
aaa
push
pop
inc
lret
push
jl
add
cmpb
iret
nop
cmp
fnop
sbb
cmpxchg
add
mov
aas
cmp
fbld
sub
inc
push
push
nop
sbb
dec
sbb
test
pusha
xchg
dec
inc
dec
ja
cs
sub
mov
iret
xchg
es
cltd
js
add
pop
xchg
mov
out
and
mov
fwait
aas
mov
je
or
xor
dec
dec
mov
push
das
or
inc
fwait
or
cmp
add
inc
aas
cmp
sub
setb
add
sub
inc
xchg
add
movb
mov
mov
push
cmp
add
aas
and
pop
pop
pusha
add
inc
mov
jmp
adc
js
inc
lret
shlb
push
xorl
add
adc
xor
aas
jmp
enter
call
mov
dec
jg
cmpl
adc
test
sub
cmpsb
mov
inc
femms
mov
inc
dec
js
push
orw
nop
cmp
add
in
nop
or
add
rolb
mov
or
add
jp
jnp
sub
mov
jl
cmp
pop
imul
faddl
fucomi
dec
pop
pusha
pusha
insb
cmp
push
fmul
xor
pop
enter
push
or
subb
cmp
mov
test
push
outsb
imul
movl
inc
in
or
insb
mov
cmpb
and
loopne
cmc
in
adc
mov
int
aaa
je
sti
lcall
sub
jo
push
adc
pop
flds
lods
cmp
pop
icebp
stc
ja
leave
mov
or
cmp
int
mov
push
idivl
iret
ret
mov
adc
ja
xor
pop
cmp
inc
push
imul
cmp
orb
push
fadds
lret
mov
jge
test
dec
jo
iret
in
insb
sti
cmp
xor
test
lock
adc
divb
cmc
in
push
or
push
in
andl
dec
jmp
inc
push
adcl
xchg
shl
lret
shrb
inc
pop
cmpsl
sbb
pop
sub
or
dec
sti
xchg
adc
fs
out
or
and
das
enter
fsubs
sub
hlt
mov
push
add
test
pop
push
jp
mov
or
movsb
inc
ret
mov
adc
add
int3
dec
and
es
push
pop
lods
testb
shrl
mov
shlb
aas
dec
cld
fstps
xchg
insb
mov
mov
sbb
mov
insl
shrb
fbstp
adc
add
gs
adc
ficoml
test
je
jp
mov
mov
in
jns
mov
lock
cmp
mov
or
sahf
jo
sub
es
popa
decb
inc
mov
xor
inc
loope
stos
jg
push
adc
ret
jo
and
xor
iret
pop
ds
lea
shll
xor
inc
cli
pusha
leave
mov
and
or
adc
lahf
mov
pop
inc
cmp
push
aad
mov
mov
mov
sarl
jmp
jbe
sbb
push
pop
mov
xor
shlb
or
pusha
sbb
outsb
pop
pop
out
je
or
lock
cwtl
jge
adc
int3
outsb
xor
daa
sub
cld
cmpsb
lock
je
ds
imul
inc
out
add
xchg
adcl
iret
nop
nop
push
adc
mov
and
loopne
jecxz
xchg
clc
call
call
mov
xor
ljmp
add
cmp
adc
and
inc
cmp
aaa
add
rorb
mov
and
dec
subb
lahf
hlt
jb
or
sub
sbb
xor
sbb
mov
and
lock
addl
push
cs
adc
lret
or
mov
stos
rcl
iret
ss
aad
jle
jg
fcmovnu
mov
add
sbb
or
push
fwait
sbb
xchg
xchg
sahf
or
orb
dec
loope
or
xor
mov
rcll
cmp
je
mov
subl
mov
sbb
or
int3
push
mov
cwtl
out
push
adc
test
repz
or
mov
xchg
nop
and
daa
test
scas
xchg
adc
push
mov
xchg
add
pop
iret
xor
data16
clc
add
push
imulb
je
inc
or
xchg
fsubs
scas
icebp
push
jns
and
mov
pop
mov
ss
or
adc
mov
shl
push
stos
inc
cmpl
aaa
shlb
movb
cmp
pop
cwtl
and
test
jmp
or
pop
out
and
sbb
hlt
enter
ljmp
std
push
smsw
xchg
lock
call
mov
inc
xlat
and
rolb
adc
pop
inc
data16
sbb
cmp
icebp
and
mov
mov
lods
les
push
sbb
ss
addl
inc
test
ret
mov
nop
into
xchg
xor
fldl
mov
jns
enter
gs
lock
loopne
imul
inc
xor
sub
xor
dec
and
push
sbb
sbb
adc
lret
rolb
sti
in
cltd
xchg
decl
push
fsub
clc
push
add
jle
mov
cmp
invd
das
pop
fisttpl
cmp
cld
adc
dec
cmpsb
jecxz
jmp
orl
dec
adc
pop
mov
jnp
lock
inc
cwtl
pop
add
and
test
jge
repnz
cmp
push
push
inc
adc
fsubr
dec
icebp
push
fsubrs
push
lods
cltd
js
lods
add
mov
ficoml
pop
mov
sbb
sbb
jge
clc
jecxz
popa
cmp
enter
add
popf
mov
sub
push
or
and
es
or
popf
push
add
inc
push
sub
and
sub
roll
mov
movsl
and
mov
cmp
pop
mov
test
ja
mov
aad
stos
movsb
pop
lock
push
lock
adc
add
sub
shrb
sbb
sbb
push
lods
mov
xor
bound
mov
iret
hlt
cmp
push
sbb
hlt
hlt
pop
into
hlt
sub
inc
add
push
rep
lock
imul
test
shlb
inc
jne
mov
push
inc
xor
leave
lock
rorl
sbbb
cld
add
jp
or
ds
pop
fists
sqrtps
loopne
xchg
cmp
int3
gs
outsl
lea
or
add
rorb
adc
or
ja
ja
outsb
aaa
fisttps
sbb
or
push
inc
cmp
dec
add
hlt
push
inc
xchg
jne
mov
pop
mov
ja
or
sbb
jne
loopne
ret
aas
sbb
pushf
call
inc
les
enter
movsl
pusha
dec
push
pushf
and
lcall
cld
mov
adc
and
xor
popa
pop
push
pop
fisttpl
xchg
cmp
sbb
daa
sub
xlat
xchg
pushf
or
add
pusha
aaa
sub
mov
iret
add
mov
sub
jmp
in
push
ret
sub
xor
or
sub
mov
sub
add
inc
add
pop
pop
xchg
loope
shlb
adc
dec
call
ret
pop
lods
inc
sbb
call
or
test
fdivl
inc
mov
les
xor
leave
imul
and
sbb
push
push
call
jo
sub
mov
xchg
jl
call
xor
mov
lret
clc
sub
clc
orl
pop
and
and
dec
lock
clc
leave
add
add
mov
add
je
dec
xor
arpl
push
mov
pop
mov
addl
pop
sbb
or
push
inc
and
pop
test
test
inc
movsb
leave
cltd
mov
and
sbb
cmp
cmp
pop
push
out
cmp
sbb
loopne
cmp
add
cmp
push
mov
data16
rorl
jmp
outsl
sbb
sub
jecxz
push
xor
shl
mov
das
in
xlat
ret
adc
andl
test
cmp
jno
inc
add
or
push
lcall
adc
push
mov
cltd
lcall
or
or
mov
and
push
je
cmovl
popa
add
cmp
push
pusha
inc
push
sbbl
jmp
fistl
add
pop
mov
rolw
add
sub
fs
pusha
push
int
jl
xor
movsb
js
mov
xchg
dec
aas
sub
movl
pop
sub
or
xchg
out
nop
sbb
dec
call
pop
fsubl
mov
pop
sub
dec
mov
orl
mov
xchg
fchs
or
pop
lahf
mov
add
xor
imul
ret
cmp
cwtl
cld
incl
mov
mov
xchg
push
inc
push
mov
xor
sbb
push
in
test
dec
out
test
bndldx
mov
pop
adc
xchg
out
sbb
int
inc
cmp
mov
ds
out
dec
popa
sarl
add
cltd
lret
or
subl
add
cld
ja
sbb
int
in
add
push
mov
xor
cmpb
push
loopne
lock
and
push
add
ret
testb
pop
adc
xchg
or
lea
out
mov
xor
scas
clc
xchg
adc
lods
and
aad
sbb
lock
scas
inc
sbb
inc
pop
dec
xor
shll
dec
dec
frstor
xor
in
lea
fadds
pop
and
and
sub
mov
pop
xchg
and
gs
jb
fwait
cli
pop
or
mov
cmp
inc
lret
and
jmp
aaa
cmp
ret
lods
mov
or
mov
and
and
popf
rolb
pop
add
or
pop
push
or
mov
mov
cmpsl
cmp
pop
or
je
jmp
insb
mov
or
mov
mov
jno
in
fldcw
cmpsl
out
aas
je
adc
pop
lcall
add
mov
push
xchg
dec
movl
sub
aam
inc
cmp
sub
mov
es
pop
mov
mov
mov
nop
dec
lds
mov
int
inc
inc
push
inc
inc
sbb
rcll
dec
je
outsb
ret
or
adc
ret
lahf
fs
xor
xor
lea
mov
jmp
andb
shlb
xchg
push
ljmp
jge
loopne
aad
ds
and
xor
popf
mov
adc
outsl
pop
in
daa
stos
pusha
pop
cmp
es
cwtl
cmp
fs
fstps
add
pushf
or
movb
leavew
fcmovu
mov
xchg
es
movsb
xor
call
bound
js
cmp
sbb
push
pop
pop
mov
inc
shlb
sub
jge
outsb
pop
xchg
imul
jbe
and
stc
gs
popa
cmpsb
lock
or
sub
ljmp
pop
mov
jp
adc
inc
nop
jne
dec
out
pop
addb
push
mov
push
les
ret
pusha
pop
popf
push
inc
push
jae
lcall
xchg
mov
popf
lods
jmp
clc
push
cmp
sahf
gs
insb
popf
xchg
adc
add
inc
and
mov
xor
xlat
dec
ret
push
lcall
inc
lahf
and
add
dec
sbb
repz
inc
and
fwait
or
jle
push
cmpsl
and
and
fs
aas
lret
sbb
and
xchg
sub
dec
pop
or
xor
and
int3
cmpsl
ret
cmp
in
push
push
mov
lret
add
mov
js
test
test
insb
cmp
fsubr
and
xor
mov
test
add
loopne
outsl
sub
jmp
jg
or
pushl
add
mov
sub
mov
popf
push
lahf
mov
mov
adc
dec
mov
inc
jp
sub
inc
leave
xchg
xchg
inc
inc
cld
incl
sbb
dec
or
out
push
or
pop
movl
adc
cmp
lods
out
scas
sbb
add
out
cmpl
loop
ret
iret
mov
imul
js
push
mov
enter
lcall
shlb
ret
mov
fs
jle
stos
inc
lret
push
cmp
inc
test
jnp
adc
test
pop
pushf
xchg
popf
sti
std
dec
cmp
mov
pop
mov
cwtl
xor
push
add
daa
ror
enter
mov
mov
push
stos
iret
ja
es
push
mov
push
xchg
scas
es
pop
mov
inc
pop
xor
popf
mov
xor
jge
inc
inc
xchg
sub
clc
sbb
jmp
mov
jle
push
push
data16
and
mov
xchg
and
fisubrl
push
pop
cmp
inc
ds
xchg
push
cmpsb
cmpsl
movsb
arpl
scas
and
adc
inc
aas
and
jb
pop
sub
pop
and
leave
xor
leave
inc
jb
inc
or
or
pop
je
and
mov
or
fs
push
pop
adc
cs
xor
insb
sub
mov
iret
inc
mov
mov
mov
scas
xor
or
in
fs
push
insl
xor
push
push
cmpsl
add
int3
sbb
jb
xlat
jl
jl
inc
or
js
ja
scas
in
lea
rolb
add
adc
xchg
into
xor
loopne
enter
mov
add
mov
adc
push
rcl
mov
test
adc
add
mov
and
aas
xorb
mov
push
lods
jecxz
adc
in
inc
fwait
cltd
bound
sub
push
sti
inc
imul
mov
pop
push
rcl
rclb
mov
call
rol
or
inc
mov
add
inc
cmpsb
inc
imul
push
notl
mov
mov
inc
push
xchg
adc
lret
in
add
out
jae
ficoml
dec
jne
or
pop
cld
add
out
stc
pop
js
enter
inc
inc
push
lcall
fucom
pop
fsts
pushl
push
ret
mov
js
test
jmp
pushl
dec
inc
add
adc
and
mov
movhps
insl
add
push
orl
add
xchg
sub
scas
pop
sub
sub
imul
mov
mov
push
int3
add
call
sbb
xchg
imul
out
inc
inc
stos
mov
cmp
mov
sbb
hlt
or
sbb
add
xor
imul
scas
add
test
or
hlt
sbb
in
loopne
in
mov
leave
rolb
popf
mov
inc
enter
sbb
dec
dec
xchg
and
jle
or
les
jnp
sub
pop
xor
test
les
sbb
cmp
dec
push
sbb
cmpsl
pop
dec
xor
xor
sbb
aam
je
push
imulb
jno
cmpsb
repnz
pop
iret
les
rclb
aam
mov
rcrb
sbb
cmp
enter
lea
movsl
cmp
dec
fwait
jl
data16
int3
push
stos
push
inc
adc
lds
inc
push
gs
test
rcl
inc
mov
negl
scas
add
stos
xor
adc
jne
push
and
js
xchg
dec
mov
jns
call
dec
fimuls
insb
xor
add
inc
jmp
fdiv
rcrl
xor
xchg
imul
xor
sti
mov
xchg
cmp
dec
jmp
inc
fistpl
punpckhbw
imul
loopne
pop
dec
movsb
lock
repnz
test
orb
divl
loopne
pop
sub
adcl
cmpsl
or
test
pop
iret
add
pop
leave
cmpsb
jno
inc
mov
popa
sbb
add
popa
mov
into
xchg
jne
insl
cltd
and
lods
push
sub
or
mov
sbb
cmp
outsb
sub
xor
test
js
push
and
aad
sbb
aaa
push
mov
pop
ja
fwait
or
pop
test
stos
loopne
sbb
shlb
sarb
test
xlat
call
popf
into
mov
test
sub
dec
or
pop
cmp
mov
pushf
sbb
inc
iret
xorl
lods
and
xchg
inc
imul
sti
and
add
add
pop
decl
sbb
sti
jl
inc
mov
je
sbb
cmp
js
movb
push
addr16
mov
dec
ret
xchg
mov
pop
inc
sbbl
mov
imull
cmpb
movb
popa
adc
int3
daa
add
pop
fistl
xchg
jne
loope
in
fsubl
add
mov
jle
aaa
dec
and
dec
inc
jne
jnp
test
cmp
mov
jne
mov
adc
cmpl
popl
mov
cli
orb
or
adc
pop
push
cmp
add
nop
sti
and
inc
fs
roll
xor
jp
lret
push
sbb
mov
data16
and
inc
arpl
add
adc
push
mov
add
fsubr
and
fwait
cmp
jno
js
or
or
sbb
pop
adc
lret
jae
dec
pushf
adc
stos
inc
xor
fistpl
and
mov
lret
cmpsl
outsl
out
fwait
mov
pusha
or
cmc
dec
and
mov
pusha
push
pop
ret
push
lahf
imul
subl
or
xchg
cwtl
ret
add
or
cwtl
inc
dec
nop
push
add
pusha
call
outsl
hlt
xchg
and
pop
stos
mov
adc
gs
and
push
xor
pushf
mov
out
push
mov
push
jp
hlt
jl
push
sarl
sbb
fs
ljmp
or
sub
daa
gs
pop
xorb
or
call
pop
rclb
shlb
aam
fwait
pop
add
imul
test
js
jb
adc
int3
js
inc
mov
add
pop
jmp
pop
pop
or
daa
push
insb
xchg
add
and
in
and
sti
pop
sbb
or
test
mov
hlt
jg
jnp
jg
stc
pushf
or
and
fs
inc
into
aas
lahf
ss
test
incb
cmp
xor
adc
or
out
pop
push
insb
inc
sbb
or
sbb
or
ret
push
adc
add
or
inc
dec
lret
push
inc
sub
xor
mov
hlt
scas
cmp
inc
dec
dec
jecxz
popa
jno
inc
out
adc
mov
xchg
add
fcompl
shlb
mov
push
add
cmc
popa
fwait
xchg
jbe
or
jbe
jecxz
test
ret
jl
mov
fcoml
in
mov
fwait
test
test
pushf
je
add
adc
jecxz
pop
ret
cmp
xor
add
add
cwtl
pop
leave
arpl
add
mov
testb
add
add
push
add
xor
push
jo
pop
mov
loop
mov
xchg
mov
mov
add
mov
inc
mov
cli
data16
imul
cmc
add
dec
test
push
jge
inc
sub
or
adc
inc
pop
add
shrb
subb
push
pop
pop
in
mov
fisubl
scas
cwtl
xor
repz
cmp
mov
cltd
nop
jbe
push
pop
xor
dec
and
sarb
xchg
push
mov
or
mov
repz
cmp
loope
sub
or
add
push
rorl
pop
push
movsb
or
xorb
pop
cmpsl
cwtl
cmovae
sbb
or
add
xor
ffreep
outsb
push
sub
push
pop
push
adc
and
mov
mov
cli
add
rolb
ret
xor
push
shl
jle
fstl
dec
ret
ret
pop
mov
insl
mov
cmp
add
dec
repz
iret
push
jle
hlt
jne
lea
hlt
adc
xor
jmp
xor
push
test
xor
push
pop
lods
sti
mov
insb
xchg
pop
fadds
lahf
fucomp
sbb
mov
and
push
add
cmpsb
push
add
or
inc
sbbb
cmp
pop
clc
jb
out
dec
xor
jbe
or
insb
fisttpll
das
insb
inc
inc
iret
sbb
xor
addl
cmp
and
lea
orb
cltd
dec
push
sarb
add
sbb
adc
xchg
mov
test
add
push
sub
arpl
xor
add
mov
push
in
sbb
les
dec
js
jecxz
or
pop
testl
pop
hlt
das
mov
mov
inc
or
jge
add
xchg
iret
cmp
adc
cmpsl
lock
inc
jmp
inc
addr16
clc
std
or
xchg
cmp
or
in
sbb
pusha
adc
fs
or
mov
pop
inc
mov
xor
sbb
cld
test
enter
dec
inc
dec
inc
leave
push
push
xor
test
scas
dec
iret
cmp
push
nop
push
sub
mov
daa
in
xor
and
xor
pop
or
ret
sbb
test
or
mov
xchg
add
or
jmp
xor
inc
into
push
sbb
cmp
leave
test
je
pop
push
dec
fs
test
or
push
das
mov
push
incb
and
out
push
push
jmp
and
sbb
jge
xchg
lret
aaa
xor
inc
sub
out
push
jge
fs
hlt
cmpsb
ret
fisttpl
pop
adc
mov
xor
dec
lock
movsl
jge
push
mov
pop
aam
inc
shlb
xlat
aam
or
push
push
inc
in
fimuls
and
into
ja
jno
in
stc
and
mov
cmp
mov
inc
mov
cli
inc
sub
movsb
pop
mov
aaa
jmp
sbb
into
adc
adc
xor
or
or
sbb
add
xor
jne
callw
or
loop
pop
or
jns
jno
mov
lret
or
inc
in
sub
add
inc
into
or
scas
sbb
xchg
in
out
pusha
mov
aaa
in
xchg
sub
andl
lcall
popa
lods
je
push
ss
hlt
js
leave
push
clc
pushf
cltd
call
mov
test
add
ds
mov
xor
inc
insb
jae
dec
or
cmp
je
jb
test
adcb
add
test
outsb
cmp
arpl
xchg
xor
inc
hlt
add
pop
inc
pop
js
adc
and
add
sbb
rolb
lea
mov
push
push
jmp
adc
fsubrl
push
sbb
mov
popa
adcl
jo
aas
mov
orb
add
push
adc
xchg
out
push
xor
ret
aas
cmp
or
cmp
xor
adc
cmp
mov
arpl
fcoms
sub
sbb
jp
pop
imul
cwtl
mov
or
arpl
inc
cmp
mov
or
rcrb
lret
add
adc
dec
xorl
int3
mov
pop
adc
jg
adc
cmp
jne
xor
aaa
fcmovne
adc
add
cmp
shlb
add
dec
cwtl
push
pop
iret
sahf
xchg
jns
cld
inc
out
inc
daa
adc
lcall
add
and
add
loop
repz
in
int
insl
aam
mov
or
mov
js
xchg
adc
loop
sub
outsb
imull
inc
pop
mov
test
sub
sbb
xor
push
pop
jb
push
insb
pmuludq
add
int
add
nop
into
sbb
or
mov
push
vmwrite
repnz
sbb
nop
hlt
xchg
jg
adc
data16
les
lcall
std
jmp
daa
sub
js
out
sub
mov
xchg
add
enter
sub
xchg
lea
stos
add
negb
std
mov
loope
pop
inc
sub
loop
aad
pop
and
inc
push
aam
adc
aam
mov
jl
add
cltd
dec
loopne
mov
mov
adc
nop
inc
xor
jp
cmp
mov
pop
icebp
lret
inc
dec
sbb
mov
and
mov
fimull
cmp
push
or
add
cli
add
addl
mov
cltd
sbb
sub
xor
adc
xor
xor
jge
adc
sub
inc
mov
ficoms
mov
add
clc
ds
or
sub
sub
pop
testb
add
in
enter
repnz
xor
pop
pop
xor
jg
sub
roll
or
into
adc
and
sbb
fcoml
pop
xchg
push
shr
loopne
je
cmp
data16
shl
js
sub
nop
inc
stos
push
test
dec
sbb
add
mov
mov
popa
mov
mov
cmp
adc
xchg
mov
fmuls
add
fchs
jge
mov
fistpl
xor
dec
sub
dec
cmp
push
in
dec
pop
add
inc
fmuls
and
push
xchg
jns
pop
in
loope
dec
leave
inc
jnp
jne
loope
fdivs
dec
test
xchg
push
dec
mov
insb
or
add
jl
cmp
dec
repz
fstp
sbb
push
lds
jecxz
xor
movsb
cwtl
and
test
filds
inc
jg
push
mov
push
arpl
pusha
add
shlb
dec
mov
xor
or
sbb
add
xlat
sti
dec
movl
addl
push
test
cmp
mov
push
add
movsb
adc
inc
fiaddl
push
popa
mov
add
call
inc
jb
pop
je
lret
add
xchg
jne
pop
cmpsb
dec
push
or
in
dec
xor
jp
or
mov
adcl
jmp
jge
xor
sbb
and
repnz
jns
cmpb
rorb
inc
out
push
mov
in
pop
and
add
leave
or
int3
pop
add
daa
lods
sub
jge
lock
pop
std
adc
cmp
mov
repnz
xor
xor
lret
lret
and
mov
push
scas
inc
mov
lahf
test
lcall
sub
fld
ja
sub
mov
pop
imul
lock
outsb
and
inc
push
stos
adc
mov
push
sbb
popa
gs
ficomps
xor
mov
jg
jmp
push
mov
stos
xor
or
dec
dec
stos
imul
xor
or
cmpsl
mov
outsb
sbb
or
cli
add
jne
inc
xor
in
cmp
xorb
mov
aaa
pop
push
xchg
popa
iret
cmpsb
mov
xchg
lds
push
test
mov
outsl
xor
cmc
jmp
xchg
mov
call
add
jne
inc
ret
sbb
pop
ret
sub
sbb
sbb
arpl
xlat
mov
jne
lret
adc
adc
xchg
cmp
cmp
cmp
inc
jg
push
rol
test
push
adc
das
daa
loopne
shlb
cmp
leave
das
pop
adc
out
xor
ljmp
mov
dec
jl
inc
sbb
xchg
inc
js
ret
mov
scas
arpl
and
pop
test
ret
sbb
cmc
nop
rclb
lret
and
and
push
ljmp
sub
sahf
out
push
rolb
dec
ds
sahf
out
inc
inc
or
pop
faddl
out
xchg
cmp
cmp
dec
xor
out
jns
jnp
dec
fsubrs
les
push
cmpb
cmp
and
cmp
mov
push
adc
dec
xor
jae
mov
es
lods
roll
pop
sarb
nop
fsts
mov
jle
and
dec
xor
ret
jne
mov
jno
lahf
mov
lods
jnp
adc
jno
inc
ret
adc
xchg
push
lahf
cmp
dec
add
mov
in
stc
lret
inc
movsb
push
into
add
clc
mov
add
bound
add
mov
mov
leave
add
add
add
push
add
gs
sbb
popa
je
mov
sahf
or
add
daa
dec
add
out
pop
push
dec
or
loop
xor
adc
cmp
and
pop
pop
xor
add
jmp
add
inc
or
repnz
push
imulb
dec
push
dec
sbb
inc
ja
push
pop
pushf
decb
push
pop
sub
and
pop
mov
push
add
movl
push
mov
testl
dec
add
mov
inc
jo
add
sbb
in
push
inc
mov
ret
dec
add
adc
pop
pop
push
insl
mov
fs
jo
add
add
fs
enter
cmp
or
in
mov
cmp
test
in
jo
inc
push
push
pop
sbb
cs
arpl
xchg
out
inc
mov
and
in
push
or
sub
cs
das
mov
push
xor
ja
pop
lret
or
insl
xchg
and
popa
js
fwait
jbe
xlat
pop
in
add
sub
mov
push
sbb
and
or
push
inc
pop
stc
pop
or
push
inc
push
pop
inc
add
push
inc
push
inc
scas
pop
fcoms
call
shl
outsb
clc
pop
jbe
inc
ja
push
shrb
xor
jns
and
xor
les
push
push
pop
in
inc
jp
ret
xorb
xchg
pop
xor
addb
imul
jbe
or
inc
dec
inc
jp
jns
push
xchg
dec
or
mov
and
add
jecxz
sub
adc
lahf
pop
sub
push
bound
dec
mov
mov
pop
ret
cmp
adc
push
ds
es
or
jae
dec
dec
mov
mov
and
sub
ss
mov
add
add
prefetch
or
cmovs
mov
fisttps
sbb
out
mov
das
mov
popa
and
cmp
or
and
mov
test
shl
int
pop
add
push
jb
xor
sahf
push
fs
data16
aaa
add
gs
add
daa
jmp
or
jns
xchg
mov
jo
mov
mov
sub
add
sbb
or
or
int
lret
push
adc
cmpsb
xchg
add
or
sahf
push
or
add
out
cltd
sub
pop
sbb
or
pushf
pusha
ret
jo
addr16
adc
jo
scas
cmp
adc
push
arpl
and
pop
and
push
gs
cltd
loopne
adc
lea
mov
xor
xor
and
mov
xor
mov
rorl
mov
fs
out
mov
mov
push
jb
insl
popa
jb
or
or
mov
pushf
cmpsl
adc
scas
push
outsb
pusha
popa
add
repz
jo
xorb
or
orb
lea
xor
lret
pop
push
xchg
arpl
dec
imul
or
iret
add
enter
or
sbb
loopne
push
rcr
ficomps
sbb
roll
mov
jo
xchg
cmp
sub
dec
das
sti
ret
rcrb
das
xchg
lret
add
adcl
push
jo
jg
push
dec
outsb
jnp
add
mov
fs
loopne
mov
or
clc
pop
add
inc
test
adcl
dec
pop
xchg
add
lcall
xor
cmp
imul
pop
push
xor
push
inc
cwtl
sub
pop
inc
add
stc
jb
inc
cld
pusha
insb
inc
mov
add
inc
jl
inc
sbb
stc
add
test
add
imul
push
inc
mov
imul
in
jb
insb
inc
pusha
jae
sub
bnd
add
addb
inc
push
repnz
mov
inc
les
mov
divl
movsb
sbb
lahf
and
ja
mov
repz
mov
cmp
in
push
push
xor
push
push
iret
fs
or
mov
jno
and
add
ljmp
mov
add
add
add
adc
push
dec
xchg
inc
or
insl
mov
pop
call
add
or
mov
test
test
jp
mov
stos
sub
or
or
mov
pushl
ljmp
ljmp
shl
bound
or
rorb
pop
push
mov
xor
push
clc
pop
nop
cs
movsb
push
faddl
push
in
xchg
hlt
mov
push
push
adc
movsl
sti
into
idivb
clc
clc
cmpsb
ds
xchg
push
int3
jae
cmpsl
fnstcw
fadds
sarb
jl
sahf
imulb
cwtl
es
popf
sahf
push
adc
fnstcw
insb
fsubs
mov
mov
inc
mov
push
lahf
cmpsl
cmp
nop
test
cs
mov
idivb
xchg
jne
imul
pop
pusha
or
pusha
testb
rcrb
push
mov
mov
xor
or
pop
inc
sbbb
cmp
add
sbb
imul
pop
push
adc
aas
pop
lret
shll
cwtl
and
push
or
adc
pop
bswap
loopne
js
push
add
insb
add
mov
push
insb
dec
loope
call
add
rcll
xchg
scas
dec
cs
gs
jg
push
inc
add
push
mov
insl
add
aam
or
adc
add
bound
je
sub
lcall
adc
sub
jne
jecxz
stos
and
cs
pop
loop
inc
scas
push
mov
or
fisubl
xchg
push
in
xlat
cmp
mov
push
lock
dec
inc
mov
sbb
or
sub
or
inc
mov
dec
mov
xor
mov
push
add
rcl
rolb
and
les
into
lds
mov
add
and
ret
sbbb
mov
and
inc
lods
push
test
arpl
das
pop
sbb
int3
adc
dec
or
or
dec
mov
incl
push
sub
or
xor
jmp
movsb
stc
aam
mov
icebp
jmp
mov
sub
dec
sub
cmovs
jbe
lock
out
pop
jns
xchg
pop
push
or
xor
xor
or
cs
insb
fs
dec
fucomi
dec
jecxz
les
adc
push
ret
or
inc
pop
jg
insb
or
jnp
inc
jnp
xor
mov
xor
loopne
and
mov
outsb
inc
vzeroall
inc
mov
xor
jnp
mov
stc
mov
pop
xor
jle
and
xchg
xchg
mov
xor
enter
addb
adcb
push
out
push
sbb
iret
cmp
and
push
mov
in
cmp
and
jne
data16
ja
pshufw
icebp
cwtl
jle
incb
dec
insl
fbstp
inc
repnz
inc
es
movsl
jbe
jle
jl
jmp
aad
pop
xchg
or
in
cmp
cmp
andb
sub
aas
or
pushf
pop
xchg
pop
push
inc
push
stc
in
inc
cmp
push
ds
cmpb
nop
aas
and
sbb
loopne
cwtl
cwtl
cmp
imul
sub
ret
xchg
je
nop
ja
cli
rolb
or
lock
jns
and
fadds
dec
outsb
pop
enter
jns
mov
test
in
mov
jl
test
and
orl
inc
test
leave
dec
dec
or
stc
inc
sahf
push
or
push
add
mov
test
lock
test
inc
inc
and
and
in
inc
xor
adc
dec
in
inc
push
orb
in
inc
push
mov
cmp
ja
push
in
inc
enter
push
in
inc
jns
dec
xor
mov
cmp
add
repnz
inc
inc
push
test
adc
push
dec
mov
cs
dec
push
push
hlt
loopne
sahf
push
das
mov
popa
imul
inc
pop
pop
enter
jbe
rcrb
inc
cmp
adc
les
mov
rcrl
and
jp
pop
lods
inc
pop
in
inc
orb
rcrl
mov
and
repnz
stos
hlt
test
or
xchg
fsubl
mov
mov
xchg
int3
mulb
into
mov
les
lods
push
mov
add
push
pop
sub
inc
adc
testl
adc
xor
inc
imul
inc
mov
iret
push
push
mov
inc
cmp
lret
inc
das
cmp
sysret
sbb
dec
inc
xor
dec
ds
mov
inc
xchg
test
nop
mov
scas
in
inc
and
add
adc
mov
lods
pop
mov
add
mov
dec
push
andps
or
mov
add
pop
or
stos
adc
jge
mov
sbb
xchg
add
mov
sub
jne
cmpsb
out
jmp
push
je
pop
add
push
inc
lock
jne
movsb
aaa
and
call
mov
xor
push
fisubrl
stos
sub
int
les
add
mov
pusha
xchg
sbb
pop
es
sub
inc
pop
inc
ljmp
push
or
adc
dec
pop
mov
bound
fsubrs
add
lret
jl
divb
adc
out
push
hlt
mov
jo
inc
xchg
xor
addl
mov
inc
cld
mov
sub
and
ficomps
ss
stc
lds
or
mov
in
insb
pop
xor
lcall
dec
popa
pop
push
or
inc
inc
mov
ja
dec
cmp
je
push
sbb
or
ss
push
push
or
test
sbb
push
orb
jmp
and
xor
lahf
pop
in
cmp
dec
or
xor
inc
ret
or
movnti
xrstors
xor
ficoms
cmp
inc
or
or
xor
mov
cmp
sub
inc
cs
movsl
into
inc
inc
mov
xor
add
xchg
push
xchg
push
call
mov
jno
jns
sub
je
pop
pop
cmp
dec
xor
cmp
cmp
clc
and
ror
movsl
in
push
loopne
dec
sbb
insb
push
pushf
lock
inc
fdivp
mov
add
add
cs
in
or
adc
pop
es
adc
sbb
sub
fisubl
jb
andb
xchg
int3
movsl
popa
mov
out
ja
testb
sbb
xchg
adc
add
jbe
cs
add
add
xchg
jb
push
fiadds
mov
xchg
push
sahf
xchg
pop
push
jb
test
aam
in
dec
add
dec
enter
negl
ret
pop
pop
pop
push
push
lds
push
es
add
inc
jns
or
test
xchg
and
out
js
stos
pop
add
mov
mov
movsl
push
test
or
push
inc
or
pop
cs
fwait
adc
and
or
sbb
notb
ds
push
inc
add
jge
add
pop
and
es
xor
or
sub
push
inc
rorb
push
adc
aam
inc
test
push
or
outsb
or
shlb
pop
dec
sarb
add
or
sub
or
imul
xor
or
mov
pop
sub
pop
cld
add
sbb
inc
and
inc
add
sub
insl
mov
inc
jno
add
add
xor
push
test
repnz
and
xor
xor
push
hlt
es
mov
dec
and
in
or
adc
dec
leave
mov
xor
add
xchg
push
sub
sub
jne
dec
add
ret
adc
push
add
je
inc
mov
jg
cwtl
inc
xlat
cmp
cmpb
mov
lods
push
push
cmp
xchg
mov
jmp
sub
and
add
mov
inc
add
adc
xchg
sub
pop
mov
lods
jecxz
fadd
repz
xchg
mov
cli
adc
dec
nop
add
sbb
jle
imul
xchg
add
lock
mov
cmp
push
fcomps
add
adc
ret
rorb
and
pusha
adc
inc
mov
insb
inc
sbb
addl
std
popf
push
pop
hlt
neg
jmp
add
test
push
push
inc
pop
xor
xor
push
xor
jmp
push
test
es
or
push
repnz
push
mov
add
mov
cmp
aas
xchg
test
movsb
jmp
outsb
loopne
lret
mov
setl
cmpsl
into
fiaddl
push
sbb
aas
addl
inc
add
hlt
xor
movswl
push
shrl
sub
xorl
ss
push
lret
daa
xchg
jecxz
pop
sbb
rorl
scas
imul
fs
xchg
sbb
shl
inc
cmp
lar
mov
xor
or
jp
ss
cmp
adc
dec
or
adc
and
lret
xchg
pop
test
lea
lods
inc
mov
mov
test
or
ret
rclb
scas
adc
xchg
sti
and
cs
sub
or
jmp
xor
push
jmp
insb
aaa
and
dec
sub
dec
pop
push
aas
sbbb
incl
dec
cmp
ret
fimuls
adc
inc
jmp
insb
leave
mov
sub
push
fisubs
mov
sbb
jmp
sahf
out
push
and
dec
xchg
popf
out
clc
cltd
daa
or
aaa
add
jp
sbb
jo
dec
inc
xor
jl
mov
jle
push
ss
adc
dec
inc
dec
out
fs
shll
and
sbb
sbb
push
sbb
or
and
pop
mov
cmp
movb
push
push
jne
mov
inc
sbbb
or
imul
push
cli
movsb
jno
cmp
andb
pop
sub
or
and
inc
push
push
dec
inc
filds
lock
fisubrs
pusha
popa
inc
jp
adc
pushf
or
xchg
popa
shlb
inc
jae
pop
fs
inc
pop
add
push
add
adc
out
add
push
hlt
outsb
sarl
je
pop
das
rcrb
mov
inc
enter
sbb
pop
xchg
sahf
mov
inc
nop
xchg
dec
xchg
mov
push
pusha
push
and
pusha
mov
pop
or
inc
or
dec
xchg
xor
xchg
add
xor
ds
cwtl
lret
or
dec
insl
and
xchg
push
add
mov
js
dec
push
dec
fadds
cwtl
xor
and
bound
add
cmp
jo
xchg
les
stos
or
cld
mov
popa
dec
xchg
cmp
cmp
dec
xor
inc
sbb
cmp
cmp
sbb
shr
inc
pop
add
ja
js
or
push
xor
and
cmp
cmp
xor
test
push
sub
jb
cmpsl
xchg
pop
sub
or
xlat
cmpsl
push
sbb
and
mov
lods
adc
stos
lock
lods
ret
push
and
push
mov
dec
sbb
clc
sbb
sub
rorb
loop
shll
nop
add
xchg
adc
popf
nop
inc
or
cmp
test
dec
dec
ljmp
out
aas
or
notb
jle
mov
add
movb
mov
dec
lea
scas
ret
xchg
int3
rolb
or
or
test
add
xor
fmuls
je
and
cwtl
jno
outsl
xchg
sub
jno
insb
incl
cmp
andb
push
inc
or
sub
test
mov
xchg
push
sub
and
mov
ds
push
mov
dec
addb
inc
ret
add
mov
je
cmp
pop
in
dec
dec
add
lcall
push
add
mov
mov
sub
mov
mov
add
iret
lock
inc
mov
or
add
inc
mov
fldl
rclb
push
dec
loope
xorl
pop
jae
sub
add
jge
mov
por
mov
pop
dec
and
mov
in
push
inc
cmp
xchg
add
jns
emms
push
inc
lock
pop
sub
push
adc
inc
fcmovu
pop
lock
adc
sarl
xchg
pop
je
mov
sbb
sbb
or
stos
outsl
pusha
adc
fists
pop
or
xchg
test
sbb
test
leave
push
ja
jmp
pop
in
mov
add
loope
sub
loope
pushf
or
negb
inc
mov
xor
or
and
dec
lret
inc
popa
or
repnz
inc
inc
mov
aaa
cmpsb
aad
dec
adc
mov
xor
mov
or
loopne
adc
cli
xor
fcoml
mov
push
cmp
or
sbb
test
sbb
adc
clc
adc
into
push
adc
push
push
lea
push
add
mov
cmp
and
addl
outsl
or
lds
sbb
fucomi
sahf
mov
pop
mov
dec
mov
jle
mov
mov
inc
es
call
in
sbb
mov
or
call
xor
test
xchg
sub
jge
or
out
adc
xchg
push
hlt
fidivs
std
adc
sub
inc
dec
scas
cmp
xchg
add
sbb
adc
mov
or
aam
popa
in
add
ja
repnz
dec
pusha
add
xchg
mov
push
add
xorb
repnz
aaa
lea
movb
cwtl
je
pop
dec
je
mov
addl
push
outsb
add
je
leave
inc
adc
dec
test
hlt
mov
stos
pop
fstps
xor
pop
cmp
pusha
jne
jg
and
jg
mov
cmpsl
pop
test
pop
jns
ret
mov
ds
sbb
mov
or
jae
inc
sub
xor
pop
dec
push
adc
xchg
test
testb
mov
sbb
pop
sbb
fcoms
decb
adc
test
addr16
pop
push
cmp
mov
pop
and
and
out
or
add
arpl
jb
pop
lds
addl
addb
adc
or
cmpsb
sahf
xchg
mov
pop
or
jg
mov
cmp
push
inc
mov
mov
lods
rcrl
pop
sbb
or
xchg
jae
cmp
add
dec
sub
xchg
pop
popl
gs
pop
cld
and
pushf
enter
add
rorb
add
cmp
inc
inc
or
pop
lods
in
shll
addr16
or
or
aaa
mov
scas
loope
stc
cltd
aam
push
sbb
fs
outsl
in
inc
mov
enter
imul
dec
jp
sbb
testb
and
mov
movsl
mov
daa
fisttps
add
ret
pop
js
pushf
and
xor
or
mov
jl
nop
xor
clc
cs
cwtl
xchg
dec
cmpl
inc
cmp
das
aaa
mov
cltd
lea
daa
orl
lret
xor
lock
sub
adc
and
mov
fldl
int3
sub
sub
or
sbb
add
or
and
jl
in
sbbl
stc
fisubl
es
notl
inc
sub
lcall
adc
and
fs
int3
push
test
adc
jne
sbb
and
or
insb
cld
cmpsb
push
push
stos
adc
test
mov
dec
add
jl
jp
dec
out
es
jmp
add
cli
mov
cwtl
pop
mov
mov
push
xchg
or
xchg
xchg
popa
inc
out
xchg
pop
inc
xchg
fwait
mov
sbb
xor
lods
jecxz
popa
cmp
cmp
stc
push
mov
inc
add
cmp
inc
out
out
mov
int
mov
mov
sbb
push
lock
and
or
and
sarl
movsl
ror
add
in
pop
xchg
pop
inc
lods
shlb
ljmp
iret
push
xchg
sub
dec
in
neg
inc
popf
fmull
xchg
add
inc
mov
or
daa
pop
andb
rorb
outsl
bound
xchg
lods
inc
insl
mov
fsubs
mov
ja
loop
mov
push
loope
sub
rcl
cs
sub
setne
dec
mov
pop
insb
dec
jp
jle
jne
cmp
fs
add
cmp
scas
xchg
testb
imul
lds
mov
in
cmp
enter
pop
xchg
loopne
lcall
push
mov
sbb
dec
add
push
imul
out
daa
lods
leave
inc
mov
xchg
fcoml
mov
fcom
xor
adc
ss
out
cltd
mov
imul
jo
dec
pop
dec
add
hlt
adc
push
cld
pop
shlb
push
and
push
and
jo
xchg
clc
adc
das
cmp
sbb
popa
dec
out
pop
jbe
push
or
xchg
repz
sbb
pop
addb
xchg
fnstsw
and
lods
aaa
add
and
push
push
adc
push
jb
sbb
leave
add
insb
and
sub
test
nop
jae
fwait
dec
lea
mov
xchg
mov
in
enter
push
loope
sbbl
and
out
add
test
inc
inc
mov
and
inc
or
loope
jo
out
fildll
mov
xor
mov
pop
or
mov
sbb
call
das
add
popa
sbb
movsb
ret
arpl
out
inc
nop
iret
adc
adc
jns
dec
add
mov
and
mov
scas
push
mul
jo
int
test
in
shlb
imul
cmpsb
xor
sub
lods
cmpsb
pusha
add
mov
xor
lahf
pop
push
mov
stc
shll
or
add
sbb
pop
sub
push
add
imul
hlt
lods
sarb
inc
inc
mov
and
aas
cmpb
hlt
xchg
jnp
sbb
lock
outsl
sbb
das
xlat
andl
pop
pop
pushf
cwtl
mov
cmpb
jp
jl
cmpl
addl
or
mov
out
mov
add
adcl
push
xchg
add
nop
add
out
repnz
mov
mov
mov
aas
push
dec
cs
enter
sbb
frstor
enter
pop
jmp
cmpl
sahf
mov
pusha
xchg
fdiv
cmp
sub
add
mov
or
mov
mov
push
pop
repnz
inc
cmp
sub
mov
add
ss
xchg
xor
xor
gs
pop
sub
jl
sbb
lock
xor
adc
inc
pusha
sbb
xchg
out
mov
push
outsl
sbb
mov
aad
lock
mov
push
cwtl
pop
mov
in
fwait
or
lods
mov
add
aam
shll
add
je
xchg
inc
dec
dec
insl
stos
xchg
dec
xlat
int3
rcrb
push
push
or
mov
add
test
pusha
mov
int3
adc
jo
mov
mov
fiadds
jbe
or
ficompl
stos
add
cmpb
insb
xchg
enter
xchg
push
pop
testb
fildl
mov
cmpsb
adc
pop
xchg
cmp
cwtl
enter
sub
orl
insb
test
cmp
lods
popf
xor
and
add
add
adc
test
add
lahf
mov
push
out
and
xchg
pop
fiaddl
inc
popf
cmpsb
push
pop
mov
sbb
std
loop
inc
xor
mov
mov
sub
add
sub
lahf
pop
add
and
lea
cli
inc
jg
mov
in
ret
jb
or
push
dec
or
test
dec
xchg
cmp
sbb
jg
insl
lcall
cmpb
xor
pop
pop
aam
pop
jne
sbb
fsubrl
cmpsb
loope,pt
jne
inc
xor
pop
loope
or
fistpl
sub
addr16
and
or
inc
imul
mov
xchg
push
cwtl
repz
push
jbe
fiadds
add
nop
cs
jbe
inc
aam
lret
push
mov
lret
stos
in
jo
lock
test
scas
movsl
sub
lea
adc
insb
pop
or
add
or
rcrb
lea
sub
test
dec
or
pusha
mov
mov
mov
dec
jnp
mov
push
inc
dec
test
jmp
ret
dec
push
stc
pop
hlt
xor
inc
mov
hlt
pop
pop
dec
sub
mov
and
in
lret
sub
shlb
gs
fld
loope
mov
xchg
hlt
nop
add
rorb
pop
push
out
arpl
mov
lock
arpl
cmp
loope
andl
pop
xor
clc
push
rorb
or
adc
adc
adc
lock
mov
or
add
add
mov
data16
xor
repnz
inc
or
or
xor
sbb
add
adc
arpl
and
sbb
adc
leave
movsl
adc
or
inc
outsb
xchg
in
mov
sub
fs
push
mov
or
add
jb
jbe
add
cmovs
sarl
dec
xor
inc
shlb
shlb
pop
leave
cmp
push
adc
xchg
mov
call
arpl
mov
xchg
stc
add
mov
popf
sub
je
and
sarb
add
mov
mov
fiaddl
add
out
pop
sbb
dec
xchg
add
popa
cmp
fidivs
es
shr
add
loope
xor
loopne
adc
ret
jmp
or
daa
movsb
sub
pop
mov
popa
add
dec
jae
inc
adc
popa
dec
mov
adc
or
outsl
lcall
mov
neg
xchg
movsb
testl
in
sbb
cmp
lret
leave
sbbl
leave
arpl
push
fcmovnu
sti
in
sub
inc
pop
decl
pop
add
cs
and
add
notb
push
cmp
jle
sub
push
adc
push
inc
sbb
push
push
aaa
adc
add
andl
push
popa
or
notb
mov
addr16
or
push
adc
lds
mov
or
mov
iret
inc
add
push
pop
lret
cmp
lock
vfnmsub231ps
xor
test
adc
jne
sub
in
in
jne
push
pop
add
xchg
cld
shl
je
js
jle
mov
adc
mov
cmp
xchg
or
pop
sbb
cmp
imul
xor
and
nop
pop
and
and
xor
sub
je
adc
in
aad
leave
pop
inc
mov
test
cli
sarl
mov
aas
inc
jno
pop
inc
ds
rol
icebp
add
sarb
mov
test
jle
movsb
lea
adc
cmp
je
xchg
push
cmp
sbb
xor
bound
mov
mov
iret
jmp
sbb
daa
mov
test
inc
mov
dec
cmc
jo
movsl
and
and
xor
pop
testl
inc
lcall
xchg
movl
push
push
sbb
mul
xchg
mov
cmp
or
add
add
das
adc
bound
inc
jecxz
xchg
push
and
inc
dec
shl
cmp
mov
out
add
push
xchg
aas
addr16
fcompl
pop
sbb
inc
pop
mov
sbb
xor
insl
sbb
add
enter
and
aas
ljmp
adc
adc
shll
jae
and
por
add
cvtps2pd
es
les
jo
inc
setg
int3
jns
test
add
mov
cmpb
in
icebp
imul
xchg
pop
or
arpl
ret
sbb
add
dec
enter
xor
cmp
jl
stos
mov
xchg
test
cmpb
cmpl
es
popf
xor
pusha
ror
xchg
and
arpl
lds
push
jns
daa
xorl
std
or
mov
int
inc
adc
mov
inc
cmp
adc
mov
test
ret
hlt
je
add
mov
mov
jnp
shlb
jo
cld
pushf
movb
popf
xorl
inc
daa
pusha
push
pop
fdivs
xor
repnz
inc
xchg
adc
movsl
sbb
cmpl
hlt
xor
xchg
or
je
enter
adcl
or
push
iret
imul
std
or
and
outsb
sub
dec
je
add
push
mov
ret
inc
mov
sbb
push
add
and
jbe
sbb
jmp
int
fwait
cli
aam
popa
add
cltd
mulb
jmp
aaa
lar
cli
push
mov
lods
pop
data16
or
jae
jnp
push
pusha
inc
jmp
push
sar
cmpsl
lock
adc
push
ret
and
adc
inc
pop
loope
fwait
and
inc
add
dec
cwtl
xor
xor
imul
add
sub
sbb
andb
loopne
orb
and
push
push
inc
scas
sub
cmp
push
push
jo
inc
pop
add
jg
xchg
sub
mov
ja
mov
and
jne
repnz
fld
mov
mov
xor
pop
in
push
or
jb
in
cs
sub
mov
pop
and
sbb
dec
mov
adc
lret
or
shl
xor
bound
popa
add
out
push
dec
adc
mov
mov
inc
xor
mov
ja
add
outsb
mov
data16
push
flds
push
xor
add
cwtl
push
fidivrs
pop
lods
or
adc
cmp
pop
cmp
or
notl
sbb
cmpsl
pop
and
sbbb
xchg
outsl
sbb
push
push
mov
dec
rcr
test
mov
add
jp
sar
dec
mov
push
fisttps
sahf
aam
mov
sub
cmp
cmp
pop
add
push
cmp
fsubrp
pusha
sub
pop
dec
pop
sub
pop
sub
push
sti
addl
in
push
push
xor
adc
xlat
es
adc
add
add
aaa
mov
imul
dec
rclb
add
sbb
cwtl
mov
int
lods
sbb
inc
push
mov
pusha
pop
adc
sbb
or
pop
pop
xchg
rcl
add
push
xor
inc
sub
inc
loopne
adc
incl
add
ja
add
cltd
les
ret
cli
jne
cmpl
subb
and
call
movl
aad
pop
or
jbe
fsubp
add
aas
jb
mov
movsl
sbb
adc
pop
sub
dec
lea
mov
pusha
mov
add
loope
mov
in
and
mov
mov
lcall
push
or
jge
adcl
mov
sbb
sbb
xor
cs
mulb
add
jne
push
inc
lcall
dec
rorb
dec
das
mov
pop
xor
xor
add
inc
xchg
inc
loopne
or
and
push
mov
fdivs
sub
ret
sahf
subb
cld
add
xchg
fiaddl
cmp
inc
dec
pusha
sbb
rcr
scas
or
pop
pusha
jo
in
pop
sub
add
jo
sbb
cmp
ret
and
lret
adcb
sbb
dec
fidivrs
aas
add
push
or
sub
sbb
pop
call
mov
sub
scas
add
jo
insb
xlat
lahf
inc
in
test
or
gs
adcb
test
add
cmc
and
pop
repz
mov
scas
jae
adc
and
push
jae
in
repz
es
add
inc
xchg
mov
mov
xchg
rorb
mov
dec
xchg
add
sbb
or
jno
pop
js
shll
es
sbbl
sub
mov
xor
pop
pop
subl
inc
dec
push
ret
and
and
es
lods
test
or
adc
jge
test
jne
lea
test
pop
mov
hlt
inc
in
push
loopne
or
movhps
shll
lock
dec
shll
add
and
push
jnp
push
cmp
sti
xor
jp
cmp
aaa
orb
mov
jge
sub
mov
pop
incl
decl
clc
inc
fs
out
push
cwtl
pushf
fwait
xchg
xchg
mov
test
call
adc
and
or
loopne
loop
and
popa
and
shl
inc
or
inc
dec
mov
add
inc
cmpl
jne
inc
sahf
inc
bound
cmpl
adc
call
daa
push
inc
mov
inc
cmp
ret
faddl
fbstp
ret
insl
movsb
mov
jne
test
cmp
mov
ja
iret
or
in
sarb
cwtl
mov
or
inc
out
les
pusha
sbb
lock
ret
js
nop
out
jns
mov
dec
cmp
sahf
cs
ret
rorb
je
lret
pop
pop
sub
movsb
dec
xor
incl
dec
insl
jne
cmp
cltd
repz
sbb
fs
adc
dec
mov
movsb
arpl
pop
sbb
mov
es
jbe
jno
dec
dec
into
mov
and
add
inc
jmp
aam
push
or
pop
sbb
shrb
stos
clc
mov
pushf
rclb
adc
aam
sahf
mov
ss
add
pop
pop
popw
cmp
dec
not
mov
add
mov
xor
mov
sti
push
daa
jmp
and
sbb
movsb
mov
sbb
mov
lods
inc
loopne
mov
jmp
dec
nop
fiadds
loopne
or
lea
sbb
jne
sub
push
xchg
xchg
in
sub
jmp
jnp
jnp
or
push
fsubrl
xchg
sahf
mov
sbb
incl
cmp
mov
mov
and
pop
mov
es
jp
push
lods
mov
cltd
push
jp
sbb
outsl
nop
and
or
mov
cwtl
adc
cmp
mov
push
inc
out
sub
orl
xchg
xor
jge
mov
call
and
push
cmc
sbb
xchg
xor
dec
xchg
jbe
mov
sbb
testl
push
out
mov
pop
and
roll
mov
sahf
ss
push
adc
movsl
popa
mov
mov
shlb
pop
pop
aas
sti
decb
dec
iret
je
cmp
je
jg
sbb
mov
loopne
push
sub
mov
push
andl
sbb
cmp
and
mov
mov
test
test
test
pop
inc
adc
cs
mov
ds
cmp
sub
orl
sbb
push
xchg
push
mov
loopne
les
enter
dec
jb
mov
mov
mov
movsb
mov
dec
mov
adc
xor
sti
mov
dec
dec
mov
cmp
inc
cmp
lahf
js
nop
xor
sub
loop
and
and
fisubrl
je
xlat
or
sbb
pusha
cmpsb
xor
xor
fildl
insb
cltd
hlt
fistl
pop
pop
add
dec
mov
mov
ja
dec
data16
sbb
int
dec
loope
pop
xchg
xchg
inc
push
pop
daa
lods
aam
mov
mov
xchg
mov
dec
jne
arpl
cmp
sub
and
aas
push
or
sub
mov
mov
push
inc
adc
out
xchg
mov
jmp
push
adc
sti
cmp
xchg
mov
nop
loopne
hlt
mov
push
popl
dec
push
addr16
add
shrl
or
stos
das
mov
mov
daa
push
adc
popl
jp
adcl
jno
pop
shlb
sarb
lret
testb
lods
sbb
clc
ficompl
fwait
add
test
xchg
xchg
sbb
mov
sub
sbb
dec
lock
add
mov
movl
fdivs
sbbl
js
push
sbb
add
pop
or
jo
popf
sub
imul
add
pusha
xchg
addr16
adc
mov
xchg
adc
jne
fwait
add
cmp
data16
dec
add
mov
cwtl
sbb
push
or
stos
lret
outsb
or
xchg
and
addb
pop
adc
loopne
inc
sbb
add
sahf
pop
add
inc
xor
add
fmul
and
fbld
imul
mov
cmc
pop
addr16
xor
js
addr16
pop
xchg
dec
add
roll
insl
or
sbb
push
xor
or
add
xor
in
scas
dec
add
pop
out
add
cld
adc
ja
mov
lock
cmp
push
and
das
sub
inc
add
inc
movsb
inc
push
inc
scas
sub
push
xchg
cmp
add
loope
inc
daa
inc
dec
sub
rcrb
rolb
int3
aad
xchg
sbb
rclb
adc
pop
ss
arpl
push
push
mov
jbe
xor
rolb
loope
jmp
iret
dec
xor
loopne
jno
clc
inc
jo
pop
adc
jbe
mov
sbb
add
mov
or
nop
cmp
mov
pop
xchg
jae
push
inc
adc
repnz
enter
push
dec
mov
sub
shlb
push
fsubrl
dec
add
push
sbb
nop
into
push
xchg
mov
paddusb
or
sbb
jno
jno
shlb
or
popw
adc
mulb
or
or
outsb
mov
dec
jmp
pop
into
movb
fldenv
xor
add
dec
out
cmp
out
xor
dec
pop
ret
mov
addr16
lods
test
stos
out
stc
cmp
ljmp
fadds
inc
pop
adc
cmc
mov
mov
or
mov
ret
int
mov
es
add
sbb
sbb
hlt
sub
add
scas
inc
or
loopne
out
and
add
shlb
leave
xlat
outsb
out
xor
leave
sub
mov
push
add
cmpl
int
adc
add
push
add
sbb
das
mov
cmp
hlt
movb
jne
outsb
adc
inc
dec
xlat
add
and
or
cmc
sbb
xchg
fs
cwtl
mov
xchg
ficoml
pop
dec
cltd
xchg
loopne
stc
fiaddl
xor
rorb
cmp
xor
int
idivl
mov
insl
lcall
xor
push
cmp
mov
jmp
fadd
notl
xchg
lea
mov
sub
and
xchg
testb
cmpsb
jne
inc
sbb
in
cmp
adc
or
sub
clc
push
push
sub
loopne
adc
sub
js
inc
jb
or
push
fsts
sub
dec
mov
mov
sub
pop
dec
hlt
adc
in
dec
imul
mov
sub
mulb
xorl
inc
and
daa
lods
data16
and
sbb
insb
rclb
mov
psubd
add
sub
popa
or
add
int
push
loop
mov
scas
fcoml
push
loop
incb
add
jo
or
push
or
adc
in
sub
add
and
in
iret
push
inc
push
inc
dec
cmp
mov
pop
loopne
lock
gs
and
repnz
clc
push
and
sub
lahf
xor
mov
pop
dec
inc
mov
sub
and
push
jmp
jl
popa
pop
mov
xchg
cmc
dec
lret
jb
jmp
lret
gs
add
rcrb
ss
sub
int
jge
ret
xor
mov
mov
sub
mov
or
and
xchg
aaa
pop
sub
jle
push
iret
adc
call
or
bound
mov
clc
mov
sbb
sub
repnz
inc
std
add
rcrl
mov
ds
push
les
cltd
andb
dec
mov
in
rcll
sbb
pop
sub
movl
mov
pop
jne
pop
xchg
mov
sub
mov
xchg
rclb
int3
xor
test
imul
jne
arpl
gs
or
xor
cmp
or
imul
xchg
dec
jns
cvtps2pi
les
push
push
add
dec
or
or
pop
sti
jo
jmp
jne
jne
jmp
clc
xchg
subb
pop
dec
sbb
pop
inc
sbb
inc
add
pop
add
pop
mov
add
inc
popf
cmp
inc
and
mov
xor
enter
ss
sbb
adc
test
push
loop
lods
push
fwait
sub
sahf
fs
dec
pop
or
dec
icebp
add
mov
shlb
jg
pusha
pop
push
in
pop
mov
movsl
in
aaa
enter
jb
scas
or
insb
in
or
in
sub
lds
jge
test
loope
pop
push
add
add
les
push
shll
das
mov
and
mov
inc
cmp
and
fcomps
push
cmp
adc
and
dec
mov
mov
and
sbb
pushf
adc
add
xor
inc
daa
mov
icebp
addr16
inc
inc
lods
pop
adc
xchg
sbb
sbb
mov
xchg
ja
cmpb
dec
mov
pop
bound
pop
popa
inc
pop
push
add
repnz
push
cld
push
repnz
ret
sahf
inc
add
fildl
in
fisubrs
in
push
and
cmp
jg
dec
mov
popf
xchg
pop
test
adc
bnd
xchg
push
or
scas
aam
mov
inc
mov
or
sub
daa
adc
sbb
jne
jp
xor
xchg
cmp
mov
test
filds
pushf
xor
adc
rclb
xchg
pop
inc
sub
mov
ret
add
add
mov
or
inc
rdpmc
fildl
or
sbb
pop
push
por
js
jmp
cwtl
adc
pop
call
popa
sub
xchg
inc
aaa
in
adcl
cmp
out
xor
inc
and
add
add
cwtl
mov
xchg
add
mov
sub
and
nop
ja
loopne
push
nop
aaa
cmpsl
and
cwtl
sub
shrb
cmp
pop
aas
je
or
jle
add
loopne
cld
inc
inc
add
xchg
loopne
pop
stos
imul
je
mov
sbb
sarl
shll
fs
mov
aad
cwtl
test
insb
xchg
into
lcall
data16
or
arpl
cmpsb
sub
jbe
and
in
inc
mov
sub
ret
add
and
les
ds
aam
cmpb
lret
dec
out
fcmovu
sub
aad
daa
and
mov
sub
mov
push
rol
mov
arpl
mov
dec
pop
cmpsl
push
and
std
xor
add
shlb
sbb
in
pop
jl
sbbl
mov
push
pop
popa
aam
add
cmp
loope
or
cmp
out
in
jo
dec
pop
lock
jo
inc
negl
adc
push
cli
outsb
call
and
sub
mov
xchg
push
push
xor
mov
adc
and
inc
mov
sub
push
add
js
jno
dec
sub
add
rcrb
pop
adc
adc
insb
loope
lea
and
daa
mov
sbbl
nop
xlat
jnp
mov
cmp
push
fistl
mov
xor
push
inc
sarb
lods
js
shrl
nop
das
jne
mov
rclb
sbb
ret
loopne
dec
cmpsl
mov
pop
sub
cwtl
or
dec
addl
xchg
push
xchg
dec
pop
mov
inc
adc
js
push
jbe
ss
loop
incb
cs
mov
sbb
shll
push
rcll
or
scas
popa
out
insl
dec
cmpsb
or
cltd
and
dec
xchg
xchg
and
nop
add
push
pop
lock
cmp
xor
popf
cmp
test
or
push
outsl
sbb
push
ds
ret
pusha
pop
lret
xchg
xchg
xor
loope
xor
nop
or
es
push
out
lods
adcl
or
sbb
or
adc
push
push
sbb
lods
mov
add
and
fisttpl
mov
call
xor
inc
xor
add
test
and
or
scas
testl
cmpl
dec
add
cmp
popf
into
mov
push
imull
jmp
in
push
or
test
rcrl
pcmpeqb
adc
xchg
or
call
js
mov
call
or
sub
out
movsl
mov
add
sub
cmpsb
mov
pop
nop
loopne
xchg
cmpb
ret
es
stc
sti
nop
loope
nop
in
dec
mov
inc
dec
call
cwtl
fidivrs
je
lcall
push
in
dec
or
xchg
cld
and
xchg
loopne
jle
sbb
mov
sub
cmpsl
movsb
shll
mov
jge
add
ja
add
lea
in
stos
popa
push
xchg
ret
outsb
imul
and
or
jns
push
inc
test
and
cmpsb
daa
push
cltd
cmp
shrl
push
sbb
pop
ret
inc
dec
daa
or
mov
cmp
cmp
mov
fiadds
loopne
and
nop
insb
or
mov
iret
popa
add
adc
stos
hlt
mull
and
scas
adc
add
out
jo
je
or
aad
leave
push
adc
cmp
mov
mov
push
mov
add
inc
les
xchg
sub
lcall
add
ret
aam
aaa
scas
push
cmp
add
outsb
add
fnstcw
inc
adc
adc
mov
cmp
sub
mov
add
lcall
aaa
test
popa
pop
adc
lahf
jnp
cmp
mov
or
mov
inc
inc
inc
and
and
mov
adc
ss
ficomps
push
sub
ja
imul
in
sub
cld
leave
and
sbb
inc
add
sbb
xchg
or
cld
cld
repnz
cwtl
out
lods
inc
cmc
adc
or
xchg
imull
sbb
es
mov
xchg
aam
pusha
pop
outsb
add
dec
lock
jmp
inc
mov
sahf
xor
das
lds
inc
cmp
mov
cmp
sub
and
test
xor
dec
jmp
test
and
jmp
jle
pop
and
sbb
sbb
movsb
inc
out
loopne
cmp
add
cmp
cwtl
pop
dec
aam
sub
cmp
sbb
push
push
pop
pushf
xchg
xor
jl
mov
sarb
push
lods
es
add
inc
movsl
xor
and
mov
or
xor
popa
xchg
add
mov
mov
inc
aaa
test
js
fs
idivb
mov
mov
xor
sbb
cmp
mov
cld
xchg
push
inc
pop
mov
and
pop
mov
hlt
xchg
fildl
pop
jno
add
mov
lds
xchg
mov
aas
push
cltd
jbe
inc
fcmovnb
pop
dec
in
dec
cs
dec
dec
push
test
nop
arpl
cwtl
in
pop
pop
sbb
dec
jnp
or
push
push
cmpsl
es
dec
inc
jns,pn
ss
push
ret
or
inc
push
arpl
and
xchg
inc
fs
xchg
cmp
dec
push
pop
iret
inc
cmpsl
movsl
inc
popf
lods
aad
inc
pusha
jmp
movsb
insl
movsl
mov
sbb
orl
push
out
es
js
or
sbb
js
es
nop
xchg
push
call
add
daa
inc
jmp
pusha
mov
mov
sti
out
jl
or
jle
fcomps
sbb
inc
fwait
sbb
repnz
ret
cli
or
mov
jno
mov
jne
out
and
arpl
pop
cmp
stos
xor
xchg
clc
or
jmp
subb
shlb
and
fisubs
jno
fsubs
sub
in
popf
pop
push
rcrl
jg
sbb
push
mov
add
insl
xchg
mov
out
das
fsub
add
adc
daa
mov
js
mov
sub
push
and
xor
imul
scas
mov
inc
scas
push
xchg
mov
lock
out
sbb
cmc
adc
jbe
sbb
mov
jns
cmp
fisubl
into
pop
or
mov
pop
push
enter
push
inc
push
imul
into
add
or
testb
push
push
sub
into
jo
fsubs
and
jae
dec
cmp
cs
sbb
fsubr
std
sbb
cs
imul
push
cmp
jne
ret
dec
out
jno
sbb
mov
mov
mov
rolb
addb
sahf
sbb
mov
inc
sbb
imul
nop
iret
loope
cs
std
ret
cld
mov
pop
popa
and
pusha
pop
inc
adc
lods
gs
adc
shlb
and
jae
jle
outsb
insb
inc
sbb
jl
and
test
mov
aam
imul
cmp
int3
jne
cmpl
std
mov
adc
push
pop
lahf
pop
cs
leave
cmp
mov
mov
or
cmp
add
adc
shrl
or
jae
cmpsb
popf
adc
xor
mov
pop
and
lret
jne
mov
fildl
sahf
adc
dec
ljmp
das
cmp
jne
in
push
push
and
aad
lds
jp
and
jmp
movswl
loopne
ret
incl
pop
add
fmull
iret
insb
lret
stos
cmc
das
push
mov
mov
pop
mov
dec
or
push
dec
sbb
sti
cmp
pop
pop
clc
add
aad
sbb
pop
dec
ja
sbb
adc
pop
dec
inc
in
movl
es
imul
xor
fcmovnu
mov
mov
and
mov
mov
cld
out
dec
inc
pop
or
fimuls
xor
adc
cld
icebp
push
pusha
adc
test
jns
dec
mov
mov
mov
loop
insl
std
push
testb
xor
cmp
and
inc
dec
adc
cmpsl
xchg
dec
testb
and
jmp
adc
es
das
pushf
loopne
cmp
shr
adc
arpl
jle
ret
push
mov
pop
xchg
hlt
mov
addl
and
cltd
inc
mov
out
dec
jae
das
jg
cmp
cld
cltd
jl
daa
ret
dec
rolb
push
subl
jecxz
sub
jne
lret
clc
hlt
push
cmpsb
inc
test
mov
mov
cmp
cs
push
adc
pusha
in
lret
cmp
js
jns
daa
je
jmp
sbb
xor
lods
push
pushf
sbbl
and
ljmp
mov
pop
mov
or
jne
sub
add
cld
push
xchg
xchg
mov
jle
xchg
mov
jo
ja
cmp
mov
fimull
push
hlt
push
add
pop
xor
fidivrs
sarl
and
inc
and
inc
or
xor
lock
mov
pop
xor
daa
pop
add
sbb
mov
aas
xchg
or
cmp
lds
add
inc
mov
inc
push
cmp
sub
mov
cmp
dec
and
ss
add
add
mov
pop
add
inc
ja
cmp
adc
push
ds
bsr
dec
rcll
dec
mov
ret
pop
hlt
je
lods
push
negb
sbb
add
loopne
or
xlat
cmp
test
inc
test
adc
subl
movsl
pusha
adc
xor
xlat
sub
pop
jae
push
cli
insl
fisttps
mov
add
mov
ret
xchg
cltd
sbb
pop
pop
lea
gs
xor
push
xchg
out
mov
adc
and
fists
add
leave
iret
roll
mov
pop
and
add
mov
jne
inc
es
and
add
dec
inc
xlat
xlat
inc
call
mov
jmp
sbb
or
xor
es
inc
in
mov
xchg
lock
xchg
mov
out
xchg
adc
in
sbb
test
mov
fldt
sub
loop
dec
adc
repz
adc
popf
pop
test
inc
or
dec
inc
push
push
mov
add
cltd
lods
mov
mov
sub
and
cmp
mov
sbb
add
imul
pop
xlat
movsb
out
adc
mov
adc
sub
sarb
xor
push
pop
loop
nop
sbb
cmp
xor
je
testl
fcmovnbe
push
mov
cmc
enter
je
mov
inc
pop
nop
test
lock
enter
pop
xor
pop
test
ss
lcall
test
xchg
ds
mov
movsl
bound
and
lock
push
jbe
sbb
mov
adcl
cmp
stc
push
pop
xorb
enter
xchg
mov
mov
lock
clc
mov
cmp
pop
arpl
filds
loopne
dec
inc
pop
add
push
rcrb
sbb
fsubr
or
or
leave
or
ror
push
sbb
in
jno
adc
es
cmpsl
hlt
xor
adc
jp
mov
dec
dec
and
fsubr
xor
into
push
mov
push
push
cmc
and
pop
or
mov
dec
xor
mov
pop
shll
mov
pop
jne
pop
jmp
inc
xlat
hlt
xor
cmp
push
mov
and
andl
xchg
insl
dec
xor
js
mov
mov
shlb
xorb
dec
or
inc
imul
mov
lcall
add
add
sbb
pop
sbb
fiadds
pushl
arpl
daa
or
pop
lock
inc
daa
pop
notb
call
cmp
inc
popl
mov
sti
cwtl
jecxz
add
rclb
inc
loope
sbb
pop
sti
mov
addr16
pop
enter
sub
pop
daa
shlb
test
sbb
dec
inc
dec
dec
dec
inc
and
mov
ljmp
orb
rcrb
add
sub
pop
or
sbbb
jb
inc
hlt
loope
out
and
hlt
mov
imul
add
xchg
pusha
cmp
jmp
daa
je
loope
repnz
test
cmp
sub
add
repnz
xchg
jl
cmp
je
or
sub
and
sbb
dec
mov
jp
xor
nop
addl
shrl
or
scas
xchg
or
cld
sbb
daa
nop
mov
mov
stc
sbb
int3
dec
enter
rolb
mov
daa
and
cld
loopne,pt
int
jp
sbb
or
adc
dec
stc
adc
aam
pusha
inc
aam
roll
ret
pop
add
and
aam
xchg
push
loopne
inc
xlat
lods
mov
lret
dec
fs
mov
sbb
lcall
or
sub
mov
dec
inc
jo
repnz
mov
aaa
ja
xorb
mov
sub
adc
nop
adc
cmp
repz
inc
aam
mov
rolb
dec
stos
ljmp
dec
xor
mov
push
push
fs
sbb
sbb
push
push
mov
fisubl
js
pusha
adc
pop
and
pop
aam
fsubs
popa
adc
add
jmp
pop
je
das
js
mov
fs
jp
or
and
adc
nop
sbb
ja
add
cmpsb
adcb
mov
xchg
xchg
mov
sbb
orl
test
rcr
pop
mov
jo
pop
mov
addr16
je
cs
sub
addb
push
int3
andl
enter
sub
add
jp
rclb
jbe
mov
mov
aad
add
out
or
and
dec
mov
pusha
dec
mov
loop
and
lcall
or
xchg
ljmp
mov
ret
cld
pavgb
je
and
cltd
or
mov
jne
test
add
mov
rcrl
test
or
and
xor
add
jl
sbb
xchg
jne
lret
or
dec
pmullw
pop
lock
add
or
test
in
jne
lods
mov
enter
mov
inc
mov
and
xor
jns
push
push
xor
adc
adc
pop
mov
adcb
and
pop
xor
adc
lea
or
dec
pop
and
int
jbe
adc
push
adc
cmp
cmpb
pop
fadds
iret
mov
pop
sbb
push
data16
mov
xor
mov
or
imul
xor
adc
xor
cmp
shrb
fistps
fwait
out
cmpsb
xchg
and
add
clc
push
jg
adc
inc
or
push
or
lock
movsb
lods
int3
in
into
push
cmc
mov
cmpsb
jbe
lret
aas
outsb
push
lret
dec
mov
jg
bnd
sbb
inc
xor
pop
add
mov
shrl
cmp
adc
cmp
imul
sub
jge
add
bound
jb
lret
insb
js
add
add
frstor
fwait
adc
pop
push
add
frstpm(287
jnp
dec
icebp
add
push
lahf
fbstp
xor
shl
andb
pop
stos
and
or
cmp
icebp
mov
rcrb
test
mov
xor
popf
sub
xchg
lcall
bound
jmp
add
test
pop
cld
js
fsubrs
ficoms
addr16
xchg
rclb
inc
mov
mov
xchg
fistl
repnz
pusha
xchg
add
inc
int3
adc
in
add
andb
test
inc
bound
mov
jbe
push
add
sub
push
ljmp
call
mov
lock
inc
xor
jecxz
rorb
add
sbb
pop
fdivs
arpl
fimuls
xchg
and
ficomps
lods
jle
js
mov
inc
adcb
pop
shl
aad
xlat
inc
mov
add
out
sti
xor
mov
das
call
mov
or
pop
jae
adc
outsl
push
jg
mov
sbb
or
inc
scas
shlb
jp
sub
cmp
nop
js
mov
xchg
sbb
pop
cwtl
movsb
mov
ljmp
sub
loopne
xchg
or
mov
and
and
pop
addl
push
cmp
fildl
or
pop
inc
or
add
and
dec
or
bound
loop
pushf
ret
pop
add
shll
cmpsl
pusha
dec
mov
xchg
into
lock
push
push
add
lret
sbb
sbb
push
inc
shrb
jno
mov
lds
xchg
cmp
jmp
je
xchg
fucomp
fildll
mov
mov
dec
js
mov
imul
out
and
sub
sbb
jmp
test
data16
jnp
test
jecxz
mov
or
jbe
insb
je
pop
xchg
cmp
test
nop
pusha
movsl
sbb
rol
or
stos
clc
popa
arpl
fisubl
add
pop
jo
cmc
sub
cmp
xchg
dec
fdivr
inc
je
sub
inc
push
inc
arpl
arpl
inc
push
inc
push
dec
xchg
mov
inc
pop
push
incl
adc
xlat
add
mov
sub
add
clc
pop
test
andb
mov
pop
icebp
mov
cltd
add
and
ret
iret
adc
xchg
psubq
insl
lock
int
jo
or
xor
inc
sub
xchg
xchg
sub
adc
leave
push
std
adc
hlt
push
ja
leave
pop
dec
pop
popf
mov
mov
mov
lods
sub
fwait
jl
or
adc
shrb
test
nop
cmp
shlb
push
xor
mov
call
xchg
or
fildll
and
cmp
movsl
push
or
in
mov
add
fucomi
push
jne
cmp
stos
push
or
mov
lds
push
fwait
sbb
sub
ja
xor
addb
add
cmp
loopne
pop
fwait
std
and
jnp
push
mov
sbb
test
fimuls
push
jmp
push
xchg
test
daa
mov
jecxz
add
mov
mov
add
lahf
lock
imul
insl
adc
add
and
and
cmpsl
push
xor
cli
fisubrs
test
push
sahf
lea
mov
mov
xor
enter
ljmp
cmpsl
int3
mov
xor
pushf
jnp
je
and
push
out
adc
add
dec
sub
lcall
mov
mov
jne
mov
je
or
sbb
push
inc
push
ljmp
js
inc
daa
cmp
ret
sbb
xor
xor
xor
or
inc
pushf
inc
cmp
fwait
pop
outsb
pop
imul
jmp
mov
repz
xchg
add
sbb
jl
dec
jne
jmp
int
jbe
mov
push
and
add
je
clc
add
mov
lods
fs
rolb
je
xchg
loopne
cmpsl
sbb
add
xor
sbb
jae
mov
adcb
jne
cmp
mov
sub
iret
movsl
mov
jb
in
movsl
xchg
sbb
pop
aad
icebp
xor
or
cmp
cwtl
add
adc
and
sbb
call
sbb
push
scas
cmpl
ret
out
loopne
and
sti
rcrl
ds
das
je
mov
movsl
clc
and
mov
daa
mov
add
nop
and
add
inc
rorb
fcoms
jl
sbb
add
mov
jno
push
call
push
add
leave
shll
adc
sbb
mov
lret
dec
jb
sub
movsl
add
outsl
push
push
adc
and
and
daa
and
inc
aam
add
cmp
sub
jmp
push
push
mov
sub
mov
push
sub
xor
mov
and
pop
mov
cmp
je
fs
jge
mov
jecxz
in
dec
lock
add
cmp
xchg
xor
mov
fidivrl
and
popf
sbb
lock
and
rep
push
test
repnz
lret
push
shrl
inc
test
push
adc
fucomi
adc
sti
add
add
and
or
fs
int3
js
push
inc
in
or
flds
dec
cmp
shl
call
jmp
dec
jno
and
movsb
sbb
inc
or
mov
in
inc
test
xchg
add
movsb
add
mov
in
flds
add
inc
or
jno
insb
popa
movsb
and
xchg
cmpb
pusha
adc
and
add
and
push
rcrl
or
test
pop
mov
pop
lods
or
out
sbb
inc
rolb
mov
nop
mov
add
mov
pop
sarb
pop
xchg
aam
add
sub
stos
popf
push
and
mov
lods
xchg
imul
add
add
xchg
xlat
adc
cmp
sub
add
sub
aaa
pop
xor
dec
rclb
push
or
fsubl
inc
mov
xchg
and
xor
push
test
inc
cmp
cmp
test
out
ret
daa
div
shlb
jge
inc
imul
inc
dec
push
add
sahf
daa
fs
hlt
push
or
pop
mov
sbb
pop
jg
dec
push
jns
and
notl
shr
and
push
lods
pop
popa
loop
nop
das
cmpb
inc
pop
insb
popa
pop
fistpl
fldenv
fimull
fistpl
add
je
iret
nop
sub
jns
test
faddl
add
inc
aas
cmp
xor
aas
fstp
cltd
add
shlb
in
cmp
sub
add
pop
rcrb
loop
or
mov
and
pop
jne
movsb
add
leave
dec
mov
movsl
imul
ret
pop
inc
cmp
shlb
sbb
or
pusha
mov
adc
sub
lock
clc
mov
dec
cltd
sbb
inc
pop
xor
push
cmp
jne
lahf
dec
or
inc
dec
dec
xchg
adc
pop
lock
add
and
cmp
add
scas
and
mov
iret
mov
int3
add
jp
add
add
hlt
adcb
test
cld
xchg
add
sti
dec
add
cmp
lcall
mov
mov
test
xchg
sub
xor
push
arpl
inc
outsb
or
insl
add
sbb
rclb
sub
push
xchg
mov
dec
sub
or
sbb
clc
std
in
pop
sub
and
mov
pushf
adc
out
push
mov
in
jbe
inc
push
cmpsb
dec
mov
mov
mov
addl
mov
jnp
int3
cmpsl
dec
mov
xor
push
jp
cltd
or
fistps
mov
test
cmp
xor
add
je
cmp
cmp
xchg
lods
fcoms
mov
ja
cmpsb
mov
pop
and
mov
nop
pop
mov
push
fisttpll
sbb
push
xlat
test
daa
push
inc
or
add
or
icebp
ljmp
or
sbb
rcll
jp
or
or
and
les
adc
push
popa
xor
jge
mov
daa
dec
lahf
mov
mov
pop
pop
pop
cmpsb
push
sbb
adc
fdivrl
add
sub
xchg
filds
adc
test
mov
mov
gs
xchg
inc
adc
popa
inc
loope
xor
stc
or
sti
outsl
es
or
pop
pusha
jne
xchg
shl
lcall
mov
adc
sub
inc
pop
repnz
mov
out
push
sbb
xor
pop
test
mov
repnz
xchg
pop
adc
inc
inc
pop
daa
cmpl
jp
mov
mov
push
add
lock
sbb
push
mov
pop
repnz
out
cmp
mov
sarl
or
and
inc
faddl
data16
push
pop
xor
mov
sub
inc
xor
sub
arpl
mov
xlat
inc
movhps
sbb
mov
mov
sarl
insb
push
scas
add
pop
add
ret
jmp
xor
shlb
jle
jo
push
in
or
es
xorl
dec
arpl
movsb
mov
xorl
and
pop
clc
inc
jne
add
arpl
ja
test
xchg
or
sbb
shl
push
incb
jle
ret
loop
mov
sar
mov
xchg
add
jge,pn
mov
sub
or
sar
nopl
and
shrb
adc
insb
stos
insl
mov
jl
loopne
add
pop
pmulhuw
mov
es
and
pop
inc
inc
call
xlat
in
pop
faddp
dec
mov
pop
popa
or
mov
sub
push
push
sbb
je
inc
sbb
dec
xorl
ljmp
bound
outsb
mov
in
mov
in
add
pop
jmp
repz
or
fmuls
push
fiadds
cmc
or
cltd
lret
shll
shrb
into
rcrl
lret
and
push
sahf
xchg
mov
pop
mov
movsb
mov
xor
gs
inc
sbb
push
sbb
push
xlat
jo
or
or
pop
js
cld
mov
icebp
aas
push
and
and
pushf
xchg
orb
push
out
inc
outsl
inc
fcoml
ss
loopne
pop
sbb
into
add
and
add
test
imulb
inc
or
or
push
shll
mov
pop
addl
mov
andb
cmp
mov
or
mov
fs
and
cmp
aas
jmp
jo,pn
mov
and
inc
daa
add
testb
sbb
and
in
ljmp
cmp
int
imul
repnz
lea
jbe
xor
push
out
ja
sahf
rorb
xchg
sti
rcrb
push
aam
out
test
and
push
lea
mov
xchg
js
fwait
aas
jecxz
jge
outsb
or
rcr
sbb
imul
jecxz
xor
xor
xchg
xor
push
sub
sbb
inc
pop
xchg
stos
scas
mov
mov
jge
mov
adc
pusha
pop
pop
je
loopne
call
sbb
repnz
nop
push
sub
fcomps
pop
dec
bound
inc
test
fildl
ret
dec
ss
scas
sub
fadd
pop
sbb
push
add
scas
mov
adc
jl
add
dec
shrb
insb
jo
in
stos
jl
push
imul
sbb
roll
inc
in
add
sub
fcoms
ljmp
mov
cltd
add
call
shrl
ljmp
lcall
add
aam
mov
xchg
sub
xchg
adc
xchg
or
iret
xchg
push
test
rorb
inc
cmp
dec
shr
pop
mov
outsb
inc
cmp
je
test
aaa
test
arpl
lds
imul
mov
sbb
adc
pop
andb
inc
dec
aaa
or
insl
xchg
inc
aad
xchg
xor
gs
add
popa
test
add
nop
lret
push
inc
ljmp
in
and
jae
push
push
add
pop
adc
mov
loopne
adc
inc
je
xor
or
bound
cmp
xchg
mov
jae
sbb
push
adc
push
jl
add
mov
sbb
mov
mov
lret
in
sbb
push
sbb
ljmp
adc
add
enter
es
mov
nop
pop
mov
push
jmp
mov
out
mov
add
cmp
fstpt
cltd
cld
cs
cltd
mov
popa
jb
inc
add
dec
outsl
decb
dec
psubq
std
nop
cmpsl
es
cltd
jmp
gs
mov
inc
aam
pop
mov
aas
or
and
dec
mov
adc
push
in
scas
aas
lret
scas
adc
out
xor
mov
ds
repz
push
mov
sbb
les
dec
test
ja
jmp
pusha
fmull
or
inc
movsb
push
xor
dec
je
adc
jb
ds
xchg
pop
pop
dec
adc
nop
sbb
pusha
lock
stos
and
addr16
sub
dec
jp
cmp
rorl
inc
rcrb
aam
add
adc
cmpb
pop
clc
inc
cmp
mov
jne
jo
out
clc
adc
push
and
push
mov
mov
push
leave
pop
inc
sbb
mov
nop
in
sub
in
pop
rclb
and
out
repz
xor
or
fs
push
out
hlt
mov
inc
xchg
inc
add
pop
movsb
xchg
imul
cmp
fstl
or
aam
fs
outsb
inc
pop
fwait
cmp
or
adc
shll
movsb
mov
mov
cmp
iret
movsl
lret
cmc
jb
inc
mov
pop
dec
fmulp
rsqrtps
insl
push
push
push
jae
sub
fstpl
rcrb
add
sub
push
cld
pusha
push
cs
push
orb
dec
sbbl
push
xchg
outsl
gs
add
in
movl
mov
push
and
inc
addl
stos
fdiv
or
dec
add
inc
sub
inc
adc
jb
add
sbb
loope
enter
out
call
lock
push
loope
out
pop
dec
stos
push
adc
push
into
xor
mov
push
enter
ror
mov
dec
xor
push
push
pop
mov
cli
or
hlt
add
lods
add
icebp
xchg
int3
xor
sub
loopne
adc
and
hlt
fcomip
jne
cmp
xchg
inc
test
fstpl
or
xchg
flds
je
add
repz
je
dec
push
push
mov
aaa
push
pop
lcall
and
subl
stos
or
test
push
mov
repnz
ficoml
test
dec
cld
inc
repnz
pop
dec
cld
sbb
add
pop
ja
add
in
sbb
arpl
or
cld
stos
pop
enter
push
push
push
mov
clc
xchg
inc
push
adc
repz
addr16
lret
inc
sbb
int3
xor
dec
mov
aam
inc
outsl
and
adc
pop
inc
js
into
inc
sub
jmp
inc
add
inc
xor
add
rcrb
sub
mov
das
jae
pop
xchg
add
mov
out
popa
mov
jae
and
fcompl
cmpsl
inc
mov
dec
hlt
inc
in
insl
mov
sti
cmp
inc
inc
fisubrl
cs
push
pop
and
mov
lock
sbb
push
int
add
fwait
cmp
cmpsl
mov
or
push
aas
pop
fidivs
mov
loope
out
dec
hlt
inc
mov
and
inc
mov
add
and
nop
cmpsb
add
xorb
mov
sbb
jmp
push
add
dec
inc
inc
or
push
in
lcall
and
in
lods
mov
call
movsl
xor
or
mov
adcb
mov
or
nop
movsb
mov
or
insl
sbb
jns
dec
jne
push
lea
sbb
add
mull
lahf
sbb
push
cwtl
add
adc
or
add
xchg
inc
enter
out
push
adcb
pop
ljmp
int3
inc
cli
or
and
cmovo
iret
rorb
jae
or
sub
xchg
mov
mov
mov
std
add
xor
lret
loopne
fistpl
xchg
inc
push
adc
mov
or
inc
jmp
mov
push
popa
inc
xor
jmp
jl
or
jg
push
fidivrl
mov
icebp
sub
lock
add
loop
movsb
lahf
out
jns
mov
mov
clc
xchg
mov
add
mov
lea
jno
stc
or
mov
movl
add
dec
adc
fdivrs
mov
int
testl
inc
add
rclb
dec
sbb
mov
adc
aam
and
or
xor
add
js
push
sub
mov
or
mov
sahf
lea
push
outsl
jo
adc
xchg
pop
das
inc
sbb
out
imul
pop
add
mov
gs
lret
enter
push
inc
lods
jmp
and
cmpsl
sbb
and
movsb
push
mov
inc
subb
pushf
sub
sbb
adc
jge
xchg
sahf
or
and
inc
xor
sub
dec
add
or
and
pop
call
mov
mov
jmp
xchg
or
icebp
dec
in
lock
jecxz
insl
xor
add
push
fiaddl
fiadds
add
or
sahf
or
adc
sbb
std
stos
in
push
push
push
dec
pop
or
mul
add
shl
pop
jmp
jb
and
jo
nop
inc
call
jnp
movb
add
jnp
add
and
or
jmp
adc
mov
int3
jo
cld
ds
cld
std
call
jmp
pusha
dec
add
loopne
push
add
int3
xor
test
and
lea
outsb
inc
vmread
push
sbb
add
dec
inc
push
cmp
sub
mov
or
cmpsb
inc
repz
adc
or
xor
pop
dec
loop
dec
icebp
and
stos
inc
sub
sbb
aad
lret
out
push
hlt
sub
xor
pop
test
inc
xchg
adc
xor
gs
dec
rorb
jl
xor
add
or
nop
xor
decl
mov
and
test
sub
je
cmp
jb
cmp
ja
test
fisubs
pop
pop
and
fimuls
and
fistl
push
sub
mov
inc
inc
sbb
jne
xchg
ret
in
dec
jne
sub
stc
jp
xor
and
xor
add
je
or
push
mov
lods
inc
shr
push
push
leave
inc
fmull
sbb
lock
or
push
out
outsl
mov
push
imul
jmp
lcall
jl
outsb
add
pushl
sbb
adc
fnstsw
cmp
pop
adc
sti
or
pop
mov
lods
sti
mov
movswl
fcomps
pop
outsl
fxch
fldl
mov
fildll
scas
dec
rorb
out
sub
daa
xchg
ret
mov
dec
pop
push
imull
or
mov
fdivp
pop
es
xor
pop
imul
mov
mov
outsb
gs
inc
mov
hlt
dec
ficoml
outsl
mov
addl
add
test
mov
jno
add
loope
aam
mov
xchg
dec
movb
add
jb
inc
fs
inc
and
adc
and
not
in
cmpb
mov
dec
and
dec
add
loop
and
pop
dec
jl
push
mov
cmpsb
outsl
ja
scas
mov
iret
out
mov
pop
repz
fs
jae
mov
aaa
out
arpl
movsl
ss
pop
fisubs
das
cmp
mov
in
nop
std
xor
xorl
lock
rcll
xchg
std
and
sbb
dec
adc
inc
add
fiaddl
shrb
xchg
adc
jbe
or
adc
inc
sbb
mov
and
sbb
test
stc
ja
fs
lock
xor
cmp
std
out
jns
inc
sbb
sti
fwait
icebp
out
sbb
or
push
fidivs
rclb
aas
aam
data16
inc
in
push
add
adc
movsb
add
push
xchg
push
lods
push
pop
xchg
rclb
psubd
sbb
xor
ja
xorb
add
jecxz
dec
push
cmp
fdivr
xor
lcall
or
ljmp
aaa
pop
loope
pop
movsl
lret
push
push
rclb
loopne
fld
mov
addl
mov
pop
push
aam
mul
ss
lock
out
mov
icebp
inc
sub
cmovno
push
into
mov
daa
in
aas
sti
cld
notb
inc
xor
sbb
fidivrs
repz
adc
stc
bswap
repz
aaa
add
xor
jns
inc
xchg
outsb
in
fs
js
bound
add
mov
aas
jmp
add
pop
or
inc
inc
dec
enter
add
ljmp
pop
push
push
orb
dec
push
inc
jl
in
jge
push
addb
mov
scas
adc
push
rep
es
or
inc
push
adc
push
mov
out
push
in
push
jo
mov
xchg
mov
push
cmpsb
aam
popa
inc
pop
fmulp
and
rcrl
inc
js
lahf
les
push
out
inc
shlb
adc
or
or
pop
xchg
adc
sub
ss
mov
shrb
orb
pop
xchg
fisubl
mov
push
rol
xchg
pusha
inc
mov
and
lahf
sbb
add
xor
leave
xchg
mov
stos
lahf
das
or
pop
repnz
add
repnz
xchg
out
inc
mov
dec
or
dec
xchg
push
xor
xchg
mov
or
mov
out
mov
outsl
out
inc
scas
fs
out
pop
push
pushf
and
into
insb
mov
nop
xchg
xor
add
inc
sub
mov
loop
xchg
js
jl
popa
movsb
xor
pop
insb
aaa
call
add
pop
outsl
jl
and
inc
mov
test
and
add
lahf
or
adc
jp
adc
popf
iret
out
mov
sahf
loope
outsl
pop
sbb
pop
fbld
pop
nop
push
mov
fwait
add
and
cltd
adc
sbb
xlat
mov
inc
ljmp
pop
add
add
gs
faddl
mov
xor
movsb
pop
inc
arpl
test
das
pusha
mov
fmul
mov
and
xor
push
cltd
bound
or
cmp
sbb
sbb
or
dec
inc
in
sub
xor
addl
add
xor
xorb
shl
and
xchg
nop
push
aas
xchg
sbb
scas
ja
nop
and
mov
jne
xor
jl
pop
adc
adc
call
call
adcb
dec
cmp
mov
insb
mov
adc
shll
push
sbbb
add
push
pop
mov
inc
stos
xor
ss
fwait
std
sbbl
mov
mov
clc
mov
add
pop
jg
or
xchg
and
test
ret
or
rcll
cmp
sub
testl
fildl
or
fisttpl
dec
sbb
sbb
xor
add
cmp
add
and
add
add
add
and
or
cmc
or
adc
xor
and
pusha
popf
arpl
jmp
add
xor
pusha
loopne
inc
movsl
mov
cs
xchg
pop
add
enter
fnstcw
add
sub
pop
lcall
and
adc
and
jge
dec
std
xor
shrb
fwait
or
loopne,pn
mov
jmp
seto
fistl
and
and
add
xchg
lock
lock
or
and
test
hlt
jl
push
mov
inc
dec
dec
sub
clc
cld
xor
jp
add
adc
pop
push
push
jl
adc
or
sub
add
orb
mov
adc
fwait
and
cmpsl
dec
mov
add
lcall
add
add
jbe
in
sbb
lock
adc
xlat
aad
insb
test
aad
or
mov
dec
outsl
add
loopne
test
fmuls
mov
jo
je
xchg
adc
dec
hlt
inc
xchg
or
push
or
mov
push
xchg
xchg
or
ss
push
fcmovbe
lret
or
sbb
and
pop
sbb
inc
call
inc
jmp
push
jl
xor
cld
ret
pushf
mov
pop
je
adc
lock
add
shlb
rcl
jne
mov
fldcw
mov
jle
mov
adc
xchg
pop
loopne
or
push
push
mov
shr
jmp
nop
call
mov
lock
xchg
or
pop
xchg
mov
iret
shl
lods
or
aam
adc
inc
testl
push
sbbl
pop
jg
cmova
dec
adc
mov
jle
je
sub
out
push
and
mov
rclb
inc
add
push
or
clc
mull
cltd
shlb
mov
push
aad
cmpsb
adc
or
add
and
push
pcmpgtd
subl
pusha
or
pop
shr
sbb
add
hlt
pop
jbe
adc
sub
ljmp
dec
jecxz
repnz
roll
and
add
or
inc
and
rcll
and
cmovbe
push
xchg
inc
lock
je
push
push
pop
inc
push
clc
mov
add
inc
inc
inc
orb
inc
lock
ljmp
cmp
or
sbb
pop
add
add
cwtl
sbb
xor
sti
sub
shll
les
sub
sub
andl
mov
aaa
pop
push
jae
mov
or
and
in
add
aaa
sbb
mov
xor
pusha
push
repnz
imul
loopne
sbb
ds
dec
inc
jbe
sbb
rcrb
addr16
sub
xorl
repnz
leave
inc
inc
mov
inc
adc
and
iret
dec
orps
in
ret
xor
iret
mov
in
xchg
dec
gs
jno
push
insb
imul
stos
enter
nop
mov
xlat
cwtl
push
adc
push
cld
adc
push
jb
sub
ret
stos
int
shlb
xchg
cmp
es
jb
mov
or
sti
jmp
adc
jno
mov
inc
mov
ss
pushf
mov
sbb
mov
sub
pop
int3
add
into
test
sbb
popl
pop
outsl
insb
gs
outsl
cwtl
cmp
cmp
and
pop
sub
mov
arpl
xor
aaa
dec
outsl
popa
xor
dec
push
push
outsb
jecxz
out
adc
lea
or
ds
repnz
ret
inc
pop
jmp
dec
or
ss
inc
pop
push
jge
adc
or
insb
add
jb
jmp
sub
push
repnz
test
inc
pop
sub
adc
hlt
nop
sti
inc
pop
cmc
adc
pop
mov
enter
lahf
or
pop
lcall
sbb
addr16
dec
ret
les
daa
mov
jmp
psraw
jecxz
dec
cmp
or
pusha
aaa
xchg
arpl
test
mov
pop
push
adc
mov
cmp
push
push
adc
mov
jns
int
fwait
movsl
scas
add
insb
push
push
fsubrs
or
inc
mov
mov
hlt
push
add
call
push
adc
sub
nop
int3
cmpl
sbb
cmp
sbb
pop
or
dec
push
mov
lret
fs
cmp
nop
add
add
nop
add
or
rclb
or
flds
mov
jns
sub
adc
add
nop
and
sub
fs
push
fs
dec
add
xor
test
movsb
xor
add
enter
add
xor
jl
push
fs
mov
fs
mov
nop
and
nop
mov
sbb
nop
add
xor
pop
add
xchg
add
xor
in
fdivs
enter
sbb
xor
or
orb
or
js
icebp
pushf
pop
sbb
cmpsl
cmpb
lds
sarl
sbb
push
out
pop
push
repz
ja
xor
dec
and
xor
push
adc
pop
cmp
repz
in
stc
test
sahf
stos
mov
jnp
cmpsl
clc
add
push
dec
pop
cmp
repz
jb
mov
cmpsb
mov
shrb
mov
out
push
adc
sub
inc
repz
out
pusha
out
add
sahf
out
dec
cwtl
movsl
push
mov
int3
fsts
addb
sub
sbb
xchg
dec
adc
lock
sbb
ss
mov
cmp
push
push
add
push
iret
test
aaa
xor
daa
mov
into
outsb
lock
mulb
adc
push
pop
pusha
pop
xchg
sbb
lahf
xor
in
push
add
mov
push
out
sub
inc
and
push
xchg
sub
sub
xor
and
add
pop
inc
les
or
push
cwtl
cmp
xor
jo
jp
sub
dec
sub
test
adc
sbbb
fwait
mov
dec
pop
dec
insb
loop
mov
push
adc
repz
mov
sbb
push
and
cmp
rcl
cs
idivl
sub
jl
or
push
and
fisubrs
jle
mov
sub
mov
decl
xlat
mov
push
sbb
sbb
mov
fs
inc
sub
imul
cwtl
pop
add
add
mov
fiaddl
and
push
dec
pop
mov
sub
inc
js
or
lea
or
lea
pop
xchg
mov
lods
imul
xchg
xor
out
dec
arpl
mov
ret
mov
mov
mov
mul
pusha
xchg
or
cmpsl
mov
and
inc
fst
add
adc
adc
cli
push
mov
sbb
fistl
push
mov
adc
jne,pn
mov
inc
stos
jecxz
sbb
leave
imul
or
xorl
daa
adc
aas
roll
jne
mov
push
sbb
test
inc
dec
or
inc
sbb
pop
inc
xchg
adc
add
pop
rclb
inc
push
dec
out
inc
hlt
mov
addl
dec
sbb
xor
sub
adc
mov
sub
stc
dec
mov
or
ss
fiaddl
jge
rol
xchg
cmp
inc
cltd
in
dec
cmp
cmp
dec
arpl
mov
dec
sbb
out
movsl
ja
ja
movsb
in
lret
push
inc
and
push
enter
add
loope
push
lret
adc
cmpl
xor
pop
mov
imul
cmpl
or
add
sbb
test
dec
lock
mov
xchg
or
sbb
pop
sub
adcb
jnp
call
leave
or
rclb
mov
mov
pop
jbe
sub
adc
cmp
push
je
jp
out
xchg
dec
pop
xchg
dec
dec
add
inc
push
es
outsl
xchg
jle
popa
in
push
mov
cmpl
pop
inc
fdivl
mov
inc
dec
roll
daa
test
mov
adc
mov
lock
sbb
xchg
fisubl
iret
repz
imul
inc
xchg
jge
popa
adc
adc
lods
add
loope
xor
rorb
addr16
mov
xor
push
or
xchg
and
pop
imul
cltd
gs
sub
xchg
and
lret
jmp
cmc
xor
adc
bound
jge
test
pushw
inc
sbb
cmpsl
icebp
xor
jmp
adc
je
leave
mov
sbb
or
add
incl
jmp
in
dec
es
sub
inc
xor
dec
adc
leave
add
mov
jle
push
mov
push
icebp
ja
movsl
cmp
adc
jmp
mov
stos
inc
lods
pop
xor
lods
adc
fstl
nop
adc
sbb
dec
aas
or
std
in
inc
fiadds
add
fcoml
int
cmp
mov
push
orb
lret
cld
mov
ret
add
mov
and
loop
loope
mov
fs
jne
mov
lret
pop
lret
int
lock
sub
push
push
xchg
inc
pop
pop
dec
jb
daa
aaa
mov
sub
or
push
mov
push
cmp
sub
xchg
cmp
rorl
mov
add
push
test
add
pop
js
sbb
pop
jmp
jl
or
in
mov
jne
push
fildl
pop
in
sbbl
lea
inc
or
inc
jg
jle
and
nop
cmc
test
add
subl
jno
cli
mov
mov
fiadds
and
loope
add
xor
xchg
adc
shll
dec
pop
inc
cmp
jae
sub
fcomp
test
sub
mov
adc
jne
inc
arpl
mov
lods
cmpl
add
loope
push
sub
aaa
aad
mov
push
add
lea
mov
push
add
push
inc
movsl
mov
es
dec
push
mov
mov
jae
jo
or
add
jne
stos
jl
push
inc
or
mov
std
jmp
jg
popf
xor
sub
sub
push
inc
sub
mov
or
mov
adc
dec
cmp
mov
or
push
lret
iret
sub
inc
xor
cmpb
cmp
outsb
js
hlt
add
scas
or
add
xchg
aaa
cs
sub
mov
nop
or
nop
mov
or
inc
sbb
fsin
mov
jno
adcl
xor
fadd
sub
adc
adc
and
and
outsl
jmp
inc
dec
or
sub
fs
dec
adc
mov
sahf
xor
xchg
cmp
lds
in
dec
jnp
mov
xor
inc
sub
add
enter
mov
push
inc
and
inc
scas
js
push
outsl
push
mov
pop
jno
xor
cmp
je
inc
cmp
jne
call
jmp
push
cmpl
jne
mov
inc
push
pop
add
dec
cmp
loop
xchg
mov
sbb
push
ret
add
pop
and
ret
pop
aam
mov
adc
jmp
clc
and
out
outsl
loopne
add
xor
idivl
les
stc
adc
push
mov
sbb
pop
or
or
adc
int
daa
leavew
push
in
sbb
call
loope
shrb
adc
lret
or
dec
mov
push
push
push
dec
sbb
fcmovbe
or
hlt
adc
or
sub
inc
loop
sbbb
cmp
inc
sbb
xchg
mov
adc
xlat
add
rcr
mov
rorl
mov
dec
enter
call
movsl
cmp
push
sbb
mov
or
fdiv
lock
and
inc
jle
fmull
icebp
das
or
sbbl
int
mov
jb
and
xchg
pop
sbb
pushw
cwtl
dec
jb
xor
pusha
mov
clc
jmp
pop
mov
sbb
sbb
sbb
sarl
setae
in
dec
lret
add
inc
lea
mov
cmp
add
or
dec
add
std
mov
mov
or
inc
xchg
add
ret
pop
mov
in
pop
test
fs
sbb
or
inc
xchg
xchg
cmpl
imul
inc
dec
stos
fcompl
mov
les
cwtl
insl
test
adc
scas
mov
sub
orl
fucomi
and
lods
insb
cli
or
stos
cmpb
clc
mov
sbb
add
jo
mov
test
xchg
or
jnp
dec
dec
add
adc
sub
pop
scas
sub
dec
xor
hlt
adc
je
jmp
scas
add
jmp
adc
add
pop
xchg
imul
pop
xor
push
cmp
add
call
cmp
sbb
sub
pop
rcl
mov
mov
jge
dec
shlb
push
pop
sub
or
loop
test
adc
popa
imul
pop
jno
and
cmpl
adc
cld
push
and
pop
mov
jge
jae
add
pop
xor
xor
or
aas
rcr
inc
mov
mov
add
rorb
push
cmp
or
daa
inc
sbb
inc
test
or
dec
bound
pop
rclb
or
pop
push
clc
adc
fcoml
jne
and
loopne
test
test
mov
clc
in
outsb
inc
lret
ja
xor
cmc
xor
xlat
and
sarw
pop
lret
enter
leave
xor
dec
inc
xchg
pop
pop
hlt
rorl
test
mov
pop
sbb
xor
enter
pop
dec
cmp
stc
addr16
and
xchg
addl
jg
xchg
fwait
inc
mov
xchg
add
ds
and
ret
mov
sti
xorl
iret
pop
lock
adc
mov
pusha
adc
mov
mov
mov
and
xor
xor
adc
jg
mov
or
jge
movsl
adc
sub
jg
adc
or
popa
lods
xor
xchg
jo
lret
inc
pop
inc
pop
xor
aaa
mov
xor
sbb
add
jmp
adcb
ret
or
ret
and
das
je
adcl
jb
rolb
cmp
sub
mov
nop
adc
fisttpl
test
add
xorb
dec
xchg
push
jae
adc
pop
push
movsb
push
clc
push
push
outsb
push
pushl
xor
scas
add
out
pop
mov
or
loope
and
and
jne
ret
add
xchg
daa
dec
aaa
mov
add
xor
xchg
or
sbb
mov
rolb
adc
aaa
mov
das
push
lahf
inc
push
xor
xchg
xor
or
xchg
xor
and
pop
adc
cmpsl
aas
lret
cmp
cmp
inc
mov
sub
xchg
setge
cs
cmpb
jmp
imul
jecxz
dec
inc
stos
jg
push
sub
jnp
inc
nop
dec
pop
adc
dec
add
mov
sub
repz
cli
mov
pop
jb
sub
jo
inc
dec
test
test
ss
xor
imul
aaa
mov
notb
push
lcall
cmpl
pop
xchg
mov
rclb
loop
ljmp
nop
out
inc
aaa
rol
and
xchg
lret
or
add
les
aaa
lea
lret
mov
mov
mov
sbb
add
fs
and
adc
mov
les
mov
insl
adc
add
cmpsb
inc
pushf
cmp
jo
lods
xchg
fcmovbe
imul
and
xlat
push
cmp
mov
adc
stos
or
adc
nop
push
nop
push
pushf
lcall
fs
mov
and
movb
inc
clc
pop
call
dec
fidivs
adc
mov
movsb
xor
jmp
mov
imul
jl
jno
dec
sti
mov
repnz
clc
sub
push
je
sub
and
or
jecxz
dec
repnz
repnz
mov
lods
xor
and
popa
call
mov
popa
in
je
mov
in
in
jbe
mov
arpl
or
pusha
lahf
add
movsl
fldl
and
cmp
pop
xchg
cli
adc
jge
cwtl
or
adc
dec
shrl
lret
dec
je
pminub
pop
test
push
push
mov
out
lret
aad
jp
daa
cs
sub
mov
shll
push
popf
pop
out
imul
mov
cmp
ja
cmpl
fidivrs
out
inc
sub
and
testl
adc
adc
fistpll
icebp
loope
adc
sbb
xchg
xor
test
or
faddl
push
scas
mov
and
and
test
push
cmp
and
and
and
push
sub
sbb
mov
out
adc
cld
add
xchg
push
cmp
push
pop
add
lcall
pop
mov
fcomps
es
sbb
js
cmp
pop
cmp
xchg
cmp
inc
out
lods
or
and
cmp
or
add
jl
fmul
or
test
dec
icebp
xor
jne
out
mov
or
dec
jge
adc
pop
dec
in
inc
test
inc
pop
insb
in
stos
adc
push
es
sub
or
dec
cltd
mov
pusha
xor
mov
dec
pop
mov
pop
add
mov
test
mov
inc
shlb
and
pushf
pop
cs
cmpsl
push
pop
popa
and
bound
add
pop
popa
dec
mov
and
lock
jo
fwait
push
mov
pop
hlt
cmp
or
pop
je
lret
addl
sub
enter
ja
es
and
leave
mov
add
and
or
add
mov
call
in
add
push
jg
cs
test
imul
bound
popf
adcl
sbb
xchg
sbb
pop
rolb
adc
push
ret
inc
jmp
loopne
mov
inc
inc
push
and
arpl
dec
test
cmp
in
es
inc
and
orl
xor
xor
push
insl
push
xchg
sti
insl
cmp
fs
aaa
sub
cld
addb
inc
xor
inc
lret
add
and
cmp
cmp
aaa
adc
jae
data16
push
inc
aad
xor
or
add
test
cmp
or
xchg
cld
mov
mov
add
sahf
sahf
imul
or
sbb
adc
stos
mov
push
add
call
sbb
scas
or
mov
adc
mov
pop
xchg
add
andb
push
fbld
sbb
push
dec
cmpsl
outsb
test
mov
push
jnp
call
clc
inc
mov
sbb
shlb
and
and
cbtw
cmp
mov
notb
rorl
xchg
or
roll
jl
movsl
adc
xchg
ss
xor
sub
incb
cld
addl
inc
mov
push
fwait
lcall
in
xchg
inc
add
pop
add
jmp
flds
fmuls
int
inc
dec
fcmovnu
stc
pop
or
aas
adc
aaa
inc
loopne
loopne
dec
inc
push
inc
pop
inc
dec
cmpsb
lahf
or
mov
or
sub
aad
mov
add
mov
push
pop
lea
in
ret
inc
or
mov
cmpsl
cmp
bound
pop
pop
mov
fsubrs
movsb
lods
loop
insl
sbb
adc
jo
or
ljmp
cmp
movsl
pop
call
mov
lock
out
or
lods
pop
xor
cmp
or
sbb
rorl
adc
xchg
dec
js
aaa
dec
push
sbb
cmp
mov
ss
inc
xchg
push
mov
cmp
nop
arpl
push
sbb
xchg
outsl
and
adc
je
sbbb
dec
int
mov
filds
add
xchg
sub
mov
out
or
and
sbb
lcall
jge
inc
es
inc
and
inc
push
sub
mov
add
or
or
outsl
rclb
nop
mov
and
dec
mov
push
mov
inc
loop
xchg
fldl
push
ljmp
lock
xor
push
pop
pop
aam
dec
and
dec
sbb
cmp
dec
add
lret
aad
ja
jns
adc
lods
mov
xchg
es
je
push
mov
clc
jbe
xchg
movsl
add
jo
fs
shr
push
aaa
iret
inc
lahf
push
test
ret
jecxz
add
or
add
out
aam
push
jnp
adc
inc
adc
cmpsb
sbb
cmpb
in
xchg
xchg
popf
jmp
adc
test
xchg
ret
ror
fsubl
insl
xchg
cltd
mov
pop
adc
or
add
rorb
xchg
xchg
push
ret
and
xlat
in
push
or
aas
adc
dec
cmp
mov
sub
loop
jne
dec
ss
bound
test
inc
pop
push
jae
mov
ret
inc
cwtl
jno
sbb
dec
les
mov
and
or
xor
je
roll
sbb
cmc
in
sbb
xchg
dec
in
cmp
dec
dec
sbb
dec
js
xchg
scas
cmpl
inc
cmc
clc
sub
in
xchg
sub
daa
nop
test
rorl
inc
pop
pop
sbb
mov
inc
sub
dec
loope
orl
mov
dec
jne
inc
mov
pop
imul
out
frstor
mov
cmp
add
mov
dec
sarb
ja
subl
add
cltd
sbbl
movsl
icebp
clc
xlat
enter
fsubp
dec
inc
cmp
outsb
je
icebp
paddw
clc
or
rcrl
dec
inc
dec
rorb
outsb
push
xchg
xor
int3
mov
insl
dec
jb
into
mov
or
fcomps
adc
and
mov
imul
adc
and
push
inc
dec
jb
add
sub
jge
push
cmp
hlt
ds
adc
or
fdivs
adc
fcom
lods
dec
mov
shll
cltd
mov
sub
into
dec
inc
add
mov
imul
je
sbb
and
push
mov
test
adc
addb
cmc
sti
mov
inc
arpl
pop
sbb
int3
push
mov
movsl
add
cltd
dec
outsl
sub
mov
and
push
add
stc
test
rclb
out
push
inc
and
add
idiv
xor
movsb
push
pop
and
lods
testl
lahf
inc
or
pusha
in
pop
and
sbb
out
cmp
push
lea
sub
jnp
add
adc
mov
cmovo
mov
insb
dec
and
sbb
and
addr16
xchg
push
dec
inc
sub
xor
sbb
aam
push
rorl
jns
dec
jnp
mov
and
cmc
jle
incl
or
aas
adc
push
push
fnstenv
inc
xchg
pop
push
dec
and
jb
push
sbb
cmp
test
dec
inc
mov
sahf
inc
lock
ret
xchg
jle
push
lods
or
lods
pop
inc
xchg
push
mov
ret
fs
jo
push
sub
jb
and
ror
gs
inc
fsubr
das
mov
nop
arpl
es
popa
xor
xchg
xor
icebp
mov
xchg
xor
nop
arpl
lods
cmp
inc
cltd
je
stos
dec
cmp
and
idivb
push
cmp
adc
add
mov
sarl
cmp
xorl
inc
shll
iret
push
popa
mov
loope
aas
rcl
aas
dec
sub
jl
jge
mov
jb
adc
add
sub
dec
sbb
xchg
incl
sbb
test
add
shll
cmpsb
movsb
jge
mov
das
xchg
outsb
inc
enter
out
push
push
addl
js
dec
cmp
sbb
add
jmp
dec
adc
sbb
enterw
xchg
nop
movl
pavgb
inc
cld
sub
jb
jno
les
xchg
mov
scas
jmp
int3
jbe
fistps
jmp
xchg
xor
lea
lods
adc
cmpsb
xlat
push
dec
aam
push
call
inc
popf
mov
in
std
adc
dec
jmp
mov
cli
stos
add
divb
sub
inc
adc
adc
push
and
jmp
cld
cmp
lahf
aam
inc
notl
sbb
mov
stc
sbb
inc
movsl
in
ret
dec
fildl
xchg
insb
adc
or
shlb
dec
ret
cs
cmp
je
and
cmp
cmpsb
adc
inc
ret
mov
pop
xor
pop
dec
xchg
inc
jle
inc
mov
pop
repnz
and
adc
mov
ss
push
mov
push
bound
aam
aam
sub
adc
mov
push
dec
ficoms
scas
notb
sbb
subl
pusha
and
mov
inc
push
lahf
cmp
in
fistpll
push
or
scas
int
adc
leave
loop
nop
in
sbb
nop
insb
data16
push
or
xor
add
and
inc
sub
aaa
and
adcb
sbb
fwait
add
pop
inc
cwtl
pop
inc
and
addr16
fisttpl
and
cmp
push
or
sbb
jns
mov
dec
stos
add
inc
sbb
adc
cmp
int3
mov
fcoms
imul
rclb
and
and
outsl
xchg
or
inc
clc
xchg
testl
mov
mov
imul
mov
inc
or
pop
call
add
dec
fildl
dec
add
or
inc
jae
jno
mov
adc
sbb
dec
pop
leavew
sbb
jns
inc
aam
and
rorl
add
adc
sahf
imul
sub
jo
loope
nop
outsb
mov
ja
mov
fsubrs
jo
jnp
stos
inc
xor
stos
xchg
adcb
les
inc
test
mov
mov
out
sub
adc
outsb
subl
mov
inc
rcl
and
mov
push
inc
inc
ljmp
mov
mov
xor
out
pop
push
sub
fwait
pusha
xchg
or
xchg
dec
or
inc
sub
stos
jge
jp
pop
cltd
out
and
out
lahf
mov
xchg
push
push
notb
xor
or
aas
xor
negl
pop
faddp
into
or
push
cld
sub
nop
into
add
andl
add
mov
rcl
or
cmp
shr
pop
and
pop
mov
sub
jge
gs
or
add
sarl
or
cmp
xchg
adc
adc
arpl
push
leave
adc
mov
sbb
add
inc
mov
in
shlb
fdivs
push
xor
inc
xchg
in
adc
jne
ret
cli
add
inc
pop
adc
sbb
and
das
mov
clc
sub
xor
sbb
aad
testb
xchg
rolb
add
inc
dec
mov
popa
in
add
js
data16
rorb
loop
daa
and
insb
mov
adc
insl
shll
push
sub
add
add
pop
add
dec
xchg
and
add
leave
rorb
and
stos
loope
aaa
adc
sbb
adc
sub
and
jmp
xchg
push
pop
or
sbb
ja
stos
mov
enter
add
push
stc
inc
sahf
out
push
js
sub
adc
shr
test
pop
sbbb
jl
sub
paddq
cmc
lock
faddl
outsb
xor
lods
pop
loope
sub
faddl
or
mov
mov
das
int3
dec
cwtl
adc
sub
in
cmpsl
out
and
mov
es
cwtl
adc
aad
testl
cmp
mov
mov
lret
rcrb
lret
test
mov
mov
adcl
mov
jne
cli
adc
mov
in
push
sub
insb
inc
rcl
repz
push
xor
mov
fcomps
pop
enter
cld
in
mov
loopne
in
sahf
xchg
dec
pop
push
sub
mov
mov
enter
nop
pop
inc
iret
les
lds
adc
cld
xchg
inc
ds
xchg
bound
out
adc
shrb
test
jne
lock
movsb
bound
mov
loop
sahf
bound
cmp
and
sub
mov
addr16
mov
rcrl
mov
pop
es
fst
ret
dec
jmp
and
in
dec
sbb
push
int3
inc
push
popf
rolb
in
inc
fildll
push
inc
and
xchg
sub
in
mov
outsl
fs
sbb
inc
mov
add
xor
rcrb
cmp
aad
xchg
mov
cmp
roll
fcoml
lods
insl
lods
push
nop
add
push
jle
leave
add
insb
fs
xor
in
popf
xchg
frstpm(287
out
mov
cmp
cmp
gs
in
nop
jmp
shrb
jp
jg
test
mov
inc
je
fcoms
inc
enterw
call
filds
repnz
outsl
inc
and
sbb
enter
int
in
jp
add
fdivs
pop
les
iret
pushf
xor
push
adc
xchg
xor
xor
pop
xor
push
or
or
adc
cwtl
push
push
notl
lods
jno
or
insb
test
repz
mov
add
scas
addb
lock
mov
mov
jns
cmp
dec
add
cs
mov
in
orl
dec
add
add
dec
ja
sbb
or
or
popa
push
dec
push
bnd
or
pop
sahf
scas
inc
fisubl
add
push
testb
adc
inc
mov
jns
fs
add
or
pop
gs
mov
mov
out
and
dec
jne
fwait
and
sahf
out
sahf
sbb
adc
or
xchg
sbb
ljmp
loopne
sbb
lret
fsub
jbe
or
pop
add
or
sbb
mov
out
push
push
jp
fisubl
inc
leave
clc
or
aam
push
pop
mov
inc
loopne
jmp
cmpsb
jle
xchg
push
and
cmp
mov
push
out
add
cld
fldt
pop
mov
mov
pop
rcrl
and
dec
cwtl
test
or
or
outsl
mov
xchg
clc
pop
ja
test
lret
sub
repz
or
sbb
nop
xchg
lret
xor
cmp
push
or
or
movb
mov
sbb
inc
js
cmp
adc
pop
and
and
xchg
fsubs
and
sahf
out
out
sub
push
push
or
or
or
into
repz
or
or
cmpsb
push
adc
push
push
mov
adc
pusha
popf
scas
or
sbb
aas
sahf
lret
ja
cmp
or
or
or
sub
jbe
or
mov
pop
jo
push
movsb
decl
mov
and
pop
add
lret
fisubs
ret
and
push
sbb
inc
sahf
or
or
in
in
or
push
push
rcl
jnp
push
pop
adc
dec
adc
add
add
push
add
push
adc
lea
and
adc
clc
cmp
hlt
addr16
pop
movsl
je
das
and
ljmp
hlt
lea
dec
sub
push
or
icebp
xchg
adc
mov
add
and
test
add
adcb
dec
mov
pop
or
add
scas
mov
adc
fsubrp
push
pop
mov
nop
add
and
sbb
mov
dec
lea
enter
push
push
pop
mov
xor
mov
in
outsl
jae
or
ret
push
or
or
in
in
push
add
ret
cld
mov
or
xchg
mov
inc
lea
aam
mov
int
xchg
mov
xor
inc
jmp
dec
loope
aam
mov
xchg
les
mov
cmpsl
sbb
push
popa
in
and
shlb
jle
cmpsl
mov
imul
loopne
pop
cld
outsb
inc
xchg
and
je
dec
lret
adc
pop
mov
cmp
xchg
lret
mov
aas
stos
movsb
aad
inc
insl
mov
pusha
nop
cmp
shrl
fs
fwait
pushf
mov
jb
ret
xor
push
jl
insl
fs
imul
clc
xchg
cltd
push
lods
addl
lods
add
push
ss
inc
sub
imul
mov
fiaddl
jmp
jp
nop
cmc
fists
inc
cld
pop
add
fstpl
arpl
jecxz
fwait
push
push
int3
adc
test
sub
lods
jae
popa
pop
dec
cmp
add
call
scas
test
sub
mov
cmpsb
dec
dec
xor
push
sbb
pop
sarb
imul
jno
out
int3
add
jl
adc
mov
pop
test
scas
jnp
jmp
sbb
add
add
ds
cld
insb
adc
add
lods
nop
ss
ret
push
sub
ss
jmp
and
aam
frstor
pop
enter
decb
test
push
andb
out
fildl
xchg
jb
sub
pop
ja
or
cmp
sub
or
jbe
test
lods
and
popa
pop
fisubs
fstpt
dec
jmp
inc
ljmp
add
and
cmpl
rorb
jno
jmp
and
sub
mov
jg
nop
les
pusha
sub
push
scas
dec
pop
push
add
adc
popa
cwtl
lret
imul
or
inc
fwait
adc
pushf
xor
sbb
jo
add
rclb
or
ror
jmp
nop
scas
push
mov
add
and
fcomps
jns
pop
insl
pop
bound
dec
or
jbe
addr16
xchg
lock
jmp
cmp
sub
xchg
pop
cmp
pop
out
ja
jb
mov
adc
add
or
xchg
testl
rorl
or
mulb
mov
lret
jle
push
cmp
add
xchg
movsb
push
daa
negb
ret
loopne
jns
add
sbb
ja
cltd
and
xchg
dec
jae
add
push
cmp
les
test
add
clc
clc
stos
adcb
rolb
inc
in
pop
jg
jb
pop
push
xchg
cmp
loop
and
push
jo
jle
jg
fs
push
lret
xchg
stos
mov
or
dec
outsl
mov
inc
arpl
lods
add
in
sub
jb
adc
daa
lock
cmpsl
and
add
dec
adc
test
jge
dec
and
adc
push
adc
movsb
je
inc
jp
rcrb
sub
or
pop
cmpsl
pop
mov
jmp
dec
fisubrs
adc
js
movsb
xchg
mov
movsl
and
lods
dec
and
js
cmp
xchg
popa
sub
subb
or
sub
repnz
add
sahf
subl
sbb
test
mov
or
xchg
mov
or
hlt
or
into
movsl
adc
pop
sti
jne
cmp
ja
ret
das
inc
jae
jge
and
xor
ret
xchg
in
pusha
adc
jge
cs
add
data16
addr16
jb
mov
imul
insl
inc
push
inc
popa
test
in
popf
push
add
mov
inc
aam
insb
push
mov
xchg
adc
les
xor
sub
mov
jbe
push
sbb
mov
jo
insb
imul
leave
in
or
xor
cld
cld
adc
fs
shlb
and
pop
addr16
mov
mov
xchg
lock
nop
push
or
jmp
cmp
mov
mov
fcomp
aas
jo
sub
sub
xchg
mov
or
out
sahf
lea
mov
inc
ja
inc
fdivs
enter
fcomp
sub
sahf
xor
sub
xor
je
jl
or
and
lock
aaa
pop
adc
ss
dec
and
stos
mov
add
stos
mov
cmp
mov
cmpsb
jo
lea
repnz
lea
push
mov
call
or
fwait
add
mov
add
mov
sub
push
fistps
movsb
loop
rorl
sbb
xor
dec
nop
add
mov
mov
add
lahf
dec
and
sbbl
sub
push
xchg
xchg
push
xchg
aas
pop
je
and
add
imul
cmp
jl
jl
add
and
mov
in
push
adc
nop
push
enter
insl
dec
cmp
pop
jb
or
jge
pop
jo
add
add
inc
push
dec
jge
jge
je
adcb
xor
or
push
mov
or
je
add
jmp
leave
sarl
inc
inc
pop
jmp
sbb
xor
les
xchg
data16
sub
lahf
xchg
jle
add
inc
or
rclb
mov
cmp
add
jle
and
in
jle
sbb
ret
repz
aad
jo
outsl
psubusw
pop
or
xor
ja
add
dec
dec
sbb
repz
imul
pusha
lods
cli
adc
ret
repz
add
imull
jnp
lods
add
mov
xor
cmp
ret
lcall
jb
mov
inc
mov
sbb
ficomps
xor
xor
adc
sub
cmp
and
adc
inc
inc
cltd
mov
push
or
sub
fldenv
jb
push
xor
dec
cs
mov
jmp
and
ret
push
fnstenv
jmp
fists
fdivl
sub
pop
add
rorb
insb
mov
or
pop
push
clc
mov
add
cmp
repnz
push
xor
add
push
outsl
fwait
sbb
add
je
loop
outsb
xchg
pop
scas
jbe
sbb
iret
or
xor
mov
roll
pop
or
or
jo
insb
cmp
outsl
divl
popf
xor
adc
xor
sbb
push
pop
enter
inc
adc
nop
out
ss
in
sbb
or
jo
shlb
push
push
jg
xorb
aas
mov
int
cmpsl
js
lahf
xchg
jp
adc
test
xor
pop
sub
imul
decl
test
dec
lcall
cmp
jae
loopne
test
add
sub
fdivrl
push
jg
scas
adc
sub
addb
mov
push
lock
sub
add
add
add
jmp
sub
cwtl
aas
movsl
or
sbb
pop
add
jae
and
add
mov
dec
jne
addl
stos
inc
test
pop
xlat
mov
into
push
out
fcmovu
mov
push
test
xchg
push
mov
movsb
add
lahf
add
testl
movsb
fildl
fsubl
pop
in
xor
jne
xorb
hlt
xchg
dec
adc
cmpsl
sbb
inc
movb
mov
or
daa
cmp
ret
imul
jle
or
xchg
or
pop
jbe
sub
push
call
rorb
push
add
mov
sub
filds
insb
out
cmp
jg
dec
sarl
in
subl
pusha
in
dec
inc
cmp
sarl
jb
mov
dec
sbb
jne
stc
and
out
test
mov
add
outsl
stos
sub
addr16
sub
or
pop
lret
ss
je
jl
popf
push
ljmp
dec
mov
clc
outsb
loopne
xchg
add
mov
outsb
ljmp
popf
mov
sub
mov
hlt
sbb
jne
in
clc
lods
cmp
ja
sbb
adc
nop
in
hlt
ja
push
fcoml
icebp
mov
in
sub
hlt
call
es
in
cmpsb
repnz
loop,pn
call
xchg
in
loope
jecxz
mov
loop
cmp
faddl
cltd
add
nop
inc
roll
adc
pop
xor
shrb
popf
les
ror
enter
cwtl
outsl
jmp
leave
mov
pop
pop
jecxz
or
shlb
push
push
bound
xor
or
call
cmp
mov
mov
sub
xchg
or
daa
nop
mov
jge
mov
sbb
out
add
leave
jo
mov
mov
jne
mov
xchg
pushf
or
sbb
andl
jge
popa
and
es
inc
mov
aaa
xor
pop
pop
aam
jecxz
push
add
nop
loopne
test
sub
nop
sbb
mov
xor
incb
jne
sarb
sub
or
ss
sbb
js
mov
mov
mov
jne
lret
sub
test
ja
int3
frstor
push
dec
stos
mov
enter
and
fucomi
xor
les
dec
shl
fistps
xor
pop
rclb
rcl
mov
sub
push
ret
xor
or
push
imul
movsb
sbb
pop
stc
xchg
push
jge
xlat
or
jnp
popf
cmp
push
cld
push
mov
adc
clc
mov
mov
or
out
add
mulb
fbstp
testl
add
sub
or
pop
pop
pop
pop
pop
shlb
insb
pop
popa
fldenv
adc
adc
icebp
imul
mov
cmp
clc
sub
mov
lock
in
fcoml
fdivrs
in
mov
hlt
rclb
popa
hlt
jbe,pt
jge
jne
mov
adc
popa
push
daa
les
push
aad
dec
fidivs
sub
dec
sti
sahf
xor
js
inc
int3
stc
scas
popa
stos
sub
mov
jae
sbb
adc
add
mov
or
inc
jo
jns
cli
and
pop
lcall
dec
cld
mov
jbe
fstl
sub
shr
pop
aas
mov
mov
xlat
mov
add
dec
les
nop
cmp
or
xor
fiaddl
mov
mov
jbe
fdivl
xchg
scas
dec
fidivl
nop
jge
data16
lods
jb
divb
pushl
gs
aaa
sub
fdivrs
mov
cwtl
dec
sti
mov
add
xchg
fwait
push
sarl
clc
adc
or
jecxz
push
add
jo
add
xchg
cmc
in
mov
mov
pop
add
andb
mov
cmp
cmp
jmp
or
lock
or
lcall
imul
add
in
mov
pop
insb
pop
pop
mov
mov
inc
repnz
cmp
jnp
shlb
xor
sti
dec
fldl2e
je,pn
or
inc
or
pop
fldt
movsb
inc
xor
fildll
cs
imul
loopne
rcr
adc
pushf
xor
adc
pop
push
adc
add
adc
xchg
xor
jns
pop
mov
inc
and
push
and
adcl
mov
add
xchg
jp
cmp
mov
insb
jle
scas
add
in
inc
stos
jno
xchg
inc
cmp
cmp
sbb
std
rorb
lock
movb
sete
inc
push
insl
popl
fdivrp
push
mov
pop
das
inc
lret
and
out
loope
mov
call
inc
push
push
mov
arpl
lock
stos
add
cmp
xchg
mov
cmp
in
loopne
inc
shlb
push
in
dec
mov
dec
pusha
cmp
jg
pop
sub
sub
ss
or
notb
dec
xchg
and
xchg
insl
cmp
fnstenv
xchg
xor
orl
sbb
stc
jne
pusha
add
out
sbb
dec
pop
sbb
xchg
dec
xchg
adcl
add
loopne
lods
and
push
lods
inc
inc
scas
movsl
jmp
xchg
std
repz
jmp
adc
shrw
repz
mov
xchg
sbb
outsb
out
cmp
jne
inc
and
sarl
jbe
xchg
stos
sbb
jmp
mov
dec
cvtps2pi
nop
mov
pop
lret
mov
ret
dec
pop
sbb
in
sbb
sub
sub
dec
rorb
test
fs
add
divb
in
sbb
mov
movsb
stc
lods
jge
fmuls
mov
ljmp
sahf
and
sub
call
push
sbb
inc
sbb
sub
aaa
jmp
sbb
clc
push
jge
sahf
xchg
pop
lock
mov
jmp
or
adc
testb
push
and
int3
adc
lea
daa
or
insl
push
dec
jle
mov
rclb
xor
dec
adc
lcall
xchg
sbb
adc
jge
inc
mov
mov
das
mov
inc
or
xchg
inc
mov
cmp
fs
mov
lds
lds
outsb
mov
sub
mov
jecxz
popa
sbb
mov
sub
jne
push
mov
hlt
add
mov
nop
vprotq
or
js
pop
data16
je
xchg
inc
aaa
inc
mov
dec
cmc
pop
and
xchg
je
call
and
jmp
push
cwtl
or
pop
inc
xor
lret
mov
push
in
cmpsb
mov
rcrl
mov
mov
jnp
inc
pop
and
ljmp
cmp
jb
mov
pop
sub
push
mov
mov
ret
sub
jbe
xor
jbe
lods
add
adc
ret
cmp
jae
mov
add
adc
outsl
inc
rorb
push
lods
mov
scas
std
mov
or
mov
stos
ss
outsb
add
ds
jb
inc
sub
xor
lea
dec
adc
sbb
ss
fbstp
or
sbb
gs
cmp
lea
add
jmp
in
add
cvtps2pi
mov
cmp
jbe
jle
pop
add
test
jb
push
or
fldt
je
or
cmpsb
inc
or
test
push
je
mov
cmp
push
sub
fsubs
add
or
jmp
or
mov
int3
inc
mov
adc
gs
sub
and
jmp
mov
jbe
mov
push
and
cli
fs
add
inc
xchg
fsubl
sarb
leave
sarb
mov
cld
lods
cmp
je
sub
lret
loopne
mov
mov
or
shl
in
rcll
or
xchg
lea
adc
pop
pop
inc
add
xor
mov
and
add
imul
inc
cmp
repz
and
add
xchg
jno
incb
push
nop
dec
mov
mov
lcall
add
mov
lock
or
inc
mov
cwtl
popa
sbb
ss
cmp
addl
out
cwtl
sarb
pop
pop
mov
out
ds
inc
add
mov
add
pusha
out
lods
inc
jmp
push
shlb
mov
in
mov
test
add
xor
cmpb
sbb
push
jb
cmp
pop
adc
mov
add
jne
mov
and
or
inc
into
or
add
gs
inc
or
enter
pop
fisubl
mov
clc
data16
and
adc
das
mov
ficoml
sub
inc
sbb
mov
push
das
cmp
sub
data16
loope
leave
xchg
pusha
popa
or
into
je
inc
cmp
xlat
sub
mov
mov
sub
ret
mov
mov
mov
push
sub
add
inc
mov
push
in
cmpsl
imul
sub
mov
ja
sbb
sub
rcrl
pop
stos
jno
jp
pop
xchg
push
test
cmp
mov
mov
pop
nop
stc
add
test
into
dec
int
add
lods
and
push
lahf
sti
pop
lcall
std
inc
mov
cs
mov
popf
in
push
mov
and
and
jg
mov
sub
pop
rcrb
js,pt
cmp
shr
cmp
loop
mov
mov
test
nop
mov
cltd
add
roll
pop
inc
outsl
add
cmp
aaa
cmc
ret
push
or
cmpsl
enter
push
lods
mov
inc
cmp
jne
orb
int
ljmp
jecxz
clc
add
sbb
shr
cmp
dec
mov
pusha
mov
and
out
es
mov
and
addr16
lock
mov
xchg
adc
rolb
lea
mov
mov
inc
pop
dec
sbb
mov
and
ret
add
add
test
push
jge
enter
ljmp
popa
rorb
shr
cmpsb
decl
or
mov
push
push
inc
xor
ret
push
inc
ljmp
fnstenv
lock
aaa
inc
jg
add
sbb
push
adc
outsl
call
fadd
fists
int3
iret
push
or
push
imul
lds
or
aas
dec
pop
inc
cmc
push
mov
sbb
mov
rolb
incl
inc
add
addr16
and
lret
jbe
sbb
mov
sbb
push
mov
push
movsb
mov
push
stos
add
fcoms
insl
jmp
aad
sbb
ja
cmpb
or
loopne
mov
ret
and
cli
xchg
mov
push
cmpb
inc
addb
xchg
test
ja
in
lret
inc
data16
lds
inc
dec
repnz
iret
popa
lods
loope
dec
sarb
cli
jl
fisttps
jmp
mov
cld
mov
imul
add
aam
lea
lock
jo
inc
xchg
add
jge
mov
and
pop
adc
jo
aas
sahf
adc
ret
clc
lock
xchg
repnz
mov
add
jl
pop
call
ret
xor
add
inc
pusha
sub
adc
add
push
and
mov
push
mov
sbb
mov
xchg
dec
and
mov
sub
xor
imul
adc
xor
jb
ret
lea
outsl
cmpl
jbe
insb
and
mov
pop
cltd
pop
jno
dec
aaa
rcr
add
mov
lea
or
les
or
add
mov
mov
mov
loopne
jbe
mov
dec
or
and
popf
nop
or
adc
cmpsb
inc
xor
xor
lea
sti
push
pop
pusha
mov
cmp
jg
leave
sub
repz
mov
outsb
mov
jae
or
sbb
xchg
rcll
pop
mov
sub
orb
xor
or
mov
or
popl
sbb
outsl
add
xchg
cmpsb
push
cmc
hlt
pop
push
cmp
data16
lret
dec
out
push
cmp
jge
filds
and
jmp
add
inc
xor
mov
mov
xchg
pushf
pop
and
push
push
insb
arpl
xor
mov
loopne
add
jl
add
fdivs
icebp
gs
out
jg
push
shll
sub
add
orl
popa
and
cmpsl
push
mov
scas
inc
cmp
inc
inc
mov
inc
out
push
pop
or
pop
popa
jl
rolb
ja
xchg
in
sbb
or
adc
and
nop
lock
inc
loopne
mov
movsb
int
inc
pop
leave
mov
lock
sbb
inc
xor
push
xchg
adc
adc
pop
xchg
subl
pop
and
enter
or
es
adc
js
push
enter
adc
hlt
lret
decl
testb
and
lds
test
adcl
pop
pop
outsb
clc
nop
push
xchg
push
pop
enter
loop
pusha
out
or
inc
test
add
pop
punpckhwd
or
ja
popl
fsubs
mov
lods
sahf
lea
addb
push
add
add
push
mov
pop
movzbl
xchg
inc
xchg
or
push
rolb
fdivrs
or
jnp
pushf
lds
xor
push
rcrl
lock
or
aas
cli
or
xchg
push
cmp
cmp
sets
xor
lods
or
or
xchg
jne
or
cmp
je
mov
push
aad
mov
testb
cmp
jge
imul
jge
push
or
inc
pushf
imul
std
mov
pop
sbb
dec
adc
dec
fisubrs
sbb
adc
or
fdivl
incl
loopne
add
push
push
push
notl
dec
movsb
out
inc
ret
cs
or
and
add
xchg
xor
pop
push
mov
jmp
mov
push
jle
mov
push
xor
outsl
div
pop
cmpsl
mov
dec
mull
mov
adc
rorl
dec
sbb
inc
mov
and
pusha
in
jle
pop
shr
int
pop
mov
jle
push
and
in
sub
dec
idivl
jmp
jle
cmpb
and
pop
movb
pop
xor
clc
inc
test
stc
add
fistpl
inc
cmp
jne
popa
dec
shlb
or
dec
leave
push
push
or
ret
jmp
xor
mov
mov
dec
push
push
push
pushf
or
adc
jge
or
fcomi
push
push
pusha
ljmp
adc
cmpsl
and
lock
mov
jbe
popl
jg
sbb
add
ret
mov
cmp
lret
or
lahf
push
shlb
inc
adc
int
outsb
fcompl
mov
mov
lods
es
js
shrb
icebp
xchg
int3
push
cmp
jae
sbb
xchg
outsb
mov
dec
mov
mov
mov
push
and
dec
push
jmp
sub
add
das
add
mov
ret
sbb
mov
decl
adc
add
cs
sbb
fistps
inc
add
fistpll
dec
movb
mov
or
or
jns
je
loope
neg
inc
fisttpl
jmp
xor
mov
frstor
add
push
sub
fdivs
es
movsl
jmp
or
mov
inc
cmpsb
xor
out
mov
lahf
or
and
push
push
xor
xchg
push
out
jns
dec
add
pop
fs
sgdtl
shll
add
xor
lds
orl
jne
fldz
jmp
mov
xchg
jecxz
mov
sarb
inc
out
inc
sub
sbb
add
sti
aaa
pop
jns
fchs
and
adcl
rcrl
je
ds
mov
add
fnstsw
not
and
lahf
mov
mov
test
sbb
in
cmp
inc
cmp
enter
cmp
push
xchg
add
pusha
jno
daa
pusha
test
das
dec
add
add
test
and
add
cwtl
je
dec
add
inc
inc
iret
rcrb
addr16
xchg
add
pop
jae
jg
daa
movl
jae
push
nop
or
and
sti
adc
out
iret
inc
insb
outsl
bound
insb
push
jb
or
inc
insl
je
imul
xor
push
aam
dec
out
fs
ret
sbb
sbb
scas
clc
lods
jno
lea
sub
xor
arpl
movsb
cmp
ss
aam
je
sti
mov
mov
push
pop
sub
arpl
mov
or
fldenv
icebp
adcb
pop
cmpl
movsb
pop
daa
sub
cwtl
sbb
add
mov
add
out
jnp
aas
inc
jne
or
xchg
aas
adc
pop
mov
movsb
jbe
inc
push
gs
imul
push
std
and
jb
mov
in
test
incb
cmp
jp
push
push
xchg
dec
in
mov
cld
andps
sbb
push
clc
cvtps2pd
sbb
dec
call
jns
out
and
push
fnsave
int
testl
out
sti
jg
sub
mov
dec
xchg
push
sub
or
aas
mov
add
lds
inc
mov
dec
push
mov
pop
xchg
cs
or
int3
sbb
inc
adc
outsb
pop
add
es
push
add
out
dec
adc
xlat
sbb
cmp
mov
adc
inc
or
mov
test
movsb
test
mov
adc
lods
sub
scas
dec
pusha
sub
fucomp
pop
adc
cli
sub
xchg
das
in
mov
pusha
enter
cmp
subb
iret
mov
inc
mov
scas
bound
fsts
or
insl
in
call
aam
leave
leave
in
in
out
out
enter
scas
rcl
ror
dec
push
jns
scas
fs
scas
loopne
lods
pop
fs
scas
enter
push
loope
scas
bound
pop
sahf
and
xor
xor
pop
xchg
imul
cmp
add
enter
jnp
add
inc
push
sbb
pop
bound
add
adc
mov
xchg
mov
and
mov
adc
adc
notl
sbb
add
jbe
add
faddl
add
fdiv
mov
and
xchg
or
dec
outsl
imul
add
jecxz
ss
add
add
pop
pop
push
pop
or
dec
jne
test
repnz
sbb
lods
fists
stc
sbb
lock
jg
adc
lahf
mov
push
or
sbb
dec
into
dec
pop
push
inc
or
xor
and
pop
jns
mov
sub
jo
movsb
dec
adc
lea
js
cmpsb
in
in
cmp
xlat
or
jno
out
add
mov
xor
ss
add
sub
stos
divl
cmpsl
mov
and
or
nop
les
jmp
pop
mov
mov
mov
add
xchg
xlat
loope
dec
sbb
jmp
inc
test
insb
mov
arpl
inc
mov
inc
sub
mov
ret
mov
nop
sbb
mov
ja
dec
sub
lahf
push
cmp
addb
out
push
enter
mov
jnp
inc
push
cmpsl
shll
push
xor
jae
in
inc
dec
leave
inc
in
mov
mov
mov
pop
dec
add
sbb
fcmovnb
iret
subl
pop
subb
push
inc
loope
lcall
xor
nop
std
add
ljmp
inc
aaa
xchg
push
pop
sub
xchg
aaa
jno
nop
xchg
sbb
mov
js
dec
jmp
mov
and
or
out
dec
orb
movl
in
sub
sub
inc
push
jbe
repz
xor
add
cmp
sbb
data16
adc
mov
xor
int3
inc
pushf
sahf
sahf
or
adc
xchg
roll
add
sub
or
xor
arpl
cli
jnp
jbe
loopne
lock
mov
add
dec
loopne
cltd
xorb
lcall
insb
xor
lds
lds
add
cli
or
fwait
adc
pop
mov
pop
jnp
std
sbb
adc
das
sbb
test
out
xor
jo
cmp
push
xor
and
sub
or
xchg
pop
inc
dec
clc
dec
lock
pop
inc
inc
push
push
roll
push
sub
outsl
dec
repnz
dec
shlb
in
sub
xlat
jno
dec
jne
sbb
rcrb
ret
in
xor
dec
lock
inc
mov
xchg
lret
pop
shll
adc
add
icebp
lret
cmpb
lret
or
xchg
mov
popa
push
mov
or
stos
inc
sbb
or
sbb
aas
pop
mov
mov
sbb
out
xor
adc
aaa
mov
nop
aam
orb
movsb
and
push
inc
or
stos
cmp
or
jmp
mov
clc
or
inc
loopne
out
repz
pushf
insb
pop
or
pop
mov
cmpsb
hlt
lods
pusha
pcmpeqb
popf
les
sbb
hlt
lock
xor
test
mov
repz
repz
add
inc
mov
fisubrs
or
xorb
negb
fs
and
enter
xchg
nop
lcall
dec
ja
cmpb
repz
adc
out
out
je
or
je
or
popa
mov
add
test
rorl
jle
les
add
dec
push
insb
fbstp
je
jmp
mov
in
popa
xlat
mov
std
xchg
fwait
ss
mov
inc
mov
xor
xor
dec
inc
in
jl
sub
inc
sub
mov
and
enter
inc
sbb
xchg
ja
sbb
adc
pop
adc
dec
adc
cwtl
inc
inc
mov
jo
mov
ja
fwait
sub
xchg
pop
mov
pop
inc
mov
enter
aam
movsb
and
pop
movsl
fsubrp
mov
adc
ret
and
js
or
ss
xor
pop
fcoms
and
je
lcall
test
mov
xchg
add
push
movsb
enter
sbb
add
lret
cs
adc
add
nop
and
xor
dec
gs
sub
xchg
add
je
enter
jnp
add
arpl
xor
add
iret
es
and
dec
insb
or
mov
add
xchg
iret
dec
xor
xchg
inc
sahf
xchg
scas
fldcw
or
dec
fs
lret
add
pop
aaa
das
fwait
add
outsl
add
push
cwtl
push
jge
sbb
sub
or
jne
push
and
test
mov
fcomp
jge
jge
dec
outsl
fs
mov
leave
insb
gs
aas
push
xchg
xchg
mov
movsb
addr16
adc
loope
or
aaa
jb
pop
sub
in
pop
das
or
je
jae
das
adc
je
in
aaa
lea
pop
inc
outsl
bound
and
and
push
pop
dec
rcrb
sarb
lock
and
xor
outsl
sbb
push
sbb
or
and
ss
xor
pop
push
mov
jmp
push
push
push
or
xor
push
insb
arpl
aaa
sub
imul
inc
sub
mov
or
push
adc
outsb
push
mov
sub
push
inc
les
addb
fildl
mov
push
pop
pop
push
inc
pop
inc
dec
inc
pop
inc
push
pop
add
add
data16
jno
adc
in
xor
push
mov
dec
pop
xor
xor
jp
popa
imul
push
push
pop
aaa
sbb
or
das
push
dec
and
lret
iret
pop
or
pop
mov
inc
mov
test
push
xor
add
cld
jae
cmp
mov
sti
dec
sbb
jle
inc
mov
popa
pushw
xor
aaa
or
sbb
dec
inc
decb
cmpsl
inc
sub
jo
popa
cmp
sub
insb
xlat
push
adc
insb
push
imul
jo
cld
addr16
pop
jp
sub
inc
adc
in
jg
inc
pop
dec
dec
inc
inc
dec
dec
inc
push
jg
aas
xor
or
sbb
adc
cmp
nop
pop
dec
push
mov
or
notl
cmp
pop
fists
adc
push
in
pusha
push
test
mov
jne
popa
push
mov
mov
gs
inc
inc
and
inc
xchg
sbb
cmp
sub
ret
push
mov
adc
push
aam
or
xor
inc
pop
pop
push
push
iret
fnstenv
test
aas
call
mov
or
enter
pop
and
push
xor
orps
inc
inc
xor
insl
ja
jbe
xchg
jl
dec
xor
pop
or
cmpsl
push
sbb
push
mov
pop
push
cs
je
sbb
lret
insb
pop
pop
add
sub
dec
shll
sbb
es
and
stos
pop
pop
lods
inc
cmp
pop
or
mov
rcrl
push
test
in
lret
xor
adc
rcrl
pop
pop
push
push
dec
jne
cmp
push
pusha
enter
ds
imul
cli
insb
je
imul
inc
mov
outsl
outsl
jne
cwtl
stos
push
movsb
cmp
pusha
mov
jne
and
pop
pop
mov
cmp
and
pop
pop
popa
add
add
mov
movl
clc
loopne
in
xchg
inc
mov
push
inc
push
stc
addr16
and
inc
cld
fwait
orl
xor
ljmp
pop
iret
xor
popf
aas
or
in
jp
xor
push
inc
rcrl
xor
sub
jne
push
xor
pop
ja
push
jo
cmpb
push
and
mov
push
push
add
jmp
outsl
mov
xchg
jne
cwtl
lea
dec
push
ss
and
push
insb
rorl
mov
or
movsb
add
jbe
movsl
adc
sub
sbb
cmp
pop
pop
and
cmp
fidivrl
mov
cmp
and
insl
aas
xor
xor
xor
aaa
cmp
and
lcall
cmp
in
popf
cmp
xor
outsl
test
cmp
xor
xor
aas
push
dec
xor
aas
cmp
fisttpll
aas
xor
inc
mov
mov
aas
cmp
jg
dec
lcall
cmp
mov
aas
sti
adc
aas
cmp
sub
inc
xor
cmp
rorl
xor
les
inc
aas
ss
aas
comiss
xor
cltd
push
mov
ds
sub
ss
push
push
aas
mov
aaa
pushl
rorl
mov
scas
nop
push
lods
xor
ja
mov
xor
add
mov
inc
xor
rol
xor
cmp
or
aas
jle
add
xor
mov
ja
or
jle
cmp
arpl
das
nop
mov
cmp
xor
xor
cmp
or
aaa
das
cmp
enter
xor
or
xor
cs
adc
aaa
cmp
xor
jl
pushf
inc
cmp
xor
orl
or
in
pop
sbb
das
cmp
xchg
in
cmp
xor
adc
dec
xor
cmp
xor
add
add
jg
outsl
mov
adc
enter
dec
add
add
xor
xor
push
enter
xor
xor
xor
cmp
shll
adc
shrl
and
aaa
mov
mov
or
and
fsubrs
cmp
ss
pop
mov
xor
xor
add
das
xor
jb
stc
add
xor
or
dec
add
addr16
fsts
dec
xor
inc
mov
adc
add
and
out
mov
add
sbb
mov
push
jmp
adc
imul
push
inc
lret
mov
inc
cmp
rolb
sbb
mov
jae
mov
adc
rclb
hlt
je
gs
mov
add
sbb
jno
add
adc
daa
lahf
dec
lret
add
enter
dec
mov
int3
ss
les
adc
pop
cmpsb
into
add
push
mov
xchg
lock
jb
test
pop
sub
fcom
jo
lea
dec
xchg
arpl
pop
nop
data16
incb
jmp
testl
adc
sub
add
pusha
push
mov
pop
leave
sarb
push
sbb
movsb
add
outsb
popa
mov
nop
pop
mov
je
sarb
lret
xchg
cmp
enter
and
sbb
inc
icebp
aad
adc
or
cmp
or
mov
xor
mov
les
dec
js
sbb
leave
aaa
and
mov
xor
sarb
jne
insl
fnstenv
dec
movsl
ret
sub
clc
aad
mov
push
out
clc
add
ficoml
fmuls
dec
iret
jp
inc
shrl
and
or
in
or
and
das
sbb
push
test
push
les
mov
mov
mov
nop
mov
push
pusha
nop
mov
les
add
push
lods
cmp
mov
lods
ss
fcom
sub
loopne
mov
cwtl
in
jb
inc
or
dec
loope
sbb
inc
add
in
loop
fsub
scas
jge
push
sbb
es
jecxz
les
and
xor
gs
jl
sbb
inc
or
inc
fs
push
nop
in
mov
sbb
inc
pop
jb
in
in
add
call
repnz
popa
and
dec
out
roll
imul
clc
fcomi
xchg
jnp
nop
repnz
sbb
ja
jno
add
jb
push
pop
dec
movups
ret
test
adc
call
pop
adc
aad
in
cltd
in
in
pop
loopne
xor
add
mov
gs
pop
fdivrl
nop
mov
call
cmpb
repz
mov
fstp
mov
sub
push
add
dec
aam
aam
shr
or
mov
bound
push
in
les
enter
cmp
mov
cmp
daa
push
movsl
mov
je
stc
ds
popf
jl
xchg
push
nop
xchg
add
daa
jne
lret
pop
jmp
mov
mov
mov
xor
lods
test
mov
push
movsb
imul
jne
xchg
idivb
lcall
in
pushf
pushf
test
cmc
inc
mov
iret
and
iret
out
pop
mov
fbld
sbb
mov
sub
fidivs
or
loopne
nop
imul
lods
sbb
mov
bound
or
jl
data16
test
ljmp
dec
cmp
ljmp
mov
add
sub
xchg
pop
inc
jp
mov
popf
lar
scas
mov
dec
outsl
int
scas
pop
fistpl
pop
pop
fisubrl
xchg
shl
push
or
xchg
pop
dec
push
ljmp
and
sub
mov
mov
cmp
sbb
dec
mov
rep
in
ret
mov
jp
pop
jno
rcrl
push
jnp
subb
jns
push
mov
fs
inc
inc
in
es
nop
xchg
add
push
lock
and
cmp
xor
cmp
rcll
add
mov
movsl
rclb
xchg
stos
push
pop
jl
xor
xchg
xor
sub
jbe
and
sbb
sbb
and
jb
sbb
add
mov
mov
fldenv
xchg
fmuls
lds
aaa
aaa
adc
mov
sub
dec
addl
dec
push
inc
cs
movsb
pop
rorb
inc
xchg
and
sbbl
add
xor
fildl
ss
pusha
dec
dec
dec
arpl
std
inc
pop
pop
inc
push
push
cmpsb
dec
push
pop
mov
pop
push
xchg
dec
ret
or
dec
fnsave
xchg
lock
outsl
orl
test
mov
inc
addr16
push
dec
ret
out
mov
or
popa
je
mov
idivb
outsb
outsl
mov
pop
and
shll
add
pushf
push
addr16
or
ret
pop
jb
daa
or
aas
aaa
cmpb
xor
bound
inc
adc
xor
sub
inc
push
in
and
xor
inc
jge
fs
cmp
add
xor
xchg
in
pop
aas
mov
fisttps
aam
pop
push
dec
dec
push
push
loope
test
push
dec
inc
pop
jnp
mov
or
pop
jge
mov
xchg
jne
jo
push
sub
xor
sub
xchg
out
mov
add
xor
cmp
xor
arpl
gs
pop
scas
repnz
das
lods
dec
and
dec
or
cmpsl
pop
mov
xor
xor
add
push
xor
add
cmp
jno
rcll
or
lahf
das
cmp
xchg
sbb
dec
aaa
add
add
fsubl
fldt
adc
or
or
imul
jle
sub
pop
xlat
dec
adc
aas
out
mov
mov
and
cs
aad
cmp
sub
add
pop
inc
add
popa
and
pop
decl
xchg
adc
shlb
push
enter
cmp
xchg
andl
ret
jecxz
pop
and
fmuls
mov
dec
or
orl
mov
jl
pop
and
and
jecxz
mov
mov
xchg
dec
bound
push
hlt
mov
jg
xchg
test
inc
sbb
pusha
aam
mov
ljmp
dec
dec
inc
inc
dec
pop
dec
inc
dec
add
addb
out
xchg
insl
cmp
or
pop
sbb
aas
cmpsl
or
cwtl
nop
cmp
addb
inc
stc
aad
loopne
xlat
jnp
data16
xor
xor
test
jle
jg
xor
sub
cmp
gs
scas
xor
xor
inc
inc
sub
out
xorl
xor
or
in
insl
pusha
pop
ss
inc
inc
xor
outsb
cmp
inc
pop
inc
xor
inc
inc
clc
idiv
add
inc
cmp
xor
fs
arpl
add
cmp
data16
arpl
cmpsb
out
pop
add
pop
xor
xor
pop
lahf
sub
mov
mov
pop
cs
inc
add
movsl
pop
adc
or
pop
push
sbb
adc
mov
mov
orl
sarl
pop
bound
imul
iret
push
inc
dec
push
push
pop
inc
add
mov
das
xor
test
mov
mov
mov
cmp
cmp
je
insb
out
daa
adc
addr16
sahf
clc
add
das
jae
add
mov
mov
pop
repnz
inc
and
jne
lods
cld
cmp
dec
ja
mov
and
inc
pop
dec
mov
fs
xor
imul
dec
shlb
test
iret
jb
inc
pop
pop
add
cld
lds
lock
inc
fsubrs
or
mov
sbb
call
repnz
in
xchg
push
inc
lcall
leave
and
cld
pop
std
lea
sub
lods
subl
pop
jo
movsb
in
test
cmp
fs
cld
adc
rorb
outsl
pop
pop
dec
sbb
push
mov
out
pop
nop
sbb
push
sub
in
push
insb
adc
sbb
inc
mov
cltd
add
sub
xchg
jbe
inc
mov
cld
loope
mov
lea
jbe
repnz
and
cmp
cld
gs
jno
and
mov
daa
jne
roll
and
pop
xchg
jns
pop
insb
pop
sar
adc
xorb
imul
mov
adc
pop
mov
test
and
xor
ljmp
cs
sbb
rclb
jns
dec
fdivrs
xchg
lock
cmp
push
sbb
cmp
lock
test
nop
mov
jae
cwtl
mov
inc
popf
call
xchg
or
xor
mov
xor
xor
in
cs
sbb
and
in
rclb
gs
adc
inc
cmp
lods
loop
lret
lahf
sbb
jno
bound
add
cs
push
lea
xchg
cs
inc
inc
pop
and
jmp
scas
and
rol
xor
push
xchg
add
push
je
push
pop
push
fs
push
inc
xor
xor
pop
call
and
and
in
movsl
add
push
and
jo
pop
inc
push
jae
scas
push
push
stos
sbbb
sub
aaa
test
mov
jmp
out
and
pop
push
ds
xor
adc
clc
mov
dec
rorl
mov
repz
jbe
fs
xchg
hlt
sbb
sarl
fistpll
fimuls
pop
push
je
and
fistpl
scas
movsb
push
loope
mov
mov
dec
fnstsw
int3
std
dec
repnz
dec
pop
xchg
or
mov
sbb
dec
les
xchg
cmp
push
les
sub
xor
sub
inc
sarb
nop
mov
loope
repz
cmp
push
adc
mov
adc
push
mov
test
mov
add
pusha
sbb
adc
iret
push
cmp
sub
test
ret
jae
std
mov
clc
movsb
xchg
nop
dec
add
xor
cmp
std
scas
movsb
add
push
adc
mov
adc
or
cwtl
cmp
pop
sbb
xchg
xchg
nop
or
and
dec
cmpsb
nop
nop
cmp
test
mov
nop
test
mov
ret
outsl
cmpb
roll
sub
push
cmc
sub
lret
enter
incb
xchg
sub
xchg
aam
sbb
add
sbb
negb
lods
push
pop
push
sub
mov
je
fbld
aam
jp
push
pusha
imul
das
das
mov
int3
punpckhbw
pop
cs
das
aas
pop
std
call
inc
xor
cmp
inc
xor
inc
inc
add
mov
inc
xor
inc
int
mov
clc
mov
scas
mov
popa
outsl
bound
mov
ds
jl
sti
add
das
shll
das
add
pop
mov
inc
add
int3
aam
cmpsb
je,pn
adc
aaa
ja
addl
ja
aas
fisubrl
enter
jo
add
outsb
xor
mov
xchg
pop
dec
ja
xchg
mov
adc
daa
mov
cmp
push
repz
mov
cld
xchg
or
dec
dec
inc
lods
das
test
jne
cmpsb
scas
and
jns
push
pop
mov
out
or
pop
adc
fbld
or
insb
jae
cmpsb
add
test
inc
xlat
push
aas
call
jl
or
pop
adc
pop
or
sbb
cmp
add
js
enter
pushf
add
sbb
pop
cmpsb
dec
je
je
mov
int
push
cld
adc
jne
sahf
dec
sbb
loope
lock
fdivl
sti
pop
push
out
lea
xchg
add
enter
in
jo
mov
insb
or
cmpsb
insb
fmull
lret
push
xchg
jo
mov
enter
cli
mov
xchg
pop
ljmp
sub
aaa
leave
sbb
xchg
fs
icebp
push
mov
dec
xor
pusha
pusha
nop
je
movsb
xor
jo
fwait
pop
lret
leave
pop
pop
pop
inc
jb
nop
inc
and
inc
jb
push
push
pop
xchg
dec
push
xchg
dec
dec
dec
insb
sbb
inc
push
sbb
fs
add
cmp
dec
gs
scas
cmp
mov
nop
push
push
ljmp
pop
xor
pushf
and
jb
pushf
sub
push
sbb
sub
push
xchg
and
sbb
in
icebp
mov
cmp
push
les
cmp
sub
mov
sbb
das
aaa
nop
repz
data16
cmp
jl
insl
pop
shlb
lea
outsb
add
adc
int
dec
lret
sbb
pop
scas
movsb
jne
push
orb
or
mov
or
pop
aas
mov
cld
repnz
incb
xchg
push
cs
add
add
nop
mov
xchg
lret
clc
repnz
bnd
pop
lock
mov
mov
divl
test
sub
leavew
out
movsb
movsl
push
jo
imul
popf
bound
cltd
call
adcl
lds
push
loopne
int
jbe,pn
pop
push
fdivs
enter
mov
repnz
cmpsl
dec
and
in
mov
sbb
shr
push
inc
psubsb
add
pop
xor
jb
and
pop
xchg
mov
sar
push
mov
test
sarb
mov
xor
jmp
test
xorl
sub
inc
dec
xor
inc
push
pop
push
sub
inc
cld
cld
sti
fsubs
pop
inc
cld
inc
pop
push
cmp
push
push
popf
jmp
clc
lea
dec
popa
ret
add
sub
movsb
cli
call
dec
lea
bound
js
push
or
sub
mov
test
pop
xlat
rol
adc
das
movsl
mov
sbb
inc
dec
push
push
aas
ljmp
pop
add
dec
inc
popf
inc
ds
dec
dec
push
pop
xor
lret
out
scas
mov
pop
aas
mov
pop
push
dec
inc
and
push
dec
sbb
mov
adc
inc
pop
dec
dec
dec
scas
int3
xor
dec
sti
fcmovbe
mov
push
aas
inc
dec
push
inc
inc
dec
pop
lock
xchg
nop
inc
push
or
dec
es
inc
aas
cmc
push
pop
xor
pop
pop
and
push
outsl
adc
xchg
mov
push
roll
pop
imul
fsubr
sbb
lock
sar
ss
push
sahf
mov
inc
xor
cmpsl
scas
cmpsb
js
adc
xchg
add
addr16
cmp
sub
adc
sub
addr16
cmp
cwtl
js
fistpll
aam
sbb
fstpt
std
xchg
add
lea
fsubs
jnp
xchg
mov
scas
dec
fdivrl
jo
cld
mov
push
test
add
fistps
mov
stc
in
int3
add
mov
nop
rolb
ja
sub
xor
mov
pushl
jg
and
inc
cmp
sub
sub
sub
sub
inc
cmp
and
xor
pop
xor
dec
xchg
pop
jb
sub
push
mov
xlat
mov
push
inc
jb
inc
cltd
lock
xor
pusha
dec
enter
lcall
repz
add
add
mov
pop
and
mov
inc
repnz
sub
addl
enter
in
pop
inc
insl
and
push
or
mov
or
jge
push
rcrb
xchg
dec
mov
iret
aaa
mov
cmp
jle
pop
xchg
push
mov
std
lods
mov
dec
stos
jge
movsl
mov
or
aam
mov
ret
cmp
and
outsl
cmpsl
in
decl
sub
xor
mov
adc
movsb
mov
mov
adc
pop
daa
mov
clc
or
inc
push
jmp
cmp
int3
sbb
xchg
add
mov
xchg
enter
inc
jb
pop
leave
adc
and
pushf
sbb
shl
jb
inc
or
lock
mov
xchg
pushf
pop
mov
mov
add
sbb
cmova
cmp
mov
push
sub
leave
xchg
or
adc
adc
sbb
or
mov
paddusb
jmp
sbb
adc
bound
gs
pop
push
ljmp
insb
insl
outsb
outsl
jo
movsb
jne
ja
jns
add
outsl
imul
aaa
jae
dec
popa
orb
push
push
dec
jns
inc
dec
push
daa
dec
inc
mov
xchg
or
mov
ret
shrb
pop
lcall
dec
add
mov
xchg
jb
or
lcall
pop
push
dec
add
shr
sub
inc
mov
add
rolb
push
mov
mov
lods
repz
loopne
jne
aaa
std
cmp
mov
mov
jge
mov
int3
shrb
add
test
mov
das
lods
mov
sbb
add
cmp
mov
cmp
pop
fisubrs
test
xchg
and
xchg
and
lock
pop
out
imul
dec
imul
roll
or
jmp
iret
shlb
fidivrs
fwait
and
int
shrl
mov
jne
add
mov
inc
lock
sbb
inc
jno
lods
sub
in
lea
and
mov
jo
adc
jl
mulb
inc
cmp
jo
sbb
push
adc
daa
push
dec
inc
push
push
xor
popa
jmp
push
inc
pop
mov
xchg
jbe
jge
pop
or
int
pop
adc
call
add
jae
sub
adc
add
sub
test
loop
xor
cmp
inc
jb
movsb
cmp
shl
rclb
cmp
movsb
movsl
je
jge
jg
test
pop
add
orl
add
popf
jge
xchg
cmp
dec
popf
pop
out
scas
fwait
or
sbb
push
lds
push
xchg
in
fisubl
and
adc
or
sub
inc
sbb
pop
adc
adc
cmp
cmp
and
mov
add
ja
int3
inc
stos
mov
jmp
mov
sub
mov
adc
loopne
add
and
push
push
and
lea
inc
pushl
rcrl
clc
cwtl
or
enter
cmp
inc
popa
mov
sub
or
popf
mov
jo
cmp
adc
inc
pop
cld
xor
xchg
out
dec
lods
dec
shl
jne
outsl
xchg
pop
xor
nop
jge
mov
in
inc
cmp
push
shl
inc
mov
mov
push
pop
sbb
ret
adc
ret
mov
adc
clc
inc
movsb
mov
mov
and
lret
lcall
nop
ss
cmpsl
sti
push
dec
mov
push
jne
imul
mov
and
dec
nop
outsb
jb
dec
lods
adc
xor
adc
daa
fcmovb
dec
inc
ret
sub
cmp
adc
stos
insb
pop
jecxz
xchg
pop
or
jl
loopne
adc
push
or
push
cmp
pusha
aam
sub
add
mov
xchg
xor
jmp
jns
pop
mov
daa
movsb
dec
add
jmp
outsl
adc
sbb
xchg
inc
int3
adc
imul
addb
xor
and
and
test
mov
repz
psubw
and
aam
hlt
adc
nop
lret
aam
add
sbb
sahf
xlat
push
mov
mov
dec
push
arpl
je
pop
dec
push
xchg
out
add
add
add
daa
pop
movsb
jb
ja
jp
push
cmpsb
nop
mov
push
stos
jmp
sbb
in
xchg
and
xorl
sbb
cltd
enterw
sbb
rol
rcr
mov
fwait
cmp
push
push
add
aas
add
lds
sub
adc
imul
mov
lds
std
or
push
xchg
dec
sub
fcomps
call
popf
in
mov
stos
add
mov
cmp
adc
add
imul
jmp
push
outsb
fs
outsl
and
add
and
scas
pop
stos
pop
or
idiv
inc
pop
inc
mov
dec
mov
xor
ret
xor
push
mov
cmp
nop
xchg
dec
pop
inc
aad
les
add
movsb
xor
cwtl
sbb
push
adc
pop
mov
or
sbb
adc
cmp
adc
cmp
adc
jbe
or
fimuls
pop
and
cmp
add
jo
adc
daa
divb
xor
sbb
push
add
add
and
mov
adc
and
stos
or
cmp
add
pop
inc
out
in
adc
sub
and
push
nop
movl
pop
ljmp
dec
loop
xchg
add
push
and
test
dec
xor
daa
or
sbb
adc
push
jb
and
inc
loopne
add
out
push
das
sarl
imul
shrl
adc
call
jb
and
jmp
and
jo
mov
pop
ficompl
inc
fs
push
jo
pushw
imul
sbb
sbbl
lret
dec
ret
mov
insl
push
cmovo
xor
mov
mov
push
and
xchg
rcl
aam
mov
and
and
cmp
and
add
or
leave
fcomps
cmpb
fs
ficoml
enter
stc
push
pusha
test
les
dec
ret
mov
rorb
inc
out
push
pusha
shl
leave
add
mov
add
jmp
mov
sbb
inc
mov
int
fdiv
ret
mov
add
loopne
cmp
cmp
and
jnp
rolb
and
lock
cmpsb
mov
in
mov
sbb
sbb
add
lcall
aad
jmp
incl
mov
test
add
xchg
xchg
jbe
mov
rol
sbb
add
cwtl
cmpb
fstps
fdivs
ret
test
test
subl
xchg
inc
adc
jo
xchg
mov
xor
mov
ds
inc
dec
mov
sbb
mov
rcll
popf
xorb
sbbl
and
jp
nop
pop
inc
xchg
repz
jae
dec
jmp
lret
leave
cmp
push
inc
pop
insb
cs
or
dec
sbb
pop
daa
xchg
mov
add
pop
pusha
or
xchg
inc
cs
and
inc
or
pushf
push
inc
sub
cmp
inc
enter
or
or
and
repz
cmp
cmp
xchg
out
jb
and
or
adc
xchg
lret
and
adc
add
cmp
scas
mov
cmp
imul
push
inc
push
add
lret
pop
ret
lahf
lock
fldcw
adc
nop
outsb
cmp
sub
mov
stos
adc
test
cltd
pop
fwait
dec
dec
in
in
and
fidivl
fimull
adc
and
test
mov
push
loope
ficompl
testl
jo
push
les
push
aas
test
mov
cwtl
sbb
mov
adc
or
push
push
testb
and
jb
lret
xor
adcb
or
rcrl
cli
add
or
es
stos
movsl
xchg
hlt
aas
or
add
test
es
add
sbb
inc
pop
rorl
adc
cmp
adc
loopne
or
xchg
inc
sbb
mov
mov
jecxz
jle
adc
inc
es
ret
add
adc
dec
inc
xchg
inc
jg
add
add
cs
jbe
pop
xchg
aam
xor
imul
sub
xor
xor
sbb
add
adc
sbb
popa
jb
xor
adc
or
adc
cltd
mov
sub
nop
push
fldcw
push
xor
add
negl
pusha
outsl
jnp
xor
test
add
movsl
adc
push
jo
stos
data16
addl
enter
push
jns
out
push
cmp
xchg
xor
inc
pop
push
daa
das
xchg
movsl
in
shll
xchg
ja
fsubs
and
daa
js
jae
or
ja
bound
sbbb
movsb
mov
fistps
shrb
decl
dec
data16
push
rorb
xor
adc
mov
movsb
ja
out
push
inc
push
outsl
insl
pusha
iret
sbb
imul
dec
push
dec
pushf
lahf
cmp
lods
xor
shr
mov
xor
add
adc
inc
cmp
idiv
aas
addb
or
lock
push
sub
jecxz
fdivr
fstp
std
mov
xchg
or
push
mov
aam
push
iret
jl
mov
les
sbb
pop
sbb
jae,pn
jmp
xchg
push
cwtl
enter
repnz
add
ds
add
push
mov
or
in
repz
ret
sar
std
inc
sub
pop
pushf
fstpl
push
xor
pop
xchg
add
dec
rorb
lea
sbb
jbe
lea
subl
and
rorb
lea
enter
lret
les
movsb
mov
sub
dec
bound
cwtl
addr16
in
pop
leave
cwtl
out
sub
fstpt
sbb
or
fcoml
and
xor
push
dec
mov
mov
ret
adc
ja
insl
jae
fbld
ss
in
int
push
imul
xor
add
cltd
scas
inc
cmp
adc
and
xor
movsl
filds
dec
push
push
and
cmpsw
or
lods
mov
mov
stos
emms
adc
ss
jo
and
scas
push
stc
mov
data16
sub
dec
es
clc
sub
add
pop
fsubs
sub
arpl
sub
jmp
xchg
xor
inc
push
xor
loopne
push
mov
push
aam
cld
jnp
jne
or
test
inc
add
outsb
lods
out
in
jle
push
andb
jl
iret
add
imul
sarl
sbb
inc
cmp
or
mov
stc
xor
les
cmp
imul
dec
pop
sbb
mov
out
stc
data16
mov
inc
add
adc
lcall
ss
mov
xor
iret
sarl
mov
mov
adc
filds
cld
push
sahf
out
sbb
int3
aam
movsb
fadds
test
jnp
sti
push
sbb
push
loopne
inc
inc
push
lods
jl
out
ds
in
inc
adc
or
shl
push
movsb
lods
dec
jnp
cmp
push
add
push
mov
imul
push
lcall
jle
xchg
jge
insb
sbb
je
xor
jnp
ss
jl
add
sub
stc
cmpsl
sub
xchg
inc
add
test
or
outsb
mov
dec
nop
mov
inc
push
or
inc
add
xchg
std
movsb
jmp
or
mov
notl
mov
push
adc
adc
xrelease
lods
push
jl
arpl
iret
shll
cwtl
mov
shl
xor
test
mov
lahf
cmpsb
cmp
xor
ja
push
in
mov
push
cwtl
mov
push
adc
in
push
pop
inc
add
push
push
cld
sub
add
pop
loope
adc
sub
mov
dec
dec
dec
test
or
ret
sbb
rolb
xor
popa
and
push
shl
sbbb
adc
jnp
out
push
aas
pop
add
and
cli
dec
data16
xor
lret
int3
enter
enter
fcomp
fxch
xchg
jne
das
in
fnstsw
loope
sbb
adc
xor
mov
mov
and
popa
je
xor
movsl
inc
mov
push
shll
xor
jp
push
adc
das
add
idivl
filds
dec
push
mov
cmp
shlb
or
add
push
and
xchg
jg
mov
push
cld
fistpl
mov
add
and
ds
xor
jns
out
inc
dec
push
pop
sahf
out
sahf
fs
je
test
pushf
movsb
lods
mov
jns
out
int3
aam
int
jns
in
hlt
cld
add
or
iret
repz
sbb
sub
cmpb
repz
dec
dec
dec
outsb
ja
add
add
and
add
gs
dec
mov
jge
enter
push
jle
add
repnz
mov
cmpl
cmp
cmp
jnp
test
rcrl
iret
rcr
mov
jns
pop
add
and
or
in
pop
pop
add
add
fstl
or
push
mov
outsb
adc
mov
cs
jg
or
cmc
push
addb
pop
fisttps
push
out
xchg
adc
cld
or
add
adc
push
dec
xchg
repz
repz
je
cwtl
test
cmpsl
stc
cmp
int3
fsubr
add
sahf
out
sahf
and
inc
push
pop
jo
lahf
out
adcb
mov
outsl
sbbl
push
imul
pusha
aas
mov
push
push
inc
xor
dec
scas
jl
jmp
inc
pop
sbb
push
push
sbb
or
or
test
popaw
xlat
inc
push
js
adc
sbbb
xorb
addb
push
loopne
cmc
js
push
lock
call
adc
jmp
and
pop
add
fidivs
pop
push
insb
xor
repz
stos
cld
cmpsb
lret
xchg
sti
push
test
mov
iret
repz
int3
push
add
or
jnp
out
add
cvttps2pi
iret
repz
inc
adc
insb
or
add
cwtl
sbb
scas
push
adc
or
add
push
sbb
xor
cmp
repz
add
jl
cmp
repz
cmp
les
aam
call
invlpga
pop
adc
out
sahf
addr16
push
adc
out
sahf
add
nop
cmp
sub
pop
out
push
add
repz
repz
push
subb
cmp
addl
int3
mov
sahf
mov
mov
sahf
out
sahf
mov
js
sahf
out
out
nop
ljmp
adc
cmp
idivl
js
mov
or
push
setp
rorl
pop
mov
testb
pop
jno
sub
mov
adc
mov
mov
inc
loop
out
mov
dec
pop
daa
fcomps
push
push
call
repz
push
push
mov
int3
fcompl
cld
or
sbb
repz
jnp
addr16
es
adc
sub
repz
cmp
sbb
addb
mov
andb
xor
or
pop
adc
pop
sbb
and
xor
cmp
ljmp
sti
paddusb
push
incb
pushf
pushf
pushf
pushf
add
adc
xchg
jo
pushf
adc
and
pop
adc
pushf
pushf
pushf
add
sbb
jo
pushf
pushf
add
scas
leave
leave
insl
and
adc
pop
ret
leave
push
or
jbe
out
sahf
out
xorb
mov
cwtl
nop
test
mulb
inc
dec
repz
test
mov
jmp
sbb
xchg
sbb
subl
inc
ret
repz
lock
sbb
sub
push
cmp
repz
jl
pushf
test
cmp
repz
pop
cmp
repz
dec
pop
in
cmp
repz
pushf
and
add
adc
fnstenv
imul
or
jmp
add
pushf
jo
add
adc
call
cmp
pop
or
nop
arpl
add
lods
push
mov
std
xor
cmp
repz
inc
cli
push
stc
iret
repz
push
idivb
repz
cmc
mov
iret
repz
lock
out
sahf
out
scas
lock
sub
out
sahf
out
inc
in
push
in
fs
sahf
out
jmp
ljmp
mov
push
mov
decl
inc
insb
imul
add
cmp
push
mov
ds
ficompl
jno
or
or
add
inc
cmpsl
lods
inc
mov
into
inc
adc
nop
mov
stos
ficompl
insb
jne
jb
inc
addr16
mov
adc
inc
add
pop
roll
inc
xchg
notb
pop
pop
add
das
or
add
add
outsb
push
mov
out
jns
xchg
sub
fldt
cmp
inc
add
xchg
outsl
leave
lods
pop
pop
add
fiaddl
mov
jns
cld
std
out
sahf
out
add
addb
xchg
add
pop
loop
dec
mov
inc
aaa
lea
scas
imul
scas
push
add
adc
sbb
dec
std
xor
adc
outsl
adc
and
xor
adc
iret
repz
es
push
imul
out
cli
mov
cld
add
out
xor
aas
add
mov
stc
push
mov
xor
adc
call
add
xor
gs
xchg
dec
mov
call
fs
inc
xchg
add
out
push
or
rcll
cmp
insl
ds
sbb
jp
jne
gs
enter
out
in
sahf
cmpsl
stc
cmp
cld
push
or
and
inc
jns
out
push
pusha
je
nop
out
sahf
out
mov
fsubr
iret
repz
clc
or
cmp
repz
je
pushf
mov
cmp
repz
stos
outsb
cmp
sub
pusha
js
jns
das
scas
push
and
xor
lahf
out
sahf
inc
dec
push
pop
pusha
and
ds
repz
sbbb
out
cs
dec
mov
lock
cmpsb
push
pusha
andb
in
or
sub
out
sahf
push
jl
int3
lock
out
sahf
ja
push
dec
sbbb
clc
and
cmp
cmp
repz
test
out
call
pop
out
sahf
out
pushf
mov
out
sbb
mov
pop
jl
ds
sahf
out
enter
sahf
out
sahf
leave
leave
leave
leave
leave
lret
out
lret
lret
jns
out
lret
lret
sahf
out
sahf
lret
lret
lret
lret
lret
int3
jns
out
int3
int3
int3
int3
int3
sahf
ja
out
int3
int
pop
jl
sahf
out
pushf
mov
repz
shll
push
insb
test
repz
pushf
mov
in
adc
out
lcall
jge
out
movsb
mov
sahf
out
fsubrp
push
xor
fs
jns
idivl
sar
rcl
shl
jns
out
rcl
rcl
sahf
out
sahf
rcl
rcl
rcl
aam
sahf
ja
inc
pop
je
lea
test
pop
sub
push
ja
jbe
dec
jge
movsl
ss
cmp
daa
mov
loopne
push
pop
insb
jmp
lahf
cmp
mov
xchg
pop
jl
mov
xor
dec
or
pusha
inc
push
pop
rorl
mov
lahf
adc
jnp
imull
pop
jle
inc
scas
jno
imul
ds
es
notl
imull
jle,pt
push
ds
pop
iret
jnp
enter
push
pushf
outsb
clc
mov
jmp
inc
adc
cmp
mov
out
mov
xlat
fadd
dec
push
insb
xor
and
cmpsb
ss
mov
movsb
es
fcompl
cmpsb
push
arpl
mov
daa
neg
jnp
jbe
data16
mov
enter
sahf
jne
mov
es
out
int
ficoms
push
aam
pop
pop
fbstp
outsb
or
push
int3
xor
jle
inc
mov
sbb
xor
add
cld
cmpsb
adc
ficoms
iret
xchg
pop
faddp
xor
shr
out
jle
cs
add
cld
jmp
jmp
cs
call
cmp
pop
dec
pop
testl
sub
dec
push
push
ret
mov
mov
adc
mov
cs
push
pop
inc
dec
cmp
ja
mov
mov
mov
push
fsub
fs
add
data16
pop
neg
add
and
clc
inc
data16
or
aas
inc
cmpsb
mov
inc
push
andb
in
pop
mov
mov
imulb
out
mov
sbb
pop
mov
js
or
push
test
lds
jmp
les
clc
sahf
push
loopne
int3
ja
andb
test
in
mov
fdivl
xor
fdivp
pushf
jnp
mov
pop
ficomps
hlt
out
sbb
push
dec
ss
adc
dec
push
pop
repz
mov
push
hlt
mov
xor
cmp
adc
jnp
sti
push
mov
cwtl
dec
mov
fsubp
jle
testl
add
loopne
xchg
sub
cmpsw
and
pop
push
call
push
dec
daa
scas
xchg
push
clc
mov
aam
or
and
mov
clc
cs
jle
cld
ja
cmp
cmp
or
dec
out
push
push
cmp
out
sahf
cmp
iret
jns
xor
maskmovq
testl
les
push
or
xchg
lods
jbe
fdivrl
loopne
js
cwtl
pop
aaa
dec
push
iret
xor
adc
or
ss
js
iret
jmp
mov
inc
sbb
lds
mov
das
pop
xchg
xchg
cmc
push
sahf
nop
dec
cmpsb
in
mov
xchg
jnp
mov
int3
es
sbb
xor
push
iret
ret
jnp
xor
inc
inc
jg
lcall
add
sub
add
add
add
inc
add
mov
stos
and
mov
jae
adc
or
mov
sub
lahf
mov
inc
add
add
add
add
inc
add
dec
add
cs
add
jbe
cmp
xor
dec
es
add
notb
inc
add
jnp
out
push
dec
aaa
add
pop
inc
sbb
mov
jnp
and
adc
push
pop
fcompl
push
pop
dec
add
inc
add
adc
xchg
push
outsb
lock
loop
push
inc
mov
aaa
insl
mov
jmp
inc
pop
jae
out
sbb
adc
or
repz
mov
push
ja
push
push
cmpl
into
push
and
roll
fstpt
push
mov
or
push
faddp
xlat
mov
or
repz
or
rcrb
dec
arpl
inc
dec
and
inc
push
cs
mov
sti
or
inc
sbb
inc
fdivp
fsubp
jp
dec
dec
push
rsqrtps
lods
ret
jnp
lret
inc
aas
or
sarl
push
add
inc
aas
in
jmp
fimuls
jle
imul
push
dec
pop
pop
pop
test
xchg
iret
paddsw
dec
gs
sbb
frstor
or
and
add
nop
xchg
jo
aam
sub
and
xorb
addb
jne
and
nop
cli
movsb
arpl
or
or
fstl
mov
add
sbb
sub
cld
syscall
str
sbb
xchg
ds
sbb
mov
mov
push
mov
jg
fbstp
or
add
cmp
imul
packuswb
add
decb
ficoml
iret
sub
xor
scas
inc
inc
dec
inc
inc
rclb
xchg
inc
add
push
pusha
inc
inc
push
inc
dec
in
in
dec
add
xchg
dec
inc
and
idiv
mov
push
pop
dec
push
test
add
and
rorb
inc
je
in
inc
sub
or
and
add
dec
xor
outsl
arpl
add
pop
insl
adc
and
fstl
lahf
aam
add
inc
mov
into
jae
daa
insl
daa
test
insl
cwtl
sub
subb
add
adc
push
add
in
mov
xor
or
or
adc
out
mov
andb
andb
enter
adc
jb
fwait
push
push
lock
push
inc
sbb
movsb
cmp
or
and
nop
xor
xchg
sub
fadds
xorb
int3
sub
xchg
sub
inc
or
test
and
inc
outsl
insl
ltr
cmc
inc
add
sbb
sub
mov
mov
adc
es
mov
mov
flds
mov
xor
adc
adcb
jns
inc
sbbb
xchg
adc
or
aaa
and
loope
outsb
lret
adc
inc
prefetcht0
dec
dec
adc
or
dec
dec
dec
dec
sub
cld
shlb
daa
daa
and
hlt
lock
daa
daa
daa
daa
call
daa
daa
daa
fcom
inc
rcll
cmp
leave
leave
leave
enter
enter
leave
leave
sarb
dec
cmp
inc
mov
pushl
inc
xor
inc
inc
and
incl
xchg
loope
add
add
dec
add
repnz
push
into
call
jns
mov
mov
push
push
or
or
loope
test
add
xchg
mov
xor
adc
fiadds
inc
mov
popf
inc
or
movsl
sub
sub
cmp
push
push
xchg
xor
or
or
cli
adc
das
gs
in
incl
cmp
pop
inc
divb
mov
pop
dec
ds
inc
inc
add
push
ds
jl
std
lcall
leave
xchg
dec
adc
jb
mov
lock
inc
xlat
ss
xchg
mov
or
sbb
ds
push
or
ja
or
aaa
push
xchg
and
call
in
xchg
adc
les
sub
movsl
jne
push
mov
xchg
mov
or
adc
cmc
sub
add
inc
stos
add
inc
idivl
inc
xchg
jl
lahf
push
cld
cmp
inc
xchg
and
cmp
inc
fsincos
ja
pop
jo
add
xchg
jl
sub
dec
les
aas
inc
ds
cld
incl
repnz
ds
std
incl
cld
inc
mov
sub
std
decl
sub
xchg
jl
cld
jge
pushl
std
call
lea
jb
xor
and
cld
ljmp
stc
push
bnd
inc
cli
inc
popa
sbbb
xchg
mov
pushf
test
pushf
outsl
test
pushl
repnz
and
mov
gs
cmpb
movsl
fwait
jmp
and
dec
dec
cmp
mov
testl
cmp
or
je
inc
xor
les
les
or
rcl
dec
test
adc
sub
pop
in
pop
notb
les
add
mov
adcl
push
call
inc
pop
ret
negl
scas
add
push
clc
pop
out
loope
cmp
mov
stos
clc
mov
pop
pop
divl
adc
mov
cwtl
inc
roll
mov
testl
std
testl
adc
dec
cmpl
inc
sub
mov
jmp
loope
aaa
sbb
lds
jecxz
and
xor
les
aas
dec
scas
sbb
inc
mov
aaa
and
add
gs
lret
incl
leave
inc
and
les
repnz
push
enter
les
cmp
adc
clc
cmpb
add
cmpsb
int3
cmc
sbb
ret
sbb
ja
mov
and
and
cmp
nop
lret
lds
incl
rep
mov
mov
mov
pop
mov
mov
ljmp
je
inc
jmp
lahf
add
ljmp
sbb
cwtl
pop
das
adc
fcoml
jo
insb
les
xchg
dec
mov
les
xchg
push
daa
adc
and
or
dec
lahf
cwtl
push
sub
call
pop
cmc
jl
xchg
and
jmp
adcb
incl
test
fisttpll
bound
mov
les
les
in
jl
clc
call
push
push
xor
pop
insb
aam
repnz
dec
lea
xchg
mov
xchg
jo
xchg
pusha
stc
and
mov
lcall
pushl
dec
and
mov
add
jo
inc
jo
inc
pop
mov
inc
add
inc
ss
call
pusha
int3
xchg
fsubrl
xor
adc
mov
lcall
add
notb
sbb
ss
dec
enter
repnz
xchg
xchg
lret
inc
enter
je
inc
xchg
jp
and
inc
ret
mov
mov
mov
push
adc
sbb
xor
xchg
ret
inc
fsubs
mov
xchg
cmp
sarl
setg
adc
dec
and
call
dec
fsubrs
pop
repz
icebp
es
or
mov
sub
notl
imul
in
popa
add
add
and
jmp
pop
mov
adc
lret
les
or
or
lret
les
loope
mov
sbb
mov
mov
clc
jmp
ret
xor
les
in
adc
pop
lods
and
call
sub
push
xchg
les
repnz
les
clc
cmp
add
dec
leave
and
push
push
mov
ret
xchg
nop
inc
jo
jo
inc
jo
pop
ret
inc
stc
test
xchg
inc
jno
sub
in
mov
xor
add
xor
xor
enter
ss
jmp
ja,pt
or
cld
jl
jno
les
les
imul
sbb
test
xor
add
inc
mov
xlat
push
jp
inc
jle
inc
jae
idiv
jmp
adc
pop
clc
jmp
stc
inc
arpl
sbb
pop
test
pop
out
in
xor
das
hlt
xchg
jo
cmp
adc
mov
mov
jae
jp
clc
fists
into
lea
mov
outsl
adc
imul
or
repnz
dec
sarl
pop
and
push
mov
or
push
jg
add
lods
dec
sbb
mov
jle
xor
or
jmp
dec
dec
or
inc
fstps
inc
cld
xor
mov
cmp
cmove
mov
rorb
push
push
lods
add
rorl
adcb
sbb
call
jmp
cld
sub
pop
mov
push
ret
stc
mov
in
or
add
mov
test
cmp
sbbb
psubsw
mov
and
ljmp
imul
add
or
shlb
push
incl
shrb
call
add
mov
pop
leave
adc
push
or
loop
sbb
or
inc
mov
test
fildl
push
inc
or
je
and
adc
sbb
mov
push
and
adc
lock
out
mov
cmp
stos
ret
adc
cmp
in
mov
xor
cmp
jle
in
ret
push
push
or
call
sub
rcrb
call
pop
aas
ss
xor
in
cmp
xchg
mov
dec
or
add
call
sub
shlb
pop
js
or
mov
loope
add
mov
mov
mov
test
xlat
xchg
lock
nop
or
adc
mov
cmc
insb
dec
clc
sub
push
xchg
mov
cmp
xchg
push
fbld
pop
in
test
jne
pop
cmp
mov
ret
pop
cmpsb
test
mov
or
dec
sti
or
out
movsb
fstps
loope
mov
adc
push
imul
mov
jle
xchg
adc
out
jle
cmp
adc
repz
fisttps
sbbb
push
repz
dec
push
bound
and
or
sub
roll
add
add
es
clc
cmp
pop
int
ret
pop
insb
xchg
ljmp
jbe
pop
iret
cli
in
push
xchg
adc
dec
out
aaa
cmpsl
sbb
movsl
rorl
popa
xor
lahf
or
nop
aaa
ss
incl
add
loopne
int3
fmulp
push
pop
test
dec
adc
rolb
jbe
xor
pop
out
adc
cmp
in
xchg
xor
push
dec
js
andl
inc
push
mov
movaps
sbb
and
mov
dec
sub
push
call
cmpsb
test
add
add
aam
add
int
jecxz
push
xchg
jo
mov
cltd
pop
mov
pop
xor
lock
push
call
cmp
or
add
xchg
jne
add
add
test
imul
iret
daa
stc
in
push
in
stc
in
aam
jle
push
jmp
xchg
xchg
aas
cmp
sbb
xchg
call
and
xor
cmp
sub
and
imul
test
and
ds
mov
jmp
add
rclb
add
movl
fadds
andnps
in
push
push
mov
jg
mov
sub
dec
push
jns
jmp
fldt
incl
adc
inc
arpl
repz
insb
pusha
lock
fnstenv
leave
pusha
cmp
insb
jecxz
or
stc
gs
and
imul
fs
jo
push
and
stos
push
push
jmp
dec
push
subb
jns
add
add
pop
cli
call
add
lcall
add
add
add
in
jnp
call
xchg
push
cmpsl
nop
addl
test
pushl
call
pop
sub
pop
adc
mov
dec
or
cmp
in
rolb
adc
mov
lcall
and
add
loope
push
pop
in
das
mov
adc
mov
mov
outsl
mov
out
inc
jae
push
push
js
out
adc
sbb
icebp
push
movsb
rol
or
pop
das
add
xchg
lock
jge
inc
cltd
xor
divl
sti
mov
xor
ret
push
mov
sbb
or
and
add
jnp
sub
xor
leave
xchg
loopne
lods
jmp
cltd
adc
iret
sbb
pop
lea
hlt
test
scas
in
dec
add
repz
add
fistpl
pop
shlb
and
add
mov
xchg
add
xchg
rorl
mov
mov
push
jbe
addl
push
cmp
dec
sbb
xor
mov
jl
scas
int3
incl
and
xchg
movsb
test
sbb
push
ret
lcall
cmpsb
add
addr16
and
and
aaa
sub
mov
xchg
fdivrp
into
add
add
pushl
stc
sbbb
lcall
test
lcall
repnz
ds
repz
incl
cmp
xor
push
je
dec
lock
std
das
or
inc
cld
dec
jne
call
leave
or
decl
popa
dec
icebp
std
ss
lods
xor
push
jbe
push
clc
inc
or
xchg
pop
dec
inc
shll
sub
sbb
test
popa
jbe
or
sub
pop
cld
std
decl
add
jmp
pop
mov
or
icebp
decl
pop
mov
or
out
and
lock
pushl
daa
std
decl
dec
jp,pt
icebp
push
dec
cld
mov
or
jl
push
das
dec
add
call
or
out
push
call
cmp
int
lods
sbbb
or
sub
dec
test
inc
push
xchg
xchg
rcrb
loop
dec
xchg
adc
adc
or
add
add
push
dec
jae
cs
xchg
adc
sub
lock
shl
pushl
jmp
adc
imul
lahf
insl
xlat
popa
jl
add
jge
mov
inc
or
pop
clc
inc
adc
push
fsubl
pop
repz
dec
sub
sub
aas
neg
fstpt
cmpsb
mov
out
fnsave
push
mov
push
inc
inc
dec
ja
stos
iret
test
xlat
push
jae,pt
pop
rol
pop
dec
dec
fdivrs
sahf
imull
sub
adc
and
add
fcomip
mov
push
das
call
sbb
mov
push
sub
or
adc
pushf
xor
xchg
push
decl
inc
nop
mov
jmp
dec
or
add
fists
add
mov
pop
jle
jmp
call
rol
push
rolb
push
dec
out
loope
add
outsb
or
fidivrs
cmp
jae
scas
ficoml
push
or
pop
cmp
push
add
jne
hlt
or
out
fs
mov
gs
push
pushf
movsb
daa
pop
push
sahf
xchg
jl
cmp
jle
fdivs
testb
sbb
inc
inc
cwtl
cmp
and
ds
das
and
mov
inc
clc
xchg
push
xor
dec
sbb
dec
arpl
add
sbb
push
mov
sub
sbb
testl
rorb
xor
loop,pt
inc
fsubrs
incb
stos
dec
popa
xor
mov
jae
fstps
xor
call
mov
ficoms
xor
sbb
iret
stos
ljmp
repnz
and
aad
inc
inc
test
pop
in
xchg
mov
cmp
xchg
cs
div
and
insb
mov
mov
pop
clc
or
lret
push
push
pop
push
mov
xchg
inc
xor
call
in
leave
std
xchg
or
aaa
sbb
cli
dec
mov
in
sub
xor
loopne
cli
mov
fucomip
jmp
divl
push
sbb
out
fldl
outsl
mov
mov
mull
rcrb
sub
or
mov
scas
mov
inc
call
inc
jnp
inc
sbb
push
jno
pop
fcomp
adc
call
mov
push
ret
call
push
idivl
xor
int3
push
pop
aam
and
lods
sbb
jmp
adc
pop
add
dec
jne
sub
mov
lock
in
mov
add
lods
pushf
add
sarb
cli
cmp
cmp
xchg
pushf
lods
idivl
scas
rcl
jmp
add
stc
or
sub
repz
mov
push
lcall
ljmp
cld
dec
mov
insb
mov
dec
sti
pop
jmp
ret
je
adc
inc
pop
jmp
jl
xchg
push
loopne
sub
dec
rcl
mov
pop
pop
ret
jne
insb
push
mov
cwtl
stc
fidivl
aad
pushl
jmp
dec
ds
and
xchg
or
or
div
adc
sbb
cmp
add
and
les
push
dec
mov
mov
sbb
arpl
ss
adc
dec
jne
mov
inc
fs
or
cli
jae
pop
testb
pop
dec
add
mov
dec
or
xchg
sbb
jecxz
sti
dec
dec
push
ljmp
sbb
or
add
lret
fdivs
jle
dec
sarb
ror
adc
jbe
push
adc
cmpsl
loop
enter
or
jl
dec
lcall
std
outsb
cmpsb
dec
addr16
jbe
cmp
lcall
pop
mov
and
dec
mov
sub
lock
sub
cmp
in
mov
adc
sbb
jne
out
jne
add
insb
js
pop
or
cld
jb
adc
add
adc
shlb
call
test
cmpsb
cmp
pop
out
lods
cld
xor
fmull
adc
xchg
cmpsl
or
xor
add
rcpps
fcomp
cmp
jnp
xor
sub
mov
repnz
shll
sub
int3
dec
ret
and
dec
in
push
add
add
or
fcmovb
add
push
fadds
push
jbe
push
sbb
icebp
mov
daa
sbb
icebp
mov
mov
add
ja
mov
mov
sbb
js
insb
or
mov
cs
pushf
xchg
cmp
jg
sub
push
push
mov
xor
cmp
mov
pop
pop
pop
xchg
out
jle
shll
in
mov
call
adc
mov
mov
ret
dec
pop
stos
insb
or
pop
repnz
lcall
add
sbb
jmp
mov
jle
scas
ret
mov
int3
dec
mov
pop
ret
sarl
xor
inc
mov
sub
mov
addr16
adcb
add
push
or
mov
ret
andb
pop
loop
adc
or
xchg
leave
jmp
out
mov
lea
xor
aam
push
out
and
push
aaa
cmp
lock
cli
or
adc
push
pop
sub
sub
outsb
inc
and
call
xlat
insb
jmp
clc
xor
inc
daa
pop
mov
sub
push
inc
and
dec
ds
push
mov
and
pop
inc
in
and
ja
test
stc
loopne
std
and
ret
fldt
out
adc
gs
imul
inc
add
inc
sub
in
mov
dec
adc
mov
loopne
xor
xor
scas
call
iret
pop
inc
es
add
xor
fscale
xor
fmull
sub
ss
mov
mov
dec
mov
repz
sub
ret
jmp
xchg
fbld
fldl
jmp
enter
dec
dec
enter
rorb
add
cld
ror
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
in
leave
leave
push
in
in
cmp
xor
in
in
and
sbb
in
in
adc
hlt
mov
daa
push
dec
inc
pop
es
or
and
fs
incl
adc
fs
add
push
inc
mov
fcomps
ss
xor
sub
inc
insb
adc
lcall
adc
xchg
mov
inc
push
adc
ret
mov
jg
pop
inc
mov
pop
adc
or
in
pop
test
sbb
sub
sub
or
les
push
dec
inc
jg
leave
xchg
and
pusha
dec
iret
jg
test
insb
or
imul
sbb
pusha
les
dec
inc
or
mov
push
ja
sub
push
enter
sub
adc
scas
xchg
and
or
push
pusha
jg
mov
and
enter
hlt
insb
adc
pop
xchg
nop
inc
cmp
jmp
out
jg
outsb
dec
ret
nop
mov
xchg
aas
push
jae
ret
xchg
rorl
cwtl
mov
and
dec
ret
das
dec
ds
ljmp
ljmp
and
xor
int
cmc
ret
dec
testb
pop
pop
and
add
repnz
incl
clc
xor
sbb
call
xchg
cmp
test
jb
outsl
xor
mov
mov
adc
or
adc
call
iret
jle
push
std
and
add
dec
inc
or
pop
jbe
xor
push
maskmovq
pop
mov
sbb
mov
dec
inc
push
inc
xor
cmpl
pop
and
inc
dec
inc
cmp
jne
inc
dec
ret
jle
pop
sbb
jl
test
xchg
mov
mov
sbb
or
jg
scas
push
push
in
adc
inc
add
pusha
into
add
inc
sbb
xor
and
and
mov
inc
adc
cmp
jmp
call
pop
lock
dec
cmpb
sub
js
or
dec
inc
sbb
enter
int
adc
mov
mov
sub
xor
in
jne
int
and
sbb
add
add
add
daa
out
lret
lret
std
cld
lret
and
jmp
jmp
ficoms
mov
push
cmp
cld
adc
pushl
cmp
ja
imul
sub
decl
dec
shll
push
pop
xor
dec
push
pop
aam
fisubs
dec
test
sahf
out
push
lds
dec
into
arpl
nop
dec
das
pop
je
lret
xor
pop
jge
sub
call
inc
je
or
push
pop
jne
iret
addb
sub
lea
mov
shl
icebp
dec
fisubrl
dec
mov
scas
in
and
add
push
jno
mov
xchg
lock
inc
cmpsb
adc
jp
or
add
dec
shlb
inc
pop
xlat
pop
xor
and
adc
pushf
fucom
in
inc
sbb
or
sti
rclb
mov
test
jb
into
in
les
pop
mov
lock
push
je
inc
xor
mov
dec
aas
sar
jmp
inc
ss
add
mov
ja
loope
lret
lea
push
xchg
jbe
incb
out
sub
sbb
mov
cmpsl
test
lea
cmc
and
inc
je
add
xchg
int
incl
loope
ljmp
loopne
decl
adcl
cmp
in
push
call
xlat
data16
arpl
test
cs
fisttpl
gs
jbe
pop
dec
sbb
pop
in
push
cmp
adc
jmp
cmp
or
call
and
loope
lds
or
test
fists
aas
xor
mov
dec
mov
pop
push
sub
cwtl
add
mov
add
iret
sub
jmp
sub
push
or
jo
push
jge
mov
mov
adc
jecxz
nop
nop
pushf
mov
mov
shlb
mov
enter
push
imul
mov
and
fisubs
mov
std
and
cs
and
xchg
xchg
sbb
dec
aaa
dec
xor
pushf
mov
dec
std
pushf
xor
popf
lods
jmp
sub
or
nop
out
cwtl
mov
movsb
inc
dec
gs
sub
cld
test
lret
aaa
push
inc
sub
lods
in
add
jo
and
rcrl
imul
jnp
push
pop
test
or
nop
xchg
cmpl
and
push
ds
mov
outsb
cmpsl
fdivl
push
pusha
pop
test
aas
sbb
loopne
mov
ficomps
mov
jecxz
loopne
stos
call
jns
leave
adc
fldcw
test
adc
inc
iret
call
or
jmp
lods
sbbb
popa
push
xchg
cmpsl
pop
std
add
add
ljmp
loop
push
incl
push
and
movsl
popa
fiaddl
rolb
jnp
inc
fdivrs
dec
sbb
inc
push
fwait
sbb
cli
or
rcrl
dec
xor
mov
cmc
incl
cmc
push
orb
push
xor
iret
xchg
and
adc
lcall
sbb
in
jo
push
pop
and
sbb
push
cs
sbb
sti
addr16
xchg
cwtl
add
dec
mov
mov
mov
addb
xor
lahf
hlt
in
or
or
fwait
je
inc
and
inc
jb
lock
iret
xor
movzbl
nop
mov
push
or
loopne
jl
test
or
dec
les
dec
mov
scas
enter
les
test
inc
lds
xlat
addb
lds
sbb
fists
sar
incl
push
adc
adc
inc
jle
fcom
decl
pop
xchg
jo
add
fldcw
adc
call
jmp
xor
lods
scas
imull
orl
push
stc
call
add
movsb
repnz
dec
loope
mov
rorl
pop
in
add
mov
testl
iret
pop
xchg
bswap
clc
imul
cmp
and
outsl
xchg
ja
cld
ficoms
xor
loop
add
ja
call
mov
xorb
xor
mov
mov
sub
sub
mov
loope
add
mov
cmp
call
xlat
sub
sbb
into
shrb
cmp
xchg
dec
cmp
jg
test
jb
jmp
mov
sbb
test
inc
sahf
mov
cmp
jle
fsubrp
xchg
rcr
xchg
lahf
push
mov
stos
xchg
gs
es
pop
insl
add
neg
xor
cmpsl
or
dec
dec
rcll
insb
jmp
add
lock
insl
mov
mov
cmpsb
xchg
push
cmpsb
hlt
or
jnp
out
icebp
cwtl
popf
add
mov
insb
push
test
xor
pop
sub
xchg
faddl
mov
push
test
fsub
iret
flds
inc
mov
add
push
scas
cmp
pop
in
aad
shlb
iret
and
cmp
mov
xchg
xchg
mov
into
add
pop
adc
dec
mov
mov
dec
mov
cmc
or
or
loopne
imul
xchg
pop
orl
aas
xor
jno
push
xor
and
dec
out
pop
xchg
mov
sbb
lret
aas
mov
add
adc
adc
adc
in
imul
call
dec
push
fstpl
jge
jno
cmc
jmp
dec
pop
push
shlb
lods
or
fwait
lahf
or
icebp
jmp
xor
mov
xchg
jg
or
jg
inc
mov
xchg
dec
sbb
mov
mov
loop
unpckhps
nop
bound
or
push
dec
push
sub
xchg
and
out
orl
jns
aas
pop
jo
pushl
xor
mov
dec
stos
or
dec
push
or
or
mov
inc
lcall
divl
or
fsubrl
cmp
jne
pop
in
cmp
inc
iret
in
sub
mov
push
lcall
mov
inc
call
je
dec
jne
mov
sbb
xor
ljmp
dec
mov
jmp
loop
es
xor
add
xchg
unpcklps
fnstenv
mov
sub
cmp
add
lea
aaa
inc
int
or
mov
mov
popa
xor
pop
mov
xchg
inc
or
sub
dec
sbb
hlt
pop
or
adc
jge
dec
shr
jmp
dec
inc
or
and
mov
dec
or
psubsb
cli
dec
std
in
mov
or
and
mov
inc
aas
jmp
xlat
out
mov
or
int3
orb
loop
into
jne
adc
mov
sbb
dec
xchg
les
scas
gs
add
fldl
imul
jecxz
jne
and
push
decb
shlb
clc
jne
jecxz
out
je
cmp
je
sub
cmp
out
loop
mov
push
add
xor
sbb
ret
jle
cmp
push
dec
lock
imul
out
cmpsb
mov
adc
jl
jo
pop
add
sahf
and
jns
fstpl
sub
sub
xor
je
cmp
loope
in
gs
xchg
je
mov
jmp
inc
jmp
xchg
mov
xor
mov
jmp
cmpl
sarl
loope
dec
mov
or
mov
loope
adc
mov
push
int3
fldenv
sti
jmp
push
in
mov
add
mov
cmp
pop
ret
jge
pop
pop
dec
xlat
pop
xchg
pop
es
adc
rolb
jmp
add
add
jb
js
adcb
or
ret
lea
ret
or
sahf
push
push
out
fwait
daa
and
out
sahf
out
push
sbb
inc
in
xchg
dec
inc
aam
dec
int
outsl
negb
hlt
mov
cmp
cld
or
scas
or
inc
pusha
mov
mov
pop
push
mov
mov
call
mov
pop
and
jl
clc
pop
dec
clc
and
dec
fdivs
jmp
ljmp
andb
xchg
jle
jmp
push
inc
xchg
xor
jge
or
loopne
xor
gs
es
jmp
stos
xchg
cmp
sahf
addb
addl
nop
repnz
xchg
movsl
adc
jge
nop
movsl
aas
xor
into
sbb
stc
pop
call
mov
or
add
mov
adc
adc
in
or
ret
popa
sub
call
fldt
add
xor
or
adc
ret
or
sub
mov
dec
inc
xchg
or
mov
or
je
repnz
add
xor
mov
fildll
mov
sub
fbstp
xor
add
lret
push
out
or
imul
mov
mov
add
stos
aas
iret
xchg
pop
sub
mov
mov
sub
dec
push
xchg
shll
xor
and
lock
out
add
cli
and
add
add
js
add
add
xor
dec
aam
lods
mull
dec
aad
cld
xor
shr
inc
jp
add
call
inc
add
cwtl
inc
mov
xor
in
xor
dec
dec
aad
push
fidivrs
xor
pop
inc
cld
fiaddl
xor
xor
inc
push
and
rolb
movsb
inc
dec
test
dec
loope
pop
mov
lcall
xchg
fs
mov
pop
push
shlb
dec
add
or
xchg
sbb
ljmp
dec
lock
rcl
add
adcl
insl
add
xchg
rclb
es
iret
sbb
add
shlb
faddl
call
fwait
inc
jp
js
mov
xchg
mov
lcall
roll
xlat
popl
jo
cld
out
mov
adc
add
mov
or
or
idivb
xchg
das
add
popl
add
cli
jl
pop
mov
add
clc
shr
jns
or
stc
dec
ficomps
loope
sbb
data16
call
adc
cwtl
sub
mov
xchg
mov
xchg
add
mov
dec
incl
or
inc
mov
mov
shlb
cmp
fldenv
hlt
call
cmp
jge
inc
sbb
clc
mov
in
xchg
dec
adc
add
cmp
iret
in
xchg
ds
jmp
ret
sbb
adc
ret
mov
rclb
je
cmp
lahf
stos
mov
sbb
and
mov
push
hlt
in
push
call
inc
test
pop
movsl
cmc
enter
clc
xchg
add
mov
ja
pushf
sbb
loopne
push
or
cld
pop
add
jmp
xor
pop
sbb
fsincos
jmp
push
inc
jmp
xchg
dec
jne
imul
sbb
xor
fildll
sub
jno
sub
stos
and
and
pop
and
inc
gs
lea
xor
adc
fstl
loopew,pt
in
jp
in
mov
inc
or
daa
sbb
sub
jns,pt
jo
data16
in
lds
jl
mov
sub
roll
adc
loope
lret
jg
sbb
push
xchg
faddl
faddl
testl
push
dec
mulb
ljmp
std
cmp
out
ficompl
fldenv
adc
decl
dec
mov
std
sbb
and
leave
fdivs
fsubs
jmp
xchg
lret
dec
imul
aaa
push
cvtpi2ps
repnz
aaa
ret
ja
call
mov
repz
daa
imul
mov
mov
add
mov
or
lods
and
xor
out
fsubp
inc
push
add
ds
push
push
lret
ret
aas
divb
mov
mov
jno
dec
push
xchg
jmp
outsl
sub
mov
sbb
sbb
cli
and
icebp
adc
push
addl
pop
outsl
inc
jmp
mov
incl
inc
mov
repnz
and
xchg
ret
test
jno
or
jne
jne
nop
xor
aaa
push
xchg
mov
pop
sbb
call
leave
loopne
fstpl
inc
inc
imul
lahf
inc
ja
data16
aam
add
xchg
outsl
outsl
push
arpl
pusha
mov
mov
pop
call
das
out
jne
rcr
shlb
cmp
mov
imul
shrl
or
lock
jnp
mov
repnz
imul
pop
inc
cmp
xor
cld
rcl
and
in
mov
push
pop
mov
inc
or
hlt
mov
pop
mov
std
test
xor
testl
shrb
and
jmp
jb
testl
cmp
jns
lds
cmpsl
adc
pop
xor
cmpl
rcl
out
and
repz
lcall
mov
adc
cmp
push
push
das
test
ss
and
cld
and
cltd
fs
mov
jne
dec
fdivr
cld
int
lret
mov
incl
call
xchg
sti
out
xor
stos
cmc
cmp
lds
scas
insb
leave
les
jecxz
and
jnp
jl
pop
xlat
dec
push
pop
add
sbb
test
and
push
push
dec
or
negl
add
pop
call
fsubs
fs
ret
popa
movsb
mov
lret
inc
in
mov
inc
outsb
inc
and
rorl
sub
or
push
lret
test
cs
je
xchg
test
invd
lds
fldcw
into
stos
and
mov
cmpl
add
adc
incb
in
mov
lock
push
call
fwait
add
fiadds
mov
in
or
lahf
xchg
cmp
or
aaa
mov
icebp
jnp
iret
jne
jp
add
or
mov
mov
loop
cmp
cltd
push
je
cmp
or
sub
test
sbb
bound
pop
scas
pop
popl
jp
in
mov
sbb
add
lret
aam
jo
adc
or
js
roll
in
push
decl
outsl
push
jo
adc
outsb
clc
les
loope
maskmovq
imull
dec
repnz
fstpt
inc
sbb
mov
packuswb
negl
and
push
mov
rep
or
mov
adc
and
jmp
add
fldenv
mov
cwtl
xchg
jo
scas
js
cld
mov
out
mov
sub
es
lcall
sbb
outsl
xchg
add
sbb
std
mov
rorl
ret
adc
into
push
mov
or
subl
bound
shll
pusha
ret
lahf
xor
js
cmp
push
or
mov
inc
add
sbb
or
adc
adc
sbb
adc
popf
fwait
push
adc
orb
and
test
inc
out
mov
or
pop
push
clc
add
jbe,pn
and
aad
mov
cmp
ja
jge
lret
cs
and
in
cmpl
popa
mov
inc
push
xchg
popf
xor
mov
jnp
xchg
aam
lock
adcl
add
imul
add
cmp
inc
jb
or
cld
add
icebp
in
in
cli
and
cmp
insl
rclb
bound
ret
sub
or
adc
jb
push
xorl
push
and
inc
dec
rcrb
cwtl
test
jmp
fistl
xchg
jmp
out
bound
iret
rorl
or
inc
je
sar
mov
push
push
repz
inc
aas
fdivl
sahf
or
or
notl
jns
sub
pop
icebp
add
into
lcall
fisttpl
or
je
call
icebp
fsubrs
dec
lret
test
inc
mov
inc
xchg
iret
hlt
mov
insl
pop
dec
les
and
fs
and
lret
jg
shl
imulb
mov
add
add
jno
mov
or
es
fisubrs
incl
add
repz
in
push
cmp
nop
xor
adc
addl
sbb
lds
rcrb
pop
cmpsb
xchg
inc
mov
dec
or
ljmp
mov
add
push
outsb
lret
or
sub
lcall
shlb
addr16
push
inc
add
pop
iret
mov
mov
sbb
adc
std
pop
cltd
shlb
iret
sbb
dec
or
jp
mov
out
sbb
sbb
shlb
mov
mov
enter
testb
xorl
push
push
or
loopne
iret
aaa
sub
adc
cmp
pop
call
popa
gs
dec
jle
and
mov
sbb
iret
or
rolb
stc
jge
insl
js
call
sbb
mov
push
in
jl
divl
clc
dec
jle
std
jl
sbb
dec
lods
aas
jne
dec
shrl
lahf
sub
popf
cmp
enter
jbe
in
cld
mov
pop
jo
xchg
jbe
xchg
xorb
sbb
jl
rclb
enter
xchg
pop
int
and
movsl
insb
adc
ja
or
in
in
push
xor
adc
arpl
in
dec
dec
xlat
xchg
scas
je
sbb
test
pop
cmpsl
dec
jp
push
sub
mov
sub
je
sbb
xchg
mov
decl
mov
add
mov
dec
jne
mov
add
test
leave
cmp
xlat
inc
ret
fidivs
stos
inc
pop
mov
xchg
push
test
andb
pop
shll
ret
pop
or
mov
lods
jb
cmp
xchg
fld
lea
and
push
dec
inc
mov
sbb
into
cli
call
and
or
clc
idivb
push
cwtl
mov
nop
test
mov
in
pop
jmp
stc
call
inc
mov
test
sbb
adc
mov
lret
popa
add
dec
and
bound
mov
push
mov
push
add
jecxz
xor
or
adc
add
jge
iret
xor
cmp
aaa
mov
sub
iret
mov
or
jmp
jnp
add
adc
dec
jmp
leave
js
addl
jne
xchg
mov
and
inc
les
pop
stc
cmpsl
mov
dec
scas
push
xchg
jo
pop
lods
inc
std
add
adc
leave
add
inc
setne
and
in
or
in
and
jne
es
add
das
loope
cmp
adc
cmpsb
test
call
push
push
dec
add
dec
xchg
mov
call
leave
adc
call
sti
out
movsl
loopne
add
cs
dec
int3
test
lahf
adc
cmp
add
lods
lahf
rolb
pusha
inc
or
sub
orl
mov
cmp
mov
lock
mov
pop
lahf
scas
or
cmp
mov
xor
call
cmp
and
xorb
dec
mov
push
cld
mov
add
cmp
iret
dec
enter
xlat
or
scas
add
or
jae
nop
mov
mov
dec
je
cmp
lea
test
sub
push
jl
cmp
dec
sbb
or
xor
xchg
sub
mov
cmpsl
outsl
aad
or
fisttps
lock
ljmp
jle
or
cmpl
fsubrs
or
add
cmp
sahf
aad
sbb
push
sbb
fisubrs
repnz
adc
pop
sbb
jmp
sti
add
jl
shll
mov
adc
addr16
loopne
inc
jmp
adc
out
pop
je
lods
daa
outsl
add
imul
jl
adc
js
xor
pop
jge
jle
jg
das
add
push
dec
pop
dec
inc
xor
mov
das
push
push
dec
add
dec
or
cltd
jl
xor
xor
testl
jp
xchg
cmp
sub
and
pop
xchg
cmp
jne
je
sub
es
or
les
stc
lods
mov
adc
sub
sbb
mov
stos
lds
mov
or
bnd
dec
jge
mov
mov
cmc
dec
or
xorl
loop
pop
jp
pop
lods
loop
nop
ret
cli
push
cmpsl
fsubl
push
call
xchg
xor
addb
xchg
ret
inc
push
test
and
testb
cmp
pop
adc
aas
add
add
jnp
dec
fldpi
cmpsl
rolb
or
dec
shlb
call
dec
adcb
outsb
add
push
jbe
cmp
dec
jo
insl
pusha
mov
psrld
addl
add
xor
jae
je
jb
dec
inc
bswap
add
pop
push
pop
jmp
fsubrs
pushl
rorb
mov
call
and
or
xchg
xor
movl
jno
add
push
xor
cmp
call
aas
testb
sub
or
pop
gs
fimull
movsb
push
pop
inc
mov
and
mov
push
pop
imul
dec
mov
fdivl
and
mov
or
xchg
sbb
add
xchg
adc
int3
and
lret
cmp
jmp
add
mov
mov
dec
add
or
inc
sbb
add
add
incl
mov
and
aas
in
jmp
pop
push
pop
xorb
push
sbb
out
lock
dec
div
fwait
stos
and
outsl
cmp
loope
mov
or
inc
cmp
dec
or
in
jae
push
or
add
or
push
jo
loope
pushl
jmp
in
cmp
ja
sub
or
mov
push
hlt
ds
sbb
repnz
inc
rorb
pusha
sarl
mov
aaa
movsb
movzwl
push
or
ljmp
bnd
cld
or
lret
je
cld
stc
add
sbb
sbb
jmp
or
ret
pop
mov
loopne
or
dec
sub
jo
cli
nop
pop
subl
sbb
mov
add
jp
lret
jo
and
push
lahf
popa
adc
pop
andl
mov
xlat
add
dec
add
and
push
fbld
jmp
insl
shl
push
adc
jne
sub
call
jg
popf
jge
js
and
cltd
add
lods
adc
or
inc
inc
jl
in
sub
negb
rcrb
mov
call
and
fs
mov
mov
popa
movzbl
sar
out
cli
roll
sbb
add
movb
mov
dec
fs
insb
cwtl
mov
idivb
lds
jge
shll
or
repz
fcoms
sub
pusha
into
rolb
fsubl
stos
inc
inc
jle
leave
in
test
ss
pop
add
stc
cmp
xor
jmp
addl
pop
mov
mov
xlat
adcl
mov
or
fstpt
pop
inc
pop
je
sub
decl
sbb
push
lcall
add
sbb
pop
mov
inc
inc
mov
cmp
cwtl
xor
shll
add
out
sub
sti
add
in
sbb
mov
dec
push
lock
pushl
add
xchg
mov
mulb
es
inc
cmp
xor
in
shl
dec
ficompl
sub
add
mov
pop
fmull
push
jo
adc
cmpb
and
and
mov
jbe
dec
int3
sub
mov
les
or
sarl
movsl
mov
and
mov
adc
test
cli
or
mov
push
dec
adcb
inc
dec
cmp
incl
mov
fwait
xor
std
jbe
stos
xorl
dec
mov
push
decb
test
and
mov
adc
je
dec
fcoml
mov
mov
inc
rcll
cmp
jae
jbe
test
push
cwtl
data16
nop
sub
sub
out
dec
jb
mov
sbb
sarb
xor
xorb
adc
or
push
dec
add
xor
lcall
nop
jmp
add
movsb
lock
jmp
hlt
add
adc
push
pop
and
sub
pop
mov
add
rorb
mov
sbb
fwait
add
cmp
jne
jo
push
push
int3
in
lock
ret
mov
mov
add
jmp
mov
dec
jmp
dec
adc
push
fistpl
stos
sbb
sub
enter
jl
or
pop
xor
jge
lock
inc
lock
lea
out
cli
or
lcall
mov
mov
dec
mov
sub
cli
rolb
inc
jge
insb
push
sti
pop
jl
push
rcll
or
movsb
movsb
or
mov
sbb
push
xchg
mov
scas
mov
mov
cmc
jae
ljmp
lahf
cvtsd2si
les
les
or
mov
je
mov
jmp
pop
aad
or
jmp
das
push
adc
jmp
sbb
cltd
lods
repz
stc
sbb
add
loope
sub
loopne
sti
xchg
add
dec
testl
loopne
roll
pop
and
inc
sub
jmp
push
test
sub
cmpsl
imul
adc
xor
test
mov
add
hlt
jmp
adc
dec
xorl
xor
inc
sub
enter
movsb
push
xor
rorb
cmpsb
add
add
lock
aam
aad
push
stc
rcrb
lea
js
or
fadds
dec
pop
or
fs
shll
sub
outsb
and
pusha
add
mov
in
in
lods
stos
clc
pop
mov
ja
mov
pushf
inc
mov
jne
out
or
shl
cmp
sub
mov
and
jb
jbe
cmp
insb
mov
sar
fcmove
xor
xchg
add
sbb
lea
stos
mov
cltd
sbb
pop
cwtl
sahf
mov
cmp
fwait
std
and
lea
inc
or
inc
pusha
sub
jge
adc
cmp
jbe
jae
jmp
out
adc
or
add
cmp
fisttpll
jp
push
mov
mov
jecxz
aad
rcl
adc
lcall
repnz
mov
dec
and
mov
mov
mov
fstpl
sub
pop
mov
out
push
insl
jb
sbb
add
imul
popf
push
sbb
inc
mov
lcall
sbbb
xor
ja
mov
push
test
sub
mov
outsl
xor
adc
dec
sar
mov
mov
add
mov
mov
add
add
sahf
xor
cli
sub
mov
or
dec
sbb
inc
dec
test
lock
dec
cwtl
or
inc
adc
aam
mov
cmpb
call
rol
cli
sahf
orb
test
xchg
ja
mov
cmp
push
push
cmpsl
std
mov
jle
pop
cmpsl
movb
mov
or
xor
sarl
xchg
in
call
and
or
or
pop
xor
shl
clc
sub
jmp
lock
rorb
das
cmpsb
cmpsb
movsb
add
rorl
adc
jne
ss
push
inc
cmc
sub
or
pmulhuw
in
add
or
in
in
adc
sbb
inc
dec
inc
out
xchg
enter
int3
cmc
mov
shll
les
test
inc
and
rolb
fisubs
mov
jno
adc
cmpsb
sbb
hlt
jnp
mov
lods
out
adc
inc
mov
or
mov
call
and
loopne
dec
inc
mov
je
clc
sbbl
pop
mov
xchg
dec
subl
jo
subb
xlat
lock
xchg
aad
xchg
xchg
and
xchg
mov
jge
incb
add
add
adc
ds
cmp
pop
leave
adc
cmpsl
imul
scas
adc
add
mov
dec
push
pop
push
mov
cmpsb
stc
loopne
dec
xlat
mov
mov
mov
sbb
dec
push
inc
sahf
dec
lret
imul
mov
jmp
es
mov
icebp
mov
dec
mov
mov
rol
mov
mov
mov
lock
cmp
jle
pop
inc
loopne
enter
cltd
and
test
inc
xchg
mov
les
fisubl
movsl
jbe
not
pop
or
or
andl
lds
cwtl
xor
sub
xor
cmp
ja
sbb
and
cmp
pop
pop
inc
mov
pop
mov
jb
and
push
orl
push
fsubl
dec
lock
loopnew
add
out
bound
out
and
repnz
pop
adc
dec
and
stos
dec
pop
mov
lcall
adc
cmpb
lock
push
mov
dec
push
fimull
out
pop
lret
adc
or
call
arpl
je
roll
cwtl
dec
adc
xchg
pop
sbb
shl
sahf
fisttpl
lock
cmp
or
movsl
fmul
ds
mov
int3
or
cmp
push
inc
leave
push
fistl
pusha
mov
push
push
out
es
jbe
shlb
jmp
in
ss
adc
jno
das
fimull
cmp
and
and
inc
cld
push
rorb
clc
adc
sbb
in
mov
test
xchg
lret
mov
xor
cwtl
cmpl
fwait
sbb
in
mov
xor
push
insl
xor
dec
call
bnd
lock
popf
dec
jmp
push
push
ja
xor
or
adc
mov
or
pop
xchg
pop
pop
in
inc
add
ret
adc
inc
mov
lcall
mov
inc
sar
xchg
adc
mov
lea
pop
sbb
cld
or
cmpsb
shr
dec
jne
lods
pop
cmpsl
jb
nop
xchg
mov
fs
into
pusha
int3
mov
aad
xchg
xor
jae
sub
aad
rol
cmp
call
inc
xorl
divl
fs
xchg
xchg
xchg
in
cmp
loope
xchg
inc
mov
call
ja
movsb
iret
and
sub
and
mov
and
dec
inc
push
iret
adcl
rolb
test
mov
aad
xchg
add
push
xchg
lahf
push
or
adc
mov
andb
test
call
adc
mov
fwait
add
mov
mov
mov
outsb
call
or
ret
outsl
pop
pop
mov
inc
incb
call
cmpsl
dec
push
loopne
ffreep
loope
pusha
jle
sahf
xorl
call
in
hlt
fidivrl
pusha
mov
jmp
lahf
push
repnz
rclb
sbb
add
sahf
xchg
orl
jge
js
iret
and
push
pop
outsl
movsb
and
pop
push
inc
pop
ss
push
call
mov
jl
cmp
and
aad
xor
xor
adc
lret
sbb
xchg
outsl
arpl
pop
call
add
outsb
sbb
gs
push
insb
and
outsb
mov
add
pusha
jle
dec
cmpsl
or
sbb
rolb
data16
xor
cmp
jge
push
push
jle
or
xchg
cli
sbb
add
mov
call
je
adc
adc
pop
call
adc
call
jp
xchg
mov
pushf
xor
cmp
mov
call
movsb
jb
mov
into
lock
cld
lret
sbb
ret
or
shll
call
mov
sub
enter
setne
sbb
int
mov
sub
xchg
push
dec
push
sub
dec
push
pop
popf
dec
mov
in
xchg
inc
pushf
mov
in
fcomi
xchg
aad
leave
jecxz
test
filds
out
xor
push
xchg
rorl
aad
inc
mov
mov
xchg
inc
or
cmp
nop
xor
xchg
add
lcall
shlb
xor
push
add
xchg
pop
fcom
inc
dec
or
and
xchg
sti
xchg
jge
xlat
xchg
dec
insb
fmull
das
push
push
clc
pop
xchg
fdecstp
enter
dec
add
push
or
mov
mov
jl
cmp
cmp
cmp
imull
inc
repz
add
mov
test
cmovne
inc
lods
push
sbb
adc
idivb
add
cmp
jle
mov
mov
mov
loope
lahf
adc
mov
or
movsl
repz
je
jmp
mov
sub
or
out
aas
adc
jmp
call
mov
add
in
mov
lret
cmp
ljmp
sbb
push
or
rcrl
mov
fmul
test
xorl
mov
pushf
fadds
mov
ret
mov
mov
hlt
cmpsb
jnp
movsb
jo
mov
adc
je
sub
subl
adc
pop
dec
sub
and
cld
push
and
mov
push
xchg
pop
dec
and
clc
mov
inc
lret
ret
cs
call
int3
add
pop
fsubr
or
or
sbb
lods
add
dec
sbb
and
adc
negl
sbb
push
shr
and
mov
sbb
pop
iret
add
lcall
pop
insl
add
cmp
loop
jno
call
loopne
maxps
push
daa
sahf
pop
mov
xor
je
call
in
ss
push
test
adc
bnd
adc
cwtl
aam
mov
pop
mov
adc
jmp
lret
int
jge
or
dec
xchg
imul
cltd
sub
outsb
sub
adc
mov
jno
and
xchg
imul
divb
xlat
adc
cmpl
pusha
testb
jne
mov
je
pminsw
xchg
test
xor
inc
adc
push
xchg
roll
pop
lods
add
or
mov
loopne
insb
cli
outsb
or
out
in
adc
mulb
xor
sbb
or
fistl
cmp
adc
inc
loopne
sub
inc
pop
push
push
sbb
cltd
add
out
and
cld
clc
sub
pop
cltd
jbe
and
mov
ret
dec
test
cmpsb
aas
jl
addr16
fsubr
cli
mov
hlt
stc
jl
hlt
leave
cmp
sbb
out
and
hlt
mov
es
and
mov
jns
fwait
and
hlt
fstl
lahf
loop
shl
mov
xchg
jo
xor
or
and
cmpsl
mov
mov
call
and
ljmp
lock
xchg
dec
loopne
sub
adc
fidivrl
adc
cs
mov
mov
and
or
js,pt
ret
popa
pop
adc
cmp
std
sbb
or
or
mov
pop
push
out
fcom
mov
xchg
or
psubusw
pushf
and
mov
je
repz
frstor
repz
xchg
push
mov
add
movsl
dec
jns
sub
cmp
fmull
mov
sahf
jmp
call
xor
sbb
jnp
push
mov
add
mov
lahf
push
ljmp
xor
loope
inc
xor
test
cmpsb
mov
ljmp
out
dec
testb
cmp
xchg
mov
test
mov
aaa
call
cmpsl
mov
call
test
repnz
cmpsl
push
imulb
testl
je
push
lret
lea
xchg
jge
xlat
std
mov
mov
fdivrl
out
out
enter
pop
int
jne
mov
lock
call
cld
adc
push
out
inc
int
movsl
sub
and
cmp
add
sub
xor
jb
lds
jle
int
lahf
mov
inc
sbb
xchg
lock
cmp
out
dec
mov
sahf
addr16
pop
repnz
fisubl
mov
dec
sbb
adc
inc
nop
xchg
insb
sahf
mov
mov
and
xchg
xchg
repz
jo
push
sbb
lcall
push
cli
dec
mov
mov
adc
lahf
sub
jae
adc
daa
xchg
xor
enter
mov
rorb
xchg
popa
lea
jecxz
mov
dec
insb
mov
sahf
movsl
mov
rorb
cmp
pop
call
and
mov
sub
add
jmp
insb
js
fimull
nop
push
aaa
movsl
mov
add
xchg
cld
mov
inc
js
arpl
js
sbb
lret
and
xlat
xorb
shlb
pop
jecxz
add
pop
movb
mov
adc
out
mov
lods
sbb
ss
bound
call
call
mov
jne
js
cmp
mov
div
loop
push
call
lahf
mov
push
push
inc
push
or
cs
pusha
jle
hlt
adc
fnstcw
ds
inc
mov
cld
jp
pop
ljmp
movsb
pop
fsubs
mov
sahf
scas
mov
sub
mov
lds
xchg
test
pop
repz
insl
pop
cmp
repnz
rcrl
xor
mov
xchg
cmp
or
ficoml
add
shr
or
add
loop
ficomps
pushf
out
sarl
cli
inc
or
mov
ret
call
dec
pop
add
dec
outsb
outsb
outsl
inc
fs
jecxz
sbb
inc
push
dec
inc
pop
adc
cmp
sub
fs
push
dec
add
and
sbb
sbb
push
popf
and
or
pop
cmpsl
add
iret
repz
add
cmp
lea
push
out
in
data16
call
fdivl
add
lahf
xchg
aas
push
mov
loopne
pop
and
iret
repz
in
insb
dec
cltd
out
mov
cmp
hlt
jb
jnp
lcall
jae
jb
stos
stos
mov
cmp
cmpsl
lgdtl
fcmovnb
sbb
and
or
aas
sbb
sub
xor
lea
push
pop
dec
jg
fwait
outsb
or
cmp
xor
add
inc
sbb
fcompl
inc
imul
rcl
icebp
popl
ss
cmp
mov
cmp
sub
out
fiadds
xor
dec
es
and
cmp
fcoms
rolb
flds
jl
es
rorb
out
sahf
idivl
xchg
stos
aam
repz
in
adc
and
cmp
repz
pop
push
mov
cmp
repz
ds
in
add
adc
out
mov
sub
out
punpckldq
xchg
repz
fsubr
cli
sahf
testl
inc
push
push
bound
out
jo
mov
out
int3
fdiv
cld
iret
repz
or
sbb
ds
data16
repz
mov
iret
repz
add
sbb
out
sahf
out
push
insb
adcb
mov
aam
hlt
xchg
fdivrs
push
fmuls
push
cmp
repz
adcb
scas
ret
data16
notb
xor
add
add
mov
add
push
jae
movsl
das
loopne
lea
or
push
imul
and
sbb
add
aaa
pop
xor
clc
xchg
ja
and
leave
push
outsl
addr16
lds
xchg
and
sbb
push
cwtl
lea
jns
add
or
pop
lret
sub
or
pop
outsb
sub
cmp
ja
or
adc
mov
inc
push
dec
inc
sahf
je
push
outsb
ja
sarl
pop
push
push
fs
or
fcom
push
pop
cmpb
fs
jo
cs
push
add
sub
cmp
dec
xor
cmpsl
jb
adc
adc
jecxz
shrl
push
pop
add
pop
xchg
add
mov
rclb
add
fcompl
fdivrs
jbe
mov
and
addr16
test
insb
pop
repnz
ret
dec
ret
dec
xchg
mov
and
sub
ja
test
sbb
push
xchg
imul
adc
xor
inc
mov
outsl
xlat
testl
jp
je
add
push
mov
cmp
cmp
pop
lret
xor
and
and
push
pop
rol
inc
jno
mov
outsl
divl
jl
lahf
pop
imul
popa
fs
in
mov
ja
jae
inc
inc
push
dec
addb
fcoms
jae
sbb
lret
das
pop
adc
push
hlt
pop
mov
pop
mov
and
fadds
push
inc
xchg
bound
push
fsubs
mov
sub
mov
xor
shll
push
fmuls
jecxz
shll
outsb
xchg
add
cltd
jle
pop
mov
addb
bound
lods
scas
sub
inc
push
cli
add
inc
gs
divl
fwait
push
add
push
mov
inc
outsl
inc
jecxz
lea
and
sbb
push
pop
sbb
add
sbb
out
or
sub
xchg
push
test
inc
fsts
lret
push
fisubs
je
jo
jne
add
jae
sbb
push
mov
lret
xchg
mov
shrl
xor
mov
sbb
or
inc
jbe
mov
inc
or
and
adc
mov
insl
jge
inc
jno
call
or
mov
imul
add
clc
rol
in
push
fcoml
lock
push
rorl
pop
int
ret
dec
xchg
cmp
daa
or
jns
jo
mov
enter
out
loopne
clc
jg
outsl
imul
push
sub
push
add
iret
repz
cs
push
mov
mov
repz
jg
mov
sub
mov
add
xor
push
jb
das
dec
adc
or
push
cltd
das
jo
dec
cs
adcb
das
mov
nop
or
rcl
repnz
repz
lcall
push
aas
pop
dec
and
push
adc
push
dec
mov
nop
pop
adc
push
int
sbb
add
sbb
or
fwait
push
and
push
pop
mov
dec
push
shlb
incb
fdivs
repz
cmp
mov
mov
pushf
sub
daa
fnstcw
add
das
lea
xor
mov
and
inc
enter
stc
rolb
xchg
jmp
push
outsl
jnp
gs
xchg
add
fstp
fldenv
pop
jo
push
decl
mov
js
or
jnp
fistpll
mov
mov
pop
ja
mov
cmpb
jo
js
and
das
movsb
pop
decl
add
repnz
daa
add
stos
stos
scas
jg
jo
dec
faddp
mov
pop
clts
pop
add
iret
mov
push
lock
push
and
and
stos
mov
popa
xlat
inc
add
add
mov
insb
add
adc
push
add
fwait
int
add
add
add
dec
add
mov
push
add
add
out
in
sahf
out
movb
out
lods
test
cwtl
xor
es
in
xor
sahf
out
push
cwtd
int3
decl
jnp
jns
data16
mov
cltd
cltd
cltd
cltd
xchg
ja
out
int3
int3
int3
push
push
mov
flds
pushw
cltd
iret
mov
iret
int3
incl
add
xor
cmp
loopne
xor
cs
into
repz
cs
out
loopne
iret
cltd
cltd
cltd
jns
int3
jmp
int3
int3
daa
lcall
sahf
out
inc
sub
repz
add
data16
out
hlt
xor
xor
or
data16
cmp
rorl
data16
cmp
data16
int3
out
cmp
jnp
es
jmp
int3
pop
mov
push
add
sub
xchg
cmpsl
push
xor
jmp
data16
scas
cmp
xor
cltd
insb
lds
cltd
cltd
cltd
and
insb
lds
ljmp
int3
dec
push
pushf
cmpsl
jmp
jno
sbb
mov
mov
lods
js
ja
push
cltd
int3
mov
push
int3
data16
out
notl
cs
cwtd
int3
jns
cmp
insb
cs
int3
int3
xchg
cmpsb
pusha
xor
int3
decl
mov
or
jns
out
jo
jmp
jns
out
dec
lcall
int3
jns
out
lcall
incl
movsl
inc
jns
cs
inc
xor
out
cmpsl
ds
rcrb
mov
insb
add
ja
xchg
xchg
add
insb
ss
int
mov
xlat
add
add
add
mov
icebp
add
add
sbb
popl
push
pop
pop
mov
xor
cli
pop
in
pop
pop
xchg
cld
and
pop
add
sti
sti
and
ss
push
aas
lcall
sti
ljmp
repz
in
sti
push
pop
mov
add
fsubr
jmp
pop
cmc
pushf
add
cld
in
sti
add
dec
in
push
outsl
jp
xor
out
jae,pn
cmp
in
pop
inc
push
and
fldcw
and
pop
dec
add
pusha
fnstenv
lock
iret
dec
push
test
add
add
pop
ja
aaa
iret
incb
js
fstl
jg
mov
cltd
stc
psubq
xorb
clc
std
fstps
js
mov
cwtl
mov
inc
incb
js
xchg
mov
js
jo
mov
and
orb
inc
aas
js
mov
out
fisttpl
jnp
fwait
mov
mov
js
fistpll
xchg
js
mov
mov
outsl
into
outsl
mov
pop
jge
pop
ja
cmp
shr
notl
adc
clc
jo
bound
mov
ja
js
mov
mov
scas
pop
mov
xchg
jmp
or
sub
add
and
das
pop
in
and
pushf
sbbl
xorl
stos
pop
push
sti
fistl
inc
repnz
lcall
pop
add
inc
pop
mov
shrb
pop
lods
arpl
lods
pop
add
rclb
push
jo
and
jg
add
sahf
addr16
xchg
pusha
add
add
cmp
push
clc
cld
lods
nop
lret
clc
stc
or
lahf
addb
or
ljmp
add
mov
xor
fstps
add
lahf
inc
into
mov
mov
mov
pop
cmp
add
testl
test
inc
jg
jl
shlb
popf
mov
jg
mov
loope
in
adc
mov
leave
sbb
add
lock
dec
in
inc
jg
xor
mov
sbb
push
add
cmp
jae
in
out
inc
fidivrs
pop
push
lock
inc
cmp
fistpl
ds
lcall
inc
lahf
aas
fcomps
jge
cmpl
push
inc
ds
jmp
cmp
insl
mov
aas
push
in
add
jmp
outsl
mov
jnp
add
in
add
ljmp
in
lods
cmp
std
xchg
sbb
mov
add
lds
add
aas
inc
add
sti
jp
xor
dec
aas
and
ret
pop
inc
aas
mov
daa
mov
rolb
or
divb
fdivs
les
inc
aas
pop
mov
sti
lea
push
xor
aas
jb
les
xchg
push
add
ret
and
and
dec
repz
decl
addr16
test
gs
cmp
cmp
mov
dec
or
aaa
testb
sub
gs
xchg
adc
push
inc
or
pop
push
jg
js
push
sbb
dec
daa
cwtl
std
cmp
push
pop
pop
mov
out
add
sbb
fs
xchg
idivb
push
push
jnp
or
ja
push
bound
pop
xchg
pop
sbb
pop
push
mov
mov
fucomp
in
ja
jp
mov
push
test
ds
fisubs
outsl
rol
js
jbe
pop
loope
pop
xchg
aas
xchg
gs
adc
add
xchg
fs
loopne
push
jg
hlt
push
shrb
pop
bound
aaa
arpl
fs
dec
cs
int3
mov
dec
adc
dec
push
pop
add
ret
pop
pop
arpl
rorb
jb
pop
add
mov
lcall
sbb
sub
add
and
int
sub
pop
or
or
mov
mov
insb
outsl
ja
add
adc
jns
mov
sub
xor
dec
bound
xchg
pop
cmp
lahf
pusha
fcomi
and
sbb
jecxz
in
loopne
push
pop
xchg
pop
sub
jp
pop
adc
mov
cmp
maxps
ret
and
dec
jae
mov
mov
add
dec
pop
lock
xchg
ljmp
mov
fisubl
daa
push
or
adc
mov
sahf
jb
add
or
sub
call
jle
addr16
xor
call
mov
loop
pop
incb
aas
adc
adc
sub
ljmp
les
pop
mov
or
dec
das
loope
cmp
adc
jne
push
pop
call
xchg
xlat
das
dec
adc
dec
xchg
push
inc
bnd
lret
dec
jb
inc
add
mov
fstpl
jns
jne
insb
aas
aas
lcall
push
jo
dec
add
je
add
mov
arpl
pop
jne
arpl
fbstp
add
xlat
pushw
imul
mov
es
or
jae
imull
js
or
je
insl
mov
addb
or
das
outsl
pop
or
inc
dec
inc
fiaddl
push
jnp
ja
out
andpd
gs
or
jo
fs
push
mov
mov
outsl
outsl
push
jnp
imul
pop
or
arpl
push
ret
aas
iret
aas
fldt
and
jb
insb
push
je
int
xlat
jnp
sub
pop
fwait
push
ja
jle
std
cltd
decl
add
lret
js
insb
mov
das
loopne
adc
psrad
sbb
pop
pmaxub
in
mov
fiaddl
sbb
loope
mov
add
lret
dec
adc
inc
gs
jp
dec
lahf
pop
outsl
push
mov
xorb
pop
andl
add
add
mov
gs
out
sub
ret
push
xor
fdiv
jnp
sahf
inc
add
inc
inc
lcall
mov
imul
repz
xor
outsb
and
mov
mov
xchg
push
sbb
popa
lahf
add
lcall
push
clc
push
bound
xor
pop
add
xor
clc
imul
imul
inc
fcmovnb
je
inc
push
inc
dec
add
clc
cmpsl
jae
xchg
out
add
icebp
sahf
gs
or
insb
sub
jnp
push
xchg
jns
addr16
je
add
sbb
push
mov
outsl
mov
ja
pop
inc
roll
dec
add
mov
add
andb
sub
cmp
cmp
ds
xchg
mov
pop
data16
js
insb
and
push
pushf
cmp
and
outsb
out
or
pushw
sbb
push
inc
sub
sub
gs
mov
fbstp
ss
sti
mov
jl
jae
jne
outsb
cmp
push
xor
sub
push
sub
cmp
insl
jbe,pn
mov
pop
jo
fs
push
xlat
inc
adc
add
xchg
imul
push
call
lcall
outsl
jb
insb
inc
mov
enter
dec
js
and
aaa
or
and
mov
xor
and
les
add
dec
outsl
inc
ret
lods
cmp
add
hlt
jns
je
cmp
addr16
sub
subl
pop
js
scas
sub
push
push
ss
jne
jo
data16
js
std
dec
repz
ss
xor
arpl
xor
insb
or
mov
shrl
jae
inc
and
bound
sub
ss
mov
dec
in
add
mov
gs
insl
sub
push
cltd
dec
xor
pop
adc
rorb
pop
in
cwtl
ret
jne
xor
rcrb
ja
das
bound
subb
jns
add
xchg
aaa
mov
cld
je
mov
fs
mov
mov
mov
enter
cs
push
dec
dec
das
xor
xor
add
xor
cltd
insb
add
das
popa
sbb
adc
cmp
insb
aad
pop
xchg
mov
lds
incl
mov
cmc
jo
push
and
xchg
jnp
push
cmpsb
rclb
xor
pusha
xor
xor
sub
sub
js
push
lahf
aaa
add
xor
jge
jae
xor
aas
cmp
popa
sub
bound
or
fsubr
mov
out
xor
mov
xor
mov
das
inc
cmp
dec
jg
loop
or
jp
bound
pop
fists
add
add
cmp
icebp
pop
addr16
xchg
xor
inc
mov
cld
mov
jmp
subl
mov
xchg
mov
dec
jno
outsl
punpckldq
cld
fimull
inc
leave
test
call
mov
call
push
pop
mov
outsl
fucomp
in
jg
aam
adc
inc
dec
dec
xchg
lret
xor
scas
jno
or
stos
jnp
jae
mov
add
dec
xor
dec
dec
call
or
ljmp
or
je
outsl
out
daa
xchg
jo
divl
int
rcrb
cmp
test
incb
cmovo
push
xor
test
out
xchg
clc
imul
jmp
pop
mov
lcall
cmp
mov
andl
dec
call
mov
add
cli
out
and
push
jmp
out
cmp
loop
ss
mov
inc
xchg
push
dec
mov
dec
out
mov
pusha
sti
mov
inc
cmp
sbb
call
sub
push
mov
jmp
mov
or
xor
mov
sar
inc
call
dec
sbb
xchg
jp
movsb
jb
xchg
ja
fstpt
ret
clc
jns
mov
loopne
scas
bound
rcrl
push
mov
jne
dec
lcall
aaa
rcr
inc
push
add
mov
inc
sbb
rolb
push
mov
stos
pop
fwait
aam
std
out
sbb
sbb
fsts
dec
sbb
dec
push
jmp
xor
pop
mov
fiadds
test
mov
inc
xrelease
mov
aaa
jae
out
add
incl
repnz
pop
rorl
mov
in
inc
enter
xor
push
pop
insb
fs
cmp
dec
or
mov
icebp
cwtl
jl
stos
pusha
xchg
leave
inc
out
cmp
lcall
pushl
mov
dec
mov
cmp
ljmp
cmp
mov
pop
in
rclb
movsb
pusha
and
enter
enter
mov
lcall
js
sahf
or
pusha
cmp
sbb
int3
dec
inc
fneni(8087
repz
mov
inc
das
repz
ret
scas
jge
addb
and
xchg
inc
leave
or
in
or
jmp
lods
lods
sub
test
je
and
xlat
cmp
push
bound
outsb
shlb
push
pop
aam
or
call
dec
mov
sti
xchg
lahf
idivl
repz
jecxz
and
push
jg
lock
xor
pop
pop
add
frstor
in
stc
je
scas
lret
push
decl
stc
inc
out
pop
mov
cmp
sahf
or
or
push
jg
loop
lcall
cs
enter
xchg
xchg
or
add
xorl
test
outsl
rcrb
pop
scas
push
ds
sub
mov
subl
loope
insl
and
jnp
fsubl
or
lcall
xchg
mov
loopne
loop
sbb
fcmovnb
sahf
push
mov
sbb
adcb
xchg
add
test
inc
ret
mov
mov
xchg
sbb
adc
mov
jg
je
in
and
adc
xchg
sbb
mov
or
sarb
jp
call
jbe
cltd
add
sahf
test
mov
xchg
aaa
out
and
sbb
call
insb
jle
cs
mov
xchg
sbb
mov
movsl
cwtl
add
fst
mov
xor
dec
mov
shlb
or
push
lea
xchg
loope
and
sahf
lahf
dec
fadds
mov
dec
cli
push
cld
cwtl
les
push
dec
test
int
xchg
daa
inc
incl
mov
pop
cmp
sbb
pop
pop
cmp
and
push
pop
xchg
test
mov
inc
push
or
movsl
imul
fiaddl
sbbb
and
rcl
sub
inc
ret
cmp
mov
clc
loopne
cmp
dec
sub
jno
adc
icebp
in
decl
cwtl
aas
fwait
les
adc
jb
inc
loopne
adc
or
push
loope
pop
stos
jbe,pt
cmc
push
push
cld
imul
cmpsl
xchg
in
fstl
sbb
cmp
pop
inc
push
sub
cmp
cmp
or
mov
pushl
repz
into
test
cli
sbb
repnz
hlt
mov
mov
sarl
fdivr
jmp
repz
sbbb
pop
rcl
xor
cmpsb
xlat
adc
scas
test
lret
ss
mov
dec
sahf
mov
in
popa
or
popf
dec
sub
xchg
shlb
pop
cmpb
mov
mov
pop
pop
loop
out
popa
mov
jge
adc
inc
test
out
or
adc
pushl
icebp
roll
dec
dec
dec
mov
cs
iret
sbb
lahf
lahf
addr16
mov
pushl
dec
mov
mov
add
pop
mov
cltd
jb
inc
add
or
ss
cmp
dec
pop
or
in
cltd
cs
mov
mov
fwait
mov
and
addr16
repz
int3
xor
addr16
adc
lock
inc
icebp
push
inc
jle
dec
pop
fistps
pushl
xchg
sub
dec
pusha
ljmp
cmp
mov
inc
and
mov
cmc
mov
mov
aam
das
xchg
push
inc
mov
clc
dec
mov
aas
fbstp
push
jne
loopne
arpl
mov
mov
jecxz
addb
aam
std
push
iret
pop
xchg
imulb
lret
mov
dec
lock
sbb
mov
ss
cmp
and
mov
cmpsb
inc
mov
xlat
or
lcall
jne
dec
int
mov
fisubrl
fdivrs
pop
test
and
sbb
mov
cmpsb
mov
stos
xor
jge
cwtl
ljmp
mov
add
aaa
jg
sahf
push
js
loope
pop
dec
inc
filds
jp
jecxz
lods
xlat
and
inc
dec
ret
fwait
lea
or
add
cmc
pop
xor
or
fstpt
fwait
popf
jp
xchg
push
mov
rcrl
lret
lcall
xor
andb
fsubrs
dec
xchg
sub
repnz
rclb
outsw
clc
sbb
call
sbb
push
ss
out
sub
jg
mov
sub
mov
fisubrl
jbe
push
jmp
pushf
nop
jbe
sub
call
fstl
xchg
adc
cltd
dec
push
mov
and
or
or
cwtl
jle
mov
xchg
incl
out
xor
rorl
cltd
in
in
push
lods
sub
inc
mov
ret
lret
inc
repz
jmp
sub
fisttpll
insb
fisttpl
lock
iret
mov
sahf
or
sbb
push
fldt
iret
es
ljmp
adc
mov
mov
jge
mov
mov
loope
leave
movsl
adc
pop
testb
fbstp
popf
rcll
push
iret
orl
jmp
add
xchg
mov
mov
lahf
xor
int
mov
shrb
incl
dec
mov
jbe
inc
dec
jg
stos
repnz
pop
cmpb
xchg
inc
rep
or
ljmp
int
or
in
fwait
mov
hlt
push
dec
mov
sbb
in
fs
fcmovnbe
mov
aaa
fidivrl
add
inc
pushf
sti
xor
sub
push
jp
mov
mov
jmp
in
xchg
dec
cmpsb
pop
push
xor
test
mov
je
es
pop
popf
pop
icebp
lcall
insb
or
roll
jae
mov
cmp
xchg
cs
xor
shr
and
js
sbb
sahf
enter
out
mov
push
icebp
push
in
mov
repnz
sbb
sbb
out
cmp
in
mov
sub
dec
ret
inc
mov
imul
enter
imull
jb
call
mov
jg
ljmp
loop
shr
sbb
adc
icebp
jnp
cltd
insl
sti
pop
sub
cmp
push
push
clc
decl
insl
scas
cli
jo
shll
push
cmpsl
out
mov
cmc
inc
xchg
ficoml
jnp
push
adc
adc
ljmp
sbb
add
xchg
sbb
and
inc
xor
mov
movsb
cmpl
xchg
movsl
sbb
or
popw
cmp
xlat
rclb
pop
aad
imul
xchg
adc
decl
fstpt
daa
movsl
push
mov
push
jp
pop
mov
push
push
into
jno
incl
test
test
sub
mov
popa
outsb
push
sbb
xchg
call
loope
xlat
fucomi
idivb
sub
inc
sti
test
xor
aam
pop
push
sub
lcall
call
pop
inc
cmp
lahf
inc
pop
pop
cmp
scas
lahf
push
xor
sub
mov
ljmp
jbe
pop
ds
mov
sub
inc
inc
mov
sbb
push
lcall
mov
idivb
stos
jle
icebp
test
jns
mov
cmp
mov
leave
fisubl
mov
call
push
dec
aam
sub
faddl
dec
push
and
fs
outsb
add
cmc
jmp
dec
loop
fsubs
lods
push
xor
stos
inc
xchg
lcall
loop
adc
outsl
lcall
movb
fstps
inc
mov
repnz
jecxz
dec
test
lret
pop
aaa
sub
cld
rcrb
mov
cmpsb
test
xchg
out
jg
call
pop
orl
jge
inc
push
divl
call
decb
cli
or
push
cmpsb
gs
popa
popw
iret
sbb
clc
call
outsb
mov
mov
test
jle
mov
out
mov
decl
jl
ficompl
fimull
jns
lahf
cmpsl
mov
cltd
mov
push
mov
push
inc
out
xlat
int
lret
call
inc
loop
mov
int3
cmpsb
loopne
daa
pop
cmp
sub
mov
inc
mov
stc
fnstenv
xor
mov
arpl
imul
lcall
mov
push
aaa
pop
sub
cmp
mov
xor
or
clc
adc
mov
test
or
cmp
rcll
jns
push
sarl
lea
outsl
decl
add
dec
rclb
loope
imul
je
adc
mov
cltd
cmp
xchg
jmp
lods
cmp
pusha
jl
movsb
shrb
dec
leave
adc
cmc
mov
ljmp
xchg
stos
push
cs
leave
insl
aam
inc
mov
xchg
es
xlat
fisttps
aaa
addr16
xchg
stc
clc
decl
and
sub
push
mov
jnp
int3
stc
js
and
enter
and
call
loopne
sbb
xor
ljmp
out
ret
loopne
decl
lock
sub
inc
or
dec
daa
sub
mov
inc
mov
call
je
and
cltd
xlat
adc
sti
fsubrl
add
or
and
cli
jnp
mov
stc
test
cli
pushf
pop
ficoml
aam
sar
inc
jno
pop
dec
stc
fists
xchg
stos
jmp
and
add
pop
push
jns
or
pop
std
jmp
inc
jmp
loopne
stc
in
and
leave
or
jnp
push
dec
push
sbb
data16
cmpsb
pop
pop
push
aam
push
imul
add
divb
movsb
aam
jle
outsl
pop
call
add
push
mov
sbb
iret
scas
rol
sub
faddl
sub
jle
add
or
or
jns
adc
sub
pop
popa
jbe
les
fsubrl
cs
in
add
inc
call
incl
aaa
jmp
mov
movsl
and
pushf
mov
insl
imul
aad
lock
ljmp
loop
cmp
sub
adc
lcall
jg
dec
movsb
popa
sub
pop
addr16
lea
inc
xchg
fisttpll
mov
cmpsb
dec
pop
inc
sub
mov
push
cli
jl
pop
mov
icebp
cmpsb
or
or
push
mov
and
ljmp
inc
inc
jbe
sub
lea
ret
cltd
fcomp
fisubrs
lcall
ret
jno
lahf
and
xchg
mov
pop
mov
xchg
pop
mov
inc
pop
jg
mov
out
sbb
inc
imul
clc
cs
idivb
call
mov
leave
jp
or
push
loop
mov
fcmovnb
int3
and
pop
adc
scas
sub
loopne
lods
sub
pushl
jge
mov
and
repz
lret
out
nop
xlat
sub
fiadds
es
scas
outsb
dec
jmp
imul
lock
bound
push
push
jg
lahf
fidivl
inc
insl
repz
test
sub
inc
mov
fnstenv
xor
pop
cmp
int3
ret
lea
dec
inc
dec
mull
dec
cld
mov
mov
ret
lret
push
sub
mov
arpl
negl
jb
loop
mul
cmp
int
rorl
ljmp
push
sarb
roll
imul
mov
pop
push
push
dec
mov
cltd
test
lcall
stos
test
and
testb
jae
dec
push
lret
rcr
js
pop
sbbl
push
cmp
sbb
cltd
dec
in
aad
enter
jg
out
not
and
inc
insb
push
jl
or
sbb
inc
cmp
lock
test
lea
fstps
jmp
cmp
insb
in
leave
hlt
pand
mov
xor
sub
cmpsl
lcall
cltd
pop
std
sbb
xchg
push
clc
dec
popa
pop
push
ret
or
adc
mov
push
enter
add
lret
gs
cmpsb
loop
lock
or
or
insl
or
js
mov
mov
cmpsl
adc
push
js
outsb
lret
sbb
repz
or
inc
jmp
mov
mov
lods
aas
neg
loope
xchg
jmp
cmp
test
sbb
jmp
push
js
add
and
std
sbb
lcall
rcll
pop
call
mov
aad
pop
test
sti
je
xchg
dec
jb
popf
jmp
and
rolb
je
fcomps
cmp
incl
cmp
sub
inc
inc
dec
cmp
or
jmp
adc
cmc
push
jg
fwait
test
xchg
bound
test
adc
aas
aad
xor
sub
fisttps
cltd
jmp
imul
jae
clc
push
stos
dec
jg
es
and
div
adc
decl
sbb
js
adc
xchg
xor
popa
cmc
xcrypt-ecb
cmpsl
mov
sbb
notl
out
loop
cmc
jmp
and
xchg
mov
dec
xchg
lcall
jae
push
sbb
call
lret
or
leave
cmp
mov
or
fmull
and
lcall
inc
cmp
dec
mov
adc
add
pop
or
mov
cmpsb
pushf
adc
ljmp
push
sti
add
out
jnp
mov
cmc
xchg
sbb
in
in
inc
out
and
add
jmp
out
jp
adc
sub
pop
mov
inc
stos
loopne
and
pop
cmpsl
sbb
inc
cmp
jmp
mov
shr
inc
sbb
add
xor
pop
insl
sub
mov
jl
mov
pop
decl
imulb
jae
in
sub
pop
cs
imul
les
ret
push
jns
cs
insb
inc
and
inc
xor
cmpsb
jb
fistl
jge
jmp
push
rorl
dec
push
mov
cmp
icebp
push
sbb
jg
call
decl
mov
fsubr
aad
cmp
mov
call
inc
lret
adcl
sub
pop
add
movsl
sbb
mov
dec
dec
punpcklbw
mov
ret
lcall
sub
sub
pop
call
cmp
mov
inc
out
in
add
fwait
mov
lock
ficoms
xor
xchg
cwtl
popa
jp
call
and
jle
add
orl
inc
sbb
mov
test
add
gs
std
sarb
jne
xorb
mov
add
decl
lret
inc
and
xchg
ret
ret
int3
stos
call
call
xor
or
lods
pop
jl
ds
add
leave
mov
in
mov
jmp
add
mov
call
push
lods
inc
xchg
inc
scas
cmp
jge
mov
mov
mov
push
arpl
dec
cmp
fs
push
jp
jmp
and
xchg
data16
imul
clc
cld
daa
mov
jae
mov
jmp
push
movsb
jp
sub
xchg
out
in
fisttpll
cli
jbe
mov
add
cld
adc
jmp
jmp
xchg
loop
negb
ret
jmp
loopne
incl
pop
xchg
int
lea
fisttps
pop
loopne
cmp
das
push
xchg
mov
sub
incl
out
je
es
pop
lret
ljmp
test
pop
push
incl
push
push
add
sbb
sbb
mov
cmpsl
xchg
shlb
or
into
lock
ljmp
pop
test
dec
mov
xchg
arpl
out
push
add
scas
clc
push
or
aad
test
scas
ljmp
outsl
cltd
ja
repz
xchg
loope
cwtl
cltd
mov
or
das
orl
jmp
sbb
cmc
dec
stos
es
or
adc
je
xchg
fdivl
sbb
ljmp
clc
into
jmp
cs
dec
and
pop
clc
ret
cwtl
fcmovu
stos
xchg
insb
mov
mov
xlat
lcall
pushf
inc
fnstenv
imulb
xor
ficomps
mov
ret
jmp
lret
ss
and
popa
dec
sub
mov
mov
mov
inc
bound
adcb
jmp
ret
push
push
pop
cmpsb
stc
in
popf
pop
sbbl
or
inc
mov
jge
testl
inc
mov
rol
in
ljmp
mov
jns
pop
lcall
js
push
mov
inc
stc
push
jg
loope
fildll
mov
int
and
xchg
cmp
add
mov
pushl
pop
inc
push
push
ret
inc
sub
xor
sub
sbb
aad
inc
les
jmp
or
jae
pop
fdivrs
daa
mov
stc
mov
out
fstpl
mov
daa
das
mov
std
mov
push
and
stos
testb
inc
cltd
call
rolb
cld
loop
xor
or
ja
ss
mov
mov
incl
hlt
dec
and
stos
lret
into
hlt
iret
push
enter
adc
out
test
inc
jl
lret
shr
movsl
cltd
nop
add
sub
inc
mov
jge
cmc
jl
out
and
call
mov
dec
sub
out
mov
sahf
ret
lods
div
fidivl
mov
push
jg
incl
and
shll
sub
cmpsl
cmpsb
lock
cltd
inc
mov
call
inc
out
xchg
mov
aas
pop
ja
nop
push
loopne
and
cwtl
sub
incl
inc
jecxz
daa
dec
dec
loop
pop
outsb
jp
outsb
fmuls
cmpl
call
jns
lods
xchg
out
fsub
inc
adc
push
jnp
sbb
sub
and
popa
dec
cmp
lcall
lods
cmp
scas
into
lcall
inc
andb
push
push
fcmovb
ds
and
aaa
pop
and
popf
ret
jns
jl
fcomps
adc
cwtl
mov
adc
ret
aas
loop
xor
call
and
mov
jmp
inc
lret
mov
push
mov
dec
mov
cmp
jno
sbb
jmp
ror
jp
cmpsl
mov
cmp
cmp
jnp
jbe
aad
dec
movsl
cmp
gs
pop
test
xadd
xor
push
loope
jns
mov
clc
jnp
mov
test
xor
arpl
pop
and
aam
push
cmp
lds
lcall
aas
push
jg
rcl
add
mov
mov
aad
lret
cmp
mov
mov
lret
mov
fnstenv
mov
outsl
dec
jmp
dec
pushl
mov
fdivrl
adc
xlat
xchg
push
dec
xchg
js
cld
mov
pushl
push
loop
bound
add
into
js
mov
jno
push
cli
jg
incl
cmpsl
popl
shll
adc
jmp
aas
data16
and
outsl
and
loop,pt
movsl
push
jg
orb
out
xcrypt-cbc
cmpsl
xchg
lods
loop
inc
sub
je
insb
xchg
dec
decl
ja
mov
in
push
scas
jnp
cs
test
jbe
decl
les
or
push
xchg
nop
std
je
pop
dec
sbb
sahf
ret
cli
adc
jns
lock
xchg
aas
add
jecxz
sar
ljmp
pop
clc
lcall
ss
or
movsl
data16
mov
sbb
outsl
clc
decl
scas
jmp
adc
mov
dec
lods
inc
sti
push
ret
cmpsl
pop
faddl
add
addr16
iret
stos
es
xchg
add
cmpsl
mov
lret
mov
lock
shll
sub
fsubrl
xchg
scas
push
icebp
rcrb
decl
cmp
pop
sbb
jmp
lds
jo
mov
outsl
push
call
mov
icebp
sbb
adc
stc
popa
push
and
pop
lods
iret
fiadds
cld
dec
inc
add
sbb
iret
push
and
popa
push
mov
mov
xor
ljmp
scas
jae
dec
xchg
inc
fsubrl
lcall
sti
leave
pop
sbb
ljmp
jmp
and
dec
adc
cli
or
xor
mov
fidivs
or
ja
std
jle
fisubl
lahf
pop
push
xor
cmp
rol
adc
push
dec
mov
out
into
in
cmc
out
lds
scas
imul
jae
scas
mov
and
jns
leave
scas
cli
sti
adc
cmp
arpl
sub
aam
repz
add
imulb
cli
decl
xor
fucomi
out
lahf
push
add
pop
jno
out
aam
jbe
cmp
outsl
adc
je
and
xor
sbb
decl
mov
in
lds
and
loop
xlat
test
in
mov
mov
cmp
jne
mov
pop
jns
push
inc
push
pushl
imul
cmp
cmpsb
or
adc
aas
pop
push
fs
cwtl
push
call
push
out
jmp
dec
in
out
jge
push
into
in
arpl
call
popf
fs
xchg
cs
inc
stos
inc
xchg
sub
inc
and
add
insl
xchg
je
dec
xchg
or
jne
cmpsb
pop
cmovne
mov
push
loop
add
pushl
stc
mov
adc
mov
mov
dec
and
inc
add
js
lcall
repnz
adc
inc
jge
adc
mov
js
mov
lea
dec
ljmp
test
xchg
call
ljmp
mov
mov
cmp
test
and
js
xchg
rcrb
jp
pusha
mov
pop
cmp
std
das
addr16
in
jmp
stos
movsl
loope
fcomi
insb
add
pushf
std
ret
test
aas
adc
gs
cwtl
pop
mov
lcall
adc
roll
xchg
in
pop
mov
push
imul
push
and
jmp
cmp
dec
xchg
xor
mov
mov
add
out
jge
pop
cmp
or
or
hlt
pop
scas
clc
loop
push
out
lret
pop
popf
cli
add
iret
cmp
pushl
fsubl
adc
mov
push
and
sahf
repnz
inc
sub
aaa
jns
cmc
inc
jne
data16
sahf
jecxz
std
jne
xchg
cld
in
les
sahf
mov
or
or
pushl
or
xor
push
sub
jge
jl
js
jbe
scas
mov
xchg
sbb
decl
xchg
data16
imul
inc
data16
mov
leave
pop
loop
cmp
jmp
push
push
adc
dec
hlt
add
nop
fnstcw
outsb
mov
push
sub
add
push
push
aaa
push
sti
push
outsb
cmc
rcll
push
lahf
popa
imul
call
fsubrl
testb
xlat
jmp
fildl
inc
les
and
mov
xchg
mov
call
pop
scas
test
fsts
jno
jno
sbb
cmpl
out
push
add
lret
cmp
cli
fcomi
inc
jmp
mov
cs
rcrb
int
or
sub
sub
push
cmc
stc
jmp
sub
test
mov
call
out
add
scas
nop
icebp
loop
pop
xor
imul
pop
add
sahf
sub
decl
push
xor
mov
fimuls
call
mov
lock
nop
insl
out
add
jmp
xchg
mov
jmp
inc
adc
push
or
jg
pop
mov
dec
or
xor
lods
neg
decb
sahf
out
and
dec
scas
test
call
xor
fidivl
sub
mov
pushf
mov
lock
jg
mov
les
rclb
clc
subb
jecxz
add
mov
cld
pop
shll
push
xor
in
cmpsl
sub
mov
sbb
mov
lds
and
jb
sub
outsl
frstor
in
jle
in
rcrb
std
notb
fcomip
ror
arpl
dec
dec
jno
mov
fs
adc
sub
mov
in
push
inc
mov
mov
push
lock
mov
or
mov
jge
movsl
push
ljmp
jg
sub
sarl
adc
xor
shlb
pop
add
xchg
fiaddl
jmp
xor
add
inc
ret
dec
inc
das
jecxz
mov
jbe
push
loopne
jmp
lcall
inc
jg
jno
lds
fldcw
fs
lret
out
negb
fistps
adc
push
cld
loop
push
mov
push
lahf
add
ja
arpl
lock
mov
mov
fbstp
enter
push
lret
sub
repnz
fs
insl
push
dec
std
lods
in
scas
sub
lds
inc
pop
popa
jl
hlt
sub
ret
lods
or
pop
mov
mov
ds
sub
xor
sbb
dec
mov
lods
daa
mov
fistpll
nop
pushl
push
adc
xchg
movsb
jbe
lods
jb
ja
pop
loopne
cmpsl
addb
xor
cmp
call
sbb
jp
xchg
and
cli
lahf
icebp
xchg
adc
pusha
or
push
movb
mov
loopne
std
decl
mov
pop
notl
add
and
sbb
push
mov
jmp
inc
ss
push
inc
mov
rorb
loop
les
push
in
mov
push
inc
sub
sub
test
ss
mov
dec
add
incl
xchg
jecxz
or
sub
pop
pop
mov
ffreep
pop
call
shlb
lea
ficoms
mov
jmp
cmpsl
fisttpll
fdivl
and
loop
inc
inc
outsb
xor
add
push
hlt
rcl
in
jno
fldenv
lahf
mov
jno
push
roll
divb
clc
dec
lods
mov
sub
ficoms
push
dec
outsl
cmp
xorl
loopne
mov
jnp
push
gs
pop
inc
xchg
cmc
ret
mov
push
pop
lea
inc
push
jbe
imul
sub
call
loopne
xchg
fnstenv
shl
mov
push
out
ja
out
std
pushl
adc
cltd
jp
aad
mov
cltd
scas
out
ja
mov
jmp
cmp
adc
mov
sub
cmp
in
lcall
lcall
mov
ljmp
rcll
test
fildl
call
std
call
lcall
mov
jp
cltd
sbbb
cmp
decl
sysexit
sbb
cmp
pop
dec
test
xor
mov
cltd
inc
mov
sbb
mov
dec
sar
notl
dec
mov
hlt
fimull
cmp
sbb
decl
pushl
pop
fsubs
inc
jns
sbb
xor
xchg
inc
call
fwait
das
loopne
push
pop
pop
pop
fsubs
pop
mov
inc
pop
lret
or
outsl
cli
std
imul
mov
sub
xor
cmp
xchg
push
incl
stc
fldcw
pop
popa
mov
cmp
lods
rolb
aas
in
jmp
mov
hlt
repnz
scas
adc
or
fwait
pop
jecxz
mov
xlat
mov
mov
test
ljmp
xchg
sbb
push
call
lock
dec
mov
stos
fldcw
fmuls
jle
cmpsl
repnz
lea
adc
xchg
shr
sbb
ljmp
or
xor
push
xchg
imul
imul
repnz
mov
jg
xchg
push
in
popf
scas
sbb
add
dec
and
mov
addl
pop
or
clc
jb
mov
xor
pushf
push
ret
sbbl
mov
test
jmp
adc
and
out
les
nop
inc
mov
xchg
pop
not
dec
rcl
std
stos
fiaddl
mov
rcll
inc
imul
cs
bnd
jg
add
scas
jg
or
imul
incl
hlt
pushf
push
inc
mov
jmp
mov
fidivs
es
aad
dec
pop
pop
scas
inc
add
ljmp
and
mov
cmpsb
and
adcl
mov
pop
cmp
jle
jg
and
jno
js
call
shll
sub
jo
stc
rorb
mov
test
incl
dec
cmp
sub
cmp
jp
cmp
and
int3
lcall
pop
icebp
jg
decl
dec
icebp
not
lock
add
or
into
xchg
int3
iret
arpl
shrl
xor
cs
push
pop
adc
ljmp
mov
lcall
pusha
push
lock
dec
iret
sub
ds
lcall
cli
xchg
dec
jmp
inc
ds
fstpl
or
aas
daa
lcall
outsl
incl
push
fsubrp
rorb
push
loope
or
cmp
sub
jg
call
jge
mov
js
rcrb
mull
ljmp
pushf
inc
lcall
add
xor
outsb
roll
arpl
xchg
add
and
stos
pushf
pop
sbbb
rorb
lods
mov
xchg
jp
nop
jo
dec
in
arpl
decl
pop
stos
inc
or
jmp
int3
adc
shr
aad
jg
in
mov
fldcw
add
xor
out
xchg
mov
fdivrl
add
pushl
out
sub
sub
fisubs
adc
pop
xchg
lods
ret
in
add
aaa
sub
stos
loop
inc
movsl
incl
cwtl
arpl
in
int3
repnz
lods
sbb
fdivl
ret
icebp
cld
lock
jb
xchg
or
call
test
dec
bound
aam
push
mov
pusha
and
outsb
imul
aas
add
cld
mov
call
cli
loopne
loope
jae
inc
mov
les
sbbl
and
cmpb
iret
in
cmp
dec
sbb
sti
pusha
test
stc
call
xchg
sbb
test
mov
cltd
lods
push
push
mov
sbb
add
iret
jge
rorb
call
subl
mov
js
dec
push
movsb
testb
pop
sbb
jo
test
lcall
stos
mov
jecxz
lcall
les
pop
jl
cmp
loop
dec
ret
dec
mov
push
or
insl
and
lcall
xchg
pop
fcmovu
outsb
ds
into
in
paddb
cs
and
push
ss
add
sarl
out
push
or
xor
jae
mulb
push
mov
xchg
mov
push
add
add
repz
mov
inc
fdivrl
and
shll
push
js
mov
mov
mov
pusha
ficompl
scas
cmpsl
dec
lahf
dec
pop
push
xchg
xor
inc
enter
sbb
sbb
mov
orl
cld
loop
iret
jb
jne
mov
xchg
dec
cli
pop
clc
aam
xor
jge
mov
ds
jle
int3
adc
js
add
mov
push
scas
mov
call
sub
sbb
in
fiadds
pop
adc
aaa
cld
push
sub
lock
lock
repnz
mov
std
sbbb
mov
pushl
and
mov
test
mov
pop
xchg
call
pushf
aad
mov
scas
add
push
test
dec
pop
mov
int3
sbb
push
call
cmp
sbb
nop
fdivr
cmpl
pmuludq
iret
cli
lcall
gs
mov
pop
fcmove
ret
popa
lds
shll
fld
push
pop
leave
call
pushl
outsb
cs
xor
inc
inc
das
insb
mov
std
mov
cli
xor
mov
lcall
or
mov
add
cs
adc
pop
into
jge
je
jbe
fcomip
int3
inc
shrb
or
cmpsb
adc
dec
clc
cmpsb
sub
mov
mov
pushl
jmp
jne
sub
adc
sub
lds
cs
add
xchg
dec
jno
add
call
imul
cmp
leave
fldz
pop
inc
ljmp
iret
out
test
repz
call
inc
adc
imul
mov
mov
cmp
add
pushw
call
xor
jns
sub
xchg
sahf
movups
icebp
jns
mov
inc
loopne
outsl
orb
incl
jbe
xchg
xchg
mov
sbb
push
lcall
dec
lock
cmp
lds
sub
in
pop
lds
enter
ret
sbb
jo
pop
pextrw
dec
int3
pushl
and
test
mov
push
add
arpl
daa
mov
pushl
sub
mov
adc
hlt
js
cwtl
cli
shl
ss
clc
sti
pop
lock
pushl
and
xor
sarl
xchg
outsl
adc
lcall
bound
decl
das
add
xchg
mov
adc
in
test
dec
and
mov
rcr
repnz
or
ja
in
mov
inc
movsb
decl
or
in
push
mov
cmpsl
lea
cld
xor
xchg
pop
pushl
mov
addl
ja
sub
sbb
lods
enter
testb
mov
push
inc
call
mov
movsl
sbb
int3
fldenv
stos
call
clc
jecxz
fidivl
xor
fdivrp
jno
ljmp
add
rcll
imul
orb
and
mov
ljmp
mov
push
fnstcw
out
jmp
or
aaa
fcompl
sbbb
sub
in
fildl
mov
sarb
pop
xor
jmp
ljmp
jbe
push
fiaddl
lea
inc
imul
and
sar
xchg
aam
scas
and
or
dec
out
xor
lcall
mov
rolb
or
fildl
in
dec
cltd
das
mov
mov
cmpsl
fcmovb
jbe
jmp
add
cmc
scas
cmp
jmp
addb
inc
pop
and
mov
decl
mov
mov
out
adc
mov
mov
or
jp
push
into
icebp
mov
and
pushl
mov
pop
aam
mov
js,pt
lods
add
in
or
mulb
out
mov
xchg
sub
mov
jge
popf
pop
mov
pushl
insb
dec
lock
xor
punpckldq
aad
mov
push
jg
pop
in
nop
add
dec
das
sub
mov
stos
dec
daa
lret
mov
fwait
adc
lcall
jmp
xchg
into
pop
cmp
lods
adc
sbb
jg
jg
dec
lds
push
add
rclb
and
mov
sbb
dec
fdivr
mov
push
outsb
add
or
popf
jecxz
sbb
lods
mov
sbb
push
adc
mov
mov
adc
xor
pop
xor
add
adc
stos
cmp
js
das
mov
pop
ret
ret
pop
fadds
pop
rcll
or
mov
dec
xchg
dec
cmpb
push
popl
add
sti
push
loope
cmp
push
jmp
andb
cmp
cmpl
sub
add
dec
dec
or
ja
fcoms
mov
cmp
ss
and
mov
inc
mov
add
mov
jmp
nop
mov
addr16
xor
xor
pop
xor
add
test
inc
sub
or
inc
lea
movsb
pushl
jg
add
and
add
call
mov
fistpl
scas
arpl
xchg
pusha
scas
mov
mov
inc
ror
and
xchg
or
bound
std
inc
stc
call
mov
gs
dec
jmp
xor
movd
or
adc
icebp
scas
jg
pushf
mov
mov
popa
inc
stos
push
mov
mov
shll
xchg
das
test
lock
ljmp
pusha
test
mov
call
ljmp
jmp
push
hlt
loop
or
fnstenv
lcall
sub
or
dec
fistl
push
nop
dec
call
mov
xor
mov
add
cli
into
dec
mov
adcl
inc
and
outsl
stos
enter
aam
sbb
test
inc
dec
xchg
orl
jp
scas
out
dec
stos
lea
cmpsl
jge
shlb
ljmp
test
in
sbb
test
jp
loop
add
add
dec
test
cmp
stos
push
sahf
sahf
adc
mov
cmc
and
cwtl
adc
inc
pop
ljmp
clc
dec
jg
or
xor
sti
and
sbb
adc
push
addr16
cmc
mov
fcomip
lock
enter
sbb
aas
mov
fwait
and
enter
mov
lahf
inc
call
leave
dec
or
ds
lock
jnp
jg
sahf
mov
daa
mov
sar
adc
sahf
rcll
xchg
push
mov
mov
xchg
pop
xchg
iret
daa
dec
mov
mov
test
popf
sbb
add
lahf
jbe
lods
insl
dec
mov
decl
aam
push
sbb
shrl
fdivl
nop
bound
inc
or
mov
xchg
cwtl
addr16
lcall
push
and
mov
xlat
xor
lods
in
and
leave
cmp
mov
push
adc
insl
out
xor
sub
sub
out
pop
loopne
push
shlb
cli
cld
cs
cltd
xchg
movsl
es
clc
sub
sbb
into
scas
outsl
vsqrtpd
call
and
mov
stos
daa
mov
outsb
sbb
adc
jne
mov
jmp
sarb
idiv
fistpll
ss
movsb
push
push
dec
inc
pushf
ljmp
jae
test
and
push
in
test
lcall
repz
fidivrs
push
jge
decl
mov
cli
in
ljmp
and
and
aaa
test
fmuls
repz
dec
lcall
push
shr
fisttpl
mov
and
cld
mov
and
loopne
dec
in
arpl
hlt
sbb
xor
mov
jecxz
sbb
dec
test
jae
insb
jmp
enter
cltd
pop
dec
ret
call
popa
dec
fnstsw
imul
cmp
loop
leave
icebp
mov
in
push
lods
sub
imul
decl
cmp
ja
mov
mov
test
jg
fistpl
or
repz
popa
mov
push
fs
mov
jl
xchg
mov
cmp
jnp
in
test
jl
inc
dec
xchg
sti
out
push
xchg
in
adc
call
cli
jnp
cmpsl
dec
jl
mov
pushl
cmp
shl
nop
testb
xchg
cld
lcall
aad
call
cmp
lea
mov
in
dec
push
jge
or
jl
pushl
nop
cmp
jmp
inc
in
mov
arpl
out
nop
cmpsb
pop
mov
cmc
in
cwtl
mov
sub
push
push
jl
pop
scas
jle
jl
ljmp
int3
pushf
pop
js
or
aam
or
hlt
out
cmp
inc
sbb
jbe
sbb
mov
xor
mov
dec
out
aad
sahf
movsl
cmp
repnz
in
cmp
ss
fmull
decl
xor
int3
lods
mov
into
and
ror
loop
inc
scas
adc
push
mov
mov
jns
loopne
lds
jecxz
sti
push
out
sub
subb
pop
aam
or
pop
mov
addr16
movsb
in
enter
and
mov
xchg
jne
or
xchg
ljmp
movsb
test
and
dec
std
arpl
aaa
mov
jecxz
adc
outsb
cmp
outsl
mov
push
outsb
dec
into
lret
daa
dec
lret
leave
jmp
repz
inc
es
or
fmul
add
adc
push
xor
or
das
imul
mov
add
scas
push
ljmp
pushl
and
repz
dec
pop
fcompl
sbb
popf
dec
xor
dec
push
mov
filds
filds
adc
scas
sbb
loop
dec
push
ds
dec
xor
clc
dec
adc
xchg
cld
dec
mov
xchg
xor
xchg
jmp
aaa
jge
mov
push
lret
cmp
negb
mul
faddp
das
call
ss
test
pop
xor
sub
or
pusha
adc
pop
repnz
pop
jno
push
lea
imul
sbb
dec
jno
push
push
ss
inc
movsb
xchg
mov
inc
cwtl
orl
xchg
dec
pop
inc
jg
jg
inc
xchg
mov
push
push
mov
jno
push
out
xor
cli
adc
incl
movsl
add
cmp
mov
mov
ljmp
ljmp
push
xchg
pop
and
xor
or
fdivrl
pop
pop
movsl
xor
in
add
test
mov
insb
push
mov
sub
xchg
pusha
insb
pop
das
fcmovnu
ljmp
jmp
fnstcw
in
jb
faddp
sub
lods
movsb
mov
mov
arpl
iret
popf
push
jg
incl
popf
mov
sbb
jl
fs
dec
or
inc
out
pop
decl
fdiv
xchg
jno
adcb
pop
fiaddl
cwtl
jae
sub
jp
arpl
hlt
incl
jl
loop
inc
push
xchg
and
mov
adc
enter
jmp
jmp
pusha
sbb
jb
pusha
enter
xchg
adc
mov
aaa
sbb
lds
popf
or
dec
xorb
in
cmp
ljmp
xchg
mov
pop
pop
sbb
addr16
imul
outsl
dec
xchg
jno
mov
pop
lcall
fucom
push
jecxz
or
and
leave
mov
stc
scas
dec
test
call
cmp
test
outsb
xor
cmp
test
repz
cmpsb
xor
sub
arpl
decl
lods
cmp
xor
jp
daa
mov
sbb
imul
dec
mov
inc
mov
lcall
push
fnstsw
xor
call
test
int
bound
adc
decl
jmp
inc
in
xor
push
or
or
gs
in
stc
mov
xor
pop
leave
push
pushl
cld
sub
mov
and
push
dec
aam
sub
or
push
jmp
cmc
int
xchg
idiv
jmp
mov
mov
sub
jmp
sbb
mov
ljmp
or
mov
cmc
and
add
aad
popa
mov
push
movsl
pushl
jns
mov
mov
mov
ret
fldcw
lds
inc
dec
movsl
ret
xor
pushl
jmp
or
lret
pop
mov
xchg
jmp
loope
fs
dec
xchg
roll
lcall
add
pop
scas
adc
mov
sub
std
pextrw
adc
fidivrs
std
fs
xchg
xchg
mov
mov
xchg
imull
pusha
divl
incl
sub
pop
stos
push
aas
xor
push
mov
insl
and
dec
loope
movsb
add
pop
ret
pop
pushf
out
clc
xor
dec
movsb
add
insb
rorl
movsl
sbb
mov
decl
fucomi
in
push
std
and
mov
dec
fcmovne
cli
jl
inc
mov
cs
jp
mov
and
push
mov
cmp
lock
dec
mov
jmp
cmpsl
push
cmp
adc
bound
pop
sti
cld
and
decl
lret
addr16
jp
outsl
adc
pop
fdiv
roll
ja
int
sbb
ja
popf
push
jnp
mov
jmp
push
psrad
in
mov
mov
div
mov
ljmp
jmp
js
in
sbb
loopne
insb
xor
cmp
mov
or
fcoml
xor
jle
xchg
xchg
fwait
test
push
fcmovnbe
outsl
iret
inc
out
cmp
ffreep
add
addr16
movsb
jle
jne
mov
loop
es
fstps
ljmp
cs
jb
push
dec
and
sbb
rcll
dec
push
jg
pusha
pushf
incl
jle
stos
test
sbb
jmp
jno
popf
jge
shll
sahf
roll
je
aaa
dec
add
outsb
jnp
popa
lret
adc
lds
loop
xchg
shlb
clc
or
push
std
lret
xchg
movsb
psubw
clc
shlb
xchg
or
aas
dec
jae
mov
jnp
pop
jns
xchg
test
gs
popa
inc
jmp
cmpl
lahf
dec
fistps
shrl
int3
sub
xchg
inc
xchg
andl
mov
fmul
pushf
mov
sub
fstl
sbb
ficoml
inc
out
dec
cwtl
cmp
push
or
jo
lods
js
mov
in
inc
pop
jmp
push
adc
or
jg
lods
push
rorb
in
sbb
dec
jno
push
cmp
test
repnz
adc
xchg
pusha
xchg
mov
push
sti
mov
mov
xor
mov
mov
cmpsb
outsb
arpl
cmpsl
scas
xor
loopne
jg
dec
jle
pop
adc
cwtl
mov
dec
push
out
sbb
mov
mov
incl
xchg
fmull
insb
push
and
jne
out
cmp
jp
movsb
pushf
sub
rcr
push
inc
jmp
rcrl
jge
data16
pop
cmp
std
pusha
pop
adc
cmp
cs
ljmp
int
mov
vpinsrw
push
jmp
add
loop
mov
cmp
ja
test
add
pop
mov
mov
stos
fiadds
inc
mov
mov
loope
add
hlt
jmp
lret
jnp
add
sbb
enter
jmp
leave
test
icebp
arpl
or
xor
lea
and
sub
mov
cmp
shrl
sbb
adc
mov
push
mov
rorb
adc
ljmp
enter
pop
xchg
xor
scas
addr16
int
lahf
aad
ret
fidivl
xchg
dec
cmp
jno
cs
mov
pop
stos
add
xchg
roll
push
jg
ja
dec
scas
mov
imul
lods
shll
in
pushl
pop
stc
lcall
push
out
pushf
and
sub
iret
movl
lcall
inc
pusha
mov
fdiv
fwait
or
add
es
pop
test
push
fs
jmp
xchg
out
push
jg
add
adc
cmp
int
adc
dec
dec
jg
push
addr16
xor
xor
mov
stos
push
xchg
cmp
jb
mov
popf
aam
loope
dec
mov
push
sub
push
test
cmp
icebp
add
dec
addb
push
inc
in
pop
cmpsb
push
sete
xor
and
ljmp
mov
dec
dec
dec
pop
jns
enter
add
inc
inc
ljmp
and
movb
jmp
push
fisubs
loopne
pop
popa
ftst
adcb
and
jmp
js
ljmp
cli
pop
rcr
les
fstps
lret
stos
mov
das
stos
getsec
jb
sub
movsl
mov
aad
incl
lret
mov
xor
test
cwtl
push
pop
jnp
shlb
incl
adc
cltd
arpl
popa
stos
jmp
jle
inc
sbb
dec
mov
lcall
dec
mov
test
gs
cmp
mov
jmp
jb
sbb
cld
xchg
cmp
push
sti
cs
repnz
repz
pop
pop
ljmp
jmp
and
mov
mov
lahf
sub
xchg
or
cli
adc
xor
mov
xchg
ljmp
hlt
faddl
xor
cwtl
cmp
cmc
mov
not
push
or
rorl
in
mov
ljmp
inc
pop
pop
adc
shr
repz
sti
cmpsl
inc
inc
mov
ret
pop
std
ljmp
das
sbb
jmp
or
ljmp
repz
xor
lods
lcall
jbe
sbb
push
imul
mull
push
cmp
lcall
decl
out
mov
ljmp
lcall
test
mov
push
scas
divb
sarb
imul
pop
in
loop
adc
test
ret
hlt
add
dec
push
adc
addr16
stos
sbbl
insl
jmp
ljmp
add
pop
pushf
iret
addr16
fcompl
inc
push
and
sub
dec
fs
mov
xchg
jmp
test
push
sub
pop
xor
sbb
mov
mov
push
jge
sub
mov
push
push
fwait
leave
or
call
jl
sbb
lret
jmp
mov
mov
pop
imul
cmp
addb
sub
cli
inc
jae
mov
jmp
jge
add
cwtl
or
sub
push
push
sbb
into
pop
insb
mov
adc
inc
or
out
sub
push
jecxz
sub
cmc
xchg
pushl
pop
ljmp
dec
std
sbb
add
mov
mov
ljmp
xor
pop
inc
push
add
cmc
mov
loopne
jecxz
sub
sbb
pop
inc
out
push
cmp
ljmp
shr
add
popf
add
xchg
mov
test
mov
bswap
lods
push
decl
repnz
sbb
popa
adc
pop
dec
mov
push
adc
jo
aas
jg
cmp
xchg
decl
nop
imul
sub
call
lods
sub
out
xor
decl
push
imull
push
movsb
in
adc
outsl
test
outsl
xor
pushl
in
pusha
cmp
into
mov
cwtl
popf
fildll
xor
jle
dec
or
outsl
cmpsb
mov
clc
push
sahf
andl
xchg
mov
cmc
mov
lret
inc
cld
mov
sbb
divb
ret
mov
rclb
pushf
imul
rol
in
aad
mov
enter
cmp
in
movsl
jp
scas
clc
mov
dec
cmp
das
lret
popf
pop
or
add
xchg
decl
push
xchg
xchg
push
lock
mov
test
stos
cmpsl
xlat
decl
push
call
mov
dec
sbb
sahf
sarl
decl
mov
int3
daa
pop
push
into
in
cmp
xchg
sbb
or
std
xor
sbb
dec
mov
mov
sarl
cmp
fldcw
pop
add
pop
pushl
push
xor
dec
inc
push
xchg
insb
scas
icebp
or
mov
add
stos
clc
call
mov
sub
pusha
dec
dec
dec
stos
add
mov
out
dec
dec
and
imul
movsb
clc
insl
xor
stos
jne
mov
xchg
push
outsl
clc
push
les
and
insl
not
ds
jb
push
mov
mov
cmp
jbe
jno
lahf
jg
adc
xor
testb
sbb
cmp
xor
mov
pushl
test
pushf
and
push
mov
lret
sahf
fadds
outsb
push
inc
das
clc
jmp
pop
and
jo
and
int
dec
push
mov
jmp
je
mov
call
addr16
pop
cmp
lds
cmp
sub
push
dec
cmc
push
jg
add
out
cmp
jnp
dec
jle
sub
arpl
add
paddsb
call
in
mov
adc
cltd
sahf
mov
iret
pop
inc
push
sbb
gs
dec
sub
xchg
in
xor
pop
incl
les
out
sbb
dec
push
mov
xor
mov
je
push
xor
cmc
dec
and
mov
inc
pop
gs
out
jns
mov
loopne
sbb
mov
adc
and
pop
push
adc
je
xchg
jg
push
fbld
push
and
inc
loopne
call
testb
mov
lock
xchg
out
sub
repnz
imul
mov
leave
or
cs
sbb
jmp
mov
sub
jmp
cmp
mov
call
jecxz
cld
ds
divb
out
mov
scas
loopne
mov
and
mov
cld
loope
in
in
lcall
jb
mov
clc
std
call
mov
outsl
movb
ds
adc
popa
mov
je
nop
push
push
push
cld
mov
loope
mov
and
push
and
lret
lcall
sbb
sub
mov
adc
pop
aad
dec
icebp
or
out
push
push
vpshuflw
decl
jmp
push
sbb
test
pop
gs
into
enter
xchg
sbb
jg
aam
cmpsb
dec
das
xchg
cmp
bound
cmpsl
mov
aas
call
inc
pop
mov
mov
int3
or
mov
add
in
lea
pop
sbb
call
push
jmp
mov
test
cmp
in
and
mov
lahf
xor
decl
push
test
rolb
ljmp
or
data16
call
mov
add
test
cmp
scas
mov
cmp
add
sbbb
pop
mov
aad
es
and
divb
nop
dec
mov
jae
stos
scas
lcall
dec
mov
xor
xchg
add
testl
jo
and
das
leave
cltd
cld
dec
push
roll
fildll
mov
jge
push
xlat
out
mov
inc
xchg
xor
cmp
or
sub
jnp
cmp
mov
push
mov
cmp
jmp
inc
mov
adc
mov
testl
inc
adc
jbe
mov
inc
movsl
iret
mov
incl
cmpsb
fdivr
sbb
jmp
mov
rorl
sarb
push
mov
dec
das
mov
insb
mov
js
shlb
ds
and
scas
lods
rcrb
and
test
out
xchg
psubsw
pop
inc
jo
cltd
adc
mov
movsb
sbb
repz
jmp
jbe
popf
data16
stos
decl
dec
int3
ret
in
jbe
jns
pop
add
dec
das
stos
fwait
add
loop
cmp
push
in
call
in
jle
loop
xchg
pop
mov
add
xchg
push
inc
add
ljmp
fisubrl
cs
inc
pop
clc
push
cmpsb
scas
sub
mov
add
push
sbb
jmp
sbb
mov
dec
xchg
shlb
mov
push
adc
test
aaa
cmp
cmp
add
pop
push
lcall
lods
ss
popf
push
mov
fcomp
push
inc
push
movsb
jmp
mov
xchg
pop
nop
jl
pop
jo
inc
testb
mov
adc
lods
scas
popl
inc
out
lret
cli
and
lock
iret
xor
xorl
lods
inc
nop
testl
fsubp
jl
jns
or
sar
gs
xor
jo
xchg
xchg
pop
insb
cmp
fcomps
pusha
scas
mov
ljmp
in
rcrb
loope
mov
and
xchg
pop
stc
ja
lcall
shll
out
es
flds
mov
lret
int
inc
add
mov
and
adc
mov
into
test
xchg
pop
cs
ljmp
lock
lea
jnp
pop
push
out
adc
cmc
incl
mov
or
cmp
pop
gs
daa
push
enter
jg
inc
jle
push
mov
in
adc
call
scas
shl
fwait
loopne
mov
lea
loop
lcall
dec
pop
mov
or
repz
outsb
imul
cmp
rcrl
dec
lods
xchg
fiaddl
ljmp
lcall
scas
aaa
jno
cld
pop
jl
xchg
ret
inc
dec
push
cmp
sbb
out
enter
call
ret
icebp
in
sbb
cmpsb
js
pop
inc
std
cmp
aam
and
pop
dec
insb
sub
cmp
fwait
das
push
scas
shll
dec
test
test
adc
mov
xchg
test
ljmp
dec
sub
mov
mov
enter
outsb
push
jecxz
es
incl
fsub
sahf
lret
inc
lock
int
scas
or
xchg
std
test
fcomip
cmp
jge
ds
jbe
jae
xchg
out
nop
bound
lret
cmc
jmp
add
inc
xor
sbb
mov
mov
add
sub
dec
and
bnd
add
push
scas
mov
dec
icebp
ljmp
ja
push
add
ds
push
imulb
jae
pop
xchg
inc
ljmp
adc
mov
rcrb
xlat
rcr
sbb
notl
arpl
ficompl
decl
repz
jle
xor
shl
pop
mov
repz
fucomip
ljmp
fldcw
pop
sarl
dec
mov
bound
fists
sbb
insb
ljmp
push
sub
test
mov
lahf
xor
dec
and
idivb
mov
mov
pushl
rcrb
dec
cs
rcrl
bound
hlt
pop
mov
fldz
incb
aaa
imul
bnd
iret
subb
mov
aam
mov
call
cmp
js
dec
adc
stc
push
mulb
jl
push
pop
lods
adc
daa
add
mov
jmp
mov
ret
sub
push
add
or
mov
mov
adc
push
outsb
jle
dec
movsb
enter
dec
call
rep
xlat
adc
es
sub
inc
idiv
incl
shlb
rcrl
inc
rorb
jns
aam
add
arpl
push
sbb
mov
jl
xchg
inc
mov
mov
shrb
dec
std
stc
mov
fstps
add
pop
ja
incl
loopne
ja
push
pop
xlat
addl
inc
and
popa
mov
xchg
push
decl
xor
mov
fldl
push
mov
aad
cmp
loop
inc
xchg
sbb
and
incl
fstpl
adcl
les
dec
push
xor
xchg
jo
mov
and
stc
clc
cltd
incl
dec
inc
lcall
pop
push
xchg
push
loope,pt
mov
jle
js
mov
call
jecxz
pop
movsl
jecxz
rorb
mov
addr16
lahf
mov
js
lods
pop
jl
fcomip
cli
scas
mov
incb
pop
repnz
das
or
enter
test
incl
insb
and
cmp
pop
push
lock
jp
adc
xor
sbb
mov
ljmp
xor
add
stos
in
int3
inc
xlat
aad
sub
jnp
aaa
iret
jmp
and
bound
and
and
stos
loope
xor
clc
lea
out
inc
push
ljmp
gs
fucom
inc
fistl
fldl
decl
push
dec
adc
push
dec
pop
push
sub
orl
dec
stos
loopne
ret
jmp
fwait
mov
stos
repnz
xor
cmp
cmp
out
cmc
call
loopne
out
dec
pop
aaa
lcall
loopne
fbld
sbb
decl
or
mov
mov
dec
fidivl
adcl
incl
subb
aad
mov
out
mov
dec
adc
xor
pushl
ljmp
shll
stos
popf
insb
loopne
repnz
test
popf
pushf
cs
add
jno
add
in
xor
mov
mov
lea
lcall
adc
push
cs
das
dec
mov
xchg
pop
or
xchg
lds
lcall
push
in
loopne
pushf
mov
sbb
lea
xchg
jns
or
out
jg
call
gs
imul
int3
adc
mov
mov
shr
lds
push
movsl
inc
lret
jmp
mov
jle
add
mov
mov
cmp
rcll
mov
adc
clc
xorb
ljmp
sub
es
mov
dec
add
jns
fcmovnb
mov
aaa
mov
jg
mov
cmp
mov
xchg
cmc
dec
inc
mov
add
jne
sub
in
out
adc
scas
loop
mov
cs
pop
shufps
int
push
cld
pushl
sbb
arpl
fidivl
popa
inc
rolb
les
or
call
mov
pushf
daa
pop
data16
shll
xlat
scas
xchg
mov
inc
dec
lret
xchg
faddl
lods
fsub
decl
push
imul
dec
jmp
into
pushf
movsl
sbbl
cmp
fnsave
push
or
pop
push
sub
mov
push
jo
cwtl
add
push
ds
mov
jmp
push
jnp
add
in
jg
mov
ljmp
pushf
mov
fnsetpm(287
push
cld
xlat
out
adc
xor
xor
test
pop
add
mov
pushl
pop
jle
adc
adc
stos
dec
xchg
nop
adc
mov
roll
movsl
jmp
das
jo
cmc
aad
fmul
lea
incb
daa
lods
add
jmp
adc
out
push
adc
push
sbb
push
in
adc
mov
pop
pop
mov
decl
mov
pop
std
mov
daa
insb
pop
es
into
call
adc
ljmp
sub
call
jae
ja
mov
jge
push
pop
addr16
fistpll
mov
ljmp
inc
mov
dec
adc
and
fistps
ds
adc
sarb
mov
jg
out
cmp
xchg
test
fmull
jno
jnp
pop
fsubl
pushl
pop
loop
mov
xor
pop
subl
cmpsb
fsub
outsl
cmc
lret
scas
call
clc
xchg
push
xchg
adc
sub
mov
pushl
out
lret
xor
lret
dec
sbb
cmp
pop
mov
ljmp
xchg
push
ss
fldt
mov
int
inc
dec
in
lahf
rorb
mov
call
popa
lea
mov
cmp
nop
mov
ds
pop
mov
jp
stos
pushl
cld
popf
in
outsl
dec
jnp
inc
xchg
mov
fcmovnb
or
insb
fnstsw
je
adc
incl
cld
inc
dec
adcb
add
js
mov
lretw
mov
push
cli
mov
add
and
gs
into
mov
push
pop
or
push
icebp
jmp
pop
sbb
or
ja
dec
clc
scas
loope
decl
cmp
psrlw
inc
pop
inc
inc
pop
cmp
add
xchg
jae
mov
xor
jno
lcall
out
and
stc
adc
push
cld
ret
bound
push
adc
cltd
rcrb
adc
xchg
lock
std
pop
mov
add
jge
sbb
popf
sub
fisttps
jae
xchg
movsl
mov
dec
sub
push
mov
xchg
lret
fistpll
ds
decl
push
cld
rcrl
fisttpll
lock
mov
xor
xchg
sbb
wrmsr
ljmp
test
push
mov
and
decl
xor
das
adc
pushf
aas
pop
into
loopne
sbb
dec
sbb
push
push
hlt
jo
pushl
mov
add
xchg
roll
push
pusha
addr16
lret
test
ja
push
call
imul
imul
add
sub
jo
jge
call
lods
jne
cmpsl
or
push
cmp
repnz
idiv
push
xor
in
mov
mov
cs
pop
xor
add
fs
ljmp
xchg
fisttpl
push
push
sbb
movsb
cvttps2pi
mov
mov
sbb
fstpl
stos
dec
pop
lock
lcall
mov
pop
sbb
sahf
call
push
fidivs
sahf
loope
das
sar
ljmp
stos
stos
lcall
add
outsb
dec
xlat
pushl
std
jmp
idivl
jmp
outsl
scas
pop
sar
daa
inc
test
aad
ss
inc
fdiv
pusha
push
mov
movsl
faddl
and
inc
dec
outsl
cli
ss
pop
cmp
test
jne
outsb
ret
icebp
movsl
xorl
inc
cs
push
out
sub
imull
dec
notl
pop
nop
loope
nop
sbb
xor
int
das
clc
fistpll
mov
adc
in
push
clc
repnz
rcl
pop
add
out
add
lcall
dec
xor
mov
test
lea
imul
jnp
push
mov
mov
mov
push
inc
inc
jl
ja
xor
sbb
ljmp
insb
nop
add
stc
mov
jl
fldcw
call
dec
push
int
mov
js
xchg
rcrl
ds
ds
jle
data16
mov
xor
fld1
js
jnp
mov
imull
in
repz
dec
in
leave
clc
das
mov
bound
pop
addl
jmp
sub
mov
incl
fsubp
scas
xor
leave
divb
push
int3
das
and
pushf
test
fcmovb
loopne
mov
movsb
jle
ljmp
xchg
mov
mov
cld
int3
insb
fstps
cmp
dec
add
ljmp
jg
xchg
imul
cmp
imul
sar
ljmp
push
aas
push
gs
lods
insl
ja
add
xor
int
add
xor
jg
jg
xor
in
push
dec
inc
test
adc
mov
std
out
jb
dec
in
in
inc
ret
mov
push
sub
add
push
in
pushf
sub
cmc
mov
mov
mov
in
mov
mov
stos
jno
nop
cwtl
mov
pop
adc
nop
mov
lds
push
mov
call
mov
dec
int3
rol
add
pop
pop
mov
and
ret
inc
jp
sub
js
repz
loopne
inc
sbb
add
push
cmp
pop
add
sub
call
sahf
notl
loopne
inc
mov
stos
enter
sub
sub
movsl
and
push
xor
jge
in
mov
pushf
dec
pop
dec
arpl
fisubrs
xchg
test
push
dec
adc
inc
xchg
insb
cmp
or
mov
inc
out
push
aaa
xor
add
mov
pushl
add
nop
mov
mov
inc
inc
pop
inc
jns
fidivrl
rcrl
dec
clc
lcall
sarb
push
xor
jbe
and
bound
pop
cmp
adc
sbb
rorb
mov
bound
adc
pop
scas
mov
bound
jmp
nop
push
stos
adc
or
push
inc
mov
pop
loop
movsb
lcall
cli
jge
sbb
into
mov
push
xor
mov
add
fimull
arpl
lcall
jge
sub
push
lret
mov
cmp
mov
subl
addr16
push
ret
sti
pop
call
push
or
xor
fwait
mov
inc
aas
pop
hlt
fildll
mov
andb
ds
out
sub
lcall
or
shlb
cs
stc
in
dec
xor
inc
cmp
sbb
sub
std
incl
mov
shrl
in
mov
shl
jp
xor
in
sti
jne
push
xor
pop
push
sub
aam
add
addr16
mov
pop
leave
pop
lods
lock
mov
cld
jae
cltd
dec
outsl
jecxz
mov
inc
cmp
ja
xor
lcall
inc
loop
jae
mov
outsb
test
jmp
mov
cwtl
adc
lea
fs
cmpsl
aam
inc
sbb
call
push
xchg
inc
jp
adc
dec
mov
add
mov
ljmp
mov
push
and
mov
xchg
cli
stos
scas
sarb
std
decl
loope
bound
out
fdivrp
mov
sub
sbb
lea
js
xchg
inc
inc
xchg
mov
inc
adc
test
cmp
addr16
push
fadds
inc
xchg
sbb
jmp
cs
mov
mov
icebp
pop
xor
movsl
clc
out
push
xchg
mov
imul
pushl
sahf
mov
outsl
jmp
xchg
sub
clc
xor
inc
lcall
jmp
add
mov
push
dec
pop
les
es
scas
sbb
std
out
jbe
and
mov
lret
pop
inc
arpl
jge
xor
cmp
jmp
aas
inc
incl
fdivl
add
inc
test
xchg
push
imul
xor
movsl
adc
sbb
repz
pushl
negl
cs
rorb
fadds
outsl
cli
xchg
jp
lcall
outsl
cmp
fists
or
or
roll
call
mov
stc
fdivrl
adc
in
or
mov
mov
inc
sub
cmp
cltd
xchg
add
pop
jo
sbb
pop
popa
ljmp
sti
inc
push
jae
fwait
lcall
loopne
cltd
mov
lcall
in
loopne
decl
mov
repnz
jge
mov
enter
ret
pop
or
push
loope
inc
decl
into
mov
inc
js
cmp
into
push
cld
sti
rcrl
ret
cltd
mov
decl
pop
fucomi
addr16
cmp
shll
enter
inc
jb
dec
mov
sub
inc
popa
mov
and
loop
inc
cli
adc
sub
outsl
cmpl
inc
call
add
cmp
mov
ret
sbbl
sti
or
aas
sbb
dec
dec
dec
scas
testl
sub
test
jg
pop
xchg
jge
aam
out
incl
push
jle
xchg
or
sbb
inc
adc
popa
fwait
data16
rol
ljmp
sub
and
incl
xchg
xchg
idivb
cmpsb
loopne
cld
movsl
pop
adc
pushf
pushl
jg
je,pt
mov
or
rclb
into
and
sahf
push
sar
decl
dec
je
dec
divb
and
leave
mov
mov
cmc
daa
lcall
mov
cmc
decl
cld
adcl
popa
lods
dec
aaa
icebp
gs
test
les
lock
sub
fnstsw
test
push
xchg
ret
scas
nop
xor
mov
cmp
mov
xor
mov
fildl
lds
or
shrl
call
roll
test
pop
push
test
pop
in
fsubrl
roll
adc
add
pop
xchg
mov
mov
fistps
sbb
ja
adc
sub
fisttps
sub
cmp
and
fcos
outsl
mov
fcomip
mov
enter
in
lods
repnz
jmp
into
sub
push
mov
out
dec
gs
sub
mov
es
adc
decl
push
dec
jle
mov
in
aaa
popf
mov
nop
and
xchg
daa
in
mov
decl
imul
cwtl
sub
pop
fwait
mov
scas
jnp
popa
xor
or
jo
lcall
pop
jecxz
inc
lahf
push
scas
cmp
xor
mov
jb
cmpb
mov
hlt
out
jb
mov
mov
mov
dec
cmc
xor
sbb
jmp
adc
or
test
bound
mov
lods
adc
in
filds
pop
jmp
inc
out
sub
fstpl
cltd
jmp
inc
and
adc
xchg
lret
sarb
mov
pop
or
fldl
mov
call
les
shrl
mov
scas
and
inc
dec
jb
lock
pop
je
and
inc
sbb
adc
sti
cmc
sbb
sub
aas
mov
stc
pop
stc
pop
out
pop
mov
inc
aas
and
mov
xchg
push
lods
xor
jo
jbe
lcall
inc
and
ljmp
int
cmpsb
cmp
push
lods
sti
in
pushl
add
mov
shll
fsubrl
loop
inc
pop
jae
aad
les
lods
sub
jmp
pop
fisubrl
xor
or
jmp
fistps
orl
mov
call
push
dec
inc
ja
push
nop/reserved
sbb
or
mov
sbb
clc
xor
sub
ljmp
nop
negl
and
xor
pop
cltd
call
push
jp
gs
xor
jmp
xor
mov
out
xchg
scas
nop
push
roll
rorb
nop
notb
and
pop
jmp
arpl
adc
mov
shrb
add
mov
cmp
cmp
aaa
inc
cld
aaa
ja
lret
lcall
xor
stc
in
cltd
cmovl
loopne
arpl
test
cmp
ljmp
das
xchg
or
in
and
pop
popf
rcr
dec
jb
inc
inc
mov
mov
je
xorb
test
jnp
fwait
adc
incl
lret
sti
sub
in
pop
cmp
xor
outsb
and
add
cwtl
out
clc
xor
add
ja
mov
sbb
dec
and
in
lret
jno
inc
cld
cmp
xchg
aad
ds
adc
cld
insb
in
scas
test
adc
mov
jle
cmp
or
xor
pushf
lds
incl
cmp
dec
fs
fsubs
ds
loopne
pop
insl
xchg
pop
sub
add
xchg
mov
or
pop
and
or
pop
fdivrs
mov
and
sahf
nop
das
pop
pop
scas
xchg
ljmp
mov
sbb
in
lret
push
inc
sbb
sub
rolb
aad
cmp
sub
xor
add
push
aam
xchg
adc
mov
mov
push
fdiv
adc
clc
into
mov
jno
cwtl
dec
inc
enter
js
decl
scas
mov
push
out
cmp
loop
push
push
add
sbb
cmp
and
sbb
push
test
data16
mov
daa
cmp
aas
lock
lcall
fdiv
fsubrs
mov
or
repz
inc
or
and
divb
push
std
fnsave
cwtl
xlat
sbb
lock
or
pop
fdivl
mov
adc
cmpsl
lcall
push
push
push
sub
adc
lcall
mov
jno
into
push
scas
das
lret
das
mov
mov
loopne
jle
enter
mov
mov
mov
and
inc
nop
stos
push
out
hlt
mov
jge
arpl
jmp
sub
out
sub
daa
pop
pop
jle
loop
jb
call
xchg
mov
cmpsb
ja
cli
or
push
pop
cwtl
or
push
or
ss
cmp
cmc
icebp
in
les
fdivs
xchg
std
inc
jl
call
daa
dec
sub
or
lcall
mov
xor
adcl
ja
jecxz
sbb
call
xchg
mov
lds
jb
cmpsl
stos
lret
adc
je
push
movsl
call
call
fsubs
stc
pop
push
inc
inc
cli
xor
add
rolb
fadd
scas
mov
decl
push
push
pop
repnz
stos
aad
and
push
bound
mov
sub
jmp
mov
es
mov
shr
adc
outsl
pop
add
cld
call
fs
sti
sti
add
ret
inc
inc
outsl
in
inc
test
movsb
jnp
mov
insb
fidivrs
mov
lock
dec
js
je
adc
out
imul
mov
mov
dec
xchg
loope
in
in
push
sbb
out
dec
jbe
incl
nop
jg
ret
push
movb
inc
cwtl
xor
pop
jge
mov
sar
incl
into
cmp
xchg
sub
mov
das
adc
jno
cmpsl
out
mov
inc
in
and
scas
jge
sbb
addr16
or
clc
dec
pop
xchg
add
fcmovnu
mov
or
dec
and
out
xchg
aad
mov
sbb
fiaddl
dec
jecxz
daa
sbb
or
mov
fidivs
push
dec
aad
insb
out
xor
xor
and
incl
push
xchg
mov
inc
call
add
or
and
jge
je
dec
dec
add
jns
decl
loop
or
jg
push
cmc
push
sbb
outsl
icebp
push
push
in
cltd
cltd
outsb
jb
xchg
ljmp
in
or
clc
outsb
inc
rcr
lea
int
test
sub
mov
call
dec
and
or
mov
outsl
cmpsb
lret
xor
lret
xchg
out
out
sbb
data16
lcall
adc
insb
mov
adc
mov
xor
lahf
mov
cwtl
movsb
dec
xchg
and
sahf
decl
pop
xchg
pop
push
push
sbbl
bound
adc
xor
and
inc
push
inc
std
hlt
lds
mov
jno
or
imull
hlt
pop
sbb
aas
test
push
cmp
call
cld
jge
into
sub
pop
shll
mov
sti
mov
mov
push
out
jae
add
pushl
popf
aas
and
test
es
fldcw
bound
and
adc
xor
jmp
sbb
cmp
pop
fwait
scas
je
adc
popa
add
lcall
mov
sub
sub
aad
dec
shll
fwait
dec
jne
xchg
push
push
jmp
cli
push
ljmp
mov
sub
pop
mov
enter
adc
jno
nop
jg
loop
repnz
les
lcall
dec
mov
iret
or
lret
out
cli
mov
push
testl
mov
int3
xchg
cmp
sahf
inc
into
mov
in
lcall
mov
cmpl
shlb
or
mov
aad
push
xlat
mov
lcall
std
and
jne
rcl
and
fsubr
popa
fs
jb
lret
pop
pop
sub
popa
ljmp
dec
dec
das
stc
into
in
jae
xchg
xchg
lock
test
jno
or
popf
push
imul
scas
dec
incl
sub
out
mov
pushf
ljmp
rorb
pop
std
ljmp
mov
je
or
dec
xor
jb
mov
das
ret
rol
push
aad
jg
ljmp
test
aam
ljmp
sbb
insl
sbb
nop
in
inc
stc
lods
dec
and
ja
pushf
mov
xchg
inc
lcall
frstor
and
ljmp
pop
icebp
adc
faddl
add
inc
shrb
jg
add
outsb
adc
into
push
movsl
xor
mov
sub
ds
adc
xor
mov
cltd
inc
adc
push
mov
jo
xchg
lods
sub
out
cs
js
data16
dec
dec
pop
stos
or
inc
dec
add
incl
stc
and
jb
aam
xchg
adc
sbb
ud1
decl
lds
sub
add
xor
pop
mov
ljmp
xor
sub
pop
insl
pushl
mov
lahf
push
fs
popf
test
hlt
sub
insl
mov
fcomip
call
dec
xor
arpl
js
push
sub
daa
aam
and
sti
inc
sub
cmp
decb
ffreep
cmpsl
cmp
loope
sub
hlt
fidivl
loop
in
pop
push
bswap
inc
lcall
sub
hlt
shrb
pop
arpl
test
les
sbb
and
aam
int
pop
jmp
mov
adc
push
outsb
rcll
nop
push
loopne
xorl
inc
loope
xchg
push
add
movsl
outsb
dec
cltd
out
xchg
dec
or
or
stc
pop
rolb
popa
addb
mov
sbb
xchg
call
mov
jb
xlat
mov
fimuls
and
les
leave
pushf
adc
sbb
in
sub
sub
jg
dec
push
lret
stc
sbb
movsl
sbb
lods
rclb
clc
push
mov
lcall
push
in
xchg
xor
call
test
shll
xchg
ljmp
outsl
mov
inc
scas
cli
mov
adc
jns
jae
popa
das
testb
xor
lock
push
int
xor
xchg
pop
icebp
aad
lods
ret
sahf
fistpl
ret
es
xor
jb
cld
lcall
push
sbb
gs
push
mov
jecxz
push
mov
out
jl
mov
inc
sbb
repz
call
mov
push
sbb
xchg
dec
cmp
iret
pop
cmc
decl
leave
jle
xor
loope
in
pop
cmp
mov
xor
xchg
mov
dec
clc
mov
mov
jo
jg
push
lret
bound
fistps
insl
dec
cld
jg
out
shl
sbb
lcall
inc
cmp
sub
orb
ss
mov
popf
mov
hlt
pop
dec
mov
dec
and
mov
sar
loop
hlt
mov
orl
aam
sbb
and
lcall
aaa
fbld
mov
test
ja
jp
pop
mov
inc
adc
push
lds
mov
jmp
mov
pushf
xor
mov
pop
test
or
pop
ret
fildl
inc
xchg
jno
incl
shl
adc
call
mov
ret
sub
mov
nop
negb
dec
loop
ja
cmpsb
incl
push
pop
adc
ficompl
aam
xchg
es
or
lcall
fs
fcmovb
and
xor
xchg
loope
and
outsb
lret
xchg
orb
decl
daa
jns
jae
pushf
xor
push
cmp
adc
mov
out
jno
inc
dec
loop
inc
push
or
daa
dec
test
cmpsb
mov
mov
adc
xor
or
sub
sbb
stc
add
mov
sahf
and
sbb
roll
lcall
pop
xchg
sbb
call
cli
test
mov
adc
lcall
xchg
lods
les
or
daa
mov
jmp
dec
fucomp
fs
je
push
push
mov
push
ret
mov
mov
clc
jns
push
jecxz
fsts
fnstcw
push
pushf
sbb
loop
or
lods
std
push
jge
incl
lds
movsl
mov
xor
repz
mov
notl
pushf
pusha
nop
jmp
mov
push
imul
cs
xchg
ss
mov
out
mov
das
cs
call
inc
sub
fistl
inc
in
cmp
sahf
add
cli
aad
imull
add
aas
test
ret
cmp
incl
sub
lcall
shll
popa
mov
pushl
adc
pop
fdivp
lahf
sti
xchg
call
pop
out
out
cmpb
lock
fsqrt
mov
cmc
inc
into
mov
ljmp
pop
iret
imul
add
rorb
loopne
jmp
sbb
cmp
mov
mov
xchg
out
fdivl
jmp
stos
mov
sbb
mov
mov
or
int
mov
mul
add
mov
sub
lock
and
xor
cmpsb
mov
inc
cmpsb
movsl
jecxz
stos
and
call
sbb
sub
mov
jp
decl
jns
mov
icebp
push
scas
test
into
push
sahf
inc
test
pushf
cmpsb
push
push
inc
nop
cwtl
mov
gs
push
adc
pushf
shr
rcrb
aas
scas
sub
inc
mov
pushl
push
lds
dec
ds
loope
add
mov
bound
dec
xchg
mov
aaa
jno
decl
adc
xor
or
mov
in
inc
and
loope
bnd
addr16
sub
mov
mov
mov
fsubr
jbe
jecxz
mov
mov
xchg
mov
push
pop
push
cmpsb
adc
imul
add
negl
decl
ret
pop
and
mov
push
sub
xchg
jp
popf
mov
xor
mov
dec
cmp
sbb
lods
mov
ds
stos
ds
lcall
iret
jmp
test
imul
mov
int3
jno
insl
sbbb
push
arpl
ret
sbb
sbb
lock
cmp
xchg
pop
outsb
push
jb
lret
mov
xor
stos
int3
les
lcall
jb
xor
dec
mov
mov
sub
jmp
in
xchg
sbb
dec
in
les
inc
add
sbb
xchg
lret
js
movzwl
pushl
xlat
repnz
maskmovq
testl
aad
sub
xor
pop
loope
mov
push
pop
movsb
or
fmull
cmp
call
das
cli
fdivrs
jbe
lods
xor
das
ja
jmp
mov
loope
inc
lahf
jmp
in
loop
push
xchg
pop
popf
jnp
into
ja
shll
cmp
mov
lcall
cltd
test
int3
dec
inc
cmp
pop
cmp
icebp
cs
pop
cmp
lcall
shlw
xchg
pop
andb
dec
jb
jb
test
test
pop
aaa
stos
add
xor
jg
mov
sub
mov
dec
mov
pusha
data16
aaa
rcrl
decl
xchg
mov
adc
dec
sti
addr16
into
pop
fwait
inc
aas
lea
xchg
cwtl
stc
push
ljmp
xor
int
les
lcall
lods
jnp
and
cs
call
lret
add
add
frstor
test
jno
dec
cld
push
xchg
lods
add
jle
sub
clc
fidivs
xchg
cltd
sub
test
iret
xchg
xchg
sbb
xchg
imul
inc
dec
cmpsl
adc
aas
or
pop
and
faddp
xchg
jmp
notb
fcomip
ret
aad
data16
cwtl
fwait
push
sub
test
sbb
fcomip
jle
addr16
test
pop
jp
inc
repnz
jno
das
pop
or
inc
add
idivl
mov
sbb
pop
repz
jne
push
outsl
fs
jg
stos
pop
jle
test
decb
call
lret
insb
and
orb
pushl
fadd
xchg
and
push
and
push
mov
rcrl
xchg
push
mov
pop
ljmp
lcall
fcom
cmpsb
pop
and
aaa
cmp
xor
jb
cltd
lods
in
repz
jmp
jmp
mov
enter
cmpsl
xchg
cmp
xchg
pop
push
pop
cmp
mov
incl
sub
or
rcll
xor
outsb
sbb
scas
mov
decl
lds
push
or
jae
std
cmc
push
mov
inc
loopne
mov
push
insb
xchg
repnz
inc
sahf
xchg
in
pop
mov
and
mov
cwtl
xor
icebp
rcrl
sbb
call
xchg
sub
mov
or
pop
cmp
not
adc
xchg
imul
insl
pop
cmp
sbb
out
inc
push
inc
mov
mov
xor
jg
cmp
sub
dec
mov
push
sbb
adcl
lods
add
jmp
stos
fcmovne
adc
shll
bnd
adc
ret
into
iret
notb
jnp
std
sahf
inc
sbb
jmp
jae
jl
add
test
imul
lock
outsl
push
les
insl
mov
icebp
decl
xcrypt-cbc
cmpsl
aam
mov
bnd
and
aad
scas
jle
cli
mov
ret
mov
stos
lods
aas
in
faddp
adc
mov
es
das
sub
ja
stos
sbb
ret
sbb
xchg
icebp
cmp
mov
call
ds
dec
fnstenv
cwtl
xor
aas
xor
add
adc
fdivr
aaa
fiaddl
or
pop
aas
push
jb
dec
pop
lea
inc
or
faddl
cmc
fildl
mov
out
mov
xchg
sbb
sub
out
mov
xchg
fbld
mov
out
clc
data16
dec
in
fstl
inc
ret
nop
inc
xor
call
in
mov
jl
xchg
outsb
and
ret
adc
testb
cmp
sbb
pop
leave
xor
fcompl
sub
mov
dec
jecxz
adc
push
idivl
into
andb
lods
lahf
decl
shrl
lcall
jb
xor
sbb
fwait
and
lods
je
jmp
jge
imul
test
xor
imul
mov
push
aam
inc
outsl
push
stc
add
incl
or
mov
cmc
lret
sbb
jo
push
dec
sahf
dec
push
push
decl
xchg
cmp
and
push
mov
fstps
daa
stos
shll
xor
pop
lock
jmp
xchg
insl
sub
out
pop
add
aam
or
fsts
fcompl
and
shlb
orb
inc
ret
sbb
mov
rcr
jno
xor
xchg
pushf
test
push
push
mov
into
in
or
ret
decl
es
adc
rclb
mov
xchg
pusha
jg
iret
pop
jb
adc
jp
mov
pop
mov
pushl
and
xchg
pusha
mov
jb
push
outsb
xlat
cmp
jnp
jg
std
and
dec
test
shlb
or
xchg
enter
inc
ret
sub
pushl
jge
mov
mov
aam
out
and
test
xchg
inc
ja
add
cmp
add
xchg
fidivrl
sbb
cmp
rcrl
sbb
dec
mov
insb
cmp
call
dec
test
enter
sub
jno
xor
test
sbb
ds
fcos
call
mov
pop
out
inc
test
in
addr16
jmp
pop
fiadds
loop
adc
in
adc
jg
xlat
stos
pop
insl
push
mov
jae
js
lea
repnz
daa
call
inc
mov
test
sbb
jge
inc
mov
loop
adcb
gs
xor
arpl
jmp
test
into
lock
jbe
mov
shrl
stc
xor
stos
cltd
mov
ljmp
ljmp
and
jl
andb
bound
stc
xchg
pop
decl
pop
subb
in
jp
scas
push
in
ljmp
dec
stos
xchg
icebp
std
enter
scas
cli
pop
mov
repz
js
inc
test
xor
cmp
cld
and
pushl
mov
or
push
dec
bswap
test
inc
push
or
cmp
aad
cli
stos
inc
outsb
ret
imulb
pop
and
testb
mov
pushf
sub
pop
jg
inc
pop
fdivrs
movsb
sti
fbstp
jo
ljmp
mov
cmp
mov
mov
sub
outsl
fdivrl
mov
scas
mov
inc
imul
mov
fisttpl
push
and
sahf
adcb
push
ja
push
jl
hlt
inc
imul
xchg
ja
mov
out
mov
das
call
pop
icebp
pop
or
push
xor
push
jge
mov
testb
cmp
mov
ror
and
pushl
test
add
bnd
pop
mov
inc
cmc
cli
int3
cwtl
mov
xor
ljmp
out
sbb
jb
and
pop
or
add
jg
les
inc
cli
add
pop
and
xchg
pop
js
aad
popa
mov
dec
scas
cmp
movsb
loope
xor
mov
stc
in
fisubrs
pop
test
pop
movsl
mov
lcall
jmp
jns
mov
push
push
rcrl
or
mov
jmp
sbb
mov
test
sub
std
pop
inc
mov
daa
stos
fadd
and
jecxz
rclb
pop
scas
popl
clc
scas
xchg
sbb
pushl
sarb
dec
mov
or
insl
adc
jae
xor
aaa
aas
incl
mov
fists
sti
aam
jb,pt
shll
jge
ds
bound
rcrl
xchg
fisubs
aaa
or
sahf
cmc
pop
jbe
sbb
jmp
xchg
out
in
fbstp
int
cmp
fmuls
test
xor
outsb
inc
push
sub
aad
mov
xchg
mov
decl
incl
dec
paddsw
dec
mov
leave
jmp
push
sbb
jmp
cmp
inc
pop
jmp
jns
loope
lea
mov
xchg
add
inc
lea
push
ret
ds
xchg
pop
mov
gs
sub
mov
inc
pop
dec
push
stos
mov
cmpsb
incl
or
sbb
push
mov
in
rclb
adc
jmp
cld
in
inc
insb
xor
stos
movl
idivb
and
shrl
enter
ljmp
clc
call
mov
inc
sbb
adc
xchg
cmc
js
fiaddl
outsb
out
stos
jno
add
das
es
jmp
mov
lcall
xchg
lcall
inc
pop
push
push
jne
je
bound
lcall
je
jb
push
incl
mov
pushf
add
aam
mov
gs
xchg
jb
cmp
mov
ss
xlat
stos
int3
fdivs
shlb
out
adc
inc
ljmp
push
and
adc
jns
shlb
cmp
mov
incl
push
enter
shrb
mov
sbb
push
mov
push
inc
lret
addr16
faddp
icebp
cltd
mov
sub
or
out
out
setbe
in
mov
jae
stos
ljmp
shrb
xor
fs
in
jne
jmp
mov
aad
cld
lahf
daa
inc
das
and
add
ret
loopne
mov
out
ja
cmp
out
mov
insl
jmp
mov
test
ret
xchg
push
lcall
inc
inc
arpl
mov
ret
or
and
lcall
jle
add
cmpsl
mov
mov
mov
inc
xor
cld
daa
imul
hlt
incl
cld
incl
decb
into
jmp
pop
add
mov
mov
mov
and
or
sbb
sbb
jle
mov
stos
icebp
fs
rcrl
pop
lods
mov
pop
pop
aas
out
mov
and
test
lret
sahf
inc
adc
pop
clc
dec
dec
and
das
clc
mov
cmp
into
xchg
subb
push
adc
incl
pop
dec
inc
cmpsb
cmp
data16
mov
in
daa
add
xor
popa
push
in
jp
push
inc
jns
xchg
daa
xchg
gs
and
xor
sub
nop
sbbl
inc
xchg
mull
in
insb
push
jne
pop
xchg
pop
sub
decl
sub
mov
xlat
call
ljmp
mov
jecxz
js
push
mov
pushf
inc
in
cwtl
enter
lea
decl
imul
push
jae
add
icebp
pop
pushf
cmp
aaa
push
imul
mov
cmp
decl
lock
adc
push
call
and
clc
push
data16
loope
pop
sar
clc
pushl
aam
fwait
dec
das
stc
mov
dec
cmp
pusha
outsb
insl
nop
aas
adc
or
in
jmp
add
add
push
loop
cmp
mov
call
cmp
push
int
add
call
or
sub
leave
push
imul
testl
call
and
int
jbe
pop
inc
loope
xchg
mov
cmc
pusha
dec
xchg
or
jmp
mov
pushl
dec
insb
adc
fmull
cmp
inc
cmp
mov
loope
add
xchg
sgdtl
xor
aas
movsl
movsl
or
sbb
push
jl
jno
shlb
push
sbb
mov
cmp
hlt
incl
dec
mov
sbb
decl
xchg
or
arpl
mov
lret
pop
shlb
ja
lret
bound
ljmp
jns
jl
mov
inc
decb
sbb
jno
jno
pop
xor
xor
decl
jns
inc
dec
adc
popa
mov
sti
fstpt
add
test
out
mulb
call
xchg
mov
call
fidivl
je
or
push
addb
in
pushl
jmp
rcl
mov
mov
jno
xchg
sbb
push
ljmp
mov
cs
nop
jo
rcll
adc
add
jnp
out
pop
cli
inc
pop
imul
lcall
test
jne
and
dec
mov
push
pushl
fwait
stos
shlb
or
cmp
ss
call
aam
iret
xor
inc
dec
xchg
sub
xor
mov
jle
push
decl
push
ret
stc
sub
js
sub
jns
pop
mov
xor
fmulp
movsl
jl
mov
jbe
neg
decl
mov
das
xchg
cld
or
lahf
adc
mov
lds
mov
aas
dec
xlat
stc
ja
arpl
and
mov
shlb
into
jne
mov
and
push
cmp
dec
pop
push
inc
sub
mov
bound
cld
fistpll
loope
dec
jmp
fistps
xor
mov
and
lcall
jmp
in
xchg
mov
cmc
or
dec
sbb
daa
jns
xchg
mov
push
rcl
and
pop
push
add
mov
and
lcall
jb
into
out
push
adc
fcomi
push
fstpt
or
xchg
add
incl
pop
outsb
adcb
add
aam
lods
adc
mov
hlt
add
in
ljmp
dec
ret
cs
je
inc
sbb
adc
sbb
sbb
outsb
lcall
inc
lock
jb
leave
rcll
xor
arpl
dec
pop
xlat
inc
lock
mov
and
push
add
inc
adc
in
sub
subb
scas
push
lea
rcll
call
adc
add
stc
add
or
sub
or
ljmp
pushl
sbb
in
sahf
fidivs
dec
repnz
sbb
fwait
decl
scas
out
shrb
fists
pop
fsubrs
imul
movsl
or
mov
ljmp
jbe
movsb
loope
outsb
pop
lods
cmp
lret
adc
cld
add
clc
imul
sbbb
pop
mov
mov
pop
pop
arpl
pop
mov
xchg
jg
lcall
pusha
insb
and
mov
jbe
xchg
push
jg
call
cs
xchg
cmc
aas
sub
jo
movl
test
mov
pushl
enter
inc
mov
xlat
sti
movaps
insl
mov
arpl
movsl
fnstsw
pushl
push
test
popa
cmp
adc
jns
cmp
xlat
adc
rcrb
push
std
mov
lret
aaa
lret
in
xchg
dec
xchg
jno
jl
rol
pushl
sbb
fcompl
xchg
jle
clc
add
rcl
out
push
fsubrs
pop
pop
ret
inc
rep
out
andl
mov
aas
aaa
mov
int
movsl
lret
and
xchg
and
icebp
mov
mov
xchg
subb
lret
mov
lock
cmpsb
or
inc
aas
shll
js
ljmp
stos
sub
jl
lcall
jb
cltd
lods
jecxz
push
dec
ljmp
add
scas
jle
mov
decl
mov
out
push
add
pusha
push
pop
push
stos
or
cmpl
ret
call
dec
lock
cmpsl
ss
insl
xchg
cmpb
fwait
icebp
je
aad
std
pop
mov
testb
push
jecxz
xchg
incl
inc
xchg
cmp
cld
jno
lahf
aam
out
sbb
jo
aas
outsl
cmp
mov
mov
das
and
adc
dec
mov
jae
xor
xchg
fistpll
jnp
jg
xchg
scas
in
out
std
jns
mov
sbb
pusha
cmp
xchg
outsl
rorl
cmp
ja
xchg
out
inc
xor
loopne
fwait
jp
fstl
adc
xchg
test
scas
movb
dec
aam
je
jnp
incl
jae
sub
in
cmpsl
cli
gs
dec
dec
xchg
pop
idivl
sbb
mov
decl
enter
iret
sbb
cmc
cs
loopne
mov
je
mov
loopne
incl
imul
push
out
add
daa
dec
pop
sti
das
pop
scas
je
ljmp
push
mov
pop
out
inc
cmp
add
adcl
mov
mov
sar
jg
js
out
fucom
fwait
or
std
add
add
xchg
pop
cmp
pushf
sahf
jnp
inc
clc
jmp
push
cld
mov
enter
std
adc
mov
ss
inc
ds
mov
lcall
xor
sti
scas
pushf
xchg
jne
pusha
cli
sub
imul
cmpsl
push
into
fists
jmp
pop
lret
jae
xchg
loope
pop
mov
xor
imul
and
shrb
sti
fnstcw
lcall
aam
data16
pop
push
fistpl
test
add
lcall
or
test
mov
sbb
push
arpl
loope
call
or
sbb
inc
lods
fiadds
dec
leave
incl
cltd
jns
and
sbb
push
stos
and
cmpsb
sbb
inc
xchg
call
mov
adc
aas
pushf
sub
fwait
imull
js
pop
mov
jl
rcrb
jmp
ljmp
xchg
fdivrs
mov
lods
sub
arpl
mov
call
repnz
callw
jle
cmc
test
addb
jl
push
xchg
adc
and
ljmp
out
add
xchg
xor
loopne
insl
dec
lcall
pop
sub
inc
loope
cmovs
mov
insl
popf
xlat
imul
inc
ja
xor
pushl
js
push
mov
pop
push
xchg
daa
das
xchg
mull
jns
sub
decl
push
sub
mov
mov
adc
movsb
pop
xchg
push
sub
mov
fiaddl
xor
or
cmp
lods
mov
into
sahf
loope
lds
call
inc
stos
fiaddl
push
movsb
mov
lahf
fisttpll
int
mov
push
jle
pop
inc
mov
lret
call
adc
mov
idivl
icebp
jnp
jnp
mov
xchg
mov
xchg
into
xchg
push
in
cmpsl
in
dec
mov
in
iret
popf
aas
cmpsl
mov
in
lret
pop
sbb
out
idiv
dec
rol
in
fiadds
xchg
bound
pushl
mov
nop
add
or
inc
adc
inc
push
std
stc
mov
inc
push
in
lcall
inc
push
mov
out
inc
mov
ljmp
sub
sub
cmp
pop
add
int3
ficoms
mov
repnz
jae
mov
fdivrs
lahf
jnp
aad
sub
adc
pop
jl
jle
or
mov
jl
das
std
mov
decl
push
mov
outsb
xor
push
sub
popa
fdivp
pop
fnsave
pop
fisubl
lods
mov
daa
and
shll
add
xchg
mov
pushf
adc
jg
mov
test
imul
es
push
fstpt
mov
dec
call
jg
adc
cmp
jl
dec
testb
or
lds
xor
inc
insl
imul
mov
ret
add
lret
ret
test
shlb
fsubrl
decl
or
stc
mov
jo
jp
aas
stos
push
into
pop
xor
adc
cmpsb
out
sub
add
lret
dec
popf
jne
ds
mov
rol
pop
jo
es
pusha
call
mov
xor
out
mov
sbbb
and
xor
mov
lcall
cmpsb
sbb
sbb
ja
push
sub
and
sub
ljmp
in
popf
push
pop
inc
ss
adc
jg
mov
mov
and
stos
icebp
jg
xchg
repz
xorb
add
mov
test
jo
mov
fistps
rcr
lea
ljmp
cmc
imul
xchg
hlt
js
lods
bound
outsl
data16
inc
mov
sbb
loopne
lcall
sub
dec
dec
lea
add
mov
dec
lock
mov
xchg
jecxz
and
xchg
xchg
xor
adc
sbb
cmc
cmpb
decl
and
fisttpll
notl
fsubrs
stos
add
cs
incl
stos
mov
adc
pop
push
shrl
push
or
sbbb
pop
sub
and
call
bound
xchg
jp
sbb
xor
lea
fs
sarl
fstpt
call
icebp
pop
push
mov
pop
push
loope
and
jnp
dec
js
insl
lods
lret
and
sub
loope
mov
lret
pop
rolb
test
and
or
pop
daa
lahf
int
and
inc
add
or
lods
xchg
cmp
outsb
iret
stc
push
cmp
idiv
aam
cmp
jb
mov
mov
adc
filds
dec
push
push
push
mov
push
adc
int
push
fnstcw
repnz
pushl
push
pop
or
cs
or
shl
push
cmp
repz
outsl
pushf
push
cmpsb
insl
adc
pop
jle
lcall
ljmp
and
mov
fisttpl
mov
cmp
jg
fnstcw
or
xchg
pop
cmp
cmp
push
jle
loope
aad
dec
add
std
lcall
sbb
rolb
rcll
pushf
ja
loopne
jecxz
rorb
insb
xchg
mov
pushl
test
sub
sub
rcr
cmp
or
imul
push
adc
mov
shlb
leave
popa
test
push
mov
ficomps
in
movsl
push
push
adc
fldenv
les
mov
lcall
lods
call
dec
fwait
ss
push
add
aam
mov
sbb
pop
cs
mov
xlat
das
lcall
cli
rclb
nop
test
icebp
shl
pop
jp
rcrb
or
pop
xchg
call
inc
dec
insb
xchg
jno
add
xor
bound
inc
and
mov
and
or
incl
xor
sarl
xchg
add
and
in
inc
or
push
call
aad
popa
fwait
lcall
call
out
lock
xchg
mov
stos
popa
mov
dec
lods
sbb
mov
jecxz
mov
dec
loop
aam
push
mov
inc
cmc
decl
lock
mov
cmp
aam
xorl
mov
imul
mov
std
lods
out
mov
mov
push
in
inc
inc
mov
sub
rcl
or
mov
and
aam
dec
sbb
popf
jno
popf
xchg
jb
and
dec
mov
and
jno
sbb
mov
out
inc
outsl
adc
adc
inc
in
sbb
out
decl
cmpsl
adc
push
rorb
testl
inc
xor
dec
inc
fsubs
add
test
incl
cmovbe
mov
mov
jne
ss
stos
sub
ljmp
incl
movsb
jl
xchg
pop
inc
gs
push
iret
cld
xor
add
sahf
adc
movsl
xchg
in
jg
icebp
adc
push
fwait
inc
scas
adc
add
lahf
clc
cld
cmc
test
fcomip
adc
adc
test
mov
dec
je
ret
inc
das
add
sti
rclb
pushl
std
decl
enter
xor
jp
mov
es
stc
mov
mov
call
inc
lret
bound
add
dec
jno
lret
push
jp
sahf
aas
pop
push
dec
out
sahf
in
sbb
sbb
dec
jp
inc
ficomps
add
sub
jmp
push
xchg
push
stos
movsl
add
in
lret
lea
inc
mov
inc
xor
pop
ret
in
push
cld
mov
or
std
ret
mov
scas
xor
sti
mov
inc
jmp
sbb
and
xorl
and
das
out
jle
adc
jle
pushl
ljmp
jg
adc
pop
popa
cmp
mov
jmp
inc
in
or
fs
mov
adc
xor
in
enter
jg
inc
mov
mov
sbb
adc
adc
sbb
xchg
or
ds
jnp
adcb
je
icebp
dec
data16
sub
lret
idiv
test
jmp
repnz
bound
or
xchg
sbb
lret
out
cmp
in
shll
jne
ret
incl
jno
push
xchg
arpl
jg
sbb
push
adc
mov
stos
and
out
ljmp
sub
sbb
repz
pop
int3
ss
or
add
mov
push
push
shrb
mov
lret
and
jne
push
stos
leave
cld
inc
in
push
add
clc
stos
or
call
sbb
ds
fcomps
negl
xlat
lahf
leave
inc
insb
out
xorb
stos
mov
mov
rcl
test
xor
sub
dec
call
fimull
inc
jl,pt
mov
mov
insl
push
aaa
les
ret
push
sub
lock
decl
push
push
dec
jge
adc
xchg
fildll
push
lcall
jmp
add
ret
and
push
mov
jg
adc
shl
pop
test
mov
enter
xchg
sbb
frstor
jo
or
add
jp
fcos
lcall
mov
pop
mov
test
mov
clc
cmp
jns
lea
fisttpl
aas
popf
xor
jecxz
incl
scas
pop
fldenv
bswap
hlt
sbb
sub
mov
xchg
and
pushl
test
pop
adcl
sbb
xchg
aaa
std
jmp
insb
fisubs
ja
sbbb
and
daa
jne
leave
ss
shr
in
stos
decl
fcmovne
pop
jecxz
or
sub
add
in
filds
mov
mov
pop
push
js
mov
rorb
inc
mov
mov
incl
hlt
cltd
in
add
jns
sub
and
jo
inc
adc
incl
sbb
lcall
int3
cmp
jl
das
clc
call
sbb
rclb
or
sbb
jb
hlt
call
jne
jo
popf
test
mov
dec
sti
insl
sbb
jg
push
and
imul
jp
jno
cmp
testl
ljmp
enter
or
test
test
pushl
incb
pop
mov
out
clc
add
ficoml
rol
or
outsb
stc
stc
imull
aas
fs
pushl
jno
mov
shrl
aaa
repz
mov
out
jb
jg
outsb
or
mov
lahf
xor
lods
test
inc
rclb
push
lret
jmp
mov
mov
or
clc
inc
mov
push
push
dec
incl
xor
pop
cmp
and
lcall
push
stos
or
mov
xor
cmpsb
mov
sti
sub
push
dec
cmp
ja
fstp
cmp
jg
movsb
xlat
stos
fbstp
fidivrl
jne
inc
cli
jl
cmp
adc
push
add
push
cwtl
sti
pop
cld
mov
and
sbb
dec
cmp
mov
aaa
push
push
call
adc
pop
stos
cli
aad
shlb
repnz
push
movsb
incl
sbb
addr16
movsb
sbb
imul
stc
cmp
cmp
dec
xchg
jne
enter
lahf
dec
dec
lods
mov
stc
add
stc
sub
xor
lods
lcall
push
cmpsb
dec
xchg
int3
sbb
sub
pop
subl
incl
outsb
sub
cmpsb
jg
push
add
inc
sub
sub
cmp
out
adc
sti
mov
addb
sub
mov
mov
jp
or
mov
jno
adc
lcall
bound
dec
adc
ret
lea
in
push
sbb
xchg
test
aas
rorl
dec
pusha
stc
test
loope
leave
jg
scas
mov
pop
outsl
cltd
dec
add
mov
decl
gs
dec
pop
mov
cli
dec
mov
out
idivb
or
cmp
mov
jbe
movsb
push
test
ljmp
jno
and
clc
mov
enter
pop
mov
arpl
push
sbb
mov
add
jae
in
ljmp
lret
jecxz
or
repnz
korw
xor
jns
nop
dec
mov
test
xchg
pushl
daa
outsl
data16
cmpsl
flds
imul
sub
push
daa
fsts
jl
mov
cmpl
jmp
adc
or
leave
fwait
sub
jmpw
or
sub
fisttps
shll
cmp
shr
pop
dec
daa
mov
lock
push
cmp
ljmp
call
lea
es
inc
adc
outsl
std
enter
and
mov
dec
push
cld
ljmp
andb
cwtl
jmp
xchg
or
mov
jbe
dec
ljmp
test
cmp
enter
clc
mov
dec
pop
adc
mov
and
sub
inc
call
dec
arpl
pop
push
or
mov
push
cmovg
aam
daa
xor
stc
xor
jge
ljmp
mov
mov
and
adc
addr16
fsubrl
mov
cmp
adc
out
and
jne
xchg
pop
inc
jle
jmp
mov
cltd
loop
sti
add
mov
lret
xor
push
jnp
test
and
push
sarl
fildll
mov
pop
jns
jp
clc
jecxz
sar
push
fs
loopne
sbb
and
push
inc
mov
incl
cld
mov
pop
inc
pop
xchg
loope
sti
daa
jge
cli
icebp
aad
das
jnp
dec
lcall
loopne
mov
mov
int3
or
pusha
jno
iret
push
mov
adc
in
out
mov
ljmp
std
jbe
sbb
ret
inc
sbb
inc
mov
cmp
imul
test
cmp
jg
fstps
fs
ja
rol
aas
dec
push
std
call
pop
je
add
lock
cmp
pop
aas
into
pop
add
cmpsb
lahf
loope
jns
sub
mov
cvtdq2ps
decl
fisubs
clc
mov
push
push
adc
pushf
sbb
inc
data16
dec
xor
or
lcall
insl
jle
mov
jmp
fcomip
fildll
bound
sub
or
roll
fstps
pop
cmc
arpl
addr16
out
sbb
jo
loop
xchg
stos
subl
pop
mov
adc
mov
enter
adcl
add
rcrb
pop
cmp
cmp
ja
inc
sbb
dec
xor
dec
sbb
lcall
test
pushl
ja
mov
pop
inc
fidivrl
push
mov
xor
orb
sbb
or
jg
clc
jmp
xchg
inc
dec
iret
mov
push
xchg
cmpsl
pop
test
jecxz
mov
ljmp
mov
fdiv
push
jb
inc
clc
mov
lahf
ds
add
fisubrs
cli
in
or
fiadds
imul
cmp
jbe
int3
daa
mov
mov
add
lea
pop
in
insl
incl
or
insl
xrelease
add
into
rcrb
fwait
bound
nop
cmp
pop
ljmp
pop
dec
and
mov
push
testb
invd
push
pop
aam
pop
pop
adc
add
lahf
xorb
incl
xchg
sub
js
jmp
xor
mov
pop
cmc
pop
enter
int
arpl
movsb
sub
fimuls
out
adc
daa
aaa
jmp
push
les
or
jl
cmpsl
mov
jae
or
sahf
test
inc
call
or
sub
loop
pop
mov
inc
lret
dec
xchg
ss
adc
lcall
push
jecxz
xor
popf
xlat
or
sahf
push
jne
lds
addr16
xor
jo
insb
divl
xor
pop
loopne
enter
and
icebp
mov
cmpl
lret
push
call
insl
lds
movsl
shl
ljmp
xor
scas
inc
pop
mov
lcall
mov
mov
xchg
stos
cmp
sub
mov
adc
jmp
incl
repnz
sbb
mov
mov
imull
cs
dec
shll
lret
sub
jp
jmp
dec
fcoml
lea
movsb
les
add
test
sbb
rolb
add
jnp
das
mov
push
inc
and
jg
inc
add
mov
mov
jg
pushf
jmp
bound
movsb
sub
loopne
fwait
sbb
mov
jb
test
hlt
subb
out
xor
enter
mov
lcall
inc
xor
test
add
xor
jmp
mov
jecxz
dec
dec
pop
in
lock
in
filds
int3
push
jg
add
incl
dec
add
xor
in
adc
insb
popa
insb
test
addr16
stos
jmp
jmp
pop
pop
xlat
adc
jg
dec
lods
loope
and
mov
getsec
pushw
mov
call
dec
inc
lods
dec
push
dec
pushl
rcrb
scas
push
push
std
jge
push
movsb
jmp
and
mov
lock
call
aas
or
sub
push
adc
mov
jo
std
call
lods
jae
push
xor
mov
outsl
inc
popa
popa
add
sbb
mov
pop
fimull
xchg
negb
in
enter
push
mov
test
push
dec
sar
decl
movsb
dec
inc
dec
ljmp
faddl
out
push
add
mov
divl
lcall
outsl
decl
dec
push
push
adc
fsubrs
out
add
incl
stc
notb
lods
dec
loop
les
cmp
sub
sbb
jno
jl
lcall
je
jg
push
icebp
cmp
cld
addl
add
inc
inc
sbb
adc
sti
cld
pop
out
add
lock
ja
sarl
lock
ljmp
daa
hlt
jo
scas
lret
stc
jnp
rcr
dec
sbb
movsl
inc
mov
in
cmp
insb
loopne
push
bound
jne
stc
fldcw
les
pushl
cld
fdivs
push
inc
xor
dec
addr16
push
xor
stos
shlb
adc
add
lds
lods
decl
pop
push
ret
or
pop
dec
add
aas
sbb
cs
into
xchg
lcall
mov
sbb
in
mov
xor
mov
scas
inc
popa
and
mov
lcall
inc
jge
cmc
sub
sbb
lods
ds
fisubl
adc
jb
in
cmp
push
mov
fs
jbe
push
nop
xor
adc
jmp
pop
sahf
cld
shll
lds
mov
xor
xlat
jae
lahf
and
clc
incl
movsl
repnz
leave
dec
movsl
xchg
call
imul
push
pushl
mov
stc
mov
mov
mov
pushl
sub
xchg
cmp
sbb
imul
idivl
dec
imul
call
ds
in
mov
loop
xor
dec
pop
dec
and
dec
outsl
ds
mov
ds
ret
lods
adc
cmp
push
sub
sbb
mov
addl
mov
fisttps
pop
mov
cmp
cs
insl
mov
iret
sti
jg
pop
loope
mov
ljmp
bound
cs
stos
push
mov
dec
jg
incl
mov
xor
mov
mov
or
incl
mov
roll
pop
sbb
popa
fwait
xchg
mov
dec
inc
leave
fxch
jle
bnd
ss
decb
mov
cwtl
dec
sbb
add
adc
ret
cmp
in
dec
aaa
aaa
push
add
jmp
xor
mov
sti
inc
inc
repz
sub
cltd
jmp
cmpsb
push
push
fmull
mov
pop
mov
lods
ja
jne
and
dec
mov
pusha
inc
adc
inc
cmp
pop
push
iret
mov
adc
rclb
data16
daa
into
dec
sbb
cs
cmp
ret
mov
xlat
jle
nop
fisubrl
xor
lahf
mov
aaa
cmpb
ljmp
or
add
icebp
dec
push
ja
insl
inc
lret
lret
sbb
ret
sarl
or
daa
cmpsb
and
push
inc
cmc
jmp
cwtl
inc
xchg
out
mov
je
loop
xchg
cmp
fisubrl
pushl
das
and
test
mov
push
gs
jge
mov
and
jmp
mov
pop
andl
decl
and
arpl
testl
or
push
in
xchg
sub
les
add
sbb
fisubl
jle
add
mov
out
add
out
movsb
imul
and
xor
push
lods
adc
xor
push
mov
cld
subb
xchg
outsl
jae
cmc
leave
test
int3
add
push
outsb
ret
sbb
xchg
ds
ja
data16
sbb
or
bound
add
ljmp
cltd
dec
cmp
clc
and
pushf
popa
in
ljmp
imul
addr16
mov
mov
lcall
shlb
cld
dec
cs
jp
in
test
clc
and
cmc
cmovl
sub
inc
jb
pop
push
in
jl
mov
jb
pusha
or
out
xor
pushf
pop
adc
add
push
cld
fwait
test
sbb
test
or
incl
cltd
push
xchg
add
add
sub
cmpsb
leave
and
mov
loopne
jmp
fs
clc
dec
js
jge
adc
test
lcall
and
add
scas
add
jns
pop
mov
and
call
push
cmp
fs
outsl
mov
hlt
inc
add
ljmp
jmp
push
dec
bound
sbb
or
lea
iretw
adc
mov
imul
in
int3
mov
and
mov
in
jbe
pop
xor
aam
xchg
mov
xchg
loope
rcl
jmp
es
pop
fidivrl
push
pop
push
pusha
inc
push
xchg
icebp
jne
adc
lret
add
xor
mov
cmpsb
cmp
std
push
lcall
or
outsb
jne
in
jge
jg
pushl
cmpb
push
jecxz
pop
push
hlt
inc
push
pop
testl
and
std
decl
loopne
and
addr16
dec
sbb
push
lock
icebp
push
jnp
dec
int3
push
ss
push
std
pushl
or
add
pop
push
sub
jecxz
loop
mov
jecxz
stos
or
cli
stc
fs
jmp
out
push
ss
adc
movsl
data16
push
jns
jae
and
jbe
sub
mov
fwait
cmp
mov
or
add
call
xchg
ja
aaa
shrl
movhps
jne
add
cld
insb
add
sbb
jl
sub
ds
aaa
mov
jns
xlat
aam
add
mov
movsl
cmpsb
into
sar
jb
ja
or
push
lret
xlat
std
mov
sbb
outsb
inc
sbb
call
add
jmp
int
rcll
pop
fsubr
pop
cmp
cmpb
inc
cmp
fildl
dec
adc
sub
or
mov
lods
insb
incl
dec
or
inc
dec
lea
jg
repnz
xor
fcomip
ljmp
out
jne
xor
test
loope
fucom
and
incl
movsl
mov
int3
pop
sbb
adc
dec
jae
push
mov
das
sar
jb
or
les
dec
ds
cmp
icebp
jmp
lods
push
aaa
out
outsb
sub
scas
ret
mov
push
std
or
inc
or
jg
adc
pop
dec
in
inc
shll
add
data16
mov
std
cmpsb
and
clc
adc
xor
out
adc
lahf
xlat
or
pop
subl
jno
idivb
pop
int
cmp
mov
push
sub
icebp
sbb
incl
cmp
push
cmpsl
mov
xchg
push
inc
adc
mov
xor
data16
call
test
add
sub
mov
lcall
sbb
adc
cmc
fnstsw
fidivrs
jns
bsf
cmp
xor
ljmp
in
adc
loopne
loope
outsb
xor
rorl
sub
scas
xchg
or
cmpsl
pushf
call
or
mov
inc
or
mov
pop
dec
mov
jge
fists
lahf
decl
arpl
test
je
popa
cmp
sbb
xchg
xor
mov
push
out
decl
aad
mov
aad
icebp
inc
call
bound
cmp
sbb
in
shl
in
pop
andl
daa
mov
lcall
int
fists
imul
in
mov
cs
fxch
pop
push
mov
decl
xchg
sub
vcvttps2dq
outsb
mov
pop
add
icebp
hlt
or
je
mov
mov
jmp
xchg
dec
lea
fimull
subb
mov
jae
jge
incl
sti
out
sub
jo
aas
clc
cmp
test
adc
and
mov
jg
adc
out
mov
mov
test
xchg
dec
and
mov
dec
loopne
push
lcall
test
jmp
mov
ja
in
jb
add
outsl
gs
jp
or
es
jmp
jmp
loopne
ss
xor
cmp
mov
jl
jg
jp
lods
or
mov
pop
xchg
push
fs
jle
mov
sub
fbld
rcl
push
push
ljmp
cld
adc
loop
test
ret
stc
sbb
rcl
cmp
and
movsb
loop
incl
add
xchg
fdivs
sbb
fdivrp
dec
mov
or
dec
push
bound
inc
xchg
jecxz
add
leave
orb
dec
decl
inc
xchg
sbb
inc
inc
stos
lods
xor
pusha
je
dec
in
in
es
pop
jb
sbb
test
imul
lcall
leave
jae
sbb
das
sub
vmread
sbb
das
add
decl
pop
addr16
mov
pop
cli
jp
sbb
imul
mov
shlb
ljmp
cmp
xor
mov
fisubs
imull
je
test
outsb
sbb
je
fmul
hlt
push
pop
add
pop
xor
int3
fs
mov
mov
loopne
and
lds
mov
mov
jbe
subb
push
lcall
mov
dec
daa
lock
sub
lea
push
or
dec
aad
mov
into
hlt
in
negb
cmp
shlb
sahf
cs
lods
adc
outsb
or
enter
jg
mov
push
rorl
movsb
call
scas
pop
clc
pop
sub
ret
in
cmp
push
and
or
scas
aam
shll
ret
stc
es
mov
push
mov
pushl
dec
mov
cmc
ret
xchg
push
lret
bound
sbb
rcr
jg
into
jg
fstps
fdivrs
call
jne
dec
outsb
cld
push
imul
test
add
mov
sub
jg
pushl
xor
inc
jle
adc
mov
cmp
lret
pusha
mov
jg
insl
mov
inc
lds
fstpt
push
mov
fstpt
jg
cmp
mov
xchg
or
cld
cmp
and
fisubl
push
inc
call
insb
mov
incl
call
sar
cmc
pop
and
cmpsb
movb
adc
inc
push
nop
scas
sub
cli
movsl
xor
in
int
mov
idivb
insb
lcall
call
xchg
mov
jae
jb
jne
push
push
cmc
mov
xchg
mov
xchg
pop
rep
inc
aaa
cld
call
inc
out
cmp
scas
jo
xchg
fstp
or
lods
stc
push
push
stos
xlat
test
incl
pop
mov
lds
cmp
jmp
fwait
sub
in
imul
lock
push
sub
sub
iret
mov
mov
aam
push
dec
pop
movsb
dec
mov
outsl
xor
leave
add
notl
push
je
fsub
pop
pop
decl
lahf
push
pop
test
lods
mov
ret
lds
fimuls
aas
orb
fcomip
sbb
jg
call
add
or
and
xchg
cmc
aam
sarb
dec
cmc
sub
scas
cli
jns
pop
mov
insb
and
adc
pop
cmp
and
mov
or
jmp
inc
aad
jbe
and
xchg
scas
sahf
adc
lock
das
cli
and
dec
mov
sbb
movsl
lock
dec
cld
ds
adc
sbb
pushf
stc
aaa
test
call
cld
mov
dec
pop
cmp
lods
inc
into
into
sbb
loop
jmp
adc
push
inc
insl
imul
dec
lret
adc
mov
xor
incl
je
scas
in
xchg
xor
out
push
xchg
xchg
arpl
mov
decl
js
sbb
insl
repz
or
push
arpl
cmpsb
fimull
insb
push
ja
arpl
sub
out
cli
call
push
mov
xchg
xor
adc
mov
lock
mov
fnsave
out
rep
mov
daa
or
mov
nop
cmp
in
enter
cld
sbb
sbb
and
pop
jge
dec
pop
rcrb
sbb
scas
imul
subl
lahf
int
lret
cli
call
fdivl
lods
push
enter
popa
std
jle
cmp
pushl
incl
dec
and
sbb
sbb
mov
insb
jne
out
call
mov
xchg
out
cmpsb
cmp
cmp
cmp
sub
clc
sub
mov
stc
in
in
lret
fcoml
imul
fimull
cmpsl
lods
xchg
in
bound
adc
pop
lcall
dec
insl
inc
bound
lahf
mov
sub
inc
aam
daa
jl
popf
adc
decw
inc
repnz
pop
int3
inc
jnp
mov
mov
pop
pop
pop
xchg
cmp
pushl
test
sub
xor
jp
or
rcr
arpl
rcll
push
movsl
test
xlat
jae
xchg
popf
or
lret
mov
jg
outsb
fidivl
inc
sbb
xchg
aad
sub
aam
pop
loopne
sbb
lcall
cmp
mov
bound
ljmp
sub
cmpsl
mov
add
sbb
mov
xchg
mov
or
mov
daa
dec
jp
mov
pushl
pusha
xchg
aaa
pop
in
hlt
add
jg
sub
cmp
dec
dec
mov
push
pop
mov
incl
add
adc
ret
adc
sbb
inc
cmp
out
xor
pop
pushl
sbb
mov
pushf
add
inc
mov
testl
call
pushl
pop
and
add
gs
test
cmp
incl
dec
xchg
fildl
dec
sbb
call
ret
jle
in
scas
xchg
divb
cmpsl
sub
sub
dec
add
xchg
iret
mov
mov
in
fwait
ret
movsl
loop
xorl
loope
mov
adc
xchg
adc
imul
sub
into
mov
pop
cmp
aas
mov
mov
xchg
cmp
adc
push
int3
mov
int
add
mov
fildll
sub
ret
mov
cmpsb
jp
dec
aam
andb
xor
int
pop
pop
and
les
lcall
sub
hlt
xor
cmp
loop
movsb
insl
sub
outsl
aaa
jge
bound
jae
dec
int3
mov
push
add
push
sahf
push
xor
jge
cld
enter
sahf
loope
pshufw
loope
jae
xlat
decl
push
cli
push
clc
ds
sub
sbb
ret
incl
shlb
dec
loope
adc
dec
std
xor
sub
mov
lods
push
pop
push
lods
call
cld
call
cmpsb
daa
hlt
sbb
test
jns
mov
insl
xchg
lahf
sbb
or
xor
jns
int
js
or
dec
shrb
hlt
cld
ljmp
mov
lahf
sub
mov
mov
addr16
pushl
loope
js
jl
xchg
mov
dec
sahf
sahf
xor
sbb
dec
lret
or
inc
push
adc
shrl
jb
fstpl
mov
std
ljmp
clc
lcall
dec
inc
or
adc
movsl
adc
ljmp
inc
mov
js
les
call
dec
jg
pop
jnp
jp
ja
sub
sbb
loop
add
divl
enter
jnp
loopne
xlat
int3
shlb
push
pop
dec
imul
sub
ljmp
mov
arpl
gs
sbb
sbb
mov
jae
add
cmpsl
mov
xor
mov
fadd
pop
or
cmpsb
fcomip
jmp
out
mov
xlat
inc
cmp
mov
push
cs
mov
jbe
jnp
jmpw
andl
mov
add
mov
push
test
cmp
mov
push
pushf
mov
jl
stos
xchg
adc
adc
ljmp
outsb
into
push
sbbb
adc
pusha
lea
inc
xchg
test
sbb
mov
or
mov
fsubrs
sub
jmp
out
in
xchg
push
stc
enter
pop
mov
movsl
cmc
pop
pop
jb
test
add
pop
lret
lods
inc
popf
aam
ljmp
ret
adc
jl
dec
fmull
push
pop
adc
adc
or
sub
mov
ljmp
das
xchg
jp
out
jge
push
fst
sub
push
movsb
aam
jg
push
cmp
repz
sub
jo
xchg
int3
mov
mov
arpl
ljmp
in
xchg
xor
dec
ret
xchg
jns
dec
out
inc
insb
fcmovu
repz
popa
xchg
and
imul
out
xor
test
add
inc
jae
xor
or
lods
cmpsl
adc
xchg
fldcw
xor
nop
xchg
mov
and
loope
jb
flds
and
xor
inc
sbb
cli
fldcw
pop
cmc
xchg
adc
adc
into
in
sub
aaa
or
lock
xor
and
mov
stos
cmp
out
mov
sbb
aad
test
jae
push
cwtl
incl
mov
mov
cmp
notl
sbbb
sbb
or
lock
sti
xlat
sub
rclb
mov
sbb
js
inc
popa
call
sti
mov
repnz
mov
push
mov
xor
leave
nop
shrl
cmp
add
loopne
push
mov
jge
daa
sbb
mov
push
cmpsl
pushf
lock
or
fcomip
call
test
cmp
push
jne
xchg
mov
cmp
ljmp
xlat
fwait
push
insl
nop
fcom
pop
stos
mov
sub
push
cmp
jnp
mov
dec
outsb
popa
ljmp
mov
pop
sbb
xlat
sarb
idivl
nop
mov
test
jno
dec
push
sub
cmp
das
inc
vsqrtpd
out
andl
adc
out
pushl
push
rorb
outsb
inc
inc
xchg
and
lods
xchg
jmp
cs
test
sti
mov
jg
scas
pop
popa
loopne
dec
mov
jp
daa
xlat
add
and
pushf
idiv
incl
dec
add
repnz
inc
sub
push
mov
sub
lcall
cmc
ja
xchg
xor
ljmp
test
mov
jg
insb
jo
in
pop
xor
stc
loope
inc
repnz
pop
mov
incl
enter
sub
lret
shll
aam
xchg
fistpl
popf
les
outsl
lods
xor
sbb
jmp
dec
enter
push
or
xlat
lahf
sub
add
xchg
sbb
shrb
mov
fisttpll
fs
inc
out
ret
and
xor
pop
clc
xor
int3
xchg
mov
sub
rorb
loop
jo
inc
repz
pop
jmp
mov
fcomip
insb
add
push
push
je
xchg
pusha
test
js
add
aad
cmp
incl
hlt
add
jno
imul
cmc
adc
sbb
inc
inc
adc
cmp
scas
decl
inc
mov
int3
outsb
jae
push
fisubs
mov
jae
jle
add
mov
dec
jne
xlat
or
insl
sbbl
repnz
sub
into
sti
mov
cli
inc
pop
repz
cmp
push
icebp
es
cmp
xchg
daa
push
cmp
push
jge
ljmp
mov
mov
xchg
pusha
push
call
testl
or
out
sub
add
cmp
pop
scas
push
loop
data16
and
mov
sbb
clc
push
js
frstpm(287
xor
clc
dec
mov
popf
aas
mov
shlb
jbe
xchg
data16
fwait
jb
mov
mov
jae
ljmp
dec
negl
mov
cwtl
cmpsl
inc
test
dec
adc
ficoms
decl
lock
pushl
pop
popf
cmp
push
ret
lahf
cmc
mov
mov
in
out
in
push
adc
fistl
mov
or
pop
popa
push
mov
sbb
fs
xor
or
fmulp
or
out
jecxz,pn
dec
lock
sub
jl
fcomip
das
clc
xorl
mov
or
add
das
das
ret
fcomip
out
jle
or
in
cmpsl
fwait
mov
jecxz
dec
mov
adc
sbb
jbe
sub
jnp
dec
fisubl
push
xchg
imul
xor
mov
rol
or
push
jae
popf
es
sar
and
sar
incl
aam
adc
push
sub
mov
je
inc
out
push
push
xlat
sti
jl
jg
mov
shll
lock
push
dec
pop
sahf
in
xchg
mov
jbe
or
ljmp
pop
outsl
xchg
ljmp
scas
sub
test
outsl
clc
clc
xchg
sbb
push
jmp
cmp
call
xchg
push
jecxz
dec
xchg
push
ror
and
sub
leave
and
call
jno
sarl
dec
xchg
or
push
sub
sub
lcall
mov
out
sahf
inc
js
and
mov
jbe
shlb
and
jle
shrb
sub
lcall
xor
aad
enter
sbb
je
stc
mov
daa
faddl
aad
fwait
sti
jg
mov
jb
imul
pop
xchg
in
add
mov
push
insb
fcmovu
adc
gs
std
stos
ss
out
and
orb
fwait
sub
jmp
sub
lds
push
mov
add
push
popf
in
mov
cmp
imul
out
test
jg
movsl
out
sbb
push
decl
in
mov
sbb
sub
sub
scas
pushl
add
mov
push
in
and
and
incl
mov
call
and
mov
orl
push
fwait
iret
dec
ljmp
push
add
iret
cli
call
push
dec
jnp
inc
popa
ja,pn
in
xor
or
mov
cmp
cltd
mov
push
nop
mov
adc
sar
call
insb
mov
mov
data16
and
fnstcw
push
fldenv
jmp
jg
test
or
xchg
inc
jne
pushf
enter
mulb
jne
lcall
push
add
xor
sub
mov
sub
cmc
sbb
movsb
cli
fidivl
jbe
pop
jnp
xor
out
add
pop
sbb
sbb
test
fnsave
inc
push
hlt
mov
in
fcomip
ljmp
pop
xor
pop
subb
mov
adc
pusha
sbb
incl
rep
dec
outsb
mov
rol
push
lcall
dec
lea
push
cmpsb
aas
lcall
in
ret
jne
fistps
dec
dec
inc
and
test
pop
stos
frstor
ret
add
inc
arpl
ficompl
xchg
ja
aad
ljmp
lock
inc
pop
std
inc
sbbl
or
lods
cmpsl
std
ljmp
pop
aam
adc
jge
jne
mov
fwait
dec
loop
shl
cwtl
cld
pop
loopne
and
push
loope
cmp
lods
push
in
scas
out
xor
cld
call
and
xchg
xchg
daa
pop
popf
inc
arpl
inc
cmp
call
pushl
outsb
movsl
xor
mov
or
int
mov
sahf
fst
jle
js
pushl
dec
or
dec
inc
sub
sub
jb
nop
dec
mov
cli
sbb
or
call
popa
push
mov
push
sbbb
shr
add
xchg
out
xor
sbb
nop
jnp
mov
lcall
sub
nop
push
cld
cmpsb
cltd
test
push
in
mov
jl
fcoms
pop
insl
push
jecxz
mov
fisubl
ljmp
aam
lea
mov
fldenv
fistl
push
push
lret
imul
lcall
out
js
fiadds
sarb
cmp
mov
not
mov
fistl
repz
sahf
mov
jo
mov
imul
mov
xor
xchg
inc
mov
jae
jae
ljmp
clc
call
jbe
xor
add
outsl
xor
loop
sub
pop
inc
loop
mov
sbb
je
sbb
cmp
and
popf
imul
mov
cwtl
cmp
push
pusha
jp
rclb
outsl
adc
lds
fsubr
sbb
sub
ret
sbb
sti
incl
and
xchg
cmp
push
lods
mov
cmpsb
outsb
fidivrs
mov
push
xchg
cli
jmp
sbb
xchg
sub
shrl
in
add
bnd
add
jne
push
pushl
insl
lcall
int
in
repnz
add
dec
mov
push
push
jno
pushl
rclb
mov
sbb
pop
jle
mov
incb
test
icebp
sbb
jmp
rolb
outsb
ss
pop
gs
ja
sub
in
mov
sbb
cli
jmp
cli
pusha
or
repnz
xchg
push
call
adc
cmpsb
mov
rolb
sbb
sahf
mov
incl
icebp
cmpl
mov
int
fisttpll
cbtw
cmp
xor
sbb
pop
jmp
add
popf
lock
sub
sbb
inc
fcompl
xchg
cmpsl
imul
movsb
idiv
mov
lret
int3
jb
and
add
out
addb
nop
xchg
push
sarb
jg
xchg
inc
movsl
roll
inc
jmp
cmpsl
jl
aad
or
sub
and
add
fs
pusha
decl
jb
pop
shlb
push
or
in
xchg
sub
loope
mov
jmp
das
jne
mov
rcll
jno
fwait
pop
add
dec
or
loopne
call
mov
pushl
mov
sahf
es
sar
inc
cmpsl
xor
xor
pop
mov
adc
or
ljmp
push
sub
sbb
repz
jmp
mov
outsb
fmuls
add
push
inc
int3
sbb
and
ljmp
call
and
mov
testl
fs
incb
mov
lret
call
aas
addr16
mov
cli
fnstenv
popf
inc
add
mov
mov
fisttps
movsl
cmp
push
nop
sub
adc
mov
loop
xor
scas
push
ljmp
shr
jb
push
push
clc
lcall
mov
out
mov
pusha
out
mov
popf
and
ljmp
jbe
leave
clc
push
xor
insb
jnp
stos
mov
pop
nop
int3
or
push
shr
mov
sahf
jnp
pop
cltd
ret
rcr
gs
inc
dec
sbb
jmp
mov
dec
push
test
call
inc
pop
jbe
mov
loop
test
in
movsb
pop
fmull
hlt
or
mov
ljmp
xchg
in
inc
int
jns
loope
cmp
call
xchg
add
jp
fwait
pop
addr16
in
jmp
pop
cwtl
subb
movsl
pushf
mov
xlat
cmp
rclb
xor
jae
clc
mov
jg
or
in
xchg
sbb
cmpsb
adc
mov
sbb
jg
and
xor
ljmp
rcrb
repz
jmp
jg
data16
gs
mov
out
lods
add
push
orl
mov
imul
add
push
test
aad
push
and
sarb
cmc
or
sar
lcall
inc
bound
mov
sub
push
pop
cwtl
add
dec
cmp
popf
out
adc
aaa
iret
xchg
in
jle
loop
movsb
ds
mov
pop
sub
pop
clc
lcall
stos
pop
out
les
insb
or
fisubl
out
sbbb
out
lret
cmp
lock
test
pop
sub
mov
xchg
and
call
div
dec
cmp
cmp
test
call
inc
mov
mov
dec
js
stc
inc
out
test
mov
rcll
pop
or
cmp
mov
repz
sarl
in
mov
cmp
inc
push
stos
mov
call
lahf
sahf
push
jnp
cmc
mov
sahf
stos
mov
hlt
mov
sbb
push
clc
jmp
loopne
out
sbb
mov
test
ljmp
das
cli
and
cwtl
ficoms
fnstsw
push
dec
out
and
cmpsl
cmp
add
loope
mov
divl
call
jo
ror
les
inc
cmp
lock
xor
jne
mov
popf
test
mov
mov
sbb
or
clc
idivl
pop
leave
push
and
sbb
push
dec
push
fdivl
mov
inc
mov
xor
daa
xor
pushf
xchg
mov
in
and
or
aas
insl
test
cmpsl
mov
add
rorb
incl
add
shr
pop
inc
clc
and
add
sbb
jnp
popa
sub
incl
pop
scas
in
movsl
jl
cwtl
adc
or
std
bndstx
jmp
sar
decl
push
cld
add
or
and
jbe
push
push
cmp
sbb
insb
inc
das
daa
icebp
adc
decl
push
pop
insb
sub
lret
ljmp
mov
dec
cs
pop
sbb
clc
filds
sti
cltd
aaa
leave
xchg
cmpsb
mov
dec
addr16
insl
xor
dec
mov
test
jmp
fcomps
sub
and
jnp
mov
or
xor
cmp
aad
pushl
push
mov
fwait
outsb
adc
or
xor
push
sub
xor
jle
out
lcall
lods
and
jo
hlt
movsl
aad
fildl
add
pusha
cli
jecxz
add
pop
pusha
sub
mov
scas
insl
out
jmp
fcomp
out
lock
push
add
nop
mov
add
pop
pop
xchg
fstpt
mov
ja
repz
lds
gs
mov
pop
inc
addb
aad
call
mov
xchg
fistl
xor
add
mov
or
decl
sub
stos
jg
mov
lret
jp
dec
mov
stos
pop
pop
ret
sub
pushl
test
push
gs
popa
and
mov
and
pop
jnp
pushf
jge
inc
or
dec
adc
mov
fadds
ss
movlhps
into
ljmp
mov
nop
cmp
mov
mov
shl
jbe
sbb
mov
shrl
pop
mov
cwtl
pusha
stos
imul
mov
imul
and
lcall
inc
xchg
lahf
jo
jns
pop
lret
gs
xchg
inc
int
mov
sub
sub
call
cld
popf
dec
adcl
mov
dec
inc
leave
lea
jbe
sbb
fs
sar
cmp
push
cs
mov
addr16
xor
push
popf
lock
jnp
dec
pop
inc
adc
push
stos
lds
test
or
mov
stos
add
pop
push
in
test
rcrl
jecxz
dec
inc
addl
cmp
xor
and
cmp
imul
das
or
gs
mov
rcrl
or
inc
jmp
add
icebp
loope
jmp
int
addr16
push
incb
lcall
enter
imul
sbb
js
std
ret
mov
xor
sti
into
loop
outsb
pop
xchg
inc
es
dec
stos
pop
into
das
fisubl
push
nop
push
pop
ret
or
xor
in
mov
or
xchg
stos
dec
int
inc
adc
leave
cmpsb
cmc
fnsave
fildll
loop
icebp
jl
shll
adc
sub
xchg
pop
sub
decl
mov
mov
hlt
and
cli
out
sahf
jbe
aam
mov
or
bound
ljmp
dec
or
sub
jmp
adc
lcall
jmp
aas
mov
jl
cmp
pop
sbb
cmp
dec
xchg
mov
sbb
xor
mov
jne
adc
add
repz
js
lcall
in
shlb
outsl
stos
scas
mov
sbb
jecxz
into
lcall
out
cmp
jmp
divb
addr16
filds
cwtl
bound
mov
push
dec
nop
xchg
ljmp
rclb
xor
sub
bound
cmp
loopne
pushl
sbb
fcom
call
dec
push
clc
ljmp
cld
xchg
jo
push
mov
mov
xchg
jge
call
or
and
dec
out
dec
push
sub
mov
xchg
notl
es
scas
xlat
test
mov
lcall
mov
jl
jnp
push
ljmp
pop
pop
lods
call
push
xchg
cmpsb
pushl
std
xor
push
inc
mov
enter
sub
sbb
dec
loopne
ljmp
test
cmp
and
push
inc
repnz
dec
and
xchg
fcomip
pop
inc
jbe
lock
jmp
add
aas
shrd
out
into
outsb
pop
inc
push
int
stos
loop
jg
cwtl
xor
jno
out
test
int
nop
pop
ljmp
decl
out
adc
cwtl
repnz
push
fisubrl
js
pop
out
ljmp
lret
js
cmp
sub
fwait
enter
mull
les
hlt
jg
fcmove
mov
pop
mov
out
daa
into
add
xlat
lods
lcall
aaa
dec
push
inc
inc
mov
jns
mov
mov
loop
push
imul
loopne
dec
mov
jmp
pushl
adc
in
cwtl
pop
test
mov
aaa
ret
mov
cmp
push
mov
ljmp
xchg
jb
sub
sub
jge
lea
lds
cs
pop
decl
aas
pop
sub
fwait
cmp
pop
xchg
xor
pushf
repz
xlat
mov
inc
lcall
jns
jnp
lahf
pop
or
sub
loop
pinsrw
lret
fdivl
out
cld
mov
sahf
pop
insb
jno
movsb
lods
sbb
ror
sbb
dec
lahf
jmp
mov
nop
mov
add
push
push
xor
fcmove
lcall
dec
insb
outsl
ret
imul
aad
sub
mov
xchg
les
or
movsb
in
lcall
cmc
mov
push
and
add
scas
scas
adc
push
inc
cmp
and
xchg
dec
popa
push
int3
nop
push
add
sbbl
xor
clc
push
fcomip
cmc
mov
push
subb
xchg
imul
or
lods
pop
bound
rol
xchg
cmc
ljmp
cli
in
push
in
test
cld
stc
jp
stos
icebp
mov
das
xor
incl
lods
jnp
jbe
fldcw
iret
loopne
jo
push
popf
sub
or
inc
aaa
clc
cmpsl
aaa
icebp
lcall
cwtl
insb
ret
subl
fucomip
sub
mov
dec
rcl
nop
loop
sti
push
pushf
mov
add
adc
or
call
push
and
loopne
js
imul
jecxz
in
ret
not
fcmovbe
jecxz
loope
cmpsl
push
push
jmp
aaa
cld
cmp
jecxz
imul
jmp
xchg
scas
ss
push
int3
and
incl
dec
mov
xlat
repnz
cltd
sub
dec
sub
and
addr16
push
decl
xor
cmp
sahf
or
daa
fnstcw
xchg
mov
lret
add
stos
bound
test
movsb
push
rcr
int
adcl
push
jne
int3
outsb
jp
xchg
pop
mov
into
sbb
xor
lcall
popa
xlat
outsb
pop
push
dec
sbb
add
push
je
and
fwait
mov
call
shrb
sub
cs
mov
out
jae
adc
dec
or
sbb
jno
cmp
mov
je
cmp
lcall
jl
mov
mov
jl
push
mov
and
cmpsl
sub
jns
mov
lea
movsl
std
lcall
sbb
pop
and
sahf
push
inc
insl
add
sbb
jnp
dec
mov
adc
mov
in
lcall
push
xor
jmp
cmp
aaa
std
and
movsb
add
pusha
andb
inc
xor
loope
add
ljmp
dec
jg
jp
enter
or
mov
outsb
jmp
movsl
jne
dec
scas
jns
shll
bound
xor
pop
das
jae
cli
ds
call
mov
mov
sbb
sub
pop
xor
jae
and
incl
dec
pusha
dec
jmp
out
inc
jle
sub
ss
sub
cmpsl
lock
pop
out
jns
cmp
lcall
in
push
xchg
mov
jge
lretw
mov
mov
movsl
mov
ljmp
or
insl
shll
pop
shr
push
sub
pushl
pop
dec
daa
ja
mov
mov
add
pop
mov
icebp
jg
aas
cli
les
xchg
sub
jno
sbb
pushf
iret
inc
sub
int
or
lcall
es
call
jo
dec
int
js
sub
sti
cmc
fwait
adc
push
cmp
lcall
lcall
fwait
sbb
adc
mov
pop
pop
add
add
lock
std
incl
unpckhps
cmc
roll
inc
xchg
cwtl
orb
adc
call
sbb
pop
bound
les
and
int
push
insl
pop
test
inc
fldt
mov
jmp
into
aas
outsl
pop
push
seto
pop
cmpsl
pop
insb
pop
inc
outsl
icebp
loop
mov
out
push
aaa
call
aaa
mov
stos
pop
and
shrb
sarb
out
mov
lcall
dec
dec
lock
cmp
in
iret
xchg
adc
xchg
cmp
pop
jne
das
cwtl
imul
xor
add
push
adc
inc
js
xor
pushf
adc
call
xchg
mov
xlat
xorb
xlat
mov
mov
decl
xchg
loop
push
jg
add
jge
mov
rorl
jmp
cltd
mov
cmp
pop
mov
repnz
js
pushl
and
mov
rorb
xchg
mov
arpl
mov
loopne
inc
lods
scas
pop
jb
pop
xchg
stc
push
jle
xchg
inc
test
mov
jbe
out
mov
pop
jno
dec
sbb
rolb
push
lahf
xchg
add
push
hlt
lcall
pop
fs
lret
cmp
push
jl
mov
fwait
add
jns
test
or
std
ret
inc
andl
clc
dec
ret
adc
shrb
inc
adc
mov
ljmp
shr
xchg
pop
xchg
add
hlt
lock
jno
xor
ret
fstpl
sbb
call
sub
dec
ljmp
sub
sbb
xchg
test
xorb
and
inc
mov
sbb
sub
test
inc
and
pop
mov
lcall
insl
pusha
push
popa
test
cltd
insl
pop
push
mov
xchg
push
test
pop
fdivr
cs
mov
clc
push
inc
sbbl
fnsave
dec
gs
shll
mov
adc
pop
pop
mov
push
or
dec
mov
icebp
call
clc
ds
mov
or
pop
imul
cmp
xchg
movsb
mov
push
sbb
sbb
mov
ljmp
push
mov
pop
cmpsb
jp
cmpsb
lods
xchg
mov
dec
cmp
int3
xchg
aaa
mov
std
jl
or
aaa
lret
std
and
inc
cmp
ss
mull
push
ret
sbb
jle
movnti
pop
mov
jle
sti
cwtl
stos
into
add
cmp
decl
imul
or
jge
sbb
mov
mov
incl
arpl
push
push
adc
ds
sub
cmp
out
push
pop
gs
pushl
fcmovne
mov
cld
xor
mov
adc
mov
dec
pop
or
pop
xlat
jnp
imul
decl
add
imul
jnp
adc
pop
dec
in
ret
mov
jg
or
fisubrs
or
mov
mov
jnp
jne
cli
div
or
es
enter
mov
loopne
xlat
adc
mov
ror
aas
cmp
shll
jg
int3
pop
insb
push
inc
negb
dec
std
les
je
cli
ror
out
std
ljmp
nop
dec
sbb
push
outsl
xor
je
adc
mov
adc
lret
jle
push
jae
xchg
or
sub
pop
mov
clc
mov
dec
sahf
cmp
repnz
imul
lock
sar
push
or
sub
lahf
sub
mov
mov
jmp
outsl
test
fs
in
push
incb
mov
shlb
leave
pop
ss
icebp
or
jmp
mov
decl
jge
mov
xor
xchg
push
lods
aaa
je
clc
js
mov
les
and
inc
sar
call
xor
xchg
xchg
lock
jbe
xchg
lods
test
or
sub
mov
ljmp
jecxz
lods
pop
pop
push
rclb
ret
xor
mov
cmp
mov
inc
dec
movsb
out
xchg
dec
jg
push
es
cs
push
pop
and
jg
icebp
int
dec
hlt
jbe
fldl
mov
push
outsl
dec
movsb
in
imul
sbb
gs
decl
xor
mov
sbb
or
sbbb
dec
dec
xchg
xchg
cmp
lcall
jl
xchg
add
add
cli
sbb
enter
xchg
pop
js
inc
xor
aam
and
cli
imul
in
fistpl
jmp
jae
push
mov
fiadds
sbb
mov
fmulp
shl
call
fldenv
jecxz
push
jle
fnstcw
mov
jge
mov
incl
imul
gs
inc
movsl
scas
pushl
sub
dec
insl
or
ljmp
inc
jne
mov
in
mov
xor
dec
push
loopne
addl
sub
lcall
decl
sbb
popf
push
je
popa
or
enter
push
into
into
dec
and
leave
pop
xchg
push
sbb
mov
mov
sarb
daa
daa
jg
lcall
scas
push
sub
adc
mul
test
testl
rcrb
ljmp
int3
mov
or
cs
and
call
dec
shl
jl
fdivrl
sub
push
std
xchg
cmc
sub
and
mov
popa
lret
rcrl
pushl
lods
pop
sub
adc
push
cmp
repnz
lcall
das
into
inc
jmp
mov
jl
jge
fwait
dec
dec
insb
xor
loop
inc
hlt
loopne
lret
mov
and
add
mov
xchg
pop
mov
test
shll
inc
adc
mov
xchg
add
ljmp
cli
lcall
fwait
inc
outsl
movsb
pusha
cmp
or
or
icebp
call
ljmp
xchg
and
xchg
out
sub
fidivrs
sbb
dec
mov
outsb
test
icebp
fadd
js
and
movsb
and
jle
dec
imul
mov
shl
in
sub
repz
cld
dec
call
jne
lret
jo
pop
inc
or
movsl
adc
mov
sub
or
sahf
incl
daa
in
repnz
clc
inc
cmp
cmp
dec
aaa
jl
roll
cmp
pop
data16
jg
push
pusha
inc
mov
rolb
cwtl
daa
xor
lret
cmp
jmp
jmp
xchg
add
jge
call
fs
push
push
cmp
int
cmpl
or
popa
data16
inc
xor
fldt
dec
fwait
pop
sub
incl
push
cmp
sarb
mov
adc
xor
nop
and
enter
cs
repnz
iret
mov
dec
lcall
mov
cmpsb
jb
xchg
sub
pop
add
inc
inc
dec
or
dec
iret
aaa
push
orl
and
aas
cltd
cltd
push
ss
cmp
sub
leave
popf
push
mov
or
mov
incl
or
push
or
pop
xchg
sbb
bound
ja
ljmp
mov
mov
mov
movsb
es
call
sti
pop
add
adc
iret
mov
lcall
add
inc
adc
enter
jns
fcmove
sahf
jae
leave
test
inc
lret
xor
popa
lcall
pop
jne
or
xchg
cmpsl
lea
cmc
imul
imul
jb
in
cmp
xchg
insl
mov
lret
dec
cmpsb
push
inc
call
xchg
fcompl
jge
pushf
cmp
and
push
dec
cld
xchg
sbb
sbb
rorb
and
mov
popa
dec
adc
add
cmp
in
jp
test
xor
push
imul
and
loope
push
pop
xchg
sbb
jg
stos
fiaddl
jmp
and
incl
sti
js
xchg
cwtl
sbb
stc
xchg
loopne
stc
notl
pop
or
push
lret
mov
decl
cwtl
jne
sbb
xor
jb
cwtl
std
cmp
pop
xor
ja
push
ljmp
addb
sbb
enter
cpuid
addr16
jg
jmp
cmp
cmp
mov
aas
imul
push
loop
push
in
stc
das
and
cmp
mov
sbb
mov
mov
pop
loop
push
int
movsl
pop
sbb
pushl
adc
je
je
imul
je
dec
cmpsb
mov
aam
push
jno
jge
adc
sub
jmp
pop
cld
cmp
insl
sbb
test
push
mov
inc
pop
sahf
jno
pop
aas
push
pop
push
sbb
movsb
call
std
outsb
xchg
sbb
subb
fstpl
fldl
ja
outsl
lcall
pushl
jns
or
cmp
jne
dec
pextrw
push
mov
sbb
mov
in
ljmp
inc
pop
iret
aas
movsl
or
sbbl
sbb
ljmp
cmc
aad
ficoms
leave
imul
mov
pop
jbe
jne
movsb
push
fcompl
les
clc
aam
ret
sub
dec
or
push
xchg
divl
adc
push
sahf
aas
mov
xchg
in
inc
aad
icebp
jg
mov
jae
test
lock
cmp
mov
cli
lds
xchg
lcall
mov
fistpll
ret
ss
jbe,pt
stc
cmpsl
inc
cld
xchg
aaa
bound
sbb
stc
pop
cmp
jae
cmp
jp
lods
aaa
cs
mov
ret
or
test
jb
jmp
fldcw
notb
insl
lcall
jecxz
call
or
rol
cmp
sar
mov
rcr
or
cmp
outsb
mov
mov
and
jmp
push
inc
mov
pop
and
adc
pop
sub
cld
out
pop
aas
cmpb
loope
in
mov
decl
jecxz
push
cwtl
and
rolb
imull
imul
xchg
aad
push
inc
xchg
lcall
aad
inc
pop
rep
mov
mov
fstpt
push
pusha
sub
dec
mov
jmp
test
bound
aad
mov
and
in
mov
inc
xchg
sti
push
sbb
stos
ljmp
inc
push
call
mov
cmp
shlb
testl
mov
mov
lock
push
daa
xor
aaa
lcall
xor
cmpsb
in
insb
pop
adc
sbb
adc
fs
inc
ret
aaa
inc
std
jmp
aad
xchg
movsl
add
call
and
sbb
jl
and
jg
or
movsl
cwtl
fdivrs
fdivs
call
push
xchg
or
outsb
in
xlat
ds
mov
xchg
stos
dec
lahf
fcomip
pushl
pop
xlat
add
in
dec
mulb
mov
bound
dec
inc
jmp
push
andnps
insl
mov
push
ss
aad
pushf
popa
rcrb
jg
inc
cli
ret
pop
stos
pop
je
cmp
inc
mov
push
lods
cwtl
dec
je
stos
dec
pop
pop
fcomip
in
pop
jl
je
jmp
pop
push
addr16
lods
andb
les
leave
in
std
call
and
sarl
mov
leave
pop
cli
loopne
dec
stos
sbb
dec
in
ret
dec
mov
sub
in
repnz
push
faddl
pop
push
jbe
xlat
nop
and
push
or
incl
test
js
or
int3
or
adcb
cmpsl
mov
data16
cmc
dec
push
sub
mov
cmpsb
jne
leave
lock
jmp
in
not
fcoms
popf
lock
mov
fbstp
jmp
and
movsb
cld
push
lret
fs
xor
lcall
push
adc
stc
push
loope
pop
lret
je
pusha
push
fmulp
stc
je
loop
icebp
repnz
lods
int
fs
decl
push
stc
arpl
rorb
jle
pop
andb
push
mov
and
fsubrs
sbb
cmpsb
pop
mov
xchg
leave
push
hlt
sbb
mov
addb
inc
adc
mov
js
xor
add
scas
popf
mov
lods
stos
sub
cmp
pop
cmc
idiv
adc
dec
das
inc
xor
xor
icebp
cmp
mov
fdivr
ljmp
dec
cli
ss
enter
jae
aam
bound
mov
insb
sti
mov
xorl
adc
inc
push
outsl
pop
lcall
jg
or
sub
pop
shrb
scas
xor
sbb
sbb
dec
adc
sti
sti
mov
inc
nop
or
lea
pop
adc
test
orl
test
dec
test
dec
pushf
imul
cmc
es
daa
fcmovnu
mov
call
push
add
arpl
sahf
mov
pop
jle
hlt
push
ljmp
ret
inc
lods
lods
jge
shll
enter
iret
mov
aad
inc
popa
out
ret
pusha
xlat
lcall
das
test
and
or
cmp
or
mov
mov
lcall
and
lods
fdivrp
es
pop
ds
decl
cmp
dec
mov
add
push
adc
mov
add
fcompl
lahf
ja
leave
call
pop
pop
mov
cmp
cmp
xlat
dec
mov
xchg
js
shlb
in
add
decb
std
fildll
rorb
push
cmpsl
sbb
add
in
ljmp
inc
pop
out
xlat
outsl
pop
push
inc
fnsave
push
and
call
cmpl
add
mov
mov
aaa
test
dec
decl
push
sbb
rclb
addr16
popa
test
lret
jmp
xor
js
icebp
sbb
insb
xchg
mov
or
setnp
in
jge
jl
mov
mov
xchg
add
dec
mov
mov
inc
push
loope
mov
fwait
ret
incl
fisubl
imul
aas
jecxz
fdivr
arpl
lcall
sti
dec
filds
xor
test
repz
mov
xchg
mov
in
bound
loop
sarl
adc
scas
push
pop
cli
jge
cmpsl
nop
jno
decl
add
popf
rcrb
mov
pop
clc
daa
xor
add
mov
push
sub
inc
push
outsb
push
insb
hlt
jmp
lea
sbb
mov
jnp
insb
xor
jg
jmp
insb
jg
lcall
lds
cmp
adc
mov
pop
mov
incl
ret
out
arpl
insb
mov
mov
cmpsb
jle
sub
adc
lret
arpl
fs
lcall
incl
xor
ret
jae
xor
lods
jnp
jge
cli
ja
mov
repz
mov
hlt
call
mov
mov
cmp
lret
mov
xor
andb
pop
dec
fimuls
lret
mov
inc
jle
mov
call
sbb
xchg
stos
decl
or
lret
xchg
mov
xchg
cwtl
or
pop
dec
in
scas
mov
ljmp
test
xchg
mov
sbb
imul
into
repnz
dec
push
test
jp
lret
pop
lods
sub
fisttpll
ljmp
js
out
nop
pop
scas
cmp
mov
or
stc
out
jecxz
xchg
fwait
adc
out
into
mov
sbb
jnp
cmp
in
pop
test
das
xor
stc
adc
sbb
dec
jno
in
xor
out
sub
cmpsb
sbb
dec
pop
dec
pop
sub
push
jmp
ja
cmp
cmp
ja
cmp
push
fdivl
into
sub
js
ljmp
test
and
frstor
jle
or
movl
lods
inc
mov
mov
sub
rcrb
fisubl
lcall
mov
cld
hlt
jns
add
push
lods
mov
push
das
roll
lret
fidivl
jae
stc
pop
jmp
cmp
dec
shl
decl
gs
mov
xchg
test
add
pop
cltd
mov
cmp
rorl
lahf
xlat
xchg
mov
jl
cmc
rorl
hlt
nop
out
xchg
mov
mov
out
fwait
dec
mov
es
jmp
out
and
add
xorl
out
push
leave
xlat
xor
call
push
ret
mov
xor
xor
cltd
es
jecxz
ret
test
adc
sbb
fwait
jg
mov
scas
dec
movsb
sahf
jle
or
push
sbb
ljmp
xor
std
sbb
push
inc
cmp
std
call
add
cli
jmp
pop
adc
pushf
pop
or
jbe
cmp
xchg
lcall
repnz
pop
dec
test
jbe
mov
aaa
sub
call
mov
cli
mov
push
cld
loop
scas
jnp
push
dec
inc
dec
ss
xchg
jmp
js
movsb
test
out
in
test
repnz
repnz
jbe
jae
fwait
adcl
mov
ljmp
int
verw
mov
jae
cmc
add
push
std
inc
and
fld
ja
mov
and
popf
int
push
rcrb
push
mov
cli
sbb
add
rcr
jg
rclb
push
call
test
stc
mov
loop
daa
imul
push
jbe
adc
xor
idivb
sbb
lcall
insl
es
and
fsubp
xchg
inc
cmc
lcall
lods
pop
ss
fildll
scas
sahf
lds
jmp
mov
outsl
rcr
or
pop
jnp
cltd
mov
jp
fwait
in
cmp
stos
test
cmp
call
xchg
or
adc
and
das
cs
sub
mov
incb
add
adc
jmp
out
xchg
enter
jmp
jno
dec
lcall
xor
or
int3
cltd
iret
add
xchg
pop
mov
or
fimull
jmp
int
xor
sbb
repz
sub
push
xchg
dec
add
int3
lcall
mov
movsb
sti
add
inc
mov
pop
xchg
pop
mov
movsb
sarl
jae
mov
in
mov
pop
std
xor
inc
xchg
loope
push
sbb
repnz
lock
lcall
xor
test
outsb
sub
cmp
mov
fimuls
ljmp
pop
rclb
pop
nop
and
bswap
push
loop
divb
call
std
loop
ret
cli
loopne
dec
cmc
sub
add
mov
xor
decl
pinsrw
lods
fdivr
imul
sub
push
inc
xor
fisttpll
jae
adc
incl
inc
adc
add
xor
push
or
inc
and
adc
popf
mov
mov
lcall
or
push
mov
inc
ja
or
scas
jecxz
insb
mov
decl
cli
mov
jns
hlt
shl
in
icebp
ror
adc
pop
cmp
gs
in
jg
pop
lret
push
mov
test
mov
arpl
test
in
add
pop
sahf
push
iret
push
push
cmovl
add
data16
sbb
sub
out
cli
mov
leave
inc
fsts
mov
xor
adc
inc
repnz
pushl
arpl
push
or
lds
in
sub
push
arpl
stos
enter
rclb
decl
cmp
push
push
jb
cmp
push
repnz
mov
call
dec
xor
push
insl
adc
push
rcr
mov
jmp
sub
jge
or
cmp
mov
dec
out
mov
rcr
sub
and
push
mov
ret
mov
push
mov
incl
les
mov
cwtl
sarl
mov
jge
ljmp
into
xor
jae
repz
inc
jne
adc
fwait
dec
adc
add
decl
mov
xchg
cmp
adc
cmpsl
pop
lods
inc
call
pop
xor
stos
clc
decl
lock
shl
ljmp
xor
lcall
pop
les
out
mov
setp
or
inc
out
jne
aas
fdivrl
pop
mov
inc
bound
cmc
frstor
pop
insl
cmp
mov
pushf
inc
push
xchg
loopne
sub
add
push
cmp
mov
dec
leave
or
sub
jmp
xchg
jb
pop
mov
pusha
mov
iret
mov
xchg
lret
rolb
mov
movsl
call
sub
or
es
loopne
add
mov
pop
ret
push
test
out
add
pushl
and
xchg
xor
dec
sbbb
mov
lcall
and
roll
outsl
clc
cmp
out
push
sbb
mov
add
ljmp
jmp
ja
jg
cs
jecxz,pt
pusha
filds
stos
lahf
test
dec
jmp
lods
mov
addr16
lods
ljmp
decl
and
cmp
mov
mov
daa
inc
lods
xchg
clc
cwtl
dec
lds
fwait
in
popf
jl
mov
sub
in
pop
aas
mov
loop
pop
ret
add
inc
out
jno
and
aas
pushf
adc
push
cmp
lcall
add
mov
push
adc
jb
idiv
decl
add
adc
and
ficoms
sahf
push
and
adc
mov
notl
stc
xchg
cmp
cltd
in
adc
mov
fs
mov
cmp
aam
ret
inc
jb
clc
rcrb
pusha
jns
pop
ret
adc
icebp
incl
sub
xchg
sbb
js
mov
xor
loop
cmp
lcall
xor
push
xchg
dec
mov
ret
or
test
jmp
xor
rclb
fs
fwait
int3
scas
dec
sbb
dec
ja
mov
aas
in
jecxz
xlat
ljmp
ficomps
inc
and
nop
rol
and
dec
add
mov
add
and
ficompl
imul
ja
psllq
xchg
rcll
lcall
loopne
stos
push
and
dec
mov
mov
test
and
sbb
es
pop
inc
sbb
jne
jp
shrl
ljmp
jns
lahf
push
xchg
popa
inc
sbb
aaa
rolb
js
popw
std
incb
sar
ljmp
outsl
mov
test
mov
arpl
xchg
stos
popf
push
incl
test
dec
stos
dec
sbb
icebp
sbb
push
int
inc
xor
mov
outsl
ljmp
clc
out
fsubl
add
clc
repnz
xchg
sti
jns
div
aas
or
mov
pop
repz
and
pop
mov
bound
or
inc
inc
sar
adc
pop
aam
push
hlt
add
jg
jg
shlb
add
lods
mov
mov
mov
cmc
pop
mov
mov
mov
mov
fidivs
xor
jle
or
xchg
jbe
out
sbb
xor
lock
mov
jl
jmp
pushl
bound
jecxz
mov
dec
inc
cld
pop
int3
ljmp
jp
adc
pop
inc
pop
jle
adc
jno
sbbl
ljmp
mov
test
int
jp
fstpl
sarl
stc
push
gs
adc
sbb
sbb
xlat
call
jmp
mov
jb
xchg
in
jle
es
daa
jecxz
dec
dec
cmp
jl
fmuls
inc
push
mov
cmp
lock
inc
sub
mov
inc
cmp
and
inc
mov
push
xchg
sti
sub
ja
xchg
aas
xorb
xlat
decl
cmp
push
dec
cmc
in
and
in
in
fstl
ds
data16
dec
addr16
lock
repz
lcall
sub
in
mov
mov
cli
pusha
popf
sbb
inc
ret
leave
aas
jae
aam
jmp
sbb
cmp
in
in
js
xor
hlt
xchg
xchg
jae
lcall
decl
rorb
dec
arpl
push
ret
dec
je
hlt
xchg
movl
in
lods
and
icebp
push
jle
test
fidivrs
movsb
mov
std
push
out
or
mov
pushl
lcall
imul
mov
jne
xchg
pop
movsl
aaa
adc
mov
out
mov
cmp
ljmp
lods
and
xchg
or
jb
xchg
je
decl
shlb
pop
imul
roll
arpl
cmp
jnp
sub
aad
cmp
incl
scas
inc
lea
shr
cld
jo
fs
sarl
int3
pop
xrelease
sbb
mov
inc
pop
inc
pop
mov
mov
xchg
push
adc
jle
jb
pop
loopne
je
subb
and
push
mov
cmp
lock
notl
cmpsl
jp
sbb
ror
dec
paddsb
jb
incl
outsl
cs
fstpt
and
andl
pop
xor
ja
hlt
repnz
clc
fmull
xchg
popf
js
or
adc
jbe
lret
lret
test
pop
ljmpw
andb
add
ret
jno
xor
rcll
or
xchg
mov
sub
and
aad
xchg
pop
fildl
stos
inc
ret
mov
xor
loopne
daa
cmp
test
sbb
shrl
jl
jns
lcall
addl
xor
sarb
jg
mov
out
pop
andl
xor
out
test
mov
xchg
add
dec
or
mov
test
dec
arpl
cmpsl
scas
dec
je
or
cld
jg
popa
push
jo
push
rorb
xchg
lea
out
clc
mov
inc
ret
lcall
shlb
lcall
ljmp
insb
mov
hlt
mov
xor
push
sub
xor
icebp
mov
ljmp
push
call
xchg
add
aam
pop
stos
fstp
mov
lods
xchg
push
sbb
fcmovnbe
xor
mov
add
adc
leave
inc
xchg
jecxz
dec
pusha
lcall
cmpsl
in
cmp
loope
cmp
data16
push
mov
cmp
decl
sahf
sub
imul
mov
jns
xlat
dec
call
push
mov
lcall
shl
daa
mov
cmp
negb
sub
repz
sbb
dec
cmp
aad
mov
mov
and
xor
mov
or
inc
lods
xor
xchg
pop
ss
jne
out
cli
mov
les
mov
aas
add
mov
lods
mov
xchg
lcall
lahf
mov
sarl
dec
sub
aaa
mov
vunpckhpd
das
adc
movsl
sub
ljmp
les
push
cwtl
jp
in
push
xor
ja
xor
shlb
cmp
call
jg
jbe
fmuls
test
inc
out
jne
or
push
out
sub
call
push
popa
or
test
out
out
out
cs
cmp
cmpsl
cwtl
sbb
imul
incl
dec
adc
or
lret
cs
xor
and
testb
fistl
ficoml
cld
incl
pop
xchg
or
and
imul
dec
and
mov
in
loop
ss
jo
lods
es
arpl
and
loopne
fisubrs
push
sarb
jno
xlat
inc
lret
inc
xchg
incl
sbb
icebp
lods
movsb
outsb
push
ret
gs
mov
inc
inc
inc
adc
jle
leave
clc
and
call
inc
xor
fs
fcomip
xchg
mov
inc
xchg
xchg
pusha
cwtl
jle
inc
or
add
ljmp
imul
movsb
mov
xchg
ret
sbb
pushf
lds
and
dec
xchg
dec
test
mov
push
arpl
in
add
mov
add
mov
inc
je
dec
and
mov
mov
insl
jge
xchg
cli
int
ja
jnp
add
test
cltd
out
mov
sub
inc
sub
mov
insl
xor
aaa
mov
inc
push
data16
lock
mov
test
decl
push
adc
adc
cld
jecxz
dec
iret
pop
incl
mov
dec
fs
lahf
dec
cmpsl
outsl
inc
xchg
pusha
mov
or
call
call
push
bound
stc
into
adc
insl
lret
loop
push
mov
cwtl
sub
clc
pop
hlt
lcall
xchg
inc
sub
repz
aam
popf
mov
mov
lods
stos
xchg
pushl
mov
out
sbb
ss
clc
jl
jmp
mov
call
inc
xor
das
xchg
jle
lea
imul
sahf
out
loope
dec
mov
decl
pop
sub
push
movsb
repnz
insl
iret
insb
xchg
dec
and
jl
sub
mov
mov
aam
es
decl
gs
lahf
movsl
data16
out
aad
add
ljmp
inc
and
xchg
push
xchg
mov
sbb
pushl
stos
lret
lret
sub
push
fldcw
in
in
pop
mov
es
and
jns
repz
ljmp
xchg
je
shlb
xchg
push
xchg
mov
addr16
daa
data16
inc
out
jl
inc
pushl
out
fwait
daa
xchg
jns
out
in
dec
or
xor
ljmp
cmp
push
outsb
roll
add
cld
mov
mov
jmp
shrb
dec
sahf
push
or
stc
jmp
inc
jg
sbb
cmpl
imul
ljmp
aad
xor
xchg
cmpsb
ljmp
pop
and
test
test
dec
inc
das
and
sahf
push
push
mov
push
sbbb
xor
lahf
pop
xor
sub
jmp
cmpsl
je
jno
inc
jge
mov
pusha
inc
mov
arpl
xchg
jp
xchg
lcall
into
daa
or
jl
lods
mov
or
mov
fwait
cmp
xchg
inc
mov
ss
pop
fs
call
popa
push
fcoms
xorl
fwait
insb
push
cmp
lcall
sub
push
jbe
inc
gs
cmp
ljmp
inc
pop
iret
jle
mov
xchg
jle
mov
cmp
mov
repz
fs
in
es
lods
ss
scas
mov
jmp
xchg
mov
add
inc
pusha
push
push
cmp
ficoms
adc
adc
ljmp
mov
jno
adc
mov
or
in
jecxz
xor
dec
mov
adc
shll
adc
ja
jno
pop
cmp
and
xchg
clc
xchg
rcrl
jg
mov
push
fldt
leave
test
push
test
das
out
test
pop
out
std
stos
jmp
aad
sbb
mov
negb
lods
js
rolb
adc
aaa
mov
jmp
mov
jmp
lcall
jae
adc
stos
js
sub
lds
adc
xorb
cmp
xor
lret
popf
mov
mov
pop
adc
call
movsb
sahf
movsl
add
js
jo
sarb
cmc
hlt
popf
cmpsb
movsb
mov
ljmp
rcrb
fwait
sub
mov
in
pop
pop
pop
mov
je
push
pop
and
lcall
out
sbb
xchg
sub
lods
in
addr16
das
pusha
pop
mov
pop
push
pop
dec
mov
pushl
pop
and
movsb
sbb
xor
dec
ss
int
cmp
jle
xchg
repz
fldl
leave
clc
adc
adc
ss
xchg
gs
and
imulb
in
rcrl
mov
push
lcall
inc
mov
pop
or
enter
xchg
in
sub
pop
clc
popa
sub
sbb
mov
push
shll
fcos
lahf
shl
lret
sbb
cli
mov
push
sub
ljmp
subl
leave
cmp
jg
and
fisttps
sub
push
in
gs
add
incl
stos
fisttpl
test
push
sub
mov
inc
repnz
xchg
popf
cltd
mov
incl
cvtps2pd
cmc
mov
mov
gs
pop
outsl
push
test
nop
out
lahf
jnp
fiaddl
cmp
call
dec
pop
nop
lahf
rolb
jl
lcall
orb
push
icebp
aad
inc
add
xchg
mov
jg
das
sbb
jl
andps
out
fidivl
push
mov
icebp
inc
pushl
adc
pop
aad
call
jmp
test
mov
pop
lret
je
mov
test
data16
out
cli
pushf
jno
cltd
stc
orb
sub
or
mov
cmp
repnz
lcall
xchg
leave
or
and
shlb
mov
aad
movsb
xchg
ds
pop
stc
aas
lods
fwait
pop
pop
cld
cli
inc
pop
cwtl
shrl
imul
lahf
outsb
clc
roll
mov
add
xchg
je
incl
aam
mov
xchg
pop
pop
loope
rorl
cmp
sbb
dec
mov
inc
loopne
cmp
pushl
push
or
aad
test
sbb
add
jle
fwait
inc
jnp
xchg
mov
pusha
loopne
iret
mov
scas
sti
loopne
pop
dec
repnz
stos
test
cmp
and
mov
pop
mov
adc
outsl
mov
cmp
jg
inc
inc
sub
inc
repz
xchg
fcmovb
jge
and
pop
or
inc
push
rclb
ret
lcall
iret
jge
cmpsb
xor
inc
add
dec
mov
shrb
adc
mov
orb
shll
incl
stos
sbb
and
inc
sahf
nop
mov
call
aaa
sbb
movsb
test
xchg
jg
test
add
xchg
test
and
call
or
xor
cmpsl
inc
fwait
inc
cld
es
push
sbb
test
pusha
cmp
sbb
scas
clc
lcall
cmpsb
and
dec
les
repnz
mov
outsb
cmp
cmc
out
bound
push
sbb
jge
fcomip
dec
popf
xlat
js
push
fs
cmp
sub
shlb
and
mov
fwait
dec
sbb
pop
pop
fnstenv
out
pop
ljmp
cli
push
add
fdivrp
pop
jno
shrb
dec
repz
arpl
aam
stos
sti
lahf
adc
imul
vlddqu
jmp
push
and
imul
leave
std
popf
ret
out
dec
dec
scas
loopne
sbb
jmp
repz
jne
pushf
rorb
int
pop
clc
stos
out
pop
mov
in
xchg
or
xchg
clc
rcrb
insb
xchg
sub
mov
ss
push
sar
pushl
cmpsl
mov
in
shlb
sahf
xor
jge
xchg
xor
lahf
jg
pushl
cli
add
std
out
out
jb
xchg
jmp
mov
pushf
jmp
mov
add
dec
stos
inc
call
std
das
mov
mov
inc
add
mov
out
shl
iret
pop
xchg
inc
mov
jg
fiadds
cli
fdivr
iret
sbb
in
test
test
dec
data16
sub
or
decl
mov
fsubrl
js
inc
into
popf
incl
cld
cmp
jp
ficoms
pop
adc
pop
xchg
add
dec
mov
pop
add
mov
repnz
pop
sub
loopne
retw
decl
movsb
lcall
insb
cmpsl
les
fbld
pusha
nop
adc
bound
add
decl
or
cmp
fidivl
cmp
imul
lcall
sub
lahf
ljmp
xlat
filds
mov
xor
mov
jmp
cmp
lock
add
lock
cmp
push
mov
ja
push
std
decl
mov
jns
in
clc
adc
pusha
scas
test
pop
aad
jmp
insl
imul
int3
jl
push
ror
cmp
inc
add
xchg
das
jp
pusha
jo
xchg
push
dec
pop
jmp
jbe
push
dec
pushf
or
decl
add
icebp
loope
pop
sub
mov
xor
bound
mov
cmp
call
sbb
lret
pop
arpl
in
sub
sub
outsl
sarl
nop
mov
jne
out
pop
sub
xchg
hlt
or
rclb
sbb
cmp
add
cbtw
mov
jp
xchg
push
movsb
xchg
push
push
mov
stc
jecxz
lcall
cli
mov
fucomi
fwait
andl
in
sub
push
stos
test
inc
jnp
adc
out
mov
xlat
xorb
mov
sub
decl
jg
adcl
cmp
dec
dec
and
in
outsl
xor
fcomip
inc
fnstenv
in
inc
aaa
addb
stos
outsb
popf
orl
mov
loopne
in
shl
inc
js
mov
fs
add
mov
inc
push
sub
ljmp
test
jle
dec
jle
mov
sbb
pop
sub
add
ljmp
icebp
sbb
xchg
cs
lods
mov
jecxz
push
jle
clc
enter
cli
xor
enter
lcall
dec
add
inc
push
fs
add
jo
lods
fsubrs
incl
mov
jmp
lcall
push
js
cli
sub
mov
test
test
in
movsb
push
and
decl
mov
cmp
cmp
xchg
mov
xor
test
mov
ljmp
xor
jns
inc
mov
xchg
ret
jmp
std
ret
push
clc
decl
push
mov
lods
sub
mov
lock
out
xchg
call
rorb
or
shlb
mov
sbb
xchg
add
jl
incl
test
movsb
cmpsb
cmp
movsb
shlb
inc
lods
sub
ret
sub
jbe
mov
call
cli
cwtl
jo
push
jmp
mov
or
push
rolb
fldcw
stos
popa
xor
scas
and
out
sub
xor
arpl
mov
push
pop
ljmp
cmp
mov
lock
mov
jp
push
andl
adc
pop
pushf
lcall
cmpsl
outsb
sbb
push
jns
mov
out
rolb
movsb
dec
rolb
mov
call
sti
cld
mov
mov
shll
into
ret
filds
sbb
xchg
add
pop
mov
mov
dec
add
push
in
and
icebp
ja
cmc
lock
out
xchg
bound
aam
decl
mov
mov
xchg
lock
or
mov
fbld
cmpl
inc
push
jmp
cmp
imul
sub
sub
mov
scas
scas
test
cli
xchg
inc
aad
js
push
cwtl
movsl
dec
aaa
std
jg
leave
dec
dec
addr16
push
lods
loope
cld
outsb
stos
mov
and
shll
movsl
ud0
mov
lds
sti
jae
rcrb
push
insb
ds
ljmp
clc
push
pop
mov
lods
pop
stos
fwait
push
dec
mov
mov
in
mov
lcall
add
arpl
add
inc
inc
pop
cs
addb
jns
stos
add
sub
fdivr
call
jle
dec
sbb
dec
jmp
pushf
dec
es
sarb
repz
jbe
fdivr
insb
lcall
inc
out
mov
jp
pop
loope
xlat
popa
pop
sbb
icebp
rcrb
cmp
ljmp
mov
push
add
jae
xchg
pop
je
and
push
repnz
push
test
dec
decl
arpl
add
cmc
hlt
cmp
dec
push
lods
jae
jns
rorl
push
cmp
mov
lcall
adc
repnz
lods
je
divb
sub
popa
lret
mov
xchg
call
cld
fimull
mov
sub
cwtl
mov
push
pop
mov
or
jmp
lock
pop
pushf
cmc
addr16
aaa
std
enter
mov
mov
mov
mov
jmp
call
cmp
pop
mov
mov
pop
in
out
in
mov
add
ret
cmp
outsl
daa
sbb
incl
ret
mov
rorl
pop
aam
sbb
and
jns
xlat
rcl
negl
mov
mov
pop
jae
sar
inc
and
dec
mov
xor
sbb
iret
lahf
dec
inc
mov
xor
jg
pop
xchg
mov
repnz
mov
sub
inc
pop
hlt
out
fdivr
decl
mov
add
ljmp
mov
dec
ljmp
call
sub
loopne
sub
jl
shlb
inc
and
bound
fdivr
pushl
testb
scas
neg
cli
jmp
fpatan
lods
in
mov
test
adc
call
cmp
sbb
call
rcl
aas
cmp
push
aaa
mov
xor
inc
dec
sahf
ffreep
enter
test
ret
imul
lcall
dec
mov
test
sbb
cmp
mov
aas
and
or
lcall
dec
cmp
push
mov
mov
jl
rcl
mov
push
outsb
js
sbb
addr16
xchg
pushl
cwtl
push
inc
arpl
push
jecxz
in
push
ret
insb
clc
std
add
jp
pop
mov
outsb
clc
or
xor
clc
mov
nop
ret
sbb
inc
shr
pop
into
les
jg
jmp
xor
push
repz
ljmp
jl
xchg
push
sbb
fcmovbe
add
data16
out
xchg
lret
insl
test
arpl
lret
sub
pop
roll
daa
push
xor
pop
cmp
les
xchg
pusha
clc
inc
jb
push
cmp
movsb
fldcw
push
sti
and
ljmp
xchg
movsl
gs
imul
jp
xor
jne
sub
xorb
iret
rcrb
fistpl
ds
mov
test
fmull
pop
inc
rcll
call
insb
and
mov
popa
sbb
push
xchg
lret
mov
lea
inc
or
icebp
jb
mov
pop
inc
lcall
out
mov
decl
sub
int
jmp
mov
and
add
cwtl
jge
jmp
aas
and
mov
imul
into
leave
out
xchg
aaa
xchg
clc
mov
arpl
inc
lock
jg
push
inc
adc
rclb
loop
lods
test
cmpsl
outsl
sub
push
shlb
cmp
pop
sbbl
lcall
fnstcw
mov
fdivl
fisubrl
fsubp
inc
in
mov
scas
incl
and
test
jl
cmp
mov
or
repz
aas
xor
std
jg
or
xor
jne
adc
jae
pop
xorb
adc
pop
cmc
call
mov
fstpl
lock
std
call
dec
inc
lea
daa
call
mov
jnp
push
xor
mov
xchg
jmp
shrb
stc
and
jg
adcb
popf
adc
inc
int
ja
jae
and
sar
jmp
in
div
les
pop
lods
mov
cmp
xchg
push
jge
sub
inc
xor
push
lret
and
sbb
scas
mov
xor
repz
or
incl
scas
push
sub
neg
pop
add
sti
adc
filds
jecxz
call
push
scas
popf
das
divl
fsubrp
movsl
push
ss
mov
adc
push
decl
mov
pusha
jecxz
test
add
out
jno
jge
aas
adc
scas
xor
adc
out
dec
inc
es
cmpsb
call
sub
in
out
or
cwtl
sbb
data16
mov
push
mov
dec
sub
lods
xchg
xchg
mov
cmp
loope
movsl
or
sub
jnp
mov
push
test
inc
imul
adc
mov
mov
lcall
mul
or
cli
daa
pop
out
add
mov
dec
mov
adc
test
mov
cld
bnd
sbb
mov
pop
inc
inc
or
scas
jae
clc
mov
ret
push
cmpsl
cmpsb
adc
daa
pop
shll
idiv
push
jmp
mov
jg
pop
cmp
leave
jg
cmp
les
cli
inc
adc
mov
jmp
push
lods
inc
in
lea
cmpl
popa
mov
test
ljmp
cmp
out
pop
aaa
shl
scas
pop
dec
shll
movsb
push
ds
cmp
call
fnstsw
ret
xchg
add
mov
push
pavgw
mov
cli
js
mov
mov
in
xchg
clc
mov
mov
add
decl
jbe
pop
jp
push
imul
out
lcall
pop
add
ljmp
ss
in
faddl
sub
pop
mov
push
jp
fs
movsl
cld
cltd
outsb
lock
mov
push
and
mov
inc
nop
jne
sub
or
repnz
jecxz
and
incl
or
shll
pop
mov
push
popa
cmp
pop
insb
dec
adc
fsubrl
sub
and
cwtl
add
ja
mov
fildll
stos
lret
xor
test
call
in
dec
call
jbe
cmp
cmpsl
stos
push
jl
mov
adc
push
int3
ljmp
incl
mov
jno
cmpsb
int
mov
mov
movsl
cmc
outsb
push
push
pop
movl
mov
test
push
pop
pusha
inc
fildll
push
cmp
adc
sti
into
cmp
push
imul
or
jge
mov
and
lcall
movsb
stos
mov
lock
ljmp
lahf
sub
mov
xchg
xchg
ja
ljmp
sub
fbstp
out
sbb
and
sbb
mov
push
icebp
nop
pusha
subb
mov
mov
push
ret
lods
cs
jle
aas
in
and
push
push
mov
xor
and
addl
push
aam
decl
cmp
loop
fdivrs
call
fiaddl
lret
and
imul
jmp
adc
decl
cwtl
out
movl
fdivr
cltd
push
orb
fwait
dec
loope
cmp
mov
pop
adc
ljmp
sub
dec
sub
jns
pushf
jae
shrb
sbb
sbb
xchg
mov
sahf
sbb
decl
xlat
leave
test
add
jb
mov
arpl
hlt
or
push
and
movsb
fs
iret
ret
fistpl
test
inc
cltd
shl
and
mov
jg
inc
out
aaa
push
xchg
pop
or
pop
loopne
sub
inc
mov
and
incl
in
lock
test
aaa
popa
je
in
push
dec
xchg
dec
and
jl
ljmp
adc
inc
or
js
cwtl
aad
mov
jle
loopne
ja
mov
add
jmp
les
sub
jecxz
xor
cwtl
clc
dec
jne
lock
sar
in
loope
incl
ja
bound
hlt
shll
pop
inc
xlat
rcrl
sub
adc
mov
jb
jle
xlat
mov
andl
out
add
cwtl
movsb
jle
out
adc
in
sarl
sub
mov
loopne
shrl
sbb
rcrb
int3
jmp
decl
notl
dec
cmpsl
push
mov
in
mov
int3
into
pop
mov
add
mov
push
js
loope
mov
and
mov
mov
push
sbb
fsts
jmp
mov
fistpl
sub
out
cltd
lock
negb
pop
addl
jmp
addb
xor
mov
adc
push
xchg
cmpsl
lods
sub
dec
fucomip
cmp
shlb
pop
das
pop
xor
hlt
xchg
inc
fisubrl
mov
ljmp
xchg
out
pop
rolb
xor
mov
lds
loopne
pop
cmp
addr16
ljmp
inc
push
lahf
cmp
sbb
in
xor
sbb
mov
ja
incb
jnp
fidivs
xor
dec
sub
sbb
pushf
pop
dec
jp
decl
push
push
scas
lcall
movsb
bound
push
pushf
sbbb
jae
push
dec
lcall
popa
sub
ret
lcall
add
jmp
or
or
call
mov
dec
inc
iret
iret
pop
fcmovbe
clc
jp
mov
mov
jp
jo
mov
jbe
jno
jecxz
fwait
push
xor
push
add
lock
and
in
and
jnp
jmp
mov
dec
add
push
not
push
mov
test
push
sub
pop
or
call
ljmp
rol
cmp
xchg
mov
mov
stos
mov
jbe
pushl
cmc
aam
mov
sub
loope
push
xchg
fsubl
out
repz
push
sub
insb
jmp
cmpsl
popa
fldenv
ds
repz
jge
arpl
movsl
stc
sbbl
jg
incl
inc
int
lea
cmp
ss
test
pop
cwtl
sub
clc
ljmp
sub
dec
add
mov
add
insb
insb
xchg
leave
in
in
decl
aaa
inc
mov
jo
in
imul
jnp
lahf
call
call
lea
addr16
mov
adc
into
shrl
lcall
xchg
inc
stos
xor
add
pop
fwait
mov
daa
fwait
xor
inc
repnz
mov
ljmp
sub
or
cmpsb
push
insl
push
into
dec
push
lcallw
test
mov
xchg
jae
and
les
stc
enter
cmp
adc
xor
decl
popa
pusha
or
jno
lods
xchg
mov
into
xchg
jae
fisubrs
pop
ljmp
ljmp
push
or
mov
xor
sub
dec
fmull
call
jmp
jle
sub
test
or
in
sub
test
addr16
jns
in
outsl
clc
lcall
jnp
adc
push
in
cld
fmuls
adc
mov
shl
or
dec
insl
mov
push
inc
out
pop
mov
fs
pushl
dec
out
push
mov
mov
add
shlb
mov
fwait
outsb
decl
mov
fwait
xchg
fisttpl
inc
xor
jecxz
xchg
add
mov
cs
lcall
ljmp
pushl
jl
pop
adc
pushf
mov
mov
mov
mov
incl
cmp
xchg
cmp
inc
mov
shlb
add
and
jmp
cltd
xor
sbb
vunpckhpd
stos
mov
fcmovne
loop
ret
decl
add
xchg
push
ret
xchg
shr
mov
scas
xchg
jl
gs
outsl
dec
mov
pushf
stos
fdivrl
push
mov
mov
push
push
loop
add
mov
xchg
pusha
bound
jo
int3
lcall
adc
cmp
jg
test
and
insb
mov
mov
and
test
enter
enter
mov
movsb
xorl
fisubs
lcall
sbb
out
stos
test
jne
mov
mov
and
pop
fisubrs
or
lcall
pop
repnz
inc
jp
xor
aam
or
or
sbb
fdiv
bound
push
lret
sarb
cmp
fbstp
decl
cmp
ljmp
fcompl
cmp
push
movsb
jb
lods
gs
in
test
int3
stos
sarb
fisttps
aam
int3
push
xchg
jl
negl
cld
fs
push
jnp
sbb
lret
lds
std
lcall
push
sbb
xor
inc
cmp
imul
add
jg
incb
mov
cmp
fisubrs
xchg
outsl
popa
inc
push
mov
fdivl
ds
lods
dec
jg
insb
add
jmp
cmp
mov
add
cmc
pop
or
movsb
lcall
inc
cmp
fwait
testb
ss
mov
mov
ljmp
int
or
ljmp
push
pushf
jmp
push
incl
outsb
out
sub
ret
lock
mov
popa
ret
and
jg
les
jnp
adcb
nop
adc
xchg
lahf
fisubrl
jmp
cltd
pop
out
dec
scas
xchg
sbb
int3
dec
jle
adc
dec
xchg
sbb
inc
in
test
lcall
dec
pusha
xlat
js
test
aaa
mov
or
pop
jge
pop
dec
mov
dec
test
std
mov
rcrb
push
jecxz
adc
test
xor
mov
orb
and
push
or
xchg
outsl
sbb
subb
pushf
add
cld
dec
int3
out
adc
subl
imul
inc
xchg
scas
cmpsb
dec
pop
mov
data16
lret
rclb
push
xor
aam
lock
std
call
insb
adc
jne
and
push
jge
addr16
out
loope
sbbb
pop
sbb
aam
popa
or
xchg
ds
jge
popf
or
mov
cld
and
imulb
add
std
bound
jge
out
add
add
xchg
fisubl
sbb
mov
ljmp
xchg
and
xor
or
iret
adc
inc
push
jle
int
xchg
inc
hlt
clc
out
lcall
dec
mov
mov
and
in
cmpsl
scas
or
mov
incl
icebp
aad
ret
out
sbb
shlb
iret
in
imul
leave
fbld
les
mov
das
pop
and
cwtl
stos
mov
incl
mov
enter
mov
rcrl
push
mov
das
and
outsl
jg
inc
dec
or
call
rcl
jno
dec
inc
xorl
into
xor
cmpsl
inc
jo
jmp
scas
gs
insl
stc
pusha
xor
fdivs
rclb
or
in
call
std
dec
mov
adc
outsl
and
movl
mov
adc
jmp
lret
scas
lock
or
sbb
pusha
push
jbe
push
divb
aaa
adc
std
adc
fsts
arpl
cmp
jp
and
jb
js
jae
movsb
pop
inc
push
testl
adc
fnstsw
pop
daa
sub
or
ror
das
fildl
or
push
jmp
movsb
add
insb
lcall
xchg
adc
incb
movsl
ja
dec
add
push
loop
leave
push
mov
shll
xchg
shrl
push
push
inc
outsl
xor
orl
push
inc
mov
pop
bound
rclb
mov
popa
jb
sti
cmpsb
cmp
pushl
pop
push
inc
sub
jg
test
jbe
shll
cs
fsubp
sbb
adc
call
lea
mov
mov
mov
jns
mov
pop
rcr
add
je
and
mov
xchg
mov
pop
push
cmp
incl
dec
std
or
push
lds
out
rorl
push
dec
aaa
call
xchg
rcrl
cmc
leave
test
push
leave
decl
sub
std
mov
mov
dec
lock
or
iret
dec
push
js
nop
mulb
stos
lcall
outsb
and
or
push
pop
or
pop
jno
out
mov
lock
call
and
aam
lock
cmp
pop
push
push
ja
lods
adc
cmp
jp
aas
decl
daa
cmp
adc
les
out
into
in
pop
jmp
call
add
repnz
lods
int
xchg
fwait
popf
sub
sbb
mov
das
clc
jmp
mov
roll
jb
sub
lcall
movsb
imul
in
in
unpcklps
xor
pusha
push
fisubl
and
push
scas
mov
icebp
mov
mov
inc
and
out
lods
imul
call
in
jg
or
mov
enter
inc
cmp
sub
inc
sar
bound
pop
xchg
out
orl
add
mov
les
lds
add
fsubl
and
pop
sbb
stos
push
into
fimull
cmpsb
enter
mov
dec
jmp
out
jge
incl
sub
cmpsb
test
sahf
cli
es
aaa
into
or
mov
dec
nop
aas
xor
repz
xchg
jl
jmp
jnp
int
or
lock
repnz
xlat
shll
pcmpeqb
push
hlt
inc
cmc
mov
jmp
lods
xchg
imull
les
jle
adc
push
je
lret
pop
lahf
pop
popf
in
jnp
call
cs
mov
ljmp
mov
inc
inc
ja
mov
xchg
lea
jg
shlb
stos
daa
xchg
mov
lds
pop
pop
scas
jb
popa
fistl
sbb
or
cmove
fildll
jg
xchg
or
push
daa
in
into
sbb
xlat
rcll
dec
xchg
mov
cmpsb
jg
mov
dec
push
push
fmul
sub
xor
out
incl
jecxz
cltd
push
pushf
lcall
test
mov
push
add
inc
add
cmpsb
mov
in
nop
dec
int3
dec
lock
fsubs
out
fs
pop
cltd
adc
in
fcomip
cmpsl
sub
rclb
jle
hlt
loop
sahf
dec
rorl
sub
loope
pushl
jle
fwait
ljmp
aas
mov
sbb
pop
jp
push
dec
shlb
pusha
lcall
rolb
and
daa
fmuls
xor
cltd
out
push
adc
and
dec
cmpsl
or
decl
and
dec
repnz
mov
std
mov
mov
adc
lcall
aad
dec
dec
andb
out
std
lahf
lock
jg
adc
cld
mov
fcomip
mov
test
lret
nop
push
push
sbb
pop
in
jge
pop
arpl
xor
sub
pop
bound
dec
jns
push
mov
mov
int3
sbb
sbb
pushl
fildl
les
or
mov
test
ljmp
xchg
ljmp
xchg
loopne
popf
or
sub
js
lret
imul
jmp
push
xor
pop
lcall
shrb
fstps
pop
loope
out
mov
cmp
add
cmp
fisubrl
test
lds
dec
cli
call
xchg
arpl
or
adc
dec
xor
xchg
push
js
ljmp
xchg
and
and
pop
add
pop
mov
aas
add
call
test
push
sarb
pop
je
pop
ds
xor
sbb
notl
add
sub
lcall
sar
fbld
mov
xchg
mov
in
xchg
cmp
jg
jmp
cld
test
inc
jae
mov
sbb
pop
pop
adc
je
icebp
jbe
decl
sub
sub
mov
lds
mov
cwtl
push
xchg
out
inc
iret
push
cmp
pushl
push
add
syscall
lods
iret
push
arpl
mov
leave
in
mov
xor
out
push
in
cmp
xchg
addr16
fadds
fwait
xchg
cmpsl
mov
or
push
pop
and
stos
sbb
dec
lcall
xchg
cmp
fisttpl
daa
iret
jns
cmp
sub
enter
notl
cmp
xor
mov
mov
cwtl
dec
xor
fcompl
lods
jp
ret
call
stc
in
lret
inc
adc
in
test
out
dec
sub
adc
lret
and
cs
and
incl
mov
mov
jle
hlt
sarl
mov
sarl
js
add
ja
mov
popf
scas
xchg
int3
int3
jg
and
cmp
cmp
push
mov
movsl
push
fistps
push
jno
sbb
outsl
jg
xorl
fwait
imul
ss
mov
push
or
xchg
xchg
sbb
mov
out
or
pop
dec
stc
aad
outsb
cli
push
cmp
inc
cmp
sbb
and
xchg
call
cmpsl
pop
sub
stc
and
dec
pop
jge
enter
xchg
bound
iret
jle
push
push
mov
push
mov
in
pop
pop
sub
or
adc
out
ljmp
push
rcl
mov
push
cmp
jno
int3
xchg
lahf
scas
and
js
push
dec
or
mov
dec
xchg
repz
ss
int
call
adc
jno
inc
ret
mulb
fs
adc
push
jle
sti
shl
inc
xlat
fldt
add
mov
sbb
insl
cs
jne
sub
sbb
push
mov
outsl
js
hlt
dec
jecxz
dec
test
mov
mov
loope
leave
shll
push
shr
inc
sub
inc
pop
popa
mov
cli
jl
insl
mov
lret
ret
pop
xchg
xor
inc
pop
call
pop
pop
ret
xchg
imul
out
daa
push
rcll
add
xor
les
xchg
pop
insl
dec
test
cmc
mov
sahf
insb
pop
insb
mov
pusha
pop
dec
scas
add
jbe
ljmp
jp
mov
push
shr
aad
mov
repnz
mov
jmp
lahf
incl
rcrb
shll
xchg
adc
adc
sub
das
daa
js
sub
push
incl
sub
add
aas
repnz
push
rorb
push
fs
rcrb
add
push
mov
sbb
add
push
cmp
lret
mov
inc
out
std
pushl
push
xor
nop
inc
adc
push
aas
inc
sub
inc
mov
mov
ss
and
push
push
pop
jg
pop
and
pop
std
xchg
jo
test
bnd
ljmp
out
pop
jmp
dec
in
loope
pop
ja
call
out
push
aas
jnp
inc
cmpsb
push
ficompl
shll
mov
adc
js
push
pop
sub
jb
sub
out
cli
cmpsl
fmulp
mov
test
xor
xchg
popa
xchg
movsb
int
icebp
ljmp
xchg
pop
cld
cmp
cmc
icebp
jg
push
imul
mov
stos
cmc
mov
scas
xchg
mov
adc
pop
jne
movsl
lods
mov
jg
call
in
or
popf
mov
sub
xor
jmp
decl
loope
pop
sbb
ret
xlat
xchg
stos
mov
imul
ljmp
lods
xor
mov
imul
xorl
mov
aam
cli
sbb
test
mov
dec
xchg
xchg
dec
pop
daa
stos
ret
jp
mov
mov
cli
lret
shlb
inc
xor
inc
test
mov
push
jg
mov
in
rcll
ds
dec
sti
dec
sarb
int3
decl
lods
sbb
ret
inc
adc
fwait
sub
gs
mov
or
pop
xor
call
in
movb
xchg
inc
add
jge
sarb
xchg
pop
inc
sti
test
cmpb
sbb
loop
out
jp
aam
adc
fists
jmp
cmp
sbb
add
loope
mov
sbb
lock
loopne
and
jnp
cli
cmp
outsl
jno
es
or
jns
xchg
dec
xchg
dec
pop
dec
je
sbb
std
ljmp
cmp
iret
enter
push
pop
into
push
ret
scas
hlt
push
sbb
add
cwtl
inc
repnz
aas
mov
pop
and
loope
out
call
push
pusha
sub
cmp
add
push
mov
xchg
or
rcrl
dec
ljmp
int3
sub
imul
fstps
mov
repnz
arpl
imull
jo
inc
minps
loopw
dec
lods
pushl
pop
hlt
and
shlb
mov
inc
fwait
and
out
lcall
adc
arpl
inc
inc
ficompl
push
insl
je
pop
pop
int
dec
outsl
les
or
decl
push
mov
push
pop
push
fisttpll
pop
pop
mov
mov
cs
cmp
cmpsb
sub
jge
shrb
add
cli
jno
or
mov
sbb
sbb
sbb
cmp
js
movsl
fadd
and
scas
shll
pop
push
mov
push
push
and
loopne
push
in
inc
movsb
or
nop
insl
test
lcall
jle
mov
jb
jb
push
cltd
jg
icebp
cmpsl
test
jmp
or
das
mov
mov
sub
push
loopne
out
clc
js
or
rcl
mov
lret
icebp
cmp
scas
clc
incl
into
mov
rcrl
fcoml
ret
into
arpl
lcall
push
cmp
xchg
dec
mov
sub
mov
loop
xadd
incl
mov
leave
adc
int3
hlt
xchg
push
xlat
inc
cmp
dec
in
pop
push
clc
dec
inc
push
mov
ja
mov
stc
pop
ljmp
add
int
mov
sahf
decl
cmc
sub
not
pop
sbb
rcrb
push
push
sar
ficoms
jecxz
lcall
push
scas
jbe
cmp
inc
mov
mov
cmpsl
mov
rcr
pop
sbb
movl
decl
mov
sub
cmc
mov
fistl
imul
ljmp
sysenter
push
cld
testb
in
popa
sbbb
outsl
and
mov
loop
lcall
scas
jecxz
notb
jae
sub
sub
pop
cmp
rcr
in
lds
call
enter
lcall
jmp
mov
dec
pop
aaa
fcmovb
enter
in
add
lcall
pop
out
adc
mov
loope
and
xor
fsubrs
cld
xor
cmp
out
clc
xchg
or
sub
bound
stc
dec
or
out
rcl
mov
jle
fcoml
mov
sub
gs
mov
notb
dec
scas
not
add
incl
sub
not
sub
movsl
pop
in
cmpsl
lods
in
jle
movsl
inc
dec
jbe
jg
sbbl
decl
sahf
loopne
fnstsw
xor
mov
sbbb
sbb
std
jp
mov
div
jmp
pop
lock
aaa
pop
dec
ss
mov
scas
jnp
clc
add
xor
adc
push
repz
or
call
das
gs
push
sub
cs
bound
add
jge
std
decl
loopne
cmp
add
pop
mov
cmp
pushl
imul
mov
push
jae
push
mov
notl
int3
stos
mov
call
fs
ss
cmp
pop
xor
leave
loope,pt
pop
loopne
lret
jo
inc
data16
outsb
lods
push
ljmp
cmp
pop
xor
add
in
cmp
mov
xor
mov
cwtl
jmp
sub
cltd
mov
jecxz
in
push
xor
fisubrl
dec
cli
xchg
mov
and
inc
push
loop
ljmp
call
cmp
scas
mov
xchg
or
cmp
movsb
outsb
adc
call
sti
lods
je
in
daa
cli
in
push
mov
call
push
mov
scas
inc
sbbb
mov
in
dec
push
adc
mov
jno
mov
mov
or
jge
fdivr
decl
pop
stc
imull
stos
xor
xchg
jae
push
push
jle
js
test
scas
add
bound
aas
dec
pop
xor
fsub
inc
xor
jns
les
test
push
mov
mov
mov
push
xor
stos
mov
jmp
jbe
stos
in
xchg
add
push
xchg
add
ret
hlt
call
mov
jae
aaa
aam
add
jle
das
sub
inc
pushl
add
adc
jge
add
ret
push
loopne
sbbb
xchg
and
in
mov
push
loop
fsubrp
or
push
test
fisubrl
cmpsb
jg
pop
or
add
cmp
pop
mov
incl
jl
push
je
mov
fwait
or
xor
lahf
pop
insl
push
rcll
and
inc
jle
add
and
inc
daa
push
adc
sbb
or
pushf
mov
xor
lods
xchg
addr16
aam
mov
jl
pushl
lahf
fistpl
xor
ljmp
sbb
arpl
das
mov
jne
rolb
jmp
pushf
repz
je
test
pop
clc
stos
or
test
cpuid
sub
mov
dec
jl
inc
sbb
subl
xchg
lods
push
pop
pusha
pusha
fmull
incl
jl
jbe
push
lds
pop
push
adc
lods
and
dec
pop
inc
lcall
lods
sub
fcomip
negl
mov
adc
mov
stos
repnz
insl
cli
sbbb
lods
scas
gs
ljmp
adc
or
loope
xlat
push
jno
xchg
int
js
dec
or
inc
std
cld
into
mov
arpl
adc
cmp
xchg
sbb
testb
push
sbb
add
cmp
mov
mov
and
ret
pop
in
jnp
sbb
decl
xor
sub
dec
lds
adc
sbb
pusha
leave
inc
pushl
mov
arpl
pushf
jle
pop
push
movsb
sub
fdivr
push
inc
xchg
push
dec
stc
or
out
pop
jae
xchg
pushf
rolb
fs
and
dec
stc
mov
pushl
jg
pushf
inc
ja
ja
mov
jns
xchg
xchg
lock
xchg
das
ret
cmp
mov
jmp
cwtl
cmp
inc
sbb
ret
sbb
xchg
stos
jae
adc
and
dec
mov
iret
jp
enter
xchg
and
cmpb
lcall
jg
jnp
cld
cwtl
add
dec
push
dec
out
push
je
sbb
xchg
sub
clc
incl
lea
clc
mov
call
pop
out
test
mov
xor
fcoml
jg
shll
push
add
xchg
adc
xchg
or
cmp
fisttps
push
iret
pop
mov
cmp
hlt
iret
out
cld
inc
les
shrl
dec
inc
aam
mov
ds
movsb
movsl
cmp
jmp
cmp
sbb
xchg
nop
add
icebp
xchg
lret
xchg
testl
cs
ljmp
xchg
call
cmp
mov
in
mov
decl
lock
jmp
movsb
mov
push
in
push
sub
dec
mov
jg
incl
cmp
inc
add
pop
push
jecxz
lods
xchg
push
sub
addb
call
dec
pusha
mov
stos
cmp
insl
movsl
mov
jnp
ljmp
xchg
fnstenv
mov
xor
loopne
lret
std
ljmp
sbb
andb
mov
mov
data16
data16
sbb
movsb
jns
and
in
ficompl
shl
adc
clc
inc
and
call
sub
imul
imul
mov
fldcw
outsl
outsl
jecxz
inc
ds
jnp
in
mov
mov
insb
rol
subl
jle
jecxz
sahf
call
call
jno
es
mov
and
fistps
aam
and
xor
inc
dec
xor
or
test
jmp
out
pop
xchg
push
pop
jnp
push
fstps
orps
repnz
cmpsb
lcall
xlat
shl
daa
outsb
or
xor
rcrw
xchg
push
push
call
dec
push
mov
loopne
cmpl
popa
mov
outsb
dec
adc
xor
repnz
mov
int3
je
mov
fdivs
add
enter
sbb
out
movsb
jg
dec
psubsw
or
shl
jmp
mov
mov
ljmp
into
cmpsb
adc
push
cmc
jle
sbb
jecxz
jmp
xor
mov
test
lcall
dec
cwtl
dec
jp
add
loop
lcall
xchg
mov
fldl
std
jmp
mov
sbb
inc
xchg
add
jmp
jecxz
fldl
enter
sti
mov
and
mov
call
loopne
pop
mov
loop
mov
lret
mov
add
shl
sbb
sbb
pushl
jae
xor
loop
mov
mov
cwtl
sub
and
cld
add
enter
sahf
filds
or
iret
and
cmpl
das
or
cltd
loope
cmpsl
pop
in
iret
loopne
cmpsl
lea
pushl
lods
and
jecxz
out
and
dec
or
cwtl
daa
xor
xor
jg
xor
incl
popf
jp
clc
stc
nop
inc
int3
push
jg
sbb
jmp
fdivs
pushl
adc
aas
and
jae
loope
icebp
sub
mov
add
call
cmc
add
andl
inc
movsb
mov
insb
test
lcall
inc
loope
pop
push
mov
or
mov
cmp
adc
jns
jg
lcall
add
push
movl
aas
xchg
lcall
add
mov
jecxz
cmp
and
push
jnp
mov
xor
ljmp
pop
movsb
out
inc
or
mov
jmp
outsl
push
pop
int
xlat
dec
decl
imul
sbb
cmp
call
or
cmp
jp
and
adc
mov
ljmp
repz
adc
inc
dec
cmp
mov
sti
cmc
sub
mov
jmp
bound
outsl
mov
and
cmp
xchg
xor
mov
inc
add
out
aad
fstps
add
cmp
mov
lods
fsub
fdivrs
pushl
sbb
rcll
add
xchg
and
adc
and
push
pop
fsubs
incl
add
shl
popf
sub
in
hlt
je
jno
lods
shrb
ljmp
mov
add
adc
mov
decl
sub
fnstcw
push
std
jp
push
sbb
push
fdiv
cmp
mov
into
out
inc
sub
push
ljmp
cmp
lcall
movsb
hlt
sbb
nop
push
loop
mov
sbb
jecxz
gs
xchg
push
call
or
jnp
decl
adc
xchg
xchg
push
andb
out
fnstsw
xor
xchg
call
xor
cmc
mov
ja
xlat
xchg
aaa
xchg
sub
sahf
outsl
dec
out
mov
dec
push
push
insl
fadds
and
xor
xchg
movsb
in
and
int3
rcr
mov
xchg
sbb
decl
adc
ja
hlt
dec
mov
movsl
dec
pop
loop
out
pop
insl
add
sub
inc
repnz
decl
repnz
stc
dec
out
rorl
sbb
movsl
or
stc
addb
sbb
cmp
pusha
shll
mov
push
rclb
mov
lret
xchg
shrb
cmpsb
fiaddl
mov
fwait
jg
mov
out
mov
fdiv
adc
xchg
xchg
call
cmp
dec
push
pop
jmp
mov
jmp
mov
es
shll
cwtl
ret
hlt
call
cmp
mov
push
leave
iret
pop
sub
out
insb
dec
or
cmc
outsb
sbbl
jl
daa
mov
idiv
dec
jmp
push
push
or
mov
mov
add
xor
movsb
lea
das
call
hlt
int3
insb
popf
sahf
stos
pushf
in
neg
inc
push
dec
push
sub
repz
add
lret
inc
and
adc
dec
mov
stc
sbb
ret
sbb
mov
int
decl
insl
repnz
lds
and
adc
lret
mov
incl
in
push
fwait
aas
dec
call
lahf
pop
lock
in
out
push
xor
xlat
ljmp
loop
add
lcall
shl
push
adc
dec
lds
or
cltd
add
iret
repnz
movsb
lods
test
mov
jb
dec
mov
dec
mov
sti
std
xor
add
out
sbb
sbb
lret
lcall
or
jo
outsl
add
xor
mov
jb
repz
imul
push
dec
cmc
rcrb
adc
adc
inc
movsl
jno
cmc
stos
add
adc
mov
sub
incl
cwtl
test
cltd
lret
jne
mov
and
push
or
push
out
mov
push
xchg
push
loop
cmp
cld
popa
int
loopne
out
pushf
adc
xor
push
xchg
add
mov
adc
mov
add
out
pushf
mov
and
repz
popf
mov
or
incl
dec
xor
mov
sahf
xor
xor
aas
adc
addl
incl
sub
stos
cmp
dec
mov
push
or
negl
sub
sub
incl
outsb
das
pop
jns
jg
movsl
add
jl
jge
mov
inc
inc
stos
push
mov
jecxz
adc
call
add
cmp
das
push
push
lds
sar
jmp
scas
cmp
mov
jo
iret
in
mov
negl
pushl
mov
or
jp
mov
sub
cmp
inc
repnz
in
sub
dec
test
push
inc
lahf
push
jae
jb
out
sub
xor
push
popa
add
out
mov
lret
push
jmp
outsb
jb
mov
leave
xor
add
ljmp
xchg
out
push
addl
fnstenv
fdivs
ljmp
adc
add
fdiv
sti
idivl
pusha
rorb
lcall
inc
cli
adc
inc
jg
fadds
sub
mov
ret
lock
jmp
ja
test
cmp
and
in
adc
mov
adc
in
mov
dec
xchg
ret
cli
lcall
and
shll
test
cmp
inc
push
push
mov
jmp
imul
js
and
lret
out
add
movsl
push
mov
cld
sbb
jl
cmpb
add
pop
xchg
mov
cmp
jo
mov
add
fwait
mov
mov
jnp
jmp
sbb
daa
dec
lahf
add
nop
xor
jmp
bound
jl
ret
aam
in
fisttpll
fsubrp
pop
cs
rclb
rolb
xor
sti
adc
lcall
addr16
add
sub
xor
dec
inc
ret
add
xor
sub
divb
rorb
jbe
push
pushl
cmp
enter
jp
cmp
out
xchg
adc
mov
sub
fisttps
lret
cmp
push
mov
push
cmp
xor
jle
lcall
xor
in
mov
dec
out
xor
lcall
push
aad
push
fdivrp
lcall
mov
test
nop
or
adc
test
jg
andb
cmp
insb
add
decl
cmp
fwait
sbb
inc
pop
ret
adc
les
dec
add
jbe
decl
or
into
inc
test
mov
repnz
leave
mov
push
jle
sub
inc
pop
pop
lock
decl
jle
ret
das
into
pop
sbb
push
es
mov
popf
adc
leave
jne
cld
ror
inc
mov
in
sub
mov
daa
shlb
mov
ss
outsb
decl
inc
clc
inc
out
pop
testl
push
sbb
lret
pop
sub
xchg
repz
std
aam
aam
lcall
cli
scas
arpl
mov
jle
jo
jl
xor
aaa
sti
jg
adc
xchg
test
push
push
lods
add
daa
push
dec
nop
call
adc
ret
js
dec
loop
mov
pop
outsl
js
jo
sub
ljmp
movsb
jns
pop
inc
sub
add
scas
cltd
fs
frstor
push
mov
incl
and
or
les
popa
arpl
movsb
iret
lahf
sub
fisttpl
sbb
sbb
in
push
jno
inc
mov
test
xor
mov
call
shll
xchg
pop
inc
cmp
dec
ss
dec
je
mov
push
mov
sub
push
cld
incl
ljmp
outsl
jo
loop
dec
mov
mov
pushf
call
popa
das
mov
enter
or
in
mov
adc
mov
jo
sbb
mov
inc
inc
dec
test
fs
ret
shlb
or
lds
lcall
mov
inc
popa
pop
sbb
inc
sbb
push
mov
or
lcall
int
decl
pop
sbb
fsubrl
inc
out
mov
je
mov
lods
lock
das
add
into
mov
leave
and
insb
jg
push
pop
xor
mov
xor
in
movsb
or
mov
sar
mov
test
bnd
rol
push
js
lret
lcall
adc
cmc
pop
out
mov
lret
enter
mov
mov
push
mov
ret
mov
jns
lcall
test
pushf
cmpb
ret
cmpsl
push
std
xchg
sbb
data16
push
inc
or
dec
jmp
inc
stc
xor
xor
and
repz
mov
mov
mov
pusha
dec
repz
dec
dec
jae
outsl
sub
out
clc
out
nop
adc
xorl
jecxz
mov
add
pushl
mov
int
cld
repz
in
lret
jmp
bound
fwait
xlat
div
and
mov
idivb
jp
xor
lock
cld
dec
rcrb
or
fildll
xor
cli
ljmp
int
xchg
sahf
stos
cmp
cld
push
out
out
push
jae
imul
clc
xchg
fimull
mov
pop
incl
in
pop
lea
movsb
insl
mov
pop
sti
add
out
xchg
adc
push
les
aad
lret
clc
cmp
xor
out
pop
dec
or
std
mov
stos
cli
aaa
std
fistpl
xor
or
dec
fsubrl
test
sub
daa
icebp
incl
testb
icebp
push
mov
pop
ficoms
xchg
jb
pusha
movsb
push
jmp
mov
insb
and
mov
and
jo
repnz
add
rcll
pushl
arpl
rcll
sub
ljmp
lret
jb
mov
fbstp
pop
inc
out
jb
sub
imulb
fadd
pop
decl
sbb
bound
inc
dec
test
cmpsl
or
shlb
mov
pusha
xor
sar
incl
int
pop
sbb
push
dec
dec
mov
xchg
arpl
test
xor
jle
mov
lcall
xlat
in
in
loopne
or
pusha
xorb
ss
xor
mov
mov
add
cmp
lcall
mov
outsl
xor
loop
ja
in
add
push
adc
xchg
jecxz
lcall
add
aad
mov
test
sbb
lcall
in
mov
dec
xor
popf
xor
ret
inc
mov
out
push
mov
cmp
decl
xor
out
xor
mov
rcll
sub
test
or
fildll
sbb
sub
jecxz
int
push
repz
fcomip
jmp
scas
or
movb
xchg
mov
mov
mov
pop
icebp
incl
sbb
mov
dec
mov
jae
cmp
adc
popf
leave
adc
pushl
inc
aad
jne
jo
fldenv
mov
fldt
outsb
push
sbb
mov
mov
incl
cld
movsl
leavew
imul
cwtl
hlt
jp
sbb
insb
pop
in
negb
lods
pop
xchg
std
pushl
dec
test
outsl
call
in
jne
daa
movsl
je
jmp
lcall
mov
arpl
and
mov
fnstcw
lcall
in
sbb
fimuls
jmp
adc
push
mov
fsubrs
test
jge
xorb
adc
out
xlat
mov
xor
push
xchg
mov
dec
or
cs
mov
addb
push
int3
jae
inc
out
pop
rorb
jge
test
pop
cmp
adc
pop
fdivrl
scas
xor
adc
fidivrl
mov
mov
addb
lret
jmp
xor
jp
jo
je
pop
pop
pusha
dec
dec
leave
push
lcall
inc
inc
add
sub
mov
rorb
or
jg
push
lret
mov
out
sbb
sub
scas
inc
jmp
jno
fisttpll
mov
test
add
incl
cmp
push
lods
xchg
fsubs
dec
jg
sbb
jle
cmp
dec
filds
add
push
fdivrl
fcos
cmp
dec
test
inc
mov
rorl
jecxz
mov
inc
stos
sub
mov
scas
lcall
cli
pushf
mov
and
rcrl
jg
push
repnz
pop
aaa
inc
add
push
repnz
popf
cld
lcall
orb
inc
lahf
dec
dec
add
sarb
mov
icebp
push
add
jmp
jb
mov
lds
xchg
dec
add
push
gs
jg
adc
mov
mov
cmp
dec
jae
mov
cmp
mov
xchg
nop
fdivr
orl
lahf
mov
jg
jle
cwtl
inc
in
push
inc
or
incl
in
xor
int3
jl
sub
jae
mov
mov
insb
xlat
xchg
aad
stc
out
in
lds
icebp
inc
mov
inc
or
push
aam
cltd
sbb
and
inc
lcall
and
scas
data16
jne
mov
popa
mov
inc
jae
adc
lcall
pusha
roll
enter
lock
mov
test
jmp
jge
sbb
std
decl
lock
xor
pop
mov
loope
mov
add
mov
fadds
outsl
mov
pop
push
fwait
cltd
pop
mov
mov
incl
imul
sbb
lods
jae
stos
rorl
nop
scas
jge
mov
and
sahf
push
mov
pop
in
push
push
dec
add
or
in
popf
or
js
jle
and
mov
test
mov
cmp
pusha
xchg
popf
jl
aaa
inc
sar
dec
or
push
push
xor
mov
icebp
call
xchg
outsl
adc
xor
xlat
jns
inc
stc
lcall
call
lds
push
pop
mov
fildll
push
test
inc
dec
mov
or
cli
lods
jg
movl
mov
xor
movsl
aad
loopne
or
lods
pop
loop
dec
outsl
es
aas
push
sbb
int
div
ljmp
jge
clc
cmc
lret
stc
pop
cmp
lods
jbe
popf
dec
rorl
lods
cli
or
push
pop
inc
pop
icebp
inc
xchg
ret
shlb
mov
incl
bound
daa
cmp
mov
dec
fists
dec
adc
loop
mov
mov
scas
lcall
or
and
popa
jno
int
repz
lock
in
mov
mov
imul
cmp
clc
cli
incl
jge
xor
or
imul
lcall
jae
and
andl
xchg
inc
lock
ljmp
mov
pop
sbb
sarb
packssdw
movsb
ret
cmp
fcos
call
enter
fs
xor
xchg
mov
hlt
mov
jno
scas
clc
jmp
sbb
pop
out
inc
jnp
and
and
mov
xor
stos
sbb
add
pop
sub
incl
xor
mov
jnp
int3
and
aam
mov
lock
ljmp
push
xchg
lock
sarl
std
lahf
jmp
cli
pop
lahf
out
incb
ljmp
and
loope,pn
jns
push
pop
jmp
adc
out
daa
cmp
adc
daa
xchg
add
cwtl
inc
lret
xlat
xor
mov
mov
mov
stc
inc
add
in
push
pop
icebp
jmp
pop
mov
mov
pop
mov
jns
subl
xor
loope
testb
jmp
fdivs
pop
dec
data16
ds
sub
ds
punpcklwd
js
mov
sub
lcall
add
pop
xchg
cli
jbe
fcompl
in
call
daa
jnp
lods
in
or
test
pop
pop
lods
dec
or
mov
adc
stos
stc
imul
ja
mov
or
lahf
jg
enter
mov
js
cmpsl
inc
inc
mov
push
mov
std
push
jp
mov
xor
mov
je
or
sub
jmp
cld
rcrb
mov
adc
sub
popf
lahf
jmp
xchg
outsb
arpl
xchg
es
leave
insl
add
jp
sub
and
das
cli
mov
mov
push
and
push
mov
pop
jb
pop
mov
in
or
pop
nop
pop
aam
mov
scas
nop
jne
movsl
mov
inc
push
rcll
cmp
test
decl
sahf
push
xchg
mov
xchg
popf
enter
addr16
mov
daa
cs
scas
dec
test
add
test
aaa
ret
data16
mov
lods
push
push
mov
sbb
pop
bound
std
cmpl
pushf
mov
dec
push
cmp
cmp
sbb
inc
out
xor
add
leave
jecxz
ret
cmp
cmp
pop
je
pushl
jg
xchg
mov
mov
loop
filds
gs
das
out
jae
aas
jo
mov
pop
dec
call
cld
push
inc
arpl
push
pop
mov
lcall
jle
mov
xchg
aam
jb
stc
lods
pop
cwtl
or
mov
aad
add
scas
cli
ljmp
pop
filds
rorl
pop
ret
lret
outsl
dec
aas
lods
lcall
pop
cmc
jmp
fisttpl
push
and
je
inc
pusha
inc
cmpb
xchg
call
jge
cmp
iret
mov
aam
fcmovbe
and
cmpsb
cwtl
pop
imul
icebp
jp
imul
aaa
scas
push
xorb
sarb
lret
push
mov
lcall
fisubrs
push
inc
xorl
add
cmpsl
aas
and
mov
insl
mov
lcall
pop
jmp
pop
jecxz
sbb
negb
push
addr16
imul
jbe
xchg
incl
pop
jo
cmp
push
movsb
aad
ja
mov
ret
call
std
mov
sbb
cmp
jbe
adc
mov
jg
pushl
pop
mov
sbb
cmpb
ja
lret
inc
sub
cmp
decl
popa
clc
sub
inc
or
loope
pusha
lds
push
ds
rcrb
xor
ljmp
dec
fiaddl
xor
cld
xor
cwtl
aad
inc
notb
cmp
or
pop
fdivrl
aam
les
mov
cmc
adc
inc
loopne,pn
call
jmp
inc
jmp
inc
lds
xor
lock
push
shlb
std
jg
mov
in
flds
cmpsl
cmp
xchg
jns
decl
dec
in
cmp
cld
dec
in
pop
jge
push
sar
ljmp
test
sarb
xchg
les
jecxz
repnz
ss
jg
jg
das
iret
pop
and
adc
movsl
cmp
or
icebp
out
mov
cltd
aad
std
out
jne
adc
loop
stos
mov
pop
add
mov
shlb
mov
insl
mov
inc
mov
push
imul
pushl
pushf
movsb
test
inc
les
lods
mov
or
sbb
out
and
jmp
push
adc
cli
popa
pop
cmpsl
out
push
dec
jle
hlt
daa
cmp
dec
loope
loopne
in
adc
push
mov
decl
daa
mov
xor
mov
icebp
addl
add
xchg
dec
lods
lock
add
gs
ljmp
sub
out
sub
aad
es
push
mov
push
jne
decl
mov
add
mov
mov
push
clc
add
jp
jno
loope
pop
in
cmp
mov
dec
dec
xchg
push
gs
mov
cmp
sbb
decl
or
push
xchg
inc
rolb
jae
dec
push
pushf
loop
daa
pop
pop
jge
imul
jmp
push
jo
das
cmp
ret
mov
push
mov
push
fcoml
incl
and
xor
lcall
lret
xchg
iret
pop
mov
pushl
aaa
and
pop
xchg
rclb
adc
out
mov
popa
sbb
mov
cld
mov
pop
ljmp
ljmp
lcall
jne
or
mov
call
jnp
sti
or
repnz
or
ret
adc
xchg
adc
mov
out
sar
jmp
pop
outsb
addl
std
sbb
sbb
fbld
in
mov
ljmp
out
ror
cld
decl
inc
mov
sbb
jbe
dec
mov
mov
xlat
lret
fisttpll
cltd
xchg
xchg
sub
pushl
shll
sti
popf
lods
xchg
mov
popl
xchg
jo
push
add
dec
jbe
mov
enter
pop
and
push
icebp
pop
std
iret
add
add
scas
mov
xor
sub
cmp
xchg
not
xchg
and
test
jp
jecxz
decl
inc
lcall
loop
pop
inc
and
add
lcall
mov
fldt
mov
xor
mov
xchg
push
adc
fcompl
cli
jnp
addr16
mov
ficompl
cmp
inc
push
nop
sahf
jno
insl
adc
decl
bound
mov
sbb
and
mov
pop
jbe,pt
xchg
mov
and
int3
int
or
ret
std
ljmp
push
fwait
sbb
stos
mov
mov
sar
js
pushl
sbb
sbb
fs
mov
loop
xor
xchg
pop
sahf
and
lods
mov
sbbb
dec
push
aas
xchg
inc
inc
xorb
mov
dec
leave
adc
mov
incl
cmpb
mov
sbb
sti
mov
cmp
cmc
enter
dec
mov
fmuls
inc
mov
jg
loopne
aad
sbb
mov
sbb
jno
jbe
pop
jl
cmp
call
popf
aad
sub
loopne
push
imul
fnstenv
jge
mov
fucom
mov
mov
pop
lcall
push
addr16
sub
sub
lcall
pop
push
scas
pop
cltd
nop
xor
call
jmp
mov
cli
push
fucom
sub
lahf
or
pop
push
mov
shlb
mov
mov
loop
imul
ds
lcall
add
fs
sbb
xchg
lss
push
push
xchg
inc
jns
popa
sub
stos
sbb
arpl
or
call
cmp
cmp
pop
and
lock
and
mov
jle
lods
pop
aaa
xchg
loopne
mov
adc
popf
cmp
je
lods
jmp
call
xor
sbb
pop
push
neg
xchg
or
adc
adc
jmp
cwtl
adcl
sti
ljmp
and
pop
adc
mov
pop
adc
incl
xor
or
lds
arpl
lds
test
lcall
pop
cmp
mov
and
xchg
fbld
or
xchg
mov
pushl
xchg
icebp
or
data16
pop
add
adc
fwait
pop
mov
iret
sbb
jmp
cmp
dec
mov
pop
push
xor
and
mov
push
mov
xchg
mov
adc
js
fs
movsl
xlat
fmuls
testb
in
bound
inc
add
dec
lcall
adc
int
data16
sbb
leave
call
jb
xor
jo
adc
cmpsl
jle
mov
lahf
arpl
pop
lods
test
jns
push
cld
decl
lods
adc
icebp
add
adc
rclb
sbb
cmp
push
inc
bound
cmpsl
mov
mov
je
mov
cltd
push
in
push
push
pop
xchg
xchg
nop
stos
smsw
mov
cwtl
sub
popf
add
push
in
adc
sbb
adc
ljmp
and
mov
repz
and
sbb
fwait
jmp
decl
mov
lcall
aad
push
add
xchg
jl
cltd
xchg
les
fisttpl
add
ljmp
pushl
cmc
cmp
loopne
xchg
push
cli
fucomp
test
stos
xchg
repz
xchg
test
fcomip
cmc
push
cmp
hlt
cli
mov
int3
xchg
out
movsl
sbb
pop
movsl
cmp
inc
push
mov
cmp
pushf
jecxz
ljmp
not
in
dec
arpl
pop
pop
inc
pop
xlat
mov
jge
or
roll
cld
ljmp
les
popf
inc
mov
sub
inc
pop
out
jg
mov
shll
and
add
in
cmp
sbb
and
call
mov
outsb
jmp
pop
ja
sbb
test
lret
inc
or
jmp
jmp
repnz
icebp
sub
test
push
xor
push
hlt
sub
dec
cli
mov
fs
aas
outsl
cli
lcall
xchg
jge
xchg
adc
leave
mov
cmp
pop
xor
aas
cmp
cmp
push
sti
jg
sbb
or
or
idiv
xor
push
pushl
jge
push
rcr
in
adc
pusha
add
loop
lcall
pushl
and
jle
inc
js
stos
or
sarl
jle
icebp
int
sti
push
xchg
aaa
repz
push
cmp
ds
cmp
std
sub
pushf
sub
mov
jne
xchg
xchg
add
lcall
pop
dec
inc
mov
jg
pop
dec
das
test
push
adc
decl
lock
lret
or
mov
mov
xlat
cltd
or
iret
mov
shll
or
lock
cs
ss
call
popf
jmp
faddl
call
xor
lods
data16
and
xchg
ljmp
rcrb
fbstp
xchg
test
pop
inc
mov
xlat
aas
fdivrl
fmuls
pop
or
imul
push
decl
adc
js
cmp
xchg
aaa
icebp
jecxz
mov
lahf
gs
call
add
and
dec
cmpsl
aaa
pusha
shlb
icebp
sbb
js
jmp
jecxz
sub
test
jecxz
and
or
adc
in
sbb
ds
decl
cmp
sahf
xchg
ds
ja
xchg
mov
sbbb
sub
push
or
decl
ljmp
ljmp
jmp
stos
ret
inc
jbe
mov
test
xchg
das
scas
xchg
les
sub
call
jmp
cmp
jmp
ficoms
push
jmp
out
adc
gs
decl
sbb
pop
call
fsubrl
push
dec
mov
pop
cmp
pop
cmp
js
mov
inc
mov
in
out
xchg
push
mov
cmp
ljmp
daa
cli
imul
xor
jp
mov
ja
pushl
dec
mov
fstpt
add
mov
in
stos
inc
ffree
jb
out
pop
test
xor
dec
jg
aas
stos
xor
add
add
mov
out
je
fcomip
clc
push
rcrl
mov
inc
rcll
jno
xor
roll
lea
inc
jmp
xor
jne
jmp
push
movsl
mov
pushf
xor
fdivs
push
mov
fdivl
mov
xlat
sbb
sbb
and
pop
aaa
mov
lcall
ret
fnstenv
and
pop
iret
jne
adc
mov
aaa
cmp
adc
pushl
scas
loop
sub
loopne
xor
or
int
sub
shrl
push
incl
jb
push
pop
sahf
cmp
ds
jmp
dec
decl
es
sar
mov
xchg
xor
fildll
ds
xchg
adc
jo
test
jbe
icebp
jmp
sbb
and
sub
inc
in
cmp
or
outsl
test
in
out
iret
fcmovnbe
pop
sub
jp
xchg
jae
js
cmp
cmpsb
scas
jbe
icebp
int3
cmp
or
incl
or
repz
ret
cmpsl
xchg
ds
xchg
stos
sbb
das
sub
mov
jmp
testl
imul
fwait
mov
mov
inc
cli
jno
cmpsw
dec
cmp
test
adc
xchg
push
jmp
es
mov
and
jge
cld
push
sub
test
imul
and
mov
insl
ds
push
scas
lcall
int
or
fmuls
xor
pushf
mov
xlat
ret
ljmp
add
and
out
shl
cmpl
es
jmp
fs
out
mov
mov
jae
mov
adc
addr16
jg
shr
mov
cmpsl
in
dec
push
stos
push
mov
cld
fbstp
lds
aad
lcall
adc
inc
aaa
stos
sub
pop
push
push
push
push
test
out
xor
xor
sub
inc
xlat
jmp
mov
xchg
and
or
in
aaa
iret
arpl
add
mov
mov
test
ljmp
inc
dec
lcall
pop
in
push
jb
xlat
in
mov
test
mov
pop
adc
mov
data16
add
lods
test
cmp
lods
popa
clc
cmp
frstor
dec
cli
dec
cmp
adc
pop
movsb
popf
cmc
sar
jmp
mov
adc
cmpsb
push
adc
out
mov
js
stos
lahf
sbb
pushl
aas
mov
fdivrs
push
inc
sarl
cmp
iret
xchg
xor
outsl
push
sub
out
pushl
loop
adc
addps
jns
mov
xchg
scas
mov
xchg
lods
shll
clc
lods
sub
add
xchg
or
rorb
mov
xor
sub
lods
testl
lcall
or
mov
sbb
movsb
xchg
repnz
les
repnz
std
incl
mov
call
sbb
in
jge
push
xor
xchg
jno
and
ljmp
add
bound
or
or
jmp
data16
ret
ds
call
lret
andl
push
std
fwait
inc
rcll
loope
pop
sti
mov
mov
int
test
sub
repnz
jmp
lea
pop
jge
and
pop
ja
jbe
outsb
outsl
jne
das
push
dec
inc
leave
push
or
sbb
xor
stos
sub
add
decl
movsl
out
push
mov
add
jl
ljmp
cmpsb
test
mov
cs
add
pop
dec
jmp
repz
std
adc
push
xor
iret
jle
sbbl
inc
imul
les
or
adc
incl
fsubs
cli
push
ret
push
sub
js
add
stc
rorl
add
add
pop
add
dec
pop
and
out
sbbb
out
ss
ljmp
jle
xor
mov
cli
lcall
fcomp
add
into
fwait
sub
pusha
clc
push
xor
add
inc
pop
insl
cmc
mov
dec
outsl
mov
mov
leave
cltd
es
and
icebp
cwtl
stos
pop
stos
add
std
lcall
sbb
push
sbbb
dec
mov
mov
add
fcmove
push
sub
mov
rorb
cli
int
jmp
jne
push
dec
hlt
mov
fnstenv
pop
cld
pop
pop
jno
adc
xchg
pop
xor
mov
sub
je
ss
cld
add
sub
mov
fwait
nop
mov
or
shll
jb
dec
js
ret
mov
mov
dec
dec
sarl
cwtl
je
jle
push
insl
mov
mov
xchg
leave
leave
add
ret
je
push
jae
add
cmp
stc
icebp
test
xchg
fs
dec
dec
jl
dec
and
mov
mov
inc
or
notb
jmp
std
lods
in
mov
mov
hlt
jecxz
cmp
push
sahf
lea
mov
call
mov
dec
rolb
fisttpl
movsb
movsl
shl
xchg
or
inc
dec
jne
add
push
out
out
pushf
aam
jp
in
int3
insb
cltd
cwtl
pop
mov
jmp
incl
es
add
movb
inc
dec
cld
ljmp
mov
lea
iret
and
sub
filds
dec
insl
fnstenv
mov
mov
xchg
mov
cld
sbb
fisttps
push
xchg
mov
dec
fisubrl
je
adc
lcall
pop
inc
clc
cmpsb
sbb
push
ds
loop
imul
imulb
add
lcall
in
adc
icebp
leave
cmp
popa
xchg
call
jbe
shrb
sbb
pop
inc
cmp
push
jb
mov
xor
subb
jmp
sarl
test
cmp
push
jg
jmp
mov
sub
inc
lret
data16
mov
sar
mov
lock
call
adc
std
inc
popa
out
sti
mov
mov
enter
adc
ljmp
xor
ljmp
xchg
cmp
jbe
add
test
jge
lods
xor
andl
pop
rcl
mov
or
ret
sub
or
pop
cmp
jns
jmp
das
mov
pop
xchg
lock
ds
in
lds
xchg
hlt
cmpsb
mov
xchg
fistpll
jmp
dec
inc
stos
movsb
jecxz
xchg
aaa
adc
fcom
xchg
mov
aad
mov
and
jmp
push
loop
or
xchg
cmc
cld
sub
sub
cltd
or
es
incl
add
push
sbb
cmp
loop
lret
ds
pushl
push
add
mov
inc
jl
jg
bswap
dec
fs
popf
in
aaa
adc
int
push
fcomip
jge
sahf
stc
jb
and
pop
dec
je
jmp
mov
mov
lcall
push
xor
xchg
and
clc
lock
xchg
test
or
int
xchg
xor
ljmp
jmp
add
adc
stos
and
or
fs
adc
outsb
jmp
xchg
or
sub
xchg
jl
xchg
fwait
pop
cltd
pop
xchg
sub
xor
mov
add
pop
test
movl
mov
pop
inc
pop
dec
xchg
inc
ret
lcall
fdivrs
ja
inc
add
pusha
mov
push
std
jg
add
xor
pop
pusha
lods
dec
cs
test
jmp
jno
sub
pushl
sub
sub
repz
add
xchg
fs
mov
ret
sub
push
push
xchg
mov
scas
shrb
jmp
jp
xor
test
loopne
add
ljmp
incl
iret
fcomps
notb
rcrb
loop
mov
andl
xor
xchg
ljmp
imul
jne
mov
test
mov
data16
mov
push
sub
stos
jmp
imul
nop
loopne
call
mov
adc
stos
add
and
ljmp
imul
push
fldt
mov
cmp
bound
pop
cmpsl
fmull
rcr
je
lock
push
ret
and
and
xlat
push
xor
js
push
jle
jmp
xchg
sbb
adc
jp
sahf
scas
lret
mov
lret
add
inc
fisubrl
cwtl
out
or
fildll
aas
dec
cmp
dec
lods
cmpsb
pop
cli
pop
ficoml
adc
jmp
roll
pop
lahf
cmp
cmp
les
cmp
xlat
jp,pt
mov
mov
pop
lods
sub
lock
push
fiaddl
in
gs
icebp
sub
jle
sbb
sbb
out
or
mov
push
push
sahf
add
loope
sbb
or
insb
repz
std
fmuls
cmp
push
lcall
hlt
call
push
jb
test
add
lds
add
in
ljmp
or
or
stc
sub
sub
scas
sbb
pushl
mov
stos
pusha
cmp
push
push
xor
fldpi
pop
pop
adc
stos
push
mov
das
sar
and
std
les
sbbl
mov
in
jmp
add
test
out
xor
add
dec
dec
xchg
fcmove
aad
imul
mov
mov
es
pop
sbb
and
outsb
movsl
pop
sub
ja
and
adc
mov
and
sub
push
lret
sub
or
lods
xor
add
call
add
mov
sub
ljmp
hlt
pop
cmp
dec
mov
mov
add
and
insb
ja
clc
ja
push
stos
lods
sti
dec
stc
or
enter
call
iret
movsl
mov
cmovnp
pop
mov
aaa
or
cli
xchg
mov
jnp
push
inc
mov
sub
bound
pop
lcall
add
in
test
jl
cmc
loop
call
push
push
adc
sarb
call
mov
xor
xor
mov
pop
aam
jb
push
cmp
fsubrs
push
sahf
cmp
lea
in
xlat
js
popf
hlt
decl
dec
adc
jb
pop
js
xor
and
adc
call
or
bound
adc
movsl
xor
or
out
mov
stos
pusha
push
push
sbb
dec
mov
pushf
jns
cmp
cwtl
xchg
sub
icebp
arpl
push
cwtl
jmp
clc
mov
icebp
shrb
fstl
mov
sbb
pop
repnz
fistpl
cmp
jo
enter
rorb
lcall
push
bound
es
lret
or
mov
mov
and
insb
inc
xchg
outsb
inc
cld
outsl
clc
std
add
mov
scas
pop
sbb
cmp
ljmp
mov
jb
inc
dec
lock
mov
and
and
xchg
hlt
xchg
add
push
jmp
fstpl
inc
mov
xchg
inc
adc
inc
loopne
testb
mov
ljmp
incl
leave
jo
iret
iret
adc
sbb
inc
sbb
in
stc
test
cmp
pop
push
jmp
movsb
loop
xor
ja
push
xor
dec
cwtl
adc
insb
pushf
fcompl
jmp
adc
mov
cmp
jmp
mov
leave
push
or
pop
loope
mov
jg
mov
dec
cmp
mov
sub
aad
into
cld
jg
xor
icebp
pop
int
call
out
xchg
dec
sbb
cmp
inc
loope
pushl
dec
test
cmp
xchg
insl
sub
incl
shll
mov
xlat
and
idiv
stos
push
sub
push
mov
pop
sub
gs
test
decl
cld
cs
mov
mov
pusha
outsl
arpl
sbb
ljmp
pop
sub
scas
inc
ds
cmp
mov
jae
sub
adc
ljmp
pop
or
push
in
das
and
xor
adc
int3
repz
pushf
pop
imul
loop
mov
adc
gs
into
pushf
ficompl
scas
out
jmp
imul
ficoms
mov
push
push
ret
mov
lea
xor
test
sbb
mov
loope
push
div
jg
inc
jmp
test
in
jae
pop
imul
mov
rol
outsb
sub
push
sbb
stc
mov
outsb
xchg
rorb
in
or
out
ret
aaa
push
fwait
enter
shll
push
mov
loopne
push
enter
mov
sar
incl
mov
sub
xor
fnsave
mov
or
mov
jne
push
dec
js
incl
jmp
push
xor
lret
sbb
jne
push
sbb
sub
mov
mov
int3
cmp
imull
push
xor
inc
sahf
and
sub
pop
lock
mov
sbb
dec
push
mov
sub
push
cld
call
jb
or
mov
xchg
mov
xchg
or
idivl
loop
ljmp
cli
cltd
and
pop
xchg
xchg
mov
icebp
out
lods
sti
int3
stos
lods
inc
nop
lcall
push
sahf
xor
leave
fwait
les
mov
jl,pt
adc
test
xor
add
add
jae
ljmp
outsl
cwtl
int3
mov
push
mov
out
ss
inc
pop
lcall
iret
daa
ljmp
push
or
cmp
jno
lcall
ljmp
addr16
arpl
xchg
outsb
dec
mov
push
jmp
xchg
lea
loope
mov
cmc
call
sub
mov
cmpsl
dec
jns
inc
and
roll
pushl
push
scas
out
mov
dec
stos
mov
cwtl
sub
dec
adc
aaa
das
repz
jmp
sbb
int
cmp
push
test
jne
repnz
rcll
sbb
imul
adc
xchg
jne
repz
rcl
cmpsl
ljmp
cli
iret
and
std
clc
push
mov
inc
leave
mov
lcall
call
xor
xchg
repz
jns
dec
sub
cmp
test
inc
jnp,pt
loop
jmp
stos
sub
jno
in
cld
mov
or
arpl
mov
pop
mov
cs
pop
inc
ret
dec
jno
sbb
xchg
xor
or
mov
jg
pushl
gs
and
add
push
push
inc
xchg
inc
pop
mov
mov
jmp
adc
cmpb
ljmp
xchg
fsubs
sti
xchg
out
mov
and
dec
mov
dec
repz
mov
in
arpl
xchg
sbb
decl
push
mov
in
rcrl
aad
loope
popf
scas
and
mov
jmp
leave
sub
jns
popa
pop
add
loope
or
dec
dec
leave
das
ja
pminub
je
or
ja
call
push
cmp
stc
inc
adcb
mov
insb
cmc
data16
femms
add
mov
jno
iret
jbe
imul
sbb
test
cmp
iret
scas
or
xchg
les
pushl
adcb
fwait
mov
ss
push
dec
lret
cmp
test
js
jne
in
ret
mov
xor
mov
aad
add
add
sti
loop
cld
jle
mov
scas
lcall
movsl
sub
pop
vmptrst
ja
mov
stos
ljmp
decl
sbb
shll
pop
inc
popa
sub
mov
push
out
test
sbb
bnd
repz
loopne
adc
repz
lcall
out
loop
mov
shl
cmp
fsts
adc
pushf
ljmp
fcomip
mov
out
cmpsl
shll
push
inc
fimull
add
pusha
data16
adc
in
cmp
sbb
mov
mov
sarb
xor
xchg
mov
inc
hlt
or
decl
and
insl
arpl
pop
test
add
ret
mov
xorb
jg
ret
push
cmpsl
dec
push
fldl
movsl
gs
mov
ror
and
sbb
repnz
inc
test
adc
cmp
mov
movl
pop
dec
add
ret
jle
or
lret
push
ret
inc
sbb
jecxz
out
inc
jge
mov
pushl
adc
add
leave
cmp
in
in
add
fadds
and
cltd
aam
xchg
inc
xor
sbb
incl
add
jmp
mov
popf
lahf
fstpl
mov
or
les
xor
mov
dec
lea
jp
sahf
fcomps
push
jmp
call
adcb
adc
mov
scas
loope
inc
push
adc
lcall
jmp
lea
gs
stos
nop
ljmp
xchg
sbb
filds
in
add
push
subl
mov
push
pop
dec
shlb
and
fxch
out
sbb
or
aas
fcomip
xchg
push
outsb
adc
fimull
cwtl
pop
dec
sub
lcall
dec
lret
repz
adc
aam
cmpsb
or
incl
lds
sahf
adc
addl
push
das
mov
clc
inc
sbb
mov
test
mov
mov
ds
pop
stos
mov
ljmp
pop
lds
mov
inc
data16
test
test
mov
pushl
or
aaa
insb
pop
or
test
cmpsl
fisubrs
out
ret
or
inc
or
in
ret
push
cmc
add
inc
jbe
mov
sbb
adc
fiadds
xchg
decw
push
dec
add
inc
ret
sub
adcb
push
push
out
jecxz
pushl
mov
jns
std
mov
bound
incl
insl
test
or
mov
idivl
sbb
add
xchg
repz
out
dec
mov
ljmp
lahf
and
movb
mov
outsl
mov
and
or
decl
aad
or
mov
adc
roll
loop
push
pop
popa
jp
int3
mov
jns
cltd
jle
decl
inc
je
std
xchg
imul
jecxz
mov
imul
pop
dec
or
mov
or
or
mov
in
andb
add
fdivl
or
aaa
push
in
out
add
lret
inc
mov
mov
js
sub
lcall
jle
loopne
addl
lock
ss
add
aam
jp
sbb
and
pushl
mov
orb
rcll
inc
fdivrl
sub
mov
mov
adc
cmp
clc
jge
fadds
adc
rorb
lods
jle
fwait
rclb
lods
or
es
loop
cmp
xorps
cli
rolb
test
stos
aad
and
adc
inc
jg
xchg
dec
mov
jne
xchg
rcrl
test
cmp
loopne
xchg
insb
cmp
repnz
pushl
lret
cmp
sub
dec
xor
jmp
mov
icebp
mov
and
or
inc
dec
das
movsb
enter
ljmp
ss
mov
ds
std
cmp
repz
es
fisttps
cmc
pop
mov
mov
and
adc
outsb
jg
jne
and
dec
mov
call
loopne
sbb
jg
inc
call
ficomps
icebp
popa
aad
adc
int
popaw
fcmovu
ja
sub
add
push
sub
sub
loop
mov
jmp
lea
adc
in
std
loop
inc
adc
mov
incl
xchg
push
rcl
jnp
jle
jmp
dec
mov
stos
xchg
mov
orb
jmp
jmp
jl
stos
mov
mov
mov
adc
enter
lock
mov
jle
cmp
addr16
push
cwtl
or
xor
in
ret
arpl
push
pop
test
jp
pop
sub
pushl
mov
or
xchg
jne
mov
stc
out
imul
pop
stos
fcoml
lcall
inc
cmpsl
jle
mov
icebp
stc
pop
mov
add
ret
fdivrs
mov
push
push
mov
dec
xor
sbb
sub
test
stos
add
fidivs
jns
cmp
mov
push
lcall
jmp
or
rcr
jmp
ret
mov
int
in
mov
shr
push
or
dec
lcall
push
addr16
push
inc
shrb
xor
pop
stos
sub
scas
pushl
jmp
xor
xchg
imul
out
mov
flds
cmc
ja
cmpsb
mov
add
lods
out
clc
decl
cmp
sub
and
push
cmp
insb
mov
inc
push
stos
bound
dec
out
jnp
adc
add
ds
ljmp
call
mov
das
ljmp
mov
ficompl
stos
jp
dec
ljmp
icebp
sub
jae
push
mov
xor
ud0
sbb
rolb
ss
leave
lock
cld
and
dec
or
and
decl
insb
movsl
hlt
ja
mov
cmp
int
xor
push
fsts
scas
jne
lock
pop
sub
xchg
pop
insl
cmpl
cmp
jge
fbstp
mov
or
mov
lods
xchg
lods
aaa
ret
enter
bound
pushl
cmp
mov
add
inc
into
fsub
adc
adc
cmpsl
and
cli
adc
xchg
mov
lock
sbb
out
jg
xchg
xchg
pop
icebp
jno
add
add
dec
xor
sub
decl
fs
out
or
jno
adc
test
push
fnstenv
dec
dec
decl
mov
js
test
cltd
cs
into
jecxz
ficompl
lea
ss
sbb
lcall
outsl
xchg
hlt
and
and
inc
inc
dec
xchg
pmulhuw
mov
xchg
xor
sub
stos
or
icebp
out
mov
jbe
jg
jg
lods
into
out
xchg
mov
stos
or
out
lret
dec
stos
mov
sub
mov
ret
scas
int3
pop
sub
lods
xchg
pushl
roll
xor
test
push
xchg
jmp
cmp
shr
out
sbb
loopne
rcrl
xor
aaa
xchg
lock
hlt
inc
jne
insl
popa
dec
fcoml
sti
mov
adc
mov
cmpsb
sbb
cmp
imul
outsl
std
sbb
das
popf
ljmp
and
add
pushf
cs
ret
call
incl
les
and
pop
jmp
bound
mov
mov
call
subb
lret
xor
sti
cmpsb
and
cs
add
aad
inc
mov
outsb
jmp
xchg
dec
lahf
jmp
jg
inc
push
pop
shrb
and
idivb
ret
cld
mov
mov
addb
bound
push
mov
push
or
mov
xchg
and
int
roll
mov
rclb
sbb
bound
mov
pop
and
std
push
cmc
dec
data16
or
add
jecxz
mov
mov
aam
add
arpl
sub
dec
jno
aad
and
incl
or
cs
inc
xchg
jmp
and
cmp
insb
out
cmp
std
loope
jmp
cmp
loop
insl
in
rcrl
aaa
cmp
fcoml
lea
incl
int
cmc
adc
cmp
outsl
or
lahf
jecxz
sbb
sbb
or
decl
lds
inc
out
inc
aaa
ljmp
adc
rorl
clc
ret
lret
add
rorl
shll
dec
jl
lods
push
or
ficompl
sbb
mov
dec
jmp
imull
jo
jbe
inc
in
mov
call
sub
dec
test
push
mov
push
cltd
fcom
inc
jecxz
fnstenv
je
ja
call
jmp
adc
clc
test
arpl
test
stos
pop
loope
decl
bound
leave
adc
insb
mov
sub
pop
xchg
test
insl
popf
or
xlat
push
mov
push
cmp
sbb
daa
mov
mov
xchg
mov
sub
xchg
rol
push
jp
incl
dec
test
xchg
xchg
push
cmp
fucomp
outsb
in
sub
jle
jmp
les
dec
add
mov
ja
dec
xchg
mov
mov
pushl
xor
lcall
mov
sbbl
cmpsb
addb
jmp
rcrb
xor
fldenv
xor
daa
or
inc
push
lods
push
cld
repnz
cs
cli
lret
push
decl
adc
push
sbb
lahf
mov
jle
cmp
adcb
jg
dec
shl
addr16
jge,pn
mov
jmp
test
xor
push
scas
jmp
push
in
mov
rolb
into
sbb
xorl
in
mov
inc
xor
scas
je
cmpsl
ror
dec
je
aaa
inc
jge
jg
jg
mov
dec
pop
test
in
and
pop
push
stos
inc
test
jle
mov
pop
pop
mov
jp
iret
or
lret
adcb
ljmp
and
jle
addl
push
mov
mov
adc
lcall
test
jbe
popa
scas
sar
pop
jnp
inc
pop
hlt
loop
or
hlt
sub
sbb
xor
popa
mov
inc
fimull
aad
rcrb
jo
nop
pop
xchg
cmp
push
sti
add
cs
daa
cmp
les
inc
push
pop
js
dec
cmp
mov
ljmp
mov
mov
leave
shrb
and
shll
stc
neg
push
add
shlb
xor
dec
inc
mov
inc
mov
incl
mov
inc
clc
xor
mov
aas
cmp
cmpsl
je
pushl
xlat
dec
fimuls
in
lret
fisubl
outsl
mov
xchg
paddb
ljmp
in
out
fs
call
std
jnp
mov
jno
mov
push
pop
mov
sar
decl
or
and
cmc
sub
mov
cmp
or
clc
dec
mov
ljmp
sbb
push
lcall
mov
mov
sbb
arpl
js
jg
out
lret
mov
jmp
sub
das
cli
out
shlb
push
xor
mov
cmp
mov
mov
add
in
ror
jne
push
enter
mov
sub
icebp
fdivr
fists
std
mov
pusha
sbb
or
pop
add
jmp
out
fldl
xorl
mov
rcr
lcall
pop
nop
aad
fadds
jge
mov
shl
das
mov
jo
inc
aas
jle
cwtl
decl
test
sti
inc
xor
cmc
test
mov
or
or
cli
lcall
push
sahf
loop
icebp
dec
xchg
xor
adc
sarb
daa
mov
cld
call
fdivrs
std
lods
sub
pop
out
imul
andl
jmp
ljmp
pop
mov
lock
mov
jecxz
push
jge
pop
outsb
outsb
out
fs
pop
int3
mov
imul
es
mov
xor
aas
push
and
hlt
ljmp
stos
int
scas
mov
mov
cmp
mov
jbe
std
jg
pushl
add
sbbb
leave
dec
mov
mov
addr16
outsl
pushl
clc
xchg
inc
pusha
cmpsb
add
insl
fdivs
lods
adc
in
sbbb
call
cmpsl
mov
in
pop
aaa
mov
aas
les
decl
sub
cmp
lock
jbe
push
mov
dec
rorl
call
add
mov
imulb
out
stos
xchg
jb
adc
push
or
lret
and
and
mov
inc
push
ljmp
ret
faddl
ja
loopne
adc
sub
mov
mov
popa
inc
fistps
cmovns
add
mov
cmp
jo
push
add
sub
push
stc
cmp
mov
fidivrs
das
mov
dec
push
xchg
loopne
xchg
inc
cwtl
arpl
scas
neg
mov
in
insl
or
call
push
jbe
sbb
das
repz
imulb
cmp
leave
and
ja
adc
arpl
inc
es
cmp
enter
cmc
pop
dec
cmp
pop
iret
adcb
xchg
imul
jno
int3
and
add
lahf
je
loope
sbbb
in
adc
cmp
movsb
xchg
in
sub
push
mov
jge
dec
icebp
cmp
pop
pusha
pop
rcr
sub
jmp
sbb
rorl
adc
xchg
inc
adc
call
sbbl
pushf
sbb
loop
push
push
jg
mov
lret
cmpsl
xchg
add
xlat
icebp
sub
scas
das
rcr
ret
call
push
or
xchg
mov
fcoms
jne
xorl
incl
push
xchg
fbstp
int3
aam
mov
test
jg
mov
ss
lock
inc
push
test
ljmp
mov
pushf
pop
sub
outsb
data16
push
mov
push
loop
rcr
mov
into
jns
mov
insb
test
call
fs
jnp
mov
add
call
fnstsw
inc
jmp
mov
sub
push
adc
push
push
stos
sti
sub
sbb
add
add
into
inc
push
jmp
cmp
out
ljmp
or
pop
and
pop
bswap
inc
data16
imul
incl
test
pop
lcall
sub
int3
jp
inc
xor
das
scas
in
scas
popf
scas
movsb
pop
mov
cs
ss
sub
enter
pop
xor
cld
sub
dec
ljmp
jmp
dec
cmp
jne
shll
mov
dec
fbstp
clc
jp
loop
adc
pop
mov
cld
mov
js
inc
xchg
pop
out
out
jge
xorl
mov
in
inc
fisttpll
out
out
out
es
mov
in
test
sub
pop
setbe
lods
or
cli
inc
xchg
jnp
push
std
mov
rcrb
test
call
fst
mov
mov
cmp
bound
and
lret
xchg
sub
incl
cld
shlb
dec
fdivrs
push
adcl
ja
ret
jmp
jge
mov
add
mov
xor
sub
dec
pushf
lahf
sub
pushl
push
mov
jg
adc
xor
pop
imul
cmp
ds
or
cmp
pushl
cmp
negb
add
jl
push
negl
outsl
xchg
dec
inc
gs
out
call
inc
mov
mov
jbe
dec
sub
dec
pushf
fnstcw
pop
sub
lock
or
scas
sub
outsb
ffree
sbb
outsb
hlt
and
decl
fdivrp
addr16
ja
int3
stos
mov
cmp
inc
inc
push
shrl
ret
mov
out
sbb
mov
xlat
jmp
lods
pusha
mov
xorl
incl
imul
cwtl
push
daa
xchg
and
lock
rcll
mov
rcrl
inc
movsl
mov
es
loope
pop
dec
sub
jmp
out
popf
or
jmp
mov
rcrb
mov
or
mov
sbb
lcall
fsubr
es
movsl
in
fwait
pop
jge
cld
imul
mov
add
es
aam
ljmp
xor
enter
or
leave
fimuls
mov
decb
cli
mov
adc
in
mov
adcb
pop
testl
adc
add
jmp
mov
inc
pop
ja
scas
loop
shr
or
addr16
pop
pop
inc
cltd
jg
call
jmp
aam
jmp
fiaddl
gs
sbb
fiadds
inc
in
movsb
sbb
push
stos
nop
push
or
mov
arpl
jns
or
dec
roll
fcomip
jl
lods
or
mov
rcr
push
icebp
in
inc
int
ljmp
pushl
cltd
dec
jmp
fcmovne
sub
or
sub
pop
imul
imul
push
jecxz
add
push
fcomip
idiv
push
lcall
loop
push
mov
pop
or
cmp
ljmp
mov
dec
and
rol
push
jb
pop
cmp
sbbl
xchg
and
mov
xor
jmp
xlat
loopne
jnp
lahf
movsb
push
pusha
mov
cmp
ljmp
rolb
fcoml
mov
xor
jbe
jo
fimull
ljmp
dec
sub
push
add
mov
add
sar
jg
push
loope
in
std
push
cmp
cs
sub
xchg
into
xchg
push
dec
ljmp
jmp
loope
push
aas
pop
ret
pop
mov
ja
push
or
jg
push
subb
das
in
stos
and
insb
xchg
sbb
lods
mov
call
inc
popf
adc
fldcw
mov
pusha
fwait
daa
or
xlat
sub
cltd
test
mov
ljmp
je
pop
jo
hlt
not
mov
adc
mov
jno
jmp
xchg
cwtl
lcall
arpl
mov
lods
add
sub
js
jne
lods
xchg
sub
sbb
cmp
into
icebp
test
and
gs
push
lds
cli
scas
movsb
pop
loope
push
mov
or
sub
push
sbb
sbb
inc
lea
adc
clc
ljmp
inc
enter
hlt
push
cltd
loop
mov
aaa
xor
mov
inc
sub
orl
ret
adc
or
cltd
pop
mov
cli
mov
cmp
adc
ret
mov
xchg
mov
cmpb
ljmp
push
or
inc
scas
popa
push
xchg
sahf
xor
cmpl
inc
mov
cmp
xchg
mov
jns
mov
lahf
or
in
sub
push
mov
ret
add
push
pop
push
lcall
pusha
mov
sahf
movsl
mov
adc
adc
jo
xor
insb
lcall
push
push
fs
or
mov
fnstenv
les
bound
pop
cmp
out
sbb
jmp
clc
cmpsb
dec
mov
sub
dec
inc
dec
test
iret
mov
mov
push
ret
cmp
repz
mov
cltd
mov
pop
jecxz
or
incl
and
sbb
int3
setl
sub
rcrl
mov
adc
test
es
dec
sti
mov
call
xor
sub
mov
movsb
inc
lret
push
mov
ljmp
flds
or
pop
push
rcll
lahf
leave
push
rol
jle
shll
adc
jl
imul
fcmovnu
push
jo
shrb
fcoms
pop
pop
jo
push
and
cmpb
rolb
fmull
mov
lret
in
cmp
cmpsb
sbb
fsts
js
rcrb
out
mov
push
mov
lods
adc
into
sbb
mov
cs
movsb
ljmp
imul
mov
sbb
lods
iret
mov
cmp
sbb
sti
or
in
jmp
stos
aad
bound
adcl
leave
mov
jne
jecxz
sub
ljmp
xor
and
mov
pop
mov
sub
add
orb
xchg
outsl
cli
incl
dec
iret
mov
dec
inc
test
pop
pop
xchg
gs
inc
addr16
inc
mov
clc
ljmp
xchg
lcall
in
mov
sub
repnz
add
ljmp
enter
dec
push
in
loopne
ficoml
pop
mov
in
lds
sub
gs
fiadds
xor
in
sbb
jne
adc
jmp
daa
cmp
shl
add
rclb
int3
push
jp
mov
inc
jns
add
call
lock
rcr
adc
xchg
mov
stos
push
scas
add
call
jmp
js
dec
loopne
sbb
outsb
aas
add
jge
dec
adc
fwait
std
insb
sub
dec
mov
lods
xor
add
addr16
lods
sbbl
mov
incl
push
push
call
and
dec
inc
lds
fisttps
push
mov
add
hlt
jmp
scas
in
add
adc
out
loope
push
movsl
mov
movsb
fs
push
sbb
adc
adc
adc
cmc
test
lcall
shlb
cmp
or
cltd
or
cltd
fbld
cmpb
and
pop
lock
and
lea
jl
push
push
decl
mov
out
insb
pop
lret
xchg
push
ficoml
pop
pop
mov
fdivrs
fcom
inc
incl
sar
jae
xchg
ljmp
mov
ds
lock
lcall
sahf
fcmovu
adc
fcoml
jb
xchg
or
dec
repnz
aad
fdivr
iret
dec
xor
pop
das
sub
dec
jmp
mov
adc
addr16
aad
push
sbb
aaa
jno
inc
pushl
and
das
cmp
fiadds
popf
rorb
in
mov
shl
push
jg
adc
and
sbb
insl
pusha
push
jnp
aam
mov
sub
push
nop
jp
insb
pop
push
in
and
jp
stc
sarl
sti
outsl
xchg
and
sbb
lahf
xrelease
mov
dec
adc
test
lods
ss
lcall
ljmp
mov
ja
pop
repnz
dec
test
xlat
cmpsl
stos
repz
adc
jb
mov
pop
out
fistpll
jb
loope
pop
pop
test
sub
lock
call
adc
push
inc
jmp
scas
clc
mov
inc
jp
lea
negb
decl
cmpsl
mov
mov
frstor
cmc
or
sub
stos
in
cmpsb
dec
jb
jecxz
decl
dec
jno
mov
cmp
out
pop
out
rcr
dec
mov
lcall
je
sub
and
cltd
xchg
push
jle
lahf
jne
stos
jno
xor
mov
insb
sahf
inc
sar
or
sbb
pop
inc
mov
and
pop
int3
loope
push
mov
dec
call
dec
adc
iret
in
int
data16
push
es
call
lock
icebp
dec
sahf
mov
fwait
loope
xchg
sub
hlt
mov
mov
sti
mov
pop
mov
cli
xchg
dec
mov
fnsave
leave
fstp
fisttpll
pushl
mov
pop
shlb
das
ficoml
adc
jg
sti
lea
push
lcall
js
inc
pop
xchg
incl
cs
add
dec
mov
scas
push
nop
xchg
lea
cmp
push
sarl
and
ret
jnp
pop
lcall
cmp
add
loope
pop
enter
jg
and
std
adc
bound
jns
pop
jmp
pop
in
divl
decl
nop
lock
daa
repz
sub
sbb
lock
rcrl
les
sub
lods
jmp
cli
out
pop
subl
sbb
decl
lock
ja
push
into
in
mov
dec
xor
hlt
sahf
sub
decl
inc
pop
mov
and
xchg
add
sub
into
enter
in
cs
lcall
sbb
xor
push
andl
push
ja
negl
xchg
mov
gs
fisubrl
jge
imul
pop
gs
xchg
call
mov
fnstsw
fisubs
dec
adc
lcall
ljmp
loop
or
mov
outsl
adc
pop
sbb
les
jo
cmp
insb
dec
in
sbb
push
dec
pop
jno
mov
call
xor
and
adc
pop
jb
jns
xchg
cmpsl
push
aam
adc
jl
mov
movsb
subl
cmp
and
pop
mov
scas
insb
mov
ljmp
je
test
cmpsb
jl
push
enter
xchg
orb
lcall
sti
pop
stos
call
pushf
cmpsb
in
imul
out
push
lods
inc
ret
mov
sub
loope
ljmp
mov
ljmp
and
popf
aam
pop
fdivl
fcom
mov
shlb
cld
push
cmpsb
jbe
std
lods
pop
out
push
in
insb
cmp
incl
mov
arpl
or
push
in
bndstx
outsb
enter
decl
dec
lock
mov
xor
cs
adc
cltd
loopne
clc
or
jne
jg
ljmp
add
pop
ror
pusha
add
xchg
cmpsl
arpl
xor
jecxz
das
out
mov
mov
call
in
cmp
mov
jbe
inc
jae
and
loope
js
xchg
mulb
pop
pop
call
inc
inc
pop
mov
imul
add
cmp
lds
inc
std
shll
sbb
out
jg
mov
mov
pushf
dec
xchg
call
sbb
sub
jb
int3
rclb
mov
jg
xchg
dec
cmp
pop
adc
rorb
rorb
lahf
ljmp
mov
outsb
lock
dec
lods
in
in
lods
adc
sar
sarl
dec
mov
pushl
test
or
test
push
and
mov
ja
mov
aaa
or
mov
push
jmp
dec
fildll
lds
sbb
push
test
jg
sbb
add
pop
lea
mov
mov
xor
insb
sub
and
das
ja
rcrl
or
dec
imul
lcall
pop
xchg
add
mov
scas
mov
adcb
cmp
push
sbb
es
mov
fistps
aas
add
mov
in
add
jmp
xchg
call
decl
mov
daa
pop
jmp
outsl
mov
or
dec
repnz
or
ljmp
jmp
lret
mov
mov
mov
jns
push
icebp
xorb
incl
loope
inc
mov
test
fbld
xchg
pushf
fidivs
jg
lcall
fcmovu
js
ja
mov
mov
cwtl
rcll
jecxz
in
das
xchg
or
aaa
mov
push
push
dec
jecxz
xchg
scas
add
ljmp
cmp
sub
mov
lods
les
fiadds
or
imul
loop
popf
mov
fwait
pop
dec
inc
pop
iret
adc
mov
decl
out
mov
dec
or
ffree
xor
repz
jg
mov
call
out
push
adc
lds
fisubrl
pop
das
inc
mov
jmp
jnp
pushl
test
shl
pop
adc
push
mov
or
loopne
push
test
fildl
add
lahf
push
cmp
or
xor
sub
mov
push
or
fiaddl
mov
scas
addr16
inc
es
xchg
cld
cmp
aad
jmp
loop
cs
fnsave
out
inc
aaa
movsb
and
pusha
adc
ret
adc
push
sub
out
mov
xchg
lret
mov
popa
pusha
jle
sub
clc
or
pop
sahf
dec
call
add
mov
adc
sbb
pop
ret
sahf
dec
clc
inc
jg
and
pop
rol
into
pop
mov
mov
popa
xchg
vsubss
leave
inc
dec
lret
sbb
incl
mov
data16
call
sbb
or
cmp
rorl
jmp
jno
mov
fists
mov
outsb
push
das
repnz
je
dec
repnz
into
or
in
adc
xchg
nop
mov
ljmp
aaa
adc
pop
pop
hlt
fisubrs
incl
push
xor
xchg
ret
cwtl
call
call
cltd
jb
adc
push
mov
cmp
outsl
call
xlat
mov
mov
lods
xchg
lock
imul
push
dec
mov
movsb
sbb
out
clc
lcall
xor
ljmp
mov
test
das
sarb
pushl
push
aaa
mov
sbb
repz
daa
xchg
fldt
jae
mov
loop
adc
mov
jmp
adc
jne
adc
jg
jg
icebp
or
jg
mov
in
mov
or
mov
pop
dec
ret
jne
pop
icebp
jecxz
and
push
push
call
push
jl
jo
mov
fcoml
scas
jg
push
std
sbb
add
or
bound
push
fcomps
mov
inc
int
dec
jecxz
rorl
loope
add
pop
in
push
sub
inc
mov
ljmp
imul
or
add
ljmp
ss
pop
testl
cmpsl
mov
rol
pop
sarb
daa
sti
or
mov
mov
add
out
and
dec
mov
xor
test
std
and
outsb
imul
push
and
adc
shl
into
mov
loopne
sbb
int
adc
arpl
imull
sbb
cmp
cld
cwtl
push
inc
call
mov
push
pop
out
push
add
enter
add
xor
clc
sub
mov
pop
cld
call
std
pop
xor
imul
push
sub
repz
insb
ja
fmuls
dec
int
call
ss
loope
sub
mov
mov
in
in
stos
sub
cmpsb
nop
jp
pushl
add
addr16
dec
sbb
clc
andb
mov
test
lret
clc
outsl
pop
cmpsl
push
jge
sub
adc
rclb
cwtl
decl
out
rcrb
rorl
mov
cmp
push
lret
scas
push
out
xlat
aam
mov
call
add
xor
rol
ljmp
dec
enter
jge
ud1
mov
lcall
lods
cmp
jl
cmp
repz
sub
rcrl
stos
popa
add
lea
inc
add
push
pop
fcompl
jnp
pop
jmp
sbb
fwait
ja
lcall
jmp
scas
enter
and
clc
repz
rolb
aad
xor
cmp
ja
push
jp
or
or
aas
xchg
sbb
mov
xchg
mov
loope
mov
repz
data16
cmp
push
sbb
cli
test
cmc
mov
push
mov
jp
push
mov
lret
rorl
popf
and
dec
lods
repz
test
stc
mov
scas
sub
stc
sub
mov
adc
imul
cmpsl
in
cmp
jmp
sbb
ljmp
outsb
mov
push
bswap
movsb
or
and
data16
lahf
and
sar
out
push
jge
cld
xchg
mov
adc
lods
push
jle
mov
call
cmp
cwtl
push
jg
pop
inc
test
test
xlat
fmuls
mov
mov
incl
loopne
pusha
lcall
cld
pop
fadd
popl
arpl
dec
pop
inc
aam
shrl
aaa
mov
sbb
mov
scas
insb
adc
xchg
and
push
jl
sbb
mov
pushf
sub
bound
in
sahf
or
and
and
push
jecxz
adc
lods
sahf
mov
leave
test
jae
pushl
xchg
cmp
jmp
out
movsb
pop
bound
xor
mov
lcall
mov
sub
xor
or
out
cltd
outsl
xor
mov
mov
js
push
mov
inc
push
aaa
in
dec
pop
lret
xchg
sub
stos
push
jne
fs
in
dec
lret
mov
mov
mov
mov
xor
mov
xor
xor
cwtl
les
sub
faddl
call
lret
stos
mov
lahf
cs
iret
cmp
sbb
inc
idiv
sahf
sahf
mov
mov
jmp
cmp
mov
fstpt
dec
pcmpeqw
dec
int3
icebp
fwait
and
pushf
pop
cwtl
pop
add
sbb
xchg
adc
imul
push
les
outsl
bnd
cmpsl
inc
dec
mov
fistps
dec
sub
lcall
cli
insb
fidivrl
in
outsl
dec
xor
sbb
imulb
aam
call
lods
add
mov
mov
and
mov
fucom
mul
je
mov
mov
in
sar
jmp
lahf
cmpb
push
loope
or
sub
push
and
or
std
lea
push
aam
sbb
lods
test
ljmp
inc
pop
fistpl
push
shl
pop
and
xlat
aaa
mov
and
jb
xor
movsb
cli
cs
mov
xor
insb
cmpsl
test
xchg
sbb
mov
xchg
mov
pop
dec
jmp
inc
loope
ljmp
aas
xchg
stos
jle
addr16
cwtl
xlat
fimull
and
pop
fildll
add
mov
push
mov
push
cmp
mov
ljmp
xor
call
push
lock
and
lret
push
sbb
je
sahf
pushl
and
rcrb
in
or
repz
jmp
aad
cmp
xor
xchg
adc
dec
ret
inc
out
movsl
mov
sti
negb
add
adcl
aad
lods
pop
and
jg
mov
test
arpl
ss
into
cmp
cltd
xor
fwait
cmp
cld
popf
adc
in
cmpb
mov
push
decl
outsb
sbb
loope
cmpb
ljmp
nop
scas
mov
mov
int3
subb
xor
mov
arpl
arpl
inc
mov
test
pop
lods
pushl
ja
xor
adc
aaa
pop
js
mov
jns
bound
sahf
add
push
out
int3
pop
mov
arpl
cmp
or
mov
ljmp
pop
in
lock
sub
fsubrs
push
pop
pop
decl
mov
mov
cmp
adc
pop
jne
mov
jg
jmp
imul
add
dec
xchg
push
mov
push
mov
outsb
xor
pop
cmc
clc
daa
add
data16
adc
pop
xchg
decl
aad
ror
inc
iret
std
mov
int3
adc
ljmp
xor
icebp
nop
out
ljmp
pop
rcrb
gs
mov
ret
mov
pusha
xor
fiaddl
xor
outsb
test
loopne
adc
adcb
jle
inc
mov
jmp
js
mov
nop
add
add
mov
jmp
mov
or
ss
push
mov
mov
mov
jle
fwait
jb
adc
dec
nop
dec
xchg
push
adc
sbbl
push
movsb
mov
jg
cli
in
inc
and
popa
imul
test
aas
jecxz
enter
clc
xorl
fistpl
and
cmpsl
xor
pop
mov
je
lock
lea
mov
inc
mov
test
pop
mov
sub
pushf
pop
lds
pop
and
call
inc
mov
xor
ljmp
lods
push
aaa
xor
inc
cmp
xor
ljmp
jge
inc
clc
mov
bound
lods
push
pop
andb
lcall
in
mov
jno
bound
xor
inc
data16
adc
xchg
push
scas
addr16
movsb
jbe
jp
arpl
decl
lods
xor
scas
test
incl
push
lods
mov
mov
xor
mov
mov
add
cmp
repz
loop
pop
push
notb
xor
mov
mov
btc
not
jbe
xor
call
cmp
setne
imulb
testl
jmp
lods
adc
add
ljmp
push
jl
push
jno
outsl
sbb
test
and
stos
fdiv
or
lahf
cmp
shl
pushl
add
imul
jno
lods
sub
mov
or
gs
mov
push
adc
mov
adc
rcrb
jg
mov
sbb
pop
and
shr
lods
pop
inc
clc
outsl
loope
xorl
inc
dec
movl
mov
push
scas
push
addr16
fsubrs
or
cltd
push
push
cli
ret
imul
incl
dec
stos
rol
mov
hlt
jbe
mov
cmp
mov
inc
xor
lcall
ret
out
pushf
push
lahf
mov
scas
aaa
xor
arpl
xchg
mov
mov
shll
ss
incl
ja
sbb
pop
adc
fcomps
inc
icebp
aas
cmp
and
jnp
sub
lods
cs
lcall
aaa
jecxz
jbe
mov
adc
decl
sub
add
fimull
scas
mulb
clc
sbb
in
je
testl
call
mov
cmc
jl
jnp
cmc
cmc
cmp
lock
dec
sub
fwait
add
jns
sub
mov
mov
add
add
sbb
hlt
xorb
add
stos
cs
clc
push
insb
lret
bound
in
adc
out
decl
orl
iret
cmp
inc
push
data16
or
or
add
and
popa
es
clc
decl
or
dec
pop
inc
inc
xor
decb
ret
fisttpl
das
sbb
dec
ljmp
mov
lds
mov
cmp
xchg
rcrb
fldcw
aam
call
test
push
fisttpll
movsb
outsl
stos
test
cmp
call
decl
inc
mov
in
dec
aam
xchg
test
lock
popa
or
movsl
cmpsb
sub
les
pop
mov
jo
sbb
subb
sbb
jmp
mov
test
mov
nop
dec
repnz
inc
lods
imul
adc
jo
or
fwait
fs
das
loop
daa
inc
incl
xchg
sbb
pushf
in
sub
dec
sbb
push
lods
mov
and
add
mov
inc
test
hlt
xor
xchg
fisubs
dec
xchg
pop
popf
sti
mov
int3
pop
xor
cltd
xchg
addl
push
mov
pop
pop
adc
clc
je
psllq
cwtl
sub
or
movsl
fldl
mov
add
or
lcall
sbb
lods
scas
ficompl
mov
pop
out
dec
call
mov
mov
test
jmp
mov
add
push
sbb
pop
sahf
and
decl
or
jmp
andb
mov
movsb
cli
outsb
int
or
call
into
movsl
jo
cltd
fisubl
xchg
mov
popw
sbb
add
sbb
pushf
jne
icebp
mov
push
cwtl
jbe
out
cli
decl
jmp
sbb
pop
or
rol
rolb
out
inc
xchg
stos
dec
in
dec
dec
incl
cld
jle
dec
scas
lds
jle
mov
lahf
push
pop
dec
loope
scas
push
test
scas
jno
pop
xchg
sahf
xchg
mov
leave
mov
dec
mov
sub
add
std
add
mov
add
lock
test
or
push
lahf
movsl
inc
aad
inc
not
std
sbb
adc
test
push
or
movsb
mov
jge
pop
inc
pop
pop
ror
sbb
je
cmpsl
xchg
dec
lret
cmpsb
push
push
sub
mov
insl
repnz
inc
leave
adc
fisubrl
into
pop
push
cmp
add
mov
dec
mov
push
ficoms
push
lret
jbe
imul
inc
or
movl
orps
mov
sub
fwait
and
imul
jmp
jle
jno
inc
cmp
cmc
shl
lcall
into
in
cmp
jg
icebp
es
xchg
fadd
xor
das
xor
xchg
shrl
rol
fbstp
in
push
xchg
add
cltd
loopne
mov
pusha
sbb
inc
pop
mov
gs
mov
es
pop
pushl
jecxz
mov
decl
lcall
jmp
and
jo
hlt
mov
cmpl
imulb
pop
jecxz
cmp
ja
ljmp
cli
or
pop
rcrb
sub
enter
mov
test
cmpl
pop
jge
sub
push
rcrl
mov
xchg
arpl
shlb
and
cld
inc
jle
shll
daa
lods
dec
xchg
push
xor
jno
fsubrl
dec
mov
dec
cmp
xlat
cwtl
mov
and
ret
into
push
xchg
pushf
cmp
test
mov
xor
jmp
or
out
lock
xchg
push
daa
sbb
loopne
mov
imul
ja
jmp
and
fistl
hlt
adc
sub
out
outsb
addr16
jmp
sbb
out
aas
cmp
bound
push
rcrb
rolb
movsb
sbb
inc
fildl
insb
pop
fimuls
push
or
in
mov
lcall
nop
data16
jns
cmpb
pusha
iret
loopne
and
pop
inc
dec
mov
out
mov
dec
movl
dec
add
sbb
lcall
mov
push
aas
push
sub
mov
jmp
pop
dec
pop
pop
jl
mov
push
test
rcr
fsubl
arpl
test
clc
cli
gs
inc
push
mov
xchg
aaa
push
decl
idivl
dec
addb
push
fisttps
cmp
ds
jo,pt
jmp
pop
test
idivl
inc
inc
mov
sub
outsl
mov
inc
ret
mov
movsb
mov
std
lcall
fdivrs
inc
push
mov
pushf
xchg
sub
ljmp
jmp
pushl
or
int
dec
test
pop
jne
cmpsb
adc
scas
mov
mov
lock
sarb
hlt
cmpsb
sbb
gs
ljmp
js
mov
lret
push
pop
sbb
xchg
fsubrl
pop
inc
shrb
popf
ret
aas
call
cld
inc
xchg
popa
lahf
scas
or
or
pusha
sahf
out
fs
inc
lcall
incl
add
sub
cmp
cli
scas
and
adc
shrl
sub
adc
stc
pusha
into
call
push
push
add
lcall
incl
neg
jbe
and
xor
push
sbb
cmpsb
mov
je
mov
adc
ss
or
sti
fdivp
dec
fimull
shlb
lret
loope
fwait
cmp
mov
lret
jmp
pop
ds
call
pmulhw
dec
fmuls
out
int
adc
xchg
ficompl
mov
insb
aas
mov
pop
and
inc
test
cmp
push
pop
rcrb
out
pop
sbb
jmp
mov
jg
add
jge
inc
mov
stos
mov
adc
cmp
dec
mov
in
inc
in
push
push
sbb
mov
dec
jecxz
inc
mov
sti
pop
int3
lock
rclb
outsb
in
adc
xor
call
sub
repnz
mov
in
mov
jmp
pop
gs
ret
repnz
push
lods
pop
ja
fcomip
aaa
and
aaa
dec
push
jl
jbe
ljmp
addr16
mov
insb
push
jl
pop
cld
or
popa
push
dec
mov
dec
adc
lcall
ljmp
or
jecxz
in
xchg
dec
mov
cltd
jg
and
and
xor
push
iret
in
mov
insb
mov
mov
mov
xor
adc
ror
std
stos
and
xchg
out
dec
scas
jge
or
push
loopne
jg
dec
js
pop
into
repz
mov
ljmp
adc
stos
movaps
xchg
xchg
call
and
push
dec
adc
ror
inc
ds
mov
call
dec
mov
stos
and
jp
fnstcw
bound
fcomip
adc
loope
inc
push
jle
mov
roll
adcl
sub
hlt
stos
adc
add
mov
ret
mov
dec
jmp
xchg
cwtl
xchg
jno
add
ljmp
rcr
xchg
jg
aas
fdivl
add
dec
and
ja
sub
enter
pop
jnp
or
fisubl
or
push
jg
scas
dec
out
test
sub
inc
pushf
frstor
sbb
jne
aam
outsl
decl
in
repz
imul
lods
or
repnz
add
xlat
sbb
loopne
pushl
pop
and
xor
xchg
pusha
xor
dec
popa
stc
subl
stos
xchg
fiaddl
ret
ljmp
cmc
xor
push
lods
xlat
adc
repnz
push
sarl
jg
fisttpl
cmp
lcall
sub
roll
mov
pop
popa
js
lret
push
push
ja
mov
insl
loopne
pop
cmp
call
push
sahf
jbe
sbb
int
dec
lret
pop
mov
aaa
shll
ljmp
lahf
cltd
mov
std
jmp
pop
sahf
iret
push
sti
rolb
insl
cmp
pop
cld
jmp
pop
pop
sub
xchg
insl
stc
not
and
sbb
xchg
jp
mov
fnstenv
or
xchg
and
dec
mov
xchg
xchg
dec
jle
ret
lcall
leave
and
test
loop
sbb
jb
popf
add
dec
je
js
call
imul
incl
sub
lahf
in
pop
lds
pop
fadds
mov
adc
mov
pusha
adcb
sbb
test
mov
mov
push
inc
mov
and
ljmp
xor
movsb
daa
outsl
rorl
int3
sbb
in
and
mov
arpl
mov
push
xchg
mov
pop
or
mov
push
imul
add
mov
xchg
ja
lahf
pusha
imul
jb
add
mov
add
addr16
call
movsl
cmc
movsb
jl
xchg
dec
jg
inc
enter
aad
xchg
or
jg
push
mov
inc
adc
dec
lcall
movsl
stc
xorl
mov
pop
sub
jnp
inc
sar
ja
dec
add
sbb
into
scas
and
outsb
add
xchg
and
sbb
divb
and
lcall
and
ret
aad
pop
or
sahf
push
out
imul
xchg
mov
and
call
pop
push
push
jae
jp
adc
les
xchg
push
push
pop
push
sbb
and
cmpl
add
decl
repnz
movsb
aad
xchg
stc
mov
in
mov
lods
xchg
dec
sub
xchg
lcall
and
int3
and
mov
mov
je
mov
cmp
pop
inc
loopne
jg
test
or
idivl
fsin
xor
inc
xor
mov
std
xchg
add
jbe
int3
add
sub
fwait
aaa
dec
cli
ljmp
dec
mov
fisubl
cmp
cltd
movl
into
jmp
aas
adc
dec
jbe
movsl
loope
dec
call
push
ret
inc
inc
jecxz
popf
test
std
xchg
xor
cmp
mov
stos
mov
mov
ret
lret
sub
push
addr16
andb
push
jmp
inc
jg
push
out
pop
xchg
sahf
inc
jno
sbb
mov
sub
mov
mov
pop
mov
dec
push
out
mov
inc
xchg
mov
clc
ret
fbld
dec
sahf
call
testl
mov
sub
mov
incl
cmc
cld
add
mov
mov
or
or
mov
mov
pushl
mov
or
mov
push
xchg
cltd
aad
jb
dec
push
lods
mov
cmp
stc
push
sub
jl
mov
jle
add
sahf
js
hlt
pop
add
decl
add
xchg
in
repnz
outsb
sub
mov
sbb
xchg
mov
test
cli
lods
cmpsl
or
incb
insb
mov
jbe
imul
icebp
sbb
popf
push
es
push
inc
cmp
rorb
inc
mov
leave
jnp
mov
push
cli
jg
addl
ds
dec
mov
and
cmp
and
outsl
nop
mov
jge
push
xor
jg
xchg
pusha
and
ds
sub
pop
jbe
test
lcall
xor
mov
cmc
xor
outsl
cli
pushl
mov
sbb
push
roll
into
dec
and
jnp
jbe
ljmp
xchg
lret
insb
inc
imul
mov
ret
popa
out
rorb
cmp
cmpsl
repnz
push
mov
and
add
push
adc
add
data16
clc
les
jge
mov
mov
outsl
aas
inc
loope
mov
cmp
fcoms
cld
jg
cmpsl
sub
cmpl
mov
std
lock
dec
arpl
dec
jae
sbb
call
mov
repz
and
ffree
popf
imul
xlat
jg
fdivl
cmp
imul
pop
pop
out
inc
pop
add
iret
inc
pop
mov
pop
in
ds
popf
ljmp
xor
test
push
aas
shl
pop
jge
je
or
lcall
incb
ja
inc
xlat
rcr
movsb
cmc
cs
cmpsb
sbb
incl
xor
xchg
mov
push
cwtl
insl
cs
fwait
sarl
cmpsl
mov
dec
sarl
mov
jb
pushl
cmpsb
push
inc
dec
jnp
xchg
push
push
repz
lock
sbb
and
popl
cmp
stos
jae
push
pushl
pop
xchg
or
adc
mov
push
adc
fs
imul
mov
ljmp
mov
pop
fwait
adc
outsb
hlt
inc
fwait
sub
pop
cmp
jnp
jp
or
es
mov
lea
fists
jmp
add
popf
add
out
clc
dec
loopne
jbe
cmpsl
hlt
adc
cmp
adc
pop
push
or
cmp
fsubrs
ljmp
pusha
mov
jb
pop
xchg
repz
scas
test
dec
insb
or
push
lret
dec
mov
call
mov
mov
mov
pushf
fimuls
add
test
jmpw
clc
ljmp
mov
stc
outsl
push
lret
cltd
pop
leave
jp
xchg
push
rorb
mov
shrb
lret
sub
in
push
sub
push
cmp
jbe
pop
sti
adc
push
xchg
insb
mov
mov
stc
pop
lret
jg
cmp
sub
pop
adc
das
jb
mov
or
cltd
arpl
adc
xchg
adc
test
adc
mov
push
rcrb
cmp
xchg
scas
in
inc
in
fdivr
mov
sahf
mov
lcall
ds
adc
enter
lods
cmpsl
repz
pop
push
mov
pop
mov
pop
aas
fildll
or
and
lret
lods
or
lretw
and
push
lock
xchg
aam
dec
xchg
jge
xor
incl
cld
pushl
sub
je
gs
out
cwtl
jne
sbb
popf
fs
aam
addr16
adc
cmc
inc
sub
decl
test
rcr
dec
pop
or
ja
inc
mov
sbb
aaa
push
sub
call
cli
roll
sbb
jno
add
sbb
add
es
in
jmp
cld
adc
bound
test
gs
repnz
aas
sti
mov
imul
repz
and
jb
jbe
xchg
sub
mov
out
into
dec
shll
xorl
dec
stos
dec
jae
push
ds
sub
fcomps
jo
ljmp
test
cld
mov
arpl
sub
fisubs
subl
in
les
imul
loope
into
push
mov
sbb
mov
push
icebp
aaa
add
mov
leave
mov
push
ret
enter
call
cmovns
inc
mov
es
out
imul
dec
imul
cmp
add
mov
fs
or
decl
cs
fs
xchg
dec
imul
cld
lcall
pop
dec
lds
sbb
or
cltd
sbb
mov
xchg
lea
jb
inc
cld
insb
or
push
lcall
push
sbb
call
repnz
clc
add
arpl
insl
adc
lock
jo
sbb
pop
test
pop
cmc
incl
push
pusha
jbe
pop
pop
in
loopne
adc
pusha
inc
push
pop
in
jg
lret
in
push
aad
imul
push
xchg
jp
inc
mov
lcall
lods
aaa
lcall
mov
sub
xchg
xor
inc
fadds
cmp
cmpsl
cmpsl
imul
jp
mov
push
dec
rcll
movsl
lods
incb
mov
outsb
fdivr
lcall
out
sub
mov
leave
pop
arpl
lods
sbbl
inc
add
mov
fcmovb
arpl
sbb
out
xorl
cli
sbb
shll
lods
and
or
incl
out
and
scas
or
jle
call
adc
add
arpl
pushl
pop
cmp
mov
push
fs
pop
adc
call
add
sbb
cmp
or
aad
out
cs
ret
lock
mov
out
and
cmpb
fmull
mov
inc
ficompl
cmpsb
push
popa
pop
int
clc
pushl
les
dec
out
stos
pop
cmp
movsb
data16
aam
ret
mov
mov
add
ljmp
adc
mov
xchg
fwait
push
cmpsl
repnz
push
rcrl
jle
ds
dec
pop
sub
incl
bound
cld
jp
cli
mov
imul
adc
add
ss
fsub
inc
into
std
cmp
pop
loopne
addr16
add
clc
pushl
sahf
mov
sbb
xor
jo
xor
lock
jg
stc
pushl
test
push
daa
clc
addr16
data16
push
std
and
sub
cwtl
loope
pop
cmc
ja
decl
fstps
cmp
jecxz
xlat
or
pop
fsts
decl
ficoms
xchg
insb
lds
gs
popf
icebp
jmp
push
mov
stos
mov
stos
add
daa
mov
dec
cld
push
or
and
nop
inc
xor
loope
jmp
cmpsl
imul
ljmp
mov
inc
xchg
into
sbb
adc
jecxz
dec
sbb
adc
test
orl
shrl
pop
cmp
add
icebp
int3
in
into
pop
xlat
adc
mov
lods
int
pop
jp
stos
push
inc
mov
and
push
pushl
cmpsb
jge
push
int3
add
mov
mov
xchg
fisttps
jg
lcall
mov
in
loope
cmp
testb
xor
sub
fsts
mov
sbb
mov
sbbl
jbe
jg
lcall
dec
shl
fistl
sbb
and
decb
outsl
dec
test
mov
outsb
sub
sbb
cld
and
jg
out
ss
mov
data16
mov
outsb
ds
push
cmpsb
xchg
ljmp
icebp
adc
int3
enter
lahf
sbb
outsb
sbbb
sbb
movsl
add
into
inc
jecxz
out
jns
push
or
lcall
daa
cmc
cltd
xorl
lds
popa
mov
xchg
mov
push
mov
decl
push
dec
fwait
sti
ljmp
ljmp
add
inc
ljmp
cs
mov
lcall
and
dec
push
lods
fs
stos
inc
pop
loope
call
adc
andl
mov
stos
xchg
jmp
push
shll
roll
and
lcall
cltd
adc
popa
aam
fcompl
stos
int3
psrlq
out
mov
and
sbbb
add
inc
inc
mov
inc
rol
incl
mov
push
sub
shlb
xor
movsb
das
jne
pop
xchg
add
out
icebp
rclb
movsl
xor
mov
jg
sub
aaa
mov
cwtl
fcoml
adc
mov
sub
pushl
cmpsb
mov
sbb
rcr
popa
stos
xchg
stc
into
aas
mov
mulb
popf
sahf
fcomip
add
cmpsb
jmp
movsb
cld
push
cwtl
xchg
jbe
in
popf
cmp
mov
push
cmp
sbb
arpl
push
adc
sub
jb
adc
push
cld
decl
sub
push
movsb
imul
cs
outsb
xchg
addr16
pop
lcall
shlb
loope
enter
pushf
ss
into
divl
dec
fildl
movsl
sbb
jg
jg
addr16
pop
test
ljmp
ljmp
jmp
add
cmc
inc
je
push
sahf
lds
scas
mov
fisttps
mov
xor
cld
jns
lods
cmp
gs
jae
iret
or
mov
jns
incl
pop
add
mov
outsb
out
nopl
push
fs
xchg
add
push
sar
hlt
xchg
clc
adc
or
loopne
loopne
push
andb
sbb
test
push
mov
push
outsb
loopne
mov
jle
es
mov
xchg
push
inc
or
inc
lret
decl
dec
push
jns
cltd
loope
adc
mov
jle
jno
mov
pop
sbb
add
clc
in
imul
sarl
hlt
mov
jmp
pushl
xlat
sarl
dec
adc
add
pop
xchg
icebp
arpl
data16
inc
lahf
mov
jmp
mov
decl
lock
jnp
cmp
cld
add
dec
pop
ss
mov
sarb
dec
mov
xchg
clc
mov
enter
mov
jmp
enter
push
outsb
in
fisubrl
jle
arpl
mov
mov
lods
cs
imul
std
sbb
outsb
inc
cmpsb
xchg
add
out
sub
push
scas
push
imul
sbb
cmp
rolb
movsl
shll
pop
xor
or
fldl2t
cwtl
push
xor
sar
fdivr
call
cmp
ss
ja
mov
lcall
dec
inc
sbb
jmp
fisttps
sti
loopne
mov
add
decl
xchg
xor
jne
rorl
cwtl
je
pop
pop
ss
dec
xor
xchg
test
adc
cmp
jmp
and
scas
cld
mov
push
mov
mov
jnp
filds
call
xchg
in
insl
test
pushf
sub
enter
sbb
sub
xchg
outsl
xchg
pop
cld
pushl
adcl
idivb
jle
adc
adcl
and
enter
cmovp
xchg
and
bound
rcll
inc
dec
xchg
jo
push
xchg
push
mov
xor
incl
dec
lds
je
xor
out
call
imul
mov
pop
push
ljmp
jo
ljmp
fisttpl
fnstcw
add
push
mov
cltd
add
and
push
leave
in
pop
jg
dec
idivb
lcall
or
push
mov
cmpsb
xchg
sbb
cs
dec
mov
mov
and
fwait
xchg
popf
mov
pop
js
ljmp
sbb
leave
jle
jp
jle
sbb
and
das
pop
iret
xor
fwait
pushl
adc
cmp
xchg
mov
mov
or
sbb
cmp
xchg
xor
push
test
decl
dec
jb
rol
xchg
xchg
sbb
ror
sbb
dec
cmp
pop
out
and
or
push
je
mov
out
frstor
cmpsl
add
pushl
test
inc
lods
cmc
xor
je
xchg
xchg
mov
aad
push
dec
mov
mulb
pop
sti
addb
jmp
cmpsl
in
aaa
cmp
mov
out
ljmp
dec
xchg
mov
sahf
pop
cwtl
add
xor
loop
mov
and
insl
mov
sti
je
sbb
xchg
sub
mov
out
loope
ret
jnp
dec
stc
jae
add
decl
in
add
leave
add
mov
movsl
idivb
lods
test
fwait
repnz
and
pushl
sbb
add
cwtl
lret
adcl
mov
cmp
jle
xlat
mov
repnz
pop
cmp
jmp
insb
popa
jg
int
inc
es
mov
pop
scas
push
push
xchg
sbb
das
mov
adc
jb
jmp
lret
stos
int
pop
sbb
fistpll
mov
sti
jmp
fisttps
in
mov
aaa
push
cmc
daa
negb
ja
jb
pop
clc
jae
and
iret
fistpl
push
ficoms
fistpll
add
add
mov
push
clc
incl
mov
pop
sarb
sub
ljmp
xchg
je
shl
sub
aad
push
test
xor
sub
sbbl
incl
scas
xchg
loope
pop
std
add
aaa
fldcw
xchg
iret
hlt
cmc
jbe
inc
jb
lock
xchg
sub
loope
hlt
rol
and
aas
mov
jmp
xchg
lret
cwtl
jl
dec
sbb
iret
into
mov
sbb
jb
jmp
movsb
pushl
pop
insl
dec
mov
sub
mov
pushl
xchg
inc
out
xlat
mov
xor
sbb
imul
cmpsl
cmp
pop
call
mov
ljmp
pop
cmp
push
cmp
cwtl
pusha
shlb
xor
pop
cmp
lcall
and
aas
cmp
ds
cwtl
push
ds
push
lea
jg
sub
mov
nop
vunpcklpd
or
mov
icebp
enter
inc
mov
cmpsl
out
adc
daa
inc
or
pop
push
decl
inc
test
or
les
pop
lock
int
push
or
ret
xchg
xor
jb
sbb
mov
dec
leave
aaa
mov
jb
jge
jo
out
adc
mov
cmp
ret
sbb
fldl
sbb
loopne
mov
mov
movsl
xor
mov
jmp
jmp
mov
fistpll
aad
jno
and
loop
ss
insl
outsl
mov
mov
pop
adc
mov
fidivl
mov
xor
sub
nop
dec
aaa
mov
loopne
ljmp
add
xchg
cmpsb
xor
incb
ljmp
jecxz,pt
shll
insl
add
decl
lods
sub
scas
or
push
lahf
mov
jge
dec
arpl
lods
arpl
out
mov
in
pop
ret
inc
fcoml
fldl
lock
loopne
xchg
ljmp
ljmp
popa
mov
xor
cli
outsb
add
mov
pop
adc
sbb
decl
in
movsl
xlat
aam
mov
xchg
bound
cmp
cwtl
insb
xor
ljmp
or
jne
mov
push
cmp
pop
inc
pop
in
mov
xor
ret
test
mov
jae
dec
xor
fs
sbb
out
pop
stos
mov
mov
stos
in
jbe
or
shl
dec
incl
push
daa
dec
in
lret
daa
int
sti
sbb
and
sub
xor
daa
mov
sub
xchg
or
pop
nop
or
femms
frstor
pushl
je
shr
dec
rcll
xchg
fwait
ja
cs
xor
xlat
mov
outsl
push
dec
aad
cmp
inc
dec
jmp
clc
in
insl
mov
rolb
mov
stos
leave
add
dec
add
jl
lcall
cmpsl
inc
xor
lahf
xchg
and
add
mov
lods
sbb
outsb
icebp
and
pop
mov
stos
popf
call
mov
loope
clc
enter
and
cmp
outsl
shll
and
hlt
loopne
bound
sbb
out
lcall
sbb
out
push
xor
add
mov
mov
imul
jb
std
lcall
mov
and
shr
or
xchg
adc
stos
push
and
jg
sub
push
dec
push
jl
in
fisttpll
incl
aam
add
mov
outsl
add
jnp
mov
andb
xor
adc
test
in
cmc
sbb
inc
cmpsl
inc
cld
icebp
or
in
daa
push
mull
xor
les
cmc
mov
loopne
stos
add
loope
mov
and
lds
jb
mov
cld
pop
enter
and
out
jbe
mov
and
icebp
push
add
or
jns
push
jg
cmp
xor
xchg
mov
mov
mov
adcb
xor
mov
pop
mov
pop
movsb
call
les
ljmp
jb
sti
scas
popa
int
jnp
int3
pushf
add
sti
jbe
push
jmp
mov
ret
inc
jae
loop
enter
mov
clc
cmp
jmp
cmc
lcall
lock
or
push
jb
pop
loope
nop
mov
pop
cld
bound
sub
lret
ja
xor
cltd
cld
or
pop
pop
test
add
pushl
jp
or
add
insl
ficompl
rorb
inc
mov
mov
mov
fwait
jl
gs
out
pop
jl
ss
jg
cld
loop
pop
pop
jl
inc
dec
inc
pop
mov
test
icebp
std
jmp
ret
jl
inc
or
sar
xchg
and
push
xor
arpl
shlb
mov
lock
fists
dec
scas
cmp
or
sub
push
insb
mov
push
repnz
jg
xchg
push
mov
jne
jnp
pop
inc
add
cmp
xchg
mov
add
cmpsb
je
test
das
mov
xor
jo
mov
mov
dec
pushf
lcall
push
jo
pop
push
loopne
mov
xor
out
mov
pusha
ljmp
sbb
jl
nop
mov
pop
gs
andl
xor
sahf
ja
sahf
mov
mov
gs
incl
and
rcrb
push
popa
into
push
loopne
das
mov
xor
adc
push
aam
cmp
es
out
cli
rcr
pop
imul
scas
add
sbb
js
add
jbe
into
lcall
push
cwtl
aam
sbb
test
mov
faddp
mov
dec
ds
sbb
ljmp
push
mov
dec
cmp
jne
mov
sub
push
test
incl
es
pop
ss
es
std
mov
push
pusha
test
xor
jmp
push
dec
test
test
out
xchg
pop
stc
daa
repz
mov
mov
stc
ljmp
push
fistl
dec
push
push
decl
xchg
sub
cmp
cmp
add
incl
mov
mov
jge
pop
sahf
aad
mov
cmc
fisttps
jo
lret
ret
sahf
pusha
dec
iret
pop
mov
in
ja
mov
pushl
daa
cmp
pop
jl
pop
rol
sub
mov
jp
decl
mov
dec
add
insl
push
jae
pop
jbe
adc
xor
mov
jmp
cmpsl
cmp
in
repnz
ds
in
mov
xchg
cmpsl
fisubs
sarl
pop
ljmp
bound
push
shrl
mov
pop
add
or
and
lock
decl
nop
or
sbb
xlat
fidivrl
dec
aam
jecxz
inc
adc
out
clc
xchg
add
aad
movsl
pop
add
sub
pop
jl
gs
mov
xorl
sub
dec
mov
pushl
into
xor
mov
xchg
jno
sub
into
push
test
mov
call
sub
ds
xor
sbb
movsb
fisubl
imulb
cmp
faddl
mov
push
mov
adc
sahf
xor
and
into
lahf
cmpsl
cmp
jg
scas
mov
sub
shrb
cmpsb
sub
outsl
or
sbb
jg
aam
sahf
xchg
imul
inc
fisttpll
mov
ss
das
jmp
mov
aas
jge
scas
dec
je
call
inc
lea
das
mov
mov
decl
movsl
push
push
fidivrs
out
mov
in
std
push
inc
movsb
mov
jns
scas
or
mov
sbb
inc
and
pop
jne
stos
and
mov
pop
stc
dec
aas
fildl
dec
push
push
cmp
jge
movsl
out
jge
xor
testb
das
cli
fildll
xchg
mov
dec
into
mov
cmpsb
jle
or
dec
push
dec
into
fisttps
ss
dec
popa
rolb
rol
cmp
jg
je
sahf
arpl
dec
and
cmp
sbbb
jg
xorb
xchg
push
mov
push
sub
cmp
sub
cld
or
pop
loopne
insl
jg
loop
test
cwtl
movsl
es
adc
mov
sbb
push
clc
mov
fmull
pushf
and
sub
fxch
gs
dec
in
jb
pusha
es
lahf
mov
inc
js
mov
scas
movb
jne
iret
mov
xchg
clc
inc
xchg
pop
ja
xor
push
inc
xor
ss
jmp
xchg
push
inc
jne
cmp
les
or
fldcw
xchg
sbb
mov
cmp
push
mov
gs
incl
and
lock
dec
mov
das
jp
lret
scas
cmp
cmp
xor
pop
out
mov
inc
mov
mov
pop
cmp
mov
or
fisttps
testb
sub
mov
stos
mov
clc
xchg
imul
clc
fdivr
lcall
push
jbe
ss
sub
cmpsb
cmpsl
jb
fs
daa
sbb
inc
cmp
xchg
fdivrl
lods
decl
xchg
andb
add
inc
scas
pop
jmp
dec
inc
maskmovq
divl
sub
incl
cld
inc
orl
call
and
lods
sbb
mov
ljmp
stc
pop
cmpsl
insl
cmp
dec
xchg
dec
mov
mov
cltd
add
xchg
comiss
test
push
mov
lcall
call
fdivrp
push
push
mov
insl
mov
ja
stc
push
xor
addr16
cwtl
cld
xchg
cld
incl
pop
out
aaa
pushf
push
jne
mov
dec
adc
icebp
pushl
adc
icebp
ret
mov
sub
test
iret
imul
ljmp
aas
adc
sbb
add
hlt
jmp
lret
push
mulb
js
xchg
stos
sub
test
and
mov
jle
outsl
pushf
xlat
adc
subl
call
int3
xchg
leave
stos
mov
pop
repnz
pushf
push
out
test
or
sar
ljmp
mov
pop
repz
mov
cmp
jecxz
mov
cmp
xchg
repz
sar
in
lods
dec
rcll
imul
nop
inc
bound
mov
mov
adc
mov
push
pop
ja
jmp
mov
dec
mov
jbe
iret
fs
mov
out
inc
inc
out
cmp
data16
xchg
in
std
in
dec
js
lret
ja
mov
inc
frstor
decl
mov
cltd
mov
or
add
shrl
divb
sahf
repz
jg
lods
mov
push
xchg
xchg
cmpsl
imul
lcall
loopne
pop
imul
loope
adc
xchg
jg
mov
xor
repz
xor
jmp
jmp
or
aaa
xlat
lock
stos
adc
pop
lret
push
mov
repz
jbe
ljmp
sbb
ficomps
imul
sbb
loop
pop
std
loope
dec
pop
fstl
repnz
aas
dec
jne
js
pop
pop
cmp
movsb
jmp
sub
lods
cltd
in
loop
clc
dec
add
xor
shlb
cmp
inc
and
sahf
jp
outsb
popf
adc
cmp
lcall
sbb
cmp
xor
adc
lcall
mov
push
ret
cwtl
jg
cmp
iret
inc
insb
test
cmp
test
push
cmp
pop
mov
enter
jmp
repz
fistps
inc
mov
add
in
push
pushf
sbb
mov
lcall
int
popf
sbb
nop
jg
mov
jae
dec
in
or
test
push
insb
out
test
ljmp
jbe
add
icebp
cmp
out
enter
in
mov
test
and
mov
lcall
push
mov
mov
pop
ja
scas
pop
shrl
adcb
ja
ljmp
pushl
xor
inc
sti
dec
push
jmp
popa
shll
xchg
in
orl
mov
repnz
push
rorl
push
jb
xchg
ret
cli
lahf
dec
sub
std
xor
xchg
xor
add
test
hlt
mov
enter
ja
pusha
cltd
call
loopne
negb
lahf
idivb
dec
jle
mov
mov
mov
ljmp
jle
xchg
xchg
sub
out
cmp
inc
push
decl
shl
push
mov
loope
pop
or
add
bound
cli
out
dec
repz
dec
xchg
adc
cmpsb
ret
mov
dec
subl
icebp
lock
jb
mov
incb
sbb
es
or
out
arpl
lock
dec
inc
xchg
test
lods
loopne
sbb
fsubrs
or
inc
cmp
push
jae
sbb
jp,pn
xchg
and
ja
jb
xchg
ja
pop
lea
ljmp
xorl
xor
sbb
aam
pop
push
in
push
pop
mov
cwtl
or
inc
in
mov
int3
mov
push
inc
dec
pop
push
popa
scas
cli
pushl
mov
ja
int
push
clc
loop
in
fmuls
cmp
das
hlt
test
mov
dec
jle
pop
test
pop
les
inc
jns
inc
shrb
dec
imul
insb
dec
xor
xchg
insl
inc
int3
andl
mov
cmpb
std
adc
lock
push
jnp
adc
hlt
ljmp
xorl
push
adc
mov
outsl
int3
imul
mov
push
cmp
pop
bound
add
push
jle
sbb
jge
mov
xchg
pushf
in
xchg
stos
aad
test
and
cmp
jg
mov
mov
enter
pop
clc
jecxz
ret
int3
xchg
sub
outsl
rcrb
jmp
jo
scas
jne
xor
pusha
adc
repz
hlt
jns
add
inc
mov
cmpsl
and
sbb
sbb
incl
daa
sub
jmp
lds
test
in
sub
ja
decl
push
mov
push
inc
pushf
mov
les
stos
inc
fidivs
cmp
and
sub
jl
bound
dec
jp
fwait
movsb
pop
aad
mov
into
xlat
iret
mov
xor
adc
pop
fisttpl
lock
mov
jl
negl
mov
daa
lods
fisttps
loope
xor
idivb
iret
adc
mov
jg
sbb
out
outsl
inc
inc
je
fsubs
loop
xchg
mov
pop
pop
adc
mov
scas
ljmp
ljmp
shll
imul
cs
dec
and
push
iret
xlat
leave
js
push
push
jecxz
call
mov
aam
push
jmp
outsb
call
and
hlt
dec
mov
call
div
testl
xlat
jecxz
mov
mov
out
imul
add
adc
or
lret
lock
decl
in
cmp
test
in
xor
pop
ret
add
mov
xchg
jnp
push
xchg
test
dec
or
mov
mov
popf
dec
jo
cmpsl
int
inc
in
fstpl
jns
movsb
mov
ljmp
mov
xor
pop
fisubs
cmp
push
lods
pop
cld
scas
shlb
pushl
std
inc
pop
gs
repz
lret
sub
push
add
lcall
push
push
jecxz
aas
arpl
jmp
mov
jg
mov
outsl
lock
dec
ja
sar
jmp
and
mov
jnp
mov
cmpsl
sub
mov
lret
enter
dec
test
adc
mov
push
mov
add
sbb
adc
rcrb
lcall
xor
inc
xor
daa
fdivl
xchg
mov
loopne
sti
mov
push
sbb
pop
inc
sbb
addb
and
jmp
sar
xchg
mov
push
cmc
mov
stos
push
cli
push
or
iret
mov
cld
or
pop
add
ret
jp
push
inc
mov
xor
clc
div
xchg
fistps
xchg
lahf
mov
cmp
jae
xchg
lock
cmc
mov
mov
mov
decl
xchg
dec
push
adc
pop
enter
fidivs
pop
imul
movl
call
loopne
iret
mov
out
inc
mov
loop
loope
adc
mov
xor
cwtl
jnp
call
mov
and
call
js
nop
pop
or
mov
setp
lcall
aad
xchg
mov
cmp
mov
lret
push
outsb
mov
shl
movsb
add
lcall
sbb
add
fbld
jno
mov
push
hlt
fcoml
pop
jg
jmp
outsl
std
jp
add
pushl
cmpsl
xchg
sbb
cmp
mov
mov
subb
lret
push
adc
imul
ret
mov
jns
stc
ret
cmp
out
mov
xlat
add
adc
xor
cld
inc
out
add
dec
rolb
mov
xor
fldt
push
jne
in
es
sbb
repz
popa
call
xor
decl
or
fs
xor
jmp
adc
das
mov
sbb
div
aad
adc
ret
push
jbe
test
incb
mov
aam
inc
fucom
push
in
pusha
xor
fcomps
fbstp
aad
mov
xchg
aas
mov
inc
mov
sti
inc
mov
add
add
fcmove
clc
and
pop
and
xor
jns
pushf
jnp
and
loop
dec
and
aam
sti
gs
call
mov
lods
pop
fs
jb
pop
mov
shl
dec
inc
push
or
cmp
xor
xlat
push
nop
icebp
ljmp
sahf
inc
inc
enter
rep
mov
pushl
pop
sar
lcall
add
dec
and
stos
repz
lea
rcrl
scas
mov
aam
or
add
lea
fcomps
int3
dec
xor
jnp
xchg
pushl
sub
andl
add
lds
jge
mov
decl
jmp
call
pushf
xchg
addr16
imul
mov
aas
pushl
cli
inc
aam
sti
aam
adc
jnp
jo
lea
sbb
mov
dec
mov
gs
clc
incl
sub
cmp
mov
insl
mov
xchg
mul
mov
or
or
daa
jecxz
push
pusha
daa
dec
insl
arpl
icebp
xor
cld
pop
popl
jle
dec
mov
xchg
mov
push
inc
stos
popa
addl
adc
pop
sbb
pop
pushf
cli
and
xor
mov
lahf
insl
xchg
cmpsb
movsl
incl
dec
ficompl
popf
out
add
sub
je
mov
mov
incb
jno
cmc
shll
sbb
dec
std
decl
fwait
pop
lea
dec
jb
sar
fcoml
jmp
sti
or
inc
out
test
adc
push
lahf
and
scas
mov
mov
fisubrl
mov
jg
hlt
in
jo
inc
or
shll
dec
xchg
popf
sbbl
push
lahf
sbb
mov
enter
stos
mov
push
or
or
jmp
in
dec
pop
call
negl
xchg
mov
daa
xchg
add
push
adc
int3
mov
shlb
lods
aas
xchg
repnz
push
and
mov
jbe
inc
and
popa
sti
adc
inc
in
cltd
inc
cmovne
xchg
mov
mov
and
jmp
xor
xchg
mov
insl
mov
lods
ss
mov
cli
dec
movsb
js
pop
call
mov
xorb
je
ljmp
decl
inc
or
scas
dec
mov
jge
xorl
adc
lea
data16
sahf
orl
mov
push
das
cmp
ret
cmp
sbb
in
loope
pop
adc
inc
dec
repz
popa
lods
rcrl
sbbl
adc
in
sbb
sti
test
cli
int3
lahf
mov
int
mov
dec
add
incl
in
xchg
xor
ljmp
cmpl
lea
decl
fs
fwait
dec
cwtl
insl
xlat
in
pop
and
push
ret
pop
push
iret
push
cmp
jmp
jmp
inc
jge
aad
std
orb
or
pop
cwtl
push
jl
dec
loop
mov
mov
inc
rcrl
jmp
cld
dec
lahf
shrl
and
test
dec
test
cltd
in
ljmp
push
jo
inc
cltd
sarb
int3
push
cwtl
cwtl
sar
call
incb
test
in
mov
stc
ljmp
sub
adc
mov
jl
ljmp
lods
push
xchg
xor
ss
mov
or
aaa
into
push
pop
inc
iret
aaa
pushl
cmp
sbb
xchg
fidivrl
sarb
jns
ljmp
ljmp
shrb
cld
les
sub
es
ljmp
lock
movsb
xchg
jns
cld
fists
xlat
mov
mov
sahf
mov
subb
or
xor
pusha
shr
out
pop
aaa
in
push
cmp
jae
xor
ljmp
mov
mov
fadd
xor
div
or
xchg
cwtl
jg
jg
xchg
xor
sub
out
cmc
pop
pop
dec
jns
jmp
adc
pop
pop
push
push
jg
push
imul
orl
into
popa
mov
cmp
out
jl
test
out
jae
out
xchg
psrld
push
dec
cmpb
std
out
adc
xor
ss
call
pop
pop
fnstenv
inc
cmp
ja
xchg
out
lds
mov
pop
mov
pushf
adc
pusha
out
adc
xor
aad
sub
cmp
push
fadd
out
sti
es
in
sbb
xchg
stos
ficoms
lock
or
adc
into
and
sub
jecxz
ljmp
xor
pop
pop
cltd
inc
dec
pop
roll
mov
inc
in
jecxz
test
into
pop
out
incl
sbb
pop
mov
cmc
dec
dec
mov
mov
push
bound
inc
fldenv
dec
fisubrs
dec
enter
ljmp
lahf
ret
and
ss
insl
in
in
push
sub
mov
xor
adc
adc
pop
cmp
xor
or
fsubr
pop
int
or
cwtl
loopne
dec
pushf
inc
mov
lcall
test
int
popf
add
xorl
mov
xchg
xor
and
add
ljmp
es
dec
inc
ljmp
adc
or
jmp
int
xchg
fildl
lds
imull
pop
into
or
decl
leave
add
push
adc
les
gs
lods
inc
pop
incl
ja
xchg
movsb
xchg
dec
mov
aad
pushf
dec
or
xchg
adc
mov
test
incl
sbb
pusha
cmp
or
jg
xchg
cmp
sub
cmp
lahf
mov
cmove
test
bound
call
orb
push
lcall
and
pop
push
sub
jg
in
or
fiadds
scas
insb
mov
test
pusha
sub
jmp
out
test
pop
jmp
out
pushf
mov
xor
mov
dec
repnz
decl
inc
jo
mov
mov
loopne
jns
add
sub
call
jecxz
mov
add
inc
addr16
ljmp
mov
scas
push
jne
es
incl
clc
adc
rcrb
test
and
mov
inc
jecxz
and
incl
lahf
loopne
fists
sbb
jb
lcall
leave
stos
adc
adc
and
jnp
dec
ljmp
js
sbb
ret
repnz
fnop
iret
lods
dec
mov
mov
push
jp
ljmp
mov
dec
fdivrs
and
mov
dec
inc
mov
mov
iret
filds
push
mov
add
mov
enter
push
or
add
jl
mov
adc
cld
dec
add
sbb
mov
shrb
out
jne
mov
inc
dec
sub
xor
or
loopne
pop
cmp
jbe
mov
lods
push
push
into
adc
or
ljmp
test
mov
push
pop
dec
inc
cli
imul
cld
mov
lahf
cltd
xor
sbb
jmp
xor
jp
ret
mov
mov
stos
movq
sub
or
mov
decl
in
data16
shrb
pop
jnp
jbe
and
lds
mov
lods
adc
cld
fcompl
repnz
and
mov
mov
xchg
sbb
je
pop
fistps
xor
incl
jb
and
jmp
or
out
and
mov
jle
jge
dec
dec
imull
rcr
loop
call
cld
push
jo
in
cmp
testb
ljmp
jb
out
mov
repz
out
fdivl
frstor
or
mov
je
inc
cmpsl
mov
mov
adc
shll
ret
add
push
decl
push
sbb
mov
ss
inc
shrl
decl
lock
push
cmp
jmp
inc
mov
jno
push
or
and
icebp
or
jns
or
test
shrb
ljmp
test
call
push
testl
decl
or
in
fisttpll
outsl
cs
cmp
cs
inc
sbb
aaa
bound
fcompl
movsb
inc
push
lcall
fs
jnp
ds
cli
mov
cld
mov
pop
fs
dec
xchg
pop
cmp
push
or
mov
aas
rclb
lock
and
mov
cmc
jmp
loopne
iret
idiv
cwtl
lods
xchg
cli
movsb
mov
clc
xchg
add
mov
fisubrl
adc
cltd
jmp
cltd
aas
dec
lods
add
push
clc
in
jmp
mov
sub
loop
fcoms
nop
mov
xlat
cs
fisubrl
mov
scas
test
cli
push
xchg
and
movsl
inc
aas
push
xor
sarl
ljmp
sahf
in
pop
xchg
mov
int3
lds
js
or
mov
dec
jmp
xchg
out
clc
pushl
dec
sti
xchg
testl
dec
jmp
ss
int3
pop
xchg
mov
cld
insb
pop
insb
movsb
xor
dec
adc
sub
cs
psubw
rorb
popa
lret
repnz
and
and
push
xor
je
pusha
inc
inc
aam
xchg
movsl
sub
add
xchg
shrl
hlt
jmp
xchg
scas
pop
lock
pop
and
mov
xorb
mov
mov
mov
scas
jmp
jl
jecxz
pop
in
insb
sbb
push
gs
ds
mov
orb
imul
popa
std
das
clc
aaa
cmc
cmp
jp
inc
icebp
push
lcall
fwait
insb
jl
xchg
dec
add
inc
cmp
mov
sbb
cmp
lret
mov
push
push
xchg
pushf
sub
xchg
push
incl
cmpsb
pop
leave
jge
int3
cmp
arpl
sahf
fldl
lret
fs
scas
lea
xchg
cmp
jae
dec
leave
sbb
mov
inc
sbb
fdiv
push
mov
pop
sbb
jecxz
cmpsb
add
cmp
adc
lcall
push
ja
mov
and
insb
lcall
jmp
lods
cmc
popf
dec
fildl
adc
or
mov
push
dec
pop
adc
sbb
dec
pop
test
adc
aad
sar
ljmp
mov
cmp
mov
out
xchg
cmp
aas
or
repnz
fistpll
movsb
pop
test
dec
imul
and
xor
stc
dec
xor
out
push
lds
sbb
movsl
mov
incl
pop
xchg
jae
mov
adc
or
adc
push
ljmp
insb
incl
jbe
cwtl
aam
movsb
enter
ficompl
cmp
rorl
jle
ljmp
inc
push
push
in
arpl
xchg
lds
insl
daa
push
in
pop
lcall
movsl
dec
subb
dec
js
dec
add
pushl
or
xchg
dec
stc
jne
loope
mov
push
xchg
iret
in
leave
add
and
push
add
add
cli
cmp
or
std
loop
or
movsl
push
xor
jmp
les
ljmp
in
adc
negl
mov
cld
xchg
flds
jbe
repz
fcomip
xor
xchg
adc
jecxz
push
popf
testl
cmp
or
cmp
sub
pusha
iret
sahf
push
jp
jl
mov
xchg
jp
popf
lret
aam
dec
jle
jmp
popa
cmpsb
arpl
out
imul
or
mov
insb
mov
push
xchg
aad
dec
mov
sub
subb
ret
lcall
mov
cltd
adc
lds
fdiv
cmpsb
adc
inc
andl
add
cmp
cmp
hlt
jno
sub
leave
inc
adc
dec
scas
loopne
pushl
sub
push
je
arpl
stos
jae
xlat
addr16
sti
sbbl
mov
push
movsl
out
pop
aad
jecxz
jle
in
and
xor
push
shll
lret
stos
push
add
jnp
inc
sub
daa
fmuls
xor
jmp
jmp
mov
mov
sub
jmp
cmpb
test
arpl
mov
jp
mov
stos
nop
out
jnp
cmp
push
pop
aaa
push
add
aam
sbb
pop
ficoms
mov
xor
scas
and
cmc
sbb
cmp
pushl
lock
sub
scas
cmp
xchg
rorl
add
cmpl
jecxz
je
jmp
data16
int
pop
enter
or
repz
stos
stos
ja
pop
fidivl
jmp
sahf
loopne
dec
push
adc
jbe
sbb
mov
iret
rep
push
xchg
fs
push
xchg
lret
fcomip
lcall
dec
lcall
pop
aad
xchg
xchg
les
jae
dec
mov
mov
fidivs
mov
push
jmp
in
mov
out
clc
sub
cmpsb
mov
adc
adc
int
or
mov
int
mov
cmp
inc
add
mov
mov
or
jnp
and
pop
imul
fdivrp
pusha
cld
ljmp
mov
adcb
jne
xor
decl
bound
pop
adc
pop
movsl
mov
mov
fwait
lea
insb
lock
decl
or
aad
cltd
jb
aas
and
pop
out
xchg
fidivrs
fdivrs
xor
stos
cld
shl
mov
dec
jne
add
inc
clc
insb
xor
inc
fiadds
mov
add
pop
repz
dec
ds
push
push
into
jl
call
mov
jo
xor
cmpsb
test
mov
sti
test
dec
cs
pushl
inc
mov
mov
outsl
jnp
adc
aam
jl
mov
mov
sbb
lcall
push
aam
xchg
sahf
aam
push
outsl
adc
cmp
bound
ljmp
clc
popf
stos
xor
pop
cmpsb
inc
or
add
adc
decl
fucomp
cmpsl
adc
inc
cli
mov
mov
icebp
fistpll
mov
ljmp
icebp
mov
fidivrl
jae
mov
push
negl
int
cmp
dec
push
jbe
sbb
ljmp
fwait
or
mov
adc
inc
or
cmp
stos
cmc
sbb
xlat
ret
mov
outsb
idivb
sbb
jmp
loopne
push
fmuls
xor
mov
shl
xchg
xchg
imul
xchg
cmp
cli
mov
dec
faddp
test
adc
pop
dec
jge
stc
loop
lahf
cmp
stos
imul
ljmp
push
nop
push
cmp
jmp
pop
out
dec
dec
imul
lahf
jmp
inc
mov
adc
mov
push
mov
mov
fstl
dec
pop
shrl
push
insl
loop
push
inc
repz
outsb
ret
sbb
loope
test
test
out
jmp
fsubs
decl
pop
loop
out
arpl
add
call
imulb
repnz
or
dec
ljmp
pop
in
xor
sub
mov
shrb
int
xor
mov
jmp
cmp
imul
ljmp
sub
and
inc
das
jp
int3
dec
ret
mov
jg
out
rorl
jle
xchg
shrb
shld
mov
inc
jne
hlt
inc
fs
outsl
lret
lock
or
sbbl
enter
adc
add
xchg
in
inc
pushf
js
inc
jge
xor
xchg
rcl
adc
sub
inc
and
xor
lea
pop
insl
les
in
mov
mov
out
fwait
cmpsl
iret
ret
lods
decl
int
clc
adc
ret
lahf
dec
xor
push
andb
testb
out
pop
aam
repnz
sbb
pushf
iret
iret
jg
or
in
in
mov
std
pop
std
mov
pop
fstl
ficoml
or
rcrb
lds
mov
iret
cmp
pushl
add
xchg
xor
into
sahf
pop
sub
mov
scas
xchg
sarb
nop
gs
ljmp
mov
faddl
cmp
imul
aaa
mov
arpl
fnstcw
dec
jg
or
movlps
cmp
mov
adc
nop
dec
pop
into
mov
xchg
push
test
lcall
push
adc
mov
add
xor
lods
shll
add
push
xchg
pop
cmpsl
das
cmc
decl
and
popa
cmp
mov
movsb
pop
hlt
push
lret
enter
sarl
adc
cld
dec
mov
push
leave
or
pop
dec
stos
mov
dec
mov
jg
add
xor
fs
fildll
setnp
aad
pop
aaa
imulb
out
test
fstl
loop
adc
jle
cmp
pop
pusha
mov
mov
nop
dec
aad
dec
push
xor
ficompl
ret
mov
dec
gs
js
push
sarb
test
pop
mov
or
sbb
and
jmp
push
out
push
sbb
js
jo
push
add
push
mov
aam
je
mov
dec
jmp
adc
xchg
out
cli
sbb
dec
pop
aaa
into
mov
cltd
inc
in
dec
mov
fists
rcrb
pushl
js
dec
movsb
and
fiaddl
lahf
pusha
or
mov
adc
cs
or
jmp
add
jns
out
scas
cmp
dec
lcall
mov
mov
and
mov
aaa
rcl
lods
or
sbb
lods
ja
movsb
jmp
push
xchg
push
jecxz
xor
xchg
sub
fimull
lods
push
pusha
sbb
outsb
jge
out
orb
mov
jo
xor
pusha
mov
xchg
xor
xchg
mov
cmp
aaa
jo
xchg
int
incb
pop
inc
leave
repnz
mov
cld
ljmp
gs
cmp
or
insb
aam
rcll
mov
jmp
xlat
or
pop
push
js
cli
adc
filds
flds
jbe
pop
icebp
cld
inc
imul
mov
push
and
add
inc
repnz
and
inc
or
cli
ljmp
testl
or
lods
jmp
push
jne
sti
jmp
mov
cs
ljmp
cli
int
ja
adc
enter
adc
xchg
std
add
push
loop
je
add
dec
lcall
and
jg
adc
notb
frstor
add
ljmp
clc
fildll
in
xchg
mov
lock
ljmp
call
scas
and
jecxz
dec
or
rorb
les
inc
movsb
jg
sbb
loopne
mov
imul
xor
add
nop
pop
cli
mov
xor
clc
aas
in
jl
lods
aam
sbb
jbe
xchg
fst
mov
cmpsl
sub
or
fdivs
decl
gs
jmp
cli
push
push
jbe
cli
add
add
dec
xchg
cmc
decl
inc
cmp
out
cwtl
push
mov
nop
into
xor
and
js
lcall
or
xchg
mov
pop
sbb
lcall
xchg
cmp
fcoml
dec
out
dec
sub
adc
movsl
inc
lcall
shr
xlat
fdivrl
mov
leave
mov
mov
les
sub
jmp
dec
mov
sbb
sbb
fs
add
push
or
add
je
lea
fcomip
decl
inc
dec
cmp
jb
aam
or
push
jge
sbb
cli
test
pop
rcl
gs
rep
or
jmp
sar
pusha
xchg
jmp
push
jg
and
fcomip
inc
test
mov
xchg
xor
sbb
out
and
inc
scas
xor
xor
add
mov
xor
or
dec
incl
ret
jle
loop
jmp
fprem
mov
outsl
cli
fadd
fsubp
jle
pop
cmpsb
sub
dec
push
fcos
fidivrl
pop
cltd
fisubrs
cmp
out
mov
mov
in
leave
int
jge
mov
test
inc
dec
sub
lods
repz
frstor
cmp
pop
dec
mov
pop
call
addb
mov
xor
aas
setno
jo
xchg
jecxz
nop
repnz
dec
std
imul
jmp
push
out
dec
mov
adc
movntq
out
imul
jns
pop
xchg
or
jmp
mov
enter
sbb
call
mov
xchg
cmpsl
loope
lret
mov
adc
mov
push
jl
dec
push
xor
adc
xchg
cmp
dec
mov
lret
adc
in
mov
fdivrl
sahf
and
lds
jl
mov
jmp
push
outsb
je
adc
jbe
xor
add
xchg
jb
adc
ljmp
clc
push
adc
push
jbe
push
fcomip
add
mov
subb
out
mov
insb
arpl
adc
push
ljmp
sti
sbb
cmp
and
ljmp
out
push
out
or
xchg
ljmp
lcall
sti
aam
or
push
xor
add
out
stc
xor
inc
xchg
add
pop
outsl
xchg
mov
xchg
pop
push
jl
jmp
push
jp
fimuls
pop
mov
scas
pop
mov
lcall
js
sbb
pushl
inc
push
cmp
addr16
dec
adc
cltd
clc
pop
sarl
pusha
lcall
mov
lcall
xchg
stos
jp
aaa
fwait
mov
incl
mov
sbb
in
fimull
inc
movsl
orl
lods
pop
inc
addr16
test
movsl
clc
jp
std
dec
mov
add
out
xor
jecxz
jle
xor
push
dec
nop
xorl
fldenv
in
stos
mulb
in
data16
cli
xchg
loop
dec
lcall
jmp
mov
and
jns
pop
add
test
insl
loop
mov
arpl
fldl
lods
movsb
jl
ret
push
jecxz
std
cmp
inc
es
stos
or
xor
mov
sub
dec
xor
adc
sub
out
add
incl
mov
cli
cmc
xor
test
mov
les
jmp
orb
ret
push
bound
imul
shl
and
shrl
or
pop
decl
lock
fnsave
xchg
pop
dec
mov
mov
push
test
jnp
fnstsw
cld
pop
and
xchg
aam
dec
and
push
imul
ljmp
cwtl
pop
inc
enter
jbe
outsb
clc
dec
mov
cmp
xor
call
out
outsb
push
mov
cmp
pop
arpl
push
jne
dec
xchg
in
push
fbstp
fmul
lods
jmp
ret
xor
sub
mov
pop
pop
push
mov
or
xchg
outsl
stc
aaa
cmp
sbb
mov
ret
imul
mov
repnz
adc
jl
xchg
xor
sub
cmpsl
out
adcb
cmp
lods
mov
mov
and
push
enter
incl
jns
fcoms
and
call
popa
pushl
pushl
xchg
jae
sbb
lret
and
push
or
aaa
fs
ljmp
push
repz
out
add
jns
lcall
scas
push
decl
inc
mov
ja
fidivl
mov
out
xchg
mov
push
mov
call
push
jmp
xor
fwait
mov
dec
mov
mov
js
loopne
decl
sbb
mov
xchg
aas
je
imul
and
cmp
inc
inc
std
jns
repz
ja
incl
aaa
add
insb
ljmp
jle
jp
mov
fs
in
sbb
mov
push
jl
es
in
pop
imul
std
lcall
loope
int
es
xor
pop
je
adc
and
dec
add
sub
add
dec
gs
mov
jmp
xchg
xor
mov
fwait
ljmp
mov
aad
mov
jnp
fdivr
mov
loop
jecxz
cwtl
mov
sbb
in
std
aam
and
dec
fisttpll
fnstsw
nop
lahf
push
inc
xchg
mov
inc
mov
dec
mov
lret
cli
decl
fwait
repz
fnop
fisttpl
dec
push
push
sarl
clc
js
insl
add
out
fs
adc
and
dec
mov
add
incl
add
push
inc
bound
call
mov
xchg
dec
loopne
push
pop
add
cmp
in
push
jns
lods
sub
inc
cmpsl
cmp
jle
jno
enter
xor
jmp
jl
icebp
call
addps
pop
and
push
lods
jecxz
fsts
pop
cld
stos
xlat
and
pop
in
xchg
sbb
dec
mov
jg
lock
push
push
icebp
scas
imull
xchg
ret
mov
cmpsb
pop
ja
shr
jecxz
rcrl
lcall
xchg
mov
andb
testl
mov
or
outsb
mov
xor
push
cmpl
es
add
nop
dec
xlat
pushl
push
add
pop
jbe
sahf
cmp
pop
push
mov
test
mov
aam
fcos
pushl
inc
call
adc
incb
jb
xchg
int3
enter
in
mov
jmp
jno
std
pop
or
dec
testl
pusha
sbb
ret
jnp
sbb
jmp
mov
and
sbb
sub
dec
xchg
jge
pop
loopne
cmp
lret
in
incl
mov
ljmp
or
xchg
cmp
cwtl
shrl
stos
scas
sub
pop
sbb
lret
add
call
inc
xor
shr
fbld
sti
out
std
mov
and
ljmp
fs
sbb
pop
pop
add
cmp
pop
test
pusha
jb
ljmp
or
pushf
xorl
mov
and
push
cs
xchg
add
adcb
pushl
pop
ret
incb
xchg
and
jae
mov
inc
jl
add
jae
call
cli
xor
push
inc
adc
inc
mov
jp
shl
shl
pop
mov
cmp
mov
bnd
in
inc
jg
fisttps
cmp
fnsave
pop
fcmovne
push
sub
cmp
push
loopne
incl
std
stos
pop
mov
xlat
loop
cld
and
push
push
movsl
cmc
lcall
loop
fldenv
and
out
dec
inc
lcall
jb
lret
stos
dec
cs
mov
xor
ds
cmc
xor
call
push
je
enter
cld
adc
out
mov
in
repnz
add
pusha
test
push
or
in
pop
in
lods
push
sti
jnp
xor
add
fdivr
call
fcmovu
shrl
jbe
jae
ficoms
ss
pop
outsl
mov
lea
popf
sub
mov
mov
sub
ds
sbb
cmpsb
stc
int3
adc
and
jae
sbb
scas
sbb
decl
ss
push
push
push
sbbb
fistl
js
push
mov
lcall
ljmp
mov
rcrb
call
sarl
arpl
jg
fists
adcl
ds
nop
inc
sti
sub
cmp
out
nop
inc
or
rcrl
sbb
jp
dec
cmp
sub
ljmp
shl
push
outsl
push
xor
icebp
xor
mov
cltd
cwtl
out
sub
icebp
push
fcomps
xor
in
cmpsb
leave
std
mov
loopne
dec
popf
and
in
cmp
mov
xchg
jmp
icebp
mov
jge
cmp
jl
adc
mov
cwtl
push
and
ds
in
ror
shlb
dec
jmp
inc
aas
jns
jne
ljmp
and
outsb
adc
rcll
push
out
mov
mov
cmc
in
dec
inc
push
inc
hlt
pop
add
jne
stos
pop
rorb
testl
or
or
lock
pop
adc
add
hlt
inc
lcall
cli
cmp
lahf
call
es
dec
popa
out
cli
fisttpll
dec
jae
dec
dec
cltd
and
and
cmp
inc
ds
jmp
fnstsw
ss
mov
fcoml
xor
test
js
jge
sti
and
aas
add
dec
andb
rcrb
and
shl
pop
cs
cmp
fnstenv
pop
mov
or
pusha
lock
mov
fdiv
andb
inc
pop
inc
lea
aam
sbb
add
dec
adc
je
outsl
call
rclb
mov
imul
rorl
pushf
inc
mov
iret
sub
setge
mov
lcall
xchg
push
popf
mov
sti
mov
js
arpl
lea
cmp
incl
mov
adc
out
cmc
icebp
notl
mov
mov
mov
fstpt
movsb
popa
jle
mov
mov
icebp
jmp
cld
incl
ficomps
jnp
and
negb
inc
clc
repnz
fsubrl
push
and
pushl
lods
sub
imul
and
xchg
jb
shlb
jge
sbb
mov
stos
mov
cmp
cld
push
and
adc
pop
jns
test
pop
and
call
mov
insl
loopne
in
push
test
cmp
mov
int
pop
test
rclb
dec
cmc
lahf
sub
add
rol
xchg
call
aam
fwait
shrb
les
incl
lcall
outsl
imul
imul
ljmp
dec
jnp
lods
and
pop
pop
mov
inc
inc
sbb
out
es
jle
lds
pop
imul
daa
jle
or
or
jmp
cmp
testl
lret
out
cld
lcall
cmpsb
mov
and
mov
repz
aam
ficompl
out
clc
ljmp
aaa
cmp
aas
pop
fnstcw
xor
clc
pop
jmp
jae
sub
in
jge
fimuls
call
mov
hlt
sbb
andb
sahf
gs
xchg
pop
sbb
mov
ljmp
sub
xor
mov
xlat
rorb
ret
mov
dec
pushf
sub
jmp
sub
mov
iret
push
inc
in
jb
sub
enter
lods
test
fwait
lcall
sbb
test
scas
jnp
cmp
add
xor
imul
push
mov
and
jno
xor
insb
lds
out
sbb
lods
call
sbb
mov
cmpsl
and
push
out
out
or
mov
pushl
cwtl
pop
mov
pop
inc
outsl
clc
rcll
pop
mov
sahf
sbb
sub
in
adc
and
arpl
loopne
gs
mov
push
push
sub
xor
decl
inc
cmpsl
out
subl
std
adc
shll
sub
fdivr
in
xor
clc
mov
push
loopne
loopne
test
cld
in
add
mov
sbb
cmp
push
dec
pop
cmpsl
hlt
in
pop
lea
mov
data16
mov
add
fcomi
inc
aaa
ficompl
push
cld
jg
js
xor
mov
mov
xchg
inc
es
and
cld
lcall
hlt
ss
dec
push
ds
sbb
ljmp
testl
or
dec
outsl
mov
fs
cmp
mov
ja
sub
mov
mov
icebp
ds
cmpsl
data16
cmp
fs
dec
iret
push
mov
clc
loope
xchg
xchg
enter
stc
push
mov
insl
adc
mov
cli
outsl
mov
jmp
out
jp
ljmp
push
xor
dec
cmp
jl
mov
daa
pushf
jle
pushw
sub
jle
mov
popa
lds
xor
inc
daa
add
fmull
out
lcall
aad
in
jno
test
jle
mov
test
call
jmp
xchg
mov
jbe
mov
or
cltd
jg
pusha
out
cmp
fnstcw
push
xchg
sbb
xchg
push
push
push
fwait
and
daa
orl
dec
loopne
incl
mov
enter
sbb
lods
xchg
aad
dec
aaa
and
cld
aad
fnsave
mov
pushl
xchg
add
xchg
loope
sbb
test
mov
pop
dec
repz
or
mov
arpl
inc
pop
push
mov
mov
stos
lcall
into
sahf
cmp
or
movsb
add
jns
and
decl
dec
pop
jnp
push
in
lds
leave
cmp
jo
repz
lcall
sbb
lea
add
mov
inc
xorb
push
arpl
push
add
rcll
jle
xchg
hlt
push
sub
dec
add
shr
lds
mov
outsl
mov
daa
cmp
stos
lcall
loop
stos
ret
sti
adc
je
out
inc
pop
add
fcomip
add
lods
and
test
xlat
push
mov
loopne
in
jg
movsl
popf
sbb
adc
nop
adc
insl
pop
lds
lock
jne
mov
sbb
pushl
sahf
push
pop
jae
mov
arpl
lahf
repnz
mov
cltd
movsb
lods
imul
mov
incl
add
ds
or
lret
pushf
cmp
dec
or
insl
stos
push
xlat
push
lock
decl
lock
push
out
lret
cmp
dec
arpl
fadds
mov
push
mov
enter
cmp
nop
push
addr16
jne
test
jge
shrb
mov
dec
cmp
lods
push
fwait
sbb
in
stc
inc
mov
add
push
add
imul
xlat
and
stc
add
sbbl
mov
cltd
mov
enter
movsl
js
int3
xor
lcall
mov
jnp
cltd
sbbl
mov
mov
fists
push
cld
mov
aas
push
dec
xchg
xchg
mov
cmp
xchg
sbb
aas
and
fwait
mov
decl
pop
pop
fwait
jl
cmp
jb
incl
fnstenv
mov
das
pop
hlt
mov
xor
rorl
cmp
hlt
and
test
push
mov
inc
outsl
add
loopne
pop
pop
insb
in
cmpsb
inc
dec
pop
mov
popa
add
mov
cmp
hlt
int3
dec
into
in
mov
add
mov
leave
ret
jo
mov
push
pop
jo
jmp
cmc
dec
inc
mov
adc
jp
xor
dec
decl
lcall
fisttpl
lock
inc
insb
mov
sub
pop
clc
movsl
mov
call
dec
mov
roll
adc
aaa
filds
shrl
cmp
orl
ds
inc
mov
mov
cmp
xchg
sub
push
ret
popf
fsubl
push
pop
mov
in
incl
mov
call
xor
and
push
pushf
call
call
jbe
ljmp
ss
push
repnz
mov
int3
fnstsw
nop
sub
mov
cs
in
jmp
mov
xchg
dec
repnz
fdivrs
cmp
push
push
pop
outsb
mov
movsl
mov
push
loop
xchg
sar
mov
insl
or
daa
xchg
shrl
and
push
in
rorb
jg
ret
jle
jp
movsb
dec
imulb
mov
jmp
stos
and
call
es
sarl
jp
scas
stos
xlat
add
jne
push
lods
push
jmp
mov
add
fst
pop
xchg
cmp
lahf
mov
jmp
aas
jno
or
dec
lock
mov
in
popa
into
ror
fistpl
aad
mov
aas
imull
pushl
dec
nop
ds
insb
inc
not
and
xchg
pop
cli
cmpsb
dec
out
inc
sub
fnstsw
inc
daa
xchg
test
mov
repnz
mov
xor
inc
je
mov
clc
lahf
in
pop
inc
pause
jbe
add
cmpsb
jo
mov
cwtl
in
push
dec
lcall
sub
xor
shlb
push
cs
js
daa
add
pushl
inc
or
pop
aam
rcl
ljmp
jno
pop
fnsave
notl
incl
sub
lock
imul
or
insl
push
inc
or
jge
arpl
dec
aas
mov
imul
jnp
jg
lcall
aaa
mov
lods
sub
mov
pop
mov
incl
mov
lock
mov
push
outsb
lret
xchg
xor
ljmp
dec
xlat
lea
ror
ret
add
cmp
pop
xor
out
scas
jmp
pop
mov
mov
int3
scas
jg
cwtl
pop
push
push
inc
movsb
addr16
lcall
adc
or
call
dec
rcrl
fcom
cmpl
hlt
addr16
pop
adc
incl
std
sbb
cmpsl
cmp
inc
je
inc
fnstenv
inc
das
test
or
sub
dec
or
mov
jle
js
in
jo
push
push
adc
push
ds
sahf
pop
cmp
ljmp
cmc
cmc
or
or
movsl
lret
dec
not
adc
pop
inc
mov
adc
call
mov
push
push
loop
dec
dec
xor
mov
dec
jle
adc
in
dec
mov
icebp
test
fdivrl
pushl
repz
dec
mov
adc
and
or
sti
lret
loopne,pn
sub
add
jle
dec
mov
outsb
call
jmp
mov
stos
push
sub
imul
jecxz
repz
cmc
mov
jg
jmp
push
cmp
push
sbb
jecxz
push
pop
icebp
lock
movsb
adc
dec
xchg
out
clc
call
lods
dec
and
sbb
xchg
and
mov
sub
scas
ds
xchg
pop
cmpsb
pushl
repnz
and
icebp
pop
pop
movsb
mov
jp
orb
mov
sar
scas
or
pop
sub
arpl
dec
int3
test
push
ret
lret
outsl
sub
sub
ljmp
in
call
int
inc
xchg
dec
fadds
cmp
add
jbe
xchg
cld
test
add
dec
or
pop
push
inc
push
lods
mov
add
arpl
mov
repz
roll
mov
cmpb
mov
sub
hlt
jg
iret
cmp
ljmp
popa
cmpsl
rolb
xor
jno
sbb
arpl
add
jp
sub
decl
xor
mov
or
mov
push
inc
jg
call
ds
cli
mov
add
sub
mov
cmp
test
movsb
cld
pusha
pop
mov
incl
lret
jo
faddp
jns
sbb
inc
das
and
mov
jp
fmull
inc
ret
decl
lcall
push
add
and
jge
mov
shrl
out
push
loope
pushl
incb
mov
cmpsl
sbb
out
fdivrs
push
ret
mov
call
push
mov
xchg
cmp
in
pushl
push
int
pop
lock
ljmp
repz
out
xor
fildll
pushl
call
or
popf
or
mov
inc
movhps
add
adc
push
xor
mov
inc
pop
in
sub
lcall
cwtl
fwait
xor
mov
or
insb
pop
or
test
push
jge
pop
cmp
enter
incl
push
sub
push
push
out
int
mov
dec
aam
inc
sbb
ljmp
repz
jns
in
insb
inc
ljmp
adc
clc
and
fistpl
adc
inc
push
pop
push
incl
sbb
mov
frstor
es
and
ja
or
cmc
xor
xchg
sub
mov
jbe
lret
add
or
data16
aas
ds
lcall
mov
xor
in
sub
mov
lcall
cld
pushl
add
out
xchg
cli
xchg
or
mov
movl
dec
and
aam
repnz
mov
loope
call
adc
divb
out
xchg
int3
or
sbb
lcall
aas
push
into
lahf
inc
dec
mov
pop
cmp
inc
idiv
push
out
dec
popf
outsb
js
aad
out
cmpsl
dec
subb
dec
xor
adc
shll
incl
push
dec
dec
mov
mov
adc
mov
or
jno
jno
pop
lock
inc
pusha
push
add
js
inc
cmp
scas
and
test
mov
inc
push
mov
out
push
pop
pop
mov
fsubrl
jno
cmp
xor
les
ljmp
sub
pop
popf
fists
out
gs
repz
mov
mov
inc
clc
scas
mov
test
jg
sub
ret
mov
dec
arpl
cld
xor
incb
sbb
and
arpl
iret
sbb
idiv
inc
lahf
in
scas
ds
inc
ljmp
mov
int3
mov
push
xor
cmpsb
je
dec
push
orl
push
lcall
pop
repz
lock
mov
out
dec
stc
ficoms
and
ljmp
loop
mov
add
insb
mov
mov
rclb
enter
lcall
sbb
push
out
xchg
pop
xor
dec
mov
push
inc
jb
call
mov
add
and
outsb
add
movsl
adc
mov
mov
push
sub
lret
mov
in
xchg
xor
dec
mov
lock
jmp
sub
ljmp
adc
add
push
xor
test
daa
cmp
dec
push
xchg
pop
scas
in
cmp
pushl
sbb
jae
gs
dec
test
mov
cmp
mov
push
xchg
jg
dec
inc
push
mov
iret
push
pop
shll
xchg
jecxz
sti
jnp
pushl
mov
movsl
push
xchg
inc
inc
cwtl
inc
pop
setle
adc
scas
dec
loope
and
inc
xor
scas
xchg
jmp
pushl
and
scas
gs
js
dec
add
jae
into
dec
cmp
mov
decl
pop
cmp
ficompl
xchg
ds
adc
or
xorb
adc
lcall
ret
mov
test
cmp
mov
xchg
dec
shl
jmp
repnz
jo
xchg
je
mov
into
mulps
add
cmpsb
into
xor
cld
push
cmp
mov
pushl
cmp
aad
add
cld
orl
stos
push
test
decl
xchg
ds
or
dec
mov
xchg
sbb
jle
xchg
push
xor
xor
inc
ds
pop
jo
pop
mov
lock
mov
mov
pushl
push
fs
gs
mov
adc
xchg
clts
inc
mov
jmp
outsl
clc
jmp
out
lods
lahf
sarb
fstpt
pop
iret
cmp
mov
shl
cli
dec
imul
hlt
call
bound
jl
xor
lret
popf
icebp
pop
push
ud2
ds
sub
fwait
sub
dec
dec
sarl
clc
scas
cmpsl
xchg
jbe
outsb
into
shl
test
rcr
push
xchg
lcall
hlt
clc
pop
in
sub
or
push
pop
pushl
test
cmp
push
push
daa
loope
stos
fcomp
cmp
lods
je
vmaxsd
mov
in
push
loope
repnz
push
loop
sbb
jg
and
sub
fsubl
xchg
pop
mov
xchg
push
jge
jbe
sbb
and
cmp
mov
dec
pushf
ja
loopnew
pop
pop
out
sub
jb
push
sub
int
cmp
std
call
mov
sub
jnp
adc
inc
xchg
cmp
ljmp
mov
sbb
int
decl
cmp
or
je
divl
repnz
push
xlat
das
negb
imul
inc
lcall
or
inc
add
mov
lret
push
pop
adc
fwait
sbb
push
cmp
jg
inc
popa
sub
jns
fdecstp
repnz
push
int
cmpb
call
mov
out
insl
scas
lea
pop
loopne
ja
call
std
jo
push
loop
es
sub
adc
push
push
pusha
fimull
push
incl
outsl
cmp
xor
movsb
or
insb
loopne
clc
in
push
fidivrl
decl
pop
or
cwtl
add
pop
and
jmp
sbbl
negb
imul
fldenv
pop
test
sub
adc
inc
mov
outsb
data16
or
in
fldcw
sub
nop
aad
stc
cld
mov
mov
decl
or
imul
mov
stos
lret
fisttpl
cld
or
cmp
jo
call
std
mov
add
mov
mov
add
sarl
mov
cmp
sub
mov
in
enter
add
pushf
cmp
jp
lahf
pextrw
sbb
stc
add
lock
pop
fbstp
mov
fldl
imul
iret
mov
pmaddwd
jp
and
imul
inc
in
add
addb
loopne
in
mull
pushf
cmp
push
pop
cmpsb
dec
shr
adc
ljmp
stos
mov
pop
ret
jge
sub
dec
sbb
mov
aad
call
aaa
pushf
push
adc
in
jo
mov
dec
xchg
pusha
cmp
fld
pushf
iret
jl
lcall
jnp
push
xor
pop
mov
icebp
add
mov
popf
cmc
incl
arpl
das
repnz
call
into
lods
dec
nop
fsub
mov
push
adc
jl
ljmp
movsl
out
inc
cmp
push
adc
dec
loopne
and
leave
rcll
mov
pushl
fs
push
loop
xchg
mov
adc
jns
jo
outsb
push
jnp
dec
testb
ljmp
call
mov
stos
mov
push
mov
hlt
mov
cltd
add
mov
sahf
into
jo
clc
pop
test
adc
loop
xor
mov
cld
leave
outsl
shrl
in
push
daa
jl
push
fcoml
cmpl
mov
lock
outsb
cmp
scas
cmp
movsb
andl
hlt
stos
ret
or
ret
out
lret
sub
fcompl
xchg
cmp
lcall
push
ss
push
jg
dec
cmp
out
fstpl
or
add
cmp
ljmp
jg
ljmp
pop
sbb
pop
movsl
jecxz
fnstcw
das
mov
call
jmp
xlat
fbld
pushf
add
into
and
leave
clc
addps
dec
lcall
test
aas
iret
notb
int
cmp
cmp
jno
jmp
jge
ja
and
or
push
or
adc
aaa
xchg
jb
mov
das
or
filds
cmp
data16
jle
mov
decl
mov
cmp
inc
jg
adc
sahf
sub
fprem
jg
push
cli
lret
movsb
dec
mov
loopne
jae
inc
sbb
mov
cli
pushl
sub
rcrb
dec
pop
mov
test
sub
decl
dec
lcall
jns
mov
jl
fisttpll
mov
call
pop
or
push
pop
mov
lret
push
mov
sbb
push
js
xchg
push
push
xor
sub
ljmp
push
inc
mov
mov
push
mov
mov
lds
mov
xlat
mov
hlt
xchg
and
pop
mov
sbb
xor
std
in
jnp
jg
out
or
pop
arpl
push
or
int3
xchg
pop
clc
inc
loop
ljmp
ss
hlt
les
and
pop
jp
dec
mov
adc
push
cmp
lea
push
cmpsb
mov
push
add
pushf
mov
lcall
xor
stos
adcl
out
mov
ljmp
int3
les
add
cmp
mov
jmp
cmp
inc
aas
pushl
push
fs
xor
dec
sbb
jb
jg
mov
mov
mov
adc
pushl
push
push
iret
jbe
jbe
jbe
mov
and
cmpb
decl
lds
jge
dec
sub
aam
shll
bound
decl
loopne
cs
add
dec
arpl
sbb
fnstcw
repnz
cmpsl
stc
decl
mov
sbb
lahf
jle
or
pop
sub
aad
and
push
xlat
inc
fimull
decl
out
stc
test
fwait
add
into
subb
movsb
mov
xor
aam
adc
mov
pop
dec
mov
outsl
gs
cmp
pop
stos
xor
jae
pop
jle
lcall
mov
int
in
mov
push
pusha
sbb
mov
adc
mov
xchg
or
shll
sbb
or
shl
add
negb
push
cmpsb
dec
jp
in
pop
iret
dec
mov
in
loop
xchg
inc
shr
sub
cli
push
popa
sub
adc
mov
ljmp
jp
cmp
lods
scas
ds
shl
lods
enter
xor
shlb
sbb
ljmp
jb
lds
xchg
push
xor
or
push
jge
xchg
in
add
dec
xlat
or
data16
clc
dec
adc
rcr
cmp
incl
cmc
dec
pop
sub
ja
icebp
int3
mov
jecxz
inc
nop
sub
xchg
sub
cmp
das
out
addb
scas
stos
rcr
lock
decl
mov
js
adc
mov
addr16
decl
jl
cmc
add
cmpb
mov
int3
and
pop
mov
psubusb
fistps
jns
insb
ljmp
clc
lcall
cli
popa
cmp
sbb
add
inc
int
inc
adc
sarb
incl
shl
addl
cmc
sub
loopne
frstor
push
dec
movsb
lea
out
mov
pushf
xor
int3
sub
out
push
outsl
sub
jmp
jle
cmp
push
push
aas
and
mov
ljmp
mov
rcll
sub
lds
adc
adc
jno
jl
sets
cli
iret
jecxz
ss
pushf
and
push
sub
xchg
dec
rol
pop
in
adc
in
and
outsb
int
inc
test
in
xchg
sti
pusha
lret
cmp
xchg
in
fsubrp
cmpsl
aad
jp
cmp
pop
fiaddl
cli
call
push
xor
jbe
shrb
inc
cmpsb
push
dec
fmul
popf
arpl
cmp
or
jno
cmp
hlt
xchg
inc
or
inc
sbb
mov
jle,pn
pop
fwait
inc
leave
sub
enter
inc
testb
fcoms
aam
cwtl
adc
call
dec
jge
jbe
ljmp
aaa
mov
scas
test
jae
repnz
dec
and
mov
lods
repz
fistpl
sbb
fs
nop
push
arpl
inc
sub
stos
sub
dec
mov
adc
jecxz
sbb
in
sub
and
leave
je
adc
dec
sub
es
cli
sar
mov
dec
cli
jmp
or
mov
lahf
push
add
repnz
daa
arpl
jp
push
or
add
in
inc
leave
sbb
cs
nop
or
sbb
add
addr16
and
insb
addl
lcall
mov
mov
xchg
adc
aad
out
icebp
inc
loopne
cmp
mov
lahf
ss
push
lods
loopne
dec
xchg
cmp
or
sbb
or
sbbl
sti
dec
or
push
out
mov
sub
push
test
sub
shlb
mov
repnz
incl
sbb
subl
xor
or
outsl
mov
xchg
fistpll
mov
decl
or
adc
sbb
push
cmpsb
adc
mov
arpl
inc
aaa
push
adc
jns
mov
push
enter
jno
and
and
outsb
inc
mov
aas
dec
mov
shlb
decl
stos
shl
xor
jne
hlt
sahf
push
loop
dec
xchg
bound
jo
call
sbb
daa
adcb
insl
ja
int3
mov
jl
into
scas
or
call
fstpl
lds
mov
mov
mov
xor
out
scas
js
and
pop
jnp
stc
mov
cmp
sub
sbb
and
xchg
xchg
pop
jmp
pop
movsl
decl
daa
or
adc
sub
dec
decl
and
pop
in
lret
mov
xchg
add
mov
xor
mov
call
sahf
pop
pop
xchg
cld
pushl
mov
mov
idivb
xor
loopne
stos
push
sub
push
call
push
jae
push
ss
xchg
cmp
pop
add
test
loope
test
insb
adc
jae
mov
pushl
pop
stos
sub
or
push
jns
loop
ds
fimuls
inc
push
mov
mov
lcall
movsb
adc
or
movsl
or
mov
adc
pop
cmpsb
pusha
daa
jbe
and
scas
jmp
mov
jbe
push
push
fnstenv
je
ficompl
jbe
or
pop
fwait
cmc
bound
sti
int3
or
add
ds
aas
idivb
jae
insb
jne
push
leave
cltd
sub
movsb
aaa
cld
mov
andl
sbb
notl
jae
out
sub
incl
jae
out
pop
or
test
mov
lcall
push
mov
ret
mov
or
push
push
fistpll
and
cmp
xchg
sbb
outsb
lock
pushl
lcall
mov
add
imul
data16
dec
test
add
mov
incl
ds
mov
inc
testl
jo
mov
sub
cmp
add
lods
push
mov
in
sub
pop
cmp
cmp
out
inc
sub
popa
loope
pop
xor
dec
and
cld
mov
sti
mov
js
aad
loopne
addr16
sahf
adc
fbld
lds
lods
mov
and
ss
adc
push
iret
push
add
incl
mov
incb
adc
popf
loop
nop
jno
imul
ljmp
cmp
in
adcl
xor
push
loop
mov
aas
scas
or
push
mov
mov
or
xor
xlat
lea
sub
jae
fcompl
hlt
lcall
scas
push
sub
popf
and
jmp
test
mov
inc
repz
xchg
xor
mov
dec
adc
rcll
sbb
pop
aad
lcall
sti
lds
mov
or
mov
or
xor
dec
jmp
bound
gs
shll
pop
mov
pop
cmp
pop
enter
es
mov
push
fidivrs
aam
lds
xor
adc
mov
fistps
xlat
inc
sbb
lods
dec
jmp
xchg
cmp
or
pop
cmp
xor
jg
or
jecxz
or
shll
cltd
cmp
arpl
loope
fisttps
pusha
mov
jg
xor
inc
aaa
cld
pop
cli
sub
nop
sbb
xchg
push
fstps
outsb
xchg
pushf
jecxz
rcrb
scas
les
scas
into
sub
icebp
or
orl
mov
movsb
and
xchg
orl
lods
mov
loopne
ficompl
and
sub
cmp
sbb
mov
jmp
jecxz
fucomip
test
xchg
adc
movsb
imul
sbb
jp
lcall
sub
push
xchg
push
inc
out
pop
adc
xor
loopne
in
mov
mov
jg
dec
lods
in
mov
pop
cwtl
aaa
jl
or
int3
pushl
aas
pop
outsb
stc
push
pop
ret
mov
in
pop
jmp
arpl
sub
sarl
adc
and
dec
fneni(8087
dec
push
out
cltd
cmp
adc
mov
mov
cwtl
xchg
sbb
sbb
fwait
imul
push
adc
lcall
stos
les
hlt
cmp
fdivrs
out
mov
js
das
xchg
fidivrl
mov
test
call
dec
ds
mov
mov
test
xor
shlb
mov
pop
sbb
repnz
fsubrl
insb
imul
or
jecxz
mov
lods
int3
adc
sub
fs
push
inc
mov
xor
mulb
adc
mov
fistps
call
cld
xchg
and
mov
js
lods
jp
mov
cmp
jecxz
shrl
clc
imul
ljmp
cmpsl
push
pop
je
sub
jge
arpl
jp
push
stos
jbe
lcall
idiv
pushl
imul
pop
or
jmp
push
lods
iret
call
icebp
jns
lcall
or
mov
ffreep
pop
pop
fstpt
in
mov
pushl
std
iret
test
gs
mov
jecxz
js
mov
xor
dec
imul
stos
add
lcall
jl
movsl
lods
dec
pop
popl
pushf
push
inc
lock
icebp
pushf
sbb
add
adc
lcall
clc
ljmp
stos
lcall
dec
or
mov
std
xchg
adc
popl
sub
fildl
add
das
inc
shrl
incl
daa
loop
mov
stos
dec
cld
lcall
inc
insb
lret
ja
rcll
incl
mov
in
leave
dec
sub
repnz
mov
es
nopl
out
push
ficoml
xor
xor
inc
push
jno
pop
xor
push
ds
pop
clc
jg
cld
push
insb
lret
and
outsl
dec
mov
xor
enter
ljmp
and
xor
cmp
ljmp
pop
shrb
arpl
jmp
ret
int
push
mov
rorl
enter
lcall
mov
call
xor
push
lods
rcr
dec
daa
mov
scas
clc
jns
cwtl
inc
adc
and
lcall
loope
addl
pop
xchg
iret
push
aaa
scas
aam
add
pop
mov
into
mov
fstl
hlt
call
sahf
std
jne
add
push
sahf
add
cmp
test
or
lcall
lcall
es
mov
xor
mov
push
jecxz
mov
pusha
sbb
call
push
sub
sub
xlat
dec
inc
mov
cmp
add
data16
in
ret
movsl
or
mov
ja
rcrl
adc
mov
and
dec
jne
mov
xorl
loopne
sub
inc
mov
jnp
ds
xor
push
das
add
xchg
lods
sub
pop
cmpsl
popa
mov
inc
mov
xor
sbb
decl
cld
xchg
test
xor
push
movsb
pop
cmp
adc
cmp
pushf
dec
pop
add
out
xchg
add
incl
adc
ljmp
xchg
push
outsl
shrl
outsb
inc
les
fcomps
in
fisttps
inc
mov
les
ljmp
clc
mov
pop
pop
fmuls
lea
jne
mov
fs
les
call
ficomps
add
ret
mov
inc
jl
sbb
jb
cmp
push
add
or
inc
sub
subb
dec
outsb
clc
das
pop
push
adc
jmp
arpl
push
sbb
mov
pusha
shlb
mov
outsb
mov
xor
lods
imul
xchg
sbb
sbb
dec
xor
daa
lahf
rorb
gs
and
lcall
cmp
out
push
enter
mov
test
mov
cs
inc
rcrl
popl
mov
push
xchg
lcall
and
jmp
sbb
sbb
sbb
gs
jb
dec
dec
xchg
and
push
cwtl
lcall
cmpsl
or
cld
xchg
cmp
jae
daa
int
mov
cltd
rorl
mov
sub
pop
dec
test
out
mov
int
repnz
pop
enter
decl
lahf
addr16
jb
imul
jbe
movsl
repz
push
sub
cmc
inc
aaa
sub
inc
or
dec
mov
or
inc
mov
dec
and
cmp
sbb
sbb
fwait
mov
dec
pushl
ror
mov
int3
mov
mov
lcall
sbb
sarl
pop
imul
nop
dec
push
pushf
pop
sub
cs
add
incl
pop
clc
inc
jl
jmp
mov
cmc
loopne
andl
rolb
mov
pushl
mov
pusha
cmp
sbb
sub
or
mov
cwtl
divb
mov
ja
neg
or
dec
xor
ljmp
cmp
outsb
lahf
out
xchg
out
cwtl
sub
mov
in
ss
clc
ljmp
xchg
mov
out
pop
pop
add
sbb
adc
decl
inc
cmc
or
ds
xor
dec
xchg
ljmp
rcll
and
pushl
outsb
cmc
pop
push
cmp
pop
inc
xchg
push
fiaddl
mov
decl
dec
mov
loopne
mov
and
enter
mov
fucom
incl
pop
enter
dec
mov
cltd
or
std
push
mov
push
incl
dec
xor
addr16
mov
or
xchg
mov
ljmp
es
fadd
outsl
cmp
mov
aam
scas
hlt
or
cld
cmp
ljmp
clc
inc
aaa
xor
imulb
in
mull
dec
jno
sbb
outsb
and
sbb
pushl
and
mov
loop
xor
dec
sub
mov
stc
adc
ss
xor
sti
in
adcl
jb
and
shrl
call
inc
cwtl
pop
and
mov
push
sub
imul
push
popa
pop
das
mov
mov
xlat
or
ljmp
xchg
and
fmuls
ss
mov
xor
xchg
stos
fnsave
and
xlat
adc
jecxz
xchg
dec
mov
jle
test
jmp
xchg
pop
cwtl
out
cld
add
adc
cs
fimuls
adc
add
jae
incl
cmp
mov
sub
jo
inc
leave
xchg
push
mov
movl
aam
jb
sbb
enter
lret
aad
fs
inc
adc
or
jge
outsl
or
mov
xchg
rcll
mov
or
pop
sub
into
or
je
push
inc
filds
faddl
gs
mov
in
stos
fiadds
push
adc
dec
fs
lea
jbe
int
cwtl
jge
push
fs
loop
or
dec
rorl
pop
push
test
mov
and
pop
loopne
gs
call
push
mov
int3
sti
loope
cmp
cmp
pushf
mov
xchg
mov
fidivrl
aad
push
mulb
sti
mov
ret
dec
adc
mov
clc
xor
ficompl
jbe
pop
jecxz
adc
xor
add
jge
std
lcall
int
and
stos
ret
xlat
dec
icebp
push
lods
xchg
notb
or
push
pop
popf
push
jmp
pushl
cwtl
jecxz
loope
aaa
dec
outsb
or
gs
cld
cld
rcl
mov
jl
sbb
jmp
mov
mov
xor
imul
aas
push
int
incl
lret
imul
mov
repnz
mov
fwait
ljmp
in
ds
sub
cli
mov
jge
jmp
loope
dec
add
incl
inc
in
scas
scas
jae
pushf
nop
fwait
test
insl
repnz
mov
xor
jp
mov
incl
push
adc
repnz
sub
enter
loope
lods
addr16
ljmp
inc
cmp
pop
mov
xchg
fdivrl
xchg
loope
dec
sbbb
inc
sub
inc
add
decl
stc
sub
stos
aas
lods
jae
addr16
mov
mov
jp
inc
cli
and
out
adc
subl
xchg
pop
mov
inc
mov
xorb
jne
cmp
push
in
fldenv
cmp
mov
scas
std
add
add
sbb
push
les
cmp
mov
lods
cwtl
push
sbb
loope
mov
push
or
push
xlat
jnp
sahf
add
test
adc
jne
aaa
fcom
rcr
pop
mov
clc
outsb
push
xor
enter
xor
jno
sahf
mov
pop
pushl
fstpt
enter
push
out
aaa
push
sti
and
out
bound
inc
test
mov
pop
or
lret
pop
js
pop
xor
dec
push
push
jge,pn
cmc
lcall
dec
repz
movsl
inc
jne
movsl
test
out
cmp
inc
push
pop
arpl
mov
nop
js
xchg
sbb
cmp
sarb
inc
pop
cmpsb
sub
xor
mov
and
mov
inc
jb
mov
push
push
lods
xchg
xchg
js
movsl
adc
cmp
aad
mov
test
outsl
jno
pop
or
xor
xchg
mov
pop
hlt
jne
leave
or
jo
shrb
data16
or
xor
add
mov
cmc
pop
jns
mov
fwait
aas
fldenv
xchg
stos
addr16
ljmp
and
push
xchg
pop
dec
xlat
sbb
pop
in
das
adc
mov
imul
sti
popf
pop
sbbb
and
pop
sub
pop
aas
and
insl
jg
and
dec
xchg
cmpsl
lret
ret
xchg
xlat
xlat
mov
pop
cmp
or
xor
add
mov
shl
sahf
dec
sbb
iret
push
jg
iret
ljmp
xchg
jo
xchg
fmulp
daa
es
xchg
and
lcall
shlb
fwait
xchg
pop
int
mov
and
out
jae
mov
daa
adc
outsl
aaa
std
lahf
jg
mov
dec
adc
out
mov
inc
push
push
aam
push
lcall
cmp
jo
sti
xor
test
std
jge
dec
inc
les
add
pop
jp
pop
sub
jns
mov
iret
or
or
dec
stos
sti
test
test
cmpsl
add
arpl
clc
popa
lahf
in
ds
jmp
adc
imul
insb
jge
jg
or
incl
and
xor
icebp
stos
in
jp
sub
lahf
leave
push
daa
pop
insb
call
jl
dec
sub
ljmp
cmp
mov
jae
jno
shrb
incl
sbb
xor
sub
icebp
pop
xor
cmpsl
sub
pop
clc
rcr
movsl
js
add
lcall
mov
in
push
icebp
addr16
je
adc
js
lret
lret
cld
pushl
xchg
je
lods
pop
call
or
xor
andb
xchg
mov
xchg
pop
dec
std
shlb
fiadds
cmp
sti
ljmp
jle
add
mov
call
iret
pop
outsl
fstpt
fmulp
lret
shll
in
jecxz
mov
out
repnz
adc
bound
cwtl
nop
sbb
negl
jns
push
adc
and
fidivrs
ljmp
xchg
imul
test
enter
add
call
movsb
mov
stos
imul
or
jg
fbstp
sub
ret
mov
jo
inc
pop
sahf
test
mov
sbb
push
call
bound
sub
inc
std
jbe
mov
out
mov
data16
cs
nop
decl
idivb
daa
outsb
xchg
jae
and
lret
popf
mov
cli
inc
dec
jne
cmpsl
dec
xorl
jle
sbb
xchg
adc
jmp
andl
aad
push
mov
incl
or
jns
adc
pop
push
or
inc
xor
cmp
lcall
add
cld
pop
sbb
mov
cmp
stc
pop
sub
sbbb
xchg
lock
jmp
aam
sub
pusha
shl
cwtl
jb
scas
sbb
sarb
idiv
and
sar
jo
incl
adcl
ss
add
sub
inc
mov
incl
lea
xchg
adc
jo
pop
mov
adc
sbb
std
and
mov
jmp
and
adc
pop
cli
mov
scas
imul
mov
and
in
dec
inc
sbb
jno
mov
fst
fidivrl
in
xlat
inc
lods
cmp
adc
mov
or
or
adc
jg
les
dec
jbe
xor
jae
pusha
cli
clc
out
lret
les
outsl
jle
hlt
inc
sub
ljmp
rclb
daa
pop
leave
mov
insl
xchg
testb
loop
in
icebp
jae
mov
jbe
call
sbb
loope
sbb
aam
jmp
push
jbe
adc
push
ljmp
incl
xchg
mov
out
ds
bound
loopne
lea
cmp
mov
add
cmp
push
call
jmp
in
xchg
inc
inc
sbbb
leave
out
add
cmp
in
sbb
mov
lcall
pop
mov
enter
ja
mov
adc
loope
sbb
dec
inc
cwtl
sbb
fisttpl
lea
andb
inc
aad
mov
fldcw
sbb
pushl
cltd
jp
mov
mov
pop
iret
xor
push
cmc
movsb
mov
pop
mov
icebp
cmp
mov
dec
and
shlb
js
pop
ret
ret
movsb
pop
jmp
sbb
icebp
out
xor
or
mov
enter
pushl
sbbb
outsl
stc
cmc
jnp
mov
dec
cmpsb
push
mov
xchg
mov
sbb
jns
push
cwtl
xor
inc
inc
cwtl
test
out
jb
add
mov
push
xchg
fwait
lds
movsl
test
or
cld
leave
mov
pop
push
in
sub
jnp
dec
mov
xchg
cmp
dec
leave
xchg
lock
inc
dec
test
dec
into
std
mov
xchg
orb
jbe
jnp
test
mov
xor
das
es
jg
incl
scas
std
jmp
cltd
push
cmc
sbb
inc
add
ss
add
ljmp
ror
add
loope
adc
mov
jbe
sbb
sarb
outsl
in
cmp
jmp
dec
pop
inc
pop
adc
movlps
fnstsw
cmpsl
pusha
sbb
jo
sahf
cmpsl
and
jo
mov
xor
jno
mov
mov
mov
popa
pop
pop
push
in
cli
and
jne
incl
cld
sbb
shll
sbb
xchg
ljmp
add
sar
out
clc
fdivrp
or
inc
sub
imul
sbb
jno
mov
dec
pop
lock
pop
fidivrl
insb
dec
scas
xchg
rcrl
xor
adc
insb
push
add
push
mov
fsubl
adc
jmp
icebp
xor
add
add
incl
test
stc
jg
sbb
sbb
cmp
int3
push
jnp
pop
lods
ljmp
inc
and
daa
inc
mov
mov
decl
shlb
icebp
lahf
pop
xchg
icebp
loop
orl
jb
lods
push
pop
lahf
or
aaa
std
dec
jle
sbb
imul
mov
adc
into
sub
and
add
dec
mul
data16
mov
lret
std
cmp
aam
mov
mov
push
ja
or
clc
adc
push
jns
xchg
pusha
shrl
loope
popf
or
fdivr
das
cli
decl
xchg
mov
mov
daa
push
dec
mov
jecxz
jns
pminub
int
out
jg
lcall
mov
pop
xor
inc
or
xchg
sbb
and
sbb
dec
dec
shlb
aad
add
mov
repz
decl
dec
stos
jne
pop
sub
push
ret
es
push
ljmp
dec
cmc
or
xchg
call
aaa
cmp
mov
jmp
lods
leave
pop
push
push
jne
dec
divl
adc
sbb
jae
into
sbb
ljmp
stos
pushf
sbb
incl
add
test
xchg
jmp
xchg
stc
shlb
std
ljmp
ss
pop
rcr
popa
cmpsl
pop
pop
mov
or
call
das
repz
dec
insl
mov
stc
xor
sub
add
jmp
sub
pushf
test
lret
ljmp
mov
xchg
mov
and
pop
mov
rcll
loop
decl
or
enter
popf
in
rol
inc
pop
push
pop
iret
ficoms
lret
or
cmp
xchg
add
mov
rcr
inc
jg
popf
mov
push
or
aad
call
xchg
xchg
out
mov
and
out
lahf
add
xchg
inc
lock
push
inc
call
pop
push
jmp
ja
clc
mov
fidivl
cmpsl
xlat
and
dec
out
inc
lods
loop
pop
xchg
pop
dec
decl
dec
cli
ds
add
ljmp
adc
dec
jmp
mov
and
enter
enter
mov
jo
cmp
mov
lods
jnp
call
dec
push
dec
cli
in
push
inc
out
push
ret
cltd
insb
dec
mov
push
xor
xchg
pop
mov
test
js
ret
movsl
adc
push
mov
icebp
test
inc
xchg
popf
lock
ljmp
inc
cmp
test
rolb
push
mov
push
add
cli
and
call
adc
push
ljmp
xor
and
lcall
rcll
test
mov
std
inc
jnp
jg
imul
adc
into
mov
xchg
cli
or
lret
jl
mov
shrb
push
cmpsb
and
push
or
or
pop
pop
movsb
mov
xor
lods
in
jns
xorl
call
or
push
lahf
jmp
mov
mov
dec
aad
cmp
sahf
cmpsb
and
call
push
mov
xchg
dec
das
dec
dec
and
adc
lcall
sub
and
cltd
jb
punpckhbw
scas
ja
inc
jecxz
sub
gs
xchg
roll
xchg
mov
lret
cmp
enter
sbb
push
push
sbb
scas
shll
adc
jle
mov
rcl
jge
dec
jecxz
inc
aas
pop
mov
push
and
int
jle
jg
ficomps
out
and
push
test
inc
ds
mov
and
push
lcall
push
int3
test
roll
in
pop
iret
xchg
ret
mov
call
mov
mov
aam
add
or
pop
in
loope
mov
int3
mov
aam
pop
push
dec
fwait
je
push
xchg
xlat
mov
call
or
push
lcall
push
mov
int3
and
push
mov
sub
ljmp
cmpsl
pop
xchg
sbb
enter
test
movsl
stc
push
cltd
mov
xchg
push
dec
ljmp
mov
add
aaa
inc
out
rcrl
rcrl
subl
mov
fcomip
ljmp
xchg
test
ret
sar
or
jg
subb
call
cli
xchg
outsb
adc
dec
clc
lcall
ljmp
je,pn
shr
dec
push
sub
adc
mov
fists
sarl
xor
xchg
ja
int3
mov
push
jns
inc
adc
test
push
in
ljmp
jp
jne
scas
ljmp
adc
out
scas
fwait
repnz
test
pusha
scas
ds
mov
mov
push
cmc
fsubs
jne
mov
aam
mov
scas
sub
push
add
jmp
shll
cmpsl
dec
push
outsb
test
mov
rorl
mov
mov
ljmp
pop
or
and
push
lock
xchg
sub
pop
movl
in
movsl
mov
punpckldq
lahf
sbbl
sub
int
ds
or
and
hlt
cwtl
cmp
ret
ja
jae
dec
xchg
in
push
sbb
out
in
xchg
push
and
fisttpll
mov
div
push
scas
xchg
rcl
leave
ljmp
punpckhdq
push
scas
mov
lods
shrb
push
fsubl
xchg
mov
mov
jne
inc
cwtl
jmp
outsb
mov
mov
out
push
decl
adc
mov
repnz
outsb
enter
iret
loop
dec
cwtl
inc
test
icebp
popa
xchg
ret
fldt
incl
mov
xchg
cmpsl
inc
in
test
out
jle
movsb
data16
jl
ret
loope
mov
add
in
ljmp
push
out
and
dec
ret
out
sbb
popa
mov
xchg
ja
bnd
loop
or
mov
andl
ret
out
dec
addr16
mov
or
je
sub
aas
icebp
fcmovnb
shrl
lock
jne
adc
cld
jg
in
adc
lods
clc
sti
leave
test
loopne
test
or
mov
stc
mov
push
push
push
lret
jmp
inc
and
jbe
insl
add
clc
add
mov
lock
outsl
xchg
lcall
pop
dec
mov
dec
stc
push
xchg
sbb
imul
rcll
loope
ds
xchg
jg
push
push
ss
movsl
cs
mov
and
das
mov
sbb
dec
std
lcall
out
iret
leave
inc
test
aaa
jle
push
push
out
push
jmp
sub
fcomip
outsl
cltd
ljmp
pop
ja
or
aam
ror
stc
lods
jbe
ja
decl
adcl
inc
cmpsb
push
or
sub
dec
incl
pop
out
dec
pop
lcall
cld
call
cld
xchg
loope
and
mov
xchg
scas
jno
jne
jecxz
cld
jecxz
push
leave
aam
jle
jnp
and
ss
std
pinsrw
lock
cmp
and
out
cmp
shll
pop
aas
lcall
push
and
pop
pop
mov
dec
mov
sarb
dec
sub
xchg
mov
xchg
loop
into
popf
mov
sti
inc
sbb
into
mov
popf
mov
stc
push
jle
sar
jg
jbe
cmp
outsl
lods
jo
popf
jnp
jl
push
loopne
mov
xchg
andb
lds
mov
stos
lcall
test
adc
cs
mov
and
fsubl
adc
cmp
out
decl
stos
jp
loope
out
or
mov
adc
ja
or
ja
dec
push
subb
sti
cmp
in
pop
pushf
inc
sbb
test
add
pop
mov
shll
jmp
mov
pushf
addr16
lret
sbb
mov
ret
subl
inc
popa
fdivl
mov
sbb
xor
jae
sbb
pop
subl
add
jmp
insl
cmp
pop
cmp
shlb
push
pop
in
cmp
aaa
mov
stc
cld
mov
das
fwait
jbe
sbb
sub
sub
add
sarb
mov
decl
in
cmp
into
jle
inc
test
cmpl
lock
sbb
mov
and
mov
push
cmpsb
mov
call
and
rcll
mov
lea
sbb
imul
lods
addb
lcall
scas
mov
arpl
adcb
addr16
jle
pop
mov
decl
mov
xchg
movsb
lea
jmp
mov
push
stos
jnp
mov
call
pop
scas
push
inc
sbb
mov
clc
aas
dec
daa
les
in
clc
pop
pop
shl
lods
xchg
jne
sbb
call
push
mov
mul
adc
ljmp
adc
popf
fs
sbb
push
add
push
inc
dec
pop
lds
ss
ds
aas
lods
sub
fldcw
pop
popf
sahf
daa
out
cmp
xchg
cmc
pop
sti
jmp
aam
aas
mov
push
cmp
or
push
jp
add
cmp
cmp
sub
dec
js
in
pop
or
cmp
sbb
sub
into
jbe
cmc
call
test
leave
ss
xor
mov
jg
out
aas
push
xchg
mov
sar
ret
les
and
nop
dec
dec
scas
sub
mov
test
push
sar
into
sbb
loopne
clc
ljmp
mov
mov
mov
mov
pop
xchg
inc
ja
shrl
aaa
adc
pop
mov
lds
mov
mov
nop
scas
push
js
ss
sbb
push
pushf
add
dec
or
out
or
fstpt
jmp
jp
mov
inc
fildll
imul
dec
cli
nop
test
pop
pop
xchg
cld
fs
push
test
movsl
mov
test
imul
scas
clc
ljmp
push
cmp
mov
mov
sub
shll
and
jmp
adc
jbe
dec
in
adc
loop
je
push
jne
mov
call
aad
fistl
add
jl
scas
out
sahf
sbb
test
mov
cmp
xchg
mov
rcrb
out
xor
pop
cld
adc
out
or
sub
mov
and
cwtl
mov
mov
push
jae
pop
cmc
incl
add
leave
ret
es
in
sub
mov
xor
jae
incl
mov
xchg
testl
xor
clc
mov
mov
ljmp
pop
bndstx
xchg
cmp
bound
pop
in
cmp
ss
dec
lods
jmp
ss
dec
std
incl
insl
lock
xor
ret
loope
mov
mov
je
je
mov
mov
call
fidivl
je
decb
pop
lret
cmp
ljmp
push
mov
inc
add
sub
dec
pushf
mov
vmovapd
rolb
and
mov
mov
sbb
int
pop
repnz
loop
rolb
jecxz
call
pushf
lahf
and
aad
sub
mov
gs
lret
inc
clc
mov
xchg
xor
mov
sbb
dec
jb
xchg
inc
icebp
xchg
mov
int3
aam
fcomip
inc
sub
es
lea
je
test
dec
xchg
xchg
dec
push
roll
xchg
dec
cld
push
lods
jb
jecxz
ss
mov
incl
mov
and
inc
xchg
pusha
imul
xchg
xlat
out
fcom
popl
je
jg
xchg
pushl
leave
imul
negb
aam
ds
xchg
and
ds
imul
decl
cmp
mov
inc
outsb
mov
scas
jg
std
adcb
neg
xor
push
jbe
fld
or
lods
jle
jmp
lcall
das
sub
subb
call
lcall
push
sbb
aam
mov
aam
mov
push
add
dec
loope
and
shll
test
dec
mov
mov
sub
adc
out
bound
pop
fcmovnbe
sarb
xchg
outsb
incl
jmp
test
mov
pushf
xor
inc
shr
push
sub
sarb
pop
divb
mov
sti
std
mov
and
incl
sbb
cmp
add
sbb
incb
pop
jno
sub
aam
cmpl
jae
popa
push
xchg
mov
mov
jmp
xor
hlt
mov
test
and
sub
nop
push
mov
pushl
inc
ficompl
jae
data16
movl
divl
mov
or
loopne
or
and
adc
mov
xor
lcall
leave
and
xchg
xchg
mov
cld
pop
sub
adc
gs
dec
mov
cld
decl
add
loop
jmp
rclb
jns
jmp
imul
mov
ja
adc
dec
adc
addr16
cmp
ror
cmpsb
gs
lret
sbb
jnp
imul
fcomps
fcom
push
xchg
adc
call
into
mov
insb
out
mov
xchg
divb
add
dec
xchg
lret
mov
sbb
cwtl
incl
cld
aaa
and
pop
adc
scas
adc
aad
dec
data16
incl
leave
push
push
adc
mov
push
rolb
mov
mov
clc
xchg
shrb
jecxz
sbb
xchg
cmpsl
je
fneni(8087
sub
outsb
lret
repz
cmc
pop
jle
mov
add
add
push
sarb
int
xchg
add
test
push
cmp
lds
scas
imull
inc
sti
xor
lcall
rcrl
lods
jns
cld
popf
aad
xchg
mov
cmpsl
add
ljmp
cmp
xor
pop
imul
xlat
xchg
fnstenv
sbb
stos
repz
inc
xlat
addr16
pop
push
mov
cmp
fdivl
bound
mov
rcr
pop
out
rolb
aas
test
or
int3
loop
pop
adc
ljmp
dec
inc
inc
into
push
mov
mov
rcll
jne
aam
ljmp
push
mov
test
gs
cmp
pop
or
sub
mov
push
mov
call
jbe
lret
jo
push
sub
icebp
push
test
das
xor
xor
xor
push
inc
out
out
dec
push
jge
fcoms
shlb
daa
in
ljmp
outsl
jne
jns
bound
lock
aam
out
xor
andl
decl
add
int3
ds
xchg
sbb
push
mov
arpl
lea
call
mov
push
repz
jnp
adc
sahf
shll
jb
outsl
dec
into
lret
push
call
scas
jno
repz
lods
push
adc
cli
sub
adc
dec
lea
xor
mov
mov
jg
iret
mov
sbb
jp
push
negl
ret
call
mov
mov
pop
outsl
or
std
aaa
mov
in
call
mov
xor
repz
jne
jl
push
push
mov
in
pop
xchg
or
outsb
push
jge
sbb
pusha
insl
mov
ret
push
out
clc
cltd
dec
push
sbb
and
cmc
inc
jbe
mov
xchg
ret
adc
roll
inc
xor
in
mov
decl
int3
sub
mov
enter
mov
sti
jg
cmp
mov
lcall
std
test
aaa
repnz
js
push
iret
aaa
fstl
adc
call
lods
dec
cmp
pushl
mov
nop
lea
popf
mov
jg
js
adcl
int
fsubrl
pushl
fdivrl
and
pop
aas
push
rolb
sbb
insl
jae
push
sbb
or
push
insl
ds
inc
dec
cmp
leave
pop
dec
mov
adc
aam
jg
test
mov
push
or
decl
fists
hlt
or
adc
push
test
movsl
test
mov
mov
shlb
fdivp
aam
mov
rorb
stos
aad
sarb
jbe
lods
cld
or
outsl
jg
mov
adc
jmp
flds
fists
lcall
jns
push
int
push
mov
lahf
sbb
sbb
xchg
lret
into
les
mov
ljmp
test
xchg
mov
fisubl
pop
divl
and
into
dec
scas
sub
jmp
adc
insl
sbb
xchg
int
nop
sub
lods
jbe
mov
jne
outsl
mov
es
bound
aad
call
or
pop
test
jle
jno
dec
ljmp
pop
pop
xchg
xor
mov
xor
jne
aam
pop
push
stos
push
int
adc
leave
and
call
pushf
incl
out
pop
jno
add
mov
push
xlat
pop
lods
add
aad
cld
call
mov
test
ficomps
insl
add
cli
cld
ss
jge
mov
mov
fsubl
dec
lods
pushf
jnp
pop
xor
xchg
ljmp
test
sahf
hlt
adc
sub
pusha
aaa
xor
call
jo
lcall
mov
push
popf
jp
sub
push
outsb
mov
ljmp
dec
mov
rorb
mov
xchg
jb
or
push
loopne
call
nop
mov
and
movb
popf
xchg
sbb
hlt
fwait
mov
ret
push
loope
enter
incl
scas
pop
jmp
pop
xor
add
xchg
insb
stos
mov
movsb
insb
jge
cltd
call
xor
cmc
xchg
bound
cltd
xchg
sub
xchg
ficompl
sbb
mov
adc
ficompl
jge
or
pop
lret
mov
push
sahf
rcrb
call
ja
cmpsl
jp
idivl
dec
popf
pop
ret
in
out
je
rorb
icebp
mov
stos
aam
pop
ljmp
mov
xlat
mov
shll
mov
mov
mov
or
jmp
shl
inc
fcoms
dec
call
inc
insl
sti
adcb
ljmp
imulb
pop
out
fcomip
orl
movsb
sbb
jb
inc
fsubr
daa
mov
push
cmp
aas
push
call
in
pop
add
mov
xchg
aam
in
mov
das
mov
cmp
incl
and
pop
dec
ja
xorb
testb
cmp
pop
repnz
out
clc
dec
rclb
aad
dec
xchg
decl
push
divb
hlt
fucomi
lods
outsb
xchg
movsb
inc
sarl
mov
pusha
cmp
dec
cld
call
insb
stc
mov
aaa
das
jl
jae
call
cmp
ljmp
popf
pmulhw
decl
adc
add
sub
xor
dec
mov
inc
add
mov
decb
fdivrs
in
bound
hlt
dec
push
pop
out
lcall
loop
stos
adc
dec
outsb
js
xchg
arpl
orl
mov
pusha
mov
push
pop
es
sub
jnp
test
jg
pushf
mov
insl
loope
decl
mov
sti
inc
push
inc
clc
mov
cmp
data16
xchg
jp
push
ja
call
pop
push
popf
fldcw
dec
frstor
shll
rclb
sbb
pop
and
int
jmp
outsl
mov
hlt
shlb
cmp
orb
test
mov
pushl
dec
roll
xor
cmp
ficoml
push
aad
sbb
test
lcall
incl
xchg
and
mov
fwait
jle
xchg
incb
sub
andb
js
bound
clc
loopne
lock
sub
and
ja
test
clc
fcomip
incl
lds
inc
and
xor
inc
jno
lods
jp
inc
call
xchg
mov
out
incl
iret
sub
xchg
sub
scas
incl
in
ljmp
insl
loop
cmp
inc
push
call
popf
adc
fiadds
test
xchg
insl
dec
mov
xlat
hlt
addl
mov
sub
dec
lock
inc
hlt
loop
sub
out
push
push
pushf
pmaxsw
ljmp
fistps
mov
sbb
xor
and
mov
jge
sub
cli
cmp
and
cmp
fnclex
dec
pop
sbb
push
or
js
inc
xor
pop
outsl
cli
pushl
push
hlt
popf
mov
sbb
pop
xchg
jb
sbb
sub
xchg
jp
dec
adc
imul
xchg
repnz
outsl
cmc
scas
inc
loope
mov
ret
fdivrs
sub
enter
mov
out
xor
inc
leave
add
lcall
decl
mov
dec
rcl
fdivr
in
xchg
pop
adc
js
std
test
xchg
fdivr
mov
sub
adc
push
sub
movsl
in
lock
aad
jle
fiaddl
addr16
popa
aaa
into
lock
fcmovbe
shl
dec
fs
jo
leave
add
dec
ret
idiv
scas
ljmp
xor
mov
push
mov
imul
sub
jmp
das
inc
fcomi
lods
xchg
mov
fiadds
sub
mov
push
jmp
dec
pop
clc
pusha
int
push
mov
orl
cmp
jg
call
push
fxtract
jo
cwtl
mov
insl
mov
pushf
mov
outsb
cli
decl
aam
push
jbe
cmpsb
sub
xlat
cmp
cmp
cs
fwait
daa
adc
ljmp
call
in
xor
lea
pop
and
subl
clc
iret
cli
or
mov
les
test
mov
inc
nop
xlat
jo
cltd
jg
imul
jne
shrb
and
lcall
rcll
or
push
int3
aam
enter
and
lods
iret
push
sbb
sub
pop
jmp
in
jae
xchg
das
push
loope
mov
shrl
vpsubusw
inc
ljmp
sbb
filds
cwtl
dec
ret
iret
sti
aad
je
fs
cmc
xor
sti
mov
lcall
pop
sub
idivl
fs
jg
dec
dec
ljmp
jbe
inc
lods
mov
sbb
imul
lock
jmp
fidivrs
pop
ds
jmp
leave
stc
lods
aam
or
dec
scas
mov
arpl
andb
dec
repz
jae
jl
adc
ljmp
push
lcall
enter
jmp
fmul
and
das
imull
xchg
je
ror
cmpsl
dec
sbb
jg
rcl
pop
addr16
jl
jb
or
pop
and
ljmp
inc
mov
shrl
jmp
push
push
cmp
adc
pushl
sarb
int3
jns
push
cli
leave
and
mov
in
ret
cmpsb
call
rcll
pop
push
mov
mov
add
adc
shrl
das
add
cmc
call
movzwl
mov
and
or
xor
inc
lret
shll
jg
aas
mov
ss
ljmp
cmp
test
leave
ret
lcall
xchg
cmc
fwait
cmpsl
stos
pop
sub
cwtl
or
incl
hlt
pop
mov
mov
stos
and
xor
mov
adc
inc
std
ljmp
push
movsl
test
jno
js
lock
mov
aas
shl
stos
inc
pop
call
add
pushf
into
pop
dec
sub
dec
mov
in
insb
xchg
lret
sub
out
imul
incl
add
jmp
jmp
and
cmpsb
push
test
outsl
inc
xchg
or
test
imul
push
or
imul
ds
pusha
dec
mov
mov
jg
inc
hlt
js
jmp
xchg
add
pop
ss
adc
mov
incl
jg
in
xor
pop
mov
hlt
mov
push
or
sub
std
mov
ljmp
pop
or
jp
scas
les
shll
xchg
xor
mov
out
mov
cmp
inc
xchg
push
call
or
add
test
lret
or
mov
hlt
inc
sbb
arpl
xchg
pop
gs
les
jne
ljmp
sbb
repnz
fistl
adc
enter
jo
std
lods
push
mov
aam
jnp
inc
rorb
out
aam
jp
test
jo
popf
xor
in
mov
cld
pop
mov
popa
ljmp
in
out
fldt
fidivrs
je
repnz
jmp
jmp
rolb
mov
pushf
popf
out
imul
out
jne
loop
loope
aaa
add
je
insl
lock
jo
in
fdivrl
jno
ds
cmp
or
mov
xchg
sti
cmp
icebp
xchg
loopne
mov
or
test
ljmp
mov
shl
sbb
pusha
mov
dec
pusha
adc
and
cmpsb
rcr
insl
incl
jbe
xchg
adc
movsb
cmp
setp
push
cmpsb
pop
xchg
pop
xor
jmp
xchg
cmp
and
adcb
push
sub
scas
sbb
test
add
xchg
mov
out
jb
into
js
xlat
ljmp
test
loop
push
adc
shrl
dec
or
sub
cmp
fisubl
cmp
hlt
dec
fists
or
sbbb
lds
cmp
jg
into
aad
xor
mov
dec
hlt
fcoms
shlb
mov
pop
lods
arpl
std
lcall
adc
xchg
xlat
lea
mov
dec
mov
inc
movsl
xor
rolb
ror
call
and
ss
cmp
dec
xor
sahf
xlat
and
test
call
and
jl
ret
xor
rorl
sub
hlt
call
addb
inc
mov
sub
dec
fcompl
adc
lods
push
fimuls
call
and
cli
and
cmp
dec
setno
mov
lahf
mov
out
mov
push
ss
add
pushf
lds
inc
pop
lods
ljmp
scas
adc
jge
pop
fnstenv
push
add
mov
stos
cmc
sub
std
scas
lock
dec
push
push
add
push
and
mov
add
cmp
call
loopne
xchg
mov
mov
aaa
cld
jmp
or
jb
sar
dec
shlb
cmp
push
sbb
ret
movsl
and
andl
lods
xor
stos
jmp
mov
gs
ret
mov
arpl
mov
in
and
pushl
mov
test
movsb
dec
adc
or
jl
jg
mov
xchg
adc
sub
je
lret
add
ja
fmuls
cld
jmp
jno
repnz
subb
inc
push
mov
sahf
sahf
ljmp
roll
sub
mov
sarb
arpl
add
mov
out
sbb
jge
bound
je
xor
es
ljmp
pushf
adc
xlat
leave
sti
testb
pop
jl
imul
sbb
ljmp
jae
loop
mov
lock
add
push
adcb
enter
mov
in
or
mulb
mov
shrl
leave
jp
pop
sbb
mov
push
lret
cmpsl
dec
xchg
push
jns
mov
sub
dec
jns
sub
add
push
or
push
cltd
sub
jle
shlb
adcb
pop
es
push
dec
xor
fcmovu
and
sbb
sub
lods
add
in
mov
mov
insl
and
xchg
test
cmpb
xor
mov
mov
mov
jnp
subl
outsb
filds
add
xlat
loope
jmp
sbbb
das
call
jns
jne
lret
mov
loopne
roll
push
andl
inc
adc
aad
jp
incl
push
out
push
dec
and
mov
xor
iret
sbb
sub
mov
fidivrl
rolb
mov
ljmp
xchg
cmc
nop
add
lcall
ret
ja
cmp
push
pop
mov
sub
add
daa
fistl
xchg
aam
push
dec
xchg
mov
or
dec
pushf
jne
sub
sub
call
cld
pushl
add
fdivrs
and
in
cwtl
or
dec
sub
dec
nop
mov
sub
xor
loop
fistpll
andb
daa
fcompl
mov
test
rcl
es
cld
out
add
pushl
bnd
sub
cmp
or
mov
inc
and
loopne
ret
fistpll
add
push
push
lret
xor
hlt
dec
popa
jns
push
dec
outsl
or
cmp
pushl
jnp
add
xchg
orb
mov
das
dec
add
data16
sbb
incl
sub
pop
fcoms
pop
fidivs
inc
xchg
adc
mov
lcall
xlat
lods
jnp
xor
xor
jns
test
sbb
pop
xorb
ljmp
push
mov
lea
jns
enter
fdivr
dec
in
xor
dec
frstor
jl
pop
adc
cwtl
or
push
sbb
subb
cmc
add
mov
push
call
mov
jno
mov
mov
mov
incl
sti
adc
insb
loopne
popa
enter
adc
inc
lcall
scas
add
mov
scas
fildl
mov
cwtl
imul
iret
xchg
xchg
incl
and
aas
aas
or
sbb
out
stos
or
mov
dec
insb
pop
out
inc
stc
inc
add
mov
popf
dec
test
mov
pop
into
lods
aam
fisubrs
xchg
lcall
ljmp
mov
cltd
fwait
mov
push
pusha
aam
clc
push
xlat
sbb
and
stos
mov
mov
or
add
dec
ljmp
incb
loope
cltd
addr16
icebp
notl
inc
insl
gs
stos
jnp
jo
out
ror
lods
fisubl
jl
and
mov
mov
inc
incl
xor
push
imul
dec
or
jl
add
stc
jge
adc
mov
dec
pop
nop
jo
cs
or
jmp
sbb
stos
lcall
cmp
lock
add
adc
inc
test
loopne
mov
sub
iret
test
inc
add
pop
or
int3
and
xchg
mov
das
clc
dec
mov
cmp
daa
and
fnstcw
test
pop
and
mov
push
call
aad
jne
push
add
scas
mov
or
divb
cwtl
inc
scas
aas
xlat
mov
push
push
jmp
data16
cmc
arpl
push
inc
mov
loope
fnsave
mov
cmp
pushl
jbe
xor
test
div
repnz
cli
xor
nop
inc
fadd
or
fnstcw
jns
push
sbb
pop
push
cs
adc
mov
rolb
lahf
and
je
cmp
xchg
mov
lcall
lret
mov
std
pusha
out
inc
push
repnz
rcrb
in
dec
imul
inc
daa
lahf
jb
mov
out
sarl
sbb
cmp
push
pop
je
or
call
cwtl
addr16
clc
push
mov
lret
and
adc
push
lock
adc
mov
int
je
sub
xchg
and
fwait
dec
nop
fistl
mov
cltd
and
dec
mov
popa
xor
push
sbb
mov
jb
xor
popa
adc
pop
insl
lcall
mov
and
mov
sub
daa
pop
cs
jne
stc
mov
xchg
push
push
and
mov
sbbb
adc
dec
ljmp
cmp
fisubrs
xor
mov
lret
and
ljmp
dec
out
sub
cs
fsubs
popf
in
test
decl
dec
sub
inc
mov
out
movsb
ljmp
mov
dec
push
incl
les
push
xchg
fcoml
imul
push
sub
adc
and
jp
decl
mov
jno
jp
ljmp
push
cmpsb
push
dec
pop
sahf
pop
push
je
mov
xchg
bnd
xor
fcos
decl
push
jg
mov
loop
je
fildl
adc
or
mov
nop
mov
push
jl
mov
or
mov
movsl
movsl
jmp
cmp
sti
test
inc
insl
mov
mov
xor
ret
enter
ret
pop
test
cltd
fadd
pop
cli
xor
notb
addr16
jmp
js
nop
scas
lds
cld
mov
jge
pop
enter
shll
adcb
mov
sahf
pusha
jo
ja
das
ljmp
sbb
shl
mull
cltd
arpl
jae
mov
push
push
mov
repz
mov
mov
int3
xchg
comiss
loop
hlt
adc
in
mov
movsl
incl
les
mov
shlb
mov
ret
xor
sahf
lret
dec
mov
adc
repnz
call
fisubrs
and
popl
lock
enter
sub
and
jae
jg
test
or
adc
rol
in
add
xchg
out
clc
ret
iret
xchg
cmc
mov
and
xor
or
cltd
fildll
mov
inc
lcall
aas
in
cwtl
sub
or
and
negb
jno
cld
arpl
imul
jmp
out
add
test
pop
roll
or
jmp
lcall
and
rclb
incl
mov
mov
dec
mov
pop
pushf
cmp
cltd
or
cmp
rcrb
std
call
in
jb
out
loopne
xor
push
add
mov
push
stc
in
imul
hlt
in
mov
out
pushl
shr
cmpl
xchg
or
int
mov
testb
mov
pop
fisubrs
cmp
mov
or
test
and
inc
pop
xchg
jg
cmp
sub
in
enter
cltd
gs
sub
popf
and
lods
xlat
incl
cld
aad
dec
pop
mov
imul
jo
add
xlat
sbb
subl
nop
dec
inc
andb
and
lcall
and
xchg
sub
div
dec
mov
jb
xorl
sub
outsl
mov
in
inc
mov
mov
push
js
loopne
lcall
incl
nop
dec
dec
enter
pop
in
inc
push
xchg
outsb
nopl
cld
ss
push
pushl
jo
test
test
add
int3
dec
out
and
dec
psadbw
pop
test
xchg
gs
mov
or
fwait
popf
push
sub
es
sub
xor
incl
sub
push
outsb
push
and
xchg
mov
mov
xlat
repnz
sub
xchg
pushl
std
push
in
fidivrl
es
icebp
jl
movsl
scas
orl
bound
in
sub
inc
mov
and
lret
rolb
ss
pushl
shrb
test
jmp
nop
xlat
mov
scas
aam
or
mov
xchg
xchg
jmp
mov
dec
fstpt
loopne
xchg
pop
mov
pop
sub
adc
mov
int3
cmp
out
sub
mov
cld
mov
ds
sub
popa
push
jae
in
mov
popa
incl
in
cbtw
imul
ret
mov
pop
xchg
sbb
pop
std
mov
fstl
fstl
movsb
addr16
push
jae
cmpsb
dec
mov
cmp
add
and
outsb
movsb
mov
cmp
popf
jge
pop
cli
call
xchg
mov
xchg
jo
sarl
jge
mov
adc
inc
ret
jmp
adc
mov
xchg
adc
jo
lds
call
incl
xchg
push
in
push
jle
jp
outsl
jl
test
divb
mov
scas
xchg
ret
mov
dec
sub
adc
or
and
push
mov
xorb
inc
xchg
out
addl
ljmp
ficomps
aad
dec
pop
sbb
adc
pop
bound
jg
push
insb
push
dec
into
jbe
icebp
sub
inc
repz
pop
mov
out
mov
mov
gs
push
dec
xchg
add
inc
push
fdivrs
jbe
mov
fisubrs
test
loopne
js
dec
mov
push
ds
sbb
cmp
jmp
xor
cwtl
jg
push
int
loope
es
sar
push
jo
pop
push
sahf
push
sbb
cmpsb
fsubs
mov
aam
movsb
jne
idiv
call
movsl
repnz
lahf
pop
cmp
mov
mov
fdivr
mov
cli
fwait
push
faddl
pusha
xchg
decl
icebp
fistpll
jbe
movsb
jmp
dec
mov
out
cltd
pop
xchg
inc
push
adc
orl
jg
cmc
fdiv
mov
sbb
pop
cmp
mov
ja
aam
jno
out
or
dec
in
ja
jecxz
cs
lock
decl
cmp
pushf
cmp
inc
hlt
inc
add
push
adc
mov
scas
rcll
jg
adc
add
mov
jmp
ret
nop
int3
jmp
jg
mov
fadds
mov
add
aas
adc
aas
ljmp
ljmp
je
ja
mov
pop
sbb
push
or
test
sub
mov
mov
call
scas
aad
adc
sti
push
popa
std
imul
cmpsl
pop
lock
ljmp
xchg
call
sbb
cmp
fnstsw
popf
pop
adcl
hlt
inc
xchg
shl
sub
jg
jne
mov
ja
cmp
nop
cmp
mov
dec
fwait
imul
mov
jne
or
cmc
add
pop
push
cmc
jb
dec
jge
pushf
cli
rcl
cmp
mov
aam
jb
es
lods
lods
add
out
add
jmp
test
fldt
test
add
test
test
mov
ud0
dec
xor
cwtl
test
pop
sbb
dec
add
jns
loope
sub
mov
mov
ljmp
jle
and
or
ficompl
cmp
flds
sub
mov
mov
ljmp
xchg
xchg
hlt
lods
imul
or
sbb
fcmovnb
fwait
sub
call
mov
mov
and
mov
idivb
enter
fnstenv
stos
call
incl
out
xorl
mov
inc
rorl
shrl
jo
jg
iret
data16
sbb
lcall
enter
push
pop
cmc
stc
mov
mov
mov
mov
mov
bound
shll
out
rolb
incl
mov
loope
ret
mov
cmp
cwtl
sbb
nop
sub
and
mov
icebp
pushl
mov
loope
js
push
xor
popf
xchg
xor
jg
or
es
dec
outsl
push
fbld
mov
pop
adc
add
popa
or
aaa
loopne
cmp
sar
rol
inc
sub
push
mov
lods
xchg
arpl
cmp
pop
inc
movsb
decl
imul
xchg
sub
dec
sbb
test
and
test
sahf
xlat
stc
pop
cmp
push
cld
push
jno
ret
int3
push
ljmp
pop
dec
inc
call
jge
adc
incl
jecxz
clc
xor
out
push
pop
sbb
dec
cs
cld
lods
hlt
sub
push
loopne
fisttps
js
and
pop
jb
inc
push
out
xchg
gs
adc
sar
jg
decb
cltd
jge
push
mov
inc
enter
ljmp
mov
push
jmp
aas
aad
int
or
xlat
lea
icebp
lcall
cwtl
outsl
mov
cmp
inc
sbb
xor
cmp
add
pushl
bound
pop
outsl
and
dec
call
jl
fdivr
ret
add
sbb
faddp
xchg
add
clc
xchg
clc
jg
test
and
push
mov
incl
mov
inc
mov
jns
hlt
loop
pop
aad
cmc
pop
fcomip
sub
mov
sbbl
add
test
andb
scas
xchg
mov
jg
call
call
popl
mov
push
push
fisubs
sbb
sbb
pop
sub
dec
mov
add
pminub
jg
test
aas
fildll
movsb
pop
mov
in
int
or
lcall
jmp
sbb
sarb
jns
and
mov
or
cld
pushl
xor
mov
jmp
in
or
jmp
push
hlt
or
into
xchg
aas
mov
movsb
xor
pop
sbb
call
xor
enter
jecxz
or
cltd
mov
xlat
inc
or
sbb
jmp
add
and
imul
test
jl
divl
push
cmp
add
jmp
push
adc
in
into
cwtl
pop
mov
pop
icebp
sarb
mov
mov
lahf
out
fs
xor
mov
jl
out
pop
inc
int3
cmp
ret
pop
cmc
xor
vmread
lea
incl
push
sbb
popa
and
add
dec
in
push
loopne
lret
lcall
call
arpl
push
sbb
insl
sbb
or
bound
pop
xchg
jmp
lahf
dec
adc
jmp
sbb
inc
or
pop
ds
push
xchg
loopne
lock
fidivs
andb
cltd
jne
jecxz
pop
adc
push
add
pop
jmp
arpl
mov
and
and
aaa
in
sbb
insl
jmp
push
enter
xchg
pop
pop
inc
inc
xor
mov
push
insb
cli
sbb
imul
mov
mov
mov
orl
sbb
jmp
hlt
cs
sbb
cmp
cmc
loope
pop
fdivp
leave
pop
sahf
stc
or
movsl
or
xchg
and
jmp
dec
gs
incl
cli
jg
ljmp
adc
loopne
movsb
pusha
outsl
and
xor
das
adc
push
push
repz
stc
aaa
mov
push
ja
sbb
fidivl
enter
mov
or
scas
cmp
jns
jg
out
cmp
fistl
jmp
add
out
mov
ljmp
mov
int
cmpsb
or
mov
rorl
adc
ror
sbb
test
inc
lock
call
jns
mov
or
sub
imul
decl
fld
pop
aam
cmp
jecxz
outsb
jl
jp
xchg
fdivl
adc
mov
stos
push
jmp
xor
push
jnp
mov
xchg
clc
decl
push
dec
push
push
jp
sub
pop
push
jno
push
mov
add
jl
push
loopne
out
add
lret
or
loope
es
outsb
mov
lods
adc
jns
decl
xlat
loop
mov
xchg
sub
bound
cmpsb
icebp
aas
std
pop
out
push
adcb
incl
xchg
pop
adc
sahf
stos
fs
xchg
lahf
jnp
lret
inc
cmp
adc
cmp
cmp
sbb
mov
popl
jo
cwtl
out
loop
addr16
sub
cmpsb
pushl
popf
std
popa
jae
and
sti
insb
or
jbe
xchg
lods
inc
sbb
sbb
incb
test
mov
mov
jle
adc
incl
inc
mov
adc
sub
int3
dec
ljmp
incl
es
jp
jnp
or
out
test
je
cwtl
mov
jmp
mov
call
data16
inc
sbb
cmp
aas
loopne
xchg
aad
ret
adc
adc
cmp
push
js
stc
mov
push
xor
pusha
rclb
lock
mov
inc
mov
pop
sub
push
mov
adc
or
test
test
jg
decl
adc
xchg
mov
outsl
dec
and
fwait
sahf
sub
pop
adc
incl
fdivl
push
mov
adc
mov
ret
daa
fistpll
dec
jmp
adc
movsl
fsubl
jecxz
mov
jle
cmp
filds
push
mov
std
cmp
fcmovb
sti
negb
loope
sti
mov
leave
jmp
inc
mov
push
or
jae
mov
icebp
decl
push
jo
or
pop
lea
xor
ljmp
incl
inc
loopne,pn
into
xor
in
ffree
inc
in
shll
mov
mov
insb
popa
sub
pop
pop
or
jg
pushl
inc
fidivl
jle
lret
dec
or
cwtl
mov
arpl
aad
lcall
out
jmp
jecxz
loop
add
push
pop
adc
repnz
adc
cmp
incl
aaa
inc
adc
inc
jns
clc
cwtl
and
mov
into
pop
out
xchg
arpl
push
loop
cltd
fidivrs
shlb
jae
push
mov
lods
in
and
push
iret
ljmp
jecxz
int3
cmpsb
sbb
loopne
dec
clc
test
fmull
cmpsl
popa
xchg
movsb
sub
jle
pushl
xor
and
cmp
cmp
bound
push
mov
inc
jg
mov
mov
xchg
xor
xlat
stos
and
lcall
mov
push
mov
inc
subl
sbb
pop
push
dec
xor
loopne
int3
mov
shlb
ss
inc
fwait
cmp
mov
rcrb
push
pop
ljmp
rcl
div
push
cmp
fwait
out
dec
and
xchg
adc
ds
add
das
sar
cmp
xor
and
jbe
push
xchg
or
jg,pt
mov
popf
fisttpll
or
jbe
adc
lds
cmp
ficompl
lcall
dec
jno
xor
stos
inc
jne
dec
sbb
sti
mov
mov
fimull
inc
jecxz
push
cmc
inc
inc
cltd
hlt
pop
mov
xor
ds
cmpsl
pop
enter
fiadds
dec
mov
lods
movsb
movsb
sbb
push
lods
pushl
lret
cli
and
inc
jae
pop
test
pop
mov
sbb
cmp
pop
sub
aaa
xacquire
gs
incl
dec
testb
xchg
mov
mov
outsb
push
mov
ss
scas
loope
adc
jmp
mov
add
scas
in
dec
fisttps
or
sub
stc
arpl
adc
ljmp
jmp
out
fs
mov
leave
mov
mov
test
mov
dec
mov
lods
stos
pop
jmp
sub
repz
dec
mov
and
gs
cmp
in
cmp
sti
mov
cld
call
xchg
or
addr16
nop
pushf
dec
fwait
jbe
and
or
sub
iret
xchg
jp
cmp
pushl
in
pop
scas
call
stc
movsb
jo
dec
out
gs
fwait
leave
push
fwait
loopne
imul
js
lcall
das
mov
ret
mov
mov
lods
xchg
sbbl
dec
add
jae
lcall
xchg
mov
js
xchg
or
push
lock
fnstsw
lcall
js
mov
sti
push
aad
sub
add
popf
mov
jo
in
loope
jmp
dec
in
movsb
rcr
je
mov
mov
add
cli
mov
mov
adc
jb
push
enter
aas
xor
movsl
cltd
inc
jg
lcall
cs
aam
pop
push
lahf
or
mov
sbb
scas
incl
jg
mov
mov
jecxz
loopne
dec
sub
ret
mov
push
inc
mov
das
jo
mov
push
out
ljmp
xor
cltd
mov
orb
dec
inc
add
jmp
sub
aas
leave
lcall
mov
xor
inc
fiaddl
lea
dec
fadd
pushl
pop
xor
aaa
push
xchg
xchg
aam
daa
sti
ljmp
fnsave
or
jg
outsl
jmp
out
addr16
or
xlat
add
loope
mov
popw
mov
push
xchg
xor
jmp
or
sbb
push
inc
cmc
xchg
xchg
xor
call
jmp
push
imul
mov
out
and
cld
rorl
fcomps
cmp
test
mov
clc
filds
or
cmp
mov
or
insl
incl
cmp
jno
push
ja
imul
add
xor
out
push
sub
ljmp
inc
aam
mov
dec
pop
dec
add
mov
mov
adc
jmp
jecxz
lcall
insl
mov
popf
idiv
incl
mov
adc
cltd
mov
aas
rorl
lahf
out
or
inc
jecxz
push
dec
or
adcb
repz
sbb
in
dec
xlat
pushl
or
mov
mov
jmp
insl
and
push
aad
bound
decl
sbb
adc
movsl
sub
bound
xchg
mov
scas
stos
ljmp
shll
aam
dec
enter
ds
mov
daa
fists
aaa
call
pop
sahf
push
fwait
sub
push
scas
pop
es
cmp
aas
mov
lret
daa
test
clc
popa
and
xor
insl
pop
mov
jg
dec
sbb
rcrb
xor
xchg
sub
insl
mov
jp
ljmp
push
ret
mov
int3
mov
idivl
adc
pop
out
or
jle
jne
push
sbb
loopne
lahf
enter
mov
mov
dec
lea
lcall
rcr
mov
xchg
je
adc
insl
stos
jg
push
shl
add
mov
test
xor
cld
incl
je
sbb
xchg
cwtl
mov
call
adc
insb
rcl
jmp
pop
add
shrl
icebp
adc
inc
pop
es
sub
ret
sbb
push
pop
pushf
call
shrl
mov
push
scas
jns
cmp
test
addr16
in
jmp
mov
hlt
aam
dec
adc
ficompl
xor
jl
sub
pop
adc
lcall
das
sahf
sub
and
out
sub
aas
nop
cmpsb
popa
ret
dec
cltd
sub
sub
imul
out
xor
arpl
mov
insb
jg
call
sbb
sub
cmp
push
mov
mov
push
decl
or
jbe
xchg
push
neg
in
outsb
test
rcrb
sbb
jmp
jg
adc
jno
pushf
fiaddl
push
iret
add
enter
lods
dec
sub
jmp
data16
and
lahf
add
push
mov
and
lock
push
out
out
jmp
fdiv
cmpsl
imul
xor
sarb
add
inc
mov
mov
gs
mov
xor
jnp
cmp
push
in
popf
subps
ljmp
and
or
inc
sbb
sbb
fs
sbb
jge
jmp
pop
xchg
dec
pushl
cld
push
shl
popa
mov
fdivr
cmpl
lods
mov
leave
pushf
xchg
test
push
sbb
push
inc
es
pop
xor
inc
or
or
test
leave
dec
les
mov
push
adc
cltd
sbb
gs
je
push
cmc
loop
fildll
cmpsb
fsts
in
and
dec
and
adc
inc
je
mov
and
jns
inc
mov
or
lds
inc
pop
mov
ljmp
cmp
xchg
cmp
mov
out
push
incl
imul
cli
add
je
lods
add
std
fidivrs
push
dec
icebp
push
sbb
pavgw
jg
call
push
insl
mov
arpl
clc
lds
mov
les
mov
outsb
jb
cs
data16
cmp
push
addr16
pop
outsb
lea
incl
adc
mov
aaa
sbb
sti
fisubs
ret
adc
faddl
add
pop
out
and
call
jg
scas
fcmovbe
cli
mov
mov
adc
out
shrb
adc
ljmp
ret
dec
xor
test
jg
sbb
sbb
incb
fisttps
lock
data16
adc
inc
jmp
or
call
push
movsb
rclb
popa
ss
aaa
std
lcall
inc
psubw
lods
push
lods
inc
sub
sbb
or
out
or
add
stos
sub
adc
push
aas
sar
mov
and
dec
pop
and
lret
inc
inc
jecxz
jge
and
or
mov
mov
cmp
add
pop
push
mov
ljmp
xchg
ljmp
sub
cmp
aas
sbb
ja
jns,pn
sub
xor
out
adc
push
data16
jo
incl
inc
sub
adc
mov
add
call
ss
adc
sbb
pop
mov
jb
push
rorl
arpl
decl
test
clc
ret
gs
adc
sub
out
mov
sbb
cmp
push
incl
ljmp
ja
ljmp
or
mov
pop
jle
mov
decl
ljmp
cmc
rclb
stos
sub
ss
cmpsl
mov
pushl
jmp
stos
pop
jae
xor
das
or
jne
sub
push
cmc
mov
cmpb
dec
cmpsl
ljmp
js
fcmove
mov
adc
jmp
sub
lret
pmaxsw
ljmp
clc
pushl
xchg
xorl
or
mov
and
ss
clc
mov
outsb
jns
xchg
stos
xchg
dec
cmp
pop
test
mov
lea
pushl
pop
cmp
es
pop
cld
leave
push
xchg
mov
int
cmp
ret
dec
mov
fmull
incl
call
xchg
stos
gs
xor
push
fisttps
out
ss
sub
test
call
imul
push
data16
xlat
or
cmp
dec
stc
xor
fdivs
call
decl
rcl
xchg
arpl
ljmp
iret
mov
ret
daa
and
fwait
lret
mov
xchg
lea
hlt
outsl
dec
inc
stos
add
mov
mov
lcall
cmpsb
mov
xchg
mov
in
cld
lods
int
ljmp
dec
notb
mov
sahf
pop
mov
cmp
idiv
stos
imul
call
sbb
clc
stos
jb
lds
inc
jae
leave
outsb
pushf
sbb
call
inc
aaa
repnz
ds
mov
cmp
test
subb
incb
mov
fidivl
divb
mov
adc
outsb
divl
inc
aam
adc
dec
dec
jmp
pop
pushl
outsb
aad
imul
push
push
mov
es
scas
add
jg
cli
mov
xchg
cmp
inc
ficomps
sub
push
cmp
inc
push
repnz
pop
loope
or
cld
outsb
call
rcrb
add
fldl
gs
jl
add
xchg
insb
pop
pop
add
push
mov
dec
mov
pushl
lea
icebp
cmp
jae
xchg
or
shrb
shrb
sbb
fisubs
mov
in
add
adc
cmp
xchg
dec
dec
lock
jmp
push
repnz
adc
testl
mov
sbb
jmp
or
push
jmp
cmc
xor
das
jno
shll
incl
mov
stos
mov
out
cmp
test
jecxz
push
out
fimuls
xor
daa
lock
push
repz
mov
js
stos
int3
int3
mov
ffree
mov
push
jae
lcall
insb
cmc
cmp
pop
popf
xor
ret
xchg
lods
or
fs
incl
ret
test
xchg
mov
aam
push
push
andb
outsl
movsb
pop
pop
shll
mov
add
fisubrl
pop
test
ret
lock
mov
xchg
mov
call
lods
mov
les
ja
ret
scas
insl
pop
lea
loop
add
mov
and
ret
jmp
pop
jl,pt
xchg
inc
insl
add
mov
push
lds
and
sub
decl
mov
sbb
sub
insl
jno
dec
mov
es
mov
dec
in
adc
decl
or
imul
das
jns
popa
push
test
sbb
hlt
pop
mov
bound
xor
in
out
es
pop
loope
pop
divl
pop
dec
std
push
sub
adc
aam
ret
data16
loop
add
test
stc
pop
inc
ffreep
or
repnz
and
cvtps2pi
mov
mov
pop
adc
or
sbb
ljmp
test
inc
loop
cli
clc
inc
cmp
sub
pop
sti
mov
cmpsl
xor
ljmp
jg
or
mov
jg
stos
je
cld
mov
mov
adcl
icebp
sub
cld
incl
push
sbb
sbb
jp
xchg
add
in
cltd
jge
inc
shlb
insb
cmp
mov
loopne
lahf
sbb
or
rol
insl
xchg
jl
jns
add
jmp
idivb
or
daa
out
push
mov
out
pop
pop
inc
pusha
dec
ljmp
test
fcmovb
fsubr
loop
je
pop
add
movb
arpl
cmp
icebp
rolb
lcall
mov
or
cmp
std
dec
push
sbb
mov
shrl
xlat
pop
add
imul
xor
sub
js
aam
fadds
loopne
jecxz
mov
fdivs
cs
cld
scas
add
ljmp
out
mov
jae
jbe
mov
das
ffreep
cmp
aaa
mov
sbb
and
mov
push
push
pop
push
push
jb
repz
and
lds
fimull
outsl
clc
cld
dec
mov
pop
sbb
inc
mov
push
jae
pop
seto
add
mov
xlat
jno
push
sub
scas
xor
leave
sbb
cmp
ds
loope
jg
mov
dec
push
imul
je
stc
jmp
push
cltd
cltd
mov
sbb
fbld
and
iret
sbb
cld
jge
adc
aaa
in
fmull
fldt
or
decl
xchg
jo
mov
lods
add
or
mov
add
movsl
inc
clc
and
bt
jmp
cmp
cmp
lock
int3
push
mov
lds
jnp
dec
push
cmp
jmp
jnp
mov
jns
xlat
xchg
testb
bound
or
ljmp
inc
call
dec
sbb
int
pop
adc
fdivrs
jns
add
in
inc
lock
jo
jg
inc
pushl
outsb
iret
into
or
dec
or
call
mov
xor
sub
cmc
fs
mov
arpl
push
sub
jns
sub
sub
call
xor
push
jns
lock
mov
push
lahf
clc
out
pop
outsb
push
jl
loope
xor
ljmp
call
test
inc
aaa
stos
sti
mov
inc
inc
jmp
sti
call
mov
add
mov
or
pop
xlat
adc
and
and
xchg
inc
cmc
out
mov
and
cmpl
scas
rorl
mov
mov
jp
inc
inc
dec
iret
adc
das
lcall
mov
outsl
adc
decl
xor
pop
jge
mov
inc
lea
cmp
and
sbb
mov
scas
jle
lret
push
cltd
inc
loopne
cmp
sbb
add
mov
jl
or
xchg
and
mov
ss
fistpll
add
sub
cmp
add
lds
xor
sti
and
hlt
ljmp
add
cmpl
lcall
hlt
adc
das
mov
pop
fstl
jo
cli
cmp
xor
xchg
in
lahf
arpl
dec
xor
mov
dec
rclb
xor
lcall
push
fisttpll
test
mov
adc
xchg
decl
arpl
fildl
test
daa
sub
xor
dec
in
mov
out
cld
lcall
in
mov
das
cld
into
xor
test
mov
outsl
adc
jg
sub
jb
in
and
jg
data16
incl
ret
mov
fwait
imul
xchg
decl
jg
rol
shll
shrb
mov
mov
pop
lock
fistps
adc
adc
cltd
imul
jmp
mov
call
int
mov
divb
loope
jo
jne
jbe
data16
inc
lret
repz
mov
in
adc
xor
cmp
adc
call
sbb
and
cmpsb
call
fists
push
lret
negb
jmp
add
adcb
ljmp
aam
add
iret
das
xor
mov
inc
push
cmp
pushf
adc
mov
sbb
out
jne
and
ret
add
cwtl
mov
xchg
push
leave
adc
sahf
push
pop
mov
std
adc
mov
or
xchg
mov
mov
mov
pop
aas
mov
or
hlt
jmp
shll
sbb
jb
cmpsb
xor
add
jo
push
jg
loope
sbb
call
lock
jmp
and
lret
add
fs
mov
sbb
ljmp
xchg
jmp
das
fwait
rep
div
lock
mov
mov
sub
outsb
mov
mov
mov
cwtl
incl
xor
lcall
out
sar
and
pop
mov
lcall
inc
and
mov
scas
aam
aas
xor
ljmp
out
sbb
push
mov
insl
into
inc
and
pop
lock
incl
push
cmp
push
xor
inc
jb
sbb
and
push
xor
incl
shll
sub
push
cmp
mov
cmpsl
mov
inc
repz
jmp
pushl
sti
enter
jl
mov
cmp
xchg
lret
mov
cld
mov
movb
fninit
pushf
inc
and
mov
or
pusha
xorl
dec
cld
inc
dec
jno
ljmp
mov
popa
std
rclb
test
push
xor
fildll
loope
adc
test
mov
mov
ficompl
pop
mov
mov
testb
sbb
ficomps
out
stos
cli
incl
xor
ljmp
adc
mov
add
in
aam
divl
xor
es
add
push
jg
mov
mov
lock
dec
sub
icebp
rcrl
mov
dec
xchg
or
inc
push
mov
aaa
cli
sub
xor
fcomip
call
push
jae
pop
inc
jecxz
imul
push
sbb
mov
pop
mov
pushl
test
int3
xlat
cmpsl
xchg
cltd
pop
lahf
cmpsl
xchg
and
jo
std
pop
js
sub
fcmovb
pop
leave
cmpsb
hlt
dec
rcll
call
int3
aaa
mov
inc
dec
in
ret
adc
or
sbb
outsb
dec
aas
out
mov
ljmp
rorb
das
hlt
mov
in
pop
push
roll
in
outsb
jns
xchg
push
incl
mov
ljmp
mov
rcll
gs
scas
dec
xchg
or
jle
outsb
mov
push
push
fwait
cli
call
aad
aad
xchg
cmovs
lcall
sub
fsubrp
scas
pop
add
test
fwait
xchg
push
add
pop
sub
jp
xor
jae
or
int
xlat
dec
movsb
inc
adc
jg
sti
das
sbb
mov
mov
loop
aad
movsl
repnz
jmp
inc
inc
scas
sbb
loope
pop
pushf
divb
flds
dec
iret
mov
sub
incl
bsr
mov
jae
flds
cwtl
jnp
stos
add
mov
mov
pushl
xchg
add
xchg
das
lret
push
clc
call
fwait
sub
fwait
insl
xlat
or
push
adc
ljmp
psubusw
popa
push
outsl
jg
adc
push
mov
mov
shl
add
hlt
decl
xchg
cld
pop
push
jno
xorb
jo
fwait
mov
pop
adc
xor
mov
mov
mov
mov
jmp
jl,pn
inc
add
mov
mov
dec
jmp
es
dec
enter
ljmp
inc
or
inc
sub
cmp
and
mov
jno
add
lcall
adc
jne
xchg
xchg
in
lret
out
in
sub
adc
xor
call
pop
adc
pop
aam
adc
add
push
push
aaa
popf
mov
out
cmp
lcall
mov
inc
adc
scas
in
dec
sub
in
or
mov
pop
repz
ljmp
dec
and
repz
xchg
sbb
into
dec
flds
in
mov
addl
ficoms
outsb
ljmp
adc
xchg
or
fisttpl
mov
cld
decl
sbb
adc
mov
mov
cli
mov
fistl
std
sbb
imull
dec
cmpl
clc
mov
pop
hlt
incl
in
and
shr
andb
repz
add
divb
adc
out
cli
call
mov
pusha
or
cmp
push
inc
cmpsb
push
pop
jne
push
add
pop
cmp
mov
loop
fnstsw
scas
insb
aaa
jmp
mov
and
test
clc
jmp
incl
dec
je
popf
mov
or
rolb
iret
push
movsl
aad
mov
aad
in
pop
mov
jns
mov
mov
addr16
dec
js
notb
movsl
ljmp
mov
dec
push
int3
mov
popa
jbe
adc
xor
cli
xchg
cmpsl
ja
cwtl
pushf
pushl
push
std
ljmp
je
jno
aam
cmp
adc
scas
jmp
add
into
push
push
incl
pop
add
dec
add
jae
insb
test
xchg
aad
cmp
jp
push
pop
inc
mov
jmp
ja
xor
sarb
push
sti
dec
loopne
and
dec
test
jmp
decl
jecxz
sub
xchg
add
pop
add
xchg
popf
adc
cmp
ljmp
ljmp
add
jns
insl
mov
les
mov
push
mov
inc
lret
jge
aas
and
incl
leave
outsl
jb
lods
adc
test
mov
dec
sbb
and
pop
fwait
dec
das
in
cmp
inc
push
pop
lock
incl
data16
popa
inc
dec
sub
orl
scas
xchg
orl
decl
scas
pop
rcrl
jp
in
push
and
push
or
mov
lcall
bound
rcr
xchg
and
pop
cltd
jge
incl
int3
dec
push
sbb
sbb
sti
mov
fsubr
pop
mov
cmp
push
cmpsb
mov
add
jo
xchg
push
pop
imul
and
pusha
fiaddl
cltd
sbb
pushl
insb
xor
lock
adc
ljmp
pop
popa
insl
mov
cmp
insb
or
mov
pop
ljmp
inc
out
push
dec
push
dec
sub
add
add
ret
stos
das
cli
lcall
push
and
jae
add
cs
push
and
lock
or
lods
clc
inc
fs
rcrb
add
fsubr
ror
sbb
pop
push
lds
popa
jno
or
fistps
decl
shrl
adc
inc
test
mov
dec
or
mov
push
lahf
dec
lret
arpl
incl
inc
sahf
scas
cmpsl
test
xchg
imul
cmp
cmp
and
mov
mov
mov
scas
push
outsb
stos
or
cli
dec
mov
int3
test
inc
test
jo
aas
dec
xchg
or
push
rorl
mov
mov
mov
shl
hlt
call
ljmp
pop
push
adcl
adc
mov
adc
adcb
dec
out
lcall
stc
int
sahf
xlat
repnz
js
and
in
nop
inc
pushf
or
mov
dec
cmp
outsl
dec
decl
cmc
sub
mov
scas
add
mov
loope
nop
lods
in
inc
sbb
xor
mov
add
push
and
pop
lret
jnp
mov
jmp
cmp
xchg
pop
pop
pop
ret
or
xor
stos
loopne
pop
fisubs
pop
inc
push
mov
cld
pop
pop
arpl
aas
cltd
add
jg
push
xor
pop
mov
shll
test
or
dec
lret
jbe
call
loopne
mov
aaa
inc
mov
jp
or
in
fistpl
push
or
add
jmp
jae
sbb
cmp
sub
inc
jbe
push
add
into
daa
divl
jmp
dec
jo
sbb
push
out
lock
fcompp
dec
and
inc
dec
xchg
sbb
mov
sub
sbb
xchg
cltd
repz
ljmp
rol
iret
enter
lock
fistpl
sub
mov
or
ljmp
pop
jo
add
sub
pop
push
or
jge
lahf
push
mov
mov
mov
mov
js
inc
paddd
xlat
sub
in
lods
decl
xchg
das
mov
ret
andl
xchg
adc
jecxz
inc
stos
in
pop
xchg
mov
subb
mov
idivb
or
ljmp
pop
lret
out
xor
and
inc
pop
lea
sub
mov
out
jns
adc
js
mov
xor
jmp
add
xor
pop
leave
js
into
pop
out
jmp
fiadds
cmpsl
sti
push
mov
and
cld
cld
ret
adc
aaa
nop
fs
add
dec
xor
jmp
xchg
push
add
and
cmp
dec
mov
add
push
jecxz
call
adc
enter
sub
clc
fcomip
mov
test
shlb
in
sub
dec
push
pop
inc
mov
cli
add
pushl
fs
lea
adc
dec
js
outsl
clc
ljmp
mov
add
adc
jns
out
shlb
pusha
push
fcos
call
les
mov
es
out
imul
dec
lcall
outsl
nop
lods
test
sbb
pop
push
ljmp
inc
push
and
push
jle
clc
inc
out
setno
ss
cmp
pusha
xchg
adc
test
adc
fbld
int3
sub
into
dec
jmp
jmp
cmp
cmp
dec
xor
xchg
push
sub
mov
dec
push
pop
and
lcall
aad
cmp
int3
xchg
dec
ds
movsl
fmul
xor
fwait
fwait
movb
mov
ljmp
fcompl
push
cmpsb
shl
pop
or
push
cwtl
les
fdivl
pop
dec
push
ljmp
push
out
jg
dec
sahf
cmp
es
sahf
and
push
out
cli
pushl
addr16
repz
sti
jp
sub
nop
jle
je
out
f2xm1
inc
loop
lcall
decl
lods
das
sbb
das
mov
or
sub
ss
push
xlat
outsl
cli
mov
decl
xchg
fidivl
fdivrs
adc
ljmp
ljmp
mov
mov
push
adc
adc
xor
loopne
fsubrl
mov
fwait
jb
test
in
rcrl
addb
lods
inc
icebp
cli
je
decl
push
lock
pop
lcall
push
aas
or
sbb
pop
cmp
inc
inc
adc
jge
sbb
mov
xor
les
scas
sub
add
sub
push
stos
fstpl
in
xor
shlb
incl
mov
mov
sub
jo
or
mov
pop
push
xlat
fmul
push
push
in
jl
decl
cmpsb
jae
test
xlat
dec
loop
add
adc
xlat
mov
aaa
test
incl
shlb
mov
xor
mov
xor
push
cmc
addr16
pushf
adc
cmp
sub
ror
add
add
and
xlat
fisttpll
mov
mov
into
or
cmc
jmp
jmp
jmp
xchg
lods
xor
stos
fsubl
xchg
repnz
testb
cmp
mov
int3
movsb
dec
xchg
lock
sub
jb
cmc
add
jle
mov
jge
call
ljmp
sbbl
shrb
mov
mov
in
sbb
dec
xchg
xor
and
xor
push
xor
call
call
adc
lods
call
xlat
stc
mov
add
rclb
repnz
ds
stos
pushl
out
rolb
call
sbb
inc
xchg
test
xchg
cltd
out
xchg
pushl
mov
std
adc
rclb
mov
xchg
adc
xchg
jb
gs
mov
xchg
cs
or
ja
ret
mov
fldcw
stos
mov
call
mov
enter
add
cld
outsb
testl
call
add
test
mov
arpl
in
out
out
push
in
or
jmp
pop
mov
ljmp
test
jbe
es
cmpsl
in
sbb
scas
push
sbb
insb
sbb
ljmp
dec
xchg
mov
cmpsb
pop
xchg
and
xlat
cs
and
mov
push
lret
lds
dec
jmp
call
jbe
loope
pop
add
push
scas
lcall
or
or
push
imul
push
ficoms
inc
clc
inc
das
mov
ja
ljmp
cli
call
adc
and
mov
cmp
mov
pop
dec
jnp
dec
mov
inc
and
sbb
xchg
insb
xchg
sbb
jns
movl
jp
or
push
pop
pop
jp
icebp
dec
mov
lods
dec
stos
and
jbe
outsb
sub
sahf
pop
in
ljmp
cmpsb
repnz
and
dec
cmc
dec
shl
jp
data16
add
jmp
mov
ja
clc
and
das
pop
rorl
ss
and
sub
sbb
clc
lret
cld
loopne
outsl
clc
lcall
loop
and
sub
imulb
mov
push
or
cmp
sahf
adc
xchg
pop
pop
cmp
adc
idivl
loopne
iret
inc
std
shrb
nop
int3
aad
cmc
popa
mov
vpsubsw
movsl
ret
mov
ljmp
adc
xor
and
std
fists
ds
and
loop
popa
out
ds
movsb
xchg
jg
in
aam
sub
loop
jle
clc
jno
mov
add
fs
aam
popl
cltd
inc
pushl
jno
shrb
outsl
jae
jl
sahf
xchg
pop
loop
push
xor
cmp
sbb
push
sub
add
cld
push
pop
dec
cltd
scas
fstp
decl
push
imul
imul
jmp
ret
cmpsl
cmpsl
inc
xchg
insl
push
mov
data16
js
icebp
fsts
or
sbb
call
ljmp
arpl
push
mov
xchg
jge
leave
dec
outsb
ds
cwtl
stc
adc
jg
lcall
pop
mov
mov
jecxz
outsb
sbb
dec
adc
pushf
mov
aaa
int3
loopne
hlt
sub
sar
mov
mov
enter
ficoml
test
lcall
stos
and
decl
shlb
bound
add
xlat
lret
dec
mov
mov
call
bound
push
or
hlt
outsb
out
pop
pop
call
push
lcall
inc
faddl
ss
push
popf
inc
pop
lret
inc
cmp
fs
incl
mov
rcr
popf
mov
mov
imul
aaa
lcall
leave
fwait
cmp
xchg
imul
inc
dec
pushf
pop
cs
aaa
adc
cwtl
popf
repz
js
fcomip
fidivl
jnp
mov
loopne
mov
testb
cmp
scas
loopne
out
xabort
incl
xorl
cmpsb
cmpl
pop
daa
push
xor
cmc
jl
fs
arpl
lock
aas
fidivrs
xor
shrb
adc
jmp
jecxz
add
repnz
adc
add
aas
cmc
ret
rol
mov
decl
cwtl
mov
cltd
cmpsb
jecxz
std
sti
mov
cmp
adc
insb
xor
or
stos
sahf
pop
cmpsl
or
scas
rorl
stos
push
fld
or
jg
imul
or
mov
gs
mov
push
jecxz
in
repnz
into
lods
lods
cwtl
jg
test
int3
repnz
fs
xchg
push
mov
adc
ret
cmp
fiaddl
mov
or
xlat
mov
test
gs
pop
lods
bnd
incl
cld
in
cbtw
sbb
jne
outsl
addb
pop
and
sbb
lods
pop
aas
or
test
cmp
out
push
inc
or
inc
ret
dec
add
push
ret
incl
insl
loop
shrl
mov
addr16
sbb
fcomip
fsubs
insb
push
rol
loop
int3
pushf
mov
enter
incl
pop
shl
and
sahf
mov
js
xchg
mov
pushl
ljmp
lods
cmp
jne
out
ret
lahf
inc
jmp
sbb
jge
push
cmpsb
popf
cwtl
out
and
and
adc
mov
or
shlb
repnz
ret
push
dec
cmp
popf
decl
int3
inc
sti
mov
enter
pop
mov
xchg
aad
xor
jae
rolb
sbb
fstp
lgs
xor
xor
push
mov
mov
dec
sar
mov
xchg
daa
aam
fidivl
pushl
xor
scas
ficoml
js
shll
pop
int
cmpsl
jno
sbbl
xchg
mov
jge
xor
in
push
cwtl
mov
push
push
add
div
push
xor
ljmp
mov
cmp
mov
lcall
dec
push
daa
pusha
jmp
test
mov
xlat
add
jmp
dec
out
lods
repnz
loope
add
mov
and
mov
sahf
xchg
jecxz
aad
cmp
xchg
aaa
lret
clc
idivl
stc
decl
adc
mov
sar
lahf
nop
xchg
dec
xchg
dec
loopne
dec
shlb
xor
xor
cld
subb
add
fwait
sbb
aaa
and
stos
insl
fstpl
outsb
dec
cmp
loop
ljmp
mov
pop
in
push
cmp
nop
cmp
jnp
call
std
or
and
cwtl
out
mov
xchg
cmp
xchg
mov
push
call
decl
sbb
movsl
inc
je
pop
jnp
push
outsb
or
mov
pushl
test
or
xchg
cmpsl
imulb
es
in
push
rolb
inc
xor
pushf
and
cmpsl
loop
je
shrl
cmp
stos
into
pop
sub
xchg
dec
adc
int
loopne
clc
hlt
ljmp
sbb
dec
fbld
inc
rcll
ljmp
dec
test
sub
out
push
cmp
pop
mov
inc
sub
mov
ljmp
decl
sub
outsl
mov
mov
and
in
mov
addl
gs
and
sbb
outsb
ds
jmp
push
push
push
sti
or
lcall
pop
pop
pop
inc
or
or
add
leave
ljmp
jns
fsubl
outsl
movsb
push
aas
mov
sbb
lcall
sub
mov
and
jne
mov
sub
out
shlb
xor
ljmp
push
push
cltd
sar
dec
push
mov
push
push
cmp
sbb
mov
cmpsb
scas
mov
xor
sbb
ret
jecxz
mov
xchg
xchg
rcll
push
adc
push
push
pop
call
inc
jo
mov
cmp
lods
pop
xchg
push
xchg
sub
add
mov
inc
mov
sbb
stc
subl
lcall
and
loope
sub
int
ja
add
mov
fimuls
add
sarl
lock
sub
into
mov
stos
add
cli
std
incl
arpl
in
into
sbb
int
pop
movsb
test
enter
aaa
pop
fdivrl
adc
push
mov
jle
imul
gs
jg
push
out
sarl
shll
pop
cmp
adc
imul
push
inc
aas
stc
int3
popa
and
loope
in
sbb
push
outsl
xor
int
call
in
jl
fistl
inc
aam
movsb
ljmp
lea
and
popa
nop
jb
pop
std
mov
dec
test
aas
aaa
mov
insb
les
shl
bound
into
mov
mov
push
cmpsb
push
mov
test
jg
jg
fistps
and
xchg
clc
xor
pop
gs
call
movsb
push
repnz
in
or
xchg
jle
std
aaa
mov
mov
mov
pushl
cli
loop
clc
jnp
inc
mov
cmp
mov
das
lret
xchg
int3
mov
or
fcoms
mov
xor
lahf
lahf
ret
bound
adc
fs
incl
mov
mov
daa
outsl
dec
out
mov
movsb
mov
xor
push
and
mov
sti
mov
mov
or
vaddsubpd
stos
or
in
enter
sub
or
push
filds
enter
ss
inc
aad
dec
lcall
pushl
pop
clc
std
dec
push
sar
neg
repz
pop
xchg
mov
mov
push
dec
dec
xchg
jl
push
incl
jge
outsb
xchg
lcall
sar
inc
fcmovbe
pop
pop
into
les
pusha
fwait
in
fwait
fs
outsl
xor
mov
xorb
stos
cs
pop
pop
mov
sub
es
push
jg
loop
push
insb
cmc
push
inc
or
dec
push
push
push
leave
dec
cmp
mov
xchg
push
dec
ret
stos
and
std
subb
es
loope
push
cwtl
jmp
icebp
incl
jb
lods
fdivrl
sub
fnstsw
mov
xor
into
loopne
or
inc
sti
hlt
xor
loope
sub
sub
loopne
call
mov
and
inc
jg
mov
aad
and
out
ja
int
pop
or
fstpt
into
dec
loopne
in
pop
cwtl
pop
jge
jmp
dec
cmpsl
jg
ljmp
xlat
lahf
int
dec
in
sub
loop
movsl
adc
inc
push
mov
movsb
sub
aaa
daa
sbb
cs
xchg
push
out
sbb
pop
sub
lods
sti
mov
loopne
inc
add
ror
mov
jge
fcomps
leave
enter
je
loopne
sbb
jg
mov
fisubrl
xchg
mov
mov
insb
or
cmp
pop
aas
jp
ljmp
xchg
inc
cli
lcall
or
cltd
mov
mov
sarl
add
test
xchg
xor
sbb
or
jno
inc
jmp
push
push
mov
jmp
pop
xor
pop
imul
stos
leave
inc
push
loope
mov
dec
adc
nop
rcll
jbe
in
or
call
aad
mov
imul
sar
cwtl
sbb
push
mov
out
loopne
cmc
jmp
lret
call
into
pop
mov
clc
int
out
hlt
shl
test
das
lods
ss
jl
retw
fstpl
pop
sbbl
sti
mov
push
daa
dec
and
es
aam
int3
dec
fcoml
inc
jb
pushl
xchg
ss
xor
cmc
les
sbb
jae
stos
jp
rorb
leave
mov
cmp
jg
add
jae
xor
stos
pop
xorb
jo
adc
mov
pushf
or
scas
adc
std
sbb
fs
cmp
mov
scas
movsb
pushl
jp
add
push
sbb
sub
sub
inc
xor
loope
push
inc
sbbl
jmp
add
dec
loopne
aad
stos
fidivl
dec
sbb
fidivrl
and
mov
jo
js
cwtl
jmp
or
xchg
and
fisttps
jecxz
nop
les
or
xchg
filds
fs
mov
inc
aad
adc
je
sti
test
repz
loop
leave
push
movsb
xchg
xor
add
out
jmp
js
inc
xchg
pop
dec
sub
sbb
sub
in
mov
mov
clc
hlt
cmpsl
xchg
pop
sahf
dec
enter
shrb
xchg
mov
mov
jnp
push
shlb
incl
roll
cmpsl
js
pop
popa
jge
cmpsb
dec
stos
adc
sub
ret
sbb
imul
shlb
testl
incl
pusha
sti
incl
les
jp
pop
sub
mov
lcall
lock
fldt
andb
test
bound
mov
lods
xor
jb
and
je
adc
cld
mov
jns
add
sbb
mov
xlat
inc
jns
incb
imul
nop
jmp
pop
out
mov
decl
stos
in
inc
or
sbb
jno
pop
xor
and
lcall
xchg
fstpt
stos
in
outsb
test
enter
inc
jb
add
std
stc
push
decl
arpl
sbb
inc
jle
notb
pusha
xor
jge
dec
sub
aaa
xchg
call
jo
mov
test
pushl
into
adc
xor
stos
push
mov
orl
das
clc
dec
call
dec
bound
xchg
dec
loope
jmp
orb
cwtl
sub
nop
pop
fs
mov
and
xor
aad
sbb
add
or
mov
cmp
dec
xchg
fidivl
or
adc
clc
cmp
je
out
cli
test
enter
cld
repnz
dec
jne
cmpsb
lcall
incl
je
push
sbb
fstps
fiaddl
fisttps
adc
xor
hlt
mov
or
mov
mov
lods
lock
fistpll
sub
iret
cmp
dec
je
iret
dec
and
movsl
push
dec
mov
dec
or
xor
dec
pushl
fbld
jg
hlt
dec
mov
cmpsb
jo,pn
mov
std
in
incl
cld
pushl
and
lea
xor
js
test
insl
and
pushl
cmp
mov
pop
add
and
sbb
repnz
sbb
xchg
ds
pop
add
insl
push
sbb
ljmp
lret
cmpsb
xchg
xor
or
cmp
mov
in
pop
fadds
fadds
jecxz
adc
sbb
ljmp
pop
push
pusha
dec
xor
rclb
ljmp
adc
add
ds
adc
inc
in
loopne
mov
test
inc
repnz
pop
inc
lcall
das
cmp
filds
mov
pop
jo
pop
jae
addr16
sub
call
xor
mov
adc
movsl
xchg
or
sbb
add
jecxz
call
xchg
repz
xchg
out
clc
jnp
nop
jl
fwait
push
sub
ljmp
xchg
out
sub
xor
inc
xchg
lret
mov
int
loop
jbe
out
in
fsubrl
cmp
sub
and
mov
or
pop
pop
sbbl
jecxz
push
lcall
inc
outsb
movsb
lret
mov
ljmp
fists
fld
cli
das
add
and
dec
ret
cwtl
cmc
jne
cmp
push
inc
ret
dec
je
dec
jno
dec
push
pop
fs
jae
mov
cli
aas
addr16
cmp
cmp
push
adc
jo
les
incb
cwtl
cmp
fidivs
jbe
mov
xchg
and
add
sbb
push
sub
lods
pop
cmp
incl
xor
test
test
faddl
dec
add
push
int3
xor
das
mov
ljmp
add
popa
das
addr16
fcoms
stos
push
adc
out
js
int
jbe
push
sbb
loope
out
pop
mov
pop
xor
ljmp
ret
push
clc
pop
or
xlat
sbbl
inc
mov
jle
adc
sub
ljmp
shrb
pop
stc
stos
cmp
inc
aaa
push
mov
push
cmp
dec
std
jmp
xchg
and
test
loop
sub
movsb
cmp
sub
jbe
add
add
fsubp
insl
push
dec
imul
pop
hlt
gs
fwait
mov
xlat
in
mov
inc
mov
mov
call
iret
ret
sub
xchg
push
xchg
ljmp
fcoms
pushf
out
dec
imul
pop
add
cmc
jmp
mov
outsb
ds
jecxz
rolb
fistps
cmc
xabort
dec
es
stos
jge
loope
jg
int3
mov
aad
push
push
mov
test
das
pop
add
jns
sar
jnp
lahf
or
fcmovne
stc
mov
dec
idivb
xchg
mov
fisttpl
loope
and
adc
les
xchg
fisubrl
popa
jmp
xor
aaa
jecxz
in
or
or
lcall
sbb
scas
xor
and
out
les
jae
cld
adc
dec
or
cmp
jno
inc
jmp
mov
pop
cmp
jmp
pop
xchg
xor
inc
data16
hlt
icebp
gs
sti
das
xchg
adcb
gs
or
das
cli
stos
mov
sbb
fsubp
lds
and
cmp
jg
test
imul
jne
dec
pop
mov
cs
jg
jmp
lea
repnz
push
adc
aaa
mov
icebp
pop
scas
push
decl
lock
adc
fs
xor
movsb
pop
out
pop
mov
pop
cmp
fldt
xor
cmc
lds
push
int3
arpl
stos
xor
or
add
lcall
xchg
lods
jbe
cmp
aas
fninit
and
xor
jl
icebp
stc
or
mov
scas
add
and
mov
cld
jnp
add
sbb
pop
add
fistps
jae
adc
mov
mov
mov
pop
xchg
and
jmp
scas
mov
decb
outsb
lea
adc
xor
lcall
out
rcll
add
into
repz
dec
sbbl
sbb
push
mov
mov
lea
cmp
loope
imul
ficompl
call
add
jae
jmp
push
mov
hlt
adc
call
stos
scas
dec
filds
sub
mov
sarb
push
sub
pop
mov
loop
mov
and
decl
sbbl
xor
inc
sub
xor
xchg
fsubr
mov
ret
fnsave
adc
sar
decl
fldcw
out
mov
inc
pushf
mov
mov
mov
movd
jns
jo
rcll
decl
stc
sub
cmpsb
or
or
jns
sub
jmp
mov
leave
mov
sahf
sbb
mov
mov
mov
fcomip
imul
xchg
inc
jecxz
sbb
xlat
pop
push
repz
pusha
cli
pop
ret
adc
mov
xor
lret
mov
and
mov
clc
add
mov
push
out
je
pop
pop
pavgb
dec
imul
scas
clc
ljmp
hlt
push
add
mov
xchg
ljmp
xor
sbb
sbb
cli
fstpt
and
rolb
ljmp
pop
mov
frstor
mov
mov
adc
jmp
fs
mov
pop
aad
pusha
or
jns
mov
jns
add
cmpsb
and
das
hlt
es
push
decl
stc
or
push
jp
insb
lcall
rclb
jp
fisubrs
pushl
test
test
pop
jne
dec
scas
sbb
stc
cmovl
lods
sub
mov
ljmp
mov
dec
loope
iret
mov
out
pop
and
icebp
pop
std
call
fsts
mov
lret
mov
push
or
call
push
mov
cli
mov
rcll
ror
pushf
xorl
mov
jne
pushl
inc
jae
in
mov
jle
adc
enter
sbb
and
mov
insb
xor
mov
xorb
cli
dec
or
pop
outsb
xlat
add
sti
mov
jmp
push
cmp
shl
adc
push
adc
inc
lods
sbb
rorb
dec
fildll
subl
andl
hlt
dec
ljmp
rolb
leave
xlat
jne
adc
lahf
mov
jmp
aas
test
jns
scas
pop
add
or
jae
scas
ret
sbb
jmp
subl
cmpl
dec
pushf
fwait
xchg
xor
mov
mov
arpl
ljmp
sahf
pop
dec
fsubrl
or
insl
and
and
mov
xchg
test
dec
ljmp
lods
aad
xchg
scas
leave
pop
jbe
mov
adc
sub
inc
mov
or
lcall
fcomip
pushl
or
dec
rorb
inc
push
lods
das
pop
std
jbe
idiv
jmp
jbe
jp
xchg
mov
dec
xchg
in
in
fdivrs
lock
lahf
gs
sahf
jmp
ret
and
out
cmpsl
inc
cmpl
pop
into
adc
push
icebp
fdivrl
and
inc
imul
push
dec
mov
mov
lea
into
mov
sbb
aas
loope
fldcw
out
xor
push
mov
lcall
cld
sahf
ds
call
cld
out
inc
notb
mov
std
push
iret
test
push
dec
ljmp
adc
jmp
or
out
xchg
jno
iret
stos
call
sbb
and
rol
movsl
push
lcall
xor
out
mov
xor
cmp
clc
push
cmpb
add
jmp
pop
pop
stos
into
dec
mov
iret
filds
xor
mov
adc
lock
std
sub
test
pop
xchg
cmp
ljmp
stc
out
inc
divb
leave
sbb
or
xor
das
xchg
cmpsb
jbe
jb
in
mov
aad
adc
xchg
out
int3
push
mov
or
jp
sub
xor
push
mov
push
lret
push
inc
mov
test
push
sub
test
sti
sub
clc
jb
dec
adc
push
push
aas
add
decl
lods
int3
add
icebp
cli
jp
test
inc
in
mov
lret
pop
push
dec
fdivrs
or
movsl
sbb
shl
daa
add
xchg
decb
pop
cs
mov
cmp
pusha
sahf
icebp
pop
xlat
cmpsb
pop
imulb
or
jb
mov
not
mov
lods
mov
mov
push
test
fcomip
decl
cwtl
fdivrs
dec
clc
sahf
out
mov
pop
les
stos
aad
data16
push
dec
lret
cmpsl
adc
xchg
scas
push
leave
pop
cmc
movsb
aam
xor
leave
push
cmp
xchg
mov
fadd
aas
xor
lret
jl
dec
negl
xchg
negb
jg
arpl
xchg
in
mov
mov
push
pop
andb
push
dec
jge
pop
jg
inc
repz
add
mov
lea
pusha
jg
mov
subl
cmp
push
push
and
mov
ret
ljmp
push
add
jbe
dec
out
sbb
std
hlt
ljmp
pop
or
dec
or
out
inc
and
xor
xor
adc
adcl
fldt
sub
xor
rolb
push
mov
or
fucom
lods
ss
mov
sub
cmp
loope
ret
adc
and
lcall
pop
fiaddl
sahf
and
mov
pop
push
xchg
cmpsl
loop
pop
fcmove
sbb
bound
jmp
push
mov
and
shl
mull
movsb
mov
dec
mov
cmp
movsb
or
das
mov
sbb
push
jge
xor
pop
sar
mov
sub
push
fmuls
or
push
scas
cmp
adcl
aad
inc
loopne
or
in
mov
lock
adc
je
movsl
fwait
scas
cmp
out
mov
shlb
pop
ljmp
jno
insl
add
push
pop
fidivrl
call
arpl
popf
push
mulb
jle
imul
or
shr
sbb
movsb
adc
sbb
clc
push
sub
subb
in
dec
imul
data16
mov
out
push
pop
rcll
push
xor
and
and
pushf
pop
movsb
or
jmp
sbb
mov
mov
push
aaa
xchg
xor
call
lret
stos
sub
stos
cwtl
sub
xor
or
mov
cwtl
xchg
lods
ljmp
mov
call
sbb
and
push
iret
adc
sub
or
out
pop
pusha
jae
xchg
mov
loopne
iret
dec
jge
mov
movl
dec
jecxz
mov
pop
xchg
out
mov
subl
ret
insl
gs
pushf
pusha
mov
incl
mov
push
dec
push
adc
inc
fs
sbbl
xor
lret
xchg
adc
dec
push
or
or
fisttpll
call
cli
xlat
xorl
inc
push
xchg
notb
mov
fxch
cmpsb
in
mov
outsl
repz
repnz
push
mov
fwait
xor
xor
adc
mov
in
loope
les
flds
fstpt
mov
pop
mov
jbe
call
add
pop
xchg
insl
jb
scas
aaa
or
and
add
dec
mov
push
add
push
xor
btr
and
call
repz
loopne
cmp
inc
jae
int3
rcrb
out
lahf
push
loopne,pt
jno
jae
decl
sti
or
mov
pop
cli
inc
push
and
cmp
bound
jmp
push
inc
sub
ja
dec
mov
adcl
sub
popa
xchg
call
decl
cmp
and
js,pt
lock
add
add
imul
clc
fs
lret
sub
jns
jge
incl
inc
aad
inc
imul
xchg
test
in
fs
jle
mov
pushl
dec
arpl
fwait
xchg
mov
addr16
lahf
pop
dec
add
mov
pop
sarl
jmp
int
imul
or
inc
push
mov
mov
loop
call
insl
cli
push
jmp
repz
and
jl
jle
mov
nop
pop
mov
inc
pushl
jno
movsl
adc
and
jmp
jl
xchg
add
das
or
mov
pop
adc
sahf
dec
scas
popa
push
scas
lods
clc
clc
in
decl
ljmp
sub
or
jnp
adc
cmp
cs
pop
mov
hlt
jmp
adc
adc
add
mov
pop
mov
ljmp
mov
inc
xchg
call
push
popa
and
lods
mov
lock
test
ljmp
pop
int3
cmp
arpl
or
test
loopne
pop
cmp
pushl
jl
andb
xchg
test
outsb
mov
push
add
shrb
jnp
repnz
inc
pushf
int
fcoms
iret
or
les
enter
fnstenv
sbb
adc
xor
jmp
inc
ret
into
orb
repnz
adc
scas
pop
gs
jecxz
dec
or
out
pop
xor
mov
test
icebp
xor
jp
stos
push
addr16
lods
add
sub
decl
xor
popf
mov
jmp
movsl
pop
push
mov
sbb
add
xor
xchg
repz
cmp
sub
inc
xchg
sbb
ds
pushl
sbb
add
and
push
aas
dec
insl
popf
movsl
mov
xor
mov
mov
mov
in
jb
sbb
scas
add
mov
push
ret
jl
adc
decl
jge,pn
xor
mov
imul
cmp
push
fs
cmp
test
and
lcall
xchg
aaa
and
sar
jno
cwtl
lods
in
test
mov
sub
loop
add
in
push
cmc
and
cmpsb
sub
xlat
ss
mov
daa
mov
jno
fsub
pushl
movsl
lods
xor
ss
and
pop
lret
push
push
test
xchg
out
xor
loop
pushl
push
mov
scas
mov
shr
popf
cmpsb
xchg
cwtl
pop
push
add
mov
lcall
or
pop
dec
xchg
push
adc
xor
xor
add
inc
cmp
jle
inc
int
fildll
dec
jns
loopne
ss
addr16
scas
cmpsl
sti
sub
fnsave
push
sbbb
mov
popf
jmp
scas
dec
cmc
jecxz
jmp
mov
mov
mov
ss
jns
inc
lret
jl
cltd
lret
dec
push
pop
inc
xor
ljmp
in
aam
stos
mov
push
mov
jb
pop
xor
clc
hlt
mov
cmp
out
pop
jle
jnp
cmpsl
shll
sub
push
mov
movsb
sbb
or
std
push
mov
push
pop
cmp
inc
add
push
out
dec
sbb
ljmp
test
inc
xor
xor
nop
lock
call
xor
jmp
sbb
lcall
mov
mov
jmp
sub
ljmp
lock
je
xchg
xchg
mov
sbb
push
int3
icebp
xlat
mov
xchg
les
mov
cmpb
or
fwait
cmp
pop
mov
shll
sbb
inc
aas
loopne
hlt
mov
mov
addb
mov
or
mov
pushf
sub
pop
fsubrs
push
fcom
dec
rcrl
std
ljmp
shlb
pop
daa
rcr
sbb
jl
cmpsb
mov
cmpsl
pop
inc
popa
shrl
xchg
decl
lock
adc
pop
pop
cmpb
and
clc
mov
add
adc
or
rcr
cli
incl
dec
test
push
cmp
push
ja
xchg
in
ffree
xlat
aam
jmp
pop
mov
jg
cs
ds
xchg
fisubs
lock
pop
in
and
jmp
adc
sbb
lock
dec
sbb
pop
rorl
inc
dec
jnp
adcl
inc
loope
inc
hlt
sub
xorl
fcmovbe
loopne
js
jecxz
cmc
test
aaa
aas
cmp
or
out
pusha
in
xchg
sub
mov
sbbl
lods
outsl
cmc
push
incl
mov
cli
pop
mul
add
dec
and
decl
es
shlb
cmpsb
push
dec
xlat
rdtsc
aaa
inc
push
push
stos
or
sub
xor
js
push
jno
call
decl
sbb
push
sub
add
ja
fstpt
sti
cmpsb
xchg
ljmp
mov
icebp
es
or
incl
add
xchg
nop
or
cltd
adc
hlt
sub
add
outsb
das
push
adc
js
sub
pop
and
dec
dec
cwtl
pinsrw
cmpsb
das
subb
sub
mov
sbb
and
jge
xlat
xchg
xor
cmp
std
lds
adc
xor
bound
aaa
mov
ljmp
out
ficompl
decl
das
inc
dec
push
ja
and
je
not
mov
mov
ljmp
mov
inc
push
inc
push
mov
lods
sbb
jmp
sbb
out
dec
mov
out
pop
adc
cld
adc
sbb
incl
mov
sti
pop
shl
fcmovbe
stc
cli
dec
adc
jne
decl
mov
mov
fcompl
xchg
hlt
in
lcall
les
adc
jmp
xor
incl
into
mulps
adc
iret
stos
out
push
lods
sbb
incl
mov
orb
inc
cmpsb
adcl
push
xor
scas
xchg
jbe
adc
mov
ss
cli
incl
xchg
adc
xor
push
mov
dec
repnz
and
in
mov
out
ret
fidivs
or
or
xor
inc
xlat
mov
dec
mov
and
call
pop
add
and
push
jmp
ja
arpl
ror
les
das
push
lock
pop
outsl
xchg
es
cs
jl
pop
xchg
call
cmp
and
or
pusha
sbb
mov
push
ja
mov
add
aad
stc
sub
incl
sub
push
stos
popl
imull
sub
lods
nop
sub
mov
les
ss
outsl
jae
nop
xor
pop
push
out
pop
imul
jle
test
dec
jmp
fidivs
lods
and
loopne
call
push
and
mov
call
jo
jl
mov
and
pop
mov
movsl
je
or
jge
lret
out
pushf
outsl
or
sbb
push
ja
les
lock
mov
mov
xor
mov
pop
add
mov
lods
ss
jecxz
ljmp
test
hlt
cld
fistl
outsb
mov
iret
shl
in
sbb
mov
dec
add
rolb
fsubs
mov
lcall
pop
or
stc
add
lock
mov
ret
aas
cmc
and
xor
sub
insl
mov
jbe
in
xchg
call
rorb
aam
xchg
inc
push
add
fcmovb
mov
iret
insb
lods
pop
jp
mov
inc
pushl
lcall
adc
lds
adc
and
jle
jge
jg
and
xchg
push
sahf
xchg
lret
ret
jne
bound
adc
pop
cmp
sub
rcrb
push
add
pop
aad
aas
fisttpll
push
fldl
ds
clc
jns
loope
mov
fcomip
lcall
push
jno
cmp
fwait
sahf
jnp
sub
leave
pop
push
mov
push
and
mov
dec
ret
or
popf
mov
rcll
adc
fistpll
mov
call
push
jo
and
cmp
andb
xor
mov
popf
test
jl
push
shll
cmp
mov
aaa
mov
mov
mov
inc
inc
push
test
cwtl
add
std
lret
jmp
popf
data16
mov
icebp
xchg
cmp
out
jb
xlat
or
jle
lcall
or
repz
adc
push
mov
pop
inc
rcll
loopne
int
push
mov
pushl
mov
xchg
js
push
inc
sti
stos
movsb
dec
add
inc
jne
cmc
mov
std
mov
stos
js
int3
push
loope
mov
mov
popa
pop
push
ds
cmp
push
pop
insb
dec
lea
std
pop
xchg
jp
int3
cld
aam
push
lcall
or
notl
cmp
aas
pop
and
xor
int
xor
dec
push
push
jnp
outsl
mov
roll
fmul
inc
fdivrl
daa
and
mov
aad
xor
loopne
jne
jmp
idivl
int
dec
idivl
movsl
add
inc
fldl
rcll
mov
adc
iret
test
jmp
sub
int
mov
mov
arpl
mov
jg
pushf
dec
test
test
or
aas
mov
dec
es
call
mov
int
loop
xchg
std
insb
pop
xor
stc
nop
pop
shr
add
adc
cmpsl
xchg
jg
jle
mov
mov
mov
int
adc
jne
jl
pop
sbb
js
add
jecxz
gs
aaa
lret
push
mov
sti
iret
jle
cmp
xchg
pop
mov
mov
xor
incl
dec
push
and
mov
pop
lret
insl
mov
movsb
mov
dec
lcallw
jno
push
sahf
repnz
add
push
lcall
adc
jnp
shr
aaa
in
sub
dec
jg
ret
in
test
mov
fdiv
outsl
mov
fistps
xchg
pop
xchg
jnp
int3
jns
mov
call
jmp
into
jne
lds
nop
sub
out
loop
aad
aas
mov
pop
lods
dec
ret
sbb
orb
pop
jl
movsb
jmp
push
shlb
xchg
xchg
jmp
pop
pop
bound
scas
ret
mov
sbb
adc
add
or
adc
jmp
incl
daa
pop
roll
data16
cmpsl
or
jno
push
dec
add
add
insb
bnd
jne
jmp
inc
inc
cmc
push
cli
lcall
xor
ficompl
jns
cmovge
pushl
js
adc
icebp
mulb
and
lea
sbb
aaa
ja
lcall
jb
inc
lock
mov
int
out
adc
decl
bnd
pop
lahf
clc
movsb
shlb
mov
je
iret
sbb
adc
negl
scas
lcall
aaa
xchg
jl
insb
adcl
mov
mov
loopne
jns
call
xorl
pop
push
sbb
mov
jg
paddusw
pop
sbb
aas
sbb
fwait
ljmp
clc
mov
testl
imul
jmp
stos
mov
out
push
rorb
sahf
mov
push
dec
aaa
dec
negb
call
cmp
jbe
in
shlb
cmpsb
js
xor
daa
mov
or
add
std
in
pop
mov
inc
mov
mov
mov
daa
and
mov
add
ljmp
jb
lcall
int
std
pop
imul
clc
fildll
add
sub
insb
xor
add
lcall
incl
and
xchg
dec
xor
insb
cmp
inc
push
out
cmp
decl
push
rorb
call
ja
inc
fldz
loop
jnp
adc
insb
pop
adc
std
ljmp
pop
outsb
add
xchg
fisubrl
imul
fxch
push
cmpsl
nop
pusha
xchg
jo
pop
mov
jns
mov
je
sarb
dec
xchg
mov
test
jle
lret
jno
lcall
sub
jecxz
jle
rcll
sbb
std
lods
jp
hlt
sub
test
sbb
mov
clc
cmc
cmp
std
rclb
lcall
and
mov
cmp
jae
or
inc
cmp
mov
jo
inc
push
shl
cwtl
mov
mov
jo
rolb
clc
or
std
test
pop
imul
dec
insb
cmp
dec
push
sbb
pop
ret
les
outsl
insb
in
cmp
push
inc
js
sbb
mov
mov
pop
cmp
mov
lret
repz
scas
sbb
xchg
pop
test
mov
out
mov
cmpsb
sub
mov
aam
cmpsb
out
add
pop
fdivrl
dec
sbb
xor
xchg
ljmp
test
and
daa
mov
mov
pop
mov
jp
icebp
rorb
sub
hlt
decl
push
fiaddl
daa
test
jmp
call
ljmp
and
push
xchg
movsb
inc
in
jae
repnz
ss
jmp
inc
cmp
ret
rclb
sbb
inc
out
mov
mov
push
mov
iret
ds
aad
jmp
mov
stos
pushl
or
loope
mov
hlt
rep
and
cs
push
sahf
in
fisubrl
fs
decl
push
cmp
jae
mov
pushf
xor
sbb
mov
lea
fstl
mov
add
mov
pop
mov
outsl
push
add
jg
lock
bound
js
dec
cld
es
decl
mov
ss
ja
mov
and
cmp
lahf
and
add
ljmp
sbbb
subb
mov
icebp
add
pushf
or
lcall
jmp
cmp
lods
mov
xor
arpl
push
call
pushf
repz
out
movsb
icebp
xor
inc
insl
ss
or
ficoml
es
call
xchg
mov
lods
pop
int
cmc
mov
inc
dec
popa
imul
loopne
mov
jmp
pop
sbb
dec
aaa
bound
add
xchg
mov
mov
test
ljmp
rorb
out
cli
fsubrs
push
xor
mov
dec
and
lcall
dec
and
pop
adc
ret
je
mov
pop
mov
adc
ds
push
mov
and
dec
dec
scas
test
sahf
pushf
rcrb
fcomp
outsb
push
mov
push
xor
pop
shlb
lods
sbb
out
sarl
xchg
js
mov
pop
cmpsb
push
out
stos
jge
movsb
outsl
and
dec
sarl
call
adc
inc
dec
mov
fwait
int
scas
and
outsb
rolb
call
cli
jmp
loop
cmc
push
mov
faddl
adc
decl
xchg
sub
jecxz
dec
cmp
rcrl
imul
mov
icebp
js
jnp
add
nop
mov
lcall
xchg
lea
lret
icebp
mov
cmp
out
mov
push
adc
sar
ja
xchg
cmp
xlat
stc
push
mov
insb
sbb
mov
xor
testb
loop
gs
movsb
loopne
cmpsl
cwtl
ljmp
adc
xor
outsb
pop
mov
rorb
dec
jecxz
cmp
inc
or
ljmp
mov
mov
add
popf
imul
sar
jg
cli
or
rorl
jnp
comiss
dec
xchg
jecxz
xorb
push
xchg
mov
ljmp
cmp
xchg
mov
js
cmc
divb
mov
push
mov
je
dec
mov
xchg
inc
xchg
lret
and
pop
nop
jb
into
add
aaa
cld
mov
sbb
addb
pushf
pop
mov
rclb
ljmp
mov
jb
imul
mov
xor
push
cmpsb
cld
mov
ljmp
ljmp
test
adc
fmul
test
ror
stos
push
mov
and
cmp
inc
mov
pop
lods
cs
add
notb
xor
call
sbb
or
add
cmp
in
cmp
and
sbb
sbb
push
addr16
aas
int
aaa
add
jle
pop
push
sbb
cld
pushf
jb
jecxz
mov
sysenter
pop
mov
xchg
ljmp
jns
mov
enter
sbb
xchg
sarb
dec
xlat
scas
shrb
and
dec
outsl
xchg
int
dec
or
mov
lcall
loopne
mov
or
sbb
rcrl
push
shrb
mov
cli
out
adc
add
incl
bnd
sub
es
stos
addr16
es
sub
push
loop
cmp
gs
call
enter
lcall
and
ja
adc
cmp
lcall
hlt
inc
xchg
sub
mov
mov
sub
outsb
clc
popa
push
insb
clc
add
mov
sub
hlt
in
incl
xor
outsl
dec
push
inc
mov
cmp
je
sub
gs
xchg
jl
jae
mov
decl
in
sbb
cmc
or
adc
divb
jge
fmull
jg
jo
call
cmpsl
cmpsb
aad
shll
bound
and
jae
loop
sbb
push
jg
pushl
pushf
sbbl
cmpsb
or
daa
ss
jne
mov
fs
jmp
mov
andl
and
adc
cmp
out
sub
push
cli
ljmp
rolb
js
div
fwait
jbe
mov
movsl
mov
xchg
rorb
ljmp
jo
dec
mov
mov
sbb
fnstenv
gs
pushl
orl
xchg
xlat
loopne
shlb
lret
or
mov
sarb
aaa
and
adc
mov
out
mov
xchg
or
mov
mov
pop
mov
and
add
mov
call
bound
insb
je
adc
insl
inc
lret
cmpl
cmp
xor
sbb
jl
roll
iret
scas
sub
pop
and
jb
mull
int
repz
ret
div
inc
loopne
ljmp
adc
loop
fwait
add
ss
mov
and
xor
add
les
lcall
mov
dec
push
pop
ljmp
add
shrd
push
loopne,pt
dec
or
lcall
fnsave
inc
jb
cmc
js
push
mov
orl
ss
mov
jnp
shlb
mov
pushf
mov
push
inc
jl
mov
call
loop
fcomi
loopne
jmp
cmp
clc
inc
scas
pop
std
pop
or
jg
jmp
stos
lods
mov
xchg
jecxz
fidivrl
test
mov
pushl
pop
dec
andb
xchg
andb
mov
mov
or
jo
lcall
jb
or
test
sbb
mov
adc
cwtl
sbbl
pop
xchg
and
decl
sbb
adc
sbb
or
sbb
stos
testl
sahf
or
jmp
or
and
push
sbb
ljmp
stc
pop
inc
mov
mov
push
lret
inc
loop
out
and
jmp
bound
in
ljmp
mov
and
pop
xor
mov
test
mov
add
jmp
mov
ljmp
sbb
push
add
lcall
nop
mov
and
popa
daa
add
pushl
std
cmp
jae
rcrl
out
mov
loop
xorl
call
pop
jecxz
imul
pop
inc
xor
popa
pop
rorb
pop
inc
sbb
jg
pop
sub
push
lods
outsb
enter
mov
jae
shl
jg
out
cmp
inc
push
add
pop
jae
mov
jns
push
push
push
repz
lret
dec
sub
pushl
mov
lcall
and
mov
sbb
adc
jmp
pop
enter
shlb
lcall
dec
push
mov
pop
dec
rcrl
adc
subb
pop
xlat
cmp
cmp
out
leave
sar
mov
mov
cmp
adc
mov
pop
mov
call
repnz
jb
xchg
sub
sbb
mov
das
pusha
test
incl
iret
xchg
es
inc
je
fwait
cmpsb
rolb
pop
imul
lcall
shll
push
stc
push
inc
mov
xchg
and
std
xchg
and
adc
inc
xor
incb
add
mov
sub
nop
cmpsl
fstl
movsl
mov
ss
fwait
inc
inc
out
out
push
push
shrl
fcomps
push
mull
ret
pushl
out
shlb
push
mov
sub
aaa
fwait
clc
loopne
aad
mov
jmp
inc
mov
mov
push
jge
shlb
daa
mov
fcomp
mov
sub
in
jae
mov
xor
les
lcall
call
adc
lds
loope
sarb
xor
orb
mov
adc
mov
loop
lahf
outsb
gs
sbb
addb
xchg
push
into
repnz
jbe
push
pmaddwd
or
mov
in
ljmp
inc
pop
icebp
lods
jp
jno
sbb
adcb
or
popf
xchg
add
push
gs
movaps
lcall
xor
push
sar
ljmp
stos
mov
ret
lret
adc
jg
sub
rclb
inc
std
mov
mov
cmpsl
dec
mov
lcall
in
xchg
sub
fs
mov
xor
es
adc
in
inc
cmpsb
mov
push
in
repz
cmp
mov
test
jae
mov
fadd
mov
test
mov
imul
xchg
add
mov
mov
repnz
cmp
push
xor
dec
mov
sti
cltd
scas
sub
jg
and
fsubs
sbb
xchg
jmp
fs
pop
push
jmp
push
mov
cmp
stos
out
out
lret
cmp
xchg
and
add
push
incl
cld
jmp
popf
adc
jmp
cmc
add
dec
lcall
rol
aas
movsb
and
dec
mov
nop
pop
fidivl
mov
fdivs
popf
adc
sti
stos
pop
xor
add
hlt
sbb
dec
aas
add
das
sub
jmp
ds
loop
xor
jmp
dec
ljmp
cmp
cld
ljmp
outsb
add
push
ret
jbe
call
xchg
xor
test
jg
cs
mov
xchg
clc
fidivrl
aad
hlt
sub
mov
mov
std
pop
dec
fsts
push
mov
ljmp
dec
mov
sbb
jnp
sub
decl
cmp
cmp
movsl
nop
scas
adc
mov
push
in
jnp
push
loope
clc
mov
mov
lea
sbb
outsl
mov
hlt
push
sbb
iret
push
xchg
popf
pop
gs
pushl
sarl
test
jle
mov
jmp
push
jmp
sti
push
mov
mov
or
cltd
inc
and
jmp
dec
mov
adc
and
in
dec
add
subl
jmp
cmp
lock
fildl
cld
mov
les
push
mov
jmp
and
mov
test
pop
imul
add
call
push
adc
adc
shr
outsb
jl
incl
pop
dec
jp
into
mov
leave
jnp
or
cmp
mov
add
dec
test
and
sbb
iret
cwtl
fistpl
mov
imul
jo
push
mov
cmpsl
and
loopne
sbbb
mov
ds
adc
mov
inc
sub
ret
ret
shlb
jmp
add
inc
in
mov
push
fld1
mov
jno
aad
sub
daa
cmp
cmp
jmp
jp
mov
push
pop
jne
nop
xchg
sahf
sahf
mov
into
and
arpl
xor
or
movsb
call
dec
shl
jo
shlb
push
pop
dec
ret
add
dec
cld
xchg
lods
rcl
or
jp
mov
mov
jmp
inc
mov
push
mov
adc
dec
add
js
sub
jg
push
xor
lods
xor
and
je
aas
lret
and
stos
sbb
jp
dec
out
jmp
push
push
aam
vprotd
jns
icebp
fwait
shlb
or
xor
inc
or
jg
ss
in
fsts
sub
int
mov
mov
stc
in
rcll
lods
movsl
cmp
incl
adc
jecxz
lcall
int3
fisttpl
lahf
jmp
iret
push
add
jg
pushl
sahf
aad
sbb
popl
dec
repz
loop
and
sbb
or
dec
push
icebp
lcall
std
jp
adc
and
lcall
push
lock
sub
cwtl
and
mov
add
add
pop
call
lock
adc
xchg
mov
pop
into
inc
xchg
cmp
sub
push
pop
cmp
inc
incl
int3
arpl
mov
imull
mov
inc
enter
repz
mov
cli
insb
push
and
xchg
test
cmp
es
inc
movl
inc
xor
shl
pop
inc
js
js
pop
pop
mov
loop
test
fsubs
cmp
cmpsb
pop
xor
adc
mov
xchg
cld
pop
inc
mov
or
js
fcmove
dec
or
pushf
je
pushl
mov
inc
call
sbb
xchg
pop
clc
dec
shl
xor
dec
je
out
jg
push
fisttpll
fisubs
leave
imul
ds
xchg
stos
xchg
or
pushl
pop
mov
xchg
xor
jg
jge
add
mov
in
lcall
mov
sbb
inc
mov
pop
jae
xchg
push
cmp
or
xor
aad
incl
lcall
lock
jnp
xor
mov
xlat
sar
xchg
mov
loop
std
push
jecxz
inc
cmc
lea
xchg
adc
pushl
fdivrl
xor
int3
ljmp
dec
insb
mov
inc
dec
add
cmp
pop
push
inc
out
cld
adc
call
push
jge
xchg
loope
jge
inc
popa
pushf
js
pop
push
test
sahf
idiv
lahf
sbb
mov
add
test
sahf
in
push
cmpsl
add
insb
adc
pushf
cmp
push
push
mov
cmc
inc
jp
fisttpl
in
mov
arpl
xchg
je
mov
or
idivl
cs
push
ljmp
mov
push
lods
sbb
mov
std
mov
sarl
mov
inc
mov
sbb
mov
movsb
inc
xor
sbb
mov
sub
test
js
dec
gs
gs
pushl
and
stos
inc
shrl
add
push
add
imul
ds
mov
shlb
or
xchg
je
in
fcomip
les
dec
mov
lcall
hlt
xchg
jno
add
data16
dec
stc
clc
lcall
fcomip
sub
xchg
sbb
mov
out
rcr
shr
sub
pop
sti
and
jne
push
pop
mov
cmc
roll
mov
cmp
leave
mov
call
loopne
cmpsb
lods
cmp
pop
mov
adc
icebp
sti
aas
mov
outsl
cmp
mov
ljmp
scas
ss
insb
mov
pop
inc
in
cmpsb
dec
out
mov
nop
rorl
add
cmpsl
mov
mov
push
xor
out
mov
dec
push
sub
scas
js
jb
xor
loopne
jne
in
loope
pushl
shl
iretw
pop
inc
adc
scas
pusha
shlb
jge
push
dec
fwait
bound
cmp
scas
clc
jmp
testl
mov
add
aaa
xor
addr16
out
inc
xor
adc
xor
imul
push
xchg
aas
rol
xchg
sbb
outsb
into
pop
push
in
jg
fimuls
ret
test
leave
or
push
jle
dec
pop
imul
inc
cmp
dec
sbb
jb
call
mov
stos
mov
sbb
rcrb
mov
push
mov
ljmp
cld
cmpsl
scas
add
dec
mov
push
cltd
test
sahf
xchg
mov
mov
push
fildl
sbb
or
push
pop
push
mov
jle
pop
decl
nop
in
call
cmpsl
sbbl
jle
outsl
icebp
cmp
loopne
loope
mov
aaa
lea
jecxz
dec
test
add
sahf
lret
jbe
and
stos
or
ss
std
pop
mov
adc
mov
sbb
or
inc
adc
ret
dec
xchg
add
incb
shl
mov
dec
ljmp
adc
cmp
repnz
test
mov
xor
mov
out
mov
orb
mov
scas
pop
ljmp
in
dec
loopne
ret
iret
rorb
mov
cld
out
ljmp
add
pop
decl
mov
mov
cmp
lcall
test
sub
jg
lea
xchg
xchg
outsl
cwtl
mov
cmp
decl
push
jbe
and
imul
pop
out
fwait
push
outsl
sub
pushf
out
fmull
loop
in
jmp
notl
push
nop
pop
inc
push
in
sbb
jnp
js
subb
nop
decl
mov
xor
ret
inc
loopne
lock
bound
mov
jecxz
sbb
outsb
lcall
cli
mov
xor
pop
inc
sbb
inc
fsubs
or
push
xor
pushl
cmp
bound
dec
push
leave
adc
jmp
mov
scas
sar
ficoms
lcall
mov
jle
in
adc
inc
inc
and
mov
and
lock
inc
std
ds
xor
scas
inc
jne
and
js
push
jbe
pusha
aam
loope
test
dec
cld
lcall
fs
cmpsb
mov
out
test
xchg
sub
inc
xchg
adc
call
test
jno
fsubrl
mov
or
inc
lret
or
lret
sbb
xchg
fdivrl
aad
sbb
push
mov
or
gs
std
loopne
sahf
stos
sbb
cwtl
mov
jecxz
movsl
inc
dec
pop
or
or
mov
cli
cmpsl
fsubrl
insb
mov
xchg
in
inc
sub
inc
aas
mov
xchg
and
add
add
int
cwtl
jmp
add
cmpsb
jmp
dec
cmp
icebp
es
sub
xor
mov
mov
cmp
ds
in
sbb
testl
add
cmp
mov
cmp
insl
stos
push
push
sub
add
mov
jbe
hlt
cltd
bound
jg
call
out
cmpsl
or
add
int3
cld
adc
gs
xchg
xlat
imull
aas
add
ja
jecxz
addr16
rorb
lock
jecxz
ret
std
cmp
ljmp
adc
pop
or
sti
cmpl
sbb
add
lea
mov
scas
xor
jmp
mov
icebp
cltd
cmc
jae
es
push
sub
rcll
mov
mov
fwait
loop
lcall
jne
mov
mov
cmp
shll
pop
cmp
and
xchg
mov
xor
sbb
cmpsl
jns
dec
sbb
out
clc
ljmp
and
stos
sbbl
std
mov
inc
rclb
xchg
inc
ljmp
and
inc
mov
push
xchg
mov
jae
dec
cmp
les
mov
das
ds
xor
insb
jb
enter
jnp
jecxz
mul
mov
xchg
mov
jle
lcall
mov
cwtl
lret
xchg
inc
sub
mov
push
lods
fwait
push
cmc
leave
jg
ljmp
mov
pop
xchg
and
addl
out
lock
popa
cld
jo
repnz
or
push
mov
cmpsb
jp
mov
pop
add
jae
pushf
test
sti
pop
lock
mov
sub
xor
sbb
inc
inc
cmc
xor
adc
ret
cmp
out
and
push
leave
mov
fcoml
mov
push
jp
test
mov
in
xor
jecxz
scas
test
jnp
adc
fbld
sub
lcall
and
aas
xchg
std
pop
pusha
jmp
js
fsubrs
mov
loopne
mov
movsl
fldenv
ljmp
sub
ds
mov
shl
xchg
and
in
into
jecxz
ss
push
movsl
mov
fidivrs
mov
mov
pop
cld
jbe
cmpsl
ja
sti
lock
and
pop
xchg
sub
mov
testl
mov
mov
fdivrl
std
sub
lock
xor
roll
and
pop
xor
outsl
imul
out
cmp
mov
xchg
imul
jnp
das
mov
mov
jl
mov
add
inc
in
loope
cs
lods
loopne
call
inc
int
add
mov
push
jne
jp
int
pop
out
rclb
xor
mov
lcall
shr
iret
jo
mov
rorb
adc
inc
mov
push
sbb
ljmp
push
incl
lahf
in
je
and
mov
or
cli
lcall
sub
push
jb
ret
ljmp
sbb
pop
mov
movsl
daa
and
mov
es
pop
jg
mov
fisubs
scas
lret
clc
stos
pop
icebp
fwait
pop
inc
jnp
dec
leave
in
cmp
bound
sbb
push
pop
or
add
aaa
jnp
jb
shlb
push
lcall
int
jmp
add
testl
hlt
out
scas
xchg
mov
fsubl
test
decl
pop
sbb
repz
cmpsl
stos
and
in
jne
mov
mov
jns
dec
fmull
arpl
pop
or
fisubl
nop
bound
idiv
cmp
dec
jg
lods
sub
xchg
add
adc
pop
cwtl
jmp
sbb
fimull
jmp
cmp
dec
int
icebp
cld
pop
clc
es
push
xchg
scas
jle
cmp
xor
in
out
clc
sbb
push
lods
in
pushl
jb
sar
xchg
test
jp
and
call
scas
lods
push
sub
jmp
jae
mov
enter
in
and
cmp
dec
jle
imul
mov
neg
add
minps
lods
push
fistpl
dec
sahf
outsb
pop
mov
inc
in
les
faddp
pushl
adc
test
sub
rcll
sti
add
jnp
dec
daa
cmc
ret
ret
jge
sbb
jmp
adc
push
jno
sti
loop
mov
std
ljmp
sub
sbb
add
mov
inc
xor
movsl
pop
jle
dec
or
inc
push
fadd
ss
pop
orb
push
std
jg
das
clc
xor
pop
ja
mov
cli
mov
push
lock
push
jmp
or
xor
sahf
sub
loope
out
push
sbb
clc
push
fs
cmc
cld
sti
stos
jo
pop
cs
ljmp
xor
fs
aam
icebp
xchg
icebp
jnp
scas
gs
xchg
push
sub
sub
lahf
dec
jp
out
xchg
std
push
add
scas
mov
jb
dec
or
rorb
add
fcomip
inc
scas
or
and
mov
int
fwait
cmc
les
aaa
sub
jmp
out
and
cmp
ds
cmc
adc
decl
lock
inc
leave
cmpsb
jno
cmc
mov
and
rcrl
icebp
push
ljmp
shll
pop
xor
push
dec
push
insl
push
lcall
mov
call
jecxz
pop
jbe
out
push
nop
mov
push
inc
mov
movsb
mov
addl
testl
in
xchg
and
leave
mov
sbb
icebp
insb
pop
or
loop
add
jmp
ljmp
jo
or
add
cmp
fisttps
movsb
jmp
xchg
mov
inc
test
sbb
xor
jmp
push
rcrb
inc
lahf
das
pop
mov
mov
int
jae
dec
add
lcall
aad
stc
sahf
loop
sti
jbe
ret
mov
fidivrs
adc
push
jnp
mov
std
cmp
ljmp
gs
xchg
push
add
pop
xchg
jo
ds
sub
mov
or
add
adc
jg
add
iret
fcmovb
jo
sahf
repnz
shll
xor
dec
clc
call
sbb
or
jne
xchg
inc
cmp
cmp
jle
aaa
arpl
hlt
and
or
jnp
ljmp
out
jne
mov
pop
and
xchg
adc
mov
cmp
call
pop
fistl
add
inc
pushf
xor
push
sub
push
inc
cmp
dec
outsl
pop
mov
push
xchg
adc
inc
cmpsl
push
incl
sub
pop
fcoms
adc
insl
and
or
subl
faddp
sarl
add
pushf
and
push
mov
push
outsb
jbe
jg
push
insb
fucomip
andb
cmp
popa
ffree
xchg
lock
mov
push
add
inc
sbb
ljmp
jo
out
call
out
inc
pop
pop
je
cmp
lcall
jl
sub
sub
dec
shrl
roll
aas
sbb
das
push
test
test
push
push
call
xor
js
out
sbb
xchg
sub
repz
test
pop
lods
mov
icebp
inc
cli
jmp
ja
leave
pop
shrb
rorb
pop
pop
jo
enter
lods
ret
decl
das
imul
push
das
mov
dec
es
aaa
push
dec
mov
stos
enter
adc
in
cmpb
dec
div
scas
inc
data16
and
jmp
lea
sub
test
imul
mov
cmp
lcall
sub
fwait
lcall
pushf
test
inc
sbb
lds
pop
scas
test
ljmp
push
ds
adc
mov
and
push
sbb
mov
lahf
icebp
in
or
lods
or
xorl
fldt
cli
daa
sub
dec
mov
cmc
and
in
adc
pop
loope
jne
jg
sti
enter
cmp
ret
pop
les
out
gs
cmpsb
sbb
hlt
aad
enter
repnz
call
sbb
insb
out
sub
inc
ret
inc
int3
fistpl
xor
test
pop
addr16
mov
push
mov
insl
cmp
loope
cmp
or
ljmp
mov
adc
pop
xor
jle
into
call
dec
sub
decl
pop
sahf
imul
cmp
adcb
xchg
cltd
incl
stos
mov
sub
shlb
cmp
push
mov
xchg
arpl
mov
mov
mov
lcall
add
inc
xchg
mov
pusha
loop
in
xchg
ret
test
ljmp
jge
push
fs
repz
mov
sbb
dec
xchg
inc
cmp
std
into
or
jno
jle
call
into
jg
sbb
cs
and
sbb
stc
pop
call
in
dec
dec
hlt
sub
fsts
sub
push
adc
pop
jnp
sarb
cld
mov
cli
insb
roll
lcall
xor
dec
cld
mov
jne
jo
xchg
iret
shl
and
ljmp
test
xchg
pushf
or
cwtl
stc
test
jg
sub
jmp
cltd
out
scas
cmp
mov
jae
push
cmpsl
xchg
test
jmp
sbb
lret
mov
mov
pushl
mov
xor
xor
inc
clc
int
int3
hlt
sbb
fisubl
addr16
jg
and
inc
rorl
and
fs
add
add
pusha
mov
fidivrs
cmp
jp
setnp
call
in
mov
ret
jg
push
add
inc
bound
cmc
fcomip
fcoml
xchg
int3
cwtl
mov
daa
repz
xor
outsl
or
inc
ret
pop
pop
inc
add
cwtl
das
movsb
xor
xchg
imul
in
lcall
jmp
frstpm(287
mov
sub
aad
imul
xchg
jg
sbb
incl
hlt
stos
add
les
outsl
push
bound
jge
aaa
iret
stos
and
je
scas
ljmp
call
cld
pop
in
xchg
sbb
lock
pusha
cli
in
out
jns
call
jb
jo
push
ljmp
ret
sti
cmp
sbb
push
lahf
inc
int3
mov
ljmp
xchg
sub
outsb
insl
dec
movsb
xor
movsl
pusha
pop
or
fdivr
ljmp
jecxz
xlat
ss
pop
mov
cltd
loope
loopne
ror
xchg
fcoml
sbb
ljmp
xor
sti
hlt
inc
xchg
insb
or
ss
cld
fcmovnu
cmpsl
int3
cmp
sarl
loopne
mov
cmp
pop
ret
scas
rol
ja
push
fidivrl
sub
mov
and
lods
sbb
int
jb
dec
dec
fstpt
sub
sub
pushl
xor
hlt
mov
mov
push
lret
and
aaa
cld
jmp
shll
sti
and
cs
in
call
sub
incl
lds
cli
lret
aad
stos
pushf
rcll
mov
aas
inc
stos
aas
adc
cmp
insb
mov
cmp
lahf
hlt
ret
push
sub
sub
and
je
fcoms
inc
push
mov
imul
fildll
jmp
xchg
jmp
sahf
aad
in
xor
xor
mov
add
xor
jb
mov
push
lock
insl
das
sub
cwtl
in
ljmp
xor
orl
sar
in
call
cmpsb
and
push
pop
std
jns
mov
sub
lret
mov
or
sbb
pop
lret
aas
ds
jg
hlt
pushl
jmp
xor
mov
rolb
lret
inc
mov
popa
call
les
push
sub
adc
aad
ficomps
addl
or
das
cli
enter
inc
cld
inc
loopne
xor
push
sbb
jecxz
daa
js
sbb
sbb
mov
mov
decl
ret
pop
loop
push
out
add
out
mov
inc
inc
add
push
into
and
inc
xchg
shrb
sbb
xchg
outsb
inc
xchg
insl
js
push
lcall
fs
mov
or
je
inc
js
lds
inc
inc
loope
push
pop
cwtl
sbb
lret
lcall
das
jp
addl
loopne
cmc
in
loope
pop
xchg
cltd
sub
lret
cli
cmp
ljmp
fmul
mov
push
movsb
mov
fstpt
pop
ret
cld
mov
enter
cmpsl
stos
pop
jl
jg
pop
popf
inc
int3
mov
or
loopne
scas
or
xchg
sub
lahf
xor
hlt
adc
incl
and
xchg
push
not
jp
sbb
in
xor
mov
sbb
mov
mov
sti
loope
mov
sbb
dec
rcrb
rep
push
call
fs
in
in
dec
popa
repnz
sbb
dec
fwait
or
adc
sub
mov
lcall
es
bound
aad
lret
lcall
lret
cmpsb
mov
jnp
dec
divb
mov
cmp
xchg
lret
popf
mov
jle
pop
outsb
or
loopne
ljmp
push
sahf
stos
cmp
push
xchg
jecxz
mulb
lcall
into
adc
aam
nop
pop
mov
mov
xchg
into
xorl
negb
mov
movsl
mov
jno
pop
mov
icebp
sub
into
lcall
add
loop
pop
bound
in
add
decl
test
add
enter
cmpsl
cltd
ds
pop
mov
inc
jae
push
int
stos
jl
inc
mov
andl
movb
loop
insb
stos
mov
mov
rcl
jns
or
aaa
cmpsl
jmp
add
std
incl
dec
stc
pop
fisubrs
sbb
scas
mov
and
cli
call
sub
insb
fildl
sbb
xchg
lret
test
decl
lcall
pop
imul
or
xor
or
cs
jmp
xchg
adc
cwtl
push
add
lret
aaa
sahf
push
cmpsl
and
dec
cmpsb
pop
ljmp
add
cmpsl
mov
lahf
pop
pop
add
repnz
pusha
or
and
cltd
loopne
incl
xorb
cli
lods
rclb
xchg
add
es
mov
mov
cmp
call
dec
add
add
dec
dec
pusha
setne
mov
jo
negb
mov
xchg
lcall
cli
push
roll
push
std
add
cmpb
imul
push
jmp
mov
decl
loop
cld
cmp
or
out
mov
fmull
fistps
insb
lret
cmp
fldcw
stos
jecxz
leave
jg
iret
inc
xor
fsts
dec
push
xchg
push
and
add
out
lcall
out
fstps
lcall
xchg
push
aam
ret
aaa
lret
inc
inc
sti
cs
sbb
jno
add
push
dec
sub
scas
add
xor
jle
rcrb
jmp
jmp
mov
data16
fsubl
arpl
test
and
incl
into
mov
jmp
xor
mov
call
insb
enter
sub
imul
add
mov
add
cmpsb
cmp
and
push
out
cmp
ja
popa
and
out
xchg
hlt
incl
lods
pop
mov
adc
fcoml
hlt
dec
xor
pop
fimull
test
dec
dec
mov
sahf
pop
inc
insb
adc
jmp
dec
jb
lcall
or
jge
cmc
inc
lock
outsl
out
pop
push
mov
std
pushf
dec
and
jmp
push
push
das
adc
movsl
or
sbb
iret
mov
jae
out
push
imul
notb
sbb
cs
pop
adc
cltd
in
hlt
notb
out
jmp
xor
dec
adc
sub
adc
repz
aad
mov
jns
enter
sbbb
aaa
rolb
xor
lds
lahf
daa
cltd
mov
add
lcall
push
int3
dec
dec
ss
xchg
jne
push
pop
mov
pop
fnstsw
jbe
ss
jmp
jecxz
test
popa
xchg
sub
fsubr
adc
outsl
std
test
imulb
incl
movsl
pop
in
mov
ror
sub
pop
shll
imul
ret
xchg
cltd
insb
dec
movsl
loopne
jmp
fsubr
clc
inc
sarl
dec
pop
sub
sahf
scas
and
call
inc
jno
cmpsb
or
imul
or
data16
movsb
push
cmp
rcr
decl
lock
in
xchg
and
fldenv
xchg
repnz
xor
ret
sbb
jmp
and
enter
pop
imul
push
add
pop
cmp
hlt
ret
mov
ljmp
sbbb
sbb
icebp
rclb
inc
add
or
push
jg
imull
aaa
std
pushl
push
popa
xchg
icebp
rcll
push
jl
dec
iret
js
cmpsb
jp
mov
fildll
jg
mov
inc
data16
ds
sar
lcall
pusha
rcll
lret
fiadds
add
cmp
insl
lea
xor
or
call
fdivs
dec
lods
inc
xchg
or
xor
cmp
pop
pop
adc
mov
shlb
ljmp
push
aad
inc
cmp
jl
push
insb
into
sbb
dec
push
inc
pusha
xchg
xchg
jae
ljmp
aad
ja
sub
mov
mov
scas
cli
decl
push
cmp
sub
xchg
jp
mov
jecxz
call
les
pop
mov
pushf
incl
sub
xor
mov
inc
call
jl
jns
cmc
mov
aas
xchg
mov
movsb
lret
mov
xor
pushl
incl
push
cmp
cld
adc
add
push
and
fsubl
ret
xor
lcall
daa
xchg
bound
and
xor
testb
pop
mov
pop
cld
call
mov
out
mov
std
sub
pop
iret
fucompp
cmp
mov
call
fs
jp
mov
cmpsb
flds
mov
decl
sub
out
imul
push
sti
sub
push
adc
push
jne
cli
fcomip
jp
inc
pop
mov
clc
enter
mov
cmc
jns
mov
inc
push
cmp
inc
imull
in
lock
mov
es
call
pop
or
loope
add
add
pop
out
into
lods
test
cmp
std
in
test
xchg
test
xchg
leave
or
test
fs
add
cmp
push
xor
int
pusha
cmp
adc
test
pop
dec
stos
cmp
rcrb
sbb
mov
aad
ret
jl
mov
xor
push
fs
daa
data16
xor
hlt
pop
mov
pop
stc
negb
cmp
xor
aad
cmp
pushf
mov
in
adc
xor
rclb
lods
repz
push
incl
cmpsl
xor
push
lods
push
cmp
lock
jmp
fisttps
adc
fimuls
jns
enter
jmp
pop
push
fwait
push
and
dec
jge
lea
and
ss
pushl
xchg
sti
arpl
dec
shrl
les
xchg
push
push
xlat
mov
sti
cli
dec
dec
imul
add
andl
mov
pop
mov
out
sub
lret
jmp
fsub
out
lahf
inc
jnp
cwtl
in
pop
outsb
subl
sub
shrb
cmp
scas
idiv
add
mov
xor
jno
push
jp
call
mov
sbbl
jns
insl
xor
filds
push
cmp
mov
sub
mov
mov
push
cwtl
fistpll
xlat
jne
out
imul
call
mov
adc
mov
std
jl
pushf
out
mov
call
loopne
stos
roll
pop
std
or
push
or
xchg
or
call
pop
insl
orl
ljmp
aam
rclb
sbb
push
mov
fidivrl
in
ljmp
push
xor
pop
movsb
push
ljmp
hlt
cs
xchg
and
repz
adc
xchg
and
ds
mov
mov
int
sbb
adc
shlb
mov
loop
sbb
mov
mov
jno
sub
xor
cmp
sti
mov
mov
dec
fs
mov
mov
push
cmp
or
push
popa
sbb
mov
pop
and
xchg
add
cmp
pop
or
mov
push
btcl
push
cmp
fiadds
repz
cmpsl
ret
push
lahf
cmpb
pop
jg
test
fld
cmpsb
or
cld
lock
or
adc
adc
out
dec
mov
mov
repnz
inc
xchg
lods
sarl
cli
push
push
adc
sub
cwtl
jle
cld
sub
jg
mov
outsb
lock
pop
pop
daa
lock
adc
call
and
or
sti
push
fcompl
loop
cmp
add
and
rclb
jbe
ljmp
insl
cltd
cwtl
cld
outsl
push
jecxz
xchg
pop
sarl
or
ja
repnz
push
loopne
ljmp
cli
call
out
mov
pushf
lock
scas
cli
push
fnstsw
push
sbb
ljmp
imulb
inc
testl
aam
or
ljmp
aas
pusha
fs
pop
push
cmp
inc
out
dec
push
ss
mov
push
push
add
xor
and
mov
jb
adc
add
incl
shlb
pop
in
ficoms
lret
mov
mov
jl
scas
or
jmp
mov
push
inc
push
adc
scas
push
rol
mov
mov
pop
add
out
fsubs
dec
daa
adcb
ss
movsl
test
ljmp
cmp
stos
dec
push
mov
jne
add
dec
leave
mov
jmp
and
clc
sbb
sub
mov
or
cs
inc
mov
enter
aas
jg
call
roll
cli
ret
icebp
jno
jmp
pop
mov
test
iret
test
sub
scas
xor
das
cli
aam
cmpl
sub
adc
insb
sbb
outsb
popa
leave
fdivp
cmpl
mov
pop
jns
cmp
cmc
add
mov
or
or
jbe
loope
xchg
xor
mov
gs
stc
inc
arpl
cmp
ljmp
lahf
mov
dec
fidivl
lock
cld
jo
incl
ja
aad
dec
push
rep
jle
push
ret
push
movsb
sub
outsb
lcall
sti
sbb
sub
hlt
sub
loop
pop
xlat
or
mov
jp
cmp
xor
xchg
dec
movsb
push
les
test
fbstp
xor
out
inc
pushl
addr16
in
dec
adc
sti
pop
push
xor
push
les
loopne
cmc
jmp
popf
popa
jb
out
cmp
out
jne
imul
pop
pop
ljmp
lcall
xchg
dec
fidivrs
pop
mov
add
sti
fistps
mov
inc
call
idivl
in
lds
mov
ja
sahf
aam
subb
sti
add
in
loope
js
shl
xor
mov
lods
cmp
sar
ljmp
jp
fdivrs
sbb
flds
xchg
rorl
jns
mov
jo
cltd
mov
jg
cmp
sbb
inc
mov
push
mov
xor
or
jmp
fidivs
lods
mov
movsb
dec
push
jns
arpl
add
xchg
and
add
into
jp
movsl
or
sub
cmp
mov
outsb
xchg
sbb
cmp
push
es
sub
adc
lcall
or
adc
pushl
cld
int3
pusha
rclb
rcrl
js
jmp
ret
jbe
ret
mov
incl
jnp
inc
xchg
pop
xchg
jno
pop
add
aam
dec
or
pushl
mov
int
add
xor
test
aaa
or
pop
arpl
jmp
sub
jns
xor
xor
insb
push
testb
outsb
adc
ljmp
sub
idivb
dec
divb
sahf
adc
xchg
mov
jg
in
pop
push
and
aad
or
cmp
mov
push
cmp
pushl
mov
fisubrl
inc
and
int3
fs
enter
out
cld
je
lods
call
sbb
jmp
xor
xchg
lret
mov
fbstp
pop
test
push
xlat
xchg
adc
incl
mov
movsb
pop
push
mov
leave
pop
outsl
jle
int
adc
cmp
test
lcall
cmc
lods
mov
jo
and
fisubl
mov
outsb
add
pop
imul
xchg
dec
and
lods
dec
fidivs
aam
lret
mov
cmp
jmp
into
loop
jbe
jo
xchg
mov
or
inc
mov
repz
sahf
fstl
inc
xor
jp
mov
xor
jae
test
and
sbb
pop
insb
fucomp
scas
shll
inc
movsl
stos
dec
or
aam
frstor
mov
and
cmp
mov
sub
mov
xchg
pusha
mov
fnstcw
mov
jg
std
out
inc
adc
iret
lods
int3
repnz
pop
mov
adc
cmp
decl
sub
xchg
imul
arpl
fnstsw
xchg
filds
add
movsb
inc
and
jg
push
lret
sarb
incl
cmp
ljmp
pop
out
pop
xchg
mov
nop
ret
sarb
cmp
mov
jmp
es
rorl
lds
pop
aaa
ljmp
xor
xor
scas
in
sub
in
mov
inc
inc
setg
pop
in
mov
pop
faddl
sbbb
cld
rol
cmp
lahf
pop
cli
and
and
push
scas
das
js
stc
iret
xchg
ret
xor
ret
and
or
mov
jmp
and
xchg
cmp
pop
mov
sbb
sbb
mov
popa
add
test
aam
cmpsl
clc
or
dec
out
mov
dec
das
lods
js
leave
mov
mov
outsb
or
insb
movsl
cmp
loope
or
movsb
add
pop
and
incl
shll
int3
cmp
int3
ret
fcmovb
pushf
lds
mov
enter
adc
mov
sti
pushl
into
push
in
pop
mov
fwait
dec
mov
xchg
xlat
in
mov
pushl
or
cmp
dec
sti
cmpb
shl
cmpsb
bound
ret
mov
into
hlt
rolb
pop
icebp
jmp
hlt
rolb
test
push
xlat
neg
and
xor
lret
xchg
and
xor
stc
jmp
ret
mov
mov
pop
pushf
adc
pop
sbb
jg
sahf
lahf
cwtl
in
cmp
or
clc
and
push
lahf
or
fxch
aas
jnp
fdivrs
xor
pop
insb
test
mov
pop
push
xor
pop
dec
aas
or
int
insl
movsl
dec
xor
mov
mov
outsl
xor
js
cmp
call
ret
rcll
outsb
xor
xchg
sub
sti
lods
lods
pushl
rclb
mov
js
std
push
adc
test
call
out
cli
mov
sbb
cli
not
mov
push
in
push
mov
aad
mov
push
and
sub
xor
jg
inc
int3
lea
or
cmp
inc
bound
add
sbb
enter
ljmp
sbb
cmc
repnz
mov
mov
add
js
icebp
roll
mov
ljmp
cmp
outsb
cld
das
or
sti
pop
or
jmp
mov
cmp
push
sub
jo
outsl
jge
hlt
and
jns
das
jg
lcall
lret
aad
nop
push
mov
sbb
push
icebp
adc
mov
les
pushl
inc
mov
sub
or
mov
xchg
inc
push
dec
xor
imul
mov
or
push
jno
xchg
mov
loopne
vandnps
dec
adcl
int
jb
mov
adc
aam
inc
in
xchg
decb
out
adc
mov
mov
xor
scas
sbb
adc
push
decl
mov
repz
test
mov
gs
mov
xor
adc
out
jmp
sub
cmc
mov
in
xchg
ljmp
pop
add
mov
mov
call
push
mov
lods
push
sahf
sar
cld
jecxz
sti
mov
mov
sub
incl
mov
insb
and
ds
js
dec
mov
jle
xchg
scas
xchg
add
test
inc
popa
fs
adc
dec
and
sti
push
in
cmp
cmc
cmp
arpl
movsl
pop
mov
push
adc
pop
or
int3
das
adc
decl
cmpsb
and
xchg
nop
dec
ss
clc
mov
std
stos
lret
jg
ljmp
add
adc
popf
mov
sbb
ljmp
adc
push
popf
stos
iret
nop
clc
cmp
push
stos
cmp
add
mov
in
xlat
ljmp
lock
ljmp
shlb
sub
or
pop
push
xor
mov
adc
cmp
scas
xchg
xchg
rcl
sbb
mov
mov
out
inc
lcall
cmp
js
push
mov
push
dec
test
out
sub
lds
cmp
outsb
aaa
dec
xor
fwait
add
call
jg
mov
sbb
stos
inc
lods
test
push
xchg
fwait
add
cmpsb
mov
sub
je
sarb
sbb
popa
int3
ljmp
int
mov
je
outsb
xchg
mov
call
or
cld
ljmp
and
das
das
dec
sbb
mov
stc
hlt
in
jecxz
outsb
fcmovbe
push
and
popf
gs
jge
rcr
test
gs
in
sub
mov
and
push
push
incl
cmp
test
and
xchg
aaa
adc
inc
in
call
call
adc
xchg
rolb
lret
or
incl
js
mov
lock
ljmp
sahf
and
fidivrs
popa
out
mov
in
arpl
dec
inc
sar
fistpll
bound
mov
push
inc
leave
cmp
sahf
stc
in
jge
and
out
mov
incl
hlt
dec
dec
push
fcoms
jno
pop
sbb
inc
mov
sub
or
adc
call
push
dec
fmuls
dec
xchg
cmp
inc
pop
mov
adc
jae
insb
test
outsl
cli
push
insb
xor
loop
and
adc
in
lods
rcrl
decl
push
jl
push
lds
cld
orl
inc
ljmp
pop
dec
lahf
mov
decl
arpl
cmp
mov
test
test
dec
push
bound
xchg
mov
loope
or
jmp
xchg
xchg
lds
mov
ds
sub
fiaddl
push
in
cltd
dec
icebp
das
ds
int
decb
push
loop
fisttpl
arpl
pavgw
pushl
sub
add
fisttps
mov
stos
int
mov
lret
jmp
mov
sub
call
lcall
mov
xor
in
sub
jmp
mov
repz
daa
sub
push
xchg
jg
cwtl
mov
pop
xchg
stos
xchg
sub
xchg
cmp
xor
pusha
cmp
cmpsl
pop
fwait
mov
jmp
push
sub
cmp
pop
push
icebp
cmp
lds
mov
scas
cmc
or
ljmp
sahf
cmpsb
mov
jmp
stos
cmp
lcall
mov
pop
jmp
or
push
in
imul
add
incl
mov
shll
sbb
mov
fsts
add
jmp
cwtl
es
pop
sub
inc
jbe
sub
jl
xchg
cmp
mov
mov
xchg
ud0
call
fwait
push
iret
or
and
jl,pn
mov
sub
mov
fiadds
pusha
cld
mov
adc
out
mov
push
movsl
and
or
xchg
and
xchg
movsb
lock
jmp
mov
xchg
stos
dec
dec
mov
gs
popf
mov
cmp
xchg
sub
pop
mov
daa
fwait
in
leave
in
pop
sub
pushl
decl
push
push
js
sbb
xchg
ljmp
push
push
lret
add
fisttpll
cmp
xchg
outsl
or
lret
imul
push
imul
fildl
in
mov
pop
outsb
fbstp
dec
jl
jg
cmp
or
loope
ret
push
pop
mov
popf
push
sub
add
data16
sar
std
out
ss
lret
inc
mov
divl
mov
mov
incl
inc
decl
jl
sbb
fidivrl
and
leave
movb
mov
adc
adc
ret
out
sub
mul
push
je
mov
push
orb
imull
adc
lahf
lret
dec
sbb
fbstp
xor
lods
loopne
and
push
pop
xchg
incl
sbbb
mov
fdivr
fs
push
scas
aas
stos
lock
push
fmul
and
fnstenv
in
repz
inc
icebp
fidivrl
sbbb
in
mov
mov
ss
lods
adc
aad
cmp
mov
jmp
lahf
pop
jge
and
ret
sbb
jne
lret
or
pop
es
push
jns
push
lcall
or
rol
push
mov
sti
clc
and
movsb
idivl
sbb
mov
scas
loopne
jl
mov
lcall
xchg
xchg
sti
fcomps
inc
jl
mov
xor
push
mov
outsb
xlat
mov
pop
repz
push
ljmp
mov
arpl
mov
in
push
adc
xlat
mov
test
cmp
cmc
stos
call
push
add
int3
repz
int3
daa
pop
inc
pop
inc
mov
push
negl
mov
sub
lahf
sbb
pop
aas
cli
jbe
outsb
lea
cmpsb
jbe
pop
mov
pushl
or
push
into
aad
dec
aad
add
lret
test
jno
ja
scas
xor
test
cld
call
popf
lods
inc
and
cwtl
rep
jns
jb
mov
outsb
lret
mov
ljmp
or
lahf
sub
push
jo
cmpsl
push
ljmp
push
mov
outsl
fiadds
lret
pushf
lock
daa
clc
fistpll
jg
test
add
call
into
lret
xchg
inc
enter
pop
fcmovu
push
imul
jmp
enter
cmp
pushl
xor
stc
pop
fsubrs
test
sub
popl
jl
aaa
pop
lcall
xor
icebp
outsb
and
lock
nop
inc
roll
lock
mov
imul
pusha
ss
icebp
lds
pop
or
iret
push
std
repz
stc
stos
mov
inc
out
or
jmp
lcall
ret
mulb
call
adc
mov
lds
scas
lea
cmp
arpl
jmp
js
gs
push
adc
sbb
shl
push
xlat
mov
or
push
ljmp
jle
xor
das
insb
xor
add
aad
or
arpl
and
mov
add
ljmp
ds
add
jmp
jmp
add
movsl
add
sub
ret
xchg
xchg
lds
outsl
sbb
ret
cld
and
in
fistpll
pushl
adc
push
mov
adc
pushf
leave
adc
pop
loopne
jecxz
incl
les
pop
cltd
fcomip
mov
fstl
pop
inc
mov
int
mov
pop
xor
cmp
push
adc
or
pushl
dec
je
popw
mov
lods
fdivs
cmp
jbe
jo
mov
cs
cld
cmp
push
mov
call
fs
mov
in
lods
sbb
and
sbb
cwtl
je
add
pushl
outsl
gs
jb
pop
mov
shl
dec
cli
mov
ds
mov
jmp
mov
pushl
aaa
imul
aas
mov
or
sbb
mov
test
push
ds
test
dec
ror
adc
mov
repnz
mov
nop
pop
nop
cmp
mov
lcall
mov
movsl
insb
out
cs
add
pop
out
sbb
jnp
or
repz
out
sbb
incl
outsb
std
stos
in
popf
pop
negb
movaps
add
outsl
and
fs
add
mov
sti
decl
mov
pop
xchg
xlat
shl
lods
lds
cli
test
mov
or
mov
scas
mov
ret
dec
dec
mul
jo
sbb
pop
pop
ljmp
mov
lods
mov
testl
stc
decb
sbb
push
dec
ljmp
clc
decl
scas
add
fbld
xor
and
adc
cmp
pop
inc
int3
lcall
ss
test
cli
out
repz
or
cmp
clc
loopne
add
inc
insb
fwait
stc
incl
mov
or
repnz
pop
mov
mov
lods
sbbb
dec
jo
mov
aad
lock
enter
hlt
mov
cmp
fdivl
mov
inc
das
sub
call
fbstp
test
dec
add
loopne
fs
stc
and
lcall
and
mov
jle
rorl
bnd
add
sbb
and
adc
faddl
inc
je
test
jg
loopne
xor
mov
test
push
mov
add
cmp
test
ljmp
inc
inc
sbb
cli
nop
pushf
mov
sbb
sub
loop
sbb
nop
and
loop
or
incl
aaa
ret
daa
insl
repz
es
fsubrl
push
sub
and
or
popa
test
dec
jl
aad
push
and
bound
add
jg
dec
push
popa
out
fildl
mov
lcall
pop
add
fimuls
cmpl
cmc
jbe
mov
call
dec
call
fcompl
push
pop
inc
jmp
mov
jp
jg
jnp
ljmp
add
or
mov
test
cltd
xchg
jnp
push
lcall
and
mov
clc
inc
clc
push
add
rclb
idivl
lods
jb
xchg
punpckhwd
lahf
ljmp
shlb
roll
cld
inc
ret
call
xor
cmp
orl
sbb
inc
call
test
lea
jae
add
imul
std
push
jmp
nop
push
add
lcall
sub
pop
call
andb
scas
lahf
movsb
dec
aam
push
daa
xlat
decl
xor
inc
shrl
imul
jb
mov
not
xchg
pop
ret
mov
mov
pop
dec
mov
push
cmpsb
adc
pop
inc
gs
das
add
stc
xchg
repnz
push
xchg
mov
xor
cmp
lods
push
cmp
iret
jno
je
fdivr
call
cmp
fcmovne
outsl
ret
xor
mov
dec
das
or
adc
call
repnz
scas
gs
decb
or
pushl
jge
mov
mov
outsb
das
cmp
pop
sub
pop
and
adc
inc
insb
or
arpl
pop
adc
lock
call
push
xor
mov
and
pop
or
or
imul
cmp
sbb
jle
sbbl
test
ror
test
inc
dec
movsl
adc
iret
stos
xchg
push
ret
ljmp
call
or
repnz
pop
outsl
outsl
or
or
sahf
pop
cmp
sbb
mov
daa
sar
call
cmc
int3
dec
lcall
and
cmpsb
cmp
and
negb
xlat
mov
cld
sti
mov
ds
pushl
sub
pop
dec
lahf
pop
push
sbb
xlat
in
js
aaa
jbe
into
lahf
insb
faddl
cmp
clc
decl
pop
bound
in
xchg
mov
cmp
pushl
int
faddl
xchg
pop
jecxz
fsub
jge
pop
fst
lods
fldt
loop
push
loop
pushl
mov
sahf
lret
push
ss
jg
pushf
jp
xchg
adc
adc
inc
mov
popa
mov
cli
cmp
push
sbb
and
lcall
push
lods
outsl
xor
adc
call
dec
test
cs
and
cmpsl
rorb
sbb
mov
cmp
imul
jmp
hlt
sahf
pusha
repnz
aam
inc
add
or
clc
jo
movsb
push
std
mov
mov
mov
in
into
or
xchg
cmp
sub
frstor
aam
ss
inc
cwtl
aam
cwtl
dec
lods
adc
std
adc
add
mov
jmp
sar
jo
ror
mov
xchg
lds
movsb
pop
hlt
call
pop
jns
out
mov
sub
pop
add
decl
add
incl
push
rcrb
adc
loopne
add
xor
and
push
jb
es
push
mov
stos
ficompl
inc
add
rclb
lcall
shlb
or
dec
ja
dec
lods
mov
pushf
jne
jl
shll
lret
jp
sub
decl
cmpsb
inc
in
stc
in
sbb
push
jg
inc
jmp
adc
sbb
cltd
push
sub
cmpb
clc
pop
orb
fnsave
addr16
repz
cs
mov
call
inc
dec
add
decl
test
and
call
out
cmp
xchg
ljmp
into
jle
and
sbb
int3
pop
mov
int3
jmp
add
pop
inc
jge
xor
push
lret
mov
xchg
mov
ljmp
cmpsl
mov
push
xor
adc
shlb
mov
sbbl
das
xchg
gs
push
mov
adc
and
push
pop
jmp
jns
mov
pop
mov
push
jbe
lods
nop
pop
push
mov
fldenv
jle
mov
not
push
mov
gs
lcall
cli
pushl
movsl
jbe
push
jmp
cld
mov
push
pop
adcb
or
test
ljmp
lret
test
lcall
fisttps
jno
cld
xchg
push
fistps
mov
sbb
jmp
ds
jecxz
or
mov
test
lcall
or
inc
cmp
mov
mov
mov
lret
lahf
adc
popa
test
mov
jmp
and
insl
hlt
loop
pop
fisubs
jo
fucomip
xor
xor
and
movsl
xor
addb
dec
add
sub
fs
fcmovnb
adc
inc
movsl
mov
mov
or
jle
loopne
mov
or
cmpsb
outsl
jbe
aas
inc
adc
xor
pop
movsl
dec
popf
aad
repz
mov
push
dec
jle
out
lahf
jbe
ret
mov
insb
lods
mov
lret
fisubs
sub
jecxz
cmpsl
or
and
inc
in
fdivr
lcall
ljmp
jbe
jg
popa
inc
outsb
xor
adc
movsl
out
mov
cli
cmpsb
loop
pushf
dec
stos
mov
fcoms
inc
mov
dec
pusha
inc
and
inc
adc
jmp
lahf
mov
call
jp
fwait
mov
dec
xlat
ffree
mov
scas
pop
scas
jne
aad
pop
scas
les
xchg
out
pusha
mov
or
ljmp
xor
fst
add
xor
out
and
jmp
jp,pt
fbld
bound
loopne
lock
mov
out
je
pop
pop
cmp
call
xor
mov
sub
aas
out
imul
test
jmp
decl
dec
loope
lods
push
pop
dec
mov
lcall
push
in
rcrb
mov
out
in
inc
insl
fwait
adc
loope
jbe
lcall
ljmp
aas
xchg
gs
push
adc
mov
out
mov
add
add
pushl
repnz
imul
cli
ja
dec
push
arpl
jae
push
out
lcall
sub
int3
into
xor
out
push
push
cmp
xlat
clc
xchg
cmp
scas
out
pop
aad
mov
lea
or
push
pushf
mov
sub
mov
jle
cltd
push
filds
xor
les
cmp
fisttpl
outsl
ljmp
cli
mov
jmp
mov
rorb
and
loop
dec
hlt
outsl
clc
call
sbb
jge
enter
ljmp
xchg
ljmp
cmpsb
push
xchg
mov
scas
mov
ja
cli
out
repz
mov
decl
adc
jge
test
cmp
mov
sub
cmp
jge
xchg
inc
and
xorb
rclb
mov
push
insl
iret
decl
sub
ficomps
push
sbb
dec
xor
jae
pop
push
cmp
stos
call
and
sbb
xchg
cmp
cs
xchg
adc
mov
decl
add
mov
repnz
dec
mov
sar
fstpl
and
push
sub
mov
std
stc
andb
test
mov
jmp
xchg
lods
pop
jle
cltd
loope
jmp
mov
sbb
pop
jecxz
sbb
je
hlt
mov
cltd
call
fnstsw
jb
icebp
jnp
push
cmp
adc
push
xor
call
cmp
pop
add
add
maxps
es
add
loope
sub
roll
cs
jne
incl
out
decl
nop
sbb
dec
scas
sbb
xchg
pop
push
fstpl
incl
testb
movhps
push
sub
pop
leave
loop,pt
sti
testb
xor
mov
inc
pop
pop
into
mov
fdivs
mov
lods
push
dec
sbb
aam
inc
int
aas
mov
andb
pop
out
sbb
inc
inc
sbbl
mov
mov
js
push
mov
pop
test
jl
push
call
das
inc
push
pop
fmull
jo
fdivrs
movsb
outsb
ja
mov
in
inc
add
mov
mov
imul
cld
push
cmp
mov
aaa
inc
lods
cld
int3
adc
mov
call
xor
xchg
lret
push
and
and
subl
adc
pop
cmc
cmp
mov
sub
test
scas
cli
mov
repnz
adc
leave
into
stc
lods
and
loopne
dec
and
jno
lret
and
xor
fnstcw
adc
or
mov
jg
pop
push
sub
jg
inc
sbb
push
pop
xchg
sub
into
lods
sub
pop
push
daa
or
cld
out
push
jno
push
jns
sub
mov
testb
jmp
mov
mov
ss
call
pop
call
jb
fcom
jae
ds
mov
aaa
inc
adc
outsb
jnp
pop
fdivrp
push
fdivrp
call
fstps
insb
mov
loope
push
xor
add
inc
lret
sub
test
decl
and
cmp
xchg
pop
lds
cwtl
lret
movsb
inc
inc
mov
in
push
xlat
push
push
insb
je
jmp
lds
fstpt
lock
mov
jnp
cs
sub
icebp
int
dec
adc
icebp
dec
sub
call
pop
pop
fdivrs
fildll
js
sub
pop
imul
js
test
mov
cmc
test
cmp
and
or
lcall
outsb
pop
ret
ffree
push
xchg
dec
xchg
fidivrl
notb
cs
adc
mov
ljmp
mov
sbb
sub
outsl
adc
inc
xor
jmp
cld
push
jl
jnp
mov
popf
push
test
adc
test
stc
fcompl
jno
cmp
ljmp
dec
adc
sahf
cmp
jnp
arpl
inc
test
cmpsl
arpl
lods
push
add
dec
mov
dec
inc
lahf
mov
rcr
adc
ss
cmp
rcr
stos
fldl
cld
cmp
cld
mov
adc
shlb
mov
adc
push
mov
mov
sar
mov
ficoms
inc
add
jbe
mov
cmp
sub
mov
je
jb
jmp
lods
pop
mov
ret
push
pop
dec
decl
dec
and
cs
pusha
fwait
or
ret
cs
inc
mov
in
out
cmp
ret
sbb
rcrl
repnz
xor
or
and
rcll
dec
fsubrl
movsl
inc
jg
aad
jmp
adc
and
fisubrl
scas
inc
mov
in
pop
lods
fcomip
decl
xchg
imul
movsb
inc
sub
lds
xor
lock
jmp
pop
cmp
cmp
clc
mov
insb
jo
sbb
call
ficompl
in
lods
ljmp
pop
sbb
cs
cmp
pusha
xor
xchg
repz
mov
xor
decl
in
push
pop
jnp,pn
dec
and
sbb
mov
mov
das
fcomip
call
pop
jecxz
cmp
dec
fimull
dec
mov
ficoms
dec
lldt
repnz
pcmpgtw
lock
ret
xchg
cli
incl
stos
push
jecxz
mov
mov
loopne
xchg
pushf
adcb
jmp
loopne
popf
mov
repnz
fwait
adc
ljmp
cmp
xor
add
pushl
ljmp
iret
pop
aad
rcrl
dec
add
dec
jecxz
cmp
pop
in
and
ljmp
xor
into
jbe
addr16
cwtl
lahf
jg
fdivp
xchg
inc
xchg
shll
rcrb
rcll
and
jno
add
push
es
add
in
pop
fwait
repnz
imul
cmp
adc
pop
or
add
lcall
jecxz
dec
lds
enter
mov
jp
lcall
aam
pushf
cwtl
mov
sbb
or
push
ljmp
fisttps
pushf
pushf
jp
out
cmp
lahf
pop
cltd
pop
dec
daa
out
mov
gs
icebp
insl
pop
mov
sub
push
mov
popf
call
loopne
outsb
pop
lret
and
push
aas
jno
fmull
lods
mov
pop
dec
dec
adc
loop
incl
adc
dec
into
and
add
sbb
adc
jae
sub
fbstp
out
in
add
jmp
daa
inc
mov
outsl
incl
inc
and
xchg
xchg
push
sub
stc
std
mov
cmc
jnp
cltd
stos
cmp
inc
mov
cmovae
test
dec
xor
cmc
orl
popf
xchg
pushf
inc
sti
shr
ljmp
das
sar
rorl
int
leave
movsb
fldt
inc
stos
dec
aad
lret
push
mov
jmp
test
mov
fcomip
mov
cli
out
addr16
sbb
pop
or
test
cwtl
je
scas
jnp
push
test
inc
in
jmp
outsl
gs
jmp
mov
jb
sbb
ds
pop
or
les
fcomip
incl
mov
xor
divb
scas
mov
addr16
sbbl
cld
insl
pop
xor
je
jnp
int
ss
ja
shrb
push
insl
insb
push
add
shll
adc
xor
inc
scas
or
sbbb
repz
test
stos
xchg
mov
scas
push
data16
dec
and
cmp
insl
xchg
lock
out
push
sbb
scas
cmp
add
in
dec
das
xorl
jb
pop
add
js
out
sbbl
call
jns
mov
jg
cmpsb
cmc
gs
xorl
mov
inc
loop
pushl
push
mov
or
fs
nop
push
mov
push
or
stos
ljmp
jae
xchg
and
dec
cmpsl
ret
mov
adc
and
xchg
and
jg
adcl
jecxz
push
out
sub
stos
add
xor
lcall
repz
mov
lahf
inc
adc
inc
push
add
mov
mov
in
adc
push
aad
or
add
mov
mov
add
xchg
adcl
inc
and
negl
push
xor
jmp
mov
ss
xor
xor
sbb
mov
fisubrl
add
sbb
push
mov
enter
jmp
mov
pop
adcl
xor
cmp
add
xor
das
adc
insb
jmp
lret
aam
inc
into
in
fdivl
imul
cmp
mov
aad
cmpsb
stos
insl
sarl
lods
cli
xor
sub
mov
out
push
ss
pushl
mov
inc
xchg
sti
mov
std
imul
add
mov
fisttps
decl
pop
mov
fimull
dec
dec
inc
push
les
jbe
fyl2x
mov
in
mov
idiv
shl
sahf
test
enter
out
insb
sbb
nop
cli
ficoml
call
ret
rorl
insl
sbb
add
mov
lds
lea
fmull
lcall
int3
xor
scas
mov
ja
sar
sbb
in
dec
gs
cwtl
cwtl
add
dec
sti
xor
ljmp
mov
xchg
push
sub
mov
fwait
sbb
pop
xchg
in
sub
xor
in
pop
add
jmp
jecxz
mov
fldenv
fwait
aas
in
rcll
mov
add
in
fstpl
lret
push
push
push
push
jl
cltd
mov
ljmp
lret
sub
arpl
shlb
not
push
sar
ljmp
inc
and
xchg
int
fidivl
rorl
add
sbbb
or
jmp
in
scas
push
nop
test
loopne
les
dec
inc
popa
dec
jle
and
es
xlat
loop
inc
inc
xchg
in
xchg
mov
push
aam
cmp
sbb
xchg
pop
mov
mov
cmp
mov
push
sub
jmp
cmp
xchg
insl
data16
cmp
mov
pop
ud0
ljmp
or
mov
push
ljmp
hlt
mov
push
fwait
jo
xor
and
dec
lea
jmp
xchg
adc
dec
push
push
les
test
repnz
dec
jl
mov
jmp
idivw
cmpsb
mov
stos
pop
add
cmp
mov
stc
jne
pop
cmp
mov
ret
mov
test
dec
sahf
cld
incl
ljmp
mov
xorl
jg
add
ffreep
add
sbb
pop
into
hlt
mov
clc
aaa
std
call
inc
nop
insl
mov
sbbb
push
pusha
pop
inc
stos
jns
pop
sbb
jg
ljmp
fs
mov
xchg
push
mov
fisttps
push
call
sub
pop
lret
fistl
or
and
mov
out
enter
mov
sub
fcmovnu
pop
jp
daa
jb
sbb
stos
inc
loope
pop
in
rclb
incl
push
sbb
xor
fnstenv
mov
mov
push
push
icebp
inc
sbb
cld
icebp
ss
repz
lret
inc
adc
mov
mov
xor
mov
mov
adc
sbb
or
mov
jmp
sub
mov
fadd
insl
jno
pop
mov
adc
jae
cmp
mov
in
inc
cwtl
xchg
scas
jmp
push
ret
mov
push
or
sub
enter
inc
mov
cli
call
subl
jg
mov
jecxz
cltd
push
loope
leave
inc
jmp
ljmp
cltd
cmp
gs
mov
xchg
in
repnz
push
inc
hlt
mov
lcall
gs
mov
aas
xor
inc
pusha
fists
scas
pop
mov
js
mov
rcll
faddl
shll
repz
movsb
gs
sub
aad
scas
jo
xor
pusha
sbb
xchg
lcall
cmove
in
ret
and
add
cmp
mov
enter
adcl
stos
inc
sub
cmp
cld
out
test
ja
adcb
data16
mov
jp
ret
ja
cmpsb
push
cltd
out
add
jg
aas
sub
mov
sbb
mov
call
js
mov
inc
cmc
ljmp
sub
sub
outsb
push
mov
mull
lcall
jmp
adc
push
mov
mov
sub
jle
cmp
stc
cmp
mov
jmp
jbe
sbb
stos
cmp
pop
leave
add
lahf
fcoms
aad
xorb
pop
lcall
add
push
dec
pop
mov
sarl
mov
sahf
insl
inc
adc
push
das
scas
push
sti
leave
js
fcoms
sbb
filds
and
mov
aam
sub
xor
push
sbb
dec
push
test
lods
dec
and
mov
lcall
ret
pop
andb
jo
push
cmp
ret
lods
rcrb
mov
cld
cmp
out
daa
xlat
mov
cmpsl
aas
mov
and
out
sub
incl
out
insb
fisubrs
in
insl
mov
fstps
and
sbb
xchg
xor
imul
shld
pop
mov
push
jmp
das
or
jo
dec
push
xor
add
decl
popf
ret
repnz
push
cmp
push
pushl
out
sbb
adc
mov
aad
jno
sbb
jecxz
xor
inc
mov
ljmp
xor
imul
sti
push
dec
mov
push
sub
pop
inc
pushf
xor
cld
lcall
leave
mov
xchg
jns
or
inc
jg
dec
xor
and
cwtl
pushl
ret
aam
imulb
frstor
rcrl
jne
out
mov
fwait
popf
push
add
das
sub
cmp
orl
insb
fdivr
gs
fmul
add
fistpl
fcoms
fidivs
pop
jmp
push
mov
cmpsb
cwtl
mov
dec
and
rcrb
out
lret
jno
aam
jnp
pop
iret
inc
call
pop
jns
call
loopne
movsb
jno
jmp
jmp
leave
popa
aas
aas
aam
movsl
or
mov
js
outsl
push
pop
or
jnp
mov
test
cmpsb
jnp
sahf
scas
fisubrs
bound
cmp
sbb
gs
adc
lret
jo
shlb
divb
aad
movsl
pop
jns
call
fidivrl
mov
inc
mov
jmp
cs
imul
decl
hlt
mov
jmp
cmp
outsb
addr16
arpl
pop
mov
or
jp
fsubp
push
popf
aam
xorl
mov
cmpsb
pause
fdivr
jmp
xor
xchg
xchg
nop
cmp
jp
or
and
or
dec
iret
cltd
mov
mov
inc
jae
jg
jecxz
and
jns
sub
lcall
and
mov
mov
sbb
jne
mov
adc
cmp
in
js
cmp
jg
sbb
pop
mov
xor
sub
mov
jmp
cvtps2pi
ljmp
test
stos
inc
std
cmp
mov
mov
jg
call
in
xchg
jle
lcall
packuswb
xchg
add
xchg
inc
outsl
jmp
push
and
inc
mov
pusha
mov
mov
xor
mov
ljmp
push
int
fcmovnu
and
mov
ret
cwtl
mulb
mov
sar
ljmp
or
aaa
nop
mov
leave
xchg
xor
sbbl
in
push
aad
cmpb
inc
pop
sub
mov
lcall
dec
pop
scas
test
mov
push
push
out
push
add
dec
dec
in
movl
mov
bnd
jg
cmp
cmp
mov
sub
inc
push
sarb
fucom
inc
sahf
arpl
add
fs
sahf
pop
xor
pushl
mov
push
or
or
inc
stc
insl
sbb
aas
sahf
decl
xchg
or
lock
mov
cmp
jle
ret
jp
fnstcw
ror
mov
adc
loop
pop
cmp
mov
push
outsb
xchg
push
mov
call
pop
push
cs
pop
shll
outsl
clc
dec
movsb
ja
mov
inc
jge
xchg
jle
js
lods
inc
out
cli
aad
push
fldcw
pop
jmp
clc
pushl
pushf
in
adc
movsb
les
mov
insl
pop
push
xchg
pop
sbb
lret
cmp
pop
loopne
xchg
mov
jns
dec
out
mov
mov
cld
pushl
pop
jg
push
test
mov
inc
insb
mov
data16
adc
add
xchg
or
jmp
add
mov
andl
pushl
std
jmp
aas
fs
jns
adc
mov
jl
fsubrs
xor
gs
mov
ret
stc
aas
cmp
jb
dec
clc
rcrl
fdivrs
inc
xor
add
ja
sti
dec
mov
test
fsubs
loopne
cmp
arpl
adc
sbb
ljmp
dec
enter
xchg
xchg
or
je
fstp
outsl
clc
decl
pop
add
mov
pusha
add
push
mov
sbb
cwtl
leave
xor
and
pop
pusha
clc
mov
adc
xor
mov
cmpsl
jl
dec
cld
incl
and
decl
jmp
jg
in
mov
mov
push
movsl
push
sub
in
addr16
fdiv
sub
xor
push
sub
call
sbb
pop
iret
aad
dec
test
mov
popf
pop
lea
cli
ljmp
jp
nop
jl
es
and
jbe
out
cmp
ljmp
push
cmp
or
push
cmpsl
js
mov
std
inc
sub
push
add
dec
or
jnp
or
dec
sbb
cmp
push
xor
ljmp
sub
test
jp
push
dec
incl
arpl
jmp
or
cmp
shl
mov
in
mov
int3
stos
ss
push
je
fisubrl
ret
lahf
pop
decl
pop
fyl2xp1
xchg
ja
scas
js
jno
xor
lods
arpl
out
inc
in
and
xchg
mov
and
jo
jne
daa
cli
inc
dec
cmpsb
mov
pushl
mov
test
adc
xorb
jmp
pushl
mov
fisubs
std
in
lods
rorl
cmpl
repnz
sub
sbb
das
outsb
aad
std
idivl
add
or
push
out
shll
outsl
loop
incl
lea
ja
popa
dec
adc
cltd
cmp
push
fwait
js
mov
jae
push
andl
out
int3
stos
loopne
sbb
je
or
pop
js
add
clc
rclb
inc
sub
fidivrl
sbb
and
mov
outsl
jnp
adc
rol
sahf
inc
and
sar
mov
mov
lahf
das
xor
lea
xchg
push
jl
movsl
cmp
mov
rolb
aaa
leave
in
adc
dec
mov
lock
mov
fstp
iret
xchg
pop
inc
shl
lcall
pop
es
cld
mov
ja
fidivs
in
rcrb
les
fisttps
xchg
lahf
xor
adcl
and
adc
out
ja
add
incl
inc
fldenv
mov
jnp
or
lcall
cmc
adc
jmp
add
mov
or
pushf
arpl
mov
mov
dec
cmpl
pop
adc
push
xor
cwtl
repnz
ficompl
mov
fisttpl
aam
mov
add
lods
xchg
jmp
dec
push
mov
cmp
popa
gs
loopne
or
rorl
enter
scas
fbld
sub
rcrb
add
aaa
dec
cli
inc
int3
outsb
push
std
imul
jmp
xchg
or
xor
mov
xor
jnp
mov
push
notb
pusha
rol
ja
clc
sbb
pop
adc
push
lahf
int3
lahf
sbb
mov
lea
scas
clc
decl
or
stos
pop
jae
gs
push
fcmovbe
pop
fidivs
push
mov
decl
lock
je
inc
hlt
daa
cmp
popf
cmpsl
cmpsl
ret
les
repz
decb
cmpsb
pop
lcall
xorl
mov
xchg
xchg
fnstcw
add
jmp
lcall
in
and
sbb
test
lret
mov
xchg
xchg
xor
inc
or
aad
int
in
sbb
lock
bnd
inc
in
dec
idiv
fldt
arpl
xor
push
lods
adc
sbb
mov
call
ljmp
imul
sbb
or
cmp
movsb
mov
mov
ljmp
adc
push
lock
jmp
aaa
add
xor
std
or
int
xchg
inc
jns
js
jne
inc
xchg
mov
push
jbe
cmp
fcompl
push
dec
clc
pop
and
popa
fsubp
cwtl
and
push
push
call
jbe,pt
cs
jae
shll
aas
ret
ljmp
sub
aad
dec
lods
in
in
cld
lea
and
pop
inc
imulb
pop
mov
movl
mov
push
data16
push
sub
gs
jp
into
cmp
imul
and
mov
push
fadd
jg
mov
aaa
pop
into
inc
push
fnstenv
xchg
xor
xchg
addr16
xor
mov
mov
test
pop
jnp
sbb
cwtl
int3
adcb
xchg
xor
xchg
push
mov
sbb
ljmp
xchg
lods
stos
push
inc
mov
cmpsl
lret
fidivl
cmpsl
mov
jne
pop
hlt
incl
fwait
mov
popf
push
xor
pop
scas
push
lods
and
mov
xchg
add
test
jns
or
js
dec
sub
popa
into
adc
jmp
shl
xchg
mov
xlat
lret
lret
and
test
jne
dec
fsub
clc
sub
fstpt
jle
hlt
popa
sbb
mov
mov
dec
push
pop
inc
test
jge
and
out
movsb
stos
iret
mov
dec
adc
mov
data16
push
push
insb
stos
and
jg
movsb
dec
mov
mov
lods
cli
lods
xor
aaa
lods
push
xlat
jns
out
jg
lods
cmpsl
add
sar
jge
imul
andb
pop
test
xchg
jae
xchg
jle
mov
push
gs
cld
call
fnstcw
adc
inc
clc
out
lcall
cmp
jb
cmpsl
xchg
fidivl
pop
add
mov
jle
sar
inc
loope
pop
das
das
fistpl
dec
mov
cli
mov
inc
push
das
adcl
call
sbb
popl
fwait
fwait
mov
mov
push
pop
scas
sub
mov
dec
jbe
loopne
mov
and
sbb
xchg
mov
in
mov
jae
jns
stos
pop
jb
aad
and
jne
jns
dec
aas
outsb
and
decl
cmp
movsb
sbb
or
add
incl
ljmp
stc
cmp
sub
pop
and
xchg
dec
lods
dec
and
dec
std
lahf
andl
mov
push
out
aam
lahf
sub
pop
movsb
fisubs
lods
inc
push
jp
data16
xchg
in
xchg
mov
pop
fidivrs
lcall
mov
push
dec
dec
adc
add
pop
pushf
mov
dec
popf
push
cmp
pop
sahf
jmp
sub
sub
dec
xchg
dec
out
inc
cld
lcall
leave
movsl
mov
lret
insb
subl
jg
fs
fdivrs
xchg
jmp
mov
iret
fcoms
mov
out
into
mov
mov
xor
cs
into
daa
push
xor
pop
enter
inc
xor
xchg
and
decl
jge
push
outsb
inc
pop
mov
mov
popf
mov
jb
sbb
xor
fistps
aas
aad
clc
mov
int3
xlat
fucomi
movsb
pushf
scas
cmpsl
jmp
xchg
fmuls
lcall
pop
call
mov
test
xchg
mov
fwait
sub
dec
push
std
sarb
bound
push
in
addr16
aad
and
dec
mov
inc
loop
push
hlt
mov
xchg
les
decl
mov
stc
adc
ja
jnp
xchg
push
andb
cmp
jno
mov
cltd
cli
push
mov
push
sbb
and
neg
icebp
test
mov
fisubs
out
movsb
sub
fcomip
sbb
call
jp
push
fistpl
xor
clc
dec
or
divb
testl
stos
cmpsb
cmp
push
dec
decl
mov
movsb
dec
pop
idivb
insb
adc
shlb
shrb
ljmp
mov
das
push
out
sub
mov
mov
jle
imul
fldt
dec
push
out
pop
in
into
clc
push
jnp
dec
dec
fistl
xchg
dec
ret
in
push
call
and
and
pop
inc
stos
notb
data16
push
nop
and
ds
xchg
cmc
fnstenv
aas
push
sbb
push
or
dec
call
outsl
les
xor
inc
jecxz
pop
xchg
mov
sbb
and
jge
in
sbb
pop
push
out
dec
mov
loopne
enter
mov
int3
dec
and
push
mov
sub
jo
push
ss
mov
decl
dec
xor
pop
movsl
je
cld
and
fisttpl
arpl
mov
cld
push
out
xchg
add
daa
push
out
out
mov
ds
out
fcomip
decl
cmp
movsb
shl
xlat
cmp
push
and
movsl
cmp
dec
push
test
cmpsl
jno
xorb
jnp
daa
cmpsl
insb
xchg
pushl
jecxz
adc
and
sar
call
jne
xor
roll
gs
cmp
and
dec
sub
mov
call
mov
jg
rcll
mov
pmaxub
pop
push
jb
sub
ljmp
je
rorl
sahf
or
dec
in
cwtl
cmp
shlb
jp
sub
mov
jle
in
mov
sub
mov
in
xchg
sub
enter
add
incl
xchg
pop
bound
pop
xor
or
push
cld
push
nop
ljmp
jmp
sti
mov
adc
mov
jl
add
into
ds
cmp
push
and
ljmp
mov
jae
lret
xchg
mov
in
inc
scas
and
cmp
popf
stos
xchg
clc
ljmp
push
hlt
xchg
mov
mov
dec
inc
jle
shll
fbld
lcall
adc
leave
rolb
mov
sar
ljmp
push
pop
pop
jle
inc
and
fistpll
inc
rclb
loope
test
push
sbb
aad
mov
pop
loope
repnz
outsb
mov
cltd
pop
jo
mov
ret
cld
das
clc
lcall
mov
push
in
mov
dec
add
and
sub
dec
push
add
xor
xor
cmp
outsb
push
fdivr
shr
and
xchg
or
cli
mov
lcall
adc
ljmp
add
or
out
or
inc
ja
jg
push
clc
cmpsb
dec
xor
je
shlb
add
push
bswap
inc
sbb
jecxz
incl
cmp
or
or
pop
and
bnd
pop
push
add
mov
dec
mov
push
inc
imul
fmull
cmovo
or
out
scas
movsb
les
or
pushf
loop
into
jg
into
cmp
add
add
data16
dec
cmp
jmp
sub
lahf
outsl
ss
jo
test
shrl
jecxz
clc
out
cli
lcall
add
add
cmp
xchg
inc
xorb
lds
mov
xchg
mov
decb
test
shlb
orb
iret
jno
out
or
andb
jmp
xchg
cmpsl
and
call
cmp
inc
stc
lret
shll
fs
jg
mov
push
loope
bound
mov
pushf
mov
inc
fists
pusha
add
call
and
mov
std
out
enter
sbb
scas
xchg
inc
or
decl
pop
aad
leave
inc
push
fsts
add
repz
int
pushl
pop
das
mov
adc
sbb
lods
popa
leave
mov
mov
push
mov
mulb
ljmp
sbb
in
inc
sbb
popa
pop
push
mov
stc
stos
xchg
std
inc
xor
mov
pop
adc
jmp
fimull
push
mov
mov
or
inc
ret
cltd
adc
push
dec
fldl
fstpt
movsb
gs
mov
mov
in
das
or
adc
pushl
data16
pop
enter
inc
dec
pushf
or
in
mov
sub
cwtl
fimull
call
in
pop
scas
test
sub
mov
sub
pop
scas
xchg
mov
insl
shrl
shlb
pushl
push
lods
lret
mov
or
bnd
shrb
push
out
add
dec
call
lea
fmull
jp
jmp
decl
xor
mov
pop
mov
jnp
je
lcall
xchg
jne
mov
leave
mov
sbb
ja
push
jg
cmp
push
lcall
out
notb
fldcw
pop
popf
outsl
aad
inc
pop
push
xchg
xchg
or
decl
dec
cld
dec
push
je
dec
push
into
nop
test
daa
mov
movsl
sub
cmc
mov
sahf
mov
xchg
js
nop
rorl
lcall
xchg
leave
sahf
lcallw
inc
incl
dec
sahf
in
mov
lcall
outsb
jle
xorb
add
jnp
xor
iret
arpl
incl
pop
stos
int
jecxz
push
cmc
mov
jae
push
jns
pop
test
loope
or
mov
sub
dec
cld
jge
mov
mov
out
adc
jg
dec
add
leave
xchg
scas
dec
cmc
clc
out
push
sbb
lret
rcll
lea
idiv
dec
jns
cwtl
icebp
out
and
clc
cmp
lahf
jo
mov
cmp
das
fdiv
loopne
test
movsb
cs
pop
iret
outsl
mov
or
mov
sub
lcall
mov
ljmp
mov
dec
mov
push
std
call
jle
daa
sub
adc
jl
scas
mov
ss
repnz
jmp
ljmp
or
cmp
mov
dec
test
sub
xchg
enter
jno
fildll
add
adc
pop
out
into
out
dec
jge
xor
adcb
xor
call
sbb
adc
popf
lods
stos
xor
sbb
pop
leave
adc
lcall
cli
xor
test
ret
mov
pop
jo
cli
lcall
popl
push
cld
inc
xlat
sbb
or
clc
jns
mov
out
adc
cmp
enter
in
mov
lcall
xchg
and
in
jns
mov
jl
sbb
aad
lret
adc
mov
jb
jp
jle
pop
loopne
inc
mul
in
sbb
shlb
sbb
fstpl
and
dec
imul
inc
das
sbb
repnz
sbb
sti
cmpsl
adc
outsl
cli
dec
xchg
nop
enter
cmc
lret
mov
cmp
mov
pop
pop
outsb
or
iret
jne
jg
lahf
mov
shrl
adc
mov
xlat
pop
xor
xchg
mov
ds
lret
test
repz
fwait
ljmp
gs
pop
mov
pop
xlat
adcb
cmc
mov
xchg
popa
scas
mov
call
and
mov
push
cmp
mov
fisttpll
loop
out
sbb
mov
mov
jge
mov
mov
sub
inc
movsl
gs
test
mov
iret
sti
iret
xor
xor
push
insl
cmp
es
outsb
cli
add
mov
fimuls
fst
xchg
inc
mov
mov
pop
incl
sbb
and
out
les
orl
add
pop
iret
add
ja
ljmp
jl
push
fs
cld
adc
cmp
mov
in
cmpsl
inc
and
cld
decl
jne
sub
mov
into
push
mov
adc
mov
lock
movsb
and
les
sub
fsubl
inc
push
loopne
jns
pop
cld
jg
test
outsl
scas
js
inc
lods
idivl
mov
ss
pushl
xchg
sbb
or
icebp
popf
push
dec
fiaddl
xchg
repz
mov
mov
jg
fmuls
mov
add
fadds
lock
cltd
enter
add
out
cmp
dec
mov
mov
lret
push
mov
in
sub
jb
jl
dec
sub
lahf
mov
dec
cs
xchg
pop
subl
sbb
fidivrl
rclb
decl
mov
xor
cli
add
test
push
mov
cwtl
bound
pushl
lea
frstor
mov
add
mov
aas
sti
rcll
out
es
mov
cmpsl
jecxz
fsubr
jecxz
lods
jmp
add
loopne
mov
aam
insl
les
add
pushf
push
mov
push
mov
pop
mov
in
add
cmp
adc
add
xchg
xorl
pushl
and
and
nop
push
mov
popf
std
lds
shrb
pop
lcall
push
data16
mov
mov
pop
nop
test
out
js
mov
call
xabort
xor
pop
std
faddl
dec
lret
xchg
xchg
test
call
jae
test
pop
lahf
mov
pop
or
push
jmp
lcall
aad
sub
int3
test
pop
fadds
push
adcb
push
pop
sub
jnp
pop
fst
xor
rorb
lods
xchg
sbb
leave
mov
mov
jmp
aas
cmpsl
stos
xchg
mov
out
lea
mov
sub
scas
xorb
mov
jl
xchg
xor
push
inc
xchg
js
mov
ret
add
and
int3
es
fildll
rclb
stos
mov
mov
nop
test
push
jmp
and
xor
movb
fldt
mov
scas
push
dec
ret
mov
nop
cmp
data16
sbb
mov
or
ljmp
push
cmp
mov
pop
pop
icebp
arpl
into
mov
je
sbb
fdivl
push
popa
inc
fs
jp
gs
ret
push
fidivrs
xchg
clc
pop
cmp
mov
adc
jo
inc
push
lahf
ljmp
decl
scas
cmpsb
sbb
xor
fisubrs
adc
pop
cmp
xchg
ret
xor
push
mov
inc
movsl
repz
add
movsl
or
add
div
mov
mov
mov
mov
insb
pop
mov
jg
mov
pusha
lods
and
out
add
adc
fcmovbe
push
jmp
test
rep
mov
mov
mov
sti
xchg
inc
mov
inc
shll
fwait
jbe
aam
iret
std
in
sbb
lcall
sub
cltd
xor
and
psrlw
mov
test
pop
not
inc
ljmp
sbb
jmp
test
push
push
stos
fcos
dec
jmp
cltd
cmp
insb
push
and
xchg
and
out
int3
ficoms
fnsave
cltd
lds
movsb
mov
pop
xor
jmp
test
lret
ret
scas
shrl
push
shr
jae
mov
insb
sar
push
inc
fldt
sti
test
stc
jecxz
insl
pop
xchg
or
xchg
lock
incl
mov
mov
dec
sahf
xchg
mov
ljmp
mov
and
add
shrl
decl
mov
ljmp
lea
cs
hlt
iret
dec
fcomp
pop
cmp
pop
pop
add
dec
repnz
movl
sarl
mov
enter
in
addr16
call
push
and
adc
dec
fcomip
mov
sbb
stos
sahf
dec
mov
pop
popl
dec
mov
inc
jns
pushl
pop
stos
lods
out
push
cmp
ret
sbb
or
xchg
push
push
inc
jp
dec
xchg
or
dec
push
xlat
pushl
enter
into
push
imul
test
dec
xchg
pop
aas
lcall
cmc
push
jge
out
scas
imul
ret
push
dec
idiv
decl
test
sbbb
fmuls
push
inc
mov
mov
repz
icebp
ss
fcomip
int
fstpl
cmpsb
insb
outsl
lcall
mov
pop
xchg
sbbb
clc
aad
xchg
fdivrl
movsl
cmp
mov
mov
orl
aaa
dec
push
decl
iret
call
je
pop
scas
icebp
lahf
bound
xchg
fld
int
push
fisubrs
jmp
lcall
dec
and
popa
and
sbb
mov
xabort
nop
icebp
mov
push
adc
lods
imul
ljmp
call
xorl
fisubrl
aad
mov
rcll
xchg
call
cmp
adc
pushl
outsl
out
lcall
neg
dec
adcb
arpl
add
push
aad
mov
sbb
and
or
mov
jo
cmp
mov
mov
mov
mov
ss
fdiv
sbb
mov
xchg
or
shrb
mov
out
cmpsb
cmp
cli
in
ret
push
inc
xchg
mov
faddl
mov
rcr
ljmp
mov
ficoms
loopne
sub
jnp
aaa
push
mov
divl
cmp
xchg
aas
imul
std
jg
jmp
xor
xchg
addr16
xchg
stos
cmpsb
cmp
jmp
ljmp
cwtl
ds
and
dec
ss
mov
call
nop
lahf
pop
sbb
jno
mov
in
lret
pop
imulb
fbld
dec
jle
mov
mov
push
push
outsb
cmp
dec
adc
rorb
sub
push
enter
incl
sub
fiadds
loopne
inc
int
or
mov
sub
pop
sub
cld
imul
clc
pushl
inc
mov
add
mov
call
hlt
hlt
incl
push
dec
stos
ds
mov
mov
lock
add
push
push
scas
xchg
ret
adc
popf
nop
faddp
repz
cmp
sub
stos
aas
clc
decl
leave
mov
aas
scas
jmp
enter
sbbl
out
pop
incl
mov
int
mov
in
add
jmp
sbb
sub
jg
lock
xchg
leave
data16
and
loop
and
sub
inc
lcall
test
sub
xorb
mov
and
stos
sbb
jg
jmp
mov
inc
iret
cmpsb
jae
xor
mov
push
dec
xchg
sbb
shll
sub
mov
xchg
idiv
dec
scas
jg
lahf
int3
call
or
mov
xchg
jae
mov
xlat
inc
jnp
es
lods
push
lock
mov
fisttpl
pop
in
dec
lcall
xchg
loope
loope
movsl
test
adc
lcall
in
push
out
sub
mov
mov
mov
rcll
mov
lret
jnp
scas
pop
in
rcrb
jmp
jg
push
mov
sbb
cli
cmp
loop
sub
lods
daa
in
add
sti
mov
xlat
or
push
outsb
cmp
rcr
mov
or
mov
leave
add
jmp
pusha
addl
dec
jne
xor
mov
push
pop
mov
gs
dec
mov
cltd
sub
mov
and
and
call
mov
push
cli
jg
loopne
push
fs
enter
decl
xlat
ja
lcall
sub
jae
daa
aad
pop
sbb
sub
jle
push
dec
mov
fbld
add
and
ljmp
loopne
cli
data16
add
mov
dec
jno
push
pusha
inc
cltd
outsl
adc
incl
test
pushf
lcall
lcall
xor
les
jp
mov
jg
jbe
sub
fwait
xchg
outsl
dec
inc
mov
sar
or
andb
sahf
movsl
gs
push
mov
jae
dec
push
icebp
mov
dec
sub
leave
cmp
aaa
std
mov
pop
push
mov
push
mov
mov
or
cmp
cmp
enter
add
adc
mov
jl
xchg
or
push
xchg
addr16
imul
ret
iret
iret
pop
inc
pushl
adcb
stc
cmp
sbb
lds
std
sub
fstpt
int3
sarl
add
mov
out
sub
xor
mov
ret
dec
push
and
jmp
decl
leave
cmpsb
rcrb
add
daa
pushf
je
leave
inc
scas
xchg
sbb
fwait
or
ja
mov
mov
iret
cwtl
ret
sbb
jge
popf
adc
jp
inc
ljmp
dec
inc
pop
bound
negb
into
pop
adc
mov
jno
mov
pop
push
sub
xchg
pop
mov
test
hlt
sbb
out
mov
stos
xchg
ljmp
inc
mov
mov
inc
dec
add
lods
lods
sub
push
push
inc
pop
cmp
inc
mov
aas
jmp
xchg
std
fadds
movb
push
dec
pop
shr
jnp
fsubrp
mov
punpckhdq
call
roll
mov
dec
dec
fld
pop
scas
cld
cmpsl
test
clc
mov
lods
cmpsb
inc
or
or
fldl
mov
add
xchg
insb
loop
sub
mov
and
call
xor
mov
jg,pt
push
inc
or
mov
fmulp
push
insb
jae
decl
xchg
dec
repz
cmp
or
inc
adc
jle
negl
sar
jmp
movsl
ret
insl
testb
jbe
adc
movsl
dec
mov
inc
jecxz
dec
and
jg
jbe
add
cmc
lret
mov
xchg
fsubrs
addr16
fs
cmpsb
xchg
movsl
decl
lahf
fwait
pop
std
ljmp
xchg
xchg
mov
or
jle
mov
lret
icebp
inc
push
fidivrl
outsl
xchg
shlb
or
js
cmp
ljmp
jo
mov
pop
sub
addb
mov
mov
loopne
mov
lcall
cmp
mov
sbbl
lock
xor
push
pop
dec
cmpsl
cmc
push
popf
enter
out
mov
adc
aad
mov
clc
lcall
add
sahf
push
clc
mov
fimull
adc
pushf
mov
in
es
call
sub
xchg
dec
and
xchg
fsubrs
mov
cwtl
sbb
sahf
lds
incl
adc
popf
bound
add
sub
mov
xchg
pop
arpl
scas
pop
cmp
loopne
sub
test
sbb
push
jno
mov
mov
pop
out
push
inc
ds
std
inc
fcoms
or
or
insb
jmp
lock
dec
adc
push
and
imull
jmp
and
int
icebp
pop
add
push
aam
jns
and
ljmp
jecxz
mov
stos
pop
movb
dec
sbb
push
scas
inc
mov
push
cwtl
mov
push
mov
cmp
imul
stos
outsl
push
jmp
sbb
std
lahf
sub
stos
mov
jnp
test
jne
popf
pop
loop
imul
cmp
dec
jl
inc
push
push
test
cmp
mov
add
push
mov
aam
fldt
jnp
ljmp
mov
mov
andl
push
sub
fs
mov
cmp
clc
lcall
dec
jno
test
dec
xchg
cmpb
cmp
gs
lcall
scas
into
add
pop
rol
popf
xlat
pop
cwtl
or
ds
gs
pop
movsb
decl
mov
cmpsl
xchg
or
call
cmpsb
gs
sub
imul
lea
in
pushl
test
dec
js
ret
repnz
and
sarb
loopne
insb
repz
add
fnstcw
lahf
loop
jmp
loope
ficompl
or
cmp
sarb
insl
push
adc
or
lcall
adc
hlt
cltd
mov
je
in
jns
or
dec
test
adc
mov
and
xor
jecxz
mov
add
mov
xchg
or
jmp
lea
out
push
shl
jmp
cli
cwtl
bound
pusha
fmuls
les
repz
test
and
adc
and
in
jbe
sbb
das
push
add
and
into
ret
out
ljmp
jnp
mov
loop
icebp
mov
ljmp
mov
push
lret
pushf
xchg
sub
es
fdivr
lcall
pop
lcall
jae
nop
out
in
sub
mov
imulb
lods
mov
aam
fistpl
adc
clc
mov
leave
movsl
xchg
push
cmpsl
xchg
jmp
jmp
es
ljmp
and
inc
adc
jno
and
cmp
mov
pop
inc
call
push
into
fldcw
enter
mov
decl
fcoms
popf
lret
imul
add
mov
nop
rcl
cwtl
movsl
dec
add
push
stos
jmp
sub
cmp
shlb
lret
popf
call
insb
lcall
and
fldcw
movsl
gs
rorl
sbb
push
mov
lret
jle
insl
filds
push
std
xchg
cmp
stos
aaa
insl
dec
std
mov
inc
std
mov
in
lcall
test
sbbb
jnp
pop
idiv
mov
pop
or
negl
push
xchg
aaa
xchg
rolb
xchg
into
jne
fists
lcall
movsb
test
cmp
lock
outsl
mov
xchg
popf
sbb
ljmp
pusha
es
cmpl
cltd
jae
stos
pop
push
push
js
sbb
lds
lcall
std
dec
and
xchg
push
rcll
mov
mov
cwtl
push
out
cli
pop
arpl
lcall
aam
data16
mov
add
pushl
ds
mov
imul
mov
sbb
add
aas
pop
adc
xor
call
cld
decl
mov
lcallw
repz
test
mov
jne
mov
decl
sub
popf
popa
jle
cli
push
and
add
in
mov
cltd
stc
sbb
lcall
xchg
cli
xchg
sbb
pop
repnz
and
push
xor
xor
add
jg
ss
adc
aaa
mov
lds
mov
movsl
mov
test
sbb
and
push
popa
loop
test
movsb
jl
gs
dec
mov
jno
inc
push
sub
bound
lock
fisttpll
push
add
jl
inc
ljmp
test
cmc
popf
sub
sbb
mov
push
xchg
jmp
sub
mov
jno
out
lret
jnp
shlb
cmp
hlt
cmp
shrb
incl
mov
outsb
test
insl
add
inc
mov
das
rol
cwtl
or
xor
mov
and
push
pushl
loope
imul
and
fidivrs
lods
mov
outsl
das
es
lcall
dec
sbbl
nop
sarl
adc
cld
xchg
jg
out
incl
pop
in
lret
xor
mov
inc
stc
cmpsl
mov
int
dec
out
insl
xchg
call
lret
les
jns
inc
mov
lcall
andb
cwtl
adc
out
and
jecxz
loop
jg
and
mov
sub
data16
xchg
out
mov
scas
test
cld
pop
adc
aad
arpl
fbstp
lock
xor
pop
lahf
mov
cmp
std
sub
in
call
push
dec
pop
mov
inc
mov
loop
or
cmp
or
mov
dec
dec
iret
add
sar
sarb
loope
push
mov
inc
jmp
add
cs
sar
sbb
xor
or
pop
mov
xchg
test
sub
cld
push
jmp
add
jecxz
mov
jmp
xor
mov
aas
ja
push
mov
pop
filds
sti
adc
cld
pop
in
xchg
movsl
and
cmpsb
lahf
or
sbb
sar
cmp
hlt
ret
decl
clc
push
je
push
stc
mov
add
gs
test
cmc
out
and
and
add
xor
mov
or
decl
pusha
cmc
test
jl
pop
dec
cmp
sti
or
lcall
aad
ja
rol
cmp
mov
mov
out
xor
dec
lods
fwait
pop
mov
lock
pop
jl
mov
ffree
sbbb
xchg
adc
xor
xor
movsl
out
push
test
in
mov
rcl
hlt
out
icebp
pusha
lock
cmpsl
lods
jp
or
loope
sub
test
and
test
sti
pushl
push
cmpsb
mov
or
adc
xor
sbb
sti
inc
mov
or
out
clc
incl
imul
mov
loop
jns
fildll
outsb
cld
subb
jb
sbb
lds
aas
xchg
adc
lret
push
imul
insb
lods
call
xchg
push
mov
add
mov
cltd
and
mov
ljmp
rorb
sti
and
inc
popf
insb
mov
cmp
aaa
mov
sahf
mov
push
dec
ret
imul
sbb
adc
decl
adc
add
mov
sbb
mov
inc
lcall
sbbb
icebp
xchg
or
mov
arpl
incb
dec
pusha
dec
dec
mov
clc
xchg
pushf
xorb
out
test
jg
int
or
outsl
cli
outsl
int3
cmc
push
ja
sbb
jo
lds
inc
incb
ficoml
lea
inc
jbe
mov
xor
dec
sbb
icebp
mov
scas
ljmp
mov
scas
out
in
xchg
inc
and
in
fistpll
cmp
scas
imul
push
jne
std
mov
push
bound
cmp
push
incl
pop
test
lds
js
mov
lret
stos
sbb
bound
repnz
and
inc
mov
jmp
cmp
or
stos
jg
xor
mov
repnz
aaa
inc
inc
inc
mov
fdivl
pusha
sub
pop
sub
decl
mov
fwait
and
pop
mov
pop
xchg
sahf
mov
mov
addr16
repz
inc
cmp
jbe,pt
call
push
jl
jno
ret
fisttps
or
arpl
xor
scas
test
test
stos
flds
mov
push
and
lock
xchg
shlb
inc
push
add
out
pop
mov
push
jmp
jg
dec
inc
adc
dec
mov
sti
inc
jno
sbbb
or
sbb
mov
sub
lahf
rorb
lret
dec
xor
pop
fs
mov
add
mov
fcompl
pushl
ss
call
inc
fcmovu
lea
ljmp
lcall
push
adc
in
in
push
repnz
xchg
lds
leave
dec
xor
out
pop
aam
icebp
lcall
lods
push
add
push
lret
sarl
jle
jecxz
mov
mov
clc
mov
inc
xchg
lock
in
xor
mov
sub
decl
jge
lcall
jg
cmp
mov
sub
add
clc
ljmp
ljmp
imul
hlt
jb
jg
cmp
xor
out
push
jns
insl
mov
popf
gs
divl
push
incl
call
jle
mov
cli
pop
je
test
cmp
ljmp
sbb
flds
xchg
ret
pop
fwait
and
mov
lcall
sarl
or
mov
mov
dec
jo
lock
les
mov
cmc
cltd
movsw
mov
adc
inc
push
movsl
fildl
nop
xor
push
stc
outsb
jg
shlb
add
shll
jbe
rorl
fstpl
add
or
fnstsw
aaa
mov
cmpsb
in
pushl
add
mov
pushf
xchg
cmp
movsb
jl
adc
decl
jecxz
or
loop
call
cmp
add
inc
ljmp
sub
in
sub
inc
popf
fwait
lods
xchg
cmp
cmp
or
ljmp
clc
lcall
enter
mov
add
cmp
loopne
dec
add
decl
hlt
jmp
mov
ds
jno
fwait
and
mov
ljmp
or
js
rcl
jb
stc
imul
and
js
mov
addl
mov
add
push
scas
pop
push
mov
jns
cmp
jl
cld
lcall
call
dec
push
mov
in
cmp
cmpsl
pop
add
add
in
cmp
divl
cmpsl
push
mov
cmp
std
fiadds
push
and
iret
inc
and
cs
shlb
dec
xor
cld
mov
adc
jg
int
dec
nop
jmp
push
fs
ret
pop
rclb
push
incl
test
sub
mov
sarb
imul
sbb
lret
pop
or
shll
in
xchg
and
iret
dec
mov
mov
faddl
out
mov
incb
cmp
cld
push
jno
jp
jecxz
inc
out
mov
push
adc
rcrb
sbb
mov
repz
adc
jmp
fwait
mov
in
je
dec
sub
cltd
call
out
fidivl
sbb
sub
jmp
sti
adc
scas
outsl
lock
xchg
mov
sahf
inc
pop
ret
loope
loop
xor
sub
lds
xchg
js
cmp
cmp
fcoml
mov
cs
pop
sbb
mov
fiadds
dec
daa
and
int3
pop
mov
rcll
fistps
add
cmp
inc
aad
cmp
lods
ret
push
rcl
lcall
pop
push
leave
mov
lock
into
insb
jns
jne
mov
inc
ret
lods
mov
imul
ljmp
inc
xchg
outsl
add
addr16
andb
lahf
mov
mov
sahf
cmc
push
dec
jo
sub
lds
sub
shlb
mov
inc
push
pop
inc
xor
push
mov
mov
mov
cmpsb
in
or
imul
ds
mov
decl
xchg
add
mov
imul
sbb
out
test
repz
cmp
cmp
push
faddl
push
orl
jne
and
xchg
js
mov
out
clc
aaa
aaa
lcall
or
sub
and
jns
adc
add
push
lods
outsb
fsubr
or
fs
or
incl
add
dec
pop
mov
bound
clc
dec
jmp
pop
fsubr
sbbb
adcb
aam
ljmp
cld
fisubl
inc
movsb
jb
out
pop
xor
push
pop
and
add
mov
scas
and
out
mov
dec
inc
cmc
jmp
jmp
cmpsl
jg
dec
sti
out
loope
mov
xchg
or
add
scas
and
imul
je
iret
sbb
jecxz
fcomip
jg
adc
mov
and
push
jbe
iret
sub
jae
and
jo
aad
sub
lcall
imul
incb
and
pop
rolb
add
mov
out
mov
xor
mov
enter
mov
push
inc
sbb
lcall
add
sbb
dec
mov
mov
xor
lret
into
scas
scas
sub
aad
cli
mov
xchg
push
jl
loopne
andb
or
out
pushl
jmp
dec
leave
pop
sti
mov
cmpsl
push
pop
addb
ljmp
inc
test
cmc
adc
flds
ficompl
test
ljmp
sub
jnp
xchg
and
int
or
adc
stc
cltd
outsb
call
std
aas
and
pop
fprem
mov
jecxz
dec
mov
out
pop
push
mov
inc
jmp
bound
sub
mov
sbb
fsubl
stos
push
jmp
test
pushl
cmp
leave
dec
mov
push
fstl
sbb
jg
ljmp
test
and
out
bound
add
cmp
jmp
push
pop
into
pop
lahf
mov
inc
pop
aaa
mov
lcall
fs
jmp
xchg
inc
mov
hlt
pop
add
in
test
sbb
out
adc
mov
xor
into
into
xchg
out
pushl
sub
cmc
decb
mov
ss
mov
fmul
aas
out
dec
xor
push
std
or
daa
cmp
sahf
mov
sbb
push
jae
push
xchg
cmp
pop
pop
cmp
jne
repnz
lds
xchg
xor
sub
push
aam
sbb
imul
ljmp
xchg
pop
or
sbb
ja
mov
jg
or
xchg
imul
xor
rcrb
into
inc
jo
jb
filds
call
cmp
sbbb
filds
jb
and
or
cmc
pushf
decl
cmp
loope
pop
je
mov
test
cmpsb
int
pop
inc
add
je
decl
cld
mov
mov
test
mov
push
test
leave
call
adc
ljmp
and
clc
cmpsl
js
xchg
xor
or
push
stos
leave
out
mov
or
out
cli
call
and
sbb
shr
cmpsb
mov
popf
inc
push
inc
mov
pop
xor
out
cli
pushl
iret
xchg
dec
inc
mov
dec
pcmpeqb
add
mov
jg
xchg
sub
gs
jp
in
inc
push
adc
cltd
or
inc
cmp
aad
es
nop
daa
cmp
aam
inc
mov
mov
sbb
jge
sbb
clc
add
xchg
and
mov
call
jle
fwait
lds
insb
ss
sub
dec
insb
adc
in
add
fiadds
xchg
shlb
inc
xchg
jmp
rol
cmp
repnz
out
aam
sbb
shrb
add
ret
and
aaa
std
idiv
mov
cwtl
lods
js
dec
outsb
push
out
mov
cmpsl
divl
mov
lods
inc
jp
enter
mov
and
jg
test
dec
mov
hlt
sbb
inc
daa
jno
xchg
sar
adc
cmp
shrl
inc
and
sub
inc
xor
pushl
jp
lret
jecxz
add
jne
mov
or
out
mov
lods
pop
mov
xor
addr16
call
mov
mov
jge
inc
mov
ret
out
jnp
fadd
push
fcompl
movsl
mov
sub
or
lcall
jge
add
xchg
aaa
adc
stos
ljmp
icebp
adc
push
pop
inc
faddp
mov
sti
xchg
jg
pop
icebp
mov
xor
stc
pop
into
jne
adc
cltd
pop
push
xchg
scas
adc
push
cld
call
nop
hlt
xchg
or
adc
inc
sub
out
mov
add
sbb
mov
imul
mov
dec
sub
das
ljmp
clc
ljmp
loopne
push
sub
imulb
std
shll
push
test
dec
jbe
push
pop
mov
mov
jno
xchg
lock
adc
jnp,pn
decl
or
mov
jecxz
mov
incl
ret
or
jmp
call
and
std
shlb
dec
in
inc
fildll
shrb
xchg
roll
stc
je
adc
and
mov
jmp
aaa
sub
fiadds
sub
repnz
jb
bnd
lock
incl
mov
sarb
cmp
sbb
adc
mov
mov
adc
ljmp
aam
clc
int3
test
cmc
fistpl
stc
xor
lcall
push
ljmp
leave
dec
leave
test
cmp
dec
data16
mov
out
pushf
sub
fsubr
xor
pop
negl
jp
stos
hlt
cmp
clc
lcall
insb
and
and
movsb
loopne
push
push
jge
scas
mov
enter
call
mov
cmp
insl
xchg
xchg
pusha
xchg
ljmp
sahf
int3
mov
shlb
repz
loope
mov
daa
mov
jae
pop
xor
push
pop
mov
shr
mov
cwtl
cmp
jmp
pusha
push
pushf
inc
xor
pop
les
sbb
mov
pop
ret
pop
test
cwtl
mov
jbe
sti
or
test
std
arpl
mov
stos
mov
mov
call
lods
dec
jmp
push
adc
mov
inc
mov
mov
cmovb
ud0
je
inc
pop
push
sar
je
roll
add
incl
or
aas
adc
mov
dec
cmp
mov
lea
lret
cld
fstl
das
lods
fs
insb
ret
cmp
jbe
jb
add
lock
mov
iret
pop
mov
inc
ja
jmp
jg
jns
ljmp
shl
data16
sub
das
push
popf
and
lods
ljmp
dec
and
mov
xchg
dec
lds
adc
dec
std
das
int3
jle
scas
jb
or
pop
pushf
xchg
test
jg
fcomip
scas
push
dec
and
call
outsb
stos
mov
dec
bound
das
cmp
jl
fs
mov
inc
mov
fidivrl
mull
mov
push
mov
loope
pushf
pop
clc
or
xor
push
imul
jecxz
mov
js
fisttps
mov
int
xchg
and
inc
inc
mov
fstpt
push
shlb
popf
mov
call
call
lea
jmp
scas
pop
xor
mov
push
cmpsb
mov
mov
inc
fstpt
loopne
lahf
jecxz
addl
out
decl
bound
push
iret
sbb
sub
inc
jp
mov
ret
ljmp
out
mov
and
adc
push
xor
call
scas
insb
leave
outsl
pop
jo
sbb
test
mov
dec
or
incl
sub
imul
pushf
out
add
jno
mov
push
inc
sub
dec
cmp
inc
js
inc
movsl
lods
das
call
in
xor
sti
cld
push
xchg
mov
fldenv
or
imul
lds
mov
push
push
clc
aam
mov
fnstenv
dec
jecxz
push
rcll
incl
outsb
int
loop
loopne
movsl
cld
outsb
cmp
fsubs
jg
testb
sbb
std
pushl
mov
jle
jne
mov
mov
hlt
push
out
and
call
mov
ljmp
cmp
cmc
iret
int3
pop
insl
xchg
jmp
mov
test
movsb
arpl
gs
rorl
pop
dec
mov
shlb
lcall
sbb
adc
lcall
mov
xlat
xchg
pop
inc
add
push
fadds
sbb
mov
pushf
mov
dec
ljmp
jo
xor
push
xchg
leave
lea
add
inc
and
xor
xchg
jle
xchg
clc
fwait
and
in
cmpsb
cmp
dec
jb
push
mov
cwtl
inc
push
jmp
push
fdivr
and
lods
pop
in
rolb
lcall
lock
sub
xor
sub
aaa
repz
outsb
cmp
ret
decl
adc
imul
clc
fwait
js
inc
push
not
mov
adc
outsl
cli
pushl
sub
std
sbb
es
rcl
test
sbbl
xchg
in
jmp
mov
call
cmp
fwait
test
and
loop
call
mov
adc
loope
sub
adc
jno
fnsave
sbb
punpckhwd
out
add
adcl
pop
add
pop
lret
sbb
push
addr16
jmp
jge
push
cmp
add
call
data16
icebp
ficompl
inc
ret
cmpsb
add
daa
fnsave
ret
sub
dec
es
mov
ja
cmp
cmpsb
in
aaa
push
xchg
jo
in
cwtl
mov
aad
and
ja
jne
inc
or
pushl
gs
lret
fisubl
lret
stos
lret
cmp
aad
and
loopne
lcall
sbb
in
pop
mov
mov
loopne
lods
decl
les
in
sbb
pop
sbb
lcall
fwait
iret
ss
dec
add
loopne
lcall
cmp
icebp
lods
jp
out
and
leave
push
icebp
sbb
call
pop
int
ss
in
dec
insl
jno
push
pop
ljmp
and
lret
inc
push
sub
jp
push
out
rol
rcrl
or
pop
ljmp
imul
inc
sahf
lds
mov
out
iret
add
mov
in
loop
mov
stos
dec
push
adc
mov
sbb
dec
ss
adc
add
mov
xchg
inc
loopnew
movsb
lock
shll
push
test
xor
lods
dec
dec
out
push
shlb
cmpb
mov
jmp
into
inc
cmpsb
mov
inc
jns
movsb
push
aam
pmaxsw
add
lea
sbb
xchg
out
dec
cmp
push
cld
imul
test
dec
inc
or
xor
push
inc
cmp
call
xlat
ds
cli
cltd
loop
sbb
rcrb
pop
and
push
sub
pop
cld
inc
mov
xor
es
incl
mov
mov
mov
jo
mov
jns
mov
inc
test
cli
fwait
jmp
xchg
mov
leave
jecxz
or
xchg
or
lret
xchg
ljmp
jp
jp
sar
sbb
mov
ret
rolb
inc
loope
cmc
mov
xchg
add
aaa
mov
mov
dec
mov
cmp
je
lds
test
xchg
jg
cmc
push
rcrl
loope
imulb
pop
enter
or
or
jmp
clc
cmpsl
adc
or
insl
sbb
mov
xchg
jno
xchg
in
out
jmp
outsl
decb
dec
mov
ljmp
fsubl
sbb
js
ficoml
out
lock
sarb
push
fisttps
lret
iret
sbb
loopne
clc
jmp
mov
and
push
jo
into
fdivs
scas
aaa
pop
outsl
cmp
decl
sub
fs
fistpll
pop
push
jne
out
cmp
js
sbb
cmp
stos
sub
push
mov
add
mov
inc
fldcw
xchg
mov
sarb
incl
lods
iret
enter
and
pop
subl
out
imul
pop
out
mov
ja
push
pop
leave
adc
xor
out
sar
pop
icebp
push
mov
lret
jns
or
and
leave
lds
jecxz
dec
ret
insl
cmc
jmp
cmpsl
sbb
pop
xlat
pop
dec
adc
in
inc
adc
test
mov
filds
mov
add
xor
or
sub
jns
mov
insb
xchg
dec
push
subl
dec
jbe
mov
xor
aam
inc
dec
jle
xor
lahf
inc
loopne
and
add
fiaddl
jb
push
enter
iret
xor
cmp
fdivrl
loop
pop
fnstsw
pop
mov
or
jg
cmc
and
nop
adc
jmp
mov
sub
sar
decl
std
inc
add
clc
mov
and
cmp
mov
outsl
cmp
loopne
aad
leave
inc
call
mov
imul
jmp
cwtl
aad
mov
int3
or
sub
pushf
mov
dec
add
pop
jge
or
mov
incl
ret
mov
xlat
add
cmp
pop
adc
or
decl
push
adc
xchg
insb
sub
aas
xchg
popf
mov
mov
out
imul
lcall
cmpsl
cmp
push
cmp
sub
jmp
jp
lock
sub
mov
pop
push
xor
inc
call
mov
or
pop
pop
mov
jno
pop
xlat
sub
xchg
loop
push
pop
scas
in
sub
jl
pop
dec
cs
enter
test
stos
sbb
adc
lahf
pushf
lea
xorb
out
inc
int3
add
cwtl
shlb
popf
movsl
push
cld
incl
pop
subl
rcrl
mov
shlb
cwtl
push
add
and
pushl
pop
lea
xor
enter
shll
xchg
cltd
dec
repnz
fimull
dec
int
pop
movsl
sub
and
gs
xor
enter
mov
mov
xor
addr16
mov
sti
das
fmull
cli
pop
xchg
rorb
jae
or
scas
fadds
scas
sarb
and
inc
shlb
rcrb
imul
mov
inc
shrb
loopne
jg
add
dec
inc
ret
int
xchg
sub
call
and
push
mov
xor
fcmovnu
fstl
mov
mov
int3
lds
pushl
adc
jns
xchg
addl
fimuls
pslld
inc
mov
loopne
xor
pop
pushl
aas
iret
in
rcrb
out
enter
loop
inc
es
les
jb
jle
mov
out
inc
das
cli
lcall
sbb
lds
mov
jp
call
mov
adc
scas
xor
in
pop
fwait
mov
pop
inc
jg
call
sub
mull
jecxz
rorl
nop
mov
and
push
es
ljmp
mov
sub
movsl
pop
pop
mov
outsb
std
mov
inc
add
pop
xor
stos
inc
xor
sbb
jno
aad
sbb
cmp
call
repnz
mov
ret
in
pop
inc
and
fwait
scas
lock
pop
push
aaa
rorb
pop
mov
jo
adc
add
cmp
std
in
fbld
in
clc
insb
test
ds
push
ja
sub
push
test
sahf
adc
pop
movsl
or
leave
int3
jg
movb
imul
out
cltd
push
bound
sahf
lret
xlat
mov
rcl
add
rorl
jg
sahf
add
incl
adc
lods
jno
cli
loopne
lods
dec
adcb
jg
ret
add
enter
xor
into
inc
adc
lahf
test
ljmp
xchg
push
rorb
lds
pusha
outsb
adc
arpl
cli
add
lods
cmp
pop
hlt
sbb
lods
sub
sub
gs
call
fwait
sbb
sar
and
lret
std
or
arpl
pop
lods
scas
add
incl
movsl
icebp
lds
adc
inc
push
pop
jmp
test
ret
mov
push
rcr
inc
mov
jae
sbb
sbb
or
inc
sarb
pop
add
call
sbbb
push
cmpsb
fdiv
filds
cmp
xor
pop
xor
je
jg
sub
mov
fcoml
xchg
jle
pop
incl
nop
test
pop
js
xchg
xchg
pop
loopne
scas
lods
dec
fdiv
out
mov
decl
adc
push
stc
sub
les
ljmp
mov
clc
fwait
sub
push
dec
xor
aam
jne
scas
adc
in
dec
icebp
decl
scas
je
fiadds
les
push
sbb
inc
jge
sahf
lcall
cmp
std
add
iret
popf
cld
das
xchg
or
xchg
ret
push
fstpl
fbstp
sub
fiadds
in
in
xchg
pop
jns
in
test
imul
cmp
andl
push
sbb
inc
pop
xor
jmp
push
and
sbb
outsb
jo
loope
ljmp
ficoml
push
fcomip
call
leave
icebp
adc
inc
cmp
stos
mov
gs
and
adc
and
xchg
dec
mov
dec
xchg
fsubrs
repnz
jb
das
sbb
loopne
push
aas
mov
xor
xchg
jg
sub
sub
repnz
stos
fildl
loop
or
ljmp
insb
out
ret
inc
xor
dec
push
sbb
repz
fcomip
stos
ljmp
cwtl
rcrl
pop
loop
jo
xchg
jbe
inc
lcall
jmp
int3
lret
xchg
push
and
repnz
insl
jmp
sub
sub
sahf
cmpsb
pop
cmc
pushl
pop
jg
std
jg
fcomp
iret
push
mov
loopw
negl
lcall
pop
adc
adc
pop
nop
ds
mov
scas
out
stc
rolb
fcmovbe
in
ljmp
in
and
rcrb
fisttps
or
movsb
aaa
inc
mov
lcall
cmp
jmp
aam
fnstcw
outsl
movsb
pop
sub
xchg
push
jle
cld
clc
shlb
jbe
imul
sarb
incl
and
shl
das
inc
pop
jns
cwtl
insb
add
popf
mov
fsts
inc
ret
lret
lea
shl
insb
mov
inc
mov
adc
mov
dec
out
jns
movl
or
ljmp
hlt
outsl
add
cmp
lods
pop
inc
dec
fadds
or
ljmp
mov
in
ljmp
inc
int3
out
movsb
addr16
insl
nop
push
sub
ret
or
decl
adc
ljmp
psllq
imul
xor
mov
rorl
ljmp
or
clc
xchg
orl
lea
pop
pop
fildll
mov
sub
mov
inc
loopne
aaa
test
je
and
sub
cli
cmp
lock
pop
jle
cmp
jmp
and
call
push
jg
lock
sahf
xchg
pop
xor
movsb
xchg
jle
in
nop
pop
mov
pop
inc
cwtl
sbb
inc
int3
xchg
lcall
mov
inc
sub
xchg
stc
mov
int
jg
and
mov
ds
into
jnp
jle
fs
gs
add
add
mov
jle
lcall
lcall
les
sarb
adc
rcrb
cmp
cmp
hlt
sub
jb
jmp
cwtl
inc
push
jbe
in
cmp
in
sbb
int3
push
dec
mov
pop
aaa
xor
mov
push
in
cld
push
lret
sbb
sub
adc
mov
dec
sub
out
lock
add
dec
call
sub
imul
jp
pop
iret
negl
sbb
mov
lock
pushf
inc
sub
aad
push
dec
lock
mov
jae
rol
lcall
ret
mov
push
sub
or
inc
decl
adc
inc
loop
jg
out
and
enter
push
jg
incl
daa
xor
jmp
addr16
dec
js
je
aad
movsl
mov
sar
or
mov
jmp
pop
fsub
or
pop
sub
je
mov
mov
xor
rcr
xchg
adc
push
xor
mov
jmp
pop
jb
nop
fdivr
das
cli
aas
bound
sti
xor
shrl
pop
mov
sub
mov
cmp
orl
iret
into
push
js
inc
push
data16
sub
jmp
xor
in
pop
insb
lods
stc
pop
aaa
in
xchg
out
js
test
xor
dec
cmp
adc
mov
lcall
xor
int
stc
ficompl
xor
out
push
push
sub
je
daa
fidivs
sbb
idiv
divb
cmc
and
or
movsbl
mov
movsl
jns
mov
data16
mov
inc
mov
dec
inc
data16
xchg
cltd
jge
push
sub
xchg
fnstsw
mov
pop
ljmp
and
pop
mov
clc
mov
addr16
enter
xor
sub
shrl
xlat
jmp
fs
inc
adc
dec
ret
mov
pop
jnp
arpl
arpl
filds
cmp
clc
sbb
jg
cmp
push
sahf
xor
icebp
loop
inc
jnp
sbb
dec
mov
icebp
fildll
jnp
push
jle
pop
aad
mov
decl
jne
add
cmp
das
sbb
lret
inc
cmp
cmpsl
sub
xchg
cmc
lock
or
pushl
pop
fdivrs
in
jns
vxorps
imul
mov
and
mov
scas
rsqrtps
push
ljmp
sbb
xchg
sbbb
out
mov
mov
cmc
dec
andl
mov
dec
and
xor
jb
nop
fisttps
or
push
fsubrl
fisttpl
aad
fcomip
cmp
mov
mov
out
movsl
and
mov
lock
mov
jmp
or
xchg
sub
test
add
fcoml
xchg
mov
push
xlat
xor
dec
loope
pushl
scas
inc
mov
test
or
xor
sahf
or
aam
mov
jg
mov
test
iret
inc
jnp
dec
in
pop
mov
xchg
syscall
jns
incl
cmpsl
cmp
dec
push
pop
test
or
xor
roll
xchg
add
lock
sub
push
push
xor
pop
outsl
sahf
idiv
pushl
and
div
leave
mov
mov
std
or
test
incl
mov
insl
stc
push
mov
xchg
jl
movb
fadds
in
std
in
adc
ljmp
jge
dec
cmp
pop
sub
cmp
dec
jg
add
clc
repz
test
bound
dec
jecxz
inc
test
pushf
sub
and
pushl
push
inc
shlb
pop
shrb
vmwrite
xor
in
or
ljmp
sbb
jmp
testl
lds
fwait
sbbb
mov
cs
cmpsb
push
rcrb
mov
push
jp
fcoml
std
ljmp
push
sub
xor
int
or
sub
push
fwait
cs
rol
in
push
sbb
jmp
lea
leave
add
js
and
inc
adc
jl
and
add
or
sub
sbb
ret
xchg
leave
inc
incl
pop
lcall
leave
fwait
in
rclb
sub
mull
sub
dec
pusha
bnd
cmpsl
mov
stc
add
decl
imul
mov
fisttpll
ljmp
fisubrs
vmaxps
pop
fsubp
jp
mov
mov
fidivs
mov
or
jge
cmpsb
andl
rcr
adc
call
loopne
cmpsl
clc
and
test
int
mov
and
out
clc
push
mov
das
dec
repz
mov
loop
stos
pop
add
rorb
andb
das
fisttpl
jne
negl
into
pushf
scas
mov
cmpsl
test
sub
aaa
cmp
dec
sar
add
add
push
dec
cmpsb
movsl
xor
or
les
jmp
jmp
mov
mov
cmp
lods
fildll
cmp
cmp
xor
fbld
lock
sub
inc
movsb
sub
stc
fstl
out
lcall
mov
ds
jp
push
jmp
mov
mov
ss
in
ret
clc
xchg
call
sahf
fmull
jmp
mov
stos
or
out
addr16
into
movsl
pop
push
cmp
imul
mov
jmp
int3
mov
mov
and
bound
push
xchg
add
inc
loop
popf
in
stos
incl
out
jno
xor
daa
mov
mov
push
jbe
decl
lods
pop
push
sbb
jle
xchg
jnp
icebp
cmp
sub
adc
add
dec
add
mov
cmc
jmp
or
or
sub
imul
nop
lock
xchg
jp
les
sub
test
das
shrb
dec
xor
iret
arpl
inc
adc
lea
lcall
insb
mov
dec
aaa
jb
xor
jge
adc
pusha
ds
jns
jg
inc
cmp
dec
mov
jbe
xchg
pop
mov
fnstenv
jmp
mov
dec
dec
lret
test
and
pop
dec
mov
lret
add
pop
jns
mov
bound
loope
sahf
aad
adc
fisttpl
push
push
fsubrl
lea
leave
mov
aad
pop
aad
cmp
add
cmpsl
ffreep
mov
jbe
xor
adc
popa
cmpsl
sub
ds
pushl
jnp
test
or
mov
cmp
ret
gs
jge
test
pushl
push
xchg
inc
mov
ret
mov
mov
sub
popf
leave
fsts
lcall
push
jl
subl
testl
pop
xchg
pop
inc
call
std
inc
lods
cmp
cli
pop
mov
lea
cs
add
in
xchg
cmc
push
das
xor
add
imul
sbb
or
inc
dec
push
jmp
sbbl
xorb
popa
inc
jecxz
mov
incl
leave
mov
jb
add
mov
or
and
mov
loop
xchg
pop
dec
cmp
mov
jns
xor
je
sbb
aam
mov
not
sbb
call
jp
divl
int
repz
dec
mov
pop
sti
cwtl
test
cmpb
cmp
fcoms
add
xor
sar
jg
mov
xor
aas
or
inc
jge
pop
aam
jne
inc
sub
and
movsb
push
jae
inc
push
jge
shrb
push
sarl
fcompl
cmp
pusha
add
lret
jno
cwtl
out
inc
fbstp
sbb
adc
xchg
add
cmp
subb
push
push
mov
mov
int3
aad
arpl
test
dec
pushl
rcrb
lret
jb
movsl
mov
fisttpl
shlb
inc
mov
faddl
push
fcmovnu
pop
pushf
xor
iret
jge
push
pushf
jbe
je
xchg
xor
out
xor
xor
sbb
jmp
xor
stos
pop
in
test
lods
fisttps
insl
es
shll
lcall
lcall
inc
fcompl
insb
mov
cmpsb
nop
mov
call
mov
gs
ja
add
xlat
mov
mov
mov
jne
or
aaa
hlt
lock
call
fisubrs
movsl
cmp
aaa
or
sub
sub
sub
pop
and
cmp
sub
inc
push
scas
push
mov
mov
data16
std
push
pop
or
call
xchg
inc
repz
pop
push
pop
ss
add
popa
add
pop
pushl
lret
scas
xchg
push
mov
push
inc
xor
in
call
xchg
cmp
addb
clc
call
or
pop
push
clc
sbb
ficoms
out
call
or
mov
sub
dec
inc
add
gs
test
pop
sub
mov
aas
cmp
push
push
jmp
mov
adc
jne
in
ss
fldl
out
lret
mov
pop
daa
shlb
insb
pop
fsts
pop
lcall
dec
sub
pop
lahf
sub
sbb
xchg
popa
scas
pop
jl
inc
jb
dec
cli
mov
jg
mov
add
jmp
call
ljmp
pop
out
jbe
jmp
stos
aad
decb
ds
inc
jecxz
mov
cmpl
xchg
add
jno
hlt
and
mov
jg
loope
add
adc
cs
scas
sti
dec
and
out
jbe
sbb
inc
push
jo
jl
or
add
aas
push
pop
lock
cld
mov
incb
push
mov
stos
fwait
addr16
push
sub
mov
incl
je
and
fadds
ljmp
rcrb
fmull
call
adc
insl
pop
into
outsb
sub
decl
daa
xchg
int3
in
movsl
cltd
jns
out
ret
or
dec
leave
mov
fadd
stc
dec
add
lret
add
mov
cld
xor
fdivs
and
jmp
cmp
mov
ss
mov
clc
ljmp
cmp
repnz
jae
cltd
insl
cmp
cli
aam
and
sti
icebp
incl
adc
and
rclb
imul
jo
sar
fstl
je
mov
or
dec
add
clc
int3
jnp
out
push
jecxz
bound
mov
mov
pop
fs
lea
jg
or
xor
jae
cmpsl
mov
nop
xor
xorl
push
loopne
add
dec
cmp
imul
loope
mov
or
mov
mov
out
iret
mov
into
sub
rep
int
push
push
xor
imul
lcall
incb
add
aaa
lods
fmulp
test
out
pop
test
push
das
and
xchg
lahf
mov
outsl
xor
xor
inc
mov
jae
mov
sahf
cltd
xor
xchg
das
negb
jg
data16
and
mov
fcmovnbe
sbb
rcrb
cwtl
call
cwtl
sbb
adc
pop
in
in
dec
into
fists
jmp
dec
nop
call
int
xor
jmp
xchg
mov
jno
sbb
sub
cmp
cmp
inc
xchg
hlt
xchg
call
fwait
les
incl
add
pop
mov
mov
push
pop
pop
bound
sub
rolb
jle
mov
daa
jnp
jle
pop
cmpsl
jle
scas
cmp
inc
stc
ret
lcall
fsubrl
cmp
add
ljmp
pop
sbb
sub
pushl
sahf
push
les
add
dec
imul
call
adc
mov
lret
mov
pop
stos
bound
pop
mov
ljmp
add
dec
and
mov
inc
jmp
adc
movsl
mov
xor
das
jp
pop
fbld
jmp
mov
mov
jmp
xchg
push
push
leave
sahf
pusha
pop
roll
and
jnp
add
ljmp
lea
pop
xchg
add
lods
call
cmp
test
xchg
lret
mov
in
in
mov
xchg
shr
add
pop
imul
and
repnz
hlt
iret
cmp
push
mov
pop
jno
mov
or
ds
push
xchg
jg
or
stc
fisttpl
sahf
dec
jecxz
mov
or
decl
add
test
add
or
dec
mov
stos
or
fildll
jmp
pop
dec
pushl
cmpsb
lea
push
jb
into
mov
in
ret
rorl
jne
adc
cs
ljmp
clc
call
hlt
pop
mov
cld
fidivrs
add
adc
pop
scas
mov
mov
or
jl
or
and
jo
push
sub
lret
jg
imul
lock
and
repz
dec
pop
adc
fildll
xchg
xchg
xchg
dec
add
ljmp
iret
mov
push
sbb
fwait
add
push
mov
loope
lret
add
and
xor
pushf
jp
mov
mov
and
in
pop
jp
mov
sub
xor
das
inc
jp
cmpsb
pusha
aad
pop
mov
or
sub
bound
ja
jg
xor
xchg
outsl
xchg
fldt
pop
inc
adc
push
pop
cmp
adc
cmp
mov
add
jmp
mov
mov
push
adc
mov
pushl
cmp
fimull
and
test
pop
mov
loope
js
add
cmp
mov
mov
pop
cmpsl
aas
rorb
cmp
push
adc
cld
incl
lret
loope
xor
nop
mov
int3
ljmp
add
pop
insl
sahf
in
int3
lods
sub
decl
out
push
cmpsb
pop
mov
push
adc
dec
pop
stos
cmpsb
jmp
jmp
sub
out
inc
pop
test
xchg
mov
or
mov
leave
push
in
mov
call
xchg
insb
push
push
aam
inc
cmpsb
sub
rol
leave
lods
push
sbb
les
out
xchg
jecxz
decl
cltd
ficompl
jae
pop
sbb
jnp
jns
popf
push
inc
jo
push
mov
add
mov
pop
stc
in
dec
mov
test
jo
int3
push
incl
sbb
mov
add
out
in
loopne
js
cmp
jle
cmp
pop
xchg
pop
sbb
pop
dec
in
int
enter
jne
mov
mov
pushf
xchg
ret
mov
gs
mov
cwtl
imul
inc
pop
fs
popa
add
sahf
and
mov
lock
dec
test
cwtl
sub
fsubl
shll
out
ss
loop
mov
xor
cld
sub
imul
int3
sub
outsl
lret
jl
dec
aas
sbb
and
outsl
dec
sbb
xchg
push
std
sub
in
test
ljmp
sbb
daa
decb
jmp
jge
and
sbb
pop
mov
outsb
ljmp
insb
neg
ljmp
andb
inc
lods
lcall
in
call
pop
dec
movsl
pop
filds
push
and
clc
inc
mov
adc
push
inc
jg
mov
cli
bound
xor
outsb
xor
pop
xor
ljmp
inc
dec
ljmp
inc
ja
lods
mov
xchg
test
xchg
sub
repz
decl
sbb
adcl
testb
jo
loopne
movsb
cmp
cwtl
out
mov
loopne
cmp
sbb
xor
jno
cwtl
mov
xchg
mov
pop
push
xchg
cmpsl
fildll
fcomip
jae
cmp
repnz
push
ret
ret
imul
test
iret
lret
pop
mov
incl
in
test
inc
xor
jp
add
adc
push
scas
cli
decl
add
mov
addr16
les
imul
pop
arpl
call
stos
inc
cmp
add
aam
mov
rolb
or
pop
jg
add
pop
fdivrp
pushl
jecxz
pop
or
repnz
orb
mov
cld
push
mov
cmp
clc
incl
mov
push
lods
int3
scas
adc
ja
movsl
sub
pop
push
and
scas
mov
scas
jp
pop
test
lods
ds
mov
xchg
xor
push
in
push
test
out
pcmpgtb
adc
pushl
inc
sbb
ret
mov
mov
jnp
div
mov
test
incl
xchg
inc
push
jp
inc
jmp
mov
and
ja
aas
jecxz
fucomi
or
aam
dec
loope
orl
xorb
incl
jb
cmpl
sbb
or
xor
outsb
adc
notl
sbb
mov
ljmp
lcall
jbe
mov
add
jbe
mov
pushf
pop
std
jg
int
inc
or
jg
scas
xchg
iret
xor
out
and
dec
xchg
adc
push
mov
dec
out
ds
lods
add
fsubrs
jg
in
call
fists
test
jmp
sub
sub
aam
mov
pop
mov
inc
cli
int3
mov
icebp
sbb
push
mov
ljmp
decb
gs
pop
icebp
ret
dec
jae
cld
xor
xchg
jmp
sub
dec
lcall
push
mov
jg
pop
add
xchg
int3
dec
xchg
pop
in
cmc
mov
shlb
pop
mov
flds
inc
popf
mov
pushl
je
sbb
dec
adc
sbbb
pushf
gs
into
add
shrb
loopne
inc
les
jmp
insb
out
inc
or
lret
mov
and
jle
add
test
test
dec
jae
jle
pop
pop
les
ret
aaa
dec
mov
and
pushl
lea
xorb
mov
movsb
adc
jns
aam
pushf
andb
insb
inc
mov
pop
cmp
inc
rorl
outsl
jb
dec
outsl
mov
pop
or
cltd
jb
decl
pop
outsl
or
aam
daa
jge
shl
pop
cltd
dec
aam
dec
pop
pop
pushf
mov
into
and
pushl
push
repnz
lods
jecxz
enter
ljmp
out
cmp
cmp
fnstsw
jl
paddusb
loop
decl
lods
inc
fwait
mov
lock
ja
test
ret
mov
sbb
xlat
sbb
pushl
cmpsb
imul
daa
sti
loop
push
imul
add
sub
cmp
dec
pop
mov
mov
inc
insl
pusha
aas
inc
mov
in
xlat
jp
imul
fisttps
jg
std
cmp
pop
dec
in
incl
jne
movsb
jge
push
insl
lock
adc
repnz
pop
lcall
in
pop
adc
leave
adc
inc
adc
sbb
fs
mov
push
dec
xchg
dec
pop
ret
in
cmp
jmp
or
push
push
xchg
pushf
icebp
xchg
dec
mov
pop
roll
insb
xlat
sbbb
and
aad
pop
lahf
aaa
scas
jg
aaa
pop
inc
cwtl
sbb
and
add
jg
pop
push
or
mov
sbb
outsb
addr16
inc
or
clc
ret
dec
xchg
and
lahf
lock
push
gs
test
lret
insb
jg
sub
push
lds
inc
or
fdiv
sti
lcall
mov
push
call
xchg
insl
mov
cli
test
bound
cs
call
inc
repnz
lock
cld
leave
cmp
jge
out
daa
ljmp
ja
shll
call
xchg
lcall
in
vcvtsd2ss
xor
mov
es
lea
pop
xchg
sahf
fistpl
xchg
sbb
ljmp
in
inc
mov
dec
insb
out
imul
jb
sbb
repz
into
mov
mov
data16
push
jnp
mov
sbb
repnz
leave
pop
loop
out
push
lds
jl
mov
add
dec
push
ljmp
or
or
cmp
add
inc
incl
jle
ljmp
cmp
aam
cli
adc
call
sbb
adc
mov
call
ret
mov
hlt
decl
jmp
cmpsb
xor
push
adcb
sub
and
je
dec
call
aaa
cwtl
jge
aam
fucom
and
mov
xchg
pop
enter
inc
lcall
mov
dec
sarl
cli
sbb
gs
lcall
jmp
ds
jl
fadds
add
and
dec
aas
js
outsb
jmp
clc
xor
sub
or
ljmp
jo
jns
rclb
mov
jmp
mov
jb
orb
cmp
jmp
xor
jbe
clc
xor
or
push
pop
fwait
xchg
lods
filds
adcb
pop
outsb
mov
stos
add
inc
push
cmp
dec
or
add
mov
jg
lea
shl
push
mov
les
sub
aaa
mov
stc
lcall
lods
loop
mov
les
gs
mov
jmp
mov
and
iret
push
insb
sub
shrb
jns
push
adc
rcll
test
jg
out
test
mov
gs
decl
stc
std
jnp
das
mull
pop
push
mov
jnp
movsl
jo
jg
xor
pushf
mov
dec
lea
call
mov
lret
push
inc
into
seta
fnsave
enter
jg
jl
gs
out
pop
inc
ret
cmp
arpl
lcall
mov
scas
dec
mov
pop
sti
adc
scas
sub
dec
sub
push
xchg
mov
icebp
cli
dec
push
push
out
mov
in
pusha
movsb
lcall
aam
fsubrl
xchg
jo
sbb
sbb
cmp
aad
jg
sbb
dec
sbb
jle
sub
mov
cmpsl
add
in
in
inc
cmp
ss
cmpsb
loope
mov
inc
test
xor
mov
fistl
enter
sub
sbb
inc
filds
loope
jge
dec
jg
inc
cld
xchg
test
or
orb
inc
enter
je
mov
cmp
shll
dec
js
decl
sbb
mov
push
and
imul
outsl
xchg
fidivrl
call
sbb
mov
cmp
dec
push
rclb
and
dec
fmuls
lret
andl
in
aam
xchg
inc
add
out
cmp
aaa
cli
divl
add
xchg
cltd
xchg
push
out
mov
push
in
les
mov
mov
out
xchg
jecxz
inc
bound
mov
lcall
jmp
xchg
mov
or
and
mulb
cmp
lret
xor
lcall
fstpl
movsb
xchg
pushl
pop
push
inc
or
fs
adc
add
cmp
test
pop
jb
insl
lods
lods
rcrl
push
dec
xor
dec
std
sbb
stos
insb
push
fs
jle
adc
jecxz,pn
inc
jle
jge
xor
and
inc
cld
cmpsl
inc
mov
adc
and
lea
ja
cmp
fwait
pop
and
pushl
push
outsl
and
push
out
sub
jnp
ljmp
push
jns
xchg
xchg
mov
int3
imul
and
dec
adc
push
dec
pop
ret
or
jo
or
idiv
in
mov
es
inc
add
mov
dec
adc
out
jnp
pop
jno
cmc
outsb
stos
ret
aas
adc
xlat
cld
xchg
or
lcall
dec
sti
inc
cld
or
stos
je
nop
rol
subl
jne
inc
mov
int3
in
call
mov
push
ja
bnd
or
test
or
mov
or
inc
loopne
fwait
arpl
outsb
inc
inc
cli
mov
incl
jne
or
mov
mov
dec
incl
addr16
and
ret
test
test
fisttpll
nop
insl
pusha
decl
xchg
jnp
adc
pop
lret
cmp
std
dec
iret
test
rorl
add
notb
shr
sbb
fistps
roll
push
cmc
test
mov
add
mov
cmp
push
add
cltd
rol
add
or
add
pop
shl
daa
inc
jo
sbb
rorl
leave
scas
loop
lcall
adc
push
call
jge
decl
cmp
stos
repz
push
mov
mov
and
das
cld
js
adc
fs
leave
fwait
outsl
orb
jg
ljmp
jl
stc
push
orb
dec
pusha
cs
push
mov
call
xchg
xchg
test
push
or
out
cwtl
dec
loopne
mov
or
test
fs
inc
in
xor
xchg
cmp
inc
cld
pusha
int3
mov
xchg
pop
adc
mov
jg
ret
push
mov
mov
repz
mov
leave
mov
pushf
js
adc
lcall
pop
pop
adc
inc
push
sbb
mov
ret
sbb
inc
leave
mov
lock
jmp
outsl
mov
xor
dec
andb
inc
adc
cld
xor
ljmp
inc
test
shrl
fldcw
outsb
adc
incl
mov
stos
mov
jnp
cltd
loop
outsb
repnz
pop
das
dec
call
cwtl
or
and
in
cmp
sub
in
lret
in
cs
and
adc
jp
push
jmp
aad
cmp
xchg
lahf
mov
inc
mov
das
xchg
pop
das
ja
mov
test
xchg
es
jno
mov
nop
dec
lock
subl
and
iret
push
paddd
fstl
movsl
cmp
dec
mov
add
rolb
es
push
fcos
ret
repnz
mov
icebp
sub
push
push
sub
xchg
sub
sar
call
adc
or
fildl
add
jl
in
ljmp
clc
ljmp
xchg
sahf
mov
aaa
pop
es
sub
add
cli
out
inc
enter
andb
jmp
inc
mov
push
movsb
rcll
call
out
jle
incb
imul
or
mov
rolb
aad
testb
dec
pushf
es
aaa
addr16
xchg
mov
ret
movsb
and
scas
jb
adc
fcomip
outsl
xchg
jp
imul
cmp
incl
push
jo
add
pop
mov
arpl
push
js
into
loop
adc
pop
mov
jmp
ret
add
jns
adc
scas
push
lret
jae
adc
insb
aas
repz
mov
bnd
incl
jae
cmpsl
test
push
add
mov
add
out
insb
mov
fldt
mov
ja
outsb
sub
mov
arpl
push
jl
in
stos
lret
mov
jecxz
js
add
lods
lds
pop
or
clc
decl
jl
dec
decb
scas
push
jecxz
sbb
dec
and
sahf
push
fbstp
sar
dec
loopne
scas
cltd
xchg
in
rcrb
ss
inc
pop
jge
decl
xchg
movsl
es
jge
aam
mov
inc
xlat
lds
xchg
mov
jg
dec
mov
xchg
test
jbe
adc
inc
inc
pop
andl
adc
mov
fildl
dec
fldt
jle
in
mov
xchg
pop
jg
cmp
aad
sbb
scas
dec
inc
mov
je
jl
cmp
ret
mov
cmp
pop
mov
mov
ljmp
mov
hlt
mov
push
and
pop
xor
sbb
scas
lods
or
lcall
mov
push
movsb
lret
xorl
xchg
jg
push
push
sbb
adc
mov
cmpsl
pushl
inc
sti
cmp
jmp
hlt
xchg
adc
test
mov
xor
or
sub
cmpsl
pop
or
fsubl
nop
push
pushf
cmp
adc
xchg
inc
mov
lret
sbb
movsl
ficompl
cmp
add
sbb
jmp
inc
sbb
sbb
arpl
mov
sbb
cmpsb
jbe
ljmp
int3
das
out
or
lret
stc
lcall
je
mov
xor
push
xor
ljmp
pop
test
ficompl
int
xor
inc
dec
andb
mov
and
pushf
dec
enter
xchg
jo
sti
mov
call
jb
add
fisubs
je
push
incl
add
sub
mov
stos
cmp
imul
mov
ljmp
mov
adc
cwtl
popf
push
cli
jmp
into
arpl
mov
fwait
sub
pushl
lds
icebp
add
and
test
xchg
mov
out
stos
and
or
int3
sub
inc
inc
stos
mov
xchg
decl
fisubs
cmc
dec
push
pop
mov
xor
ja
jbe
popa
js
gs
cmp
out
cmpsl
cmp
cmp
push
call
hlt
decl
in
std
mov
mov
inc
or
loop
xchg
push
pop
mov
cmp
pop
filds
xlat
loopne
js
mov
int
fdivrl
ljmp
lret
xchg
mov
clc
xchg
mov
loopne
xchg
stc
test
rcll
sar
decl
nop
popf
mov
sbb
test
fildll
out
inc
push
push
clc
fbstp
adc
insl
bound
ja
pusha
into
jae
cmp
dec
cmpsl
jle
aad
ret
or
mov
std
cmpl
test
jmp
mov
push
adc
out
mov
js
clc
sub
jns
mov
pushl
shl
jmp
cmpsb
sbb
sbb
mov
pusha
loopne
lds
cwtl
fadds
add
xchg
mov
aad
cmc
pushl
xor
leave
push
faddl
lea
fs
fabs
pop
fucompp
lock
filds
movsb
cwtl
sub
fisubrl
sbb
aaa
lret
pop
mov
fisubrs
jp
ss
add
mov
mov
adc
cs
aad
movsb
push
decl
mov
cmc
jae
inc
movsl
lret
lea
hlt
dec
jmp
add
lahf
daa
in
pop
movsb
mov
aad
test
cld
sub
imul
sub
in
divl
and
mov
mov
push
test
add
mov
scas
xchg
jle
movsb
loopne
repz
lcall
imul
outsb
pop
and
sub
fldcw
ret
mov
inc
sub
fcmovnbe
jnp
divb
popa
pop
dec
movsb
pop
mov
sbb
cmpsl
rcrl
cld
cli
ret
imul
jbe
lret
mov
mov
sub
xchg
ss
decl
cwtl
or
pop
lret
mov
or
pop
and
push
or
adc
and
add
faddl
dec
cmp
add
sub
pushf
or
push
pop
mov
pop
ljmp
jbe
ss
mov
push
add
das
xchg
hlt
pusha
call
repnz
mov
mov
mov
hlt
xchg
es
stc
call
pop
popf
xchg
es
cmp
nop
dec
into
pop
loopne
fidivrl
fidivl
jne
add
test
test
fisubl
repnz
iret
dec
rol
jl
lods
push
test
int
and
or
jg
inc
cld
cld
popa
cmp
dec
inc
inc
ss
pop
mov
xchg
sar
decl
outsb
inc
lea
ret
sbb
adc
or
mov
cmp
ja
mov
sub
mov
jp
jecxz
call
xchg
dec
out
mov
jg
mov
pop
mov
in
pop
leave
push
push
aas
adc
stos
pop
ljmp
push
cmpsl
pop
mov
add
jae
push
addr16
pushl
les
xor
push
je
mov
cmpl
js
adc
lcall
mov
clc
mov
fsubrp
enter
jae
rolb
inc
subb
jmp
std
sahf
sub
call
popf
popa
aas
add
jecxz
lcall
jns
sbb
aam
daa
xchg
mov
mov
fs
rorl
xor
ljmp
cmp
stos
push
mov
xchg
je
cmp
shrl
mov
nop
pop
dec
sti
out
cld
or
subl
enter
sar
das
sar
ss
mov
ret
xchg
stos
mov
pop
cmp
dec
jmp
jo
inc
insb
pop
dec
jne
add
add
dec
into
test
ljmp
sbb
mov
repnz
push
and
lret
adc
cmp
imul
xor
fstl
adc
inc
leave
in
mulb
out
mov
loopne,pn
sahf
mov
adc
adc
pop
xor
mov
dec
cld
ljmp
mov
mov
mov
icebp
adc
adc
mov
mov
mov
xchg
loope
ja
ret
fistps
jno
mov
jnp
xchg
ljmp
test
cmp
push
push
pop
pusha
mov
jo
mov
mov
decl
add
cmpsb
cmpsl
das
push
lods
cli
scas
cmp
xor
dec
xchg
adc
dec
inc
or
sbb
push
popf
cmp
xchg
mov
lds
or
ljmp
rorb
lcall
jno
call
pop
dec
iret
jl
add
dec
jno
idivb
xchg
jl
xchg
outsl
lds
jae
das
and
es
and
stos
repz
pushl
and
mov
lret
add
out
jbe
jmp
add
leave
mov
jl
lods
push
or
insl
stc
iret
decl
testb
mov
repnz
mov
pop
aas
clc
insl
inc
js
clc
or
int3
cmp
adc
fsubr
sbb
idivl
sbb
lock
int3
aaa
pushf
push
sbb
mov
pop
lret
adc
or
fwait
in
cmpsl
pushf
dec
pop
pop
test
les
jg
enter
arpl
lds
mov
stos
loope
sahf
xchg
push
es
cmp
test
inc
jg
mov
out
jl
ja
dec
mov
sbb
lahf
add
incl
xchg
lock
cmp
xor
out
sub
push
sub
sti
mov
mov
cmpsb
dec
daa
adc
pop
divl
jno
sarb
cmp
and
decl
dec
sbb
add
cmp
dec
sub
add
jbe
rorl
jge
lods
push
add
cli
mov
fbld
xor
and
out
sarb
scas
and
push
lods
jmp
sbb
fwait
std
test
add
stos
push
push
call
fldl2e
out
mov
clc
loope
mov
xor
loopne
adc
or
jmp
sahf
push
stos
incl
test
cli
lods
pop
into
push
inc
sbb
push
repnz
fnsave
jg
jmp
outsl
int
addr16
inc
xchg
rcll
and
cmpsb
cmp
sub
scas
loope
push
idivb
mov
mov
std
fbld
adc
jmp
repz
aaa
and
aam
cmc
scas
mov
loope
decl
sbb
into
mov
and
dec
stos
test
lds
xor
jl
sbb
push
and
cmc
mov
out
add
mov
ljmp
clc
inc
test
sbb
or
imul
cltd
cmp
mov
cmp
imul
sbb
mov
dec
pop
mov
mov
jbe
mov
ljmp
aas
out
inc
or
cmp
xor
inc
mov
aam
js
fdivl
cmpsb
xchg
enter
sbb
icebp
loop
jge
mov
test
inc
addr16
decl
inc
add
pop
xchg
pop
dec
idiv
decl
in
fsts
jae
arpl
das
js
cltd
sahf
pop
inc
dec
and
xchg
test
mov
lcall
and
add
inc
repz
or
lahf
nop
int
pusha
inc
ud0
cmp
test
enter
dec
arpl
clc
or
mov
or
jmp
jbe
popf
pop
imul
adc
fstpl
xor
push
cld
xchg
xchg
ljmp
cmp
mov
lcall
mov
cltd
xchg
and
cmp
jp
int3
fstpt
jg
push
xacquire
out
push
push
pop
pop
mov
into
jne
js
es
or
cmp
stc
imul
rorb
jmp
inc
shll
js
inc
or
das
das
jg
or
dec
or
jo
aad
mov
and
lahf
sub
cwtl
xorb
stos
push
imul
adc
outsb
jg
xor
or
mov
jne
sbb
test
iret
push
push
mov
pop
push
fwait
rclb
pop
and
xor
je
lea
mov
xor
out
inc
or
push
jb
lret
test
sub
fcos
call
push
xchg
mov
fwait
mov
rcll
mov
cld
mov
push
lds
or
dec
xchg
or
xchg
loop
lahf
cmp
ljmp
jns
push
push
or
jo
es
ljmp
sbb
rolb
into
push
not
xor
rclb
hlt
loope
jmp
insl
or
mov
pop
inc
add
divl
pusha
cwtl
dec
pop
inc
int3
stc
fwait
sbb
call
pop
jne
popf
push
nop
addr16
imul
jl
decl
pop
mov
mov
inc
jb
es
mov
push
cmpb
hlt
jb
mov
or
orl
mov
xchg
outsl
lcall
sar
jns
cmp
fiaddl
rcrb
imul
or
ret
std
outsb
sar
in
jb
jmp
jl
cmc
mov
gs
adc
pop
push
push
pop
cli
push
and
xor
dec
loope
jns
addr16
push
scas
mov
xchg
mov
insb
push
pop
out
cld
ljmp
dec
sti
inc
mov
gs
sub
in
mov
push
add
sar
pop
mov
pop
jle
pop
add
orb
jae
decl
fcoml
push
das
enter
mov
cmp
push
cmp
xchg
pop
xchg
fucom
push
sti
mov
decl
mov
mov
xlat
lds
orb
and
das
testb
mov
jmp
fs
mov
repz
test
inc
out
xor
fcmovnb
or
dec
arpl
jmp
icebp
js
mov
cmp
and
dec
data16
cmp
imul
loop
in
loop
outsl
mov
lods
fisttpl
dec
subb
xchg
lods
dec
clc
decl
fdivrl
and
push
loope
mov
call
call
repnz
push
push
loope
push
dec
dec
in
in
mov
push
pop
and
pusha
sarl
outsl
in
movsl
xchg
inc
test
loope
xor
orb
mov
dec
push
cmp
fcmove
in
mov
aaa
pop
in
daa
adc
rorb
jbe
inc
lea
inc
and
call
mov
jl
cmp
push
cmp
incl
dec
adc
jle
clc
test
lahf
or
jecxz
pushf
jb
fnstsw
mov
xor
movsb
sbb
jle
nop
out
inc
in
pop
cltd
mov
adc
xchg
push
jmp
pop
pop
mov
push
ja
jno
hlt
sbb
add
push
clc
xor
xor
in
push
pop
push
sti
sub
adc
je
pushf
test
push
jae
mov
cld
call
lds
outsb
js
movsl
lock
mov
jbe
or
sub
out
ret
movsl
scas
fs
mov
ds
incl
into
imul
verw
mov
xchg
cmpsl
es
cwtl
mov
mov
jg
icebp
sti
or
ds
mov
and
jb
fldenv
insl
push
incl
add
sbb
inc
cwtl
adc
inc
sbb
and
mov
xor
clc
loope
mov
add
push
ljmp
aam
popf
out
add
les
push
mov
sbb
sbb
mov
pusha
jg
insb
cld
xchg
cmp
lret
orl
jns
sbb
cmp
xor
popa
movsl
incl
push
in
jl
adc
lcall
jecxz
aaa
fdiv
jns
cli
xchg
enter
mov
push
adc
pop
lock
jl
daa
loopne
movsl
or
test
jae
popa
inc
frstor
movsb
cs
cs
push
xor
mov
sar
es
sbb
pop
sub
ds
xor
test
and
decl
out
jecxz
gs
or
and
out
rol
adc
out
decl
cmp
jbe
notb
xchg
push
dec
sub
decl
sahf
cwtl
ds
cmp
push
inc
push
mov
adc
jp
shrl
sub
push
sahf
cli
ljmp
stc
adc
xor
pop
mov
or
inc
sahf
rol
jle
sbb
ljmp
in
xchg
retw
xor
and
je
popa
mov
ja
inc
xchg
pcmpeqb
jl
mov
dec
push
stos
pop
lea
push
ljmp
lret
das
imul
daa
jl
icebp
mov
ljmp
aam
cmc
xor
adc
xor
mov
push
sbb
daa
xor
pop
test
fnstenv
enter
imul
adc
lcall
loop
push
test
mov
dec
adc
in
popa
sarl
push
cmp
stc
and
aaa
lea
repnz
ljmp
xor
lds
pusha
add
cmp
hlt
leave
push
xor
sub
pushl
push
lea
mov
ljmp
in
decl
or
jle
and
stos
mov
cmp
jns
jg
mov
outsb
jg
pusha
cs
jg
cli
loop
adc
leave
push
imul
iret
pop
ljmp
into
push
mov
push
sub
test
mov
vmread
shll
gs
dec
or
adc
cli
mov
lret
movl
fldcw
jmp
push
push
mov
and
push
mov
or
sub
push
dec
ljmp
inc
mov
ret
adc
adc
or
jmp
mov
dec
test
mov
rclb
lret
lods
rorb
cmpsb
jl
stos
arpl
dec
sbb
pop
dec
das
cltd
std
xor
call
movsl
or
std
jns
jo
mov
jnp
inc
mov
push
add
test
ljmp
std
lcall
adc
mov
fnclex
push
xchg
mov
sahf
es
dec
out
jns
jnp
gs
push
into
mov
jbe
mov
xchg
out
xor
ret
jo
adc
lahf
push
mov
jmp
test
mov
sub
mov
hlt
push
add
and
fisubrl
mov
popf
fstpl
daa
incl
mov
jo
repz
shlb
inc
icebp
daa
in
daa
or
xchg
xchg
cmpsb
add
jp
xor
cld
pushl
mov
repnz
sbb
ljmp
aam
sbb
ljmp
jle
pushf
sbbb
mov
cwtl
movsb
xchg
hlt
int
sub
iret
mov
mov
lcall
mov
add
pusha
cmpsl
inc
in
add
cmp
in
mov
inc
lcall
cmp
repz
movsl
aad
mov
and
repz
push
push
stos
jle
xchg
push
jg
lret
lret
and
rolb
or
cli
cmpxchg
push
cmp
lods
decl
sub
add
imul
cmp
pop
sbb
jp
or
add
jg
mov
pushl
subb
add
mov
cltd
popf
arpl
pop
mov
push
cld
movsl
je
push
ljmp
roll
out
sub
das
xor
pop
and
sub
push
and
filds
pop
sbb
push
mov
and
mov
pop
lock
pop
cmp
lds
in
push
sbb
sub
loopne
mov
pushl
popf
mov
and
bound
dec
ficoml
sbb
imul
fiaddl
or
out
dec
inc
jle
hlt
ffree
aam
data16
nop
adc
lock
shl
xor
lods
cli
jmp
xor
repz
movsl
add
mov
out
pop
mov
push
fbld
push
dec
dec
mov
sub
mov
mov
sub
xchg
pushl
mov
push
out
xor
sub
jle
add
scas
call
mov
stos
adc
fists
add
xlat
sub
pop
ret
hlt
xor
inc
icebp
lea
dec
loope
pushl
test
or
xchg
loop
loopne
into
filds
pusha
orl
pop
sub
fs
out
hlt
push
pop
push
mov
insb
and
inc
pop
mov
ret
pop
pushf
fwait
pop
mov
push
je
lret
lcall
ds
mov
and
push
data16
loop
dec
jmp
ljmp
jle
dec
lock
stos
out
sbb
sbb
dec
add
mov
call
in
jno
push
sub
adcl
xchg
cmp
mov
push
insl
inc
push
cmc
insb
lods
jno
pushl
mov
data16
inc
jl
fstpl
xlat
loop
sub
decl
lods
jae
push
fldcw
mov
jnp
in
bound
jecxz
out
aad
ljmp
dec
adc
bound
adc
les
jo
mov
inc
lods
fwait
loop
jg
jmp
jecxz
lret
leave
inc
lods
test
pop
pop
movsl
inc
inc
jns
add
lahf
push
les
imul
call
sbb
jle
xchg
lock
ljmp
fs
jnp
aam
test
mov
rcr
jne
lret
mov
seto
sbb
sub
sar
ljmp
push
fcom
mov
mov
xor
call
fistl
pop
pop
or
cmp
xchg
mov
add
lea
adc
call
cwtl
test
inc
jae
aas
adc
add
push
jp
pop
std
jbe,pn
pop
push
mov
xchg
and
enter
lret
shrb
sti
xchg
jnp
outsb
mov
addl
cmp
mov
cmp
out
fisttpl
data16
cmpsl
imul
xor
mov
scas
dec
jmp
ljmp
stc
dec
movb
das
add
mov
pop
pop
lea
call
js,pt
adc
lcall
sti
hlt
jae
add
xchg
in
insl
aam
mov
mov
xchg
stos
or
test
xchg
ret
xor
jne
call
leave
clc
pushf
stc
pop
cwtl
adc
inc
xchg
roll
mov
jecxz
dec
add
sbbl
js
xchg
decl
rcr
aas
insb
and
retw
mov
ljmp
stos
insb
push
shrl
les
nop
add
sbbb
scas
add
loope
mov
push
adc
cmp
push
pop
add
loop
xor
dec
mov
pusha
xchg
lock
inc
and
scas
dec
mov
sbb
ljmp
push
add
sub
sbb
in
or
sbb
inc
pop
xchg
ljmp
out
leave
sub
mull
mov
jl
js
adc
push
cmc
jg
inc
inc
mov
mov
mov
adc
mov
enter
mov
mov
das
mov
aam
mov
repz
sub
aad
xchg
lcall
cmc
sti
fists
fadd
scas
pop
lods
xchg
mov
movsl
stos
pushf
cli
mov
cmp
outsl
loope
mov
test
inc
lret
inc
rclb
out
push
aas
sbb
or
mov
dec
push
pop
stos
jmp
jnp
mov
aas
call
mov
push
mov
nop
orb
inc
sbb
pop
push
ds
cltd
out
mov
push
sub
hlt
call
push
cltd
mov
sbb
jl
insl
ja
push
mov
jmp
push
nop
lcall
adcb
xchg
dec
sub
add
popf
mov
adc
rorl
push
add
js
and
and
push
mov
or
or
mov
xor
sub
ljmp
scas
ljmp
int
std
mov
out
shll
daa
lret
xchg
push
mov
jg
fadds
call
into
loop
test
aam
dec
cs
xchg
scas
push
repz
dec
js
popa
stc
outsl
sub
sbb
jg
and
adc
popa
ljmp
fimull
in
push
hlt
in
jne
outsl
adc
incl
stos
or
add
jns
xor
xchg
data16
outsl
out
out
stos
jmp
xchg
int
cmp
mov
sbb
mov
popa
inc
test
push
cmp
cs
fsubs
lds
cmp
and
fidivrl
leave
jmp
sub
aaa
push
sub
dec
rol
aad
out
pop
ret
decl
bound
dec
sahf
inc
sub
orps
push
aad
lahf
cmp
sbb
test
jp
loope
arpl
lret
xor
flds
cmpsl
push
out
scas
outsb
leave
xor
pusha
enter
pop
out
es
mov
jmp
sub
dec
int3
int
mov
out
lahf
push
add
xchg
fsubs
adc
scas
js
xchg
das
js
add
inc
int3
inc
je
subb
fsubs
push
mov
rcl
jno
adc
ss
test
mov
rclb
mov
je
push
icebp
sbb
dec
and
shll
jecxz
gs
dec
xchg
jne
dec
push
decl
lcall
mov
addr16
out
test
cs
mov
or
sub
loop
pop
in
xor
xchg
cmp
mov
sub
aad
ljmp
loopne
decl
cmpb
hlt
stos
pop
mov
sbb
pushf
lea
jne
int
icebp
inc
add
mov
sub
push
push
jae
imul
fwait
cmc
insl
lock
cmpsb
movsb
jbe
jb
std
je
pushl
mov
into
scas
pop
mov
shl
xlat
jge
out
repz
push
mov
lcall
add
in
inc
dec
int3
xchg
sbb
jae
sbb
xchg
cli
idivb
xchg
add
out
add
jmp
addl
sbb
leave
lock
lcall
dec
imul
inc
add
sbb
jnp
jne
xor
scas
push
mov
and
mov
subps
sub
mov
repnz
sub
cmp
jmp
popf
dec
mov
cltd
xor
add
mov
fcomip
pushl
inc
mov
jns
outsl
add
cs
mov
push
adc
cmp
jmp
in
dec
jmp
pop
ret
imul
imul
jl
aaa
pop
mov
mov
ljmp
addl
jg
mov
xchg
pop
hlt
sub
repz
push
pushf
rcrb
and
out
movsl
popf
dec
filds
js
out
mov
push
pop
and
ja
push
jmp
xchg
pop
iret
xor
or
in
stos
sbb
pop
mov
adc
mov
lock
jno
out
out
xor
push
or
jmp
decl
push
cltd
mov
aam
hlt
sub
je
sbb
sub
adc
push
xlat
sahf
mov
ljmp
lock
enter
pushf
iret
ds
rolb
repz
mov
cmc
mov
cld
inc
cmp
inc
repz
jge
sub
out
jg
sbb
out
push
pushf
int
icebp
frstor
repz
pop
pop
pop
lret
or
mov
testb
sbb
cmp
xchg
dec
jl
inc
ret
xchg
in
push
in
sti
pop
lahf
lods
mov
xchg
daa
outsl
sbb
pushl
add
ja
test
ss
loopne
cltd
sub
cmp
pop
ljmp
call
push
fs
jo
pop
fmull
adc
mov
mov
fnstsw
cwtl
mov
mov
sahf
xor
fistl
sahf
jg
and
add
ds
dec
insl
or
cmpl
add
fldcw
and
fldt
jmp
stos
and
cmp
stos
cltd
lods
divl
mov
adc
cltd
jae
inc
scas
xchg
dec
daa
insl
cld
decl
fucomp
add
in
cmp
adc
inc
jl,pt
test
fbld
and
scas
in
fnsave
mov
insb
jle
hlt
inc
lcall
pop
dec
dec
push
nop
sbb
ror
imul
out
jno
decl
inc
pop
mov
inc
mov
xor
cs
ror
jae
jge
push
adc
and
jns
sbb
cmp
lcall
dec
test
or
push
pop
test
dec
xchg
sbb
enter
or
ljmp
and
ret
test
pop
cld
jmp
sbb
lcall
outsb
in
fisubs
and
sti
xor
pop
insb
and
cmp
adc
gs
fnsave
jge
dec
repnz
iret
fwait
test
pop
les
inc
icebp
sbb
jp
mov
sti
and
dec
in
pop
pushf
and
mov
sbb
std
int
mov
es
sbb
sbb
mov
ror
pop
dec
ficomps
incl
out
lock
mov
paddsb
and
loop
push
inc
push
dec
scas
aam
xor
outsl
push
hlt
das
xchg
push
inc
stos
add
mov
test
mov
xor
dec
std
mov
call
mov
int
sub
pushl
movsb
or
loopne
xchg
shll
pop
ljmp
mov
call
xor
std
pop
mov
loopne
jg
xchg
pop
loop
rorb
push
sahf
data16
mov
sarl
ss
loopne
fistpl
in
mov
mov
ret
incl
gs
or
in
inc
fbstp
pop
int
imul
call
mov
out
mov
push
out
add
je
mov
into
pop
test
jg
and
cmp
stc
add
inc
dec
xchg
outsb
cmp
jmp
scas
lods
fiadds
jecxz
mov
popa
icebp
faddl
xor
iret
pushf
xchg
movsb
mov
ljmp
popa
movsb
xor
xlat
xchg
xchg
add
add
dec
stos
sahf
addr16
imul
call
jbe
in
ljmp
cmp
sbb
das
pop
push
ds
adc
icebp
xchg
xor
ljmp
pusha
fnstcw
out
data16
xor
or
pop
ret
jl
lret
xor
ljmp
daa
pop
mov
push
iret
xor
pusha
mov
or
xor
call
push
andb
in
cwtl
in
mov
iret
cmc
int
mov
and
cmp
lcall
enter
push
movsl
xor
push
push
pop
inc
out
subb
ret
pop
daa
outsb
fimuls
pushf
out
cli
push
movb
fstl
in
arpl
aad
jns
es
sbb
call
xor
cmp
into
sub
fistl
sbb
pop
lret
lret
ficoml
imul
leave
movsl
cmc
std
fdivs
push
inc
mov
inc
sbb
jns
fists
push
aad
pop
inc
ljmp
jmp
or
and
jle
insl
or
shll
mov
fiadds
pop
sub
pop
mov
or
sub
cmp
xchg
push
mov
pop
inc
rclb
push
jmp
dec
cld
fcom
mov
aas
leave
mov
enter
sar
ljmp
int3
repz
cmp
fwait
lret
cmp
ror
xor
mov
pop
mov
and
xor
loop
and
rcl
inc
fnstsw
adc
addr16
jbe
dec
outsl
mov
jb
push
data16
sahf
jg
and
jo
aad
cwtl
and
sub
add
call
sbb
add
ljmp
ss
ficompl
jae
lock
xchg
jge
inc
inc
sub
sti
pusha
pop
add
lcall
enter
pop
xor
stc
decl
inc
out
ss
and
jns
call
or
xor
dec
inc
leave
xlat
push
jg
jmp
sbb
sbb
leave
shll
jmp
jne
mov
cs
adc
lcall
incl
fmull
repnz
daa
fistps
add
in
lods
xor
inc
push
ja
lcall
and
mov
xchg
and
out
std
das
lea
sbb
xor
ljmp
aad
xchg
cmp
jb
or
test
cmpsl
sub
mov
mov
push
aam
popf
adc
mov
mov
xchg
mov
pop
xor
mov
cltd
fwait
jg
mov
arpl
aas
outsb
inc
insb
inc
out
clc
xchg
add
lds
fucom
arpl
xchg
cmp
jp
call
jg
pushl
mov
xchg
sti
aas
fimuls
clc
jne
scas
and
loopne
ds
lcall
mov
pop
or
test
pop
lret
sahf
cwtl
aad
mov
sbb
loopne
xchg
or
sar
call
jmp
fisubrl
dec
jnp
mov
jns
std
call
sbb
pop
and
sahf
xor
dec
iret
inc
test
pop
mov
or
xor
nop
pop
loope
push
cmp
lahf
mov
dec
in
mov
scas
inc
fisttps
pushl
cld
xchg
fs
in
inc
jl
mov
imul
out
pop
cmp
mov
mov
lahf
lea
mov
repz
ja
fisubs
adc
add
add
incl
aas
ss
popw
sbb
in
and
hlt
jo
mov
or
negl
ret
mov
out
cmp
or
xor
inc
std
lea
jo
xor
out
subb
sti
std
sbb
aas
test
cmpb
mov
push
in
lahf
subb
pusha
fsubrp
cmp
xchg
sub
push
test
add
adc
mov
xchg
iret
or
sti
adc
inc
outsb
dec
mov
gs
decl
or
test
loop
pop
pop
rorl
fisubrs
repnz
inc
adc
cmpb
fwait
loopne
repz
stos
mov
insb
fists
xchg
dec
bound
push
dec
nop
movsb
mov
dec
push
push
and
dec
or
push
adc
fdivrp
push
in
outsl
add
push
sub
lret
jl
xor
mov
decl
adc
adc
aad
dec
testl
dec
add
mov
cmp
jmp
stos
push
outsb
fucomi
and
push
adc
fistpl
stc
vmovsldup
mov
mov
jae
pop
dec
mov
inc
xor
dec
movsb
cs
mov
cltd
decl
jle
adc
or
sbb
cmp
es
jns
sbb
out
scas
ljmp
shll
jb
call
xchg
shlb
jmp
hlt
bound
shl
js
inc
fidivrs
enter
test
out
jl
pushl
out
jb
cmc
xor
xlat
lahf
loopne
inc
jno
cmpsl
popa
xchg
test
push
leave
or
lcall
mov
push
pop
xchg
imul
js
pop
lock
sahf
inc
add
sub
push
mov
incl
adc
es
jmp
cmp
mov
and
xlat
fs
and
call
cmpsl
test
stos
stos
addr16
jo
cmp
add
out
inc
dec
inc
lods
mov
sub
ljmp
enter
out
inc
je
add
repnz
pop
mov
push
pop
rclb
mov
inc
das
push
sti
mov
fcoml
push
cld
outsl
pop
sbb
call
push
mov
adcl
imul
leave
push
arpl
cmc
roll
decl
push
lret
dec
stos
test
cld
or
push
repz
mov
loop
mov
call
mov
jo
pop
popf
mov
cld
mov
jnp
mov
xor
dec
xor
sbb
xlat
sbb
fcomip
add
dec
insb
stc
mov
cmp
ljmp
inc
or
inc
sbb
jmp
xlat
movsb
mov
ljmp
xchg
insl
cmp
jle
xor
sub
push
add
ljmp
out
fadd
xor
lock
fcomi
adc
mov
in
mov
xchg
mov
mov
pushl
xchg
xchg
mov
cmpsl
add
arpl
cltd
cld
cmp
dec
jp
clc
cltd
dec
testl
jle
xchg
mov
stos
cmp
dec
push
push
and
cmc
dec
dec
cld
std
xchg
fstl
cmp
pop
jb
and
lcall
lods
adc
jb
pop
fstps
mov
fnsave
sbbl
sbbl
add
das
ss
sahf
jnp
inc
cmp
imul
mov
or
push
and
rolb
push
cmc
in
out
jmp
repnz
mov
mov
insl
repnz
mov
in
mov
ja
decl
xor
jno
ficomps
jne
loope
pop
cmp
inc
cmp
ds
call
movsl
push
jl
in
inc
out
ret
repz
bound
or
lcall
mov
popa
int3
push
data16
cmpsb
xor
jp,pn
dec
stc
mov
jg
pushl
inc
jp
stos
je
and
movsl
xchg
stos
fisubl
mov
cwtl
cmpsl
adc
clc
clc
cmp
jb
or
aaa
dec
stc
mov
mov
xchg
cli
pushf
std
mov
sbb
ljmp
mov
js
push
xchg
jb
idiv
add
decl
gs
insl
test
sti
fcomps
bound
loop
lret
dec
cld
lahf
pop
sub
jmp
cltd
sti
loop
shlb
cmp
mov
dec
pop
frstor
outsl
insl
mov
aam
loopne
cmp
or
icebp
jns
call
ja
mov
push
sbb
mov
pop
add
and
xchg
xor
lods
leave
movsl
bound
mov
bnd
lcall
addr16
mov
push
rorb
dec
femms
js
movsb
add
outsl
dec
ljmp
dec
mov
adc
pop
adc
iret
inc
insl
cmpsb
adcl
enter
pushl
and
outsl
fucomp
jge
add
lods
cld
xor
dec
cltd
cmc
fnstsw
orl
inc
xor
out
inc
lock
pop
arpl
mov
sti
inc
cmpb
pop
cli
je
adc
adc
aam
adc
cld
cmp
mov
stc
push
ljmp
and
inc
jecxz
js
push
iret
daa
inc
idiv
xor
dec
pushf
sbb
call
repnz
incl
xorb
js
lahf
rol
and
lcall
mov
fnstcw
int3
dec
adc
jmp
lcall
add
loopne
fs
and
or
std
bnd
incl
cld
cwtl
je
mov
sti
inc
push
jno
jnp
mov
lods
push
mov
fdivs
xor
jbe
imul
lods
icebp
ret
addr16
test
inc
movsb
xor
ljmp
cli
das
mov
ljmp
xchg
call
ficomps
push
daa
outsb
sbb
jne
cmpb
or
test
jne
addr16
insl
pop
mov
or
out
mov
mov
loop
jp
pop
cld
pushl
hlt
xor
xor
loop
imul
movb
popf
push
dec
cmp
pop
movl
popf
test
jg
sbb
repz
insb
and
jns
aaa
fcos
jmp
repnz
out
test
jae
ss
add
mov
out
jmp
adc
in
xorl
scas
sbb
ss
cmp
inc
push
dec
or
out
mov
adc
xor
or
fnsave
pop
lret
fucom
jmp
inc
sbb
enter
aam
bound
mov
loopne,pn
sbb
fcmovnu
mov
and
aam
mov
mov
hlt
in
out
xorl
lcall
gs
and
in
jge
mov
sbb
dec
xchg
jns
pop
xchg
addl
xchg
ljmp
xlat
pusha
insl
push
fucomi
adc
add
ljmp
aad
in
fsubs
and
inc
ljmp
popa
test
dec
mov
incl
xchg
cmp
inc
popf
pushf
adc
mov
jno
lret
cmc
xchg
jbe
mov
lock
decl
mov
dec
xchg
dec
cmp
fs
dec
sub
mov
fucomip
and
push
jae
push
ret
or
orb
and
and
sbb
pop
sbb
mov
mov
jg
mov
push
push
mov
call
cld
icebp
cld
jl
ret
movsl
push
into
popa
stc
inc
xchg
mov
lahf
sub
icebp
negl
clc
mov
iret
in
or
jnp
inc
loop
push
jns
pop
mov
pusha
sbbl
scas
mov
mov
loopne
insb
jge
mov
popf
fs
call
mov
insb
in
mov
out
mov
or
ljmp
xchg
push
fldl
imulb
or
hlt
pop
xor
jp
cli
xor
xchg
sbb
andl
pushl
cmpsl
in
test
mov
out
jns
add
cmp
jg
inc
test
sub
add
movsl
jg
repnz
mov
jle
push
mov
jae
sub
mov
jo
jle
and
lcall
jmp
ret
hlt
inc
inc
shlb
mov
data16
jmp
push
dec
dec
nop
mov
scas
lods
mov
sbb
inc
inc
fcomip
ljmp
pop
ds
cmc
mov
fistl
andl
jge
shll
mov
lods
jl
sub
addb
loop
mov
jmp
test
movsb
pop
lods
into
por
pop
test
pop
mov
adc
xchg
dec
add
decl
std
push
push
repz
ret
add
add
xchg
mov
mov
call
sarl
aad
jnp
jnp
cltd
or
xor
mov
sub
pushf
lcall
and
mov
pop
int3
xchg
jns
cmp
jg
cld
sub
ret
jo
adc
dec
mull
jne
or
mov
clc
push
int
test
mov
aad
addr16
adc
icebp
jg
outsb
outsl
dec
cmp
cmpsb
inc
test
jb
imul
lcall
imul
fadds
xlat
add
daa
gs
push
rorb
aam
xchg
push
jmp
mov
dec
jp
call
lea
mov
push
xor
dec
pop
add
dec
or
ds
aad
cli
pushl
push
push
gs
test
shlb
aaa
fsubrp
shlb
call
loop
xor
sub
mov
lods
pop
and
pop
fcom
lcall
fwait
lcall
stos
in
sbb
out
cld
dec
sti
in
adc
rcr
jg
hlt
call
mov
pop
sub
push
sbb
xchg
insb
mov
mov
adc
daa
sbb
cmovb
call
std
mov
negb
cli
leave
ret
push
filds
inc
mov
mov
in
mov
pushf
std
mov
mov
sub
fldcw
adc
ljmp
in
sub
adc
ret
xor
sub
pop
mov
loopne
push
mov
adcb
inc
popf
mov
ljmp
xchg
cmp
jl
aas
mov
incl
cmp
pop
aad
and
nop
lods
dec
and
clc
mov
cmp
adc
pusha
jle
jmp
and
movsb
xchg
push
mov
ljmp
dec
mov
mov
push
es
push
and
inc
out
mov
test
push
mov
les
ljmp
out
mov
adc
mov
data16
jg
sbb
push
and
jmp
pushf
data16
inc
mov
xchg
rcr
xchg
popf
xchg
lock
push
sbb
mov
jmp
sbb
jg
pop
std
es
dec
sub
fistpll
inc
in
pop
add
icebp
mov
or
fcmove
aad
test
adc
sub
dec
repnz
fdiv
fdivl
rolb
xor
or
push
div
add
mov
popa
fdivrs
lock
cli
add
push
outsb
jmp
cmp
xor
pop
add
mov
scas
aam
jmp
mov
xchg
jo
mov
add
xchg
sub
dec
or
iret
inc
sbb
fisttps
cmp
outsl
mov
sbb
jns
in
int3
sbb
rorb
ljmp
cli
cmp
in
cmc
cltd
lcall
ja
mov
or
lret
decl
fstpt
lret
push
and
sbb
mov
test
pop
incl
xor
inc
adc
lret
adc
addr16
insb
mov
mov
fdivr
pushl
cld
lcall
shl
stos
push
xchg
sbb
mov
mov
xchg
incl
jno
js
mul
adc
pop
cmpsb
push
repnz
int3
addr16
cltd
xor
lret
mov
ud0
lods
mov
addr16
mov
xor
call
mov
add
test
inc
test
jmp
cmp
out
xchg
dec
jno
fptan
mov
jp
push
arpl
lock
fnstsw
xchg
ds
xor
lds
jno
loop
add
jmp
pushl
mov
sub
cmpsl
enter
cltd
loope
arpl
mov
out
decl
inc
into
jnp
xor
dec
dec
mov
pop
push
pop
inc
mov
mov
imull
lcall
adc
test
lret
push
repz
mov
mov
pop
sbbb
jmp
js
pushf
sub
out
mov
xor
xchg
and
outsb
loop
push
call
lahf
adc
lcall
mov
cmpsl
stc
inc
lods
fcomps
ljmp
clc
mov
sbb
push
jo
sbb
enter
jbe
pop
lret
jl
and
nop
fs
jge
mov
inc
addr16
and
jg
popf
inc
cmp
outsl
or
daa
aaa
mov
prefetcht1
fcomip
call
mov
cmpsb
fisttpll
cld
cmpsb
dec
pop
sbbb
fwait
mov
or
iret
and
mov
fnstenv
jbe
out
mov
out
push
push
pop
icebp
jmp
pusha
mov
push
xchg
lea
push
pop
mov
sbbb
xor
pop
cmp
imul
push
dec
nop
ret
aas
cmp
out
dec
loop
imull
and
xchg
jl
insb
out
clc
loop
insl
add
lods
jg
ret
xor
dec
clc
pop
inc
mov
decl
xchg
cmp
lret
dec
xchg
and
mov
fisubs
add
adc
decl
mov
cmp
out
scas
sub
add
aad
loopne
fcomps
pop
xchg
inc
sub
incb
loopne
sub
es
sbb
call
mov
sub
mov
inc
inc
shrb
scas
jns
inc
fsubs
pushl
test
lock
jl
push
and
fisttpll
push
push
bound
cmp
scas
cltd
cmp
ljmp
cmp
mov
std
and
bound
lods
lea
enter
call
mov
push
ds
loope
cmp
cmc
dec
push
aas
stos
sti
daa
repz
dec
inc
mov
inc
fstpt
lahf
outsb
sub
fcomp
push
mov
mov
sub
xorb
or
call
insl
cld
jnp
loop
jae
ficoml
pop
mov
dec
dec
je
lret
inc
mov
xor
dec
data16
mov
jno
in
xchg
repnz
lods
mov
or
jmp
popf
scas
jg
test
add
push
sub
lcall
jecxz
cmpb
fmuls
xchg
daa
fcomps
pop
push
adc
repz
incl
mov
jge
test
and
cmp
sti
imul
cs
and
dec
xchg
inc
movsb
loopne
push
cmp
push
jb
lods
mov
xor
stos
cmp
inc
loop
out
sub
fwait
addl
lcall
cmp
push
sbb
addr16
stos
mov
ljmp
mov
rcll
gs
xchg
stc
or
xor
and
inc
or
add
fbstp
pop
cwtl
in
decl
jo
mov
pop
fdivr
jp
adc
sbb
call
cmp
sbb
add
pop
or
or
jle
fwait
lock
xlat
inc
jmp
and
sbb
ljmp
xorb
test
jo
les
aaa
test
push
xor
adc
ds
add
mov
mov
stos
mov
xor
adc
decl
mov
dec
cmpsb
lahf
inc
repz
cmp
sub
scas
push
mov
gs
push
inc
add
fldt
mov
or
xchg
pushf
add
js
test
repnz
jmp
aas
xor
pop
clc
sbb
aaa
cmpsb
xor
lcall
jecxz
dec
xor
dec
rolb
push
cld
ljmp
xchg
mov
subb
add
fstpt
mov
or
out
and
in
lcall
mov
pop
sbbl
pop
sbb
js
cltd
cld
movsb
stos
inc
xchg
and
repnz
decl
or
orl
jne
leave
and
inc
sbb
mov
add
fisubs
andl
bound
add
xor
inc
pop
mov
jmp
loope
push
pop
gs
mov
jp
sub
mov
lret
ljmp
ja
xorb
cmc
lods
rcl
mov
add
in
cmc
stos
sbb
adc
ljmp
jp
aam
inc
gs
fsubl
cwtl
pop
test
in
jg
jl
jae
sarb
mov
cmp
mov
pop
xor
jmp
rcrb
mov
mov
cli
pushf
pop
add
lods
pop
dec
pop
les
out
movsl
cmp
ljmp
cli
rorl
mov
fsts
into
mov
inc
cmpsl
jle
pushl
mov
pop
cmpsb
adc
jl
jge
jp
mov
sbb
jecxz
add
push
incl
xor
test
xor
xchg
sub
jno
ret
adc
jmp
ret
add
jle
dec
mov
lcall
fs
xor
shlb
shrb
filds
ds
pop
add
mov
sbb
movsb
inc
cmp
mov
add
mov
xlat
rolb
jmp
add
sti
ss
push
fimull
xchg
jb
xor
xchg
sahf
int3
orb
jo
sub
jle
jo
ss
jnp
in
outsl
dec
dec
pop
dec
and
into
push
jp
frstor
fs
jp
mov
push
sub
mov
pop
mov
ljmp
adc
mov
push
push
jbe
dec
mov
es
aaa
mov
xor
lcall
dec
mov
jecxz
mov
je
cmp
pop
xchg
mov
xor
and
call
rcl
inc
stos
ret
insl
loope
fiaddl
or
xor
shrl
xlat
mov
nop
scas
and
mov
xor
out
insb
sub
push
decl
popa
and
jle
rcrb
shlb
mov
jl
into
enter
xchg
mov
mov
cmp
cwtl
xor
jg
dec
mov
call
movsl
sbbb
inc
shll
cmp
dec
push
das
push
jl
stc
pop
inc
cmp
adc
pop
pop
mov
cmpsl
xchg
and
jmp
fs
andb
mov
adc
aam
dec
test
mov
cmp
clc
jmp
imul
dec
inc
xchg
loopne
mov
lea
cmc
fldt
inc
fisubl
mov
dec
and
xchg
leave
push
jbe
rcrl
jb
push
call
hlt
fcoms
sub
scas
mov
xchg
fs
mov
shrb
inc
mov
sbb
call
push
mov
ret
lahf
mov
lret
mov
out
loope
and
iret
pusha
mov
clc
jmp
fbstp
imul
fbld
cwtl
and
rorb
mov
test
incl
leave
and
pop
dec
fmull
and
xchg
test
add
xor
lcall
or
in
leave
push
xchg
aas
jbe
jg
cmpsb
lcall
pop
push
stc
in
fs
out
sbb
mov
decl
or
mov
mov
ret
dec
cmpsb
icebp
popa
outsb
das
nop
pop
push
out
sbb
xchg
sbb
jmp
cmp
mov
loopne
lods
push
adc
adcb
rcll
add
jg
or
xor
xchg
std
aaa
insl
pop
push
xchg
ret
clc
xchg
mov
cmc
sti
call
cmpsb
cli
not
insl
inc
mov
inc
les
adc
jne
dec
out
shll
fistpl
popf
in
insb
leave
lea
xchg
fwait
cmpsb
push
repnz
addr16
out
add
decl
movsb
lret
cltd
subb
jne
or
fxam
jmp
insb
push
cld
jmp
sbb
pop
mov
push
mov
mov
clc
jle
xor
xor
into
movsb
loop
pusha
add
xchg
icebp
lcall
dec
popa
fcmovu
pop
pop
ja
fucomp
divl
insb
cltd
push
data16
decl
xchg
push
inc
add
adc
push
in
and
and
and
hlt
out
loope
incl
call
daa
push
imul
pushf
mov
jnp
push
jmp
sbb
jl
pop
faddl
adc
scas
cmp
mov
cmc
pop
jb
fildll
fwait
add
mov
cli
push
push
dec
and
pop
jge
out
inc
incl
pop
lcall
cs
inc
imul
mov
push
in
push
lods
jp
decl
decl
fnsetpm(287
outsl
lock
loop
repnz
dec
push
jb
dec
cmp
icebp
and
lcall
push
sbb
aas
add
pop
loope
sbb
insl
idivb
and
stos
stos
jmp
out
cmp
pop
dec
ss
pusha
pop
mov
ljmp
push
lret
call
xchg
dec
cmpsb
rolb
movsb
push
jnp
inc
aaa
out
push
pop
clc
lcall
addr16
mov
out
mov
test
add
aam
fdivrp
ljmp
sbb
mov
mov
movsb
mov
enter
jp
dec
adc
shl
cmpsb
sbb
jecxz
call
cmp
imul
push
out
or
out
imul
cmpb
out
jp
xchg
xchg
sbb
bound
dec
pushf
cmp
sbb
decl
iret
xchg
jo
testb
xor
ret
xchg
mov
mov
insb
dec
fwait
pop
sbb
ljmp
fidivrs
inc
fcoms
push
xchg
cld
lret
ret
mov
rol
mov
inc
lock
cmp
daa
mov
cli
mov
fcoml
add
cmp
call
int3
dec
jne
jl
dec
push
inc
mov
or
scas
dec
cltd
push
mov
lcall
mov
bound
inc
adc
xchg
sub
sbb
cld
ljmp
pop
aad
test
sahf
sub
mov
push
ret
repz
test
jbe
incl
rolb
rcl
dec
movsl
jbe
out
insb
mov
add
cmp
cmpsl
push
pop
orl
ret
pushl
enter
movsb
stos
in
sarl
mov
das
cmp
fdivr
adc
xlat
push
cmp
aaa
inc
push
sub
pop
nop
lock
cltd
out
sbb
int3
outsl
add
les
int3
sub
jno
jns
add
imul
mov
pop
push
dec
mov
outsl
add
jne
incl
push
pop
dec
lret
addr16
ret
cld
jge
mov
decl
sbb
add
daa
ljmp
enter
push
iret
xor
int3
nop
dec
ljmp
lods
jecxz
lret
mov
movsl
mov
or
negb
lcall
mov
mov
incb
aam
sbb
mov
adc
push
xchg
imul
and
mov
sbb
cli
adc
sbb
jg
inc
sbb
std
sub
movsb
push
mov
fld
out
pop
cmp
pop
lock
or
dec
and
ret
or
cmp
sbb
mov
test
insl
add
aas
jg
in
xor
push
jnp
in
test
and
cmpsb
mov
push
cld
pop
or
clc
dec
insl
inc
icebp
sbb
fwait
or
mov
pushl
add
jae
inc
mov
lds
mov
cmp
adc
stc
outsl
push
popa
cmp
inc
sbb
fldcw
mov
ret
dec
out
popf
shll
fnstenv
jnp
sar
decl
cmpl
push
adc
adc
loopne
dec
mov
adc
iret
sahf
jecxz
jp
call
mov
loopne
mov
addr16
lret
int3
jl
fst
jg
test
mov
fmuls
mov
jbe
out
xchg
jns
lds
loop
sbb
mov
flds
cld
jg
popa
out
mov
addr16
ja
addr16
mov
outsl
cmc
mov
push
out
jg
mov
mov
lahf
popa
mov
push
mov
jns
xor
ljmp
stos
cmp
adc
stos
or
movsb
and
adc
fadds
inc
cmp
jle
call
jno
pandn
adc
add
cmp
stos
jg
aaa
popa
push
adc
sbb
repnz
push
jmp
sub
imul
jne
pop
les
push
lds
mov
jg
dec
loopne
xchg
push
popf
loop
ret
pop
shll
push
dec
and
notb
das
or
add
jns
pop
xchg
xchg
and
dec
test
adc
jg
mov
mov
in
mov
sar
out
not
pop
inc
jle
jno
stc
sahf
testl
xchg
or
dec
sbb
fcomip
jmp
stos
mov
xorl
mov
adc
push
jle
mov
imul
stc
pop
sub
mov
xor
cmc
pop
enter
jne
push
aam
mov
cmp
jmp
lds
andb
icebp
loope
and
push
aam
lcall
mov
inc
sub
in
sbb
sbb
and
pop
loope
xchg
fdivs
or
adc
loopne
or
movsb
data16
outsb
jo,pn
negb
pusha
inc
cwtl
pop
dec
out
mov
cli
or
pusha
fwait
add
dec
xchg
into
insb
push
aas
lcall
pushf
xlat
cltd
and
mov
xchg
nop
lahf
arpl
pop
sub
and
cmp
fcomip
or
or
pop
outsb
ds
pop
jne
negl
rorl
call
std
inc
push
nop
mov
popf
imul
cmc
pop
push
push
pop
enter
push
call
call
inc
lahf
jecxz
mov
dec
pop
pop
push
inc
out
xor
cmpsb
sarb
ror
pop
mov
cwtl
aad
push
or
push
pop
call
inc
stos
les
test
cli
sub
call
xor
stos
out
shld
mov
in
imul
push
test
int3
sub
fabs
loop
sub
mov
cmp
xchg
lret
loope
outsl
ljmp
call
aad
ds
xchg
popf
fsubl
fdivrl
push
iret
addl
in
pushl
push
fsubs
push
ss
cwtl
shll
sbb
mov
loopne
into
add
call
repz
pop
jns
icebp
fistps
mov
js
mov
xchg
dec
pushl
or
jecxz
test
stc
and
add
sub
aad
jb
jge
addr16
pushl
in
sub
in
cmp
mov
xor
sub
sub
jg
cmp
inc
shll
and
sub
int
movsb
pop
mov
icebp
dec
insl
dec
sbb
and
mov
call
test
adc
into
pop
mov
inc
fcompl
mov
xor
dec
push
jb
decl
add
mov
cmp
lea
inc
cmpsl
mov
add
les
cmp
ja
cmp
xor
test
mov
fmuls
andl
sahf
jmp
jmp
ja
lahf
cmc
push
sti
cld
dec
dec
cli
dec
jge
fadds
repnz
adc
leave
pushl
push
or
fldenv
loopne
fdivrs
hlt
dec
sub
lret
adc
mov
jae
jecxz
dec
std
jl
inc
dec
bound
into
shll
movsb
sub
and
mov
repnz
data16
sub
inc
int3
lcall
call
or
jnp
cmp
pushf
xchg
test
mov
enter
aaa
std
xorb
jae
rorb
lea
inc
ds
cmpsb
jecxz
pop
aad
daa
rorb
inc
sarb
mov
jmp
dec
outsb
jmp
pop
mov
push
ss
mov
or
xchg
fisubrl
mov
insb
in
das
xor
decl
test
aaa
jns
dec
sarb
pop
stos
push
or
call
sub
dec
mov
cmp
nop
or
cmp
jp
adc
pushl
and
mov
stc
push
mov
sub
pop
or
lea
out
and
insb
dec
es
push
inc
and
fmulp
loope
push
and
mov
lcall
inc
lods
fwait
push
lahf
into
repnz
mov
sti
out
clc
ljmp
lea
orl
incl
test
pop
push
movsl
ficoms
stos
jae
lea
loopne
test
mov
mov
xlat
dec
shll
orl
lcall
in
in
stos
jge
sbb
je
cmp
or
cmpsl
mov
mov
xor
stos
icebp
adc
fbld
xchg
dec
mov
pop
jmp
xor
loopne
fdivr
adcl
push
cmp
and
push
mov
sub
movsl
icebp
rolb
jg
fwait
jmp
stc
inc
xchg
xchg
sbb
clc
loop
or
cmp
inc
ja
mov
xor
cmpsb
aas
mov
jbe
push
ficoms
xor
imul
cmovle
push
xchg
inc
and
fstp
add
sub
nop
xchg
shl
push
xchg
subb
jbe
jb
push
mov
sub
aad
dec
fs
aad
fsub
pop
or
jmp
and
push
pop
rorl
and
or
jmp
adcl
cwtl
lods
sbb
xor
mov
loopne
mov
cmp
lahf
sub
xor
or
arpl
jg
outsl
mov
movl
jae
leave
jmp
call
out
pop
mul
xor
dec
lahf
mov
popa
lret
cmp
cwtl
movsb
lahf
sbb
ljmp
test
cmc
lcall
scas
add
mov
loope
mov
nop
inc
mov
lock
sahf
loope
mov
sar
sbb
or
xchg
or
mov
mov
ffreep
jns
lcall
cmpsl
in
imul
inc
cli
pop
or
cvtdq2ps
orb
pop
je
insb
stc
je
inc
leave
out
mov
out
icebp
je
sub
sub
scas
mov
pop
loop
call
std
pushl
jnp
mul
xor
push
fs
mov
cmp
push
mov
sbb
mov
inc
push
outsl
add
mov
pop
cmp
cmp
jp
mov
adc
xchg
xchg
adc
xor
notb
rcrl
cmc
cmp
negb
adcb
out
or
adc
adc
lcall
in
jne
mov
adc
lods
xchg
add
pop
pop
push
out
push
cld
pushl
jb
pusha
mov
gs
or
test
imul
insl
hlt
in
les
mov
mov
adc
scas
pop
cli
adc
push
xor
movsl
dec
mov
call
xor
hlt
jecxz
and
cmp
lods
lods
js
imul
mov
fldl
outsb
jecxz
adc
cmp
es
call
cmp
in
push
dec
popf
outsl
sub
mov
push
push
inc
xchg
add
and
data16
mov
jmp
mov
shll
push
xchg
adcl
fstl
inc
sub
mov
xchg
lcall
nop
and
and
push
jle
clc
sbb
push
xor
xor
sbb
jmp
push
subl
jmp
xlat
xor
xor
mov
xor
loope
lcall
mov
test
lds
mov
push
mov
decl
in
lea
push
mov
push
jle
mov
pusha
ja
sbb
bound
imul
icebp
fldcw
and
jg
leave
xor
clc
jle
sarl
clc
adc
and
jecxz
sub
pop
movsl
ret
stc
inc
xor
jg
or
jns
xchg
loop
or
adc
push
push
mov
repz
xor
test
lret
sbb
push
add
ja
jae
sub
or
mov
xchg
jg
xor
sbb
mov
and
es
or
xchg
mov
pushl
decl
jnp
push
cmp
pop
sbb
jl
test
xor
clc
mov
add
dec
and
mov
add
call
cmp
bswap
fstpl
clc
outsb
or
or
mov
push
lret
ret
scas
jmp
pop
mov
insl
add
lret
cmp
push
and
call
pop
push
gs
mov
movsl
adc
add
xchg
xchg
mov
dec
fsubrp
aad
push
push
pop
mov
popf
dec
xor
xor
ljmp
rcl
or
stc
push
lea
jo
xchg
testl
mov
arpl
mov
jne
fiadds
and
and
fbstp
leave
je
loopne
enter
cmc
mov
mov
gs
jo
pop
test
mov
ret
dec
pop
xchg
sbbb
incl
xchg
pop
and
sub
lea
jl
push
sbb
jmp
jmp
jne
cmp
ljmp
dec
rcrb
aam
xor
in
jae
int
mov
mov
inc
sar
sti
or
push
pop
mov
mov
sbb
ds
icebp
sbb
sbb
mov
mov
inc
test
and
fcmovu
das
sub
mov
sbb
pop
js
inc
jb
adc
ficomps
lret
dec
cltd
adc
xor
dec
fadds
jg
decl
mov
stc
in
insb
fwait
out
negl
push
call
pop
push
dec
lods
adc
mov
aad
test
mov
ds
lcall
or
pop
movsl
popf
xor
int3
fldcw
sbb
dec
decl
mov
mov
stc
sahf
enter
pop
mov
jmp
mov
cmp
xchg
jmp
jae
push
xchg
adcl
rcl
sbb
jle
mov
mov
xlat
jb
ret
imul
cs
sbb
mov
jg
test
inc
ja
and
xchg
mov
incl
dec
add
in
jae
mov
pop
dec
or
inc
push
jae
sarb
pushl
arpl
xor
bound
mov
mov
jg
mov
pop
mov
les
mov
add
mov
xchg
outsl
sub
push
pop
inc
mov
push
or
lock
clc
popf
mov
push
and
pushl
push
jge
div
js
sti
incb
out
or
jbe
jbe
cmp
jmp
ss
add
dec
jb
mov
ficoms
xchg
fst
push
shlb
std
push
jmp
jmp
sti
in
lods
inc
and
sub
jbe
adc
add
lret
jmp
pop
test
ret
hlt
xor
popf
mov
xchg
mov
cmp
stos
lods
js
mov
lret
push
jmp
in
lret
pushf
std
mov
pop
cld
call
xor
pop
insl
jbe
mov
shll
sbb
sti
jle
aaa
aad
push
inc
dec
push
mov
rolb
lcall
repz
jae
fidivrs
jo
ss
push
jecxz
push
cltd
clc
add
pop
call
pop
test
fimuls
push
mov
inc
pop
sbb
pop
scas
xor
fisttpl
xchg
pop
incl
jl
mov
cwtl
mov
pushf
movsb
fwait
jl
jmp
cmpsb
cmpsb
out
xchg
js
jecxz
clc
orb
loop
lock
jg
or
dec
scas
mov
cld
sub
cld
sub
inc
mov
out
in
or
es
shlb
les
nop
int3
or
dec
push
nop
gs
sahf
sub
cmp
xor
incl
sbb
jnp
xor
cltd
nop
fdivr
jl
xchg
fs
ljmp
out
pop
or
pushf
xor
cmpsb
cmp
sub
sub
pop
dec
pusha
decl
mov
aad
jle
push
xor
lcall
pop
jecxz
mov
lock
jbe
mov
jns
leave
pushf
mov
mov
sbb
mov
mov
push
pop
sub
add
js
add
xor
pop
cmpsl
and
xchg
sub
cmp
pop
add
bound
into
jl
fbld
jmp
adc
jp
inc
stos
jle
push
sbb
ljmp
xchg
and
cmp
or
aaa
lret
add
std
mov
or
incl
push
ljmp
call
lea
pop
fprem1
mov
jg
inc
dec
stc
js
in
leave
inc
add
decl
test
sub
xor
stos
add
xor
and
inc
sub
sahf
jge
int
jmp
call
xor
cmp
insl
cli
xor
pop
cmp
clc
sbb
aas
arpl
lods
lods
pop
sub
cmpsl
pushl
xchg
nop
and
sbb
dec
test
pusha
xchg
inc
movsb
adc
sbb
incl
inc
lret
lret
ljmp
enter
jg
int
xchg
mov
decl
dec
addr16
ljmp
es
mov
adc
lcall
into
cltd
outsl
divb
mov
jbe
mov
sahf
adc
lret
mov
pop
xchg
push
mov
mov
sub
cmp
int3
adc
push
shl
lret
dec
insb
push
mov
aad
ja
fwait
or
mov
pop
pop
inc
jne
std
ljmp
mov
mov
test
imul
fistpl
ljmp
mov
not
and
add
push
push
pop
mov
xor
adc
enter
dec
mov
or
lcall
mov
data16
inc
cmp
test
sbb
sub
add
jmp
push
jl
fsubl
sub
push
and
cld
jmp
stos
xchg
je
add
loop
in
scas
fists
or
stos
cld
lods
addr16
lret
xchg
sbb
test
iret
clc
ret
cmp
iret
movsl
jl
pop
orb
pushl
rolb
sub
xlat
sti
mov
fmuls
fcomip
mov
cmp
ja
nop
icebp
or
outsb
rorl
ljmp
pushl
cld
jecxz
mov
pop
nop
mov
jns
sbb
jno
sub
pop
movsl
outsl
mov
decl
in
pop
xchg
jo
rolb
or
pop
jmp
test
cmp
movsl
xchg
lock
pushl
pop
jne
or
add
dec
pop
int
sbb
add
add
aad
add
push
and
add
cli
adc
push
pop
call
mov
and
cmp
cs
test
sbb
popa
add
ljmp
and
loope,pt
ja
fistl
shll
pop
lcall
aas
mov
dec
and
adc
jo
shrl
les
xor
incl
mov
jbe
cli
dec
or
cmp
dec
pusha
jb
imul
pushl
xchg
gs
cmp
push
adc
sub
out
add
or
pop
push
es
adc
ljmp
mov
inc
dec
mov
mov
mov
push
pop
data16
sar
pop
stos
pusha
sub
ljmp
or
inc
into
or
dec
incl
addr16
pop
or
pushf
mov
rcrl
pop
into
loope
add
cmp
aam
push
adc
and
mov
cmc
push
push
mov
jmp
push
sbb
sub
mov
in
mov
lcall
mov
ret
gs
stos
sub
lods
pop
adc
lds
gs
and
pop
scas
xchg
mov
nop
fcomip
not
outsb
xor
mov
sbb
dec
pushf
daa
inc
ss
sbb
rorb
out
ss
cs
inc
stos
fs
in
mov
sbb
shl
ss
push
jg
out
adc
lods
sub
xlat
push
sarb
sbb
lcall
gs
clc
jecxz
negb
int
sbb
sub
dec
dec
jb
lcall
incl
jle
inc
cmp
mov
and
mov
push
gs
push
test
nop
pop
addr16
jg
pushl
sbb
pop
mov
shlb
adc
mov
or
out
dec
jmp
clc
lret
sbb
ljmp
lock
daa
out
dec
mov
je
cmp
cli
shl
stc
pusha
push
jecxz
test
jno
xor
sarb
fs
sar
lea
scas
cmpsl
loope
vmread
incl
cld
mov
mov
lds
jecxz
out
sub
push
mov
gs
inc
inc
dec
dec
pop
dec
lods
filds
push
sub
lcall
jle
test
jae
andb
in
popa
push
add
imul
sbb
push
pop
movsl
cmpsb
mov
pushl
cmp
pop
aas
adc
int3
lods
mov
out
fwait
negb
ljmp
fs
roll
popf
ret
cltd
scas
mov
fs
dec
gs
scas
or
je
xor
test
jnp
mov
jl
inc
mov
or
bound
xor
out
rorb
and
incl
sbbb
push
or
and
ljmp
xchg
xor
or
sar
jg
cltd
orl
pop
fdivl
sub
test
xchg
mov
incl
std
add
gs
cmpl
inc
fstpl
pop
pushf
sub
jae
xrelease
ljmp
sub
push
scas
outsl
imul
adc
ljmp
add
add
mov
adc
mov
and
dec
mov
lds
push
inc
bound
lret
sub
fwait
rorl
arpl
rclb
pop
in
fbld
jmp
icebp
shrl
out
fs
mov
jo
or
mov
test
test
lds
xor
and
cmpsl
lea
cmp
xchg
and
les
cmp
call
xor
inc
lahf
push
push
lds
xchg
adc
out
inc
xchg
mov
or
mov
adc
sbbb
decl
lock
xchg
aad
fidivrl
pop
add
cs
push
mov
xor
ljmp
dec
mov
ljmp
stos
mov
mov
dec
enter
inc
mov
ljmp
testb
jb
fnstcw
fldl
mov
decl
xorb
sub
mov
pop
fistpll
mov
or
cld
pop
mov
aas
out
mov
movsbl
mov
xchg
jnp
inc
call
push
pushw
mov
loop
movsb
fstpt
cwtl
and
nop
dec
adc
dec
daa
sbb
inc
sub
ss
subl
dec
mov
outsb
sahf
outsb
jbe
es
xor
sbb
call
out
stos
jecxz
out
sbb
sub
decl
sbb
push
jns
cmp
sub
cmp
clc
pop
imul
mov
imul
movsb
clc
pop
xchg
pusha
ret
pop
push
hlt
push
sub
ja
push
cltd
sahf
test
xchg
xlat
into
repz
adc
test
loopne
push
jae
fnsave
loopne
insb
pop
leave
inc
add
add
mov
mov
jne
movsb
sbb
gs
xchg
jmp
aas
add
cs
fistpll
lcall
fdivrp
mov
xchg
xchg
popf
cld
movsl
cli
push
addr16
and
inc
lret
je
xor
scas
adc
mov
movsb
and
addl
xchg
push
mov
iret
bound
jb
jecxz
decl
sbb
cmp
mov
mov
and
fidivrl
pushl
bound
lahf
push
sahf
daa
adc
inc
stos
pop
jecxz
inc
std
jae
push
cs
dec
and
clc
incl
cld
mov
roll
aad
xchg
mov
arpl
aaa
icebp
push
hlt
dec
stc
hlt
lods
push
call
aaa
retw
mov
mov
push
cmp
jbe
imul
stos
decl
xchg
xor
fcom
cmp
lods
mov
loop
mov
rorb
pushf
es
lcall
hlt
ss
add
push
dec
sub
xor
fsubs
test
ret
dec
loopne
adc
pop
mov
dec
mov
jo
push
aam
test
fwait
xchg
sbb
adc
xchg
sarb
int
loope
hlt
mov
mov
sub
test
clc
ljmp
push
adc
les
adc
dec
push
std
pushl
outsl
lcall
iret
dec
sbb
int3
mov
and
pusha
cwtl
sbb
rorb
pop
adc
aad
sbb
fwait
adc
lahf
aaa
lret
mov
mov
mov
mov
out
push
imulb
fimull
lret
popa
into
cmp
push
stos
dec
cmp
addr16
push
dec
adc
pop
sub
push
cld
cmp
lock
lock
adc
push
xlat
jne
sub
mov
jno
fsubrl
push
call
loopne
hlt
das
mov
leave
mov
adc
popf
and
cmc
cmp
add
outsl
ret
aaa
sbb
jo
cmpsb
bound
outsl
ja
pop
lcall
mov
mov
or
push
imul
out
call
xchg
mov
push
jno
es
decl
popf
mov
pop
jae
adc
lcall
lods
pushf
pushl
xchg
lret
fildl
call
mov
rcrb
and
js
sar
call
inc
rcrb
xor
jnp
mov
cmp
test
call
nop
push
inc
push
pop
jo
outsb
out
je
ss
inc
push
jae
pop
pause
gs
fcoml
call
inc
bound
sbb
faddl
mov
xor
and
xchg
dec
iret
adcl
push
rcll
adc
ficoml
outsb
xor
xchg
pop
mov
shrl
jmp
es
ss
movzbl
pop
or
and
push
sbb
xchg
jae
mov
push
and
jb
decl
xor
add
push
setb
iret
out
sub
pusha
arpl
int3
push
mov
dec
push
addr16
aad
pop
adc
sti
and
sub
mov
orb
sbb
jg
lcall
cmp
xor
sbb
int
and
mov
ljmp
mov
leave
sti
pushf
sub
outsb
outsl
push
mov
pop
rclb
js
push
out
icebp
decl
or
sbb
rclb
sbb
ljmp
rcrb
cmpsl
fstps
dec
jecxz
daa
pop
fucomp
lahf
in
or
decl
mov
stc
cmp
push
outsb
mov
jg
jo,pn
test
or
lods
pusha
icebp
ja
jge
xchg
mov
sbb
lcall
and
and
aas
pushl
std
lds
or
adc
pop
cmp
mov
add
rclb
call
int3
cmpsb
push
aad
add
mov
mov
xchg
sahf
nop
cmp
or
fs
pushl
mov
adcb
fldl
pushf
imul
arpl
jmp
jl
or
mov
jmp
cmp
popl
lods
pop
mov
fcomip
xchg
add
lock
sti
outsb
cmp
pop
sahf
fcmovnb
test
sar
decl
repnz
movb
out
cmp
outsl
cwtl
dec
adc
jle
dec
stos
test
inc
js
xchg
jecxz
mov
js
sahf
iret
pop
push
ss
gs
movsl
test
lcall
cld
fsub
mov
das
or
jbe
lea
xchg
scas
jmp
ja
call
mull
jg
mov
and
ljmp
outsb
fdivrs
mov
pusha
and
mov
lods
and
xor
lcall
arpl
pop
jno
xor
leave
add
mov
xor
inc
sti
and
add
mov
into
pop
pop
fs
mov
fnop
jmp
cmpsb
lcall
shl
mov
mov
sub
pop
hlt
jmp
jge
xor
dec
cltd
add
into
pop
inc
clc
sbb
xor
mov
fidivs
xlat
mov
stos
sbb
scas
fidivrs
aas
jle
push
add
enter
scas
xor
jp
mov
int3
loop
out
shl
or
xchg
es
cmp
push
lcall
jns
adc
in
mov
negb
mov
stc
dec
int
data16
jmp
xchg
arpl
xor
dec
push
test
dec
lods
xchg
cmp
outsb
pop
inc
pop
xchg
rolb
scas
sub
pushl
push
push
outsl
scas
out
xlat
subb
pop
push
sbb
or
mov
dec
cltd
mov
ljmp
sti
or
test
adc
dec
pop
fcompl
popa
lea
lret
pushl
sti
ljmp
scas
mov
loopne
incl
aad
jmp
dec
and
push
pop
fwait
ret
sbb
mov
sar
js
test
movsb
inc
or
clc
xchg
test
decl
clc
pop
fs
push
fidivs
jmp
sar
out
sub
cmpsb
jl
out
test
or
fwait
popa
sub
sbb
out
testl
push
ja
shrl
lock
jnp
pop
test
mov
lcall
test
je
jb
xchg
loope
adc
mov
sub
lcall
jmp
repz
fmull
adc
sub
decl
pop
bound
sub
scas
xchg
push
xchg
loope
push
bound
push
test
hlt
pop
icebp
adc
test
gs
jmp
xor
xor
fildll
add
pop
sarl
cmp
rcrl
add
xchg
stos
stc
hlt
pushl
inc
adc
insl
fdivrl
ja
pop
aas
jbe
and
imul
fistps
cwtl
aad
mov
jae
in
xlat
popa
sub
mov
adc
iret
cmp
mov
xor
dec
lahf
sbb
xor
xchg
jne
inc
idiv
sbb
leave
jg
icebp
or
lds
hlt
pushl
test
xchg
pop
jb
fsubrp
cmp
mov
aas
push
lcall
leave
out
hlt
jl
sub
jne
icebp
lock
popa
and
outsb
cwtl
fdivs
xor
mov
iret
lcall
int3
shrb
push
call
loopne
xchg
data16
imul
xor
pop
js
mov
shrb
mov
inc
inc
mov
inc
dec
sub
inc
mov
repz
cmp
leave
enter
push
loope
sbb
ds
lcall
aad
add
mov
mov
insl
and
pop
cli
popa
idivl
xchg
and
js
ds
and
add
std
ss
popf
test
jl
mov
sti
addr16
imul
fs
mov
mov
insl
test
inc
cmp
xor
pushl
movsl
mov
inc
sub
push
enter
test
aad
call
push
jbe
mov
jnp
aaa
inc
ret
cmpsl
dec
fistps
test
call
cld
mov
outsb
mov
and
rcr
xor
sub
xchg
jge
repnz
daa
popa
xchg
decl
cmp
mov
cltd
push
lock
jmp
or
push
lock
nop
arpl
cmp
cmp
pop
mov
jbe
push
fldcw
insb
popa
loop
mov
mov
ljmp
movsb
lds
dec
fnstcw
jge
mov
out
call
dec
jae
cmpsb
inc
in
xor
call
ss
lea
xchg
xchg
cmp
ja
pop
cwtl
call
mov
sub
popf
daa
aad
jecxz
jl
lods
out
jecxz
sub
pop
mov
lcall
sub
pop
mov
push
ffreep
cmpsl
xchg
adc
cmp
cmp
fdivr
mov
jmp
lea
es
in
sysret
xchg
mov
inc
nop
hlt
jmp
xor
shll
scas
jg
mov
ljmp
dec
in
xchg
das
push
cmp
mov
lahf
push
movsb
std
pusha
out
repz
pcmpgtb
mov
in
rorb
mov
bound
fsts
inc
iret
mov
inc
inc
and
dec
fsubp
in
test
sub
ret
xchg
jle
xor
pushf
pop
inc
push
loope
jb
push
and
pushl
in
and
or
cli
mov
mov
mul
mov
and
clc
aas
out
ljmp
push
stc
sahf
or
cmp
sub
mov
push
mov
add
in
xchg
mov
pop
jp
add
add
pop
push
idivb
sbb
pop
andl
cmp
enter
loop
cld
repnz
jo
jne
xor
push
dec
sbb
xchg
jmp
jo
ljmp
enter
outsb
imul
or
sahf
xchg
sub
dec
push
inc
jno
add
neg
mov
decl
dec
daa
movsl
push
movsl
stc
jo
push
sub
cmp
jo
and
int3
lret
jbe
out
pop
inc
adc
ljmp
mov
pushf
into
add
sar
or
mov
mov
jmp
movsb
fsts
dec
sub
pushl
imulb
nop
cmp
andl
inc
loopne
mov
enter
insl
mov
xchg
and
sbb
rorl
push
cld
cmp
stos
rcrb
sarb
and
jg
cmp
or
nop
loope
or
js
xor
fnstenv
xor
sarl
adc
sub
ljmp
pop
jnp
jl
pusha
decb
sub
cvttps2pi
xchg
jns
mov
pop
mov
xchg
jmp
jg
into
test
int
dec
and
mov
push
std
das
clc
pop
rclb
push
subl
mov
test
sub
inc
cmpsb
lcall
shrl
jmp
mov
lret
arpl
xchg
test
cmp
pop
push
inc
sub
sub
decl
aam
je
movsl
dec
cmc
pop
imul
div
cmp
out
jle
mov
add
inc
mov
cmp
mov
pop
mov
jno
in
repnz
mov
incl
jmp
xor
fldt
push
dec
jb
mov
test
and
xchg
sub
imul
fcomip
jmp
dec
nop
push
insb
add
push
in
test
call
cli
ljmp
dec
sbb
iret
bound
sub
frstor
push
cmpl
outsl
push
punpcklbw
int
cmp
sbb
lods
mov
fsubp
inc
adc
jg
nop
mov
cmp
pushl
movsb
test
call
mov
repnz
test
es
xorl
dec
add
xchg
jmp
lods
insb
pop
ficoms
mov
je
mov
xchg
jp
jb
popf
sbb
jge
outsl
adc
dec
stos
scas
adc
and
add
jo
pop
incb
push
jno
sbb
cmp
fistpll
push
pop
xor
movsb
jns
ret
test
jb
or
in
rclb
call
dec
dec
int3
jno
pop
or
mov
stc
push
fdivrp
mov
filds
sbb
xor
out
or
fwait
mov
aaa
add
and
lcall
dec
icebp
mov
inc
and
inc
push
inc
cmp
lcall
cwtl
in
and
call
andl
out
mov
je
xor
out
cli
ljmp
lahf
mov
pop
mulb
push
xchg
shlb
cld
je
mov
jmp
inc
sbb
push
roll
mov
enter
ds
or
fstl
pop
sub
imul
add
cmc
decl
in
mov
lock
xlat
lret
outsb
pop
lahf
pop
lock
cld
incl
rclb
bound
aas
push
xor
mov
sub
push
call
cmpsb
add
mov
xlat
mov
into
outsl
setae
adc
add
decl
sub
push
mov
stc
shl
jecxz
fdivs
cmp
stc
stos
xor
sbb
mov
mov
cmp
adc
ret
push
rcrb
jg
pop
hlt
pushl
and
jg
cmp
cmp
cmp
and
idiv
call
loope
sub
hlt
add
adc
adc
incl
ja
pop
adc
pop
mov
jb
mov
push
imul
xchg
jl
leave
subl
or
inc
xchg
je
sbb
orl
loopne
mov
call
inc
mov
mov
das
int
or
ss
ss
and
inc
lcall
es
inc
jge
cmp
insl
fs
test
and
ret
call
inc
outsl
adc
insl
js
gs
lods
xchg
mov
adc
les
je
mov
lods
pushf
mov
inc
mov
or
decl
ret
xchg
adcb
mov
pop
fs
into
in
fwait
into
inc
out
cld
mov
incl
jecxz
sbb
data16
getsec
gs
out
xchg
cmp
popf
dec
incl
outsb
pusha
fwait
xor
pop
call
sub
mov
jle
jmp
mov
in
inc
in
lcall
xchg
nop
sbb
jecxz
pop
mov
aad
pushf
popa
shrb
ljmp
xchg
js
inc
cmpsb
loope
push
or
movsl
cltd
sub
xor
testb
cmc
ja
push
inc
test
mov
loope
mov
stc
cmp
out
pop
push
out
lds
lds
mov
movsb
roll
into
adc
out
xchg
xor
decl
push
pop
mov
movsb
cmpsb
xchg
in
jmp
movsb
aaa
xchg
fs
and
sbb
jne
fmull
clc
incl
xchg
jnp
or
mov
mov
aas
sub
popf
fildl
ja
cmpsl
cmp
or
je
pusha
pop
pop
lcall
jo
ss
xor
lret
rcrl
nop
xchg
adcl
jg
shrb
sar
repnz
std
dec
mov
out
xchg
xchg
inc
gs
push
test
or
scas
mov
adc
les
lcall
cmpsb
addr16
mov
xchg
aad
dec
les
mov
adc
pushl
stos
and
add
push
jge
cmpsb
test
xchg
push
test
push
cwtl
cld
ljmp
clc
jmp
push
jb
dec
outsb
sti
ds
test
dec
mov
xor
jmp
add
dec
lahf
adc
push
mov
inc
std
mov
nop
cmpb
decl
leave
repz
push
dec
lea
pop
dec
call
pop
jne
mov
or
in
lods
xchg
shll
sub
incl
cwtl
adc
hlt
xor
or
sbb
adc
push
ficoml
mov
arpl
mov
cli
sti
mov
inc
push
push
das
sub
and
lea
inc
pop
mov
das
inc
ss
dec
xor
jle
jne
lret
cli
sbb
mov
aad
sar
in
cmp
push
dec
pusha
inc
cmp
lahf
clc
call
sahf
lret
push
xchg
cltd
jecxz
jbe
jg
cld
cmp
jnp
push
jno
pushf
jle
lret
pop
lds
xchg
cmp
xor
mov
rorl
jno
mov
jo
jbe
stos
pop
push
sub
pop
enter
fcoml
cmp
adc
lret
test
inc
jae
loopne
cmp
cmpsl
pushl
mov
sbb
jbe
test
out
inc
out
outsl
fdivs
jae
push
inc
ficoms
mov
aam
ja
insl
cmpsl
cltd
clc
mov
mov
inc
in
mov
adc
enter
mov
stos
add
roll
xor
leave
cwtl
mov
sub
xor
fisttpll
rol
xor
pop
mov
mov
ljmp
out
into
enter
push
adc
movsb
test
in
in
clc
jmp
xor
inc
jge
and
xor
fsubrl
mov
and
cmp
push
cltd
xor
ljmp
and
enter
clc
mov
daa
rorb
xor
repnz
mov
dec
jbe
out
jmp
xchg
ljmp
dec
out
jecxz
sbb
out
sbb
jae
push
or
rol
test
pusha
in
pop
pop
in
mov
cmp
jo
fldcw
out
xchg
fisubrl
lods
sub
xchg
inc
xchg
mov
fldz
jle
inc
jmp
fmuls
aaa
xlat
imul
mov
leave
xor
mov
jle
mov
insl
sbb
lret
xchg
lahf
repnz
xchg
out
mov
mov
push
dec
inc
xchg
or
lods
icebp
cmp
jg
cmp
les
fldcw
test
pop
and
in
into
push
decl
fmuls
popa
in
test
cli
fildll
mov
clc
jl
and
mov
adc
mov
or
jne
jnp
sbb
ljmp
push
scas
cwtl
mov
int3
orb
pop
test
sti
ss
dec
pop
scas
ret
cmp
repnz
jno
or
or
mov
int
lret
dec
iret
shrb
sub
xchg
sbb
xor
adc
out
in
inc
mov
icebp
or
incl
pop
mov
cs
movsl
xchg
pop
adc
mov
repz
mov
xchg
jmp
into
mov
aas
jnp
sub
movsl
push
inc
push
add
pop
dec
ljmp
xor
xor
add
jp
ja
sbb
xchg
iret
out
mov
inc
lods
xchg
nop
loopne
pop
testl
stc
jl
xor
std
aas
sub
cmp
loopne
xchg
cmp
cmc
cld
int3
sbb
add
cmpsb
js
leave
lock
ljmp
inc
ror
push
pushf
cltd
lock
nop
dec
int3
sub
pushl
fwait
cmp
rcll
cmp
stos
adc
inc
hlt
sbb
shlb
lret
hlt
repnz
sbb
push
mov
xor
or
aam
ljmp
filds
sets
cltd
cmp
repnz
nop
jmp
fstps
addr16
shrl
orb
cmp
out
int
addb
test
or
cmpsb
out
lcall
stos
nop
add
xor
mov
sub
enter
outsl
sbb
imul
fabs
pop
mov
popa
cmpb
stc
in
leave
ret
mov
jg
pusha
mov
sti
incl
or
mov
xchg
daa
mov
push
test
sub
sti
lcall
push
push
mov
testb
pop
in
sub
scas
test
mov
jge
cwtl
sti
jne
pop
add
sbb
xadd
aad
mov
or
out
sub
in
je
xchg
popa
scas
lret
fnstcw
gs
ss
mov
cmp
stos
outsl
prefetch
push
fiadds
imul
test
fwait
das
push
cmpsb
add
cli
mov
scas
pop
push
cwtl
pop
sarb
inc
stos
xor
aas
push
daa
and
sbb
test
xor
lcall
adc
adc
adc
push
mov
loopne
add
jnp
adc
notb
mov
dec
or
mov
daa
fdivrs
aam
mov
push
cmp
or
add
cmp
xchg
icebp
ljmp
xchg
push
jb
pop
es
cli
jo
jle
push
cmp
loope
hlt
filds
aas
div
xchg
jg
jp
bound
mov
daa
fwait
in
aad
data16
mov
ret
out
clc
ljmp
xchg
decl
out
lods
mov
test
incl
adc
idivl
lods
and
add
mov
es
lcall
and
stos
and
jno
sub
jmp
scas
aam
sti
aaa
cmp
addr16
movsb
mov
popa
push
sub
mov
das
jo
mov
jg
jg
ds
inc
sbb
ljmp
pop
inc
or
cmp
ja
lods
scas
roll
adc
loopne
aad
mov
incl
mov
mov
int
sbb
imull
push
adc
nop
dec
cmpsb
out
cli
push
fcomip
mov
ficompl
cmpsb
ds
xchg
loope
ret
and
push
or
cld
inc
loop
add
lea
gs
xchg
jno
dec
fcomip
ljmp
pop
out
int
jmp
cmpb
mov
sbb
fiadds
test
lcall
std
bound
and
in
add
or
ljmp
add
mov
loop
or
mov
mov
adc
ljmp
aam
insb
push
pop
push
xor
mov
call
ss
fistps
jg
je
cmp
sbb
sub
mov
jg
adc
insl
push
mov
pop
xlat
dec
cmpsl
aam
sbb
sub
mov
xchg
adc
cmp
pushl
add
pop
jb
push
fists
bound
xchg
clc
push
out
jbe
imul
mov
jg
pop
aam
loop
xchg
gs
clc
stos
xor
or
stos
icebp
add
ljmp
mov
popa
outsb
roll
sti
rorl
gs
ljmp
fyl2xp1
cmp
jbe
std
enter
pushf
xchg
mov
pushl
push
lods
dec
mov
cmpsl
xchg
fdiv
daa
test
and
out
push
and
leave
loop
push
movsb
ret
subl
and
jo
push
pushf
push
test
lcall
stc
call
decl
mov
lock
lret
mov
insb
pop
call
and
icebp
sub
sbb
stos
ds
imul
jge
sbb
adc
out
imulb
lcall
ret
mov
add
mov
mov
incb
and
cwtl
mulb
insb
mov
popa
or
out
sti
sbb
or
ljmp
jnp
mov
bound
int
add
or
add
clc
dec
jae
push
sti
mov
push
fidivl
pushl
cmp
push
addr16
repnz
sbb
and
xchg
xor
adc
dec
and
insb
cmp
mov
mov
adc
idiv
jecxz
sub
inc
xlat
sub
aaa
sub
sub
and
call
sbb
test
sar
dec
ljmp
mov
push
aam
mov
incl
lret
push
fcmovb
imul
or
dec
mov
into
sbbb
sub
clc
cmpb
shll
and
shr
shll
jns
mov
daa
jb
jmp
push
sub
inc
add
cs
pop
lret
push
fs
push
adc
clc
call
xchg
loop
cmp
fildl
popf
adc
inc
scas
add
dec
std
cmp
movsb
decl
sbb
scas
mov
fwait
jns
std
call
test
dec
push
pop
or
test
push
dec
stc
je
jp,pt
fsubs
mov
jo
fcoms
push
inc
aad
xchg
push
push
jbe
jae
test
and
testb
jg
mov
pop
dec
sub
and
outsl
in
push
cld
adc
sub
push
pop
xor
mov
lret
mov
jl
mov
mulb
fiadds
mov
push
add
mov
dec
daa
mov
lock
sub
fnstsw
mov
sti
leave
sahf
xchg
outsb
push
and
pop
inc
adc
imul
lock
incl
out
inc
gs
cmpsl
emms
inc
xor
and
xchg
mov
popf
sbb
repnz
push
sub
incl
push
xor
mov
push
fisubrs
sbb
cmc
xor
mov
fwait
mov
sahf
aad
mov
cwtl
loope
xchg
leave
fdivr
mov
aad
mov
add
push
xchg
repnz
mov
xchg
sbb
add
lcall
fsubs
lcall
push
jl
test
xor
rcrl
pop
leave
pop
das
cmp
lcall
fldt
in
adc
push
enter
hlt
mov
xor
test
xlat
lods
aaa
inc
mov
add
pop
rcr
cli
decl
data16
mov
lcall
pop
pusha
adc
mov
jle
ret
repz
cli
ljmp
and
mov
push
pop
mov
call
pop
les
or
pushf
loope
bound
cmc
ret
fsubrl
incl
jg
fwait
cmp
inc
xor
mov
loopne
fisubs
inc
adc
ljmp
call
aas
shrb
or
mov
out
sub
jmp
xchg
mov
addr16
testl
ljmp
data16
mov
bound
imul
pushl
pop
lock
mov
xor
mov
idivl
mov
xor
and
fdivp
incl
in
push
mov
mov
into
movsl
imull
ret
xor
mov
decl
stos
pop
aam
adc
and
pusha
insl
cmp
clc
push
jb
clc
fnsave
jbe
cmpb
out
and
ljmp
int3
cld
outsb
sbb
cmp
inc
push
ret
sti
fdivrs
movsb
jle
insb
out
xchg
adc
lcall
sbb
call
cli
call
mov
push
cmpsl
lods
sarb
mov
mov
sbb
and
aas
mov
mov
daa
imul
inc
adc
pop
dec
adcl
mov
mov
cli
fistps
sub
daa
push
outsb
loop
in
and
pop
pop
jge
push
fistpl
cmp
and
mov
push
mov
pushl
nop
aad
repnz
mov
in
test
in
dec
in
inc
mov
sbb
outsb
fsub
jne
inc
in
stos
incl
sbb
rdmsr
or
cmp
jecxz
cmc
testl
clc
std
mov
mov
dec
aaa
outsb
jns
pushf
jmp
push
pop
loope
je
arpl
mov
repnz
das
dec
scas
daa
arpl
xchg
inc
dec
ja
adc
int3
xchg
ljmp
mov
lock
jo
mov
sbb
rclb
les
rcrb
push
cwtl
add
pusha
jecxz
xor
lcall
mov
sub
popa
cltd
popf
jl
js
mov
jne
dec
pop
push
ljmp
push
jae
shrb
insl
insl
cld
mov
mov
or
push
cmpsb
and
pushl
dec
jne
sbb
pop
sbb
add
cmp
nop
fwait
repz
loope
mov
pop
adc
jb
jge
pop
push
fsubrp
add
jae
add
push
fmuls
incl
mov
inc
pop
sub
repnz
push
sbb
pop
adc
pop
inc
sub
andb
push
out
test
idiv
adc
out
adc
clc
fwait
dec
clc
fildll
jae
push
xchg
cwtl
into
sti
scas
and
mov
inc
jns
clc
mov
cmp
and
out
shll
add
add
ud0
mov
pusha
sub
mov
mov
mov
jne
add
sub
cld
int
cld
addr16
add
mov
sub
inc
mov
sbb
pushl
into
sub
lret
insl
mov
adc
out
xor
mov
lcall
in
cltd
push
dec
data16
or
pop
inc
stc
hlt
and
adc
hlt
cmp
cmp
fidivrs
add
ljmp
xor
cmp
repnz
pop
gs
cmc
adc
test
sahf
inc
mov
xchg
fimull
add
cmp
mov
cmp
push
push
cs
sub
dec
std
mov
mov
or
push
into
popf
test
sbb
mov
mov
mov
jne
decl
sahf
mov
rcll
aaa
call
rclb
in
int
jnp
and
cmp
xor
bnd
push
std
pop
movsb
mov
into
loop
int3
mov
pushl
and
inc
clc
ja
cmpsb
sahf
insb
cmp
stos
mov
enter
add
push
fs
pop
pop
and
and
enter
jmp
test
jg
scas
inc
orl
mov
push
leave
xchg
jge
sub
inc
mov
or
fsincos
popf
cltd
ds
mov
call
xchg
jne
addr16
cli
mov
add
int3
out
mov
decl
and
cmpsl
out
mov
arpl
test
fwait
aam
jno
cmp
adc
cwtl
imul
mov
and
pop
inc
push
adc
cmp
sub
add
xchg
xchg
lcall
adc
cmp
xchg
iret
ss
cmc
mov
rcll
mov
jmp
cli
rolb
dec
add
stc
out
and
add
decl
sbb
hlt
xchg
or
mov
lock
xor
mov
sbb
test
add
add
add
jns
subl
sbb
xchg
xor
jl
ljmp
dec
cltd
mov
loopne
incl
gs
add
fisubs
dec
add
fwait
cmp
sub
das
mov
xor
sbb
fadds
fisubrs
and
mov
in
aas
mov
cmp
stos
imul
fdivl
aam
aaa
push
cmp
add
mov
popa
cmp
cwtl
cmp
sahf
sbbl
cwtl
test
sbb
xchg
nop
mov
cmp
mov
imull
add
incb
lds
ljmp
test
fbld
psrlq
cltd
inc
mov
psraw
or
sar
decl
pop
jp
addb
orb
push
mov
fstpl
insl
xchg
push
adc
jb
shll
rol
and
aam
pop
sub
push
lock
fists
lock
popa
push
cmp
mov
pop
fnstenv
lcall
jo
sub
repz
adc
sbb
mov
ljmp
xlat
pop
push
dec
pop
in
xor
decl
incl
or
paddsb
call
or
lcall
inc
not
lock
fcmovu
in
outsb
add
lock
dec
mov
lcall
ljmp
dec
mov
lock
dec
xor
aam
aam
or
js
lcall
mov
adc
lods
xlat
mov
test
stos
pushf
cmp
xchg
mov
jg
ljmp
push
jle
shrl
inc
lea
cmp
mov
in
cmp
pushl
inc
dec
ret
fs
xchg
xor
mov
shll
inc
jge
scas
call
in
es
cmpb
xchg
ret
and
pop
hlt
jmp
dec
xchg
sahf
cli
popf
pop
cld
push
iret
arpl
cmp
jg
inc
fdivrl
or
sbb
and
aaa
call
mov
jle
testb
imul
icebp
jp
popa
pop
leave
pop
push
test
pusha
dec
test
mov
das
jns
push
sub
add
sub
mov
pushl
jp
push
mov
stos
cmpsb
popa
into
xchg
pop
and
cmp
lret
xor
outsb
inc
sbb
jmp
xchg
arpl
bound
ret
in
int
nop
xchg
or
cmp
lcall
lea
clc
insb
pushf
xor
imul
fs
and
lea
cmp
mov
cmpsl
pushf
mov
ljmp
mov
xchg
inc
mov
inc
adcb
incl
cmpsb
push
cmp
jae
in
adc
push
inc
daa
dec
addl
mov
push
setnp
dec
push
or
iret
mov
jg
aam
incb
inc
jge
lea
xchg
pop
cmc
out
cli
pusha
leave
dec
ja
lret
inc
pop
xchg
cmp
jb
mov
call
lret
sbb
pop
mov
and
and
xor
lret
sbb
dec
leave
rclb
notl
push
dec
mov
mov
nop
dec
push
mov
hlt
iret
or
or
movsb
test
mov
sub
add
jne
xchg
xor
pushl
aaa
pop
insl
mov
push
lret
gs
inc
gs
rolb
inc
push
push
bound
adc
pop
icebp
pushl
jl
scas
popa
push
adc
bound
rcrb
sbb
pop
pop
push
mov
push
or
and
mov
or
adc
pop
jo
dec
mov
cld
mov
lock
cwtl
fistpll
stc
xchg
jge
xchg
xchg
mov
ljmp
test
push
or
fisubrl
or
outsb
xchg
or
fsubp
add
sbb
cmp
int3
fsubs
dec
mov
aad
hlt
dec
jmp
cmp
push
shlb
pop
cmc
decl
popf
xor
jbe
lcall
cs
cmp
jg
dec
jb
cmpl
mov
add
inc
mov
lcall
and
lods
adc
jl
lods
imul
das
xchg
add
das
add
dec
pop
adc
lods
addr16
pop
mov
jmp
add
lcall
lret
sbb
sub
std
dec
jno,pt
sub
or
mov
aaa
push
or
mov
push
aas
sti
jmp
jmp
pop
fidivrs
cmp
add
aad
repnz
shr
inc
jg
mov
dec
cs
add
mov
push
xchg
dec
das
test
mov
ret
xchg
lcall
dec
xor
jp
dec
out
fnstenv
dec
adc
and
xchg
jg
negl
stos
insb
mov
mov
mov
adcl
jne
ja
add
mov
inc
jge
lcall
js
jg
adc
xchg
imul
mov
test
pushf
jo
test
ljmp
push
out
jmp
repz
push
jmp
or
xor
cmp
lods
push
inc
mov
cmp
sub
jg
mov
test
and
dec
nop
pop
fisubrl
xor
and
cmpsb
ud0
cld
lcall
mov
scas
hlt
stos
dec
imul
sti
outsl
xchg
inc
rorb
inc
jmp
pushl
or
add
mov
inc
xchg
cli
pop
stos
mov
xlat
xchg
xchg
or
hlt
mov
cmpsb
push
addr16
enter
push
sub
jae
ljmp
push
mov
inc
or
pop
fadds
lods
or
or
out
hlt
mov
add
pushl
adc
xor
xor
test
mov
dec
mov
push
push
out
iret
mov
sub
ljmp
jge
rcrb
xor
aaa
add
into
cmpsl
pop
jg
sbb
jmp
mov
aaa
aaa
xor
mov
cmp
adc
in
xchg
mov
addr16
mov
lret
adc
es
cli
les
push
cmp
jg
jns
sub
adc
fs
xchg
into
dec
jle
jl
add
push
dec
lcall
dec
divl
int3
add
sbb
sahf
add
mov
dec
ror
bound
data16
dec
lcall
lock
dec
sbb
ds
decl
xchg
scas
in
mov
stos
popf
seto
lcall
rorl
mov
in
add
cmp
loope
movsb
insb
cmp
and
push
mov
sarl
mov
jno
mov
dec
sub
loope
fildl
fldl
int3
mov
sub
mov
scas
xlat
jb
aaa
cmp
cltd
dec
cmc
push
lea
xchg
mov
pushl
lods
mov
adc
pushl
cld
jns
out
je
gs
sub
mov
sbb
push
inc
mov
cli
mov
decl
clc
add
int
dec
into
pop
pop
fildll
fxam
imul
pop
in
fs
incl
xchg
cmp
sbb
mov
xchg
or
push
mov
aam
mov
ljmp
pop
inc
mov
inc
pop
sbb
xchg
push
rcll
and
adc
ljmp
dec
cs
fbstp
repz
mov
and
add
das
add
lahf
jnp
adcl
inc
popa
sbb
adc
add
clc
pushl
xchg
or
cld
cld
and
nop
xor
mov
xor
std
mov
jl
inc
mov
add
pushl
cmc
outsb
xor
fistl
mov
js,pn
leave
out
in
test
jg
dec
sub
mov
jno
xchg
push
repz
dec
push
je
cs
mov
xor
insl
fildll
ficoml
cmpsl
push
scas
cmpsl
jge
adc
into
xor
push
popf
aas
cwtl
jne
jmp
xchg
lcall
pop
xchg
and
xchg
xlat
xor
mov
fisubs
mov
dec
xchg
cmp
popa
mov
dec
xchg
incl
lret
aaa
lods
into
in
pop
in
push
mov
xlat
sbb
mov
ds
cmp
aaa
sub
mov
xchg
mov
outsb
jne
ljmp
fimuls
scas
imul
xlat
mov
inc
add
jp
pop
and
jle
dec
cmp
dec
fsubl
aad
xchg
push
mov
mov
imul
push
in
cmp
adc
inc
loope
je
inc
mov
mov
incl
pop
sub
pushf
rcl
lret
pop
sub
push
push
mov
js
pushf
loopne
sub
ljmp
jb
icebp
ss
cld
jp
adc
cmpsb
cs
xor
jle
add
call
leave
pop
cmpb
fs
outsl
add
xchg
jecxz
jle
js
test
bound
pushl
loopne
call
std
lcall
cmp
int3
adc
repnz
inc
push
ja
cmpsb
mov
sub
mov
pop
hlt
loop
shl
ds
cs
lea
inc
loopne
pop
jecxz
rorb
imul
sbb
mov
hlt
push
ds
incl
inc
shll
mov
rcll
leave
inc
out
ss
ljmp
sbb
loop
stos
cmp
xor
call
leave
mov
mov
mov
repnz
jle
insb
int
push
cli
cmp
lahf
lods
cli
sti
xor
stos
adc
add
call
jmp
mov
xchg
es
xor
mov
call
xchg
shl
lock
jmp
sub
fdiv
jl
scas
inc
sub
mov
adc
outsl
js
frstor
add
icebp
in
lock
xchg
sbb
rorb
and
adc
cmp
adc
ss
adc
add
fsub
test
out
cmp
pusha
dec
sbbb
adc
or
mov
xor
cmp
jb
into
xchg
fcmovne
movsl
jb
cmp
mov
call
push
in
mov
mov
and
sub
cmp
aaa
jg
cmp
pop
cltd
and
push
adc
add
ljmp
lahf
aaa
aad
cmp
jle
shrl
push
stos
pop
sub
int3
cwtl
sbb
lock
incl
mov
cltd
cmp
mov
and
mov
xchg
cld
ds
clc
incl
lret
rcll
add
jl
les
jo
pop
mov
out
stc
jmp
sarl
jg
jmp
out
fs
in
stc
pop
movsl
add
test
add
imul
push
lret
inc
mov
aad
shr
mov
mov
mov
pop
sarw
or
sti
fwait
xor
jmp
sub
mov
lods
arpl
int
clc
andb
push
and
jmp
cmp
sub
stos
or
lcall
fistps
push
push
imul
add
mov
inc
xchg
ss
lock
cltd
inc
loope
call
dec
fucomip
ljmp
sbb
mov
out
lret
call
push
sti
or
int3
fldt
sub
inc
mov
push
movsl
lret
mov
incl
push
insb
loop
push
jge
icebp
lcall
in
sub
or
out
cmp
pop
clc
insb
xor
incl
xchg
dec
xchg
dec
clc
orl
jle
pop
inc
xchg
add
daa
aaa
and
jg
cld
sub
or
pop
sarb
mov
cwtl
nop
adc
clc
pushl
mov
daa
push
mov
aam
inc
or
push
pop
js
cmpsb
mov
bound
pushl
jmp
cmp
sub
imul
out
rolb
add
pop
incl
icebp
fsubr
cs
ljmp
jecxz
ja
mov
and
push
mov
pop
pop
sub
mov
add
repz
loope
fwait
jg
and
jmp
es
inc
repz
mov
mov
mov
mov
aaa
enter
dec
lods
mov
dec
daa
pushl
and
mov
incl
push
adc
xor
push
sti
pop
sbb
sub
add
mov
push
jg
loop
cmc
xchg
out
ja
adcb
sti
and
cld
xchg
decl
cmp
addr16
push
xchg
fwait
add
mov
enter
xor
stc
jo
stos
xchg
inc
call
pushl
popf
dec
mov
in
xchg
pop
movsl
orb
adc
jae
out
lods
mov
fbstp
fimull
push
aad
insb
ljmp
gs
mov
aad
outsb
sub
aas
mov
xchg
pushl
fidivrl
leave
jmp
fcoms
inc
jno
mov
jge
inc
push
leave
jno
mov
mov
std
jge
lcallw
cmpsb
or
out
mov
sbb
ljmp
aaa
fs
mov
das
repz
adc
mov
dec
cltd
mov
mov
movsl
insb
adc
leave
test
mov
lds
ljmp
add
jae
aas
inc
repnz
inc
and
inc
mov
inc
jb
sbb
jge
imul
incl
popl
bound
cmpsb
stc
je,pn
sbb
stc
movsb
or
test
jbe
cmp
jmp
mov
pop
iret
fwait
ds
int
int3
subl
in
sub
mov
nop
int3
inc
movsl
jle
push
pop
fyl2x
inc
dec
cmp
add
ja
xchg
lock
push
shll
pop
cmp
jle
lcall
es
add
dec
aas
hlt
sbbb
lcall
add
jmp
add
pop
pop
sbb
mov
xor
lods
cmpb
jecxz
mov
adc
pop
mov
mov
mov
cs
aas
xor
lret
pop
hlt
loop
arpl
js
lods
fistl
and
adc
push
aaa
cmp
sahf
push
sbb
int
idiv
sahf
cmpsb
imul
ljmp
lcall
cltd
insl
mov
shrb
in
or
pop
xchg
lds
push
mov
sub
mov
rcll
lret
arpl
jne
mov
in
das
outsb
call
or
cmp
lods
xchg
fwait
rcrb
nop
dec
mov
lcall
push
and
inc
icebp
lcall
cmpsl
dec
push
adc
jecxz
mov
aaa
cs
stos
nop
js
decl
mov
fldt
fiaddl
mov
mov
and
jmp
pop
xchg
jne
stos
dec
sub
nop
inc
test
pop
scas
fmuls
out
inc
cmp
icebp
add
mov
in
xchg
data16
sarb
push
iret
arpl
cli
dec
jecxz
sub
xchg
mov
mov
xor
fistpl
pop
sti
inc
hlt
inc
dec
pop
bound
scas
xchg
adc
pop
xchg
xchg
mov
mov
int3
subl
push
add
into
scas
cmpb
dec
pop
sbb
and
jl
xor
aas
dec
pusha
add
add
sub
std
lcall
add
imul
xor
aaa
jns
into
xor
and
data16
pop
mov
decl
fstpt
pop
call
test
js
add
movsl
imul
loopne
mov
hlt
and
lret
incl
mov
cltd
ficomps
jmp
xchg
ja
jnp
lahf
test
ret
add
jl
fdivrl
sbb
loopne
lods
dec
pop
lea
rcll
push
xchg
loopne
flds
mov
test
ss
in
jnp
and
mov
sub
or
jg
lods
lcall
test
fs
lahf
push
test
sub
jg
decl
lret
aaa
mov
push
mov
jnp
cld
inc
ret
jns
insl
aad
mov
jnp
mov
sbb
xor
mov
aam
sbb
push
call
pop
jns
dec
cmp
shll
out
mov
ljmpw
push
xchg
aam
mov
push
lcall
dec
aaa
xchg
sbb
fsubrl
xchg
xor
cmpl
ret
cmp
inc
dec
scas
push
adc
out
test
iret
adc
ds
lea
pop
loop
jg
jns
loop
fcomip
in
jbe
dec
xchg
sub
inc
xchg
add
mov
cwtl
notb
sbb
jecxz
out
or
mov
mov
cltd
fwait
cmp
ss
xchg
jg
mov
xlat
fiadds
ja
mov
jbe
push
xchg
xchg
pop
jle
clc
mov
arpl
imul
sti
mov
ljmp
mov
ljmp
sub
stc
dec
mov
ficomps
lock
dec
lods
push
inc
enter
push
outsb
daa
mov
fadds
xor
add
push
std
jmp
enter
pop
mov
movsb
jge
lret
ret
and
std
add
movsb
out
sar
decl
dec
inc
stc
punpcklbw
dec
and
inc
or
sub
test
outsb
les
jle
pushl
jae
inc
lahf
cli
movl
add
cmp
xchg
inc
dec
test
lcall
or
xchg
push
js
pushf
jb
sbb
out
lods
test
rorl
daa
sbb
fdiv
lcall
mov
rorb
sahf
inc
xor
and
mov
xor
aam
jge
dec
xor
mov
xchg
imul
jmp
andl
dec
inc
add
jns
sti
xchg
stc
cld
pushf
push
ret
pushl
pop
loopne
aam
cltd
in
xor
hlt
aad
xchg
mov
sub
jecxz
jnp
or
mov
fwait
out
clc
pushl
mov
jb
leave
sbb
push
iret
stc
mov
ja
sbb
push
hlt
orb
sbb
adc
cld
mov
sub
pop
lcall
mov
icebp
mov
test
mov
adc
and
pusha
mov
or
xor
and
xchg
jg
sbb
pushf
sbb
lods
and
push
xor
les
das
mov
ljmp
out
aad
in
adcb
in
pushl
aaa
roll
arpl
loope
push
add
sub
jmp
jmp
jg
lahf
in
fisttpl
in
cmp
test
movsb
jecxz
orb
scas
call
lret
test
or
sbb
lds
decl
cmp
out
movsb
jno
sub
push
jne
lahf
js
shr
pop
scas
sbb
ds
scas
jns
dec
lods
inc
adc
sahf
jno
inc
xor
inc
cmc
mov
test
int3
xchg
add
decl
in
incl
test
sub
pop
fdivl
xchg
cmp
shrl
xchg
xchg
push
cmp
decl
mov
inc
push
lea
testb
scas
inc
mov
inc
xor
xlat
roll
ljmp
incl
daa
xor
stos
addr16
mov
mov
adc
gs
std
dec
rorl
clc
cmc
dec
decl
lret
lret
sub
pop
sbbb
test
pop
or
xchg
nop
mov
mov
fnstcw
cli
outsb
pushf
rcll
xor
cltd
xchg
shll
xchg
sbb
sahf
jb
call
lea
rcrb
fldt
out
scas
jecxz
pop
inc
subl
icebp
call
mov
test
loopne
mov
pop
repnz
ja
jbe
insb
and
insl
sti
sar
inc
ss
mov
push
or
sub
aas
enter
mov
jbe
dec
loopne
jmp
mov
mov
andb
pop
and
pusha
dec
cmp
std
and
jae
add
xor
jmp
out
sar
jmp
add
push
leave
jmp
xchg
jnp
or
cltd
push
mov
jbe
cld
adc
sti
cli
je
sub
cmpsl
idivb
xlat
lods
inc
dec
jecxz
jmp
push
pop
cs
jnp
andl
fcomps
push
std
das
sar
pop
outsb
or
sar
xlat
push
into
push
std
scas
cwtl
jg
cli
jg
sub
rcrl
mov
sar
scas
cli
sub
lret
push
inc
xor
and
jbe
xchg
mov
dec
insb
cwtl
jmp
add
movsb
jne
and
pushl
pop
cs
mov
cwtl
cmpsb
push
pop
outsb
dec
loope
out
int3
jl
mov
out
jecxz
pusha
shll
fists
fsubrl
mov
addb
out
lahf
cmp
xor
mov
cmp
xor
stc
iret
and
or
aas
and
aad
cs
add
lret
addb
or
in
push
sbb
xchg
shrl
add
push
adc
hlt
lock
sbb
frstor
inc
xchg
fcom
xor
out
cmp
dec
sub
ljmp
jns
jmp
fsubl
nop
sarb
int3
and
add
rorb
mov
mov
mov
inc
ljmp
cmpsb
xrelease
xchg
insb
xor
pop
sub
popf
call
sub
sub
call
sub
fstl
lock
sbb
lcall
filds
enter
gs
push
stos
mov
icebp
xchg
jmp
popa
test
test
hlt
inc
cmp
xchg
cmpsb
inc
scas
movsl
bound
cmp
fidivrl
jno
popa
mov
xor
jle
fsubl
or
sub
test
in
out
test
sti
dec
jl
int
pop
cmp
sub
ljmp
push
lret
lret
mov
aas
addr16
shl
loopne,pn
jecxz
test
mov
sahf
rorb
jle
sbb
out
pop
add
jg
popa
lcall
xchg
mov
mov
fidivs
mov
pextrw
stos
repnz
jle
push
and
mov
or
push
ss
or
lods
and
cmp
decl
pop
cli
jp
int
repz
inc
into
pop
sbb
movsl
negl
jmp
outsl
push
push
repnz
dec
insb
jmp
or
aas
imul
pop
inc
xchg
mov
daa
ret
sahf
cmp
pushf
xchg
loopne
int
xchg
dec
xchg
pop
push
movsl
xor
ljmp
scas
pop
icebp
pusha
or
test
or
push
add
xchg
or
out
ljmp
sub
int3
or
pop
xchg
aaa
clc
fs
push
filds
pusha
pop
pushf
sub
push
adcb
ljmp
sti
int3
pop
mov
adc
fdivs
pop
stc
je
inc
rorb
and
scas
dec
sub
inc
dec
icebp
lods
lea
sti
orb
dec
loope
sbb
test
in
into
insl
mov
call
out
inc
cs
dec
pop
test
pop
cli
adc
dec
cltd
mov
rcll
cld
insl
inc
adc
ljmp
test
adc
aad
rorl
jb
lcall
pop
inc
or
and
fistps
inc
sbb
pop
rclb
xor
fisttpll
xor
ret
insl
je
dec
mov
decl
lahf
xchg
lea
int3
ljmp
sbb
mov
or
sbb
sub
addr16
sbb
dec
lret
das
cmpsl
xor
jmp
mov
fbld
pop
jecxz
mov
and
mov
jnp
xchg
fstpt
sub
add
call
std
fwait
mov
xor
repz
xchg
xchg
pushf
cmp
sbb
xchg
jno
fdivr
ljmp
push
je
and
cmpsb
push
movsb
loope
mov
push
clc
aas
test
xchg
xchg
xchg
jae
imul
add
imul
pop
lret
popl
jge
pusha
jg
and
nop
push
pop
pop
push
sbbl
jmp
sub
xchg
mov
mov
xor
lds
aad
ret
dec
xchg
in
test
mov
ljmp
int3
mov
call
inc
dec
call
xor
ja
dec
jl
adc
arpl
bound
xor
sbb
or
repnz
ja
pushl
scas
pushf
movsb
cwtl
cmc
jno
test
outsl
and
xor
call
enter
jg
decb
loop
dec
jae
adc
xor
pop
aas
xor
dec
insb
sub
mov
push
arpl
push
enter
inc
pop
push
dec
jg
icebp
ror
pop
subl
shlb
call
push
test
stc
scas
das
es
call
out
xchg
pop
hlt
sbb
xorl
and
negl
addr16
push
fists
fidivrl
loop
jp
es
sti
xor
inc
lock
and
out
stos
in
inc
insb
hlt
decl
rcll
out
pop
pop
sbb
sub
dec
dec
incl
bound
inc
pop
subl
pop
pop
icebp
dec
fs
lcall
sbb
mov
cltd
xor
add
pop
test
fbstp
fstl
cmpsb
inc
add
jg
dec
jg
test
lods
adc
test
adc
decl
mov
xor
lea
push
mov
add
pop
pop
jg
aaa
xor
mov
lret
mov
fmull
fadds
in
pop
or
jg
into
sbb
pop
iret
or
pop
in
push
roll
push
clc
ljmp
lret
out
ljmp
jns
dec
and
loop
jp
jp
jle
gs
sub
out
ljmp
insl
outsb
mov
aaa
jnp
jne
xchg
stc
or
mov
add
out
cli
jmp
movsl
call
stos
test
pusha
clc
test
pop
jmp
lret
dec
incl
stos
lret
adcl
add
dec
or
lcall
lock
clc
lock
repnz
out
call
call
push
sub
adc
or
jmp
mov
inc
arpl
jne
pushl
hlt
cmp
jnp
shll
sbb
mov
insb
call
xor
lock
add
pop
pop
fsubrp
and
in
jne
es
cmc
lods
pop
adc
sub
in
push
loop
jmp
sub
add
jl
xor
shlb
insb
movsl
or
cltd
sbb
mov
mov
sahf
or
test
lcall
sarb
shlb
ret
and
and
mov
jmp
push
nop
mov
shrl
xor
aad
aaa
mov
jg
push
imul
sub
dec
mov
je
mov
ret
mov
aas
sub
mov
icebp
out
cmp
or
xor
jg
leave
or
pop
test
lcall
repnz
xchg
inc
sub
mov
xchg
iret
sub
pop
mov
mov
incl
dec
pop
jbe
in
xchg
cmp
push
pop
lret
aam
xchg
loope
xor
lret
in
jecxz
inc
push
pop
movsb
xor
mov
xchg
ficoms
fldl
jo
lcall
xor
sbb
sete
fisubrs
je
jnp
scas
mov
inc
mov
pop
imul
xchg
mov
inc
test
ja
enter
ljmp
pop
and
je
outsb
or
cs
push
icebp
test
addl
cli
in
test
mov
mov
mov
movsl
shrl
push
mov
and
mov
pop
pop
or
jg
pop
sub
push
pop
sarb
std
incl
ljmp
and
push
sbb
xchg
jbe
add
dec
mov
addl
push
aad
pusha
cltd
add
rorl
and
enter
add
cmc
int3
imul
jmp
add
fucom
insb
mov
mov
mov
jmp
inc
cmpsb
aad
mov
jmp
fucom
mov
pop
rcll
xor
test
es
lea
cli
test
cld
mov
push
sar
popa
pop
mov
call
in
mov
add
lcall
andl
push
pop
lcall
movsl
inc
or
sbb
push
dec
adc
jge
fisubrl
dec
das
imul
fstps
pop
add
repz
rcrb
int3
sbb
std
mov
mov
sbb
inc
lods
minps
cld
xor
adc
jno
popf
mov
out
out
lcall
inc
dec
jmp
lret
push
cmp
out
or
mov
fistpl
rorl
mov
incl
mov
je
sbb
bnd
enter
ds
dec
shll
pushf
xor
je,pn
sbb
inc
adc
sbb
hlt
into
or
lods
test
lahf
mov
sub
xor
call
shlb
jo
sbb
adc
stos
fists
inc
and
leave
test
mov
push
cld
ljmp
arpl
lahf
xor
ja
fsubl
imul
or
sti
and
data16
inc
rcr
pop
in
cli
fwait
push
xor
mov
outsb
adc
lcall
inc
cmp
shl
mov
sahf
jmp
xchg
icebp
or
mov
push
mov
repz
fbld
shl
push
push
push
pop
insb
fcmovb
sub
lods
xlat
imul
jmp
data16
add
test
dec
pop
js
je
mov
dec
mov
inc
call
cmpl
add
das
pusha
mov
inc
popa
insb
add
test
push
shr
push
decl
inc
adc
aad
in
pop
and
pushl
or
popf
gs
or
or
push
sub
popa
out
enter
fwait
dec
std
shlb
add
pop
xor
pop
int
and
jmp
cmp
mov
loope
lods
xor
push
bound
cmpb
pop
sbb
hlt
pop
std
decl
add
jo
lcall
dec
insl
xchg
jp
clc
lods
outsb
aad
outsl
mov
fsubp
rcrl
inc
rorb
inc
dec
mov
mov
mov
fwait
ljmp
inc
mov
clc
rorb
lret
jne
push
arpl
sbb
xchg
std
push
xchg
fiaddl
pop
outsl
inc
jmp
inc
sbb
xor
pop
out
mov
bound
push
mov
jmp
xchg
dec
inc
nop
cmp
lahf
data16
aas
pop
push
dec
mov
dec
in
xor
xchg
and
sub
mov
dec
iret
sahf
pop
jp
and
push
xchg
mov
inc
sbb
mul
je
mov
pop
cld
cmp
outsl
adc
daa
xor
pushf
mov
inc
jp
jmp
mov
sub
fs
sbb
push
sbb
ss
push
mov
pop
xor
dec
adc
add
sbb
iret
call
xor
subl
js
cmp
lahf
pushl
mov
imul
clc
sub
jo
sbb
mov
jg
mov
nop
dec
add
ffreep
xor
rolb
jb
xor
ljmp
xchg
dec
outsb
loope
test
and
cmp
pushf
scas
sub
out
cmpsb
xchg
or
mov
xchg
add
dec
cmp
pop
insb
leave
mov
push
adc
jecxz
std
lret
push
es
pop
hlt
pushf
imul
loope
mov
scas
cli
add
xchg
xor
loop
in
mov
out
jnp
scas
sarl
pushl
cld
inc
outsb
in
dec
or
mov
movsl
loopne
jl
pop
mov
inc
mov
cld
jmp
inc
test
and
in
stos
and
dec
insb
adc
jg
sahf
push
jg
outsb
and
std
jge
pop
lea
lcall
xchg
jae
rcrl
mov
sbb
sbb
test
mov
repz
lcall
imul
loopne
inc
sub
and
inc
dec
inc
dec
fisttps
pop
cmpsb
sar
incl
testl
cmp
lret
push
jg
jg
dec
cmp
gs
pusha
insl
insb
fwait
pop
imul
fdivr
nop
mov
cltd
sbb
fcomip
ljmp
rorb
shl
inc
inc
or
loope
adc
jne
cli
xchg
movsl
jno
add
mov
or
lea
jmp
sub
adc
imul
and
icebp
inc
stos
cmp
add
xor
inc
popa
in
call
fnstenv
nop
cld
das
arpl
out
lods
pusha
ret
stos
push
mov
xlat
lods
mov
stos
aaa
mov
xchg
jo
sub
pop
clc
inc
sub
xor
xor
xchg
sub
sub
clc
ljmp
pushf
lods
cmpsb
xor
mov
and
pushl
scas
cmpsl
sbb
push
dec
outsb
xchg
xor
fwait
push
cmp
xchg
xchg
popf
dec
sub
mov
jno
push
push
mov
jmp
cmc
notl
sub
icebp
dec
daa
int
push
add
cmp
ret
add
jno
gs
mov
dec
and
nop
and
dec
insl
xchg
cltd
and
and
gs
shl
call
sub
adc
cmp
lods
loope
and
add
aam
lods
jl
xlat
mov
add
mov
jmp
fucom
fldenv
mov
inc
int
push
mov
xor
aaa
in
cmpsb
mov
xorb
scas
in
rclb
decl
push
dec
test
test
cmp
das
nop
or
jle
sub
mov
decl
cmc
jle
shll
and
lods
xchg
inc
push
xor
nop
sbb
jecxz
call
mov
out
sub
cltd
mov
cmp
in
push
sub
decb
repz
ja
sbb
mov
loopne
pop
icebp
incb
cmpb
lea
pop
or
dec
xor
sbb
adcb
jg
adc
fstpl
stos
and
push
jns
test
pop
push
aad
test
dec
and
pusha
sbb
pop
xor
inc
push
dec
jge
dec
aam
scas
adcb
and
ss
cltd
adc
in
call
ret
jo
mov
inc
xchg
nop
adcb
inc
add
in
lahf
xor
or
lock
ret
mov
dec
jecxz
or
jne
push
mov
decl
mov
jae
in
xchg
int
pop
sti
pusha
cmp
test
pop
lock
pop
pop
mov
jmp
mov
cli
or
lcall
out
adc
mov
mov
divl
and
clc
cmp
pop
sub
lods
pop
decb
add
iret
in
mov
sbb
lret
mov
lcall
sub
nop
shlb
inc
test
test
mov
cmp
cmp
adc
cli
jnp
mov
in
pop
stos
ja
clc
out
ljmp
xchg
mov
sub
jmp
gs
testl
sub
into
mov
jg
sub
adc
push
arpl
xor
fs
sbbl
mov
or
push
xor
jg
cmpsb
cld
sti
hlt
cwtl
insb
jno
pop
and
mov
lret
stos
mov
add
mov
jae
cmc
jl
rcll
sub
incl
xchg
xor
mov
dec
cmp
scas
or
repz
notb
ljmp
repnz
pop
add
aas
and
fwait
mov
pop
push
cld
hlt
sbb
aaa
scas
mov
sbbb
int
inc
iret
or
loop
and
lcall
push
mov
aam
cli
add
push
clc
dec
sub
call
push
lret
xor
dec
decl
xor
inc
clc
insb
js
mov
fwait
inc
push
mov
imul
xchg
aad
ljmp
and
adc
fcoml
dec
xchg
mov
cmp
lods
push
mov
add
in
mov
pushf
mov
sbb
orb
cmc
leave
fiadds
lret
sbb
dec
pop
push
aaa
push
xor
out
je
sbb
push
fst
add
out
mov
lcall
repnz
out
mov
dec
lahf
ljmp
insb
push
jp
lahf
int
jle
fwait
sub
ljmp
mov
pop
jb
divl
cmp
and
dec
loope
inc
jo
mov
in
fcompl
mov
inc
cmc
jp
mov
movsb
adc
sbb
jg
mov
push
mov
cltd
enter
pop
pushf
adc
fsubr
stc
sub
call
mov
push
je
pop
adc
dec
inc
pop
adc
and
ljmp
cltd
lret
xor
jno
ljmp
xchg
sub
push
daa
inc
lds
out
fsubrs
dec
cmpb
push
mov
mov
cmp
popf
ja
pop
push
lock
xlat
mov
pop
cmp
call
call
ret
movb
setle
int
mov
std
bound
sbb
push
cs
subb
xchg
inc
push
fdivl
jle
ja
fcoms
cmc
stos
sub
xor
pop
loop
cli
jbe
inc
jb
jg
or
shrl
cmp
fdivs
mov
mov
mov
push
xor
ljmp
and
pop
mov
outsb
test
cmpsb
xorl
inc
xchg
int3
pushf
shlb
repz
cs
popf
fucomip
sub
lcall
and
adc
mov
xchg
sahf
dec
aam
dec
adc
ret
shll
push
pop
cmc
pop
jmp
lcall
xchg
add
lods
sub
loopne
sbb
jmp
test
sbb
jbe
mov
adc
popf
mov
push
and
or
incl
and
jge
cs
dec
pushf
pop
ss
arpl
jb
and
fcomip
push
aam
cmp
fcmovnbe
decl
call
sarb
in
je
push
jb
pop
jo
movsb
push
movsl
rcll
loopne
fdivrl
sbb
push
fldcw
adc
jl
ror
or
add
jg
call
std
jmp
dec
hlt
mov
add
jne
add
clc
pop
inc
jb
sti
push
mov
js
mov
stc
out
shr
test
pushl
xchg
rcl
cmp
mov
addb
sbb
ficomps
push
scas
cli
jg
lods
adc
cmp
push
xor
xchg
ljmp
push
cmp
lea
push
fisubrs
outsl
out
and
jle
sbb
lods
movsb
mov
lcall
jno
and
cmpsb
inc
mov
test
into
mov
imul
hlt
mov
icebp
jmp
andw
fildll
pop
inc
insl
pop
xor
push
pop
lret
adc
pop
mov
in
pusha
sbbb
mov
sti
test
test
mov
mov
loope
stc
lcall
out
js
out
cmp
pop
cmc
ret
mov
arpl
cmp
mov
sahf
cli
test
mov
lods
je
add
adc
repz
pop
rclb
loopne
mov
add
sbb
lds
outsl
jg
lcall
dec
hlt
movsl
scas
mov
pop
es
repnz
mov
xchg
pop
test
lcall
fsubrs
aaa
add
xor
in
test
js
pop
ret
ret
jnp
pop
cmp
pop
int3
fildll
arpl
mov
xchg
xchg
loopne
dec
cmpl
popf
in
inc
xchg
inc
xchg
xchg
mov
pop
xor
sub
jg
rclb
mov
xchg
rorl
inc
fadds
xlat
jmp
jl
jmp
mov
call
inc
inc
mov
push
jnp
scas
pop
decl
sub
sub
sub
and
adc
dec
test
and
shlb
daa
push
lods
fiaddl
enter
mov
xchg
adc
jmp
aaa
lods
xchg
fadds
fistpll
fimull
lcall
sub
sub
mov
mov
sub
lods
cmp
pushl
fisttps
loopne
pop
mov
sbb
push
push
lahf
fldl
xor
lea
aaa
sub
ljmp
test
jecxz
daa
outsb
inc
stc
cmpsb
loope
cltd
incl
test
push
imul
cmp
lods
inc
lret
repz
xchg
test
out
hlt
mov
mov
jb
adc
in
sti
nop
jbe
sub
adc
call
mov
push
enter
push
daa
call
pop
ret
mov
push
dec
xchg
cld
adc
movsb
iret
cmpsb
sub
push
repnz
inc
out
outsl
cwtl
mov
loop
jne
popf
scas
and
or
ljmp
aaa
adc
push
arpl
mov
and
push
int
ret
into
xchg
jg
xchg
add
call
dec
stos
enter
in
inc
push
ja
push
push
repz
mov
repz
shll
das
outsl
xchg
je
fdiv
je
pop
jecxz
pop
sub
aam
jg
and
or
shlb
inc
xlat
decl
push
cli
js
xchg
add
xor
mov
mov
cmp
je
mov
pusha
pop
out
xchg
incl
rcll
fsub
or
outsl
rcl
push
sbb
sbb
pusha
jecxz
push
mov
clc
aas
xor
inc
shlb
into
mov
movsl
pop
rcrl
pop
mov
add
enter
mov
sahf
decl
jp
ret
mov
pop
testb
mov
fs
scas
or
decl
push
scas
xor
pop
xchg
notl
outsl
and
cmp
cmp
or
add
dec
fbstp
decl
imul
inc
xor
push
push
lock
pop
xchg
icebp
mov
stos
cmp
nop
cmc
mov
adc
test
stos
pop
mov
adc
and
inc
sarb
mov
loop
pop
gs
ds
ret
cmp
outsl
ljmp
dec
pop
or
je
fistpll
jmp
jo
jg
inc
stc
addr16
cmc
and
jp
dec
xchg
mov
push
cmpsb
sbb
jbe
xchg
clc
pusha
out
cli
jmp
out
or
add
shl
pop
fistpll
sub
aad
scas
mov
stos
lods
inc
push
shlb
mov
push
sbb
ljmp
lcall
stos
adc
sbb
push
xor
push
lahf
repz
mov
mov
stos
sub
out
add
xchg
mov
roll
mov
or
inc
pop
icebp
xchg
test
ljmp
inc
lock
test
push
mov
push
sub
push
add
aad
push
sarl
stc
xor
cmp
pushl
xor
pop
inc
cmp
mov
or
adc
das
dec
add
jmp
scas
stc
out
xchg
push
cmp
rolb
filds
push
push
pop
lock
inc
mov
push
mov
or
aaa
fadd
sbb
xor
lods
add
fwait
cmp
add
pop
pop
jb
subb
lahf
mov
and
dec
sar
jo
adc
mov
call
mov
mov
or
iret
sti
ret
jae
rcrb
in
mov
test
lcall
pusha
stc
outsl
dec
lret
rclb
shll
negl
mov
cmpsb
push
ss
push
stc
cmp
mov
pop
sbb
jg
sub
and
fistps
xchg
test
and
or
ljmp
popl
and
adc
pop
dec
inc
loope
out
mov
test
sbb
push
es
xchg
out
popa
clc
std
in
push
add
jnp
int3
mov
subb
leave
dec
das
imul
inc
hlt
mov
adc
dec
jmp
lcall
mov
insb
dec
imul
nop
xchg
mov
fstpt
inc
call
mov
add
xor
jo
jno
fstpt
ror
call
call
test
pushf
xchg
and
mov
adc
inc
push
sbb
cmp
mov
mov
es
adc
lea
mov
nop
sbb
push
idiv
or
adc
aas
dec
cmp
loopne
xchg
std
mov
sub
popf
ljmp
cmp
inc
pop
lods
sar
sar
into
cmp
cmp
das
mov
icebp
aad
mov
jbe
call
adc
sti
rorb
ja
push
xchg
pushw
xadd
insl
std
jmp
or
rcll
add
fwait
or
xor
and
xchg
pop
cmc
pop
mov
pushl
xchg
lcall
cld
xchg
xor
xor
popa
test
imul
mov
jge
push
or
in
int
mov
mov
jmp
ljmp
adc
pop
aam
lcall
or
sbb
and
fsub
addb
xchg
decl
xchg
and
sub
and
mov
mov
fimull
fwait
xchg
cmpb
mov
lds
xchg
add
outsl
clc
les
cs
dec
cld
out
daa
arpl
inc
fbstp
or
mov
xchg
pop
jle
mov
or
sbb
or
dec
cli
add
scas
es
lock
popa
decl
xor
int3
popa
sbb
std
or
sti
shll
mov
adc
or
ljmp
out
cmp
ds
or
xchg
or
movsb
shl
mov
shlb
insl
sub
fcmovnb
sti
adc
cmp
dec
int3
lret
jmp
xchg
pop
mov
stos
pop
inc
ficomps
mov
psubq
clc
jge
mov
mov
movsl
fdivrl
in
fucomi
mov
lods
hlt
lret
dec
imul
pop
out
je
sub
dec
push
dec
in
test
lds
lret
push
shl
daa
scas
add
xchg
test
sub
rol
mov
lds
jg
into
movsl
fnstcw
loopne
mov
popa
shll
push
jmp
arpl
mov
or
pop
aad
mov
mov
jg
ret
dec
pop
das
outsl
icebp
ja
mov
fs
push
call
mov
test
jmp
and
mov
pop
xorl
out
call
push
or
cmp
mov
sahf
ljmp
rcl
cmpsb
push
enter
cli
call
cmpb
iret
cmpb
js
lods
pop
aam
pushf
cmp
xchg
push
xchg
ds
cld
sbb
cwtl
adc
sub
cs
outsb
out
lret
xchg
imul
call
cmp
push
or
das
cmpb
push
daa
adc
dec
add
push
lahf
jbe
mov
test
lock
ret
movsl
jmp
test
jl
popa
subl
sbb
inc
and
jg
into
shlb
dec
jae
xchg
sbb
pop
pop
outsb
jno
jecxz
or
stos
shrl
jae
bound
ljmp
sub
testl
repnz
mov
cwtl
scas
xchg
or
xor
loop
pop
mov
inc
js
push
mov
outsl
xchg
repz
nop
jb
cmp
lock
adc
adc
mov
jmp
pop
out
sbb
pop
test
imul
mov
popa
mov
mul
arpl
lret
cs
mov
jmp
je
mov
dec
in
mov
mov
add
and
aam
dec
imul
in
mov
fldl
push
and
pop
mov
cmp
decl
mov
mov
imul
cmc
nop
cld
in
sbb
incl
sbb
mov
push
add
jbe
mov
out
je
pushf
xlat
or
pop
rolb
lea
dec
jle
dec
or
sub
mov
inc
inc
fstps
pop
addr16
repz
in
loopne
rorl
and
xchg
aas
and
leave
cmp
push
add
roll
dec
js
xchg
dec
cld
lods
pop
aad
jmp
add
out
clc
mov
enter
lret
mov
rcrl
xchg
dec
push
repnz
call
jp
add
adc
in
push
fs
mov
fstpl
xor
jns
lret
call
xchg
mov
nop
mov
in
enter
fcompl
inc
mov
cld
frstor
fidivrs
jg
rol
rcll
lcall
scas
pushl
lcall
mov
or
push
lds
cld
dec
in
jge
out
xor
adcb
and
push
std
jmp
fcmove
xchg
and
ss
cwtl
cmp
movsb
repnz
jae
clc
dec
jge
fldcw
inc
jno
sar
jg
and
test
sbb
sbb
pop
cwtl
sbbb
jmp
je
call
std
adcl
fstpt
push
jmp
push
popa
test
push
imul
push
pop
xor
cmp
lock
sbb
rclb
and
sar
decl
ss
cmp
xor
inc
hlt
push
jne
jne
push
repnz
shrl
scas
mov
loopne
rcrb
addr16
les
inc
jg
fidivl
mov
div
add
sarl
sub
pop
sbb
mov
pop
pushl
sub
sub
insb
dec
in
cmp
mov
add
pop
icebp
dec
in
out
mov
decl
xchg
pop
ret
sahf
fcos
mov
call
clc
shlb
cmp
dec
sbb
aam
out
and
lcall
iret
jno
setbe
push
sub
push
mov
mov
pop
pop
sub
lahf
cmpl
cmp
es
negl
sub
cmp
inc
add
call
mov
in
pusha
arpl
jnp
mov
decl
lahf
sub
int
aaa
icebp
sub
pop
push
mov
int
fs
adc
or
inc
stos
mov
sbb
lret
fmull
lcall
popa
addb
mov
ror
cs
push
in
pushf
inc
or
es
fnstsw
push
pop
xor
mov
jnp
sub
lahf
inc
adc
mov
push
add
lea
xchg
ss
je
imul
jmp
das
ss
daa
mov
mov
cld
insb
xchg
aam
cltd
push
movq
sub
add
fadds
cmp
int3
jge
inc
push
jmp
sbb
lods
cmpb
lret
outsl
add
out
jl
and
dec
jge
xacquire
dec
lods
sarl
add
fsubs
lods
dec
push
arpl
and
push
ja
push
cltd
popa
jle
xchg
faddl
movsl
mov
xchg
jecxz
add
xchg
call
out
loope
cld
or
xchg
das
dec
fstps
ret
push
in
mov
inc
jge
push
lock
jg
leave
into
xor
movsl
mov
add
rcll
stos
lcall
jecxz
lds
lds
push
xchg
loop
and
adc
add
jmp
xor
jmp
lahf
call
mov
int3
inc
repnz
xchg
xchg
jno
xchg
stos
mov
decl
ficomps
into
or
mov
push
inc
pop
imul
cld
fisubrl
cmpsb
out
push
lcall
popa
fldcw
pushf
dec
mov
mov
jmp
ja
nop
mov
clc
fwait
cld
xchg
int
call
sbb
mov
cmc
pushl
adcl
push
mov
or
cltd
xchg
stos
xor
out
cltd
es
imul
lret
adc
cmp
cmc
mov
inc
aad
jns
loope
mov
cmp
cmp
cld
and
xchg
push
xor
icebp
jmp
xor
ret
jbe
push
pop
inc
push
jmp
cwtl
adc
or
loop
sub
adc
imul
jns
pop
cwtl
ret
test
ret
cmpb
andb
push
call
loop
push
enter
cmp
cmc
stos
les
lea
or
loopne
mov
cmp
int
mov
jl
rcll
pushl
cmc
xor
outsl
addb
pop
pop
push
add
xchg
dec
lods
jmp
jge
fcomip
decl
mov
jp
insb
int3
out
arpl
out
loopne
xchg
rclb
xchg
mul
call
std
lcall
aad
xchg
loopne
sbb
xchg
pop
add
fwait
ljmp
adc
jb
push
testb
dec
mov
sub
test
idiv
mov
pop
pushf
out
pop
add
sbb
loope
ljmp
je
cmp
sub
pop
dec
incl
xchg
lretw
bound
jp
xor
adc
jp
fiadds
in
popa
fcmovnu
lock
shl
push
les
lods
dec
shrb
je
xor
arpl
rcrl
call
fsts
mov
popa
sub
adc
mov
jmp
cmpsb
sbb
mov
out
and
inc
gs
xchg
adc
dec
adc
pop
call
mov
push
sbb
insl
push
ljmp
loopne
xchg
push
ret
or
add
out
movsb
pop
fwait
shll
cmc
mov
push
sub
decl
pop
add
leave
add
nop
dec
insb
xor
mov
jecxz
adc
decl
lcall
jbe
dec
icebp
lret
scas
sbb
add
or
fwait
push
push
jno
xchg
sbb
call
xor
mov
xchg
cmp
mov
inc
xchg
scas
cs
cmpsb
leave
ljmp
inc
clc
lret
xchg
call
push
cmpsl
mov
decl
stc
imulb
inc
jecxz
fwait
and
aam
xor
xchg
pop
gs
aas
pop
or
movsb
push
int3
jg
incl
dec
outsb
ja
ja
jmp
xor
jbe
xor
in
incl
mov
xchg
and
xor
push
sbb
std
dec
or
xchg
popa
mov
stc
xor
lret
fsubs
aam
mov
jbe
jmp
dec
push
mov
into
sub
push
mov
call
ds
adc
xchg
jl
daa
add
call
sub
mov
or
bound
jg
in
sbb
sbbb
inc
adc
movsb
out
xor
jl
call
arpl
push
xchg
popa
daa
scas
push
xchg
out
pop
out
xchg
push
ret
and
out
cli
dec
xchg
or
and
loope
lds
cmp
movsl
xor
int
cmp
fildll
mov
out
loopne
icebp
iret
or
incl
cs
sub
dec
jns,pt
ljmp
mov
rclb
or
je
in
pushl
cmpsb
lods
push
inc
out
int3
rcrb
adc
xor
or
loopne
enter
ljmp
xor
cmp
or
jo
imul
call
jmp
sbb
lret
outsb
ss
outsl
js
js
dec
sarl
repnz
aam
call
mov
test
repz
mov
xchg
and
xor
stc
repz
mov
clc
lcall
pop
xchg
dec
cmp
jmp
xor
mov
mov
mov
lods
add
adc
mov
js
decl
jae
jmp
mov
mov
jmp
or
sbb
jg
into
andb
ljmp
jge
in
divb
mov
xor
inc
inc
jbe
rorb
pushl
cld
and
cmp
arpl
xor
pop
mov
cmp
test
leave
out
sbb
js
jl
testb
sbb
das
jg
mov
cmpsl
xchg
sbb
xchg
fstps
fcomip
jmp
fnsave
or
cli
test
movsl
nop
add
incl
cmpsl
test
pop
jge
adc
mov
mov
cmp
push
in
cli
retw
push
and
jle
mov
sub
lods
push
and
arpl
lret
xor
inc
out
pop
mov
cmp
or
jmp
and
xchg
xor
and
shlb
stos
das
nop
mov
add
adc
xor
pop
and
pop
add
rcll
inc
frstor
test
ljmp
cmc
int
shlb
pop
cmp
sub
pop
fwait
dec
sub
cmc
jmp
daa
out
lahf
data16
mov
outsb
jle
dec
jge
push
ja
adc
mov
gs
ljmp
add
mov
push
dec
in
dec
popa
add
aas
sbb
mov
jle
push
popf
dec
fs
push
cli
scas
ds
xlat
aas
adc
shll
ds
inc
stos
add
mull
cld
sbb
cltd
mov
sub
sar
jg
sti
ffreep
ljmp
lahf
fwait
push
push
jmp
push
loop
sar
mov
out
sub
sarb
orw
aam
pushl
cld
out
mov
sbb
rcrl
hlt
stc
mov
or
decl
movsl
sub
in
ss
sbb
movl
ljmp
dec
mov
sti
repz
push
out
test
ret
jnp
shrl
filds
add
int
movsl
ljmp
jge
mov
lret
mov
jge
ret
pushl
mov
mov
fldcw
outsb
push
mov
xorb
or
or
bound
sub
adc
push
fisttpll
cld
pop
or
imul
jl
inc
jae
mov
data16
sub
shl
out
jo
jne
call
fisttpl
inc
jle
pop
cli
pusha
mov
pop
lcall
pushl
pop
mov
into
dec
and
dec
pop
outsl
outsl
add
lret
push
inc
dec
mov
fmul
lcall
lahf
push
inc
sahf
notl
jmp
out
ror
inc
loop
xchg
sub
or
mov
pushl
inc
add
push
les
scas
ds
cmp
jns
sbb
sub
aad
jo
scas
repnz
dec
orb
jmp
fistpll
adc
jae
push
pop
push
sub
jg
push
cmc
dec
jg
push
lds
hlt
mov
jne
jno
jo
ss
or
int3
push
fstpt
jle
cmp
mov
incl
jno
shlb
dec
int3
pop
sub
push
fdivl
insb
shlb
pop
mov
or
jmp
shl
cmp
das
outsl
mov
insl
inc
mov
mov
stc
nop
jmp
or
ja
dec
inc
pop
aad
or
incl
inc
push
stc
xchg
sbb
pop
imul
mov
in
add
and
dec
xor
inc
jmp
jg
test
push
jecxz
divl
push
mov
ljmp
and
cmp
and
adc
mov
loope
or
hlt
cmp
jno
mov
popf
ljmp
mov
sbb
in
outsb
iret
sbb
mov
xchg
jg,pt
pop
xchg
clc
cmp
jne
es
xlat
adc
xlat
add
repnz
incl
lea
push
pop
sarb
fisubl
addb
mov
nop
cmp
xchg
dec
jne
xchg
inc
nop
pop
lahf
ljmp
cmp
call
addr16
cmp
add
jge
adc
sbb
test
popa
jl
add
incl
test
lcall
sbb
lcall
xor
xchg
cmp
es
fistpll
loopne
je
mov
sub
shll
adc
jg
jp
inc
mov
arpl
lret
mov
fisttpll
dec
mov
decl
les
xor
adc
mov
pop
dec
inc
sub
movsb
test
iret
dec
mov
mov
ret
add
dec
clc
fmulp
das
jne
mov
or
aam
out
cli
call
stos
and
mov
and
insl
je
nop
xchg
jmp
in
mov
xchg
push
into
ljmp
lcall
dec
ljmp
call
mov
inc
jg
shlb
jb
mov
inc
and
xchg
jb
repz
imul
mov
mov
push
ja
sbb
stos
mov
divl
loopne
cmpsl
xor
mov
pop
insl
mov
shrb
mov
arpl
sub
xchg
and
inc
test
xchg
in
cmp
mov
fwait
inc
std
std
pop
sarl
mov
mov
jge
or
outsl
mov
scas
lods
lea
rcr
sbb
jecxz
ret
adc
fwait
test
add
rcl
or
jns
lods
inc
jg
pop
pop
lret
lret
inc
pop
cmpsb
xchg
icebp
add
jo
cmp
ja
aad
and
sbb
inc
dec
add
pushl
in
inc
and
jne
mov
jg
pop
push
aas
xor
fisubl
in
repnz
or
aad
add
test
jmp
and
xchg
xor
xorb
call
push
fdivs
icebp
pop
lcall
loop
mov
mov
dec
inc
in
xor
pop
scas
rcrb
out
decl
hlt
inc
jo
dec
sbb
pop
imul
sbb
test
ljmp
mov
mov
or
dec
xor
and
call
dec
jl
jae
lock
testl
out
in
push
mov
cli
gs
mov
ds
in
xchg
pop
jecxz
ficoml
dec
xchg
popl
cmp
movsb
addb
jge
pop
mov
cmpb
inc
icebp
push
jo
scas
ret
imul
iret
arpl
dec
pop
push
imul
decl
cs
or
xlat
mov
es
mov
mov
ficoml
icebp
icebp
in
sub
sub
mov
adc
inc
lock
pushl
pop
adc
jno
adc
sub
cltd
and
xchg
mov
and
test
jg
dec
jnp
lods
sub
xlat
data16
pop
push
and
shlb
enter
jg
mov
xlat
enter
jecxz
mov
sbb
loopne,pt
fldenv
lret
cmpsl
or
dec
fmull
adcl
hlt
lea
bound
add
decl
or
pusha
mov
adc
fstl
mov
incl
call
repz
xor
add
xchg
jmp
xchg
xchg
mov
hlt
lods
mov
push
mov
xchg
ret
jmp
je
sbb
sbb
sub
xchg
mov
icebp
pop
das
cltd
push
and
pop
scas
sar
std
gs
pop
insl
cmp
or
pop
xchg
push
cmpl
or
ljmp
jl
cmpsb
push
cmp
testb
test
test
leave
lods
iret
push
pop
aas
mov
and
adc
arpl
mov
movsb
or
jo
pop
pushl
aam
pop
add
test
arpl
ljmp
jb
xor
loope
dec
mov
es
mov
ja
mov
inc
arpl
jmp
in
arpl
movsl
popf
push
mov
enter
sub
jl
fstpl
mov
incl
outsb
sbb
mov
dec
xor
in
clc
icebp
cmp
lods
shrl
and
push
movsl
aaa
inc
stos
stc
popa
mov
pushf
adc
push
or
js
ficomps
cmp
imul
lcall
cmp
xchg
adc
mov
push
hlt
cmp
imul
pop
or
leave
fnstcw
insl
cmpl
scas
lock
je
inc
or
jge
loopne
lods
cmp
push
in
adc
gs
sbb
and
sub
fcomi
fisttps
fstpl
add
popa
mov
mov
je
sbb
ljmp
mov
dec
ret
or
pop
mov
rclb
ficomps
hlt
mov
ja
mov
sub
into
fs
xchg
adc
ljmp
aam
pop
mov
push
ret
mov
sbb
mov
shrl
jl
inc
xor
jo
nop
add
jp
push
mov
dec
aaa
out
mov
inc
and
adc
loope
les
mov
or
ljmp
loope
cmpsb
xor
aad
inc
adc
xor
mov
xor
mov
ljmp
mov
into
enter
imul
cmp
mov
mov
bnd
gs
jbe
fadds
xchg
cmpsb
or
pop
iret
js
xor
dec
jg
out
push
ljmp
inc
push
test
mov
dec
dec
imul
xchg
xchg
xchg
clc
nop
add
jmp
in
xchg
bound
inc
shl
pop
mov
lods
xchg
sbb
jg
xchg
mov
fsubrl
mov
dec
loopne
pop
fistpll
out
jmp
int
dec
insb
cltd
mov
movsb
or
adc
rorb
jmp
push
xchg
sbb
loope
mov
mov
pushl
pop
mov
into
subb
and
mov
sahf
nop
scas
adc
add
push
or
mov
dec
aas
das
pop
dec
xchg
out
lods
mov
xchg
pushf
jge
inc
ss
decl
sub
push
xchg
sbb
dec
jecxz
push
ja
int
imul
pop
sub
andnps
decl
std
push
xor
mov
cmpsl
iret
lods
adc
or
insb
dec
mov
push
fs
cmc
or
inc
and
test
pop
push
das
loop
dec
and
setnp
dec
xchg
incl
outsb
mov
xchg
dec
cmpsl
fdivs
sbb
add
xlat
or
and
mov
inc
sub
sub
mov
and
and
or
sbb
inc
adc
orb
cld
sti
aas
pop
cmp
incb
pushw
scas
into
mov
sub
leave
sahf
jnp
outsb
sub
jecxz
ja
cmp
fbld
push
and
mov
add
jg
and
test
sub
push
ret
mov
or
into
cmp
inc
xchg
les
loop
sbb
push
lcall
cmp
in
incl
cwtl
dec
add
inc
dec
out
lock
jle
dec
xlat
pop
push
aas
add
adc
outsb
jb
test
sbb
adc
cmp
mov
push
jl
sbb
sbb
jmp
dec
fwait
cmpsb
cmp
cmc
sbb
dec
ret
pusha
in
lret
pushl
add
pusha
adc
stc
xor
shlb
add
xchg
call
dec
cs
neg
mov
adcl
jns
and
xchg
lods
add
call
icebp
sbb
mov
testl
or
mov
mov
pushl
testb
aam
std
test
and
adc
xchg
jg
inc
fstpl
inc
mov
sbb
in
in
out
jg
movsl
inc
inc
dec
jle
sub
mov
xchg
add
les
push
jg
and
xor
or
xor
add
pop
cmc
sbb
scas
insb
mov
out
stos
into
cmp
fildll
sub
insl
cmpb
cld
xor
sbb
and
inc
dec
and
mov
cld
loope
inc
and
jg
movsl
cmp
sub
xor
sub
sar
xchg
clc
push
test
adc
aam
ret
ljmp
push
daa
sar
lcall
push
ds
push
inc
xor
cmp
mov
hlt
push
je
sar
pushl
add
addb
dec
xchg
inc
inc
outsb
mov
lcall
mov
sub
pop
adc
repz
scas
xrelease
mov
adc
jl
mov
pushl
add
and
test
sbb
ss
repz
daa
xor
loope
ljmp
rolb
xchg
pop
sub
mov
cmp
fidivrl
js
xor
pop
call
pop
out
sbb
adc
xbegin
push
int
push
cmpsl
pop
rcrl
mov
test
dec
lcall
es
add
jmp
mov
jg
adc
ffreep
data16
dec
mov
mov
xorb
mov
fbld
inc
sbb
dec
sti
sub
add
sbbl
out
call
push
inc
mov
jae
sarl
jle
idiv
fisubrl
imul
in
loopne
cmp
or
ret
jae
scas
rorb
cwtl
dec
inc
out
clc
inc
cmp
push
inc
mov
add
dec
neg
or
lcall
fcmovnb
scas
sbb
out
mov
mov
mov
movsb
jns
sbb
add
cmc
out
ljmp
andl
call
sub
cmc
lcall
add
in
out
insl
or
or
or
adc
scas
stc
cmpsb
aaa
or
test
mov
repz
call
jle
in
pop
cmp
es
cmp
loopne
sub
and
fs
clc
or
xchg
adcl
nop
ds
cmp
aad
add
xchg
loope
popa
inc
sahf
loopne
stc
cmc
adc
out
xor
icebp
incl
call
pop
insb
stos
test
adc
fs
jg
sub
data16
mov
mov
fucomp
jne
dec
and
pop
pop
repnz
aas
mov
sub
decl
cmp
pop
cmpsl
jp
ficompl
mov
roll
add
jmp
test
inc
mov
cmpsb
pop
hlt
call
sahf
mov
push
fwait
push
out
mov
rorl
fcomps
notrack
ret
pusha
mov
xchg
push
sbb
ret
clc
ljmp
ss
jmp
insb
mov
sbbb
push
lock
mov
push
xor
and
imull
pop
jb
insb
lds
addr16
or
mov
incl
lahf
mov
nop
test
sub
cmp
adc
mov
and
incl
das
push
xchg
add
cmp
add
sahf
jl
in
rorl
outsb
push
scas
enter
sub
sbb
xchg
jmp
rorb
cmp
jg
fists
xchg
sub
pop
xchg
fsubrs
mov
sarl
jle
loope
push
clc
jmp
sbb
sbb
push
and
jmp
test
imul
push
jmp
xchg
cmp
decl
and
inc
iret
mov
add
enter
stos
sub
jg
scas
clc
sub
call
inc
rolb
push
inc
push
mov
call
pop
add
pop
fs
insl
dec
fisubs
lret
std
out
fs
nop
loop
cmp
out
imul
rol
ds
jbe
bound
sub
adc
in
jo
push
xor
cmp
jg
sub
and
clc
mov
jge
movsl
ss
cli
rorl
xchg
lods
adc
push
mov
jg
cmp
inc
aaa
test
jne
pop
inc
das
dec
sbb
xchg
or
xchg
dec
cmpsb
and
pop
dec
push
add
stc
inc
or
or
mov
adc
shl
lcall
push
adc
push
lds
daa
cmpsl
jo
arpl
mov
lret
fistps
mov
inc
push
jmp
cmpsl
aad
arpl
ja
mov
push
adc
mov
pushl
or
adc
loopne
ret
mov
push
xchg
js
aad
subb
decl
push
in
mov
test
push
add
filds
jecxz
mov
pop
adc
clc
adc
fistl
dec
pop
or
sti
mov
sbb
adc
popa
jg
scas
fstpl
add
mov
cmp
ljmp
adc
jae
cs
push
inc
ss
mov
and
jnp
movsb
addb
mov
mov
dec
icebp
aas
push
fs
ds
jmp
inc
pusha
mov
aas
orl
sbb
popf
test
icebp
xor
mov
mov
pop
inc
out
lret
mov
scas
mov
mov
lcall
pushl
std
mov
dec
outsb
mov
mov
lea
jae
pop
and
lcall
repnz
out
ja
or
stos
cmp
cld
out
sbb
mov
cli
pop
hlt
mov
pop
ja
mov
sub
dec
or
jno,pn
push
decl
adc
pop
lret
test
push
jp
mov
pushl
mov
inc
mov
jg
cmp
sbb
std
lods
add
cli
fbld
push
mov
mov
or
mov
gs
pushl
mov
and
insl
mov
decl
dec
ret
mov
sbb
repz
popw
movaps
inc
adc
fcomip
dec
fldcw
mov
rorl
js
cmp
lret
aaa
adc
ljmp
dec
mov
in
adcl
dec
xchg
push
pop
xor
icebp
das
loop
shrl
add
test
sub
inc
mov
movb
incb
stos
loop
insl
dec
lahf
dec
adc
cmp
pop
ds
and
jle
lock
call
mov
xchg
push
mov
js
adc
push
rcrb
lahf
mov
jmp
leave
jge
pop
jge
push
je
jne
dec
lcall
jbe
out
dec
pop
jo
mov
pop
jb
sub
sub
aas
lcall
push
push
bound
lods
pop
xor
mov
out
or
insl
iret
out
jle
sahf
cwtl
sub
loope
pushl
xchg
fstpt
loop
pop
rclb
shlb
fisttps
mov
mov
pop
mov
fisttps
mov
lcall
arpl
sbb
in
test
mov
enter
bnd
mov
and
jmp
xchg
in
or
xlat
pushf
xchg
sbb
movsb
dec
lds
jecxz
mov
cld
les
pop
aaa
jbe
ja
shlb
mov
jnp
dec
sub
sbb
jbe
sbb
int
push
ficoms
and
lret
sahf
cmp
stos
in
pop
jb
sub
cmp
inc
mov
push
jno
push
or
push
mov
add
cmc
add
call
jmp
xchg
sbb
imul
mov
adc
out
imul
add
movsb
rclb
adc
pop
fldcw
mov
pop
ss
cwtl
mov
mov
lcall
jne
int3
push
fisubrs
lret
jbe
cmp
push
add
push
mov
xor
call
inc
mov
push
xor
xchg
scas
rol
int
mov
push
mov
push
in
xchg
lcall
stc
mov
out
pop
negl
cld
fldt
add
outsl
outsb
in
sbb
mov
shl
xor
imul
mov
jg
xor
imul
inc
pop
xor
out
iret
xor
jno
pop
je
dec
cld
dec
rdmsr
pop
sti
mov
jg
xchg
dec
jecxz
mov
pop
sub
mov
jle
mov
push
je
pop
aad
fsts
mov
add
sbb
sub
mov
sub
sbb
call
adcb
aas
bound
out
negl
inc
mov
pop
cmpb
sar
lcall
cli
inc
test
mov
clc
test
repz
pusha
cmpxchg
addr16
lock
push
sub
add
xchg
lcall
or
outsl
in
and
bound
jmp
push
pop
jp
jg
ljmp
in
call
cwtl
cld
cmc
jbe
pop
xchg
push
fistl
rorl
aam
dec
pop
push
gs
or
popw
jmp
xor
and
adc
in
mov
out
xchg
fildll
and
mov
shrb
out
cmp
negl
decb
inc
hlt
incl
int3
out
cmpsl
and
mov
enter
dec
mov
mov
cmp
sbb
push
sarb
testb
mov
out
ljmp
repnz
and
jb
stos
sub
mov
iret
lds
clc
decl
xchg
adc
mov
cmp
std
decl
push
jl
pop
mov
lcall
call
mov
adcb
std
or
xor
pushf
jnp
xchg
frstor
shll
and
ljmp
add
lsl
mov
loope
push
and
dec
ljmp
test
loopne
scas
dec
inc
loop
mov
fistpll
andb
or
mov
fldt
sbb
cli
jecxz
bound
jle
xchg
test
call
pop
mov
insb
dec
es
add
jne
and
adc
pop
lods
cs
fistpl
lock
in
lret
arpl
insb
or
lcall
jb
mulb
adc
mov
or
or
add
xchg
mov
jmp
cmp
scas
iret
push
mov
nop
and
icebp
out
lock
call
add
xchg
xor
rcrb
cmpsb
dec
cltd
arpl
add
or
xlat
push
sti
in
decl
jge
mov
adc
cwtl
cmpl
pop
lret
mov
ret
bound
popf
sbb
cwtl
ds
lcall
mov
sti
gs
add
jle
xor
inc
push
pop
flds
sahf
add
popf
call
int3
pop
mov
lcall
mov
inc
sbb
mov
lds
lods
stc
pop
cltd
pushl
cmpb
enter
call
ljmp
jmp
adc
push
outsl
idivb
xchg
cld
out
or
lret
pushw
lret
enter
call
ret
inc
movsl
cmp
mov
fdivrp
data16
mov
mov
push
xor
outsb
dec
popa
es
jge
lods
inc
mov
pop
cmpsb
jg
mov
in
outsb
mov
xchg
test
pop
stos
adc
dec
pop
rcrb
xor
aas
test
pushl
mov
mov
stc
jno
inc
inc
xchg
jmp
jle
insb
decb
cwtl
mov
jmp
ret
ror
cmc
test
icebp
in
rcl
pop
ret
in
notb
jecxz
and
push
mov
rcrl
lret
adc
push
scas
sub
jle
sbb
sbb
xchg
mov
bound
clc
rcll
mov
sub
ljmp
aad
out
enter
jecxz
sbb
mov
mov
cmp
pusha
add
adc
aam
xor
sahf
adc
sbb
xchg
leave
cld
incl
mov
jbe
xor
or
xchg
mov
lods
add
jg
dec
sub
addr16
push
xor
adc
ljmp
add
pop
dec
mov
into
outsb
and
jns
dec
pop
adc
jmp
pop
rolb
insb
lea
mov
and
int
dec
es
mov
mov
adc
fsubrs
and
mov
and
loop
sub
sbb
jb
push
sahf
mov
aad
push
or
insb
stos
popa
mov
loope
es
xchg
subb
cmp
and
daa
xor
test
incl
test
mov
or
out
scas
pop
adc
mov
imul
icebp
std
std
xor
mov
cld
jno
cli
mov
rclb
inc
sbb
mov
pop
add
aad
sbb
lahf
cmp
inc
int3
in
and
mov
pop
mov
cli
nop
pop
shrb
pushl
pop
test
mov
je
orl
fisubl
lock
inc
aad
jg
lods
cltd
fistps
sub
xor
test
add
test
xchg
push
push
mov
xchg
inc
mov
test
mov
bound
xchg
mov
fsubl
xchg
sub
stos
sbb
jle
xor
incl
je
mov
or
pop
testl
popf
lock
imul
dec
jo
mov
add
xor
mov
cmp
add
jp
and
xchg
jmp
aas
cmp
in
mov
clc
dec
cmp
icebp
ja
cmp
rolb
addr16
lock
mov
dec
jp
dec
pop
fs
cld
clc
fadds
xchg
cmp
sar
pop
mov
jp
icebp
mov
jg
cmp
pusha
xchg
imul
jl
mov
jae
mov
inc
inc
icebp
sbb
data16
stc
das
dec
lea
das
sbb
add
xchg
adc
incl
xor
or
repnz
sbb
nop
popf
add
inc
jno
dec
lock
lea
roll
sbb
adc
lcall
js
lock
xor
les
out
cmp
mov
inc
cwtl
enter
xchg
ljmp
mov
cld
stos
jl
icebp
sbb
cmp
jl
pop
cmp
int
mov
andb
dec
adc
lods
inc
cmc
pushl
pop
loope
ljmp
daa
sub
xchg
mov
decl
and
iret
popa
cmp
mov
sub
test
lcall
out
inc
movsb
mov
dec
in
dec
fs
xor
cmpsb
xchg
xchg
mov
add
hlt
pusha
call
fbstp
or
fisubrs
addl
fwait
daa
dec
cld
jp
cmp
pusha
mov
fidivs
sub
popa
push
daa
xchg
lods
sarb
and
mov
inc
xor
xlat
dec
into
movsl
mov
push
ds
movsl
ljmp
push
dec
shll
gs
test
and
mov
and
mov
out
repnz
decl
dec
aam
xor
push
adcb
popf
adc
cmpl
dec
aas
rorb
out
sbb
and
sbb
in
es
outsb
push
outsb
aam
mov
incl
ret
imul
fwait
roll
hlt
jge
xchg
into
mov
sbb
xchg
inc
dec
jmp
leave
mov
adc
jmp
or
scas
mov
movsb
cmp
inc
jno,pt
xchg
push
bound
cli
mov
add
in
xor
lcall
pop
lcall
push
aas
xor
pop
mov
out
ljmp
lock
inc
add
push
mov
lods
or
popa
xchg
or
jbe
jmp
or
lock
fnstsw
jb
into
ss
lds
sbb
cmp
pushl
jmp
aas
scas
loop
pop
sub
ret
jle
push
popf
jl
ja
loop
scas
cli
call
xor
mov
push
jo
sbb
scas
add
sahf
lock
loope
call
inc
fnstcw
push
pop
daa
mov
jmp
inc
test
pop
dec
inc
fbstp
sbb
mov
test
xchg
pop
jnp
jo
cld
xchg
sar
mov
stos
jno
mov
mov
cltd
loopne
lret
cltd
outsb
es
std
mov
sbb
or
call
sbb
inc
flds
bound
add
jmp
test
lea
mov
mov
xchg
mov
aam
fmuls
outsb
lods
jb
mov
xor
andl
dec
mov
shll
clc
gs
hlt
scas
xor
fs
mulb
xor
mov
mov
add
and
jmp
popa
xor
aas
sub
jo
sbb
jge
cmp
in
gs
aas
xchg
lcall
shr
adc
daa
rcr
jl
insb
or
or
cli
mov
adc
mov
mov
jl
cs
fdivr
jno
inc
out
cmpsl
insl
mov
sbb
incl
and
xchg
or
mov
ss
arpl
mov
gs
adc
push
leave
sbb
pop
and
decl
fs
dec
push
popa
mov
jp
mov
push
xchg
leave
push
je
hlt
push
out
ljmp
adc
lret
xchg
mov
mov
fisubrs
frstor
call
sbb
rcl
ljmp
push
pop
inc
pop
mov
mov
ljmp
push
adc
jecxz
mov
mov
stos
jle
push
ret
cmp
pop
fisttps
jmp
fldt
mov
incl
loop
mov
je
inc
scas
call
xor
int
mov
push
xor
lods
loop
cmc
stos
insb
jp
xchg
mov
xor
add
cmp
jle
lods
bound
popf
arpl
pop
cs
call
in
mov
shlb
mov
inc
sbb
mov
outsb
dec
mov
sub
dec
mov
das
cli
and
mov
fdivs
in
jl
mov
ret
jns
dec
daa
aas
idiv
inc
mov
jmp
jne
jecxz
mov
stc
add
sahf
gs
cmp
mov
setg
mov
sarl
lret
push
movsb
push
sbb
mov
incl
inc
mov
gs
dec
jbe
arpl
das
insl
pop
mov
xor
ljmp
mov
ret
sahf
mov
cmpsl
jo
mov
push
ss
sbbl
jg,pt
sahf
loopne
loopne
xor
data16
cwtl
xor
jbe
addr16
push
mov
call
cmp
not
push
jne,pt
repz
jbe
mov
xlat
int
push
pop
cmp
js
mov
add
cmpsb
sbb
pop
push
xchg
dec
test
jmp
data16
inc
sbb
mov
out
lcall
addr16
in
xchg
add
lret
lods
inc
mov
lds
loop
mov
sub
scas
mov
and
ds
outsb
inc
rorl
jmp
ljmp
sub
stos
sub
arpl
jb
dec
dec
stc
and
push
fists
lcall
mov
sub
sub
rclb
flds
and
aas
lcall
mov
aam
nop
pop
xor
sub
lock
pushl
outsl
sbb
push
jns
jle
push
pushf
aam
and
rorb
xor
cmp
cmpsb
les
jl
jb
jne
dec
sbb
popa
push
aam
adc
pop
mov
jmp
xchg
faddl
lea
idiv
insb
aaa
movb
and
sti
int
rcrb
push
rorb
pushl
adc
xchg
inc
push
loop
pop
sub
mov
mov
cmpsl
cmc
ljmp
push
mov
insl
jge
dec
xor
push
addr16
sub
xchg
push
mov
mov
jp
dec
push
lret
daa
xchg
movsl
aaa
mov
or
cld
and
lods
jl
and
ljmp
int3
pop
lods
les
dec
movsb
add
add
stc
movsl
clc
or
pop
lret
cmp
arpl
insb
pop
pusha
arpl
fildl
add
clc
sar
sub
push
xor
std
xchg
imul
das
or
cmc
in
pop
inc
mov
mov
jbe
dec
subl
test
pop
xor
movsb
jnp
or
leave
in
mov
adc
cmp
lcall
mov
ja
ljmp
cwtl
cmpsl
and
inc
dec
mov
mov
scas
sti
mov
out
mov
cmpsb
mov
jmp
pop
push
cltd
mov
bnd
insb
add
cmp
lcall
popf
cmp
mov
nop
xor
jle
hlt
jecxz
pop
mov
sbb
in
movsl
aad
jno
dec
adc
mov
sbb
mov
xor
cmp
mov
imul
mov
mov
dec
cmpl
mov
mov
orb
cmp
dec
mov
lcall
sub
in
fisttpll
insb
dec
fistps
xchg
jp
xor
ljmp
dec
dec
ljmp
dec
pop
adc
inc
inc
sub
arpl
loope
ljmp
pusha
mov
dec
lcall
insb
xor
add
push
das
lret
jl
addl
inc
mov
cli
xchg
sub
aad
fnstsw
xchg
dec
sub
add
push
js
and
inc
inc
pushf
jo
lcall
jg
in
lldt
pop
push
repnz
enter
psraw
in
movsl
pop
jae
xchg
ss
jno
filds
lcall
adc
mov
add
mov
mov
scas
jecxz
add
mov
popf
rcrb
decl
inc
push
xor
fbstp
adc
pop
mov
mov
xchg
jmp
sbb
lahf
sbb
cmpsb
ror
pushf
lds
lods
lahf
and
nop
clc
decl
sbbl
test
call
cmpsb
dec
addr16
cwtl
mov
je
mov
pop
fisttps
pop
in
mov
lret
icebp
incl
into
hlt
adc
inc
or
dec
pop
js
call
enter
push
pop
nop
mov
inc
jnp
filds
out
inc
std
cmp
sbb
movl
in
into
inc
decl
sub
jns
hlt
mov
push
sti
ja
jmp
mull
push
imul
mov
fisttps
lea
and
adc
pushl
out
popf
cmpsb
pop
jno
pusha
call
xor
cli
popf
xchg
jp
arpl
cld
jmp
pop
call
outsb
cli
push
insb
out
sbb
sbb
decl
in
arpl
test
push
imulb
shlb
push
sub
lcall
mov
ljmp
sahf
sbb
shl
pop
xor
idiv
ljmp
gs
hlt
inc
fdiv
push
and
in
adc
faddp
aaa
mov
movsb
xor
add
jecxz
mov
sub
aas
sar
add
mov
outsl
or
nop
mov
mov
inc
punpcklbw
adc
jbe
stos
jae
mov
jae
lea
xor
xchg
fcomip
dec
jle
bswap
add
rcrl
aaa
ret
test
xor
cmpsb
inc
push
inc
ljmp
movsb
in
iret
pop
dec
dec
nop
sub
out
sbb
add
cld
jecxz
push
decl
inc
jo
shll
dec
xchg
jmp
popa
movsb
retw
jmp
in
add
in
mov
fstps
mov
push
hlt
cmp
pop
ljmp
loop
lds
iret
sub
call
and
movsb
stos
xchg
inc
xor
pop
xor
das
ljmp
jmp
mov
pop
xlat
jg
in
adc
push
imul
bnd
dec
push
mov
ljmp
loopne
aam
shl
lret
xchg
or
add
push
ret
das
int3
add
push
push
jb
call
mov
fisubs
sahf
sub
pop
cmp
push
mov
icebp
inc
adc
push
jne
push
pop
inc
pop
pushl
pop
std
shr
adc
and
cmp
mov
loop
add
fimuls
clc
pushl
shl
mov
fs
jae
rcl
ret
mov
push
pushf
xor
pushl
push
arpl
or
lahf
mov
mov
add
out
xchg
mov
leave
outsl
out
mov
mov
decl
cmpl
mov
adc
cld
sbb
jmp
jmp
dec
pushf
adc
jno
addr16
test
cmp
xor
jnp
cltd
pop
sub
pushl
call
js
sub
pushf
lods
mov
bound
out
pop
rcrl
or
xchg
inc
push
pop
out
xor
lock
loopne
hlt
mov
outsb
popa
pop
push
mov
add
xchg
lods
ss
rolb
lea
inc
loope
popf
repz
roll
dec
fcomi
adc
test
fiadds
ljmp
mov
or
push
push
insl
ss
mov
testb
imul
ljmp
mov
insb
imul
cmpsb
iret
imul
cmp
popa
daa
inc
mov
fsin
sar
aad
icebp
push
hlt
push
cmp
cmp
fwait
pusha
call
loopne
fwait
push
stos
pop
adc
repz
adc
cmp
testb
in
dec
call
into
pop
sbb
mov
cli
test
jmp
ret
xchg
jnp
jl
lods
insl
ds
dec
dec
gs
push
fwait
jp
mov
icebp
lahf
movsb
int
and
mov
pop
push
mov
mov
and
jp
idiv
scas
push
cmp
jmp
mov
mov
push
lcall
clc
das
shr
mov
call
std
fs
jmp
arpl
adc
xor
loop
mov
mov
dec
lds
mov
sub
call
outsl
jecxz
dec
dec
inc
dec
fdivl
jae
lods
scas
push
mov
sar
test
and
test
aas
popf
adc
sub
repnz
and
xchg
sbb
int3
fsubrs
xor
ljmp
dec
inc
stos
jge
dec
mov
and
push
in
sbb
push
cld
push
scas
lcall
mov
fdivs
xchg
sbb
add
cmp
mov
pinsrw
incl
jno
mov
pop
sub
add
mov
push
ret
inc
or
xchg
pop
fstl
adc
xor
xor
insl
lahf
sbb
fsubrl
lret
fcoms
adc
cmc
ljmp
loopne
je
outsb
dec
mov
add
mov
scas
sbb
fbld
and
cltd
or
adc
pusha
nop
loopne
sarl
cs
fs
jmp
xchg
xorl
dec
insb
fisubl
push
mov
out
push
cli
sbb
push
or
inc
filds
jo
sti
xchg
jl
dec
out
fld
adc
mov
mov
push
sub
or
fmull
push
outsb
pushf
repnz
cwtl
mov
xor
jle
ficompl
lcall
fsubrs
in
mov
fistpl
mov
adc
jmp
xchg
mov
sti
mov
xacquire
call
shlb
push
pushf
popf
stos
loop
ficoms
cmpsl
incl
call
cwtl
xchg
jae
out
rclb
addr16
jecxz
data16
js
lock
ljmp
pop
in
icebp
inc
mov
add
loope
aas
ja
lock
filds
jle
sub
inc
fadd
xchg
jbe
lock
pop
subl
testl
pop
cli
jmp
ret
lds
xor
cmp
pop
rcl
xor
xchg
xchg
and
mov
mov
decl
pop
jbe
mov
repz
cmp
ret
insb
outsb
mov
fdivr
outsl
outsb
imul
jmp
testb
inc
push
pushw
and
add
ja
leave
fistl
pop
mov
pop
or
ret
fs
cmpl
mov
incl
imul
jmp
cli
add
adc
mov
decl
aaa
frstor
xchg
or
inc
addl
push
sar
sub
add
mov
popa
cmp
push
sub
mov
cmpb
movb
jecxz
mov
sub
out
mov
ret
xor
jae
adc
popf
push
xchg
movsl
pusha
lcall
mov
or
popa
mov
loopne
lret
mov
lcall
push
sub
ja
push
sbb
test
push
mov
addr16
sbb
shlb
clc
ljmp
mov
cltd
ljmp
out
stos
pop
pushf
shll
sbb
sbb
xchg
mov
cmp
cmp
jl
sbb
mov
xchg
and
xchg
cmpsb
sar
int
mov
iret
and
rcl
mov
decl
in
mov
push
ja
push
out
lret
mov
jb
rcrl
pop
dec
add
inc
pop
add
outsb
loope
les
test
push
in
pop
and
aas
sub
inc
or
mov
cmp
mov
inc
aas
inc
sub
std
cmc
inc
int3
mov
mov
inc
call
adc
fiaddl
push
and
sbb
add
ja
jmp
hlt
jl
lds
pop
mov
inc
and
xor
and
sub
pushf
ljmp
mov
lcall
sbb
lock
cltd
dec
hlt
xorl
mull
fsubs
lds
in
jae
lcall
fwait
arpl
xor
mov
mov
lahf
je
aaa
add
out
cld
hlt
jg
int
cld
adc
xchg
push
decl
inc
and
mov
add
mov
fcompl
mov
or
xchg
sbb
or
mov
fwait
inc
mov
call
popa
nop
fdivrl
mov
gs
push
push
aas
gs
inc
cmpsl
inc
or
push
jbe
out
cmp
stos
xlat
icebp
inc
pop
xor
sar
jg
jl
into
inc
imul
mov
xchg
movsl
pop
jl
int
repz
call
jg
adc
xlat
cmpsb
int3
les
mov
adc
call
add
xor
bound
decl
mov
push
push
idivl
enter
out
push
stc
cmp
xor
cmc
jmp
mov
or
std
int
rclb
nop
add
add
sbb
test
add
sbb
sub
aas
int3
and
and
jno
call
insl
outsl
fs
jne
inc
adc
cmp
pop
xchg
or
adc
dec
cmp
pop
dec
das
or
mov
sti
in
in
cmp
sub
lahf
pop
xor
inc
divl
add
or
or
jo
push
sbb
xor
rolb
xor
inc
add
testl
je
test
fs
inc
scas
or
lock
or
pop
xor
sarb
push
and
orb
sub
outsb
xchg
inc
jle
adc
jnp
out
or
rolb
pushl
xor
out
and
data16
add
js
mov
ficompl
and
add
push
movl
mov
add
punpcklwd
inc
jle
mov
shll
incl
sti
mov
incl
jl
pop
ret
inc
subl
cld
and
sbb
dec
sbb
rcrb
data16
xor
add
insb
xchg
sbb
filds
fildl
or
dec
push
adc
movsb
rcr
dec
mov
push
push
ret
jle
lea
mov
aaa
insb
iret
lret
fiadds
or
aas
or
mov
sbb
pop
pop
mov
or
in
pop
jg
outsl
jg
jge
adc
adc
or
pop
add
inc
call
mov
daa
cmpsb
lret
testb
mov
cmp
neg
fildll
inc
cmpl
icebp
jl
push
push
and
insl
mov
fdivrp
fists
jo
push
or
jmp
jg
xchg
sub
sti
neg
fisttps
aas
or
pushl
mov
jnp
xchg
xor
fs
out
outsl
ss
mov
adcb
je
call
subb
ret
dec
je
sbb
pushl
ja
and
sbb
adc
call
jmp
addr16
mov
push
insb
or
add
adc
mov
data16
jnp
cmovns
jg
sub
push
add
cwtl
pop
mov
mov
push
mov
cli
incl
mov
xor
ljmp
xor
mov
inc
das
add
and
adc
mov
sbb
and
fisttps
sbb
dec
shlb
or
or
push
push
lods
sbb
mov
bnd
aam
fiaddl
mov
xchg
pop
add
mov
pushl
inc
lea
jge
mov
or
das
clc
xor
xor
push
mov
lods
push
mov
mov
mov
mov
pop
xor
add
hlt
stos
sub
push
mov
mov
mov
aad
adc
clc
push
sub
mov
xchg
mov
mov
or
decl
or
popa
adc
pop
leave
jg
frstor
arpl
dec
push
xor
shll
shlb
and
inc
ret
cmp
mov
daa
mov
jecxz
mov
push
push
xchg
lcall
pop
pop
dec
push
mov
insl
mov
push
sbb
negb
jne
add
dec
in
pushl
je
mov
push
adc
cmp
loope
int3
insb
adc
ret
hlt
xchg
push
push
cmp
adc
mov
lea
lea
outsl
out
cltd
sti
push
data16
or
arpl
lea
fistpl
sbb
sub
or
lcall
push
insl
mov
pop
adc
sub
pop
icebp
incl
cld
jbe
in
xor
in
jl
lock
in
push
stos
ljmp
dec
fstpt
fcmovne
in
inc
add
cmp
mov
in
idivb
lea
pusha
or
lea
push
push
add
decb
shl
add
inc
push
mov
mov
jle
or
adc
hlt
or
popf
sub
cld
incl
mov
in
movsl
fisttps
sti
sbb
add
cmp
jb
movsb
or
push
sub
mov
mov
imul
cld
les
shrb
std
jg
fisttpll
adc
add
cmp
jb
push
lea
fstps
out
or
jbe
ret
ljmp
add
int
sub
loope
test
jg
jbe
inc
push
add
scas
popf
mov
ljmp
test
cmc
rclb
jb
mov
or
fnstcw
push
push
or
test
fidivrl
push
adc
or
lret
lcall
lret
addr16
adc
pop
les
jp
sbb
repz
xorl
ret
cmp
clc
decl
rcrb
aam
mov
or
jmp
outsb
fnsave
mov
das
jbe
lea
pop
imul
inc
lcall
mov
out
outsl
adc
ss
jg
dec
mov
push
xchg
pop
lods
fwait
cmp
and
outsl
je
aad
jmp
and
rol
push
aas
int3
pop
addr16
mov
jb
pop
ljmp
lock
sbb
adc
fwait
push
call
sbb
mov
test
push
push
xor
sub
sbb
scas
iret
xor
sti
clc
into
pop
xchg
enter
test
out
mov
data16
push
gs
push
mov
sbb
fdivl
lock
aam
shrb
push
aaa
mov
insl
arpl
pop
sub
jmp
mov
jbe
faddp
insb
adc
push
cwtl
dec
data16
or
shll
mov
push
lods
push
jnp
testl
hlt
adc
int3
ds
fwait
lods
sti
mov
out
cli
out
dec
sbb
adc
gs
adcl
rolb
mov
push
nop
leave
cmp
pusha
cmp
ret
ja
cli
pop
adc
icebp
xchg
divl
or
decl
lcall
std
ljmp
insb
in
push
push
incl
push
push
faddl
scas
fs
inc
push
push
push
ret
sbb
push
neg
sbb
decb
loopne
fsubrs
pop
xchg
gs
pop
dec
xchg
add
or
jg
and
aam
sub
scas
fistl
ljmp
out
movsl
stc
lods
repnz
idivb
je,pt
movb
push
mov
orb
sbb
and
ret
push
add
pop
and
add
jo
mov
in
scas
mov
sbb
sbb
lods
xchg
xchg
and
aad
cltd
push
cmp
or
ljmp
inc
loop
adc
or
mov
bound
jmp
push
mov
add
or
pop
cld
pushf
lock
mov
sub
inc
xor
sub
add
cltd
xor
add
and
sahf
movsl
jmp
push
sub
shr
mov
mov
ss
sub
mov
pushl
test
cmpl
push
lea
out
push
adc
add
mov
pop
decl
cmp
scas
lds
std
dec
pop
and
jmp
pop
fisubrl
cmp
push
aaa
incl
push
clc
sbb
and
or
lahf
cmp
push
rep
jle,pn
ljmp
mov
mov
cmp
out
xlat
mov
pop
pop
pop
jne
inc
xor
test
das
mov
sti
sahf
push
lock
mov
push
in
lcall
jo
cmp
mov
les
push
mov
call
or
or
mov
xchg
loopne
clc
movsl
and
xor
jbe
cmp
decl
mov
cmp
jp
pop
dec
jp
push
movsb
cld
mov
test
mov
add
mov
mov
imul
adc
rcll
pop
and
lea
aaa
mov
jg
dec
repnz
push
inc
xchg
dec
cmp
dec
cld
outsl
push
jb
ljmp
and
adc
mov
lea
sub
filds
mov
lahf
push
jmp
xchg
xor
loope
push
std
gs
cmp
adc
cmpl
in
jg
add
cld
sbb
jne
inc
mov
dec
inc
lcall
and
pop
ds
adc
and
inc
es
dec
xchg
shl
lock
dec
adc
or
and
push
dec
sub
fsubrs
loope
xchg
sbb
jg
cmp
dec
xchg
mov
pop
inc
out
es
enter
sahf
int3
mov
call
jne
push
repnz
insl
imul
push
les
xor
or
int3
loopne
ds
sarb
mov
push
sbb
dec
loop
icebp
sbb
mov
xor
test
ret
jle
push
pop
cmp
call
mov
cmp
idivb
ja
cmp
push
leave
ret
xor
push
mov
insb
lock
jg
jmp
push
push
push
jbe
daa
loope
xor
sub
or
std
mov
js
aaa
punpckhbw
push
fistpl
xchg
sbb
ljmp
and
insl
add
lods
mov
sar
aaa
jge
push
cmp
sbb
xor
cmp
pop
xchg
lcall
jg
push
jae
icebp
fdivrs
cmpb
or
inc
mov
or
clc
jecxz
pop
cmp
cmp
fbld
ljmp
imull
fistps
push
repz
scas
xor
ljmp
mov
adc
cmp
mov
jmp
push
out
inc
mov
sti
fwait
inc
repz
jl
cli
pushl
adc
sarb
aaa
out
cmp
add
xchg
pop
fbstp
cmp
jl
movsl
sbb
cld
decl
rolb
cmp
mov
jb
fisttpl
scas
or
push
loopne
incl
pop
jle
imul
push
cs
sub
mov
jle
pop
pop
inc
dec
lcall
add
mov
neg
stos
and
cmp
mov
std
add
pop
clc
ja
pop
jp
into
push
adc
in
mov
xchg
mov
push
rolb
dec
cmp
mov
jge
sub
mov
lcall
adc
jns
loope
jbe
call
movb
aam
push
pop
lock
cmpb
pop
cmp
jmp
fdivrl
incl
cmp
add
dec
std
or
inc
add
adc
jmp
jbe
aam
mov
push
adc
and
pop
mov
lods
loope
sar
incl
insl
jne
sub
dec
jbe
int
pop
cmp
adc
jg
add
mov
testl
lock
fidivrs
test
lcall
sete
sub
insl
fwait
adc
add
push
int3
push
add
or
xor
dec
ljmp
stc
mov
in
rol
or
dec
cmpsl
mov
adc
pop
loopne
push
xchg
mov
js
imul
cld
cmp
loope
nop
aas
inc
jg
mov
cli
popf
add
mov
push
rcrb
jg
mov
pcmpeqb
mov
cmp
pushl
mov
xor
jmp
adc
and
jmp
addr16
sti
and
icebp
xchg
adc
cmpsb
pop
sbbl
subl
lcall
jb
scas
or
sbb
pop
fs
mov
sub
lock
pop
push
add
shrl
decl
push
cli
in
lea
mov
fnstcw
inc
repnz
pop
cld
inc
sub
adc
jbe
call
mov
inc
push
inc
push
fnstcw
xor
mov
and
fcoml
push
scas
adcl
pop
cld
lds
xchg
or
inc
xor
cmc
sub
dec
cmp
cmc
mov
icebp
decl
or
inc
cmp
std
fcomp
adc
dec
jmp
mov
xchg
sub
inc
inc
data16
rorl
xchg
mov
adc
dec
add
ret
cmpb
inc
cmpb
jne
cmp
inc
add
jg
adc
pop
nop
xor
mov
and
cmpsb
arpl
std
outsl
cli
dec
add
movsl
xlat
adc
dec
adc
or
incl
jge
jge
pushl
out
inc
dec
sbb
roll
fucomi
pop
mov
call
sub
dec
fbstp
mov
mov
leave
fdivr
jmp
inc
sbb
ja
pop
mov
rcl
adc
incl
ljmp
fildl
adc
inc
dec
cmp
adc
lea
test
incl
jae
sub
push
lea
mov
or
and
jle
add
xor
loop
push
idivb
dec
rol
in
cwtl
mov
nop
add
or
ret
push
jp
or
rcrb
jge
adcb
insl
mov
mov
sub
ds
incl
push
adc
jns
or
popf
pop
cmp
sbb
sub
ret
pusha
pop
sbb
ljmp
clc
incl
outsl
inc
xchg
cmpsl
addr16
xchg
in
add
fcomip
xorl
fcmovbe
decl
mov
mov
xchg
inc
jmp
mov
adc
sbb
std
push
mov
incl
or
clc
adc
inc
lock
je
mov
jl
incl
dec
or
mov
ljmp
hlt
nop
mov
sti
enter
out
ljmp
pop
adc
fisttpl
imul
add
incl
sub
rcrb
pusha
xorb
or
dec
xor
fstpt
cmp
test
adc
lcall
cmp
lock
rolb
jle
adc
stc
push
mov
ljmp
aam
mov
cs
pop
movsb
adc
mov
ljmp
sbb
fldcw
scas
es
sbb
aaa
adc
jmp
xchg
int3
pop
push
shl
push
ljmp
aam
lea
or
repz
and
fwait
or
add
mov
mov
sar
dec
add
mov
roll
cld
aaa
leave
push
loope
out
jecxz
add
fnstsw
incl
scas
sub
mov
shlb
jle
push
add
subl
or
fmuls
ss
mov
pop
lods
lcall
sbb
fimuls
or
dec
loope
clc
add
lods
repz
clc
imul
shrb
movsb
or
cmp
cmp
and
pop
push
fisubrl
mov
add
mov
jl
rcll
adc
dec
add
mov
hlt
add
xlat
fcmovu
lock
sub
sub
mov
or
pusha
dec
mov
popf
xor
inc
ljmp
or
sbb
lea
out
adc
add
jnp
cmpsb
jg
out
inc
xor
add
mov
xor
neg
cli
into
inc
ljmp
clc
jle
mov
jle
push
jl
std
push
stos
mov
les
ficomps
enter
ljmp
dec
vmwrite
adc
jle
inc
xlat
mov
inc
icebp
xorl
add
inc
mov
dec
mov
roll
mov
mov
je
cmp
push
pop
xor
call
push
rolb
or
adcl
aam
movsb
and
lods
pop
lds
jo
in
popa
push
pop
lods
into
inc
decb
or
mov
adc
int
adc
inc
pop
sbb
sub
insb
into
lahf
loop
mov
in
je
inc
push
xor
adc
xor
jg
sub
xchg
sub
adcl
jns
mov
mov
and
ljmp
shl
add
pop
popa
movb
lods
incl
sub
inc
aam
mov
faddl
fmull
push
jne
arpl
call
add
test
or
das
push
mov
adc
decb
call
sti
movl
dec
mov
jbe
push
sbb
pop
mov
mov
add
jbe
or
or
std
mov
mov
xchg
push
adc
test
or
aad
adc
fcomi
mov
xchg
sub
dec
pushl
cmp
adc
and
adc
and
ret
mov
mov
lret
push
add
or
scas
pop
mov
xor
dec
adc
add
add
inc
jo
adc
in
mov
cld
psrlw
decl
jbe
xchg
mov
incl
dec
lahf
ret
ja
jmp
push
iret
dec
out
and
cmpsb
xor
or
in
lds
jmp
lea
cmp
inc
sbb
std
ljmp
int3
push
sbb
orb
fisttpll
movsl
inc
mov
and
sahf
add
pushl
add
rorl
xchg
bound
je
xchg
fwait
sbb
cli
push
dec
add
jmp
sbb
adc
add
dec
xor
nopl
mov
pop
cmp
icebp
jmp
cs
xor
rcr
dec
cmp
cmp
push
push
sbb
loope
cmp
inc
xchg
mov
or
push
ljmp
push
mov
mov
ss
aam
aad
push
push
or
ljmp
adc
xchg
jp
mov
lcall
xor
push
push
ret
imul
push
test
and
push
push
out
incl
push
leave
pop
popa
shll
call
sbb
shlb
mov
or
ljmp
jl
test
inc
xor
lea
mov
push
pop
call
pop
sub
cmp
push
push
clc
decl
mov
mov
mov
iret
mov
stc
ret
jecxz
or
mov
call
sarb
mov
xor
je
incl
inc
sarb
add
mov
stc
mov
pop
mov
sub
loop
ret
cmc
nop
shl
je
mov
cwtl
pushl
push
lea
jne
shl
out
xor
push
mov
sar
lcall
or
or
pop
push
mov
mov
hlt
push
scas
inc
ss
sahf
mov
cltd
sbb
sub
aas
xchg
cmp
mov
mov
cmpsb
ja
jb
aaa
stc
xorl
lcall
adc
sub
bswap
sub
fdivs
and
jle
xor
push
je
xchg
iret
sar
rolb
pushl
inc
cltd
jp
mov
push
or
xor
adc
fistps
subl
adc
sub
jae
add
mov
jne
arpl
inc
push
and
cmc
inc
push
fnstenv
and
xor
std
ds
push
mov
fidivrl
push
jb
and
sub
sbb
lcall
pop
in
adc
pop
hlt
hlt
inc
sahf
cltd
out
clc
sbb
mov
insl
push
push
fyl2xp1
pop
mov
call
roll
mov
cmp
or
cs
loop
loope
mov
cld
mov
adc
pop
jne
pop
push
or
inc
pop
cmp
clc
decl
mov
sbb
mov
incl
cld
push
jg
dec
cmp
lods
jl
add
adc
pushl
mov
ds
addr16
cmp
pop
sbb
pop
add
inc
xchg
jo
jg
int3
sbb
mov
push
lock
jp
and
xchg
pop
adc
jg
lea
sahf
enter
fsubs
sub
inc
sahf
xor
or
shrl
in
sub
pop
mov
mov
push
pop
mov
mov
ret
mov
mov
movsw
jnp
movsl
imul
cli
shrb
pushl
jl
rorb
jle
mov
mov
push
test
or
and
mov
repnz
in
das
es
mov
mov
inc
cmpsl
push
aad
sbb
in
inc
rcll
incl
ja
je
mov
push
push
inc
add
clc
add
mov
add
add
mov
and
adc
ljmp
xor
sub
mov
loop
inc
ret
pop
fcoms
and
rcr
sar
pushl
das
mov
dec
mov
inc
jl
les
jne
in
fcompl
lcall
jae
push
test
xchg
push
xchg
sub
xorb
ljmp
push
jbe
dec
cmp
pusha
xor
or
test
push
movsb
push
or
push
test
test
mov
pusha
pop
add
or
fwait
xor
mov
subb
and
clc
incl
mov
mov
and
jge
add
test
jmp
incl
xor
add
insb
outsl
fnstenv
xor
or
jle
and
insl
dec
stos
mov
jns
cld
lcall
or
popa
nop
mov
insb
test
add
jg
into
dec
and
add
jge
add
xor
or
call
js
cmp
or
xor
outsl
mov
or
aaa
push
aaa
fidivrs
push
ja
cmp
push
pop
hlt
jle
mov
xor
mulb
jno
dec
cltd
jae
pushl
imul
jae
pop
ret
or
out
sbb
add
push
imul
ret
mov
fucomi
lcall
movsl
clc
pop
adc
xor
jmp
ljmp
push
pop
cmpl
jne
push
dec
push
es
lcall
dec
fisttpl
rolb
or
mov
in
add
unpcklps
add
pushl
add
xchg
sbb
jbe
sbb
push
mov
and
jle
adc
outsb
adc
sub
xchg
ljmp
cld
or
xor
inc
enter
dec
sbb
add
lods
push
mov
or
jno
inc
ljmp
std
decl
pushl
mov
adc
movzwl
add
incl
dec
inc
pop
add
mov
outsb
inc
or
cmp
or
test
jae
shll
clc
jg
rorb
and
or
decl
clc
mov
mov
addb
pusha
lea
sub
mov
xchg
leave
or
ja
inc
arpl
cmp
lea
loopne
pop
xor
push
push
pop
rclb
xor
repz
or
scas
incl
iret
sbb
insb
and
xor
or
jl
xchg
pop
cld
std
pushl
orb
sub
in
pop
mov
in
mov
sbb
call
pushf
sahf
and
sbb
cs
cmpb
je
cmc
decl
inc
inc
mov
arpl
test
sub
cmp
ja
out
cmpl
or
test
test
jo
or
pop
popw
out
and
rorb
test
or
ret
sub
sub
stos
push
push
pop
shr
pop
rclb
sub
hlt
call
fcmovb
dec
std
inc
int3
add
lea
mov
incl
icebp
sub
int
jge
inc
xchg
fildll
shll
or
sub
repnz
incl
jbe
sbb
mull
push
mov
repz
ja
fisttpll
inc
data16
std
jmp
add
xchg
jle
xor
xchg
aaa
cmp
je
lcall
mov
cmp
xor
jmp
pop
xor
decl
negl
adc
jne
jmp
dec
shrl
adc
lea
lds
out
jp
xorb
pop
lock
testb
inc
mov
add
pop
addl
sbbl
mov
mov
mov
inc
mov
sbb
mov
jl
mov
fwait
add
leave
mov
orl
push
push
test
clc
fcomip
pop
adc
in
add
call
and
jmp
into
adc
fildl
out
lcall
pop
mov
rolb
mov
inc
outsb
call
pushl
adc
add
frstor
adc
mov
add
pop
pop
mov
add
add
pop
and
test
xor
outsb
in
jmp
ljmp
sub
xchg
cli
sbb
push
mov
cmp
jnp
push
dec
clc
push
or
push
mov
jbe
mov
inc
lcall
adc
cmpb
inc
outsb
push
dec
out
sbb
or
lret
enter
pop
imulb
jnp
and
aad
or
push
sub
push
sub
mov
stos
push
testb
and
inc
mov
or
or
sbb
fsubs
insb
add
fildll
push
lcall
or
mov
sub
outsl
cld
xor
sbb
call
inc
inc
movb
test
lret
cmp
das
stc
es
std
push
pop
cli
outsl
mov
fs
icebp
mov
data16
push
jno
arpl
push
and
pop
pop
or
fnstsw
mov
xor
sub
stc
cmp
mov
add
cmp
dec
add
dec
jmp
je
es
mov
cltd
das
mov
xchg
xchg
icebp
jge
ja
xchg
outsl
fmul
jne
cli
stos
pop
push
call
jo
mov
cmp
gs
push
movsb
adc
test
inc
jnp
or
mov
int3
inc
add
adc
sahf
aam
mov
push
out
xor
inc
insb
jl
jae
xchg
sub
sub
sar
or
mov
sub
sub
fcomip
std
ss
xchg
or
mov
sahf
sbb
aaa
push
push
jnp
dec
mov
sbb
testb
inc
repnz
dec
or
imul
sahf
mov
sti
pop
push
dec
ljmp
sbb
mov
fidivs
hlt
or
jns
xor
xor
add
popa
iret
movsl
adc
stos
jo
fistpll
mov
sub
stc
cmp
in
rclb
xchg
xchg
cmp
pause
cmp
clc
push
mov
jae
incl
stos
mov
outsl
xchg
add
sbb
imul
jmp
pop
ret
in
cs
negl
fstps
xor
incl
insb
add
leave
or
sub
es
mov
xor
rorl
or
pushl
adc
mov
ret
cmp
push
sbb
pusha
jl
mov
cli
outsl
cmp
push
leave
add
jno
incl
pop
sbb
mov
lcall
gs
mov
add
inc
pop
call
pop
popa
pop
push
pop
pop
adc
ror
sarl
cmp
push
lcall
test
ljmp
dec
mov
push
fwait
xor
dec
xor
and
sbb
cltd
jp
inc
cmpps
push
add
jbe
lea
cmp
push
pop
loope
out
push
or
push
adc
fisubrl
ret
or
loope
sar
push
dec
js
orl
pop
mov
fldenv
add
sahf
pushf
and
or
ljmp
call
pusha
icebp
nop
xor
ss
cli
or
jg
rcrl
inc
pusha
dec
daa
xor
fwait
push
xchg
sub
lock
out
es
add
inc
mov
fbstp
push
adc
jg
inc
push
xor
stc
call
add
pop
cmp
push
lock
and
ljmp
hlt
decl
inc
add
loope
lods
out
or
mov
testl
fninit
add
push
push
icebp
inc
cltd
mov
xchg
lods
cmp
or
call
das
dec
les
add
sbb
js
push
pop
clc
sbb
cmp
jbe
mov
pushl
fsubs
pop
imul
icebp
pushl
fdivrs
xor
and
jbe
bound
push
dec
fcomps
fldenv
mov
dec
xchg
xchg
cs
add
test
mov
xor
call
aam
dec
xacquire
out
push
lea
stc
lock
mov
pushl
je
and
mov
push
lock
mov
sbb
mov
test
in
out
lods
clc
imul
pushf
add
cmp
je
pop
les
mov
mov
mov
cmp
sub
pop
jmp
push
inc
daa
add
cmp
fadds
sub
add
ret
fimuls
fwait
and
sbb
fiaddl
subl
mov
fsubrl
lods
stos
cmpsl
fildl
aas
jbe
test
push
dec
hlt
push
cmpsl
mov
cli
pop
cmc
pushl
cmp
push
lret
jbe
xor
jo
lret
dec
sets
cld
outsb
std
call
hlt
std
jb
jmp
or
clc
cltd
scas
sub
push
cmc
sahf
jb
jl
incl
bound
insl
ds
clc
js
addl
jns
push
bound
jg
sub
push
or
push
or
push
adc
decl
and
pop
cmpb
test
pop
push
mov
ljmp
out
stc
push
in
jg
sub
cmp
jl
add
inc
or
testl
inc
cld
or
push
cltd
rcrb
xchg
push
jnp
jmp
jb
dec
or
int
or
je
clc
out
clc
add
sbb
push
jp
xor
fisubrl
jmp
sbb
and
test
or
push
fwait
sub
repnz
fdivs
push
mov
sbb
xor
cmp
adc
out
and
and
sbb
cltd
nop
imul
call
sbb
cmpsb
pop
pop
test
mov
sbb
mov
xor
cmc
dec
add
add
add
sbb
pusha
mov
ret
push
cmp
pushl
mov
cmp
and
call
add
add
add
sti
loop
inc
loope
sbb
dec
fnstcw
mov
and
adcb
fildll
sub
imul
or
mov
pop
inc
cmp
pop
pushl
cld
xor
out
sbb
int3
lea
sbb
jge
push
pop
pop
lea
loope
incl
movsl
xchg
pushfw
sbbb
cmp
adc
sbb
jbe
into
icebp
pop
mov
rorb
mov
push
adc
add
inc
pop
dec
add
ret
clc
adc
cmp
fmuls
rcll
adc
incl
push
pop
jae
pop
xchg
jl
push
sbb
mov
ljmp
outsl
sub
mov
loop
rcll
inc
or
or
cld
fbld
or
in
rorl
addr16
fldcw
mov
push
decl
adc
add
mov
pushf
das
aaa
movsb
cmp
pop
jmp
dec
fiadds
addr16
xor
gs
fstps
push
fldcw
push
push
mov
push
incl
add
pop
xor
xchg
cmp
dec
jns
jmp
push
mov
das
mov
mov
mov
pop
pop
fs
idivb
pop
push
fs
call
imull
push
pop
pop
dec
dec
mov
mov
nop
or
or
jg
dec
pop
mov
std
test
mov
js
sar
add
jmp
push
std
or
dec
push
jmp
push
fsubs
sub
mov
and
incl
push
pop
jnp
fisubrl
cs
push
scas
inc
sub
aaa
addr16
add
orb
xchg
inc
addb
jg
and
adc
pop
add
rolb
inc
mov
adc
icebp
add
dec
pop
mov
inc
push
add
out
add
jg
ret
inc
add
or
repz
scas
pop
xlat
sub
cmp
enter
jmp
and
nop
inc
push
adc
cmp
icebp
es
jle
lock
push
rcr
addr16
dec
cmc
in
mov
lcall
scas
sbb
std
enter
scas
sub
fiaddl
cld
aaa
mov
mov
insb
pop
sbb
clc
add
out
jg
inc
sbb
lock
popf
rclb
test
call
add
jo
xchg
xchg
push
push
push
dec
bound
aam
pop
mov
jp
or
jbe
scas
push
test
lea
loopne
sub
sbb
jle
jg
and
insl
ss
add
cld
add
out
jg
decl
lds
adc
mov
xor
psubb
ljmp
and
add
sbb
inc
in
inc
hlt
adc
in
scas
sbb
mov
xchg
jb
fdivr
lcall
inc
mov
enter
adc
test
push
adc
sub
add
shl
movsl
stos
pushl
mov
icebp
jne
push
pop
xor
or
pop
ljmp
mov
bound
ja
cld
icebp
jmp
push
mov
pop
xchg
inc
add
fcomip
pushl
pop
pop
sbb
push
popa
nop
movsb
mov
inc
mov
aaa
rclb
leave
xlat
mov
xor
sub
dec
add
mov
movsl
push
mov
xor
cs
push
xor
push
push
fs
test
inc
clc
xor
aas
and
pop
mov
mov
fisttps
loope
sbb
pop
mov
lcall
mov
xor
push
adc
cmp
jl
add
mov
jae
jge
adc
fsubrl
mov
jl
mov
sbb
fcoms
jp
inc
std
jno
int3
mov
lds
ljmp
mov
sbb
dec
shrb
es
cmp
xor
add
push
popf
in
repnz
cmp
mov
xchg
in
mov
sbb
je
test
mov
add
cli
hlt
cli
or
and
mov
jae
pop
mov
mov
ljmp
sbb
enter
cmc
mov
sbb
insb
lea
sbb
xor
decl
movsb
jle
lahf
sbb
fisubl
sahf
fcmovu
add
ret
jg
cmpsl
sub
mov
push
sub
fistl
sub
movsb
pop
movsb
jbe
faddl
xchg
mov
push
fs
inc
cmp
xchg
ss
in
push
fists
cmp
mov
adc
pop
add
or
fcomip
dec
mov
lods
cld
dec
pop
mov
push
mov
mov
jnp
out
add
icebp
dec
jg
mov
inc
xchg
and
aam
lahf
mov
cli
inc
rcr
jbe
inc
in
add
push
inc
imul
adc
scas
lcall
push
or
sbb
push
xor
mov
ss
fmul
fs
frstor
pop
aam
dec
adc
sub
fsubrl
fs
jle
in
decl
fdivl
push
les
fisttpl
scas
lock
cmpl
pushl
hlt
add
sbb
push
or
imul
dec
cld
call
or
adc
stos
jns
pop
jae
adc
pop
push
cmp
or
rcrb
or
in
mov
sbb
pop
jge
fildl
jmp
sbb
mov
sbb
push
mov
jmp
cmp
test
mov
mov
inc
shll
push
xor
inc
push
add
pushl
pop
dec
lea
into
cmp
in
fs
inc
std
enter
dec
std
clc
jl
mov
sbbl
mov
inc
sbb
cmp
inc
mov
ficoml
jns
mov
push
dec
lea
int
mov
jl
dec
cli
fistpl
or
in
adc
inc
inc
and
push
dec
or
jbe
jmp
mov
and
daa
push
or
cmc
ljmp
and
inc
ret
mov
data16
dec
fmull
lea
mov
mov
add
inc
popa
push
mov
xor
add
add
adc
xchg
in
into
adc
inc
lcall
shlb
mov
push
pop
dec
mov
je
iret
jl
pop
inc
pop
leave
pop
test
mov
pop
enter
repnz
mov
add
loopne
jl
test
lods
sub
dec
decl
mov
xchg
or
loopne
jne
imul
mov
or
outsb
aam
test
cmp
push
repz
xor
aaa
insl
mov
loop
loop
push
add
mov
adc
ss
ljmp
cmp
test
pusha
xor
insl
or
jmp
aas
inc
pusha
pop
xor
lock
fwait
jae
mov
or
js
dec
mov
clc
das
sar
jmp
or
mov
adc
jge
jp
popa
push
jmp
inc
xchg
leave
test
sub
ljmp
xor
in
inc
push
fsubr
mov
inc
inc
jns
mov
mov
jge
imul
clc
adc
sbb
cmp
mov
cmp
cmp
mov
xchg
jmp
pop
push
xchg
je
dec
ljmp
hlt
je
cmp
jge
mov
incl
or
enter
pop
cmp
sbb
sbb
cmp
push
dec
sub
mov
pop
dec
movsb
jmp
cli
sub
mov
xor
dec
shlb
dec
in
or
mov
mov
andb
incl
sbb
dec
push
dec
add
sub
xor
push
lds
or
ljmp
les
cltd
insb
adc
int3
add
ret
mov
fidivl
js
nop
mov
loop
push
imul
das
and
in
pminsw
and
in
jl
xor
adc
shr
dec
in
pop
sub
enter
inc
pushl
cmp
mov
fwait
lcall
lcall
push
mov
lock
xor
lcall
sbb
mov
push
movsl
jle
jecxz
test
fmuls
call
push
mov
and
dec
inc
mov
popa
ds
inc
pop
push
jne
sbb
and
push
iret
and
dec
sar
mov
adc
pop
pop
mov
sbb
das
jne
mov
jg
fisubs
push
jg
sbb
mov
jmp
add
adc
pop
or
or
pop
hlt
jl
jbe
repnz
and
mov
or
add
clc
incl
adc
stos
jmp
inc
test
rclb
sub
ljmp
ljmp
push
push
jo
divb
xor
fsubs
sti
cli
lret
cli
cmp
or
mov
insl
in
xor
cmp
xor
pushf
lock
inc
adc
and
add
or
or
decb
sti
xchg
mov
call
mov
bound
push
or
test
pop
or
and
dec
push
pop
pop
or
std
mov
add
jle
lea
sbb
je
shrl
ja
aad
pop
icebp
xorb
movsl
cmc
push
enter
or
xor
sti
push
pop
sar
clc
pop
ss
or
xbegin
leave
add
ds
push
lea
mov
mov
sub
cmc
sbb
in
pushf
das
repz
push
jmp
fwait
and
xchg
or
enter
pop
push
out
fiadds
fs
out
push
xchg
push
aaa
stos
push
negb
repnz
aas
mov
push
cmpb
push
je
jmp
mov
inc
jno
lret
add
jp
push
sti
addl
cmp
decl
push
fstps
sub
xchg
pop
cld
pop
add
fs
add
push
or
xchg
pushl
iret
cmc
pop
push
sbb
cld
aaa
inc
jne
mov
jle
mov
jae
add
outsb
cmp
or
jp
mov
clc
daa
hlt
sti
add
lret
inc
mov
in
cmp
mov
and
addr16
inc
pop
inc
test
mov
mov
fsubs
xor
hlt
idivl
adc
or
push
and
xchg
insl
push
clc
sbb
testb
jl
shl
decl
jae
rcrl
push
pop
shrb
test
aas
fiadds
cmp
incl
mov
pusha
add
jmp
in
and
cld
and
mov
mov
es
xchg
push
xor
push
push
out
and
pop
sbb
gs
ret
mov
adc
mov
mov
mov
test
call
sti
mov
out
dec
or
cmp
dec
sbb
dec
idiv
or
inc
adc
lea
mov
cmp
add
call
mov
sarl
imul
call
pusha
push
mov
xchg
mov
mov
cmc
ud2
or
ja
icebp
nop
fisttps
pop
add
jmp
daa
pop
add
fcompl
push
or
sar
mov
cmp
cmp
mov
jl
push
lcall
adc
dec
mov
inc
mov
in
xor
in
add
fcmovnu
mov
mov
scas
inc
ss
sbb
incl
sbb
andl
inc
pusha
cltd
mov
inc
add
pcmpgtb
mov
pop
loopne
xor
pop
in
sti
in
sti
cmp
je
mov
mov
cmpsl
cwtl
adc
push
imul
cli
add
cld
sbb
push
sbb
mov
aaa
add
lret
cmp
sar
decb
push
inc
dec
jmp
fs
clc
ljmp
cmc
pushl
sbb
iret
mov
cmpsb
idivb
pop
dec
cmp
call
fdivrs
lahf
fnstsw
fildl
jmp
pop
fmull
mov
das
fstps
inc
xchg
cmp
pushl
jl
mov
mov
jb
dec
pusha
pushf
fldenv
in
lret
jge
dec
cmp
jge
call
push
cld
ret
pop
ljmp
mov
jmp
add
dec
fwait
sbb
lcall
pop
ds
push
fcompl
cmp
movsl
xor
add
pop
inc
in
dec
mov
cld
in
pop
pop
jl
or
add
ljmp
scas
clc
pushl
cmp
push
ljmp
fadds
pop
dec
jne
mov
std
sub
incl
add
lahf
shrb
fnstsw
and
js
or
sub
and
mov
in
cmp
inc
rorl
ljmp
adc
cmp
push
int3
in
push
std
fidivl
push
mov
lea
mov
fsub
jp
mov
mov
mov
nop
and
sti
movsb
outsl
xchg
movsl
call
sbb
es
aad
movsl
sarb
pushl
in
inc
out
cli
push
sbb
clc
mov
and
call
insl
ret
adc
ss
xor
or
enter
mov
sbb
mov
iretw
test
push
rclb
leave
pusha
in
jae
es
inc
addb
sbbl
xor
adc
mov
inc
mov
cmp
call
call
fs
mov
call
pop
int
sbb
out
xchg
inc
es
and
jl
dec
decl
cmp
rorb
cmp
sti
mov
push
shl
sub
jmp
outsl
xor
call
cmp
jl
pop
andl
call
pop
push
mov
or
mov
jl
push
or
jo
mov
push
incl
jns
pusha
arpl
pusha
sbb
imull
lods
insb
das
and
mov
cmpb
push
lods
and
adc
inc
sarl
pushl
fbld
lret
lsl
mov
jl
adc
mov
pop
jb
xchg
cwtl
inc
cmp
pushl
push
push
mov
and
fbstp
or
jl
cmp
cwtl
clc
fildl
xchg
pop
cwtl
loope
fs
jmp
cmp
add
pop
and
xorl
adc
inc
movsb
jnp
jl
int3
pop
or
mov
enter
int3
frstor
add
into
inc
or
dec
pushf
mov
shll
orb
push
pop
fs
xchg
cltd
pop
pop
lods
add
loop
jge
xchg
mov
cltd
call
cltd
dec
sbb
rcrb
xor
cmp
sub
jl
arpl
insb
stos
xor
imul
or
aaa
lcall
push
mov
mov
push
adc
or
pusha
xchg
decl
dec
and
sar
push
bswap
aaa
test
mov
test
dec
lcall
adc
cmp
ret
enter
aam
mov
jmp
mov
adc
and
push
adc
insb
fisubs
mov
js
test
scas
mov
dec
mov
adc
or
jmp
adc
adc
out
xor
add
setns
incl
std
adc
enter
test
sbb
xchg
push
pop
test
nop
inc
inc
movsb
fbstp
shl
fcomip
pop
cs
mov
in
sbb
call
jl
cmp
jo
adc
int
pop
int3
fcomps
pop
add
cmpsb
movsb
cmp
incl
inc
dec
fs
sub
shlb
test
dec
sbb
fcos
lcall
nop
in
inc
loop
out
aas
mov
jns
xor
adc
xchg
xor
popa
lahf
sub
sar
clc
fists
jnp
sub
mov
and
negb
xor
lcall
cmp
inc
dec
in
stc
mov
adc
mov
add
and
hlt
test
jg
stos
fcomip
jo
rcr
cs
pop
aas
pop
fcomip
fwait
cli
adc
out
pusha
adcl
lods
push
cltd
fstpt
pushl
cld
and
push
fbstp
mov
aam
sarb
and
push
and
sbb
lock
hlt
add
insl
and
pushf
cmpsb
add
idivb
sbb
gs
pop
inc
jg
adc
pop
inc
pop
repnz
fdivrs
xor
xlat
push
test
sbb
stos
xchg
push
pop
call
pop
push
jbe
push
push
dec
aaa
es
push
lods
add
or
cld
or
cwtl
dec
andl
in
sub
lcall
xor
xchg
lock
daa
add
xorb
int
arpl
mov
xchg
incl
in
loop
mov
fisubl
jl
lret
leave
aas
fidivrs
lock
cli
push
aam
mov
add
mov
sub
fcomps
add
sub
dec
add
roll
xlat
push
jg
inc
push
cmp
or
pop
ja
add
push
mov
push
pop
push
cmp
jle
addsubps
jge
lea
xor
pop
popa
jbe
add
pop
jg
sub
divl
adc
and
push
insb
inc
sbb
adc
out
sub
fidivl
shl
push
mov
pop
or
sbb
or
sbb
sbbb
cmp
and
jmp
or
sar
jb
pop
ret
add
push
notb
lea
cmp
mov
shll
pushl
popa
rorb
dec
push
dec
adc
fimull
adc
sbb
push
je
cmpsl
mov
sub
call
fstpt
fs
add
cli
push
fs
pop
adc
das
icebp
dec
or
xor
sub
rclb
sbb
dec
inc
movsl
cmp
sub
pushl
xchg
in
adc
je
add
call
push
jge
daa
rcll
dec
fists
inc
hlt
in
pop
cmp
insb
sbb
ds
mov
dec
push
shlb
test
mov
into
and
pop
jnp
or
je
popa
test
push
jne
loope
incl
sbb
pop
add
mov
stos
and
mov
sub
ret
add
xchg
call
mov
les
test
mov
push
dec
inc
push
push
fcomip
jmp
js
sub
add
shlb
push
or
fldcw
incl
popa
enter
lock
data16
call
fldt
mov
incl
push
and
inc
adc
pop
mov
fsubrl
hlt
and
lcall
or
xchg
mov
arpl
int
mov
lock
stos
into
ljmp
insl
mov
aam
subl
add
movb
pop
add
pushl
dec
jne
mov
call
jo
test
adcb
ret
or
imul
int
call
xchg
push
loopne
lcall
lcall
or
cmc
scas
pushl
shrl
es
cmp
add
mov
insb
sbb
add
jmp
dec
insb
push
daa
popa
lods
ficoml
xor
inc
stos
mov
xchg
inc
test
xchg
sahf
arpl
adc
das
rclb
xorb
in
scas
es
sti
pop
push
or
outsl
push
add
addr16
jl
or
sub
or
enter
push
mov
cli
jp
cmpsl
out
popf
fs
jl
xor
call
sti
mov
or
xchg
movsl
xlat
insb
insb
jl
jbe
and
pushf
int
sahf
sbb
out
jbe
out
add
jmp
push
xor
sbb
adc
in
sub
jmp
nop
add
pop
stc
mov
bound
mov
jo
dec
adc
sbb
inc
popf
pop
mov
call
inc
mov
add
push
data16
pushf
shll
cs
mov
jmp
or
sarb
lret
cs
push
test
incl
push
mov
jb
push
push
and
out
mov
dec
dec
mov
sbbl
inc
mov
inc
or
aam
pop
in
pop
and
xchg
test
sbbb
dec
mov
call
pop
stc
fidivs
ja
adc
inc
push
mov
es
jg
test
push
lret
jg
inc
jbe
sar
and
mov
inc
dec
aam
mov
fisttps
and
pop
mov
inc
out
xlat
xor
andb
and
mov
or
mov
es
out
sar
sbb
pop
cld
add
adc
and
pop
pop
and
sub
jmp
shrb
fbld
into
add
jg
add
add
push
es
cmp
adc
orb
jmp
or
xor
popa
adc
mov
aaa
cmp
push
add
pusha
dec
xor
je
repz
pop
into
and
adc
dec
mov
mov
jo
lds
dec
dec
mov
rcr
mov
push
dec
pop
incl
clc
xlat
and
jmp
bound
pop
inc
nop
into
pop
jl
xchg
xor
sbb
sub
mov
gs
sbb
push
mov
decl
cmc
sub
int3
push
and
jnp
jl
jmp
jl
pop
or
add
insl
inc
loopne
mov
push
shll
jb
push
cmc
push
scas
add
inc
pushf
push
cld
pop
gs
mov
adcb
push
addr16
dec
mov
xchg
in
int3
aam
inc
addr16
scas
and
push
mov
sbb
adc
push
lcall
repz
lds
inc
or
cmp
test
push
mov
aaa
dec
jmp
insb
adc
or
sbb
add
test
les
pop
arpl
arpl
push
and
xchg
repz
cmpsl
popa
lcall
icebp
call
dec
lcall
push
ret
into
or
incl
and
cmp
movsb
xchg
xchg
jle
pop
cli
call
adc
into
stos
xor
and
mov
lods
sbb
js
mov
out
call
and
ret
pop
xor
rclb
xchg
decl
jge
mov
mov
pop
lods
and
mov
leave
pusha
or
rcll
sbb
pop
popa
ja
mov
sub
sub
sub
inc
jne
cmp
sub
lods
mov
add
jmp
fdivrs
and
divb
jmp
push
jmp
arpl
inc
repnz
jmp
add
jmp
push
decl
orb
pop
or
rolb
sub
out
in
fwait
push
push
mov
icebp
jge
rep
push
adc
xlat
add
aas
std
pop
mov
ss
inc
loopne
push
dec
std
sbb
lcall
incl
dec
pop
sbb
aaa
mov
inc
cmp
ret
mov
pushl
jnp
or
js
sub
shrb
jg
fwait
or
or
adc
popa
push
push
mov
pop
pop
mov
and
rorl
and
or
sbb
rcrl
push
sbb
decl
and
jge
pop
fsubrs
mov
add
sbb
push
testl
jmp
sub
lock
cli
pop
push
sbbb
cmp
or
inc
pop
cmp
adc
loopne
mov
lcall
inc
or
sahf
xor
jle
inc
or
pop
push
popa
hlt
xchg
test
ret
sub
sbb
mov
fisttps
rcll
and
adc
jmp
loope
je
dec
sbb
ja
jne
addr16
outsl
repnz
lock
nop
fimull
add
dec
mulps
jmp
pop
mov
and
lret
movsb
movsl
push
stos
aas
les
pop
incb
xchg
cli
adc
adc
sub
cs
sub
adc
movb
ss
faddl
out
pop
xchg
hlt
sub
xor
mov
cmpb
out
mov
xor
popa
int
pushl
xor
cmp
add
pop
add
adc
push
jne
mov
dec
aas
pusha
cmp
filds
call
gs
jl
fldl
lock
insl
adc
inc
ret
push
cs
call
inc
add
fsubs
ficompl
ret
dec
fcomip
jmp
adc
xchg
adc
and
dec
hlt
add
xor
xchg
mov
loopne
scas
cli
jmp
add
dec
dec
lcall
xor
in
repnz
sbb
add
pushl
or
add
sbbb
jb
dec
int3
or
loope
cmp
dec
js
test
mov
jmp
inc
flds
out
or
insb
xchg
mov
sar
incl
outsb
adc
test
shr
fdivl
jg
popa
mov
je
push
into
push
das
ljmp
sbb
ljmp
add
sub
movsl
rorb
bound
loope
bound
clc
call
insl
orb
out
arpl
cmp
push
decl
add
cmpsl
sbb
gs
stos
add
dec
adc
pop
loopne
mov
das
add
decl
xlat
mov
xor
inc
jmp
mov
adc
xor
loope
push
pushl
in
inc
add
xor
adc
add
decb
inc
push
mov
lods
xor
pushf
inc
or
jg
ljmp
insb
mov
jno
enter
jmp
fistl
shrl
rolb
dec
fisttps
leave
incb
adc
sbb
enter
push
orl
inc
shr
mov
adcl
cld
jg
and
mov
mov
or
call
loope
add
xchg
add
insb
pop
divb
int3
mov
jmp
addr16
es
or
dec
orb
sbb
and
andl
sbb
xlat
pushf
inc
cmp
decl
rol
scas
in
ljmp
pop
adc
and
call
ljmp
jae
pop
shrl
xchg
push
test
inc
mov
xor
sbb
sbb
movsb
sbb
sub
jmp
adcl
in
nop
xor
iret
or
cltd
in
push
jg
and
pop
jo
add
cmpsb
push
fucomp
xchg
loop
mov
sbb
jbe
mov
and
adc
lret
mov
lret
sbb
and
sub
and
or
cmp
xchg
or
ja
cmp
jl
into
jno
jo
sub
push
or
cmc
cmp
leave
or
in
pop
adc
jg
mov
jge
call
xor
test
sbb
icebp
je
movsb
movsl
cs
lcall
sbb
push
cmp
cld
out
mov
lds
or
add
int3
and
rol
ljmp
sbb
cmp
into
test
push
pop
and
mov
and
lcall
call
xor
or
test
les
cmp
mov
xchg
test
adc
jb
shrb
lcall
imul
sub
adc
jle
push
sub
add
add
lahf
pop
int
push
loop
jb
call
push
push
jns
js
std
or
in
mov
lea
mov
dec
jo
hlt
pop
fildll
inc
dec
adcb
adc
jno
jo
ret
ljmp
in
add
fs
mulb
sub
pop
insl
movsb
sti
add
cmpsb
jno
add
addl
push
in
insb
inc
rcrb
jo
jg
adc
sahf
mov
rcll
bound
jmp
add
ljmp
pop
mov
or
bound
test
mov
pop
mov
and
stc
add
ljmp
add
leave
jbe
or
mov
jmp
decb
loop
or
loopne
push
or
ljmp
xor
test
hlt
jo
std
mov
and
test
add
dec
lock
loop
in
dec
push
push
push
cmp
aam
pushl
lods
jns
push
add
dec
or
inc
xor
add
xchg
mov
add
mov
sbb
or
adc
sub
inc
mov
mov
sbb
add
and
ja
loop
inc
xor
test
bound
jnp
leave
test
cmp
fucomip
mov
pop
adc
test
mov
out
mov
inc
sub
insb
mov
xor
addb
addr16
aaa
not
insb
pop
xchg
stos
mov
mov
mov
lea
and
sti
mov
sub
call
cmp
out
mov
cmp
jo
ljmp
incl
ss
add
pop
nop
nop
add
xchg
inc
pop
je
decl
or
scas
sub
cmpb
push
cmp
std
ss
dec
je
mov
in
std
addb
and
ljmp
test
out
loope
or
dec
into
push
pop
mov
aaa
std
jecxz
dec
movsb
and
sbb
add
or
xchg
rclb
enter
loopne
pushl
jp
or
xor
or
in
mov
add
cmp
je
sub
aam
mov
fisubrs
xchg
sub
add
pop
push
xor
add
pop
cld
pushl
cmp
adc
jp
xchg
test
xchg
mov
cmpsl
test
add
pushl
and
cltd
insl
push
mov
scas
xor
mov
mov
push
push
das
addb
pushl
daa
mov
push
std
addr16
sar
inc
rcl
loop
or
das
mov
add
shl
add
shr
clc
jge
push
mov
cmpsl
mov
add
mov
sub
cld
lcall
mov
sbb
or
add
ljmp
sbb
jp
adc
add
jo
or
dec
fildl
pushl
faddl
and
nop
mov
xor
pop
dec
outsl
pop
sub
cwtl
outsb
neg
and
jecxz
testb
push
pop
inc
dec
jb
inc
push
ja
and
pop
decl
movzwl
mov
cmpsl
movsb
es
ds
xor
rolb
daa
mov
mov
das
je
or
mov
out
test
incl
add
mov
or
fldl
movsb
jge
sbb
mov
xchg
sar
mov
sbb
push
ss
mov
pop
add
xor
orb
and
pop
sub
push
jbe
imul
pop
test
inc
scas
add
sar
mov
in
int3
xchg
call
mov
mov
pop
fwait
and
mov
movq
stos
scas
cld
call
sub
leave
enter
clc
mov
sbb
mov
sbb
test
adc
jp
mov
pop
push
inc
daa
cmp
hlt
aad
jo
inc
adc
jmp
push
push
jb
add
inc
xchg
in
je
cmp
es
pop
clc
test
push
movsb
inc
add
cmp
mov
pop
pop
call
dec
push
and
xchg
mov
roll
inc
aaa
jmp
xchg
out
adc
adc
jne
fsub
nop
sbb
cwtl
and
xor
jns
in
push
je
je
pushl
sti
in
or
test
or
and
adc
adc
sub
loopne
clc
ljmp
inc
push
pop
pop
js
sbb
in
pusha
adc
xor
mov
mov
mov
inc
push
sub
mov
sbb
fiaddl
cmp
ja
push
jecxz
lcall
in
push
xchg
mov
add
pop
push
pop
mov
pushf
add
inc
fcmovnb
adc
das
cmpb
sub
aam
pop
js
add
sbb
mov
push
scas
das
shrb
gs
push
cmpsl
lcall
out
pusha
xchg
movsb
or
pop
test
sbb
ljmp
or
xchg
loopne
test
ret
sbb
lods
and
jo
icebp
push
add
js
lcall
adc
dec
in
cmp
push
mov
mov
pop
sbb
incl
sub
jns
test
popa
or
adc
jno
cs
imul
adc
mov
lea
pushl
mov
dec
cmc
mov
xchg
cld
push
push
popa
mov
sbb
sbb
decl
adc
aam
and
sti
test
xor
dec
mov
in
push
movsb
and
inc
cmp
jbe
mov
bound
jbe
pop
orb
push
jnp
and
fcoms
or
adc
inc
mov
incl
dec
dec
cwtl
mov
into
cmp
roll
lcall
adc
pop
pop
cltd
or
mov
test
cltd
inc
sbb
sub
xchg
stos
add
sbb
mov
push
jne
fcomip
incl
mov
sbb
xlat
or
movsl
enter
inc
aam
jb
or
fdivs
or
cmc
in
aas
orb
or
pop
sbb
popw
adc
out
dec
aam
push
push
push
fisttpll
adc
cld
push
and
cmp
lods
in
in
push
jmp
adc
jo
add
test
decl
ss
sub
out
mov
mov
xor
add
lcall
stos
dec
ror
pop
repnz
pop
fdivrs
push
push
ret
ret
mov
adc
add
sub
push
inc
in
inc
cwtl
xor
loopne
popf
pop
dec
jmp
jo
mov
add
inc
add
out
xorl
enter
push
xchg
jp
call
loopne
cmp
mov
sub
out
and
or
inc
lock
add
pushl
rorl
dec
and
int3
or
insb
repz
sbb
ds
or
pusha
xor
or
fisttps
jmp
and
int3
jo
das
push
add
movsl
adc
rorl
test
push
push
jg
jp
add
insl
sbb
stc
jb
ficoml
in
pushf
add
sti
mov
inc
add
mov
jb
lcall
push
inc
inc
push
push
ljmp
or
lock
pushl
out
call
lret
pop
push
jnp
xor
push
lock
call
sub
aas
or
insb
jo
dec
inc
in
mov
push
out
jbe
mov
std
call
and
and
push
inc
or
xor
inc
xchg
cmpb
xor
mov
cli
fwait
sbb
push
inc
jmp
in
call
and
inc
fldenv
in
cmp
mov
push
lods
push
sub
push
or
ljmp
sbb
test
outsb
xor
jl
push
loop
cmc
ds
mov
call
rolb
shlb
pop
xchg
sbb
sub
sti
push
das
stos
pop
adcl
sbb
sub
mov
inc
push
call
lds
adc
lcall
imul
jbe
out
or
ja
mov
cmp
jo
loop
jb,pt
ja
jbe
stos
pop
pop
pushw
and
sbb
mov
orb
and
mov
lea
sbb
or
jg
call
adcl
lcall
add
and
jo
and
loopne
jmp
add
sbb
les
or
mov
mov
loope
cli
mov
mov
inc
jg
nop
xchg
xor
jecxz
xor
dec
mov
pushf
test
cmp
call
int3
dec
jg
pop
lock
fwait
push
inc
loope
scas
dec
pop
push
pop
lea
jl
adc
cmp
cwtl
jns
and
sub
aaa
add
mov
and
rolb
aam
ret
mov
divb
push
test
push
mov
dec
jbe
push
sub
inc
sbb
and
stos
xor
push
dec
insb
leave
notl
jl
dec
xchg
mov
push
add
sub
ljmp
adc
jmp
and
lock
in
and
sub
adc
push
mov
adc
int3
xchg
call
nop
mov
enter
pusha
shrb
loopne
enter
loop
lcall
aad
aas
test
inc
lcall
push
decl
out
add
or
xor
cld
loope
in
inc
push
adc
push
mov
rcll
fisubl
inc
in
jmp
xchg
mov
loopne
and
test
xchg
shlb
mov
pop
lods
mov
hlt
ljmp
xchg
pop
xchg
lock
xchg
push
mov
sar
call
push
pop
cmp
pop
out
lcall
xor
cmpsb
jp
cli
add
cmpl
xchg
popf
push
sbb
inc
sbbb
ja
pop
xor
add
clc
fildll
adc
add
js
imul
nop
out
jmp
dec
lock
xchg
and
cltd
in
push
sub
and
mov
js
test
pop
cmpsb
ret
xchg
int3
in
inc
xor
fimuls
cmp
pushf
sub
jmp
repnz
call
xor
and
call
xchg
dec
int3
int3
push
jg
ds
pusha
pop
sbb
sub
cmp
add
adcb
and
mov
push
ljmp
mov
inc
jge
cmp
mov
xchg
filds
addb
outsb
push
cmp
fldl
fs
lods
cli
nop
cmp
cmpb
and
jg
add
mov
push
scas
xor
ja
xor
add
aam
push
mov
bswap
lcall
fs
and
test
mov
sahf
sbb
sahf
push
je
test
xchg
incl
sub
lea
mov
sub
sbb
lcall
inc
je
lcall
lcall
xor
call
cmp
stos
inc
dec
ret
sahf
insb
sbb
sbb
push
test
sbb
jne
inc
mov
pop
jl
push
jns
cmp
shlb
andw
dec
insl
loop
pushl
cmp
aaa
and
mov
daa
fstp
pop
or
push
mov
push
loope
inc
push
ja
adc
incl
in
jp
dec
fildl
ret
jne
adc
push
mov
pop
or
notb
inc
dec
nop
fsts
push
in
mov
cmp
js
inc
ret
sahf
mov
mov
sarl
mov
adc
inc
mov
out
popf
inc
mov
insl
push
int
push
jmp
adc
mov
leave
or
cmp
cmp
icebp
sahf
push
xor
lcall
inc
out
push
daa
rorl
or
incl
fstpt
mov
test
cmp
dec
pushl
sbb
and
bound
sub
push
push
mov
outsl
jo
adc
or
call
mov
xchg
and
popa
clc
sbb
xchg
fimull
mov
or
int3
pop
js
andb
cmp
aaa
and
loopne
mov
subb
mov
jne
cmp
inc
xor
enter
cmp
xchg
int3
out
or
adc
arpl
decl
lds
int3
test
xchg
pusha
xchg
jo
dec
and
mov
incl
stc
push
out
and
lock
add
push
in
incl
xchg
ficoms
pop
enter
add
adc
out
add
or
pusha
mov
mov
mov
sub
dec
int3
lcall
ret
pusha
add
mov
dec
push
mov
int3
mov
lea
icebp
cld
jb
lds
sbb
jp
les
cmp
inc
pop
ss
pusha
inc
enter
xchg
es
insl
jmp
mov
and
sub
dec
pop
dec
jmp
mov
inc
aam
or
pop
jbe
inc
fcomip
mov
pop
cs
cmp
jmp
dec
push
pusha
nop
push
jmp
sbb
xor
push
and
and
clc
push
push
push
add
add
lods
dec
add
add
push
cld
sub
inc
imul
mov
aaa
cmp
jg
insl
fiadds
sub
pop
jmp
adc
call
or
lcall
xor
xor
pop
jb
jae
sbb
add
jmp
in
jmp
orb
jne
cmpl
add
movsb
mov
sbb
dec
mov
test
stos
add
adc
orl
push
and
push
mov
ja
pop
sub
cld
jg
test
or
movsb
push
roll
and
push
cld
mov
add
cmp
inc
scas
cmp
mov
ret
push
adc
stos
nop
add
cmp
dec
push
lahf
jg
movsb
decl
jb
pushf
call
cmp
loopne
in
call
jmp
add
test
mov
dec
cld
ds
push
mov
jge
cwtl
mov
add
mov
or
mov
popl
mov
test
inc
add
data16
hlt
fildll
mov
pop
mov
inc
mov
mov
push
pop
xor
push
loope
or
decl
mov
loopne
sub
ret
out
and
aam
outsl
call
add
es
push
cmpsl
mov
jg
push
lds
ret
and
pushl
movl
mov
push
sbb
fildll
and
pop
sub
or
and
xor
inc
mov
call
lea
stc
dec
mov
lock
pushf
out
sahf
pop
insb
mov
das
jl
nop
mov
push
or
mov
mov
xor
add
push
lcall
push
ja
ljmp
bound
push
int
into
shlb
xor
cmpsb
mov
jp
add
cmp
sbb
int3
cltd
mov
cmpsb
incl
sub
or
or
ficompl
inc
outsl
inc
adc
mov
testb
dec
inc
repnz
stos
dec
xchg
fistl
add
pushl
cltd
mov
je
mov
xchg
mov
xchg
and
dec
and
mov
fsubrs
inc
lcall
rcrl
sbb
sbb
push
inc
mov
inc
roll
pusha
push
rcrb
or
popa
iret
or
in
outsl
aam
fdivrs
dec
add
add
sbb
xchg
daa
jecxz
xchg
inc
add
in
pop
gs
idiv
mov
adc
or
cwtl
sub
das
decl
rclb
addr16
push
mov
add
jg
outsb
cld
movsl
jp
mov
and
push
lds
cli
and
lods
add
popf
fstpl
sar
das
sar
adc
sub
mov
inc
mov
xchg
fistpll
clc
push
test
or
sub
mov
stos
clc
dec
push
jnp
adc
dec
out
mov
aam
mov
push
clc
push
shlb
sub
inc
sbb
mov
popa
loopne
sbb
enter
aas
pop
add
sub
inc
inc
xlat
dec
pusha
mov
ljmp
xchg
imul
mov
push
xor
in
call
jno
adc
xchg
push
xor
xor
xchg
icebp
or
pop
mov
lret
mov
pop
mov
pop
add
add
push
das
pop
sub
mov
jle
lea
and
repz
cmp
adc
insl
adc
mov
je
mov
dec
push
and
add
jle
sub
jno
add
add
add
in
sub
orl
in
dec
adc
out
les
xor
pushl
int
lods
jmp
addr16
sbb
sbb
lcall
xor
fisttpl
ljmp
sbb
adc
mov
mov
xchg
push
fstp
or
or
add
lahf
pushl
test
pop
jmp
dec
mov
mov
mov
lds
mov
sub
xor
cli
call
add
mov
adc
pop
pusha
loope
push
inc
test
and
decl
adc
aas
and
lahf
jp
fs
js
ss
je
jp
add
mov
sar
incl
lahf
mov
pop
rclb
test
cld
aaa
or
lcall
push
mov
rolb
and
ja
sar
and
sti
sahf
xor
daa
call
ljmp
int3
xor
xchg
pushf
pop
jb
loopne
out
enter
enter
out
jg
fldt
pop
je
or
cmp
mov
xor
sub
and
rol
sbb
mov
fimull
icebp
or
call
ret
or
clc
push
mov
popa
inc
test
push
mov
add
sbb
call
pop
cmp
jmp
push
sbb
add
movsb
xor
scas
xchg
cltd
in
jmp
pushl
adc
adc
sub
and
adc
xchg
dec
add
pop
cmp
ljmp
fcoml
cmp
and
fadds
push
ljmp
std
ljmp
sbb
xchg
pop
call
ss
lret
pop
pusha
jg
xchg
sub
test
je
rolb
add
xor
lcall
adc
popf
sbb
dec
enter
jb
push
fcoml
cmp
adc
fsts
cmpsb
add
fcompl
insb
mov
cmp
adc
jg
ljmp
faddl
xor
pop
inc
clc
push
jg
adc
je
sub
lret
mov
pushl
and
sbb
out
repz
mov
add
call
clc
jmp
push
shl
outsb
stos
subb
push
push
out
push
ljmp
rclb
loopne
inc
sub
and
or
add
orl
jmp
pop
test
sbb
or
jmp
push
cmp
jmp
les
push
mov
mov
jmp
fld
pusha
or
jmp
fldcw
fisttpl
lea
mov
lcall
inc
imul
adc
shl
push
sahf
ret
icebp
inc
and
add
repnz
mov
loopne
insb
insb
sahf
outsl
cmp
dec
push
cmp
push
dec
test
incl
adc
sbb
dec
and
pop
cmp
jbe
int
pop
lds
push
call
addr16
incl
rcll
push
out
ljmp
adc
push
mov
xor
or
lahf
sub
cmp
dec
mov
add
push
push
xlat
movsb
hlt
aaa
inc
fisubl
pop
dec
popa
inc
ja
out
test
aas
xor
popa
pop
xor
push
push
or
sar
stos
push
call
sub
mov
pop
xor
inc
jg
dec
cmc
cmp
push
cmp
sub
test
push
mov
xor
xor
cmpsb
or
mov
cmpsb
imul
mov
cmpsb
xor
adc
or
push
sub
cli
lcall
test
sub
rcrb
add
push
add
cs
sbb
push
cld
push
push
lea
add
testl
sti
out
cwtl
push
hlt
push
adc
aas
or
or
jbe
dec
add
push
adc
sti
pusha
pop
inc
ljmp
ret
lods
push
sub
jb
mov
mov
int3
ret
sti
xor
inc
sub
jmp
inc
cwtl
mov
ss
cwtl
lret
push
mov
mov
adc
fnstsw
in
add
scas
and
or
mov
stc
inc
inc
cmp
jl
aas
cltd
sub
mov
aad
stos
inc
std
pop
or
jg
test
scas
fwait
push
mov
add
mov
pusha
imulb
sahf
sbb
jg
mov
lods
dec
ret
or
sub
xchg
add
and
dec
out
or
dec
orb
sar
jg
sahf
add
lods
pop
adc
andb
mov
cmc
fiaddl
in
and
lods
or
test
jg
pushf
cmpsb
mov
pop
negl
cmpsl
sub
or
ret
fwait
sbb
mov
stos
stc
ret
adc
lea
or
sub
push
movsl
adc
stos
mov
lods
ret
aad
dec
test
dec
mov
adc
std
call
cwtl
sbb
test
mov
jne
xchg
jg
loopne
mov
rep
jl
sbb
jne
decl
pop
or
xchg
incl
xor
inc
jo
insl
fisttpl
outsl
mov
add
cmp
pop
test
add
lcall
add
push
inc
cmp
mov
sbb
xchg
lock
pop
xor
mov
filds
dec
xor
xchg
sbb
dec
orb
in
mov
je
es
mov
outsb
insb
and
cmp
add
mov
pop
mov
stos
sbb
popf
fwait
xor
adcl
shl
aas
inc
cmp
jle
dec
cmp
jl
jnp
pushf
outsl
cli
das
xchg
dec
shl
add
push
or
pop
xchg
lock
add
fcomps
pop
add
lret
xchg
jmp
mull
sti
test
jp
push
jmp
clc
or
les
pop
inc
aas
push
fstps
call
mov
inc
push
fldt
push
add
or
stos
fwait
mov
cmpb
popf
lcall
in
and
rolb
and
xchg
adc
or
dec
repz
or
into
and
mov
orps
es
mov
add
or
je
out
scas
lea
cwtl
mov
int
lcall
xchg
jge
movsb
movsb
mov
xchg
adc
sahf
loope
or
imul
cmpsl
or
pop
sub
jg
adc
mov
pushf
push
notl
push
cld
pushl
lea
cld
sub
jbe
pop
enter
std
rclb
fists
push
push
lea
mov
clc
mov
adc
adc
sbb
cs
outsl
mov
insl
lock
or
sbb
inc
inc
pop
out
andb
or
sbb
mov
mov
push
adc
fsubs
inc
bound
sbb
pop
pop
and
lock
mov
inc
es
sbb
imul
call
push
insb
inc
into
sub
or
adc
movsb
imul
or
incl
jo
and
in
push
cmp
jge
or
cmp
orb
or
pop
mov
fstpt
cmpsl
sbb
mov
jge
adc
aam
pop
hlt
decl
mulb
xchg
movsl
shrb
inc
add
jbe
dec
decl
pop
jbe
sub
xor
sub
stos
insl
dec
mov
int3
aas
xchg
sub
add
aad
and
adc
clc
lcall
lret
sub
call
shr
and
jmp
pop
std
jmp
xor
dec
je
mov
adc
in
mov
rol
mov
jbe
push
repnz
ljmp
or
rclb
shrb
fmull
sti
sar
xchg
jmp
outsb
mov
jmp
and
insl
mov
or
addl
pop
ljmp
popa
loop
add
xchg
adc
sub
lods
sub
ret
jmp
jnp
dec
ret
inc
in
fsubl
add
aam
int3
movntps
sarb
nop
mov
lret
js
jo
sbb
mov
push
push
push
lods
push
jg
dec
adc
mov
add
dec
cmpl
shrl
jno
cmp
push
add
stc
in
orl
pushl
insb
out
and
mov
je
loop
xchg
and
call
bndstx
sub
ds
fcomp
loopne
push
xor
push
fnstcw
and
cmp
pop
call
enter
and
cmp
pop
sub
call
leave
mov
ljmp
mov
stos
inc
add
push
add
cltd
int
shrl
cmp
imul
std
xor
jbe
pop
jns
sbb
mov
ljmp
cmpsb
fisubrl
icebp
lcall
push
sarb
xchg
pop
cltd
push
mov
in
mov
mov
sbb
inc
fmull
gs
inc
ret
fisubrs
lcall
lcall
xor
mov
sbb
arpl
inc
push
cmp
outsb
and
dec
decl
and
mov
push
out
shlb
add
or
jecxz
mov
gs
add
push
xorb
mov
mov
hlt
fstps
xor
xor
push
jae
insl
pushf
int3
lea
jo
push
lods
jo
adc
add
dec
test
xchg
mov
push
sti
jge
inc
test
sub
sbb
out
outsb
or
sub
call
aam
icebp
rclb
add
lcall
dec
adc
add
loope
pop
mov
xchg
push
add
lcall
add
nop
fistl
sbb
xchg
push
ljmp
cli
frstor
sub
lcall
dec
mov
jmp
adc
aaa
sub
outsb
xchg
or
loopne
sahf
fildl
cmc
incl
dec
push
into
add
and
rolb
int3
xor
adc
add
mov
and
sub
incl
cmp
sti
lock
adc
clc
inc
pmaxsw
fsts
mov
cmp
inc
add
imull
push
or
cmc
dec
cld
pop
int
std
fwait
aam
pushl
add
inc
cmpsb
imul
adcb
xchg
fwait
inc
insl
jae
das
gs
add
fisttpll
neg
idiv
push
push
imul
insl
dec
fbstp
insb
add
add
add
lcall
dec
outsl
fwait
mov
push
insb
jne
inc
or
push
mov
xor
xchg
jg
add
adc
gs
pop
push
popa
jbe
ljmp
inc
add
adc
std
jg
adc
xchg
fs
gs
xor
std
sbb
mov
je
jo
add
incl
push
dec
inc
dec
push
ret
data16
dec
inc
push
sbb
jae
das
test
sub
inc
xchg
int
push
inc
adc
jo
add
push
les
and
das
add
fbld
inc
jmp
cs
mov
sub
mov
dec
sbb
jbe
sti
and
je
xchg
jne
mov
and
adc
hlt
pushl
ret
mov
outsb
inc
repnz
nop
or
and
and
pop
decl
in
xchg
ljmp
inc
jo
add
cmp
pop
jl
pop
popa
jae
add
ds
filds
push
nop
cmp
imul
outsl
and
xor
fidivs
jns
cmp
imul
popa
mov
arpl
push
xchg
outsb
pop
fs
cltd
mov
jg
xor
mov
xor
jge
xor
imul
mov
cmp
std
mov
inc
fs
xor
outsb
out
push
mov
mov
mov
jb
insb
shrb
das
cmp
aas
and
std
mov
imul
xor
pushl
and
inc
outsl
fcmovbe
jno
outsb
jae
les
push
dec
imul
mov
dec
addr16
nop
arpl
jp
and
push
fcomps
ja
xor
cmp
push
outsl
sub
inc
insl
mov
add
call
lcall
fcmovnu
cmp
andb
adc
je
mov
or
insb
sub
into
icebp
imul
adc
out
data16
pop
pop
mov
push
cs
and
sti
out
imul
incl
inc
loopne
gs
sub
in
mov
lcall
xor
roll
mov
xor
push
cs
cli
jmp
pushl
inc
test
loopne
outsb
push
outsb
add
dec
inc
or
std
mov
out
dec
and
ja
je
xchg
xor
adc
jae
jmp
inc
jle
je
inc
insb
mov
in
out
cltd
outsb
add
jmp
aam
jne
daa
dec
or
inc
mov
push
mov
adc
push
out
scas
fmuls
movsb
js
cwtl
jae
jb
cmc
lcall
in
mov
ficoms
arpl
sbb
mov
mov
and
xor
imul
jmp
pop
jae
ret
scas
push
pop
insb
inc
arpl
jmp
add
movd
push
and
cli
outsl
bound
aaa
sbb
insb
jnp
call
jbe
adc
loope
pop
fdivs
test
insl
mov
fwait
loop
outsl
jne
popf
pop
imul
or
sbb
push
adc
dec
ret
ja
pop
jo
xor
outsb
ret
popa
insl
or
dec
sarl
xor
int3
dec
out
rcrb
inc
push
mov
ret
insl
pop
insl
jecxz
stos
out
in
insl
faddl
push
fcmovnu
addr16
std
pop
mov
mov
add
daa
pop
jle
jnp
popa
mov
jo
xor
sub
leave
push
ss
scas
jb
push
adc
ljmp
push
pop
pop
imul
arpl
outsl
fadd
xchg
jg
pop
pop
and
push
outsb
stc
insb
sub
bound
adc
sahf
imul
aas
sbb
sbb
lret
and
incl
js
mov
bound
inc
arpl
cmp
test
jg
adc
out
lods
out
lods
imul
push
loopne
call
push
outsl
and
mov
insb
scas
and
sbb
ja
call
xor
xlat
js
mov
fcompp
adc
icebp
stos
and
insb
ret
sbb
outsb
inc
xor
repnz
arpl
and
shll
mov
add
pusha
or
xorb
scas
jae
stos
mov
inc
inc
pop
outsl
sub
ret
sbb
and
pop
ljmp
stos
or
inc
rcr
fistpll
sub
adc
or
fs
in
cmpsl
movsl
je
push
cld
jg
pop
push
insb
jmp
lret
pop
popa
adc
mov
frstpm(287
in
loopne
jg
add
insb
pop
push
or
mov
jns
enter
ret
test
test
inc
sbb
xor
iret
flds
dec
and
push
or
js
xchg
pop
mov
gs
push
push
jae
add
jg
xchg
pop
stos
lahf
xor
je
xchg
fwait
jne
xor
pusha
adc
arpl
pop
fdivr
dec
mov
adc
mov
sbb
inc
pop
outsb
fsubrs
enter
aas
int
pop
jae
or
and
jg
ljmp
arpl
jg
icebp
xchg
push
xchg
int3
sbb
sarl
pop
and
incl
pop
out
pop
push
int3
inc
dec
inc
pop
or
out
dec
push
inc
stos
or
das
or
push
pop
dec
or
sbb
mov
call
gs
arpl
sub
and
push
insb
sbb
inc
sub
and
jmp
pop
out
ret
jle
jne
daa
stos
dec
xchg
out
insl
xchg
and
or
ss
or
arpl
mov
adc
add
jecxz
pop
push
inc
imul
incl
cld
push
pusha
pop
psubsw
and
jg
rcr
dec
inc
lods
hlt
jp
and
incl
sbb
popa
and
inc
xor
pusha
jg
test
imulb
dec
jo
or
inc
inc
jge
ja
mov
ret
mov
inc
push
pop
xor
cmp
fildll
mov
jl
out
xor
arpl
add
data16
cmp
push
mov
xchg
xor
inc
lahf
mov
jp
cmp
inc
out
pop
push
sbb
in
mov
xor
popa
pusha
inc
jp
out
mov
hlt
or
cwtl
mov
ret
jg
or
sbb
and
andl
adc
lcall
faddp
mov
or
and
js
fdiv
or
mov
loop
inc
test
xchg
pop
fwait
leave
scas
inc
sbb
lahf
bound
sub
jle
rolw
fs
push
sub
dec
mov
xor
jae
cld
filds
cmp
cmp
pop
jb
dec
mov
scas
ljmp
mov
pop
jnp
int3
bound
mov
dec
outsb
nop
ljmp
lcall
or
xlat
stc
sbb
ret
sub
insb
pop
sub
mov
dec
call
mov
iret
iret
jb
sbb
lcall
mov
mov
jae
pop
xchg
dec
mov
ret
imul
fwait
or
call
mov
js
leave
pop
push
xor
push
addl
or
mov
inc
cmp
or
jg
sbb
sbbl
aas
nop
popl
mov
in
lds
or
push
loope
call
rolb
imul
or
dec
jo
pop
xor
je
ljmp
or
push
mov
fldl
sub
sub
jo
lret
cld
decl
pop
dec
xchg
inc
and
loopne
fwait
imul
call
mov
popa
mov
and
leave
or
fnstsw
push
shll
mov
icebp
mov
dec
jnp
mov
adc
dec
sar
bound
cmp
and
cmpsl
mov
xchg
decl
jns
inc
inc
inc
jne
outsl
ficompl
fildl
or
sbb
jl
das
and
movsl
or
test
lahf
mov
xlat
push
mov
pop
and
and
mov
mul
xchg
aaa
std
pushl
jns
xor
push
popa
repz
jbe
mov
fs
insl
inc
loopne
decl
sbb
pusha
lret
lretw
nopl
pop
jbe
push
jb
xor
je
shlb
jbe
dec
push
addl
hlt
call
jecxz
sti
sub
or
or
jo
add
shrl
ljmp
xlat
push
sar
jnp
xor
xlat
popa
in
rcrb
push
sbb
adc
adc
fstps
cli
jae
jmp
cmp
push
cs
jbe
and
inc
push
push
adc
inc
jb
push
and
inc
adcb
sbb
pop
iret
dec
gs
scas
arpl
insl
lcall
inc
add
sti
cmpl
popa
mov
pusha
fisttpl
cli
jns
cmp
xlat
dec
xchg
jae
int
and
imul
dec
outsb
mov
movl
rcl
sbb
or
adc
rolb
mov
movsb
add
mov
cs
ljmp
mov
arpl
shrl
adc
fldcw
dec
jecxz
adc
push
inc
lcall
enter
fs
pushf
add
icebp
es
and
fwait
push
jp
lcall
fists
lret
pop
inc
inc
jecxz
rcrb
adc
das
push
sbb
hlt
push
decl
and
push
dec
adc
pop
fistpl
lds
pushl
xchg
mov
dec
lcall
or
dec
add
mov
jno
mov
bound
push
std
push
dec
inc
ljmp
inc
xor
pop
inc
sbb
sti
push
cmp
mov
incl
sbb
adc
lret
icebp
lcall
inc
js
pop
and
sub
and
in
lods
adc
mov
xor
cmp
fadd
inc
jo
jg
sbb
sub
popa
das
js
aas
sub
and
sub
pop
icebp
out
shll
push
andl
and
inc
lds
dec
incl
into
mov
cld
adc
bound
cmpsb
jne
sub
ret
mov
dec
add
and
sbb
cmpsb
add
xor
lea
fisubrs
push
outsl
sbb
loope
dec
dec
and
out
sbb
scas
mov
add
xchg
pushf
cld
jg
adc
add
push
imull
in
stc
das
push
sub
call
inc
dec
dec
inc
dec
inc
sub
je
fsts
push
ljmp
or
mov
push
add
push
popa
adc
pop
pop
pop
stos
std
adc
out
dec
push
inc
dec
mulb
ljmp
scas
jb
jl
and
adc
roll
push
sub
sub
sub
and
jmp
rclb
push
fwait
jmp
jae
mov
sub
and
sub
dec
scas
xor
roll
add
fsubs
push
dec
stos
push
mov
cwtl
jo
cmpsl
sub
push
inc
inc
mulb
arpl
mov
in
loop
add
push
inc
jo
das
inc
and
push
and
cmpl
push
sub
mov
push
inc
clc
subb
fdivs
mov
repz
gs
dec
add
push
cmp
or
test
pop
inc
xchg
mov
pop
or
xchg
dec
std
dec
inc
inc
adc
xor
frndint
mov
xchg
jl
mov
add
mov
adc
xor
lea
sub
pop
push
test
xchg
and
lods
dec
std
push
inc
js
lcall
int
and
dec
jne
test
inc
mov
sub
pop
mov
dec
jbe
mov
ds
inc
pop
sub
xor
push
push
loop
mov
mov
dec
mov
push
ljmp
xchg
add
pop
inc
jl
push
push
push
jae
push
push
push
sbb
pop
mov
add
inc
sbb
outsl
nop
mov
scas
jo
fsubs
dec
pushl
mov
leave
jo
or
add
push
outsl
gs
movb
xchg
and
incl
aas
add
ss
pop
incb
fs
jns
incl
pop
incl
jns
add
cmp
popa
jmp
xchg
out
add
mov
inc
leave
lock
enter
cld
mov
mov
xor
mov
jg
loopne
sarl
add
mov
aaa
sub
incl
xchg
and
jg
incl
add
ret
xchg
xor
xor
xor
stc
outsb
or
sti
enter
sbb
jecxz
add
add
sub
outsb
add
test
lods
dec
add
ljmp
push
cwtl
push
push
push
ud0
add
jl
mov
add
cmc
mov
fldt
lods
ljmp
add
sbb
insb
add
lock
sti
add
arpl
and
push
jg
or
mov
cmp
add
fimuls
js
sub
fildll
dec
into
sub
xor
or
incl
cld
shll
frstor
inc
fs
sub
inc
mov
dec
push
and
pushl
int
mov
and
add
gs
inc
sbb
arpl
jne
jne
outsl
clc
jmp
jo
jb
insl
or
int3
addr16
and
add
add
pusha
adc
pop
pop
add
mov
insb
ret
cmp
call
dec
addb
sbb
ja
inc
ret
jmp
sbb
ja
mov
sbb
add
sbb
push
mov
mov
mov
and
push
cs
xor
shr
scas
call
sti
pop
jns
popa
fcoml
add
imul
ljmp
loop
stos
aaa
mov
sbb
mov
adc
push
pop
sub
xor
inc
push
and
lcall
adc
add
sub
out
ret
push
ja
xor
pop
aad
xor
or
jne
nop
lcall
pusha
add
fdivrs
push
push
add
cmc
test
jbe
insb
ja
push
jecxz
or
cmp
js
push
mov
mov
mov
insl
shll
popf
insl
jg
fs
jmp
push
push
fbld
add
iret
pop
jg
cli
and
jb
add
mov
inc
mov
xchg
hlt
decl
mov
stos
add
movsb
inc
lock
es
cmp
int
add
ss
outsl
fidivl
outsb
gs
inc
xchg
sbb
xor
push
inc
sub
ss
push
jecxz
cmp
pushl
bound
fadd
dec
pop
mov
fcomps
jp
cmp
push
sbb
jg
incl
lahf
jb
xor
cmp
orb
mov
jle
and
mov
sahf
ljmp
jp
jbe
mov
stc
mov
fmuls
jmp
push
test
dec
inc
xor
fmuls
std
test
sbb
loopne
sub
ja
cmp
sar
mov
adc
gs
dec
popa
sub
sub
xchg
mov
ja
mov
sbbb
pop
out
xor
or
adc
aad
pop
pop
ljmp
nop
out
adc
push
sbb
cmpsb
adc
sbb
dec
cmp
inc
adc
cmc
adc
lsl
xchg
or
loop
add
mov
outsl
and
gs
rcr
icebp
xor
call
rolb
jnp
bound
and
inc
mov
or
dec
xor
out
sti
mov
fmuls
sub
inc
dec
mov
sti
incl
pop
pop
jo
je
adc
or
add
pop
data16
lock
dec
jp
push
ss
push
lock
push
je
sbb
gs
dec
shlb
push
sbb
pop
jmp
add
adc
pop
arpl
fcomip
decl
jo
dec
pop
sbb
ds
cmpb
data16
jae
adc
fldt
cmpsb
push
push
ss
mov
jo
je
adc
pop
add
arpl
add
pop
loopne
pop
pop
mov
outsb
out
adc
jb
loop
dec
lods
insb
ds
mov
call
fwait
and
out
outsl
add
sbb
xchg
test
out
dec
ret
jb
popf
pop
sbb
bound
jmp
arpl
jns
dec
pop
sub
out
cmpsb
jae
out
mov
pop
or
pop
mov
sbb
mov
aas
aas
xor
inc
pop
push
add
adc
fwait
mov
ljmp
xor
dec
pop
pop
cwtl
lock
aad
or
push
mov
pop
dec
jbe
jne
ljmp
int
cmpsl
xchg
mov
sub
lcall
push
push
sbb
pop
and
push
subl
jb
jo
mov
faddl
int3
dec
push
xchg
inc
loopne
xchg
dec
add
ss
push
add
push
dec
lock
outsl
pop
jns
or
popf
mov
mov
xor
dec
cmp
jg
adc
ljmp
mov
pushf
push
icebp
js
and
adcl
adc
mov
incl
xorl
leave
push
mov
lret
jb
mov
insb
arpl
decl
cmc
push
dec
das
cmp
mov
inc
cs
das
lock
sbbb
andl
push
adc
sbb
dec
bound
fnstenv
or
add
inc
xor
cmc
push
imul
xchg
hlt
incl
push
in
mov
inc
sub
pop
jnp
add
call
outsl
add
pop
movsl
outsl
addr16
outsl
test
cmpb
inc
jae
lcall
push
mov
and
int
imul
ret
inc
inc
xchg
std
ljmp
adc
sub
ds
jo
xchg
and
das
rcrl
and
pushl
mov
bswap
and
mov
pop
mulb
and
mov
flds
mov
incl
scas
lds
aaa
cmp
mov
fcoms
pop
mov
in
mov
jns
aas
icebp
push
mov
inc
sbb
xchg
jb
xor
shll
or
pop
loopne
js
les
or
decl
aam
rcr
or
dec
mov
or
sub
lcall
cmp
ss
rol
inc
sbb
fmuls
lcall
fisubl
inc
imul
fs
fdivs
icebp
imul
inc
dec
out
cmp
mov
push
es
sbb
mov
loopne,pn
pop
sub
jg
test
or
cmp
mov
add
or
lcall
test
push
add
mov
add
adc
xchg
arpl
push
jp
in
sbb
scas
cli
mov
pop
jno
cs
push
xor
cs
mov
cmpsl
adc
push
idivb
mov
je
xchg
or
fisttps
dec
shl
out
lods
mov
daa
ds
jge
inc
or
inc
add
es
cmpsb
movsb
mov
adc
daa
in
mov
rorb
ja
push
jg
jge
clc
push
sbb
sbb
out
or
nop
or
pop
add
add
sbb
mov
inc
incl
or
jbe
push
sub
adc
jb
mov
fsubr
mov
sbb
jne
sbb
pop
add
pop
aam
jbe
xor
outsl
adc
lds
bound
insb
leave
sbb
inc
cmp
add
cmp
sarl
cld
jbe
mov
inc
sub
push
adc
dec
jne
ret
nop
mov
inc
push
sbb
into
mov
sub
out
jg
jmp
iret
jmp
idivl
push
xchg
adc
testl
mov
fmuls
rclb
les
clc
sub
add
ja
mov
loop
out
inc
adc
inc
rolb
fdivrl
test
or
push
add
push
imulb
fisttpll
xchg
rclb
pushf
or
fmull
scas
push
sub
pop
pop
ljmp
jmp
and
mov
mov
or
dec
ss
call
lea
jg
and
mov
pop
sub
pop
popa
bound
push
cmp
jne
sub
jmp
add
push
add
sbbb
jo
bound
loopne
cmp
dec
in
dec
add
or
pusha
pusha
adc
add
data16
jns
in
jo
mov
dec
repz
inc
dec
rolb
adc
push
sub
clc
mov
cwtl
adc
fsubs
add
or
fwait
push
cmp
add
xchg
faddl
adc
pop
imul
out
add
and
push
pop
out
dec
outsl
and
push
add
add
loop
add
int
fistpll
punpckldq
push
sbb
movsl
or
xchg
add
mov
mov
jmp
pop
outsl
inc
mov
mov
add
roll
xor
cs
ja
push
pop
jo
dec
push
popa
push
mov
or
rolb
and
daa
jns
fstl
add
xor
sub
xor
and
and
or
cmp
or
imul
cmpsl
outsb
aas
and
mov
lock
add
imul
outsl
and
dec
daa
add
mov
jns
jbe
inc
lcall
out
sahf
or
in
cs
nop
in
inc
hlt
dec
and
add
outsl
push
xor
outsb
jl,pn
mov
pushf
stos
push
mov
mov
lock
les
cltd
or
inc
push
dec
inc
dec
mov
pop
ret
inc
inc
push
in
xor
fldl
adc
and
jb
adc
lods
push
dec
insb
dec
pop
js
mov
dec
dec
dec
dec
adc
push
mov
fcmovnbe
bound
test
ss
sbb
mov
test
add
mov
jle
inc
pop
orb
and
testl
insl
imul
mov
test
add
and
bound
add
inc
add
sar
dec
push
cltd
pop
add
add
iret
repz
sbb
mov
cmp
add
inc
leave
incl
push
incb
lret
lahf
push
lret
cld
nop
pop
aas
push
push
sahf
xchg
out
jmp
rol
add
rcrl
clts
aas
jg
and
sbb
add
addb
loop
leave
add
test
or
mov
mov
pop
roll
mov
sbb
testb
jg
addr16
push
jns
int
out
ficompl
xchg
mov
lock
ja
add
loopne
xchg
lods
shlb
pop
sbb
pop
push
aas
insl
imul
pop
cs
pop
xchg
shlb
ss
shll
xor
push
pop
std
ret
repz
push
fldl
insb
jns
mov
jl
push
data16
test
into
repz
sbbb
cmp
jo
iret
add
stc
mov
add
in
js
aas
pushl
or
push
add
aaa
repnz
out
pop
aas
es
push
out
sahf
add
nopl
into
pop
xchg
and
push
add
add
fistpll
mov
daa
add
add
add
das
aas
dec
pop
outsb
stos
add
iret
pop
insb
ss
out
clc
lock
aas
rcrb
rcrl
clc
dec
add
push
pop
fstpt
clc
popl
adc
cmp
pusha
add
cmp
pop
sbb
mov
mov
pop
popa
in
fisubrs
aas
pop
jle
push
in
mov
addr16
pop
in
lea
lret
insb
les
inc
fnstsw
aas
nopl
ds
mov
add
aad
add
cld
pop
cmp
or
aaa
dec
cmpb
adc
ljmp
iret
std
or
fldcw
jle
or
push
sub
inc
add
imulb
inc
addl
pusha
xor
push
mov
push
push
sbb
sub
or
shll
cmp
fldcw
push
sbb
push
sbb
or
test
push
insb
jle
sar
xchg
shl
xchg
popa
push
ds
or
stos
xor
adc
and
ljmp
cmp
or
and
mov
sti
xchg
xchg
idivb
adc
daa
sbb
out
fidivrl
aas
cmp
xor
daa
and
rolb
lahf
and
mov
and
ja
mov
or
dec
push
dec
push
mov
data16
xor
push
daa
cmp
andl
push
fstp
cs
sbb
add
or
dec
inc
daa
mov
pop
out
rorl
clc
push
push
loope
test
mov
sarb
mov
lahf
adc
dec
push
xor
cmp
sbb
cmpl
xor
and
daa
inc
imul
xor
daa
dec
sub
repnz
cmp
aas
xor
mov
in
cmp
dec
sub
clc
xor
jbe
sbb
sbb
and
push
fcmovbe
out
sbb
push
and
and
sbb
cmp
jmp
cltd
push
out
jno
push
cmp
fs
xlat
push
arpl
fcmovnu
lret
push
and
xor
xchg
push
bnd
mov
xor
push
xbegin
popf
inc
andl
mov
cmp
add
testl
cmp
inc
or
dec
ljmp
pop
mov
xor
outsb
daa
inc
aad
in
mov
xorl
in
js
out
in
outsb
mov
adc
or
xchg
jg
clc
add
pop
pop
ret
add
mov
daa
fldl
mov
es
inc
push
aas
sbb
ds
xor
inc
arpl
daa
in
jecxz
ds
shll
xor
arpl
add
mov
cmp
inc
sub
in
repz
fs
daa
push
sub
es
lret
out
daa
dec
lret
ljmp
mov
daa
dec
add
out
hlt
fwait
jle
xor
in
repz
mov
push
sub
jecxz
push
cmp
adc
addl
inc
xor
in
inc
xchg
ss
imul
or
stos
movsb
out
sub
enter
or
daa
xor
cld
xchg
cmp
arpl
das
es
push
out
js
bound
in
push
inc
incl
addr16
sub
push
push
xor
fisubrl
daa
repz
sub
push
push
add
outsb
data16
inc
push
into
xor
mov
aas
out
cmp
dec
je
stos
inc
aas
call
or
movsb
pop
ret
mov
sub
cwtl
cmp
and
and
xchg
daa
mov
xor
insl
mov
lret
jb
divl
adc
cmpsl
fsubrl
or
sub
cmp
sbb
cmpsl
add
xchg
sbb
test
addl
subl
daa
in
jnp
dec
jbe
or
clc
or
sbb
cs
mov
xchg
fcoms
daa
dec
xchg
fidivs
daa
dec
xor
dec
daa
dec
dec
mov
daa
clc
dec
or
in
cmp
cmp
adcl
sub
dec
out
aas
pop
clc
clc
push
sbb
xchg
loopne
xorl
cltd
cltd
push
mov
mov
cltd
and
push
dec
mull
pause
push
les
sbb
xor
fdivrl
add
sub
push
sbb
outsl
inc
push
jbe
popa
daa
cmp
shl
cmp
and
push
and
popa
mov
jb
pop
pushl
inc
sub
sbb
jae
lahf
es
xchg
cmpl
ret
sub
jnp
pushf
aaa
fstpt
repz
xchg
pop
daa
aaa
jl
sub
and
push
xchg
stos
sub
aaa
fs
cmp
pop
jbe
pushf
adc
jecxz
outsb
push
imul
sbb
fsubr
sbb
push
and
out
jmp
xchg
pop
ss
stos
mov
sub
cmp
sbbl
sbb
and
mov
add
sbb
dec
inc
lahf
pop
cltd
push
fsub
pushl
add
jae
xor
add
add
cmp
inc
aaa
add
xor
jae
cmp
aad
jg
jmp
int
inc
pop
aaa
jae
and
stos
sbb
jns
loopne
aaa
shrl
mov
insb
pop
jg
add
adc
xor
and
cs
pop
add
xor
aaa
push
andb
pushl
repz
lret
fs
mov
jo
pushl
jo
jo
pushl
jo
aas
mov
jg
mov
and
outsb
ja
out
cmp
push
aas
xor
jb
mov
add
mov
and
pop
jg
movl
nop
or
jns
ja
xchg
and
add
xor
xchg
push
lods
jp
jo
popl
jo
dec
insb
fidivrl
ja
ja
inc
cmpsb
arpl
fbstp
or
pushf
cmp
or
xorl
xor
jae
add
add
jae
int3
in
push
sbb
mov
test
out
lcall
inc
pop
notb
ret
jae
xchg
fadds
ja
xchg
popa
inc
repz
add
aas
cmp
dec
add
cltd
repnz
aas
cmp
jae
or
mull
mov
ja
jmp
pop
lret
pop
inc
es
or
ja
dec
repnz
loope
gs
testl
aas
lock
add
repz
xor
shlb
push
movsl
cs
jbe
cmp
aaa
jae
pop
sbb
bnd
aaa
jae
xchg
aas
mov
das
add
ja
and
shrb
or
aaa
pop
cmp
jge
jne
pop
aaa
add
ja
push
jae
jae
loope
and
pop
iret
fcomp
popf
xor
add
dec
pop
jae
loope
lret
xor
jo
aaa
mov
inc
jo
pop
pop
jae
mov
add
pop
jae
and
lock
outsl
adcb
movaps
nopl
lock
add
pop
mov
repnz
or
out
xchg
int
je
dec
add
xor
leave
sbbl
add
add
add
nop
adc
mov
xchg
xchg
push
xchg
inc
cli
movsb
aas
adc
adc
mov
gs
fldcw
add
andb
fistps
or
inc
imul
jb
int
dec
iret
or
push
dec
mov
xor
popa
popa
jp
movsb
outsl
xor
outsl
lret
and
dec
stos
add
jnp
jnp
fwait
jne
outsb
outsb
andl
bound
sbbb
sahf
inc
push
arpl
xor
lret
insl
push
adc
push
sahf
subl
jg
and
repz
insl
cmpsl
inc
insl
push
push
and
jnp
rep
insl
sub
jbe
insb
sahf
push
loopne
mov
xchg
xchg
sub
or
sbb
popa
inc
addb
push
xor
cmpl
fisubs
ja
and
ljmp
pop
mov
lcall
popa
ss
sbb
xor
push
xor
outsb
mov
pop
push
push
or
jb
daa
add
ret
mov
scas
mov
jge
or
inc
mov
jbe
inc
insb
addr16
mov
push
sti
and
mov
sbb
jne
and
mov
jl
loop
push
js
scas
or
and
sub
lcall
mov
mov
sbb
enter
jb
xchg
xchg
dec
pop
stos
sub
cmp
cmp
xor
sbb
insl
sub
arpl
in
sbb
or
sbb
adc
sbb
arpl
pop
stos
fidivs
or
cmpsl
add
sbb
jne
call
addr16
aas
push
mov
pop
mov
or
inc
sbbl
stos
xchg
lds
xor
jp
movsl
fistl
or
dec
mov
adc
push
rorl
or
xchg
out
bound
sbb
xlat
xor
xor
outsb
xchg
xchg
inc
pop
dec
imul
arpl
call
shrl
jb
lock
sbb
call
daa
ret
daa
dec
fwait
push
push
xlat
sbb
or
mov
sbb
or
pop
imul
lcall
sub
inc
xorl
mov
adcb
inc
arpl
loopne
mov
pop
adc
out
add
and
insl
xlat
xorl
inc
sahf
dec
mov
push
inc
shrl
or
decl
imul
loopne
add
mov
cmp
nop
arpl
imul
pop
sbb
xchg
or
or
jne
je
fcmovne
je
pop
adc
dec
mov
adc
insb
scas
or
or
mov
pop
scas
sahf
push
pop
and
jne
xor
subb
jns
adc
imul
jo
rdpmc
jmp
add
mov
aas
outsl
adc
test
adc
add
pop
aas
cs
dec
insl
xor
jno
aas
lret
add
push
add
dec
add
pop
out
add
ds
push
insb
inc
jmp
sbb
out
push
jae
xor
jno
add
mov
cmc
sub
gs
or
popf
fisubrs
lahf
push
cmp
lock
loopne
push
jne
and
or
les
sti
push
ss
xor
push
add
mov
adc
jp
fwait
ljmp
ss
mov
and
adc
mov
into
mov
cmp
testl
lea
rcrl
mov
jne
pop
sbb
je
sub
subb
jb
lock
mov
jbe
lahf
adc
movsb
jmp
fs
push
push
pop
jno
dec
movl
xchg
out
sbb
loop
pop
cmpl
push
scas
data16
mov
push
aas
mov
and
inc
sub
xor
pop
mov
and
pop
sub
xor
mov
add
pop
jo
loop
add
ja
mov
mov
xchg
inc
push
cmpsl
add
roll
add
or
xor
cli
in
mov
stos
fwait
push
lret
xchg
add
roll
inc
sub
push
fwait
popf
fildll
add
inc
dec
je
mov
dec
inc
dec
dec
add
jnp
idivb
push
adcb
icebp
pop
or
out
ja
lahf
add
jmp
adc
cmp
imul
xlat
out
or
sub
mov
bound
jmp
ljmp
fistps
pop
mov
mov
xor
add
comiss
andl
add
dec
mov
add
push
cmpl
loope
mov
out
xchg
cmp
js
out
xchg
or
insl
mov
sub
imull
pop
mov
cs
imul
and
and
adc
push
inc
mov
push
outsl
mov
cmpsb
pusha
add
adc
mov
xchg
shll
lods
sti
lahf
pop
pop
inc
sbb
mov
mov
push
xchg
das
push
xchg
fwait
jo
or
pop
push
ja
add
pop
add
cmpsb
jo
mov
cmpsl
pushl
cmp
cmp
addr16
dec
mov
pop
sub
imul
stos
and
fisubrs
ret
xorb
add
stos
jbe
cmp
arpl
fisubs
sbb
cmp
xchg
fsubp
mov
bound
stc
mov
imul
and
pop
xlat
and
es
dec
xchg
mov
fs
dec
clc
and
cmc
jle
xor
or
mov
arpl
jg
mov
mov
push
adc
daa
dec
out
es
mov
mov
sbb
inc
mov
inc
xorb
js
into
jnp
insl
shlb
pop
adc
jbe
adc
ja
scas
push
inc
cli
inc
call
pop
mov
sub
push
sti
mov
iret
jb
add
mov
jbe
pop
inc
push
or
pop
jo
jg
stos
xchg
jae
int
xor
xor
out
mov
addr16
inc
lds
jnp
xlat
xor
mov
gs
jbe
dec
dec
xor
addr16
ljmp
sbb
sbb
mov
aam
inc
daa
xlat
imul
je
addw
iret
fiadds
pop
add
and
jo
arpl
js
push
add
cmp
outsl
sbb
or
jo
popa
adc
out
or
bound
in
sub
pop
lcall
ss
mov
sbb
lcall
andl
pop
push
cmp
adc
scas
sub
xchg
popf
js
xor
out
out
inc
or
pop
lock
sub
push
cmpsl
iret
dec
and
in
inc
mov
push
aad
pop
arpl
jmp
sub
sahf
cmpsl
cmp
fistpl
sbb
push
jmp
fistps
je
sub
pop
outsl
ja
adc
rorl
adc
fcmovbe
test
inc
and
loope
sbb
sub
daa
push
pop
adc
aaa
add
and
daa
scas
mov
ja
jo
add
push
mov
mov
insl
mov
aaa
fnsave
out
jae
stos
imul
ljmp
push
leave
mov
push
movsl
popa
mov
pop
sbb
pop
pop
inc
mov
aas
sbb
movsb
lods
sub
bound
subb
insb
mov
fs
sbb
push
ja
shlb
sub
arpl
ret
push
loopne
scas
sbbl
dec
add
negl
aas
sub
xchg
dec
xorb
cltd
test
outsl
imul
sub
lds
xchg
add
cmpsl
sbb
mov
pop
pop
xor
jp
adc
sbb
imul
pop
adc
movsl
mov
xchg
test
xchg
clc
lock
dec
cmp
inc
pop
inc
fcmovnu
xlat
jae
andl
loopne
mov
or
ret
pop
popa
das
bound
pop
mov
jae
outsb
adc
sub
daa
cmp
mov
repz
pushf
sahf
or
loope
push
jb
shll
mov
movsb
aaa
xchg
dec
add
jle
sbb
jmp
dec
jp
bound
ret
insl
lret
xchg
icebp
rclb
xchg
pusha
in
adc
inc
push
pop
int
aaa
mov
imul
lret
imul
inc
push
femms
outsb
push
sub
xor
sub
inc
fbld
add
out
insb
inc
nop
push
add
and
or
inc
mov
outsl
jnp
addr16
sub
daa
mov
push
dec
test
add
and
jg
adc
outsl
add
push
jno
aam
jo
or
add
jbe
pop
adc
bound
ret
out
ja
test
fcoml
inc
pop
push
rorb
out
push
jnp
xor
out
lret
fdivrl
dec
aaa
fwait
das
mov
sbb
xlat
ss
outsl
cmpsb
pop
push
gs
mov
adc
cmpps
jmp
add
and
decl
mov
inc
push
out
inc
aas
jb
and
fimuls
mov
ja
or
and
divl
in
daa
daa
and
mov
xor
fcmovnb
repnz
add
loopne
and
xlat
mov
mov
sbb
sub
inc
push
and
arpl
ss
and
adcl
inc
aad
pop
dec
or
imul
jno
jbe
push
pop
les
and
pop
cmpsl
push
rorl
mov
insb
pop
addr16
jbe
push
sbb
stos
fcoms
and
mov
inc
add
cmp
jnp
sub
add
sbb
sub
das
mov
push
push
adc
movsb
shll
pop
arpl
mov
jae
xchg
add
bound
addb
jo
add
aas
je
push
jo
stos
scas
lahf
bound
mov
cli
mov
or
mov
adc
inc
mov
mov
popf
loopne
pop
bound
add
and
xchg
mov
xor
arpl
dec
pop
push
lods
mov
and
jg
inc
sbb
jmp
pop
ljmp
sub
adc
pop
mov
pop
xor
xor
adc
daa
loop
pop
adc
push
roll
imul
sub
rorl
imul
pop
and
es
sub
xorb
mov
jo
pop
adc
sti
or
inc
loopne
lret
xchg
daa
mov
adc
mov
pop
and
inc
loop
xchg
push
cmp
das
call
sbb
pop
and
test
cmpsb
pop
mov
shrl
mov
data16
addr16
arpl
xchg
scas
push
bt
bound
or
fwait
cmp
imulb
leave
aam
mov
or
rolb
fwait
or
mov
mov
test
aaa
cmp
xlat
jnp
mov
ja
dec
popa
andl
ret
sti
sti
jns
roll
jmp
stos
scas
les
imul
test
outsb
xchg
loope
jecxz
sub
push
adc
aad
add
es
inc
sub
xchg
pop
jmp
pop
dec
iret
jmp
call
es
aaa
mov
pop
fwait
cmp
fs
fiaddl
scas
jno
xor
adcl
dec
inc
fnsave
mov
mov
adc
dec
sarl
mov
jle
push
push
fiaddl
inc
add
adc
xchg
push
test
push
sub
xchg
mov
sub
sbb
pop
in
popf
popf
sub
inc
pop
or
pop
jnp
xor
push
push
dec
inc
fucomp
mov
adcl
mov
pusha
adc
jae
mov
pusha
or
jnp
andl
aaa
mov
mov
insb
mov
mov
jb
call
cwtl
push
adc
jo
dec
adc
repnz
dec
xor
popl
cmp
cmpsl
inc
adc
aaa
in
inc
shrb
sbb
dec
loopne
cmpsb
sub
sbb
test
xor
and
sub
cmp
and
jbe
in
or
add
imul
shll
ret
pop
xor
pop
imul
movsl
adc
mov
or
cmc
xor
xor
sub
jo
mov
icebp
ss
popa
sbb
fmuls
sub
xorl
adc
sub
push
mov
scas
xchg
aas
pusha
cmp
loop,pt
push
dec
xorb
adc
aas
adc
push
adc
insb
icebp
mov
push
js
mov
pop
sarb
fs
sbb
xchg
push
shll
pop
pusha
mov
push
push
xlat
lock
pop
js
push
insl
inc
dec
pusha
and
sbb
je
shlb
inc
xchg
into
adc
lock
jno
push
dec
inc
mov
or
sub
inc
popa
je
rolb
and
adc
push
push
or
adc
or
nop
in
mov
dec
rcll
adc
or
js
in
push
xchg
enter
inc
repnz
xchg
andb
fwait
and
push
adc
adc
xchg
rcrl
pop
and
movsb
lock
nop
sub
pop
dec
and
sbb
dec
sbb
xchg
or
push
cs
sbb
pop
or
lret
or
addr16
in
pop
and
or
and
sub
push
sub
imul
je
orl
mov
adc
pop
xor
test
or
add
xor
out
iret
or
ja
or
add
cmc
or
adc
and
and
xorb
sub
adc
or
leave
les
fyl2x
adc
push
leave
or
cs
adc
adc
pop
jns
ss
popl
or
pop
pop
mov
in
mov
xlat
out
mov
push
sub
aas
inc
inc
fwait
in
in
jbe
sub
adc
mov
ss
push
lock
insb
das
push
pop
or
add
xchg
lds
dec
mov
add
push
repnz
incl
pushl
iret
ficompl
cmp
push
cmovne
fs
xor
outsb
mov
cmp
cs
mov
or
testl
xchg
ja
mov
inc
pop
pop
dec
jae
decl
daa
testb
cmpsb
mov
fwait
dec
inc
pop
add
jns
jle
lea
fldcw
rcr
xlat
loopne
fldcw
sahf
lret
xlat
scas
shrl
inc
outsb
xchg
xchg
lret
out
aaa
clc
cli
inc
jo
data16
loop
fisubrs
cld
inc
push
jnp
pushf
nop
int
jp
push
mov
jmp
in
les
mov
mov
and
pop
push
aas
push
dec
mov
pop
sub
or
jge
cld
push
imul
insb
mov
add
cs
in
icebp
or
fldcw
test
lea
xor
loop
xor
mov
rorb
mov
mov
jnp
sub
call
das
lods
mov
push
jns
jbe
cmp
push
jbe
dec
cmp
xchg
daa
sahf
into
into
jno
cmpsl
inc
xchg
lods
pop
rorl
fsts
jno
pop
xlat
loopne
pop
stos
jecxz
insb
cmpsl
jns
inc
imul
enter
out
xchg
sbb
sbb
push
jge
xchg
fldcw
nop
dec
inc
outsl
popl
loop
leave
pusha
test
enter
das
pop
jg
enter
mull
addl
inc
jo
into
mov
mov
jmp
mov
idiv
push
out
repz
sbb
sbb
mov
in
adc
ror
cmp
pop
decl
inc
pop
subl
lods
mul
jmp
in
idiv
push
and
leave
dec
jne
push
cmpsl
mov
cmp
jbe
jecxz
sbbl
je
aas
into
add
push
dec
pushl
and
pop
lods
mov
cmp
jmpw
loop
jge
mov
sub
cmp
jb
pop
jo
pop
cld
adcl
jb
fstps
fdivrs
dec
cmpsb
jg
jno
outsl
mov
sbb
add
adc
cmpsl
arpl
cmp
jb
mov
push
dec
mov
push
xchg
lods
push
xchg
lahf
call
mov
ds
mov
adc
sbb
stc
cli
mov
sti
popa
nop
inc
push
scas
xchg
lods
push
les
int
aam
loope
xchg
test
stos
push
jmp
pop
xchg
mov
pop
push
inc
pop
and
add
cmp
or
movsb
mov
fistl
in
in
jl
push
pop
mov
iret
mov
push
mov
inc
pop
fs
fstpl
testl
push
call
incb
jmp
lcall
sub
aam
and
fldl
pushf
jns
js
lcall
push
test
in
testb
mov
push
mov
dec
push
add
ror
sub
faddl
fiaddl
fisttps
inc
cs
mov
pmulhuw
pop
sbb
pop
or
sbb
mov
xor
inc
insl
into
adc
das
int
pushw
add
push
cli
dec
jns
fwait
push
incl
dec
hlt
incl
dec
out
dec
in
loop
mov
fmuls
push
fcmovnu
cs
cld
mov
push
loope
add
in
dec
repnz
pusha
jg
cmc
sahf
std
push
push
incl
add
in
mov
pop
push
cmc
negb
sub
popa
xchg
dec
pop
ljmp
incb
mov
call
mov
cs
popa
xchg
ljmp
push
mov
jbe
aad
addr16
pop
loopne
dec
jecxz
jmp
push
push
dec
and
or
incl
mov
lcall
mov
icebp
lock
push
repnz
cmc
hlt
mov
lcall
repz
sub
jbe
outsl
fisubs
cmp
in
pusha
repz
dec
enter
loop
in
push
push
cmp
fwait
icebp
push
cli
pop
incb
sti
insl
pop
lock
adc
test
sti
cli
push
cmp
push
loopne
repnz
icebp
jmp
jnp
jl
pop
pusha
ljmp
pusha
lcall
jb
ss
int
sbb
outsl
mov
jmp
jae
and
push
pop
or
ja
inc
mov
cli
div
scas
cld
into
lock
data16
push
cmc
idiv
push
repz
adcl
aaa
fcompp
sar
push
jmp
pop
pusha
jmpw
push
insb
push
mov
fildl
push
repnz
testb
cmp
sbb
ret
mov
mov
into
repz
push
jmp
fcmovnu
fcos
outsl
mov
in
loop
rcl
sar
mov
xchg
xchg
dec
push
push
aas
mov
pusha
pop
pop
jmp
push
imul
mov
mov
push
std
sbb
mov
adc
fwait
pushf
cmpsb
add
std
add
scas
scas
test
call
ror
in
in
push
into
xchg
cld
iret
int3
lcall
push
lcall
addr16
jg
arpl
pop
pusha
imul
pop
push
icebp
into
pop
negl
inc
fisubrl
pop
pop
push
es
scas
cld
scas
sarb
cli
pushl
pop
stos
inc
sarl
pcmpgtw
inc
xor
decl
call
fdiv
rcl
out
xchg
imull
dec
sub
push
sub
inc
add
repnz
neg
pop
hlt
into
cli
push
inc
pusha
bound
popa
mov
daa
add
pop
cmpsb
cli
adc
mov
lahf
lahf
popf
xchg
dec
inc
dec
int3
lret
cmpb
push
subb
push
jbe
dec
fwait
into
rcl
inc
xchg
xchg
mov
pop
pop
out
out
xchg
fldt
push
pop
data16
das
pusha
mov
add
repz
cld
negb
leave
cltd
loopne
pop
arpl
mov
bound
push
push
out
push
insl
ja
in
in
jmp
scas
pop
shlb
sar
ret
jbe
jp
sub
sbb
popa
outsb
call
mov
cs
ficoms
fbstp
std
xor
test
mulb
jbe
dec
addr16
daa
data16
pop
in
std
push
cmc
push
popa
mulb
aaa
in
cli
push
loope
lahf
mov
cld
clc
sti
jecxz
addb
aam
movsb
test
jne
push
lods
push
pop
push
or
pop
addr16
lret
fucomi
imul
lcall
negb
jl
addr16
arpl
push
cmpsb
loop
popa
hlt
fs
jg
jge
sbb
jmp
ror
mov
out
aam
jmp
repz
out
daa
fsub
cmpb
std
divb
jnp
sti
incl
xlat
scas
push
std
out
inc
and
xchg
fdivr
mov
call
ss
fstl
fildl
inc
mov
pop
add
out
xchg
sub
sahf
iret
cs
addr16
flds
pop
das
out
push
push
add
aam
sub
incl
sbb
push
shl
jns
leave
sub
fcmovbe
mov
and
mov
insb
xor
push
sar
pop
mov
popa
in
data16
scas
sti
push
mov
insl
push
insb
push
insl
or
pop
push
out
daa
fldt
fimuls
in
jmp
sahf
call
sbb
mov
jbe
fs
int
imul
outsb
pop
clc
jns
mov
jbe
sahf
pop
out
in
push
out
leave
xor
out
lock
cmp
adc
into
ret
jbe
arpl
es
int
in
push
cli
filds
outsl
pop
insb
mov
test
xor
daa
jns
idiv
inc
sar
es
push
ljmp
pop
call
mov
mov
jbe
iret
sahf
insl
aam
in
call
divb
xchg
pop
out
mov
mov
sub
div
push
out
cmp
repz
idiv
cmc
stc
cmp
inc
jmp
jmp
iret
mov
push
int
js
out
xor
sbb
mov
push
cmpsb
pushf
mov
int
test
push
jmp
outsb
xchg
sti
aas
icebp
ljmp
xor
outsb
jg
subl
testl
mov
sub
mov
incl
scas
loopne
loope
push
clc
icebp
pop
fnstcw
data16
in
xchg
fdivrp
in
or
arpl
xchg
pop
repz
mov
daa
push
jecxz
jmp
mov
or
mov
mov
out
pop
es
push
aam
push
divb
inc
shl
in
stc
and
xchg
neg
pop
xchg
andb
pop
jg
call
daa
dec
imul
les
out
clc
into
nop
cld
out
ficoml
daa
fcomip
cmp
xor
bound
sub
jbe
cmpsb
and
pop
jle
pusha
shl
mov
sahf
int
out
mov
stc
std
out
pop
or
xor
mov
outsb
fwait
in
xor
pushf
rol
out
push
mov
std
mov
andl
pop
std
jmp
sub
jns
sahf
in
stc
fdivrp
sub
cli
out
cmpsb
or
inc
xchg
sub
cmpsb
in
add
cs
fdivp
push
or
pop
cmpsl
jecxz
das
jle
in
shll
lret
out
mov
mov
std
pop
cltd
nop
repz
push
cmc
cmp
clc
mov
jae
das
push
jnp
loop
stos
imulb
sub
inc
div
iret
idivb
ljmp
cwtl
dec
xchg
xchg
testl
jns
adc
test
xor
fdiv
es
push
pop
cmp
dec
fistpl
sbb
faddl
xchg
rclb
cli
into
std
xlat
pop
jb
jmp
inc
aad
icebp
jns
push
repnz
shlb
not
movsl
fcomp
out
fwait
inc
pop
popf
fwait
iret
roll
insl
fistpll
aam
clc
pop
mulb
out
fstp
addl
inc
bound
sub
adc
popf
pop
lahf
mov
add
jns
scas
adc
push
pop
push
aam
mov
mov
repnz
push
sahf
lcall
push
sub
movsb
cmpsb
cmpsl
sbb
daa
mov
insl
pop
popa
flds
xchg
out
outsb
testl
daa
add
jo
push
cmpsb
pop
cs
push
ss
pop
dec
cmovle
push
push
into
jmp
push
and
push
int3
call
dec
test
std
push
leave
decl
lret
faddl
push
sub
xchg
lock
push
sti
jo
mov
push
stc
incl
cmpsb
cs
decl
fcoms
pushl
vmaxsd
into
mov
stos
mov
ljmp
add
adc
into
fnsave
dec
call
push
into
push
incb
push
scas
rcr
push
jbe
push
mov
jb
inc
int3
mov
push
icebp
push
stos
aam
out
mov
dec
mov
cwtl
cwtl
xchg
sahf
addr16
test
call
jp
and
jle
in
in
push
fucom
nop
int
clc
pop
incb
pop
add
pop
imulb
sar
add
ljmp
out
pop
out
outsl
pop
jo
mov
add
sarl
js
xchg
decl
mov
arpl
push
int3
mov
mov
pop
repz
ljmp
mov
fdivs
dec
lcall
jbe
adc
arpl
daa
gs
arpl
sbb
mov
push
repnz
pop
xchg
mov
adc
arpl
mov
cmpsb
clc
stc
push
jle
aam
mov
jnp
hlt
das
xlat
xlat
cmpsb
dec
neg
mov
insb
insb
insl
jmp
fs
bndstx
inc
pop
mov
and
adc
mov
jbe
pop
push
add
pop
pop
push
js
scas
aam
xchg
jle
jns
mov
mov
scas
out
sbb
cmp
push
ss
fs
bound
pop
scas
pop
fcomp
push
jge
pop
dec
movhps
bound
dec
jno
fcomp
mov
push
rcl
push
sti
mov
ds
fwait
mov
popa
inc
add
add
bound
popw
out
mov
gs
mov
pop
cmpsl
scas
mov
xchg
leave
push
lock
mov
xorl
push
fcoms
cmpsb
inc
pop
adc
push
jmp
insl
pop
lahf
jbe
add
dec
xchg
push
xor
inc
add
adc
push
jle
mov
stos
hlt
mov
push
mov
pop
mov
jecxz
in
adcw
imul
fwait
pmaxsw
jbe
out
ds
push
imul
add
xchg
mov
add
and
mov
inc
mov
fnstenv
push
fistpll
lcall
jg
pop
add
xchg
or
aam
outsb
js
pop
pop
jnp
insb
sahf
jmp
pop
push
rorl
data16
cmpsb
insb
std
lahf
in
xchg
out
add
sub
out
addb
es
out
icebp
movsl
inc
xchg
in
pop
push
sub
inc
or
outsb
jbe
es
scas
cmpsb
sub
hlt
jbe
push
fsubrp
xchg
cmc
nop
repnz
out
idiv
sti
push
cli
int
and
xor
mov
out
xor
call
sub
fcmovnu
mov
mov
mov
in
out
std
dec
addl
idiv
lcall
sahf
shl
or
clc
xchg
roll
daa
push
mov
in
into
dec
aaa
sahf
or
push
sti
add
outsb
mov
popl
xchg
mov
iret
mov
inc
shlb
in
repz
sub
ljmp
xchg
pop
xchg
pop
fistpll
iret
repz
arpl
jae
xchg
mov
shrl
jne
jns
cmc
mov
xchg
pop
xchg
cmpsl
pop
sub
xor
idivl
dec
repz
adc
call
xor
call
sub
movsl
sbb
xchg
xchg
subl
xchg
incl
cmpsl
fnstcw
ss
push
sahf
sub
mov
mov
shl
mov
fwait
int
daa
dec
fadds
cld
xchg
mov
addr16
mov
loop
daa
sub
pop
das
push
mov
push
inc
jae
ds
cmp
les
mov
es
inc
xor
sahf
cwtl
fwait
pop
pusha
xor
push
xchg
push
dec
loope
ja
mov
xor
stc
push
std
out
je
fldcw
das
lock
stc
mov
scas
sahf
pop
popf
lods
mov
sub
shr
mov
dec
inc
out
xchg
xchg
addr16
push
out
outsl
out
hlt
sti
jg
adc
pop
outsb
iret
cmpsl
lahf
jo
insl
repnz
mov
lahf
std
fsubp
mov
xchg
xchg
push
xchg
cltd
clc
jbe
mov
vmaxss
mov
mov
push
fmull
cwtl
xor
and
xor
mov
pop
or
inc
adc
push
test
adc
cmp
push
fnstenv
lock
arpl
jo
lock
jle
cmp
xor
push
in
mov
mov
sti
pop
and
and
bound
adc
jb
std
test
xchg
pop
or
test
inc
ret
aam
pop
jg
sbb
loopne
push
add
add
cld
jae
iret
adc
or
roll
dec
mov
or
and
sbbb
stc
cmc
sbb
lds
mov
adc
inc
sbb
xchg
xchg
adcl
imul
imul
inc
test
and
cmp
ljmp
or
ss
sub
in
lret
aaa
cmp
xor
jge
and
and
cltd
dec
inc
pop
jnp
mov
xor
inc
lret
cmp
or
add
jge
push
mov
push
inc
dec
xchg
aaa
jp
xor
cmp
xor
ss
cmp
inc
cmp
adc
xor
inc
inc
xor
fwait
ret
inc
push
mov
xor
sub
add
in
divb
sahf
inc
inc
aaa
push
ss
adc
cmp
sahf
testb
sbb
outsb
imul
adc
imul
dec
xchg
mov
inc
imul
push
and
inc
cmp
inc
or
and
mov
xor
inc
dec
cmp
ror
xor
inc
test
inc
xor
xor
dec
push
push
ja
push
fisubl
and
xor
mov
imul
sub
mov
dec
gs
push
xor
cmp
lcall
push
rol
mov
addr16
push
pop
andl
cmpl
add
stc
or
xor
add
das
pop
xchg
dec
and
lret
loope
sub
pop
fldl
ret
cmp
insb
or
push
inc
and
dec
add
sbb
push
or
adc
add
or
ret
pop
inc
mov
mov
ss
or
cmc
popa
mov
lods
xchg
scas
mov
rep
jb
push
in
adc
dec
adc
lret
push
or
cmp
adc
arpl
adc
push
jno
insl
insb
or
and
add
lods
lds
or
or
xor
add
mov
cmpsb
dec
pop
lahf
xor
mov
pop
dec
movsb
mov
fnsave
xchg
aad
or
in
in
xor
or
jecxz
or
addl
lea
addr16
add
es
sbb
or
mov
push
cmp
daa
gs
xchg
test
leave
pop
std
inc
inc
and
roll
dec
and
adc
add
cmp
loopne
mov
or
and
cmp
nop
mov
addr16
xor
mov
push
popf
bound
and
or
sub
sub
mov
aam
sbb
sahf
xor
pop
push
add
cltd
adc
cmc
pop
cmpsl
xchg
addl
and
sub
and
add
xchg
in
loop
or
enter
add
mov
xor
insb
das
dec
or
add
test
inc
push
and
xchg
or
or
fwait
ret
dec
popa
mov
or
add
ss
mov
sbb
bound
xor
xor
adc
adc
rol
cltd
mov
xor
adc
loope
nop
loop
adc
add
mov
pop
adcb
scas
movsl
add
lds
sub
lds
bound
test
push
movsl
incl
jbe
pop
cmp
pop
scas
xchg
sbb
jecxz
and
sub
pop
add
fsubs
push
gs
dec
mov
out
add
test
or
imul
mov
add
add
add
xchg
pop
leave
add
mov
add
pop
imulb
xor
jns
adc
push
test
rcrl
ret
lods
lea
ljmp
dec
insb
imul
push
and
add
adc
mov
and
sbb
pop
pop
sub
lret
das
out
sbb
sbb
add
dec
push
lcall
sub
add
dec
sub
sbb
jno
or
add
mov
add
popa
imull
cmc
push
outsb
insb
les
icebp
sub
pusha
popa
pop
shrb
sbb
mov
dec
imul
inc
das
rorl
sub
and
add
stos
inc
sub
inc
pop
insl
movsl
push
xorl
pop
cs
push
addr16
add
aas
sbb
or
mov
cmp
mov
xor
fisubl
lds
pop
cmp
sub
mov
adc
push
add
add
imul
pop
popf
mov
adc
add
add
push
movsl
push
cmp
and
popa
test
mov
daa
or
bound
sub
jo
jecxz
push
inc
dec
xchg
cmp
push
shl
call
inc
shrl
mov
sbb
jne
add
sbb
adc
mov
push
cmp
imul
and
gs
xor
sub
sub
aam
inc
pop
sbb
xor
add
xchg
clc
adc
loope
push
pop
dec
add
mov
adc
pop
pop
ja
jbe
sbb
sub
add
popa
jnp
push
jecxz
adc
push
fisttpl
jns
lods
xor
and
mov
inc
jmp
shll
xchg
pop
push
push
pop
wbinvd
scas
adc
mov
inc
pop
xchg
or
mov
movsl
xorb
or
repnz
sub
imul
mov
mov
lods
or
ds
inc
mov
xor
mov
dec
xchg
xor
sbb
xchg
bound
dec
imul
push
outsb
fsubl
test
and
cs
xchg
and
icebp
and
adc
inc
mov
xchg
pop
xchg
ror
mov
addr16
xor
and
xchg
sub
dec
dec
and
sbb
push
xchg
lods
jns
sbb
aaa
jmp
mov
pop
jmp
lret
mov
insl
ds
add
adc
sbb
sub
inc
das
and
mov
mov
xchg
or
lods
sub
das
sub
cmp
xchg
dec
outsl
or
add
orl
fisubrl
mov
sub
jbe
sti
sub
adc
or
inc
sub
popf
mov
xor
ja
and
fisubl
jo
inc
imul
sub
push
cmp
mov
sbb
cmc
jl
jbe
push
and
jl
dec
mov
cmpsb
mov
pop
loop
jmp
insb
mov
mov
jle
dec
jb
stos
pop
sub
out
cmpsb
inc
pop
arpl
sub
sub
sub
sub
test
dec
push
xor
scas
adc
dec
test
test
inc
dec
or
fimuls
movsl
and
ret
out
fwait
scas
jmp
fstpt
fneni(8087
jmp
pop
push
ljmp
add
outsb
adc
inc
imul
adc
fwait
sbb
scas
mov
scas
push
fidivrl
outsb
adc
cmp
and
xchg
cmpsb
or
sbb
push
push
imulb
ja
and
fidivs
cmpsb
rolb
and
jb
inc
inc
xorb
mov
icebp
mov
xorb
int
xor
insl
or
mov
in
pusha
fwait
bound
sub
pop
inc
mov
mov
sub
mov
fimull
xlat
push
cmp
sub
adc
lahf
dec
cmp
or
mov
sbb
inc
popf
pop
adc
push
push
js
sbb
pop
add
sbb
sarl
add
mov
inc
sbb
inc
xor
jge
lret
xorb
cmp
ret
cltd
sbb
sub
xlat
and
test
dec
inc
push
sbb
mov
ret
aaa
xchg
xor
inc
mov
adc
push
daa
jnp
mov
push
or
les
shll
push
sbbb
add
sbb
and
xchg
add
cmp
push
loopne
mov
jnp
pop
lcall
test
test
dec
dec
test
rolb
push
push
xchg
mov
mov
and
and
ret
xchg
adc
insl
mov
insl
les
mov
loop
push
or
icebp
pushf
add
pusha
popa
gs
insb
or
dec
rcrw
add
sub
mov
je
insb
arpl
inc
gs
mov
add
sub
inc
sysenter
mov
daa
dec
shrl
and
andb
mov
xchg
sub
cmp
cmp
adc
push
scas
xor
lret
xchg
fmuls
mov
and
das
sbb
mov
repnz
or
scas
dec
aam
dec
sbb
push
mov
push
bsr
xchg
in
xchg
adc
test
dec
fwait
or
jns
js
pop
xchg
imul
movsl
hlt
test
lods
add
inc
cmpsl
or
sub
mov
loope
rcll
inc
in
stos
repnz
adc
lods
test
rorl
push
inc
in
sub
or
xor
jo
sub
xor
test
and
ret
pop
and
pop
or
cmp
sti
push
push
mov
inc
lods
pop
nop
sub
inc
pusha
punpcklbw
push
add
imul
arpl
push
nop
arpl
pop
xchg
sbb
aaa
jb
push
pop
cltd
jo
or
popa
adc
xor
out
jnp
xor
mov
std
or
arpl
fldl
sub
mov
xor
sub
test
adc
or
mov
and
imul
xor
inc
jno
loope
inc
pop
pop
mov
cmpsl
shrl
jecxz
data16
scas
and
mov
or
push
and
dec
jae
cli
mov
and
sbb
data16
xchg
dec
jb
jmp
lods
jae
cs
cmpsl
lods
adc
jo
adc
imul
imul
jns
jnp
sub
sbb
and
rolb
imul
jp
pop
and
imull
and
mov
loopne
inc
adc
mov
loope
arpl
add
orb
and
push
inc
add
fdivs
mov
ret
jae
sbb
jae
inc
and
sub
ljmp
cmp
lcall
adc
arpl
pop
xchg
inc
sub
mov
sbb
or
out
and
mov
bound
inc
mov
push
inc
inc
dec
inc
sbb
dec
adc
loope
ret
test
lret
dec
pop
mov
in
mov
sbb
and
shll
sbb
jbe
jno
sub
or
mov
add
adc
fs
shll
or
or
adc
adc
cltd
xorl
mov
cltd
sbb
scas
xor
jecxz
jno
and
outsl
adc
fwait
sbb
or
mov
mov
jo
add
ss
jbe
mov
lock
dec
sbb
xchg
adc
inc
and
mov
leave
sbb
and
mov
dec
sbb
cmp
push
dec
pop
adc
daa
lea
imul
mov
sbb
xor
lods
sbb
pusha
imul
dec
dec
push
fmull
rclb
iret
and
pop
xchg
pop
and
xchg
add
add
xor
push
sbb
popa
pop
js
outsl
and
fsub
movsl
imul
pusha
add
inc
adc
xchg
pop
aaa
push
pop
sub
enter
dec
test
mov
pop
lds
aaa
cmpsb
and
jbe
and
cmp
mov
movsl
push
mov
jg
add
int3
test
filds
sbb
ljmp
dec
inc
rolb
sub
push
mov
push
adc
ss
push
xchg
jmp
add
add
sahf
sbb
movsl
and
pop
popf
addb
adcl
in
cld
push
pop
and
pushf
sbb
mov
adc
js
pop
and
call
int
add
add
ds
and
or
pusha
dec
sub
inc
pushf
cmpb
pop
mov
pop
mov
mull
test
mov
dec
stc
mov
mov
daa
in
dec
add
xchg
and
lahf
xchg
jg
sbb
add
inc
and
add
add
inc
add
inc
xchg
pop
push
inc
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
push
cmp
pusha
cmp
mov
