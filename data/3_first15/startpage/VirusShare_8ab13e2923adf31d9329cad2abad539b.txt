mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
frstor
dec
jmp
les
or
cmp
std
push
out
push
cmpsb
test
sub
mov
mov
loop
insl
fwait
push
je
out
lret
push
test
or
sbb
xchg
mov
push
xchg
gs
das
stos
mov
arpl
mov
xor
cwtl
inc
movsl
clc
sbb
push
add
jb
sub
lds
pusha
or
andl
jo
mov
lret
xchg
fld
push
and
cltd
add
xchg
test
mov
mov
call
xor
dec
cmp
rorb
data16
push
push
sub
test
add
adc
xchg
in
lret
enter
pop
and
insb
mov
insb
pop
scas
ds
mov
inc
adc
inc
lds
cmp
sarl
jnp
cmp
push
jp
xchg
jle
daa
pop
out
push
push
mov
dec
into
popa
pop
mov
add
loopne
xchg
loopne
xchg
inc
fisubs
addr16
xor
repnz
mov
loop
sbb
xlat
mov
jecxz
mov
push
or
loope
add
jb
fnstcw
aam
fxch
ljmp
mov
sub
adc
cmp
sbb
rorl
idiv
into
cli
jmp
imul
imul
push
add
subb
mov
mov
mov
sub
pop
inc
cmpl
lcall
out
lods
lahf
push
mov
pusha
add
push
add
mov
mov
cld
pop
push
or
fs
jb
pop
add
cmpsl
and
insl
xor
cmc
mov
dec
ret
sub
add
cmova
fbld
lods
jmp
xchg
aam
mov
mov
int3
ja
jl
cld
and
cmp
gs
aad
push
cltd
cs
dec
dec
pop
arpl
inc
movsl
sbb
jecxz
add
mov
mov
or
cli
cmp
pop
fldl
pop
out
xor
pop
aad
das
movsb
lds
bound
stos
mov
xchg
adc
inc
enter
inc
mov
ds
xor
scas
lcall
dec
int
push
movsb
imul
dec
pusha
xchg
jg
dec
add
fstps
inc
pop
adc
inc
sub
pop
jmp
or
test
mov
rorb
fldl
inc
and
inc
nop
mov
fdivrs
adc
fists
iret
sti
xorl
or
std
pop
call
or
ret
fsubl
mov
sub
mov
sub
fidivrl
jecxz
sbb
xchg
rcrb
push
push
cmp
lcall
call
push
pushf
fldenv
jns
or
dec
push
and
mov
sub
xchg
mov
push
xchg
mov
jns
bound
sub
ret
mov
lret
faddl
dec
rclb
cmpsb
inc
cmp
pop
fnstenv
popf
mov
dec
loopne
filds
pusha
push
fistpl
xor
jne
dec
lahf
mov
gs
loopne
es
sti
xchg
fcmovne
lcall
mov
es
je
jae
adc
fsubrl
mov
xor
cmp
mov
cltd
inc
pop
cli
fisttpl
fdivs
mov
out
outsb
dec
push
and
push
out
pop
and
aam
cmpsb
dec
or
mov
mov
pop
daa
dec
aaa
mov
pop
mov
sub
mov
movsb
fcomip
pop
or
gs
push
idiv
in
fmull
dec
add
pop
or
jno
xor
jle
jns
lahf
mov
lods
std
mov
rcr
mov
lock
lret
aad
iret
in
jge
sub
mov
lcall
fcomps
pop
test
add
loopne
or
mov
std
cmp
xchg
repnz
sahf
data16
mov
rep
pop
ret
test
inc
arpl
jnp
shl
sub
and
or
jl
imull
lock
js
mov
test
imul
sbbl
cmp
popf
lret
mov
fcoms
inc
idiv
pop
jbe
fnstsw
cmc
sub
mov
inc
pushf
nop
push
fwait
sahf
sub
stc
jl
ja
and
mov
sahf
rorl
imul
sub
xchg
jae
insl
xor
mov
fsubrp
xor
inc
test
sub
les
pop
dec
mov
inc
push
dec
sub
pop
xchg
inc
call
mov
cmp
xchg
jecxz
ss
jb
push
jge
mov
enter
and
jb
jecxz
fmull
pop
mov
aas
testb
leave
push
xchg
das
ljmp
mov
jg
sub
dec
mov
gs
inc
outsl
sahf
xchg
stc
adc
fldt
mov
mov
nop
in
jl
sahf
cmp
dec
es
xchg
in
sbbl
enter
stos
daa
aam
mov
push
xchg
and
test
dec
rsm
fidivs
push
mov
fcomps
stos
lods
sahf
cmp
sub
jge
sbb
mov
mov
push
out
jo
jl
mov
int3
fidivl
inc
lea
mov
mov
loopne
pop
mov
in
dec
sbb
inc
dec
aad
hlt
insb
adc
jbe
mov
ret
jp
std
call
mov
pop
mov
out
ss
adc
adc
les
mov
out
adc
out
dec
push
clc
movsl
sbb
cld
bound
jo
call
push
cli
xlat
pop
mov
or
xchg
mov
andl
clc
pop
jg
rcll
ficomps
shll
jle
and
arpl
add
movsl
inc
orb
add
pop
data16
push
mov
mov
sub
adc
xchg
adc
push
mov
aad
jae
sub
mov
or
push
pop
data16
cld
mov
push
or
lods
je
xor
test
fldl
mov
sbb
in
xchg
fs
psubq
sbb
jne
add
mov
add
rorl
stos
add
jnp
ret
cmc
and
dec
sbb
test
sub
or
ret
ja
aas
xchg
cmp
sbb
mov
movsb
push
inc
hlt
lods
adc
int
sbb
paddsw
dec
push
pusha
les
and
movsb
jle
das
jmp
mov
xor
pop
and
cmp
sbb
cmp
popa
inc
mov
cld
and
add
pop
scas
je
push
sbb
stc
cs
je
in
out
rcl
sub
jge
and
xor
test
pop
lahf
insb
xchg
mov
pop
insl
mov
inc
adc
xor
pop
bound
stc
test
ja
push
fiadds
movsl
cli
pop
cs
aas
in
jbe
testl
mov
aas
mov
push
sbb
out
dec
lock
lahf
push
jl
popf
mov
mov
popf
or
add
sbb
jno
jecxz
orb
or
xchg
movsb
mov
movsb
or
lcall
arpl
jl
mov
rcll
push
jg
adc
mov
in
shrb
jns
aaa
stc
out
jae
pop
push
in
ja
fstpl
pop
fimull
loope
pushl
ljmp
sbb
mov
in
mov
adc
jg
incb
mov
scas
jbe
clc
lock
push
shl
ret
cmp
lcall
adc
arpl
mov
jo
bound
lea
inc
stos
std
cmc
icebp
mov
in
dec
inc
xchg
test
sbb
sub
cmp
pop
jb
inc
jp
add
arpl
lods
aam
mov
xor
fsubs
out
fwait
lods
rorb
mov
lcall
daa
or
or
test
sarb
decb
int
lahf
pushf
int
pop
adc
push
repz
jbe
add
call
addr16
jg
inc
addb
std
sub
popa
jl
outsb
mov
lods
test
dec
xor
jge
in
cwtl
lret
cmp
test
shr
push
repz
mov
and
mov
imul
out
in
push
sbb
arpl
fcmovu
aam
or
add
movsb
imul
push
bnd
dec
jno
sub
xchg
mov
repnz
pop
ret
mov
jle
out
aam
fwait
rorl
push
dec
adc
mov
mov
in
mov
or
xor
jge
mov
jns
arpl
inc
sti
fsubl
inc
ja
adc
inc
adc
aas
pop
and
ret
adc
ret
pop
out
xor
jne
lahf
test
icebp
mov
and
sbb
xchg
jnp
test
pop
sub
shlb
mov
or
stos
in
fsubrl
pushf
mov
xlat
lahf
ret
pop
cmp
sahf
mov
add
scas
icebp
jmp
push
fadds
inc
or
test
mov
push
punpckhdq
lret
cmp
mov
mov
ret
xchg
xlat
test
sbb
mov
mov
pop
mov
mov
sub
call
pop
ret
testb
iret
test
sub
mov
push
scas
mov
mov
and
imul
in
dec
loop
xor
xlat
adc
bound
insb
cmp
fcomp
aas
xchg
jne
and
pushf
ja
pop
xlat
call
pushf
cmp
sub
push
cltd
adc
mov
loope
call
push
ss
push
sar
adc
lcall
inc
jno
sbb
sub
lcall
out
fmulp
scas
in
cltd
inc
and
xchg
pop
adc
popf
nop
rcll
cmp
loope
xchg
push
pop
test
fs
push
cs
mov
outsb
enter
lock
push
les
jb
mov
jecxz
jo
jb
or
bound
jbe
sub
mov
sbb
push
xor
in
outsl
or
pop
cltd
push
inc
fucomi
imul
lods
dec
jo
jb
xor
imul
movsb
mov
adc
ja
lret
sahf
test
xchg
mov
mov
or
inc
js,pn
jecxz
cmpsl
popa
popf
sbb
imul
mov
adc
mov
loop
js
sbb
in
jp
stos
das
loopne
sbb
daa
jnp
cs
aas
rcrl
jb
pop
sarl
icebp
xchg
icebp
lret
or
ds
orl
jbe
cmpsl
jge
fcmove
adc
je
lds
mov
lods
test
jmp
cli
fsubrl
mov
stos
outsl
int3
mov
cmpsl
in
les
cs
mov
test
jecxz
xchg
pop
sahf
out
jg
test
or
mov
xor
adc
mov
mov
inc
in
lods
aam
cmp
xor
dec
jmp
dec
imul
add
mov
mov
or
popa
in
mov
sub
mov
clc
jmp
sbb
mov
fsubp
lock
jmp
inc
push
icebp
push
mov
push
mov
loop
test
int3
and
mov
push
shlb
call
jno
xor
and
mov
xlat
adc
out
adc
nop
sarb
sub
and
mov
mov
loopne
jl
testb
mov
mov
dec
cs
es
fstpt
stos
das
shlb
xchg
rcl
jns
aaa
push
cmp
or
dec
out
jmp
mov
insb
jmp
or
dec
xchg
out
jae
imul
inc
sbb
push
pop
sub
imul
stc
int
imul
push
and
sub
or
lods
jl
mov
and
xor
pop
lds
push
push
sar
or
xchg
adcl
push
add
test
adc
dec
popa
add
mov
fwait
inc
outsb
dec
es
int3
movl
inc
dec
pusha
push
jae
xor
mov
ficomps
xor
and
or
pusha
sbb
push
data16
test
or
lods
sub
out
sbb
cld
add
dec
mov
push
xor
xchg
jmp
iret
sbb
sub
stos
mov
inc
push
or
pop
push
pop
sbb
test
cmpsl
xlat
adc
repz
sbb
notl
dec
ror
mov
addb
inc
fldenv
adc
mov
test
and
dec
inc
mov
les
mov
cmpsb
xchg
hlt
insl
jbe
push
and
fstpt
incb
adc
je
cli
pop
in
jmp
mov
aas
mov
or
mov
in
push
fiadds
nop
dec
test
add
mov
mov
dec
call
inc
addr16
shlb
cmc
and
jecxz
sbb
xor
ret
pusha
cli
cmpsl
pop
in
xor
inc
lds
push
and
fnstenv
add
inc
cmp
imul
in
mov
rsqrtps
or
popf
pushf
xchg
cwtl
sub
jne
and
aas
fwait
incl
imul
fldl2t
sahf
add
jp
test
das
and
xor
add
jg
in
adc
mov
into
enterw
test
add
push
dec
mov
add
rclb
inc
enter
ds
aaa
dec
xor
call
jp
es
jecxz
mov
hlt
dec
ret
test
xlat
adc
or
pop
or
mov
repz
rcrb
cmp
loop
jge
fldt
cld
mov
jle
sub
inc
sbb
sbb
daa
scas
mov
mov
sub
mov
scas
cmp
cmp
mov
mov
jbe
cmp
mov
mov
out
mov
mov
lods
mov
lods
aas
cmpsb
lds
mov
xchg
insb
movsb
mov
ss
out
mov
sets
pop
std
jecxz
sub
push
fsub
popf
pop
or
and
push
xor
xlat
mov
ss
mov
cmp
inc
adc
decb
mov
add
add
dec
rol
cmp
nop
iret
stos
ret
mov
mov
outsl
je
xor
add
in
pop
hlt
inc
push
and
jl
or
gs
mov
hlt
xor
addr16
nop
inc
mov
pop
pop
sbb
lods
sub
ds
cs
push
xor
or
cmpsl
pushf
add
or
in
popf
mov
jae
rcll
pop
fildl
arpl
jb
cmp
dec
mov
inc
add
aad
mov
dec
call
pop
mov
lahf
mov
sahf
sub
fnstenv
arpl
mov
sahf
mov
and
fs
inc
out
mov
lcall
adc
jae
cli
mov
notb
mov
insb
scas
outsb
mov
push
pop
jle
unpckhps
mov
aad
jno
cmc
mul
dec
insb
jmp
idiv
cmp
pop
hlt
ffreep
iret
mov
xor
into
sbb
adc
add
and
icebp
fidivl
sahf
test
mov
int
popf
adc
mov
sti
lock
push
push
ds
cli
jb
in
xchg
sub
cmp
out
repnz
fldt
mov
xor
ret
jno
das
aaa
test
dec
add
rorl
out
push
jmp
xor
pop
aas
lret
sbb
sti
popf
mul
or
and
cld
adcb
sbb
mov
jnp
in
cmc
mov
cmp
imul
pop
jl
movsb
ret
sbb
push
pop
icebp
push
pop
int3
ss
scas
pop
dec
add
insl
jmp
mov
std
mov
orl
pop
mov
fstl
dec
addr16
stc
or
loope
aaa
dec
lret
push
sbb
xlat
and
into
hlt
sbb
mov
cmp
xchg
dec
mov
mov
push
loope
mov
mov
repz
or
sbb
je
inc
cmc
push
js,pt
dec
sub
or
arpl
stc
mov
ret
rcrl
in
js
mov
hlt
leave
shrb
xorl
dec
add
sbb
lea
xor
popl
push
jb
aam
mov
xchg
jnp
inc
scas
jg
sbb
mov
and
and
subl
loopne
inc
ret
iret
flds
mov
bound
dec
pop
sarl
mov
pop
js
push
pusha
ds
pop
pop
add
fsubp
sti
jns
icebp
pop
or
in
ret
fidivl
inc
add
imul
cmp
mov
les
cmp
pop
push
fisubrl
push
iret
or
stos
jg
adc
push
out
shl
adc
mov
mov
add
loope
mov
mov
int3
lock
push
dec
cmpsl
repnz
shr
mov
pop
mov
mov
mov
adc
jp
pop
dec
pushf
xchg
xchg
dec
testb
jmp
iret
xchg
sbb
pop
mov
adc
setg
pop
add
xchg
mov
mov
lods
arpl
dec
jo
mov
enter
push
push
insl
mov
push
into
movsb
xchg
outsb
mov
mov
dec
fucom
xor
fsts
or
push
test
jge
push
jmp
sbb
jne
mov
adc
movsl
lret
or
push
pushf
lea
lret
mov
data16
sbb
jge
push
and
cltd
or
sbb
and
lahf
jecxz
xchg
sbb
mov
movsl
stos
cmp
lds
cmp
xchg
sbb
cmp
cs
int
rcrb
ds
add
cmpsb
loope
subl
and
add
inc
mov
fbstp
mov
or
push
mov
bound
jbe
std
pop
sbb
mov
xor
pop
jl
jns
scas
loope
pop
inc
cmp
add
lea
outsb
fisttps
fwait
and
xchg
xor
stos
jbe
jl
push
inc
add
out
ds
mov
fcoml
cmp
popf
arpl
popa
clc
sbb
push
pop
stos
lcall
les
lock
adc
lret
cmpsl
or
push
xchg
fs
xchg
sbb
dec
test
cld
imul
jbe
jbe
mov
sti
mov
xor
mov
mov
adc
add
dec
or
fst
xorl
movsb
lods
sub
cmp
fdivs
mov
pop
popa
inc
xchg
in
cmp
aad
cld
outsb
movsl
xchg
clc
fnstcw
lcall
or
mov
shll
shll
mov
xchg
xor
mov
add
into
addl
test
sub
sub
movsl
push
popa
adc
rolb
ror
jns
jbe
cli
xchg
gs
aaa
add
push
sbb
and
inc
push
mov
mov
or
xlat
mov
xor
fldt
rcl
cmc
pop
sti
lret
pop
enter
or
push
pop
mov
dec
das
jmp
je
into
lret
es
xchg
push
mov
mov
jnp
insl
mov
lods
push
sahf
pop
mov
jp
std
jp
push
shll
ds
mov
sub
fistpll
pop
dec
add
ss
dec
icebp
pop
ficoml
add
andb
inc
sub
imul
mov
out
aad
jne
and
enter
inc
adc
lret
in
pushf
test
outsb
pop
dec
pop
mov
loop
jne
and
lret
rcrl
pop
les
push
mov
or
in
inc
gs
mov
jmp
fnstenv
dec
pop
or
add
sub
fs
sbb
mov
shl
ljmp
outsl
lds
aas
fistpl
stos
pushl
xor
test
into
mov
add
mov
mov
mov
sar
mov
add
mov
mov
inc
mov
jl
into
lcall
push
jae
imul
jge
mov
add
mov
add
xor
jo
dec
inc
adc
lock
dec
mov
movsb
cmc
jbe
movsl
outsb
mov
fsubrl
cwtl
aam
andl
xor
cwtl
imul
mov
stos
mull
push
pop
xchg
sbbb
push
xchg
popa
popf
xlat
lods
popf
rcrl
push
push
in
loopne
adc
mov
scas
push
xchg
jne
cmp
xchg
adc
mov
mov
xor
pop
sub
dec
jbe
xor
into
inc
jg
inc
push
test
push
cmp
cmpsl
cmp
adc
pop
or
addr16
stos
test
and
mov
js
outsl
xor
je
addr16
sub
dec
mov
xor
and
mov
adc
loope
push
iret
in
pop
sbb
arpl
jmp
mov
repz
add
sub
mov
jo
xchg
dec
gs
sarl
loopne
push
cld
sbb
loop
sub
aas
sbb
sbb
int
inc
sbb
cmc
mov
in
jne
cmp
jmp
lea
jne
cmp
cmpsb
imul
add
lds
add
in
and
cwtl
jno
imul
repnz
lret
shrb
cmpsb
in
adc
pop
mov
jmp
lock
fwait
cmp
add
cmp
call
jg
test
idivb
ja
xchg
push
inc
xchg
std
xchg
push
shrl
mov
out
pop
arpl
test
sbb
sbb
inc
jle
clc
xor
add
ret
rolb
inc
rcl
cmpb
mov
loope
sub
pushf
call
fwait
inc
jle
inc
xlat
enter
lds
mov
sub
adc
lds
mov
mov
xchg
bound
jp
dec
pop
mov
aam
std
into
aaa
rolb
sbb
enter
fcomip
inc
or
push
test
jo
fdivrl
aam
or
mov
aas
adc
jmp
xchg
sub
jp
xchg
or
pop
repz
xchg
test
pop
and
xchg
or
mov
push
nop
push
and
out
xchg
clc
push
ljmp
insb
add
dec
pusha
xchg
shll
mov
incl
jbe
in
cmp
xor
adc
inc
ljmp
into
xchg
jl
mov
call
add
ficomps
push
das
jl
mov
push
xor
lock
push
sbb
xchg
xor
test
xor
xor
pop
jnp
icebp
push
adc
pop
mov
fsts
inc
xchg
xchg
push
repnz
test
pushf
mov
mov
scas
and
icebp
mov
xor
aas
mov
loop
mov
pop
mov
mov
push
push
pop
jns
lea
dec
loopne
lret
lods
add
push
pop
hlt
lods
ds
mov
hlt
pushf
mov
popa
mov
sub
xor
add
movsl
mov
sub
mov
sbb
aas
test
pop
sbb
mov
dec
pop
repnz
jns
rol
push
insb
cmp
jmp
inc
mov
test
add
lods
scas
cmp
mov
pop
push
push
cli
mov
push
cmpsb
and
cmp
cmp
int
or
out
mov
sti
mov
xor
cmpsb
cmp
fmull
or
lock
and
loop
mov
mov
cmp
jno
cs
mov
lahf
outsl
pcmpgtw
aam
clc
icebp
sti
or
mov
and
inc
inc
mov
fwait
dec
dec
adc
xchg
and
rcl
xor
xor
repz
jb
test
and
mov
std
movaps
pop
inc
mov
adc
testl
lods
js
daa
test
dec
aam
jne
sarb
dec
imul
popl
ja
jns
pusha
je
sub
in
dec
cli
in
mov
cmp
cmpsl
cmp
adc
lcall
xchg
daa
mov
add
xchg
and
sbb
inc
inc
inc
dec
and
or
sbb
sub
add
mov
ret
data16
xor
xor
insl
jae
lods
push
pop
imul
jo
push
add
xchg
fstps
ds
cmp
lcall
out
mulb
addr16
mov
dec
pushf
sbb
stos
fcoml
mov
vunpckhps
sti
pop
jno
mov
push
cmpsb
notl
and
push
orl
je
xrstors
xlat
xor
lcall
iret
fsubl
xlat
xor
sbb
test
cmp
icebp
pushf
data16
ljmp
aad
xor
es
test
mov
sbb
pop
jb
int
loop
or
cmp
leave
int3
iret
sbb
or
movups
mov
mov
push
jne
into
fs
hlt
aas
or
ds
ret
scas
cld
imul
aaa
dec
add
loope
mov
or
fsts
mov
inc
in
dec
pop
fs
decb
dec
xchg
inc
repz
cld
out
pop
stos
push
subb
iret
jnp
rcll
nop
clc
popa
cmp
test
push
rcll
mov
stc
inc
pushf
mov
push
xchg
jp
outsb
mov
pushf
pushf
xchg
inc
jb
jo
popf
mov
cmp
daa
mov
out
loop
adc
lahf
sub
invd
sub
in
leave
ja
icebp
inc
mov
xorl
test
cld
pop
pop
pop
pushw
inc
pop
push
mov
cmp
insl
jnp
int
jmp
push
pop
aam
mov
mov
fldl2t
add
mov
or
add
xchg
lea
and
cmpsb
loop
rcrl
push
hlt
mov
sub
leave
mov
test
jle
push
aad
lods
sub
loop
dec
adc
enter
xchg
lret
push
inc
dec
mov
mov
push
cltd
sub
dec
push
imul
lds
arpl
dec
cmpsl
loope
dec
pop
fstl
sbb
call
jl
sub
imul
mov
not
mov
mov
pop
cmp
aas
inc
popa
ret
adc
jns
fsubl
inc
lret
and
jl
loop
enter
push
mov
push
into
cmpsb
pop
es
fiadds
insl
test
cmpsb
inc
and
out
or
scas
sbbl
bound
xor
test
push
mov
shrl
sahf
push
add
mov
inc
lds
jmp
adc
jae
je
rcrl
cmc
mov
jmp
sub
pusha
mov
mov
push
in
and
cmp
and
jge
out
xchg
ljmp
repnz
inc
decl
out
mov
xlat
lahf
pusha
inc
inc
xchg
scas
mov
loop
sar
shlb
push
push
out
lret
lds
mov
shlb
mov
iret
add
cmp
fcoml
mov
in
inc
sahf
mov
mov
aam
notl
adc
jbe
sbb
sbb
inc
mov
pop
cmc
dec
fbld
dec
or
test
or
jp
cmpsl
filds
scas
mov
daa
xor
lret
cmp
jns
jns
push
out
pop
mov
stos
mov
cwtl
cmp
dec
rclb
adc
or
push
bound
aaa
shl
mov
gs
sub
sub
xor
out
add
fadd
pop
ljmp
cmp
jecxz
or
aaa
adc
dec
lods
jg
cwtl
jmp
fwait
push
lods
ds
rorl
or
sub
adc
dec
daa
mov
xchg
push
sbb
mov
movsb
add
mov
xor
mov
mov
shll
arpl
inc
pop
test
aaa
add
clc
push
xchg
dec
int3
jbe
pop
pusha
loope
or
fstl
pusha
adc
pop
dec
pusha
mov
jle
jns
ret
pop
fisttpll
movsl
test
ficoms
rorb
negl
cmp
dec
fcomp
push
cmpsl
daa
cmpb
test
outsb
rol
out
push
test
adc
sti
and
pop
jmp
add
pop
aam
cs
mov
movsb
mov
dec
rcrb
mov
mov
insl
dec
pop
xchg
ja
loop
ret
cmc
out
ds
mov
mov
jnp
out
push
mov
push
xchg
xchg
js
push
inc
mov
dec
shll
addr16
sti
pop
jno
mov
lea
andl
imul
iret
cmp
xor
add
xchg
stos
popa
mov
sbb
cmp
loop
dec
ljmp
push
sti
lods
bound
sti
jmp
call
out
or
das
mov
shll
push
out
sbb
aas
sbb
dec
push
cmp
out
adc
fmuls
in
int
aas
outsl
dec
dec
arpl
push
in
ja
cmp
pop
je
mov
ja
sub
mov
mov
out
test
sbb
movsl
xorl
dec
adc
mov
data16
fcmovbe
rorl
jmp
mov
cmpsl
imul
mov
push
movsl
fwait
xchg
mov
xor
dec
adc
xchg
xchg
push
aaa
pop
and
push
xor
inc
mov
loop
sbb
repnz
or
xor
arpl
ds
dec
and
fwait
scas
fldl
icebp
cmp
ror
push
xchg
or
mov
and
popf
loope
scas
dec
jo
aaa
push
fisubl
loope
mov
sub
jmp
loopne
dec
repnz
add
mov
mov
sub
mov
notb
adc
stc
add
mov
das
hlt
mov
lds
hlt
cmpsl
rcr
cs
dec
movsb
shl
popa
clc
mov
and
adc
nop
iret
xchg
push
jg
scas
push
cmp
int3
cmpsl
in
outsl
xor
iret
in
and
mov
ror
inc
scas
dec
inc
mov
std
sub
inc
mov
leave
sub
mov
stc
not
testl
pop
jb
jecxz
sbb
sbb
fs
jns
add
enter
gs
in
push
jle
pop
mov
jmp
sti
jmp
subb
dec
mov
into
pushl
pop
stc
push
adc
push
lret
cmp
test
adc
lea
dec
jno
rorl
add
call
xlat
rolb
sbb
imul
inc
or
xchg
mov
jge
scas
stc
jb
and
push
out
ret
ficompl
or
in
xchg
pop
lahf
pop
mov
aaa
lahf
push
pop
les
popfw
push
and
push
mov
or
mov
insl
lods
idivl
add
leave
sub
xchg
test
push
push
jp
dec
stc
xor
out
popf
push
out
dec
push
sbb
and
mov
mov
push
xor
mov
mov
mov
jnp
pop
add
fidivrs
sets
iret
filds
ret
jo
int3
xchg
inc
push
stos
out
out
cmp
add
mov
pop
dec
enter
rcrb
out
mov
sub
dec
mov
lods
in
jne
lock
fstl
or
add
incl
push
sub
sub
xchg
push
or
repz
arpl
mov
sbb
push
test
push
cmp
inc
mov
sbbb
add
push
jecxz
ret
jbe
in
dec
loopne
cmp
dec
xor
int
or
or
xor
adc
or
mov
sub
pop
sub
jmp
lret
sub
jae
das
adc
xor
roll
test
imul
lahf
jo
xchg
addr16
stc
fadd
shlb
movsb
lea
xor
mov
xor
xchg
sub
add
mov
pop
rorb
mov
xor
mov
stos
jne
dec
inc
pushf
add
int3
and
mov
or
and
fs
repnz
pop
sbb
aaa
jg
out
pop
cmp
xor
jbe,pn
rcrb
hlt
xchg
jb
push
and
xchg
iret
mov
or
pop
psubd
neg
bound
ja
cmp
adc
mov
mov
pop
sub
jp
arpl
mov
mov
push
cmpsb
scas
inc
adc
xlat
lret
sbb
push
jbe
sub
test
dec
mov
cmp
les
cli
lods
xchg
leave
xor
pop
sar
sti
rcl
jbe
jecxz
pop
lret
fists
jecxz
lea
push
inc
js
lahf
jge
ror
js
mov
xchg
xchg
bound
es
test
dec
push
cs
jns
mov
pop
push
xor
xchg
repz
xor
bsr
mov
lds
push
out
popl
xchg
xchg
scas
inc
lea
mov
push
and
jmp
push
or
add
mov
pop
cmpsb
mov
pop
shrl
or
adc
insl
hlt
mov
and
lds
mov
aad
sub
aaa
mov
pop
inc
xlat
cwtl
repz
sub
aad
mov
cmp
aam
sub
or
cmp
imul
add
jp
scas
in
jmp
inc
mov
test
or
lock
fisubl
mov
pop
aaa
adcb
std
add
ljmp
inc
outsl
add
nop
lods
cmc
add
cs
aad
pop
icebp
rorl
enter
jno
adc
outsl
bound
cmp
inc
test
lods
sbb
sbb
icebp
call
mov
pop
pop
inc
jbe
pop
mov
pop
gs
popa
popa
adc
rcr
cmp
ret
ja
jne
and
fisubs
es
data16
xchg
movsl
nop
mov
add
and
cmp
ljmp
aaa
inc
add
mov
andl
add
je
and
call
jnp
ja
cmp
lods
xchg
push
pop
and
sahf
iret
fistps
cmc
xchg
mov
mov
xor
pop
mov
outsl
mov
mov
dec
call
adc
fiaddl
jecxz
cmp
mov
jno
ss
scas
fidivrl
xor
ret
hlt
ret
adcl
mov
mov
mov
add
imul
jge
mov
push
jmp
push
push
gs
xor
lock
rcr
fists
push
lret
cltd
xchg
xor
ss
ljmp
mov
pop
cmp
xor
inc
jmp
negl
xor
ss
test
js
arpl
push
inc
push
inc
jbe
movsl
xor
pusha
std
mov
ds
cwtl
jmp
addr16
aas
jg
mov
fdivrl
fld
mov
ds
cmp
jnp
pop
sbb
add
mov
ret
ja
js
insb
mov
arpl
inc
ljmp
dec
pop
or
out
cmp
rcrb
test
sarb
jl
je
dec
test
cmp
out
pushf
bound
jmp
mov
adc
cmpsb
mov
mov
pop
mov
sbb
adc
out
repz
aad
jl
pop
in
popa
jle
adc
mov
adcl
mov
insl
popa
cmp
xchg
xor
mov
cmp
xchg
js
loop
sbb
mov
dec
or
pop
fstpt
mov
mov
movntq
out
mov
fcoms
pop
out
imull
std
inc
push
test
jnp
inc
mov
decb
add
xchg
ljmp
enter
xchg
and
stos
inc
cmp
test
iret
adc
push
and
mov
cmpsl
pop
push
push
lahf
push
push
mov
mov
mov
mov
arpl
push
leave
mov
pop
xor
popf
mov
enter
pop
insb
scas
cmp
addr16
push
cltd
das
iret
mov
mov
pusha
sbb
inc
data16
in
push
jbe
cli
jae
addl
pop
das
push
inc
fwait
shll
dec
mov
icebp
jge
xchg
xchg
push
mov
inc
adc
jg
aam
pop
and
fisubl
orl
pop
sti
aad
mov
popa
push
pop
ljmp
or
imul
pop
das
mov
imul
push
ret
scas
hlt
push
std
imul
pop
insb
pusha
jne
push
pop
xchg
pop
scas
push
lea
sarb
pop
ss
mov
or
xor
jp
dec
mov
subl
divl
or
ficoms
pop
inc
cmp
into
int3
addr16
movsb
or
push
xor
test
mov
imul
fidivl
lods
shll
cli
pop
lock
and
outsb
inc
jns
das
pushf
and
push
xchg
lods
jl
cmp
lods
xor
mov
daa
into
dec
dec
imul
or
dec
ss
cmp
sub
leave
sahf
cmp
and
std
xchg
jg
dec
pop
rcr
cmp
cmp
insb
scas
mov
xchg
mov
sahf
inc
mov
lcall
testb
iret
sbb
mov
aas
mov
adc
pushf
and
pop
out
add
sbb
or
div
mov
rolb
cmp
test
aaa
insb
insb
rolb
sbb
popf
ret
sahf
push
xchg
gs
xor
mov
pop
pop
xlat
mov
outsl
push
idiv
out
ficoms
ds
fs
jae
sahf
cmp
mov
decb
xor
test
out
mov
adc
xor
sbb
out
loop
bound
adc
mov
int
mov
jno
or
xor
mov
adc
and
adc
mov
jae
inc
pop
or
movsb
jl
jae
push
pop
jp
and
or
cmp
adc
pusha
mov
cld
jbe
imul
mov
mov
divb
sub
xchg
add
push
and
mov
int3
xchg
stos
aas
push
xorb
dec
icebp
sub
xchg
add
pop
bound
or
adc
pop
xor
sbb
stos
loopne
test
subb
popa
mov
out
mov
movsb
cltd
in
stos
pop
fst
mov
xor
inc
jnp
dec
in
or
and
inc
test
int
inc
test
pop
arpl
adc
inc
mov
leave
xchg
sti
jge
fiadds
ret
aaa
aam
cli
imull
pop
ja
ds
sub
bound
data16
cld
pop
sti
jle
sub
mov
aad
mov
arpl
nop
sbb
scas
fxch
mov
loopne
xchg
xlat
add
jbe
shl
mov
sbb
mov
jns
cmp
icebp
cmp
inc
inc
or
fdiv
and
test
mov
aaa
jg
pop
rcl
dec
xchg
iret
das
lret
rclb
mov
adc
xor
popa
pop
jbe
push
out
mov
mov
ja
cmpsl
lods
add
mov
jno
cmpsb
sub
ss
mov
mov
cmp
pop
cmp
push
sbb
lods
mov
jno
fucomi
in
mov
mov
push
bound
cltd
adc
jae
add
xchg
jns
in
mov
cmp
loopne
in
mov
or
cld
stos
add
push
fisubs
xor
call
iret
shrb
stc
sub
xor
xchg
inc
inc
stc
movsb
aaa
xor
add
jmp
jge
xorb
clc
or
and
dec
sti
adc
mov
or
jl
xchg
mov
xchg
lock
push
insl
mov
sub
mov
mov
adc
imulb
inc
sub
adc
test
lret
mov
jmp
xchg
push
xchg
jne
insb
ss
mov
mov
xor
dec
dec
orl
add
mov
jl
or
jb
notl
int3
leave
dec
push
xor
jmp
cmpsl
cmpsl
mov
jl
shrl
cmp
jnp
stos
in
hlt
fiadds
inc
mov
adc
cmc
popa
dec
adc
out
pop
in
arpl
mov
outsl
aas
jle
adc
push
sbb
cmp
xor
fistps
hlt
lea
sbb
gs
fisubrs
into
clc
inc
cmp
test
bound
and
ret
loopne
pop
pushf
mov
push
pop
sub
inc
dec
test
lods
imul
push
dec
sbb
jae
arpl
fwait
ja
lock
add
fwait
dec
push
mov
movsl
mov
les
add
xor
cwtl
cmpsl
cwtl
xor
movsl
rorl
xchg
arpl
xchg
cwtl
scas
inc
enter
loop
and
push
cmpsl
sbb
mov
gs
inc
std
lds
inc
dec
push
mov
adc
lods
push
pop
cmc
xchg
inc
and
dec
mov
and
and
or
push
leave
dec
mov
xchg
dec
das
pop
sbb
mov
imull
cmpsl
call
mov
popa
in
dec
mov
aaa
jge
push
les
jb
add
dec
xlat
rorb
push
cmpsl
pop
stc
in
cwtl
xchg
cltd
sub
loop
xchg
incl
pop
shl
mov
jb
addr16
repz
push
or
imul
nop
stos
outsl
inc
mov
cmp
dec
out
mov
stos
out
lds
or
and
ret
outsb
lods
push
sub
mov
mov
out
pop
cmp
xchg
mov
sub
jo
fwait
xchg
cwtl
loop
cwtl
mov
sbb
push
pop
aad
inc
lahf
pop
push
popa
shlb
dec
cmp
and
cmpsb
test
in
fidivrs
add
rclb
cwtl
cmp
or
push
push
sbb
iret
add
fdivrl
addr16
pushf
sbb
sub
xchg
rcll
push
dec
push
mov
das
mov
rcll
lods
pop
cmp
mov
sub
das
and
adc
in
movsl
mov
sub
insl
mov
jb
loop
mov
inc
fidivs
push
xor
ret
in
std
adc
repz
xchg
and
mov
sub
aad
mov
jge
popf
leave
in
aad
cli
inc
xchg
adc
inc
into
cld
inc
sub
cli
add
inc
stos
add
dec
cmp
add
push
cmpsl
paddusb
popa
push
fidivrs
xchg
sahf
sbb
lods
mov
aam
adc
jecxz
mov
xchg
add
mov
and
push
icebp
xchg
ss
nop
and
jge
inc
xor
push
pop
movb
enter
out
pop
and
xchg
mov
sub
pop
mov
mov
out
dec
aam
or
cltd
ja
push
xchg
movups
sub
push
xchg
mov
lret
mov
push
adc
repz
lock
shrb
lret
call
inc
mov
loope
add
mov
mov
ljmp
pop
cmp
sbb
in
popa
inc
outsl
mov
dec
lock
mov
add
adc
sbb
inc
in
add
jno
cmp
add
lahf
aam
int3
mov
cmp
vpshlw
xchg
jnp
cltd
cwtl
dec
mov
fwait
xchg
fisubrl
dec
xchg
sub
in
lds
lret
nop
sub
pop
mov
jns
sbb
xor
cld
lea
fwait
movsl
pop
push
in
sub
int3
aam
mov
inc
imul
add
xchg
push
imul
js
mov
xchg
pusha
pop
popa
leave
xor
jecxz
adc
addl
dec
mov
f2xm1
imul
mov
iret
subb
mov
lahf
jne
ljmp
ficoms
cmp
cmp
mov
adc
mov
push
fs
lahf
jg
dec
and
fwait
and
sbb
lea
or
movsb
xor
in
dec
push
cwtl
xchg
jae
sub
mov
or
dec
push
jo
and
inc
sub
dec
mov
or
pushf
adc
push
add
mov
popa
jp
or
xor
sti
xchg
add
roll
mov
xchg
mov
push
jae
jp
iret
pop
icebp
cltd
xor
push
xchg
scas
fisttpll
out
loopnew
cmc
add
rcl
ret
loopne
loop
leave
rorl
lods
mov
out
jne
jp
cwtl
adc
and
shll
adc
xor
mov
int3
fists
int
lahf
xchg
adc
mov
addr16
sbb
lods
mov
sbb
dec
dec
jae
mov
test
pop
xchg
jl
sbb
cmp
xchg
jo
xor
mov
jl
xor
cmpsl
pop
jns
pop
xchg
fdivrp
dec
es
add
mov
dec
cltd
push
test
gs
lock
out
jmp
sub
fs
push
push
test
int3
sbb
dec
sub
mov
inc
mov
and
dec
jmp
dec
lret
inc
ret
cmp
and
dec
sbb
jp
sbb
notl
jo
and
sub
cli
loop
das
xchg
sbb
sub
nop
adc
jmp
jl
cmpsb
add
loope
sub
repnz
sbb
pop
cli
icebp
test
int
dec
iret
mov
pushf
add
add
mov
inc
and
rorl
ds
xor
jno
pop
leave
mov
aam
mov
cld
mov
pop
inc
imull
sub
xchg
mov
adc
xor
pop
and
imul
jmp
add
lods
flds
arpl
mov
les
mov
gs
in
mov
dec
enter
cmp
and
in
mov
mov
jmp
adc
cmp
jg
jo
addl
push
stos
mov
call
aaa
and
ja
int
or
movsl
pop
cltd
inc
enter
inc
in
test
pop
imul
sbbb
xchg
sarl
clc
push
decb
pop
dec
shlb
and
jne
jb
jnp
or
jge
xchg
push
inc
andl
into
jb
cld
cmpsl
dec
jno
lods
fcomps
es
insl
movsl
pop
sbb
xchg
pushf
push
mov
jo
mov
adc
and
in
mov
mov
mov
cmpsl
mov
jns
inc
sub
gs
sbb
sahf
jp
sbb
push
and
popf
jl
imulb
je
lods
add
mov
jno
fildll
in
int
xor
loopne
or
xchg
mov
xor
out
pushf
xor
out
sar
dec
mov
or
mov
jge
or
sbb
xchg
leave
jle
pop
add
dec
jae
xchg
sti
push
add
adc
adc
psubusb
in
ljmp
cmpsl
or
xchg
fst
rclb
subl
push
scas
fstpl
aaa
cmp
jns
and
and
mov
xchg
outsl
into
outsl
mov
push
addr16
fwait
jns
xchg
push
aam
lahf
jb
jle
insl
sub
or
icebp
test
daa
scas
popf
pop
pop
adc
xor
shlb
ja
or
test
cmp
imul
int
cmpsl
xlat
adcb
imull
rclb
cmp
cmp
out
mov
pop
mov
std
or
mov
insb
mov
mov
push
repnz
push
push
int
icebp
into
inc
cmpsb
addr16
add
and
call
jne
inc
cmpsl
and
lods
xor
shlb
inc
mov
je
mov
cwtl
out
adc
cmp
sub
pusha
sbb
push
pop
sub
cli
sbb
xor
and
gs
push
inc
push
jge
sbb
jo
daa
cmp
jne
mov
cmpsb
shll
int
lds
dec
mov
push
mov
nop
mov
cmpsb
jmp
fnstenv
xchg
lock
xchg
xchg
sub
mov
mov
cmp
into
das
lods
add
pop
orl
cmpsl
sub
sub
dec
icebp
lea
sub
fsubrl
mov
mov
popf
lds
sbb
push
shll
jp
fcomps
jecxz
xchg
call
icebp
cwtl
sub
test
sbb
pop
sbb
pop
dec
and
xor
shl
sahf
adc
imul
sbb
lahf
movsb
push
add
mov
lret
cmp
ds
mov
es
rcll
test
insb
outsl
sbb
push
adc
mov
push
jno
and
ja
les
mov
sbb
push
cmp
adc
test
mov
notl
repnz
pop
out
fsubr
cli
out
imul
aad
xchg
shll
addr16
jns
jge
je
xchg
push
enter
jne
dec
outsb
fldl
or
sub
leave
or
inc
cmpsb
mov
cli
push
sbb
fbstp
je
push
sbbl
icebp
sbb
cs
popf
and
pop
pop
inc
mov
in
out
sub
pushf
pop
push
in
or
sahf
hlt
add
das
pusha
inc
scas
mov
es
sti
push
arpl
or
test
xchg
jecxz
inc
ljmp
and
in
inc
jp
insl
enter
xchg
icebp
jb
popa
insl
ret
inc
or
aaa
ja
push
sbb
mov
sbb
es
adc
mov
dec
adcl
adc
fwait
mov
pop
iret
stos
jo,pt
xchg
jg
push
jge
int3
mov
jecxz
fldt
push
call
in
xor
out
push
jmp
stos
ret
daa
bound
push
in
lret
out
pop
mov
lds
icebp
iret
fsubrl
gs
ret
push
imul
sub
lea
xor
push
not
testb
mov
ret
inc
roll
cmc
mov
pop
pop
in
sub
pop
fldenv
je
jo
sub
nop
xchg
cmp
daa
cld
pop
fstpt
imul
aam
mov
mov
into
cwtl
push
cmp
add
shll
cld
jb
pop
into
pop
jno
dec
sbb
shlb
jae
cmp
test
push
cmp
adc
jge
jecxz
int3
mov
js
scas
xchg
sbb
outsl
jae
or
pop
setae
fs
aad
ljmp
cltd
sub
sahf
hlt
bound
insb
mov
iret
xchg
cmp
into
mov
xor
fsubrs
mov
mov
jo
sbb
stos
movsl
test
loopne
mov
add
cwtl
pop
or
sbb
ret
pop
or
ficoml
shlb
test
dec
out
lods
in
stc
outsl
test
mov
add
ja
mov
repnz
scas
mov
cmp
cmp
pop
xchg
sub
lea
cmp
adc
scas
mov
lret
mov
adc
mov
daa
mov
mov
xchg
sbb
notb
sub
mov
repz
aam
loop,pn
and
jae
jle
push
xor
int
mov
lods
and
or
in
leave
or
and
das
dec
and
fisubrs
cltd
xchg
ret
bnd
lret
shr
ret
inc
insl
inc
lret
inc
xlat
sti
push
pop
nop
xchg
dec
pop
repz
mov
je
out
pop
push
imul
dec
es
sub
scas
xchg
mov
stos
push
mov
int3
jb
jcxz
mull
int3
jmp
push
lahf
shl
mov
adc
adc
inc
cs
pop
and
inc
sbb
mov
dec
mov
mov
popf
push
xor
adc
mov
sbb
mov
pop
fdiv
stos
stos
add
pop
test
sbb
test
jle
jo
inc
dec
pop
cmp
mov
mov
gs
nop
scas
dec
add
inc
lcall
pop
mov
leave
cli
inc
sub
pop
pop
and
insl
sbb
sub
inc
outsb
imulb
decl
std
int3
inc
lods
and
inc
cmc
xor
fstl
lcall
cmc
pop
daa
jbe
inc
mov
sbb
jg
out
and
push
es
xor
scas
and
mov
xchg
push
xchg
mov
xor
cld
and
in
out
mov
int
iret
pop
push
and
pop
push
adc
inc
daa
repnz
scas
cmp
push
lret
loope
xor
push
inc
xor
mov
stc
into
in
cmpsb
clc
jae
jbe
or
pop
adc
dec
mov
out
addr16
jg
and
jge
add
push
into
inc
sbb
or
jg
gs
dec
leave
test
int
inc
mov
filds
loope
pop
push
stos
enter
imul
xchg
imull
adc
repnz
cwtl
add
push
fs
sub
push
sahf
pop
test
clc
xor
test
adc
enter
mov
int3
pop
or
push
jb
sbb
xchg
out
or
and
xor
lret
iret
ret
stos
inc
outsb
cli
testl
loopne
and
pop
xchg
dec
fiadds
shl
or
fwait
repnz
sar
mov
ss
jge
xchg
push
fisttps
xchg
popf
push
add
add
stos
jmp
push
sub
addr16
outsb
popf
mov
xchg
in
push
mov
imul
ficoml
lcall
fists
inc
movsl
fcomps
push
mov
adc
fbstp
mov
pop
decb
cmp
adc
cli
sbb
in
loop
ljmp
loop
add
shlb
in
pop
mov
pop
sbb
cmpsl
mov
mov
sub
fildll
fistpll
fwait
mov
dec
and
ja
aas
stos
adcl
add
dec
lock
jo
mov
mov
loop
cmpsb
out
inc
add
loop
in
xor
sbb
xchg
shlb
sbb
inc
js
addr16
ljmp
mov
aam
nop
push
rcr
inc
push
push
push
cmp
xchg
imul
jl
inc
dec
fstps
pop
stos
lods
cltd
loopne
ljmp
je
and
sbb
stos
pop
test
shll
dec
ret
ret
ret
mov
insb
push
aaa
cs
jge
pop
inc
xor
subl
add
out
jmp
addr16
xlat
ret
jp
imulb
xor
ja
dec
inc
cmp
insb
aaa
cmpsb
fcoml
in
movsb
rcrl
mov
test
adc
mov
mov
shll
shlb
inc
xchg
repnz
mov
add
stc
es
mov
das
adc
xchg
mov
cli
cmpsl
movsl
push
mov
xor
cs
lea
cmpsb
adc
sbb
shlb
sub
sahf
sbb
jmp
cmp
mov
arpl
add
nop
hlt
mov
cwtl
ret
cmp
pop
out
add
jae
jbe
inc
ljmp
push
shrl
sahf
mov
mov
mov
bound
inc
ret
mov
dec
push
pop
fwait
xchg
xor
push
xor
fdivp
adc
push
cmp
xchg
mov
jmp
dec
int3
inc
push
cmp
repnz
loope
xor
daa
test
out
mov
add
les
jne
sti
aam
int
and
dec
push
incb
pop
rorb
arpl
or
test
in
aas
gs
aad
test
mov
arpl
inc
push
cmpsb
lret
jb
ss
add
movsl
sub
fs
stc
mov
jg
pop
inc
daa
cld
mov
sub
fsts
scas
mov
pop
inc
lret
xchg
shlb
jmp
push
and
shll
mov
inc
xor
addr16
pop
out
cli
push
scas
or
jecxz
shlb
inc
xor
sbb
pop
lret
cmc
or
in
jmp
xorl
daa
jg
pop
frstor
arpl
sbbb
pop
mov
adcb
lcall
xchg
adc
mov
mov
inc
jg
scas
mov
js
in
xchg
pop
andb
shll
je
or
dec
mov
mov
push
in
rclb
mov
adc
int3
sbb
sahf
xchg
mov
cld
gs
sbb
or
xchg
inc
jge
adc
add
mov
out
imul
cmp
movsb
sbbl
sub
outsl
lds
nop
dec
mov
mov
pop
jp
dec
pop
in
pop
mov
mov
daa
adc
cs
dec
out
in
pushf
aaa
aas
test
jecxz
loopne
push
xchg
or
pop
mov
mov
cmp
inc
jae
mov
mov
push
roll
mov
mov
jo
pop
out
fstpt
out
je
add
lock
inc
pop
test
mov
inc
lret
lea
orb
inc
scas
dec
imul
pusha
xchg
rol
cmp
mov
loope
xchg
sahf
fdivrl
rorl
cld
jbe
xlat
dec
jle
enter
loop
or
aaa
mov
repz
bound
dec
nop
mov
mov
inc
xchg
adc
inc
ret
sub
sti
outsb
push
mov
test
mov
sub
out
lock
addl
xlat
mov
sti
mov
in
test
pusha
jno
push
pushf
js
test
inc
mov
push
das
scas
sbb
sbb
sbb
jns
cmp
fidivrl
push
mov
incb
imul
sbbb
bound
xor
mov
xor
sahf
sahf
mov
test
mov
mov
dec
cmp
dec
mov
cltd
xchg
sub
in
fldl
fcompl
insb
je
sarl
push
xchg
sbb
pop
sub
xchg
add
or
repnz
invd
insl
jecxz
popa
ftst
mov
pop
inc
dec
arpl
xor
stc
mov
pop
aad
push
jl
mov
push
cmc
in
mov
lock
pop
sub
fldcw
adc
mov
adc
lods
pushf
dec
lods
push
pop
sbb
aad
insl
or
aam
fs
push
jl
mov
push
mov
fbstp
xor
pushf
rcr
adc
stos
das
xlat
mov
dec
test
xchg
aaa
xor
jb
pop
stos
mov
das
sbb
into
in
aad
dec
dec
decl
pop
pop
mov
test
sub
mov
or
sbb
xlat
aad
sbb
es
jmp
sub
add
lea
dec
mov
push
mov
out
inc
add
sub
and
in
outsb
in
or
in
insb
popf
out
enter
pop
andl
push
jae
test
hlt
stc
inc
xor
adc
cmp
xchg
jecxz
push
cli
jne
je
pop
sub
test
jno
lock
dec
lea
mov
fldl
test
and
jmp
scas
pop
cmc
inc
dec
adc
outsb
mov
xor
and
sti
jno
or
xor
adcl
and
fmuls
test
inc
dec
mov
jne
ss
sub
rorl
popa
cs
pop
mov
inc
fcompl
cld
fisubs
add
outsb
mov
mov
sbb
ljmp
mov
and
push
iret
sub
dec
repz
and
popa
sti
fdivr
xor
out
pop
ret
sub
sub
mov
nop
cmp
sahf
push
shrl
ror
xor
sub
in
cmpsb
fidivs
loope
push
mov
fwait
add
push
or
xchg
dec
sbb
pop
pop
sarl
ja
jbe
andl
push
sub
in
xchg
jno
or
mov
pushf
fcmovnb
xor
ret
mov
mov
jmp
repz
push
dec
fcmove
cmp
popa
div
pusha
lods
adc
push
clc
inc
sbb
jge
mov
in
fdivs
pcmpgtd
push
inc
into
or
or
xor
jns
scas
sbb
jg
add
mov
cli
jne
jp
ret
imulb
xchg
pop
cmc
inc
clc
into
mov
mov
jns
fldl
lahf
sbb
lods
daa
stc
icebp
and
pop
pop
xor
iret
jl
mov
cld
inc
lds
jo
cltd
xlat
popf
pop
dec
cmp
fistl
in
adc
mov
outsl
mov
mov
rcll
iret
repnz
mov
sub
or
jl
mov
loopne
test
jg
movsb
mov
or
cmp
out
hlt
lcall
leave
mov
insl
add
imul
aaa
add
cmpb
and
cld
in
lcall
pop
push
movsl
sbb
outsb
jp
arpl
push
lock
in
into
mov
popf
pop
pop
xchg
xchg
xchg
aaa
or
mov
stos
fdivr
or
insb
outsl
push
or
test
cmp
push
xchg
stos
and
mov
push
xor
js
and
decl
inc
insl
lret
lret
mov
cmc
sub
push
sbbl
mov
sub
ss
mov
into
lods
mov
std
sub
jbe
cltd
pop
add
out
push
xchg
mov
xor
loopne
xchg
mov
pusha
outsl
or
adc
jo
test
jnp
cmp
movsb
pop
pop
cmp
or
les
inc
ret
imul
jmp
add
outsl
and
aad
pusha
jle
add
repnz
and
cmp
jne
imul
inc
ljmp
movsb
in
cmp
out
jp
and
inc
xchg
out
mov
test
xor
mov
adc
cltd
jo
inc
jp
sbb
jecxz
cmc
and
and
mov
test
ficompl
insb
push
adc
sbbb
pop
xchg
lcall
mov
inc
leave
jnp
ja
xchg
int3
mov
out
inc
pop
aas
inc
jae
mov
shll
inc
sbb
xchg
iret
pop
je
aas
call
mov
int3
je
cmp
sub
xor
insl
xlat
sub
mov
je
jo
push
pop
daa
jecxz
neg
js
inc
test
stos
mov
push
int3
xchg
js
test
cmp
fsubs
mov
icebp
movsb
into
cwtl
jmp
jg
cltd
sbb
dec
add
std
add
movsb
jecxz
jmp
mov
sub
inc
lds
loop
mov
ds
aam
or
into
inc
inc
cmpsb
and
dec
jge
mov
xchg
pop
mov
ja
and
fisttpll
adc
xor
sbb
fmuls
push
mov
adc
xor
sub
push
mov
andl
cmpsl
xchg
cmp
xor
out
mov
nop
adc
sahf
cli
sub
sub
mov
jns
test
sub
divb
adc
je
out
mov
inc
inc
pop
nop
cwtl
push
fucom
add
add
aaa
push
jl
sahf
pop
cmp
loopne
lods
xor
mov
mov
xchg
mov
call
dec
and
xor
inc
loope
sbbl
jns
cltd
daa
arpl
mov
shlb
fdivr
cmp
outsl
outsl
jmp
fucomi
pop
into
negl
or
aam
enter
shll
stos
xor
sarb
add
into
pop
mov
into
and
cwtl
ret
jae
imull
lods
pop
pop
sarb
sbb
or
or
inc
outsl
daa
dec
push
fldenv
mov
mov
addr16
cmp
mov
mov
cmp
rorb
jno
mov
sub
push
mov
les
lds
xor
inc
enter
rcrb
leave
fs
insb
pop
and
std
in
popa
pop
into
bound
pop
sahf
fimull
mov
negl
mov
dec
sbb
lods
lds
cld
imul
jb
test
xchg
xor
cwtl
push
inc
gs
fstps
sub
negb
adc
ss
push
add
arpl
add
lods
pop
scas
or
ret
data16
out
jmp
es
xlat
sbb
loopne
lock
cltd
xor
xchg
pushf
cmpl
outsl
sub
inc
or
jmp
and
nop
loop
sub
ja
jecxz
cmp
adc
shl
je
push
mov
int3
dec
inc
push
inc
cld
frstor
and
mov
mov
lods
fstp
ds
jae
fistl
dec
mov
mov
aas
xorl
sbb
pop
jbe
or
ja
mov
hlt
lahf
xor
bswap
sub
push
dec
push
pop
add
xlat
test
sub
outsb
xchg
lret
jmp
je
or
test
test
xlat
cmp
ja
loope
jl
jg
or
ret
shrl
icebp
fwait
test
daa
push
pop
push
sarb
stos
mov
sti
pop
pushf
mov
insb
imul
cmc
mov
jmp
sbbb
sub
jg
jae
imull
loop
fdivr
pop
mov
in
sbb
mov
ljmp
js
push
loop
loope
pop
loop
sbb
into
or
jge
or
push
mov
add
add
sbbb
sub
int3
shlb
test
daa
sahf
out
fimuls
xor
iret
aad
test
std
loop
push
in
cli
xor
data16
xchg
sbb
mov
pop
dec
int
lret
jb
mov
dec
loopne
xchg
cmp
mov
fidivl
cmovle
add
nop
add
pop
jb
jbe
shrl
das
jb
jmp
test
fs
xchg
xor
and
mov
subl
mov
test
mov
cmp
or
outsb
xchg
and
inc
es
push
sti
test
jp
or
enter
or
mov
jle
xor
jmp
nop
jmp
mov
out
mov
inc
cmpsb
je
jmp
cmpl
mov
xchg
cwtl
test
pop
adc
dec
fsubl
fsts
stos
daa
shll
pop
mov
rcrl
pop
dec
jmp
cli
jecxz
loopne
jnp
pop
sbb
sbb
test
leave
mov
and
daa
push
cs
add
aas
add
mov
pop
cli
xchg
iret
test
dec
hlt
xchg
xor
cld
sub
jg
inc
rolb
fnstcw
mov
lds
addr16
aaa
addr16
cmpsl
jg
adc
jbe
mov
mov
sbb
ljmp
xor
out
cmp
mov
mov
xchg
sub
dec
es
js
rorl
cmpsl
mov
int
xchg
fwait
inc
in
jne
adc
nop
cmc
adc
sub
loop
mov
imul
xchg
jae
ss
jmp
pop
xor
pusha
jge
jl
inc
pop
mov
cmc
fmuls
loopne
or
sar
and
cmc
xchg
pavgw
push
or
mov
push
cli
mov
aaa
cltd
shr
scas
pop
xor
mov
sub
add
xlat
push
hlt
jnp
nop
and
pop
inc
sub
sub
in
push
or
xchg
popa
mov
out
push
ja
loopne
sbb
hlt
fwait
jmp
popa
es
testb
in
sbb
insb
nop
add
cld
or
fldt
cmc
pop
cmp
push
lahf
sub
ss
lret
adc
jne
pop
or
push
xor
test
int
sub
aam
mov
or
sub
lret
sbb
sbb
mov
ret
daa
lret
push
mov
into
mov
int
js
mov
in
movsl
or
push
jnp
push
xchg
push
dec
mov
sub
dec
loop,pn
lds
repz
sti
mov
inc
xchg
and
and
je
fwait
sahf
sbb
mov
pusha
hlt
cmc
sbb
iret
data16
adc
stos
fnsave
pop
inc
dec
sahf
sti
push
fcmovnb
and
lret
pop
stos
mov
das
jno
lds
mov
out
stos
xor
jp
insl
lret
sub
xor
sahf
mov
in
push
inc
xlat
les
jecxz
sub
in
hlt
aad
mov
cmp
or
xor
lcall
add
fstpt
dec
int3
loopne
cltd
cld
rcrl
cwtl
outsl
mov
cmpsl
nop
sbb
test
insb
jge
sub
gs
push
pusha
pop
das
mov
inc
push
adc
pop
xchg
int
or
xor
pushf
or
inc
in
rorl
addr16
dec
push
lods
xchg
popf
bound
loopne
call
push
fsubl
pop
adc
aaa
jle
push
fsts
iret
scas
bound
dec
jns
movsb
sahf
popa
xor
or
in
rorl
negb
dec
pop
test
pop
inc
push
data16
test
pop
or
sub
loope
fwait
pop
lds
lcall
outsl
call
and
and
xchg
pop
outsl
xchg
addr16
adc
mov
leave
leave
ja
push
push
inc
inc
or
or
rcrb
xor
jg
jbe
iret
push
test
and
mov
imul
out
adc
call
dec
cmc
js
pusha
pushf
outsl
adc
fwait
push
inc
test
loop
cltd
les
and
and
pop
lcall
ret
sub
gs
dec
daa
fldenv
and
sti
roll
into
aam
and
cmp
sbb
addl
sbb
sahf
sub
sbb
aad
in
push
pushf
aad
addl
sbb
out
jne
inc
ret
pop
out
pusha
jl
sarl
ljmp
mov
xchg
pop
in
pop
fidivs
mov
adc
mov
jle
dec
sbb
scas
jmp
pop
lret
cmp
das
xchg
jecxz
inc
aam
stos
test
fildll
or
sub
inc
xor
jg
lcall
and
xchg
add
aaa
out
out
cmp
jl
add
jmp
mov
inc
adc
in
xchg
aad
sbb
test
mov
nop
fisttps
mov
stc
sbb
mov
imul
mov
and
outsl
dec
and
xchg
inc
cmp
add
outsb
lea
in
or
roll
repnz
xchg
imul
movsl
pushf
mov
rolb
mov
int
pop
scas
push
pop
jg
sub
ret
out
mov
jp
jg
and
out
or
cmp
jle
adc
mov
icebp
sub
add
add
cmpsb
pop
mov
cmp
subb
inc
push
and
out
addb
ror
stos
fbld
andl
jne
jmp
test
cld
jne
rdmsr
xchg
fmull
in
ss
inc
pop
sbb
ss
xlat
lods
aad
add
cmp
fistl
pushf
into
cmpsl
dec
out
hlt
inc
aas
inc
lret
es
inc
adc
push
in
or
xchg
mov
pop
or
cli
into
xor
jae
pop
mov
cltd
sub
js
aas
rorl
mov
mov
dec
dec
std
pop
pusha
mov
push
add
inc
out
mov
andb
bound
xlat
jo
xchg
push
imul
jnp
mov
popf
stc
loopne
mov
daa
add
aam
aam
lds
outsl
jmp
sub
mov
stos
addr16
xchg
inc
push
adc
lods
jnp
fisttpll
jns
dec
ret
bound
loop
imul
out
mov
scas
hlt
sbb
sbb
xor
jne
mov
push
in
mov
or
jbe
jno
dec
cmp
sub
test
or
bound
or
insl
out
xchg
dec
iret
cs
scas
daa
dec
inc
jns
sub
out
int3
lret
lcall
jno
mov
push
nop
rclb
mov
mov
inc
rcrb
test
sub
xchg
cmp
mov
imul
into
addr16
cmpsl
stos
fcmovu
imul
xchg
out
adc
ret
sub
popa
cmpsl
mov
fs
or
pop
or
xor
stos
fldt
jb
popa
movsl
ror
pop
sub
dec
or
adc
mov
fnstenv
add
fstpl
xchg
rclb
fcmove
add
adcl
std
jns
test
or
test
popa
idivl
add
or
sub
sbb
push
fdivl
pop
test
repz
lea
roll
lock
xchg
sub
cmpxchg
and
pop
lahf
out
fwait
add
imull
movsl
ds
ljmp
push
js
test
and
push
fstpt
push
loope
dec
mov
pusha
sub
xchg
sub
push
pop
add
cmpsl
cmp
neg
mov
iret
stos
sub
pop
mov
inc
rcr
clc
inc
arpl
frstpm(287
in
or
enter
inc
ds
rcr
jp
fiaddl
scas
les
sub
xchg
stos
xchg
test
ss
pop
scas
aam
lret
xor
pop
add
and
adcb
in
push
jmp
jns
xor
fiadds
dec
xchg
jno
testl
rorb
mov
das
inc
pop
mov
in
adc
sbb
sub
dec
dec
bnd
jl
mov
xor
stc
dec
call
mov
shl
mov
xor
push
mov
and
lret
push
dec
mov
pop
jle
js
dec
sub
push
dec
popa
lods
call
jge
daa
aad
adc
xor
jle
jbe
cmp
jnp
unpcklps
fadds
ret
jl
pop
cltd
pop
adc
ljmp
sti
and
xor
clc
int3
call
xchg
xchg
dec
repnz
orl
pop
loope
outsb
xchg
pushf
xchg
pop
jge
arpl
sub
inc
push
popa
test
fisttpl
std
stos
xor
sbb
mov
bound
loopne
jmp
jmp
sub
jl
adc
je
movsb
pop
jge
ret
test
and
mov
scas
rol
mov
lahf
adc
add
mov
or
pushw
dec
stos
ds
push
dec
jg
aaa
daa
sbb
sbb
shrb
orl
mov
in
jo
adc
add
pop
inc
dec
lods
lcall
iret
inc
mov
jmp
andb
pop
xchg
shrd
push
pop
jle
dec
adc
jle
iret
dec
push
push
outsl
cs
xchg
dec
mov
inc
xchg
ret
push
inc
std
flds
ret
mov
dec
aam
inc
pusha
es
imul
and
sti
dec
mov
fldcw
push
lahf
and
push
xor
test
jmp
mov
adc
leave
imulb
idivb
dec
xchg
hlt
cmpl
adcb
push
dec
xchg
sub
and
add
cmpsw
xchg
sbb
movsl
jmp
inc
inc
int3
cmp
jb
loop
dec
pop
je
into
sub
pusha
testl
cmp
push
mov
in
es
and
jo
icebp
and
ja
inc
dec
cmp
sub
jno
scas
inc
sbb
lea
mov
cs
sti
mov
aam
nop
sahf
fmull
push
cmp
mov
push
xchg
xor
add
mov
pushfw
fstl
fwait
or
cmp
mov
enter
adc
xchg
or
shl
mov
xchg
add
push
pop
pop
inc
fs
jmp
push
mov
stc
lock
lcall
adc
sub
fisttpl
inc
lret
pop
ret
adc
ds
mov
jmp
cmpsl
in
stos
dec
mov
repnz
test
adcl
jmp
xor
ja
inc
mov
int
pop
adc
mov
xorb
ret
test
sbb
cmpsl
cwtl
sbbb
cmpsb
out
mov
lods
gs
mov
cmp
or
scas
push
mov
int
imul
jge
mov
mov
or
lahf
mov
fcom
fcomi
xor
xchg
loope
or
in
ds
mov
fstps
ret
sub
push
arpl
repnz
bound
loopne
jp
shrl
int3
mov
adc
inc
sbb
repnz
or
mov
xor
aaa
mov
xlat
mov
popf
sub
jae
shlb
mov
and
mov
push
clc
dec
shr
sbb
lea
shrl
jl
xchg
je
mov
fmul
or
pop
dec
aam
sbb
test
fmuls
stos
cmp
xchg
pop
mov
sahf
xchg
dec
adc
cld
lock
cmpsb
imul
faddl
jg
pusha
ds
inc
lds
movsl
mov
imul
or
xchg
or
jle
pop
ret
xchg
inc
adc
lret
outsb
pop
testb
cmp
sbb
or
and
stos
inc
packssdw
fcmovnb
jg
xchg
imul
xor
scas
stos
push
les
popa
cmp
cmp
adc
cmpsl
cmp
in
mov
add
enter
mov
mov
insb
fsts
and
xchg
nop
dec
ljmp
add
repz
mov
jmp
mov
out
pop
js
mov
xor
out
imul
mov
lock
iret
and
pushf
aad
sahf
shll
loop
js
pop
int
xchg
insb
loope
mov
add
push
add
add
andl
bound
xchg
js
daa
or
xlat
es
xchg
sbb
out
lds
cltd
push
dec
insw
mov
cmpsl
or
xchg
pusha
fiaddl
cmp
push
adc
mov
xchg
pop
adc
inc
enter
prefetchw
movsl
xor
add
mov
jne
sbb
dec
shlb
xchg
xchg
mov
in
dec
xlat
je
stos
add
push
pusha
pop
fcompl
xor
sub
sbb
cmp
rcrb
xor
fdivrp
inc
pop
sbb
xchg
mull
add
rcll
push
push
movsb
stos
aam
sbb
cmp
pop
adc
test
sub
repnz
add
insb
rorb
js
inc
mov
jnp
test
iret
mov
jmp
cs
stc
xchg
xchg
jmp
cmp
nop
daa
cmovbe
and
popa
mov
push
loopne
xor
orb
mov
mov
or
and
daa
outsl
sti
jmp
aam
mov
mov
iret
outsb
push
mov
jle
add
jnp
in
jae
inc
mov
das
push
daa
inc
ljmp
and
ds
movsb
xchg
add
xchg
out
push
xchg
inc
sub
sbb
hlt
cmp
cltd
roll
push
inc
fnsave
sbb
jg
sub
loopne
scas
xlat
xchg
neg
mov
push
fstpt
popf
add
jnp
xchg
test
cltd
inc
xor
outsl
jb
aam
cmp
push
lret
out
mov
mov
xchg
in
dec
xchg
mov
out
ljmp
jno
cwtl
pop
dec
xor
adc
outsb
mov
je
in
jne
popf
xor
cltd
fistpl
es
repz
and
lcall
ret
insb
js
jb
in
jno
aam
stos
movsb
mov
outsb
jle
dec
jno
sbb
pop
ror
inc
or
pop
rcr
sarl
repz
mov
repz
cld
sub
das
xchg
adc
and
mov
shll
pop
dec
icebp
call
mov
ljmp
je
xchg
jbe
xchg
pop
dec
dec
jns
mov
fcoms
idivl
inc
mov
sub
and
hlt
jnp
add
ret
loope
filds
test
xor
mov
insb
jne
or
mov
dec
jecxz
pop
mov
aas
lret
rorb
cmp
jmp
pop
data16
fildll
daa
dec
scas
xchg
mov
push
mov
std
cltd
das
movsl
vpunpckhwd
mov
pop
nop
mov
jecxz
and
push
jmp
cmp
inc
mov
mov
test
sub
hlt
stos
dec
mov
xchg
mov
daa
int3
mov
inc
popf
es
mov
inc
clc
mov
sbbb
fcmovbe
popf
sbb
dec
mov
inc
test
loop
adc
inc
cmp
leave
stc
xor
xchg
push
mov
cs
dec
sub
jae
sub
in
inc
rolb
jae
ret
ljmp
sbb
clc
sub
lahf
sarb
out
cmp
xchg
pop
sbb
adc
roll
mov
or
xorb
popa
hlt
xlat
add
outsl
sbb
cmp
inc
inc
push
adc
jg
dec
out
adc
sbb
andb
sbb
or
and
add
pop
outsb
ss
imul
hlt
dec
aaa
jns
aas
in
cwtl
xor
js
out
and
repz
dec
lret
sbb
int
rcll
mov
fnstcw
aad
aam
stc
cli
inc
sub
lods
insl
insb
cmp
push
test
dec
out
lds
fisttpll
mov
mov
loopne
das
test
sbb
jl
repz
xor
movsb
sarb
in
in
fbld
out
dec
shll
int
jg
push
add
dec
and
xlat
pop
les
mov
in
and
arpl
ds
inc
lods
jns
add
rcrb
xchg
pop
sbb
mov
insl
sub
popf
mov
cmpsb
stc
inc
scas
jl
xchg
das
push
lret
or
cli
imul
pop
sbb
stc
cmp
cs
or
inc
pop
push
sub
dec
jl
and
pop
adc
mov
dec
stos
jge
je
jbe
fdivl
enter
push
sbb
cli
adc
jo
insl
push
movsl
dec
enter
mov
test
and
rolb
sub
add
or
fisubl
cmp
notb
enter
sahf
cmp
insl
or
fcomp
lcall
xchg
add
fsubs
pop
and
imul
inc
push
shl
mov
xor
shl
jno
jo
and
enter
pop
cmp
call
fwait
push
sbb
push
jae
sub
mov
push
andl
dec
aaa
adc
call
and
test
xchg
fwait
out
aam
outsb
inc
repz
jge
mov
roll
mov
or
inc
mov
jge
mov
out
pop
sbb
or
jg
jae
or
out
jecxz
cmp
pop
and
cli
notl
mov
iret
neg
clc
enter
pop
cld
subb
and
insl
aaa
gs
push
idivl
ss
jmp
sub
sbb
xchg
push
enter
sub
pop
clc
mov
add
aas
xchg
outsl
aad
jecxz
adc
insl
push
inc
test
add
shll
aam
arpl
add
xchg
xor
test
add
mov
mov
push
bound
lods
sbb
push
xor
and
dec
rcll
sub
pop
cltd
enter
xor
js
inc
cld
sti
dec
int
andb
and
arpl
ficompl
loop
icebp
mov
dec
sbb
mov
jge
mov
push
in
sbbl
cli
and
lahf
js
scas
hlt
adcb
popf
ja
cmp
fdivrl
filds
hlt
xor
outsl
mov
sbb
call
addl
out
jne
mov
insb
add
jle
loop
add
stc
gs
push
rclb
push
shl
mov
cmp
mov
test
push
neg
data16
push
add
or
loopne
and
jecxz
rcll
out
shll
jecxz
lods
dec
push
rclb
btrl
das
pop
xchg
sbb
frstor
popf
out
mov
iret
fwait
mov
push
jnp
pushf
adcb
mov
lds
inc
push
mov
or
xor
and
dec
push
andl
adc
xor
xchg
mov
and
mov
in
pop
add
jmp
or
mov
popf
out
sbb
jg
pop
mov
or
movsl
movsl
orl
sub
cmp
push
scas
cmp
bnd
pop
sbb
subb
loopnew
add
pop
dec
push
test
and
add
pop
incl
mov
stc
pop
sbb
mov
ljmp
test
xlat
std
fbld
adc
test
hlt
jg
push
adc
xor
adc
mov
mov
push
fbstp
inc
inc
and
pop
testl
cwtl
and
dec
std
inc
xchg
ret
add
mov
pop
add
pusha
jae
lea
cmpsb
lahf
in
mov
xchg
dec
jle
imul
adc
push
clc
les
ljmp
or
cld
xchg
loop
cmpsl
push
cmpsl
xor
lods
enter
xor
imul
push
lods
mov
cltd
jg
rorb
inc
cltd
cmpsb
xlat
arpl
bound
test
push
dec
pop
mov
jmp
aad
into
push
inc
jne
and
insl
jle
outsl
in
ljmp
cmpsb
lret
test
lds
add
lahf
jge
or
jg
in
dec
xchg
mov
icebp
mov
jge
mov
and
int3
adc
and
or
cltd
mov
mov
jno
enter
adc
sbb
cmp
dec
or
mov
lock
mov
dec
shlb
dec
in
jns
and
xchg
out
ds
incl
xlat
fidivrs
cmp
add
xchg
jmp
inc
xchg
cmp
xchg
clc
mov
sub
in
mov
mov
iret
popf
push
jae
jl
daa
pop
ljmp
movsl
test
shlb
lret
mov
inc
das
movsl
and
add
dec
mov
es
mov
fwait
inc
adc
cmc
push
cmp
xor
test
and
lods
jg
js
push
test
int3
and
sbb
ret
fstpl
cwtl
or
pop
sub
sub
iret
lds
out
call
js
mov
mov
adc
jge
mov
push
adc
lods
ja
aam
mov
inc
jp
adc
sub
inc
add
test
pop
pop
push
cmpsl
stc
jmp
dec
xchg
out
cmp
jmp
push
test
jne
add
out
mov
cmp
add
lock
cs
xor
sbb
mov
cs
notb
cmpb
cmp
mov
push
cmc
movsl
les
imul
jae
sti
mov
mov
xchg
push
les
out
jg
cmpsb
or
pusha
lods
add
inc
mov
jae
rcll
das
divb
adc
xor
test
adc
sub
dec
or
test
inc
xchg
jo
pop
dec
outsl
testb
mov
int3
mov
lea
pop
repnz
xor
pop
jle
sbb
clc
fst
push
fidivl
or
xlat
lods
stos
dec
pop
sub
xor
mov
mov
pop
or
jbe
into
jo
mov
mov
mov
imulb
sahf
jge
jecxz
imul
mov
inc
or
and
jae
add
lods
xlat
pop
lret
repnz
setp
pop
xchg
add
push
dec
dec
mov
adc
out
jb
ret
cmpsb
outsb
loop
jb
mov
dec
and
cmp
push
iret
cltd
pop
in
inc
sbb
into
adc
popf
shll
jae
sub
or
lock
jmp
gs
and
inc
addb
jae
loop
mov
pop
pop
push
movsl
test
mov
or
dec
sbb
cmpsb
inc
mov
sbb
aas
pusha
push
mov
xor
add
push
mov
pop
cmpsb
xor
pop
lds
nop
inc
clc
adc
test
dec
sar
in
mov
xor
movsb
dec
gs
dec
cmpsl
inc
pop
sub
add
ds
repz
enter
adc
push
inc
test
movsb
js
pop
dec
add
xor
pop
xor
xchg
out
out
inc
push
addr16
mov
imul
das
jne
je
sub
inc
jbe
dec
inc
cmpl
ret
aad
add
dec
inc
mov
sbb
xchg
mov
cs
lods
les
lcall
jbe
popf
aaa
jp
jne
xor
in
cmc
add
jnp
xchg
xchg
ret
xchg
or
pop
pop
add
stos
notl
int3
pop
bound
mov
jp
adc
add
arpl
movl
cmp
out
orb
stos
sub
stc
roll
jmp
movsb
xchg
ret
jg
xor
jbe
add
sbb
mov
lahf
popa
getsec
sbb
push
or
ffreep
mov
and
and
or
imul
push
inc
imul
in
sbb
push
stos
into
sub
inc
push
push
mov
out
cmp
xlat
ror
jle
dec
ja
jecxz,pn
mov
cmp
js
mov
fwait
leave
lock
decl
add
out
leave
sub
scas
inc
sbb
xchg
xchg
lret
push
imull
stc
lahf
pop
rorl
pop
aaa
aam
mov
mov
sub
movsb
mov
nop
jbe
fwait
aam
cmp
rorb
cmp
shlb
add
je
cs
push
sbb
xchg
fisubl
or
icebp
pop
subl
inc
jge
ljmp
inc
mov
push
idiv
xchg
mov
ja
dec
sub
lock
mov
fldenv
mov
dec
push
lret
inc
dec
xchg
jge
out
jl
jno
outsb
and
repz
sti
mov
jge
mov
dec
or
pop
sbb
out
mov
bswap
mov
into
push
fbld
xchg
dec
xor
movsl
mov
adc
pop
rolb
fimull
or
movsb
fstps
mov
push
shrl
or
mov
ret
notl
lods
xchg
loope
jne
pop
xchg
les
adc
outsb
xchg
mov
leave
sub
loop
in
sti
outsl
mov
push
insl
loopne
pop
popa
lods
add
enter
jge,pn
nop
sub
in
repz
push
xchg
jae
mov
sete
mov
and
xor
int3
jmp
inc
push
xchg
lahf
ds
sbb
gs
stos
push
or
sti
in
or
jg
lahf
push
stos
pushf
movsl
cld
jle
nop
jmp
test
lret
xor
popa
les
inc
adc
jb
cltd
xchg
sbbl
xchg
mov
jbe
xor
sahf
int
push
out
bound
cmp
js
es
fiadds
pusha
cmpb
test
pusha
mov
inc
sub
test
xchg
xchg
cmpsb
pop
test
hlt
fists
or
imulb
sub
pop
pop
out
jge
insl
fsubrl
shlb
loop
sbb
fsubrl
fildl
xor
int
jp
insl
sbbl
sbb
into
dec
int
pop
je
das
movsb
test
imulb
mov
lcall
mov
das
in
dec
jmp
jb
pushf
push
sbb
sti
shll
mov
push
pop
xchg
add
mov
dec
sbb
sahf
lods
fwait
and
pop
sarb
out
lods
movl
push
xchg
adc
ficompl
mov
cmp
test
xchg
xchg
sbb
mov
ret
nop
xchg
imul
push
lret
cmp
in
xlat
movsb
aad
test
xor
stc
dec
idivl
lcall
cli
push
mov
daa
inc
movsl
outsl
lahf
jp
mov
push
pop
cltd
sub
addr16
cmp
std
inc
leave
outsb
lock
and
add
in
xchg
mov
lahf
add
out
adcl
sbb
pop
loopne
pushf
call
push
adc
arpl
xchg
test
nop
push
mov
cmp
stos
mov
movsl
mov
gs
or
je
push
divb
call
push
sub
sub
in
scas
push
mov
scas
jns
mov
arpl
imul
lock
in
push
sbb
fidivrl
mov
or
arpl
loope
dec
mov
aas
cmpsl
pop
push
sub
cmpsb
mov
fsts
mov
pop
scas
mov
add
leave
daa
fnstcw
outsb
cwtl
pop
into
adc
sbb
enter
ud1
rclb
lds
jp
scas
adc
mov
aaa
sbb
lds
iret
xchg
call
bound
cld
int
leave
insl
hlt
xor
push
mov
cmp
insl
in
sti
mov
pushf
jp
cltd
jge
leave
in
lret
jl
sarl
mov
lahf
jb
fs
push
dec
or
mov
subl
and
push
push
add
push
arpl
outsl
sti
jo
jg
dec
or
xchg
test
fisttps
inc
jle
sahf
dec
mov
iret
loope
gs
jno
bnd
lods
das
inc
sarl
mov
or
lods
cmp
pop
test
aam
rorb
lret
clc
into
jae
es
notl
and
lcall
dec
mov
sbb
mov
add
out
out
xchg
insb
shlb
pop
xchg
bound
std
add
sbb
mov
popa
adcl
iret
xchg
pop
int3
ret
pop
lock
stos
repnz
add
orps
jle
pop
add
jle
out
int
mov
cwtl
stc
int3
jl
aad
cmpsl
insl
das
add
arpl
stos
mov
fcoms
daa
sahf
cmp
mov
jbe
rolb
xor
sub
scas
inc
imul
add
fcomps
es
push
iret
sahf
lcall
mov
adc
fsts
xchg
aas
or
jmp
and
scas
push
add
test
jno
inc
jl
push
stos
push
add
inc
xor
mov
pop
jge
addr16
mov
mov
sbb
ljmp
in
pop
arpl
out
lret
pop
xor
mov
pop
xor
clc
rcll
jb
test
dec
mov
lcall
out
jl
adc
lock
lds
inc
jne
sub
add
pusha
stc
mov
inc
lds
and
out
inc
cmc
mov
sub
cmp
cli
mov
in
es
mov
sbb
xchg
sbb
wbinvd
or
sub
ret
dec
adc
imul
pop
mov
mov
push
loop
std
shll
mov
lahf
orl
push
insl
out
xor
mov
cwtl
dec
addr16
lods
push
jle
mov
pop
out
enter
pop
lods
negb
movsb
fadds
aaa
pop
arpl
adc
cmp
pop
test
cld
lret
adc
cltd
in
xor
mov
fwait
ljmp
fidivrl
imul
cwtl
push
add
lret
pop
cmp
and
pop
mov
pop
pusha
fisubrs
xor
fisubrs
dec
decl
insl
dec
and
jnp
out
dec
push
xor
xchg
scas
aas
cli
insb
ret
js
jecxz
adc
push
jae
jae
rorb
nop
rorb
js
jle
cli
or
lea
xchg
adc
out
rorb
ficomps
insb
pop
rolb
imul
cwtl
mov
repnz
push
in
inc
inc
inc
popf
push
dec
xchg
push
lea
cmp
loope
int3
push
mov
pushf
mov
xchg
xchg
xchg
in
inc
mov
dec
imul
gs
jne
sti
and
sbb
enter
xor
mov
and
sbb
and
push
adc
out
jge
xchg
fmul
cmpsl
sti
sub
mov
andb
adcl
outsl
sbb
ret
popa
ja
add
sarl
xlat
sarb
mov
sub
push
scas
push
imul
fsubrs
daa
stc
adcl
or
sub
ss
xchg
das
jle
mov
dec
pop
mov
push
cltd
inc
test
leave
cli
sub
xor
push
inc
mov
cmp
fcmovnbe
sub
dec
push
jae
call
inc
jo
imulb
push
push
lret
dec
outsl
test
jno
ja
jg
ret
imul
cmp
adc
xchg
mov
mov
xchg
repnz
inc
push
mov
inc
xchg
cmc
shrb
sub
shll
cmp
adc
lcall
aas
inc
cmpsb
rol
insl
xchg
jge
jo
into
cmp
ficoml
pop
adc
mov
je
jbe
cld
rolb
insb
ret
leave
dec
adc
data16
cmpsl
imull
push
ljmp
adc
ds
xor
adc
sub
xchg
stc
mov
out
mov
inc
mov
int3
sub
push
adc
mov
pop
dec
subb
dec
imul
or
shlb
aam
add
imull
incb
daa
orb
push
mov
cltd
dec
dec
pop
sub
je
adc
shlb
notb
mov
push
xchg
and
or
mov
repz
xchg
gs
out
mov
mov
stos
pop
jbe
inc
dec
test
inc
in
fcoms
loope
or
lahf
add
push
fsubl
sbb
ficompl
mov
div
insb
insb
lret
aas
leave
push
aaa
push
xchg
pop
mov
push
fnstsw
cmp
push
cmc
aaa
jo
loop
aad
jmp
aas
add
cmp
cmp
loopne
pop
cmpsb
mov
orl
addr16
int3
xchg
pop
ficoml
pop
testb
push
mov
mov
lds
push
aad
inc
xor
jnp
sti
dec
xchg
xchg
fld
fcomps
pop
fidivrl
mov
aas
fisubrs
bound
push
fbld
lock
cmc
ds
pop
int
mov
outsb
or
mov
dec
xor
daa
jmp
nop
stos
xchg
or
xchg
jge
mov
dec
push
jnp
jle
sub
push
mov
jle
cmp
sbb
movsl
sti
daa
jl
and
push
and
mov
ljmp
xchg
inc
movsl
popa
stos
arpl
arpl
push
push
push
repz
mov
pusha
test
mov
pop
pop
pop
dec
mov
bnd
cmpsl
xchg
lret
pop
jne
pop
add
inc
cmp
imul
and
lock
jmp
ret
arpl
ljmp
xlat
mov
jns
pop
mov
test
push
cld
xor
xor
insl
in
sub
repnz
jmp
mov
dec
cs
movsl
dec
insl
or
sbb
in
mov
inc
mov
xchg
bound
orb
push
stos
add
mov
push
jbe
decb
enter
daa
mov
clc
dec
pop
sahf
mov
flds
mov
pusha
sub
dec
push
inc
enter
xchg
xchg
shll
cwtl
mov
in
pop
adc
sub
mov
icebp
cmp
cmp
in
inc
fadds
and
or
rorb
push
jb
mov
or
not
dec
fwait
nop
ret
lea
je
rol
pushf
call
test
adc
pop
jae
dec
xchg
jp
aam
mov
fs
insb
or
cmpsb
dec
mov
dec
gs
push
or
jb
sbbl
sti
leave
cmp
add
lds
add
xchg
je
call
aaa
outsb
adc
sub
dec
ja
add
ja
inc
movsb
lock
loop
ljmp
xor
or
pop
fsts
ret
lret
out
daa
xchg
call
sbb
icebp
lahf
dec
cmp
arpl
cmp
dec
cmpsb
or
xchg
mov
inc
aad
mov
fisubl
jl
aam
jno
mov
lahf
dec
in
sbb
mov
pop
ss
popf
add
jmp
outsl
insb
std
ss
push
xchg
cmc
jnp
ljmp
sbb
push
mov
repz
cmpsb
int
mov
dec
dec
fadd
add
rorl
push
std
pop
sub
rcr
xchg
xchg
cmp
icebp
xchg
push
lock
cmp
fisubl
mov
sub
cwtl
cld
fbstp
mov
lds
xchg
int3
sub
lcall
sbb
sub
ja
adc
pop
mov
mov
jge
or
mov
ljmp
ds
popa
inc
out
mov
bound
sbb
xchg
test
jge
cmpsb
or
push
or
mov
das
push
fwait
push
sbb
mov
int
adc
jecxz
mov
push
and
push
xchg
rorl
jae
loop
xchg
cmp
es
dec
inc
push
dec
cltd
xor
mov
xlat
and
je
sub
fisttps
cmp
gs
push
sub
add
sbb
int
shrl
xor
cmc
push
nop
rcrb
jo
les
sti
test
mov
movsl
ds
in
out
mov
pop
jnp
mov
mov
xor
in
and
inc
jg
les
aad
out
sub
sub
loope
inc
sub
inc
out
jmp
sub
enter
lret
jmp
xchg
rorl
adc
push
ljmp
inc
cmpsb
mov
cmpsl
xlat
pop
sti
int3
fisttps
push
add
dec
mov
popf
sub
sub
mov
outsl
mov
inc
add
sbb
xor
pusha
dec
add
adc
add
icebp
and
call
xor
aas
dec
xor
ja
adc
pop
out
jae
lods
push
sub
imull
mov
imul
add
add
or
gs
fadd
dec
xor
push
in
pop
push
mov
xor
aad
pop
and
xor
inc
sub
xorb
dec
jbe
scas
xchg
imul
jmp
sbb
adc
rcrl
or
hlt
or
mov
rcrb
xor
mov
push
call
mov
and
sbb
in
shl
mov
inc
adc
push
popf
xchg
sbb
pop
cmp
lcall
mov
add
push
sar
flds
adc
mov
ds
or
jp
cmpsb
xchg
mov
in
mov
inc
loope
xor
mov
xchg
adc
cs
sti
or
out
dec
sbb
push
mov
dec
dec
ret
test
dec
push
fidivrl
jne
pusha
inc
enter
jnp
ljmp
pop
je
mov
mov
pop
jmp
push
sbb
fldl
push
push
adc
aas
add
or
add
mov
mov
roll
xor
gs
push
out
push
mov
cwtl
push
mov
jmp
test
lret
imul
inc
sub
repnz
or
xchg
andb
jne
das
mov
pusha
ss
pop
mov
adc
dec
test
inc
fwait
mov
mov
push
mov
dec
imul
add
cmpsb
push
add
inc
mov
dec
mov
lods
cld
stos
enter
add
push
jne
popf
or
divb
mov
push
loopne
mov
pushf
pop
adc
pop
fwait
cmp
orl
gs
xchg
sub
push
hlt
mov
iret
sub
push
jbe
inc
and
push
push
cli
cmpsb
lret
cltd
notl
dec
jge
out
add
xor
mov
push
xchg
or
negl
xchg
cmp
aas
sbb
out
inc
and
sbb
aas
pusha
cli
aaa
std
stc
push
stc
and
into
jg
clc
jo
mov
jae
pop
add
sub
adc
inc
bound
push
psadbw
mov
or
push
je,pn
and
jp
adc
popa
inc
jle
stc
movsb
fucomi
mov
pop
and
xor
loopne
jle
jbe
mov
add
movsl
xchg
mov
neg
pop
les
inc
leave
out
dec
aam
pop
movsb
push
out
cmp
ficompl
leave
dec
push
mov
cmpsb
flds
push
cmp
scas
add
fildl
mov
push
mov
cmp
xchg
ss
dec
pop
test
xchg
add
push
ret
call
loope
out
xchg
pop
pop
and
ja
xor
or
out
test
mov
xchg
xchg
int
faddl
lahf
loop
dec
push
pop
pop
mov
outsb
ds
scas
cld
cld
xor
mov
dec
xlat
std
xlat
jmp
lds
iret
adc
leave
cmpsb
rcrl
xchg
leave
mov
add
es
mov
push
ss
push
fdivr
pop
arpl
outsb
dec
adc
mov
pop
test
pop
and
pop
insl
sbb
test
dec
mov
xlat
mov
test
lods
and
and
dec
mov
aam
fsubl
push
clc
sti
shl
mov
push
xchg
mov
scas
push
lds
push
jne
sbb
push
roll
rorl
mov
roll
ds
push
push
adcb
std
in
roll
sbb
cmp
add
jnp
xchg
push
mov
scas
jmp
mov
popf
cmp
pop
stos
leave
mov
jbe
mov
push
je
mov
mov
loop
jmp
mov
sbb
lret
lock
lds
arpl
add
movb
nop
mov
pop
cmp
inc
aas
jl
in
xor
std
cmp
add
jl
mov
and
ja
lret
daa
and
outsl
cmpsl
je
sbb
pusha
out
jmp
jg
pop
adcl
pop
ficoml
cmp
add
dec
sbb
popa
push
pop
sub
test
mov
and
mov
lds
jb
je
jp
cld
aaa
push
xor
stc
mov
scas
clc
sbb
js
xchg
add
lcall
push
aad
or
or
pop
daa
sub
xchg
inc
fmull
pop
cmc
sub
out
fcomps
mov
or
inc
mov
ljmp
cmp
mov
jmp
test
pop
ja
int
in
pop
scas
clc
shl
ss
mov
cmc
pop
dec
sbb
push
testl
and
dec
enter
hlt
push
jmp
cwtl
push
mov
lds
dec
std
pop
xchg
jne
push
es
cmc
fstpt
fdivrp
dec
add
xchg
push
dec
xchg
in
outsb
in
test
cmp
adc
xor
cld
in
rorl
in
inc
std
adc
cli
icebp
sub
dec
js
mov
dec
sub
bound
mov
aaa
sub
pop
cmpsb
movsl
lock
inc
addr16
rol
pop
es
push
jb
cwtl
jp
mov
push
out
dec
xor
in
pop
fsts
movsl
mov
cmpsl
ret
adc
pop
pusha
shr
das
rorl
xor
call
add
adc
xchg
push
xor
jle
test
pushf
sub
pop
adc
icebp
mov
mov
rorb
sbb
sti
into
xchg
divps
sub
popa
sub
lea
pusha
movsb
loope
es
sub
jmp
add
dec
mov
test
jp
sti
out
pop
scas
imul
cmp
rcrb
xchg
das
addr16
push
cld
xor
cmp
and
cmp
mov
mov
lock
adc
push
adcl
jno
loop
sub
daa
and
aad
shll
sub
push
push
sbb
stos
pop
cmc
sbb
adc
xchg
aaa
sub
mov
mov
push
imul
popa
pop
popa
lret
xor
bound
jnp
push
lock
fdivr
dec
push
lahf
shlb
je
ds
or
mov
xor
sub
cli
or
cmc
mov
jns
loope
cmp
xchg
sub
or
in
mov
mov
insb
jae
loope
mov
mov
arpl
mov
lods
mov
jmp
xchg
push
mov
fsts
add
push
in
out
imul
xchg
mov
push
adc
out
jne
scas
and
mov
stos
or
addr16
sbb
inc
pop
test
aaa
addr16
mov
ss
adcl
xchg
sbb
je
mov
inc
sahf
cmp
push
jnp
dec
movsl
dec
push
mov
std
jb
dec
mov
mov
call
out
or
add
out
and
insl
data16
jmp
lods
and
adc
xchg
cmpb
pop
jge
fidivs
js
dec
push
leave
ds
imul
push
fiaddl
flds
in
test
into
adc
test
jo
xor
sub
inc
je
test
jge
mov
roll
cmp
cmpsl
dec
mov
js
in
icebp
mov
xchg
cwtl
in
popf
pop
sbb
pop
pop
adc
iret
and
daa
jae
mov
add
lds
add
aas
xchg
xlat
mov
xchg
stc
pop
add
jnp
test
fistps
xchg
iret
mov
ret
mov
push
in
mov
gs
sbb
sbbb
test
out
test
lahf
jp
in
divl
push
aad
adc
iret
loope
xchg
xchg
popa
mov
std
mov
push
or
xor
insb
xor
mov
pop
jge
cwtl
out
data16
jae
insb
loope
adc
roll
xorl
leave
sbb
push
dec
mov
sbb
jge
mov
or
xchg
pop
repz
xchg
jle
sti
cmpsb
int3
mov
out
pop
inc
or
mov
jno
ja
out
push
mov
fmull
mov
leave
aad
lock
shlb
inc
jns
jmp
sarl
inc
pop
xchg
jle
dec
mov
sub
ds
rorb
pop
sbb
adc
out
xor
fstl
and
outsl
pop
ljmp
pushf
fs
inc
jno
lods
inc
cmp
sbb
in
fsubs
leave
xchg
pop
lret
popa
sbb
int
out
ljmp
cli
loopne
data16
mov
pop
sbb
xchg
add
mov
in
jp
insb
rorb
insl
hlt
mov
jbe
dec
movups
lea
shrb
lods
add
ja
push
jb
outsb
push
mov
push
ss
imul
jmp
movsl
pop
lds
sbb
or
loope
test
cmpsb
icebp
xor
cmp
lock
dec
inc
inc
push
out
dec
push
fnstenv
cmp
sbb
pop
les
les
iret
jecxz
jno
or
outsl
adc
jne
stos
mov
mov
and
cmpsl
xchg
aaa
push
jae
jo
ret
out
xchg
fwait
mov
outsl
js
adc
mov
mov
call
data16
push
icebp
dec
add
xchg
pop
fs
sbb
xchg
pop
cmp
test
cwtl
push
pushf
shrl
out
inc
in
notb
imul
pcmpeqb
xor
in
inc
pop
push
xor
fs
sarb
cli
mov
xchg
fwait
ljmp
imulb
sub
sbb
jl
or
add
push
ss
incb
pop
loop
push
mov
inc
and
das
dec
lret
hlt
jnp
subl
arpl
pop
daa
shlb
fiadds
pushf
bound
xlat
out
dec
pushf
xor
ficoms
nop
insb
lahf
sub
pop
inc
pop
movl
adc
jne
or
jnp
loopne
inc
ljmp
iret
iret
out
mov
adc
cltd
imul
idivl
cwtl
mov
and
adc
test
pop
and
repnz
movsb
dec
ja,pt
cmp
lods
jne
sub
cmp
je
addl
aam
pushf
scas
mov
pop
fdivrl
icebp
mov
shrl
test
cmpsl
push
xlat
popa
inc
nop
push
arpl
out
xorl
dec
or
fiaddl
push
gs
add
dec
ss
push
das
call
rorl
mov
lcall
add
dec
aad
jno
sub
adc
cmc
bnd
imul
rorb
mov
dec
jl
cltd
add
in
out
fwait
iret
in
pop
ficompl
push
or
bound
imul
adc
sti
test
dec
repnz
add
xchg
cmp
jmp
negl
lods
sub
push
dec
loope,pt
stos
pop
adc
dec
mov
jne
xchg
jae
mov
mov
and
pop
push
mov
xchg
rorb
mov
gs
pop
xor
lds
fldcw
fbld
xchg
lahf
inc
scas
sbb
repnz
sbb
cmp
pushf
adc
mov
jp
pushf
test
ds
xchg
mov
sub
sbb
cwtl
repz
int
scas
sbb
mov
dec
push
repnz
imul
xchg
cmpb
insb
jmp
int3
lahf
std
and
daa
jne
stc
in
ret
inc
mov
jl
dec
and
push
mov
mov
mov
shl
lds
sub
cmc
mov
add
dec
pop
dec
jl
adc
dec
imul
loopne
lods
sbbb
or
inc
sbb
mov
jae
cmp
mov
scas
lahf
aas
push
pop
xor
xchg
ljmp
and
roll
ret
inc
call
or
adc
fsubr
or
rcll
mov
inc
testb
inc
mov
and
call
add
push
cmp
pop
aas
rcrl
mov
xchg
mov
loope
icebp
jp
ljmp
pop
xor
repnz
fnstcw
push
xor
imul
cltd
jo
orl
imul
inc
pusha
bound
jl
mov
imul
mov
pop
sahf
out
xchg
xchg
adc
mov
or
lock
aad
aas
nop
test
in
mov
repnz
push
aam
mov
push
mov
insl
pop
roll
pop
jp
stc
aaa
fs
or
jecxz
jle
xchg
jmp
add
sbb
xor
mov
xchg
jp
cmp
xchg
leave
nop
in
pushf
mulb
or
mov
mov
aad
cmc
loope
cmp
out
add
shrl
mov
inc
jae
loope
rep
add
enter
sbb
sub
jno
push
sub
stmxcsr
idivl
and
ret
adc
sub
adc
jno
mov
inc
mov
push
insl
or
pop
push
xchg
dec
xchg
inc
rorl
pop
pop
fildl
sub
mov
out
lcall
mov
daa
mov
ss
and
imul
xchg
out
or
ret
lret
sub
cli
imul
dec
scas
sti
clc
or
inc
icebp
insl
push
xchg
push
mov
pop
cmpsb
in
and
xchg
jle
and
adc
adc
dec
inc
shlb
not
repz
arpl
jno
hlt
rcll
cld
pop
shlb
jno
jae,pn
lret
sub
addr16
push
adc
movsl
adc
mov
loope
out
jecxz
pop
insb
xchg
pop
push
mov
test
cmp
lret
jg
add
add
xor
push
in
ljmp
sbb
mov
mov
xchg
xchg
stc
jbe
mov
dec
insl
xor
jmp
sbb
mov
lcall
jmp
dec
xchg
cwtl
push
lods
adc
scas
test
cld
es
mov
xor
inc
int
cmp
push
ss
fwait
xor
cli
and
into
inc
fimull
or
pop
jns
icebp
xchg
ljmp
push
pop
repnz
idivl
call
pop
jmp
mov
in
bound
sub
xchg
mov
push
mov
sbb
andl
and
hlt
sbb
dec
sahf
lahf
mov
movsb
fsts
pop
cmpl
dec
cwtl
xchg
ret
outsl
or
je
adc
push
xorl
cmp
jecxz
pop
loop
pop
pop
adc
dec
mov
pop
xchg
shll
aam
or
pop
and
rcll
dec
pusha
pushf
jbe
sub
xchg
test
aad
pop
or
sti
dec
mov
mov
pop
jo
xchg
mov
xorb
push
push
int3
lods
stos
dec
mov
inc
xlat
mov
adc
fwait
into
movb
sbb
mov
or
test
insb
dec
sbb
mov
pop
sahf
repz
push
je
push
adcb
mov
lret
cmp
clc
inc
jo
stos
ret
dec
in
dec
bound
inc
out
xchg
push
xchg
movsl
inc
pop
aam
inc
push
aas
pop
mulb
push
test
xchg
lahf
int
fwait
inc
cmc
jae
sbb
dec
fidivs
mov
xchg
dec
jle
in
jb
pop
adc
je
xchg
xchg
and
fistps
inc
clc
dec
call
fiadds
ds
leave
xor
addl
jge
call
add
or
lcall
clc
lcall
inc
adc
inc
and
mov
pop
mov
lds
jne
movsb
pop
sahf
into
shll
jns
push
mov
inc
adc
add
xchg
out
or
push
jp
out
popf
mov
or
imul
xor
and
pusha
and
jecxz
jne
xor
adc
pop
out
daa
xor
dec
lea
int3
ss
or
mov
loopne
jbe
jmp
int
lret
or
pushf
in
dec
fistpll
ljmp
and
mov
mov
and
xchg
lods
cli
mov
addl
test
nop
inc
inc
pop
sub
loopne
cwtl
cltd
pushf
pop
je
out
xor
negl
in
pop
jbe
ret
mov
es
scas
int
test
sub
sbb
sti
add
das
mov
mull
test
mov
or
je
scas
shlb
es
jp
add
mov
out
shll
cmpsl
aam
repnz
leave
and
imul
mov
cmpsl
inc
mov
rorl
add
fldt
stos
in
dec
sbbl
mov
loopne
pop
loope
add
xchg
imul
out
hlt
idivl
invd
aad
dec
pop
int
jl
dec
mov
sbb
nop
fnsave
adcb
insb
repz
jle
fwait
jmp
xchg
cmp
jae
mov
mov
lods
xchg
mov
pop
dec
push
mov
sbb
cs
add
cld
imul
mov
push
lock
sbb
in
xchg
repnz
into
adc
imul
decl
sub
pop
ret
lea
xor
pusha
pop
in
pop
ficompl
cld
pop
popa
adc
es
pop
cmp
jno
and
out
xor
push
test
outsl
int3
sub
scas
shrl
cmpsb
inc
bound
jno
mov
pop
sbb
sti
push
pop
test
jo
test
lret
out
mov
cmc
pop
pop
ss
dec
ficomps
sub
pop
rorb
add
push
outsl
add
xor
push
cli
ret
repnz
dec
cmp
jle
fsubs
loop
fldl
push
adc
dec
sahf
sub
dec
pop
cmpsl
push
out
test
int3
aas
adc
push
fs
xor
and
ror
lods
mov
mov
fwait
cmp
fdiv
push
mov
push
add
xor
gs
rcrb
cmp
cmp
or
or
fs
es
push
push
push
lock
push
cld
mov
addr16
int
fwait
jnp
jg
ja
fcom
push
mov
mov
pop
loop
in
push
adc
xchg
aaa
hlt
mov
fcmovne
jmp
jnp
adc
push
mov
js
test
jb
mov
sbb
add
mov
hlt
mov
lahf
jnp
ret
jge
movhps
add
cld
cwtl
or
cmp
push
adc
pop
enter
pop
pushf
int
in
icebp
ja
jmp
add
movsb
sbb
pop
mov
in
ret
cwtl
arpl
sbb
add
xchg
shrl
shrl
addr16
rcrb
jg
cmpsb
xchg
icebp
vpsraw
push
jnp
aas
lcall
mov
xchg
mov
and
mov
inc
test
divb
xchg
jge
testl
xor
hlt
hlt
mov
jp
roll
pusha
inc
cwtl
push
inc
pop
jge
jnp
mov
xor
cs
loop
lock
mov
push
movsl
jbe
frstor
xchg
jns
dec
js
nop
mov
aam
xchg
les
call
inc
stos
dec
pop
lret
movsb
mov
lea
mov
pop
and
push
or
dec
and
lods
into
stc
add
mov
xlat
rcr
pop
in
lahf
mov
jbe
cmpl
jmp
mov
push
inc
fidivl
lds
cs
push
das
mov
daa
sub
ss
xchg
jmp
or
dec
arpl
stos
sbb
sti
push
lock
jl
movsb
shl
jb
push
shrb
inc
je
pop
push
inc
cmpsb
dec
push
rcrl
insl
cld
not
adc
lea
xchg
inc
bound
rol
push
mov
pop
jae
inc
inc
in
jbe
xchg
jp
shll
jmp
push
jb
test
dec
pop
daa
ja
nop
out
imul
in
dec
ret
fcmovb
sub
in
dec
fidivs
sbb
push
in
and
cmp
push
xlat
xchg
dec
sti
int3
mov
lret
out
frstor
or
mov
jnp
imul
jo
loope
push
push
inc
xlat
popf
insb
negl
push
les
cmp
popa
add
je
fbstp
mov
and
pushf
cmp
sub
cmc
cmpsl
pop
xchg
pop
test
fisttpl
imul
arpl
das
inc
mov
sbbb
jge
adcb
aaa
fwait
test
push
std
push
jmp
cwtl
je
pop
fmull
filds
mov
jne
es
pop
subb
jg
cld
dec
cmp
add
xchg
inc
pop
insb
fistpll
enter
bound
mov
mov
popf
jmp
ja
dec
dec
jp
lahf
aas
jmp
inc
and
xchg
aas
mov
enter
shrl
test
cmc
lea
add
jmp
mulb
lods
repnz
movsl
fists
inc
sahf
popa
sbb
iret
sbb
sbb
pop
sub
cltd
inc
cmp
cmp
fbstp
nop/reserved
stos
xor
scas
jge
sti
in
inc
fisttps
popa
mov
mov
inc
jne
nop
sbb
dec
mov
or
mov
dec
cmp
and
pop
andl
and
movsb
add
inc
lods
xchg
push
push
lahf
movsl
inc
pop
xchg
lea
adc
mov
pop
js,pn
jl
push
bound
std
or
popf
pop
lock
in
mov
adc
or
pop
jne
jge
in
das
sub
lahf
pop
cli
nop
add
in
cmp
push
lds
aam
adc
sub
rcl
adc
das
xor
das
sbb
inc
lahf
mov
ret
popf
pop
idivl
icebp
or
or
jp
or
cmpsl
jnp
inc
mov
movsb
inc
test
loope
mov
and
or
pop
in
stos
pop
pop
xor
dec
sti
add
subl
in
hlt
cld
pop
roll
popa
dec
mov
pop
in
pop
push
mov
adc
ret
push
aam
xchg
loopne
out
inc
inc
inc
ljmp
mov
lods
xor
xchg
xorl
inc
push
xor
xchg
in
push
mov
scas
push
adc
jne
and
fcomps
mov
add
mov
in
imul
ja
sbb
jg
push
test
fs
orl
jae
mov
xlat
gs
pop
cltd
lret
frstor
lcall
hlt
cli
ret
cmpsb
lcall
xchg
jno
lahf
jle
ret
mov
lahf
inc
or
gs
xchg
mov
jne
jne
in
pop
xorb
fs
leave
push
push
or
sub
lock
mov
or
fucomi
inc
add
and
ss
mov
push
sarb
lea
cld
insb
popf
fcomps
lods
add
cwtl
dec
aaa
adc
dec
in
shll
call
inc
aam
jns,pn
and
push
sbb
arpl
ret
mov
mov
int3
gs
scas
shl
push
loope
inc
mov
add
jbe
shll
out
jmp
pop
push
mov
int3
jp
push
lahf
mov
ss
flds
fstl
loop
mov
out
aam
jno
mov
jae
loop
jne
cmp
dec
fs
xchg
pop
data16
arpl
stos
pushf
jae
add
xchg
mov
or
insl
outsl
xor
or
arpl
jge
test
loopne
xchg
add
dec
lock
xchg
scas
sbb
cltd
sbb
mov
leave
out
outsl
cwtl
popf
lods
stos
cmpsb
sub
xchg
jno
in
repnz
pop
mov
cmp
int3
fildl
fprem
int
sub
mov
shr
notl
movsb
push
repnz
mov
imul
or
daa
add
test
faddl
cmp
jns
or
adc
xor
ficomps
cmpsb
inc
in
int3
in
ss
mov
mov
jmp
xor
mov
pop
cltd
sbb
cs
out
and
pop
dec
subps
cmc
pop
mov
insl
xor
jp
mov
lock
aam
mov
push
xchg
mov
out
mov
jp
inc
push
dec
setge
jmp
cltd
mov
cltd
loopne
jp
mov
jo
lret
mov
ljmp
cmp
outsb
mov
adc
arpl
out
add
lods
pop
clc
mov
stos
aaa
dec
mov
imul
cmp
inc
and
inc
arpl
inc
shrl
mov
jecxz
lret
ficomps
leave
mov
dec
inc
or
ret
jnp
jmp
dec
xorl
addb
xchg
mov
xor
sub
hlt
dec
jno
addb
mov
push
pop
jmp
cmp
popa
out
push
pop
dec
fsubp
cs
std
mov
inc
test
jnp
pop
sti
dec
mov
and
or
add
mov
add
or
int
repz
dec
mov
or
and
imul
inc
mov
cwtl
cmc
sarl
mov
xchg
jno
sub
sti
and
jnp
fs
std
fmul
int
mov
sbb
imul
not
xor
lcall
and
fbld
ficoms
nop
cmp
xlat
or
pop
or
imul
adc
pop
and
aas
dec
mov
xchg
push
pop
in
cmpsl
or
movsl
xchg
data16
or
cmp
aad
addl
popa
xor
or
icebp
mov
mov
stos
call
jbe
les
movsb
inc
loopne
cli
fcoml
repnz
lcall
push
sbb
mov
in
retw
es
xchg
mov
cmpsl
rorl
aam
in
stos
iret
dec
pushl
sub
cmp
jle
sub
subb
cmpsb
cmpsb
pop
or
loopne
loope
in
and
andb
lret
dec
mov
lds
xchg
subl
mov
out
test
gs
fsubrs
mov
jne
mov
push
mov
or
in
in
pop
lds
mov
mov
inc
rcrl
nop
push
sub
outsl
xchg
bound
in
push
sahf
sti
scas
xchg
fmull
cs
mov
mov
adc
lea
sbb
repz
or
mov
mov
xchg
out
xor
and
std
arpl
mov
push
push
inc
les
leave
jns
sbb
cmp
insb
xchg
sbb
mov
push
inc
pop
aas
scas
xor
adc
and
aas
mov
pop
mov
int3
in
and
leave
rcll
sbb
out
cmp
mov
pop
into
pop
inc
mov
repz
mov
mov
jbe
xor
jmp
push
aad
jbe
mov
xchg
inc
hlt
mov
pop
push
int3
lock
push
dec
jb
pop
inc
cli
mov
lret
test
jle
adc
jmp
ja
jp
lock
ret
stc
lret
cmpsl
sti
mov
test
es
sbb
mov
cmp
test
and
sar
mov
enter
inc
dec
mov
push
stos
jp
push
adc
std
xor
xchg
rcrl
test
adc
pop
mov
push
dec
loope
test
std
imul
cli
ret
out
in
andl
or
insl
jne
dec
xor
mov
push
js
inc
ror
test
ret
push
lods
sub
dec
scas
aam
inc
imul
inc
lret
mov
outsb
pop
lret
ljmp
adc
cli
test
das
outsl
ljmp
and
jp
push
in
in
scas
push
into
push
jne
xchg
cmp
addr16
inc
inc
nop
out
adc
cmpsl
sub
xchg
scas
jl
mov
jb
xor
not
jbe
add
sub
mov
imul
sub
add
ret
enter
and
or
mov
xchg
imul
pop
adc
mov
add
jle
mov
rorb
and
pop
mov
in
mov
movsl
mov
test
xchg
hlt
add
roll
jp
xchg
jl
bswap
fmull
sub
notl
stos
dec
test
inc
add
inc
dec
ljmp
sub
push
xchg
or
and
hlt
dec
sbb
pop
ja
xchg
add
add
push
cmp
push
mov
or
xlat
xchg
push
lods
outsb
adc
xchg
mov
jne
inc
sahf
mov
jns
mov
push
adc
sub
loopne
inc
fisttps
out
inc
sub
or
mov
cwtl
xchg
fs
imul
sbb
scas
pop
push
jno
xor
ja
outsl
aad
sbb
jno
pop
xchg
stc
aaa
ficoms
adc
adc
pop
sbb
and
xor
pushf
xchg
mov
icebp
nop
mov
sti
inc
or
das
mov
arpl
stos
sub
sbb
aas
sahf
imulb
scas
lret
and
dec
lcall
movsl
in
cmp
mov
rorl
inc
xchg
test
movsb
iret
das
xor
xor
pusha
shr
cmc
adc
jne
xor
out
jno,pt
cmp
jl
jo
dec
aas
test
out
stc
fs
stc
adc
dec
pusha
lret
out
fs
std
xor
hlt
fs
cld
sub
daa
loopne
dec
mov
imul
pop
in
popf
dec
inc
add
push
out
aad
jmp
dec
mov
jnp
fisttps
mov
jae
fildll
xlat
adc
pop
xchg
push
jp
andb
addr16
lds
out
dec
addr16
xor
test
test
add
and
mov
push
outsb
push
pop
arpl
outsb
icebp
shrl
daa
add
jae
mov
pop
push
push
in
nop
pusha
push
dec
fsubp
jb
mov
pop
insb
loop
repnz
mov
add
icebp
in
call
cmp
or
dec
sbb
jne
scas
shlb
push
push
ja,pt
xchg
mov
aas
lret
call
adc
cmp
arpl
push
xlat
out
mov
or
adc
fdivs
lock
es
or
xor
mov
sbb
int3
mov
jg
test
push
dec
leave
adc
rolb
pusha
int3
pop
add
and
push
add
cmp
dec
inc
sub
ljmp
jno
les
gs
clc
mov
filds
nop
pop
adc
adc
sbb
inc
lret
in
push
adc
sbb
jbe
cmp
mov
xchg
loop
cli
xlat
repnz
xor
sti
adc
je
mov
mov
jbe
icebp
testb
push
shll
xchg
inc
setp
mov
jecxz
jl,pt
inc
inc
loope
and
push
aam
sahf
sub
bound
adc
mov
mov
mov
push
gs
mov
push
lcall
and
lcall
out
adc
xor
ljmp
fwait
add
xchg
push
cmpsl
popf
mov
pop
mov
adc
loopne
in
cld
sub
pushf
push
dec
lods
leave
and
sub
fs
daa
inc
cld
stc
inc
or
mov
cwtl
out
mov
xchg
cmp
in
inc
jle
ret
test
xchg
call
xlat
jmp
xchg
testl
sar
mov
idivl
inc
add
cmp
ret
cmp
add
not
or
out
jle
fadds
adc
repz
pop
mov
leave
pop
pop
bound
jns
in
outsl
inc
sbb
inc
push
lds
aam
dec
rcr
lret
dec
std
cltd
add
out
into
and
add
std
jb
or
pop
popf
les
inc
push
test
jle
push
dec
and
stos
dec
jecxz
mov
fisubrl
ret
leave
dec
imul
test
repz
cmp
dec
or
sbb
icebp
fwait
push
lock
orl
jmp
in
leave
leave
xor
mov
jge
mov
ljmp
adc
dec
xchg
xor
sti
lret
faddl
sarl
lds
mov
push
dec
cmp
int
sti
jge
fcmovu
fwait
in
jbe
arpl
xor
in
jl
xor
sbb
pop
movsb
and
cltd
stc
pop
insl
dec
lds
dec
or
push
jno
push
fldl
adc
insl
push
gs
pop
sahf
test
mov
arpl
call
xor
mov
push
repnz
out
sub
sub
dec
xor
add
xor
mov
jns
pop
push
fwait
jge
and
imul
lret
and
mov
mov
and
lea
mov
aas
gs
lret
mov
mov
decb
jnp
test
inc
dec
inc
or
int
test
dec
in
mov
push
sbb
mov
sar
pop
lds
and
push
mov
fdivr
iret
mov
mov
dec
fcoms
inc
mull
dec
add
lds
sbb
mov
stc
insb
pusha
stos
test
and
push
leave
sbb
mov
jge
in
inc
xor
imul
je
test
mov
sub
mov
movsb
sarb
sbb
cmp
out
and
movsb
inc
add
sbb
or
divb
dec
dec
std
pop
add
inc
cmpsb
or
cmp
inc
filds
sbbl
std
pop
push
aaa
lcall
fiaddl
mov
cmp
das
mov
pop
js
hlt
jecxz
mov
mov
loopne
add
mov
add
add
popf
push
inc
cmp
add
add
push
add
add
add
orb
add
push
add
addb
add
popf
push
inc
cmp
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
popf
push
inc
cmp
add
add
add
add
js
add
add
add
nop
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
popf
push
inc
cmp
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
popf
push
inc
cmp
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
xorb
adc
add
add
add
popf
push
inc
cmp
add
add
add
add
mov
add
and
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
inc
push
add
mov
inc
add
loopne
add
lock
add
add
add
adc
add
add
add
add
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
add
ljmp
add
adc
add
add
add
incl
inc
add
adc
add
sbb
add
add
add
jmp
add
sbb
add
and
add
add
add
decl
add
and
add
sub
add
add
add
ljmp
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
gs
insb
xor
cs
insb
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
divb
add
add
add
divb
add
add
add
add
int3
fnsave
sub
rorb
mov
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
or
lcall
inc
push
xor
or
testb
loopne
adc
popl
and
xor
sbb
jbe
inc
sub
sub
stos
xor
adc
in
or
sbb
inc
add
and
dec
das
and
and
adc
mov
test
push
pushf
mov
mov
popf
adc
jno
cmpsb
sbb
fistps
sbb
inc
rol
add
bnd
inc
push
push
push
loop
add
popa
adc
mov
add
cmp
lock
ficomps
adc
add
mov
lods
stos
add
cmpl
add
jae
test
mov
addl
inc
push
cli
rep
fistps
jb
xor
add
scas
repz
or
push
call
add
mov
mov
inc
xor
push
dec
iret
xchg
aaa
ret
and
push
call
mov
rorb
xchg
shrl
inc
xchg
or
shrl
nop
add
lcall
mov
test
inc
push
subb
mov
lea
push
mov
and
sub
xorb
loope
fiaddl
jg
lea
push
aas
pop
adc
mov
sbb
lahf
inc
push
push
aas
jge
test
add
stos
sbb
shlb
or
jmp
or
aaa
fisubs
and
movsl
pop
dec
inc
add
test
rorl
and
sub
pop
inc
push
aaa
sbb
setge
or
pop
pop
pop
pop
pop
ret
imul
inc
pop
sub
loopne
add
add
push
call
pop
push
or
xchg
sti
sbb
push
push
negl
ret
push
mov
xchg
pusha
xor
pop
add
add
in
pop
lods
push
jne
lds
cmp
int
rcrl
adc
xchg
lods
inc
mov
rcrl
cltd
or
je
push
inc
call
sbb
xchg
leave
add
je
les
dec
xor
push
jmp
cmp
lock
movzwl
test
jge
adc
jp
insb
inc
insb
mov
adc
add
clc
cmp
jge
rcl
movzbl
rolb
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
scas
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
notl
sub
std
push
popf
pop
push
mov
sbbl
add
jbe
push
push
call
pop
mov
dec
aas
adc
out
shl
lods
inc
inc
pop
imul
test
inc
int
mov
adc
dec
leave
loopne
xchg
sub
or
pushf
roll
rep
shrb
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
test
fidivl
cmp
ret
add
pop
mov
pushf
sbbb
push
push
push
and
push
mov
in
es
enter
mov
pop
and
jl
add
push
mov
hlt
push
mov
jge
pop
dec
test
mov
outsl
push
push
flds
in
fnop
clc
enter
xchg
mov
inc
aam
sub
lahf
ss
sti
outsb
push
ret
pop
imul
nop
cli
cmp
jne
stc
sub
adc
repz
inc
rol
decl
movsb
stos
adc
fsub
fildll
jne
cs
cmp
xchg
ficoml
in
sub
lret
std
mov
fwait
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
or
call
sbb
mov
and
cmp
jae
jbe
jne
in
sbb
subl
xchg
inc
adc
dec
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
sbb
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
roll
je
data16
inc
jecxz
dec
enter
push
dec
mov
push
and
pushf
aad
test
adc
add
xor
icebp
mov
adc
dec
or
inc
jmp
mov
cld
insl
ror
sbb
inc
cmp
mov
jl
sbb
sub
jmp
push
lea
mov
leave
pusha
cmp
push
orb
je
js
push
pop
sbb
arpl
sub
or
in
xor
and
scas
adc
lcall
mov
fiadds
pop
outsl
cmpsb
dec
dec
scas
icebp
inc
jo
insb
imul
jb
mov
adc
out
and
jne
fldt
adcb
jecxz
cmp
aas
fs
and
stc
in
fnstenv
pop
scas
mov
imul
inc
xor
sub
insb
and
or
daa
arpl
mov
fwait
push
xor
push
dec
fidivrs
popa
addr16
inc
outsl
js
xorl
js
data16
imul
fwait
insb
add
inc
js
je
xchg
movsb
jo
insb
inc
shrb
popa
outsb
fs
jo
dec
jo
lods
sbb
cmp
insb
cmpsb
sbb
jl
imul
add
mov
cltd
lcall
jge
push
add
insl
cmp
and
jmp
push
cmp
dec
dec
xor
dec
arpl
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
dec
add
or
add
add
add
inc
add
inc
add
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
fs
inc
add
add
add
inc
