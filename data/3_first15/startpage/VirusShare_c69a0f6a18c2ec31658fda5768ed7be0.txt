mov
add
or
insb
inc
decb
jge
add
jl
mov
push
xchg
add
xchg
lret
gs
push
imul
and
outsl
lret
mov
jo
jno
lock
mov
sub
jbe
ja
js
xchg
int
add
out
jp
jnp
pop
ss
shrl
adc
mov
fs
scas
adc
int3
sub
add
push
mov
mov
mov
adc
or
mov
cmpsb
imul
je
sarl
in
push
cmp
dec
cs
fwait
pop
cltd
mov
xchg
lret
xchg
daa
shlb
sub
into
add
mov
xor
ja
push
mov
imul
add
mov
dec
into
push
mov
mov
rclb
cmc
stos
ret
lcall
data16
int3
jnp
scas
imul
mov
daa
je
test
ja
out
adc
fnstenv
lds
enter
data16
scas
mov
repnz
xor
inc
jae
pop
popa
into
mov
dec
pop
mov
cmp
sub
add
pop
push
lcall
aam
add
sub
cmpsb
push
shll
or
out
xchg
pop
push
ret
out
xchg
fsubs
adc
clc
flds
jl
aaa
ljmp
nop
gs
add
into
pop
ss
out
fnstsw
int
jb
xlat
push
loopne
es
or
pushf
sub
imul
lret
cmpsb
imul
adc
push
sarl
in
add
shrl
dec
lock
xchg
call
and
ret
sub
and
enter
ss
adc
in
and
and
iret
out
adc
loopne
lods
adc
sub
sahf
and
add
adc
js
repnz
dec
adc
adc
insb
sahf
iret
out
adc
movsb
adc
adc
sbb
ds
push
adc
dec
in
adc
idivb
inc
and
fs
fstpl
xor
cmpsl
mov
adc
adc
test
lret
xchg
out
repz
adc
xor
sbb
es
xchg
je
adc
inc
hlt
dec
int3
adc
cmp
sbb
adc
adcb
enter
lock
cmp
addr16
mov
xchg
jmp
inc
sahf
and
sahf
and
adc
inc
inc
inc
inc
in
or
push
dec
adc
sbb
adc
in
repnz
adc
pop
loopne
fs
adc
sbb
addr16
add
pop
push
xor
push
sbb
fldt
nop
jbe
icebp
xlat
dec
scas
sti
and
pop
out
decl
add
jne
imul
fs
jo
jne
js
outsb
bound
dec
mov
dec
xor
loop
xchg
cltd
dec
jae
pop
pop
dec
dec
pushf
sub
inc
fdivrl
cmp
mov
cld
xor
test
cld
scas
cmp
push
dec
gs
insl
mov
das
mov
outsb
je
insb
outsb
gs
inc
js
insb
adc
push
fildl
sbb
and
fdivl
frstor
ret
add
add
push
sti
mov
sbb
incl
or
addr16
nop
inc
dec
jbe
mov
dec
jae
call
sbb
push
add
mov
or
cltd
mov
sbb
inc
add
fwait
sti
push
ret
add
dec
and
push
rcpps
pop
dec
cmp
repnz
sbb
or
adc
lods
pop
enter
jg
dec
xor
xor
bound
arpl
cs
insb
sub
pop
bound
pop
lods
stc
sub
inc
xor
push
imul
out
xor
je
pop
js
jg
add
insb
popa
add
jp
jp
jns
imul
xchg
xchg
add
imul
xor
sbb
and
xchg
sbb
in
adc
sbb
pop
inc
addps
imul
add
mov
or
cwtl
cmp
add
pop
pop
jnp
pop
push
imul
pop
jnp
and
sbbl
dec
push
add
sbb
sbb
add
pop
sub
xchg
call
xchg
sbb
add
inc
push
fbstp
or
jg
adc
inc
mov
cmp
arpl
outsl
das
jmp
or
or
add
jo
dec
mov
push
add
pusha
or
mov
pop
jo
insb
int3
pusha
inc
mov
int3
jmp
mov
add
add
inc
pusha
mov
jb
push
or
inc
add
lods
xor
jnp
adc
inc
loopne
lods
sbb
aaa
imul
int
pop
das
sbb
cmp
sbb
das
cmp
mov
add
fs
inc
imul
add
add
inc
cli
mov
mov
xor
sub
test
hlt
out
or
add
add
fwait
or
fld1
testl
inc
or
mov
xor
xchg
push
cmp
xor
push
insb
gs
xchg
add
mov
arpl
mov
je
jmp
je
sti
subl
mov
mov
sarl
inc
inc
je
jb
bound
push
cmp
aam
push
and
jns
mov
add
push
inc
and
repnz
add
pop
pusha
xor
sbb
and
push
dec
gs
inc
in
push
sbb
insb
bound
inc
enter
jb
gs
mov
xor
mov
bound
jecxz
add
push
xor
ret
imul
mov
mov
dec
rsqrtps
dec
jae
iret
aad
push
fistps
adc
or
push
or
xlat
add
or
loopne
in
sub
jmp
sbb
xor
cmp
data16
jne
or
add
arpl
cmp
arpl
xor
jge
add
add
xlat
insl
outsb
outsb
fwait
push
jb
or
cmpl
mov
push
jne
fwait
jmp
loope
sbb
les
loope
aas
add
mov
inc
mov
imul
or
xor
add
sbb
xor
iret
push
pop
mov
push
pop
sub
inc
loope
dec
jne
arpl
test
shlb
push
int
inc
cltd
push
or
inc
inc
xlat
adc
insl
inc
inc
sbb
mov
jo
and
pop
mov
dec
stc
insl
cs
dec
push
mov
mov
repz
bound
dec
jne
sub
aaa
mov
addl
jae
shll
sub
daa
aad
popa
or
pusha
inc
push
ss
out
popf
lea
mov
mov
inc
addr16
push
sub
xchg
insb
gs
jb
dec
outsl
fs
jae
roll
pop
movb
popf
dec
and
pop
fwait
stos
xlat
or
inc
xchg
je
bound
stos
dec
ret
add
mov
out
aad
movsl
inc
arpl
and
cmp
arpl
ret
out
xlat
addps
push
push
adc
int
sbb
add
cs
add
jne
popa
xor
and
cmp
jge
mov
fcoml
dec
sbbl
fstl
push
jno
push
mov
jmp
jmp
aad
and
cmpsl
mov
jne
orb
imul
leave
push
fistl
loope
popf
or
and
sti
sub
jns
jnp
fsubs
pop
pop
daa
pusha
sub
outsl
and
jae
sub
pop
ja
mov
popa
dec
lock
mov
add
mov
add
mov
adc
jno
cwtl
mov
call
test
insl
aaa
in
stos
inc
cmp
das
mov
mov
inc
pusha
cltd
mov
test
dec
addl
or
adc
sbb
bound
movsl
sub
nop
push
dec
cwtl
out
jns
js
sbb
dec
sub
push
inc
ja
outsb
adc
add
out
iret
add
dec
insb
inc
arpl
cmpsl
sahf
sbb
out
stc
jg
mov
adc
add
ja
dec
addr16
cltd
dec
lcall
fs
mov
xchg
add
adc
add
mov
popa
pop
addb
jecxz
xor
popf
and
push
inc
adc
es
addl
test
xor
and
cwtl
shrb
or
or
dec
or
out
pop
inc
cmpsb
scas
jmp
adc
pop
inc
sbb
les
addl
xlat
cmp
push
pop
addr16
pushl
mov
pop
pop
out
inc
lea
imul
test
push
xlat
popa
gs
push
xor
or
test
xor
pop
mov
stos
xor
xor
cmp
bndstx
push
pushf
es
test
insl
adc
lahf
and
movsb
scas
das
adc
xchg
imul
cmp
fildl
aam
or
lods
cmp
cmp
inc
inc
inc
popa
pmaxub
mov
sub
pop
sbb
push
fstl
lea
icebp
sbb
fsubs
and
jecxz
mov
adc
icebp
aam
adc
sub
out
movsb
in
and
mov
shlb
adc
or
or
xor
inc
inc
inc
sbb
scas
adc
arpl
fcomps
dec
sbb
inc
cmp
xchg
dec
repz
pop
cmc
and
fisttpl
rorl
and
sub
or
jge
adc
xor
js
jmp
mov
call
inc
adcb
imul
add
and
pop
testl
lcall
andb
out
or
or
pop
add
mov
bswap
leave
mov
sub
out
sti
sbb
mov
xor
test
sarl
and
xchg
add
andb
xor
mov
lret
pop
jnp
popa
mov
cmp
pop
xor
fs
cmp
out
mov
cmp
and
sbb
sub
cmp
sub
xor
sbb
test
cmpsl
gs
out
sbb
add
dec
ret
xlat
mov
inc
ret
mov
inc
dec
mov
lods
or
gs
icebp
lcall
mov
add
dec
rcll
pop
nop
aas
jmp
inc
rorl
jae
pop
jmp
insb
das
imul
fdivl
adc
add
sti
dec
aad
or
rcpps
ret
aaa
or
pop
add
xchg
add
add
xor
mov
push
inc
lcall
pop
xor
insl
fwait
and
or
loopne
dec
push
movsl
push
punpcklwd
dec
pop
dec
inc
aas
push
xor
out
add
or
aaa
sbb
aaa
push
arpl
popf
sub
pop
fstl
push
push
add
xchg
pop
mov
sbb
fistpll
adc
xchg
negl
and
or
xchg
cmp
sbb
test
pop
and
outsb
adc
adc
sbb
popl
cli
adc
jne
divl
mov
daa
stos
add
sbbl
xchg
sbb
add
add
jnp
cmp
add
push
xchg
out
popf
js
fwait
cmp
jge
and
and
xchg
inc
dec
aad
adc
xor
dec
lods
cmp
and
mov
sub
andb
or
add
and
xchg
sti
gs
or
fidivl
add
dec
insl
pop
pop
popa
jae
aam
jecxz
mov
ljmp
push
add
pop
add
rolb
movups
add
cmpsl
inc
movb
add
xor
push
pop
das
pop
pop
push
xlat
pop
sbb
cmpsl
dec
orl
push
mov
in
test
pop
dec
cs
push
and
cmc
push
pop
cmp
out
inc
adc
js
pop
popa
arpl
lcall
ja
popa
push
dec
cltd
adcl
jae
mov
addb
xlat
sub
mov
jge
adc
mov
adc
push
adc
dec
jle
sub
xchg
lret
sti
cltd
and
or
add
and
push
pusha
push
icebp
mull
adc
subb
mov
jge
xchg
lea
push
iret
ss
xor
push
pop
aaa
or
add
inc
jno
mov
in
sub
es
pusha
lock
andl
loope
jmp
pusha
enter
push
mov
or
sbb
mov
cmp
jae
call
aaa
insl
cmp
addr16
push
rcl
xchg
aas
insl
jae
jno
jae
jne
xor
inc
js
jp
cmp
aas
outsl
push
inc
mov
aad
test
add
and
pop
xchg
mov
xor
cmp
push
xor
mov
scas
das
xlat
je
cmp
inc
inc
add
jge
xor
inc
addl
jmp
jge
cmp
xchg
test
imul
adc
adc
mov
imul
xchg
out
je
lahf
pop
pop
add
dec
ret
xchg
pop
jecxz,pn
loope
dec
adc
fcmovnbe
inc
lods
cs
arpl
pop
xchg
sub
add
mov
rcll
push
lods
loopne
sbb
pop
sbb
xorl
xor
popf
sbbl
adc
add
insb
ret
jge
sub
femms
add
cltd
push
and
out
mov
je
pop
pop
xor
test
jmp
mov
and
sub
aam
sub
inc
or
fildll
sahf
mov
xchg
insl
pop
xor
add
mov
aaa
sub
sub
insl
sbb
sub
or
out
sbb
push
aam
fistpl
xchg
mov
xor
addr16
inc
sub
and
cmpsb
pusha
xor
adc
enter
push
add
test
add
xorl
cs
dec
dec
or
jbe
popa
dec
outsb
inc
jae
jb
in
xchg
jg
cmp
je
xor
jb
push
outsb
insb
outsl
arpl
fcmovu
push
push
popa
jb
fs
outsl
popa
adc
pop
push
gs
sub
imul
xchg
outsl
insb
push
dec
jne
insb
and
jae
je
push
push
insl
sbb
inc
popa
cltd
cvtdq2ps
mov
sar
push
outsl
inc
outsb
jae
jnp
popa
je
dec
gs
sub
push
dec
xchg
jne
imul
cmp
inc
dec
arpl
shlb
pop
push
pop
inc
ds
mov
insb
imul
or
ja
add
xchg
mov
in
dec
addr16
lahf
dec
adc
into
add
mov
xchg
sub
add
mulb
outsl
jo
pop
inc
xor
xor
outsl
mov
sub
cmp
push
sub
jno
jae
mov
shll
push
bound
inc
dec
cld
fsubrs
mov
inc
test
jnp
imul
adc
dec
outsl
jbe
insb
fs
or
stos
insb
or
push
dec
outsl
data16
insb
test
addb
mov
push
jns
and
jb
and
xlat
mov
add
cmp
lret
lock
jns
jb
adc
pop
dec
jo
mov
and
repz
jae
inc
jno
push
repnz
push
popa
setg
pop
enter
adc
faddp
sbb
daa
jnp
sub
hlt
dec
xor
faddl
lcall
sar
pop
loop
mov
jp
xchg
lret
aas
adc
ret
daa
mov
dec
add
ljmp
sti
mov
cmp
cmp
dec
dec
mov
rcr
push
add
adc
mov
loopne
dec
and
jl
aam
inc
pop
mov
push
push
daa
inc
sub
xchg
sti
or
or
adc
imul
cmpsl
leave
push
sbbb
inc
flds
fmull
insl
push
pop
pop
and
push
dec
push
jmp
mov
cmpsb
mov
add
mov
mov
xor
in
mov
jns
out
pop
sbb
mov
andb
xor
or
inc
xchg
daa
add
push
enter
mov
inc
dec
xchg
xchg
pop
test
sbb
push
mov
xor
adc
adc
mov
pop
or
and
xorl
xchg
add
push
das
jae
mov
adc
in
add
xor
inc
and
jl
lret
add
scas
inc
jnp
inc
fldt
pop
dec
roll
sub
gs
jae
jp
xor
pusha
in
adc
mov
insl
jae
pusha
lock
or
pushf
bound
outsl
iret
jns
adc
and
inc
or
outsl
add
cmp
dec
aad
iret
jae
jb
leave
data16
and
rcr
add
push
xor
xchg
jp
divl
sbb
pop
pop
sub
push
orl
cmpsl
inc
jo
shll
sbb
insl
test
inc
xchg
cmp
sti
jnp
jp
lea
pushf
add
xor
sbbb
clc
addr16
mov
mov
btr
push
inc
mov
loopne
pop
sub
pop
add
jmp
add
adc
pop
mov
sbb
pop
add
data16
sbb
add
pop
nop
int3
push
mov
sub
push
mov
mov
and
outsl
imul
add
mov
movl
lock
push
hlt
cld
add
push
xor
adc
fistpll
lods
push
inc
ret
cld
lea
and
fnstcw
push
lea
sbb
sub
mov
push
lea
push
pop
fs
adc
jbe
push
adc
or
out
add
adc
sub
inc
lcall
psrld
add
mov
mov
fildl
adc
adc
cmp
sub
xor
cmp
cmp
std
in
inc
adc
push
push
lret
mov
loope
loopne
les
shlb
push
cmc
or
daa
push
and
and
mov
push
les
push
popa
and
enter
pop
or
and
xor
and
enter
and
sbb
cmc
push
dec
pusha
leave
xor
add
pop
or
xchg
and
and
mov
test
lea
xchg
enter
cmp
sbbl
adc
cmc
dec
push
mov
nop
and
or
pushf
leave
in
and
jb
or
or
fsubl
jae
pop
push
call
xchg
addr16
and
add
sub
ret
xchg
dec
inc
es
jmp
push
mov
ret
mov
insb
adc
mov
sbbb
dec
in
hlt
mov
push
or
cld
incb
cmp
add
icebp
fimull
sbb
or
push
and
adc
or
leave
and
pushf
in
or
and
jo
jl
leave
in
jno
or
orb
sbb
leave
dec
loop
or
loope
cltd
dec
dec
push
adc
sub
mov
decb
pop
inc
leave
dec
movsb
sub
add
aam
addl
lds
jae
lret
loop
push
pushf
stos
or
sbb
lret
adc
or
cmp
dec
or
cld
nop
inc
push
cmp
add
xor
pop
mov
xor
or
into
cltd
dec
dec
test
xchg
mov
or
sub
ljmp
stos
adc
mov
and
leave
fs
adc
mov
xchg
pushf
in
stos
ret
cmc
inc
das
leave
xor
loope
xchg
pushf
in
jo
xchg
cs
pop
xor
lret
dec
add
push
add
push
xchg
and
je
and
or
lods
xchg
fistps
enter
test
xorb
ror
add
sti
jl
testl
push
stc
dec
mov
sahf
rcrb
sbb
adc
add
push
xor
push
and
mov
xlat
in
sub
pop
mov
fstpl
jbe
fistps
js
add
mov
cmp
and
leave
and
das
mov
xchg
mov
rorl
addr16
sti
fwait
push
xor
lock
test
je
sbb
les
repnz
fildl
add
ret
sub
popf
sbb
jl
adc
mov
clc
or
clc
mov
pop
and
pop
dec
enter
incl
jae
sbb
mov
in
sub
adc
ret
pop
or
cmp
enter
fdivr
cmp
lret
jbe
mov
mov
int3
mov
lods
pushf
mov
enter
dec
cmp
enter
sub
xchg
xchg
out
add
in
xchg
xchg
xchg
xchg
les
xchg
test
insl
cs
xchg
inc
xor
xor
mov
push
loopne
pop
mov
negl
adc
popa
mov
push
das
xor
xchg
pop
leave
insb
xchg
push
xchg
or
popa
movsl
push
test
add
and
sbb
xchg
mov
push
orl
lods
inc
lahf
sbb
xchg
push
sbb
rol
push
popf
jp
sbbl
sahf
mov
fwait
push
push
push
movsl
mov
int
lcall
or
jmp
insb
pop
lock
addr16
add
sti
loope
lods
or
push
push
push
add
scas
scas
xchg
es
std
in
xor
fldcw
and
jge
mov
add
mov
or
int
pushf
push
popf
mov
xchg
xor
lcall
sub
pop
nop
je
lea
sub
mov
test
int
pop
repnz
cs
fmull
in
xchg
add
fs
in
hlt
mov
nop
daa
in
and
xchg
sub
popf
mov
push
popf
and
sub
push
pusha
nop
jbe
push
nop
or
sub
jl
adc
xchg
cmp
es
add
movsb
loope
leave
pushw
mov
int3
jl
test
inc
in
incl
stc
es
xchg
fs
mov
and
push
fidivs
sbb
cmp
pop
push
cmc
mov
xchg
adc
mov
cmc
jmp
in
scas
and
and
mov
or
rcrl
xchg
or
hlt
aaa
fsubs
xchg
outsl
repnz
push
in
cmp
push
sbb
pop
push
jb
stos
lods
ja
add
stos
jne
in
xchg
nop
push
les
push
adc
nop
inc
mov
nop
cmp
cmp
mov
inc
ret
aas
dec
adc
pushf
js
mov
inc
xorl
pop
mov
sbb
jl
inc
push
inc
enter
sbb
xchg
adc
inc
adc
inc
and
dec
mov
sbbl
fmuls
jo
add
stos
inc
mov
test
push
aam
push
mov
sub
mov
push
inc
sub
into
dec
inc
cs
sub
shll
cmp
add
xchg
dec
and
push
cmp
adc
mov
push
stc
mov
leave
xor
push
mov
add
cmpb
in
in
aam
cmp
add
insb
inc
push
and
push
and
fmull
sbb
mov
inc
push
lahf
lea
mov
pop
repnz
pop
xorb
xchg
lea
arpl
push
sbb
adc
mov
repnz
pop
mov
or
insb
push
mov
sbb
scas
push
and
shlb
xchg
pusha
xchg
outsl
add
ret
mov
adc
mov
sbb
or
and
outsl
jb
add
out
test
movsb
inc
add
push
sbb
mov
pushf
and
dec
lea
and
jb
or
xchg
rcll
mov
add
xor
pop
test
and
insb
nop
stos
and
roll
sbb
cmpsb
lock
insl
push
mov
push
aam
push
and
shlb
cmp
xor
xchg
popl
aas
mov
push
les
push
and
pop
adc
into
out
mov
xlat
int3
add
xor
push
enter
dec
notb
push
add
or
sub
aas
sub
cmp
add
addb
and
xchg
pop
adcb
data16
ret
dec
push
leave
xor
sub
popa
xor
pop
test
xor
movsl
or
adc
inc
mov
push
and
lock
and
andl
into
mov
ficomps
rolb
push
mov
in
push
sub
lea
or
jo
lea
das
xor
fmull
jo
rorl
fmull
pop
push
push
fimuls
sub
inc
add
js
and
inc
adcb
movsb
fucomi
ret
pop
test
push
sbb
shlb
mov
xchg
push
decl
adc
fwait
dec
jge
inc
push
sub
out
or
fmull
sub
lock
push
aam
fstps
and
cmc
test
in
in
mov
push
cld
push
dec
or
or
xor
mov
jb
in
xchg
cmp
dec
ds
mov
inc
leave
enter
xor
in
popf
fistpl
fucomip
adcb
inc
inc
add
push
sbbl
dec
xor
sbb
incl
mov
dec
mov
cmp
xchg
andl
adc
jbe
xor
imul
fs
repz
push
or
sbb
test
push
es
gs
adc
xchg
xor
push
or
pusha
inc
insb
test
sbb
out
enter
push
and
xchg
pop
leave
add
out
fldt
sub
pop
in
sbbl
and
outsl
scas
xlat
jo
bound
mov
mov
lods
xchg
movsb
add
dec
mov
sub
adc
or
cmp
dec
fcoml
mov
pop
xor
insb
pop
and
sub
adc
sbb
push
mov
or
sub
or
adc
adc
nop
nop
comiss
das
lock
int
inc
and
mov
mov
and
faddl
int3
mov
xchg
pushf
mov
add
pop
cmp
sbb
mov
fsubs
dec
int3
pop
fcompl
mov
nop
daa
xor
adc
fwait
in
ja
inc
nop
dec
cmp
adc
push
mov
push
or
dec
adc
in
dec
mov
inc
mov
push
mov
or
das
stos
aaa
addr16
mov
enter
add
inc
je
push
push
sti
bound
fs
dec
push
mov
int
add
xor
pop
mov
sbb
or
jbe
sbb
insb
xchg
mov
je
mov
lcall
jne
int
cwtl
adc
cmp
add
les
inc
insl
arpl
push
js
mov
pop
roll
push
sbb
loopne
xor
mov
fldenv
pop
and
into
enter
addr16
stos
fmul
and
push
data16
and
jns
loope
jmp
pop
mov
andb
adc
jp
test
and
mov
lods
xchg
in
xorl
ret
push
rcrb
mov
xor
and
mov
and
push
xor
popa
adc
loopne
insb
mov
xchg
lds
adc
sbb
movsl
cwtl
dec
rclb
push
and
test
ljmp
xor
mov
jmp
fstpl
rorb
or
dec
add
xor
sub
push
stc
mov
push
dec
adc
adc
sub
pop
mov
inc
pushf
mov
jle
jo
dec
movsb
xchg
and
sub
add
push
xorl
jb
mull
add
mov
enter
add
or
push
xchg
add
enter
pop
push
push
inc
cmc
xchg
in
push
push
andb
js
fs
mov
pushf
mov
into
test
js
jl
xor
lret
test
test
sbb
sbb
xor
or
and
rorb
int3
inc
sbb
adc
mov
mov
mov
js
inc
mov
jbe
or
mov
jecxz
mov
hlt
lock
test
cmpsl
shl
sbb
pusha
icebp
sbb
mov
adc
mov
shlb
or
enter
cmpb
push
aas
adc
aad
test
pushf
aaa
dec
xchg
jb
rorb
jb
jge
lahf
push
std
push
cmpsl
mov
jno
dec
or
fsubrl
sahf
jp
pop
int3
mov
fs
cld
pop
or
sub
sti
aam
add
adc
and
insl
or
movb
xor
xchg
jo
js
adc
shrb
mov
sbb
push
ret
test
inc
or
sbb
imul
dec
inc
filds
popa
out
mov
push
mov
mov
les
sub
inc
adc
mov
rcll
test
push
leave
mov
test
idivb
repz
movsb
cmpl
movsb
push
mov
inc
imul
push
loopne
sub
call
sbb
or
test
and
stos
or
enter
pop
xchg
int
fdivr
sbb
or
dec
insb
adc
popa
lahf
pushf
push
mov
xor
and
clc
cld
mov
pop
add
popf
int
add
sbb
enter
mov
xor
and
jnp
loop
movswl
loopne,pn
dec
ror
add
inc
mov
pop
fsubrp
sub
push
mov
leave
dec
jo
stos
rcr
jno
sbb
sub
dec
js
or
sub
dec
fucomip
cmp
notl
pop
scas
arpl
cmp
jne
push
rcrl
out
outsb
sahf
insb
cmp
sti
push
insb
cmpsl
rcl
sbb
dec
inc
scas
add
add
int
add
outsw
mov
xor
nop
ret
jmp
push
mov
cmp
xchg
shll
sbbb
jne
xchg
test
push
push
loopne
pop
out
adc
mov
sub
aad
sbb
lea
dec
push
mov
lcall
repnz
and
pop
cmp
jno
mov
rcrw
adc
cld
sub
dec
push
xor
sub
cwtl
neg
sbb
add
pop
jbe
xor
push
stc
popf
or
outsl
push
test
mov
sbb
lea
add
test
push
xchg
mov
mov
sub
mov
or
test
pop
lods
mov
mov
jne
dec
push
cmpl
sub
cmp
and
sbb
in
xchg
mov
inc
loopne,pn
jmp
push
call
push
popa
dec
jle
pusha
adc
lods
pop
add
stc
cmp
xchg
add
jae
inc
and
testl
test
fsubr
and
rolb
cwtl
sub
cmp
xlat
insb
mov
push
pop
hlt
or
xchg
imul
test
ss
aad
test
arpl
push
test
xor
and
push
fcomp
pop
dec
mov
iret
popa
fxsave
sub
pusha
test
cmpb
and
cmp
xchg
aam
xchg
xchg
and
xchg
in
in
cwtl
dec
cwtl
dec
push
addl
dec
xor
nop
arpl
sbb
pusha
inc
or
ret
inc
dec
sahf
adc
lods
imul
or
or
or
nop
movsb
or
imul
mov
stc
lea
xchg
push
lods
xor
jge
enter
pop
add
rolb
sahf
jnp
movsl
fsubs
pop
pop
sbb
jmp
mov
inc
rol
rorl
aam
push
mov
pop
lock
popa
and
lcall
imul
shlb
vfrczss
cmpsl
dec
pop
leave
xchg
and
enter
sar
add
aam
aam
iret
xchg
xchg
mov
sub
insb
sbb
add
in
adc
daa
jl
addb
aas
sub
sbb
mov
fidivs
xchg
lret
sbb
ret
fsub
into
ret
in
xor
insl
ret
add
dec
testb
and
adc
leave
xor
and
leave
jae
xchg
ss
xchg
push
mov
add
sub
push
ret
cwtl
xchg
cmc
arpl
call
das
pop
push
popa
push
cld
pop
cli
xchg
lods
or
sub
mov
popa
sbb
xchg
inc
gs
enter
mov
or
or
inc
out
push
xchg
inc
xchg
cld
aam
shll
addb
enter
sbb
lret
inc
xor
pushf
xchg
lea
rorl
and
insl
xor
xor
mov
sub
or
in
flds
test
out
mov
push
lret
testl
add
stc
popa
push
jg
sbb
mov
pushfw
sub
sub
inc
filds
hlt
js
popf
xchg
pop
rclb
push
mov
mov
and
adcl
pop
mov
push
shl
add
mov
pusha
and
and
xchg
lock
jmp
repnz
shlb
and
or
int3
popa
das
pop
push
and
mov
push
and
inc
push
mov
movsb
into
lea
or
mov
mov
ret
xor
lods
or
lods
arpl
nop
insl
leave
adcb
test
fsubs
fistpll
mov
sbb
or
fnstsw
pop
and
decl
jo
mov
pop
pusha
or
shlb
out
adc
fs
cmp
lcall
push
and
dec
push
add
mov
loope
inc
test
in
jo
or
and
in
push
test
xor
dec
push
stc
sub
dec
and
dec
push
jns
jmp
and
sbb
jl
adc
mov
dec
and
mov
sbb
nop
sarb
leave
and
pop
cmp
and
lds
and
jo
mov
dec
jl
inc
add
stos
jecxz
and
ds
xchg
or
leave
test
or
xchg
mov
jge
test
mov
jge
fs
or
mov
cld
and
or
popl
enter
cs
icebp
push
test
es
mov
adc
scas
in
xor
ss
in
or
jge
cs
or
adc
jae
test
clc
and
dec
pop
push
adc
pushf
push
sub
subps
xchg
or
xor
add
leave
inc
add
sbb
jg
shrb
mov
or
shlb
movsb
test
pop
repnz
mov
and
sti
pop
pop
arpl
call
dec
adc
es
xchg
int3
insl
inc
pusha
or
loopne
push
icebp
xor
mov
jnp
add
sarb
xchg
jp
orb
lods
sti
push
jno
rcll
mov
rolb
adc
and
jecxz
lret
cmp
xchg
pusha
shrb
pushf
push
je
adcl
jmp
inc
or
lret
inc
or
xor
dec
imul
inc
js
sbb
dec
push
rcl
fadds
lds
fsubr
leave
test
add
loopne
jns
adc
sub
fdivrs
add
movsb
xchg
mov
inc
mov
mov
add
push
inc
xor
sub
mov
les
xchg
adcb
jo
xchg
in
jmp
fcomp
jecxz
pop
mov
adc
adc
les
js
xor
jae
cs
inc
dec
inc
jno
cmovl
adc
push
jns
std
clc
jo
sub
and
and
fstps
sbb
aad
or
in
pushf
mov
mov
scas
loopne
out
adc
repz
or
add
mov
fdivl
faddl
test
jne
loopne
cmpsl
and
push
xor
movsb
daa
addr16
insb
mov
movsb
push
adc
roll
xlat
sahf
xchg
aam
xchg
pop
mov
inc
sbb
out
xor
in
push
xchg
add
xor
push
subl
aam
xchg
ja
sub
mov
mov
les
cmp
les
inc
addr16
mov
dec
fmuls
aam
adcl
fwait
adc
push
and
pushf
cmp
jle
notb
jecxz
call
add
enter
or
decb
loope
je
mov
cwtl
mov
push
pop
jl
and
mov
push
add
adcb
mov
add
mov
cmp
mov
jno
sbb
mov
add
test
insl
and
xchg
pop
sahf
popf
or
and
push
repnz
sbb
addl
push
fcomps
xchg
inc
and
cmp
sub
arpl
and
jne
addb
mov
decb
in
data16
add
out
cmp
pop
and
fsubrl
stc
fdivp
sub
popf
lock
or
xor
stos
adc
add
ljmp
adc
ds
sbb
sbb
adc
mov
and
mull
das
stc
sbb
call
and
cmp
subl
jl
xchg
out
mov
push
push
cmp
es
aam
push
add
mov
loopne
out
pause
loopne
loopne
mov
jmp
cwtl
and
and
jbe
cmp
push
sbb
enter
inc
test
push
jno
push
fcomps
data16
sbb
inc
xchg
sbb
pop
out
bound
mov
mov
adc
or
pop
dec
int3
pop
repnz
out
push
and
xlat
cmc
nop
inc
je
jp
in
out
pop
adc
push
cmp
nop
int
pop
xor
push
push
and
inc
pop
pop
xor
shlb
push
jbe
popf
push
push
or
fldl
pop
test
js
mov
sbb
jb
or
scas
sbbb
lods
and
dec
xor
in
lcall
sbb
push
addb
sbb
pusha
test
pop
push
pop
nop
inc
dec
push
pop
jle
sub
leave
dec
push
rclb
out
outsl
hlt
jle
sbb
and
mov
dec
enter
pop
mov
imul
mov
adc
jbe
lcall
incl
adc
pop
mov
push
inc
daa
dec
inc
movsb
cmpb
push
jb
nop
add
cmp
imul
push
mov
push
mov
mov
icebp
pop
dec
inc
outsb
shl
pusha
repz
pop
dec
ss
daa
cmp
sbb
inc
cmpsb
cmp
cwtl
jno
cld
or
mov
inc
xlat
jo
add
mov
or
ret
mov
xchg
pop
and
push
adc
mov
push
add
jb
pusha
xor
flds
insb
pop
or
inc
push
sub
rcr
adc
lret
lcall
and
sbb
add
pop
enter
mov
aas
xchg
arpl
pushf
cmpsb
cmp
fs
push
mov
or
sub
mov
out
adc
dec
inc
inc
xchg
push
cmpsb
and
dec
pop
loopne
fmuls
xchg
add
mov
and
nop
pushf
insb
and
popa
jp
out
xchg
xor
cmpsl
jmp
ljmp
aam
sbb
aam
shrb
mov
dec
push
int3
pop
xor
aaa
fs
push
call
and
xchg
add
add
xchg
nop
iret
add
xchg
xor
cmpsl
enter
enter
or
adc
enter
rcrb
xchg
add
movsb
sbb
adc
xchg
add
adc
cmp
mov
mov
xchg
out
or
add
cmp
fs
or
packuswb
movsb
push
and
mov
enter
mov
push
lret
enter
lods
int3
data16
popa
or
inc
mov
mov
shll
sbb
mov
sub
test
sub
sub
enter
mov
mov
jb
adc
in
sub
mov
ret
push
cld
les
test
mov
imul
in
cwtl
sub
or
sub
ret
jne
add
add
sub
xor
movsb
mov
mov
lret
or
lret
cld
out
and
mov
aaa
pop
pop
rcrl
mov
pop
adc
sub
and
push
add
aas
add
dec
arpl
popa
fs
data16
popa
outsb
or
sbb
add
add
add
sbb
add
add
or
mov
add
jbe
imul
fldl
adc
jnp
or
push
aad
push
add
add
inc
popa
das
push
or
xchg
add
cmpl
rolb
cmp
push
add
push
ja
outsb
arpl
or
add
movsl
add
push
push
inc
sub
shrb
jb
jg
push
inc
xchg
inc
cmc
add
rolb
or
sub
fildl
sti
imul
sub
inc
push
inc
dec
push
and
into
cld
pop
push
dec
dec
dec
pop
pusha
push
adc
sub
dec
clc
outsl
arpl
sarb
imul
arpl
outsb
sub
and
popa
pusha
push
ss
sbbb
ds
fisubs
xchg
lcall
adc
mov
lret
jno
je
push
jne
push
inc
add
inc
js
insl
fldt
dec
addr16
jb
sub
adc
dec
add
enter
inc
shrb
int3
int
mov
int3
inc
push
pop
jmp
adc
add
mov
inc
int
adc
jp
jp
pop
ret
add
arpl
icebp
mov
mov
stos
inc
and
adc
enter
jmp
or
stos
adc
xchg
add
divb
xor
mov
mov
int3
inc
ror
xchg
and
sub
out
inc
shrb
adc
xchg
inc
sub
mov
mov
push
add
jne
cmp
sbb
insl
das
sub
jo
bound
add
push
add
sub
add
add
aad
dec
mov
add
add
add
or
or
jae
push
and
inc
or
add
in
fadd
push
add
and
pop
int
pop
roll
mov
pop
push
outsb
mov
pusha
add
ljmp
popf
sub
or
add
testb
add
test
nop
lock
cli
pusha
cs
in
or
or
arpl
outsl
pop
inc
or
jb,pn
jb
ret
adc
dec
leave
pusha
daa
adc
test
add
clc
stos
sbb
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
