sbb
add
mov
lds
mov
adc
xchg
pop
add
jmp
dec
pop
dec
dec
cmp
jl
xchg
jns
mov
nop
arpl
outsl
subb
fsubl
rclb
pop
stc
in
icebp
in
mov
mov
loop
lret
stc
pop
push
test
sub
fcomps
je
outsb
cwtl
cmp
aam
pop
repz
push
dec
xchg
adc
lcall
adc
ficompl
sub
pop
popf
loopne
addr16
sbb
int3
jo
xor
lret
sub
sbb
roll
nop
xchg
mov
jnp
inc
adcl
inc
test
mov
inc
sub
incl
cmp
jge
xor
cwtl
pop
call
les
ss
push
cs
xchg
decb
or
inc
push
push
fwait
enter
in
scas
pop
jl
movsl
icebp
pop
cmp
sub
adc
repz
lea
into
or
cmc
push
pusha
adc
out
xchg
imul
ss
sub
or
inc
imul
add
jl
xor
mov
pop
adc
jb
sub
adc
pop
ret
adc
adcl
dec
pop
out
out
and
shrl
mov
ss
loopne
jmp
sub
out
or
sub
push
or
shlb
ret
movsl
stos
jb
jmp
ret
popa
xor
fistps
and
cwtl
sub
xchg
imul
shlb
nop
jo
xchg
mov
sbb
ret
adc
mov
xchg
pop
and
loope
sbb
xor
sahf
lret
js
push
lahf
or
xor
fstpt
call
inc
push
out
and
jno
push
mov
or
sbb
shll
fidivrl
shll
inc
in
in
xchg
lods
push
sbb
cmp
shlb
ret
push
dec
repz
fcoml
lcall
pop
out
stos
aas
xor
clc
cmp
xor
mov
pop
mov
push
dec
push
in
repnz
bound
mov
stc
xor
dec
popa
dec
push
ja
dec
mov
cmpsb
aam
in
xchg
mov
mov
loope
pop
sub
push
in
add
sub
xchg
pop
sar
stos
into
int
pop
push
mov
je
stos
add
cmp
dec
aad
cmpsl
cwtl
pop
adc
cwtl
aad
pop
js
mov
aam
fnsave
dec
cmpsl
push
cwtl
jns
call
or
in
dec
movsl
pushf
aas
xchg
fwait
or
out
sahf
das
in
mov
adc
test
aas
push
pop
add
mov
push
push
xlat
mov
iret
iret
in
lahf
out
push
jl
push
mov
adc
cmpl
adc
iret
push
stos
mov
mov
sbb
mov
add
sbb
cs
jge
pop
lss
fimull
andl
setge
mov
arpl
nop
and
adc
movsb
imull
dec
pushf
sarb
rcl
cltd
sbb
pop
inc
mov
dec
inc
jno
lea
dec
cs
cwtl
stc
cs
mov
out
xor
loope
out
cltd
mov
dec
mov
adcb
stos
sbb
xor
xchg
and
in
aas
adc
sub
std
xlat
insl
add
bound
adc
add
add
cmp
inc
cmc
push
dec
mov
sub
in
jecxz
xchg
scas
aaa
xorb
call
pop
push
xchg
push
or
adc
or
jae
faddl
jo
cli
popa
in
pop
stos
mov
aad
nop
push
or
sub
jnp
push
insl
dec
fdivrl
or
push
lods
mov
andb
cmp
lcallw
sub
shr
testl
rclb
jo
inc
add
mov
jo
mov
cmp
sbb
dec
fldt
mov
lret
lret
frstor
fmuls
sarb
jns
cmpsl
add
pop
push
lret
push
dec
scas
popl
add
icebp
cli
scas
out
test
cltd
dec
data16
mov
add
pop
mov
mov
dec
xchg
push
dec
shll
rolb
xor
clc
gs
mov
rorb
es
or
fwait
add
jae
femms
test
mov
lret
idivb
push
outsl
lock
ficoml
cmp
fidivrl
cmp
or
std
fdivl
mov
or
test
push
fmuls
pushf
test
loope
arpl
xor
fisttps
mov
sbb
mov
mov
and
imul
add
ficompl
lcall
ljmp
jle
das
jae
adc
sahf
hlt
fwait
mov
fdiv
enter
inc
or
add
xor
insl
movsb
push
push
push
inc
fcmovnu
outsl
dec
test
mov
orl
cmc
pop
jns
aas
gs
test
add
pop
jl
aas
xchg
mov
mov
pushf
rcrb
test
rorl
fidivs
mov
in
outsb
ftst
pop
subl
sub
bound
mov
in
outsl
into
cli
mov
adc
sbb
push
lcall
xchg
push
out
push
mov
stc
add
jl
add
xorb
test
sub
mov
imul
rorl
push
setne
sbb
or
push
cmovg
or
push
loopne
aad
sahf
sub
pop
push
sub
jnp
xchg
loope
pusha
cs
dec
popf
cmpsl
add
xchg
lret
lods
rorb
mov
push
mov
and
adc
pusha
jno
int3
pop
insl
fcmovnu
pop
ret
movsl
mov
inc
aam
and
cmpb
jne
mov
inc
mov
fcompl
clc
sub
int3
movsb
shll
mov
pushf
imul
mov
mov
out
dec
sub
nop
shll
xlat
rcll
movsl
inc
enter
mov
push
pushf
lret
jecxz
decl
aaa
out
adc
movsl
xchg
add
push
add
mov
mov
jne
js
repz
mov
lret
gs
rcrb
mov
and
inc
cmp
mov
ja
nop
das
pop
pop
std
inc
rcl
jmp
jae
xchg
or
pop
out
adc
in
les
mov
add
push
nop
leave
test
sub
or
int
lret
jecxz
jb
cmp
das
sahf
loope
ss
cmpsl
mov
mov
icebp
out
ja
out
push
rolb
mov
orb
jl
popf
add
imul
pop
adc
adc
xchg
loopne
js
and
inc
outsl
pop
pop
inc
push
lods
mov
lahf
cmc
jle
scas
ds
pushf
das
sub
and
into
cmpsb
pop
xor
sbb
ret
dec
bound
daa
scas
scas
icebp
mov
div
das
cvtpi2ps
inc
out
xchg
ror
dec
icebp
into
mov
sub
cltd
jg
jae
insl
mov
push
ja
sub
and
rcrl
in
insb
push
data16
scas
ljmp
inc
xor
pop
or
stc
sub
mov
lahf
out
sub
xchg
pop
lret
cmpsb
jl
fnstenv
fwait
bound
psllw
in
cmpsb
aaa
jbe
or
mov
lds
call
push
xchg
je
dec
dec
xchg
jmp
insl
fldl
xchg
cmp
lahf
shlb
sbb
pop
mov
stc
cmpsb
adc
call
std
pop
adc
xchg
xchg
push
aaa
push
sub
into
mov
xor
aad
fstpt
icebp
pop
fisttpll
scas
jae
mov
outsl
cltd
nop
fstl
mov
or
rcl
pop
insb
mov
aad
push
loop
lods
js
push
xchg
outsl
mov
pushf
and
xchg
xor
pop
pushf
mov
jge
sub
shlb
dec
pop
push
shlb
test
sbb
sub
int3
lds
pop
out
ja
sub
mov
add
jle
sti
xchg
lock
sbb
pop
add
negl
ror
fsubr
inc
mov
sarl
lahf
andb
stos
insl
negl
mov
outsl
into
cwtl
dec
mov
push
lret
pop
inc
xor
scas
lods
pop
fwait
sti
mull
movsl
mov
pushf
xorb
and
mov
mov
mov
lcall
and
mov
lret
and
pop
ret
dec
push
xor
cmpsl
adcb
add
push
or
mov
xor
call
cmp
mov
cwtl
lcall
adc
mov
das
pushf
pop
push
iret
ret
shll
test
adc
jbe
sbb
imul
mov
repz
mov
sbb
imul
sub
leave
xor
dec
adc
pusha
shr
jl
pop
xlat
cwtl
es
and
xchg
sub
fwait
xor
sub
bound
xchg
in
mov
fildl
mov
mov
scas
push
imul
rclb
dec
push
mov
subb
out
repnz
sub
pop
mov
stc
push
push
lret
push
mov
mov
loope
mov
inc
imul
xchg
xor
xchg
int3
inc
jl
jg
cmpsl
jmp
movsb
ljmp
movsl
repz
aam
xchg
clc
in
pop
mov
cmp
xchg
add
fwait
aas
cmp
stos
sub
lret
stos
push
pop
xchg
mov
lods
test
and
jnp
int3
subb
pop
xchg
add
or
mov
pop
and
stc
push
dec
scas
repz
sbb
gs
or
stos
in
pop
dec
push
mov
mov
ror
xchg
inc
mov
cmpsl
sbb
xchg
ss
daa
jge
pop
dec
pop
int3
lea
mov
cld
nop
cs
roll
xlat
insb
repz
push
pushf
cmovle
or
sbb
popa
aad
and
push
movsb
jbe
enter
imul
setno
push
pop
aaa
int
cmpl
lds
fs
xchg
mov
lock
movb
push
mov
loopne
sub
lock
pop
insb
rclb
enter
in
and
add
idivl
add
stc
mov
inc
xchg
push
fs
and
pop
repnz
or
into
mov
and
cmp
inc
xor
xchg
imul
and
js
movsl
and
clc
in
sub
ja
xor
pusha
ja
lret
push
bound
loop
pop
lret
mov
and
add
push
aaa
rol
lahf
aas
push
sti
popa
insb
in
sub
push
xchg
movl
out
into
or
imul
aaa
xlat
ss
mov
cmc
in
or
xor
lret
cwtl
loop
jl
xlat
pop
inc
mov
lahf
fwait
xchg
mov
int
cld
lods
int
mov
ret
pop
lea
mov
lods
pop
jo
std
mov
add
dec
lret
leave
sub
out
into
and
xchg
mov
fistl
andb
daa
sbb
lahf
arpl
ret
je
cld
call
mov
mov
jns
sbb
adc
mov
addb
addb
lret
addr16
pop
and
pop
inc
adc
dec
outsl
rcpps
lret
scas
inc
jge
popa
sbb
movsb
ret
pop
test
pop
cltd
mov
scas
xchg
lret
adc
sub
xor
or
mov
xor
gs
mov
addr16
mov
or
dec
movb
adc
imul
xchg
cmp
push
mov
pop
push
rclb
lds
lcall
xchg
inc
mov
adc
cmpsb
jp
mov
rol
mov
iret
in
mov
in
lret
xor
aad
stos
repnz
ret
jb
lock
or
shl
insb
push
stos
add
jae
or
leave
lcall
push
push
and
scas
and
jp
imul
add
popa
pop
xchg
lret
xchg
in
cmp
fcompl
add
adc
sbb
shll
imul
pusha
inc
leave
in
xor
inc
icebp
bound
adc
iret
gs
or
test
dec
sub
mov
xor
pop
xor
lock
jg
gs
pop
mov
fists
fdivs
sbb
into
cmp
js
dec
bnd
out
mov
cmp
add
out
jp
dec
add
push
in
jb
jle
icebp
push
add
lods
sub
stc
sbb
lcall
mov
xlat
dec
jbe
frstor
fidivrs
lds
sahf
jno
add
popf
dec
data16
sub
push
movsl
out
add
fistps
outsb
ret
mov
ljmp
dec
pop
clc
xor
testb
das
sub
inc
and
mov
mov
mov
xor
incb
repnz
jl
xchg
add
int
mov
mov
sar
aas
lret
xlat
add
xchg
dec
pop
test
scas
insb
xchg
inc
dec
fstl
mov
inc
xor
mov
xchg
je
pop
cmp
lahf
in
add
sub
jns
add
test
shll
loopne
fcmovnu
insl
xor
push
pop
fs
rcr
imul
int
sub
and
aam
push
xchg
sar
cmpsl
das
sub
mov
mov
mov
inc
iret
mov
outsl
lret
xchg
inc
push
sub
pop
pop
cmp
stos
mov
adc
imul
pop
jae
hlt
mov
adc
mov
ret
call
repnz
xchg
out
push
adc
inc
icebp
imul
and
lcall
int3
mov
in
lahf
andb
adc
jge
mov
adc
andb
cmp
xor
pop
mov
mov
sbb
mov
xor
aas
out
test
ret
add
in
xchg
das
sarl
ljmp
cwtl
popf
and
push
test
repz
loope
in
or
sub
mov
pop
nop
or
sub
ret
xor
cwtl
fwait
add
dec
out
and
mov
jae
jne,pn
and
mov
sti
and
data16
in
femms
push
loop
lret
dec
mov
outsb
orb
stos
add
push
mov
pop
fisttpl
dec
push
rcr
lods
sti
popf
xchg
ljmp
and
dec
mov
fistpll
and
inc
inc
arpl
push
push
shlb
mov
and
xor
loopne
rorb
aaa
inc
sti
jbe
mov
or
in
test
push
mov
mov
lret
pop
push
scas
push
jmp
or
add
pop
push
movsl
psubd
sub
ds
loopne
into
push
push
mov
jle
mov
and
push
jp
or
push
sbb
jae
inc
cmc
fdivrl
xadd
push
mov
mov
jns
xchg
push
imul
data16
lock
push
ret
cmp
loopne
push
insb
jno
xor
fldl
scas
js
inc
mov
pusha
xchg
frstor
mov
mov
inc
mov
rorb
dec
ret
push
cmc
pop
lret
js
pop
push
movsl
out
cmp
fsts
xor
outsl
sub
cltd
mov
testb
lods
fs
adc
iret
inc
cmp
and
mov
into
div
sub
fwait
mov
nop
or
jmp
add
es
std
test
pop
lret
dec
loopne
or
fstpl
mov
ljmp
cli
jbe
add
adc
lret
sbb
mov
or
lock
xchg
pop
sbb
iret
jb
mov
inc
xchg
mov
addr16
or
add
inc
inc
xlat
not
sub
pop
fadd
test
sbb
dec
hlt
jp
adc
fistl
lcall
mov
mov
mov
pop
fsub
jno
or
jne
dec
mov
leave
sbb
dec
lds
mov
jp
shll
pop
pop
addr16
push
popf
pop
cmpsb
mov
daa
repz
push
push
sub
xlat
int3
fldenv
out
insb
lcall
test
lods
fs
and
mov
add
out
mov
inc
dec
int
popf
popa
xchg
js
push
in
mov
in
insl
iret
outsb
cmp
add
jae
mov
adc
mov
inc
in
mov
mov
xchg
mov
inc
and
sbb
lods
arpl
out
or
cmpsb
mov
test
mov
mov
vgf2p8affineinvqb
mov
push
outsl
jbe
inc
mov
mov
mov
mov
mov
mov
je
pop
inc
jae
sbb
cmc
cmp
daa
popa
out
mov
test
push
std
mov
xor
push
push
popf
mov
add
shll
inc
and
or
pop
sub
inc
ds
mov
fsubrs
mov
addr16
jmp
stc
fadds
sub
push
ja
jg
sbbb
lods
fs
gs
aam
sbb
cmp
movnti
roll
inc
jae
add
not
xor
push
or
or
pop
mov
cmovg
sub
into
push
and
fidivrl
xchg
pop
dec
inc
cmp
hlt
mov
in
in
xchg
mov
in
mov
aaa
mov
sahf
mov
pop
lcall
ret
popa
shll
sub
ret
push
jae
mov
movsl
scas
and
fidivrs
ds
sub
push
sub
insb
pushf
jecxz
addr16
aam
jb
repz
hlt
mov
in
xchg
xor
lods
inc
cs
mov
clc
sbb
sub
jge
add
sub
jo
test
cmp
cwtl
sahf
outsl
dec
inc
push
jb
pusha
js
test
movsb
imul
push
out
shrb
mov
outsb
push
outsl
ja
pop
mov
mov
mov
cmpsb
xchg
adc
lret
fimuls
repz
inc
cmovbe
repz
iret
push
scas
movsb
mov
add
or
cmpsb
dec
sub
cwtl
add
test
sub
leave
movsb
mov
out
or
and
bound
aam
lea
pop
sbb
push
cmp
inc
xchg
inc
xchg
clc
fdivr
fwait
out
sub
lret
cmpsb
jb
movsl
fstps
mov
pop
pop
fwait
sbb
pop
mov
pop
push
inc
clc
add
pop
imul
jne
cmp
mov
push
fcomi
push
mov
xor
fidivs
mov
rorb
popl
jno
sbb
aad
jnp
out
adc
ja
call
fcoms
push
popf
mov
push
adc
aaa
mov
adcl
movl
xor
jl
daa
cmp
sub
pop
xchg
pop
adc
or
data16
cmc
test
sbb
insb
dec
addr16
cmc
push
sub
and
js
cmovns
movsl
mov
xchg
repz
and
push
push
or
dec
mov
push
cmp
mov
cmp
cs
lea
rclb
pop
rcrl
cwtl
or
gs
adc
jbe
push
fisubs
jmp
in
imul
in
xor
movsb
mov
cmp
shll
add
stos
pop
shrl
gs
pop
dec
mov
and
icebp
xchg
xor
hlt
dec
fs
sti
cmc
and
or
mov
inc
test
xor
cmp
push
hlt
movsb
adc
add
int
sbb
les
icebp
mov
sub
cmp
insb
or
lods
and
ja
xchg
or
aaa
push
and
add
imull
sbb
ret
insb
inc
les
or
icebp
cmp
push
out
cmc
fwait
inc
in
jp
add
stos
inc
pop
jns
jmp
mov
daa
in
lret
xchg
mov
leave
jmp
arpl
push
lods
sub
out
sbb
lea
or
ss
icebp
push
ret
lods
or
adc
enter
xor
and
or
pop
push
hlt
outsb
cld
dec
pusha
das
sub
ljmp
mov
out
cmpl
daa
ljmp
adc
fbstp
aas
jo
or
or
inc
mov
mov
cmc
rolb
or
mov
cmp
pop
arpl
xor
inc
clc
inc
fiadds
jp
fs
lock
sub
in
out
stc
ret
stos
add
dec
cmp
mov
ljmp
cmp
push
adc
fbstp
and
stos
xchg
jno
pushf
test
fimull
pop
lcall
int
mov
jo
lock
lahf
daa
loopnew
and
add
div
mov
cld
add
mov
jmp
mov
sub
daa
movsl
adc
lock
outsb
mull
and
lock
rolb
jl
cli
popf
inc
mov
loopne
pop
pop
sub
jmp
push
rep
test
cmpsb
rolb
adc
pushl
sub
and
hlt
mov
js
add
dec
sbb
inc
mov
mov
add
enter
add
pop
mov
xchg
pop
mov
nop
or
and
or
xchg
rcl
xchg
pop
stc
xchg
mov
ret
jns
js
call
sub
les
add
jg
jmp
leave
dec
adc
shlb
js
aaa
in
roll
sahf
xlat
mov
xor
js
inc
add
inc
cwtl
push
jg
outsb
mov
or
aaa
adc
mov
cs
xor
mov
sti
jmp
sbb
dec
shr
test
inc
lods
pop
jecxz
mov
imul
dec
inc
xor
je
pop
cmp
fistpl
pop
mov
pop
add
xchg
imul
ja
push
mov
in
pop
lds
dec
stc
cmpsl
out
jne
jmp
pop
inc
jl
mov
ffree
push
imul
and
clc
xor
or
es
dec
mov
test
sub
mov
mov
std
sahf
outsb
xchg
idiv
cmp
mov
dec
push
push
sarb
addr16
xchg
rclb
movsl
jl
cmp
daa
fnstenv
pop
addr16
int3
shl
stc
or
pop
inc
inc
sub
adc
clc
xchg
rcrb
repnz
test
in
gs
pop
pop
push
jbe
mov
test
sbbl
fildll
and
push
inc
imul
inc
or
sub
scas
icebp
push
insl
in
and
jne
ret
lods
push
in
imul
ljmp
xchg
inc
pop
sub
lods
push
jne
pop
shlb
sbb
cld
cwtl
push
mov
xchg
bound
dec
insb
sbb
xor
imul
in
or
push
cmp
xor
out
imul
adc
js
enter
mov
rolb
mul
std
add
test
sbb
pop
pop
mov
jnp
or
mov
pop
pushf
or
xchg
push
cmp
out
jnp
ret
sub
pop
popa
and
ds
je
mov
fcomps
in
stos
rcrl
sub
mov
dec
sbb
test
icebp
xchg
cmpsb
and
test
xor
das
mov
scas
push
jle
xchg
or
mov
popf
pop
dec
cs
inc
jg
sbb
cmp
add
inc
jno
bound
cli
jmp
neg
mov
cvtpi2ps
jno
ja
test
sbb
jb
imul
in
xchg
cmp
sahf
aad
iret
mov
ljmp
je
jbe
es
lock
pop
out
rol
bound
lds
fistps
jae
mov
xchg
pop
je
dec
scas
not
mov
mov
cmp
or
pop
adc
push
jne
arpl
adc
mov
lahf
mov
jno
out
daa
sahf
inc
or
inc
cmpsl
fldl
cmp
sub
jle
pop
cmp
out
or
inc
cmp
sub
inc
lcall
enter
cltd
fidivrl
test
mov
or
lcall
addr16
add
negb
mov
lcall
jb
cli
xchg
ret
mulb
push
jg
cmc
or
mov
popa
or
ja
jmp
mov
push
lret
scas
inc
mov
cmc
jnp
push
fidivl
rolb
arpl
and
icebp
insb
xor
sahf
jo
sub
inc
fstps
mov
aam
lret
jo
add
icebp
mov
and
inc
adc
pop
mov
cmc
in
cwtl
xchg
inc
arpl
outsb
fdivl
lea
or
mov
mov
notl
scas
cli
sar
xor
aam
mov
stc
dec
or
test
das
js
loopne
mov
call
mov
xor
mov
push
mov
ret
pop
sub
into
mov
cmp
xorb
dec
push
ds
add
scas
pop
adc
rorb
testl
cli
push
fmuls
scas
adc
fisttpll
xlat
cld
xor
test
test
cmp
imul
jmp
mov
in
pop
jne
pop
inc
xor
mov
sbb
lcall
outsb
into
and
lahf
sub
jo
xlat
mov
xchg
rorb
pop
stos
ss
rcll
adc
sub
pushf
sbb
in
jb
rclb
loopne
xor
testl
shr
nop
and
loopne
stos
stos
arpl
xor
aad
xlat
xchg
mov
int
out
jne
add
mov
sbb
jb
fisttpll
test
test
push
testl
mov
push
dec
test
pop
test
andb
sub
enter
dec
lods
roll
sbb
dec
addb
sub
dec
add
iret
sti
lea
ret
pop
shl
scas
ja
add
stos
ja
stos
jno
scas
push
push
adc
sarb
xor
jbe
push
ljmp
dec
hlt
dec
jae
lahf
jne
mov
push
mov
sub
xchg
and
sti
in
bound
out
push
xor
mov
push
dec
pop
jns
mov
out
out
sahf
jno
and
adc
push
rcll
xchg
inc
mov
lock
sub
adc
cmp
test
lds
aad
stos
notl
daa
les
adc
outsb
inc
pop
jnp
xor
push
fwait
aas
xchg
add
jle
nop
push
push
adc
int
push
popf
lret
repnz
pop
dec
push
or
popf
pop
push
and
outsb
psubq
or
cmp
mov
dec
jl
dec
cmp
dec
cwtl
outsb
dec
in
sub
es
rcrb
outsb
or
das
popf
add
sub
dec
mov
push
sub
bound
and
enter
or
sub
repz
cli
add
int3
repnz
shlb
cmpsl
add
xlat
mov
push
jne
cmpsb
icebp
rcrl
mov
jmp
or
cmpsl
xchg
mov
and
mov
mov
test
mov
fwait
lcall
lock
pop
sti
dec
fstpt
or
dec
push
cltd
sbb
jmp
jp
test
cmc
mov
inc
clc
cmpl
nop
sbb
sbb
pop
mov
dec
xchg
xor
cltd
mov
bound
ficomps
out
divl
cmp
cmp
mov
test
adc
lods
popa
adc
ret
into
push
mov
mov
jno
incl
loopne
in
push
push
xor
sbb
das
fdivs
cmp
ja
push
outsl
addr16
std
repnz
mov
repz
pop
lret
js
sbb
add
je
cltd
or
xchg
rcrb
mov
pop
mov
mov
enter
mov
or
sbb
pop
sbb
mov
and
push
sbb
inc
out
add
popa
pop
jmp
cwtl
aam
xchg
sbb
mov
arpl
push
dec
notb
mov
cmovae
jae
scas
inc
js
icebp
sub
jbe
scas
ss
js
push
push
out
xchg
xlat
in
popf
hlt
int3
stc
jbe
xchg
adc
push
mov
cmp
leave
pusha
sbb
std
dec
sbb
add
xlat
pop
jno
dec
jo
aad
mov
cld
inc
inc
lea
lods
push
daa
pushf
add
and
pop
mov
mov
inc
push
jmp
xchg
cltd
popf
xchg
jge
xor
nop
push
push
add
pop
les
sub
or
pop
or
pushf
shl
dec
mov
clc
and
pop
pop
testb
fwait
int3
or
icebp
loopne
cmp
or
sar
xchg
movsl
xor
sbb
add
add
scas
aam
cmp
in
dec
pop
mov
int
std
sbb
jmp
pop
lcall
and
sub
jnp
mov
insl
mov
sbb
popa
jo
fstl
ret
adc
jl
add
add
dec
sub
mov
pop
mov
mov
adc
mov
rcrl
adc
xchg
mov
call
mov
xchg
inc
mov
lock
pop
or
dec
ret
xor
add
testb
xchg
jge
push
fs
int3
inc
pushf
fisubrs
in
add
addr16
and
xor
test
sbb
push
andl
int
add
jecxz
sahf
sub
or
in
and
dec
aas
movsb
out
adc
push
mov
out
shll
mov
xor
lret
orl
and
mov
dec
inc
ficoms
lock
cmc
mov
and
daa
ljmp
xchg
push
loopne
and
idivl
ret
cs
idivb
and
popf
jbe
push
out
jb
addr16
aad
push
adc
sub
jl
or
testl
jl
and
stos
sub
cmp
gs
inc
pop
scas
aam
loope
lret
mov
in
add
jbe
adc
pop
scas
push
lods
pop
jo
mov
aam
fbld
lock
sti
mov
bound
enter
in
repnz
mov
pop
in
sahf
incl
insl
push
cltd
lret
mov
roll
mov
or
repnz
js
ret
pop
push
movb
lods
push
mov
cmpsl
into
insl
fldt
lods
ficoms
sbb
pop
jle
in
add
mov
push
mov
jle
rolb
dec
mov
in
stos
es
test
jae
negb
and
lods
push
int
lcall
jb
mov
xor
and
adc
mulb
daa
test
mov
dec
xchg
pop
cmp
xchg
cmp
push
jne
sbb
ds
ss
sarb
inc
xchg
bound
cmpsl
movsb
mov
push
jle
cmp
add
mov
jle
inc
adc
sbb
xchg
add
add
stos
or
ret
xchg
xor
and
js
add
fsubrl
cltd
ds
test
movsb
lret
daa
into
fstps
inc
adc
out
cmp
insl
sub
sub
mov
orl
pop
or
push
sub
out
test
int3
push
loopne
outsb
add
in
fisttps
cmp
sti
xchg
aad
inc
out
cmp
aad
repz
cmp
cmpb
ds
ficoms
loop
les
add
mov
lock
popa
push
bound
bound
jo
cmp
into
sub
mov
mov
add
int
jo
sbb
leave
into
inc
mov
cli
or
or
pop
push
sbb
lret
lret
faddl
popf
dec
and
adc
hlt
hlt
push
or
push
stc
data16
cltd
aad
shll
mov
xorb
add
xor
pop
cwtl
pop
lret
and
mov
mov
dec
js
xchg
aas
imul
mov
mov
aas
adc
inc
adc
xchg
sbb
xor
sub
jg
rorb
xchg
fildl
fsub
dec
push
and
dec
icebp
cmp
mov
negl
jp
cmp
pop
mov
xchg
push
clc
ja
pop
dec
push
dec
imul
mov
std
nop
jno
or
xchg
sbb
addr16
dec
stos
ljmp
aam
stos
xchg
outsb
outsb
jo
loopne
xchg
mov
loop
xor
sbbb
sbb
lahf
dec
cmpsl
push
or
push
cmc
xchg
sbb
cld
mov
xlat
shlb
outsb
fimull
js
insb
fisubrs
icebp
div
lds
xor
addr16
mov
mov
mulb
mov
inc
fwait
dec
xchg
jl
xor
pusha
lahf
dec
pop
pushf
push
cmp
dec
add
lea
fucomp
incl
int
ds
mov
decb
les
adc
mov
jo
test
add
pop
push
dec
mov
aas
or
inc
pop
mov
out
or
xchg
pmulhuw
leave
adc
insb
lret
add
xchg
arpl
aaa
or
xor
inc
in
adc
mov
orb
aam
dec
dec
cmc
inc
rclb
into
or
jmp
adc
and
lret
test
push
push
or
bnd
push
jns
cld
sbb
sub
push
pop
into
imul
jmp
push
cld
adc
mov
adc
and
mov
adc
mov
or
outsb
xor
cmpsl
popa
and
pushf
out
repnz
jle
sbb
aam
aad
add
and
int3
sarb
mov
inc
and
rol
sahf
mov
add
dec
mov
je,pn
insb
jae,pt
xchg
jbe
mov
mov
movsb
test
add
shll
mov
aaa
dec
cmp
jne
xchg
add
push
inc
adc
adc
aas
into
pusha
mov
repz
es
cmc
cmp
movsl
add
jp
cmpsb
add
jbe
je
xor
push
loop
jo
push
sbb
pop
push
mov
mov
push
imul
movsl
sub
stos
mov
loope
vpsllw
xchg
cwtl
shll
dec
loop
pop
mov
or
cs
sub
addl
cmp
mov
xor
or
lods
jle
cli
sub
leave
hlt
jbe
subb
out
ss
iret
inc
or
in
xor
daa
or
push
mov
inc
repnz
jmp
sbb
xchg
ss
jecxz
cmc
pushf
es
or
and
arpl
pop
out
inc
fadd
push
aas
lret
xlat
sub
push
clc
pop
aas
cmpsb
loopne
mov
add
cld
add
dec
das
in
adcb
and
scas
lods
inc
aam
movsb
xchg
fwait
mov
loop
adc
dec
rorb
in
and
push
pop
loope
jl
xchg
sbb
pop
sahf
pop
pop
and
das
lock
xchg
sub
jmp
lret
pop
cs
sti
cld
xor
add
arpl
lods
aaa
sbb
stc
xchg
or
ficompl
fsts
popa
pop
xor
nop
iret
add
sti
mov
jge
lahf
xor
leave
pop
sub
fadds
fdiv
nop
mov
mov
addr16
cmp
das
sti
cmp
xchg
sub
cmc
je
push
pop
cmp
xchg
sub
aad
xor
out
mov
dec
loopne
in
sbb
gs
imul
mov
adc
loopne
mov
rol
rcrb
js
sub
sbb
jge
and
andl
ret
ret
pushf
dec
inc
mov
xchg
out
cmp
rcll
scas
push
sub
pop
repnz
or
daa
cmp
push
shrb
inc
stos
push
xchg
mov
fcomip
lock
sbb
mov
ret
xor
push
les
xor
mov
aas
lcall
xor
cld
movsl
sub
in
jle
pop
loopne
or
mov
out
adc
outsl
and
adc
fwait
push
xchg
in
adc
push
or
aas
out
mov
xor
mov
jno
in
cmp
mov
imul
xchg
popf
pop
aad
pusha
xor
mov
cmp
iret
scas
or
push
arpl
call
imul
xchg
dec
mov
dec
adc
into
scas
push
jmp
loop
test
jmp
adc
sti
das
imul
addb
fcmovbe
shll
dec
inc
mov
inc
outsl
or
push
or
xchg
sub
sahf
dec
orb
pushf
loope
shlb
jno
cwtl
lret
push
loopne,pt
mov
insl
int
stos
xor
scas
test
das
mov
shr
cmpsb
mov
mov
rcl
cmp
lock
fisttps
cs
ror
or
sub
jmp
rcrl
push
outsb
into
inc
push
std
xchg
mov
mov
iret
mov
xchg
js
testb
pushf
scas
or
mov
add
out
xchg
iret
fldenv
or
pop
iret
adc
mov
mov
add
dec
and
xor
jb
inc
xor
jmp
sbb
push
dec
xor
pop
mov
into
xor
adc
ds
insb
iret
or
mov
mov
les
gs
pop
sbb
jp
mov
aad
in
adc
pop
and
add
movsb
repnz
pop
dec
hlt
push
ret
mov
xor
inc
addr16
add
and
dec
fwait
js
jge
test
or
inc
push
push
inc
pop
cltd
mov
fisubl
les
sub
pop
fsubrp
popa
pop
dec
mov
fbstp
xchg
or
cmp
mov
or
inc
dec
iret
xchg
mov
jbe
icebp
fbld
pop
cli
add
pushf
aas
or
outsl
mov
std
mov
jae
repnz
adc
inc
and
insb
mov
dec
jbe
adc
and
mov
or
lods
lds
sbb
fistpll
lods
cmp
cmc
pop
mov
js
mov
cmp
andb
dec
aad
sub
xlat
sbbl
sbb
inc
push
stos
and
pusha
and
aaa
add
scas
mov
test
jp
mov
enter
in
adc
fwait
jge
insb
fistpl
and
sbb
mov
in
aas
jne
leave
popf
out
add
cmpsl
and
cli
xchg
insb
insb
jnp
pop
cwtl
leave
mov
std
pop
sbb
test
clc
push
int
imul
mov
add
and
mov
push
aam
ds
dec
jo
pop
fdivl
jmp
andb
xor
cmp
shlb
and
adc
sub
push
sahf
pop
outsb
pop
mov
pop
jno
and
jns
mov
in
daa
lahf
mov
lahf
shll
xchg
jg
and
clc
and
repnz
int3
mov
repnz
cltd
mov
sar
jae
sbb
xchg
cmp
mov
xor
arpl
and
cmc
mov
mov
fdivl
mov
push
jge
xchg
fbstp
cmpsl
in
and
sub
or
jbe
add
dec
daa
dec
fldcw
mov
call
shlb
xorb
mov
loopne
and
xchg
mov
adcl
xor
and
lret
ss
mov
cmp
push
xchg
add
sti
out
mov
sub
sbb
lds
lods
mov
fs
sbb
into
adc
mov
idivb
mov
movsb
xor
test
xchg
mov
adc
js
into
lea
pushf
add
mov
adc
dec
lahf
jns
rcrb
mov
lcall
frstor
shll
xor
xor
leave
mov
mov
jl
inc
mov
mov
stc
sbb
sub
pusha
and
mov
dec
mov
ret
inc
icebp
inc
mov
push
push
sbb
add
or
lods
mov
arpl
mov
xchg
int
inc
mov
fnsave
dec
jbe
rclb
cmp
lahf
ljmp
mov
fstpt
cmp
dec
fs
mov
push
pop
pusha
mov
loopne
jnp
shll
lds
stc
jo
push
ret
movsl
push
add
repz
cmp
cmp
call
lcall
insl
imul
mov
ret
int3
and
xchg
sub
fimuls
adcb
bound
cli
fisubl
shl
push
psubsb
cmpsb
int
imul
push
add
outsl
shl
bound
jnp
adc
inc
stc
test
data16
pop
ss
test
or
scas
dec
outsl
sub
or
dec
mov
out
adc
adc
ss
sub
in
mov
scas
sub
add
push
push
push
cmp
popf
mov
dec
pop
dec
mov
adc
xor
add
jle
in
dec
adc
loop
bound
repnz
in
pop
fdiv
stos
or
mov
mov
repnz
loope
insl
add
out
xor
jo
push
push
cwtl
out
xlat
int3
ds
lcall
xor
add
mov
loope
cmp
and
cmp
or
mov
mov
outsl
or
clc
dec
cmp
sbb
xor
push
pushf
and
mov
sub
iret
aaa
lds
pushf
push
lcall
jl
test
orl
inc
lock
lods
push
scas
loopne
xchg
mov
je
cltd
mov
mov
jmp
xchg
movsl
fs
test
and
leave
cmc
adc
or
sbb
cmpsb
imul
cmc
xchg
js
jmp
inc
aas
mov
mov
cli
sub
test
cmp
cmp
out
xchg
lret
sbb
out
pop
fcmovnu
pop
jl
mov
add
ds
mov
add
adc
pop
clc
xchg
xchg
fwait
xchg
sbb
xchg
pop
mov
dec
fst
into
mov
repnz
movsl
mov
xchg
outsb
dec
cmc
push
xchg
sar
lods
ffreep
push
imul
out
or
pusha
stc
jae
imul
fnstcw
into
popf
sti
insl
sbb
popf
adc
dec
sub
incb
adc
inc
mov
jge
popa
push
xorl
adc
subl
cmpsb
pop
fbstp
lea
xor
mov
mov
jl
decl
cmp
or
mov
ficompl
ss
iret
icebp
cmp
mov
and
mov
daa
mov
cmp
sbb
dec
pusha
xchg
mov
imul
fsubp
xor
mov
adc
xor
out
test
add
clc
arpl
cld
push
adc
test
mov
xchg
cs
das
adc
pop
addl
dec
xor
cmpsb
or
test
lock
or
pop
or
fimull
or
frstor
fnstcw
insl
iret
ficomps
inc
jl
jl
jecxz
leave
lcall
cmp
or
cld
jno
cld
sub
dec
add
sbb
push
mov
insb
mov
jge
lods
or
lcall
add
fisttpl
clc
xor
push
xchg
mov
cli
jge
cld
clc
out
xchg
imul
shll
and
dec
or
pop
cwtl
cli
or
je
mov
sub
push
sbb
push
adc
jne
mov
and
or
cmpsl
ss
or
cmpsl
and
xchg
mov
test
push
int
icebp
mov
jne
cmp
and
sub
jle
mov
daa
mov
das
jle
pop
mov
out
rcll
into
cmp
dec
std
dec
out
mov
clc
mov
sub
pop
xchg
push
xchg
add
notb
dec
shr
adc
xlat
shrl
movsl
xchg
inc
push
ficoms
push
inc
int
adc
mov
jl
mov
push
test
pop
mov
std
cmp
jl
jmp
in
add
jne
imul
mov
es
mov
cli
cmp
ret
dec
call
add
mov
and
cltd
pop
jle
adc
insl
xchg
ds
sub
sub
xor
push
stos
psadbw
movsl
cmpsb
cmpsb
mov
push
jne
and
fldl
fwait
adc
faddl
js
lea
popf
and
push
mov
sbb
pushf
ljmp
push
loope
ficoms
or
cmp
sbb
outsl
jbe
dec
out
fidivl
dec
jle
xor
stos
fistps
mov
icebp
jle
out
insb
jp
or
cli
pop
faddl
incl
addr16
jge
pop
jle
lea
aas
adc
shll
inc
fildll
test
bound
data16
hlt
mov
sbb
push
dec
or
ja
stos
mov
mov
xlat
rcl
inc
aam
cmpsl
loopne
addb
xchg
insb
add
sbb
mov
inc
xchg
or
or
pop
jg
in
jne
imul
mov
adc
imul
out
cmp
cwtl
icebp
pop
das
and
inc
jae
test
mov
loope
mov
das
lds
shlb
cmp
sub
adc
sbb
pop
add
cmp
or
inc
test
ret
pop
ja
imul
fs
xchg
mov
sub
sub
mov
mov
int
pop
sahf
jle
test
dec
shll
pop
jle
sbb
in
push
mov
lods
push
jmp
xchg
mov
push
push
jae
and
ret
data16
push
pop
push
pop
jl
popf
sub
popl
iret
fcoml
xor
aas
pop
fsubs
in
clc
dec
inc
add
pop
mov
cmp
jno
pop
sub
add
movsl
outsb
cmp
pop
push
xor
js
cmp
repnz
push
add
xchg
mov
sarb
out
sbb
add
sub
add
inc
scas
ret
shl
ds
hlt
mov
call
xor
add
inc
xchg
adc
cli
sub
pusha
or
mov
sub
jnp
jbe
ja
sbb
out
sub
pop
xor
ja
push
jnp
loop
aam
inc
cmc
xchg
dec
movsb
and
xlat
push
cld
and
mov
xchg
cmp
push
outsl
popf
or
call
js
fidivs
sbb
xor
mov
fdivrp
add
push
jmp
into
test
mov
pop
push
rorb
sahf
jecxz
pushf
mov
fildll
push
jp
popa
cmp
in
fisubrs
mov
out
mov
jbe
cld
and
pop
push
or
or
dec
mov
mov
pushf
mov
test
push
xchg
roll
pop
or
mov
jb
outsl
iret
int
lock
or
push
rcrl
push
mov
and
mov
cmp
das
test
cmp
andl
cmpsb
cmp
adc
insl
push
xlat
mov
jp
push
in
in
cmc
bound
repnz
ret
repnz
cmp
push
fistl
sub
dec
scas
testl
jecxz
push
and
std
pop
dec
fdivs
sub
pop
movb
movsl
mov
and
jecxz
add
xchg
sarl
adc
jae
es
insl
in
mov
enter
dec
xchg
lock
adcb
jbe
mov
clc
test
icebp
mov
repz
xchg
jle
and
mov
xor
sub
filds
adc
xor
sub
mov
mov
pop
int3
mov
test
ss
sahf
xor
mov
jp
imull
add
adc
xor
js
incl
insl
aad
ss
daa
icebp
movsb
mov
sbb
aas
aad
out
addr16
sbb
or
cmp
xchg
rorl
push
mov
sbb
mov
ss
pop
fwait
pop
dec
push
mov
into
cld
int3
xor
prefetch
or
in
pushf
adc
hlt
jg
dec
int
jmp
inc
mov
sahf
not
std
mov
xchg
insl
add
stos
dec
sub
pop
popf
movsb
loope
and
pop
ja
aas
inc
sbb
repnz
jmp
insl
sub
xlat
mov
push
and
cltd
xor
pop
inc
lds
das
cmp
out
cmpsb
icebp
sub
xchg
sbb
arpl
xchg
add
sbb
inc
leave
mov
sarl
adc
xchg
imul
test
rclb
fucom
pop
in
lock
pop
lcall
mov
fstpt
mov
sbb
cmp
ja
adc
rclb
pop
dec
cmp
lods
js
fsubrl
add
xor
mov
das
sub
adc
xlat
fadd
mov
mov
jp
popa
mov
xchg
push
test
cmp
in
movsl
loopne
nop
jge
cmp
je
cmp
push
lods
ficoms
fldt
adc
popf
lea
cmp
pushw
data16
push
jmp
jecxz
push
mov
iret
cmp
pop
mov
stos
les
call
out
fistl
or
popa
pop
inc
pop
fmull
aam
cmp
das
cmp
mov
rolb
jmp
xor
dec
in
ror
hlt
scas
mov
nop
imul
rcll
push
test
xchg
adc
scas
push
ds
mov
arpl
in
or
enter
lods
mov
or
push
aas
xor
sbb
push
out
dec
or
clc
push
icebp
nop
jae
shll
jl
push
adc
xchg
sahf
mov
lods
mov
cmp
out
scas
push
mov
fnstcw
add
jmp
mulb
leave
push
jge
mov
movsl
repz
add
xchg
xor
rorl
loope
sbb
mov
sbb
dec
shll
mov
sbb
popf
xchg
je
xor
adc
outsl
sbb
adc
push
leave
pop
repnz
mov
setno
jbe
mov
xor
outsb
add
enter
jmp
or
outsb
bsr
push
loope
sbb
imul
adc
mov
cmpsb
adc
pop
jmp
repnz
inc
testl
mov
fists
popf
adc
or
jge
cmp
add
scas
adc
nop
adc
out
pop
mov
adc
addr16
jmp
outsb
adc
xchg
push
aaa
test
out
popf
mov
mov
adcb
mov
popa
into
push
mov
mov
inc
ret
fwait
dec
add
cmp
sub
pop
fistpl
dec
inc
and
movsb
nop
add
jcxz
cmpb
iret
or
ja
push
xchg
popf
push
pushf
dec
cmpsb
inc
and
jne
int3
loope
pop
xor
pop
in
clc
add
aam
mov
mov
xor
paddsw
aad
pop
sahf
fnstcw
mov
scas
xor
or
mov
xchg
and
sets
jmp
cmp
lret
dec
lcall
jbe
push
roll
push
mov
or
clc
fld
rorl
xchg
push
inc
sub
dec
adc
xor
pop
lret
das
cmpsl
cmp
mov
add
mov
lahf
out
inc
and
dec
icebp
movl
aaa
pop
je
mov
mov
sbb
mov
inc
in
xor
adc
jno
mov
ja
or
call
shr
pop
mov
popf
rcrb
movsb
jno
andb
dec
push
lea
in
add
ret
cmp
jl
adc
gs
sahf
or
inc
push
sahf
cmovl
in
dec
cmp
mov
cmovb
ret
push
into
int
mov
test
xor
lods
test
pop
lret
push
pop
pop
rorl
jge
inc
loope
sub
jns
fs
popa
daa
push
sbb
test
scas
xchg
mov
mov
mov
push
lods
fwait
jge
dec
push
out
mov
testl
aaa
push
cs
sub
fisubs
adc
or
inc
inc
sub
add
pop
add
rolb
iret
out
xor
adc
push
push
shl
movsl
dec
pop
push
lret
data16
push
mov
es
inc
pop
sbb
dec
jnp
mov
enter
push
mov
movsl
xchg
daa
sub
xor
xor
mov
mov
sub
insb
inc
push
push
pushf
xchg
fldl
push
ret
daa
icebp
push
jno
mov
ds
jg
mov
add
lahf
imul
sbb
or
nop
push
mov
pushf
pop
pop
pushf
cmc
push
fstpl
xchg
pop
push
test
int3
test
sbb
stc
xor
mov
loope
popf
sub
lahf
fadds
or
imull
idiv
push
les
add
mov
shl
jmp
mov
loopne
rcl
jbe
ffree
pop
mov
fdivrl
add
lock
in
and
out
stos
movsl
push
mov
cld
lods
fwait
jno
aas
out
xchg
and
stos
pushf
fcmovnbe
xor
sahf
aaa
loopne
into
adc
and
mov
lods
sti
cmp
sub
imul
in
pop
decb
je
int3
mov
mov
inc
rcll
out
push
shrl
pop
call
sbb
add
sub
xor
gs
lcall
add
cmpb
sub
icebp
sub
outsl
cmp
dec
adc
shr
add
xor
pushf
gs
aas
push
cmpsl
xchg
test
fnstcw
xchg
mov
daa
insl
jno
jae
jp
or
inc
push
cltd
xchg
pop
into
ret
and
cmp
push
fsubrp
ljmp
test
sbbl
cli
adc
mov
xchg
cmpsl
in
sbb
push
dec
push
jle
push
xchg
aas
mov
add
jge
and
stc
outsl
pop
inc
les
ja
mov
test
ss
movsl
std
adc
inc
dec
fstl
ret
jne
in
rorl
xorb
in
xor
ss
adc
and
push
mov
adc
push
imul
push
or
mov
je
divb
mov
sub
mov
xor
loopne
pop
mov
mov
jp
xor
dec
pop
shll
inc
enter
cwtl
sbb
push
dec
lret
dec
push
xchg
movsb
ret
aam
pop
cli
push
out
ror
add
push
cmovb
dec
mov
cmpsl
mov
and
popf
xor
push
push
jnp
inc
repnz
insl
adc
out
aad
outsl
je
shrb
int
dec
xchg
push
jp
sbb
mov
aaa
dec
and
push
outsb
out
hlt
xchg
leave
mov
ficomps
addl
cmc
add
mov
out
sub
popf
jecxz
sub
scas
outsb
or
inc
xor
sbb
mov
dec
push
cmc
popa
repnz
or
mov
addr16
xchg
inc
xor
rorl
aam
push
dec
cmp
test
or
test
pusha
mov
repnz
jo
pop
mov
enter
aaa
ljmp
pop
jne
btc
cwtl
sub
and
sbb
adc
fmul
hlt
mov
hlt
or
sbb
jnp
loope
loope
lods
stc
arpl
cmp
xchg
add
shll
fsubrl
lcall
movsl
aad
dec
jge
mov
jge
in
cmpsl
fisubrs
mov
fidivrl
fsubrl
xchg
test
add
xchg
mov
leave
jnp
pusha
pop
push
or
and
in
pop
cmpb
enter
xchg
adc
pop
loopne
cmp
pop
pop
sbb
mov
jle
push
adc
lods
daa
pop
rcrb
push
jle
xchg
jmp
sub
fsubr
mov
cmp
sub
jge
jmp
out
lods
out
jge
xchg
dec
shl
test
loopne
and
push
scas
lea
cwtl
sub
callw
push
push
shlb
inc
mov
icebp
nop
push
push
addr16
sbb
mov
dec
iret
sub
push
pop
movsl
ret
es
sbb
push
push
test
xor
push
hlt
addl
xchg
inc
mov
test
or
ds
adcb
mov
insb
icebp
repz
shll
clc
mov
cld
enter
in
and
les
dec
mov
jo
mov
ret
test
pop
push
dec
xchg
inc
jecxz
test
bound
push
jmp
sbb
lds
xor
or
mov
dec
mov
inc
test
dec
or
cs
adcb
test
ljmp
lea
jg
and
int3
mov
xor
jo
mov
sub
mov
jmp
lods
jp
mov
addl
sub
sbb
mov
sub
push
stos
pushf
jo
lods
add
sbb
inc
lods
loop
push
jmp
mov
movsb
add
adcb
jle
shlb
mov
les
inc
test
lods
fildl
nop
enter
cld
es
mov
adc
mov
mov
shll
aad
push
push
das
push
pop
mov
push
cmp
cmpsb
adc
add
mov
jge
and
int
mov
lcall
loopne
data16
es
nop
inc
add
fsubl
mov
mov
lea
lock
adc
jge
fiadds
pop
adc
jo
fidivs
lret
fcomp
sbbw
insb
enter
lds
rorl
push
js
popa
push
imul
mov
pcmpeqd
inc
mov
test
daa
in
mov
jg
push
jns
faddl
repnz
sub
cmpsb
jecxz
lahf
fsts
mov
pop
or
mov
insl
cmp
data16
out
or
or
daa
in
inc
mov
and
enter
mov
iret
aad
adc
mov
arpl
sub
out
mov
leave
ds
sbb
mov
fwait
arpl
mov
mov
mov
je
sbb
or
pushl
xor
imul
scas
ffreep
or
nop
and
fsubl
popa
f2xm1
aas
int
cwtl
pop
popf
sbb
xchg
je
sbb
popf
cmp
lret
pop
push
hlt
test
cltd
pop
push
fstpl
or
pusha
cli
repz
adcb
out
jno
dec
dec
aad
or
cwtl
xchg
inc
lock
nop
or
clc
sbb
sub
sub
mov
orl
popa
dec
mov
jmp
movsl
jge
stos
dec
add
ret
and
test
sbb
dec
mov
add
and
cwtl
xchg
outsl
shrl
inc
ljmp
xor
scas
dec
add
fidivrl
inc
pusha
clc
arpl
mov
bound
lret
mov
popf
das
add
call
cmp
lcall
std
iret
das
cmp
jno
and
lods
and
enter
mov
dec
out
dec
jo
outsb
bound
or
pop
xchg
out
scas
inc
gs
inc
push
jecxz
and
addr16
loopne
dec
jl
fwait
sbb
lahf
fcmovb
mov
movsl
adc
adc
test
xchg
nop
movsl
inc
sub
mov
cmpb
mov
negb
popa
pop
jo
add
push
sbbl
sarb
mov
lock
add
dec
xor
loope
pop
fcoml
pushf
icebp
pop
imul
mov
push
bound
jo
mull
sbb
xchg
mov
into
dec
mov
adc
pop
mov
imul
push
shll
je
dec
dec
dec
pop
lahf
lcall
xchg
ret
sbb
loopne
movsb
inc
jae
or
mov
mov
lods
ja
lret
push
dec
movsl
ds
xor
std
aas
sarl
jg
xchg
add
adc
icebp
mov
aam
notb
mov
adc
fsubs
add
xchg
xor
jle
xchg
lea
mov
loopne
ret
jle
jmp
int3
adc
jecxz
xor
dec
xchg
push
inc
jns
adc
sbb
loop
mov
or
cmp
out
cmp
loop
ret
push
jnp
sbbb
mov
subb
or
clc
mov
pop
sub
jecxz
mov
inc
jge
mov
movsl
sub
sbb
sbb
sar
mov
jnp
mov
ja
xor
or
int3
sub
and
dec
subl
cltd
sub
in
pop
in
jl
xchg
jae
int3
dec
jmp
ljmp
inc
ds
and
jbe
in
lds
mov
insb
mov
or
or
xchg
stos
stc
shll
sbb
lock
imull
div
clc
or
adc
mov
stos
sqrtps
dec
mov
adc
and
mov
outsl
pop
cwtl
mov
pop
pop
jbe
int
inc
test
clc
dec
mov
inc
pushf
scas
push
sbb
clc
stos
sbb
dec
scas
mov
mov
jns
lods
jge
mov
xor
and
sbb
iret
pop
dec
mov
div
cmp
std
jmp
mov
cltd
bound
push
jmp
push
push
pop
inc
out
loop
cwtl
addb
sbb
add
or
jg
or
movsl
mov
js
mov
cmp
mov
out
lcall
cmpsl
into
push
jb
into
dec
mov
inc
outsl
mov
push
int3
xlat
outsl
out
jno
and
xor
testl
lods
gs
lret
pop
mov
js
addb
cli
fwait
push
roll
daa
jmp
xchg
int
or
jl
and
push
lods
stc
imul
xchg
and
sub
hlt
or
inc
push
or
sbb
es
enter
inc
push
jle
adc
push
and
in
outsl
jns
xchg
inc
outsb
insb
cli
loopne
xchg
imul
scas
adc
fstl
adc
xchg
fs
invlpg
iret
jb
loopne
imul
loop
sarb
mov
dec
sub
add
lahf
push
inc
mov
pop
enter
adc
fidivrl
cmpsb
inc
lret
sub
dec
aaa
xor
data16
add
das
add
xor
cmp
pushf
and
pop
pusha
cmp
lds
add
or
daa
in
addr16
sbb
jg
lret
lret
push
push
mov
xchg
idivb
inc
push
xchg
push
pop
dec
inc
xchg
aas
shll
mov
mov
rclb
add
mov
out
testb
in
repnz
test
outsb
dec
or
mov
loopne
xchg
xor
fcompp
jns
aam
adc
lret
jle
roll
mov
cltd
in
hlt
cmpsb
and
xor
xchg
adc
xor
outsl
xchg
jbe
fwait
cli
mov
dec
mov
ja
es
mov
push
xlat
pushf
cmc
mov
out
subl
sbb
imul
call
decl
je
jmp
ljmp
sub
jo
pushf
push
pop
inc
aaa
xorl
frstor
std
or
pushf
dec
mov
andl
mov
int3
push
cmpsl
cmp
pop
inc
ss
scas
cmpsb
insl
push
cmp
mov
add
mov
test
inc
lods
cmp
adc
mov
dec
mov
adc
lret
mov
in
mov
xchg
xor
out
pop
mov
push
shrb
iret
jne
xor
movb
jno
or
fisubrs
push
sbb
mov
mov
incb
cmp
loope
mov
pop
fmul
test
adc
cli
inc
ljmp
and
adc
scas
mov
rcll
imul
cltd
les
fwait
dec
fisubrl
lahf
sarb
jo
sub
imul
stos
mov
adc
pop
aam
sbb
je
mov
addl
shlb
fisttps
pop
mov
fbstp
jnp
in
xchg
push
mov
push
aam
adc
in
lods
inc
pushf
mov
xchg
cltd
adc
pushf
adc
xchg
and
or
imul
mov
pop
data16
cs
mov
push
insb
or
mov
or
aaa
cmc
scas
movsb
enter
cli
jecxz
xchg
inc
mov
in
lret
xchg
mov
sbb
shl
push
mov
test
inc
push
dec
sbb
lret
xchg
cmp
xchg
repz
mov
inc
sbb
daa
lods
js
pop
sbb
lods
xchg
scas
std
adc
outsb
push
pop
jecxz
mov
mov
nop
dec
imul
inc
and
orb
lahf
sahf
jno
fisttpl
add
shlb
inc
mov
pop
out
sarl
hlt
or
es
xchg
daa
pop
sbb
inc
int3
xor
xor
fstl
imul
in
mov
rcrl
and
lret
push
fsubrp
mov
imul
idiv
xchg
push
lods
inc
xchg
pop
mov
jmp
inc
xor
sahf
stc
sub
and
xchg
mov
cmpsb
and
nop
push
jns
xor
jmp
xor
outsb
cmpsl
sbb
xchg
les
mov
jb
lds
sub
insb
das
push
fdivs
hlt
rorb
mov
xchg
fsubrl
scas
pusha
or
xor
scas
adc
mov
popf
rol
xor
cli
fsubrl
test
mov
pop
mov
jb
mov
cmp
inc
mov
and
call
iret
mov
jp
mov
sub
movsl
xor
movsl
iret
daa
mov
xlat
adc
mov
aad
rcll
or
insl
cmp
jl,pn
in
lods
outsb
out
push
mov
adc
and
shlb
ss
stos
mov
mov
iret
inc
inc
xor
cmp
and
push
sub
sbb
es
push
pushf
repnz
shl
outsl
cmp
xchg
fs
std
pop
ss
cmp
pop
mov
scas
loopne
push
cwtl
sbb
cbtw
mov
pop
fstpt
push
push
mov
in
repnz
xchg
inc
xchg
outsb
xchg
pop
das
fsts
fdivrs
push
sub
lahf
mov
int3
loop
pop
jae
clc
jp
push
cmp
cmp
test
sbb
xor
sbb
push
popf
mov
add
jl
xor
xchg
cmp
push
jo
xor
bound
in
inc
scas
jecxz
pop
insb
shlb
popf
loope
push
mov
into
aas
fs
sub
or
cmpsb
pop
outsb
jnp
jae
arpl
lahf
nop
sbb
addb
xor
xor
fcompl
int
sub
mov
push
lods
das
outsl
popf
mov
sub
icebp
jb
inc
ljmp
sub
mov
lret
dec
and
sub
mov
inc
sbb
daa
sbb
sub
ret
inc
or
rcll
out
inc
push
mov
arpl
movsl
xchg
add
dec
pop
cli
xchg
lahf
test
es
add
stc
out
or
shlb
push
addr16
in
xchg
xorps
inc
jnp
pop
mov
lahf
flds
and
data16
iret
sti
pusha
jns
mov
fs
fldenv
fs
insl
push
fwait
neg
int
inc
add
sbb
adc
gs
cmp
fmul
xlat
jbe
xchg
pusha
and
inc
mov
push
xchg
sbb
clc
xlat
add
fidivs
and
jp
and
repnz
sbb
sub
xchg
mov
mov
inc
lds
cmp
test
xor
pushf
scas
mov
mov
sahf
cwtl
shll
mov
mov
push
aad
and
mov
add
sahf
fmull
js
loope
push
push
test
mov
outsb
inc
cmp
dec
loop
bound
cmp
cs
loope
cli
jb
mov
insb
inc
in
fs
ja
cmp
icebp
pop
xchg
rcl
xchg
fdivl
jb
inc
faddp
sbb
add
cmp
repnz
xor
loope
pop
mov
push
sub
jecxz
gs
inc
aaa
push
and
insb
pusha
cmp
rolb
adc
inc
fwait
sbb
cmp
push
imul
xchg
push
ss
and
sbb
add
inc
sahf
fdivrl
js
ss
cld
ljmp
jle
xor
popa
les
fmuls
push
push
sub
add
test
and
es
sbbl
lahf
inc
xor
mov
add
in
xor
adc
rolb
xor
shlb
dec
push
icebp
bound
test
mov
xchg
xchg
stos
scas
test
sti
lcall
loop
imul
insb
cmp
mov
jb
clc
syscall
lret
xor
xor
adc
sahf
inc
pop
and
scas
xor
testl
lcall
cmpb
rorl
xor
data16
lret
xchg
pop
sti
leave
pop
fadd
std
ljmp
xchg
cmpsb
push
xor
jge
out
pop
incl
int3
mov
sbb
xor
ds
inc
pop
stos
or
push
jno
or
mov
dec
sbb
or
jno
xchg
pop
jp
in
xchg
int3
add
mov
hlt
outsl
fwait
push
dec
lcall
ljmp
cmp
cmc
push
mov
cmpsb
aas
adc
aas
div
jmp
loopne
dec
lea
popa
test
push
adc
adc
jbe
repnz
fs
ret
sbb
aam
pop
or
mov
in
push
out
notb
ds
mov
jo
inc
add
lods
addr16
rcrl
testl
dec
gs
sbb
loop
insl
aas
cld
fdivp
mov
fcomps
xlat
lods
push
xchg
adc
fldl2t
and
pop
inc
push
dec
adc
jl
xor
negl
push
outsl
es
cld
pop
mov
ret
mov
push
lock
das
cld
jle
cmp
loopne
jbe
mov
cld
clc
jb
xor
mov
push
xor
outsb
movb
pusha
and
sub
push
mov
mov
and
mov
push
sbb
ljmp
mov
orb
fstpt
mov
adc
inc
hlt
aad
mov
ret
out
inc
pop
push
and
std
daa
xchg
ret
mov
je
mulb
ret
dec
inc
mov
xchg
xchg
aad
imul
repnz
cmp
js
push
lods
fbld
add
out
mov
inc
clc
loopne
mov
lds
clc
adc
pop
js
adc
addr16
gs
mov
daa
and
repz
adc
ret
in
cli
pop
rolb
arpl
xlat
divb
push
sahf
fwait
inc
inc
mov
mov
mov
adc
inc
add
scas
jbe
dec
pop
jae
pop
sub
inc
nop
cmp
data16
xchg
xchg
or
jnp
pop
in
push
dec
mov
stos
xor
gs
les
jo
xor
jbe
aad
clc
out
bound
fwait
jp
jle
push
cltd
imul
dec
jnp
push
mov
jmp
popf
add
push
push
mov
jg
outsb
leave
xchg
mov
mov
jmp
add
inc
mov
rcr
fildl
dec
daa
cmpsl
push
and
dec
movsl
push
aas
or
lock
inc
icebp
lods
mov
mov
add
sahf
pop
dec
xor
jnp
inc
lock
scas
xor
nop
lret
mov
jg
and
pop
mov
mov
and
pop
mov
or
push
add
lret
gs
xchg
test
sub
in
fwait
cltd
cmp
cltd
mov
ret
sub
push
pop
cmp
or
fdivrl
mov
push
stos
enter
imul
or
jns,pn
inc
fstl
adc
mov
and
sbb
xor
test
mov
popa
mov
sub
fwait
lods
leave
movsb
mov
add
lret
inc
pop
or
pusha
adc
jl
pop
call
rorb
cli
hlt
pop
loop,pn
jo
push
jp
dec
jbe
xor
pop
dec
adc
xor
loopne
out
mov
lret
xor
loopne
je
and
testb
into
cmp
push
xchg
sub
shrb
xchg
mov
cwtl
push
les
cmpsl
hlt
add
shl
mov
shl
add
and
rcrl
inc
xchg
mov
and
sbb
and
dec
xchg
loopne
push
mov
sarl
push
xlat
jae
sub
add
sti
mov
cld
mov
sbb
rcrb
jmp
jno
loope
sub
jno
push
mov
dec
jne
mov
mov
shr
out
inc
arpl
cmovg
movsl
and
nop
js
insb
push
inc
cmp
xchg
test
push
cltd
mov
out
cmp
or
pop
mov
adc
ret
repnz
aad
sti
enter
lret
jecxz
ret
push
lods
dec
scas
cmc
cmpsl
dec
nop
sub
cmp
arpl
ret
or
lahf
lods
scas
push
out
repz
xlat
mov
jb
aam
sub
cmp
fs
iret
push
fwait
add
ja
lahf
mov
push
pop
rol
sbb
inc
pop
lods
dec
add
inc
ret
xchg
cli
insb
cmp
add
les
cmp
pop
aaa
das
sbb
cmpsl
cmc
ss
arpl
paddb
jno
stc
add
sarl
std
push
call
roll
xchg
xchg
into
cmpsl
es
and
fcom
movsl
scas
aam
or
push
rclb
jle
dec
ljmp
push
stos
push
les
stc
cmpsb
rcll
jne
lock
js
scas
je
push
jmp
lret
push
lret
stos
adc
pushf
sbb
pop
cmp
inc
or
loopne
cmc
pop
sub
aam
mov
in
adc
sbb
mov
mov
out
in
fwait
inc
add
mov
fs
cmp
push
and
mov
sti
mov
std
sbbb
or
test
mov
mov
imul
push
xor
sahf
repz
fnsave
or
mov
or
xchg
adc
test
lods
mov
sbb
flds
aas
or
inc
dec
shrl
pusha
fs
iret
lcall
xchg
repz
je
jae
outsb
out
lret
jp
lret
add
test
xchg
ljmp
push
and
or
js
push
js
jnp
jno
sahf
mov
adc
mov
xor
mov
add
out
push
fistl
jp
insb
mov
gs
outsl
xchg
ret
dec
ljmp
scas
frstor
cmc
hlt
scas
in
jns
cmp
push
mov
test
out
dec
call
in
jl
iret
ljmp
pusha
mov
movsl
aaa
hlt
push
popa
ja
mov
cmpsb
sub
jge
dec
xor
inc
lret
inc
xchg
or
dec
and
adc
xchg
pushf
sub
insl
std
mov
pop
sub
cmpsb
inc
xchg
jae
lahf
in
scas
ror
push
pusha
and
inc
push
inc
xchg
add
nop
add
icebp
mov
inc
jmp
in
pop
loop
xchg
xchg
dec
nop
test
mov
clc
sbb
popf
ftst
iret
inc
cmp
xor
lods
inc
adc
pop
aaa
cmp
and
pop
in
loope
xor
fwait
out
test
dec
mov
jmp
shll
mov
fbld
int3
cwtl
inc
dec
mov
sbb
test
scas
pop
mov
dec
cmpsl
arpl
andb
cmp
push
hlt
jae
push
jp
xchg
in
repnz
sub
jmp
lods
cmpsl
jo
cld
mov
into
nop
and
nop
out
roll
fwait
cs
popa
pusha
jmp
fs
or
lods
cld
and
data16
push
std
sub
in
inc
aas
cmp
imul
fistpl
sbb
push
scas
jge
and
push
inc
dec
inc
pop
mov
and
pop
decl
mov
fwait
jb
pop
imul
dec
push
jne
cs
shlb
cmp
test
adc
scas
and
jp
mov
inc
sbb
lcall
daa
test
aas
dec
sub
xchg
fcmovb
loop
pop
lock
adc
sbb
adc
cs
inc
adc
jle
imul
cmpsl
adc
mov
cmp
mov
cmpsb
outsb
adc
add
stc
cmp
fstp
push
in
pop
xor
andb
jne
test
xorb
adc
movsb
stos
enter
sub
or
fadds
js
adc
pop
sbb
lcall
mov
into
mov
jecxz
jl
mov
jmp
loop
sbb
and
sbb
leave
push
inc
pusha
sbb
lret
ss
iret
testb
loop
add
and
push
cmc
std
inc
mov
hlt
adc
cwtl
mov
mov
cmp
sub
xchg
cmc
jo
pop
outsl
out
push
rcll
mov
jmp
ds
and
das
sbb
and
mov
dec
lcall
push
mov
xchg
rorb
sbb
or
pushf
lock
push
xchg
xchg
in
lds
pop
imul
add
scas
aam
xchg
cld
adc
xchg
xchg
lds
sbb
and
fstps
leave
dec
mov
leave
ss
push
das
mov
fcoml
mov
dec
in
sub
dec
loopne
inc
xlat
sahf
push
and
sbbl
in
fcmovnb
lea
mov
dec
pusha
jecxz
and
sbb
clc
xchg
rorl
xchg
call
jno
mov
aas
test
insb
push
add
lahf
cli
jle
or
push
mov
ret
xorb
imul
mov
pop
mov
dec
das
sahf
leave
fsubrs
ret
sub
push
cli
push
pop
jne
mov
mov
mov
imul
mov
mov
test
test
push
pop
lea
lea
fnstcw
iret
add
pushf
dec
push
adc
push
icebp
gs
push
icebp
jmp
mov
outsb
js
mov
ret
ja
fwait
push
pop
cmpsb
inc
push
mov
imul
fs
fnstenv
jo
pusha
idivb
movsb
jns
xor
dec
push
jb
sbb
inc
sub
fnstsw
pop
addr16
out
lods
test
fs
push
xchg
mov
ljmp
mov
leave
cmp
cwtl
push
lods
dec
aam
rcl
mov
adc
cmp
ss
cmpsb
add
fs
pop
mov
mov
popf
mov
movb
cltd
std
sbbl
movsl
sbb
dec
or
adc
mov
lcall
data16
ret
sahf
int3
insl
and
das
shrb
jecxz
aaa
popf
inc
dec
mov
inc
stos
xchg
cmc
hlt
loope
cmpsb
lret
mov
mov
lahf
push
addr16
sub
int3
ljmp
movsl
dec
mov
insl
jl
push
cmp
sub
mov
push
ficomps
sub
pop
xor
push
cmp
jns
inc
loopne
sbb
mov
sub
test
add
lret
out
pop
hlt
pop
stos
setnp
push
rolb
sbb
pop
xchg
idivl
add
in
cltd
mov
inc
mov
xchg
push
daa
lds
movsl
jnp
mov
in
mov
negb
movsb
test
nop
and
dec
mov
or
dec
or
in
jo
andl
xor
jg
pop
lea
data16
or
cmp
dec
inc
adc
push
sub
ds
cs
pop
icebp
es
movsl
mov
sbb
movl
leave
hlt
pop
adc
pusha
pop
fadd
fisubrs
cmp
out
sti
out
les
dec
pop
pusha
pop
xchg
and
cwtl
call
aaa
repz
scas
cmp
lcall
adc
adc
mov
mov
lock
push
mov
cmp
and
mov
dec
jne
mov
aam
cmc
dec
inc
je
push
in
xor
loop
mov
push
jae
jbe
adc
aam
xor
in
mov
push
icebp
sar
xchg
mov
insl
lock
mov
dec
filds
aad
cli
push
addr16
mov
mov
insl
xchg
add
mov
jle
scas
inc
or
mov
test
sub
xlat
add
mov
popf
push
dec
rorb
dec
push
xchg
mov
sbb
jmp
loope
orb
scas
dec
dec
pop
adc
inc
pop
std
les
repnz
loop
in
xor
mov
xor
sbb
imulb
sub
dec
push
pop
sbb
popa
push
mov
xor
hlt
je
fcmovnu
bound
cld
test
iret
int
cs
xchg
mov
inc
mov
std
jecxz
fnstsw
inc
jg
pop
pop
arpl
push
sub
add
outsb
es
jg
cmpsb
es
cli
popa
andb
callw
js
pop
adc
loopne
imul
cwtl
scas
or
mov
in
pop
and
cmc
repnz
cs
or
xor
mov
arpl
in
dec
lods
imul
in
cmpsb
leave
mov
add
in
nop
add
hlt
and
test
cmp
jae
jo
dec
dec
and
addr16
pusha
hlt
jb
mov
add
and
into
pop
lods
leave
arpl
scas
pop
arpl
stos
add
movsl
jg
les
or
movsl
gs
shll
test
sbb
ja
adc
enter
mov
fildl
add
std
push
fwait
in
adc
hlt
pop
push
mov
pop
std
or
and
add
test
mov
mov
movsl
lret
cmovno
dec
push
loop
pop
cs
xor
std
and
mov
dec
pop
xchg
outsb
mov
scas
lcall
lock
inc
sbb
xchg
sbb
lret
dec
push
out
pop
aam
pop
test
cmp
xchg
push
pop
shlb
jp
mov
push
bound
out
adc
in
mov
and
push
addr16
push
mov
loope
sbb
mov
fnstenv
out
or
push
rorl
mov
jne
xlat
mov
inc
mov
imull
mov
sub
loop
cmpsb
shl
push
push
shlb
lea
jl
sbb
cmp
testl
int
daa
jle
sub
jns
test
dec
push
lret
and
push
jmp
mov
call
enter
jecxz
clc
mov
add
mov
ss
xchg
dec
out
jne
repnz
pop
rcrl
xor
jb
sahf
hlt
es
lock
addr16
fmul
outsl
mov
mov
mov
nop
sub
inc
add
in
popa
sbb
movsb
stos
scas
lods
bnd
loope
fimull
jne
lahf
xchg
xchg
int3
xchg
lds
mov
or
aas
outsl
adc
test
inc
add
mov
hlt
jbe
dec
into
inc
jle
insl
fs
xorl
sub
inc
dec
adc
or
sbb
xchg
jb
lock
cmp
jmp
cmpsl
xchg
mov
js
add
jbe
add
sbb
clc
and
sub
imul
pushl
add
popa
cmp
out
rcl
jecxz
ds
sbb
inc
shlb
in
add
push
std
shl
dec
jl
mov
adc
sub
ret
dec
fsubl
or
push
cmp
rclb
or
bound
cli
repnz
hlt
mov
add
pop
mov
in
clc
je
stos
sub
pop
inc
call
and
int3
mov
xorb
popf
cmp
xor
xchg
adc
xor
mov
in
stos
gs
in
enterw
gs
mov
fcomps
outsb
test
pop
cli
rcl
lea
std
push
jge
pop
aas
cltd
daa
pusha
ret
outsl
and
jle
inc
pusha
cmp
aad
fcmove
lods
aam
mov
test
loop
into
and
cld
sahf
xchg
xor
inc
dec
ds
mov
lahf
jbe
pop
push
mov
mov
sbb
icebp
jp
pop
xlat
test
push
jb
pusha
inc
mov
xchg
or
cli
push
mov
and
loope
mov
xchg
xchg
mov
int
enter
cmp
xor
lret
sub
imul
ja
iret
xchg
sahf
sarb
fcompl
dec
push
js
cmpsl
out
cmpsl
je
add
or
lahf
mov
push
stos
push
mov
adc
test
fisttpl
lods
pop
jne
outsb
gs
js
sbb
stos
mov
mov
mov
flds
inc
or
sub
cmp
fdivrl
fbld
add
push
jne
leave
loop
arpl
pop
popa
scas
int3
inc
sub
cmpsl
and
jmp
dec
lret
mov
out
adc
xlat
aam
stos
sti
mov
mov
aam
xlat
cld
fldl
imul
pop
xor
mov
cwtl
lahf
sbb
pop
ret
or
pop
pop
call
lods
mov
ja
adc
cld
jnp
mov
inc
jecxz
dec
adc
xor
mov
outsl
pop
fldcw
jp
test
push
popa
pushf
ljmp
jmp
scas
sti
cmpsb
imulb
sti
push
cmpsb
fcoms
outsb
xor
add
jp
shll
data16
nop
lea
mov
add
aas
pop
xchg
cmpsb
bnd
jl
add
jmp
mov
xchg
movsb
lret
jl
add
insb
mov
dec
mov
pop
xor
xchg
xchg
mov
jl
mov
outsl
mov
sub
or
rcll
rolb
inc
lea
ss
fisttpl
jnp
adc
cmp
and
inc
int
jnp
dec
mov
cmp
or
sbb
sub
cmp
or
mov
es
shrb
adc
imul
jne,pt
data16
orl
daa
push
jl
adc
scas
mov
inc
pop
sub
dec
mov
stos
xlat
sbb
fstpt
and
xchg
sbb
out
nop
cmc
stos
fucomip
stos
jecxz
sbb
and
mov
jmp
imul
lock
push
ljmp
mov
mov
mov
adc
sbb
mov
jne
and
pop
test
cli
mov
cli
pushf
lods
cmp
stos
lods
sub
in
add
pop
mov
cwtl
call
cltd
inc
mov
fwait
mov
push
push
xor
xchg
repz
cmp
out
ja
add
ret
mov
inc
xlat
add
in
ljmp
xchg
mov
sub
dec
mov
sbb
xorb
or
jp
pop
shl
rol
pushf
add
shrl
sub
ja
data16
pop
mov
movsl
xor
add
mov
push
aaa
mov
shlb
sub
aas
adc
jns
jne
jne
lock
imul
jo
scas
sbb
lcall
mov
clc
mov
dec
xor
dec
mov
push
adc
and
push
pop
clc
test
lcall
les
arpl
ret
out
push
xor
mulb
mov
sbb
sbb
out
push
mov
pop
add
add
ret
push
loope
push
mov
push
int3
iret
inc
mov
sar
movsl
jmp
push
imul
add
jmp
jge
mov
push
daa
lods
xchg
push
aaa
sbb
iret
xchg
mov
cmc
push
in
test
lret
out
fwait
push
xor
cmp
cmpb
ret
xor
es
test
mov
sbb
rcll
addr16
daa
insl
pop
jae
stos
in
shl
add
cmp
pusha
icebp
pushf
mov
cmp
xlat
cmc
add
jle
std
imul
xchg
icebp
xchg
push
dec
dec
fldenv
push
push
lea
jl
jp
inc
cmpsl
sbb
and
jle
add
pop
push
pop
scas
push
sbb
adc
leave
push
jne
ljmp
and
orb
mov
inc
in
ja
cmp
xchg
je
pop
aam
adc
cld
push
or
jbe
out
sub
cmp
mov
xchg
pop
mov
pop
cmp
rclb
rclb
sub
and
movsl
pop
xor
mov
iret
push
push
test
mov
fsts
jne
cwtl
mov
and
cmp
lahf
jge
movsb
lods
imul
adc
iret
fld
adc
jo
add
cmp
pop
cmc
dec
cmp
adc
xor
jnp
mov
ljmp
shll
mov
sbb
xor
leave
pop
lret
xor
jno
lret
int3
stc
pop
rorl
repnz
sbb
mov
push
imul
sub
mov
pop
xchg
jo
mov
or
sti
cmp
xchg
in
lods
inc
xchg
int3
mov
shrl
shll
fldt
imul
jl
mov
add
add
sub
inc
adc
loope
shll
mov
cmp
dec
subb
push
fs
cld
and
push
adc
xor
test
jne
out
sub
and
test
fbstp
cwtl
pop
cmp
vmovq
js
xor
popf
out
enter
pop
push
and
xlat
cli
dec
xchg
dec
fisubrs
in
repz
ljmp
or
cmp
or
mov
inc
jnp
xchg
ljmp
ret
aad
sub
mov
mov
data16
jle
mov
les
and
insl
aam
icebp
jnp
adcb
jb
scas
ret
clc
mov
roll
test
rolb
jbe
xchg
push
cltd
in
xor
adc
nop
fs
orl
enter
pop
aaa
lods
adc
test
icebp
sub
inc
dec
add
lods
mov
pop
shll
cmp
subl
nop
jle
mov
mov
mov
popf
mov
mov
or
add
inc
enter
fsubrl
pop
mov
jbe
ss
dec
xchg
inc
sbb
mov
dec
add
jmp
filds
mov
cmp
movsl
dec
rclb
lds
ret
push
sub
cwtl
lods
inc
adc
sti
roll
and
sbb
mov
add
daa
push
enter
sub
mov
sbb
imul
cmp
push
jmp
or
aaa
loopne
or
mov
sti
pop
and
cmp
scas
sahf
jno
cmp
imul
fsubs
adc
fmull
lcall
les
icebp
jmp
cmp
in
pop
aad
iret
mov
in
and
mov
ss
pop
lods
xchg
and
arpl
ljmp
push
mov
lock
lock
xchg
or
sub
mov
scas
pop
mov
outsl
andl
jp
sbbb
movsb
nop
dec
jno
mov
fnstcw
sar
mov
loopne
pop
jp
push
mov
cli
loope
ds
jl
push
daa
sbb
cmpsl
and
add
cltd
daa
fsubs
pushf
or
lahf
cmp
int
loope
cmp
repz
sbb
test
movsb
gs
jmp
cmp
xchg
aas
push
test
jle
popa
imul
add
sbb
mov
pop
sbb
movl
mov
aad
ds
lock
adc
push
movb
push
movsl
pop
fs
fs
pop
cld
fcoml
iret
mov
rcl
jp
ljmp
arpl
and
clc
and
xorb
inc
lods
mov
in
scas
sbbl
fistps
insl
lods
les
mov
pop
cmp
inc
aaa
fdivs
inc
icebp
dec
lods
shll
idiv
arpl
fucomip
dec
sahf
mov
sbb
loop
movsb
daa
xchg
aad
lock
pandn
rcl
int
in
lock
js
and
mov
sbb
loopne
add
nop
or
fdivrs
ds
testb
jns
push
cmc
sahf
call
add
xchg
cmpsl
call
std
cmp
mov
jnp
pop
or
ret
adc
push
cs
or
mov
les
outsb
cmp
out
mov
or
iret
or
add
leave
adc
push
cltd
xor
mov
push
clc
test
testb
orb
push
bound
jnp
ret
scas
sub
jbe
ss
nop
sub
outsb
inc
fs
mov
pushf
pushf
inc
adc
insb
cs
xor
clc
sub
aad
xor
subb
in
js
movsb
cs
inc
push
lcall
fcomp
pusha
out
jae
cmp
pop
ja
lret
hlt
mov
jecxz
push
sbb
jp
nop
fistl
push
pop
fistps
or
clc
push
or
fsubs
sub
mov
gs
outsl
add
push
inc
push
outsb
mov
and
aaa
sbb
inc
xor
std
ret
mov
xchg
shr
in
adc
cli
into
aad
jnp
stos
divb
inc
out
and
xchg
mov
pop
mov
jle
pop
add
cmp
adc
lds
lret
repz
or
push
mov
jl
out
xor
out
and
push
iret
jp
cmpl
mov
push
lret
pop
les
sbb
pop
fwait
xchg
loopne
or
pusha
push
or
cmpsl
push
pop
xchg
jb
xchg
mov
dec
ss
repnz
sbb
lock
lret
xchg
inc
pop
scas
jb
inc
daa
iret
fs
ret
addb
in
pushl
jp
int
mov
sub
out
pop
pushf
cs
sub
mov
sub
fiaddl
push
addr16
jl
popa
and
pop
mov
rorb
cmp
ret
sub
fmuls
cmp
sbb
cmp
add
or
add
jg,pn
add
pop
cmp
popf
aam
add
and
sub
aaa
pop
sub
or
aad
mov
out
push
cwtl
in
in
pop
and
pop
arpl
push
push
call
inc
xchg
sub
mov
int
sbb
xor
sti
loop
das
push
mov
push
adc
loop
fisttpl
shrb
add
and
mov
test
mov
aas
enter
cmp
mov
push
jnp
sbb
shr
xchg
cmpsb
fwait
js
cwtl
or
inc
or
fxrstor
rorl
ljmp
sbbl
add
pop
xchg
add
dec
add
or
nop
mov
loope
cmp
cmc
push
jp
push
xlat
and
sub
or
rorl
jo
sti
cmpb
adc
jno
jb
or
mov
hlt
add
popf
mov
or
xchg
test
sub
sub
xor
loop
mov
lahf
arpl
pop
mov
adc
movzbl
mov
jecxz
stos
lods
idivb
adc
xlat
dec
push
ja
mov
sub
jle
mov
sub
int3
testb
pop
and
mov
ja
or
jnp
out
push
cmp
leave
sub
out
xchg
adcb
or
jnp
aad
scas
call
pop
enter
mov
fbstp
shll
cld
jecxz
pop
loop
int3
fidivrs
int
jb
and
fmulp
dec
cltd
lds
xor
ljmp
test
jge
negl
loope
je
xor
sbb
dec
das
repz
cmp
movsb
and
je
mov
mov
mov
adc
jecxz
fwait
or
and
stos
fs
cmc
in
lods
aad
in
out
xchg
add
or
inc
lds
pop
sub
fldl
push
inc
loopne
xchg
mov
push
push
cmc
pusha
add
xor
adc
pop
fsts
stc
mov
sub
leave
in
outsl
inc
ret
inc
add
add
std
and
add
popf
mov
inc
xorb
out
and
movsb
mov
fdivrl
lahf
dec
xchg
jno
cmpsb
lahf
dec
insl
fistps
mov
aam
jp
fnsave
push
stos
das
mov
jne
or
push
int3
stc
xor
push
mov
inc
out
lea
or
mov
xchg
sbbl
pop
xor
push
sahf
xlat
fstl
mov
sti
cwtl
addr16
mov
cld
push
or
cmp
fidivrs
pusha
lret
adc
les
jb
jle
jb
fwait
cmp
pop
jl
insb
out
scas
test
movq
outsl
lea
repnz
jbe
adc
jbe
lock
mov
jo
int3
jne
stos
or
cli
jne
cmp
mov
or
adc
js
or
or
or
test
jo
xchg
outsb
out
lods
fcoml
bound
mov
int
sbb
dec
les
lret
scas
adcl
lds
loop
inc
movsl
add
ret
add
popf
call
push
popa
outsl
xchg
mov
or
fwait
inc
and
push
bound
push
fcmovnu
add
mov
lcall
fdiv
sbb
jle
pushf
push
call
or
xlat
loop
pop
cmp
push
sti
or
pop
pop
push
mov
out
sub
add
in
sub
cmpsb
or
mov
sbb
or
fsubs
xchg
int3
fisubrs
subl
pop
lds
mov
xor
dec
mov
or
sub
xlat
push
jo
cmp
mov
aad
sarb
mov
mov
xchg
mov
jp
cmp
cltd
loop
jmp
mov
jnp
test
dec
jle
inc
ret
jo
test
pushf
lock
push
dec
sub
xor
insb
jecxz
sbb
mov
shrb
fcmovnbe
sub
sti
adc
or
imul
and
pusha
lret
out
sahf
and
xchg
push
or
jb
loop
daa
std
scas
dec
xchg
jbe
fucomi
push
and
lods
rcl
mov
repnz
mov
pop
cwtl
insb
add
xor
mov
mov
mov
mov
push
jle
aas
rorl
imul
and
shll
iret
jge
adc
cmpsb
repz
and
jg
pushf
jo
in
in
les
lahf
or
cmp
test
or
jne
add
dec
sbb
push
adc
add
out
imull
sbb
mov
add
jno
ficomps
das
sbb
rsm
js
and
cs
add
sbb
movsb
and
dec
lods
shrb
jmp
mov
gs
mov
fnstcw
jle
in
add
jg
dec
popf
push
mov
push
iret
ljmp
js
dec
imul
dec
imul
loop
and
add
mov
sbb
stos
xchg
xchg
and
xor
jbe
ss
push
mov
hlt
notb
mov
sahf
sub
cmpsb
data16
hlt
stos
pusha
xor
lret
jnp
xchg
les
push
or
xchg
xchg
aad
out
jbe
pop
mov
cmp
shll
mov
jp
stos
mov
mov
andl
lret
xor
xchg
inc
popa
mov
clc
adc
sti
sub
shl
lods
jmp
push
int
and
cmp
adc
cmp
pushf
push
cs
out
andb
out
test
mull
push
hlt
xor
sti
jle
and
mov
pop
dec
loop
rcl
cmp
add
dec
ja
jno
cmp
xchg
xchg
das
jnp
push
cmpsb
movsl
or
sbb
sbb
sbb
xchg
jne
mov
in
ss
inc
icebp
pop
cltd
or
sbb
stos
xchg
jnp
into
std
mov
in
xchg
dec
popa
fisubs
dec
xor
inc
sahf
ffree
xlat
dec
pop
xorb
outsl
daa
mov
push
cld
and
sub
insb
mov
mov
psubw
nop
inc
push
mov
js
mov
hlt
out
lret
fildll
push
lds
jp
shrb
sbb
mov
adc
test
insl
lret
dec
inc
scas
push
add
inc
lock
fsubl
pop
cli
cld
scas
pushf
dec
xor
repnz
in
cmp
push
and
mov
leave
cmp
aaa
adc
test
lods
cltd
cmp
xor
inc
jecxz
pop
in
cmpsb
rcrb
dec
dec
cmp
call
pop
ja
repnz
lods
sarb
mov
fsts
mov
scas
mov
push
xor
pusha
fs
ljmp
inc
ficompl
xor
imul
insl
ss
adc
sti
addr16
outsl
jecxz
mov
repnz
mov
dec
cs
cwtl
shrb
pusha
test
lods
pop
lret
jp
mov
jge
hlt
adc
mov
pop
cmp
movsb
icebp
addr16
push
mov
pop
push
stos
ljmp
mov
and
mov
and
divb
loop
dec
rorl
inc
out
jne
sub
adc
iret
leave
imul
add
pop
adc
push
sub
popf
sbb
loope
mov
push
or
jmp
loop
pop
adc
leave
bound
mov
inc
cmp
cmp
subb
adc
and
jns
and
jecxz
loopne
jmp
mov
cmp
xor
roll
dec
popa
xchg
mov
ja
dec
jb
push
lahf
jl
sub
sub
push
cmp
pop
in
ss
pop
lods
sub
mov
imul
or
aam
call
fidivrl
test
xchg
scas
popa
add
sti
out
andl
ret
ja
jl
rcll
insb
fnsave
shl
sub
adc
mov
dec
fidivl
inc
push
inc
or
adc
rcl
jne
fldl
scas
movl
or
lahf
cli
mov
lods
cmp
cmp
test
hlt
lds
sbb
xchg
dec
push
cltd
aam
jmp
inc
rol
inc
or
mov
ds
sub
movsb
lods
subl
xlat
sbb
mov
dec
xor
insl
jne
pop
cmp
fwait
in
mov
xchg
shrb
ret
jo
add
stc
in
sbb
leave
imul
loop
pop
mov
and
mov
out
or
sub
mov
xchg
xlat
fwait
add
pusha
vpsubusw
ljmp
imul
cmp
cwtl
test
cltd
pop
fisubl
mov
mov
push
loopne
add
add
add
cmovo
sub
call
adc
mov
and
lods
cmp
xchg
in
roll
sbb
push
sbb
out
jae
in
pop
repnz
repnz
sbb
in
das
pop
push
ss
stc
stc
scas
sahf
test
xchg
and
add
and
data16
xchg
lds
movsb
cmp
les
xchg
std
lods
insl
mov
insl
stc
inc
dec
jp
xor
pop
subb
jne
mov
ljmp
jge
jecxz
out
rep
xchg
out
fnstcw
dec
add
mov
mov
cmpsl
fwait
mov
xor
sahf
pushf
pop
js
test
movsl
sarl
xchg
push
jbe
js
ja
call
pop
mov
pop
mov
cwtl
outsb
jmp
js
rcr
push
popf
or
mov
ret
jo
dec
je
ljmp
adc
es
mov
cmpsl
push
dec
jne
jae
xchg
mov
dec
and
dec
aas
cwtl
jg
cmc
in
popf
xchg
mulb
dec
aad
dec
test
mov
in
xor
push
cmc
sbb
pop
dec
jb
inc
or
sbb
lods
push
cmp
cmp
adc
hlt
aas
bnd
cmpsl
jge
ret
outsl
mov
imul
aaa
in
test
data16
adc
and
enter
pushf
or
icebp
or
push
cmp
sub
dec
mov
cs
test
cwtl
xchg
divl
push
jnp
inc
add
xor
xor
sti
cltd
repnz
lods
xchg
mov
repz
xor
gs
mov
iret
mov
mov
nop
push
fwait
sbb
pop
adcb
sbb
inc
jp
xor
lret
xor
jae
and
test
mov
xchg
xor
sub
mov
pop
orb
sbb
imull
sbb
xor
sbb
mov
push
ja
sub
mov
xchg
add
mov
cltd
lods
add
pop
aas
ja
jmp
pop
jnp
xor
sub
lret
xchg
pop
jg
pop
stc
mov
mov
fwait
inc
xor
add
lock
mov
adc
jle
fcmovnbe
not
mov
mov
sarb
out
and
pop
sub
mov
xchg
xor
mov
pop
out
scas
mov
jo
and
mov
mov
lea
cmpsl
jl
subb
inc
inc
mov
xchg
cli
pushf
ss
sbb
sahf
cwtl
in
and
fisubl
xchg
fmulp
ja
imul
hlt
mov
adc
ja
cld
insb
ds
fsts
int3
pop
sbb
rolb
mov
clc
popa
popa
or
enter
insb
jmp
test
sub
sbb
add
sub
das
and
or
adcl
jb
jbe
mov
push
jmp
pop
nop
int
mov
inc
outsb
insb
push
negl
jns
out
jp
inc
xchg
movsl
decl
out
fidivrs
shlb
stos
cwtl
mov
inc
sub
mov
jmp
push
push
shrl
in
sub
adc
fimuls
sbb
jnp
xor
add
hlt
mov
mov
out
cwtl
push
push
jle
fsubrl
adc
adcl
movsl
mov
ja
fisubrl
out
dec
test
incb
scas
xlat
mov
mov
dec
add
sub
bound
xchg
adc
lahf
jbe
push
fwait
sbb
out
push
xchg
inc
icebp
xchg
std
cs
gs
and
adc
xor
sub
or
sub
test
mov
adc
xchg
jb
shll
dec
fidivl
pop
stos
test
ss
dec
mov
ss
movsb
push
in
rcrl
add
aam
rcrb
mov
out
into
sahf
div
lds
int3
xor
sbbl
jb
loop
xor
mov
lds
fsubrl
cmpsl
and
cli
fistps
adc
testl
xor
ds
xor
ljmp
mov
cltd
xchg
inc
or
jno
pop
dec
mov
push
stos
cld
popa
cltd
xchg
movsb
mov
dec
jge
cmp
hlt
lret
dec
das
push
sub
sbb
jmp
andb
fisubs
aaa
dec
mov
cmc
push
xchg
adc
or
stos
jne,pn
pop
dec
lods
repnz
iret
pop
inc
mov
movsl
pop
xlat
cwtl
jb
aas
popa
fisttpll
mov
mov
or
push
loope
notb
mov
out
ds
dec
pop
ja
das
mov
add
outsl
xchg
xor
xor
mov
sarb
sbb
loope
mov
das
xor
xorl
cltd
adc
dec
sti
xor
adc
lods
sbbb
xchg
int3
cld
push
sub
xor
cs
push
or
mov
sub
ret
lret
and
cmpsl
mov
add
je
sub
mov
jbe
rol
clc
sub
push
out
addb
xchg
call
aas
fs
mov
js
aaa
mov
sbb
loope
cli
loopne
cwtl
xchg
mov
aaa
xchg
ret
lret
mov
pop
rolb
rorb
lods
mov
leave
mov
dec
fadds
movsl
sub
and
jl
jp
loop
xchg
mov
cltd
inc
xor
mov
cwtl
jbe
outsb
add
push
test
xchg
and
add
popa
cli
jge
stos
pop
xchg
inc
mov
mov
push
sub
mulps
mov
ljmp
push
je
ret
cmp
cmpl
or
bound
dec
loopne
add
cwtl
cwtl
jb
imul
test
jmp
mov
in
outsb
cmp
ror
in
mov
gs
mov
inc
cld
fistpl
mov
xor
xor
sti
dec
fsubl
push
fistps
es
pop
pop
jne
xor
jmp
cltd
lds
sbb
gs
inc
push
ret
rcrl
iret
addr16
push
and
xchg
imul
or
mov
mov
or
jg
shlb
push
pusha
sub
or
pop
in
xlat
cmpsl
xlat
mov
mov
add
mov
aad
rcl
stos
stos
icebp
add
out
popa
das
sub
mov
pop
outsl
cmp
xchg
add
lret
addr16
xchg
push
mov
xlat
mov
fbstp
sti
push
in
int
sbb
push
or
std
ficoms
addr16
hlt
or
stos
cli
mov
cwtl
pop
mov
cmp
push
mov
sbb
sub
adc
and
pusha
add
mov
in
lea
xchg
push
testl
mov
pop
out
lcall
call
pop
int
push
mov
dec
or
jo
inc
mov
adc
test
mov
mov
add
divl
out
xchg
mov
mov
add
sbb
xchg
in
movsl
shl
ja
nop
out
push
cs
or
xchg
outsl
jae
outsl
and
inc
leave
and
push
push
int
cmp
in
pop
xor
fwait
and
lret
ss
push
je
mov
fisubrs
mov
mov
int3
test
xor
mov
cmp
and
inc
jecxz
scas
lods
cltd
ljmp
cmc
shll
daa
dec
ljmp
stos
add
mov
or
jbe
sbb
mov
fadds
cwtl
outsb
and
push
mov
outsl
jo
jne
dec
repz
leave
lcall
or
mov
adc
pop
dec
stos
ljmp
push
jp
test
inc
pop
push
xchg
jno
xlat
imul
push
int3
mov
insl
cmp
fsin
scas
movsb
bound
push
rdpmc
push
shrb
scas
mov
push
mov
xor
roll
jae
jb
pop
jns
inc
dec
xchg
adc
sbb
leave
out
int3
test
leave
and
inc
icebp
es
sbb
arpl
and
mov
mov
mov
pop
imul
and
popf
leave
les
mov
mov
xor
aaa
mov
jnp
mov
jae
push
lret
xor
dec
cmc
imul
shll
aam
and
call
sbb
inc
xchg
xchg
xor
and
scas
mov
daa
jnp
cmp
rolb
test
sbb
jmp
rorb
push
and
cmp
cmpsl
outsl
movsl
mov
repnz
lds
lods
cltd
aaa
xchg
pop
int3
sbb
xor
jae
popf
and
stos
es
repz
pop
js
iret
test
sahf
call
pushf
push
xchg
int3
jne
fildll
or
jecxz
js
mov
add
push
dec
inc
scas
mov
inc
call
xor
push
sti
lret
rorb
mov
pushf
jg
js
mov
sbb
stc
xchg
into
push
xchg
pop
xchg
enter
movsl
xchg
xchg
rorl
xlat
lea
pop
leavew
les
scas
addr16
jl
pop
cmc
ror
das
daa
cmpsb
lret
mov
nop
fwait
rolb
sub
pop
ss
jb
gs
out
aad
inc
pop
movsl
icebp
test
jb
call
dec
outsl
scas
sbb
sbbl
push
loopne
inc
jno
push
fisttpll
fstps
jb
cli
mov
push
mov
mov
push
ret
pop
dec
jecxz
pop
ja
jnp
lcall
jmp
add
pop
repnz
aad
add
add
dec
out
sub
dec
mov
jg
lcall
arpl
aam
fisttpl
movsl
pop
lret
jle
pop
fists
adc
adc
mov
inc
add
sti
mov
movsb
adc
out
sti
mov
push
lcall
inc
das
gs
jbe
mov
ret
cld
aas
lret
dec
call
cs
mov
js
cmp
sarl
js
nop
push
push
pop
xor
sub
push
or
imul
jge
cmp
ds
sbb
lret
push
aaa
pop
xchg
mov
dec
mov
fnstcw
in
sub
pop
test
out
push
call
rol
add
pop
ret
movb
mov
mov
decl
xchg
xchg
test
and
cmp
xor
div
dec
dec
mov
ror
sub
lods
pop
lods
jge
xchg
jns
js
ror
aad
rcrl
pop
stc
outsw
inc
ss
adc
jg
sub
cli
add
pop
pushf
jns
pusha
cmp
mov
hlt
or
neg
out
xor
mov
ds
lods
push
mov
adcb
rcrb
push
enter
xchg
ja
cmp
sbb
lret
and
stos
lea
inc
push
adc
cmp
pop
inc
or
andl
lcall
ret
xor
dec
cmpsl
fs
or
inc
xchg
and
and
mov
adc
out
in
or
mov
xchg
push
dec
cli
inc
or
addr16
std
or
sbbl
add
aaa
shrl
rep
adc
pop
ficoml
aas
mov
scas
in
xchg
and
jge
test
or
add
adc
insb
cli
sub
inc
pop
xor
imul
loopw
sbbl
pop
cmc
rcrl
jl
sub
or
pop
mov
in
cwtl
push
xlat
aam
xlat
jnp
adc
popf
ss
clc
or
out
lcall
inc
cmpl
push
lods
rcr
popf
jge
mov
cmpb
mov
mov
int
mov
ss
out
jbe
je
call
dec
pop
fmuls
scas
test
fwait
inc
nop
xchg
les
movsb
fidivrs
sarb
lock
xor
lcall
fcoms
lods
dec
sbb
shl
mov
push
mov
mov
inc
inc
dec
subl
mov
adc
jns
sbb
jg
push
jae
bound
push
jno
lods
nop
sub
push
sbb
adc
shrl
push
fs
cmp
out
stos
mov
lods
adc
jmp
lret
cmp
adc
xchg
mov
mov
shll
cmp
mov
imul
adc
add
call
fistl
popa
and
push
push
mov
jge
cmp
pop
movsb
push
cltd
aad
or
pop
js
and
cltd
stos
fs
imul
fimuls
jp
lcall
mov
andl
mov
cmp
cltd
mov
jle
imul
mov
repz
icebp
js
xchg
dec
mov
adc
or
sub
movsl
adc
loopne
or
scas
repnz
scas
stc
mov
jne
xor
aaa
mov
push
lods
add
clc
test
enter
pop
fsubs
les
addr16
or
and
mov
push
cmp
push
mov
sbb
aaa
mov
out
sub
sub
mov
dec
adc
imul
mov
xchg
movsl
dec
ret
into
cltd
inc
loope
inc
dec
cmpsl
in
xchg
fcoml
shll
aas
enter
dec
int
jecxz
and
inc
xor
xchg
lods
jge
iret
add
jae
mov
dec
pop
iret
mull
lret
pop
int
jo
push
push
into
push
xchg
subb
inc
xchg
lods
cwtl
movsl
jp
push
je
dec
arpl
mov
push
inc
sbb
enter
xchg
push
mov
or
cmpsb
xor
jno
dec
icebp
xor
aas
sub
stc
mov
or
test
clc
lea
sub
cmp
mov
inc
fucomi
shl
int
enter
inc
popf
fmuls
fcoms
pop
arpl
pop
sub
or
fwait
je
add
aas
xor
in
add
jp
push
push
cmpsl
repz
add
inc
or
negl
dec
ficomps
pop
push
add
sbb
cli
shll
or
pop
out
lahf
xor
and
pop
test
lds
mov
push
sbb
push
sub
xlat
push
inc
popa
mov
or
and
jg
movsl
jl
iret
mov
inc
jmp
ret
or
mov
push
xor
or
clc
jns
je
and
test
xchg
dec
div
or
out
out
mov
fs
mov
push
cmc
andb
daa
or
cwtl
popf
out
add
cmc
outsb
mov
pushf
fiaddl
sbb
gs
aas
test
call
jno
fcoml
fwait
mov
sub
sub
std
imul
jge
pop
test
add
scas
adc
sub
in
lcallw
test
lret
pop
ss
inc
sti
notb
cmp
in
mov
fs
loopne
pop
test
fists
pop
push
sti
sbb
cmpb
mov
movl
adc
xor
lea
ds
adc
mov
xor
in
xchg
aad
push
int3
and
ret
in
cmpsl
inc
sbb
jo
jl
arpl
les
cmp
xchg
test
popa
and
xor
stos
cmp
test
arpl
cwtl
lret
push
test
out
cmp
nop
xor
loope
jp
push
inc
arpl
divl
ss
dec
dec
mov
sub
or
mov
adc
movsb
and
xor
cmp
push
popa
dec
imul
jnp
or
nop
mov
inc
fs
call
and
mov
mov
jg
or
in
sub
cld
popa
insb
mov
adc
pop
and
icebp
ret
mov
jne
add
dec
scas
cwtl
lods
mov
aad
lcall
sbb
fs
inc
jne
add
xchg
mov
push
faddl
ss
pusha
mov
cltd
lret
push
push
jle
pop
outsb
out
dec
sbb
shlb
fstps
adc
imul
and
sbb
and
std
data16
pop
xchg
xrelease
adc
enter
test
sti
adc
popa
ja
cmp
adc
stos
sbb
cmpsb
adc
stos
adc
in
push
sub
add
fwait
sub
divb
sbb
and
pusha
xor
test
and
adc
imul
fiaddl
push
or
stos
mov
repnz
mov
fwait
push
mov
setns
movsl
cmp
leave
sahf
test
push
inc
mov
dec
icebp
fs
and
addr16
xlat
jecxz
decl
cltd
into
mov
mov
xor
pushf
mov
pop
mov
lds
loope
fiadds
dec
sbb
add
mov
lods
cld
test
aas
negb
sub
cmp
pop
call
stc
dec
push
clc
pop
into
popa
jbe
dec
repnz
mov
mov
ret
out
call
out
sub
jne
data16
repz
mov
sahf
stc
mov
aam
xor
and
std
sbbl
jnp
mov
add
mov
push
in
out
shufps
mul
popf
push
add
adc
cmp
cmp
jl
mov
cmpb
or
cli
push
inc
pusha
inc
mov
jge
inc
jmp
mov
push
or
ds
in
lret
or
leave
mov
xchg
xchg
icebp
jbe
pop
lret
mov
xchg
sbb
cmpsb
outsb
mov
fwait
jns
mov
lods
fs
xor
inc
push
cmc
or
shrb
xchg
add
inc
xor
mov
in
push
add
stc
mov
xor
outsl
pop
loop
mov
repnz
test
pop
pop
das
push
les
adc
gs
rcrb
scas
fwait
mov
in
out
repnz
cmp
pusha
adc
pop
adc
test
idiv
clc
xchg
fsubl
iret
mov
lods
inc
iret
nop
dec
jge
pop
sbb
cs
pop
shl
sub
cs
mull
dec
adcb
push
adc
js
test
dec
mov
insb
clc
pushl
xchg
daa
mov
leave
pop
leave
cs
sub
out
sahf
arpl
sti
jle
bound
mov
test
lea
out
xchg
adc
outsl
and
in
lret
in
insl
push
push
pop
inc
xchg
into
cli
neg
sbb
add
daa
dec
lret
lea
out
out
cs
lret
scas
cmpsb
cmpsb
mov
insb
fistl
mov
xchg
cmpsb
jo
int3
nop
in
bound
xchg
hlt
pop
push
repz
mov
sti
push
inc
jmp
dec
and
ret
clc
test
mov
movsb
pop
stos
inc
lock
xchg
jl
xchg
and
loop
push
test
ss
iret
lods
push
fistl
pop
mov
iret
and
flds
cmp
cmpb
jecxz
rcrl
lret
jo
mov
bound
push
push
hlt
jl
dec
mov
add
fildll
inc
cmp
adc
or
push
aas
in
mov
jbe
iret
fs
mov
mov
mov
sbb
jg
cltd
push
les
mov
jo
pop
es
repz
sbb
lahf
jne
jmp
jbe
icebp
sub
lret
adc
sub
inc
xlat
xor
xlat
adc
pop
movsl
xchg
movsb
adc
cmpb
insl
and
and
mov
daa
pop
bound
outsb
stc
cmp
jle
sbb
mov
call
jmp
out
insl
mov
sbb
movsb
jo
xor
xchg
or
mov
or
movsb
rorb
xlat
out
mov
jge
or
pop
jl
xchg
daa
test
mov
lods
xchg
dec
outsl
or
mov
fisubl
pushl
imul
in
or
in
push
scas
jmp
push
push
mov
sbb
inc
loopne
or
imul
cmp
pop
insl
sub
scas
int3
lods
js
mov
cmp
testl
inc
mov
sbb
popf
sub
mov
pop
inc
aad
sub
addl
cs
mov
jp
adc
cmp
jle
fsubp
cmp
add
cmpsl
rcl
cltd
xor
jg
shr
daa
xchg
loope
push
inc
inc
rorl
sub
or
mov
cmp
pushf
jmp
dec
add
adc
leave
xor
test
dec
inc
jl
xchg
push
stos
inc
rol
adc
bound
in
xor
enter
js
data16
xor
adc
test
arpl
mov
imul
add
mov
adc
add
lods
gs
xor
arpl
call
push
mov
cltd
insb
int3
popa
test
insb
jp
out
cmp
sbb
popf
mov
sub
jle
je
adc
orb
inc
popf
mov
aad
jo
ss
repnz
loope
or
jno
add
ret
adc
orb
sub
push
adc
stc
scas
inc
and
or
xchg
cmp
outsl
aaa
pushf
cmpsl
mov
xchg
pop
jne,pt
outsb
js
cmp
scas
ss
ret
daa
pop
test
mov
pushl
in
or
fcmovb
fildl
mov
pop
movsb
jmp
mov
stos
pop
cli
loop
adc
and
mov
fs
adc
add
stos
push
cmpsb
in
push
cmc
cmp
bound
xchg
jl
push
pop
push
jne
mov
fldt
ja
fstps
stos
and
or
sub
inc
mov
cli
daa
push
test
mov
mov
or
loop
repnz
cmp
adc
xchg
loope
aad
add
and
shll
or
mov
inc
std
push
imul
adc
dec
jmp
xchg
lods
sbb
and
mov
adc
add
je
jge
subb
aas
es
sbb
or
pop
aad
mov
or
clc
pop
sub
push
sub
ror
mov
mov
xor
cmp
movsb
data16
lds
xor
adc
mov
scas
cltd
je
std
and
jmp
pop
xchg
jp
or
dec
jne
mov
mov
pop
xor
mov
push
ljmp
stos
daa
jg
fwait
dec
shr
inc
cmpsl
hlt
test
loopne
loopne
testb
lahf
js
push
push
aaa
jg
lea
test
sahf
push
mov
xor
xchg
pop
sbb
out
mov
lock
hlt
push
or
loope
and
push
orl
jle
mov
push
and
imul
sti
dec
mov
sbb
gs
je
jmp
sub
pushf
add
aad
mov
mov
mov
loope
in
jbe
push
fs
and
outsb
jae
fwait
cmp
jmp
mov
aaa
lahf
sbbb
or
fidivrs
arpl
cmp
aam
movsl
cmpsb
sub
or
add
sti
out
cmp
sub
scas
pop
or
or
ror
insl
mov
call
fwait
movsl
add
jge
ret
leave
and
enter
jae
dec
cmp
cwtl
insl
repnz
bound
icebp
imul
dec
stos
or
xor
add
jae
lea
and
shrl
lcall
shlb
mov
cld
xor
push
add
int
xchg
lahf
or
adc
or
int
or
dec
lret
mov
push
sbb
jno
lock
xchg
ret
outsl
mov
push
mov
fcom
int
or
cmc
push
cs
movsl
inc
roll
movsl
orb
cs
prefetcht0
in
cmc
jo
scas
xchg
push
clc
mov
lret
jo
les
popf
cmpsb
call
push
lahf
jmp
push
push
and
add
shll
pushf
inc
mov
les
sub
inc
rorb
xchg
inc
cs
sub
jnp
sub
mov
cli
sub
loop
mov
or
iret
mov
and
iret
push
fwait
add
dec
mov
aaa
add
in
adc
aaa
aad
inc
mov
ficoml
add
enter
enter
pusha
int
gs
aad
int3
adc
pop
lahf
or
mov
in
std
cmp
cmp
movsb
pushl
sbb
push
mov
sbb
push
lcall
sub
stos
pop
mov
movsl
mov
ja
jae
mov
mov
cmp
sub
inc
mov
scas
addb
out
pop
and
inc
cld
and
xor
ja
lahf
xchg
out
sub
dec
add
and
jmp
popf
imul
popf
lock
add
push
and
xchg
aad
adc
in
xor
jecxz
in
push
insb
xor
xchg
push
mov
iret
pop
dec
and
mov
add
pop
test
cmp
sbb
jle
iret
add
adc
and
pop
lods
inc
lret
mov
pop
sub
cmp
jno
out
popa
mov
push
lods
lret
js
sarb
movsl
rcll
jb
sbb
pop
mov
xchg
sbb
pushf
sbb
aad
pop
sub
jmp
mov
cmc
gs
mov
pusha
pop
inc
xchg
pop
ret
imul
es
xchg
adc
cmp
cmp
jb
mov
cmpsl
push
daa
lods
push
popa
jne
sbb
or
pop
es
in
gs
xor
cltd
outsl
shll
insl
sbb
int3
stos
repnz
popa
pop
rorb
cld
int
scas
lock
pushf
xor
jns
cltd
leave
leave
pop
fxch
loope
xchg
xor
pop
lcall
rcr
xor
nop
shld
sbb
adc
push
adc
loop
lds
dec
mov
adc
lods
adc
pushf
mov
sub
pop
mov
mov
andb
push
divb
iret
or
hlt
mov
repz
jo
dec
dec
jecxz
jae
mov
sti
pop
inc
lods
pop
push
xchg
cmpsb
pop
mov
mov
jnp
jae
mov
jle
aas
jle
jl
test
jecxz
adc
xchg
xor
cmp
cmp
lods
insb
in
in
sub
mov
mov
jmp
fldt
ror
stos
mov
repz
loopne
out
hlt
mov
mov
sbb
incb
inc
cmpsb
rcr
and
mov
out
add
outsl
xor
add
jae
cmc
ret
jo
out
jp
in
lahf
das
loop
roll
jmp
mov
scas
fwait
popa
add
test
jns
jb
pop
jmp
adc
aad
cmp
xchg
mov
mov
jmp
dec
ss
sbb
add
xchg
pop
sarb
insl
inc
scas
or
cmc
push
jp
out
sub
test
hlt
push
int
loopne
xor
dec
add
mov
into
cmp
pop
popa
mov
popa
out
or
xchg
mov
data16
out
mov
out
adcl
pop
pop
popa
fdivrp
fisubrs
lret
dec
mov
mulb
mov
nop
pop
fstpl
fmuls
adcl
arpl
jecxz
cmp
dec
fs
xchg
cmp
ljmp
and
and
mov
mov
push
mov
fs
lock
jg
cmp
sbb
subb
outsl
lods
jg
cltd
fwait
std
mov
mov
adcb
cwtl
pop
rorb
insb
int3
cmp
les
outsb
jg
push
mov
int
idivb
insb
jge
das
push
dec
iret
or
cmp
mov
mov
lock
xlat
in
ss
cmp
imull
insb
int
add
shll
incl
and
cmp
cmp
out
xchg
xchg
pop
mov
sbb
movb
add
mov
push
lret
jo
repz
xchg
movsb
nop
mov
xlat
mov
adc
dec
sbb
ja
push
insb
mov
push
rorl
push
out
mov
inc
sbb
outsb
pop
daa
and
ffreep
inc
sbb
mov
popa
les
cmp
jno
cmpsb
insl
dec
jne
outsb
loopne
nop
mov
sarb
and
fisttpll
daa
shrl
jge
xorl
or
insb
pop
test
mov
cmp
mov
cmp
add
cld
xchg
aam
loop
mov
aad
addr16
inc
sbb
mov
imul
pop
sbb
sub
pop
roll
push
clc
push
int
test
and
jl
addr16
jae
rorl
clc
call
push
and
es
lds
out
cmp
iret
sub
popa
pop
fidivrl
imul
cmp
pop
sarl
and
sub
mov
mov
or
mov
mov
jp
insb
adc
outsl
cli
rclb
stos
xchg
nop
push
cmpsb
sbb
inc
mov
mov
jnp
fs
mov
push
cmp
mov
sbb
out
sub
xchg
div
out
mov
or
aaa
jl
fwait
pop
and
or
push
mov
ret
jmp
xor
cld
hlt
pop
cmc
insb
aam
cmp
push
cs
sbb
jecxz
popf
push
pop
pusha
es
gs
inc
sbb
stos
mov
fiadds
sub
std
jmp
pop
int3
mov
in
add
add
push
mov
test
jmp
pop
sbb
mov
aam
in
and
cmp
inc
mov
or
rcrl
dec
xchg
pop
push
addr16
push
js
xor
hlt
push
stc
push
dec
in
roll
addr16
pop
inc
mov
jnp
adc
xor
jecxz
mov
sub
cmpsb
aaa
loopne
fmull
fldpi
popf
mov
dec
insl
icebp
stc
xchg
rolb
lods
pusha
out
push
jbe
push
pop
sub
mov
sti
jno
xor
jp
shlb
or
icebp
dec
cwtl
test
call
mov
cmp
adc
xchg
imul
sbb
xchg
ret
loop
fimuls
std
out
jp
call
into
test
lret
adc
imul
mov
pop
add
adc
xor
xor
fwait
and
dec
mov
pop
je
dec
inc
cmp
aam
cmp
xor
nop
shlb
cmp
divb
add
pop
pop
movsb
fstpt
pop
sub
mov
mov
xor
cmp
popf
js
pop
pop
push
std
mov
mov
pop
pushf
mov
sbb
iret
add
ss
divl
cmp
cmp
mov
sbb
dec
mov
fsts
cmpsl
sub
push
sub
fldln2
test
inc
sbb
lcall
xchg
mov
insl
mov
push
sub
dec
aam
ss
jno
addr16
jb
shlw
cmpb
test
dec
xlat
add
cs
ljmp
mov
popf
icebp
popf
test
adc
rorl
addl
repz
sub
add
ret
lock
and
or
mov
jle
out
mov
adc
scas
adc
adc
pop
icebp
iret
bound
xor
call
cltd
and
lret
testb
loopne
mov
gs
add
mov
addr16
pop
or
dec
sub
inc
sti
cltd
addr16
sub
jnp
fld
es
push
lahf
jnp
jl
sbb
nop
pop
std
lcall
xchg
push
idivl
icebp
pop
jb
mov
popa
mov
scas
jmp
mov
loop
and
ret
sbb
cmp
inc
sbb
ljmp
shll
fs
nop
iret
mov
xchg
xor
mov
pop
or
mov
test
mov
mov
es
fs
hlt
sbb
jno
aam
xor
testb
sbb
call
icebp
push
bound
ret
and
mov
jbe
das
mov
and
pusha
sbb
fnstsw
fstp
scas
mov
cwtl
and
inc
das
ret
movsb
cs
fs
mov
int
les
call
jecxz
pop
sub
cmp
rorl
cmp
test
fsubp
dec
add
shr
mov
insl
rclb
std
push
mov
adc
cwtl
das
jb
add
adc
push
and
iret
mov
insl
sbb
out
pop
adc
ror
mov
mov
mov
movsl
ret
sti
jb
mov
mov
mov
out
cmp
ja
dec
add
xor
movsl
aad
inc
add
xor
jmp
or
jbe
xor
fmull
mov
mov
cmp
sbb
xchg
mov
nop
dec
adc
popa
and
sub
les
xor
inc
in
and
icebp
test
out
mov
push
xchg
cmc
negl
insb
xor
and
add
int3
fimull
outsb
fstl
mov
cwtl
test
inc
dec
shrb
je
in
sbb
pop
insl
and
dec
jmp
jle
xchg
mov
cmc
insb
inc
aas
push
mov
les
sbb
xorb
stos
mov
cmc
cmpsl
sti
filds
jne
cmpb
stos
int3
mov
pop
push
xor
les
or
stos
cmpsb
jmp
mov
and
insl
sub
sub
or
idivb
into
xor
les
jae
cmp
cmp
rorl
xor
nop
int3
cmp
cli
int
test
mov
int3
sbb
leave
hlt
push
add
fisubl
cmp
fs
and
repz
sub
lds
fwait
das
insl
ret
stc
adc
sbb
xlat
xchg
add
clc
push
ja
hlt
push
sbb
push
bnd
sub
inc
xchg
push
or
rdmsr
mov
fdivr
cmp
fists
fcomip
mov
sbb
mov
stc
inc
daa
push
xchg
divb
cmpsb
loopne
test
fwait
or
hlt
aas
sbb
test
ljmp
push
callw
jecxz
push
lahf
fsts
sbb
ret
xor
dec
dec
mov
shl
sbb
add
push
sbb
cmp
sbb
addb
inc
mov
fisubl
cld
cltd
sbb
imul
push
cmp
mov
fistps
cli
cmp
int3
mov
std
icebp
pop
adc
aaa
insl
cli
shll
fcmove
inc
cmpsl
dec
mov
aad
js
or
aas
imul
cmc
mov
lods
inc
xchg
out
mov
pop
imul
jbe
cmp
mov
clc
popf
xor
sbb
pushf
jbe
jg
js
fldcw
adc
mov
and
nop
and
or
ja
es
add
out
sbb
push
aad
and
add
cmpsb
loopne
in
in
scas
xchg
or
xor
fisttpll
add
sub
cltd
xchg
fdivrs
sbb
jle
push
lahf
dec
sub
ret
jl
sub
rcl
out
pop
inc
int
data16
call
lahf
adc
dec
fimull
daa
jnp
mov
push
push
cltd
cmp
mov
repnz
lahf
je
cwtl
push
insb
gs
insb
pop
ret
pop
inc
jno
and
jge
mov
arpl
sbb
push
or
xchg
je,pt
push
les
push
xor
scas
int3
mov
adc
push
stos
cmp
pop
ljmp
out
adc
mov
adc
pop
in
aam
mov
ret
sbb
dec
or
jae
inc
imul
leave
push
nop
xchg
jmp
sub
into
lds
mov
cmp
in
in
shrl
lahf
dec
andl
sbb
mov
int
imull
notl
lods
ret
inc
test
in
sbb
pusha
inc
shll
push
cmp
sbb
stos
xchg
js
fs
xor
clc
dec
jb
pop
inc
push
lret
jmp
cld
cmp
sub
adc
mov
pop
sub
pop
repz
jg
out
notl
add
xor
call
xor
lret
pop
nop
dec
push
dec
xchg
mov
mov
ljmp
popa
fstps
xor
js
inc
sub
mov
ret
mov
es
sbb
jb
dec
cmp
popf
jno
cmp
es
sub
cld
dec
mov
out
xchg
pushf
mov
sub
dec
shrb
sbb
push
or
insl
adc
push
push
sbb
inc
mov
adc
xchg
or
lret
fsubrs
mov
js
movsb
insb
push
or
xchg
xchg
or
xor
ja
push
shll
and
arpl
xor
or
int
nop
mov
sahf
xor
rcrb
ss
and
repnz
std
jb
mov
aas
jb
fstpl
jge
in
loope
sub
sub
adc
adc
push
dec
loop
in
daa
adc
insl
sbb
jns
out
mov
scas
outsl
lcall
roll
loope
push
sub
ret
pop
jbe
adc
mov
add
push
scas
mov
loopne
adc
daa
mov
jne
stos
dec
jmp
hlt
add
cmp
xor
shrl
jo
xchg
jne
jl
lods
jae
lret
inc
jne
xchg
mov
leave
cwtl
sbb
and
adc
lea
rorb
inc
jmp
in
movsl
sub
xor
adc
mov
mov
pop
loope
mov
ss
add
jmp
stc
test
cwtl
popf
push
pop
pop
lds
lahf
fnstsw
adc
sbb
cmpsb
xchg
std
pop
ret
xchg
sbb
fsubrp
mov
popf
je
cmp
adc
cmp
fdivrs
fmul
out
mov
pop
jne
aas
test
fcomps
aam
aaa
into
je
sbb
cltd
cmp
and
mov
xor
xchg
data16
fisubs
std
and
mov
add
out
ficoms
ret
mov
lea
ds
add
dec
stc
pop
xchg
mov
int
adc
out
mov
xor
daa
mov
out
mov
pop
aas
mov
pop
xor
push
pop
jl
je
pop
mov
test
gs
xchg
mulb
dec
decb
cmc
mov
mov
adc
in
into
in
test
jp
dec
jl
cwtl
fldt
pop
call
ds
mov
pop
rcll
popa
mov
idivb
repnz
out
divb
sub
mov
lds
jl
and
negl
mov
jae
pop
bound
push
pop
cltd
insl
push
mov
cli
pop
pop
shlb
xchg
rcll
push
xchg
dec
sub
cld
outsb
repnz
mov
xchg
ss
jns
cli
ret
sub
sub
adcb
fistps
popa
stos
cmpl
loop
xchg
bound
cmp
test
nop
or
int
ljmp
call
add
lock
jmp
sub
test
inc
or
out
lods
push
sub
mov
jp
int3
aas
fnstenv
sub
mov
mov
in
push
cmp
jmp
out
aas
test
shlb
cmp
lea
lods
hlt
jg
add
cmp
pop
fs
mov
daa
std
notl
or
jge
es
imul
sahf
pushl
popl
jno
cli
leave
jnp
sub
fisttpl
xor
jle
js
int3
in
jmp
inc
popf
out
out
scas
test
jne
mov
lock
adc
js
nop
inc
ljmp
add
mov
fdivs
movsb
push
xchg
loopne
loope
out
xchg
xchg
lods
and
int
and
out
lahf
pop
lock
rclb
mov
jns
xchg
fldcw
pop
push
ljmp
sub
jl
xor
fmull
inc
push
mov
inc
repnz
sub
stos
xchg
jmp
pop
push
test
mov
mov
xlat
push
cmp
add
out
cmpsb
add
subb
fs
mov
pop
inc
test
fsubs
mov
iret
xchg
xchg
adc
popa
cmp
lds
add
inc
inc
push
int3
loop
or
xlat
mov
pop
push
les
je
xchg
fistl
nop
xor
xchg
mov
add
imul
jbe
insb
lds
jmp
pop
pop
stos
pop
rcrl
add
xlat
adc
popa
mov
push
stos
inc
sub
add
push
push
sbbb
add
mov
repnz
cmp
loop
xor
cmp
cmp
add
leave
xchg
xchg
shr
push
adc
in
cmp
or
out
dec
imul
je
pop
push
cltd
cld
push
out
inc
mov
sbb
mov
xor
cmpsl
in
inc
push
xchg
fcoms
das
pop
add
and
gs
xor
mov
int3
xchg
mov
dec
addl
push
data16
xchg
push
shrb
jno
and
xor
mov
sti
push
xchg
xchg
mov
xor
push
jmp
cmp
aaa
add
push
mov
jp
ss
dec
cld
aaa
lods
xchg
je
lods
imul
lea
out
mov
repz
inc
cmp
mov
js
orb
xor
test
lahf
adc
sbb
les
inc
mov
std
out
jge
pop
call
lcall
xor
fwait
gs
xor
arpl
test
push
push
jge
mov
jne
fwait
loop
xchg
popa
into
cmpl
out
jle
or
or
xor
popa
nop
and
scas
mov
push
mov
push
jne
in
xchg
daa
adc
push
popf
iret
in
lahf
lret
or
push
cmp
mov
mov
inc
push
jmp
xchg
std
into
mov
fadd
iret
mov
pop
dec
leave
lds
xchg
sbb
fwait
cwtl
pop
ja
scas
xchg
push
or
test
cmpb
shll
mov
aaa
mov
pop
out
xchg
faddp
sub
xchg
cmp
sbb
lcall
test
xor
sub
jnp
popa
adc
lcall
inc
xchg
lods
outsb
out
jle
jno
fisubs
pop
rcll
into
push
out
inc
mov
inc
add
and
icebp
imul
inc
cld
mov
add
push
jns
and
in
bound
cmp
pop
jnp
xor
xchg
aas
pop
cli
cmp
out
fucomi
clc
cmovns
jo
es
cmpsl
adc
cmp
int3
xchg
fldenv
sub
add
cwtl
mov
lcall
lahf
push
lcall
arpl
adc
aad
lahf
xchg
loop
test
mov
mov
mov
lea
fs
sub
sahf
add
sub
enter
push
enter
inc
jns
lods
jecxz
je
push
std
punpckhwd
adc
fs
int3
shl
jge
cmpsl
push
dec
shlb
lods
fadd
test
negb
or
pop
jg
dec
pushf
in
xchg
ss
push
sbb
jno
jb
leave
cmp
mov
sbb
jno
movsl
ljmp
mov
jp
movsb
outsb
add
ret
aam
dec
fstpt
cli
cwtl
pop
adc
xor
fstpt
mov
sbb
test
ss
cld
mov
cmp
xlat
mov
sbb
push
push
ja
aaa
ljmp
pop
clc
enter
dec
or
mov
nop
fwait
sbb
negb
mov
and
mov
call
int3
std
insb
add
push
push
lods
rclb
in
or
adc
inc
mov
loop
inc
lret
mov
rcr
stos
rcr
xchg
jnp
pop
cmp
dec
pop
das
enter
filds
xchg
sub
mov
cmp
cld
frstor
push
aas
sub
jmp
xlat
cld
dec
or
sub
shlb
sub
aas
xchg
xchg
ljmp
push
imul
scas
add
test
nop
fmull
xchg
dec
push
in
iret
and
ud0
jl
idivb
push
dec
ss
rol
loope
ja
pop
jmp
aaa
ret
and
mov
inc
or
sahf
pop
es
outsb
jns
add
xchg
ljmp
dec
or
push
sbb
mov
fstpl
pop
xchg
in
push
push
cmp
fisttps
or
and
jb
leave
nop
mov
dec
pusha
mov
aaa
jns
cld
cmpsl
push
add
xor
mov
pusha
mov
popa
int3
cmp
jge
or
repnz
shlb
andl
sahf
adc
mov
inc
hlt
sbb
std
fsub
fs
lods
ja
insl
mov
mov
fs
sub
push
xor
or
mov
ret
ret
mov
in
xor
andb
xor
adc
mov
dec
in
jae
sahf
cmp
in
inc
fnop
push
scas
aad
mov
inc
pop
imul
pop
not
mov
jg
adc
jnp
and
pop
mov
xchg
outsl
inc
mov
mov
or
cvttps2pi
lds
mov
and
in
xchg
pop
lcall
mov
adc
add
lcall
xlat
push
mov
mov
fbld
mov
mov
roll
adc
jmp
jo
sub
std
xor
jg
mov
out
push
sti
xchg
xor
cmp
cmp
dec
mov
ficoms
rolb
imul
mov
xor
inc
add
adc
inc
xchg
psllw
mov
addr16
push
mov
ret
sbb
lea
mov
loop
xchg
push
or
movb
sub
pop
mov
inc
dec
push
scas
cmp
inc
fmuls
lods
cmc
movsb
int3
sub
cld
je
and
adc
xor
pushf
loope
pop
and
stc
aad
mov
inc
imul
fstpl
stos
mov
push
je
mov
sub
add
cmc
es
push
push
mov
jecxz
test
nop
jo
xor
imul
xchg
iret
xor
int
jecxz
leave
test
int
stos
lock
loop
jb
xlat
out
xor
int
es
out
das
xchg
out
cs
dec
fiadds
adc
aaa
dec
leave
lea
dec
push
lock
insl
jp
test
loop
push
fisubl
inc
cmpb
adc
push
cmpsl
sbb
or
das
xchg
jae
pop
mov
jl
inc
jp
xlat
popf
fidivrs
inc
add
pop
xor
xchg
imul
adc
ficompl
in
dec
mov
sarl
push
jle
and
jns
filds
lahf
lods
adc
cli
xchg
mov
push
pop
sbbl
pop
adc
add
push
mov
div
mov
add
js
test
movl
int3
outsl
pop
pop
daa
jo
aaa
mov
gs
movsb
into
mov
pop
jp
sub
xchg
cld
in
xor
and
xchg
andb
dec
jecxz
push
dec
cmp
fildll
cli
jb
or
inc
add
ds
sbb
ds
fisttpl
arpl
cli
jbe
rclb
arpl
mov
adc
push
movl
insl
adc
push
out
or
fsubr
ds
xchg
xchg
repz
fs
cmp
int3
mov
sbb
mov
shll
pop
outsl
leave
insl
sub
push
arpl
outsl
js
xchg
lahf
mov
or
sbb
dec
mov
xchg
outsb
mov
sarl
imul
push
lods
aad
mov
cmpsl
jns
xchg
inc
dec
into
xor
addr16
push
pop
or
ret
mov
or
fstps
mov
jp
xchg
jae
adc
and
cmpsb
mov
sub
push
push
pop
add
sub
addr16
or
dec
pop
insb
icebp
bound
bound
inc
test
sub
cmp
and
xor
ficomps
cmp
and
mov
xchg
xchg
push
xor
inc
into
inc
call
xor
xor
cltd
jne
push
mov
cmp
jecxz
sbb
jecxz
mov
push
jmp
push
inc
scas
out
sbb
pop
cmp
in
xchg
mov
or
xchg
je
lds
jne
jle
push
test
cmp
nop
pop
mov
test
bswap
adcb
in
push
dec
push
mov
in
data16
lret
push
inc
test
mov
fistpl
nop
pusha
dec
enter
popl
out
inc
mov
push
fbld
cmp
sub
dec
shll
sbb
dec
jbe
xchg
add
sbb
lahf
lods
inc
pop
test
movsl
sti
pop
mov
out
insl
mov
jb
in
sub
loop
mov
or
inc
and
inc
loop
enter
pop
das
xor
or
aam
inc
mov
cmp
push
pop
push
mov
loop
das
push
loopne
add
lds
inc
int3
mov
sbb
jmp
push
stos
out
int3
imul
dec
loop
ret
popf
fcoms
ljmp
in
sub
mov
and
adc
mov
xor
lcall
mov
jl
sub
dec
cmc
jnp
popf
rcrl
outsl
push
mov
push
jecxz
roll
ret
push
jge
shrl
cmp
adc
mov
xchg
push
dec
mov
jo
cmp
daa
jecxz
pop
imul
lods
pop
clc
cltd
or
out
pop
rorb
shr
adc
data16
outsb
jo
addl
mov
jp
pop
js
inc
add
fistpl
xor
scas
arpl
imul
or
into
sub
dec
pusha
mov
jbe
ss
outsb
inc
out
fbstp
int
pop
mull
call
mov
push
aad
mov
dec
outsl
or
sbb
mov
rol
dec
fimuls
push
mov
push
jne
mov
xor
ljmp
adc
push
inc
adc
popf
and
dec
or
outsl
loopne
lahf
mov
mov
cmp
cwtl
ret
adc
push
imul
or
inc
outsb
movsl
jo
popf
mov
pop
loop
out
cmp
xor
imul
icebp
out
pop
push
leave
add
cld
adc
dec
adc
jmp
sbb
shlb
ja
imul
xchg
rolb
cmpsl
mov
inc
test
mov
arpl
out
add
scas
sbb
xchg
mov
adc
ja
add
dec
add
fs
mov
daa
adc
stos
mov
shr
stos
push
outsb
dec
js
imul
pop
repnz
or
push
push
cltd
mov
push
enter
jg
mov
xor
fdiv
clc
fildl
stos
test
xchg
sbb
push
std
das
cmp
loop
rolb
inc
outsb
dec
imul
sub
xor
pop
sahf
adc
ficompl
fistpll
jne
out
outsb
not
lds
out
stos
inc
fdivs
sti
xchg
fwait
or
ret
inc
xchg
insl
stos
in
pushf
fsubs
push
shlb
sub
jns
sub
out
sbb
mov
push
jns
out
jle
shll
clc
ja
sbb
popf
or
lods
mov
xchg
jle
icebp
bound
mov
outsb
dec
add
aad
sub
daa
clc
mov
mov
pushf
push
pop
insb
jo
cld
mov
cmpsl
push
cwtl
out
inc
divb
pushf
xchg
test
xchg
xor
pop
popf
outsb
out
mov
or
pop
and
sbb
mov
inc
cmp
shrb
mov
sahf
mov
xchg
cld
add
ds
mov
mov
fsub
mov
dec
mov
cmp
push
sub
adc
xor
adc
pop
addb
adcb
jo
cmp
outsb
jp
loope
subl
add
lds
adc
mov
or
jne
fsincos
pushf
sar
enter
fcom
fbld
mov
add
mov
sub
cmp
sbb
mov
push
mov
mov
rcll
mov
mov
pop
sbb
aaa
mov
xchg
negb
test
add
clc
scas
fcompl
xor
cmp
clc
jns
ss
sub
inc
xlat
rcl
mov
mov
adc
xlat
aas
inc
mov
sbb
ret
subl
out
mov
jb
shrb
sahf
lahf
aas
cmpsl
mov
ret
mov
pop
test
fists
adc
lods
rolb
pop
or
adc
int3
pop
or
mov
mov
scas
push
filds
push
int
mov
sub
mov
add
xor
xchg
pop
adc
loope
test
sub
popf
call
add
lock
dec
movsl
jbe
test
lret
movsb
jbe
in
sub
adc
lods
pusha
push
dec
out
push
into
mov
dec
inc
or
push
mov
and
orb
je
iret
add
sub
lret
pop
test
mov
push
mov
lret
stc
lods
outsb
or
add
imul
aas
out
xorl
jns
adc
xchg
gs
popa
xchg
imul
xor
sub
stos
leave
notb
push
js
int3
arpl
sbb
daa
fprem
jne
adc
shlb
or
adc
sar
mov
imul
test
pop
push
and
movsl
push
ffree
pop
aad
loop
mov
sub
sbb
jnp
addr16
xchg
add
loope
lcall
xchg
leave
inc
mov
hlt
jg
add
pop
push
inc
dec
out
out
lea
xchg
nop
movsl
mov
cs
inc
mov
jp
mov
or
adc
sub
loopne
in
dec
les
lds
jns
xor
inc
push
add
xchg
push
cmpsl
lret
adc
les
jno
add
scas
mov
xor
push
out
xchg
rorb
add
xor
lret
pop
mov
cltd
aad
stc
inc
sbb
adc
dec
jecxz
cmp
jecxz
repnz
sbb
scas
shrl
cmp
hlt
loope
xor
mov
paddb
mov
insb
adc
lods
int3
jle
scas
mov
lcall
insl
mov
mov
iret
sbb
outsl
cmp
insb
xchg
popa
aad
ds
lahf
subb
ljmp
xchg
push
dec
int3
push
int
sub
sbb
push
cmp
jnp
and
push
mov
test
mov
add
adc
call
jo
push
lds
sbb
xchg
in
mov
mov
push
fdiv
xchg
or
inc
sub
jmp
ret
xchg
inc
hlt
pusha
leave
rcrl
adc
xor
jno
xor
push
or
or
sbb
cmp
sbb
aas
les
repnz
aam
call
fnsave
repz
jns
ret
imul
idivb
push
add
pop
fcoml
jb
pop
add
pop
inc
lods
xlat
mov
push
repnz
popa
inc
mov
xor
fsubl
and
xchg
or
loopne
scas
pop
hlt
cmpsl
sbb
jns
adc
arpl
dec
jmp
out
imul
xchg
mov
xlat
sbb
mov
out
int3
je
out
rcrb
jmp
in
mov
mov
dec
push
mov
insb
push
dec
cmpl
and
aad
xchg
fs
in
mov
imul
jg
les
inc
sbbl
es
test
pop
sbb
xor
pop
in
arpl
xchg
push
das
adc
add
sbbl
divb
mov
imul
and
mov
inc
mulb
push
pusha
stos
jne
out
rorl
repz
or
jbe
xchg
out
les
adc
les
call
rorb
cmp
scas
aaa
mov
sbb
cmp
jecxz
pop
pop
xchg
mov
mov
dec
ds
cmpsl
rcl
mov
imul
into
xor
stos
cmp
sbb
mov
add
xor
test
hlt
imul
out
jge
pop
pop
add
xor
notb
cmpsb
dec
and
inc
cmc
mov
inc
push
loope
clc
mov
xchg
jmp
push
push
mov
add
add
js
in
add
sub
mov
sbbb
movsb
sarb
sbb
adc
cwtl
movsl
aas
xchg
arpl
rolb
leave
lcall
inc
dec
stos
stos
arpl
cli
sbbb
mov
sub
shll
aam
fwait
cs
adc
add
lret
orb
pop
or
adc
jbe
push
test
push
leave
or
cmp
cs
add
imul
jne
pop
and
fidivs
or
push
in
cmc
mov
jmp
imul
pusha
add
pop
lret
push
lock
mov
outsb
jno
ss
xlat
cmp
push
lods
aad
mov
inc
mov
mov
mov
pushf
outsl
inc
dec
dec
mov
jns
std
les
and
add
gs
jmp
jmp
jp
add
lret
adc
pusha
jl
jge
inc
out
sub
sub
jecxz
arpl
jbe
cmp
pop
pop
adc
xchg
test
out
mov
sar
cmpsl
out
int
cmp
inc
out
mov
mov
sbb
out
dec
sub
inc
movsl
mov
cmpsb
cs
xchg
xor
in
cltd
cltd
push
fnstenv
mov
and
mov
jae
inc
dec
pusha
fsub
stos
mov
btr
inc
leave
test
aas
dec
daa
mul
mov
lret
push
daa
xchg
popa
inc
or
pusha
jae
movl
int
fdivrp
fcomps
in
sub
push
xchg
test
inc
pop
adc
test
popf
ss
fsubs
sub
adcb
push
outsl
ret
int3
inc
test
fisubl
xchg
jbe
inc
jns
loopne
mov
push
into
xor
or
fwait
pop
or
aam
scas
or
xchg
fisubrs
mov
dec
xchg
mov
in
sti
add
mov
dec
lret
lock
or
xchg
rorb
imul
sbb
mov
mov
sub
xchg
pmullw
mov
push
or
sub
lcall
mov
fsubp
mov
mov
mov
xchg
movsl
jge
mov
and
ret
mov
adc
cmp
jae
lahf
cmp
cmp
popf
add
ljmp
jno
xchg
cli
rol
mov
fadds
mov
xchg
daa
dec
in
mov
inc
pushf
repz
addr16
push
int
lods
idivb
sbb
xchg
lea
mov
xchg
cmovne
das
xchg
repnz
or
fldenv
xchg
test
roll
test
pop
sbb
popf
mov
lret
pop
pop
cld
inc
cwtl
mov
lods
movl
cltd
les
addr16
test
dec
push
fsincos
aaa
mov
out
dec
jne
dec
fldcw
loopw
sti
ficoms
aas
xor
mov
lcall
mov
mov
or
and
test
xchg
imul
xchg
data16
aaa
out
shlb
imul
xchg
inc
ds
lods
ret
test
dec
cltd
in
jnp
lcall
and
daa
insb
lcall
je
xor
in
dec
popa
xor
push
loope
push
xor
jne
ljmp
push
pusha
fs
jmp
std
push
mov
inc
xlat
push
xchg
add
je
cmc
fisttpl
adc
iret
jne
jne
pop
xor
xor
push
mov
popa
iret
cmp
cmp
je
add
mov
or
sar
fdivl
mov
push
and
mov
mov
mov
shll
dec
outsl
enter
pusha
xlat
sbb
fs
pop
scas
cmpsl
enter
jmp
adc
xor
shll
pusha
popf
outsl
dec
iret
mov
mov
jo
cwtl
andl
in
cli
jp
jno
sub
cltd
mov
stos
rcll
imul
call
pop
out
dec
xchg
mov
pushf
sti
cmc
jb
lahf
xchg
mov
mov
int
sub
leave
outsl
shll
faddl
push
dec
test
fldcw
xchg
add
mov
sub
enter
xchg
int
fidivl
leave
sub
jnp
test
cmp
bound
add
cmpsl
xchg
jmp
dec
dec
sti
jl
cld
cmp
clc
xor
mov
cmp
xchg
mov
pop
or
adcl
mov
xchg
out
sub
sbb
mov
cwtl
dec
call
sbb
mov
dec
test
push
leave
outsl
hlt
out
mov
cwtl
insb
cmp
jo
push
int3
fdivrs
dec
fnstsw
cli
cli
in
add
and
push
js
mov
xchg
or
rorl
add
mov
movq
mov
addr16
mov
adc
push
arpl
mov
ret
mov
lret
dec
pop
jp
xor
and
xchg
jmp
dec
xor
jle
sysenter
xchg
fdiv
xchg
or
movsb
in
inc
xchg
push
mov
or
adc
pusha
pop
enter
gs
bound
dec
cld
lret
les
mov
test
fstpt
inc
adc
mov
orl
inc
icebp
test
inc
pop
jg
jecxz
xor
sbb
stc
stos
in
rclb
mov
jae
mov
aaa
js
dec
mov
stos
dec
aad
sub
inc
or
dec
ficompl
je
movb
rclb
jmp
push
aad
sub
cltd
cli
push
mov
xchg
inc
es
aad
scas
xchg
jne
xor
mov
imul
add
rclb
lahf
pop
mov
ret
sub
dec
stc
nop
mov
in
inc
xchg
lds
daa
push
xor
xlat
js
xlat
cmc
inc
out
ljmp
push
outsb
jle
ja
jmp
pushf
mov
cld
imul
jnp
pminsw
pushf
cs
push
lret
lds
stos
leave
lock
jp
adc
pop
lods
or
cmp
mov
loop
push
stos
aas
sbb
or
sti
or
xor
out
dec
mov
pusha
je
je
lret
out
and
inc
gs
movsb
or
sub
das
inc
mov
or
in
gs
xchg
mov
xor
lock
mov
sbb
ror
test
mov
mov
test
cmp
xor
adc
jb
xchg
rcll
std
xchg
cmp
rcrl
and
push
xlat
pop
clc
mov
pop
lret
inc
shrl
aas
in
test
inc
jae
fs
or
xchg
fstpt
int3
pop
pop
outsl
arpl
cltd
pop
mov
in
nop
jns
and
loop
jl
inc
js
mov
stos
jae
ficoml
and
lret
in
xchg
test
jp
mov
jge
lea
inc
push
pop
jns
mov
cmpsl
add
add
jb
and
jno
push
das
shlb
dec
mov
mov
adcb
cmpsb
push
or
xor
jl
mov
inc
xlat
dec
test
inc
lret
fldcw
push
mov
out
jnp
lcall
adc
mov
call
sub
add
jne
pop
int
outsb
sbb
pop
mov
add
and
dec
mov
jmp
pop
mov
fdivrl
aam
xchg
jp
aad
in
test
aaa
push
jge
pop
jne
jg
addb
or
inc
inc
sbbl
add
mov
popf
jne
ret
fdivrs
decl
loopne
outsb
jnp
push
inc
je
mov
add
jne
xchg
mov
jnp
xchg
lcall
xchg
call
xor
fdivrs
mov
xchg
imul
js
xlat
adc
or
add
or
xlat
les
movsb
add
jo
in
xchg
aad
ret
test
sub
movsb
cwtl
in
sbb
fsubs
mov
jecxz
sbb
mul
sbb
adc
lahf
lods
xchg
adc
mov
cmp
enter
pusha
in
sti
insb
js
xor
xchg
or
xchg
dec
jnp
aad
mov
dec
mov
mov
mov
pushf
out
sub
xchg
ljmp
imul
out
popa
loop
mov
imul
lds
outsl
adc
leave
out
adc
sub
ss
sbb
aas
mov
pop
imul
popa
adc
jle
pop
or
clc
mov
xlat
jl
and
data16
call
imul
fld
sub
jg
popa
and
repnz
int
mov
and
jbe
push
adc
dec
or
inc
push
imul
fldl
repnz
and
ret
inc
popa
sub
mov
enter
sbb
fwait
jae
mov
aaa
repnz
or
js
xor
aad
xorl
out
add
push
repz
add
lods
loopne
xchg
call
orl
inc
lret
sbb
mov
sub
sbb
cmpsl
jo
xchg
mov
add
xchg
in
jae
es
cmpsb
jae
inc
rorb
mov
mov
mov
arpl
jne
xchg
pop
jle
or
pop
inc
cld
enter
imul
add
inc
out
movsb
or
cmpsl
aaa
jae
lock
fdivrp
inc
fcom
out
adc
push
ljmp
cmp
jns
testb
lret
pop
iret
pop
jo
gs
inc
or
sti
adc
mov
icebp
and
sub
mov
sbb
pop
in
mov
shlb
adc
icebp
in
sbb
xor
iret
jo
ljmp
cmpsl
aaa
adc
inc
xchg
inc
ret
xor
sub
ret
dec
sbb
xchg
and
jne
call
cld
fucom
cltd
into
pop
lcall
ja
sbb
rcrb
subb
adc
push
loop
mov
bound
pop
scas
and
sbb
lahf
mov
notb
mov
and
push
sub
and
fisttpll
xor
movsl
ljmp
jl
or
sbb
pusha
imul
adc
push
push
ret
fcomp
dec
aad
inc
lea
ljmp
js
insb
insb
adc
sbb
stos
cmc
jb
xor
jmp
and
dec
push
add
inc
jnp
int3
jbe
mov
sbb
xchg
inc
test
pop
je
xchg
leave
lret
cmp
sbb
aad
and
mov
add
dec
imull
out
inc
ficoml
sub
pop
pop
stc
sarb
hlt
mov
mov
mov
lea
xchg
shlb
dec
mov
dec
repz
scas
and
bound
cmpsl
push
and
sub
int3
je
arpl
adcl
dec
notl
lock
and
inc
pop
mov
rorb
ljmp
imul
mov
testb
push
pop
jo
pusha
and
sub
rcrb
lock
repnz
arpl
ljmp
repz
and
icebp
hlt
jge
sub
jns
pop
shl
pop
mov
es
dec
lcall
pop
mov
xor
je
fidivrl
lahf
mov
movsb
sbb
pop
aaa
lock
xor
push
fdivrp
loope
ret
ja
scas
fst
xlat
push
dec
jp
push
push
loopne
pop
idivb
daa
and
mov
xchg
xor
rol
mov
push
enter
jno
dec
mov
mov
sbb
sub
xchg
inc
fmul
out
aaa
adc
out
cmp
pop
daa
sbb
xor
int
shlb
loope
xchg
fnstcw
sub
mov
add
inc
pop
loopne
and
push
nop
insb
je
add
dec
call
je
xor
cwtl
test
mov
pushf
int
sub
add
stc
jnp
popl
xchg
les
or
adc
std
cmc
into
and
leave
icebp
mov
dec
fimuls
dec
push
test
dec
clc
inc
mov
xchg
dec
xor
cli
outsb
mov
xlat
add
or
sub
std
movsb
paddsw
push
in
sarb
popf
arpl
out
and
add
nop
dec
sahf
or
lea
sub
cli
out
pop
ja
xor
rcrl
test
lock
aam
xchg
mov
stos
cmpsb
push
adc
sahf
cmp
add
imul
inc
out
loopne
or
xor
into
xor
pop
sbb
push
adc
daa
xchg
inc
adc
sbb
sub
pop
and
scas
pop
call
mov
jae
xchg
hlt
out
idiv
mov
xchg
mov
or
popf
out
out
mov
mov
lcall
aas
xchg
outsb
outsb
aas
sub
insb
xor
push
repz
arpl
mov
sub
les
fs
pop
inc
or
sti
movsb
adc
out
in
ja
movb
jb
push
mov
jg
xchg
fidivs
pop
enter
jb
sbb
loope
xchg
test
mov
mov
xor
jbe
mov
mov
mov
dec
add
hlt
icebp
pop
insb
push
sub
insb
or
mov
mov
push
cmp
cld
sbbl
test
clc
fdivr
test
cmp
jge
shlb
dec
lret
sbb
pop
insb
mov
cmp
mov
mov
clc
in
popl
out
icebp
xchg
in
pop
bound
pop
lret
pop
mov
cmpsb
and
repnz
in
cmp
sub
fsubrs
and
adc
aad
mov
xchg
xchg
rorb
in
scas
fists
push
xchg
pusha
or
stos
test
lret
or
jl
add
lret
pop
sbb
ja
pop
imul
mov
fnstcw
xor
and
into
stc
ficompl
mov
pop
mov
test
lods
repz
cmp
xor
daa
testl
jp
sub
mov
mov
and
test
xchg
mov
lret
add
push
mov
cli
cmc
arpl
es
aas
adc
jle
pop
sbb
jecxz
sbb
xchg
ds
or
mov
negb
push
ficompl
xchg
inc
dec
or
inc
sbb
adc
cmp
es
shl
adc
pop
div
push
sbb
or
imul
and
loope
cmp
mul
mov
xchg
fistl
int
mov
das
or
and
mov
mov
add
mov
enter
xchg
mov
push
mov
dec
or
repnz
pop
mov
push
in
icebp
pusha
sti
push
sahf
shlb
clc
in
jmp
faddp
cmpsb
daa
notl
mov
aam
in
add
mov
mov
mov
cmp
xchg
imul
adcl
call
scas
mov
push
jg
mov
fwait
sahf
mov
repnz
pop
ss
jo
dec
cli
repnz
lods
or
sahf
das
mov
add
mov
mov
loop
insb
js
dec
mov
dec
mov
cmp
mov
jb
sbb
pop
int3
jp
mov
iret
lcall
call
xchg
push
mov
xchg
push
aad
inc
daa
dec
fsubr
jbe
jle
inc
pusha
and
into
dec
leave
lds
cwtl
movsl
btrl
adc
inc
in
adc
test
push
stos
daa
call
in
push
outsb
push
imul
sahf
mov
pop
mov
pop
js
xchg
int3
movsl
mov
js
std
test
jo
das
in
fistpl
test
sahf
sahf
dec
fnstcw
cmp
cmp
cmp
jecxz
fucomi
dec
mov
adc
pop
mov
jp
pop
lret
xor
xchg
pop
or
aaa
jl
aad
xchg
sbb
lea
scas
and
adc
popf
mov
sub
xchg
inc
repnz
mov
and
in
aam
sub
cmpsb
test
mov
sbb
push
in
fwait
bound
leave
insl
push
fs
mov
rcrl
ss
rcrb
imul
movsb
les
xchg
ret
or
jmp
movsl
lods
sti
jbe
xchg
outsl
data16
lods
in
popa
loopne
xchg
popf
lds
xchg
xchg
adc
cmp
add
jne
leave
movsb
mov
stc
popa
clc
mov
cld
push
jae
sub
push
add
xor
adcl
ud0
data16
test
dec
out
adc
mov
mov
sti
std
dec
mov
in
dec
icebp
push
cmp
inc
mov
fwait
cs
loopne
push
inc
lods
mov
ret
mov
sub
push
pushf
das
scas
clc
stos
xorl
in
jne
jne
sbb
adc
daa
insl
mov
sbb
out
les
rcl
fxch
fnstsw
push
xchg
out
mov
gs
jne
mov
pop
xchg
flds
filds
ret
inc
testb
ja
dec
lock
out
shr
jp
insl
sub
push
pop
and
dec
add
and
mov
out
mov
push
mov
sahf
jg
mov
xchg
nop
mov
gs
pusha
out
sbb
push
or
sbbl
adc
cmpsb
cmp
ffreep
sbb
cmp
js
xor
pop
cmp
mov
mov
lret
outsl
vminsd
mov
xchg
out
jnp
aam
jecxz
es
mov
jle
pushf
fbld
push
add
mov
sahf
je
cmpb
movsb
sbb
xchg
pop
in
and
mov
push
dec
pop
scas
test
sub
sbb
jp
cmp
mov
gs
pop
mov
and
mov
xor
push
mov
lock
sahf
cld
fs
dec
mov
lods
lock
call
xor
lret
push
add
pop
mov
inc
xchg
adc
sti
push
aad
lret
adc
or
pop
je
push
jae
pop
or
xlat
popf
jecxz
fstps
mov
mov
cli
call
mov
cli
dec
pusha
jge
out
lahf
stos
jge
popf
sub
push
aas
gs
sahf
imul
mov
dec
das
or
rcrb
sahf
mov
jge
jl
xor
and
loopne
stc
pop
mov
mov
mov
aam
inc
out
cltd
jmp
adc
xlat
cmc
andb
xchg
push
dec
jbe
lea
imul
xor
pop
jecxz
add
lcall
xor
sub
cwtl
cmp
inc
popf
ret
aaa
into
test
ja
jl
repz
sub
xchg
or
fnstsw
sbb
rep
add
lcall
and
test
insb
test
xchg
rcll
adcb
xor
jp
adc
mov
push
mov
ljmp
add
xor
pop
mov
sbb
sbb
pop
inc
popf
sub
hlt
popf
mov
ret
stos
sbb
and
cmp
fidivrl
push
cs
jbe,pn
or
xchg
js
out
or
mov
jmp
in
xchg
jecxz
push
mov
dec
xchg
int
inc
insb
or
pop
or
mov
sub
imul
aam
pop
mov
imul
addr16
fnstcw
mov
mov
mov
lret
fnstsw
scas
icebp
jmp
pop
sahf
sub
dec
sbb
aaa
adc
sti
cwtd
imull
jno
ja
js
aas
ljmp
arpl
scas
inc
xor
test
lods
leave
xor
addr16
jge
and
add
and
mov
in
and
mov
mov
mov
les
movsb
scas
mov
mov
movsl
js
cmpsl
or
js
jb
das
xchg
dec
lods
mov
dec
cmc
dec
imul
sti
cwtl
fidivl
add
cmp
sbb
pop
adc
rcrl
mov
add
das
fsubrs
out
or
dec
shll
xchg
mov
cmp
sub
add
sbb
inc
insb
xor
sub
add
xchg
iret
stos
mov
mov
push
pusha
xchg
dec
sbb
push
inc
out
outsb
jle
cmpb
pushf
insb
or
sbb
push
cmp
sub
add
inc
rcr
arpl
push
popa
cli
out
mov
iret
push
pop
loopne
out
out
jae
cmp
cmpsb
push
shl
push
mov
xchg
in
inc
dec
xchg
shl
jge
loopne
es
into
das
cmp
test
jnp
sbb
jo
inc
inc
cltd
inc
leave
mov
insb
xchg
push
push
addl
aaa
mov
mov
out
ret
je
std
orl
push
jae
loope
pop
jae
std
lcall
loop
mov
movsb
inc
divl
std
psllq
movsl
inc
add
sub
push
mov
aas
daa
cmp
popf
mov
xlat
xor
sahf
and
mov
or
fimuls
aad
mov
xchg
adc
hlt
mov
push
push
dec
inc
imul
rorl
xchg
lods
cli
sbbl
dec
xchg
rolb
jnp
mov
icebp
out
fwait
cmp
jle
cltd
push
push
fcomip
jae
sub
cmpsl
int3
subl
xchg
popa
ds
xor
mov
mov
popl
outsl
inc
push
push
lock
nop
sub
dec
jmp
test
jae
stc
lods
js
mov
in
movsb
or
ret
or
mov
adc
xchg
and
imul
pop
mov
sbb
pushf
jbe
stos
inc
jmp
mov
stos
ret
daa
inc
mov
rol
fdivr
call
sahf
rclb
xchg
adc
daa
add
pop
jae
cld
leave
jns
and
pop
out
cmp
out
cltd
dec
inc
in
pop
idiv
jbe
xchg
xchg
faddl
in
mov
mov
out
jo
sub
cli
or
jmp
jnp,pn
jge
and
ret
jecxz
in
lcall
in
shll
or
add
jnp
in
cmpsb
cmp
cmpsb
mov
leave
lds
dec
mov
sbb
add
mov
xchg
pop
int
test
in
mov
ss
rcrl
push
rcll
and
loopne
stos
pop
xchg
xor
xchg
pop
and
inc
push
negb
mov
jno
cli
pop
jg
les
inc
aaa
fcmovu
clc
mov
addr16
xor
int
mov
jge
pop
js
leave
cld
push
loop
aad
push
inc
sub
push
inc
inc
cmp
mov
leave
adc
push
mov
pop
fwait
je
addr16
dec
xchg
rcrl
in
lret
sbb
out
and
add
sbb
dec
inc
stos
push
mov
inc
stos
xchg
mov
and
lahf
lods
pop
push
and
roll
fcoml
push
outsb
dec
loope
dec
ret
and
data16
fsts
out
out
pop
jbe
jne
stc
movsb
in
mov
pop
xchg
pop
mov
push
dec
or
mov
movsl
jo
jg
sbb
pusha
and
jbe
push
imul
jl,pt
in
fwait
movsb
push
out
cltd
cmp
inc
subl
jmp
xchg
jnp
push
ljmp
inc
adc
shl
pop
xchg
lods
jmp
mov
enter
xor
iret
in
stos
inc
stc
cmpsl
scas
pop
subl
je
jl
lods
out
xor
lock
ficompl
outsl
dec
push
fdivrl
fs
popa
pop
mov
push
push
mov
sub
mov
or
mov
cmpsl
popa
into
aam
mov
popf
dec
xchg
shl
pop
pop
add
icebp
sarl
xor
mov
pop
jge
hlt
push
and
popf
insl
inc
sub
imul
inc
popf
mov
or
cmp
mov
loop
clc
in
dec
cld
shlb
push
cmp
imul
and
movsl
dec
out
jno
jg
add
orl
and
rolb
mov
adc
hlt
dec
in
mov
fiadds
push
ret
int3
cmpsb
jbe
fwait
add
in
nop
mov
aaa
mov
dec
mov
lea
add
sarl
incb
sahf
jnp
jbe
jb
dec
jo
push
call
push
sbb
push
add
mov
shl
dec
xor
jns
aad
add
jne
insl
push
insl
inc
loopne
push
insb
sub
cmp
insb
push
or
int
les
jnp
jg
test
std
mov
jae
pop
mov
add
dec
stos
shll
push
stos
fsubrp
xchg
les
sbb
cmp
adc
or
lcall
jnp
cmpl
jb
ljmp
jno
adc
mov
sbb
push
pusha
jmp
inc
mov
mov
cmp
mov
in
add
outsb
cmp
bound
adc
das
dec
and
xor
mov
insb
cmp
loope
mov
in
test
mov
addl
xchg
imul
bound
sub
fwait
adc
and
adc
jae
stos
xor
cmp
pop
mov
jmp
or
jmp
leave
cmp
ret
repnz
push
pop
jb
xchg
xchg
jmp
lods
ja
dec
push
cmp
xor
arpl
sub
mov
cmc
push
mov
test
aas
adc
adc
cmp
xor
std
stc
test
test
mov
adc
sti
sub
cmp
cwtl
fisubrl
jmp
rorb
and
sub
ret
js
pop
mov
fisttpl
iret
adc
xlat
daa
inc
jl
outsb
cmp
rclb
push
sti
loopne
mov
or
or
sbb
sub
add
jnp
add
sub
aam
dec
sahf
in
rcr
xlat
jmp
mov
sbb
pop
add
cmc
xchg
jb
insb
into
adc
and
ficomps
popa
shl
pop
ja
adc
mov
xchg
mulb
cmp
adc
mov
fnstenv
roll
sub
cltd
addr16
mov
dec
sub
dec
mov
ficompl
push
fcmovbe
lods
mov
push
sub
sahf
in
cmp
out
cmc
mov
icebp
gs
mov
in
xor
cli
out
mov
add
mov
pop
xor
mov
mov
cmp
add
xchg
daa
test
call
call
add
mov
xor
test
data16
pop
push
out
jb
scas
xor
jbe
or
pop
push
jecxz
shll
jbe
add
inc
fstpl
pop
xchg
dec
push
add
sbb
scas
xchg
mov
lea
fdivr
mov
and
js
jbe
jp
cld
sti
push
cwtl
es
icebp
imul
push
rolb
div
lods
aad
repz
jg
jecxz
jne
outsb
dec
sub
sub
lahf
mov
jle
iret
movsl
das
mov
push
in
sub
xchg
add
fmull
iret
inc
lret
imul
add
loope
inc
sbb
scas
movsb
xchg
pop
enter
push
mov
fldenv
cltd
addl
xlat
inc
dec
mov
fisttps
pop
arpl
or
fxtract
push
jbe
pop
aas
outsb
jb
mov
mov
xor
xor
mov
ret
gs
adc
out
dec
mov
imul
insl
test
ret
push
xchg
ffreep
cli
or
xor
cmpsb
push
std
cmp
adc
xchg
dec
inc
pop
jno
aad
mov
test
repnz
daa
xor
inc
and
test
sub
fdivr
pusha
xchg
sarb
and
gs
dec
loope
pushf
lods
cmp
test
push
stos
js
popf
xchg
sahf
add
mov
cmpsb
es
dec
ljmp
inc
dec
outsb
sar
jecxz
push
ret
mov
jl
push
ja
xchg
push
hlt
jmp
jno
gs
mov
daa
inc
inc
mov
gs
inc
loope
scas
push
cmc
pop
cmp
lret
andb
and
sbb
sub
lret
lods
push
dec
mov
nop
gs
shr
fisubrl
cmpsl
dec
addr16
test
mov
cmp
sub
test
popf
mov
ss
bnd
cltd
sbb
movsl
adc
push
xchg
cmc
lret
mov
dec
ds
fdivl
jp
adc
pop
sbb
in
ret
movsl
shrd
sub
aaa
add
ljmp
add
mov
xor
out
push
shll
es
idivl
jns
fstl
imul
adc
test
sbb
mov
rcll
aam
es
xor
or
cwtl
push
aaa
shll
ficoms
cwtl
inc
sarb
setp
mov
pop
adc
pop
enter
cmp
xor
xor
std
leave
cmp
add
inc
xchg
add
and
push
cmpsb
gs
or
test
cltd
insl
rolb
cmp
and
cli
mov
push
add
loopne
sbb
mov
xor
or
mov
sub
aad
or
lcall
ljmp
pop
cltd
pusha
test
cmc
adc
push
add
sub
jmp
dec
push
out
and
test
pushf
jecxz
adcb
cmp
push
cmp
jne
add
sub
ret
mov
lret
xchg
jno
sub
mov
mov
pop
addl
xchg
idiv
or
xor
out
hlt
sbb
mov
mov
mov
fwait
ljmp
stos
mov
cld
subl
sub
or
or
cmpb
outsb
aad
pushf
lock
or
xchg
sub
xor
sbb
mov
pop
imul
ljmp
or
subb
cmp
and
lcall
mov
and
xor
repz
arpl
mov
xchg
add
dec
sub
in
sbb
fstp
aam
and
xchg
inc
and
add
sbbb
push
xchg
ss
adc
dec
cmpsb
jmp
xor
cmpsb
dec
xchg
imul
lret
push
ret
and
push
out
and
scas
push
mov
or
insl
push
jl
sti
mov
iret
fistps
cli
sbb
push
fisttps
dec
adc
mov
in
vmaxss
clc
in
and
fidivrl
pusha
dec
mov
push
xorb
pop
dec
xor
movsb
pop
loopne
mov
and
divb
and
mov
push
pop
cmp
push
sub
cltd
pop
mov
fs
lahf
jmp
and
les
sarl
cmp
and
fmull
adc
xchg
and
sbb
vmovdqu
push
mov
jnp
test
jne
scas
imul
adc
xor
mov
fidivl
mov
cmp
push
daa
cli
jp
or
xor
loopne
push
popa
inc
rorl
cs
mov
push
adcl
pop
or
pop
push
xchg
cli
cmp
inc
repnz
sub
filds
vmwrite
das
int
mov
loop
sbb
lods
hlt
addl
lods
dec
mov
adc
pop
imul
pop
clc
iretw
xor
insl
mov
lret
jbe
push
mov
mov
ja
pop
stc
and
adc
arpl
mov
add
fcom
mov
add
bound
xchg
xor
jmp
fimull
clc
mov
or
and
subl
xchg
mov
jnp
mov
lcall
aaa
jl
add
push
and
mov
pop
mov
sbb
stc
mov
lahf
pop
shrb
hlt
adc
test
and
fwait
pop
inc
out
add
or
dec
inc
cmp
push
rcrb
adc
xchg
das
mov
inc
out
bound
cmp
clc
jmp
dec
cmp
fistps
in
sub
hlt
insl
xchg
mov
pusha
fldcw
mov
add
xor
sub
es
cwtl
inc
xor
fwait
stos
stos
out
pop
mov
mov
add
inc
push
ja
cmpsb
inc
jns
out
shrb
mov
pop
xor
leave
mov
or
xchg
iret
or
jle
push
lret
mov
mov
dec
cmc
jbe
mov
imul
inc
popf
aam
dec
cwtl
push
push
cmp
sub
push
lods
cmc
push
xchg
in
cmp
sbb
jae,pt
scas
movlps
mov
jmp
dec
popf
popf
xor
push
sub
arpl
ficompl
adc
cs
jge
jno
pushf
jae
xchg
jno
int
push
int3
jmp
xchg
movsb
stos
mov
jb
jl
addr16
and
mov
loopne
xchg
push
sbb
shrl
xor
iret
rcrl
cwtl
dec
mov
push
outsb
dec
add
inc
or
cmp
imul
cmp
test
bsr
ret
sub
mov
dec
pop
sahf
idivl
inc
lods
sbb
xchg
mov
or
pop
es
fistpl
fistpl
fs
mov
icebp
rcrb
scas
pushf
jns
enter
imul
cmpsl
test
iret
lret
adc
pop
cs
mov
mov
mov
sub
ret
cli
xchg
or
add
inc
xor
aam
out
pop
push
mov
cmp
mov
popf
sub
sbbb
movsl
repz
enter
jl
out
cwtl
clc
pop
mov
mov
xchg
shll
push
jns
cmpsb
push
movsb
xchg
cli
scas
stos
jmp
push
cmp
outsb
jg
add
ds
repnz
or
pop
xchg
std
xchg
imulb
and
inc
mov
mov
decl
jl
push
adc
sub
adc
enter
cmc
lock
lea
jmp
outsb
push
inc
stc
jb
scas
add
iret
lods
and
mov
orb
jo
inc
add
js
add
and
jp
mov
mov
subl
push
pop
clc
fdivrs
pop
test
insb
mov
jecxz,pn
scas
inc
imul
pop
lds
jae
sub
xor
push
popa
inc
add
inc
adc
push
imul
fcoms
notl
jmp
imull
sbb
xchg
fs
sbb
mov
mov
rolb
xor
and
xchg
and
add
inc
roll
sub
leave
mov
cmp
adc
shl
cmpb
pop
addb
movsb
insb
imul
loopne
and
jne
jle
fldcw
sbb
enter
and
scas
lock
mov
fmuls
adc
ror
adc
mov
insb
arpl
sbb
imul
daa
cwtl
pop
mov
inc
jmp
outsb
pushf
stos
or
and
dec
movsl
sbb
mov
loop
mov
insl
mov
inc
push
adc
orb
lret
ret
sahf
cmc
fwait
movsb
jnp
add
xchg
xchg
bound
mov
outsb
inc
jle
lea
mov
add
jb
test
rcrl
lods
out
test
leave
les
mov
popf
mov
jnp
enter
add
loope
aam
pop
xlat
jp
adc
ljmp
imul
imul
cmc
aam
mov
jmp
and
xor
xlat
xchg
stos
stos
jb
mov
sub
add
sbb
inc
jne
push
fwait
mov
call
and
xchg
xchg
ficompl
pop
icebp
gs
in
outsb
testb
sub
sar
and
push
add
jno
test
mov
loope
in
sti
daa
mov
sti
js
xor
xchg
fincstp
dec
mov
andl
mov
sbb
cltd
pop
popa
repnz
add
xor
subl
push
or
frstor
push
lock
jg
test
jge
rcl
jge
xchg
int3
shlb
inc
add
aad
and
pop
jmp
je
mov
das
movsl
jns
lahf
int3
cli
aad
jne
mov
in
sub
imul
scas
jg
aam
cmpb
push
pop
js
sbb
xor
outsb
mov
add
ja
adc
lahf
xchg
sbb
push
dec
jmp
and
in
xchg
movsb
pop
stos
or
mov
cmp
cmp
mov
mov
mov
movsb
xlat
mov
inc
dec
scas
ljmp
push
sbb
rclb
dec
mov
xlat
inc
add
out
rcr
mov
lds
dec
push
sti
arpl
int3
xchg
xlat
pop
cmpsl
sbbb
push
je
sbb
or
pop
movsb
in
stc
jb
shll
leave
xchg
cmp
stc
xor
outsb
jae
into
pop
das
es
and
xchg
cmp
xor
divl
rcrl
mov
pop
hlt
in
stos
je
jg
lret
pop
imul
xchg
or
iret
mov
sub
jae
sbb
ja
int3
jae
shll
bound
lods
insl
or
mov
jnp
cld
clc
stos
xchg
aam
xlat
xchg
les
push
call
clc
inc
add
xlat
lret
push
into
popa
call
pusha
or
sub
jbe
push
sbb
sbb
pop
sub
cmp
imul
jg
out
xlat
test
mov
and
aam
ret
dec
ret
jmp
and
cmp
sub
push
mov
xor
movb
rorl
stos
vpminub
mov
xchg
enter
in
lods
js
dec
jne
in
lods
mov
xchg
jge
xlat
rcll
mov
mov
jmp
pop
cmp
in
cmp
rclb
ljmp
mov
into
jmp
xor
dec
xchg
mov
pushf
inc
repnz
cli
cmp
adc
add
xor
popa
cmc
push
xchg
inc
lret
adc
andb
jp
in
into
jne
enter
mov
xor
cmp
adc
lods
jge
sub
inc
aad
xor
pop
sbb
mov
dec
fsts
push
cmpsl
push
inc
push
xlat
and
mov
cmp
adc
aas
ret
pop
fisubrs
jbe
in
dec
lods
inc
lods
in
adc
out
cmp
imul
test
adc
push
jp
popf
int3
lret
xchg
daa
mov
aad
mov
aas
cmp
scas
mov
aad
sub
and
push
stc
lea
loop
stc
fisttps
cmp
inc
pushf
mov
insl
ss
push
bnd
push
jae
dec
sbb
jmp
dec
dec
sub
mov
pop
enter
cmpsb
lds
jnp
incb
icebp
insb
mov
inc
cmpsl
mov
pusha
test
cmp
lcall
dec
pop
test
dec
and
mov
sbb
imul
das
fstpt
lret
pop
hlt
ljmp
frndint
out
out
fnstcw
sub
fidivrl
std
dec
mov
push
sub
push
pop
dec
mov
adc
int
xchg
add
inc
xor
je
jns
icebp
jl
add
push
pop
mov
mov
cmp
sub
aam
and
fistpl
sbb
xor
mov
and
je
or
cmp
idiv
mov
mov
iret
pop
fistpll
push
outsb
rorl
out
cmp
enter
pop
mov
jnp
out
sbb
adc
leave
arpl
or
je
cltd
mov
mov
mov
ss
push
xor
inc
stc
add
js
out
sbb
loopne
mov
int3
xchg
dec
and
faddl
sbb
and
and
lcall
sbb
or
sub
sbb
sbb
jmp
cs
ljmp
in
leave
popf
dec
fadds
lea
sub
mov
out
xchg
vmovups
mov
out
out
lods
aam
outsl
jge
xor
xchg
inc
mov
movsb
xchg
cmpsb
lods
test
int
dec
pop
adc
pop
clc
mov
icebp
mov
jno
lret
ret
sbb
jbe
out
outsl
lods
mov
je
out
dec
jb
orb
mov
or
inc
and
imul
lcall
jnp
mov
shrl
cli
jecxz
lahf
ja
mov
or
sbb
mov
int3
push
repnz
test
aaa
adc
je
repz
cmc
repz
and
xlat
je
push
aam
leave
faddl
divb
imul
fdivs
jo
add
adc
addb
sbb
cld
push
pop
iret
aaa
mov
imull
out
je
out
jge
cmp
push
fistpl
fisubrs
jp
sub
xchg
push
outsb
addr16
inc
sbb
cltd
ret
sbbl
dec
pop
cs
add
fsubs
pop
cmp
sub
pop
push
inc
cmp
jl
in
ret
add
xchg
fdivrl
mov
ss
rorb
or
jl
sbb
mov
ficoms
repz
push
jbe
mov
hlt
dec
mov
int
push
insb
mov
das
out
adc
aaa
push
adc
rcr
and
iret
jbe
mov
loopne
inc
mov
subb
sbb
xchg
jb
inc
cs
mov
mov
mov
sbb
dec
xchg
stc
std
mov
push
push
daa
aaa
mov
jmp
and
xor
mov
pop
in
mov
sahf
cmp
test
stos
dec
lret
popa
in
push
sbb
bound
data16
cmc
xor
push
lods
mov
arpl
xchg
push
pop
call
addb
ret
fsubp
and
push
sub
out
inc
or
pop
lahf
mov
fildll
inc
sbb
mov
adc
jge
mov
dec
and
stos
imull
xor
or
pop
mov
cmp
leave
inc
pop
push
push
add
lcall
cwtl
and
movsl
dec
jno
fdivp
leave
out
dec
xor
xor
pop
shrl
xchg
repz
or
cmp
ljmp
push
mov
popa
xchg
adc
adc
sbb
mov
int
push
fisttps
test
pop
mov
or
and
outsl
shrl
sub
mov
repnz
pop
mov
mov
scas
lock
adcb
cmp
andl
dec
adc
jae
push
cld
sbb
sbb
outsl
scas
dec
rclb
cmpsl
imul
rorb
lods
pop
mov
cmp
sbb
ficomps
lods
lods
mov
out
mov
test
aas
dec
lock
dec
cmp
mov
cmp
jle
loope
xlat
push
push
or
int
push
xchg
bound
or
dec
fcomip
dec
scas
add
imul
andl
jl
pusha
push
push
push
dec
jne
cmp
pcmpgtd
and
jbe
mov
and
mov
sub
push
arpl
and
cmpsb
add
pop
lds
pusha
sbbb
jl
pop
xchg
sub
sbb
cli
fisttpl
fistl
jo
mov
inc
xchg
xchg
push
icebp
dec
and
scas
filds
mov
sub
mov
or
pushf
jno
ljmp
sub
cmp
gs
imul
pop
out
xchg
pop
jg
fxch
nop
push
sbb
or
daa
jns
in
push
cmc
mov
cmp
sub
sub
xlat
dec
and
dec
int
mov
dec
into
adc
jle
push
bnd
lea
xor
cmp
xchg
or
push
mov
stc
imul
roll
test
aad
jecxz
insl
jb
fcmovb
sbb
push
and
xor
into
cltd
leave
mov
out
jp
jg
sbb
cs
shrb
push
out
imulb
inc
loopne
jle
lods
sbb
aam
ret
push
aas
mov
push
jns
lahf
out
jp
ljmp
cmp
sti
sub
ficoml
sahf
sar
pusha
fwait
and
outsb
mov
fstpl
repz
loop
dec
or
and
mov
mov
or
lods
sbb
nop
inc
cmp
inc
cmc
icebp
xor
add
adc
push
les
idivl
cli
int3
inc
ljmp
inc
mov
repnz
add
mov
push
xchg
mov
mov
jo
sbb
jo
sbb
push
jmp
xchg
out
dec
jo,pn
sub
pop
insl
push
imulb
or
icebp
cmp
jno
mov
std
mov
lds
or
xchg
jle
gs
pop
sbb
mov
xorb
add
jbe
cmp
sbb
pop
cld
mov
inc
pop
test
mov
inc
lods
cmp
test
fsts
aaa
add
imul
mov
jb
out
jge
cmpsb
mov
jns
mov
movsb
test
lcall
mov
jmp
jg
xor
je
sub
inc
cmpsl
divb
loop
out
fisttpll
cmp
outsl
pop
mov
popa
mov
xor
pop
mov
push
dec
pop
jo
fstl
hlt
sbb
xchg
lods
ds
xor
lds
pop
cwtl
icebp
pavgw
jge
out
mov
xadd
std
jg
fcomps
pop
xchg
popl
xchg
mov
lcall
lods
ret
mov
mov
fcoml
int3
jl
adc
and
xor
push
jp
mov
xchg
cmc
pop
pop
subl
gs
les
pop
add
dec
adc
inc
xchg
cmp
std
or
sbb
push
inc
jg
or
push
xor
cmp
das
push
mov
add
lods
aas
mov
movl
insl
iret
push
repz
cmc
stos
cmp
inc
sbb
fcmove
insl
repnz
dec
fs
ss
mov
xchg
or
cmc
lcall
push
sbbb
adc
cltd
out
lcall
rclb
mov
xor
mov
push
pop
movsl
push
push
mov
flds
sub
jne
inc
and
stc
cmpsb
jl
insl
xor
and
ss
nop
sbb
out
fcompl
add
xchg
fchs
jl
jle
pop
and
cmp
cmp
push
ret
loop
and
subb
out
push
push
jecxz
or
sbb
enter
loopne
mov
arpl
dec
mov
pushf
add
movl
sub
repnz
adc
dec
aad
jbe
fsub
dec
test
fsin
add
jnp
bound
sbbb
xchg
inc
insb
sbb
add
xchg
sub
sbb
push
lods
cmpb
bound
pop
xchg
clc
es
repz
pop
mov
stos
enter
cwtl
aam
psrlq
dec
movb
adcl
mov
clc
pop
push
and
iret
jbe
and
ds
gs
pop
lods
cmpl
pop
outsl
sub
ljmp
lds
test
scas
dec
imul
lods
andl
outsl
lret
das
cmpsb
lcall
out
mov
xchg
idivb
add
lds
pop
cltd
xchg
repz
cmc
je
jp
mov
adc
cli
pop
lcall
sti
or
adc
mov
cs
mov
xor
lds
fs
pop
loopne
jmp
into
jno
mov
dec
push
pop
inc
ds
xor
ret
push
cmpsl
add
gs
ret
sti
push
subb
pop
jno
jns
mov
xor
mov
call
test
stos
cli
jae
push
and
stos
mov
movsl
aaa
push
loopne
mov
or
xlat
cmp
enter
push
or
jns
xchg
subl
pop
rclb
jb
cmc
cmpsb
adc
out
das
out
xchg
inc
dec
adcb
pop
popa
xor
aam
and
repnz
xchg
pop
je
dec
push
pushf
jnp
sarb
out
mov
repz
arpl
adc
scas
mov
sbb
outsb
test
pcmpeqb
cltd
dec
sub
xor
lcall
loopne
test
add
cmp
xchg
fstpt
cmp
jnp
cmp
cld
pop
dec
xor
add
in
aam
hlt
push
or
dec
ss
add
or
cmp
adc
data16
push
or
into
sbb
xchg
nopl
mov
sbb
nop
inc
sbb
sub
mov
pushw
loop
push
mov
jle
mov
ficoms
mov
lahf
es
mov
jns
and
je
inc
xchg
mov
xlat
push
sti
shrb
and
cwtl
scas
jne
fwait
push
mov
push
aas
iret
aad
dec
mov
int
mov
xor
pop
dec
int
cmp
lcall
push
jne
mov
in
pop
xor
mov
pop
xor
mov
sahf
cmp
aam
shr
mov
mov
pop
out
push
das
movsl
mov
pop
mov
push
lods
cmp
test
cmp
jg
jns
dec
lds
sbb
mov
mov
es
repz
stos
mov
cwtl
test
xchg
rcrb
xchg
xor
jne
xlat
cmp
sub
ficompl
aas
sbb
jle
sbb
xchg
mov
pop
lods
cmp
inc
jno
sub
lea
in
sti
sub
les
inc
out
imul
or
nop
jb
loope
sbb
sahf
xchg
and
xchg
jmp
xchg
inc
sub
xchg
dec
and
mov
sub
and
clc
stos
mov
mov
lods
test
test
push
lods
aaa
shrb
adc
adc
mov
adc
mov
cmpsl
repz
cli
jns
mov
mov
es
mov
add
insl
sar
cmp
int3
ficompl
ret
test
jp
sub
cs
fisttpll
pop
in
pop
jb
mov
fdivrs
das
sbb
xor
xchg
and
adc
xor
out
cs
adc
xor
sbb
push
lock
in
xor
cmp
mov
adc
sbbb
xchg
stos
subl
mov
ret
jle
ss
xchg
lahf
sub
int3
je
movq
jns
inc
stos
out
jecxz
adc
sub
xor
mov
mov
cmp
mov
add
scas
iret
add
xchg
push
imul
pop
pop
mov
cmp
mov
ljmp
nop
call
mov
clc
cmp
sbb
pop
ja
int
sbb
mov
cmp
es
pop
testb
mov
lock
out
add
pop
stc
sub
ja
cmp
insb
dec
mov
in
mov
in
fists
cmc
fists
roll
addr16
sub
adc
bound
pop
sbb
jb
jbe
add
rcr
xor
aaa
movsb
or
mov
cli
inc
xorl
xchg
mov
bound
inc
inc
inc
iret
in
gs
and
xor
inc
aaa
test
fwait
scas
repnz
mov
xchg
dec
repnz
fcoms
test
sub
lock
mov
imul
in
and
sbb
cmpb
mov
mov
hlt
rol
or
sbb
stos
add
test
sub
mov
xchg
ret
call
xlat
push
mov
mov
in
lods
pusha
dec
mov
pushf
jb
loopne
jle
mov
mov
fwait
xchg
add
imul
movsb
ret
mov
jns
jns
shll
rcr
call
paddsb
out
std
fs
filds
xchg
mov
mov
mov
popa
insl
push
add
sbb
shrl
outsl
inc
jb
mov
cmpb
mov
test
and
add
or
cmp
and
push
out
aad
shll
jge
push
sub
mov
mov
test
cmp
insb
xor
test
in
sub
xor
and
testl
xchg
hlt
in
insb
xchg
sub
nop
imul
or
scas
mov
push
cmp
ficoml
xchg
sub
test
pushf
fwait
aaa
mov
push
dec
dec
inc
cli
push
repz
mov
sub
mov
mov
xlat
mov
xor
jg
das
xchg
stc
add
cmpsl
icebp
aaa
pop
out
pop
roll
dec
roll
popf
test
ljmp
and
cmpsl
aam
cmp
add
inc
pop
outsl
xchg
scas
and
inc
adc
xlat
std
movsb
inc
insb
loope
call
mov
ret
imul
test
mov
inc
mov
lcall
shlb
push
and
es
push
popf
push
loope
or
shl
iret
ljmp
pushf
stos
adc
and
pusha
loop
aas
push
and
jns
out
cmc
or
mov
inc
int
in
lahf
sub
xor
iret
jmp
lea
sbb
das
outsb
mov
push
movsb
cmp
into
add
fldt
cltd
test
xchg
js
sbb
pushf
insb
mov
pop
stos
mov
scas
dec
lret
xchg
xchg
lods
push
rorb
pop
xor
add
lods
sbbl
xchg
dec
daa
dec
add
aam
popa
push
fsubs
call
test
mov
cmpsl
and
and
cld
test
dec
stos
in
fistpll
jg
repnz
mov
jle
shlb
incb
jb
out
popl
add
push
mov
fucom
aam
outsl
push
pop
into
sbb
or
enter
jne
inc
adc
push
jp
enter
push
dec
pushf
pop
adc
jmp
sbb
mov
pop
mov
and
shlb
push
jl
sub
xor
cmpsl
pop
es
jp
dec
test
jge
hlt
fstl
fcmovbe
xlat
dec
adc
jo
cs
fwait
stos
sub
push
mov
sbb
adc
nop
in
into
or
push
add
or
mov
std
call
adc
hlt
and
icebp
clc
sarl
ret
mov
les
add
icebp
bound
and
xchg
je
adc
pop
pusha
cmp
loope
aam
dec
es
mov
sbb
enter
sti
add
rclb
ret
sbb
out
or
in
mov
xor
leave
lret
xor
cmp
xor
icebp
cmpsl
fcmovnu
mov
and
push
cmp
inc
mov
data16
pop
mov
push
clc
xchg
add
sbb
mov
out
xor
inc
outsl
cmpsb
movsb
xchg
movsl
mov
xchg
psrad
inc
arpl
aaa
aam
inc
lret
and
cli
fldenv
sarb
lods
xor
sahf
or
daa
jb
and
xor
lock
enter
inc
xchg
jne
jp
jecxz
add
or
outsl
dec
fisttpl
in
xor
idivl
xor
push
inc
popf
mov
sub
mov
sahf
outsl
aaa
sub
mov
fisubl
not
hlt
adcb
imul
mov
popa
mov
into
inc
mov
mov
mov
fildl
mov
call
popf
add
fstpl
add
lods
xor
call
sub
in
push
shl
lcall
mov
and
cld
roll
add
jp
adc
mov
fcmovb
pop
push
lret
inc
mov
outsb
pop
xchg
xchg
dec
xchg
dec
stc
scas
rcll
sbb
xchg
adc
fs
jnp
fs
std
or
loope
int
mov
mov
pop
push
aaa
test
pop
lret
shl
fs
xor
sbb
cmp
call
test
rclb
mov
inc
add
jge
test
adc
jbe
cwtl
fsubl
sbb
enter
mov
cmp
sub
xchg
push
lret
push
stos
xor
pop
xchg
insb
js
ret
sub
ljmp
push
sub
daa
ja
xlat
jb
in
push
inc
xchg
loop
in
inc
add
xor
and
push
or
ds
or
aad
pushf
jns
cltd
out
and
xchg
into
cmc
out
sbb
lcall
enter
and
bound
ds
dec
int
push
stos
negl
jecxz
int
insl
push
cs
std
lcall
inc
enter
mov
sub
jmp
push
ljmp
xchg
mov
lret
test
int
std
push
sub
jbe
mov
jb
repz
dec
fsubl
in
test
in
push
mov
ret
imul
ljmp
sbb
lods
int3
clc
cli
bound
outsl
push
and
inc
and
mov
out
xor
pop
mov
mov
imul
popa
mov
imul
jge
dec
pop
lods
in
xchg
pop
push
lods
hlt
mov
bnd
xor
je
or
bound
sub
addb
fsubr
push
cmp
xchg
movsl
insb
insb
bound
insb
lea
mov
add
mov
scas
jmp
jg
dec
sbb
sbb
lds
scas
push
xor
cmpl
dec
sbbl
xchg
push
icebp
cmp
sub
ss
into
and
inc
cmp
lret
and
mov
pop
adc
dec
xor
orl
mov
call
fdivs
dec
inc
in
jnp
xchg
sbb
push
insl
sub
mov
cmc
out
jb
lds
and
push
and
scas
enter
push
cmc
test
jle
out
cmpsb
pop
sub
or
and
push
jp
fmul
lea
inc
mov
or
xor
mov
or
push
sbb
ret
cmp
adc
adc
pop
pop
xor
add
add
mov
enter
test
adc
mov
cmpsb
jae
test
cmc
addr16
jo
push
cltd
and
xchg
jae
xchg
insb
loope
or
aam
xchg
and
push
js
sub
icebp
sub
movsb
sub
cwtl
pop
jnp
aad
mov
mov
push
sub
ljmp
xor
adc
or
sti
mov
pop
shr
iret
mov
insl
scas
mov
mov
arpl
and
push
lret
dec
inc
cld
test
and
imul
sub
pop
sbb
pop
dec
lock
mov
lcall
in
arpl
mov
out
mov
sub
pop
idivb
dec
jo
mov
dec
xchg
xlat
cmc
add
mov
pop
or
add
cli
pop
lea
insl
adc
loope
xchg
rclb
and
popa
mov
enter
cmpsl
movsl
push
or
sbb
mov
cmpsl
xlat
mov
test
dec
mov
mov
sbb
xor
cmp
xabort
or
mov
fs
mov
jnp
jae
dec
imul
cmc
or
mov
iret
das
jbe
mov
xor
cmp
cwtl
and
jae
mov
xor
and
popf
sub
test
pop
dec
push
push
mov
xor
mov
decl
outsb
sbb
fistpl
test
pop
push
gs
sub
or
cld
inc
divl
sti
inc
xchg
push
ss
adc
adc
mov
ljmp
push
fadds
and
push
les
inc
imul
push
inc
fimull
stc
fstps
mov
xchg
jp
mov
mov
in
in
daa
pusha
jecxz
sub
dec
xchg
pop
jnp
mov
imul
mov
dec
xorl
jo
fcmovu
divl
push
sub
shll
aas
add
fsub
lods
sbb
loop
insb
loopne
lea
inc
and
add
jno
les
lods
ret
enter
int3
clc
jae
fstpt
jg
stos
xchg
push
jp
std
int3
push
xor
push
mov
mov
push
jmp
ret
mov
clc
cltd
xchg
dec
pop
mov
xchg
testl
in
push
pop
je
mov
or
test
imul
ja
cld
ja
out
push
sahf
push
jnp
outsl
scas
jns
mov
jl
xchg
mov
out
or
push
xor
jb
dec
adc
sti
inc
push
in
bound
pop
imul
cltd
popa
cmpl
fcoml
mov
shrl
xor
out
add
daa
mov
mov
fnstenv
std
and
fisubs
cmp
cmpsb
dec
loopne
add
les
pop
stos
or
pop
pop
adc
dec
hlt
mov
fisttpll
cld
lret
jno
into
test
jns
add
mov
pop
not
mov
aam
add
push
pop
xor
sub
stos
sub
out
pop
sbb
mov
pop
mov
aad
ljmp
xchg
cli
fstps
mov
mov
mov
scas
sbbl
add
fsubl
jae
add
sbb
jmp
std
push
fs
mov
outsb
in
jge
mov
sub
loop
xchg
mov
popf
xor
jne
xor
into
ret
mov
mov
push
je
lret
add
sub
scas
push
mov
std
mov
xor
pop
xor
xlat
pop
cwtl
nop
ljmp
ljmp
fmul
shl
mov
out
mov
sbb
test
cmp
dec
mov
add
xchg
lock
bound
sbb
jbe
sbb
and
repz
mov
mov
sbb
mov
inc
jbe
imul
sub
test
jg
jl
or
loop
sbb
insl
ret
adc
sarl
cltd
dec
mov
mov
pop
or
pop
and
xor
sub
sahf
sahf
mov
fcompl
pop
or
imul
push
jmp
add
repnz
rcr
in
mov
add
dec
repnz
jle
mov
xchg
mov
mov
pop
push
scas
dec
add
fwait
jbe
subb
and
xor
pop
jmp
int3
es
pop
lods
sbb
roll
xchg
jp
in
int3
adc
mov
scas
fs
pop
sbb
jae
inc
xor
jmp
and
pushf
outsl
test
int3
mov
inc
mov
push
xchg
lods
mov
shll
arpl
cli
adc
int
adc
fsts
push
mov
xor
rcr
dec
leave
mov
sub
fildl
popf
fisttpll
push
test
fiadds
cmc
xchg
lret
mov
repz
inc
rorl
repz
mov
or
sbb
in
lahf
push
nop
sub
or
and
mov
fnstcw
mov
enter
pop
sti
pop
and
pop
pop
xchg
test
xchg
movsl
cld
mov
js
outsl
in
out
cld
inc
sbb
xchg
push
loop
and
push
fsubrs
push
aaa
in
push
jb
pop
jl
mov
iret
mov
inc
loopne
movb
and
dec
pop
fnstcw
dec
jbe
enter
outsb
xor
pop
mov
inc
jecxz
insb
jp
test
cmp
shll
sub
mov
sbb
mov
pop
into
dec
pop
mov
call
adc
push
loopne
inc
push
or
adc
sbb
cli
or
sub
fildl
sbb
loopne
inc
in
inc
test
pusha
xor
or
xor
test
ljmp
sub
push
mov
xchg
or
pop
mull
add
aaa
jp
push
mov
lahf
sti
mov
jmp
jle
ljmp
jp
dec
loope
mov
mov
into
adc
test
jnp
std
jp
out
fcompl
leave
add
and
mov
xchg
mov
ffreep
or
xchg
push
fdivr
pop
cmp
sub
popf
in
dec
idivb
icebp
lcall
pop
gs
call
bound
push
sbb
mov
xchg
out
xchg
das
add
mov
xor
lock
push
mov
cli
and
jl
mov
mov
mov
aaa
dec
dec
loop
cld
and
je
sbb
cli
and
or
repz
jns
fwait
outsb
aam
and
dec
popf
add
or
test
add
push
or
es
fcom
hlt
cs
movsb
push
out
jg
or
scas
push
cmpsl
pop
fcoml
jo
xor
push
shlb
sub
add
add
xlat
and
xchg
lods
loope
repz
pop
test
insb
aas
cmp
pop
lods
mov
aam
pushf
fldt
mov
xor
test
fwait
or
xor
je
pop
jge
rcll
jnp
jp
pop
fimuls
les
pop
nop
xchg
xor
pop
xchg
cld
push
in
inc
jo
cs
dec
mov
mulps
fiadds
inc
inc
sub
ljmp
pop
das
cmp
jae
mov
sub
jle
push
ds
repnz
fxch
shll
cltd
jnp
mov
insb
xor
mov
test
xchg
scas
push
mov
imul
out
xchg
lock
cmp
popf
xchg
sub
mov
rclb
jle
vmptrld
jb
mov
mov
xchg
mov
add
pop
xchg
or
pusha
ret
cltd
adc
imul
out
push
lret
and
mov
int3
je
jns
push
sub
dec
push
push
adc
and
xlat
mov
lds
pop
lret
jbe
add
xor
or
dec
pop
cld
cs
adc
cmp
in
dec
add
call
sub
lds
mov
ljmp
mov
dec
les
mov
bound
xchg
stos
xchg
shlb
or
fcompl
outsb
pop
ds
pushf
lock
lret
and
jb
stc
sti
xor
cmp
and
or
cli
cmp
addr16
xchg
adc
and
popa
pop
cmp
lock
lret
jle
inc
arpl
inc
dec
and
cmp
push
imul
push
stos
and
ss
xor
andb
ror
in
jns
test
fnsave
xchg
xor
jle
pusha
add
add
xchg
bound
mov
or
enter
xchg
mov
push
je
xor
or
pop
xor
jbe
leave
pop
leave
ret
cmp
sbb
fidivl
xor
mov
adc
arpl
repz
mov
sub
xor
or
das
mov
lods
sbbb
cmpsb
jae
enter
dec
outsl
pop
cltd
out
dec
xchg
xchg
mov
dec
cmp
jno
adc
out
inc
pop
xchg
pop
testl
repz
jns
xchg
or
sub
pop
pop
jno
rcrb
lahf
jmp
sub
shrb
mov
push
lea
mov
mov
test
sub
xlat
aad
into
xorl
incb
sbb
pop
cmp
sub
cmp
pop
test
popa
push
or
dec
iret
das
xchg
cli
xor
add
push
das
mov
mov
int
arpl
ja
xorb
into
outsl
cwtl
fadd
push
call
mov
push
sbb
dec
in
test
in
and
roll
push
std
iret
mov
shl
xlat
dec
shll
mov
dec
mov
mov
cmp
les
or
xchg
inc
sub
cmp
es
lret
dec
invd
stc
dec
sbb
add
cli
rcl
int3
cmp
and
rcll
push
or
ret
jmp
adc
loope
dec
push
push
sbb
loopne
stc
loope
fidivrl
iret
fisttpll
aad
or
por
stos
push
repz
and
mov
aas
cmp
andl
repnz
and
addr16
lods
mov
hlt
loopne
cmpsl
jns
cmp
jo
pop
mulb
dec
mov
bnd
sub
cwtl
mov
inc
sahf
pop
lret
pop
ret
out
lret
test
or
push
sub
jge
pop
cwtl
push
cmpsb
js
mov
ja
out
xor
or
enter
shl
add
mov
xchg
in
nop
andl
mov
aad
test
cmp
inc
enter
ret
sti
sbb
xor
gs
push
aam
es
decb
nop
mov
in
rol
jl
cmc
cmp
sbb
out
inc
mov
jnp
jecxz
es
in
mov
fsubl
jecxz
xchg
daa
add
bswap
js
xchg
pop
inc
mov
out
aam
mov
aam
lock
lahf
push
aad
psubusb
addr16
ret
pop
shlb
mov
sbb
xlat
inc
xor
mov
xorl
mov
out
sub
leave
mov
or
sbb
pop
inc
mov
ss
mov
lods
cmc
add
add
lods
pusha
and
pop
or
pop
stc
not
jle
shll
pop
add
push
das
out
movsl
arpl
cmpsb
mov
inc
push
and
add
or
cwtl
mull
adc
jnp
test
cmp
leave
mov
out
leave
jle
mov
pop
or
movsb
stos
ljmp
adc
hlt
and
xchg
push
jmp
in
cs
mov
adc
jl
movsl
jmp
out
loopne
repnz
arpl
fmuls
je
iret
sub
sbb
sub
popa
hlt
popf
out
push
mov
adc
movsb
mov
and
int3
xchg
out
xor
jg
mov
clc
and
in
sahf
getsec
shll
xchg
cld
sbb
neg
outsb
neg
cmpl
lea
scas
mov
add
stos
xor
rcrl
test
inc
out
sbb
dec
jge
dec
pop
pop
jg
pop
mov
loope
push
movb
and
jle
sub
hlt
xchg
nop
out
cmp
sub
movsl
daa
xor
sbb
xchg
dec
sbb
and
mov
inc
add
je
mov
cld
push
shrb
test
int3
sbb
ds
clc
or
mov
sbb
xchg
cld
ljmp
loop
cmp
inc
push
add
mov
ja,pn
mov
ja
fidivs
jmp
rcll
mov
lea
cmp
xchg
pop
pop
inc
push
sub
ret
push
call
jnp
cwtl
mov
arpl
daa
add
lea
xchg
jecxz
sub
aad
add
ret
xor
xchg
adc
inc
jnp
lret
mov
outsl
pop
sub
cmp
mov
enter
arpl
push
mov
mov
fmull
sbb
mov
subb
mov
push
rcrl
dec
cmp
jo
repz
in
fnsave
or
movq
movsb
xchg
arpl
cmp
jge
jmp
mov
sub
inc
xchg
cmpsl
ret
sarb
and
jmp
add
dec
fwait
mov
jb
out
fyl2x
fisttps
ficoms
push
aaa
pop
xchg
hlt
lods
inc
jl
imul
pop
bound
das
scas
cmpb
sub
enter
aam
fdivrl
lea
imul
int3
out
adc
aam
sbb
js
and
mov
jmp
pop
pop
insl
xchg
call
jne
mov
daa
in
mov
pushf
pop
in
add
in
leave
aam
mov
arpl
outsb
cvtps2pi
cmp
ret
sbb
mov
pop
pop
mov
loopne
jne
sbb
sub
hlt
out
sbb
mov
cmp
mov
adcb
lods
xor
push
xchg
pop
mov
adc
movsl
jge
xor
push
lea
imul
push
es
xchg
repnz
inc
add
pusha
outsb
mov
mov
sub
inc
lret
mov
sarl
fstpt
rcl
jo
fwait
sbbl
call
movsl
out
popa
ds
inc
inc
push
add
sub
es
jmp
xchg
mov
mov
jo
aaa
xchg
cs
and
xchg
iret
inc
inc
mov
popa
push
pop
sub
jl
jmp
stos
ja
mov
add
mov
push
inc
mov
add
ror
aas
lea
leave
xchg
and
aas
xlat
or
popf
pop
mov
and
jo
bound
adc
sub
in
fsubrp
dec
jo
cltd
dec
dec
out
fstpl
mov
js
loope
out
sub
fwait
dec
inc
aad
xor
and
iret
xchg
outsb
push
lods
jmp
xor
enter
xchg
sub
jns
in
and
loop
in
call
adc
sbb
popa
les
pop
sub
stos
loopne
fisttpl
es
and
dec
xchg
xchg
cld
xor
jb
sti
mov
jecxz
cmc
mov
fs
cmpsl
cmc
cmp
fcoml
fdivrs
mov
int3
adc
push
push
in
vmread
inc
push
sbb
xor
mov
out
mov
mov
mov
stc
xor
mov
out
fldt
jae
popa
in
popf
push
push
jle
stos
mov
xchg
fsubrs
jb
add
inc
gs
out
jecxz
jg
mov
in
aad
mov
adc
push
inc
rolb
sbb
in
jbe
mov
mov
or
sub
shll
je
jbe
popf
mov
xor
mov
cmpsb
fs
sub
sbb
sti
pop
adc
ret
test
out
lret
mov
mov
xchg
xchg
mov
pop
mov
aad
cmpsl
outsb
pop
sbb
hlt
sbb
mov
dec
cmp
inc
mov
cwtl
cmc
stos
cmp
scas
push
callw
mov
cmp
loopne
mov
adc
and
sbb
insl
or
insl
jmp
xor
mov
arpl
xor
sbb
cltd
mov
adc
mov
push
xchg
les
stos
inc
pop
cmp
add
sub
mov
jo
adcl
push
mov
jb
and
cmp
lods
mov
inc
lds
sahf
insb
adc
jae
add
jge
jmp
and
xchg
jg
clc
inc
mov
jle
push
cld
adc
mov
add
rol
pop
xor
call
mov
test
lret
int3
inc
xor
clc
or
pop
and
loope
push
sub
dec
cmp
dec
xor
jecxz
stos
scas
enter
pop
jp
js
imul
stos
pop
xor
jge
enter
icebp
ret
fistps
into
clc
and
gs
sub
adc
fstpt
add
jg
ds
xor
imul
and
add
insl
mov
imul
ljmpw
mov
cmpsb
jno
add
or
leave
out
divb
clc
sbb
and
loopne
outsl
test
lret
or
addr16
pop
movsb
hlt
sub
and
lods
add
sbb
insl
xor
pop
jp
int3
iret
imul
sti
lods
into
mov
inc
cmp
fidivrs
sbb
dec
lret
add
in
icebp
pop
ret
mov
pop
aad
lods
xchg
popf
push
or
nop
cmp
cmp
sub
dec
popf
sub
enter
mov
cltd
fsubl
dec
shr
xor
push
push
and
ret
jp
fs
call
sbb
xor
dec
mov
fcoml
bound
js
push
sbb
shll
je
inc
js
addr16
sub
mov
in
test
mov
mov
ja
pop
pop
cltd
mov
add
jae
jmp
popl
jmp
addr16
pop
out
or
lret
cmp
in
mov
into
push
push
mov
cmp
out
hlt
or
fldl
and
aaa
mov
in
scas
and
or
bound
mov
mov
lods
cs
push
stos
push
cmpsb
pop
lods
decb
and
lahf
dec
push
pop
decb
fisubrl
push
jb
fwait
cmp
add
pop
xchg
xor
inc
into
inc
int
stos
sub
push
int
ljmp
outsb
jne
loopne
xor
fildll
dec
sbb
popf
sbb
fbld
inc
sub
outsb
test
fstpl
lea
decl
dec
scas
movsb
loopne
xor
popf
aaa
pop
cmpb
push
cld
xchg
inc
adc
adc
shl
jns
insb
out
mov
add
jae
pushw
jp
sbb
jo
mov
add
mov
sub
paddusw
pop
mov
clc
xchg
xor
inc
test
adc
cmp
mov
fisubl
fwait
add
sub
push
push
dec
loopne
mov
test
dec
and
bound
sti
add
clc
sub
repz
mov
jge
data16
mov
xor
mov
insl
sub
jp
out
adc
loop
outsb
nop
insl
ret
xor
roll
xchg
sarb
test
adc
cmpsb
or
decl
and
out
leave
into
imul
movsb
push
xor
push
stos
cs
nop
imul
push
lret
push
xor
push
mov
xor
sub
sbb
mov
mov
loopne
test
in
out
les
xor
popa
cltd
sbb
push
call
lret
mov
out
push
nop
mov
and
or
fldcw
bswap
test
dec
mov
xchg
add
pusha
push
dec
sub
and
arpl
sub
pop
push
cmp
inc
dec
fs
inc
mov
rorl
shl
insb
adc
xchg
rcl
xchg
adc
mov
fiaddl
ds
jo
push
mov
xor
icebp
call
es
xor
adc
sub
fwait
xor
loop
cli
xchg
sbb
test
jne
mov
lret
repnz
mov
dec
cltd
xor
jle
mov
bound
mov
aas
in
sub
or
shrl
sub
inc
repnz
jp
ss
push
push
jl
lcall
lahf
mov
pop
mov
imul
add
pop
mov
jecxz
loopne
mov
ja
jnp
imul
fwait
loopne
cmpsb
xor
mov
add
adc
js
or
pop
and
es
repz
add
mov
addr16
mov
cwtl
imul
popf
push
xchg
xor
nop
dec
mov
and
add
aam
outsl
std
dec
push
jle
mov
shrb
xor
push
js,pn
mov
enter
xchg
in
outsb
jp
call
fwait
jp
fwait
mov
cmp
out
stos
or
test
and
push
test
fsin
notl
not
pop
push
mov
adc
add
in
enter
repz
pop
fcmovne
lea
adc
movl
inc
into
push
push
notl
xlat
jae
mov
push
xchg
shlb
fsts
lret
inc
pop
sub
mov
adc
fisttpll
xor
pop
stc
add
out
lahf
jo
faddl
inc
inc
mov
les
mov
jl
add
out
in
mov
loop
jecxz
movsb
test
fsubl
sbb
add
fs
cmpsl
adc
in
stc
jg
or
mov
mov
mov
sub
insl
fadd
push
out
mov
pop
xor
mov
shlb
out
xor
icebp
adc
sarl
xor
js
mov
or
mov
insb
jb
mov
sbb
sbb
test
out
and
inc
adc
orl
sahf
clc
jg
cmp
fsubr
outsb
jp
xlat
hlt
cmp
mov
lret
rcrl
xchg
aam
mov
dec
push
or
iret
xchg
icebp
das
cmp
jo
xor
ret
or
paddb
stos
xor
stc
sbb
fistpl
movsl
test
mov
fstpl
and
inc
fcoml
adc
aaa
dec
in
mov
add
in
in
jle
sti
pop
je
lcall
or
fldcw
adc
dec
sarb
out
mov
xchg
repnz
addl
mov
xchg
and
movsl
sub
movsb
movb
push
or
sbb
cwtl
shrb
fisubl
aad
mov
out
xchg
repnz
aas
jbe
push
ret
test
negb
jp
push
xchg
sbb
and
pop
js
mov
frstor
add
add
xchg
ljmp
cmp
in
inc
or
inc
jno
out
jmp
repz
add
jecxz
shll
mov
sub
add
inc
cmpl
xor
repnz
push
mov
cs
cmp
pop
fistl
push
xchg
inc
sbb
lds
mov
pcmpgtd
ds
and
cwtl
out
mov
xchg
xchg
in
in
insb
adc
inc
sub
pushf
push
mov
ret
pop
or
ja
insb
sbb
loopne
inc
xor
test
push
clc
call
mov
xor
insl
dec
cs
divb
mov
mov
out
dec
push
dec
adc
aas
or
pop
imul
in
and
movsb
push
sbb
jne
mov
stos
add
pop
push
fisubs
pop
jb
mov
lahf
xorl
pushf
push
bound
loopne
mov
int
or
ficompl
in
cmp
icebp
cld
push
into
fs
jg
ja
cmp
gs
in
mov
cmpl
ss
pusha
mov
sbb
in
lahf
add
movsb
push
adc
test
test
ret
push
sbb
adc
jmp
icebp
nop
int3
lcall
ret
aam
je
add
adc
cmpsb
fisttpl
inc
add
les
xchg
cmc
xor
aas
lret
pop
fimull
xorl
cmp
hlt
cmpl
aas
shrb
inc
mov
imul
mov
push
mov
push
add
in
stc
insb
enter
scas
sar
pop
ss
adc
js
sbb
fwait
jecxz
mov
xor
lret
aam
loope
add
cmc
pop
ss
mov
sbb
lret
jl
jl
xor
mov
mov
gs
cmc
or
xchg
push
in
add
pop
mov
enter
pop
sbb
pop
xor
mov
mov
lcall
mov
sbb
cmp
pushl
sbb
shll
repz
sbb
xor
mov
mov
adc
and
push
and
jmp
lahf
mov
add
add
cmp
jle
in
cltd
insl
cmp
push
add
cltd
jmp
push
xchg
pusha
jecxz
repz
xchg
mov
adc
hlt
lret
int
push
xor
cmc
movsb
daa
jbe
mov
std
rcrb
and
ret
cmc
pop
into
out
add
rcll
movsb
mov
and
pop
jl
lcall
mov
orl
mov
and
push
cltd
adc
les
mov
push
lret
sbb
jmp
leave
xor
in
push
popf
dec
das
xlat
xchg
and
jno
xchg
iret
push
mov
xchg
aam
xchg
add
lahf
mov
loope
dec
push
rcll
lea
test
mov
or
adc
mov
ret
push
push
leave
and
xor
mov
mov
inc
xchg
mov
cmp
idivb
inc
mov
jecxz
pop
es
mov
das
pop
imul
fs
xchg
mov
xchg
movsl
dec
es
repnz
push
jnp
sub
in
nop
gs
jb
ja
pop
mov
jl
shll
adc
mov
fcmovne
lods
in
shl
or
sub
sub
push
clc
int
jb
sbb
decb
mov
xor
ljmp
sbb
bound
pop
les
outsl
imul
cmp
mov
mov
xchg
lods
daa
cli
rorl
popf
mov
xchg
fs
cmp
mov
xorb
out
and
aam
mov
test
je
pop
mov
sub
jle
dec
stc
sub
sub
inc
repnz
aam
mov
cmp
out
arpl
dec
enter
inc
mov
cs
ret
mov
hlt
aaa
jl
sbb
inc
xchg
dec
fldenv
push
repz
adc
enter
cs
daa
mov
push
mov
fiaddl
rcll
shlb
fldcw
mov
fstps
sahf
add
mov
cli
icebp
lahf
fwait
sahf
mov
lahf
clc
jecxz
ds
push
and
pop
xchg
jmp
xlat
mov
push
mov
mov
jg
pop
cmp
mov
mov
sub
rcl
cmp
aad
test
mov
rorb
xchg
ror
xchg
dec
lret
cmc
lods
jle
nopl
pop
lret
adc
pusha
mov
push
sbb
in
and
xchg
rclb
test
mov
fcomps
or
mov
mov
fisttpl
rolb
and
jmp
xor
xchg
sti
stos
popf
ljmp
test
psrlq
loope
mov
adc
je
inc
js
add
cwtl
mov
dec
or
ds
out
js
inc
mov
loopne
popa
ret
shrl
add
outsb
mov
lea
fmull
cmp
nop
jmp
mov
mov
mov
add
dec
jne
push
or
mov
sbb
mov
jmp
mov
hlt
iret
or
les
repz
fyl2x
movl
inc
js
inc
and
sbb
xor
mov
es
cmc
repnz
iret
inc
fucompp
jae
jecxz
push
lods
rorb
pop
mov
test
mov
adc
push
mov
jp
call
in
test
sub
in
rclb
and
andb
into
cmp
xor
mov
inc
and
mov
les
rclb
push
fwait
mov
popa
data16
mov
loopne
push
mov
cltd
movsb
sub
aas
and
dec
push
push
adc
imulb
fwait
jno
inc
icebp
test
bound
fstps
cli
mov
sbb
js
sti
jecxz
inc
ds
cwtl
iret
lahf
cmp
fnstenv
push
sahf
and
pop
leave
jmp
push
rcr
or
mov
jns
pop
jge
das
mov
mov
je
stos
insb
pop
cmp
jecxz
loopne
lods
out
mov
fidivrs
enter
insb
push
dec
scas
dec
movsl
push
xor
xchg
pop
inc
lcall
lds
dec
mov
xor
push
jmp
enter
dec
pop
or
mov
mov
cmp
pop
jo
test
js
push
stos
out
jno
fsubr
mov
xor
mov
rcrl
push
push
subl
add
sbb
fnstenv
inc
xor
ja
or
pop
cmp
inc
out
mov
ljmp
scas
cmp
jmp
std
test
xor
sbb
sub
xchg
sub
or
test
cmpsl
add
mov
inc
pop
xchg
nop
and
adc
scas
sbb
mov
or
stos
xor
or
fcomps
pop
jne
movl
jp
dec
mov
lods
aad
leave
iret
rcrl
adc
imul
mov
mov
and
dec
lret
mov
xchg
jle
jno
and
std
fdivrl
cmp
clc
or
xor
sbb
fst
push
adc
bound
cmp
xor
adc
lock
adc
mov
mov
mov
push
stc
push
and
pop
leave
popf
sbb
out
mov
inc
outsl
or
addr16
inc
push
nop
and
test
adc
or
cli
push
cmp
bnd
cmp
std
lods
inc
mov
xlat
adc
pop
jl
sbb
cs
lret
adc
inc
adc
jb
jno
cmp
pushf
sub
jns
pop
sub
not
push
mov
es
dec
mov
push
aam
inc
lods
test
dec
arpl
jge
or
stc
cmp
adc
sbb
and
and
mov
add
je
pop
and
jl
test
cmp
out
adc
int
mov
cmp
mov
sahf
fucomi
movl
sbbb
mov
or
movl
push
sbb
cmp
in
jae
dec
leave
and
pop
int
xchg
test
outsb
fucom
mov
jmp
dec
sbb
xchg
push
clc
fiadds
outsl
cmpsb
or
jb
inc
cltd
mov
xor
jle
mov
xchg
imul
push
insl
sbb
clc
stos
sub
add
push
fwait
call
xchg
add
pop
sarl
push
add
pop
daa
and
jmp
push
pop
imul
inc
mov
push
xchg
xor
cwtl
pop
hlt
or
push
cmp
dec
test
pop
inc
sbb
xchg
dec
mov
mov
mov
mov
fs
pop
push
mov
jmp
ret
mov
sub
iret
push
sbb
jge
fsubrp
mov
push
repnz
test
ret
push
adc
mov
into
and
push
loop
and
mov
rorb
adc
push
je
test
addr16
push
jle
push
mov
cmp
in
out
lahf
push
cmp
jmp
fst
sub
xchg
rorl
loop
add
daa
out
push
stos
js
cmp
sahf
and
xchg
loop
sub
add
adcl
add
adc
std
mov
ret
mov
andb
lods
ss
movsl
fdivs
mov
cmpsb
ret
aad
add
push
rcll
jg
push
cs
inc
es
adc
lcall
shll
in
add
jmp
jg
call
push
inc
pop
mov
arpl
repz
out
cmpb
add
iret
xchg
push
pop
xchg
adc
imul
popa
adc
rcrl
shll
jnp
lahf
cs
xchg
enter
push
fcomps
adc
in
push
sub
xchg
ret
and
inc
mov
scas
dec
mov
jmp
mov
or
inc
pop
sbb
fsubrs
sarb
mov
xchg
adc
ror
and
or
shll
jb
mov
mov
cmp
pop
mov
mov
mov
test
mov
andb
out
das
xchg
dec
gs
std
jl
pop
in
mov
sbb
lret
adc
inc
aaa
mov
push
push
ljmp
es
mov
popf
mov
movsb
stos
cmpsb
in
cmpxchg
clc
dec
jp
xor
inc
imul
push
sbb
shrl
lret
or
aad
daa
aad
push
loope
add
insl
lretw
outsb
jmp
sbb
adc
cmp
pushl
adc
sbb
push
jp
pop
mov
and
arpl
cltd
jbe
xchg
enter
xchg
inc
pop
shlb
mov
add
xchg
loopne
or
iret
mov
repnz
pop
dec
add
mov
xchg
or
mov
xlat
lock
jmp
add
scas
jne
test
imul
test
popf
lret
push
clc
mov
push
nop
negb
daa
call
xchg
push
fldlg2
aaa
adc
mov
imul
mov
dec
sbb
fstpt
shlb
xor
xchg
jl
pop
cmp
push
sbb
mov
mov
mov
dec
and
and
out
test
jmp
add
push
xchg
inc
pop
int3
into
mov
movsl
dec
jno
out
pop
cmp
or
pop
pop
mov
sbb
add
dec
popa
sarl
xchg
out
cwtl
scas
cmpsb
push
pop
sbb
cmp
ffreep
cmp
sbb
pop
mov
je
cmp
push
lahf
or
lea
push
xchg
mov
sub
cmp
jae
ljmp
dec
jl
mov
sbb
shll
fildll
or
add
adc
xchg
div
add
pop
xor
fcoml
xor
or
mov
dec
adc
mov
mov
aad
xor
jo
arpl
sbb
je
pop
dec
int3
ja
or
dec
sbb
sbb
push
jb
sub
jmp
pop
jmp
jmp
jge
xchg
lea
scas
fimull
dec
es
push
add
cs
test
pop
testl
xor
jo
or
xchg
or
mov
mov
pop
iret
shll
cmp
pop
mov
bound
aaa
add
rcl
rol
aam
iret
adc
data16
mov
mov
movlps
adc
dec
sub
hlt
cmp
jl
stos
fwait
sub
sbb
dec
jl
lds
or
call
outsw
filds
mov
inc
dec
mov
int
dec
cmp
dec
xchg
jg
out
xchg
mov
add
add
pop
sub
jg
sbb
loop
add
jecxz
ss
icebp
out
xchg
jae
mov
push
idivb
dec
mov
mov
movsb
adc
mov
bound
or
cld
add
lds
mov
adc
cmpsb
add
cmp
add
mov
cli
mov
mov
adc
xor
mov
mov
add
cmp
popl
xor
dec
cmp
lret
insb
cltd
jp
icebp
outsb
xlat
pop
mov
jp
jns
sysexit
fcomip
lcall
imul
and
lods
jns
mulb
popw
push
sbb
or
fnstcw
test
mov
int3
adc
pop
push
rcrb
push
add
xchg
in
ds
xchg
jb
xchg
scas
push
mov
sbbb
repz
lcall
stc
flds
cmpsl
inc
adc
leave
in
insb
out
addr16
loop
das
jl
std
mov
pop
mov
cs
pop
daa
inc
jns
lcall
lock
fwait
push
in
jbe
adc
cwtl
xor
mov
lcall
les
inc
or
add
push
sub
push
or
repz
sbb
adc
cld
cs
out
out
shlb
jbe
pop
add
or
pushf
gs
push
sub
xchg
jge
or
icebp
cmpb
dec
sub
call
fnsave
xor
dec
arpl
fwait
das
push
xorl
divb
push
push
cmp
idiv
stos
mov
decl
dec
pop
int3
jns
pushf
lods
xchg
stos
jne
idivl
adcb
test
cmp
fimull
pop
sub
lds
push
mov
ja
in
dec
jo
shll
les
jnp
xor
sbb
lret
mov
and
cltd
aad
add
xchg
fbld
add
incb
or
rorl
rorl
mov
mov
push
or
fisttpll
sub
pusha
ret
push
jg
jb
scas
sar
sub
lock
cmpsb
push
lret
mov
dec
cld
rcr
mov
mov
ljmp
adc
sti
cwtl
mov
test
push
leave
js
cmpsl
fcoms
dec
stos
out
xchg
mov
sbbb
mov
dec
fcmovbe
pop
aaa
xchg
ja
mov
incl
or
ret
pop
push
jb
lahf
ficomps
mov
shr
nop
push
in
mov
pop
xorl
sbb
cmp
enter
xchg
push
ret
inc
xor
test
jno
in
insb
jmp
xor
dec
push
add
fwait
mov
xor
ljmp
int
shrl
lods
mov
push
mov
sarl
mov
je
leave
dec
test
loop
lcall
pop
movsl
int
or
mov
lcall
fwait
dec
scas
mov
scas
insl
inc
push
lcall
mov
mov
jbe
mov
fsubrl
mov
adc
add
cmp
pshufw
jae
lret
xor
sub
cli
mov
xor
mov
mov
xor
adc
adc
inc
cmp
in
or
sarl
insb
data16
add
push
cmp
jmp
stos
lea
add
adc
fdivl
cmc
jne
and
or
xor
jnp
xor
mov
mov
icebp
mov
mov
inc
stos
cmpsb
aas
jae
jae
sbb
push
sbb
jnp
bound
pop
ret
and
cmp
and
rcl
repnz
sub
sub
xor
movsb
xor
add
sub
call
ret
shrl
rorb
stc
js
mov
dec
or
and
mov
pop
mov
inc
fstpl
sub
loop
xchg
push
pop
leave
cli
mov
mov
jne
insb
in
push
aas
mov
adcl
add
fnsave
scas
sbb
mov
sub
jmp
lea
cwtl
fwait
lds
lea
push
hlt
aas
insl
xchg
test
rcl
jae
das
lock
jmp
fldt
movsl
pop
mov
insl
iret
xor
pop
gs
fidivrs
xor
inc
sarb
inc
inc
das
cmpsl
sub
or
adc
cmp
movsb
sub
xchg
mov
cmp
pop
jb
sub
mov
daa
div
stc
jecxz
mov
pop
jp
cwtl
jmp
pop
jl
cli
lods
dec
and
sbb
add
ficoml
js
ds
sub
mov
pop
push
xlat
cmpsl
insb
mov
rcr
ror
add
jb
jl
out
sub
xchg
dec
add
stos
into
sbb
fisubrs
and
and
mov
lret
sbb
sub
loopne
movsl
pop
mov
popf
outsb
sub
push
push
pop
inc
lret
bound
and
gs
int3
add
sub
push
and
push
mov
cmc
in
jno
mull
aam
sbb
mov
je
mov
lods
enter
int
xchg
stos
inc
fistpl
sbb
xor
es
inc
push
lret
lret
lcall
psllw
enter
das
stos
jae
fsubl
aam
fcoml
clc
jge
sbb
aaa
aas
stos
sub
movsb
js
aad
push
rcrl
xor
scas
jge
cld
xchg
adc
lods
pop
add
imul
sbb
addr16
mov
ja
andb
add
aas
pusha
sub
xchg
pop
lock
aad
mov
sbb
mov
cs
mov
or
mov
mov
cltd
andl
cmp
push
add
ja
inc
out
movsl
stc
and
popl
rcrl
mov
lahf
testb
ficoml
sub
push
mov
xchg
int3
daa
fs
repz
xor
inc
outsl
push
or
xor
data16
in
icebp
shl
loopne
xchg
mov
mov
cmp
inc
insl
movsl
push
cmp
ss
fisubl
int3
mov
pop
sbb
dec
lcall
insl
in
test
pop
pop
dec
sbb
and
daa
andb
pop
test
lds
mov
aas
push
jmp
and
pop
pop
adc
shll
sbb
sbb
dec
push
and
inc
jno
add
hlt
pop
sub
shll
dec
sub
jmp
imul
xor
inc
add
inc
xchg
aad
dec
iret
jo
push
add
push
mov
inc
xchg
and
ja
loop
pop
cmp
jne
sti
cmp
adc
xor
jne
in
xchg
xor
aad
pop
out
push
cli
shll
mov
mov
push
mov
leave
sbb
rorb
mov
mov
xchg
aaa
xchg
cmpsl
push
icebp
scas
jge
xchg
lods
vpcmpgtw
pop
mov
repnz
sahf
jle
sahf
stc
in
mov
and
jg
inc
lahf
popf
jno
mov
jp
add
stc
lret
in
rcl
jbe
imul
mov
mull
lahf
insb
push
adc
push
add
ret
sbb
add
scas
and
mov
popa
lock
loop
mov
divb
fucomp
jo
popf
inc
or
dec
subb
inc
and
cmpsb
inc
pop
jp
adc
fdivrl
aas
jne
icebp
in
cli
sti
mov
cltd
sbb
sbb
in
xchg
xor
pushf
imul
sbb
repz
jnp
fdivr
mov
mov
sub
imul
mov
xor
fidivrs
push
outsb
xchg
leave
fisubrl
mov
imull
frstor
ja
test
push
push
fwait
pop
icebp
aaa
sbb
mov
aas
or
in
scas
mov
lds
mov
dec
in
xchg
outsl
loop
xlat
or
push
stc
bound
adc
ds
dec
iret
js
cmp
leave
jmp
std
and
add
jp
mov
notb
repnz
mov
add
pop
imul
jns
out
movl
sub
push
jecxz
iret
xchg
movsb
scas
sub
and
push
scas
test
outsb
mov
mov
mov
shlb
push
and
ljmp
es
push
fistpl
insb
fwait
sub
and
xchg
inc
lods
lods
sar
inc
xchg
shl
mov
aad
loop
inc
sbb
lret
sbb
outsl
jecxz
xchg
fsubr
mov
add
add
add
fmuls
add
inc
and
outsb
jo
xchg
repnz
lahf
cli
iret
push
xor
cli
mov
jp
dec
jne
cltd
out
call
sbb
addr16
inc
sub
rolb
lods
mov
mov
push
insl
pop
jnp
pop
jmp
nop
add
pop
and
nop
outsl
es
sub
jg
push
outsl
shrl
sub
cmpsl
xor
les
int
loopne
xchg
lea
push
lret
mov
xchg
fistpll
mov
xchg
pop
std
lea
movsl
adc
fldenv
divb
cmp
pop
popa
xor
inc
and
jmp
push
fdivp
faddl
mov
stos
pop
pop
add
das
out
sbb
push
add
xor
add
or
call
mov
mov
fcmovu
dec
jmp
shrb
dec
inc
movsl
push
sbb
fmul
repz
xor
mov
sub
cwtl
fcmovb
fisttps
in
outsl
inc
ljmp
inc
cmp
sub
jmp
and
stc
pop
jne
mov
ds
aad
mov
mov
and
pop
outsb
jae
loopne
mov
push
push
pop
mov
cmp
cli
xor
pop
sbb
mov
ficomps
je
cld
jb
fwait
mov
fmul
pop
fcoms
mov
iret
mov
popa
sbb
in
mov
cmp
daa
sub
out
sti
mov
and
call
adc
cmp
data16
sbb
xchg
rcll
jo
dec
pop
nop
jmp
push
add
popa
mov
mov
test
mov
dec
or
shrl
inc
push
enter
in
dec
sub
push
mov
lods
jmp
xchg
rolb
je
jne
mov
mov
enter
andnps
push
or
arpl
cwtl
fwait
mov
out
arpl
jmp
fdivrl
and
cmp
ror
sub
xchg
mov
jmp
and
fwait
mov
adcb
mull
pop
es
mov
mov
cmove
icebp
mov
sub
sub
test
mov
mov
rclb
leave
cmpsb
add
cmpl
mov
adc
lret
and
mov
negl
aas
dec
and
rcrl
aad
mov
mov
cmp
mov
dec
andps
push
test
pushl
mov
arpl
icebp
xorl
sbb
bound
mov
jmp
mov
mov
rorb
test
loope
jmp
repnz
fcmovb
cmp
mov
sub
mov
mov
lret
sbb
and
repnz
mov
xchg
in
imul
int
push
mov
ret
sub
jae
and
mov
xor
pop
inc
mov
shll
jp
jo
ja
adcb
movaps
add
aas
and
sub
cmp
push
adc
loope
lock
mov
arpl
ja
stc
inc
stc
stc
cmp
pop
sub
mov
push
push
fcomp
adc
xchg
push
mov
cmp
push
addr16
sbb
shrb
enter
sub
push
outsl
jmp
push
cmp
in
int3
aad
enter
into
jb
xor
and
mov
lret
subb
imulb
jns
out
xor
sub
in
sarl
shrl
jae
pop
aam
mov
push
test
std
fdivr
cmc
inc
lea
mov
xor
aam
enter
fistl
and
push
push
mov
pushf
clc
loopne
shll
add
mov
cmp
in
lahf
fdivl
gs
push
cmpsl
stos
mov
shlb
xchg
cmp
repz
add
push
outsb
lea
paddusb
fs
pop
adc
mov
jg
cmp
les
dec
jo
in
shr
stos
sbb
aas
out
and
loope
push
aad
xchg
or
or
and
xchg
addl
call
mov
lret
std
je
add
pop
std
push
dec
dec
xchg
mov
lahf
cltd
jno
fisubrl
jmp
inc
lds
sbb
aad
cli
int3
fistps
mov
gs
out
sub
push
add
jae
xchg
scas
outsb
loopne
xor
sub
cs
lahf
cmp
call
cld
and
pop
pop
popa
test
pop
popf
stc
xchg
movl
stc
add
ficoms
outsb
popa
adc
adc
and
mov
cmp
jb
adc
dec
cmp
pop
lcall
sar
testb
adc
cmp
xchg
lds
insl
xchg
mov
mov
sbb
lock
lret
xchg
in
mov
and
mov
mov
mov
dec
and
sbb
idivb
or
dec
test
lcall
aad
fbld
push
push
pop
add
xchg
pop
xchg
add
fcmovnu
sub
sub
xchg
bound
leave
jbe
sar
hlt
mov
popf
xchg
mov
push
mov
mov
mov
push
mov
insl
aam
adcl
mov
rcr
addr16
add
mov
leave
push
pop
dec
adc
sub
sub
imul
cli
pushf
mov
test
in
enter
cmc
push
notb
mov
lods
es
das
les
ds
cmpsl
ds
jb
mov
cmp
dec
outsb
test
sarl
add
and
cmp
pop
fidivl
mov
fwait
cwtl
pop
fsubrs
xchg
loope
stos
sbb
ds
mov
lds
and
dec
mov
cwtl
rcrb
cs
xor
das
pop
fwait
xor
inc
cmpl
test
xor
jl
loope
push
sbb
cwtl
rclb
inc
lods
loopne
ds
sarb
addl
jns
rcr
mul
jmp
dec
rol
push
mov
xchg
rcll
inc
arpl
inc
scas
inc
fidivrs
add
push
insl
mov
lods
jg
mov
loope
xor
jb
adc
test
popa
mov
sub
pop
pop
mov
aam
sbb
mov
xchg
mov
push
inc
imul
inc
lcall
je
and
fimuls
adc
incl
adc
and
pop
xor
out
and
jl
jecxz
cld
dec
out
adc
adc
out
cmp
addr16
ficomps
jo
cmp
dec
xchg
xchg
add
sarl
xchg
jmp
daa
pop
push
sarb
dec
pop
das
ret
repz
mov
push
adc
cltd
mov
adc
xor
xor
pop
or
push
mov
inc
fisttps
rclb
gs
adc
in
lcall
cmp
xchg
xor
icebp
add
push
cmp
out
sub
xchg
fidivrs
fwait
sar
dec
push
repnz
xchg
mov
les
call
loop
les
dec
mov
enter
push
rcl
xchg
mov
lods
pusha
mov
mull
xchg
int
push
and
pop
push
or
leave
xor
mov
pop
cmp
or
cmp
divl
test
outsl
ret
pop
leave
lea
xor
bound
and
mov
cmpsl
sbb
loop
push
jl
jge
jge
sub
sub
jmp
add
andb
adc
in
xchg
pusha
jmp
jo
notl
push
jne
lret
data16
addr16
jne
add
imul
jb
jbe
rcl
xor
or
and
add
or
mov
xchg
adcl
inc
mov
fcoml
inc
cmp
out
mov
mov
repnz
roll
std
add
inc
sbb
sbb
inc
insl
in
fwait
mov
in
push
push
mov
ljmp
xor
cmp
xchg
leave
adc
xlat
cmpsb
and
inc
in
and
or
pushf
fistps
jnp
enter
cmp
rcll
cmp
aam
cmp
test
and
lahf
ja
fsub
mov
or
and
leave
inc
clc
ljmp
mov
ja
orb
aaa
shll
les
cld
mov
leave
loopne
pop
mov
and
je
mov
js
mov
lret
stc
leave
nop
push
mov
notb
scas
into
int
stos
sbb
fadd
lahf
inc
pop
scas
pop
xor
into
xor
or
loop
sbb
sub
movsl
pop
orb
push
fnsave
cmp
icebp
cmp
data16
or
fneni(8087
cmpsl
fwait
xchg
test
push
pop
ss
sbbb
jb
dec
notb
cmp
ret
xor
push
shll
xchg
cmp
je
jb
insl
jb
push
cmp
inc
xlat
sahf
out
jo
into
sti
push
std
fs
les
pop
loope
into
cwtl
into
pop
pop
gs
jl
mov
sbb
xchg
cs
push
jb
sub
mov
es
jno
or
xor
imul
xchg
mov
sbb
mov
add
fstl
mov
daa
pop
rcll
scas
adc
jle
fldl
in
sub
xchg
and
in
push
add
sbbl
push
xor
mov
arpl
outsl
in
mov
cmp
xor
mov
rcl
test
inc
jmp
and
mov
sarb
cmc
pop
ror
jno
andb
mov
mov
pop
mov
jmp
das
push
dec
rcr
pop
popa
into
xchg
adc
or
ret
in
lds
adc
xchg
xchg
push
subl
loop
pop
mov
mov
jno
sahf
dec
sub
xor
inc
xor
out
mov
mov
or
pop
mov
jmp
pop
mov
rcl
dec
xor
dec
cmp
sbb
adc
jae
pop
add
sar
lock
mov
pop
test
insl
sub
pop
sbb
xchg
xor
packssdw
push
lock
push
and
or
mov
push
and
lds
mov
xor
sbb
push
in
imul
cmp
bnd
push
loopne
out
pushf
std
int3
pop
shll
adc
rorl
mov
push
mov
dec
lret
inc
push
add
les
movsb
aad
out
sbb
shlb
icebp
cmp
inc
aad
stc
sub
sub
and
in
xor
lret
in
dec
ds
pop
sub
push
add
mov
push
xor
mov
jecxz
sub
into
imul
add
jg
icebp
fidivrl
insb
pop
jns
iret
pop
push
lods
sub
xor
cmp
fldl
xchg
inc
gs
cmpsl
and
cmpb
mov
push
dec
shrl
pusha
sbb
lret
bound
popf
jns
decb
sub
xchg
hlt
jge
push
push
push
cmp
sub
mov
xor
je
pop
lock
popa
idivb
jp
mov
inc
pop
movsb
add
xchg
pop
mov
stc
je
outsl
dec
loop
and
cs
sub
jecxz
sbb
push
push
add
xor
mov
pop
mov
add
inc
mov
lea
or
xchg
push
dec
xor
push
mov
into
and
loope
inc
jl
fwait
mov
push
and
loop
jbe
xchg
adc
lods
data16
ss
pop
lcall
ds
dec
xchg
shlb
daa
inc
loop
leave
cli
out
lahf
and
mov
aas
xor
out
jns
out
dec
jae
rorb
pop
dec
sub
add
and
in
in
mov
add
mov
sbb
push
shll
cmpsl
push
insl
push
xor
inc
adc
jae
and
add
ret
sub
dec
xchg
inc
mov
add
int
pop
cld
or
inc
sub
in
daa
fisubl
dec
or
enter
inc
int3
insb
push
sub
mull
and
hlt
aaa
es
jecxz
push
sbb
movb
cmovb
nop
and
mov
test
sub
or
pop
add
dec
mov
add
ja
shll
imul
sarl
int3
push
vpaddusw
push
and
cwtl
loopne
push
mov
xchg
or
mov
and
hlt
aas
and
lea
in
cltd
inc
adc
gs
and
inc
cltd
mov
xlat
std
rsqrtps
cmpsl
adc
test
repnz
repz
stc
fmul
out
popf
push
mov
movsb
popw
data16
pop
setg
push
mov
call
mov
mov
pop
cs
imul
dec
pop
pusha
adc
push
and
mov
aaa
fsts
fildll
idivl
out
mov
mov
cltd
mov
push
mov
pop
cmp
or
aas
mov
cmp
andl
imul
in
xchg
jg
or
cli
push
inc
lods
sahf
xor
stos
dec
ss
out
adc
and
cmp
xor
lods
jns
xor
jb
or
push
fnstsw
push
subl
cmp
cmc
lret
adc
xchg
fsubp
and
aam
lods
sti
xchg
cmp
andl
mov
push
shl
scas
in
cmpsb
ljmp
xchg
arpl
and
cmp
ficoms
stc
std
jmp
sub
scas
jmp
pop
sbb
enter
aaa
jo
push
jae
mov
jbe
aas
adc
cmpsb
inc
xor
sub
mov
test
inc
add
dec
jl
mov
call
addr16
rclb
jae
jl
fiaddl
jns
cli
xchg
cmp
lds
jae
out
mov
in
sbb
addb
test
std
test
push
les
adc
mov
out
stc
pop
push
ja
and
and
cmc
pop
ss
adc
pop
cmp
jl
pop
add
pop
jle
add
fstpl
inc
mov
fcmovne
cmp
and
mov
adc
icebp
add
nop
or
out
imul
mov
cmc
ja,pn
lods
xchg
jno
mov
incb
scas
inc
pop
mov
pop
mov
dec
lcall
pop
xchg
inc
ret
adc
cmp
push
push
in
imul
add
stos
mov
dec
call
clc
sub
mov
into
loop
mov
xor
xchg
mov
or
inc
pop
jle
cmp
jb
daa
xlat
push
loopne
push
mov
xchg
mov
jmp
fcmovb
stos
test
aam
push
iret
mov
push
out
roll
je
mov
mov
stos
negl
pop
sub
ret
popl
lods
add
mov
mov
or
inc
adc
into
das
sbb
dec
adc
and
inc
repnz
dec
jecxz
repz
sub
adc
push
fisttpll
out
pusha
adc
sbb
ja
mov
or
sbb
dec
mov
or
test
push
pop
mov
jg
mov
xor
mov
cmpsl
xchg
int3
pop
mov
lds
enter
into
stos
inc
out
mov
in
iret
mov
les
sub
das
add
adc
cltd
cltd
xorl
or
lea
jmp
lret
repz
pop
leave
pop
xor
lds
lahf
fsubrl
in
stos
push
mov
dec
sbbl
mov
push
or
and
insl
mov
out
push
inc
sbb
sub
shlb
or
mov
scas
adc
mov
call
mov
rorl
sbb
ret
push
add
pop
into
pop
push
or
xor
cltd
inc
lcall
push
inc
loop
sub
sahf
nop
adcl
and
insb
cli
push
mov
aad
es
jne
push
cmpb
mov
movsl
leave
pop
mov
shlb
xor
mov
in
adc
adc
mov
inc
sahf
ret
jmp
popf
mov
and
or
inc
dec
fdivs
and
je
xor
ljmp
test
sub
ja
mov
mov
aad
fwait
sbb
inc
and
fadd
insl
stos
sub
gs
idivb
ss
fisttps
sbb
dec
xchg
lret
jae
aad
pop
push
push
std
out
add
call
xchg
cmp
jp
insl
mov
sub
add
jecxz
int3
xchg
push
or
cs
xchg
mov
or
adc
push
inc
pushf
cld
cli
lea
inc
cmp
sahf
xor
push
xorl
add
pop
mov
gs
xor
ja
dec
es
pop
push
adc
add
push
mov
sub
push
xchg
fs
cmp
jp
add
mov
mov
pusha
or
out
adc
mov
stos
stos
clc
sbb
sbb
ror
or
orps
push
inc
add
jmp
mov
sarb
shlb
push
add
mov
mov
test
inc
lcall
push
jns
aad
in
or
lods
xchg
mov
dec
cmp
imul
push
cld
jb
fldl
or
or
cld
ret
fs
popf
cs
mov
repnz
lea
pop
sbb
pop
shl
lods
clc
cmp
xor
xor
adc
inc
sub
cmc
jb
adc
cmp
or
leave
lea
pop
out
ja
test
fbld
jae
lds
dec
in
xchg
clc
pop
dec
into
cs
mov
imul
pop
arpl
sbb
iret
test
xlat
dec
popf
push
das
mov
test
mov
jge
test
sarl
dec
ljmp
addl
shlb
mov
pop
sarb
mov
in
lret
push
and
cmp
and
sbb
cmc
lock
dec
sub
push
xor
ja
fisttpll
adc
jl
xchg
adc
add
in
xor
dec
dec
adc
cltd
sbb
jle
add
push
and
push
xor
xchg
pushf
mov
ljmp
cmp
adc
adc
or
cwtl
jae
dec
mov
hlt
rorl
fsts
aad
addr16
fildll
call
clc
mov
leave
iret
rcr
xor
scas
dec
fs
dec
sub
push
xor
xchg
pop
fbstp
inc
in
repnz
mov
les
adc
lret
adc
rcr
lea
jne
test
jmp
mov
xchg
jle
enter
movsl
push
lods
je
je
cmp
push
mov
jbe
xor
push
xchg
lock
cmp
jl
fisttpll
daa
jge
loopne
orl
clc
shrb
popf
fbstp
les
enter
ret
in
push
hlt
push
dec
pop
inc
and
pop
jle
shlb
aaa
push
insb
adc
sub
call
es
xor
xchg
ret
popa
add
repnz
xor
xchg
mov
in
inc
mov
adc
das
iret
lods
xor
sti
jge
outsb
push
pop
outsb
popa
add
mov
aad
cwtl
cwtl
cmpb
repnz
icebp
push
call
rorl
pop
xor
sbb
aad
das
xchg
aas
sub
rorl
mov
add
sub
mov
dec
iret
jmp
inc
dec
vunpckhps
pop
pushf
mov
cld
jns
adc
popf
sub
frstpm(287
cmp
xlat
roll
mov
stos
adc
in
rorl
inc
insb
pusha
mov
icebp
adc
test
iret
push
xor
push
fwait
mov
adc
rorl
jo
sbb
sbb
mov
pop
clc
sbb
xchg
jb
aaa
or
or
push
adc
mov
popf
mov
push
xchg
sub
outsb
push
push
mov
addl
dec
aas
inc
fnstsw
cmp
mov
jo
add
lcall
add
mov
orb
cmp
aam
pop
loopne
inc
add
pop
mov
or
xchg
mov
lret
ds
in
or
in
xor
xor
daa
insb
shl
js
movsb
shrl
pop
aas
arpl
xchg
ljmp
cmp
mov
pop
andb
aas
inc
mov
mov
aas
and
and
inc
fildl
jae
cmp
dec
inc
push
out
insb
fnstsw
cs
nop
xchg
pop
pop
fsubrl
fiaddl
pop
dec
mov
cmp
and
adc
ret
push
imul
xchg
mov
pusha
pop
stc
rclb
inc
push
mov
aad
push
fwait
scas
mov
outsb
or
push
and
mov
aam
lock
xchg
gs
in
jbe
ret
stos
mov
in
jmp
icebp
jmp
pushf
xchg
cli
aad
andl
andb
jle
mov
int3
mov
sahf
xchg
xchg
lods
mov
call
or
or
fmuls
fcomps
cmp
lret
cld
inc
jge
into
pop
scas
mov
jmp
push
popa
loop
bound
push
jl
pushf
sub
jbe
pop
lahf
outsb
sbb
inc
xchg
fwait
inc
sub
addb
hlt
jo
and
out
inc
jae
aam
lea
aam
mov
sub
or
and
dec
cltd
dec
icebp
push
lahf
push
adc
fisttps
jmp
fwait
in
xor
sarl
add
pop
pop
lret
push
xor
push
enter
pop
push
mov
gs
push
and
fidivrl
outsb
sbb
dec
dec
mov
pop
std
dec
fiaddl
lret
pusha
pop
or
mov
adc
pushf
xchg
xor
enter
test
jno
jge
mov
dec
dec
inc
ja
xchg
inc
subb
jl
pop
or
mov
add
pop
jo
and
jae
testb
sub
out
rclb
jmp
scas
subl
fs
dec
loope
mov
ljmp
xchg
adc
popa
dec
adc
aas
sbb
orl
imul
hlt
or
adc
mov
lret
ret
push
test
push
aaa
insb
push
xchg
insb
dec
out
pop
cld
fdivs
cld
push
shr
pop
mov
cmp
ss
cs
mov
xchg
push
lods
cmp
imul
or
xchg
xchg
cld
xchg
test
jg
jne
movsl
inc
add
notl
arpl
adc
jb
divl
xor
cmp
jo
xor
cmp
pop
sub
lea
or
mov
cli
cmp
fucomi
mov
add
gs
imul
jnp
mov
lea
arpl
rorb
push
iret
in
lds
cwtl
sub
push
cmp
lret
mov
mov
cmpsb
std
stc
ficoml
adc
jns
stos
icebp
sub
scas
lea
insb
leave
stos
jbe
jns
dec
adc
dec
loopne
sbb
jmp
int3
dec
push
iret
adc
fisttpll
loopne
inc
sub
mov
aaa
pop
cmc
cmp
hlt
out
jl
xor
or
mov
add
cltd
jae
sti
mov
or
and
fcoml
popa
shrb
pop
jge
mov
fstpt
ret
testb
pop
inc
idivb
dec
xor
fisubl
mov
cmc
and
or
and
call
dec
ret
jbe
jp
cmp
outsb
dec
push
shl
mov
cmc
pop
push
sbb
in
pop
mov
jmp
scas
test
rorl
fiaddl
mov
dec
push
ljmp
mov
cli
out
loope
inc
dec
insl
rorb
sbb
cs
es
xor
repnz
xor
insb
nop
lret
xchg
lods
push
push
mov
cmp
or
jl
lret
subb
xchg
cmp
loop
inc
cmpsb
out
sbb
mov
mov
aas
xchg
mov
inc
add
mov
imul
lea
or
mov
cmpsb
pop
jmp
scas
test
pop
mov
shrb
std
xor
jns
cltd
imul
xor
mov
stos
cmp
outsl
adc
add
orl
push
inc
inc
xchg
enter
sub
or
jo
ret
loop
shl
out
and
jle
mov
stos
push
jmp
cmp
sub
loopne
mov
dec
int
cmp
gs
enter
add
sub
jl
call
dec
scas
mov
call
or
inc
sbb
roll
inc
test
ja
in
mov
fstpl
push
out
pop
jmp
push
mov
adc
push
inc
add
jno
cmp
lock
int3
xor
dec
or
test
xchg
adc
fmull
rclb
or
cli
pop
out
add
xchg
mov
pop
hlt
in
negl
rorb
push
pop
imul
call
mov
and
push
in
jae
cmp
jmp
inc
mov
mov
cmpl
je
js
inc
loopne
loop
in
sub
inc
inc
cmp
rcrb
or
fmull
push
iret
test
push
jb
push
cmc
popf
xchg
cwtl
in
jle
push
xorb
in
ret
xor
jnp
out
daa
dec
outsb
push
repz
lcall
movsl
sub
nopl
iret
jno
mov
mov
ljmp
hlt
dec
dec
fwait
or
or
sti
or
cmp
lahf
lock
jge
mov
pop
cltd
cmp
je
mov
dec
pop
xchg
pop
mov
les
cwtl
lods
dec
fdivl
pop
test
loopne
and
mov
into
fisubrs
inc
lret
sbb
shlb
iret
xor
adc
mov
and
test
push
shl
inc
xor
cwtl
arpl
shrb
addl
cmp
jp
jo
aaa
pop
clc
jb
push
into
ret
jb
jb
cli
dec
pushf
ljmp
fisttpl
divb
lods
lret
and
fstps
pop
cs
jns
imul
test
pop
jo
mov
iret
or
mov
or
fiadds
mov
mov
das
cmp
lock
xchg
les
stos
pop
sbb
imul
test
fsincos
pop
scas
add
adcl
dec
ljmp
sub
ja
xor
bound
xor
dec
into
or
jbe
sub
xchg
adc
sub
insb
xchg
push
jl
sbb
push
xlat
mov
shl
cmpl
add
scas
loopne
das
inc
mov
push
lea
js
jnp
lret
out
mov
inc
int3
push
popa
or
pop
mov
push
int3
in
ret
xchg
sub
xchg
pushl
cmp
xchg
outsl
mov
pop
stc
sub
fildll
call
push
stos
stc
mov
push
pusha
fdivrs
in
xchg
cltd
xorl
fs
push
stos
sub
cmp
xchg
stc
cmp
adc
mov
cwtl
imul
or
inc
xor
dec
or
and
sarb
xor
lds
roll
out
sub
popa
lret
cli
mov
call
add
cld
dec
xchg
or
pop
ja
aam
pop
aad
pop
add
je
mov
cmp
arpl
mov
pop
fldt
fdivrl
xchg
call
cmp
xor
mov
add
sub
test
scas
loop
jne
aad
iret
shrl
lret
arpl
dec
clc
cltd
js
punpckhbw
xor
mov
das
or
fs
test
mov
movsl
push
scas
cs
push
call
sub
out
or
inc
push
cli
jb
or
or
mov
jg
mov
test
cmp
mov
je
test
mov
andb
mov
jb
mov
mov
and
ret
orb
sahf
fists
jg
jg
jno
je
xor
sarl
dec
stos
fsubrl
push
xchg
xorb
rcrl
sub
call
shr
push
movsl
lods
jb
sbb
mov
les
mov
das
out
mov
xor
int
cmp
dec
jbe
subb
xchg
test
int
dec
xchg
add
sbb
add
mov
addl
and
daa
push
scas
into
push
jl
hlt
out
dec
push
sbb
xor
jns
push
mov
pop
into
orl
fidivs
or
pop
or
ret
pop
jmp
daa
adc
xor
test
rorb
inc
pop
shr
imul
jg
or
push
in
pop
adc
call
xchg
movsb
in
pop
loopne
inc
xlat
push
mov
cmpsl
arpl
shrb
jle
icebp
pusha
sbb
pop
insl
int3
in
push
add
and
sub
ficoml
loope
pop
loop
cld
push
fadds
cwtl
popf
mov
jmp
hlt
std
mov
and
mov
adc
adc
addr16
mov
int
imul
shll
sti
mov
adc
repz
adcb
lods
fstl
mov
push
aaa
pop
sarl
pop
xchg
push
xchg
sub
test
subl
jmp
and
shl
ficoms
pusha
sbb
mov
loop
cmp
nop
cmp
and
lods
dec
add
pop
sar
inc
jp
xchg
jle,pt
sub
xor
fcomip
and
mov
shlb
add
mov
pop
mov
xchg
push
enter
addr16
jecxz
cmpsl
mov
dec
rcl
inc
aas
lret
adc
adc
dec
inc
roll
ret
cs
mov
aas
addr16
dec
push
lahf
xor
and
jne
das
or
fimuls
push
pusha
insl
ja
or
daa
adc
and
test
inc
clc
sbb
mov
jae
and
flds
mov
js
xchg
ljmp
ret
inc
cld
mov
ret
data16
aad
daa
add
add
mul
pop
xchg
fwait
cwtl
xchg
stos
pop
in
ljmp
shl
dec
int
cmp
outsb
sbb
popa
lret
mov
fadds
inc
dec
lret
xor
mov
lcall
push
push
cmp
jne
data16
inc
dec
xor
mov
cltd
je
lret
paddq
mov
nop
xor
jmp
xor
call
mov
popa
inc
xchg
mov
lods
push
aaa
pop
sbb
mov
xor
push
cmp
jecxz
sub
lcall
inc
sbb
adc
lret
movsl
mov
mov
outsb
popf
in
mov
xor
xor
sub
adc
xchg
jbe,pt
scas
inc
sub
fldt
push
mov
dec
inc
mov
mov
jge
cmpsb
xchg
pop
f2xm1
push
dec
out
lret
addr16
int3
scas
sbb
mov
xor
popf
insl
and
cli
aaa
xchg
mov
push
push
sub
leave
sbb
fdivl
dec
xchg
stos
and
and
or
pop
mov
xor
aas
jmp
push
mov
mov
xchg
add
inc
mov
cmp
pop
cli
jg
out
flds
pop
adcl
push
jle
cwtl
je
arpl
fiaddl
leave
ret
mov
or
das
inc
bound
lock
sub
sub
cwtl
out
cli
and
jns
jl
push
hlt
bound
xor
adc
mov
sbb
jge
int3
out
out
mov
xchg
add
sbb
cmc
les
test
adc
pop
jae
ficompl
clc
pop
sbb
lods
in
loop
adc
popa
lret
xlat
adc
into
inc
sub
mov
in
aam
std
cltd
mov
or
sarl
in
mov
mov
decl
outsb
pop
mov
aad
push
jecxz
lea
dec
negb
ficoms
xor
rcrl
loopne
loopne
bound
aaa
adcb
sub
push
adc
sub
cmp
mov
xchg
mov
pusha
popa
mov
js
mov
and
scas
jge
cmpsw
inc
aaa
adc
adc
movsb
dec
arpl
push
test
das
jp
sub
dec
push
cmpsb
mov
sub
loop
les
mov
je
jbe
jp
or
gs
scas
mov
fistl
pushf
jge,pt
mov
mov
lock
adcl
cmp
iret
mov
fstl
daa
fsubrl
js
lods
repnz
push
or
mov
jecxz
pop
push
cwtl
sub
inc
mov
mov
add
dec
jne
les
adc
sbb
js
mov
shrl
sub
scas
jecxz
jbe
cmp
mov
cld
xchg
insb
lahf
rcrb
call
jmp
xor
jo
setnp
or
mov
cmp
outsl
jecxz
pop
fwait
cli
mov
sub
add
fists
mov
outsl
mov
test
pushw
cmp
jne
lret
cld
lods
pop
lea
add
dec
scas
pusha
test
push
lahf
pop
lahf
xlat
xor
inc
and
lcall
cmp
xorb
fdivrl
push
dec
leave
pusha
scas
adc
adc
push
pop
jecxz
roll
pop
mov
mov
xchg
dec
aam
in
cli
clc
dec
lods
and
inc
add
test
fdivs
std
arpl
filds
sti
std
out
mov
loope
inc
sub
pushf
add
pop
pop
int
inc
scas
out
xchg
lods
jecxz
lock
aas
push
add
std
aam
mov
out
xor
lods
or
insb
sbb
cmpb
loopne
cli
sbb
popa
mov
pop
lcall
movsl
xchg
xchg
or
pop
mov
add
add
or
or
lret
mov
mov
jecxz
pop
push
cmp
or
add
mov
jge
jecxz
repz
nop
push
scas
push
fstpt
daa
icebp
cmpsl
add
lret
fdivrl
pop
sbbl
adc
loope
cltd
shrl
inc
mov
in
in
ja
jmp
mov
std
shll
or
pop
es
xchg
out
push
ret
ds
mov
ja
xor
xchg
std
sti
popf
imul
ret
mov
mov
jecxz
ja
jo
cmc
push
movups
and
cli
insb
cmpsl
or
jb
sahf
mov
adc
xor
adc
cmp
aad
pop
add
pop
iret
outsb
jle
sbb
and
out
jge
fs
int3
add
mov
ljmp
icebp
xor
leave
das
les
pushf
cs
mov
or
jg
test
add
mov
cmp
push
jo
or
add
mov
sbb
imul
mov
inc
sbb
mov
test
movsl
sarl
roll
adc
and
dec
push
and
cld
stos
push
and
popa
push
insb
ret
lcall
jmp
sbbb
xor
movsl
fdivr
bound
push
pop
fcomps
sbb
inc
and
sbb
bound
fldenv
stos
cmp
xlat
fiadds
lock
mov
sti
ljmp
xchg
pushf
fidivrs
add
add
mov
inc
divb
repz
je
les
xor
les
push
pop
pop
jne
dec
clc
popf
out
pop
stc
cmp
push
mov
cmpsl
loopne
shll
jecxz
lods
adc
add
imul
out
in
xchg
adc
mov
es
jnp
shl
and
gs
testl
cmp
mulb
sub
jmp
hlt
lods
push
imul
addr16
sbb
jmp
inc
leave
insl
push
scas
arpl
mov
cmc
jnp
add
lahf
adc
daa
test
imul
sub
imul
pop
or
mov
cmp
negl
mov
ja
sub
pushf
xchg
addr16
ficompl
leave
mov
aas
pop
jmpw
ss
push
idivb
mov
dec
mov
bound
mov
push
adc
mov
xor
mov
inc
int3
aad
cmp
aaa
outsb
loop
nop
call
scas
jp
vmread
and
dec
jmp
imul
xchg
sbb
cmp
mov
jae
insb
jne
add
mov
imulb
jmp
je
pusha
test
jl
cmp
or
arpl
push
bound
add
inc
pop
dec
dec
iret
imul
jl
jo
scas
cmpsl
cli
int
dec
or
xchg
push
and
data16
inc
xchg
das
lds
dec
jne
lahf
mov
popf
xchg
sub
sbb
adc
div
das
cmpsl
sub
inc
dec
hlt
mov
flds
sbb
sbb
xor
paddq
lahf
ret
mov
push
mov
sbb
daa
es
pop
fs
aam
sbb
loop
push
cmp
call
cmpsl
and
les
dec
mov
sahf
imul
fsubl
aad
pop
insl
push
popa
jmp
stos
push
sbb
mov
fisubrl
pop
clc
mov
inc
pop
jns
inc
mov
pop
sub
pusha
and
cwtl
jecxz
and
cmpsl
mov
popf
jp
adc
sub
adc
pop
cmpsl
pop
mov
push
mov
ss
in
out
pusha
sbb
jbe
xchg
insl
movsl
aad
sahf
mov
add
das
pop
loop
push
xchg
stos
mov
fiadds
paddq
sbb
adc
mov
std
fwait
jl
fxch
mov
jecxz
cmp
inc
or
xor
fcoml
cmp
mov
orb
mov
dec
test
cmpsb
add
push
gs
scas
push
dec
or
movsl
inc
cmpsl
fiaddl
push
mov
cltd
mov
push
and
jae
mov
outsb
cmp
or
mov
nop
cmp
and
cmpsl
add
push
xchg
mov
pop
push
arpl
pop
add
loop
jne
fsubp
jecxz
shl
dec
out
dec
fdivr
jmp
out
sub
punpckhwd
clc
push
orl
lret
xchg
or
push
lret
push
scas
mov
push
push
cmpsl
push
icebp
mov
in
test
arpl
pushf
xchg
dec
cmp
xor
in
inc
cld
int3
fstps
sub
icebp
int
xchg
movsl
add
mov
rcrb
cmpsb
push
fmull
bound
adc
add
mov
pop
stos
xlat
test
or
dec
pop
stos
cmp
scas
clc
dec
fcompl
inc
cld
aaa
es
daa
test
pusha
jl
stos
jmp
pop
dec
rol
shlb
lods
leave
pop
cmc
cmp
jnp
xor
rorb
sti
fstp
cmp
mov
lret
push
and
ffree
std
mov
ds
pop
or
ss
pop
inc
jo
sahf
push
sbb
ja
sub
repz
les
sahf
popa
xor
or
jo
movsb
jnp
adc
sti
and
inc
mov
insb
pop
ja
ret
mov
sbb
dec
sbb
or
push
sub
dec
or
aaa
xchg
sahf
or
cld
mov
cmp
jo
push
sbb
repnz
psllw
scas
lss
xor
test
call
mov
aas
lds
push
push
push
aam
dec
mov
cmp
insb
pop
mov
pop
push
pop
pop
les
cmp
fwait
mov
fdiv
inc
jle
leave
push
test
jecxz
add
mov
sub
mov
jmp
ret
pop
cmp
sbb
cmc
daa
jg
sub
sub
dec
xor
push
mov
mov
test
mov
negb
cli
pusha
mov
xchg
enter
iret
pop
xorb
out
mov
das
sbb
ljmp
jg
loopne
int3
shll
shlb
pop
fs
push
sbb
adc
or
mov
lret
pop
mov
js
divl
insl
pop
into
inc
push
and
and
cmp
mov
xchg
dec
out
enter
es
fisubrs
lods
or
mov
gs
dec
stc
repnz
dec
fisubs
adc
enter
jmp
ljmp
f2xm1
insl
add
jb
dec
stc
dec
adc
loope
mov
xchg
mov
out
ret
outsl
sbb
mov
dec
jbe
clc
or
adc
shr
jge
sti
mov
cmp
shrb
mov
fimuls
jae
sahf
insl
xchg
fwait
ja
mulb
out
stc
adc
je
mov
mov
mov
loope
and
ljmp
mov
cmp
iret
adc
in
mov
das
mov
ljmp
js
fst
dec
test
imul
subl
xor
cmp
sbb
nop
mov
lret
lret
cli
pop
scas
in
dec
xor
fsubl
gs
xlat
fdivrs
mov
bound
xchg
push
fidivrs
fists
imul
sbb
adcb
push
mov
adc
and
mov
fisttps
inc
add
xchg
adc
ficomps
test
lea
loopne
cmpl
js
mov
data16
dec
inc
add
insl
and
or
iret
out
jp
inc
lret
insb
adc
xor
aas
jns
inc
cmpsb
clc
sub
imul
fsubs
or
pop
call
test
aad
mov
stos
push
push
ret
mov
loopne
aas
sub
in
popa
mov
insb
scas
rep
mov
roll
pop
into
sbb
lret
iret
inc
push
lret
xchg
push
mov
adc
sbb
mov
into
xlat
sub
cmp
sub
cmp
sub
inc
aam
scas
cwtl
rcl
ljmp
pushf
pop
jne
fisttps
sub
adc
or
dec
popa
in
fnstenv
jb
pop
mov
data16
enter
push
test
cmc
cltd
lret
cld
adc
jle
push
jl
insl
movsl
pop
imul
ja
push
int3
lret
sbb
push
int
mov
fsubrs
xor
mov
repz
inc
fwait
test
push
mov
xor
adc
push
ret
xchg
push
sub
es
rolb
hlt
dec
jae
call
jo
dec
xchg
push
mov
sub
push
push
lock
frstor
jp
jle
cmpsl
inc
inc
arpl
fdivs
dec
fwait
sub
sbb
sbb
in
mov
mov
cmpsl
pop
mov
cmpsb
and
cmovb
pop
jecxz
rcrb
sub
je
test
xchg
shrl
scas
push
adc
mov
and
xchg
test
lock
movsl
xchg
clc
or
repnz
inc
sub
cmp
cwtl
out
pushf
push
bound
jb
sub
mov
ds
dec
cmpsb
xor
std
nop
jg
cbtw
popa
lds
sub
pop
das
mov
sub
lcall
inc
inc
fdivrs
mov
xor
fcomi
push
test
xchg
loopne
xchg
push
pop
lock
dec
inc
or
mov
push
sub
and
mov
andb
xor
es
sbb
dec
daa
es
add
lock
js
gs
es
test
lea
pop
cli
fistpll
add
shll
loope
mov
pusha
mov
ret
dec
testb
mov
js
out
cltd
pop
dec
ja
and
jp
sub
pop
add
push
push
daa
jp
rolb
jp
adc
fdivrs
ss
sbb
cmc
or
mov
mov
pop
std
ljmp
lahf
adc
xchg
ret
arpl
in
or
mov
test
repz
cld
mov
push
movsb
pop
sub
pop
add
push
jb
je
stos
outsb
adc
mov
mov
push
or
fwait
cmp
cwtl
insl
iret
xor
or
mov
ficoml
jns
inc
add
fstp
mov
in
lock
lods
xchg
xchg
xchg
dec
and
pop
pop
imul
dec
iret
out
insl
in
cltd
push
jne
imul
stos
cmp
lods
cltd
mov
mov
repz
fnstenv
mov
mov
js
std
jecxz
ficomps
dec
hlt
loope
test
fistpl
push
popf
bound
insb
xchg
xor
cmp
clc
jae
cmp
dec
loope
in
outsb
sub
mov
sbb
xor
test
cmp
scas
fldz
sarb
adc
mov
xchg
scas
repnz
lret
pop
sub
adc
jg
lret
ret
pop
inc
jge
xchg
loope
sub
cmpsb
nop
movsb
push
lods
adc
or
add
mov
push
pop
or
insl
xchg
dec
mov
sbb
dec
std
gs
rcrb
mov
rcrb
mov
xor
xchg
push
scas
insb
sub
scas
outsb
rorb
test
cmp
in
lret
inc
into
lcall
leave
push
in
jecxz
shll
icebp
sub
push
xchg
jo
pop
inc
jo
sbb
loopne
mov
fwait
rclb
jnp
insl
cmp
divb
push
push
jo
pop
sti
xchg
sbb
xlat
xchg
hlt
xlat
adc
repnz
in
push
inc
cmp
cmp
scas
xor
push
jge
fists
inc
mov
imul
adc
mov
dec
xchg
repz
mov
sbb
ljmp
mov
push
iret
jnp
jbe
imul
pop
inc
imul
xorb
test
imul
je
shll
dec
push
out
jnp
sub
sub
cld
mov
mov
dec
jp
jle
ficoml
mov
jge
or
sbb
mov
insb
movsb
cmc
jbe,pt
lods
dec
mov
jb
dec
push
sub
xor
cwtl
dec
sar
les
push
lea
pusha
lods
test
fcomi
push
and
testb
mov
sar
push
dec
jae
aad
or
icebp
mov
ljmp
add
cmp
cmp
jg
pop
lock
dec
adc
jae
ja
lahf
lods
sub
into
cmpsl
rcll
movsb
lock
imul
pop
in
cmp
lret
pop
xchg
mov
or
jnp
pop
xlat
xchg
pop
stos
pop
pop
outsl
mov
das
and
fsubl
jg
cwtl
jmp
xor
jmp
dec
addl
outsb
xlat
or
push
out
out
mov
out
ret
or
jmp
frstpm(287
test
pop
out
loop
and
pop
and
jle
imul
inc
or
and
mov
and
les
icebp
lea
mov
lcall
jl
aam
inc
dec
cmp
aas
fists
dec
fisubrs
add
decl
ds
ret
sarb
sbb
add
push
scas
sbb
stos
je
ja
push
sti
or
sub
pusha
psubw
rol
jb
adc
and
adc
xorb
cmp
pop
pop
inc
jo
mov
sarl
imulb
into
pop
jbe
cli
jno
insl
or
inc
ljmp
pop
pushf
out
addr16
cmp
movsl
fwait
cld
je
test
mov
insl
and
adc
sbb
test
mov
cwtl
pushf
into
ja
push
sub
xchg
push
push
cmpsb
and
mov
aaa
into
and
iret
inc
fsubrs
leave
stos
lahf
je
adc
mov
sub
rclb
out
stc
jmp
dec
xor
pushf
sbb
jno
std
cmp
test
jp
test
pop
jp
jno
stc
stos
cs
add
xchg
lret
sub
sub
divl
cmp
decl
pop
dec
inc
pop
pushf
pop
fwait
or
pop
adc
shll
pop
xchg
stos
xor
rcrb
dec
push
jae
xchg
dec
and
scas
jo
out
adcb
call
leave
iret
test
mov
cld
jae
cmp
fs
movsb
in
adc
nop
add
jo
xor
mov
pushf
mov
and
inc
inc
dec
enter
cmp
jns
and
jae
pop
out
mov
fwait
dec
out
mov
out
ljmp
sbb
pop
fs
or
fcomp
push
jmp
stos
dec
test
imul
push
pushl
push
ret
mov
xor
adc
rcr
lret
fisttpll
mov
outsb
mov
add
adc
inc
js
lock
movsb
adc
inc
xorb
test
and
mov
js
adc
sub
xchg
xchg
cmp
mov
dec
imul
test
fwait
mov
xorl
out
xchg
cmc
test
mov
cmp
in
push
push
xchg
or
fnstcw
pop
loop
inc
fwait
out
sbb
adc
jae
adc
mov
setno
and
cmp
jmp
ds
in
push
add
roll
dec
pop
mov
roll
pop
mov
push
int
repnz
or
icebp
popa
iret
fwait
xor
push
mov
jp
cwtl
sbb
call
mov
push
js
cs
pop
nop
sarl
lret
sub
xorl
int
test
std
lret
add
jnp
aad
and
mov
cmp
and
enter
add
imul
push
push
jge
xchg
sub
adc
jne
push
jg
dec
sbb
push
hlt
xor
out
mov
sub
mov
add
rcr
cmp
test
movsl
fmuls
mov
scas
out
cli
mov
mov
je
stos
push
loop
cltd
cmpsl
pop
inc
pop
dec
out
mov
push
and
add
sbb
push
mov
pushf
scas
adc
pop
rcl
into
pop
aaa
shrl
sbb
jmp
mov
push
mov
push
cmp
xchg
xchg
fisubrl
mov
mov
sub
and
adc
dec
insb
movsl
dec
ror
loopne
cmp
enter
andl
xchg
mov
xchg
daa
or
pop
je
shl
or
arpl
js
cs
pusha
mov
jp
rcrl
repz
subb
popa
lsl
mov
out
or
and
xor
pop
xor
sbbb
pop
cmp
xor
lock
inc
lods
aas
idivl
test
loopne
test
mov
cmp
sbb
cli
les
popa
loop
sbb
imul
fnstsw
cmpb
cmc
out
xchg
loop
xchg
je
cmp
pop
insl
pop
in
pop
sbb
pop
cmpsl
sbb
in
insb
scas
jp
mov
sub
jae
outsl
jno
inc
mov
or
jp
jmp
js
mov
add
rol
jmp
jp
in
ret
sti
popf
jns
jg
addr16
dec
xchg
xchg
cmpsb
xor
ret
imul
aas
andb
rorb
mov
sbbl
push
test
out
dec
das
jmp
negl
popf
or
fcomp
in
inc
xchg
push
int
hlt
sbb
adcl
lods
mov
and
mov
mov
dec
jae
fsts
arpl
leave
or
mov
xchg
and
out
int3
retw
xchg
out
cmpsb
jp
cmpsb
test
push
xchg
insl
scas
das
cmp
jle
adc
test
or
cmp
mov
sarb
push
insl
or
xchg
js
jno
inc
and
fs
clc
dec
mov
sub
and
mov
roll
in
imull
lret
insl
lods
jnp
pop
push
loopne
repnz
push
cmc
lret
test
mov
ret
lret
inc
dec
popf
mov
add
imul
or
mov
addr16
mov
imul
adc
daa
or
mull
and
xchg
pop
arpl
jns
pause
mov
xchg
cmp
movsw
es
shlb
xchg
dec
stos
int
int3
adc
dec
push
daa
sahf
repz
pop
loope
or
push
imul
push
fcoml
inc
cmc
push
jbe
fstp
iret
pusha
pushf
or
push
out
cltd
push
jb
out
movsl
xchg
shlb
jmp
sahf
pop
and
lods
in
rorb
xchg
sahf
and
dec
cmpsb
adc
push
inc
jne
jne
invd
fidivrs
jg
jae
enter
mov
xchg
push
cmp
out
dec
cld
inc
xchg
push
inc
ja,pn
out
aad
scas
jo
and
aam
xor
sbb
dec
dec
int3
stc
cmp
and
xchg
stc
jmp
push
xor
pop
or
pop
dec
add
iret
mov
sub
cld
xor
cli
adc
push
dec
inc
push
loope
lds
cmpsb
ret
fldenv
sbb
and
inc
fbld
leave
push
mov
or
pop
add
aam
or
cmp
call
popf
insl
aad
shlb
cmpsl
std
pop
xchg
push
mov
adc
and
fwait
pusha
out
cmc
sub
push
std
xor
push
mov
ret
sahf
mov
cmp
in
repnz
jo
jg
mov
stc
insl
int
jecxz
enter
lods
andb
shll
movsb
shld
mov
dec
arpl
mov
push
inc
ret
jecxz
xorl
mov
cmp
mov
pop
push
imulb
inc
daa
pushf
subl
inc
xchg
adc
loope
in
subb
icebp
cmp
outsl
adc
or
push
cs
stc
mov
xorb
aas
nop
pop
mov
sbb
pop
pop
adc
jg
movsb
or
icebp
pop
in
mov
lahf
pop
mov
inc
hlt
sti
or
fsubrs
stos
lret
lea
sbb
cmc
add
negl
inc
xor
sub
pop
inc
mov
mov
dec
fldl
dec
or
lcall
jge
jecxz
jecxz
mov
inc
fsts
jmp
loope
ds
stos
adc
cmp
mov
pushl
cmc
mov
gs
add
in
mov
xor
test
out
mov
xor
movhps
xorb
movsb
xor
xchg
dec
mov
xchg
ret
or
pop
or
clc
int
js
push
mul
insl
add
stos
test
aad
icebp
mov
shl
popf
cwtl
jbe
lret
sbb
jg
sbb
out
test
xorl
gs
dec
scas
mov
mov
and
insl
roll
int
sbb
mov
in
iret
push
lcall
leave
pusha
aam
jbe
lret
dec
std
jg
in
xlat
pop
mov
cltd
cltd
push
xchg
data16
sub
mov
sub
into
in
int3
call
pop
setns
sub
sub
int
repz
ds
mov
movsl
mov
or
mulb
test
sbbb
outsl
or
xchg
shlb
mov
pushf
popa
stos
jecxz
mov
out
arpl
sub
cmpsl
push
push
fimull
and
ret
mov
and
mov
fsubl
testl
popa
lret
pushl
je
loope
and
fstl
xstore-rng
cmpsl
add
ret
mov
lds
lret
aam
ljmp
inc
inc
insl
gs
jnp
test
sub
inc
jae
int
xchg
pop
add
clc
nop
cmp
dec
testl
mov
xor
ds
xchg
or
adc
mov
add
jnp
popf
and
xbegin
lcall
inc
xor
pusha
fbld
lcall
mov
jno
xchg
mov
scas
jo
push
and
cmp
jns
cmpl
dec
cmc
mov
or
sti
lahf
out
sbbl
pop
or
gs
xchg
push
out
scas
rcrl
push
shl
loop
paddw
and
lret
pop
lret
je
popf
xor
mov
imul
aad
sar
icebp
push
or
mov
xchg
lods
inc
dec
mov
push
pop
inc
sar
sbb
stos
shl
inc
lret
cs
mov
pushf
test
rorl
sub
pop
inc
mov
call
movsb
pop
pop
test
or
inc
jb
xor
or
sbb
mov
loope
lret
ds
sbb
push
cmp
lret
popf
cmpl
push
xchg
lcall
and
and
sub
inc
sub
cmp
call
push
xlat
out
sti
xchg
lret
inc
or
adc
adc
adc
sbb
sahf
dec
jne
out
adc
insl
outsb
inc
and
jg
ret
mov
loope
mov
push
fmull
mov
lret
loopne
adc
nop
aad
cmp
imul
sub
add
xchg
xlat
test
subb
mov
rcll
dec
pop
js
movsb
xchg
bound
insl
fwait
cmp
xor
jb
bound
orb
cld
mov
lds
push
inc
ljmp
sarb
idivb
xchg
lret
data16
inc
mov
xchg
stos
loop
fnstenv
mov
cld
adc
inc
lret
lahf
jno,pt
in
jae
push
leave
sub
sti
sub
enter
mov
lds
mov
adc
pop
filds
pop
test
xor
mulb
pushf
mov
sub
shll
adc
cmp
xchg
inc
add
sub
jge
cmp
jmp
into
lds
loopne
fwait
daa
fstl
mov
insb
addb
sha256msg2
inc
and
mov
fidivs
out
lret
mov
pop
cmp
inc
xor
imul
jge
mov
xchg
pop
js
and
fdivl
cld
fiadds
in
aaa
in
push
jae
dec
divb
lods
mov
insb
xor
pop
cmp
adc
cmp
inc
xchg
dec
mov
ret
std
push
jo
fcmovu
dec
or
ret
xor
js
popf
scas
mov
push
mov
stc
popf
inc
pop
mov
cmp
mov
test
movsl
add
lahf
jnp
sub
cwtl
pop
lods
mov
aaa
jnp
add
call
xorl
lods
mov
jmp
sub
mov
xor
mov
push
hlt
cmpsl
pop
lods
push
add
mov
add
or
jnp
jl
cwtl
ljmp
rcrl
mov
insb
loope
adc
cmc
aaa
push
jecxz
je
and
clc
lds
shlb
clc
inc
push
psubsw
rcrl
in
xchg
cmpl
daa
mov
std
mov
mov
mov
and
in
xor
jp
sub
mov
xchg
push
mov
and
mov
lret
push
clc
sbb
push
mov
iret
hlt
and
sub
dec
rol
cmp
stos
xor
adc
int
das
in
daa
pop
xchg
jno
inc
out
bound
add
ret
popa
arpl
in
cmp
mov
sbb
mov
or
sub
lret
sub
cmc
fstl
or
push
sub
mov
aad
cmp
jg
lcall
xchg
mov
ret
inc
clc
lret
stos
js
fldt
shll
int
xchg
mov
lods
adc
lods
or
add
mov
xchg
pop
xchg
mov
inc
xchg
xor
sbb
in
fimull
out
gs
push
dec
fsubrs
ja
inc
arpl
cld
inc
adc
iret
cs
dec
std
mov
sbbl
lret
sbb
fisubrl
cltd
or
ljmp
jge
out
xchg
jne
push
jl
pop
iret
push
rorl
jle
in
pop
inc
cwtl
adc
mov
ja
push
mov
mov
mov
mov
or
shl
iret
or
int3
mov
inc
int
fs
sub
lods
jno
jle
mov
in
loopne
out
sti
mov
jp
cs
push
fcoml
imul
out
dec
inc
js
gs
les
out
cmp
out
sub
roll
mov
flds
pop
mov
jnp
lahf
xor
mov
test
daa
fwait
push
cld
xchg
lods
inc
divl
jnp
enter
mov
arpl
xor
cld
jno
pop
outsl
pop
out
sbb
fstps
divb
cltd
out
dec
data16
inc
inc
js
in
cmp
repnz
pop
and
loop
cli
push
cld
xor
adc
rorb
je
add
dec
push
pop
stos
inc
and
add
jg
rolb
ret
jbe
jle
mov
scas
hlt
test
les
cmpl
jle
inc
into
push
dec
cmp
pop
mov
cmc
rclb
movsb
pop
test
xchg
push
cmp
cmp
xor
loope
out
xchg
call
sub
inc
push
adc
stos
mov
pushf
push
pop
gs
into
xor
mov
push
pop
out
xor
push
inc
je
cmp
addr16
popf
pop
pop
scas
fcmovnb
dec
lahf
cmp
out
lods
enter
jg
push
add
mov
iret
daa
or
xor
loop
adc
mov
negl
jecxz
dec
mov
fwait
imul
push
pop
loope
mov
data16
fldl
imul
ficoml
mov
test
pop
movsb
dec
ds
mov
ja
aad
pop
jle
push
adc
data16
das
testl
mov
add
inc
imul
or
rclb
sarl
imul
cmc
mov
adc
mov
movsb
popl
jecxz
add
push
repnz
fucomi
out
inc
aad
and
shl
xchg
mov
popa
cld
add
mov
test
sub
cmp
jns
sub
xor
sti
mov
sub
or
ret
test
imul
paddusw
cmpsb
ret
and
sub
mov
fnstenv
add
lock
push
xchg
mov
push
push
hlt
pop
das
ss
xchg
xchg
into
push
xor
ljmp
fmuls
cmp
nop
in
xchg
fs
xchg
cld
pushf
int
jns
sbb
mov
jb
xor
dec
arpl
les
jo
leave
scas
nopl
jmp
dec
pop
addl
xchg
decl
pop
jmp
fistpll
push
jge
inc
and
xchg
icebp
and
movsb
mov
inc
mov
decb
das
outsl
ljmp
inc
or
push
xor
inc
jecxz
jl
mov
imul
stos
and
enter
dec
test
stos
mov
out
int3
push
or
adc
outsb
lods
add
aas
push
repnz
cmpsl
sti
into
fwait
shld
lret
lahf
mov
inc
xchg
enter
sbb
mov
add
ds
dec
insb
mov
scas
repnz
cmp
clc
loope
xor
pop
out
dec
xchg
jmp
pusha
cld
cmp
fdivrl
jnp
mov
scas
or
in
xchg
xchg
add
and
or
push
push
push
pop
lods
scas
adc
jg
or
and
movsl
or
jle
loop
sbb
add
mov
cmp
sub
lock
jge
lods
mov
mov
mov
shlb
jp
dec
fnsave
push
sarb
xchg
jnp
repnz
xor
fchs
int
cmp
js
js
rorl
enter
out
sbb
es
imul
add
dec
jns
mov
lahf
movsl
ret
inc
out
scas
add
jnp
ds
xchg
into
push
hlt
jecxz
mov
loopne
xlat
popa
ficomps
notb
pop
xchg
sarb
cwtl
out
sub
insb
frstor
iret
jae
pop
dec
dec
int
icebp
and
in
lahf
mov
dec
adc
dec
xchg
sub
add
cmp
jg
das
jae
jecxz
mov
push
dec
or
inc
or
sbb
add
hlt
inc
mov
jg
stos
dec
test
jne
loope
sub
adc
and
cmp
hlt
pusha
and
xchg
inc
divb
add
pop
dec
cli
mov
shll
push
repnz
fstpt
push
xor
push
jp
push
add
lock
std
sub
fadd
popf
lret
or
sub
jle
push
into
add
jo
add
mov
scas
add
in
notb
cwtl
jbe
dec
fcmove
aas
int
or
dec
mov
repnz
sub
pusha
cwtl
int3
lcall
inc
mov
pop
enter
push
add
mov
adc
imul
out
or
adc
daa
lods
mov
push
rol
cwtl
je
lret
arpl
or
iret
out
aas
sub
cmp
pop
call
dec
xor
lds
inc
pop
and
das
jb
mov
push
or
xchg
adc
cmpb
jns
mov
xchg
les
jo
cmpsl
out
mov
mov
and
cmp
pop
cmp
xorb
dec
xor
mov
mov
push
lds
push
sbb
jmp
dec
sub
sub
loope
jmp
fs
mov
push
dec
lock
ss
lock
cld
pusha
mov
lods
lcall
mov
das
test
pusha
fmull
fidivrs
jo
bound
out
outsb
xlat
int3
xchg
push
ficompl
xchg
push
mov
sbb
dec
shr
hlt
push
loop
mov
pop
rol
ss
mov
ret
dec
adc
in
adc
push
xchg
cmp
ds
leave
iret
or
cwtl
lea
mov
push
pop
shrl
fistpl
add
xor
dec
inc
push
sti
arpl
xor
cmp
jl
fistl
mov
mov
push
xor
adc
lds
pop
in
test
push
gs
jae
sbb
mov
and
popa
add
jb
mov
cmpsb
lea
jmp
push
stos
aas
push
andb
cmp
test
xchg
mov
jge
fwait
in
cmp
push
repnz
int3
cmp
mov
out
icebp
inc
in
sub
inc
fwait
aaa
mov
sub
mov
lock
lock
inc
xor
push
cmc
dec
ljmp
lods
les
adc
sbb
inc
push
cmp
enter
lea
test
insl
das
in
imulb
mov
popa
mov
adc
orb
xor
loopne
inc
cmp
lret
and
mov
fmul
out
lret
cld
sbb
jnp
sbb
daa
cmpsb
add
mov
outsb
out
xor
pushf
ret
or
sti
scas
mov
mull
mov
sub
mov
popf
sbb
sbb
pop
sbb
or
insb
mov
mov
in
popl
sarl
neg
lahf
in
popf
faddl
mov
mov
cmp
shrb
ss
push
sub
jne
push
popa
in
sbb
jo
inc
push
sub
cs
lods
xor
jb
jnp
insb
lea
xchg
mov
sub
push
shrb
sbb
push
cli
pop
adc
sub
inc
dec
or
shrl
jo
call
or
pop
adc
add
je
insb
fs
cmp
repz
decl
jns
fs
mull
xchg
adc
int3
sbb
pop
in
inc
sbb
mov
sbb
mov
notl
movsb
insl
cltd
jno
sub
xlat
mov
xor
inc
inc
sbbb
and
dec
and
sbbl
and
in
mov
xchg
sbb
or
into
pop
jp
pop
fstpl
int
xor
jge
push
inc
cmp
pop
and
test
push
fucomip
mov
adc
icebp
ficoml
into
push
ret
adc
pop
divb
repz
inc
sbb
out
int3
out
pop
sbb
xor
push
mov
cmpsl
xorl
fcompl
repnz
xchg
fisubl
lret
mov
or
inc
movsl
sbb
push
sub
or
rorl
scas
fwait
rorl
mov
ret
cmp
cmc
out
movsb
and
push
sbb
stos
inc
jo
dec
pop
fldl
mov
stc
mov
jl
or
sarl
push
dec
iret
arpl
push
jns
xor
into
mov
mov
and
adcb
fucomi
dec
cmpsb
aas
dec
push
add
jp
into
sbb
xchg
mov
ss
pop
aam
mov
jns
les
xchg
sub
mov
ljmp
inc
stc
pushw
inc
inc
mov
fildl
mov
adc
das
mov
xchg
movsb
insl
mov
push
das
xlat
out
js
xor
out
repz
and
cmp
cld
lcall
cwtl
cmpsb
cmp
nop
cli
into
inc
test
js
adcl
pop
pop
insb
jae
nop
test
add
adc
mov
loopne
in
xor
sub
jbe
test
loope
sti
add
orb
mov
dec
sarl
pop
sahf
out
ja
mov
jecxz
sbb
lgs
add
jmp
pushf
out
outsb
sbbb
and
lahf
sbb
jg
sub
mov
jno
push
jge
out
fnstsw
mov
sub
mov
adc
decb
dec
lods
mov
loopne
sub
jecxz
cmc
mov
sub
loope
mov
fld
push
xor
insl
insl
push
pop
jbe
adc
cli
out
test
js
jnp
dec
stos
sbb
push
mov
mov
stos
push
in
leave
cmpsl
mov
and
sti
mov
inc
int3
cmp
jne
jge
dec
mov
mov
lods
xchg
pop
add
mov
jne
out
mov
int3
enter
icebp
sbb
pop
add
dec
popa
leave
xchg
cmp
dec
and
stc
outsl
pop
mov
lods
inc
adc
add
es
loopne
push
das
xlat
cmp
or
jle
scas
push
fwait
or
jmp
arpl
or
fldl
std
xor
sti
lret
pop
mov
inc
ret
add
fstl
jmp
cli
or
jmp
out
daa
addl
cmp
jl
or
cmp
and
adc
aam
jl
jmp
test
mov
dec
push
inc
out
repnz
push
pop
leave
sub
push
dec
test
in
stos
inc
clc
push
out
xor
cmp
xor
bound
xchg
mov
repz
imul
aas
pop
mov
lock
scas
leave
jecxz
gs
jne
lods
or
mov
xlat
lock
les
jg
sbb
sarl
pop
cld
rep
sub
hlt
mov
mov
pop
push
jp
dec
cwtl
iret
jbe
dec
loope
adc
mov
mov
jp
aam
fistpl
xor
mov
fsubr
cmp
and
stos
adc
inc
mov
pop
xor
mov
pop
dec
sahf
flds
push
jg
push
hlt
in
xor
dec
jnp
mov
dec
mov
pop
xlat
std
idivl
cmp
fs
outsl
lcall
in
int3
sub
sub
out
dec
add
dec
cmp
mov
std
pop
mov
sub
pushf
cmpsb
stc
jbe,pn
loope
dec
push
outsl
mov
in
sub
lret
fdivs
cmp
sub
jmp
aad
push
xchg
mov
inc
inc
push
popf
or
xchg
cli
arpl
jne
stos
jmp
or
sub
mov
iret
add
and
out
popf
jecxz
add
dec
pop
mov
dec
add
jmp
lods
scas
lods
testb
dec
fstl
decb
nop
cltd
bswap
adc
lea
jns
sbb
addb
mov
fbstp
mov
push
jns
push
sub
adc
push
mov
cmp
ret
pusha
scas
mov
out
mov
inc
jns
jl
mov
push
ds
dec
adc
leave
cld
mov
je
stos
xchg
cmp
inc
xchg
in
out
and
inc
cli
add
scas
mov
mov
dec
xlat
adc
outsb
or
mov
or
adc
movsl
stos
inc
pop
add
sub
cli
leave
fiadds
mov
sbb
dec
pop
cmp
mov
add
xchg
sbb
push
movsl
mov
mov
dec
mov
adc
aam
push
cmp
mov
jno
test
pop
mov
idivb
and
jno
mov
aaa
push
call
stos
std
popa
fnstenv
pop
lock
jg
ds
jne
outsb
mov
jg
jne
jge
out
insb
subb
mov
xchg
mov
sub
cmp
out
xchg
incb
js
rcrb
adc
orb
cmpsb
cmp
xchg
movsl
push
or
adc
lahf
mov
cmpsl
sbb
inc
xor
mov
cmp
add
sbb
int
ret
pop
sub
pop
fidivs
popa
inc
sbb
fmulp
je
mov
pusha
and
or
adc
sub
xchg
jnp
loopne
out
sub
stc
pop
inc
rolb
and
mov
xor
jmp
ffreep
outsl
std
sub
lcall
or
outsl
decb
mov
dec
repz
aam
jmp
or
push
data16
sbb
sti
inc
sarb
push
dec
shrb
cmpsb
scas
aaa
xlat
test
mov
xor
dec
les
jb
jle
add
pop
push
data16
sbb
popa
nop
jmp
mov
aaa
in
jns
dec
aad
or
lahf
cmc
sbb
out
jno
cltd
add
stos
adc
inc
test
sti
aad
fcom
sub
icebp
mov
cs
gs
mov
lret
xchg
adc
aad
loope
cmp
xchg
push
test
adc
mov
push
cli
test
mov
xchg
test
or
cwtl
inc
ljmp
mov
popa
inc
inc
clc
sub
push
outsb
add
xchg
or
push
sbb
test
lahf
adc
stos
lret
sbb
and
sbb
sub
mov
test
aas
xchg
mov
test
jno
rcrb
sub
mov
xchg
dec
mov
ret
mov
clc
jecxz
jmp
add
in
push
je
out
mov
mov
test
xchg
sbb
fiaddl
add
xchg
or
push
xchg
push
cmp
cmp
lea
dec
push
or
pop
jp
test
mov
xor
pop
and
addb
sahf
jp
adc
lahf
push
mov
iret
loope
cli
cmpsl
imul
jcxz
mov
insb
push
hlt
add
in
cmp
popf
fwait
inc
cltd
std
dec
scas
add
jb
mov
or
mov
xor
out
lret
std
les
inc
inc
fildl
xchg
sbb
xor
pop
inc
sub
pop
lock
inc
shl
andl
das
adc
inc
dec
gs
cmpsb
ljmp
loopne
fcomip
sub
pusha
mov
xlat
xor
sbb
in
fs
add
mov
mov
ret
outsb
outsb
and
mov
mov
pusha
mov
mov
les
sub
loopne
in
mov
mov
lods
jb
lods
adcb
mov
leave
in
nop
xor
not
cmp
mov
mov
lods
fwait
cltd
mov
add
or
mov
dec
sbb
hlt
loopne
stc
pop
adc
dec
xchg
jne
or
int3
xchg
adc
inc
pop
loopne
xor
jl
insl
test
inc
and
int
and
pop
add
lahf
in
mov
mov
lahf
add
push
test
xchg
jp
push
call
cmpsl
jnp
cmp
mov
fnstsw
hlt
movsb
and
push
mov
push
aaa
cmp
testl
mov
test
bound
jbe
sub
aas
sbb
test
xchg
movsl
or
or
idivl
mov
dec
fs
jno
inc
xchg
mov
mov
icebp
out
sahf
mov
xor
mov
addr16
lahf
xor
xchg
imul
mov
test
adc
sbb
xchg
iret
xor
loop
dec
shrl
push
test
push
std
push
mov
mov
sbb
push
mov
orb
jecxz
push
repnz
les
je
xchg
pushf
and
fwait
or
fs
xor
mov
stc
push
or
fcoml
rcrl
mov
imul
sub
xchg
add
jge
pop
stos
std
gs
rclb
lock
cs
scas
out
cmp
add
loopw
sti
xchg
mov
fdivrs
popa
push
scas
je
cmp
dec
inc
mov
sub
int
movsl
xchg
and
push
negb
in
loope
cld
xchg
aam
fs
add
pop
jo
fsubrp
int3
aaa
scas
dec
aaa
cmp
inc
jle
dec
add
mov
cmp
mov
xor
mov
loope
pop
mov
movsb
mov
cmp
add
xor
xor
cmp
jno
or
repz
inc
adc
out
movsb
scas
cltd
xchg
ret
lods
fsts
ficompl
mov
sub
lret
and
popa
ja
repnz
jle
stc
mov
cmpsb
out
or
mov
cmp
and
fmull
xor
cmpsl
adc
cltd
clc
mov
mov
and
jmp
inc
adc
enter
push
insl
popa
mov
pop
mov
dec
mov
jnp
pop
inc
mov
das
aam
jne
mov
mov
jb
das
movsb
jg
fisubrl
xchg
test
test
aad
enter
dec
and
jo
and
rcr
movsl
and
sahf
inc
mov
sub
inc
cld
ljmp
cmp
add
loopne
data16
mov
mov
dec
xchg
repz
lret
scas
jne
adc
jo
push
lea
pop
fs
das
mov
inc
out
jno
rcll
movsl
shll
jge
subl
xor
das
lods
mov
rclb
jecxz
jp
cli
mov
aad
in
mov
mov
into
sbb
repz
mov
aaa
aaa
mov
test
xchg
sti
nop
inc
push
push
icebp
pop
add
enter
mov
mov
add
dec
push
jecxz
xchg
xlat
andb
pop
nop
mov
xchg
pop
inc
and
xor
inc
in
jae
lahf
mov
enter
pop
or
fcomp
xchg
sbb
in
repz
fwait
loopne
adc
pop
cmp
cmp
xor
dec
xchg
in
in
pop
ret
dec
add
outsb
sbb
cs
sub
cmc
jne
addl
cmpsl
add
add
mov
mov
negb
cmpsl
mov
xchg
mov
fldl
test
stos
lret
or
dec
cpuid
or
ds
lcall
dec
xchg
mov
js
sub
mov
ds
scas
sti
mov
or
ljmp
mov
mov
inc
lret
xchg
ret
jae
mov
icebp
aam
jno
cwtl
add
or
push
cwtl
dec
loope
imul
sahf
loope
in
movsb
lea
dec
sbb
mov
arpl
or
adc
mov
int3
in
mov
test
mov
insb
adc
cmc
dec
pop
push
pop
push
push
adc
mov
xor
push
push
adc
int3
sub
add
push
outsl
inc
mov
add
mov
add
cmp
and
mov
jmp
jbe
mov
into
jbe
je
mov
incb
lds
ljmp
mov
sbb
mov
sbb
popa
cli
jmp
dec
pop
xchg
lea
push
shl
nop
pop
mov
or
cli
sbb
scas
mov
loop
add
cmpsb
xlat
enter
pushf
decb
aas
mov
sti
inc
mov
dec
outsl
rclb
mov
cs
stos
push
jp
mov
sbb
add
ljmp
mov
pop
xchg
cs
cmp
iret
inc
jl
xchg
pop
xor
inc
scas
outsl
rcll
inc
jne
mov
inc
jo
inc
movsb
xchg
pop
scas
bound
inc
xor
stos
cmp
and
int
inc
sub
lock
ret
push
test
daa
push
xor
cld
loope
jae
fdivp
scas
mov
cld
imul
inc
and
xor
lods
dec
mov
mov
leave
xor
repz
pop
pop
mov
ficoml
mov
mov
lock
mov
mov
flds
lods
ret
mov
inc
aad
fisubrs
and
das
and
fwait
mov
loope
cmp
mov
stc
sbbb
mov
push
nop
arpl
into
sub
xchg
lds
push
mov
ljmp
rclb
sub
loop
cmc
ljmp
inc
in
rorl
pushf
stos
mov
into
out
push
or
js
daa
movsl
and
loopne
xchg
in
cmp
lahf
xchg
jns
xchg
addb
push
test
xchg
pop
ficompl
loop
popf
xor
nop
mov
hlt
sbb
mov
xor
stc
xchg
ds
repz
std
cmp
mov
les
mov
fnstcw
cli
subb
mov
in
test
xchg
cmp
lods
aaa
xchg
cmp
gs
pop
or
dec
loop
adc
faddl
mov
repz
push
or
int
ljmp
and
call
sbbb
stos
repz
lock
rcr
inc
test
cmp
mov
pushf
push
not
sbb
out
test
mov
out
es
call
sub
sbb
jge
lea
xor
inc
fstl
sbb
xor
jno
outsb
fstl
jl
test
cmp
xlat
shrl
jmp
std
push
jmp
imul
in
xorl
movsl
cld
mov
xor
rcrl
push
rorl
or
and
cmp
mov
sub
mov
arpl
xchg
push
jne
mov
pop
jle
ljmp
or
out
repz
lret
xchg
dec
dec
ds
or
mov
cli
push
xchg
sbb
xchg
es
jp
lock
push
pushf
inc
push
std
mov
aas
jecxz
sarl
out
pop
or
imul
xchg
jl
jnp
dec
mov
std
cwtl
xor
pop
cmpsl
mov
add
sbb
xchg
cld
mov
notl
pop
jmp
rcr
std
mov
aam
ret
test
es
int
pop
cmpsl
inc
xor
jo
or
push
movl
pushf
push
xlat
push
lods
jmp
jl
or
pop
cld
jo
fiaddl
push
jp
insl
adc
pop
rorl
aaa
dec
int
pop
into
push
fwait
and
inc
enter
fisubrl
sbb
and
test
test
lds
jne
sbb
jp
inc
out
xor
lret
sub
adc
mov
push
push
std
pop
int
pop
inc
sbb
pop
lahf
dec
mov
rolb
lret
cmpsb
clc
mov
push
pop
xchg
aam
scas
xchg
add
and
mov
frstor
std
push
shlb
loopne
out
lods
rcrl
sbb
es
mov
pusha
negl
jne
adc
jno
enter
jp
jne
cli
push
jg
lds
sbb
push
imul
or
imul
mov
pop
out
dec
pop
add
movsb
cmpsl
rcll
add
jne
bswap
cli
cld
inc
xchg
or
lcall
and
dec
in
cli
repnz
pop
mov
pop
hlt
stos
inc
lret
je
lahf
popf
mov
inc
dec
fcomi
icebp
dec
imul
add
mov
dec
loop
in
pop
cwtl
out
adc
scas
cwtl
in
adc
xchg
cltd
add
sub
cmp
out
popf
mov
outsb
cmp
test
jnp
pushf
mov
daa
push
bound
dec
cmp
cld
lahf
push
cmp
pop
cld
orb
std
adc
stos
xor
dec
fdivs
sub
loop
push
ss
dec
or
aad
push
inc
fs
jnp
and
dec
cmpsl
dec
mov
int3
iret
xor
aas
je
or
pusha
mov
sub
es
test
mov
mov
imul
out
movsb
pop
popf
scas
push
sub
push
mov
sbbb
pop
add
ja
repz
or
push
inc
xchg
cmpsb
test
in
sahf
push
imul
sbb
inc
and
dec
sub
add
xlat
jb
movsl
push
push
sbb
jb
in
out
sbb
pop
jns
push
pop
and
mov
movsb
add
popa
xchg
add
xchg
push
sbb
aaa
sarl
push
shrl
aad
xlat
inc
out
je
mov
aad
mov
ret
xchg
mov
mov
icebp
lret
sub
push
and
cld
adc
ss
dec
add
push
stos
add
sbb
sub
popa
inc
mov
mov
bound
fistpl
ret
shl
je
mov
aam
shl
mov
filds
ja
adc
inc
push
popa
xchg
ror
out
mov
cmpl
fisttpl
mov
movsb
push
scas
jae
cmp
xchg
aam
dec
in
test
test
mov
cmp
add
inc
hlt
lret
insl
pop
scas
mov
sbb
lcall
fcoml
push
mov
dec
push
pop
push
inc
hlt
clc
ds
insl
aad
cltd
aad
sub
push
pop
bound
adc
mov
enter
and
pop
adc
cld
int
mov
insl
bound
sbb
pop
stos
sub
jmp
xchg
xchg
ret
rcr
dec
in
cmc
or
ss
movsb
jno,pt
mov
push
pop
jae
out
loop
push
arpl
repnz
inc
push
inc
shlb
fisubrs
sbb
addr16
insl
adc
mov
sbb
xlat
xchg
lret
rcll
imul
test
jl
insl
sbb
pop
jno
lret
or
inc
add
subl
in
dec
pop
cmp
lea
mov
mov
mov
fbld
adc
adc
subb
ja
out
jns
add
std
dec
and
imul
cwtl
and
shl
mov
pop
fwait
cs
popf
jmp
aam
pop
cli
sar
lds
in
int
xor
push
addl
inc
into
sbb
lock
out
lcall
xor
pusha
adc
xor
xlat
mov
shrb
fdivrl
mov
cmpb
pop
push
mov
and
adc
js
xor
push
xor
mov
jnp
pusha
es
movsb
rcrl
sbb
mov
call
outsl
rolb
nop
pushf
lods
incb
aad
adc
sub
in
js
mov
scas
and
das
dec
cwtl
sti
mov
mov
icebp
nop
xchg
push
xor
cmp
add
mov
in
movsl
push
xor
add
es
cld
mov
idivl
lods
jg
dec
cmp
sbb
inc
jnp
xor
mov
jnp
inc
inc
sbb
xchg
push
das
jle
and
xchg
add
add
sub
popa
mov
mov
or
adc
jb
icebp
das
mov
sbb
lods
add
das
sub
xor
pop
in
mov
movq
xchg
mov
sarb
bound
int3
mov
in
out
sahf
jl
adc
mov
fcmovu
fisttpl
and
and
xor
mov
mov
mov
xchg
and
push
xchg
shll
lret
cmp
aad
add
dec
test
outsl
jge
lret
adc
pop
jp
add
xchg
cmp
movsb
add
mov
inc
rclb
dec
adc
push
out
test
xlat
shlb
inc
cmp
mov
sbb
hlt
pop
cwtl
cltd
out
int3
xchg
or
sbb
mov
mov
stos
sbb
push
ja
add
mov
rcrl
mov
inc
in
jge
scas
inc
inc
mov
loopne
push
sbb
xchg
mov
call
faddl
fsubrp
dec
int
popf
add
mov
ds
outsl
aad
nop
popf
aas
das
xchg
into
je
fstpl
sarb
out
mov
jmp
xchg
jp
rcrb
mov
mov
ret
or
cli
jge
imul
and
sub
fdivl
call
mov
std
or
inc
mov
data16
and
jbe
in
sub
fidivrl
mov
or
in
mov
test
adc
lock
xchg
xor
cmp
cmp
xorb
ja
neg
mov
mov
jb
gs
test
in
lret
scas
xor
scas
notl
mov
or
rol
loopne
mov
pmullw
sub
dec
mov
sub
es
pop
adc
mov
lock
es
cld
addr16
or
ljmp
mov
cli
add
pop
ss
mov
mov
xor
xchg
lret
mov
jbe
dec
jo
pushf
mov
push
lret
and
or
fcoms
xchg
je
add
hlt
sti
jl
xchg
and
out
fs
hlt
aam
xchg
outsl
dec
and
popa
mov
dec
scas
stc
movsl
or
clc
lahf
adc
rcrl
test
add
ljmp
das
xor
or
adc
mov
sbbl
es
fnstcw
loope
xchg
pop
lahf
mov
xor
enter
sub
shl
or
movsb
cld
test
cmp
and
scas
and
mov
adc
dec
push
sbb
or
aaa
fldt
jle
xchg
sbb
out
sub
ss
pop
jb
sahf
xchg
jb
or
jo
pusha
xchg
loop
cmpsb
xchg
bound
adc
mov
jge
fs
xlat
and
jno
push
das
daa
ds
mov
test
gs
mov
pop
out
adc
mov
pop
popf
sub
stos
in
sti
inc
or
lock
xchg
dec
adc
mov
leave
mov
loopne
push
add
mov
inc
push
pop
cmp
xchg
sub
call
je
pop
xor
jecxz
je
call
push
cli
xchg
sbb
ss
fsubl
inc
xchg
in
aad
jne
out
mov
pop
movsb
push
adc
out
stc
sub
dec
mov
pop
scas
cmpsl
adc
pop
dec
mov
ljmp
int
inc
sahf
jmp
mov
icebp
sub
xor
push
rcll
sbbb
test
add
hlt
clc
push
mov
repz
insb
cmc
pop
call
cmpsl
and
dec
cmp
mov
mov
jmp
dec
cli
int3
clc
xor
sahf
pop
lcall
mov
testb
fisubs
push
cmp
mov
inc
out
inc
xchg
idivl
jnp
je
cli
jne
fbstp
ds
adc
sub
fs
loope
jno
push
sbb
sbb
sub
outsb
fsubp
in
es
cmp
dec
out
xor
cmp
adcl
lock
pop
jl
sub
xchg
outsb
lret
mov
mov
xor
sbb
xchg
scas
cmpsl
jne
outsl
fistl
mov
es
sub
mov
in
int3
sbb
and
mov
jmp
xchg
into
sub
pop
lods
jp
js
mov
ds
iret
fisttpl
xor
sub
push
inc
jae
mov
rorl
sub
ss
jno
mov
jne
jl
fbld
movsl
pop
cli
aam
stos
sub
shl
pop
cmp
jle
ja
test
aam
mov
xchg
cltd
pop
mov
cli
mov
dec
dec
pop
xor
push
mov
and
ds
or
clc
shlb
mov
stos
mov
leave
and
lahf
das
mov
psadbw
jns
xchg
clc
adc
rclb
inc
mov
pop
out
loope
clc
push
lea
cmpsl
inc
out
hlt
les
inc
inc
cld
dec
imul
cmc
sbb
jecxz
add
in
xor
push
in
cli
addr16
push
adc
ret
pop
ljmp
push
mov
ljmp
flds
movsb
cmp
addr16
cmp
rcl
sub
call
dec
dec
inc
or
mov
push
stc
xchg
and
or
pushf
sub
lret
jbe
push
icebp
es
push
push
xchg
cmp
lcall
in
mov
fisttpll
lret
aam
push
fcmovbe
and
pop
push
pusha
dec
lods
test
std
push
pop
in
sbb
cli
ret
cmp
push
les
dec
shlb
testl
les
in
popf
icebp
inc
mov
nop
add
mov
inc
pop
or
daa
cs
xor
rclb
icebp
jl
and
pusha
ja
pop
jg
repz
cld
cmp
stc
lods
xchg
rcll
jb
jmp
in
ljmp
or
dec
xchg
xchg
or
in
dec
inc
lds
movsl
sbb
inc
ds
jbe
and
push
pop
loop
outsb
popa
xchg
cld
mov
sahf
mov
inc
leave
add
mov
aam
ljmp
xor
xchg
cmp
add
jmp
iret
sahf
mov
mov
adc
jno
ret
xchg
lods
cltd
or
mov
in
xchg
push
std
mov
lock
or
fildl
sbb
xor
cmp
adc
test
call
rcrl
fistl
jno
mov
clc
push
addr16
xchg
add
or
push
enter
lret
inc
adc
and
inc
fildll
add
mull
ret
inc
lods
push
xchg
fsub
sarb
sub
mov
icebp
mov
in
and
jmp
mov
les
or
pop
push
stc
push
mov
dec
jg
mov
jae
add
adc
push
daa
dec
cmp
adc
shll
jp
std
pop
xchg
add
bswap
sbb
imul
jecxz
sub
enter
xlat
inc
add
push
iret
mulb
xor
dec
cltd
lock
aaa
popa
das
in
shr
cmp
shlb
dec
xor
xchg
lahf
and
int3
and
popa
gs
ljmp
sbb
fcomps
inc
dec
insb
loope,pn
lods
xchg
das
movsl
es
in
xor
mov
inc
bound
mov
mov
push
sbb
stc
pushf
xor
test
mov
mov
dec
pushf
loopne
cli
cltd
and
roll
imul
ret
imul
cmp
jne
call
push
scas
cmp
adc
rcll
mov
or
jno
stc
in
inc
pusha
cmp
punpcklbw
add
xchg
mov
pop
push
out
and
les
inc
inc
out
xchg
je
cmp
adc
clc
xlat
mov
push
icebp
hlt
lret
popf
call
fistpl
push
hlt
pop
push
cmp
mov
push
cmp
rolb
cmp
hlt
bound
and
ficompl
cmp
sub
mov
mov
sbb
xchg
jne
mov
xchg
bound
add
addr16
push
add
push
stc
jmp
sub
fcomip
stos
mov
std
push
js
jnp
push
into
iret
or
lahf
in
cltd
lock
popa
xchg
mov
shl
imul
and
mov
sarl
mov
cmpsb
cmp
loop
subl
pop
push
cmp
adc
test
dec
pop
out
jmp
int3
adc
or
clc
lcall
mov
je
inc
push
ds
sbb
and
mov
or
jmp
ja
ret
sahf
and
jp
sub
mov
outsb
adc
jmp
fwait
and
stos
push
insb
sub
sbb
sub
adc
pop
mov
mov
and
adc
lret
sub
dec
mov
stc
xchg
dec
das
aam
aaa
jb
and
push
jno
adc
daa
popa
stos
mov
pop
movsl
scas
scas
mov
popa
out
dec
sub
cli
sbb
mov
push
jnp
or
arpl
fnstcw
icebp
cmp
cmpl
pop
mov
pop
frstor
mov
data16
in
push
out
cmp
test
push
cltd
add
adc
mov
cmp
and
mov
mov
leave
dec
js
data16
push
es
testl
mov
cli
sbb
arpl
xchg
add
jae
arpl
xor
mov
pusha
mov
sub
ret
cmp
push
rcrb
sub
pop
sub
popa
inc
push
jp
cmp
daa
jbe
arpl
mov
cmpb
adc
testb
je
sub
inc
cmovae
pop
ret
shll
adc
das
negb
sub
sarl
scas
cmp
cmp
xchg
repnz
ljmp
andb
filds
into
mov
imul
pop
cld
sbb
rclb
push
add
push
lock
sub
cltd
das
inc
repnz
addr16
dec
ret
fsubrs
xorl
fwait
jns
je
cmp
das
pop
aam
rcll
mov
in
sub
in
rorl
icebp
and
out
imul
xor
out
sub
rorb
cmc
icebp
cmpsl
sbb
adcl
aas
mov
adc
into
stc
push
jno
inc
pop
lods
imul
pop
or
jp
mov
mov
outsl
loop
cmp
and
xor
jg
dec
sbb
les
and
rcrb
test
xor
pop
cli
or
sub
jecxz
fwait
imul
push
adc
addr16
xchg
dec
pop
push
push
lds
jns
mov
je
js
pop
xor
test
xlat
push
in
cmpsl
int3
les
jb
or
out
or
jl
clc
mov
dec
adc
ja
arpl
inc
test
lods
in
or
sub
dec
aas
and
mov
mov
pop
sub
pushf
xchg
leave
push
jb
test
adc
xchg
aas
mov
mov
pop
add
mov
insl
adc
jge
mov
mov
pop
inc
xor
and
mov
lea
or
gs
scas
xchg
out
lods
add
cmp
cmc
shrl
outsl
mov
addr16
or
inc
jle
in
aad
xchg
mov
and
sub
xor
popf
jge
pop
dec
push
jp
jge
inc
loope
notl
mov
mov
push
mov
mov
dec
sub
jge
sbb
icebp
jbe
in
dec
popf
sarb
pop
call
lods
dec
jns
das
push
mov
xorl
mov
xchg
fwait
and
add
outsb
std
push
test
jl
ret
mov
pop
mov
stos
addl
inc
push
inc
adc
push
dec
xchg
in
loop
jg
push
cmp
jg
sbbl
jo
es
adc
xchg
dec
xchg
inc
fldpi
jns
adc
into
fwait
mov
pop
push
adc
repz
xor
xchg
push
mov
aas
jle
addr16
insb
arpl
ljmp
nop
repz
mov
insb
mov
in
faddl
shll
and
mov
xchg
jbe
sbb
outsb
pop
pop
lea
jae
dec
in
out
sbb
mov
test
les
leave
pop
int3
mov
aaa
sahf
loopne
xor
lcall
jecxz
addl
jecxz
pop
mov
ja
push
xchg
movsl
fldt
mov
aad
xor
cltd
scas
aad
test
jno
inc
roll
fiadds
add
cmp
mov
lock
xchg
bound
ret
test
adcl
jp
loopne
repz
xchg
sbb
adc
movsb
xor
cmp
jle
jmp
push
sbbl
leave
ret
push
fstenv
xor
inc
inc
push
adc
xchg
dec
addb
jge
fadds
fdivl
adc
jecxz
xchg
mov
jno
iret
jmp
lahf
add
dec
in
mov
fwait
cmp
push
push
add
sbb
jmp
sbb
hlt
adcb
jl
xchg
pop
pusha
fcmovb
sbb
dec
sbb
jb
pop
testl
adc
xchg
repz
icebp
outsl
pop
mov
push
push
adcl
cs
sbb
dec
adc
jmp
mov
cmp
push
ret
mov
push
stos
mov
mov
clc
dec
nop
mov
scas
sti
jnp
scas
stos
in
dec
in
xchg
push
push
inc
jns
sub
jp
xchg
jmp
push
icebp
fldenv
call
rclb
fsubrl
jbe
cwtl
xchg
imulb
push
loop
repz
testb
push
jmp
sbb
pop
mov
dec
push
inc
iret
or
jae
test
mov
dec
xchg
and
popa
sbb
sar
add
stc
movsb
mov
lods
mov
pop
pushf
negb
dec
dec
ret
mov
sub
mov
dec
mov
mov
mov
mov
jecxz
and
test
push
inc
mov
dec
push
stos
ret
imul
lods
clc
jo
lock
cs
mov
rolb
loop
cmp
in
jne
lock
and
adc
xor
dec
xchg
popf
inc
and
pop
insb
or
adc
gs
push
sbb
push
call
sub
mov
cmpsl
mov
push
lcall
and
push
int3
movsb
sub
pusha
inc
push
xchg
shr
scas
neg
es
lcall
cmp
sbb
dec
int3
shll
mov
mov
jno
xor
adc
fdivrs
or
cmc
mov
roll
cltd
jne
push
add
dec
pop
insl
aam
aam
cmc
sub
pop
push
pop
cmp
notb
sub
dec
aaa
pop
aam
sbb
cmp
mov
pop
inc
stos
loop
stos
cmc
ret
out
fisubrs
cmp
aaa
movl
pop
push
mull
add
mov
push
in
xchg
sbb
out
push
jge
fcmovnu
leave
loope
mov
xchg
aad
stos
inc
jle
lret
and
sub
popa
dec
xchg
pop
xor
roll
pop
ss
mov
les
insl
inc
int
test
in
loop
dec
int
mov
dec
dec
push
hlt
adc
in
int
pop
add
lods
pop
mov
push
cwtl
jge
pop
fdivl
push
or
rorl
sbb
jmp
xlat
push
xchg
ja
xchg
inc
mov
push
mov
mov
jb
dec
jns
sbb
mov
push
xchg
bound
outsl
pop
outsb
stc
jae
inc
dec
dec
xchg
adc
sar
push
inc
mov
adc
nop
shl
cmp
push
mov
out
add
icebp
xorb
in
inc
mov
jg
test
pop
in
mov
rorb
cmp
jmp
mov
inc
in
out
shrb
pop
inc
inc
mov
sub
aad
or
les
das
stos
cs
mov
pop
inc
sti
iret
imul
ds
enter
lea
inc
incb
add
enter
filds
push
jns
and
add
mov
test
sbb
cmp
ror
add
mul
xchg
xchg
push
insb
mov
loope
push
test
repnz
pop
cmp
push
xchg
jmp
loop
pop
dec
push
jmp
mov
setp
adcb
cmp
cmpsb
sub
mov
inc
fwait
or
adc
adc
xlat
and
sbb
push
enter
jo
mov
ss
bound
sti
jle
cmpsb
hlt
cld
mov
jl
push
test
in
push
jo
popa
mov
lahf
int3
inc
dec
dec
mov
sub
xchg
sarb
xchg
stos
xchg
sub
fdivl
push
sub
inc
jns
fimuls
add
jmp
inc
ja
hlt
mov
repnz
cmc
int3
es
xor
and
loop
int3
push
in
outsb
mov
push
xchg
xchg
jmp
add
fbld
daa
out
mov
inc
xchg
mov
xchg
out
adc
ljmp
push
adc
xlat
int3
or
add
in
fmull
stc
push
scas
ss
fwait
xor
out
dec
mov
loope
and
cmpsb
xchg
orl
cs
cmp
rclb
testb
hlt
push
jp
loope
mov
ds
shll
dec
xchg
loopne
xchg
or
jno
push
loopne
or
ss
push
jbe
aam
adc
pop
xchg
cmpsb
js
adc
jg
mov
xor
sti
xchg
aas
dec
mov
cmpsl
hlt
mov
pop
loope
scas
dec
or
jmp
or
dec
pop
bswap
push
lds
and
or
jmp
into
cmpsl
pop
scas
adc
xchg
add
jp
cmp
jo
out
in
and
lcall
sub
movsl
shr
sub
scas
and
push
cmp
negb
push
sbb
in
hlt
testl
and
jns
jmp
push
arpl
lcall
inc
stos
pop
jecxz
and
clc
lea
cmp
pusha
stos
or
xchg
add
test
mov
movsb
mov
fwait
aaa
lods
and
inc
cmpsl
and
push
add
movsl
mov
dec
sub
repnz
mov
lods
cmp
jg
insb
popl
shl
jmp
dec
cmp
adc
or
sarb
jmp
mov
call
movsl
sti
fldenv
cltd
andl
adc
adc
jp
xchg
sbb
jnp
call
xchg
push
call
sarl
jle
loopne
push
lret
jmp
jecxz
outsl
in
test
daa
push
je
dec
daa
push
in
pop
push
ds
push
js
xchg
xor
mov
inc
cmp
addr16
out
test
fisubs
pop
jecxz
sub
add
shl
sub
jecxz
push
ret
shlb
add
gs
rolb
lcall
mov
cmpsb
pop
ret
addr16
push
push
ret
icebp
lea
stos
push
jmp
mov
adc
add
and
adc
cwtl
push
sub
or
mov
mov
sahf
pop
jae
jns
jmp
inc
jae
int
ret
hlt
aaa
shll
pop
lds
fs
adc
push
xchg
and
data16
add
push
sbb
pushf
negb
cmp
sbb
repz
pop
test
test
cld
add
mov
shll
lods
xchg
dec
xlat
bound
xor
repnz
repz
fwait
jns
jle
add
mov
cmpsb
dec
inc
addr16
jecxz
adc
rcrl
fwait
or
fldt
inc
cmp
pop
pop
push
dec
mov
scas
jle
pop
mov
sbb
xchg
test
sub
mov
pop
orl
mov
mov
jecxz
scas
inc
stos
or
add
xor
ljmp
int
add
das
nop
jae
mov
pushf
lock
std
pop
sbb
dec
movaps
sub
stos
loopne
mov
fisubrs
pusha
sti
sub
rcl
xorb
dec
rcrb
mov
cmp
sbb
mov
bound
mov
enterw
mov
icebp
mov
jae
lahf
xlat
push
rol
mov
jbe
add
out
lods
scas
cmp
pop
xchg
test
vpmullw
pop
lcall
mov
dec
mov
outsb
out
fistpll
lcall
imul
jno
imulb
jl
xor
dec
sbb
sbb
mov
mov
sahf
in
scas
sub
push
out
pop
add
cs
icebp
mov
add
iret
pop
scas
out
mov
out
jmp
adc
stos
test
frstor
std
out
int3
inc
mov
lret
xor
ljmp
fcomip
add
pop
and
mov
cmpsb
fimuls
out
pushf
ja
xchg
out
xor
scas
scas
shrl
divl
ss
pop
sub
cmc
cmp
xor
cwtl
into
push
xchg
in
je
filds
outsl
sbb
push
xor
xchg
sahf
jl
adc
sub
movsb
in
xchg
loopne
adc
cld
cmp
dec
fldcw
imul
es
add
clc
pushl
jmp
cmp
mov
inc
leave
jno
push
das
call
jle
add
push
dec
js
enter
cmpsb
pushf
pop
es
sub
adc
mov
add
xchg
and
leave
add
mov
popa
sub
imul
pop
jb
push
jle
mov
insb
mov
sbbb
enter
mov
dec
gs
adc
movsb
adc
add
mov
test
jo
sub
sti
and
popf
sahf
mov
sbb
repz
in
data16
rolb
xlat
aas
filds
push
call
imulb
mov
adc
cmp
popf
shl
rcll
rorl
inc
xor
mov
nop
and
jmp
sub
bound
imulb
movsb
cmp
mov
imul
loop
repnz
jb
aad
dec
test
jo
inc
xchg
aam
add
cs
pop
loopne
test
das
inc
mov
mov
push
out
stos
cmp
test
enter
xlat
mov
dec
mov
rcll
push
in
pop
xor
ss
mov
cmpsb
push
movsb
mov
add
dec
or
cli
or
cld
ret
lods
mov
dec
mov
inc
daa
in
clc
cmp
lea
dec
shlb
inc
ficoms
iret
push
mov
in
pusha
test
jg
add
lock
xchg
cmp
out
jo
xor
xchg
clc
test
pop
cmp
daa
popa
mov
mov
sub
jo
push
fidivrs
ja
insl
push
cmc
xlat
jmp
repnz
xor
lret
push
pusha
mov
fwait
je
add
sarb
arpl
stos
jmp
mov
push
push
pop
setno
dec
je
popa
arpl
js
mov
aas
clc
shll
shr
jp
cltd
insl
dec
mov
pop
lods
inc
sub
or
xchg
lock
sahf
ret
fnstcw
inc
push
mov
mov
push
or
or
sub
push
jg
pop
mov
inc
mov
jg
pop
ret
repnz
inc
sub
shr
arpl
test
adc
xor
pop
js
or
clc
xorl
mov
mov
push
arpl
ljmp
lods
mov
cmpsb
mov
and
jb
cmpsl
mov
xchg
pop
mov
lock
and
or
jp
mov
loop
mov
test
jmp
add
xor
icebp
iret
andb
dec
push
mov
fbld
lds
mov
mov
int
sahf
mov
das
xchg
pop
pushl
loopne
das
inc
jg
cmp
xchg
lods
outsb
test
add
mov
push
test
incb
or
add
out
sbb
mov
pop
stc
int3
adc
ret
adc
xlat
xchg
filds
enter
xor
addr16
mov
fisubs
rcll
push
jns
fdiv
imul
push
push
cmp
sbb
dec
shll
movsl
xchg
dec
cmp
inc
les
cmc
aad
mov
fldl
xchg
icebp
out
xchg
push
xchg
adc
push
shr
mov
jb
xor
je
jmp
lea
push
xchg
xchg
jb
scas
push
iret
bound
gs
cmp
pop
clc
shl
mov
pop
push
mov
push
lcall
in
les
pop
imul
arpl
cmp
iret
inc
jnp
add
test
and
xchg
popa
repz
cmp
sub
adc
pop
sub
mov
nop
xchg
outsb
es
in
mov
add
loope
stc
fwait
xchg
call
test
cmp
icebp
addr16
fisttpl
push
adc
out
sub
or
sub
adcl
sbb
fdivrs
push
ds
ret
lods
or
jo
jge
movsb
jne
insb
test
aad
inc
fcoml
push
nop
int
aas
or
mov
mov
and
mov
and
in
jb
pop
jb
movsb
ljmp
mov
andb
jl
jle
xchg
fcmovne
dec
dec
pop
or
les
mov
dec
push
jle
push
imul
inc
out
sarl
push
mov
cwtl
insl
pusha
in
jbe
dec
or
aam
mov
mov
or
inc
adc
fs
loop
xor
sub
cmp
insb
jnp
pop
add
movsl
hlt
xor
xor
xor
adc
das
mov
xor
repnz
cmp
push
cmpsl
call
push
cmp
movsb
mov
push
push
popf
or
cmp
adc
jle
fsubrs
outsb
out
jge
es
repnz
mov
mov
js
pextrw
pop
lret
pop
dec
data16
or
ja
mov
aad
mov
mov
adc
insl
test
or
bound
call
mov
fwait
shll
xchg
mov
inc
aam
or
loopne
and
lret
or
push
dec
repz
mov
jno
movsl
xlat
mov
and
je
jle
jp
cmpsl
push
push
lret
out
push
cmp
into
icebp
fcomip
sub
pop
jno
js
push
stos
loopne
jae
or
ljmp
fwait
cs
imul
push
stc
sbb
repz
pop
push
and
jmp
inc
dec
lods
sahf
cmp
and
fildll
xchg
flds
jb
mov
and
jp
cmc
mov
xchg
pop
push
add
aam
sbb
dec
ja
mov
cmp
in
loopne
sbb
popf
mov
xchg
inc
add
mov
stos
gs
lds
cltd
jl
xchg
and
and
xor
mov
xchg
add
adc
scas
and
xchg
loopne
inc
imul
mov
xchg
mov
in
lahf
pop
bound
mov
and
dec
mov
mov
stc
aaa
pop
lahf
or
push
or
mov
dec
sub
out
jo
push
es
sahf
cltd
inc
pop
xchg
xchg
mov
int
jl
fiaddl
fsubs
daa
mov
das
insb
mov
lahf
add
adc
sti
filds
sbb
cmc
test
lods
std
add
adc
inc
inc
cmp
push
push
sbb
mov
cli
jle
xchg
sbb
arpl
sti
int
repz
sbb
mov
add
fmull
int3
cmp
mov
lcall
es
test
in
inc
cld
aad
cmpsb
push
lret
jecxz
xor
dec
ss
mov
imul
std
and
test
gs
lret
out
addr16
sub
es
push
push
je
lock
test
dec
jecxz
add
gs
xchg
sti
lahf
inc
or
out
frstor
xor
mov
or
jo
jns
addr16
daa
stos
sbb
mov
fs
xchg
je
in
ja
xchg
mov
stc
int3
into
and
mov
int3
cmp
frstor
dec
int3
xchg
lret
or
mov
mov
pop
xor
xchg
je
jae
cmpsl
roll
and
push
xor
or
lss
ffreep
and
dec
int
ret
insl
std
addb
or
icebp
ljmp
jb
xor
xchg
mov
sub
in
sbb
mov
nop
mov
push
js
sti
push
push
stc
sub
push
fsubs
inc
repnz
pop
mov
jmp
jle
jnp
scas
lahf
or
mov
adc
push
sahf
xchg
jo
jae
lahf
pop
inc
push
hlt
mov
repz
popa
fdivs
fsubrp
push
inc
icebp
dec
xchg
int
and
push
cmc
aaa
jmp
jecxz
jbe
jg
and
dec
mov
xchg
repnz
inc
lods
leave
arpl
mov
scas
les
cmc
loop
or
mov
ljmp
inc
lahf
pusha
stos
dec
and
ss
aad
bound
les
xor
xor
sbb
mov
push
jne
lret
lret
test
sub
sub
faddl
jg
icebp
inc
jp
cmpsb
scas
pop
cli
mov
icebp
pop
imul
ffreep
inc
cmp
sub
push
loope
pop
and
pusha
cmp
cltd
cltd
mov
xchg
jle
lret
loop
mov
in
iret
js
insb
sbbl
add
clc
push
nop
jnp
push
mov
cmp
jne
sub
xor
popa
adc
pop
mov
mov
mov
adc
and
sub
mov
testb
jne
enter
sbb
loop
mov
or
incl
divb
push
mov
test
adc
xchg
push
enter
and
leave
sub
cmpsl
dec
inc
lds
data16
xchg
cmp
dec
gs
push
scas
ror
mov
aam
jle
rcrb
push
jnp
int3
inc
cmp
pop
jp
jmp
in
sbb
and
js
xchg
bound
bound
ss
lea
outsb
pop
data16
sarl
jb
adc
and
jno
mov
xor
lods
les
fs
xor
mov
or
roll
repz
inc
mov
popf
push
sbb
daa
not
aaa
mov
call
outsl
pop
sbb
mov
xchg
out
ja
hlt
ja
adc
les
test
inc
push
ss
loope
cld
rcl
pop
fwait
mov
add
jg
sahf
add
test
cmp
add
jo
sahf
loope
pop
xchg
cmpsb
push
mov
cmpsb
jne
xchg
out
mov
stos
jno
jne
andb
mov
outsb
pop
in
mov
mov
lds
push
xor
sub
sbb
notb
aaa
dec
gs
lods
lcall
addr16
stc
aam
hlt
int3
movsb
insb
rolb
fs
mov
sub
mov
fs
bnd
in
sub
push
rclb
push
ljmp
lods
call
adc
lahf
mov
push
out
xchg
sub
push
inc
je
cmpsb
out
shlb
xor
mov
sarb
jbe
mov
mov
outsl
imul
das
mov
sbb
mov
fnsave
in
in
pop
inc
ret
and
dec
push
cmp
in
test
ss
mov
xor
adc
loope
shll
pop
mov
shlb
mov
jmp
jge
pop
inc
push
pop
mov
add
pop
rcrl
test
scas
sub
sbb
daa
and
inc
sbb
sti
inc
push
xor
dec
mov
popl
mov
loopne
call
and
gs
movl
add
nop
sbb
out
negb
pop
icebp
cmp
add
shlb
scas
pop
sar
xchg
sub
push
xchg
es
dec
jo
cmp
cmp
jg
pushf
push
jmp
pop
int3
rcr
gs
stc
adc
dec
and
pop
inc
push
fildll
cmpsl
call
xchg
or
jo
and
loope
sub
clc
jno
sub
mov
inc
test
in
or
dec
sbb
mov
pop
cmp
mov
loope
sbb
pop
xor
push
clc
ficoml
xchg
xchg
js
push
dec
dec
add
mov
pop
test
addr16
cld
add
xchg
lahf
hlt
out
inc
pushf
pop
imul
sub
cli
nop
dec
fwait
and
ror
push
les
dec
sbb
cmc
and
shrl
mov
aaa
sti
testb
or
lcall
push
test
inc
fcompl
and
in
pop
lods
scas
xor
das
out
pop
sub
ret
movsl
cltd
cltd
xchg
ss
mov
xor
fldenv
ja
xchg
fistpll
rcll
pop
cwtl
or
mov
scas
mov
sub
stos
mov
push
fsubr
ljmp
loop
test
sbb
push
xor
xlat
dec
into
sbb
xor
jnp
xor
xchg
add
cmc
enter
push
push
gs
mov
ljmp
push
push
jmp
cmc
popa
cmpsb
add
es
loope
les
xchg
push
pop
mov
xchg
mov
cltd
dec
pop
pop
call
aad
int
fisubl
popa
bound
pop
gs
push
out
mov
movsl
jecxz
xchg
push
clc
ljmp
pop
icebp
and
ss
jo
rol
mov
out
mov
lgs
sbbb
aaa
icebp
add
push
loope
sbb
bound
ljmp
sbb
push
mov
push
js
cwtl
adc
lahf
jne
mov
mov
lret
add
shrl
mov
std
push
xchg
stc
mov
cmpsb
jns
jp
and
adc
int3
xchg
dec
cltd
sbb
push
cli
lahf
in
sbb
nop
jb
mov
inc
and
in
push
xchg
das
fdivr
shl
mov
inc
cmp
loopne
in
pop
testb
mov
imul
repz
fwait
sub
cmc
jo
lcall
mov
or
int3
out
add
mov
mov
aaa
int
mov
jne
int
and
addr16
shl
pushl
mov
sub
mov
out
sbb
pop
js
xor
aas
jbe
loope
xchg
sbb
sbb
xor
bound
aaa
imul
int3
mov
push
or
popa
or
pop
lahf
mov
mov
testb
leave
cmp
sti
sub
scas
fmuls
mov
jbe
pop
mov
movsb
sahf
push
scas
push
outsb
out
pop
cli
in
pushf
adc
outsl
push
mov
sbb
push
inc
cmpsb
clc
push
inc
jle
cmpsl
mov
insl
push
mov
pop
dec
pop
inc
je
pop
sub
je
testl
xchg
mov
stos
shrl
pushf
leave
pop
loopne
pop
inc
dec
ljmp
add
sti
icebp
das
test
nop
pop
pop
dec
add
dec
sub
mov
jne
jge
xor
sub
mov
inc
mov
mov
xchg
loop
test
fwait
xchg
pop
or
mov
cmp
je
out
mov
cmp
cltd
pop
pop
lods
and
cmpsl
push
out
shl
pop
std
sub
cs
sbb
adc
xor
mov
daa
dec
std
pop
and
cmp
lea
in
or
xchg
out
jnp
or
rorl
ja
pop
xorl
push
inc
jns
rcrl
fs
pop
negb
sub
aas
cli
inc
pop
push
pop
test
cmp
insb
in
and
inc
in
js
aaa
lret
stos
xchg
inc
and
lahf
dec
mov
ja
mov
cli
out
or
insl
aam
cmpsb
out
pop
ds
xor
pop
mov
xor
stos
mov
mov
pushf
inc
scas
aad
loop
je
push
jge
mov
sub
lcall
dec
pop
mov
inc
mov
out
mov
pop
sahf
pop
rcr
push
jmp
jo
pop
test
mov
xchg
sub
push
in
outsb
xor
les
push
dec
in
repz
push
pop
push
pop
cwtl
push
iret
mov
aad
aam
ret
repz
jmp
iret
push
not
cwtl
or
jge
add
add
cmp
loop
lea
bound
ret
mov
mov
pop
pop
loop
les
cwtl
dec
or
sbb
mov
bound
add
ret
jno
mov
xlat
iret
sub
push
insl
clc
divl
int
mov
pop
jp
inc
in
mov
mov
outsl
jno
shl
jmp
ret
add
lods
pop
and
lea
inc
sbb
adc
xor
adc
jno
cmp
xchg
adc
mov
mov
sbb
fs
push
cmpl
or
mov
push
jle
lcall
lds
lods
test
add
jecxz
lea
aas
push
lods
sar
xchg
outsb
and
dec
in
jae
lea
jp
xchg
inc
ret
mov
jb
pop
mov
xchg
ret
jne
dec
nop
popf
pushf
cmc
mov
mov
fsub
cmp
add
inc
ficompl
jne
cli
call
in
nop
pushf
test
dec
arpl
aas
int3
jno
jecxz
add
jge
push
shll
push
lods
lcall
iret
in
pop
mov
ljmp
adc
addl
test
jge
jnp
dec
dec
loope
cmp
cmp
push
aad
iret
push
jb
xor
ficomps
and
push
mov
cmp
or
movsl
lcall
repnz
jno
lods
outsb
dec
sbb
dec
jge
imul
sub
or
add
test
insb
inc
mov
cli
dec
push
divl
test
dec
pop
jo
cmc
fisttps
mov
daa
xor
or
lahf
pop
dec
xor
aam
dec
in
lods
mov
rol
push
add
add
sub
mov
jmp
dec
outsl
repz
dec
or
popf
cltd
cmp
daa
pop
ret
and
lods
pop
mov
add
xor
mov
sbb
int
pushf
sbb
into
push
push
push
fs
xor
in
mov
leave
aas
dec
pop
in
and
pop
jecxz
add
push
popf
dec
lods
lcall
mov
cmp
cmp
jbe
test
andl
ss
and
sarb
pop
jbe
retw
and
jg
test
and
testl
cmpsl
adc
mov
jmp
push
push
jecxz
jmp
push
ficomps
and
sub
cmp
mov
imul
cmpsb
jl
repz
push
gs
std
and
push
cmp
rcrb
add
xor
add
ds
mov
sbb
pop
mov
test
imul
out
xchg
roll
adc
out
inc
mov
mov
push
mov
imul
or
inc
push
inc
popa
add
sbb
movd
iret
cmp
pushf
push
les
aas
fadds
push
inc
push
shrb
pusha
xor
cmp
inc
bound
in
lock
test
xchg
and
nop
js
jg
jl
sub
adc
and
jnp
mov
div
jns
mov
lret
aaa
dec
cmp
andb
inc
mulb
or
mov
or
mov
fcomp
mov
int3
loope
jae
pop
lds
std
mov
xor
cmpsl
ret
iret
enter
mov
push
in
pop
dec
pop
mov
mov
addr16
sahf
push
fadds
ljmp
jbe
loope
xor
flds
icebp
pop
mov
push
test
pop
inc
adc
out
insb
das
pop
xchg
outsb
ljmp
mov
jbe
test
sbb
orl
shll
mov
not
popa
repnz
mov
sbb
lret
enter
xorl
outsb
mov
sbb
int
outsl
fistps
lods
ret
jge
sub
out
int
dec
les
int3
inc
aam
sti
mov
les
adcb
ss
add
popf
mov
ret
xchg
lods
adc
dec
pop
mov
jns
inc
inc
icebp
lds
xor
loope
xchg
popa
in
les
int3
or
xor
lahf
xor
aaa
xor
or
fildl
mov
pop
ja
int3
cmc
lods
push
cli
or
sub
int
out
int
mov
rolb
fnstsw
sub
into
rcrl
pop
mov
ret
andl
xor
inc
sub
xchg
rcll
lea
fdivl
fidivs
cmpsl
std
popf
jno
fsubrs
shll
popf
mov
cmp
push
jle
mov
push
fidivs
pop
fldl
mov
stos
mov
shll
cmp
xor
push
cwtl
lret
add
jo
pusha
sar
jg
stc
lahf
test
mov
imul
into
ds
imul
inc
and
or
stc
rolb
jnp
lretw
out
inc
cld
mov
inc
aad
mov
mov
das
mov
sbb
and
add
outsb
sbb
mov
fistpl
sub
pop
mov
lock
scas
notl
out
and
stc
push
test
jo
xchg
imul
sbb
add
inc
jne
rcll
outsl
lret
adc
sahf
ret
lcall
lcall
push
pop
test
fsubr
test
scas
fs
jne
xor
shll
inc
rorb
test
mov
aaa
cli
je
repz
mov
bound
mov
xchg
jecxz
popa
sti
mov
lcall
nop
loop
lds
push
std
call
mov
or
gs
aam
popf
push
mov
jp
aad
scas
jge
xor
inc
sar
sub
and
enter
cmp
mov
cmp
test
shll
inc
mov
xchg
add
fadds
cli
sub
out
ss
or
push
adc
push
xchg
jno
into
stos
or
test
lods
xchg
aas
mov
inc
sub
jb
rcll
push
icebp
ficompl
lret
es
and
pop
leave
bound
or
xor
repnz
mov
inc
sbb
fnsave
lds
shll
xchg
sub
rorl
dec
jb
fcom
fiaddl
repnz
or
in
repnz
cmpsb
out
push
dec
lock
loopne
lods
and
leave
jmp
popf
mov
mov
int3
gs
dec
jg
js
mov
clc
pop
shr
out
sbb
sub
mov
xchg
xor
mov
leave
scas
cmp
push
int
or
nop
dec
push
fidivrs
and
push
cltd
sub
mov
mov
adc
jns
insl
cmp
leave
es
adc
mov
insl
movsl
add
sarl
enter
sbb
mov
cmpsl
mov
sarb
mov
add
xor
cwtl
je
add
mov
dec
mov
neg
inc
add
ss
inc
rolb
lcall
xchg
mov
in
and
adc
push
imul
out
fwait
test
cwtl
int
into
push
sub
mov
hlt
fbstp
outsb
lods
jae
jno
xchg
in
test
add
int3
xchg
jg
mov
ja
or
mov
in
into
xor
call
incl
and
pop
and
mov
lods
pop
lret
pusha
mov
es
je
lods
addl
andl
lahf
imul
rolb
dec
and
mov
out
setle
jo
dec
sub
and
les
lret
jmp
pop
or
lcall
xchg
push
push
scas
fwait
in
and
pop
mov
xorb
scas
fs
es
xor
inc
fs
out
nop
adc
cmp
mov
inc
sub
cmpsb
scas
lods
xchg
cmpsl
inc
clc
xchg
int
adc
pop
test
push
or
jns
psrld
lcall
xchg
sbb
mov
enter
mov
or
addr16
xor
pop
ss
lahf
inc
dec
insl
addb
inc
mov
repnz
int3
inc
iret
add
sub
mov
xchg
cwtl
subl
push
sahf
xchg
shl
inc
sti
jnp
data16
fldt
inc
fcoms
outsb
pop
sbb
jb
sbb
add
push
ret
add
test
and
scas
push
outsb
sbb
pop
xchg
dec
xchg
movsb
fs
dec
popa
cmp
sbb
mov
aam
xor
cmp
fldcw
push
push
test
jbe
fwait
sahf
movsl
and
mov
mov
mov
and
popf
sub
pop
and
dec
cmp
icebp
icebp
out
and
push
pop
pop
dec
xchg
or
and
pop
js
notl
mov
jg
xchg
push
adc
stc
mov
stos
push
adc
xchg
mov
or
ja
xchg
xchg
or
imul
int
sbb
push
je
add
jmp
clc
enter
jg
mov
or
stc
sub
adc
in
shl
jb
stos
jp
jge
mov
fmulp
ret
mov
ss
push
pop
or
jle
mov
testl
jb
fldl
sub
int3
add
or
repz
insl
adc
imul
arpl
sub
dec
ss
xor
inc
int3
sarl
ja
fs
mov
sbb
je
test
add
xor
pop
test
aad
jae
xor
and
inc
or
lods
lea
lock
mov
out
mov
mov
pop
mov
sbb
inc
loope
outsl
cmpsb
or
push
jl
scas
aad
sbb
xchg
cmpsb
dec
mov
call
cpuid
add
daa
sbb
cmpb
pop
fadds
repz
adc
scas
sbb
sub
cld
mov
lret
mov
cmovns
mov
mov
dec
sbbb
std
xor
cwtl
xorb
ds
sbb
jp
xlat
and
es
fsubs
test
sahf
sub
pop
fistl
push
scas
add
scas
fisttpl
jge
mov
jnp
jge
daa
add
add
xlat
pop
xlat
sub
lahf
push
sbb
imul
mov
pushl
xchg
sbb
push
jo
ss
dec
sub
mov
xor
lahf
xchg
dec
int3
mov
adc
inc
mov
scas
icebp
mov
mov
loop
fiaddl
jne
out
gs
jno
cwtl
data16
scas
shl
outsb
adc
in
movsl
int3
fldcw
and
jo
dec
pop
cmc
ja
aas
mov
pusha
xlat
fbld
dec
adc
repnz
jb
daa
mov
and
xchg
incb
pop
cmp
fcomps
sbb
cltd
inc
xchg
add
test
dec
cmp
push
sbb
jle
mull
ror
sar
int3
or
dec
push
ret
les
subl
in
fnstcw
gs
mov
fiaddl
jns
cmp
arpl
adc
leave
dec
sub
pop
pop
cmp
test
test
lock
jo
cmp
ret
mov
test
les
out
fwait
fwait
je
in
cmc
push
mov
pop
jmp
jne
es
and
pop
cmp
cmp
lds
movsb
cmp
out
xlat
push
inc
mov
pushf
mov
mov
mov
loopne
push
mov
es
mov
inc
inc
xor
and
imul
and
inc
sti
add
xor
mov
mov
fdivs
sub
popf
inc
jg
lea
and
out
imul
mov
rcrb
je
rorb
and
lock
data16
jmp
insl
sbb
iret
mov
repnz
mov
push
jmp
mov
xor
sub
nop
mov
dec
data16
bound
cmpl
mov
leave
dec
loopne
push
dec
jg
pop
imul
cwtl
xor
adc
mov
test
add
xor
pop
lods
ja
mov
xor
mov
ucomiss
xchg
mov
add
xchg
adc
sbb
cmpsb
into
inc
dec
cmp
jmp
adc
and
orb
jg
mov
mov
add
hlt
pop
aam
add
xchg
jmp
hlt
pop
xchg
inc
cmp
push
push
dec
cbtw
sub
mov
cwtl
pop
cmp
arpl
in
inc
jge
or
nop
lock
pop
push
mov
lret
daa
cmpsb
loop
fs
cmp
and
movsl
sub
xor
or
addr16
add
pusha
push
push
leave
dec
sahf
enter
mov
ds
popl
add
mov
js
dec
pop
cmpsl
test
jecxz
rcll
daa
pop
js
cmp
sbb
push
dec
mov
sar
nop
mov
push
arpl
mov
aas
mov
mov
ds
popf
popa
push
cmpsl
cmp
xchg
orb
sbb
movsl
or
push
enter
loope
push
ja
mov
add
insb
dec
push
mov
dec
adc
jnp
mov
mov
push
test
sbb
dec
jp
int
popf
addr16
add
ds
mov
je
bound
lock
dec
orl
aas
xor
stc
loop
adc
dec
rclb
mov
cld
mov
mov
pop
shll
jle
int3
mov
jno
pop
in
loope
mov
leave
jl
pop
add
insb
cmp
xor
mov
push
dec
cltd
jnp
push
mov
loop
test
mov
test
int
mov
sbb
fbstp
test
imul
loopne
xchg
jp
in
sbb
insb
je
movsl
dec
movsb
pushf
ret
inc
mov
scas
sahf
push
cwtl
xor
fs
lock
cmp
or
mov
daa
test
int3
xchg
mov
dec
adc
fdivrl
sbb
in
cwtl
movsb
inc
xchg
int3
jne
cmp
jnp
ljmp
enter
mov
xchg
inc
sbb
cmc
mov
je
int
sbb
adc
mov
cltd
dec
jnp
repnz
stc
pop
mov
cmpsl
cmc
imul
aaa
sub
add
out
pop
ret
mov
int
pop
or
outsl
adc
inc
mov
cmpsb
nop
xchg
push
sub
mov
mov
cmp
mov
xchg
xor
sbb
sbb
mov
divb
xor
pmaxsw
or
sbb
test
push
cmp
dec
and
lret
jae
ljmp
mov
sti
push
fisubrs
and
pop
mov
cs
aad
cmp
iret
dec
loop
insb
mov
mov
xchg
add
jmp
cmp
nop
fsts
aaa
jo
pushf
sbb
add
inc
lods
or
xchg
jg
call
repz
cs
dec
xchg
pop
das
xor
cmp
dec
cld
lea
std
jg
mov
or
iret
sarb
xchg
lds
mov
jle
or
bound
push
xchg
ja
dec
enter
push
test
fidivrs
jmp
out
popf
lret
push
int3
mov
stos
jns
inc
push
repnz
loopne
jmp
std
mov
icebp
aad
inc
mov
orl
jne
sbb
jno
out
scas
movsl
ficoml
js
lret
stos
fildl
daa
out
cld
sbb
nop
inc
lock
push
xchg
lea
dec
andl
sub
adc
pusha
jnp
shlb
mov
lock
mov
in
popa
addr16
test
mov
fcmove
pop
mov
bound
and
in
inc
addr16
negb
mov
lret
mov
out
das
test
imul
je
je
clc
xchg
sti
ffree
in
sti
lcall
fimuls
xor
or
cwtl
sbbl
mov
dec
add
call
shl
jp
push
pop
lods
fs
jle
ret
cmp
dec
loopne
mov
xchg
mov
jns
lods
imul
fidivrl
test
inc
lea
mov
dec
mov
insl
push
xchg
adc
or
add
inc
or
xchg
cld
data16
push
fistps
enter
fcmove
call
cmp
and
xor
in
loope
aas
popa
pop
jb
add
jle
xchg
test
push
testl
insb
in
mov
and
pop
xor
in
cmp
orl
mov
xchg
inc
inc
gs
add
pop
dec
imul
mov
push
sbb
out
scas
js
in
mov
push
jb
pop
pop
orb
sub
addl
in
daa
lods
mov
mov
xor
sbb
add
mov
mov
mov
and
fs
push
ret
dec
shll
or
stos
mov
pop
movsb
sub
rep
or
out
mov
xor
clc
mov
push
mov
mov
gs
fwait
push
push
push
jmp
imul
popa
mov
movsl
mov
in
fmuls
shlb
mov
jl
cmp
pop
mov
jnp
jmp
xchg
cmp
jg
ret
xchg
scas
js
ret
minps
pushl
dec
push
adc
push
call
inc
cmp
xor
mov
lods
add
cmpsl
xchg
outsl
adc
xchg
lret
movsl
ret
and
lahf
jmp
mov
or
outsl
jge
enter
and
lods
cwtl
mov
adc
xchg
sub
addl
jl
dec
mov
aas
imul
push
mov
inc
dec
jle
aas
or
aaa
mov
jge
add
xchg
shlb
scas
sbb
xor
fsubl
xchg
leave
xor
in
int3
repz
adcl
enter
jp
mov
sbb
xor
mov
mov
aaa
in
push
mov
mov
es
cmp
push
repnz
adc
leave
jg
lods
js
mov
inc
xor
mov
inc
sbb
shll
inc
pop
push
stos
ret
sbb
sbb
sbb
pop
push
xor
jmp
dec
adc
and
pop
es
aad
push
push
inc
mov
mov
xorb
enter
cmp
or
cmp
dec
mov
pushf
es
mov
sbb
movsb
rorb
call
inc
call
call
fs
pop
fimuls
sbb
pop
fstpt
cwtl
pop
aas
add
shlb
flds
fcomps
push
mov
xchg
adc
adc
es
mov
sub
ja
sbb
hlt
cld
movsl
cld
push
cmp
test
imul
xor
fdivrs
mov
and
mov
mov
test
cmp
and
out
rcr
sbb
iret
inc
cmp
xchg
cmp
sub
add
add
dec
sub
scas
cmpb
or
push
ljmp
fidivrs
ror
dec
fwait
insb
pop
lret
mov
iret
mov
movsb
add
fistl
adc
ror
push
pop
and
mov
aas
lds
negl
das
push
rol
leave
push
mov
imul
icebp
les
not
pop
add
xor
jecxz
in
inc
nopl
rcl
enter
xchg
push
jno
jb
fnstsw
mov
cs
ljmp
arpl
or
ret
mov
inc
imul
sbb
dec
test
das
xchg
sbb
das
pop
xor
fcoms
fs
das
lcall
orl
xor
push
add
mov
popa
xchg
sbb
data16
dec
xor
fiaddl
mov
push
push
add
sub
mov
fimull
cmp
ret
inc
mov
push
jno
jle
pop
scas
pop
cltd
or
fidivl
pushf
mov
jmp
and
sahf
dec
xchg
jle
push
or
js
mov
mov
cmp
mov
leave
dec
clc
push
inc
gs
mov
ja
insb
jb
lods
and
cmp
adc
es
sbbl
sahf
test
push
xchg
ret
jno
int
out
inc
jae
pop
sbb
fcmovu
std
aas
mov
in
loopne
dec
int
adc
cli
cmp
lock
in
outsl
jecxz
xchg
or
and
adc
shufps
jmp
lock
adc
pop
add
adc
adc
lahf
and
jnp
xor
adc
adc
shrb
daa
mov
addr16
cwtl
test
orb
lock
cmp
das
fnstenv
lret
inc
or
addl
scas
into
cmc
xor
das
stos
or
mov
test
arpl
dec
pop
test
or
dec
cmpsl
sbb
in
popa
adc
mov
out
cli
fimull
sbb
xchg
mov
out
jb
add
stc
sub
shrb
fwait
push
sbb
or
or
adc
adc
movsb
outsl
int3
or
aad
xorl
mov
mov
repz
and
out
add
push
jge
stc
enter
sbbb
mov
xor
jmp
sar
xchg
xor
daa
idivl
aaa
loopne
mov
cmpsb
mov
test
inc
add
jl
adc
scas
loope
sbb
shll
push
fisttpl
and
push
and
xor
or
jecxz
dec
sub
inc
pop
or
mov
mov
sbb
mov
mov
xor
test
cld
out
pop
dec
ss
fs
jle
jle
hlt
pop
push
dec
out
mov
mov
inc
std
add
outsb
fnstcw
addl
icebp
jecxz
xlat
xchg
mov
cmp
jp
sub
or
and
ja
jge
inc
and
fdivrl
and
mov
lock
cmp
sbbl
jle
cltd
movsl
ss
mov
push
add
test
or
pushf
mov
xor
test
xchg
popf
outsb
aad
outsl
cld
pop
shr
jecxz
ja
dec
cmc
jg
hlt
imul
push
fcomps
inc
jne
cmp
dec
or
sub
scas
mov
push
test
add
mov
cli
insb
or
into
fmul
shl
gs
pusha
jbe
sti
aam
inc
pop
stos
mov
dec
lock
in
xor
aas
xchg
sbb
orb
push
jae
pusha
xchg
sbb
mov
mov
cmpsl
dec
sti
mov
push
ljmp
test
cmp
cmpsl
imul
sbb
aam
lods
xor
data16
lea
inc
mov
out
cmpsl
fimuls
arpl
push
push
xchg
xchg
stc
and
adcb
stos
dec
icebp
bound
shrb
pop
ror
xor
jae
out
add
sbb
int
xchg
jne
xchg
and
js
xor
das
xchg
les
aad
and
fwait
roll
mov
mov
rorl
sub
cmp
jns
dec
lds
jg
sub
push
fwait
movsb
rcr
push
pop
push
leave
push
sub
xor
push
add
mov
dec
inc
mov
in
cltd
push
call
punpcklbw
mov
pusha
ljmp
cwtl
fs
in
lea
inc
cmp
or
push
sub
sti
inc
mov
fidivl
test
test
mov
mov
lods
xlat
daa
hlt
mov
push
loop
sub
inc
iret
test
dec
cs
mov
cmc
xchg
xor
je
pop
test
imul
pop
mov
jns
notl
cmpsl
and
xor
push
scas
cmp
lds
push
jns
mov
pop
lock
out
loopne
mov
mov
out
mov
push
aad
cmp
pop
sbb
and
sti
aaa
sbb
xchg
insb
femms
dec
push
in
sbb
cli
mov
pop
fcmovne
imul
insl
mov
add
or
mov
push
fdivp
addr16
xchg
stc
xor
mov
std
sub
push
mov
mov
rcll
lahf
or
inc
lods
pop
rorb
push
mov
cmpsl
loop
rolb
loopne
xchg
shll
mov
pop
addb
inc
xor
sub
inc
sbb
xor
inc
addr16
in
cmp
pop
xchg
stos
inc
gs
inc
scas
push
xchg
repz
mov
and
or
dec
movsl
mov
cli
pop
push
sbb
fwait
iret
jmp
fldl2e
js
mov
ja
add
int
adc
mov
adc
sbb
test
xor
push
stos
std
cld
mov
scas
seta
rolb
in
xchg
jl
sub
std
mov
mov
mov
cmp
out
push
pop
imul
test
sub
into
pop
std
xchg
rcll
movsl
gs
mov
test
mov
flds
jmp
push
mov
mov
das
dec
data16
inc
aam
or
inc
daa
insb
xchg
inc
jns
xchg
inc
lods
sbb
xor
dec
adc
mov
xor
stos
push
mov
xchg
into
cmpsl
or
and
mov
icebp
sub
push
rcrl
out
es
mov
into
lods
gs
inc
lahf
push
in
adc
mov
cmp
sub
sub
jno
lret
dec
push
arpl
pop
fldenv
xchg
imul
xlat
mov
je
inc
sub
lahf
and
in
ljmp
sarl
scas
pop
pop
iret
xchg
es
rol
mov
lock
aaa
insl
mov
jne
ljmp
add
lods
cmp
das
insl
stos
movsb
push
into
mov
loop
or
test
or
add
hlt
mov
clc
fadds
ret
cmp
popa
add
mov
or
inc
sub
fcompl
and
and
popa
xchg
adc
bound
ror
fimull
repz
cmpsl
cld
mov
iret
rcl
xor
in
lret
jge
js
adcb
inc
xor
or
fcompl
sub
leave
lods
mov
andl
test
push
jnp
dec
scas
and
cmp
je
in
ret
mov
mov
aad
mov
mov
mov
cmp
sbb
cwtl
enter
sbb
xor
dec
mov
adc
cmp
jl
and
fidivrs
mov
lret
pop
jecxz
mov
sti
sbb
ljmp
dec
outsb
xchg
pushf
jne
xrelease
jp
sbb
add
or
enter
push
pop
xchg
cs
test
test
mov
xchg
xchg
cwtl
loop,pt
in
adc
mov
scas
shll
xchg
jg
bound
xchg
add
or
fidivrs
inc
lea
inc
mov
or
xor
pop
mov
loopne
and
lea
push
fidivrl
jb
mov
cmp
mov
shlb
sub
xchg
xchg
sub
cmpsl
dec
adc
adc
mov
fs
jbe
mov
jo
adc
repz
jmp
leave
add
jg
sti
cs
jg
sub
movsl
jl
scas
or
je
fcmovnu
leave
add
sahf
iret
push
jns
ror
adc
cs
ss
cmpsb
and
jmp
sub
fs
fcmovnb
push
je
jge
mov
or
in
mov
stc
ss
add
jle
ja
adc
jg
ds
add
jmp
leave
dec
add
push
sub
aas
jo,pn
cmp
pop
shlb
out
fwait
mov
ret
jnp
rcrb
jmp
outsb
testl
mov
xor
fldt
outsl
int3
inc
andb
pusha
or
fstpt
xchg
sbb
mov
jae
inc
cmpsb
and
idivl
test
cmp
mov
sub
test
enter
nop
pop
jbe
adc
cmpsb
sbb
sahf
imul
flds
or
sbb
fldcw
jns
rolb
loopne
rol
icebp
fldenv
daa
insb
idiv
jno
jnp
dec
dec
and
mov
loope
out
mov
mov
mov
inc
sub
push
push
adc
dec
jmp
test
mov
data16
call
imul
add
push
sub
pop
cmpsb
loopne
and
int3
stc
mov
das
xchg
in
stos
jo
inc
andl
sbb
js
add
mov
fwait
pushf
pcmpgtw
add
loop
out
mov
dec
subl
pop
mov
cmpsl
push
test
aas
scas
mov
out
inc
push
pop
fistl
jns
mov
and
xrelease
fsub
lret
es
call
mov
test
ja
cmp
pop
jbe
ret
sbb
scas
ja
lods
mov
dec
jl
mov
rorl
pmulhw
mov
xor
scas
mov
or
sub
sub
pushf
and
aad
or
sti
aas
push
inc
push
sub
sbb
mov
stos
mov
cmp
cmp
xor
jno
mov
ljmp
hlt
cmp
mov
inc
sbb
mov
rcll
push
shl
ja
cmovno
popf
mov
sbb
aas
adc
arpl
cmp
add
pop
fs
mov
adc
stos
cmp
sbb
add
adc
aad
xchg
mov
push
or
dec
subl
mov
in
push
into
es
insb
cmp
mov
mov
insb
mov
dec
in
add
mov
cmp
clc
cwtl
popa
sub
stos
std
into
jbe
movsb
xlat
loope
aaa
sbb
pop
dec
push
mov
mov
inc
addr16
mov
push
in
cs
and
sub
push
sub
cld
psllq
in
or
and
dec
cmp
pop
loopne
inc
rol
dec
pop
movsl
xchg
rcl
bound
push
push
inc
xor
aam
std
inc
and
insb
sub
in
cmpsb
xlat
ret
repnz
call
cmp
insb
aam
and
int
jb
cmp
push
cmp
fisttpll
inc
cmp
jecxz
jle
push
mov
adcb
mov
test
mov
mov
sub
push
and
dec
mov
int
aaa
repz
hlt
negl
mov
or
repz
test
outsb
sbb
ja
in
inc
daa
xor
sbb
mov
add
inc
push
jnp
add
repz
jns,pn
mov
cmp
cwtl
and
sub
shl
sbb
mov
push
jg
mov
or
and
inc
mov
cmp
gs
jg
lods
dec
cmp
or
call
adc
add
xor
gs
loope
movsb
xorb
adc
mov
or
sbb
stos
data16
ja
repnz
push
jnp
mov
xchg
stc
pushf
lock
mov
xchg
lock
in
addr16
jmp
cmp
dec
popf
dec
stos
cmp
fidivrs
sbb
dec
rcll
dec
pop
lret
sbb
cmp
pop
dec
xor
lock
mov
rcll
xor
mov
popf
dec
pop
and
sub
jecxz
pop
inc
add
sub
std
mov
inc
cmpsb
add
push
out
in
data16
fists
xchg
xor
jnp
dec
lock
mov
test
sbb
jns
dec
aaa
jl
mov
inc
mov
pop
ficoms
clc
or
dec
lods
lret
sti
sbb
mov
addr16
adc
xchg
lret
hlt
call
test
push
fs
push
push
test
loop
imul
scas
std
adc
mov
jno
adc
loop
movsl
neg
inc
in
push
push
xor
mov
nop
icebp
dec
shlb
paddw
outsl
insl
jnp
cld
fimuls
nop
push
scas
aad
data16
jmp
lret
mov
xor
stos
fistl
test
push
test
addl
mov
xor
popf
mov
popf
and
jg
repz
push
push
out
ret
sub
mov
leave
xchg
jle
in
mov
cmp
add
pop
repnz
scas
mov
or
mov
mov
mov
jb
xor
xchg
jae
ret
lahf
ret
jmp
add
mov
push
dec
and
pop
div
mov
sbb
fucomip
ret
or
pop
xlat
aam
inc
mov
dec
popa
inc
or
ds
pop
fistl
shll
fnstenv
sbb
push
rcrl
mov
sub
jmp
out
mov
pop
sbb
push
fstl
dec
repz
das
idiv
filds
jle
cmc
mov
push
test
lods
popf
xchg
and
jg
dec
dec
pop
adc
inc
inc
xor
insl
ret
jno
cli
rcrl
mov
scas
xchg
arpl
aaa
dec
cld
cmpsb
aas
xchg
mov
mov
mov
dec
inc
call
mov
divl
movsl
inc
and
and
dec
mov
jnp
ficoms
xor
jge
stos
pop
xor
scas
jae
lcall
push
in
loope
and
inc
testb
push
mov
pop
loope
adc
lahf
sbb
and
jmp
pop
cwtl
jnp
cmc
mov
in
xchg
push
pop
test
out
iret
leave
xlat
jl
fdivl
aaa
and
mov
and
xchg
mov
xchg
and
ds
pop
sahf
xchg
mov
js
mov
fldcw
adc
leave
popf
insb
arpl
mov
mov
loopne
das
push
xor
rsqrtps
mov
data16
mov
add
adc
pop
adc
scas
insl
inc
cmp
xchg
into
in
bound
jge
cmc
les
shlb
push
sbb
imul
insb
cmp
mov
cmpsl
dec
popf
es
and
rorl
pop
sti
jl
clc
sub
in
sub
sar
inc
sub
inc
lock
test
in
dec
mov
jb
repnz
mov
repnz
sub
les
or
adcl
or
and
shr
into
inc
lods
imul
daa
fiaddl
inc
adc
cwtl
ds
sahf
insb
ljmp
call
cmp
outsl
stc
clc
cmp
arpl
adc
repz
test
out
pop
lods
inc
lea
ret
das
aam
popf
xchg
jno
xor
std
cld
sbb
lods
lods
in
inc
and
sub
out
scas
cmp
xchg
xchg
dec
sahf
pop
sub
jge
shlb
mov
stos
mov
loope
xchg
lea
pop
ret
or
sub
nop
rcrl
mov
mov
or
add
cmpsl
xchg
push
pusha
adc
inc
xchg
add
flds
enter
lea
sub
cmp
adc
push
lcall
push
and
and
les
and
mov
out
inc
mov
sbb
push
cmc
das
fildll
sub
pop
pop
int
lds
das
pop
xor
out
rcr
jecxz
fmuls
mov
pop
insb
imul
jmp
les
call
fimuls
xor
gs
inc
sub
xor
addb
add
push
fidivrl
push
setg
sar
push
add
sbb
push
aam
in
cmpsl
iret
add
fildl
int3
xchg
in
sbb
ja
cmc
test
pop
push
sub
pop
jno
outsl
stos
ret
jnp
cmp
cmpsl
push
xchg
popa
in
fwait
clc
push
add
inc
cli
mov
stc
and
not
push
sbb
stos
sti
push
jmp
and
hlt
mov
dec
iret
and
dec
inc
clc
push
daa
mov
sbb
nop
mov
stos
pop
scas
push
xor
aam
imul
mov
cmpsl
les
int
insb
bnd
cmpsb
add
mov
inc
adc
lret
test
push
cmp
outsb
inc
mov
jmp
sbb
out
cmc
out
mov
sbb
ljmp
out
mov
rolb
out
mov
bound
dec
adc
insb
mov
and
lcall
sub
test
or
inc
or
inc
sahf
sbb
inc
inc
loop
jne
jmp
pop
scas
push
mov
repz
gs
cmp
xchg
or
or
fldenv
movsb
aas
inc
lcall
jne
cwtl
lock
hlt
pushl
psrld
test
jno
arpl
cmpsb
shll
dec
or
push
fs
dec
adc
repnz
dec
jns
dec
arpl
mov
cmp
mov
stos
inc
jg
cltd
jle
xor
add
cmpsl
sti
pop
pop
fucomi
mov
aaa
or
adc
push
rcrl
addb
in
xchg
test
popf
mov
rcll
sti
cmp
repnz
jb
xchg
in
and
movsl
callw
push
test
and
fdivr
jl
push
jns
sub
xchg
cld
mov
dec
aaa
fs
mov
cmc
mov
push
mov
push
es
icebp
test
lock
jl
jmp
test
popa
mov
iret
push
mov
lods
push
and
and
scas
mov
adc
or
adc
ror
je
xchg
repnz
jnp
sub
mov
ja
dec
dec
sub
arpl
int3
push
pusha
mov
inc
mov
lret
sub
repz
jb
jecxz
test
fidivl
out
aas
pop
ds
scas
mov
shl
dec
stos
jl
mov
cltd
or
xor
jl
cmp
cwtl
bound
sti
jge
sub
cmp
jle
aad
push
cmp
push
pop
sbb
dec
mov
cmp
or
xchg
mov
movsb
in
bound
and
leave
imul
jns
cs
fs
sbb
pop
cmpsl
dec
lret
add
inc
imul
stos
mov
add
fldl
scas
ljmp
cld
inc
mov
mov
jno
push
loop
and
or
je
loope
lea
push
or
testl
sahf
outsl
pushf
aam
cmpsl
fisubs
sbb
js
cmpl
jge
les
pop
or
lret
nop
outsl
push
cmc
pop
push
xor
jns
stos
js
frstor
mov
sbb
nop
lret
push
dec
add
shrl
data16
aam
rcl
outsb
subb
into
call
ror
push
aad
pop
xor
pop
jecxz
je
sahf
addr16
sbb
cmp
dec
mov
mov
xchg
insb
jnp
jb
push
loop
je
jge
xor
scas
cmc
pusha
fidivl
mov
inc
cwtl
jmp
dec
in
out
pop
daa
out
movsb
insb
cmp
pusha
fmull
bound
xor
and
movsl
clc
lret
xchg
aam
fwait
or
pop
shrb
mov
lods
fidivs
insl
out
add
mov
clc
outsl
sub
jmp
xchg
dec
neg
cmc
lahf
std
xor
dec
mov
cmp
aad
les
jb
lods
push
mov
divb
jp
mov
rcr
leave
push
pop
ficompl
cmc
cmp
push
div
lods
lods
ret
xchg
add
fstp
or
shl
and
adc
mov
adc
imul
mov
and
call
outsl
pop
push
sub
push
jnp
add
pop
movsl
scas
pop
hlt
fidivrs
sbb
mov
sbb
xchg
and
out
lods
dec
ret
mov
data16
scas
int
lods
loope
sbb
sahf
mov
test
add
lea
cwtl
aam
cmpsb
xchg
fdivl
mov
adc
and
sbb
sub
adc
imul
sbb
sbbb
xor
xor
testl
jp
mov
popl
movsl
mov
xor
ljmp
leave
rorb
dec
outsl
cmc
sbb
aad
mov
mov
push
out
jp
pop
inc
fcmovne
jg
xor
add
push
aas
fs
fiadds
outsb
sbb
adc
insb
dec
into
mov
adc
lds
enter
icebp
rcrb
mov
aam
lcall
mov
adc
jg
and
and
and
mov
and
cmpsl
jno
stos
xor
and
xchg
or
sbbb
xchg
imul
jae
divb
mov
lods
and
push
add
ds
out
cmp
loope
pop
mov
mov
call
mov
je
push
jno
lods
add
cmp
out
cmp
jge
dec
repnz
fmuls
or
inc
mov
fnsave
or
mov
punpcklbw
dec
js
mov
ret
enter
sub
jle
jle
pop
jl
addb
mov
lods
subl
xchg
sub
hlt
je
ljmp
sub
cli
or
mov
xchg
lcall
enter
sub
adc
cmp
cmp
les
jae
in
sbb
lods
movsl
mov
push
jle
test
rorl
in
int
jne
aad
addr16
xchg
loopne
sti
push
shl
add
cmpsl
cmp
outsb
pop
imul
push
dec
mov
outsb
pop
and
sarb
xchg
xor
push
cmp
in
xchg
mov
cmp
pusha
push
nop
inc
out
push
out
stos
inc
fcomip
das
out
and
outsl
xchg
mov
rcrb
rcrl
mov
sub
pop
pop
xor
rcl
push
sbb
sub
pop
insb
fisttps
sbb
loopne
fadd
dec
jne
cwtl
pop
dec
jo
mov
gs
mov
sub
lds
sub
adc
insb
and
mov
cwtl
shll
js
aad
aam
mov
sar
test
insb
push
push
pop
mov
inc
hlt
repz
bound
ss
pusha
fsts
ja
fcomip
daa
scas
cmp
test
in
cld
stos
push
outsb
leave
and
push
js
cmp
ret
clc
stos
jne
std
cli
push
je
call
fbstp
inc
adc
push
and
xor
pop
dec
daa
loop
adc
inc
dec
or
mov
outsl
lcall
negl
shrl
jno
jp
andb
data16
jns
rol
roll
pop
cmpsl
repz
xchg
shlb
fsubrs
jmp
stos
out
or
loope
pop
push
leave
fwait
cli
addr16
mov
iret
xor
push
mov
into
test
pop
into
dec
fisubrs
pop
mov
and
xchg
pop
enter
stos
inc
scas
lods
push
movsb
sbb
ret
or
in
sub
in
push
pop
or
xorb
pop
popa
jae
mov
cmp
and
incl
ja
arpl
mov
mov
jl
cli
dec
loop
push
mov
ffree
lods
ljmp
subb
loop
test
ror
iret
enter
xor
mov
ljmp
fldcw
push
mov
jns
in
movsl
cmp
leave
inc
loope
xchg
mov
imul
in
std
mov
int3
mov
xchg
hlt
mov
cwtl
and
cwtl
out
dec
push
sbb
jecxz
or
pop
sbb
adc
ljmp
cmp
test
cmp
lret
push
jl
sub
xor
dec
ret
mov
adc
xorl
das
adc
or
xchg
sti
pop
push
repz
stos
ljmp
fs
cmp
repnz
leave
loope
mov
jne
mov
or
xchg
ret
enter
por
sbb
dec
loope
movsl
ds
push
push
aas
add
adc
mov
sbb
aaa
fs
adc
xor
cmp
ret
daa
pop
out
inc
out
adc
xchg
int
xor
in
jge
out
jecxz
dec
enter
fistpll
sub
mov
ret
ds
mov
outsl
sbb
shrb
or
into
dec
sbb
shlb
cmp
mov
mov
ret
xchg
jmp
and
in
mov
dec
ret
leave
inc
sbb
or
addb
mov
mov
xchg
xchg
mov
adc
movl
pop
inc
xchg
cmp
mov
push
push
xchg
mov
iret
jle
loope
inc
loop
add
sahf
xchg
iret
jae
fisttpll
inc
pop
std
pop
adc
mov
xor
push
stc
cmc
mov
dec
cmc
push
jae
xchg
cmp
sbb
sub
sub
sbb
fsubl
or
or
mov
xor
loope
sbb
pop
in
ds
push
jae
imul
pop
pop
mov
fisubl
push
sub
or
inc
jbe
jp
cmp
in
insl
push
jp
inc
mov
xor
adc
int
cmp
mov
jno
test
push
fbstp
or
imul
insl
pop
lea
fsubrp
dec
xchg
mov
call
jo
sarl
or
movsb
or
cltd
lret
jb
iret
adc
subb
cld
sub
sarb
xor
call
clc
jl
adc
lock
pop
dec
and
add
xor
mov
dec
sub
das
mov
mov
dec
sub
cmp
jg
xchg
in
sbb
pop
loop
mov
sbb
les
ds
in
xchg
imul
jns
add
jl
mov
insb
jno
lea
jo
out
jg
or
and
sbb
sbb
out
icebp
in
test
leave
test
cltd
mov
cltd
push
inc
add
movsl
test
sub
dec
out
mov
test
mov
mov
mov
add
rcr
sbb
jno
mov
sub
bound
cs
test
add
lds
aaa
adc
or
ds
or
adc
fs
xchg
loope
jecxz
sbb
js
jle
sub
sub
mov
add
push
sub
gs
cltd
inc
loop
rorb
pop
into
jae
jne
shrl
rolb
outsl
jge
cmp
leave
or
imulb
or
test
fwait
adcl
test
xor
repz
adc
dec
out
in
mov
sti
jmp
outsl
and
push
loop
cltd
adc
ret
lods
cmp
add
cmpb
push
push
lret
push
xchg
lods
inc
out
xchg
cmp
and
pushl
sbb
lret
dec
into
add
and
dec
mov
mov
fnsave
imul
push
xor
xchg
cmpsb
push
add
or
pop
outsl
mov
fucomi
lcall
sbb
xor
mov
sarl
pop
add
int3
xchg
xchg
and
mov
sbb
in
out
mov
outsl
loope
rcl
into
push
add
cmp
fisubrl
dec
test
sbbb
add
insl
adc
orl
popa
add
xchg
inc
and
testl
dec
hlt
sbb
xchg
fisubrl
mov
std
sbb
mov
sub
pop
sahf
adc
into
iret
fisubs
ss
push
test
mov
ds
and
or
push
cmp
inc
and
pop
out
fdivrp
shlb
or
mov
push
push
cmpsl
stc
mov
jae
cmp
mov
les
or
adc
stc
mov
pop
out
push
adcb
arpl
je
or
enter
xchg
outsb
sub
in
test
add
mov
push
jb
cmc
or
push
bound
mov
cmc
xor
lahf
and
mov
push
push
add
mov
mov
inc
sub
push
pop
push
xchg
dec
sti
push
fistpl
mov
jg
and
mov
lret
sbb
mov
leave
movsb
das
dec
enter
aas
aad
add
scas
mov
push
and
pop
out
push
stc
scas
aad
sahf
into
pop
hlt
mov
sbb
xlat
sub
lret
stos
hlt
pop
aas
ljmp
addb
aaa
jmp
cmc
mov
sub
push
mov
ds
mov
int3
adc
pushf
and
xchg
arpl
dec
mov
xor
or
lahf
scas
mov
adc
fwait
test
jne
dec
inc
mov
jbe
testl
rclb
insb
nop
test
fistl
aad
fmull
jg
pop
adc
jb
in
push
jge
adc
mov
mov
cmp
lret
adc
pop
dec
scas
push
inc
and
ds
in
lret
sub
mov
shlb
dec
sbbl
mov
mov
xchg
pop
and
lret
xchg
xor
daa
fwait
out
into
subl
dec
es
shll
test
and
in
pop
or
fimuls
out
inc
add
arpl
test
and
loop
jmp
out
push
xor
pop
adc
mov
subb
stos
ljmp
ljmp
mov
divb
add
loop
not
cld
add
jle
lahf
cmp
ficoml
push
inc
jg
data16
dec
cmp
lahf
insb
inc
out
cmp
push
lret
loopne
ljmp
xchg
repnz
dec
xchg
mov
adc
or
lds
stc
xchg
xchg
enter
adc
popa
inc
sbb
jg
js
cmpsb
testl
inc
ret
mov
andl
lock
mov
fdivl
lods
mov
sbb
int3
sahf
test
arpl
shrb
and
mov
sub
push
cmc
xor
lea
jno
out
mov
imul
rcrb
or
pop
shr
sub
test
scas
add
dec
arpl
mov
leave
das
popa
fistps
xchg
jnp
and
js
test
fisttpll
jbe
dec
cmp
or
mov
daa
dec
sub
add
es
mov
in
sbb
cs
adc
mov
aaa
sub
xchg
rol
ss
in
cmp
pop
pop
lods
je
daa
sub
iret
ret
mov
pop
push
push
lret
std
jnp
dec
loop
inc
mov
mov
add
dec
mov
sarl
stc
jle
pop
leave
in
sub
push
xchg
or
sahf
sbb
push
bound
stos
popf
pop
pop
mov
push
or
test
mov
fsubr
xor
xchg
inc
or
add
test
dec
test
aad
bnd
out
cmpsl
sbb
jl
sarl
cmpsb
add
popf
arpl
adc
mov
add
pop
xchg
sub
lret
add
mov
cs
mov
ja
test
loopne
faddp
movsl
cmp
xorb
cld
and
jg
mov
add
lock
data16
push
mov
dec
and
sub
mov
clc
sub
cs
call
scas
pop
ljmp
hlt
incl
outsl
jnp
pop
scas
push
push
js
pop
repnz
mov
paddusb
mov
and
mov
loopne
outsl
jne
push
cli
insl
inc
clc
mov
jo
jo
xor
in
push
or
outsl
mov
xor
mov
jb
stos
lret
jb
loopne
call
ret
xchg
lea
in
loope
mov
sbb
imul
mov
fstpt
outsb
push
gs
rcrb
or
adc
push
stos
sub
jle
fcomps
lods
push
addr16
iret
ljmp
fwait
dec
push
and
lods
cmp
dec
pop
xor
sub
int
adc
and
and
sbb
mov
mov
mov
addb
push
nop
or
jle
cltd
lods
aaa
fsts
lods
bound
fsubs
lret
mov
std
inc
pop
cmc
idivb
std
sbb
pop
in
dec
mov
aam
adc
sbb
stc
push
sbb
xchg
das
filds
aas
xchg
adc
out
scas
ficomps
or
cs
dec
lret
stos
scas
loope
inc
pop
stc
push
scas
cli
jp
ss
fcmovb
addr16
les
rcr
jne
ja
iret
adc
inc
push
sbb
lock
push
inc
and
dec
loop
cmpsl
icebp
bound
int
sbb
xchg
add
xchg
fdivrp
pop
add
leave
out
add
out
push
inc
inc
dec
addr16
dec
xor
adc
xor
pop
mov
and
inc
mov
push
xchg
inc
imul
cmp
xchg
ficompl
enter
fisubs
cmp
pop
mov
ss
xlat
push
lods
xor
cmpsb
shl
mov
pop
xchg
scas
pop
inc
ret
add
in
in
jb
cmpl
jne
lahf
imul
xchg
cmpsl
test
lds
add
je
and
out
sbb
ss
fsubrl
sub
xchg
insl
xchg
cmp
rol
jae
sub
jae
ss
clc
xor
cmp
adc
sbb
pop
ljmp
sub
jns
lods
adc
scas
cmp
movsb
lahf
mov
ds
cwtl
inc
mov
jp
call
rcrb
inc
cli
sub
xchg
jle
pop
jmp
stc
jl
out
cli
rorb
shrb
je
testb
lret
cli
fimuls
cli
data16
inc
cmp
lock
mov
push
lret
mov
dec
and
out
aaa
aam
jmp
out
jb
mov
adc
adc
lods
sti
xor
xchg
adc
ret
daa
sbb
pushf
pop
aas
imul
push
pop
jns
sub
mov
imull
test
mov
sbb
movsb
pop
call
call
enter
bswap
scas
subb
pop
mov
int
jmp
mov
movsl
cmp
notl
push
aam
push
lea
daa
xor
mov
bound
adcl
out
sbb
sub
push
out
lods
and
push
xor
adc
js
shlb
and
aaa
push
push
sub
mov
push
fistpll
jns
int
lahf
xor
stos
cmp
mov
dec
sbb
fnstenv
add
jmp
mov
jp
mov
lret
clc
mov
xchg
mov
cmp
iret
outsb
int3
cmpsb
mov
testl
lock
push
cmp
push
ds
add
xchg
sub
push
xchg
addr16
xor
inc
enter
pop
mov
sbb
mov
mov
fistpl
mov
pop
out
bound
sbb
jecxz
insl
sbb
dec
sub
sbb
lds
fsubl
imul
aaa
push
pop
fstpt
push
mov
mov
pop
sbb
cmp
in
and
ja
jo
lret
jge
mov
gs
pop
jle
pushf
xchg
ljmp
cli
push
stc
push
jne
call
or
int
out
shlb
add
adcb
lds
outsb
mov
lahf
iret
push
sbb
sbb
pusha
add
cs
add
lods
pop
loop
bound
cwtl
je
outsl
mov
call
push
sub
mov
lcall
pop
xlat
or
and
aas
loop
in
insl
lret
shll
scas
es
or
fcompl
in
mov
inc
cmovl
xor
dec
movsl
mov
test
cmp
pop
dec
test
cmpsl
mov
scas
adc
movsb
dec
dec
stc
sub
icebp
daa
add
fsincos
ss
mov
inc
fldenv
mov
aaa
push
fcoml
mov
data16
es
adc
and
add
cwtl
inc
shll
imul
xor
push
mov
jns
aas
xchg
divl
mov
sub
add
mov
push
push
cmpsb
jge
mov
fildll
lods
lock
sbb
inc
std
cmp
and
lds
mov
inc
mov
jmp
iret
sub
enter
aam
mov
repz
lock
out
jge
xlat
int3
aad
jns
jno
xchg
outsb
fwait
push
add
lods
nop
dec
insl
mov
sti
jb
inc
jg
iret
stos
loope
int3
mov
dec
movsl
cmp
ss
ret
clc
mov
sub
fnstenv
rolb
jb
mov
dec
sub
add
mov
pop
xchg
dec
fisubrl
and
add
xlat
fldl
cmp
mull
cmp
fidivrs
in
pusha
leave
aad
jne
mov
mov
xor
jecxz
cmp
and
sub
jp
or
mov
cltd
les
mov
mov
mov
pop
js
push
mov
aas
scas
mov
and
pushf
push
aaa
inc
cli
adc
mov
xor
push
pop
nop
dec
jecxz
inc
mov
push
mov
ss
outsb
xor
in
push
push
enter
pushf
and
push
sbb
xchg
adc
and
and
xor
push
pushf
dec
mov
addl
jp
popw
dec
dec
pop
and
ljmp
xchg
and
loop
out
call
cmp
out
enter
and
fwait
je
pushf
seta
ret
incl
lods
and
push
nop
xor
inc
int
int3
mov
push
xchg
hlt
stos
mov
mov
jns
lea
lods
rcll
push
mov
lahf
gs
enter
dec
xchg
addr16
fwait
nop
jmp
aaa
fwait
dec
popf
push
cs
rorb
mov
push
cs
add
into
test
and
cmp
icebp
data16
mov
xor
xlat
inc
dec
cmp
and
ljmp
sbb
sub
or
ljmp
scas
and
shl
and
jge
es
mov
arpl
imul
mov
mov
insl
insl
outsl
mov
adc
adc
pop
or
dec
outsb
test
in
add
mov
loop
cmp
dec
adc
mov
xchg
imul
int3
inc
int3
sbb
sbb
pop
jl
sbb
sbb
shll
pop
pop
cld
pop
jmp
add
daa
push
cs
adc
push
pushf
or
or
jo
pusha
movsl
jns
fadds
sub
pop
xor
xor
jle
shrb
dec
stc
dec
out
in
mov
adc
arpl
ds
sbb
enter
mul
cmp
in
add
fdiv
mov
cwtl
jnp
pop
imul
and
mov
clc
les
mov
scas
ret
push
out
out
stc
in
jmp
daa
lods
sub
das
scas
jmp
mov
fucomp
cwtl
cmp
mov
les
scas
es
fs
cwtl
jmp
xchg
shrl
pop
ljmp
int
insb
mov
mov
fsts
jb
dec
iret
xor
jl
xchg
or
repz
dec
adc
dec
movb
lahf
inc
mov
mov
add
cld
cmp
shrl
cmp
mov
out
push
movsl
dec
rorb
lcall
test
or
mov
xor
xor
sbb
imul
add
movsl
setge
out
fcomps
inc
cld
fistpll
jg
pop
mov
pop
jp
cmp
aaa
or
es
adc
dec
mov
jb
lcall
imul
xor
xlat
jmp
mov
push
loop
mov
jg
les
fists
add
jae,pt
ss
cmp
lcall
inc
lock
xchg
cmp
dec
icebp
mov
aaa
stos
movsl
or
mov
lds
ja
or
stc
enter
mov
or
repnz
dec
and
push
pop
cmp
mov
clc
push
js
jae
sub
sbb
cli
push
ret
je
fildll
addb
sbb
jecxz
leave
or
or
dec
or
cmp
push
dec
xor
mov
jecxz
and
mov
clc
mov
dec
mov
jb
in
hlt
add
cmp
sub
pushf
aad
cld
stos
cmp
mov
ds
shrb
sbb
push
loopne
sbb
jg
xor
add
inc
adc
nop
in
lea
jnp
mov
rcll
dec
sbb
test
aaa
iret
xchg
out
clc
repnz
add
lds
cli
mov
sub
jmp
loop
jg
jge
pop
push
repz
in
popf
lret
xchg
clc
adc
push
dec
push
jno
clc
imul
push
fs
js
cmp
jo
push
mov
sahf
das
mov
imul
adc
cld
xchg
push
mov
push
push
in
cs
cli
xor
push
inc
mov
cmpsl
mov
push
and
popf
bound
mov
add
xor
loope
cs
xchg
mov
out
fdivl
in
mov
lcall
ljmp
mov
add
scas
das
jmp
push
sbb
mov
aam
lret
mov
and
inc
sarb
addb
or
call
rcrb
dec
inc
stos
in
shr
fwait
add
sub
cmp
inc
stc
cmpsb
popf
leave
sti
pop
mov
outsl
mov
sahf
in
inc
xor
xchg
xor
xchg
add
scas
or
inc
aad
dec
clc
or
xchg
inc
ficoms
pop
push
fstps
xchg
cmp
ss
gs
out
sbb
insb
movsl
ljmp
sbb
ficoml
mov
fsubrl
loopne
popaw
clc
sub
inc
aad
cmp
imul
es
pop
es
ja
pusha
push
fwait
jnp
mov
pushf
sub
inc
sub
xchg
sbb
sbb
dec
imul
push
stc
loop
and
cmp
mov
aaa
mov
jmp
adc
mov
shlb
ret
add
inc
ret
bound
cwtl
jmp
adc
jge
mov
push
or
pop
mov
jg
sbbl
lret
daa
enter
rorl
jb
push
repz
pop
adc
jo
nop
or
in
repz
dec
in
or
cmpsb
mov
loop
out
fsts
mov
fimull
test
adc
lods
mov
lock
fidivrs
mov
mov
nop
iret
scas
lcall
jo
add
pop
mov
and
adc
ficompl
mov
xlat
insb
mov
mov
sub
mov
call
sub
sti
rol
movsb
inc
cltd
push
cmc
inc
outsl
pop
test
xchg
cli
ljmp
movsl
stos
xchg
push
cmp
cmp
adc
xchg
cmpl
cmp
pop
cmp
in
lods
push
outsl
add
mov
aaa
ss
xchg
mov
sti
or
xchg
inc
loope
cmp
cmp
jmp
mov
xchg
jns
les
dec
xor
xchg
lods
xlat
xchg
xchg
lahf
subb
jmp
jecxz
pop
lret
mov
jge
lea
and
inc
mov
pusha
aad
aam
fstpt
sub
add
lods
pop
jns
test
dec
sbb
xchg
cmp
scas
btr
ret
notb
pop
mov
in
or
mov
pop
das
inc
sbb
movsl
pop
nop
jg
sub
or
in
inc
pop
dec
pop
dec
pop
push
or
pop
push
sbb
fdivrs
sbb
mov
sbb
and
imul
in
nop
mov
lock
fcompl
mov
sub
insl
xor
sbb
push
sbb
inc
sbb
xchg
mov
mov
pop
jmp
cmp
hlt
push
sbb
in
cli
test
mov
cmp
js
mov
outsb
mov
enter
dec
dec
ds
shr
xor
out
xor
mov
push
mov
adc
adcl
mov
sub
mov
cmp
sub
inc
sbb
pop
xor
xor
push
mov
pop
xlat
cmp
pop
test
add
mov
repnz
mov
imul
mov
test
and
mov
sahf
es
in
shl
jg
pop
jo
mov
adc
ljmp
push
and
jae
movsl
daa
xchg
jecxz
xorb
cmpsl
xor
lcall
pop
mov
mov
popl
and
into
push
cs
cmp
aaa
cmp
mov
xor
mov
sarb
push
aam
test
rolb
xchg
push
pop
inc
enter
inc
ss
push
movsl
cmp
push
or
mov
es
cwtl
out
mov
jns
xor
mov
fnstsw
cltd
sub
mov
repz
push
sbb
mov
add
leave
push
je
cmp
cmp
popf
sbb
out
jmp
xor
leave
mov
mov
push
test
hlt
fidivs
cmp
cpuid
pop
dec
push
dec
test
cmp
sub
or
pop
jge
popa
adc
and
in
jno
sbb
inc
js
dec
mov
pusha
mov
aas
push
push
fsqrt
test
mov
mov
and
icebp
inc
out
stc
xchg
pop
sti
pop
push
scas
jbe
fcoms
clc
loope
dec
sahf
lahf
sbb
and
mov
and
or
movsl
daa
call
fistps
xchg
mov
stos
enter
shrb
insb
ret
shl
out
add
mov
cmp
inc
pusha
ljmp
aam
imul
clc
subl
cmc
pusha
in
insl
out
lcall
loop
cld
mov
iret
xor
pushf
or
mov
ss
orl
sbb
addr16
mov
sbb
pop
pop
das
js
fcmovne
ret
mov
jb
in
je
dec
sub
stos
jo
sbb
fs
js
das
cld
arpl
sbb
ret
and
or
leave
fxch
push
cltd
jle
push
cltd
jp
and
mov
fdivp
jmp
imul
dec
insb
mov
sub
inc
lret
fnstenv
jo
sub
out
rcl
jbe
lret
int
adc
pop
outsb
popl
nop
sarl
cmp
jne
mov
xchg
into
loope
xchg
mov
sub
ja
adc
pmaxub
adc
cmp
or
clc
xchg
decb
cmpb
mov
sahf
out
ja
mov
icebp
mov
jl
sbb
xchg
data16
sbb
mov
mov
cltd
fst
xchg
and
jne
jno
mov
xchg
mov
mov
rclb
clc
cltd
sbb
mov
xchg
mov
rolb
push
add
dec
push
and
shrl
lret
jne
add
xor
test
arpl
inc
inc
xlat
adc
push
iret
and
xor
jbe
nop
xchg
lcall
idivb
mov
adc
enter
inc
xor
cltd
lods
or
pop
int3
dec
stos
jae
cmp
mov
fdivrs
and
push
cmp
push
mov
mov
repz
jmp
lods
test
xlat
nop
add
sahf
mov
sysret
out
lds
movsb
cld
sbb
mov
and
roll
jae
fisubs
pushf
xorb
mov
das
sub
xor
mov
leave
decb
jno
or
inc
imul
jl
inc
sti
loop
stos
jo
cmpsb
je
fisubl
lahf
rol
sbb
dec
or
lcall
hlt
sub
jecxz
out
adc
pop
cltd
int
pop
movsl
shrl
addr16
xor
xchg
adc
enter
xor
or
ss
mov
mov
sbb
dec
insl
pop
lock
aaa
je
and
in
insl
mov
or
rcrb
inc
jecxz
loop
mov
cmc
imul
ficoml
fsubrl
negb
loopne
inc
mov
cs
cwtl
les
stos
fnstenv
jmp
clc
or
mov
sbb
insb
xor
sub
cs
xchg
inc
sti
ret
xchg
and
pop
stc
decb
inc
scas
loopne
mov
out
dec
int3
push
cmp
cmp
adc
loop
and
pop
xchg
sarl
xor
mov
push
dec
aas
cld
add
sbb
add
stc
mov
insl
push
mov
movsl
and
jecxz
push
adc
jns
ss
xchg
in
or
push
dec
call
push
dec
adc
and
jnp
cmp
rclb
jnp
lock
repnz
data16
loopne
mov
fsubl
adc
adc
push
shrw
pop
jbe
enter
inc
add
fisubrl
daa
adc
mov
mov
add
cmp
cmp
add
sbb
mov
mov
mov
pop
fistl
inc
inc
sarl
daa
inc
in
fdivs
int3
shl
adc
mov
iret
mov
test
inc
fcomps
xor
fldt
pop
fwait
jo
test
xlat
dec
lahf
and
fldcw
addr16
pop
jne
sub
inc
sahf
dec
mov
lods
mov
cmpsl
mov
mov
ds
test
inc
cwtl
and
test
mov
jno
push
ret
and
lcall
xchg
adc
mov
and
shrb
pop
hlt
dec
xchg
dec
mov
loopne
mov
xor
das
mov
cmp
stc
shlb
stc
movsb
mov
lret
inc
and
sbb
sarl
cmp
rcrl
popa
rclb
sub
cmp
jnp
dec
inc
in
in
icebp
in
xchg
xchg
add
stos
mov
jnp
out
stc
or
mov
dec
in
out
inc
mov
movsl
divb
idivl
jmp
push
jl
push
push
push
sti
add
repz
vpcmov
inc
and
dec
nop
push
ds
adc
shll
mov
loop
in
dec
int3
aam
inc
or
dec
jl
out
stc
xor
cmc
jmp
enter
sti
ja
cmp
in
sbb
popa
push
inc
lcall
scas
mov
pop
movsl
cld
stos
inc
mov
in
xchg
xor
push
mov
adc
jnp
adc
daa
test
sbb
push
out
sub
arpl
inc
aad
cld
mov
test
and
fs
push
mov
fcompl
roll
daa
fs
mov
sbbb
push
fcomp
sbb
xchg
cli
cmp
and
insl
lods
dec
dec
jmp
sub
xchg
dec
xor
cli
add
pop
mov
lock
adc
cmpb
dec
pop
or
data16
stc
das
inc
push
jbe
inc
imul
stos
fildl
loopne
dec
stc
ja
dec
movsl
js
daa
sbb
mov
or
mov
pusha
movsl
clc
test
stos
mov
add
push
sub
jmp
mov
out
mov
lea
and
das
inc
xor
jae
daa
and
mov
or
pushf
scas
cwtl
outsb
adc
out
pop
ret
pushf
push
lods
adc
and
cmp
fs
xlat
mov
int
jmp
lret
sub
imul
jmp
sub
pop
sub
push
ds
mov
in
adc
lret
sbb
xor
ss
jmp
or
inc
daa
das
call
lret
leave
mov
xor
in
imul
das
mov
cmpsl
aas
sub
jne
std
out
and
fcmovnu
aas
and
mov
fstpt
cld
and
bound
jne
clc
pop
xor
stc
or
rorl
dec
dec
inc
mov
lret
pop
mov
push
mov
and
or
sbb
jns
fsubrl
iret
addr16
int3
lret
jae
jnp
test
mov
pop
es
mov
outsb
inc
pop
in
dec
pop
jle
jge
shl
xchg
outsl
iret
insb
xor
adc
lcall
cmc
sub
lods
lret
xchg
adc
scas
adc
push
out
and
pop
repnz
sub
cmp
das
jge
or
jp
push
cld
xchg
dec
div
cmp
repz
mov
test
addb
sbb
fsts
mov
sub
fsubrs
loope
movsb
int
mov
es
in
rep
fs
push
shl
loop
cmpb
jle
pop
shrb
imul
pusha
add
mov
push
mov
add
mov
call
jns
jl
push
mov
shrb
lret
pop
popa
push
enter
decl
in
repnz
pop
popf
jl
mov
loop
push
in
aam
mov
js
mov
or
inc
jg
dec
adc
mov
fcomps
push
sbb
or
dec
mov
adc
add
ds
add
cmp
cld
pop
fists
sbb
sbb
xor
sbb
inc
mov
push
in
fs
lods
rorl
and
test
das
pusha
movsb
in
imull
or
out
inc
lret
inc
push
pop
pop
mov
or
les
sbb
jle
loopne
ds
sbb
mov
cmp
rcrb
add
mov
mov
push
fnstsw
test
and
xchg
xor
jp
pop
ss
stos
lret
or
pop
pushf
jns
pop
movsb
xchg
aad
movsl
ds
adc
mov
daa
xor
aad
or
mov
jl
xchg
xlat
popa
sub
adc
ja
ror
inc
jp
andb
sahf
cltd
out
xor
fidivl
inc
rclb
fsts
pop
test
pop
mov
in
in
jmp
repnz
icebp
pusha
movsl
jmp
or
cmc
sbb
sarl
pop
mov
push
loopne
lods
mov
outsb
sbb
out
inc
inc
mov
and
sub
mov
or
adc
inc
jbe
lods
insb
or
in
lock
in
pusha
dec
add
inc
adc
jbe
sbb
cli
scas
fcmovu
add
test
pop
fwait
movsb
aam
add
imul
test
xchg
adc
sti
shlb
shlb
cmova
and
iret
mov
fidivrl
inc
and
adc
add
out
cmp
xchg
lret
fadds
sbb
adc
xor
dec
and
push
fnsave
push
adc
dec
imul
cld
xchg
dec
movsb
js
sub
test
jne
out
aad
movsl
sub
insl
lret
push
inc
jo
icebp
outsl
cmp
or
rcll
mov
or
fidivrl
dec
adc
mov
pop
scas
pop
xor
mov
aaa
xchg
jge
popf
jl
negb
lcall
lock
sbb
xchg
ret
xor
mov
xchg
mov
pop
push
outsl
pop
imul
pop
mov
cmp
popa
outsl
inc
lock
inc
inc
push
cli
fisttpll
lahf
sbb
sub
cmp
cmc
outsl
hlt
int3
bound
xor
xor
xchg
mov
add
adc
xor
adc
pushf
push
cmp
mov
in
or
notl
fwait
push
mov
dec
fldt
or
mov
jne
out
jg
jl
xchg
xorps
je
in
sahf
ljmp
jge
mov
inc
repz
sub
ds
inc
pop
test
mov
or
mov
cmp
sub
outsl
mov
cmpsb
out
fisubs
push
xchg
mov
outsb
testb
and
adc
xchg
std
xchg
not
or
int
push
jl
int
mov
mov
jl
movsb
xchg
sub
dec
mov
gs
sub
lret
push
cmp
pop
adc
gs
dec
add
mov
mov
les
push
inc
bnd
jne
fiadds
in
or
and
adc
and
xchg
nop
lret
mov
dec
ficomps
mov
lock
cwtl
repz
test
add
sbb
inc
push
das
movsb
in
mov
pop
or
fcoms
cmp
test
idivb
cmpsb
xchg
sbb
into
ds
lahf
insb
aas
fcmovu
fnstenv
xor
inc
aas
enter
popf
std
nopl
adc
ds
jle
sarl
sbb
scas
pop
xchg
or
xchg
xchg
jle
stos
mov
lods
arpl
pop
push
mov
nop
mov
sub
out
mov
push
clc
cmp
icebp
int3
sar
push
loope
sbb
cmpsl
xchg
mov
xor
fsubrl
movsl
in
pop
or
cmp
push
xchg
sti
mov
mov
mov
test
mov
fs
xchg
jp
jnp
pop
dec
cli
stos
filds
stos
sub
adc
jno
fdivs
inc
inc
push
add
or
mov
cmp
adc
je
mov
outsl
ret
mov
inc
jnp
daa
in
mov
out
daa
sahf
outsl
lods
mov
cmp
add
incl
mov
stc
xchg
sbb
push
jb
fcoms
icebp
inc
lret
adc
pop
test
out
aas
fiadds
push
adc
push
popa
testb
loop
lret
arpl
cmpsb
mov
mov
dec
xchg
mov
jmp
pop
dec
push
jecxz
addr16
movsl
xor
les
cld
loop
jae
sti
repz
xchg
mov
pop
pop
andb
aaa
subl
xchg
sub
mov
jle
test
iret
cltd
das
jge
repnz
mov
xor
test
aad
dec
into
test
rcll
push
and
imul
mov
mov
lods
iret
shrd
popf
push
inc
or
mov
jae
daa
int3
sbb
fimull
dec
mov
jae
iret
ficomps
fstl
cltd
push
xchg
add
outsb
call
push
xchg
dec
inc
xchg
cmp
int
in
mov
fdivrl
pop
dec
sub
movsl
jge
in
ja
pushf
push
ljmp
rorl
addr16
jmp
and
mov
mov
push
in
out
xchg
add
rcrb
and
call
out
mulb
mov
lock
pop
jns
mov
jp
pop
inc
xor
inc
pusha
xchg
hlt
push
lret
jb
dec
sub
inc
mov
add
imul
dec
bound
cmp
addr16
hlt
cmpsb
popa
insb
and
xchg
loope
mov
add
jp
push
xor
sub
cmpsb
gs
xchg
inc
or
and
movsl
dec
imul
in
or
inc
jp
mov
jl
push
clc
pop
inc
enter
lahf
jecxz
loopne
sub
int3
mov
std
dec
xchg
rorb
test
add
mov
neg
or
in
push
sti
in
sbb
add
xor
jae
xchg
cmc
clc
xor
inc
test
out
xor
and
push
inc
jns
pop
fistl
pop
push
xchg
or
fdivrl
push
jge
push
cli
aaa
push
push
loop
push
scas
stc
and
test
shll
stos
jnp
jg
push
inc
aas
jmp
adc
in
inc
xchg
fldz
ljmp
in
adc
sbb
adc
xchg
rcr
ret
movsb
lock
push
lahf
ret
bound
cs
mov
inc
pop
inc
cli
lcall
xchg
lret
add
jg
lea
ljmp
or
out
stc
push
int3
pop
lcall
mov
xbegin
sub
add
lcall
xchg
jecxz
sbb
pop
sbb
scas
sbb
push
push
sbb
push
shll
out
add
inc
dec
dec
push
push
pop
mov
jo
ret
push
mov
ljmp
adc
push
test
sbbl
fildll
scas
in
out
dec
lods
cmc
test
mov
jo
add
mov
scas
ja
insl
pop
popf
mov
dec
aaa
pop
xchg
inc
xchg
loopne
inc
lcall
xchg
ret
add
test
xchg
mov
inc
ret
in
dec
faddl
pop
aas
das
fcoml
lea
add
fsts
or
mov
push
and
xor
arpl
push
inc
sbb
test
pop
int
jecxz
aad
clc
cwtl
xor
jecxz
xor
aam
adc
push
sti
mov
sbb
mov
cmp
stc
outsb
push
sub
cmpsl
fs
inc
int3
mov
sbb
push
ret
aam
test
cmp
aam
sub
iret
pushl
out
push
sti
clc
loopne
xchg
adc
and
adc
fildll
bound
stos
bound
xor
in
out
subb
shlb
inc
pusha
movsl
xor
jmp
sti
add
or
jne
mov
mov
leave
mov
and
incl
pop
leave
arpl
fmulp
add
push
sub
loop
adc
jp
inc
fsubp
pop
movsl
and
push
stos
inc
pusha
in
push
dec
dec
stos
mov
push
jno
stc
mov
mov
inc
popf
xchg
sbb
aad
ja
repz
daa
sub
dec
xlat
fldln2
push
xchg
mov
aas
xchg
loop
inc
subl
loope
js
mov
in
dec
and
jl
pusha
sbb
fildl
adc
jg
lea
ds
daa
in
add
dec
hlt
adc
or
not
push
push
mov
test
or
mov
in
repnz
or
push
pop
cmp
loope
jecxz
outsb
sbb
lea
fdivrs
xchg
mov
push
xchg
sub
pop
mov
or
out
lods
cmp
shlb
lods
ret
jle
mov
dec
or
scas
outsl
test
shl
pushf
testb
mov
dec
push
jmp
ret
addr16
xchg
xor
sti
sub
xlat
stc
lcall
leave
sub
loop
leave
sbb
popf
cs
bound
inc
mov
fisttpll
push
pop
and
stos
sub
popf
mov
inc
pop
jbe
outsb
movsb
jle
mov
cmc
cs
fcmovnb
gs
data16
sbb
mov
ss
fmull
lods
push
fs
xor
jbe
ret
push
pushf
mov
push
lea
xchg
popf
mov
mov
mov
icebp
jno
jno
movsl
leave
popf
lret
das
in
or
lret
fmulp
pop
adc
imul
sbb
out
dec
lret
and
dec
jnp
out
ret
ja
cmp
bound
sarb
mov
jp
inc
push
test
mov
xlat
jecxz
add
cs
or
dec
jecxz
inc
sahf
dec
xchg
adc
ret
mov
and
xchg
je
xchg
les
pusha
dec
adc
xchg
test
adc
sbb
lahf
test
mov
cli
leave
adc
aam
mov
es
ja
hlt
gs
test
jmp
out
dec
xchg
and
push
or
xlat
insl
aad
lea
rorl
repz
shlb
aaa
cmp
hlt
pusha
inc
roll
inc
push
pop
out
inc
adc
jae
int
add
inc
push
push
popf
lcall
pop
repz
inc
lock
call
insl
fidivs
adc
call
jno
ja
in
pop
arpl
cmp
ret
jle
cmp
adc
outsl
adc
adc
test
xchg
jns
and
insl
sbb
fistpl
sbb
adc
cld
sub
adc
cs
adc
lds
das
jne
cmp
movsl
daa
ds
sbb
pop
sbb
out
popa
mov
sub
inc
lods
enter
in
cmpsl
xchg
dec
add
push
mov
mov
lds
mov
sahf
mov
push
lcall
shlb
cld
cmp
jmp
addl
das
jl
dec
sahf
repz
pusha
scas
cli
push
adc
testl
imul
loopne
out
sbb
ds
arpl
rclb
negb
jae
xchg
cmpsl
push
push
jb
jmp
push
hlt
cmp
jecxz
pop
cli
pop
sbb
jmp
fld
iret
cld
sarl
sbb
and
iret
inc
mov
adc
xor
test
dec
enter
push
mov
test
testb
push
add
ficoms
cmp
es
imul
fst
mov
mov
pop
sahf
js
sete
fcomps
or
or
scas
mov
inc
pop
pop
ljmp
mov
add
das
cld
lret
pop
daa
imul
lea
jo
mov
icebp
mov
pushf
loopne
or
movsl
loope
frstor
int
fidivs
mov
gs
xchg
cmp
push
pop
jnp
mov
xchg
push
mov
call
cmc
nop
cmp
cli
std
sub
out
cltd
push
imul
xchg
aaa
mov
mov
pop
orl
sbb
addr16
in
in
push
adc
dec
xchg
and
or
push
aas
mov
in
repz
stos
sbb
add
pop
lret
aas
sbb
jb
xchg
jecxz
jns
sbb
xchg
cltd
dec
sbb
ss
out
push
out
jmp
add
add
test
adc
shlb
mov
mov
push
in
adc
adc
xchg
cmp
dec
loope
cmp
cmp
mov
inc
mov
sbb
outsl
movsl
aad
shll
mov
jo
or
or
xchg
test
lock
dec
rep
or
mov
push
fwait
mov
shrb
jne
lods
mov
lcall
cli
mov
lock
iret
ss
fst
outsl
test
cmp
loope
xor
mov
mov
test
ljmp
or
sub
repz
sbb
out
cmpsb
shl
icebp
sub
mov
cmp
faddp
cmp
jb
imul
pop
negl
mov
sbb
mov
push
mov
dec
sub
mov
xchg
outsb
sbb
mov
mov
pop
lcall
cwtl
ss
mov
setb
popf
xlat
mov
cmp
sbb
jmp
jl
sbb
nop
fs
jle
jmp
jp
mov
ss
and
fimull
lret
cmp
inc
cwtl
aaa
xor
cmpsb
bound
push
cmp
add
cmp
cmp
icebp
int3
aas
pop
or
pcmpeqb
bound
lods
and
jnp
mov
out
jg
jae
pop
push
shlb
dec
mov
mov
mov
push
pop
jo
and
adc
lahf
cmc
inc
push
lret
icebp
or
jmp
icebp
jo
popa
xchg
jge
jp
rorl
psrlw
cmpsl
cmp
fs
mov
call
mov
leave
mov
push
xlat
sti
hlt
ret
jno
mov
cmp
jecxz
sub
sub
pop
aas
je
jg
mov
fistps
icebp
pop
sarl
call
filds
pop
dec
xadd
iret
xlat
addr16
mov
xor
cmpsl
out
out
push
inc
repz
mov
cwtl
cltd
xchg
jb
xor
dec
and
stc
and
repz
pop
mov
jmp
cmc
and
xchg
data16
sub
pop
inc
ljmp
mov
repnz
pop
mov
push
mov
xor
js
leave
mov
insb
pop
push
push
stos
hlt
lcall
popf
arpl
mov
and
pop
pop
test
mov
pop
test
lods
stc
stos
xor
sti
test
pop
xchg
shrl
or
adcl
and
mov
data16
jae
mov
pop
ljmp
or
add
fs
and
out
mov
les
dec
clc
ds
leave
jg
add
gs
rol
lcall
icebp
add
sub
pop
or
and
jecxz
adc
lods
adc
cmp
mov
aam
dec
insl
add
outsb
push
fnstcw
pusha
cmp
inc
jb
sub
mov
je
pop
jne
sub
jge
data16
stos
mov
loope
scas
push
mov
jg
push
aas
cmp
nop
cmp
cmpsl
add
mov
rclb
sbb
push
adc
or
stos
es
xorb
jmp
push
sbb
mov
mov
cmp
lahf
adc
in
imul
pop
sub
dec
enter
fiaddl
dec
push
mov
cwtl
sbb
and
ds
mov
push
jo
ret
adc
adc
cmc
xor
or
sub
fistpl
fstl
push
popf
roll
testl
cltd
xlat
xor
lds
inc
cmp
ror
es
inc
pop
imul
add
xor
pop
xchg
xchg
sbb
outsb
daa
sbb
cltd
sbb
push
arpl
sub
out
mov
add
loope
mov
push
pop
je
xor
sahf
push
sbbb
fwait
mov
mov
sub
inc
pop
inc
incb
push
repnz
inc
pop
xor
dec
aam
dec
inc
push
stc
orl
out
cs
scas
fsubrl
fcmovu
mov
test
mov
lret
dec
adc
dec
lock
addl
sub
shlb
fstpl
cmp
pop
lret
push
dec
neg
cmp
mov
pop
mov
xor
ret
inc
clc
sbb
mov
sub
inc
icebp
scas
xchg
je
adc
sbb
jae
xor
pushf
sahf
push
inc
test
cmpsb
loopne
scas
add
int3
dec
and
xchg
sbb
shrl
aad
pop
lods
out
and
adcb
add
mov
stc
push
out
jo
out
bound
pop
repnz
lock
pop
sub
pusha
jle
negb
xlat
pusha
ficoms
sbbl
test
or
xor
or
xchg
add
jecxz
jnp
xor
loopne
test
in
push
fmull
sbb
or
filds
dec
inc
sbb
fs
pop
fcomps
mov
ret
pop
adc
jae
int
out
dec
or
cs
or
mov
or
jge
jecxz
push
add
icebp
cwtl
dec
sbb
mov
cli
jo
pop
movsw
dec
add
sarl
mov
add
iret
iret
jns
inc
test
xchg
cmp
jne
into
daa
sub
xchg
xor
test
inc
rsm
ds
loope
or
pop
mov
sub
pop
jle
mov
loope
dec
add
ret
int
mov
pusha
mov
adc
add
cmp
movsb
subb
jns
or
mov
cltd
push
pop
out
xchg
in
hlt
push
stc
pop
ja
mov
mov
pop
jno
push
mov
push
add
cmp
pushf
adc
mov
daa
push
jb
pop
loopne
stos
push
xchg
adc
sub
jno
pop
or
lods
push
fninit
cmpsb
addb
sub
dec
mov
xchg
idivb
xor
fs
fistl
test
inc
test
outsb
int
pop
loope
stc
fcmovnbe
jl
sbb
repnz
cmp
sahf
xor
lods
scas
cmpsb
cmc
in
aam
sbb
mov
xchg
not
aas
std
sub
inc
xchg
test
inc
sub
lea
scas
sub
sbb
lcall
repz
push
jl
sarb
mov
adc
xrelease
popa
adc
insb
loop
xchg
ss
je
or
fptan
mov
addr16
xchg
cmp
lock
sar
dec
or
out
and
lds
and
hlt
inc
mov
rcrl
aam
pop
mov
xchg
cmp
xlat
adc
add
test
cmp
sbb
test
and
jbe,pn
ret
add
cwtl
push
loope
inc
es
mov
xchg
xor
add
aad
adc
push
inc
arpl
rolb
ja
out
fcompl
add
pop
test
cmp
sub
mov
xor
into
push
jmp
inc
outsb
jns
js
mov
hlt
lds
mov
ja
xchg
pop
mov
daa
push
insb
or
and
or
jb
sub
pop
insb
test
sbb
and
cs
mov
xchg
jno
jo
or
ret
loopne
test
jns
inc
bound
and
test
mov
cmp
pushf
fwait
push
pop
or
in
xchg
notl
sub
mov
inc
jl
fcomip
cmp
sbb
movsb
mov
xor
test
gs
push
mov
cmp
rolb
push
lret
int
inc
scas
in
xor
movsl
ja
clc
add
das
shr
sub
mov
insb
dec
adc
sbb
pop
sbb
insb
cmp
out
pushf
jne
aaa
lods
loop
idiv
and
stos
in
pop
pop
mov
and
in
pop
mov
mov
adcl
jne
mov
and
insl
and
jecxz
out
inc
ja
je
jo
shlb
test
cltd
dec
ret
ds
frstor
loop
in
jl
dec
xchg
push
dec
out
jg
xchg
aad
push
mov
mov
xchg
int3
int
in
jle
scas
mov
lret
or
and
adc
jbe
xchg
mov
xchg
and
adc
add
ja
test
sbb
in
mov
aas
pop
fs
push
subl
and
adc
cmc
ret
arpl
loop
dec
sbb
aas
int3
or
pop
lock
jecxz
jb
mov
xchg
xor
mov
out
dec
add
repnz
mov
insl
stos
xchg
in
in
and
mov
out
adc
or
andl
icebp
ds
mov
inc
out
sub
mov
clc
mov
adc
in
adc
pop
sub
xor
cmpsl
xchg
xchg
mov
cs
adc
sbb
push
pop
sbb
dec
sbb
jnp
mov
sub
mov
dec
andl
push
stc
sub
popa
scas
hlt
sahf
sub
jo
sti
sub
shll
dec
mov
or
cmp
cld
pusha
jne
xor
pop
cld
xor
xorl
icebp
sub
sub
scas
xchg
jne
jne
cmc
mov
ja
adc
jle
wrmsr
ja
shll
sbb
ficoms
or
xchg
dec
dec
xchg
outsb
or
jecxz
icebp
inc
leave
or
sub
lret
pop
add
aaa
adcl
iret
mov
loope
popf
adc
jmp
adcb
mov
add
fwait
adc
mov
sub
or
shrl
pushf
cmp
pushf
xor
iret
jg
neg
mov
or
pop
xlat
adc
into
adc
jno
pop
icebp
jnp
mov
adc
mov
into
jle
cmpsb
xlat
inc
mov
filds
adcl
xor
pop
inc
cmove
dec
push
push
mov
xchg
mov
dec
xchg
enter
dec
repnz
adc
nop
int
jbe
in
and
xchg
fsubrs
test
or
ficompl
xor
les
cli
or
out
aaa
push
mov
xchg
leave
ds
cmc
lret
aad
jnp
mov
push
and
mov
popf
call
pusha
loop
jno
jp
jg
scas
test
enter
mov
outsb
das
mull
mov
dec
xlat
shll
sub
xchg
fcoms
rcrb
in
les
jp
and
adc
lock
mov
movsb
movsl
xchg
shll
popf
mov
dec
mov
xor
mov
aas
sahf
lock
cmp
mov
pushf
xor
andl
aad
das
push
repz
sub
mov
aam
mov
and
bound
arpl
pop
lds
cmp
add
popf
addr16
inc
cmp
xor
xchg
sub
xchg
test
fwait
loope
sub
test
data16
sahf
dec
pop
jecxz
pusha
dec
imul
mov
ljmp
mov
lcall
xchg
add
aam
dec
ljmp
cmp
mov
scas
push
mov
dec
mov
idivb
pop
push
inc
es
inc
dec
xor
iret
adc
mov
add
pop
adc
xor
outsb
pop
mov
xorb
push
cmp
inc
pop
iret
mov
sbb
xchg
xor
call
xor
push
cwtl
cwtl
mov
rorb
lds
add
dec
inc
cmpsl
sub
aam
jg
arpl
fcmovne
adc
fwait
mov
ljmp
jne
das
pop
nop
in
jb
or
jg
or
xchg
rcrb
out
mov
xor
push
mov
jnp
push
xchg
xchg
mov
ss
add
pop
movsl
and
and
mov
dec
mov
pop
stc
inc
push
mov
test
xlat
mov
jae
mov
push
mov
lret
adc
and
xorl
or
xchg
dec
lret
adc
popa
lock
or
and
insl
xor
movhps
insl
xor
lcall
shl
aam
inc
arpl
into
sarb
in
cld
dec
test
aaa
paddusw
ret
scas
adc
push
repz
xchg
outsl
jmp
xchg
pusha
rolb
mov
orl
outsl
sbb
mov
inc
jae
sub
push
sub
push
mov
nop
inc
dec
sub
sub
pop
pushf
add
xlat
push
pop
out
shlb
enter
inc
in
fdivrl
pop
mov
pop
pop
mov
ds
je
xchg
and
inc
nop
pop
daa
loopne
fwait
add
jno
or
js
jl
test
adc
cld
cmp
or
stc
sbb
mov
adc
rorb
in
in
mov
inc
inc
and
pop
adc
inc
dec
or
or
inc
jnp
sbb
ja
sahf
fmuls
div
cmpsb
jmp
inc
mov
jns
ja
mov
cmpsl
pop
in
out
mov
xchg
inc
lods
std
sbb
fistps
mov
add
inc
sub
mov
jno
push
jb
inc
cmovbe
fs
lea
dec
les
imul
pushf
sbb
add
lcall
imul
push
cmpsl
add
pop
pxor
cs
mov
aas
sar
sarl
clc
addr16
enter
repnz
mov
cmpsl
gs
xchg
lcall
insl
daa
sub
fcompl
add
mov
inc
pop
mov
ss
jp
mov
fidivs
faddl
xchg
xor
popa
cmc
fnstenv
movsb
jno
pop
mov
das
jle
cmpsb
sbb
jno
jbe
ljmp
jne
pop
testl
xor
scas
inc
cmpl
mov
and
mov
clc
std
cltd
push
fbld
mov
push
mov
ss
jne
cltd
jnp
bound
lcall
gs
xchg
lahf
xchg
xor
cltd
cmpsl
and
loop
imul
xchg
ljmp
xchg
pop
mov
sbb
fbld
xchg
mov
les
or
mov
call
gs
dec
lret
pop
mov
jl
test
xor
jae
sub
jbe
test
cmpsb
or
imulb
stc
rcrb
add
or
loope
nop
mov
and
pop
xor
cs
push
in
cs
xor
jmp
mov
xchg
inc
adcl
sbbl
gs
ljmp
test
dec
sbb
and
or
cmp
aas
lret
sbb
fistpl
sub
aad
and
sub
push
lock
daa
lock
loope
mov
push
dec
cli
dec
iret
lcall
int3
loope
iret
jle
arpl
jno
push
scas
arpl
sub
mov
in
insl
sarb
nop
movl
dec
cwtl
negb
aaa
adc
cmp
mov
sbb
repnz
fdivp
or
or
fldl
insl
in
or
int3
jl
bound
cmp
add
pop
outsb
add
fs
fldl
and
out
sub
lret
xor
jns
inc
shr
sub
push
pop
int3
and
push
mov
jmp
mov
adc
sub
pushl
fwait
cmp
mov
mov
add
sahf
pop
mov
jnp
popa
popf
mov
sbb
add
ds
jo
rcr
sub
push
sbb
aam
movsb
pop
add
lock
out
inc
fdivs
stc
cwtl
movsl
pop
sbb
push
or
ret
add
xchg
negb
sbb
push
inc
mov
sti
fincstp
jge
or
movsl
mov
xorl
pop
sub
mov
sub
roll
addl
scas
rep
scas
testl
cmp
jb
mov
stos
inc
inc
xchg
sub
add
nop
adc
xor
mov
mov
sbb
icebp
and
mov
lods
arpl
mov
push
push
repz
shlb
adc
pop
test
sbb
scas
imul
outsl
dec
inc
fcmove
shrb
mov
push
xchg
fsubl
in
pop
sub
push
out
mov
stc
outsl
mov
fimull
call
rcll
jno
stos
jp
fmuls
cs
fwait
adc
rcrb
rcl
push
inc
inc
sahf
jae
mov
add
aam
add
inc
and
jae
push
loopne
fimull
aad
mov
adc
mov
push
or
js
xchg
rcrl
stc
push
jge
outsb
and
add
sbbb
xchg
cli
stos
cmpsb
sub
cmp
push
enter
mov
jl
mov
add
dec
int
in
int
leave
popf
mov
mov
popa
fists
ret
push
ror
and
xchg
jge
push
push
repz
mov
or
sbb
hlt
fcomps
mov
dec
jl
lahf
jb
cmp
jno
in
ds
mov
push
test
dec
cmp
inc
and
cmp
cmp
in
sbb
mov
dec
add
test
sub
mov
fsub
mov
lcall
outsl
call
push
push
adc
inc
mov
cmp
ficoml
lock
xchg
stc
jne
mov
ficompl
outsl
jno
mov
lock
xor
pop
vpshufhw
adc
mov
sahf
mov
sbb
jmp
add
test
hlt
push
mov
daa
sbb
sub
movsb
int
out
popf
mov
sbb
or
lret
or
leave
faddp
leave
in
ret
inc
jno
sbb
lock
stos
xor
shlb
mov
cmpl
jmp
outsl
icebp
add
shrb
inc
mov
xor
dec
jmp
cmpsl
pop
mov
adc
sbb
and
aam
jnp
je
adc
mov
enter
xor
stos
lret
ret
movsl
loope
xchg
inc
test
sbb
test
lcall
loopne
sub
scas
jno
aas
inc
inc
pop
adc
in
ljmp
adc
mov
sub
mov
and
sahf
leave
aad
inc
or
add
mov
jbe
sbb
push
and
xor
jle
cld
ret
outsb
pop
es
js
jg
loope
stos
pop
sbb
mov
mov
dec
inc
cmp
dec
adc
push
icebp
and
xor
mov
lcall
repnz
add
out
add
outsb
mov
hlt
push
xor
sbb
pushf
sbb
outsl
lods
jecxz
jle
stos
sub
fidivrs
xor
or
push
mov
das
mov
mov
sar
mov
xchg
ret
lods
popa
push
jg
mov
sbb
inc
add
jo
sub
minps
ja
sub
mov
lea
dec
mov
xchg
push
cmp
scas
lock
mov
xchg
jnp
lcall
aas
je
push
inc
in
scas
lods
dec
or
in
outsb
cmp
push
cmp
faddp
jmp
call
pop
imul
add
mov
int
mov
pop
jne
xchg
xchg
mov
das
inc
lcall
or
daa
jmp
stos
fldcw
pop
mov
out
jno
sub
pop
sub
lods
jmp
mov
mov
insl
lock
mov
add
dec
mov
push
data16
jge
lock
arpl
inc
xorb
test
push
pop
ja
inc
xchg
sbb
sbbb
pop
hlt
mov
push
ja
push
fcomp
rcrb
sbb
fistps
mov
ja
movsl
int
leave
insb
aad
leave
push
jle
sbb
push
cmp
rcrb
sbb
call
repz
aas
ret
adc
popa
psllw
or
sub
jns
push
mov
insl
lcall
xchg
ja
fbstp
aas
scas
add
xchg
mov
hlt
in
xchg
xchg
out
inc
outsl
fbld
es
xchg
cli
sub
xchg
in
add
xor
xchg
mov
adc
arpl
shlb
jnp
aam
orb
stos
out
fisubrs
je
pop
dec
xor
je
aam
cld
sbb
lds
pusha
insb
push
ss
and
repz
xchg
mov
mov
add
cmpb
xchg
mov
out
cmp
incl
sub
mov
cmp
rorl
push
push
out
xor
dec
scas
push
int
pop
mov
sbb
inc
mov
jne
sbb
cmpl
in
sub
enter
pop
jp
fidivl
add
daa
imul
lret
sbb
sub
inc
xchg
sbb
stos
and
adc
orl
sub
mov
mov
aas
pop
fs
repnz
test
xchg
pop
fwait
testl
dec
bound
mov
ror
je
mov
jg
push
jbe
inc
stc
mov
imul
add
mov
mov
pop
std
mov
adc
test
jb
pop
or
xchg
inc
xor
repz
int
aam
das
mov
pop
in
int
adc
mov
adc
jle
push
mov
or
jle
jnp
xchg
inc
std
lret
xor
in
or
dec
dec
mov
subl
clc
mov
aaa
xorl
lods
dec
xor
mov
xchg
xchg
test
and
pop
inc
adc
sti
xchg
mov
inc
xorb
enter
das
mov
cli
scas
mov
xchg
xor
mov
cmp
inc
pop
mov
pusha
cwtl
aad
int
pop
stos
jne
outsb
addr16
sub
pop
js
push
mov
ss
jns
test
sbb
push
gs
imul
dec
imul
ljmp
ret
es
jns
mov
cmpsl
dec
jp
fdivrl
sarb
repnz
jg
jns
and
adcb
imul
add
push
in
rolb
adc
je
fdivp
jmp
js
xchg
add
insl
mov
sbb
pop
stos
mov
adc
inc
mov
leave
int3
dec
in
or
push
addb
int3
mov
dec
jl
push
shrb
test
mov
lock
cltd
xchg
add
fcmovb
sbb
flds
int
add
ja
das
push
cli
in
scas
ja
ja
xorb
or
stc
cmp
mov
jb
and
int3
fbstp
mov
or
sub
ffreep
pop
dec
hlt
adc
iret
sti
pop
dec
mov
cmpsl
and
inc
je
adc
adc
dec
imul
cmp
sbb
push
ss
mov
icebp
xchg
test
xchg
mov
mov
movl
push
mov
add
fucomip
mov
mov
mov
je
xor
jae
fmuls
push
enter
es
rorl
jmp
jmp
xchg
out
popa
fmull
les
cmp
xor
xlat
lret
pop
je
adc
xchg
add
fdivs
lea
in
push
aaa
fstpt
dec
cmpsl
aas
sub
mov
movswl
clc
push
adc
cmp
inc
sub
cs
mov
sbb
push
pop
push
fsubrl
lret
mov
imul
lds
aam
js
jmp
pop
lahf
pop
mov
cmp
jbe
cmp
in
xchg
in
js
xchg
in
daa
pop
pushf
cli
icebp
mov
jl
mov
movsl
imul
jb
adc
aad
lahf
pushf
jns
call
movsb
test
and
jl
test
mov
xchg
cmp
inc
xchg
mov
or
cmp
mov
movsb
sbb
cli
ficoml
or
mov
aas
dec
fwait
add
cltd
scas
test
mov
test
dec
cmp
pop
popa
iret
loopne
push
ds
and
push
xchg
adc
xchg
popf
sub
pop
fiadds
imul
xor
scas
or
mov
dec
shlb
xor
pop
mov
mov
mov
xor
inc
mov
ja
pop
pop
in
xor
pop
or
fimull
out
xlat
and
and
pop
aam
mov
cli
iret
pusha
mov
out
je
out
xchg
xor
rorl
push
popl
call
shrb
xchg
push
rcrl
mov
or
jge
sbb
dec
cs
pop
jmp
stc
or
pop
daa
push
lea
jb
adc
xchg
push
inc
ljmp
or
imul
fildll
nop
js
xchg
sbb
mov
push
add
movsl
jno
and
and
test
sbbl
xor
bound
orb
repnz
sbb
pop
sub
out
cmp
xchg
mov
add
fsubr
outsb
and
dec
mov
ss
lahf
dec
pop
sub
lahf
mov
jp
roll
loop
div
outsl
dec
ds
dec
xlat
jecxz
mov
out
sbb
test
mov
scas
sarl
xor
adc
mov
push
sbb
in
push
ror
arpl
pop
mov
xor
cwtl
and
mov
icebp
sbb
dec
push
add
data16
imul
outsl
js
imul
sub
add
xchg
cmc
xchg
into
mov
lods
mov
mov
jno
mov
std
mov
and
outsl
adc
les
aad
leave
push
out
lea
leave
xor
repnz
fidivrl
mov
aaa
idivb
cmp
test
inc
jmp
xor
sub
movsb
inc
xchg
movsl
test
mov
xchg
inc
scas
mov
scas
push
xor
lods
sbb
adc
cld
mov
lods
imul
aad
jge
xchg
fdivl
adc
inc
xchg
arpl
push
lock
cmp
sub
or
xorl
std
cmp
cmp
mov
pop
mov
sbb
outsb
inc
pop
nop
cmpb
pop
xor
xchg
mov
fisubs
mov
inc
mov
mov
add
insb
push
in
push
jo
lret
imul
mov
test
push
shl
fistpll
mov
inc
lds
sbb
shrb
push
fwait
or
xor
jb
dec
push
push
lock
or
dec
adc
or
movsl
std
js
aas
mov
sub
xor
scas
popa
loopne
arpl
sbb
in
dec
subl
loope
or
xlat
pop
cmpsb
sub
aad
xchg
sub
cmp
jp
dec
xorb
stc
addl
push
inc
push
push
pusha
inc
dec
push
scas
int
cld
inc
jae
push
xor
push
fwait
je
std
xchg
je
jecxz
and
mov
xchg
inc
mov
sub
xchg
xor
pusha
dec
outsl
xchg
lods
cltd
or
jp
adc
inc
jge
mov
insl
and
inc
fildll
push
sbb
clc
cmpsb
push
lret
lods
inc
rol
add
sarl
loop
sub
bound
into
push
andb
mov
in
pop
sbb
cwtl
adc
jo
cmp
outsl
fs
leave
xor
lea
mov
fidivl
pop
aaa
movsb
movsb
jecxz
cwtl
test
jnp
bswap
lret
pusha
sti
jne
sbb
call
lods
push
xchg
cld
adc
lret
ljmp
mulb
and
xchg
fidivrs
pop
into
bound
xor
add
imul
lock
aas
jg
add
rcr
icebp
cmc
xchg
inc
mov
outsl
in
or
pusha
mov
std
daa
mov
out
mov
adc
xlat
and
data16
adc
imul
fisubrl
aaa
inc
popa
ljmp
and
push
stos
fstps
rol
cmpsb
add
jle
rcll
adc
mov
adc
and
mov
lcall
dec
aad
outsb
adc
mov
mov
pop
cltd
push
push
push
in
imul
xor
test
mov
mov
insb
pushf
jnp,pn
jge
imul
push
mov
push
mov
inc
test
loopne
pusha
aaa
adc
lret
push
sbb
adc
daa
pop
ficompl
add
js
ljmp
inc
push
push
or
xchg
aaa
mov
push
pop
sbb
adc
push
xor
pop
mov
outsl
dec
sti
sti
jle
jno
mov
pop
dec
xchg
les
sbb
add
push
orb
mov
add
and
mov
cmp
and
mov
mov
cmpsb
jns
jmp
jp
push
dec
xchg
sub
adc
mov
mov
dec
mov
inc
mov
fistpll
std
jge
int
rorl
and
mov
in
adc
mov
xor
shrl
push
jecxz
pop
lcall
cmp
pusha
icebp
xor
sti
shlb
add
or
mov
in
inc
mov
inc
lock
insb
mov
jl
mov
pop
xchg
pop
les
dec
jb
aas
outsb
jno
mov
pop
fisttps
mov
cs
es
mov
rorl
pushf
fs
pop
repz
cld
adc
ljmp
dec
scas
or
pop
xchg
pop
mov
xor
cs
pop
xor
por
jp
imul
push
repz
cmp
jmp
sub
jno
lcall
cmp
sar
shrl
inc
or
dec
add
aas
jmp
add
mov
ljmp
add
popf
hlt
jae
je
cltd
jo
sbb
daa
rcll
lods
call
loope
stc
in
push
pop
inc
or
add
adc
sub
push
cli
rorb
dec
int3
or
jecxz
test
lods
xchg
lods
mov
push
ja
icebp
dec
scas
pop
mov
out
enter
insb
les
xchg
xor
insb
ucomiss
sbb
cld
xchg
or
pop
ret
loope
sbb
dec
loop
add
aaa
add
mov
xorb
rorl
cmp
call
push
dec
lds
sub
jne
dec
lret
ds
and
mov
xchg
imul
repnz
jg
mov
mov
push
mov
mov
push
std
iret
addl
mov
faddl
and
pop
popa
in
nop
add
mov
out
mov
cs
xchg
stos
shlb
add
or
fistpll
fsubs
popa
data16
popa
lret
xor
mov
jge
neg
mov
cmc
mov
jbe
lods
bnd
sub
sub
add
cs
pop
movsl
add
inc
cld
test
jecxz
call
faddl
rolb
mov
mov
mov
in
clc
adc
scas
cs
xchg
test
cwtl
mov
shl
lcall
push
push
aad
dec
rorb
add
dec
loopne
xchg
lds
aam
ljmp
push
or
je
cmp
test
mov
adc
cmpsl
jo
adc
mov
into
roll
or
sbb
or
lret
out
dec
sub
inc
in
dec
push
inc
push
and
imul
mov
into
iret
leave
cwtl
ror
inc
and
jl
cmp
mov
in
xchg
rcrb
arpl
jge
into
ret
mov
mov
test
aam
sbb
mov
lds
sub
mov
sahf
or
in
xchg
xchg
pop
lret
fildll
popf
rcl
mov
loopne
push
dec
ss
popa
in
inc
inc
dec
jo
xchg
fdivrs
push
outsl
lahf
stos
inc
aam
faddp
push
nop
lods
mov
xchg
pop
or
cltd
popa
test
sbb
sub
lret
bound
inc
cmp
adc
rclb
rcrl
daa
repnz
dec
adc
shrb
pop
push
fimull
hlt
pop
dec
jnp
pop
sbb
adc
rorl
data16
cmp
mov
and
xor
mov
cltd
push
jb
xchg
sbb
bound
stc
out
cmpsb
mov
cmp
fsubrl
sub
pop
dec
mov
pop
sub
loopne
cmc
or
and
popf
mov
iret
pop
pop
inc
lds
add
jnp
xchg
stos
bound
push
cmp
fidivrl
or
inc
inc
jmp
pop
sahf
jg
ret
leave
cmp
push
je
fidivrs
sbb
loope
loop
adc
xchg
sub
leave
pop
ss
insb
push
jne
stc
fs
popa
rorb
js
cmc
cmc
sti
mov
outsl
loop
pop
inc
push
or
ljmp
pop
push
lds
jg
je
ljmp
into
icebp
xchg
popf
imul
adc
sub
xchg
cmp
mov
loope
cmpsl
mov
pcmpeqw
vpextrq
aad
push
pop
js
xchg
jl
in
ret
loop
mov
sbb
sahf
outsb
leave
inc
insl
jbe
dec
jnp
and
cmp
push
push
inc
dec
repnz
clc
mov
fcoms
jge
out
ljmp
sub
clts
and
push
lret
nop
hlt
cld
push
mov
fwait
in
inc
repz
add
rcrl
xchg
jp
in
mov
call
mov
sub
test
inc
das
mov
xorl
loope
pop
mov
scas
push
inc
push
dec
push
mov
jae
inc
sbbb
inc
cmp
cmp
or
sbb
fistpl
aas
lds
rol
int3
rclb
cmc
scas
lea
adc
jp
pushf
cmp
imul
sub
ret
loop
adc
pop
iret
fmul
cmp
outsl
push
jge
aaa
mov
mov
dec
into
add
ljmp
lods
cmp
ret
loope
add
aam
ja
rol
stc
lret
gs
test
outsl
fdivl
xorl
std
in
scas
outsl
imul
push
bound
jle
daa
imul
aas
mov
test
ss
out
push
dec
shlb
out
int
pop
bound
pop
ret
movsb
leave
jp
cwtl
sbb
mov
loop
add
rcr
insl
xchg
mov
or
or
jno
rcll
in
outsl
fs
movsb
rcrb
mov
lock
jl
xor
scas
add
enter
xor
in
xor
shlb
imul
jb
fidivrs
repz
lds
icebp
imull
xchg
xor
enter
int
inc
ja
outsb
sbb
and
out
xor
or
decb
cmc
jne
or
or
mov
in
pop
mov
fiaddl
aaa
mov
dec
jge
ss
iret
cmp
xor
pop
pop
cltd
pop
push
push
in
lods
int
cmp
pop
stos
cld
cmp
sbb
pop
sub
or
fucomi
nop
fists
xchg
daa
aad
jo
mov
dec
cmp
das
inc
xor
int
dec
rol
testl
andl
jmp
jbe
sub
cmpl
push
xor
inc
lock
sub
scas
dec
out
mov
movsb
cmp
lds
jl
scas
dec
addl
out
stos
jmp
inc
lahf
pop
inc
rcll
sbb
dec
sti
dec
mov
das
int
into
std
xchg
add
xchg
cmp
sbb
in
pop
mov
xchg
add
cmpsl
push
lods
inc
sbb
aad
xorl
cli
int3
ja
and
pop
or
sbb
das
push
push
or
jbe
inc
gs
sbb
scas
push
and
nop
jle
in
decl
mov
cmc
adc
test
mov
push
add
jge
pop
das
cwtl
inc
xor
sti
in
js
xchg
lea
fcmovnb
sub
in
pop
xchg
fisttps
cmp
cmpl
mov
idiv
loopne
or
addl
ljmp
outsl
mov
pop
cmp
inc
pop
xchg
add
xor
xor
jbe
jne
sarb
and
jns
cltd
pop
lds
jecxz
mov
sar
push
sbb
push
movsb
repz
ja
jne
jnp
outsl
ss
jl
ret
xchg
loop
adc
lock
cld
cmc
dec
push
rorb
push
fisubl
test
inc
leave
movsb
rorb
mov
pop
mov
xor
mov
xor
lock
inc
enter
cld
adc
adc
ret
cmp
sbb
cmpsl
pop
lds
push
xchg
mov
inc
orb
les
cmp
movsl
push
pop
ficomps
add
xor
add
shl
out
int3
stc
cmpl
pop
sbb
out
negl
mov
lea
inc
imul
mov
mov
shl
adc
lea
dec
sub
pop
sub
inc
jmp
mov
sbb
and
ret
fcmovnu
divl
arpl
inc
inc
mov
sub
dec
sbb
loopne
ret
hlt
fcomip
ds
mov
sub
fildll
mov
ret
popa
jecxz
jbe
lahf
ret
and
mov
cmpsl
leave
daa
xor
loopne
cwtl
cmpsl
sahf
and
mov
mov
js
insb
mov
xchg
xorb
nop
push
or
cmpl
sti
movsb
movsl
fdivs
scas
mov
inc
xor
jg
sub
ds
outsl
outsl
sti
fimuls
jo
xchg
pop
outsl
and
icebp
sbb
mov
pop
test
jl
icebp
sub
add
jne
fldenv
jl
cld
mov
pop
adc
int3
es
mov
scas
imul
xlat
mov
cmp
xor
pop
mov
add
je
add
or
repnz
mov
lahf
jecxz
test
sbb
rorb
into
fs
jae
mov
inc
lds
xchg
in
stc
mov
test
cmpsb
out
cwtl
inc
in
jl
shll
inc
push
lret
adc
inc
mov
das
sti
xchg
test
ror
cmpsb
mov
mov
jne
xchg
outsb
shlb
or
fisttpl
mov
mov
mov
mov
fnstcw
popa
out
dec
cmp
add
pop
aaa
mov
mov
xor
cmp
loop
xchg
xchg
xchg
cmp
push
repz
lock
mov
sub
adc
jecxz
test
cmp
xor
bound
xchg
push
sarb
dec
pop
pop
icebp
push
mov
test
mov
push
mov
outsl
pusha
loopne
shrb
movl
fcoms
ss
sub
adc
shl
push
jge
jl
rclb
cltd
cltd
pop
or
leave
and
dec
jns
loopne
adc
imul
test
testl
ja
out
insb
das
adc
sbb
ret
cwtl
test
addr16
mov
add
inc
mov
mov
jns
xor
jb
les
shlb
fidivrl
shrb
pop
outsb
lahf
sbb
mov
stc
xor
sub
jns
dec
jmp
fiadds
aad
mov
pop
hlt
ret
inc
add
mov
dec
adc
xchg
push
mov
inc
inc
sub
cwtl
addr16
xchg
mov
xor
sbb
jne
inc
aaa
mov
int
or
fwait
xor
sarl
cmp
pop
and
into
loopne
fs
fcoml
or
loope
or
mov
fildl
jl
filds
sbb
inc
dec
sub
fcmovb
std
cmpsl
fwait
cmp
je
jg
inc
cltd
inc
pusha
sarl
out
fmuls
pushf
fwait
popa
adc
add
int3
pop
iret
mov
xor
mov
bound
xor
pushf
xor
insl
fisubrs
xor
xchg
jno
mov
scas
inc
fnsave
jmp
xchg
rclb
neg
aas
mov
adc
cs
mov
arpl
cld
frstor
push
cmpsb
cmpsl
mov
inc
gs
cmp
arpl
add
repnz
mov
lcall
jmp
shl
mov
outsb
lea
jae
in
sub
sub
mov
in
inc
ja
inc
addl
xchg
fs
xor
jl
push
in
sub
stos
mov
lods
scas
push
add
sbb
adc
lods
dec
cmp
pushf
jp
leave
jns
xchg
pop
pop
mov
mov
ror
cmpb
xor
test
jecxz
push
loope
std
test
jge
gs
test
push
fistl
lock
or
cmp
idivl
inc
mov
ljmp
sub
in
out
out
insl
pop
xchg
xorl
adc
xlat
jp
or
popf
mov
outsb
jp
pop
jo
lea
or
mov
jge
cmp
push
bound
mov
jmp
ljmp
and
sub
iret
xor
clc
push
es
lret
pop
xchg
das
mov
xor
sahf
dec
lret
addr16
or
fstsw
lret
mov
out
les
push
sbb
inc
jbe
pop
push
jl
outsl
mov
stos
add
frstor
cmpsl
repz
cmc
les
movsb
repz
adc
and
add
rolb
adc
ret
cs
adc
xchg
mov
insl
clc
sub
mov
fmull
mov
in
das
incl
pop
fadds
call
sbb
js
inc
push
xchg
scas
sti
cmp
repnz
pop
or
or
sub
push
xor
xchg
aaa
dec
into
mov
es
popl
push
push
gs
cmpsb
and
add
dec
xor
stos
xor
xlat
fsubrs
and
sub
stc
fsubs
ss
fs
jecxz
mov
clc
lidtl
jle
mov
push
jae
std
ja
mov
mov
and
cmp
cltd
xor
push
jnp
mov
call
mov
mov
aaa
jae
pop
jo
push
idiv
jge
push
js
clc
push
insb
and
sub
inc
adcl
xchg
and
ss
and
xlat
fiaddl
outsb
ret
gs
lahf
mov
sbb
movsb
out
mov
dec
daa
push
dec
push
ret
movsb
test
out
cltd
js
jo
push
cmp
push
push
inc
jl
dec
mov
add
adc
lods
and
dec
add
or
lea
test
ljmp
ret
pop
mov
xor
fsub
cltd
adc
testb
ficoms
fbld
int3
jb
mov
cmp
testl
es
aas
and
pop
mov
in
pop
pop
inc
mov
mov
ss
jecxz
jnp
jp
mov
xchg
mov
push
inc
ret
dec
sbb
lret
mov
mov
in
rolb
icebp
mov
mov
dec
jae
js
sarb
or
sub
push
mov
push
mov
jle
dec
jnp
out
xchg
shrb
jne
data16
or
int
icebp
add
shrb
adcb
cmp
cld
jns
push
scas
inc
je
aad
add
push
xchg
lods
aaa
outsb
or
lods
cld
xchg
sub
push
fisubs
sub
adc
inc
adc
loop
xchg
div
jnp
rorb
out
jecxz
add
mov
es
nop
insl
xchg
rolb
xchg
fwait
adc
dec
adc
sbb
notl
and
push
pop
aam
jnp
mov
rolb
outsb
cmpsl
sbbl
mov
test
fmull
jge
out
push
xchg
sbb
cmp
movb
mov
cmc
push
iret
xchg
mov
pop
into
shrl
repnz
loopne
shll
out
loope
mov
jecxz
push
jo
call
stc
cwtl
dec
adcb
cmp
out
lret
adc
movsb
incl
pop
aam
mov
and
push
mov
jbe
sub
fnsave
das
lods
xchg
into
sahf
mov
add
ss
dec
lods
addr16
pop
addr16
mov
pop
insl
ficompl
nop
mov
jl
stos
in
and
adc
mov
mov
cli
leave
sub
push
push
and
sbb
xchg
push
ljmp
aas
sbb
movsl
pop
fiadds
adc
and
mov
push
dec
mov
lods
out
loope
hlt
rolb
sub
pop
dec
xchg
mov
jns
jns
pop
xchg
or
mov
jmp
xor
jns
sbb
mov
aaa
sti
test
mov
sub
mov
sbb
insl
and
add
sti
outsb
or
notl
or
pop
and
jg
ds
out
mov
mov
dec
addr16
in
xchg
cmp
iret
int3
adc
xor
push
dec
and
clc
in
inc
mov
jge
jmp
mov
push
bound
fwait
shrl
jb
xchg
aam
pop
jbe
push
and
lret
xlat
or
xchg
inc
cmpsb
leave
inc
push
clc
clc
add
mov
mov
jnp
test
push
cld
stc
fsts
or
xchg
cmpsl
mov
repz
call
int
xchg
fistpl
into
push
jne
jle
xlat
push
push
xchg
into
xchg
lods
icebp
jnp
sarb
dec
xor
mov
push
adc
fldcw
subl
mov
pusha
rorl
das
in
fsub
rcrl
daa
sub
mov
sti
les
adc
stos
stos
call
sub
mov
test
mov
or
pop
jo
fisubl
dec
stos
fildll
out
jno
or
sbb
pusha
enter
mov
shll
mov
jbe
jno
es
leave
stos
mov
sub
push
jns
add
xor
ds
lods
cmp
sbb
aas
pushf
mov
ss
push
pop
push
push
cmp
lock
lods
adc
xor
call
aad
mov
sub
xchg
mov
xchg
xchg
sub
mov
insl
js
sub
mov
cmp
sub
aad
mov
cltd
pop
loope
and
insb
and
pushf
cmpsl
loope
scas
dec
jnp
sbb
shr
frstor
xor
fldt
lods
lods
or
fs
push
mov
or
sub
sbb
fidivs
push
adc
repnz
xorb
fs
rcrb
nop
push
sarb
pop
daa
icebp
pusha
int
sbb
pop
in
push
inc
jnp
stos
pop
sbb
jge
mov
sti
das
push
fcmovbe
pop
outsb
std
scas
mov
jg
xchg
mov
negl
fcmovnu
xchg
ja
mov
into
pop
lods
jl
mov
mov
adc
xchg
cltd
sub
lods
repz
mov
add
mov
jecxz
sub
push
nop
fsubr
aas
out
hlt
push
hlt
mov
int3
add
lods
push
dec
sti
sarb
pop
mov
add
or
jge
fwait
incl
sbb
cltd
jno
add
mull
jnp
cmpsl
inc
push
mov
sbb
jo
test
pop
dec
jecxz
clc
add
lods
cmp
repnz
sbb
aas
sbbl
aaa
sub
mov
out
jle
inc
mov
cld
xor
inc
loop
dec
jle
jns
es
rorb
loopne
mov
pop
cmp
popf
cmpsb
stos
add
in
rcr
pusha
fidivs
in
popa
push
xor
pop
xchg
dec
adc
pop
xor
clc
andl
mov
or
pop
imul
inc
xchg
xchg
ret
xor
push
cmp
nop
dec
adc
call
fstpt
aas
movsb
mov
mov
test
jbe
xor
outsl
out
xchg
dec
out
xchg
imul
xor
je
in
fnstenv
mov
xchg
jle
mov
lods
sti
ret
xchg
clc
and
adc
push
sbb
adc
fwait
sub
cmp
dec
add
pop
adc
inc
insb
aad
in
jge
inc
out
leave
adc
jae
leave
lock
iret
pop
push
push
loope
ja
add
cmp
sbb
and
mov
mov
in
iret
xor
sub
pop
mov
js
inc
lcall
fsubrs
jl
inc
imul
ja
pop
jbe
pop
rcll
xor
movsb
lea
popf
xlat
and
outsb
inc
pop
xchg
xchg
mov
pop
inc
push
fmul
clc
imulb
lds
fwait
jle
test
mov
hlt
mov
jne
in
int
test
push
shlb
pop
test
inc
push
dec
mov
dec
add
and
mov
pause
stos
jo
ja
push
mov
sub
xchg
mov
inc
dec
mov
adc
outsb
and
popa
rorb
movsb
rolb
push
addr16
inc
inc
lods
lret
and
dec
je
add
call
cmp
repnz
inc
mov
jbe
loopne
jb
test
dec
and
jnp
inc
pop
ret
lea
mov
cmpb
jecxz
insl
in
adc
icebp
xchg
int3
jl
jne
push
iret
rorb
pop
mov
nop
cs
cmpsb
add
dec
scas
dec
jns
aaa
dec
aam
out
add
shrl
sbb
leave
jge
mov
add
sub
data16
pushf
adc
adc
jae
sub
popa
popf
stc
loope
xor
neg
xor
fs
dec
pop
aas
and
sbb
sbb
fwait
mov
pop
cmpsl
into
mov
fstl
call
add
jnp
sub
sub
jg
xchg
and
jbe
fists
ret
ss
fstpt
rorb
fucomp
push
subl
mov
pushf
push
jmp
and
or
mov
jmp
jecxz
jne
shl
add
ret
mov
xchg
in
out
jl
js
sub
mov
cmpb
push
flds
lods
push
mov
rorb
push
sub
mov
push
into
in
dec
test
jo
scas
fimuls
add
pop
xor
inc
mov
xchg
xchg
push
sbb
dec
sub
sbb
or
ds
js
out
xor
inc
cmp
stc
push
mov
mov
loop
fisubs
rcrl
movsb
dec
les
cmp
and
leave
push
push
jne
inc
jp
je
movsl
pop
inc
mov
add
movsl
mov
dec
jge
fcomp
jl
test
dec
imulb
sub
daa
rorl
arpl
xchg
mov
pop
ljmp
push
ljmp
std
fiaddl
mov
shlb
jmp
mov
ss
cli
addl
or
movsl
fdivrl
mov
call
push
dec
repz
mov
stos
push
xchg
lahf
fists
leave
hlt
jne
xor
ret
movsb
cmpsl
mov
pop
sub
ret
in
adc
int3
sahf
and
pop
pop
xchg
adc
add
adc
or
into
mov
dec
cmp
cwtl
enter
push
mov
inc
adcb
in
mov
jbe
pop
mov
fwait
lods
mov
cmpsl
add
sbbl
lds
pop
stos
aam
adc
jmp
add
in
pop
jae
dec
scas
or
jp
mov
andb
and
lret
push
push
pop
jmp
push
mov
imul
sbb
ss
push
imul
pop
sbb
mov
xor
pusha
jbe
stc
and
lea
mov
scas
out
pop
in
mov
xlat
inc
mov
clc
fisttpl
add
pop
pop
jbe
cltd
add
sti
movsl
leave
jb
cmpsb
xor
popa
sar
inc
ljmp
push
jb
cmp
add
andl
repnz
setae
mov
jmp
and
fstps
add
scas
pushf
mov
jb
and
xchg
xchg
jmp
negb
jno
pop
and
pop
cmp
adc
lahf
push
rcrl
outsl
cmc
loopne
in
pop
inc
loop
loope
repnz
sub
mov
adc
ljmp
push
jle
mov
sub
xchg
popa
call
jno
cmc
pop
lods
xchg
sub
ret
adc
aad
adc
mov
cltd
sub
sti
inc
js
cld
sti
and
ja
jbe
into
fdivl
popa
mov
sub
dec
pop
mov
ret
push
sub
add
adc
lock
fdivrl
cwtl
xor
cmp
outsl
adc
jg
mov
nop
fwait
mov
in
ds
mov
xor
test
faddl
jg
sbb
pop
inc
addb
popf
lods
pop
mov
mov
iret
test
push
repnz
xchg
mov
cmp
jecxz
pop
mov
fwait
lods
jp
int3
cmpsl
mov
xchg
dec
addb
es
iret
loopne
jae
enter
std
mov
insb
adc
add
xchg
fdiv
jbe
push
into
xchg
fidivs
xchg
xor
dec
mov
add
xchg
outsb
sub
loopne
fwait
call
cmp
mov
inc
movsl
cltd
push
jns
mov
sbb
cmp
add
hlt
test
add
push
testb
mov
jle
cmp
push
divb
jae
mov
lret
sbb
cmp
bound
sti
push
loope
add
or
loopne
xlat
jp
sar
lret
xchg
mov
cmp
and
mov
jbe
cmp
rcll
mov
sub
xchg
jbe
add
mov
push
dec
adc
ja
out
pop
fistpll
add
or
cmpsl
adc
add
iret
sub
cmpsl
fidivs
scas
push
mov
jmp
shrb
enter
or
mov
sbb
pop
out
cmc
cmp
icebp
push
xchg
cmp
dec
sbb
lea
pushf
sbb
sub
testb
fwait
std
cmp
sbb
int
test
ja
push
stos
lds
outsb
inc
int3
push
cltd
das
test
std
jb
mov
sahf
or
xor
fwait
xor
mov
fucomip
clc
add
out
popa
cs
ret
inc
push
xorl
pop
mov
sbb
xor
int3
sbb
insb
dec
xchg
sub
clc
push
subl
mov
cli
xchg
pushf
fscale
insl
inc
in
xchg
les
inc
adc
popa
or
pop
ficomps
loope
daa
inc
into
push
jb
sbb
xlat
lea
jmp
xor
jl
xchg
mov
data16
dec
lret
xor
es
fisubs
xorl
arpl
mov
or
out
rcr
add
jp
ljmp
int
dec
push
mov
or
cmpsl
jnp
mov
aaa
dec
std
sti
in
sbb
imul
repz
push
mov
or
lods
xor
cmc
mov
sbb
ljmp
sub
cmpsb
clc
dec
push
lea
cmp
xor
icebp
mov
xchg
cs
or
mov
and
std
jmp
popf
xor
into
lret
popa
arpl
adc
mov
mov
lcall
jle
mov
xor
je
lea
fdivs
sarl
lds
and
push
shlb
push
mov
pop
lods
fcoms
push
ja
xchg
push
add
je
inc
sbb
cs
xchg
push
and
fnstsw
adc
push
or
cld
sbb
les
xchg
push
and
mov
xchg
gs
push
scas
or
mov
cmp
gs
inc
push
or
int
xchg
add
cli
lock
loopne
loop
std
sub
ljmp
jno
sbbb
stos
in
lea
ret
push
lds
dec
xor
push
sbb
pop
sbbl
pop
adc
cmp
pop
repnz
jecxz
cmp
mov
and
out
inc
inc
stos
cmp
mov
sahf
mov
and
dec
orb
push
push
cmp
pop
inc
mov
jns
mov
push
aas
cmp
stos
imul
ret
clc
test
jb
popf
xor
loope
jmp
int
push
pop
mov
xor
cmc
sbb
setne
and
mov
lods
xchg
cmpsb
in
popf
push
daa
gs
lds
sub
mov
adc
xchg
jl
inc
push
sub
in
sti
push
push
aaa
insb
je
nop
or
std
in
sti
xchg
and
dec
xor
movsl
sbbb
aad
mov
roll
xchg
aaa
pop
jle
mov
mov
xor
fwait
or
call
inc
in
pop
mov
mov
cmp
push
jns
inc
sub
insb
in
inc
mov
push
adc
enterw
outsb
mov
adc
sbb
adc
jb
adc
bound
adcl
shrl
test
addr16
cmp
fstps
sbb
pop
stc
xor
int
dec
out
ror
into
stc
notb
cltd
scas
fstpt
adc
inc
lods
inc
sub
stos
dec
loope
add
sti
subl
lock
mov
imul
jno
in
xchg
push
jo
negl
cmp
fstcw
push
mov
pop
call
cs
jnp
pop
cmovl
mov
jmp
or
fsubr
movsl
and
sub
fwait
inc
cmp
pop
sti
frstor
aaa
inc
rorb
xchg
pusha
xor
std
or
push
leave
jne
jp
mov
out
daa
or
insl
mov
sub
leave
hlt
pop
jge
dec
adc
roll
xor
dec
xor
ret
dec
dec
rorb
shl
insl
push
mov
cld
dec
stos
out
xor
dec
cmp
inc
icebp
dec
mov
imul
nop
jno
jne
push
sbb
enter
outsb
jmp
iret
push
fnsave
pop
popf
fucomp
cmp
test
cmpsb
mov
lret
inc
sahf
mov
mov
jno
in
mov
ficoml
test
and
mov
loope
jno
shrb
inc
fnstenv
test
adc
push
std
cmp
fstl
dec
aad
sti
in
or
enter
dec
push
dec
jge
cmp
push
mov
cmp
adc
dec
pushf
mov
roll
add
or
sbb
inc
pop
jl
cmpl
test
shlb
cwtl
jb
int
xchg
scas
inc
fwait
jg
lock
pop
sbb
adc
jae
incb
mov
add
dec
aaa
jmp
mov
push
shrb
xor
pop
pop
test
pop
pop
cwtl
aaa
ret
or
cmp
xor
sahf
insl
mov
push
cmp
sbb
inc
xchg
push
lcall
jge
pop
addr16
or
sub
jnp
or
aad
lret
jmp
cltd
test
jb
sub
adc
xchg
push
iret
inc
or
mov
mov
pop
push
xchg
xor
in
and
int
fsubrl
cmpb
stc
hlt
jg
xchg
adc
pop
insl
mov
mov
cwtl
outsb
mov
dec
adcb
test
subl
insb
fucomi
je
test
jl
divb
sub
push
test
lcall
pop
loopne
outsb
dec
outsl
add
sub
cmp
getsec
aad
mov
sbb
jmp
les
dec
jl
call
les
je
insl
inc
or
or
cmc
test
mov
dec
mov
xchg
mov
andb
push
add
xchg
loope
dec
sbb
add
dec
lret
and
jg
rol
lds
es
pop
mov
arpl
lods
movsb
add
jns
enter
dec
xor
and
icebp
rorl
shll
dec
scas
movsl
mov
imul
push
aam
push
std
mov
dec
test
adc
xchg
inc
imul
outsb
push
fisubrs
out
sub
fldenv
mov
je
gs
pop
out
fistpl
pop
scas
adc
enter
out
cltd
lahf
push
fcompl
adc
pop
aam
leave
mov
jp
inc
add
mov
xchg
sub
cli
mov
fnstenv
adc
jmp
sub
and
hlt
and
xor
pop
dec
ja
pop
pop
inc
int3
aad
outsl
mov
pushf
lcall
movsb
cltd
jg
imul
outsb
call
pusha
jns
pop
movsb
cmp
mov
lea
dec
add
mov
sub
aam
jne
test
cmp
mov
fwait
push
je
dec
ror
loopne
std
js
mov
cmpsl
push
or
sbb
fsubr
inc
add
jle
movsl
cwtl
icebp
push
fstl
fs
pop
movsl
and
jl
loope
pop
inc
pop
mov
je
add
scas
mov
outsl
inc
xorb
jnp
fwait
aas
mov
xchg
repnz
sub
leave
stos
shrl
dec
mov
and
and
or
in
sbb
add
push
pop
inc
inc
cmpsl
mov
mov
icebp
popf
mov
sbb
fcomps
cmp
adc
leave
jo
adc
and
enter
push
pusha
xlat
testl
cmp
lahf
mov
cli
stos
outsb
popf
cld
push
xchg
pop
fistps
fistps
xor
dec
push
push
push
pushf
jbe
mov
inc
lcall
lret
aad
push
and
shlb
int3
cmp
xor
add
and
test
adc
shr
add
ja
jae
imull
add
mov
push
loope
rep
imul
pop
daa
repz
mov
ret
pop
or
mov
addr16
or
pop
adc
fs
sub
dec
xor
xor
ljmp
rcrl
rdtsc
mov
sbb
loopne
mov
xor
cmp
pop
mov
ds
aam
jb
jne
mov
xchg
in
and
loope
sub
xchg
lds
xchg
push
aas
dec
xor
sub
add
jg
loope
mov
pop
cmp
jle
ret
inc
cmpsb
sbb
mov
out
add
in
int
mov
aaa
dec
push
inc
jo
lahf
jbe
pushf
jae
inc
pop
jmp
shlb
into
adc
cmp
fwait
inc
add
jo
dec
cld
xchg
ret
push
xor
lahf
mov
jne
cwtl
inc
jp
ret
movsl
add
mov
sbb
popa
xchg
or
add
lods
or
xchg
andl
in
or
cwtl
test
mov
jmp
ss
mov
cmp
lret
push
fldl
leave
je
or
fbld
fdivrl
into
rorb
bound
pop
test
mov
jne
or
repz
push
mov
pop
mov
std
pop
inc
pop
mov
mov
inc
adc
lods
ja
mov
cwtl
sub
mov
aaa
and
and
fimull
and
in
pop
addl
repnz
mov
xor
daa
into
push
add
xchg
inc
or
push
xchg
js
xchg
push
pop
loop
out
ss
fsubl
fmull
pop
mov
pop
sub
je
ljmp
mov
les
sub
add
pop
daa
add
ret
xchg
mov
push
mov
xchg
and
sbb
mov
sbb
add
and
imul
sbb
outsb
add
popa
lahf
jle
cli
sbb
mov
out
add
sub
mov
into
add
dec
mov
and
outsb
call
imul
jg
mov
push
fldenv
cmp
push
les
icebp
in
hlt
pushf
jnp
pop
mov
divl
mov
mov
mov
add
leave
popa
jo
jecxz
leave
sahf
pop
xlat
outsl
aam
sub
inc
xchg
data16
notl
imul
push
in
lds
into
ljmpw
movsb
xor
mov
scas
mov
sub
adc
dec
and
pusha
mov
stc
pusha
movl
add
lock
ljmp
sbb
repnz
xor
push
jo
add
or
inc
pop
jbe
cwtl
lcall
mulb
xchg
adc
je
out
mov
jo
out
or
movsb
loop
test
add
shlb
inc
imul
dec
rcrb
bound
shl
adc
fiaddl
xor
pop
sti
test
repz
inc
adc
repnz
sahf
jbe
mov
repz
fwait
ret
cmp
jge
test
push
push
cmp
mov
ret
adc
add
inc
inc
add
mov
aad
std
adc
fadds
int
inc
jg
jo
pop
scas
ror
add
cmc
mov
shr
or
mov
lahf
popa
jg
ds
jmp
je
lea
loopne
sub
addl
lea
mov
add
xchg
mov
adcl
insb
mov
mov
and
cld
sub
or
mov
push
hlt
jmp
mov
insb
or
fadd
cmp
mov
push
dec
inc
out
dec
jo
rcrl
pop
imul
lret
ljmp
lret
pop
pop
push
fmuls
int3
mov
rorb
xor
add
adc
mov
sub
inc
incb
ja
mov
push
shlb
cmpl
mov
cld
ret
mov
lods
icebp
jle
gs
int3
iret
push
xchg
mov
nop
push
daa
push
lahf
inc
xchg
sbb
pop
jg,pn
cltd
add
dec
cmp
cmp
scas
sarb
pop
loope
mov
mov
and
mov
sbb
xchg
andl
pushf
or
mov
xor
pop
std
xor
add
cmpsb
xchg
push
daa
dec
out
pusha
inc
cwtl
lret
adc
inc
pop
dec
negl
cmp
mov
sub
mov
jmp
stc
int3
fsts
cmp
adcb
lods
pop
dec
or
sub
cltd
pop
cltd
xchg
scas
test
mov
mov
adc
lock
daa
inc
outsl
add
mov
inc
and
shrl
cmc
fiadds
outsb
and
jge
dec
loop
lahf
jnp
fildl
sub
addl
and
fcmovnbe
movsl
jmp
and
and
and
hlt
or
mull
daa
loopne
push
call
aas
lea
mov
cmp
fmull
push
lcall
xor
adc
test
sbb
xchg
lcall
mov
and
and
test
leave
sbb
sti
dec
mov
test
adc
sbb
test
jg
mov
cmpsl
repnz
mov
pop
outsl
in
jnp
lock
dec
mov
mov
cmp
repz
xchg
jb
insb
les
xor
gs
cmc
push
mov
pop
xor
push
xchg
cmc
add
cmp
mov
sbb
or
pushf
jecxz
ljmp
xchg
pop
test
shll
ficompl
mov
jbe
cli
mov
stos
jmp
dec
push
test
mov
daa
imul
cmpsl
jns
xchg
cmp
inc
pop
aam
mov
pop
loop
out
lods
stos
sub
sbb
imul
adcl
xor
jbe
call
or
int3
mov
rcl
aam
inc
xchg
fistl
icebp
bound
and
push
cmp
mov
push
jmp
cmp
cli
sbb
push
aam
mov
sub
pushl
stc
cmpb
je
jae
sub
outsb
fildl
popf
inc
push
mov
jge
sbb
jne
dec
push
call
xor
test
scas
mov
mov
jl
mov
xchg
cmp
inc
mulb
out
cwtl
and
sbb
mov
stos
sbb
inc
and
cmp
cmpsl
lahf
push
sub
pop
das
push
inc
in
pusha
fsubrp
and
jge
xor
fidivs
popl
pop
xorl
or
pop
mov
pop
mov
jno
in
push
push
mov
push
int
push
jmp
inc
inc
aam
cmp
cld
test
fiadds
sbb
xchg
lods
or
in
rcl
fstl
cmp
mov
es
outsb
cmp
out
sti
aaa
adc
mov
mov
mov
adc
pusha
bound
dec
aas
xor
andl
jge
cmp
hlt
and
mov
push
sahf
aaa
ja
imul
add
xor
bnd
out
pop
popl
das
out
cmp
sbb
add
gs
cwtl
int3
inc
movsb
clc
lock
das
push
shlb
les
mov
cmpsb
mov
loope
jno,pn
sbb
data16
scas
mov
adc
sub
sbb
aas
test
jb
iret
sub
fsubrs
pop
xchg
and
iret
mov
lahf
clc
clc
xchg
stos
jae
jmp
cmp
sahf
cmp
lock
pop
leave
in
mov
dec
add
ds
or
cmp
push
lret
ds
pop
fsubrs
cmp
pop
lods
push
dec
dec
in
mov
fmull
cmpsb
fsub
loopne
sub
inc
ret
outsl
pop
inc
es
js
mov
cmp
sbb
adc
cli
popa
push
sbb
cmpsb
jecxz
pop
rcll
imul
cmpsl
les
pop
daa
idiv
pop
fsubrl
sub
inc
jae
cmpl
jo
shrb
rolb
lahf
xchg
and
xchg
mov
inc
sub
cli
or
addl
shlb
icebp
sahf
and
imul
out
sbb
ficoms
orb
fiadds
xor
mov
pop
imul
pop
inc
sub
jg
push
ret
xchg
cmp
addr16
inc
test
xchg
pop
jp
dec
aam
sbb
icebp
jb
fnsave
into
jecxz
jle
add
dec
lahf
mov
sbb
in
add
movsb
dec
sbb
xchg
mov
mov
inc
les
mov
push
imul
sbb
xlat
imul
inc
jb
xchg
mov
lods
fmull
cmp
dec
mov
pusha
push
in
nop
jle
stos
faddl
sub
sbb
in
ja
sbb
loopne
adc
in
repz
insb
rorl
lret
mov
pop
and
shrl
mov
mov
ss
loopne
insl
scas
outsl
mov
mov
je
ss
jae
and
mov
popf
aaa
mov
push
mov
inc
lods
ja
jne
sbb
mov
ret
fiadds
pusha
je
subl
cmp
fdivp
dec
sub
mov
aaa
addl
inc
fistpl
and
inc
push
and
fldl2e
lods
adc
dec
pop
push
pop
sbb
mov
push
lods
inc
clc
fldcw
cmc
nop
xor
jl
mov
sbb
cmpb
addr16
sarl
gs
xor
adc
leave
popa
aaa
out
sbb
mov
sub
jmp
aam
movb
add
add
or
mov
enter
pop
adc
push
fistpl
fisttpl
aad
push
cmp
mov
outsb
sahf
outsl
neg
sbb
cmp
ss
rcll
cmp
nop
test
push
filds
add
or
mov
orb
cmpsb
xor
cmp
outsl
lds
arpl
sub
out
xor
xchg
sbb
push
fstps
mov
dec
sub
pmaxub
scas
mov
or
popf
outsb
inc
repz
add
stos
xchg
es
fsubrl
out
jp
dec
arpl
mov
ret
mov
jecxz
ret
fadd
jl
or
test
loope
pop
jbe
mov
arpl
mov
xlat
in
xchg
mov
or
cltd
test
loop
add
xchg
int
mov
push
and
ret
and
sub
jmp
lods
dec
scas
xlat
mov
movsb
inc
xor
push
pop
jno
pusha
xchg
mov
xchg
push
test
lods
dec
pusha
stos
mov
cmc
dec
inc
and
add
adc
int3
sahf
lods
xchg
stos
push
sub
add
or
dec
jmp
pop
sub
add
stc
into
fwait
test
dec
mov
ret
jne
scas
xlat
hlt
rcll
cmp
roll
xchg
addr16
daa
scas
pop
dec
in
icebp
inc
push
cmp
stos
lcall
sbb
ds
sub
jno
mov
movsl
push
push
jg
dec
mov
or
mov
sbb
iret
out
sbb
movsl
add
xlat
addr16
inc
adc
rcrl
push
inc
scas
or
pop
mov
xlat
outsb
sbb
mov
mov
fiaddl
fmulp
xor
cltd
and
mull
lods
pop
cmp
notl
xor
stc
pop
pop
stos
addr16
ficompl
sub
rcr
xchg
pop
jae
mov
imul
inc
jb
jno
mov
idiv
je
movsb
lods
sbb
cmp
int3
dec
insl
jae
imul
mov
decb
cs
rorb
orl
movsl
fbstp
jne
cltd
imulb
sub
mov
and
call
imul
fsubrl
out
psubsb
clc
pop
jae
push
pop
stc
into
mov
jno
sub
jle
or
push
lods
imul
add
sar
ret
push
imul
xor
and
inc
js
aaa
test
mov
push
push
aas
int3
or
sti
adc
add
pushf
gs
aam
lret
nop
mov
in
outsl
pop
sub
repz
inc
mov
das
sub
ds
js
pop
dec
idivb
fs
push
or
in
hlt
and
sahf
jg
lods
fistpll
and
mov
mov
fistps
filds
aam
xchg
shufps
ss
inc
lods
pop
jne
inc
inc
jmp
hlt
dec
cltd
movsb
sub
notl
push
jbe
jbe
xchg
mov
aas
mov
or
cmpsl
jno
inc
mov
ss
repnz
cltd
pushf
mov
mov
ret
add
shll
hlt
mov
decl
inc
sbb
fs
mov
mov
jp
icebp
mov
xor
mov
pop
mov
hlt
xchg
ljmp
push
mov
pop
push
xorb
je
ret
push
mull
leave
cmp
cmp
adc
clc
cmp
push
xor
add
jnp
cmp
pop
dec
push
jo
dec
imul
add
mov
pop
movl
mov
and
cmp
xchg
push
dec
es
pop
and
mov
loop
and
cli
add
or
es
add
mov
mov
mov
jne
inc
call
or
sbb
ret
and
adc
pop
mov
rcrl
daa
mov
cmpsl
and
into
xchg
cmp
push
adc
gs
bound
bound
sub
adc
ss
fisubl
outsb
and
movsb
sahf
add
mov
popa
cmpsl
fimuls
in
mov
pusha
pushf
jb
pop
movb
stos
adc
enter
pop
add
loop
pushf
push
inc
outsl
inc
adc
sahf
mov
mov
pop
dec
jo
pusha
mov
sbb
adc
daa
sbb
daa
lods
cltd
loopne
or
mov
addr16
xor
mov
fnstsw
pop
xchg
dec
repz
jmp
xor
popf
cmp
or
cmp
inc
pusha
push
and
xchg
xchg
mov
xchg
cmc
push
jp
popf
flds
sarl
rcr
xchg
insb
lds
inc
mov
ljmp
ja
mov
shrb
inc
pop
cmp
jns
shll
mov
test
inc
cmpsb
test
pop
testb
test
mov
mov
or
ret
int3
mov
xor
stc
cmp
xchg
pop
push
sbb
aaa
lret
inc
popf
adc
fisubrs
addb
imul
inc
movb
adc
or
pop
or
sahf
mov
inc
push
stos
roll
daa
lret
in
mov
aad
add
sbb
stos
xchg
mov
jb
add
mov
je
push
inc
xchg
cmpsb
and
movsl
dec
fstps
aaa
andl
mov
outsl
dec
jp
loopne
mov
mov
inc
inc
dec
scas
insb
adcl
int3
decb
ret
xor
insb
sub
pop
pop
cmp
jp
pushf
mov
ss
mov
adc
arpl
ja
pop
aad
xor
mov
lahf
incl
incl
aam
dec
push
ja
loopne
rcl
mov
dec
andl
inc
sub
mov
daa
sub
sbb
in
cs
dec
and
iret
sbb
dec
sub
mov
add
andl
test
iret
pop
mov
push
mov
adc
inc
aaa
scas
popf
inc
adc
xor
rcrb
fcomip
mov
movsb
xlat
in
in
mov
pop
push
mov
mov
mov
out
dec
xor
hlt
push
xlat
cmp
jbe
scas
mov
lahf
push
loopne
inc
movsb
inc
movsb
cmp
jp
adc
mov
das
fisubrl
shrb
sub
adc
jno
stc
inc
sbb
adc
cld
outsl
sub
cmpsl
test
add
mov
mov
ret
lods
dec
jne
pusha
add
insl
out
movsw
mov
inc
jl
dec
in
rol
decl
roll
imul
clc
add
adc
out
cmc
mulb
mov
sub
mov
or
or
js
cmovae
jmp
push
fmuls
out
andb
cmc
xor
shlb
jae
imul
sti
jne
icebp
pop
jbe
out
int
pop
push
data16
imul
mov
and
xchg
loop
mov
dec
jb
mov
rcrb
sub
aad
adc
fldcw
aam
and
nop
xor
and
inc
jmp
in
fwait
or
mov
sbb
mov
cmp
hlt
sbb
bound
fildl
mov
mov
cmpsb
popa
data16
xchg
fstl
pop
test
or
orb
jno
lea
mov
in
pop
lret
into
cmp
jg
mov
jecxz
jns
dec
sbb
test
fdivl
in
lods
fs
dec
repnz
loopne
dec
dec
jbe
or
jmp
dec
loop,pn
jmp
cli
imul
mov
aam
jl
fists
stc
jbe
and
dec
test
dec
shrl
shrl
mov
cmp
pop
pop
movsb
fmuls
mov
mov
xor
icebp
pop
inc
icebp
pop
jl
or
cwtl
sub
pop
inc
push
sub
push
enter
pop
inc
adc
rolb
aas
xor
aad
pop
push
adc
xchg
out
mov
lea
push
push
and
jle
push
inc
clc
int3
mov
rcrb
cmp
lcall
ret
pop
mov
cmp
call
mov
sub
xor
push
add
lea
inc
lret
jmp
sub
or
call
rclb
scas
int3
jbe
lock
pop
into
loopne
mov
hlt
mov
popf
sbb
mov
jmp
inc
cmpsb
pushw
lcall
rcl
mov
pop
jge
jg
mov
jecxz
pop
lahf
mov
jb
fsts
mov
and
mov
jbe
or
add
ja
sub
imul
inc
xchg
imul
faddp
jle
jmp
push
xor
push
inc
jo
cli
loope
push
outsl
lahf
jecxz
xor
mov
repnz
and
clc
xor
xor
xor
or
mov
sbb
mov
inc
pusha
das
in
shll
cli
pop
cmc
into
popf
idivb
push
jge
out
out
push
scas
stos
loopne
inc
push
mov
mov
sub
add
jbe
cmp
mov
js
and
cmpsl
xchg
test
jne
dec
or
push
lret
adc
add
jl
mov
shrl
int
cmp
inc
lcall
gs
add
mov
mov
dec
mov
jmp
sbb
clc
sar
fmull
mov
mov
fdivs
loop
mov
inc
aam
xor
mov
jp
sahf
sbb
mov
cmp
sub
xchg
cli
add
cmp
in
pop
cltd
jmp
pushf
dec
jmp
mov
mov
xor
repnz
aas
rclb
or
jmp
jnp
cwtl
fdivrs
aaa
jle
inc
push
adc
fs
arpl
mov
scas
bound
xchg
mov
mov
add
jo
std
ss
test
mov
add
push
cmp
pop
cltd
or
mov
sub
insb
jg
dec
cmp
lcall
in
iret
jp
lods
add
pushaw
mov
mov
shl
iret
rcrl
pop
sub
jg
icebp
add
mov
jp
hlt
rcrl
cmpsb
into
pop
mov
ret
cwtl
lods
dec
lods
insb
iret
and
xchg
xchg
ljmp
push
jbe
pop
js
mov
xchg
test
mov
repnz
mov
push
pop
outsb
outsl
push
arpl
inc
dec
addr16
cmp
mov
out
push
stc
mov
dec
les
int
ja
gs
cli
insb
rolb
lret
pop
cmpsl
jbe
push
jle
mov
mov
sbb
lret
dec
mov
cmp
fists
sahf
js
mov
pop
and
test
in
inc
fcmovb
mov
mov
outsl
cli
jae
or
adc
inc
test
inc
adc
leave
les
cli
jne
pop
ret
mov
insl
cli
add
and
das
call
or
xchg
pusha
aam
xlat
pop
fists
or
test
sub
mov
ljmp
fwait
xchg
cmc
push
pop
and
and
mov
outsb
inc
sub
out
mov
mov
pop
es
shl
das
sub
adc
rorl
cmpsl
pop
rcll
mov
testl
mov
mov
pop
mov
jmp
xchg
outsl
out
les
cmc
mov
int
in
push
and
xchg
inc
jmp
add
aad
cmp
add
mov
lret
sbb
aad
add
pop
mov
js
and
inc
popf
addr16
xchg
fwait
push
jae
jle
mov
mov
mov
xchg
data16
stos
jne
cld
gs
or
xlat
js
hlt
jg
push
push
adc
jp
orb
ja
cld
or
je
cmc
mov
mov
or
fldcw
loopne
push
sub
jp
jne
or
in
das
jle
scas
mov
inc
stos
popa
mov
sub
adc
xchg
cmpl
lahf
or
aas
jge
mov
js
jecxz
imul
sbb
push
push
jmp
sbb
daa
mov
mov
sti
jbe
sub
mov
shlb
dec
pop
add
dec
div
adc
cmp
pop
sub
loopne
scas
cmp
icebp
mov
sbb
ss
fstps
scas
stc
mov
mov
jns
call
out
fwait
sti
cmp
dec
sub
cmpsb
cmp
lea
lss
int3
cld
push
movsl
in
das
aaa
jmp
rcl
mov
cld
rcrl
jae
sbb
out
jp
lahf
pop
in
in
sub
jno
sbb
inc
sub
push
stos
push
xchg
into
enter
cs
imul
fsubl
push
push
pop
mov
jb
pop
cli
lcall
insl
das
pusha
sub
push
inc
das
xor
js
xlat
fdivp
shlb
inc
outsl
insb
je
loopne
insl
xor
das
outsl
rclb
cmc
int3
scas
adc
push
outsb
aaa
mov
adc
sub
inc
xor
loop
push
mov
adc
in
add
cltd
xor
cmp
sbb
in
push
lret
xor
jo
inc
lret
fidivs
xor
add
pop
test
xlat
xor
pop
loop
imul
push
ljmp
and
cmc
mov
sub
cmp
add
fstpl
mov
loope
xor
adc
mov
sub
popf
mov
mov
negb
pand
test
stc
inc
bound
movsl
cli
iret
daa
and
test
jmp
sub
xchg
push
xlat
mov
or
mov
loopne
dec
sahf
mul
or
fcoms
inc
push
fldenv
movsl
je
mov
sti
sub
rcr
inc
add
cmp
xchg
ret
arpl
scas
mov
sub
lret
es
dec
xor
ds
adc
inc
std
sbb
sub
in
push
adc
cmp
outsl
ss
mov
je
xor
in
fstpt
pop
ljmp
lea
pusha
arpl
fiadds
pop
test
test
in
repnz
jnp
idiv
xchg
jo
icebp
push
sub
pop
sub
add
sub
sti
pop
daa
dec
add
repnz
stc
push
lock
sub
dec
mov
dec
insb
movsl
ljmp
xchg
fcoms
es
lret
mov
sbb
mov
jge
test
shlb
cmpsb
icebp
or
inc
or
testb
orb
dec
xor
adc
add
xchg
or
or
roll
jns
jle
test
scas
xor
popf
scas
repnz
notl
sub
les
sbb
int3
cltd
pmulhw
sahf
jns
xchg
mov
out
loop
aaa
add
xchg
inc
sub
test
andb
adc
mov
idivl
cmpb
out
ss
jo
filds
js
mov
xchg
repz
ret
enter
dec
call
daa
in
or
mov
daa
orb
cmpsl
cli
ss
mov
inc
loopne
cmc
mov
lea
push
jge
inc
addr16
imul
les
out
clc
xor
jmp
popa
add
and
inc
lods
or
jnp
jne
subl
push
in
inc
adc
add
inc
lock
pop
sbb
outsl
jno
imul
out
jbe
rol
loopne
mov
les
je
shlb
xchg
xchg
mov
out
je
insl
nop
clc
test
jb
push
sbb
rcrb
inc
movsl
push
push
xor
ja
adc
adc
rol
test
mov
mov
pop
cltd
lods
in
mov
js
lcall
mov
xor
mov
sbb
mov
or
mov
and
repnz
mov
pop
ficoml
xor
dec
cmp
mov
fmuls
movsl
push
repz
outsl
stos
imul
in
mov
fisubs
into
loop
in
loopne
sti
push
ja
mov
enter
cmpxchg
pusha
mov
lock
sti
add
roll
in
cltd
and
push
xor
sbb
call
mov
ret
push
mov
loop
shl
ljmp
or
roll
scas
scas
aas
ficoml
shr
lea
mov
add
cmp
inc
xchg
mov
sbb
jmp
mov
xorl
fcomp
es
bound
jp
insb
mov
scas
xor
gs
xchg
scas
hlt
adc
lods
roll
xchg
test
lret
insl
adc
out
fwait
ja
fucomi
add
test
rcrb
popa
scas
imul
sbb
test
dec
add
jge
dec
sbb
data16
fdivrs
inc
sub
xlat
mov
adc
add
sbb
rolb
ret
sub
mov
fwait
cli
sbb
or
inc
adc
and
or
lds
xchg
sarb
or
clc
js
xchg
mov
jmp
mov
pop
cs
mov
xchg
jnp
stos
adc
dec
ret
cli
jo
movsl
decb
xor
mov
repnz
pop
mov
in
shll
data16
adc
rcrl
xchg
shlb
and
jecxz
push
fcomps
addr16
dec
xchg
stos
lods
out
xchg
mov
pop
stos
mov
inc
dec
dec
rorl
loop
stc
add
enter
lds
mov
dec
rorb
cmp
mov
or
pushf
test
mov
sbb
cltd
and
push
aaa
addr16
jne
movsb
out
dec
mov
aaa
sub
jbe
jp
test
lahf
lock
xchg
insb
scas
push
adc
test
inc
popa
inc
fldt
pop
xchg
test
inc
xchg
push
sub
cltd
call
repnz
aas
xor
sub
xor
mov
movsl
push
jae
xchg
inc
inc
inc
mov
ret
xor
stc
inc
fdivrl
data16
xor
xchg
aaa
mov
iret
add
xchg
daa
jle
rcrl
sbbb
loopne
push
loope
pop
icebp
mov
xor
or
sub
sti
bound
xchg
in
push
or
push
push
push
push
fists
outsl
adc
sti
dec
cmp
dec
push
ss
push
lret
pushf
add
lret
nop
int3
dec
mov
lcall
ljmp
cmpsb
dec
xor
jnp
hlt
out
xor
std
sub
hlt
icebp
xchg
push
cmp
dec
cmc
jle
xor
insb
cmp
push
mov
cltd
enter
into
inc
pop
lods
enter
mov
das
xchg
and
mov
int3
imul
xor
nop
roll
pop
mov
sub
pop
adc
mov
pop
mov
sub
shlb
mov
cmp
int3
std
ja
mov
adc
pop
push
inc
loop
or
insb
mov
inc
mov
xchg
lahf
mov
rcrl
mov
jae
testb
sti
sti
aas
sarb
mov
dec
push
add
add
mov
test
push
fnstenv
xchg
dec
scas
fadd
clc
push
inc
mov
bound
cs
push
xor
add
std
fwait
jbe
xor
test
xlat
sbb
outsb
lods
outsb
mov
ss
repnz
jge
add
jmp
jb
pextrw
xchg
push
testb
xchg
fisubrs
push
cmp
push
repz
jbe
or
cmpsb
insl
or
js
jg
outsb
dec
push
or
popa
sar
sub
cli
insl
sub
sbb
leave
sub
mov
cmpsb
xlat
add
push
in
cmp
shll
ljmp
insl
cli
mov
leave
lea
lcall
inc
lret
push
or
push
aam
sahf
arpl
mov
rolb
push
mov
sub
out
sbb
or
inc
sbb
jl
inc
mov
sub
es
imul
arpl
lea
inc
andl
nop
mov
test
xor
int
sub
cmp
enter
sbb
mov
xchg
pop
movsb
xchg
pop
xlat
or
cmp
sahf
lods
sub
adc
push
xor
push
cmp
push
add
lock
sub
sub
stc
inc
shrb
jecxz
dec
insb
xor
sar
mov
out
andl
filds
sbb
sbb
fdivr
mov
xchg
lods
loopne
mov
or
in
les
adc
cmp
and
pop
in
test
into
push
pop
mov
jae
imul
sub
js
sbb
daa
fdivl
push
lds
push
mov
mov
pop
clc
add
fisubrs
xor
cmpsb
shll
lods
dec
sub
push
cwtl
lcall
in
mov
or
or
out
mov
bound
push
mov
xor
imul
adc
push
lods
xchg
push
into
cmp
scas
rcl
test
les
std
fmuls
cltd
les
inc
cld
sarl
incb
push
xchg
jl
call
js
pop
mov
cmpsb
mov
daa
lds
dec
jp
hlt
repnz
out
bound
mov
leave
shl
and
test
hlt
jae
inc
xor
jecxz
test
popf
popf
outsl
inc
and
pop
fcomps
repz
std
fidivrs
mov
or
sahf
push
popf
jle
sub
sub
or
mov
mov
mov
jl
mov
stos
mov
add
cltd
cmpsb
xor
stc
and
fstps
sub
cli
repnz
fldt
mov
aad
test
in
cmpsl
pop
imul
in
ss
jb
add
jae
ljmp
xchg
jp
loop
into
sub
push
subl
sub
clc
stos
jge
jle
adc
pop
mov
ljmp
jecxz
jecxz
imul
push
sbb
in
bound
arpl
add
icebp
push
push
jnp
ret
dec
and
xchg
mov
pop
mov
repz
ror
aas
scas
movsb
cmp
sub
ljmp
push
imul
mov
push
mov
andl
rcrl
pop
push
fdivp
pop
insl
pop
addl
add
hlt
cld
data16
inc
in
aad
sbb
xchg
sarb
mov
imul
push
cltd
aad
sbb
jge
cmp
mov
adc
push
cmpsb
lahf
test
mov
dec
and
enter
inc
or
pushf
fwait
cmp
dec
jle
dec
into
add
adc
dec
add
nop
xor
cmpsb
fsubrl
cmc
xchg
xor
inc
xchg
xchg
fnstsw
inc
fcmovnu
jae
push
jb
sbb
or
bound
push
push
inc
vhaddps
dec
fstps
sbb
pop
imul
push
loop
icebp
adc
mov
cmpsb
inc
mov
adc
daa
sbb
loop
fldl
out
shr
lods
push
ficompl
fidivrs
arpl
mov
pop
push
stc
cmp
pop
clc
fdivs
lods
lock
sub
inc
mov
sar
add
subb
fwait
gs
adc
cmovns
mov
inc
out
nop
add
xor
inc
mov
jnp
push
mov
dec
or
lahf
jecxz
fsubr
sub
dec
aam
mov
gs
cmp
dec
xlat
sub
add
push
inc
outsl
gs
jno
dec
lods
and
ret
xor
test
lods
pop
pop
mov
inc
mov
fldl
jbe
xor
and
fisubrl
in
pop
pop
sub
into
in
mov
jo
push
sbb
fs
add
adcl
jp
push
mov
roll
lea
add
cmp
inc
jne
call
ljmp
cmp
mov
in
mov
addb
out
and
divl
xor
pop
pop
jge
sub
sbb
sub
es
aam
or
push
stos
mov
ror
imul
inc
xor
push
int3
data16
mov
popw
js
ret
in
subb
mov
into
sub
movsl
jl
out
loopne
cmpsl
mov
and
insb
sub
adc
dec
sbb
cmp
hlt
cwtl
int3
test
aam
sub
mov
popl
jne
stos
jmp
xchg
xchg
pop
push
out
sub
fcomps
divb
ret
les
xor
mov
js
loopne
mov
inc
jo
sub
jge
xlat
xchg
xor
inc
cli
test
sarb
mov
jp
ja
movb
lret
scas
jb
lret
clc
jle
int
sbb
std
push
fbstp
xchg
ss
pop
lods
movsl
mov
mov
pop
push
xor
add
es
roll
ret
pusha
cwtl
dec
cmpxchg8b
jbe
lods
outsb
or
lret
pop
pop
mov
push
in
popf
jnp
push
pop
pushf
repz
imul
pusha
and
pop
mov
aad
lea
imul
ss
sbb
sahf
and
dec
or
push
mov
mov
out
sbb
cmp
pushf
outsb
scas
outsl
jecxz
outsl
lahf
push
sbb
loopne
loop
cld
push
jle
push
push
es
aas
clc
daa
andb
xorb
std
jnp
in
jno
loope
mov
dec
ret
imul
imul
imul
xlat
adc
jle
fsubs
pusha
aaa
pop
fwait
push
rcrb
insb
sub
movsl
loopne
loopne
dec
adc
dec
ficoml
sub
ja
mov
add
hlt
popf
sbb
pusha
push
mov
std
leave
les
push
jecxz
pop
aaa
xchg
sbb
cmpsb
popa
jb
ljmp
dec
lcall
adc
int3
or
leave
adc
and
and
push
scas
gs
and
lret
shr
out
das
and
pop
push
inc
mov
add
enter
add
sahf
out
popf
movsb
arpl
mov
enter
xchg
xchg
movsl
xchg
mov
dec
and
push
movsb
mov
nop
call
rclb
mov
mov
sub
ret
sub
fnstenv
insb
fcmove
repz
cmc
imul
add
mov
and
insb
pop
out
cli
and
cld
add
cmc
call
arpl
xchg
data16
pop
insl
popl
pop
imul
mov
jle
jl
stos
adc
fstpt
scas
push
lock
push
in
lods
dec
adc
inc
jl
fsubl
mov
push
mov
movsl
push
movsb
cltd
inc
mov
pop
mov
sub
xor
popf
or
out
push
push
sbb
sahf
mov
jae
push
cli
leave
or
xchg
push
aas
int3
cmp
daa
push
inc
ss
mov
jp
sub
dec
dec
aaa
lea
loope
test
jl
test
popa
mov
sub
jge
mov
pop
negl
fwait
in
test
jnp
inc
aaa
adc
cmp
test
fst
adc
mov
imul
test
ljmp
jecxz
xchg
sahf
adc
cwtl
pop
xor
cs
inc
xor
add
sbb
js
xchg
addr16
xor
cmpsl
dec
push
fiaddl
jns
ret
movsl
xchg
pop
jne
std
xor
pop
cltd
ret
mov
mov
frstor
sbb
dec
pop
call
dec
stos
push
lock
adc
mov
insl
das
dec
rorb
sti
test
icebp
sbb
mov
push
ret
or
cmpsl
pop
std
and
pop
sbb
cmpxchg
jge
mov
push
adc
mov
bound
sbb
bound
sub
enter
ret
push
ja
sub
push
xor
pop
enter
sub
imul
jo
jmp
and
rorb
xchg
movsl
push
aad
pop
dec
pop
pop
rorb
sbb
mov
leave
sahf
clc
call
add
adc
stc
pop
js
xor
and
mov
and
fdivrs
icebp
mov
stc
or
pushf
fsubl
jns
fistpll
cmpsl
cmpsb
jno
lahf
and
adcb
loope
xchg
push
jae
addr16
loopne
add
adc
enter
add
and
les
stos
addr16
mov
pop
inc
aam
cmp
lods
add
popf
ja
repz
dec
insb
out
push
outsl
xor
je
rorl
std
lret
scas
lahf
out
cmpsl
jno
mov
clc
xchg
int
sub
mov
sub
push
xlat
dec
add
pop
xchg
imul
jb
fs
mov
jne
test
cld
imul
mov
leave
adc
cltd
jle
jno
inc
scas
jno
pushl
clc
pusha
mov
jl
movsl
cmp
aam
loope
std
stos
add
insb
add
or
dec
loopne
jae
push
jno
jbe
and
jg
push
cld
xor
cld
cld
sub
pusha
xor
jnp
sbb
daa
xor
scas
popa
pop
xchg
icebp
mov
mov
jne
and
ret
sbb
call
rcrb
jge
push
rcrb
adc
lods
push
subl
cmp
outsb
scas
inc
ret
lods
push
xchg
stc
and
mov
inc
and
adc
or
stos
outsb
loopne
out
scas
fisubrs
fisubrl
jo
xor
pop
test
mov
enter
pop
push
insl
jnp
add
test
sbb
imul
mov
pop
lmsw
enter
in
and
push
jae
pop
sub
sub
addr16
and
cli
iret
mov
cs
aam
daa
fwait
dec
mov
sbb
stos
mov
lods
in
lea
pcmpgtd
pop
xor
cltd
lret
and
inc
pop
cmp
and
or
push
xchg
xchg
add
sub
loope
outsl
es
pop
lea
jp
xor
sub
mov
outsl
clc
pop
sub
lea
lods
insl
xor
inc
push
cmp
sbb
sub
das
push
xor
xor
out
ret
bnd
cmovge
push
outsl
hlt
test
stos
mov
xchg
inc
dec
mov
lock
xor
push
pop
inc
or
push
sub
stc
xor
jle
or
xchg
sub
mov
xlat
loopne
pop
pop
push
int
je
movsl
pushf
push
sub
je
sti
fiadds
mov
cmp
rclb
in
adc
fiadds
mov
jb
push
inc
arpl
mulw
xor
ficompl
sbb
stos
inc
and
insl
cmp
pop
inc
js
mov
mov
in
xchg
nop
pop
xor
dec
cmp
out
mov
cmp
daa
sub
pop
mov
lds
icebp
push
xchg
outsl
push
xor
add
shrl
push
test
xchg
xchg
push
inc
jg
sub
add
and
shrb
daa
pop
sub
xor
xor
dec
push
mov
mov
data16
out
imul
insb
add
hlt
clc
mov
push
xor
xchg
idiv
mov
in
sahf
ret
lods
or
xchg
mov
mov
dec
jmp
jno
rcrl
scas
pop
pop
addr16
adc
add
and
mov
aam
xor
pop
int
sub
push
and
sub
scas
inc
movsb
push
stc
xor
clc
pop
lcall
sbb
mov
int3
scas
enter
test
inc
cmpsl
andps
stos
or
mov
inc
xchg
sti
fdivl
jecxz
cld
mull
push
cmp
insb
pop
and
scas
mov
push
sar
out
pop
ret
mov
jecxz
sbb
icebp
dec
cmp
aaa
fcmovbe
inc
xorl
jg
or
jecxz
dec
xchg
hlt
test
lret
stc
pop
jns
or
cmpsl
aam
out
loop
lcall
insl
push
loope
clc
sbb
loop
mov
mov
pop
fnsave
xchg
pop
orb
sbb
gs
mov
xchg
jge
rorb
sbb
push
or
jne,pn
jl
repz
mov
cmpsb
adc
nop
cmp
jae
scas
dec
or
dec
arpl
sbbl
pop
out
gs
mov
xorps
pop
xchg
adc
and
push
sub
xor
pop
xchg
test
hlt
sub
loop
repnz
xor
dec
jge
outsb
imul
shlb
out
xchg
out
fwait
dec
mov
pop
aad
shlb
mov
xchg
ja
mov
xchg
out
jne
dec
add
mov
sub
lods
add
ret
rorl
cs
and
cmpsl
xor
dec
lds
lock
movsb
testb
fisttpll
xor
fcomip
stos
mov
subl
fxch
mov
sbb
pop
lcall
adc
ss
and
mov
pop
lret
or
fstpl
adc
xor
and
das
cmp
insb
movsb
xor
icebp
mov
xchg
mov
outsb
inc
scas
inc
int3
push
mov
mov
xchg
imull
inc
sti
popa
sbb
cmp
cld
ja
in
cmp
ljmp
lret
or
jp
cld
imull
add
sbb
nop
dec
dec
stos
add
stos
pop
fstpl
mov
ja
or
mov
std
pop
loopne
subps
xchg
ret
inc
movsl
dec
or
gs
sbb
inc
or
mov
imul
aaa
decl
test
jae
xor
mov
cmp
jno
out
xor
adc
cwtl
mov
lret
add
pop
lahf
mov
outsb
pop
loopne
in
xchg
daa
into
mov
mov
cmpsl
cld
jb
or
out
mov
or
outsb
bswap
lea
shr
nop
xor
xchg
pop
das
leave
nop
out
leave
push
lods
and
mov
pop
stc
clc
inc
mov
std
cmp
mov
lret
lods
add
adc
into
inc
xor
push
and
fdivrl
push
ss
dec
jae
std
or
or
lock
sbb
arpl
xchg
xchg
mov
idivl
jns
sbb
inc
mov
jo
fcmovnb
repnz
mov
scas
mov
mov
push
data16
insb
xchg
mov
std
mov
mov
dec
xchg
push
loop
lods
add
int
les
pop
test
cs
scas
loopne
lret
and
ljmp
push
out
fsubl
and
jnp
test
orb
and
lret
xchg
js
mov
mov
dec
mov
ret
mov
ficoms
mov
mov
pushf
xorb
out
shl
xor
mov
mov
in
es
das
sub
outsb
pop
and
push
mov
iret
add
fmul
pop
pop
mov
int3
or
ljmp
cld
rorb
dec
adc
xor
ja
inc
sbb
xchg
ja
mov
ss
add
mov
jl
jl
sbb
int
xchg
add
push
inc
dec
xchg
jno
repnz
fstl
lcall
mov
mov
xlat
push
push
test
mov
or
push
push
ds
jns
jo
cmp
adc
xor
pop
fmuls
jl
jae
inc
inc
xor
mov
adc
pop
mov
imulb
jle
iret
inc
add
test
jne
loopne
lret
xor
dec
aad
std
sub
xchg
int
int
mov
shrb
jae
cwtl
or
int3
ljmp
ret
cmovl
pop
and
and
mov
mov
ficompl
xchg
mov
fucomp
mov
pop
cmpsb
xchg
enter
xchg
shrb
jne
or
mov
in
add
leave
mov
dec
pushf
das
mov
xchg
xlat
xor
rorb
and
stos
pop
and
cmpb
dec
pushf
fldcw
pop
bound
repz
shlb
mov
enter
int
imul
xor
jbe
xchg
push
test
lock
ds
mov
mov
ret
jl
sar
out
std
jl
mov
and
fiadds
imul
cs
pop
dec
push
test
repnz
sti
sub
jne
push
aaa
sub
imul
mov
push
cmpsl
add
lds
icebp
mov
nop
test
cmp
xchg
jmp
mov
dec
push
out
jmp
push
ret
sbb
repz
pusha
push
fimuls
inc
outsb
pop
push
leave
ljmp
adc
inc
push
andl
loop
or
mov
inc
rcrl
jb
cmc
sbb
loope
dec
shlb
fldcw
roll
jne
mov
enter
and
fildll
int
fxch
cmc
mov
cld
in
inc
test
xor
loopne
sub
jg
sub
arpl
xchg
out
add
jle
dec
into
mov
cwtl
pusha
and
insl
es
cli
into
push
pop
xor
push
adc
pop
mov
or
dec
dec
sbb
lea
lods
ljmp
cmp
cmp
cld
loope
pop
lock
es
out
mov
or
leave
sbb
hlt
addl
sti
mov
pop
sbb
cmp
xchg
xor
adc
test
sarl
push
mov
popa
in
inc
fdivl
dec
jp
mov
incb
jmp
cli
xchg
or
mov
cmp
cs
inc
xchg
sub
insl
dec
cmp
lea
cld
push
sbb
sbb
sbb
in
sbb
rorl
xor
icebp
mov
or
pop
jb
cmpsl
int3
jne
adcl
int
xor
iret
push
fists
mov
out
push
sbb
dec
dec
in
add
xchg
adc
std
mov
dec
les
int
pop
or
shlb
sbb
sub
ja
mov
push
rolb
aad
and
dec
sahf
adc
imul
mov
mov
ljmp
jnp
icebp
mov
adc
add
xchg
push
cmp
jb
into
xchg
js
xchg
in
fcmove
mov
push
mov
lock
sti
dec
mov
jnp
shlb
xchg
sti
lods
jge
adc
lcall
mov
cltd
cmp
sbb
xchg
enter
rcrl
mov
lods
or
testb
jl
or
aaa
repz
or
lea
and
inc
mov
pop
add
ds
repnz
std
ljmp
test
cwtl
jecxz
jbe
enter
ss
orl
sbb
mov
cmpb
xchg
lahf
sub
xchg
daa
sti
lret
cmpb
pop
clc
sub
mov
and
gs
loop
negb
inc
xor
rorb
xor
or
jae
ja
mov
cmpsb
pusha
aad
push
mov
sbb
test
dec
sub
adc
xchg
mov
lds
ja
cmp
fs
popa
cmp
cmp
pushf
out
sbb
rcrl
popf
sbb
jae
fdivrs
cmpsb
jge
shl
push
jno
cwtl
in
hlt
ret
insb
sbb
jnp
std
mov
cmc
jle
and
sbbl
mov
jo
xchg
movsb
push
xor
addb
leave
cmpsl
xlat
leave
mov
outsb
pushf
and
push
pop
mov
test
ljmp
push
xchg
test
or
incb
mov
pop
fildl
in
pop
pop
test
outsl
sbb
cmc
outsb
into
les
xorl
in
mov
aad
loop
fsts
js
insl
dec
pop
popf
and
xchg
scas
xchg
fcomps
ja
cmp
scas
mov
cwtl
push
les
push
dec
pop
add
adc
jnp
pop
shrb
or
mov
ret
lods
push
test
or
fcomip
outsl
sbb
add
clc
rolb
outsb
call
movsl
insb
pop
push
push
lods
movsb
sbb
outsb
push
aam
cwtl
inc
jp
daa
cli
push
fldl
mov
mov
pop
add
mov
push
jnp
imul
jmp
mov
sbb
in
leave
sti
push
aad
mov
data16
into
ficoml
test
dec
sbb
stos
cmp
adc
push
mov
outsb
loope
out
mov
push
je
icebp
xor
add
mov
sbb
jno
mulb
ror
dec
add
mov
mov
mov
push
sti
out
shll
js
fisubrl
hlt
in
sbb
sub
mov
lock
cli
arpl
jne
cmp
push
dec
mov
rolb
dec
mov
fcmovne
fdivrl
sub
xchg
xchg
or
adc
aaa
jle
push
fwait
and
rclb
inc
aad
dec
stc
cld
out
out
sbb
xchg
xlat
mov
cmc
or
shrb
test
sub
aad
push
and
je
fcmovbe
ja
cmc
push
shll
rol
stos
dec
pop
jmp
adc
inc
stc
and
lahf
or
jg
mov
sub
rep
pushf
adc
cld
xor
push
xchg
popf
shl
subb
cmpb
add
sbb
sbb
xchg
imul
pop
cmp
cmc
loope
or
sub
pop
mov
cld
sbb
sub
outsb
out
xor
sub
jmp
out
pop
mov
stos
push
cmp
addl
add
movsl
mov
sbb
mov
mov
loopne
push
cli
jge
ja
jns
sarb
jecxz
subl
dec
loopne
mov
jl
movsl
clc
je
mov
cmpsl
push
push
pop
ret
gs
sbb
insl
sub
push
outsb
cmpsb
sti
push
mov
das
pop
mov
adc
xor
cmp
mov
into
xchg
adc
sahf
dec
mov
mov
xlat
cmc
scas
push
ljmp
adc
fidivl
jp
pop
sbb
stc
xor
aaa
das
ret
dec
cmp
xlat
cmpsb
dec
ljmp
jle
ret
jb
sbb
scas
insb
inc
rcl
imul
mov
sbbl
loop
jmp
push
pop
and
mov
aad
push
loop
inc
adc
ljmp
inc
fistpl
add
sarb
cwtl
xorb
xor
je
push
rcr
cli
sub
jns
pop
xorb
sarl
int3
xchg
call
sub
mov
add
dec
inc
mov
sub
mov
aam
xchg
dec
testl
mov
outsb
gs
pop
fistps
and
je
loope
mov
mov
xchg
icebp
aam
pushf
lods
lret
dec
lea
push
data16
stc
sbb
sub
push
aaa
lcall
push
xchg
loop
jb
jmp
push
mov
stc
or
cltd
adc
orl
mov
xor
mov
lret
sub
call
packssdw
dec
jno
test
outsb
or
rorb
shll
daa
mov
push
cmp
pop
mov
mov
icebp
lods
loop
mov
fcoms
popf
loopne
push
push
inc
adc
jbe
sub
pextrw
sbb
adc
sti
add
mov
leave
xor
pop
mov
shll
mov
loope
push
ds
mov
pushf
fiaddl
fninit
mov
cmp
dec
jl
rcl
and
mov
or
xchg
add
clc
insl
mov
lock
flds
push
add
stc
dec
fs
fmuls
dec
adc
mov
jns
push
inc
les
adc
inc
add
lock
in
js
pop
jo
xor
lock
jmp
repnz
cwtl
inc
adc
sub
dec
jns
push
push
jno
cmpsb
xor
fdivrs
movsb
add
pop
mov
fnstsw
or
jle
cltd
mov
mov
test
outsb
andb
outsl
add
mov
add
cmpsb
cwtl
mov
dec
ljmp
add
add
cmpl
imul
push
cmpsl
inc
cmp
mov
or
dec
push
mov
mov
cmp
xchg
loopne
imul
sbb
or
xchg
jnp
pop
mov
jb
inc
out
jle
inc
je
jbe
fistpll
pop
rol
and
mov
mov
mov
int3
jle
mov
push
push
aam
push
fcmovb
add
lods
les
pop
and
lods
mov
add
pop
fidivs
inc
add
loop
add
push
mov
push
pop
stc
lds
dec
pop
clc
loop
stos
lods
dec
jo
icebp
xchg
pop
jmp
shrl
sub
les
push
out
movb
lret
je
jge
das
sub
add
xchg
cmp
sub
xor
cmp
flds
cmp
shr
lahf
dec
icebp
sti
ds
testl
mov
mov
outsb
cmovs
mov
jne
dec
pop
stos
xor
lods
test
movsb
cwtl
push
adc
int3
lcall
jno
dec
xchg
stos
outsl
xlat
scas
mov
push
pop
clc
sub
xchg
sahf
sbb
int
push
push
xor
jnp
lea
cld
sub
push
push
movsb
bound
mov
aas
mov
rcrl
in
inc
mov
shlb
cmc
and
jae
sub
in
std
push
popf
jae
das
adc
sub
insl
dec
ret
or
inc
xor
sbb
fwait
aad
push
mov
outsl
aas
inc
sbb
cmp
mov
fs
fs
shrl
ret
pop
mov
jg
add
es
int3
aad
xor
sbb
push
ja
sar
xor
mov
xchg
mov
insl
rep
ret
cld
leave
rolb
stc
cmp
dec
lea
fsub
rorl
and
aas
gs
test
aam
orl
adc
xchg
leave
jge
xchg
pop
lods
cmp
add
hlt
xchg
inc
aam
xchg
jns
lock
add
lock
pusha
ret
dec
cmc
cwtl
out
stos
loopne
xchg
dec
push
lret
sbb
mov
add
je
stc
mov
fidivl
out
and
mov
pop
mov
sub
sbb
xor
stc
xchg
cmp
add
ja
testb
add
daa
data16
cli
rorb
ss
push
in
dec
sbb
xor
test
jmp
popa
jmp
jae
xchg
push
adc
aas
xor
mov
xor
jbe
ja
inc
cs
fwait
dec
xor
dec
ret
gs
adc
loopne
xchg
jmp
movsl
adc
mov
call
lods
clc
inc
fldenv
fld
hlt
cmpsl
jle
mov
out
mov
lds
inc
stos
cwtl
dec
enter
adc
sub
push
jle
push
xchg
sti
in
aaa
mov
jp
inc
pushf
jmp
pop
cmp
cs
sub
enter
lea
lock
rcr
dec
and
out
sbb
lods
ja
cmp
iret
push
mov
sahf
adc
or
mov
mov
test
xorl
lret
sbb
cmp
inc
imul
loope
push
push
push
in
lods
xchg
std
stc
add
sarl
lods
in
push
xlat
add
les
xor
fwait
jge
mov
js
mov
mov
fdiv
loopne
cmp
and
in
arpl
fdivrl
flds
movsl
push
cmp
mov
scas
hlt
push
sub
subb
sti
adc
pop
mov
mov
pop
test
loopne
dec
jbe
cmpsl
adc
imul
add
cltd
dec
lock
fimuls
push
xchg
adc
mov
add
mov
insb
aam
cmp
inc
repz
mov
push
jns
or
das
mov
icebp
out
lret
jg
arpl
lock
stos
fidivrs
fmuls
jns
dec
lret
cmpsl
jge
sub
and
xchg
xchg
popf
xchg
pop
push
insl
cmp
mov
jb
pushf
cmc
add
pushf
or
das
mov
and
lods
xchg
lock
data16
jae
xlat
pop
jno
mov
in
xchg
push
scas
mov
in
cmp
ret
daa
or
dec
idiv
in
pop
mov
pop
divl
movsl
jge
inc
pop
and
clc
sbb
adc
add
xlat
jecxz
stc
mov
sub
inc
js
gs
and
cmp
jae
addr16
pusha
out
outsl
mov
or
icebp
adc
sub
xorb
test
mov
cld
fistpll
push
pop
cmp
xor
push
mov
clc
sahf
mov
jno
es
push
mov
mov
cmp
movsl
jns
out
fnsave
mov
movsb
arpl
fidivrs
xchg
sub
xchg
dec
xor
jne
faddl
aad
adc
fimuls
sti
or
std
mov
stc
test
sbb
sub
int3
sbb
in
fists
jae
adcl
daa
bound
or
pop
clc
and
ds
cld
inc
shrb
je
jae
fdivrl
inc
les
clc
pushf
mov
sbb
insl
movsb
inc
popf
je
addps
in
movsl
sub
hlt
xchg
inc
sahf
pusha
sbb
xor
hlt
shrb
loopne
pushf
lcall
lret
and
jne
sti
orl
and
enter
les
xchg
xchg
cmp
mov
or
push
fsubr
xchg
lcall
pavgw
and
cmp
pop
rcll
sbb
rolb
mov
push
or
out
mov
in
xchg
sbb
daa
orl
fstps
sti
jb
jae
jb
jne
mov
push
inc
leave
popa
pop
lahf
xlat
mov
jo
xorl
or
xchg
push
ljmp
int3
pop
and
outsb
inc
sbbl
mov
inc
sub
jle
aad
insl
loopne
dec
outsl
xlat
sbbl
mov
xor
pop
inc
xorb
or
jo
mov
xor
arpl
arpl
lret
mov
lahf
pushf
mov
movsl
mov
stos
gs
loop
in
ljmp
loop
stos
pop
pop
or
sub
adc
cs
jge
shll
out
xor
or
mov
mov
inc
dec
pop
add
push
mov
mov
sub
mov
mov
flds
iret
or
inc
enter
cmpsb
dec
or
jecxz
dec
loope
or
mov
xlat
hlt
pushf
lods
jnp
data16
pop
inc
lret
and
pop
xchg
xor
or
jl
outsb
fldcw
ret
adc
push
pop
insb
fs
mov
sbbl
dec
iret
insl
mov
push
es
popa
xchg
adc
lahf
mov
push
rolb
sbb
mov
mov
in
fwait
sub
adc
ret
xchg
loope
mov
cltd
js
push
and
inc
mov
mov
pop
movsl
das
lcall
popf
push
or
fiaddl
adc
mov
or
pop
lods
pop
inc
repnz
sti
inc
mov
xchg
jecxz
mov
push
std
or
xor
mov
push
xlat
push
pop
fsubr
nop
rol
mov
and
stos
add
xor
ds
outsb
dec
hlt
out
and
into
hlt
int3
push
es
fwait
jmp
rorl
pop
out
push
mov
loope
ret
mov
pop
sbb
pop
cwtl
pusha
jecxz
sbb
repnz
adc
sub
lahf
mov
mov
shrl
ljmp
adc
jne
push
mov
and
add
adc
xlat
dec
adc
jno
pop
jb
pop
or
aas
cli
mov
pop
in
stc
cmp
dec
int3
cmc
es
lods
lods
and
sub
push
adc
enter
icebp
mov
inc
or
dec
jae
dec
cltd
outsb
popf
aad
push
cs
inc
rcrl
js
mov
or
pop
or
push
js
or
cmp
and
add
jl
gs
subb
inc
mov
push
and
pop
mov
xchg
fisubs
cmp
icebp
lahf
pop
mov
data16
repnz
je
jo
mov
adc
sub
adc
mov
mov
push
mov
test
leave
cs
push
popl
lods
mov
stos
jne
push
ret
sub
mov
js
and
fistps
cltd
fistl
cwtl
xchg
inc
xchg
jmp
cmpsb
int
stos
xor
ds
aas
mov
cs
insb
loop
lret
mov
jae
outsb
push
or
cld
jne
xor
inc
add
mov
int
jmp
dec
mov
test
jno
pop
xchg
fadd
ss
test
lret
in
pop
hlt
jbe
mov
fdivs
dec
aad
push
adc
scas
fwait
popf
push
bound
sbb
addb
sbb
scas
iret
popf
in
lea
imul
xor
enter
mov
jb
xor
inc
shll
cs
ljmp
ret
repnz
mov
cltd
jno
inc
sub
sub
dec
inc
and
inc
and
and
pop
test
cs
ljmp
push
paddusw
sbb
cmpsl
sub
sub
fisubrl
pusha
xor
outsb
lock
sbbl
xchg
and
xchg
push
aad
cmp
dec
pop
mov
loope
imul
xchg
imul
sar
lcall
cs
push
sub
jns
jns
fxch
xor
xchg
cld
inc
mov
pop
aam
in
iret
fnsave
lret
adc
call
adc
sbb
negb
mov
bound
lret
mov
cs
push
iret
cmp
fwait
jg
push
std
es
mov
mov
test
mov
mov
mov
or
push
inc
test
sti
cmpsl
cmp
add
lods
sub
mov
ficoms
jle
out
aaa
stc
pusha
icebp
xor
inc
jne
cld
std
push
mov
fdivs
les
sbb
mov
bound
add
leave
cmp
loope
mov
rcr
test
lods
lret
sbb
mov
or
xor
add
adc
mov
dec
outsl
jmp
daa
adc
xor
cmpsb
into
sahf
data16
int3
sub
xchg
sub
negl
mov
mov
scas
mov
icebp
testl
mov
add
jb
ja
jnp
dec
cmpb
clc
inc
and
cld
mov
and
inc
insl
je
sbb
jo
jbe
je
cmp
or
bound
dec
loope
push
das
vorps
mov
subl
pop
sbb
test
push
subl
and
or
xor
cltd
xor
xchg
mov
shrl
adc
test
outsb
mov
rcrl
cmpsb
sbb
shl
ret
and
adc
xor
cld
shll
cli
xor
sbb
scas
fdivl
xor
cmp
int3
movsl
xchg
xchg
lret
stc
lahf
jb
mov
cmc
leave
sub
and
pop
add
out
or
pop
pop
jmp
jbe
fiaddl
in
testb
enter
or
push
in
hlt
into
xlat
les
mov
inc
cmp
xor
lcall
or
jecxz
inc
sarb
or
scas
shl
test
lcall
pop
cmc
rclb
add
insl
lods
sbb
dec
and
or
stc
cmp
ljmp
jo
fists
sbb
ds
add
cld
dec
fisubs
cld
loopne
jg
std
stc
inc
jecxz
iret
cmpsl
pop
rcll
rcll
call
mov
jnp
repnz
imul
repz
jne
outsb
mov
fidivs
push
cli
in
insl
cmovbe
dec
leave
jnp
xchg
dec
adc
jno
xchg
insb
xor
out
ja
xor
xchg
mov
stc
or
enter
sbb
fnstenv
rclb
pop
sub
notl
rcrl
cmp
xchg
mov
lods
cwtl
add
pop
insb
mov
lds
push
lret
mov
lods
jbe
into
push
fneni(8087
mov
sbb
push
and
mov
mov
jb
push
ss
ret
pusha
loope
pusha
and
mov
jmp
sub
mov
wbinvd
xchg
loope
loopne
inc
mov
xchg
xchg
dec
dec
lcall
xchg
xchg
daa
add
mov
clts
xor
pop
jns
frstor
rorl
and
leave
lods
leave
pusha
xor
mov
cltd
sub
pop
mov
dec
mov
mov
sub
pop
push
adc
repnz
insb
mov
ror
out
pop
fnstsw
outsb
mov
sbb
pop
sbb
das
xor
sub
and
sbb
add
jg
adc
aaa
fst
sub
int3
je
hlt
mov
push
sti
xor
stos
addr16
jno
in
jne
add
mov
add
dec
jl
jns
xor
fdivs
lret
andl
add
lcall
inc
jl
test
xchg
inc
xor
ja
dec
push
mov
ja
mov
sbb
jo
fimuls
into
dec
lds
cli
ret
add
jo
addr16
sbb
scas
xor
mov
xchg
cmp
insb
xlat
jno
add
jo
cs
dec
add
imul
mov
mov
and
pop
fwait
sub
dec
fnstsw
ror
pop
mov
adc
xchg
cmpsl
sahf
rorl
inc
loopne
cld
adc
pop
call
inc
mov
push
incb
jle
in
mov
popa
call
inc
bound
inc
int
or
cmp
ja
or
lret
push
push
arpl
xchg
jne
cmp
mov
xlat
push
xchg
xor
cli
push
mov
mov
cmc
mov
test
and
jns
xor
aaa
pop
hlt
ds
mov
sti
cmp
dec
testb
inc
cmp
mov
sub
std
inc
repz
ret
int
rcll
cmp
ret
insb
out
inc
sbb
fwait
or
lock
rol
pop
push
notb
out
jl
lcall
dec
xchg
mov
jmp
bound
mov
mov
jl
jns
or
gs
and
push
imul
xchg
lahf
adc
dec
lea
test
lahf
inc
jle
dec
xor
jmp
addr16
pop
ss
out
pusha
mov
fdivr
jne
dec
popf
rorl
icebp
shll
cltd
arpl
test
lea
stos
push
push
insb
pop
hlt
out
nop
stc
loopne
imul
stos
aad
test
cwtl
idivl
inc
add
dec
dec
adcb
data16
cltd
dec
arpl
sbb
lfs
shlb
bound
loopne
push
mov
mov
add
je
stos
mov
imull
or
push
movsl
into
push
das
cmc
jno
outsb
sub
jbe
or
jmp
sbb
mov
pop
sub
addr16
ret
insl
add
iret
cmp
inc
cmp
mov
jmpw
mov
xlat
add
std
ret
arpl
jecxz
mov
dec
mov
sub
ds
pushf
adc
shl
mov
jb
data16
jmp
fldenv
mov
and
lea
fisttpll
xor
negb
mov
ret
push
mov
imulb
movsl
div
inc
dec
shrb
int3
sub
subb
mov
fwait
push
stc
pop
inc
pop
cli
jg
loope
cs
xchg
jp
jl
int3
repz
push
jp
mov
aad
fistpl
out
movsl
rcrl
icebp
adc
adc
gs
mov
out
shlb
add
pushl
dec
dec
xor
pop
call
neg
lahf
roll
int
sbb
mov
dec
loope
xor
cmpsl
pop
inc
addr16
imul
int
out
imul
cmp
jmp
pop
sbb
repz
nop
test
mov
loop
or
test
mov
pop
adc
rorb
out
mov
dec
sbb
arpl
jl
push
mov
pusha
test
adc
or
and
mov
xchg
xor
fcmovnbe
lods
outsl
xor
ret
insb
add
sbb
outsl
cltd
subl
arpl
pop
dec
popf
mov
movsb
push
xchg
sbb
pop
je
sub
push
xchg
cmc
mov
aad
jno
or
repz
dec
and
dec
mov
int
mov
cmpsl
add
pop
sbb
pushf
rorl
inc
dec
cmpsb
mov
mov
test
mov
push
push
mov
rolb
sub
cmc
sub
xchg
das
push
mov
sbb
add
icebp
adc
dec
test
lcall
sbb
arpl
subb
mov
scas
xchg
push
or
inc
popa
add
sysret
mov
mov
sbb
negl
mov
pop
jl
mov
sub
lds
andl
mov
sti
out
out
loope
ret
inc
mov
scas
mov
push
mov
out
shl
pop
pop
jne
cmp
repz
imul
add
mov
js
stos
inc
or
push
insl
leave
in
leave
lock
lahf
inc
push
popa
xlat
subb
lds
in
inc
dec
push
dec
inc
and
insl
adc
jns
pop
mov
dec
testb
cmpsl
adc
imul
stc
pop
aam
add
push
repnz
push
idiv
mov
jge
ret
test
pop
sbbl
mov
gs
jb
shrb
dec
or
sub
outsb
inc
cld
lea
in
pop
repz
daa
inc
test
mov
inc
out
lahf
addr16
cmp
push
pop
movsl
mov
xor
dec
movsl
out
add
decb
stc
dec
jae
jae
mov
out
push
insl
cs
outsb
lcall
jbe
mov
leave
mov
pop
rclb
hlt
mov
fnstcw
int
inc
es
inc
xor
push
sbb
dec
data16
aad
insl
rcrb
rorl
loopne
insl
arpl
imul
dec
lcall
xchg
out
rclb
outsl
lea
push
dec
enter
ja
cmp
aad
addr16
mov
popf
xchg
rcr
int3
adc
sbb
pop
mov
lds
lret
mov
jecxz
add
popf
xor
add
mov
testb
bound
imul
dec
mov
ljmp
xorb
leave
addr16
fidivrs
divl
std
cmp
mov
or
jno
mov
ret
jl
mov
outsb
inc
pop
mov
or
aam
adc
dec
sub
and
ljmp
cmpsl
or
inc
mov
scas
dec
push
fstp
lret
lret
mov
hlt
sbb
jp
push
out
pop
xchg
mov
out
sub
repnz
repz
iret
sbb
testb
pop
xchg
add
mov
hlt
jae
mov
xor
jno
sbb
push
std
fdivl
xor
and
add
scas
es
xchg
pop
test
sbb
adc
fidivrs
ds
jmp
jbe
je
in
cmp
mov
jns
or
xor
filds
sub
sub
std
push
loope
hlt
jmp
jp
mov
jge
popf
js
nop
das
xchg
inc
lret
hlt
bound
push
mov
addr16
imul
mov
mov
aad
xchg
iret
mov
and
dec
adc
and
lret
aam
daa
out
adc
int
cmp
aas
movl
add
mov
jmp
rorl
mov
mov
mov
sbb
or
push
push
cmpsb
xchg
pop
mov
addr16
push
dec
pop
fstl
sarl
jecxz
ffreep
xchg
cmp
mov
push
inc
pop
sub
pushf
shrb
ret
pop
mov
lcall
daa
lods
jp
addr16
into
cld
gs
adc
imul
sub
ret
in
mov
fxch
or
and
js
push
or
paddb
push
ja
test
int
push
and
mov
sbb
add
mov
push
xchg
push
lods
arpl
movsl
mov
negl
lahf
jle
pop
aam
pop
dec
xchg
fwait
pop
lret
xlat
mov
and
cltd
cmp
add
sbb
push
push
sarl
push
cmc
cmp
nop
cmp
outsb
and
mov
decl
mov
int
mov
xchg
and
test
or
lods
lea
out
xchg
jg
adc
and
adc
mov
stc
sti
outsl
std
fsts
out
xor
flds
outsl
arpl
stos
sbb
push
xor
or
psubw
mov
dec
xor
out
push
sbb
mov
adc
repz
dec
cmc
dec
insb
insl
lock
add
scas
mov
and
pop
movsl
adc
jl
pop
jge
dec
add
push
sub
cwtl
dec
mov
movsb
sub
repnz
jecxz
adc
cltd
gs
fwait
fwait
mov
negl
add
pop
ljmp
orl
movsl
pop
sbbl
je
sbb
dec
sbb
mov
dec
fdivrl
flds
ja
fwait
das
push
pop
addb
push
pop
in
jecxz
cmp
pop
or
fs
dec
push
imul
pop
mov
push
sar
sub
adc
mov
sbb
cltd
into
ja
lods
ja
or
mov
test
inc
fldenv
push
mov
call
push
dec
jg
push
mov
daa
xor
aas
pop
popa
movsb
cltd
pushf
cli
xlat
mov
dec
pop
jo
insb
or
xchg
aad
pusha
adc
fs
push
xchg
andps
fistpl
popf
xchg
pop
mov
mov
push
repz
repnz
arpl
mov
subb
out
rolb
nop
push
push
and
nop
jno
push
notb
sti
pop
push
test
sbb
xchg
xchg
rcl
or
push
fdivs
xchg
addb
sbb
sbb
or
push
leave
les
aaa
hlt
inc
mov
scas
jl
push
push
dec
push
in
xor
cmp
cmp
or
and
adc
or
xlat
int
xchg
repnz
cmp
xchg
mov
and
dec
sbb
aam
xchg
bound
ret
mov
dec
mov
inc
inc
mov
repnz
and
lret
sub
adc
jmp
aam
and
cmpsb
pop
xor
sbb
insb
and
sub
cmpb
mov
call
push
ficompl
add
mov
push
add
push
stos
lahf
dec
les
lea
cli
xchg
jp
inc
mov
iret
add
xor
mov
test
mov
shrl
in
mov
cmpsb
les
sti
jno
rcrl
pop
mov
pop
sub
outsb
mov
outsl
adc
sbb
jae
mov
in
jne
push
dec
pop
adc
pop
adc
icebp
insb
cmpsb
and
dec
add
mov
cmpsb
sub
xor
add
jbe
inc
jo
mov
les
in
jl
std
mov
roll
std
mov
inc
mov
jge
divb
rcr
shrl
inc
cmp
xchg
pop
mov
js
stc
pop
jmp
mov
lock
imul
jns
into
ljmp
nop
jecxz
popa
mov
jae
dec
fs
out
repz
and
add
lods
and
data16
push
sub
dec
stc
icebp
lock
notl
lret
jb
cltd
cmp
xorl
sbb
jecxz
fwait
mov
lods
adc
inc
call
arpl
adc
fldl
jnp
pop
sahf
cmp
mov
xorb
jl
adc
aas
mov
cmp
cld
xchg
mov
lea
leave
cmp
inc
out
adc
cwtl
iret
jbe
xor
cmp
mov
fcompl
dec
cmp
shl
fucom
add
dec
sbb
aad
mov
popl
fsubrl
ret
rcrl
lret
cmp
in
lahf
mov
mov
mov
cmpsb
outsb
int3
das
nop
lock
insb
jp
test
mov
sbb
sti
jmp
and
cmpsb
or
inc
sub
mov
mov
cmp
inc
pmullw
pop
stos
inc
mov
data16
jge
shl
xor
sbb
add
jge
pushf
test
xchg
push
pop
mov
loopne
dec
int3
cltd
adc
shl
mov
data16
jae
popa
mov
push
mov
shlb
ja
push
fildl
les
push
iret
aas
je
jno
mov
xor
adc
sub
jno
sbb
mov
lret
nop
adcl
fwait
cmpsl
cmp
inc
cmc
sub
negb
pop
push
test
jmp
stc
xlat
jg
iret
pop
jne
sub
cltd
outsl
dec
out
mov
aas
jns
adc
fsubs
push
mov
sarb
bound
imul
loope
push
fmuls
sahf
je
add
int
cmp
lret
lahf
ds
sbb
aam
test
mov
test
dec
mov
lea
sbb
test
jne
shrb
jecxz
pop
or
or
jnp
sbb
push
adc
cmpsb
sub
sbb
sbb
fildl
mov
js
pusha
in
loopne
or
mov
sub
std
nop
enter
ss
popf
push
shl
lcall
call
sbb
mov
push
fadd
or
stc
xor
out
xor
movsb
xchg
mov
pop
mov
jle
sti
jo
push
ljmp
test
mov
leave
cmp
out
xor
dec
mov
fildl
das
pop
inc
sbb
or
nop
fmuls
aad
roll
cmp
pop
push
sbb
pushf
jl
add
jle
sarb
push
inc
dec
pop
or
and
sti
sahf
sbb
ret
lea
jge
mov
shlb
add
cld
pop
dec
cmp
cmc
es
add
int
pushf
rorb
push
xlat
cmp
xor
stos
pushw
jmp
stos
lret
leave
push
insb
idivl
sub
jl
jl
inc
into
dec
bound
out
push
rolb
and
lea
scas
xchg
dec
ja
insl
ss
pop
or
dec
shlb
mov
jle
sub
scas
pushf
pop
cltd
and
push
jg
adc
push
sub
mov
jno
movsl
fsts
pop
sbb
sub
xor
dec
dec
mov
into
adc
sbb
xchg
cltd
gs
pop
pusha
cli
push
jb
and
push
and
hlt
nop
inc
adc
add
cld
mov
inc
mov
call
leave
dec
arpl
decl
repnz
lahf
les
iret
pop
aad
repz
hlt
lods
ljmp
ret
sti
call
pop
jne
fistpll
dec
sub
inc
call
jle
mov
add
in
fildll
and
mov
das
cmp
sbb
adc
in
test
cli
sarl
orl
sub
or
fldcw
xlat
push
mov
xor
xchg
inc
and
movsl
cmpsl
pop
adcl
clc
mov
shlb
mov
jmp
fisttpll
cmp
mov
dec
mov
scas
mov
decb
push
test
rorb
mov
xchg
lret
gs
lcall
xchg
sub
xchg
lods
adc
mov
andb
mov
cltd
jecxz
and
mov
cmpsb
cmp
or
push
loope
add
nop
xor
lock
xlat
cmp
mov
cmp
add
repnz
icebp
mov
daa
fs
int3
outsb
push
jne
push
add
mov
xor
mov
and
or
push
lea
imul
push
test
fisttpll
enter
sbb
dec
test
stc
mov
dec
jl
mov
mul
jbe
or
pop
dec
push
push
xor
cmpsl
jnp
inc
ret
and
xchg
movsb
add
loopne
jne
lods
lcall
inc
mov
movsb
mov
les
pop
mov
jae
mov
mov
scas
iret
adc
xor
out
addl
call
jl
scas
stos
or
xchg
push
sahf
pop
push
push
jne
js
clc
mov
cmp
cmp
test
add
add
cmp
cmpsb
rcl
or
int3
cmp
test
outsb
adc
cs
push
jle
push
sbb
pop
in
shr
fsubp
push
mov
iret
mov
adc
out
jecxz
movb
movsb
jnp
shrb
adc
mov
dec
push
ss
imul
aad
or
push
imul
jle
mov
pop
push
xor
aas
lea
ja
lods
test
iret
insb
mov
mov
jbe
scas
mov
ss
adc
ljmp
push
xor
fcmovnbe
mov
in
hlt
mov
or
mov
aad
faddl
xor
hlt
or
les
push
cmp
xor
aad
mov
lods
jae
xchg
lcall
leave
and
sub
push
imul
xorb
lock
lds
xor
mov
scas
movsl
or
jecxz
cmp
imul
out
sahf
or
mov
negb
pop
xchg
jecxz
xchg
dec
rcll
dec
adcl
iret
shl
call
ret
movsb
mov
bound
mov
mov
sub
mov
mov
popa
or
lcall
repz
jl
jge
cmp
and
and
dec
std
sub
lcall
aaa
sub
lock
mov
cld
cmp
pop
xor
or
call
cltd
imul
addr16
scas
aam
lods
cmp
outsl
inc
push
sbb
lock
cwtl
mov
fsubr
loope
sbb
shrb
lea
cs
cmp
in
outsb
out
ret
inc
adc
cmp
arpl
mov
pusha
aad
movsl
add
nop
or
icebp
push
inc
leave
mov
inc
fisubrs
es
sbb
std
mov
mov
pop
or
outsl
imul
cwtl
ljmp
lret
fs
dec
movsl
inc
jg
fdivp
sub
sti
or
stos
and
pop
and
inc
shrl
pop
out
leave
sbb
scas
dec
imul
out
jmp
dec
xchg
imul
and
mov
arpl
jno
jo
out
mov
mov
mov
add
xchg
test
jg
mov
inc
push
sbb
subb
sbb
lds
and
xor
push
ds
xchg
push
sti
sub
dec
push
outsl
jecxz
dec
dec
xchg
pop
repz
mov
sub
in
jns
or
mov
xor
pop
sbb
lds
mov
xor
std
mov
xchg
repnz
ret
jbe
mov
sahf
push
sbb
int
in
popa
add
shrd
loope
mov
clc
xor
ret
aas
pop
mov
aaa
or
push
lahf
test
sbb
pop
lret
mov
xchg
jo
xchg
ljmp
dec
push
fwait
push
int3
adc
mov
or
movsb
or
insb
push
xor
sub
sbb
fwait
and
cs
aaa
sbb
lock
outsb
mov
pop
jge
lds
cmp
dec
adc
sub
dec
xor
daa
int
push
xor
add
repz
ss
imul
in
xchg
inc
jecxz
dec
ljmp
add
cli
push
inc
aas
jno
xchg
or
cmp
hlt
jo
mov
ret
lret
sbb
mov
xchg
pop
cmpsb
lcall
das
cs
cmp
iret
xor
orl
dec
mov
dec
jmp
dec
mov
movsb
sbb
rcl
shll
shr
lcall
sbb
icebp
pop
mov
cmp
and
cmpb
call
pushf
imul
aad
mov
fstpt
pop
mov
dec
fwait
mov
sarb
mov
sub
mov
inc
dec
or
jp
and
xchg
sub
add
iret
das
outsl
xchg
inc
inc
jbe
lods
cmp
jb
cmp
xchg
je
movsl
fimull
lds
mov
dec
mov
xchg
jne
insb
adc
dec
mov
mov
test
dec
test
xor
mov
arpl
into
loop
pop
xchg
push
adc
in
push
mov
sbb
mov
jnp
loopne
and
dec
mov
sub
hlt
outsl
push
ficoml
mulb
iret
inc
in
lcall
fstps
lret
xlat
adc
es
cmp
repz
leave
orl
pop
lcall
push
mov
enter
pop
add
pop
repz
push
jmp
cltd
loop
jo
or
in
movsl
rcr
pop
sbb
cmpsl
aad
popf
xchg
sub
jg
inc
pop
lret
mov
arpl
ja
js
pusha
out
mov
jl
in
adc
popa
xor
cmc
out
push
imul
das
and
adc
mov
das
jl
call
out
loopne
in
andl
shlb
mov
jno
es
test
push
inc
jb
ljmp
bound
jne
aas
mov
push
jmp
lock
divl
ljmp
push
out
jae
jmp
or
ja
xchg
es
negl
sbb
aaa
divl
inc
mov
pushf
jecxz
and
loope
push
loope
add
xchg
decl
pushf
stos
movsb
pushf
inc
mov
jle
xlat
jno
mov
push
mov
mov
sbb
push
jp
mov
pop
sub
xchg
or
dec
jbe
decl
xchg
pop
decl
jno
cld
cmp
adc
cmp
mov
mov
jg
inc
xchg
aas
xchg
vdivpd
mov
xchg
pop
inc
stc
mov
leave
aaa
inc
adc
xor
rclb
and
into
mov
mov
push
fwait
test
arpl
mov
nop
outsb
sarl
mov
pop
testl
enter
outsb
incl
cmpl
or
fidivs
xor
ficompl
test
ja
inc
sahf
fldenv
or
fldenv
lea
pop
sbb
outsl
stc
mov
push
loope
mov
inc
outsb
pop
out
out
lea
and
inc
adc
dec
fcomi
pop
xchg
call
xchg
enter
sbb
add
sbb
mov
imull
adc
or
sbb
lcall
or
mull
sbb
fwait
xchg
addr16
adc
jo
repz
cmp
jns
popf
xchg
mov
jp
xlat
dec
add
xorb
sub
dec
mov
pop
cs
mov
aaa
mov
ljmp
es
xchg
setne
into
add
addb
sti
das
mov
jl
sub
lock
jge
add
push
pushf
leave
iret
inc
es
lcall
fistps
roll
roll
loop
std
cli
pop
inc
mov
push
aam
call
inc
pop
cld
lea
les
pusha
ss
or
lret
movsb
jge
in
mov
adcb
mov
mov
adc
xor
mov
lahf
dec
lods
inc
add
je
dec
aad
imul
push
jp
xchg
sbb
insl
ret
pop
shll
sbbl
dec
mov
or
push
fs
lods
pusha
adc
lods
stc
aas
sbb
xor
dec
loope
xchg
ss
lods
ret
sub
pop
mov
mov
movsb
sbb
fistps
push
stos
xchg
iret
ljmp
mov
or
sub
xchg
sub
mov
or
aas
test
cs
scas
or
int
insl
test
repnz
cmpsl
adc
and
add
add
sbb
add
mov
test
lret
incl
mov
mov
dec
mov
or
jb
scas
xchg
lea
outsl
and
inc
in
xlat
sbb
cmp
mov
rorb
add
adcb
mov
sbb
sbb
cmp
mov
movsb
cmp
and
aad
out
shrl
pop
adc
cmpsb
shlb
in
fsubs
push
mov
add
mov
dec
sbb
popa
repz
inc
sbb
in
imul
movsb
cmp
xchg
xchg
xor
jbe
loopne
fld
xor
popa
gs
rcrb
imul
jmp
pop
pop
repnz
jb
jo
arpl
and
gs
and
faddl
js
mov
cmp
movsb
imul
mov
jb
lods
or
ds
xchg
arpl
test
inc
add
dec
out
popa
sbb
imul
adc
js
clc
cmpsl
sub
mov
test
out
xchg
cltd
xchg
or
pop
push
loope
into
daa
adc
fdivrl
loop
daa
fists
shrl
sub
call
inc
fsubrs
roll
lret
nop
adc
mov
cltd
lods
sbb
inc
imul
jcxz
and
sbb
sbbb
cli
add
or
mov
ficoml
jl
out
push
popf
inc
aam
pushf
sbb
xor
mov
nop
mov
mov
sub
mov
pusha
fdivrl
pushf
dec
push
inc
or
xlat
ja
or
pop
int
lods
aam
or
pusha
add
mov
stos
jb
xchg
mov
or
push
aam
repz
mov
xchg
aas
mov
in
mov
enter
cmpsb
xor
jno
jb
cmp
sbb
inc
pop
sahf
pop
fiaddl
enter
push
das
xchg
xchg
or
add
lahf
pop
mov
jne
ljmp
mov
cmpsl
jge,pt
inc
test
out
push
sarl
sbb
out
cmc
add
mov
popf
xchg
xchg
add
or
pushf
loopne
or
cmc
pop
push
jecxz
jp
lock
xor
xor
jmp
into
repnz
add
cmpsb
mov
arpl
js
jne
fdivrs
mov
jbe
add
jge
out
inc
mov
notl
test
xchg
adc
cltd
aad
out
cmp
xchg
push
jmp
dec
inc
cld
jl
lods
cmp
sbb
xchg
rol
inc
jb
jg
mov
mov
loop
sbb
xchg
pop
aas
jae
scas
push
mov
cmc
fs
int3
xor
jp
mov
xchg
movaps
or
jne
mov
out
aaa
mov
cmp
scas
mov
and
jbe
stos
inc
mov
sub
cmc
xor
or
dec
pushl
gs
xor
or
inc
push
inc
subl
outsl
stos
mov
xchg
cld
pop
ficoms
leave
out
add
repz
cmpsb
fucomp
das
pushf
fcomi
addr16
push
cltd
dec
pop
xor
mov
dec
adc
jns
subb
inc
inc
and
adcl
adc
jns
mov
cmp
xor
dec
dec
imul
mov
jecxz
out
xchg
icebp
mov
mov
inc
cmp
mov
icebp
inc
outsb
cmc
sub
or
and
add
mov
sbbb
shlb
adc
mov
push
clc
shl
mov
or
cmp
pop
out
xchg
hlt
xchg
js
jno
adc
push
out
push
rolb
jo
clc
ret
ret
push
jno
out
inc
outsl
scas
popa
test
je
or
fbld
cmpsl
xorl
daa
not
cmp
push
shlb
and
pop
or
sti
fdivl
repz
push
std
imul
popf
pop
inc
mov
mov
mov
ffreep
push
das
sub
or
neg
leave
inc
mov
mov
jno
mov
int3
adc
lret
sub
add
mov
sahf
negl
mov
sarl
cmp
test
out
lcall
popa
scas
ret
scas
leave
nop
std
inc
out
push
adc
pop
addb
pusha
clc
add
lret
int3
pushf
lret
lret
cmc
outsb
xchg
into
imul
popa
sbb
cmpsl
insb
outsb
lods
scas
mov
fidivs
fnstenv
adc
mov
movl
nop
mov
je
popa
imul
and
movsb
jmp
mov
dec
movsl
aad
movsb
addb
cli
xor
dec
mov
push
fmuls
ljmp
push
xchg
in
dec
xor
xchg
popa
int
test
and
mov
andl
jbe
mov
pushf
mov
shl
test
push
pop
mov
or
pop
adc
int3
out
mov
in
pop
imul
push
enter
das
ret
pop
push
gs
pop
adc
push
mov
ficompl
jb
fs
jmp
cltd
imul
mov
mov
test
mov
mov
out
mov
aad
fs
pop
aam
out
ror
sub
jp
xchg
out
out
dec
jg,pn
popf
cwtl
xchg
mov
push
loopne
mov
iret
out
or
inc
mov
cltd
sbb
jns
cmp
sub
fildl
lahf
push
push
popa
lahf
icebp
mov
test
test
arpl
push
xor
adc
aaa
out
clc
in
xor
pop
or
bound
in
aad
sub
cwtl
lods
push
fildl
inc
ret
inc
js
and
int
add
pop
subl
jp
add
mov
jmp
cld
packsswb
decl
fs
and
ss
pusha
xchg
aas
std
js
das
xchg
cmp
in
jl
push
push
pushf
mulb
jbe
adc
std
rclb
mov
cmp
xchg
add
mov
loope
les
lcall
arpl
insl
jnp
cwtl
inc
call
xchg
mov
mov
add
xlat
cmpsb
jae
pusha
int3
mov
and
xchg
notb
ds
cmc
out
mov
pop
pop
mov
imul
out
into
inc
jne
enter
jae
lock
scas
mov
and
push
xor
call
xchg
sub
shlb
mov
adc
test
adc
outsb
add
movd
loop
lock
jle
icebp
loopne
add
repnz
cmpsb
pop
pushf
rorl
add
inc
jp
mulb
hlt
aaa
adc
xchg
lcall
pop
or
inc
sbb
cmp
ret
aam
lods
mov
dec
jnp
mov
fmulp
ret
in
rol
clc
lea
push
mov
into
nop
jle
pusha
xor
out
jb
cli
mov
push
mov
cs
mov
jle
idivl
adc
shlb
mov
jle
adc
enter
andb
adc
xchg
or
daa
ret
rorb
int3
aam
shl
dec
pop
loop
aad
mov
jbe
adc
mov
adc
sbb
movsb
test
push
scas
mov
dec
loopne
inc
inc
movsl
out
lret
sarl
xchg
xor
cmpsl
inc
idiv
in
ljmp
ficomps
dec
pop
movsb
stc
rorl
sub
or
incb
cli
push
insb
cld
push
movsl
cld
xchg
nop
jno
hlt
lods
pop
adc
inc
or
jmp
mov
adc
int
outsb
popf
pop
jl
dec
mov
popa
ss
stc
cmp
negl
jle
push
pop
lahf
cmp
adc
xchg
cwtl
out
push
mov
cmp
fnsave
xchg
ss
xchg
dec
jno
sti
pop
pop
or
mov
frstor
mov
and
lcall
pop
inc
test
insb
iret
sub
inc
sbb
pop
inc
je
cld
sbb
scas
mov
push
xor
dec
add
adc
sbb
das
push
test
mov
fsubl
add
mov
shlb
jns
jg
pop
aas
enter
xchg
out
xchg
out
out
shrb
stos
loopne
sbb
and
repnz
push
jp
inc
fisubl
dec
aad
ljmp
dec
cmp
mov
mov
or
xor
outsl
jecxz
int3
mov
cli
mov
das
xorb
fstps
mov
mov
in
movsb
mov
decb
in
jbe
mov
in
push
mov
cmp
insl
inc
cmpsl
or
mov
mov
pop
rcl
xchg
shrl
adc
xorb
dec
out
and
adcb
mov
call
mov
mov
pop
adc
dec
arpl
ja
lds
lret
ret
xchg
out
push
pop
and
cmp
adc
add
loope
clc
ja
inc
outsb
mov
or
mov
mov
aam
pusha
mov
loope
rclb
stos
jne
fisubrs
pusha
add
stos
jae
mov
movq
pop
lods
dec
pop
jp
icebp
ret
pop
sahf
insb
push
int3
add
xchg
push
lock
and
arpl
mov
xor
or
test
dec
icebp
test
push
or
xchg
ret
cmp
jecxz
daa
out
ret
add
in
js
out
cmp
xchg
xlat
scas
or
lahf
mov
stc
dec
push
fmul
sbb
dec
into
mov
popf
mov
mov
into
in
xchg
ss
shlb
lock
cmp
push
mov
jae
dec
roll
add
push
mov
and
mov
mov
jg
jb
rol
orb
lock
movsb
mov
mov
in
lock
push
or
mov
lret
cmp
xor
adc
push
push
in
xchg
jae
dec
jmp
push
sub
je
xor
pop
mov
cmpsb
fdivrl
xchg
xchg
mov
out
fsub
fcmovnb
out
adc
scas
pop
outsl
ret
dec
push
sub
mov
push
inc
mov
pop
xor
adcb
rorl
test
inc
add
jecxz
xlat
mov
rol
or
xor
dec
push
mov
repnz
pop
pop
adc
dec
mov
test
mov
fidivrs
and
in
ds
or
cmc
gs
not
test
fdivrp
stc
push
xor
lahf
mov
xchg
push
push
mov
cmc
insl
xor
mov
stos
in
push
mov
pop
mov
pop
jp
sti
adc
in
test
testl
test
icebp
cmp
imul
sar
and
jnp
lds
xlat
cmp
lcall
stos
or
add
lock
mov
add
hlt
jae
aad
loop
sbb
aam
data16
adc
arpl
mov
xchg
dec
call
dec
repnz
clc
mov
mov
or
fisubs
push
imul
sti
scas
cmp
sti
xor
out
pop
fimuls
inc
cld
push
lahf
sub
out
aaa
xchg
scas
sarl
sub
loop
stc
jecxz
mov
out
inc
mov
out
pusha
lods
cs
fdivrs
xor
sub
es
sub
or
icebp
pop
and
imull
mov
pop
dec
push
das
add
or
cltd
pop
pop
xorl
test
xor
push
test
sub
push
push
inc
pop
mov
int3
lock
stc
mul
in
mov
mov
pop
in
adc
mov
cltd
scas
mov
lods
or
or
clc
inc
ljmp
mov
loope
pop
jae
mov
cmc
orb
xor
fstpt
lods
outsb
xor
shrb
hlt
sbb
sti
pusha
add
aad
add
leave
insl
add
inc
lcall
pop
mov
xor
push
imul
mov
lods
push
jl
push
cwtl
lcall
pop
mov
mov
xchg
negl
ret
test
addr16
xor
sub
adc
push
and
ret
xchg
dec
push
mulb
inc
fisttpll
cmc
fs
movsb
ljmp
dec
sbb
xor
test
push
scas
inc
in
lret
sahf
rcr
je
sub
sub
pop
xor
js
mov
mov
dec
popf
sarb
add
push
lods
or
inc
subl
out
lods
xchg
ds
lock
lea
pop
sbb
or
cwtl
mov
pop
test
sub
and
outsl
out
aas
ret
int3
stos
push
daa
shlb
xchg
cmp
shr
insb
sbb
rol
shlb
fs
adcl
xor
xor
shll
jo
mov
int
pusha
adc
in
out
test
sbbl
popa
aad
in
cmp
inc
and
shr
imul
outsl
inc
mov
pop
push
out
add
ja
fs
jnp
cmpsl
cmp
push
shlb
stos
mov
js
adc
pop
into
into
jmp
push
mov
cs
mov
push
pop
jl
mov
cmpsl
push
and
div
sub
dec
cmc
ljmp
andl
or
xchg
adc
pop
pop
lret
pop
cltd
mov
sbb
dec
arpl
testl
sub
out
jb
mov
dec
jg
in
je
xor
jecxz
aaa
rcll
dec
pop
cmp
pop
lods
fwait
idiv
jo
pop
mov
notb
in
mov
xor
xor
adc
add
dec
or
cwtl
or
lret
mov
lods
inc
jl
ljmp
fstpt
in
stc
dec
rdpmc
inc
int
xchg
pop
das
scas
ret
sub
mov
pop
sbb
fdecstp
dec
xor
xchg
xor
dec
scas
xor
cs
mov
stos
push
dec
ljmp
sub
mov
xchg
rolb
std
inc
insb
outsb
fldl
lcall
and
xchg
mov
cmp
push
fbstp
inc
sub
jl
int
mov
xchg
test
imul
mov
rorl
mov
shrb
sub
es
insb
inc
jns
jns
sti
sub
nop
pushf
ja
sbb
in
mov
mov
jo
shlb
sub
xchg
pop
out
mov
subl
fwait
mov
mov
mov
or
mull
inc
insb
dec
fcmovnb
mov
shll
int3
push
add
ja
lcall
movsb
mov
lcall
push
xchg
std
dec
out
pop
mov
pusha
or
or
inc
fiadds
mov
iret
mov
jl
insl
mov
mov
les
lock
mov
add
xchg
mov
and
clc
jnp,pt
cli
mov
cmpsb
xor
out
dec
sub
decl
mull
mov
lret
or
les
cltd
aad
dec
pusha
xor
shll
repnz
push
ja
lds
in
cmp
push
and
daa
mov
out
lret
mov
sti
mov
es
inc
xorb
orb
arpl
subl
and
xor
fnstsw
mov
or
dec
xchg
jae
cmpsb
lods
nop
pushf
push
data16
dec
lods
out
ja
dec
lds
int3
and
or
xchg
jg
xchg
imul
adc
mov
sahf
aas
fstpt
ja,pn
and
pop
and
inc
cli
sub
xchg
out
xor
mov
push
cmp
sbb
xor
test
aam
dec
jns
sahf
xchg
mov
lds
cmp
pop
out
icebp
pop
cmp
jbe
and
out
movsl
push
les
mov
imul
outsl
popf
scas
or
mov
jne
vaddsubpd
inc
das
lret
in
enter
sahf
std
mov
fildll
loop
jnp
insl
fstpl
psadbw
bound
cltd
pop
pop
adc
lods
scas
movsl
lds
jo
fisubrs
add
fwait
aam
cmp
cmp
and
loopne
les
push
pop
imul
inc
mov
je
xchg
fsubrp
sub
dec
mov
into
mov
test
inc
adc
cmp
out
pop
adc
call
cs
aas
mov
loop,pt
ror
inc
je
inc
mov
jmp
movsl
inc
in
aam
xchg
ficoms
mov
push
in
cmc
std
enter
ljmp
push
jbe
mov
imul
sbbb
or
mov
adc
pop
jne
pop
jnp
mov
inc
nop
int
cmp
call
ds
fwait
dec
cmpsb
hlt
imul
push
mov
test
mov
orl
filds
mov
outsl
add
mov
mov
mov
dec
insl
push
adc
jle
cltd
mov
or
cmp
jmp
cmp
jl
cmp
stos
add
cmp
in
sbb
and
adcb
out
pop
sub
fcmovbe
out
std
push
mov
dec
xor
cld
mov
aas
in
inc
push
xchg
iret
lds
or
xchg
jne
test
adc
mov
int3
icebp
dec
mov
mov
ret
mov
mov
push
xor
add
rclb
dec
xchg
jnp
popf
lcall
add
aas
adc
fldcw
xchg
sub
mov
ja
dec
push
sbb
cmc
or
lock
and
inc
arpl
lods
xchg
or
pop
sbb
nop
jge
and
jb
push
and
jb
imul
cmp
jle
stos
mov
cmp
cmp
sbb
int
mov
imul
int
and
rcr
pusha
mov
pusha
dec
jbe
insb
inc
push
scas
std
lea
push
push
or
jae
jne
jo
lds
loope
lret
rcrl
mov
xchg
mov
outsl
dec
push
mov
xchg
outsb
fstl
movsb
adc
insl
pop
push
push
cmp
push
jg
add
jmp
adc
fmuls
pusha
inc
cmc
dec
out
push
scas
in
ss
and
in
outsl
dec
inc
int3
bnd
iret
mov
mov
call
cmp
adc
cwtl
movl
or
adc
xchg
hlt
or
enter
mov
mov
sbb
out
test
fwait
addr16
cs
push
mov
pop
push
mov
aas
xlat
inc
lea
ret
insb
jb
andl
and
insb
je
cmp
lcall
inc
in
bswap
shll
outsl
adc
inc
mov
sub
lret
push
jo
lds
jnp
and
pop
push
aaa
add
adc
movsl
xor
xchg
jb
xchg
lds
loopne
inc
mov
dec
push
push
sbb
shll
fwait
jbe
loop
aas
xchg
and
push
dec
cwtl
jl
add
int3
ret
hlt
xchg
cmpsb
fists
dec
repnz
aaa
mov
xlat
movsb
aas
imul
inc
adc
xchg
clc
ficoms
mov
sbb
inc
js
adc
sub
sbb
movsb
mov
daa
in
loopne
imul
sbb
inc
add
jecxz
mov
fcmovnbe
cmp
add
jp
lock
adcb
jno
cld
fnsave
xor
addb
das
push
test
lcall
pop
repnz
and
sub
ss
mov
cmpsb
popf
enter
cmp
test
aam
test
push
xchg
mov
mov
cmp
pop
pop
or
addr16
mulb
std
icebp
loop
xorb
cmp
shll
cmp
xchg
and
push
dec
add
pop
mov
in
or
gs
jnp
push
les
sub
popa
les
mov
push
mov
or
mov
mov
fsubr
mov
out
push
xchg
mov
stos
out
jno
fistpl
and
out
hlt
scas
xchg
xor
outsl
int
data16
js
push
adc
pop
or
push
sub
cmp
in
mov
int
in
jno
inc
cmc
aas
in
jle
aam
cwtl
nop
out
sbb
xchg
xor
push
jbe
cmp
and
or
aam
push
cwtl
adc
out
cmpsb
cwtl
cs
in
sbb
and
rcr
inc
mov
cmp
xchg
in
inc
sbb
pop
xor
and
repz
adc
popa
xchg
lret
shrl
xor
mov
inc
in
cli
add
outsl
in
sti
es
ljmp
inc
sbb
ret
push
movsl
pusha
aas
jl
mov
mov
xlat
add
mov
mov
push
mov
xchg
pop
add
scas
push
cwtl
nop
cmpsb
call
lcall
dec
mov
sub
mov
stos
and
push
mov
jns
xchg
lahf
xchg
pop
cwtl
xor
push
push
test
push
or
imul
hlt
lock
pop
lret
mov
sub
jnp
movsb
push
fwait
mov
cmp
jl
gs
je
jg
insl
cmp
sub
xlat
sti
and
adc
add
loop
leave
lock
add
adc
sbb
addr16
mov
jmp
inc
lock
adc
stos
mov
std
adc
adc
insl
roll
push
jmp
and
sbb
out
xchg
cmc
or
rorl
enter
jl
dec
push
mov
ljmp
repnz
lcall
mov
mov
js
xor
adc
push
bound
pop
nop
pop
imul
xor
outsl
sub
getsec
aad
sahf
test
dec
sbb
push
sbb
mov
pop
mov
aad
push
jl
test
out
sti
mov
stc
dec
jbe
loop
subb
lds
or
hlt
pop
push
mov
xchg
add
sbb
addr16
sbb
pop
jno
and
imulb
cs
popa
inc
rorl
iret
push
ds
or
out
cmp
movsl
mov
push
out
xorb
jmp
cmp
fdiv
pushw
stc
jecxz
rcll
add
pop
insl
dec
mov
das
xor
pusha
mov
dec
xor
cmp
xchg
test
or
dec
out
cwtl
xchg
inc
cmp
push
imul
push
push
push
add
dec
mov
pop
mov
cmp
js
xchg
call
mov
inc
dec
divl
cmpl
je
por
xchg
ja
je
popf
repz
repnz
loop
rorb
aaa
lret
int3
popf
ror
xor
pop
loop
mov
jecxz
rorb
mov
ljmp
push
dec
xlat
mov
daa
sbb
adc
push
mov
or
ret
jns
sub
or
flds
cld
clc
jle
scas
sbb
mov
testl
pushf
lcall
stc
push
xchg
repz
sbb
or
xchg
repz
jnp
jg
fbld
mov
jo
test
aam
insl
xor
xor
sarl
and
jb
pop
push
seta
pusha
jo
jge
inc
cs
rclb
push
mov
gs
clc
mov
sub
add
cltd
popa
mov
arpl
loop
das
lock
test
push
pop
jbe
pop
xor
outsb
and
mov
pop
mov
lcall
and
or
xchg
lret
insl
loop
rcrb
out
das
inc
test
xor
cmp
cmp
cmpsb
shll
fwait
inc
dec
xchg
lds
pop
push
ret
fcoml
stos
push
sub
or
pop
sub
and
xor
mov
mov
sbbb
sub
jb
add
push
and
in
jecxz
dec
dec
jae
xor
gs
xchg
scas
mov
pop
dec
in
and
fcompl
push
cmp
push
imul
sbb
cmc
adc
pop
idiv
mov
nop
nop
jne
mov
add
add
jmp
int3
pop
cmp
mov
loop
pusha
mov
xchg
rcrb
aas
ret
push
out
stos
outsb
adc
cs
or
data16
test
std
mov
or
outsb
movl
decb
lret
adc
jecxz
xchg
jb
test
and
rcll
test
xor
jp
lods
call
jle
pop
mov
pop
aaa
mov
ret
inc
cld
ret
test
adc
cli
ret
test
cmp
mov
xchg
fwait
sbb
jl
test
mov
in
aad
shll
test
add
sub
push
cmpsl
push
inc
fsubrl
lock
dec
sub
pop
push
roll
push
sub
sub
movhlps
add
pushf
mov
dec
loope
xchg
or
stos
fdivr
test
sahf
or
adc
arpl
mov
cmp
add
cmpsl
dec
dec
nop
gs
enter
cmp
adc
dec
adc
popf
dec
jp
notl
cmovs
cmp
adc
lds
mov
mov
aaa
xchg
lock
cmp
in
dec
jae
inc
cmp
std
xor
fnstenv
stos
fnstsw
or
xchg
dec
xor
jl
mov
add
ja
rorl
push
aam
xchg
pop
add
mov
jo
popa
adc
aaa
xchg
cltd
rcr
dec
mov
ljmp
cmp
in
pop
adc
jg
aam
repnz
cld
scas
push
inc
es
xchg
cwtl
les
push
pushf
cmpsl
mov
inc
shlb
fsubrp
xorb
sbb
mov
jg
or
fsubl
gs
into
lods
ret
mov
test
mov
pop
jge
lock
clc
adc
add
pop
dec
into
xchg
xor
jns
shrb
std
clc
sarb
sti
jecxz
adc
out
btr
or
fidivrl
lahf
jle
test
gs
mov
pusha
aad
sti
mov
inc
in
gs
sub
or
ror
adc
sahf
or
xor
mov
inc
pop
fistl
roll
sbb
cmp
loope
mov
in
shlb
and
out
shll
pop
stos
add
xor
mov
popf
outsb
and
arpl
shlb
inc
adc
add
xchg
inc
cmp
jge
and
hlt
push
aaa
ds
xchg
shrb
lds
lea
pop
lds
test
sar
cltd
sbb
dec
xchg
lret
sbb
xlat
fisttpll
inc
xchg
cld
xorl
test
sub
add
adc
dec
mov
into
lock
lock
leave
pop
cs
sysenter
outsl
lret
sub
je
scas
push
lea
pop
inc
push
pop
out
jg
cmp
loope
imul
mov
scas
insl
xchg
xor
inc
dec
push
lret
js
pop
ljmp
pop
cwtl
out
and
mov
jo
sbb
inc
mov
icebp
ja
add
sub
aam
aam
popf
fdivs
sbb
xlat
push
mov
jmp
insb
add
jle
call
adc
adc
sbb
xor
aas
dec
mov
int3
jo
nop
xchg
loope
add
icebp
adc
adc
pop
test
sti
mov
cmp
rclb
ljmp
add
movsb
loopne
ror
les
in
fwait
sub
inc
dec
arpl
js
xor
fwait
xor
pusha
int3
xchg
mov
out
xchg
add
cmpsl
popa
fwait
ljmp
inc
sub
push
mov
jmp
fucomi
mov
shll
dec
add
xchg
in
das
xor
mov
rolb
or
jp
sbb
fmull
inc
cmpsl
xchg
sbb
sub
push
pop
xchg
and
aam
fnstsw
les
and
inc
dec
xchg
sbb
mov
cmp
dec
mov
dec
dec
mov
add
in
imul
mov
arpl
xchg
mov
dec
xchg
cltd
stos
dec
loop
cltd
add
mov
inc
int
sbb
ja
pop
mov
rcr
enter
inc
test
shl
cmp
rcrl
adc
popf
mov
fisubrl
in
sbb
push
mov
shlb
addr16
sub
movsl
gs
jne
add
arpl
aas
mov
ret
cmp
add
mov
inc
mov
mov
and
mov
jmp
xor
sahf
cmpl
popa
jae
scas
inc
pushaw
xchg
sub
rcll
inc
sti
and
insl
fstl
xchg
adc
mov
repz
push
and
ss
inc
shr
cmp
jbe
call
fdivr
shl
das
loope
fstpl
xor
xor
pusha
int
or
paddq
aas
outsl
dec
push
ficoml
in
pop
or
rorb
push
mov
mov
sbb
inc
cmp
fcomip
pop
std
push
lods
pusha
pop
adc
addb
les
mov
daa
add
ds
and
fcompl
call
sbb
sbb
out
xor
push
xor
std
fwait
shll
aad
push
in
adc
pop
jp
dec
mov
adc
int3
fimuls
lahf
xor
popf
mov
jl
mov
fildl
jae
pop
and
shlb
outsl
mov
jno
pop
and
sbb
xor
cmp
add
cmp
out
inc
jno
js
adc
setbe
push
cld
inc
ds
xlat
push
sub
inc
xchg
jnp
dec
mov
cvtdq2ps
jne
dec
pop
rolb
sbb
xor
fidivrl
pop
loope
in
adc
rorb
add
mov
pop
stos
mov
mov
popa
xchg
out
cmp
jmp
outsb
jae
push
addr16
cmp
cmp
xchg
add
lret
std
in
loopne
pop
push
das
mov
enter
stos
int3
add
push
stc
fistpl
push
into
mov
xchg
and
sbb
sbb
sub
lock
gs
iret
in
inc
or
push
gs
dec
push
arpl
movsl
pop
adc
cmp
xorl
lock
and
xchg
fstpt
test
mov
dec
out
pop
scas
add
lret
jbe
and
es
push
dec
jge
adc
sub
fmull
aam
inc
xchg
cmp
adc
push
xchg
jb
xor
and
mov
sbb
sbb
or
sub
out
rcll
cmpsl
xchg
iret
dec
pop
decb
mov
sti
test
in
nop
mov
fabs
adc
sub
adc
into
push
or
cmp
test
inc
mov
push
gs
mov
out
inc
pop
jnp
popf
cmp
jne
pop
cs
xchg
xor
mov
ja
enter
dec
orl
popf
lret
mov
dec
and
mov
insb
cmp
xor
dec
jb
mov
movsb
test
lds
push
xor
leave
not
insb
outsb
mov
stos
inc
in
mov
stos
dec
les
push
pop
inc
jne
sub
xchg
jmp
call
mov
xchg
mov
mov
push
iret
cmp
imul
cmp
test
mov
pop
cmp
push
cmpsl
out
cmp
dec
lahf
inc
pop
andb
cmpsb
mov
xchg
fimull
xor
adc
push
mov
stc
out
mov
insb
sub
outsb
aas
loope
inc
mov
adc
add
fdivs
or
and
stc
or
mov
sub
decl
mov
insl
adc
pop
cmpb
mov
xor
rolb
lods
inc
dec
repnz
mov
add
jo
push
dec
mov
and
data16
add
mov
xor
jecxz
xor
cmp
xor
push
loop
mov
and
ljmp
adc
sbb
push
push
in
scas
popf
cwtl
push
cmp
jns
mov
mull
or
insl
fisttps
ret
testb
cltd
sbb
fs
jecxz
imul
loop
aam
add
scas
sub
dec
mov
sub
fnstcw
pop
sub
mov
pushf
outsb
mov
mov
fs
shr
shrl
fistps
sarb
cmp
cmp
subb
inc
xor
mov
lret
xchg
jnp
push
mov
aam
mov
popf
les
rolb
testl
pop
or
enter
sbb
test
arpl
mov
lods
aad
push
or
xor
fdivr
leave
aaa
jbe
sub
cmpsb
je
xor
mov
inc
int3
adc
fucomi
jbe
in
adc
pusha
pop
mov
pop
xchg
push
xchg
aaa
push
in
and
inc
jge
movb
lods
ss
mov
adc
dec
fcomps
shrl
sbb
test
ss
mov
mov
xchg
jno
dec
push
aam
mov
into
pop
sub
scas
fwait
out
test
add
mov
addl
or
ljmp
push
or
je
int3
dec
jg
ficoml
js
mov
lret
sbb
icebp
and
xchg
mov
jmp
jp
adc
int3
mov
int
sahf
pop
sub
pop
imul
xor
inc
adc
sbb
mov
fwait
cs
mov
jmp
sbb
cmp
jle
test
xchg
sub
incb
xchg
pop
outsl
sbb
push
aas
inc
jne
test
mov
orb
sub
jae
mov
push
mov
subl
mov
mull
xchg
lahf
xor
and
sbb
cmpsl
mov
push
sub
orl
aaa
mov
loopne
jb
dec
pop
dec
xchg
add
add
out
aad
movsb
xlat
daa
fnsaves
rolb
pop
sbb
fistpll
add
xor
mov
or
sub
cmc
mov
ja
sbb
cli
xchg
adc
sarb
mov
ret
in
int3
jb
add
jae
and
nop
iret
xchg
cld
in
das
shlb
pop
sub
cmp
dec
mov
add
int
das
sbb
mov
inc
cmp
lcall
sbb
negl
xchg
sub
mov
jmp
mov
imul
loope
dec
dec
int3
mov
mov
scas
shll
jnp
lods
int3
adc
inc
sbb
mov
rolb
stos
stc
sbb
or
arpl
pop
jbe
aad
addr16
loope
outsl
dec
scas
cmp
cld
mov
iret
push
pop
jg
aam
nop
mov
cmp
imul
and
rorl
lcall
or
jns
lcall
dec
in
cmp
pop
adc
mov
push
insb
into
jno
xchg
push
test
in
sbb
orb
stos
cmp
out
jo
out
xor
xor
sub
dec
xchg
in
mov
jmp
adc
dec
dec
mov
inc
mov
test
mov
out
stos
jno
mov
jp
fmulp
push
ss
adcl
push
lcall
xchg
jp
ss
mov
sub
pusha
mov
mov
ds
add
pop
lahf
lahf
mov
inc
jne
ret
xchg
ja
hlt
push
cmp
jle
lods
mov
leave
bound
pop
push
into
pop
inc
xchg
ljmp
in
into
cmc
jmp
in
rcr
xor
bound
and
stc
stos
aas
adc
push
or
shrb
stc
nop
pop
outsl
xchg
cmp
cld
inc
rcr
popf
insb
pop
xchg
lock
or
dec
imul
xor
dec
jne
jne
mov
mov
out
add
cmp
sub
cli
mov
jne
hlt
mov
dec
dec
es
fs
jecxz
and
add
test
imul
rcrl
mov
sbb
push
mov
sub
fldenv
pop
xor
icebp
lcall
pop
and
lret
and
rol
adc
or
or
sti
outsb
fs
jl
pop
dec
cmpl
fimull
hlt
xor
sbb
imul
or
cltd
ret
ss
fstpt
xlat
mov
jnp
jae
push
iret
dec
mov
test
stos
jbe
cmp
xor
and
mov
in
add
pop
xor
cmp
cmpsb
mov
daa
in
fwait
repz
nop
popa
xchg
scas
mov
popf
xor
lea
test
fisttps
cmp
mov
jbe
jg
adc
and
shrb
xchg
mov
lods
outsb
loopne
lds
sarl
js
ret
inc
sub
xchg
inc
cmc
cmpsl
inc
pop
mov
dec
mov
insb
pop
lds
jno
mov
jns
inc
mov
subb
fdivl
das
or
imul
pop
dec
sti
int
test
add
push
ljmp
push
or
adc
push
aam
push
jg
lcall
sub
cli
or
inc
push
lock
sbb
sahf
adc
inc
jne
testl
jo
inc
dec
mov
arpl
aad
add
call
mov
daa
loopne
mov
gs
pop
push
aas
sahf
jp
lea
push
pop
insl
sub
adc
or
jmp
mov
pop
test
out
cltd
insb
jl
dec
mov
jmp
js
pop
mov
in
mov
icebp
xorb
push
mov
jno
imul
pop
mov
mov
xchg
jmp
add
cmovns
jecxz
inc
inc
jmp
repnz
dec
push
mov
push
cmpsb
cmp
mov
jno
in
jp
pop
xchg
mov
int3
fisubrl
lcall
xor
insl
push
mov
pushf
ljmp
adc
mov
pop
inc
mov
push
int3
ljmp
jmp
sub
call
add
stos
push
mov
outsl
int
and
stos
xlat
mov
ljmp
rcl
pop
cmpsl
daa
push
lcall
adc
jmp
mov
sbb
andb
shrb
outsl
lods
cmpl
incb
jmp
cmp
clc
adc
mov
mov
arpl
fs
mov
mov
cmp
xchg
dec
fidivrl
aad
nop
inc
shrl
dec
xchg
mov
scas
xchg
dec
adc
jmp
xchg
ret
sahf
or
cmc
je
jl
xchg
add
cld
jp
adc
mov
cmpsl
dec
mov
pop
call
lcall
sub
lods
test
cwtl
mov
ja
out
movsl
sub
test
testl
push
rorl
cmp
clc
call
or
mov
mov
js
add
bound
cmp
sub
jle
loope
movsb
jmp
shrb
mov
repz
dec
jle
aam
mov
int3
scas
dec
enter
mov
adc
divl
pop
adc
fs
shll
sbb
subl
adc
push
test
lods
and
stos
xchg
test
fisubs
sbb
cmp
xlat
adc
shll
mov
xlat
mov
dec
lret
and
sub
neg
cmpsb
neg
arpl
mov
jns
mov
fldl
push
pop
loope
mov
jno
sbb
imull
cli
test
int
icebp
stos
dec
cmpsl
leave
push
pop
pop
or
mov
ss
mov
test
lods
loope
sbb
xor
aam
lock
aam
lret
xorl
cmp
sbb
cmp
mov
mov
jmp
xchg
xchg
pop
adc
popa
loop
cmpsb
pop
divps
in
push
icebp
sub
xchg
cmp
mov
xchg
int
sub
add
mov
loope
ret
pusha
popa
shrb
out
sub
stc
lahf
mov
pop
rol
or
mov
dec
pushl
cmp
jge
out
rcll
data16
and
mov
jb
push
adc
rol
push
ja
sbb
mov
sbb
test
enter
cmp
sbb
mov
jge
xor
jae
call
inc
pop
cmp
pop
mov
and
ljmp
imul
xor
cmp
dec
cwtl
mov
sbb
mov
mov
adc
jnp
jp
mov
lret
mov
mov
scas
sbbl
mov
repz
aas
decl
inc
sahf
xchg
sub
leave
pop
cmpb
test
shll
das
jl
inc
lret
sbb
lods
sbb
aad
mov
adc
sbb
mov
rcrb
iret
jnp
jnp
mov
jl
xor
jo
out
outsb
test
jg
inc
sbb
pushf
xchg
mov
dec
xor
repz
push
dec
push
mov
jle
xchg
stc
in
add
lret
sahf
in
inc
les
rol
mov
push
movsl
xchg
inc
sub
dec
stos
and
std
jo
push
cld
lods
mov
and
push
push
aas
fistps
sbb
dec
in
popf
scas
aas
inc
xchg
push
andb
or
es
lods
into
pop
bound
dec
stc
and
mov
push
add
mov
inc
and
aam
sbb
mov
or
dec
inc
xchg
mov
cwtl
mov
dec
inc
inc
adc
mov
test
loop
adc
dec
adc
jmp
in
and
sub
xor
fstpl
push
pop
int3
adc
add
insb
in
leave
dec
hlt
shll
adc
push
push
inc
pop
push
popf
xor
adc
fsubrl
mov
les
nop
push
pop
cmp
in
add
and
sub
pop
pop
subb
cmp
std
jmp
mov
leave
dec
or
push
fsubp
or
in
aam
lahf
rcr
and
clc
test
pop
rclb
movsb
cs
roll
lcall
je
aad
rcrl
gs
aad
push
pcmpgtd
inc
int
xorl
mov
lock
mull
pop
jecxz
std
lahf
adc
push
popf
cmp
push
call
dec
arpl
cmp
test
inc
mov
mov
mov
shll
sub
out
and
dec
mov
or
ficoms
add
test
xchg
adc
jbe
jns
std
mov
xor
sbb
je
inc
adc
jne
aaa
movsb
push
int
fistpl
iret
jmp
cmp
push
push
leave
fs
ja
jg
decl
add
in
inc
ret
notb
mov
roll
in
cmp
stos
jno
mov
outsb
push
inc
cltd
and
data16
dec
or
daa
dec
mov
jnp
adc
bnd
adc
sbb
sbb
xchg
stos
ja
push
nop
pop
xor
loope
lds
sbb
jmp
push
lret
adc
pop
mov
xor
jl
aad
pop
ret
pop
mulb
adc
add
pop
test
in
mov
cld
cmp
sub
cwtl
adc
xchg
adc
push
push
insl
dec
sub
scas
xor
mov
cld
mov
pushf
hlt
test
cmc
out
add
add
addr16
mov
or
in
push
ljmp
cmp
lds
and
sbbl
sub
cmp
fdiv
or
in
push
xor
or
addr16
cltd
scas
xchg
lea
mov
pop
push
shll
es
xchg
lock
repnz
jge
push
mov
push
cs
adcb
ljmp
jbe
xchg
cltd
xor
mov
push
mov
loopne
int
pop
dec
jmp
jle
scas
imul
push
adc
sbb
dec
pmaxub
bound
push
popa
push
lret
xor
mov
in
shlb
movsl
in
int
in
push
push
lea
js
cmp
cmp
jl
mov
sub
push
jne
mov
cmp
and
cmp
dec
inc
xor
nop
popa
pop
mov
jmp
xchg
bnd
xchg
mov
sbb
xor
ror
leave
sbb
mov
incl
dec
or
loop
mov
mov
sub
je
testb
sahf
fildll
xor
test
pop
cmp
loop
lret
mov
and
push
sub
add
ficoml
arpl
sbb
adc
pop
cld
jle
push
cs
mov
cs
pop
dec
into
and
adc
mov
out
xchg
xchg
jae
out
inc
dec
pop
xchg
lods
lahf
orl
imul
and
push
imul
xlat
sub
and
movl
test
les
movsl
dec
test
xchg
fsubr
ja
scas
std
jmp
cli
or
sub
mov
inc
leave
push
push
repnz
lods
lods
out
bound
sub
adc
fisttpll
daa
mov
lds
sbb
ljmp
adc
pop
out
cltd
out
aam
dec
mov
dec
stos
mov
cltd
push
je
mov
pop
fidivrs
ds
test
pop
enter
jle
data16
cmp
mov
adc
je
pushl
shll
cmp
add
jmp
xor
outsb
out
aaa
jmp
pop
sahf
loopne
push
data16
fwait
jge
gs
jp
mov
rcpps
pop
clc
mov
add
lock
ficompl
shrb
sbb
jecxz
mov
cld
jae
call
pop
xor
mov
scas
je
insb
sbb
fistps
xorb
daa
add
cmp
and
faddp
or
mov
pop
lret
out
xlat
jo
or
jb
loop
pop
sti
or
leave
sahf
ret
mov
mov
push
ds
mov
mov
repz
outsb
xchg
stos
test
xor
push
add
decl
imul
or
mov
xor
or
fcmovnu
fs
jb
leave
sub
cs
push
fisttpll
test
jge
ja
cmp
sub
jns
stc
icebp
stos
or
mov
cld
xchg
inc
jbe
bound
addr16
cltd
daa
es
sub
stos
add
sti
mov
or
pop
jmp
sbb
adc
jno
pop
fs
bound
mov
mov
ss
pushf
das
outsl
push
jb
jecxz
push
cmp
xchg
lcall
test
rcr
std
mov
outsb
jge
mov
add
sahf
push
fcmove
dec
outsb
jle
decb
repz
mov
mov
movsl
loop
xchg
fisubs
sub
test
cmpsb
out
orl
loopne
outsl
pop
jge
rorb
mov
jmp
dec
out
insl
push
fwait
mov
mov
mov
in
inc
sahf
pop
add
lds
mov
icebp
push
popf
xlat
stos
faddl
mov
stc
push
shlb
mov
mov
mov
insl
adc
dec
movsl
sbb
fsubrs
imulb
jmp
adc
dec
jb
mov
ret
push
cmpsb
imul
es
test
inc
ret
push
dec
sub
insb
mov
nop
add
xor
jl
jmp
aam
add
jle
je
and
out
jecxz
jae
xchg
mov
movsb
cmp
orl
or
inc
add
mov
pop
scas
mov
or
pop
aaa
sub
aaa
outsb
fs
mov
mov
adc
xorl
cmpsb
in
mov
repnz
jb
pop
negb
idivb
mov
shll
sub
jle
test
insl
out
cltd
call
inc
aas
aam
jmp
imul
popf
stc
ret
mov
mov
adc
dec
xchg
add
or
or
xchg
push
les
movsb
mov
add
mov
dec
cmp
test
sub
stos
dec
push
cmpsb
loop,pt
movsb
pop
xchg
or
out
push
pop
in
lods
or
dec
inc
add
sub
pop
jnp
loopne
dec
jecxz
ljmp
push
out
and
cmp
rclb
repz
nop
dec
insl
xor
enter
jno
addl
inc
mov
rol
jmp
mov
push
mov
inc
cmpsb
pop
stc
add
js
insb
xor
leave
iret
sbb
bound
rcr
mov
ds
out
bound
xchg
stos
in
pop
jae
fsub
add
xchg
push
sub
in
lcall
mov
mov
pop
jae
mov
xchg
pop
sub
pop
adc
add
mov
ret
popf
or
and
cmp
pusha
mov
mov
cltd
jno
out
std
xchg
popa
subl
and
fucomp
xchg
add
adc
sub
jge
push
mov
pop
daa
or
lahf
adc
adc
inc
lea
xchg
and
ds
rolb
xchg
lret
adcb
pusha
js
testb
daa
push
dec
xor
pusha
fisttpll
je
into
movb
daa
subb
dec
call
lods
and
cltd
and
inc
sub
and
repz
jl
mov
psubsb
jecxz
pop
xor
add
aas
movsb
rorb
inc
add
clc
scas
stos
pop
fldt
ljmp
mov
hlt
jecxz
cmp
sub
jno
xchg
mov
pop
cmp
pop
sti
imul
popa
imul
pushf
xlat
aad
pop
cmp
xchg
mov
out
lds
insl
jg
in
imul
and
push
aad
in
dec
mov
insb
lret
push
shrb
cmp
and
mov
pusha
push
mov
xchg
mov
fs
dec
push
mov
inc
sub
js
mov
mov
int3
fstpl
gs
push
mov
adc
push
outsl
cmpsl
into
sub
insl
cmp
mov
testb
fsubs
ret
lods
lds
loop
mov
push
push
dec
pushf
iret
mov
pop
push
jle
xchg
mov
pusha
mov
xchg
sub
arpl
repnz
std
sahf
shl
fucomp
ret
enter
insl
pusha
imul
aaa
xlat
push
dec
data16
aaa
cmpsb
xor
in
addr16
movsl
push
into
repnz
not
push
imul
adc
js
sub
in
jmp
hlt
rcrb
and
jg
inc
add
lods
xchg
sti
imul
dec
movsb
sbb
xor
addb
testl
pop
shll
lods
push
pusha
jl
dec
repz
push
sub
add
jmp
push
cltd
loope
mov
jbe
nop
push
in
mov
jmp
pop
sti
lock
stc
xchg
sub
int3
inc
dec
cmp
cmp
jmp
scas
fldlg2
mov
inc
ret
mov
mov
shll
inc
xlat
jno
xchg
sub
mov
shl
jo
adc
add
leave
push
pusha
sbb
push
ds
mov
sahf
xchg
roll
fwait
loope
or
loope
or
cltd
ret
pop
xchg
rol
xchg
aam
jae
adcb
fwait
aam
fsubr
stos
add
cmp
pop
or
jb
stos
mov
mov
adc
dec
ljmp
push
inc
ss
int3
push
adc
cmpsb
ds
fcompl
fisubs
mov
fisttps
dec
out
xor
cli
sbb
orl
out
xchg
cmpsb
adcl
in
push
pop
and
xchg
jl
adc
loopne
inc
mov
sub
push
inc
popa
or
inc
push
adc
les
jo
pop
adc
or
add
add
aam
imul
mov
push
sbb
mov
sub
lock
dec
mov
sbb
repz
dec
stc
add
leave
pop
fwait
pop
ret
mov
in
pushf
mov
pop
xchg
pushf
mov
divb
push
in
add
loopne
mov
mov
jp
test
into
push
psraw
adc
lret
mov
dec
aad
cltd
and
cmp
pop
cmp
add
test
shll
into
ret
mov
test
mov
cli
inc
test
and
or
mov
inc
std
jae
shll
push
iret
data16
sub
lods
mov
jge
xchg
clc
insb
dec
inc
push
movsl
cmp
scas
inc
in
mov
pushf
jnp
mov
cltd
lcall
imul
mov
inc
mov
subb
add
mov
add
aad
and
int
push
pusha
movsl
fwait
mov
xor
stos
sbb
gs
xlat
lret
loope
lret
andl
xor
stos
mov
popa
cmpsb
cmp
sub
scas
jl
sbb
adc
insb
js
test
xchg
stos
pop
mov
and
or
ret
jp
dec
mov
push
jbe
lret
insb
cmp
xchg
repz
and
sub
adc
cli
shll
adc
push
jno
cmpsb
push
cmp
lock
dec
or
movsl
dec
inc
aad
mov
lahf
pop
add
or
test
sbb
rclb
inc
aaa
xchg
adc
push
and
test
fidivrs
mov
scas
sub
in
mov
ss
sbb
cwtl
jle
fidivl
push
and
pop
fmuls
dec
mov
add
mov
fwait
mov
rcl
mov
stos
adc
adc
iret
xchg
iret
push
mov
push
outsb
jae
lods
mov
xchg
cmpb
imul
or
jb
mov
push
data16
pusha
clc
mov
inc
divl
push
mov
imul
or
sub
pop
cwtl
stc
dec
and
stos
ds
jae
add
fistpll
adc
jle
loop
pop
dec
mov
lea
cld
cs
in
pop
leave
pop
sbb
lret
in
stos
push
shl
add
inc
lock
stos
mov
push
mov
mov
cmp
adc
pop
jns
ja
movsb
stc
fidivs
std
rcr
jge
cmp
int
movsl
inc
das
push
cmp
scas
mov
mov
cmp
sub
sub
xchg
add
das
lret
xor
sahf
dec
cmp
xchg
repz
cld
setg
sbb
mov
and
clc
mov
add
push
inc
mov
fimuls
imul
and
loope
testb
jo
imulb
adc
movsb
fmuls
xor
shrl
push
les
inc
xchg
lods
movsl
xchg
xlat
in
das
xchg
mov
dec
dec
cli
and
cmpsl
adcb
or
insl
enter
loope
shrb
mov
out
aad
jbe
out
sti
iret
or
stos
ja
ret
cmp
andb
push
loopne
shll
xor
xchg
divb
inc
ror
daa
sbb
fdivrs
test
sahf
sbb
sub
enter
xchg
pop
cmp
push
les
and
clc
or
xor
insb
mov
mov
and
dec
loope
and
sub
jge
jae
pop
mov
test
loop
hlt
xor
and
mov
testb
aad
xchg
inc
mov
test
leave
outsb
loop
mov
in
and
jb
push
rcll
and
sbb
hlt
sbb
stc
dec
insb
adc
clc
jae
pop
nop
jo
xchg
aaa
dec
mov
frstor
adc
int3
cwtl
movsb
jg
lods
notb
xchg
inc
repnz
xor
xchg
pop
xlat
into
pop
ja
xchg
lahf
push
inc
aam
data16
sbb
mov
jg
mov
test
in
inc
scas
pop
cwtl
adc
int
inc
sahf
fs
rcrb
test
push
insb
inc
pop
pop
push
ret
sbb
inc
ret
adc
ja,pn
out
jle
outsl
sub
int
mov
inc
mov
mov
xlat
xchg
js
call
mov
dec
jnp
mov
sbb
xchg
lods
sub
int3
ljmp
aam
mov
push
addr16
sti
stos
push
adc
rolb
cld
lods
pop
les
xchg
jle
dec
push
xor
xchg
xor
mov
sbb
sub
or
push
push
jns
pop
xor
add
pop
mov
lret
lods
jns
mov
sbb
sbb
dec
and
jle
sbb
dec
bound
and
mov
orl
push
test
mov
mov
xorl
test
mov
or
adc
jbe
jg
xchg
sbb
insb
iret
add
mov
jmp
push
fs
or
cltd
clc
cmp
cs
jb
pop
mov
roll
pop
daa
mov
xchg
movsl
sbb
sbb
cwtl
xchg
pop
jb
insb
pop
push
mov
xor
test
leave
xlat
xchg
into
xchg
movsl
and
scas
xor
push
in
mov
outsl
int
fs
push
xor
lds
and
push
pop
mov
lock
xchg
jo
mov
cmp
mov
xchg
add
pop
hlt
xchg
push
adc
push
jmp
sbb
cmc
rclb
dec
jge
cmp
cs
loopne
sbb
ljmp
cs
add
adc
adc
cmp
jae
jns
mov
repz
mov
dec
psubd
incl
dec
scas
loope
cmp
mov
lahf
ss
mov
test
pop
mov
fstl
mov
sbb
movsl
inc
sub
stos
cmp
mov
fcoms
fimuls
pop
jge
sub
movsl
and
xor
leave
out
jae
mov
mov
mov
and
aas
pop
into
and
mov
jne
std
pop
iret
lcall
leave
fnstenv
mov
scas
fistl
stos
add
pushf
loop
jae
hlt
imul
and
lret
push
push
jae
test
addr16
movsb
jmp
dec
lods
jne
lods
jns
roll
loop
pop
inc
mov
fs
js
fdivrs
sbb
cmpsb
and
push
add
cltd
cmpsl
scas
mov
mov
mov
lods
fstps
jns
adc
or
push
mov
mov
int3
push
iret
dec
pop
lods
mov
sub
jg
daa
leave
adc
pop
add
mov
stc
rol
imul
inc
pop
fistpll
cltd
sub
adc
dec
jno
jecxz
js
jge
das
in
fldt
inc
dec
inc
xorb
and
notl
pop
xchg
mov
adc
lock
dec
cli
xchg
add
clc
es
clc
test
movsl
fistpl
add
je
pop
insb
arpl
fwait
out
loope
or
ljmp
call
int
mull
movsb
shll
push
sub
fistpll
jbe
sub
fnstsw
mov
mov
mov
rcr
inc
sbb
leave
mov
int3
fldcw
add
add
cmp
daa
sub
data16
stos
shll
fdivl
jb
adc
cs
mov
ljmp
xor
dec
fidivrs
aas
mov
decl
jl
shl
ficoml
pop
imul
ljmp
lods
ret
out
xchg
cmpsl
add
outsb
mov
pop
orb
fldln2
xchg
lds
and
push
inc
and
pop
mov
inc
out
lock
leave
stc
adc
sbb
ja
stos
cmp
xlat
push
sub
pop
jae
mov
shll
pop
in
inc
hlt
icebp
or
adc
ljmp
sbb
mov
xchg
addr16
scas
cmpsb
imul
lods
movsb
in
xchg
lods
sbb
enter
scas
dec
loope
int
jmp
ret
adc
leave
bound
mov
es
xchg
adc
pop
je
test
ljmp
rcll
bound
cwtl
xchg
cld
adc
mov
out
pop
outsl
cli
inc
jge
ror
loopne
pop
loope
ret
in
ss
fiaddl
ja
inc
push
mov
jne
les
arpl
cli
dec
or
add
cmp
cli
xchg
pop
xor
in
rcrl
pop
movsl
sub
jmp
in
xchg
mov
adc
xchg
ljmp
jnp
cmpsl
scas
xchg
mov
cmpsb
push
int3
adc
and
ret
mov
jmp
movsl
nop
add
inc
aam
mov
jnp
mov
insl
push
dec
mov
adc
lods
pop
je
ja
jno
outsb
or
cmp
cmp
push
stos
jns
bound
int3
jnp
and
int
data16
lods
mov
in
loopne
sub
sub
cmp
fucomi
sti
cmp
mov
dec
int
in
ftst
lods
inc
jle
mov
or
xor
mov
ss
lret
push
incb
sbbl
sahf
in
mov
sub
sub
daa
adc
mov
out
sbbb
jge
ds
data16
mov
add
repnz
xlat
mov
pop
xchg
lahf
arpl
pop
mov
sbb
inc
test
js
mov
pop
or
into
adc
jbe
pop
mov
out
divl
mov
sahf
or
in
jbe
or
dec
inc
into
xor
and
add
sbb
popf
mov
add
bound
jp
sti
cmp
jne
nop
dec
iret
cmp
dec
xor
inc
rcr
out
pop
jmp
add
mov
out
sub
outsb
aad
scas
pop
pop
jb
pop
sub
sahf
sar
push
fs
add
adc
mov
fnstsw
in
or
cmp
movsb
sub
jmp
loopne
dec
xchg
pop
pop
sti
xor
jge
fidivs
jbe
inc
and
push
daa
adc
sbb
lret
pop
jae
shlb
shl
xchg
jecxz
xorb
and
out
mov
cmp
push
dec
xchg
adc
jp
xor
in
popa
push
jbe
sbb
inc
mov
cli
mov
fidivrs
rcl
call
gs
and
cmp
pop
or
adcb
ffree
es
lea
out
xchg
cmp
xchg
int
sbb
sahf
or
inc
mov
cmp
dec
fistpl
test
pop
jbe
xchg
xchg
push
inc
aam
or
ret
cwtl
mov
lret
mov
jnp
icebp
cmp
repnz
lret
out
push
in
in
add
into
scas
jmp
gs
jnp
xor
dec
inc
cmp
pop
leave
and
add
andb
jp
je
rcll
inc
mov
xchg
in
adc
js
pusha
mov
mov
shrb
repz
push
cmp
lea
dec
or
in
imul
rcl
lock
mov
divb
sbb
mov
and
jo
inc
xchg
lds
jb
into
mov
fs
clc
gs
std
xor
out
xchg
shrb
pop
lret
push
push
call
fiadds
inc
or
jmp
sbb
out
xchg
cmp
sbb
out
shlb
jmp
loopne
sub
pop
repz
cli
ljmp
add
mov
mov
cmp
adc
repnz
repz
subb
ds
and
sarb
shrb
rorb
cmc
mov
sbb
xchg
bndstx
iret
push
sahf
sbbl
cltd
add
push
loopne
insl
popa
xchg
adc
daa
lcall
lods
xor
or
imul
sbb
or
bound
and
lcall
mov
adc
pop
ret
rsqrtps
imul
inc
mov
mov
outsb
mov
clc
cmp
punpckhwd
xor
lcall
dec
add
std
enter
jecxz
push
xor
push
mov
xchg
xchg
cmp
in
mov
push
pop
xchg
jmp
jle
imul
push
xchg
negb
fists
fcompl
dec
pop
jo
or
fistpl
dec
xor
and
lret
and
jp
stc
pop
push
addl
cmp
data16
lahf
sub
cltd
push
imul
mov
scas
leave
inc
cmp
pop
negb
std
jbe
jno
out
xchg
cmp
lret
int
mov
xchg
push
lret
out
loope
push
xchg
hlt
fsubs
in
dec
mov
or
push
push
gs
pop
cmp
lods
ficoml
jo,pn
sbb
mov
roll
mov
xor
ss
pusha
aad
jl
adc
out
inc
test
xchg
jnp
mov
sbb
pop
jl
addr16
or
sub
mov
jmp
push
sti
xor
lds
loope
adc
pop
sub
out
jmp
add
push
and
lods
push
mov
fidivl
sub
or
push
pop
xchg
lret
and
dec
xchg
cmc
dec
cld
mov
sbb
adc
mov
xchg
lret
cmc
inc
dec
pop
lahf
inc
mov
test
push
lods
in
sub
lea
sub
pushf
pushf
adc
inc
rol
add
mov
int3
add
jmp
stos
mov
push
pop
outsl
push
mov
and
cli
sub
cwtl
clc
movsb
cmp
push
mov
or
aaa
pushl
lock
pushf
sub
ja
push
xchg
notb
xchg
dec
outsl
aam
insb
iret
sub
scas
adc
or
sub
lods
adc
out
pop
insl
push
fisubrs
and
jnp
sbb
nop
notl
mov
sbb
push
icebp
mov
mov
jb
daa
stc
mov
add
and
enter
and
mov
inc
lahf
daa
and
es
jne
nop
or
push
dec
out
mov
or
or
es
cld
outsb
xchg
and
inc
xchg
mov
and
addl
ss
add
aam
lds
in
outsb
shrb
loope
and
lds
lahf
ret
outsb
xchg
test
xor
xlat
mov
mov
fiadds
xchg
int
push
clc
std
shl
fisttpll
imul
notb
aad
icebp
aaa
movsb
pop
repz
sbb
outsb
dec
decb
xchg
sbb
pop
int3
sub
mov
clc
out
shl
fistpll
addr16
adc
idivl
aam
add
mov
mov
addr16
mov
insb
stc
sbb
jg
add
popa
cmpsl
cmp
xchg
shll
jne
lock
idiv
xchg
and
mov
inc
sbb
div
dec
fisubs
push
mov
mov
in
inc
sahf
imul
push
fdivl
mov
adc
inc
iret
es
add
out
xchg
das
inc
pop
adc
sti
cmp
or
into
test
insl
ja
jl
les
mov
enter
xor
lea
lods
push
lods
mov
sbb
mov
xor
sbb
mov
lret
sbb
pop
sarl
add
or
dec
jg
fiadds
cmpsb
mov
push
nop
je
cmp
or
or
and
mov
popf
cmp
aaa
sub
push
xor
scas
cmp
cli
xchg
xchg
arpl
shlb
pop
jl
repnz
in
jne
subl
test
scas
fisubl
fstp
sub
popa
and
pop
fidivs
dec
add
xchg
push
mov
xchg
test
and
push
hlt
push
repz
or
mov
adc
xor
add
push
ljmp
in
std
mov
verr
rcll
stc
pop
xchg
jmp
push
shrb
aam
leave
adc
cmp
xchg
ljmp
dec
dec
mov
jmp
xor
jo
in
or
inc
aas
sti
and
shlb
and
test
cld
clc
xor
std
imul
pop
jp
into
je
xor
jnp
adc
push
xchg
pop
adc
xor
and
lret
adc
sub
push
pop
jge
xchg
mov
int3
lds
add
leave
inc
push
es
sub
out
daa
mov
cli
ds
mov
adc
pop
or
sti
mov
out
mov
scas
jne
add
sbb
jbe
mov
mov
or
jo
pop
popa
or
sbb
mov
imul
pusha
notl
xor
sbb
lea
inc
dec
mov
js
jecxz
jo
ljmp
push
xchg
lcall
sbb
lahf
daa
imul
fildl
sbb
cmc
adc
adc
jnp
icebp
stc
pop
sub
ficoml
xchg
cld
pop
lods
test
insl
mov
in
xor
add
jns
jmp
sub
dec
pushf
mov
add
mov
lds
sbb
rolb
fnsave
jne
cli
bound
sti
push
out
cmc
int
pop
pop
sub
or
bound
arpl
and
ret
mov
or
lret
sub
pop
int
pop
mov
daa
outsl
xchg
lock
incb
daa
in
mov
dec
or
xchg
int
mov
inc
jle
insb
por
mov
xor
fdivrs
ss
add
push
mov
inc
outsl
shrb
xchg
adc
loop
ss
xchg
sarb
test
cmpsb
pop
jo
notl
ss
xchg
xchg
imul
pop
mov
in
mov
push
repz
xchg
cmpl
mov
jg
mov
jp
and
ljmp
lock
rorb
dec
enter
lahf
inc
sbb
out
sbb
mov
dec
mov
imul
lret
in
sbb
sar
push
int3
bound
xor
ljmp
mov
mov
fs
push
fistl
add
mov
xchg
mov
out
dec
adc
cmp
sti
notl
cmp
fiadds
pusha
les
mov
imul
pop
hlt
ss
cltd
xor
sub
cmpsl
mov
mov
jns
dec
mov
mov
in
cmp
clc
xchg
cltd
aaa
mov
or
jnp
mov
aaa
mov
adc
and
pop
and
scas
imul
or
cmp
lret
xlat
add
sub
into
inc
or
cwtl
clc
push
xchg
fsubs
cmpsl
lods
les
cmc
enter
roll
int
mov
add
jo
pusha
pop
repz
xor
fwait
push
aaa
test
in
mov
es
pop
aaa
outsb
je
loope
sbb
adc
inc
mov
mov
pop
test
push
cld
pop
fwait
jle
jb
out
add
lahf
mov
adc
in
cmpsl
inc
mov
fcomip
add
jl,pt
push
cmp
add
icebp
mov
xchg
dec
cmp
push
cmc
popf
jp
dec
leave
btr
dec
fnsave
mov
notl
add
roll
xchg
fidivl
jb
xchg
mov
mov
test
fdivs
sbb
pop
sarl
out
fcmovnb
dec
mov
test
lahf
push
pop
addr16
daa
imul
jne
mov
pushf
out
insb
jo
je
push
lods
and
hlt
pop
dec
mov
ret
mov
jle
and
push
fimull
pop
test
movsl
popf
outsl
adc
push
add
addr16
pop
adc
dec
in
lret
movsl
jno
sub
or
addb
test
aaa
xlat
sub
shrb
jbe
mov
sbb
push
mov
dec
bound
pushf
mov
arpl
lret
xlat
push
dec
in
in
jl
push
xor
pusha
fbld
loop
xlat
xorl
es
jge
pop
cwtl
dec
sbb
and
in
dec
cmp
and
sub
pop
mov
pop
push
or
pushf
jae
orl
pop
push
cmp
sub
pop
or
jecxz
sub
fisubs
mov
push
xor
cmp
push
sub
jno
inc
test
mov
test
loopne
inc
jecxz
fnstcw
ret
jno
lds
hlt
das
dec
lret
stos
adc
insl
xchg
pushf
push
or
mov
loope
mov
xor
push
jmp
inc
push
dec
add
or
xchg
sbb
inc
mov
jmp
push
lret
arpl
pop
cmpsl
xchg
test
sub
jg
test
loop
pop
rcl
test
cltd
mov
cmp
mov
cs
lret
outsb
jp
mov
pop
popa
push
jl
nop
flds
cs
xor
inc
data16
mov
outsl
sti
pop
inc
sub
add
fs
jp
push
mov
popl
out
pop
xchg
xorl
out
xor
in
insl
mov
sub
and
jg
adc
xchg
mov
adc
imull
and
es
int
cltd
mov
lds
adc
mov
movsb
or
outsb
leave
mov
stos
xor
inc
jo
sub
cmpsb
or
dec
cmp
roll
jb
jl
loop
mov
sub
pop
add
cmp
add
das
test
fidivs
xchg
test
addb
sub
fwait
pop
lcall
adc
and
rorl
jp
divl
roll
pop
fsubrs
mov
outsl
add
mov
jecxz
sub
push
cmp
pop
int3
cmpsl
sbb
aaa
mulb
aas
cli
bound
dec
nop
jg
lret
mov
test
sbb
sbb
cltd
mov
test
inc
mov
rorb
push
fisubs
fiadds
dec
rclb
push
js
leave
daa
div
mov
dec
xlat
mov
into
movsb
dec
pop
jne
fldenv
or
sbb
or
push
lock
jo
mov
scas
sbb
and
pop
mov
sbb
call
mov
jp
add
jb
js
adc
imul
sbb
inc
pushf
jae
inc
fs
int
push
pop
adc
outsb
sbb
push
lcall
jle
xor
jno
out
je
jo
or
and
jmp
and
pop
lcall
sbb
das
mov
lds
mov
js
sub
adc
inc
push
into
into
adc
icebp
lods
xchg
mov
popf
sbb
sbb
mov
lahf
test
mov
pop
adc
push
xor
addr16
testl
adc
in
pop
addr16
imul
jo
fisttpll
ret
fldt
test
or
adc
adc
lret
push
pop
cli
dec
jle
fstl
es
cmp
mov
jmp
cmpsb
repz
ja
fadds
dec
je
cwtl
jae
stos
ljmp
dec
xchg
stos
sub
ret
outsl
outsl
test
fisubrs
dec
jno
mov
into
aad
push
dec
rorb
sub
push
pop
aas
add
push
int
sub
xchg
ja
mov
push
lods
push
cmc
mov
pop
das
sbbl
and
arpl
mov
inc
out
ficompl
lret
add
subl
xor
outsl
js
lret
dec
scas
orb
sub
bound
cli
mov
arpl
insl
push
push
cmp
xchg
sarl
pop
xorb
xchg
dec
fsubrs
lret
js
fnsave
insb
mov
xor
or
xchg
mov
push
test
push
lret
sahf
movsb
mov
dec
jle
aam
fprem1
shrb
mov
xor
loopne
inc
mov
outsl
cmpl
or
fisubl
push
adc
inc
adc
mov
mov
cld
pop
and
adc
jmp
lock
jmp
jle
and
aas
push
fucom
outsb
leave
sbb
sub
mov
push
popf
add
daa
inc
scas
fcmovne
arpl
sbb
cmp
pop
cmp
dec
pop
jg
push
sub
add
cmp
cltd
aaa
shll
repz
cmp
xor
add
fmull
sahf
les
lret
addr16
xchg
int3
lret
in
add
cmpsl
insb
and
xchg
pop
icebp
mov
sub
and
int
and
cmp
das
pop
mov
or
dec
inc
adc
rorl
imul
or
mov
sti
or
cmp
mov
ds
add
lea
inc
jnp
std
ss
frstor
repnz
mov
mov
jl
pop
flds
lock
out
imul
cwtl
lahf
pushf
stos
fdivp
scas
adc
int
aaa
xor
jnp
int3
adc
pop
dec
xor
repz
popf
int
fidivl
jg
pop
mov
mov
pop
and
xchg
pushf
push
xchg
into
outsl
xchg
stos
lods
out
mov
xor
rcrl
ljmp
call
lea
test
cmp
mov
xchg
idiv
xchg
sbb
addl
pop
mov
cli
arpl
clc
mov
xor
xlat
push
push
adc
out
xchg
lea
pushf
cmc
cmc
mov
jne
ljmp
fimuls
push
fisubrl
cmp
dec
rol
int
jp
stc
and
test
es
pop
fisubrl
subl
clc
pop
stc
jbe
stos
ss
mov
mov
fisttpll
xor
cwtl
or
loope
hlt
dec
arpl
jmp
aaa
mov
ja
cld
aas
les
and
and
mov
pop
bound
push
movb
mov
pop
stc
mov
sub
and
xor
and
pop
dec
fstps
inc
mov
test
cmpb
cltd
and
jmp
fcomps
aam
rol
cld
outsl
inc
jbe
je
adc
adc
pop
mov
xlat
add
cmc
inc
cmc
sbb
test
jae
cmp
jb
sbbb
movsl
or
mov
push
xchg
nop
loope
cmp
xchg
in
mov
dec
pop
outsl
mov
inc
pusha
hlt
stc
mov
js
push
sti
std
mov
mov
dec
xchg
adc
mov
or
lock
pop
ds
fs
popf
pushf
jecxz
outsl
mov
adc
aam
fimuls
xchg
cmp
mov
inc
stos
movsb
das
adc
jbe
ss
call
push
adcb
arpl
dec
sub
mov
lds
mov
xor
fldl
push
inc
jnp
mov
insb
outsb
add
shll
xor
sub
xlat
push
or
push
cmpsb
notb
cmp
xchg
add
add
dec
or
pusha
or
dec
inc
jo
in
sub
mov
or
and
mov
mov
idivb
pop
testb
ss
std
push
cmp
in
divb
xchg
push
ficoml
int
aas
push
jmp
mov
mov
mov
sahf
ljmp
pop
int3
xor
cmpsb
mov
movsb
pop
inc
or
jne
add
clc
andl
orb
ret
mov
sbbl
mov
popf
jg
es
ret
aas
fs
aas
and
sahf
call
test
in
push
cmpb
sbb
fmuls
xchg
adc
pop
xchg
jge
adc
test
mov
adc
mov
inc
fsubl
push
sbb
shrl
out
daa
and
cmpsb
mov
push
call
dec
sbb
call
jbe
push
sahf
xchg
push
dec
aam
test
mov
xor
jnp
fldt
jno
mov
andb
xchg
mov
sahf
xor
mov
jns
or
xchg
pop
mov
sahf
ret
test
cld
jo
cmp
imul
cmpsb
dec
sub
fbstp
fmuls
push
mov
jge
and
lret
call
inc
test
xorl
adc
xor
daa
inc
xchg
loope
jge
jno
cmc
sbb
cs
push
dec
idivl
rolb
insl
shrl
lret
xor
cmp
push
ret
pop
pusha
adc
inc
jns
adc
dec
cmp
xchg
scas
pop
fsqrt
add
imul
dec
fisubs
out
lcall
fstpt
push
and
sub
push
call
lock
out
cmp
mul
mov
and
test
lods
mov
cld
jl
js
jg
mov
mov
xchg
mov
leave
or
and
dec
jb
mov
jp
jmp
test
repnz
adc
imul
leave
lret
test
imul
bound
in
dec
test
sbb
shr
jne
ja
rcrb
insl
inc
aad
mov
les
fs
ret
xor
add
pop
xchg
mov
pushf
xchg
mov
mov
push
mov
xlat
ja
mov
mov
sbb
scas
aaa
jae
icebp
xor
push
ret
mov
sahf
andb
testb
mov
mov
insl
js
out
lods
aas
and
push
push
dec
mov
push
cli
pop
cmp
iret
mov
sahf
fldcw
or
or
popa
xchg
sbb
mov
mov
push
mov
movsl
dec
pushf
lcall
std
das
jns
mov
and
sbb
in
cltd
mov
jmp
fbstp
out
dec
add
cld
jp
in
jae
sbb
push
jl
xchg
lret
mov
xor
and
cmp
fdivs
sar
loopne
imul
mov
in
and
mov
pusha
dec
push
sbb
ret
insl
ret
ficomps
xor
gs
sbb
fldt
push
into
sbb
jp
push
repz
popa
mov
ds
icebp
inc
xchg
sbb
jmp
jl
fcomps
jo
dec
test
cmp
and
xor
jb,pn
add
jb
ret
add
pop
cmp
arpl
pop
je
hlt
lret
cmpsb
repnz
and
mov
and
stos
inc
in
mov
cmp
add
or
mov
jbe
jae
mov
push
xchg
imul
xchg
sub
and
xchg
popa
xchg
lcall
lcall
pop
insb
push
mov
pushf
je
adc
jp
sub
push
add
cmp
fistpl
movsb
jl
outsb
mov
sti
xor
leave
or
addl
push
or
jb
mov
jmp
rcrb
mov
and
pop
andl
pop
out
or
or
push
or
in
xchg
mov
sbb
mov
mov
push
mov
inc
jle
xor
xchg
negb
inc
add
lods
xor
aas
push
aaa
xchg
enter
ret
cmp
xchg
in
popf
fdivl
out
jp
mov
push
cmpsb
nop
adc
xchg
adc
cmc
fcmovne
aad
dec
inc
std
outsb
cli
fsubrl
dec
in
mov
js
lret
push
dec
inc
pop
call
repz
repz
cmpsb
gs
xor
aaa
sti
mov
pop
je
test
mov
outsb
or
shlb
cmpsb
rcll
jb
jl
imul
dec
sub
sub
adc
cmp
push
xchg
mov
push
adc
pop
ret
add
xor
inc
cmp
mov
sub
andl
fwait
gs
lret
jno,pt
cmp
push
or
es
enter
jge
xor
leave
notb
mov
icebp
and
push
lds
lahf
push
xor
dec
add
enter
jnp
jns
cmp
mov
cltd
leave
mov
pop
add
cmp
xchg
and
stos
call
sub
or
inc
lret
cmpsl
cwtl
mov
dec
pop
out
cmp
imul
das
xchg
mov
mov
in
ja
or
mov
dec
lods
adc
pop
lock
xlat
scas
pop
pop
adc
inc
sbb
pop
mov
xchg
adc
push
push
and
iret
mov
jbe
iret
lods
rcl
mov
xor
mov
jmp
jmp
scas
jp
rcr
xor
rcrb
mov
fcmovnbe
testb
jae
inc
mov
shll
and
inc
pop
inc
add
std
leave
sbb
mov
lahf
xor
sbb
fsts
aaa
jbe
xor
pop
lret
push
cwtl
pusha
je
dec
and
clc
in
movsl
sbb
nop
ret
test
sub
sub
leave
js
bound
sub
mov
mov
bound
sbbl
sub
mov
es
scas
dec
scas
loop
sarb
fcmovu
lcallw
fdivl
mov
aad
inc
shlb
out
in
add
push
mov
xor
jmp
loopne
arpl
push
cs
ret
roll
dec
in
add
test
in
fildll
and
mov
xor
in
fisubl
jg
push
fs
jmp
lcall
add
stos
pop
int
in
dec
cmpsb
nop
data16
add
sbb
sbb
mov
mov
shl
lret
fwait
mov
enter
push
pop
mov
int
aam
lods
lret
jmp
bound
shlb
fldcw
dec
stc
or
popa
inc
pop
add
cmp
pop
and
push
xchg
les
mov
adc
icebp
ljmp
mov
pop
cmp
mov
shl
dec
jecxz
dec
je
and
int
jno
dec
mov
aas
jnp
pop
sub
nop
into
pop
std
jbe
loop
xor
jo
fadd
aad
inc
ljmp
sub
add
insb
xchg
in
lods
cli
mov
rol
mov
xchg
cmpsb
add
sbb
imull
cmp
pop
push
mov
mov
jb
fisttps
adc
lret
fstp
jecxz
ds
notb
and
in
inc
sbb
ficompl
rol
cwtl
inc
jbe
cld
add
pop
imul
mov
and
adc
inc
addr16
or
cmp
es
add
adc
and
push
aad
in
ds
jno
in
repnz
fisubrl
test
jmp
xor
das
movsb
aaa
xor
cmpsb
out
insl
jg
push
inc
xchg
sub
arpl
mov
cmpsl
cmpl
loop
mov
repnz
cmp
cmp
add
push
pop
push
movsb
mov
sub
mov
lahf
mov
push
pop
add
inc
sub
mov
inc
jle
in
rorw
push
sub
shlb
sub
sar
aas
mov
aam
orb
xlat
pop
das
inc
pop
cs
push
add
sbb
stos
sub
fstps
jmp
push
pop
movsb
pop
dec
jecxz
test
jle
aaa
loope
cmpsb
imul
outsl
pop
dec
scas
xchg
pop
pop
loope
and
lahf
dec
mov
pop
pop
inc
scas
les
xor
fildll
adc
fmuls
mov
in
cs
sbb
fmuls
in
xor
mov
jmp
idiv
dec
out
xchg
lahf
mov
es
adc
and
xchg
js
xabort
push
push
jno
mov
sbb
mov
iret
mov
push
shlb
rcr
nop
mov
pop
daa
pop
and
jbe
sub
mov
fs
fistpl
test
packssdw
test
xor
arpl
fimuls
push
fisubl
les
aad
scas
xor
repz
fisubrs
in
pop
xchg
loopne
inc
and
add
es
lret
xor
fs
sub
mov
pop
dec
test
test
roll
xchg
shrb
loop
test
std
cmp
adc
inc
outsl
pushf
push
pop
loop
imul
jnp
sub
sti
push
int3
std
std
rcl
test
loopne
into
xchg
jno
xchg
mov
mov
sub
mov
ljmp
dec
shll
sbb
lods
mov
lods
push
aas
jle
push
push
adc
leave
pavgw
adc
xchg
mov
jo
push
mov
or
push
mov
pop
sbb
inc
out
mov
loop
xchg
repz
sub
cli
adc
rcl
inc
daa
test
ja
shll
lahf
fdivs
jl
aas
mov
add
mov
add
outsl
fistpll
movsl
cli
sub
pop
mov
jno
in
jns
imul
mov
jp
dec
cmp
shlb
test
arpl
inc
fiaddl
cmp
pop
cltd
ficomps
lock
jl
inc
rorl
mov
add
push
scas
int
xchg
pop
cld
cltd
or
fdivrl
xchg
jno
icebp
jl
jecxz
subb
fadd
mov
mov
pop
stc
fsubrs
div
dec
in
mov
or
in
push
mov
stos
or
mov
xor
mov
scas
xor
js
das
stc
daa
push
mov
xor
iret
insb
cmp
stos
add
sbb
cmp
aaa
out
ret
inc
pop
jbe
aad
lcall
imul
shll
mov
fcomp
add
in
out
out
fnsave
rcl
imul
sub
pop
jmp
push
test
jge
mov
mov
pop
lahf
xchg
lret
aas
cli
lods
les
xchg
inc
cs
push
imul
sub
sub
lret
into
lock
test
int
pop
outsl
call
std
stos
sub
push
mov
xchg
rorb
sbb
cmp
push
mov
cmp
add
jle
movsb
in
sbb
clc
xchg
pop
xor
arpl
sbb
idivb
lods
lock
ljmp
lds
scas
push
adcl
sub
adc
jbe
dec
lock
xchg
mov
push
xor
pushf
jp
push
leave
outsb
decb
ret
out
jge
inc
push
cwtl
jge
into
pop
out
addr16
or
and
inc
repz
jp
es
cwtl
and
mov
adcb
int
insl
in
into
or
fstpt
push
fnstenv
dec
dec
mov
mov
enter
lret
scas
adcl
stos
cltd
or
rcl
mov
insl
pop
push
dec
dec
insl
or
cmpsb
and
pop
rcll
loop
je
jne
ljmp
leave
clc
pop
scas
and
loope
inc
movsl
sahf
jp
push
adc
adc
mov
ret
jb
pop
jbe
aam
adc
push
popf
fnsave
std
cmp
adc
fldt
mov
daa
mov
fsubrl
and
adc
cmp
sbb
xor
sub
xor
int
mull
sbb
cwtl
cmpl
loopne
mov
out
adc
mov
repz
mov
mov
aam
arpl
push
sub
adc
sbb
fs
push
fisttpll
cmp
cmc
dec
dec
jg
data16
jg
mov
pushf
ljmp
mov
mov
push
sbb
fcomp
mov
enter
lret
push
cmp
and
mov
adc
jo
or
stos
mov
mov
add
ret
or
jae
scas
jae
lds
add
gs
adc
dec
gs
cmp
in
xlat
and
mov
loope
testb
xor
cld
adc
pop
mov
inc
test
push
cmp
inc
jo
arpl
test
dec
jl
push
dec
push
lds
mov
test
sub
imul
xor
pusha
cli
cli
add
loope
icebp
stos
pop
popf
xor
push
xchg
daa
push
jmp
xchg
mov
lcall
inc
jo
xchg
mov
cltd
pop
xor
es
add
and
cmp
cs
push
mov
mov
pusha
add
rolb
movsb
mov
js
dec
pop
fidivs
enter
cs
loopne
xchg
insl
gs
sahf
xor
xchg
mov
push
dec
xor
scas
shlb
dec
outsb
jmp
mov
test
or
lock
loopne
push
lahf
cs
lods
and
mov
jg
daa
arpl
gs
sahf
mulb
dec
inc
mov
outsb
popa
ss
and
mov
movsb
imul
in
gs
push
movzbl
in
pop
lods
mov
cmp
sbb
push
cmp
xor
or
aas
loopne
imul
test
out
or
cmp
jb
dec
shll
ljmp
and
out
dec
fcoms
sub
dec
ljmp
jl
icebp
in
adc
dec
xor
test
inc
stos
nop
pushf
leave
pop
and
je
jle
fisttpll
xor
mov
mov
test
dec
outsl
push
insb
cld
push
popa
inc
mov
rclb
adcb
sahf
cmp
repnz
shl
test
mov
pop
mov
aad
mov
pushl
lods
stc
mov
cmpsb
pop
es
js
mov
scas
outsb
xor
or
sub
stos
jnp
mov
inc
mov
mov
push
call
movsl
call
sub
arpl
loop
fstl
mov
in
inc
inc
sbb
dec
xor
mov
stos
enter
fs
mov
adc
pop
cmp
pusha
cmc
mov
icebp
xlat
add
int3
shrl
lock
inc
mov
imul
pop
inc
lea
and
rcr
inc
mov
lcall
daa
lret
fiadds
add
scas
mov
stos
rep
or
ljmp
repnz
not
jmp
das
mov
sub
mov
in
mov
shrb
scas
sbb
gs
popa
push
in
push
push
lcall
cmp
pop
int
jg
inc
sbb
inc
int
sti
testb
jbe
adc
dec
ret
xchg
mov
sbb
inc
dec
sbbl
insl
mov
mov
add
inc
test
vcmpsd
xchg
push
cltd
out
lret
push
lcall
push
hlt
xlat
aam
jle
jne
mov
aaa
xchg
cltd
loopne
xlat
leave
subb
add
fmuls
es
xor
push
inc
stc
ret
sbb
mov
clc
pop
test
setge
orb
and
dec
pop
sbb
push
and
dec
and
in
inc
inc
adc
or
out
fnsave
movsb
orb
mov
std
es
in
in
in
mov
mov
mov
jo
in
aam
jge
push
outsl
out
inc
cmpl
insb
ficoms
inc
lret
pop
push
std
das
adc
pop
dec
cmp
or
push
jmp
lcall
mov
gs
push
mov
and
aaa
sbb
data16
mov
int3
rol
and
divl
mov
pop
inc
cltd
ret
ret
call
xor
jmp
insb
jmp
movsl
subl
ljmp
pusha
inc
aam
mov
lret
or
aad
add
mov
adc
icebp
lret
icebp
mov
cmc
in
pop
std
fninit
cmp
insb
ret
cmp
mov
andl
mov
pop
cmp
mov
rcll
pop
pop
inc
sub
jo
imul
daa
aad
aas
rorb
cmp
mov
negb
push
xchg
loopne
stos
sbb
push
mov
cmpsl
inc
notb
stos
push
out
cmp
push
mov
jl
pop
or
int3
shrb
ret
mov
test
sub
inc
adcb
pop
add
cs
gs
stos
movl
mov
dec
xchg
lcall
cmpsl
int
push
mov
adc
push
je
mov
jp
mov
push
mov
imull
mov
popf
outsl
pop
mov
test
xor
test
fwait
dec
mov
xor
fidivrs
mov
and
add
sbb
jnp
movsl
shlb
es
fstl
mov
inc
xchg
lret
add
rcrl
mov
inc
std
adc
cld
addr16
pop
icebp
jle
outsb
jle
test
fnstcw
lea
clc
pop
add
fwait
pop
sbb
jb
and
in
push
jmp
scas
loop
addb
cmpsl
sub
cmpsl
mov
jne
mov
dec
in
mov
test
mov
jnp
test
movsb
cwtl
dec
mov
test
xor
rorb
dec
sbb
ss
les
lea
mov
cltd
std
xchg
or
and
push
sub
jp
jge
shrb
rolb
cmp
mov
mov
lods
fwait
pusha
in
sub
xchg
mov
xchg
and
add
ret
outsl
call
aaa
add
cwtl
jae
cld
jnp
sti
pop
push
jg
aam
fnstenv
mov
sahf
pop
jmp
mov
sbb
insb
jae
pop
xchg
lds
das
xorb
lahf
pushf
dec
jmp
addl
adc
cmovo
sub
stos
adc
out
inc
pusha
mov
out
sbb
pop
enter
repz
out
inc
sbb
shll
in
or
and
stos
or
ds
pop
outsb
xor
jns
and
sbb
js
aad
lods
cltd
in
push
or
and
stos
push
jns
lret
jne
dec
push
xor
mov
out
es
ja
xor
test
jo
ljmp
or
sub
arpl
test
out
push
xor
sbb
mov
jmp
add
fcomip
adc
clc
stc
in
mov
je
mov
repz
mov
in
mov
cli
xor
aas
jo
push
cmc
pop
sbb
sbb
adc
sbb
push
lods
inc
dec
mov
icebp
test
ret
sbb
popf
pop
ret
xchg
icebp
xchg
adc
aaa
data16
push
push
xchg
arpl
ja
push
push
mov
mov
and
xchg
out
and
popa
jae
lea
stos
push
mov
push
add
mov
lret
pop
and
fists
test
pop
inc
cmp
popa
push
sti
push
clc
aaa
xor
pop
push
sbb
mov
das
shl
popa
jl
bnd
ljmp
les
mov
or
neg
pushf
sbb
or
fs
pop
rcl
jo
inc
lret
jg
mov
scas
jne,pn
cmp
mov
into
add
adc
mov
pop
jmp
ljmp
sbb
or
jp
in
mov
add
mov
fsub
enter
lea
adc
and
or
sarb
movb
dec
mov
mov
jge
xchg
movsl
sbb
mov
mov
xlat
dec
lock
mov
aad
push
stc
dec
dec
sahf
cltd
push
popf
dec
test
cwtl
jnp
call
in
icebp
lahf
andl
cmp
mov
rol
push
sbb
pop
mov
push
xor
xor
stc
es
xchg
cmp
lahf
add
addr16
and
mov
mov
dec
arpl
lds
mov
sbb
cli
mov
push
xor
xchg
stos
rcll
inc
pushf
inc
xchg
push
gs
and
jg
push
xor
scas
push
xchg
rolb
shrb
popaw
lcall
movb
mov
std
add
adc
js
bound
call
cmp
jb
fmuls
pusha
lods
imul
loope
mov
push
jno
push
add
inc
xchg
aas
lcall
push
and
lret
push
jmp
fildl
sub
push
dec
lcall
xor
mov
cmpsl
andl
clc
fadds
cmpsb
iret
mov
add
lcall
icebp
lea
sub
out
inc
mov
sbb
mov
xchg
mov
nop
mov
test
push
push
mov
scas
lahf
push
idivl
adc
sar
adc
stc
xchg
or
xchg
out
push
add
fstpt
jp
mov
icebp
test
sub
fistpl
xor
xor
outsb
mov
sub
mov
lods
adc
imul
xorb
fdivrp
cltd
xor
or
sub
sub
pusha
dec
pop
xor
popa
sub
sahf
mov
lock
cli
bswap
or
push
pop
pop
or
mov
cmp
sbb
enter
mov
or
xchg
dec
in
call
mov
xor
rcrl
imul
or
mov
inc
sbb
lahf
lret
into
add
jns
shld
mov
xchg
xor
dec
and
fistpll
hlt
cmpb
cltd
dec
jp
push
std
sub
daa
or
and
xor
outsb
loop
rcll
or
rorl
mov
sub
xchg
inc
cmp
cwtl
subl
cwtl
movsb
iret
dec
adc
add
mov
cltd
jb
cmpb
jl
mov
dec
mov
idivl
jnp
and
aas
pop
fwait
pop
mov
stos
gs
mov
mov
js
dec
xor
mov
mov
mov
ljmp
stos
out
pop
rclb
adc
mov
pop
ret
rcl
sbb
or
mov
out
sub
add
in
fadds
call
orb
add
dec
int3
adc
jno
bound
adc
stos
add
fwait
adc
fadds
ret
call
sub
lods
jecxz
bound
int3
adc
nop
leave
mov
hlt
mov
das
xor
sahf
das
int3
into
add
ret
pop
hlt
pop
and
jl
push
sbb
or
push
mov
shl
mov
jb
push
fs
inc
jno
rcl
mov
daa
jmp
lret
les
cmpsb
inc
enter
jae
inc
xchg
loopne
or
imul
xchg
xor
ss
das
push
in
leave
and
ds
add
lea
rep
sbb
mov
inc
cltd
mov
pop
cltd
dec
inc
aas
sub
xchg
cwtl
mov
iret
aam
inc
je
jl
loope
lret
push
add
dec
ss
ja
pop
jo
and
inc
and
mov
cmpsb
aad
dec
xor
add
mov
dec
cmp
test
push
fadds
mov
inc
cwtl
stos
daa
lret
push
addr16
mov
push
pop
lahf
testb
pop
push
sub
jbe
fiadds
fwait
test
ss
repz
mov
ret
mov
cmp
fidivl
mov
mov
push
and
push
lods
pop
cli
decl
adc
mov
fdivs
test
mov
push
sbb
adc
out
shrb
icebp
mov
ss
addl
lods
push
icebp
jb
sub
cmp
scas
mov
cmp
and
push
push
cmpsl
int3
and
lods
and
dec
and
xlat
and
lret
push
or
divb
jle
jno
add
into
xor
cmp
packssdw
jecxz
das
iret
call
inc
cli
push
fdiv
jbe
in
icebp
dec
and
pop
scas
xchg
and
xchg
sarb
pop
loopne
ss
xor
cmp
in
xorb
sti
jmp
ds
cs
mov
andnps
and
out
test
leave
dec
mov
jg
aam
loope
repnz
movsl
xor
data16
push
rol
dec
popa
dec
cmp
pop
and
adcb
and
xchg
movsb
std
pop
and
fwait
mov
out
pop
xchg
sarb
cwtl
jg
sbb
mov
enter
lods
sub
inc
inc
cltd
hlt
adc
gs
adc
loope
ret
mov
bound
scas
into
xor
xchg
repz
dec
xchg
mov
stos
sbbl
mov
lahf
xchg
rorb
lret
je
sub
push
inc
push
adc
inc
and
in
movsb
cmp
in
repz
mov
or
addl
clc
std
lret
arpl
lcall
xchg
jp
jecxz
push
fisttps
cmpsb
lcall
fsub
push
lret
and
lock
inc
nop
aad
pop
lret
test
imul
pop
and
inc
inc
out
aad
incl
aam
aam
cmp
mov
call
xchg
mov
mov
fincstp
lds
std
stos
or
sbb
cmpsl
jnp
shl
push
cwtl
and
fstp
popf
stos
mov
stc
mov
shll
fdivrs
jbe,pn
adc
jnp
repnz
out
cld
addr16
into
shrl
mov
jns
sub
popa
jl
push
popf
dec
orb
push
insl
xor
es
xchg
xor
or
das
fsubp
loop
dec
sub
pop
add
out
and
inc
mov
mov
xchg
cmp
sub
mov
pop
xchg
sti
fsubs
xchg
mov
jns
mov
and
pop
addr16
adc
test
daa
lcall
jns
or
fcmovb
lea
push
sub
sub
sbb
cmp
das
adc
sahf
insb
insb
push
icebp
xchg
pop
bnd
add
push
cwtl
mov
adc
daa
jecxz
cmp
dec
mov
rcll
mov
ror
jecxz
cmp
js
ds
push
or
dec
inc
cmpsb
cld
rorb
mov
mull
xchg
repz
dec
jl
mov
das
or
mov
jmp
lods
xchg
adc
out
jl
xchg
dec
rcrl
popa
rorl
je
fistps
testl
movsl
outsl
or
sub
int
jb
jmp
aam
arpl
mov
lcall
addl
mov
adc
test
jp
push
xlat
adc
inc
jbe
notb
rcll
fwait
in
push
pop
add
popf
into
stos
dec
aaa
mov
lret
inc
mov
mov
xor
aad
jns
fstps
repz
fbld
fs
dec
insb
cmp
jecxz
mov
adc
lcall
icebp
icebp
popf
nop
and
imul
pusha
andl
xor
push
xchg
repnz
sahf
or
cli
and
jg
mov
sbb
ret
adc
popf
xor
and
leave
mov
clc
dec
roll
xchg
sahf
jle
movsl
scas
out
aaa
cmpsb
mov
pop
xchg
add
mov
add
sbb
pop
les
inc
mov
dec
ficoms
inc
ja
test
std
cs
jbe
imul
fwait
push
add
js
and
pop
cmc
xor
jl
stos
jmp
jo
mov
inc
dec
cltd
dec
std
jnp
idiv
stc
xor
cld
mov
fsub
pop
sub
mov
sbb
xchg
xchg
lahf
mov
inc
add
inc
out
repz
fcmovnu
or
aas
inc
xchg
es
mov
push
lcall
xor
mov
sahf
mov
add
inc
sbb
and
int
call
sub
js
add
ja
insb
push
cwtl
add
nop
mov
cltd
pushf
mov
cmp
push
fcom
stos
cmpsl
outsl
ljmp
mov
rcl
gs
sahf
stc
int
ljmp
mov
xor
not
jbe
call
push
push
incb
fildll
int3
ss
stos
jmp
fldcw
subb
mov
into
jle
jecxz
movsb
ret
xchg
sub
mov
mov
dec
xchg
add
push
or
ss
mov
and
mov
jns
lods
xchg
jge
movsb
mov
xor
ret
add
lret
outsl
push
shrl
fdivrl
ss
fcmovb
xorb
xor
xchg
pop
mov
imul
and
inc
xchg
inc
call
aas
mov
xchg
sub
or
lret
and
repz
cs
or
add
mov
cs
cmp
inc
push
pushf
test
inc
test
in
inc
or
sub
mov
jmp
popa
icebp
cld
icebp
adc
mov
push
fmull
or
scas
enter
xor
lods
pop
ljmp
adc
test
test
movsb
stc
adc
insl
jbe
into
pop
test
lret
cmpsb
je
addr16
stc
scas
in
nop
push
mov
mov
lock
xor
jmp
pop
das
xor
stc
push
add
ss
sub
pop
mov
or
and
cli
dec
lret
sbb
popf
int
xchg
push
data16
inc
lret
sub
clc
dec
jmp
int
push
fldcw
gs
cld
stos
sub
out
int
outsb
gs
and
cmp
scas
xor
std
push
pop
mov
xorb
jno
sub
sub
aam
xchg
adc
mov
xor
sbb
fnstcw
adc
xchg
lock
sbb
push
fs
ss
cmp
sbb
mov
xchg
or
loopne
mov
je
cmp
out
enter
push
sub
inc
jno
add
mov
scas
xchg
xchg
fstps
pop
int3
lds
test
adc
push
xchg
xor
jne
lcall
sarl
popa
cli
cmp
outsl
in
mov
mov
aas
adc
xchg
jg
ja
jp
or
cmc
inc
arpl
sub
mov
out
outsb
jmp
incl
lea
js
addr16
mov
mov
leave
jecxz
adc
fwait
mov
jl
subl
loope
int
jecxz
sub
adc
cld
xchg
xlat
data16
inc
cs
cli
insl
fldt
inc
xlat
clc
adc
loop
scas
inc
hlt
xchg
sbb
lret
dec
enter
jns
jecxz
adc
inc
jb
aaa
jl
pop
insl
fsubrl
inc
inc
stos
das
adc
pop
popa
push
shrb
ja
xor
cmp
adc
adc
scas
cltd
add
jno
jmp
or
sub
imul
fs
shr
push
adcl
shll
insb
fs
inc
cli
sbb
imul
inc
mov
push
loope
mov
mov
lahf
sti
inc
pop
ds
pop
cmp
and
mov
sub
pusha
mov
add
adc
rcl
pop
pop
or
rcr
ljmp
adc
movsb
push
daa
repz
out
dec
pop
sub
jo
faddl
insb
and
cwtl
dec
mov
add
cmp
jnp
add
push
cwtl
ljmp
lock
rolb
mov
popl
mov
std
jmp
enter
daa
mov
loope
nop
into
int3
idivl
cmp
aaa
rcl
push
xchg
sub
mov
mov
dec
xchg
and
pusha
mov
test
inc
cld
lea
fistps
sar
fmul
mov
sub
shll
adc
sahf
sbbb
js
stos
mov
pop
adc
mov
insl
inc
push
clc
add
mov
xchg
mov
dec
subb
jae
lcall
test
mov
xor
cmp
test
push
sub
adc
push
imul
mov
rclb
xor
psubw
cltd
xor
ret
lcall
bound
sub
cmc
sahf
mov
cmc
jbe
mov
xchg
imul
pop
repnz
adc
pop
and
jns
jp
cmpsb
sbb
mov
jp
movsb
mov
pop
xchg
jge
and
or
mov
fdivr
loop
xor
cmp
xchg
pop
dec
mov
cmp
cmp
imul
push
sub
in
dec
push
mov
lods
push
sub
sbb
aam
lret
mov
scas
mov
loope
imul
clc
mov
lods
les
incl
js
adc
push
sbb
inc
cli
and
cmp
test
fdivs
jb
add
jp
xor
in
xchg
sub
pop
mov
in
pop
adcl
out
lcall
ret
mov
imul
aas
in
mov
add
mov
pop
xor
cmp
or
dec
push
add
sbb
pop
sub
cmp
js
push
imul
out
lods
dec
lods
adc
sub
push
enter
pop
jo
jne
mov
inc
imul
xor
movsb
push
sub
dec
hlt
sbbl
aas
sub
out
arpl
lea
test
addr16
add
adc
pop
adc
pop
out
dec
and
test
mov
das
and
push
lahf
pop
sbb
movsl
dec
sub
sbb
mov
ret
pop
and
cmp
xor
iret
pop
out
popf
std
push
fstpt
clc
jle
negb
push
repz
lods
mov
cmp
cmp
aad
push
fwait
das
aad
push
hlt
jge
movsl
into
pop
push
mov
aas
insl
sbb
mov
jnp
mov
jp
adc
int
loopne
pusha
cmpl
push
xchg
aaa
mov
mov
or
jns
div
sub
ljmp
lock
in
xor
push
mov
push
jl
xchg
mov
mov
ret
into
leave
pop
lea
lods
into
shl
ds
cmp
sbb
fwait
dec
dec
loop
incl
pop
dec
or
dec
mov
add
repnz
dec
rcll
sbb
test
push
jno
outsl
out
or
push
pop
sbb
jbe
test
into
sbb
jmp
inc
push
loope
inc
test
or
lcall
jnp
xchg
scas
and
in
das
jg
out
or
cmp
inc
adc
dec
dec
mov
inc
or
bound
lahf
sarb
dec
xchg
inc
add
loop
sbb
push
mov
test
jmp
in
out
cli
imul
arpl
jecxz
sbb
and
pop
rolb
xor
sti
mov
mov
xor
add
sbb
loope
xchg
and
add
test
jl
inc
mov
lea
push
cmp
ret
mov
cmp
inc
cmp
insb
and
js
mov
mov
push
xchg
cmpsl
push
mov
int
or
arpl
inc
mov
sub
fdivrl
imul
or
shl
iret
mov
push
or
movsb
or
lahf
jmp
push
jle
dec
stc
in
mov
add
xor
outsl
add
testb
jp
mov
cmp
jae
cmpsl
inc
dec
repnz
inc
scas
rorl
lret
and
and
or
cmpsl
or
ja
outsb
mov
fimull
in
xchg
dec
jne
scas
in
mov
pop
out
cmpsb
mov
push
xor
jae
jo
dec
movsb
roll
sbb
imul
add
or
fisubrl
xor
xlat
hlt
daa
xchg
scas
or
push
cmpsl
sbb
js
test
dec
push
addr16
fadd
mov
push
inc
bound
push
lret
add
pusha
mov
incb
sbb
push
sub
xor
aam
push
mov
mov
cmpsl
mov
adc
pop
lret
xor
pop
and
mov
lcall
lcall
sub
mov
adc
ret
cli
imul
inc
cmp
sbb
pop
adcl
push
fldenv
pop
aad
mov
pop
xchg
mov
mov
popf
aad
imul
enter
shlb
pop
sbb
lret
cld
test
inc
xchg
pusha
pop
in
push
mov
fldl
dec
mov
cmp
push
and
rcrb
jb
ja
xchg
js
ja
dec
and
pushf
pop
fstpl
pop
js
xchg
push
push
int
cmc
cmp
add
mov
push
cmp
push
and
out
fdivp
out
icebp
mov
pop
xor
outsl
cmovne
or
dec
cmp
adc
adc
mov
mov
xchg
or
xor
cmp
adc
sub
adc
or
sbb
rorl
out
divb
aas
cwtl
mov
ds
push
sbb
mov
test
pop
movsl
pop
adc
push
repnz
pop
mov
xchg
test
mov
dec
mov
fcoms
mov
xchg
sbb
data16
aas
jo
sub
push
lret
add
push
imul
das
jb
fiaddl
cmp
dec
das
stos
mov
inc
ljmp
lods
mov
cmpsl
and
leave
pop
inc
mov
mov
xor
add
outsl
leave
cmp
xor
cmc
leave
orb
addb
xchg
movsb
bound
stc
fildl
jg
lods
mov
push
adc
sub
xchg
adc
xor
inc
js
cmp
add
sub
pop
add
stc
dec
outsl
arpl
xor
ljmp
dec
fidivrs
call
jae
mov
idivb
adc
xchg
pop
imul
jae
mov
cld
fisttpl
pop
cmp
into
mov
pop
stc
inc
std
adc
pop
jl
add
in
push
adc
inc
shlb
add
pop
add
xor
xchg
scas
push
mov
lea
jbe
popf
out
outsl
mull
and
popf
push
lahf
mov
inc
hlt
sti
mov
mov
xchg
sahf
or
add
mov
stc
leave
mov
repnz
jb
gs
dec
sbb
bound
cmp
jne
int3
in
xchg
lds
sub
sub
push
fbld
rorl
jne
xchg
cmp
notl
mov
fsubrs
mov
popf
or
mov
rcll
sbb
add
out
mov
mov
xchg
loop
xor
mov
add
jbe
mov
pushf
subl
les
sub
into
cld
cmpb
sub
pop
nop
cltd
in
sbb
or
shll
cmp
out
adcb
enter
lcall
fisubl
pop
adc
insl
push
jns
adc
jg
and
std
cltd
pop
mov
cmp
lahf
stc
sub
cmp
adc
jns
cmp
test
test
out
inc
lods
int
mov
sub
push
stos
cmp
fisubrs
adc
repnz
aad
mov
cwtl
xor
dec
push
int
in
nop
lods
scas
fwait
jle
jne
rcll
mov
loop
sub
scas
mov
push
lods
sub
lds
popa
xor
arpl
cs
das
xor
inc
movsb
jmp
mov
mov
cmpb
xchg
adc
and
nop
cli
loop
imul
dec
xor
sbb
inc
mov
lahf
mov
mov
in
jle
add
mov
hlt
fistpl
or
xor
inc
mov
fwait
mov
iret
outsl
loope
in
mov
data16
lret
xchg
pop
in
mov
mov
pop
cmp
pop
cs
movsl
xor
inc
insb
fwait
mov
pop
pop
and
pop
ljmp
jecxz
push
sbb
stos
popa
daa
pusha
inc
scas
mov
adc
xchg
and
sbb
std
stos
adc
out
push
in
and
mov
adc
lahf
es
xchg
adc
rclb
js
outsb
repnz
popf
test
repz
sub
xchg
inc
sti
iret
jnp
jecxz
ja
movsl
and
incl
arpl
adc
adc
dec
pop
std
shll
dec
cmpsl
aas
les
lret
pop
test
mov
lret
ss
xor
fstpt
jge
inc
orb
out
scas
imul
sbb
and
lods
int3
mov
lods
inc
inc
or
ljmp
adc
fmul
mov
push
cmpsb
lea
dec
jns
push
jecxz
pop
into
dec
push
pop
sbb
inc
gs
pop
mov
adc
push
repz
jp
jns
mov
js
or
mov
xor
mov
repz
pop
adc
xchg
int3
mov
mov
inc
cwtl
es
lret
fcmovnu
sarb
cmc
push
dec
lds
cmp
sbb
test
jnp
jmp
bound
jne
or
stos
mov
xor
bound
sbb
outsl
mov
int3
mov
mov
jmp
mov
addr16
xchg
sub
arpl
mov
sarb
aam
rclb
xor
jp
cmp
data16
cmc
pop
push
enter
xchg
mov
mov
stos
je
fiaddl
mov
jb
adc
movsb
imulb
and
cmp
jns
xchg
sbb
test
popf
sbb
ss
int3
and
jnp
fisubl
xchg
popf
adc
xor
ds
mov
jcxz
adc
icebp
cltd
mov
mov
xchg
jmp
cltd
jmp
fisubl
fadds
and
lods
call
jge
inc
les
mov
mov
sub
jmp
cmpsb
inc
mov
inc
push
lds
add
xor
jmp
push
xchg
mov
aam
fstpt
ljmp
cmpsl
repz
lea
mov
ja
test
adc
mov
mov
sbb
test
hlt
pushf
ds
pop
push
dec
aas
aas
cs
xlat
in
dec
imul
ds
imul
jno
fbstp
scas
jge
shll
popa
or
std
jns
pop
cmp
xor
fsub
popf
lods
sbb
cwtl
rcrl
jbe
stos
xchg
insl
daa
outsb
xchg
or
pop
xor
pop
inc
fs
jg
in
add
subb
jne
xor
stc
push
aas
aad
fnsetpm(287
fdivrl
mov
dec
sub
pop
jecxz
ja
add
out
in
adc
jle
iret
stc
add
adc
movsb
xor
push
sub
sub
call
rcll
xor
jbe
jb
xlat
fisubrs
sti
mov
jecxz
xor
lods
and
pop
pop
stos
iret
mov
insb
rolb
sbb
sbb
scas
out
mov
mov
cmp
inc
mov
jbe
cld
xchg
mov
clc
sub
cmp
xor
sub
aaa
cltd
gs
lods
and
insl
fcomi
cmc
cmc
sbb
push
mov
add
mov
mov
inc
inc
pop
add
cmpb
inc
ja
dec
int
fmul
sbb
mov
ja
sbb
jo
cmp
ljmp
jno
inc
shr
fisubl
sbb
loopne
test
mov
cmpsl
sub
inc
cmp
movsl
int3
out
mov
jmp
pop
xchg
les
push
dec
adc
jmp
mov
sub
fsqrt
hlt
sbb
repz
lods
adc
in
mov
or
and
rorb
sbb
nop
jno
in
movsb
xchg
rol
add
mov
aam
or
xor
int
in
cmp
jecxz
nop
fwait
call
jl
mov
push
dec
dec
adc
push
mov
repz
pop
call
xchg
xor
mov
ds
test
sub
mov
push
lods
mov
mov
insb
jbe
cmp
fs
mov
jle
or
fisubl
mov
insb
xchg
add
je
add
adc
imul
mov
mov
push
pop
pop
and
push
push
add
xchg
sbbb
movb
and
inc
cmpsl
dec
dec
pop
cwtl
dec
popf
push
mov
test
xchg
fistpl
add
cmp
les
imul
in
repnz
or
loopne
imul
sbb
cmp
xorl
xchg
jg
iret
pop
in
sub
das
fnstcw
add
dec
jbe
or
daa
jae
mov
jo
xchg
cmpsb
cmpsl
xchg
inc
mov
mov
fisttpll
push
addb
inc
nop
neg
pop
jecxz
xor
shrl
pop
loopne
int3
xor
lods
push
and
add
mov
or
pop
cmp
enter
loope
jno
xchg
test
dec
stos
fstl
mov
popf
adc
add
and
movsb
aam
and
int3
lods
imul
jbe
icebp
cmp
mov
sub
ja
leave
xchg
rol
mov
stos
dec
push
stc
mov
mov
pushf
ss
nop
call
push
sub
ja
dec
xchg
movsl
test
pop
mov
mov
gs
or
lea
icebp
or
inc
mov
sbb
or
int3
es
xchg
mov
in
or
cld
sub
shlb
inc
push
adc
mov
clc
lock
fcmovnbe
dec
xor
cmp
loop
inc
lea
xchg
stos
adc
ljmp
or
sbb
sub
xchg
lahf
pushf
or
lods
adcb
gs
repnz
inc
scas
xchg
dec
or
sbbb
xchg
cmp
negl
add
dec
mov
inc
mov
inc
pusha
pop
ja
mov
mull
adc
dec
mov
filds
adc
mov
das
clc
scas
push
mov
push
xchg
sbb
sub
sbb
jecxz
loope
cmp
icebp
mov
mov
aas
lods
mov
stos
ljmp
sub
aad
sbb
add
and
sbb
jb
out
andb
xor
ja
in
mov
scas
xchg
mov
mov
mov
jmp
jnp
pop
rcrb
stos
mov
xor
sub
out
movb
rcr
lds
jecxz
out
fsubrl
or
jb
xor
popa
xchg
bound
inc
pop
test
mov
jb
adc
sbb
int3
cwtl
imul
push
and
fisttpl
ret
fisubrl
cli
inc
xchg
daa
cmp
outsb
popa
pop
inc
les
bound
xchg
jb
jl
cmp
jno
lock
push
sub
nop
inc
push
sub
es
lock
mov
mov
sub
sbb
dec
inc
or
push
jo
sarb
cmpsl
inc
nop
jae
dec
and
mov
ja
loopne
pop
ret
rcll
xchg
jg
lds
mov
fldl
jb
push
mov
jmp
mov
and
xor
mov
aas
mov
push
bound
test
std
scas
mov
pop
adc
mov
outsb
fildl
mov
sub
mov
ret
outsl
mov
or
push
sub
inc
int
cmpsl
pause
aad
js
lret
lock
jl
repz
jg
cmc
leave
dec
ret
inc
aas
ret
mov
mov
push
mov
push
xchg
inc
cmp
outsl
lahf
aam
arpl
test
fdivs
pop
aam
or
mov
dec
movl
adc
cmp
jbe
movsb
decb
addr16
loope
cmp
rolb
pop
out
and
scas
mov
mov
push
sti
jnp
in
push
call
fs
cmp
in
add
push
jnp
sub
cs
xchg
decb
mov
dec
cmp
adc
dec
int
ret
lods
mov
pop
or
mov
mov
sahf
cmp
movb
push
xchg
and
imul
ror
js
cmc
pop
cmp
inc
nop
sbb
xchg
fidivrl
push
mov
sub
decl
mov
mov
ljmp
xchg
dec
movl
pop
jns
rorb
cmpsb
xor
and
pop
sbb
in
push
adc
cmp
or
dec
flds
ret
sub
lods
sahf
aam
loop
scas
mov
rcrb
push
cwtl
jns
xlat
ljmp
mov
mov
aas
jg
xchg
mov
push
scas
xchg
js
arpl
dec
pushf
out
dec
popf
in
out
mov
repz
dec
test
dec
mov
sbb
dec
rorb
imul
mov
cmp
and
loop
push
movsb
xchg
stos
negl
inc
mov
hlt
out
cs
cwtl
pop
mov
xchg
enter
fdiv
fcomps
adc
and
mov
jmp
mov
and
popa
mov
mov
adc
cmp
mov
data16
lock
fistl
divb
pop
out
or
scas
xchg
lds
pusha
stc
test
xchg
cwtl
pop
cmp
dec
cmp
test
or
or
add
push
xchg
fbld
neg
cmpsl
mov
mov
dec
gs
jmp
out
mov
inc
mov
jmp
jl
std
popa
xchg
aad
ds
cmp
pop
jp
loope
inc
arpl
lock
cltd
cld
cmp
sbb
stos
insl
jae
sbbb
add
jge
pop
pop
iret
leave
adc
cmpsb
int3
pop
cltd
jge
mov
incl
ret
push
and
push
mov
shlb
dec
repnz
into
xchg
cmp
cmpsb
fcomi
jne
jmp
and
arpl
aad
aam
std
dec
repnz
lret
inc
or
cltd
push
mov
sbb
add
enter
cmp
adc
call
push
mov
adcb
enter
not
test
loopne
in
addr16
add
fisttpll
mov
adc
daa
jo
loopne
daa
mov
xchg
or
lea
jns
loop
out
arpl
std
inc
aaa
nop
xor
lahf
out
fdivr
jb
adc
cmp
stos
dec
add
mov
add
subl
sub
stc
cmp
xchg
cmc
push
pop
xor
dec
push
push
mov
xorb
push
dec
and
stos
or
xchg
cmp
daa
mov
addb
cwtl
fildll
xor
stos
ljmp
lret
mov
xlat
or
pop
jge
sarb
inc
test
into
add
je
stos
inc
out
mov
add
cmc
jmp
lea
mov
dec
outsl
sbb
mov
push
pop
leave
test
cmp
int
sub
sub
sub
add
jnp
gs
sbb
inc
xchg
in
fnstenv
jne
stc
xor
mov
dec
fcomp
sti
fidivrl
mov
add
faddp
sysexit
movsb
xchg
loop
adc
push
or
ds
lret
add
scas
in
fs
push
lahf
mov
push
jne
fdivrs
lods
or
jno
pmuludq
rclb
sbb
inc
bound
in
shll
insl
cmp
inc
and
flds
push
lahf
out
inc
in
das
mov
cmp
mov
add
mov
test
and
rorb
addb
sbb
and
xchg
push
mov
jmp
xchg
cmp
clc
fwait
xchg
lods
icebp
xor
and
loope
inc
push
cmp
inc
mov
insb
xchg
pop
mov
adc
mov
mov
sub
in
cmpl
push
mov
lods
pop
aam
push
mov
mov
sar
adc
movsl
cmp
ljmp
push
rcr
stc
xchg
cli
sub
mov
sub
das
ss
inc
mov
inc
cli
lcall
mov
fisttps
shrl
xor
and
sbb
jne,pt
jmp
mov
ds
push
lret
or
cmc
pop
inc
mov
dec
mov
je
lret
loop
aaa
jb
sti
pop
jae
lock
insl
les
into
mov
cwtl
fwait
xor
add
jo
jae
xchg
int
ds
test
or
sti
vmovntps
xor
xchg
hlt
mov
jp
sbb
adc
dec
mov
inc
call
xor
repz
loopne
sub
popf
and
je
pop
add
in
pop
out
mov
sub
xchg
movsl
add
xor
addr16
fstps
pop
and
push
rclb
add
mov
dec
aaa
cmp
ret
outsb
adc
add
cmp
adc
cmp
loopne
shlb
push
pushf
cwtl
or
test
fdivl
gs
mov
sbb
xchg
fisttpl
popa
or
lods
stos
scas
jb
ss
cmp
add
scas
mov
add
push
sub
pop
pop
fildl
push
shll
outsl
adc
shlb
fnstenv
insl
out
and
xchg
mov
int
movsb
std
icebp
inc
pop
jne
sbb
cmpb
es
stos
in
cltd
xchg
push
jp
fidivrl
push
inc
cmp
aam
cmpsb
aaa
aaa
mov
scas
aam
xchg
popa
and
scas
push
popa
add
xorb
push
or
jo
adcb
loop
pop
dec
into
je
sub
leave
add
and
cmp
movsb
inc
inc
mov
sbb
hlt
mov
dec
pop
idivb
out
lods
cmp
sub
sahf
pop
scas
outsl
roll
mov
sub
or
sti
pop
stc
push
cmpsl
inc
inc
add
ret
mov
lcall
pop
dec
xchg
sti
cmp
outsb
sub
ret
sub
inc
mov
inc
mov
or
pushf
push
pop
pusha
pop
jno
and
sti
aam
outsb
movsl
adc
or
in
mov
orl
call
aas
lock
repz
pop
lret
xor
testl
sub
pop
jp
dec
pushf
mov
popa
adc
mov
mov
lcall
iret
les
push
arpl
sub
movl
mov
in
std
out
aaa
mov
enter
jnp
test
cwtl
scas
or
ret
sbb
outsb
in
lods
mov
icebp
pop
mov
test
inc
cltd
in
jp
pop
cli
xchg
mov
sbb
push
sti
jmp
addl
mov
lea
das
xchg
pushf
into
inc
cmp
loope
jmp
lret
cli
xor
ja
mov
sahf
dec
push
adc
mov
jle
dec
test
add
les
fdivs
pop
fadd
mov
jno
dec
out
lods
cmp
mov
adc
cwtl
repnz
ds
dec
stos
and
inc
data16
jle
pop
mov
lea
imul
sub
int
lods
dec
mov
cli
mov
pop
gs
pop
dec
call
push
outsb
adcl
xchg
lea
adc
push
out
insl
cmp
repnz
adc
or
cmpsb
xchg
insb
cmp
mov
jnp
ret
adc
in
sbb
adc
in
and
push
lcall
out
cmpsb
stos
insb
xchg
jle
test
xchg
mov
jns
jmp
adc
aad
dec
insl
pop
lcall
lods
orl
data16
jno
and
mov
sahf
sub
loop
insl
xchg
gs
movsb
iret
lds
fwait
inc
mov
jno
sbb
sub
cmp
jge
gs
pusha
addl
pop
push
xchg
adc
xchg
icebp
jne
nop
nop
popa
push
bound
mov
insl
lret
jmp
sub
pop
popa
enter
orb
jecxz
and
pop
pop
jge
adc
in
sub
mov
push
andl
pop
xor
leave
mov
aad
jnp
mov
add
jno
in
pushf
ret
fidivrl
js
dec
ja
fists
lock
mov
mov
repz
out
das
mov
subl
sbb
push
cmp
adc
mov
mov
sbb
and
repnz
cli
test
xchg
pusha
repnz
call
stos
dec
lahf
loopne
outsb
jge
lcall
mov
xor
push
int
pop
arpl
inc
pop
popf
mov
push
mov
rorb
mov
fldenv
ljmp
pop
movsl
push
sub
mov
ficompl
cmc
movsl
arpl
xor
push
cld
xchg
mov
xchg
addr16
loopne
sbb
xchg
scas
lods
mov
outsb
jno
pop
push
out
xchg
jb
jge
scas
jb
addr16
adc
lahf
aaa
iret
xor
dec
aas
es
pop
cs
or
stc
dec
loopne
rcr
gs
lods
mov
or
ds
mov
es
int
negb
cltd
mov
mov
jns
xchg
inc
ret
insb
xchg
and
mov
out
repz
sub
imul
fsubrl
jecxz
enter
mov
inc
pop
aam
mov
in
int
out
and
mov
fwait
pop
shlb
inc
out
faddl
in
cmc
push
adc
inc
in
mov
test
popf
mov
jg
cltd
jne
push
pop
inc
mov
imul
int3
push
push
xor
ja
test
shlb
fnsave
sbb
sub
loope
aad
cmp
int3
mov
xor
inc
fiadds
mov
popf
push
push
add
in
jecxz
ja
test
loop
push
inc
xor
je
xor
clc
add
fdivr
inc
dec
insl
cmp
adc
push
bnd
push
jae
jae
mov
jge
jno
mull
in
cli
sbbb
jecxz
jno
sub
inc
push
cwtl
neg
fdivl
rcrl
mov
pop
fdivl
imul
ja
enter
shld
inc
imul
int3
ljmp
mov
cwtl
xchg
rcrl
pop
popa
into
ja
js
aaa
cmp
xchg
jno
dec
js
xor
inc
rorl
cpuid
add
inc
addl
cmpsl
rol
mov
jmp
xchg
scas
jne
inc
rcr
out
test
fcmovb
fidivl
cmpl
adc
int3
stos
xor
ja
sbb
dec
jle
in
sub
mov
enter
outsb
xlat
fstps
lahf
jnp
push
lds
xchg
popa
xchg
add
dec
into
aad
push
loop
push
xor
fsts
lods
mov
test
xchg
sub
mov
test
push
xchg
pop
frstor
iret
dec
pop
and
cmc
adc
in
add
scas
xor
cmp
jno
cmpl
lods
lret
in
cmp
inc
scas
push
test
inc
mov
shrl
mov
cmp
mov
mov
popf
leave
ljmp
jo
cmpsb
xor
in
inc
adc
or
fs
jo
decl
inc
dec
xchg
sti
xchg
test
push
andl
push
setge
inc
sub
pop
lds
mov
xchg
outsl
pop
iret
insb
out
mov
ja
inc
mov
jno
xchg
mov
sub
mov
and
push
not
push
mov
mov
add
lcall
pop
bound
or
push
cmp
into
dec
mov
push
int3
insl
mov
jle
dec
jmp
insl
mov
jl
push
lods
test
insl
pop
mov
stos
jb
icebp
dec
xor
aad
pop
fwait
les
mov
bound
iret
fs
fmuls
fwait
insl
sbb
fs
in
outsb
lea
test
pop
sub
mov
test
xchg
sar
sub
xor
push
clc
jnp
adc
mov
movsb
xchg
mov
out
add
sub
pop
mov
mov
out
outsl
fcomps
stos
dec
fisttps
mov
xlat
and
sbb
mov
cld
test
imul
outsl
pop
mov
popf
mov
jae
imul
lock
popa
xor
mov
repz
mov
push
adc
cld
add
mov
loopne
cmp
aam
adc
sbb
jmp
enter
pop
int3
cmpsb
repz
shrl
scas
xchg
insl
sbb
xor
cmpl
and
xchg
call
mov
int
jns
inc
in
pusha
push
inc
repnz
dec
ljmp
mov
insl
pop
fwait
push
or
aam
insl
xchg
sub
addr16
sbb
sbbb
sub
scas
add
sub
imul
loopne
lock
add
adc
je
push
add
dec
pop
sub
mov
aad
xchg
adc
mov
ds
add
push
adc
js
in
daa
cmp
lods
push
mov
in
aad
and
adc
pop
arpl
sub
aas
xchg
cmpsb
in
adc
inc
push
lock
inc
xchg
pusha
fwait
cltd
sti
sbb
insl
lock
scas
jg
push
ret
jmp
sbb
jbe
and
jmp
jmp
jecxz
sbb
sub
dec
movsb
jae
les
outsl
push
adc
sbb
xlat
push
cwtl
roll
pop
mov
es
mov
push
repz
sub
test
mov
mov
or
pop
gs
push
mov
ja
outsb
fcmovnu
xor
jp
or
pusha
fs
cmp
lea
fs
aad
insl
cmpsl
dec
mov
sub
sbb
cmc
pop
and
mov
xchg
pop
lret
orl
lods
mov
sbb
fidivrl
leave
pop
je
mov
ds
mov
inc
std
inc
or
jge
mov
popa
decb
jl
jl
push
inc
movsb
adc
pop
pop
test
mov
mov
loope
movsb
jne
pop
sub
and
jge
addb
push
inc
insb
cmp
enter
push
mov
insb
adc
add
xchg
loope
lahf
pop
loopne
mov
sbb
push
mov
lahf
push
repnz
sbb
xchg
add
aas
pop
push
or
xchg
aam
mov
dec
js
xor
jbe
lret
out
addr16
shll
shll
or
jmp
sbb
ror
pop
dec
jmp
loope
push
sbb
jmp
adc
lds
stos
imul
push
ficomps
xor
cmc
adcl
mov
in
cmp
add
adc
stc
sbb
pop
movsl
addb
popa
and
std
fwait
rolb
lea
pop
fcomps
imul
xor
in
add
mov
lea
mov
popa
sub
dec
mov
je
pushf
popf
in
insl
fdivrs
sub
in
and
push
rcr
mov
stos
cmp
push
das
jmp
insl
jno
sbb
xchg
cmp
scas
sub
mov
ljmp
pushf
or
dec
ror
bound
mov
xor
filds
jns
xchg
pop
nop
and
ljmp
xor
test
dec
dec
enter
in
hlt
and
push
repnz
mov
xchg
adc
test
testb
dec
sub
aad
fs
xor
test
push
mov
int3
std
jge
out
mov
lock
jecxz
push
mov
aam
mov
std
rcll
out
xor
push
cmp
repz
pop
sub
cs
push
out
mov
push
ljmp
dec
aam
daa
sbb
std
or
lcall
add
xchg
imul
notb
xchg
push
pop
data16
jge
jle
mov
mov
lods
sbb
das
lahf
bound
jbe
movsl
adc
rcrl
sbb
adc
mov
cmpsb
movsl
lods
aad
adc
adc
fisttps
je
notl
clc
dec
jae
adc
sbb
push
sbb
and
sub
es
sbb
popa
leave
mov
stos
and
push
jl
je
pop
lock
add
fidivs
xlat
adc
in
inc
enter
fisttpll
push
pop
push
jg
jp
ss
xor
outsl
inc
rcr
fstl
out
or
dec
fdivrl
jae
xchg
and
cmc
fistl
xchg
icebp
sub
dec
inc
pop
lret
push
outsb
stos
add
push
jns
cli
subb
jne
adcl
repz
addb
ljmp
mov
fwait
pop
divl
sbb
mov
jmp
sahf
xor
jbe
les
add
mov
ret
mov
xorl
mov
cmp
lret
mov
mov
pop
orl
rcll
xchg
insl
call
arpl
sbb
xor
dec
push
and
stc
pop
push
fcompl
mov
std
lea
rcrb
aad
push
cmp
dec
dec
lret
push
or
nop
jge
mov
cmp
test
ja
dec
fsubrl
mov
xchg
jo
and
add
dec
push
ret
add
ja
dec
xchg
dec
mov
sub
sbb
mov
je
jae
in
das
mov
sbb
icebp
lds
push
push
push
test
rcll
pop
iret
cmc
cmpsl
sbb
sbb
xchg
mov
or
test
and
or
fwait
sub
cwtl
inc
stos
aaa
cs
aas
jecxz
dec
jne
das
or
cmpb
js
sarl
pushf
mov
int
daa
cli
outsb
lods
bound
or
jge
mov
arpl
cmp
and
in
movsl
mov
shl
aad
arpl
mov
lret
jp
pop
xor
pop
ds
push
arpl
push
shl
pushf
addr16
outsb
push
aas
xorb
lret
sbb
lds
adc
xchg
test
push
xchg
js
cmp
push
rcl
scas
sbb
leave
imul
add
or
pop
xor
mov
cmp
pop
popf
sub
add
shlb
mov
xchg
sbb
dec
adc
test
cmp
movsb
lahf
xor
stos
add
cmp
lret
mov
and
pop
inc
push
ret
daa
jnp
pop
gs
loope
pop
inc
xlat
fcmovb
bound
adc
pop
cmp
and
cmp
std
and
cld
jg
rorb
jmp
fst
and
imul
cmp
and
push
dec
jge
ljmp
push
jmp
scas
mov
ljmp
adc
xor
out
int
mov
mov
push
fs
cli
push
loopne
inc
cld
das
popa
push
cmpsl
mov
rcrb
lahf
mov
lcall
leave
ljmp
jmp
jg
push
nopl
sbb
sub
adc
int
mov
rorl
push
mov
pop
mov
fidivrs
add
inc
dec
rcr
xor
and
jne
mov
stos
jmp
xor
fsubl
daa
subb
ljmp
stc
iret
mov
push
adc
add
imul
das
fisubrs
pusha
pushf
mov
or
insl
lahf
or
inc
and
sbb
mov
gs
cmp
sbb
loop
rcl
pusha
cmp
out
mov
mov
js
add
xchg
sub
sbb
icebp
mov
push
mov
ljmp
fneni(8087
das
stc
pop
jle
sbb
dec
mov
push
inc
dec
call
in
push
push
push
mov
iret
inc
jo
gs
cmpsb
jne
aaa
add
pop
das
insb
mov
mov
int
mov
xchg
fs
repnz
xor
rcll
or
sub
xlat
popf
mov
pop
imul
test
outsl
cltd
lods
and
add
ret
loopne
lds
stos
das
cmp
mov
push
popf
pop
test
mov
push
daa
out
out
pop
mov
push
into
fisttps
cmpsb
popf
imul
mov
int3
push
push
rcll
stos
cmp
or
xchg
sub
mov
movsl
xchg
lock
fs
into
sub
dec
mov
xor
inc
xchg
test
add
mov
cmp
in
push
add
adc
xchg
ss
mov
clc
xlat
test
nop
lea
cwtl
dec
popa
push
loop
mov
sbb
leave
mov
xor
add
pusha
bnd
add
xchg
cmpb
push
xor
push
outsl
mov
out
xchg
adc
test
xor
mov
mov
icebp
xor
mov
les
cmp
iret
xor
jne
call
stc
dec
and
dec
popf
lods
mov
je
lds
stos
xchg
cmpsb
inc
cmpb
cli
xchg
and
mov
add
push
jno
jecxz
or
icebp
jmp
push
mov
push
loopne
push
fdivrl
cmpsl
ja
andl
and
mov
fisttpl
mov
int3
adc
ret
mov
adc
movsb
sbb
xchg
ds
push
ret
nop
inc
push
dec
andl
jecxz
dec
or
addr16
sub
stos
inc
movsb
aaa
add
fwait
arpl
in
imul
push
aas
sbb
scas
mov
xor
jae
cmp
aaa
movsb
lea
outsb
jo
mov
xlat
cmp
stos
cmp
fs
lahf
ss
ret
sbb
lcall
dec
push
sub
lahf
std
add
and
rorl
testl
sti
mov
inc
mov
add
sub
jg
xor
popa
fsubrl
out
test
shlb
add
dec
testl
add
mov
in
dec
xor
inc
xchg
adc
mov
arpl
lahf
add
jge
clc
aad
jns
lret
sarb
jno
clc
std
lahf
jg
stos
xorb
mov
test
notl
mov
adc
xor
and
shlb
sub
mov
jae
popf
imul
das
adc
test
xchg
decb
sub
add
rcll
rcrl
movsb
jp
daa
mov
or
jmp
orl
xchg
lret
gs
sbb
ret
cli
enter
popf
jl
xor
push
push
push
inc
mov
outsb
lret
aaa
or
lahf
das
shrl
out
in
iret
xlat
out
mov
inc
and
lock
pop
xorb
imul
jbe
ds
lret
mov
push
jg
test
sahf
outsb
xchg
data16
add
movsl
cli
repz
xchg
out
loopne
push
pop
jle
mov
hlt
jmp
mov
mov
push
cmc
push
movsb
test
cli
mov
gs
std
cmpsl
inc
out
shll
das
push
test
mov
xor
jns
sub
aad
or
negl
cmp
jns
inc
aad
fdivrs
push
sbb
lods
mov
out
movsl
mov
dec
mov
sarl
mov
aaa
push
add
mov
push
shl
mov
sub
inc
mov
mov
lahf
mov
imul
shl
mov
imul
aas
jo
popa
mov
aad
inc
or
sbb
nop
or
fisttpll
inc
xchg
paddusb
in
divl
push
sub
fmulp
push
cmpb
ljmp
punpckhbw
outsb
fsubs
lcall
mov
gs
sbb
xchg
xor
add
xchg
pop
push
sub
adc
sbb
inc
xchg
or
lret
mov
stc
xchg
adc
aam
cmc
adc
dec
ss
dec
aad
push
xor
and
lret
lea
cmpsb
mov
inc
loop
fdivrs
cmp
cmp
sarl
rclb
test
inc
test
fwait
adc
or
daa
out
adc
imul
daa
outsl
pop
pop
cmp
outsl
aam
mov
out
pop
in
pushl
mov
bound
xchg
mov
aam
jecxz
or
add
mov
fimull
cltd
test
or
inc
pop
aad
jno
adc
insb
xorl
push
lds
adc
add
jbe
xchg
bound
outsb
jnp
sbb
loopne
loopne
sub
pop
test
imul
int
popa
lret
jp
test
aaa
stos
cmp
jl
shll
mov
dec
mov
mov
pop
pop
jae
sbb
out
fwait
add
sarl
adc
call
pop
mov
jecxz
sub
pop
pop
clc
sbbl
sub
mov
cmp
fdivrs
mov
fidivs
icebp
sub
sub
or
idivl
cltd
aad
pusha
xchg
cli
loope
inc
sub
xlat
mov
lcall
nop
or
adc
in
xor
jl
adc
sbb
sbb
mov
jns
faddl
in
jp
jns
int3
jp
in
cld
int3
dec
cmpsl
loope
push
ljmp
add
fdivp
push
out
shlb
push
add
adc
rclb
lods
pop
out
mov
xchg
rdpmc
repnz
xor
pusha
in
repz
je
lods
ds
xchg
push
js
daa
loope
repz
lret
dec
pop
mov
js
aaa
popa
and
push
xchg
mov
daa
and
ja
stos
enter
xchg
adc
hlt
pop
fs
sbbb
lds
fcmovnu
mov
push
test
outsl
xlat
mov
cmp
in
cmpl
mov
icebp
mov
sbb
loopne
fwait
pop
and
push
in
je
cmp
insl
add
enter
sbb
lret
rorb
xchg
pop
push
xor
add
shll
inc
jno
and
push
ret
jae
pop
push
adc
dec
in
push
cmp
fisubs
jle
xchg
sub
popf
mov
adc
popf
xor
push
sbb
mov
jmp
mov
or
sub
cmpb
movsl
pop
xor
movsb
dec
jg
nop
mov
jl
sbb
xchg
push
or
addb
sub
adc
push
icebp
test
je
movsl
mov
out
dec
inc
cs
push
enter
sub
in
or
or
imul
addl
jb
sahf
rcr
rorl
push
out
mov
aam
js
adc
cs
sbb
fists
insl
pop
cld
jge
addr16
and
sub
lahf
dec
mov
jae
fadds
dec
cmp
hlt
xchg
in
dec
test
sbb
push
xchg
push
shll
fistl
sub
sbb
mov
ja
ja
stos
mov
jae
stc
inc
mov
and
popa
xor
push
adc
pause
jbe
push
jge
mov
out
fisubrs
imul
hlt
mov
mov
sahf
push
aad
sub
imul
lods
add
cmpsl
insl
aas
fisubs
adc
adcl
cmp
push
fisubrl
add
int
mov
lahf
fsubrs
or
fxch
push
daa
addr16
jne
add
addr16
imul
sub
cmp
xor
lcall
aas
insl
fcoml
jbe
cmp
pop
flds
loop
mov
movsb
cmp
push
shll
lahf
cmp
repnz
cs
cmp
lret
inc
mov
and
or
out
jns
and
ds
rorb
push
icebp
mov
xchg
mov
jb
mov
hlt
cmc
pushf
inc
cmp
fsub
arpl
adc
jmp
subb
jno
adc
mov
push
cmp
sbb
xchg
sbb
stos
into
fidivs
loop
rcr
mov
or
sahf
jg
xchg
fildll
inc
aam
std
aam
pop
xchg
xchg
lahf
cmp
jmp
mov
dec
push
sbb
fdivr
xor
add
rcll
dec
jno
outsl
xchg
movsl
icebp
push
enter
adc
xor
dec
push
jbe
add
imul
rclb
je
ljmp
mov
cmc
test
xchg
faddl
and
xlat
stos
jg
jecxz
mov
gs
mov
int
out
in
mov
jmp
fwait
adc
cli
or
lds
xchg
jecxz
nop
inc
sub
fucom
fdivs
sub
test
aam
jns
lds
mov
sub
and
inc
dec
jno
movsl
lret
fcmove
xchg
out
fucomi
push
dec
jnp
push
frstor
pop
cmp
lods
dec
test
push
fidivl
fidivs
clc
rorb
out
adc
cmp
mov
mov
xchg
xchg
inc
mov
or
pusha
jae
mov
or
js
jbe
or
iret
mov
in
push
lea
sbb
xchg
arpl
jecxz
iret
push
lahf
lock
flds
fdivl
je
loope
lock
inc
xchg
adc
pushf
xchg
push
cltd
bound
stc
mov
scas
sahf
jne
cmp
cmp
iret
push
aam
sti
push
sub
jmp
outsb
lods
lock
mov
mov
dec
add
fistpll
das
cs
fs
mov
mov
outsl
push
fsubrl
mov
add
out
dec
jb
mov
xor
cmp
out
sti
xchg
stc
roll
mov
cmc
cmp
add
inc
jnp
std
mov
jbe
or
add
xchg
jg
repz
decl
xor
mov
in
into
ror
les
dec
adc
mov
leave
sbb
js
pop
imul
sti
fstpt
cmpsb
mov
and
fs
jbe
dec
mov
dec
js
lahf
enter
pusha
in
movsb
test
cli
mov
mov
lods
pop
ja
scas
sub
cmpsb
jnp
sbb
lds
fdivp
orb
inc
dec
sbb
xor
lock
scas
inc
clc
sub
cmp
pushf
shll
push
ds
out
mov
sti
add
sub
adc
push
test
and
ljmp
inc
add
add
xor
idivb
rorl
sub
cld
or
jnp
push
dec
mov
inc
cmpsb
popf
jge
jno
adc
or
stos
jne
sbb
jg
jl
xchg
ret
mov
iret
jb
outsl
clc
add
mov
lcall
mov
add
subb
inc
les
inc
outsb
call
mov
psrld
or
repz
xchg
test
cmp
sub
ficoms
push
fldl
add
orl
out
mov
adc
push
cmp
add
dec
scas
push
xor
mov
hlt
adc
test
push
pop
sbb
leave
xor
or
fnsave
and
lcall
fnstsw
mov
xchg
scas
ds
sarb
sahf
mov
mov
add
int
mov
mov
bound
ja
bound
imul
push
adc
popa
push
sub
add
roll
scas
push
mov
push
push
outsb
xor
test
sbb
addl
jb
adc
cltd
inc
int
ret
mov
test
movsl
xor
loop
add
lock
adc
sbb
cld
out
adc
shll
pop
adc
lahf
es
lds
in
mov
lret
sub
mov
stos
inc
cmp
rcrb
aam
lds
pop
pushf
mov
jge
pop
int3
sbb
xor
int3
nop
adc
rorl
pop
xchg
test
bnd
adc
dec
bswap
into
mov
insb
ss
lds
add
mov
inc
dec
dec
rorl
mov
incb
push
mov
outsb
lods
cmpsl
into
insl
mov
repz
sub
popa
push
fwait
xchg
mov
leave
das
lcall
inc
mov
pop
mov
cmpb
push
repnz
jmp
lock
or
xchg
cmp
cmpsb
mov
sbb
ds
addr16
test
sbb
inc
int3
inc
repz
jo
popf
xlat
fidivrl
sub
pop
lods
jp
fisttpll
orl
sti
and
push
push
jae
inc
cltd
mov
addr16
lock
addr16
pop
in
gs
add
pop
adc
test
das
std
xchg
jns
test
sti
and
sbb
jno
dec
push
enter
cmp
cmp
comiss
inc
loopne
imul
push
dec
rolb
pop
pmullw
cmp
or
repnz
jecxz
inc
adc
adc
xor
pop
xor
subb
cmp
add
outsl
in
push
sbb
add
dec
sub
leave
sbb
mov
dec
mov
inc
out
push
inc
mov
mov
inc
mov
sti
roll
push
or
pop
stos
cmp
add
add
mov
andb
outsb
pop
ljmp
loopne
lods
or
lods
mov
mov
cltd
jp
add
jp
mov
mov
xchg
push
outsl
jae
int3
call
mov
mov
mov
pop
test
lahf
jmp
xor
xchg
test
test
jp
sub
jne
push
sbb
dec
shll
mov
dec
cwtl
jl
test
xchg
cmp
and
out
jo
cmp
insb
sub
or
insb
sti
cmp
out
in
adc
cmp
dec
jle
push
add
fadds
xchg
xchg
in
inc
sub
test
stos
je
dec
or
pop
test
sbb
mov
xchg
sbb
rcll
cmpsl
push
js
jnp
fists
adc
clc
in
sbb
push
mov
inc
stos
pcmpeqb
mov
xor
lcall
ja
and
pop
fs
arpl
dec
add
push
sub
cmp
jae
jge
aaa
jge
sub
jne
ds
pop
scas
push
add
aaa
pop
div
push
ljmp
xchg
cmp
pop
jb
or
daa
push
push
or
xchg
test
in
fucom
daa
xor
out
lcall
aas
lods
xchg
mov
lock
push
loop
lods
or
mov
dec
in
in
lods
inc
aaa
repnz
inc
cwtl
or
jge
jae
cmp
push
jg
pop
and
shl
dec
push
loop
xor
inc
scas
or
add
in
pusha
jp
or
test
jge
push
addr16
test
jno
mov
mov
lods
dec
pop
in
repnz
sub
sbb
xchg
sub
push
pusha
into
rcl
push
pop
scas
xor
sarl
jp
mov
in
add
sbb
pop
fs
mov
push
sahf
mov
push
mov
shlb
fimull
mov
iret
arpl
dec
push
int
popf
adc
lcall
cli
fs
jbe
mov
test
ret
mov
xor
out
pop
or
jbe
repz
cld
test
mov
mov
lock
fbld
mov
pop
dec
and
lret
mov
jmp
incb
subb
iret
sbb
sti
cmc
push
push
cmpsl
adc
xchg
les
movsl
sbbl
push
dec
and
jne
sbb
mov
push
addr16
mov
cmpsl
pop
stos
shr
dec
inc
setbe
mov
dec
push
stos
ret
ss
xchg
mov
cmp
dec
fstpl
add
test
ret
stos
sub
push
out
mov
mov
in
push
mov
ret
shlb
lahf
mov
subl
sti
add
mov
and
dec
gs
mov
lea
push
je
adc
popa
xor
inc
push
fadd
js
push
push
lret
arpl
jo
sub
cwtl
insb
aaa
sti
stos
icebp
into
adc
and
jnp
push
fiaddl
pop
js
xchg
cmp
push
mov
sbb
mov
dec
in
les
mov
adc
pop
mov
addr16
push
push
jne
add
lea
nop
insl
aad
dec
lahf
clc
cmp
movsl
push
out
bound
fwait
imul
pop
push
mov
mov
push
push
movsb
inc
test
cmc
sub
daa
or
xor
inc
sbb
ss
cmpsb
stc
into
push
mov
iret
cmp
xor
mov
jns
cmc
or
and
call
daa
bound
adc
mov
scas
sti
pop
into
mov
push
jle
pop
out
and
je
cmp
pop
or
aad
cmp
sbb
xchg
popf
jb
cli
push
mov
stos
hlt
cmp
les
fs
enter
jo
mov
mov
dec
stc
jbe
div
or
frstor
xchg
push
jnp
sub
mov
and
dec
dec
outsb
add
pop
sbbb
mov
mov
add
adc
or
xchg
pop
ret
pop
cmpsl
aaa
pop
stc
fnsave
add
push
push
mov
incb
cmc
add
fsts
je
pop
mov
push
push
adc
adc
mov
nop
pop
add
push
xlat
mov
mul
inc
mov
lcall
aad
cmc
mov
mov
lahf
aad
shlb
aad
popa
jl
sub
mov
cld
decb
les
jb
xor
daa
push
imul
sbb
or
cli
push
cmp
lea
insl
fldz
rclb
mov
test
add
repnz
cmp
adc
fwait
push
scas
adc
leave
xchg
mov
sub
push
add
addr16
pop
sub
jns
sbb
xor
mov
mov
add
jecxz
push
jnp
ja
aas
daa
mov
jnp
sbb
push
mov
je
shlb
dec
pop
out
jne
out
push
stc
xor
xchg
sub
push
loop
inc
inc
adc
mov
push
add
test
adc
sbb
std
jne
mov
adc
sub
movsl
jp
mov
push
ret
or
cmpsl
sub
sub
std
pop
sbbl
mov
frstor
and
loope
pusha
mov
scas
mov
fcmovb
adc
ficomps
and
insb
or
and
in
sub
bound
cmpsb
leave
pushf
or
mov
pop
addr16
jl
lock
pop
loopne
or
jp
adc
sub
and
pusha
in
pop
in
cmp
out
enter
mov
sub
fwait
mov
sbb
mov
fadds
mov
insb
jae
adc
dec
add
xchg
insb
popa
push
mov
inc
stos
lret
adc
fisttpll
adc
inc
jns
pop
jle
dec
in
addb
cli
imul
stos
pop
out
cmp
push
or
xor
jl
outsl
xchg
js
add
inc
mov
adc
mov
ss
aad
icebp
cmp
add
xchg
xchg
mov
mov
add
icebp
pop
mov
lret
mov
rcrb
pop
movsb
popf
mov
fidivs
sbb
ffree
sub
dec
push
mov
xchg
rorb
dec
mov
mov
sbb
loope
outsb
mov
or
int
scas
test
subl
inc
lahf
push
repz
mov
dec
into
out
insl
fisttps
out
insl
lret
mov
pop
fwait
dec
mov
dec
aam
xor
cmp
sbb
stos
add
cmp
xchg
inc
mov
lcall
jle
stc
cmp
and
sbb
inc
cmp
movsl
fistps
insb
sti
shlb
ss
ljmp
or
pop
cmp
mov
or
xor
out
inc
and
int
sub
or
mov
dec
pop
inc
dec
call
clc
dec
and
pop
sub
out
push
imul
pushf
xor
hlt
addr16
or
mov
dec
aam
icebp
xor
add
pop
inc
xor
mov
fmul
xchg
mov
mov
js
shlb
xlat
ret
cmp
loope
push
addr16
lcall
adc
jp
cmp
or
popf
loopne
inc
add
fdivrl
shrb
pop
aam
lahf
aas
insl
cmc
jb
jge
fsubp
mov
lea
ljmp
and
jo
xor
jnp
data16
mov
xchg
xchg
mov
mov
imul
jp
add
push
enter
mov
insl
sti
outsb
dec
in
std
jae
outsl
cli
mov
sbbl
imul
arpl
bound
fdivs
fbld
sub
inc
xor
jle
aad
or
push
xchg
aad
call
push
jbe
stc
mov
repz
int3
inc
mov
aas
loope
xchg
pushf
and
bnd
fsubrl
in
ja
sub
mov
add
cmp
icebp
loopne
push
jmp
push
or
loop
push
pop
push
mov
dec
mov
cld
cmp
test
js
mov
test
fsubr
adc
shrb
jb
inc
outsb
add
arpl
sbb
xor
mov
xlat
scas
sbb
mov
xchg
pop
sub
ja
lods
pop
sbb
ds
pop
add
adcb
stos
loopne
jl
and
scas
jg
lcall
gs
popf
dec
push
dec
or
xor
call
clc
jnp
das
dec
pop
test
inc
dec
fdiv
nop
pop
xor
cwtl
mov
in
jmp
mov
js
fucomp
imul
push
movsb
jnp
lds
pushf
fists
jl
pop
sub
sarb
jge
or
xor
incb
jno
mov
dec
xchg
sbb
pop
repz
pop
notl
mov
and
arpl
test
pushf
lea
test
fisubrs
scas
out
cmp
push
and
and
mov
ds
mov
mov
pusha
inc
and
or
jne
scas
pop
ds
inc
xor
shrb
jbe
ret
pop
sti
in
xchg
in
mov
mov
cli
sahf
mov
aad
jmp
or
sti
shlb
and
in
inc
cwtl
iret
rolb
xchg
in
enter
sbb
inc
push
es
mov
in
inc
add
and
movsl
jb
stos
adc
pop
notb
pusha
xchg
scas
cmc
int3
pop
into
push
andl
pop
cmp
lods
adc
mov
ljmp
jmp
mov
cmp
push
ficompl
stos
pusha
and
scas
jle
scas
and
repnz
pop
dec
scas
mov
sbb
inc
sub
inc
sub
nop
loop
push
xor
lock
int3
adc
lcall
mov
call
aaa
or
aas
insl
inc
loopne
decb
loope
inc
test
enter
loope
insl
pusha
dec
sahf
and
dec
outsl
mov
jbe
mov
cmpsb
xchg
fistl
imul
lock
aam
jle
adc
jne
mov
in
jl
decl
les
jl
inc
sbb
in
insb
movsl
sbb
js
xor
inc
xchg
inc
pop
mov
jmp
mov
mov
jb
mov
pop
dec
or
xor
mov
and
xor
sub
sub
bound
cmp
dec
dec
aam
pop
lahf
xor
fwait
jno
ja
dec
ja
mov
test
in
sub
les
repz
idivb
mov
dec
addl
jnp
lds
loop
jl
ljmp
lods
pop
lods
push
hlt
fmuls
and
mov
mov
lret
push
add
mov
mov
xchg
lock
out
xor
divb
popa
mov
bound
and
xlat
in
leave
and
outsb
xchg
imul
pop
fucomip
loopne
fisubrs
test
aad
pop
and
loopne
jle
push
hlt
sub
call
bound
xchg
loopne
pop
sbb
and
pop
push
loope
jecxz
fucomp
movsl
fnsave
gs
pop
pop
push
dec
jmp
movsl
xor
icebp
adc
pop
int3
sub
or
pop
fidivrs
lahf
mov
sbb
sbb
sarb
xchg
cmpsb
addr16
sbb
mov
sbb
test
roll
stos
daa
pop
or
or
ret
xor
into
fcompl
mov
xor
mov
aaa
mov
inc
lds
ret
and
inc
stc
in
or
mov
ss
sub
push
jge
add
xchg
xor
pop
add
insl
frstor
sbb
push
les
push
testl
xchg
mov
pop
xchg
idivl
enter
inc
mov
push
ljmp
jp
lahf
ds
jb
sub
inc
stc
cmc
je
aaa
shrl
shll
pop
cmpsl
repnz
lret
mov
pop
inc
je
pop
lea
arpl
shl
mov
sbb
push
cmpsb
push
movsb
pop
pop
push
int3
in
repz
sub
xchg
cmpb
jmp
add
fdivs
dec
cmc
mov
add
inc
pop
xchg
jne
ja
or
xor
bound
cwtl
jnp
sub
push
imul
or
in
in
xlat
add
imul
mov
popf
popf
hlt
add
jne
fdiv
lcall
inc
jmp
lods
push
or
and
push
insl
push
xchg
pop
in
adcl
pop
xchg
hlt
mov
pop
fwait
aas
fs
pop
xchg
enter
jle
mov
xlat
xor
jns
xor
testl
mov
sar
loop
cmp
int
inc
sbb
mov
loop
mov
or
psubusb
inc
inc
nop
jge
jmp
call
cltd
inc
jmp
inc
dec
stc
out
or
iret
ret
push
test
addr16
iret
cmp
inc
cmc
push
push
dec
ja
insb
adc
jo
pop
sub
mov
aad
fs
inc
push
mov
or
out
movsl
fistl
in
shl
mov
push
aaa
pop
add
dec
scas
xor
popa
loop
js
mov
push
popa
shl
movsl
ficoml
fdivl
lea
mov
mov
js
rorb
loopne
rcrl
pop
ljmp
or
ds
sahf
test
add
cmp
arpl
enter
pop
jb
dec
sbb
push
je
cmp
aas
sbb
in
jmp
dec
gs
inc
mov
xor
shll
jne
lds
mull
loopne
adc
ljmp
push
add
inc
lds
push
cmp
jnp
cld
sbb
mov
lds
in
dec
hlt
pop
test
and
repz
mov
nopl
ss
roll
lea
and
dec
vpaddd
push
stos
fwait
add
jb
or
mov
rcrb
aam
movsl
adc
xchg
pop
lock
inc
adc
jbe
add
cmpl
test
jp
test
xchg
sbb
dec
dec
fdivp
flds
mov
adc
out
xchg
jle
mov
movsb
push
sub
fs
dec
clc
sbb
adc
dec
mov
cmpsb
mov
scas
sub
mov
mov
push
loope
rcrl
dec
jmp
push
pop
scas
mov
sub
test
frstor
jle
outsb
popa
jmp
add
mov
test
xor
idivl
cmp
ret
mull
adc
mov
cmc
and
jle
in
sub
es
out
add
ja
mov
div
push
cmpsb
mov
push
fbstp
xchg
sti
outsl
mov
pop
inc
add
shlb
cmp
pusha
fstpl
cmpsb
xor
ror
fsubrl
pop
jecxz
aas
jl
movsb
movl
das
xor
pop
test
popf
cmp
jmp
push
push
call
xchg
clc
insl
ret
adc
mov
jp
xchg
xchg
pop
mov
push
mov
fsubs
xchg
dec
mov
push
or
adc
neg
imul
dec
je
mov
outsb
andl
mov
pop
cwtl
outsb
and
jb,pt
in
lods
mov
in
test
sbb
jno
mov
cmp
nop
add
subl
and
xor
subl
adc
mov
aaa
js
addr16
push
into
xor
ret
pop
xor
lods
rcl
pop
and
add
xchg
push
shll
dec
addr16
test
sbb
xlat
ljmp
movsb
pop
or
repnz
mov
mov
dec
adc
and
enter
xchg
in
mov
mov
jg
lods
lahf
pop
sbb
test
adc
rorl
stos
dec
xchg
je
popl
and
mov
scas
and
dec
fstpl
xor
mov
dec
dec
cmp
adc
es
std
inc
iret
jo
jno
jp
mov
mov
mov
std
dec
pop
jg
push
lds
mov
cs
int3
push
out
push
paddsw
out
clc
sbb
cmpsb
hlt
lea
mov
mov
sbb
xor
and
sub
aaa
sbb
loop
je
je
inc
adc
mov
xchg
jmp
test
jl
call
sahf
jp
ret
cmp
pop
xchg
std
add
inc
inc
push
ret
sub
scas
add
cmp
xchg
push
mov
push
dec
inc
cmp
icebp
pushf
inc
push
repnz
out
cli
enter
subb
xchg
mov
jmp
popa
nop
add
movsb
sarb
fdivrl
add
fistps
push
inc
je
lret
lods
lock
mov
int3
ds
jns
mov
pop
movsb
jne
sub
idivb
mov
jae
xor
or
push
mov
int3
fs
jns
jb
and
jnp
add
sbb
adc
cmp
push
or
test
and
mov
dec
xor
push
hlt
or
ret
into
scas
pop
sbb
mov
out
inc
sub
out
pop
dec
xchg
mov
in
cs
jle
daa
dec
js
test
adc
or
vshufpd
cld
lods
push
in
pusha
pop
and
mov
iret
add
and
mov
fdivrs
cmp
sar
push
xchg
xor
pop
mov
mov
jmp
test
inc
iret
mov
sub
mov
testb
fisttps
and
in
adc
call
decb
inc
insl
fs
dec
mov
xor
outsb
add
insb
pusha
lods
data16
sub
jp
cmp
inc
xchg
leave
icebp
mov
int
pop
jae
push
lods
push
imul
into
repnz
pusha
or
das
dec
cmp
push
xor
inc
dec
mov
pop
filds
xchg
push
shrl
lock
push
adc
jne
outsl
cmp
pushf
leave
mov
or
fpatan
lods
xor
inc
add
cmpsl
ror
adc
inc
pop
sbb
jp
mov
test
andl
stc
pop
cmp
enter
mov
outsb
push
cld
push
fimull
bound
mov
push
sbb
movsl
mov
pop
jle
jnp
lods
add
add
leave
shlb
xor
dec
inc
push
pop
cltd
negl
clc
cmp
jae
inc
sub
push
and
push
out
push
mov
sbb
dec
stos
dec
in
je
sbb
mov
repz
mov
out
cmp
push
loop
je
inc
cmp
sub
andb
shll
ret
mov
int
or
jb
leave
loop
push
pop
sbb
fstpt
cmp
in
das
inc
iret
enter
fists
mov
jae
lret
jge
sbb
fcomps
and
jbe
cmc
ret
and
loope
dec
int3
mov
ret
xchg
inc
add
fwait
clc
push
loope
mov
ja
popa
fucomip
mov
xchg
loopne
xor
pop
jo
jge
sti
clc
test
push
xlat
mull
add
pop
aas
jo
popf
jle
cmp
adc
pop
sbb
int
outsl
push
inc
xor
mov
repz
cltd
jb
and
cltd
xchg
mov
in
sub
adc
xor
gs
fistpl
popf
mov
repnz
repz
mov
push
out
arpl
int
jg
and
out
jle
push
leave
int
sahf
xor
cwtl
cmc
push
jmp
xor
int3
clc
jo
push
mov
aas
cmp
and
add
jp
add
mov
dec
es
stc
roll
ss
adc
lock
out
cmpsl
sbb
cmpsl
sub
and
sub
cli
divb
cmp
jb
xchg
mov
mov
lock
pushf
insl
or
cmpsb
repz
shll
xor
add
xlat
mov
cltd
mov
aas
and
leave
xor
sub
pop
rorl
ja
cmp
mov
jmp
dec
out
sbb
data16
lret
sbb
mov
mov
ficompl
jnp
ss
in
ss
pop
scas
loop
js
out
subb
sbb
dec
mov
push
pop
inc
in
enter
sti
inc
out
push
push
stos
push
jnp
insb
jp
sub
dec
adcb
mov
nop
mov
pushf
leave
movsb
pop
jne
adcl
shl
sarl
and
out
and
mov
sub
pop
movsl
inc
xchg
add
add
and
pop
adc
inc
in
cmp
push
push
mov
inc
mov
bound
std
dec
jne
cmp
xchg
lret
xor
jecxz
dec
or
sub
sbb
push
and
aas
test
pop
inc
idiv
shll
ficoms
arpl
hlt
mov
add
mov
xchg
stc
or
popf
mov
mov
sub
pop
mov
cwtl
ret
dec
stos
xor
xor
fistpll
daa
in
cmpsl
sbb
addb
in
orb
sbb
mov
gs
fstl
push
mov
sarl
dec
sbb
mov
cmp
outsl
pop
sbb
std
push
daa
mov
dec
clc
mov
aad
push
cmpb
inc
inc
fildll
ja
xor
inc
jge
inc
mov
push
scas
jnp
adc
jns
cmp
mov
negb
bound
dec
or
hlt
arpl
pop
xchg
cmpb
mov
xchg
loopne
and
adc
call
and
orb
push
or
mov
inc
fs
mov
and
mov
test
popa
xor
xor
out
adc
sarb
xchg
cmp
adc
iret
and
ds
std
ljmp
sahf
jne
roll
or
andb
inc
repnz
xor
mov
hlt
add
getsec
ds
or
outsl
inc
je
mov
cld
das
mov
xchg
adc
sub
fsubs
loopne
jo
les
andb
ljmp
and
pop
xchg
cmpsb
out
pusha
xchg
aas
push
jge
inc
repz
clc
sahf
xor
adc
jge
mov
je
xchg
cwtl
fisttpll
mov
jbe
sub
outsl
fldenv
add
lret
pop
xor
lock
xchg
lret
xor
inc
ror
scas
ss
push
fildll
push
mov
sbb
ret
sbb
push
dec
in
add
sub
fsubrp
cmp
jbe
shl
mov
dec
jle
mov
push
pushw
in
out
xchg
xchg
mov
test
dec
jecxz
es
xchg
ss
incl
add
xchg
push
enter
jb
lea
imull
xchg
push
xor
adc
mov
mov
sbb
in
loope
rorl
mov
mov
sub
sbb
sbb
jne
jge
inc
into
enter
cmc
aaa
repz
push
std
adc
enter
call
aas
adc
pop
or
fists
clc
mov
push
dec
push
std
mov
push
imul
stos
push
xchg
cmp
test
enter
call
mov
addl
or
adc
loopne
divb
xor
fs
pop
jge
adc
aam
cmp
jp
icebp
sbb
cmp
ja
xchg
out
fwait
and
adc
inc
movsl
test
adc
pop
rcrl
scas
std
jno
lahf
mov
in
insl
call
icebp
das
fcoms
dec
andl
es
sub
add
lea
icebp
push
ret
and
cmc
push
repnz
xor
je
pop
mov
lea
int
loope
jnp
shl
pop
icebp
mov
dec
xchg
dec
cwtl
enter
mov
lea
mov
dec
jecxz
pop
sbb
in
dec
jno
fstpl
push
push
sub
inc
shll
pop
lea
jecxz
jns
push
movb
dec
dec
sub
pop
lahf
js
mov
cmp
or
mov
lea
inc
punpckhbw
mov
mov
push
jae
or
ret
sbb
insb
sti
pop
push
dec
mov
test
lahf
into
mov
push
or
mov
imul
addr16
xchg
jno
scas
repz
ret
sti
mov
ret
mov
lods
fistpl
jecxz
mov
movsb
xchg
xor
xor
daa
inc
sbb
movsl
sub
sub
lret
jo
sbb
sbb
iret
ret
push
mov
jecxz
out
cs
mov
xchg
dec
mov
das
out
mov
mov
and
fiaddl
bound
cs
in
mull
repz
adc
xchg
xchg
xor
pop
sbb
xorb
lea
mov
adc
sub
sbb
dec
bound
in
leave
lea
add
push
jmp
jnp
cmp
into
ja
adc
cmc
in
sti
adc
or
jecxz
in
test
std
movsb
sbb
test
stc
and
cs
lods
ja
fcmove
sbb
int
inc
test
pop
or
cmp
mov
and
fsubr
push
rcrl
add
pop
lcall
imul
ret
jo
test
cli
imulb
pop
xchg
jg
push
lahf
cmp
jns
clc
sbb
sub
and
outsl
aam
gs
lcall
movsb
test
or
enter
pop
and
sbb
addb
pop
sbb
xchg
xchg
adc
inc
aas
pop
dec
cmp
and
sub
andl
push
dec
pop
jnp
mov
inc
adc
or
dec
dec
ja
ja
xchg
or
inc
arpl
lock
or
insb
push
aas
jg
jbe
ror
cmpsb
cwtl
scas
push
sub
and
pop
adc
cmc
inc
xor
mov
xor
in
sbb
mov
mov
inc
jno
imul
and
add
andb
test
insb
lods
add
jg
sub
sub
and
dec
out
mov
fcmovne
sbb
fdivrs
out
mov
into
sbb
lcallw
jno
pop
std
push
loopne
pop
mov
dec
fcomps
sbb
mov
mov
mov
es
not
jecxz
push
je
and
cmpsb
xchg
push
push
add
xchg
adc
cmpsb
call
xor
gs
inc
sub
lock
lea
fdivl
or
mov
mov
mov
test
xchg
inc
cmpsb
bound
inc
cmp
mov
dec
mov
and
or
stc
arpl
idivl
mov
push
iret
dec
leave
stos
add
inc
inc
or
pop
xor
leave
and
or
lret
mov
jg
ret
mov
cli
enter
mov
mov
cmp
mov
iret
cmc
nop
pop
inc
dec
bound
in
push
lret
and
bound
or
jo
clc
add
fwait
pop
sbb
sub
aam
fcoms
lds
dec
fnstenv
call
mov
xor
cli
stos
xchg
out
lods
pop
loop
xchg
test
inc
mulb
scas
inc
in
std
cmp
test
pop
xchg
shll
mov
mov
fucomp
mov
sub
jns
pop
mov
ja
or
movsl
inc
lods
iret
dec
sub
lret
jno
insb
adc
mov
ljmp
loop
testl
rcpps
inc
sahf
xchg
insb
ja
js
dec
add
adc
pop
push
insl
jnp
rorl
repz
sub
mov
sub
test
pusha
mov
in
aas
push
outsl
and
aad
sahf
jecxz
jnp
mov
and
xorb
loopne
push
pop
negb
ja
xorb
pop
insl
sbb
aaa
cld
aas
mov
jmp
lea
pop
xor
loope
aad
mov
pop
loop
push
or
data16
sub
add
add
sbb
insl
sbb
arpl
test
scas
push
lret
int
add
xor
cmp
xor
push
adc
jns
mov
jge
push
add
fldcw
cld
cli
sbb
jo
xor
xlat
mov
mov
pop
mov
cwtl
or
dec
sbb
push
mov
sbb
imul
ret
mov
cmc
ror
mov
push
repz
in
jo
adcl
call
gs
loope
push
add
inc
stos
pop
sub
jge
sarl
push
aas
mov
pushaw
decl
mov
sub
fwait
dec
or
sahf
nop
push
push
shlb
popf
push
sbb
lea
nop
clc
sbb
lahf
pop
ret
sbb
xchg
push
ja
ret
aas
jns
jp
in
lea
popa
test
mov
push
fsubr
lods
jne
sub
sbb
add
clc
data16
hlt
pop
push
in
mov
cmp
cmp
shll
sub
out
sbb
sub
cmp
enter
or
and
ret
adc
cwtl
pop
mov
in
sti
jge
ja
or
mov
dec
xchg
adc
mov
xchg
cmpl
clc
dec
adc
jns
repnz
mov
bndstx
sub
jo
mov
decl
dec
shlb
int3
pop
mov
adc
es
cld
push
jecxz
in
int
shlb
jecxz
inc
mov
ljmp
jae
xor
xor
mov
inc
or
inc
jne
lods
insl
pop
pop
popf
xor
cmpsb
arpl
cmp
pop
lcall
sub
dec
std
fnstcw
mov
fisttpl
or
sarb
mov
sub
add
dec
jno
outsb
mov
jp
das
jle
dec
push
ret
fisubrs
mov
jns
push
add
inc
aad
push
shrb
pop
shl
stos
jp
dec
mov
cmpsb
ss
mov
sbb
fwait
outsb
cmc
mov
adc
or
std
pusha
daa
loop
push
outsl
pop
fcomp
loopne
mov
inc
loop
mov
add
cmp
mov
je
call
aas
push
and
gs
cwtl
inc
add
cltd
xchg
or
ja
xor
incl
pop
jg
jmp
cmpsb
mov
pusha
lods
mov
frstor
flds
dec
cmp
push
das
xor
sub
cli
add
loope,pt
xor
sbb
and
dec
pop
rcll
ss
xor
hlt
cmp
adc
sbb
inc
cmc
jp
cld
lcall
adc
rcl
sub
or
mov
adc
and
sbb
jle
push
or
aad
jno
stos
adc
nop
mov
lret
imul
aaa
shrb
flds
stc
ret
dec
in
dec
out
out
inc
mov
add
stos
inc
test
dec
ret
sub
pusha
jge
cli
fiaddl
push
dec
add
aam
xchg
jecxz
sub
hlt
push
sbb
or
xchg
lret
cmp
sub
sbb
ret
push
mov
mov
xor
add
in
iret
repz
cmp
sahf
sbb
add
in
pop
xchg
mov
pop
xchg
ds
lret
ss
stos
add
and
das
push
jnp
ftst
pop
and
cltd
fistpl
lock
jno
fdiv
adc
out
div
jle
adc
shll
movsb
data16
sti
lock
add
rclb
xor
add
xor
imul
bound
dec
adc
shrb
or
out
in
jnp
xor
jns
and
cmp
jae
cmp
adcl
push
fwait
or
jmp
jp
dec
jle
cwtl
repnz
jg
aas
popf
add
dec
cltd
repnz
fdivs
lods
mov
jl
jecxz
call
fwait
mov
imul
adc
enter
add
dec
mov
or
jmp
enter
stc
fsubrs
inc
bound
ret
outsb
sbbb
mov
or
ja
sbb
sbb
pop
loope
fdivs
inc
jnp
jecxz
and
xchg
rsqrtps
cmc
adc
xchg
mov
daa
add
int
push
adc
dec
push
lahf
mov
fists
xchg
stos
add
push
jae
push
mov
mov
pop
insl
popf
rorb
adc
mull
lds
jg
imul
sti
inc
and
xchg
pop
fcmovne
lahf
lcall
mov
xor
mov
pop
add
test
ja
ja
push
pop
mov
inc
push
ret
jbe
test
repnz
stc
push
stos
fisubrl
fcomps
addl
push
xor
xchg
xchg
orl
clc
jle
ret
fs
shlb
push
lret
adc
and
roll
dec
inc
inc
insb
je
jae
pop
pop
aas
dec
sbb
fdivs
sub
aas
inc
mov
mov
cmp
sarb
daa
fisttpl
or
fwait
push
je
repnz
fs
sbb
xor
fs
sub
pop
add
mov
lret
insb
mov
popf
dec
xchg
mov
jnp
and
pop
or
cmp
insb
aas
test
and
mov
mov
pop
push
aad
in
jns
shl
inc
pusha
or
test
and
movsl
int3
mov
leave
inc
clc
lods
xor
stos
adc
negb
lret
repz
test
int
jo
xchg
outsb
sti
popf
sub
fildll
and
xor
jns
popa
shll
rcl
mov
push
or
sbb
inc
test
scas
mov
xchg
outsb
xchg
or
cld
sbb
cmp
lcall
enter
lret
hlt
xchg
add
push
sub
lret
jp
stos
dec
adc
loopne
into
lahf
push
sbb
mov
mov
cmpsl
lret
pop
cltd
mov
arpl
mov
mov
pop
shll
xor
pop
jmp
mov
add
sti
fistpll
fwait
mov
push
ret
mov
cs
or
jp,pn
out
push
add
and
aad
idivl
fs
push
mov
pushf
adc
xchg
mov
fwait
sub
or
shll
or
shlb
cli
mov
cmp
dec
jo
aaa
mov
int3
or
cmp
fs
aad
les
add
pop
inc
push
cmp
das
fwait
insb
mov
mov
inc
data16
inc
out
lea
cwtl
cmpsb
fwait
push
mov
mov
mov
sub
lods
inc
mov
adc
nop
das
or
test
jns
test
jne
aam
adc
fs
xor
jmp
enter
lret
xlat
rolb
fcos
and
movsl
push
or
adc
cmpl
out
xchg
icebp
or
outsl
push
clc
pop
pop
sahf
lds
daa
jle
ds
sbb
xchg
fisttps
cltd
mov
stc
bound
dec
sub
sub
ja
dec
jp
mov
scas
fsubl
aaa
mov
mov
jmp
mov
call
adcb
leave
pop
std
pop
das
scas
and
pop
fmull
mov
mov
ret
je
ja
lods
mov
mov
xchg
cmp
test
popf
std
jmp
fidivrs
nop
lds
and
push
pop
fadds
push
sub
mov
jge
lods
or
cs
lods
mov
lret
fmuls
mov
les
lret
movntps
xorb
in
xlat
push
sbb
jl
xchg
daa
xor
int
mov
lahf
test
mov
or
dec
sub
jg
pop
dec
roll
jmp
push
pop
xchg
adc
incb
int3
jp
jns
mov
lea
mov
ja
sub
into
xchg
jnp
push
and
das
push
adcl
aaa
mov
loop
and
daa
mov
xchg
inc
push
lahf
mov
mov
push
inc
pop
dec
mov
movsb
sbb
call
psubsb
fwait
out
xor
aaa
ja
add
out
int3
mov
pop
pop
cmp
pusha
in
jns
xorl
out
rol
repz
loop
loope
mov
lret
mov
popa
rcl
sbb
cmp
sbb
orb
mov
mov
repz
ret
lea
and
negl
hlt
ja
cmpsl
out
push
add
or
dec
rol
rolb
and
or
pop
pop
scas
neg
cmp
jp
clc
sbb
imul
xor
inc
mov
pushf
xor
jmp
and
sub
jmp
pushf
adc
popa
inc
faddl
and
and
cmp
push
sbb
cmp
sbb
out
pop
cmp
aaa
lcall
push
aas
lahf
jbe
cld
sbb
and
or
lock
mov
or
xchg
ljmp
fst
push
aaa
fistpll
rcrb
arpl
mov
push
add
in
loopne
addr16
jnp
std
push
adc
mov
in
cmp
push
in
inc
pop
or
les
push
popa
movsl
sbbl
dec
loope
dec
push
or
pusha
popf
sub
and
push
jp
add
dec
jae
inc
push
fnstcw
pop
fistl
mov
movsl
sub
push
mov
xchg
imul
jno
mov
xchg
pop
movsb
sub
xchg
push
sbb
xchg
xor
cmp
or
add
test
mov
dec
mov
mov
mov
xchg
arpl
sbb
fcmovb
sub
pxor
mov
adcb
insb
push
cmp
stos
push
hlt
push
lock
out
mov
out
fmuls
out
imul
ret
cli
ffree
cmp
jecxz
inc
xchg
ss
pop
push
cmp
adc
pop
mov
push
pusha
out
jns
jle
xor
jge
xor
lods
into
adc
repnz
insl
roll
mov
lahf
int3
ret
out
jne
into
inc
inc
pop
xchg
jns
mov
arpl
or
dec
push
mov
jo
jge
std
scas
int3
leave
scas
xor
inc
cmpsb
mulb
xor
fsubs
ficoms
mov
fisubrs
jecxz
rorl
aaa
ret
cmp
stc
cmp
jae
dec
lret
cltd
fidivs
lcall
movsb
inc
cs
out
les
mov
inc
jae
sbb
adc
loope
fildl
in
jno
sbbb
je
cmp
cmpsb
pusha
pop
add
dec
aad
lods
test
scas
xor
dec
sbb
stos
mov
xor
push
cld
les
mov
mov
sub
addr16
dec
js
mov
daa
jnp
xchg
in
sub
cmpsb
rorb
xor
mov
lret
and
dec
mov
and
xchg
insl
xchg
imul
cmpb
aam
popa
aaa
inc
outsb
or
leave
outsb
cld
adc
or
rcll
adc
cmp
and
fidivrl
mov
cmp
mov
lcall
add
clc
inc
dec
sub
xor
cs
fisttpll
jnp
pop
or
cmpsl
dec
outsl
shll
mov
mov
in
cmp
xor
in
mov
pop
push
out
push
mov
push
incl
push
popa
sub
cltd
ret
adc
sub
lock
push
negb
and
jbe
imulb
xchg
xor
mov
stos
pop
imul
out
enter
lock
xlat
data16
test
cmp
and
add
jl
clc
data16
inc
mov
push
cmpsl
inc
xchg
addb
push
icebp
sub
aad
dec
dec
leave
or
mov
popa
dec
add
push
js
mov
dec
ret
faddl
cmp
mov
movsb
sub
cmp
in
jecxz
out
sub
ficoml
xchg
inc
fldcw
lahf
clc
dec
inc
loop
mov
cmp
nop
mov
add
xchg
cmp
lods
dec
mov
ja
ror
mov
es
push
sub
xchg
cmc
iret
mov
jns
xchg
aaa
xlat
movsb
pusha
mov
clc
or
add
adc
pop
mov
addr16
pop
js
pusha
pushf
push
mov
ljmp
movsb
mov
push
lock
out
sub
push
or
push
loope
dec
pop
adc
ret
adc
call
ret
fbstp
sub
mov
rclb
dec
dec
ds
dec
pop
pop
xchg
cmp
xchg
cmp
pop
adc
push
stc
adc
ret
push
std
leave
je
mov
fs
les
dec
repnz
mov
inc
dec
inc
mov
cmp
stos
sbb
cmpsl
add
sub
in
push
subb
leave
iret
repz
add
fnstenv
loope
aas
ss
xchg
cld
lret
jmp
jmp
mov
add
outsl
repz
loop
cwtl
adc
into
fists
aas
adc
popa
sti
adc
sahf
fcmovne
inc
mov
testb
xchg
das
shl
pop
jo
mov
les
push
movsl
mov
and
xchg
xchg
stos
idivl
mov
xchg
fstp
test
push
add
mulb
sti
pop
and
dec
loopne
mov
cmpsb
jge
icebp
mov
add
dec
mov
sub
ds
xchg
xchg
out
xchg
fsts
jns
xchg
cmpsl
sti
lcall
xlat
lea
pop
cli
test
xor
or
arpl
cli
jns
mov
adc
rclb
mov
les
xor
inc
lcall
xor
repz
cld
popf
cs
mov
loop
stc
test
push
adc
fs
or
push
das
mov
ffree
rcll
sub
call
push
pop
sub
add
jg
call
imull
add
sub
sahf
sub
std
add
test
sahf
mov
mov
enter
clc
mov
hlt
data16
cmpl
data16
loop
xchg
aad
hlt
jns
test
ss
mov
push
addl
addr16
push
cltd
int3
sbb
out
in
aad
shl
ss
cwtl
aas
lea
pop
test
jl
lret
push
insl
mov
or
mov
push
jae
stos
add
cmp
icebp
jo
pop
push
test
cli
sub
mov
scas
jns
mov
popa
mov
in
cwtl
jne
mov
cmp
arpl
xchg
jl
jns
mov
insl
mov
pop
or
pop
jl
loope
xor
stos
loopne
and
popf
pop
int3
aad
lea
sbb
mov
ss
xchg
adc
cmp
insl
fdivrl
push
xchg
test
test
inc
loope
aas
arpl
lock
repnz
cli
xor
mov
jge
push
dec
decb
or
xor
ljmp
aam
out
mov
and
jae
mov
popa
fwait
inc
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
